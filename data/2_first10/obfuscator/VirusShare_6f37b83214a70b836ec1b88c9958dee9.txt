push
call
ret
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
push
sbb
in
addl
push
push
push
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
adc
add
add
add
add
adc
add
add
and
add
xchg
sti
push
add
adc
add
add
add
add
add
fsubl
lret
cmc
and
and
outsl
outsl
outsl
outsl
movups
add
adc
add
add
add
cmp
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
cmc
xchg
js
ret
int
xchg
rcrb
mov
add
sahf
add
into
inc
push
les
push
addr16
adc
mov
mov
ljmp
mov
outsl
filds
nop
pop
pop
test
loopne
cmp
inc
push
cmpsl
or
push
aad
jp
stos
movsl
jb
xor
rorb
and
and
lods
jae
call
xchg
mov
pop
into
pop
sub
cmpsb
add
sub
ret
xlat
jne
cmp
dec
sub
jno
je
add
adc
mov
cld
orb
xor
aad
jbe
adc
mov
sarl
mov
mov
fidivrl
pop
push
mov
xchg
mov
pop
loop
pop
arpl
mov
test
cmp
ja
ret
inc
cwtl
adc
aaa
repnz
jo
xchg
icebp
xchg
fmull
imul
xchg
fimull
xchg
push
lcall
jnp
fbld
mov
add
sahf
pop
cmp
sbb
aad
aam
dec
lcall
into
movsl
lock
lret
jno
in
and
aam
dec
add
add
testb
cmp
jo
call
lahf
sub
push
dec
adc
xchg
xor
xor
xor
ret
push
lods
imul
jae
pop
aaa
dec
js
push
xchg
xor
lcall
sub
addr16
popf
repnz
pop
push
adc
sub
jb
popa
mov
rclb
lret
sbb
sub
mov
cmp
shl
cwtl
hlt
sarl
xor
mov
ja
inc
inc
orb
xchg
imul
outsl
aad
jg
leave
outsl
aad
testb
jmp
das
adc
fcmovnu
mov
or
jmp
inc
push
jns
subb
nop
mov
pop
mov
insb
pop
ret
xor
stos
outsl
jns
cmp
push
call
mov
mul
push
pop
sti
fidivrl
mov
mov
loop
movsl
push
fs
je
test
push
jecxz
jns
inc
pop
push
out
mov
and
popa
cli
std
out
ret
xchg
push
in
clc
ss
lcall
mov
fnstenv
mov
dec
sti
mov
cmp
les
ljmp
dec
and
stos
movsb
cmpsl
mov
xor
lods
enter
aas
cmp
out
push
test
sub
add
aam
mov
roll
in
mov
cmpsl
lds
ljmp
inc
ss
clc
jo
fst
movsb
xchg
or
loopne
mov
fwait
cmp
notb
movsb
ljmp
lahf
mov
mov
outsl
or
aad
mov
stos
sbb
mov
imul
push
sbb
iret
out
clc
stos
pop
fwait
int
push
out
cli
iret
sbb
mov
mov
dec
jge
jmp
inc
adc
cmp
ja
mov
mov
mov
enter
inc
xlat
popa
pop
mov
mov
out
in
and
pop
insl
cmc
or
fdivl
pusha
loopne
cmp
dec
out
test
inc
mov
push
xchg
addl
inc
pop
or
and
cmpl
das
push
jb
ss
daa
cmp
mov
movsb
xor
test
enter
add
dec
in
add
aad
das
aam
sar
aad
jae
test
fsubs
lcall
jne
imul
adc
dec
fldcw
or
fisubrl
in
nop
lret
push
sbb
int
sub
pop
repnz
push
repz
aaa
fidivl
jg
sbb
cmc
cld
dec
insl
adc
mov
jns
add
sub
popa
fisubrs
mov
insb
xor
mov
sti
inc
pop
popf
out
pop
pop
and
outsl
ds
add
fabs
daa
cld
xchg
jo
mov
call
adc
xchg
push
push
cmp
lcall
dec
jae
xor
jg,pt
pop
pop
xor
dec
xlat
loopne
jo
outsb
or
inc
jo
in
imul
jbe
fcmove
cmp
pushf
pop
mov
mov
pop
mov
push
and
jp
mov
lods
loop
fs
mov
lahf
test
or
push
pusha
les
pop
add
popa
pop
fwait
stos
icebp
je
pop
dec
shrl
mov
cmp
ljmp
fsubrp
mov
or
std
hlt
fmuls
jno
pop
cwtl
cltd
das
jae
inc
fmuls
inc
xor
dec
xchg
loope
sub
ret
adc
sarl
notl
ds
pushf
pop
mov
cmp
lods
in
cmp
std
cltd
mov
push
mov
fdivr
push
and
jo
hlt
cmpb
cltd
push
loopne
or
hlt
fbstp
das
ds
or
incb
and
ja
incl
addr16
fldenv
cmpb
sbb
inc
js
xlat
and
sbb
popa
filds
cmpsb
xor
shlb
push
sbbb
cli
cmp
or
into
lret
add
mov
push
add
rclb
inc
or
sahf
jo
ficoml
clc
outsl
dec
rcrb
cmp
aaa
dec
lret
xor
popf
int
outsl
xor
inc
insb
sub
mov
out
mov
cwtl
fcmovne
xchg
push
rcrl
sub
sub
push
pusha
and
movsb
dec
push
xlat
xor
or
mov
stos
adc
dec
leave
dec
mov
pop
mov
int3
fs
js
test
sbb
sub
insl
rcll
pusha
adc
in
ss
xchg
shr
cltd
lds
testl
sarl
pop
aas
jne
adc
out
sbb
mov
sbb
xchg
dec
pop
push
cmc
xor
stc
or
push
mov
lock
test
or
mov
push
nop
xor
das
fwait
xor
test
repnz
sub
sub
std
insb
test
stos
leave
in
and
add
mov
inc
test
inc
and
jmp
outsb
mov
cmp
adc
mov
mov
adc
and
mov
mov
cmc
and
mov
mov
xor
inc
into
and
dec
push
movsl
inc
sbb
mov
bound
inc
pop
xchg
xor
cmpsb
xchg
jne
imul
jg
insl
insb
jle
push
jp
and
xor
fstpt
cmp
sub
stos
lahf
mov
int
inc
jle
sub
fisttpll
bound
dec
insl
ss
repnz
adc
pusha
add
in
div
imul
jl
sub
aaa
dec
xor
loop
stc
cs
loopne
ss
es
ficoml
stc
ror
sub
iret
lret
xchg
pop
stc
xchg
cwtl
insb
pop
mov
pop
cltd
push
cli
dec
xor
icebp
xchg
shll
loop
in
jo
inc
test
xor
sbb
in
hlt
lods
mov
xchg
xor
jp
repnz
mov
mov
mov
idivl
repnz
icebp
mov
into
iret
pusha
inc
adc
outsl
fmull
pop
lret
push
enter
cmova
pop
loop
fcomps
mov
cwtl
dec
mov
fsub
ljmp
cmpsb
jg
add
ljmp
stos
push
and
mov
mov
imul
or
movsl
ret
stc
lock
push
cmc
xchg
xchg
adc
insb
xor
add
mov
push
jge
out
cmp
nop
sub
add
inc
or
cltd
mov
inc
popf
pop
js
pop
pop
sub
jno
inc
fisubrl
sbb
mov
fsubp
adc
scas
dec
xor
xchg
jecxz
stc
mov
sub
sub
inc
jbe
int3
sub
outsb
or
inc
mov
pop
or
or
pop
sub
inc
call
mov
dec
stc
call
jmp
cmpsl
int3
lods
mov
std
or
push
and
inc
loope
imul
leave
imul
aad
rolb
inc
adc
fldt
xchg
adc
je
mov
push
jne
cmp
lret
cmp
cmpsb
mov
push
loop
push
leave
or
sub
sub
or
lcall
loop
cmp
leave
sub
jns
xchg
jb
sbb
sbb
lea
mov
sahf
rcl
ror
or
mov
mov
xchg
out
add
fcoms
iret
or
or
jns
xchg
ljmp
dec
loop
test
je
outsb
in
insb
in
incb
gs
daa
aaa
inc
adc
fcoms
jecxz
adc
cmp
dec
push
inc
pop
mov
shr
add
fwait
mov
pop
push
cmp
pushf
notl
test
setge
xor
lret
incb
ds
out
out
movsb
divb
sbb
jge
bnd
push
and
mov
aad
repnz
lea
nop
sub
inc
int3
lods
mov
xchg
add
scas
rol
stos
mov
mov
ret
imulb
ds
or
inc
jno
aam
sub
shrb
mov
xchg
subb
insb
fsts
xchg
mov
mov
insl
sbb
ljmp
scas
sbb
lds
addr16
push
inc
push
xor
lahf
lahf
sbb
icebp
ret
rcrl
cmc
jle
xor
lcall
xor
mov
and
sub
inc
mov
daa
lcall
icebp
mov
push
push
loope
in
inc
push
addr16
imul
outsb
lods
stos
jnp
adc
or
sbb
ss
sub
cmp
loop
fisubs
jno
dec
inc
lock
mov
icebp
pop
sbb
mov
xchg
movsl
cmpsl
xchg
mov
mov
pop
jmp
pusha
mov
scas
in
pop
lds
pop
lahf
mov
add
inc
fildll
push
pop
cmp
in
popf
xor
xchg
lock
mov
ljmp
add
loope
sub
xor
sbb
cmp
movsl
inc
inc
cmp
cmpsl
jo
stos
repz
icebp
fcmovnb
cmpl
and
insl
in
and
adc
dec
fld
xchg
aam
insl
sub
cmp
mov
fwait
push
js
mov
cmc
idivl
pop
mov
mov
mov
lock
mov
sahf
sub
mov
repz
inc
mov
ds
hlt
in
push
icebp
es
es
ja
lods
cmpl
lret
mov
xchg
push
fstpt
clc
ds
iret
loope
or
fisubrs
cmp
jo
aaa
das
das
dec
inc
out
scas
sbbl
lahf
fisubrs
cmp
data16
xchg
inc
xor
mov
push
rorb
mov
stos
je
ret
out
into
xchg
xchg
xor
sub
mov
jl
mov
lods
push
repz
in
or
rclb
xor
mov
jb
test
mov
inc
ret
adc
and
cmp
and
or
fistpll
or
adc
mov
imul
cmp
push
mov
lods
lcall
jp
in
push
or
and
xchg
mov
aad
mov
insl
push
xor
pop
mov
pop
orl
xlat
pusha
pop
dec
cmp
jge
mov
mov
mov
loop
sub
inc
pop
loope
add
pop
cmpsb
jge
or
ficoml
jnp
xor
cmp
xchg
mov
idivl
mov
mov
cmp
adc
push
lret
cmovno
xor
in
imul
inc
jge
into
add
inc
imul
cmp
sub
push
hlt
movsb
pop
pop
aas
sbb
cwtl
fwait
aas
fwait
outsb
adc
negl
sub
int3
arpl
scas
fs
sti
mov
jg
in
mov
xchg
jl
xchg
mov
insl
mov
mov
pop
sar
out
es
adc
pop
sub
pop
mov
out
sbb
and
pop
stos
in
mov
dec
sub
dec
repz
jecxz
add
cmp
mov
mov
jle
jb
and
and
and
mov
lret
adc
pop
fisttpl
mov
dec
movsb
call
fdiv
std
sub
rorb
jg
repz
dec
lods
and
sub
lcall
jne
test
push
scas
fmul
dec
out
cli
aaa
ret
mov
bound
aam
sbb
dec
imull
push
fucomi
sbb
sub
fists
fistl
popf
adc
add
ds
push
pop
addr16
nop
imul
in
mov
mov
and
jl
rcrl
or
fidivl
mov
hlt
push
push
sub
push
je
aad
mov
adc
test
sbb
pop
addr16
mov
pusha
cs
pop
dec
lds
xchg
inc
pop
std
sbb
mov
es
adc
popf
xchg
xor
mov
rorb
lds
dec
cmp
push
xchg
pop
pop
out
or
xor
sbb
or
push
push
sub
jle
divb
lret
mov
fbstp
repnz
mov
cmp
das
xchg
jecxz
inc
shll
and
pop
pushf
mov
sub
icebp
push
dec
xor
test
push
jge
bound
xchg
popa
push
cmpsl
repz
add
push
fsubl
sbb
fmul
scas
and
xor
js
and
leave
or
sub
shl
cli
jbe
les
jo
or
xor
sub
sbb
fiadds
inc
test
dec
jmp
push
mov
xchg
or
movsl
mov
insl
mov
out
fildll
xchg
fistps
cmc
int3
sbb
push
imul
fisttpll
test
adc
mov
mov
mov
cli
jp
loopne
inc
out
sub
cmp
fwait
arpl
and
sub
add
imulb
bound
sub
xrelease
sub
in
xor
sbb
mov
pusha
dec
inc
arpl
jmp
xchg
ret
stos
mov
adc
ficomps
lcall
push
ljmp
xchg
pusha
mov
inc
dec
fmul
outsl
addl
fisttps
rcrl
sbb
leave
shrl
enter
fadds
je
sbb
sbbl
jne
xor
adc
mov
sub
nop
addr16
sub
lret
ja
push
daa
dec
fsubrs
lret
jnp
mull
pop
shl
ja
pop
rolb
jo
sub
jbe
push
andl
mov
fiadds
inc
dec
xchg
cmp
xchg
insl
jmp
dec
movl
test
stos
scas
sub
pop
in
xor
and
xor
shrb
or
shrl
push
mov
in
mov
pushf
ret
jno
jecxz
sti
fisubrs
sbb
pop
jmp
out
subb
lahf
lahf
shrl
int3
stos
in
lcall
mov
or
pop
pop
mov
xchg
into
in
js
test
mov
inc
xor
out
push
jecxz
in
xchg
xor
sbb
pusha
aas
pop
iret
sub
push
repnz
jnp
ljmp
mov
jge
xlat
in
dec
repnz
or
mov
and
cld
ret
mov
fstl
loopne
sahf
pop
xchg
or
arpl
mov
lcall
and
repnz
adc
sbb
faddp
mov
mov
mov
jp
pop
insb
sti
pop
insb
icebp
xlat
mov
push
inc
cmpsl
clc
adc
dec
addb
mov
jle
jmp
popa
jle
test
cmpsb
iret
std
xor
shrl
inc
xor
mov
pop
xor
es
inc
xchg
enter
cmpsl
dec
mov
xchg
mov
xor
frstor
in
out
in
out
and
enter
fstl
add
dec
adc
mov
loop
xor
stos
imul
inc
enter
bound
push
mov
pop
jnp
pop
test
xor
aas
jmp
fidivrs
pop
out
pop
cs
sbb
adc
xchg
cmpb
or
addl
xor
mov
and
sub
call
adc
xchg
jg
or
dec
arpl
lods
jle
nop
mov
jge
sbb
pop
and
xchg
jge
dec
or
inc
cltd
inc
push
lahf
lods
jmp
fisubrl
push
mov
aas
add
pop
je
ja
addl
or
sti
mov
outsb
push
lcall
pop
inc
dec
xchg
mov
aam
clc
mov
or
mov
jecxz
pop
mov
imul
inc
or
dec
fcmovne
loopnew
les
sub
cmp
pmulhuw
movsb
aaa
imul
call
or
sub
fwait
xchg
mov
sub
mov
inc
insb
inc
fwait
mov
add
loopne
mov
cld
gs
popf
in
jg
flds
repnz
and
sbb
mov
dec
sbbb
shl
sti
jp
lret
dec
xor
cltd
insb
mov
stos
add
test
mov
mov
mov
lret
imul
pop
cmpsb
shlb
mov
push
fdivl
movl
dec
jmp
dec
mov
loope
add
sbb
add
jno
sub
jmp
add
inc
pop
dec
mov
push
xchg
stc
or
jp
pop
or
jl
and
cmp
xchg
arpl
adc
pcmpeqw
push
stc
mov
es
mov
push
fucomi
mov
xchg
and
test
arpl
orl
in
outsl
pop
pop
loope
pop
pop
xchg
lds
jecxz
lcall
or
push
es
aam
movsl
lock
mov
fdivr
data16
mov
or
jno
or
mov
rcr
adc
sar
sub
fs
andb
ljmp
cmp
sbb
pop
mov
es
inc
jecxz
popa
lods
or
cmp
cli
add
insl
repz
jecxz
data16
add
dec
cmp
or
mov
sbb
mov
outsb
in
cmc
outsl
jbe
xor
cld
out
insb
dec
or
inc
test
push
dec
or
pop
out
jnp
cmp
dec
xchg
lret
mov
cmpsl
ficoms
test
test
push
aaa
vcvttss2si
fwait
cltd
stc
xchg
ljmp
cmp
lds
mov
add
adcb
jl
std
jmp
xchg
fisubrs
cmpl
push
ds
jp
cmp
adc
addr16
shlb
jg
das
xor
pop
jbe
test
je
in
and
xchg
sbb
out
scas
jbe
cmpsb
mov
mov
push
jmp
pop
push
mov
xor
test
std
or
cs
faddp
sub
ret
push
je
hlt
in
inc
daa
in
pusha
daa
or
dec
pushf
or
push
imul
ja
nop
adc
repz
and
adc
test
fcmovb
pop
sub
pop
es
mov
popf
cmp
xchg
hlt
test
pop
aad
mov
xchg
dec
sub
jnp
push
dec
ljmp
cli
outsb
mov
xchg
mov
push
mov
scas
inc
mov
mov
loope
pop
push
adc
xor
mov
mov
in
mov
out
mov
insl
clc
lods
cmp
in
jp
add
jb
test
cmp
ss
aam
and
push
or
and
push
repnz
gs
inc
xlat
sub
in
jns
lock
sub
cmp
xor
mov
push
inc
cmc
sbb
popf
push
pushf
ret
das
xchg
add
mov
ret
in
in
dec
or
add
xor
xchg
mov
xor
pop
fstpl
pop
out
sbb
pushf
add
mov
loopne
imulb
mov
aas
rol
pop
xchg
lret
mov
sbb
mov
mov
push
sti
inc
xchg
xor
ds
xor
sub
pop
roll
push
pop
test
jns
ja
scas
pop
sub
add
fldt
pop
xchg
dec
xchg
xchg
inc
xchg
xchg
popa
pop
adcb
inc
movsb
xlat
xlat
ss
into
inc
mov
jae
stc
loope
cmpsl
sahf
and
xor
fidivrs
adc
in
mov
lahf
addb
inc
add
pop
add
mov
vphaddbd
sub
fimull
outsl
loopne
jne
or
scas
ret
mov
mov
mov
mov
movsb
imul
std
popaw
xor
lcall
dec
cmp
push
pop
add
rol
mov
mov
mov
sahf
clc
mov
cmp
push
sub
and
adc
mov
call
test
or
cmp
jnp
sub
lea
aaa
icebp
sahf
mov
jbe
mov
jbe
mov
les
jne,pn
in
fisttpll
outsl
insb
inc
cmpsl
lods
cmp
rcrb
inc
test
movl
sbb
rcrl
movsb
push
movsb
mov
sbb
adc
mov
ret
mov
mov
pop
dec
pop
jo
or
mov
mov
xchg
or
imul
cmp
mov
subb
jl
dec
hlt
gs
mov
cmp
dec
push
clc
xor
and
test
inc
into
cmp
add
sub
push
fnstcw
ret
les
fildl
mov
shrl
xlat
andl
mov
mov
xchg
jnp
push
xor
addr16
lock
pushf
subl
dec
cmpl
xlat
stos
adc
imul
fidivs
sysenter
ret
divb
clc
xor
inc
and
mulb
jns
pop
inc
mov
sbb
mov
aaa
mov
xchg
test
sub
nop
out
mov
jl
mov
cmpsl
movsl
fwait
xchg
push
loope
clc
imul
xor
testb
cld
mov
push
mov
lds
fildll
pop
inc
dec
mov
pop
mov
in
test
jnp
xchg
push
dec
xchg
xlat
in
xchg
pop
dec
add
cmpsl
inc
jg
lahf
jae
rcrl
lods
pop
mov
mov
test
cmpsl
jo
es
push
or
daa
mov
inc
fwait
jno
or
jle
mov
adc
push
das
cmp
sbb
fs
data16
mov
cmpsb
fidivs
and
xchg
mov
sub
nop
test
cmp
scas
out
sub
out
repnz
movsl
inc
push
enter
in
ror
mov
jnp
pop
imul
pop
scas
push
cmp
test
sbb
lcall
push
jb
push
vandpd
xlat
icebp
mov
cmp
dec
das
lods
divb
add
cmp
and
mov
xor
dec
and
mov
cmp
mov
je
ftst
sub
mov
fdivl
jns
outsb
test
dec
rorl
mov
inc
lods
icebp
dec
pop
sub
adc
sub
jp
aam
or
inc
sub
mov
jmp
inc
pop
inc
insl
rcr
jmp
xchg
pop
jge
mov
fcomps
pop
and
test
fisttps
cmpsb
cld
popa
mov
iret
lea
scas
mov
mov
xchg
dec
or
or
sbb
xor
dec
inc
mov
adc
inc
xor
jp
jae
arpl
xor
mov
dec
cwtl
mov
xchg
pop
leave
les
mov
sbb
or
pushf
or
mov
fwait
test
rorl
scas
mov
push
push
jne
or
loope
sarl
pop
aad
insl
stos
push
mov
loope
adc
add
sahf
inc
je
es
test
es
adc
fwait
or
mov
xlat
or
or
fildll
sub
mov
ljmp
inc
cmp
sti
xchg
mov
ret
lock
dec
push
fidivrl
shrl
jno
adc
adc
loop
sub
pop
or
pop
fs
les
jnp
pop
je
lahf
fsubl
or
xor
outsb
dec
cmovns
mov
mov
int
in
rclb
test
sbb
pop
pop
adc
push
ret
lods
inc
adc
test
test
add
xchg
ret
aam
imul
lret
cwtl
push
add
mov
lods
mov
loop
and
ret
adc
xchg
xchg
mov
mov
ljmp
lods
sti
and
iret
mov
ret
jp
push
clc
mov
aas
mov
cli
pusha
test
pop
aad
fs
std
test
lods
mov
loope
lock
and
add
push
out
std
xor
add
push
aad
test
sbb
int3
lcall
cld
jecxz
jnp
mov
jbe
jb
sub
mov
lock
lahf
xchg
pop
out
sbb
outsb
ffreep
stos
jae
imul
and
xchg
lcall
add
and
jb
xchg
ljmp
sub
in
outsl
mov
xchg
mov
adc
mov
push
cmp
loop
jecxz
scas
add
ffreep
sbb
xchg
xchg
adc
movzbl
cmpsl
inc
cmp
mov
sub
pop
mov
mov
flds
and
push
pop
jne
xchg
sti
pop
imul
sbb
mov
jno
testb
and
scas
cmp
sbb
fdivl
imul
je
dec
add
xor
mov
lods
fidivs
pop
xor
mov
test
and
ret
lds
push
sbb
ss
nop
push
leave
ljmp
inc
pusha
jne
std
push
cwtl
lock
mov
pop
andb
mov
inc
shll
push
xchg
xchg
dec
clc
dec
mov
cmp
push
je
ja
add
ret
sar
sti
popf
lods
sub
pop
jnp
popf
out
jno
ret
adc
adc
and
dec
stos
push
mov
sub
iret
leave
fcmovnbe
jbe
jo
adc
hlt
adcb
xor
gs
cmp
adc
mov
in
adc
out
xlat
push
push
dec
jle
lahf
inc
add
and
lods
imul
test
pop
vpunpcklbw
pop
or
xchg
dec
sbb
fwait
pop
stos
popa
inc
iret
fsubr
sub
sti
lock
fdivrs
fwait
cmpsl
std
pop
sbb
jecxz
jae
xchg
fidivrs
fs
or
fistpl
xchg
inc
xchg
fiaddl
add
xor
pop
arpl
adc
mov
mov
xor
sbb
data16
fbstp
stos
jge
or
mov
pushf
xchg
lock
in
mov
dec
jp
mov
sbb
xchg
mov
hlt
dec
gs
adc
add
pop
sbb
cmp
in
cmpb
and
mov
or
add
and
fdivrl
mov
or
push
fwait
add
xchg
in
dec
pusha
das
pop
push
jmp
cs
mov
inc
inc
and
add
fcomps
stc
lahf
sub
lcall
cmp
sub
xlat
inc
in
jne
sbb
push
mov
jl
cmpsl
sarb
mov
aaa
addb
cmpsl
cmp
mov
divl
ja
pop
int3
pop
ss
lahf
aad
jne
inc
scas
fdivrs
pop
out
out
les
stos
imul
push
and
mov
mov
xchg
adcl
test
or
cmp
add
mov
lods
adc
or
pop
dec
cli
jge
mov
jg
dec
adc
pop
mov
fsubrs
imul
leave
cs
push
fsincos
aam
pop
rcl
lea
xchg
pop
xor
push
testb
fs
lea
stos
jmp
mov
mov
subl
mov
movsb
mov
xlat
xchg
push
xor
cltd
pop
jp
in
mov
movsl
addr16
dec
bound
xchg
xor
inc
lcall
pop
mov
je
aaa
cmc
jp
cmp
lahf
ret
jae
mov
xor
push
adc
ljmp
jne
xor
nop
add
pop
testl
xchg
cmp
in
xor
inc
dec
cmpsl
jge
test
rcrb
test
outsb
sub
hlt
inc
mov
mov
push
fldcw
push
jmp
js
and
fisttps
mov
xchg
fsubl
popa
ljmp
aaa
or
sub
sub
imul
aad
sub
sbb
xchg
inc
lods
xor
leave
cmp
dec
mov
push
add
negb
xlat
icebp
jp
and
stos
roll
daa
inc
push
xchg
xchg
lods
add
ljmp
push
cmp
cmp
pop
mov
notb
clc
sub
fabs
or
out
inc
push
add
imul
ret
xor
je
cmp
das
je
movsl
xor
test
test
mov
sbb
fldcw
adc
pop
jnp
js
jb
call
sbb
and
stos
pop
mov
mov
dec
mov
push
enter
dec
and
xor
jmp
leave
or
dec
dec
xor
pop
lahf
sbb
outsb
sbb
xor
int3
aaa
pushf
and
jns
sub
add
sahf
push
in
jecxz
pop
push
jb
divps
jno
insl
sbb
outsl
xchg
iret
push
dec
inc
adc
fstl
inc
push
adc
iret
and
mov
mov
push
mov
jge
jmp
sub
xor
lds
sub
out
pop
jnp
push
jmp
mov
fwait
or
pop
and
dec
rclb
or
mov
sti
out
fildll
imul
iret
fwait
adc
out
imul
scas
mov
shll
pop
cli
shrl
sub
jnp
inc
or
inc
pushf
test
xchg
jge
and
repnz
mov
mov
rcll
jg
in
mov
mov
and
xchg
sub
pop
push
xor
gs
mov
and
gs
addb
push
out
push
in
fs
mov
adc
aad
test
rolb
into
dec
iret
gs
pop
sbb
adc
in
cmpsb
aaa
test
cmpsb
sarb
xor
stc
lret
jecxz
pop
mov
outsl
xlat
jl
jo
mov
dec
scas
fildl
orb
pop
inc
mov
cmp
out
xchg
push
sti
sbb
mov
pushf
pop
inc
push
rcrb
jl
xchg
pop
jae
nop
scas
in
add
int3
mov
mov
lcall
mov
xorb
sbb
shl
or
popa
loope
sub
popa
mov
mov
lahf
movsl
hlt
mov
fisubrl
repz
jmp
push
int
stos
pop
lock
push
bound
mov
loope
shl
sub
nop
pop
je
stc
lds
xchg
hlt
out
clc
sbb
mov
ret
insb
push
jp
popf
lds
mov
adc
es
sub
fsubl
mov
fs
jmp
pop
movsl
adc
mov
xor
or
push
jl
and
xchg
or
in
or
sti
sub
and
mov
sti
xchg
push
fstpl
icebp
mov
cltd
test
sbb
xchg
pushf
adc
add
xchg
test
jnp
jo
shr
int3
inc
stos
lahf
jl
mov
dec
and
mov
imul
jae
jb
daa
scas
and
ret
push
push
popf
or
mov
jl
inc
mov
dec
jnp
data16
sbb
and
push
fwait
cmpl
fistps
fnstcw
cltd
dec
mov
pop
pop
jmp
dec
rcr
sarb
xor
ja
jle
fcompl
insl
rcl
mov
loop
push
sub
scas
mov
loop
dec
pop
fistpl
cmpsb
inc
in
lock
fistpl
mov
fsubl
or
cmp
xor
jge
leave
jecxz
or
fists
sbb
ljmp
sub
fisubrs
jnp
mov
loop
inc
jecxz
jbe
pop
call
push
pop
pop
sbb
xchg
cmp
movsl
adc
lods
cltd
es
jmp
scas
pusha
mov
jno
push
xchg
icebp
pop
xchg
dec
mov
pusha
mov
mov
add
lods
test
adcb
mov
or
std
inc
cmp
mov
push
inc
or
jae
pop
je
cli
push
shll
cwtl
cmp
ja
pushf
cmp
dec
ret
xchg
dec
mov
cmc
jg
jp
push
loopne
adc
jns
jo
or
add
push
sbb
mov
add
push
or
es
jg
test
cs
sbb
mov
jnp
es
sbb
repz
sbb
adc
int
mov
push
mov
test
jo
incb
adc
mov
push
lea
or
daa
xorl
lret
mov
ficoml
push
cmp
cmpsb
loope
sbb
jmp
out
jmp
lret
xchg
pop
fadds
and
insl
push
cs
push
push
mov
cltd
aaa
xchg
add
xor
add
into
cmpl
cmp
jl
loopne
mov
gs
xor
out
jmp
jl
lret
cmpsb
jb
mov
and
xor
inc
pop
cmp
push
pop
xchg
jbe
scas
sbb
dec
xchg
sbb
fcoml
bound
adc
shl
ret
lods
out
dec
push
andl
push
sub
jmp
shll
inc
or
adc
popf
and
cmp
mov
pop
mov
add
push
inc
dec
mov
enter
test
xor
sar
push
mov
int3
mov
sbb
rclb
aam
xchg
add
iret
pop
cli
xor
cmp
test
cmpsl
nop
ljmp
jle
and
mov
push
pop
insb
leave
cmp
mov
mov
mov
int
lods
decb
gs
xchg
idivb
sub
add
cld
jne
push
lock
fisubl
jo
pop
sub
int
lcall
andl
xchg
sub
push
and
stc
bnd
int
fwait
lock
inc
cmpsl
sahf
cmpsl
cmp
pop
insl
js
cld
xchg
xor
mov
xchg
pop
inc
sbb
popf
mov
pcmpeqw
dec
loop
and
into
call
rclb
scas
mov
and
cmpsl
mov
add
sub
jns
nop
je
or
push
aad
fmulp
lahf
or
adc
mov
xor
insb
dec
inc
fidivrs
out
pop
xchg
ds
xchg
repz
lret
push
aad
lea
or
pushf
fwait
rcrb
push
out
adc
movsb
addb
jge
cs
xchg
push
pushf
inc
dec
push
adc
in
lods
js
test
mov
jo
push
pushf
jb
aas
cltd
arpl
ja
inc
mov
sub
loop
mov
imul
add
addr16
ret
pop
jp
pushf
into
leave
push
add
xchg
mov
stc
adc
out
scas
data16
lret
pusha
mov
cmpsl
cmp
sub
sub
mov
test
add
xor
pop
fisttps
sub
and
lds
pusha
loopne
int
test
in
js
or
cwtl
mov
inc
or
stos
test
xor
subl
inc
pop
mov
and
movsl
xchg
test
xchg
pop
mov
lock
xor
stc
mov
aaa
repnz
jns
and
mov
lds
push
test
push
sbb
pop
test
mov
mov
pushf
bound
pop
dec
xor
testb
mov
lret
popa
testl
fdiv
jbe
xlat
subl
lret
out
scas
adc
out
or
cmpsb
je
out
pop
mov
out
and
push
mov
mov
mov
xchg
cwtl
lods
mov
push
xor
aaa
mov
ret
ret
mov
stos
sbb
dec
mov
jge
and
sar
jae
dec
or
or
add
adc
mov
in
xchg
out
mov
pushf
push
aas
lods
int
lods
in
pusha
int3
adc
and
mov
xor
xor
dec
or
add
sub
aam
int3
mov
mov
fdivr
pop
stos
repnz
je
outsb
lea
add
repnz
ret
cli
out
push
mov
jae
pushf
lea
insb
xor
sbb
scas
sbb
jns
in
dec
sahf
dec
sbb
mov
imul
pop
cmpsb
push
push
jns
push
clc
mov
ljmp
call
pop
flds
mov
push
fdivrs
into
cmp
fwait
scas
fimull
jne
and
xchg
into
pop
jae
ss
inc
ret
jg
fcomps
sub
shrl
data16
mov
or
insl
inc
orb
bound
xor
in
mov
and
mov
mov
dec
gs
pop
movsb
adc
clc
inc
sbb
call
mov
jl
xchg
mov
add
push
pop
dec
fmul
mov
mov
sarb
and
mov
mov
pusha
int
scas
dec
mov
sbb
bound
testb
outsl
push
jo
icebp
enter
pop
out
adc
inc
mov
lret
and
repz
xlat
loop
fildll
push
adc
dec
repnz
rep
fildll
mov
ss
scas
inc
lret
cmp
stos
les
mov
call
mov
jmp
pop
in
inc
sub
jp
push
adcb
sub
dec
push
mov
lds
out
imul
adc
in
mov
addb
ljmp
push
fwait
push
call
mov
sub
fists
call
pop
mov
cmp
mov
sti
sub
pop
adc
cmp
stc
pop
test
xchg
mov
pop
loope
pop
jmp
rolb
push
sbb
imul
lods
ja
push
inc
jmp
pop
or
add
xor
stc
rclb
and
jno
mov
test
pop
pop
scas
scas
scas
jle
mov
std
cmpsl
fs
lods
adc
mov
add
sbb
mov
xorb
and
insl
jnp
pop
dec
aas
call
mov
adc
es
arpl
xor
stc
dec
add
pop
loopne
lock
xor
mov
and
and
sub
xlat
adc
int3
sti
dec
xor
pop
cmp
pop
leave
shr
cmp
test
lea
popa
xchg
cmpsl
sbbb
ljmp
dec
mov
repz
je
out
jmp
ljmp
cmp
ljmp
popa
pop
xchg
shrb
mov
mov
mov
out
sbb
pop
jge
cmp
sahf
clc
sbbb
push
clc
lock
in
pop
mov
imul
mov
mov
outsb
mov
stos
aam
or
jle
outsb
gs
push
push
xorb
std
into
push
push
cmp
adc
andl
cmp
sub
shrl
test
push
pop
es
lcall
jecxz
stos
add
call
push
mov
cmp
and
je
add
adc
pop
push
mov
movsb
fimuls
sub
or
jns
dec
sub
mov
mov
mov
dec
cwtl
movsb
mov
mov
imul
xlat
xchg
inc
sub
jne
mov
jg
call
in
lods
mov
lret
mov
leave
xchg
lret
sub
js
pusha
sar
jmp
popa
add
push
cwtl
insb
push
mov
xor
cmp
int
push
jb
lds
adc
xor
xor
jne
jno
sbb
push
lock
adc
cmp
mov
addr16
nop
pop
jae
mov
mov
fisubl
popa
addr16
xchg
cmc
push
xchg
subb
repz
and
int
cltd
xor
mov
outsb
popf
shrl
in
sbb
addr16
repz
outsb
scas
push
popa
cmp
hlt
sub
aam
dec
pop
sub
mov
pop
nop
icebp
orl
and
imul
and
mov
jae
pushf
pop
test
andl
ret
mov
jecxz
push
divl
xchg
call
xor
scas
xchg
sahf
push
fdivrp
rol
xchg
aas
clc
cmp
fcomi
mov
movsb
loopne
mov
fcoml
filds
or
xchg
push
shrl
subb
mov
int3
test
ror
mov
inc
cli
xlat
addr16
and
mov
dec
pusha
leave
jns
cmp
cmp
push
test
ret
cmp
add
jl
movsl
in
and
ja
out
fucom
xchg
sub
scas
mov
dec
xchg
data16
xchg
pop
xchg
mov
mov
xor
push
mov
pop
xchg
pop
into
int3
xorl
add
mov
out
sbbb
cmpb
or
mov
fwait
sti
add
fnstsw
push
dec
lcall
outsb
pushf
repz
das
xchg
fdivr
shl
and
in
sub
mov
cmp
or
fwait
aad
pop
mov
sub
sub
xlat
lahf
iret
jl
push
or
das
adc
jg
insl
cld
xchg
xor
call
mov
jnp
dec
repz
pop
iret
or
inc
sub
cmp
cltd
dec
xchg
push
leave
xlat
pop
std
in
add
lcall
jno
dec
insb
sub
fistps
outsl
dec
add
xor
mov
xchg
or
mov
or
js
ret
mov
jmp
adcl
mov
dec
adc
insl
or
out
lds
outsl
pop
or
push
and
pop
ds
cs
mov
int3
insl
mov
dec
xchg
ss
test
lods
push
dec
xchg
adc
out
mov
fisubrl
cmovb
inc
roll
mov
sar
repnz
ror
adc
movsl
iret
jb
imul
in
mov
jae
dec
xchg
cmp
mov
lea
mov
lds
jg
nop
cmpsb
popf
dec
out
pop
xchg
push
or
xorl
lcall
lods
pop
std
inc
jmp
sub
in
jp
mov
out
popa
jle
data16
xchg
and
hlt
nop
xor
jl
jge
or
mov
or
or
stos
negw
in
fdivl
aam
popf
out
jl
push
add
je
ss
adc
lea
incl
mov
jnp
adcl
jne
push
test
push
inc
jle
pop
lods
leave
pusha
ss
cmp
sti
icebp
sub
call
cmp
testb
out
dec
adcl
roll
push
sub
outsb
dec
cmpsb
ss
enter
adc
into
xchg
lea
daa
add
sub
ja
popa
jl
scas
aad
mov
xor
and
mov
xor
add
adc
pop
or
ds
dec
pop
test
test
popa
jg
test
pop
add
jmp
push
jnp
xchg
xchg
mov
inc
sti
cmp
sarb
pop
mov
pop
shll
sbbl
imul
mov
push
mov
frstor
xchg
andb
fcmovne
daa
sbb
loop
mov
adc
in
fstpl
gs
dec
cli
jne
mov
xlat
cmp
test
push
inc
idivl
pop
mov
int3
mov
jl
mov
add
mov
jg
jns
js
mov
insb
push
lds
jmp
push
fmul
dec
roll
cmpsb
in
das
cmp
xchg
hlt
mov
fwait
bnd
in
pusha
xchg
leave
xchg
or
add
mov
lret
scas
xlat
lods
add
shl
inc
fcomp
jg
pusha
jae
add
or
mov
idivl
rolb
ret
outsl
popf
je
pushf
push
aad
mov
sbb
or
sbb
xchg
out
pop
subb
jb
mov
adc
sbb
add
pop
aad
mov
or
pop
movsb
jg
cmp
aas
pushaw
fdivrl
out
push
pop
jg
sahf
stos
orb
clc
test
cmpsl
mov
and
lds
mov
cmp
mov
xor
or
mov
xchg
sarb
ret
rorb
jns
push
inc
push
xchg
sub
lcall
mov
hlt
ss
lret
mov
pop
or
fisttpl
cmpsl
and
mov
test
jns
push
icebp
lahf
enter
loop
in
adc
jns
push
jnp
cmp
xchg
dec
fwait
loope
fistps
sbb
shl
cmp
notb
xor
xor
xor
mov
add
mov
pop
mov
push
inc
mov
xchg
adc
inc
cmp
imul
imul
mov
mov
call
aas
inc
mov
lds
and
fwait
loopne
shrb
sarl
dec
ljmp
mov
xchg
xchg
mov
mov
xchg
push
js
pusha
dec
mov
cmpsb
std
enter
cmp
cli
pusha
xchg
jbe
jns
add
and
mov
and
mov
jnp,pt
lret
fs
mov
mov
mov
and
inc
adc
dec
push
mov
sub
xchg
cld
ficoml
cmpl
std
outsb
sysenter
pop
adc
lea
popf
bnd
rcl
pop
jmp
es
rcrb
fmulp
mov
xchg
js
lahf
popa
adc
push
std
movsl
call
or
arpl
lcall
and
out
mov
cmpsb
aam
dec
adcb
and
in
cmp
mov
sbbl
push
loop
shrl
pop
fwait
insl
int
jp
xchg
push
cmp
push
rol
cs
or
dec
mov
lock
mov
bound
pusha
out
inc
movsl
jecxz
pop
mov
pop
sahf
pop
dec
das
iret
lods
test
mov
xor
cld
pop
push
push
in
pusha
adc
orb
jb
pusha
iret
xor
repz
ret
into
test
push
shl
cmp
and
lock
push
cmp
cmp
push
lcall
adc
repz
imull
cmp
fld
sahf
adc
inc
popf
rcr
jnp
loop
out
nop
daa
imulb
test
testb
mov
es
jge
push
cld
push
testb
push
mov
in
cmpl
lret
dec
sbb
rclb
mov
sbbl
adc
inc
leave
lret
lret
ljmp
divl
dec
mov
jo
test
je
jge
dec
push
or
xchg
push
pop
dec
or
push
bound
out
mov
fldt
icebp
xor
or
sbb
fdivrs
fwait
das
and
lds
xlat
int3
je
sbb
sbb
subl
add
int
push
dec
es
cmc
jge
jl
in
lcall
mov
inc
dec
mov
or
inc
cmp
mov
mov
push
subl
pop
popa
dec
push
or
cmp
xchg
subb
or
xorl
jo
ds
pop
mov
in
mov
pop
sub
push
loopne
inc
std
outsb
mov
jnp
clc
jo
movsl
jnp
mov
jle
dec
lret
mov
mov
inc
xor
cs
cmp
xchg
ja
mov
nop
mov
jl
cld
xchg
push
arpl
xchg
xor
mov
xor
sub
cmp
dec
clc
push
mov
xor
cld
sub
aad
lods
xchg
jmp
dec
cmpsl
pop
cmp
mov
out
aad
xchg
aam
mov
or
adc
push
clc
adc
popa
xchg
mov
mov
movsb
adc
jno
mov
arpl
in
mov
inc
inc
test
out
push
gs
ret
inc
push
or
stc
xchg
push
bswap
mov
ljmp
xchg
stos
or
push
aam
push
dec
mov
jnp
inc
lock
sbb
inc
pusha
lcall
inc
test
loopne
clc
cld
inc
pop
xchg
xchg
jnp
sub
mov
scas
jbe
xor
xchg
pop
aad
popa
pop
pushf
in
inc
adc
dec
push
add
dec
jns
mov
cmp
xor
aaa
mov
jb
and
xlat
dec
or
icebp
lcall
sbb
daa
dec
or
xchg
cmp
sub
scas
mov
scas
push
cmp
or
push
mov
cwtl
fistl
or
xor
fcoms
add
jmp
or
inc
dec
aad
add
inc
addb
test
cmp
lgs
call
ds
popf
fcomps
xlat
es
rcrl
push
in
sub
push
mov
repz
pop
and
push
fnstenv
jno
in
mov
push
inc
aas
lahf
mov
sub
sub
clc
mov
inc
aam
cmpsl
mov
jb
fwait
cmpsl
jl
lret
jne
sbb
outsl
jb
shl
xchg
lcall
popa
ds
fnstcw
mov
sti
out
add
sub
push
and
das
pop
ljmp
sbb
clc
cmp
in
lods
mov
lods
fmull
mov
lods
mov
xchg
sarl
adc
push
lods
loopne
out
dec
mov
arpl
pop
pop
mov
xchg
sub
inc
mov
mov
sbb
push
out
jns
mov
adc
mov
xor
loopne
sub
pop
sbb
shll
xorl
cmp
pop
jge
sub
push
movsl
adc
pusha
in
sub
mov
rep
into
mov
les
cmp
mov
mov
test
push
in
dec
ljmp
in
pushl
mov
push
shl
and
jae
movsl
mov
frstor
push
in
mov
xchg
es
inc
imul
ret
adc
sub
roll
push
lock
pop
ret
cli
jg
lods
and
in
lods
rolb
cwtl
pop
imulb
push
ljmp
adc
lods
cmp
stos
mov
adc
inc
imul
sbb
in
push
xchg
fiadds
xchg
sbb
lods
mov
cs
mov
and
xchg
mov
shll
sahf
mov
sbb
pop
lea
xorl
fidivs
jns
dec
ret
jg
faddl
repnz
mov
lret
mov
push
inc
addr16
fisubrs
rorb
sbb
rcrl
mov
jl
or
jbe
sbbb
mov
pop
mov
clc
xchg
ret
les
mov
or
push
jne
sbb
lret
fisubs
xchg
int3
inc
scas
je
inc
movsl
mov
std
cmp
mov
imull
mov
lcall
aad
pop
xchg
aad
roll
sti
xchg
adc
stc
icebp
out
add
jl
fcmovnbe
cltd
or
sbbb
lds
inc
ss
stos
sbb
aas
frstor
push
cmp
cmc
ds
adcb
mov
in
daa
iret
push
mov
dec
cmp
dec
rclb
pop
jns
out
jnp
and
imul
sarb
gs
xor
nop
sbb
out
aad
leave
pop
adc
out
xchg
and
aam
cmp
sarl
pop
sbb
jne
add
shrl
rol
xor
xchg
outsl
xor
xchg
into
pop
cld
mov
fsubrl
pop
in
xor
aas
xorl
aam
dec
pop
cs
mov
jle
jl
out
fxch
mov
mov
push
xchg
inc
jle
outsb
jbe
add
cmpsl
leave
pop
cltd
in
sub
mov
or
sub
cmp
out
stos
cmpsl
pop
fnsave
inc
adc
stos
aas
aad
addl
lret
movsb
and
xchg
jbe
add
loop
jge
push
sbb
mov
aaa
insb
js
add
adc
std
mov
push
sub
add
ret
sbb
in
or
lods
xorl
cltd
pop
cld
inc
xor
mov
sub
lcall
orb
sbb
xor
push
jl
mov
sti
adc
xchg
inc
fnstenv
inc
pop
sub
btr
in
pop
sbb
dec
data16
andl
aam
mov
ficompl
icebp
cli
push
adc
enter
out
jne
xor
xor
movsb
in
loopne
mov
imul
nop
arpl
aad
aaa
mov
push
cmp
lcall
cmp
stc
sub
ret
loop
fcomip
out
sar
fcmove
test
dec
mov
jne
pop
stos
insb
adc
sarb
shll
mov
gs
xor
movhlps
inc
scas
ror
fnsave
push
mov
fcmovnbe
aam
xchg
sub
gs
loope
sti
and
xchg
xor
add
pop
push
mov
clc
and
pop
pop
aam
pop
in
jge
movsl
int3
popf
scas
add
movb
cs
sub
and
sub
jl
in
inc
pop
cs
push
push
xchg
packuswb
pop
pop
lds
xchg
mov
inc
test
push
and
pushf
incb
adc
jmp
loope
cs
mov
scas
repnz
xlat
aad
hlt
in
cmp
cwtl
stc
cwtl
push
cmp
pop
movsb
mov
ss
outsb
sbbb
xchg
mov
xchg
sbb
lret
sbb
push
loope
or
fwait
or
mov
jne
cli
pusha
loop
rcll
pop
cmp
js
ret
cmp
out
adc
xchg
movsb
xchg
inc
pop
inc
pop
fcoml
aam
dec
les
mov
mov
or
divb
push
scas
inc
or
xchg
mov
cmp
shlb
pop
out
test
repnz
pop
out
dec
mov
sti
cltd
inc
je
mov
mov
cld
jle
jecxz
mov
jb
xchg
shl
stc
mov
and
fisubs
ficoms
adc
outsl
mov
xor
dec
sbbb
loopne
lahf
ret
imul
and
rorb
mov
mov
ds
stos
int3
xor
xchg
xchg
adc
imul
adc
lods
scas
inc
fadd
sub
jecxz
or
mov
fisubrl
inc
cmpsb
or
arpl
xchg
iret
push
mov
mov
mov
cmp
cmp
and
xchg
js
bound
stos
lods
or
es
gs
cld
decl
iret
sub
nop
and
cmp
std
jo
repnz
jp
aas
popa
clc
sub
call
lcall
pop
aad
sahf
ret
imul
jmp
sub
sub
push
push
inc
stos
mov
mov
ss
cmp
sub
nop
std
pop
enter
pop
mov
lcall
sbb
sub
xchg
sub
int
in
lock
repz
pop
inc
out
test
cmpsb
cmc
ret
lock
std
js
cmp
int3
push
mov
js
insl
push
mov
sbb
lcall
in
mov
subl
fwait
jmp
xchg
lcall
cmp
add
cld
scas
adc
mov
push
jmp
lock
sub
or
xchg
push
inc
jb
jg
dec
ds
cmp
insl
cwtl
inc
sub
pop
xchg
stc
loop
jg
adc
add
push
sbb
xor
pop
inc
pop
mov
out
cmp
pop
ds
aaa
add
or
movaps
into
lret
scas
mov
insl
dec
sbb
mov
sub
sti
fwait
push
push
cmp
into
sbb
dec
mov
ss
repz
ja
and
mov
fmuls
pop
fnstcw
dec
dec
lods
jl
dec
cwtl
dec
jb
xchg
mov
inc
sbb
sarb
clc
sub
cmpsb
bound
mov
mov
cmpsb
sub
mov
add
out
mov
fwait
xlat
into
dec
in
adc
mov
push
arpl
imul
and
test
inc
pop
xchg
xor
fisttps
xchg
dec
mov
add
loop
xor
loopne
push
adc
insb
mov
lds
leave
mov
in
xchg
pop
sbb
push
icebp
push
mov
xorps
fcoml
icebp
lods
arpl
scas
pop
xchg
out
lret
mov
pop
xor
push
mov
in
sub
push
pop
arpl
orl
aaa
jae
or
mov
cmp
out
and
sahf
hlt
cmp
inc
dec
leave
lods
xchg
sar
outsl
inc
dec
ja
in
xchg
sbbl
mov
repnz
push
idivl
sbb
in
sub
in
rcll
pushf
leave
mov
gs
popa
popf
je
inc
mov
xorb
js
stos
push
inc
xchg
cmp
inc
jl
pop
xlat
xchg
bound
xor
xor
push
test
xchg
jbe
add
xor
pop
aam
insb
mov
xor
add
arpl
mov
idivb
shlb
movsb
cwtl
push
mov
das
xchg
mov
addr16
jmp
cmpsl
rclb
lods
cmp
lods
push
inc
out
jge
lods
push
dec
loope
in
shll
cmp
sarb
push
int3
jp
mov
lret
pusha
xchg
lock
test
outsb
pop
jl
lods
ljmp
or
sti
ja
jp
jo
sub
and
out
out
aad
ror
fsubp
jae
sahf
pop
and
sub
cmpsb
subps
sub
je
xor
xor
enter
xchg
movsb
adc
or
mov
fcomip
lret
pushf
adc
sahf
sti
lods
es
ljmp
dec
push
and
sub
loope
fistpll
pushaw
das
not
outsl
add
sub
out
daa
cmpl
jle
and
jecxz
icebp
jp
mov
cld
xor
pop
and
adc
mov
pop
popa
inc
pop
loopne
push
adc
mov
and
test
mov
cli
fprem1
int
std
push
xor
inc
xchg
mov
mov
mov
cmp
cmp
dec
inc
lods
xchg
jno
adcl
mov
test
jp
xor
arpl
test
es
mov
imul
pusha
scas
sbb
cltd
shlb
int
jnp
dec
dec
cmp
cs
ljmp
mov
stos
cmp
les
std
xchg
mov
pop
ds
mov
jp
mov
jne
or
push
insb
cmpsl
mov
cmp
cmp
out
repz
fimuls
cli
cmp
fs
sbb
mov
inc
or
or
cmpsb
cmp
insb
mov
pop
mov
push
dec
out
mov
jg
adc
sarl
lea
sub
pop
cmp
mov
rclb
test
mov
repz
or
and
pop
pop
es
and
lret
dec
cmpsb
cmp
xchg
jne
fstps
fwait
inc
xor
push
xchg
jno
xor
adc
mov
add
dec
and
int
mov
adc
push
sbb
test
inc
outsb
cmp
xchg
mov
sub
xlat
sbb
mov
pushf
inc
fcoms
xor
nop
sahf
xchg
and
mov
jnp
push
cmp
je
fwait
xchg
daa
outsb
push
xor
aad
mov
push
and
gs
mov
sti
dec
add
popf
lret
adcb
xor
jecxz
jns
add
test
push
adc
repnz
out
popa
aad
mov
sahf
lea
jno
out
lods
jecxz
push
cmp
jge
add
sbbb
push
xchg
mov
cld
add
mov
popf
cmp
fs
sbb
xlat
sbb
mov
inc
movsb
imul
aas
push
pop
cmpsb
stc
into
orps
sbb
lods
and
mov
rcll
les
jns
inc
xchg
sub
jo
jmp
movsb
imul
jle
rorb
insb
mov
dec
mov
jl
fxch
xor
jbe
xor
pop
push
pop
or
jns
lcall
pop
and
scas
cmp
rol
je
push
cmp
pop
adc
mov
repz
inc
popa
pop
out
sub
hlt
xor
insb
aas
xchg
stc
or
outsb
inc
lods
jbe
icebp
mov
ret
stc
out
jb
mov
loopne
dec
fmull
addr16
push
dec
sub
sub
ficompl
in
into
lods
mov
imul
sub
fidivrl
and
lea
xor
js
out
hlt
add
les
xor
jnp
rcll
pop
jbe
cli
ret
mov
aad
add
push
cmp
clc
jge
test
std
in
sti
into
mov
pop
fidivrs
mov
pop
daa
dec
or
mov
bound
ret
pop
push
mov
jne
aam
add
shlb
sub
mov
jbe
imul
sbb
or
ljmp
mov
sub
test
test
pushf
mov
stos
jge
sbb
mov
mov
xlat
insb
mov
sbb
cmp
das
push
stos
push
or
pop
ret
mov
dec
popf
pushf
add
std
or
pop
jmp
xor
mov
mov
pop
ja
repnz
imul
fsubr
js
imul
outsl
lret
stos
mov
icebp
sub
cmp
movsb
insl
stc
xchg
mov
mov
ss
sub
or
test
lock
cmp
or
scas
out
in
xor
insl
inc
addb
mov
pop
mov
dec
jmp
jp
imul
mov
inc
cwtl
scas
cmpsb
ja
mov
icebp
movb
sbb
bound
scas
mov
sbb
xor
insb
gs
into
aaa
lods
inc
aam
iret
and
dec
pop
add
mov
sahf
subl
mov
fildl
push
int
ret
aam
mov
push
sub
push
ljmp
gs
orb
jmp
mov
cld
xchg
ljmp
sub
in
xorb
adc
movsb
mov
pop
cmp
mov
jnp
stos
aas
push
lds
dec
add
popf
addr16
lods
aad
out
xor
sbb
adc
icebp
or
pop
or
inc
mov
mov
inc
cli
scas
cli
lods
mov
push
int
loop
mov
cli
sahf
add
mov
mov
les
mov
cmp
flds
test
adc
dec
out
push
jg
addr16
cs
fldlg2
ljmp
dec
mov
jge
push
rdpmc
push
scas
jecxz
imul
out
loope
mov
ja
loop
dec
outsl
pusha
mov
out
in
hlt
jmp
fwait
popa
rcrl
scas
or
int3
movsb
sti
test
inc
call
push
mov
fmulp
popf
mov
out
push
fisttpl
push
fcoms
mov
push
iret
leave
ja
les
in
loope
and
dec
neg
jecxz
xor
pop
mov
sahf
daa
cltd
lret
dec
xor
lods
or
mov
pop
xor
bnd
imulb
pop
xchg
adcl
xchg
mov
lcall
outsl
lock
push
in
lret
inc
sub
aam
xchg
sbb
int3
aad
mov
stc
push
rolb
fdivr
mov
daa
les
inc
int3
push
data16
sub
fs
push
mov
lods
inc
ljmp
sub
stc
mov
call
enter
fucomip
push
iret
and
push
fdiv
jae
pop
sub
inc
add
dec
adc
fdivp
sub
stos
jns
pop
dec
xchg
xchg
popa
adc
mov
iret
pop
dec
push
rolb
aas
push
sbb
cs
in
pop
push
sub
scas
jnp
cmpsl
jb
mov
mov
popa
rolb
cli
aas
dec
pop
or
inc
cmpl
orl
jo
mov
sar
aaa
xor
xchg
or
clc
int
adc
cmpsl
aad
mov
xlat
xchg
sti
int
push
hlt
inc
sub
lods
push
out
sbb
out
push
add
mov
pcmpeqd
jne
dec
push
pop
lcall
push
jmp
mov
lock
pop
mov
cmp
sahf
cli
and
test
aad
clc
js
rcll
stos
test
cmp
in
xor
mov
xchg
mov
enter
xor
mov
sbb
daa
dec
lret
adc
orb
add
gs
rolb
imul
inc
bound
jb
out
xchg
jle
mov
pop
inc
mov
pop
inc
movsl
cmc
les
hlt
pop
jno
mov
ds
pop
arpl
movsb
xchg
loop
jns
mov
push
in
add
xchg
xor
jo
data16
cmp
insl
ss
push
jmp
mov
and
mov
repz
test
repnz
pop
test
or
inc
push
and
jg
lock
inc
lahf
sbb
sub
jns
cmp
adc
xchg
push
sahf
leave
jns
cmc
iret
jbe
jnp
sub
lods
xor
jle
mov
iret
in
pop
pop
scas
and
shr
pushl
jecxz
or
cmc
push
mov
stc
push
dec
in
scas
mov
sub
push
cmp
das
filds
mov
or
fucomip
push
mov
add
ret
mov
lret
add
stos
rcrl
out
sbb
daa
add
mov
idivl
add
testl
sbb
mov
adc
mov
mov
xchg
or
jb
push
outsb
mov
cmc
sub
cmp
lahf
into
lock
imul
lret
dec
std
out
les
addr16
aaa
dec
xor
icebp
out
lds
loop
lcall
test
push
cwtl
fmull
cmp
das
cld
pop
scas
inc
scas
dec
dec
cmp
or
mov
in
sbb
loopne
lret
xor
pop
loopne
mov
out
inc
cmp
ja
sub
mov
nop
test
mov
xor
scas
nop
jl
fwait
mov
test
mov
mov
cmp
shlb
jns
sbb
adc
xchg
push
rol
add
sti
fcmove
fmull
cltd
xchg
add
testl
xchg
or
jl
roll
mov
sub
jmp
cmp
push
pop
sbb
test
movaps
pop
jmp
pop
jl
out
and
repz
lret
adcl
stos
sahf
fs
xor
pushf
jecxz
ss
jae
scas
ljmp
cmpl
mov
adc
mov
mov
add
testl
add
sti
fs
test
push
pop
mov
pop
mov
in
cmp
popf
mov
push
push
clc
aam
cmpsl
push
lcall
test
inc
out
sbb
adc
call
fstp
pop
pusha
push
lahf
jae
lea
or
add
xchg
xchg
shlb
lahf
mov
xor
lahf
xor
xchg
bound
aam
pop
xchg
inc
pop
xor
mov
shl
divb
mov
lret
lcall
lods
sbb
inc
movsl
inc
inc
mov
insb
jae
inc
push
sbb
cmpsb
jns
or
je
mov
xor
pop
aam
xchg
daa
mov
mov
stos
jle
push
mov
outsl
jle
lods
repz
sub
adc
sub
sub
pop
jo
inc
arpl
cmpb
and
mov
push
mov
xorl
idiv
add
xchg
test
inc
ficomps
xor
in
stos
push
int3
jle
cmp
into
leave
gs
iret
lea
mov
movsl
out
adc
cmpsl
fs
push
adc
fcomps
into
mov
mov
clc
jmp
rcrl
pop
stc
std
jo
movsb
sbb
pop
xchg
test
sbb
and
nop
jb
call
xor
fsubl
aaa
iret
inc
cmp
pop
cmp
mov
test
lret
jle
inc
cld
mov
loopne
jae
outsb
sub
xor
mov
out
outsl
xor
push
clc
xor
fcomps
push
mov
sbb
pop
xchg
js
shlb
ficoms
jmp
xor
jnp
mov
shl
fistpl
sti
adc
ret
test
mov
mov
testb
pop
mov
mov
jno
leave
dec
jae
roll
aam
xchg
dec
test
movsl
sub
into
mov
mov
out
jl
stos
lock
xchg
pop
fs
mov
ficoms
mov
std
sbb
nop
inc
hlt
pop
rcl
je
loop
dec
cmpsb
sahf
and
mov
sub
clc
scas
shrb
inc
mov
adc
sub
mov
cmp
outsl
add
mov
mov
lods
orl
jp
nop
xchg
xor
movsl
dec
jecxz
cmp
push
sti
idivl
stos
push
jae
jno
sbb
cltd
lock
fldt
fimull
lret
jo
mov
xchg
lcall
mov
push
imul
add
aam
aas
in
aad
sub
icebp
nop
push
cltd
jecxz
test
xchg
enter
hlt
jg
jo
jl
outsl
pusha
ja
pop
ror
pop
cli
stc
clc
mov
or
cli
arpl
mov
stc
je
push
gs
cmp
ds
sbb
stc
sub
pop
dec
subl
fptan
cmp
inc
roll
insl
in
out
test
cld
xor
mov
stc
ret
or
dec
sbb
cld
or
adc
stc
push
in
das
jno
cmp
into
cmp
sti
js
and
push
add
daa
cli
xchg
and
inc
out
adcl
fwait
rcl
mov
inc
jbe
ret
roll
push
mov
mov
rcl
push
mov
mov
es
mov
rcrb
cmp
pop
fisttpll
pop
inc
nop
jecxz
add
and
daa
js
pop
loop
sarl
out
cltd
sub
cmp
mov
fucomip
cmc
cs
pop
jl
jne
shr
or
ret
cmpsl
mov
cmp
sub
sbb
xchg
outsb
mov
aaa
pop
add
aam
xchg
je
inc
lret
sub
std
mov
sbb
pop
xchg
subb
shl
lret
sub
test
xchg
imul
jns
sub
jae
mov
shlb
xchg
movsb
out
cs
mov
adc
dec
lds
pop
nop
mov
adc
stos
and
fnstcw
adc
xor
pushf
adc
xor
fwait
and
xor
or
xchg
adc
repz
cmp
cmc
xlat
int3
cmp
mov
jecxz
adc
pop
mov
mov
jecxz
imul
jecxz
ret
pop
sbb
nop
xchg
cmpsb
scas
dec
enter
je
ret
jmp
jge
stos
xor
ljmp
mov
xor
mov
addb
sub
mov
lret
fnstenv
xchg
cld
leave
cmp
dec
jbe
inc
pop
mov
cmp
jbe
pushf
int
popf
jge
fidivrs
or
fnsave
rcrb
dec
or
lock
push
clc
mov
insb
fcmovnb
xorb
mov
fwait
sahf
cli
jmp
inc
insb
xor
adc
xor
lcall
pop
leave
sub
jg
xchg
dec
aaa
stc
add
test
fldl2t
sub
pop
jmp
aas
outsl
lcall
and
pop
adc
xchg
sti
xor
adc
pop
push
adc
addr16
shll
pop
sub
mov
mov
into
dec
jp
ror
test
mov
sbb
xchg
rolb
inc
mov
push
mov
jae
or
sub
aad
cmp
hlt
push
in
in
shr
shll
loopne
pop
ror
ret
imul
js
lahf
shl
adc
bound
sahf
imul
aad
int
jmp
push
xchg
popf
or
ficoml
mov
in
push
dec
and
fistl
inc
nop
bound
adc
pushf
not
push
aaa
push
dec
stos
pop
xchg
push
sbb
cwtl
cwtl
cld
add
leave
js
xchg
lods
xchg
les
das
mov
movsb
xchg
mov
jp
or
jne
loope
mov
mov
jae
loopne
inc
push
loopne
mov
aaa
aas
or
popa
out
jbe
mov
lock
std
pop
pop
stos
fistpl
pop
lcall
pop
shl
adc
cmpb
add
popf
cmpsb
pop
movsl
clc
cld
push
push
and
pop
push
pop
andl
cmpsb
xchg
por
push
sbbb
in
sbbb
jge
adc
imul
push
mov
adc
pop
sti
movsb
rclb
adc
dec
pop
test
pop
mov
mov
cli
push
jnp
jp
cltd
push
jns
pop
mov
fcmovnu
pop
cmp
jl
mov
sti
fistl
adc
push
xchg
insl
cli
mov
mov
lret
lds
ficomps
pop
cld
jno
xor
sub
ret
push
and
insl
addl
mov
fs
stc
iret
dec
cltd
in
xchg
mov
lods
pop
push
lahf
es
fildll
dec
xor
xor
sbb
mov
lods
icebp
fistpl
arpl
inc
movsb
jmp
ljmp
mov
in
push
push
int
push
ja
das
or
movsb
cmp
dec
push
sbb
mov
test
jns
mov
stos
rcl
pop
add
or
adc
sahf
ljmp
pop
ljmp
daa
dec
xchg
jno
inc
jo
out
jbe
nop
inc
gs
sub
popl
dec
cmp
jb
ficomps
inc
outsl
fs
jmp
bound
jp
push
mov
movsb
cmp
cmpsb
int
popa
cmc
int3
mov
fnstenv
dec
fwait
and
adc
movsb
dec
je
aas
push
lds
dec
pop
pop
xor
push
adc
lds
dec
and
ficoms
pop
mov
cli
pop
jne
mov
xchg
push
shll
xchg
and
call
add
add
xor
stos
bound
aas
stc
fldenv
add
rcrb
pop
pop
mov
sub
add
jmp
outsl
mov
mov
and
jbe
out
pop
loopne
xor
stos
add
cmp
and
jp
orl
dec
mov
in
and
xchg
dec
call
rcll
xchg
les
scas
lahf
jg
test
jbe
jnp
sub
popf
sbb
inc
push
and
jae
lods
ljmp
xchg
xor
std
nop
or
addr16
add
cli
jmp
out
add
push
and
gs
loop
stc
ficoml
ja
push
mov
inc
inc
test
iret
imul
pop
jmp
in
push
add
xchg
pop
sbb
sub
lret
popa
fsubr
jno
push
addr16
bound
dec
je
mov
xor
adc
loope
sbb
loopne
pop
test
jecxz
or
mov
mov
jmp
ud1
jge
scas
popa
stos
lds
add
incb
gs
xorb
lcall
sbbb
je
imul
pushl
jnp
jecxz
mov
fwait
adc
mov
add
or
enter
jl
in
imul
je
mov
stc
push
dec
push
cmp
add
sbb
js
xlat
inc
iret
hlt
mov
data16
icebp
push
lock
inc
inc
and
push
mov
cmp
shrb
push
ss
or
bound
movsb
dec
cltd
out
sub
adc
pop
cmp
push
jb
cmpsl
nop
xchg
in
pop
mov
das
call
loope
xchg
sub
das
push
sahf
pop
outsl
xlat
and
orl
jecxz
sti
ss
call
xchg
sbb
add
aaa
lods
or
fcmove
enter
in
shll
jmp
cltd
mov
jg
fwait
popf
scas
mov
mov
out
fwait
fwait
call
bound
repz
fs
ljmp
movsb
mov
movb
rorl
movsb
out
and
and
xchg
xlat
and
testb
pushf
stos
add
push
into
cmp
aam
lock
push
out
gs
iret
mov
xor
stos
cmc
mov
out
push
mov
push
add
hlt
or
fdivr
cmp
mov
aaa
enter
add
clc
decl
leave
lret
xchg
mov
adc
int3
fisubs
leave
xchg
jge
int3
lods
cli
mov
mov
pop
movsl
rcll
out
mov
int3
scas
cmpsb
out
jo
out
jo
jecxz
pop
repnz
inc
sbb
rcll
out
or
mov
push
push
cmpl
add
pop
mov
ds
cld
in
sub
filds
out
shlb
and
call
ret
fldl2t
and
sub
outsl
lods
jnp
fstl
jo
data16
fwait
mov
fdivrs
pushf
push
cmp
sub
repnz
push
cmpl
stos
cmc
mov
enter
dec
cmp
into
and
dec
movsb
dec
repz
pop
jge
aas
xchg
stc
lods
fists
les
test
jae
cmpxchg
xor
mov
or
add
and
sbb
inc
sbb
pop
stos
xchg
and
mov
fdivl
ljmp
into
imulb
and
insb
mov
scas
or
mov
dec
movsb
add
leave
clc
sbb
pop
dec
inc
mov
mov
pop
std
xlat
lret
mov
dec
and
fisttps
das
ret
push
movsl
std
lahf
xchg
cmc
xor
push
movsb
test
pusha
out
cmp
arpl
xchg
dec
sti
jne
sub
pop
cmp
sub
jp
aas
cmp
lret
mov
stos
loope
rcrb
sbb
enter
sbb
jno
xor
into
loopne
jecxz
mov
por
pop
inc
mov
in
stos
mov
popf
ss
cmp
or
mov
hlt
sbb
out
mov
pop
inc
out
lcall
inc
mov
movsl
fldenv
cmpsl
sbb
jl
lret
xchg
jns
pop
enter
mov
in
bound
xchg
lds
aaa
adc
lret
cmp
imul
and
jecxz
mov
jnp
xchg
out
xor
les
jp
xchg
and
add
int3
insl
icebp
cmpsl
dec
dec
mov
xchg
jmp
bound
mov
hlt
inc
icebp
fiadds
es
push
adc
dec
fistl
adc
pop
mov
imul
add
frstor
ja
xlat
cmp
std
pop
sahf
pop
push
leave
pop
xchg
into
pop
push
leave
out
push
jg
hlt
adcb
dec
cmp
lret
aaa
shlb
push
adc
hlt
sub
pop
lret
sbb
dec
cmp
xor
inc
push
cmc
or
adc
jmp
sub
add
lock
mov
ss
xor
mov
loop
dec
roll
aaa
xchg
or
mov
inc
and
fsubr
mov
or
icebp
inc
bnd
push
fs
mov
add
pop
push
mov
xchg
jae
push
mov
pusha
xor
jl
lods
sbb
stos
outsb
push
leave
lahf
push
add
xor
and
jmp
pop
mov
dec
sub
shlb
in
jle
dec
or
pushf
mov
adc
and
loopne
or
mov
subb
push
enter
fisttpl
push
bound
data16
bound
or
lret
dec
clc
add
mov
repz
cwtl
mul
pushf
jge
mov
jg
aaa
fs
fadds
sub
xchg
xor
jg
push
jp
test
out
loope
dec
jecxz
hlt
in
cmp
lcall
das
pop
into
xor
insl
cmpsl
sbb
sub
outsl
popf
jge
or
and
pop
in
adc
iret
xor
xor
testl
cmp
cld
rorl
fdivrs
xchg
lea
pop
dec
int3
cmp
movl
jo
mov
int
inc
cmc
sti
add
add
xchg
imull
dec
and
in
xor
lds
out
repz
pop
adc
sub
mov
mov
cmp
adc
cmc
in
rcr
fsubl
aam
pop
aas
mov
sbb
push
int
adc
jg
fcmovbe
movsb
andl
clc
fsubs
dec
or
rorl
call
aas
xchg
repnz
ss
out
push
int3
in
inc
test
xor
popl
and
lahf
xchg
nop
int
add
into
sbb
and
loop
push
lahf
jecxz
mov
sbb
cmpsl
mov
out
test
adc
push
mov
sbb
jmp
xchg
mov
push
addl
fwait
push
call
fiaddl
rclb
cmc
or
lods
jmp
cli
cmp
mov
xchg
in
jge
jae
adcb
mov
insb
dec
cs
sbbl
dec
clc
lds
mov
cs
jne
mov
jo
lds
repz
loope
movsl
inc
jno
cmpsb
test
lods
test
jge
test
inc
xchg
shr
inc
xchg
cs
jno
push
adc
xchg
push
movb
ret
mov
add
push
fiadds
enter
cmovne
rcll
sarb
in
in
lods
push
scas
fs
shrl
cmpsl
cltd
call
insb
fwait
mov
adc
inc
jne
rcr
inc
gs
sbb
mov
mov
int
cwtl
push
mov
mov
mov
insb
ret
dec
pop
cwtl
pushf
jmp
mov
xchg
aaa
out
je
adc
jno
jmp
inc
jns
sbb
imul
jp
adc
push
push
add
sub
test
mov
xchg
lock
pop
ret
mov
push
sbb
or
pop
mov
xchg
mov
jecxz
xor
lret
adc
mov
adc
mov
insl
notb
mov
mov
pushf
pop
dec
or
enter
sub
out
mov
cmp
push
adc
shlb
in
jo
xchg
fldt
mov
pop
jp
jns
or
andl
adcl
int
test
xchg
repz
mov
testl
pop
sbb
out
pop
jnp
shll
adcb
sub
sub
push
jns
sbb
movsb
sbbb
lahf
xor
out
add
test
shl
cmp
jnp
jecxz
mov
ficoml
push
mov
dec
mov
rcrb
and
pop
cmc
mov
xchg
test
adc
test
sahf
mov
and
dec
outsb
xor
mov
jp
jecxz
es
cmp
outsb
fiadds
and
mov
push
bound
xchg
cmp
mov
push
sti
push
pop
scas
fstpl
lret
mov
xor
call
popf
lret
enter
dec
and
push
mov
dec
outsb
movb
jnp
mov
movsl
mov
xchg
loopne
stos
inc
pop
clc
sarl
test
xor
cli
xor
inc
sub
into
inc
fcompl
push
daa
mov
cwtl
pop
iret
je
mov
xchg
sub
add
out
fldl
inc
aaa
dec
rcrl
push
adc
and
add
cmp
popf
in
lock
repz
mov
cwtl
push
sub
mulb
bound
push
or
insl
jb
or
mov
mov
vstmxcsr
lock
push
bt
mov
mov
and
mov
jne
aam
clc
mov
push
adc
adc
iret
enter
shlb
inc
xor
or
hlt
jge
pushf
inc
outsl
out
mov
xor
or
push
pop
das
popf
mov
movl
inc
ljmp
stos
out
test
pop
adc
push
in
outsb
jp
mov
inc
repnz
enter
scas
in
jle
mov
jno
jl
faddp
mov
pop
inc
fs
mov
stos
in
ret
hlt
lock
rcl
ja
lret
xlat
pop
add
gs
addr16
dec
das
xchg
and
gs
lret
stc
adc
sarl
hlt
cmpl
pop
stos
ja
and
add
lods
into
sahf
imul
loopne
shll
xor
rcrl
je
daa
dec
ja
cld
rcrl
cwtl
xlat
or
inc
and
mov
stos
scas
mov
cmpb
pushf
jle
adc
dec
jno
sbb
pop
out
loope
addr16
sub
jp
pop
adc
ret
jge
pop
add
es
dec
mov
out
adcl
addr16
cmpsb
pushf
jb
out
out
jecxz
fnclex
sbb
enter
push
lahf
xchg
mov
in
xchg
mov
daa
ret
inc
test
ret
add
gs
test
out
mov
ja
push
pop
mov
jp
daa
imul
out
sbb
sti
sahf
sbb
scas
xchg
lahf
xchg
jae
insb
rcrb
inc
and
popf
sub
cltd
loopne
pop
popa
adc
mov
incl
js
lret
jge
mulb
sbb
orl
not
ficoms
adc
push
decb
in
les
scas
fistpl
pusha
les
inc
outsl
mov
bound
popf
adc
test
stos
and
and
dec
pop
das
jmp
pop
stos
inc
or
dec
push
ljmp
and
mov
jmp
mov
subl
sbb
mov
sbb
aad
ljmp
aam
loop
pusha
movsl
lret
sub
andl
adc
pop
inc
std
push
repnz
sub
imul
inc
movsb
jg
ss
mov
test
push
fwait
int3
rcll
aad
inc
jne
and
ret
insl
adc
push
mov
and
adc
lods
and
js
gs
scas
cwtl
rorb
dec
cmp
xor
adc
push
jp
mov
fsubrl
dec
mov
add
orb
scas
dec
in
add
cmc
xchg
pop
loope
cmpsb
daa
mov
imul
xchg
cmp
push
mov
stos
aaa
xlat
xlat
or
in
das
pop
out
xchg
lods
icebp
mov
add
xlat
adc
lea
lret
and
in
mov
movsl
stc
inc
cwtl
shrl
out
inc
enter
push
dec
inc
popf
lret
and
sub
jno
stos
pop
adc
insl
cmp
lahf
push
inc
xchg
push
insl
lods
data16
fcmovnu
fmuls
mov
jae
dec
test
pushf
jp
aas
inc
fiadds
push
bswap
clc
test
jmp
mov
sti
mov
add
ja
jbe
inc
jns
cltd
lock
push
cmp
imul
nop
push
leave
sub
clc
outsb
push
aam
jmp
xchg
jp
fldpi
out
cmp
push
add
cmp
jae
mov
cmpl
mov
movsb
dec
inc
pushf
test
aad
cmp
lods
insb
mov
repnz
mov
lret
xor
arpl
out
cli
xchg
dec
cli
adc
mov
into
mov
bnd
daa
mov
inc
pushl
mov
aaa
arpl
inc
dec
ljmp
sbb
push
push
dec
push
lods
scas
add
sarl
mov
mov
addr16
stos
mov
xchg
sub
push
push
repz
pop
jge
mov
mov
sti
adc
fisttps
loope
cmpsb
add
mov
and
or
dec
imul
mov
cltd
inc
cmpsb
dec
fists
stos
jbe
cmp
sbb
imul
cmp
stc
fs
mull
fwait
lock
mov
and
test
mov
sysenter
jg
shr
pop
in
pop
xchg
ja
iret
je
mov
jl
pop
mov
cmpsl
jmp
fcmovbe
xor
or
mov
ja
push
es
call
mov
dec
dec
mov
fs
movsl
push
std
xchg
dec
mov
mov
cs
cmc
sbb
ficompl
sub
cs
cmp
subb
subb
loop
inc
test
cmp
lea
cmpsb
scas
imul
mov
lahf
aas
and
dec
inc
add
adc
sbb
pop
test
mov
inc
lds
aas
popa
int3
dec
sbb
orb
ret
dec
fdivl
pop
or
pop
aas
dec
scas
cmp
lcall
cmp
loop
xor
pop
adcb
call
mov
outsl
xchg
movsl
cmpsb
mov
push
push
rcll
nop
leave
data16
inc
rcrl
sub
inc
pop
sub
cmc
add
add
mov
insl
and
xchg
int3
mov
dec
pop
push
add
jo
dec
xor
jmp
xor
sub
push
and
inc
push
iret
arpl
adc
and
iret
xlat
stos
inc
sahf
push
push
imul
jle
cmpsb
int3
mov
lods
push
xchg
ss
outsl
pop
aam
aad
pop
mov
xor
imul
jle
adc
jb
lcall
jp
dec
or
sbb
andnps
dec
in
arpl
lds
negb
and
sbb
scas
insl
xlat
bound
ja
mov
ror
in
popa
repz
nop
push
pop
sub
cmp
or
mov
jl
mov
cmc
popl
lods
xchg
xchg
cli
pop
loope
sahf
dec
and
inc
mov
les
dec
jmp
addr16
inc
shlb
sbb
mov
xchg
aam
scas
das
sbb
dec
bound
push
jbe
lret
mov
gs
dec
dec
xor
inc
sub
jl
lret
xchg
adc
in
lds
sub
mov
sub
imul
jecxz
jmp
xor
ja
inc
ret
cmpsl
fldenv
insl
inc
jl
addl
lahf
xchg
lahf
xlat
cmp
lret
sbb
ret
filds
punpckldq
jl
jg
ljmp
loopne
add
or
pop
jnp
movsl
or
mov
jmp
outsl
xor
pop
or
cmpsb
adc
xor
mov
and
icebp
inc
add
movsb
mov
or
inc
scas
rcll
cli
adc
sbb
adc
sbb
or
lods
insb
add
in
mov
inc
fstpl
xchg
lret
xchg
inc
icebp
pop
add
xchg
cmpsb
ljmp
popa
fidivs
sbbl
jae
and
push
pop
jmp
subb
xor
cli
mov
pop
sub
and
ds
cwtl
loop
xchg
sbb
push
and
in
fsts
pop
sub
sub
xchg
lret
sub
lock
lods
adc
das
lods
jo
les
cwtl
mov
jmp
jmp
data16
mov
stos
mov
jmp
xchg
cld
inc
or
pop
mov
push
mov
outsb
cwtl
test
pop
ret
lods
fmuls
xchg
loope
cli
repz
cmpsl
ds
cmp
scas
aas
test
repnz
or
add
sar
out
mov
and
je
push
cmp
jb
mov
pop
pop
in
shll
cmpsb
in
jle
addr16
pop
movsb
scas
pop
xchg
xorl
xchg
pushf
popf
iret
inc
enter
jo
jl
pushf
xchg
pop
xor
incb
lea
mov
fisttps
gs
loop
or
lcall
cld
mov
pop
pushf
ficoms
imul
es
mov
or
and
mov
or
push
or
int
lods
xchg
mov
dec
gs
fwait
cwtl
rcrl
mov
movsl
mov
inc
cmp
test
cmp
mov
inc
lcall
call
inc
test
adc
cmpsb
or
lcall
mov
fistpl
ss
pop
mov
push
mov
and
test
in
dec
je
add
or
xor
jle
and
ljmp
xor
cmpl
or
pop
rorl
or
sub
sbbb
repz
jecxz
cmpsb
lods
cmp
sbb
das
sub
nop
push
jg
fsubrp
into
incb
adc
andb
cmp
into
jno
fwait
dec
pop
rep
insb
sahf
sub
cmpsb
movb
adc
xchg
lods
test
hlt
popa
pop
and
push
pandn
pushf
dec
mov
std
pop
mov
add
scas
ret
lret
shrb
dec
jecxz
movsl
popf
mov
jecxz
in
imul
outsl
ret
push
lods
fisubs
push
fmul
xchg
and
adc
fcomps
jae,pt
outsl
or
cltd
fwait
adc
mov
ret
in
test
mov
imul
addr16
mov
mov
sub
sbb
push
mov
mov
push
ret
out
leave
jae
push
add
push
pop
sarb
jecxz
sbbl
stos
out
inc
out
cmp
stos
fs
popf
adc
int3
add
ja
xor
inc
or
inc
mov
adc
cld
call
mov
stc
lret
loop
push
or
shl
jo
cmpsb
xchg
sbb
adc
cmpb
popa
mov
idivb
or
sbb
mov
call
and
add
pop
pop
shrl
pop
xchg
lds
sbb
popa
in
pop
out
fidivrl
push
cmp
mov
jmp
mov
in
nop
mov
dec
mov
subb
test
cltd
jecxz
inc
addr16
arpl
adc
mov
ljmp
mov
pop
push
inc
lea
or
inc
rcr
int3
fisubl
cmp
jg
loope
test
stos
mov
fistpll
jb
cmp
mov
roll
dec
push
rol
shll
fidivrs
out
sbb
xchg
movsb
mov
mov
dec
fadds
aas
adc
rcr
cld
sub
ljmp
cmc
pop
dec
mov
out
cmp
mov
mov
mov
lea
jl
push
add
cmp
gs
call
push
ret
pop
fldenv
in
pop
pusha
orl
fwait
pop
fsubrs
movsb
mov
add
or
es
insl
js
adc
cmc
push
gs
and
mov
xor
cmp
sti
xabort
jg
and
sbb
dec
mov
inc
repnz
jl
pop
pop
stos
sbb
adc
faddl
dec
adc
fwait
cmp
ret
mov
push
cli
int3
and
fs
insb
std
arpl
movsl
loop
lea
cmp
fisubl
dec
cmp
inc
iret
jmp
insl
enter
fsubs
shrl
pushf
ja
out
xor
add
call
sub
sub
xlat
cmp
or
mov
xchg
out
test
out
aam
movb
xchg
adc
pushf
push
fst
fnstsw
sub
nop
sahf
add
popa
fdivl
aas
dec
dec
fstps
mov
sbb
nop
mov
daa
mov
mov
pop
mov
sbb
sub
gs
aaa
add
mov
jns
or
sbb
bsr
cwtl
sti
xlat
lock
fdivs
sub
fimull
lock
cmp
sub
stc
out
lods
movsl
enter
cld
or
cli
lds
dec
dec
push
repnz
lret
stos
push
in
aam
xor
in
es
or
aaa
in
in
addl
jnp
leave
js
cwtl
adc
jg
sar
pop
or
mov
imul
es
lea
or
push
stc
int
sti
loope
cmpsb
sahf
stos
mov
mov
mov
jnp
add
jae
in
cs
mov
jmp
dec
fdivs
jbe
fsub
lock
cwtl
jo
and
imul
lahf
adc
cs
push
mov
pop
int3
add
test
loope
movsl
lret
xlat
mov
dec
sbb
mov
ss
and
test
mov
cmp
xor
or
push
cmpsl
push
jp
fs
dec
jbe
cltd
sbb
imul
lcall
ret
xor
push
test
in
pop
nop
js
mov
jmp
pop
push
xor
lret
pop
aam
and
aas
or
ss
add
loope
mov
addr16
repnz
nop
push
ljmp
shll
test
xor
lahf
and
dec
and
aad
outsl
pop
push
insl
sbb
sub
xor
cs
adc
test
pushf
cmpb
in
orl
hlt
shlb
sahf
mov
mov
sahf
xchg
sbb
mov
pop
cwtl
jo
shlb
add
popf
sti
mov
rclb
aam
into
push
mov
push
sub
adc
iret
scas
in
fwait
insl
cmpb
mov
add
fiadds
inc
adc
adc
outsl
cmpsb
ljmp
lret
call
pop
jg
jbe
mov
jo
test
xchg
jmp
out
pop
adc
out
ja
push
jg
adc
sbb
cmp
div
or
sub
scas
lea
in
adc
cmp
sti
lock
push
cs
jecxz
push
jno
xlat
lods
fwait
cmpl
mov
jmp
mov
and
clc
push
pop
jbe
inc
xor
std
rcll
mov
push
bound
shll
movsl
dec
pop
cmp
mov
pushf
mov
or
jo
js
push
dec
call
and
int3
or
mov
push
fistl
int
push
pop
popa
rcr
jae
in
mov
jno
cmp
or
fidivs
jmp
divl
jo
push
std
pop
pop
shlb
in
push
xorb
out
cmpsl
insl
fwait
push
pop
mov
sub
cli
and
jne
adc
push
push
jnp
out
out
add
sub
xlat
sub
int3
sti
pusha
mov
mov
push
arpl
cltd
adc
jbe
sbb
imul
lret
cltd
cltd
add
mov
or
fs
hlt
jbe
dec
pop
jb
fsubrs
xor
inc
push
ficoml
mov
mov
ljmp
mov
leave
xor
inc
or
data16
xchg
bound
add
imul
in
adc
test
cli
pop
or
outsb
push
push
stc
and
sar
cmpsb
add
sti
andb
lret
cmp
gs
fnstenv
mov
xchg
ret
daa
inc
es
rclb
xor
aas
aad
clc
aam
push
or
pop
push
imul
inc
jae
and
nop
mov
loop
dec
jnp
aam
inc
loopne
mov
mov
cltd
xchg
dec
pop
mov
les
add
push
aas
insl
test
sbb
mov
inc
pushf
or
xchg
pop
inc
gs
hlt
adc
bound
insb
das
jl
jb
xor
cmp
in
pop
xchg
push
sub
mov
pop
lcall
mov
push
push
add
lret
sbb
hlt
push
shrl
sbb
or
ds
cs
jnp
jg
rolb
sub
sub
inc
dec
es
lea
adc
icebp
loopne
out
jae
cmpsl
and
xor
jg
jno
sbb
mov
sbb
cmp
jb
addr16
mov
fwait
jmp
inc
insl
notb
sti
out
das
aas
inc
stos
sbb
mov
and
mov
in
push
jbe
mov
jmp
jge
jne
add
jne
xor
jo
ja
jmp
movsb
inc
daa
add
shr
mov
xchg
or
dec
out
repnz
in
mov
jbe
lods
push
add
sub
loopne
sbb
pop
sub
xchg
das
popa
jae
mov
pop
push
cmp
add
into
cmc
popa
mov
sti
xlat
insb
fdivl
push
fildl
and
repz
int
push
pop
sub
mov
xchg
xor
repnz
or
subb
fldcw
idivb
loop
mov
subb
xchg
cmc
mov
dec
dec
mov
scas
mov
jg
insl
sub
mov
pop
in
sti
in
scas
and
gs
dec
into
pop
inc
sub
mov
mov
incb
push
stos
dec
cltd
rorl
mov
stos
cld
fnstenv
lds
scas
add
sub
andb
xchg
jle
movsb
ljmp
jg
fs
jnp
faddp
loop
pop
and
mov
ja
cld
andb
and
adc
inc
sbb
mov
test
call
gs
jmp
xor
mov
ja
lret
mov
dec
mov
sbb
pop
mov
jg
xchg
insb
gs
and
push
jne
testl
mov
pop
clc
xchg
xchg
sbbb
sbb
and
call
xchg
cmp
incl
mov
mov
addb
cltd
pop
ret
loopne
lods
adc
call
push
inc
xchg
fsubs
lcall
imulb
in
or
jle
lret
daa
mov
push
movsl
mov
lods
jle
fwait
sti
mov
xchg
mov
pop
iret
fdivl
into
je
std
lahf
aaa
or
in
push
sub
test
sarl
pop
cmp
inc
add
iret
jmp
mov
inc
jg
out
fists
and
popa
cld
push
idiv
imul
adc
inc
popa
cmp
or
or
jl
inc
lds
mov
ds
roll
test
mov
mov
adc
or
dec
ljmp
mov
xlat
cwtl
das
or
mov
imul
push
mov
fmuls
sbb
out
cli
gs
lret
sub
addr16
cmp
jp
sub
out
aas
insb
insb
or
movsb
or
inc
icebp
es
pop
fisttps
or
add
call
jne
imul
pop
test
inc
sub
push
imul
test
adc
sahf
cld
jns
and
mov
jmp
dec
icebp
pop
in
xchg
or
ljmp
dec
and
hlt
cwtl
push
cmp
mov
les
dec
ficomps
les
iret
mov
fwait
lods
jmp
adc
dec
or
fdivrs
rorb
inc
ficompl
push
push
repz
imul
jo
jmp
adc
fs
lcall
jmp
mov
pop
xchg
and
mov
dec
adcb
loopne
rcr
or
ja
jae
addb
push
dec
outsb
xor
sbb
out
xchg
les
push
mov
pop
test
pop
push
js
jnp
iret
popa
je
ret
or
sar
push
ret
insb
push
xchg
jb
out
pop
sub
lea
lcall
jnp
cld
sub
xor
or
cmp
insl
adc
dec
arpl
dec
outsl
iret
loope
pop
std
sub
xor
popf
stc
add
stos
push
pusha
rclb
inc
setp
jle
lahf
pop
add
lods
dec
popf
mov
ds
cld
sub
into
pop
pop
sahf
test
sbb
out
ficoms
in
sbb
cmp
pusha
cltd
push
push
in
cltd
shr
xor
jle
mov
movsb
test
out
stc
sub
add
imul
jp
jo
aad
jae
subl
or
movsl
test
inc
scas
jnp,pt
lret
arpl
xchg
cwtl
call
hlt
mov
sahf
fmuls
mov
sahf
divl
mov
ljmp
xorb
mov
push
push
call
and
ljmp
jns
mov
mov
addr16
call
ss
mov
sbb
and
sub
stos
lods
ret
lea
stos
mov
push
add
mov
decb
sti
orl
cwtl
lds
mov
or
sti
or
add
sub
mov
cmpsb
cmpsb
sub
js
jae
push
xlat
repz
mov
inc
ljmp
iret
push
hlt
mov
sbb
mov
add
jp
pushf
repz
pop
or
lods
jg
aad
mov
sbb
adc
or
xor
outsl
popf
mov
push
ljmp
fadd
xchg
pop
stos
arpl
inc
sbb
mov
fdivp
inc
mov
pusha
pop
aad
repnz
call
mov
dec
arpl
enter
idiv
mov
sub
jne
and
arpl
sub
sbb
and
sbb
bound
pop
sub
push
xor
js
and
mov
fstl
mov
mov
xchg
mov
cltd
imul
je
daa
lds
int3
xchg
add
adc
lock
add
push
mov
les
in
sub
mov
arpl
sub
and
mov
pop
jle
cmp
jne
xchg
cmpsb
mov
sbb
bound
lret
iret
nop
test
pop
xor
sub
pop
add
adc
mov
push
aad
push
pop
mov
in
mov
jnp
sbb
imul
mov
dec
pop
or
inc
cmp
lahf
out
mov
or
pushw
mov
sub
cld
or
xor
mov
xor
inc
jge
lret
xchg
hlt
mov
in
xchg
test
inc
adc
inc
jnp
push
mov
sbb
mov
lea
add
ret
cmp
cmp
sbb
sub
xchg
cwtl
xchg
aas
mov
test
loope
cmp
popa
and
fidivrs
push
cmc
push
pop
test
aas
out
out
sbbl
lret
pop
push
dec
add
test
lock
add
dec
mov
imulb
stos
cwtl
mov
in
test
into
and
mov
sahf
add
rorl
sub
cmp
popf
loop
mov
push
push
dec
mov
fs
outsl
lods
popa
jecxz
push
mov
test
in
jnp
aaa
sub
sbb
xchg
cmp
xlat
pop
lods
xor
mov
mov
xchg
or
push
adc
fmulp
and
repz
insb
xchg
cmp
cmp
sub
scas
ret
aas
fcoms
int3
imulb
jl
and
add
cwtl
push
push
or
pushl
ds
push
in
fldt
xlat
pop
movsl
push
sbb
sarl
fisubrs
cmp
dec
test
lahf
inc
mov
iret
mov
sub
cli
inc
pop
lahf
xchg
jmp
into
test
mov
popf
pop
mov
test
out
xor
stc
mov
cmp
out
lret
jg
sbb
push
dec
inc
push
xchg
int3
mov
sbbb
jl
push
aas
push
jno
ret
jp
js
rclb
push
xlat
insb
cmp
mov
int3
push
add
mov
sbb
cltd
cmpsl
dec
outsb
mov
cmpb
mov
mov
movsb
jno
int
leave
mov
cwtl
cmp
mov
xchg
icebp
jo
aas
test
in
ret
repnz
push
pop
sub
and
std
mov
std
fisttpll
mov
cwtl
loop
pop
jg
ja
adc
pop
lea
xchg
push
push
imul
aas
mov
mov
or
daa
lods
push
xor
jnp
push
out
int
test
mov
jle
jl
les
add
lods
mov
mov
clc
sbb
lea
push
aas
mov
fwait
aaa
add
fimull
cwtl
mov
nop
pusha
and
or
js
adc
leave
into
mov
or
int3
xor
cwtl
add
notb
fs
inc
xor
adc
inc
movsl
fildl
add
data16
push
pop
mov
ja
movsb
movb
pop
clc
dec
enter
push
ds
or
arpl
xor
repnz
push
push
dec
movsl
aas
xor
cmp
imul
bound
arpl
xor
sbb
jmp
fadds
pop
pop
test
push
ret
mov
in
int3
add
imul
hlt
movsl
add
mov
push
pop
jle
imul
mov
pop
mov
xchg
test
dec
sahf
loopne
or
mov
push
cmp
xchg
mov
cmpsb
pop
arpl
sub
je
sbb
push
pop
and
stos
mov
cmp
movsb
imul
jb
imul
push
xor
jne
add
mov
clc
xor
sbb
loop
mov
ret
ss
and
cmp
xchg
mov
cmp
jne
aam
lret
ljmp
aaa
pushl
cltd
sub
jecxz
dec
jo
pop
cmp
push
aam
cld
sbb
sbb
ja
mov
clc
sub
dec
into
imul
cwtl
sbb
loope
fnstcw
cld
xor
push
movsb
push
scas
pop
shl
je
or
inc
out
outsb
adc
shlb
or
inc
jne
sub
mov
ret
and
xor
mov
outsb
ret
int3
out
mov
xor
mov
fnstenv
jnp
outsb
aad
mov
imul
mov
jb
andl
fidivrl
push
loopne
call
fstpl
jb
mov
orb
mov
dec
adc
adc
xchg
xor
mov
sbb
shlb
dec
inc
pop
aas
cmp
rcrb
rorb
mov
dec
and
repz
insl
dec
dec
movsb
push
popl
lds
cmp
hlt
repnz
jecxz
add
push
scas
cmc
push
add
scas
lods
into
pop
mov
fstpt
idiv
mov
dec
lea
adc
cmp
mov
lret
pushf
gs
rolb
and
stc
mov
jmp
pop
lea
stos
in
and
or
dec
imul
faddl
out
ret
sub
aad
xor
addr16
shlb
mov
decb
enter
xor
out
mov
xor
or
popa
mov
scas
cmpl
xchg
mov
jle
push
sti
insl
jns
pop
mov
movb
lea
or
push
cwtl
pop
movsl
mov
mov
pop
mov
sub
test
inc
mov
fnstcw
fistpll
mov
mov
fucomi
lahf
push
pop
jecxz
mov
lea
jle
lock
icebp
xchg
inc
cli
push
pusha
add
enter
adc
addr16
mov
cmp
loopne
lahf
lods
adc
repz
cld
mov
andb
jnp
mov
imul
rcrl
repnz
cli
adc
cmp
and
loope
mov
jno
sub
add
imul
add
inc
lret
jne
dec
push
scas
scas
jbe
leave
and
fimull
std
insl
sub
pop
in
xor
add
into
or
xchg
add
inc
out
mov
jmp
push
or
mov
call
adc
jmp
dec
sub
aad
xchg
das
jno
jecxz
lock
inc
dec
dec
stos
cld
je
std
mov
mov
dec
adc
sub
mov
lahf
lea
test
inc
rcll
mov
mov
cmpsl
lods
xchg
leave
repnz
jns
outsl
mov
cltd
sbb
iret
dec
mov
mov
xchg
ljmp
sub
rcl
es
stos
mov
or
mov
mov
mov
push
pop
js
jmp
shrb
mov
mov
dec
aam
aad
faddp
movsb
fwait
mov
shlb
inc
mov
jmp
aam
cli
xchg
pop
xchg
cmc
jmp
test
mov
push
cmpl
mov
inc
fwait
mov
mov
dec
lret
aad
and
sbb
divl
dec
cwtl
pop
loope
or
ja
ret
out
leave
mov
fdivrs
dec
repnz
sbb
or
adc
pop
mov
insl
leave
pop
out
imul
arpl
add
popa
sarb
mov
mov
stos
icebp
mov
pop
pop
pop
cs
and
and
cmp
outsl
outsb
fnsave
ficomps
ljmp
push
es
fwait
push
rorb
mov
xor
add
mov
mov
mov
cmp
aaa
jp
push
daa
inc
gs
daa
aam
pop
sahf
pop
add
ret
pop
add
mov
dec
lods
rclb
iret
push
mov
ljmp
sbb
jecxz
adc
data16
bound
ja
scas
andl
or
cli
sbb
insb
dec
xor
ret
pushf
dec
sbb
cmc
daa
int
sub
cs
xchg
mov
es
in
dec
rclb
xchg
les
pushf
push
dec
push
xor
in
push
jmp
mov
orps
loopne
repz
jbe
out
sbb
xchg
jno
testl
into
sbb
push
push
inc
icebp
shll
add
push
or
sarb
sub
test
iret
push
mov
mov
in
out
mov
stos
and
xchg
push
xchg
mov
mov
in
mov
inc
sbb
and
cmpsl
or
or
push
shrl
cwtl
cli
pop
out
xchg
pusha
adc
stos
lahf
pop
dec
fisttpll
imul
pushf
pop
adc
test
mov
stos
dec
data16
add
mov
inc
arpl
add
push
sub
mov
les
xchg
lock
nop
mov
xchg
movsl
mov
movsl
pusha
push
pushf
cmpsl
ja
push
dec
fadds
adc
leave
cmpsb
jle
cld
icebp
mov
cmp
adc
jns,pt
cmp
sub
inc
lods
adc
fistps
repnz
loop
or
test
enter
cmp
xor
rclb
int3
sbb
cmp
es
pop
sub
mov
xor
inc
jnp
sbb
arpl
jg
data16
fstl
jg
sarb
outsb
xor
xor
in
hlt
ss
inc
inc
pop
inc
cmp
mov
or
lods
adc
pusha
fstpt
dec
int3
lock
repz
adc
loopne
inc
repz
inc
lea
mov
inc
or
cmp
data16
sbb
dec
addr16
mov
aaa
add
dec
aad
popf
test
scas
jo
imul
fcmovnbe
xchg
rorb
push
xor
jg
mov
cmc
ss
movsl
inc
dec
xor
push
mov
popa
lock
scas
outsl
ljmp
pop
test
xchg
mov
xchg
decl
sub
std
add
adcl
in
dec
outsb
mov
sbb
ret
or
jge
mov
cmp
test
cmc
inc
sbb
push
or
or
in
add
mov
cmpsl
push
push
sbb
or
and
hlt
test
adc
jne
movsb
xor
mov
dec
out
jl
das
pusha
pushf
jl
test
jp
filds
push
into
fwait
decl
nop
pop
add
adc
inc
rorl
imul
jne
mov
xor
jae
stc
xor
mov
mov
aam
movsb
mov
adc
pop
sbb
pop
subb
add
fxch
ds
test
imul
jmp
jns
xchg
mov
sub
and
bndldx
in
cwtl
lahf
push
out
mov
std
dec
dec
mov
insb
mov
push
stc
out
hlt
fsts
lea
push
cwtl
or
mov
fidivrl
fimuls
lahf
sub
mov
xchg
pusha
dec
int
adc
cmp
mov
push
inc
sahf
mov
lods
xchg
jmp
pop
fidivl
xchg
sahf
cmp
mov
scas
mov
cmp
int
test
pop
sti
pop
lcall
pusha
rcrl
cmp
fadds
ss
xchg
dec
mov
enter
sub
cmp
xchg
jmp
cli
cmpsb
cmc
out
cli
or
loop
dec
xchg
jg
mov
in
mov
cmp
cld
call
xor
push
fistl
ja
lcall
inc
shrb
popf
pop
mov
clc
ja
mov
fisttpl
fsubrp
rcll
and
push
cmp
pushf
jb
inc
push
js
mov
bound
mov
mov
cmp
cmp
xchg
std
xchg
and
jl
leave
adc
add
movsb
icebp
test
inc
inc
and
xor
in
ret
mov
cmp
jo
les
cmp
fwait
shll
rolb
cmp
fwait
outsb
push
fimuls
mov
jbe
adc
lret
fiaddl
adc
mov
out
add
jne
mov
and
mov
inc
insl
cmp
add
mov
pop
mov
mov
or
sub
fsubrs
sahf
or
adc
xchg
or
xchg
std
pop
push
js
movsl
shl
je
cli
addr16
cmp
fdivrs
mov
adc
jno
fs
xor
push
out
loop
arpl
sub
jmp
mov
ljmp
loope
mov
dec
sub
sub
movsl
aaa
push
xchg
mov
lds
out
call
mov
add
addr16
xchg
mov
test
dec
stc
dec
cmpsb
addl
subl
adc
lock
mov
pop
ficoml
fildll
inc
scas
dec
insl
gs
add
push
sti
fnstsw
lahf
sub
xlat
ds
daa
test
in
pop
mov
cwtl
cmc
xor
mov
pop
dec
es
adc
mov
sub
aad
pop
ss
nop
inc
mov
adc
cld
mov
outsl
cmpsb
sbb
xchg
or
vphadduwd
daa
addr16
aaa
in
orb
inc
dec
xchg
xchg
leave
mov
cltd
xlat
leave
jecxz
dec
test
and
into
aaa
into
sarl
adc
pop
sub
inc
mov
jmp
lods
xlat
jecxz
iret
push
pop
mov
jns
xor
sti
cmpsb
pop
jg
out
repz
rcrl
sarl
xor
test
cmp
stos
aad
or
or
imul
aad
pop
jno
pop
fstpl
inc
icebp
sbb
xor
jecxz
lock
fstl
and
jb
inc
in
hlt
sbb
push
aam
clc
mov
push
int
clc
scas
push
mov
push
mov
imul
ljmp
jle
test
add
dec
ret
push
fisttps
jge
and
fldl
cmp
and
xor
fisubs
inc
cmp
xor
push
out
mov
fiaddl
nop
sub
cld
inc
enter
cmp
cmp
xor
imul
sahf
aaa
ror
and
xor
jle
aas
lods
jg
pop
jo
ss
push
mov
add
sub
add
push
lock
fadds
hlt
jle
pop
fcomp
ret
jae
pop
mov
mov
std
inc
jnp
in
loopne
ja
add
ret
pop
dec
lahf
pop
dec
insb
stc
loopne
xchg
lods
inc
sbb
cltd
inc
lahf
inc
cmp
insb
fwait
lds
dec
ret
push
xor
cld
test
lcall
pop
andb
sti
call
ja
shl
clc
fiadds
sbb
cmp
cwtl
inc
dec
divb
push
mov
add
fwait
divb
jnp
cs
fcoms
lock
adc
mov
shrd
mov
int
lock
je
sbb
inc
pop
maxps
icebp
and
lret
in
cmp
jge
rcrl
xchg
cmp
loope
lock
ficompl
int3
pop
sbb
add
ffreep
lock
test
ficoms
pop
xchg
stos
loopne
out
ja
stc
cmpsb
xchg
shlb
dec
je
mov
lahf
mov
inc
pop
xchg
ljmp
jecxz
repnz
pop
leave
mov
subl
imul
out
fs
mov
fisubl
or
xchg
and
movsb
repnz
movsl
sbb
push
fadd
sub
mov
xchg
jl
std
andb
mov
cli
cmp
loopne
mov
int
lods
or
adc
xchg
cmp
insl
orb
loop
inc
push
idivl
mov
cwtl
dec
scas
ret
mov
adc
ret
dec
mov
sbb
sbb
std
or
jnp
repnz
sub
repz
out
sbb
xor
adc
pop
pop
or
dec
pop
jp
jle
lods
push
xchg
icebp
rolb
and
xchg
or
push
stc
push
inc
dec
add
scas
loopne
pusha
and
rcll
stc
sub
push
or
mov
pushf
mov
stos
out
jb
cmp
popf
sub
aad
sbb
jno
jae
insl
insb
mov
xor
push
mov
xor
pop
inc
jbe
jno
ret
lods
push
jnp
cmp
insl
popf
adc
ret
in
dec
inc
add
and
outsb
inc
dec
xchg
mov
cmpsb
cmp
loope
pop
mov
imul
enter
push
fcmovb
xor
mov
leave
xor
shrl
bound
inc
ljmp
mov
xchg
push
cs
xchg
add
push
aam
and
xor
adc
cmp
inc
imul
cmp
clc
inc
pop
sahf
ljmp
pop
in
xorb
cmp
xor
pop
xlat
sub
mov
call
adc
mov
addb
xor
in
call
mov
pop
mov
adc
or
or
sub
inc
hlt
je
jecxz
or
adc
push
sub
enter
mov
int3
jle
daa
adc
jbe
mov
jne
int3
fisttpl
sbb
mov
js
ja
fmull
jmp
adc
pop
imul
pop
lea
inc
lds
int3
outsb
mov
pop
in
js
push
outsb
in
inc
cmp
push
cs
mov
inc
nop
xchg
mov
sbb
lods
jno
mov
call
ret
pop
aas
ret
in
fsubl
push
imulb
int3
mov
mov
incb
mov
push
fsubs
pop
or
pop
jp
jge
mov
pop
push
insl
sbb
fcomi
xor
outsl
cmc
lock
xlat
xchg
outsb
stos
or
insb
inc
dec
fimuls
addr16
jbe
sbb
or
ss
sbb
inc
jecxz
jnp
mov
mov
mov
les
adc
daa
sbb
push
je
inc
push
lret
icebp
mov
adc
jbe
adc
xchg
adc
je
ja
push
jmp
scas
mov
sub
sahf
dec
mov
daa
cli
mov
jbe
cmp
in
ss
pop
lcall
sub
xchg
jb
sub
sbb
pop
sbbb
inc
push
jp
cmp
jge
dec
or
mov
movsl
and
shll
pop
sub
pop
lahf
scas
leave
jg,pt
std
jge
ja
inc
insb
xor
or
into
rcrb
cs
ficoms
je
pop
ja
mov
mov
popf
cmp
xlat
inc
mov
inc
and
movsl
xchg
es
push
jle
daa
pop
dec
fcmovu
loopne
stos
adc
sub
push
xor
ffreep
mov
dec
rcll
mov
or
jg
movsb
mov
fwait
lock
sub
fstp
sbb
fnsave
dec
test
fwait
cld
cmp
mov
mov
stos
push
out
insb
pusha
jp
xor
cmp
pop
movsl
inc
jg
out
loopne
shll
sbb
xchg
rcr
xchg
add
xor
jns
adc
movsb
adc
or
mov
imul
pop
dec
mov
outsl
iret
jge
pop
push
dec
adc
xchg
inc
push
cld
xor
test
fwait
int3
jb
out
sbb
push
mov
cli
lods
jmp
add
push
cli
in
cmpsl
in
and
sar
mov
in
lahf
and
nop
stc
das
push
aaa
cli
inc
push
adc
cli
add
cmp
and
and
lock
cmc
push
push
cli
fnsave
inc
adc
fwait
clc
cmp
and
sti
xchg
adc
jno
xlat
cwtl
xchg
out
add
or
cmp
xchg
loope
shl
mov
cmp
scas
shlb
adc
addr16
dec
push
xchg
xor
xchg
clc
pop
imul
xchg
test
lock
rep
call
out
adc
in
fucomp
xor
std
fldenv
lods
fistps
mov
inc
out
mov
cmp
mov
push
sbb
xlat
pop
jns
outsb
lods
fdivrs
shrl
cmp
push
das
ss
imul
outsl
in
add
cmp
test
movntq
push
test
pop
cmp
out
inc
cmc
rol
dec
in
repnz
jle
jbe
addl
iret
repz
pop
mov
and
leave
mov
rcll
adc
add
mov
and
mov
ds
out
insb
or
push
subb
or
mov
inc
iret
cmp
sub
sub
add
out
dec
jnp
sti
adc
push
dec
addb
leave
xchg
mov
xor
dec
xchg
xchg
mov
mov
mov
sub
mov
pop
lahf
push
rcll
mov
mov
push
aad
jg
pop
jle
xor
inc
cmpsl
loopne
test
shrb
pop
push
aam
dec
inc
cmp
or
jecxz
mov
arpl
enter
jb
add
data16
push
out
adc
or
test
insb
ret
clc
inc
test
pop
add
adc
stos
cmp
aad
mov
movsb
scas
sub
mov
lods
adc
push
jge
ret
sahf
or
ja
mov
incb
shrb
mov
mov
xchg
and
filds
fwait
xor
and
push
push
fmull
xchg
push
ficomps
jbe
fidivrl
roll
mov
jbe
cmp
xor
js
lea
or
addb
dec
jno
test
mov
mov
add
mov
mov
xchg
insl
rcll
or
cmp
sbb
mov
test
dec
mov
pop
scas
adc
xor
push
mov
int
out
jl
xchg
xchg
xchg
test
fdivs
mov
add
scas
ret
push
or
fstpl
es
and
lods
xchg
lret
jnp
insb
subb
jnp
dec
sbb
push
inc
andl
inc
dec
mov
mov
pop
inc
insb
aaa
or
dec
mov
xchg
pop
pop
ds
lret
cmp
test
mov
sub
mov
int3
push
pop
xchg
mov
dec
and
shlb
leave
or
rcll
xchg
dec
in
cmp
rcl
jge
push
sbb
insb
cwtl
cmc
div
je
add
pop
popf
cs
insl
push
inc
push
mov
cmp
mov
lods
mov
jmp
fldcw
pop
add
add
adcb
jae
push
setp
arpl
push
pop
xor
stc
and
lods
add
add
or
xorl
test
mov
cmp
add
aad
lahf
xorb
sbb
mov
enter
jbe
adc
or
or
mov
movsl
mov
out
push
rcrb
and
xor
mov
pop
repz
lds
inc
cld
movsb
mov
or
mov
dec
scas
mov
data16
sbb
dec
mov
jb
int
or
fcoml
fsubrl
lock
in
movsb
aam
into
pusha
fistps
lods
popf
sub
rorl
rcr
mov
and
std
mov
sub
xchg
lods
jecxz
lcall
dec
jecxz
mov
push
cmp
in
sbb
lds
std
popf
test
loope
pop
jl
lock
int3
xor
inc
pop
repz
or
push
lcall
popf
dec
aaa
pop
lret
or
adc
dec
mov
inc
cmp
mov
aad
cmp
adc
or
in
test
push
add
lahf
lret
icebp
xchg
inc
outsl
daa
cmpl
jmp
mov
popa
xchg
xchg
lds
lcall
push
adc
xchg
jne
loopne
dec
shll
stos
data16
dec
mov
sbb
push
adc
test
ljmp
push
aam
popf
sub
xchg
pop
dec
xor
push
fwait
and
mov
call
mov
mov
xchg
add
jbe
lods
js
and
add
ret
pop
mov
rcr
pop
outsl
xchg
and
push
mov
aas
cli
scas
or
inc
int
mov
movsl
in
outsb
fstpt
mov
rorl
fs
shrb
cmpsb
pop
ljmp
cmp
test
and
xor
xor
xor
stc
neg
test
jg
repz
mov
test
out
mov
repz
push
test
adc
jbe
lods
xchg
adc
mov
cltd
insb
fs
xchg
or
negb
add
clc
stos
cmp
insl
lea
ret
addr16
add
decb
inc
daa
enter
into
sti
sbb
cmp
adc
shrl
push
imul
and
aad
pop
out
fidivrs
pop
xchg
insl
lret
imul
jno
and
inc
xor
push
movsb
test
xchg
inc
in
vunpcklpd
pop
cmpsl
outsl
jecxz
rcrb
hlt
xchg
jns
mov
pop
jmp
inc
fs
out
int3
clc
lret
inc
xor
incb
test
subl
dec
scas
inc
adc
mov
jns
adc
dec
rolb
lahf
xchg
push
push
lcall
push
lcall
popa
loop
repnz
outsb
mov
lds
mov
stc
add
stos
fdivs
mov
ret
mov
movaps
int3
filds
cs
or
rorl
mov
lods
xor
sub
cmp
arpl
in
dec
or
lds
and
pop
mov
xchg
jne,pn
sbb
jg
sbb
je
xor
popa
or
fildll
inc
cld
aas
pop
icebp
inc
and
iret
adc
mov
jle
aaa
sbb
push
sbb
imul
daa
arpl
mov
repnz
xor
or
incb
push
enter
jo
dec
cmp
mov
adc
int3
lods
and
inc
push
dec
fwait
jns
rclb
sub
or
mov
int
cmp
divl
arpl
mov
inc
jne
cmp
ja
sbb
dec
lods
dec
call
inc
nop
or
fs
inc
addr16
shrl
xor
loopne
dec
sbb
movsw
push
lret
push
sbb
stc
int3
jae
push
jge
inc
outsb
es
imul
sub
and
mov
adc
mov
push
inc
cmp
xor
cltd
cmp
xor
xor
mov
mov
arpl
mov
xchg
dec
push
push
bnd
cmpb
adc
js
repz
rcr
sbb
mov
and
xor
push
inc
adc
add
cmp
xor
fprem
test
adc
cmp
ret
stos
pushf
popa
xchg
pop
add
ds
lcall
pop
mov
mov
jmp
or
xchg
dec
push
push
xchg
loop
lcall
lock
pop
jno
insl
xchg
jo
cltd
out
ljmp
cmpsb
mov
mov
nop
mov
mov
push
mov
movsl
out
push
mov
xchg
jne
dec
cmp
mov
imul
imul
or
sbb
clc
dec
repz
pop
cmpsl
jbe
out
and
sub
cmp
mov
adc
loope
mov
xchg
add
jg
icebp
mov
xor
xchg
addr16
rorl
sub
fs
xlat
pop
andb
sahf
or
push
adc
outsb
sub
out
push
push
xchg
and
lahf
cmc
mov
ljmp
ret
jb
shl
push
addr16
loopne,pt
inc
or
mov
cmp
stos
or
dec
sbb
mov
imul
mov
and
jecxz
fst
mov
or
add
je
xchg
fistpl
pop
dec
and
and
je
sub
rcrb
inc
add
mov
mov
inc
int3
cmpb
xor
mov
sbb
dec
inc
pop
sbb
sub
test
mov
pop
pop
push
cs
push
add
shll
lahf
js
daa
mov
mov
inc
jno
scas
pop
sahf
inc
lret
es
jne
lahf
jo
mov
pop
das
loope
and
inc
pop
sbb
ret
jbe
pop
sbbb
xchg
cs
or
xor
bound
das
jg
cli
out
cld
add
push
dec
rorl
jge
ficompl
aaa
push
jno
icebp
jge
andb
or
loop
pop
and
mov
xchg
or
sbb
shll
jmp
stc
push
cmp
out
inc
insb
ss
arpl
adc
ret
jbe
add
outsl
outsl
mov
pop
in
stos
mov
mov
mov
daa
dec
xchg
js
rcr
jg
xlat
ljmp
jg
and
adc
arpl
mov
add
jno
cmp
int3
inc
pop
data16
jle
mov
jno
xchg
mov
fisttps
sub
in
bound
dec
lock
mov
push
out
mov
push
mov
mov
out
fcomip
and
jmp
and
pop
and
lods
movsl
mov
mov
dec
jns
das
pop
push
push
inc
cltd
or
xchg
in
mov
les
jnp
pop
lret
jnp
or
imul
fstpl
xlat
gs
jmp
jp
xchg
popf
gs
push
add
sbb
jl
jno
lods
adc
out
std
stc
in
dec
and
rcrb
lret
mov
xchg
sub
les
rcl
test
mov
cmp
or
sub
push
shlb
orb
lret
popa
movsl
and
push
push
imul
out
test
xor
cmp
repnz
ficoms
mov
hlt
mov
adc
setge
push
adc
and
pusha
mov
jge
mov
xor
inc
jecxz
inc
add
iret
cmp
aas
bound
mov
dec
pusha
xchg
or
out
xchg
in
int
rorb
out
outsl
and
nop
mull
mov
sbb
das
cmp
xor
xor
cmp
inc
sbb
mov
mov
lcall
ret
test
push
movsl
sub
push
jae
stc
cmp
scas
sbb
sub
push
fidivs
adc
in
outsl
adc
repz
int
xorb
addr16
sbb
or
dec
xchg
pop
pop
xor
mov
cmp
mov
push
subl
fsubrp
out
aam
out
push
push
int
rorl
sub
fbld
sahf
fidivrl
mov
xor
imul
pop
or
and
jmp
imulb
add
aam
in
lret
stc
cmp
lahf
popf
iret
add
and
std
lret
imulb
pop
push
sbbb
inc
xorl
dec
sub
xchg
lret
addr16
add
pop
std
and
lret
add
arpl
cwtl
jl
xchg
and
and
sub
sub
orb
nop
dec
mov
cmp
idivl
push
outsl
mov
add
rcll
movsl
test
clc
sbb
jns
sahf
btcl
cmc
out
xor
in
adc
shr
call
out
scas
nop
test
push
push
inc
cmp
xchg
hlt
jno
ret
sub
roll
nop
or
es
pop
fdivs
fmull
mov
insl
dec
repz
pop
inc
mov
ficoms
nop
repz
aam
inc
into
lahf
inc
aas
popa
aas
mov
ret
dec
mov
push
dec
mov
or
mov
fs
pop
cmc
push
mov
data16
imul
push
mov
and
outsl
ficoml
fwait
hlt
push
jecxz
fptan
xchg
je
std
test
repnz
je
add
cmc
notl
push
xlat
lret
std
cmp
jp
xor
lods
popf
inc
and
faddp
push
sbb
jge
push
in
and
jo
xchg
mov
cmp
mov
in
and
inc
pusha
sub
push
xchg
mov
adc
xor
sub
lret
icebp
add
mov
mov
inc
sbb
jbe
mov
test
fwait
jecxz
jl
mov
in
mov
xor
je
push
pop
jae
sub
movsb
and
xchg
cmovno
add
movsb
lds
nop
cltd
cs
adc
movsb
popa
sbb
mov
cltd
mov
subb
movsl
fisttpl
in
ds
cmpb
arpl
cwtl
dec
sub
cmp
mov
add
outsb
jmp
dec
pop
arpl
inc
aad
repz
scas
ja
mov
pop
mov
xor
xor
movsb
shlb
jg
addl
jmp
das
and
cmpsb
in
sarl
jne
inc
gs
xchg
mov
dec
cmp
into
pushf
pop
xchg
fwait
bound
jmp
mov
shr
sub
insb
int3
xor
mov
inc
imul
stos
std
scas
sub
int
mov
cmp
and
in
adc
das
lret
push
mov
jo
sbb
mov
xchg
icebp
shl
sahf
insb
sbb
pushf
dec
cmp
jmp
popa
or
adc
cmpsl
pop
pop
pop
icebp
loop
mov
idiv
imul
int
jo
push
imul
lret
pop
cmp
mov
mov
into
jns
or
mov
pop
push
cmp
subl
aad
std
sbb
sbb
sti
nop
outsb
mov
push
ror
mov
cmpsl
scas
aam
insl
cltd
pushf
sbbb
mov
cli
lock
mov
fstpl
movswl
test
mov
mov
push
aas
daa
or
xchg
dec
insb
sub
pop
jno
call
addb
pop
movsl
testl
and
repnz
jb
shlb
pop
dec
fcmovnb
stos
sahf
sbb
pop
out
movsl
and
fstps
cltd
mov
cmc
mov
and
inc
pop
out
cmp
mov
imul
call
cmp
in
or
mov
stc
jl
mov
fmuls
inc
add
cwtl
incb
xadd
lods
xor
movsl
mov
movsb
loope
or
mov
mov
addr16
insb
leave
dec
push
jae
arpl
out
jecxz
mov
mov
cmovbe
sbb
xchg
jno
scas
fisttpl
arpl
lea
or
subl
cmp
mov
mov
pushf
mov
add
xorb
cmp
push
fldt
hlt
in
push
jge
jnp
loope
loopne
sub
data16
popf
cwtl
leave
addl
insl
mov
pop
inc
insl
xchg
testb
jb
dec
xor
push
ds
push
lea
mov
repz
shrb
inc
pop
pushf
insb
xchg
pslld
lods
or
sub
sub
pop
stos
adc
push
inc
push
dec
xlat
pop
addr16
mov
fstl
cmpb
fbstp
xor
in
and
mov
cld
dec
xor
es
mov
into
nop
movsl
or
cmp
dec
sbb
shr
or
aas
xchg
xchg
xchg
pop
imul
ja
inc
in
sub
scas
cwtl
mov
mov
add
pop
pop
adc
push
inc
aam
or
aaa
add
bound
add
mov
mov
pop
jne
outsl
add
call
fwait
xor
jmp
xchg
adc
rclb
xor
xchg
xchg
lret
sarl
popf
jo
pop
shrl
jo
icebp
daa
push
lcall
ficoml
test
inc
sub
or
inc
popf
out
cmp
insb
xchg
mov
aaa
shll
mov
lock
xchg
sub
cs
xor
inc
int
ds
icebp
inc
mov
jns
orb
lock
jp
adc
sub
and
pop
inc
and
dec
sahf
stos
adc
dec
mov
inc
mov
mov
aam
or
mov
sub
mov
sub
jmp
daa
dec
and
std
and
sub
pop
movl
sub
adc
test
mov
xchg
cmp
sbb
mov
bound
dec
add
add
or
pushf
push
inc
mov
movsb
adc
inc
sub
mov
sub
cs
stos
xor
dec
cmp
loope,pt
insl
test
iret
outsb
sti
je
gs
push
ficomps
jae
jno
mov
and
sbb
sub
aad
xor
scas
push
sti
fsubr
cld
cmc
int
out
out
mov
lea
mov
adc
mov
push
adc
bound
lcall
in
sbb
mov
stc
sti
and
adc
cmp
sub
mov
dec
loop
inc
inc
into
clc
adc
cmpsb
sbb
notb
mov
pop
or
out
pushf
pop
subb
sbb
add
cmp
adc
adc
ljmp
imul
out
daa
aas
test
in
scas
jb
cmpsl
push
and
ljmp
rorb
cwtl
insl
lea
mov
add
xor
mov
loope
mov
and
lock
loope
inc
adc
in
cmp
mov
test
dec
mov
add
dec
pop
mov
sahf
mov
mov
pop
adc
popa
jle
and
pop
fdivrl
cmpb
daa
jb
jg
lods
dec
push
dec
rol
adcl
test
ret
mov
dec
repz
stc
fcmove
add
adc
and
push
push
sub
mov
xchg
inc
or
jb
xor
or
fsts
sbb
mov
cmp
push
test
rorb
je
test
fsubr
sub
mov
jge
add
or
dec
leave
mov
addr16
cmp
loop
adc
pop
rorb
xchg
gs
pop
jbe
push
scas
rolb
adc
call
adc
add
mov
push
push
cli
jmp
or
dec
mov
push
iret
inc
pop
insl
aas
orl
xor
testl
xchg
cmc
jl
and
stc
or
sub
xor
sbb
mov
pop
pusha
pop
cmp
clc
cmpb
arpl
mov
add
call
xchg
jbe
jl
inc
mov
sub
das
js
jae
xor
dec
outsb
sbb
cmpsl
pop
hlt
cmp
pop
in
add
lds
inc
cli
divl
inc
mov
notb
arpl
xor
in
lret
jnp
ret
lss
push
mov
inc
loop
sbb
ds
xchg
pop
adc
dec
jae
sbb
dec
dec
inc
inc
ljmp
add
mov
sub
or
fidivrl
clc
mov
lods
mov
std
or
mov
xor
xor
push
mov
jo
pop
pop
mov
mov
inc
ret
cmp
mov
leave
mov
adc
add
loope
push
ja
cs
pop
xor
sbbl
inc
sub
jae
kmovw
adc
cwtl
push
add
pop
lock
dec
fstps
lods
out
inc
adc
mov
cmpsb
xor
push
push
pop
mov
ss
cmpsl
into
add
lods
hlt
and
mov
or
aas
scas
aas
lret
mov
mov
fsubr
leave
mov
into
push
mov
cmp
pop
jmp
fistl
test
pop
int
sub
test
xor
ret
jp
mov
stc
loopne
push
arpl
das
jo
push
push
or
incl
xchg
ja
cltd
fwait
mov
dec
pop
jge
xchg
dec
imul
xor
rolb
jb
jp
fdiv
outsl
cmp
sub
repnz
add
add
pop
dec
iret
push
stos
sahf
imul
or
push
pop
fistpl
in
sbb
out
cmc
inc
aaa
jne
aaa
pop
repz
je
xchg
arpl
out
xor
out
imul
mov
icebp
scas
and
fs
push
mov
pop
xchg
mov
sub
mulps
cwtl
mov
test
mov
and
sbbl
and
xchg
adc
das
outsl
jae
or
aaa
mov
jp
insb
sub
mov
mov
fdivs
push
and
sahf
popf
add
jne
pushf
mov
in
in
ja
roll
cltd
push
iret
pop
jl
cld
mov
movsb
mov
leave
lret
adc
dec
js
pop
call
rorl
insb
pop
ds
adc
lock
cmp
addl
aad
adc
sti
popf
cli
out
fisubrs
jnp
scas
lock
pushl
add
aam
inc
pop
fists
sub
pop
iret
pop
pushl
jg
or
inc
or
and
cld
lods
jae
insl
test
es
cmpsb
inc
add
imul
leave
into
sbb
mov
sbb
mov
imul
mov
pop
mov
mov
pop
push
xchg
mov
jmp
sub
jl
bound
xchg
call
fsts
mov
outsl
pop
andb
adc
scas
cmpsb
jmp
loop
scas
fisttpl
mov
lahf
and
jecxz
lods
shll
int3
pop
sbb
add
stos
xchg
daa
ja
nop
push
ljmp
dec
loop
push
ffreep
dec
cmc
aaa
loop
cwtl
push
movb
fldl
fldenv
cld
xchg
lods
jno
push
cmp
hlt
push
inc
pop
or
testb
ljmp
adc
xchg
cmp
and
loop
mov
mov
adc
ja
mov
xor
add
int
and
jmp
imull
mov
inc
les
negb
nop
fdivr
arpl
dec
cmpsb
movsb
cld
or
mov
mov
clc
outsb
jnp
jecxz
in
into
insb
fs
xor
sub
fsubrp
dec
adc
clc
mov
pop
adc
inc
stos
cmc
lods
sub
mov
mov
sarb
dec
pop
outsl
jnp
mov
jne
cmp
dec
out
xchg
cmp
or
mov
xchg
mov
pop
aam
jl
inc
std
push
inc
pushf
mov
push
in
mov
subl
outsl
out
mov
push
movl
aaa
imul
pop
clc
shrb
icebp
mov
fimuls
inc
testl
std
adc
in
mov
cmp
jge
xchg
lds
cli
mov
push
cli
sub
inc
jge
mov
lret
mov
and
bnd
mov
lahf
sub
jecxz
imul
inc
pop
jo
ds
pop
jle
fs
pop
dec
aam
pop
xchg
loope
data16
cmp
hlt
jns
outsl
xor
imul
orl
pop
xchg
ds
sub
sahf
cmc
shlb
cld
ljmp
dec
aas
cs
nop
xchg
gs
ja
adc
mov
xchg
dec
ss
sub
sub
and
mov
enter
sub
xchg
pop
xchg
fistl
jbe
ret
cmpsb
into
stc
pop
push
push
mov
adc
je
pop
inc
jo
xor
mov
inc
cmp
fisttps
mov
mov
cmc
fdivs
sub
jmp
rorl
cmp
jns
mov
pop
add
pushf
imul
or
popa
dec
mov
push
sahf
aas
cmpsb
lods
outsl
adc
add
adc
push
lret
into
std
fistps
out
sbb
pop
int3
clc
cmp
mov
pop
push
dec
add
cmp
cld
add
add
int3
daa
fcmovnu
sbb
push
lods
push
mov
mov
loope
mov
push
push
mov
jmp
pop
xor
mov
in
decl
xchg
out
sub
and
pushf
test
stos
dec
xchg
and
ja
mov
mov
addr16
pop
cltd
add
dec
fsts
push
das
xchg
xchg
lds
sub
push
cmc
int3
test
clc
je
adc
xor
sub
or
imul
leave
mov
daa
movsb
into
cwtl
adcl
sbb
sub
movsb
sub
jae
pop
sub
mov
jo
andl
loope
ja
jg
nop
out
pushl
lods
jno
lods
mov
mov
outsb
lret
pusha
dec
mov
mov
imul
jo
nop
jecxz
pop
scas
push
call
enter
add
dec
cmpsl
repz
push
in
fldt
outsl
dec
inc
jg
xchg
in
ds
test
in
inc
popa
daa
pop
and
js
xchg
adc
xchg
wbinvd
add
aam
dec
out
xchg
test
ret
pop
scas
jg
mov
cmp
cmp
xchg
sub
adc
mov
mov
and
aaa
dec
mov
push
mov
lods
ret
test
test
cmpb
mov
cmp
push
in
cmp
pop
mov
xchg
pop
add
ljmp
dec
outsl
mov
pusha
das
pop
jp
in
mov
cmp
insl
mov
add
pop
jns
lock
js
adc
dec
sub
insl
adc
jae
sbb
mov
jns
push
pop
jae
stos
jmp
push
hlt
xchg
xchg
mov
jp
mov
sysret
lods
pop
in
dec
mov
adc
std
cmc
fldt
mov
inc
push
outsl
fistl
fld
testl
lea
xlat
add
inc
int3
movb
hlt
arpl
cmp
loop
in
dec
jl
fs
in
aam
sahf
mov
mov
movsl
js
cmp
jmp
repz
popf
jbe
xchg
out
insb
sub
add
or
pop
push
dec
gs
xor
push
dec
addr16
nop
cmp
mov
ss
or
inc
imul
lret
pop
or
inc
test
push
orb
scas
in
add
mov
in
pop
out
jle
fadd
int
icebp
inc
jnp
sub
arpl
icebp
cmp
jnp
push
iret
into
pop
sbb
decl
jns
enter
pop
cmp
inc
add
and
cltd
insb
inc
pop
adc
test
jp
shr
nop
pop
movsl
cmp
lahf
pop
mov
stos
enter
dec
and
mov
sub
scas
inc
mov
mov
lea
cmc
xchg
push
add
test
push
pop
lock
shrb
in
cmc
xchg
shl
or
sbb
or
int3
push
or
sti
or
gs
pop
jne
roll
lods
dec
outsl
push
jne
imul
sbb
mov
push
cmp
sahf
mov
sub
mov
and
mov
lods
mov
hlt
js
push
pop
and
dec
stc
mov
jecxz
push
mov
xor
lahf
mov
repz
xchg
movsb
scas
test
pop
lea
pop
jbe
data16
out
adc
shrb
push
lds
fstl
mov
aam
jp
jmp
frstor
jnp
and
test
pop
push
mov
aaa
test
es
arpl
and
and
lea
or
inc
add
aam
xor
xor
push
and
cmp
or
jns
outsb
pop
loopne
jg
hlt
sarl
into
inc
xor
in
aam
add
xor
inc
out
pop
sti
mov
out
mov
lea
pop
dec
adc
inc
jge
in
daa
dec
xchg
adc
nop
ficomps
inc
mov
cltd
rol
std
cmp
cmp
scas
adc
idiv
les
sbb
or
ret
dec
push
jl
add
lods
pop
mov
sbb
sub
xchg
aas
mov
je
sub
or
inc
int3
and
aas
imul
loope
xor
adc
andb
lea
out
pusha
lods
cmc
inc
cmp
add
jecxz
cltd
jo
repz
sbb
pop
in
decb
test
hlt
aaa
lods
roll
pop
rclb
xor
rorb
mov
mov
mov
jp
adc
push
xor
scas
leave
xchg
mov
icebp
jo
insl
std
fldt
daa
sarb
lock
sub
arpl
not
xor
mov
leave
mov
in
fs
mov
push
filds
scas
lock
ror
repz
push
leave
lcall
cmp
dec
leave
pop
leave
imul
add
jl
xchg
test
cmp
jo
jmp
adc
mov
jnp
mov
fsubs
push
ds
add
xchg
add
in
stc
lds
and
daa
adc
pop
and
nop
cmpl
mov
ds
mov
dec
bound
andb
test
pop
nop
shrl
mov
adc
call
insl
or
xlat
and
push
lahf
xor
cmp
fsubs
jnp
push
imul
xor
into
hlt
inc
xchg
jae
cwtl
js
mov
push
push
pop
loope
dec
or
jae
sub
cld
imul
andb
jo
outsl
or
add
push
testl
jae
movlps
jecxz
and
adc
mov
mov
and
inc
push
ljmp
pop
push
xrelease
mov
lds
sub
in
push
mov
into
push
and
cmp
inc
or
inc
sahf
push
xor
mov
fidivl
sub
leave
mov
mov
adc
stc
into
das
jns
test
out
cli
sbb
call
pop
dec
scas
push
push
sahf
jbe
cmp
push
stos
xchg
popf
imul
push
mov
mov
inc
push
jnp
jp
mov
jns
in
mov
lahf
mov
pop
dec
outsb
fcoms
dec
mov
mov
lods
dec
cmp
dec
ja
pop
push
icebp
scas
out
jmp
imul
mov
pusha
adc
cmpsb
add
nop
adc
and
xor
sti
arpl
jbe
mov
cwtl
test
mov
cld
stos
aas
sbb
push
mov
xchg
cmc
jb
dec
outsl
pop
inc
cmp
ret
test
inc
mov
jb
fwait
ja
sub
jb
xor
insl
push
inc
test
sbb
mov
sub
add
xchg
mov
out
mov
repnz
sbbb
cwtl
xor
into
add
js
inc
lock
push
nop
or
loope
jne
rcl
xor
sbbl
inc
or
mov
xchg
cwtl
aaa
int
call
cmpsb
mov
lea
sbb
sub
push
outsb
cmpsb
fs
das
push
movsl
loopne
jmp
add
jp
xchg
cmp
inc
daa
cmc
or
xchg
inc
test
sub
aas
mov
sub
mov
int3
xchg
mov
jg
lret
jp
movsb
jecxz
adc
subl
out
push
mov
xlat
nop
inc
dec
aam
clc
adc
push
pop
push
hlt
push
mov
jo
es
in
pushf
sarb
loop
jnp
sbb
lret
cmpl
adcl
push
mov
adc
fs
leave
ffreep
imul
insl
jne
into
or
sub
adcb
out
and
pusha
fmul
scas
jns
pusha
lret
lret
and
jne
sbb
insl
add
sub
cmp
mov
sbb
sub
sub
imul
mov
imul
aas
mov
fisubl
adc
mov
sbb
int3
xchg
jns
lock
add
pop
mov
test
lea
es
frstor
es
iret
mov
xchg
pop
add
cmp
adc
in
popl
nop
xor
cmp
jl
inc
pop
pop
aam
outsl
push
cld
popf
fadd
popw
cmpsb
pop
dec
int3
lock
cmpsl
lods
xor
adc
pop
dec
inc
out
add
mov
imul
mov
rcrl
int3
dec
daa
jl
mov
sahf
cmp
mov
fmuls
sahf
sbb
push
test
or
ljmp
and
out
das
dec
adc
push
inc
push
and
add
addl
fadds
sbb
inc
mov
scas
mov
fnstsw
insb
sti
sub
repnz
sbb
xor
pop
xor
push
movb
dec
xchg
ficoml
fsubrs
add
jnp
jae
insb
push
ja
mov
scas
lods
sbb
xchg
dec
xor
dec
inc
jo
sub
push
inc
and
outsb
sub
pop
fdivs
push
in
cmpb
cld
ja
inc
sbb
jl
dec
xchg
pop
fldl
xchg
mov
mov
jge
jp
mov
movsb
sub
push
cltd
inc
dec
lds
or
pushf
inc
js
mov
xchg
jbe
xchg
enter
mov
fimull
jle
adc
sti
xor
xchg
ljmp
mov
int3
bound
push
push
push
fadd
jg
ret
and
data16
push
mov
sub
mov
imul
popa
test
xchg
pop
idivl
andb
outsl
test
push
stos
and
pop
fdivr
das
sti
int
fnstcw
js
add
dec
mulb
cmp
sahf
fdivr
out
xchg
push
mov
pop
mov
pop
cmp
xchg
nop
mov
das
xor
mov
push
lods
test
rorl
cltd
dec
pop
bnd
pop
sub
mov
repnz
dec
xchg
inc
imul
roll
repnz
into
enter
bound
imul
jbe
cli
pop
jmp
cld
xchg
fsubr
scas
dec
popf
daa
sub
lret
out
enter
xchg
dec
insb
or
inc
movsb
notl
adc
lcall
xchg
mov
add
dec
into
pushf
dec
push
push
pop
clc
aam
inc
mov
movnti
push
jecxz
ljmp
or
inc
into
scas
push
jge
cltd
pop
notb
sbb
imul
popf
js
push
push
pop
mov
xchg
jo
mov
cmp
int3
dec
sub
adc
fwait
mov
mov
lods
loopne
int
and
push
add
xor
rolb
sub
sub
jns
test
and
pop
mov
sub
fcomps
shl
jp
rclb
into
stos
add
cmp
mov
clc
mov
ret
lods
xor
fcmovbe
push
cld
dec
lcall
aaa
cwtl
pop
dec
pop
lea
mov
xor
pop
or
jmp
mov
scas
sbb
cmpsl
jo
cmp
cmp
stos
cs
out
int
jmp
sbb
push
imul
hlt
jmp
je
ret
mov
sbb
adc
data16
xor
shr
lea
sub
daa
mov
lds
retw
gs
pop
scas
out
in
xchg
dec
add
xchg
and
lcall
cmp
dec
leave
jg
aas
into
cld
sub
icebp
push
out
xchg
bound
mov
cmp
cmp
jp
mov
adc
lret
mov
sbb
ljmp
adc
adc
cmp
iret
outsb
xchg
sbb
xchg
outsb
xchg
dec
in
cmp
fisubrl
enter
or
mov
enter
xchg
popf
test
imul
jg
test
sbb
sahf
jl
fs
push
mov
lock
lea
jecxz
daa
fidivrs
test
cltd
add
push
push
sbbb
stos
mov
dec
cs
push
jns
jge
testb
ss
adc
shlb
inc
rorl
jno
ja
add
in
push
test
mov
out
cwtl
sub
sarl
inc
imul
in
xorl
jmp
add
adc
mov
add
mov
rorb
bound
add
std
lods
std
add
mov
mov
stos
sub
jb
cli
adc
cmp
stc
or
push
scas
cmpsl
les
adc
add
push
or
add
cli
mov
mov
fldt
lods
stos
cld
call
inc
dec
dec
mov
fcompl
adc
push
loop
fwait
sbb
mov
sbb
push
xchg
cwtl
roll
pop
cmp
out
push
pop
hlt
dec
shrl
push
rclb
xor
xchg
pop
enter
cli
sub
jae
push
ret
test
add
shrb
ds
inc
fcom
pop
insl
mov
dec
lret
xor
pop
loope
pop
js
adc
add
xchg
imul
js
pop
cmp
xchg
pop
xchg
rcr
push
fadd
addr16
arpl
movsb
sbb
fstpl
or
xlat
sbb
roll
fcomps
std
sbb
je
sub
pop
test
imul
pop
imul
sbb
pusha
pop
ffreep
icebp
icebp
mov
orl
xorl
jno
stc
inc
sbb
ficoms
add
lcall
cs
test
icebp
mov
les
sub
std
cltd
aas
push
mov
loopne
sti
mov
jmp
stos
mov
jl
test
or
in
lods
or
call
loopne
ret
jns
xchg
lea
lahf
jbe
or
popa
daa
andl
sbb
push
mov
sti
xchg
out
pop
push
add
mov
xor
or
jb
fldt
in
sub
int
pop
ret
test
xor
cmp
rolb
push
in
jno
and
inc
xor
cld
sbb
add
pop
cmp
leave
repnz
or
adc
pop
test
fsubs
add
jae
push
or
jge
jnp
xchg
fstpl
popa
jb
push
and
bound
add
cmp
fimuls
aaa
inc
inc
out
imul
mull
repz
jo
fidivl
leave
jnp
and
pop
data16
ds
and
andb
xor
lds
add
sub
sbbb
enter
jae
sbb
and
ficompl
push
mov
xchg
or
inc
jg
out
xchg
pop
fbstp
lds
nop
dec
cmp
in
add
jp
outsl
iret
adc
cmpsl
mov
jae
pop
sbb
sbb
test
loop
pop
cwtl
lahf
mov
rcl
bound
jns
fmuls
sbb
push
sbb
jmp
mov
jl
add
cmp
push
add
push
jno
bound
ror
xchg
enter
mov
push
into
mov
cli
daa
add
jno
mov
ret
push
out
test
dec
adc
shlb
in
stos
nop
adc
push
outsb
mov
es
mov
pusha
not
mov
cmpsb
dec
or
xchg
mov
xchg
add
enter
sahf
les
ret
sub
fisttps
cli
aaa
jns
xchg
outsb
xchg
lret
jmp
fisttpll
cmp
loop
add
adc
daa
dec
and
cmpsb
jp
cmp
data16
ror
or
aam
push
mov
push
scas
mov
mov
pop
pop
in
or
pop
jp
scas
call
ds
mov
clc
lret
inc
icebp
popa
adc
out
xchg
inc
pcmpgtd
scas
mov
ret
mov
out
pop
fwait
cmp
pop
test
ds
push
sbb
jnp
adc
icebp
sbb
dec
jmp
imul
rclb
cli
jl
push
mov
jbe
mov
out
push
xchg
xchg
fsubp
subb
loope
add
ds
leave
mov
mov
jge
pop
sub
sbb
xor
rorl
fcos
mov
sub
adc
lds
push
mov
add
sbb
sub
mov
xor
sti
out
fdivl
fidivrs
lret
push
inc
cmp
lret
sbb
mull
inc
lods
adc
jmp
icebp
jo
repz
mov
clc
jecxz
push
fldenv
inc
mov
nop
xor
xchg
gs
fidivrs
cs
inc
mov
sub
pop
and
les
push
xor
fnsave
dec
lret
adc
mov
lret
mov
xor
sub
or
ljmp
testb
in
jbe
dec
clc
leave
mov
jne
fst
or
mov
sub
test
icebp
jmp
adc
movsb
and
clc
push
popa
pop
sub
xchg
and
or
imul
ljmp
inc
add
adc
test
imul
aad
out
jb
ror
stos
jb
jae
pop
lea
inc
push
aas
ljmp
jg
repz
rep
mov
imul
decb
nop
fdivrp
fadds
mov
xchg
mov
sub
sahf
xchg
jbe
jno
movsl
xlat
add
mov
test
mov
cmc
ja
sub
sub
dec
cmp
sub
mov
aam
inc
lock
ja
jae
movsl
lahf
or
sub
adc
lret
add
gs
lock
and
xchg
pop
repz
movsb
push
clc
lret
ds
and
xor
sbb
mov
repz
xor
iret
xor
sbb
sub
fisubl
and
aam
cmc
faddp
mov
je
fdivr
test
or
jge
jnp
lcall
push
popf
mov
adc
add
les
outsl
or
jp
ja
and
cmp
fiadds
mov
pop
das
jne
fs
sbb
imul
sahf
stc
push
ficoml
mov
xchg
xchg
ror
das
cs
repnz
add
sub
int
inc
push
mov
out
xchg
gs
shlb
mov
je
cmp
loopne
push
cld
in
xor
xor
or
sarb
or
scas
outsb
push
jns
add
jg
lcall
mul
shlb
repz
pushf
add
pushl
les
fldt
addr16
cs
addl
ficoms
and
lahf
mov
and
xor
lret
lahf
jns
loopne
lret
pop
lahf
je
movsb
adc
mov
mov
add
lods
rclb
cltd
xchg
cmp
inc
idivl
add
ss
call
bound
adc
rolb
stc
jns
cmp
cmp
nop
cmc
and
jno
mov
push
cmp
bound
mov
shrb
scas
rcrl
mov
out
or
jnp
enter
xor
ljmp
jecxz
mov
rorl
fcoms
out
lods
adc
add
cmpsl
mov
xor
lock
mov
sub
push
fwait
dec
xchg
mov
mov
mov
or
jl
cmp
xchg
fisttpll
mov
ss
adc
or
inc
clc
pop
fidivl
inc
outsb
or
add
push
sbb
aad
loopne
fnstsw
push
and
lods
outsl
xorb
in
mov
mov
and
push
stos
cmp
push
mov
aaa
sub
jle
icebp
mov
cmp
out
fists
jmp
scas
push
cmp
adc
into
xchg
mov
sbb
or
mov
int
jg
jo
pop
fisubl
aam
lock
mov
xor
loopne
fs
inc
push
frstor
insl
ljmp
aad
mov
int
mov
shl
gs
mov
fistl
pop
cli
fs
fidivl
push
lds
pushf
sbb
pop
fcomi
xor
cwtl
dec
push
in
test
arpl
orb
xor
in
push
in
xchg
pop
test
sbbl
pop
fistpl
loope
cmp
pop
xchg
sahf
pop
sbb
inc
jo
in
mov
sub
test
inc
inc
aaa
addl
pusha
insb
or
roll
push
add
psubsb
js
push
xchg
ret
push
cwtl
pusha
inc
mov
aad
lock
nop
sti
dec
push
mov
mov
jae
or
lea
out
setb
adc
mov
mov
mov
add
mov
or
sahf
rcr
mov
daa
push
mov
inc
push
jmp
aad
insb
mov
lea
data16
mov
imul
xor
icebp
ds
sub
xchg
out
cmp
lods
xor
xor
je
and
bound
push
fwait
stos
pusha
pop
jne
test
jge
push
out
lods
aaa
cmp
loop
xor
or
jl
pop
cmp
add
loopne
push
ffree
shr
in
je
inc
jns
lahf
push
cwtl
inc
adc
jle
or
rol
lahf
mov
xchg
shll
sub
and
rorl
dec
inc
jns
adc
or
mov
mov
jge
fcompp
fsubrl
sub
add
or
les
ret
cmp
fwait
xchg
sub
adcl
lock
js
stos
js
mov
mov
mov
xor
push
mov
adc
mov
xor
push
sbb
lods
and
sarb
push
mov
mov
je
shr
clc
pop
inc
mov
cwtl
xor
in
outsb
fdivr
push
loopne
xchg
pop
mov
sbb
jge
stos
ljmp
dec
cmpsl
jle
xchg
out
out
stos
inc
mov
jl
xor
push
lods
push
fadd
push
cli
xor
or
mov
mov
movsb
mov
fs
andb
aas
or
stos
jecxz
xorl
mov
scas
into
bound
mov
into
and
push
int3
adc
adc
xor
negl
daa
fwait
jnp
scas
ljmp
movsl
lea
jge
loope
jae
mov
sbb
mov
sub
jb
mov
mov
outsb
jge
mov
addr16
fwait
cs
jecxz
mov
pushf
fistl
mov
mov
adc
or
jae
lret
fcoml
cmp
negb
jne
add
or
push
inc
out
int3
push
fsubr
iret
lods
jo
or
loopne
mov
push
outsl
js
pop
pop
mov
push
inc
subl
nop
push
lret
lret
shlb
je
xor
popa
lock
adc
jg
int
pop
pop
lock
sti
sbb
push
outsb
aaa
xchg
insb
cmp
fdivrs
ficoms
cmpsl
push
nop
xchg
xchg
orb
jmp
adc
iret
xor
arpl
stos
jl
push
dec
mov
aam
aad
cli
xor
push
and
outsb
jle
adc
decl
andl
outsb
addr16
ljmp
mov
lea
mov
or
adcl
fisubrs
and
and
xor
out
cmpl
call
leave
mov
xchg
rcl
imul
jl
test
push
stc
out
jno
call
into
mov
pop
or
lods
movsb
movsl
sub
mov
js
movsb
xor
push
movsb
not
mov
in
lahf
cwtl
sahf
cmpsb
mov
pop
mov
cmp
or
xor
idiv
out
inc
mov
imul
xor
in
fnstsw
pop
mov
mov
sarl
mov
xor
push
out
jle
pop
in
mov
jne
jle
jp
dec
sti
stc
lcall
fistps
into
fnstcw
sbb
rcrl
out
aad
mov
ljmp
mov
mov
mov
repz
mov
cmp
dec
mov
jge
pop
cld
add
inc
adc
mov
addr16
test
mov
ljmp
sarl
aaa
or
jmp
arpl
lods
cmp
mov
xchg
mov
icebp
lret
adc
xchg
mov
shr
divb
push
cltd
mov
mov
add
int
xlat
push
push
data16
push
mov
push
mov
jb
cli
inc
jge
rorb
aad
sub
xlat
mov
jg
andl
int
call
dec
fisubl
pop
cmp
xchg
mov
jae
lods
xchg
cmp
sub
or
lods
andl
sub
mov
lods
inc
es
add
cmp
fcoms
and
push
addr16
movsb
rorb
push
fmuls
sahf
pop
jae
mov
xor
or
outsl
test
push
sub
popa
mov
mov
inc
lock
add
mov
lret
int
in
pop
push
loop
in
clc
mov
aaa
hlt
int3
mov
loop
pmullw
mov
inc
jle
ret
push
test
xchg
jbe
xchg
adc
scas
adc
pusha
stos
adc
dec
nop
aam
and
inc
lods
mov
adc
inc
fldt
adc
xchg
mov
or
lds
dec
rcr
adc
mov
sub
or
dec
mov
aaa
enter
mov
jbe
xlat
loop
imul
es
popa
arpl
popf
das
mov
inc
fwait
pop
jns
cmpb
jo
pusha
dec
push
lods
imul
and
jo
push
cmc
aam
sbb
addr16
adcb
das
arpl
repnz
mov
dec
bound
pop
mov
and
shlb
in
xor
add
sub
enter
clc
jae
outsb
fwait
mov
cmp
sub
pop
xor
shr
insl
sbb
jae
cli
xchg
repnz
popa
pop
inc
stos
or
pop
inc
inc
fcmovne
repz
cmpsb
lcall
fadd
dec
rolb
xchg
imul
cs
dec
repnz
jnp
pop
fbstp
outsl
int
lock
jae
mov
xorb
jge
adc
push
pop
mov
stos
dec
lret
aaa
cmp
xchg
mov
in
xchg
push
mov
xor
call
insb
ret
mov
call
cmpsb
mov
cmpb
jno
xchg
cwtl
push
movsl
xchg
push
or
push
repnz
cwtl
mov
outsb
rorl
cmc
dec
add
push
in
cmpsb
hlt
mov
lahf
adc
stos
gs
xlat
aam
push
negl
dec
push
sbb
sar
jle
sub
loopne
fdivrl
xor
popa
mov
daa
dec
rorb
jb
add
out
repz
mov
sbb
cmp
xlat
pop
mov
cltd
xchg
and
enter
loope
xor
fsubrs
push
and
cmp
je
lods
ds
movsl
outsl
jne
fwait
and
mov
ret
sub
ret
add
xlat
inc
jge
sti
scas
jae
cs
aaa
xchg
sub
sarl
adc
gs
scas
movsl
cmc
das
pop
push
ret
cmp
ljmp
sub
call
push
dec
scas
orb
jae
jecxz
sbb
mov
sub
xchg
insb
mov
lock
dec
mov
dec
std
mov
dec
adc
inc
andl
call
cmc
into
in
add
arpl
jnp
fcoml
jge
push
clc
aam
loopne
push
ret
sub
mov
js
ret
push
outsb
repz
mov
addr16
and
fs
in
shll
sbb
xor
aam
sahf
imul
fwait
mov
dec
sahf
fbstp
push
outsl
cld
insl
pop
cmp
test
cmc
cmp
xorl
gs
stos
pop
call
adc
sub
inc
popa
and
dec
mov
lret
ljmp
out
dec
into
jb
inc
cmpsb
test
cmp
push
mov
lock
sarl
insb
lahf
mov
and
sub
push
adc
adc
jae
fldt
push
inc
sub
and
orb
sub
andl
xchg
ja
mov
xchg
jne
cmp
inc
scas
out
pop
sub
out
dec
pop
push
or
mov
jb
xchg
add
enter
lret
repnz
dec
sub
std
out
jne
fldl
fildll
negl
out
out
in
sbb
lret
call
sbb
add
lds
push
mov
dec
inc
dec
pop
jno
xchg
fistps
rcrb
fidivrs
mov
js
xor
std
fists
dec
lret
pop
dec
xlat
cmp
mov
jae
cmp
jmp
inc
xor
sbb
cmp
cmp
or
xchg
in
into
outsb
notl
adc
icebp
jmp
push
int
fimull
sub
in
xor
inc
push
lret
mov
rsm
pusha
and
adcb
or
sarl
bound
xchg
test
iret
xor
mov
xor
cmp
dec
andb
rol
out
push
inc
sub
mov
int
xchg
das
shll
pop
cli
arpl
mov
in
adc
jae
pop
movsb
mov
lods
xor
aas
lret
shll
enter
aad
mov
jle
sub
push
mov
mov
insb
imul
and
push
push
fbstp
in
pushf
xchg
outsb
push
pavgb
and
ret
cmpl
lods
stos
xchg
int3
stc
rol
jbe
mov
fwait
cmc
inc
pushf
test
sbb
xor
xor
add
push
sub
xor
in
lods
aad
repnz
add
subb
or
pop
xchg
sub
loope
add
mov
adc
std
inc
xchg
adc
push
add
adc
xlat
cmp
loopne
sbb
aaa
outsl
pop
ljmp
xchg
insl
or
stc
les
out
jbe
xlat
cmp
std
les
ficompl
fstl
bound
adc
add
dec
lods
push
cld
repnz
es
jmp
add
mov
stc
dec
xchg
jns
and
lods
dec
aas
ja
mov
xchg
cld
push
in
das
push
fs
add
loope
push
inc
cmpb
sar
mov
inc
scas
stc
out
xlat
mov
mov
les
je
into
xchg
pop
mov
testl
add
and
sub
leave
fstpt
ljmp
test
lods
je
out
add
std
dec
movsl
and
xor
inc
mov
clc
jnp
aad
aam
sub
jmp
sub
orb
push
push
adc
insb
fucomi
and
and
xchg
dec
mov
pop
jb
cmp
shrl
and
dec
and
mov
xchg
xchg
cmpsb
adc
and
cld
std
mov
rorb
movsl
aad
cmp
je
cwtl
dec
pop
mov
outsb
insb
imul
pusha
sub
enter
insl
pop
cs
das
mov
dec
cmp
rol
test
mov
and
mov
xor
lods
movb
ret
jne
repnz
int
dec
ja
test
push
push
fnstcw
cmp
out
xchg
out
fmull
std
ss
notb
add
xchg
xchg
call
cmp
jge
leave
pop
fwait
repz
sbb
pop
push
dec
pop
mov
mov
push
data16
mov
dec
xchg
inc
ja
sbb
leave
mov
mov
popa
dec
and
mov
imul
cltd
jg
xor
lea
pop
ror
mov
adc
arpl
in
adc
in
inc
cmp
ret
ds
movsb
imul
out
cmp
lock
in
or
mov
lahf
jnp
mov
cmpsl
scas
mov
xchg
dec
pop
insl
adc
jge
cs
test
mov
add
dec
push
xchg
sbb
sarb
int3
repz
pop
test
inc
mov
add
xchg
jne
test
inc
out
pop
sub
clc
nop
jle
jo
add
fistpl
add
push
push
mov
jp
jno
insl
mov
rcr
bsf
pop
test
and
cmpsb
push
mov
xchg
pop
mov
jno
pop
mov
adc
inc
jo
xor
ljmp
or
nop
and
repnz
push
and
mov
aas
pushf
rcll
ds
xchg
insb
xchg
sub
sub
cltd
mov
jbe
popf
pop
and
push
jb
mov
fldenv
popa
mov
xchg
jns
cld
gs
cmpsl
aam
jmp
data16
imul
and
ss
lods
push
cli
pushf
sub
mov
push
pop
xor
dec
cli
xchg
or
mov
mov
xchg
lret
fstp
pop
xor
sbb
out
and
sar
andl
andl
lcall
lcall
push
lock
sbb
iret
lods
mov
inc
and
push
jbe
int3
push
sub
xor
xchg
fldl
scas
mov
fnsetpm(287
cmp
push
in
scas
sbb
pop
ds
shlb
cmpsl
sbb
mov
dec
aad
aad
pop
insl
cmp
sub
mov
mov
mov
and
mov
lret
or
orl
or
adc
sbb
std
jl
or
cwtl
jbe
int3
and
outsb
je
push
lcall
arpl
js
xor
sub
cs
in
push
test
testb
xor
lods
ret
test
jmp
arpl
push
mov
cld
cwtl
sbb
xchg
or
pusha
jns
es
or
sbb
rcrb
fisttps
dec
sbb
shrl
jle
outsb
clc
sub
push
aad
mov
add
in
das
in
push
dec
cmp
sbb
mov
xor
mov
into
lret
inc
sub
xorl
push
ret
adcl
jne
fisubrl
aad
pusha
mov
shrb
popf
stc
dec
sub
test
sub
inc
jo
mov
andl
or
ss
dec
pop
dec
es
and
sub
adc
cmp
or
mov
lds
out
xchg
xor
add
das
repnz
lock
pop
stc
fidivs
jnp
pop
cmp
shll
xchg
or
push
movsl
adc
mov
fs
aad
push
ds
pop
sbb
adc
mov
popl
inc
movl
fmull
insb
clc
push
out
out
mov
xchg
xchg
in
insl
orl
xchg
bound
shlb
lcall
add
std
inc
or
std
fsubs
cmpsb
js
sbbb
mov
data16
xor
xchg
mov
fldl
mov
aad
scas
dec
fucom
addb
ret
push
outsl
inc
add
add
inc
mov
xchg
rcl
fs
adc
fsubr
cli
daa
xor
stos
xchg
cli
mov
jle
push
jg
notl
inc
dec
mov
dec
add
mov
int
push
inc
aad
das
push
pop
push
nop
dec
cmp
pusha
or
sbb
ljmp
daa
or
mov
jmp
lcall
movsb
xchg
add
or
sar
cmpsl
jo,pt
inc
xor
jno
stos
and
movsb
popa
cmp
fistpll
jae
loope
test
je
je
in
mov
mov
jmp
mov
jbe
nop
mov
adc
mov
dec
mov
dec
sbb
test
push
adcb
or
ret
cmp
test
loop
push
xchg
jo
or
iret
lock
jns
out
pushf
mov
cmpsl
cltd
pop
fsubl
lods
sub
xor
lods
push
adc
jb
xor
mov
mov
pop
insb
pop
lods
js
femms
jg
jmp
shl
movb
pushf
xchg
sub
jg
pop
sarl
lock
dec
inc
jne
mov
fnsave
push
xchg
cmp
sbb
icebp
aaa
sbb
rcrl
int
xor
push
jno
mov
push
stos
pop
std
faddl
xlat
icebp
dec
pusha
fiaddl
push
ja
push
pushf
xchg
pop
aam
jb
das
inc
inc
je
das
popf
push
xor
nop
pusha
cld
mov
dec
pop
cmp
call
scas
sub
ds
mov
out
cmp
mov
lret
adc
xchg
push
xchg
or
pop
repz
push
mov
cvtdq2ps
sub
sti
add
xor
insb
inc
ja
stos
or
xor
push
jae
and
test
mov
sbb
push
outsb
and
les
ret
push
xlat
in
xchg
je
mov
pop
mov
and
sbb
mov
xor
pop
mov
inc
xor
aaa
hlt
or
fcoml
movsl
movb
add
sbb
xor
fbstp
dec
cltd
xchg
push
add
sub
inc
mov
mov
in
lock
adc
cmp
je
jno
jl,pt
xlat
push
mov
mov
ljmp
mov
les
and
push
xchg
sbb
pop
pop
in
popf
pop
cmpsl
inc
inc
sbb
das
sbb
in
mov
mov
sub
test
test
xchg
inc
loope
dec
sbb
std
inc
std
ljmp
fistps
mov
ss
fisubs
inc
bound
pop
enter
sbb
dec
or
frstor
sbb
clc
mov
adc
mov
jmp
or
cmp
stos
test
mov
mov
call
add
or
mov
out
add
sub
arpl
jg
sub
mov
adcl
mov
call
xchg
lret
push
xor
arpl
jb
jecxz
adc
leave
sub
int3
in
jb
cmpsb
push
ret
inc
mov
xchg
dec
addr16
pop
mov
push
add
ret
into
sub
pop
dec
mov
clc
lea
lret
lcall
jns
inc
aaa
shlb
cmc
popa
xlat
pop
test
adc
and
sbbb
push
jl
mov
loopne
jle
pusha
sbb
xor
xor
sbb
push
pushf
push
imul
pop
cmp
out
std
xor
enter
and
sbb
sub
adc
scas
xor
jl
int3
std
mov
add
inc
mov
mov
lret
out
sub
dec
add
repnz
cli
repz
push
rcrl
mov
jns
jo
adc
fsubp
ss
leave
mov
dec
adc
test
dec
aam
dec
dec
jp
xchg
cltd
loopne
cmp
repnz
xor
mov
in
jno
xchg
nop
jno
dec
sahf
dec
pop
and
enter
mov
or
jne
leave
lcall
lods
ret
shll
int3
cmp
push
adc
test
sub
xchg
repnz
adc
cld
insb
inc
and
add
mov
jbe
adc
mov
xor
fstl
pop
outsb
lahf
mov
mov
std
daa
aad
xchg
or
into
push
and
cmp
lods
jg
sarl
into
fstpt
ret
adc
sub
and
or
adc
imul
loope
jecxz
lods
sahf
loopne
sub
aaa
int3
icebp
mov
mov
cli
sub
aad
gs
popl
loopne
push
iret
xchg
daa
clc
jge
enter
and
js
dec
inc
dec
adc
mov
jle
inc
cmpsl
xchg
cmp
call
out
push
btr
xchg
jp
cs
push
lods
roll
fs
fsubl
sub
adc
movsb
adc
repnz
repz
outsb
xchg
hlt
testl
push
mov
call
mov
hlt
clc
into
lea
xor
mov
xchg
pop
imul
xor
add
aam
mov
in
ret
cmp
add
pop
out
and
icebp
xor
fxch
cmp
clc
push
iret
jo
push
int3
dec
jge
popa
and
jns
push
addr16
push
sbb
mov
push
push
push
into
pop
cltd
lock
xlat
inc
add
xchg
mov
outsl
sub
shlb
mov
pop
and
lods
out
sbb
aad
divb
pop
or
decb
inc
adc
jne
ja
imul
sub
insl
icebp
sub
imul
add
addr16
movsl
inc
jbe,pn
push
push
ret
xchg
inc
dec
xor
mov
and
push
sti
int
lcall
mov
mov
lcall
inc
mov
sbb
jne
popf
lea
sbb
scas
ss
adc
int
in
jg
inc
and
addr16
or
les
inc
insb
pop
popa
inc
out
popf
mov
or
xor
inc
mov
cmp
add
ss
add
jns
inc
lcall
outsb
inc
adc
cmpsl
out
imul
sub
xchg
inc
push
in
cmpsl
scas
fstpl
es
jg
mov
sbb
stos
inc
sub
sub
clc
and
cld
es
jp
loopne
js
lcall
pop
sbb
pop
inc
xor
enter
lds
daa
xor
sbb
adc
dec
push
into
sbb
mov
jle
aaa
mov
not
add
adc
clc
pop
add
fidivs
mov
jo
xor
mov
cmpsl
ja
adc
mov
or
leave
shrb
imul
vmovupd
stc
mov
adc
and
mov
rcl
jge
jmp
movsl
out
push
lahf
cld
repnz
push
push
or
xor
cli
es
pop
sbb
cmc
push
sub
loopne
add
mov
cmp
sub
push
ret
insl
jmp
inc
fisubrl
and
jno
sbb
pop
int
pusha
outsb
adc
and
mov
repz
sete
outsb
push
dec
adc
pop
sti
inc
push
push
cmp
test
or
mov
inc
cmp
iret
mov
flds
out
xchg
inc
mov
in
pop
push
push
mov
aaa
pop
push
in
cwtl
lret
in
cmpsl
in
aam
testb
jecxz
das
or
aam
aaa
mov
sar
popf
jmp
cmp
xor
add
add
push
push
cmp
push
xor
dec
lret
mov
xor
rcl
cltd
out
pop
and
lret
out
insb
add
inc
rclb
loopne
out
inc
xchg
pop
call
or
scas
mov
divb
aad
out
mov
imul
ds
inc
mov
outsb
aad
mov
call
or
movsl
inc
std
push
push
or
adc
std
mov
jl
dec
lock
cmp
mov
inc
push
pusha
and
movsb
lahf
hlt
dec
inc
xchg
jmp
imul
std
pop
mov
inc
sahf
jne
mov
jnp
enter
push
sbb
in
les
lret
and
inc
loopne
sub
ret
int
xchg
in
sbb
add
pop
jg
addb
mov
jle
xchg
in
imul
imul
add
test
xchg
inc
cmp
leave
push
insl
out
mov
shlb
push
test
int
mov
sub
dec
es
pop
clc
pop
sbb
shrb
push
rclb
popf
xchg
or
mov
aad
jbe
mov
insb
xchg
push
das
or
add
and
jmp
jp
sbb
imul
dec
sbb
inc
sbb
popf
iret
lcall
xor
dec
inc
in
dec
jp
pop
test
sbb
addr16
adc
test
pop
inc
loopne
adc
lcall
ret
jmp
jg
sbb
scas
aas
xchg
repnz
dec
adc
sbb
scas
mov
sub
mov
repz
cmp
lea
sbb
cwtl
xlat
dec
push
inc
or
push
movsl
jle
lock
xor
push
fmull
lret
cld
insl
sub
rcrl
xor
loope
jo
push
fs
frstor
fnstenv
add
lods
push
int3
xchg
jb
xlat
ret
mov
ljmp
lret
mov
jecxz
mov
mov
ljmp
pop
mov
leave
adc
test
pusha
mov
mov
adc
cmpb
faddl
or
sbb
or
out
sahf
fildll
addr16
push
andb
sub
mov
cmp
or
ret
add
cld
adc
mov
cmp
loop
shrl
testb
sbb
and
out
push
sbb
pop
ds
or
sbb
push
cmpl
jle,pt
rcr
adc
and
pop
mov
and
mov
mov
test
js
adcl
sbb
jno
lret
cmp
dec
nop
push
push
pop
mulb
sahf
jl
push
shl
int3
in
xor
jle
xor
testl
or
inc
pop
mov
mov
lods
cmp
push
sbb
aad
mov
sbb
iret
xor
dec
and
dec
mov
popa
adc
inc
stos
sbb
push
or
les
cmp
insb
lock
xor
jae
mov
popa
xor
inc
mov
addr16
mov
jo
sub
pop
or
dec
popf
xchg
or
flds
sub
lea
sbb
add
add
cmp
jne
inc
fs
out
xlat
adcb
push
fdivs
xchg
xchg
push
addr16
jno
jge
mov
aad
push
xchg
xchg
call
jns
xchg
xor
sbb
xor
cltd
mov
and
mov
in
add
push
xchg
jmp
cwtl
jbe
cmp
mov
pop
cmp
add
repz
dec
jg
test
xchg
mov
or
ss
jp
ds
cmpsl
inc
inc
or
add
fisubrs
add
lret
sub
mov
xor
push
add
fistpll
adc
cmpsb
addr16
push
jmp
inc
mov
or
insl
mov
fcomip
push
dec
andl
leave
push
push
pop
push
cmp
adcb
iret
cltd
out
repnz
aad
repz
vpackuswb
pushf
xor
fdivrp
arpl
outsb
jno
push
in
dec
add
pop
pop
fwait
lret
mov
mov
lds
sub
imul
push
jnp
mov
fstl
and
sub
mov
pushf
adc
rcl
cmpsl
xchg
fwait
loop
mov
mov
mov
sarb
insl
bound
sahf
cmpsl
push
fcoml
cmp
jmp
mov
and
cmp
lds
cmp
inc
jle
int
cmp
mov
ss
nop
cltd
lcall
sti
repnz
mov
js
cli
insb
cli
scas
adc
push
sbb
lcall
rclb
lret
loopne
sbbl
mov
xchg
movsl
xlat
cld
mov
mov
shlb
inc
jecxz
gs
push
dec
shlb
insb
mov
fdivr
pop
push
adc
cs
mov
je
aas
sub
add
fs
lock
sbb
outsb
mov
loopne
xchg
stos
pop
out
les
gs
or
fistps
test
lds
mov
orl
push
jl
imul
adc
inc
sbb
popf
les
insb
bound
jmp
jns
clc
jb
clc
pop
push
repnz
push
and
push
sbb
adc
add
push
xchg
movsb
cmp
js
or
in
jnp
cmp
jb
xor
repnz
adc
cmp
dec
bound
xchg
pusha
data16
mov
mov
fcmovnb
push
hlt
mov
mov
sbb
bnd
fbstp
dec
or
and
insl
mov
movsb
cmpsb
repnz
cld
mov
imulb
incl
sub
jl
cmpsl
popf
cmp
int
cmp
outsl
movsl
loope
les
jae
cmp
imul
push
lods
stc
movsb
lret
jne
jmp
sub
mov
and
hlt
sbb
xorb
mov
dec
mov
mov
fimull
add
scas
data16
inc
xchg
cmp
xchg
test
add
insb
ja
mov
sbb
mov
push
cmovnp
out
push
fildl
scas
pop
test
push
inc
push
mov
fs
xor
pop
xchg
adc
and
cmp
repz
ja
sub
clc
pop
je
cld
pop
and
and
adc
xor
sbb
lcall
xchg
and
repnz
loopne
loopne
mov
lods
aam
insb
inc
mov
xchg
dec
out
dec
mov
das
fistps
je
dec
and
mov
aad
jno
les
subb
jbe
mov
cmpb
out
adc
out
push
roll
popf
les
mov
arpl
daa
xchg
jns
cltd
jg
mov
les
aad
adc
pop
sub
insb
cmp
fisubrs
add
inc
mov
cmp
aad
jne
xor
or
shlb
out
ds
jo
sub
mov
cmp
cmpsl
dec
xor
mov
std
lahf
stos
movsl
ja
ret
push
mov
hlt
in
fiaddl
mov
push
mov
inc
inc
adc
jle
sahf
push
mov
rolb
xlat
ret
fsts
xorb
adcl
out
jg
push
sarb
xchg
stos
jp
pop
pushf
das
lahf
test
das
cli
fcoml
enter
cmp
pop
jnp
mov
mov
xlat
fildl
lock
les
cmp
cmc
fsubrl
sbb
and
and
sbb
sbb
test
and
repz
sbb
lods
shlb
push
in
cmc
and
cld
pop
int
fldenv
lea
xor
outsb
fdivs
xchg
nop
lea
dec
ficoml
push
cmc
int3
cwtl
loopne
inc
pop
pop
int
mov
adc
cli
cmpsl
lock
out
dec
into
sub
repnz
sub
push
inc
js
cwtl
xor
ret
sbb
push
mov
add
dec
addr16
test
xor
pop
cmpb
cmpsb
fstps
xchg
cmp
cmp
loope
xor
outsl
pop
test
dec
ja
push
scas
pop
inc
testb
xorb
xor
pop
lods
aaa
mov
popa
jae
es
push
or
out
ss
pusha
out
xchg
adc
sbb
aad
or
cs
sbb
sub
cmpsb
js
mov
pop
addr16
lret
das
mov
xor
jbe,pn
test
push
push
imulb
aad
sbb
call
lods
popa
xchg
sbb
cmp
cmc
mov
xchg
test
loop
mov
mov
cmp
mov
pop
mov
cmp
bndstx
mov
int
jecxz
sahf
fwait
jl
lods
sub
or
jb
xor
or
fdivrl
loopne
mov
mov
sub
mov
stos
push
hlt
push
imul
shrl
sarl
cmp
lock
sub
ret
lods
imul
je
inc
sub
mov
cmp
pop
mov
add
adc
daa
dec
pushf
or
pop
push
adc
cltd
adc
cltd
sbb
ds
clc
pop
pop
and
cwtl
push
pop
mov
jo,pt
fwait
out
cmp
loopne
xchg
into
iret
inc
leave
pop
cmp
fs
sub
out
lcall
jo
pusha
mov
fwait
adc
jbe
sub
idiv
sahf
and
sub
stos
push
and
cmp
push
jle
rcr
sbb
dec
cmp
dec
jnp
sahf
xorl
fidivl
jnp
ds
dec
and
out
add
jmp
add
in
inc
and
dec
sbb
sahf
psllq
insl
clc
stos
dec
cmpsl
cmp
loope
push
pop
inc
dec
cs
fistpll
cmpsl
pop
in
sub
lods
push
pop
int3
lock
lock
ror
adc
fdivrl
inc
jecxz
gs
push
movsl
push
mov
xchg
insl
outsb
cmp
push
inc
xchg
mov
push
or
test
and
inc
mov
out
mov
lahf
out
arpl
insl
fsubrp
xchg
mov
adc
out
cmc
outsl
movsl
mov
mov
adc
pop
data16
scas
popf
mov
mov
sbb
nop
push
mov
aam
pop
rclb
cmp
pop
ret
aad
stos
adc
xor
mov
scas
add
or
push
xchg
jnp
in
divb
stc
pop
sbb
mov
lret
icebp
jl,pt
push
lahf
shll
mov
iret
roll
into
add
outsl
out
ljmp
shrb
aad
imul
cltd
jnp,pt
scas
dec
movsb
add
cli
pop
xchg
fsubr
rcr
lods
sub
mov
lahf
shlb
addb
push
icebp
cmp
inc
xchg
rolb
pop
imul
xor
mov
sbb
cmp
movsb
dec
loope
xchg
pop
xlat
out
cwtl
mov
pop
ja
mov
jne
das
pusha
pop
outsb
rcrb
fldenv
mov
cwtl
mov
mov
into
iret
popf
mov
cmp
lahf
es
dec
clc
push
pop
jns
ret
cmc
sub
movsl
hlt
ror
push
add
mov
mov
or
lcall
sbb
aad
pop
add
mov
pop
leave
cs
pop
ret
lods
mov
inc
cmpsb
xchg
repz
push
fwait
js
mov
dec
es
mov
mov
arpl
out
imul
push
dec
sbb
pop
and
sbb
jg
mov
mov
add
hlt
ljmp
sbb
pop
bound
sti
enter
add
jecxz
out
mov
or
add
shll
cwtl
inc
fwait
pop
push
jg
cmpsb
imul
sbb
lret
and
ljmp
jg
cmpsl
clc
bound
fcmovbe
int
push
xchg
arpl
nop
lcall
xchg
lret
mov
cmp
inc
inc
mov
js
fistl
sub
shlb
inc
or
cmp
cmp
jmp
inc
inc
in
inc
ja
scas
pop
xor
aaa
mov
pop
pop
fnsave
xchg
lods
repnz
rolb
call
sbb
jmp
aas
dec
pop
jo
or
push
jbe
jbe
mov
aam
je
pushf
int
push
repnz
and
andb
mov
je
adc
push
sbb
rcr
or
lock
jl
xlat
jae
and
test
sub
sbb
dec
sub
jb
sbb
adc
dec
out
lods
mov
push
jne
icebp
roll
mov
aam
or
sub
or
cmp
mov
mov
mov
push
in
dec
cmp
repnz
fcompl
and
sbb
js
dec
xor
es
fisttpll
xchg
mov
xorl
ds
inc
or
mov
int
cli
xor
or
and
pop
mov
mov
xchg
lret
test
sahf
xor
data16
movsl
scas
je
pop
loopne
jmp
pop
push
sti
flds
in
xchg
xor
sti
xchg
jnp
jbe
xor
or
or
mov
pop
and
inc
jmp
insb
nop
mov
push
ja
add
sub
data16
fs
xchg
jns
sbb
leave
jne
mov
negb
nop
sbb
push
jmp
sub
push
dec
mov
aaa
and
int3
and
addl
add
loop
dec
cmpsb
or
loop
sete
and
sbb
jl
sub
mov
aam
aaa
out
cmp
cs
ja
jge
inc
jbe
adc
push
mov
push
xchg
sub
test
clc
inc
xchg
cmp
sbb
or
outsb
dec
pop
and
lcall
mov
subb
mov
sub
pop
es
adc
test
mulb
or
xor
xor
and
fstpt
fsqrt
dec
test
add
sub
stos
inc
mov
in
jl
dec
jno
insl
aad
and
add
fcompl
test
inc
inc
jmp
adc
roll
mov
cmpsl
xchg
pop
add
push
and
insb
inc
lret
pop
rcll
dec
or
pop
mov
cmpsl
add
outsb
inc
and
lret
or
mov
inc
adc
or
call
cmp
into
push
lock
daa
outsl
icebp
mov
ret
rcrb
xchg
call
sbb
sbb
in
sub
scas
xchg
push
outsl
jnp
sarb
out
lcall
dec
jns
popf
add
xor
fldt
hlt
dec
xchg
std
out
lret
lcall
push
add
mov
jmp
clc
stc
cli
adc
sbbl
shlb
adc
vucomiss
fs
cmp
or
pop
adc
fists
fsubr
sarb
loopne
enter
pop
imul
xor
cmp
out
fdivrs
mov
xlat
out
xchg
lea
pop
add
test
xchg
test
jns
xor
mov
sbb
nop
bound
adc
xchg
pop
rorl
or
test
mov
lcall
pusha
andb
and
pushf
or
setg
mull
sbb
pop
cmp
mov
pop
cmp
popf
movsb
mov
cmp
mov
rorb
aam
scas
int3
mov
rol
leave
or
xchg
leave
adc
outsb
bound
and
gs
inc
sub
fmul
mov
mov
int
adc
jb
lahf
dec
stos
cmpl
aad
pusha
cmpsl
inc
lock
cli
and
cs
cmpsl
stos
nop
pop
out
push
data16
pop
xor
and
aas
jb
lock
and
int3
push
scas
sub
xor
sbb
mov
in
cmc
daa
xlat
ds
sub
loopne
fs
mov
lret
mov
imul
das
xchg
dec
push
test
lret
gs
sbb
cli
lcall
stos
pop
ja
bound
xor
mov
mov
and
push
je
and
mov
loope
adc
cmpsl
sub
into
add
mov
movb
and
mov
mov
add
jb
test
mov
adc
adc
loope
dec
rclb
sub
mov
mov
xchg
fwait
cmp
js
out
addr16
lret
mov
adc
outsb
aaa
pushf
repz
int
hlt
mov
mull
int
or
adc
int
pushf
sub
sub
inc
popf
cld
adc
scas
jle
cmp
dec
outsb
les
andb
xor
or
shrl
xchg
leave
aaa
mov
iret
ljmp
push
cmp
adc
pop
inc
clc
ja
pop
inc
mov
jmp
mov
nop
xchg
int3
imul
fs
test
fisttpll
pop
jo
mov
mov
mov
mov
mov
push
out
lret
jg
dec
jae
dec
mov
sbb
fsub
int3
lret
sbb
push
and
mov
jge
dec
inc
mov
mov
sti
repnz
int3
rcl
dec
jl
and
ja
movzwl
nop
jae
lahf
jno
popa
pop
test
int3
push
dec
mov
hlt
fsts
inc
inc
pop
add
psllw
fsubs
loopne
in
pop
insl
push
dec
jg
lahf
mov
mov
mov
dec
cmpsl
sub
mov
xchg
into
test
out
jne
loop
into
mov
shll
push
repz
mov
mov
jl
xor
pop
ja
and
daa
dec
negb
and
stc
cs
adc
cmp
mov
mov
cmp
add
loop
push
push
fdivr
pop
test
std
adc
cmp
and
daa
jg
dec
inc
in
mov
negl
add
mov
adc
mov
ljmp
daa
rorb
jl
push
rcrb
add
into
mov
out
in
dec
xlat
pop
jne
xchg
mov
mov
lret
xor
mov
xor
xlat
nop
pop
jmp
gs
mov
lahf
bound
ret
fbstp
inc
inc
add
adc
mov
sub
adc
pop
push
push
scas
mov
inc
add
mov
divl
aas
out
inc
add
add
mov
popf
and
or
mov
add
call
pop
mov
shlb
inc
mov
out
aaa
mov
jecxz
and
and
sbb
adc
loope
cld
outsl
popf
es
les
jae
in
mov
pop
adc
ss
ficoms
adc
push
xor
sbb
push
inc
adc
ret
adc
scas
sbb
xchg
inc
mov
jae
add
jne
scas
add
adc
lea
clc
popf
sbb
add
push
outsb
ljmp
inc
lds
push
lcall
push
aad
dec
inc
sub
cmp
loopne
jne
cld
or
push
mov
in
push
cmp
seto
mov
fimull
pusha
or
push
popa
jne
mov
cmp
aas
cmp
into
pop
and
xchg
cmp
inc
cmp
pop
inc
movups
subl
sub
scas
fwait
xchg
insl
outsb
dec
loope
mov
nop
pop
lods
test
xchg
push
or
int
test
mov
mov
mov
or
jnp
rolb
sbb
inc
mov
out
pop
in
push
cmc
imulb
orb
andl
int3
sbb
jl
sbb
inc
iret
out
mov
xchg
shrl
in
aas
cltd
mov
in
sbb
and
or
pop
dec
outsb
dec
mov
int
xor
push
xor
aam
mov
xchg
pop
push
cli
inc
or
je
insl
lcall
ds
xor
xor
nop
lahf
jb
xor
imul
xor
jmp
mov
mov
mov
mov
lock
jne
mov
inc
out
push
and
bound
popf
cmc
and
popa
mov
scas
lret
insb
jmp
xchg
repnz
jno
adc
jmp
fisubrl
xchg
add
pop
into
jle
lods
add
scas
icebp
cmpb
pop
out
je
jmp
icebp
xchg
or
xor
add
xchg
ljmp
fistl
push
ja
dec
add
pop
jo
push
mov
stc
and
xchg
or
and
les
add
das
jl
push
fisubrs
adc
outsb
shlb
jge
jne
rclb
out
daa
sub
and
mov
lahf
pusha
pop
mov
shrb
sub
pop
add
and
push
push
dec
adc
push
popa
js
pop
loop
ljmp
out
xchg
mov
pop
xchg
jge
push
sub
ret
mov
pushf
call
aad
xor
push
xor
cmp
sbb
push
mov
add
test
pop
repz
gs
mov
scas
je
push
ja
push
mov
nop
mov
notl
movsl
inc
outsb
mov
sbb
scas
lret
mov
mov
out
dec
and
mov
mov
adc
fisttpl
test
repz
sbb
pop
xchg
mov
jo
mov
jge
dec
xor
dec
push
daa
mov
iret
fcmove
lods
repnz
bound
fst
dec
and
inc
adc
dec
div
and
jno
shrl
mov
mov
xchg
pop
dec
divb
popa
dec
test
ja
cmpsb
icebp
je
stos
or
cld
jno
adc
xor
add
mov
pop
sbb
clc
fsubrp
shll
xchg
push
jb
pusha
pop
dec
cmc
test
aad
fwait
cli
lret
and
stos
scas
stos
test
ss
pop
inc
adc
dec
mov
in
mov
mov
in
or
movsl
cmpsl
lret
adc
or
inc
jb
mov
pop
push
mov
mov
pop
push
adc
pop
je
push
in
leave
xchg
je
sub
xchg
scas
cltd
aaa
pushf
inc
clc
pop
or
sahf
add
std
fisubs
cmp
sbb
arpl
pop
gs
vcvtps2pd
cs
sbb
adc
dec
fsubr
repz
enter
movsb
fldenv
xchg
jbe
mov
mov
mov
ss
daa
loopne
es
mov
inc
inc
rorl
and
testl
or
pop
notb
enter
mov
std
dec
fbld
add
xchg
std
out
dec
mov
inc
out
or
push
inc
cmp
in
fdivrs
cwtl
es
pushf
stos
mov
ffreep
sti
idivb
stos
push
jbe
push
inc
icebp
mov
in
std
sub
arpl
xchg
scas
cltd
push
add
sbb
lahf
cmp
aas
adc
mov
imul
xchg
loopne
mov
cld
testb
mov
cmp
sarl
pop
jmp
mov
insl
ja
xlat
mov
cltd
xor
stc
idiv
mov
pop
lds
pop
push
nop
cltd
add
lahf
outsb
sbb
add
sbb
xor
jg
cli
xchg
cmp
rcrl
push
cwtl
and
dec
out
jno
aaa
ds
jb
pop
xchg
lret
out
jmp
fs
rcr
scas
loop
stos
xchg
call
into
mov
adc
pop
mov
adc
inc
fistl
nop
int3
ljmp
inc
pop
in
cmp
jno
les
dec
mov
int
hlt
sub
loopne
outsl
cmc
ds
adc
fstps
jb
jmp
or
sti
inc
lock
popa
mov
mov
mov
xor
jae
and
push
mov
repz
inc
std
addb
sub
or
pop
jle
into
dec
scas
sbb
rcrl
in
repz
stos
push
fdivrs
push
insl
adc
fdivrs
cmpsb
ret
insb
xchg
in
lods
pop
lahf
jecxz
and
xlat
pop
mov
add
sbb
push
das
in
inc
sti
push
push
mov
add
adcl
enter
jb
sub
cmp
and
jo
int
idivb
sub
insb
sahf
lock
sbb
xlat
ret
pop
out
jecxz
lret
dec
insl
inc
mov
add
sti
jmp
or
repz
cmp
movsl
mov
jp
or
mov
insl
out
add
or
mov
and
xchg
movsb
xchg
mov
roll
mov
xor
orb
out
mov
or
xor
mov
ficoms
out
daa
mov
nop
out
and
cmpsl
test
pop
pop
push
pop
das
movsb
mov
test
and
adc
fsubrl
sbb
xchg
or
rcl
inc
mov
mov
cmp
xchg
pop
std
and
add
mov
sbb
cmp
imul
mov
dec
aas
mov
dec
pop
adc
lret
and
pusha
cld
push
xchg
gs
sub
test
jge
cmp
out
arpl
pop
scas
ret
aad
sub
adc
repz
and
xchg
and
sahf
and
loope
dec
fsub
ret
icebp
mov
xchg
aaa
arpl
fsin
ljmp
mov
sar
jbe
jge
lret
imul
popf
pop
mov
xor
leave
int3
stos
jno
xchg
mov
cmp
mov
ret
xchg
sbb
pop
cwtl
jo
or
push
addb
mov
ret
sub
mov
test
mov
and
mov
movsb
sahf
add
push
cwtl
in
cmp
lret
dec
fstpt
ficoms
pop
or
aad
or
mov
aas
shl
das
xchg
test
fsubrl
add
ret
loope
xlat
inc
lea
xchg
movsb
jmp
inc
leave
adc
xor
jl
cmc
test
imul
cmpsl
push
lgs
xor
inc
mov
ret
clc
loopne
popa
fs
mov
add
or
xor
je
xchg
add
les
cld
sub
lods
orb
mov
pop
inc
cs
sbbb
enter
jo
pop
repz
jmp
add
ja
xchg
out
aad
push
dec
leave
sbb
jl
inc
popf
stc
ljmp
icebp
pop
xlat
add
insb
sub
push
fbstp
idivb
daa
add
stc
loop
out
or
hlt
pop
ret
mov
dec
faddl
fld
pop
push
jmp
sub
push
aam
mov
testl
fbstp
sub
push
lahf
adc
pop
jns
mov
add
sbb
push
pop
cli
cmc
pop
mov
popa
nop
sti
push
push
xchg
xchg
xor
shl
out
pop
icebp
mov
mov
loopne
out
test
rorb
add
inc
fdivr
mov
outsb
mov
dec
testl
roll
or
mov
sub
cmp
stos
outsl
insb
xchg
add
out
pop
test
jb
xchg
jecxz
mov
in
mov
mov
dec
push
or
jge
mov
sar
dec
int3
in
sti
and
mov
pusha
cli
inc
mov
mov
sti
xchg
aam
fs
ljmp
pop
ret
lods
lods
gs
icebp
add
mov
leave
and
adc
cld
add
or
add
ja
aam
repnz
ror
sub
mov
or
fs
jae
mov
stos
mov
xor
adc
int3
int3
out
sbb
mov
mov
mov
jp
pop
jns
shrb
mov
mov
lret
inc
pop
arpl
or
bnd
pop
shlb
xorl
mov
mov
or
popf
sbb
push
fadds
pop
jmp
cmp
and
pop
cwtl
sbb
decb
jbe
shlb
les
dec
push
imul
or
mov
imul
sub
push
cli
loopne
lods
lahf
outsb
jecxz
cmp
cwtl
fldl
mov
fistpll
or
pop
mov
xchg
sub
or
hlt
mov
insl
les
mov
push
mov
inc
inc
lods
popa
ss
pop
sbb
test
filds
inc
ror
test
ret
sbb
pop
lcall
shlb
inc
fadds
push
fmull
xlat
cmp
mov
rcr
daa
dec
lret
jbe
mov
test
shll
add
punpckldq
out
das
push
add
daa
lods
test
xor
cmp
mulb
push
std
xchg
insl
pop
mov
test
test
jle
bound
push
inc
mov
jbe
std
and
xor
ljmp
dec
or
pushw
sti
jg
push
pop
push
cwtl
adc
inc
or
xchg
push
jp
rorb
cmpsb
sarl
cmovb
fsubr
cmp
or
ficoml
push
int3
pushf
inc
lcall
adcl
in
mov
addr16
add
dec
push
jne
psllq
lods
adc
add
ds
cmp
xchg
adc
xchg
movsb
scas
test
aaa
dec
inc
inc
push
cli
push
ljmp
xchg
ja
mov
negl
adc
dec
les
push
or
push
int3
test
jmp
les
outsl
mov
sub
rorl
loopne
outsb
and
mov
daa
xlat
mov
int3
fldenv
xchg
je
aad
lret
mov
mov
xchg
addr16
add
hlt
lcall
mov
arpl
movsl
add
mov
add
mov
jp
mov
jns
incl
pop
mov
sub
mov
mov
dec
pop
xor
mov
cmc
ljmp
icebp
or
sbb
clc
cltd
xor
inc
lret
arpl
sbb
xor
dec
push
popf
adc
invd
fdivl
mov
dec
push
mov
fstpt
pop
cmp
repz
clc
orl
cli
cltd
dec
outsb
xor
and
and
cs
adc
in
into
mov
xchg
xchg
xor
adc
fiadds
int3
std
jg
add
xor
mov
cmp
movb
idiv
and
mov
test
and
fcom
mov
cmp
push
gs
in
test
xor
outsl
jmp
xor
push
into
push
popa
mov
test
scas
mov
int
lcall
repnz
adc
push
cwtl
mov
repz
out
imulb
sub
sbb
std
pop
addr16
pop
xchg
jnp
stos
cmp
stc
push
lds
mov
mov
cmpsl
les
aad
int
mov
cltd
push
pop
push
in
sti
and
mov
pushl
sti
fdivrp
mov
mov
xor
add
sbbb
fs
xor
pop
hlt
pushf
mov
xor
mov
psraw
icebp
loopne
pop
nop
faddl
xchg
xchg
cld
ja
lods
jmp
mov
inc
filds
fildll
pushf
test
mov
data16
cmp
push
or
push
add
pop
rolb
mov
mov
imul
call
or
iret
jbe
loopne
push
fwait
mov
jg
push
lret
fistpl
int3
dec
dec
cmp
mov
push
pusha
adc
out
mov
aad
xchg
iret
aam
hlt
out
int3
pop
push
andb
test
bound
movsl
cmp
rclb
jg
cmp
dec
pop
cmpsl
inc
push
lock
into
cmc
mov
jmp
add
inc
mov
inc
pop
adc
aas
jecxz
sbb
notb
fsubrs
lock
push
lock
addb
or
pop
aad
mov
xor
hlt
mov
int3
xor
mov
cwtl
jns
mov
lea
daa
push
ret
push
fs
and
std
addr16
cmp
outsb
sub
push
xchg
jp
loope
mov
pop
pop
stos
in
cmp
add
test
dec
jle
fwait
hlt
out
or
movsl
mov
cmp
das
dec
and
lds
test
mov
pop
fldenv
sub
lods
cmp
cmp
add
pop
out
std
test
arpl
jecxz
into
pop
inc
iret
sbbl
movsb
mov
push
push
dec
icebp
add
mov
test
inc
mov
cmp
dec
cmc
push
int
or
and
add
inc
inc
pop
mov
imul
iret
mov
jno
dec
and
dec
js
and
inc
cmpsb
js
inc
mov
dec
rcr
imul
fs
or
add
adc
inc
and
idivb
testl
jp
xchg
insl
and
cltd
cmp
push
fdiv
cmp
or
inc
xchg
int
mov
jne
mov
arpl
pop
inc
mov
adc
inc
jge
mov
std
ss
pop
inc
fwait
cmp
adcb
test
jmp
rcrl
imul
js
push
push
jnp
mov
jl
ds
mov
cwtl
push
xchg
dec
fwait
in
shll
sbb
and
icebp
out
addl
push
xor
sub
xchg
inc
xor
jp
fnstsw
jp
xor
ljmp
mov
sbb
repnz
push
mov
push
mov
dec
mov
xchg
adc
cmp
adc
xchg
addb
jae
sub
sti
fidivl
add
lcall
xchg
scas
push
call
xchg
dec
or
cs
testl
cmpsl
mov
jmp
stc
xchg
push
mov
dec
aas
and
lret
sub
lds
push
and
and
out
jge
jbe
insl
das
out
fisttpll
inc
xchg
clc
xchg
push
mov
and
lcall
lods
or
mov
add
mov
pop
xchg
pop
bnd
nop
dec
lahf
gs
jbe
pushf
out
cwtl
mov
sbb
lods
dec
or
jnp
mov
jmp
mov
jbe
fidivl
mov
add
fcoms
sub
inc
sbb
add
lods
ficompl
mov
movsb
pop
and
daa
pop
and
fldenv
push
call
jne
mov
push
xchg
in
push
inc
push
push
movsb
push
push
nop
fistl
dec
stos
movsl
cmp
fs
jns
adc
fisubs
mov
stc
xchg
mov
hlt
xor
popf
shl
jge
pop
lds
cmpsl
push
fwait
lret
sahf
mov
mov
sbb
cli
xor
sub
fsubrl
inc
xchg
dec
scas
pop
pop
adc
sub
sbb
jmp
jae
pop
mov
fldcw
inc
mov
or
jle
xchg
fcmovnu
and
aaa
out
out
out
mov
decb
aas
sti
fs
fs
xor
or
pop
or
mov
xchg
and
cmc
stos
ret
mov
adc
xchg
sbb
and
push
cs
xor
test
mov
xchg
sub
inc
out
add
test
daa
inc
fdivs
xor
stc
add
ret
lret
mov
add
into
jmp
pop
jecxz
xchg
mov
hlt
mul
adc
in
aaa
xor
int
test
ret
repnz
dec
movsb
rcrb
push
dec
fnsave
jae
dec
js
cltd
mov
dec
adc
sub
dec
xchg
inc
out
push
fsubs
jp
xor
inc
scas
jp
push
cmp
mov
mov
sbb
jle
adc
and
pop
lea
stos
daa
pop
or
insb
mov
addr16
fsubr
enter
nop
cmp
xchg
push
std
scas
add
in
movsb
jae
psubd
fidivl
sub
jl
scas
cltd
daa
dec
dec
adc
cmp
loopne
lods
and
xchg
sub
mov
mov
leave
sbb
sbb
fsubl
out
mov
mov
jmp
lods
adc
fisubrl
cmp
mov
rcrb
outsb
int
std
push
xchg
dec
iret
mov
js
ja
movsb
lea
xor
cmp
sbb
int
int
inc
loope
mov
adc
repz
or
aas
cmc
and
mov
call
test
sbb
adc
loopne
insb
jl
jmp
sub
shlb
pshufw
mov
sbb
and
imul
jecxz
pop
lea
add
jmp
stos
push
out
cmp
add
push
mov
test
push
xchg
sahf
inc
stc
add
cwtl
lahf
pop
adc
les
mov
aaa
xor
mov
jecxz
scas
movsb
ficoms
aas
jno
sar
test
and
rol
xor
sub
xor
adc
pop
test
nop
mull
pushf
mov
insb
or
mov
xor
not
cwtl
push
xchg
sbb
dec
pop
fistpll
xor
sbb
xchg
stos
adc
loop
jmp
push
sub
and
fcomip
xchg
inc
faddp
nop
cmp
or
fcoms
sti
sbb
cmp
jmp
push
js
nop
shrb
fdivr
lods
add
adc
ljmp
sub
inc
push
inc
xchg
fwait
push
pop
adc
int
adc
inc
xchg
jecxz
es
dec
rol
test
push
and
mov
inc
adc
inc
out
insb
in
sarb
insl
movsl
scas
add
or
jecxz
xchg
cmp
mov
mov
sbb
outsb
push
adc
cmp
leave
jnp
faddl
sub
sar
pop
lods
or
xchg
push
sbb
out
add
das
xor
sub
pop
jno
out
mov
rcrl
fwait
imul
adc
sbb
fnstcw
aad
or
push
out
fstps
dec
scas
sub
jl
shl
xchg
dec
pop
cmp
or
xchg
mov
lods
push
notl
aaa
inc
in
cmc
shrl
loop
inc
push
pop
lret
mov
sti
div
push
insb
aad
sub
shrd
adc
pop
daa
and
mov
mov
outsl
imul
mov
clc
aas
out
mov
jnp
int
cld
sbb
and
add
int3
sub
xchg
andl
adc
movq
ds
dec
insl
xor
jmp
pop
es
mov
aam
push
jnp
aas
stos
out
push
arpl
mov
std
jbe
sbb
mov
loop
ljmp
inc
insl
push
loopne
mov
loop
js
into
adc
jo
lock
xchg
cmc
lahf
ret
fnsave
ret
sbb
push
lahf
push
jge
aam
int3
out
adc
sub
inc
in
pop
mov
pop
xchg
xor
shll
mov
dec
add
lds
pop
adc
lret
sub
mov
cltd
inc
aaa
ja
inc
jo
test
stc
rcl
in
mov
add
pop
mov
insl
movsb
cltd
das
pop
insl
xor
push
pmaddwd
shll
xor
in
mov
sub
push
inc
mov
stos
pop
test
jmp
or
inc
ja
push
imul
xchg
or
dec
scas
adc
jo
mov
or
push
or
sub
cltd
push
add
xor
adc
xchg
in
mov
xor
fs
int
mov
cmp
into
sbb
push
and
jns
sub
bnd
or
loope
sub
rcrl
mov
mov
es
xor
smsw
mov
sub
fbstp
ret
pop
mov
and
adc
fcmovbe
adc
and
cmp
xor
lods
push
stos
pop
inc
push
lahf
loope
faddl
dec
mov
lods
sbb
mov
mov
arpl
xchg
fimull
out
dec
sbb
cmp
popa
rolb
out
sbb
adc
jo
push
out
stos
movsl
xor
mov
sub
rclb
movsl
fiaddl
test
imul
add
and
aaa
push
mov
loope
gs
mov
dec
jbe
in
lret
rclb
daa
imul
mov
rcr
sarb
dec
insl
cltd
lods
call
shrb
cmp
xchg
sbb
fnstenv
add
pushf
in
mov
loope
jmp
mov
arpl
add
arpl
mov
mov
mov
vpaddusw
dec
and
cmp
mov
bound
mov
mov
fwait
enter
lock
fcomps
pop
inc
sahf
xor
or
jo
and
add
stc
or
jl
add
je
out
fistps
mov
mov
mov
mov
shlb
lahf
sub
lret
mov
push
pop
pushf
mov
lahf
fs
or
andb
cmp
lods
add
out
adc
and
pop
or
pop
hlt
sbbl
cld
jb
jp
xlat
rorb
add
iret
cli
mov
xchg
aaa
xlat
fwait
rcll
cld
jmp
mulb
sub
pop
lret
lods
iret
shll
and
loop
stos
inc
xor
aaa
mov
pushl
pop
fistpll
pushf
lret
mov
jg
push
out
dec
xor
mov
and
push
add
insl
cmp
cmpsb
divb
enter
add
xchg
insb
loop
movsl
pop
int
aaa
mov
mov
out
jo
enter
jb
loop
adc
ret
fwait
add
ficoml
es
fdiv
sbb
loopne
sbb
pop
mov
scas
push
mov
add
or
lods
rcll
xchg
pop
fists
mov
or
cmp
sahf
les
cmp
loop
lods
scas
jae
sbb
jge
jl
or
ret
arpl
add
and
push
adc
pop
lds
sbb
inc
leave
pop
push
lcall
inc
jl
addr16
add
test
out
jns
add
inc
cmp
mov
mov
inc
mov
mov
sub
fsubs
test
jns
xchg
les
add
cli
and
sbb
mov
inc
xchg
aad
mov
sub
xor
arpl
pushf
mov
jnp
sti
jae
cli
addr16
pop
cli
mov
insl
sub
nop
pop
sbb
or
push
add
pop
filds
aam
inc
adc
add
les
mov
xor
mov
iret
in
lret
jecxz
mov
lea
xchg
push
aad
sbb
sbb
push
imul
scas
bound
lret
fstps
lds
dec
out
pushf
in
dec
adc
es
pop
push
scas
and
pop
jl
sub
shl
arpl
aam
gs
rorb
das
and
adc
pop
jo
cmp
int
arpl
cmp
mov
push
pushf
testl
in
sub
rorl
mov
not
fsts
sub
cwtl
xchg
popf
jmp
mov
jo
xchg
cmp
xchg
cld
sbbb
imul
sub
fmuls
inc
xchg
pop
in
xor
fiaddl
dec
mov
push
and
xor
mov
in
or
test
jo
add
inc
daa
mov
cltd
push
inc
cmp
push
sub
insb
mov
out
xchg
push
cwtl
mov
inc
push
xorb
test
arpl
insl
dec
push
mov
les
push
clc
jp
mov
xor
jbe
cmp
sub
les
jno
mov
xchg
scas
sbb
dec
dec
lds
in
add
jo
mov
cli
mov
jmp
stc
pop
and
add
bound
cmp
xor
hlt
jge
cmp
mov
xchg
pushf
dec
push
jno
xchg
lea
ds
push
mov
pop
jns
aam
mov
inc
outsl
cltd
xchg
mov
fiaddl
inc
pop
ds
mul
add
push
mov
pop
pop
shll
pop
mov
xchg
addr16
aas
in
aad
xor
pop
cmp
movsb
mov
mov
fpatan
popf
mov
cmp
outsl
mov
out
fildl
jg
sysexit
nop
cmpb
pusha
ficomps
roll
movsl
cmpps
sub
mov
cmpsb
pop
inc
mov
push
sub
and
sub
rcll
fisttpl
fwait
out
ret
sti
sti
and
out
dec
jge
in
dec
rcl
call
test
add
scas
xchg
filds
ja
mov
inc
int
lods
push
add
negl
jns
cmpl
push
mov
jbe
jae
xorl
xlat
add
daa
mov
sub
mov
cs
adc
push
inc
mov
es
pusha
aad
dec
loop
or
xlat
fidivrs
mov
ja
outsb
push
or
out
cmp
pop
inc
push
mov
ret
jns
das
push
or
inc
jo
dec
and
test
push
mov
lock
shlb
mov
sub
fiaddl
jnp
or
repz
jecxz
dec
stos
testb
and
xchg
jp
sub
mov
mov
pop
in
add
mov
or
jle
addr16
mov
add
aad
or
andl
dec
dec
xor
ss
cmpsl
scas
adc
push
jae
into
bnd
xchg
cltd
sbb
cwtl
andb
jmp
push
into
jle
or
movsb
aaa
mov
mov
lahf
inc
imul
xchg
outsb
arpl
movsl
xchg
ret
pop
and
adc
xor
dec
adc
scas
aam
mov
mov
loope
mov
ret
add
push
dec
adcl
loope
cmp
insl
jo
stc
push
inc
mov
rcl
leave
fsubrl
pop
f2xm1
cmp
hlt
push
stc
sbb
in
jne
fisubrs
movsb
in
mov
xor
push
adc
xchg
and
dec
mov
mov
test
lds
sbb
pop
jb
jge
sbb
movswl
xchg
xor
std
lea
jl
fs
test
sbb
scas
sbb
or
shrb
aaa
outsb
lcall
xor
icebp
imulb
inc
xchg
outsl
xchg
cld
sub
add
sti
dec
dec
pop
or
insb
push
mov
pop
push
mov
or
sub
add
pop
hlt
inc
sub
inc
je
or
rolb
cltd
or
fcompl
in
das
inc
dec
ja
mov
jno
jge
xor
inc
out
sahf
int3
or
cmpsb
out
jo
inc
adc
pop
sub
or
out
or
inc
jo
aad
nop
loopne
lcall
add
cmp
data16
or
xlat
xor
cmp
lahf
in
xchg
out
and
insl
pusha
int
and
repz
mov
mov
fnsave
movsl
out
inc
mov
mov
push
test
int
inc
outsb
addr16
add
loop
mov
aaa
jl
cmp
pop
outsb
inc
cmp
adc
jnp
mov
mov
fwait
mov
stc
jo
shrb
mov
loop
dec
insl
jae
test
bound
adc
xchg
inc
in
fisubl
shrl
pop
movsl
mov
add
jno
xchg
sahf
ror
pop
arpl
into
mov
int3
dec
or
in
mov
loopne
lea
in
arpl
fs
cmp
push
mov
out
shlb
lea
cmp
push
add
pop
fsubs
rclb
and
insl
push
mov
stos
cmp
inc
outsl
out
dec
test
pop
xor
nop
fmul
loopne
je
test
mov
cld
xchg
lds
cmp
or
dec
mov
push
sar
push
pop
mov
ds
ljmp
jle
mov
ss
outsb
subb
ror
mov
add
adc
push
es
jbe
out
lods
push
jae
mov
xor
lret
mov
inc
in
jge
arpl
cmc
mov
inc
les
mov
or
fwait
mov
adc
icebp
and
mov
pop
pop
jge
cmp
pop
in
int
sub
outsl
mov
xchg
inc
pop
icebp
subl
mov
lods
add
or
and
cmpsl
pop
cmp
scas
std
movb
mov
inc
lea
sub
mov
clc
mov
rcll
test
jle
and
fcoml
aad
and
ficompl
push
cmp
mov
sbb
mov
je
fmull
push
pop
jp
jbe
fmul
das
fldl
andb
sub
outsl
sbb
xor
pop
push
sub
add
lds
adc
jle
or
data16
hlt
mov
cmp
shll
xchg
mov
or
pop
pusha
mov
leave
ret
les
jbe
hlt
mov
or
inc
shrl
ret
mov
jle
lods
addl
shrb
popf
jo
xor
aad
mov
fcoms
fisttpll
push
inc
push
pop
out
clc
adc
loopne
adc
je
mov
je
mov
xlat
lea
rorb
sbb
push
adc
pop
insl
jge
cwtl
xor
xchg
lret
jmp
es
loop
divb
and
inc
cmpsb
mov
hlt
stos
ljmp
push
test
adc
outsb
std
or
jg
push
inc
jle
cmpsl
outsl
sub
std
jge
dec
sbb
ja
into
cld
mov
and
jle
icebp
loope
pop
push
pop
xchg
xlat
hlt
pop
xorl
test
inc
add
lods
roll
lock
rcll
xor
jnp
test
ret
inc
not
fldt
xchg
cmp
movsl
dec
add
ficompl
pop
cltd
out
and
out
sbb
inc
stos
ret
push
adc
test
popa
addb
lret
jmp
push
jge
imul
dec
dec
adc
ficompl
pusha
dec
mov
push
into
jmp
dec
pop
add
jg
clc
mov
xlat
jbe
sub
push
popf
push
add
sbb
and
pop
in
mov
and
mov
lods
inc
ds
loopne
call
pop
cld
pop
mov
jbe
mov
ja
out
scas
cmp
adc
inc
and
push
fisttps
dec
dec
lock
call
pop
bnd
idivl
loopne
mov
push
imul
mov
ds
or
mov
mov
mov
cs
lock
pop
les
rol
xor
scas
je
push
xchg
mov
xor
in
in
les
and
incl
push
mov
push
nop
mov
push
pop
mov
adc
loopne
mov
xchg
dec
fisttpl
cmpsb
fwait
nop
jg
xchg
cwtl
inc
mov
lds
mov
pop
out
loopne
mov
js
mull
nop
lcall
jbe
pause
sarl
stc
loope
lcall
flds
dec
inc
cmpb
mov
xchg
jbe
and
jle
repz
pop
xor
dec
mov
sub
adc
faddl
sub
std
lock
xchg
popf
dec
add
dec
decl
repz
aas
xchg
add
lret
mov
dec
dec
cmp
jae
lea
jecxz
in
mov
pop
fwait
adc
lret
mov
jp
cwtl
mov
cmp
push
icebp
mov
add
pop
dec
xchg
jno
outsb
or
mov
jne
ret
ss
push
mov
sub
rcr
enter
xor
dec
xor
outsb
mov
out
dec
inc
mov
sbb
loopne
jns
stos
pop
pop
ss
mov
negb
sbb
jmp
jecxz
xor
inc
mov
push
xor
inc
inc
repz
pop
push
jne
jo
jo
mov
sbb
stc
cld
pop
cmp
bound
xorb
push
mov
call
leave
iret
sar
push
in
pop
dec
xor
xchg
mov
xchg
pop
push
iret
or
dec
leave
out
xor
jne
push
xchg
lea
stc
loop
popf
cli
mov
mull
mov
jge
mov
pop
addb
fldt
mov
leave
imull
lods
mov
pop
xchg
xor
popa
add
je
cmpsb
paddsb
add
pop
mov
pop
scas
cmpsb
xor
cmp
inc
sbb
ret
adc
les
mov
xor
jns
shlb
push
push
mov
inc
stos
fildl
sub
repnz
or
add
je
icebp
ret
sbb
lea
mov
decb
cmp
adc
sbb
cmp
mov
pop
cmp
dec
mov
imul
mov
sbb
cmpsl
and
xor
ljmp
aaa
test
and
jno
cmc
pop
aad
les
dec
sub
cmp
mov
xchg
mov
dec
jge
mov
xor
fsubr
mov
out
push
push
pop
xchg
mov
sbb
xchg
out
ret
hlt
push
mov
hlt
mov
mov
lret
or
test
lcall
add
lds
adc
or
in
push
hlt
jg
movsb
jecxz
ret
or
xor
jns
mov
dec
insb
sahf
in
cs
sbb
loope
imul
out
adc
xor
lods
inc
pusha
xor
mov
cwtl
inc
repz
xor
insl
or
aas
mov
push
sbb
daa
xor
outsb
js
xchg
mulb
gs
xor
dec
pop
out
je
or
sbb
pop
pop
xchg
mov
scas
cmp
rorb
pop
cmp
sahf
aam
je
mov
dec
ljmp
ljmp
test
cmp
call
sub
outsb
push
cs
inc
mov
adc
mov
mov
insl
pop
xchg
pop
lods
sti
aas
mov
stos
notl
addr16
test
test
imul
inc
testl
and
shl
cmp
dec
xchg
pop
push
dec
cmp
addr16
stos
inc
mov
out
scas
mov
lock
cs
test
mov
jnp
mov
mov
pop
ds
jb
sbb
shlb
fst
sbb
imul
cmp
popa
xor
dec
dec
xchg
xor
stos
dec
pop
scas
pop
sbbb
mov
popf
pop
sub
adc
jge
mov
cli
sbb
jp
adc
jne
popf
test
xchg
cmpsb
pop
mov
aad
xchg
push
addb
sti
or
loope
cwtl
loop
mov
movsb
cmpsl
xor
jmp
mov
and
popf
xchg
xchg
cli
inc
int
cmp
cmpsl
push
jle
cmp
mov
movsl
addl
adc
jae
xchg
cmpb
aas
xor
mov
aaa
cmp
in
xchg
sarb
sub
dec
testb
fsts
dec
test
aam
ljmp
mov
popa
and
int
push
mov
incb
adc
sbb
mov
mov
aaa
push
sub
mov
cmp
xchg
pop
push
jg
sahf
test
xchg
mov
pop
lret
dec
cmpsl
dec
aam
push
dec
xchg
aas
mov
jnp
add
push
scas
push
int3
sub
xor
iret
dec
push
xor
jae
jge
mov
insb
xchg
clc
mov
int3
xor
not
xchg
dec
ret
loope
xor
cltd
loope
scas
test
mov
cld
cmp
lcall
ds
or
jae
dec
pusha
add
push
xchg
dec
cld
jle
mov
dec
fs
push
push
fdiv
inc
xchg
movsb
clc
dec
sub
outsl
pop
xchg
popl
xor
cmp
out
add
pop
dec
push
iret
stc
mov
pop
lahf
pop
cmc
pop
adc
aaa
test
inc
jbe
movsb
ss
popa
js
add
add
andl
mov
aaa
shrb
fstpt
outsb
dec
sub
fs
addb
push
into
cmc
adc
push
adc
or
pop
jecxz
pop
push
repz
nop
adc
adc
and
mov
pop
inc
test
xchg
lods
notl
sbb
scas
outsl
adc
mov
orl
rcrl
push
mov
out
lods
jg
mov
pushf
push
jns
xchg
jge
stc
adc
test
pop
jmp
daa
cmpsl
nop
pop
test
dec
mov
aas
mov
test
cmp
sub
sub
mov
lahf
mov
pop
into
sub
cmp
dec
rcrl
scas
out
pop
adc
sbb
hlt
push
or
mov
icebp
mov
dec
xchg
mov
pop
shll
loope
or
inc
mov
lea
jnp
lock
xchg
sbb
jns
into
sahf
jge
push
aam
je
add
jge
cmc
ja
xchg
mov
jmp
stc
adc
jmp
inc
leave
push
mov
aas
add
mov
idivb
dec
mov
ret
cmovp
adcb
fwait
and
mov
mov
movsb
pop
mov
cmp
mov
ret
lret
lds
sbb
lahf
sbb
pop
aad
test
repz
lahf
sbb
cwtl
jo
pusha
pop
shll
or
push
sub
sbb
imul
nop
and
lea
fistpll
mov
enter
rcrb
xchg
dec
pushf
or
sbb
inc
mov
insb
push
mov
jg
adc
xor
push
xor
xchg
dec
test
int3
clc
jp
js
mov
out
fsubrp
dec
shrb
negl
fildll
mov
scas
into
push
fstp
xchg
xchg
and
lods
hlt
xchg
hlt
jnp
mov
scas
dec
loop
sbb
push
setno
and
cmp
xor
or
push
cmp
adc
push
test
jbe
add
dec
inc
idiv
cmp
bswap
leave
dec
sbb
or
shll
das
rcl
ljmp
and
test
stos
push
pusha
push
pushf
out
lea
mov
push
jbe
ja
popa
icebp
mov
insb
jae
mov
cmc
or
jae
jno
xchg
inc
pop
icebp
cli
cmp
cmp
sub
test
mov
or
jg
jmp
jl
mov
ja
stc
push
loope
lret
test
mov
int3
out
pop
cmp
pop
ss
push
mov
cmp
out
sar
test
movsl
fiadds
lock
clc
ror
xor
js
and
test
mov
shlb
shll
fnstsw
mov
in
repz
jae
shlb
jo
imul
hlt
ja
dec
xchg
lds
push
ljmp
addr16
jl
aad
mov
sbb
mov
in
push
fistpll
mov
xor
stc
bound
cmpsb
sbb
fcompp
arpl
stos
inc
test
stos
xchg
mov
aas
cmp
fsubl
ds
lods
add
mov
or
fidivrl
in
aam
xchg
ret
ljmp
test
inc
push
xchg
inc
mov
cld
xchg
jo
cltd
test
int
lret
bound
sub
xor
in
lea
inc
leave
push
adc
or
rcrb
repnz
or
rcll
adc
xor
sub
adc
jecxz
sub
fmull
and
cmp
ljmp
cmp
add
addr16
dec
ja
into
in
aaa
cmp
lock
jae
mov
or
int
inc
inc
push
in
mov
jne
jp
outsb
fisttpll
repz
orb
in
jmp
push
jno
push
int
pop
cwtl
and
or
mov
xlat
sahf
inc
jl
sbb
mov
mov
fiaddl
mov
hlt
add
subb
clc
push
cltd
pop
jne
outsb
cmpb
inc
mov
adc
lahf
mov
loope
mov
adc
push
xchg
mov
insl
or
dec
les
add
mov
xchg
pushf
les
mov
adc
addr16
and
lods
cmpsl
test
xchg
cmp
sub
call
call
pop
sub
sub
imul
sub
pop
xor
xchg
cs
inc
jg
aam
cmpsb
nop
nop
int3
test
jmp
popa
inc
ret
xchg
pop
ljmp
ljmp
scas
dec
hlt
mov
push
movsl
jmp
das
shrb
neg
cmp
insl
cmpsl
shrb
push
xlat
and
sarl
fwait
mov
sahf
addb
jae
push
mov
mov
loop
xor
inc
in
test
shll
mov
ja
jge
imul
xchg
lods
pop
push
add
jns
adc
aam
sub
xchg
hlt
cmc
push
pop
jmp
sahf
pop
sbb
lcall
xor
fmull
push
pusha
jp
cmp
jp
dec
and
imul
xlat
inc
rorl
cmp
jbe
mov
cmp
push
add
sub
or
dec
adc
scas
ret
push
lahf
xchg
orb
pop
xchg
xchg
or
jmp
aad
mov
mov
xchg
notb
jmp
loopne
sbb
xor
add
xlat
cmp
xor
mov
inc
pop
rcrb
or
std
jge
mov
repnz
cmp
rcll
dec
sub
sarl
imull
popa
cmc
popa
and
xor
cltd
outsl
rcrb
lods
jg
adc
pusha
cli
popa
mov
cmp
dec
push
pushf
data16
sbb
mov
aaa
xchg
test
test
and
add
movsl
jae
cmp
and
mov
andl
jae
inc
loop
int
fdivrp
in
stos
and
and
lret
push
cli
scas
ret
out
jnp
mov
pop
int
inc
enter
dec
icebp
and
fdivr
mov
sti
inc
les
sub
xchg
jo
mov
push
mov
lahf
push
insb
daa
inc
dec
pop
pop
lods
vmovss
xchg
xor
xor
fcmovnbe
test
push
push
add
dec
or
dec
mov
push
jno
and
stc
inc
push
inc
jmp
fs
xor
jns
xchg
dec
dec
sti
add
jmp
and
push
sahf
rcrb
lret
lods
jbe
sti
sub
pop
xchg
or
jge
rcll
pop
outsl
dec
sbb
cwtl
mov
jmp
fildll
insl
mov
jle
lret
imull
fstl
loope
xor
sbb
bound
in
rcrb
sbb
mov
out
inc
cmp
rcrb
cmp
cmp
sub
stos
loop
test
fwait
scas
rcrb
or
les
fdivl
inc
add
out
loope
cmpsl
cmpl
lret
int
stos
mov
pushf
xchg
cmpsl
clc
popl
sub
das
test
xlat
aam
scas
jge
inc
push
pop
jns
sub
sub
xchg
es
and
gs
inc
testb
test
out
cs
push
popa
pusha
and
sub
push
stos
popf
sbb
in
push
fistpl
or
fsubs
test
pop
popf
fisubrl
fisttpl
mov
enter
fcomi
push
cmpl
pop
sub
xor
adc
mov
jne
jmp
pop
jmp
ret
inc
sti
and
xchg
cmp
push
sbb
lahf
dec
test
pop
adc
jge
stos
andl
add
push
adc
aad
inc
repz
testl
jl
outsl
or
scas
test
mov
xchg
repnz
clc
sarl
ficompl
adc
sub
rol
jg
incb
test
dec
int3
xor
mov
push
mov
int3
movsl
dec
push
xchg
jbe
iret
lahf
cltd
sahf
inc
push
sub
cld
aad
xor
and
inc
bound
push
mov
jecxz
imul
inc
xor
mov
sti
mov
mov
pop
and
std
xor
repnz
or
mov
je,pt
mov
mov
inc
lret
cmp
push
mov
and
cld
les
incb
pushf
push
sbbb
cmpsl
ret
adc
xchg
adc
fiaddl
lods
mov
scas
addl
jmp
adc
mov
or
frstor
dec
add
jge
mov
lahf
and
std
test
in
je
push
or
aad
add
pop
pop
lods
sbb
jno
sbb
int
imull
dec
lock
in
dec
sbb
dec
adc
das
outsl
xchg
push
ja
repz
xchg
dec
xchg
lds
repz
jb
into
mov
pop
mov
outsl
pop
mov
shll
adc
adc
jmp
hlt
mov
push
dec
jnp
fwait
cmp
mov
inc
dec
imull
lret
sbbl
jp
les
sbb
sbb
or
in
imul
stc
dec
cmp
lock
enter
mov
xchg
cld
ja
outsl
clc
and
in
xlat
and
rcll
insl
hlt
jle
xor
or
or
cmpsb
jae
iret
sub
bound
sub
loopne
shrl
mov
lret
jo
xchg
and
aam
cmp
mov
xor
xchg
jns
xchg
xchg
dec
lea
xor
mov
out
call
pushf
ret
test
sub
dec
cli
popf
jmp
dec
addr16
push
iret
push
int
rclb
add
xchg
cmc
iret
ret
xchg
adc
mov
adc
sub
fs
push
jns
repnz
pop
jl
xor
cmp
adc
rcll
sti
lret
leave
and
cwtl
lcall
sub
movsb
out
lock
lds
mov
mov
ss
push
jnp
out
jmp
sti
aas
mov
in
mov
outsb
arpl
in
inc
dec
sub
stos
push
stos
lahf
testb
xor
outsl
repnz
iret
fnstcw
jl
and
jne
in
outsl
repz
je
pop
aad
das
inc
lods
es
sub
lods
dec
mov
jae
add
push
mov
hlt
mov
jecxz
aam
out
push
leave
fs
jno
stos
xor
loopne
jle
or
or
jne
jle
ret
dec
les
fdivl
scas
aaa
fwait
sub
out
std
test
mov
out
mov
inc
mov
push
lods
jbe
test
push
imul
push
dec
mov
fcmovnbe
dec
xor
rorl
pop
pusha
xor
bound
bts
leave
stos
add
ljmp
xorb
dec
xchg
mov
sub
ljmp
pusha
lods
pop
int3
jae
lock
call
fsubl
cwtl
aaa
cli
adc
adc
xor
lea
jmp
lods
data16
and
lock
cmp
orl
fnclex
aaa
jbe
cs
aaa
movsb
jle
xchg
iret
lea
jbe
inc
lret
je
inc
dec
xor
push
mov
sti
pop
ja
mov
ljmp
mov
cmpsl
stos
gs
icebp
lret
gs
negb
pop
loopne
add
je
enter
mov
test
loopne
data16
sub
push
adc
push
mov
es
pushf
mov
ljmp
cwtl
fldt
jmp
ljmp
outsb
push
sub
mov
idivl
jo
cltd
not
sub
mov
or
cmpsb
rol
aam
lret
push
sub
mov
rcll
ljmp
rep
imul
jb
inc
repz
and
data16
mov
outsl
fidivs
and
mull
ss
rcll
sarb
bound
dec
loope
fwait
repz
xchg
cmp
movsl
jbe
pop
sbb
movsb
mov
pop
adcl
or
cmp
test
call
dec
stc
arpl
mov
sti
xchg
fcoml
cwtl
xchg
aad
adc
call
lds
dec
hlt
adc
inc
or
push
push
pop
and
faddp
andb
stos
cmpl
std
jge
mov
test
adc
cmp
call
adc
inc
push
and
xchg
push
jmp
jo
sbb
lahf
cltd
call
ret
iret
das
stos
mov
jns
sub
push
dec
jnp
mov
add
ljmp
ret
js
sub
test
lea
pop
lret
xor
xchg
xchg
inc
cmp
inc
or
test
xchg
inc
and
vprotb
int3
mov
mov
lret
and
xlat
xchg
jns
inc
dec
pop
mov
call
push
or
imul
jg
cmp
dec
mov
rcrl
jge
lods
pop
stos
nop
and
and
sub
sub
aaa
subl
mov
mov
add
add
int
dec
cli
xor
clc
popa
mov
mov
lods
das
or
cmp
jns
pushf
scas
xchg
out
std
sbb
mov
in
mov
scas
dec
jne
jecxz
and
and
insl
jg
iret
in
push
adc
push
push
inc
lea
ds
lods
fmull
dec
fildll
sti
jne
andb
or
mov
shll
mov
mov
mov
addr16
inc
fwait
test
pop
mov
fisttps
sub
je
in
test
dec
dec
stc
pop
jnp,pn
cmp
inc
scas
shll
xchg
xor
cltd
inc
add
push
mov
xchg
mov
pop
push
mov
cmp
xor
push
popf
paddd
or
and
pop
mov
xchg
adc
xchg
push
add
mov
xchg
stc
lods
xor
xor
mov
out
outsl
jo
scas
out
push
mulb
add
arpl
insb
frstor
push
adc
jmp
loopne
lret
lods
xor
add
jge
sub
xchg
icebp
neg
mov
jecxz
leave
jge
xor
pop
je
pop
insl
xchg
sbb
push
cltd
nop
push
jg
repz
out
fwait
push
dec
push
or
popa
ds
jmp
push
test
cmc
pop
push
adc
mov
iret
push
cs
xchg
mov
mov
repnz
mov
or
ljmp
cmpsl
add
mov
addr16
fildl
sub
push
repz
aad
add
bound
xor
lret
and
pushf
lods
out
leave
call
in
js
aad
pop
cmp
xor
pop
push
insl
or
add
pop
mov
js
push
add
mov
sub
leave
les
icebp
aam
mov
rol
pop
pop
negb
add
out
mov
repnz
jecxz
adc
jmp
sahf
repnz
dec
scas
jno
push
fcmovbe
ja,pt
mov
sub
mov
and
dec
sbb
stos
int3
int
es
sub
and
adc
mov
mov
cwtl
sub
test
push
lret
jbe
rolb
pushf
cwtl
pop
jbe
jmp
jg
xor
adc
fidivrs
repnz
lods
jbe
fwait
js
std
or
xor
stos
fadd
mov
aam
imul
cltd
aas
adc
int
shl
adc
sbb
test
shll
nop
lahf
cltd
mov
inc
dec
pop
cmp
sahf
testb
sub
xchg
sbb
in
lods
sti
insb
repz
lcall
xor
lock
xor
decb
push
lods
repz
leave
inc
mov
pop
push
inc
sub
stc
push
call
cmp
and
test
movsb
pop
or
pop
sbb
bound
mov
popf
pusha
sub
and
test
add
into
stos
call
shr
ret
jo
aaa
test
arpl
push
outsb
mov
inc
dec
cmpsb
insb
mov
pop
cli
movsb
cmpsb
xchg
jae
lea
das
adc
mov
movsb
xlat
sbb
aaa
xor
movb
sbb
out
jl
xor
inc
dec
test
repz
iret
adc
lcall
or
rcrl
xor
and
jae
imul
cld
cmp
inc
addr16
mov
mov
shlb
aad
cmp
cmp
aas
aas
xchg
out
enter
push
xchg
mov
pop
cmp
mov
push
aad
aas
inc
fsubs
mov
add
mov
sti
out
mov
lea
mov
mov
js
push
pop
test
xor
cmpsl
lcall
aaa
das
cld
lods
mov
pop
push
int3
fwait
lcall
ret
pop
mov
in
xor
jp
push
in
cmp
shl
bts
cmp
js
push
inc
inc
rolb
leave
or
outsb
bound
out
subl
out
sbb
mov
inc
sbb
or
push
push
dec
mov
dec
jae
aas
mov
and
inc
ret
cld
js
adc
sbb
jnp
adc
repnz
inc
mov
cld
sub
popf
mov
popf
rolb
inc
pop
fisubrl
push
loop
jle
jp
mov
popa
test
dec
sar
mov
ss
pop
mov
cwtl
jmp
lods
ret
sub
cmp
scas
push
and
pop
movsl
and
out
ds
jne
test
stc
or
cwtl
add
mov
popf
dec
mov
out
pop
outsb
negl
scas
xor
ljmp
fs
mov
ss
popa
stc
scas
sbb
scas
lret
jecxz
mov
push
fcoml
mov
insw
sbb
in
xchg
xchg
movsl
arpl
cmp
bound
xchg
clc
push
int3
bound
inc
test
je
jge
dec
ss
leave
adc
or
les
mov
dec
jmp
fsubr
sub
cld
mov
in
popf
mov
cmc
and
xchg
jl
repz
icebp
and
ljmp
rol
mov
cmpsb
ror
ret
cmp
jg
in
xor
pop
shrb
sbb
call
clc
xor
repnz
test
push
and
lock
add
or
cmovp
mov
lds
lret
xchg
xor
cmp
popa
jge
xchg
xchg
add
pop
aad
adc
pop
adc
dec
fldenv
js
scas
pop
and
mov
sbb
mov
add
shrl
fnstcw
scas
sbb
push
and
repz
iret
xor
mov
imul
push
push
mov
out
loopne
push
fcomps
not
loope
int
add
cld
add
add
in
push
cmp
pop
rclb
out
cmpsb
lret
xchg
and
invd
xor
xchg
pop
and
xor
outsl
mov
loope
push
adc
mov
or
rcr
dec
add
push
push
adc
out
pop
mov
or
ficoms
pop
repnz
mov
out
or
call
loope
icebp
lods
iret
je
scas
sarl
adc
popa
push
jge
pop
adc
sub
xlat
pop
mov
add
mov
dec
dec
cmc
adc
aam
mov
fistl
lods
popa
jmp
inc
ret
dec
dec
pop
push
mov
in
sbb
shll
inc
mov
fimull
fidivl
xor
lret
push
insb
jge
mov
addr16
cmp
loope
or
sbb
mov
inc
les
dec
add
push
les
repnz
and
into
push
mov
loope
sarl
sub
sub
or
lret
mov
rol
xor
outsl
mov
out
psubb
and
and
scas
cmp
adc
lret
fsubl
push
xchg
xor
lock
into
daa
loope
sbb
xor
jbe
sbb
or
popf
call
or
iret
loop
sub
cwtl
lret
ss
shll
insl
push
sub
fsubrl
idivb
movsl
add
push
call
dec
or
push
xlat
cli
mov
push
xor
es
inc
lahf
shll
loope
and
and
pop
popa
mov
mov
add
cmp
test
inc
cmc
inc
cmp
or
add
lcall
push
scas
mov
nop
xor
xor
mov
xchg
push
cld
mov
or
lret
stos
jae
jns
xchg
test
fnstsw
dec
sub
push
inc
add
and
jge
jecxz
push
mov
adcb
sbb
call
mov
out
imul
shrb
pop
pop
push
adc
xor
lods
out
sub
adc
inc
paddq
fdivrl
cmp
and
mov
xor
popa
or
adc
insb
xor
aas
or
cmp
push
std
dec
inc
cltd
shl
dec
sbb
bound
xor
mov
ja
and
scas
pop
mov
out
mov
inc
xchg
in
test
icebp
sarl
inc
inc
mov
out
or
out
mov
aaa
adc
stos
sbb
add
add
js
movsb
cli
mov
cmp
movsb
push
lock
and
pop
cld
in
test
mov
std
xchg
pop
add
outsb
sar
add
loop
in
sbb
test
and
in
mov
jl
dec
repnz
pop
cmp
sub
lods
mov
inc
daa
roll
push
int3
xchg
and
sbb
ret
jne
or
int
mov
es
in
nop
out
sbb
xchg
jle
js
sub
jge
pusha
xchg
lods
sub
sub
jmp
int3
dec
fsubs
repz
insl
sahf
stos
jecxz
add
jae,pt
mov
mov
lret
adc
and
lods
add
lahf
insb
cmp
xchg
mov
or
notl
aaa
aad
mov
push
out
rcrl
jecxz
fs
add
lock
fcoms
out
mov
lods
nop
in
rcll
je
adc
pop
pop
mov
lret
mov
fwait
pop
xchg
frstor
fdivl
loop
mov
and
repnz
mov
adc
int
mov
jo
cs
xor
out
dec
xlat
lock
sti
jp
or
insb
loop
lret
cmpsl
add
push
fistps
pop
bound
and
subb
xorl
arpl
sub
pop
fsub
and
addb
test
loopne
jns
dec
fisttps
xor
ljmp
xor
mov
inc
pop
fidivrs
adc
data16
das
out
dec
mov
sub
addr16
andl
sub
xchg
sbb
inc
hlt
sbbl
icebp
aas
push
movsl
pop
xchg
aaa
pop
daa
mov
shl
arpl
into
sbb
cmp
loope
or
insl
dec
add
mov
xchg
outsl
inc
xor
inc
push
imul
mov
repnz
ja
pop
mov
jae
rolb
outsb
sbb
shrb
push
or
cli
pop
dec
loopne
inc
daa
jbe
mov
and
push
repz
stc
jle
fildl
jl,pt
adc
push
hlt
pop
fistpll
mov
jno
bnd
scas
mov
cmc
jmp
cmp
ficoms
bound
cmp
mov
cmp
loope
inc
ljmp
push
push
insb
std
sarl
mov
in
inc
push
popw
cmp
add
into
push
out
shlb
mov
int3
jbe
loop
mov
fwait
movsl
and
ror
or
ror
jmp
mov
mov
pop
jle
sub
sahf
add
inc
pop
int
mov
in
add
mov
sbb
in
xor
jbe
sarb
cmc
daa
into
test
rol
inc
add
movl
sbb
push
xchg
shr
iret
lahf
cmpsb
fistps
cli
movsb
les
mov
jns
mov
xor
outsb
movsl
cmpsl
xchg
ret
xchg
jno
dec
push
inc
es
call
daa
int3
push
mov
xorb
imul
lods
or
lcall
lock
and
aad
out
cmp
cli
shrb
mov
mov
dec
xchg
fbld
push
cmp
sbb
xchg
pop
dec
cltd
lods
cmpsl
add
int3
cmp
out
pop
bound
fyl2x
mov
insb
mov
sbb
jno
lock
js
filds
sbb
or
ss
das
cmp
nop
xchg
std
loopne
cmp
mov
repnz
xor
ja
or
xor
sbb
or
mov
mov
leave
pop
data16
addr16
jo
sbb
and
jecxz
fmulp
daa
mov
mov
mov
cmp
push
jo
xchg
xor
data16
in
lds
inc
in
dec
mov
fisubrl
pop
cmc
mov
cmp
xchg
fidivs
lret
adc
je
pop
movsb
lahf
or
mov
pop
xchg
stc
lret
out
lock
adc
in
adc
xor
or
dec
lea
clc
jle
and
mov
xchg
leave
mov
lea
nop
fisubs
insl
cmp
adc
jl
bound
xor
or
xor
sbb
jbe
push
push
dec
cmp
jmp
aam
call
sti
sub
pop
jmp
bsr
mov
mov
adc
push
daa
lahf
sbb
jl
insb
sbb
inc
pop
fs
jbe
xchg
outsl
cli
loope
fmuls
jg
push
outsl
cmpsb
cmpsl
push
jle
jecxz
and
jle
lods
jbe
es
les
cmp
xchg
popa
push
jmp
stos
pop
stc
and
adc
mov
cmp
xchg
int3
hlt
pop
mov
test
jge
data16
mov
shl
daa
cmp
adc
mov
xchg
call
pop
jno
aad
mov
dec
notl
sbb
mov
mov
in
jne
xchg
repz
fsubs
push
xchg
pusha
mov
mov
push
dec
add
insb
jp
sbb
mov
lahf
inc
test
stos
ret
clc
popa
push
jbe
push
mov
cs
push
mov
or
jae
rol
mov
cli
xchg
bound
add
sbb
jecxz
in
das
enter
nop
xchg
aad
arpl
mov
in
dec
daa
inc
std
call
pop
test
mull
inc
jbe
out
andl
xchg
pusha
in
lods
pop
mov
clc
cmc
sbb
movsb
dec
jns
rorl
out
outsl
mov
inc
rcrb
shrb
dec
cmc
aas
lods
sbb
lcall
movsb
jp
int3
dec
cmp
addb
jmp
sbb
and
sbb
fistps
not
jp
stc
aas
fwait
pushf
ret
xchg
or
mov
scas
sub
mov
adc
js
dec
sub
mov
scas
ljmp
les
jmp
outsb
sbb
scas
test
je
pushf
mov
push
enter
popf
pop
mov
in
xor
lds
shrb
call
push
add
cmp
into
jns
jge
mov
push
je
ss
imul
xchg
les
incb
call
fildl
sahf
mov
and
push
fcmovnu
jnp
xchg
or
test
ljmp
jae
mov
enter
or
insl
inc
cli
mov
jmp
dec
sahf
mov
sbb
pop
loop
fldcw
stos
loope
xchg
out
xor
and
jg
sbb
pop
xchg
movsl
fstl
cwtl
or
adc
pop
clc
rcll
push
data16
or
mov
ret
bnd
jecxz
fmuls
repnz
scas
cs
in
hlt
lea
daa
cmc
scas
and
cmpsl
mov
leave
cli
sub
stos
mov
sbb
mov
jl
dec
cmc
jmp
push
pop
push
dec
pop
data16
sub
pushf
or
loopne
lcall
dec
add
cmpsl
mov
fsubrl
inc
iret
cmc
dec
jg
rcl
bound
and
mov
fstl
sbb
push
adc
and
popa
push
push
push
scas
lea
in
lods
pop
mov
fs
int
and
das
in
addb
dec
pop
xor
sub
sbb
add
inc
cld
and
fwait
clc
or
shr
aaa
pop
enter
add
mov
and
or
inc
inc
cltd
dec
test
and
sub
dec
mov
mov
xchg
imul
dec
lcall
jg
lret
mov
add
out
sahf
popa
orb
mov
lock
lds
aad
cmp
dec
imul
stc
sbb
pusha
jae
fbstp
lcall
fstl
in
push
xor
sub
pop
mov
bound
roll
out
cld
inc
sets
sbbl
inc
adc
or
or
adc
pop
adc
bound
mov
in
pop
and
lods
xchg
les
enter
push
xor
xor
int
mov
mov
aam
fs
mov
dec
jbe
out
push
rol
rsqrtps
cmc
enter
xchg
cmpsl
mov
mov
imul
mov
fs
dec
sbb
outsl
push
aam
testb
cwtl
aas
adc
cmpsb
rorb
mov
repz
int
sahf
adc
xchg
out
xchg
lods
cwtl
jbe
lods
les
gs
and
jae
shrb
dec
sbb
sbb
cmp
int
add
push
mov
sbb
push
cmp
arpl
sbb
push
repnz
cmp
sbb
scas
sbb
or
add
adc
adc
lret
xor
es
mov
sbb
dec
ds
adc
loope
std
xchg
stos
xor
mov
cmp
mov
push
dec
nop
pop
xor
push
dec
sub
orb
lods
clc
dec
xchg
leave
mov
pop
push
xor
mov
adc
cld
mov
addl
xchg
xchg
jecxz
mov
push
rorl
pop
js
aad
jb
lret
dec
xor
xor
xor
std
cli
addb
sbb
rorl
imul
push
pop
mov
aad
mov
xchg
int3
push
and
jmp
in
in
out
into
gs
movsl
sbb
sub
add
movsb
lcall
mov
push
pop
int
fcompp
and
jl
mov
pop
dec
xchg
or
hlt
inc
cmpsl
mov
pop
fsubrs
das
rcrl
mov
test
rcrl
out
dec
mov
imul
daa
and
cmp
adc
xchg
push
sub
mov
jmp
rcrb
jmp
imul
repz
repnz
or
xchg
gs
mov
inc
and
jg
movsl
inc
mov
dec
jae
pop
mov
dec
cmpsl
testb
and
into
stos
test
fiadds
out
aam
xchg
adc
ljmp
xor
adc
int3
push
call
adc
or
sti
lods
or
push
dec
xor
in
sbb
pop
xchg
xor
decb
add
push
adc
hlt
data16
popf
xor
roll
fsubrs
arpl
andl
out
push
iret
in
cmp
nop
dec
add
sub
ljmp
jp
not
je
roll
lock
int
ret
imul
mov
xor
or
jnp
test
xchg
lret
outsb
push
mov
insb
adcl
outsb
je
dec
hlt
insl
mov
mov
or
pushf
pop
stos
adc
jmp
out
lea
xchg
adc
adc
repnz
out
sub
or
test
aam
jge
sbb
and
cmp
je
lcall
rol
imul
mov
rclb
mov
pop
mov
and
ss
jp
lock
push
int3
insl
mov
into
add
dec
shrb
or
adc
lcall
push
and
lahf
insl
push
cmp
pop
in
dec
nop
frstor
mov
add
ret
xchg
adc
push
filds
scas
inc
xor
xor
xchg
aaa
fistpll
lock
or
cltd
or
stos
sub
adc
in
ror
in
popa
repnz
jns
add
ljmp
pop
hlt
inc
jo
or
mov
loopw
push
repz
movsb
pop
imulb
cmpsl
or
pop
fldl2t
ja
push
ja
stos
out
in
add
mov
ja
mov
movsl
sbb
fcoml
movsb
shl
scas
lret
inc
popl
jmp
xchg
rcrl
mov
cwtl
dec
iret
push
inc
inc
pop
in
or
in
into
lds
mov
cmp
mov
popf
loope
out
fbstp
or
stos
imul
add
ja
xor
repnz
and
subl
inc
pop
test
sahf
xlat
fs
jb
dec
xor
arpl
outsl
push
cmp
sub
mov
out
xor
xlat
pushl
xor
ret
pop
out
cmp
push
cwtl
imul
mov
out
fsts
shll
pop
addl
fsubrp
dec
xchg
sar
pop
pslld
ss
in
mov
nop
push
mov
pop
out
dec
clc
mov
iret
dec
xor
add
shr
shr
jne
call
movsb
mov
sbb
mov
aad
dec
aam
dec
push
std
push
jecxz
mov
call
xor
pop
mov
aas
repz
movsl
sub
test
les
inc
lcall
cmp
mov
inc
imul
xchg
dec
and
sub
sti
jnp
nop
rorb
repnz
imul
hlt
adc
sbb
push
les
jmp
pop
jb
or
push
or
mov
clc
sbb
ds
cmp
mov
cltd
les
or
xchg
in
mov
or
rolb
adc
and
cmp
xorl
jge
lret
dec
loop
fsts
sbb
out
das
bound
sbbb
mov
push
add
dec
lds
imul
dec
xlat
push
push
out
popa
sub
arpl
mov
clc
mov
sub
incb
aaa
sbb
stos
inc
and
add
andnps
scas
lret
scas
sbbl
pop
mov
je
inc
int3
inc
push
in
imul
es
pop
insb
mov
xchg
xor
sub
and
jmp
jg
xor
cmp
faddl
and
sub
mov
rcr
insl
movsb
in
loope
std
xchg
into
repnz
outsb
add
es
imul
iret
pop
cmc
cmp
sbb
fisubl
inc
cmp
das
inc
dec
sbb
push
cmc
insl
addr16
xchg
fsubl
or
daa
aad
push
xchg
jl
push
in
mov
mov
xlat
jnp
mov
xor
mov
xorl
out
dec
sti
out
test
rcll
movsl
add
mov
cli
dec
mov
fdivl
outsl
pop
clc
cmpl
xchg
xor
cmp
fldt
loopne
jp
fsts
lret
push
mov
xchg
mov
mov
dec
out
call
push
insl
data16
or
dec
adc
xchg
inc
push
sbb
adc
aad
cmc
cmp
divl
imul
stos
hlt
mov
stos
addl
fcomp
adc
mov
les
mov
add
iret
loop
aad
shrb
push
cmp
xor
dec
xchg
xchg
cmp
bound
sbb
addl
sub
xchg
jo
xchg
imul
cwtl
popa
sub
mov
jmp
pop
rcrl
push
sbb
lds
in
nop
mov
jnp
push
mul
aas
xchg
xor
cmp
xor
in
lods
dec
inc
mov
push
push
push
jmp
jo
nop
fld
sti
out
fnstenv
stos
pop
sub
dec
mov
stos
push
les
inc
push
into
xchg
push
stos
divb
lret
mov
dec
in
shll
pop
inc
push
fwait
stos
jl
adc
jno
mov
pushf
mov
notb
and
jae,pn
mov
ret
fcomps
cld
jp
dec
or
sub
daa
sub
mov
xorb
cmp
push
push
arpl
jno
inc
xchg
dec
cmc
dec
pusha
aas
scas
fidivrl
imul
inc
lods
pop
or
scas
dec
mov
dec
push
outsb
inc
mull
cmc
dec
pushf
dec
dec
jmp
imul
mov
cmpl
add
iret
xchg
or
clc
in
stos
sbb
xor
mov
pop
sbb
jns
sbb
xchg
sub
or
inc
xorb
push
aas
push
xchg
lcall
sub
jo
test
sbb
mov
lahf
incl
push
subl
or
dec
xchg
mov
popf
outsb
xchg
test
je
cli
or
xchg
scas
lahf
sbb
scas
xchg
stos
xchg
ret
lahf
push
dec
sbb
inc
jns
or
xchg
cld
test
lahf
out
sbb
arpl
lcall
in
jne
loope
sub
rcrl
gs
ret
mov
push
repz
aad
fnstcw
jns
push
test
into
mov
sarb
pusha
mov
in
leave
add
lock
or
in
jns
add
das
jbe
insl
out
hlt
repz
xchg
jmp
add
inc
adc
into
insb
sub
loope
ss
and
std
frstor
sbb
mov
dec
mov
in
bound
xchg
push
add
sbb
fmuls
and
loop
mov
sub
xchg
sub
nop
or
out
sbb
fimull
dec
mov
js
scas
bound
and
or
fisubrl
mov
jbe
add
adc
imull
xchg
dec
addr16
jmp
js
mov
cmp
mov
in
lea
or
lret
mov
pop
ljmp
dec
pop
and
imul
mov
aad
add
push
jae
mov
cmp
jl
cmpsb
sbb
sub
jmp
outsb
lods
pop
outsl
add
and
repnz
adc
xchg
imul
push
push
push
mov
outsb
and
push
jo
and
outsb
mov
xor
cmp
mov
decl
xchg
ficoml
outsb
mov
push
inc
adc
call
cmp
pop
pop
mov
rorl
es
repz
cltd
pop
xor
cmp
out
jb
mov
test
lea
ljmp
inc
outsl
sub
cmpsl
push
das
imul
sbb
inc
mov
pop
sbb
push
xchg
int3
jle
imul
jecxz
pop
fs
insb
iret
cld
dec
jns
push
pop
movsl
hlt
icebp
pop
add
mov
in
jl
pushf
rclb
xchg
push
lods
mov
xchg
push
cmp
pop
cltd
mov
push
sbb
jecxz
in
lret
mov
out
push
adc
ret
sub
cltd
pop
int
jmp
movl
pop
outsb
sahf
or
cwtl
xchg
imul
xchg
add
adc
adc
jnp
ds
add
int
cmp
push
popa
cmpsb
add
iret
outsb
sbb
and
or
popa
fsubrp
div
jno
hlt
dec
or
jp
mov
pop
and
outsl
mov
outsb
xlat
iret
in
imul
jge
adc
mov
and
jl
mov
push
sbbl
test
push
cli
stos
push
xchg
pop
clc
loope
push
fwait
pop
xchg
sahf
loop
sub
fstpt
xor
or
pop
and
imul
xchg
sub
cmp
and
or
push
js
js
push
mov
cmp
pop
negb
mov
gs
or
sub
sbb
mov
andb
insl
sub
dec
sub
push
loop
data16
jns
sbb
pop
inc
dec
out
dec
aas
sbb
out
cmp
and
std
rcll
mov
push
xchg
mov
stc
fucom
int3
mul
call
xchg
inc
xlat
outsl
xlat
cmp
cwtl
loop
out
cmp
mov
lahf
cmpsb
dec
jp
out
jmp
pop
adc
in
mov
xor
xchg
jl
mul
and
cmp
mov
push
sbb
jmp
push
aad
shr
jge
xor
addr16
popa
dec
pusha
dec
cmp
xchg
cltd
test
xchg
les
mov
dec
les
mov
jl
and
cmc
fldenv
and
in
cltd
ret
push
insb
dec
dec
dec
popa
dec
ror
out
fs
movsl
scas
test
adc
es
adc
xchg
je
les
mov
mov
dec
sub
into
inc
in
ja
stos
idivb
int3
out
cmp
lods
or
movsl
loop
sbb
pop
out
xor
aas
push
dec
sbb
and
add
in
repz
test
je
and
pushf
outsl
or
mov
or
push
testb
shlb
mov
push
cmp
push
mov
mov
aad
inc
inc
insl
jecxz
test
testl
and
sti
sub
vpmulhrsw
sbb
idivl
xor
mov
cmp
lcall
mov
adc
pop
mov
or
lcall
push
sub
fldt
jecxz
or
ljmp
push
pushf
sub
sub
stos
scas
aad
and
sbb
orb
sarl
dec
int
cmpsb
dec
xchg
je
push
aaa
cltd
flds
les
and
cmpsb
out
cwtl
mov
jge
mov
push
xor
xchg
call
xchg
adc
sub
in
pushf
call
rcrl
inc
and
dec
aam
dec
mov
push
pop
dec
pusha
adc
sarl
sarl
out
imul
call
jbe
mov
sbb
je
shrl
mov
sqrtps
cwtl
push
jb
pop
sbb
add
push
xchg
cmp
mov
pushf
cmp
fnsave
test
pop
outsb
and
jp
shrb
rcr
pop
cwtl
pop
in
cmp
fiaddl
push
mov
sbb
testb
idivl
or
popf
push
sub
stc
cld
lret
adc
adc
fiadds
inc
dec
push
pop
pusha
lds
outsl
pop
or
add
cmc
fidivrs
in
call
add
push
xchg
sti
std
mov
xor
cmpsb
pop
cmpsb
and
dec
call
in
andb
mov
test
xchg
mov
add
dec
cltd
shrl
stos
jb
dec
test
aas
pushf
stc
popa
dec
dec
mov
xchg
inc
sub
jae
das
push
je
xor
xor
pushf
rorb
rcrb
jo
jmp
call
dec
push
sbb
nop
fincstp
pop
xor
dec
adc
es
vandnps
test
das
daa
jnp
out
lahf
xchg
xor
mov
push
xchg
mov
shlb
mov
dec
movb
ja
and
push
xchg
mov
pushf
stos
leave
push
mov
stos
sbb
pop
push
cmpsl
add
scas
shlb
mov
das
in
sub
in
in
es
pop
testb
jb
xchg
cmpl
mov
mov
and
inc
test
inc
mov
push
pop
stos
dec
xor
inc
pop
shlb
cmc
sub
inc
xchg
lcall
push
mov
push
and
rorb
jmp
xchg
lods
mov
jno
xor
jge
dec
lea
xchg
mov
outsb
fimuls
gs
loope
test
mov
adc
push
addr16
jg
out
and
hlt
dec
push
hlt
cltd
rcrb
in
or
popf
pushf
jmp
dec
inc
loop
jg
sti
repnz
shll
repnz
adc
and
stos
dec
mov
rcrb
push
xchg
inc
or
aas
mov
mov
loopne
push
out
pusha
test
outsb
dec
pop
hlt
iret
sbb
scas
sbbl
test
mov
dec
mov
xchg
into
std
cmpsb
pop
dec
push
or
subb
std
pop
mov
mov
pop
add
ljmp
cmp
rolb
xchg
cwtl
cltd
cmc
xor
int
ret
add
loop
inc
inc
hlt
cmp
pop
mov
mov
dec
pop
pop
cld
ds
neg
mov
sbb
pop
xchg
pop
call
arpl
add
aas
pop
pop
inc
push
xchg
aad
mov
pop
dec
push
dec
popf
jno
repnz
and
mov
or
inc
hlt
jge
mov
das
stc
scas
adc
hlt
and
mov
sar
jle
xchg
sub
xchg
mov
scas
jno
gs
cmpsl
push
roll
push
std
or
xchg
fs
push
pop
js
sub
int
xchg
add
push
shrb
cmp
mov
stc
xchg
vandnps
push
shrl
adc
addb
mov
mov
sub
adc
daa
sbb
dec
int
repnz
mov
subl
xchg
clc
ret
adc
daa
mov
xchg
pop
mov
and
xlat
dec
insb
sbb
xchg
lret
xchg
inc
xor
cmpsb
lret
ret
bound
ja
cld
xchg
mov
sbb
xor
insb
jecxz
insl
jno
pop
test
adc
fbld
loopne
xor
test
stos
xor
test
inc
sub
sub
in
push
mov
test
mov
movsb
enter
mov
cld
and
sub
pushf
je
filds
xor
xchg
repnz
imul
shll
xchg
std
test
mov
sahf
enter
popf
stos
add
clc
inc
jecxz
aaa
jge
pop
sub
sti
bound
div
fldenv
loop
cld
sub
inc
mull
in
adc
mov
inc
mov
fmull
sub
cmp
adc
sbb
inc
mov
enter
mov
or
call
stos
aad
mov
cmc
sub
les
test
mov
imul
mov
push
fwait
add
xor
push
or
mov
lahf
mov
and
lret
pop
mov
and
arpl
cmp
mov
mov
jmp
inc
ret
stos
jg
insb
outsb
je
mov
test
sbb
xchg
cltd
xor
xchg
jge
in
jbe
mov
mov
pusha
jg
add
mov
por
or
sub
jp
or
dec
xor
pop
sarl
shll
lods
sarl
test
lahf
jg
push
jge
es
pop
repnz
push
pop
push
push
pop
dec
dec
sahf
insb
je
dec
cmp
inc
mov
jle
jns
cmp
fisttpl
arpl
add
aad
jp
jae
xor
not
push
jne
fdivl
data16
aam
ja
ret
out
movsl
pop
pop
std
xor
add
aam
in
stos
add
imul
jg
mov
ja
inc
mov
adc
clc
inc
jp
sbb
push
in
jne
subb
test
and
movsl
test
pavgb
fmuls
ficoms
dec
fdivl
popa
sbb
sbb
push
aas
loopne
out
daa
incb
adc
jmp
lock
jae
scas
cmp
jbe
andl
pushf
fdivr
sbb
fs
jo
mov
dec
enter
pop
sub
cmp
int
sbb
push
sbb
mov
stc
test
mov
adc
imul
mov
loopne
out
iret
popa
and
out
push
mov
test
cmp
stos
rolb
ljmp
ja
cmp
adc
rorb
dec
inc
jbe
fsts
pop
jmp
ja
dec
xchg
sub
movsl
jo
mov
push
dec
daa
enter
pop
adc
push
dec
push
jno
jmp
sub
adc
mov
adc
mov
rclb
leave
mov
dec
aam
jbe
cmp
cwtl
inc
andb
loope
cmp
pop
bound
sub
fwait
test
decb
mov
in
sub
jb
or
jbe
add
jecxz
jae
mov
icebp
aad
addl
push
mov
loop
push
mov
jecxz
testb
daa
dec
and
xchg
or
cmpsb
in
aam
cmpsl
in
dec
hlt
lret
into
cli
add
push
xor
aaa
sub
add
push
pusha
push
xchg
lahf
mov
xor
push
in
aad
lods
ja
mov
daa
fisubs
xchg
or
push
loopne
xor
jnp
xor
movsl
test
cmp
out
out
xchg
dec
mov
inc
lods
sub
enter
mov
add
imul
insl
sub
outsl
test
push
imul
sbb
mov
cmc
sti
ret
negb
xchg
frstor
jecxz
imul
and
jmp
mov
call
stc
dec
test
sarb
mov
ret
mov
pop
mov
adc
mul
inc
sbb
pop
xorb
popa
mov
cmp
add
frstor
mov
cmp
pop
ret
js
or
xchg
sbb
add
jp
xor
cltd
add
movswl
sbb
repnz
ljmp
jnp
jg
scas
fsubrs
insb
push
jns
mov
pop
cmp
andl
lods
cld
cmp
loopne
sbb
cmp
mov
lds
mov
mov
ds
dec
outsb
lods
xlat
roll
cmp
push
fldt
xor
fisttps
xor
or
push
jae
jne
incb
scas
inc
mov
and
arpl
dec
mov
hlt
loope
xor
jnp
daa
mov
inc
sarl
lret
rcl
out
xchg
cmp
cmp
lock
jge
jecxz
pop
xor
out
dec
jnp
push
inc
xor
xlat
mov
jl
push
cmp
pop
mov
sti
mov
out
outsb
into
mov
pop
xlat
loop
jnp
jne
xchg
in
fisubrs
xlat
jp
mov
sbb
in
shlb
sbb
mov
cmc
iret
sbb
rol
mov
dec
movsb
sbb
pop
mov
jle
ret
iret
daa
ret
mov
test
shrl
in
ret
test
imulb
in
adc
cmp
mov
dec
mov
dec
pop
cs
inc
call
cmp
xchg
lcall
cmc
and
ret
aaa
pop
push
cmp
stos
cld
pop
add
std
and
popa
xor
mov
rcl
add
push
sbbb
push
mov
mov
icebp
jl
mov
add
cmp
add
mov
fildl
cmp
data16
sbb
inc
xlat
or
insl
insl
cltd
pop
cs
in
lock
cmp
mov
add
jge
cmc
xor
ds
std
lock
push
sub
iret
xchg
fdivl
inc
dec
mov
loopne
jecxz
xor
mov
and
aas
es
adc
test
jl
pop
insb
std
mov
push
dec
jecxz
xchg
adc
movsb
jns
mov
bswap
inc
jge
aam
mov
xchg
mov
rcll
dec
push
in
mov
xor
fisttpl
movsb
fmul
push
jecxz
ljmp
cmp
mov
cmpl
push
xchg
and
jg
cld
mov
out
mov
mov
jbe
adc
add
adc
pop
or
das
rol
fwait
insl
xor
pushf
mov
mov
jae
xchg
mov
dec
jns
lods
lcall
mov
mov
pushl
imul
add
mov
clc
fldenv
jg
das
in
insl
push
aad
cmp
addr16
stos
cli
or
xorb
push
push
ret
mov
sbb
test
mov
sub
sbb
stc
mov
inc
inc
inc
mov
imul
pop
outsl
ror
add
xchg
xchg
int3
and
hlt
xor
jge
insb
mov
movsl
sbb
mov
lods
insl
add
cmp
stos
mov
xchg
add
insl
or
test
ljmp
fnstsw
pop
das
lods
imull
jb
cmp
out
loopne
push
add
push
outsb
cmp
mov
sbbb
fs
popf
adc
xor
fisubrl
jo
flds
adc
lret
scas
test
aas
xlat
pop
lea
insl
jnp
loopne
mov
aad
popf
enter
or
lods
xchg
push
adc
iret
push
mov
fwait
inc
test
loop
fisubrl
pop
cmp
movb
add
aam
das
add
lods
cs
and
mov
sahf
push
and
and
je
out
call
mov
push
mov
pushf
cli
and
out
leave
mov
mov
mov
out
inc
mov
loop
pop
negl
fistpll
pop
push
ss
test
adc
test
inc
xchg
cmc
and
sbb
icebp
in
push
rol
mov
movsl
inc
xchg
in
and
mov
ret
icebp
int3
jge
and
pop
xchg
adc
adcb
loopne
cmp
cmp
ja
cmpsl
xchg
mov
sbb
notb
aam
insl
mov
cmp
in
jecxz
or
sbb
aas
sub
jo
mov
lods
inc
les
add
jb
push
addl
push
adc
mov
movsb
movsl
xor
insb
jns
scas
push
movsb
push
xor
stc
or
dec
test
not
mov
or
cs
cmp
clc
mov
shlb
push
aam
mov
fstps
popa
jle
jb
sbb
out
cwtl
mov
cmpsb
dec
pop
cs
inc
sub
fwait
sub
outsb
or
fsubr
rorb
insl
sub
add
sub
fisubs
inc
ljmp
fidivrs
inc
mov
test
mov
cmp
adc
jo
push
imul
push
aas
dec
inc
adc
and
push
mov
cmp
clc
sbb
mov
push
stos
push
rcrb
add
popf
ljmp
jb
ficoms
or
into
or
push
push
mov
mov
pop
into
incl
ja
mov
push
dec
push
in
sbbb
sbb
cmpsb
cmp
mov
mov
xchg
clc
fidivs
fsts
jg
imul
sarb
es
mov
pop
pusha
sbbl
xor
inc
mov
jnp
sarl
jp
or
cmp
pop
adc
sbb
fsubl
imul
in
sub
ret
leave
xor
xchg
adc
fs
push
mov
mov
mov
mov
xchg
pop
scas
ret
add
mov
dec
scas
stc
adc
sub
jo
or
and
adc
mov
ficomps
jb
aam
sub
scas
daa
push
cmp
int
addr16
inc
lret
push
out
sub
mov
imul
xor
lock
xor
or
add
and
lock
iret
cmp
dec
jo
jcxz
fs
jno
pop
movsb
cmpsl
pop
andb
shrl
js
lods
jno
aaa
dec
xor
mov
pop
sbb
aad
dec
mov
xor
dec
jmp
jns
mov
shll
and
cmpl
pop
sti
out
mov
daa
pop
insb
dec
stos
divb
or
mov
mov
pop
dec
and
xchg
mov
ret
mov
mov
lds
add
fdivr
cmp
mov
inc
hlt
or
int
xchg
cli
out
cmc
cmpsl
cmpsb
pop
xor
sti
sbb
and
int3
lret
imul
lret
fnstcw
cli
outsb
je
scas
ret
pop
pusha
adc
inc
es
or
enter
adc
xchg
jb
ss
lret
and
mov
add
and
fmul
clc
add
inc
call
adc
cmp
out
out
jmp
outsl
fwait
mov
push
and
push
mov
mov
dec
cli
ror
jno
ss
std
xor
xlat
fidivrl
in
xlat
jp
shlb
jmp
inc
mov
test
adc
incl
je
outsb
pop
push
lock
or
movsb
push
and
cmc
pop
jbe
push
or
jp
in
addr16
mov
test
andl
or
dec
pop
jmp
loope
jge
dec
test
pop
icebp
xchg
jmp
mov
fcmovbe
insl
mov
push
xchg
dec
mov
adc
fcoml
arpl
fs
cli
sub
loope
scas
adc
push
mov
xchg
push
cltd
int
test
lock
push
adc
sub
pop
movsl
lcall
xchg
mov
pop
andl
push
add
dec
imul
jle
mov
sub
mov
jns
stos
fxch
inc
sbb
into
sub
mov
sbb
jno
fnstcw
mov
add
add
mov
xchg
mov
xchg
or
or
xor
push
sub
dec
fstps
ja
push
xchg
ljmp
inc
pop
pop
fldenv
push
cmp
lds
fists
fdivs
fnstsw
and
bound
je
xor
push
mov
jl
cli
sub
mov
imul
je
in
nop
xor
xor
shll
pusha
pop
or
sub
insb
pop
jns
sbb
inc
mov
or
mov
repz
jns
inc
push
aas
aaa
push
adc
cli
adc
xchg
mov
cwtl
gs
mov
adc
pop
cld
push
jmp
shll
mov
add
or
in
sub
cli
fisubs
sbb
push
mov
and
xor
xor
xchg
cmc
xchg
xor
pushf
xchg
push
xchg
jno
cmp
xchg
adc
fldt
push
jecxz
and
mov
xchg
push
lods
add
or
sub
loope
xchg
aas
es
movsb
sub
repz
jg
movsl
mov
or
aad
pop
add
pop
arpl
jl
lds
clc
sub
mov
jge
inc
fistps
mov
dec
pop
pop
push
mov
add
test
outsl
dec
pop
push
fwait
sbb
mov
mov
mov
inc
scas
aas
pop
lock
lock
add
jge
push
sub
push
cmp
arpl
aas
cld
pop
xchg
mov
in
cmp
mov
outsb
mov
insl
jp
sahf
das
cltd
mov
dec
outsb
neg
shlw
arpl
cwtl
mov
inc
xor
scas
sbb
sub
sbb
out
hlt
pop
pop
jg
mov
out
in
mov
sbb
xchg
movsl
cmp
mov
dec
cwtl
inc
pop
test
rcl
add
gs
pop
addl
sub
or
pop
and
outsb
cmpsl
mov
rorl
inc
loope
js
xorb
jl
scas
inc
sub
lods
mov
sti
and
fadd
mov
mov
imul
pop
shrl
lock
mov
xchg
xor
xchg
shr
shlb
loopne
cld
dec
mov
daa
lds
nop
lods
push
int3
lock
cmp
cli
icebp
test
int
xchg
mov
mov
pop
mov
aad
lahf
mov
std
jg
mov
out
aas
in
push
loope
push
daa
clc
jge
imulb
fdivrs
adc
loopne
les
sbb
lahf
sti
je
mov
pop
pop
mov
push
pop
dec
dec
fs
in
scas
cmp
lcall
pop
mov
adc
jl
out
xchg
push
cmp
in
cmp
rcr
or
jp
out
jns
pop
std
lds
fnsave
inc
daa
pusha
roll
inc
jne
push
mov
int3
mov
mov
inc
int3
into
data16
sub
daa
sub
push
push
add
xchg
jmp
xchg
xchg
mov
into
nop
cmp
push
es
imul
cltd
mov
mov
mov
pop
clc
adc
pushf
add
inc
mov
les
fistpll
les
dec
stos
sahf
cld
out
add
clc
inc
pop
fnsave
into
inc
push
sbb
in
mov
xchg
out
xchg
aaa
dec
shrb
fs
cmp
shrl
out
lahf
stos
or
insl
mov
in
movsb
fs
adc
mov
sub
test
mov
out
sti
rcll
xchg
hlt
je
xor
lea
into
cmp
nop
mov
sahf
adc
inc
je
ljmp
psraw
gs
lret
xlat
insl
mov
pop
lds
das
enter
adc
mov
sbb
sar
cmp
mov
or
mov
pop
outsl
lcall
and
add
ret
jmp
outsl
pop
out
ret
adc
outsb
dec
cmp
cmp
mov
imul
or
out
xchg
xchg
pop
push
sbb
je
nop
mov
in
in
sub
add
jge
scas
pop
lods
jne
stc
xor
dec
in
sti
xchg
setb
inc
dec
imul
jno
faddl
xchg
push
jmp
rcrb
mov
adc
mov
inc
in
std
add
rcr
push
jb
das
sbb
mov
xchg
fistpll
sbb
xchg
out
xor
push
dec
mov
jno
nop
incb
pop
jp
popf
sbb
jmp
aam
mov
push
repz
lods
xchg
sahf
popa
filds
inc
jae
int
push
cmpsb
es
sub
push
push
lods
cmpsl
jno
adc
inc
adc
aaa
subb
dec
sub
dec
popf
pop
mov
rolw
xor
mov
xchg
pop
scas
call
xor
push
sub
sub
mov
mov
addr16
adc
rcl
mov
xchg
xor
fistpll
sbb
sub
ss
mov
aaa
sbb
xor
push
or
jns
iret
mov
pop
sti
mov
dec
out
add
xchg
mov
loop
sarl
inc
xchg
sti
test
inc
in
idiv
movsl
sti
jbe
mov
dec
addr16
mov
push
stos
fcmovu
sti
call
xlat
repnz
xchg
jecxz
dec
rol
cmp
aas
dec
loope
or
cmp
adc
add
loope
ret
or
popf
test
push
mov
mov
inc
xchg
mov
leave
movsb
jo
inc
inc
cmpsb
xchg
decb
inc
in
ja
shlb
jp
test
lcall
icebp
sub
lods
inc
test
jle
sar
mov
xor
iret
in
inc
faddl
lock
out
ss
push
cmpsb
leave
dec
mov
dec
jmp
sbb
fildl
mov
add
je
or
js
push
sbb
aas
rcrl
fisubs
sbbb
pushf
xor
and
daa
rclb
bnd
repnz
call
movsb
in
outsl
and
cmp
fiadds
sub
mov
sbb
cmp
mov
mov
pop
jbe
shr
sbb
mov
add
sbb
psrld
pop
sub
shr
jo
leave
dec
mov
into
xchg
daa
movsb
iret
dec
adc
mov
xchg
outsb
in
adc
sbb
insb
jae
jmp
popa
out
pop
xorl
sti
pop
jo
pop
and
mov
stos
sub
dec
jbe
inc
pusha
xchg
xchg
cmp
idivl
pop
mov
adc
xchg
dec
imul
js
inc
sbb
stos
in
in
mov
andl
dec
rcrl
les
ficomps
ss
push
and
cmp
add
jecxz
lretw
dec
push
mov
and
mov
xor
jne
lds
div
cmp
cmp
movsl
je
rcl
aaa
inc
adc
shll
xchg
je
push
mov
aad
out
adc
pop
pop
cmp
scas
sbb
jge
and
or
add
or
lcall
mov
inc
jp
or
xchg
jecxz
push
sbb
mov
inc
dec
pop
lret
push
or
mov
int
cmpsb
fucomip
insb
das
loopne
lcall
mov
in
into
sbb
cltd
push
pop
jge
and
out
shlb
cmp
cwtl
mov
xchg
movd
mov
add
jg
sbb
mov
cmp
add
push
inc
fstps
jnp
add
cwtl
hlt
leave
insb
sub
xchg
adc
fnstenv
ret
hlt
or
dec
pop
push
fdivl
mov
mov
pop
xorl
xchg
fdivrs
sarb
lcall
cmpsb
jecxz
and
imul
aaa
fcmove
ret
dec
int
dec
push
scas
outsl
pop
mov
fwait
dec
adc
dec
inc
dec
mov
int
arpl
sbb
movsl
mov
dec
out
or
pop
mov
inc
or
push
jecxz
orb
ret
leave
test
push
cmc
and
and
inc
mov
and
in
out
shl
call
adc
and
mov
mov
mov
xchg
xchg
xlat
addl
jecxz
psadbw
xchg
push
push
cmp
cli
xchg
fcompl
xchg
lods
mov
cmpsl
sub
ds
pop
in
js
arpl
bound
mov
or
push
lahf
dec
mov
stc
rorb
lods
or
daa
sub
aas
dec
negb
xor
lods
imul
pop
lret
xor
pop
inc
ds
jmp
mov
or
xor
cld
and
inc
js
add
sti
icebp
mov
add
dec
notl
sbbl
cmp
xchg
xor
loope
cs
ficomps
fcomip
push
mov
loop
cmp
fdiv
xor
mov
push
pop
pop
cmpsb
jecxz
push
out
jecxz
les
pop
cmp
es
sub
ljmp
clc
rcrb
sbbb
sarb
mov
add
rorb
jmp
pop
fsubp
mov
adc
adc
push
aam
fwait
push
fisubl
sub
divl
pop
mov
add
lahf
leave
mov
adcl
inc
int3
or
add
inc
xorl
jp
gs
out
jg
shll
dec
cli
push
std
sahf
adc
xchg
movsl
sub
pop
xchg
arpl
lock
mov
fmul
aam
add
jae
push
jmp
pop
test
sti
ss
xchg
xchg
test
mov
and
xchg
xor
loop
iret
mov
enter
in
mov
adc
leave
add
pusha
clc
daa
cmp
xor
mov
mov
shl
xor
cli
mov
aas
dec
inc
sbb
jmp
push
leave
out
mov
lret
std
add
push
call
inc
fwait
pop
jl
jne
xor
xchg
xchg
add
dec
cs
or
unpcklps
xchg
cmp
and
insb
pop
push
mov
fisttpll
cmpsb
xchg
sub
sbb
push
xor
push
mov
arpl
mov
stos
sbb
jnp
fldenv
ljmp
jl
popf
xchg
cltd
mov
dec
js
mov
sahf
cld
jns
stos
mov
pusha
sbb
dec
push
xor
cmp
add
xor
inc
pop
inc
dec
or
sbb
sbb
or
out
inc
sub
insb
mov
or
addl
jge
xadd
fildl
int3
cmp
jle
rorl
mov
hlt
pop
in
pusha
bnd
cmp
rorl
pop
push
ss
dec
pop
aas
mov
dec
pop
lahf
adcl
adc
roll
jle
push
push
sbb
scas
cld
roll
adc
xchg
repnz
xchg
sbb
std
jmp
pop
mov
xchg
ss
xor
xor
adc
arpl
adc
cmp
cmp
hlt
mov
loope
sbbl
mov
xchg
outsb
out
repnz
sbb
repz
jmp
dec
pop
fldt
cmpsb
fidivrs
push
add
in
stos
mov
addb
roll
or
rorb
sbb
push
pop
pop
test
mov
stos
es
adc
xor
push
jo
push
orb
int
add
push
sub
sub
gs
add
or
jge
add
push
and
icebp
loope
and
jecxz
sbb
dec
mov
clc
loopne
shll
ds
mov
nop
ret
or
push
lods
xchg
add
movsb
shrb
xchg
push
inc
out
sti
dec
loopne
cs
adc
mov
clc
cmc
popa
clc
iret
sub
cwtl
add
lock
jge
out
dec
jle
adc
bswap
sti
movsl
add
sbb
out
out
aas
push
sbb
js
xor
sbb
scas
out
cmp
push
lahf
xchg
sub
push
and
enter
push
inc
cmpsl
jno
push
xchg
test
xor
aaa
ret
popf
repnz
outsb
pop
std
aas
pushf
ret
shrl
loop
mov
test
cmpsl
push
out
xchg
mov
mov
sbbl
sahf
enter
daa
mov
aas
dec
fwait
out
add
iret
inc
cs
sti
mov
shll
sub
cmp
mov
push
pop
jle
xchg
mov
addr16
cmpsb
fidivrl
pop
in
sub
and
movsl
lds
pop
bound
and
adc
lea
sbb
inc
and
pop
rcrb
outsb
pop
popa
je
dec
sbb
insl
mov
das
hlt
sahf
imul
dec
dec
sar
inc
dec
jmp
xchg
mov
in
adc
xor
arpl
push
shr
test
adc
fs
xchg
xor
pop
inc
adc
xchg
and
cwtl
das
fildll
or
mov
in
or
mov
push
push
enterw
int
sub
filds
insl
rcrb
lcall
mov
cmp
mov
cmp
or
mov
std
cmp
dec
pop
lock
lods
insl
sbb
imul
cmpsl
push
int3
xor
insl
les
fildll
sahf
xchg
call
popa
sbb
aaa
imul
pop
iret
add
imul
aas
ljmp
adc
xor
cmp
sbb
fidivrl
inc
jg
in
rorl
data16
dec
cs
pop
aaa
je
push
fsubrl
pusha
rcrl
rcr
sahf
pop
sbb
xchg
iret
inc
fcmovnbe
and
sahf
sub
cmp
rcrl
int3
push
xchg
dec
pop
push
fsubrp
adc
jbe,pt
xchg
repz
out
jbe
cmp
and
sbb
call
inc
mov
stc
out
sub
jle
out
cld
int
popf
push
mov
and
cltd
xchg
mov
sub
lcall
push
pop
cmp
xchg
dec
aas
icebp
inc
fmuls
movl
and
lret
out
les
jnp
sub
out
ss
insb
xor
mov
and
jp
out
push
cltd
mov
enter
mov
xor
xor
lds
mov
clc
sarb
push
jp
mov
fidivrl
outsb
xchg
dec
add
repz
mov
shll
mov
sbb
cs
mov
aam
aam
mov
mov
out
mov
cmp
or
add
inc
and
test
aad
mov
shll
dec
divl
out
cmpsl
je
scas
and
and
pop
xor
ljmp
repnz
test
mov
mov
addb
and
push
ret
xchg
sbb
popf
mov
mov
aaa
push
xchg
pop
sbb
lret
mov
loop
adc
lock
ror
aaa
push
cmp
ret
popf
aas
jae
and
cli
lret
cmp
adc
shlb
adc
cmp
popa
add
inc
das
int
in
je
mov
add
pop
movsl
cmp
lcall
loope
xchg
xor
ja
movsl
fistpl
es
and
mov
cmovae
adc
mov
inc
adc
sub
jo
push
push
rorl
insl
adc
mov
push
aad
leave
mov
lret
das
pop
or
dec
lds
in
ds
jns
xchg
cmp
shll
inc
cmpsb
add
cmpsb
and
dec
or
sahf
pop
clc
xchg
xchg
cmp
call
or
les
fidivrs
push
pop
and
jmp
push
mov
push
inc
adc
clc
pushf
add
xchg
dec
gs
cmpsb
jno
xor
cmp
jae
sbb
pop
or
mov
sbb
jge
mulb
jecxz
ret
aaa
popf
lods
mov
cmpsb
xchg
push
out
imul
ret
xor
jecxz
xor
ja
dec
cs
in
adcl
out
andl
fwait
stc
das
dec
cmpl
mov
jl
adc
rcrb
add
pusha
mov
mov
xorb
fmull
vpshufhw
mov
xor
fwait
stos
inc
lock
jmp
sub
call
push
addr16
push
xchg
jne
push
pop
jg
adc
pusha
add
mov
pop
xchg
fwait
xchg
hlt
push
cs
aas
sbb
adc
jo
jl
sti
jnp
and
lea
dec
or
mov
mov
ds
xor
es
push
jo
and
fildl
pop
ljmp
in
shlb
pop
add
shrl
addr16
sub
imull
stos
lds
aam
jge
loope
stos
sub
and
push
shll
ficoms
aas
push
sbb
dec
outsb
dec
lea
scas
fwait
adc
cld
test
lea
imul
mov
sbb
out
sub
add
add
popl
push
lods
rolb
mov
jb
imul
mov
loop
and
stos
inc
push
pop
bound
xor
push
push
mov
xor
loopne
aam
mov
popa
sub
scas
pusha
dec
loope
push
push
jno
pop
bound
inc
out
insl
sbb
dec
sti
xor
outsl
sub
outsl
cmp
xchg
add
inc
jae
sub
lods
mov
enter
pop
cmp
sbb
jg
gs
xor
inc
xor
sub
pop
jge
call
mov
out
and
jl
or
lret
sub
add
dec
lret
push
mov
mov
in
jne
add
mov
adc
nop
icebp
mov
xchg
and
cld
out
int
ret
ss
sub
push
mov
sti
bound
pop
dec
xchg
mov
mov
sbb
jnp
daa
mov
pop
sbb
mov
mov
daa
mov
jno
mov
mov
pop
call
fsubp
jae
and
hlt
ret
lcall
int
or
sub
cld
aad
addr16
push
cmp
pusha
push
cmp
leave
cwtl
pop
xchg
fdivl
je
ret
psrld
enter
cltd
stos
lea
add
sbb
push
lahf
in
js
je
push
adc
fnstsw
aaa
push
pop
xchg
pop
ja,pt
push
cmp
dec
popa
ja
sbb
divb
cmp
mov
or
and
sub
or
push
cs
js
jmp
les
rclb
test
push
xchg
ret
stc
push
call
or
mov
aas
mov
ficoms
mov
movsl
and
xchg
xchg
je
lock
faddl
jne
add
adc
xor
mov
mov
xchg
dec
jg
prefetchnta
push
mov
arpl
mov
and
loop
sahf
or
cmp
xchg
sub
push
test
cmp
push
popf
repnz
xor
xchg
or
out
orl
fidivrs
dec
ja
cld
rclb
mov
or
gs
cmpsl
test
pop
mov
lahf
push
adc
jge
jbe
adc
cmp
inc
mov
scas
lahf
mov
push
std
shll
lcall
dec
sub
jp
and
mov
cmp
cmpsb
push
out
cld
roll
mov
outsl
or
mov
fnsave
cmp
sbbl
mov
add
test
ret
mov
cmpsb
inc
jnp
lods
fwait
inc
xchg
sbb
lahf
pop
or
sbb
push
scas
sbb
sub
inc
andb
clc
insl
or
xchg
addb
jae
or
pmullw
lds
shlb
cwtl
cmp
and
push
mov
xchg
outsl
fs
cld
sub
sti
jp
push
mov
jnp
repz
aad
or
push
pop
xchg
and
jp
or
imul
mov
orb
cs
xchg
lret
test
aad
jns
js
adc
subb
mov
fimuls
cmp
dec
cmpsl
stos
dec
sbb
mov
xor
fdivrl
xor
push
or
xchg
adc
adc
jo
ljmp
xlat
dec
and
cmp
jmp
push
push
ljmp
leave
xchg
mov
scas
pop
xor
rclb
jmp
push
ds
pop
pop
lds
scas
jb
leave
leave
jne
mov
dec
fwait
adc
mov
push
in
in
sahf
aad
lcall
jmp
dec
push
and
mov
ficoms
and
push
ds
jnp
das
aas
cmpsl
dec
mov
movsb
jmp
arpl
jl
sarb
fsubrs
jae
test
jp
scas
sub
out
test
mov
mov
sbb
arpl
mov
pop
das
insl
mov
add
fcmovnb
mov
int3
out
imull
add
rorl
push
js
or
shll
xchg
inc
imul
dec
sbb
test
and
in
and
imul
fbstp
xor
insl
mov
cmp
addb
out
dec
or
movsb
xchg
in
stos
int3
push
inc
push
sti
lcall
push
or
mov
mov
das
ja
lret
popf
cmp
in
notl
jb
push
in
push
dec
imul
inc
add
pop
inc
push
push
mov
iret
cs
idivl
sbb
cmp
push
das
dec
inc
fsubrp
sub
es
insl
xor
jae
mov
mov
sub
cld
in
or
sub
sub
cs
cmp
pop
push
and
pop
mov
mov
pop
mov
sbb
inc
sbb
jbe
jge
dec
push
adc
add
dec
mov
mov
ljmp
xchg
pop
or
cmp
dec
or
call
adc
lods
sbb
imul
cli
pop
inc
adc
jne
ljmp
push
xchg
and
pop
idivl
bound
or
add
test
xor
inc
add
mov
mov
xchg
fldl2e
mov
test
mov
inc
sbb
jae
dec
push
or
jmp
mov
jns
fs
push
jne
mov
loop
or
loopne
xorl
inc
jge
xor
dec
mov
pop
test
fs
cs
jns
sub
pop
xor
stc
jge
mov
add
sarl
push
mov
cmp
inc
call
add
cmpsl
out
add
popl
sar
inc
jo
xor
mov
jp
scas
fdiv
jg
pop
lods
pop
jmp
push
pop
stos
mov
pop
ja
xchg
inc
dec
add
sub
scas
xchg
sub
roll
xor
rcr
stos
pop
pop
int
out
xchg
cmp
mov
push
int
xor
or
stos
shrb
and
cltd
mov
adc
andl
ret
cmp
not
jb
or
cli
push
add
push
mov
jnp
filds
pusha
les
jbe
mov
pop
pop
das
sbbb
add
pop
cmp
in
dec
pop
test
rcll
imul
flds
xchg
mov
mov
mov
push
cmp
jg
int3
repz
push
cmp
pusha
fsubrs
cmpsb
das
inc
pop
and
xorl
dec
data16
adc
nop
ret
jnp
inc
fdivp
ljmp
sub
cmp
pop
sub
lock
lcall
or
lcall
lahf
inc
in
dec
fnstsw
mov
dec
sub
cmp
int
pop
xor
std
js
aad
roll
push
and
push
pop
adc
mov
xlat
push
push
lods
cltd
ja
push
push
sub
roll
cltd
insb
jns
lahf
hlt
in
scas
pop
inc
sub
lahf
mov
cmp
push
push
xor
test
cmpsb
mov
stos
dec
sbb
les
and
out
gs
push
cs
add
in
pusha
xorl
enter
lret
mov
lea
mov
sahf
sub
ljmp
sub
push
cwtl
movsb
out
xchg
sbb
popf
mov
mov
mov
jnp
test
mov
and
mov
adc
jmp
adc
mov
mov
sub
lods
mov
jb
movsb
push
stc
and
lahf
and
pop
cwtl
sbb
scas
iret
mov
jg
jp
or
fimuls
xchg
test
rcll
xchg
dec
mov
jmp
sahf
add
add
enter
call
inc
dec
cltd
add
add
cli
cmp
ljmp
imul
or
sahf
xor
je
and
push
nop
push
jl
add
cli
mov
mov
jl
dec
push
ret
icebp
insb
scas
mov
test
popf
lock
ljmp
arpl
cli
rol
lahf
jb
ja
mov
lock
sbb
rcll
xchg
stc
or
mov
add
pop
mov
pop
push
push
or
inc
daa
xlat
push
cmpsb
adc
inc
ljmp
mov
fldcw
out
gs
lret
es
xchg
dec
js
ds
cmpsb
pusha
dec
loope
mov
xor
in
mov
jae
out
arpl
add
out
test
xchg
aad
xor
hlt
scas
movb
test
pop
sahf
ljmp
cld
movsb
pop
into
jecxz
mov
int3
rcrl
push
stos
sbb
addr16
out
adc
iret
xchg
fwait
jb
xchg
rcr
adc
push
fdivr
add
add
or
pop
jp
jnp
cs
adc
xabort
mov
mov
sbb
je
sub
jp
xor
fiadds
inc
sbb
push
xchg
daa
cmpsl
pop
lods
adc
icebp
js
sahf
and
cmp
dec
sbb
andl
push
sahf
mov
jecxz
les
das
adc
ret
cmp
lods
and
nop
lock
repz
pop
push
fincstp
fidivrl
jecxz
lret
push
push
fld
inc
aam
lcall
mov
dec
mov
das
jge
dec
xchg
or
and
int3
inc
mov
inc
ss
cmp
mov
arpl
mov
adc
dec
cmpsb
dec
push
jmp
sbb
dec
pop
cmc
add
xor
leave
into
cmp
dec
cltd
cmc
das
pop
jecxz
mov
imul
adc
loop
hlt
lret
mov
jmp
test
cmpsl
and
outsb
add
lods
push
mov
push
nop
pop
stc
sbb
ds
outsb
mov
mov
mov
pop
cmp
inc
xor
push
and
lods
adc
xchg
in
push
pop
fidivrs
or
jo
push
ret
pop
pop
decl
les
sub
push
test
jle
out
push
outsb
imul
jne
lret
and
and
ret
push
dec
xchg
pop
aad
xchg
icebp
icebp
xlat
add
sbb
aad
shl
xchg
push
mov
popa
loope
popf
insb
sbb
ss
mov
andb
mov
test
cmp
iret
push
cmpsb
sub
or
inc
out
negl
fiaddl
pop
sarb
push
lcall
dec
mov
std
lahf
push
je
jecxz
rorl
in
mov
rclb
push
xor
jbe
cmp
fldl2t
add
sbb
ss
nop
in
test
xor
rorl
aad
enter
outsb
inc
mov
sub
pop
jmp
test
inc
jns
cwtl
inc
mov
jg
sarb
ds
pushf
xchg
je
fs
pop
imul
js
insl
xor
mov
stos
mov
sub
sbb
les
sub
or
dec
movsb
int
scas
sarl
dec
xor
fcompl
popa
jecxz
mov
enter
sbb
xor
cs
push
mov
lock
mov
sub
mov
xor
aad
lret
sbb
cmc
jge
jl
addr16
ss
sti
jp
in
dec
mov
idivb
aad
inc
lods
jg
aaa
push
lcall
stc
sub
aas
clc
add
addb
iret
sub
fadds
stos
decl
lock
lret
inc
movsl
fimuls
push
cli
sbb
mov
push
adc
fdivs
push
cltd
mov
lods
push
add
lret
aad
push
cmp
addr16
mov
mov
or
lret
fldt
lcall
mov
dec
inc
lock
cwtl
inc
cmp
add
outsb
jne
and
shlb
pcmpgtw
add
pop
and
mov
mov
lea
pop
or
pop
repz
imul
push
sub
pop
lahf
jb
out
shl
ljmp
shlb
test
js
pop
jecxz
push
mov
cld
jb
push
dec
out
xor
lea
inc
lods
ja
lods
xor
cmp
add
call
scas
mov
scas
test
xchg
stos
sbb
inc
inc
lods
vpsllw
pop
xor
mov
adc
jnp
cmp
mov
push
outsb
jl
movsl
mov
test
out
je
bound
pop
mov
pop
push
xor
test
cwtl
sub
add
push
pop
xor
cltd
lds
pop
push
pop
mov
xchg
or
sub
inc
push
aad
je
test
jno
bswap
cmp
xchg
stc
or
jl
dec
adc
dec
call
loopne
dec
bound
stos
arpl
inc
add
lea
and
mov
pop
jae
push
imul
lahf
addr16
xchg
xorl
lahf
fnstcw
outsl
imul
fidivl
lret
je
call
cmp
fbstp
xor
dec
inc
pop
inc
pop
mov
or
dec
imul
mov
fcom
lods
shrl
push
jmp
je
lret
andb
mov
test
xor
arpl
dec
sbb
or
sti
divl
xor
stos
sub
ret
push
mov
lahf
cmpsb
int
jnp
imulb
mov
dec
fisubrl
adc
mov
xor
adc
xchg
mov
mov
ljmp
or
mov
outsb
push
mov
jp
sub
lcall
ds
jg
int
int
out
xchg
out
test
pop
push
lahf
and
mov
lds
mov
je
adc
out
nop
idivl
jne
std
xor
daa
add
loop
xor
mov
in
repnz
mov
out
ds
lea
pop
ret
fwait
sbbl
fcmovb
and
dec
add
add
mov
lahf
xor
popa
lock
out
xchg
fs
sti
dec
shrl
jg
pop
popa
and
jae
insb
mov
jo
outsl
outsl
fdivrp
inc
imul
xchg
jns
push
xchg
arpl
loopne
icebp
push
and
in
faddl
icebp
dec
sub
shrb
jns
rol
and
sub
add
jo
xchg
inc
mov
rcll
popl
bound
das
daa
out
cld
test
icebp
inc
jbe
popf
mov
mov
mov
xchg
pushf
mov
push
in
scas
mulb
push
or
sbb
out
or
cmp
sahf
clc
sbb
mov
out
jmp
lret
sbb
mov
cmp
sub
dec
jne
aam
and
inc
dec
xor
std
xchg
dec
sbb
fstps
and
mov
cmp
js
fwait
mov
hlt
add
push
cmp
add
inc
fdivl
insl
xchg
hlt
fcmovnu
add
pop
xor
ljmp
sarl
jl,pn
ficoms
movsl
dec
adc
aad
test
jno
jg,pn
push
stc
mov
add
lds
push
mov
add
int
scas
popf
cwtl
dec
push
into
xor
dec
or
pop
mov
shll
lods
mov
stos
dec
xor
mov
mov
dec
sbb
xor
cwtl
push
int
xchg
sbb
addr16
adc
and
sbb
and
bound
movsb
and
imul
xor
add
mov
sbb
lahf
adc
cmp
test
aas
sub
mov
rcl
adc
mov
mov
adc
fisttps
mov
in
jle
rcrl
jl
ss
sbbb
stos
jp
pop
ret
sub
cmpsb
clc
sbb
dec
add
mov
insl
jmp
out
cli
int
sbb
dec
sbb
imul
pop
jp
je
lea
cmc
pop
test
cltd
fnstenv
sub
adc
mov
das
adc
mov
sub
stc
fstp
out
test
in
cmp
pop
xchg
xchg
insb
lcall
out
mov
hlt
xchg
push
outsb
cltd
jb
inc
aaa
into
aas
sar
pop
fisubl
xchg
repz
sbb
fisubl
mov
jp
mov
andl
sahf
in
arpl
and
mov
mov
insb
aas
xor
inc
rcll
mov
inc
or
lods
sub
push
repnz
jno
pop
fisttpl
or
je
xchg
push
aas
outsb
rcrl
scas
cmp
fnstcw
inc
call
jb
sub
lds
sbb
mov
or
addb
dec
into
inc
inc
in
into
aad
sbb
jae
shll
jne
ret
out
cmpl
test
mov
pop
sbb
test
push
inc
jge
rclb
and
cmp
mov
mov
hlt
iret
ss
hlt
setns
rol
pop
pop
ljmp
mov
add
adc
mov
mov
fs
je
sub
pusha
add
cmp
cwtl
xchg
or
sbbb
jge
movsb
cltd
inc
push
pop
pop
je
jp
pop
inc
faddl
sbb
test
dec
jg
add
mov
or
data16
xor
sub
dec
mov
mov
sub
sti
adc
mov
jge
sbb
pop
jecxz
mov
in
jl
lahf
dec
test
leave
int
imul
in
jmp
fdivrl
jns
sub
in
fisubrl
pop
xor
out
xchg
or
push
test
test
lock
xor
je
movsb
movsb
jns
test
fmuls
rcrb
mov
loop
sbb
jo
pop
dec
pushf
push
push
mov
jnp
add
dec
jne
popa
mov
mov
sub
cli
push
or
xchg
int3
loopne
jbe
popf
ljmp
in
mov
mov
pop
sahf
into
pop
cld
jo
sahf
ficompl
sub
jecxz
data16
xchg
nop
rcll
rcl
push
sbb
cwtl
mov
ja
aad
repnz
mov
rol
cwtl
mov
dec
aaa
fistpl
jmp
pop
stc
sub
or
repnz
cltd
mov
xchg
xorl
mov
fstps
mov
lcall
cmp
push
pop
mov
jge
push
adcb
mov
or
jb
push
shl
movl
xchg
adc
mov
popl
mov
jg
jle
aas
jae
lcall
fcompl
push
scas
jl
lods
push
and
sahf
sub
mov
je
cltd
jo
int3
xchg
into
data16
or
fbstp
push
xor
fnsave
iret
cmp
das
movsl
xor
mov
iret
lret
cmp
xorb
mulb
sar
dec
add
dec
movsl
jmp
jle
in
sbb
jnp
ret
js
pop
sbb
popf
mov
push
mov
cmp
pop
test
rolb
out
fmull
sub
in
std
jmp
jno
mov
cli
loop
outsl
dec
testb
repnz
xor
popf
les
out
dec
pop
jb
mov
add
jae
movsb
gs
fst
out
loope
cmc
mov
stc
inc
xchg
mov
push
in
xchg
jle
and
inc
and
stc
cmp
scas
push
js
aam
inc
aad
inc
aaa
rcr
pop
lods
pop
cs
sbb
cs
out
sub
or
push
stos
sub
xchg
std
arpl
mov
xlat
int3
pop
popf
mov
jae
or
sub
ljmp
cld
pop
add
xorb
jbe
inc
xchg
les
fsubp
lahf
xor
les
dec
ret
in
stos
xor
pop
push
sbb
push
mov
scas
push
in
mov
fdivp
push
sbb
push
push
jg
das
scas
inc
or
ret
jg
aas
test
fs
aaa
ds
xor
shlb
in
arpl
lret
pop
xchg
or
fimuls
adc
fimull
inc
lcall
test
sub
sbb
mov
scas
sti
cld
loopne
fsubrl
xor
fsubs
cmpb
mov
mov
pop
shrb
jmp
in
pop
mov
scas
arpl
add
mov
out
inc
shr
imul
xor
push
mov
das
mov
nop
dec
xchg
adc
rcl
sbb
or
call
pushf
dec
xlat
insb
push
addr16
stc
arpl
mov
out
add
dec
test
rorb
mov
fwait
adc
jne
lret
xor
hlt
pop
scas
mov
sub
fdiv
push
sub
in
out
lea
insl
pop
pop
sti
xchg
jmp
mov
mov
loopne
xor
repnz
sbb
lahf
mov
int
mov
iret
in
sbb
pop
loop
enter
pop
call
pop
inc
popf
and
xchg
mov
sub
push
jno
sub
inc
jbe
pop
xchg
adc
and
jbe
mov
push
sbb
in
mov
repz
aad
push
frstor
test
push
out
cmpsl
mov
mov
in
jns
aas
andl
mov
push
test
mov
jecxz
mov
or
ret
arpl
dec
insl
push
out
ficoml
jl
add
fs
mov
mov
xor
push
insb
jg
sahf
add
cli
pop
and
mov
xor
and
test
mov
imul
mov
movsb
cmp
dec
cmp
cmpl
xchg
sbb
ss
sbb
icebp
in
aam
pop
cli
loop
gs
and
iret
adc
add
loop
xlat
pop
gs
addr16
out
out
sub
pusha
push
sbb
rorl
add
enter
and
adc
pop
push
movsl
xchg
or
pop
sub
push
jmp
fimull
insb
sub
mov
out
mov
inc
add
test
jno
jp
gs
aad
outsb
rcrl
sub
sbb
nopl
jae
mov
outsb
mov
lcall
roll
xor
and
call
xchg
addl
push
loope
xlat
mov
adc
jne
cmp
pop
mov
popa
call
mov
rcrl
lds
subl
jmp
sbb
jne
iret
lods
adc
push
daa
inc
mov
pop
ja
rcrl
xor
dec
movsl
add
fcmovb
in
adc
lea
jnp
inc
inc
shr
cmp
lds
sbb
loope
push
sbb
in
and
in
inc
mov
push
push
or
xor
mov
popf
and
loop
ss
lahf
lret
dec
mov
fwait
xchg
pusha
jmp
out
loopne
fdivl
or
sti
in
and
aas
jmp
cmp
aas
js
mov
push
mov
pop
nop
aas
mov
push
fmuls
in
xchg
loopne
arpl
repz
push
pop
mov
pop
iret
mov
pop
std
push
xchg
and
xchg
cmp
fdivrl
icebp
out
pusha
clc
mov
jmp
mov
add
sbb
popf
pop
mov
xor
incl
sbb
jne
fs
lods
test
aam
pop
leave
bndstx
loope
pop
inc
mov
mov
push
sbb
ret
movsl
xor
and
sbb
call
xchg
mov
std
pushf
cs
fs
pop
fnstenv
arpl
adc
mov
push
outsl
mov
pop
mov
lods
dec
adc
imul
xor
ss
sbb
push
dec
insb
xchg
in
int3
pop
test
inc
rcrb
lcall
ret
mov
pop
inc
adc
inc
push
and
icebp
xchg
mov
ret
fs
xor
adcb
int
add
inc
cmc
dec
inc
stos
pop
mov
mov
leave
jle
jecxz
fisubrs
xorl
cmc
in
sti
out
mov
inc
loope
inc
js
add
test
divb
and
aas
imul
test
bound
out
out
lahf
popa
xor
mov
adc
lret
mov
lods
xor
mov
icebp
jae
sub
je
inc
xchg
rcr
lcall
jo
xchg
imulb
test
arpl
adc
push
cmp
push
xchg
adc
stc
in
test
push
hlt
adc
push
test
pop
rcrl
in
out
fs
iret
jo
mov
xor
xchg
dec
imul
pop
movsb
pop
insb
dec
fcomp
cmpsl
mov
pop
repz
cmc
push
imul
xor
popa
xchg
dec
xor
enter
std
lahf
and
ss
sbb
stos
sub
movsb
out
cmp
out
mov
enter
cmp
in
xor
add
xor
scas
dec
adc
bsf
movsb
pushf
aas
cmpb
sub
xchg
mov
cmp
inc
sub
pop
adc
outsl
or
inc
dec
jle
fdivrl
inc
sub
fwait
lds
fildl
pop
and
mov
sbb
or
push
mov
mov
pop
outsl
jge
cmpsl
and
test
mov
jne
hlt
cmp
mov
or
mov
pop
aaa
sar
push
cld
mov
mov
cmpsb
pusha
xchg
insb
pop
xchg
xor
shll
push
xor
mov
sbb
arpl
sbb
and
lea
test
imul
loop
jno
lods
or
mov
ja
jg
movl
mov
cwtl
sbb
fiadds
dec
into
xchg
sbb
push
xchg
mov
add
shrl
int3
rorb
call
cmp
lret
inc
lods
jp
in
cmp
lahf
les
jo
adc
jp
pop
les
sahf
and
push
pop
sahf
push
das
testb
fcomp
xchg
and
fmuls
lock
int3
sahf
xchg
adc
xchg
call
leave
xchg
test
shrb
imul
xchg
inc
sub
movsb
cmp
jmp
fisttpll
shlb
sbb
pop
cmpsb
xchg
loope
orb
jbe
mov
fsubp
cwtl
dec
mov
adc
inc
sbb
aas
mov
xchg
jmp
adc
movsl
roll
push
aas
imul
aaa
pop
xchg
aad
mov
std
mov
sarb
xchg
xchg
scas
fsubs
fstpl
out
lret
repnz
xchg
scas
xchg
adc
xor
outsl
fs
mov
ja
mov
bound
or
xor
cmp
lea
xchg
inc
mov
movsl
aad
push
nop
bnd
or
dec
add
mov
adc
movsl
inc
cmp
repz
sbb
lea
lea
pop
cltd
fs
pop
push
flds
mov
mov
cmc
bound
lock
adc
rorl
cmp
push
mov
data16
and
loope
je
jbe
xor
push
jbe
psrad
inc
xlat
sbb
ror
dec
jecxz
inc
enter
lea
test
jge
cmp
enter
dec
inc
mov
xchg
rcr
das
ret
xchg
mov
cmp
cwtl
or
test
aam
cmpl
or
loop
es
or
aam
push
mov
dec
out
ret
fldt
dec
dec
js
in
in
sbb
xlat
clc
dec
sub
push
in
aad
pop
ficomps
je
push
cmp
out
fildll
stc
adc
mov
mov
push
iret
xchg
scas
data16
pinsrw
push
add
ror
clc
and
xor
mov
lods
and
cmp
jno
inc
mov
enter
and
add
inc
lock
mov
sti
adc
test
faddl
mov
cld
xor
stc
mov
test
mov
push
arpl
jnp
mov
xor
mov
inc
sub
add
leave
nop
adc
repz
mov
dec
std
and
mov
addl
pop
mov
fisubs
dec
jnp
push
jb
cmp
add
or
test
add
inc
std
push
cmp
sbb
insb
lret
inc
scas
push
xor
inc
or
lea
popf
stos
adc
into
jl
out
jne
idivl
fdivrs
orl
lods
push
out
ror
insl
cli
cltd
add
xlat
in
stc
or
lret
loope
mov
leave
push
lret
adc
popa
movsl
fwait
pop
push
es
cwtl
fs
push
scas
xor
mov
mov
pop
and
jbe
or
add
test
mov
shr
ja
lahf
push
insb
cmpsb
les
scas
ret
jecxz
in
pusha
xchg
mov
cli
les
jmp
clc
insl
cmpsb
push
in
flds
jmp
xchg
cs
mov
jmp
adc
cmp
xchg
repnz
outsl
cmpsl
daa
stos
mov
bound
sbb
dec
xor
sti
adc
cmc
and
dec
ljmp
mov
int
cltd
push
mov
fimuls
rorb
inc
jg
repnz
inc
mov
xor
pusha
imul
sbb
fstps
sub
in
xchg
mov
mov
xor
test
pop
test
xchg
icebp
mov
pop
sbb
push
push
cmp
loopne
inc
mov
leave
mov
sub
adc
rcrl
inc
add
push
clc
addr16
ds
inc
hlt
out
jnp
inc
dec
dec
sub
push
jecxz
mov
fldt
fimull
pop
mov
sti
lahf
negb
incb
lcall
pop
adc
insl
xlat
or
cmp
je
imul
addb
stc
pop
adc
xor
sar
adc
lock
push
adc
or
jno
cmp
into
push
test
in
xor
fs
cwtl
pop
inc
xchg
dec
jns
cmc
clc
sub
adc
cwtl
enter
mov
sbb
sbb
decl
and
inc
mov
mov
xor
les
add
push
cmc
cmpsl
sar
daa
pusha
cmp
dec
inc
int3
repz
cmp
loopne
mov
in
or
adc
je
std
insb
xor
push
fbstp
cwtl
mul
in
nop
hlt
or
insb
addr16
aad
out
subb
orb
popf
lds
dec
sub
mov
xlat
adc
lods
xchg
ds
ret
or
jns
dec
xchg
daa
scas
jl
cld
cwtl
lock
les
fimull
xor
cli
pop
out
hlt
lds
xor
popa
mov
pop
pop
xchg
sbb
nop
aam
sub
push
arpl
iret
ss
sub
mov
ficoms
cmp
enter
ja
imul
jecxz
cmp
outsb
mov
subb
loopnew
jne
and
or
out
xor
ret
fisubs
xor
arpl
xor
mov
or
sub
adc
insl
mov
lcall
mov
mov
leave
ss
insw
cmp
movsb
imul
in
aad
std
adc
adc
dec
hlt
jnp
movsl
or
and
mov
xor
int3
cmp
jnp
mov
mov
decb
sbb
iret
push
test
rclb
repnz
xchg
pop
sbb
push
mov
mov
xchg
and
xchg
ljmp
int
cmp
loop
repz
xchg
mov
push
dec
push
loope
popa
or
fidivl
push
sub
fdivl
enter
mov
mov
add
jns
xor
mov
and
mov
or
sbb
pushf
jbe
pop
push
jb
and
daa
popf
jle
cwtl
test
sahf
mov
mov
in
test
movsb
jge
into
movsl
lret
or
inc
ffreep
jnp
mov
mov
ret
cmc
incl
sub
testl
sbb
push
lcall
pop
adc
mov
in
frstor
test
add
and
xchg
pusha
add
mov
sti
inc
clc
cmc
jg
fbld
inc
ret
xchg
in
mov
ret
push
sbb
hlt
adcl
add
js
xchg
cmp
mov
add
inc
dec
mov
push
dec
imul
add
sub
xchg
loopne
mov
movsl
daa
pop
jmp
enter
push
push
add
aas
inc
jle
shll
xchg
fptan
ret
xor
and
push
fsubrp
cltd
fmull
dec
xor
jbe
push
inc
lret
out
dec
lahf
sti
ss
inc
aaa
sbb
adc
gs
ss
clc
les
fmull
add
je
xor
leave
ret
or
push
inc
fwait
jbe
inc
and
xor
test
pop
inc
jecxz
mov
mov
or
test
inc
xor
in
xchg
fs
push
imul
xor
test
imul
loopne
jmp
jle
add
and
push
inc
inc
iret
das
loopne
xlat
out
pop
or
fs
jmp
sbb
shrl
mov
in
idivb
adc
imul
in
scas
xchg
cmp
cmp
in
fidivrl
pop
adc
fstpt
mov
test
push
push
loop
rcrb
imul
fiadds
cld
or
add
cmp
fldl
pop
adc
pop
jae
das
out
ss
xchg
cld
pop
outsl
insb
sbb
test
movsb
addr16
jno
inc
xchg
in
adc
mov
vmovd
sub
jp
add
mov
out
ds
xchg
adc
mov
jbe
pop
movsb
adcb
inc
hlt
adc
pop
mov
les
pop
lret
fldt
xor
pop
cmp
leave
adc
rorl
inc
pushf
sti
cltd
testl
fs
mov
cmpsb
lods
lea
scas
add
and
push
ret
sbb
inc
xchg
cs
cmp
insl
dec
sahf
xchg
push
mov
pop
jns
push
pop
sub
gs
into
push
test
push
inc
add
enter
in
incb
add
mov
testl
scas
je
cmp
cmp
in
pop
lock
je
addl
bound
fadd
inc
jne
dec
stos
push
pop
rcr
das
scas
daa
sub
inc
stos
push
inc
xchg
sub
aad
and
ja
iret
xchg
sbb
push
jmp
mull
cmp
dec
adc
or
stos
push
push
jg
je
mov
or
mov
mov
sarb
mov
add
inc
inc
aam
mov
fwait
sub
sbb
push
rorl
push
push
icebp
pop
xchg
daa
jae
sub
push
pop
xchg
mov
out
jecxz
fiadds
hlt
pushf
push
arpl
bswap
or
lds
pop
and
sub
jg
adc
cmc
cmp
adc
aaa
cld
dec
xchg
fwait
in
dec
fcomi
stos
or
or
jle
mov
aam
insb
leave
cmp
pop
add
inc
lcall
bound
rcrb
and
pop
loopne
lahf
fsubl
je
call
cmp
imul
push
idivl
scas
cltd
or
jge
sub
fsubrs
dec
nop
xchg
ljmp
out
into
dec
pop
pop
xchg
inc
cmp
lahf
pop
mov
push
push
mov
mov
adc
shl
shrb
xchg
insb
sbb
push
pop
cmp
aam
sti
add
sub
shrb
movsl
push
pop
rcl
sti
mov
fistpl
mov
cltd
iret
sub
push
test
outsl
and
inc
sbb
shll
loopne
stos
nop
lds
pop
in
imul
push
xchg
stos
hlt
sub
lret
insb
cs
cwtl
sub
insl
xor
or
xchg
pop
stos
inc
cs
inc
cltd
stc
dec
gs
inc
mov
mov
popa
dec
jb
jbe
cmp
in
mov
in
mov
idivl
fcom
dec
mov
enter
sub
sub
out
cld
mov
cmp
popf
or
pushf
jb
in
loopne
sub
movsl
in
xchg
inc
mov
addr16
push
pop
shrb
clc
xchg
pop
cmc
lea
icebp
cmp
stc
sarl
orl
pop
inc
pop
loop
cmpsb
lcall
mov
push
lret
aad
xor
sti
dec
inc
movsl
movsb
ljmp
mov
sub
out
pop
loopne
daa
fadds
or
adc
cmp
mov
andl
nop
and
and
shll
xor
pop
xor
fisttpll
in
add
adc
xor
and
out
repnz
enter
shlb
inc
add
add
add
mov
aas
lahf
xchg
xchg
mov
xlat
arpl
adc
out
fs
imul
or
xchg
xor
fcoms
fldt
into
pop
xlat
dec
or
test
leave
mov
negl
aad
cmpb
loopne
movsb
movsl
mov
js
jae
jmp
jns
movsl
cmp
or
or
inc
push
mov
mov
leave
push
test
or
adc
jno
hlt
pop
or
repz
fiadds
adc
cmpb
testb
push
in
popa
dec
iret
movl
mov
pop
bound
mov
push
stos
and
xchg
cmp
scas
hlt
pushaw
mov
jne
push
pop
pop
lods
inc
cmp
lds
sbb
loopne
xchg
pop
stc
mov
mov
ret
xchg
arpl
xchg
add
sub
fldcw
push
sub
insl
xchg
mov
incb
andb
jge
mov
inc
pop
addl
add
mov
mov
aad
mov
dec
mov
test
lods
pop
pop
xchg
int3
inc
pusha
jl
or
aas
mov
or
adc
stc
jge
push
pop
jge
fisubrl
inc
sar
cmp
lods
dec
fwait
adc
mov
inc
add
mov
push
mov
lret
fisttpl
mov
lea
push
repz
int
xor
cmp
movsb
push
in
jno
or
gs
add
stc
xchg
add
xor
dec
mov
les
mov
enter
dec
xor
daa
loopne
ret
lock
and
xchg
insl
lret
xor
sbb
scas
fcom
mov
pop
sub
ficoml
call
jecxz
inc
pop
sti
mov
mov
aam
jg
cmp
and
leave
xor
pop
mov
repnz
into
mov
add
loope
in
push
lock
or
sub
jl
aam
test
dec
or
and
xor
bound
out
pop
pop
subb
sahf
cmp
lds
xor
cmp
fnstcw
lahf
out
add
dec
mov
popa
int3
mov
sub
xor
lock
mov
aaa
add
mov
xor
outsl
fsubr
loop
inc
pop
inc
imul
xorb
ret
popa
rol
push
push
xchg
and
jg
jge
inc
fimull
into
push
test
fnsave
sub
mov
mov
icebp
stc
jmp
lret
loope
add
jbe
stc
adc
dec
add
jge
movl
sbb
scas
push
iret
pop
repnz
mov
aam
bound
rol
dec
add
ds
push
and
fisttpll
and
mov
and
cmpsl
pop
xchg
fwait
xchg
xor
data16
fisubl
daa
xchg
mov
push
push
nop
in
lods
shl
sub
mov
mull
cmova
and
cmp
xor
jg
cmp
inc
shrl
shll
test
rcll
sti
push
leave
mov
or
mov
mov
pop
lahf
leave
xchg
jge
adc
jecxz
inc
loopne
cld
rcrb
cmc
stos
xor
mov
enter
andl
enter
hlt
or
mov
es
mov
lods
mov
je
dec
nop
loope
popa
movsb
rcrl
pop
pop
scas
jb
mov
add
fldenv
mov
pop
out
sbb
xchg
push
pop
lock
out
movsl
sub
shr
stos
add
fldt
mov
ljmp
lea
cmp
loop
sbb
jnp
cmpsb
jecxz
mov
fs
xor
push
mov
pop
cld
enter
mov
mov
inc
xor
dec
mov
fildl
push
movsl
fimull
push
xchg
jmp
lods
mov
xchg
jae
icebp
jmp
xchg
mov
mov
iret
jb
lods
roll
adc
mov
mov
dec
arpl
aaa
xlat
cmpsl
jl
das
in
int
mov
fmuls
pop
pusha
mov
ret
xchg
push
jmp
dec
dec
rcll
cmp
mov
sub
adc
and
lret
pusha
mov
pop
inc
jmp
mov
sub
mov
xchg
popf
mov
fs
int
push
mov
addr16
cmp
leave
sub
movb
push
popf
fildl
jne
pop
dec
add
repz
lds
mov
lahf
jne
jg
test
pop
push
mov
pop
int3
out
fidivs
sbb
add
inc
mov
jns
loop
sbb
adcb
push
pop
add
insl
lcall
and
enter
jnp
ljmp
repz
adc
inc
out
and
pop
loope
out
xor
mov
add
pop
daa
mov
dec
or
loop
push
and
mov
cltd
cmp
inc
jae
mov
test
in
jg
mov
subl
mov
data16
mov
xchg
movsl
stos
test
dec
xchg
mov
test
mov
xor
loopne
loopne
cmc
dec
push
loopne
push
jmp
out
jmp
addb
sub
lods
push
adc
icebp
xor
and
add
inc
mov
xchg
insl
and
arpl
pop
push
mov
xlat
cmp
pop
jns
mov
xchg
dec
mov
add
xor
sbb
les
xchg
inc
xchg
insl
jg
jg
int
mov
insb
mov
or
mov
add
jmp
in
popf
or
ja
fadds
test
push
mov
adc
xor
dec
dec
inc
outsl
mov
push
inc
push
jge
xor
pop
into
push
ret
sbb
xchg
icebp
pop
push
xchg
adc
fists
pop
and
adc
push
cmp
xchg
sbb
add
mov
add
aam
and
ss
jne
add
arpl
dec
or
stc
mov
pop
idivl
mov
mov
add
mov
data16
or
or
je
pop
add
outsb
pop
rcrl
and
insl
decb
je
or
shrl
ja
pop
cmp
daa
mov
or
dec
sbb
mov
bound
or
jno
ds
jmp
xchg
cmpsb
and
mov
hlt
lret
xchg
popf
into
dec
out
xor
jno
aas
inc
dec
adc
lret
cmpsb
add
dec
push
shl
and
jmp
xor
inc
sbb
jg
sub
fs
fdivrl
sub
dec
stos
test
insb
adc
cmc
mov
jnp
sbb
js
ret
mov
push
xor
pushw
push
push
sub
jb
add
add
cltd
jbe
shrl
xchg
ffree
daa
lds
mov
outsl
arpl
out
mov
jecxz
adc
mov
inc
jg
je
addl
aam
mov
dec
push
pop
dec
adc
mov
lret
jp
sti
jbe
arpl
jb
add
sub
add
cmp
ds
mov
xchg
out
adc
push
insb
dec
mov
and
and
cli
lahf
jne
mov
jne
push
insl
cli
mov
inc
jmp
dec
and
arpl
push
cld
fwait
lock
pushf
push
pop
std
mov
mov
jl
stc
aad
mov
sbb
or
mov
mov
sub
pop
add
ja
jns
dec
sub
inc
adc
cltd
loopne
js
je
test
mov
jmp
mov
sub
cmpl
inc
fs
pop
add
aaa
scas
xchg
mov
aaa
dec
mov
sbb
cmp
lret
and
xchg
pop
testb
sub
sbb
cmp
jne
sbb
dec
stc
sbb
loopne
fidivl
and
loope
and
ss
mov
cli
andb
leave
cmp
mov
lret
sbb
test
mov
test
in
inc
mov
idivb
mov
sbb
pushl
and
divb
push
cwtl
pop
mov
lret
xor
pop
mov
stos
sbb
mov
das
call
ret
repnz
and
pop
movsl
pop
jne
pusha
mov
fisubs
push
stc
sti
orl
rep
mov
dec
cmp
mov
in
push
dec
insl
cmp
inc
shrb
stc
shll
lock
or
iret
mov
insl
fbld
pop
mov
loopne
mov
xor
jne
in
lds
mov
pop
insl
aam
sub
mov
mov
push
data16
mov
push
scas
mov
js
in
hlt
add
mov
dec
fsubs
icebp
inc
push
add
xor
sbb
or
xchg
movsl
fwait
popa
and
dec
shl
sbbl
iret
push
and
divl
test
stos
mov
add
mov
dec
shrb
fistpl
mov
or
repnz
aad
and
push
fisubrs
insl
mov
js
push
mov
add
sub
jge
mov
cltd
bound
pop
adc
pop
sub
clc
lcall
push
pop
fcmovnbe
aas
mov
bound
std
inc
cmp
jecxz
call
clc
bound
mov
mov
or
mov
sub
ret
adc
add
pop
mov
mov
push
xor
or
mov
and
lods
sub
rcrw
mov
out
inc
outsb
mov
shll
sub
cmp
cmpsl
cmp
xchg
mov
xor
lea
inc
cmp
aad
jae
push
inc
jecxz
mov
dec
sbb
push
js
jge
cwtl
out
add
push
dec
pop
movsb
add
aad
cmpsb
inc
movsb
inc
mov
sub
dec
cli
pop
and
sbb
cmp
push
or
faddl
imul
test
jg
jo
cmp
int
xchg
mov
aaa
imul
lds
int3
or
mov
pop
lahf
unpcklps
dec
ljmp
cmp
xor
lret
rolb
lea
and
out
fs
test
stc
sub
mov
loope
sbb
mov
stos
fstpt
cs
fldcw
lock
sti
jp
lret
jno
shll
pop
lods
cmp
clc
or
mov
push
inc
jge
push
or
xchg
xor
xor
int3
or
ds
xchg
jle
jg
loopne
xchg
cmp
sub
push
mov
mov
repnz
or
dec
mov
dec
add
pop
mov
pop
inc
sub
jle
stc
lods
cmp
or
push
mov
fld
pushf
or
inc
pop
mov
and
fildl
leave
and
mov
aas
into
stos
loope
movsb
dec
push
aaa
sbb
aam
inc
xchg
stos
or
push
lods
adc
inc
movsl
push
fsubrl
mov
inc
xchg
and
lret
add
add
mov
les
ss
pusha
push
sbb
push
rcl
lods
pop
jmp
inc
xchg
sahf
scas
data16
cmp
jmp
andb
dec
dec
and
pop
mov
or
jo
shr
push
jl
lret
xor
pop
inc
sub
jbe
adc
push
stc
mov
jmp
add
xor
jns
jno
pop
pop
sub
loope
fcmovne
cmp
mov
jl
pop
fnstsw
dec
xchg
push
loope
mov
in
std
fldt
cmp
xchg
sub
sbb
cld
ss
nop
and
loope
insb
push
jbe
jne
jecxz
test
mov
lods
data16
imul
cmc
ret
xor
cmp
imul
ret
lret
sub
xchg
sbb
sti
fistps
and
mov
movsl
mov
roll
aas
movsl
fisubl
sahf
mov
cwtl
lods
mov
loope
mov
imul
add
cli
jge
mov
data16
cld
push
nop
add
and
repnz
adc
pop
and
xchg
xchg
inc
ljmp
ror
sbb
jmp
push
push
or
test
addr16
ret
push
popf
adc
xchg
add
pop
inc
jl
xchg
in
sub
cmp
or
push
mull
push
jp
and
push
pop
fiadds
nop
mov
fidivs
xchg
xlat
ss
icebp
inc
push
xchg
stos
sti
add
into
pop
orl
iret
dec
xchg
fiaddl
in
cmp
xchg
cmp
cmpsl
push
test
clc
push
cwtl
or
jp
inc
arpl
push
xor
sub
cmpsb
push
fcmovnbe
sbb
js
mov
mov
sub
sahf
add
mov
sub
adc
jo
xchg
ret
mov
jle
add
iret
in
push
inc
adc
push
ficoml
xorb
jno
xlat
repz
inc
push
cmpsl
das
in
test
je
mov
xlat
push
pop
shll
sub
in
movsl
or
push
loop
int3
push
add
mov
xchg
add
sbb
pushf
lcall
xchg
pop
mov
nop
jns
mov
inc
lods
test
mov
push
jecxz
add
sbb
rolb
inc
aaa
inc
sbb
xchg
jl
push
inc
mov
inc
xchg
lods
jnp
call
and
lahf
pop
sarl
aaa
mov
push
add
lods
out
movsl
mov
shr
movsb
mov
xor
pushf
mov
pop
mov
mov
or
and
ret
scas
inc
jno
mov
xchg
addr16
pop
sub
out
jp
xchg
fsubrs
fcoml
push
ds
scas
cmpsb
and
lods
sti
or
mov
jmp
cmp
adc
std
xchg
cld
sbb
scas
jge
xchg
bound
icebp
jnp
inc
rcrb
inc
xchg
lods
jnp
ret
ja
pop
outsb
adc
push
mov
lcall
pop
sti
aas
fsubp
mov
mov
les
cmp
orb
hlt
das
inc
xchg
xchg
mov
xchg
xchg
xchg
mov
adc
lock
test
stos
repnz
gs
inc
mov
mov
jbe
mov
test
push
xchg
sbb
jno
cltd
pop
xchg
mov
aaa
mov
and
inc
pushf
cmpsb
mov
mov
test
icebp
fnsave
sbb
mov
das
or
sbb
add
sub
and
inc
adc
push
insl
mov
ret
inc
jmp
lods
dec
sar
lcall
push
add
jb
nop
pop
mov
inc
pop
imul
bound
dec
add
std
mov
es
sub
mov
jns
ret
push
loop
cmpl
mov
addr16
mov
int3
dec
mov
imul
mov
mov
jmp
js
imul
ret
lea
pop
dec
push
stos
mov
dec
jbe
jg
xchg
loope
cmpsl
add
sub
inc
cmp
fisubl
jl
cmp
aaa
in
cmp
daa
loope
mov
add
fcomps
test
jl
dec
dec
fcmovbe
test
insl
push
aaa
push
rcll
sbb
jns
mov
arpl
pushf
adc
sbb
idivl
add
mov
test
test
fdiv
nop
iret
fstp
adc
hlt
push
fiaddl
cmp
fsubrs
lret
add
fdivs
cmp
mov
xchg
adcb
push
testl
push
fnstcw
lret
or
ss
lea
test
out
jge
mov
adc
push
lcall
mov
lods
enter
dec
loop
sbb
cmp
jle
in
sbb
or
or
adc
insb
fldcw
ds
jns
mov
lds
faddl
sbb
sahf
jnp
in
sbb
out
adc
adc
cs
pop
xchg
in
add
shrl
adc
and
add
sbb
mov
in
sbb
test
sub
pop
sub
fs
push
stc
mov
sbb
push
aad
sub
into
jb
sarb
or
and
aad
sbb
push
mov
in
sub
lds
lret
loop
cltd
adc
loopne
aad
mov
xor
rolb
adc
and
mov
imul
fs
int
divb
in
jbe
dec
inc
notb
test
pusha
loope
push
outsl
inc
xchg
sbb
repnz
bsr
leave
out
mov
std
pop
xchg
stc
push
xorl
hlt
jp
xorb
fs
mov
inc
mov
sub
cltd
sub
push
lods
fs
in
sahf
add
inc
jnp
sub
dec
sub
mov
pop
xor
out
adc
fcmovnbe
push
loopne
into
stos
xorl
scas
scas
mov
ret
out
xor
call
fmulp
mov
mov
cli
xchg
push
loopne
pop
xchg
sbbb
push
mov
cwtl
fdiv
in
scas
repnz
inc
negb
mov
cmc
cmp
rcrl
dec
gs
mov
icebp
lcall
ja
shlb
dec
sbb
push
in
add
mov
call
inc
sub
aaa
xchg
push
push
gs
out
dec
leave
ret
jmp
push
aaa
mov
adc
fildl
cmpsl
xor
push
and
mov
sub
dec
mov
cmp
arpl
cmp
jp,pn
dec
mov
popf
pusha
sahf
jge
icebp
jecxz
jle
xchg
pop
pop
adc
xchg
das
out
imul
pusha
xor
lods
fildl
add
cmp
mov
xor
cmpsl
outsb
push
addr16
call
mov
imul
je
jge
pop
loopne
sbb
mov
cmpsl
cld
ret
push
pop
cmp
pop
jg
fwait
insb
out
jne
xor
lret
fwait
lcall
leave
ret
fidivs
lcall
test
add
inc
negl
mov
stc
xlat
sti
or
and
out
pop
and
cmpsb
je
aas
popa
sbb
mov
sub
and
pop
out
sbb
cld
adc
js
in
dec
push
mov
or
push
pop
adc
push
jb
mov
push
jno
jb
and
jbe,pn
shlb
loope
mov
jmp
xchg
daa
xor
je
insl
clc
add
sub
dec
mov
add
lcall
scas
ret
or
repnz
test
or
fwait
leave
int
addb
aaa
jmp
xor
cmpsl
call
jb
or
dec
xor
js
mov
imul
test
push
jns
mov
jae
addr16
inc
sub
add
rclb
push
mov
dec
adc
push
push
jno
jae
cmp
xor
xor
shl
pushf
inc
scas
das
cmp
or
sub
movsb
in
mov
xchg
int3
es
xchg
jge
jmp
sarl
push
rcrl
aas
push
sub
pop
dec
cwtl
push
js
ret
and
inc
dec
dec
cwtl
mov
in
inc
testl
xchg
xchg
fcoms
insl
scas
push
das
cmp
or
sub
fcomp
pushf
ljmp
cmp
adc
inc
pop
mov
dec
outsb
pop
mov
lahf
lcall
stos
sahf
mov
push
fld
mov
jg
xchg
aad
mov
stos
jnp
test
mov
dec
xor
push
cmc
cmp
xlat
shrb
pushf
and
lods
xor
rol
pop
add
inc
jnp
lock
rclb
cmp
ja
xchg
fiaddl
aad
bound
mov
jmp
mov
adc
mov
jnp
ret
ds
push
sbb
iret
test
jns
les
or
adc
inc
inc
add
cmp
cmc
pop
test
ljmp
xchg
es
jmp
loope
jns
jne,pt
into
ljmp
cmpsl
jl
sbb
or
adc
adc
push
in
shlb
out
std
xor
pop
les
pop
enter
add
outsb
jecxz
notb
xchg
cmc
xchg
testb
mov
daa
pop
scas
enter
dec
jmp
into
scas
jle
rorb
mov
adc
orb
imul
jp
enter
adc
inc
mov
jmp
adc
arpl
sbb
das
cmp
jge
fsts
call
loop
pusha
lea
cmp
jb
aas
inc
xor
iret
xor
pop
aaa
cmpsb
mov
ds
xchg
or
int
add
out
mov
mov
imul
pop
xchg
out
and
imul
or
jbe
pop
shrl
xlat
cld
push
jmp
ret
in
xor
flds
cmc
xor
xchg
orw
subb
or
push
push
outsb
pop
push
add
mov
cmp
mov
pusha
cmc
pop
aas
pop
cmc
dec
std
mov
ljmp
adc
sbb
bound
dec
or
sbb
xchg
pop
jl
fisttps
mov
mov
xor
fimull
add
test
pop
stc
xchg
push
test
xor
sbb
jmp
inc
dec
ficompl
test
sysenter
je
frstor
xor
push
pop
mov
sbb
mov
or
aas
mov
xchg
pop
or
jge
popa
jge
div
out
arpl
sub
in
push
mov
lahf
call
mov
and
add
jmp
lahf
pushl
dec
cltd
mov
dec
adc
out
dec
add
mov
cmp
data16
pop
jae
in
int
fcoml
push
cmp
loop
pop
outsb
int3
jp
add
lret
movsl
inc
mov
inc
fcoms
push
stc
les
mov
jecxz
stc
cs
push
rcl
call
xchg
roll
xchg
push
dec
fstps
jmp
shll
das
mov
sbb
push
lahf
xchg
xchg
dec
pop
arpl
cld
lock
test
stc
xorl
add
cmc
scas
add
pop
push
push
pop
ret
hlt
in
adc
cmp
mov
inc
outsb
fbld
out
stc
push
movsb
jecxz
mov
xor
sbb
adc
push
punpcklbw
push
xchg
aas
push
push
xor
bound
popa
xchg
es
dec
or
fiadds
inc
jb
in
push
mov
fisubrl
cmp
das
popf
inc
mov
mov
mov
dec
jl
imul
sbb
sub
and
loopne
adc
popf
fisubs
cmpsl
cmovnp
cmc
mov
cmp
pop
stos
xor
pop
push
stos
decl
stc
repz
xchg
mov
push
dec
mov
ret
push
lea
sbb
mov
mov
or
insb
mov
test
aas
xchg
push
cmc
push
inc
ret
fdivl
aad
das
mov
pop
lahf
std
sub
scas
stos
cmpsb
cmc
test
aam
cmp
pop
push
xchg
dec
ror
jge
jge
inc
inc
sub
jb
mov
sbb
popa
pop
mov
dec
add
mov
stc
out
add
mov
adc
xor
push
je
push
sbb
sub
push
fwait
jecxz
imul
mov
in
and
out
imul
mov
jecxz
mov
xchg
jne
push
rcr
and
jle
inc
jb
aaa
shlb
stos
nop
subb
or
xor
rorb
movsb
mov
in
dec
orl
jbe
cmpsb
inc
filds
ljmp
mov
xchg
insl
gs
push
cmp
xchg
fs
dec
push
repnz
pushf
int3
inc
pop
mov
lcall
xchg
adc
xor
dec
jecxz
sub
cmp
popf
xor
frstor
nop
and
xchg
fs
iret
xchg
xor
mov
jae
cmp
sub
sbb
push
fwait
sbb
clc
mov
sbb
push
mov
and
cmc
sub
mov
add
xorl
lods
hlt
int3
hlt
pop
dec
or
push
lock
test
sbb
sbb
cmp
repnz
cld
sbb
sbb
xor
xor
or
dec
and
mov
mov
ja
int3
push
into
add
xchg
mov
push
and
pop
sbb
ljmp
cmc
in
sbb
sub
insb
push
xor
imulb
es
out
push
dec
rolb
push
xor
outsl
xchg
push
xor
mull
mov
mov
jmp
xchg
dec
xchg
lret
jnp
gs
jecxz
sbb
arpl
sub
aaa
leave
inc
inc
ds
xor
roll
push
in
js
push
add
pop
lea
divb
outsb
mov
scas
sbb
movsl
xchg
sbb
inc
scas
cwtl
jnp
repnz
dec
push
pop
sub
mov
addr16
in
out
std
xchg
sub
push
ss
dec
repnz
int3
fs
dec
stc
mov
iret
xchg
pop
mov
or
sbb
inc
dec
push
add
pop
lods
jns
test
cmp
push
mov
insl
imul
orb
int
out
pop
addl
stos
adc
das
sti
mov
popf
dec
and
das
std
or
dec
imul
mov
sub
sub
jle
mov
les
inc
mul
outsl
and
stos
push
or
xchg
call
lods
test
pop
mov
imul
sbb
popa
push
test
xor
bound
repz
xor
fcomps
sarb
mov
imull
iret
jmp
js
jbe
mov
jmp
cmp
mov
jge
jge
jmp
cwtl
repz
adc
jb
mov
cmpsb
inc
jl
push
lret
cli
jnp
jmp
pop
push
push
in
aad
xchg
and
clc
adc
aad
shlb
adc
mov
repnz
in
rorl
js
dec
mov
mov
xchg
test
std
leave
test
repz
pusha
test
and
jnp
aas
mov
lcall
dec
int3
jl
dec
xor
shrb
push
mov
sbb
jo
inc
adcl
push
negb
je
push
gs
scas
xchg
inc
fadd
int3
fistpll
scas
clc
cltd
mov
rorl
cmp
mov
rcr
dec
stos
and
in
ja
xlat
clc
pusha
cmpsl
add
jecxz
mov
pop
push
int
icebp
repz
jbe
adc
add
cmp
imul
cmp
popl
dec
hlt
dec
mov
and
mov
out
cmp
mov
pop
and
sub
cld
divb
cmpsl
xor
mov
decb
mov
adc
outsl
nopl
roll
test
les
int
sub
test
xor
and
xor
andb
add
movsl
outsl
call
mov
call
pop
addr16
adc
jns
jae
mov
push
cltd
outsb
dec
jecxz
fisubl
ror
inc
aas
jbe
and
call
subb
out
sub
bound
lfs
inc
addr16
adc
xchg
jo
ss
and
mov
and
or
push
dec
dec
out
adc
rep
popa
ljmp
sub
mov
dec
loop
fsubs
fmul
mov
sub
mov
add
cvtdq2ps
add
jge
cmp
in
in
push
cld
mov
add
xchg
mov
or
cmp
mov
gs
sbb
mov
and
or
call
dec
or
rcrb
pusha
sbb
mov
push
mov
sti
clc
stos
inc
add
enter
test
mov
dec
shrl
stos
mov
stos
cmp
dec
xor
xchg
sub
cmp
sbb
mov
xchg
mov
loope
and
cmc
cmpsl
jg
nop
and
mov
loop
xor
add
xchg
dec
out
mov
or
imul
lds
inc
sub
popf
lods
scas
mov
cmc
sub
push
jg
xchg
cmovnp
addb
mov
dec
rcrl
and
fs
xor
dec
pop
testl
test
pop
push
aaa
sbb
stc
leave
sub
jbe
inc
test
adc
dec
cld
cmp
fsubrs
outsl
fldl
xchg
dec
push
and
outsl
movsl
cmpsb
lahf
push
inc
add
add
sarl
pop
int
imull
ds
scas
insl
or
cmp
stos
ficomps
push
and
in
cmpsl
popa
mov
sbb
popf
idivb
cmp
sbb
mov
lods
arpl
ss
aam
fldcw
mov
data16
mov
dec
cmpsb
lcall
mov
xor
aad
adc
test
std
or
or
pop
ss
aas
add
lcall
adc
test
pusha
fidivrs
dec
push
cmpsl
cmp
cmp
movb
cmp
pop
into
imul
out
fldl
cmp
lds
mov
into
sub
inc
shlb
stos
dec
sbbb
push
iret
sub
fwait
outsl
test
cmp
xchg
xchg
sbb
rcrb
jecxz
jge
ret
or
addr16
dec
sub
cmp
mov
rcll
cld
mov
fmul
jg
push
jmp
inc
cwtl
ret
ds
imul
call
outsl
mov
pop
scas
insl
adc
aad
pop
xor
and
jnp
mov
aaa
sub
insl
lea
inc
jo
pop
push
je
in
xchg
xor
jl
mov
andl
push
int3
xor
pop
mov
mov
out
mov
aad
and
adc
push
add
lahf
and
or
dec
inc
aam
sbb
ja
mov
jnp
sub
pushw
adc
adc
inc
mov
mov
imul
cwtl
jnp
fiaddl
das
cmp
out
pop
scas
mov
out
jno
or
xor
pop
cmpsl
cmp
insb
lahf
cmp
mov
jmp
xchg
fisubrl
shll
jp
loope
cmpsl
mov
mov
scas
sbb
popf
mov
push
or
popa
hlt
in
and
lret
or
lret
or
aad
outsl
adc
leave
jecxz
scas
cmp
out
adc
add
cmpsb
popf
xor
aad
out
ds
inc
add
dec
cmc
das
adc
mov
inc
int3
adc
and
call
cmp
sbb
dec
jae
or
mov
movsl
scas
shl
scas
dec
mov
fcmovbe
inc
ret
setbe
lcall
dec
scas
cmp
cmp
mov
xchg
mov
xchg
inc
xchg
sub
aad
ror
repz
faddl
repz
jg
int
rcrl
arpl
dec
js
orl
je
or
push
sbb
cmp
in
repnz
test
push
inc
gs
fst
js
loop
jae
mov
jge
shrb
sahf
testb
daa
push
adc
mov
pop
mov
push
and
mov
out
aam
cli
sbb
and
xchg
xor
xchg
jbe
jmp
repnz
fstp
xor
movsl
jecxz
mov
dec
jnp
int
adc
pop
hlt
sub
sbb
gs
test
or
add
loop
mov
dec
lcall
scas
loope
pushw
push
repz
nop
dec
inc
jno
or
das
aaa
sub
cld
jmp
popa
sub
jb
sbb
cs
les
sub
pop
mov
push
test
sub
pop
test
and
inc
adc
mov
roll
xchg
inc
and
lret
or
sbb
int
jo
aam
sub
stc
push
pop
cmpsl
mov
fcmovnu
sbb
stc
xor
test
inc
pop
in
mov
push
scas
fs
jg
loop
dec
add
pop
xchg
rorl
jg
cmp
pushf
mov
xor
push
lcall
sub
pop
mov
add
mov
pop
sub
fs
push
lahf
pop
inc
xchg
outsb
das
mov
rcrl
ljmp
inc
test
dec
daa
mov
lahf
xchg
fidivs
scas
cmp
stos
mov
mov
dec
xchg
faddl
jns
outsl
fnstcw
insb
out
cmp
test
in
adcb
mov
test
inc
mov
and
in
out
push
popf
pop
aam
pushf
leave
inc
dec
loope
xchg
mov
jne
addl
jg
aam
hlt
or
sub
push
cmpsb
xor
js
mov
cmpb
dec
icebp
inc
icebp
xchg
in
mov
xchg
xor
aas
stos
mov
cmp
cmp
jno
sbb
fldl
lcall
ret
inc
sub
mov
aas
js
mov
lods
xchg
iret
enter
shll
mov
lock
xlat
push
add
jecxz
mov
imul
mov
add
pusha
das
lcall
in
xchg
add
push
stos
out
sbb
sbb
out
lahf
scas
mov
pop
mov
pop
inc
mov
aad
adc
nop
scas
jnp
in
xor
or
fldenv
cmp
inc
cs
ret
mov
and
mov
inc
cld
daa
movsl
push
int3
dec
in
sub
iret
int
fisubrl
push
mov
add
xchg
je
sti
dec
sbb
filds
aam
push
mov
int
and
cli
pusha
rclb
jl
jne
adcb
cmp
and
and
mov
int3
push
sbb
out
xor
sbb
adc
inc
dec
jp,pt
adc
inc
in
jg
sbb
int3
mov
inc
mov
mov
bswap
fsubrs
iret
das
xor
adc
hlt
dec
or
int
xchg
rcll
push
fisubs
push
jns
dec
data16
out
pop
cli
add
or
xchg
ds
jmp
cld
jnp
pop
cmpsl
mov
pop
sbbb
addl
lods
loope
xor
jle
push
jbe
push
les
rcrl
cli
mov
movsl
inc
pop
clc
jb
popa
sub
sub
dec
xor
inc
lret
jp
mov
imul
jl
rolb
or
popl
or
sbb
pop
ret
xchg
mov
out
sti
sbb
jbe
jmp
xor
push
aaa
fwait
xor
mov
sbb
sbb
xor
gs
or
xor
jl
data16
leave
cmp
lea
rcrb
lret
outsb
add
cmp
jb
pop
enter
dec
sub
fisubl
icebp
or
pop
cmc
fs
pop
mov
shl
test
mov
cwtl
test
mov
aam
cmp
sub
shlb
mov
fistpll
rorb
dec
and
push
fwait
push
stos
in
icebp
pop
jb
sub
push
and
xor
iret
xchg
sub
sub
jp
xor
xor
pop
and
jg
test
jns
or
stos
xor
add
cltd
enter
neg
in
mov
cmp
xchg
sbb
jno
out
mov
mov
cltd
ljmp
in
mov
loopne
xchg
or
cmc
pop
cwtl
xlat
arpl
mov
jnp
out
pushf
jne
sbb
add
sbb
jno
pusha
xor
scas
outsl
or
xchg
or
ds
add
push
sbb
in
fidivl
movsb
add
fstl
inc
cmp
and
mov
bound
lods
nop
mov
mov
jns
ffreep
push
inc
cmpsl
insb
cmc
pop
scas
incl
xchg
pop
xor
add
xor
into
popa
dec
cmp
xchg
cmp
or
out
pusha
jp
sbb
addb
dec
aaa
out
pop
mov
mov
push
cltd
sarb
add
daa
cmp
pop
inc
rclb
cmp
mov
scas
in
xlat
aaa
and
fldenv
sbb
aad
mov
and
mov
cwtl
test
dec
mov
aas
xor
out
pusha
xchg
outsl
outsb
leave
adc
into
inc
mov
adc
mov
cmp
in
pusha
add
movsb
cwtl
cmc
sub
aaa
xor
loopne
es
cmpb
lcall
fistps
cmp
mov
add
mov
test
mov
sarl
xchg
cmp
js
mov
xor
mov
inc
push
jecxz
ret
lock
xchg
mov
shlb
cs
lods
adc
pop
icebp
mov
sbb
test
notl
push
add
cmpsb
xchg
xor
stc
or
hlt
shr
testl
xor
jg
xlat
fidivrs
xchg
jnp
test
jnp
sub
jae
bound
push
testl
push
add
adc
js
jne
xchg
and
faddl
jnp
repz
sbb
push
sarb
mov
popf
insb
orl
insl
pop
mov
mov
mov
enter
inc
xchg
sbb
jmp
inc
mov
std
aas
hlt
sub
dec
negl
or
push
pop
mov
out
mov
or
cmc
xlat
adc
into
push
test
dec
outsl
fnstsw
adc
andl
add
fwait
cmc
xchg
arpl
repz
sbb
addr16
into
push
in
push
iret
pop
add
ja
mov
dec
push
or
dec
push
mov
add
xchg
cmp
xor
test
or
pushf
and
add
jae
mov
adc
push
jbe
in
cmp
xor
lea
xor
arpl
mov
out
inc
scas
adc
push
sub
xchg
xchg
pusha
int3
scas
sbb
lock
movsb
test
add
std
adc
push
pop
pop
ret
mov
jl
jb
push
sbb
ja
out
hlt
das
ret
enter
nop
lods
popf
mov
add
stc
xor
ss
pop
mov
stos
loop
pop
cmc
cld
int
movsl
adc
adc
sbb
fcmove
add
pavgw
adc
jecxz,pt
icebp
mov
icebp
int3
pop
jp
cld
xor
mov
mov
out
cmp
xchg
xchg
pop
ljmp
leave
jnp
sub
xchg
cld
rorl
andb
mov
subb
xorl
dec
insb
jae
aaa
lock
ds
outsl
or
pop
pushf
sub
sbb
dec
mov
orb
sarl
out
jle
jns
push
shrl
daa
mov
popf
xor
das
xor
mov
arpl
iret
push
jge
mov
dec
mov
das
rcrb
jb
cmpsb
push
jg
mov
sub
mov
data16
add
cmpsb
xor
or
mov
cmpsl
sub
out
insl
jnp
xchg
fcoml
pushf
out
das
and
orl
push
pop
xchg
les
pop
mov
sbb
movsl
cmp
loopne
xchg
push
enter
mov
sub
lahf
mov
ret
lret
lahf
sbb
add
fchs
jbe
ret
and
or
rcrb
sbb
xchg
lret
mov
daa
xlat
fistl
jmp
xlat
pop
hlt
cld
dec
cs
or
std
stos
cmpb
xor
xor
mov
adcl
hlt
es
xor
fiadds
jns
cmp
push
or
xor
jnp,pt
insl
test
and
pop
dec
clc
popa
cmp
les
mov
test
popa
adc
pop
pop
cmp
ds
mov
je
mov
mov
scas
mov
mov
add
xchg
or
jbe
xchg
in
or
mov
scas
pop
cli
push
pop
jns
adc
addr16
dec
scas
in
jmp
mov
push
mov
aam
std
sub
mov
add
cmp
shlb
ja
mov
adc
or
mov
push
out
fildl
movsl
or
inc
pop
ss
mov
clc
inc
pop
cmp
hlt
jns
sub
push
xorl
push
mov
mov
mov
jmp
cmpb
mov
scas
cmp
filds
fwait
mov
dec
loope
stc
push
jno
test
jbe
jge
int
lods
mov
jmp
mov
aas
or
xchg
pop
ds
sub
push
cwtl
sbb
mov
sbb
movsb
or
lret
outsl
cmp
ds
xlat
mov
aaa
jge
cli
and
mov
aam
adc
jl
jge
xor
scas
lods
sbbl
rclb
dec
into
pop
ja
xchg
adc
dec
mov
fistpl
and
lcall
sub
xchg
sbb
xor
sbb
pop
xor
dec
out
aad
mov
push
inc
insb
fisttps
lock
xchg
jb
aas
adc
aam
rcr
gs
fnstenv
fwait
mov
mov
cwtl
push
xchg
pop
mov
outsl
mov
mov
adc
mov
test
fs
sbb
lret
push
cs
fsubrs
push
fsubrl
loop
add
fnstenv
mov
or
cld
aam
dec
cltd
das
pop
adc
test
pop
xchg
or
pushf
mov
arpl
mov
cs
outsl
lods
push
pop
mov
jnp
mov
adc
gs
into
jmp
xchg
fnstenv
aaa
loope
xchg
fwait
out
jle
ficoml
std
loop
imul
adc
inc
lods
fcmovnu
cld
cmp
sub
test
jne
pop
sub
pop
rorl
cmp
adc
pop
mov
sbb
insb
sub
sub
sub
scas
add
mov
mov
dec
sub
fwait
push
jbe
lcall
inc
pop
pop
insl
aas
pop
cwtl
fldt
push
stc
cmp
scas
scas
inc
mov
pop
and
sub
xor
bound
mov
push
push
lret
leave
pop
inc
push
fidivrl
dec
ret
push
and
out
ljmp
cmp
sub
push
mov
xor
es
lret
outsb
inc
add
xchg
inc
es
push
fsubrp
pop
outsl
loopne
cmp
outsb
jae
in
test
mov
cwtl
rcr
push
jns
dec
jge
add
lds
pop
inc
inc
dec
repz
sbb
in
xor
mov
mov
sahf
pop
or
sahf
loope
xchg
push
dec
sub
inc
adcl
lahf
arpl
shll
dec
sarl
cmp
adc
outsl
xchg
daa
and
sub
outsb
push
cltd
mov
in
inc
cltd
mov
cmp
cmc
push
cmp
mov
cwtl
roll
movsb
cs
ss
xor
push
jbe
enter
xchg
sub
inc
scas
in
inc
les
outsb
cwtl
ljmp
jge
ja
icebp
clc
addr16
xor
adc
xchg
sub
xchg
dec
push
and
mov
jne
divb
mov
pop
mov
test
cmpsl
inc
popa
xor
adc
cmp
adc
or
or
std
mov
xchg
lods
ret
subl
daa
std
lahf
cmp
insl
inc
push
add
ret
cmpsb
or
es
pop
dec
std
cmpsb
cmp
call
icebp
and
push
int3
rcll
outsb
movsb
inc
add
pop
inc
test
xor
aam
and
outsl
sbb
inc
mov
cs
inc
sub
pop
jg
out
mov
pusha
mov
inc
movsb
pop
loopne
pop
pop
push
mov
es
lcall
mov
divl
mov
rol
test
jo
push
rcll
cmpsl
dec
jle
add
sub
mov
inc
jbe
cmpsb
fs
mov
arpl
aaa
stos
xchg
nop
jle
inc
and
mov
sti
sbb
clc
hlt
mov
enter
adc
pop
repnz
add
bound
leave
popf
mov
and
int
cmp
sub
idivb
push
push
sub
xor
mov
fwait
push
orl
dec
outsl
stos
into
inc
dec
mov
cmp
lods
sbb
push
jbe
call
mov
or
cwtl
mov
xchg
outsl
pop
call
in
ljmp
pop
sub
movsb
mov
cmp
ficoms
dec
imul
or
adc
add
lock
inc
ds
add
int3
aas
cld
jecxz
jno
push
xchg
bswap
jecxz
mov
das
xorb
mov
jg
jmp
popf
idivb
nop
imulb
lock
sbbb
icebp
add
or
xchg
and
stos
xchg
mov
imul
sbb
in
fidivrl
push
dec
ret
mov
popa
cmp
iret
cltd
mov
mov
ss
stc
dec
jbe
test
ljmp
push
mov
mov
setns
into
xor
pop
mov
push
adc
inc
xchg
add
fidivs
inc
pushf
mov
inc
roll
stc
mov
popa
in
adc
imulb
test
add
mov
lcall
mov
push
pop
dec
cltd
mov
mov
and
test
hlt
shll
shl
in
andb
outsl
shrl
jne
adc
xchg
sar
dec
ljmp
pop
inc
pushf
push
mov
fwait
mov
push
adcl
push
adc
cwtl
out
and
pop
outsb
in
sbb
insl
push
pop
xchg
movsl
ds
jl
mov
sbb
sub
sbb
sbb
cmp
mov
and
arpl
sub
dec
ficomps
ja
loope
add
mov
inc
push
ds
adc
lret
or
jo
jne
lahf
mov
pop
sub
mov
data16
js
aam
call
fwait
jae
pop
inc
cmpsb
inc
rorl
les
cmp
std
mov
out
movntq
out
add
push
cld
or
pop
fcmovne
in
mov
pop
fwait
data16
sub
push
dec
sbb
xchg
or
adc
call
add
mov
sbb
adc
lcall
imul
mov
jbe
add
add
jmp
jo
jnp
mov
scas
pop
push
xor
pop
pop
push
fcmove
popa
in
pop
das
xchg
stos
jns
int
sub
repnz
mov
inc
push
or
pop
jecxz
xchg
ds
std
dec
jmp
or
adc
repnz
repz
jmp
mov
adc
cmpsl
ret
insb
and
pop
cli
adc
cmpsb
fnstcw
mov
xchg
adc
and
add
xchg
cmp
inc
or
pop
cmc
push
movsb
mov
aaa
rol
jae
loope
das
lret
repz
mov
push
xor
push
mov
mov
adc
push
jb
sub
popa
sub
mov
lcall
out
mov
aaa
movsl
xchg
int
outsb
xchg
enter
dec
mov
lret
add
inc
cmpsl
ficoml
push
je
fsubp
jle
jo
test
popf
leave
mov
aas
push
aas
mov
ljmp
in
jne
imul
int
fwait
std
incb
fisttps
les
lea
jmp
lahf
aas
or
dec
test
cmp
xchg
ljmp
loopne
popf
into
xor
xor
in
sub
call
dec
add
dec
mov
pop
ja
push
and
shr
sti
push
scas
addr16
and
shlb
in
sbb
jae
add
or
sti
jmp
mov
xchg
mov
lret
jo
xor
adc
mov
mov
movsb
mov
jno
pop
inc
imul
sbb
mov
add
push
movsb
jge
pushf
jnp
jnp
dec
or
adc
push
bound
imul
and
outsl
jne
sbb
dec
dec
bound
lock
repz
lcall
popf
jl
gs
aad
int3
cmp
sbb
sub
push
mov
je
lock
or
int
fldcw
sbb
pop
nop
push
pop
int3
add
bound
test
fildl
mov
mov
insb
and
pop
test
insl
aaa
imul
out
out
mov
insl
inc
lock
cmp
sub
dec
pop
pop
xor
dec
jo
ret
nop
in
dec
in
jo
fadds
and
mov
aad
jns
mov
xor
arpl
jbe
xchg
popa
leave
adc
test
add
pop
in
inc
clc
pop
lret
out
push
xor
hlt
xchg
sbb
iret
pop
mov
xchg
into
in
sarb
mov
sub
push
leave
aas
mov
ds
testl
sbb
bound
movsl
sarl
daa
out
in
mov
jmp
outsb
ret
xor
stos
mov
and
mov
push
adc
mov
jg
dec
add
mov
mov
push
lret
daa
push
bound
cmp
xor
xor
jb
inc
call
lret
lea
aaa
nop
push
mov
cmp
out
dec
jne
push
in
out
jno
xchg
xchg
cmp
fiaddl
andl
rcll
pop
mov
pushf
xor
jo
movsb
test
xor
in
and
push
xor
jne
test
or
mov
jb
nop
test
xor
jo
ret
lock
loop
dec
inc
or
xlat
pop
pusha
nop
mov
sub
mov
cmp
mov
lret
xchg
dec
fcompl
repnz
push
wrmsr
mov
outsb
dec
sti
fnstcw
ret
mov
arpl
ljmp
add
pop
pusha
sub
pop
inc
gs
inc
pop
push
loopne
inc
push
adc
add
jle
fadd
in
sbb
nop
lret
pop
rcr
insl
ss
inc
subb
lret
jp
insb
and
pop
push
iret
aad
cmp
pop
mov
mov
or
lcall
xchg
in
push
pop
push
ja
and
gs
xchg
jmp
fsubl
ja
imul
inc
and
xchg
pop
or
mov
inc
data16
sti
aad
inc
xor
fcmovnu
sub
add
push
scas
fisubrs
divb
lcall
xor
clc
es
fucomp
insb
scas
adc
sarl
mov
xchg
sub
repnz
idiv
int
mov
mov
push
cmp
mov
and
lock
mov
fldt
mov
aam
stos
or
sbb
jmp
adc
lret
fiadds
test
enter
adc
dec
inc
jnp
andb
dec
loopne
jbe
lock
repz
mov
or
inc
adc
les
and
idivb
pop
mov
in
add
inc
or
decb
popa
inc
adc
outsl
fisubrl
inc
movsb
lock
xchg
aam
es
mov
xlat
sbb
xor
push
pusha
cmp
xchg
dec
addr16
push
sub
xchg
or
mov
pop
cmp
sbb
cmc
mov
lods
mov
stos
mov
adc
xchg
sbb
in
mov
icebp
fcompl
divl
xchg
mov
cld
outsb
push
or
cmpsl
call
nop
xchg
pusha
xor
sbb
faddl
xchg
cmp
mov
fildll
sti
mov
scas
out
adc
xchg
test
xor
push
js
in
int3
dec
aas
out
daa
sti
push
hlt
xorb
mov
sti
sub
adc
outsl
in
and
push
out
repnz
pop
sbb
bound
push
pop
pushw
loopne
rol
rol
enter
in
outsl
cld
mov
adc
lret
jmp
push
cmp
fbld
shl
add
adc
pop
pop
push
or
pop
les
rcll
into
fsubrp
or
aad
pop
inc
fldcw
sub
add
and
adc
es
add
aad
loop
sub
mov
sub
in
mov
sub
rcl
push
push
or
sub
mov
inc
fdivrp
xor
xchg
mov
pusha
adcb
xchg
inc
gs
imull
mov
pusha
jo
sbb
ljmp
cs
jb
test
ds
push
std
mov
xchg
xchg
or
add
jmp
add
out
test
sub
mov
push
xlat
aaa
push
movsl
pop
push
int3
mov
test
or
pop
xor
sbb
add
mov
scas
decl
jb
stos
xchg
pop
cmp
adc
push
lcall
repz
push
scas
stos
mov
add
fisubl
in
or
jmp
data16
adc
mov
mov
enter
jno
xor
adc
int3
test
outsl
jne
lcall
test
xor
jbe
incb
sub
jbe
inc
inc
add
and
stos
or
jle
add
clc
orb
ror
aaa
cmpsl
adc
dec
aam
inc
pop
lahf
in
pop
mov
repnz
pushf
pushf
pop
lahf
xchg
jge
mov
aaa
and
push
sbb
and
sub
mov
test
or
mov
mov
inc
ljmp
fwait
xor
jle
stc
rorl
adc
mov
inc
adc
cs
js
sbb
inc
cld
sar
mov
arpl
add
pop
xchg
enter
shl
fldcw
mov
mov
insl
popa
sbb
push
mov
lods
cmp
cli
repnz
out
push
cli
loop
fnstenv
shlb
adc
negl
cmpsl
out
and
pop
leave
jl
fwait
add
fs
lock
and
lods
add
rcrb
sub
pop
ret
les
cmp
or
xchg
das
fldenv
in
addb
fs
mov
lods
xchg
adcl
sbb
jp
lds
imul
daa
push
aad
xchg
jge
repz
leave
sbb
test
adc
rclb
cmc
xor
shlb
mov
out
cmp
lcall
adc
shrb
daa
ffree
push
fadd
shll
cli
dec
and
repz
inc
inc
mov
or
jbe
and
or
push
insl
addr16
pop
int3
mov
xchg
sbb
int3
fmuls
mov
rcl
adc
je
xchg
mov
stos
cmp
xor
fdivrp
lcall
ds
je
sub
into
xchg
fisubl
inc
into
sarl
xchg
into
outsl
mov
sub
scas
daa
mov
repnz
or
mov
gs
fmuls
leave
pop
jl
addr16
push
push
inc
nop
push
shlb
mov
mov
pop
lret
mov
adc
and
cli
flds
add
sbb
out
adc
gs
jnp
jns
ficoml
sahf
lcall
inc
pop
out
outsb
jb
mov
scas
inc
dec
and
mov
mov
rcl
test
lcall
push
sub
loopne
mov
add
ds
xchg
popa
xchg
js
and
add
and
lock
aas
stos
cli
cmp
xor
push
dec
outsb
mov
or
dec
cwtl
aam
mov
sbb
imul
in
mov
add
mov
and
push
push
shrl
in
lock
arpl
ret
sbb
pop
fmuls
je
lods
lret
outsl
addr16
clc
jle
mov
aam
push
mov
loopne
aaa
mov
push
loop
cltd
xchg
mull
clc
out
xchg
out
js
scas
std
adc
and
sub
sti
push
pop
mov
daa
or
mov
filds
sahf
into
and
adc
sbb
rcrb
in
pop
xor
mov
cmp
adc
and
jmp
shrb
adc
xor
cmpsb
dec
adc
icebp
into
jmp
and
sub
mov
lods
lret
movsb
scas
adc
xchg
enter
or
mov
je
jmp
add
jg
nop
stos
in
lods
clc
jno
dec
or
pop
sub
sbb
sbb
jle
pop
mov
add
dec
lods
inc
movsb
lret
push
pop
lahf
aam
fs
lea
popa
mov
xchg
jl
stc
dec
adc
xlat
sbb
jl
fidivs
popa
inc
mov
jl
add
jmp
lret
arpl
cmp
sbb
push
sti
add
push
movsb
insl
cli
pop
insl
jg
scas
or
dec
pcmpeqd
push
dec
mov
test
inc
inc
les
jmp
jle
addr16
add
insb
lock
push
loope
dec
mul
in
sub
or
mov
adc
push
sub
add
or
enter
int3
xorb
sarl
arpl
cmpsl
adc
imul
mov
inc
popa
xor
xor
das
and
jbe,pt
mov
ss
and
mov
out
xchg
imul
push
in
movsl
loop
mov
or
ds
jo
xchg
fwait
mov
popa
outsl
add
mov
adc
sar
ret
and
mov
int3
push
jne
mov
mov
xchg
mov
dec
in
out
xorl
movsb
or
clc
and
test
mov
cmp
loope
movsl
jnp
inc
jns
pop
shlb
xchg
int3
shl
repz
rorb
push
inc
xor
imull
jp
pop
mov
inc
fildl
cli
xor
addr16
outsl
mov
cltd
or
push
cld
inc
stc
sub
inc
dec
mov
negb
cli
or
sub
fisubs
xchg
or
cltd
xchg
mov
xor
mov
test
mov
pop
cs
xlat
xor
call
and
stc
xor
scas
roll
mulb
rcr
test
outsb
dec
or
inc
mov
fldt
into
in
ljmp
jge
out
xchg
mov
out
cli
fs
inc
cwtl
push
xchg
mov
mov
jb
dec
xchg
push
cltd
mov
ljmp
mov
push
jne
lock
cmp
pop
in
inc
aad
out
scas
cmpsl
fimull
add
lret
jne
std
stos
outsb
sub
ret
loopne
adc
push
push
aam
pop
lods
sbb
loop
adc
fs
out
xchg
subps
jno
xor
cmp
dec
cmp
dec
pop
dec
and
das
mov
call
mov
lods
and
dec
fistps
fimuls
aaa
repnz
gs
jge
cmp
mov
rorb
sbb
inc
dec
jae
fistps
cld
cmc
addr16
mov
mov
lcall
aam
div
jge
mov
fcmovnb
enter
cmpsb
pop
movsl
add
mov
pop
push
sub
mov
jno
xor
int3
fadds
repnz
iret
cmp
cmc
lahf
mov
fs
js
xchg
sbb
stc
sbb
push
outsb
mov
addr16
inc
int3
xor
push
es
je
xor
mov
int3
sti
mov
loop
jo
xchg
pop
dec
xchg
xor
add
testb
and
or
std
push
dec
loopne
inc
dec
in
pop
and
jmp
jg
in
sbb
mov
or
add
int3
push
das
pop
repnz
int3
sahf
mov
push
mov
cmp
stos
pop
and
adc
or
call
push
std
testb
adc
push
clc
sub
cmp
push
cmpsb
dec
dec
mov
xchg
mov
or
out
mov
xor
mov
mov
sbb
sbb
inc
mov
or
xchg
cmp
cli
inc
xor
lock
lods
imul
daa
add
inc
rolb
lock
lods
shlb
jno
push
sub
call
cld
test
loop
add
ret
imul
cmc
pcmpgtd
nop
cmpsl
mov
fmull
imul
idivl
jmp
mov
nop
xchg
sub
stos
xor
test
repz
pop
push
dec
mov
daa
test
lret
lods
mov
push
sbb
call
adc
aaa
insl
lahf
mov
inc
aam
jecxz
or
sub
jns
xchg
ret
add
xor
mov
adc
push
mov
inc
scas
cmp
out
dec
in
xor
fs
jnp
push
lcall
jbe
inc
out
push
es
jp
adc
shll
int3
cmpsl
mov
test
mov
ja
sbb
lret
test
jne
and
mov
xchg
leave
dec
shrb
mov
lods
ja
mov
mov
push
dec
adc
sbb
mov
mov
push
mov
jle
pop
push
es
notl
das
std
inc
imul
dec
sahf
add
mov
dec
outsb
jmp
sbb
jle
xchg
ljmp
dec
sbb
shlb
bound
lds
fs
mov
inc
and
lret
loopne
push
les
inc
sbb
enter
or
stos
sahf
adc
inc
sbbl
movsb
outsb
mov
sbb
rcr
out
lcall
mov
mov
out
decb
pop
xchg
or
cmp
lcall
jle
stos
pop
lock
sbbl
sub
cmp
addl
xor
add
mov
xchg
and
dec
xchg
or
str
add
add
add
add
add
sub
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
cmc
xchg
js
ret
int
scas
inc
mov
pop
mov
add
xor
and
jnp
popa
in
and
pop
xchg
repz
add
movsb
mov
dec
pop
sub
lret
cmpsl
bound
pop
pop
ds
test
add
xchg
jno
in
or
fs
test
xor
push
xor
addl
add
aam
fcoml
adc
push
push
sti
adc
jl
aad
clc
outsb
into
test
rcr
cmpsl
into
pop
cwtl
sub
shrl
int
lds
dec
push
mov
xchg
je
sbb
push
sbb
icebp
pop
cmpsb
repnz
push
mov
out
mov
xchg
fistl
bnd
pop
outsl
xchg
pop
cmp
xlat
fdiv
pop
mov
sbb
scas
push
adc
lret
inc
lret
into
pusha
mov
cmp
add
xchg
cld
pop
scas
mov
lock
lods
aam
and
mov
jb
out
adc
or
push
popa
setns
push
add
movsb
add
mov
ss
je
cmp
xchg
dec
push
gs
sahf
cmp
xchg
loopne
mov
mov
dec
je
and
loope
cmc
pushf
js
or
mov
cmp
jge
dec
fst
mov
stc
pop
add
idivl
pop
mov
mov
mov
inc
or
cltd
imul
add
daa
mov
movsb
mov
test
xor
xlat
push
add
add
dec
movsl
std
mov
subl
push
imul
out
mov
insl
xchg
jge
mov
sarl
and
outsl
inc
outsb
sbb
inc
jnp
insl
jne
jp
fistl
fstpt
pop
aas
push
in
jmp
jns
loop
popf
xchg
sbb
fldl
fbstp
fstps
xor
pop
scas
rclb
sbb
xor
push
sub
adc
insl
cmpsl
mov
mov
lcall
stos
int3
sub
je
movsl
xchg
stos
js
enter
int3
mov
cmp
pop
push
lods
and
mov
inc
in
es
js
sti
pop
scas
mov
dec
mov
js
idivb
mov
mov
lret
inc
pop
xchg
xchg
aas
inc
xor
or
and
sbb
ret
test
push
jae
mov
ret
sbb
pop
jae
inc
push
shrb
loop
push
xchg
lcall
adc
mov
mov
pop
pop
pop
xor
jl
inc
out
dec
out
push
sbb
bound
fs
xchg
iretw
lahf
xlat
jnp
xor
inc
xor
or
pop
xor
push
test
ja
xchg
sbb
push
adc
inc
mov
push
inc
dec
icebp
cmp
xchg
orl
movsb
ror
mov
xor
lret
jg
cmp
lcall
push
insl
or
ds
inc
aas
xor
adc
xor
or
push
xor
enter
daa
hlt
pop
push
pop
sbb
pop
xchg
lods
stos
mov
add
mov
jg
out
push
push
mov
cmp
fs
and
mov
inc
or
jmp
mov
lods
xor
jg
leave
scas
sbb
bound
inc
push
das
lret
push
enter
cs
out
pop
scas
frstor
inc
mov
mov
in
cltd
orl
mov
mov
sub
je
lahf
lret
cmp
cmp
sti
push
adc
dec
ss
sbb
add
aaa
mov
repz
ret
dec
xor
sahf
inc
mov
and
clc
popa
adc
sbb
test
xchg
xchg
enter
mov
push
mov
xlat
push
or
cs
gs
in
add
into
add
cli
xchg
add
loopne
mov
aas
xor
xchg
mov
or
rol
fcoms
push
xor
dec
cwtl
xor
or
adc
add
loope
mov
mov
jg
jbe
mov
sub
mov
mov
sbb
aam
sub
mov
cmp
repnz
ljmp
insb
xchg
fmull
sbbl
cmp
xorl
xor
stos
cld
add
imul
bound
mov
cmc
loopne
adc
adc
push
fsub
xlat
add
mov
mov
inc
mov
es
mov
and
xor
je
aad
pop
repnz
lods
push
gs
sti
enter
cld
mov
enter
xchg
adc
adc
xchg
sub
ret
and
jge
cmp
imull
idivb
iret
mov
sub
inc
gs
mov
xchg
in
push
out
mov
pop
ret
dec
aam
and
mov
loope
jge
out
cld
xchg
sti
test
or
int3
mov
pop
cmp
imul
cli
out
mov
mov
pop
dec
adc
mov
dec
cmp
nop
out
mull
insl
incl
rcll
daa
inc
and
shll
aam
jmp
push
adc
push
arpl
jno
add
test
movsl
enter
xchg
mov
roll
std
pop
jmp
mov
inc
cli
xchg
in
mov
dec
movsb
stos
jmp
sbb
jge
and
adc
movsb
mov
imul
aam
and
pop
pop
jae
out
lret
lods
cmpsb
jae
adc
test
sbb
xchg
pop
xchg
ffree
xchg
xor
push
or
xlat
xchg
subb
mov
or
inc
out
and
xor
mov
pop
push
sub
inc
gs
jno
inc
jb
push
mov
mov
or
lcall
mov
clc
in
cltd
and
cmp
out
mov
mov
mov
and
imul
cmp
out
push
mov
push
sbbb
dec
cmp
icebp
pop
adc
xlat
cld
and
xchg
shlb
and
gs
dec
arpl
stos
int3
jae
sti
xchg
and
lea
xlat
sbb
pop
mov
push
pushf
push
int3
shlb
xchg
push
pop
mov
jb
xchg
pavgb
pop
fldl
scas
jecxz
aaa
gs
sub
rol
call
sbb
jmp
add
mov
fdivr
cmp
inc
cmp
dec
cmpsb
xor
dec
dec
dec
mov
fs
dec
adc
pandn
sbb
mov
mov
push
xlat
inc
notb
jmp
add
insl
inc
mov
pop
jle
xor
pop
push
mov
ss
xchg
sbb
sbb
pop
cmp
mov
push
dec
or
pop
mov
rorl
insb
or
adc
call
ret
cld
push
loope
mov
or
fldenv
loop
mov
cmp
xchg
inc
jmp
fnstsw
scas
mov
mov
jno
or
xor
mov
jle
enter
pop
mov
test
mov
rcrl
shll
ja
adc
jge
roll
test
lret
dec
mov
jae
xor
cld
fstl
dec
mov
cs
cwtl
movsl
in
test
pop
mov
repnz
out
imul
push
enter
xchg
jg
popa
and
mov
rcrl
ljmp
add
pop
lds
xor
repz
popw
fcompl
and
jecxz
icebp
push
sahf
rorl
popa
push
fs
lods
movsb
add
xor
cmp
rcll
inc
push
and
cwtl
outsl
jg
lcall
loopne
lea
jno
ljmp
adcb
mov
insb
lcall
das
ja
aaa
add
push
xor
pop
lret
aam
cmp
jp
sub
loope
pushw
jp
mov
insb
ljmp
mov
test
adc
mov
cmpb
std
push
scas
cmp
sbb
mov
fucom
fdivs
pop
dec
xchg
pop
sbb
push
add
hlt
xchg
adc
xorl
add
mov
or
addb
les
xchg
popf
sub
push
fwait
sbb
in
cwtl
push
push
fcmovu
ret
xchg
enter
aas
inc
jmp
andl
outsl
lahf
test
insl
xchg
sbb
jno
xor
xor
gs
jge
leave
es
inc
xchg
imul
fs
loop
loopne
ret
pushf
into
push
pop
inc
pop
or
sub
pusha
lcall
xor
or
aad
sbbl
test
and
ljmp
inc
scas
or
mov
dec
cmp
mov
dec
bound
fwait
inc
daa
sbb
cmpl
gs
hlt
mov
sub
and
mov
lock
pop
xor
push
js
mov
add
iret
xchg
mov
push
shl
adc
mov
dec
adc
mov
iret
in
sub
lret
repnz
dec
popa
pop
lea
jmp
addr16
sbb
loopne
mov
pusha
sbb
ljmp
jb
or
jg
pop
cs
push
pop
ss
jmp
sbb
add
pop
std
mov
insl
inc
dec
or
push
out
enter
mov
mov
shlb
mov
inc
adc
mov
inc
push
sbb
stos
sti
shlb
lods
in
and
cmp
xchg
push
shlb
jmp
ret
jmp
sti
out
int
xchg
rcl
outsb
inc
gs
fimull
cmp
mov
cmp
loopne
popa
das
cmpsb
aaa
mov
test
pusha
rolb
sbb
out
shll
mov
mov
adc
mulb
sbb
out
pushf
xchg
jl
cld
pop
fcoms
in
and
inc
adc
fs
iret
hlt
cwtl
jmp
dec
xchg
and
jp
subb
adc
or
sub
test
sbb
adc
fnstcw
cmpb
cld
pusha
repz
dec
fsub
lfs
test
jle
sub
push
cmpsl
mov
fwait
add
and
dec
leave
scas
xor
fldcw
add
mov
push
pop
sti
mov
cmp
fisubrl
push
xchg
addr16
fdivrs
cmpl
aam
mov
test
pusha
popf
push
out
movsl
pop
xor
inc
jns
bnd
pop
inc
mov
stos
repz
mov
jno
inc
jne
outsb
xlat
sbb
daa
pop
out
mov
push
inc
imul
fwait
arpl
mov
mov
movsb
test
outsb
ficomps
jecxz
in
push
xchg
mov
cs
je
jmp
and
xor
or
bound
add
and
lods
xchg
mov
shll
stos
or
int3
push
leave
inc
dec
xlat
lock
sbb
push
adc
dec
push
mulb
das
add
inc
mov
movsb
in
xor
frstor
sarl
mov
dec
lcall
xchg
popa
xor
insl
mov
jbe
sti
test
jmp
jmp
sub
push
dec
cmpsl
jo
sahf
xchg
mov
inc
cmp
add
leave
push
sbb
sub
adc
into
mov
scas
cmp
outsl
inc
je
out
fnstsw
and
or
and
mov
sub
shrb
pop
push
hlt
push
adc
jp
push
fdiv
shll
mov
push
jg
jae
lods
les
daa
jle
pop
jb
dec
stos
filds
in
lahf
push
add
jns
fstpt
ret
xchg
jo
cli
dec
sti
sahf
data16
popa
sub
popa
ss
cmc
aas
aam
adc
mov
push
pop
cld
cmp
jecxz
icebp
mov
push
hlt
inc
test
mov
xchg
xchg
test
jne
and
jge
loope
inc
or
lret
call
ljmp
push
ds
inc
inc
mov
sub
jae
jmp
pop
movsl
cmpsb
adc
insb
leave
cs
div
cmp
nop
xor
jo
push
mov
outsl
pusha
ficomps
dec
lea
add
xlat
movsb
testb
cmpsl
stos
jmp
popa
cmp
movsl
hlt
mov
push
hlt
lcall
cmpsl
sti
pusha
andb
and
stos
or
fidivrs
or
xchg
jmp
xchg
fldt
test
mov
push
or
cmpsl
out
push
and
mov
and
sahf
xchg
addr16
mov
push
mov
nop
es
and
scas
pop
ret
adc
push
xchg
add
xchg
lea
xor
and
mov
fdivs
inc
xor
cmpsb
sbb
mov
mov
insl
or
jge
xor
sbb
jno
push
cmp
jecxz
or
mov
jmp
pushf
in
push
or
mov
sbbl
mov
iret
dec
push
mov
mov
inc
inc
mov
mov
adc
xor
sub
lcall
xlat
and
pop
xchg
cwtl
test
out
adcl
sbb
stos
mov
leave
jns
es
inc
das
push
pusha
lahf
inc
xchg
out
imul
adc
jno
shl
in
ja
or
out
je
mull
cmp
call
clc
sbb
xchg
inc
and
fstpt
aam
xchg
cld
mov
mov
mov
imul
int
in
ret
push
push
imul
fdiv
popf
xchg
cmpsb
rolb
jnp
xchg
jbe
pushf
and
xchg
daa
inc
outsb
xchg
fisttpl
jecxz
push
lret
xlat
sub
jp
pop
sub
inc
dec
xor
mov
or
hlt
jb
push
js
test
or
js
sub
pop
push
lods
mov
mov
xchg
cmp
inc
imul
inc
jb
jmp
shrl
mov
js
or
mov
mov
sbb
dec
and
jle
aaa
dec
cld
cmc
lret
dec
adc
iret
imul
adc
add
int
jmp
and
repz
or
das
nop
fimull
imul
lahf
mov
jg
xor
out
enter
les
int
add
mov
stos
mov
fwait
cmpsl
xor
pop
mov
sub
mov
xchg
mov
stos
jns
nop
xor
sub
cmp
in
cmp
shlb
and
fucompp
sub
repz
les
imul
xlat
xchg
dec
jle
aaa
out
int
or
fs
popa
decl
cwtl
popa
cmc
pop
dec
and
mov
inc
sarl
lret
add
ffree
xchg
pop
cmpsb
loopne
cmpsl
or
adc
pop
or
sbb
arpl
adc
arpl
jle
nop
fcomps
inc
mov
ret
sbb
dec
mov
aaa
jae
pop
arpl
daa
stos
adc
test
addb
je
cmpsb
ds
push
adc
lcall
loopne
orl
filds
maskmovq
idivl
int3
push
pusha
mov
insb
pop
dec
mov
mov
jbe
imul
faddl
jns
mov
scas
cmp
popf
jl
ret
iret
test
movsl
aaa
xor
mov
out
orl
lea
insl
out
sbb
push
mov
stos
ficoms
call
cli
pop
cmp
xor
push
repz
test
and
rorb
mov
ljmp
sbb
dec
or
mov
out
jmp
jge
mov
cltd
pop
test
movsb
sbb
push
test
lds
es
imull
clc
pop
jo
xlat
add
hlt
or
subb
jp
dec
push
inc
pop
repz
scas
sarl
outsl
nop
mov
push
dec
or
xor
dec
arpl
jmp
cmc
out
stc
enter
or
mov
and
sbb
push
sub
xchg
mov
cltd
adc
push
cltd
shrb
push
inc
out
or
pop
rcll
fs
add
mov
loopne
sbb
scas
js
test
dec
or
mov
scas
notl
sub
arpl
outsb
jmp
xor
mov
imul
mov
call
jae
nop
inc
mov
pusha
push
pop
les
ret
arpl
shrb
rolb
xchg
loope
xchg
pop
add
push
push
mov
xlat
out
adc
xor
gs
fisubrs
add
pop
xor
push
fcomps
sahf
daa
xlat
imul
js
fwait
js,pn
sti
lret
mov
in
roll
dec
cli
lods
pop
cs
rcll
nop
pop
scas
lods
movsb
jg
xchg
xor
inc
or
mov
pop
xlat
adc
and
dec
mov
sbb
add
imul
cmp
and
lea
push
stc
inc
xchg
aas
and
inc
in
data16
cmc
and
mov
lret
inc
push
push
ja
pop
adc
sbb
mov
dec
sub
and
xchg
cltd
jg
jmp
stc
sbb
ret
jbe
jge
mov
push
lods
in
fnstenv
sarb
mov
dec
cwtl
adc
mov
fs
cltd
in
and
or
cmp
sti
push
push
stos
cli
sahf
testl
in
xor
mov
sti
out
xor
adc
jecxz
mov
mov
add
js
mov
mov
les
mov
in
add
push
inc
sahf
dec
out
adc
jmp
inc
mov
push
mov
mov
xchg
mov
mov
mov
lds
jno
and
imul
imul
mov
cmp
jne
jg
into
lods
movsl
mov
ljmp
dec
rcr
mov
les
and
in
adc
push
dec
popf
dec
je
loop
ss
fidivrl
xchg
mov
adc
pop
divb
outsl
movsl
call
nop
inc
pop
fistl
sub
push
gs
adc
in
sbb
jae
push
popf
dec
adc
push
into
subb
in
jns
out
int3
or
cmp
push
imul
push
in
in
xchg
xchg
test
adc
imul
cmc
out
jecxz
out
push
adc
sub
pop
adcb
adc
into
mov
test
fidivs
ljmp
and
dec
or
std
out
pop
sub
bswap
jmp
sbb
push
rsqrtps
insl
mov
lods
repnz
and
inc
mov
test
adc
int
cmpsl
jmp
fcomps
pop
pop
cli
in
std
rcr
xor
sub
sub
stos
xchg
adc
jl
lods
int3
adc
and
pop
mov
adc
into
jae
movl
mov
mov
xlat
gs
pop
aas
lret
inc
push
outsl
jo
pusha
int
arpl
sbb
cmpl
mov
xchg
cmpb
mov
push
adc
loop
pop
or
enter
adc
mov
add
scas
test
lret
push
mov
out
mov
push
cmp
rcrb
aas
add
xchg
jns
adc
pop
push
or
mov
push
jnp
and
pop
shll
mov
dec
fildl
dec
jecxz
in
mov
fldenv
std
add
aam
fs
push
or
sub
mov
in
xchg
sbb
inc
les
mov
out
aas
push
sahf
stos
idivb
jne
add
or
jp
cmc
mov
into
cmp
repz
or
and
dec
jle
and
and
push
aam
xchg
ret
test
dec
rol
mov
loopne
mov
and
mov
cmp
pop
ja
clc
xchg
sbb
in
jbe
mov
pop
cltd
daa
push
in
rclb
fnsave
jo
int3
ljmp
dec
insb
pop
ljmp
mov
fstpt
jnp
adcb
fcompl
lods
push
lods
inc
sbb
and
cmp
addr16
int3
sbb
inc
xchg
mov
and
inc
push
mov
enter
movsb
or
xor
push
test
mov
test
push
aad
and
xor
lahf
les
orb
and
mov
mov
cmp
in
jae
stos
xchg
inc
into
stc
sub
cmpsb
lahf
dec
js
mov
or
ja
adc
pop
stos
jnp
pusha
pop
addr16
loope
inc
test
cmp
cltd
repz
jne
and
push
fistl
dec
pop
mov
icebp
pop
scas
cwtl
mov
loopne
jl
adc
add
out
fisttpll
jge
into
pop
add
push
push
in
mov
pop
pop
sar
dec
jno
mov
out
dec
pusha
aad
sbbb
xor
ljmp
or
adc
sub
ljmp
lret
xchg
jb
jle
int
sti
mov
xchg
daa
lret
push
or
inc
stos
push
mov
xchg
jecxz
sahf
sub
jmp
jle
sbb
push
mov
shlb
cltd
and
jns
jns
jl
dec
adc
jecxz
adc
push
enter
cmpb
lahf
jo
int
mov
xor
push
lods
pop
idivl
pusha
rolb
sbb
lea
rorb
jne
sbb
sub
out
call
jge
jne
cli
jno
cmp
push
mov
mov
testb
dec
adc
sbb
jns
adc
push
sub
push
mov
ljmp
pop
loopne
inc
jmp
repz
xor
jg
arpl
adc
ljmp
add
mov
cmp
cmp
mov
stos
mov
xchg
cmp
lret
fisubs
xchg
pop
sbb
add
pop
mov
mov
cwtl
push
les
dec
addl
sbb
jmp
mov
sbb
pop
jecxz
divb
cmc
stos
insl
jno
inc
mov
loope
add
pop
pop
mov
inc
shll
mov
pop
add
push
stos
fdivl
sbb
jp
add
cmc
sar
jl
xor
jg
pop
lcall
daa
push
aaa
xchg
loopne
mov
inc
insl
les
fistpl
mov
imul
mov
icebp
loopne
adc
fdivs
inc
and
pop
jb
jb
cmpsb
insb
mov
adc
sarl
mov
jecxz
pop
mov
lret
mov
jnp
xor
test
in
push
push
sub
pop
jns
loop
mov
pop
js
xchg
dec
sahf
enter
rcrl
adc
mov
andl
push
movsl
scas
loopne,pn
jl
sbb
sub
mov
icebp
pop
cltd
xor
arpl
adc
jmp
scas
push
gs
in
jle
push
in
adc
cmp
push
cmc
mov
idivl
loopne
rcrb
xorb
xchg
add
out
outsl
and
and
adc
out
ret
jl
scas
sub
enter
mov
int
in
push
rcll
add
fisttpl
jmp
or
sbb
cmc
cltd
jnp
add
incl
inc
sti
xchg
ret
jmp
lock
fcoms
xlat
or
test
lods
sub
in
jmp
push
insl
or
push
stos
sub
outsl
adc
xchg
mov
gs
cld
dec
addl
sub
idiv
je
dec
mov
popa
cmp
int
rcrl
mov
das
js
mov
in
lret
fisttps
mov
push
leave
repnz
sbb
xor
push
js
test
inc
bound
sbb
sub
cltd
jno
lcall
js
loop
add
push
loopne
push
inc
xchg
jne
fcmovnu
dec
test
mov
ds
mov
cmp
xorb
adc
lods
xor
xchg
jae
push
loope
dec
push
pop
scas
xchg
cmp
inc
mov
repz
mov
mov
sub
jle
push
or
mov
ljmp
loopne
das
dec
inc
jmp
xor
xor
popf
lods
pusha
bound
jp
mov
jp
js
xchg
add
mov
mov
sbb
aam
xlat
push
jmp
ja,pt
mov
addl
cmp
inc
pop
dec
iret
pop
insb
ficomps
scas
dec
into
popf
inc
movsl
dec
rcrb
ffree
mov
inc
mov
inc
fstl
mov
fcoml
adc
mov
fs
fwait
shrl
xor
pop
pusha
out
into
fsubrs
lcall
dec
inc
stc
loop
and
jns
mov
nop
sbb
out
xorl
int3
jp
pop
shlb
jae
xchg
jle
lcall
cmp
pop
adc
pop
inc
into
repnz
or
pop
loope
in
mov
add
ja
adc
pop
xor
cltd
mov
dec
les
fstpt
leave
inc
rcll
addr16
dec
repz
cmp
and
jl
push
push
mov
cmp
ret
cmpl
lahf
icebp
mov
je
cmpsl
ret
xor
lods
dec
mov
jo
mov
push
add
mulb
pop
xor
js
and
lahf
mov
stos
js
sahf
sbb
in
int3
push
movsbl
sarl
gs
cmp
hlt
andb
xchg
shr
jecxz
cmp
inc
cmpsl
mov
dec
or
mov
and
adc
xchg
jb
jno
shr
lods
icebp
and
and
dec
pop
or
xchg
and
push
repz
ja
aas
jge
xor
daa
imul
lahf
stos
jl
push
test
adc
add
stos
cld
xchg
rclb
movsl
gs
loop
jns
add
xchg
push
xor
imul
sarl
ds
jp
ret
or
ret
xor
add
fstpt
mov
data16
test
cmp
add
or
sbb
mov
loope
jb
sub
lret
movsb
mov
pop
mov
fimull
mov
pushf
jecxz
or
dec
nop
icebp
push
push
mov
cltd
mov
sti
sbb
out
aas
xor
fs
arpl
arpl
jnp
mov
or
aaa
or
int
inc
nop
push
jae
push
mov
ja
lock
sbb
or
or
dec
insb
cmpsl
in
push
add
dec
adc
mov
push
test
mov
cs
sbb
mov
sbb
movsl
aad
sub
sbb
lret
xlat
idiv
fcoms
jg
xor
dec
cld
mov
ret
bound
sub
mov
pop
push
aam
repz
pop
xor
scas
out
imul
dec
jnp
xor
repnz
pop
repz
popa
notb
dec
pushf
subb
dec
lea
filds
ds
shlb
out
sahf
push
cmp
cmp
ret
lock
lahf
out
and
sub
or
pop
dec
fs
test
ret
cmp
cs
movsl
mov
jae
loopne
jo
push
push
xor
mov
add
addr16
scas
dec
lret
pop
aad
adc
push
sbb
push
cmp
enter
mov
fnstcw
jp
pop
std
stos
cmp
inc
popf
cmp
adc
mov
cmpsl
or
test
jmp
js
mov
xchg
adc
fisubl
fcompl
sbb
jp
outsb
leave
in
mov
insl
nop
jecxz
add
stc
fwait
mov
pop
fdivrs
fbstp
shr
jns
stos
scas
test
mov
rcrb
dec
cs
or
outsl
clc
jno
push
imul
cmp
push
or
sahf
push
sar
xor
lods
mov
pop
add
jno
ficomps
lods
and
add
and
xor
sub
pusha
mov
pushf
adc
push
rorb
pop
daa
xor
leave
daa
in
ljmp
cli
mov
out
xor
jae
out
mov
daa
push
jmp
pop
or
sbbl
mov
mov
pop
xor
cmp
repnz
lret
rcr
xchg
inc
cmpsl
stc
jno
sbb
fsts
subl
aam
fs
inc
dec
sub
mov
push
lock
inc
imul
fimull
xchg
mov
test
es
clc
cltd
jno
and
lret
pop
enter
leave
pop
mov
xlat
jbe
and
sar
mov
pop
adc
adc
mov
add
xchg
arpl
scas
sarl
dec
push
dec
ja
push
and
xchg
mov
and
sbb
ds
lods
mov
add
nop
aad
mov
xchg
xchg
daa
or
sbb
add
inc
jmp
movsb
xchg
jno
push
mull
mov
cwtl
lods
cmp
fs
dec
add
or
mov
arpl
mov
cmp
xchg
cmp
pop
inc
insl
mov
xor
movsb
cwtl
sbb
mov
or
or
jne
lret
mov
mov
mov
fwait
push
and
scas
add
xchg
jnp,pn
mov
cwtl
adc
or
sub
mov
bound
repnz
in
rorl
imull
hlt
fbld
mov
int
lods
fstpl
adc
scas
pusha
imul
adc
xor
cmp
cmpsl
mov
int3
fs
in
jp
or
sbb
xor
xchg
fcoms
mov
adc
mov
psrld
jo
jae
sub
in
cmpsb
fwait
push
aad
cmpsb
xor
sub
adc
push
in
test
add
add
mov
insb
cmp
push
pop
fs
rcr
mov
push
xchg
cmpsb
jp
adc
jae
in
add
pop
lea
push
divl
or
push
cld
mov
int
mov
adc
lock
and
adc
and
xchg
and
fildll
sbb
push
pop
mov
mov
or
jno
xchg
jg
dec
dec
call
shll
cmp
fwait
mov
inc
add
jb
test
out
jg
int3
lock
seta
xchg
pop
xor
ja
or
out
das
mov
mov
add
psrld
pop
push
popf
inc
mov
pop
xor
arpl
cmp
push
andb
add
cmp
pop
xchg
mov
pop
jno
idivl
mov
or
mov
cli
bound
inc
pop
adc
jmp
and
bound
sbb
lret
mov
insl
mov
imull
roll
bnd
lods
adc
adc
pop
dec
xor
pop
mov
cli
filds
xchg
mov
mov
xor
fwait
cmpsb
fwait
sbb
jle
sbb
outsb
mov
push
aam
jns
out
shlb
test
leave
int3
add
out
movsl
and
test
cmpsb
into
int3
aad
ficomps
lods
jmp
xor
sbb
iret
js
bndstx
xchg
and
adc
or
cmpsl
push
pop
imul
or
cmp
or
xchg
scas
call
mov
fs
push
xlat
mov
mov
popa
and
push
call
xor
aaa
in
test
pop
icebp
arpl
cmp
cmp
imul
fiadds
flds
push
add
adc
fsts
ret
popl
insl
jnp
cwtl
nop
imul
data16
pop
movsb
pop
mov
xor
xchg
sbb
mov
inc
pushf
dec
or
iret
xchg
iret
mov
jbe
mov
fwait
dec
jecxz
mov
xabort
aad
sbb
xor
inc
out
mov
shrl
mov
std
sbb
mov
jp
push
pop
out
es
add
ret
jle
loope
push
cmpsl
out
fcom
pop
sahf
push
arpl
cmp
out
jp
mov
movsl
jl
sbb
cmc
adc
lds
xchg
jg
cmp
enter
es
in
and
pop
aam
pop
sbb
lock
or
push
push
sub
push
lods
dec
push
cmc
and
jmp
xchg
lock
xchg
cmp
inc
dec
lahf
test
or
loopne
mov
add
fstpl
icebp
and
jno
dec
pop
out
outsl
jns
cmp
adc
out
ss
scas
add
sub
out
lret
mov
fbld
dec
xchg
sbb
fwait
es
inc
cmp
mov
nop
mov
xchg
cmovge
hlt
inc
mov
sub
xlat
popf
add
jne
add
and
xorl
hlt
lds
or
jnp
mov
mov
mov
jmp
push
xchg
inc
mov
cmp
fldcw
or
mov
fldcw
pop
fnsave
push
cmp
jecxz
scas
jb
jne
insb
lods
jnp
jne
fcom
jo
xor
dec
jne
jl
addl
insl
mov
dec
fildl
cmp
jmp
xor
adc
orl
loopne
imulb
call
jo
stos
sti
or
or
jmp
push
cltd
mov
adc
or
mov
mov
xchg
test
cwtl
cmp
es
inc
lret
imul
rcrb
jmp
mov
cli
cmp
ja
mov
cwtl
mov
xor
insl
xor
cli
ds
shrb
icebp
sub
cltd
sub
mov
cmc
xor
icebp
testl
shl
cmp
add
pushl
adc
iret
ret
jmp
out
sbb
lea
or
cmp
sub
sbb
mov
pop
pop
add
jle
inc
push
imul
leave
ss
pop
in
arpl
out
imul
mov
cmp
adc
lods
sarl
push
inc
aas
mov
mov
lock
out
adc
fistl
adc
je
jge
mov
in
mov
leave
sbb
pop
aas
cmpsb
cmpsb
jge
enter
or
jne
push
inc
out
scas
or
ds
push
clc
rcr
or
sub
jno
scas
sti
xchg
imul
aaa
popf
jb
int3
repnz
inc
jp
mov
add
loopne
ja
or
sub
push
ret
out
add
cs
call
dec
les
stos
adc
cmc
jle
adc
inc
mov
into
hlt
xlat
xor
test
xor
sub
aaa
into
aas
adc
xor
xlat
mov
jp
mov
popa
iret
push
push
pop
cmp
aaa
inc
mov
inc
lock
add
xchg
gs
dec
out
sbb
scas
mov
and
int3
push
ret
cmp
jno
cmp
cltd
xchg
mov
in
inc
cmc
push
out
mov
mov
add
loope
cli
movsl
and
dec
rcrl
cltd
and
sbb
xchg
not
sbb
into
jno
lea
dec
pop
addl
mov
clc
inc
pop
pop
fcmovnu
filds
and
inc
pop
sbb
dec
js
add
ret
mov
sti
int3
push
pop
sub
sarb
xchg
mov
movsl
das
out
test
mov
push
xor
out
jno
aad
std
or
jbe
xchg
lods
push
out
and
sub
sbb
adc
fists
dec
mov
xchg
cs
fldl
nop
out
outsb
in
in
sbb
leave
push
outsl
push
sub
rcl
mov
in
fimuls
cmp
mov
sahf
cmp
int3
fisubl
scas
lcall
jne
add
das
sub
es
jecxz
pop
cmp
mov
cmp
out
push
jbe
lods
xor
push
sub
rcrl
mov
xorb
subb
sbb
mov
lret
pushf
push
loopne
mov
lods
lods
sub
sub
repz
jns
cs
lahf
push
mov
scas
fstps
push
pop
push
jl
mov
add
jg
xor
sub
or
ret
xchg
adc
mov
adc
xchg
add
shll
jp
sub
jbe
aaa
jbe
inc
fwait
push
fmul
enter
jno
jge
and
test
movsb
jnp
pop
mov
ds
popl
push
int
std
insb
jg
dec
cmp
ja
lods
popa
cmp
scas
sub
mull
fwait
sbb
cmp
dec
test
dec
mov
enter
pop
sub
add
xlat
cmpsb
dec
ret
pushf
push
int
push
loope
add
xchg
cmp
adc
cmp
mov
inc
add
mov
mov
cmp
rclb
pop
cwtl
push
mov
daa
jno
mov
push
mov
test
mov
push
pop
shll
pusha
imul
jg
loop
push
push
loop
pop
xlat
jbe
insl
sbb
shrb
in
orl
lcall
scas
pop
mov
sub
pop
add
cltd
mov
push
mov
add
jp
aad
loope
lods
or
loop
sbb
mov
es
sub
and
add
cltd
scas
push
mov
test
das
lcall
or
loopne
ss
imul
xorb
or
push
pop
mov
sub
rcrl
dec
loop
add
xor
mov
fstl
data16
mov
add
movsb
ljmp
shl
ret
pop
lcall
movsl
dec
cmp
add
loopne
xlat
mov
dec
ret
cli
cmovae
int3
inc
cmpsl
push
and
aad
xor
mov
mov
hlt
xor
xchg
sbbl
pushf
das
sub
adc
add
jecxz
outsb
sbb
mov
fst
or
add
jge
rclb
lret
push
dec
xor
je
pop
adc
nop
jg
xor
sub
pop
mov
add
loope
dec
cmp
mov
loope
outsl
mov
mov
mov
adc
in
mov
ljmp
and
je
sahf
test
adc
adc
aam
xchg
fucom
dec
and
and
repz
sub
fsts
and
mov
cmp
jmp
scas
xor
jnp
jo
jle
aas
shr
cli
push
or
rcl
mov
add
mov
sbb
adc
sub
out
mov
movsb
icebp
popf
data16
pop
clc
dec
js
inc
pop
xlat
mov
sbb
xor
pop
aam
ret
sahf
cmp
mov
movsb
iret
lcall
dec
push
insb
gs
jge
mov
icebp
aaa
nop
adcl
sub
mov
je
push
xor
das
pmuludq
icebp
adc
lods
orl
loopne
inc
jnp
jge
mov
push
cmpsl
rorl
rcll
push
ljmp
ljmp
jge
fistl
mov
mov
sub
sti
dec
sbb
in
inc
mov
xor
das
vhaddpd
fcoms
test
out
mov
ficoml
sbb
movsb
mov
or
movsl
inc
pop
shr
dec
xchg
out
shlb
or
setbe
xchg
add
clc
sti
pop
dec
add
xor
mov
dec
repnz
add
xchg
movsl
out
sub
xchg
je
enter
dec
xor
pop
mov
lods
mov
push
push
sbb
dec
fiaddl
xchg
pop
xor
push
lock
mov
cmp
frstor
adc
pusha
rcl
push
adc
xchg
mov
sbb
nop
jae
lea
shlb
mov
lods
jmp
in
sbb
cmpsb
lds
or
cmp
add
lret
sbb
xchg
xchg
in
in
fiaddl
push
movsb
mov
mov
adc
adc
push
gs
dec
sub
pop
das
adc
lret
mull
mov
or
adcl
imul
roll
out
negl
ret
rolb
xor
jmp
lods
jbe
push
mov
cmp
pop
push
mov
sbb
movsb
push
rorl
imul
mov
mov
fstl
inc
push
shlb
fidivrl
cmp
mov
inc
xor
adc
mov
push
pop
xchg
mov
jae
mov
adc
jno
push
aam
push
cmc
cmpsl
inc
xor
inc
fstps
mov
mov
xchg
daa
sbb
cld
test
xchg
mov
shl
mov
xchg
aam
pop
xor
xchg
gs
sbb
dec
xchg
jmp
pop
xor
jne
shll
jo
cli
add
out
and
mov
pusha
jnp
inc
lea
add
imull
adc
call
loopne
fs
push
lea
iret
std
add
inc
imul
mov
sub
mov
std
xchg
xor
icebp
mov
mov
mulb
in
in
mov
lods
shll
jmp
data16
arpl
hlt
fucomi
push
fsub
ror
add
shrl
lahf
jge
xchg
arpl
inc
adc
adc
push
movsb
hlt
cmp
ret
into
xor
sbb
inc
mov
int
pusha
adc
and
push
and
aas
xchg
movsb
xchg
scas
pop
sub
imul
xor
and
outsl
rcll
inc
cmp
fidivl
jne
lods
add
rcr
sbb
dec
test
aas
cli
push
mov
push
jl
scas
popa
pop
decl
fsubrl
cmpsb
xchg
leave
jp
in
mov
rcl
push
addb
mov
int
popa
jmp
scas
les
ss
fimull
je
fxch
sbb
cmp
mov
test
negl
mov
shrl
js
push
stos
jg
xchg
andl
xor
cmpb
fwait
inc
or
push
inc
inc
cmpsl
mov
repz
in
fs
insb
xchg
adc
lahf
push
push
out
cs
iret
outsl
mov
je
mov
fsubrs
jmp
push
nop
pushf
sbb
pop
test
das
xchg
insl
add
sbb
jae
aas
fnstcw
add
cmpsb
pop
loop
inc
shrl
mov
mov
ds
lcall
cmc
xchg
mov
aaa
mov
out
lret
cmpsl
jp,pt
insb
jno
and
shlb
jle
dec
sahf
inc
pop
dec
or
fadds
jp
dec
lds
rcll
mov
inc
add
sub
inc
pop
pusha
cmpb
nop
pushf
outsb
es
out
and
in
push
popf
sub
or
inc
les
add
jno
push
lods
cmp
push
bound
and
jmp
sub
jg
movsb
sbb
mov
aas
ret
xor
addl
lea
jae,pt
or
das
inc
gs
inc
in
xor
pop
jns
fisttpll
pop
lock
les
loop
sbb
clc
push
add
jl
xchg
lea
lds
jmp
fbld
dec
clc
in
repz
or
clc
aas
xor
aaa
mov
mov
pop
xlat
dec
in
inc
decb
add
jne
cltd
fdivl
jl
ss
cmpsb
popf
mov
cmp
loop
xchg
add
mov
xor
push
jo
or
xchg
pop
jo
and
or
pop
lock
inc
mov
jne
and
pop
mov
call
mov
cmp
outsl
jle
push
cmc
cmpsb
add
add
xor
test
inc
dec
mov
sub
cmp
sbb
or
push
dec
ds
cmp
stc
ret
movsl
sbb
pop
ret
pop
mov
leave
js
xchg
popa
xorb
add
dec
scas
jns
or
or
cbtw
ljmp
movsb
mov
sarl
xchg
mov
daa
dec
xchg
or
arpl
lret
add
les
adc
inc
xor
movl
mov
jno
fisubrs
push
xor
loop
inc
jo
inc
xor
cmp
dec
jmp
mov
mov
pop
lret
cmp
shlb
mov
leave
pop
xchg
sbb
jp
test
int3
outsb
jne
and
or
int3
push
mov
or
int
jp
add
std
outsl
jne
sub
imul
or
sarb
xchg
inc
pop
push
rorb
xor
jb
lds
mov
aas
pop
cmpb
aaa
cld
sbb
sub
mov
add
std
jle
dec
dec
fwait
addr16
inc
mov
arpl
jecxz
movsb
sub
adcb
mov
into
cmp
push
xchg
es
jbe
je
push
pusha
jmp
and
rcrb
sub
aam
iret
and
adc
xor
add
sbb
and
icebp
gs
iret
pop
xchg
pop
popf
call
cmpsb
aad
pop
lret
cs
scas
call
push
test
and
pop
jnp
pop
call
dec
scas
shll
cltd
jo
movsb
sti
pushf
push
cld
andl
sub
mov
cmp
into
aaa
mov
xchg
jecxz
cmc
sbb
lcall
fiaddl
stc
cmpsb
cmp
int3
xor
int
fnstsw
decb
js
and
sub
imul
push
ja
xchg
mov
lds
xchg
rcl
out
mov
sub
ficoms
cli
mov
xor
mov
or
push
nop
pushf
aas
dec
push
sbb
insl
xchg
mov
aad
add
test
dec
fwait
pop
lret
sub
ret
jae
sbb
je
int
lret
sahf
add
push
fildll
test
scas
loopne
sahf
je
loopne
sahf
or
mov
or
jl
inc
out
xlat
cmp
mov
das
cli
cmovne
pusha
lods
adc
jns
rorl
adc
nop
inc
stc
mov
ffree
jl
rolb
cmp
mov
push
xchg
and
lahf
mov
mov
mov
inc
and
or
push
and
xchg
hlt
cmpl
movsb
loope
jge
xlat
add
aas
add
inc
add
adc
cmpsb
mov
add
push
les
fistpll
test
pop
sub
sbb
jecxz
scas
lods
outsl
addr16
pop
sub
rclb
push
push
inc
std
jae
loop
js
mov
sbb
cld
cmpsb
mov
in
dec
lods
push
dec
jg
insl
stos
cmc
sub
mov
mov
xor
and
les
mov
aad
dec
cs
sbb
mov
lahf
std
add
push
adc
sub
sub
fmulp
or
repz
sbb
call
lods
cmp
test
xor
insb
pop
movsb
mov
mov
mov
mov
xchg
xor
inc
and
iret
insl
lcall
mov
add
add
sti
jno
outsl
jnp
cmp
test
mov
iret
pop
outsl
mov
mov
jnp
xorl
dec
cmp
stc
movsl
testb
aad
xlat
add
mov
add
mov
cmp
add
cmp
adc
lret
cmp
jne
inc
addr16
inc
push
stc
icebp
pop
movsb
insl
jns
pop
sahf
cmp
dec
push
andb
ret
insb
ret
mov
loop,pn
data16
mov
jl
push
mov
lods
sub
dec
mov
pop
nop
mov
in
lea
add
aaa
inc
mov
fxch
or
cwtl
and
add
push
adc
out
sbb
pop
ret
loopne
push
cltd
xchg
pop
aam
and
in
and
mov
mov
in
cmp
out
lret
sbb
cltd
mov
dec
lods
inc
pop
pop
adc
stos
iret
lock
sub
jmp
les
mov
ds
xor
pop
and
or
int
xchg
push
ja
lret
add
cwtl
sub
pusha
test
xchg
rcll
movsb
add
pushf
es
mov
sti
cmp
lret
mov
sbb
mov
dec
inc
lds
out
in
add
imul
cli
das
sysret
mov
lds
cmpsb
mov
mov
mov
sub
mov
sbb
xor
sbb
std
cltd
cmpsb
dec
xchg
or
mov
pop
mov
or
add
test
adc
lret
fidivrl
repz
int
pop
xchg
and
cmp
sbb
decl
aas
or
movl
lods
lods
push
and
in
jg
pop
push
ja
and
mov
addr16
inc
iret
cld
enter
mov
out
mov
push
ljmp
mov
inc
adc
sbb
adc
movsb
mov
insb
data16
jo
and
inc
cld
icebp
fnstcw
jle
ss
mov
pop
in
dec
cs
inc
mov
xchg
sbb
inc
dec
lcall
xor
push
insb
cmp
mov
or
jl
sarl
cmpsl
mov
push
out
enter
push
lret
mov
push
cmc
xor
and
int3
icebp
stos
sbbb
push
nop
outsl
or
daa
or
push
nop
jo
adc
mov
mov
sbb
lahf
add
xor
lea
mov
pop
cld
inc
jbe
pop
int3
pop
lret
stos
xchg
sahf
adc
data16
out
inc
cs
out
fs
lahf
ja
mov
out
andb
ja
push
mov
andb
adc
cltd
lods
mov
mov
fcoms
xchg
or
je
cli
les
add
aas
push
rolb
and
cmpl
cmc
sub
mov
in
sub
inc
std
pop
add
adc
nop
aas
outsw
orl
call
cmpsl
cltd
lret
add
mov
lds
cmp
or
lea
test
jns
lods
pop
pushf
mov
mov
mov
fsub
repz
jne
daa
imul
mov
adc
arpl
ret
push
xchg
xchg
sub
adc
mov
mov
scas
bound
fxam
call
sbb
ficoms
imulb
dec
fidivs
mov
xor
mov
push
mov
sbb
popf
mov
hlt
xchg
rorb
jl
adc
add
imul
int
iret
adc
lret
stos
jl
aaa
dec
mov
pusha
jo
mov
mov
mov
add
pop
test
mov
fadds
aad
mov
push
addr16
adc
les
shrl
cmc
sbb
ljmp
insb
push
jle
or
pop
xor
lock
cmp
jmp
inc
xor
add
push
dec
dec
movsl
adc
stc
push
inc
push
lds
mov
pop
out
popf
pop
xor
pop
xchg
cwtl
sbb
mov
loope
jl
xor
lock
xchg
mov
jecxz
or
inc
aad
pop
adc
pop
in
push
out
loopne
js
push
jb
mov
jg
push
pusha
fidivrs
inc
imul
mov
out
in
daa
in
push
cmp
enter
in
sub
mov
mov
push
sub
sahf
cmpsb
dec
nop
fwait
mov
iret
adc
popf
mov
repnz
mov
pop
loop
xlat
in
mov
enter
push
and
dec
sub
push
jmp
pop
pop
clc
cmc
filds
out
cmp
insw
inc
jl
mov
cmpsb
xlat
jge
mov
in
and
push
inc
das
and
xchg
xchg
jae
sbb
cs
mov
push
loopne
stos
adc
or
cmc
push
push
dec
fwait
and
hlt
push
xchg
mov
ljmp
imul
ret
adc
outsb
push
leave
dec
jg
dec
sub
loope
std
sahf
test
daa
cmp
jno
cmp
lret
js
add
bound
fstl
mov
pop
mov
enter
jbe
imul
lret
out
and
test
xchg
or
cmpsl
mov
pop
insb
inc
push
daa
imul
push
cmp
or
cltd
mov
mov
in
push
cmp
lcall
mov
das
jne
mov
fldenv
mov
xor
fstp
sbb
data16
xchg
xor
inc
push
pop
sbb
dec
sarl
cmp
pop
mov
outsl
adc
loop
xchg
int3
adc
xor
and
addl
mov
fbstp
mov
sbb
les
shlb
sub
adc
popf
mov
aaa
dec
loop
jecxz
dec
mov
dec
sub
add
fs
add
test
jns
mov
xchg
jo
and
jo
lret
adc
sahf
inc
insl
pop
inc
sbbl
adc
and
sub
mov
push
pusha
into
push
inc
das
sarb
adc
add
inc
ret
or
xchg
cwtl
scas
lods
adc
lods
or
adc
push
sti
push
pop
mov
pushf
sub
pop
sub
lock
in
adc
lcall
aam
jge
inc
cmp
push
xlat
outsl
cmc
iret
sarb
xchg
xchg
xor
jnp
pop
arpl
inc
cmpsb
dec
decl
and
sbb
mov
add
mov
xchg
mov
das
shlb
xchg
daa
jae
ret
push
loope
movsl
insl
stos
push
xchg
and
fs
cmp
and
xchg
inc
daa
in
dec
andb
aam
and
clc
xor
insb
pushf
out
xchg
jns
popf
cmp
data16
in
ret
inc
mov
leave
sbb
test
add
jmp
les
lret
and
lods
sbb
stos
mov
mov
jno
pop
pop
lds
faddp
sbb
xorb
and
ret
dec
sarb
mov
addr16
sbb
lret
sti
xchg
cmpsb
fmul
fstp
dec
outsb
pop
push
inc
xor
repnz
jae
jl
call
mov
rorl
push
mov
pop
mov
mov
les
jg
fistps
cmpsl
jb
cmp
sarb
sti
sbb
mov
cmp
jg
mov
xchg
xor
ret
sub
fistpl
jge
push
mov
popl
pop
incb
into
add
sti
sbb
daa
outsl
bnd
xchg
sbb
popa
or
insl
movsb
rcrl
mov
bound
xchg
xchg
xchg
inc
shll
aaa
cmp
pop
or
dec
and
push
aam
movzwl
mov
inc
nop
adc
lods
mov
or
jmpw
jle
out
sbb
ficompl
dec
sti
call
pop
test
shrb
lods
add
jg
daa
out
push
iret
push
fldt
repz
sahf
pop
mov
add
or
scas
enter
push
fisttpl
les
repz
fwait
mov
or
sub
mov
popa
mov
test
cld
xor
clc
loopne
loope
mov
mov
sbb
gs
mov
pop
sub
dec
and
fsubp
idivl
outsl
add
pop
push
leave
cwtl
mov
je,pt
push
jnp
cmove
pop
insb
out
jmp
ret
fwait
or
add
aaa
arpl
fprem
pop
insb
adc
inc
mov
jbe
or
push
stos
fprem1
add
repz
adc
pop
clc
aas
mov
mov
es
movsl
fstl
mov
outsl
out
outsb
mov
and
add
das
lds
aad
xchg
and
ficompl
push
test
int
xchg
and
pop
stc
sub
mov
xor
aas
in
pop
xchg
loop
or
imul
dec
popa
test
mov
add
stos
xchg
sbb
or
mov
push
xchg
adc
adc
pop
loop
push
sarl
xchg
push
jmp
push
jge
or
loopne
push
scas
mov
clc
xor
cwtl
sbb
xor
icebp
pop
push
adc
pop
jne
adc
sub
pop
cmpsl
imul
mov
lods
xor
and
lcall
push
hlt
nop
sub
sti
xchg
cmp
out
xor
jge
jae
addr16
hlt
mov
stos
mov
mov
mov
xchg
push
mov
cs
add
fnstenv
icebp
popf
push
stos
sub
shl
cld
movsl
jl
sub
dec
test
fdivrl
add
dec
into
decb
xor
mov
xchg
xor
shll
jnp
jns
push
push
jne
test
outsb
addr16
inc
imul
jns
loopne
cmp
in
jp
addr16
daa
mov
dec
scas
adc
std
inc
or
sbb
cmc
out
and
sbb
hlt
xor
mov
xor
jae
in
inc
dec
jbe
out
gs
cmp
iret
xor
in
jp
rolb
scas
jne
aaa
xor
dec
int3
jo
jbe
lret
jecxz
sub
cmp
pop
call
orl
lock
loope
sti
int
les
pop
stc
cmpl
mov
repnz
push
not
pop
xor
out
add
std
xor
cs
sysexit
xchg
push
mov
sbb
adc
cmp
dec
mov
fidivs
mov
cwtl
add
mov
test
ficoml
adc
repz
add
js
ret
adc
shll
icebp
testl
xchg
mov
fistps
lods
std
cld
mov
push
add
cmpsl
js
in
cld
and
mov
sbb
not
mov
sub
pop
xor
cmc
sbb
icebp
sbb
fwait
shrb
ret
test
cmp
enter
pusha
cmp
xchg
lea
inc
testl
mov
movsb
and
push
inc
jp
add
push
stos
outsb
popf
lahf
addps
jmp
mov
mov
xor
ljmp
and
mov
adc
inc
dec
mov
and
mov
xchg
mov
mov
xor
repz
insb
mov
loop
scas
daa
ret
jmp
outsl
loope
jecxz
adc
lcall
lds
push
jno
jae
sub
inc
mov
push
mov
cld
xchg
adc
jae
mov
int
cmpsl
jb
clc
dec
andl
insl
fwait
jo
push
sbb
adc
cmc
fistl
shr
sub
shlb
dec
mov
sbb
xor
adc
enter
mov
jg
pop
movsb
or
mov
sub
or
mov
jb
jne
jmp
ficoms
sarb
mov
xor
cld
jns
setno
inc
orb
gs
mov
mov
cmp
xchg
push
int
and
lret
sbb
leave
cmpsb
sub
sub
bound
in
cmp
lods
inc
pusha
xor
jle
or
dec
divl
mov
scas
test
xor
aam
arpl
sbb
sub
mov
lcall
sbb
push
pop
push
das
and
fyl2x
xchg
pop
sti
sub
lea
or
imul
adcl
or
dec
orb
xchg
dec
xchg
mov
cmp
imul
out
cli
shrb
cmp
orl
or
out
cmp
and
dec
mov
jmp
mov
js
mov
pop
popa
cmpsl
or
inc
movsb
cmp
loopne
enter
repnz
aaa
mov
lret
mov
ror
xor
add
jge
sub
add
push
add
lcall
iret
or
out
mov
cmp
push
jnp
mov
aaa
xor
popf
fidivs
iret
mov
add
lea
je
push
xchg
sub
popf
pushf
xlat
push
int3
add
inc
push
out
pop
push
mov
cmpsb
iret
nop
or
and
js,pn
push
inc
ret
rorl
leave
cmp
aam
push
or
xor
pop
iret
or
adcb
sub
pusha
rorl
pop
lahf
jo
stos
imul
add
push
push
jl
adc
xchg
loop
dec
out
int
xor
or
test
add
dec
sbb
insb
xchg
fmuls
mov
xchg
sbb
and
xchg
cmp
repnz
jo
mov
or
inc
fs
pushl
pop
inc
in
shrb
sub
mov
inc
sbb
scas
sbb
das
lahf
inc
shrl
and
cmpb
sahf
and
ss
push
and
jmp
shlb
and
xlat
test
xchg
sbb
adc
sub
and
ljmp
pop
cmpsb
mov
add
sbb
mov
test
mov
rorb
stos
arpl
or
pop
add
add
mov
jno
push
or
dec
div
xchg
xchg
js
dec
and
jg
dec
dec
dec
jbe
adc
pop
adcb
inc
loop
test
jo
cmp
loopne
dec
or
inc
jo
lahf
mov
inc
dec
push
xchg
shrl
dec
not
orl
std
outsl
ss
jnp
or
sahf
xor
jo
add
xor
sub
adc
sbb
lds
shl
xchg
rcl
adc
add
je
nop
jno
gs
movsb
fdivrl
sub
xor
or
andl
adc
pop
push
aas
mov
into
mov
mov
inc
inc
sbb
pop
jle
enter
push
sbb
mov
not
inc
daa
mov
and
adc
cmp
push
pop
add
push
ds
sahf
scas
or
aaa
jle
jl
mov
push
dec
aaa
and
cmovle
popa
btr
lahf
in
aaa
in
icebp
bound
push
aaa
insl
das
jns,pt
imul
and
dec
rclb
ficoml
dec
testl
push
enter
cmp
jo
sbb
xor
inc
adc
out
popa
push
push
pusha
pop
lret
fdivp
sbbb
outsl
pop
or
jmp
push
and
mov
arpl
in
jg
es
and
hlt
aas
in
jge
or
dec
enter
pusha
adc
xor
sbb
mov
out
fists
shll
xor
lods
in
addr16
lret
addr16
adc
mov
push
dec
mov
daa
out
idivb
stos
outsl
mov
hlt
mov
mov
adc
mov
push
aam
inc
fs
rcr
scas
fcoml
repz
xlat
lods
push
js
cmp
jmp
xor
subb
loopne
dec
mov
jb
int3
les
xor
ret
ja
push
fidivrl
mov
scas
lock
push
inc
push
addr16
test
popf
outsb
or
pushf
sti
arpl
daa
mov
test
push
lods
fistps
enter
bound
sbb
mov
ljmp
popf
mov
mov
daa
pop
cmc
adc
test
adc
rolb
sub
in
loop
sub
ds
push
or
jns
push
daa
test
dec
loope
and
test
mov
shll
jecxz
cmp
rorb
call
addr16
lock
les
loop
roll
test
sarl
sbb
movsb
dec
stos
jmp
sub
adc
lret
fsubrs
adc
cmpsl
mov
test
mov
fstpl
mov
loop
lret
movsl
dec
leave
into
mov
and
dec
bound
dec
jbe
lret
test
loopne
xlat
xchg
inc
ret
jge
add
loopne
xor
cltd
sti
jp
adc
pop
shrb
and
aam
movsb
lahf
loopne
inc
mov
cmp
int3
dec
aam
xor
mov
andb
std
or
das
mov
rcll
mov
lods
cmp
in
fcmovb
call
mov
cmp
mov
insl
xor
cmovl
push
mov
ds
fsin
sbbl
pop
pop
clc
jns
and
or
xor
push
mov
imul
inc
pop
or
adc
pushl
jne
gs
outsb
lret
add
sub
clc
shl
popa
pusha
outsl
cwtl
jae
jge
cli
dec
xchg
pusha
adc
sbb
mov
adc
test
sub
rcr
mov
stos
cld
sbb
pop
nop
jnp
test
or
lea
daa
in
add
jp
sbb
sahf
std
cli
mov
mov
pop
addl
test
test
jb
adc
fucom
repnz
xchg
mov
xor
jecxz
roll
gs
icebp
call
cmpsb
sub
mov
addr16
sahf
ds
mov
imul
cmp
jnp
mov
push
push
pop
outsb
inc
scas
divb
fucom
out
pop
mov
mov
lcall
jne
loope
loope
jmp
out
push
and
pop
and
push
adc
push
pop
in
adc
push
cmp
inc
aaa
mov
xchg
dec
test
jle
lock
sbb
dec
or
sbb
adc
insl
jmp
xor
insb
push
jl
inc
dec
pop
xchg
mov
mov
xor
into
repz
arpl
dec
jmp
mov
pop
out
mov
xor
dec
cltd
mov
lea
jbe
mov
lea
pop
lock
out
test
mov
jns
inc
mov
xlat
or
loopne
into
lahf
fxch
fldl
mov
jae
in
ror
in
push
lods
cs
mov
sub
faddp
repnz
loope
sbb
xchg
loopne
fstl
mov
not
cwtl
lods
jl
sbb
xchg
pushf
fldl
cmp
imul
jmp
cmpb
fadds
imul
mov
loop
or
push
cmpsb
pop
data16
jg
jge
imul
mov
fsubl
xor
sbbl
xchg
cmp
popa
and
inc
jbe
ret
loopne
cltd
lahf
jg
mov
add
loopne
xorl
push
mov
cld
add
mov
outsb
mov
ljmp
inc
movsl
pushf
jne
daa
mov
sbb
dec
mov
adc
popf
mov
xchg
push
nop
daa
daa
in
sub
ror
sbb
push
aad
sub
fdivr
cmpsl
imul
fdivs
mov
mov
ret
xchg
dec
xor
loopne
iret
jl
xor
testl
xchg
subb
jl
push
mov
sub
cmpsb
xchg
mov
int3
mov
outsb
adc
push
sub
adc
cmp
dec
sahf
ljmp
fisttpll
pop
int3
sub
jb
dec
mov
pushf
out
xorb
mov
adc
sub
addr16
inc
in
xor
push
and
push
push
push
or
mov
popa
mov
push
mov
adc
int3
int3
xor
mov
xchg
push
inc
xor
std
pop
or
mov
das
and
ret
int3
mov
mov
mov
das
outsb
pop
and
inc
cmc
cmovae
mov
loope
mov
xlat
cmp
lcall
ds
call
outsl
add
cmp
icebp
cs
test
aam
popf
or
bound
inc
xchg
inc
fmull
xor
pop
dec
call
mov
add
jl
push
mov
mov
lock
lds
ret
and
sub
or
fcom
daa
xor
movsb
sbb
in
add
in
or
and
scas
add
rorb
mov
pop
pop
mov
mov
push
aas
jecxz
pop
stc
xchg
push
dec
xor
xchg
jns
out
push
push
adc
inc
xchg
int
ret
movsb
inc
or
out
aad
loop
aad
pop
xor
stos
xchg
jge
cmp
cltd
aam
stos
inc
push
test
lock
jo
xchg
orb
mov
ret
jnp
push
push
push
idivb
daa
pop
iret
test
sub
faddl
mov
jle
fdivrl
jecxz
test
pop
xor
popf
int3
add
jle
add
addl
mov
push
daa
push
dec
mov
push
shlb
lret
xchg
lcall
xlat
imul
xchg
pop
shlb
lret
pop
cmp
cmp
xchg
and
orl
lret
mov
adc
fbld
cwtl
inc
popa
dec
ss
je
int3
and
cmpsb
mov
dec
hlt
or
mov
adc
clc
push
sti
cmp
adc
fiaddl
cwtl
mov
addb
js
jle
inc
lock
xor
sub
dec
mov
out
and
cmpsl
mov
push
sbb
xchg
jb
xor
je
and
mov
je
jno
ret
bswap
ret
sbb
inc
loope
xor
popa
lahf
sbb
js
cli
xchg
mov
mov
bound
push
in
jg
es
sahf
push
andl
in
pop
add
sarb
jl
add
xchg
dec
into
pop
mov
movsb
in
jl
push
movzbl
mov
push
fsubl
lret
out
push
imul
adc
mov
fucomip
icebp
adc
mov
cltd
push
sbb
addb
jl
xchg
pop
add
cld
aaa
mov
icebp
push
jmp
imul
in
sti
xchg
inc
dec
jnp
pop
addr16
insl
cmpsb
jb
or
add
lret
cmp
push
cld
negb
sub
es
pop
cmp
adc
inc
ret
sbb
jns
pop
add
lods
add
popf
fsubrl
insl
mov
lods
mov
out
out
ljmp
xchg
xchg
and
mov
xor
push
push
cli
push
sbb
pop
jecxz
xor
mov
push
scas
imul
jl
push
pop
jo
push
and
faddl
or
mov
jb
sub
add
mov
stos
xchg
push
add
lcall
outsb
pushf
mov
les
adc
leave
movsl
and
jne
sahf
sbb
scas
fistps
std
xchg
add
lea
dec
dec
int
dec
ss
sbb
adc
sbb
dec
dec
imul
jne
rcrb
push
mov
cmpsl
inc
fsubrs
ds
ds
pop
mov
pop
adc
dec
inc
fsubrs
fwait
xorl
lret
xchg
lds
pop
sbb
out
loopne
inc
pop
or
xchg
xchg
mov
daa
cwtl
loope
fmuls
jp
push
dec
add
push
repz
aaa
fs
fdivs
cmpsl
cmp
mov
adc
pop
je
xchg
mov
mov
aad
inc
cs
cmp
in
dec
add
pop
add
push
push
cmp
pop
int3
dec
test
pop
jno
outsb
jnp
stos
test
add
scas
test
out
dec
push
xor
es
fcoml
or
in
sub
mov
sbb
push
add
xchg
fsubrs
xrelease
cmp
orl
nop
pop
jge
lock
inc
js
negl
fidivl
iret
out
mov
pop
or
sub
pop
andb
dec
arpl
imul
xor
pop
adc
jmp
xchg
test
mov
add
mov
mov
loopne
out
fwait
roll
mov
pop
shrb
imul
mov
dec
fs
mov
cmc
into
ret
popa
sbb
shrb
pop
adc
mov
sub
cs
xor
adc
loop
cmp
or
inc
push
outsb
push
pop
and
xor
xor
fsincos
jmp
divl
mov
pop
dec
scas
push
es
and
scas
push
xchg
ljmp
mov
xor
jle,pn
fsubl
push
in
jmp
shll
loopne
xchg
addr16
lods
sahf
jae
xor
and
sbb
imul
cwtl
int
push
jbe
or
pminub
pop
add
iret
loopne
mov
dec
mov
daa
inc
cmp
fcomip
mov
gs
dec
and
pushf
shlb
and
mov
xor
pop
andb
or
pusha
out
fnstsw
insl
cmp
test
jae
mov
lock
and
sub
lods
mov
scas
fwait
jp
xchg
icebp
push
lea
push
push
dec
icebp
push
gs
leave
pop
and
add
add
into
andnps
aas
cmp
push
je
divl
jmp
flds
test
js
add
or
in
lods
js
jbe
mov
sbb
ret
push
mov
sub
fst
mov
sbb
das
mov
jl
and
xchg
sti
and
sarb
dec
repnz
fwait
ret
fidivl
addl
or
enter
mov
ds
jle
addr16
leave
fsubl
mov
jp
lods
inc
pushf
inc
xorb
dec
arpl
xor
xchg
std
mov
fs
add
mov
cmp
adc
les
into
inc
push
loope
xor
in
add
lds
shll
adc
mov
scas
adc
unpckhps
jmp
sbb
icebp
mov
loopne
add
lods
add
clc
repz
pop
addr16
divb
lods
aaa
ret
adc
std
mov
ficoml
lock
xor
and
scas
setle
pushf
mov
mov
xchg
ret
pop
or
loopne
cmpb
mov
pop
sbb
pusha
pop
nop
cld
dec
nop
cmp
call
fidivl
jbe
jnp
sub
aam
cmpsl
cs
push
push
rorl
and
pop
scas
jb
and
jecxz
lods
xchg
rcrw
push
push
pusha
iret
je
xor
mov
and
imul
mov
push
dec
or
sbb
notb
cmpsb
imul
into
in
or
imulb
mov
aas
inc
ss
dec
dec
inc
cli
call
sbb
cmc
mov
push
or
mov
or
and
lcall
shll
popf
sub
std
jno
add
fcmovne
movsl
lahf
adc
push
pop
adc
bound
movsb
sub
mov
mov
add
sbb
bound
or
cmp
push
mov
and
loope
cld
inc
mov
sbb
ficomps
arpl
enter
das
push
mov
sahf
lret
leave
add
inc
jmp
jb
or
xor
repnz
out
xchg
mov
jmp
dec
std
fldt
je
mov
testl
sahf
mov
sbb
sarb
shll
mov
repz
ret
and
aaa
jno
imul
jns
or
pop
arpl
pop
push
faddl
and
repz
or
mov
int
mov
xchg
outsl
or
pusha
or
rorb
cwtl
jg
insl
lods
mov
mov
lods
sbb
dec
fsubrs
aaa
inc
js
test
scas
xchg
sub
lret
test
dec
cmp
cmp
sub
push
test
mov
in
cmp
xchg
inc
or
mov
xchg
jl
xchg
inc
xchg
sub
mov
cli
mov
les
fs
mov
imul
pop
sub
sbb
popl
pop
mov
int
jbe
xorb
xlat
sub
inc
ss
icebp
mov
jle
aaa
stos
insb
jo
push
adc
ret
cmp
xchg
jae
outsb
mov
jl
fldl
out
bound
inc
mov
inc
sub
in
cmpb
bound
jle
insl
mov
push
mov
std
sub
jbe
cli
test
and
mov
cmp
or
sbb
and
sbb
pop
xor
adc
adc
push
push
pop
inc
dec
mov
xor
insl
mov
movsl
clc
sbb
fdivrs
mov
add
out
addr16
outsl
aaa
rcrb
adcb
sti
or
cmp
xor
in
lret
fisttps
cmp
push
popa
out
ljmp
shll
xor
mov
rcrb
dec
mov
xchg
inc
std
add
ret
pop
fisttpl
andb
adc
aaa
push
cmp
sbb
jg
jmp
mov
repz
mov
lds
sub
and
daa
dec
sub
xor
lock
or
mov
mov
add
std
jnp
xchg
cmp
imul
cmpsb
mov
xlat
xor
xor
push
je
sbbb
repnz
test
jnp
jle
movsl
pop
jae
sbb
mov
cmp
andb
stos
out
fistps
push
push
iret
xchg
fldl2t
ja
pop
pushf
jae
scas
or
pushf
ret
ss
pop
mov
sub
xor
leave
in
xor
lahf
mov
ret
push
lcall
lret
adc
jb
mov
inc
jb
fimuls
aad
test
ret
aas
inc
mov
movsl
push
add
mov
movsb
mov
inc
xchg
mov
dec
movsb
cmp
xor
or
sti
jno
hlt
dec
icebp
add
and
arpl
cmp
stos
pusha
pop
popa
movsl
cmp
inc
femms
aas
xor
sub
mov
xchg
jbe
pop
mov
into
or
std
out
jmp
incl
rorl
add
flds
pop
inc
cmp
dec
out
jmp
lock
fistpll
push
cltd
mov
pop
and
dec
cmpsb
mov
jp
and
pop
cltd
adc
xorl
out
lock
adc
cmc
push
inc
nop
inc
inc
jae
cmp
sub
sub
into
mov
std
clc
sbb
jl
fdivr
xor
icebp
pusha
pop
mov
jecxz
xchg
pop
ja
adcl
push
dec
imul
popf
in
pop
lods
aas
call
xchg
dec
mov
stc
mov
add
test
cltd
loop
out
mov
jnp
pop
popa
fiaddl
movsb
jnp
stos
or
test
mov
dec
test
sbb
jecxz
or
add
ret
rolb
mov
jbe
je
mov
arpl
and
xchg
ds
pop
and
sbb
cwtl
lock
int3
insl
mov
daa
daa
jp
jge
mov
mov
adcl
call
call
inc
xchg
sti
mov
lret
jl
add
xor
sbb
xchg
loop
inc
and
iret
repz
dec
es
sub
pop
ret
xchg
ds
mov
xlat
xchg
dec
xchg
subb
jg
xchg
fnstcw
std
outsl
or
ss
rcll
xchg
bound
or
xlat
sub
ljmp
sbb
xor
sbb
xchg
call
fwait
shl
and
dec
gs
icebp
in
out
js
int3
add
aas
lea
nop
cmpl
data16
xor
jo
mov
pop
or
dec
lret
fucomp
cltd
aam
push
ror
push
out
clc
jl
cmpsb
jb
fwait
push
les
clc
jno
xor
mulb
push
lahf
sub
outsl
adc
push
orb
dec
mov
push
push
fldl
gs
mov
test
and
cld
mov
jnp
out
sub
sbb
sub
pop
les
pop
jo
cmpsb
and
adc
mov
xchg
repz
push
aam
cmp
cld
mov
leave
xor
dec
pop
add
sub
cld
das
lret
cmp
mov
int
xchg
dec
push
and
cld
jb
repnz
pop
sbb
out
sub
jecxz
add
roll
neg
ds
push
pop
mov
aaa
into
xchg
mov
movsl
in
pop
mov
mov
insl
adc
ret
fldt
lock
inc
fs
rcll
es
xchg
jecxz
fsubs
mov
in
shl
aam
push
jns
mov
scas
psubsw
lahf
into
fcmovu
xor
jl
aam
xor
imul
mov
mov
add
adc
xor
cmp
std
repnz
pop
into
xchg
adc
pop
shlb
and
sub
pop
lods
gs
inc
dec
jmp
or
push
push
leave
imull
aaa
push
or
pop
cmp
ss
je
std
push
jne
mov
jmp
and
test
mov
xor
or
movsb
inc
aaa
jnp
sub
gs
stos
xor
fwait
add
notl
add
push
add
arpl
jbe
push
outsb
stc
pop
cmpb
fs
mov
or
loop
mov
bound
icebp
cmp
push
pushf
imul
add
sar
fisubl
test
inc
xchg
jecxz
ljmp
jbe
in
sbb
incb
mov
push
in
pop
stos
xor
cmp
inc
push
push
xor
jmp
push
mov
dec
adc
jne
and
stc
das
addl
xor
lock
xor
out
mov
scas
in
or
stos
jbe
mov
std
div
or
jne
or
or
pop
loop
in
xor
pop
xchg
adc
leave
jmp
shrl
xchg
sbb
ficompl
xchg
icebp
mov
adc
mov
pop
pop
rolw
and
gs
pop
mov
repz
xchg
out
push
jle
fsubrs
lods
test
mov
iret
in
push
inc
add
mov
fwait
and
mov
mov
enter
lcall
add
and
ss
stos
inc
jecxz
xchg
jp
stos
arpl
inc
in
xchg
movsl
iret
push
into
dec
and
scas
jp
decl
or
negb
inc
arpl
mov
cld
xor
mov
movsl
lock
rdseed
or
leave
push
es
addr16
popa
lcall
stos
push
ja
push
arpl
ja
jle
push
test
fsubl
xor
push
inc
int
mov
mov
pop
or
or
movsb
mulb
or
mov
cmp
stos
sbb
fs
scas
addl
icebp
push
xchg
sub
rcrb
lea
pop
xorl
xchg
insl
fwait
je
adc
mov
fs
xor
fwait
mov
xchg
mov
add
es
scas
mov
fstl
jg
cmp
jl
pop
mov
dec
sti
mov
xor
insl
xchg
mov
mov
mov
dec
sub
jo
dec
xor
lret
mov
test
shrl
rclb
test
inc
fldcw
and
cld
jge
mov
push
outsl
sbb
cld
mov
hlt
icebp
push
and
or
mov
loope
imul
mov
pop
ds
mov
and
roll
inc
push
outsl
adc
imul
jo
xchg
mov
mov
jno
xchg
mov
insl
jns
filds
call
stc
add
hlt
sbb
xor
loopne
mov
xchg
jmp
lahf
and
divl
cltd
xor
mov
sarl
push
adc
and
lock
mov
xor
push
es
cmpl
scas
stc
out
add
fisubs
inc
in
and
mov
jns
and
lahf
dec
into
stos
mov
filds
cmp
inc
mov
pop
stc
lcall
dec
pop
mov
xor
movsb
rcl
pop
sbb
sbb
dec
mov
sarb
movsb
imul
das
or
push
fcompl
cmpsb
adc
inc
popf
outsb
dec
leave
mov
pop
push
xchg
mov
fmulp
ret
cmp
add
cmc
sbb
cmpsl
fwait
push
dec
mov
jecxz
mov
inc
xlat
jmp
mov
idivb
mov
jae
add
gs
ds
cmp
push
jbe
xor
cs
adc
enter
notl
test
in
lret
jnp
imul
jbe
fs
fmull
sub
sbb
sahf
lods
mov
adc
lcall
popa
mov
and
cmp
inc
and
mov
call
stos
das
push
push
cmpsl
cmpsb
sub
leave
xor
into
sub
adc
aaa
pop
stos
sbb
leave
imul
xor
jp
xor
sbb
dec
outsl
push
pop
jnp
jmp
jp
cs
cmp
inc
rcll
call
in
sub
mov
dec
js
lret
sbb
in
cltd
outsl
push
aad
dec
into
cli
jne
xorl
test
rcl
or
es
sbb
push
shlb
and
dec
fcomp
jbe
cld
pop
xlat
into
mov
sar
push
dec
mov
stc
cmc
sbb
and
mov
cmp
hlt
xor
mov
call
sahf
xchg
or
xor
inc
push
les
inc
add
adc
imul
test
aad
cmp
push
cli
ret
std
mov
icebp
dec
in
mulb
pop
arpl
je
outsb
sub
xchg
dec
xor
rorb
inc
sarb
sub
push
pop
mov
xchg
jl
gs
xchg
scas
in
adc
pop
add
push
cmpsb
pop
adc
mov
push
xor
ljmp
jbe
dec
shl
adc
pop
rcr
call
cmp
sbb
mov
adc
lahf
push
sub
dec
dec
and
loope
adc
jle
inc
jecxz
add
movsl
mov
mov
push
stos
aas
dec
imul
and
je
mov
shrl
cs
jnp
and
or
pop
stos
push
mov
and
into
in
pop
clc
sbb
adc
scas
cwtl
inc
les
or
leave
outsl
sbb
fcmovne
sbb
add
cmpb
fcmovnbe
push
or
or
xor
adcb
sbb
jmp
xchg
call
push
loopne
les
or
sub
sbb
test
lock
pop
jle
adc
jo
mov
push
imul
fildl
pop
and
add
sub
xchg
jle
popa
cmc
add
gs
push
dec
push
scas
lock
or
mov
movsl
cs
jg
sbb
mov
shlb
adc
stc
add
outsb
out
das
fnstsw
fiadds
stc
push
pop
int
push
std
push
pop
dec
cmp
mov
iret
shlb
mov
xchg
push
ds
dec
into
ret
aam
das
sbb
jle
movsl
scas
inc
sub
movsb
inc
pop
and
mov
xor
dec
arpl
xchg
popf
ficompl
add
aam
sub
push
jns
push
pop
push
scas
xchg
mov
repz
mov
dec
pop
cwtl
add
int3
aam
les
mov
ficoml
push
push
inc
int
int
sub
adc
or
cltd
jo
and
add
or
hlt
pop
divb
push
push
adc
stc
mov
xor
dec
mov
je
ret
cmpsb
or
fdivrs
dec
subl
pushf
outsl
in
jns
push
xor
adc
gs
push
push
jmp
pop
or
ds
jb
mov
pop
popa
lods
gs
js
push
add
aaa
mov
dec
mov
pop
fiadds
call
mov
add
loop
mov
aaa
cmovno
push
mov
dec
popf
fsubrs
mov
clc
pop
dec
inc
sbb
and
xor
subl
xor
imulb
mov
pop
jp
inc
dec
pop
ljmp
adc
daa
js
mov
ret
dec
pusha
adc
add
sbb
inc
aas
jb
fwait
push
scas
enter
mov
lret
icebp
jns
subb
sbb
lcall
fisubs
aas
hlt
pop
xor
add
rolb
sbb
fisubs
mov
clc
cmpsl
arpl
cmc
fisubrl
pop
jbe
push
push
jmp
movsb
push
inc
inc
int3
jecxz
jge
clc
enter
sbb
ja
fsubp
cmp
inc
fbstp
ds
sub
sti
pop
out
dec
and
sti
or
adc
mov
mov
pop
add
sub
xlat
ja
mov
int3
inc
ret
repz
mov
and
mov
xchg
xchg
daa
into
cmc
icebp
cmp
pop
mov
push
xor
sub
enter
jge
jle
pushf
mov
jo
popa
adc
rol
lods
daa
mov
mov
lretw
xchg
stos
mov
mov
fadds
xor
ja
push
pop
in
mov
imul
xchg
ss
sahf
loop
jmp
xchg
pop
mov
jo
pop
adc
cmp
cmp
notb
stos
or
xchg
xor
sahf
sub
push
movsb
pop
pop
push
fbld
out
jno
inc
lea
xchg
das
lret
adc
lds
fdivs
cmpb
add
dec
jo
ljmp
ja
add
xchg
sub
std
sub
or
xchg
add
add
xor
dec
sbb
jne
clc
adc
test
cmp
into
push
jne
fnsetpm(287
out
fnsetpm(287
push
out
jns
lds
stc
ljmp
adc
mov
movb
aaa
inc
pop
dec
rorb
jg
scas
adc
inc
cmc
push
test
mov
dec
sbb
jecxz
out
fiadds
push
stos
xor
dec
rep
jl
adc
ljmp
mov
mov
repnz
jnp
ja
fs
loopne
push
loope
fdivr
or
mov
dec
dec
mov
jno
and
xchg
ljmp
mov
pop
inc
aam
std
add
lcall
cmp
dec
or
sbb
shlb
mov
lods
data16
test
push
les
pop
adc
inc
stos
ja
or
jno
pop
outsl
cmpl
pop
jge
lods
adc
mov
sub
cmp
xchg
popf
jno
roll
push
mov
push
enter
xchg
test
sub
mov
dec
xchg
test
movsl
mov
pop
lcall
ja
mov
enter
ljmp
loope
dec
add
sar
jno
dec
sub
hlt
sub
and
xchg
xchg
sub
ljmp
leave
and
push
in
and
data16
jle
mov
mov
xor
incb
jp
into
cs
iret
ja
lea
jmp
or
stos
mov
test
jp
icebp
jge
movsl
sub
sbbl
out
decb
mov
and
test
dec
and
xor
push
cmpsb
rorb
cli
lock
std
hlt
cmp
adc
in
mov
push
mov
sbb
cmp
repz
mov
and
mov
loopne
loopne
inc
movsb
lahf
mov
testl
add
jle
inc
add
icebp
sahf
cmp
inc
inc
sbb
bound
lds
sahf
dec
and
cs
jmp
pop
xor
jae
dec
movsb
mov
sbb
je
into
rol
js
or
orl
shll
out
aam
xchg
mov
xchg
faddp
pusha
xlat
cmp
shlb
fsubrs
or
sub
jmp
or
mov
push
mov
jno
inc
insl
in
movsb
les
or
hlt
jbe
ret
push
mov
mov
inc
push
mov
rolb
push
sahf
lcall
or
add
std
dec
hlt
mov
aad
andb
lea
jl
out
inc
pop
cld
pop
push
cli
xchg
incb
xor
test
mov
mov
push
js
add
mov
out
push
fwait
xchg
lock
push
sub
xchg
inc
cltd
xchg
jno
mov
sub
fnsave
push
sti
xchg
fistpl
cmpsb
jne
sti
jbe
fwait
xor
imul
insb
xor
inc
fistpl
add
test
adc
push
test
in
addb
test
sub
addr16
mov
loopne
mov
shrl
xchg
pop
and
lahf
int3
lds
sbb
negl
mov
in
sub
mov
pop
or
sub
xchg
nop
sub
or
out
sub
ja
pop
sub
bound
pop
fists
xchg
jns
fnstenv
pop
lret
mov
jns
shll
out
data16
scas
cmpb
es
out
enter
fiaddl
jmp
adc
jno
mov
imul
out
inc
nop
and
stc
mov
and
xchg
test
cmpl
sbb
mov
lods
xchg
pop
out
adc
loopne
divl
fidivrl
dec
mov
cmp
jns
aas
dec
adc
xor
leave
movsl
cld
dec
dec
cmp
push
stos
sar
js
mov
mov
jmp
dec
mov
ja
inc
ss
andb
enter
shl
jl
in
jge
rcr
sub
push
mov
stc
nop
out
mov
mov
mov
inc
or
loope
sbb
cmp
movsb
cs
insl
cli
ljmp
push
sbb
push
addr16
xor
ficoms
and
push
xor
aad
pop
das
shrb
jnp
test
fnstsw
cmp
inc
ficoms
loope
mov
jae
mov
pop
daa
sarl
dec
popf
lahf
fcompl
sarb
push
ret
icebp
mov
in
adc
xor
std
xchg
or
inc
adc
insb
test
pop
push
fsubl
mov
xchg
jle
insl
jmp
sbb
cmp
mov
sub
dec
jb
jecxz
les
push
shll
cmc
icebp
cwtl
ret
into
stos
cld
and
pop
mov
add
adc
cmp
popf
lret
lods
fcomi
cmpb
jge
call
and
mov
xchg
jp
mov
data16
inc
repz
add
push
sbb
jae
inc
xchg
iret
fmulp
les
daa
gs
mov
negb
pop
jb
xchg
rolb
mov
pop
inc
cmp
or
out
xchg
add
or
and
dec
push
pop
sbb
xchg
lea
sbb
fsubr
push
mov
xchg
mov
mov
sub
popa
arpl
sbb
lds
push
inc
call
jmp
xor
xchg
stc
mov
ret
daa
jle
loope
in
inc
mov
push
inc
add
jnp
int3
repz
and
and
dec
mov
das
sbb
or
xchg
add
enter
pop
inc
sarb
lock
cmc
mul
data16
xor
sub
les
cmp
xlat
mov
mov
out
inc
aaa
out
sub
lods
inc
sbb
jbe
mov
les
xor
jns
jecxz
outsl
gs
sbb
or
sub
loop
das
or
xor
in
or
pop
leave
xchg
es
pop
push
inc
inc
add
out
sbb
jnp
mov
das
aad
imul
sbb
int
push
insl
mov
mov
xor
repnz
adc
pop
jne
mov
xlat
adc
incl
movsl
jecxz
push
xor
cld
inc
mov
xchg
lcall
xor
stc
out
cli
mov
cli
testl
out
outsl
sbb
popa
adc
mov
cmp
or
adc
stos
xchg
add
cmc
dec
mov
orl
shlb
popa
mov
rclb
fcompl
jl
or
movsl
mov
insl
sbb
ss
xchg
add
test
sbb
mov
int
jo
jno
xchg
outsb
shrl
mov
mov
sarb
mov
jge
pop
jle
jno
rcll
stc
shrl
mov
mov
push
cltd
xchg
stos
mov
aad
push
sbb
mov
idiv
xor
jnp
hlt
test
popa
ljmp
xchg
test
adcb
shlb
dec
pop
dec
xchg
dec
mov
cmpl
fmull
mov
inc
ss
and
adcb
inc
repnz
inc
mov
test
xchg
xor
jno
mov
xlat
ljmp
faddl
icebp
ds
in
pop
fwait
cmpsb
pushf
rorl
pusha
cld
dec
and
add
pop
push
mov
xchg
and
pushf
add
push
leave
lea
das
mov
mov
mov
repnz
mov
or
pop
or
cmpsb
sub
xchg
cs
pushf
pop
pusha
dec
out
test
dec
fnstenv
sahf
cmp
xor
test
das
push
jl
dec
sub
xchg
jmp
scas
push
sbb
in
outsl
xor
cli
adc
into
out
xchg
and
jne
psrad
pushf
mov
js
les
fwait
cmc
movsb
add
repz
fadds
mov
adc
mov
mov
xchg
xchg
icebp
call
jbe
xchg
mov
clc
mov
mov
xchg
xor
cmpsl
inc
lret
inc
ja
fisubs
pop
xor
jge
nop
push
lcall
movl
stos
call
jae
lret
data16
cmc
mov
push
push
cmp
aad
mov
sbb
fidivl
cmpsb
and
in
xor
cli
nop
mov
and
out
ret
xchg
cmp
ftst
push
out
sub
stc
enter
outsb
xor
shrl
mov
addr16
jae
jecxz
lret
in
call
dec
in
inc
or
lahf
adc
repnz
aaa
repz
test
into
push
nop
mov
jne
jmp
xor
cli
and
xchg
loope
xchg
cmp
dec
jecxz
imull
setae
popa
sub
or
mov
cmp
fdivr
jmp
and
inc
ds
pop
pop
stc
xor
leave
aad
out
punpcklwd
out
and
dec
inc
sti
cs
or
push
mov
jmp
aas
adc
push
pop
imul
mov
test
out
push
test
xor
mov
xchg
mov
lea
inc
lret
pop
xlat
cmp
rcrl
loop
sbb
xor
ljmp
cli
add
lcall
add
sub
nop
repnz
push
inc
jbe
adc
xchg
push
pop
jmp
and
push
push
js
outsl
xor
frstor
xchg
outsb
and
jo
loope
incb
mov
inc
repz
aad
jno
jns
xorb
in
test
mov
push
jmp
test
and
and
cmp
rcll
ds
data16
jmp
push
aas
adc
lahf
fcomps
fildll
stos
call
mov
rclb
addb
or
enter
adc
ljmp
xor
jno
int
push
mov
push
pusha
aad
pop
mov
push
mov
cmpsl
push
add
inc
xchg
mov
ret
ljmp
or
inc
pop
sbb
out
mov
sbb
lods
cli
xchg
push
push
in
jbe
xchg
push
enter
xlat
dec
add
pop
push
xor
mov
or
xor
or
adc
dec
fisubrl
xchg
frstor
out
cs
mov
into
mov
vcmpsd
push
inc
mov
nop
hlt
lods
push
push
sahf
stos
inc
mov
std
sub
cmp
dec
mov
mov
inc
in
lret
push
jo
loop
mov
lea
gs
bound
test
subl
dec
inc
mov
shll
mov
push
xchg
add
pop
repnz
ja
push
pop
mov
loop
sub
xor
rcrb
test
and
jl
pop
inc
gs
xchg
jbe
sbb
xchg
jne,pt
mov
cld
jb
mov
push
nop
add
sbb
hlt
inc
fs
fs
leave
ret
mov
pop
xchg
leave
and
inc
fldt
repz
outsl
mov
jmp
fucomi
in
insl
mov
outsb
add
pop
or
push
int
movsl
dec
jns
ss
test
cmp
mov
sbb
loope
add
aaa
jecxz
popa
mov
jl
push
leave
int
jecxz
imul
xlat
adc
cmp
int3
inc
sbb
mov
fcompl
inc
mov
cmp
mov
arpl
popf
xor
xchg
fidivrs
mov
sub
ret
xchg
movsb
pop
js
into
cmp
jecxz
lcall
stc
arpl
adc
cmp
mov
xor
pop
and
mov
dec
neg
mov
insl
cmp
sbb
jae
aaa
rorb
or
dec
movsb
cld
outsb
test
test
pop
xchg
push
test
leave
cmpsb
sub
ror
popa
cmp
loopne
or
mov
add
imul
lea
call
ss
jmp
pop
mov
jae
pop
loop
nop
out
mov
sub
xchg
push
push
aad
inc
sbb
lock
pop
push
int3
lret
in
aas
ja
nop
leave
orl
cmp
add
outsl
mov
dec
je
pop
test
shl
fidivs
sub
insl
push
sub
inc
arpl
mov
daa
adc
xchg
lret
call
enter
imul
cli
push
lock
dec
popf
pusha
dec
add
jbe
adc
in
lret
out
jmp
mov
in
and
loope
jbe
jge
sub
into
mov
jnp
test
inc
popf
mov
cld
dec
outsb
aam
sbb
movsb
sbb
pop
pop
mov
sbb
out
jnp
in
ds
jle,pt
xor
mov
int3
xchg
lahf
mov
pop
nop
add
pop
pop
mov
rcrb
push
insb
adc
adc
sub
es
movsb
cmp
sub
or
fdivrl
roll
cmpsl
mov
jne
mov
jmp
dec
adc
in
xchg
jb
adc
loop
ret
lret
push
jle
mov
jae
or
adcl
push
sbb
mov
repnz
and
test
dec
push
ljmp
or
mov
mov
movsl
sub
hlt
out
jp
ljmp
and
jae
adc
mov
out
fcomi
adc
push
sti
push
jne
sub
pop
adc
inc
or
adc
and
pop
and
dec
sub
adc
jmp
push
add
mov
or
sbb
and
sub
and
jg
cmp
add
sti
jp
dec
mov
adc
inc
orb
outsb
stos
and
rol
cmp
cmp
les
or
dec
adc
xor
paddw
aam
dec
cmp
xchg
std
sub
or
ret
ss
gs
stc
push
je
into
outsb
shr
loope
test
in
scas
xor
imul
in
std
ljmp
rcrl
lret
lods
add
sbb
popf
mov
mov
and
pop
and
mov
fs
or
lret
mov
xchg
or
gs
push
out
mov
addl
mov
jnp
xchg
jnp
es
lea
sub
mov
nop
mov
addl
adc
bound
dec
fstps
jae
in
inc
dec
sub
out
inc
mov
jle
outsl
lea
push
loop
pop
sub
jb
push
test
mov
mov
rolb
ficoms
xor
mov
push
aam
mulb
popf
jnp
fninit
out
lds
jmp
xchg
sub
xchg
and
and
subl
add
mov
in
scas
cld
push
adc
mov
mov
repz
loopne
xchg
mov
inc
and
loop
mov
add
push
mov
xchg
xor
or
push
pop
stc
imul
int
inc
jbe
xchg
add
gs
les
fistpl
pop
int
fwait
mov
mov
and
fcmovne
pusha
cmp
pop
xor
jbe
imul
adc
into
clc
sbb
stos
ret
mov
pop
jne
adc
jne
sti
setne
add
xchg
pop
add
das
adc
loop
loop
sbbb
out
xlat
fs
cltd
repnz
fistl
outsl
data16
push
or
mov
movsb
inc
stos
push
sub
sub
aad
das
push
invd
and
xchg
dec
andb
push
cmc
pop
rcr
mov
ds
mov
xor
insl
mov
in
mov
rcrb
sbb
inc
fiaddl
loop
lahf
inc
mov
lods
lock
cli
xor
pop
cmp
out
movsl
mov
mov
pushf
or
mov
xor
push
out
push
jp
pop
xor
jne
xchg
fcoml
pop
cmp
mov
inc
lods
je
sbb
sbb
adc
je,pn
leave
sbb
and
js
cmp
add
xor
pop
loope
testl
or
dec
nop
pop
sti
dec
inc
mov
je
addr16
pushf
test
pop
in
jbe
pop
lds
fs
mov
cmp
and
pop
mov
jp
push
ret
inc
and
push
dec
dec
mov
add
sbb
in
add
lret
lds
ss
inc
fdivs
call
xchg
adc
add
dec
pop
mov
or
mov
test
jmp
mov
js
push
imul
or
lret
inc
out
cmc
xor
mov
lods
icebp
ja
inc
push
pushf
jge
mov
jnp
jb
cmp
out
ja
mov
rclb
out
inc
js
mov
test
cwtl
pop
push
mov
and
cmp
sub
cmpsl
lds
adc
lea
jns
stos
mov
shrb
aad
mov
sub
inc
mov
xchg
adc
aas
add
mov
xchg
aaa
or
pop
add
lock
ret
jbe
out
test
popa
or
inc
push
mov
push
scas
sbb
leave
and
mov
jae
and
pop
sub
jecxz
cld
fwait
imul
sub
dec
es
push
sub
loope
xchg
pop
jg
int
push
sbb
stos
inc
insl
sbb
lods
fwait
xor
sti
mov
xor
mov
mov
push
js
adcl
sbb
popf
adc
cmp
ficoms
inc
mov
sbb
xchg
pop
mov
lds
sbb
addb
and
mov
xchg
fildll
jle
mov
addr16
movsb
aam
call
jo
xchg
inc
lret
sti
sbb
mov
jg
cmp
hlt
jo
mov
mov
fdivs
dec
or
jns
dec
das
pop
sub
or
inc
cld
into
add
stos
repz
adc
in
test
pop
aas
mulb
dec
movsb
jbe
in
jnp
fucomip
mov
xchg
pop
rcll
js
jns
add
jl
adc
jo
stos
adc
int
aam
cmpsl
scas
sbb
les
adc
jecxz
std
cld
xchg
adc
sbb
mov
nop
aas
push
into
test
pop
pop
jmp
mov
xchg
bound
hlt
cmp
nop
inc
int3
pop
out
aam
jmp
and
pop
inc
xchg
adc
add
test
push
das
add
mov
mov
lods
and
sub
lods
dec
xlat
adc
lea
icebp
sub
call
sub
or
pop
push
out
mov
jno
sub
cmp
push
in
fs
mov
sbb
call
repnz
jb
call
jle
jo
decb
andl
test
mov
and
and
addr16
jp
adc
aas
xor
ret
cmc
xchg
adc
into
js
arpl
movl
sub
adc
enter
es
fcmove
imul
mov
cmp
xor
adc
xchg
arpl
jmp
mov
jb
add
push
outsb
jp
pop
adc
outsb
mov
mov
test
xchg
xchg
insb
or
xchg
inc
repz
das
mov
dec
jbe
sub
or
pop
push
fucom
sahf
sarb
inc
enter
rolb
cmpb
jl
or
xor
jl
das
pushf
rol
lods
cmp
xchg
int3
mov
lock
insl
pop
ret
cmp
mov
jb
scas
cld
mov
lret
xor
xchg
cmpsb
cmp
cmp
popa
xchg
sbb
or
cli
xchg
fdivrl
cltd
popf
or
cmp
dec
push
cmp
mov
sub
sbb
enter
sbb
fsts
xor
xlat
pop
mov
mov
aad
test
mov
mov
lods
sbb
out
mov
mov
sub
adc
mov
lret
icebp
in
mov
push
sahf
inc
inc
unpckhps
xchg
movsl
jne
mov
or
aam
pop
jmp
hlt
pop
test
dec
inc
sahf
cwtl
mov
xchg
xchg
sbb
mov
adc
clc
sti
xchg
sub
xchg
mov
gs
repnz
and
fcomps
jle
in
fadds
pop
imull
rolb
mov
push
hlt
call
shll
aas
xchg
icebp
push
lcall
sarl
aaa
ja
cmp
push
inc
lahf
addl
divl
js
arpl
fisttps
fldenv
adc
add
inc
fs
lahf
subl
sub
pushf
orb
outsb
and
push
lret
stc
insb
lret
mov
xor
ret
icebp
inc
inc
dec
stos
mov
ljmp
sub
mov
or
sub
scas
in
lock
dec
or
out
inc
shl
ljmp
in
mov
je
adc
adc
aas
dec
loopne
mov
pop
mov
js
pop
sahf
loopne
das
jo
sti
jae
mov
dec
loopne
mov
inc
outsl
mov
imul
cs
sub
js
and
sti
pop
xlat
mov
fs
das
mov
pop
xchg
pop
andl
sbb
mov
movzbl
jle
std
push
dec
aaa
std
inc
and
jmp
data16
popa
inc
lcall
imul
je
mov
sbb
js
push
push
xchg
clc
mov
cmp
mov
jns
fisubl
repz
sbb
aam
jbe
and
jnp
lods
push
punpckhdq
popf
or
jb
pop
mov
dec
cmp
push
js
jne
pop
dec
sub
mov
sbb
mov
test
fs
cmc
and
xor
shrl
sti
test
xorb
jae
mov
scas
mov
out
mov
sti
imul
adc
jae
xchg
jecxz
cwtl
xchg
mov
pop
sub
in
frstor
negb
adc
sahf
push
mulb
addr16
jb
in
mov
xlat
pop
out
popf
test
fiadds
pop
adc
or
out
mov
inc
dec
pop
repz
cmp
call
jle
pop
add
add
lock
dec
add
aas
xchg
mov
jo
in
dec
pop
shlb
jp
test
jns
imul
aad
inc
clc
lcall
sub
xor
mov
ds
shrb
outsb
mov
ficoml
nop
inc
jns
movsb
or
fdivrl
cli
push
push
mov
and
mov
out
scas
scas
pop
dec
sbb
jmp
inc
sbbb
mov
div
add
rcrl
mov
jle,pt
sbb
xor
mov
jg
adc
stc
pop
add
cmp
or
mov
dec
es
cmc
mov
negb
push
outsl
movsl
or
push
repz
ss
divl
mov
sbb
mov
cwtl
push
adc
arpl
cwtl
mov
ret
clc
subb
or
dec
dec
xchg
call
mov
mov
in
mov
mov
sub
jmp
mov
push
xlat
sub
jecxz
ror
movsl
xchg
pop
mov
and
adc
icebp
fimull
sub
mov
rcrb
aas
inc
pop
out
push
lods
rcrl
jp
mov
movsl
push
test
mov
pop
lahf
outsl
repz
mov
cmp
sub
mov
mov
es
dec
push
push
push
shlb
iret
les
mov
jecxz
inc
scas
in
mov
mov
xor
outsl
sub
js
push
cmp
jo
or
or
bound
rcll
lahf
mov
fs
cmp
mov
es
and
and
testb
rcll
insl
loop
add
and
and
fistpll
cmc
repnz
sub
dec
and
mov
scas
xchg
shlb
repnz
cld
loopw
cmpsl
xchg
sub
mov
add
jg
xchg
add
pushf
js
mov
in
test
sub
fistpl
push
gs
aad
sub
gs
int
xchg
aaa
lock
add
mov
and
jmp
xor
dec
cmpsb
test
loope
jae
mov
and
int
icebp
add
das
mov
xchg
mov
std
iret
push
aad
insb
into
push
sbb
enter
push
add
inc
jge
movsl
lds
push
mov
ror
ja
testl
shll
out
mov
fidivrs
cld
test
mov
pop
or
xlat
jnp
js
into
xchg
or
and
inc
nop
adc
imul
popl
xchg
jae
or
xchg
jecxz
jnp
mov
xorb
mov
lods
pop
mov
jae
xchg
dec
xor
inc
dec
loop
shll
clc
jl
sub
jmp
jno
mov
jns
leave
aas
lret
popf
hlt
mov
mov
scas
or
ret
fisttpl
xchg
pusha
pushf
out
pop
or
ret
jl
mov
push
repnz
push
loope
jg
lods
sub
neg
hlt
pop
dec
testl
mov
clc
mov
es
and
bound
jae
in
fld
jae
add
loopne
mov
inc
jns
movsb
xor
sub
negb
fmuls
int
out
jp
sbb
test
imul
adc
xchg
xchg
mov
mov
cli
jecxz
dec
aam
mov
add
mov
jmp
adc
repz
gs
pop
cltd
cwtl
call
or
loope
loope
mov
pop
ret
jbe
cmp
jno
cltd
ret
je
insl
lods
pop
test
rolb
mov
push
xchg
sbb
pop
push
les
testl
shr
xchg
filds
pop
sahf
pop
lea
outsb
mov
push
pop
inc
movsb
repz
xor
dec
lret
popf
movsb
pop
stos
jnp
add
jge
xchg
or
and
sub
and
mov
pop
mov
int3
or
cmp
les
cmpsl
fcoml
aad
xchg
outsl
cli
cli
bound
cld
mov
rcll
xor
push
fstpl
pop
push
xchg
xchg
sub
stc
jmp
outsl
aaa
mov
aaa
jns
jle
in
dec
adc
lahf
les
push
push
inc
icebp
pop
xlat
setne
inc
add
xor
test
jne
inc
push
inc
add
dec
int
xchg
loop
add
enter
test
sbb
push
pop
int
mov
xchg
cmp
sbb
push
mov
lret
negb
cwtl
lea
cmp
xchg
aas
testb
dec
pop
lods
sti
adc
jecxz
xchg
out
shr
mov
jg
cmp
mov
out
sub
aaa
jecxz
test
sbb
push
inc
in
in
dec
loop
xor
pusha
and
jecxz
mov
lea
ret
mov
jo
xchg
cmp
push
dec
cwtl
mov
aam
mov
fidivrl
add
inc
mov
notb
in
dec
shrb
in
mov
xchg
lcall
or
dec
push
mov
fstps
cld
shll
mov
movsl
or
sub
cmc
dec
xchg
arpl
pop
jnp
loop
mov
stc
loop
mov
scas
sti
and
lret
and
or
pop
cmp
or
xchg
ds
lret
cmc
inc
sbb
aas
xchg
in
mov
rcrl
ja
mov
mov
stos
dec
leave
add
aad
add
adc
jg
xchg
jmp
add
sarb
dec
sbb
mov
sarb
icebp
rolb
nop
push
divb
lcall
xor
pop
movb
mov
and
cmp
dec
repz
dec
ds
and
lcall
outsb
mov
insl
dec
pop
add
ja
lcall
inc
cmp
lret
nop
inc
sub
bound
dec
mov
jno
dec
push
inc
cmpsb
adc
mov
popf
or
pop
movsb
enter
mov
into
add
in
clc
pop
lock
es
insb
jl
push
test
bound
movsl
popa
pop
insb
lods
mov
andb
roll
cmp
mov
dec
shlb
and
dec
jp
add
es
push
les
pusha
inc
fwait
addr16
in
inc
mov
cli
in
out
jns
sub
jle
xchg
xchg
mov
cmp
popa
dec
jecxz
push
jbe
dec
fcomi
das
rorb
aaa
and
idiv
sub
in
lock
idiv
pop
sub
sbb
xrelease
push
shl
push
xchg
lods
and
shll
sub
inc
out
xchg
cmp
sbb
dec
pop
cmp
ret
sbb
mov
into
int3
sub
and
mov
push
cmp
mov
mov
shrl
xchg
lods
lea
in
test
iret
lret
xor
test
inc
add
test
push
cmp
or
divb
xchg
aad
pop
imul
push
sbb
rclb
mov
ljmp
pop
rcr
test
out
clc
notb
rclb
adc
pop
and
lahf
mov
ficoml
repnz
subb
stc
mov
inc
jo
and
pop
add
pop
add
pop
adc
mov
mov
stos
inc
je
fadds
arpl
int3
jg
jno
stos
leave
lret
cmp
xor
adc
push
mov
cli
pop
sub
dec
xchg
icebp
add
adc
xchg
pusha
loope
popf
dec
add
adc
outsb
ljmp
rclb
or
push
data16
and
mov
or
or
xchg
xchg
decb
or
and
push
jmp
jo
inc
sahf
lret
sub
lret
ss
repnz
loopne
loop
orl
sub
or
lret
or
insb
xchg
jge
and
arpl
xor
xchg
leave
jl
mov
add
scas
pushf
out
mov
dec
insl
push
lods
xchg
incb
iret
dec
stos
test
cmc
jg
pushf
inc
pusha
cmpsb
stos
push
pop
add
aad
push
and
movsb
fsubp
sti
cmpsl
adc
jp
xchg
cli
cmp
test
fldl2t
push
adc
push
push
loop
xchg
repz
pusha
jb
in
sbb
jo
sarl
xor
mov
ss
push
adc
rclb
lds
cli
inc
pop
es
push
push
hlt
test
test
add
adc
stc
mov
jge
lahf
or
mov
push
sahf
mov
inc
xchg
pop
shl
mov
xchg
xchg
test
or
cmp
movb
add
js
addb
mov
mov
test
pusha
fnsetpm(287
js
ret
cld
xchg
xorb
and
nop
subl
aam
sub
aaa
inc
xchg
lret
jns
lods
adc
pop
js
push
push
push
xchg
pop
dec
cwtl
jg
lret
outsl
add
dec
inc
and
xchg
lahf
repz
in
mov
mov
vshufps
gs
jo
push
jl
cmc
xchg
pop
das
jle
pop
cmp
rcl
mov
dec
pop
pop
add
pop
jae
pop
jo
push
add
jb
sti
add
add
jb
add
lods
cmp
dec
out
lret
lock
mov
std
fisubrs
jmp
or
sbbl
cld
push
push
push
jg
into
xor
cmp
subb
ret
loop
cwtl
pop
pop
mov
cwtl
call
mov
dec
aaa
xchg
sahf
add
inc
mov
mov
popa
cmp
xlat
fdiv
pop
jbe
sub
je
subb
js
imulb
and
pop
adcl
cmp
test
xlat
jae
mov
movsl
ret
mov
stos
jne
xor
stc
sti
push
mov
and
aaa
jp
stc
sub
jnp
cmp
outsl
jmp
ret
rcl
jns
add
sub
fisubl
addb
out
xor
shlb
xchg
jae
popa
push
aas
dec
movsl
out
push
mov
mov
or
jle
inc
data16
testl
xchg
frstor
sbb
lea
jge,pt
stc
out
add
push
in
push
add
xchg
enter
or
xor
pop
notb
mov
clc
mov
imul
repz
mov
jo
out
mov
jnp
imul
and
xor
outsb
mov
push
adc
or
adc
cmc
fxch
pop
mov
fwait
shrb
aad
cld
or
xchg
int
inc
mov
inc
adc
pusha
aam
fldcw
or
cmp
xchg
xor
sbb
dec
sbb
adc
in
mov
fstpt
ds
cwtl
lret
pop
xchg
xlat
adc
sahf
push
cmp
xor
mov
test
push
jecxz
add
gs
jno,pt
cli
add
pop
cmp
inc
pushf
pop
es
inc
sti
xor
mov
or
movsl
cmp
add
or
out
mov
movsb
and
or
out
mov
mov
cmp
enter
push
add
inc
js
imul
mov
movsb
insl
pusha
jns
dec
push
insb
mov
into
adc
dec
xchg
je
jmp
xchg
aas
xchg
repz
fnstsw
jle
lret
pop
jo
and
mov
test
in
xor
xor
lahf
in
dec
imul
popf
fdivl
pusha
lret
or
fwait
imul
lcall
std
ret
jo
adc
je
fstl
and
xlat
out
outsb
xchg
adc
cli
sbb
movsl
mov
loopne
fwait
stos
and
subl
cmp
rclb
add
cld
adc
rorb
dec
inc
testb
xchg
wrmsr
sub
mov
mov
or
dec
jnp
mov
lock
xchg
popf
push
shlb
shrb
mov
in
dec
add
out
pop
das
add
add
cmc
xlat
test
or
das
das
aad
outsl
jbe
inc
sahf
cmp
in
adc
dec
dec
jle
orl
popa
xor
imul
or
push
push
fldt
xor
aad
jnp
add
or
jb
enter
add
inc
inc
ret
loop
adc
mov
mov
rorl
cs
push
jle
rcrb
outsl
iret
mulb
lret
daa
inc
lea
pop
push
and
cld
sbb
lcall
mov
or
xor
and
adc
je
and
pusha
jecxz
adcl
xor
mov
dec
scas
xchg
cld
xor
cmp
hlt
mov
dec
decl
mov
lods
xchg
pop
into
and
inc
jno
jae
or
imul
ds
cli
mov
mov
adc
push
sub
mov
xchg
sub
lret
or
adcl
push
aaa
pop
sub
iret
sub
sub
dec
add
sbb
inc
and
mov
mov
sbb
std
inc
test
mov
push
lods
adc
dec
out
push
bound
mov
sub
mov
mov
cmp
push
imul
sub
cltd
ljmp
push
scas
scas
mov
mov
sbb
loopne
out
das
test
insl
mov
add
clc
rclb
dec
sbb
leave
movsb
jmp
pop
or
sub
sbb
pop
xor
push
fcmovbe
xor
xor
mov
mov
jmp
es
mov
push
scas
pop
inc
sub
into
and
enter
xchg
rorl
loop
test
out
dec
and
cmp
xchg
dec
inc
mov
and
insb
sub
and
jge
push
dec
push
push
arpl
sub
push
popf
call
push
xchg
lods
mov
dec
push
ljmp
jno
pop
jo
jae
mov
repz
ret
call
sub
adc
push
fs
jge
push
ret
inc
addr16
pop
outsl
inc
sub
call
jae
ljmp
pop
lock
outsl
in
or
mov
mov
fdivl
push
xor
mov
or
js
int
dec
jl
xor
js
sbb
mov
dec
test
in
inc
dec
cmp
mov
jne
add
jae
filds
sub
jmp
lds
xchg
enter
and
cs
out
dec
and
ffree
js
mov
pop
cmp
test
mov
rclb
movsb
inc
outsb
mov
mov
in
push
icebp
jb
movsb
sbb
repz
or
cmp
dec
cmpsb
adc
cmpsl
xor
lret
test
sar
mov
or
jbe
daa
rcl
sub
mov
nop
mov
movsb
push
leave
mov
loopne
loopne
or
inc
daa
cmc
inc
mov
xor
nop
cmpsb
stc
ficomps
pop
and
sub
xchg
and
xchg
lea
lahf
lahf
jno
std
cmp
xor
cmp
dec
stos
mov
jns
aas
test
inc
out
and
notl
idivb
sbb
dec
aam
mov
xchg
fidivl
pop
sbbb
data16
test
mov
int
xor
xchg
push
cmp
push
mov
fimuls
and
inc
repz
and
mov
rcll
imul
vpand
jg
push
cmp
inc
jp
sub
cmp
lock
fists
aad
rcrb
fisttpll
pop
dec
inc
leave
mov
sub
cmp
leave
push
out
lcall
pop
and
mov
and
out
nop
adc
push
xrelease
cli
mov
out
cmp
les
mov
sub
rcr
inc
aad
xchg
jo
sub
or
lcall
xor
mov
imul
jmp
and
iret
mov
in
xor
pop
out
mov
out
sbb
cmpsl
add
data16
pop
adc
pop
negl
adc
pop
stos
sbb
bound
push
and
fadd
mov
loopne
push
jb
push
divl
faddp
cmp
leave
xchg
pushf
adc
jb
add
or
xor
cmp
inc
int
scas
popa
lahf
cmp
xchg
add
push
jge
push
call
vcvtpd2psy
and
imul
insb
xor
cmpsl
push
adc
jb
jp
dec
gs
test
dec
pop
rorb
mov
cmp
imul
cli
mov
or
sub
pop
mov
stc
push
daa
and
cmc
test
inc
dec
adcl
cwtl
shll
jae,pt
pop
jecxz
pop
dec
add
pushf
mov
inc
mov
ret
cmc
in
pushf
cmpsb
jp
mov
addr16
out
arpl
aaa
sarb
fucompp
lock
arpl
sbb
add
idivl
int
addl
loopw
hlt
pop
push
cmp
xchg
popa
clc
les
js
jb
cmpsl
fstpl
push
dec
flds
push
les
mov
mov
je
inc
inc
cmpsb
popf
dec
shlb
enter
test
repz
inc
leave
xor
fisttpll
mov
hlt
dec
ret
insb
out
xor
xchg
mov
adc
dec
or
arpl
adc
pop
popa
or
add
cld
jnp
xchg
and
mov
insl
mov
push
inc
pop
lea
dec
cmp
sub
shrl
dec
push
les
lea
shll
out
xchg
je
insb
lds
mov
ficompl
lret
mov
lds
ret
aas
mov
outsb
inc
hlt
sub
adc
xchg
lcall
daa
or
repz
sti
adc
cmp
cmpsb
and
jno
pop
mov
push
stos
inc
fidivrs
lock
inc
in
lret
aam
ss
sahf
add
out
pop
subb
dec
mov
add
push
andl
ret
mov
sarl
cmpsl
lahf
test
dec
enter
or
jecxz
push
inc
cwtl
push
iret
sarl
pop
xchg
push
ror
pop
imul
mov
add
aam
insl
or
xchg
cmpsl
xor
xchg
repnz
add
and
pushf
and
or
xor
es
fldcw
aaa
imul
inc
pop
mov
mov
inc
lcall
lahf
dec
push
push
lcall
jge
xorl
rcll
xchg
mov
out
js
or
jg
or
jno
fsubs
dec
jge
sbb
and
xor
xor
pop
add
stos
push
lds
and
sbb
scas
jle
mov
push
movsb
sbb
lfs
in
push
add
mov
dec
fstpl
fdivrs
xorl
add
pop
jb
insb
adc
or
cmpsl
daa
xchg
inc
rcll
outsl
mov
xchg
jb
gs
inc
repz
or
loope
das
sbb
push
or
addb
dec
shrb
ficoml
scas
xor
xchg
and
cmpsb
add
cmpsl
xchg
adc
push
cltd
in
mov
subl
jae
cli
js
lds
push
xchg
cwtl
pop
sbb
je
push
repnz
movsb
ljmp
fstpl
and
inc
xchg
lods
addr16
mov
xor
stos
cmpsb
mov
inc
mov
repz
fwait
mov
cmp
or
clc
cs
xor
xor
enter
dec
lods
adcb
mov
lods
rol
jl
fnstenv
xchg
out
jg
inc
inc
xor
xlat
sub
or
sbb
push
les
or
mov
fsts
cmpsl
mov
mov
inc
stos
arpl
push
mov
mov
hlt
aas
jle
jnp
sti
lcall
and
cmp
lock
inc
jmp
fistpl
repz
jmp
dec
lea
or
mov
movsb
push
test
mov
iret
dec
mov
or
sub
divb
mov
shrb
xor
das
dec
mov
out
push
and
pushf
mov
add
xorl
mov
repnz
bound
es
nop
les
imul
pop
je
out
or
adc
push
adc
push
popf
or
aad
not
addl
jnp
cmp
dec
xchg
rcll
in
imul
enter
mov
jo
ficoms
leave
push
sti
out
mov
mov
push
sub
and
cli
subb
cmp
sbbb
imulb
jne
add
dec
ret
adc
cwtl
popf
xchg
ja
rclb
sbb
jns
and
pop
inc
out
iret
rcrb
push
xor
mov
inc
les
incl
lock
test
scas
orl
mov
mov
out
addl
pop
fbld
gs
dec
xchg
loop
out
jl
xchg
xchg
arpl
rorb
dec
pusha
adc
inc
pop
je
cltd
adc
jno
xor
mov
pop
or
sub
cwtl
sbb
and
lods
jnp
add
mov
cmpsl
ds
lret
adc
imul
mov
adc
pushf
mov
push
and
pop
lret
fldl
mov
xlat
popf
dec
sbb
movsl
push
sarb
std
jae
sub
sub
jbe
adc
jecxz
sbb
test
ja
fisttps
cmpsb
sub
jecxz
jmp
xchg
cmp
lds
loope
or
idivb
mov
add
jns
aam
xchg
mov
cmpsl
repz
addl
adc
iret
inc
pop
cwtl
jmp
xor
push
xchg
xchg
das
dec
popf
push
add
cmp
add
dec
pusha
shrb
fisubs
pop
and
out
cmp
shll
call
sub
pop
add
sbb
test
fldt
scas
sbb
or
and
mov
ljmp
vcvtps2uqq
mov
in
gs
test
adc
nop
movsl
pushfw
psrld
xchg
xchg
jbe
lret
insb
pushl
pop
testl
aad
push
call
pop
xlat
das
repnz
dec
int
sbb
cmp
sbb
mov
aam
dec
cmp
in
add
stos
insl
xchg
pop
nop
adc
dec
shr
insb
repnz
mov
scas
icebp
jae
dec
sub
adc
mov
fs
inc
xchg
inc
les
sbb
xor
cmp
dec
mov
or
jno
popl
mov
jbe
jne
insb
das
iret
jl
mov
aas
mov
shl
add
mov
jno
inc
sub
in
and
cld
and
ret
pushf
repnz
jg
adc
mov
fwait
jne
mov
xorl
outsb
push
stos
mov
fwait
pop
cs
std
sbb
not
jae
add
popf
pop
int
scas
orb
shrl
jb
nop
lret
pop
xchg
pop
cmp
sbb
dec
subps
push
icebp
out
adc
xchg
jns
jbe
int3
andl
imul
mov
sbb
push
xchg
pop
pusha
push
mov
cld
movsb
pop
adc
mov
jnp
jbe
sbb
popf
cmpsb
and
bound
enter
lret
dec
fstl
ja
xchg
mov
lods
adc
xchg
fbstp
xchg
das
fsts
sarl
mov
rorl
fwait
cmp
and
in
inc
inc
mov
mov
test
sbbl
xchg
rolb
fisubl
fistps
ljmp
xlat
fstps
dec
cmp
imul
daa
mov
ror
xchg
hlt
fwait
pushf
add
adc
cmpsb
and
dec
repz
js
pusha
cmpsl
or
mov
clc
icebp
test
xchg
xchg
lcall
cmp
bound
push
or
adc
movsb
test
out
add
or
aad
in
pop
stc
jbe
shlb
xorl
cmpsb
scas
xor
shll
pop
ret
sti
pop
sti
scas
aad
aaa
rorl
adc
xchg
iret
cmp
scas
xor
iret
mov
mov
xchg
pop
out
lcall
mov
jnp
leave
out
pop
push
mov
or
mov
mov
dec
ljmp
data16
adc
dec
mov
les
xchg
stos
xor
ffreep
pushl
enter
test
scas
push
cmpsb
data16
fnstsw
scas
stc
push
mov
xchg
xchg
lahf
mov
test
push
jne
mov
xchg
push
push
jo,pt
jns
jns
mov
pop
out
inc
mov
leave
push
pop
int
mov
dec
fdivs
cmp
outsb
jmp
sub
aaa
mov
mov
cmp
push
sbbl
mov
movsl
rolb
addl
std
ljmp
mov
das
loop
xchg
mov
shlb
aad
inc
sbb
icebp
popa
insl
push
lahf
sbb
jecxz
or
daa
rorl
pusha
fildll
daa
sbb
lret
jae
in
mov
pop
stos
add
xor
mov
std
stc
xor
gs
rorb
mov
jb
or
jno
ror
inc
push
ja
popl
pop
mov
jle
mov
lods
lcall
es
jle
xchg
mov
jmp
out
sbbb
fadds
ficompl
mov
jns
sbbb
adc
adc
cmp
and
xchg
cld
icebp
out
addr16
fs
and
sub
inc
mov
or
repnz
push
mov
xchg
push
cs
fdivs
xor
mov
and
add
in
adc
lcall
icebp
fadds
sub
mov
add
test
mov
daa
shr
dec
sbb
sub
dec
outsl
mov
pop
or
jns
shrb
mov
popf
jge
xor
vaddsubps
movsb
cli
outsb
in
cmp
jl
outsb
jecxz
test
xor
leave
add
repnz
icebp
aad
mov
jno
aam
fcmovb
mov
fs
clc
and
stos
and
inc
stos
or
sbb
add
sub
clc
mov
stc
out
test
add
jmp
push
xlat
pop
push
addr16
aas
iret
aam
inc
enter
mov
mov
int3
je
fnstcw
adcl
adc
int
xlat
popf
fwait
push
mov
in
xor
loop
sbb
push
cmp
pop
sbb
popa
push
aam
lcall
leave
sahf
and
out
dec
cmp
push
loopne
hlt
jns
xorb
jb
and
mov
xchg
dec
pop
ljmp
inc
mov
ss
insl
add
lret
ret
adc
aas
or
std
sbb
and
add
push
cmpsb
mov
imul
xor
enter
popa
and
loope
aas
jp
cmc
das
sbb
insb
out
or
pop
jno
add
cmp
mov
push
clc
cltd
dec
imul
mov
push
aam
inc
mov
cmp
xchg
jb
pop
or
xlat
push
lahf
sti
js
ret
daa
dec
rorb
mov
cmp
mov
dec
test
or
stos
outsl
xchg
and
testb
ds
or
rclb
ljmp
adc
mov
test
sar
jne
ds
repz
jge,pn
jo
mov
mov
xlat
push
leave
pop
jg
dec
daa
stos
aad
push
mov
fcmove
cmp
adc
fmul
fnsave
and
loopne
sub
shll
add
mov
push
cmp
cwtl
fidivrs
je
pop
test
mov
dec
add
daa
mov
mov
addr16
mov
jecxz
pop
push
movsb
shl
xor
xchg
add
xor
movups
or
mov
roll
stc
mov
test
out
std
aam
in
lods
loop
mov
xchg
lea
xchg
dec
adc
cmpb
add
push
sbbb
lss
lret
int3
repnz
ljmp
lret
pop
data16
fs
mov
inc
shr
arpl
or
in
mov
adc
inc
inc
out
cld
jle
jle
sbb
sarb
pop
mov
add
push
inc
imul
inc
icebp
rolb
jp
gs
xor
xor
lcall
fistpl
jle
pusha
add
pop
pop
dec
add
jp
jl
ss
shll
frstor
mov
cwtl
fisubrs
lds
push
adc
cltd
mov
mov
frstor
jg
xchg
xchg
xor
xor
mov
pop
out
ss
sbb
pop
xor
test
jb
xchg
popf
test
icebp
mov
fcomps
add
xchg
adc
adc
lcall
out
xchg
cmp
cmp
cmp
enter
fs
pusha
xor
out
xchg
add
push
mov
mov
sbb
roll
sub
pop
inc
leave
mov
xchg
mov
cltd
adc
push
lcall
mov
loope
leave
mov
repz
andl
jnp
push
std
dec
rclb
je
movsb
xchg
xor
mov
dec
hlt
sti
jl
adc
addr16
icebp
stc
mov
clc
mov
xchg
dec
mov
pusha
sub
pop
dec
movsl
fsubrl
sub
lret
and
inc
ja
outsl
add
add
loope
mov
sbbl
adc
in
jns
jne
push
add
pop
mov
lret
movsb
jo
pop
leave
fisttpll
out
mov
cltd
das
push
out
aas
xchg
out
gs
xor
std
sub
push
pop
into
mov
push
mov
push
cli
push
sub
cld
movsl
hlt
jp
imul
movsl
xor
adc
ret
xchg
in
or
pop
mov
xor
arpl
xchg
pushf
jo
dec
mov
imul
call
pop
sub
push
test
lret
addr16
outsl
shrb
add
cmc
pop
imul
dec
leave
and
mov
sub
add
fs
loope
clc
gs
adc
jnp
mov
pop
and
xchg
mov
and
mov
inc
iret
mov
insl
jno
shl
pop
loopne
or
xchg
adc
sub
xchg
xchg
shll
mov
cmp
xchg
jge
jecxz
cmp
scas
cmp
gs
ljmp
add
lods
mov
jns
add
scas
adc
pop
fistpll
sub
jne
push
fucomip
cwtl
cmp
rcll
adc
mov
lods
rorb
mov
cmc
pop
cmp
icebp
testb
lcall
mov
xchg
lods
out
mov
mov
fldl
xchg
mov
mov
adc
lret
fcmovnbe
jae
pop
fcomps
insb
lcall
inc
jno
loop
subl
jecxz
adc
mov
imul
aam
sbb
xorb
mov
out
aam
cmp
es
sub
aad
loopne
or
sarl
adc
sub
xorb
mov
jne
movl
jnp
push
inc
sub
pop
jno
mov
popf
int
stos
ljmp
insl
dec
arpl
sub
mov
push
bound
jnp
mov
jnp
scas
mov
and
sub
lret
and
inc
adc
fsub
mov
loope
in
inc
gs
and
cmp
loope
fildl
xchg
xchg
ret
insb
std
mov
push
push
jo
dec
divl
cmc
call
ret
cs
movsl
inc
inc
xchg
movsl
ljmp
adc
nopl
xor
or
hlt
adc
dec
or
sahf
and
cwtl
xor
cmp
cmpsb
repz
jg
jmp
ret
sti
mulb
cmp
cmpsl
jge
mov
push
rorb
insb
cmc
mov
inc
cli
dec
incl
dec
mov
cmpsb
xchg
mov
sbb
add
push
sti
loope
jg
lret
ret
xor
add
add
adc
out
popf
insb
lcall
insb
adc
xor
data16
sbb
in
in
lahf
andb
mov
movsl
dec
xor
add
jae
pop
jl
mov
push
lea
jge
mov
push
mov
clc
cmp
cmc
aas
fmull
xchg
jle
addr16
aas
add
pop
sub
loopne
jl
aad
jae
or
sbbb
mov
inc
xchg
orl
in
dec
adc
and
test
xchg
cmpl
fldcw
xor
dec
or
rclb
das
ret
xchg
lds
jge
and
movsl
std
xchg
add
loope
mov
jbe
pop
sub
mov
and
pusha
jne
lds
cmp
cld
cmpsl
mov
cmc
fiadds
jecxz
loopne
xchg
inc
xor
stos
lock
dec
jecxz
fiadds
push
dec
or
hlt
adc
popa
mov
loopne
mov
stos
aam
cmpl
das
jb
in
inc
testb
and
inc
inc
nop
orl
pop
roll
adc
add
mov
not
icebp
pop
push
xor
xor
iret
mov
insl
mov
in
mov
push
push
sub
mov
add
lret
scas
inc
pop
popf
and
sbb
push
xchg
shl
test
xchg
sbb
xor
adc
jne
xchg
dec
andl
mov
add
dec
pusha
repnz
fisubs
sub
ja
fidivrl
ficoms
xchg
addr16
ret
pop
cltd
push
ficompl
fildll
jno
hlt
mov
sbb
ja
imulb
xchg
jo
dec
push
push
std
rcll
sub
bound
push
lods
loop
xor
test
xor
jl
push
push
dec
mov
and
pop
pop
mov
mov
pop
or
fsub
mov
push
movsl
scas
xor
push
cmc
lret
push
lock
inc
mov
in
lock
daa
popf
aaa
and
addl
cmp
dec
mov
out
fwait
xor
loope
xlat
stc
and
rorb
dec
adc
lret
or
inc
popa
mov
test
mov
mov
out
pop
mov
push
add
out
pop
dec
push
sub
out
sahf
mov
adc
xchg
leave
push
lock
sar
push
aas
add
mov
push
dec
lock
jae
imul
mov
mov
xor
xchg
adc
cwtl
lods
nop
mov
sub
mov
aas
mov
enter
add
divl
insb
mov
inc
adc
xchg
pop
sti
xchg
shlb
inc
clc
es
lock
mov
in
fwait
outsl
ja
cmpsl
mov
dec
insl
pop
sbb
sub
cs
out
rorl
mov
add
sbb
outsb
out
call
or
mov
xchg
push
pop
xchg
and
jbe
dec
and
imul
push
fwait
aam
outsb
push
fcomps
mov
rcll
out
test
repz
insb
loop
push
xor
pop
inc
push
and
test
dec
xchg
cmp
movsl
xchg
mov
push
and
sahf
mov
aas
xor
xchg
inc
scas
sub
in
mov
mov
mov
sub
adc
adc
test
cmc
mov
push
and
lock
xor
scas
push
out
mov
sbbl
fdiv
hlt
or
xor
and
push
nop
sub
push
mov
push
add
imull
pop
ror
push
insb
pop
stos
fs
mov
push
aad
jg
sbb
into
push
outsb
xchg
mov
adc
jg
arpl
push
lods
out
adc
sub
jns
in
dec
or
xchg
pop
cltd
bound
out
pop
nop
and
sub
push
js
cmp
sub
sbb
dec
fildll
clc
adc
jl
push
sbb
outsb
sarl
jbe
xor
outsb
loopne
push
mov
xchg
dec
pop
jne
scas
jbe
aaa
and
and
and
mov
mov
ffreep
xchg
xlat
int3
mov
mov
int3
scas
pop
shll
dec
or
xchg
insb
adc
data16
std
sbb
aas
pushf
das
es
aad
aaa
xor
subl
lds
dec
add
insl
xchg
mov
insb
clc
pop
xlat
adc
cmpsb
lret
dec
ljmp
xchg
sub
test
clc
imul
out
in
dec
push
jp
pop
inc
fucomip
repz
outsb
pop
cli
ret
adc
les
push
jp
mov
fisttps
pop
jp
or
shlb
mov
sbb
pop
fidivrs
in
push
and
and
mov
or
pusha
jmp
lea
mov
sbb
leave
imul
fwait
and
and
mov
andb
pushf
pushf
dec
xchg
int3
jnp
pusha
mov
xchg
push
stos
lods
or
push
loopne
mov
shrl
push
push
pop
popa
push
imull
mov
fnsave
cmp
pop
or
pop
add
xor
out
mov
pop
dec
add
addr16
xor
loopne
mov
shrb
out
add
mov
jno
mov
jp
ret
daa
xchg
and
icebp
sahf
std
imul
insb
cmp
xchg
or
insb
inc
xchg
sub
fisubs
fmul
mov
in
mov
aas
repz
sbb
dec
das
and
dec
bound
sbb
je
shrl
mov
movl
and
sbb
mov
lods
mov
inc
movsl
movsl
or
fiadds
fidivs
or
cmp
inc
pop
mov
mov
cmp
stos
pop
inc
push
js
jnp
ret
jmp
stos
les
cmp
fwait
in
cmp
xor
push
inc
fists
cltd
jl
lret
fcmovne
cmp
push
pusha
js
cld
inc
mov
jle
xchg
test
fwait
repnz
sbb
cmp
push
xor
nop
xchg
sbbb
clc
aad
xchg
xchg
pop
mov
jb
xchg
mov
pop
loopne
and
mov
imul
in
pusha
add
enter
outsl
clc
movsb
pop
add
xchg
add
lahf
aad
mov
pop
jb
addl
or
jp
je
lea
iret
push
mov
arpl
lahf
outsb
out
push
and
lahf
dec
outsb
cmp
jae
mov
cltd
inc
popf
xor
xchg
adc
loop
ss
pop
loop
xlat
mov
out
stos
movsl
mov
ja
inc
xor
mov
es
xchg
or
ja
in
xchg
insl
or
cmp
ljmp
lods
xorl
in
leave
ljmp
lock
xchg
loopne
mov
addr16
cli
hlt
dec
dec
lahf
push
inc
mov
stc
push
dec
xor
add
or
xlat
inc
sahf
out
adc
dec
lods
mov
xchg
lock
fildll
push
mov
mov
lods
cmp
out
adc
sub
mov
in
sbb
setne
movsl
pop
ds
dec
out
scas
mov
jbe
xor
mov
hlt
clc
mov
xchg
andb
inc
stos
mov
cmp
lods
movsb
xor
movsb
push
xor
pop
sbb
loopne
add
notl
dec
mov
mov
fnstsw
loopne
adc
mov
mov
mov
scas
lret
repz
and
cli
mov
imull
or
or
fldl
incl
mov
cmpsb
test
out
loopne
adc
pop
pop
dec
dec
pop
addl
or
and
outsb
mov
mov
pop
dec
jp
aas
jae
rcrb
fs
cmpsb
lock
mov
pushf
sub
fisttps
dec
sbb
or
sbb
sti
lods
movsb
cmp
xorb
orb
pop
mov
insl
mov
stc
adc
cmp
mov
mov
dec
mov
mov
mov
lahf
adc
cmpsb
mov
push
loop
fwait
add
sub
nop
jmp
xor
and
jle
add
out
test
and
or
out
sub
js
sub
les
and
pop
push
add
popf
sbb
mov
fs
xor
push
in
stos
jg
dec
mov
mov
out
cmc
fbld
mov
es
inc
jecxz
mov
cmp
popf
inc
jo
mov
push
enter
push
sub
add
in
scas
mov
stc
daa
jne
push
lret
sub
jle
cmp
sub
mov
imul
jno
inc
hlt
jp
mov
addb
ja
into
rolb
push
aaa
test
ss
fcoml
mull
push
pop
or
or
hlt
push
adc
cs
jecxz
dec
jmp
fidivl
std
or
mov
lahf
ror
cmpsl
mov
out
inc
pop
pusha
inc
inc
test
mov
aas
or
xchg
lret
cli
cli
mov
xchg
ja
scas
adc
mov
mov
jno
dec
jp
mov
subb
inc
loopne
rcr
movsl
lods
sbb
addr16
push
ret
icebp
and
das
dec
jl
lods
icebp
popa
in
es
in
fimull
repnz
fcmovnu
fmul
cmp
and
incb
or
push
cld
jne
shll
cs
inc
mov
jo
fs
xor
out
out
mov
cmp
xor
adc
and
loopne
into
pop
rcrl
or
inc
hlt
jns
push
xor
enter
pusha
cltd
arpl
push
xor
inc
mov
pmaxub
mov
jge
pop
in
call
cmpsl
jecxz
xor
push
flds
dec
lahf
mov
jo
mov
pop
fwait
fs
pop
addr16
dec
cmpb
sub
push
mov
fnstcw
daa
sbb
stos
xor
lcall
mov
insb
and
push
mov
inc
lret
cmpsb
clc
sqrtps
les
push
push
movsb
jae
push
fs
es
mov
in
push
dec
pop
or
dec
lods
ret
js
in
inc
adc
fldcw
adc
cwtl
and
rol
xchg
fiaddl
xchg
push
mov
jge
jmp
jo
xchg
xchg
push
push
shll
push
daa
sbb
add
lret
shlb
dec
push
jne
xchg
add
leave
or
xchg
cmc
pop
fldenv
hlt
shll
dec
pop
cld
sbb
rcll
jl
andps
xlat
fdiv
rcrb
and
pop
les
aas
andl
jmp
clc
pushf
nop
repz
stos
sub
mov
outsl
int3
in
mov
fs
inc
jp
dec
adc
push
shll
data16
cld
jmp
ljmp
push
jne
sub
add
dec
loop
mov
sbb
sub
sub
repz
iret
daa
rorb
int3
mov
sbb
dec
bnd
cmp
push
jae
in
adc
or
sbb
push
stos
fidivrs
mov
inc
push
mov
ja
int
cli
lahf
repz
and
outsl
xchg
cmp
mov
sbb
out
mov
push
dec
sub
dec
dec
xchg
xchg
jg
xchg
je
out
idivb
xor
pushf
test
dec
sub
fldlg2
mov
popa
mov
ret
addb
std
and
inc
scas
push
pop
movsb
push
jae
mov
out
les
fidivrs
jo
inc
mov
cs
inc
gs
out
fildl
fs
repz
push
inc
pop
pop
or
data16
fmuls
cmp
add
and
pop
data16
daa
outsb
sub
sub
movl
dec
in
in
mov
cli
lret
mov
aam
cli
test
dec
mov
out
lods
outsl
out
jecxz
or
cmp
xor
jno
xchg
ror
fimuls
int
fists
cld
data16
pop
mov
sub
call
push
std
push
sub
ret
pop
xor
jae
mov
jae
mov
shrb
rcl
js
and
mov
pop
fcoml
cmp
xchg
adc
test
jg
js
scas
inc
cmp
imul
jge
ret
sub
push
xor
mov
daa
sbb
roll
dec
out
jecxz
mov
pcmpgtw
xchg
pop
repnz
movb
mov
rol
push
repz
std
fs
mov
cmp
dec
idiv
in
jb
cmp
xor
je
push
add
shrb
jno
pop
dec
test
mov
sub
dec
je
dec
push
push
mov
mov
stos
sbb
inc
mov
and
test
pop
call
or
xor
pop
sub
stos
int
cs
xor
sti
jnp
pop
inc
in
adc
lods
sbb
mov
cmp
pop
cwtl
sub
push
mov
sbbb
dec
ss
mov
xor
rcll
inc
xchg
stos
dec
insb
and
jae
mov
push
out
pop
cs
mov
jbe
xchg
cltd
out
dec
mov
scas
inc
xchg
scas
outsb
pushl
enter
aas
out
andl
imul
pop
scas
jmp
test
cmpsb
pminsw
or
adc
and
filds
jne
sbb
jge
test
repz
xor
mov
jg
mov
xor
lahf
stc
xchg
testb
jmp
mov
cld
xchg
jmp
loope
rorb
stos
mov
flds
and
fists
aaa
xor
mov
ret
jle
sub
inc
jne
adc
inc
loope
iret
adc
flds
leave
movsb
inc
mov
jne
mov
xor
cmp
out
popl
push
xchg
mov
pop
xor
dec
lret
cld
pop
ljmp
mov
sarb
lods
xor
add
cmc
dec
sti
imul
fwait
popa
roll
mov
lds
mov
mov
aad
xor
je
lods
add
mov
push
dec
jb
rorb
cmp
jg
loopne
std
call
subb
outsl
mov
xchg
fsubr
sbb
mov
fldl
cmpl
jne
xor
and
notb
jl
sub
fucom
lret
call
sbb
pop
push
inc
imul
cli
das
cwtl
adc
in
jg
jns
jns
inc
xchg
or
sub
push
orb
inc
jns
insb
inc
xor
in
mov
push
xchg
ds
ret
add
push
adc
xchg
xchg
arpl
sahf
mov
mov
out
mov
jo
xor
rcrl
inc
push
mov
sub
mul
mov
cmp
rcrl
mov
repz
ficoml
push
je
andb
add
aad
sar
repnz
cwtl
out
insl
test
test
sbb
stos
arpl
mov
jge
loopne
pop
ds
out
lret
sub
push
das
ficoml
sub
incb
jecxz
jns
xchg
push
and
xchg
lret
movsl
shr
xor
jecxz
and
adc
dec
and
add
ficoms
xorb
dec
mov
dec
mov
xchg
xchg
scas
dec
std
out
or
mov
push
adc
sbb
mov
adc
sahf
push
xlat
into
and
aas
sbb
fbstp
in
mov
xchg
mov
mov
in
inc
fdivp
push
int3
dec
push
loopne
xchg
sub
mov
ret
cmp
xchg
pop
sub
mov
stc
xchg
mov
xor
push
fidivs
jecxz
leave
aaa
out
sub
shll
add
imul
fs
dec
repnz
lds
adc
hlt
mov
daa
out
fwait
out
push
sbbl
out
dec
jp
mov
outsb
mov
lcall
jl
mov
mov
lret
xchg
fldl
stos
scas
call
incb
mov
jns
or
cwtl
fnstsw
jmp
mov
loop
fistps
mov
pop
mov
cltd
pop
addr16
dec
jecxz
cs
xchg
insl
dec
aad
sbb
rcll
pop
int3
movsb
out
rol
push
test
add
pop
mov
mov
xchg
xor
mov
in
clc
xchg
sbb
xor
jb
mov
jo
cwtl
and
push
jb
sub
dec
popf
aaa
les
fmuls
inc
mov
mov
push
or
fisttpll
sbb
mov
inc
inc
jb
push
daa
jge
in
dec
mov
lods
inc
bswap
out
cwtl
inc
imul
and
mov
scas
test
ds
insb
lock
cmp
nop
jecxz
in
push
adc
les
pop
mov
scas
test
aam
and
jmp
rcrb
xor
push
cli
sti
push
and
gs
pushf
je
cmc
test
fdivs
loop
mov
push
mov
ficompl
outsl
aaa
movsl
mov
and
je
push
pop
xchg
jp
or
cli
cmp
in
test
nop
jnp
ret
out
jno
fidivs
sub
xor
sbbl
cwtl
jns
jno
xchg
adc
sbb
loopne
xchg
push
movsl
jl
push
mov
mov
dec
sbb
fnsetpm(287
xor
hlt
sti
fwait
sbb
daa
xor
jl
aas
test
dec
jo
fiadds
mov
cmpsb
adc
aas
add
out
jb
ds
dec
push
fidivs
out
mov
or
xlat
incb
adc
cs
mov
cli
pop
pop
fistps
jns
push
into
pand
mov
push
xor
test
out
pop
adc
fdivrp
push
pop
mov
fstps
loopne
leave
les
subl
mov
xor
into
xchg
push
clc
inc
mov
cmpsb
mov
mov
xchg
ret
stos
fnstenv
sbb
dec
mov
push
add
fxch
dec
leave
scas
mov
cmp
in
negl
shl
mov
roll
test
or
xor
mov
test
push
shll
mov
adc
ja
jp
enter
pop
cmp
mov
cltd
inc
lods
insl
fsubr
js
mov
sub
std
ja
insb
add
test
adc
jl
into
lahf
ss
xchg
push
fcompl
xorl
pop
add
add
mov
jp
xchg
cli
xchg
push
lret
inc
sbbb
movsb
enter
imul
sub
add
aad
mov
insb
outsl
ljmp
mov
rcll
push
xchg
ret
cli
push
dec
jae
scas
leave
sub
adc
jnp
push
mov
imul
ljmp
jmp
dec
xchg
gs
stos
into
mov
out
mov
mov
dec
fcoms
sti
and
insl
jge,pt
add
ret
sahf
in
cmp
cs
add
shll
mov
and
shrb
mov
and
leave
lds
aas
je
fs
sbb
lds
ss
cli
xor
es
cld
scas
sub
mov
push
stos
jmp
cmc
cli
jbe
jno
dec
outsl
add
mov
scas
or
test
ret
add
mov
push
sub
test
movsl
aam
dec
dec
lea
bnd
xor
outsb
mov
in
mov
loopne
popf
add
adc
mov
fldt
mov
xchg
inc
lods
hlt
clc
jg
inc
cmpsl
pop
cmp
in
xor
jg
or
or
xchg
insl
les
mov
nop
pop
dec
dec
xor
fisttpll
sbb
mov
lods
lock
push
aas
pop
repz
shrl
mov
sbb
pop
leave
in
ja
and
fldcw
adc
xor
gs
cmc
shr
dec
cmp
lock
xchg
adc
mov
shrb
rol
in
ljmp
push
jbe
mov
stos
fcmovnbe
int
in
or
sub
lcall
and
xchg
test
push
push
sub
xchg
pop
dec
imul
xor
adc
mov
jmp
push
loop
push
cld
int3
les
sbb
mov
push
das
ss
out
mov
cltd
pop
lcall
mov
out
out
repz
push
call
repz
fstps
jecxz
mov
inc
clc
xor
push
pusha
aad
jb
rcrl
inc
xor
pop
adc
xchg
inc
test
pop
ds
iret
push
cmp
js
stc
add
mov
sahf
mov
std
add
xchg
mov
mov
xor
orb
mov
push
out
dec
jecxz
and
xchg
mov
lret
inc
sub
popf
pusha
stos
loope
nop
popa
pop
sahf
fists
ljmp
xchg
pop
cmp
cmc
loopne
add
xchg
push
lea
push
or
mov
xor
cmp
repnz
jge
in
out
inc
add
jnp
xchg
popf
enter
xchg
add
mov
std
fcmove
outsb
lahf
mov
adc
pop
movsl
sub
call
xor
shlb
or
mov
push
cli
rcl
or
adc
in
sbb
cmpsb
dec
sti
or
andb
in
push
les
pusha
xchg
pop
sbb
sub
int3
jae
jecxz
sub
mov
add
fsubl
nop
out
je
or
out
xchg
inc
xor
int
xor
pushf
jecxz
mov
inc
xchg
jecxz
repnz
fcoml
mov
mov
mov
dec
stos
xchg
cmp
mov
mov
cs
aaa
xchg
mov
dec
in
adc
cwtl
inc
push
xchg
fcompl
pop
aad
cld
mov
imul
lods
lret
push
stos
test
mov
inc
cltd
jnp
inc
cmc
jle
out
addr16
and
adcl
mov
aaa
pop
sahf
jp
aam
add
shll
mov
cmp
inc
call
mov
lret
stc
and
in
je
mov
sti
out
jge
mov
cld
lea
fwait
sbbb
adc
xchg
pop
pop
pop
out
pop
mov
mov
dec
xchg
pop
iret
out
push
xorb
stos
push
dec
nop
pop
sahf
xor
sbb
fldt
dec
push
lock
adc
int3
clc
rcrl
ljmp
imull
inc
cvtsd2ss
mov
xchg
pop
pop
adc
sahf
int3
clc
push
fsubr
jl
mov
nop
or
jne
pop
call
stos
scas
int3
push
inc
mov
andb
mov
add
or
push
pop
sbb
fcoms
and
push
lock
leave
out
pop
and
push
fs
lret
push
nop
nop
and
adc
jb
pushf
dec
jge
push
sub
and
sub
xor
inc
lds
add
add
mov
dec
xor
push
imul
pop
lret
je
inc
sub
mov
adc
movsl
mov
icebp
outsl
xchg
dec
je
aaa
push
mov
xchg
fcoms
ljmp
adc
cmc
insb
and
xchg
jp
scas
outsl
adc
dec
lods
insl
cmpsb
mov
rcrb
cs
add
jns
mov
jnp
pop
adc
pushf
mov
and
ret
push
sub
imul
jmp
cmc
andl
out
jg
and
cld
cmp
inc
push
mov
sub
jbe
int
mov
pop
lahf
push
mov
jecxz
test
ljmp
lcall
rcrb
or
divb
fcoml
mov
inc
mov
inc
lock
addl
jno
scas
and
mov
popf
cmpb
and
ss
cmp
mov
bound
jge
hlt
inc
jae
in
pop
imul
ret
fadds
add
clc
mov
xor
and
mov
addr16
push
sbb
pop
pop
or
in
ret
pop
xchg
lcall
jb
or
inc
pop
jg
in
mov
lock
lock
dec
push
dec
aas
imul
shrb
clc
arpl
pop
mov
aam
mov
daa
adc
dec
and
dec
lret
je
jnp
push
or
add
push
outsb
push
fcompp
push
daa
inc
jnp
mov
sub
nop
dec
je
sbb
or
pop
insb
rcpps
int3
subl
add
pop
out
and
xor
out
mov
or
imul
cmc
and
mov
cld
xor
ret
and
pop
pop
sbb
cld
scas
sbb
fdivrl
aam
gs
aas
sbbb
mov
iret
nop
pushf
stc
insl
test
nop
fwait
cli
daa
and
mov
stos
add
mov
dec
jecxz
mov
cmc
iret
push
xchg
pop
call
cltd
mov
mov
adc
sbb
pop
cmp
inc
cmpsb
lahf
clc
cld
add
push
ss
or
and
sbb
icebp
add
shr
pop
cmp
or
mov
hlt
jl
mov
sbb
fcoms
and
fcompl
idiv
and
scas
repnz
pop
or
mov
or
divl
jae
shll
push
int3
ja
xor
fadds
push
sbb
divl
push
dec
inc
adc
test
les
scas
rcll
mov
adc
lods
cmp
adc
mov
xchg
push
pop
testb
push
dec
stos
fst
xor
push
leave
lods
pop
jb
jge
add
das
mov
cmp
pushf
xor
adc
push
push
adc
cld
das
jecxz
enter
fmul
rolb
ret
dec
cmp
push
insb
rcrb
mov
pop
adc
and
add
mov
jecxz
jae
push
push
test
movsb
mov
fwait
insl
xlat
sub
roll
inc
dec
inc
and
dec
xchg
js
add
dec
push
popf
fdivrl
mov
dec
and
mov
add
shll
test
inc
jno
cmp
mov
mov
inc
cwtl
ss
std
pop
mov
pop
sbb
enter
aam
fstl
cmp
pop
mov
pop
push
and
addb
addl
test
dec
lock
insb
mov
xor
aam
shl
cld
cmp
mov
xchg
xchg
mov
ds
movsb
div
or
mov
stc
adc
iret
cmp
add
jmp
in
cmp
cmp
lock
dec
xchg
xor
testl
jbe
push
add
cmpsb
lock
orl
cmp
jp
in
mov
or
pop
or
ljmp
and
xor
xchg
aad
jge
gs
popf
mov
xor
aas
movsl
cld
jg
add
push
and
sub
mov
jne
ret
and
mov
xchg
stos
adc
into
ss
addr16
test
inc
inc
popa
ds
mov
add
out
testb
das
mov
push
shlb
movl
mov
mov
es
add
sub
or
add
in
push
aad
or
cmc
mov
sti
mulb
test
pop
call
cmp
mov
and
cmp
xorl
add
mov
into
add
jp
or
insb
cmpsl
mov
mov
gs
repnz
inc
mov
iret
in
ljmp
loopne
dec
lret
xchg
sbb
mov
push
inc
imul
inc
mov
push
add
sbb
insb
sub
std
rorl
and
or
jg
xor
aam
scas
cltd
push
and
fcompl
pushf
cwtl
pop
divb
xorl
or
or
adc
outsb
jb
mov
movsb
add
in
mov
jmp
sub
dec
lods
add
dec
pop
sub
dec
in
xor
lcall
shl
js
orb
jmp
dec
mov
fimuls
push
xor
loop
inc
rcrl
sub
add
push
mov
cld
imul
mov
jno
imul
push
push
inc
and
add
xchg
into
xor
popa
pop
or
xor
sub
add
dec
je
cmpsl
push
les
adc
mov
lds
nop
and
mov
idiv
mov
adc
pop
sbb
xlat
popf
adc
push
lds
xchg
pop
mov
sbb
fwait
les
xor
mov
lods
lds
ret
cmc
ss
or
cmp
inc
enter
xor
in
sahf
inc
cmp
insb
ss
sbb
aaa
mov
sahf
dec
stos
daa
shlb
out
push
ds
dec
les
loop
pop
jb
int3
fbld
icebp
and
adcl
add
andl
mov
mov
xchg
adc
push
mov
mov
test
mov
daa
lods
jge
pop
mov
adc
inc
lea
fcoml
imul
jnp
sarl
popa
mov
bound
adc
mov
and
mull
ret
subl
arpl
add
push
or
xchg
into
aaa
push
pop
lcall
ja
xchg
adc
ret
cs
or
xchg
inc
aas
xor
js
or
mov
mov
xor
dec
xor
xor
jnp
push
int
clc
mov
nop
test
sub
in
xor
loop
push
rcll
pop
sti
cs
sub
mov
int
scas
jnp
jmp
and
shlb
or
dec
dec
jge
cmp
out
xchg
inc
xor
inc
jecxz
das
out
push
sub
addr16
jbe
xor
cmp
add
lret
jnp
mov
jp
add
mov
jne
loope
imul
clc
pop
pop
aam
add
jmp
xchg
and
enter
movsb
xlat
pop
pop
mov
in
ret
pop
xor
pop
ja
mov
je
mov
sbb
mov
dec
mov
sub
mulb
test
and
ret
cmp
cmp
mov
out
xchg
test
stos
popf
data16
push
jae
add
es
push
and
and
call
jno
xor
stos
add
or
aad
add
and
outsb
gs
sbb
and
addr16
and
inc
mov
sahf
out
mov
push
sub
push
mov
ja
or
or
loop
mov
push
mov
push
jb
pop
test
mov
lods
popa
cmp
js
jne
mov
hlt
pop
movsb
pop
xchg
imulb
loop
mov
pop
push
mov
add
adc
or
or
dec
movsl
xchg
xor
mov
cmc
xor
call
mov
sub
push
mov
cmpsl
inc
cld
call
sub
or
pop
cltd
mov
lret
sbb
shll
lahf
ds
shl
xchg
sti
inc
xor
dec
pop
or
pop
subb
aaa
movsb
jp
test
push
jb
ljmp
xchg
lea
sbb
sbb
shlb
out
cmpsb
mov
mov
push
bound
push
jp
sub
fldcw
add
popw
mov
imul
movsl
dec
cmpl
fstps
xor
imul
hlt
xchg
js
add
pop
sub
stos
inc
incb
jp
in
ret
push
sti
lds
cmp
add
lret
mov
inc
ljmp
jmp
cmpsl
shld
std
ss
mov
outsl
imul
shlb
mov
cmpsl
and
mov
mov
pop
xchg
push
adc
mov
sbb
mov
das
pusha
ja
adc
inc
push
js
dec
test
dec
jno
jnp
mov
mov
loope
daa
enter
bound
or
popf
xor
cmp
ss
repnz
ds
jge
stc
cmp
jl
pop
movsb
lahf
mov
rclb
in
dec
dec
jo
mov
mov
inc
ja
dec
or
pusha
jns
xor
mov
inc
mov
add
nop
xchg
dec
dec
popa
xchg
inc
outsb
ja
mov
stos
adc
xor
cwtl
loopne
jb
cltd
js
xor
stc
sahf
in
pop
into
ljmp
shlb
pop
ja
das
mov
addl
insl
dec
xorb
mov
xchg
fsubs
adc
jae
ljmp
or
clc
enter
sub
testb
adc
adc
fldenv
pop
subl
invd
adc
xor
lret
iret
mov
xor
sahf
or
push
pop
push
pop
leave
or
ljmp
call
inc
dec
test
es
xor
notl
xor
imul
mov
and
pop
mov
pop
and
add
inc
xor
fisttpll
aas
mov
sub
pop
fcoms
sti
lret
andl
add
mov
push
sbb
mov
fstp
adc
push
repnz
mov
mov
sarb
jae
add
and
jb
pop
mov
shrl
into
lods
clc
sbb
in
and
sti
dec
das
xchg
scas
ret
out
adc
enter
rorb
inc
lahf
fldenv
stos
inc
neg
jo
and
add
push
mov
pop
adc
or
jmp
mov
aad
dec
in
lret
gs
movsb
mov
mov
cltd
jecxz
push
and
jno
dec
jl
outsl
xchg
or
xlat
dec
jo
cmp
and
loope
xor
xchg
fs
cltd
push
call
xchg
cs
outsl
test
and
imul
xchg
cmp
pop
mov
fnsave
imul
or
imulb
roll
pushf
mov
out
cmp
sarl
orl
cmpsl
jge
fdivs
movsl
sbbb
lret
insb
and
cwtl
out
mov
aad
xchg
leave
mov
xor
outsb
mov
add
dec
in
aad
loopne
das
mov
adc
pop
ljmp
push
push
leave
jne
push
adc
sub
lods
pop
cmp
adc
pop
cwtl
imul
loopne
cmc
enter
popf
or
pop
outsb
lret
cld
push
int3
adc
xchg
cld
ds
mov
jmp
cmp
pop
sbb
jg
aad
cmp
rcrb
mov
push
inc
mov
jg
xor
lcall
mov
inc
ficoml
dec
adc
hlt
addr16
ret
adc
sbb
fildll
inc
mov
call
xorb
jo
nop
mov
pop
stos
mov
cmp
sbb
scas
in
xchg
fstps
jge
in
enter
cmp
lahf
mov
xchg
cmc
shl
mov
rclb
out
sub
outsb
cmp
scas
sub
rorl
mov
push
test
repnz
push
cmp
ud2
sbb
insb
out
negb
mov
or
idivb
sbb
xchg
rol
nop
push
inc
pop
xor
jb
cli
inc
lods
stos
xchg
out
imul
lea
dec
js
cmp
push
mov
sub
stc
mov
and
dec
aam
add
add
jp
fsubrp
mov
pushf
or
hlt
xor
push
or
aaa
dec
pushf
stos
ret
xchg
in
and
adc
xor
clc
int
push
loop
dec
shll
sbb
jecxz
cmpsl
ljmp
sahf
jp
jb
cmpsl
sbb
loop
push
clc
pop
lea
hlt
pop
mov
js
aaa
jb
push
cmpsl
cmp
jle
repz
ja
add
add
in
inc
in
int3
sub
sub
call
cld
mov
pop
and
out
ds
fdivs
dec
loop
ljmp
mov
fidivrl
add
sub
mov
in
xchg
bound
ficoml
mov
jbe
imul
adc
and
mov
int3
test
andb
loop
enter
dec
mov
jecxz
lock
sbb
push
push
or
cs
es
aaa
test
xchg
pop
imul
sbb
adc
mov
ljmp
sub
pop
jmp
mov
iret
mov
imul
xchg
sub
adc
aad
int
stc
mov
mov
sub
sbb
push
pusha
adc
push
lods
bound
fld1
into
pop
fiaddl
push
or
xor
dec
andl
lcall
mov
scas
out
enter
push
mov
mov
adc
add
stos
js
mov
popf
mov
movsl
cwtl
lahf
adc
movsl
movsb
cmp
scas
inc
lds
fists
scas
mov
sub
hlt
jnp
cwtl
inc
jns
cmpsb
pop
mov
leave
cmp
arpl
inc
sbb
test
cmp
aas
xlat
mov
push
or
iret
int3
push
dec
std
ss
add
test
gs
lods
ljmp
add
call
sub
add
enter
insb
cltd
cmp
shll
inc
mov
push
lods
pop
dec
aaa
fwait
test
cmc
in
repnz
cmp
mov
in
and
sub
push
xchg
pop
dec
cld
outsl
xchg
sub
fidivs
mov
jno
pop
movsl
js
mov
adc
dec
jge
lods
cmp
cmp
pushl
mov
lcall
negb
mov
xor
push
std
insb
ljmp
fnstsw
cltd
aam
jp
jecxz
mov
dec
arpl
jbe
push
or
adc
bound
dec
mov
adc
popf
jmp
adc
adc
cmp
imul
fwait
xchg
sub
pminub
in
inc
imul
inc
xor
repnz
test
jne
addr16
mov
add
int
mov
fidivs
mov
lcall
sub
bound
loope
scas
cmc
mov
leave
leave
mov
ss
stc
xor
mov
sub
int3
in
pusha
fsubrs
xor
jmp
orb
mov
out
repz
out
dec
push
xchg
push
push
xorl
aaa
xchg
mov
iret
xor
in
test
adc
add
jge
adc
cld
push
in
jbe
shl
std
sbb
xchg
mov
repnz
in
loope
in
jns
xchg
pop
dec
add
cmc
daa
push
dec
icebp
cli
inc
and
mov
call
lods
sbb
int
xor
mov
jecxz
mov
cmp
xor
in
sub
mov
sub
addl
adc
cld
out
lret
xor
fsub
xchg
adcb
testl
loopne
xor
mov
arpl
outsl
in
push
loopne
subl
push
cmovs
std
mov
fbld
cmpl
loop
mov
push
mov
push
pop
xchg
jo
inc
push
repnz
repz
cmp
mov
add
repz
push
bound
aad
fistpll
push
imul
add
sbb
mov
xor
fcoml
and
add
jo
jge
scas
shrl
bound
pop
mov
and
jno
sub
pop
and
loopne
mov
xor
mov
inc
es
push
sti
fiadds
outsb
jnp
fcomps
sbb
orb
xor
scas
icebp
mov
daa
xorb
pusha
aam
enter
cmp
das
mov
std
inc
cld
xchg
mov
cmp
sub
ljmp
js
or
adc
mov
hlt
push
bound
mov
data16
sub
mov
xor
daa
mov
xlat
test
lahf
daa
enter
mov
fs
into
sub
das
loop
mov
jl
inc
fstpl
add
rorl
push
and
xchg
mov
fwait
testl
xchg
aam
pop
enter
jmp
sbb
pop
fmuls
mov
sahf
mov
add
addl
stc
pusha
mov
call
in
out
cmp
add
xchg
and
mov
adc
xchg
aam
inc
bound
and
xor
leave
into
dec
xchg
adc
pop
push
negb
nop
mov
frstor
test
cltd
int3
xor
cmp
hlt
jbe
cmp
aas
dec
push
mov
movsl
fs
enter
ret
inc
cmp
ss
nop
lods
lea
fisttpl
or
jnp
adc
pop
mov
je
mov
imul
in
lock
mov
ja
bound
inc
fwait
mov
push
xlat
data16
fs
cld
clc
lret
in
pop
push
loope
inc
fbld
stos
pminub
in
add
mov
adcl
cmp
sub
push
xlat
dec
lods
insb
sarb
xchg
test
mov
imul
loopne
cmc
iret
icebp
jno
push
fidivs
pop
movsl
pop
loope
xor
cmp
and
je
sbb
xchg
push
subb
into
into
popa
pop
in
test
div
push
push
sbb
shlb
pop
xchg
mov
loopne
inc
out
popf
push
mov
mov
cmc
jmp
adc
mov
imul
dec
jno
pop
inc
sti
aad
ds
popf
jns
imul
mov
xchg
in
mov
stos
mov
xor
out
mov
movsl
or
fcoms
repnz
dec
cmp
ret
outsl
repnz
adc
das
add
xor
mov
sub
stos
xchg
inc
ljmp
sbb
jmp
sub
es
add
test
push
ja
inc
sbb
adc
or
xchg
jle
test
push
js
and
loop
jno
push
xor
jb
xchg
repz
inc
out
xor
xchg
dec
jmp
cld
mov
test
ror
inc
or
daa
inc
pop
push
outsb
mov
daa
in
scas
xchg
add
jae
repz
cli
in
in
mov
mov
xchg
cli
inc
lock
rcl
dec
out
fidivs
mov
ds
mov
frstor
adc
add
mov
jb
dec
push
into
sahf
dec
lret
cmp
mov
xchg
in
std
nop
test
push
or
fldcw
mov
cmp
aad
call
sbb
outsb
mov
scas
sbb
leave
and
mov
popf
in
cli
scas
jmp
lahf
les
jae
add
nop
push
outsb
aad
iret
push
jp
cmp
sahf
lea
sub
or
fcmovnu
and
sub
mov
mov
ja
lock
dec
or
mov
or
inc
and
pop
jae
mov
xchg
dec
push
push
sti
push
js
mov
in
xor
rorb
dec
dec
out
fmul
jle
sub
jbe
bound
orl
out
jb
shlb
jl
sbb
inc
iret
sub
pop
xchg
cmpsl
sbb
dec
cmc
jbe
sbb
and
pop
pusha
push
push
cld
add
stc
lahf
aas
sub
icebp
es
pop
loop
mov
add
jle
sub
push
sub
shl
sbb
lret
fbstp
aad
pop
or
fdivs
lcall
aam
pop
hlt
adc
push
add
cmp
adc
mov
popa
insb
out
push
sbb
enter
push
pusha
add
sub
xorb
cld
scas
ret
movhps
jns
les
xchg
inc
mov
jae
rclb
dec
mov
dec
and
push
out
pop
jle
hlt
dec
sub
int3
jp
mov
mov
call
cmp
push
mov
popf
shll
mov
lods
stc
stos
dec
push
ds
mov
mov
fwait
adc
rolb
pop
push
in
rorb
push
lea
xor
xor
jg
adc
mov
pop
in
fldt
pop
stc
jbe
das
loop
fdivr
adc
pop
or
shrl
push
push
cltd
sbb
aad
adc
push
cmp
mov
pop
sub
dec
sub
and
in
lret
push
jle
js
adc
mov
pop
inc
sahf
sub
dec
sahf
addl
or
das
mov
jle
or
out
mov
popf
mov
in
iret
sbb
jmp
in
pop
ret
mov
in
jge
or
jnp
inc
dec
push
inc
out
jns
cmp
sti
stc
mov
mov
sub
mov
mov
lret
adcb
jb
jo
xlat
mov
pusha
xchg
add
pop
mov
sub
mov
sti
mov
cli
add
lcall
mov
adc
jno
ljmp
imul
push
sbb
inc
and
pop
fiadds
pop
mov
sbb
lcall
fwait
inc
pusha
add
and
jbe
dec
out
mov
push
insb
lock
or
repnz
test
shl
lret
mov
cli
adc
jmp
imul
cli
stos
xor
lret
jno
mov
xchg
dec
mov
mov
cmc
sbb
push
cmp
stos
mov
daa
ljmp
fsubp
pop
fwait
xor
daa
pop
lods
xor
test
or
nop
mov
pop
into
pop
mov
pop
not
adc
xorl
loop
and
in
pop
inc
jmp
adc
sub
ja
pop
xchg
dec
xchg
ret
int3
dec
sbb
xor
leave
jo
mov
push
stc
stc
sub
xlat
mov
mov
into
adc
shlb
mov
xchg
lock
lea
mov
push
sub
fs
mov
arpl
outsb
cmp
int
pop
inc
popf
loopne
fwait
xor
adc
in
test
mull
mov
jo
add
test
mov
ds
push
nop
test
fwait
ds
cmp
xchg
pop
dec
movsl
push
pop
jns
adc
int3
mov
mov
out
sub
pusha
cs
mov
arpl
in
aaa
push
dec
into
pop
es
aas
mov
mov
pop
jle
dec
std
in
and
repz
jmp
fcomi
sarb
inc
sbb
mov
scas
imul
test
aaa
lahf
js
cmp
and
jmp
fimuls
aaa
mov
out
cmp
jle
ret
mov
add
imul
popa
mov
outsb
sub
mov
shrb
mov
repz
push
or
setle
mov
jno
les
mov
orb
out
imul
push
pop
nop
pop
mov
shll
sub
fnstcw
cmpsl
mov
insl
lcall
stc
insb
push
dec
loopne
jbe
mov
lds
es
adcl
out
lret
sbb
fisttps
fwait
mov
inc
push
mov
jb
arpl
xor
lret
out
ss
and
fldl
push
and
inc
adc
push
sar
int
fsubs
mov
cmp
gs
lahf
jo
push
test
sub
mov
sbb
ljmp
pop
pop
icebp
rorb
test
mov
cli
jle
aas
jne
sub
cltd
adc
lea
jbe
adc
push
cmpsl
sbb
lret
adc
cld
mov
pushf
dec
mov
jns
push
rcl
scas
xchg
out
lret
pushf
out
mov
call
dec
push
loope
mov
test
out
dec
xor
mov
in
sbb
aam
subl
addr16
and
xchg
jb
dec
pop
xchg
aaa
adc
fcomip
push
ds
push
mov
or
test
push
mov
jbe
sahf
jbe
in
fisttps
or
pop
or
and
mov
mov
pop
out
sbb
paddusw
xchg
aam
add
iret
adc
idivb
jno
xlat
xor
repz
sbb
data16
mov
lahf
lcall
shl
xchg
sub
mov
mov
cwtl
pushf
fmuls
jbe
addb
ja
adc
jnp
movsl
insl
cmp
push
push
pop
ficomps
mov
pusha
adc
push
cmc
xchg
jo
mov
mov
mov
xor
push
out
xchg
pop
xor
lahf
ret
cmp
lcall
xchg
fimull
rorl
iret
dec
or
js
pop
test
mov
and
mov
iret
sbb
or
xchg
pop
jmp
lock
mov
jp
mov
push
jbe
iret
mov
sbb
loopne
les
mov
hlt
fadds
xor
push
dec
pop
mov
sarb
mov
jge
pop
pop
add
int3
fcomi
movsb
ljmp
pop
outsl
xchg
ret
cmp
test
push
lods
adc
in
adc
out
lock
add
inc
cmp
sbb
jb,pt
cwtl
pop
push
loop
sbb
mov
lcall
mov
loopne
or
and
test
mov
lock
je
xlat
psubd
je
lock
rorb
into
loop
mov
rdpmc
adc
mov
add
in
sbb
or
or
int
jo
jae
jb
sub
pop
inc
and
lret
pop
stos
lret
iret
test
sbb
ret
mov
or
ret
lock
in
mov
inc
out
dec
faddp
cli
push
add
lea
addr16
cltd
dec
lcall
xor
mov
pop
mov
dec
inc
lods
inc
mov
repnz
push
dec
mov
push
pop
lea
subb
cs
push
xchg
add
adc
daa
pusha
inc
iret
adc
add
mov
push
loop
push
lahf
popf
xchg
into
int
and
add
cmp
das
jp
loopne
js
cli
lea
insb
in
in
test
xlat
lods
sbb
xchg
cs
xor
adc
xchg
cld
xchg
inc
xor
and
bt
add
popf
enter
push
stc
adc
pop
cltd
adc
mov
mov
js
mov
mov
aam
dec
fisttps
fsubrl
sbb
inc
sbb
push
popf
lods
cmp
rorb
and
sahf
cmp
cmp
push
cmpsb
ror
icebp
jno
in
push
adc
mov
sub
stos
jbe
xchg
data16
mov
push
push
adc
xchg
dec
mov
ljmp
icebp
jmp
cmpsl
push
test
add
and
test
cmp
sbb
push
imul
fisubrl
push
mov
ljmp
ss
jae
push
xchg
cmp
outsb
jmp
pop
and
jno
cmp
add
int
inc
dec
mov
adc
into
mov
pop
int3
cltd
arpl
mov
mov
hlt
lcall
mov
sti
xor
mov
or
ret
mov
lods
push
adc
loope
aaa
jo
movb
daa
rolb
mov
pop
adc
push
sbb
repnz
cmp
cmpsb
hlt
xchg
pop
bnd
push
shll
pop
sbb
int
je
inc
aam
mov
fwait
xor
pop
icebp
pcmpgtd
xor
jnp
mov
repz
or
stos
adc
movsb
pushf
data16
popa
call
push
push
and
cmp
cli
jmp
xchg
xor
jb
mov
sti
xchg
mov
mov
fdivl
pop
into
cmc
imul
sbb
xchg
sub
mov
dec
or
rcrl
jecxz
inc
nop
xchg
in
pop
and
andl
repz
movsl
out
lds
push
outsb
hlt
in
cltd
gs
lret
lods
scas
jge
sahf
insl
fwait
xchg
cmpsb
loope
mov
add
cltd
push
lcall
jns
in
stos
or
and
enter
inc
mov
or
cmpsb
pushf
test
jp
mov
sub
sbb
leave
hlt
idivb
fsubr
fucom
mov
loope
cmc
andl
repz
sub
or
sbb
dec
inc
int3
inc
pop
ret
mov
mov
test
push
repz
push
pshufw
aaa
mov
dec
mov
inc
aaa
dec
jle
out
dec
xchg
inc
and
xchg
inc
xor
inc
add
sbb
add
mov
outsb
jecxz
cmpsl
jge
call
fdivr
mov
orb
mov
sbb
cmp
insb
ret
xor
cwtl
testb
fisttpl
jb
test
inc
fucomp
push
pop
xchg
jo
ret
icebp
sbb
sete
pop
jg
push
cld
or
daa
js
xor
sub
lret
je
lock
insl
inc
popf
ja
loope
insl
xor
pop
jl
mov
sub
mov
mov
mov
imul
mov
jbe
mov
int
in
imul
mov
mov
pop
aas
or
inc
lods
stos
sbb
adc
or
gs
icebp
stc
and
mov
add
icebp
inc
arpl
std
mov
jnp
and
sub
lret
popf
xchg
inc
into
add
pop
adc
and
mov
cmp
mov
jg
mov
and
mov
mov
outsb
daa
aas
mov
jg
call
faddl
xor
rcrb
outsl
ret
scas
pop
mov
jle
roll
sbbl
cmp
or
in
add
or
inc
lods
add
outsb
inc
shl
sub
inc
jl
inc
mov
push
or
shll
icebp
out
ret
push
mov
rcll
cmp
cmp
jo
cmpsb
jbe
dec
jne
and
xchg
je
lea
roll
jae
loop
xor
or
sbb
pop
inc
ffreep
push
ja
xor
add
push
adc
cmpsl
mov
cmp
stos
addr16
clc
rorl
fsubr
mov
enter
sub
mov
sbb
pop
push
sbb
inc
jl
mov
popf
adc
mov
lret
and
sar
incl
in
sbb
inc
mov
in
data16
cmc
pop
jae
pop
inc
lcall
xor
std
sti
mov
ss
test
sarb
pop
loope
or
into
clc
adc
out
mov
xlat
mov
jno
das
sub
sarb
test
mov
test
pusha
and
add
push
aas
and
gs
popf
std
fdivrp
pop
nop
push
dec
mov
mov
or
stos
cmp
into
das
int3
xchg
sbb
cs
loopne
imul
adc
aam
mov
adc
mov
xchg
add
cmp
pop
lcall
outsl
or
push
adc
daa
stos
gs
shlb
adc
out
cltd
adc
jns
xchg
xor
mov
dec
popa
ljmp
scas
addr16
pop
aaa
or
mov
cmp
fsubl
push
cmpsb
xchg
daa
cltd
shrl
insb
pop
or
cmp
push
or
cmp
inc
lret
imul
dec
mov
sbb
and
test
dec
cs
adc
xchg
inc
and
mov
repnz
and
cmp
jg
fisubrl
mov
jne
xor
fsubp
int3
or
ret
mov
int
scas
pop
outsl
mov
mov
ljmp
and
pop
cmp
adc
mov
aas
jg
pop
rclb
dec
adc
in
adc
add
pop
js
std
jg
xchg
sub
push
pusha
es
scas
cmp
ljmp
xchg
xchg
jle
int3
cmp
pop
iret
jecxz
fcoml
into
repz
cmc
and
push
mov
das
les
sahf
das
mov
xchg
in
sbb
mov
adc
push
loopne
fcomps
xchg
dec
inc
outsl
in
lods
and
iret
std
adc
push
lods
inc
pusha
out
cmp
test
outsb
nop
sarb
add
or
imul
mov
inc
inc
insl
xchg
pushf
mov
xlat
pop
in
cmp
or
push
mov
insl
hlt
fdivr
pop
push
xchg
adc
das
mov
inc
adc
mov
rcrb
mov
loopne
push
mov
scas
insb
add
cmp
pop
lcall
xchg
or
fmuls
cmc
stos
pop
idivb
rorb
clc
insl
inc
push
frstor
cmp
inc
aam
or
ja
adc
es
ljmp
pop
out
incl
pop
sub
dec
addr16
popa
inc
sub
fcoms
inc
int
xchg
dec
in
fldenv
push
xor
aaa
and
mov
jns
cwtl
lock
data16
xor
dec
xchg
ret
clc
cmc
add
or
scas
and
pop
push
jbe
clc
aad
shll
je
lods
pop
insb
imul
add
lea
loopne
cmp
outsb
pop
add
jnp
fsubl
lea
mov
xorl
jnp
jmp
push
mov
and
repnz
adc
ds
mov
add
dec
leave
pop
mov
add
lds
iret
jg
mov
xchg
mov
rolb
mov
mov
clc
xchg
lret
ret
repnz
jle
nop
xlat
push
idivl
jg
jbe
and
rorl
aaa
fwait
mov
imul
das
sub
and
pop
pop
scas
or
out
ret
dec
out
lret
fwait
and
ds
cmp
in
add
cmp
jge
movsb
scas
mov
mov
andb
push
dec
cmp
jae
ss
jne
mov
int3
lcall
repz
jno
lahf
mov
loop
mov
jae
lret
repnz
mov
dec
adc
scas
mov
jecxz
lea
cmp
mov
pop
repnz
pop
fildll
stos
call
cmc
shl
std
movsb
jg
popf
test
lock
cmp
insb
xor
and
add
xor
test
jecxz
ljmp
iret
sub
shl
aaa
push
lods
sbb
lret
xchg
push
mov
inc
jmp
xor
in
int
repz
outsl
push
ds
in
in
add
pop
inc
pop
movsl
jecxz
cmp
and
insb
pushf
sbb
das
int3
pop
in
dec
icebp
mov
xchg
sbb
dec
sub
aaa
stos
scas
mov
inc
frstor
mov
add
jbe
jge
mov
add
jbe
jne
and
or
inc
sti
arpl
popf
pop
xchg
nop
imul
mov
dec
dec
sub
mov
sub
mov
inc
mov
cmpsb
lods
fcom
push
int3
into
jge
sub
pop
pop
lret
jg
push
in
xlat
cwtl
mov
jmp
lods
inc
mov
dec
mov
dec
hlt
imul
jmp
xlat
fcmovbe
cltd
int3
loope
adc
and
in
or
repnz
fwait
lds
jle
je
jns
or
xor
pop
lret
dec
sahf
xor
dec
adcb
outsl
push
loope
and
cld
push
pop
pop
push
xchg
xchg
outsl
jo
cmpsl
push
pop
mov
xlat
addr16
cmp
insl
filds
sub
and
aam
bound
lods
adc
cld
in
xlat
lret
cmp
lret
pop
or
mov
out
fdivrl
loope
xchg
jl
popa
or
inc
mov
cmp
inc
cmp
sub
cmp
neg
jno
jp
push
repz
sbb
mov
addb
pop
nopl
sbb
mov
jbe
mov
fists
mov
or
loop
pop
pop
adcb
stos
mov
iret
mov
adc
sub
push
mov
sub
pop
and
push
pop
push
cmp
sahf
lret
mov
aaa
lret
push
dec
iret
xchg
lcallw
adc
xchg
cltd
enter
idiv
divl
jo
outsl
movsl
mov
test
xlat
dec
imul
pushf
scas
jnp
adc
cmpsb
pop
add
les
incl
popa
mov
adc
push
cmc
jge
cmp
push
std
cmp
ret
xor
aad
and
cmc
je
in
cmpsb
xor
imul
jb
xor
and
sbb
ss
dec
sub
rcll
pop
testb
xchg
xchg
pop
push
jmp
ljmp
mov
jbe
insl
sbb
test
shll
and
sbb
test
mov
out
inc
shl
mov
jbe
xchg
and
rclb
mov
xlat
shll
add
push
sbb
and
and
into
ss
jl
push
xchg
xchg
mov
iret
in
into
loopne
stos
xchg
dec
pop
lcall
dec
inc
data16
imul
inc
imul
je
xchg
pop
and
std
xor
scas
jo
lods
and
jp
pushf
fcomps
and
cmpsl
mov
push
cltd
lret
lret
sbb
sub
and
xchg
ljmp
push
les
inc
sbb
aad
dec
mov
das
mov
push
das
das
mov
pop
push
pop
jle
push
aas
mov
das
in
aas
stc
fisttps
push
cs
jae
mov
bound
sar
pusha
mov
mov
add
out
cmc
ds
test
adc
or
mov
out
std
inc
mov
mov
jnp
dec
mov
adc
inc
aaa
mov
sub
jmp
pop
ja
sti
ds
pop
ljmp
jmp
push
xor
xor
aad
mov
adc
mov
mov
imul
xchg
cmp
or
sub
gs
sbb
jl
lcall
cld
add
repz
mov
mov
push
test
dec
mov
lahf
push
pop
shlb
mov
ss
mov
push
shlb
shll
outsl
ss
dec
or
cmpsl
movsb
out
jno
call
ss
mov
addr16
fistl
cld
dec
add
jg
js
sbb
hlt
int3
add
hlt
jb
pop
es
adc
mov
cli
loopne
mov
dec
push
cmp
sbb
lret
iret
cwtl
xchg
lods
adc
lret
xor
outsl
sbb
fisttpl
test
pop
mov
push
pushf
cld
xor
xor
xchg
je
or
gs
cmpsb
sbb
jecxz
aad
mov
xchg
pop
mov
leave
leave
cwtl
xor
adc
mov
pusha
sub
mov
jbe
pop
test
push
jo
sbbb
lds
adc
sbb
shrb
into
fcompl
xchg
jge
sub
arpl
ja
lds
ds
repz
repnz
out
push
adc
cltd
inc
bound
sbb
inc
loope
jns
fsubp
add
dec
or
add
mov
shlb
mov
out
mov
fbstp
inc
pop
sti
ja
and
jp
repz
adc
push
push
xchg
int3
test
mov
push
add
loope
movsl
add
add
xchg
rorb
xor
fiadds
shlb
scas
jl
out
in
sahf
inc
cmp
rcrl
mov
mov
hlt
lahf
cltd
lea
inc
mov
ja
lock
jns
and
add
icebp
in
mov
dec
or
jae
ljmp
sbb
arpl
pinsrw
lret
mov
mov
andl
jae
int3
cmp
xchg
rclb
shlb
std
cmp
ja
out
shrl
adc
mov
inc
mov
jae
mov
ss
jae
jecxz
or
mov
adcb
mov
jmp
pop
sbb
dec
int
or
dec
push
inc
insb
loope
and
fimuls
xor
hlt
jmp
out
cmp
jo
pop
sbb
sbb
nop
aaa
ret
insb
jg
mov
xchg
sahf
lret
das
adc
fldenv
sbb
add
xor
cmp
inc
pushf
and
mov
xor
xchg
out
add
lea
push
pop
push
in
out
dec
add
loopne
push
mov
lods
adc
push
dec
push
or
outsl
jle
in
add
data16
fsub
lods
cmp
cmpsl
wrmsr
add
leave
lock
es
in
cmp
mov
ror
ror
xchg
jle
iret
or
in
cmp
xchg
and
mov
sar
and
jb
lods
jl
div
mov
mov
xor
test
test
mov
jo
add
dec
sub
jne
cld
cmp
or
or
lret
bound
incl
repnz
pop
cmc
push
pop
in
pop
adc
aad
mov
dec
adc
xchg
cmp
mov
xorb
mov
lcall
sub
xor
adc
out
mov
inc
pop
bound
mov
sbb
sar
cld
or
pop
cmp
mov
mov
int3
cmc
cmp
ret
int
aas
lret
rcr
cld
sub
inc
nop
push
cli
adc
xchg
jno
aas
lock
out
and
in
mov
pushf
test
es
cmp
push
mov
sub
loop
cwtl
out
pop
popf
add
cmp
sbb
das
aas
pop
pushf
mov
cmp
mov
jae
xor
orb
or
mov
iret
scas
dec
enter
out
xchg
fbld
jns
ss
scas
mov
nop
in
cld
mov
cli
dec
jne
mov
mov
push
jo
sub
fsub
or
push
sub
popf
sti
mov
xchg
das
cmp
nop
loopne,pt
inc
movsb
jmp
pusha
pop
nop
outsb
pop
mov
sbb
mov
ss
jae
imul
pop
sbb
stc
shrb
scas
ljmp
ja
and
repnz
insl
ret
jne
push
fbstp
push
and
ret
xor
cmp
arpl
shll
add
cmp
and
loopne
xor
jo
fs
inc
in
jge
daa
addr16
or
outsb
int3
mov
sti
mov
pop
mov
push
dec
sbb
shrb
aaa
dec
push
mov
jmp
push
scas
push
pop
cmp
or
sbbb
mov
cltd
shlb
inc
lods
xchg
xchg
dec
cld
adc
lds
jmp
mov
jo
sbb
jbe
push
sub
jmp
pop
inc
leave
jne
iret
pop
sub
dec
shll
add
cli
mov
popa
ss
lea
mov
ja
sub
notb
aam
cmp
sbb
xchg
cmc
lea
pop
sti
push
sub
and
ret
rorl
jg
cmp
imul
xchg
fidivrs
movsl
xchg
test
cmp
inc
sub
xchg
pop
pop
jb
test
test
test
add
bound
test
pushaw
in
mov
mov
sbb
enter
inc
cmp
and
or
rcll
enter
adc
addr16
out
push
imul
jg
xorb
cld
stos
pop
rcll
and
and
sub
iret
cmc
shrb
add
xchg
lcall
adc
dec
mov
inc
adcb
in
sbb
mov
dec
repz
ret
inc
pop
cmpsb
add
cmc
enter
add
stc
push
popa
pop
mov
inc
adc
das
nop
sub
jp
pop
es
lds
sbb
push
or
mov
xchg
jbe
push
ja
sbb
jne
add
arpl
add
mov
stos
mov
test
cmp
push
mov
movsb
mov
jbe
xlat
das
lahf
mov
scas
mov
xchg
sub
cmpsl
repnz
lret
mov
dec
popa
xor
stos
cmpb
sbb
inc
mov
inc
ret
ss
arpl
cld
repnz
ficoml
arpl
push
ret
stos
xor
xor
or
push
enter
cmpb
dec
bound
pop
std
out
mov
xor
scas
mov
jae
rclb
cmp
fistps
lods
outsl
ret
pop
cmp
push
mov
mov
pop
arpl
pop
aad
pop
pop
addr16
std
add
mov
lock
mov
lea
xchg
mov
lret
sub
adc
mov
into
mov
or
or
adc
and
inc
outsl
and
sub
mov
mov
sbb
es
mov
mov
cltd
push
fnstsw
bound
sub
sub
mov
adc
mov
and
inc
and
out
xchg
fistpll
fistl
enter
push
or
cmp
add
mov
adc
imul
out
data16
sbb
fcomi
mov
ficoms
adc
pop
push
test
lea
das
arpl
out
jne
xor
mov
or
rorb
xchg
mov
push
adc
movsl
xorl
pop
sbb
push
stos
inc
stos
adc
and
xchg
mov
jle
cmp
out
pop
xchg
sahf
sbb
push
movsl
subb
mov
jno
push
mov
xchg
ljmp
scas
xor
xlat
call
jle
hlt
fdivs
xor
fisttpll
fiadds
pop
inc
push
xchg
movlhps
inc
jmp
imull
divl
dec
lea
shrl
and
add
stos
and
and
adc
sbb
push
sbb
pop
dec
or
decb
fnsave
retw
into
and
pop
xchg
sahf
popf
jae
jnp
shll
push
sbb
adc
sub
ds
cmp
push
add
push
dec
inc
repz
cmp
out
add
imul
mov
xorb
ja
fadds
inc
ret
pop
fmull
add
jp
add
stos
outsl
and
vmovsd
adc
movsl
cmp
and
adc
push
int
fcomps
sub
popa
cld
pop
pop
pop
aad
imul
jb
jbe
or
stos
push
leave
xchg
rcrl
jae
jl
cmpsb
and
inc
repz
sbb
idivl
scas
mov
stos
xor
bnd
adc
xlat
sbb
push
inc
insb
mov
mov
push
lret
dec
cmc
ss
loope
repz
out
ds
fidivrs
popa
stos
imul
push
das
test
inc
addb
mov
shlb
inc
mov
repnz
lret
test
cld
sub
or
jne
push
dec
insb
jg
scas
push
pop
shlb
and
loop
es
dec
xor
popa
inc
pop
arpl
inc
test
stc
ja
pop
or
loope
or
cmc
mov
jae
movsb
insb
inc
loope
sub
jg
hlt
mov
dec
aas
ds
cmp
or
lahf
pop
dec
je
popf
cmp
divb
adc
mov
push
adc
pop
xchg
inc
aam
test
jne
jns
int
repz
in
data16
dec
ret
mov
clc
jle
mov
dec
push
adc
sbb
out
and
mov
call
ret
sbb
imul
daa
and
jle
ret
movlhps
mov
sub
xchg
jp
push
adc
mov
adc
xchg
lcall
lds
cld
or
loopne
imul
in
outsb
in
aam
inc
outsb
push
call
lds
push
mov
rcrl
shrl
les
xor
mul
xor
scas
loope
ljmp
inc
aas
mov
insb
cltd
or
push
mov
hlt
inc
add
je
mov
xlat
mov
rolb
add
popf
adc
sub
bound
lahf
jl
mov
inc
mov
mov
adc
pop
xlat
pop
in
pop
popf
pusha
jbe
ds
cmc
hlt
push
dec
fcom
orl
sub
dec
imul
icebp
repnz
test
nop
lret
jno
xchg
das
test
nop
adc
adc
sti
inc
data16
cwtl
mov
stos
fdivs
rcrb
stc
repz
repnz
in
xchg
divb
cld
loopne
inc
jg
jmp
fwait
int3
inc
sbb
shl
mov
cmp
call
pop
negb
imul
inc
fbstp
push
not
in
lcall
data16
add
popf
jne
mov
in
hlt
lock
fistpl
pavgw
shl
daa
mov
inc
pop
lret
and
imul
rclb
cwtl
rorl
or
push
jne
cmp
xlat
mov
cmp
out
cltd
cltd
or
cmp
pop
sub
xchg
and
leave
mov
and
and
cmp
out
adc
add
outsl
and
pop
inc
cmpsl
jne
jbe
hlt
push
cwtl
or
adc
addb
xor
dec
jae
adc
sub
xchg
loop
bnd
push
scas
lods
sbb
mov
in
aad
pop
andl
push
mov
mov
push
add
mov
push
or
xor
xor
cmc
scas
mov
jp
mov
mov
or
jns
test
mov
lahf
mov
pushl
dec
inc
repnz
push
outsl
das
push
roll
lods
mov
xchg
sbb
int3
loope
out
in
or
jecxz
sti
mov
sub
shll
fnsetpm(287
jmp
mov
fsubs
mov
into
ret
inc
mov
mov
cli
clc
addr16
out
pushf
nop
js
push
inc
fcmovb
or
sbb
or
mov
repz
imul
cmp
or
and
or
push
dec
addl
sbbb
hlt
cmc
xchg
rol
arpl
pushf
icebp
xchg
jecxz
push
jmp
jo
cmp
std
jp
and
xchg
movsb
mov
xchg
subl
nop
or
or
cld
lcall
insl
stos
inc
divl
mov
cmp
mov
xor
fidivl
lods
push
imul
sub
push
xor
xchg
ja
clc
adc
dec
in
aad
sbb
jmp
pop
test
sti
cmp
push
or
ret
fs
insl
xor
lahf
xchg
sub
addr16
test
mov
cmpl
repz
cltd
icebp
adc
into
pop
int3
xchg
dec
sti
incb
pusha
xchg
movb
movsl
bound
repz
dec
cmp
inc
push
dec
push
std
loop
insb
lcall
movsb
sub
orl
test
xchg
out
sbb
pusha
out
stc
andb
repz
ror
lods
fnsave
loope,pt
push
pop
dec
mov
xchg
mov
lahf
in
gs
out
push
sbb
ret
popf
iret
daa
jle
jb
mov
jb
mov
jg
shll
mov
adc
fldt
push
push
fnstsw
or
xlat
or
loop
jae
inc
popf
out
jle
add
pop
mov
mov
push
stos
mov
push
xor
adc
xchg
inc
ljmp
lret
jbe
nop
fnstenv
jo
lods
dec
xchg
mov
dec
arpl
in
popa
imul
iret
int
mov
jns
lret
jle
loopne
outsb
repnz
mov
fbld
sbb
cli
jb
ffree
pop
ret
xchg
adc
popf
shr
push
or
mov
jo
xor
js
sti
mov
jo
add
inc
jns
in
jo
mov
das
push
dec
push
push
dec
call
mov
movsb
movsb
insb
mov
jl
xchg
pop
hlt
lock
das
repz
pop
movsl
lods
sti
and
or
addl
arpl
or
jbe
ljmp
cmp
jb
cmp
fs
aam
je
xchg
shll
negb
in
push
push
cmp
enter
and
ret
cmp
loopne
jecxz
dec
nop
clc
mov
adc
inc
inc
mov
pop
adcb
add
stos
fnstcw
aas
xor
cmc
into
fstps
adcb
daa
jae
mov
ljmp
popf
fadds
pop
jl
pop
pop
cmp
sub
jb
dec
or
fdivrl
das
inc
shll
sub
mov
push
stc
es
popl
outsb
shll
iret
ja
fwait
out
inc
cmp
js
cmp
outsb
in
mov
es
in
out
xor
push
mov
push
cmp
es
cmp
pop
and
lock
or
jne
testb
test
fcmovnb
mov
mov
add
filds
mov
mov
xchg
stc
testb
loopne
mov
inc
out
and
pop
lods
pop
jl
xchg
mov
rcr
cmp
xchg
sub
cwtl
inc
xchg
sbb
daa
mov
pop
inc
sbb
fnstenv
dec
scas
loope
ja
add
lret
lret
adc
loope
jp
jmp
jle
faddl
dec
or
stc
pop
cmp
ret
nop
xchg
ret
xchg
bound
ljmp
out
push
pushl
push
xor
cs
jne
lret
cmpsb
push
xchg
sub
scas
lcall
insb
movb
or
das
lock
cs
je
push
shr
ds
into
add
aam
mov
jle
mov
sahf
aas
into
ss
xchg
lods
cmp
xchg
in
das
ss
mov
add
lret
mov
adc
scas
pop
int
sub
std
in
pop
add
mov
and
sbb
mov
stos
jnp
test
ret
popa
adc
test
lcall
or
add
xchg
push
mov
outsl
gs
xor
test
lahf
fistps
sub
loop
sub
add
in
into
push
mov
sbb
lods
lods
xor
arpl
nop
mov
mov
mov
cli
and
sahf
jp
out
cmp
and
rolb
icebp
inc
mov
sub
jbe
rcr
sahf
or
insb
add
adc
push
pusha
dec
fiadds
add
mov
add
das
aaa
add
daa
add
adc
or
cmp
push
enter
mov
cltd
dec
pushl
gs
scas
mov
jg
jmp
mull
inc
add
sub
inc
jle
loopne
mov
repz
fildll
xor
lds
dec
outsb
mov
fsubl
or
sub
movsb
popa
data16
mov
enter
iret
add
mov
in
or
sti
xchg
shlb
and
in
jge
lods
sub
pop
mov
fisubrs
aas
les
mov
dec
dec
inc
inc
dec
fdivs
out
add
or
in
lods
cmc
jmp
in
mov
mov
mov
fmull
out
rclb
fldt
xchg
adc
je
subl
adc
jmp
and
fistps
xchg
ljmp
xor
mov
into
cwtl
rcrl
scas
jo
xlat
or
fcompl
cmp
fwait
push
iret
or
xlat
std
dec
dec
xchg
pop
fwait
xchg
sbbb
inc
xchg
xor
stos
inc
bound
sub
cmpsb
jl
sub
mov
nop
sub
jmp
mov
aaa
jno
add
pop
nop
jl
pop
test
sub
lret
scas
jge
dec
into
ret
mov
dec
pop
das
mov
sbb
mov
std
and
sbb
mov
es
rcr
adc
xor
rorl
aam
rcrb
xchg
sbb
sbb
cmpsl
lret
sub
les
and
lods
stc
mov
lahf
inc
mov
xlat
cs
add
sub
and
lret
xor
divb
sbbb
adc
scas
int
lock
mov
mov
test
idiv
push
push
and
es
add
imul
cmc
dec
popa
stos
scas
push
jg
in
adc
outsb
out
sbb
inc
cs
inc
and
flds
ret
xor
mov
shrb
outsb
cmp
std
bound
sub
dec
pushf
cld
cmp
lock
cmp
repnz
hlt
pusha
or
fcmove
sbb
sti
movsl
xor
stos
mov
int3
sub
loop
cmp
pop
pop
cld
add
sub
mov
cmp
dec
fidivl
xor
inc
mov
push
cmpsb
int3
icebp
sarl
stc
es
out
cmp
dec
cwtl
lea
hlt
ljmp
add
lcall
addb
inc
subb
dec
lahf
clc
fcmovu
test
pop
mov
cmp
cld
mov
xchg
sub
push
dec
mov
cmp
roll
cmp
test
jg
cmc
push
cmp
pop
call
push
gs
cld
in
stc
mov
aaa
inc
mov
faddl
out
adcb
mov
cs
fisttpll
lock
js
add
jge
es
jnp
sti
mov
aad
sub
loope
jmp
push
fisttpll
cmp
lcall
dec
mov
lods
aam
out
or
mov
stc
mov
cmpsl
push
mov
jno
jmp
lock
push
xlat
leave
dec
push
mov
push
push
out
repnz
outsb
inc
aas
sub
lock
shl
sbb
add
sbb
sbb
sub
pusha
jge
pop
pop
push
fnstenv
xchg
cmp
adc
ficoml
lahf
dec
xchg
sarl
es
cli
xchg
movl
cli
lods
cmp
popa
testb
pop
xor
bound
lods
test
add
pop
test
loopne
movsl
sub
popa
aam
fwait
jns
out
add
iret
lcall
jns
jg
mov
ret
hlt
mov
xchg
push
loope
mov
in
lods
adc
xchg
sub
rorl
add
test
shl
rorb
xor
lret
sub
push
pop
jp
rcl
mov
cmpb
shrb
stos
adc
jecxz
mov
mov
sub
push
cli
sub
les
lahf
insl
movsb
lock
xor
adc
pop
pop
cmpsb
jae
xor
push
xchg
into
jns
incl
mov
mov
sbb
mov
jb
dec
popf
cmp
clc
mov
out
adc
pop
pop
sbb
xorl
sbb
inc
insl
lea
movsb
sti
push
test
inc
lods
pop
aas
adc
cltd
sub
mov
cld
push
arpl
mov
aaa
enter
cmc
pop
jmp
in
fcmove
mov
movsb
sub
add
test
ret
jmp
xor
mov
adc
xor
int3
pop
dec
cmp
sub
iret
loop
fs
sub
sbb
mov
ret
fs
mov
nop
push
in
xor
push
inc
adc
insb
sarb
mov
dec
mov
call
mov
pop
xchg
mov
push
leave
mov
jmp
or
cmp
pop
shrb
mov
dec
sbb
xor
in
xor
inc
cmp
into
insl
outsl
lret
fisubrl
adc
ret
xchg
movsb
fld
pop
imul
or
xchg
xor
add
xor
dec
inc
pop
mov
pop
cwtl
adc
scas
scas
stos
mov
inc
ficomps
aaa
and
stc
sbbl
push
subb
mov
das
enter
in
std
pop
imul
mov
cs
xlat
or
fisubs
inc
xchg
dec
sbb
scas
mov
cmpsb
push
es
lock
adc
jns
and
icebp
sarb
adc
cmpsl
dec
out
outsl
pushf
adc
dec
sub
adc
and
push
pop
enter
into
mov
sti
enter
outsb
xchg
in
lret
daa
push
movsl
out
xchg
fucom
ja
dec
or
aas
xor
lods
insw
es
xchg
mov
xor
jbe
cmpsb
or
add
inc
mov
inc
insb
fcom
stos
inc
sbb
push
ljmp
repnz
fcmovbe
in
mov
xchg
ret
push
push
mov
loop
dec
int3
xor
int3
lods
fnstsw
mov
push
push
jne
int3
cwtl
cmc
enter
xchg
or
mov
scas
mov
cmp
sbb
repnz
jle
sti
and
jns
mov
movsl
sbb
rcll
xchg
or
pushf
inc
int
adc
sbb
insb
jns
and
inc
fcmove
cmp
push
pop
jbe
insl
and
movsl
in
lcall
imul
in
xor
mov
mov
mov
call
repz
repz
pop
mov
ret
jno
lahf
xor
movsl
inc
aaa
pushfw
sub
xchg
out
dec
lea
js
stos
and
push
xor
xchg
test
addr16
or
nop
ficomps
pop
sub
iret
push
out
push
icebp
lahf
sti
xor
push
mov
add
lds
pusha
aas
testb
mov
add
jmp
in
inc
jg
inc
lock
and
jg
sahf
dec
or
push
cmp
jbe
xchg
jb
adc
out
pop
mov
jmp
outsl
fiadds
fiaddl
pop
push
jg
dec
xchg
sub
int
xchg
test
pop
pop
push
cmp
or
cli
rorl
jecxz
into
pop
inc
push
xchg
adc
push
cmc
int
push
das
lea
cltd
inc
cmp
stos
mov
push
mov
push
sahf
bound
sarl
jnp
test
fstpl
testl
icebp
paddusb
jl
jg
je
insb
gs
pusha
sbb
add
sti
dec
dec
dec
out
es
shrl
lods
aad
inc
sub
call
push
mov
cmp
cli
daa
das
gs
mov
scas
test
or
ret
or
clc
mov
dec
push
repnz
fstp
sbb
ds
sbb
xor
fbld
mov
and
fistpll
fs
stos
cmp
clc
jo
xchg
lods
out
in
adc
in
jg
shrl
imul
inc
lret
jne
insl
outsb
inc
daa
xor
ja
je
xchg
jmp
cmc
aad
dec
xchg
push
aaa
in
xor
incb
ds
movb
sub
sbb
jne
inc
arpl
repz
rolb
add
lret
sub
xor
lret
sbb
mov
xor
or
test
jb
mov
hlt
pop
movsl
xchg
sahf
roll
incb
push
lods
roll
push
lea
scas
inc
scas
in
pop
aam
jecxz
aas
jle
inc
jbe
push
sub
stos
jmp
xchg
daa
inc
or
cwtl
add
nop
inc
std
mov
loopne
movb
push
stc
cmp
mov
sbb
mov
sbb
sti
fnstsw
cli
mov
xor
jmp
xor
push
sub
ss
sar
icebp
std
scas
inc
cld
ss
out
push
rcl
loope
aad
ljmp
int
pop
and
insb
mov
movsb
inc
mov
xchg
jae
movsl
loopne
data16
xchg
cmp
lea
lea
dec
jns
lahf
int3
ljmp
push
arpl
bound
adc
mov
outsl
lds
xor
repnz
ljmp
orb
and
nop
dec
pop
add
aad
sbb
jb
adc
xor
je
outsb
adc
mov
imul
push
push
or
test
stc
cmp
mov
bound
jns
std
pop
repnz
pop
orl
adc
cmp
pop
and
bound
mov
rcr
jne
je
shlb
mov
mov
jmp
cld
sub
dec
push
cld
sbb
or
mov
popa
lods
mov
lcall
mov
mul
repnz
dec
mov
inc
sub
fists
test
int
mov
and
dec
sbb
in
mov
sbb
xor
lea
push
and
in
xorl
xchg
inc
sub
cmpsl
dec
cmp
leave
xchg
ret
cmc
cmc
jbe
push
test
mov
mov
test
mov
xor
gs
dec
das
ret
xor
rol
sbb
loop
sub
aas
mov
fs
stos
adc
lock
clc
xor
jae
pop
jb
clc
stos
xchg
pop
jecxz
loop
cmp
sbb
or
cld
rorl
ficoml
or
addr16
imul
inc
out
or
adc
daa
sub
cmpsb
push
je
adc
push
cwtl
iret
inc
loopne
into
add
insb
push
cmc
cmp
divb
in
or
fiadds
lods
loope
push
mov
push
daa
orw
sbb
cli
jle
ljmp
pop
cltd
inc
repnz
sbb
f2xm1
leave
add
inc
adc
movsl
loop
pusha
cmp
clc
scas
dec
lods
das
mov
das
insb
daa
dec
pushf
pop
xor
aas
arpl
pop
adc
shll
adc
lods
jno
test
mov
pop
fidivl
ret
std
js
roll
mov
int
inc
pusha
aas
mov
inc
xor
jbe
cmp
icebp
mov
push
cmp
cmc
lcall
cmpsb
sbbl
jg
popf
dec
sub
mov
ds
push
xchg
aam
dec
insl
mov
mov
sub
jle
dec
outsb
adcl
add
inc
add
cmc
sbb
mov
xchg
xchg
out
fdiv
cli
lcall
repnz
lret
sub
loop
arpl
adc
and
test
jno
sbb
fwait
add
xchg
repz
adc
shlb
sub
arpl
mov
sbb
lret
jp
push
jl
cltd
fimuls
ret
popf
out
icebp
xchg
sub
repz
jp
loope,pt
pop
cld
stos
in
jp
clc
sub
push
outsb
inc
in
sub
clc
scas
adc
pushf
xchg
push
xchg
sbb
frstpm(287
pop
xchg
dec
push
xchg
dec
hlt
iret
add
rorl
bound
jecxz
cltd
pop
cltd
andl
jnp
dec
repnz
lret
xchg
push
sbb
jo
fidivs
iret
xchg
fdivp
and
jo
mov
fs
inc
scas
xchg
and
sbb
clc
rolb
loop
insl
aam
fstpl
cmp
or
adc
mov
mov
xor
cmp
push
and
push
test
fdivr
mov
mov
mov
push
mov
dec
jmp
fwait
xchg
ja
mov
pop
popa
or
popa
rorb
imul
repz
call
xchg
lds
sbb
lahf
icebp
push
int3
mov
in
sti
jg
push
mov
pusha
mov
and
jl
mov
gs
mov
pop
xchg
dec
adc
in
js
mov
fisttpll
pop
mov
stos
mov
pop
cmc
jno
lea
fildl
xchg
sbb
iret
pop
cmp
in
stc
sub
pop
popa
inc
fcomps
push
repz
jle
mov
xchg
push
add
jecxz
inc
mov
mov
rcll
or
xchg
inc
adc
lret
sbb
cmpsb
popf
dec
outsb
nop
and
inc
scas
call
dec
lods
or
ja
out
xchg
fcomp
idivl
js
mov
stos
clc
mov
test
push
insl
out
ret
test
xchg
or
jno
cli
notb
stos
insl
or
aad
arpl
cmc
mov
sub
mov
mov
mov
fdiv
movups
adc
pop
inc
mov
ds
out
mov
insb
xchg
inc
outsl
push
lret
push
int
add
or
jo
sarl
pop
cli
fdivs
lcall
rcll
lods
pop
inc
xchg
mov
mov
popa
xchg
outsl
cwtl
lock
and
fwait
push
les
lahf
insl
push
cwtl
xchg
dec
lods
fadd
ficoml
cwtl
add
and
xor
sahf
outsl
mov
cmc
fstps
movsl
mov
popa
lea
pop
movsl
push
jl
sub
pop
std
in
dec
mov
mov
push
push
and
mov
cmp
sbb
add
mov
mov
stc
add
rolb
push
dec
pop
mov
add
shl
out
in
jge
out
popf
and
xor
test
add
push
add
push
push
sub
cmp
out
rolb
sub
jae
add
aas
ret
jmp
mov
sbb
inc
pop
push
pushf
sti
clc
rclb
and
pop
push
mov
adc
sbb
sar
lret
jbe
leave
mov
inc
aaa
imull
js
sub
mov
dec
imull
outsb
cli
xor
jmp
int3
outsb
fcmovbe
mov
icebp
cmp
call
inc
adcb
xchg
add
add
pop
adc
dec
rcll
enter
mov
dec
pop
push
call
pop
add
jmp
pop
sub
mov
cmp
rorb
mov
cs
fcmovnb
sbb
insb
mov
push
cld
mov
std
mov
and
mov
and
dec
cwtl
aaa
les
gs
loop
mov
mov
es
pushf
jl
lds
sahf
lods
ds
xor
sbb
adc
in
push
xchg
xchg
push
ljmp
and
outsb
leave
in
std
in
jo
adc
xor
mov
fstpl
outsb
arpl
or
pop
inc
cli
sti
pop
jmp
test
jp
adc
push
rcr
inc
jno
push
daa
mov
fldenvs
hlt
sarb
das
imul
imul
dec
movsb
mov
cli
sbb
shll
jne
push
cli
inc
loop
int3
loope
outsb
push
add
and
dec
imul
inc
lahf
sub
ret
xor
mov
adc
movl
std
mov
xchg
add
sbb
pop
jp
push
push
cli
imul
subl
bound
imul
pop
stos
inc
popf
mov
mov
jnp
insb
aaa
cltd
fdivl
add
pushf
mov
mov
mov
dec
jns
jb
mov
cmp
aaa
jae
sub
fcmovnb
mov
xchg
mov
push
adc
int3
stc
cmp
pop
cld
lahf
jns
cmp
cmp
stc
aad
sbb
aaa
daa
inc
jo
ret
clc
scas
movsl
cmp
jb
filds
jnp
addr16
push
lods
sub
add
cmp
xor
cmp
xchg
notb
in
mov
mov
les
mov
xchg
clc
pop
xchg
sbb
je
lock
or
cmp
inc
cmp
jo
into
pop
in
es
jnp
inc
mov
jne
rcrl
ret
pop
push
xchg
test
pop
iret
mov
loop
outsb
add
or
dec
ljmp
push
dec
aam
or
xchg
cmpsb
jnp
lret
es
xchg
add
dec
jno
adc
sbb
xchg
mov
loopne
mov
fisubl
adc
orb
mov
int
sbb
shrl
and
jb
and
xchg
add
andl
jno
loop
xchg
adc
imul
add
or
popa
nop
sbb
mov
loopne
mov
xchg
push
fadds
cmp
cmp
sub
out
lret
adc
or
imul
pusha
cmp
push
sub
push
mov
jns
cmp
add
pushf
icebp
xchg
loop
mov
xchg
and
out
xchg
sub
dec
scas
icebp
mov
cmpsl
fbld
stos
in
fsts
xor
or
sub
push
fs
mov
pop
ljmp
lcall
icebp
hlt
mov
test
scas
jno
sub
dec
mov
or
fbstp
sti
cmp
push
dec
mov
inc
sti
add
std
jp
xor
dec
imul
sbb
stc
inc
sbb
pop
mov
out
push
stos
lods
mov
jecxz
pop
cmpsl
hlt
jae
xlat
dec
inc
jl
outsl
sbbb
rclb
ljmp
les
insl
push
in
pop
mov
xor
test
movsb
push
mov
pop
xor
int
subb
jle
dec
push
into
orl
pop
adc
mov
jns
or
std
rcll
sbb
test
cmp
test
popf
lret
cwtl
lcall
jnp
cmp
xor
jl
mov
or
jecxz
jne
jbe
nop
sub
les
jg
shrl
fdivs
clc
addr16
cmc
in
xor
dec
inc
mov
jnp
push
das
xchg
fs
call
das
jg
inc
jbe
fldl
push
sub
add
inc
xchg
xchg
sub
push
lods
push
jge
in
push
cmp
jb
int3
inc
aas
jb
incb
les
call
sub
mov
test
add
clc
aam
addb
lea
add
and
rcrl
pop
int3
out
je
mov
pop
jle
ret
and
ss
xor
stc
enter
sti
call
adc
push
jl
stos
in
push
or
jnp,pt
mov
into
or
fwait
jo
jo
xlat
sbb
push
cmc
adc
ret
into
cmp
jae
mov
xchg
pop
adc
mov
cmpsl
ret
ret
add
and
jge
arpl
cmp
rorl
adc
cmp
mov
cmp
fisttpll
imul
mov
push
mov
push
and
ss
adc
daa
xchg
dec
jae
aam
sbb
adc
xchg
jmp
sub
mov
xlat
outsl
pop
jbe,pt
push
inc
cmp
cmp
pop
add
xchg
mov
cmpsb
adc
or
jnp
sub
cs
pop
jnp
loope
push
mov
mov
mov
push
push
push
std
ret
or
stos
fimuls
xor
xor
jbe
pop
rclb
pop
test
psllq
xchg
nop
lea
fs
shll
dec
faddl
pop
push
sahf
xchg
inc
icebp
cmp
cmp
jmp
int
cmp
fwait
xchg
or
mov
push
adcl
sub
mov
leave
xchg
insl
icebp
int
xchg
jl
pop
inc
pop
loopne
dec
cwtl
packuswb
mov
mov
decl
idivl
test
dec
adc
scas
shrl
std
fstpl
shlb
sahf
mov
cs
cmp
lock
rclb
cmp
dec
pop
jns
rolb
push
loopne
in
roll
adc
std
rol
or
and
mov
shl
addl
xor
mov
cmpsb
pop
ret
xor
outsb
sub
in
jbe
xchg
repnz
ja
lahf
inc
push
push
scas
push
je
xchg
cld
cld
sub
shlb
jg
add
into
popf
rorl
add
sub
cmpsb
mov
mov
in
sub
hlt
pop
cmp
insl
jle
jg
jl
or
popf
mov
andb
or
xor
dec
adc
mov
and
or
dec
adc
pop
ds
pop
inc
jbe
inc
mov
push
jne
test
cld
ja
test
mov
test
xchg
sub
dec
enter
adc
loopne
inc
iret
xor
cmpsb
aaa
sbb
lcall
dec
xchg
mov
mov
out
jmp
push
xor
lret
sbb
sub
std
imul
iret
push
ljmp
loop
inc
mov
ds
jmp
fnstenv
push
movb
movb
popa
ret
bound
push
sbb
stos
lods
nop
fisubs
mov
jmp
pop
dec
and
sub
out
pop
lret
paddd
xchg
xchg
inc
fidivrl
pop
pusha
jae
stos
int
mov
push
adcb
adc
inc
das
mov
stc
rcr
in
shlb
push
mov
inc
mov
les
int3
in
loop
cmp
cmp
mov
pop
sahf
sarb
lods
out
scas
inc
pop
mov
outsb
js
jae
incl
jge
pop
stos
movsb
push
fdiv
or
or
push
mov
mov
ja
cmp
pop
stos
cmpsb
idivl
pop
push
sbb
jno
das
pusha
mov
lods
mov
data16
jmp
inc
loopne
scas
and
pop
add
loop
mov
mov
sbb
rcrl
lret
loopne
adc
sbb
nop
jp
add
daa
push
cld
push
jns
xchg
xchg
test
jle
xchg
or
scas
xor
nop
jl
mov
push
xchg
pop
test
push
cmpsl
jge
sbb
mov
push
mov
jnp
pop
scas
inc
fwait
popf
or
mov
outsl
mov
jp
and
jge
repz
and
mov
inc
pop
pop
jmp
aad
test
mov
cld
dec
mov
call
adc
dec
xorl
inc
xchg
mov
repz
pop
xor
mov
shll
jle
mov
xchg
cltd
or
imul
inc
js
pop
add
xlat
push
popf
mov
mov
jl
movsb
fcmovnu
or
movsl
sub
popf
push
jbe
aaa
int3
movsb
push
mov
stc
test
add
mov
mov
mov
fs
stc
fcoms
ljmp
loop
jns
in
pop
dec
mov
dec
shll
pop
cli
xchg
sub
sub
jae
imul
bnd
loopne
ja
jns
or
ljmp
xorl
sub
call
mov
mov
cmp
xchg
and
roll
dec
pop
sub
push
insl
std
dec
ss
ret
cmpsl
das
outsl
xor
rol
enter
aaa
repnz
mov
lods
ljmp
iret
and
dec
add
dec
call
movsb
clc
or
sti
nop
scas
imul
mov
fdivrl
adc
mov
add
ffreep
ja
dec
pop
or
mov
push
frstor
ss
add
jmp
adc
std
insb
mov
mov
ret
jge
or
ds
roll
lcall
mov
sub
pop
push
andl
cmp
rol
outsl
push
or
fcoms
mov
mov
lods
cmp
cmpsl
test
sub
test
jmp
adc
aas
or
pop
cmp
imulb
and
aas
inc
jle
in
hlt
inc
xchg
cmpsl
mov
cmpl
push
adc
jno
xchg
ficompl
or
cltd
sbbl
jo
xor
stos
mov
ret
sbb
pop
outsb
lret
push
xor
pop
lret
lock
and
jno
mov
adc
or
shll
add
sbb
lcall
insl
outsb
push
adc
int3
mov
jl
push
mov
out
pop
add
cmpsb
cwtl
bound
inc
pop
push
xor
xor
inc
aam
hlt
add
jnp
xor
xchg
push
sub
fsubp
fists
xchg
in
cmpsb
mov
add
sub
mov
push
push
lret
adc
fs
das
add
add
lcall
fsts
jne
xchg
pop
es
sbb
fsts
mov
sarl
subb
jp
clc
data16
cmova
cwtl
mov
sub
mov
pop
xchg
loopne
jle
add
xchg
inc
xor
mov
or
xchg
sbb
jo
out
pop
aas
xchg
jnp
sub
test
sbb
repnz
jne
gs
jo
cmc
cmp
loopne
jmp
imul
into
lcall
sub
ds
loope
pop
jmp
outsl
adc
cmp
leave
daa
mov
jmp
mov
fsubs
push
icebp
into
mov
mov
sti
inc
lock
dec
imul
adc
and
rcrl
sti
shrb
aam
cmp
sub
cli
push
and
push
xor
jnp
mov
xor
push
lret
insb
imul
andb
mov
adc
ss
inc
test
inc
sbb
sbb
in
loop
pushf
int3
cmpsb
jge
and
sbb
pop
cmpl
cmpsb
femms
mov
mov
jnp
push
mov
div
test
jo
adcb
je
fdiv
push
dec
cmp
pop
sub
cmc
inc
pop
in
push
or
push
enter
xor
push
xor
jns
pop
aaa
cmp
loopne
jp
jbe
dec
lret
std
ret
xlat
mov
and
out
add
mov
mov
test
lret
push
in
jmp
inc
jne
mov
mov
nop
xor
xchg
lret
xor
mov
into
outsl
aad
jno
xchg
int
mulb
cmc
fwait
mov
mov
mov
mov
cmpsb
sti
and
int3
xchg
enter
enter
sbbb
push
xor
in
arpl
push
std
xchg
cmpsb
push
scas
or
jne
cltd
repz
repnz
xchg
mov
cld
das
mov
jp
pushf
mov
jae
fimull
xor
call
jne
hlt
xchg
push
lret
cmp
je
xchg
outsb
icebp
xchg
mov
mov
shr
sarb
cld
gs
leave
roll
fcmovb
xor
out
xor
xor
cmpsw
mov
xlat
xorl
dec
lock
stos
add
mov
leave
mov
pop
add
mov
repz
push
pop
jbe
dec
imul
and
jno
rorb
jle
lcall
ret
push
aam
xorl
ret
stos
cli
and
sbbb
adc
mov
aas
push
and
jns
inc
inc
cmpsb
popa
mov
or
cmpsl
xor
push
ret
mov
inc
and
icebp
fimuls
into
ja
imul
jg
dec
dec
pusha
lods
dec
push
xor
nop
fiadds
xor
cmovg
ljmp
mov
sbb
xchg
inc
jge
cmp
pop
mov
xlat
aam
lret
and
push
outsl
data16
fwait
mov
dec
cmp
push
jno
sub
frstor
xor
call
mov
out
not
xchg
into
in
mov
lret
stos
andb
dec
je
fcoms
mov
add
push
add
call
xor
and
push
cwtl
movsl
push
inc
ja
jae
adc
rcrl
aad
sub
notl
cmc
pop
inc
jns
inc
aas
inc
ret
adc
int3
inc
jae
dec
sbb
lcall
cltd
inc
add
ds
xchg
stos
xor
fcomi
inc
mov
lods
out
fsubr
xchg
add
lea
test
ss
ficomps
mov
jp
mov
jnp
xor
mov
xor
xchg
push
mov
outsb
cmp
movsb
sarl
lods
sub
aaa
xorl
gs
adc
ret
push
mov
gs
sbb
pop
dec
sub
std
test
inc
loop
shlb
fadd
mov
mov
dec
jno
bound
jae
inc
push
adc
loop
mov
fidivrs
push
mov
sbb
lret
stos
inc
hlt
inc
jecxz
adc
jns
inc
push
or
jne
pusha
cs
cmc
fs
push
lods
xchg
icebp
nop
add
out
cmp
ret
sbb
dec
pop
cmp
pop
pop
mov
push
xorb
cmp
lahf
jb
mov
lret
add
in
out
out
cmp
out
jo
fsubs
mov
mov
jb
insl
push
mov
add
aam
movsb
shrl
xor
out
pop
cli
gs
ljmp
inc
iret
loop
mov
lahf
iret
inc
daa
stos
dec
out
loop
pusha
loop
je
and
inc
mov
popa
adc
fisubrl
into
add
fnstenv
aaa
test
in
mov
mov
mov
pop
jp
push
cmpsb
into
sbb
cli
dec
les
outsl
xchg
pop
cwtl
ret
hlt
pop
mov
pop
aad
iret
cwtl
and
mov
xor
loope
pop
test
xchg
jo
daa
xor
movsl
jno
loope
inc
and
xor
adc
lcall
add
push
fistpll
in
out
xchg
aad
mov
addr16
testb
inc
clc
xchg
nop
je
adc
loopne
mov
adc
jl
call
push
into
sbb
and
cli
inc
dec
push
and
hlt
push
fnstsw
test
push
fs
inc
xorb
add
shlb
dec
push
mov
fidivrl
mov
push
fldt
and
bound
dec
jno
shrl
das
iret
fidivl
mov
movsl
jmp
lock
adc
hlt
sbb
in
iret
ss
fildll
or
pop
adc
xchg
clc
or
mov
iret
cmp
xchg
xor
lret
and
mov
push
in
sbb
adc
fld
in
mov
out
dec
mov
sub
fwait
mov
scas
ja
clc
jne
les
adc
test
leave
jge
pop
cld
adc
cld
xchg
pop
test
shll
fisttpll
jne
fdivl
int
outsb
jns
inc
inc
ds
mov
pop
dec
add
addr16
cld
stos
xchg
cmp
data16
rclb
nop
loope
mov
pushf
cmp
add
xchg
sbb
shl
lods
insl
sbb
push
add
jg
shll
out
das
jl
in
pop
inc
inc
fldcw
fcomip
aad
jecxz
std
mov
push
filds
jb
inc
mov
jo
loope
inc
jmp
es
adc
xor
xchg
shll
out
sub
imul
cmc
neg
mov
mov
inc
or
or
mov
cwtl
enter
cs
or
pop
das
and
mov
and
push
adc
adc
call
popf
in
mov
inc
xlat
fimuls
ja
dec
sub
lret
xchg
xchg
pop
mov
mov
push
add
repz
sub
test
fildl
sbb
push
xor
jl
mov
sbb
mov
sti
fs
xlat
sbb
jne
test
mov
add
pop
xchg
push
mov
push
dec
dec
lret
ficoml
inc
mov
fidivrs
or
adc
decl
icebp
sub
outsl
subl
xor
imul
addr16
push
xor
and
popa
mov
sahf
mov
stos
adc
mov
sub
or
cwtl
sub
mov
sub
dec
xor
inc
aaa
aad
lods
xor
mov
insl
mov
mov
nop
add
push
cmp
and
loop
or
mov
cwtl
fstpl
cli
pop
jae
pop
adc
push
mov
inc
sub
push
or
negl
mov
push
jle
popf
std
loope
add
repnz
lods
jl
push
in
mov
lret
in
or
dec
out
pop
xchg
sahf
cmp
sub
lock
lea
test
jns
insb
ret
xor
push
insb
incb
dec
sbb
addr16
sarl
sbb
lea
cwtl
sti
movsb
mov
add
loope
xchg
sbb
dec
cmp
mov
in
xlat
mov
mov
repz
dec
jne
sub
xchg
mov
cmp
enter
cmp
or
sbb
mov
dec
das
and
inc
mov
mov
loope
bound
ljmp
scas
popa
mov
fnstenv
repz
fisttpll
sub
inc
fstpt
add
sti
ret
mov
rcrb
rol
stos
mov
into
testb
mov
pop
dec
or
or
int3
adc
push
jae
cmp
ljmp
shlb
pop
or
mov
dec
wbinvd
mov
and
vcvtsi2ssl
xor
mov
sub
push
out
aam
inc
push
lcall
js
cwtl
scas
test
push
xor
cmp
cmp
fsubrp
enter
mov
and
stc
scas
iret
pop
mov
dec
inc
push
jae
jl
ds
stos
jl
cmp
loope
test
xor
outsb
adc
es
jbe
jne
inc
arpl
inc
jns
mov
and
sub
fwait
les
rorl
movsb
add
add
sbb
dec
mov
and
nop
and
sbb
repz
pop
js
pminsw
inc
adc
fwait
and
adc
lcall
out
mov
mov
out
lock
push
inc
xchg
nop
adc
outsl
mov
mov
mov
insb
inc
lea
subb
frstor
sbb
mov
ljmp
cmp
jl
or
out
sti
cmpsb
or
iret
lahf
lods
popf
lret
xor
xchg
aam
pop
adc
xor
adc
sbb
jle
dec
stos
in
pop
push
into
sbb
nop
rorb
mov
fcoml
icebp
stc
ret
sub
mov
inc
cld
xlat
and
xor
sub
adc
int3
sub
xor
addr16
adc
fsubs
lcall
cmp
xor
les
and
fisubrl
mov
lcall
xchg
push
repz
ret
insb
pop
das
jae
adc
mov
faddl
aas
out
test
sti
or
xor
aas
imul
outsl
mov
push
rorl
inc
inc
mov
pop
scas
das
sub
sub
sbb
and
cmpsl
lahf
mov
loope
xor
into
xor
std
mov
dec
mov
adc
pop
mov
xchg
neg
fdivrp
xor
repz
movsb
movl
dec
imul
push
lods
paddsb
mov
addr16
mov
jmp
insl
add
rol
add
push
push
jmp
mov
outsl
stos
jle
data16
dec
add
mov
jno
mov
add
mov
cmp
sub
test
lock
adc
or
xor
push
cli
or
pop
jnp
std
jbe
out
xchg
lcall
jl
fyl2xp1
add
dec
andb
push
iret
mov
int3
ud1
mov
jne
out
ror
or
sbb
adc
dec
rcrb
sbbb
sbb
adc
shlb
jae
scas
pusha
enter
inc
lods
mov
lret
jmp
jb
mov
cltd
add
insl
mov
push
sbb
jns
and
mov
icebp
cmc
fdivl
dec
xor
pop
jl
mov
ljmp
sbb
rol
mov
xor
fwait
add
loope
aas
xchg
adc
push
cli
xchg
aam
sbb
sub
sub
mov
cs
pop
stos
add
pop
mov
sub
pop
ja
filds
and
movlhps
push
or
jmp
outsb
inc
add
mov
enter
pop
cli
xor
mov
mov
cs
sti
mov
insl
hlt
mov
cmpsl
fldt
icebp
aas
clc
out
mov
in
aad
icebp
dec
subb
push
dec
ljmp
cld
jge
gs
inc
xor
mov
fdivr
fadd
mov
std
sub
or
xor
mov
clc
insb
inc
in
fs
sub
data16
sub
or
insb
cmp
xchg
sahf
mov
ja
into
addr16
in
or
jle
push
add
ret
mov
repz
mov
outsl
xchg
inc
movsl
out
dec
cmp
mov
addr16
or
in
inc
push
rcrl
outsb
mov
nop
lea
jge
scas
mov
lods
insl
pop
test
cld
ja
inc
add
or
pop
xor
xor
pop
dec
xor
jle
imul
and
sbb
mov
leave
jno
std
mov
ss
dec
in
call
imul
cld
inc
repnz
mov
lahf
mov
repz
xlat
cmpsb
repnz
adc
imul
popa
mov
xchg
in
addr16
rol
adc
or
mov
dec
and
pop
iret
divb
divb
into
into
or
push
js
inc
push
cmc
lret
or
jl
or
fiaddl
jp
shl
rorl
negb
mov
dec
push
adc
enter
push
int
daa
dec
mov
jl
add
iret
fnstcw
scas
pop
xchg
mov
arpl
shrl
sbb
fbstp
or
mov
daa
aad
mov
sbb
clc
pop
shl
dec
insl
pushl
testl
sub
inc
test
and
ret
xchg
inc
or
dec
add
out
jnp
out
or
sub
filds
push
rorl
test
push
jl
push
pop
xchg
push
call
sarl
mov
imul
out
call
and
into
jmp
mov
jmp
stc
repz
arpl
jp
mov
sahf
pushf
clc
lret
loopne
pop
jns
mov
cld
mov
insb
js
enter
leave
jecxz
cld
pushf
push
cs
scas
jbe
mov
mov
mov
orb
int
ja
inc
fcoml
xchg
jns
int3
jb
mov
jb
repnz
outsb
lret
cld
rorl
add
pop
sbb
cmpsl
sbb
cmp
jp
or
mov
xor
lea
lea
mov
addr16
push
fisubrs
out
mov
add
fiadds
popl
inc
std
cmc
ljmp
xchg
mov
leave
pop
mov
clc
adc
stc
loope
mov
int3
pop
jecxz
and
and
cmp
fldl
stc
jge
sbb
inc
dec
inc
aaa
imul
out
mov
xchg
pop
mov
sbb
std
ljmp
mull
pop
iret
sub
sbb
je
and
mov
les
popa
enter
jnp
pop
mov
add
or
outsb
pop
push
inc
negl
imul
addr16
test
pop
dec
fcomp
adc
ret
and
adcb
lret
pop
dec
mov
sti
cld
dec
pushf
xchg
xlat
mov
inc
jg
push
inc
call
sbb
movsl
xchg
jp
and
ja
add
outsl
fimuls
xchg
mov
pop
in
push
enter
jl
xor
ret
pop
rcrb
sti
add
cltd
fimuls
push
and
rol
ja
cmpsl
iret
std
cmp
add
orl
loop
movsl
xchg
sub
test
icebp
mov
push
rcl
mov
sbb
fs
addr16
mov
pop
dec
repz
push
test
hlt
sbb
rcrb
subl
mov
xchg
cmpsl
pop
cmp
ja
pusha
mov
cmc
faddl
mov
outsl
int
ret
and
add
stos
xor
xchg
stc
jae
lahf
mov
push
inc
push
cltd
loop
push
jbe
and
cmc
scas
and
imul
jmp
ss
dec
mov
jg
aam
mov
sub
sub
inc
mov
rclb
add
and
cmp
fisubl
inc
cmp
mov
push
pushf
loope
cmpsb
jp
inc
popa
in
orl
jmp
shrl
adc
nop
mov
sub
fsubs
sbb
popf
in
roll
push
lret
sbb
or
shlb
fs
int3
sub
fs
mov
cld
mov
sub
lods
jmp
pop
sti
lods
xor
xchg
push
push
push
lods
adcl
adc
in
adc
jne
add
dec
scas
mov
movsl
dec
dec
sub
add
test
cmpsl
xchg
and
xor
incb
sti
lock
scas
add
into
popl
fcomps
push
and
sbb
mul
sbb
cmp
pop
jl
ror
sti
outsl
iret
fldt
bound
pop
addl
adc
inc
rorb
dec
cltd
rep
adc
sub
std
loop
or
into
add
mov
lcall
cwtl
icebp
mov
jle
cwtl
ljmp
sbb
jbe
fcoms
and
cmpl
andb
arpl
adc
dec
adc
push
test
xlat
mov
int
clc
pop
mov
pop
jne
enter
movsl
cmpsb
pop
push
push
cmc
in
iret
mov
add
int
push
dec
and
push
loop
jno
fucomi
mov
test
aaa
addl
test
cmp
mov
mov
fcomip
cmc
pop
outsb
jge
pop
push
push
mov
popa
sub
es
mov
cwtl
sub
js
inc
mov
sbb
xor
adc
cmc
orl
xchg
bnd
out
repnz
inc
xchg
roll
lahf
sarb
fnstsw
pop
mov
push
in
cwtl
pxor
jl
dec
adc
mov
inc
out
data16
inc
cli
push
pop
jnp
xchg
add
sub
clc
adc
fildll
mov
aam
sub
pop
mov
mov
mov
push
lock
sbb
popa
repz
push
jmp
xor
imul
pop
pop
imul
test
dec
popa
cmpsl
loopne
or
out
sbb
in
or
test
ret
and
frstor
mov
mov
jne
stos
cli
out
mov
bound
or
pop
xchg
adc
nop
cltd
mov
out
sub
pop
mull
lea
ret
insb
out
outsl
xlat
inc
sbb
push
inc
mov
mov
pop
adc
les
add
std
or
pushf
dec
mov
mov
test
pop
pop
sbb
loope
inc
jne
xchg
mov
popa
popa
or
mov
andb
dec
clc
sbb
inc
scas
xchg
lods
pop
add
mov
subl
adc
cmp
das
mov
outsb
fidivrl
lea
xor
ret
or
pop
fimuls
or
pop
lret
je
sub
pop
lods
jae
cmc
push
mov
cs
adc
hlt
lahf
movsl
mov
cli
and
roll
or
adc
and
xchg
mov
jno
push
mov
push
sbb
rcrb
ficoml
pop
lret
fcmovb
or
cmp
sub
mov
adc
push
loope
es
into
mov
push
stos
into
je
pop
mov
xchg
jg
pushf
lods
mov
adc
xor
bound
xor
nop
negl
jp
inc
rolb
cwtl
movsl
lea
mov
subb
movsl
or
mov
cmpsb
pop
sub
push
cmp
xlat
test
ret
xchg
cwtl
orl
sub
scas
cmp
loope
push
push
add
jb
lods
arpl
sbb
cs
aaa
mov
push
xchg
sbb
incb
dec
jb
xchg
gs
jmp
aam
mov
mov
push
and
repz
cli
mov
filds
xor
das
mov
in
addb
add
add
mov
aam
inc
out
add
scas
in
mov
cmp
adc
adc
aas
add
sbb
dec
push
idiv
add
cmpb
adc
movb
and
or
pop
mov
mov
inc
lds
and
stc
jbe
je
jg
xchg
adc
pop
out
lds
pop
stc
test
push
je
mov
push
xchg
or
shl
or
cld
call
push
xchg
scas
call
xor
jno
lahf
loop
or
scas
and
adc
movhps
push
mov
mov
sub
test
mov
mov
sub
clc
shlb
sbb
pop
pop
push
in
outsl
shll
mov
add
xchg
sti
mov
jl
or
sbb
sbb
mov
and
pop
mov
dec
jle
adc
xchg
cmp
cmpb
gs
loopne
sbb
or
jns
insl
or
and
div
mov
loop
mov
test
fstpt
sub
push
mov
daa
cwtl
test
adc
aas
adc
insl
adc
jge
inc
mov
lods
loop
adc
scas
sbb
fchs
pushf
movsl
call
dec
mov
mov
sbbb
pop
push
add
xor
jg
sub
add
xchg
sub
pop
sub
ss
sub
inc
jb
sbb
into
stc
sahf
adc
pop
arpl
lea
cli
repnz
fldl
dec
addr16
js
and
mov
mov
loopne
cmp
mov
jbe,pt
imul
in
lcall
mov
sub
dec
xor
lock
data16
mov
lods
adc
das
jecxz
mov
gs
in
sub
push
push
popl
cwtl
sub
xchg
and
cmpl
outsl
movsl
cmp
andl
push
or
dec
xor
dec
std
push
add
mov
aad
leave
out
dec
je
adc
stc
shll
cmp
mov
dec
popf
push
loop
cmpsl
add
add
lods
inc
movsb
sbb
ret
dec
and
adc
test
mov
xor
sub
fstpt
mov
push
aad
call
jns
lret
dec
mov
sarb
daa
xlat
jne
call
js
cmp
enter
or
fs
push
ljmp
ret
mov
lret
lcall
decw
lahf
pop
push
test
xor
jecxz
shll
mov
cmc
jecxz
popa
out
outsl
cli
or
jl
mov
pop
pusha
rorb
outsl
mov
lahf
jle
inc
mov
loope
jle
insb
stos
cmp
mov
call
into
push
mov
and
mov
add
mov
bound
filds
xor
dec
add
cwtl
push
mov
adc
movb
aaa
pusha
mov
dec
leave
daa
movsl
data16
clc
in
jmp
hlt
repnz
shrb
mov
divb
fstpl
cmpb
push
aad
jg
outsb
gs
xlat
or
cmp
pusha
add
cmp
outsl
cmp
loope
and
lock
xor
das
sbb
jp
sahf
jo
adc
push
cmp
cmp
sahf
lret
mov
cs
pop
dec
jnp
test
inc
inc
add
xchg
popa
push
jl
pushf
mov
dec
vmovups
mov
cli
in
and
rcrb
fidivrl
leave
and
scas
insb
xor
cmpsb
fsubs
or
sub
cmp
movsb
inc
cmp
mov
sbb
fstl
mov
int3
mov
xchg
inc
mov
adc
rcrl
gs
rorl
xchg
hlt
rcll
jle
and
inc
fstpt
push
mov
and
push
add
popa
out
mov
cld
and
fwait
sub
pop
in
test
add
mulb
fwait
mov
incb
mov
mov
fs
rclb
idivl
aam
movsb
gs
sbb
sub
popa
xlat
sbb
mov
and
adc
adc
dec
sbb
xchg
outsl
out
cmp
push
lret
je
sub
add
sbb
jmp
xor
in
pop
mov
lods
fstl
add
sbb
pop
mov
and
lock
mov
flds
jno
int3
test
dec
jbe
sub
xorl
pop
sub
outsb
lods
pop
push
enter
or
pop
sahf
loope
sbb
daa
and
scas
mov
xor
in
bound
or
and
add
jp
jge
fbld
and
xacquire
push
iret
arpl
fistl
insb
pushf
push
imul
or
shrl
rorl
out
mov
sbbl
mov
adc
in
cmpsl
pop
out
push
mov
sub
arpl
and
add
and
mov
pusha
sbb
lods
xchg
and
jmp
add
push
inc
rolb
call
cli
xchg
rorb
add
negb
std
jecxz
fs
out
test
mov
inc
loope
inc
cmc
sahf
push
roll
mov
enter
jns
ds
fistpl
or
mov
cmp
test
inc
ret
aad
scas
and
mov
jmp
adc
fistpl
xchg
and
sar
mov
mov
out
adcl
xor
ror
outsb
icebp
sbb
mov
ja
jb
fistl
les
rcll
lcall
or
cmc
adc
mov
repnz
cmp
fucom
jmp
add
sub
push
dec
aaa
fwait
popf
sbb
pop
sbb
pushf
mov
or
enter
out
int
mov
and
push
or
mulb
and
testl
out
loopne
test
xor
in
mov
out
insb
inc
xlat
inc
ret
cld
mov
es
in
xchg
into
ret
cmpsb
mov
adc
xlat
pop
cwtl
jmp
andl
scas
aad
sbb
lock
cld
loopne
rclb
and
in
add
mov
sbb
xchg
cmpsl
lea
sub
repnz
jns
cmpsb
mov
push
mov
cmc
ret
ds
mov
stos
sub
adc
or
outsb
je
inc
mov
mov
sbb
xlat
lahf
int3
mov
mov
loope
es
jecxz
push
ret
cwtl
mov
idiv
mov
mov
cmp
push
stc
arpl
mov
ja,pn
sub
sbb
scas
jge
pop
cmp
xchg
mov
or
push
outsb
scas
sbb
je
mov
jnp
adc
jmp
mov
int
dec
xorl
mov
push
pushf
int
xchg
xchg
cmp
lret
cmpsb
dec
dec
jnp
mov
adc
jg
pop
stos
pop
pop
mov
hlt
pop
mov
cmp
add
pop
or
pop
lods
and
icebp
push
popa
ds
ds
and
adc
sbb
adc
fs
mov
aas
imul
xor
dec
or
shlb
in
inc
cltd
les
cld
xor
aad
jns
jecxz
xor
xchg
fiadds
dec
jge
add
in
sub
mov
cmpsb
add
lods
flds
sub
popf
sub
negb
push
cli
mov
fistps
test
icebp
adcb
idivb
cltd
mov
icebp
mov
mov
xchg
pop
test
popa
stc
sbbb
inc
idivl
mov
pushf
loope
mov
sub
into
mov
in
pop
xchg
pusha
cmp
xorb
iret
out
in
movsl
jns
lahf
inc
aas
cmpsb
frstor
shlb
cmc
rcll
push
outsl
xor
pop
imul
std
pop
mov
jp
dec
adc
mov
lods
pop
fnsave
int
ret
stos
mov
dec
insb
stc
lret
mov
dec
in
xchg
cmp
sub
sub
and
cmp
sub
xchg
jns
push
cmc
jbe
into
enter
sahf
cmp
mov
addr16
ficoml
mov
push
into
adc
add
add
and
pop
push
lcall
mov
sbb
jl
dec
add
test
cmpb
push
mov
sahf
es
fbld
pop
imul
add
pop
fdivl
rol
lcall
cmpsl
aad
setle
test
lods
imul
std
push
mov
enter
cmc
lock
outsl
movsl
stc
lahf
jns
mov
adcb
cwtl
cmp
jp
dec
insl
cltd
cmp
mov
pop
cmpsl
or
ret
xchg
mov
pusha
insl
inc
cld
rorb
jno
aad
sar
sbb
xchg
addl
loope
and
rorl
dec
add
ljmp
repnz
cmp
fwait
inc
leave
cmp
call
mov
push
in
mov
enter
jge
out
sbb
mov
and
stc
testl
mov
and
xor
sub
test
push
nop
push
push
lahf
lahf
and
push
dec
adc
stos
pop
pop
imul
cmp
push
mov
mov
add
cmp
sub
sbb
pop
dec
fiadds
add
inc
or
repz
lcall
enter
in
sar
aam
sahf
xchg
lds
insl
testb
iret
xor
sbb
ss
inc
dec
inc
sub
or
pop
xchg
sbb
aas
cmp
jl
jns
jge
xor
jg
sub
mov
es
push
sub
and
cmpsl
inc
push
clc
lret
negb
cmpsl
xor
std
fnstcw
faddp
dec
clc
mov
cmpsl
xchg
pushl
lcall
popf
jp
imul
out
sub
fcmovne
stos
mov
mov
neg
jge
mov
in
clc
and
fstpt
arpl
sub
out
jae
movb
ret
add
inc
cltd
mov
cmp
aas
push
fdivr
xor
jbe
scas
sbb
or
cmpsl
xchg
cwtl
mov
ficompl
gs
pop
cmc
or
repz
bnd
xor
mov
frstor
mov
dec
sbb
mov
mov
cmpsl
jge
or
fcmovne
dec
adc
lock
ret
xor
daa
repz
mov
cmp
pop
aaa
jno
sbb
jp
or
pop
add
fsubp
jmp
cmc
mov
mov
pop
fwait
bound
fcoms
mov
sbb
fdivr
sub
adc
xchg
push
push
pop
jp
cld
adc
loope
mov
or
rcll
xchg
mov
cmp
mov
push
dec
push
shrb
inc
mov
mov
pusha
jno
daa
nop
in
pop
or
into
aad
or
xchg
cs
mull
jecxz
lods
xchg
sbbb
je
lahf
adc
popa
stos
cmp
mov
mov
cmpb
adc
fdivrl
stos
and
sbb
adc
push
iret
adc
insl
pusha
xchg
pop
dec
in
fucom
daa
and
repnz
loop
xor
cli
bound
pop
sti
lret
je
bound
popf
xchg
in
test
jmp
and
ds
dec
ja
hlt
jmp
mov
mov
sub
mov
into
sub
or
aas
mov
aaa
shrl
insb
mov
mov
cmpsb
and
lahf
gs
out
sub
mov
cli
or
push
fnstcw
xor
fs
popa
mov
div
mov
adc
jno
aad
pop
mov
mov
adc
repnz
mov
test
out
or
and
pop
mov
lods
or
add
sub
clc
loopne
addr16
or
and
daa
movsl
pushf
mov
adc
jae
ficomps
daa
lahf
test
pop
jmp
scas
or
mov
mov
fmull
ret
pushf
mov
pop
xor
mov
mov
ja
test
test
push
cmp
ja
loope
mov
hlt
test
add
xor
test
testb
out
pop
cwtl
sarl
loopne
cmp
in
gs
in
mov
mov
bound
or
add
sub
push
loopne
in
in
xor
push
cwtl
cmc
repz
lret
cmp
or
gs
lods
jns
aam
sub
mov
cmp
mov
mov
sub
pop
lock
std
add
jbe
js
push
push
stc
sub
movsl
call
sub
mov
add
xchg
and
push
cmpsb
fsubp
ss
in
out
loope
out
pop
jbe
movsl
lock
mov
fwait
stos
cltd
loope
mov
jle
mov
add
mov
xor
jmp
and
repz
pushf
inc
or
lods
adc
and
test
dec
cs
mov
iret
lret
fistps
cmp
cmp
aaa
add
mov
std
xor
mov
dec
stos
pop
mov
jl
pushf
mov
lret
pop
adc
inc
cltd
mov
mov
jle
imul
stos
popa
lcall
in
rcll
xchg
jne
shl
xchg
xor
jle
push
mov
mov
fnstenv
ds
xchg
mov
pop
xor
fdivrl
pop
std
mov
imul
mov
divl
push
out
stos
js
adc
dec
mov
int
roll
stos
fisttpll
lods
jnp
outsb
mov
clc
jp
test
mov
inc
inc
mov
sub
popf
leave
push
stos
pushf
jns
fbld
shll
mov
jmp
je
sbb
notb
inc
icebp
xchg
es
push
dec
inc
xchg
jae
pop
jnp
xchg
jns
or
jecxz
fists
dec
and
leave
add
mov
out
fcoms
mov
pusha
sub
sarb
test
inc
std
pop
mov
test
in
cwtl
mov
adc
dec
lods
pop
mov
xor
push
shll
stos
mov
das
stc
stos
pop
idivl
or
aaa
imulb
lods
push
les
outsb
dec
mov
adc
int3
sub
aad
in
stos
in
cmovge
pop
cld
fisubl
mov
lahf
cmp
sbb
sub
shlb
cmp
adc
loop
ljmp
nop
or
xor
outsl
cltd
dec
sbb
add
xchg
xlat
jmp
jae
push
ffree
mov
jl
in
sbb
lea
negl
sti
sub
mov
cmc
jo
fwait
shrl
or
add
cmpsl
sub
jbe
jbe
popf
out
cmovg
pop
jmp
add
js
movsl
test
inc
mov
xor
fdivl
pop
jmp
outsb
pusha
mov
fs
pop
mov
in
sbb
add
and
ljmp
sub
xchg
adc
mov
repz
shl
out
movsb
into
xor
roll
cwtl
out
mov
sub
add
xchg
aam
cld
xchg
and
push
jge
sub
jo
cwtl
fwait
mov
cmp
js
faddl
add
loopne
repnz
out
sub
cld
inc
es
xor
stos
jmp
or
sbb
inc
ror
mov
mov
push
adcl
jl
fbld
cwtl
inc
push
daa
cmp
lcall
stos
not
rcrl
pop
je
stos
test
mov
or
dec
pop
popf
in
and
cld
xchg
lahf
mov
mov
add
mov
mov
test
mov
aaa
iret
dec
mov
mov
daa
xor
cmpsl
les
lea
and
test
add
jge
aad
push
addb
decb
mov
cmpsl
into
pop
inc
fistps
mov
scas
xlat
adcb
insl
inc
outsb
shlb
push
mov
cmpsb
cwtl
stos
int3
je
inc
mov
adc
inc
xor
inc
ds
fdivs
pop
ror
nop
xchg
and
cli
jmp
add
jl
lds
iret
push
dec
test
cld
daa
addr16
aam
mov
adc
adc
adc
ljmp
pop
out
lcall
xchg
xchg
push
movsb
bound
rcrb
pushl
ror
push
push
imul
outsb
nop
jae
inc
sbb
mov
call
xor
jge
loopne
out
cmpl
clc
sbb
sbb
je
je
cmp
pop
mov
cmc
test
out
cld
loope
cmpsl
jmp
sub
mov
scas
sub
jge
inc
lock
ja
mov
dec
and
push
mov
inc
inc
add
outsl
jecxz
mov
dec
js
fidivs
lea
lods
sbb
pop
test
not
fisubrs
mov
loope
sbb
inc
cmp
sub
dec
jmp
xor
adc
pusha
xor
or
cwtl
cli
pop
repz
cli
cmpl
sbb
pop
repz
push
cmp
loope
or
icebp
pop
icebp
inc
pop
mov
faddl
lock
outsl
gs
cmpsb
out
xlat
sbb
std
mov
inc
mov
jns
fbld
jle
psraw
and
lock
rclb
inc
cmp
addl
aam
cmp
sub
pop
inc
cwtl
jl
pop
scas
addr16
inc
jmp
mov
leave
sub
sbb
jp
cltd
popa
inc
mov
pop
cld
cmpsb
adc
aad
inc
inc
cmp
push
cmp
jns
cld
or
int3
testl
ja
jg
xlat
iret
sbb
xchg
jnp
insb
rorl
xor
mov
pusha
pop
lret
xchg
jg
sbb
gs
popa
cwtl
push
cmp
scas
nop
pop
lret
insb
cwtl
sub
and
adc
js
xchg
sub
mov
pop
das
pop
pop
test
aaa
jo
inc
cld
xor
adc
jmp
sbb
les
add
jnp
sub
dec
scas
or
and
xchg
mov
push
pop
mov
sub
fdivl
pop
push
int
xchg
in
adc
loope
pop
push
sbb
decl
xor
mov
aas
adc
add
push
addr16
mov
xchg
fisttpll
and
cmp
imul
fwait
outsl
adcl
ja
xor
push
lret
jle
cld
push
mov
push
stos
std
inc
hlt
jmp
push
popa
and
push
jecxz
in
push
in
scas
xor
mov
notb
mov
into
nop
mov
xlat
out
sti
nop
leave
xchg
and
lahf
sub
add
orb
cli
jmp
ss
addb
loopne
fxch
rorb
push
outsl
fcmovnu
rolb
fcompp
sbb
cmpsb
adc
cmc
hlt
sahf
jecxz
xor
adc
or
or
push
mov
mov
adc
lret
incb
aaa
mov
sti
addr16
mov
cmpsb
lahf
movsb
ss
push
clc
xchg
mov
push
lods
ss
andl
ja
pop
xchg
mov
inc
push
and
add
into
cwtl
jns
push
jmp
pop
sub
xchg
jnp
cld
outsl
inc
scas
mov
mov
lret
fildll
ret
movsb
cmpsl
xor
adc
sbb
imul
pop
sbb
and
repnz
jnp
or
fwait
xchg
in
mov
movsl
in
loop
ss
push
mov
or
cmpsl
cmpsb
notl
push
xchg
inc
lret
mov
leave
subb
cmp
fmull
mov
rclb
aam
pop
div
out
adc
insb
sbb
jp
push
ss
in
outsl
subl
xchg
pop
daa
mov
jl
push
nop
loopne
repz
scas
aaa
sub
in
add
and
in
test
xor
stos
gs
and
dec
in
sub
push
mov
jg
sub
push
test
push
insb
ss
cmpsl
popa
shlb
mov
jnp
into
adc
mov
xor
push
movsb
push
jae
sub
repz
dec
popa
dec
lret
lcall
xor
and
js
aas
cld
jp
sbb
das
add
jecxz
mov
dec
add
movsb
ljmp
add
push
pop
cmp
push
cmp
cmp
lcall
js
xchg
sbb
es
orb
jl
clc
sahf
push
inc
sar
int3
mov
mov
cmc
sti
sahf
ret
mov
decb
outsl
jno
push
pop
scas
test
jecxz
out
jno
fisttps
dec
sbb
movsb
test
jae
add
cld
in
scas
mov
leave
je
scas
mov
mov
aaa
rcll
push
xor
cli
cmp
lret
cmpsl
xor
inc
loope
mov
pop
addb
stos
imulb
add
lcall
mov
add
xchg
inc
push
adc
ds
bound
xchg
ss
ret
adc
xchg
hlt
scas
clc
rclb
sti
test
and
or
push
popf
fninit
out
inc
xor
sbb
push
xchg
jo
pop
popf
ds
jg
aam
fwait
add
xor
push
je
test
and
es
inc
aas
mov
inc
and
call
push
out
loope
xor
jp
jmp
ds
add
hlt
lock
push
rcrl
int3
jbe
add
fnstsw
pop
movsb
mov
hlt
and
pop
push
add
cwtl
dec
jno
mov
daa
loopne
iret
cmpsl
and
insb
call
aad
frstor
rorl
mov
push
push
divb
dec
mov
scas
and
sub
jg
in
xor
mov
jbe
imul
fmull
push
or
insb
aad
subl
pop
add
insb
outsb
add
dec
aaa
lock
loope
bnd
insb
pop
xchg
xor
mov
push
insb
call
dec
out
adc
sub
push
jbe
dec
ror
pop
lock
ror
lret
jno
mov
mov
pusha
push
mov
dec
mov
and
stos
fldt
pop
clc
ret
scas
or
inc
repnz
pop
loop
jge
and
dec
cmpb
jnp
pushf
or
imul
aas
mov
lcall
lock
xchg
cli
jecxz
shll
sbb
jl,pt
loope
in
push
les
xchg
incb
inc
push
imul
push
and
sub
arpl
stos
mov
repz
or
jp
pop
ljmp
test
push
out
test
gs
outsl
mov
cmp
jp
fcmovne
xchg
and
ja
jle
dec
sub
or
popa
int3
dec
sub
mov
jl
rorb
sbb
bound
out
mov
popf
ss
jmp
inc
pop
divl
mov
inc
adc
mov
push
aam
and
add
inc
add
adc
pop
and
adc
sub
jmp
cmc
stc
mov
or
rcrl
or
push
pop
inc
iret
ret
xor
stos
outsb
sub
jns
cs
imul
inc
cmp
gs
fstpl
xorl
imulb
shl
test
shll
outsl
fisubrl
push
insl
mov
or
adc
push
int3
mov
test
mov
mov
out
inc
hlt
mov
sbb
mov
inc
inc
cwtl
push
ljmp
ja
out
jecxz
stos
cmp
pop
and
arpl
scas
mov
adc
fstps
xlat
dec
fprem1
dec
pop
mov
mov
cmpsb
mov
push
lret
jl
leave
pop
mov
scas
cmp
inc
popf
xchg
add
into
mov
sti
fs
pop
out
mov
in
jg
in
jge
daa
or
das
xchg
in
push
push
push
iret
or
mov
mov
cmpsb
adc
dec
jge
das
and
cmp
sbb
ds
rcrl
add
mov
iret
mov
das
dec
imul
pop
pusha
movsl
div
ds
jbe
ret
mov
enter
xchg
mov
gs
lret
out
loop
mov
push
add
fisubs
mov
cmp
jns
mov
and
lds
cwtl
dec
stc
repz
inc
lods
mov
lcall
inc
add
pop
mov
scas
add
pop
aas
dec
std
rcll
fldz
adc
jae
fucom
push
orl
sub
cmp
cwtl
sbb
inc
repnz
out
inc
push
cli
in
incb
jb
outsb
or
into
or
jnp
bound
in
or
mov
mov
sti
xchg
jbe
mov
cwtl
bound
js
notb
or
inc
cld
and
cmp
jl
sbb
loope,pt
push
sub
scas
fbld
cmp
jecxz
push
cmp
test
pop
repz
nop
push
ss
sbb
sbb
imul
shr
and
jns
or
jge
cmp
ficomps
rclb
add
fidivl
cmp
or
dec
popf
pop
fwait
aas
mov
xchg
xor
xor
ficompl
aas
inc
sbbb
rcrb
mov
dec
cld
mov
mov
push
sbb
pushf
dec
out
adc
ja
add
dec
js
call
cli
ret
adc
movsb
pop
mov
sub
mov
push
js
out
or
xchg
mov
sti
xor
sub
lods
das
ret
aam
push
fwait
cmp
js
aaa
xor
aam
and
ja
and
movsl
sbb
out
cmp
adc
outsl
push
push
lods
in
das
dec
xchg
xorb
cld
jbe
xor
adc
mov
inc
test
push
cmpsl
inc
sub
xchg
mov
jne
fnstcw
dec
into
mov
sbb
test
sahf
push
pushf
sbb
pop
or
and
iret
lret
mov
and
in
pop
jge
jne
inc
jno
pop
in
jge
out
sbb
adc
das
aad
push
inc
mov
faddp
xchg
nop
insl
clc
add
lock
sub
push
adc
in
mov
add
aas
jb
adc
sbb
sub
sbbb
jb
shll
dec
sbb
repnz
loop
add
fwait
in
fistl
add
add
cmpsl
insl
jae
movsl
push
shll
pusha
shl
iret
outsl
xor
int3
rolb
fs
push
xrelease
dec
xchg
push
scas
mov
sbb
pop
dec
sub
fildll
enter
ret
push
or
addb
jne
push
cltd
pop
jns
xorb
mov
xchg
push
arpl
pop
imul
fisttps
lea
jg
mov
add
arpl
dec
insb
hlt
and
cmp
rclb
push
adc
xchg
mov
pop
out
cld
mov
sub
pop
addr16
fdivrl
in
jge
insl
mov
daa
push
cmpb
clc
in
repz
mov
pop
inc
mov
test
mov
jl
dec
test
sbb
xchg
in
in
test
or
sub
add
ret
jmp
mov
int
mov
add
cwtl
jecxz
and
insl
sti
push
rclb
inc
xchg
in
inc
into
dec
inc
mov
xlat
out
push
int
add
scas
decb
sub
xchg
lahf
outsb
sti
enter
faddl
mov
inc
xchg
mov
mov
lods
imul
insb
xchg
ret
inc
sbb
sbb
repz
push
add
pop
xchg
jge
jo,pn
sub
out
sahf
lret
or
out
scas
in
and
dec
nop
rorb
lock
dec
or
dec
pop
mov
aad
lock
xchg
or
fimuls
imul
jno
lods
mov
fcompl
ljmp
cmp
cmp
and
scas
clc
leave
xlat
mov
lret
jg
mov
dec
or
inc
jno
daa
jmp
cmp
mov
push
push
dec
mov
add
fdivrs
push
scas
xor
pop
add
in
inc
outsb
dec
jb
dec
or
dec
loopne
pop
ja
cmp
cmp
lret
ret
out
jno
imul
mov
fistpl
cld
pop
sbb
push
mov
jge
mov
mov
jno
push
xchg
jle
scas
mov
xchg
insb
mov
insb
adc
xchg
xorl
lea
popf
adc
iret
in
jg
sbb
mov
xchg
push
mov
xchg
data16
inc
fists
jg
or
lret
mov
outsb
or
pop
es
jns
add
xchg
mov
sub
daa
xor
sti
subl
xchg
adcb
lods
push
hlt
movsb
add
xchg
jne
cli
fnsave
cmp
mov
mov
lcall
push
iret
out
faddp
add
outsl
xor
enter
inc
mov
inc
jmp
stos
add
mov
dec
inc
and
pop
and
push
fsubl
jo
xlat
xchg
sbb
pop
xor
shl
mov
sub
xor
cmc
mov
adc
cli
lds
mov
movb
stc
sahf
mov
out
dec
mov
daa
pop
pusha
sar
lea
imul
mov
dec
add
or
fisttpl
lahf
into
lds
lahf
dec
mov
bnd
aam
mov
divb
add
push
jo
fstps
cmp
test
inc
cmp
push
jecxz
fwait
push
dec
sub
xorb
scas
enter
loopne
scas
ljmp
ljmp
bound
or
icebp
cmp
jb
stos
pop
fsts
outsb
fmul
push
xor
inc
inc
lret
gs
fisttpll
pop
cmp
in
outsb
adc
mov
pop
mov
jg
add
movsl
ja
ficompl
pusha
mov
inc
xor
xchg
or
mov
mov
das
mov
shll
xor
adc
add
mov
mov
push
and
mov
or
sahf
cmc
pop
sub
pop
and
mov
jmp
mov
push
jmp
nop
cmc
and
std
in
cs
rorl
xor
mov
sbb
in
adc
jmp
mov
add
xchg
add
pop
and
mov
ljmp
aas
push
std
pop
mov
cmp
out
sub
jl
mov
mov
adc
outsl
call
push
fldenv
stos
mov
popf
xchg
adc
and
arpl
jge
mov
lea
pcmpeqw
dec
sub
stc
iret
iret
cltd
sbb
cmpsl
fwait
ret
pushf
dec
jl
pop
sub
or
pop
inc
jmp
iret
rcrl
dec
or
sub
mov
xor
add
fdivrl
movsl
jns
mov
sub
aam
lret
and
rorb
push
or
je
inc
adcb
pop
dec
sub
inc
xchg
rcll
xchg
xchg
jo
cmp
bound
sbb
in
test
gs
push
sub
es
add
jecxz
push
adc
enter
push
cmp
cld
in
aam
movsb
xchg
xor
mov
mov
faddl
or
call
rolb
fldt
scas
mov
push
mov
inc
fwait
add
xchg
mov
mov
pop
pop
test
cmp
fldz
push
aas
add
cltd
cmp
stos
stc
push
loopne
ja
inc
jp
in
addr16
in
imul
fcmove
sbbb
sbb
mov
push
dec
lods
int3
fnsave
fwait
hlt
dec
aam
rep
sub
jg
jnp
lds
repnz
cmpsb
imul
ret
mov
or
pop
mov
mov
bound
push
inc
cmp
out
cmc
ja
inc
notl
mov
pop
sub
adc
jb
mov
lret
roll
dec
push
mov
mov
mov
or
sbb
rcll
mov
mov
ret
jmp
sub
decb
push
lahf
jno
xchg
xor
pushw
out
sub
in
mov
jo
xorl
xor
insl
mov
or
cmp
sub
bound
jno
adc
mov
nop
push
cmp
push
stc
int
pop
out
and
xor
in
pop
loope
pop
mov
cmp
xchg
clc
add
inc
icebp
pusha
je
pop
cwtl
dec
and
aad
out
cmpsl
lock
sahf
xchg
mov
jns
sub
loopne
mov
je
push
negb
pushf
mov
mov
idiv
gs
lret
jmp
inc
ret
orl
inc
pusha
and
adc
push
push
in
rclb
add
adc
push
xor
mov
cmp
in
sbb
mov
test
leave
das
sbb
testl
test
xor
cmpsl
daa
push
jp
mov
test
movsb
jne
in
xchg
and
mov
inc
pop
js
mov
fmuls
jg
jo
dec
push
out
bound
sbb
xchg
fs
xchg
int3
cld
nop
mov
ret
push
frstor
shrl
ret
inc
loop
adc
pushf
jno
push
std
mov
dec
inc
or
pop
subb
add
push
stc
mov
mov
or
ficoms
add
cmp
fidivl
push
sbb
cmp
jmp
cmp
bound
ja
cmovae
movsb
fidivl
das
and
xor
adc
mov
repz
or
dec
jo
pop
icebp
out
insl
inc
clc
or
dec
push
add
push
inc
add
shrb
dec
pop
or
sbb
jge
sbb
sbb
negl
inc
pop
mov
mov
iret
pop
mov
mov
scas
cmpsb
cmp
cmp
mov
outsb
fdivrs
imul
xchg
clc
mov
nop
movsb
cmp
mov
xchg
ret
xor
ret
shlb
inc
dec
rorb
inc
inc
lock
inc
imul
cwtl
xor
repz
cmp
cmp
push
aam
ljmp
mov
lcall
aaa
dec
push
rcr
inc
pop
fisubrs
jle
stos
std
pop
inc
mov
insb
lds
xor
mov
popl
scas
pop
xchg
int3
decb
xor
mov
mov
push
or
mov
mov
xor
mov
out
addr16
clc
es
sbb
pop
or
arpl
pop
fcmovbe
xchg
sbbl
int3
fidivs
push
addr16
inc
and
int
ljmp
sub
aaa
scas
push
mov
test
adc
inc
fadds
xchg
inc
inc
out
and
fstpl
xchg
mov
jle
jne
ljmp
dec
pop
xcrypt-cbc
cmpsl
push
dec
js
call
ljmp
mov
sub
ljmp
bound
and
sub
rorb
mov
into
xlat
mov
hlt
mov
cmp
lods
lods
mov
push
dec
jge
sub
movsb
pushf
aad
sbb
push
addl
test
mov
push
sti
ret
cmc
mov
and
lahf
pushf
lahf
mov
xor
divl
shll
fisubl
fsubrp
lock
pop
mov
pop
insl
mov
popa
push
addr16
cmpsl
in
nop
xchg
fstpl
inc
dec
cmc
mov
xor
inc
faddp
mov
and
test
mov
fidivrs
mov
push
std
cmp
mov
inc
inc
test
scas
nop
push
leave
ss
adc
rcrl
dec
sbb
sbb
sbb
sbb
mov
sti
dec
test
sbb
fs
out
in
jnp
or
sbb
jl
xchg
dec
mov
jno
push
xor
lock
push
mov
imul
mov
mov
cmp
decb
mov
outsl
les
xchg
out
ljmp
rcrb
pop
movsl
movsb
push
jnp
mov
clc
jno
lods
test
mov
inc
aas
shlb
ljmp
or
jno
movsb
ret
mov
insb
dec
cmpsl
inc
hlt
xchg
add
add
pop
ss
inc
pop
ja
jno
cmp
lock
or
sti
or
lret
mov
cwtl
repnz
int
pusha
aam
cs
outsl
mov
imul
lods
mov
cmc
push
sub
movsb
inc
xchg
out
sub
mov
add
mov
int3
mov
mov
and
lret
fiadds
xchg
nop
cmc
lret
mov
mov
xor
push
fdivl
inc
inc
enter
scas
inc
js
jo
mov
cmc
fsts
leave
adc
lock
aad
sub
repnz
adc
in
adc
call
not
dec
jmp
xor
and
push
sub
mov
adc
pop
lods
and
adc
cmp
adc
mov
cmpsl
cmpsb
dec
sbb
inc
pushf
jle
aaa
popf
lret
xchg
test
aaa
cs
pop
cmp
mov
inc
add
push
movsl
and
andb
cmpsl
rcrb
mov
mov
iret
jp
mulb
xchg
push
shll
inc
sahf
imul
in
xor
test
test
pushf
test
sub
iret
or
test
fcomip
mov
push
inc
push
rcll
mov
xchg
dec
or
lahf
adc
in
fnstcw
xchg
movb
pop
and
jmp
push
cmp
in
inc
clc
dec
sub
mov
cmpb
data16
out
lret
fistl
add
out
xor
test
and
xchg
xchg
fs
jne
aaa
std
mov
inc
inc
fxch
inc
nop
pop
sub
out
fstpt
test
je
and
push
mov
sbb
daa
sub
xchg
push
and
mov
xor
dec
adc
xchg
mov
loopne
aaa
pop
jecxz
fs
test
xor
inc
cld
pop
pop
mov
jg
or
int3
movsb
movsl
js
das
xor
fdivr
push
xchg
out
mov
jo,pt
je
xorl
push
clc
nop
out
movl
push
cmp
shr
push
sub
push
sbb
sub
cwtd
ds
out
addl
sbb
mov
test
fwait
push
fadd
out
xchg
jge
adc
adc
mov
xchg
and
paddsb
sbb
push
in
movsb
push
pop
shr
jp
jmp
fmull
sbb
andb
jecxz
and
rcll
out
push
jge
daa
push
shrl
dec
or
divl
or
mov
push
xlat
inc
and
push
cli
mov
mov
je
and
aas
dec
sbb
and
cmpsl
push
clc
aad
ss
sub
or
mov
inc
xor
push
xchg
test
or
ss
cmc
sub
out
rol
popa
mov
shll
cltd
js
jmp
and
inc
ljmp
inc
rcr
int3
add
jl
ret
push
inc
movsb
sbb
and
sti
mov
lods
push
mov
push
das
sub
fidivrl
add
test
sbb
jl
push
mov
xchg
sub
lock
push
mov
mov
cmp
jg
pop
fs
scas
xor
xchg
and
xchg
aam
cmp
xchg
jae
mov
pop
aam
mov
sti
mov
sub
popa
fucomp
or
mov
mov
std
and
fidivs
or
mov
mov
jae
mov
add
cmpsl
decl
aaa
jo
daa
dec
push
fst
xchg
sbbb
ret
fs
pop
mov
out
sbb
xchg
test
fmuls
mov
faddl
gs
aas
xchg
jecxz
mov
arpl
movl
adc
inc
jnp
xlat
mov
and
jb
adc
insl
inc
mov
fadds
pop
sub
dec
ds
mov
jne
push
popf
xor
inc
cmp
cmp
outsb
push
imul
mov
dec
cmp
inc
cmp
push
imul
outsb
mov
sbb
push
cmpsl
fs
xor
aam
repnz
sbb
push
jle
fs
adc
aas
incl
out
cli
das
add
pop
fistps
aad
aas
adc
std
lea
pop
mov
mov
or
cmp
xchg
jg
push
push
pop
cs
ds
add
jns
inc
loop
or
jae
inc
loope
fmul
xor
aam
sub
mov
stc
xor
in
es
adc
lret
mov
loopne
imul
enter
xchg
dec
add
lods
fcmovne
dec
idivb
inc
xor
imul
inc
jbe
fcmovnb
pop
sub
rcrb
fs
cmp
imul
or
scas
gs
aad
xchg
xchg
rcrl
mov
dec
rclb
and
imul
rcl
sbb
jmp
jp
arpl
ja
out
inc
pop
or
outsl
mov
xlat
pop
adc
cmp
jl
test
mov
stc
pop
and
rclb
repnz
mov
xchg
mov
push
adc
les
mov
pop
out
and
popa
ret
cmp
pop
mov
adc
adc
inc
jg
sti
mov
dec
sub
dec
add
dec
inc
mov
rcrb
mov
dec
jmp
inc
sbb
dec
cmp
adc
jae
lahf
cmpsb
or
inc
xchg
mov
xchg
ss
inc
push
inc
sbb
fisubs
pop
sub
cmp
mov
hlt
push
ret
lahf
rorw
xchg
addr16
xchg
test
cmp
or
jecxz
ljmp
in
insl
in
dec
dec
fs
xchg
inc
sahf
shll
mov
and
add
dec
xchg
xor
jp
repnz
ret
clc
xor
push
sbb
xor
scas
hlt
inc
loopne
jp
outsl
sti
xor
mov
lret
sbb
pop
movsl
and
outsb
fcmovnu
push
test
sub
divb
std
stc
xchg
daa
imul
das
mov
inc
xchg
jle
push
popa
xchg
jle
fsubl
aaa
ja
sbb
cmp
ds
push
jle
inc
in
iret
test
ret
aaa
pop
inc
and
xchg
inc
add
int
aam
in
mov
dec
inc
xchg
pusha
ret
scas
bound
test
sbb
inc
enter
out
sahf
mov
add
adc
fucomip
fbld
dec
add
sub
pop
dec
add
mov
sbb
xlat
push
cwtl
mov
jle
mov
testl
dec
mov
adc
imul
dec
sbb
insl
cmp
cmp
mov
sar
pushf
jp
cmp
jo
stc
cmpsl
and
test
andb
rclb
aam
gs
pushf
push
out
rorb
dec
lahf
leave
cwtl
and
sbb
call
arpl
sbb
sub
push
mov
fnsave
xchg
mov
sub
cs
inc
cwtl
test
mov
stos
push
push
push
arpl
sbb
ss
mov
test
add
jl
dec
adc
add
js
jp
xchg
xor
mov
push
jp
jne
leave
dec
cld
inc
sbbb
popf
fimuls
imul
xor
not
sbb
es
pusha
imul
and
cli
sbb
imul
cmp
and
jle
repnz
sub
sbb
fistpl
dec
or
ds
data16
iret
xor
xchg
push
inc
negl
or
iret
aad
adc
jns
popa
iret
stc
and
xchg
add
mov
mov
adc
lds
jo
jmp
pop
scas
push
js
pushf
test
push
pop
jmp
int3
aad
adc
sbb
mov
cmpsb
mov
cmp
fbstp
dec
push
jno
and
xchg
mov
dec
clc
lahf
test
movsb
sysret
sbb
inc
aas
mov
mov
dec
mov
inc
rclb
dec
nop
or
push
sub
aad
jg
orb
adc
pop
das
dec
sbb
mov
mov
daa
mov
test
jno,pn
out
test
pushf
pop
xchg
mov
dec
pusha
pushf
xor
sub
xorb
jno
pop
pop
push
push
in
jge
cmpsb
cmp
call
cld
bound
sub
inc
sub
pop
push
popa
shl
mov
mov
pop
add
test
scas
shl
sti
cmpsb
lret
mov
xor
add
push
lcall
add
enter
std
dec
xchg
xchg
or
xrelease
daa
fistpl
test
pop
popa
push
push
jecxz
outsb
rcrb
adc
xchg
and
ficompl
gs
mov
popa
adc
sti
loop
test
or
sbb
or
in
loopne
int3
cmp
scas
dec
mov
mov
jecxz
in
into
out
push
push
in
es
hlt
pop
ljmp
enter
scas
dec
cmp
mov
sub
rolb
stos
loop
pop
pop
outsl
dec
enter
ret
sub
aas
or
test
xor
add
push
lfs
mov
in
dec
lahf
js
cmp
push
dec
jle
and
arpl
fiadds
inc
test
fadds
xchg
mov
cmc
es
xor
jbe
push
data16
aas
fwait
popf
je
fcmovu
sarb
mov
add
enter
push
lock
dec
mov
push
lea
enter
pop
fstl
cli
jp
fucom
inc
sbb
inc
mov
sbb
aaa
pop
cmc
movsb
dec
jne
xchg
xchg
pop
shlb
test
call
repnz
xlat
shll
out
fwait
sbb
adc
int3
sbb
xchg
sub
lds
stc
jns
pop
pop
adcb
jl
sbb
pop
pop
andb
ja
fisttps
aad
lcall
push
imul
es
xor
xor
xchg
mov
jg
pop
fucomip
push
pushf
push
adc
pop
inc
or
sbb
sub
sub
insl
ljmp
mov
cli
jp
aad
jbe
xchg
sahf
inc
cmp
loopne
mov
pop
rorb
mov
mov
cmpsl
sub
push
orl
mov
lcall
gs
mov
mov
xchg
jae
push
cmp
dec
push
dec
sti
cli
in
pop
in
xchg
adc
pusha
das
jae
mov
jge
jmp
adc
cli
lds
xlat
sbb
xchg
addr16
mov
jl
arpl
xor
dec
js
sbb
xchg
dec
loop
movl
in
insl
ss
fisubrl
data16
pop
fcoml
fisttpl
clc
jno
out
sbb
dec
adc
or
imul
roll
outsb
sub
aaa
movsb
inc
nop
aad
hlt
idivl
sar
pop
cmc
les
fimuls
adc
insb
and
cwtl
jge
or
out
push
loopne
mov
mov
aas
inc
fnstenv
insl
mov
xlat
push
mov
sbb
ljmp
mov
ficoms
adc
cmp
mov
dec
pop
jmp
mov
push
cmp
xchg
je
xor
cld
add
popa
jl
cmpsl
stos
sahf
mov
cmp
push
clc
fwait
lret
and
ret
inc
or
and
or
enter
xchg
mov
pop
sub
push
mov
mov
cmpsb
xor
push
xchg
jmp
sub
loop
out
les
mov
out
mov
adc
pop
mov
cltd
andl
mov
push
dec
mov
xor
sbb
mov
inc
sub
imul
inc
pusha
movsb
pop
nop
lret
test
inc
fwait
ret
cmp
xor
inc
mov
jae
test
popa
lahf
mov
loop
ret
add
cmp
inc
ficoml
sbb
stc
stc
or
fwait
mov
cltd
cmp
ja
or
fldenv
push
sarb
subl
dec
pop
mov
xor
leave
mov
mov
jns
nop
and
mov
push
jle
dec
mov
jmp
adc
mov
fidivrl
xor
cmpl
test
sbb
dec
mov
stos
hlt
shl
or
fmuls
sbb
push
push
mov
mov
outsl
pop
lret
push
cmp
xchg
pop
movsl
mov
xchg
inc
or
push
xor
lods
mov
movl
gs
dec
mov
int3
adc
outsl
mov
adc
movsb
and
or
pop
mov
push
or
addl
bnd
adc
shll
add
scas
std
or
sbb
dec
inc
mov
adcl
xor
pop
mov
xor
jmp
shll
mov
aas
jle
xchg
and
les
and
add
mov
fmul
push
in
pop
ficoml
scas
popa
mov
adc
push
push
out
mov
scas
and
cwtl
push
and
or
cmpsl
cmp
mov
in
stos
fcmove
add
sti
lods
mov
xor
cmp
loop
xchg
sub
insb
pop
lods
repnz
and
std
sub
loope
bound
std
mov
pusha
jo
xchg
and
lea
xchg
ss
enter
push
dec
addr16
in
cld
aas
icebp
mov
inc
mov
sub
push
push
dec
or
fs
sbb
pop
daa
jmp
lret
mov
fisubl
sbb
pushf
lods
sub
enter
es
je
mov
push
test
jg
dec
lods
fs
stc
push
xchg
lcall
outsb
dec
cmpb
jno
lret
inc
pop
inc
fcompl
in
mov
mov
sbb
sub
jecxz
sub
xorl
adc
aad
mov
ret
ret
mov
cmpsl
daa
xor
shlb
arpl
mov
fdivs
sahf
clc
leave
out
iret
mov
mov
shlb
mov
xlat
xorl
sub
test
ss
jne
ljmp
stos
adc
adc
jae
into
test
cmp
clc
push
fnstenv
jnp
mov
and
bound
add
cmp
jae
ret
jbe
inc
fmulp
and
leave
in
cli
mov
mov
pop
push
inc
les
fidivs
inc
mov
xchg
and
lret
sub
cs
inc
add
test
rolb
aam
xor
dec
les
sbb
dec
test
repz
sti
pusha
mov
dec
insl
or
pop
xchg
js
pop
fsubs
jp
inc
sub
packssdw
pop
dec
jge
icebp
cmp
mov
xor
popf
and
cmp
mov
and
adc
fisttps
fsubr
and
popf
lret
fisttpll
cli
cmp
inc
filds
das
fbstp
xchg
sub
cmp
xchg
jp
shlb
fwait
mov
hlt
loopne
inc
in
ret
mov
inc
mov
mov
iret
aas
aaa
cmp
push
jb
leave
pop
icebp
out
int3
mov
add
je
mov
leave
cmpsl
xor
sbb
push
push
cmp
inc
push
ljmp
mov
std
xor
xchg
imul
or
inc
stc
inc
cli
xchg
cmpsb
repnz
cmpsl
dec
cmp
pop
jo
and
das
xchg
pop
les
dec
jo
adc
out
movsl
xlat
xchg
mull
stos
xchg
out
lock
adc
lea
lock
testl
lds
or
test
imul
mov
insl
nop
xor
and
inc
mov
add
mov
push
lret
lret
lcall
pop
ljmp
dec
mov
dec
in
sub
mov
cmpsb
loope
mov
mov
or
mov
sub
pusha
daa
jl
sarb
jmp
js
jmp
enter
jae
test
mov
mov
mov
test
icebp
pop
std
mov
sbb
jns
stos
push
pop
shrb
xor
xor
pop
xchg
lock
sub
inc
test
mov
mov
int3
push
mov
add
pop
dec
inc
dec
add
mov
cmp
in
xchg
sub
sub
aas
inc
and
test
fildll
sbb
roll
push
scas
push
pop
in
xor
outsl
cmpsb
sbb
mov
xchg
dec
jge
fnstenv
push
cltd
int3
aad
paddsw
lea
mov
movsb
test
mov
mov
adc
inc
xor
sbb
inc
ss
cmpsl
cltd
scas
dec
aam
pop
loop
sbb
rcl
stc
mov
cmpsb
dec
sbb
and
jno
andl
test
mov
les
cmp
and
push
pop
cltd
imull
hlt
inc
mov
daa
repnz
cmp
pop
ss
jae
popa
jne
inc
popf
lea
xchg
aad
xchg
mov
loopne
loope
inc
sbb
seta
push
jbe,pn
scas
outsb
jecxz
aad
xor
sub
cmp
pop
fwait
iret
out
and
fidivl
xchg
mov
lret
cmc
pop
xor
addr16
mov
xchg
jo
int3
lds
mov
dec
sbb
mov
and
mov
imul
jmp
jl
data16
lods
mov
mov
dec
lods
or
mov
dec
out
mov
int
adc
loop
sbb
push
push
mov
in
xlat
dec
jg
test
stos
pop
push
mov
lods
fyl2x
lock
cmp
imul
cmpsl
xor
bound
jp
xchg
mov
lods
cmp
jne
out
es
push
in
jge
jns
mov
fucomip
test
adc
dec
push
je
out
xchg
and
jmp
lret
mov
in
hlt
push
lock
push
out
mov
cmpsl
jb
scas
scas
jmp
mov
mov
jg
dec
pop
aas
outsl
push
and
inc
pop
xchg
xor
imul
outsl
ss
adc
lock
jge
stos
lods
inc
push
inc
and
into
pop
or
jns
cmp
xor
nop
jecxz
rorl
xchg
xor
fildll
fwait
push
adc
jnp
sub
loop
xchg
xlat
add
and
xchg
dec
push
out
push
and
mov
stos
inc
pop
stc
in
dec
mov
mov
mov
or
fadd
lods
dec
mov
mov
cmp
mov
shll
sbbb
iret
data16
lcall
mov
outsb
add
roll
daa
out
mov
xchg
add
mov
jmp
and
and
mov
push
cmp
mov
rolb
mov
mov
sub
in
cs
mov
sub
in
jnp
loopne
push
inc
mov
roll
aas
pop
inc
in
in
pop
cmp
xchg
add
orb
mov
push
mov
pop
sahf
cmc
icebp
mov
mov
arpl
dec
inc
cmpsb
pop
push
pop
in
mulb
pcmpeqw
mov
sub
insl
mov
test
repnz
inc
repz
jl
test
jo
leave
cwtl
out
push
mov
out
outsl
inc
scas
xor
sub
adc
ds
jno
sti
or
lods
jns
ficompl
pop
inc
lods
fmulp
arpl
aaa
test
ret
jne
sub
sub
nop
dec
fucom
inc
inc
pop
inc
inc
movsl
stc
jl
andl
sbb
jmp
push
xor
push
stos
jae
out
and
jo
sub
inc
mov
push
daa
push
movsb
in
xchg
jge
cld
sbb
sbb
dec
cmpsb
test
push
aad
imulb
repnz
mov
or
push
lods
pop
sub
mov
jge
shl
loop
aam
pushl
mov
jnp
sub
mov
jnp
loop
jp
pop
push
lcall
inc
repz
xor
xchg
mov
in
out
ret
xchg
xor
dec
mov
jle
popf
xor
ja
pop
popl
push
lcall
fidivrs
pop
xor
std
dec
inc
xor
popa
cld
inc
cmp
sahf
xchg
pop
add
mov
pop
outsb
bound
mov
movsl
jp
out
popf
mov
shlb
xor
adc
cmpsb
int3
fisttpl
incl
pop
test
fisubrs
pushf
sub
jl
dec
inc
mov
pop
jae
cmp
jmp
xchg
pop
sub
movb
xor
insb
fs
and
jne
sub
dec
shll
iret
sbb
adc
inc
es
int
and
loop
add
sbb
cmp
dec
icebp
sbb
jecxz
adc
xor
pop
mov
lahf
push
xor
push
shl
xchg
fdivl
das
ret
xchg
sbb
adc
sbb
and
mov
out
pop
out
sub
fstps
mov
push
nop
fdivr
outsl
push
cmc
ja
mov
pop
cs
andb
fsubrl
jns
lcall
stc
pop
dec
xchg
dec
or
pop
push
ljmp
jp
add
xchg
insb
jp
pop
push
scas
gs
dec
push
sbb
das
pop
adc
xor
dec
and
mov
push
scas
jecxz
pop
dec
scas
sub
jle
inc
das
push
test
jl
mov
je
in
test
xchg
sti
xor
and
out
scas
dec
fidivrl
imul
fs
sbb
jae
test
dec
insl
enter
scas
les
orl
nop
dec
mov
call
out
push
std
in
jmp
xchg
aam
dec
shll
cmp
cmp
sbb
test
imulb
lret
dec
jb
dec
arpl
imul
mov
sbb
pusha
inc
dec
mov
dec
pop
mov
adc
rep
int
mov
les
cld
xor
sub
xchg
sub
scas
sub
mov
outsl
shll
cli
or
das
fmuls
mov
sbb
or
pop
aas
sar
jo
ret
stos
fisttps
adc
push
mov
mov
sub
xor
sub
scas
mov
std
rcrb
jge
xchg
mov
push
imul
fisttpl
push
mov
cmpl
aas
iret
pop
pop
xchg
std
jne
xchg
mov
iret
jecxz
dec
jp
mov
sbb
lea
pop
or
and
test
xor
inc
stos
dec
ja
bound
repnz
cmp
mov
repz
out
imul
push
mov
jo
data16
push
cmp
push
std
mov
jno
sub
dec
jle
cwtl
rcrl
leave
out
pop
inc
mov
test
fs
movsb
inc
jo
js
or
data16
ret
cmpsb
std
inc
mov
push
in
dec
insl
jno
xchg
loop
sub
das
add
aad
push
or
nop
test
push
jae
bound
dec
jl
imul
sbb
icebp
aas
outsb
test
pushf
sbb
add
das
adc
fcompl
xlat
or
pop
dec
fstp
mov
rclb
loope
shl
pop
mov
inc
iret
or
cmc
std
push
pop
pop
lds
bnd
or
mov
xchg
aad
mov
clc
fstp
inc
inc
mov
nop
xor
jecxz
mov
aam
lret
pop
cwtl
inc
or
push
cmovne
test
negb
pop
sbb
fnstenv
xchg
pop
in
and
fisubrs
pop
sbb
fildll
inc
adc
fcmovne
adc
dec
inc
cmpsb
xchg
xor
arpl
add
pop
loope
jl
xchg
stos
push
repz
and
outsb
fistpl
adc
aas
out
fiaddl
mov
insl
push
mov
inc
shr
test
leave
mov
inc
cltd
xchg
or
lahf
ret
mov
pop
dec
popa
cld
std
mov
mov
rorl
lret
pop
outsl
inc
rcrb
mov
dec
repz
and
add
js
cmp
lock
in
aad
or
int3
xor
rol
xchg
and
inc
push
jg
lds
adc
xor
or
dec
cltd
mov
ret
or
dec
lock
imul
fcoml
decb
jo
mov
scas
mov
data16
mov
and
and
lret
fistl
ljmp
sub
fs
inc
outsl
pop
push
stc
adc
inc
push
in
fbld
daa
mov
jbe
dec
test
or
pop
das
push
inc
push
and
jno
mov
repnz
mov
xchg
stc
sbb
es
jae
pop
aad
pop
dec
jecxz
xadd
je
out
push
adc
leave
clc
cld
xchg
fidivrl
mov
xor
adc
in
call
call
mov
call
sbb
sbbb
fsubs
or
sbbl
std
pop
lret
fisubrl
andl
sbb
in
js,pt
mov
call
lea
mov
cmp
jge
jno
xchg
dec
sbb
movsl
jecxz
cmp
sub
sbb
xchg
gs
les
scas
sbb
add
pushf
mov
cmpsl
mov
and
mov
out
addb
or
fildll
and
and
js
cmp
je
jecxz
test
push
jb
leave
pop
add
push
sbb
xor
mov
ljmp
enter
out
inc
daa
fwait
ret
cs
enter
stc
cmp
xor
mov
xor
scas
lret
dec
or
repz
sub
sub
aas
pop
cmc
mov
add
leave
jb
stos
jae
jmp
aad
mov
jl
cmpsb
sbb
fiaddl
push
movsb
xchg
jno
adc
rolb
mov
jae
jp
jb
ret
psubq
pop
or
stos
stos
or
cmp
pop
rolb
xchg
rcrl
push
test
cmp
jp
xor
sub
test
inc
xor
out
ret
jno
iret
and
aam
sti
push
pop
cmp
fldl
jle
lret
pop
in
outsb
or
xor
dec
movsb
scas
fcmove
mov
xchg
lcall
loopne
cmp
mov
out
and
mov
fldt
or
mov
insl
mov
popa
pop
stos
int
add
fldenv
jb
fistps
jno
sbb
test
orb
arpl
inc
adcl
int3
inc
adc
in
push
ja
fwait
int3
xor
in
jno
aaa
xor
data16
and
movsb
out
mov
xor
adc
ret
pop
mov
sbb
dec
push
inc
adc
out
lahf
jg
das
out
adc
je
adc
scas
rorb
repz
into
xchg
fldcw
inc
inc
scas
or
cld
fwait
out
lret
mov
insl
aaa
movl
mov
inc
insl
imul
cmp
scas
cmpsb
rorl
sub
sti
lods
lret
sarb
cs
loop
cmp
lods
xchg
sbb
mov
pop
add
push
inc
pop
popa
dec
imul
das
das
dec
pop
adc
cmc
lahf
outsb
mov
in
sub
jne
mov
jg
push
decb
push
xchg
aad
and
adc
cmp
ret
ja
fmull
jecxz
pop
pop
mov
pop
sub
dec
mov
adcl
add
leave
into
test
leave
mov
repnz
and
pop
inc
xchg
pop
pop
int
or
dec
dec
xlat
ror
lahf
xchg
dec
ficoml
adc
ret
lods
iret
and
sub
popa
sbb
push
adc
pop
and
in
or
mov
jns
push
pushf
stos
mov
mov
cmp
dec
xor
cmp
xchg
pop
sub
int3
mov
cli
cmc
imul
or
jbe
mov
cmpl
cld
pushf
test
stos
xchg
or
cmp
xor
dec
mov
cmpsb
sbb
outsl
mov
out
aas
outsl
dec
mov
clc
or
pop
mov
es
jp
mov
enter
sbb
inc
data16
lock
cmp
inc
cld
sub
call
jl
mov
or
add
dec
sbb
pop
insl
or
mov
ja
cli
dec
push
xchg
inc
mov
loope
mov
dec
add
outsl
lahf
jb
fcmovb
adcl
pop
adc
out
xchg
sbb
fimull
xchg
inc
movsl
shrb
out
sbb
push
scas
jl
cli
jnp
rcrl
add
loopne
jecxz
mov
fldenv
mov
and
sub
mov
or
pusha
imull
dec
sbb
iret
movb
inc
pop
outsb
xchg
cmc
fistps
insb
xchg
sbb
enter
outsb
dec
pop
int
rolb
jmp
push
fidivrl
test
scas
orl
push
cmpsl
mov
mov
imul
pop
sub
jmp
mov
adc
push
sbb
call
out
jnp,pn
fcomps
add
cltd
cmpsb
jbe
mov
loope
pop
xor
aad
dec
xlat
adc
sti
jae
sbb
daa
jb
jne
adc
cmpsl
push
jns
lret
jg
test
dec
xchg
ljmp
inc
xor
lret
xchg
dec
jmp
sbb
bound
lods
jp
and
ljmp
dec
or
sbb
or
or
popf
cwtl
jo
mov
mov
pop
addb
outsb
lods
dec
out
push
repnz
pop
cld
cltd
sbb
xchg
jecxz
and
jo
push
gs
mov
repnz
popa
movsl
mov
mov
xor
outsl
push
fsubrl
xchg
add
loope
rolb
sbb
sub
mov
jmp
push
test
push
pop
aas
cmp
jmp
xchg
jns
lcall
jae
inc
push
pop
sub
jge
hlt
mov
jmp
loopne
inc
pop
xchg
sar
or
fnstenv
icebp
cmp
aam
jmp
loopne
xchg
push
mov
mov
cmp
sub
out
aas
scas
repnz
inc
and
lds
jnp
ret
cli
sbb
sahf
cld
cli
cmp
pop
cli
push
fstpt
dec
cld
sbb
lret
enter
cmp
outsl
mov
nop
fcomip
je
fldl
cmp
movsl
xchg
stc
imul
imul
addr16
sbb
pop
push
and
mov
xchg
popa
inc
arpl
negl
sub
inc
pop
arpl
rcrl
dec
or
lods
pushf
dec
stc
ret
mov
lahf
test
dec
cltd
cmc
mov
out
int3
daa
xchg
popa
lahf
ret
adc
sub
lret
stos
and
addr16
pop
dec
jle
das
or
sti
sub
clc
cs
std
or
cs
sahf
bound
rep
outsb
imull
jg
add
into
cltd
inc
outsb
mov
test
add
jne
pop
sbb
outsb
inc
push
jns
popf
jp
push
xor
lock
xor
pop
lea
dec
lcall
insl
push
test
inc
push
popa
push
push
loop
add
cmp
das
jae
sub
or
xchg
cmc
shlw
lock
mov
shrl
aad
pop
xchg
xor
xchg
push
gs
cmpsb
sub
inc
mov
mov
cmp
pop
fs
cld
xlat
push
pop
test
pushf
add
sbb
adc
cmp
fs
and
mov
jae
jg
jne
sbb
or
arpl
dec
ret
arpl
cltd
imul
add
sbb
mov
mov
pop
pushf
out
or
push
xchg
pop
xor
lret
in
inc
in
sub
and
jmp
aaa
icebp
imul
add
sbb
push
lods
and
aad
jae
in
and
mov
inc
dec
and
ffreep
roll
outsb
jae
pop
pop
ret
in
jmp
outsl
lock
xchg
pop
and
cmpsl
adc
std
or
push
jne
aaa
lds
test
addr16
jp
xor
push
out
lret
push
cwtl
cmpsl
push
mov
xchg
jl
imul
orb
in
ja
ja
jne
dec
or
jge
mov
test
push
pop
mov
sub
sbb
sahf
mov
push
in
cli
repz
dec
mov
adc
jge
sahf
and
les
mov
mov
enter
addr16
cmp
push
cmp
mov
hlt
sbb
mov
test
cmp
cmp
xlat
fstps
push
ja
push
les
loopne
pop
mov
push
pop
and
out
sub
divb
mov
and
loopne
je
mov
pop
inc
lds
cmp
das
adc
pushf
xchg
std
and
fdivl
push
outsb
out
and
add
loop
clc
cmp
in
lock
repnz
cld
mov
pop
mov
imul
xor
mov
adc
movsb
scas
mov
icebp
push
cmp
xchg
addr16
dec
dec
ret
inc
aad
jl
dec
test
out
sbb
jo
jp
pop
je
cmp
jne
push
pusha
outsl
cmp
adc
pop
test
inc
fcoms
rolb
mov
das
mov
fdivrl
insl
cmp
out
in
add
loope
dec
mov
fdivrl
xor
inc
push
stos
mov
push
pop
cwtl
shll
push
out
sbb
cmp
inc
daa
movsb
mov
xchg
mov
fisubl
jae
pop
or
add
lds
add
dec
sbb
nop
in
dec
pop
xor
sbb
loop
mov
test
sahf
mov
mov
cmove
push
outsl
hlt
pop
add
gs
dec
lret
xchg
pop
mov
test
push
mov
inc
aas
divb
add
pop
into
repnz
add
pop
sub
mov
scas
push
sbb
lcall
daa
cmp
in
sub
in
rolb
in
sbb
pop
xlat
lret
xlat
mov
xor
or
fcmovnb
mov
ret
inc
dec
xor
movsb
cmp
lahf
mov
mov
mov
cld
mov
rorb
xchg
jp
inc
mov
sahf
out
adc
xor
pop
xchg
popf
pop
jae
lods
push
sub
sub
dec
push
test
sbb
sub
inc
inc
mov
ljmp
sub
pop
mov
gs
sub
xorb
lcall
inc
icebp
push
and
dec
dec
loope
inc
cmpxchg8b
mov
mov
pop
push
inc
movsb
push
iret
or
mov
inc
ljmp
cmp
lret
push
shrb
cmp
bound
test
arpl
rorl
inc
insb
enter
jmp
aaa
stc
sub
push
xchg
call
popf
ret
rorl
add
add
in
gs
or
dec
mov
xor
mov
xor
jne
scas
xchg
pusha
lods
dec
imul
test
pop
fnstcw
pop
insl
cli
mov
jne
addb
call
adc
pop
les
in
aam
pop
fs
pop
loope
mov
pop
adc
or
data16
repz
push
cmp
jae
xor
sub
cwtl
dec
mov
icebp
inc
scas
pop
jno
mov
cmp
xor
cltd
xchg
jbe
cmp
insl
rcrl
cmp
mov
dec
sub
cmpsl
cmp
adcb
leave
lds
inc
jg
mov
add
leave
insl
sub
sub
lods
fldl
inc
mov
or
dec
fisttpl
andb
fnsave
lock
pusha
outsl
mov
bound
inc
mov
inc
jb
lock
jnp
pop
xor
and
movsl
pop
fisubrl
cli
pop
sub
pop
sub
out
pop
jnp
xchg
xor
stc
in
sbb
jnp
jbe
mov
add
nop
dec
push
inc
fs
test
cli
cs
push
push
dec
jge
lds
push
fwait
insb
test
stos
loop
adc
add
lret
arpl
pushf
into
pop
ds
aas
xor
bound
gs
ja
xor
sahf
sbb
pop
js
and
in
mov
std
xchg
test
and
jnp
mov
mov
jecxz
push
stos
cmpsl
in
out
jge
or
clc
outsl
fdivrl
test
push
jle
leave
popl
fidivrs
sub
pop
and
ss
lock
jl
or
sub
popa
pop
adc
inc
pop
xor
lcall
dec
pop
scas
fcoml
mov
adc
dec
push
jne
adc
hlt
adcl
jp
int
jns
pop
cmp
xor
test
orb
aad
sbb
fnsave
cmp
shll
mov
out
arpl
or
into
stos
dec
jo
or
sub
adc
out
mov
in
cmovo
stos
jns
fwait
dec
scas
jmp
xchg
cmc
fdivl
setno
mov
jmp
push
xchg
call
pop
jp
jae
test
test
dec
cmp
mov
das
call
insb
adc
and
scas
sbb
shl
mov
ljmp
push
fimull
adcb
sub
jbe
js
mov
adc
hlt
leave
mov
inc
js
lcall
cmp
mov
dec
mov
lock
pop
lret
mov
sub
mov
enter
xchg
aaa
rcrb
outsl
hlt
pusha
pop
push
sbb
frstor
testl
pop
fildl
sub
aad
pop
mov
xchg
sarl
inc
jnp
sti
insl
sbb
in
dec
dec
out
incl
icebp
push
or
int3
loopne
pop
mov
popf
mov
dec
add
dec
sub
mov
test
inc
insb
sbb
xlat
push
jle
push
xchg
xor
stos
aam
and
test
or
ds
test
and
cmp
sarb
adc
test
cmp
xor
scas
mov
popa
aas
pushf
fidivs
jno
jle
fidivl
cmp
jb
push
outsb
repz
jge
pop
aad
xchg
sbb
rolb
sbb
movsl
in
jle
in
adc
stos
insb
fidivrl
and
jo
mov
inc
decl
and
dec
aaa
test
sbb
fsubs
ds
sub
add
dec
push
cli
fwait
mov
pop
aaa
push
sbb
add
faddl
lods
jo
shrd
pop
pop
fxch
das
imull
inc
imul
aas
lods
mov
enter
pop
add
aas
xchg
fisubl
test
adc
in
push
xchg
push
inc
cmp
and
mov
outsb
and
pop
push
rorb
lock
xor
dec
cmc
insl
and
arpl
mov
in
movsl
push
pop
mov
fcmovnu
lea
mov
popa
xchg
add
subb
shll
or
mov
test
mov
movsl
inc
pop
mov
add
mov
lret
mov
mov
js
add
cmc
add
je
inc
loope
jmp
andb
dec
imul
aas
dec
shr
pop
repz
xchg
xor
frstor
and
cs
fisubl
push
ja
inc
outsl
dec
jae
xor
aaa
std
dec
gs
ljmp
aaa
adc
shlb
xor
cmc
pop
ljmp
jmp
pop
mov
inc
cmp
pop
outsl
pushf
cmpsl
or
pop
mov
scas
inc
les
fidivl
inc
mov
stc
cmp
clc
pop
outsb
das
push
push
repz
xchg
inc
lcall
lahf
lret
xchg
neg
or
fucomip
mov
dec
fimull
xchg
inc
jmp
xor
jl
insb
or
out
push
aas
inc
mov
mov
sbb
xor
mov
push
repnz
ljmp
stc
andl
vpaddq
and
mov
aas
sahf
xchg
xchg
push
add
mov
idivb
orl
clc
cmc
outsb
std
mov
fs
add
lret
push
push
cmp
adc
test
dec
dec
fwait
mov
fidivl
dec
xlat
mov
mov
or
cs
das
loop
iret
mov
xchg
inc
jge
in
icebp
insl
and
xlat
mov
inc
xchg
stos
pop
imul
dec
fwait
adc
ss
pop
arpl
xchg
data16
push
jge
insb
jl
adc
scas
inc
push
sti
or
or
fisttpll
les
outsb
pop
xor
adc
ret
test
lea
sbbb
cmp
stc
jo
clc
adc
and
sarb
fdivl
aam
cmc
arpl
push
mov
int3
ljmp
scas
ljmp
push
sub
xchg
pop
xlat
pop
sbb
jmp
js
rcrl
inc
adc
sbb
cltd
mov
mov
ficompl
adcl
std
popf
inc
add
cmp
pop
iret
cld
pop
popa
mov
insb
push
les
test
sub
test
add
mov
sbb
lret
ret
cmp
cmpsl
inc
out
aaa
mov
add
sahf
icebp
pop
neg
nop
xor
jbe
mov
scas
movsb
cltd
je
cmc
dec
jnp
insb
dec
loop
cltd
or
mov
enter
neg
or
fistps
sbb
pop
mull
fistl
add
or
mov
mov
movsb
mov
enter
xor
das
push
dec
mov
in
adc
add
pop
cli
xchg
loopne
adc
xlat
sub
sub
cwtl
and
or
lods
push
mov
out
mov
push
out
xchg
sbb
aas
cli
aad
fidivrl
popa
in
es
cmp
fstpl
filds
xchg
ja
mov
out
mov
inc
sub
xchg
dec
cmp
mov
inc
jl
xor
lret
fimull
or
in
jl
pop
pop
dec
dec
shll
jae
mov
adc
push
mov
and
icebp
shl
mov
jp
push
mov
icebp
jge
or
jl
push
pop
ss
stos
mov
jne
pop
loope
int
into
int3
dec
xchg
iret
out
push
fsubrs
xlat
jne
sbb
jbe
mov
into
dec
loop
jo
icebp
insb
dec
movups
add
push
std
inc
mov
decb
sbb
or
scas
sahf
pop
stos
sbb
push
js
into
iret
enter
mov
dec
mov
xchg
mov
xor
sub
inc
push
repz
in
mov
cmp
test
imul
loopne
sbb
fidivs
call
mov
stc
rcll
aaa
jp
fsts
mov
pop
fcompl
bound
popf
fidivrl
and
test
dec
cmp
push
cmpl
loope
das
clc
adc
inc
pop
int
xor
cmp
sar
aas
cli
push
xor
sub
test
out
dec
pop
gs
ljmp
leave
jnp
pusha
pushf
das
daa
leave
loop
fists
mov
repnz
dec
int
into
pop
data16
mov
test
in
in
cmpb
mov
mov
call
lret
out
jg
and
xchg
or
adc
int3
repnz
add
jp
sub
sub
jb
arpl
xchg
xchg
add
pop
jmp
inc
add
jbe
test
cltd
or
cmp
mov
push
loop
or
sub
fwait
sub
add
lds
or
jo
test
fimuls
xor
push
dec
imul
fcoml
jnp
or
test
test
ja
add
adc
lea
js
xor
mov
mov
lcall
fistps
lods
sub
and
mov
scas
shl
push
dec
jg
bound
sarb
aad
orl
test
push
sbb
das
mov
push
inc
add
cmp
and
outsl
xor
push
pusha
or
cmp
gs
repnz
mov
jg
enter
ds
pop
ss
xchg
stos
xor
loope
repz
incb
xchg
dec
test
sbb
sub
and
xchg
ror
jns
mov
adc
xchg
xchg
dec
adc
ljmp
push
shrb
sbbb
pop
cmp
sbb
iret
lods
jmp
fisttpl
or
jmp
das
iret
cmp
int3
in
pusha
sbb
jno
das
mov
sti
add
sbb
adc
call
mov
outsl
shll
jo
sbb
into
mov
jge
addl
mov
loope
jp
dec
jg
jmp
in
js
pop
mov
sbb
dec
and
push
inc
xor
jb
mov
iret
fidivrl
mov
mov
filds
and
pop
cli
xlat
int3
sub
cs
cmp
aam
dec
mov
insb
inc
push
xchg
pop
sbb
xor
stos
pop
ss
xor
mov
loopne
mov
mov
mov
push
mov
leave
pop
scas
and
push
fwait
pop
jns
pop
jecxz
pop
sub
or
jmp
shlb
pop
ficomps
loopne
arpl
mov
stc
outsb
aam
cltd
lods
pop
pop
sub
mov
pop
add
cld
cmp
sbb
xchg
xor
push
cmpb
adc
idivb
jno
scas
adc
divl
int3
fs
xor
mov
repz
pop
imul
andl
sub
stos
stc
test
pop
xor
mov
in
lds
mov
sbb
in
cmpsb
lds
push
test
ret
sub
mov
ljmp
sbb
imul
mov
movsl
dec
push
mov
and
mov
rcll
lea
jne
jl
cs
fldl
xorl
push
pop
dec
jns
in
adc
mov
push
mov
push
je
jmp
pop
xchg
mov
xlat
dec
aad
scas
mov
mov
ds
daa
fdivs
inc
pop
ljmp
jae
push
jbe
cmovb
into
jbe
pusha
sbbb
cmp
stc
test
pop
add
pushf
mov
movsb
dec
cld
dec
mov
pop
pop
dec
push
jno
pop
out
loop
dec
pop
out
cmp
cmp
fadds
lods
pop
mov
lock
sarl
lea
xlat
mov
mov
or
sbb
pop
mov
rclb
popf
out
in
ret
lea
mov
loop
pop
or
enter
shl
push
jmp
mov
add
into
rep
fldcw
jp
add
dec
pop
pop
xchg
enter
clc
lcall
lcall
movsl
jp
xchg
sub
jmp
and
add
pop
aaa
shlb
cmp
dec
cs
add
cmp
dec
repz
push
outsl
pop
repnz
ja
dec
iret
test
mov
pop
dec
xchg
ret
cmp
rcll
mov
cmp
sbb
ficoms
das
dec
xchg
inc
sub
mov
stos
sub
inc
jnp
negb
js
xchg
mov
sahf
cltd
gs
fimuls
insb
mov
repz
push
js
stc
lds
mov
xchg
shrl
xchg
mov
xor
iret
adc
sbb
mov
cmp
scas
xor
sub
mov
fcoml
xorl
dec
push
cmp
sbb
out
sub
ja
sar
mov
xlat
repz
lahf
mov
inc
xchg
adcb
pop
adc
stos
lahf
sbb
xchg
adc
mov
mov
mov
mov
cmp
add
mov
fsub
mov
mov
int3
bound
xor
les
jnp
jnp
lret
mov
out
fiadds
int
or
lret
ret
mov
shr
add
test
call
icebp
pop
jbe
cmp
inc
sbb
daa
mov
xchg
out
jmp
jb
add
rclb
adc
xor
cmpl
stc
imul
leave
cli
sub
dec
fsubrs
test
not
data16
js
adc
repnz
add
xor
int3
mov
add
jne
loope
ret
pop
mov
jae
xor
or
ja
mov
bound
push
sub
sub
out
inc
adc
cli
and
ret
in
xchg
adc
mov
push
jmp
push
or
mov
sub
dec
int3
stc
xchg
dec
mov
icebp
pusha
icebp
pusha
jno
sub
repnz
ljmp
int
adc
xorb
rolb
dec
push
cmpsl
sub
cmp
push
sbb
dec
jnp
or
pop
lret
push
mov
add
pusha
lahf
movsl
xchg
inc
mov
bound
insb
add
or
fists
lret
rcrl
dec
pop
out
cld
cltd
fisttpll
cmp
fstpl
or
stc
xchg
xor
pop
pushf
fwait
jo
ljmp
jmp
mov
subb
stc
pop
inc
sub
mov
into
jge
leave
fcmovbe
cli
scas
lods
scas
pop
mov
xchg
stos
adc
xchg
jo
jae
mov
adc
fs
cld
cld
pop
faddl
movsl
fmuls
xchg
movsl
lcall
das
jo
adc
gs
test
mul
rcrb
or
pop
xchg
sbb
call
or
add
out
cltd
cmp
ret
push
push
stos
popa
jno
dec
cmp
mov
popf
jge
lock
ret
or
cmc
addr16
notb
lret
fidivl
les
adcl
push
out
dec
jl
push
cli
sub
xor
add
jno
jno
movsb
mov
mov
aam
or
mov
outsl
movsl
jge
negl
mov
lds
add
xor
repnz
gs
call
pushf
mov
add
out
cmp
push
sahf
dec
pop
push
jnp
fxch
sub
aad
sbb
jl
cmp
mov
jle
push
mov
fcmovu
loopne
stos
out
rcll
push
fisubrs
jae
mov
data16
sub
inc
push
or
xor
ljmp
add
lea
xor
outsl
pop
in
movsb
push
sub
ss
jbe
aam
inc
sbb
icebp
dec
shlb
sub
dec
ds
stc
and
inc
je
mov
out
sub
pop
pop
stos
mov
lretw
scas
mov
mov
into
out
jp
ds
pop
or
fistps
push
std
pop
dec
mov
ret
int
scas
cs
adc
pop
imul
dec
pushl
lcall
sbb
push
dec
stos
xchg
pushf
test
lods
pop
push
adc
inc
mov
or
dec
and
fs
xchg
leave
fsubrs
mov
leave
sbb
dec
add
andl
xchg
dec
inc
aad
and
and
imul
jmp
xor
add
test
in
ja
fcoml
and
jb
sub
lcall
leave
sub
in
jmp
jge
xchg
mov
out
stos
cs
sub
inc
add
gs
ret
inc
add
cwtl
test
movl
fwait
push
inc
mov
or
shrb
in
hlt
add
jp
push
or
and
cwtl
jg
xchg
insl
aad
adcl
inc
out
mov
jg
je
insb
cmp
xchg
lea
cmp
pusha
mov
dec
mov
imull
incb
sbb
imul
mov
push
vcvtsd2si
push
cli
adc
xchg
mov
push
stc
pop
jg
imul
push
mov
push
push
aas
jl
cmp
out
inc
icebp
mov
sbb
gs
cmp
cmp
popa
mov
sbb
test
or
mov
sahf
push
mov
std
sub
shr
dec
xchg
or
push
dec
xchg
add
lcallw
push
pusha
xchg
sbb
cmpsb
mov
out
mov
inc
inc
insl
sub
lods
and
lcall
fcomps
or
sbb
adc
mov
cld
and
jnp
aad
xor
dec
sahf
xchg
add
jne
push
scas
or
mov
test
and
fcmovnbe
enter
pop
stos
adc
stos
mov
sbb
mov
dec
orb
adc
mov
inc
xchg
push
aam
outsl
adc
cmp
lcall
shll
jns
pop
mov
adc
scas
and
add
xchg
dec
xor
mov
add
test
arpl
jp
ljmp
popa
sub
cmp
xchg
addl
insl
stc
add
cmp
push
aas
dec
sar
xor
xchg
mov
inc
paddsw
cmp
icebp
mov
mov
jo
or
movsb
cmpb
or
push
dec
clc
cs
sti
xchg
lods
addr16
xor
pushf
sbb
ja
add
push
mov
ja
outsb
mov
pop
cmpsb
jb
sahf
pop
mov
gs
das
pop
loopne
into
sbbb
inc
ljmp
pushl
add
adc
or
enter
aad
and
ret
fstpt
repnz
mov
clc
jge
inc
jnp
push
cli
test
or
inc
cmpsb
pop
mov
cmp
sub
leave
push
in
sbb
pop
in
mov
xor
jbe
int
loop
pushf
fsubl
addb
popa
pop
inc
push
mov
int
mov
dec
pop
lods
or
rcrl
mov
mov
sbb
cwtl
pop
lret
lret
adc
mov
rcll
daa
mov
mov
mov
popf
jae
push
stc
jl
fcoml
lret
ret
cmp
sbbb
lea
mov
jl
adc
inc
mov
push
jno
lcall
mov
movl
jno
fadd
xor
aam
mov
xchg
aaa
std
addb
mov
jmp
mov
jno
fildl
jbe
imul
test
loopne
xchg
stos
dec
cmp
jg
in
cmp
jp
adc
mov
mov
jne
rcrl
stos
inc
mov
cmpsl
add
ja
add
push
lock
jnp
jge
enter
lahf
sbb
push
cmc
mov
xlat
push
cmp
testl
leave
out
sbb
movsb
jle
sub
cli
cmp
jo
xor
dec
mov
jne
push
mov
jl
or
stos
cwtl
pop
pop
sbb
fldl
mov
xlat
adc
mov
xchg
or
bound
pop
fdiv
lock
adc
shll
loop
bound
pusha
mov
test
ja
fs
pushf
mov
mov
inc
mov
movl
hlt
pop
fs
sub
fsubrs
push
mov
mov
imul
cmp
out
or
adc
lahf
int
sub
dec
test
push
jg
mov
sbb
add
movsl
loop
xor
enter
inc
je
pop
bound
dec
dec
icebp
mov
xchg
outsb
mov
lock
pop
cmp
divb
dec
jno
adc
inc
jbe
pushf
fidivs
xchg
sbb
and
dec
jp
mov
sub
jns
or
mov
pop
into
cmp
mov
push
pop
or
and
std
stos
lahf
fmuls
push
ja
or
pop
mov
and
jo
outsl
pop
inc
scas
sub
dec
xchg
sub
fsts
into
xor
mov
xchg
aaa
sahf
cltd
sub
xchg
sbb
sub
outsb
mov
pop
push
or
rorb
fs
jl
or
inc
imul
lock
xchg
stc
xorb
push
shll
cmc
scas
jne
fldt
dec
repz
jno
cmovs
lret
xchg
ljmp
jno
jp
push
repz
enter
and
pop
call
negb
mov
adc
xor
pop
pop
jbe
daa
pop
fstpt
xchg
jbe
out
xor
and
add
and
xchg
dec
fsubl
jmp
cmpb
clc
jae
push
xchg
rcrl
es
mov
lds
popf
push
into
mov
adc
add
push
cltd
jmp
pop
stos
hlt
fwait
and
push
jno
jecxz
lahf
imul
gs
into
loopne
test
xchg
cmp
inc
int3
or
outsb
lea
lahf
cwtl
mov
add
inc
cmp
fdivr
leave
aas
test
xchg
jnp
aad
push
loope
dec
adc
inc
xor
insl
insl
and
xor
arpl
mov
push
movsb
adc
cmc
add
adc
sbb
sbbl
je
jmp
jmp
xor
xchg
test
xor
dec
lret
dec
cmpsb
mov
sub
push
mov
push
mov
mov
les
cmpsl
lods
in
dec
ds
mov
je
into
andps
cld
add
lds
popf
cwtl
mov
call
mov
xchg
repnz
and
jbe
cmovge
dec
loope
push
ljmp
push
sub
cmpsl
dec
push
cltd
mov
fnsave
outsl
rclb
fs
aas
add
test
sbb
jae
test
nop
mov
fs
push
dec
clc
les
jl
xchg
xlat
mov
fiadds
inc
push
sub
fisttpl
les
popa
mov
push
xchg
xor
xchg
stc
or
dec
idivb
js
lds
in
test
cwtl
fdivrp
test
mov
icebp
add
jne
stos
jne
scas
pop
dec
sbbw
mov
mov
mov
add
lods
xor
pop
push
in
popa
jp
cmc
dec
cmpsb
push
mov
and
stos
mov
pop
lret
mov
fsubrl
adc
sbb
jb
shll
pop
lock
or
pop
sub
jge
rcrl
push
jae
lds
mov
pop
jb
push
jle
movsb
inc
pop
setg
scas
sbbl
rsqrtps
xor
jge
push
int3
mov
lahf
pusha
in
sub
jle
pop
mov
test
loop
or
dec
cmp
test
xor
lcall
hlt
mov
lea
sub
sbb
out
push
add
in
ja
das
dec
mov
aam
idivl
out
push
lcall
or
dec
lcall
mov
or
push
push
jl
das
and
and
cwtl
xchg
sub
xlat
mov
popa
mulps
pop
stos
and
dec
out
adc
test
and
loop
cli
xchg
lret
inc
pop
jecxz
xor
les
pop
xor
add
std
pop
stos
mov
out
cmc
cld
sbb
fsub
mov
sub
roll
mov
add
cld
push
cmpsb
jbe
xchg
lret
xchg
sbb
push
rol
fidivs
jg
xchg
xor
shll
insl
scas
xchg
adcl
push
outsb
aaa
adc
dec
pop
sub
inc
aaa
shll
sbb
push
xchg
mov
dec
sbb
fnsave
movsl
dec
jns
ret
sbb
lods
push
dec
sbb
ljmp
pop
je
adc
enter
movb
subl
xchg
and
cmp
pop
mov
inc
lahf
bound
es
fildl
imulb
sub
or
push
inc
daa
sub
add
xchg
popf
lods
loope
xchg
sbb
pusha
mov
add
push
sbb
push
cmp
movsb
and
mov
mov
mov
pop
adc
fisubs
testl
and
mov
mov
push
cli
cmc
cmpsl
inc
rcrl
mov
mov
pop
push
iret
cltd
and
scas
sub
cmp
mov
jbe
and
clc
push
xor
xchg
mov
lods
sbb
mov
pushf
xchg
pop
push
ds
rcll
cltd
and
hlt
or
shrl
sbb
jns
sub
cmp
sub
push
jmp
cwtl
arpl
bound
rcll
and
std
mulb
fmull
cmpsb
add
dec
cmp
or
sbbb
popa
pop
aad
subl
movsb
in
repnz
adc
cmp
dec
call
mov
cmpsb
add
mov
xor
jae
fisubs
inc
dec
test
add
fldcw
dec
mov
sub
pop
lret
mov
aas
jnp
dec
jmp
cmp
xor
ret
in
or
cli
addr16
pop
int3
pop
xor
push
psrlw
mov
adc
faddl
xchg
hlt
pop
sahf
addl
outsb
aam
ret
repnz
mov
push
je
inc
add
ljmp
test
jb
dec
imul
dec
or
movb
cmp
pop
adc
movb
push
and
mov
mov
jg
repz
sbb
add
test
aaa
shr
add
mov
je
xchg
pop
mov
lahf
mov
xorb
enter
mul
fcmovbe
rorb
lods
shl
repnz
lcall
jg
lcall
pop
adc
test
les
xor
rol
jae
cmp
pop
int
in
in
fstpl
sub
pop
in
fwait
sahf
clc
fwait
xchg
jbe
inc
les
nop
push
testb
xor
dec
gs
dec
cmp
xchg
pop
fiaddl
jl
mov
aad
pushf
push
or
mov
imul
test
js
aas
dec
add
pushf
stc
dec
int3
add
fs
or
int
imul
stos
and
enter
pop
xlat
pop
inc
lret
cmp
jp
xor
gs
loope
loopne
push
adc
jne
push
filds
and
std
pop
lret
sub
subb
mov
add
sbb
ljmp
xor
add
enter
dec
loop
push
sub
dec
jle
neg
jge
mov
icebp
popl
sbb
loopnew
scas
insl
cld
je
sub
sub
pop
andb
pop
xchg
int3
out
mov
mov
aas
sbb
in
pop
cs
outsl
mov
scas
or
in
sets
xchg
xor
jge
or
hlt
mov
mov
jne
cld
lret
sbb
mov
out
inc
pop
adc
pop
push
jge
mov
test
mov
mov
out
stc
jae
outsb
lahf
divl
push
push
cmp
adc
add
test
jo
xchg
pop
cmc
add
pop
imul
sbb
scas
pop
ljmp
dec
inc
and
push
jno
cld
call
and
insl
aaa
ror
dec
cmpsb
push
mov
icebp
mov
mov
mov
cmpb
outsb
mov
jnp
icebp
xchg
ret
das
stos
inc
or
addb
jg
lea
jb
cmp
mov
sub
ror
adc
icebp
ret
stos
adc
inc
inc
adc
jae
mov
loopne
fidivl
shll
jge
or
shll
les
rcl
mov
mov
lsl
lcall
cmp
lret
imull
jmp
mov
or
inc
mov
out
sti
movsl
mov
daa
inc
pop
ret
pop
adc
loope
xorb
call
aaa
xcrypt-cbc
cmpsl
adc
pop
neg
jbe
inc
adc
lret
sarl
sub
outsb
fst
outsb
pop
stos
popf
push
mov
push
pop
cmp
out
out
iret
lods
jl
or
leave
scas
or
pop
int3
pop
aad
scas
inc
sbb
inc
push
addr16
test
test
and
imul
aaa
inc
aas
sti
add
cmp
jo
mov
leave
mov
outsl
ss
cmp
lock
sbb
ficompl
dec
mov
in
inc
fsubr
inc
dec
xor
xor
or
adc
push
adc
sbb
pop
xchg
popa
lcall
lods
lahf
add
adc
out
aas
sbb
idivl
mov
add
fisubrl
jmp
aam
push
mov
dec
pusha
pop
dec
mov
ret
nop
mov
in
dec
and
shrb
cli
pop
stos
push
adc
jne
ficoml
xor
pop
adc
loope
mov
out
insb
test
jg
pop
mov
imul
rol
jbe
imul
insl
out
mov
and
lods
mov
sub
out
incl
sub
xchg
ret
jno
jns
xor
pushf
xchg
fwait
andps
sbb
push
fsubl
or
stos
scas
dec
fdivl
mov
jecxz
jae
test
aas
addr16
jo
into
or
dec
out
dec
in
stos
ss
into
xchg
roll
adcl
adc
popa
jbe
pop
iret
shr
xor
fidivrl
pop
adc
xchg
adc
test
xchg
lahf
mov
sahf
ret
sahf
jmp
cs
in
bound
aam
push
fbstp
movl
jae
in
sbb
push
push
test
out
mov
mov
fsubl
sub
inc
cld
fiadds
mov
sbb
mov
sub
mov
movsb
call
xchg
push
push
scas
inc
jecxz
mov
jo
clc
sub
loopne
pop
les
fs
vmwrite
jno
fwait
lds
push
mov
mov
push
out
cli
mov
sbb
push
push
pop
test
sbb
aam
sbb
xor
outsl
inc
out
and
fimuls
xchg
lret
lods
or
dec
outsl
call
xchg
pop
inc
push
stos
adc
imul
or
mov
cmc
ja
test
and
icebp
imul
mov
cld
js
outsl
cmp
cmp
loop
aam
popa
cmp
mov
pop
dec
sub
mov
push
cmp
shl
enter
pop
roll
sbb
mov
outsb
dec
stos
jbe
insb
adc
cmp
adc
sub
es
mov
roll
mov
cld
add
sub
sub
roll
xchg
sti
arpl
mov
out
cld
cmp
ljmp
pop
fstl
hlt
imul
lahf
in
xchg
cmp
mov
test
add
sbbb
and
aad
push
inc
mov
mov
dec
or
push
lock
std
shll
cmp
jae
lea
test
data16
mov
insl
dec
mov
sub
shrb
js
stc
insb
outsb
je
lcall
inc
daa
add
jecxz
push
xor
inc
fstpt
pop
rcrl
dec
jp
insl
mov
cs
test
mov
int3
shrb
mov
imul
sti
push
mov
jle
out
sub
adc
mov
add
addr16
faddl
adc
fistpl
movb
scas
enter
pop
loope
push
mull
in
and
inc
push
xor
mov
cmpsl
div
jbe
mov
dec
shll
inc
xlat
and
fsubrl
inc
lcall
in
push
pop
inc
addb
adc
out
nop
in
inc
jecxz
out
jp
push
shll
mov
clc
xchg
sbb
or
cmp
pop
out
xchg
add
cmc
sbb
negl
inc
jnp
lock
xor
jl
xchg
arpl
imul
js
call
iret
pop
and
shll
stos
xor
mov
repnz
pop
xchg
dec
imull
mov
and
inc
adc
daa
dec
push
lea
lret
adcl
jae
add
or
cmpsl
test
fsubr
adc
dec
das
ret
lods
dec
push
sub
mov
das
ret
cwtl
enter
and
sbb
fcoml
and
mov
lock
inc
lea
mov
mov
pop
pop
fistpl
jmp
sub
popa
lds
sbb
jno
dec
add
cmc
cmp
aaa
pusha
stc
mov
arpl
sbb
cld
and
lahf
int3
sbb
sub
cli
adc
fadds
ja
outsl
jo
aaa
mov
ret
mov
jle
data16
pop
dec
mov
jnp
push
jmp
dec
shrl
xor
dec
sbb
mov
pop
loope
into
xlat
push
pavgb
sub
adc
push
enter
jge
adc
sbbb
shll
add
jecxz
fs
lret
sbb
jbe
add
push
mov
mov
adc
out
push
rorl
daa
push
lock
jge
sub
in
mov
and
test
dec
jb
cmpsb
divl
mov
sbb
in
sbb
mov
jbe
sbb
lods
stos
cmpsb
inc
shrl
sub
push
xchg
dec
dec
sbb
out
push
aad
int3
xor
adc
xorb
jo
adc
shl
jno
pop
out
mov
xor
cmp
iret
cld
mov
sahf
loopne
dec
aas
loope
sub
pop
mov
cmp
mov
out
sub
push
out
inc
insb
outsb
inc
xor
aad
sub
sub
xor
dec
ljmp
lar
pop
addr16
mov
mov
imul
xor
add
mov
adc
movsl
jno
test
dec
pop
pop
roll
inc
cwtl
in
sub
mov
lcall
jns
cs
loop
test
and
out
int3
rclb
rol
out
test
and
movsb
jnp
jnp
mov
arpl
test
mov
das
movsl
sbb
addr16
adc
jg
sti
cli
cli
add
pop
pushf
xchg
xchg
stos
fsubrp
addr16
push
dec
out
dec
cmpsb
into
pushf
and
jbe,pn
jmp
xor
rorb
enter
icebp
sarb
mov
daa
imul
mov
xorl
xchg
stos
in
test
push
jo
scas
mov
ret
dec
push
lcall
and
mov
xor
loope
cmpsb
add
add
mov
mov
dec
hlt
xor
push
or
inc
int
nop
push
cwtl
jnp
push
mov
fistpll
ljmp
out
popa
fldl
xchg
fcmovnbe
fwait
lea
sub
xchg
push
nop
mov
and
and
xor
or
sub
mov
push
dec
cld
stos
mov
jl
mov
cmpsb
add
cmpsl
adc
mov
inc
out
dec
loope
jbe
popa
incb
int3
push
jge
out
aas
xchg
xchg
shrb
sbb
pop
mov
cmp
jbe
mov
sub
aaa
bound
mov
xor
mov
dec
outsl
in
aam
lods
jne
outsl
aas
inc
pop
push
aam
add
mov
js
and
mov
call
xchg
hlt
and
mulb
mov
fucom
stc
pop
sbb
out
inc
int
mov
xchg
imul
push
popf
sub
mov
dec
mov
push
and
xor
bound
push
adc
je
pop
pushf
jge
iret
push
pop
mov
push
cltd
repz
outsb
popa
lods
cmp
rorb
addr16
test
cmp
jp
sub
or
int3
xchg
dec
or
or
repnz
icebp
mov
xor
and
repnz
fisubl
jno
loope
push
jo
insl
ss
into
loop
sub
xor
std
pop
xor
mov
lahf
sub
loop
ror
mov
sub
cmpsb
mov
jg
jbe
jb
dec
push
push
sub
cmpsb
xor
sbb
mov
divl
dec
and
xchg
push
push
test
adc
daa
or
pop
dec
arpl
arpl
mov
bnd
or
ja
test
mov
mov
sub
arpl
jp
or
dec
je
popf
push
and
xchg
sbb
sbb
or
dec
mov
push
inc
push
rcll
lcall
loopne
xchg
test
lcall
push
hlt
and
test
dec
add
enter
decb
sub
dec
into
aas
cwtl
hlt
cmp
data16
add
test
pop
adc
mul
out
sub
push
sub
pushf
ja
mov
and
test
loopne
fwait
sub
jno
fldl
adc
jo
sub
cmp
ret
mov
hlt
sub
sbb
fs
xor
cmc
outsl
sub
pop
jnp
and
fisubrl
leave
mov
xchg
inc
inc
add
dec
test
jnp
out
xchg
or
sbb
pop
cmpsl
push
ret
pop
jmp
jg
pop
das
cs
dec
cld
cmpsl
sbb
pop
inc
mov
cmp
xchg
sub
mov
iret
mov
dec
xor
dec
lret
xchg
cmp
xchg
mov
dec
ss
mov
sar
mov
cmpsb
aad
dec
jp
xchg
inc
mov
and
mov
imul
mov
ret
aam
xchg
pop
inc
ljmp
pop
adc
inc
adc
subl
jge
imul
mov
fucomi
gs
stos
add
or
cmpsl
js
pop
xor
jp
out
cli
push
push
jg
test
adc
bound
mov
ret
mov
outsl
lods
inc
dec
sub
lods
jmp
rcrl
out
push
inc
mov
mov
sbb
push
sub
xchg
sbb
imul
sbb
pop
cmp
inc
ds
sti
xlat
cmp
imul
lret
or
xchg
add
daa
adc
js
pop
icebp
mov
es
test
add
xchg
dec
jmp
mov
in
repz
mov
pop
adc
pushw
xor
push
das
ss
add
push
dec
lcall
scas
test
jo
mov
daa
arpl
xor
rorb
fisttpl
aaa
movsl
adcb
dec
xor
mov
test
mov
rep
jp
popa
mov
aas
dec
fbstp
enter
cwtl
lea
dec
inc
mov
sbb
dec
dec
stc
orb
in
add
dec
inc
lcall
dec
je
or
mov
jns
push
fcomps
jb
mov
icebp
lods
add
mov
push
sbb
cmp
mov
in
push
mov
dec
push
jae
and
push
arpl
ja
jl
mov
pop
fwait
into
adc
cmp
out
std
lret
jbe
fsubs
sbb
in
push
out
cmp
jns
sahf
js
shl
das
cli
repz
jecxz
test
cltd
test
mov
push
punpckhbw
int3
jp
xor
into
adc
dec
jae
mov
pop
cmc
jae
and
into
mov
adc
push
faddl
popa
push
popl
adc
or
ror
cmp
jmp
dec
mov
in
push
mov
and
dec
cmp
push
sbb
inc
imul
push
jecxz
pop
push
iret
insl
negl
cli
mov
and
shlb
dec
or
inc
xchg
ds
es
dec
and
lods
add
popa
fs
dec
cmp
push
or
jg
imul
mov
adc
xchg
sbb
loop
mov
push
out
xchg
and
xor
gs
sahf
push
push
je
dec
xor
xlat
sbb
rcrl
xchg
add
dec
mov
aas
outsl
sti
std
mov
cmp
mov
test
inc
lock
jno
imull
jg
xor
pushf
test
popa
mov
sarl
sar
adc
mov
rclb
sbb
xor
adc
test
or
xchg
shld
outsl
lods
mov
jb
mov
imul
aaa
sub
notb
hlt
or
stos
int
sahf
and
sbb
aaa
sbb
adc
fcmovb
das
add
cld
lcall
fstpt
xchg
jl
sub
je
bound
or
out
jne
popf
int
push
call
loop
lock
in
das
add
popf
je
ds
dec
and
jnp
sbb
or
fnstcw
xor
mov
cmp
bound
xor
mov
hlt
lock
sbb
fistpl
in
mov
push
add
lds
push
push
clc
call
js
pop
lcall
icebp
repnz
mov
outsb
cwtl
adc
icebp
xor
xchg
xor
es
test
cwtl
lods
ljmp
mov
inc
or
dec
pop
out
dec
mov
and
mov
mov
push
popf
fwait
fwait
mov
mov
in
les
stos
daa
jo
stos
daa
dec
in
sti
mov
inc
dec
cltd
out
cwtl
int
push
jecxz
loope
daa
dec
icebp
fisubrs
xlat
decb
dec
int
aas
in
push
int3
inc
mov
dec
push
xor
leave
sarl
or
jl
pop
fwait
aam
mov
js
push
xor
shrb
push
xchg
push
out
push
jle
mov
pop
push
insb
outsb
mov
sbbb
fdivl
push
test
scas
cmp
daa
arpl
push
mov
scas
addr16
pop
imul
imul
mov
sahf
jne
sub
pop
xchg
mov
je
and
dec
ds
xchg
fstp
jecxz
daa
dec
mov
pop
sbb
sub
enter
adc
negb
decl
aaa
das
decl
lret
xchg
shl
adc
enter
jl
dec
dec
push
mov
loope
mov
xor
push
and
shrl
push
lods
sub
in
setg
push
push
addr16
dec
sbb
icebp
leave
and
clc
lret
testl
xchg
insl
leave
outsb
orb
mov
jns
xchg
out
or
mov
orb
scas
mov
test
xchg
add
rcll
xchg
orb
outsb
roll
insl
daa
and
sahf
imul
mov
xor
inc
adcl
outsb
clc
je
aaa
fcoms
aaa
std
fs
dec
outsb
loope
mov
clc
iret
rorb
sbb
insb
bound
dec
fildll
and
test
cld
push
xor
add
adc
mov
cmp
add
add
jbe
push
sbb
hlt
iret
cmp
ljmp
insl
dec
add
and
mov
pop
and
mov
pop
sub
cli
insb
mov
mov
shlb
xchg
dec
push
adc
mov
inc
fs
mov
xlat
jae
sub
mov
xchg
clc
xlat
test
jle
dec
push
out
inc
pop
aam
lret
lahf
or
adcl
cwtl
shrl
data16
mov
xchg
sbb
cmc
xor
jge
repnz
inc
mov
int3
cwtl
jne
adc
jnp
mov
xchg
in
sub
fdivs
rorb
ds
cmpsl
aad
pop
sbb
jl
mov
lcall
pusha
les
out
and
dec
mov
iret
add
pop
and
pusha
and
je
rorl
repz
jl
add
not
mov
pop
cmp
mov
out
and
push
gs
push
jne
pop
or
push
les
mov
call
stos
aam
js
jecxz
movsl
lods
out
scas
inc
mov
mov
mov
bound
mov
or
cmp
jnp
and
adc
inc
xchg
arpl
pusha
js
and
inc
fsubrl
xlat
data16
xchg
xlat
lahf
xchg
enter
mov
imul
dec
stos
inc
push
ror
jp
leave
mov
jne
pop
mov
cmp
sbb
sar
popa
into
ljmp
xchg
popf
push
xchg
lock
ret
mov
ljmp
cmp
or
outsb
imul
out
mov
adc
adc
pop
xchg
nop
jb
sub
cltd
mov
inc
add
imul
push
in
pop
out
push
shl
inc
addr16
lods
and
inc
mov
jno
mov
scas
mov
fisttpl
je
cmpsb
jb
or
mov
dec
xchg
mov
lcall
out
and
inc
inc
mov
ret
pop
pop
xor
adc
xor
or
jmp
cmp
popa
test
pop
adc
test
or
jmp
mov
mov
mov
aaa
push
adc
imul
mov
aaa
adc
cli
xor
fsubrl
pop
insb
pushf
push
sub
add
out
out
inc
sbb
and
nop
pop
jecxz
push
cltd
pop
pop
pop
dec
push
sbb
cld
sarl
stos
cmpsb
push
pmullw
cmp
jmp
js
xchg
dec
xchg
out
sahf
pusha
ret
push
add
enter
add
fcoms
vmovdqa
mov
lea
fdivl
inc
repnz
pop
fnop
mov
repnz
xchg
shlb
cmp
cmp
push
outsl
dec
adc
scas
pushf
dec
or
js
pop
mov
inc
fcoms
xchg
or
mov
fsubrl
or
popa
sub
and
jns
ret
inc
and
enter
xchg
add
xor
fld
imul
cmp
lahf
jg
loop
jmp
sbb
rcrb
or
lods
into
pop
call
or
dec
inc
pop
imul
aam
loop
mov
cld
std
cs
subb
push
fldcw
push
mov
lahf
out
sub
fcoml
cmp
and
insl
mov
push
push
jg
lcall
lcall
mov
pop
dec
gs
repnz
jmp
adc
or
cmpsb
mov
cltd
sbb
pop
sar
add
mov
sarb
xchg
cld
push
adc
fldcw
xlat
into
jo
insb
mov
sbb
aad
inc
lds
sub
xchg
push
es
fldt
lahf
bound
xor
int
jle
test
mov
jo
pop
loope
jnp
mov
push
fisubs
jge
xor
and
jp
jns
testb
cwtl
and
xchg
popf
nop
popf
movsb
adc
clc
xchg
jp
sbb
lret
mov
loop
lcall
xor
push
shrb
pushf
push
clc
popf
test
lcall
xchg
insl
sahf
and
clc
and
xchg
jmp
fsubl
mov
lock
fs
fmuls
cmp
pop
sbbb
sbb
ss
xchg
push
pop
dec
out
repz
movups
mov
and
repnz
adc
push
mov
notl
mov
mov
inc
sub
ror
pop
pop
xor
dec
stos
addr16
mov
or
add
xchg
add
push
xor
add
push
cmpb
and
flds
xchg
sub
test
mov
mov
data16
adc
mov
int3
cmp
lods
xchg
loope
push
jnp
xchg
dec
mov
cmp
xor
fs
jle
and
test
fistpl
loopne
dec
xor
xor
rcll
cmp
insb
xor
pop
cmc
and
movsl
sbb
or
lds
loop
xchg
mov
sub
or
xchg
aam
or
mov
sbb
or
jns
and
mov
inc
stos
lds
add
adc
loope
push
lret
ret
imul
repnz
dec
fwait
or
jmp
mov
loope
outsl
push
push
ficompl
cwtl
push
mov
test
imul
mov
xor
ret
shll
pop
out
xchg
and
dec
arpl
fsubrl
cltd
dec
in
pop
xor
cmp
inc
filds
add
clc
mov
outsb
push
stos
sub
addl
lahf
int
repnz
sbb
sub
int3
das
pop
mov
push
negb
jmp
rorl
xchg
mov
jne
outsl
adc
push
add
dec
jmp
push
adc
push
jp
pop
or
insl
call
les
push
imul
xchg
and
in
xchg
in
jmp
xchg
inc
fistpll
test
pusha
out
xchg
cld
jbe
imul
outsl
orl
mov
xor
in
sbb
inc
sbb
push
scas
jno
sub
xchg
lock
xor
bound
outsl
arpl
pop
shl
xorb
mov
inc
dec
lock
xor
adc
or
movsb
sub
rcll
clc
adc
push
cltd
shlb
out
xor
aaa
adc
push
mov
xchg
jecxz
xchg
add
add
testl
ds
jo
lods
stos
stos
rolb
sub
inc
xor
push
addb
in
sbb
cmpsl
mov
fbstp
insl
stos
pop
xchg
push
bound
repnz
icebp
pop
popa
dec
sub
xor
mov
out
das
std
fists
inc
popa
cmpb
cmc
inc
int
push
cld
outsl
cs
fistl
sub
mov
inc
test
pop
rolb
xor
aam
test
loope
mov
cmp
repnz
sbb
cmp
or
insb
mov
xor
xor
push
roll
outsb
mov
lahf
daa
fildll
fwait
add
fsubs
adcb
and
clc
jno
pop
mov
test
pop
push
mov
cs
xchg
cmpb
cmp
jae
push
insl
push
lret
fdivrs
les
mov
fimull
les
in
insb
mov
add
pop
cld
je
and
cmp
out
popf
mov
push
and
xchg
sbb
jo
dec
shlb
push
pop
sub
xor
adc
jno
mov
test
add
or
mov
sbb
shrb
imulb
clc
mov
mov
lds
sti
dec
out
xchg
outsl
xchg
xchg
fldl
inc
xor
mov
xchg
testb
dec
pop
stos
and
pushf
dec
mov
push
in
jb
pop
adcl
sub
int3
dec
test
loopne
repnz
loope
lcall
out
mov
jno
push
push
stc
das
fisttps
pop
rcr
push
xorl
sub
icebp
inc
movsl
rorl
iret
lea
sbb
jnp
jne
add
hlt
mov
lcall
jmp
fidivrl
mov
mov
dec
pop
call
pop
inc
mov
inc
sub
mov
jb
out
mov
dec
or
fs
adc
dec
mov
adc
cli
out
sub
leave
push
pushf
sub
and
jp
xchg
cpuid
orl
sub
mov
push
dec
ja
xor
rclb
ljmp
mov
xchg
lret
and
ja
pop
repnz
fidivs
xor
jecxz
mov
fbld
push
outsl
inc
xchg
and
xchg
hlt
test
pop
call
scas
mov
in
jg
pop
mov
cli
repz
adc
push
add
cmp
xchg
mov
mov
push
mov
in
sub
addps
adc
scas
gs
mov
pop
add
mov
xor
sub
xor
fisubs
scas
jg
inc
out
out
subb
in
in
xor
mov
cli
sub
inc
lahf
sub
dec
jg
bound
shlb
movsl
inc
or
sbb
inc
test
adc
inc
or
pop
testl
adc
sub
leave
and
leave
sahf
xor
mov
sti
xchg
ret
mov
sbb
iret
inc
lods
push
jl,pt
fdivrs
jg
lret
mov
rorl
pop
call
mov
mov
jmp
cli
in
rcrb
pop
xchg
sarb
dec
shrb
orl
lahf
pop
push
adc
dec
aam
call
cmpsl
mov
add
mov
aad
aam
xchg
xorl
xor
mov
pop
adc
mov
push
mov
inc
mov
popf
out
push
stc
jl
or
lret
mov
jp
mov
movsb
into
dec
test
mov
mov
in
dec
mov
neg
or
add
jae
popf
xlat
test
dec
sbb
mov
jno
mov
ret
outsl
ret
jg
outsl
lods
es
sub
ja
mov
arpl
shll
aaa
jnp
sti
les
mov
xor
les
ljmp
bound
inc
push
dec
mov
sarl
mov
ds
test
mov
xlat
inc
sub
pop
pop
jnp
inc
push
mov
repz
push
mov
jmp
push
xor
add
addr16
addr16
xor
insb
sbb
pushf
pop
lahf
fcompl
in
std
shlb
ss
mov
hlt
push
jl
push
loopne
sub
inc
pop
movsb
push
fs
push
push
lea
xchg
in
aam
inc
and
les
mov
loop
inc
sarl
and
pop
pop
bound
loope
ret
mov
cmp
mov
push
mov
xchg
in
mov
stc
jmp
dec
mov
and
adc
test
sbb
and
iret
jbe
cmpsb
sahf
pop
push
and
jp
inc
push
push
shl
arpl
or
test
jmp
iret
es
icebp
push
cmp
rorb
bnd
jecxz
out
std
nop
xchg
xchg
ffree
lods
test
fst
sub
fsubrl
pop
mov
inc
insl
ds
das
cmp
inc
loopne
mov
gs
arpl
xor
loop
jne
into
out
add
clc
bound
sub
std
addl
inc
jecxz
test
cmp
cli
test
inc
popa
call
inc
sbb
outsb
sahf
out
xchg
nop
popf
pop
adcb
and
mov
mov
popf
outsl
adc
jmp
shl
es
push
jle
orl
into
out
xchg
int
mov
cmp
jb
mov
and
jge
or
fst
inc
xchg
fildl
cs
adc
bound
mov
jb
insb
popf
jbe
stos
cmp
jae
pop
notl
mov
imul
push
jg
mov
fs
adc
mov
loop
pop
cmp
pop
mov
repz
int
imul
xchg
jecxz
mov
mov
jns
stos
je
insl
push
or
jge
in
mov
dec
sub
or
or
mov
jl
add
jns
fmull
pop
sub
test
pop
insb
cmp
testb
pop
xorb
add
dec
and
jl
jge
xor
in
inc
jp
fisttps
sub
sbb
jnp
mov
push
popa
loopne
das
arpl
push
and
dec
fiadds
cmp
ds
sarl
popf
jp
lea
inc
lahf
cmpsb
add
xor
jg
mov
out
jbe
jg
and
in
mov
cli
xlat
dec
pop
arpl
cwtl
sub
incb
movsl
repz
iret
adc
cmc
clc
insl
lret
jecxz
xchg
xor
cmp
into
lods
std
movsl
jb
fstpl
and
fdivrp
mov
shll
loopne
xchg
push
out
and
mov
rorb
cmpsb
das
incb
and
and
int
sahf
div
shl
lds
frstor
mov
test
popf
insb
ret
lahf
in
das
shll
cld
fsub
data16
sub
fs
inc
lret
testb
leave
pop
lea
loop
or
jle
popf
pop
test
mov
push
mov
mov
hlt
scas
mov
xor
outsl
and
js
push
add
cmp
inc
imull
adc
addl
fs
jbe
test
inc
das
leave
pop
repnz
mov
sbb
sbb
imul
into
ljmp
or
xor
out
stc
inc
out
xchg
lods
test
jmp
push
sbb
pusha
ss
mov
dec
lock
out
cmp
enter
pop
call
jns
fists
push
jno
sarl
xor
adc
cmp
or
dec
cli
jbe
xchg
inc
jne
lods
pushl
mov
mov
or
jmp
mov
inc
mov
les
mov
cmc
sub
test
pop
xchg
jg
and
mov
fisubrs
sar
mov
outsl
stos
cmpl
and
inc
jno
pop
inc
insb
pusha
out
cmp
and
mov
insl
and
mov
dec
cli
or
xor
cli
test
incl
or
cs
xor
movsb
xor
add
push
inc
dec
pop
incl
mov
or
cld
pop
mov
pop
movsl
aas
test
ret
dec
dec
pop
movsb
xchg
sub
pop
cs
out
iret
xor
mov
pop
cltd
jmp
mov
iret
popf
jns
incb
pop
sub
pusha
push
add
hlt
fdivrs
sbb
and
push
sub
mov
pop
add
je
shll
insl
xorb
xor
aas
add
xor
push
push
jno
jg
adc
fcompl
imul
jnp
push
push
and
fwait
clc
les
ja
cmp
scas
dec
cs
out
sahf
fs
pop
sub
add
jle
ds
mov
cmp
mov
mov
bound
enter
lea
push
push
outsl
out
test
adcl
push
stos
and
add
xchg
add
das
lods
ljmp
fisubl
push
loope
or
les
push
mov
sub
pop
and
push
in
lret
sarl
xchg
orb
pusha
inc
or
mov
jns
in
jne
cmp
dec
pop
stos
call
loop
xor
jo
push
aad
std
push
decb
je
push
xlat
add
gs
js
jecxz
mov
in
mov
xchg
fstl
scas
addb
inc
sub
adc
lret
xchg
rol
xor
decl
dec
pop
jmp
cltd
dec
cmc
sub
mov
jecxz
outsb
bound
sbb
adc
sub
mov
scas
movsl
daa
xchg
ja
sbb
jnp
add
mov
mov
data16
test
sub
jbe
xchg
mov
shll
scas
popa
out
xchg
and
xchg
or
cli
outsl
inc
insl
das
cmp
jb
aam
cmpsl
push
and
pop
or
xchg
aad
dec
mov
add
pop
xor
popf
jns
mov
punpcklbw
adc
popa
or
xchg
push
push
push
mov
mov
mov
jmp
jg
add
ja
xor
loop
xor
mov
xchg
xchg
xchg
xlat
lcall
dec
jg
cmc
xchg
sub
mov
fwait
hlt
mov
jmp
lock
test
gs
xchg
cmp
fs
xchg
stos
sub
cltd
and
push
jb
xor
movsl
pop
dec
sub
cmp
loopne
lret
aas
dec
and
inc
jmp
fidivrs
inc
lea
lret
xchg
jmp
into
sub
mov
sarl
fs
sub
stos
sub
out
lret
data16
or
mov
movsl
inc
addr16
call
xchg
xchg
pusha
pop
mov
rclb
xchg
mov
rclb
lods
push
mov
pushf
xchg
cmp
mov
mov
or
cwtl
push
les
les
mov
xlat
mov
jmp
jle
call
push
sbb
mov
adc
sbb
sub
and
daa
push
jmp
je
fnsave
add
cmpsl
rorl
inc
aaa
and
scas
cmp
mov
sbb
call
xchg
and
or
jl
mov
jg
into
xchg
rcrb
inc
mov
sbb
es
aad
cltd
add
adc
mov
mov
and
cmp
inc
into
and
and
sub
jg
jae
sub
leave
lcall
test
mov
inc
pop
mov
shll
xchg
fistps
aaa
inc
insl
mov
sub
add
add
mov
push
pop
daa
mov
and
cmc
and
imulb
adc
cli
dec
sub
dec
cmc
mov
dec
filds
shll
popf
cld
or
pusha
aad
lea
gs
movsl
lret
outsb
xchg
into
fstl
sbb
lods
aas
ljmp
leave
jb
lret
pop
xorb
sbb
sub
gs
xchg
and
rcrl
icebp
xor
lret
adc
iret
push
jb
loop
or
cmc
push
fs
xchg
popa
inc
and
inc
int
xor
dec
cmp
adc
test
cld
fidivs
sar
test
sbb
xchg
movsb
loopne
stc
pop
mov
loope
dec
lods
add
fwait
movsl
mov
push
imul
fdiv
lahf
cltd
push
or
bswap
inc
lea
std
fimuls
repz
pop
call
xor
mov
adc
mov
sbb
fisubs
and
cmp
daa
inc
into
stos
lods
icebp
lods
jg
dec
ret
jge
xor
sub
xor
sbb
mov
cmp
inc
ret
lcall
cmp
mov
mov
cmc
and
xchg
in
fs
cmpsl
iret
lcall
mov
outsl
sub
loope
sahf
stos
and
inc
jp
daa
outsb
xor
lret
andl
pushl
inc
and
in
stos
je
ja
cmpsl
loop
rol
mov
psubq
mov
sahf
add
fnsave
or
fld1
adc
aaa
pop
stc
dec
sarb
cmpsl
add
jbe
and
mov
sbb
and
push
ret
push
cmp
test
jmp
stc
in
sub
or
test
cld
imul
ss
call
je
out
jnp
sub
shll
adc
inc
pusha
cmpsb
or
add
mov
xchg
loope
fsubrl
add
cmp
loope
sbb
inc
notb
or
iret
mov
stos
pushf
js
and
fwait
and
daa
add
inc
shr
jb
cmc
sbb
xor
push
imulb
cmp
or
mov
cltd
ret
xor
shl
cmp
adcb
test
rclb
ret
push
jnp
ss
outsb
inc
insl
rorb
sti
inc
sbb
fcmovu
mov
mov
lods
add
lods
test
cmpsb
stos
or
jg
repnz
jb
divl
xchg
pop
mov
int3
mov
pop
sbb
sti
or
iret
sub
nop
sub
xchg
mov
pop
sub
je
inc
dec
push
fmulp
stos
mov
cmc
xor
jbe
clc
xor
sbb
cltd
loop
jmp
insb
inc
push
aad
clc
push
mov
scas
or
aad
icebp
mov
add
daa
test
ss
push
sub
dec
mov
jmp
sbb
out
ret
xchg
mov
hlt
aam
stos
cli
mov
add
sbb
and
mov
inc
les
adc
loop
ljmp
jne
enter
int
roll
fucomi
sbb
ficoms
aam
repnz
or
push
fs
sub
loopne
mov
push
cmp
ljmp
scas
jbe
xor
loopne
into
int3
ja
sub
xchg
es
dec
stos
xchg
fisubl
in
adc
dec
xlat
hlt
addb
cltd
movsl
loop
sub
push
rolb
cs
test
es
lods
lods
aad
les
lock
jno
popf
in
sbb
shll
inc
test
and
sbb
jg
js
fmuls
nop
aaa
sbb
cmc
daa
mov
cltd
mov
test
arpl
test
mov
out
xchg
enter
jns
mov
popa
cmp
jno
bound
cmp
mov
mov
fisubs
popa
orb
and
and
or
xchg
shll
rcll
addr16
pop
js
mov
mov
and
mov
ds
ret
or
das
fld
outsb
pushf
stos
cmp
mov
xchg
hlt
and
icebp
pop
cmp
inc
sbb
mov
sbb
call
push
jb
js
iret
addr16
sub
sbb
dec
sub
sbb
insb
push
and
loop
roll
xor
insb
lds
xor
fstps
es
nop
dec
mov
sub
xor
xchg
fucomi
fwait
out
lock
pop
mov
sub
mov
push
pop
lret
test
sahf
push
cli
xlat
xchg
cli
xor
inc
adc
cwtl
mov
sbb
sbb
in
sub
cmp
outsl
scas
inc
or
add
ds
jmp
inc
sub
std
popa
mov
pop
jmp
mov
stos
xchg
push
xchg
push
push
adc
adc
andb
cltd
inc
mov
push
push
fs
push
jb
pop
mov
or
dec
faddl
sbb
pop
jb
cmp
xor
dec
nop
rorb
fstps
cmp
mov
add
push
shlb
orl
ljmp
mov
inc
outsb
stos
cmp
cli
shrb
icebp
aaa
sub
stc
and
in
lock
enter
xor
int3
lods
jg
insl
movsb
data16
jg
cmp
outsb
or
addr16
shlb
test
fstl
push
ret
fcmovnb
jg
add
outsb
add
inc
xchg
les
sub
mov
jmp
mov
dec
sub
mov
dec
mov
aam
fwait
lea
rclb
stos
loope
jle
mov
push
outsb
popa
scas
in
dec
sbb
xor
loope
adc
ljmp
in
sub
cwtl
test
mov
leave
les
pushf
dec
xor
insb
push
add
aas
push
call
aaa
push
sub
pop
jae
xor
cmpsb
rolb
imul
fxch
sbb
push
xchg
sbb
mov
aad
mov
cmpsl
fwait
movsb
rcl
xor
jno
shll
mov
test
lods
push
mov
mov
push
sbb
sub
cmpsb
adc
in
inc
lret
andl
arpl
and
xchg
pop
lret
insb
pop
push
inc
xchg
add
sbb
mov
gs
push
out
jne
repz
stos
lcall
in
sbbb
out
out
out
adc
fs
xchg
sub
dec
pop
mulb
fldl
pop
mov
popf
sbb
out
inc
sub
pop
push
das
sbb
cmp
ss
push
gs
lfs
adc
stos
pop
mov
gs
lods
gs
in
xchg
pop
in
lret
mov
cmp
mov
adcb
into
adc
mov
test
add
adc
pop
push
cld
push
movsl
xor
push
and
pop
cld
js
fs
jmp
cwtl
mov
jge
and
aad
out
mov
lret
or
fiadds
shl
aaa
roll
fdivr
stc
xchg
addr16
push
cmp
aam
pop
je
hlt
adc
mov
fwait
mov
cmp
aam
jmp
push
or
fbld
dec
jae
adc
add
add
sbb
vmovaps
cwtl
xchg
and
je
fidivrl
in
push
lea
cmp
cmpsb
sub
pop
loope
xchg
into
xor
repnz
mov
push
pop
ret
test
sarl
in
loope
mov
mov
aaa
mov
lret
dec
scas
into
mov
pop
int3
ret
mov
outsb
aaa
jge
jl
in
sub
pop
inc
pop
jg
jne
mov
adc
sub
outsl
mov
lret
imul
ja
movsl
mov
jp
sub
jmp
aaa
out
ja
dec
fists
mov
arpl
sbb
cs
sbb
sub
mov
push
inc
ror
clc
or
imul
xchg
add
mov
orb
dec
test
push
xchg
sti
mov
cmp
stc
pop
jne
faddl
adc
nop
lcall
mov
mov
jmp
pop
mov
addb
push
add
sbb
data16
sub
push
in
pop
and
bound
push
sub
sub
lea
cmpsl
xor
jne
jle
loop
jns
out
or
pop
push
js
hlt
sbbb
lret
dec
nop
mov
dec
jg
adc
mov
mov
mov
je
into
push
pop
fbld
mov
cmp
add
push
pop
lahf
cmp
scas
xor
adc
push
push
es
add
push
shll
loopne
sti
xchg
or
mov
imul
adc
out
mov
in
xor
sti
imul
add
cmp
std
iret
push
mov
adc
adc
mov
faddp
out
cmp
insl
and
enter
xor
xchg
sbb
jns
movsb
and
add
inc
rclb
repz
decb
int
in
out
xor
pop
jo
pop
clc
int
add
xchg
mov
dec
out
lret
dec
cltd
loope
inc
cld
rorb
fsubl
sbb
push
dec
jg
std
inc
mov
cmp
pop
xlat
scas
sub
mov
dec
mov
in
out
jl
pop
lods
lahf
cmpsb
xchg
sub
test
lret
mov
inc
push
add
jns
and
popf
adc
lret
add
loop
cmpl
pushf
and
sub
outsb
xchg
xor
stos
add
stos
push
ja
xorl
bound
pop
push
lret
sub
fisubrs
sub
js
add
jle
aam
inc
inc
fbstp
ja
sbb
sub
lea
xchg
mov
cmp
sbb
mov
addr16
or
test
and
mov
add
test
and
add
xor
insb
pop
aad
dec
jns
xchg
fs
std
mov
xchg
sub
sbb
ret
es
mov
incb
and
scas
lcall
jae
jae
or
icebp
fwait
jmp
add
aam
push
mov
mov
or
out
lods
mov
cmpsb
ss
push
fdivr
cwtl
mov
lret
ficompl
popa
je
repz
push
rclb
test
andb
jmp
fs
pop
pop
jnp
sub
arpl
add
mov
je
in
push
fsubrs
int
push
scas
xchg
pop
push
pop
in
mov
dec
mov
lcall
out
adc
mov
mov
dec
lret
xor
mov
cmp
nop
call
or
es
div
adcb
or
test
adc
dec
xor
jb
je
sub
sub
jns
pop
movsl
loop
or
mov
mov
js
jle
ss
pop
push
or
subb
mov
inc
addb
lods
ss
in
jecxz
into
jmp
movsl
jmp
or
push
pop
not
repnz
xor
push
jb
dec
in
lock
mov
inc
cmp
mov
cmp
sub
adc
adc
push
pop
and
in
xor
out
pop
in
ss
les
dec
enter
popf
es
rcr
or
std
int
jns
imul
jb
xchg
and
cmp
jo
jnp
sub
sub
iret
cli
fisubrs
das
push
pop
scas
clc
iret
sbb
lret
loope
xor
dec
out
aaa
jno
in
test
pop
inc
call
test
jo
xor
sahf
jbe
out
mov
cmp
rorl
push
popf
cmp
out
fldl2e
mov
pop
in
pusha
mov
xor
pop
aas
sbb
mov
outsl
inc
add
dec
fs
add
sub
loopne
dec
sti
mov
sub
incb
lea
mov
stos
xchg
lahf
sbb
js
shl
js
pop
imul
push
ss
pop
mov
and
lock
xchg
or
mov
xsha256
cmpsb
push
fdivrl
mov
shll
xorl
xor
ja
pop
loope
mov
jle
mov
in
or
pop
mov
push
and
adc
xchg
fnstenv
sbb
divb
or
gs
push
cmpsl
inc
psubsw
repnz
push
ja
ret
test
in
xor
and
js
imul
sbb
push
lods
sti
and
icebp
or
adc
xor
pop
push
test
repnz
push
inc
fdiv
bound
mov
sar
das
mov
mov
aas
orb
loop
addb
sbb
fwait
pop
mov
shll
xchg
shlb
mov
in
xchg
rcr
test
scas
or
jbe
xor
or
test
jo
mov
jg
sbb
fcmovbe
adc
outsb
outsl
sbb
imul
iret
sti
dec
in
or
jecxz
dec
ds
mov
sbbl
mov
insl
dec
sub
mov
out
lret
mov
xor
stos
fwait
test
cmp
push
shr
addr16
cmpl
jg
push
xchg
loope
xor
jbe
push
mov
jno
jae
test
adc
pop
notb
andl
insl
insl
subb
stos
call
movsl
test
outsl
ficompl
mov
arpl
data16
sbb
adc
xor
jp
lret
sub
sub
mov
sbb
sbb
and
sub
lahf
mull
enter
cmp
mov
and
clc
pop
jmp
stc
shrb
sub
loope
add
pop
inc
fdivs
aaa
or
ljmp
aam
ss
xchg
dec
or
clc
js
mov
mov
cmp
daa
scas
mov
xor
pusha
mov
rcr
inc
push
fsubrl
fcoml
push
in
in
lds
repnz
pop
jp
dec
mov
sub
dec
push
arpl
cmp
cmp
std
push
adc
mov
test
jge
out
mov
mov
xchg
movsl
mov
test
mov
addl
aas
ja
mov
xchg
enter
iret
lock
sti
add
cmpsb
lods
jne
cli
pop
jb
loop
mov
cmp
movsl
shlb
pop
mov
lret
test
filds
dec
dec
out
psrlq
and
nop
cld
jp
cmc
push
inc
test
scas
cs
xorb
push
sbb
lret
insb
adc
test
adc
push
lret
xlat
cltd
in
imul
jge
dec
add
sbb
push
or
lret
lcall
stc
test
dec
jbe
iret
xchg
adc
dec
gs
scas
test
lods
xor
ljmp
outsl
test
dec
lret
mov
and
sti
cltd
adc
dec
pop
cltd
lods
sbb
fbld
dec
mov
cmp
xor
addr16
daa
xor
stos
jg
imul
sbb
lods
aas
mov
cwtl
jae
xchg
push
in
inc
jne
mov
mov
push
or
cmc
out
icebp
push
outsl
xchg
jbe
cmp
mov
and
xor
pop
lods
or
fbld
mov
inc
dec
aad
ficoml
lock
sahf
scas
and
ljmp
jns
mov
mov
pop
arpl
dec
ret
sbb
loope
lds
js
sti
jecxz
inc
in
cmc
mov
xchg
add
hlt
xchg
inc
mov
inc
rcrb
rorl
ret
sbb
push
jo
xchg
and
cmpsb
and
sbb
ret
cli
sub
mov
xor
push
mov
mov
push
inc
fadd
and
xchg
jo
es
js
lcall
ficomps
jle
movb
add
jns
xchg
or
cmp
aad
xchg
mov
adcl
sub
pop
loopne
sub
sub
pop
dec
jle
xchg
enter
leave
push
hlt
es
sbb
mov
add
mov
in
mov
push
jns
movsb
push
xchg
out
sbb
mov
or
loope
cmp
add
mov
out
mov
pop
out
pusha
pop
daa
dec
insb
mov
xor
test
lock
adcl
sbb
cltd
add
xor
in
push
shrl
push
sub
nop
or
add
xlat
jp
adc
jmp
xor
popl
inc
jbe
pop
and
or
lods
pop
dec
nop
test
mov
dec
les
pop
in
jae
out
xorl
sub
pop
mov
call
movsl
dec
fdivr
cmp
lret
out
sbb
repnz
push
xchg
cmc
cmp
loope
repz
push
rclb
insb
pop
testb
xchg
jne
and
dec
and
inc
imul
movsb
jno
push
leave
sub
mov
imul
jno
out
stos
xchg
call
mov
loop
add
mov
mov
insb
add
jbe
inc
add
out
sbb
push
pop
aas
xor
cmpsb
cmc
xchg
inc
rorl
pop
in
lcall
ffreep
jae
lahf
daa
mov
loop
xchg
int3
mov
fsubl
pop
rcl
jp
inc
xchg
push
test
push
jp
stos
jecxz
dec
or
and
arpl
mov
mov
xor
xor
aaa
testb
sbbb
inc
je
loopne
icebp
call
cmp
add
adc
push
inc
dec
xor
and
cld
push
cmc
pop
push
adc
xchg
stos
test
inc
int3
clc
mov
aad
push
loopne
push
daa
jns
andl
shlb
repnz
cmpb
stc
jecxz
xor
andl
pop
fcoml
mov
lock
out
arpl
ja
add
mov
call
cmpsb
ret
pusha
inc
xchg
cmp
ret
outsb
filds
adc
ds
outsb
cmp
sub
nop
jo
mov
out
inc
and
es
das
add
mov
cmc
or
or
inc
aam
lock
and
fadds
test
push
mov
jge
icebp
test
test
pop
jmp
jb
xchg
or
je
gs
lahf
shll
lock
je
push
xor
sbb
sarl
enter
lea
adc
adc
mov
jg
fidivrs
ss
test
mov
cwtl
into
jl
in
aad
fwait
iret
repz
cmp
vcvttps2dq
jmp
jge
and
fisttps
out
mov
jmp
add
cli
pop
mov
in
sub
push
jns
or
pop
push
push
mov
xchg
push
enter
fiadds
cmpsb
sbb
fnstcw
jo
mov
mov
push
hlt
cmp
lock
sub
insl
ljmp
test
stc
fldcw
incb
fwait
jmp
adc
xor
push
insl
std
and
andl
das
hlt
mov
ror
xor
pop
pop
inc
incl
daa
and
pop
hlt
js
push
mov
jl
jae
outsl
jg
pop
inc
fxch
pop
adc
sub
xchg
divl
jle
enter
roll
cmp
fdivrs
jne
mov
popa
test
or
pop
sahf
cmp
adc
pop
sub
or
jne
xchg
jle
pavgw
and
push
add
ret
fdivs
jle
dec
xchg
adc
xchg
adc
mov
pusha
aam
push
movsb
dec
vmwrite
jl
xchg
cmpsb
dec
in
mov
test
jo
sub
in
test
adc
add
data16
popf
mul
cmpsl
jno
lret
push
popf
lods
fmuls
jns
sarb
das
std
test
inc
rolb
sub
test
cli
imul
fwait
add
ljmp
rcr
addr16
sahf
mov
sub
sub
mov
xchg
xor
xchg
xor
mov
insb
mov
pop
fsubl
pop
daa
insl
mov
fcoms
out
push
sub
jae
daa
jne
je
je
xor
cmp
mov
push
or
imulb
pop
push
out
adc
cwtl
inc
sub
jb
jno
mov
and
sub
xor
jnp
or
xor
out
push
pushf
mov
jl
mov
sub
cmp
cmp
mov
and
cmp
fwait
sub
push
mov
mov
arpl
int
bound
mov
faddp
stos
push
shlb
in
inc
mov
push
mov
jl
jb
rcrl
ds
xchg
stos
xor
out
lock
mov
jbe
adc
or
sbb
std
xor
sub
fwait
push
aaa
jmp
inc
sub
movsb
inc
int3
push
jmp
loope
and
cld
and
test
mov
sub
mov
sbb
push
in
movsb
lea
mov
xchg
mov
pop
xchg
loopne
repnz
push
or
es
cltd
pushf
or
push
daa
push
imul
movsb
sub
popa
inc
bound
inc
pop
sub
mov
das
add
add
xlat
mulb
into
jns
loopne
loopne
mov
outsl
mov
mov
out
mov
fstpl
loope
pushl
sub
xlat
xchg
sub
stos
arpl
jne
add
test
ljmp
cmp
xor
dec
inc
dec
xchg
xchg
sbb
fcomps
mov
dec
xchg
jmp
repnz
push
adc
push
pop
sbb
push
mov
mov
loope
mov
add
xchg
inc
pusha
popa
mov
leave
sti
cmc
mov
fidivrl
lods
out
rcrl
xchg
fnstsw
xchg
stc
jb
sbb
mov
ja
imul
mul
into
adc
dec
fmull
push
ss
mov
sbb
icebp
cmp
cmc
jle
push
jae
ljmp
pop
inc
sahf
ljmp
sub
xor
outsl
roll
dec
lods
sahf
inc
and
xor
int
arpl
and
mov
movb
jns
les
adc
fcmovne
xchg
pushf
cmp
inc
xchg
imul
daa
in
shll
inc
fnstsw
or
pop
xor
xor
or
aas
inc
push
idivb
gs
add
pop
out
xor
xor
pop
sub
lcall
sbb
pushf
adc
jecxz
rcll
sbb
mov
iret
dec
jbe
clc
ljmp
cmp
xchg
mov
nop
sub
or
dec
mov
jmp
stc
pop
std
mov
jmp
cmp
insb
sub
push
sub
adc
push
scas
mov
cmpsb
inc
int
int3
pusha
add
xor
mov
mov
jnp
mov
out
pop
adc
xchg
sbb
popa
add
cmpb
pop
sbb
mov
std
jle
push
push
dec
push
movl
xchg
dec
loope
fs
pop
adc
jge
sub
jle
push
aad
push
xor
in
xor
test
push
fstpt
incb
sbb
shrl
push
fwait
stos
test
mov
add
mov
inc
xor
jmp
cs
dec
fnstcw
inc
xchg
cmp
call
sbb
hlt
mov
lock
push
idivl
jo
push
sarl
xor
scas
mov
or
jecxz
test
push
pop
dec
fwait
xchg
push
mov
cmp
mov
pop
sub
in
dec
nop
shll
pop
insb
in
or
xchg
pushf
jo
mov
shll
cwtl
push
cwtl
ret
dec
inc
jnp
dec
pop
xor
or
jge
outsb
mov
push
loop
out
mov
xor
dec
adcl
pop
fists
jns
jp
fcompl
es
jp
test
push
cltd
mov
cmc
or
add
or
ret
pusha
insb
imul
test
fdivrl
mov
out
sub
pop
mov
jns
fisttpl
push
gs
xorb
enter
inc
jecxz
aas
stos
xchg
andb
rclb
les
or
leave
cwtl
xor
cmp
jbe
loop
cmpsb
and
push
adc
inc
mov
push
adc
pop
dec
jmp
inc
das
out
and
test
or
out
shlb
out
cltd
inc
cmpsb
imul
addr16
inc
mov
sti
push
dec
mov
lret
mov
mov
or
nop
xor
xchg
mov
pop
jnp
nop
iret
popf
int3
cwtl
or
and
icebp
sbb
enter
jg
cli
mov
leave
adc
int
outsb
cmp
xor
out
std
insb
sub
add
adc
mov
hlt
dec
mov
push
mov
adc
mov
in
push
mov
cltd
fxam
jno
je
sbb
test
xchg
push
mov
mov
inc
sbb
in
mov
shll
out
cs
pushf
lds
jl
fwait
xchg
or
xchg
add
jmp
insl
dec
in
ljmp
adc
leave
ret
ja
mov
call
jl
or
push
icebp
or
flds
outsb
push
jmp
lods
xor
dec
mov
pop
ds
stc
cmpsb
jecxz
lock
ret
inc
fucom
cmp
test
enter
mov
push
xchg
pop
jl
push
adc
or
or
jnp
inc
out
adc
add
jbe
add
insb
and
sbb
arpl
out
scas
adc
sbb
fstps
jge
and
mov
adc
sub
fidivrl
push
cmp
sbb
idivl
mov
xor
inc
fsubrs
call
divb
call
dec
sbb
fdivrp
xor
push
dec
push
inc
hlt
jnp
push
sahf
loopne
fs
scas
xor
inc
fsubrp
into
stos
xor
xor
cmp
add
fistps
jo
mov
push
movsb
jp
adc
xchg
xorl
loope
jne
imul
cmp
push
cltd
and
sbb
cwtl
scas
aad
mov
roll
mov
mov
ret
mov
ja
mov
sarl
inc
cmp
cld
cmpb
loopne
jb
xor
sbb
test
nop
scas
pop
fsubs
mov
pop
in
sub
dec
clc
fsubrl
ret
xor
int
lds
push
xchg
add
popl
mov
pop
and
push
fisttpll
popf
fucom
psllq
mov
xchg
add
add
adc
push
sbb
mov
loope
cmpl
sbb
mov
sub
movsl
movsl
ss
shlb
aaa
out
sbb
mov
int
and
hlt
shl
mov
adc
mov
xchg
shlw
sti
bswap
stos
dec
xchg
incb
cs
outsb
sbb
xchg
mov
outsb
mov
fnstsw
inc
mov
xor
push
int
and
shl
stos
in
inc
outsl
cmc
xchg
mov
xor
nop
lods
shrl
sbb
add
inc
mov
jbe
xor
rcll
cwtl
ficomps
push
cmp
mov
fwait
ja
mov
es
and
lcall
cmp
sbb
lock
out
jge
inc
dec
in
lret
movsl
repnz
fisubl
test
add
fsubrl
roll
test
jmp
xchg
mov
dec
mov
loopne
adc
jns
std
aaa
pop
adcb
mov
jo
mov
mov
int3
xchg
pop
add
call
addr16
adc
lods
jae
add
xchg
shr
mov
sub
das
loopne
jmp
leave
mov
jle
mov
jns
xchg
lcall
dec
jnp
lcall
ret
outsl
adc
adc
adc
fwait
push
jp
and
xor
add
add
xorl
data16
add
sbb
aad
jb
ficomps
sbb
scas
cld
test
adc
and
adc
add
jmp
mov
ret
sub
dec
sub
dec
mov
sbb
push
into
xor
or
add
xchg
das
outsb
scas
xchg
fdivrl
and
pop
jecxz
push
nop
ret
add
xchg
mov
aad
repz
xchg
stc
jo
push
fs
imulb
les
pop
pop
outsl
adc
pusha
pop
iret
adc
insb
cmp
cltd
add
inc
sub
sub
lods
andl
cmp
jo
jns
mov
push
mov
push
loop
rol
add
inc
mov
in
js
push
js
xor
inc
movsl
mov
mov
dec
jg
fcompl
ror
rcl
mov
sub
aad
push
fwait
pop
add
out
ss
add
jno
jp
xchg
dec
outsl
or
mov
lcall
test
pop
mov
push
or
dec
jbe
mov
sbb
pop
push
mov
cli
bound
jp
xor
inc
inc
jmp
dec
mov
xor
cmc
scas
xlat
or
repz
adc
fdivl
out
fistps
cmpsl
mov
shl
in
or
jecxz
and
lods
stos
enter
lahf
leave
into
xchg
add
fsubs
lea
sbb
mov
je
cltd
pop
xorb
and
sbb
dec
sub
xor
mov
test
ja
lods
pop
incb
mov
fcmovnb
lcall
adc
adc
and
pushf
in
xlat
aaa
cmc
push
les
add
test
lahf
test
cmc
dec
jne
mov
xchg
and
btr
sbb
and
xchg
cs
pop
adc
ret
mov
jl
sahf
cmc
psubb
inc
xchg
sbb
mov
jecxz
dec
sti
lds
pop
pop
pop
mov
mov
movsl
mov
aaa
mov
inc
pop
mov
addl
mov
and
out
cmp
pop
mov
add
xchg
std
je
idivb
clc
mov
loopne
clc
shr
jmp
or
adc
pop
lahf
mov
test
inc
test
jl
gs
dec
sarl
sbb
mov
dec
mov
push
shr
pop
add
push
mov
fidivs
pop
xor
xchg
cmp
inc
cmc
fadd
jnp
or
shll
sti
pop
inc
sbb
xor
iret
pop
pop
ucomiss
mov
jns
mov
jbe
roll
mov
pusha
or
cli
add
xor
sbb
push
fsubl
add
mov
inc
mov
sbb
push
pop
mov
push
out
addr16
jbe
mov
push
stos
out
add
mov
xor
and
shl
mov
inc
mov
test
dec
adc
mov
xor
ljmp
repnz
gs
cli
push
inc
xchg
sar
mov
aaa
mov
push
mov
dec
call
data16
cmp
add
shl
insb
cmp
cld
imul
enter
xor
loope
jl
cwtl
fprem
test
jle
cmp
test
sahf
push
dec
cmpb
xchg
daa
lods
cmc
sub
test
aaa
addr16
arpl
stos
minps
cld
mov
stc
cli
data16
jb
cmc
push
jb
in
and
mov
lret
xchg
xlat
pop
pop
sarl
inc
or
push
xor
mov
sbb
inc
scas
add
ja
push
sub
cmp
jno
mov
negb
ds
adc
hlt
sbb
rcrb
and
sbb
lock
dec
roll
enter
xor
jmp
push
push
jo
lods
je
mov
negl
mov
push
sbb
sbb
mov
jl
cltd
sub
adc
jnp
inc
jp
loopw
cmpsb
out
add
movsl
ret
inc
shll
xchg
cmova
out
lcall
inc
push
xchg
je
xor
sub
adc
xor
mov
test
mov
pushf
push
insb
cltd
out
mov
fldl
enter
inc
daa
scas
imull
xchg
shl
mov
test
test
inc
push
sahf
lods
out
push
mov
pop
jle
ljmp
dec
mov
inc
fbld
stos
inc
jnp
or
clc
xchg
leave
scas
push
sbb
push
iret
cli
add
test
or
sub
mov
stos
fidivrs
jmp
or
daa
xchg
aad
add
idivl
decl
in
je
sub
push
fimuls
ds
cmp
iret
or
pop
dec
adc
sti
xchg
pop
push
cs
ret
or
inc
push
or
and
or
ret
jo
push
add
cmp
arpl
add
mov
sbb
push
cmp
push
mov
or
insl
dec
push
inc
push
inc
mov
arpl
ss
sub
cli
mov
add
add
add
add
xor
add
jo
add
mov
add
lock
addb
add
add
add
add
add
add
add
add
pusha
add
add
add
call
add
add
add
add
add
add
add
mov
loope
add
add
add
add
enter
add
add
add
add
loopne
add
lock
add
bound
add
data16
add
add
addb
add
add
add
and
add
fsubr
or
adc
add
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
and
add
add
andb
add
and
add
inc
add
inc
inc
add
addb
incl
add
pusha
add
inc
pusha
add
andb
jmp
add
addb
inc
addb
addb
add
mov
add
andb
add
rolb
inc
rolb
add
add
rolb
add
add
inc
incl
add
incl
add
add
add
and
addb
add
add
add
and
add
and
andb
add
and
add
inc
and
inc
inc
and
addb
incl
add
pusha
and
inc
pusha
and
andb
jmp
add
andb
inc
andb
addb
add
mov
and
andb
add
shlb
inc
shlb
add
add
shlb
add
and
inc
jmp
add
jmp
add
add
inc
add
addb
add
add
add
inc
add
inc
add
and
add
add
inc
add
inc
inc
add
pusha
inc
add
inc
add
pusha
inc
add
addb
addb
addb
addb
mov
inc
add
mov
inc
add
inc
add
rolb
incl
inc
incl
cmp
add
incl
add
pusha
add
pusha
add
add
add
pusha
add
pusha
add
and
add
add
pusha
add
inc
pusha
add
pusha
pusha
add
pusha
add
pusha
pusha
add
andb
andb
andb
andb
mov
pusha
add
mov
pusha
add
pusha
add
shlb
jmp
inc
jmp
cmp
add
jmp
add
addb
add
add
add
add
addb
and
add
inc
addb
inc
addb
inc
addb
inc
addb
pusha
addb
pusha
addb
pusha
addb
pusha
addb
addb
addb
add
mov
addb
mov
addb
rolb
add
add
rolb
inc
incl
add
incl
add
mov
add
add
add
mov
add
and
add
mov
add
inc
mov
add
mov
add
pusha
mov
add
mov
add
andb
inc
mov
mov
add
shlb
add
add
shlb
inc
jmp
add
jmp
add
rolb
add
add
add
add
and
add
rolb
and
add
and
add
inc
rolb
inc
rolb
inc
rolb
inc
rolb
pusha
rolb
pusha
rolb
pusha
rolb
pusha
rolb
add
inc
add
addb
add
mov
rolb
mov
rolb
rol
inc
rol
add
add
rol
add
rolb
inc
add
inc
add
add
add
incl
addb
add
add
add
and
add
incl
andb
add
and
add
inc
incl
inc
inc
incl
addb
incl
add
pusha
incl
inc
pusha
incl
andb
jmp
add
cmp
inc
cmp
addb
add
mov
incl
andb
add
sar
inc
sar
add
add
sar
add
incl
inc
incl
cmp
add
incl
add
add
and
add
popa
popa
add
popa
and
add
and
andl
add
insl
add
addl
and
add
add
incl
add
add
add
and
addl
add
add
and
addl
insl
add
add
and
addl
add
and
addl
popa
add
add
and
addl
add
insl
add
add
and
andl
add
insl
add
add
and
add
add
and
incl
add
popa
and
add
add
incl
add
add
add
add
add
add
andl
add
add
add
and
add
jg
mov
clc
lock
loopne
cmp
jmp
add
push
add
push
add
push
add
push
add
clc
add
clc
add
idiv
add
iret
jl
add
js
add
mov
add
movl
add
add
jle
jg
incb
iret
idiv
std
jns
std
jle
sti
mov
out
add
add
add
and
add
add
or
test
add
add
adc
or
pop
ljmp
imul
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
mov
or
sbb
jbe
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
cmc
xchg
js
ret
int
lods
pop
or
mov
rorl
xchg
xor
and
jnp
popa
in
and
inc
stos
iret
adc
push
xorl
inc
or
mov
ds
cmc
fst
outsl
mov
mov
jae
fs
adc
push
mov
rcrb
inc
pop
inc
arpl
mov
pop
or
jg
inc
adc
fs
stos
std
scas
cmpsb
cmpsb
repnz
ss
arpl
ffreep
out
sbb
in
gs
or
pop
lahf
leave
sub
imul
out
mov
sbb
mov
mov
push
test
insb
lahf
dec
cmp
adc
gs
jbe
fdiv
stc
mov
daa
add
mov
jne
shll
insb
inc
mov
inc
cwtl
and
pop
pop
dec
addl
fstpt
rolb
inc
mov
ja
cmpsb
loope
pop
call
pop
xlat
add
pop
pop
adc
sbb
ret
ficompl
sbb
push
flds
sets
mov
dec
test
int3
xchg
jno
dec
std
fcoml
ljmp
jne
push
js
icebp
scas
sbb
sub
pusha
fldl
inc
fnstcw
xchg
jns
js
inc
xchg
and
jle
fistps
push
aas
or
xchg
fs
pop
test
repz
fists
cmp
push
mov
fisttpll
push
lret
pop
mov
xchg
rcrl
mov
adc
jle
ret
mov
jb
lds
in
ficoml
cmp
jb
iret
fs
gs
loope
loopne
sbb
clc
xchg
imul
xchg
addb
jae
mov
mov
cli
aas
int
imul
xor
pop
jnp
push
cltd
sarb
pop
out
dec
lock
sbb
mov
popf
push
sub
mov
and
sbb
lock
add
dec
jp
test
push
ja
out
mov
std
or
sbb
nop
dec
test
xor
add
sbbl
fsubr
or
pushf
imul
mov
lock
rol
ret
sahf
dec
js
movsl
jecxz
cld
jl
jno
popl
pop
roll
xchg
cli
popf
hlt
daa
lods
mov
pop
dec
nop
cmp
sbb
push
int
add
sub
popa
lods
dec
ja
lods
data16
cmp
cmp
push
pop
loop
aad
add
repnz
hlt
add
and
lea
in
xor
dec
mov
repnz
imul
adc
fistpll
daa
inc
inc
popw
add
out
cmpsl
pop
adc
jmp
mov
lret
push
lods
add
shll
loope
ja
jne
and
shlb
adc
out
enter
xchg
mov
fnstenv
cmpsl
mov
icebp
incb
andb
sbb
out
xchg
or
aaa
adc
jg
shl
aaa
xor
pop
cmp
add
mov
dec
xor
push
inc
mov
mov
sbb
cmpsb
int
mov
les
xchg
adc
xchg
jecxz
sbb
fildll
bound
aaa
imul
fbstp
pop
in
adc
movsb
imul
loope
jno
dec
jno
add
outsb
mov
ljmp
mov
adc
scas
insl
sarb
and
cs
js
mov
bound
push
mov
push
sbb
lods
pop
stc
add
lods
je
dec
cmp
cmc
jmp
adc
or
pop
push
bound
xor
js
rorl
add
push
jmp
pushf
xchg
mov
dec
push
inc
js
mov
inc
or
mov
adc
ret
lret
cmp
loopne
xchg
mov
adc
pop
call
xchg
adc
test
data16
hlt
push
lret
jb
pop
ss
inc
aam
push
stos
pop
pop
xchg
loope
cmp
inc
gs
lock
or
pushw
repz
ret
xchg
add
xchg
lock
call
mov
mov
imul
mul
les
loop
loope
cmc
test
bound
test
cld
jg
cli
mov
idivl
stos
imul
xor
in
dec
orl
cmp
pop
repnz
arpl
jmp
cmp
out
std
std
pop
out
mov
inc
sub
jge
lcall
push
out
jmp
cmc
dec
lods
call
push
dec
add
into
jmp
inc
test
lcall
pop
jne
popf
and
nop
mov
and
test
push
pop
mov
shlb
dec
test
in
jns
xlat
lods
adc
xor
es
aam
sbb
stos
fidivs
adc
and
stos
out
push
in
dec
sub
popa
jne
dec
aas
dec
dec
jnp
addr16
dec
sbb
fs
dec
cli
pop
inc
sbb
inc
cmpsl
pop
iretw
into
xchg
repz
pop
fwait
out
decb
pop
ja
scas
jle
mov
popa
out
sbb
cmc
lret
test
addb
fidivrl
outsl
or
push
inc
cli
xchg
js
xchg
and
adcb
aaa
scas
dec
pop
inc
stos
addr16
int3
pop
add
inc
sub
aam
mov
test
rclb
shlb
pop
loope
addr16
jnp
xlat
negb
dec
lds
cmp
xchg
cwtl
rcl
jl
stos
or
xchg
fcompl
cmpsb
adc
push
or
int
push
inc
ja
bound
roll
or
xor
cltd
sbb
out
es
or
push
and
xchg
xor
in
bound
pop
mov
cs
or
pusha
sbb
testl
mov
dec
sbb
pop
pop
shrl
add
mov
test
jns
jge
mov
mov
inc
test
sbbb
ret
jae
sti
and
icebp
popf
stc
push
dec
lcall
mov
in
fsub
xchg
xlat
sub
dec
pop
mov
and
adc
insl
mov
or
incl
inc
ja
inc
or
es
ja
cmc
dec
bound
or
inc
jbe
rorl
int3
xchg
outsb
sub
pop
js
mov
int
frstor
enter
mov
mull
add
hlt
rorb
jb
dec
xchg
fiaddl
pushf
lods
test
pop
and
add
xor
xor
adc
js
add
cmp
jle
mov
dec
xor
inc
push
push
xchg
mov
imul
outsl
xlat
push
in
mov
sbb
repz
and
std
push
or
sub
pop
push
lcall
jge
xchg
cmc
fstl
sub
xadd
and
loope
and
pusha
mov
out
loope
or
out
clc
jne
aaa
jp
xchg
ja
aaa
pusha
lahf
jno
and
pusha
out
gs
pop
mov
dec
and
pop
arpl
jmp
repz
or
cmp
clc
test
dec
and
aad
out
popf
sbb
xor
imul
dec
cmpl
repz
adcl
out
fisttpl
add
inc
test
jne
pop
dec
cltd
mov
out
dec
sub
push
popf
add
cmp
jl
inc
outsl
jg
mov
popf
aad
cmp
pop
aad
pop
xor
loope
repnz
dec
loopne
inc
lock
xchg
mov
daa
lds
mov
sub
pusha
lods
out
mov
xchg
push
stos
xor
jo
cmp
jg
cmp
test
or
out
test
dec
repnz
out
adc
fidivl
push
pop
or
scas
rcll
xchg
add
inc
mov
jnp
or
mov
or
and
es
sbb
xorb
aaa
inc
loop
fcomi
jns
or
xchg
lock
popa
loopne
call
std
in
test
cmpsb
es
cltd
xchg
cmp
stos
dec
mov
jp
adc
dec
dec
mov
push
mov
adc
mov
iret
push
or
adc
mov
mov
add
arpl
ja
and
out
test
inc
add
dec
and
mov
adc
mov
jae
testb
into
sub
cmp
fsubp
test
mov
add
inc
loop
mov
sub
jle
in
sub
push
aad
cmpsl
sarl
add
push
adcl
sub
lcall
or
int
aam
pop
enter
dec
sbb
test
jns
add
shlb
loop
mov
xor
mov
mov
mov
sbb
scas
push
xor
shrl
inc
gs
insb
lea
and
sbb
aad
ret
test
pop
rorl
pop
aas
and
ret
lds
sahf
imul
jno
sub
mov
xlat
btr
mov
add
push
dec
das
mov
arpl
outsb
adcb
repnz
sbb
ficoms
xchg
sub
pop
jp
cltd
dec
mov
inc
nop
imul
mov
inc
std
inc
in
ret
aad
stc
lret
push
or
mov
in
jo
imull
stos
stos
inc
cmpsl
shl
jmp
ret
cwtl
lock
fbld
pop
pusha
xor
int
xorl
jb
xlat
jp
xor
loope
mov
insl
mov
stc
adc
xor
cli
fwait
sbb
push
sbb
push
mov
cmc
and
mov
fistpl
sbb
inc
mov
outsl
mov
sbb
sub
cld
push
psadbw
cmp
popf
and
or
sbb
lods
mov
jg
or
xchg
enter
sub
push
insl
mov
jb
adc
aas
outsb
mov
out
xchg
add
out
data16
cwtl
insb
and
out
xchg
pop
rol
lea
dec
popl
mov
add
pop
push
outsb
cmpsb
dec
cltd
test
stos
test
or
xchg
fs
sub
mov
hlt
jo
mov
in
in
adc
mov
imul
mov
insl
aad
in
add
ret
jnp
adc
xor
and
jge
cmp
push
ficoml
mov
in
mov
bound
pop
enter
mov
pop
decb
push
fldcw
aaa
flds
mov
pop
pop
les
push
xor
xor
pop
into
mov
mov
call
es
mov
scas
and
or
or
mov
mov
xor
and
sti
cmp
xchg
mov
out
stos
sahf
mov
mov
daa
ljmp
sbb
adc
fwait
mov
mov
ret
and
lea
ljmp
sbb
push
or
cmp
sbb
adc
push
test
add
jp
rcll
inc
insb
pop
lret
inc
inc
nop
and
pop
stos
loop
mov
loopne
repz
ficoml
mov
fsub
jg
sbb
ret
arpl
sbb
nop
pop
stc
push
push
loope
pusha
pop
mov
dec
xchg
and
rcrb
adc
jle
cmp
sarb
jp
mov
nop
adc
push
rorb
jle
inc
adc
push
pop
jne
ret
into
mov
pop
nop
inc
jnp
push
lods
lds
bsr
aaa
inc
push
rcr
lods
mov
or
lgs
xchg
xchg
fcomp
cmc
dec
xor
push
sahf
imul
neg
lds
aaa
xor
out
fiaddl
pop
pop
xlat
aad
dec
dec
rep
or
and
dec
mov
xor
dec
rorb
mov
and
enter
stos
rorb
ds
out
xor
mov
jecxz
mov
sbb
jmp
xchg
push
fistps
push
sbb
xchg
xchg
push
and
test
in
jno
xchg
arpl
adc
mov
sbb
rcll
cmp
mov
mov
leave
ja
in
pop
xor
inc
sub
adc
test
arpl
adc
popa
and
jg
adc
lods
push
inc
ja
iret
xchg
mov
out
xor
sbb
das
adc
in
gs
or
clc
emms
leave
adc
jnp
add
fstpt
imul
cltd
scas
mov
daa
or
inc
jg
aam
scas
xor
mov
sub
and
pop
and
push
push
adc
sbb
fbstp
stos
or
addr16
das
jl
ds
loope
jmp
pop
jmp
xor
mov
inc
jmp
punpckldq
lods
fmul
mov
push
insl
dec
push
xor
dec
xor
cmpsl
imul
sbb
pop
xor
mov
rol
cltd
inc
fldz
and
jno
enter
sbb
mov
aam
adc
sarl
pop
xchg
call
inc
mov
imulb
loop
sbbb
pop
dec
addl
loope
add
out
divb
cmpsl
cmpsb
pusha
jae
mov
mov
mov
sbb
jnp
sbb
ja
cmp
and
movsb
cmp
lret
jb
and
rcll
sbb
xchg
or
jecxz
xchg
shlb
fbld
lea
xchg
sbb
imul
fisttpl
js
or
xchg
popa
adc
xor
jnp
cmpl
xchg
stos
add
push
xor
push
cmp
mov
add
arpl
fcomps
mov
jmpw
inc
jecxz
pop
sub
dec
dec
sbb
inc
push
sub
dec
aas
out
ljmp
out
push
push
popa
mov
mov
icebp
pop
pop
fmull
inc
pop
sub
dec
jecxz
ds
cmpsb
cld
add
test
dec
idivl
ror
push
test
rcrl
dec
inc
push
sbb
ja
xor
push
scas
leave
xchg
xchg
jg
popf
faddl
lea
or
xchg
xchg
arpl
add
pop
inc
mov
andl
or
je
lods
mov
fbld
xor
scas
mov
push
mov
inc
lods
xchg
or
in
pop
sti
mov
xchg
or
pop
add
jmp
inc
xchg
and
dec
jge
in
push
jecxz
movsl
add
repz
insb
or
xor
sahf
xor
cld
je
pop
and
loop
ds
push
js
jge
pushf
pop
and
push
mov
push
lahf
je
sbb
or
mov
cmp
stc
notb
test
cs
imul
into
add
push
lahf
pushf
imull
shlb
sbb
or
pop
inc
pop
jl
add
sub
insl
ljmp
arpl
adc
data16
icebp
repz
xlat
dec
int
xchg
sbb
cmp
arpl
dec
insb
jg
pop
test
out
stos
test
add
and
pop
add
ret
jl
ror
inc
jge
cmp
imul
andb
mov
cmp
lock
xor
sbb
imul
sub
mov
xor
cwtl
repnz
cmp
repz
addb
pop
inc
xor
mov
mov
sub
cmp
push
loope
rcrl
jg
jg
test
cmp
int
sub
ficompl
sbb
mov
and
out
dec
add
fistl
mov
pop
xchg
push
sub
inc
dec
push
dec
hlt
mov
aam
cmc
repz
adc
adc
or
ret
xchg
ljmp
adc
fbld
ret
or
push
cmc
popa
cmpsl
sub
fsubp
pop
sbb
rclb
out
and
shrb
ja
lahf
jl
push
mov
adc
lea
daa
xchg
adc
ljmp
arpl
out
push
pop
mov
add
cmp
mov
mov
movsl
shll
jnp
insb
clc
inc
insb
pop
lahf
fst
xchg
cmpsl
out
icebp
leave
fildll
pop
sbb
fdivrp
gs
push
out
mov
scas
orl
dec
inc
adc
ja
fwait
jbe
jns
xlat
test
adc
mov
lock
in
xchg
push
lock
int3
push
dec
loop
push
jns
test
inc
mov
push
jle
into
ss
jp
es
mov
gs
sarb
iret
cmpl
into
xor
add
push
inc
xor
filds
leave
mov
cmp
stos
xorl
mov
or
test
push
cmp
popa
in
add
data16
stos
jmp
hlt
loop
rcl
hlt
mov
negb
loop
mov
je
dec
lcall
popa
pop
clc
or
or
add
pop
cmp
cmp
sti
aad
mov
imul
rclb
ljmp
mov
ds
mov
sar
lock
scas
adc
mov
sarl
sbb
xchg
mov
xor
sub
sbb
mov
push
push
loopne
pop
scas
sub
int
cmp
sub
pusha
aam
mov
inc
xchg
add
lods
xchg
mov
sahf
jl
fwait
xor
aas
mov
lods
xchg
mov
fwait
jle
loopne
outsb
xor
icebp
into
icebp
adc
jno
or
lea
mov
sti
scas
repz
xor
sub
inc
pushf
xlat
mov
subb
mov
mov
cmp
jne
mov
setg
shll
roll
push
imul
test
mov
cwtl
and
rcrl
inc
ja
sbb
test
xchg
mov
loop
repnz
jno
sbb
pop
jecxz
movsl
xor
xchg
pop
fdivl
sti
pushw
cwtl
iret
leave
bnd
inc
and
xchg
lahf
push
pop
arpl
pushf
imul
lock
sbb
mov
sarl
mov
sbb
xor
sub
insb
clc
xchg
add
icebp
adc
clc
sub
loope
lods
or
nop
gs
mov
in
cmp
bound
addr16
sub
and
push
sub
inc
push
or
mov
cmp
adc
cmc
adcb
lret
and
push
cltd
xchg
push
cli
jmp
enter
outsl
jns
mov
daa
lea
jne
cli
icebp
xchg
mov
movsb
adc
loopne
imul
int
jle
mov
jge
lds
jo
jge
inc
mov
outsb
xlat
fnstenv
incl
pop
xor
add
sub
fmull
imul
cmc
mov
mov
adc
pop
mov
out
mov
inc
mov
and
inc
dec
mov
inc
pop
lret
stc
pop
or
pop
jb
adc
dec
sub
ffreep
loop
pop
imul
iret
sarl
push
in
xchg
bound
or
jo
mov
cmovno
int3
jmp
or
stos
sub
int
ficomps
jecxz
lock
shl
add
cs
jecxz
sbb
push
mov
aam
cmpl
jno
mov
or
mov
mov
das
adc
cmpsl
push
pop
push
aaa
dec
leave
ror
add
fimuls
in
push
dec
xlat
sub
fcmovbe
and
cli
in
lret
xor
in
data16
lahf
fs
and
add
sbb
sub
cmp
notl
and
xchg
cmp
add
sub
jno
ds
fsubrs
mull
addr16
mov
adc
jecxz
lahf
mov
sarl
stc
xor
lock
pop
test
stc
fisubs
jns
xchg
cmp
pusha
loope
sbb
out
add
mov
xor
inc
arpl
stos
out
jbe
mov
xor
int3
out
push
vunpckhps
dec
pop
pop
scas
jl
xchg
jo
xor
xor
inc
sbb
fcoms
xlat
push
pop
aas
adc
inc
cmp
mov
idivl
popa
ret
out
dec
sbb
call
xchg
ss
ljmp
cmp
mov
lcall
dec
add
or
sbb
scas
pop
add
inc
lods
sbb
or
mov
dec
mov
clc
daa
add
or
rcl
test
aas
mulb
fwait
in
and
test
mov
adc
inc
movsl
push
push
out
popa
jle
add
xor
int3
stc
pop
cmp
xchg
cmp
sub
and
or
inc
rcr
xor
push
dec
inc
filds
loop
jg
dec
inc
sbb
shll
ds
inc
pop
test
cmc
data16
shlw
push
push
hlt
push
mov
lahf
or
shrb
lahf
xchg
data16
lds
jbe
sbb
mov
fcmovne
imul
jb
stc
cmpsb
pop
int
dec
pop
dec
hlt
jl
cmp
mov
lds
clc
mov
mov
std
jmp
pushf
sbb
cmp
mov
testl
add
jb
or
mov
adc
lcall
xchg
pop
lods
mov
xor
mov
sbb
lahf
jl
jns
lds
add
test
out
sub
and
ror
insb
fsubl
in
cmp
cmp
jmp
or
fisubrs
movsb
jle
outsb
int3
inc
test
pushf
repnz
js
popa
std
push
dec
add
xchg
lahf
cmc
shr
xchg
in
jb
nop
cmp
stc
add
pushl
push
push
jo,pt
loope
jg
into
jmp
jns
jno
int3
jg
cld
pop
sbb
scas
and
repz
lcall
lds
iret
push
push
mov
fdivp
adc
add
in
clc
xor
cmp
lds
ss
ffree
test
test
mov
mov
pop
lahf
add
mov
fmuls
iret
cmp
jo
test
mov
jbe
ljmp
out
add
sahf
in
sub
pop
pusha
ds
jle
lcall
aam
rcrb
pop
sub
push
add
out
repz
in
pop
inc
add
adc
push
mov
aaa
and
pushf
and
testb
push
ss
dec
dec
out
fwait
xchg
pop
std
jns
cmpsl
push
dec
and
push
jo
cmpsb
sub
sbb
adcl
xchg
push
add
lods
adc
and
push
outsb
mov
cwtl
mov
in
mov
mov
xor
sarb
inc
shll
fdivrl
add
mov
dec
imul
leave
jae
lea
dec
in
mov
cmp
pushl
mov
stos
mov
cs
xchg
jp
push
pushf
add
sti
sbbb
cli
jl
mov
aam
and
mov
das
mov
mov
rcr
mov
sub
or
jne
lds
out
dec
fidivs
sub
adcb
test
inc
push
or
rclb
aad
je
fimull
rcrl
fisttpl
dec
cli
in
push
mov
icebp
xor
test
out
lock
ficomps
mov
cmc
jo
loope
cmp
push
lcall
rclb
lock
mov
fcmovnbe
mov
adc
or
mov
pop
mov
loop
pop
iret
out
scas
jo
add
pop
popf
int
mov
stc
test
xor
test
and
les
stc
sbb
outsl
mov
add
fsubs
xor
jmp
adc
mov
and
push
jl
cs
cmp
imul
daa
fldenv
negb
gs
inc
cbtw
daa
xor
outsb
jle
pop
jno
jl
and
push
pop
xchg
sbb
dec
cwtl
pop
xor
dec
fwait
sbb
insl
push
push
sub
jg
and
adc
mov
aaa
mov
xchg
jle
jo
mov
loopne
fwait
jae
push
jne
mov
negl
jno
xor
cmp
sub
mov
and
mov
stos
lods
pop
stc
sub
call
mov
cmpsl
push
cmp
into
mov
dec
mov
mov
cmpsl
xor
adc
cld
testl
mov
cmp
dec
jmp
push
pop
lods
shl
lock
pop
sbb
sub
jb
xlat
inc
fistpl
xchg
and
push
xor
inc
mov
xchg
jmp
lret
pop
std
cmp
jp
push
mov
and
inc
outsl
aaa
and
daa
daa
mov
jo
in
inc
cmc
in
shlb
out
imul
or
sti
cmp
mov
mov
cwtl
jmp
sub
mov
cltd
jl
mov
push
mov
cli
xchg
adc
xor
insb
cmp
xor
mov
jnp
daa
mov
movsb
and
scas
push
fbld
sbb
cmp
pop
mov
mov
test
mov
pop
aaa
insl
dec
adc
cli
sti
enter
leave
sub
imul
pushf
addr16
enter
cmp
jl
add
mov
cmpb
shlb
push
jno
lock
cmp
cmc
cmp
pop
adc
xor
cmp
insl
psubusw
test
mov
push
mov
movsl
jle
ret
addr16
cmp
adc
lock
clc
loop
mov
test
jbe
pop
mov
popa
xor
sbb
int
iret
in
stos
mov
pop
mov
mov
addr16
enter
pusha
decb
sub
roll
frstor
sbb
in
and
das
sbb
lds
push
pop
jge
sbb
sbb
add
adcb
iret
mov
cmp
imul
lret
push
es
jp
lds
jmp
xchg
xchg
adc
iret
xchg
fistpll
stc
fwait
test
sbb
aad
or
loopne
enterw
and
add
push
dec
push
jbe
mov
cmp
rcrl
mov
sti
or
fistpl
int3
dec
pushf
push
adc
enter
imul
and
sub
cmpsb
ds
ss
add
cmpsl
adc
outsb
xor
pop
sbb
lret
pop
adc
and
imul
sbb
xlat
imul
das
cmp
add
xchg
pop
lahf
adc
push
jmp
mov
enter
add
nop
out
ljmp
mov
pop
lods
in
fcomp
xchg
mov
ret
fstl
inc
sub
add
mov
sbb
jg
data16
mov
popl
jne
test
fldenv
aaa
das
cmp
sbb
sahf
ret
test
sub
popa
pusha
dec
cld
xor
sub
jecxz
pop
dec
xchg
es
inc
fsubs
and
sub
jge
imul
jae
outsl
iret
aas
inc
imull
and
sub
cli
inc
pop
int3
cmpb
dec
ja
xor
gs
and
sub
in
mov
or
inc
jge
popa
imul
adc
jge
das
stos
lea
arpl
lods
mov
sub
loop
jle
jb
shll
jle
jl
xor
sub
mov
movsl
add
dec
push
jmp
imul
push
mov
ret
fmul
jb
adc
fs
mov
sub
hlt
dec
pop
jo
mul
xchg
mov
jne
retw
mov
scas
lret
mov
jmp
and
add
insb
jbe
fists
cltd
push
inc
mov
xorl
mov
daa
xchg
dec
aad
bound
inc
adc
fldt
inc
das
dec
test
and
jle
push
jne
pop
dec
popa
nop
sti
mov
aam
mov
mov
dec
push
sbb
sub
inc
jmp
xchg
aad
mov
insl
sbb
in
insb
dec
int3
mov
nop
sub
rcl
jmp
scas
or
mov
movsb
push
arpl
cld
dec
xor
rep
and
bound
xlat
mov
push
dec
cmp
movsb
or
pop
adc
inc
int
leave
daa
mov
ja
adc
sti
imul
xchg
sub
outsl
adc
popa
mov
insl
sub
jg
inc
xchg
or
inc
in
rcr
data16
icebp
inc
test
movsb
sbb
dec
mov
mov
sbb
addl
or
sub
gs
stc
pop
xlat
mov
cwtl
xor
sarb
out
imul
ret
dec
and
les
and
and
lods
inc
cmp
or
sub
xor
adc
gs
sysexit
stos
xchg
insl
ss
cmp
xorb
xchg
cmc
xor
nop
cmp
lcall
lds
out
shlb
das
xor
mov
dec
dec
jb
jecxz
sti
add
dec
mov
adcl
xlat
xchg
add
xchg
fucomp
jbe
push
and
std
lcall
lahf
mov
dec
and
test
pop
cmp
pinsrw
lcall
push
bound
or
jns
lcall
xor
out
or
push
iret
mov
jo
das
jns
cmp
lods
call
inc
cmp
jne
inc
std
sub
mov
lahf
sub
fstpt
cltd
lahf
movsb
in
inc
jg
sti
data16
mov
dec
mov
and
ss
btc
ror
mov
inc
iret
inc
movsl
jg
mov
pop
js
lds
clc
scas
cmpsl
pop
and
lahf
negb
into
jno
or
clc
inc
xor
add
mov
mov
fstp
in
imul
es
sti
ficoms
adc
aam
xor
es
cmpsl
mov
fidivrs
xchg
addr16
mov
movups
insl
test
mov
pop
jle
rclb
sub
jno
das
add
and
xor
inc
arpl
pop
shrb
fld
iret
cmp
xlat
sahf
ret
cmc
scas
ja
outsb
push
mov
fistpl
rolb
lds
call
popa
add
mov
dec
and
in
xchg
dec
xchg
pop
mov
sti
mov
mov
nop
dec
pop
dec
cwtl
adc
mov
jne
xor
jp
jl
xchg
test
xor
fstpt
out
jge
cmp
int
jecxz
jmp
inc
and
repz
sub
mov
shrl
sbb
add
ljmp
sbb
adcb
jne
cs
clc
cltd
cmp
push
cmp
inc
in
mov
jmp
and
enter
insb
lds
stos
cmp
sbb
lcall
bound
in
roll
std
cmc
std
and
or
icebp
repnz
lcall
ror
xor
push
test
jge
ss
dec
leave
pop
push
int3
mov
xchg
dec
cmp
jecxz
push
fwait
add
inc
xchg
push
rcl
movsl
adc
scas
xor
cmp
or
jp
rorb
nop
in
aas
fisttpl
ss
push
push
mov
cmp
daa
add
push
aaa
push
adc
sub
pushf
mov
mov
cmp
mov
mov
push
mov
mov
out
cwtl
push
stc
push
add
cs
cmp
adc
shlb
xchg
insl
outsb
add
adc
pusha
xor
push
addl
sarb
out
pop
push
and
mov
xchg
xor
jge
cltd
pop
aam
sbb
jb
fstl
sub
leave
pop
dec
shl
mov
in
jle
xor
loope
fidivl
je
mov
test
ret
leave
pop
out
insl
mov
jge
test
rorl
cli
cmp
jmp
inc
cltd
ljmp
and
fisttps
dec
jg
jecxz
std
leave
lds
inc
sub
dec
rol
pop
bound
scas
adc
ss
popa
stos
jne
daa
jo
repnz
imul
stc
push
jl
out
clc
xor
mov
jo
movsb
jb
in
inc
jo
inc
mov
inc
lahf
aad
mov
cmc
mov
fwait
push
mov
aas
aad
xor
mov
mov
inc
and
stc
mov
daa
lods
ljmp
outsb
xor
mov
fidivrs
add
bound
cmp
xchg
dec
xchg
push
sti
mov
pop
sbb
enter
cmp
jb
add
ds
xchg
lods
mov
add
pop
out
xor
cmp
enter
aad
and
insb
jle
test
test
bound
ret
dec
adc
fcmovne
outsl
incl
popf
es
xor
loope
enter
push
jmp
jb
outsl
cwtl
clc
jbe
xchg
aas
and
sbb
mov
sti
or
mov
std
add
lock
rsqrtps
mov
mov
sbb
stc
sub
dec
hlt
in
and
into
push
fnstenv
adcb
inc
leave
mov
sub
xor
jb
out
jl
pop
cmp
sub
xor
in
adc
rolb
psraw
xchg
xor
pop
into
adc
les
stc
push
xor
int3
fs
sbb
int
mov
sbbb
mov
fisubs
mov
sub
pop
pop
lahf
xor
push
popf
in
hlt
nop
add
enter
lods
jecxz
std
inc
mov
ret
roll
mov
pop
dec
sarl
scas
stos
ret
pop
outsb
mov
dec
movsl
adc
incb
test
pop
rorl
rorb
push
int3
pop
pop
movsb
sarl
sbb
mov
mov
and
ja
jo
or
add
cmp
push
mov
or
mov
pop
jns
lea
arpl
inc
test
inc
pop
xorb
cwtl
mov
subb
mov
pop
lods
xlat
sbb
lret
iret
movsb
div
test
pop
mov
add
sub
lcall
dec
jge
andb
xchg
add
jb
add
cmp
adc
mov
mov
cmpsl
jbe
out
push
daa
fmuls
pop
in
push
fistpl
sbbl
push
pop
fdivp
jg
sarb
jbe
inc
mov
pop
daa
add
in
movsl
dec
mov
cwtl
cmp
adc
stos
or
mov
cmp
pop
or
rolb
stos
sub
inc
sub
mov
push
out
inc
mov
ja
stos
leave
jo
mov
mov
aas
call
fisttpll
aas
xchg
mov
push
test
call
xor
jg
pushf
or
lock
xor
hlt
push
shlb
hlt
mov
aas
push
out
add
jno
xchg
xor
push
add
xchg
pop
jge
xorb
or
push
and
push
push
adc
ds
or
imul
lret
mov
subb
push
push
mov
mov
ss
fwait
push
es
test
mov
xchg
out
push
aad
fdiv
stos
cmp
stos
pop
mov
add
push
std
xor
lcall
in
stos
mov
mov
mov
sub
repnz
in
pushf
imul
and
imul
iret
sub
xor
or
push
push
mov
cli
into
lds
arpl
call
fs
cmp
push
aas
in
std
mov
jb
jmp
ljmp
test
jle
cmp
jae
dec
loop
js,pn
test
xor
adc
mov
iret
mov
jnp
mov
jg
sbb
jbe
jg
fistpl
orb
sarl
push
xor
dec
sub
adc
js
movsb
fidivrl
jl
mov
mov
loopne
or
popf
jecxz
or
fwait
repz
and
cmpsb
in
sbb
sbb
xor
lods
adc
xchg
mov
xchg
icebp
cmp
add
sti
fldenv
stos
popf
dec
decb
scas
sub
les
fisubl
fs
mov
lret
enter
xor
mov
cmp
cmpsl
cmp
sbb
in
daa
test
das
jno
fwait
in
push
or
xor
jmp
cmpsb
jp
int
push
cmp
lock
sbb
in
outsb
sbb
cmp
fs
loope
cmpsb
xchg
xlat
push
out
xchg
dec
sub
mov
repz
stos
pop
mov
and
fwait
cmpb
push
fs
sub
xlat
mov
fnstcw
sbb
loop
push
bound
sub
andl
lahf
sbb
fisubrl
mov
test
xchg
inc
jbe
test
or
loop
pop
test
in
fistpl
sbb
divb
sahf
scas
mov
pop
cmp
push
mov
rcl
pushf
jne
leave
jb
fisttpll
clc
rolb
sub
int3
and
and
push
nop
lods
pop
popl
shlb
lock
jg
inc
or
xlat
aaa
mov
push
pusha
dec
loope
lret
pmaxsw
out
push
push
mov
sbb
cmp
xor
fwait
pushf
mov
mov
xor
xlat
cwtl
les
popa
jecxz
fisubrl
shl
mov
mul
and
cwtl
xchg
push
ss
push
ret
loope
mov
adc
jns
sub
jmp
ja
shlb
rcll
lahf
rol
scas
xchg
loope
shll
idivb
test
mov
jp
movsl
inc
jge
adc
mov
mov
out
cmpsb
and
lds
scas
lret
mov
mov
push
dec
repz
pop
jp
inc
mov
mov
mov
push
cmp
pop
adc
ljmp
xchg
xchg
sub
pop
outsl
push
dec
das
hlt
sub
int3
je
xor
or
and
jae
lds
enter
loopne
lods
jl
sub
enter
icebp
or
and
fidivrl
mov
pop
leave
jo
add
pop
or
test
dec
xchg
sub
or
xor
or
push
aaa
shll
mov
cmp
cld
sbb
cmp
test
adc
scas
mov
add
dec
xlat
or
and
aam
or
insl
out
mov
jle
jne
enter
test
cmovge
int
mov
mov
sub
push
jnp
adc
stos
jl
daa
push
scas
mov
arpl
add
out
or
xor
push
cs
xor
or
sti
push
sub
add
mov
inc
jl
cmp
in
rcll
adc
fsubrl
stc
fs
andb
cmp
popf
jne
int
mov
ljmp
rcrl
xchg
addl
xchg
sarl
in
cli
std
rclb
sbb
or
ja
mov
dec
in
fwait
in
ds
adc
sbb
fxch
dec
lcall
sub
and
int
shlb
pop
dec
mov
inc
bnd
cmp
push
movsb
orb
outsl
jmp
movsl
in
jg
push
sbb
repnz
mov
mov
or
pop
xlat
mov
popf
inc
sub
ror
pop
push
aad
inc
add
xor
mov
sti
adc
add
cmp
pushf
adc
test
add
fistl
adc
and
jg
lock
or
mov
pop
sbb
xrelease
sub
in
inc
test
mov
mov
pop
sbb
imul
cmpl
cmpsb
or
lods
lcall
subb
push
fcmovu
lahf
sub
ja
daa
cltd
xchg
sub
inc
push
mov
es
jg
pop
sub
pop
xchg
mov
mov
repnz
xor
push
pop
aas
inc
adc
nop
hlt
xchg
into
sbb
jp
int3
and
pop
aaa
sub
add
add
addl
lret
scas
push
in
iret
dec
jns
cmp
mov
mov
adc
les
into
out
sbb
xorl
adc
lahf
xchg
or
popa
insb
xchg
dec
inc
cmp
add
std
and
sbb
push
xor
jb
mov
ljmp
mov
push
pusha
inc
imul
repnz
insb
negl
stos
cmpsl
sbb
ret
popf
jb
push
cwtl
lret
nop
push
dec
daa
scas
rcrb
aad
icebp
int
icebp
push
mov
out
sahf
dec
push
mov
push
fbld
sar
jl
jne
fwait
aaa
lret
jge
dec
aas
mov
ret
pop
cmpl
mov
mov
inc
stos
lret
pop
mov
cli
icebp
popa
fwait
sub
push
mov
jne
out
dec
adc
add
pop
fstpt
pop
je
inc
xor
aam
stos
test
cmp
xor
pop
negb
fs
mov
xchg
sbb
cli
pop
inc
testl
aad
sub
mov
fs
jp
into
add
adc
movsl
jnp
xchg
repnz
add
lods
scas
mov
pop
adcb
ss
push
xchg
lods
test
xchg
stc
mov
decl
nopl
or
lcall
sub
test
dec
imul
jle
sahf
aam
dec
cmp
inc
xchg
in
aam
mov
sti
cmp
mov
pop
or
imul
and
aas
loope
xchg
bound
testb
mov
sbb
dec
xchg
add
pushf
add
scas
lret
es
daa
sbb
xchg
loopne
sbb
int3
pop
add
push
dec
xchg
enter
dec
mov
ds
and
inc
test
aam
fsubp
cs
jne
sbb
stc
lahf
and
xchg
fcmovnb
dec
inc
scas
lods
sbb
int3
test
nop
arpl
test
xchg
lods
nop
test
insb
pop
adc
and
jle
ljmp
cmp
pop
ss
jo
jae
xchg
mov
test
fists
ljmp
xor
dec
inc
mov
cli
clc
sarb
out
cmp
mov
mov
movsl
int
xchg
test
fcmovu
ljmp
and
pop
cwtl
sbb
cmc
rcll
push
rcll
enter
pop
push
and
popf
dec
ror
enter
push
inc
idivl
inc
mov
imul
stos
bound
cmp
dec
lahf
xor
movsl
fsubrl
shl
movaps
lcall
ss
lcall
pop
pop
in
je
jbe
sbb
aad
xchg
rcl
jg
es
cmp
push
cmp
lret
add
jge
sbb
les
jp
into
pop
jg
ss
sub
push
movsb
add
stos
or
xor
test
or
push
lret
xchg
aaa
or
pop
dec
push
inc
in
fdiv
cmp
repz
pop
mov
orb
sbb
push
add
enter
jp
jno
or
mov
inc
mov
iret
adc
sub
or
xchg
lods
enter
cltd
sbb
pop
fstl
push
xor
cmp
or
sti
divb
xchg
decl
dec
xchg
xor
pop
movsb
xchg
xor
shld
test
pop
dec
push
push
push
mov
sbb
mov
lods
movsb
sub
adc
jne
shlb
xor
mov
pop
mov
cltd
or
push
or
fsubp
sub
and
pop
xchg
sub
int
and
jbe
xor
out
aad
mov
leave
cmp
lcall
ffree
in
pop
pop
push
dec
lods
shrb
add
inc
jecxz
cmp
add
or
adc
data16
inc
jnp
fstpl
cmp
icebp
mov
movb
mov
mov
inc
xchg
mov
data16
add
sub
cmc
cmp
mov
xor
and
rclb
loope
outsl
movsl
mov
xor
jne
addr16
mov
sarl
jae
jecxz
jbe
outsl
ficoml
rol
mov
cs
xor
xor
stos
dec
sbb
shl
movsl
jecxz
or
inc
mov
sub
inc
mov
mov
sbb
adc
cld
and
dec
ret
pop
shrl
jecxz
mov
jl
mov
pop
sahf
stos
iret
or
les
push
dec
flds
fwait
dec
pop
lods
ret
add
into
push
and
test
out
pop
lods
jmp
mov
out
fsub
pop
push
lods
addb
and
imul
inc
inc
adc
mov
cmp
inc
adc
sysexit
daa
or
pop
push
mov
pop
dec
js
add
scas
jae
pop
xchg
xor
mov
icebp
cltd
sbb
cmp
mov
popf
pop
mov
je
fsin
adc
mov
xor
jb
cmc
das
xchg
add
pop
fisubl
pop
dec
les
loope
mov
mov
jl
addr16
dec
cltd
lret
cwtl
and
mov
pop
lock
ret
sub
aam
adc
pop
push
xchg
in
or
xor
lods
cs
mov
add
or
pop
rolb
pop
imul
inc
jecxz
sbb
push
mov
push
jl
cltd
sbb
or
ja
sub
mulb
js
fsubrs
mov
pushf
fs
sbb
and
mov
rcrl
pop
jmp
jne
enter
ret
or
push
int
lods
sti
xchg
in
and
sub
sub
rcrb
mov
fsubs
sbb
sub
negl
or
ljmp
jge
xchg
stos
xlat
xor
add
sub
xchg
inc
ds
push
mov
pop
push
insl
mov
pop
cmpsb
mov
adc
jmp
aad
orl
les
jno
out
sbb
inc
bound
ja
pop
lds
push
and
xor
enter
adc
mov
ds
or
inc
xor
daa
loopne
addr16
mov
iret
test
xor
and
jle,pt
push
dec
mov
mull
addr16
mov
in
dec
add
iret
xorl
pop
push
insb
je
push
into
push
xchg
dec
dec
cld
jp
mov
xchg
jp
xor
add
orl
movsl
fstpl
xor
fldcw
cmp
daa
lea
xor
rcrl
movsb
inc
or
sbb
xchg
sbb
jae
jge
add
mov
shlb
jns
icebp
mov
mov
pop
test
push
sarb
lock
xchg
stc
ds
add
cmp
jg
mov
js
adc
rol
pop
dec
push
sbb
sub
fwait
repz
mov
shlb
aas
jmp
or
sub
lret
in
leave
dec
movsl
insb
lods
pop
xor
push
push
loope
movsl
or
ljmp
ljmp
in
ljmp
test
cmpsb
movsl
mov
mov
jbe
popa
add
adc
lahf
jbe
xchg
in
fnsave
cmpsl
or
int3
pop
int3
mov
movl
das
mov
xchg
aad
gs
pop
mov
pop
mov
imul
jle
or
jp
mov
xchg
adc
enter
pop
jae
sub
mov
cmp
int
push
jmp
adc
insb
pop
out
add
hlt
sbb
ljmp
ja
jbe
push
imul
mov
iret
outsb
into
call
pop
push
jecxz
notb
cwtl
sub
mov
outsb
dec
mov
mov
sbb
cmp
lods
test
xor
test
pop
in
jl
jnp
add
jns
cmp
add
jecxz
es
arpl
lea
sub
ret
pushf
cmpsb
lret
add
pop
repz
mov
lret
aad
fs
cmp
dec
xchg
dec
mov
idiv
pusha
xchg
push
or
es
fstps
in
or
jle
jne
mov
sti
and
icebp
out
jo
test
popa
rcl
lahf
sti
outsl
adc
push
cs
sbb
inc
ss
inc
jg
int3
fs
ljmp
movsb
scas
and
test
xchg
pop
in
repz
mov
jbe
cmp
and
sub
push
mov
sahf
je
inc
add
adc
xor
inc
cmpsb
repz
mov
cwtl
enter
fs
insl
bound
adc
jl
hlt
int3
mov
and
movsl
repz
dec
cmp
cli
mov
lahf
out
lods
xchg
jecxz
data16
dec
jnp
outsl
xor
push
call
pop
push
out
mov
adc
data16
xchg
adc
mov
jo
dec
fistl
icebp
das
pop
pushf
arpl
lcall
loopne
and
aaa
mov
dec
movsl
out
jmp
adc
mov
cmp
pop
xchg
mov
jp
pop
jb
jge
jg
lds
mov
xchg
hlt
imul
out
and
dec
sbb
popa
jns
add
int
xor
lock
test
out
pop
mov
mov
xchg
sbb
popf
test
sub
ret
inc
repz
pushf
push
sahf
sahf
into
mov
dec
mov
enter
jle
cltd
call
sbb
nop
cld
ljmp
sub
psrlw
test
pop
aas
in
mov
iret
inc
add
scas
es
xor
pop
push
push
or
test
mov
nop
sbb
shlb
pop
inc
iret
xchg
xchg
in
aaa
stc
inc
mov
scas
js
push
mov
ret
or
movsb
cmp
icebp
jp
mov
mov
push
push
aas
je
sub
jae
sub
pusha
or
in
sub
push
call
popa
adc
pop
stos
test
xchg
and
mov
xchg
sub
lock
adc
dec
add
mov
inc
lods
mov
sbb
pop
or
jne
iret
es
xor
dec
outsl
push
loop
mov
cmc
and
inc
add
mov
outsb
int
inc
lock
rolb
stos
and
mov
adc
test
andb
and
jae
repnz
inc
aad
push
inc
add
clc
fistpl
jge
roll
cltd
cld
outsb
pop
aam
stos
cmp
stos
push
out
pop
mov
push
dec
sub
lret
push
int3
xchg
dec
adc
test
sub
mov
ljmp
cmc
inc
icebp
cmp
sub
lcall
jl
jb
cmp
loope
sub
mov
sub
xchg
inc
fdivrl
jbe
push
and
in
jo
fadd
cmp
clc
pusha
daa
push
scas
lds
or
push
mov
lods
or
mov
dec
xchg
mov
pop
fwait
push
sub
push
dec
out
mov
and
mov
xor
add
mov
dec
scas
pop
push
and
call
mov
fidivs
inc
mov
xor
mov
loop
subb
cmp
mov
mov
xchg
xor
or
dec
je
mov
insb
push
lret
loope
adc
subl
mov
dec
and
pop
xchg
rolb
js
xor
inc
das
sti
add
mov
jne
je
xor
fucomip
push
mov
sbb
mov
mov
out
xchg
dec
push
jae
in
out
outsl
xchg
callw
push
fistpl
js
scas
ss
xchg
sti
jno
rcr
dec
ljmp
lea
mov
cmp
or
push
mov
ret
in
cmpsl
inc
inc
sbb
std
mov
lock
sub
pusha
not
call
repnz
nop
pop
cli
gs
push
push
cwtl
sub
in
pusha
xchg
test
push
and
movsb
ret
outsb
push
cmp
stos
stos
mov
mov
notb
aaa
sbb
out
adc
xchg
mov
push
sbb
xorb
xor
mov
cmp
movb
shrb
push
push
add
in
xchg
in
mov
mov
xchg
dec
lcall
mov
or
fimull
ficompl
sub
adc
adc
inc
jge
sub
jnp
fadds
sbb
xor
bound
lret
stos
add
adc
subl
mov
or
jmp
pop
sbb
paddb
cltd
lahf
or
ja
inc
push
mov
sub
inc
push
add
fdiv
repnz
or
pop
outsb
xchg
popa
dec
loope
mov
sub
decb
jmp
cmpsb
int
inc
insl
push
mov
xlat
sbb
xor
stos
lods
add
xor
adc
sbb
fcom
pop
cwtl
sbb
jmp
mov
out
icebp
push
mov
fcmove
adc
hlt
sub
fcomp
sbb
jge
insl
pop
or
xchg
cmp
imul
push
mov
jns
xlat
adc
xchg
ds
fsubs
mov
push
sbb
imul
scas
xchg
test
into
add
stos
xchg
mov
push
fistpl
stos
mov
or
mov
mov
xchg
test
add
lds
je
sbb
xchg
push
mov
push
xor
jmp
pusha
jge
dec
adc
adcl
leave
cmp
jne
mov
sub
hlt
movsb
out
outsb
push
xor
mov
pop
cmp
jno
cmp
test
popa
data16
add
push
cmc
add
cmpl
cwtl
jg
in
test
lahf
xor
jns
addr16
das
and
lret
mov
or
clc
rcrl
sbb
fbld
cld
push
pop
mov
ds
push
pop
dec
inc
dec
lret
adc
leave
ret
sub
adc
iret
pop
sbb
int
sub
adc
add
push
lods
cmc
cld
aaa
lahf
push
movsl
push
push
ficompl
mov
and
inc
lahf
dec
nop
and
pop
add
dec
inc
and
cs
mov
xor
enter
xor
xchg
ret
mov
jae
push
sbb
jecxz
cli
pop
cmc
pop
int
push
leave
push
jecxz
jo
or
scas
popa
add
out
push
mov
cltd
jge
cmc
mov
adc
inc
fwait
push
stos
imul
mov
data16
add
mov
adc
inc
jge
pop
mov
lret
jnp
fstpt
lods
call
mov
jb
jmp
sub
rorb
scas
cmp
lds
out
mov
lea
push
adc
push
xchg
push
movsb
pop
jae
loope
rorb
xchg
clc
mov
stc
inc
or
int
mov
xor
add
mov
data16
fisttpl
or
loop
dec
push
fld
pop
adc
rcll
cli
sahf
iret
stos
ss
fadd
mov
push
inc
stos
pusha
loopne
push
shll
cmp
and
sub
mov
lods
mov
inc
in
popa
adc
lods
leave
daa
mov
out
jle
mov
mov
scas
or
aad
sub
sbb
or
ret
inc
mov
sub
outsb
fpatan
mov
add
out
ficoms
rcrb
sub
filds
cmpb
xorl
shlb
pusha
inc
mov
jae
cld
mov
mov
stos
mov
mov
addr16
pop
add
xor
inc
aaa
xor
rcr
cwtl
in
mov
test
sbb
xor
sarb
sahf
outsl
mov
push
fcmovne
dec
sub
insb
je
aam
mov
ljmp
push
arpl
mov
jae
dec
cmp
xor
inc
fucomp
insl
xor
arpl
out
inc
loope
iret
insb
scas
add
aaa
mov
fildll
xorb
jns
xor
outsl
jb
arpl
cs
outsb
fnstenv
mov
icebp
push
hlt
stos
jns
sbb
sub
push
sbb
and
mov
out
add
mov
aam
leave
sbb
shrl
sarl
fldl2e
notb
mov
cwtl
fsub
fstpt
add
push
and
fcmove
test
imul
sbb
sbb
test
sub
movsb
sbb
cmp
stos
xchg
in
inc
stos
dec
mov
rep
xchg
andl
ret
outsl
push
std
inc
jne
push
mov
jno
cltd
mov
aas
roll
cmc
mov
adc
loopne
outsl
cmp
and
int3
xchg
push
fldcw
push
cmp
push
cmp
xor
fs
hlt
jecxz
sahf
fadd
cmp
mov
arpl
jp
jbe
daa
shrl
mov
sbb
cli
dec
fimull
sbb
adc
mov
sub
cmc
xchg
mov
stos
les
ljmp
pop
xchg
jle
jbe
and
jb
mov
pop
pushf
jge
cmp
xchg
insl
xchg
mov
int3
les
push
xchg
lcall
mov
sub
sti
xor
cs
test
cmc
pop
mov
push
push
enter
cs
and
inc
mov
push
inc
out
sub
shlb
sbb
cld
cmc
sbb
int3
dec
mov
aam
addr16
jne
adc
adc
arpl
pop
ret
adc
jbe
cmp
xor
ret
clc
gs
leave
movsl
ret
pop
dec
out
push
insl
pop
dec
fisubs
out
fldenv
sub
pop
stos
jmp
out
mov
das
xor
mov
repnz
shll
lea
or
stc
add
dec
iret
lret
jns
sub
push
inc
or
addr16
pushf
push
sub
imul
ljmp
inc
xchg
jle
roll
or
or
xchg
add
push
dec
jmp
popf
inc
mov
xchg
xor
and
es
sub
jo
js
fwait
in
lahf
jo
jno
cmp
or
mov
jecxz
loopne
loope
stos
mov
repz
cltd
jg
rorl
ret
jae
in
or
mov
out
adc
jbe
push
cmpsb
and
fdiv
dec
lcall
pop
pop
std
test
imul
jp
sub
adc
pop
pop
adc
push
repz
mov
sub
pushf
adc
xor
mov
clc
xor
popf
inc
cld
adc
icebp
cmp
js
das
pusha
xchg
fsubrs
lcall
pop
out
lcall
push
jecxz
bound
xor
insl
movsb
mov
mov
jle
shlb
mov
push
aaa
adc
pushf
push
ror
jecxz
iret
ss
push
mov
in
loopne
jae
mov
pop
or
adc
mov
xchg
sbb
xlat
xchg
sub
mov
lret
sbb
mov
add
pop
fdivr
dec
dec
cmp
mov
mov
push
arpl
ret
dec
push
xor
push
dec
mov
add
je
popa
xor
mov
repnz
pop
mov
sub
push
frstor
inc
fidivs
lds
inc
push
inc
and
enter
jne
out
movb
test
mov
das
sar
mov
push
shrl
idiv
subb
das
cmp
ret
mov
adcb
inc
sbb
and
add
add
jle
in
pop
mov
xchg
vdivps
sbb
jg
sbb
aas
dec
insb
dec
fwait
inc
in
ficomps
cmpb
cwtl
and
addr16
cmc
div
dec
cmc
xchg
cld
mov
out
aaa
es
mov
jmp
cmp
ret
mov
add
add
and
pop
pop
aam
inc
mov
lods
cmp
imul
adc
leave
add
push
dec
pop
dec
or
rcrb
dec
mov
push
arpl
or
stos
fs
xor
xchg
repz
test
push
and
and
fwait
in
push
push
or
inc
inc
and
pop
outsl
ss
or
add
out
addr16
jno
movsb
xchg
popf
sarl
dec
dec
mov
movsb
into
xor
test
movsl
loopne
fcom
mov
das
sbb
push
in
push
dec
cmp
mov
mov
inc
popf
cld
cmc
clc
rcll
mov
aas
xchg
out
out
fs
or
push
hlt
fsubrp
fwait
mov
or
jecxz
adc
mov
aas
mov
test
mov
mov
mov
sbb
lahf
dec
mov
in
mov
add
jmp
shr
fs
sub
lea
add
push
movsl
xor
xor
int
cmpb
jg
inc
xor
lret
cmpsb
push
or
movsb
dec
adc
int
add
or
imul
cmpsl
push
lahf
movsb
push
cmp
lret
cmc
gs
cmp
rcl
imul
rcrl
pop
pop
ds
insl
rolb
mov
mov
popf
cwtl
ja
dec
mov
adc
in
sbb
imul
push
leave
mov
aaa
add
mov
xchg
cwtl
aam
inc
mov
andb
or
cs
xor
sub
sbb
test
mov
test
leave
mov
pop
mov
jae
fwait
lods
rclb
add
xchg
cmc
jge
imul
inc
adc
pop
leave
repnz
mull
pop
push
shlb
push
jns
aaa
mov
add
sub
insb
lret
sbb
loop
dec
xchg
or
call
pop
dec
popf
jbe
je
mov
push
cmpsb
cmp
cltd
stos
dec
mov
test
add
push
mov
and
mov
scas
inc
jns
sbb
push
mov
adc
sbb
pusha
shlb
pop
sub
mov
or
and
outsb
mov
fadd
clc
ja
and
mov
leave
repnz
push
ror
sbb
mov
sub
adc
sti
sub
mov
inc
lods
cmp
fldcw
inc
pushl
push
data16
lret
push
insl
ret
inc
fstpt
and
xchg
jno
or
repnz
cmp
stc
sbb
shrb
pop
cli
pop
push
pop
leave
or
cwtl
lret
fnstenv
mov
ss
jg
cmc
sar
xchg
mov
cmp
out
add
sub
cltd
add
fsubr
lods
jne
jle
sbb
rol
addr16
fcoml
icebp
inc
gs
lods
dec
mov
inc
xchg
inc
loope
ret
in
cmp
mov
cwtl
fwait
mov
xor
orl
in
icebp
test
decl
aas
mov
lcall
xor
mov
sahf
cmp
dec
add
xchg
stos
mov
push
lret
xchg
ret
lcall
arpl
mov
int3
dec
dec
lds
lret
ljmp
shl
mov
daa
mov
scas
mov
icebp
mov
dec
push
loope
aas
sbbb
aad
jno
pop
lea
movsb
jne
jmp
add
push
and
jle
xor
xchg
push
mov
jl
pop
dec
dec
pop
and
ja
xor
push
jb
movl
test
push
into
out
pop
inc
xchg
adc
daa
lcall
cmc
and
push
pop
ret
push
in
leave
sti
fmuls
cltd
cmp
lock
ja
sbb
cmp
lcall
sbb
rep
xor
adc
xor
xchg
sbb
hlt
data16
js
addr16
add
fcmove
fisubs
pop
out
imul
cmp
repnz
pop
dec
jno
pop
inc
mov
leave
jnp
mov
and
or
fldcw
jl
dec
mov
dec
adc
sub
gs
stc
and
mov
iret
js
mov
out
ret
ljmp
rclb
cmp
js
loopne
lds
lahf
int
xlat
iret
mov
int
dec
mov
push
sbb
je
jne
movsb
incb
aaa
imul
sbb
dec
ljmp
cld
sahf
ljmp
jo
scas
xchg
push
mov
std
in
mov
pop
inc
xor
xor
xchg
jmpw
jb
xorb
cmc
xlat
mov
out
cmp
arpl
popa
leave
mov
int
orl
arpl
dec
lret
fdivr
arpl
sbb
out
push
inc
pop
adc
pop
or
or
fwait
packuswb
pop
cmp
xor
pop
lea
fildll
jl
mov
sub
adc
sbb
test
push
pop
in
xor
xchg
sub
loopne
xchg
mov
jbe
or
rol
xchg
stc
xchg
push
shrl
ret
sbb
xor
pop
mov
insl
mov
dec
test
add
dec
pop
jo
mov
icebp
enter
in
or
jbe
jnp
fiaddl
cmpsb
mov
mov
cli
push
jae
lods
push
jb
mov
pop
sub
xor
mov
movsl
out
or
popf
enter
mov
cmp
adc
jo
cmp
movsl
sbbb
and
orl
inc
lret
cmp
out
scas
js
xchg
fsubrl
mov
shlb
inc
xor
pusha
fsubrl
push
jl
rcrl
jle
cmp
xchg
inc
cmp
loope
mov
jmp
dec
aam
pusha
mov
xchg
mov
xchg
xorl
mov
sbb
sub
loope
and
mov
out
lret
mov
movb
mov
daa
inc
xchg
ret
xor
fnstcw
mov
ljmp
sub
mov
stos
cltd
or
cmp
xor
cmp
jo
and
adc
inc
ja
pop
adc
idivb
and
push
mov
hlt
lret
sbb
push
in
fcompl
adc
push
push
xchg
out
stos
ss
rcll
xchg
fimull
sbb
fs
gs
out
aad
fld
inc
in
cmp
pushf
mov
dec
pushf
and
nop
mov
pop
sbb
inc
arpl
dec
xor
sbb
dec
insb
outsl
push
hlt
mov
das
mov
je
lea
lods
push
inc
mov
fldt
aad
sets
jmp
cli
jg
push
test
pop
cmp
pop
inc
or
jnp
pop
mov
inc
lock
pminsw
xchg
scas
lret
xchg
push
in
mov
out
jecxz
adc
xor
test
mov
mov
jno
rclb
les
test
xchg
push
roll
bound
xchg
in
les
mov
ljmp
mov
mov
xchg
sbbl
ret
aas
mov
jecxz
xlat
push
jo
push
test
sbb
sahf
iret
mov
sbb
mov
stos
rcl
mov
les
push
movsb
lret
mov
add
cwtl
push
std
mov
jno
enter
push
clc
je
pop
and
add
sahf
inc
xchg
cltd
adc
push
cmp
cmp
std
and
mov
mov
loope
push
cli
inc
loop
mov
fwait
or
dec
add
inc
mov
cmp
adcb
adc
xor
mov
sbb
or
out
incb
and
add
aas
sbb
mov
lock
dec
push
mov
xchg
adc
out
xor
push
inc
pop
repnz
inc
stos
in
mov
lods
sbb
jo
ficompl
aad
xor
adc
mov
movsl
fcompl
sbb
pop
icebp
adc
add
out
fs
mov
lcall
or
subl
lcall
and
repz
das
fs
ja
hlt
shll
cmpb
icebp
pop
adc
push
insl
cld
fisttpll
popf
or
insl
and
xchg
sub
xchg
xor
push
out
and
test
add
fwait
xchg
movsl
pop
or
or
jecxz
xor
inc
cltd
icebp
and
jp
loopne
fdivrp
out
loopne
out
xchg
sbb
jmp
aad
mov
std
mov
push
pop
mov
ljmp
in
cmp
int
pushf
bound
leave
loop
fidivrl
inc
cmp
dec
or
dec
gs
insl
mov
fisttpll
cmpsb
aaa
movl
push
cmp
xor
adc
dec
hlt
in
cmp
out
je
fxtract
sahf
push
and
enter
dec
xlat
or
out
sbb
dec
inc
sub
ret
push
dec
jmp
out
mov
movsl
lret
fildl
jg
jo
jmp
lahf
inc
jle
push
mov
scas
adc
fs
adc
jo
push
mov
ficoml
push
mov
adc
and
cmc
fwait
outsb
add
adc
push
push
jnp
enter
and
mov
fldcw
roll
mov
or
xchg
xor
xchg
cli
push
sub
ja
je
adc
fwait
stc
adc
das
or
in
dec
fisttpl
or
lret
adc
mov
in
jmp
sub
push
les
fldl
mov
les
inc
push
mov
cmpsb
cmp
push
or
pop
jae
scas
xor
iret
cs
mov
mov
push
loope
in
add
std
push
mov
xlat
in
push
fs
cmp
out
xchg
cmc
add
xchg
fdivrp
into
cld
fdivrl
sub
cmp
pop
dec
clc
xchg
out
inc
stos
adc
ja
insl
enter
pop
or
mov
push
mov
jae
add
fsubr
stos
hlt
insb
or
fidivs
ss
xchg
mov
bound
add
jg
add
out
jecxz
shlb
loop
sub
popa
pop
mov
xor
jbe
cmp
adcl
or
jg
push
das
or
fnstsw
std
popa
js
add
push
aad
push
mov
sub
pop
ret
stc
mov
dec
pop
frstor
mov
adc
inc
mov
enter
mov
mov
mov
cmp
adc
cmpsl
bound
aaa
push
push
gs
xor
in
dec
jp
jnp
je
ret
cwtl
jle
xchg
push
cmc
outsl
sbb
fwait
cmp
cmc
sbb
insl
and
insl
jp
inc
cmc
andb
cltd
enter
shrb
jns
inc
xchg
test
ret
lret
ret
sbb
cmp
jmp
jns
jne
sbb
pop
push
popa
mov
pop
jnp
inc
lods
testl
rolb
mov
sbbl
lret
inc
jno
fnstsw
and
mov
in
dec
ret
fcompl
push
test
int3
sub
adcl
pushf
mov
sub
and
mov
fcoms
in
sti
mov
cmp
sahf
pushf
fiaddl
jne
and
dec
aaa
cmpsb
out
scas
dec
bound
pop
jg
repz
dec
jge
cmp
loope
in
jbe
xchg
mov
addr16
sbb
xchg
add
repz
mov
pop
sbb
mov
in
add
ret
xchg
lret
jb
jae
lahf
dec
in
mov
dec
xor
int
or
sti
xlat
hlt
mov
or
jp
pop
inc
test
dec
ljmp
nop
jg
and
flds
inc
outsb
sub
lahf
mov
fists
or
jae
popf
addr16
push
push
push
adc
and
ds
clc
mov
ficoms
mov
aaa
jge
lods
lret
mov
inc
mov
adc
cwtl
pop
mov
daa
cwtl
gs
test
sti
sahf
sti
dec
or
in
push
xchg
mov
inc
sub
fidivrl
popa
xchg
lods
fsubr
dec
xchg
adc
jle
test
mov
call
and
insb
mov
xchg
jns
mov
int3
lret
xchg
addr16
gs
mov
push
cmp
jns
sub
xchg
add
ds
ljmp
fadds
ret
inc
sub
and
das
out
shll
or
movsb
in
pop
push
testb
sbb
rcl
xor
insl
sti
sbb
pop
mov
cmp
js
insl
cs
mov
cmc
pop
sub
adc
mov
xor
jbe
xlat
mov
mov
lret
jp
jb
dec
lret
pop
std
pushl
rcll
fcom
mov
mov
inc
andb
notl
push
cmp
fdivrs
es
pusha
cwtl
stc
dec
inc
adc
jno
out
fisubrs
sub
pop
sub
rcr
mov
jno
mov
mov
shlb
enter
lods
jns
js
push
jnp
test
and
cli
push
jnp
aas
sub
fists
imul
adc
xchg
sub
mov
xor
leave
int
fcoms
addl
mov
lahf
int
inc
mov
cmp
in
mov
fdivrs
xchg
out
or
cmp
in
call
fst
and
mov
xlat
sub
pop
int3
sbb
pop
adc
push
inc
aad
fldl
pop
lods
or
aam
mov
in
or
sahf
adc
mov
pop
mov
add
sub
push
bswap
loopw
xchg
mov
movsl
ja
cmp
cmp
fwait
jo
xor
std
sub
dec
pop
lods
pushf
pop
int3
cmp
fistpll
mov
lods
pop
movsb
enter
jmp
or
dec
mov
sub
mov
jb
push
repnz
notl
test
hlt
sbb
mov
mov
pop
jbe
adc
stos
push
lock
sub
frstor
mov
cmpsb
cmp
icebp
or
jp
dec
mov
cli
into
inc
dec
cwtl
push
enter
pop
call
sub
cmp
cmp
imul
out
imul
sub
js
or
sbb
sarb
lods
in
test
pop
xchg
cmpsl
ja
dec
int
and
call
js
add
jb
add
imul
cmp
or
loopne
das
incl
jl
ljmp
push
jp
xor
into
xchg
dec
cld
aaa
aam
pop
push
adc
sub
jno
inc
negl
jecxz
jae
dec
pop
das
mov
add
mov
shrl
hlt
dec
out
add
sub
imul
jae
test
test
xchg
xchg
mov
das
push
add
xchg
jo
cmpl
into
sub
mov
jne
daa
les
push
dec
aaa
gs
jno
call
and
cmp
aaa
js
xchg
jl
and
push
lods
mov
or
cwtl
pop
out
cmpb
mov
leave
push
add
iret
in
mull
cmp
and
sti
or
inc
jge
mov
cmp
and
mov
mov
xor
scas
adcl
mov
pop
mov
inc
cmp
pusha
sarb
fwait
rcrb
test
cs
lcall
shll
stos
outsl
jmp
scas
mov
and
xchg
xchg
mov
cmp
loop
clc
jnp
jnp
scas
cmp
xor
cmpsl
lods
out
pop
mov
bound
ljmp
xchg
mov
inc
frstor
jmp
push
orl
loope
gs
mov
fwait
das
out
mov
enter
inc
das
icebp
in
leave
jg
push
cmp
mov
outsb
hlt
sbb
repnz
mov
mov
aaa
cmp
push
cmp
jl
aaa
mov
iret
jbe
xchg
fisubs
xchg
xchg
xchg
xor
dec
in
xchg
rcl
aad
jp
test
mov
fdivrl
paddw
cmp
les
decb
bound
cmp
mov
movsb
jne
lret
jl
or
mov
sbb
xor
add
push
scas
jno
insl
popa
mov
cmp
and
test
jo
inc
xor
sub
in
push
fisttps
add
mov
pop
jle
jp
loopne
cmp
jecxz
add
aam
leave
popa
mov
jae
push
rolb
cmpsl
sbb
inc
fdivrs
cmp
stos
or
gs
mov
add
xor
scas
fidivrl
popa
lcall
subl
or
inc
or
push
mov
pop
mov
out
mov
cmp
pop
leave
mov
in
mov
adc
insb
adc
lock
dec
xchg
push
mov
add
cld
lds
in
ss
mov
out
jae
dec
adc
pop
add
stc
inc
lret
mov
adcb
mov
ljmp
test
sbb
and
add
imul
or
xchg
pushf
sarb
stc
test
cld
sbb
xor
imul
daa
mov
sti
mov
out
add
loopne
inc
cmp
std
imul
repnz
dec
jmp
mov
adc
iret
in
mov
cmp
mov
fsubr
push
xchg
cmp
or
lea
push
sbb
xor
and
xchg
call
add
js
inc
add
popa
xchg
sbbl
rcll
dec
leave
loope
filds
cltd
push
lret
xlat
dec
clc
int3
xchg
stos
dec
push
ret
add
ljmp
mov
call
stos
jns
cltd
xor
or
jp
testl
pop
jecxz
dec
sarl
push
mov
int3
mov
jge
lds
push
cs
cmp
jmp
inc
std
xor
in
into
adc
push
add
pop
mov
xchg
fnstcw
pop
push
pop
mov
inc
xchg
sub
sub
jb
aad
push
call
mov
enter
mov
lock
xor
sub
fdivrs
jbe
into
popa
pop
mov
shrb
or
mov
mov
arpl
adc
aaa
es
out
jo
dec
and
mov
loopne
loop
push
insb
sub
push
sbb
sub
pop
jno
dec
into
sbb
cmpsb
cmp
pop
and
and
rorl
lahf
sbb
das
xor
out
orb
inc
out
in
faddl
xchg
sub
arpl
or
sub
pop
scas
inc
dec
fs
orb
testb
int3
orl
int3
test
jecxz
dec
add
addr16
xchg
cmp
shl
orb
movb
lock
pushf
mov
outsl
js
nop
jp
cli
mov
mov
sub
xchg
adc
pop
jnp
mov
daa
cmp
or
insl
je
cmc
or
jg
xchg
jno
repz
sub
jecxz
nop
mov
fucomip
pop
pusha
sbb
xor
bound
les
jg
outsb
call
ss
les
test
sub
jno
add
daa
imul
ret
cmc
fs
and
addr16
test
shll
push
sub
mov
mov
jl
push
inc
pop
inc
test
and
ret
jp
mov
aas
aad
loop
aam
movsl
xchg
lret
pop
push
fimuls
mov
repz
sub
sti
push
adc
pop
sbbl
decb
lods
and
cs
leave
inc
movsl
popf
add
mov
cmc
scas
sub
idivb
or
cmpsb
dec
adc
dec
lds
test
inc
and
movsl
arpl
cwtl
add
scas
lods
ss
push
cmc
mov
popa
cmp
jb
lds
andb
ret
sbb
dec
mov
data16
iret
xor
popa
aaa
stos
and
pop
lcall
imul
roll
xchg
sbb
out
mov
jae
pop
jno
sbb
test
xchg
jp
add
insl
xchg
xchg
fnstsw
jbe
ja
movsl
cmp
cmpb
pop
lock
push
leave
xor
xchg
scas
inc
push
xor
pop
jle
data16
icebp
push
inc
inc
popa
iret
test
and
cmp
repnz
mov
lcall
lods
cmp
mov
pop
and
ret
sbb
cli
shlb
sarb
or
or
push
sbb
dec
jnp
jo
xchg
into
push
pop
xchg
xchg
lahf
fcom
push
inc
cmp
pushf
iret
cmp
in
sub
pop
icebp
cmp
je
add
push
mov
jbe
pop
clc
mov
add
mov
ret
jge
mov
ret
mov
mov
pop
or
sarl
pop
pop
lcall
repnz
stos
icebp
adc
movsl
xchg
stos
xchg
lahf
dec
push
test
xlat
inc
js
xor
inc
jle
add
and
mov
sub
push
sbb
fildll
repz
int
iret
nop
xor
xor
push
jno
xor
cmpsb
xchg
mov
pop
jnp
loope
sbb
fdivrs
fsubrl
fstpl
pop
stc
js
sbb
mov
out
adc
cld
dec
xchg
pop
movsb
js
xlat
cmp
fdivrl
xchg
push
inc
jae
clc
in
and
stos
add
cltd
mov
pop
addr16
jns
mov
jl
dec
pop
popa
and
lea
test
inc
add
push
into
rcll
popf
jo
sbb
popl
inc
in
adc
out
scas
out
pop
cmp
outsb
jno
lret
or
and
ss
push
sub
add
sbb
and
add
in
push
in
in
rcr
pop
inc
mov
dec
mov
clc
sti
jp
mov
test
mov
out
push
test
push
fwait
pop
lods
ret
fsubl
xchg
pop
lods
leave
adc
pop
mov
fisubs
insl
sub
test
aas
fwait
popf
jb
std
push
dec
insb
sbb
aad
mov
movsl
mov
cmpsb
adc
jae
dec
cmpsl
push
and
cmpsb
jne
fstpt
xor
sub
fs
push
mov
xor
add
xlat
push
test
mov
int3
dec
add
sub
dec
mov
push
into
cli
jae
int3
out
fisubs
xchg
pop
dec
call
dec
loope
out
frstor
sub
ret
mov
dec
mov
mov
lds
aaa
popf
into
xchg
divl
jge
xchg
pop
xchg
ss
out
out
test
adc
mov
outsb
repz
sub
dec
cmp
orl
cwtl
iret
mulb
sub
cmp
in
fs
xchg
in
inc
cld
sub
mov
push
lds
xlat
mov
insb
or
xor
inc
jo
pop
sbb
mov
jle
mov
add
cld
or
lret
popf
mov
or
jb
rcr
mov
pop
insb
fsubl
push
sbbl
push
test
loop
xor
imull
int
imul
out
dec
cmp
jb,pn
or
fs
fdivrp
pop
or
leave
stos
lahf
or
movb
add
fwait
lds
xor
sbb
jmp
lds
push
stc
cltd
adc
sbb
std
pop
bound
xor
movb
push
pop
popa
sbbb
mov
mov
pop
jl
dec
xor
cmp
push
jb
mov
dec
lcall
cltd
push
dec
leave
jp
sub
mov
pop
xchg
pop
jae
or
push
mov
jo
sbb
mov
mov
jg
pushf
loop
or
sbb
cs
and
dec
aas
mov
lods
xlat
push
ljmp
pop
cmp
ds
daa
stos
mov
pushf
sub
xchg
je
xchg
mov
cmp
push
data16
cmp
call
je
fiaddl
sbb
cld
int
incl
jbe
repnz
jmp
mov
xlat
ret
mov
mov
lods
push
sub
pushf
rcrb
flds
testb
enter
shl
into
push
rol
jne
sarb
mov
leave
or
icebp
les
adc
test
nop
jb
outsl
bound
xor
add
jne
or
cmp
pop
pop
cmp
lods
adc
dec
leave
loope
sbb
cld
stc
pop
mov
hlt
ret
or
sbb
stos
fcomps
loop
mov
jle
mov
cmc
pusha
fisttpl
inc
cld
xor
imul
mov
notb
pop
test
out
hlt
je
roll
mov
sub
movsl
dec
pop
cmp
ret
jp
jp
mov
dec
push
cmpsb
inc
fstl
sbb
push
lock
cmc
inc
aas
adc
fnstenv
push
leave
xorb
int3
xor
popf
and
ret
inc
int3
dec
xor
subl
out
and
add
inc
push
push
pop
or
call
push
xchg
hlt
fsubs
pop
ljmp
cwtl
aad
imul
ss
or
lea
pop
mov
mov
mov
lret
mov
xor
sbb
pop
and
cmp
pusha
loopne
mov
sub
movsl
lods
aam
out
jnp
pushf
mov
dec
rorb
jle
pop
mov
jnp
inc
sub
push
outsl
mov
aas
testl
pop
cli
lcall
xlat
rclb
aas
popf
sub
sub
pop
outsb
xchg
mov
aas
cmp
mov
je
cs
sub
mov
dec
test
or
call
sarb
push
int3
mov
jmp
negl
out
adc
enter
loopne
push
iret
mov
and
test
add
xor
out
roll
sahf
clc
in
rcr
push
add
jae
fldl
in
adc
push
iret
xchg
bound
mov
int3
xor
popa
xchg
jb
inc
iret
insl
ljmp
pop
sub
pop
push
rorb
mov
xorb
ret
jp
jg
dec
insl
lds
jle
xor
jnp
sbb
iret
clc
inc
push
mov
ss
mov
add
gs
add
ljmp
je
pop
out
mov
mov
inc
in
sbb
push
dec
cmp
loope
mov
mov
mov
xchg
divb
aas
or
movsl
mov
mov
sbb
sub
cltd
cmp
cltd
and
push
stc
pop
scas
cmp
jnp
push
push
mov
cmp
fildll
sbb
add
push
sub
sbb
test
test
adc
cmp
popa
mov
dec
xor
mov
push
jge
mov
roll
pop
lret
iret
es
cmp
int3
pusha
mov
dec
rclb
mov
pusha
imul
push
leave
jb
jg
stc
mov
mov
adc
push
jnp
sbb
mov
push
sub
scas
sbbl
and
nop
out
aad
mov
dec
pop
mov
cs
leave
test
adcl
push
cmc
sbb
aam
inc
cmp
adc
mov
cltd
pop
daa
pop
sbb
and
add
mov
mov
mov
and
das
ss
rcll
aad
cld
or
cmp
inc
cmpl
addr16
cmp
or
inc
or
fdivl
rclb
fsubr
mov
mov
sbb
mov
cmp
mov
inc
mov
mov
adc
and
cmp
ja
shrb
icebp
xor
mov
mov
sub
imul
or
xchg
aaa
je
jmp
aas
pop
enter
jl
pop
stc
nop
cld
and
mov
stos
sarl
popa
xorl
outsl
mov
dec
insl
out
sbb
dec
adc
jns
dec
ret
scas
rcrb
jle
les
notl
enter
dec
mov
sbb
add
addl
mov
push
iret
mov
cld
or
in
sub
lret
and
adc
mov
dec
lds
ds
push
invd
cltd
jge
lock
xchg
xor
lcall
mov
jg
cmp
into
pop
xchg
add
push
inc
mov
mov
sbb
xchg
or
in
pop
add
pusha
in
adc
and
xchg
push
mov
enter
and
add
xor
xor
test
lret
and
in
cld
cmp
jmp
ret
mov
xlat
loopne
inc
sbbl
aaa
mov
dec
sub
mov
stc
jp
sub
dec
imul
cmp
add
push
pop
mov
ret
pop
push
out
pop
sbb
fst
gs
repz
pop
shl
xchg
sbb
fwait
mov
xchg
dec
je
jp
sbb
xchg
movsb
cltd
sub
push
mov
mov
les
test
xchg
mov
adc
test
push
jne
add
pop
adc
pop
jl
inc
add
pop
repnz
stos
xlat
dec
mov
sub
std
les
cld
sbb
stos
nop
push
popf
popf
jp
push
push
mov
push
mov
adc
push
lahf
icebp
pop
adc
pop
cmp
mov
push
jbe
add
insb
stos
hlt
dec
or
cmpsb
sbb
or
push
sti
out
mov
adc
das
add
stos
shrb
in
in
mov
or
dec
dec
dec
or
inc
jae
jno
das
mov
frstor
inc
jmp
das
jbe
test
xor
inc
mov
push
loope
es
push
mov
lret
push
scas
cld
fcomi
or
push
and
pop
aad
fcmovb
xchg
and
jmp
enter
test
pop
shll
mov
mov
mov
clc
addr16
mov
add
and
inc
ficoms
std
jne
dec
pop
jg
jno
fs
sub
inc
add
lock
insb
sahf
cmpsl
nop
add
inc
popl
or
push
or
inc
lcall
pop
sbb
inc
xor
faddp
insb
pop
xor
dec
dec
loop
pop
ljmp
sbb
outsb
leave
sar
pushf
and
mov
dec
sahf
loope
rcl
sbb
mov
pusha
mov
sbb
aam
jecxz
inc
jns
sbb
scas
mov
pop
dec
sbb
pop
pop
sub
ds
mov
push
push
dec
cmp
in
sahf
popa
mov
cmp
sbb
out
adc
add
sub
push
lea
mov
insb
cmp
jmp
and
punpcklbw
ret
movsb
mov
push
push
cli
jo
fsubrs
call
add
outsb
cld
cmp
cld
hlt
mov
aaa
fld1
pop
xor
jg
pop
and
test
and
cmp
push
mov
push
or
dec
lret
jns
shrl
lret
pop
add
aaa
inc
stc
fs
idivl
sub
inc
cmp
or
jl,pt
shrl
or
add
or
xor
cmp
imul
jg
je
sbb
cwtl
jo
loopne
push
icebp
mov
or
sahf
jmp
xor
cmp
ss
xchg
inc
fsubr
cmp
outsl
xchg
mov
in
cmp
sbbl
jl
xchg
ficoms
pushf
inc
test
jl
mov
dec
adc
test
pop
mov
subl
negl
jl
stos
xchg
mov
push
xor
push
repz
loop
and
out
ds
cmc
in
mov
test
push
outsl
hlt
clc
out
loope
jp
pop
hlt
mov
imul
sahf
add
repz
inc
add
cmc
std
sbb
sbb
mov
scas
push
lds
inc
xor
clc
mov
jb
data16
push
add
mov
sub
xlat
in
xlat
jo
repnz
mov
jl
or
push
xchg
gs
lret
lds
jno,pn
loope
call
add
pushf
push
shlb
pop
inc
xor
jg
cmpsb
jo
mov
rorb
or
sub
cwtl
idivb
dec
sahf
and
jp
aam
andb
pop
sub
push
decl
lea
sub
mov
pop
stc
xchg
mov
cmp
cmpsb
cli
pusha
push
jo
lcall
cli
stos
fimull
imul
sub
jmp
test
and
xor
sbb
lret
popf
adc
mov
enter
loope
insb
inc
and
ret
test
adcl
add
icebp
popa
ffree
lods
adc
cmp
aad
popf
xchg
add
xor
shrl
shrl
push
scas
loop
sbb
jns
ljmp
mov
fucomi
inc
repz
jne
inc
add
popf
idivl
push
scas
mov
or
mov
arpl
sbb
neg
mov
adc
movsb
cmp
mov
adc
nop
inc
cwtl
je
mov
mov
je
xchg
aad
int
test
ret
cmp
mov
jmp
xor
cmpsl
rolb
sti
xchg
or
jecxz
mov
movsb
out
in
cwtl
xor
imul
js
ds
jno
cmp
xor
mov
dec
sub
add
cmp
push
adcl
inc
dec
jno
cmp
adc
data16
test
add
fucomip
rorl
std
xchg
fdivs
mov
mov
xor
inc
mov
addr16
or
xchg
scas
repnz
pop
xor
sub
maxps
jl
icebp
mov
sti
pop
shl
jae
cmp
in
push
adc
xor
out
jnp
repz
jecxz
mov
push
or
fsubrl
je
call
shrl
arpl
mov
mov
pop
pop
sti
inc
push
and
mov
mov
loopne
lret
mov
out
mov
ss
stos
rcrb
imul
test
lahf
dec
repnz
dec
data16
pusha
stc
sar
and
xchg
cmc
adc
cli
cmp
xor
pop
test
lods
roll
dec
mov
in
cmpsb
das
mov
and
push
orb
inc
fcmovb
lea
stc
inc
adc
mov
sarb
sbb
aam
ret
ljmp
into
fwait
out
cmp
aad
js
mov
pop
mov
jne
test
insb
cs
roll
dec
addr16
pop
movsb
lods
rcll
push
dec
fidivs
outsl
xchg
inc
or
xchg
out
mov
das
cmp
and
mov
cltd
cmpsl
inc
cmp
dec
cmp
data16
inc
add
test
pop
ljmp
sbb
cltd
mov
mov
lcall
inc
cmc
pop
outsl
cmp
popa
sub
pop
add
stos
jno
sub
or
clc
inc
cmp
gs
and
aam
aam
sub
fiaddl
cli
mov
insl
stc
jno
xchg
push
add
pop
lods
test
fmulp
fstps
add
push
jno
outsl
xor
and
and
leave
in
pop
aad
dec
fldenv
int3
jg
ret
or
xchg
xor
mov
scas
cmp
inc
ficompl
sub
pop
fisubrs
xor
rcrb
repnz
inc
lcall
int
adc
cmpsl
jle
ja
pop
mov
jb
fdivp
jnp
adc
lea
in
aad
ja
iret
xchg
hlt
outsb
shlb
lahf
int3
ret
sbb
std
fistps
add
pushaw
ja
add
movsb
and
add
fnsave
mov
mov
push
sub
imul
cmp
push
pop
popf
in
dec
mov
mov
mov
incb
pop
adcb
bnd
dec
cmp
cs
mov
mov
jle
ret
push
pop
xorl
stc
adc
in
js
dec
rclb
movsb
mov
cmp
dec
dec
movsl
add
cltd
fldenv
into
out
and
ret
dec
mov
mov
jns
dec
dec
out
repnz
repz
out
or
pop
inc
mov
mov
xchg
leave
imul
ja
sbb
aaa
ds
sub
stc
adc
jge
imul
scas
lahf
adc
int
inc
fldl
ja
push
jmp
inc
or
nop
cmp
sub
mov
pop
iret
xchg
mov
adc
cmp
aam
jg
inc
stc
and
cld
mov
jns
jne
inc
orl
xor
mov
xchg
inc
xlat
movb
shlb
mov
cmp
pop
iret
jnp
mov
add
pop
xchg
iret
mov
mov
sub
lahf
jo
inc
dec
pop
cltd
dec
sarb
sub
inc
shrb
fidivrl
add
cmp
out
outsb
sub
fs
add
jge
mov
mov
shll
pop
cmp
es
je
stc
mov
xor
mov
mov
enter
jns
mov
jge
sbb
sbb
sub
sub
push
or
xor
sbb
frstor
test
adc
out
aam
sbb
popa
fstpl
and
inc
pop
mov
xlat
scas
data16
sbb
or
cmp
xor
data16
xor
push
addb
mov
inc
dec
lcall
fs
pop
lcall
sbb
sbb
sub
mov
jmp
test
push
fdivr
xor
xor
pop
inc
pop
push
xor
data16
dec
jmp
ds
xchg
cmp
inc
pop
pop
idivb
add
in
pop
xor
sbb
dec
mov
cmp
and
sahf
and
insb
cwtl
insl
lock
gs
mov
pop
mov
out
and
and
ret
repz
loopne
sbb
jbe
jno
imul
push
push
add
ss
pop
shll
divb
sarb
decb
mov
inc
insb
xchg
lcall
lea
out
jae
mov
push
xchg
jp
fimuls
pop
mov
lret
addr16
push
scas
cmp
leave
imulb
jmp
xor
and
js
ja
mov
xchg
hlt
mov
std
mov
in
xor
mov
or
shrb
stos
xorl
pop
cmpsb
fwait
shlb
data16
sub
repnz
or
mov
dec
or
imul
aaa
cwtl
sub
mov
push
add
fwait
scas
lahf
pop
mov
fdivs
push
jp
inc
enter
sbb
arpl
fistps
push
movsl
les
js
push
pop
ss
rol
inc
mov
or
mov
fcomip
outsb
movsl
sarl
sub
movsl
data16
push
daa
push
or
imul
and
jno
jecxz
push
mov
mov
and
popl
dec
repnz
ret
leave
pop
mov
cmp
jno
push
xchg
pop
fsubs
out
mov
pop
icebp
dec
mov
mov
outsb
push
xor
imul
fcmovb
loop
adc
inc
xor
add
cld
fs
rol
xchg
rorb
sub
jae,pn
jg
add
call
out
mov
xchg
es
addr16
mov
sbb
jne
aad
pop
mov
pop
iret
pop
ljmp
mov
insl
push
push
scas
mov
xchg
inc
leave
stos
push
jle
mov
mov
dec
mov
adc
xor
int3
imul
xor
push
jecxz
std
shrl
test
jb
jb
mov
sti
mov
mov
sahf
lea
sbb
jle
fucomp
push
pop
pop
mov
cmp
push
pop
jmp
pushf
mov
inc
mov
push
imul
ds
sbb
test
arpl
rorb
mov
icebp
xchg
das
add
gs
imul
clc
mov
pushf
sbb
bound
sub
shlb
test
popa
cli
or
ljmp
and
push
or
lods
aam
daa
dec
filds
into
int
loop
bound
lahf
mov
inc
fsubrs
shr
adc
xchg
hlt
and
test
scas
mov
and
inc
ficomps
push
fwait
mov
cli
push
test
iret
jns
lahf
push
pop
mov
das
xchg
mov
and
ja
xor
xlat
or
outsb
cmpsl
mov
shl
or
push
data16
sbb
imul
inc
std
mov
fcoml
jne
add
scas
orl
imul
ja
mov
andl
clc
xlat
xor
fistl
adc
or
test
test
fiadds
dec
subl
or
sbb
pop
jae
std
inc
jne
adc
mov
xchg
sub
adc
in
dec
shrl
xchg
add
test
and
ficoml
push
inc
fwait
fwait
pop
mov
push
mov
int3
add
icebp
roll
insl
jae
mov
popf
fimuls
mov
cmc
cmp
nop
mov
dec
add
iret
xchg
cmpsb
push
xchg
pop
or
lds
clc
xor
daa
shrb
clc
lahf
xor
das
in
rcrb
das
jmp
repz
jbe
mov
fisttpll
mov
mov
xor
imul
mov
test
or
pop
ss
push
mov
mov
arpl
mov
push
out
fistl
stos
and
or
sbb
pop
mov
or
fistps
jae
sub
push
push
xchg
and
xorb
sbb
nop
add
outsb
bound
jmp
jno
shrl
add
pop
or
int
mov
xor
lret
mov
loope
bnd
rcll
mov
mov
int3
adc
pop
and
xor
cli
push
pushf
fs
test
dec
mov
fisttps
xchg
ja
shll
repnz
push
xchg
andb
jl
add
popl
movsb
dec
add
sti
cli
cltd
out
call
cmpl
pop
xchg
pushf
sub
mov
inc
gs
int
inc
loopne
push
hlt
dec
shlb
mov
fs
adc
mov
cmpsl
or
dec
mov
sahf
loope
push
mov
jno
sbb
jl
sahf
imul
in
pop
jmp
push
cwtl
lret
sbb
mov
add
std
cld
ja
mov
dec
dec
in
cmp
imul
xlat
inc
test
jno
mov
insb
test
inc
xchg
ja
push
test
dec
push
xorl
fs
lods
nop
mov
sub
lcall
stos
push
sub
cmp
sbb
lds
mov
mov
gs
stc
cmp
movsl
and
adc
addr16
jo
popa
or
out
outsl
push
push
int
pop
add
xchg
test
js
pop
push
jbe
jg
push
fcoms
dec
sbb
sub
test
xchg
mull
rcrb
mov
inc
add
out
insl
mov
cwtl
lods
add
dec
push
push
jp
jbe
push
lcall
adc
push
mov
pop
push
rcr
xor
rorb
addr16
cmp
fisubl
insb
mov
jge
push
sub
pop
adc
sbb
gs
fidivs
gs
sub
iret
dec
stc
mov
xor
jmp
cmpsb
sti
lea
leave
addr16
mov
push
test
push
movsl
sbb
jae
mov
and
jmp
inc
jge
sahf
fldenv
outsl
mov
scas
popa
into
outsb
dec
shlb
loopne
shlb
xor
cmp
scas
cmp
aas
sub
or
push
lds
mov
test
insb
popf
add
lods
pop
mov
add
outsl
movsl
mov
pop
icebp
push
popa
jl
push
incb
mov
inc
repnz
mov
lods
adc
mov
adc
dec
scas
lock
mov
or
leave
jne
sub
rcl
rol
stc
pop
shl
jecxz
jle
xchg
aas
leave
aad
out
sub
aam
sub
icebp
and
xchg
bound
xchg
mov
gs
rclb
test
in
mov
mov
les
xchg
fdivp
lret
int3
int3
adc
xchg
or
dec
cmpb
inc
shrl
pop
mov
jb
xor
pop
leave
xorl
xlat
dec
sub
push
mov
fucom
lods
js
fwait
sbb
pop
les
xchg
xor
insl
cmpl
aad
ret
cwtl
iret
filds
pop
pop
jne
out
iret
test
xor
xchg
jo
jno
insl
jae
insb
mov
gs
adc
pop
add
mov
mov
call
jnp
or
add
add
xchg
mov
pop
mov
lods
pushf
aam
xor
and
fadds
dec
repz
js
add
xor
mov
dec
xchg
sub
stos
enter
lret
ktestw
test
jae
int3
pop
into
jp
popf
mov
mov
mov
xor
inc
jno
sub
xorb
lcall
and
xchg
ds
in
xchg
outsl
and
cmp
cmp
sbb
fisubl
adc
push
pop
cmp
pop
stos
mov
mov
mov
aad
ljmp
cmp
ss
mov
xlat
gs
aas
mov
jne
push
adc
add
mov
lock
mov
lods
insb
cmp
adc
fwait
push
dec
outsl
scas
inc
shrl
push
das
mov
xor
push
sti
dec
pushl
adc
idiv
mov
data16
lds
pushf
int3
movsl
std
test
lret
adc
mov
addr16
lret
es
xchg
ss
sbb
add
insb
push
scas
or
icebp
or
shlb
and
cmp
fists
or
aaa
jnp
out
popf
xor
dec
out
push
pop
loope
xor
sub
or
clc
jns
cmp
inc
cmc
pop
sti
xor
push
hlt
push
inc
repz
pop
xchg
cmp
popf
or
or
mov
insl
xor
aad
ljmp
test
or
jae
or
shl
mov
add
push
push
lea
cltd
std
jle
std
or
iret
jmp
lfs
ret
or
pop
mov
lock
ss
cmp
sub
mov
cmp
cs
in
mov
fildll
cli
pop
mov
mov
mov
or
jmp
xlat
mov
into
imulb
bound
movsb
xchg
mov
mov
lea
cmc
mov
mov
pop
add
pop
and
or
pop
mov
sub
iret
lcall
into
mov
sbb
sar
in
cltd
push
sbb
pushf
mov
nop
sbb
cmp
mov
add
jns
adc
mov
mov
mov
add
loopne
push
insl
cmp
or
in
movsl
fs
and
sahf
jl
cmp
inc
pop
mov
imul
mov
loop
test
xor
and
cld
arpl
fsubr
ja
jno
xlat
dec
movsb
flds
mov
pop
sahf
fldcw
mov
in
mov
lret
stos
pop
aad
aad
xchg
mov
inc
adc
test
enter
mov
push
das
and
fldl
inc
pop
jge
sbb
jl
bound
lea
mov
fnstenv
adc
cmp
xor
in
push
xchg
lcall
daa
arpl
xor
push
xchg
inc
pop
jne
mov
clc
es
mov
shlb
les
stos
fsubl
adc
les
inc
push
lret
int3
sbb
fldl2e
popa
or
imul
adc
dec
lret
mov
lock
mov
jbe
cmp
inc
inc
mov
test
dec
ror
lds
stos
in
shr
inc
pop
sbb
lret
adcl
out
and
cmpsl
add
xor
jns
xchg
and
pop
lods
fstpl
imul
arpl
std
pop
mov
iret
jmp
add
jnp
fld
or
add
sub
pop
push
jecxz
mov
jl
rcrl
or
add
scas
jne
outsb
xchg
inc
mov
loope
sbb
cmp
xchg
imul
and
push
pop
int3
adc
inc
loopne
stos
or
add
int3
mov
pop
pop
and
in
add
push
stos
jp
mov
or
push
imul
jle
jne
loop
sbb
add
cmp
jnp
iret
push
jbe
fistpl
sub
std
sbb
cmp
add
mov
inc
loope
test
or
mov
sub
aam
and
inc
inc
jmp
popa
xchg
sub
jge
inc
scas
lock
dec
and
fisttpll
adc
push
mov
lods
addl
fdivrs
cmpsl
dec
lods
rol
xor
out
adc
stos
mov
daa
test
cmp
fnstsw
jecxz
imul
cs
sahf
pop
insb
xchg
scas
shll
dec
test
push
mov
mov
sbb
aam
sub
test
push
xlat
push
and
cmp
jo
gs
in
xor
inc
mov
mov
and
mov
dec
fnsave
fists
xchg
inc
pop
xchg
sbb
mov
lcall
push
rclb
fisubrs
hlt
jne
jbe
add
mov
outsb
iret
out
push
es
xor
test
clc
cmc
pop
leave
push
scas
mov
inc
stos
arpl
mov
mov
mov
mov
lret
add
stos
mov
sub
mov
fcmovu
or
add
hlt
repnz
mulb
in
roll
cli
stos
imul
outsl
xchg
popa
subb
mov
pop
and
clc
loope
ret
out
xor
mov
int3
gs
cld
jne
rcrl
stc
pop
cmc
sub
mov
je
in
pop
hlt
in
popa
pop
call
shl
imul
aaa
mov
in
insb
xor
adc
in
flds
inc
xor
test
leave
push
data16
xor
pop
fisubl
arpl
mov
arpl
in
pop
add
mov
mov
adc
sbb
dec
popf
sti
lds
xchg
loopne
inc
dec
pop
ss
int3
add
in
ljmp
inc
sub
jbe
xchg
sub
sets
adc
push
outsl
adc
xor
fistpll
addl
addr16
lret
clc
jbe
test
js
loop
adc
fwait
ret
add
or
stc
clc
mov
mov
push
pop
test
in
cmpsl
adc
sub
pop
popa
subb
lds
sbb
iret
xor
mov
xorb
lea
sbb
shl
and
xlat
add
rcll
jl
or
sub
mov
imul
orl
negb
loopne
jg
dec
jmp
xor
cmp
mov
sbb
sub
cld
cmpsb
int
idivl
decb
lods
cmp
push
stos
and
jmp
lods
ja
lods
fnstcw
mov
pop
subb
gs
test
outsb
std
inc
lea
lods
mov
mov
jg
sahf
in
xor
xlat
pushf
jg
push
pop
xor
repz
mov
mov
loop
sub
dec
jp
dec
pop
adc
std
in
movsl
fidivl
clc
mov
mov
sbb
xor
inc
xor
xor
push
mov
add
imul
out
mov
xchg
pop
in
std
sbb
push
cmp
sti
in
sti
int
pusha
xor
and
cmp
repz
mov
sbb
xchg
int3
stos
js,pt
and
movsl
xor
in
mov
lea
sbb
mov
imul
out
fcomp
adc
pop
sub
dec
push
pusha
scas
aas
dec
cwtl
sbb
aam
dec
nop
scas
ss
ret
and
and
and
in
js
arpl
stos
je
mov
inc
mov
inc
adc
xchg
jo
xor
jo,pn
fbld
add
sbb
loope
hlt
ds
mov
fidivrl
add
and
aam
lret
movsl
sub
pop
adc
movsl
or
jb
lahf
dec
cwtl
mov
stc
and
lcall
and
test
icebp
mov
add
aam
sarl
and
cwtl
xlat
push
mov
fstpl
mov
lea
push
add
jae
adc
and
mov
test
sahf
and
adc
cmp
inc
mov
xlat
mov
xchg
das
add
mov
sbb
jb
aas
jne
scas
mov
in
adc
or
cmp
enter
rcrl
incl
pop
xchg
jne
and
or
imul
cltd
shrl
imul
cmp
repnz
gs
push
lds
xlat
or
jnp
sbb
inc
fsubs
mov
and
ljmp
jnp
in
push
add
dec
add
stos
fistpll
sub
aam
data16
addl
mov
gs
jne,pn
in
mov
inc
lods
xor
add
in
adc
mov
pop
arpl
aas
or
mov
mov
cli
daa
sbbl
jg
mov
ret
inc
adc
aad
aad
outsb
cmpsb
rclb
mov
mov
jne
sbb
jl
and
xor
rclb
sbb
and
je
int
mov
mov
ret
add
in
jno
dec
stc
jb
push
lcall
or
das
adc
xchg
pop
out
lret
dec
addb
data16
jnp
add
jne
pop
mov
pop
dec
ja
mov
lahf
stc
popa
je
mov
ja
fwait
jp
cmp
mov
inc
dec
xor
and
lea
jl
cmp
pop
mov
mov
loopne
andl
and
test
pinsrw
into
repnz
and
mov
or
dec
movl
or
jae
xchg
jno
ret
test
mov
stos
jns
fistps
shrl
outsb
aam
add
mov
and
or
adc
sub
mov
xlat
in
dec
rcr
sub
inc
rorl
clc
test
sti
enter
out
xchg
mov
repz
and
cs
push
iret
insl
cmp
in
or
ret
cs
mov
ret
push
insb
jno
mov
lahf
sbb
jae
adc
push
pop
orb
scas
mov
push
mov
xor
pusha
jg
sbb
cli
jae
sbb
jnp
push
cmpsb
inc
sbb
add
test
mov
mov
cli
mov
dec
and
test
fldcw
cmc
pop
decb
daa
or
loopne
movsl
pusha
sub
test
xlat
mov
xchg
xchg
jl
popa
adc
sub
stc
test
ja
jle
sti
lret
fs
cmp
gs
sbb
cmc
cmpsb
negb
sbb
sub
call
pop
ja
sub
lock
sub
idivb
sbb
or
mov
mov
loopne
rorl
arpl
cli
stos
test
and
inc
mov
hlt
fistl
jl
hlt
out
pop
lahf
jns
loop
cmp
rol
jns
push
sbb
imulb
notl
fsub
and
adc
cmpsl
mov
sbb
stos
je
inc
pop
mov
inc
xor
mov
mov
sbb
pop
notl
cltd
int
pop
xchg
and
jmp
and
fsubrs
arpl
adc
mov
push
cmp
shll
movsb
outsb
sub
pop
and
mov
mov
mov
fcoml
and
idiv
inc
jb
dec
mov
loop
pop
or
clc
decb
cld
cmp
sahf
scas
inc
sub
hlt
hlt
lods
mov
pop
sbb
fnstenv
xlat
sub
out
add
lods
in
mov
xor
mov
fldz
and
hlt
insb
fnstcw
dec
inc
and
fdivl
ja
enter
mov
sub
cmp
mov
mov
fwait
repnz
xor
dec
push
inc
fisubl
or
lds
insb
fiadds
mov
cli
in
pop
inc
test
push
or
stos
mov
fiaddl
aam
dec
cltd
jno
push
sarl
out
push
fsts
addr16
ss
in
mov
adc
bound
push
inc
stos
imul
add
mov
das
push
pusha
mov
shll
cmc
iret
pop
les
and
xchg
cmc
push
rcll
movsl
mov
out
jmp
push
xchg
daa
push
adc
jb
mov
loop
stos
cmp
out
cmp
push
outsl
pop
fdivrp
scas
jle
test
in
cltd
push
jp
sbb
cld
dec
inc
xlat
sub
scas
push
loop
ret
cmc
and
add
cmp
aad
or
cmpsl
xor
push
dec
jp
lret
aad
daa
fldt
mov
fcomps
sahf
cltd
or
popa
sbb
gs
cmpsw
stos
push
lods
or
subl
aam
sbb
adc
movsb
mov
jbe
or
add
xchg
mov
jle
arpl
cli
test
adc
xlat
fs
daa
xor
lret
adc
mov
jecxz
flds
fwait
dec
mov
sarb
int3
cmp
inc
jmp
mov
pop
ljmp
rcrl
cmp
imul
popf
mov
fwait
sub
pop
sub
push
in
and
mov
sub
orl
inc
nop
rorl
cmp
sahf
add
mov
std
cli
jp
scas
or
mov
and
scas
mov
int3
std
dec
dec
ss
and
cltd
push
jno
mov
rcll
stos
popf
leave
pop
jns
mov
gs
pop
xor
fisttpll
out
stos
shlb
sbb
adc
cltd
lock
add
int3
jmp
mov
dec
mov
gs
iret
repz
xlat
pop
fbld
add
aad
push
add
jl
pop
mov
xchg
or
repnz
stc
rolb
and
in
mov
aam
imul
fwait
sbb
lahf
adc
enter
je
cmp
cmp
rep
sbb
sbb
mov
inc
mov
or
cmpsb
mov
fstp
xor
ret
imul
negb
mov
movsb
jo
pop
iret
scas
scas
hlt
stos
shrb
dec
sar
sub
mov
mov
imul
and
dec
mov
inc
mov
fstpl
xlat
cmc
adc
cmp
jb
push
xchg
jb
movsb
ss
rcrb
xchg
out
push
and
loop
xchg
xchg
andl
movsb
mov
test
imul
and
mov
mov
mov
mov
cmp
sub
mov
and
or
mov
test
dec
sbb
cmp
push
test
add
xchg
add
jno
sub
pushf
loop
push
cmp
pop
cmp
loopne
sub
movl
sub
cmp
fucomip
cs
pop
jo
loopne
mov
movl
lcall
add
lds
sub
inc
xlat
mov
xchg
cmp
jge
push
and
mov
gs
stc
xchg
dec
mov
xchg
dec
mov
iret
xor
pop
rcr
mov
outsb
add
xchg
popf
pop
sti
mov
sbb
mov
aaa
pushf
aad
mov
shrl
xchg
loopne
mov
ficompl
out
fdiv
ret
jl
pop
inc
out
jp
push
dec
push
pop
pop
mov
xchg
xchg
andb
pop
mov
sbb
js
cld
aam
xor
xor
jmp
jmp
fnsetpm(287
repz
add
insl
push
stos
push
fsubp
faddl
pop
adc
xchg
stos
fistl
fcomps
jg
dec
push
jp
repz
jle
loop
and
mov
mov
inc
cmp
sub
cmp
call
mov
xorb
mov
insb
and
hlt
pop
testl
out
jl
test
rcr
dec
jae
enter
jo
mov
fistpll
loopne
loopne
loopne
jl
push
jb
pop
jl
and
fwait
sar
jns
arpl
mov
jle
inc
sub
xor
jns
bound
popf
leave
or
pop
dec
xor
daa
lock
mov
loopne
xor
push
jnp
push
imul
enter
cwtl
xor
cmp
or
loopne
add
dec
pop
xchg
xor
push
pop
xor
xchg
dec
in
es
xlat
or
rolb
lds
add
push
out
test
inc
mov
cmpsl
inc
inc
cmp
pop
mov
cmp
adc
cmpsl
movl
fdivs
pop
dec
jmp
gs
or
popf
scas
push
jmp
push
rolb
sti
mov
mov
xchg
mov
jmp
mov
fnstcw
cltd
fdivl
test
out
sub
inc
pop
xor
xchg
mov
cmp
sub
cmp
xchg
out
pop
sub
xchg
imul
icebp
xchg
xchg
je
cmp
int3
lcall
xlat
mov
aaa
stc
sbb
mov
bound
pop
push
or
push
jb
add
in
lds
aas
adc
push
mov
ret
and
mov
lret
or
in
cmp
sub
into
push
xchg
scas
jnp
lcall
movsbl
js
and
dec
mov
and
notl
inc
mov
sub
inc
mov
add
lods
fxrstor
bound
add
xchg
mov
cmpxchg
pop
lods
sbb
pop
fcoml
mov
out
out
shr
xor
shr
xchg
push
fdiv
sub
xor
lock
scas
dec
test
dec
lahf
pop
cmp
pop
sub
pop
sbb
mov
loopne
jb
cwtl
fildl
xor
or
popa
fidivrs
lcall
xchg
inc
mov
cmpsb
mov
ret
dec
mov
xor
arpl
push
gs
ficomps
std
sub
in
xlat
in
add
xor
inc
cmp
fisubrl
xchg
icebp
out
dec
adc
xor
aam
data16
insb
sub
mov
cwtl
popa
lods
pop
repnz
fnstcw
std
sbbl
or
ja
enter
sbb
mov
xor
mov
push
mull
mov
inc
pop
mov
jno
pop
hlt
pop
int
fistps
jl
and
push
add
pop
sbb
mov
xor
push
in
add
mov
xchg
mov
push
jg
dec
icebp
shlb
push
out
pop
jno
pop
push
xor
enter
jmp
jmp
mov
adc
xchg
je
pop
addr16
pop
fwait
lods
cmp
add
push
adc
in
mov
lods
pop
dec
add
sarl
mov
dec
cmp
sub
inc
rcr
fcomp
jp
jle
inc
test
pop
dec
pop
push
pop
dec
stos
mov
pop
mov
push
ret
mov
in
adc
sub
flds
mov
sub
repnz
fwait
imul
pop
arpl
pop
sbb
shrb
push
test
addr16
mov
movsb
cmp
out
out
subl
inc
mov
ret
dec
cmp
xor
aad
test
les
fs
out
inc
push
imulb
into
test
das
ds
push
and
cmp
push
cmp
sub
call
or
fadds
jp
push
push
in
cmp
pop
js
sti
xor
mov
into
bound
pusha
jo
jae
popa
pop
shl
jmp
fnstsw
stos
cmp
sub
es
imul
repz
mov
into
and
add
cmpsb
or
scas
mov
mov
inc
rcr
push
mov
cmp
jmp
scas
sub
fsubrs
pop
xchg
or
and
lods
pop
adc
outsl
pop
imul
or
lcall
push
push
push
mov
adc
mov
movsl
xchg
cltd
daa
jo
in
xor
leave
xchg
jg
push
inc
mov
add
dec
xchg
roll
jg
outsl
movb
or
call
cmp
vpmacsdqh
fsubrp
and
cmp
inc
xchg
push
int
mov
out
mov
dec
ret
sub
mov
in
out
test
divb
sub
cmpsl
jns
fs
enter
imull
push
push
sub
ja
sbb
call
xchg
arpl
nop
sbbb
sub
xor
mov
mov
adc
ret
cltd
pusha
lret
gs
idivl
out
or
add
insl
or
inc
dec
outsl
sbbl
in
push
lods
cli
aas
push
sbb
mov
lock
xor
stos
push
pop
adc
arpl
cmp
icebp
jecxz
cmpsb
add
add
jb
and
xchg
ss
cs
and
or
rcr
sub
iret
or
dec
pushf
sub
dec
cmp
adc
mov
addr16
cmpl
icebp
pop
xor
sub
ror
and
idivb
in
cltd
xor
icebp
test
in
mov
push
jecxz
imul
jg
and
loop,pn
sahf
adc
faddl
dec
adc
arpl
jecxz
loop
xor
adc
aam
enter
cwtl
and
push
mov
mov
mov
push
cmpsb
repnz
addr16
ret
ljmp
sbb
xchg
xchg
jbe
mov
adc
out
jne
imul
mov
jbe
aas
js
loope
fs
pop
shll
into
scas
inc
mov
mov
jnp
mov
stc
lea
popf
dec
mov
dec
pop
or
clc
inc
test
popf
jle
in
in
adc
adc
addr16
inc
in
add
sbb
sbb
push
fmull
lods
xor
cltd
jbe
or
sub
adc
movsl
sub
lea
jge
in
cli
xchg
pop
jg
testb
cmp
mov
xlat
cmpl
lret
sub
cmp
es
ret
shll
in
in
fstps
ss
movsb
jb
inc
push
jmp
pushf
imul
add
pop
shrb
mov
daa
xchg
mov
inc
lret
insl
in
sbb
mov
mov
jp
in
pop
outsb
mov
pop
dec
cmp
mov
lock
lods
mov
cmp
pop
push
sub
dec
dec
pop
adc
lds
enter
movsl
dec
pop
sbb
jmp
xor
data16
inc
lods
cmp
fld
cmp
jmp
and
pop
xor
add
inc
das
pop
inc
lods
mov
shrb
or
ljmp
cmp
sbb
add
inc
push
arpl
divb
int
in
mov
xchg
orl
sbb
loopne
and
iret
aaa
call
rcrl
cmc
out
pop
push
imull
mov
cwtl
aad
adc
rcll
imul
cmp
or
test
je
ret
out
inc
push
in
jns
mov
inc
sarb
pop
mov
adc
in
dec
shl
jl
push
in
sbb
lods
subl
and
and
mov
js
out
and
sbb
mov
jno
sbb
gs
fcoms
mov
fs
sbb
mov
into
sbb
sbbb
sub
inc
jne
test
cmp
xor
rep
adc
jle
push
test
push
cld
cmovl
sarb
int
std
imulb
push
mov
jg
sub
inc
or
or
push
mov
lods
loope
adc
mov
mov
ror
int3
fsub
movsl
jns
js
insl
mov
insl
test
or
jp
sub
fdivs
sub
icebp
mov
or
pop
cmpb
mov
and
fisttpll
pusha
and
loope
movsl
push
ss
loop
aad
out
or
dec
mov
sub
lods
pop
jae
test
data16
sahf
mov
mov
adc
imul
or
insb
jno
fstpl
and
cmpsb
inc
mov
xchg
sub
sarl
leave
test
lret
xor
arpl
lock
jno
add
cltd
jb
shrb
dec
test
mov
bound
inc
cli
fiaddl
fwait
and
adc
stos
jns
jae
push
adc
test
sub
jecxz
pop
popa
sub
and
mov
pop
push
out
movsb
adc
and
cmp
inc
mov
adc
rcrl
mov
sti
cltd
test
add
pushf
sbb
push
addr16
xchg
js
adc
dec
loop
mov
inc
cmp
test
xchg
xchg
mov
jp
inc
xchg
lods
sub
aam
inc
sarb
mov
jo
push
stos
mov
or
inc
xor
ja
loopne
mov
lahf
push
aam
add
leave
nop
orl
sbb
jno
adc
fildl
xor
movsl
ljmp
pop
ret
lds
and
jge
mov
sub
mov
je
iret
fst
xor
fadds
mov
cmc
inc
add
mov
jge
sahf
pop
jae
fnstcw
cli
add
aaa
push
shlb
xchg
movsl
add
fstl
push
sbb
ret
movsb
sti
add
mov
pushf
xchg
pop
xchg
imul
dec
add
aam
pop
inc
jno
mov
jae
loopne
daa
cli
lods
jmp
cmp
out
cmpsl
aam
mov
in
and
scas
mov
pop
sbb
mov
pop
or
mov
cmp
cmc
adcb
int3
xor
cltd
xor
xchg
test
leave
inc
pop
stos
jge
xor
rolb
sbb
les
inc
and
in
sbb
int
mov
cmp
pop
xor
xchg
and
lcall
scas
imul
js
sbb
cmp
jae
rcll
imul
and
imul
jg
xlat
orb
dec
clc
or
fildll
adc
test
jmp
mov
sub
imulb
jae
push
pop
cmpsb
and
iret
mov
out
insb
out
rorb
add
sub
xor
ds
jmp
cmpl
clc
movb
jbe
dec
pop
ficomps
pusha
inc
fistpll
inc
loopne
jne
ret
and
push
push
nop
inc
pusha
rolb
loopne
jmp
bound
and
pushf
aad
or
test
lret
xchg
xchg
xor
jns
jmp
roll
js
cmp
jbe
in
cmpsb
mov
push
cwtl
mov
fcoms
test
pop
cmp
jo
cmp
repnz
jg
or
mulb
adc
xchg
xor
pop
jg
in
push
out
mov
test
test
cmp
xchg
pop
cs
inc
add
sbb
lret
enter
xchg
aam
cmpsl
xchg
mov
jbe
sbb
rcrb
out
rcr
nop
ffree
mov
push
adc
iret
sahf
push
pop
jnp
adc
aaa
stos
add
lods
imul
pop
push
add
push
xor
das
dec
outsb
sbb
pop
imul
pop
je
out
xchg
mov
lret
fdivr
out
sub
loop
pop
sub
adc
or
lahf
jmp
sub
mov
adc
ret
fsubrp
popf
adcl
mov
mov
adc
or
cmpsl
dec
fadd
xchg
or
sub
loope
fdivrs
data16
outsb
imul
je
les
sahf
adc
pop
dec
aas
push
int
lock
and
out
inc
cmp
int
inc
pop
xchg
imul
test
popl
xchg
insl
mov
into
xlat
adc
jmp
test
ja
add
scas
and
adc
lret
jae
movsl
out
bound
dec
out
enter
ret
push
xchg
jecxz
pop
movsl
pop
xchg
sarb
dec
or
sbb
mov
dec
enter
ds
mull
inc
inc
js
cmpsl
subb
enter
dec
cs
xchg
push
add
aam
cmp
outsb
dec
mov
stc
les
insb
push
stc
aam
movsl
and
arpl
xchg
nop
pop
xchg
mov
faddp
pop
jne
test
popa
xchg
sub
jmp
out
dec
enter
sbb
cmc
pop
out
rclb
in
pop
add
test
inc
sahf
sbb
out
jle
in
push
xor
mov
pop
adc
mov
mov
inc
xchg
out
jge
test
icebp
or
dec
mov
movsb
int
push
xor
ljmp
pop
mov
or
xor
aam
shrb
rorb
xchg
jns
mov
jle
dec
mov
lds
cltd
les
xchg
mov
jo
or
into
lods
rclb
sbb
fildll
xchg
dec
adc
inc
inc
and
insb
cld
cwtl
add
add
ljmp
sbb
jge
sar
lahf
in
in
pop
dec
addb
add
ret
push
jnp
sbb
add
jge
popa
iret
xchg
sub
shlb
inc
imul
inc
jnp
inc
pop
sbb
stos
pop
addr16
push
xor
cmp
or
jnp
mov
aaa
cmp
mov
lods
add
adc
pop
mov
mov
out
lahf
jp
cwtl
popf
lods
xor
scas
fnsave
xor
ret
in
je
push
shll
stc
dec
in
add
icebp
arpl
sbb
arpl
fdivp
push
adcl
xor
inc
and
lods
mov
pop
dec
out
outsl
push
pop
add
dec
add
cli
xlat
sbb
adc
je
es
lret
in
aam
arpl
add
sub
ret
mov
loopne
outsb
adc
int3
outsb
xor
xor
and
ja
push
add
cmp
and
outsb
cmpb
mov
lods
xchg
mov
or
adc
pop
mov
mov
pop
sbb
mov
mov
sbb
sbbb
mov
jmp
aam
sbb
cmpsb
adc
mov
mov
and
mov
rcr
mov
and
ss
sarl
cmpsb
out
jnp
adc
adc
rcr
int
xchg
scas
pop
lret
adc
ret
cmp
sub
inc
pop
inc
adc
lahf
mov
fmull
dec
xchg
cmp
adcl
pop
test
test
insl
sbb
in
mov
inc
js
pusha
mov
xchg
stc
jmp
iret
lea
call
ja
and
pop
xchg
sti
push
xchg
je
in
ficompl
fdivl
cli
pop
popa
imul
cmp
inc
shlb
push
sbb
adc
pop
cli
jns
mov
test
inc
cmc
outsl
fwait
mov
xor
in
and
pop
and
pop
push
rolb
scas
js
out
jmp
insb
dec
popf
jne
xchg
add
enter
jmp
fimull
and
mov
insb
aas
xchg
fisttpl
cmp
sub
mov
mov
mov
out
lcall
lods
mov
lahf
jge
insb
sub
pusha
and
cmpsb
fldl
adc
pop
bound
scas
iret
sbb
inc
or
bound
inc
js
into
dec
sub
push
mov
sub
lds
dec
je
sub
lret
cmpb
mov
adc
pop
jnp
aas
fs
test
xchg
lock
or
lret
xor
daa
push
mov
adc
fisubl
lret
cmp
push
daa
push
sub
xchg
fidivl
dec
fildl
enter
das
sub
nop
ret
jae
incb
lret
add
imul
arpl
shrl
aam
mov
sub
aad
jg
push
push
xchg
imul
pop
inc
in
jmp
mov
pop
inc
ficoms
pop
lock
cmpsb
es
jecxz
cmp
das
dec
cmc
xlat
and
lcall
repnz
incl
sbbb
jno
jge
ret
xor
fmul
mov
imul
mov
shl
popf
pushl
shl
lcall
loope
in
pop
adc
fstpl
and
int
movsl
jl
sub
mov
testl
jle
jmp
inc
imul
mov
dec
mov
pop
xorb
loopne
adc
cld
push
lods
jecxz
test
cmp
popa
or
cltd
int3
mov
in
or
mov
add
jb
mov
mov
insb
mov
fcom
faddl
lock
mov
dec
pop
stos
push
loope
cli
mov
inc
and
out
cmpsl
stos
int
sbb
nop
cmp
mov
pop
cmpb
fmuls
loop
add
mov
push
sub
xchg
and
add
ljmp
adc
popa
xor
ljmp
lock
sub
jle
dec
and
movsb
fildll
lea
lahf
and
lret
pop
jge
js
or
and
sub
lcall
or
stc
subb
jp
xor
adc
es
sbb
bound
mov
fdivs
dec
or
out
hlt
adc
jns
mov
jecxz
xchg
sub
inc
imul
or
clc
mov
xor
ljmp
out
mov
incb
dec
cs
dec
add
mov
cmp
xlat
rcll
mulb
adc
das
das
or
jbe
pop
loope
inc
xor
adc
pop
or
and
xchg
and
out
out
dec
dec
mov
cmp
rorl
xchg
jb
or
mov
xchg
dec
push
data16
cmp
add
int
out
ja
inc
or
cli
into
cmc
cmpl
aam
iret
lds
push
pop
push
or
movsb
adc
decl
shl
das
lahf
pusha
xchg
jp
sub
mov
cmp
shll
mov
insl
mov
inc
aaa
push
cmp
mov
push
js
les
push
push
xor
outsb
jns
cltd
lods
xor
xchg
out
lds
jno
ret
out
lret
test
sbbb
out
xchg
push
imul
mov
pop
xchg
xchg
outsb
inc
dec
outsl
pusha
call
mov
add
pop
mov
xchg
shlb
idiv
lods
sbb
dec
sub
out
push
xorb
and
call
das
andb
sbb
add
aad
je
lret
jecxz
lods
pop
jbe
ficoms
cltd
or
ret
inc
add
or
adc
fs
movsb
lcall
std
enterw
mov
push
dec
stc
mov
and
xor
xor
sub
mov
dec
dec
clc
inc
cmp
cmp
outsb
insl
inc
inc
dec
rolb
xor
jl
sbb
jle
iret
fstpt
push
scas
repz
pop
mov
jnp
cmp
jns
cltd
scas
add
add
sub
test
fidivrl
push
jo
cmp
mov
inc
jp
mov
sub
bound
rol
mov
adcb
out
push
mov
lods
mov
xchg
push
roll
imul
cltd
adc
add
adcl
aaa
loopne
in
cmp
cmpsl
lret
inc
lds
nop
mov
sar
xorl
xchg
inc
jmp
dec
mov
cmpsb
sub
jb
or
sub
jne
xorb
sahf
jl
or
or
xor
add
fdivr
je
dec
movsl
movb
xor
add
dec
or
push
mov
test
aaa
push
mov
mov
mov
and
cmp
cmp
inc
cmp
push
das
movsb
mov
jno
or
pop
insb
int3
scas
mov
cmp
lret
xorl
bound
shr
mov
adc
dec
lcall
xchg
lods
xchg
movl
cmp
mov
sub
imul
lods
out
fwait
inc
xchg
and
or
mov
push
pop
sarl
test
sub
push
ffree
stc
jmp
cltd
je
add
sbb
outsl
rolb
push
jb
add
cmp
lock
mov
lds
fidivs
push
inc
fadds
mov
jno
cmpsl
sti
cmp
mov
cmp
add
add
lret
mov
imul
gs
shl
filds
icebp
icebp
mov
dec
negl
adc
mov
std
inc
ret
adc
out
pusha
sub
mov
fcoml
lcall
inc
insb
lcall
in
sub
cmp
leave
mov
cli
sbb
mov
xchg
in
aas
xchg
cmp
mov
in
cld
fnstcw
loopne
ret
sub
push
sbb
incb
lea
mov
dec
cmp
fdivs
cwtl
cmc
sbb
pop
jmp
rcll
cmc
and
add
in
xor
dec
pop
lods
mov
xchg
pop
fcmove
mov
jbe
out
stos
daa
mov
xchg
out
xchg
jns
push
rolb
mov
ss
add
adc
std
fld
pop
mov
cwtl
sub
push
push
fs
and
lret
mov
adc
cmp
clc
dec
mov
test
mov
xbegin
mov
xchg
cmpb
popf
jecxz
les
inc
jle
or
shr
dec
mov
push
mov
mov
in
or
mov
xor
dec
mov
mov
rorl
mov
fnsave
jecxz
clc
aam
lret
fs
clc
nop
xor
out
or
rclb
add
les
dec
out
adc
add
fsubr
push
scas
adc
or
push
out
mov
testl
loope
lods
or
sbb
mov
aaa
sub
mov
repz
mull
sbb
popa
push
sub
inc
mov
mov
hlt
add
test
cmpsl
leave
adc
lds
cli
rep
les
inc
sbb
pop
cmp
out
or
mov
hlt
jle
push
add
push
mov
out
sbb
int3
mov
and
into
or
adc
outsb
sbb
inc
aas
repnz
fsubs
pop
xchg
sbb
dec
cmpsb
popf
int3
pop
and
xor
push
sbb
mov
outsb
sbb
testb
arpl
sub
push
enter
repz
inc
out
xchg
mov
mov
mov
arpl
aaa
das
ljmp
sbb
ret
jb
lahf
and
insl
cmpsl
fisubl
repnz
pop
test
inc
in
or
cmp
cmp
adc
xchg
jecxz
push
testb
xchg
jno
push
mov
addr16
push
out
ja
out
xchg
je
xchg
xchg
insb
mov
inc
mov
insb
fwait
mov
arpl
das
adc
loope
addr16
jg
fistl
mov
sar
in
outsb
adc
ret
xor
test
lahf
mov
xchg
xchg
mov
xchg
test
test
test
std
jns
mov
icebp
inc
aas
stos
aas
push
imul
push
cmp
push
mov
gs
jo
sbb
int
sti
xchg
out
pop
sbb
sbbl
cli
jp
or
push
add
aaa
or
sub
lret
mov
mov
add
sbb
inc
movsl
cmp
xor
outsl
adcl
jl
dec
mov
shlb
mov
push
push
lcall
pop
xorl
lret
cmp
mov
sub
xor
pop
bound
nop
jmp
lcall
jg
fisubs
fbstp
shll
repnz
clc
mov
fs
popf
push
xor
push
push
lret
andl
aas
into
gs
ret
mov
sbb
adc
pop
scas
xor
insb
aaa
lods
xchg
jb
jl
test
jne
in
cmpsb
xchg
mov
push
stc
dec
or
pushf
cltd
jl
adc
or
sbb
out
dec
in
loope
fbstp
test
push
adc
aaa
push
mov
jb
jle
pop
out
ljmp
ja
and
adc
push
lock
pop
mov
aam
sbb
xchg
sub
mov
lret
das
leave
xchg
push
shll
movsb
lret
push
cs
out
ret
test
gs
and
mov
sbb
stos
js
xchg
pop
fistpll
mov
rcrl
out
pop
pop
cmc
pop
movsb
test
ror
xor
aam
dec
rcrb
add
out
cli
rol
fmull
notl
loop
mov
inc
sti
pop
stc
fcomp
popf
mov
lcall
negb
scas
add
mov
dec
test
jo
xor
inc
movsb
push
mov
sti
push
cmp
inc
scas
adc
loope
mov
in
das
push
sbb
mov
andb
icebp
loop
pop
dec
fdivr
aam
pop
ja
in
pop
cmpsb
pop
movsl
add
push
lods
dec
insb
adc
ljmp
or
push
sub
hlt
insl
or
mov
inc
fcmovb
ljmp
xlat
std
or
imul
add
jge
ret
xorb
lock
and
out
dec
dec
loop
rcl
sbb
lahf
or
movb
add
bound
mov
inc
insl
movsl
es
lahf
subl
push
push
roll
subl
adc
insl
test
sbb
push
inc
sub
add
sbb
xchg
or
mul
jmp
pushf
shrl
js
jge
add
call
mov
stos
push
mov
push
movsl
sub
push
mov
cmp
cmp
cmpsb
in
outsl
in
inc
lods
add
mov
push
lcall
pusha
inc
imul
mov
repnz
mov
dec
cmp
push
or
test
push
inc
mov
xchg
pop
fstp
out
pop
jl
push
pop
mov
insl
adc
fmulp
mov
sbb
dec
pop
cli
bnd
call
rcrl
aad
cmpb
stc
push
xor
dec
push
jnp
xchg
xchg
popa
fucom
and
sti
and
into
pop
xor
dec
mov
xor
lock
jecxz
loope
xlat
out
jge
xchg
lret
mov
cltd
prefetchnta
lods
testl
enter
dec
pop
rcrb
jmp
les
fs
dec
sbb
insb
dec
shlb
xor
xor
or
cli
das
sub
cmp
out
cmp
enter
sub
push
jge
mov
adc
mov
cmp
jbe
das
xchg
or
loop
call
mov
lcall
subl
inc
push
iret
cmp
or
pop
stos
ljmp
adc
sub
lcall
pop
addb
mov
dec
mov
adc
dec
out
xchg
mov
shlb
sbb
mov
test
xchg
cli
fistps
jo
pop
test
and
mov
movsl
push
mov
or
je
incb
std
popf
inc
jb
or
idivb
das
dec
push
mov
test
jnp
js
sbb
icebp
jo
mov
cli
ret
dec
ljmp
outsb
add
imul
subl
mov
lea
jg
pusha
cs
xor
push
dec
adc
adc
inc
jp
andl
inc
and
fwait
out
jns
in
aas
sti
shld
fdivrl
lds
push
gs
push
test
push
cmp
adc
mov
add
jp
pusha
wrmsr
mov
bound
ret
jmp
and
xor
mov
in
dec
mov
jl
fs
cmc
mov
fld
pop
orb
je
mov
adc
aam
hlt
imulb
xchg
pop
cmp
stos
fstl
sbb
cmc
aaa
push
repz
sarb
sbb
fsubp
ficoms
xchg
mov
push
fucomi
cwtl
cwtl
and
mov
pop
std
and
arpl
dec
cwtl
xor
fs
or
arpl
or
sub
pop
dec
movb
inc
xlat
jp
sub
and
andl
nop
outsb
mov
xchg
or
pop
jp
mov
sub
gs
stos
shll
mov
movsb
pop
mov
shll
add
loope
xchg
jbe
fadds
fistpl
and
sarb
adc
add
sahf
jge
xlat
scas
lds
imul
xchg
dec
ds
in
mov
or
xor
inc
push
dec
adc
jmp
fistpll
lahf
pusha
pop
cmp
out
in
sub
call
xchg
addl
mov
loopne
lahf
xor
sbb
push
mov
jb
dec
cmpsb
cmp
mov
movsb
dec
jno
mov
push
mov
jne
insl
adc
aas
pop
mov
out
pop
mov
and
pop
std
add
and
std
rcrb
mov
rcl
push
mov
js
test
sub
or
adc
fwait
loope
lods
subl
add
adc
fiaddl
lahf
loope
mov
push
imul
sbb
cmp
or
mov
movsb
ds
call
and
sbb
xor
push
test
jb
pop
fwait
repz
fidivl
fbstp
and
add
fldcw
std
dec
fnsave
and
enter
pop
imul
and
mov
test
push
inc
xchg
pushaw
ret
aad
mov
add
rorb
push
jecxz
out
add
in
sbb
xchg
ljmp
lsl
es
add
mov
ror
aad
adc
mov
mov
and
cwtl
popf
sbb
cmpsl
and
imul
or
fdivs
aaa
ljmp
pop
adcl
outsb
cltd
stc
cmp
add
nop
std
mov
jbe
clc
aad
add
pop
pop
add
sti
int3
xchg
xchg
daa
fs
and
add
push
mov
mov
jg
jae
ja
add
sub
jne
mov
jmp
aas
dec
inc
adcl
lcall
mov
cs
int
add
popa
xchg
stos
mov
and
arpl
rolb
add
mov
mov
add
mov
inc
sbb
jge
xchg
stc
jbe
loope
lock
pop
faddp
int3
add
std
data16
loopne
cld
addr16
cmp
xor
dec
push
jae
xchg
cmc
jp
lds
mov
inc
jo
scas
sti
repz
push
jg
mov
push
and
cmc
je
popa
sub
jge
cld
pusha
jle
push
push
sbb
ret
xchg
sub
out
or
mov
int3
nop
push
add
scas
nop
push
dec
cmpsl
imul
imul
jo
fnstenv
ret
insl
dec
mov
push
inc
sbb
lods
push
nop
out
adc
repz
fwait
jmp
enter
or
add
test
insb
adc
ret
je
push
and
mov
sbb
sbb
cld
aaa
fisubrl
sub
or
mov
cmpsl
sti
daa
sbb
xchg
andl
cmpl
scas
dec
sub
dec
sbb
inc
aas
xchg
lods
ljmp
inc
dec
mov
pop
jl
push
inc
push
jl
adc
mov
or
cmovg
outsb
inc
cmp
cmp
shrl
test
fisubl
inc
cmp
pop
idivl
daa
xor
mov
xchg
add
insl
cmp
ss
gs
and
push
and
xchg
testb
daa
scas
adc
arpl
outsb
nop
or
mov
and
in
data16
add
pop
call
addl
shr
jae
insb
inc
int
sbb
xchg
mov
or
iret
es
nop
fldenv
out
sub
xor
bound
or
clc
mov
lock
mov
out
lahf
mov
xchg
push
popf
cld
out
notb
inc
mov
xchg
sar
lea
inc
sti
sub
push
in
lods
test
addr16
jb
iret
xor
jb
rcrl
sub
dec
out
insb
pop
push
dec
stc
dec
cwtl
into
inc
scas
test
jnp
adc
inc
push
into
mov
dec
pushf
jmp
test
call
mov
repnz
inc
stos
ss
js
outsl
fcoms
enter
mov
popf
cs
pop
scas
push
loop
jmp
popf
or
lret
inc
and
xor
lods
into
std
cli
xchg
dec
ljmp
dec
and
ret
mov
ja
icebp
jnp
mov
sbb
ljmp
cmp
out
xorb
repnz
rcll
rcr
out
xchg
mov
loope
icebp
and
clc
out
mov
and
jo
jo
inc
xor
pushf
mov
or
dec
mov
xchg
add
push
push
sub
xchg
pop
and
imul
cmp
adc
or
sub
add
cli
sti
out
add
sbb
ja
popa
mov
cmp
dec
and
cltd
out
pop
xchg
repz
loop
or
cltd
jmp
insb
push
xor
scas
nop
bound
sub
mov
adc
mov
shll
fistpll
jb
and
push
or
xchg
adc
shl
sbb
push
mov
dec
sub
mov
ror
clc
test
ss
rcll
mov
repz
mul
cpuid
sub
xor
xor
enter
movsb
daa
cmp
pushf
aas
cs
or
movnti
int
stos
xor
dec
or
clc
insb
in
cld
adc
test
ljmp
push
mov
ret
sbb
pop
dec
pop
aaa
fcoms
jo
mov
add
mov
jg
insw
enter
mov
sti
popf
lods
sub
jmp
pop
jl
xor
or
lock
cwtl
adc
and
and
cmp
movq
dec
sub
and
fmul
adc
insl
fstpl
or
bound
mov
hlt
lods
sub
leave
imul
addr16
in
aam
inc
pop
fwait
ja
daa
pop
add
mov
fs
push
xchg
xchg
out
add
xchg
dec
xchg
sub
das
shl
aam
je
dec
test
fdivrs
ss
push
xor
inc
fsubl
mov
out
cmpb
dec
pop
sub
dec
cmpsb
int3
stc
mov
stc
rorl
clc
jge
gs
rorb
pushf
lahf
inc
push
scas
mov
inc
inc
jg
push
out
or
js
fadd
cmp
mov
clc
cmpsl
ja
pop
mov
fldl
push
dec
add
dec
mov
sub
mov
lods
subps
add
inc
inc
je
mov
lahf
jno
pop
lahf
js
icebp
mov
frstor
inc
inc
mov
addl
mov
push
add
adc
mov
fldl
insb
fcompl
mov
and
daa
sbb
andl
push
and
out
rclb
ret
cltd
xchg
cmc
mov
enter
inc
mov
fcmovnbe
xchg
jnp
leave
push
rcrl
sbb
xchg
cmp
sti
jne
out
inc
nop
mov
lods
nop
jne
out
shrl
pop
arpl
out
sub
xchg
xchg
movl
mov
mov
aad
or
cmp
je
insl
aam
pusha
negl
das
aaa
insl
xchg
btr
sub
enter
xlat
mov
faddp
mov
sub
and
push
mov
xor
popa
out
out
xchg
into
jbe
inc
sbb
out
inc
je
jmp
cld
sub
popf
popf
mov
mov
cmpsl
inc
nop
or
or
jne
ds
sbb
push
or
rcr
xchg
xor
inc
jns,pt
ljmp
xorb
mov
jo
mov
pop
push
add
ja
add
push
dec
repnz
insb
dec
decl
dec
mov
bound
pminub
push
subl
pop
pop
stos
xor
jmp
lods
push
push
shll
push
jecxz
add
leave
sbb
push
xor
mov
cltd
mov
mov
ljmp
jno
cmpsl
xor
lret
sbb
dec
mov
ja
dec
xlat
aaa
push
cmp
movsb
sub
sub
cwtl
mov
adc
xor
sbb
daa
stos
mull
xor
dec
mov
sub
sub
pop
push
imul
mov
js
cltd
bound
push
xor
jl
adc
sub
dec
fisttpl
sbb
pop
enter
adc
adc
sbb
add
dec
out
push
ret
sub
stos
in
mov
xorl
mov
popf
mov
in
das
cltd
sub
mov
lds
repnz
cwtl
imul
mov
imul
fsubs
int
lret
inc
xchg
or
aad
add
push
sbb
repz
xchg
mov
sub
data16
scas
or
sub
sbb
push
adc
ror
ja
cmpsl
mov
inc
or
jmp
xchg
push
sub
out
ret
daa
cmpsb
xor
movsb
pop
push
or
xchg
pop
cltd
call
enter
fwait
out
pop
push
push
mov
loop
sbbl
cmp
add
popa
pop
js
xor
sub
lods
loopne
fldcw
dec
jl
pop
std
mov
mov
jp
sti
jl
pushf
jo
roll
addl
push
insb
push
xchg
int3
pop
leave
inc
iret
jne
aas
addl
in
das
and
imul
lret
sub
loope
push
jmp
in
test
filds
sahf
and
xlat
push
inc
adc
ja
xchg
xchg
lea
xchg
rclb
aad
push
jl
aad
dec
insl
dec
hlt
inc
sub
rorb
mov
mov
mov
test
mov
enter
mov
cltd
mov
push
aaa
cmp
stos
cs
gs
adc
adc
sahf
xor
xchg
push
add
out
mov
push
mov
and
dec
aas
jmp
push
imul
subb
nop
sbb
or
aad
popa
xchg
das
mov
pop
jne
jns
push
xor
icebp
adcb
fisttps
adc
mov
shlb
dec
sbb
sbb
xchg
add
xchg
xchg
out
xor
jecxz
jbe
shl
sbb
fcoml
sbb
mov
scas
xor
imul
sbb
gs
jnp
les
jo
or
mov
jae
icebp
jmp
mov
xor
in
add
sbb
pushf
jmp
sbb
pop
push
cmp
pop
push
and
icebp
dec
or
jle
repz
push
xchg
repnz
cli
out
dec
jle
sqrtps
mov
mov
dec
fisubrl
xchg
sbb
or
loope
jo
lock
dec
xchg
std
loopne
movsl
pop
add
iret
cmp
sub
dec
jp
filds
mov
test
int3
jg
xchg
hlt
fcomps
pop
and
sti
in
xor
push
pushf
shll
push
sbbb
ljmp
ret
push
fisttps
iret
xor
mov
stos
push
inc
xchg
cmp
rep
mov
inc
sbb
or
insertq
ss
lods
push
test
cmpsl
push
jb
push
inc
mov
mov
addl
sbb
sub
loopne
sub
cmp
push
cmp
jnp
push
lcall
iret
insl
dec
clc
or
je
mov
add
mov
xchg
popf
int3
dec
cmp
outsl
push
xchg
test
adc
mov
pushf
xchg
pushf
xor
jl
std
jge
test
out
out
and
and
loop
stos
jae
or
fbstp
aaa
aaa
add
add
stc
dec
loop
in
xor
inc
cs
jecxz
cmp
xor
mov
pop
push
cs
ljmp
xchg
insl
push
adc
pop
dec
mov
pop
xlat
push
dec
js
sbb
enter
cmp
into
lahf
jge
mov
jbe
adc
xchg
insb
add
lret
push
rcll
arpl
ret
jnp
jle
push
or
add
pop
iret
ja
cmpsl
dec
jg
sbbl
mov
xor
cmpsl
into
out
inc
jg
popf
sbb
outsb
pushf
dec
lds
mov
fs
pop
je
out
xor
insl
or
sub
movl
pop
das
or
ret
fadds
sub
lds
mov
icebp
test
mov
mov
outsb
xor
imul
lods
loop
testl
ret
xorb
lods
mov
jmp
ljmp
out
pop
sbb
cmp
ret
pop
mov
imul
lods
pop
jmp
xchg
int3
movsb
jge
add
or
in
test
inc
inc
pushf
jbe
jecxz
loope
out
xor
jecxz
push
and
cmp
gs
repz
movsl
insl
aam
aad
mov
movsl
lea
insl
nop
int3
pop
mov
sub
cmp
hlt
jb
inc
adc
xchg
push
rorl
cmpsb
xor
dec
xor
pop
shl
xor
je
xchg
xchg
movsb
pop
adc
cld
leave
inc
out
and
jmp
test
insb
push
aad
out
daa
je
incb
lcall
adc
jns
or
or
mov
test
loope
jg
fst
sub
mov
adc
pop
add
pusha
cltd
push
xor
ret
jae
arpl
push
or
sub
mov
rclb
jg
jbe
xor
pushf
dec
push
add
mov
pop
add
adc
push
andl
adc
ret
mov
push
into
xchg
xchg
mov
or
imull
dec
idiv
cmp
int
test
jo
inc
xabort
jns
mov
mov
mov
int3
andl
jecxz
lock
pop
dec
and
fs
mov
div
push
pop
jae
mov
leave
xor
fidivl
push
or
ss
je
or
cld
sub
scas
cmp
cmp
mov
and
scas
fistpll
je
pusha
ljmp
je
xor
mov
mov
xor
pop
call
jg
mov
int3
mov
xlat
es
inc
cli
lea
icebp
shlb
xchg
push
mov
cltd
add
lods
sub
ja
jbe
mov
outsl
adc
ficoms
or
sub
ja
or
fsts
lods
inc
das
pop
mov
test
in
cmp
stos
dec
push
icebp
pushf
loopne
lods
icebp
test
cmp
mov
js
push
ds
pop
fdivrs
adc
pop
fidivl
insb
pushf
and
ficomps
or
clc
push
aas
jae
cmp
jmp
or
jbe
sub
add
sub
outsb
sbbl
iret
test
outsl
jp
mov
sub
jmp
xor
add
sbbl
stos
int
gs
clc
leave
lods
adc
mov
push
out
jle
movsl
lret
out
jl
sbb
ds
call
fsubl
pop
out
scas
xchg
add
cwtl
std
sbb
adcb
lret
mov
gs
or
lcall
mov
ljmp
mov
sub
mov
mov
sub
mov
test
lods
or
jmp
sbb
pop
mov
div
aam
dec
adc
mov
dec
mov
js
inc
aam
push
dec
push
dec
sbb
push
add
sub
xchg
xor
push
push
movsb
cmpsl
cmc
repz
mov
add
xchg
inc
inc
stc
das
andl
sarl
dec
cmpsb
mov
cltd
push
mov
cmp
int
ret
xchg
add
leave
xor
icebp
ds
or
pop
leave
faddp
js
mov
sub
ret
or
les
sarl
pop
sub
addr16
pop
scas
sarb
ja
pop
or
mov
jmp
mov
popa
inc
sbb
lcall
push
leave
fldt
xor
sub
dec
push
test
mov
push
call
repz
lret
or
sub
pop
sarl
cmpsb
call
sbb
leave
cmp
mov
push
mov
cs
das
repnz
inc
les
and
mov
pop
into
pop
mov
push
jno
dec
pop
clc
gs
lret
sub
xchg
push
add
lods
and
jo
std
cli
sbb
mov
arpl
vmovaps
mov
pop
cmp
popa
inc
cltd
dec
mov
mov
imul
and
mov
push
inc
xor
repnz
jmp
outsl
xchg
dec
cwtl
jle
push
mov
mov
mov
mov
sub
pop
lret
push
add
mov
cmp
pushf
mov
in
hlt
push
jb
jnp
jns,pt
and
out
test
mov
jle
scas
test
push
adcb
or
cmpb
push
and
je
push
xchg
mov
popf
jae
push
cmpsl
fldenv
sarl
cmp
test
add
push
into
rol
xlat
pop
or
mov
aad
inc
sub
and
inc
pop
divb
sahf
mov
icebp
mov
jae
test
mov
xchg
mov
adc
mov
mov
and
mov
out
int3
pop
sahf
pop
and
mov
fldt
jbe
dec
nop
mov
rcrl
inc
loop
ret
sbb
mov
daa
enter
insb
jmp
imul
adc
dec
fcom
push
movsl
ja
adcl
test
xor
pop
push
popf
inc
jge
cld
pop
jp
dec
xchg
xchg
lea
in
mov
imul
sub
pop
sbb
into
cld
adc
xor
sahf
adc
dec
lods
cmp
mov
or
pop
imul
mov
out
cmp
les
sub
or
aam
in
inc
add
dec
ror
mov
int3
es
or
outsl
loopne
mov
xorb
sbb
ljmp
out
push
lret
popa
push
test
cs
shll
lret
into
iret
ret
ret
adc
pop
lcall
dec
pop
shll
pop
cmp
aaa
outsl
icebp
xor
addr16
add
enter
ljmp
inc
mov
in
dec
sbbb
adc
iret
les
ds
push
cs
jp
fs
mov
xlat
adc
mov
xor
or
cmp
pop
cltd
lret
into
add
mull
lcall
mov
sub
mov
in
mov
arpl
repnz
cmp
sub
and
cmp
sbb
dec
jbe
je
sti
repnz
jno
in
push
xchg
dec
cs
gs
nop
repz
fldenv
cmp
bound
insb
push
mov
in
sub
test
adc
or
repnz
mov
cld
dec
xchg
leave
mov
inc
push
mov
lods
push
xor
push
fcomps
jmp
mov
adc
test
addr16
or
ja
xchg
out
cltd
mov
fcmovb
jmp
pop
arpl
fs
sti
insl
cld
pop
xor
push
leave
push
adc
leave
aad
jnp
add
aaa
cwtl
adc
dec
push
jae
into
jl
cld
mov
inc
dec
outsl
loope
mov
lret
pop
or
cli
or
imul
rorl
aas
lahf
cmp
xor
out
outsl
pop
ds
jnp
movsl
push
call
pop
xor
bound
rol
add
mov
fcompl
stos
or
mov
aaa
shrb
push
mov
push
popf
cld
dec
popf
orb
dec
sub
mov
sbb
pop
xchg
sub
sbb
arpl
leave
sar
sub
push
out
lret
test
outsb
and
movsl
fwait
cld
lods
nop
sub
addr16
scas
push
fildl
xor
push
cwtl
outsl
mov
push
add
mov
add
movsb
sub
test
enter
push
or
xlat
out
sahf
sti
lds
mov
or
insb
das
int3
jge
cli
xor
in
cmp
lock
cmp
mov
outsl
lods
xchg
mov
inc
hlt
mov
fstpl
mov
push
in
imull
dec
fisttpll
mov
retw
sbb
gs
inc
adc
in
flds
imul
sahf
scas
add
int3
sbb
sar
mov
mov
mov
dec
pop
out
fisubrl
mov
loopne
mov
adcl
bound
add
inc
add
movb
stos
push
in
pop
pop
mov
les
sahf
push
sub
pop
push
push
gs
fidivrl
jae
and
xor
ffreep
out
aaa
sub
fwait
xor
inc
decl
mov
xchg
and
call
aam
mov
lret
lock
xlat
mov
push
dec
ficomps
sub
mov
repz
into
mov
and
jns
mov
mov
jp
lcall
dec
fs
icebp
jle
push
cmp
out
xchg
lea
stc
and
in
jnp
adc
pop
lods
ljmp
jmp
in
adc
xor
fcompl
outsb
jecxz
out
sbb
clc
rcl
jnp
inc
insb
lret
jns
aaa
or
test
xchg
push
or
roll
sahf
mov
lea
test
jp
or
aaa
xchg
add
and
xchg
into
mov
mov
inc
scas
es
icebp
sub
hlt
stc
mulb
push
pop
jl
sbb
lods
xor
and
ss
fisubrl
pop
loop
lods
cmp
jmp
stos
icebp
or
outsb
movsb
in
adc
in
pop
dec
dec
inc
gs
pop
pop
jne
add
sti
add
inc
push
cmpsl
pop
ss
push
xchg
pop
fs
dec
pop
and
pop
test
cmp
push
and
push
jbe
hlt
xlat
jge
cli
or
es
and
fisubrs
mov
push
mov
jmp
test
lods
nop
sbb
pop
mov
ror
or
or
xchg
jb
pop
lds
pop
enter
imul
jle
mov
mov
cwtl
dec
or
aas
not
sub
push
mov
mov
jmp
in
inc
mov
bound
jp
jae
movsb
pop
xchg
outsb
stos
inc
jb
lcall
sub
outsl
in
cmp
push
decl
jg
cmp
cs
rolb
mov
daa
sub
mov
adcb
mov
jg
orl
inc
cwtl
cmpsl
jae
cld
daa
scas
adc
adc
pop
imulb
sbb
or
mov
cmpsl
test
aad
push
push
fsubs
jno,pn
xchg
mov
mov
push
lret
push
pop
adcl
psubd
dec
addr16
cltd
test
xor
add
push
jno
mov
push
inc
stc
xor
loope
dec
mov
cmp
imul
jb
adc
shll
cmp
ret
mov
mov
pop
xchg
cmc
aas
pop
xorl
cld
xchg
daa
insl
sbb
push
icebp
and
or
jg
pop
or
push
gs
shll
cs
xor
nop
xchg
imul
mov
out
ss
jmp
sbb
stos
jmp
inc
mov
xchg
nop
addr16
adc
adc
lds
mov
lahf
sahf
inc
jne
xor
or
test
jb
mov
jns
jae
push
test
push
mov
dec
push
dec
cwtl
add
incl
sbb
ljmp
inc
push
mov
xlat
cmpsl
mov
rcrb
adc
cmpsb
mov
mov
insl
cmp
sub
fldcw
shr
push
jnp
mov
fisubl
cmp
repnz
imul
push
or
cltd
testb
loop
adc
in
data16
pusha
jecxz
or
ss
stos
test
jnp
pusha
add
cmp
adc
push
arpl
daa
mulb
loopne
std
mov
mov
test
ss
jbe
add
and
fnstenv
push
loopne
movsl
dec
push
push
in
out
repz
lds
loop
loopne
lcall
leave
andl
loope
mov
mov
cmp
xchg
jg
mov
getsec
fwait
lock
fdivrp
dec
adc
xchg
loop
jno
movsb
or
imul
push
xchg
mov
imul
push
outsb
pop
fsubrl
lret
dec
js
push
jb
test
scas
arpl
scas
jecxz
xor
adc
inc
inc
sbb
xchg
fcomps
arpl
dec
ss
shlb
lods
mov
mov
sub
enter
data16
push
and
push
hlt
xchg
sub
push
jbe
xchg
scas
je
sbb
and
std
pop
and
mov
arpl
bound
movsb
dec
mov
lds
jle
ljmp
jl
pop
sub
sti
clc
add
inc
mov
add
mov
imul
push
inc
lds
fwait
test
jmp
ja
fwait
stos
or
sbb
stos
mov
mov
rolb
test
xchg
repnz
and
popf
cltd
aas
sbb
jg
mov
cld
mov
repz
and
test
add
ljmp
lea
sahf
mov
xchg
mov
jnp
lret
rcll
test
or
ds
pop
mov
jno
sub
lahf
lods
cwtl
insl
nop
ror
jecxz
ss
rorb
ds
add
xchg
es
inc
jmp
adc
sub
add
or
mov
ret
push
mov
mov
jb
sub
int
dec
dec
jae
leave
out
imul
lret
call
sub
shl
and
repnz
test
out
sti
adc
xor
pop
mov
lea
xor
sbb
pop
pop
mov
xchg
pop
lock
test
sbb
jmp
ljmp
add
aaa
data16
in
xor
outsl
jl
fxtract
daa
sbb
ret
xchg
clc
in
dec
pop
push
out
sub
and
int
inc
fld
and
and
jle
push
jnp
add
dec
pmaxub
pop
out
mov
jae
pop
adcl
cmp
or
pop
shr
xchg
push
lods
lcallw
out
cli
cmc
pop
add
sti
inc
test
dec
lods
sti
gs
sbb
adcl
pop
shr
pop
fistpl
lahf
imul
inc
jge
mov
pushf
lds
test
xchg
aam
insl
jmp
in
sbb
and
cmp
jb
outsl
or
inc
mov
sub
pushf
mov
mov
imul
std
sub
test
inc
cs
ret
dec
mov
andl
paddsb
mov
mull
mov
dec
int3
loope
loopne
or
pop
lds
sbb
push
jae
cmpsb
pop
jne
ljmp
maxps
out
imul
xchg
dec
jbe
lret
pop
les
mov
outsl
shl
rclb
or
arpl
mov
ret
mov
sub
ret
mov
lcall
jae
pop
mov
sub
jmp
push
pop
inc
test
push
loope
in
mov
fmuls
add
dec
sti
movsb
jle
sub
aad
loop
cmp
adcb
test
pop
push
sub
inc
andb
lds
push
sahf
jl
pop
or
mov
pop
das
xchg
adc
sub
lcall
outsl
jmp
sub
mov
xchg
mov
movsl
ljmp
mov
cli
lret
repz
xchg
pop
leave
loop
xchg
cmp
push
dec
mov
add
mov
inc
stos
adc
dec
sub
jmp
lret
fcomp
leave
jg
fldcw
loop
xor
add
clc
test
lahf
mov
outsl
gs
bound
mov
out
sbb
pop
rclb
in
test
shlb
in
jmp
xor
xlat
xor
aad
push
mov
xor
xchg
sbb
sub
inc
adc
xchg
std
inc
xchg
inc
int3
sub
cmp
mov
jg
into
rcrb
iret
push
ret
mov
shrb
inc
test
ret
xor
mov
add
add
out
andb
fmulp
aad
mov
loopne
daa
cmp
push
fwait
adc
mov
push
clc
sbb
paddsw
mov
xchg
addr16
pop
in
xchg
xor
xchg
push
adc
jmp
pop
inc
outsb
jae
push
iret
xchg
gs
push
adc
push
mov
dec
sbb
out
sbb
push
lods
rcrl
add
aaa
xlat
pushf
sbb
inc
jno
nop
in
jmp
add
xor
or
loope
mov
sbb
inc
ror
dec
in
in
mov
popf
shrl
mov
jg
pop
cmp
xor
pushf
cmp
in
mov
mov
daa
mov
cmp
push
push
mov
push
sub
das
dec
cmp
iret
es
pop
ja
xor
int
cmp
xor
cmp
push
push
and
std
pop
lahf
imul
xor
sub
inc
xor
sar
dec
push
popf
outsl
imul
in
cs
mov
adc
scas
push
sahf
dec
xorb
orb
mov
xor
adcl
sub
scas
out
sub
imul
js
lret
mov
pop
lcall
ds
xchg
faddl
ss
xor
sub
popf
pop
push
xchg
push
jg
cmp
movsb
imul
je
and
inc
gs
fcoms
mov
xchg
push
ss
jg
cmpsb
sub
cmp
pop
orl
imul
in
jle
jmp
stos
pop
data16
dec
xchg
adc
cmc
push
test
pop
xor
popa
imull
cmp
pop
dec
mov
cmc
rcll
inc
lods
push
mov
scas
sub
ja
sub
aam
fistps
lea
lods
rorl
cmpsb
xor
call
arpl
inc
and
jno,pn
ljmp
es
sub
dec
xor
in
je
and
imul
add
decb
lret
iret
arpl
popf
aas
jmp
jle
testl
popf
push
jo
rcl
xchg
xchg
ficoml
rolb
xchg
or
gs
inc
inc
sbb
cmc
inc
loopne
mov
jmp
ss
les
xorb
pop
insb
test
inc
mov
mov
jns
jecxz
lcall
call
das
ficompl
stos
jg
jnp
lahf
push
or
mov
jge
xchg
jmp
out
hlt
test
fisttpll
push
repnz
jl
mov
mov
andb
pop
push
in
or
dec
xchg
cmp
push
xor
dec
in
push
scas
out
cmp
ret
in
cld
mov
sbb
js
sbb
xchg
jl
push
jo
in
jl
pop
jmp
adc
out
mov
ja
rcll
mov
push
fcomip
fsubp
ljmp
jp
cmp
mov
cli
lret
out
hlt
add
xchg
icebp
push
imul
fisubrl
lods
inc
cmp
inc
xchg
xor
rorb
cmp
lret
mov
je
fcom
and
inc
or
dec
scas
rclb
adc
mov
ljmp
mov
inc
cmpb
sbb
in
or
jb
pop
aam
mov
test
jns
dec
scas
or
fdivrp
into
cmpsb
push
repz
xchg
and
add
rcrl
push
mov
mov
and
adc
or
mov
push
scas
aad
sbb
sub
and
stc
xchg
adc
aaa
mov
jne
sbb
xlat
sbb
mov
cmovl
inc
lock
stos
movsl
loope
adc
jp
lea
lods
lcall
imul
sub
mov
addr16
mov
mov
adc
xor
mov
bswap
pop
outsl
into
lcall
push
out
push
in
pop
pushf
jmp
adcl
loope
nop
and
ljmp
sbb
or
or
jp
aas
in
push
loopne
xchg
mov
inc
mov
inc
xchg
cmp
push
sub
into
mov
ds
icebp
adc
fmuls
or
ljmp
scas
ret
xor
mov
pop
xlat
sub
jp
push
int3
pop
lods
lods
inc
ds
or
rolb
dec
shll
popa
mov
or
clc
fcmovb
cli
cmpb
fs
sbb
jg
jbe
jnp
sub
adc
sbb
xchg
pop
out
push
insl
or
jo
lahf
decb
adc
inc
add
faddl
mov
in
dec
pop
xor
mov
add
dec
xchg
push
fiaddl
jle
xor
dec
les
pop
das
mov
fldz
int
ds
sbbb
push
jg
push
imul
ret
mov
jno
sub
ret
xor
stc
push
stos
inc
fisubrl
jno
dec
mov
int3
loop
shl
bound
xor
cltd
js
cwtl
and
insb
pop
imul
pop
xor
or
aam
jg
lcall
popf
push
xchg
and
into
std
shl
fwait
gs
xchg
mov
repnz
cmp
sbb
out
in
pop
inc
adcb
iret
push
out
cmc
fcmovnb
mov
xchg
pop
cli
cmp
fmull
mov
jns
aaa
in
cmp
outsl
sbb
repnz
out
icebp
mov
loope
negb
lcall
or
and
inc
lds
sub
pop
pop
pusha
sbb
sbb
jmp
outsb
andb
data16
in
bound
add
lea
pusha
fwait
ret
in
jne
and
xor
daa
inc
xor
pop
xor
addr16
movsb
dec
jp
fmull
mov
jle
xchg
pop
ja
stos
clc
mov
sub
fldcw
adc
mov
ret
jb
add
or
fs
or
mov
pop
adcb
xor
ds
pop
sub
movsb
mov
aaa
fdivrs
aas
sbb
sbb
loopne
xlat
test
pop
sarb
adc
push
mov
call
jg
loop
dec
xchg
mov
jle
sahf
xor
mov
push
mov
rorb
rcr
lcall
jb
not
mov
xchg
sbb
mov
ja
cmp
cmp
mov
adc
cmp
aaa
int3
or
frstor
popf
pushf
xlat
xchg
pop
ret
arpl
stos
fsts
xor
aaa
jmp
loop
sahf
repnz
arpl
nop
xlat
cld
das
call
pop
adc
movl
repnz
mov
scas
int3
jno
mov
iret
aaa
aas
inc
loopne
lret
mov
push
adc
add
lret
jmp
sti
adc
sub
and
add
out
sbbl
mov
mov
push
sub
xchg
mov
pop
mov
cmc
jbe
cli
sbb
mov
mov
mov
push
imul
mov
fdivr
sub
fmull
pop
lock
jecxz
xchg
and
aaa
sub
pushf
add
leave
lcall
rcrb
lahf
cmpsl
cmp
gs
movsb
cmc
cmp
ret
pop
sbb
mov
inc
xor
push
or
mov
mov
jmp
int3
test
scas
xor
pushf
dec
repnz
in
mov
sbb
movsl
cmc
inc
jg
movl
fcompl
enter
mov
aas
repz
std
sahf
pop
insl
inc
mov
in
mov
pop
dec
sub
adc
ss
fdiv
mov
mov
ja
repnz
mov
add
lea
loop
cmp
xlat
and
inc
in
xchg
jbe
add
mov
cmp
bndstx
adc
xor
into
push
add
movsb
inc
insb
in
jnp
sbb
xor
jp
dec
enter
decb
jg
push
call
fmuls
lret
cltd
jno
pop
xchg
mov
mov
das
mov
test
shll
movsb
mov
jl
sbb
insb
adc
jge
push
jge
pop
orb
mov
lock
jo
lods
sbb
push
pop
mov
xchg
movsb
scas
loopne
jmp
shrl
ret
xchg
hlt
jo
fs
sub
dec
cmpsl
adc
xchg
gs
fidivl
mov
mov
push
arpl
inc
subb
out
sub
leave
lods
decb
enter
mov
loop
mov
add
std
or
insb
hlt
std
sbb
adc
shll
jge
mov
jg
icebp
push
bound
inc
xchg
repnz
jno
dec
sbb
dec
lea
inc
stos
insl
xor
btr
cli
test
loop
lahf
xor
insb
ret
adc
mov
dec
shlb
cmp
or
lds
mov
fnstsw
insl
ljmp
test
ljmp
mov
iret
mov
xchg
sub
mov
fcos
lea
cltd
and
dec
pop
pushf
fisubrs
adc
adc
inc
sub
outsb
sti
imul
call
cmpsb
dec
inc
mov
sbb
xor
iret
inc
icebp
add
push
imul
pop
or
inc
dec
mov
xor
jnp
pop
out
ja
scas
enter
out
inc
adc
add
sbb
xchg
jns
cmp
jl
and
pop
sbb
pop
mov
call
xlat
clc
and
ljmp
sub
loop
inc
repnz
fsub
loope
ret
out
xchg
xor
mov
clc
decl
pop
int3
cltd
sti
push
mov
pop
mov
mov
fs
fcomp
jno
add
fwait
xchg
ret
push
dec
push
jmp
push
cmp
rclb
jb
aaa
cmp
push
mov
xlat
adc
cmpl
add
sub
shrl
ljmp
jge
or
cmp
loop
pop
jmp
sub
mov
sbb
scas
fsubrp
mov
test
cmp
int
and
push
aaa
push
gs
add
xchg
mov
xchg
out
add
movsl
cwtl
shll
ss
test
ret
dec
adc
jae
fadds
test
das
out
sub
xchg
jbe
inc
pop
xchg
loop
add
dec
mov
js
xor
add
or
xchg
mov
jo
jmp
inc
xchg
fs
push
daa
jne
iret
bound
loope
shrb
dec
inc
push
xor
aas
cmpsb
jnp
rolb
jae
testl
pop
add
jecxz
jge
lods
andl
mov
dec
push
lret
or
pop
imulb
xor
add
push
aad
addr16
sub
xchg
mov
loope
clc
lret
mov
sub
pop
leave
sub
xor
fwait
push
lret
lea
fwait
ret
xchg
in
fldl
andb
es
mov
sahf
cmpsb
jg
lods
dec
imul
cs
mov
or
rcrl
mov
mul
and
jl
inc
roll
pop
outsb
repz
push
cmc
push
mov
sub
dec
mov
or
xchg
push
lods
clc
dec
mov
mov
xlat
cmp
cmp
test
mov
jg
mov
cmp
imul
jecxz
shll
paddsw
jp
lds
lea
jge
mov
lods
fwait
fwait
inc
data16
xchg
movsb
xchg
cmpsl
aas
push
lahf
outsb
push
adcl
lea
shlb
aaa
adcl
fstl
xchg
cmp
cwtl
fdivrl
sbb
ret
or
and
es
dec
icebp
ljmp
aad
pop
jl
sarb
dec
and
inc
cs
xor
or
xor
ret
adc
inc
adc
pusha
mov
out
ss
sbb
mov
inc
jg
jb
mov
ret
dec
xor
stos
and
inc
xchg
and
push
or
test
sahf
push
cli
cli
dec
fldcw
mov
xchg
sub
xchg
loope
aam
sbb
inc
cmp
pop
cmc
loope
jns
inc
and
nop
pop
jmp
inc
test
sub
neg
cmp
sub
imul
dec
lods
js
inc
fmulp
mov
inc
sbb
dec
sar
data16
popf
push
pop
cltd
mov
das
sbb
mov
push
and
rcrl
mov
bound
movsb
dec
pushf
cmp
xor
lock
addr16
adc
jae
cmc
stos
imul
xchg
in
aad
push
mov
pusha
adcb
test
call
std
jmp
lcall
cmp
push
inc
addr16
pop
in
and
adc
mov
lret
adc
cmp
xor
fadds
push
iret
sub
xchg
add
js
lea
jecxz
inc
sbb
outsb
xor
nop
or
das
mov
jmp
add
sub
in
pop
stos
mov
push
fimuls
ret
stos
dec
ret
add
outsl
ds
jno
push
testl
add
pop
xor
lea
mov
mov
push
xchg
mov
jbe
std
and
inc
mov
jg
fxch
stos
shrb
movsl
fs
popf
xchg
call
loop
orb
mov
inc
ja
pop
mov
push
sub
push
in
stos
pushf
out
out
aas
xchg
mov
or
arpl
js
scas
aam
push
mov
shr
gs
jl
mov
push
inc
mov
stos
stos
cmp
dec
cld
mov
sahf
out
jne
call
cmp
das
mov
jbe
test
icebp
mov
loopne
lds
or
pop
cmc
or
notb
dec
dec
or
dec
mov
push
jno
cmp
imul
push
or
mov
aas
call
jmp
xlat
test
and
in
inc
loope
out
mov
mulb
dec
cld
out
mov
in
and
cmp
sbb
xchg
mov
and
adc
add
sub
mov
xor
cmp
adc
push
push
jne
sarb
loopne
rclb
fistps
movsl
cmp
pop
lahf
movl
call
das
push
jbe
mov
xchg
mov
pusha
andb
pop
cmc
lods
jge
cmpsl
and
mov
loopne
insb
adc
sub
enter
lods
aad
adc
jl
inc
loope
cmpsb
add
jbe
push
pop
pushf
lahf
ret
add
popf
sbb
cmc
out
mov
push
cld
fwait
aaa
sbb
mov
jle
jmp
movsl
xchg
sub
push
cmp
stos
sbb
repnz
xor
test
shl
xchg
jmp
das
adc
inc
lret
pop
sbb
loope
or
dec
stc
mov
shl
add
pop
dec
xchg
xchg
ffree
in
leave
sub
xchg
sub
add
insl
xorl
lret
dec
xor
subb
out
cmp
sarb
roll
out
mov
ret
into
xchg
push
mov
addr16
cmp
push
or
stos
mov
fsub
dec
jb
insb
frstor
movsl
lahf
add
lret
out
adc
cmp
xchg
jl
sub
lahf
fwait
out
jne
push
jle
cmp
repnz
jl
dec
ret
mov
mov
aaa
add
xchg
js
xchg
fstpt
push
inc
imulb
fcoml
aam
push
je
std
mov
popa
outsl
dec
add
imull
pop
push
clc
push
and
inc
and
and
and
adc
jnp
cli
in
mov
jo
add
sarb
leave
pop
pop
pushf
add
add
adc
jge
mov
aaa
ret
push
sbb
cmpsb
push
sbb
jle
lock
mov
mov
mov
lock
adc
dec
push
icebp
fidivrl
fwait
push
jecxz
jl
cwtl
notb
pop
or
test
leave
and
sbb
adc
sbb
movsb
xor
pop
xchg
push
add
and
loopne
cli
lea
test
movsl
and
adc
pop
lods
hlt
dec
loopne
and
jb
rolb
push
int
cmp
push
sarb
enter
xor
inc
mov
push
push
inc
cmpsl
add
jg
dec
imul
popf
neg
shlb
sahf
dec
mov
xor
enter
dec
fsubs
push
pusha
cmp
jne
sbb
sbb
enter
insb
stos
pop
cmc
ret
xchg
in
mov
push
push
cmp
push
xchg
add
cmpsl
cmpxchg
xchg
xor
stc
push
outsb
cwtl
cmp
inc
call
inc
pusha
test
in
flds
mov
dec
xor
add
dec
test
mov
mov
pop
mov
jns
imul
cmp
jge
mov
sub
mov
and
int3
push
or
mov
insl
sub
mov
mov
sub
and
repz
add
inc
xor
fsubs
scas
or
enter
xlat
inc
shlb
aad
inc
mov
jb
lea
mov
sbb
jl
ss
sbb
repnz
sbb
fisttpl
outsb
or
mov
pushf
fnstsw
ffreep
jle
fidivrs
mov
mov
test
mov
xor
jl
fmull
in
xor
sub
mov
sub
jb
test
aaa
imul
add
mov
and
test
cli
jo
dec
lea
mov
xchg
imul
in
and
ss
and
outsb
fsubrl
cmpl
cmp
cmp
mov
pop
xchg
pop
push
stc
adc
sub
adc
push
pop
cmp
leave
jmp
fcmovne
in
in
faddl
inc
push
or
jnp
movsb
fisttpll
cmp
adc
push
cmp
mov
and
shl
cmp
sar
test
and
or
into
in
push
push
out
lds
lea
xchg
add
add
cli
xor
adc
int
stos
data16
sub
sbb
jns
sahf
or
shll
or
mov
insb
dec
rolb
in
inc
sbb
and
mov
into
mov
iret
or
call
ja
cmp
data16
int3
repz
leave
dec
mov
push
pop
loopne
inc
leave
mov
jns
sbb
pop
xchg
inc
or
jno
lods
inc
lods
icebp
cwtl
ljmp
fmuls
ljmp
into
mov
jl
cmc
es
test
xchg
jge
mov
sbb
cmpsl
mov
repz
pop
test
xchg
push
enter
in
cmp
je
add
dec
stc
xchg
ret
pusha
inc
xchg
outsb
mov
push
into
loope
aad
pop
pop
or
pusha
lods
cmp
cmp
xchg
dec
cld
cmp
cmp
and
stos
std
jo
subb
stc
dec
mov
push
fwait
push
or
mov
cmp
mov
sbb
adc
xor
jo
sarl
and
jle
dec
sti
xchg
xchg
add
popl
adc
popa
imull
xor
jmp
jo
adc
xchg
stc
sbb
pop
pop
dec
lret
jle,pn
out
sbb
imul
lret
add
xchg
mov
enter
addr16
and
xchg
push
mov
inc
adc
les
inc
ljmp
aaa
mov
imulb
fcomp
cli
fcomip
cmp
cmp
je
sub
push
sti
jl
pop
mov
test
subl
aas
andnps
or
fiadds
lahf
int
push
popa
cmp
cld
call
push
rclb
sub
test
sub
cmp
cs
clc
shrl
icebp
fidivl
push
mov
push
call
mov
jl
mov
pop
cs
fs
out
sti
jb
and
sbbb
imul
cmpsl
adc
outsl
clc
ds
js
frstor
add
enter
fisttpll
lods
and
iret
sbb
and
push
orb
sbb
mov
mov
push
imul
in
stc
in
or
xor
xchg
or
arpl
cmpsb
cmp
lock
leave
xor
gs
push
out
add
lock
fldt
sbb
clc
lock
ss
daa
xor
pusha
cmp
mov
loope
lock
mov
xor
push
mov
mov
mov
aad
test
xor
push
push
sub
push
xchg
aam
cmp
or
popa
and
aas
inc
pop
inc
loope
cmp
test
test
ja
mov
lret
mov
fwait
xor
ss
jb
push
adc
jecxz
stos
push
test
inc
or
adc
push
pusha
nop
push
ficomps
fwait
imul
pushf
mov
dec
inc
sbb
and
mov
pop
cli
add
out
testb
sahf
test
inc
cmp
add
jae
fcmovbe
loope
inc
xchg
add
adc
jo
lods
ss
mov
sarl
xor
out
mov
mov
fildll
inc
imul
mov
push
and
pop
push
sub
stos
popf
fsubrs
gs
decb
dec
mov
jp
addr16
xchg
ds
es
xchg
fistpll
dec
call
sahf
sub
addr16
lods
mov
sahf
jmp
shll
mov
push
pop
inc
cltd
roll
sbb
daa
jo
cmp
or
je
test
mov
fmulp
pushl
in
pop
jbe
dec
jae
fists
mov
mov
dec
mov
out
loopne
inc
push
sub
sbb
jo
and
add
and
scas
push
mov
jns
in
push
lret
add
sub
in
mov
ret
dec
mov
pusha
sub
mov
rcll
xchg
cmpsl
xor
push
popf
lds
dec
cmp
adc
loope
daa
fildll
data16
popa
mov
dec
aaa
add
popa
sahf
inc
sub
mov
std
xor
xor
loopne
movsb
xor
dec
cmp
dec
hlt
mov
dec
xchg
jecxz
shlb
xlat
rcl
sbb
rcrl
inc
sahf
and
shll
test
jb
push
dec
push
pusha
sbb
cmp
adc
cmp
adc
xchg
jbe
or
repnz
adc
mov
cwtl
inc
imulb
sahf
sub
je
popf
jns
mov
fcom
cld
cmpsl
jbe
icebp
inc
out
push
dec
mov
xor
sub
jg
addr16
sbbb
dec
sbb
sub
lret
pop
mov
ljmp
inc
dec
xchg
int3
or
jl
dec
sub
sbb
ds
in
inc
not
sbb
xchg
mov
jl
ds
and
movsl
aaa
fsub
or
dec
adc
mov
add
subl
xchg
lock
lds
jbe
and
popa
xor
xor
popf
push
shlb
cvtdq2ps
outsb
mov
sbb
je
sub
add
in
mov
ss
push
push
sbb
test
nop
jmp
arpl
push
aaa
mov
adc
out
xor
out
test
sbb
push
cmp
in
adc
jne
js
or
push
inc
jle
push
and
ds
push
test
xchg
test
movsl
lock
dec
inc
xor
push
mov
cli
fld
loop
and
inc
arpl
aam
cltd
call
callw
enter
cmp
mov
movsb
orl
push
dec
pop
and
std
stos
mov
sub
and
into
fucom
or
pop
or
inc
lods
in
mov
addr16
fsubrs
out
pop
fstl
cli
and
push
aam
in
add
repz
sbb
push
xchg
cld
jo
xchg
fs
pop
jle
sbb
mov
sub
mov
pop
xchg
jg
and
mov
cmpsl
mov
push
dec
add
or
pop
in
jmp
jnp
sub
and
cwtl
movsl
sbb
sbb
jo
in
dec
stos
push
xchg
lea
add
add
pop
insl
push
mov
pop
push
hlt
mov
cltd
pushf
lret
jae
mov
rcl
rolb
jmp
pop
jne
lods
add
nop
bound
leave
pop
jne
jbe
cltd
mov
sbb
add
daa
or
pop
xchg
fwait
ljmp
pop
std
adc
xor
push
loop
lods
iret
ljmp
fisubrl
mov
clc
sbb
lahf
and
mov
mov
aas
cltd
push
jp
dec
in
sub
xlat
dec
adc
adc
jl
data16
xlat
ss
fcompl
stc
hlt
int
in
into
mov
mov
arpl
xchg
mov
fwait
popf
add
jno
mov
xchg
or
aas
das
jge
cli
outsb
mov
insl
rcl
daa
ds
aas
mov
and
or
lock
jp
lods
dec
mov
enter
pop
push
sub
fldt
xchg
aam
loopne
push
mov
mov
mov
dec
mov
lock
pop
test
jecxz
jg
add
or
lret
sti
xchg
xchg
cmc
inc
lods
push
rcll
ds
ror
aaa
cmpsl
mov
jbe
dec
lea
xlat
add
je
cmp
mov
ja
out
mov
sub
test
xor
dec
imul
cmpsl
and
cmc
inc
xchg
shll
addr16
popf
sbb
jno
rcrb
or
adc
fstl
jl
or
or
and
sarb
sub
arpl
int3
fs
fdivs
ret
lods
bound
mov
imul
adc
pop
and
sbb
pop
call
add
jp
dec
incb
pop
jno
imul
xor
sbb
mov
pop
sbbl
scas
insl
add
adc
pop
mov
cmp
adc
jne
jp
and
sub
test
scas
mov
xor
jb
call
ja
loope
or
add
pusha
arpl
mull
test
sub
test
sbb
and
fdivl
inc
xchg
mov
testl
push
push
and
dec
in
iret
movzbl
clc
out
mov
jle
xchg
push
adc
cmp
mov
test
ljmp
mov
out
adc
jbe
adcb
cmpsb
stc
repnz
outsb
inc
ret
and
xchg
push
cltd
into
sub
dec
stos
daa
notb
cltd
xorb
lods
push
orb
orl
ds
lahf
fldt
or
popa
outsl
jns
push
sbb
add
dec
popa
xor
inc
in
sbb
mov
icebp
fistps
cmc
or
fists
xchg
idivb
pop
and
pop
cmp
roll
jnp
ss
inc
push
stos
andl
inc
stc
cmp
shrl
fldt
sti
stos
cmp
dec
in
push
and
in
fs
outsb
in
or
mov
adc
push
test
mov
xchg
repz
xor
imul
cmpsl
data16
int3
dec
scas
jmp
add
inc
pop
mov
in
outsb
mov
lret
and
mov
mov
mull
imul
or
pop
nop
pop
repz
cli
in
dec
imul
sahf
dec
adc
and
ss
sub
pop
jno
xchg
repz
dec
jle
push
test
adcl
jecxz
in
pop
push
pop
lea
pop
pop
inc
jg
adcl
xor
mov
push
mov
add
mov
popf
enter
out
out
mov
iret
pop
fsubs
pop
int
xchg
jge
ret
movsl
mov
xor
aaa
fmul
test
sub
xchg
aas
andl
pop
cmp
pop
mov
fwait
inc
adc
dec
mov
add
scas
mov
repz
dec
push
jne
fcomps
and
rcll
add
rorb
inc
pop
dec
jnp
or
sub
or
inc
enter
jmp
adc
jp
icebp
insb
gs
jg
int
sti
aas
nop
xchg
test
fdivs
or
cs
imul
or
push
push
repz
shrl
sbb
jb
cmp
or
into
mov
out
mov
jmp
das
fbstp
sub
in
adc
cwtl
ret
leave
ja
xchg
das
pop
sub
iret
jecxz
xchg
jmp
jl
cli
mov
mov
push
mov
out
jge
jnp
ljmp
adc
idivl
dec
sub
aaa
pop
out
pusha
addl
fucomip
stos
push
jae
addr16
push
inc
mov
enter
out
jmp
add
gs
jno
movsl
cmpb
mov
and
fsts
jp
iret
jecxz
mov
subl
shll
lds
insl
ss
repz
cmp
lods
into
add
movlps
pop
fs
outsl
cmp
sbb
mov
fsubr
or
ja
xchg
mov
xchg
shrl
cmpsl
fcoml
mov
test
push
fwait
sub
sub
jmp
xor
push
shlb
and
bound
sbb
mull
mov
or
mov
clc
push
movsb
fstl
inc
repz
mov
pusha
sbb
lds
xchg
std
into
mov
jae
xor
sbb
fcompl
xor
movsl
dec
xchg
mov
punpckldq
pop
push
xchg
mov
xlat
loop
repz
mov
dec
mov
push
addr16
mov
cmpsl
pop
fstpl
mov
lret
jae
test
mov
pop
sub
pop
mov
inc
or
sub
repz
aad
test
adc
pop
sbbb
pop
sbb
inc
rolb
mov
xchg
sahf
stos
add
add
pop
popl
call
inc
add
mov
cmp
dec
dec
ja
mov
and
inc
or
fnstsw
popf
mov
jne
xchg
jns
ret
pop
icebp
hlt
and
mov
lcall
in
push
movsb
mov
sti
mov
daa
adc
fdiv
rcr
xchg
xchg
repnz
stos
lret
shlb
pop
jle
fistl
sub
push
ret
mov
jb
lahf
lock
sub
lret
mov
jb
mov
pop
inc
int
xor
mov
sbb
xchg
ret
xor
sbb
pusha
push
outsl
aam
shl
out
je
mov
cltd
test
popa
mov
ljmp
lods
mov
dec
sbb
imul
arpl
push
addr16
les
mov
inc
or
pop
stos
or
das
mov
ret
aas
jecxz
dec
cmp
xor
mov
aad
scas
xchg
dec
in
mov
add
ret
test
jge
insl
add
fimuls
jno
in
aaa
js
loop
pusha
sti
inc
jge
arpl
push
cmp
shll
push
inc
cld
push
shr
cmp
push
cmc
pop
push
mov
sub
cmc
daa
xchg
nop
test
push
aam
cmp
data16
pop
sbb
sub
add
jb
xchg
popf
push
push
cmp
xor
sti
jp
inc
daa
xchg
scas
fcoms
std
pop
mov
and
dec
mov
dec
js
or
push
ja
push
outsb
push
icebp
hlt
jae
adc
ret
sbb
aas
in
sbb
lds
cmp
push
dec
push
push
xor
lods
movsb
mov
shrb
inc
add
lods
inc
int3
cmpsl
xor
xchg
sbb
rcl
jbe
sbb
lea
dec
pop
dec
inc
clc
sub
and
in
sub
pushf
pop
add
mov
movb
or
rcl
push
lret
js
movb
in
push
lret
shr
lods
mov
sahf
out
cmp
fucom
clc
jp
sbb
add
nop
ja
dec
cld
dec
fdivl
out
pop
ja
test
jns
stos
mov
subb
dec
pop
mov
popa
cltd
jmp
fwait
in
fcmovbe
roll
mov
jae
jle
or
push
cmp
in
jl
jb
loop
mov
xlat
xchg
xchg
add
call
jl
addr16
js
jns
cmp
lcall
xchg
mov
fnstcw
test
ret
gs
inc
jecxz
mov
adc
mov
adc
cwtl
pop
into
sub
inc
repz
add
pop
jne
add
ljmp
imul
add
fistpl
adc
dec
in
mov
push
sbb
sub
sahf
out
test
les
mov
loopne
aaa
mov
sahf
xor
int3
mov
xor
push
cmp
das
fisttps
sbb
pop
mov
inc
mov
mov
jmp
inc
dec
aaa
pop
lods
loopne
xchg
inc
adc
push
jnp
and
mov
inc
inc
or
mov
lret
sub
test
shll
adc
mov
mov
lock
insb
dec
push
mov
cwtl
xor
jo
jb
inc
push
loopne
mov
les
mov
xchg
rcrl
outsl
mov
repnz
pop
mov
mov
and
jp
adc
in
push
cmpsb
mov
sub
ja
mov
jae
dec
das
xlat
loopne
loop
stc
add
test
mov
pop
in
ret
daa
and
inc
cltd
cmpsb
jno
mov
into
cmp
lret
mov
imul
xchg
repz
aad
jae
int3
in
bsf
mov
das
cltd
popa
adc
cmp
mulb
jne
out
sub
mov
test
movsl
popf
lret
cmp
jmp
ss
cmpsl
pop
icebp
xor
aas
or
imulb
or
xlat
inc
mov
mov
sahf
pop
jle
out
sbb
xor
push
outsb
lret
cmp
jne
xchg
mov
divb
dec
fwait
xor
clc
jne
jecxz
jb
call
mov
in
pusha
adc
arpl
sub
nop
mov
dec
cwtl
outsb
push
mov
or
add
mov
or
aad
sbb
and
cmp
fnstenv
bound
mov
pop
dec
and
loopne
ret
arpl
sarl
jb
pop
push
mov
fmuls
mov
out
jns
rcr
fimull
mov
dec
push
lahf
fldt
movsl
inc
mov
adc
push
inc
jge
and
fstpl
mov
ret
pop
sub
and
ss
lcall
out
std
pop
cmc
clc
fwait
hlt
into
jne
sub
fsubrl
cmpsb
adcl
popf
push
into
repnz
enter
pop
xchg
ja
mov
jno
xchg
loopne
pop
adc
sub
adc
mov
adc
popa
bnd
stos
dec
adc
cmp
xor
ds
loop
das
sbb
movb
mov
stos
jnp
sub
mov
mov
outsb
jmp
ja
dec
mov
xor
cmc
les
and
js
loop
or
jne
into
dec
sbb
pop
stos
into
das
pop
int3
aas
push
insb
jp
insb
out
and
sub
mov
test
mov
add
ljmp
push
scas
xchg
imul
xchg
mov
sbb
mov
sbb
stc
push
xchg
xchg
gs
fcmovu
dec
cmp
cmp
lcall
js
inc
or
mov
cmp
push
call
or
ja
je
movsl
add
scas
movsl
sub
pushf
cmpsl
jg
bound
inc
leave
mov
pop
hlt
fwait
jl
lcall
adc
cmp
stos
jg
adc
jle
jnp
or
and
mov
inc
mov
sti
inc
andl
cmc
jnp
pop
lret
fidivrl
push
jg
mov
fstl
inc
dec
fwait
or
lea
sarb
dec
movsl
fstps
lcall
mov
pop
jecxz
cmp
in
test
pop
fistpl
insb
jp
in
inc
repz
incl
adc
insb
mov
pop
inc
and
dec
and
fnstsw
sub
jb
loope
dec
test
je
push
daa
add
shlb
ja
mov
out
ficoms
jecxz
or
or
or
int
or
inc
addl
shl
sub
or
sub
jg
dec
dec
sbb
std
insl
iret
or
add
mov
push
divl
mov
cmc
and
cmc
pop
mov
sti
inc
ja
jbe
fcmovne
pop
ja
push
sub
addr16
mov
aas
mov
sbb
mov
mov
ljmp
fwait
sbb
push
arpl
and
lea
adc
lods
add
add
push
mov
into
push
ljmp
push
push
addr16
mov
pop
dec
add
test
mov
pop
lcall
pop
callw
xchg
ja
pop
inc
mov
inc
dec
sub
sub
cmp
xor
loop
mov
stos
fyl2xp1
mov
push
mov
into
inc
pop
out
imul
dec
decl
pop
push
lods
jne
je
mov
or
cmp
xchg
sbb
scas
hlt
iret
outsl
adc
and
push
lcall
pusha
mov
sub
cli
cmp
adc
or
adc
mov
jo
fwait
adc
mov
adc
aaa
bswap
call
dec
stc
sub
fadds
push
xor
idivb
push
loope
std
push
push
popf
mov
outsl
sbb
clc
pop
fistpll
in
lret
fldt
cmp
mov
cmpsl
sti
flds
sub
sub
mov
shll
xor
roll
pop
sub
ss
mov
xchg
or
mov
or
and
cs
int
mov
lcall
jnp
into
hlt
jmp
dec
cmp
mov
inc
jno
inc
test
or
mov
inc
mov
sarb
inc
jbe
push
fwait
add
push
cmp
icebp
inc
les
clc
cmp
mov
out
push
mov
push
fisttpl
jnp
push
int3
mov
fmuls
movsl
enter
jns
mov
mov
cmpxchg
xor
fcoml
xchg
aad
cmpsl
push
shrl
xlat
ret
ret
adc
push
ficoms
push
jae
or
jl
sub
cs
fsubr
enter
clc
decl
cmp
dec
jmp
dec
mov
sbb
pop
lock
test
mov
pop
addr16
pop
repnz
adc
outsl
xchg
cltd
jne
inc
outsl
lods
adc
in
addr16
cmp
push
repnz
xchg
or
and
clc
and
popa
adc
fidivl
and
imul
fdivr
push
jmp
jbe
push
fpatan
adc
sbb
test
fstps
inc
lret
mov
mov
gs
add
test
inc
lret
dec
cbtw
fistpll
xchg
add
jnp
ficomps
rcll
jnp
popf
or
fisttpl
call
pop
fadd
jno
mov
repnz
loope
outsl
sbb
push
aas
out
dec
fisubs
in
fidivs
sub
cmp
jbe
jl
push
mov
fs
adc
out
je
xchg
pop
jge
outsl
loopne
pop
mov
inc
lock
aad
mov
aas
sbb
scas
outsb
je
hlt
pop
in
mov
out
sahf
sahf
ret
adc
pusha
dec
dec
repz
and
out
pop
or
lcall
xchg
ja
mov
out
jmp
arpl
inc
shrl
mov
test
dec
cmp
nop
mov
aas
mov
int3
xor
imul
adc
jecxz
out
cmc
icebp
cltd
mov
repz
in
lret
shlb
repz
jge
jecxz
in
mov
stos
loopne
push
dec
ret
push
jns
mov
xor
or
xor
and
pop
mov
or
xchg
add
or
das
fildll
call
aad
in
mov
sub
ja
cmpsl
test
dec
in
enter
ret
and
push
push
js
push
test
lods
bound
shll
jno
xor
push
push
flds
pop
test
int3
cmpsb
ret
mov
dec
jns
icebp
aad
xchg
test
sti
ja
or
clc
add
and
sub
cmp
adc
xor
ficomps
add
in
add
push
lcall
jg
test
cli
outsl
mov
mov
jnp
lods
fcmove
mov
inc
inc
shll
fdivrs
int
decb
add
mov
sbb
mov
scas
jo
cwtl
imul
in
in
arpl
hlt
mov
inc
push
in
test
lret
cmp
shlb
addr16
xor
test
push
or
mov
sbb
pop
mov
pusha
sbb
mov
ret
fadds
pop
arpl
ret
mov
cld
sub
in
xchg
add
pop
mov
iret
shll
mov
mov
mov
push
and
mov
sub
mov
mov
jns
sbb
movsl
jbe
mov
aad
popf
sbb
jne
pusha
iret
and
flds
sub
ja
mov
je
addr16
out
jmp
or
cld
shll
movsb
jecxz
fsubr
jns
call
xor
dec
ror
inc
call
mov
cld
repnz
push
andl
test
cmp
fldt
xchg
repnz
cltd
push
mov
aad
sarl
fidivl
mov
enter
jns
out
add
xor
push
add
int3
lahf
lods
or
or
loop
das
inc
mov
xchg
pop
xor
cmpsb
mov
sti
mov
aad
xchg
dec
cmp
cmp
add
mov
sbb
test
fildll
loopne
dec
push
popa
cmp
outsb
in
push
pop
jecxz
sub
sbb
in
cmp
xchg
jg
pusha
ss
mov
mov
push
je
mov
movsl
pop
test
cmp
loop
bound
jge
aam
dec
xchg
xor
mov
mov
inc
or
fimull
dec
push
shl
leave
mov
out
repnz
gs
add
scas
outsl
in
xchg
mov
inc
push
aas
jne
xor
shlb
clc
cmpsl
sub
jmp
enter
es
in
leave
stos
imul
xchg
pop
test
aad
loop
dec
pop
movb
fbstp
push
add
pop
js
divb
dec
sarl
pop
and
rclb
adcb
aad
int3
or
lahf
push
xor
leave
shl
rcrb
cli
pop
add
dec
xchg
mov
push
xor
cwtl
icebp
call
int
pop
movsb
and
outsb
lock
std
pop
out
mov
loop
sub
lahf
sbb
repnz
mov
or
xorb
data16
inc
mov
cmpl
ror
imul
inc
bound
push
mov
cmp
clc
iret
jecxz
shll
loopne
nop
leave
pop
push
push
data16
sbb
add
mov
push
loope
mov
stos
inc
pusha
aaa
xchg
int3
lods
dec
inc
data16
adc
call
sub
xor
and
testl
mul
mov
mov
shlb
push
div
mov
pop
sub
push
divb
fcos
std
mov
xchg
sbbb
orl
dec
rorl
mov
sarb
hlt
nop
pop
xchg
pop
jl
ss
fisttpll
sub
adc
je
enter
hlt
roll
lret
jecxz
fmul
jecxz
loope
movsl
fisubs
dec
out
mov
aaa
rolb
movsl
push
push
shl
jnp
icebp
aad
mov
jnp
jecxz
sub
mov
mov
jl
mov
ja
adc
outsl
sbb
lds
add
xor
add
jp
aas
cld
pusha
inc
in
inc
popf
mov
inc
cmp
insl
ret
jge
inc
xchg
jae
lret
xchg
adc
call
push
xor
or
push
pop
lock
or
shlb
push
subl
daa
mov
enter
adc
or
mov
sub
pop
hlt
lahf
sub
cmp
and
adc
sahf
xchg
inc
jmp
inc
jge
and
call
lret
in
mov
xchg
sti
dec
mov
iret
cmpsb
cmp
sbb
add
push
mov
fwait
cld
dec
adc
ds
pushf
add
push
std
imulb
je
stos
cli
lock
loopne
and
test
insl
and
out
cltd
sub
cmp
add
xor
cmpsl
js
cwtl
mov
outsb
sbb
pop
stos
xchg
mov
dec
or
dec
fildll
iret
or
xor
ljmp
xchg
ja
ds
dec
inc
data16
repz
cwtl
pop
fs
fimuls
icebp
push
rcrl
or
inc
and
shr
jle
mov
push
test
outsl
hlt
loop
rcr
loope
shlb
push
addr16
lahf
xchg
jg
das
movsl
jae
sbb
sahf
sub
test
add
push
imul
jl
test
outsb
push
imul
in
insl
cmp
scas
push
jg
ja
jo
push
ljmp
jnp
mov
xor
rcrl
rorl
add
aam
mov
mov
pop
getsec
cmp
clc
je
test
cld
hlt
daa
push
ja
xchg
in
aas
aaa
mov
push
icebp
mov
lock
pop
adc
frstor
lcall
mov
xchg
rorl
jbe
ret
mov
jnp
mov
sub
sahf
in
xchg
lds
sahf
sbb
jecxz
sbb
dec
lcall
scas
insl
ljmp
mov
xchg
cmp
popl
xchg
inc
pop
mov
mov
sbb
xchg
test
add
adc
cmp
xchg
mov
movsb
lods
in
mov
xor
sub
out
pusha
xchg
xlat
cli
lods
cmp
inc
addr16
js
push
cmp
pop
out
aam
inc
jne
pop
js
scas
lock
pop
popa
push
and
push
sub
cmpsb
pop
dec
sbb
lods
lret
in
sbb
lea
jle
mov
fmulp
lods
sub
das
lds
mov
das
test
xlat
ret
int
jp
jmp
sub
ss
jb
jns
sub
pop
shrl
roll
sbb
or
add
js
pop
cmc
xchg
daa
push
push
in
xchg
test
fmull
xlat
push
hlt
mov
add
mov
shrb
nop
les
rorb
fmuls
sub
and
sub
pop
push
mov
fcompl
ficomps
add
add
divl
push
ljmp
inc
and
mov
or
jbe
outsb
pop
fldenv
in
xchg
aam
pushf
adc
xchg
pop
test
addr16
scas
push
pop
adc
mov
mov
test
xchg
push
jle
outsb
leave
adcl
mov
in
push
scas
lods
mov
imul
adc
jne
lret
movsl
sbbb
mov
inc
and
hlt
cmc
daa
insl
jno
jno
loopne
xor
aaa
push
push
xchg
sti
mov
imull
dec
insb
push
mov
icebp
pop
or
adc
push
xchg
test
fisttpl
mov
fbstp
lea
stos
cmpsl
clc
sub
lods
aaa
out
jecxz
mov
out
fs
fimuls
jl
cmp
and
pushf
mov
cmp
popa
xorl
in
cld
mov
jo
xor
test
mov
cmpsb
das
pop
xorb
frstor
jb
push
stos
xchg
scas
jno
jl
data16
mov
inc
sub
inc
push
icebp
mov
mov
or
out
add
push
pop
push
or
sbb
aaa
push
or
scas
cmp
sbb
push
mov
clc
mov
adcl
ja
popl
fildl
and
fldt
pshufw
loope
adc
lock
inc
out
sub
popa
sub
ret
outsb
mov
push
popa
es
mov
cmpsb
inc
jecxz
out
xchg
lods
insl
mov
mov
push
aam
jnp
jae
mov
test
cmp
push
push
push
inc
dec
sbb
movsl
lret
or
sbb
shll
mov
inc
ljmp
cmpsb
mov
cli
or
ss
or
and
pop
xor
xchg
push
addb
ficompl
ret
sahf
jp
mov
inc
mov
popa
mov
push
xor
xchg
sbb
inc
fimull
jmp
cmc
xor
insl
loop
sub
inc
lret
and
rorb
dec
std
cmpsl
xor
daa
xchg
pusha
mov
addr16
cltd
adc
scas
les
mov
xchg
inc
lret
jmp
and
aaa
aas
movsb
xor
pop
push
dec
mov
and
test
mov
push
or
push
mov
push
in
xchg
xchg
push
test
mov
push
sbb
sub
or
js
cs
int
fnstcw
lods
jno
add
aas
xor
lods
insl
movsl
push
sbb
ret
cmp
pushf
test
mov
inc
push
in
popa
out
je
xor
rclb
sub
xor
mov
mov
mov
cmp
cmp
fnstsw
xor
add
mov
dec
test
sbb
int3
shlb
out
insl
xorb
in
loopne
ss
aam
rcrb
sarb
int
aas
mov
jo
pop
mov
mov
nop
xchg
and
dec
xchg
sbb
scas
aaa
xor
inc
mov
cld
mov
push
addr16
and
pop
jae
xchg
and
dec
dec
sub
fs
dec
pushl
insl
scas
addr16
lret
jmp
pusha
xor
les
leave
jb
ret
mov
std
dec
lahf
and
aas
hlt
or
push
add
push
repnz
cld
jno
sub
mov
push
pop
mov
lock
dec
mov
jg
pusha
cmp
xchg
push
mov
out
mov
aaa
outsb
insb
mov
lds
push
and
fcoms
ficompl
mov
mov
inc
mov
xor
rcrl
pop
stc
loopne
xchg
nop
ret
mov
dec
jno
cmp
dec
dec
fdivrs
jecxz
out
test
lock
int3
lods
xchg
jo
shlb
push
mov
pop
in
cld
sbb
mov
mov
adc
loop
mov
outsl
push
movsl
test
push
cltd
lods
imul
inc
ret
mov
insb
push
push
inc
and
aam
mulb
in
pop
shr
or
dec
jmp
cmp
inc
push
or
dec
std
inc
sub
sub
popa
inc
dec
and
loopew
mov
pusha
xor
insl
push
cmp
mov
add
mov
and
push
lcall
mov
rorb
jle
lea
xor
std
bnd
lds
mov
imul
pop
pop
out
sub
add
iret
adc
cltd
xchg
out
mov
mov
inc
and
pop
mov
adc
jmp
dec
pusha
cmpsb
sbb
mov
push
mov
mov
ss
dec
cmpsb
outsl
xchg
mov
das
lret
lods
mov
fbld
aas
pusha
icebp
jnp
int
iret
movsb
and
aam
sub
sbb
pop
cmp
mov
jb
jmp
mov
mov
xlat
es
pop
or
test
jle
dec
pop
shlb
mov
pop
or
hlt
shll
lret
test
fiadds
mov
and
nop
pop
jp
sbb
adc
mov
mov
sarb
pop
jp
dec
repnz
inc
mov
dec
lock
mov
or
push
and
push
mov
or
inc
dec
pop
and
adc
call
add
inc
leave
movl
sbb
cwtl
cmp
sub
mov
jne
mov
jmp
mov
ds
adc
insl
lcall
hlt
cmp
negb
mov
sub
adc
jle
mov
das
xor
cmp
push
sbb
fwait
push
ss
jo
xchg
hlt
sub
mov
call
jle
cs
or
in
mov
ja
jb
fisubs
lahf
cs
adc
call
push
add
fmul
test
rorb
xchg
pop
and
sub
fwait
int3
sub
mov
sti
jae
pop
cmp
leave
jno
adc
cmp
inc
mov
ljmp
vunpckhps
call
rorb
mov
inc
inc
push
push
or
sbb
xchg
jmp
jmp
add
mov
ja
hlt
mov
hlt
jge
test
icebp
jns
xchg
adc
dec
and
xchg
or
sbb
in
push
mov
stc
cmp
cs
mov
xor
mov
fwait
fs
leave
icebp
je
sub
inc
pushf
xor
int
pop
test
sbb
ja
lcall
pop
ljmp
xchg
xchg
movl
push
call
pop
cmp
dec
stos
aas
mov
in
xchg
push
lods
pop
in
fs
pusha
outsb
popa
les
inc
xchg
iret
repz
imul
ret
jo
and
mov
pushf
rol
into
jb
xchg
mov
xor
movsb
sub
xor
adc
add
inc
orl
xchg
push
sub
add
test
sbb
lret
push
lahf
cmc
push
sbb
negb
and
inc
push
out
or
das
es
mov
cmpb
dec
dec
flds
mov
stc
es
pop
dec
test
shlb
push
mov
call
orl
xchg
pusha
inc
cmp
cmp
sbb
scas
push
push
fdivl
push
fadds
pop
push
lea
adc
adc
adc
or
roll
adc
mov
or
sar
int
mov
popf
outsb
mov
test
inc
bound
dec
sub
sbb
xor
sub
mov
xor
add
lock
lret
cmpsb
mov
fildl
jmp
adc
out
adc
dec
fidivrs
adc
sti
iret
loop
push
pop
or
push
loop
add
loope
push
sbb
int
jns
mov
hlt
jge
notb
cli
imul
pushl
mov
dec
in
push
imul
push
pop
outsl
xlat
add
lret
mov
std
mov
sbb
and
xchg
inc
das
call
insl
loopne
xchg
or
fdivs
sbb
mov
loope
out
shrb
add
loop
pop
mov
in
mov
int3
lcall
orb
add
cmp
les
mov
imul
pusha
xchg
or
xor
popf
and
dec
insl
rcl
add
xorb
movsl
fldenv
sub
inc
or
sbb
mov
mov
iret
pushf
mov
int3
dec
std
sub
sbb
mov
fdivr
std
push
xchg
fdivs
jmp
incl
adc
jae
push
mov
iret
in
pop
mov
and
mov
cmp
outsl
fistl
or
mov
cmp
adc
jne
sbb
add
mov
mov
sbb
mov
imul
ds
inc
xchg
xchg
push
cmc
jno
cmpsl
js
xlat
cmp
cmp
cs
jo
mov
icebp
xchg
adc
insl
subl
test
out
andl
rclb
aad
ret
adc
scas
ja
out
in
std
std
add
mov
mov
jae
in
popa
fstpl
out
mov
add
add
fistps
or
fistps
mov
xchg
movsl
jecxz
sarb
stos
xchg
lcall
xor
cmc
in
clc
xchg
cld
mov
mov
addr16
in
mov
push
xor
mov
mov
or
lods
shr
pop
dec
inc
daa
push
fs
jne
push
imul
rolb
aas
xchg
xchg
push
and
stos
sub
in
ror
iret
adc
xchg
xchg
sbb
addr16
mov
sbb
pop
and
or
lcall
xor
insl
mov
hlt
xchg
outsb
xchg
jbe
in
sub
or
dec
pop
jmp
loope
sub
pop
lock
jmp
daa
pop
movsb
mull
mov
lds
jno
inc
push
leave
or
and
mov
adc
pop
test
cmpsl
xchg
push
mov
sahf
xor
leave
jg
push
in
gs
cld
dec
inc
std
jle
in
fstpl
push
mov
and
jle
sbb
outsl
dec
sub
stc
adc
dec
loop
mov
lods
addb
xchg
jmp
xchg
add
sub
xchg
mov
jecxz
pop
pop
andb
lods
adc
sbb
mov
bound
cmp
mov
push
jle
insl
push
or
punpcklwd
les
jle
mov
xor
sub
repz
inc
daa
decl
mov
and
mov
pushf
push
add
xor
pushw
xor
pop
jp
cs
inc
stc
insl
cs
aaa
ds
int
movsl
or
sbb
outsb
cwtl
jp
dec
or
and
xchg
xchg
sar
fcmovne
mov
adc
call
lret
push
inc
push
and
inc
lea
xorl
gs
push
and
ljmp
aad
shll
popa
icebp
adc
adc
and
xchg
test
mov
btc
jge
inc
in
jmp
movsb
jle
aaa
adc
push
and
and
xchg
in
repz
mov
lret
addl
push
add
mov
fisubrs
lock
lret
ljmp
jle
rcr
adc
das
and
sbb
or
sbb
xor
out
lods
mov
ss
add
cmp
inc
inc
adc
jbe
pop
inc
jb
imulb
stos
or
pop
cmp
leave
fsubr
add
jl
sbb
cltd
cmpsl
mov
adcl
mov
xchg
or
inc
icebp
sbb
push
data16
clc
sub
nop
xor
mov
inc
popa
mov
fcoml
cli
in
js
add
mov
jb
in
mov
movsb
adc
in
push
fadds
adc
insl
cmpsl
dec
lock
mov
dec
fisubs
popa
lods
dec
in
in
inc
cmpsb
idivb
add
out
mov
ss
push
in
ficoml
push
sbb
in
scas
or
xchg
cwtl
mov
nop
imul
test
and
jecxz
pop
pop
jnp
je
cmpsl
sub
cmp
rcll
dec
enter
in
lds
repz
scas
cmp
mull
jnp
sub
jae
mov
adc
adc
push
adc
in
xlat
push
add
lea
pusha
pop
out
mov
dec
mov
pop
dec
rcr
enter
mov
pusha
lret
iret
xor
push
dec
push
sbb
mov
test
cmpsb
icebp
sbb
dec
mov
inc
lock
dec
push
adc
push
mov
in
jmp
add
mov
sbb
shrb
out
mov
dec
push
dec
scas
dec
insl
mov
pusha
push
inc
jmp
jp
sbb
lea
lea
pop
daa
in
jge
popf
adc
daa
mov
fs
mov
repz
repz
inc
and
sahf
in
push
jp
ret
outsl
repz
nop
jp
inc
incl
ja
mov
adc
xchg
mov
fisttpl
jo
fucomip
cmpsl
into
jmp
lret
mulb
sbb
std
lock
pop
call
int3
or
mov
dec
and
mov
sub
fbld
icebp
pusha
mov
aaa
psrlq
outsb
test
or
fdivp
sbb
and
sbb
std
push
or
ret
jmp
mov
dec
adc
es
or
nop
arpl
mov
pusha
aas
mov
sbb
fstpt
cmc
loope
jo
fsts
inc
rcll
cld
movsl
ja
sub
mov
cli
inc
and
jnp
cmp
cs
les
mov
in
mov
mov
adc
js
pushf
xchg
or
mov
adc
adc
ret
out
scas
cmpl
idiv
sbb
mov
dec
enter
out
iret
inc
pop
stc
inc
aaa
add
loopne
pop
insb
push
loop
insl
test
outsl
stos
movsl
add
arpl
xor
mov
aaa
movsl
xchg
xchg
cmp
xchg
call
sbb
clc
sbb
xchg
xchg
sbb
sbb
scas
adc
mov
adc
std
adc
int
pop
inc
pop
mov
adc
dec
mov
jbe
inc
xchg
mov
mov
jb
sub
shlb
loope
insl
loope
and
xor
jae
lock
inc
iret
cld
mov
icebp
outsb
cmp
cmp
dec
in
and
pusha
jg,pn
jmp
jmp
repnz
sub
js
lahf
jl
pop
adc
ret
dec
repz
or
xchg
sbb
faddl
sbb
adc
cmpsb
mov
xchg
call
sbb
pop
push
push
sbb
mov
cmc
out
xorb
sbb
stos
jb
add
fsubrp
sub
inc
xchg
shlb
sub
test
push
and
pusha
popf
lret
cmp
pop
popa
xor
pop
mov
adc
adc
sbb
dec
inc
pop
inc
das
xchg
pop
sahf
fistpll
sar
add
pop
jns
jl
fs
or
adc
cmp
fmuls
jb
jge
sbbl
inc
lcall
jl
inc
and
inc
int
jnp
movsb
push
jns
push
fcmovnb
dec
iret
mov
stos
inc
shll
add
or
adc
dec
stos
or
sbb
js
mov
out
in
mov
jno
cmp
lcall
cmp
sub
or
fistl
insl
sbb
jp
xor
xor
idivl
or
nop
jg
mov
jle
push
or
popf
mov
sahf
jmp
cwtl
sub
int
push
cli
xor
pop
stos
mov
int3
enter
push
mov
dec
data16
xor
lods
jbe
in
pop
loope
pusha
int3
adc
fwait
jecxz
mov
subb
xchg
xchg
int
cmp
aas
rolb
xchg
inc
negl
pop
cmp
cmpxchg
ja
xchg
cs
cmp
adc
shrb
imul
es
divb
gs
inc
lods
ljmp
movsl
mov
cmp
aam
sub
push
nop
jmp
mov
iret
sbb
push
orl
js
sub
frstor
pop
loopne
dec
scas
nop
test
xlat
cld
mov
and
fdiv
sub
repz
sub
insl
leave
shll
sub
jmp
rolb
enter
bound
or
hlt
pop
mov
mov
add
mov
mov
insb
hlt
rcl
arpl
dec
pop
lret
arpl
add
mov
or
loope
aaa
add
add
sub
xchg
push
mov
mov
xchg
adc
das
inc
int
stc
jg
cld
dec
cmpsb
jno
rcl
les
enter
loope
jnp
push
jge
stos
add
es
ljmp
js
sub
xor
pusha
push
into
push
insb
leave
mov
nop
mov
insl
add
xchg
xor
jl
add
scas
and
xchg
xlat
test
dec
fidivl
sbb
and
jecxz
xchg
repz
pushf
outsb
xchg
repz
xchg
popl
inc
pop
mov
out
inc
inc
lret
pop
lret
xor
popa
mov
scas
or
pop
and
in
cmc
gs
dec
jp
xchg
adc
cmc
jne
or
jno
cmp
jae,pn
sub
imul
cmpsl
dec
mov
pop
pop
popf
call
out
jmp
outsb
and
push
data16
jo
jl
gs
les
jge
push
fdivrp
mov
mov
stos
jae
adc
adc
add
sarl
pop
or
ss
lea
fdivrl
jmp
notb
mov
dec
repz
mov
negb
jns
es
inc
push
pop
lcall
mov
stos
icebp
aad
mov
dec
clc
cmc
ret
in
mov
lods
pop
add
mov
add
lret
jp
adc
loope
test
push
fs
push
mov
jno
xchg
cld
pop
pop
pop
addr16
sbb
mov
daa
or
jno
pop
mov
leave
jae
lcall
out
outsb
dec
inc
xchg
inc
dec
rclb
xchg
js
push
inc
lock
movsb
mov
cmpsb
lcall
and
repz
stos
mov
fadd
pop
dec
imul
shlb
mov
cmpsl
sub
leave
inc
push
cmp
pop
push
inc
jmp
adc
xchg
mov
mov
pop
scas
enter
pusha
pop
mov
mov
xchg
lcall
add
popf
dec
and
in
fadds
paddusb
lcall
and
sahf
imul
mov
adc
ficomps
test
popa
ret
leave
xlat
lods
mov
push
jae
test
pop
xor
aas
xchg
outsb
insl
push
in
push
out
sub
mov
fimull
inc
dec
pusha
jge
inc
xchg
mov
out
add
gs
in
sub
jecxz
xchg
or
cmp
mov
pop
arpl
insl
push
push
jbe
test
jge
out
mov
xchg
mov
pop
mov
hlt
jmp
pop
mov
mov
in
xchg
sbb
mov
cmp
std
mov
xor
in
jmp
pop
mov
in
sbb
fisubl
jb
std
pushl
fisubrl
cmp
addr16
jle
push
roll
rol
shlb
or
shr
dec
xchg
test
xchg
push
ja
pop
or
jmp
outsl
out
test
add
push
add
add
dec
push
fdivrl
outsl
fdivp
pusha
rcrl
neg
iret
mov
lea
xchg
sub
es
pop
pop
mov
pop
lods
adcl
adc
repnz
or
out
xor
jmp
mov
lcall
xor
loopne
sbb
pop
or
sub
repnz
mov
mov
stos
and
mov
push
pushf
add
test
fwait
hlt
or
dec
sub
cmp
pop
push
data16
ficoms
and
xor
xor
loop
sbb
sub
add
lea
mov
push
jge
jnp
or
leave
sbb
sub
mov
push
ljmp
mov
into
sbb
mov
mov
lahf
lds
int
pop
jo
outsl
and
mov
push
sbb
aas
or
adc
xchg
test
cmp
jge
out
cmpsl
jbe
in
dec
jp
and
pop
ficompl
in
mov
xchg
cmp
not
mov
adc
push
mov
push
or
mov
idiv
mov
push
mov
dec
jbe
sahf
jl
mov
push
sub
mov
push
jmp
xor
icebp
push
scas
adc
lcall
pusha
mov
jle
js
lods
rorl
insl
adc
xorb
hlt
out
mov
mov
stc
ret
mov
leave
popf
in
imul
xchg
lods
stc
andl
inc
roll
loop
cltd
push
shrb
ror
outsl
insl
dec
xor
mov
mov
lods
cwtl
lock
and
outsb
inc
pushf
les
or
aaa
lods
insl
pop
imul
lock
add
sahf
and
loopne
mov
bound
xor
ja
jp
adc
sbb
enter
xor
fucomi
add
setg
pushf
add
sbb
jnp
cltd
in
jle
jae
mov
push
push
sub
lcall
mov
dec
ljmp
sub
je
f2xm1
int
clc
test
jnp
int3
loop
in
jmp
imulb
or
stos
dec
test
adc
mov
insl
int
jl
nop
lret
divl
cwtl
ret
sub
jle
inc
loopne
sahf
shll
inc
int
call
pop
arpl
adcl
xor
sarl
shrb
and
test
out
cmp
or
xor
dec
js
ret
dec
ds
dec
push
clc
xchg
cld
popa
xchg
xchg
sub
int
sub
lcall
jno
outsb
into
ret
pushl
repz
pop
sub
push
mov
push
data16
leave
fmull
in
outsb
cmp
aas
mov
inc
lds
js
jmp
gs
cmc
push
stc
bound
mov
push
ds
or
lods
sub
sti
frstor
mov
cmpsb
lds
lret
pop
push
pop
test
or
mov
xor
mov
outsl
add
imul
push
xchg
clc
int3
or
or
sub
add
fsub
jae
add
mov
lea
pop
or
mov
adc
or
cs
add
shrl
enter
sbb
sahf
pop
mov
jno
imul
clc
pop
mov
dec
pop
test
mov
loop
jnp
fidivs
sub
into
inc
mov
andb
cld
adc
sahf
fisttpll
aam
loop
lcall
and
loope
in
out
sbb
outsb
xchg
and
jae
dec
clc
flds
dec
inc
push
clc
test
push
push
out
js
aam
out
dec
in
les
loop
push
dec
icebp
mov
inc
imul
pop
jp
inc
ds
mov
add
xchg
mov
fidivl
mov
or
jmp
sahf
and
adc
add
pop
shlb
dec
mov
sti
nop
jmp
sbb
lcall
xor
jle
out
and
mov
pop
push
rcrb
mov
outsb
lods
adc
mov
jo
cmp
rolb
ja
cmpsb
jo
xor
xchg
aas
and
mov
pusha
and
dec
es
test
mov
xchg
push
mov
insb
movaps
mov
or
test
fbld
jp
sub
loopne
dec
ret
notb
int
adc
hlt
je
fstpl
cmpxchg
mov
out
add
mov
scas
fcmovnu
daa
daa
dec
inc
mulb
decl
outsb
int3
add
arpl
mov
enter
sti
sbb
out
enter
lahf
outsl
iret
jge
test
adc
orl
adc
fidivl
test
ret
pusha
mov
aas
jle
or
push
pop
push
pop
xchg
push
in
mov
inc
adc
push
push
inc
mov
notb
mov
jl,pn
fadds
es
in
push
xlat
sub
and
lock
cwtl
sbb
dec
inc
xchg
stos
scas
inc
fldl
xchg
sub
sahf
inc
loope
jecxz
sbb
or
mov
in
mov
scas
out
xlat
cs
xlat
xchg
sub
addr16
pusha
scas
shlb
pop
lret
faddp
sbb
dec
jbe
sbb
add
xchg
mov
pop
imul
add
arpl
and
cli
mov
ficoml
ret
or
fs
cmpsl
or
fnstcw
std
and
stos
jae
and
dec
cmp
add
daa
inc
call
adc
outsl
insb
xor
popa
adc
jae
xchg
xor
or
or
inc
push
adc
outsb
out
dec
fstl
pusha
jnp
icebp
jo
xor
adc
mov
cmp
cld
lret
call
outsl
sbb
sub
mov
out
ret
dec
mov
popa
aas
adc
fwait
jg
push
out
rcrl
and
call
and
leave
dec
mov
sub
sub
xchg
push
pop
jnp
dec
cmp
arpl
cmp
insl
or
push
out
mov
das
pop
dec
into
shrb
sub
mov
lahf
adc
push
xlat
adc
leave
push
int
cmpsb
jnp
sub
and
cmp
lret
aas
jno
inc
cmp
call
std
cmp
mov
push
cmpsl
xor
push
sub
loopne
dec
sub
pop
les
mov
insl
jns
setns
push
add
jnp
dec
aas
mov
adc
stos
pop
sub
and
cli
push
dec
mov
lret
subl
pop
add
mov
jmp
das
sbb
and
test
push
adc
add
xchg
inc
xor
pop
vmwrite
xor
mov
fistpll
fwait
xchg
addr16
dec
jge
mov
push
dec
adc
shll
insb
inc
or
adc
push
test
inc
pop
cmp
jb
xchg
jo
popa
sbb
inc
outsb
lods
xchg
ret
popf
mov
sbb
xchg
ja
scas
lds
xchg
dec
push
inc
or
les
popa
in
loope
cmpsl
repnz
mov
mov
and
dec
push
adc
inc
sbb
sub
mov
nop
test
sbb
pushl
mov
mov
out
jbe
sbb
mov
or
sbb
lcall
adc
jae
xchg
into
cmpsb
cltd
mov
aas
loopne
jp
mov
mov
mov
and
and
pop
jno
fsubr
fldt
inc
adc
dec
push
cwtl
add
fidivs
movsb
in
or
imulb
loope
sub
test
cmp
sbb
js
cmpb
incl
movsb
sbb
out
shlb
fisubrs
loopne
outsl
pop
mov
mov
cmp
pop
jecxz
inc
mov
les
je
cwtl
xlat
sbb
sbb
cltd
xchg
cmp
cmpsl
test
pop
and
aaa
out
pop
mov
and
sbb
gs
ljmp
xor
popf
fdivl
mov
lods
ljmp
cwtl
test
lods
mov
in
outsl
mov
ret
jo
mov
dec
loopne
popa
add
popa
rol
xor
sub
dec
push
aaa
inc
push
jmp
sub
jecxz
daa
mov
fldl2e
movsl
roll
pop
pop
push
dec
es
dec
js
xor
stc
out
mov
adc
in
xchg
jbe
push
or
rcrl
jle
pop
xor
into
xor
cmp
sbb
cmc
lahf
sbb
fildl
mov
test
mov
dec
pop
jp
pop
push
rorb
daa
cld
mov
stos
mov
pop
fildl
aas
jecxz
std
ljmp
pusha
push
in
lock
stc
pop
bound
outsb
mov
imul
mov
sbb
push
jnp
or
int3
out
popf
test
pop
fadds
or
fcmovnb
sbb
cmp
add
inc
mov
mov
push
and
scas
add
add
lods
cmp
pushf
mov
and
push
andb
addb
leave
jbe
enter
imul
and
xchg
fildll
test
lods
dec
xlat
fwait
fwait
std
xor
rcrl
subb
shrl
mov
popf
xor
sbb
mov
test
lahf
xchg
lock
inc
movb
xchg
test
push
imul
scas
sbb
xchg
jb
or
int
lcall
or
jecxz
jge
mov
inc
or
loopne,pn
jl
push
add
popf
ret
mov
inc
dec
gs
sub
dec
or
pop
add
xchg
sbb
jbe
dec
hlt
push
xlat
jno
sbb
pop
aaa
add
fstpt
mov
cmp
inc
mov
addr16
mov
lcall
lcall
add
add
movsl
mov
rcrl
mov
sarl
test
jp
in
sarb
jnp
and
cmpsl
gs
mov
dec
out
cmp
jno
sub
test
icebp
and
inc
movsb
cmp
test
push
loop
iret
mov
cmp
leave
insb
mov
adc
jge
dec
out
cmp
out
xchg
cmp
mov
rol
call
xchg
push
in
mov
add
cmpsl
rolb
push
fwait
enter
mov
xor
leave
lahf
lea
ror
movsl
pop
jmp
xor
mulb
out
hlt
inc
movsl
jbe
pop
mov
popl
ds
in
mov
stos
inc
test
xchg
aad
pop
loopne
and
das
mov
cli
add
add
repnz
repnz
add
pop
push
mov
and
pop
add
fsubrl
lods
xor
or
jbe
stos
push
rep
fwait
dec
push
mov
inc
ja
clc
mov
rcl
xor
lret
test
jmp
xchg
insl
adc
adc
jp
dec
cld
cmc
push
sti
out
aas
int3
lret
insl
pop
mov
xchg
dec
mov
mov
iret
aam
xlat
mov
xor
dec
test
push
pusha
push
jbe
arpl
lock
data16
push
mov
lahf
push
mov
xchg
out
jb
fs
sub
dec
mov
push
sbb
xor
aaa
out
addr16
inc
das
rcrb
in
mov
pop
sub
xlat
xchg
mov
daa
cmp
loop
orl
gs
outsb
add
jns
out
or
or
fldt
dec
jge
mov
scas
sub
out
adc
push
fisubl
outsl
xchg
fs
idivb
xor
shrl
mov
js
mov
xor
test
mov
loop
and
add
dec
fisubrs
pop
push
out
ss
sbb
mov
cmp
pop
push
ret
fwait
mov
movsl
aad
cmc
lahf
es
negb
negb
sub
push
fisubrl
lahf
iret
xchg
scas
outsb
sbb
xchg
mov
popf
push
insl
cs
hlt
push
push
adc
sub
cmpsb
cmp
push
pop
sub
xchg
adc
push
pushf
add
inc
hlt
add
add
mov
repz
adc
add
lcall
xor
dec
pop
push
jb
mov
mov
lcall
mov
mov
mov
dec
inc
and
pop
test
dec
dec
xchg
add
stos
insb
ljmp
pop
clc
pop
mov
jmp
jl
into
aad
mov
daa
cmp
xchg
xor
loop
das
je
dec
scas
cltd
push
mov
add
and
mov
or
insb
idivb
mov
dec
notl
mov
xlat
call
inc
test
inc
pop
xchg
add
test
pop
lret
scas
aas
sub
cli
xchg
lret
push
jae
das
and
loopne
lods
test
or
mov
and
cmp
movb
adc
mov
jne
push
cmc
outsl
xlat
addr16
xchg
cmp
decl
push
sbb
push
cs
jnp
mov
xlat
out
pop
xchg
repnz
or
and
aaa
cltd
in
add
sbb
pop
data16
imul
in
add
call
jecxz
std
mov
bound
lods
inc
push
xor
fmul
std
inc
push
jg
dec
lcall
lret
dec
fsts
sbb
cmpsb
sub
daa
mov
adc
lret
push
iret
sub
dec
push
sub
lret
mov
nop
insl
into
cmp
mov
mov
mov
aam
andl
adc
test
push
inc
jns
inc
cli
scas
fwait
icebp
scas
pop
xchg
loopne
mov
rcrb
test
or
cmp
test
or
sti
rcl
and
xchg
mov
lds
mov
scas
mov
xor
add
ficoms
xor
adc
int
sbb
sbb
xor
adc
out
imul
cmpsl
inc
jo
or
or
mov
or
push
add
mov
mov
filds
mov
notl
lahf
push
jmp
lahf
mov
lcall
and
xor
fbstp
cwtl
mov
inc
and
sbb
mov
in
lds
int
fsub
enter
nop
imul
cli
lret
iret
dec
ret
xor
pusha
loope
xor
fcomi
adc
jns
add
adc
pop
std
or
lods
and
mov
fmull
addr16
out
iret
lock
or
rclb
inc
popa
sub
cmp
in
pop
stos
adc
fisubs
sbb
pop
cld
ljmp
and
or
xchg
decl
aad
xor
xchg
sub
sub
cmpsl
mov
cltd
mov
sub
std
cld
xchg
add
movsb
into
jae
push
pop
leave
ss
sbb
fadds
mov
pop
scas
and
mov
mov
iret
je
lret
cmp
shll
scas
push
cmp
sbb
cmp
repz
push
mov
or
loopne
cmp
cli
pop
jmp
pushl
lss
ljmp
lea
xchg
addl
dec
lcall
push
insb
aas
push
jae
push
sbb
mov
mov
out
test
movsb
mov
ja
dec
mov
push
fsubl
scas
jne
insb
jo
adc
sub
dec
data16
out
push
sub
and
pop
popf
xchg
cli
mov
test
pushf
cmp
adc
push
out
inc
pop
inc
scas
sbb
lock
inc
or
mov
and
lea
cmp
adc
inc
push
xchg
push
lret
mov
aas
inc
or
adc
inc
and
pop
mov
pop
inc
rorb
mov
es
gs
mov
leave
xlat
jle
call
call
inc
rolb
mov
xor
cmp
jecxz
dec
mov
mov
add
mov
adcb
mov
mov
mov
mov
sti
push
pop
daa
dec
inc
pop
add
mov
dec
adc
mov
addr16
push
cld
call
clc
add
call
dec
fwait
mov
aad
call
cmp
repnz
sar
jmp
stos
les
push
adc
adc
cmp
and
ret
mov
fwait
xor
cltd
shrl
outsb
jmp
shrl
nop
arpl
repnz
or
in
inc
shl
sbb
sti
scas
movsl
inc
ss
and
or
jnp
ror
andb
fs
add
and
movsb
push
ss
out
mov
jle
inc
sbb
jecxz
mov
outsb
jbe
or
enter
fs
mov
xchg
xor
push
insb
pop
add
pop
add
cmpsb
add
lock
sbb
addr16
xchg
dec
aas
lahf
inc
icebp
test
lcall
jae
ret
xor
sbb
xlat
mov
roll
cli
adc
sbb
dec
popf
push
pop
adc
xor
sub
mov
jle
je
and
inc
jle
inc
push
rcrl
aaa
sub
adc
mov
cmp
jae
jg
std
daa
data16
sbb
sbb
cmp
ficoms
cmc
das
es
cs
pop
imul
shlb
repz
add
mov
sbb
enter
rcl
xor
pop
jnp
mov
lahf
mov
add
ds
inc
stc
dec
mov
inc
stos
mov
jl
mov
cltd
pusha
cmpsl
cmpsb
xchg
lds
pop
loopne
sub
hlt
inc
push
jo
mov
outsl
fmuls
lea
mov
ja
aad
lea
jb
fucomip
out
ljmp
and
cmp
jae
cwtl
or
pusha
pop
sbb
adc
sub
bound
mov
rolb
sbb
aas
jns
cmpsb
lret
idivl
testl
cwtl
jecxz
test
and
insl
fisttpll
jecxz
xlat
inc
mov
ljmp
push
lahf
call
sub
cmp
orps
push
cmpsb
add
fnstcw
nop
xor
mov
sub
out
scas
mov
xor
mov
mov
and
rorb
mov
adc
les
dec
xor
jl
fs
leave
ret
pop
gs
push
mov
pop
push
not
or
out
les
inc
inc
cmp
fiaddl
fildll
push
adcb
pop
add
in
bound
ds
jne
push
lcall
and
mov
fldenv
inc
ret
push
shlb
cmp
pop
jo
mov
adc
jge
ret
cmp
sbb
xor
jns
cwtl
sbb
in
mov
scas
inc
ljmp
scas
xchg
in
mov
fstps
lods
cmovns
popf
cmp
fistpl
loop
xlat
push
dec
jnp
int
or
sbb
sub
aad
ret
push
inc
test
push
and
std
add
cmp
lock
in
shl
xchg
jno
movsb
divl
xor
fisubrl
push
and
sarb
rcll
fs
leave
fwait
xor
dec
hlt
xchg
rcll
stos
pushf
mov
sarb
inc
sub
outsl
js
mov
mov
inc
cmp
mov
aam
jae
mov
and
scas
sub
or
aam
ljmp
push
sub
lcall
dec
das
inc
repnz
pop
inc
mov
in
data16
pushl
or
outsl
ficompl
inc
xchg
and
outsl
int
stc
repnz
and
aaa
dec
push
jae
xchg
xchg
fst
test
mov
fisubrl
loope
subb
imul
in
in
scas
mov
add
inc
sub
sbb
call
cmp
cmp
rclb
inc
sub
loopne
movsl
or
in
lods
test
bnd
or
ja
mov
cld
xlat
popa
imul
nop
and
movsl
lock
aam
add
and
iret
pop
cltd
pop
xchg
xor
stc
test
or
xor
push
jne
fiadds
negb
jno
xchg
lds
and
and
mov
loopne
adc
push
push
fists
add
sahf
mov
mov
cs
cmp
mov
sbb
mov
cmc
sbb
xchg
push
jbe
dec
in
fisubs
jp
push
pop
and
xor
movsb
dec
cmp
mov
mov
inc
call
imul
push
inc
or
dec
jbe
mov
icebp
dec
int
insl
add
std
mov
pop
popf
mov
dec
fstps
orb
roll
fldl
and
push
sar
stos
sbb
xor
push
mov
or
sub
mov
jmp
adcb
in
cwtl
lcall
mov
clc
in
push
fldcw
and
popf
inc
or
ret
or
adc
fwait
jno
test
mov
pop
gs
ret
fsubrl
movsl
imul
outsb
imul
rol
out
ficomps
mov
ss
pop
call
in
into
enter
iret
rclb
fidivrs
push
pusha
nop
int3
jg
xor
push
jge
cmp
add
push
movl
jae
mov
ljmp
in
addr16
pop
aam
dec
data16
popa
nop
push
mov
filds
cwtl
out
ds
cmp
and
xlat
and
aas
loop
dec
adc
int
sarl
into
cmp
in
pop
or
push
mov
sub
sbbb
mov
shl
in
cmp
pop
dec
mov
es
es
rorl
scas
fs
adc
xor
pop
pop
pop
shlb
push
test
lods
cmp
dec
inc
imul
jae
subl
jnp
pop
out
pop
sub
fdiv
xchg
mov
xor
out
or
mov
cmp
add
inc
sbb
inc
in
mov
jo
pop
leave
cmpsl
and
fstp
mov
dec
out
mov
xor
xor
je
fcmovb
lea
cli
pop
xor
and
pop
jae
xor
aad
pop
mov
mov
ds
bound
dec
cs
jae
repz
out
xor
sti
fwait
pop
popf
int
or
xor
data16
xor
das
ds
fwait
jb
pusha
lcall
mov
mov
divb
arpl
in
cmpsl
daa
mov
scas
repz
inc
adc
fistpll
sub
dec
in
xchg
sub
int3
mov
divb
jp
jmp
lret
mov
pop
aas
jmp
in
sub
loope
rorb
dec
ret
dec
mov
fcompl
jg
push
push
pop
test
mov
and
stos
adc
scas
pop
or
aas
add
dec
mov
movsl
popa
and
ja
jmp
adc
inc
aas
and
lahf
xor
sti
push
xor
and
dec
ljmp
xor
dec
mov
enter
lds
xor
add
imul
push
and
sbb
pop
dec
test
orl
jns
dec
push
jo
mov
pop
xchg
leave
jl
bound
jns
add
sbb
jle
and
loopne
pop
cmp
fdivs
sub
addr16
loopne
sahf
stos
xchg
cmpsb
lods
pop
stc
or
adc
or
dec
or
jg
nop
jns
js
fwait
nop
cld
loop
jl
in
inc
movsl
and
mov
add
dec
sti
int3
dec
mov
imul
aaa
jge
lock
inc
sarb
ljmp
xor
jae
adc
and
inc
jp
test
adc
mov
adc
pop
xor
push
outsb
adc
hlt
outsl
icebp
mov
shr
sar
imul
clc
jae
ffreep
sub
sbb
repnz
fcmovne
jae
int3
jecxz
cld
in
xchg
dec
sub
mov
and
fdiv
jecxz
outsl
orl
jb
mov
inc
jg
pop
xchg
pusha
aam
pandn
andl
add
sub
js
jmp
mov
insl
pushf
mov
xor
test
dec
fcomi
dec
adc
inc
je
ret
das
hlt
mov
fsubs
sub
scas
push
xchg
add
test
push
fisttpll
jbe
sti
cli
insb
mov
inc
sbb
jb
sarb
aad
ljmp
aas
out
and
jmp
or
jg
repnz
outsb
mov
sbb
push
loop
loop
xchg
sete
xchg
jmp
scas
pop
lock
sub
ds
les
sub
xchg
repnz
dec
mov
cmpl
in
test
data16
sahf
mov
testb
xor
xchg
stc
sub
ud2
mov
and
lcall
test
scas
jg
fs
pushf
int
xchg
jno
pop
pop
cmc
scas
fsubrl
mov
sub
add
jno
sahf
or
mov
jb
sub
sub
pop
push
mov
loopne
pushf
int3
mov
leave
pop
xchg
ja
mov
sub
or
cmp
adc
cmpsl
mov
cltd
pop
je
and
call
xchg
test
shlb
cltd
mov
add
adc
and
xchg
mov
adc
paddb
arpl
in
mov
mov
inc
pop
ss
inc
decl
jb
sub
je
sub
cmp
es
mov
jae
mov
mov
mov
rcrl
push
cmp
mov
dec
outsl
mov
or
push
cmp
je
aaa
dec
call
lock
dec
leave
inc
shrl
or
ja
fwait
or
or
ror
sbb
mov
js
add
sbb
pop
jp
lret
push
xorb
and
scas
pop
mov
push
sbb
sbb
pop
scas
inc
icebp
sub
mov
mov
cmp
xchg
iret
jecxz
mov
subb
aas
loopne
jle
mov
xor
ja
xchg
insb
jp
rcrb
mov
mov
pop
das
cmp
popa
push
sti
lods
je
jns
add
dec
mulb
cltd
xchg
sbb
out
xor
lret
ret
xor
into
cld
push
pop
ret
pop
dec
scas
dec
sbb
dec
jae
jecxz
test
cli
xor
sbb
sbb
xor
sbb
mov
pop
test
daa
or
add
push
pusha
inc
bound
add
loop
pop
jmp
inc
mov
push
std
add
dec
mov
xchg
and
xchg
filds
mov
repnz
jecxz
imul
sub
movsb
insb
test
ror
cmp
or
add
or
or
outsl
and
xchg
jmp
js
cltd
gs
jns
jo
test
mov
inc
bound
sub
cmp
fs
dec
sub
mov
ss
outsl
xchg
imul
cmp
cli
iret
mov
stc
clc
inc
shl
scas
adc
mov
mov
sbb
outsb
jecxz
adc
adc
sub
adc
push
test
lahf
cltd
push
aam
subb
cmp
rcrb
data16
or
test
cmp
out
adc
mov
jae
out
push
int
sbb
push
and
add
popf
xor
or
xchg
rcll
mov
cwtl
pop
mov
mov
jp
scas
xchg
xor
jmp
pop
jbe
imul
clc
pop
popa
and
sub
addl
xor
jmp
flds
add
fdivs
fisttpl
fisttpl
cmpsb
test
or
into
ret
adc
or
xor
xor
aam
and
ficompl
pusha
push
cmp
pop
sbb
add
and
sbb
and
data16
aad
cmpsb
and
fcmovne
mov
mov
int3
mov
out
jge
dec
enter
sti
sbb
sbb
pusha
lcall
dec
ss
mov
sub
outsb
mov
addb
fistl
scas
inc
decl
into
mov
push
orb
insl
sahf
add
cld
negb
divb
ja
jmp
push
cmp
jmp
cmpsl
shr
pop
lret
ficomps
and
mov
and
jno
ret
xor
xor
jp
mov
nop
cli
fisttpl
aad
pop
stos
push
cmp
dec
ja
popa
inc
insl
sub
aam
bound
pop
jle
push
fldenv
ror
cmp
nop
dec
in
gs
jno
mov
adc
mov
xchg
jb
mov
scas
push
fisubrs
test
dec
and
or
fs
dec
jno
or
stos
jbe
loop
dec
test
mov
out
pop
add
outsb
inc
lea
ds
and
pop
and
and
test
jns
or
out
pop
les
psrld
mov
inc
fmull
pop
es
daa
dec
xor
xlat
shrl
adc
repz
pop
js
rcrl
fsts
icebp
out
adc
imul
pop
jge
sbb
or
jl
ljmp
sub
xchg
push
mov
add
dec
inc
or
gs
xor
sub
ret
push
dec
pop
mov
stos
push
lock
jbe
dec
and
jmp
pusha
cmp
cmpsb
imul
mov
shll
lahf
and
and
adc
out
lods
repnz
in
adc
mov
mov
adc
movsb
xlat
inc
xchg
pop
adc
push
movsb
adc
inc
out
sbb
inc
gs
les
lods
dec
stos
mov
fnstcw
fdivr
adc
add
roll
mov
adcl
jno
inc
lods
jge
dec
pop
int
int
lods
xchg
or
nop
mov
push
pop
in
mov
fsubrs
cmp
mov
int3
mul
icebp
subb
mulb
pop
cmp
lret
dec
dec
outsb
insb
fimull
test
les
sbb
sub
mov
inc
cmp
xor
mov
leave
jno
dec
mov
push
or
pop
xchg
mov
ret
pop
lret
cmp
js
movsl
push
fsubrl
data16
shrb
ret
js
adc
ficomps
cmp
inc
test
out
sahf
cltd
sarb
sahf
aaa
push
testb
xor
call
cwtl
inc
icebp
jp
mov
mov
sbb
mov
gs
into
mov
jne
mov
pusha
iret
jb
mov
andb
xor
cmpsb
add
xor
jo
hlt
or
xor
jbe
mov
ret
jne
mov
imul
enter
enter
outsl
sbbl
repnz
pop
les
push
pop
jns
aaa
cmp
lds
fs
les
daa
jne
adc
cwtl
pushf
lret
rolb
xorb
cltd
sbb
insb
xchg
movsl
mov
mov
dec
es
cmc
loopne
or
sbb
add
pusha
mov
add
icebp
sahf
fisttpll
sbb
xlat
fsub
ss
xchg
ja
aad
stos
pop
xchg
inc
adc
xorl
imul
stc
or
and
dec
xchg
lcall
cld
xor
mov
pop
stc
mov
mov
sbb
push
nop
jge
push
jg
push
push
cmp
mov
adc
push
scas
xchg
sub
fwait
jne
pop
mov
cltd
dec
dec
sub
jle
out
sbb
cmp
jne
lahf
das
xchg
loop
jg
jg
sbb
push
xchg
mov
and
mov
mov
shrb
aas
and
adcb
or
call
xchg
cmpsb
mov
in
mov
pop
aam
popa
out
dec
and
push
insl
inc
dec
jecxz
xor
loopne
or
idivb
ficompl
dec
out
mov
aaa
jecxz
fmul
xor
cmc
jbe
test
cmp
in
dec
dec
lock
pop
mov
sbb
cs
ljmp
loopne
cmp
das
mov
pop
sahf
int
or
sbb
adc
insb
inc
lods
push
rorb
adc
out
add
rcrl
addr16
mov
ror
sbb
push
jnp
or
dec
popf
out
lcall
sub
test
aaa
roll
fmulp
insb
aad
pop
add
fcoms
lcall
lahf
ss
push
and
xor
inc
or
test
cmp
inc
loopne
dec
stos
mulb
mov
jb
push
mov
in
adc
roll
sub
rclb
jl
cmpsl
mov
fwait
inc
add
jb
in
leave
xor
mov
cmpsl
les
jle
add
sub
or
mov
fildl
cmpsb
adc
sbb
jae
cs
rcll
add
add
aad
pop
jge
dec
js
loop
pusha
adc
xchg
adc
or
cmp
dec
mov
test
sub
cld
cmp
adc
std
mov
hlt
rolb
in
scas
int3
pop
cmp
fsubrl
mov
cmp
out
inc
dec
ret
test
cltd
orb
mov
sbb
sahf
xor
lds
pop
std
fdivrs
lock
adc
add
orl
dec
pop
pop
imulb
bt
jge
push
fnsave
ljmp
cld
lcall
lret
shrb
jno
xor
fisttpl
mov
cmp
jo
lret
xor
dec
aam
push
fldl
test
mov
mov
out
fldt
add
pop
jbe
mov
fldcw
ss
femms
imul
in
jnp
into
loope
rcrl
push
fs
sub
jae
movsb
adc
jl
sbb
das
jns
sub
fsubs
cs
mov
stos
popa
push
mov
das
cmpsl
xchg
adc
inc
out
sbb
adc
movsl
fwait
mov
dec
cmp
pop
cmpb
je
pop
inc
and
pop
enter
scas
mov
push
jl
dec
jo
mov
cltd
push
pop
adc
xchg
fdivs
cmp
push
cmp
xor
pop
inc
fcoms
mov
int
and
addr16
mov
mov
call
jbe
stos
fsts
cmpsl
mulps
fisttpll
repnz
dec
sub
or
inc
cli
push
xchg
popa
jnp
cmp
mov
repnz
adc
or
xor
xchg
cli
xor
and
mov
pop
lock
mov
not
idivl
lea
adc
mov
dec
mov
out
xchg
xchg
cltd
or
adc
cmc
inc
sbb
fwait
xchg
and
jecxz
les
push
fistpll
pop
cmp
shl
jge
lcall
test
inc
out
push
mov
cmp
lods
jbe
lret
dec
add
cmp
bts
cmp
insb
push
imul
pop
xchg
lret
int
and
mov
jae
dec
clc
fdivrs
test
add
fistpll
adc
cmc
cmp
repnz
mov
scas
or
or
loope
cmp
xchg
sub
orl
popa
adcl
lret
test
lea
sbb
and
es
mov
push
mov
icebp
jno
xchg
xor
lods
push
ljmp
sbb
pop
mov
xchg
mov
jl
inc
or
xorl
out
add
pop
mov
push
jne
pop
xorb
dec
sbb
adc
inc
or
adc
dec
repz
mov
shr
jb
pop
ss
je
sub
pusha
mov
decb
xchg
xor
or
js
cmpsl
add
imul
jae
push
movsb
jns
movsb
pop
mov
movsl
fisttps
out
pop
mov
cmp
xor
inc
xor
mov
jbe
popf
scas
pop
push
xor
nop
add
mov
or
movsl
sub
inc
inc
out
inc
in
xchg
mov
js
jp
xor
sub
add
scas
xor
xchg
jae
ds
loop
push
cmp
ds
pop
inc
sti
adc
sbb
inc
xor
shll
in
pop
test
jle
xor
ficomps
jno
pushf
jp
inc
xchg
sbb
xchg
or
jo
out
inc
pop
adc
lahf
lods
xor
bound
hlt
mov
xchg
and
inc
inc
aad
arpl
lds
mov
jbe
je
mov
xchg
ss
fdivl
jnp,pn
in
cmpsb
lret
sub
out
test
iret
and
inc
lret
and
in
and
mov
inc
lds
inc
add
repnz
sbb
jp
mov
xchg
cs
fldenv
out
adc
rcll
push
add
mov
sbbl
iret
cmp
leave
call
cmp
arpl
cmpl
inc
adc
jo
xchg
push
or
jl
cmpsl
lods
cmp
jb
sbb
test
push
mov
and
inc
mov
jns
cmp
push
push
aas
mov
pop
inc
mov
les
jns
rol
xor
pop
aam
out
mov
daa
arpl
sbb
mov
pop
out
sub
and
sub
adc
xlat
stos
ljmp
xor
mov
push
jns
outsb
mov
test
xorl
imul
shlb
push
ret
mov
sbb
jp
cs
or
test
pop
leave
cli
sti
pop
lret
xlat
sbb
out
jl
sub
push
push
leave
sarl
jae
fscale
sub
mov
inc
xor
and
shl
imul
lcall
out
in
les
sub
xchg
dec
jns
sub
pusha
jae
mov
mov
imul
dec
insb
lods
jmp
sub
mov
sub
dec
enter
cmp
lcall
fsubrp
enter
xchg
and
cmp
pop
es
or
sub
std
sti
insb
lcall
mov
into
aas
lahf
ja
mov
out
cmp
add
js
add
clc
adc
cmc
xor
fbld
inc
mov
mov
jo
jnp
push
ja
test
or
add
ss
sahf
or
fsubrp
cmp
cmp
xchg
call
test
loope
das
jg
sahf
sbb
cmp
xor
icebp
adc
xchg
pop
repnz
push
in
mov
lods
sub
out
hlt
jecxz
cmpsb
mov
je
inc
pop
sub
cli
sbb
and
sahf
stos
ret
pop
pop
les
loopne
pop
push
in
jmp
inc
stos
mov
push
test
fsubrl
pop
add
fdivs
jne
addl
imul
test
cld
cmpsl
pop
mov
and
inc
xor
or
xchg
in
scas
test
xor
and
inc
pop
xor
aad
lret
mov
or
cwtl
mov
in
xor
xor
sbb
mov
sbb
cmp
inc
add
mov
cmp
fs
stos
mov
sarl
pop
jae
sub
imul
sub
sub
jae
xchg
fimull
mov
push
shrb
sbb
scas
aad
adc
sti
fcomps
jns
in
mov
fmulp
or
dec
mov
mov
inc
je
mov
mov
aas
mov
jb
push
push
push
sub
jmp
push
cmc
jecxz
in
sub
and
xchg
dec
mov
fsubl
loope
je
lods
imul
xor
xchg
dec
sbb
mov
dec
sub
je
xchg
insl
in
xor
dec
pop
ficomps
push
aas
ljmp
loopne
jno
jl
fcompl
mov
popl
out
jns
jno
dec
scas
hlt
mov
sbb
enter
lock
push
out
jle
mov
sbb
sti
enter
ljmp
ds
push
dec
in
or
stos
cmp
sub
push
or
xor
scas
and
push
mov
and
cmp
mov
xchg
cld
mov
jp
jecxz
loopne
sbb
movsb
scas
pop
jp
sbb
xchg
sbb
inc
mov
fs
adcb
xchg
dec
xchg
inc
pop
iret
imul
mov
enter
movsb
dec
xor
xchg
imul
push
jp
xorl
insl
les
xchg
sbb
fsubp
aam
les
inc
add
pcmpeqd
cmp
cmpsl
pop
ret
cmc
lret
add
xchg
insb
jne
mov
incb
cmpsb
dec
ds
jg
mov
test
stc
add
or
lcall
std
dec
xlat
pusha
out
outsl
gs
lods
xor
lods
orb
cmp
pop
cwtl
stos
push
adcb
xchg
sbb
mov
rorb
test
mov
push
jo
inc
outsb
pop
dec
sub
pushf
nop
and
mov
mov
test
push
jle
push
lea
int
test
mov
xchg
jns
in
push
mov
cmc
in
dec
cltd
jae
jae
cmc
pop
push
cltd
out
jecxz
cld
jmp
push
inc
lret
int3
jns
sbb
add
adc
mov
aas
ljmp
sub
popf
loope
push
inc
shl
cmc
pop
xchg
cwtl
adc
ja
cmp
inc
add
shrb
lods
insb
rol
jb
mov
mov
pop
xchg
stos
sbb
dec
push
and
jge
repnz
fimuls
mov
xchg
cwtl
mov
or
jle
mov
sub
push
jmp
test
test
sub
mov
mov
cs
scas
in
les
popf
dec
mov
stos
mov
fcmove
or
adc
xchg
pop
adc
mov
mov
addl
cmp
or
push
jecxz
ja
xchg
xor
xchg
ljmp
test
cld
adc
fbld
sbb
cmp
hlt
push
xchg
popa
data16
sub
clc
pop
lret
push
xor
loop
cmp
xchg
or
scas
imul
sahf
inc
push
lds
or
push
stos
lret
adc
insb
sub
imul
sub
adc
xchg
in
or
lret
mov
mov
out
jb
jp
call
aaa
sub
mov
call
push
jae
jb
subb
push
mov
or
arpl
dec
pop
mov
out
shlb
jae
mov
decb
orb
lock
push
dec
mov
xchg
xor
addr16
repz
movsl
mov
jbe
test
push
push
outsl
xchg
add
lcall
outsb
inc
sti
sbb
dec
push
jmp
pop
test
or
inc
xor
ss
dec
fisubrl
rcrl
outsl
add
mov
or
movsl
aas
pushf
inc
test
ljmp
iret
movsb
pop
pop
add
in
pop
cmp
jmp
not
psrld
pop
ret
stc
movsl
mulb
jecxz
mov
test
aad
leave
lcall
or
out
jmp
cmovs
sub
xchg
lcall
stc
test
push
test
addl
aaa
nop
outsl
mov
sub
mov
into
xchg
adc
arpl
bound
or
dec
push
adc
mov
pop
add
out
pop
addr16
mov
xor
adc
mov
dec
xchg
int3
xchg
and
cmp
rol
mov
imul
push
jmp
xchg
pop
ss
testl
decb
popf
inc
cmp
inc
push
cwtl
mull
mov
mov
popa
movsb
pop
leave
and
scas
sbb
fdivs
push
icebp
cmpsb
enter
data16
movsb
popf
xchg
sub
jnp
test
imul
jb
sti
cmc
mov
das
arpl
fisubl
mov
jns
xor
ja
cmp
out
add
jno
add
xlat
jle
jbe
orb
push
pop
pop
sub
inc
dec
pushf
adc
sahf
mov
adc
inc
call
xor
pop
lods
test
pop
or
rolb
ljmp
mov
inc
jne
cmp
lret
mov
cmove
jb
scas
add
int
outsb
mov
cmpsl
xor
lahf
pop
pushf
in
popf
and
in
cmpb
xor
or
out
test
data16
cltd
inc
pop
sbb
pop
cltd
pop
dec
repz
xchg
ja
inc
pop
in
cwtl
jbe
mov
repnz
ljmp
push
fldt
cmc
mov
rcrb
and
jg
cmp
leave
xchg
sub
mov
jecxz
jbe
dec
scas
jmp
sti
xor
pop
xor
xchg
fbstp
or
pop
push
divps
cmp
jns
pop
mov
pop
bound
scas
test
push
add
arpl
pop
push
push
sbbl
dec
and
test
xchg
test
leave
sub
cwtl
ja,pn
sbb
test
dec
sub
xor
and
mov
or
ljmp
loop
cmp
jns
pop
int3
add
xor
jecxz
mov
dec
movsb
and
call
xchg
pusha
cmp
in
insl
fisttps
movsl
stc
repz
lret
or
add
das
in
fucomp
in
into
ja
insl
cwtl
sti
stc
jmp
in
or
add
mov
mov
mull
cs
mov
ret
cmpsl
add
test
xchg
pop
std
mov
leave
jne
cmp
mov
aad
or
cmp
outsl
nop
adc
push
cltd
das
cld
and
aaa
jmp
sbb
sub
sbb
ljmp
loope
cmp
xor
aam
mov
ret
and
hlt
ds
fwait
push
out
imul
lods
cmpsl
fistps
lds
mov
cmpsl
leave
ds
xor
push
xchg
mov
push
pop
or
add
fstpt
testb
mov
sti
jecxz
lret
xchg
mov
mov
es
adc
mov
pusha
dec
xchg
or
int3
stc
mov
cltd
aam
ja
ljmp
mov
and
adc
divb
jns
mov
pop
fsubrs
add
ret
aad
and
mov
loope
inc
xchg
cmp
push
adc
lcall
xor
lcall
loopne
mov
jno
pushf
mov
and
or
push
inc
cmc
add
repz
pushf
fisttpl
xchg
pusha
into
inc
xlat
out
add
nop
shr
adc
cmp
cmpsl
mov
mov
test
cld
fcompl
movsl
shlb
roll
stc
add
cmp
pop
mov
jle
sbb
movsb
lret
pop
mov
xor
adc
pop
mov
cltd
and
mov
xlat
shrb
cmp
cmp
repnz
lds
orl
nop
dec
xor
sbb
js
outsb
movsb
adc
xor
and
outsl
dec
lods
xchg
jmp
sbb
cmc
jmp
cmp
call
sahf
test
test
xchg
or
fbstp
lock
cli
mov
lods
xchg
mov
outsb
mov
and
adc
adc
inc
inc
scas
push
jecxz
pop
xchg
loop
mov
ret
cltd
ss
mov
adc
mov
mov
mov
mov
pop
push
dec
xor
ret
pop
cld
rcl
and
inc
cmp
cmpsb
aas
xchg
in
out
bound
push
out
lods
dec
or
pop
enter
icebp
push
orb
xor
sbb
int3
aad
push
fmull
clc
mov
cmp
xor
lods
test
sbb
je
add
movsl
push
lea
mov
loope
or
out
lret
movb
shrb
or
test
sbb
add
dec
mov
jno
sarb
xor
fistpll
pop
mov
sbb
or
call
testl
xchg
or
add
in
push
cltd
sub
aad
inc
fst
gs
push
push
mov
ja
cli
mov
mov
test
repnz
rclb
add
not
scas
int
cs
jmp
ffreep
push
ja
mov
add
push
bnd
in
sbb
bnd
loope
repnz
aam
les
cmp
xor
and
mov
inc
icebp
pop
icebp
roll
pop
in
out
test
popa
clc
icebp
jo
sbb
sub
pop
shrl
popa
dec
dec
jge
xor
mov
iret
dec
mov
js
xchg
ja
lods
cmp
push
addr16
sbb
sbb
cmp
enter
add
jl
jg
lds
ret
cmp
mov
sbb
xchg
outsb
sub
jns
loope
push
jns
lret
mov
mov
xor
fiadds
clc
mov
push
mov
leave
scas
test
jg
aas
mov
sub
cmp
and
jo
outsl
jecxz
mov
into
inc
std
lds
addr16
cmp
adc
push
or
xlat
cmp
out
dec
push
jnp
cmp
lods
adc
cmp
loope
mov
inc
adc
mov
fisubrl
push
lret
xchg
sub
mov
dec
xchg
mov
mov
clc
pop
add
and
in
sub
cmpsl
out
rolb
inc
icebp
rcrb
dec
jo
adc
les
xchg
rclb
addl
sub
or
outsb
test
inc
ret
js
mov
ffreep
jl
mov
shlb
insb
cmpsb
adc
call
sub
flds
jp
test
inc
or
rcrb
bound
addl
push
push
lds
mov
imul
in
test
leave
popa
pop
dec
mov
adc
sbb
repnz
mov
leave
push
iret
ljmp
shr
sbb
ljmp
test
mov
jp
mov
mulb
out
imul
jnp
cmpsb
daa
test
and
stos
popa
inc
mull
jae
loopne
mov
lods
push
dec
aad
je
aas
aaa
int
sar
scas
jb
mov
and
lret
mov
fldcw
dec
shll
push
je
std
lods
pushf
pop
and
xchg
clc
fildl
cmpsb
clc
stos
mov
or
dec
dec
fwait
sub
outsb
or
mov
sub
mov
dec
lea
jnp
pusha
lods
add
push
sahf
sbb
jno
pop
or
stc
adc
adc
cld
lcall
lods
or
cmpsb
leave
addr16
shr
push
xor
jb
pop
xchg
push
dec
and
shl
sarl
sub
test
cmp
and
imul
sub
mov
cmp
jge
dec
stos
mov
pop
xor
adc
lcall
loop
cli
push
pop
lds
jle
aas
notl
jge
mov
lods
cmp
test
xchg
ds
inc
addl
inc
cld
fwait
shll
sub
cmc
sbb
loopne
andl
lock
xchg
std
cltd
mov
or
fsubrl
adc
iret
and
cmc
lock
cmc
jp
xchg
aas
not
pop
add
je
sarb
mov
xor
xchg
shlb
nop
loop
out
mov
push
aad
lahf
idivl
pop
inc
jecxz
adc
fcmovb
jo
aaa
lret
dec
xchg
adcl
sub
xor
jnp
loope
jnp
scas
dec
cmp
addr16
outsl
sub
movsl
dec
sti
pop
xchg
mov
roll
sub
mov
mov
shrb
or
dec
jbe
add
sub
xor
xchg
push
clc
xor
cli
test
or
mov
sti
mov
mov
movsb
lock
stos
mov
mov
mov
adc
sbb
popa
push
scas
aad
mov
inc
mov
xchg
inc
and
inc
jo
popf
jp
jl
fs
negb
xchg
ja
ret
je
xchg
pop
push
mov
xor
or
insb
mov
jo
out
lods
cmp
push
test
jne
dec
roll
xchg
jge
out
jns
addr16
sub
push
lret
mov
mov
push
mov
int
lret
and
pop
shlb
imul
mov
fstpl
and
int3
inc
mov
test
fimuls
shll
push
pop
out
lret
ficoms
pop
hlt
sub
mov
adc
scas
aam
sbb
xor
jae
dec
jo
jecxz
pop
mov
jecxz
sub
and
pop
test
sarl
mov
mov
aas
sahf
wrmsr
shl
xor
dec
mov
test
dec
sbb
aas
popf
test
movsl
call
rolb
fsubl
mov
cwtl
and
mov
push
mov
outsl
dec
movb
mov
xor
inc
int
shl
fwait
pop
adc
sahf
mov
and
shr
in
rcl
mov
push
mov
or
mov
xchg
jecxz
mov
xor
add
je
jo
es
cld
mov
std
inc
push
dec
test
dec
test
daa
push
and
jp
mov
dec
or
dec
dec
stos
gs
cmp
mov
lahf
rcl
sarl
test
addr16
fcmovnu
std
aas
dec
es
xlat
es
push
or
xchg
in
inc
pop
mov
mov
pop
dec
into
addb
ds
xchg
test
test
cld
adc
int3
and
mov
cltd
repz
xor
std
push
scas
sbb
mov
sub
mov
repnz
fsubrl
inc
outsb
out
add
mov
xor
popa
xchg
dec
jne
js
pop
adcb
es
xchg
inc
popa
xchg
or
dec
cmp
adc
stc
aad
pop
out
xchg
mov
cmp
shlb
xlat
test
or
pop
fmuls
aam
fsubl
push
mov
dec
idivl
or
mov
movsl
lahf
jge
out
adc
xchg
aas
mov
sbb
push
push
loopne
in
repnz
pop
arpl
dec
inc
scas
mov
repnz
push
xor
mov
add
add
test
enter
fmulp
pop
enter
cli
jnp
out
xchg
pop
or
add
sub
cmpsl
add
int
xchg
add
imul
dec
xchg
shrb
mov
mov
lcall
out
or
fs
jmp
rorl
xchg
mov
adc
outsl
dec
jb
jle
mov
sbbb
mov
xchg
out
sub
xlat
mov
imul
jmp
fisttpl
out
lea
push
dec
sub
inc
cli
ljmp
je
inc
imul
lea
push
push
leave
xor
outsb
fcomp
fimuls
shl
fld
testl
rorl
rorl
xor
xchg
fdivl
in
push
out
shll
mov
xchg
jns
fnstenv
gs
outsl
outsb
add
jo
dec
mov
stos
mov
lahf
mov
lcall
rolb
or
inc
xchg
sbb
test
lds
clc
pop
push
jo
jl
jg
sbb
xor
sub
das
add
rcll
subl
pop
push
imul
pop
xor
out
in
jp
pushf
or
in
adc
xchg
hlt
cli
xor
sbb
push
jg
jg
inc
pop
adc
mov
jno
push
aas
inc
mov
inc
in
mov
das
ficompl
dec
mov
rorl
mov
dec
mov
adc
enter
test
add
fldcw
lods
stos
xor
xchg
into
mov
lods
lods
push
lods
lahf
mov
push
loopne
outsb
mov
icebp
mov
int3
mov
dec
mov
sahf
inc
sar
rcrb
rcll
lahf
push
adc
jns
lock
andb
pop
mov
mov
int3
lret
sbb
gs
cli
mov
jo
addr16
pusha
je
cmp
call
mov
xor
pop
imul
cltd
stc
sbb
mov
mov
inc
roll
scas
roll
sub
fsubrl
xchg
outsb
pop
mov
jp
and
ror
jg
push
inc
notb
fadds
pop
inc
mov
add
scas
xchg
xor
push
fwait
mov
cmpsb
pop
mov
mov
and
into
xor
mov
xor
ret
out
lds
cmp
loop
stc
jo
inc
das
movsl
hlt
mov
decl
test
mov
sbb
js
inc
xor
dec
jae
iret
mov
movsb
sar
push
imul
mov
repz
mov
mov
fwait
jo
imulb
gs
jbe
pop
pop
mov
pop
fisubs
lcall
sbb
out
sbb
inc
popa
jp
outsl
cmpsb
jge
sub
xchg
ficoml
jo
dec
fdivs
lret
or
mov
ret
fists
cmpsl
mov
lock
dec
jl
jmp
dec
adc
pop
mov
inc
inc
pop
pushf
cwtl
push
xchg
xchg
inc
jo
and
lret
cmp
in
adc
repnz
lds
stos
xchg
jae
cmp
jbe
jmp
pop
stos
and
sub
or
roll
xchg
rcll
xor
shlb
xor
ret
cmpsb
or
cmp
leave
lcall
pop
mov
xor
out
fisttpl
sub
adc
push
imul
imul
test
inc
xchg
mov
subb
out
popa
jge
std
jp
mov
ds
insb
xchg
out
hlt
push
gs
xlat
xchg
sub
dec
scas
fdivl
ss
rcr
inc
push
mov
and
test
and
mov
pop
js
adc
mov
mov
xchg
pop
inc
subl
pop
icebp
data16
out
out
pop
inc
jo
push
orb
mov
and
pop
vcvtss2si
and
stos
sarb
fcomi
aam
test
or
movsb
xchg
fdivrl
fisttps
sub
insl
jae
cmp
in
das
lods
insb
push
inc
mov
dec
subl
lcall
shlb
loop
mov
or
addr16
sbb
push
mov
xchg
popa
loope
sub
add
jns
push
je
jae
clc
mov
movsl
inc
je
xchg
das
inc
cli
xor
fisubrs
addr16
sub
xor
stos
outsb
stc
jl
pop
orb
das
sub
pop
pop
mov
cwtl
pop
mov
cmp
aaa
fs
lds
stos
insl
mov
aam
test
leave
dec
push
adcl
lea
mov
outsb
push
ds
imul
sub
jns
mov
and
mov
or
andl
cltd
and
mov
pop
inc
hlt
jae
pop
jl
popf
dec
dec
addl
sbb
outsb
jns
push
push
cmpsb
xor
push
lods
rclb
jmp
lods
icebp
mov
sub
cli
dec
mov
jo
out
stos
sub
push
jle
lcall
shl
cs
mov
stos
pusha
repnz
js
jg
imul
push
pop
gs
pop
sysenter
into
xor
xchg
ds
mov
and
fcomps
icebp
cmc
jne
insl
adc
dec
jmp
cld
cs
xor
imul
and
sub
mov
mov
out
cmp
aaa
sub
mov
push
or
mov
mov
insb
lods
mov
arpl
dec
outsl
insb
fwait
push
aas
add
sahf
into
fimuls
je
add
or
dec
adc
jno
push
and
mov
mov
lock
cs
or
cmovp
cmp
lret
fnsetpm(287
repnz
leave
enter
leave
pusha
mov
nop
fsubrp
pop
push
cs
push
fisubrl
dec
inc
scas
jmp
lret
aad
xchg
cwtl
sahf
push
out
xchg
sub
or
mov
and
jge
adc
pop
data16
sbbb
out
stos
fdivl
or
cli
push
notl
outsl
push
shlb
add
lcall
mov
daa
lret
jne
std
mov
iret
fwait
push
pop
loope
out
iret
lods
jae
out
iret
add
sub
cmpsl
pop
test
jns
xchg
loopne
std
iret
cmp
or
in
push
pop
sbb
out
xchg
lret
push
sahf
xor
repnz
cmp
sar
sbb
pop
mov
popf
sbb
add
dec
lock
xor
icebp
pop
out
cltd
add
les
and
xor
or
lret
dec
sbb
adc
cmc
push
leave
adc
push
mov
stos
std
dec
lret
scas
inc
popf
shrw
and
outsl
scas
cmp
scas
xchg
addb
test
dec
enter
shl
aam
mov
add
sub
sub
mov
mov
ljmp
pop
inc
push
movsb
imul
cmc
pop
ret
dec
mov
divl
subl
push
pushf
adc
push
shlb
lahf
dec
andb
lret
sub
or
xchg
mov
mov
cmp
fwait
push
sub
dec
jge
jmp
lods
xor
inc
scas
popf
shrb
mov
push
inc
mov
pop
negl
dec
stc
lds
test
aam
sub
cmp
xor
xchg
out
daa
cmc
dec
mov
loopne
xlat
pop
mov
jne
xchg
test
test
stos
xchg
pop
lret
lock
mov
orb
ljmp
pop
addr16
cmpsl
outsl
stos
push
movsl
pop
lahf
test
xor
ds
fstp
jbe
cmp
mov
push
in
cld
roll
sbb
jae
inc
mov
ja
mov
sub
jle
std
push
dec
push
loopne
pop
lds
outsb
sub
add
push
into
leave
adc
dec
movsb
nop
ds
loopne
add
xlat
sbb
ficomps
out
ret
xor
ja
sub
jns
push
jmp
sbb
sub
adc
add
gs
xchg
loope
add
gs
push
sub
pop
inc
cli
stc
sub
mov
movsl
bound
sub
push
lahf
movsb
mov
cld
xchg
cmp
cmpb
jle,pt
int
or
mov
cmp
movsb
inc
xchg
fs
nop
dec
mov
fnsave
stc
fcomps
xor
jo
cltd
or
push
push
aaa
adc
fstpl
sbb
mov
loope
in
adc
push
or
xchg
cli
push
adc
mov
pop
push
push
ret
stos
xor
test
pop
je
push
stos
dec
and
orl
mov
push
mov
mov
pop
in
inc
jb
dec
fldl
pop
mov
repnz
repnz
inc
push
push
cmp
or
jno
adc
jmp
xor
lcall
push
add
es
cltd
cmp
push
cmp
data16
sbb
fisttpl
bound
cmpsb
in
fbld
mov
and
neg
mov
or
xchg
jae
xorl
lock
dec
je
icebp
cmp
jo
bound
sbb
lret
lret
icebp
push
pop
sub
lret
sbb
xchg
sti
fwait
mov
mov
and
add
mov
xchg
add
and
adc
sub
push
cmp
push
xor
mov
enter
cmp
ret
sarl
orb
insl
outsl
xchg
sbb
jbe
jg
in
mov
xorb
add
std
cs
lahf
pop
adc
mov
cmp
adc
popf
jo
pop
push
fimuls
mov
cmp
lret
inc
and
hlt
or
jge
mov
mov
lock
or
addr16
mov
loope
sub
or
adc
sub
mov
mov
mov
mov
push
mov
mov
leave
mov
popf
mov
push
lahf
xchg
dec
cmp
sub
icebp
and
xchg
into
cmp
cmp
jmp
mov
jno
es
div
lock
xchg
pop
aad
out
adc
stos
cs
dec
jnp
sbb
add
dec
sbb
cmpb
add
sbb
sahf
mov
mov
mov
imul
push
mov
mov
xchg
sahf
les
jbe
and
es
inc
test
push
aam
out
sub
je
fisubs
adc
cmp
sbbb
dec
mov
lret
lcall
lods
not
jle
adc
xchg
mov
pop
push
pop
mov
mov
mov
mov
scas
mov
push
xadd
fstpl
das
fildl
sarl
push
jge
xchg
lahf
or
jle
xor
pop
repnz
fdivrp
out
fwait
testl
cmpsl
loop
out
mov
or
jno
cmp
push
imul
adc
or
loope
dec
lret
lret
mov
aad
dec
leave
pop
jge
sub
cltd
sahf
in
aad
daa
out
jecxz
aam
push
adc
xor
subb
mov
inc
adc
sub
daa
mov
mov
xchg
dec
pop
xor
ficoml
xchg
adc
loopne
sbb
sbb
jecxz
call
push
repnz
icebp
or
out
cld
mov
aas
jne
sbb
out
add
hlt
sub
push
das
popa
fs
add
ljmp
aad
xor
sub
inc
xchg
repz
jbe
lahf
stos
movsl
pop
sti
aad
sti
add
pop
clc
sub
push
or
and
test
data16
adc
xchg
inc
testl
shl
xor
adc
das
das
cmp
ds
mov
add
or
push
sbb
xchg
jecxz
inc
sub
xor
test
stos
mov
stc
xchg
ret
inc
xor
add
scas
rorb
mul
int3
stos
push
push
xor
xor
test
mov
mov
fs
jbe
out
jb
mov
dec
shlb
jp
es
mov
jmp
jns
xor
jb
sbb
cmp
or
loope
subl
mov
test
in
xor
jg
dec
jge
xchg
ds
and
add
or
sbb
mov
fcomip
jne
xchg
jecxz
lods
cld
fucom
sbb
andl
out
cli
inc
jno
cmp
sarb
xor
scas
cmpsl
push
imul
popf
mov
sahf
and
inc
cltd
jg
jbe
sub
or
or
rclb
mov
and
out
jns
add
push
shrl
push
in
fisubrs
je
pop
mov
ljmp
cmp
push
out
push
cmovb
jo
mov
sbb
int
stos
jp
mov
popa
ret
xor
mov
cmp
lret
mov
pop
dec
push
cmpsl
sub
incl
aas
dec
pop
outsb
push
mulb
call
push
adc
int
jl
mov
je
leave
jae
xchg
mov
jl
in
mov
popf
mov
dec
in
cmp
cld
xlat
inc
stos
push
rorb
out
call
fisubrl
xchg
lock
andb
mov
mov
pop
out
movl
ja
dec
mov
shll
inc
cmc
and
lods
ja
mov
sbb
out
pop
addl
fwait
nop
hlt
mov
adc
dec
stos
xor
aas
add
inc
repnz
sub
push
cmp
outsl
std
xor
je
addr16
xor
les
cmpsl
repz
shrb
mov
sub
fbstp
xor
mov
xchg
xor
rol
push
lds
xchg
sbbl
xchg
jnp
data16
mov
and
xchg
fldenv
repz
nop
cs
arpl
and
xchg
push
lock
fistpll
adc
xchg
mov
push
push
cmc
add
jnp
push
inc
pop
xlat
mov
in
push
pushf
das
std
push
jbe
loope
push
mov
sbb
or
cmp
cmp
inc
inc
mov
hlt
or
jae
sti
imul
test
jmp
push
adc
or
jle
gs
jnp
stos
fsubrs
addl
notl
sub
cmc
sbb
shll
out
pop
addl
es
push
loop
fcmovne
iret
adc
mov
lea
leave
lret
adc
inc
mov
sahf
das
es
movsb
fldcw
cmc
aaa
xor
xor
fcoml
xor
hlt
mov
lods
cmp
ds
jo
mov
cld
xchg
mov
imul
fstps
popf
or
add
adc
mov
mov
outsl
mov
pop
lret
icebp
in
xlat
xchg
lret
shr
xchg
int
and
dec
arpl
out
rolb
mov
cld
dec
sarb
sbb
stos
pushf
xchg
insl
cmp
outsl
mov
test
cmp
jae
mov
mov
mov
sbb
pavgb
fbld
subl
inc
je
mov
fs
sub
jecxz
inc
ror
movl
mov
dec
sub
adcl
test
loop
nop
mov
pusha
add
arpl
xchg
clc
and
test
fs
stos
cmpsl
imulb
cmp
push
cmp
xchg
loope
loop
adc
sbb
add
inc
push
push
push
xor
jno
fucom
xlat
lds
push
sbb
xchg
lret
outsl
xor
mov
nop
push
aas
testl
mov
loope
pop
inc
add
rorl
sub
lea
add
inc
shll
or
cmp
movsl
ss
xchg
ret
dec
inc
pop
mull
mov
inc
cmp
sub
call
ret
or
pushf
add
mov
popf
fucomi
xchg
lods
push
sahf
dec
stos
fdivs
out
push
mov
lock
lock
in
leave
jg
ror
cmp
pop
in
addr16
aas
add
imul
shll
ret
iret
test
clc
push
add
or
lret
inc
inc
jp
mov
js
mov
data16
xor
mov
pop
sarl
seta
cmpsb
in
jl
daa
xchg
mov
cs
mov
or
sbb
adcb
ret
stos
xor
mov
pop
int
into
inc
mov
aas
add
insb
scas
and
shll
in
add
cmc
sub
mov
cmpsl
pop
inc
mov
out
stos
ljmp
mov
sbb
leave
adc
loopne
movsl
ret
or
je
xchg
mov
dec
fisubl
mov
outsb
push
jge
jnp
mov
aaa
nop
dec
cmp
mov
push
mov
mov
sti
mov
mov
inc
mov
adc
jmp
xchg
or
fstpt
lock
stos
ja
push
mov
and
pop
pop
cmp
imul
aas
cmp
daa
cmovs
inc
out
mov
add
jmp
pop
test
cwtl
xlat
orl
pop
jns
adc
mov
mov
outsl
mov
sbb
jae
pop
in
es
adc
jbe
pop
in
push
fnstsw
sbb
aaa
sti
inc
fs
xchg
adc
pop
jae
jge
lcall
jmp
jecxz
sub
ja
iret
add
int
cmp
xor
int3
mov
test
jge
ss
loopne
lahf
pop
and
mov
inc
test
sbb
push
bound
ss
aad
mulb
add
push
sbb
jne
push
mov
and
push
stos
fstps
pop
mov
imul
dec
subl
popl
loopne
aas
test
inc
jne
adc
pop
out
fstpt
addr16
movsl
stc
lods
loope
mov
add
pop
in
push
mov
or
pop
mov
std
adc
mov
push
in
jns
push
adc
and
mov
sahf
cmp
xchg
jne
xor
and
push
fistpl
or
sbb
inc
ljmp
icebp
sbb
sub
fiaddl
dec
repz
push
cwtl
outsb
mov
jge
fstl
mov
sti
lock
add
cwtl
test
mov
xchg
aam
or
loope
stc
shlb
cmpsb
dec
cmc
mov
sub
push
frstor
or
fstps
imul
or
and
and
dec
inc
push
mov
and
ret
push
push
mov
pop
or
mov
and
dec
or
in
jmp
stc
sub
pop
loopne
lea
cmp
insl
aas
cmp
sbbb
mov
mov
push
push
jle
lock
xor
xor
push
and
mull
arpl
lds
pop
scas
or
leave
imull
enter
aad
inc
lods
push
int
out
or
mov
sbbb
repz
outsb
pop
mov
mov
lret
jnp
sahf
mov
fnsave
mov
jbe
in
adc
aas
xor
hlt
andb
sub
and
popf
ss
daa
fucomp
xchg
je
lods
jge
lcall
jmp
mov
rolb
fprem
adc
aaa
fwait
callw
test
in
mov
in
mov
mov
pop
sti
out
insl
fcomp
xor
cmp
cmc
mov
cs
pop
cs
setne
add
mov
pop
aam
xchg
leave
repnz
or
mov
inc
int
iret
jae
jmp
pushf
dec
mov
mov
fdivrs
shl
mov
mov
jno
xchg
aas
outsl
push
cwtl
arpl
fsub
ljmp
push
or
dec
popf
rorb
data16
stc
data16
sahf
push
roll
fwait
mov
xlat
loop
add
daa
jecxz
stos
addr16
out
sub
fcompl
insb
adc
and
out
loop
rcrl
xchg
mov
xchg
mov
in
jp
mov
jo
pop
movsl
data16
iret
mov
jl
push
or
xorb
test
push
and
mov
gs
movsl
in
daa
inc
cmp
outsl
lcall
ss
adc
mov
adc
and
in
adc
out
aad
mov
mov
xchg
sub
lahf
fisttpl
inc
nop
inc
fsub
je
xor
or
push
mov
addb
rolb
clc
js
rcll
test
xor
jb
or
cmp
cwtl
dec
cmp
and
ss
mov
inc
mov
xchg
xor
ffreep
push
inc
fcmovnb
and
lods
jmp
jg
iret
xchg
dec
nop
inc
xorl
xchg
ja
and
jl
add
psllq
adcl
loope
jg
add
test
scas
lock
add
lods
add
jg
xor
ds
stc
dec
xchg
sbb
inc
mov
outsl
xlat
add
mov
in
sti
dec
adc
test
aad
test
pop
sub
cld
mov
test
jbe
inc
pop
and
mov
loop
insl
test
mov
leave
movsl
lret
dec
lret
jg
aaa
jno
fcmovnu
push
jns
in
enter
add
mov
cmc
push
popa
sub
cmpsb
fstpt
jns
fsts
icebp
jle
or
stc
cld
fs
addl
loopne
cmp
shlb
pop
mov
mov
pushf
lret
sbb
into
les
and
lret
sti
shll
popf
add
cvttps2pi
in
std
push
stos
xchg
je
sbb
mov
dec
data16
xchg
imul
mov
sub
in
cmp
mov
daa
or
xchg
cs
pop
pop
scas
xlat
dec
ror
sbb
dec
call
nop
xchg
lods
fdiv
in
inc
ljmp
mov
call
mov
sbb
fildll
jns
rcll
push
add
hlt
stc
jmp
dec
add
lahf
iret
sub
pop
mov
out
add
push
push
scas
mov
fcmovb
push
pop
jecxz
ret
int3
xorb
inc
imul
lods
mov
cmpsl
mov
test
and
xchg
clc
js
negb
jbe
mov
out
or
call
push
cmp
mov
dec
xchg
mov
lock
andl
lret
sub
pop
dec
dec
cwtl
mov
repnz
push
push
ss
sub
dec
stc
mov
call
xorl
mov
loope
mov
subb
and
mov
push
lds
xor
cltd
xchg
jae
push
push
mov
mov
push
sbb
push
jbe
insl
or
shrl
xor
stos
xchg
loop
gs
sub
bnd
xchg
cmc
clc
pop
sahf
mov
inc
sub
mov
push
sbb
lret
inc
xchg
ja
out
push
enter
adc
adc
pop
adc
push
sbb
cli
mov
rolb
stc
loopne
hlt
into
in
bound
cmp
sar
imul
cmc
mov
mov
rorb
or
loope
cmc
push
pop
fists
sar
adc
jle
ds
cmpsb
rcrl
xchg
jl
sbb
in
mov
mov
and
jae
fisttpll
js
ss
frstor
insl
psadbw
subb
stos
and
icebp
jae
ret
imulb
faddl
or
nop
mov
jno
lods
xchg
testb
popf
and
insb
insl
enter
rcrb
mov
ss
je
cmp
jmp
inc
daa
in
mov
clc
cmp
loopne
mov
xorb
stos
imul
inc
mov
adc
loopne
cmp
add
sti
and
ja
cmp
ficompl
repnz
in
sub
ret
push
rclb
mov
fcompl
jns
cmpb
and
es
dec
mov
movsb
push
pop
pop
outsl
iret
aaa
cmp
bound
adc
push
add
lahf
bound
clc
pop
stc
mov
outsl
test
push
dec
pop
ficompl
lock
jle
ljmp
enter
cmc
es
loope
cli
pop
ja
loopne
dec
and
stc
sbb
mov
mov
inc
sbb
stos
adc
and
in
fisubrl
daa
dec
mov
sbb
mov
hlt
mov
mov
pop
lret
ds
ja
rorb
jl
cmc
add
out
jo
outsl
dec
lcall
or
mov
jae
clc
or
and
sbb
in
fnstsw
ret
xchg
dec
sarb
and
pop
sbb
pop
mov
cmp
cwtl
addr16
pusha
pop
add
push
fstps
pop
cmp
xor
movsl
and
shrl
xor
adc
pop
enter
xorb
sub
cmc
repnz
shll
pop
stos
push
sti
stos
xchg
mov
add
pop
sbb
jl
js
xor
pusha
sub
jp
pop
lret
cltd
inc
cli
push
sar
pop
jns
add
fidivs
ja
xlat
lods
mov
aas
xchg
aad
in
sbb
lcall
mov
push
xor
es
les
jno
sbb
loop
fldt
fnstenv
mov
mov
sti
push
sarb
push
and
mov
xorps
dec
fldenv
js
aam
and
and
sbb
xchg
xor
sti
xor
xchg
cmpsl
jnp
mov
mov
mov
and
mov
add
out
mov
or
repnz
inc
lods
ljmp
push
cmp
lods
inc
add
mov
inc
push
lcall
movsb
outsl
sub
enter
in
subb
or
adc
cmp
sub
cmp
sbb
mov
sub
popa
cltd
fmul
mov
dec
add
adc
mov
lods
in
daa
or
nop
mov
subl
loop
stc
xor
insl
call
aas
data16
bound
std
mov
mov
scas
pop
sti
mov
dec
mov
lock
sbb
push
push
mov
clc
jmp
cmp
mov
jp
mov
jecxz
jmp
mov
lock
out
sub
cmp
loopne
dec
test
rol
xchg
or
fistps
cmpsb
fdivrl
cli
sbb
test
jecxz
outsb
cmp
mov
or
lods
sti
hlt
and
jmp
jmp
sub
bound
scas
aas
mov
movsl
loope
mov
cmp
dec
mov
dec
inc
or
mov
and
lods
push
cmp
loopne
pop
in
rorl
pop
inc
pusha
and
sub
mov
pop
rorl
mov
repnz
sub
lds
les
ss
push
arpl
pop
aas
sbbl
int3
insl
lods
and
aad
or
arpl
mov
pop
inc
mov
lea
mov
xchg
popa
xor
gs
in
daa
repz
push
mov
mov
mov
or
out
out
aas
inc
lock
mov
push
call
pop
imul
nop
pop
pop
paddsw
vandnps
pop
ds
push
int3
adc
orb
cmp
jl
pop
in
cmc
cld
stos
into
inc
push
xor
mov
mov
pop
daa
jnp
insl
mov
jne
jge
jge
ja
inc
cmp
fidivrs
lret
push
jne
sbb
cmpsl
pminsw
mov
cmp
stos
and
pop
rcll
cmp
push
popf
push
xor
jle
dec
rclb
add
daa
rcrb
mov
rcrl
fdivs
or
fisubl
fsts
mov
mov
into
lcall
ja
jns
jbe
cltd
dec
jne
fimuls
add
fwait
popa
mov
xchg
lret
sub
push
xor
xor
jmp
xchg
mov
das
gs
add
cmpsl
mov
mov
push
ret
push
dec
jnp
fistpll
xchg
out
mov
xchg
cwtl
dec
outsb
bnd
mov
idivl
mov
mov
clc
sub
xchg
cld
fistpl
add
mov
imul
sarb
popa
jg
mov
mov
iret
xchg
or
dec
in
fs
xchg
aad
pop
cmp
mov
mov
cld
jmp
dec
lds
aam
sbb
cmp
xchg
dec
lods
out
and
lock
adc
das
mov
inc
lret
dec
aas
imul
mov
push
enter
sti
std
movsl
lock
push
adc
stos
fistps
rorl
andb
ficompl
mov
xor
add
stc
cmc
mov
dec
incb
rcrl
jmp
cmp
out
sbb
outsb
cmp
mov
insb
fisttps
aad
imul
cmp
mov
insl
pop
inc
loopne
push
push
inc
testb
cli
cmc
and
pop
xor
add
and
cmp
xchg
std
adc
sbb
inc
push
es
stos
mov
sti
movsb
or
push
into
adc
mov
andb
xchg
loope
mov
idiv
xchg
test
in
out
xlat
fs
jb
lods
jmp
xchg
repnz
pushf
cs
data16
inc
in
push
outsb
lods
sub
mov
pop
sub
xchg
lods
ss
into
sub
enter
mov
cwtl
xchg
inc
mov
jnp
xlat
add
je
cli
iret
xchg
mov
xchg
rolb
nop
push
xchg
add
negb
inc
aam
xor
je
dec
leave
sub
pushf
jge
lods
adc
mov
jbe
or
stc
cmp
xlat
push
aam
fidivrl
in
repnz
push
or
and
faddp
xor
push
push
or
inc
xlat
sbb
sti
into
xchg
inc
daa
sbb
xchg
pop
mov
inc
sub
mov
es
sbb
jb
mov
push
jge
mov
fstl
cmp
jle
mov
lods
jno
xchg
cwtl
jp
mov
xchg
mull
fdivl
sbb
scas
jmp
int3
or
int3
cwtl
mov
lds
pushf
mov
jecxz
incb
mov
jecxz
rcll
arpl
movsl
push
push
mov
jge
pop
insb
jle
xchg
jnp
ret
lret
pop
out
pop
clc
enter
ljmp
cmp
in
sbb
inc
stc
or
popa
or
dec
out
clc
int
popa
mov
out
sbb
enter
sub
popf
xchg
inc
push
rcr
pop
and
push
pushf
adc
outsl
mov
mov
pop
bnd
xor
pop
iret
pop
fmull
lcall
inc
xchg
mov
adc
outsb
repnz
les
lods
jb
sarl
loope
mov
cmpsb
aaa
ja
add
sbb
int3
pop
sub
mov
adc
cwtl
push
cs
cmpsl
xchg
and
sub
mov
pop
int
jbe
incb
mov
cmp
bt
cmp
mov
add
xlat
pop
jmp
fsubrs
ficompl
xchg
mov
imul
aaa
and
cmp
icebp
outsl
shrb
out
shl
mov
in
aaa
lret
and
or
inc
or
dec
push
ja
sub
ficomps
dec
fadd
push
or
sub
inc
sbb
add
loopne
xor
xchg
cmp
rolb
popf
push
sahf
push
push
push
rcrl
ljmp
and
push
ffreep
mov
addr16
shll
inc
and
call
addl
scas
push
lret
fistl
idiv
test
or
add
shll
cmp
test
popa
xor
orl
aas
sub
xchg
xorl
and
xor
dec
mov
xchg
stos
sbb
pop
pop
lock
aam
int3
sbb
in
pop
aam
sub
jb
dec
cmc
movsl
movsb
cltd
lahf
sarl
pusha
lds
pop
icebp
test
mov
lods
dec
and
dec
jl
mov
sbb
insb
inc
or
incl
jmp
jae
push
xlat
insb
ss
cld
std
and
hlt
cmp
rorb
lret
scas
outsl
pushf
aad
fs
nop
bound
std
icebp
cmp
sti
pop
mov
adc
out
xor
jl
mov
insl
fs
push
stc
xor
dec
mov
mov
lahf
pop
and
cmp
xor
fs
xchg
and
addr16
ficoms
dec
mov
add
or
scas
enter
or
gs
xchg
iret
loope
xor
mov
lret
jo
add
insl
mov
inc
sti
or
inc
mov
mov
lods
mov
scas
xchg
data16
and
dec
into
arpl
loopne
mov
adc
outsl
mov
movsl
xchg
sub
popf
stos
mov
dec
mov
cmp
xor
sub
inc
inc
pop
lea
imul
push
andl
dec
in
mov
adc
inc
cmp
xlat
mov
icebp
mov
in
fsubl
dec
adc
mov
lcall
jmp
sub
push
out
stos
rcrb
roll
jg
and
xchg
stc
mov
inc
lahf
dec
arpl
arpl
mov
cwtl
cmp
outsb
inc
ljmp
push
and
xchg
mov
repz
mov
nop
add
aad
es
sti
mov
jle
pop
sahf
mull
shl
and
lds
in
pushf
mov
fmuls
int3
jecxz
mov
cmp
xor
out
dec
push
mov
scas
sbb
jecxz
dec
jno
mov
popf
jp
xchg
outsb
adc
ljmp
pusha
stc
ret
jp
xchg
sub
jge
cmp
lods
clc
fwait
sti
jb
in
and
daa
test
add
sbb
mov
cmpsb
pop
test
hlt
mov
js
jno
sbb
inc
cmpsl
repnz
xor
insl
xor
sub
dec
mov
lods
dec
lret
pop
jp
mov
xchg
mov
arpl
cltd
jmp
mov
jo
sub
repnz
jbe
mov
mov
pop
aad
mov
movsb
cmp
out
xor
fstpl
xor
adc
icebp
sbb
pop
xchg
mov
mov
jns
call
call
imul
out
incb
loop
mov
inc
mov
adcb
scas
filds
pop
sub
or
inc
inc
xor
or
out
insl
fnstsw
out
xchg
push
fcmovnbe
sarb
or
cmp
push
inc
adc
pop
mov
inc
stos
xlat
push
incl
xchg
push
jb
je
mov
xor
repz
xor
in
pusha
addr16
and
lock
xor
jne
add
sti
xchg
and
shlb
xor
in
fiaddl
stos
add
out
icebp
jbe
xchg
es
leave
add
mov
movsb
sbb
pop
int
jmp
add
rclb
xor
adc
pop
into
leave
popl
sbb
or
fs
cmpsb
dec
mov
js
xor
jp
test
je
std
add
pop
mov
les
or
popa
ljmp
dec
dec
jbe
sti
leave
cmpl
sbb
cmc
sub
and
cs
xchg
lahf
out
ficoml
dec
xor
arpl
cmp
adc
call
cmp
sub
pop
mov
xor
pusha
clc
cs
xchg
dec
inc
testl
sbb
adc
mov
loopne
in
repnz
pop
push
pusha
inc
push
push
fstpt
fs
mov
pop
outsb
cwtl
add
xchg
daa
mov
arpl
outsb
lods
roll
out
pop
out
jne
addr16
push
test
lods
ds
xchg
xor
out
inc
xchg
jne
mov
jle
push
dec
dec
add
mov
scas
popa
jecxz
xchg
inc
xchg
sti
or
imul
cmovl
add
push
sbb
adc
andl
sti
adc
sbb
xchg
pop
fcmovne
or
push
mov
les
in
insb
stos
mov
shrl
pop
sbb
jb
mov
push
ljmp
push
lock
loop
jo
xor
cmpsb
jb
cmpsb
dec
push
jp
xor
mov
push
or
jmp
icebp
loop
out
pushf
or
aad
aas
out
gs
movsl
inc
cmpsb
shrb
xor
imul
push
xchg
push
add
mov
pushf
enter
adc
push
mov
and
mov
push
out
pop
sub
lret
and
jns
add
mov
jecxz
stc
insl
sarl
js
xchg
mov
pop
das
cmp
ret
nop
push
xchg
xchg
ljmp
mov
in
add
mov
lahf
and
sub
xlat
mov
in
and
lret
cltd
nop
cmp
repz
jb
enter
xchg
cmp
mov
mov
out
int
sbb
xchg
inc
fstpl
scas
mov
jno
jmp
test
std
pop
es
inc
scas
stos
pop
or
mov
lahf
dec
adc
and
mov
xor
loopne
or
xchg
push
push
and
lahf
iret
bound
std
pop
daa
scas
loopne
pop
mov
mov
or
lds
shl
push
xor
sti
xchg
sbb
push
sub
mov
xor
mov
pusha
add
dec
sub
push
pusha
xchg
jne
jle
mov
xchg
xchg
ljmp
arpl
inc
stos
lea
mov
xchg
das
mov
ret
mov
add
mov
pushf
int3
or
push
cmp
into
pushf
mov
pusha
mov
jb
cmp
stos
jno
mov
sbb
xor
xchg
movsb
and
addl
out
mov
out
or
icebp
adc
es
push
jp
mov
in
je
or
cs
pop
clc
jle
test
push
mov
call
jne
fsubl
lods
dec
in
jle
xchg
adc
mov
dec
out
push
mov
mov
shlb
ds
fbstp
mov
and
mov
je
push
int3
leave
jecxz
push
inc
leave
or
testl
call
mov
lahf
imul
sbb
sti
repnz
loopne
xorb
mov
addr16
xor
popf
pop
lret
iret
push
loope
mov
dec
dec
clc
mov
dec
cli
loop
mov
into
in
and
insb
sbbb
push
push
bnd
xchg
ror
lock
jmp
jae
mov
loop
hlt
pop
aad
or
mov
out
xor
push
lds
fistpll
adc
mov
push
adc
cmp
nop
jmp
popa
mov
ficoms
fsubrl
addr16
ret
ret
enter
adc
mov
fs
xchg
mov
adc
add
imul
mov
add
mov
cmpsb
pop
or
cli
adc
push
pop
lds
mov
xchg
scas
sub
sub
lret
sub
mov
mov
push
mov
adc
cmpsb
loopne
enter
push
sbb
add
add
mov
jl
push
pop
xchg
das
pop
nop
xchg
mov
pop
out
imul
mov
mov
shl
cltd
leave
pop
push
push
cmp
out
insb
sbb
int
xchg
sub
mov
outsb
in
stos
push
xor
xchg
pop
xchg
shrb
cmp
pop
imul
adc
sub
into
in
xchg
xchg
js
into
xchg
xchg
cmpsb
push
mov
es
mov
pop
pop
jp
ret
fmuls
jae
mov
addb
or
inc
into
or
imul
pop
jns
push
adc
xor
xchg
roll
arpl
fmuls
mov
or
mov
dec
fisttps
stos
cmpsb
xlat
stc
mov
jbe
inc
mov
push
xchg
out
fstl
jb
lods
adc
push
jmp
and
sti
aaa
mov
ficomps
lods
sarl
dec
movsl
mov
mov
push
jecxz
push
add
mov
inc
push
adc
mov
and
loope
daa
outsb
stos
leave
je
mov
sub
lahf
loope
dec
dec
mov
cmp
lcall
jg
dec
cltd
dec
xor
jno
push
and
loopne
aam
adc
xor
add
repz
ljmp
push
push
lea
jp
loop
in
jnp
and
cmpl
jo
shlb
data16
pop
adc
ss
sbb
out
mov
repz
jecxz
jp
jl
mov
push
mov
inc
sub
leave
in
xorl
hlt
xor
dec
xchg
int3
ret
lods
jne
jle
push
movsl
fisubl
xchg
loope
pop
xchg
insb
out
sti
xchg
push
out
shll
loope
outsl
push
clc
jge
mov
inc
stos
loope
adc
addl
sbb
mov
cmp
in
addr16
pop
leave
daa
push
pushf
cmpsb
fmuls
adc
pushf
dec
mov
jge
enter
clc
dec
popf
add
xor
xor
dec
mov
dec
xor
add
xchg
jle
mov
inc
sbb
jmp
fwait
dec
mov
ds
xchg
imul
pop
inc
arpl
ja
mov
cmpsl
inc
cld
je
inc
jbe
xor
inc
mov
mov
xchg
ja
xchg
ljmp
jmp
fwait
cltd
add
mov
push
outsl
and
in
iret
inc
aam
mov
aad
xlat
data16
enter
or
mov
cmpsl
mov
jp
mov
mov
gs
jge
insb
popa
outsb
cmc
sbb
icebp
icebp
sbbl
into
into
lcall
sbb
loope
mov
out
gs
xor
addr16
pop
enter
scas
xor
pop
push
ret
sarb
adc
xor
jmp
adc
mov
ja
roll
xor
push
repnz
dec
push
ret
js
pop
xchg
inc
add
ss
ret
aas
pop
lea
cmpsl
jecxz
xchg
loop
jmp
push
int
in
mov
cli
stos
pop
lds
cmp
xor
pop
lret
adc
jg
pop
sbb
cmp
movsl
add
xor
lods
jp
enter
out
xor
cmp
int
sub
cmp
leave
out
sub
je
call
push
lods
mov
adc
jno
mov
das
adc
xchg
adc
mov
cmpsb
pop
mov
movsl
pop
ds
add
pop
jnp
out
dec
insl
pop
fldl
add
cmp
adc
repnz
aam
negl
pop
push
hlt
mov
pop
adc
ds
enter
mov
mov
test
mov
inc
cmpsl
and
scas
int
jae
jns
pushl
fisttpl
lds
pop
lret
pop
je
out
jp
mov
or
pop
push
movsb
jge
nopl
pushw
pop
lret
outsb
push
repnz
cmpsb
js
pop
dec
mov
sub
int3
sahf
xor
lret
ret
stos
sbb
mov
jge
push
inc
data16
daa
push
repz
push
pushf
cmp
fnstenv
scas
inc
sub
ret
pop
add
hlt
sub
dec
adc
and
in
xchg
sbb
xchg
fistpl
add
cmp
insl
inc
in
mov
fcomp
mov
jae
xchg
stos
add
fs
mov
bound
or
push
and
pop
cmpsl
xor
mov
jmp
mov
jb
and
pop
jb
fwait
adc
in
int3
inc
push
push
fs
xchg
jecxz
and
ljmp
xchg
cld
scas
imul
or
dec
lods
pop
cmpsb
aad
jnp
mov
loope
mov
incl
lret
loop
pushf
add
fldl
add
push
js
pushf
sti
fucomip
add
jb
cmp
dec
push
mov
inc
scas
mov
fiaddl
or
dec
out
or
sbb
shll
xchg
jno
mov
mov
lahf
adc
mov
jo
imul
lcall
into
cmpsb
cmp
cmp
fsubp
xchg
test
push
push
lds
adc
jb
cmc
mov
int
push
add
mov
xchg
xchg
xor
cmc
jb
rcrb
mov
imul
fcoms
ss
jl
and
jb
add
les
stc
sbb
mov
adc
sub
or
push
mov
pop
lock
aaa
push
nop
mov
test
movsl
movsb
jb
pop
sub
inc
pop
imul
or
testb
iret
dec
mov
repnz
or
insb
ss
sbb
pop
xchg
lock
stos
hlt
or
lahf
nop
or
sahf
cmp
pop
pop
in
and
and
xor
loopne
pop
cmp
or
lret
scas
loopne
ds
inc
out
data16
loopne
in
aad
lock
cld
psubd
out
cmp
mov
dec
lds
mov
shrb
add
sub
inc
push
xchg
push
inc
and
insl
or
mov
decl
loope
sub
inc
or
push
push
shrb
test
and
push
fdivrs
subl
enter
mov
pop
aaa
mov
mov
xor
test
out
outsb
out
jmp
cmp
hlt
inc
xchg
and
mov
push
test
into
lahf
rcrb
and
sbb
jle
pusha
mov
sub
leave
jecxz
das
adc
call
inc
dec
ss
mov
inc
add
fnsave
js
fadds
mov
in
lret
dec
popf
fwait
loop
test
rcrl
and
outsl
inc
xchg
push
into
pushf
mov
hlt
adc
std
push
sub
cmc
mov
mov
scas
jbe
and
repnz
test
or
xlat
fisubrl
add
imul
xor
push
mov
lock
add
jne
xor
inc
and
loop
cltd
mov
adc
mov
mov
cmp
ss
mov
jecxz
mov
push
enter
call
in
and
and
and
mov
mov
in
aaa
cmc
push
loop
jb
in
jne
jmp
mov
rcr
mov
aam
mov
ret
mov
fwait
pop
xor
lret
mov
xchg
push
js
mov
imul
xor
xor
xor
bound
add
jo
lea
inc
cltd
fisubrs
in
xor
repnz
lds
dec
xor
or
jp
repnz
pop
shrl
pop
jmp
fisubl
lods
adc
xchg
lds
mov
jge
mov
icebp
or
xchg
dec
pop
in
out
jo
sbb
imul
or
shlb
push
bound
lods
mov
sub
mov
jo
or
sti
xor
xor
xchg
ret
mov
loop
jno
mov
mov
shl
pop
xor
ffree
xchg
sbb
out
cmpsb
adc
or
sbb
adc
ja
imul
jge
mov
sti
aas
dec
fistpl
cmp
cmp
and
sub
mov
or
mov
jmp
shlb
push
in
jno
ret
push
mov
jp
insb
add
int
cmpsl
repnz
jo
sahf
flds
movsb
mov
fidivl
fists
out
and
pop
pop
jecxz
jnp
popa
xlat
pop
dec
or
push
sti
push
hlt
jecxz
mov
inc
fs
sub
pop
mov
popa
shl
lahf
or
dec
testb
jp
lods
psubsw
mov
adc
sub
mov
jns
popf
fidivs
aam
movsl
enter
rorl
or
xor
fisubs
mov
pop
daa
sub
pop
enter
xor
js
lds
leave
test
fisttpl
pop
adc
cs
hlt
or
ret
sar
in
stc
imul
xchg
outsb
flds
and
lahf
mov
lahf
mov
shll
aad
scas
daa
mov
insb
lock
sub
mov
inc
cli
daa
stos
xor
mov
jno
inc
test
sahf
rclb
xlat
inc
sub
sub
mov
push
inc
lods
pop
loopne
test
hlt
fs
repnz
psubw
imull
fdivl
cli
xchg
bnd
sub
in
mov
lods
lea
jo
adc
jmp
nop
mov
adc
jle
fsubrl
xor
push
and
mov
jecxz
cmp
or
xchg
out
xchg
lret
mov
add
rcrb
mov
and
jne
or
push
cmp
imul
int
test
or
sahf
out
inc
push
mul
fcmovb
add
xchg
ja
imulb
dec
jae
xor
and
lahf
sub
pop
lret
add
dec
inc
mov
call
cmp
jge
jg
cmp
xchg
add
mov
cmpsb
std
es
int
mov
nop
ljmp
scas
imul
rcl
out
pop
mov
leave
xchg
push
cmp
loopew
cld
push
stos
push
add
mov
and
xor
ret
adc
das
dec
repnz
adc
and
mov
cmp
into
scas
push
fcomps
sbb
jo
loope
je
fucom
imul
or
test
xchg
xor
cmc
insb
xchg
in
out
jmp
push
dec
lods
cmp
outsl
pop
lods
stos
jns
test
xorl
mov
outsl
xchg
loope
mov
push
imul
pusha
mov
lods
pop
sbb
or
adc
stc
lds
addr16
mov
es
ljmp
jnp
mov
movsb
inc
xor
shl
xor
je
test
andb
ror
js
mov
test
std
das
addr16
cmp
jp
cmpxchg
addr16
dec
int
inc
sbb
es
push
imul
pop
in
jno
sti
and
mov
out
xor
push
test
out
xor
cs
cmp
shl
ret
and
mov
sbb
jb
dec
popf
adc
mov
insl
repnz
arpl
imul
daa
mov
pusha
jge
mov
and
sub
stos
mov
mov
cs
movsb
mov
mov
pop
mov
ss
enter
aad
xchg
outsl
and
sbb
mov
sub
and
outsb
enter
loop
and
xchg
in
mov
mov
mov
sarl
lcall
or
popf
leave
sbb
out
mov
inc
mov
outsl
jp
test
mov
lods
dec
push
inc
mov
pushf
scas
lcall
dec
or
adc
rcr
and
stos
adc
pushf
fmull
pop
addl
add
xor
cld
jl
add
add
pop
lock
push
shlb
clc
inc
or
adc
fbstp
cmp
cmpsb
mov
mov
jno
inc
dec
aam
scas
dec
sahf
loop
xchg
lret
xor
cmp
push
cmp
jecxz
ret
shrl
scas
sub
nop
add
gs
int3
gs
out
mov
pop
inc
pop
pop
loop
adc
jle
inc
dec
notl
xlat
dec
addr16
mov
enter
and
mov
and
sbb
cmp
out
inc
xor
pop
rorl
loopne
jb
and
xor
leave
cmp
dec
sbb
adc
or
ret
mov
cltd
cmp
scas
inc
xor
daa
sub
je
xchg
scas
add
push
inc
idivb
push
dec
ret
std
xchg
push
repnz
jmp
nop
dec
subb
cmc
testb
mov
mov
push
daa
mov
or
ds
stc
cmp
decl
bound
shrl
stos
or
cmpsl
push
pusha
sub
call
gs
or
sub
jecxz
jle
insb
pop
add
mov
cld
into
dec
pop
lcall
dec
aas
je
jb
lret
sbb
addr16
cmp
sub
mov
cld
stc
ss
bound
or
xchg
cwtl
push
dec
xor
cli
sti
cmpsb
je
jo
mov
pop
mov
fdivrl
ret
push
xor
scas
insb
mov
sub
les
lods
jp
sbb
push
sahf
data16
push
pop
xor
test
lds
cld
mov
addr16
test
mov
pop
and
cmp
push
loope
cmpsb
and
loop
mov
xor
jb
pop
jecxz
mov
sbb
dec
sub
faddl
add
or
cmp
dec
movsl
imul
cmc
sbb
nop
imull
xchg
xorb
ret
lods
fnsave
lret
xchg
xchg
jnp
lret
fdivrs
cmp
xor
je
dec
cwtl
xchg
xchg
sub
inc
and
mov
int3
testl
push
mov
mov
and
fmuls
cmp
lahf
fld
pop
adc
lods
cmpsl
xchg
lcall
sbb
arpl
jo
aad
leave
es
or
clc
xlat
lods
cs
hlt
pop
popf
xchg
adc
mov
jmp
inc
jmp
pop
pop
mov
das
push
rorb
xor
lock
hlt
loopne
mov
movsb
xor
aad
and
xor
sbb
and
out
add
jl
jmp
out
mov
js
sbb
sbb
cmp
mov
fists
movsl
jg
mov
sti
mov
pusha
das
arpl
push
push
ja
arpl
sbb
in
mov
sbb
aas
mov
insl
xlat
nop
jmp
xor
mov
sbb
sbb
cli
in
pop
int3
or
mov
addr16
xor
sarl
clc
xor
lahf
mov
or
or
ja
popa
lret
and
inc
pop
xor
clc
mov
push
dec
test
dec
insb
jge
subl
ret
fidivl
adc
sbb
cmp
ljmp
pop
popf
push
mov
pop
and
in
inc
dec
flds
into
mov
sahf
icebp
push
jl
aaa
in
rcl
cmc
test
sbb
mov
bound
jge
mov
sbb
xor
and
sub
jnp
push
mov
inc
in
imul
mov
mov
push
add
xor
or
dec
and
jo
jg
cmp
loopne
lds
icebp
rcrb
cmpsl
push
or
adc
or
mov
pop
scas
in
aad
cmp
jo
faddl
xor
pop
lcall
adc
std
hlt
call
inc
dec
adc
sbb
sahf
or
or
jbe
insb
insb
push
xor
dec
repz
push
jae
cmp
repz
cmp
std
push
movsb
jns
sbb
imul
and
jb
push
dec
jmp
mov
push
repnz
pop
or
push
adc
dec
sti
push
add
adcb
aas
xchg
dec
rcrl
pop
insb
xorb
bound
fmulp
sub
sub
icebp
aaa
fs
mov
je
sbb
popa
fcmovbe
scas
and
gs
fistl
jl
mov
lock
ud1
dec
jl
inc
push
mov
add
jecxz
or
shlb
das
icebp
sbb
xchg
xor
pushf
push
xor
inc
ret
sbb
rcrl
lret
or
faddl
adc
jge
fwait
jns
fst
out
das
jb
jge
sub
stos
inc
fs
cmpsb
cmp
xchg
lods
jbe
addr16
push
mov
pop
sbb
push
out
push
mov
jge
or
mov
sub
mov
ss
jno
xchg
aas
mov
es
aam
fdivl
ja
je
lea
xor
notb
sub
mov
ret
mov
cmp
mov
push
push
int
push
insb
imul
popf
out
clc
jp
jo
cld
cmp
shl
in
cmp
mov
inc
push
lcall
test
cmp
pusha
xchg
paddusb
clc
aas
in
sbb
pusha
clc
test
jecxz
lock
cmp
push
cmp
pop
sbb
cmpsb
test
addr16
fisubl
insl
jmp
adc
adc
pop
pop
cmp
ljmp
ss
mov
in
lods
repnz
jecxz
icebp
cmpl
int
mov
xor
or
adc
mov
xchg
andl
repnz
mov
xor
scas
and
enter
mov
div
leave
cmp
sarl
mov
repz
mov
mov
jp
sahf
fnstenv
adc
jo
add
ljmp
xor
pop
loope
sbb
add
inc
jmp
mov
push
pxor
dec
popa
mov
addr16
je
and
sbb
divb
cmp
fisttps
jmp
addr16
pop
sti
jp
adc
stc
inc
fidivrl
inc
stc
mov
and
sarb
pop
adc
xor
jbe
adc
xor
mov
inc
and
sti
pop
jne
clc
pop
clc
clc
aas
fdivs
rorl
inc
imul
push
xor
or
and
addr16
fsubrl
movsb
pop
inc
or
lcall
inc
sub
lock
jp
sti
dec
les
mov
jle
mov
xchg
decl
sbb
push
aad
mov
dec
idivb
aaa
push
cmp
cmc
xor
jae
fnstsw
push
std
push
mov
and
sbb
std
sub
leave
rclb
cmc
inc
sub
push
movb
push
rol
outsl
dec
in
jecxz
sub
add
std
insl
leave
cmovl
lret
out
adc
or
push
ljmp
mov
sub
std
notb
xchg
cmpsb
jne
xchg
inc
sti
lret
pop
inc
js
dec
lea
mov
fwait
mov
add
mov
adc
stos
das
bound
push
dec
jnp
call
xor
icebp
mov
pop
xchg
rcrl
push
cld
les
repnz
or
pop
nop
je
aam
popf
jg
les
sbb
xor
scas
pop
call
cmpsl
adc
stc
mov
jecxz
sbb
test
mov
dec
adc
roll
xchg
test
mov
add
push
imul
pop
jge
pop
push
and
cmc
xor
stos
sarl
jmp
repnz
testl
cmp
jp
sbb
fbstp
insb
arpl
sub
cld
std
andl
jo
jle
sub
pop
jne
sbb
jecxz
outsb
push
out
outsl
xchg
out
push
cmp
mov
roll
and
sub
push
pop
push
jg
lahf
xchg
gs
mov
fdiv
mov
lahf
pop
mov
lret
mov
adc
fsubs
cmpsl
pusha
push
sti
push
test
ljmp
insl
push
lea
outsb
into
test
mov
jp
lds
es
mov
cmp
inc
ret
mov
cli
jg
dec
hlt
test
mov
insb
mov
andb
mov
test
sbb
push
bound
jl
mov
mov
dec
data16
dec
cmpsl
lds
outsb
cmpsl
cmpsl
cs
insl
xlat
fisttpl
xlat
stos
int3
ljmp
shlb
lahf
movsl
xchg
dec
add
mov
lods
adc
cltd
mov
ficoms
jno
xlat
jge
or
push
xchg
add
out
mov
mov
xchg
bswap
mov
insl
or
mov
mov
mov
mov
adc
popa
cld
fsub
inc
pop
mov
mov
push
mov
jbe
pushf
xchg
lods
xchg
xlat
xor
loopne
xor
dec
jne
mov
in
test
dec
inc
scas
iret
and
fisubl
mov
clc
dec
mov
push
cli
lds
jns
jbe
or
addr16
inc
jno
adc
ds
fdivrl
out
pop
add
jno
jo
in
jb
lret
jecxz
scas
nop
mov
dec
mov
add
xor
jo
or
push
xchg
inc
into
popf
stc
push
addl
and
stos
cltd
cmp
out
or
sbb
adc
iret
loop
imul
in
xor
jl
loope
jge
xor
push
rolb
cmp
fsts
loop
xor
xchg
ret
dec
ds
loopne
into
cmp
mov
lods
daa
ljmp
ficoms
gs
inc
or
jp
fisttpl
imul
movsl
jbe
aam
scas
loope
inc
inc
pop
cmp
xchg
lods
inc
add
push
push
push
xchg
push
xchg
cmc
out
inc
and
outsb
xlat
dec
cs
test
pop
cld
pop
mov
stc
and
pop
scas
push
and
cmp
sbb
cmp
dec
mov
ss
jle
mov
in
int3
xchg
jg
loopne
fildll
lgs
pop
cmp
mov
mov
xchg
dec
jg
jbe
pop
dec
in
jecxz
mov
dec
cli
fucom
aad
orl
push
push
add
lock
or
mov
scas
cmp
arpl
mov
mov
sub
push
dec
push
pop
mov
popf
push
jns
lahf
pop
inc
push
out
sub
jp
sbb
xor
cli
bound
pop
or
incb
cli
jbe
int3
popf
sarl
out
test
mov
jns
or
dec
push
in
rclb
repz
pop
and
inc
enter
cmp
cltd
adc
mov
into
mov
cmp
sub
and
fxch
jge,pt
jg
pop
dec
xor
dec
mov
cmp
in
test
cmp
test
test
pop
sarb
lret
mov
loop
add
fidivrl
jmp
test
andl
mov
test
ds
popf
adc
arpl
arpl
dec
aad
jo
or
fdivrl
pop
mov
popl
les
jns
rolb
and
pop
lock
push
and
cld
insl
lret
test
or
test
dec
std
xor
jge
lret
sub
in
lcall
dec
or
xchg
out
adc
mov
les
xor
or
jne
xchg
fsubrs
push
and
fildl
pop
sub
sub
sbb
pop
adc
fimull
dec
sarl
subb
int3
pop
cmp
ret
sub
mov
pop
and
cwtl
xlat
rcrb
xor
je
mov
ljmp
test
xchg
popa
pop
add
mov
scas
mov
movsb
popa
adc
shl
cmp
jge
lcall
pop
xor
lahf
pop
mov
shlb
int
mov
push
push
and
sub
sub
leave
mov
push
add
sbb
fcomp
in
fldenv
loope
cmp
push
sbb
shll
and
inc
pop
ljmp
cmp
push
jg
xor
and
mov
test
scas
adc
sarb
aaa
int3
stos
iret
inc
mov
mov
or
inc
outsl
mov
pushf
xchg
adcb
push
jg
call
mov
dec
insl
lcall
outsl
and
cmp
gs
test
mov
mov
adc
out
stos
jmp
aaa
pop
inc
or
and
aad
mov
jns
fwait
dec
jmp
or
push
shrb
negb
lret
pop
xchg
lods
inc
mov
js
inc
cwtl
or
sub
sbb
or
loopne
or
arpl
dec
mov
test
pop
mov
es
mov
inc
and
pop
ja
aaa
loope
popf
and
and
inc
orb
cmp
xor
mov
push
mov
mov
out
aam
cmp
sti
xchg
pop
pop
mov
jl
jge
addr16
mov
xchg
and
mov
xchg
sub
scas
pop
pop
insb
popf
ret
insl
clc
jb
stc
cltd
iret
loope
add
mov
push
sbb
or
orl
push
jno
jl
imull
dec
fisttps
fsubrl
rclb
cmpsb
mov
jmp
dec
jbe
mov
sub
xchg
fimull
pushf
adc
push
insl
js
addl
and
sub
jno
mov
sub
xchg
stos
dec
insb
daa
dec
inc
xchg
sub
pop
mov
movsl
and
paddsw
lds
enter
inc
pop
fldenv
cmp
into
mov
scas
hlt
mov
and
rcll
icebp
xor
inc
add
lods
int
cmp
into
jno
mov
mov
fucomp
add
xor
stos
mov
sbb
lea
adc
cmp
inc
dec
je
hlt
aas
push
inc
mov
rcrb
dec
daa
sahf
loopne
cmpsb
push
sbb
iret
pusha
loope
popf
ljmp
push
cmp
xchg
movsb
cmc
cmp
lds
mov
repz
cmp
push
xor
cltd
and
mov
jmp
sahf
dec
pop
pop
call
dec
testl
push
jl
mov
pop
fbstp
mov
leave
mov
push
stos
pop
int3
pop
bound
adc
adc
stos
xlat
insl
dec
into
ret
dec
lods
dec
push
xchg
jp
and
jo
jne
pop
cmp
icebp
jge
jno
dec
sub
imul
idivl
sbb
pop
and
dec
repnz
dec
stos
sub
ljmp
andl
inc
xchg
jp
lcall
js
mov
jmp
cmp
lods
pop
scas
test
clc
test
pushl
roll
sub
arpl
sub
scas
repz
in
iret
add
lret
jno
pop
lahf
fwait
jge
push
out
sub
loopne
push
jecxz
insl
inc
jnp
inc
pop
mov
mov
xchg
mov
loop
les
sbb
insl
ret
dec
mov
mov
and
pop
cmc
mov
mov
add
pop
add
xchg
jmp
shll
out
repz
daa
cltd
movsl
mov
int3
cmovo
and
push
add
xchg
pop
in
adc
push
and
xchg
mov
adc
mov
daa
in
pop
jecxz
sbb
pusha
cmpsb
popf
xchg
push
pop
inc
push
loopne
mov
mov
cmp
insb
add
test
mov
pop
inc
inc
xor
xchg
loope
sti
imulb
jae
pop
scas
push
out
pop
icebp
dec
add
jnp
dec
sbb
stos
xchg
fsub
inc
mov
fsubs
test
jl
sbb
sbb
fsts
ret
pop
in
stos
sub
lret
stos
mov
pop
fsts
adc
or
add
sbb
cmp
jbe
daa
inc
push
push
into
loopne
aas
add
movsl
adc
pop
mov
lea
pushf
scas
ret
cmp
rolb
xchg
sbb
xor
or
and
cli
xchg
nop
out
fisttps
inc
sbb
xchg
jl
fwait
xor
out
adc
sub
test
stos
sahf
sbb
movsl
int
nop
jp
mov
repnz
mov
push
fsubr
loop
inc
mov
scas
mov
into
in
inc
test
or
pop
xchg
xor
push
push
push
mov
inc
cmp
js
es
push
out
cmc
sbb
inc
jl
jb
out
je
rorb
cli
fs
pop
adc
xchg
gs
sub
jg
add
cs
adc
adc
push
push
adc
cwtl
or
fdivr
stos
pusha
xor
xchg
add
or
enter
push
cwtl
shlb
inc
xchg
pop
pextrw
cmp
in
push
icebp
push
mov
aad
ret
dec
arpl
add
loop
or
xor
lcall
mov
repz
pop
inc
cli
fwait
ds
mov
xor
push
jp
sub
inc
int
jne
mov
lods
jb
test
test
xor
into
jge
rcr
push
xchg
call
sahf
adc
sbb
movsb
pop
adc
icebp
fidivs
jne
ret
insl
mul
std
sbb
loop
push
js
pop
cs
jnp
frstor
cmp
xchg
insl
xor
mov
jmp
push
push
mov
mov
or
sbb
xor
ret
rcrl
dec
out
jp
dec
in
dec
dec
incb
mov
sbb
lret
pop
in
jle
or
dec
int
movsl
xlat
mov
pushf
cmp
test
sub
add
ljmp
data16
or
stos
or
scas
adc
xchg
movsl
and
cwtl
in
loop
loopne
push
mov
jmp
pop
jnp
hlt
xchg
lret
mov
ret
mov
insb
pushf
fwait
pop
loop
imul
cmp
mov
jmp
xchg
add
xor
addb
sahf
mov
mov
test
dec
xchg
out
nop
inc
loopne
dec
ss
push
adc
push
daa
pop
addr16
shll
mov
inc
int3
push
fidivrl
inc
mov
mov
icebp
mov
pop
and
gs
jb
xchg
cmpsb
push
jne
lret
aad
nop
movsl
sub
sub
popa
inc
jbe
cs
out
cmp
sti
mov
addr16
fs
lods
nop
roll
cmp
test
cmp
and
scas
test
and
int
ss
cmpsl
mov
mov
pop
aam
jmp
test
mov
enter
hlt
lret
push
ret
adc
cmpb
fs
inc
and
and
push
dec
sbb
inc
mov
and
jae
orps
stc
inc
rol
mov
call
jl
lods
ret
inc
push
int
mov
jno
mull
sbb
cmpsb
fwait
loopne
mov
xor
nop
xor
insb
mov
sbb
out
mov
int3
addr16
or
daa
mov
mov
cmp
sbb
es
dec
stos
mov
jno
jns,pn
cmp
enter
sbb
mov
sbb
mov
dec
ret
mov
xchg
pushl
mov
lahf
or
mov
popa
out
pop
jp
imul
inc
aaa
es
icebp
mov
bound
lret
inc
pop
jbe
push
or
jo
jns
lods
inc
les
movsb
out
cwtl
xchg
dec
test
add
push
push
sbb
push
mov
cmp
cmp
mov
xorb
mov
cmp
xor
jne
xchg
rcr
imul
mov
jle
add
mov
mov
push
sbb
push
decl
xor
jg
or
test
adc
fmull
int
fucomip
clc
mov
sbb
add
add
mov
inc
and
dec
lods
add
add
and
or
sbb
shrl
mov
adc
jnp
cmpsl
aaa
daa
test
ljmp
xor
jg
clc
test
xchg
fidivl
push
daa
push
lods
incb
mov
inc
or
mov
lds
pop
mov
and
adc
nop
mov
inc
and
gs
pop
outsl
xchg
cs
into
adc
jmp
outsb
or
xor
xor
cmpsb
sar
leave
lahf
push
mov
adc
push
jno
cmpsl
jle
les
jl
ret
cmp
mov
cwtl
sbb
or
xchg
je
adc
mov
lds
cmp
lea
arpl
aas
insl
aas
push
xchg
push
lods
jbe
push
xchg
shll
sub
sbb
out
pop
shlb
jecxz
cltd
pop
fsub
xor
scas
or
push
popf
inc
inc
xorb
mov
mov
add
mov
fmull
sub
push
mov
mov
adc
fwait
sbb
pushf
cmp
outsl
lea
push
movsb
cmp
aam
mov
push
lds
pop
mov
jmp
lds
insl
and
cli
je
dec
fld
pop
pop
sbbl
loopne
popa
mov
add
xor
xlat
sbb
mov
or
pop
out
aas
dec
dec
adc
dec
lods
insb
sti
mov
bound
insl
cli
mov
jns
mov
inc
push
cltd
cmp
insb
adc
adc
and
pushf
add
dec
mov
add
dec
data16
rorl
outsl
adc
dec
cmp
rolb
int
jmp
test
test
push
dec
mov
xor
and
xchg
pop
or
jmp
cmp
imull
loopne
jle
outsb
stc
xor
add
pop
sbb
insl
sbb
push
lea
cmp
push
test
or
lahf
add
pop
pop
icebp
je
fwait
in
xchg
stc
adc
outsb
and
stos
addr16
jns
dec
pop
in
jle
mov
lahf
xchg
cmp
test
mov
ret
mov
mov
xchg
popl
shll
dec
mov
mov
shlb
xor
lods
dec
push
pop
mov
pop
push
dec
xchg
imul
fwait
jp
mov
add
cmp
cmp
stc
xor
sbb
rol
xchg
je
test
mov
out
in
test
mov
ret
lds
push
repnz
mov
xor
mov
cmpsl
out
in
frstor
sahf
push
sbb
shlb
fwait
fiaddl
fsubr
pop
rcl
sbb
sub
mov
ljmp
imull
xchg
hlt
and
jmp
imul
out
aas
sbb
mov
mov
xchg
fsubp
cmp
arpl
loopne
lea
mov
mov
mov
call
mov
jg
int
add
dec
sbb
aam
adc
das
call
lea
adc
or
and
lods
rcrb
adc
jge
ficomps
fucompp
shl
test
test
cmpsb
rcrl
clc
jg
jg
movsl
xchg
ja
xorb
dec
fisttpll
mov
sub
enter
pop
lea
or
out
xor
rcrl
lcall
xor
cwtl
adc
xchg
jb
mov
add
ja
in
or
pop
mov
pop
inc
insb
std
mov
pop
loope
out
es
jp
mov
xchg
pop
scas
rolb
mov
cmp
loop
cmpsb
data16
mov
jbe
adc
mov
sbb
stos
sub
fbstp
mov
insl
notl
std
out
xchg
in
mov
and
jl
xchg
or
xchg
inc
out
movsb
push
jb
mov
mov
sti
mov
push
ficoms
inc
leave
or
jle
ljmp
stc
sub
repnz
pop
loop
aas
ret
aaa
insl
enter
lds
or
xchg
dec
sti
es
lahf
dec
pop
sti
or
xor
push
lods
xor
pop
inc
push
xchg
jo
pop
mov
and
sbb
test
xchg
inc
push
xor
sbb
push
xlat
sub
xor
jl
lret
std
cmp
mov
div
test
outsl
outsb
arpl
sbb
insl
divl
and
js
mov
aam
clc
fsubrl
outsl
and
xor
pop
jbe
ficoml
les
or
inc
jmp
aas
inc
mov
popf
xor
testl
popa
pop
in
jl
cmp
sub
cmpsl
sbb
mov
xchg
test
cli
mov
pop
popw
adcl
or
scas
cmp
mov
push
in
data16
pop
pop
into
out
jns
lock
push
jnp
mov
das
or
inc
mov
popf
sahf
mov
jle
pop
pop
lds
lret
arpl
int3
fistpll
sub
stc
std
in
jb
xchg
stos
jge
adc
add
fsubrs
repnz
sub
scas
xchg
rclb
loope
dec
jecxz
xor
push
test
and
nopl
cwtl
push
into
cmpsb
xor
addl
fadd
pop
and
jecxz
enter
xor
out
vpsrlw
lds
mov
dec
fsubrl
das
jle
jne
inc
sub
adc
mov
rolb
mov
jnp
inc
stc
stos
movsb
roll
or
push
xor
mov
or
xor
enter
and
inc
xor
test
inc
or
mov
loope
cmp
lret
jl
stos
or
das
mov
fcomip
sar
push
jo
into
mov
push
loop
jecxz
cwtl
and
jbe
push
pop
mov
push
jmp
push
scas
pop
ret
out
les
and
sub
in
in
rcrb
lock
inc
adc
mov
push
push
stc
jle
cmc
cli
loopne
out
cmp
enter
add
popa
adc
push
iret
push
jle
adc
mov
mov
frstpm(287
subb
daa
call
jo
ja
lods
mov
lea
or
xchg
mov
jns
insb
and
dec
imul
mov
addr16
out
rsm
mov
adc
inc
out
aam
mul
inc
ljmp
sub
aaa
int3
sbb
cmpsl
xorl
inc
jb
sub
sub
insl
lods
insb
icebp
cmp
xor
js
aam
pop
jae
arpl
jbe
add
in
sub
sahf
cltd
push
shrb
sbb
sub
orl
flds
mov
out
sti
mov
sahf
pop
ret
sbb
jge
movsb
in
xchg
mov
mov
dec
add
rorl
cmp
inc
or
dec
and
inc
shrb
cmp
adc
push
mov
xchg
sti
jmp
std
leave
jmp
or
jg
shlb
mov
outsb
mov
xchg
mov
dec
loop
jp
enter
adc
movsl
dec
fistps
push
repz
ror
jmp
out
scas
shrl
sub
adc
test
aam
xor
inc
test
add
jle
pushl
or
mov
repnz
cmpl
testl
int3
mov
inc
sbb
adc
gs
pop
lods
jge
ljmp
inc
and
loope
adc
add
and
adc
mov
xchg
enter
ror
push
push
xchg
mov
lret
pushl
xchg
push
push
fwait
andl
jge
rcrl
out
jnp
out
hlt
dec
xchg
ret
dec
repnz
stc
out
jne
gs
ret
scas
iret
lcall
or
mov
or
or
mov
xor
out
push
sbb
dec
pop
dec
fdivs
out
leave
scas
dec
dec
adc
or
lcall
fwait
addr16
and
inc
sbb
js
ljmp
movsl
mov
fcoms
xchg
popf
std
divl
sbb
ljmp
ljmp
sbb
fwait
leave
daa
inc
shll
cltd
mulb
outsb
mov
aaa
into
je
xchg
in
addr16
xor
ret
jno
cld
imul
sub
add
lock
nop
sub
repz
cmc
sbb
mov
out
movsb
mov
adcl
mov
dec
jg
xor
xor
add
rorl
in
imul
ljmp
sbb
push
rorl
adc
es
mov
or
pusha
cmp
loope
and
jno
gs
sub
push
mov
inc
jns
lods
cmpsb
push
jnp
jmp
int3
jl
pop
dec
into
xor
xor
in
in
dec
call
cmpsb
je
lock
repz
sub
lock
lea
cmp
icebp
xchg
insl
cmp
dec
dec
fbld
loope
cmp
pusha
hlt
stos
test
sub
int
cmp
push
arpl
clc
sbb
stc
adc
pop
lock
mov
roll
adc
mov
mov
adc
jb
mov
out
cwtl
arpl
test
stc
or
loop
dec
inc
sub
sbb
cld
mov
or
and
add
pushf
inc
dec
loopne
ret
inc
inc
and
jne
sahf
and
sub
enter
divl
mov
test
fcmovne
jg
aas
inc
mov
ja
and
aad
shll
or
xchg
jbe
in
loope
clc
jp
or
inc
sub
out
mov
pop
out
insb
cltd
imul
subb
adc
jle
push
mov
leave
jge
or
scas
out
mov
sti
cmp
enter
movsl
mov
xchg
inc
push
popl
loope
hlt
mov
mov
jecxz
cmp
pushf
mov
fwait
std
frstor
mov
mull
jmp
jmp
std
loop
std
in
insl
int
out
int
sbb
push
scas
mov
jle
and
xlat
movsl
xor
cmpsb
neg
and
sub
std
es
mov
push
adc
sbb
push
push
sbb
dec
jno
jne
cmp
push
fidivrs
sub
jne
sbb
popa
cli
enter
mov
cmpsw
add
jmp
pop
scas
add
into
mov
inc
xchg
jo
ret
xor
push
je
sbb
shl
addr16
lcall
outsl
adc
fsubp
test
pop
addr16
dec
mov
or
fcmovbe
fisubs
loope
stos
mov
add
out
mov
cs
movsl
test
mov
cmp
dec
inc
lock
mov
xchg
cmpsb
mov
jp
xor
sbb
shll
fninit
mov
lcall
mov
daa
mov
mov
arpl
mov
pop
push
add
add
and
push
mov
push
cmp
mov
sbb
lock
fnstenv
sub
sbb
insb
mov
fwait
aam
mov
jecxz
mov
push
sub
mov
mov
ss
ss
jnp
aam
mov
iret
idivl
mov
filds
inc
ja
dec
or
imull
jge
xor
xchg
xor
push
xor
sbb
lahf
scas
mov
pop
shll
movsb
sahf
notb
ret
mov
lcall
inc
push
sti
call
adc
rcr
loop
fcmovnu
clc
jecxz
insl
sahf
aad
mov
jmp
aam
and
sbb
push
insb
lahf
sbbl
sub
or
pop
icebp
mov
popa
cs
cmc
shrl
cmp
sbb
mov
mov
imul
sub
mov
xchg
repz
imul
and
stos
push
xlat
xor
and
xor
push
mov
xor
xor
mov
push
js
in
push
pop
popf
sub
add
inc
cmp
push
notl
mov
js
imul
sbb
mov
fs
jmp
pop
stos
cmpsl
jecxz
mov
xchg
sbb
aam
bnd
jle
sub
dec
jae
loop
mov
cmp
pop
push
lods
sub
into
cmpsl
or
pop
je
popa
jb
cmpsl
inc
pop
and
and
ficompl
rorl
sbb
inc
sbb
out
dec
dec
xchg
or
add
scas
or
cld
jmp
into
mov
test
fs
test
push
movsb
mov
jg
inc
ret
arpl
scas
loopne
pop
adc
rcr
push
insl
xor
add
les
add
pop
loopne
inc
xor
and
lds
jo
inc
push
mov
shlb
push
mov
add
sbbl
ret
ljmp
jo
jecxz
stc
push
mov
add
adc
data16
lods
fcoml
int
stos
mov
cmp
pop
dec
mov
cwtl
sbb
insb
gs
aam
gs
mov
fcmovnb
jl
outsb
add
jb
mov
cwtl
mov
pusha
shlb
xchg
fsts
inc
ret
lret
loop
pop
cmp
mov
out
movsl
incb
lahf
sub
out
pop
and
in
orb
roll
cs
pusha
lds
jae
arpl
ret
mov
fsubrs
leave
sbb
cmp
outsb
out
xchg
dec
xor
jge
sbb
dec
lods
mov
arpl
push
dec
xchg
jae
mov
mov
aas
rclb
mul
stos
js
jge
stos
xor
mov
sti
jmp
push
push
mov
add
adc
adc
into
mov
shlb
loope
test
jne
xchg
sarb
mov
jp
std
fidivl
fnstenv
add
imul
test
jmp
rolb
cmp
sub
movsb
stc
into
cmp
pop
out
pop
fmuls
adc
mov
pushf
popf
test
cmpsb
or
mov
ljmp
faddl
stc
inc
lods
outsl
sbbb
test
adc
sbb
xchg
xchg
repnz
xchg
pop
push
ret
std
daa
sub
mov
ret
push
aad
cmp
jle
lret
adc
loope
std
push
push
jb
cmp
outsl
pop
test
imulb
aaa
push
xchg
adc
dec
jns
loope
cld
cmpsb
imul
fimull
das
and
dec
xor
push
ljmp
dec
xlat
and
xchg
out
mov
sub
sbb
push
mov
adc
adc
mov
push
sbb
push
push
push
jl
push
and
scas
xchg
push
aas
jne
dec
ja
fstpt
or
daa
mov
fsubr
sbb
mov
leave
fstpl
ret
xchg
ja
pop
sub
movl
stos
xor
lahf
aaa
mov
sbb
adc
and
jle
imul
jb
scas
pop
pop
cmp
push
and
xor
inc
pop
outsb
xlat
std
sti
pop
ljmp
jne
push
pop
push
inc
mov
inc
scas
test
mov
add
push
loopne
jbe
mov
movsl
out
push
xchg
ljmp
out
ljmp
neg
sbb
mov
cwtl
mov
jmp
cmp
mov
and
in
cmp
mov
inc
mov
fs
lret
or
push
xchg
sbb
xor
inc
clc
jge
je
or
push
dec
sahf
insl
cli
in
mov
sbb
pop
xlat
test
cmp
or
jae
jecxz
xchg
flds
test
mov
push
in
or
mov
mov
jb
subb
dec
jge
pop
lea
cmp
xchg
cmpsb
daa
mov
call
in
mov
inc
aam
movsl
lock
test
xchg
and
lea
jp
arpl
pop
xchg
clc
enter
sbb
cmp
pop
cmp
roll
call
dec
adc
or
loope
daa
mov
xor
lods
fidivrl
ss
push
rcl
mov
mov
xchg
cld
shlb
into
rolb
insb
subl
sarl
pop
push
sub
fucom
repz
jecxz
add
andb
stc
push
fmuls
mov
sub
sub
mov
cs
cs
xor
stc
insb
add
insl
into
adc
lret
std
sbb
jne
cs
ljmp
stos
leave
pushf
scas
stc
pop
test
subl
jle
sbb
out
in
jmp
out
std
pop
push
repz
mov
dec
xor
sub
jle
stos
sbb
fs
les
das
mov
enter
xchg
lret
fbld
shrb
and
in
imul
enter
inc
jg
daa
push
test
add
mov
or
xchg
sti
fiaddl
mov
subl
movups
mov
rol
std
clc
add
test
jg
mov
jns
mov
pop
cmp
jl
or
or
or
das
ror
clc
mul
sub
loope
and
stos
inc
shrl
enter
in
sbb
xchg
fcomps
or
sbb
mov
popa
cwtl
jne
mov
cmp
lock
sub
lods
imul
cmp
cmpsb
mov
cmp
mov
jmp
pop
push
aam
sub
mov
dec
les
jmp
add
xor
aad
add
xchg
out
mov
ret
add
xchg
add
push
mov
or
enter
ljmp
test
dec
fisubs
xchg
and
cmp
xor
jbe
shll
jmp
push
mov
adc
dec
mov
les
jnp
xor
cmp
cmp
fisubl
xorl
shll
scas
or
lock
add
pushf
push
shll
mov
icebp
ja
cmp
adc
shrb
pop
orb
dec
inc
testl
adc
aad
stos
or
sub
sbb
popf
xor
pop
mov
sbb
out
insl
pop
fimuls
sub
fs
scas
mov
inc
je
outsb
int3
mov
or
sub
loope
push
or
pop
cld
or
cmpsl
jo
jecxz
into
pushf
out
inc
adc
sub
pop
or
cltd
mov
lahf
js
xor
cmp
or
pusha
push
sbb
dec
jae
sub
rorb
cwtl
pop
cld
testb
xchg
repnz
loopne
and
mov
stc
clc
fdiv
mov
test
push
jo
jp
repz
jmp
xorb
mov
scas
xchg
shr
cmp
lahf
imul
decb
inc
shll
pop
insl
test
outsl
xchg
jl
daa
gs
ds
shll
pop
mov
cs
lahf
fsubrp
xor
jmp
cmp
mov
aad
lock
stos
ja
jl
xchg
loop
dec
stos
jb
inc
push
jbe
andb
out
jecxz
add
pop
or
dec
and
sbb
gs
shlb
movsl
mov
out
or
jne
cmp
mov
fisubs
in
add
push
sbb
mov
pop
js
movsl
jle
clc
roll
ljmp
mov
xchg
mov
cmp
inc
jecxz
xchg
mov
aaa
iret
adcl
shlb
orb
nop
shl
pop
jge
cmp
fwait
push
dec
adc
pop
and
insb
out
addr16
push
pop
inc
fcmovnu
mov
nop
mulb
popf
jl
sbb
push
xbegin
inc
mov
daa
test
in
dec
call
mov
mov
ret
adc
lods
js
lock
mov
adc
mov
mov
addl
jmp
cmpb
dec
daa
push
insl
cli
sbb
dec
dec
call
cmp
aaa
and
and
lods
loopne
pop
arpl
pop
inc
in
adc
mov
rorl
shll
incl
jno
neg
mov
push
sahf
sub
adc
inc
notb
aaa
cmpsl
pop
addl
notl
dec
outsb
add
popf
imul
xchg
ror
in
sahf
rclb
sbb
popf
sarl
mov
sub
pop
lods
sbb
and
leave
pop
fiaddl
mov
ficomps
pop
sub
mov
test
cwtl
cmp
repz
xor
stos
ret
pop
or
push
inc
sbb
js
insl
shll
xchg
lods
inc
and
in
shll
xchg
stos
aam
jne
lcall
je
loope
xorb
test
stos
fwait
xchg
pop
outsb
push
rclb
ret
jmp
adc
ja
adc
fildl
scas
or
adcl
mov
add
or
popa
test
icebp
test
scas
or
loop
cmc
les
mov
out
andl
jns
sub
imul
sbb
dec
mov
mov
adc
mov
cmp
cwtl
jecxz
push
sbb
cld
adc
mov
add
push
outsl
stos
cmc
add
pop
pop
and
incb
dec
int3
daa
shr
jnp
jne
gs
cmpsb
ret
test
and
jp
dec
out
or
insb
les
mov
test
call
stos
xchg
fld
aam
sub
sti
movsb
std
cltd
add
hlt
dec
jo
mov
dec
js
pop
sarb
pop
lea
fwait
pop
push
pop
cmc
adc
cmp
test
aam
push
rcrb
test
fistl
xorb
imul
xor
add
adc
cmp
outsb
mov
ja
jno
xorb
push
jb
pushf
inc
add
mov
sbb
mov
pusha
mov
pop
add
xchg
orb
inc
add
cmp
lcall
pop
pop
stc
bound
sub
push
movzwl
test
jo
xchg
xor
xchg
xchg
jl
dec
and
rolb
xorb
cli
dec
xor
inc
lock
sub
in
pop
push
push
sub
inc
out
lock
lods
pop
or
scas
mov
mov
cmp
lock
pushf
fisubl
and
ret
popa
cmp
arpl
xor
xor
popf
cmp
mov
inc
out
xor
fs
mov
push
mov
xor
cs
gs
mov
add
cltd
out
push
into
imul
jg
xchg
dec
fadd
cmpsl
es
mov
jb
arpl
dec
push
xor
cmp
adc
shl
or
out
mov
pop
lods
or
pop
sbb
loop
pushf
inc
sbb
jge
xchg
loopne
sub
jns
outsb
xchg
xchg
xchg
lret
inc
iret
in
xlat
adc
je
xchg
dec
inc
dec
pop
mov
pop
test
bound
insb
add
imul
shlb
sub
push
mov
add
cmp
or
loop
mov
cmp
out
jo
adc
fistps
nop
xchg
push
push
loop
and
ror
dec
sub
push
cmp
sbb
jno
cmp
js
jns
lods
mov
stos
sbb
ja
repnz
insb
insb
inc
mov
outsl
mov
sbb
ljmp
adc
fcmovnb
push
push
inc
fisubs
rclb
aaa
lret
mov
cmp
imul
adc
xchg
imul
lret
aad
xor
sbb
push
fistl
and
mov
scas
xchg
insl
call
pop
imul
pop
push
ds
andl
mov
call
mov
cmp
add
jb
insl
sub
inc
xchg
or
adc
pop
das
bt
mov
sbb
push
fstp
inc
sbb
jg
jge
mov
and
inc
repnz
dec
cmc
stos
dec
xchg
jge
xchg
ss
jne
sbb
movsl
clc
jns
fs
and
mov
push
insl
cli
fwait
mov
cwtl
js
negl
out
xor
lods
mov
iret
inc
imul
or
aam
jbe
inc
or
jmp
mov
ret
mov
push
push
fmul
sbb
rcr
add
inc
outsb
dec
dec
mov
adc
cmpsb
jae
inc
sti
loopne
inc
sti
mov
insl
push
fisubs
in
adc
jns
inc
add
int
addb
cmp
ja
xchg
imull
sub
pop
into
cwtl
and
icebp
lock
cmp
jb
aam
pusha
jbe
stos
or
or
jo
jnp
push
aaa
cmp
ljmp
lea
sub
jns
jg
add
movsb
and
movsb
or
pusha
pop
es
std
repnz
mov
jle
mov
xchg
push
movsb
push
push
bound
int
shr
jecxz
out
xchg
ljmp
mov
in
outsl
push
das
push
ss
cmpl
shlb
push
iret
mov
cmpsl
pop
and
setbe
push
imul
pop
push
mov
nop
mov
push
lods
bound
shll
and
pop
pop
jmp
xor
jno
mov
push
lods
dec
mov
mov
sub
pop
subl
cwtl
pusha
pushf
push
movsl
sub
mov
rcl
xor
fwait
xchg
adc
daa
aad
scas
scas
lret
mov
mov
std
inc
cli
dec
int3
lods
push
cli
mov
adc
jge
sub
mov
lds
dec
mov
mov
and
xor
and
xorl
shrl
clc
jle
shl
cmpsl
std
shld
xor
xchg
in
and
sub
jge
jl
je
subb
inc
inc
je
xor
fstl
sbb
arpl
mov
mov
imul
and
push
or
sbb
mov
sub
xor
xchg
fsub
cmp
mov
sbb
data16
xor
jno
xor
nop
sarb
out
jo
mov
pop
adc
mov
in
cmc
cmc
jnp
push
inc
scas
mul
xor
in
push
aas
pop
push
cltd
les
nop
mov
mov
dec
aas
popf
mov
push
or
adc
test
ljmp
fiadds
inc
movsl
inc
mov
mov
sbb
call
lds
cltd
jecxz
dec
cmc
push
fistpl
push
cmp
mov
jmp
push
cmp
adc
rcl
xchg
movsb
cmpsb
lds
jne
lock
mov
test
pushf
cmp
clc
add
push
pop
repnz
inc
push
sub
out
into
out
mov
pop
stc
mov
cmp
scas
sbb
into
jno
add
orb
lds
mov
jmp
fsubrl
aam
aaa
add
lds
mov
mov
xchg
data16
xchg
inc
nop
mov
jno
bound
outsb
cld
fwait
pop
pop
xchg
das
mov
and
jp
jae
insb
lock
lea
lods
pop
jp
je
cmp
pushf
adc
add
pop
lret
push
mov
adc
dec
stc
leave
and
and
sahf
in
in
movsl
push
ret
dec
pop
ret
and
push
iret
cltd
ret
add
data16
sub
jg
insb
iret
lods
ret
scas
pop
stos
xchg
je
adc
out
sbb
adc
jno
cmp
cmp
fdivs
int3
into
jmp
std
into
int
les
je
das
sbb
repz
sbb
fdivrs
pop
mov
xor
lret
cmpsl
int
or
mov
push
push
mov
adc
inc
inc
fiaddl
xor
dec
sbb
inc
xchg
je
aaa
aaa
cmp
jnp
mov
push
cmp
pop
outsb
pop
jo
addl
fwait
and
fadds
jne
sub
jecxz
call
fs
lods
adc
inc
or
pop
ss
inc
mov
adc
add
dec
xor
cli
or
push
sarb
rcrl
pop
es
pop
lock
xchg
or
mov
movsl
je
push
lahf
cmp
jmp
mov
int3
mov
cmc
adc
xchg
push
push
sub
push
shlb
popa
mov
imul
fldl
pop
mov
int3
mov
shlb
or
or
push
lods
icebp
popa
push
jo
push
clc
ret
fwait
jmp
imul
mov
flds
mov
jecxz
repz
mov
inc
mov
or
ljmp
icebp
jne
xchg
or
lea
int
int
arpl
sarl
lahf
xchg
repz
shlb
xor
sbb
scas
lcall
adc
adc
adc
jnp
in
sub
push
scas
cmp
push
and
pop
aad
sbb
mov
inc
imul
add
lcall
pop
sahf
addr16
jnp
jle
js
and
xchg
pop
loopne
lahf
movsl
dec
cmpsl
add
pop
jo
dec
sub
scas
lret
cmp
pop
fldcw
mov
inc
pusha
adc
and
jge
lahf
sub
xchg
movl
pop
sbbl
xchg
and
aaa
clc
cmpsb
sbbb
xlat
adc
pushf
aaa
mov
mov
fsts
add
xlat
fmul
add
sahf
scas
fwait
xchg
sub
jmp
add
scas
or
lds
jecxz
call
sub
insl
or
inc
cmp
inc
dec
std
lds
fld
mov
sbb
outsb
xchg
scas
xor
inc
mov
xchg
ds
fisttpl
cltd
sub
inc
addr16
sub
mov
pop
xchg
xchg
jnp
mov
push
mov
pop
jne
es
xchg
sub
jg
idivb
dec
ds
sar
call
pop
stos
push
push
dec
idivb
jecxz
and
test
dec
sub
push
xor
sbb
in
jbe
iret
mov
jl
enter
sbb
mov
push
xlat
aad
cld
mov
sbb
mov
pop
mov
sub
mov
fdivrl
mov
mov
dec
push
notb
dec
jne
jle
adc
out
dec
or
popf
aam
jle
push
dec
pushf
xchg
outsl
dec
hlt
mov
add
and
mov
cwtl
push
xor
jns
jl
repz
ja
and
pop
jmp
mov
enter
mov
lea
mov
mov
insl
mov
repnz
cmp
arpl
movsl
pop
jns
stos
adc
mov
inc
sbb
je
mov
icebp
or
ret
add
add
out
add
mov
nop
aas
clc
cmp
push
enter
stc
cmpsl
add
mov
orb
or
xchg
lahf
stc
pop
fwait
dec
jp
mov
ljmp
sbbl
sbb
int
xchg
iret
or
xchg
mov
popf
or
sub
sbb
into
push
and
inc
int3
pop
mov
stos
mov
push
cmp
imul
jecxz
divb
mov
xchg
jnp
ficoms
cwtl
or
imul
call
bound
pop
loop
sbb
aad
je
xchg
outsl
rcll
cld
jmp
into
inc
test
inc
mov
int
xchg
sub
push
aad
or
lret
aam
sbb
inc
aaa
add
sbb
test
movsl
dec
les
idivl
sub
mov
cmp
inc
in
sbb
jge
and
push
xor
adc
push
cltd
hlt
mov
imull
dec
nop
loopne
ret
xchg
out
pop
cmpsb
rcrl
and
mov
lods
pusha
addr16
sub
dec
cmp
in
fnstsw
xchg
ret
cmp
mov
fsin
or
loop
push
loope
aad
fdivrs
in
rclb
cmp
stos
push
mov
out
mov
clc
inc
inc
xchg
dec
aaa
out
or
stos
or
pop
cmpsl
or
sbb
jnp
sti
mov
pusha
jge
add
and
xchg
cld
lahf
pop
std
or
jns
mov
jns
sub
test
adc
adc
adc
or
mov
mov
mov
sarb
xchg
test
and
mov
xor
cs
clc
sbb
mov
jne
nop
das
cmp
ret
insb
stos
fs
test
add
out
mov
ficoms
mov
sub
lock
in
jmp
les
out
jle
push
dec
call
adc
out
pop
lahf
sbb
mov
sub
xorb
or
push
out
notb
js
sub
fisubrs
loopne
cmpsl
lahf
lock
ja
mov
jbe
sub
outsb
movsb
sbb
inc
add
stc
sbb
cld
mov
sbb
out
movsl
ret
jp
testb
insl
out
xor
cmp
cltd
test
repz
int3
jb
sahf
inc
clc
stos
addr16
xchg
or
fidivs
push
pop
stc
inc
sub
arpl
in
sub
jge
push
dec
or
xchg
lock
fistpll
jp
push
mov
mov
inc
mov
lret
mov
sbb
mulb
push
les
call
fists
inc
push
pusha
xchg
jns
insb
pop
push
leave
out
stc
mov
arpl
jl
imul
mov
fildl
mov
xchg
push
pop
fwait
xor
sub
xchg
pusha
dec
aad
add
fwait
into
out
js
mov
cmp
cmpsl
pop
std
das
or
mov
and
pop
cwtl
inc
or
in
pslld
and
inc
mov
sahf
scas
orb
pop
fwait
push
xor
popl
mov
aad
inc
jl
dec
cmpsl
insl
dec
fistl
repz
loopne
ss
clc
pop
sbb
sbb
mov
cmp
cmp
xchg
jge
dec
xchg
fdiv
int
decl
mov
inc
push
popf
xchg
rcrl
mov
or
sub
stos
test
pop
popa
ja
je
cltd
sbb
lret
xor
push
das
loope
pushf
shl
js
lods
popa
outsl
mov
fsubrl
push
btc
and
ds
insb
fwait
adc
enter
incb
and
sbb
pusha
insb
push
hlt
xchg
es
add
and
jb
jg
movsl
daa
xor
mov
fcmovbe
adc
jmp
xchg
jns
push
mov
popf
dec
push
mov
sbb
fadd
push
push
leave
and
inc
fidivs
push
ret
rcrl
test
mov
push
test
int
push
sbb
xchg
pushf
push
mov
in
jecxz
adc
jnp
insl
jno
mov
js
leave
dec
outsl
push
stc
pop
movsl
pop
movsl
lret
xlat
aam
jns
sbb
cli
lds
loop
pop
jae
loope
clc
cli
jle
or
ja
cmp
push
mov
pop
loop
lock
jbe
jo
pop
gs
psubd
or
pusha
outsb
into
outsb
push
ljmp
lock
or
pop
sti
pop
xchg
sub
adc
enter
rcrb
adc
int
mov
inc
icebp
mov
cmp
adc
push
push
out
imul
xor
cwtl
daa
into
cmp
adc
pop
pop
dec
or
mov
cmpsb
add
and
ljmp
repnz
mov
hlt
inc
call
mov
subb
pop
in
loop
adcb
add
test
push
jbe
decl
aaa
cmp
hlt
mov
push
mov
ss
ficomps
dec
sarl
aaa
jno
sahf
inc
es
sbb
mov
inc
xlat
aaa
cmp
cli
and
lods
aas
cld
rcrl
gs
jnp
inc
sub
ds
clc
adc
sbb
inc
daa
cmpsl
add
dec
xor
xor
outsb
mov
mov
mov
mov
fdivrl
out
jnp
les
mov
add
out
mov
jno
shll
imul
fldcw
sub
jno
aaa
mov
mov
xchg
rol
rcr
int3
mov
icebp
push
cmp
cli
xchg
xchg
lret
sbb
mov
hlt
int3
push
mov
cmpsl
add
sbb
sub
inc
ret
xor
inc
inc
sub
push
and
mov
repnz
cmpsb
cltd
sahf
jo
cmp
mov
xor
rcrl
lcall
in
pop
cld
cmp
rcll
lret
pop
pop
pop
cmp
or
cli
mov
adc
sub
push
and
test
push
and
xchg
mov
movsl
mov
icebp
pushf
inc
mov
xor
loope
jae
hlt
inc
ror
cmp
lret
push
xchg
cmc
loop
pusha
cwtl
out
daa
les
out
daa
push
insl
xchg
je
repnz
ljmp
cmp
test
scas
and
add
out
das
ljmp
pusha
pop
sbb
ret
fisubrs
add
icebp
fildll
xchg
sbb
xor
shl
das
xchg
loopne
aad
pop
lods
xchg
jl
pop
xchg
or
and
gs
sub
fisttps
jge
std
push
mov
addl
pop
imul
fidivrs
cld
jmp
sbbb
aad
mov
mov
dec
push
push
popf
fisttpll
orb
push
idiv
in
aad
scas
adc
cmp
fisubrs
js
or
push
out
and
clc
leave
dec
sahf
push
pop
test
inc
imul
push
aad
mov
test
mov
fdiv
in
loopne
jl
pushf
cmp
sub
pop
inc
cmc
pop
add
jbe
xchg
into
mov
loopne
test
pop
insb
adc
adc
adc
and
cli
add
mov
ljmp
cltd
dec
test
push
ljmp
jo
inc
pop
lea
inc
xor
mov
push
test
and
repz
repnz
mov
nop
dec
mov
fstps
cmp
mov
mov
int
add
jbe
mov
mull
icebp
lds
xchg
sbb
mov
pop
jl
cld
push
xor
fwait
loop
int3
out
in
fwait
cmp
scas
sub
mov
fsubr
pop
pushf
scas
dec
add
arpl
mov
sbb
sbb
pop
aam
scas
mov
ret
testl
xchg
scas
dec
out
repz
xor
mov
cld
cltd
pop
loopne
into
xor
arpl
jb
or
stc
mov
sub
aam
xor
inc
inc
mov
aas
xchg
cmp
pop
lods
jne
or
mov
test
addr16
arpl
test
das
test
sti
fimuls
inc
jnp
xlat
xlat
add
dec
xchg
test
sub
mov
push
jne
iret
mov
mov
cmp
popf
les
pop
mov
xchg
sbb
adc
push
or
mov
stc
pushf
xchg
cmp
mov
popf
push
pop
dec
jecxz
jecxz
imul
jo
dec
add
xchg
push
fstp
rcrl
leave
lret
and
add
push
cmpl
inc
dec
shr
loop
ret
std
jb
add
lods
sbb
std
outsl
mov
pushl
enter
or
mov
popa
dec
xor
push
popf
test
inc
stos
sbb
xchg
inc
ds
sbb
pop
fsubrl
dec
or
xor
pop
cmp
mov
add
pop
add
jae
imul
aaa
repz
push
or
push
fadd
or
xchg
push
data16
ret
dec
aaa
adc
adc
icebp
mov
wrmsr
jb
adc
insl
mov
adc
mov
fimuls
icebp
xchg
stc
cmc
pushf
jno
push
xlat
dec
xor
mov
jmp
sbb
push
xor
push
loop
rcll
sahf
mov
pop
mov
jno
push
push
pop
and
xchg
stc
enter
mov
push
xor
push
sti
xor
mov
pop
into
pop
pop
mov
fdivrp
shlb
dec
push
pop
mov
lret
mov
pop
xor
mov
into
popa
cmovne
loop
in
stos
scas
insl
push
fidivrl
push
mov
pop
stos
inc
fwait
push
lret
pop
jbe
sahf
add
lods
enter
push
inc
repz
jmp
jne
lret
mov
xor
nop
mov
dec
pushf
inc
repnz
lods
ret
ficomps
sbb
nop
push
dec
jmp
out
push
out
mov
sub
mov
push
pop
popa
pop
add
push
push
loopne
and
rorb
sbb
adc
lret
adc
fs
xchg
cli
jmp
faddl
push
repnz
mov
test
dec
sbb
xchg
mov
lret
in
adc
xor
lea
jne
xchg
int
insb
push
add
pop
inc
pop
xchg
mov
jbe
sub
or
test
pop
mov
leave
ds
xchg
lret
or
loopne
addr16
lret
xchg
add
mov
dec
loope
sbb
ficompl
dec
or
loopne
adc
popa
sub
mov
inc
mov
cmp
mov
pop
ret
pushf
mov
or
mov
push
and
lea
xchg
cld
mov
jl
test
dec
xchg
jg
pushf
mov
mov
mov
cmp
push
inc
idivl
test
popa
cltd
or
sti
iret
jo
ret
movsb
lret
lret
int3
mov
or
loopw
in
pop
test
aad
jmp
xor
lret
jmp
das
das
test
pop
pop
jb
push
add
jecxz
clc
aas
adc
fstl
sbb
stos
and
int3
inc
ljmp
cmp
mov
in
dec
mov
repz
adc
cmpsb
test
mov
sub
pop
adc
lret
cld
arpl
mov
push
lcall
inc
inc
rcrb
mov
shlb
push
dec
cmp
jge
gs
pop
hlt
push
or
pop
pop
insl
push
fsts
jl
jns
js
lods
add
mov
or
adc
mov
ret
sbb
sub
inc
xchg
add
cmpsl
pop
gs
insl
jno
sahf
sub
cmp
insb
jbe
sub
jno
mov
incl
shll
xor
fucomip
push
in
push
dec
lea
in
dec
test
movsl
test
push
push
pop
lahf
pop
dec
mov
outsl
addb
movsl
fbstp
fs
mov
aam
sbb
or
mov
pop
shrb
test
sbb
shl
inc
and
int
scas
inc
int3
sub
rorl
pop
loope
sahf
std
aad
mulb
shll
inc
cwtl
sub
inc
jae
andb
fcomp
leave
jl
jb
cs
sub
sbb
sbb
stc
add
fcompl
push
loop
mov
sbb
adc
jae
adc
out
fnstsw
add
jns
fildl
mov
and
jo
cmc
dec
dec
push
and
shll
adc
test
push
or
jg
sub
xor
out
loopne
arpl
fnsave
in
outsb
adc
push
cmpb
ret
out
icebp
icebp
xor
xorl
inc
jne
test
sahf
mov
sbb
dec
lcall
or
rol
fs
jo
sub
mov
dec
add
test
and
testl
pop
out
add
test
push
dec
pop
pop
mov
xchg
stc
or
mov
xor
pop
pop
mov
pop
mov
xor
jp
fdivrl
jge
dec
mov
dec
js
push
ljmp
idiv
gs
adc
mov
push
xorl
addr16
push
add
fwait
les
mov
adc
bound
lods
mov
addl
addr16
les
push
push
imul
fmul
fs
adc
mov
ftst
or
adc
push
mov
inc
or
mov
das
mov
xor
ja
pushf
or
jae
iret
das
imul
stc
inc
and
inc
add
jg
xchg
add
inc
rol
test
test
ljmp
arpl
ss
loopne
pop
outsl
outsl
mov
lcall
pop
repz
mov
sbb
enter
and
out
notb
xchg
push
lcall
sbb
sbb
add
mov
rolb
movsl
addr16
or
push
loopne
decl
bound
fwait
dec
ret
dec
add
cmp
adc
inc
test
in
popf
pushf
aas
rorl
xchg
iret
pop
mov
and
je
push
push
popf
sarb
add
out
scas
popa
cmpb
popa
mov
dec
inc
int3
mov
cmp
rcrb
sub
mov
adc
data16
aaa
xlat
sub
insl
push
push
mov
out
sbb
es
and
fisubrl
movsl
in
fcom
cmp
cmc
xchg
mov
fwait
popa
fisttps
pop
pushf
or
cwtl
clc
fiaddl
pop
sbbl
enter
ds
mov
idivb
and
jo
xchg
inc
bound
jmp
lret
dec
aad
and
sar
dec
cmp
clc
and
inc
xchg
fs
jle
in
cmp
es
mov
mov
movsb
aas
lcall
mov
mov
mov
icebp
daa
lea
add
cwtl
arpl
andl
pop
test
jae
add
xor
imul
rcrb
aaa
pop
ds
loope
fdivrs
mov
jb
repz
sub
clc
pushf
mov
mov
icebp
into
mov
cmpsb
cmp
or
mov
mov
push
movsb
mov
pop
pop
rorb
xorl
insb
nop
outsl
push
push
cmp
leave
lock
push
mov
loop
aaa
iret
ja
push
jnp
mov
xor
jmp
xchg
notl
movsl
lcall
jmp
loope
mov
inc
popa
inc
loopne
or
or
mov
mov
xor
test
addr16
mov
cmp
or
sub
pop
loop
or
push
xchg
ja
dec
sbbl
leave
pop
ss
pop
inc
sub
outsl
test
mov
mov
iret
inc
out
stos
mov
push
ljmp
cmp
push
hlt
pop
loopne
xor
rolb
sarl
xchg
fwait
adc
xchg
test
rcrl
ss
push
lods
adcb
inc
xor
mov
pop
inc
inc
in
test
add
xchg
mov
xchg
cmpsl
in
mov
jl
pop
xor
xorb
std
and
mov
movsb
addr16
push
je
or
sti
fsubs
mov
jmp
jge
jo
cmp
mov
inc
pop
jne
add
testl
push
mov
pop
sub
stc
xor
push
pop
das
sub
inc
out
mov
lahf
iret
mov
xor
aad
add
inc
or
in
fsubs
pop
icebp
inc
xchg
je
rdtsc
cmp
lcall
scas
in
nop
cltd
or
or
xlat
mov
aas
pushf
sbb
ja
adc
cmpsl
sar
cmp
clc
sbb
mov
cmp
inc
stc
inc
fcmovb
or
pop
call
sbb
addr16
mov
cmp
hlt
dec
and
xor
in
popa
bswap
pop
aaa
call
imul
xchg
mov
or
hlt
inc
scas
lcall
shlb
pop
or
aas
ds
scas
jge
xor
pop
test
fnstenv
sbb
mov
mov
add
mov
scas
inc
ret
pop
int
data16
xor
in
xorl
jl
inc
loope
mov
xlat
arpl
enter
pop
inc
repz
stos
popf
movsb
xlat
push
pop
lret
jno
stos
cmp
sti
lahf
pushf
xchg
out
add
push
sub
pop
bound
jbe
mov
xor
xor
fnstcw
arpl
xchg
xor
rorl
sbb
lock
cmc
movsb
cmpsl
dec
fstps
mov
push
jns
mov
adc
push
mov
popl
mov
pop
out
mov
dec
dec
dec
inc
or
and
jo
filds
sahf
jno
iret
dec
psubd
rcr
lahf
in
and
add
fsub
pop
addl
frstor
lcall
inc
jns
mov
push
stos
daa
adc
cmp
pop
push
call
mov
pop
mov
enter
mov
or
imul
cmp
leave
jne
out
mov
push
lds
loope
icebp
sub
call
jecxz
sti
inc
scas
or
push
ljmp
punpckhwd
ljmp
add
out
in
adc
jecxz
cwtl
add
fwait
adc
sarb
dec
mov
mov
xchg
jb
sahf
pop
arpl
icebp
xor
in
sub
rorl
add
add
repnz
jne
inc
repz
inc
add
in
pop
pop
or
adc
out
jle
das
xchg
pushf
inc
xor
repnz
dec
mull
inc
mov
adc
sbb
es
imul
cmp
in
rcll
push
sub
outsb
xor
mov
stos
pop
fnstenv
lds
add
ljmp
pop
rorl
stos
mov
cld
pop
push
js
clc
into
adc
daa
cld
jg
icebp
sbb
mov
push
dec
adc
inc
adc
into
and
cmpsb
fcomi
dec
iret
les
mov
pusha
jbe
nop
cmp
ljmp
imul
jmp
sub
insb
sarl
insb
scas
into
mov
imul
shll
cmc
subb
mov
cmpsl
iret
shll
rorl
pop
call
pushf
xor
enter
call
cmp
mov
lcall
inc
aam
pushf
cmp
lahf
or
lock
add
mov
sub
push
int3
or
inc
pop
push
shl
inc
sub
outsl
sub
jle
xchg
inc
cltd
mov
mov
sub
lret
pop
pop
mov
sub
call
mov
mov
repz
ljmp
mov
mov
cmc
add
push
pop
in
dec
outsb
loopne
bound
cltd
sub
mov
add
cltd
cwtl
add
jnp
shll
in
loope
or
rcrl
sub
sub
subb
mov
xchg
push
clc
sub
add
or
or
jmp
add
jecxz
repnz
push
iret
adc
shrb
enter
mov
push
lds
pop
das
lods
pop
stos
xor
leave
adcl
data16
jl
ret
jb
call
push
xor
adc
pop
cwtl
sub
jle
sbb
in
mov
lock
daa
mov
hlt
pop
dec
test
mov
pop
cmp
jbe
or
or
pop
int
cli
mov
fs
lods
push
xchg
xchg
cwtl
adc
in
ficoms
push
clc
pop
jbe
push
jno
mov
inc
dec
push
fwait
repz
jl
daa
mov
xchg
xchg
sahf
xchg
jno
mov
add
testb
push
repz
pop
in
push
pop
mov
sub
cmp
jbe
subb
sbb
mov
scas
pushf
add
xchg
sbb
mov
into
mov
test
mov
pop
push
rclb
sahf
mov
sub
jmp
mov
dec
ja
dec
lock
clc
or
xor
sub
dec
pop
stos
lret
xchg
lcall
test
adc
shl
jo
pop
ja
or
inc
push
xor
or
mov
pop
pop
notb
jbe
mov
mov
and
les
jl
int
inc
repnz
std
in
xchg
xchg
insb
adc
dec
xlat
jle
pop
or
sbb
adc
and
shlb
add
adcb
push
fbstp
add
aaa
fcompl
ljmp
dec
adc
and
pusha
jg
lret
cld
out
adc
lods
mov
int3
out
inc
xchg
jns
js
lea
aas
jne
pop
adc
and
pushf
cwtl
adc
std
cwtl
sahf
add
hlt
sbb
pushf
test
xchg
mov
loopne
push
ja
push
lret
xor
xor
addr16
mov
xor
je
sbb
cmpl
mov
jecxz
pop
push
push
js
mov
lret
rcrl
mov
xor
jae
ds
lods
push
push
pop
mov
cltd
stos
stc
imul
shl
dec
in
sub
push
add
aam
int3
jb
imul
xor
popl
mov
in
inc
add
into
imul
pop
sub
outsb
xchg
pusha
mov
sub
mov
shrb
popa
popf
cmp
dec
push
sub
push
xor
aaa
jnp
and
cmpsl
out
sahf
or
xchg
or
les
add
lods
xor
mov
xorl
xchg
icebp
gs
add
xor
jl
ljmp
jmp
sub
arpl
xchg
andb
mov
push
xchg
or
scas
mov
jl
adc
jmp
inc
and
dec
mov
lock
adc
inc
pop
lahf
mov
test
arpl
pop
lods
lret
cmp
insl
cmp
add
es
sbb
cmpb
sbb
lock
adc
xchg
inc
push
xchg
cmp
mov
in
xor
pop
adc
test
clc
pop
mov
leave
aas
lods
out
pop
add
shrl
jb
pop
aam
dec
aas
test
pop
adc
cmp
push
mov
cmc
push
fwait
out
cltd
push
ljmp
fnstsw
jnp
fsubl
sub
add
jge
xor
push
cmp
popa
cli
pop
push
mov
jl
cmc
sbb
push
jno
or
cmp
pop
test
mov
fsubr
cmp
mov
sbb
pop
sbb
and
sbb
xor
dec
mull
cli
dec
in
add
loope
mov
hlt
mov
push
ret
std
stos
negb
sub
or
pop
fldcw
or
mov
arpl
or
outsl
xor
pop
push
adc
pushf
xchg
and
int3
mov
sbb
stc
test
or
xlat
add
cmpl
dec
jecxz
fldcw
flds
inc
add
test
add
push
mov
dec
rorb
jno
inc
mov
movsl
sbb
insl
inc
fstpt
jecxz,pn
lret
fldcw
out
xchg
push
js
pop
lods
pop
movsl
mov
and
imul
cli
cmp
popf
mov
arpl
pop
xlat
imul
pop
inc
cmpsl
aaa
test
ss
gs
idiv
jl
test
mov
jae
std
popf
xchg
idivl
bound
xchg
fucomi
cmp
push
unpcklps
mov
push
cmpsb
jnp
iret
out
idivl
xchg
mov
push
push
mov
outsl
mov
jmp
negl
sbb
shrl
ret
das
es
pop
fnstcw
push
mov
jno
aam
pop
xchg
pop
push
ret
push
jg
sti
scas
inc
jle
or
inc
jmp
inc
pusha
jl
dec
push
mov
js
aam
mov
lea
pop
push
cs
inc
lcall
xchg
jmp
bnd
stos
jno
cmp
mov
movsb
movsl
les
dec
mov
test
xchg
addr16
mulb
cli
sub
loope
or
mov
loope
ficomps
std
xchg
xchg
lods
repnz
imul
xor
add
cmc
xor
jl
push
fistpl
xor
push
pop
cmp
fs
cmp
cmp
das
dec
jp
shl
mov
cmpsb
push
jbe
jecxz
push
nop
mov
call
lret
adc
out
xor
pop
pop
rcl
mov
sbbl
inc
dec
cld
mov
pop
sub
push
lds
pop
sar
push
popa
in
imul
jns
lret
add
mov
rcll
pop
daa
jne
xor
ljmpw
call
xchg
xchg
mov
push
sti
out
push
cmp
inc
sub
push
stc
out
hlt
adc
jb
push
cmp
sbb
sbb
repnz
test
icebp
mov
ljmp
pop
add
dec
mov
pop
fldl
gs
cmp
and
ja
cld
mov
cmp
xchg
stos
insb
cmp
out
out
stos
lods
xchg
dec
mov
ret
add
jl
mov
aad
fs
jl
repz
jno
cmc
jno
and
mov
lret
call
les
loopne
jge
fsubrl
sub
data16
fidivrs
fdivl
cmp
mov
jecxz
push
add
out
push
sbb
in
or
out
mov
loopne
sbb
dec
adc
sbb
cmp
mov
add
lret
add
push
data16
push
divb
or
lcall
sub
mov
int3
pshufw
push
ds
or
add
cmpsl
mov
rcll
out
xor
push
add
aas
sahf
fwait
push
and
out
or
mov
inc
pop
xchg
loopne
xchg
int
fs
xchg
or
fstpt
lret
ss
and
fsubl
add
or
jae
jp
lret
xor
xchg
in
or
push
cwtl
in
and
cmp
sahf
push
test
sub
bound
fs
out
outsl
mov
aaa
mov
add
in
mov
mov
push
jmp
ret
pusha
lret
xor
loope
xor
lret
jo
lcall
psraw
imul
mov
add
pop
adc
jmp
dec
push
mov
jecxz
cli
adc
mov
lods
sbb
fs
xchg
imul
inc
mov
and
pop
inc
aaa
xor
sub
subb
ret
pushf
decl
rep
icebp
ljmp
das
lea
out
dec
or
xor
adc
sti
shlb
xor
mov
jmp
movsl
jg
mov
mov
int3
jne
fucom
cli
mov
push
stos
or
jmp
sar
int
mov
jae
mov
add
sbb
out
pop
mov
nop
push
mov
push
dec
shl
add
repz
mov
push
and
inc
mov
sub
cmp
std
lcall
mov
pop
sahf
mov
pop
dec
sarb
pop
ret
subb
jne
pop
mov
out
lea
fidivrs
ss
jecxz
in
in
pop
push
mov
in
mov
adc
pop
stc
fs
push
int3
pop
xchg
mov
fidivrl
shll
mov
jae
xor
stos
mov
call
rcrb
leave
add
shrb
arpl
les
stos
cmp
mov
in
mov
xchg
dec
adc
pop
popa
mov
stos
lret
and
pop
in
sub
movsb
rcll
lds
mov
int
ss
mov
into
xchg
push
cmp
loop
dec
lcall
pop
sub
push
cltd
mov
adc
push
clc
jo
insb
clc
enter
jbe
lds
cli
and
and
js
in
sub
add
aas
adcb
jge,pt
mov
sahf
out
leave
jmp
nop
mov
cmpsb
xchg
das
aaa
jb
push
mov
loop
test
xchg
sub
xor
aaa
fs
mov
lahf
out
push
mov
mov
pop
jg
mov
loopne
lea
mov
mov
push
pop
ret
pop
xchg
lock
sub
mov
hlt
dec
dec
push
and
lahf
les
dec
ss
aaa
test
addb
jns
add
popf
sub
leave
jle
mov
out
jbe
leave
jne
dec
inc
inc
push
sub
out
add
fnstenv
bound
push
sbb
jl
and
add
lods
and
xchg
mov
xor
adc
mov
cld
xor
pop
repnz
cmp
inc
xor
sbb
mov
push
ds
repnz
push
xor
adcl
out
mov
jmp
sbb
add
sub
sbb
mov
cltd
pop
fsubrp
je
daa
pop
jbe
insb
fs
pop
rcrl
inc
dec
pop
push
decb
das
lea
push
sti
rorl
ss
fstpt
mov
aaa
addl
add
in
gs
pop
sub
repz
dec
or
subb
dec
scas
lahf
in
mov
sbb
lods
xlat
dec
test
and
sarl
fdivl
in
movsb
notb
repz
push
mov
movsb
mov
rorb
in
psubusw
fbld
pop
add
jp
jmp
pop
adc
lods
xor
mov
push
loopne
dec
sub
dec
jecxz
inc
mov
mov
addl
and
pushf
cmp
mov
pop
arpl
fistpll
sub
push
das
repz
outsb
int3
loope
into
mov
popf
xor
jns
push
jmp
gs
test
jge
mov
add
test
lods
imul
jge
ss
cld
and
sub
ficoms
pusha
insb
push
sub
or
add
test
jnp
and
mov
lea
insl
sbb
push
pop
cld
fwait
jno
gs
sub
adc
movsl
out
movl
mov
push
or
adc
fdiv
jns
dec
les
jecxz
out
push
or
push
dec
outsb
push
mov
std
push
stos
icebp
cmpsl
adc
add
mov
cmp
cmp
out
shrd
ret
xor
sbbl
pop
fwait
push
sbb
jo
into
sub
push
stos
dec
push
fildl
inc
mov
orb
les
stc
sbb
or
add
fwait
andl
mov
cmp
xor
sbb
inc
xor
pop
fstpt
adc
xor
push
push
mov
ja
or
cmpsb
pop
aam
ror
enter
cltd
or
aad
push
adc
lock
pop
push
pop
inc
ret
bound
gs
in
adc
rorl
in
nop
lret
int
out
aas
adc
sbb
or
in
sbb
cmpsb
jg
ficompl
fildl
popa
aad
xorl
cmp
cld
into
lcall
out
into
lock
xor
in
or
dec
cltd
mov
in
lea
daa
mov
and
add
inc
mov
jno
mov
push
xor
xor
rorl
mov
pop
add
xchg
push
out
pop
add
rcrl
in
pop
inc
out
xchg
std
cmpl
inc
inc
ljmp
pushf
movsb
lds
jb
daa
jge
sbb
and
lds
popf
or
movsl
stc
dec
lahf
lods
jge
add
inc
and
mov
xchg
jecxz
push
and
dec
xor
mov
mov
dec
outsl
inc
popf
je
add
add
ficompl
xchg
in
out
add
jp
repnz
cmc
mov
jge
out
mov
cmp
outsl
adc
mov
mov
adc
jae
lret
sbb
and
dec
out
lods
or
adc
aad
int
cmp
data16
lods
xor
cld
daa
mov
loopne
shll
adc
rcll
jge
stos
lret
mov
add
or
imul
adc
fistps
ret
mov
adc
les
jb
sahf
es
fisubl
test
ret
imul
lea
dec
mov
pop
xor
addl
addr16
movsb
xor
shlb
roll
xchg
cltd
in
push
cmp
dec
lods
adcb
subb
and
jle
adc
sub
pop
push
jge
jno
lret
dec
push
jns
xor
jnp
jmp
aam
adc
rcl
int3
cltd
not
dec
cmc
mov
push
cmp
mov
mov
idivb
in
xchg
cli
cwtl
lret
and
sti
push
jno
stos
roll
in
and
data16
aas
mov
inc
jg
ds
cs
cmp
jnp
xchg
adc
inc
movsl
cld
mov
adc
pop
add
out
cli
sub
or
xchg
outsb
and
in
dec
and
and
and
and
sbbl
or
jl
adc
cwtl
cmp
sarl
fsubrl
adc
bound
mov
movsb
jne
ds
push
les
iret
sbb
push
or
jns
mov
mov
fstl
mov
inc
xor
xor
add
ret
mov
or
mov
lcall
cld
mov
stos
push
mov
testb
jns
popf
or
cmc
lahf
adc
int3
cli
fists
jle
cmpb
jmp
mov
sbb
push
sbb
movsl
pop
xor
and
sbb
in
push
mov
int
lock
insl
sub
stc
cmpsb
sub
mov
mov
mov
inc
xchg
xchg
sub
xorb
or
mov
inc
dec
sub
and
or
jl
dec
orl
adc
xlat
xor
out
sahf
pop
ss
mov
mov
jle
in
sarb
loope
mov
push
clc
test
insb
inc
aam
fidivrl
inc
int3
out
dec
add
xchg
mov
lods
mov
stos
xor
jp
cmp
cmp
dec
cmp
jl
add
pop
call
clc
ret
cmp
repz
int3
pop
jno
or
xchg
aam
pop
dec
cmp
push
icebp
sub
jecxz
cmp
cmp
inc
cmp
xor
in
jle
dec
dec
mov
mov
mov
pop
ret
ficoms
lods
push
dec
leave
adc
add
sbb
jns
add
dec
bound
mov
adc
inc
cmpsb
jle
mov
stos
xchg
jmp
sysenter
sbb
mov
int
xchg
jle
push
std
pop
cmp
sti
pop
pop
and
mov
jnp
jno
ret
and
int3
push
lods
mov
jo
mov
xchg
mov
sti
mov
js
push
fistps
cmpsb
aad
aam
and
sub
mull
call
xor
imulb
in
dec
dec
leave
ficoml
xchg
xchg
mov
mov
fst
and
testl
xchg
flds
dec
cli
jne
bound
test
hlt
sbb
fs
mov
xor
gs
mov
mov
jns
jl
out
outsl
and
popl
inc
and
inc
mov
adc
enter
int3
fstpl
stos
inc
jns
jno
push
sub
lods
adc
sbb
fcompl
cmp
negl
mov
push
sbb
mov
or
fldcw
or
adc
jno
inc
sub
or
or
mov
dec
sbb
pop
sbb
mov
mov
mov
ja
pop
inc
inc
sub
fstpt
scas
sbb
xlat
dec
xchg
movsb
imul
pop
sbbb
repz
xchg
cmp
loop
aam
imul
mov
je
push
adc
fisubrl
sbb
adc
inc
or
fdivl
leave
cmp
pop
imulb
dec
jne
loopne
das
mov
xchg
insb
pop
fadds
ret
fiadds
inc
fs
in
jecxz
jo
and
inc
cld
mov
ficoms
clc
movsl
push
enter
daa
sbb
stos
push
loopne
xor
or
or
and
sub
lcall
sahf
pushf
outsl
lahf
xchg
and
idiv
mov
and
xlat
or
add
adc
mov
push
out
lods
lock
sti
incl
sub
adc
mov
bound
sub
adc
jb
jno
xor
pop
and
inc
pop
bound
add
and
xchg
push
fs
xchg
mov
out
add
inc
cmp
rolb
cmp
xchg
scas
out
stos
add
cmp
imul
add
pop
int
adc
adc
scas
movsb
push
adc
popf
inc
fldcw
cmp
and
sbb
pop
xchg
std
or
cmc
frstor
dec
pop
sar
mov
dec
xlat
cmp
cmp
daa
pop
sti
sti
ljmp
xchg
mov
or
mov
mov
mov
mov
rcrb
xor
push
data16
pop
or
cmp
sub
cltd
cli
popa
or
insb
js
mov
rolb
lret
test
push
inc
xor
and
mov
mov
add
lcall
pop
sbb
dec
stc
xor
xchg
mov
lods
pop
jns
stos
mov
popa
add
lret
cmpsl
test
xor
in
ret
ss
sbb
jp
nop
loopne
dec
jmp
gs
jae
std
ss
in
icebp
repnz
push
pop
cmp
out
cmp
mov
and
or
add
sub
sbb
and
in
mov
cltd
xchg
out
cmp
mov
dec
push
sub
cld
pop
cmp
and
push
dec
sub
push
push
xor
dec
hlt
jbe
sbbl
xlat
add
or
ror
pop
cmp
inc
test
sbb
cmpsb
jge
aaa
mov
cs
sub
inc
pop
iret
scas
pop
sub
mov
sub
imul
mov
inc
cmpsb
xor
mov
js
out
dec
test
jae
mov
push
rol
movl
and
jge
dec
push
pop
outsl
xchg
ss
daa
imul
fwait
ss
leave
mov
push
sbb
jp
jmp
sti
dec
cwtl
jbe
imul
inc
out
sub
je
sbb
in
in
xchg
inc
dec
adc
outsl
cmp
sbb
mov
inc
daa
push
mov
lahf
sub
adc
clc
out
shll
dec
aam
and
mov
jbe
or
fdivp
jbe
lret
mov
mov
rcrb
into
jp
adc
jp
out
les
aad
orl
add
push
cmp
test
inc
mov
nop
jbe
xor
push
out
shlb
dec
leave
bound
mov
int3
les
jno
xchg
mov
mov
stos
gs
add
sub
outsb
ljmp
arpl
je
xchg
daa
out
daa
xlat
in
cmpsl
adc
cmp
jmp
shrl
cs
mov
xor
dec
mov
xlat
lcall
xor
inc
jl
lods
int
repz
fsubrl
add
xchg
or
ret
pop
mov
xchg
fisubrs
cmpl
adc
xlat
mov
test
sub
aaa
sub
pop
sti
stos
out
dec
adc
lock
pop
add
gs
loope
arpl
mov
fstpl
push
push
sub
push
adc
pusha
dec
dec
enter
loopne
push
or
lahf
mov
pop
rorb
stos
sub
clc
fbstp
test
and
or
mov
ljmp
fcompl
cmp
loop
das
adc
cmp
aad
push
inc
cwtl
bound
aas
pop
sbb
cmc
xchg
dec
mov
jle
imul
mov
and
xor
sbb
movsl
add
adc
push
sahf
add
aam
je
push
and
mov
cmp
and
fcmovne
push
dec
pop
out
jl
or
jae
pop
mov
or
push
push
ds
pop
int
lds
sbb
fstps
add
and
scas
popa
std
or
ljmp
cmp
xchg
mov
movsb
scas
sub
es
ficompl
pop
ds
test
push
imul
cmp
stos
hlt
mov
out
add
iret
test
repz
ret
inc
call
std
xlat
sbb
mov
push
mov
jbe
mov
popa
imul
inc
rcll
stos
xchg
xchg
jnp
xor
insl
pop
fdivrl
xor
lcall
ja
or
xchg
in
lret
sub
in
mov
test
repz
pop
sub
hlt
sbb
fisubrl
in
aam
cmp
scas
jo
ret
int
and
lods
adc
adcb
sahf
ficoml
cmp
inc
or
cli
sub
cli
push
lods
int3
and
in
pop
mov
sti
lds
mov
std
pop
dec
pushl
enter
dec
sti
fdivp
xor
stos
cmp
xor
dec
test
add
outsb
rcrl
lods
repnz
sub
call
in
movsb
push
fsubs
xchg
or
sub
fcmove
outsb
mov
aad
mov
loope
movsb
mov
sbb
cld
fs
add
fcmovbe
push
les
lods
repnz
daa
je
sahf
cld
dec
cmp
stc
bound
sbb
sbb
lret
mov
adc
inc
dec
add
jmp
and
push
pop
dec
cltd
fwait
ds
imul
adc
dec
pop
mov
push
inc
dec
and
mov
stos
stos
sbb
in
sbb
ds
sarl
pop
mov
or
into
lds
xchg
xor
mov
bound
js
pop
jno
rcr
leave
sub
add
mov
xchg
adcb
daa
pop
loop
xorb
xchg
jle
xor
mov
cmpsb
movsl
or
xchg
pop
out
addr16
sti
cwtl
btr
jmp
aas
popa
dec
xchg
outsb
cltd
mov
sbb
inc
xchg
icebp
push
sbb
nop
stc
cmc
aas
mov
or
xor
jo
repz
in
jb
lock
jge
clc
test
sub
int
dec
lea
pop
int3
push
int
outsl
cmp
dec
push
in
inc
cmp
fbstp
clc
popa
fldcw
fnstenv
outsl
stc
outsl
call
mov
mov
les
neg
cmpsl
push
adc
cltd
push
stos
mov
pusha
mov
adc
aam
nop
mov
ss
sbb
push
aaa
int3
dec
stc
outsb
loope
push
jbe
inc
leave
xchg
scas
jo
orb
cmp
insl
lds
push
int
out
cmp
aad
jp
rorl
call
mov
insl
fidivl
mov
popf
inc
mov
out
push
jb
addl
pop
xchg
enter
les
icebp
in
movsl
dec
jo
cmp
mov
push
add
movsl
jnp
jge
lods
mov
or
ret
inc
jb
xchg
push
mov
pushl
fnsave
push
sti
dec
lcall
xchg
sbb
arpl
addr16
push
or
arpl
cmp
std
scas
push
inc
leave
out
cltd
outsb
nop
jg
dec
mov
sti
jno
sbb
pop
repz
jo
adcb
out
jmp
dec
lret
aam
push
mov
cmp
push
mov
xor
test
cmp
lea
in
and
jge
popa
repz
xchg
push
and
imul
cmp
rclb
insb
push
fisttps
stos
cmp
scas
jge
and
mov
inc
adc
pop
lock
jae
fdivrs
jno
lret
sahf
repnz
test
ljmp
jno
fcmovb
mov
clc
xlat
mov
sub
jle,pn
pusha
jb
cmp
xor
adc
add
stc
inc
icebp
insb
jae
add
out
mov
inc
les
jmp
dec
jae
cmp
test
add
sbb
lcall
fimull
jno
fldt
outsb
jmp
clc
jb
jg
jmp
cmp
mov
and
popf
sti
or
sub
inc
adc
xchg
or
jne
cmp
pop
stc
add
std
daa
repnz
jecxz
push
movsl
clc
jge
inc
mov
imul
xor
scas
mov
clc
notl
test
jp
mov
lahf
push
clc
push
add
push
movsb
xchg
or
vpunpckldq
movsb
xlat
inc
dec
push
dec
insb
ret
or
lahf
je
xchg
mov
ret
out
jo
orl
test
xrelease
xchg
lods
arpl
xchg
daa
cmp
pop
lea
inc
sahf
push
in
mov
add
gs
outsb
pop
into
jo
jae
nop
aas
push
mov
lgs
into
inc
add
jmp
leave
je
push
sub
insb
imul
test
addl
test
mov
or
enter
fists
in
test
and
push
xchg
dec
cmpsb
mov
mov
dec
aaa
pop
mov
jge
xchg
pop
out
xchg
or
cmpsl
adc
orl
in
push
lods
xlat
xchg
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
inc
add
add
add
add
add
or
inc
jb
popa
je
push
push
add
gs
or
add
add
add
push
call
ret
add
add
pusha
push
popa
jmp
add
add
add
add
add
add
ret
pusha
mov
mov
add
cld
mov
mov
add
add
add
add
add
or
add
add
add
cld
mov
xor
movsb
mov
and
add
add
add
add
add
add
add
or
add
add
add
mov
inc
mov
call
add
mov
add
add
add
add
add
add
add
or
add
add
add
jmp
mov
add
pusha
call
add
add
add
add
add
add
add
add
fs
push
xor
add
add
add
jb
gs
xor
cs
insb
add
fs
imul
add
je
jb
arpl
fs
jae
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
add
incl
or
add
add
jb
gs
xor
cs
insb
add
fs
imul
add
je
jb
arpl
fs
jae
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
add
incl
or
