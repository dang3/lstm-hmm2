push
call
into
push
jns
jne
adc
add
push
call
mov
ljmp
add
jbe
inc
dec
dec
not
inc
test
and
dec
xchg
sar
mov
rol
call
dec
push
dec
dec
inc
xor
cs
insb
add
and
fs
jae
cmp
pushf
pushf
call
push
call
mov
lea
jae
xchg
not
pushf
lea
js
mov
not
inc
setb
mov
call
push
call
mov
mov
sub
mov
pusha
lea
icebp
dec
lahf
es
cld
mov
out
pop
hlt
and
fcoms
xchg
into
aaa
push
add
push
lahf
mov
jb
xor
jp
adc
mov
pop
js
call
pusha
or
mov
aaa
lods
pop
push
inc
lds
ja
sub
dec
jnp
int
push
les
outsl
dec
lret
inc
lret
pop
xchg
mov
mov
dec
push
pop
int
mov
fs
jo
push
xchg
lret
mov
mov
and
push
sbb
sti
push
popa
iret
fisttps
pop
addr16
out
repnz
push
dec
jb
add
mov
pop
ret
pop
sub
movsb
lcall
xorb
adc
xlat
sbb
xchg
subb
jg
ds
lods
xchg
mov
cs
imul
inc
jl
xchg
bound
cmp
les
enter
cmp
xchg
and
push
xchg
addl
mov
into
shrl
mov
dec
or
test
mov
pop
in
pop
add
out
outsb
popf
dec
dec
sbb
pop
push
sbb
or
scas
cwtl
enter
jbe
push
int3
iret
cmpsb
test
jge
xchg
movsb
adc
cmpsl
mov
dec
movb
pop
insb
push
push
outsb
sub
mov
sub
adc
mov
jle
or
pushf
shll
mov
jmp
mov
xlat
ds
popf
lcall
cmp
test
jnp
adc
movsb
mov
mov
ret
sbb
push
ds
mov
inc
aas
cltd
pop
loopne
repz
shll
int3
push
mov
notl
xor
xchg
and
pop
sahf
movsb
fdivrl
pop
inc
push
mov
xchg
arpl
or
add
xlat
roll
xchg
pop
xchg
mov
dec
movsl
out
stc
dec
ret
jl
xor
lock
movb
insl
ss
mov
rorb
into
push
sbb
addr16
mulb
jg
popa
mov
clc
daa
sbb
sub
mov
inc
sbb
pop
pop
roll
ljmp
jge
lret
xchg
clc
jle
cmp
gs
jl
and
in
mov
add
add
adc
jb
jge
xchg
stc
ljmp
add
inc
mov
mov
es
int3
cmpb
cmp
subb
lock
xor
aad
dec
loopne
out
inc
adc
xchg
addr16
call
or
haddpd
roll
cmc
test
cmpl
pop
divl
pop
xlat
fcmovnu
cmp
movsl
pop
ret
and
mov
ja
rcrl
repnz
mov
inc
sbb
sub
mov
mov
xchg
scas
mov
ss
or
push
pop
stos
stc
push
cmp
mov
imull
or
xchg
stos
movb
mov
cmp
mov
je
cmpl
cmp
lods
inc
cwtl
das
xchg
imul
popa
call
push
call
add
pusha
push
add
in
aaa
add
sub
mov
in
aaa
add
sub
xor
cmp
add
sub
add
in
aaa
add
add
add
add
add
add
aaa
add
add
add
add
add
mov
add
aaa
add
add
add
add
add
sub
pop
in
aaa
add
add
add
add
add
sub
add
add
add
add
add
lret
outsl
in
aaa
add
add
add
add
add
aaa
add
add
add
add
add
sub
jg
aaa
add
add
add
add
add
in
aaa
add
push
add
aaa
add
push
add
gs
add
push
add
cmp
lahf
in
aaa
add
push
add
add
push
add
cmp
add
push
add
in
aaa
add
sbb
push
adc
mov
pop
jne
add
cli
jge
lret
shrl
out
imul
mov
out
pushf
das
xlat
pop
push
enter
xor
call
or
xchg
and
or
mulb
test
cltd
icebp
out
ja
xchg
lea
cmp
test
gs
lret
pop
add
add
popa
shlb
mov
fldenv
sub
pop
stc
jl
jmp
cmpb
cmp
push
aad
mov
cmpl
ljmp
pop
mov
hlt
fisttpl
and
adc
test
mov
adc
pushf
sub
pop
loop
fistl
popf
mov
pop
xorl
add
inc
cmp
and
ss
clc
mov
sbb
popf
xchg
or
jae
inc
mov
push
rolb
sbb
lret
mov
cmp
jmp
fstpt
sub
mov
or
out
mov
jl
test
fwait
xchg
jge
movsl
cld
dec
mov
pop
ds
cltd
sarb
xchg
imul
add
call
and
cld
inc
add
idivl
sub
test
loopne
mov
jmp
sahf
lods
push
sbb
sbb
clc
dec
test
pop
fcoml
mov
xor
call
mov
mov
fsub
mov
sti
jl
gs
push
xor
sbb
imulb
push
adc
push
cltd
repnz
or
cmp
add
pop
call
sbb
add
pop
popf
sub
sarb
outsl
push
fistl
xor
mov
mov
sti
ljmp
mov
sub
add
stos
jge
mov
push
nop
xor
int
xor
cli
jecxz
lock
out
mov
and
ss
mov
shll
push
arpl
jle
push
loope
decl
push
and
popf
popa
mov
jae
ret
pop
push
test
push
mov
cmp
xor
imul
mov
faddp
popf
mov
sbb
dec
aad
cmp
push
test
cmp
enter
mov
dec
pop
in
js
dec
movsl
mov
jb
int
dec
push
in
inc
imul
inc
movsb
aam
add
push
gs
fdivs
xchg
add
leave
cmp
mov
stos
mov
rol
inc
sbb
dec
mov
jg
out
xor
push
sbb
sarl
sub
cmp
xchg
outsb
in
jno
jg
mov
iret
mov
pop
outsb
adc
sti
out
and
mov
push
in
xor
test
hlt
mov
hlt
mov
xchg
insb
xor
jg
test
push
push
adc
push
call
loop
call
mov
dec
aas
dec
xchg
and
fildll
adc
cmpsb
dec
pop
or
cmp
jns
or
cmp
sti
leave
adc
xchg
pop
rcrb
fistl
pop
pop
inc
iret
cmp
leave
push
mov
mov
test
faddl
fmuls
pop
jnp
vphsubwd
jl
jmp
push
test
repz
ror
int
lcall
pusha
cmovbe
mov
or
fstp
xchg
insl
jo
fistl
bt
shl
bts
movsbw
mov
clc
push
clc
mov
bt
test
stc
push
push
jmp
push
call
xchg
sub
in
inc
push
out
xchg
pop
cwtl
sub
add
out
aam
push
xorl
vandps
sbb
mov
pop
mov
lods
sub
scas
leave
mov
subl
adc
call
adc
pop
adc
imul
iret
pop
dec
pop
cltd
daa
loope
jnp
push
push
jge
fisubs
and
push
mov
add
push
mov
mov
cltd
int3
mov
mov
fiadds
xor
neg
xchg
outsb
popa
bound
jne
add
sbbb
loope
stos
add
lcall
mov
bound
outsb
inc
scas
mov
lret
pop
mov
xchg
xor
xchg
test
fcoms
scas
iret
pop
cltd
repz
xor
jb
lret
and
in
and
cli
test
jmp
lea
aas
mov
shr
gs
inc
mov
decl
insl
cmpl
rclb
jo,pt
bound
pop
or
out
pop
and
test
imul
pop
popf
adc
test
out
dec
adc
cmpsl
adc
push
adc
dec
dec
sbb
lret
mov
ret
xchg
jp
outsl
add
in
rcrb
push
and
jnp
cmc
dec
mov
and
mov
nop
ja
loopne,pt
or
sbb
pusha
jecxz
fbld
xor
jne
mov
xchg
outsl
push
cmpsb
pushf
push
call
cli
out
sbb
push
leave
fwait
imul
lds
xchg
cmp
lods
or
pop
sbb
mov
mov
cld
jecxz,pt
popf
call
stc
cmpsl
sbb
add
jne
les
ss
xchg
stos
ja
cmp
jge
cmc
inc
mov
decb
push
aad
dec
bound
dec
cmp
inc
jp
sbb
sbb
inc
fucomi
pop
in
movsl
mov
xchg
adc
inc
loop
mov
in
jmp
shrb
inc
fistl
push
call
xchg
dec
pushf
xchg
in
in
pop
add
outsl
fidivrs
push
fistps
imul
inc
scas
xchg
pop
cld
cwtl
ret
repz
adc
je
clc
add
mov
stc
push
sbb
in
rcll
aaa
nop
push
addb
dec
push
push
adcl
xchg
jo
daa
stos
clc
pushl
and
cmc
add
pusha
pushl
pushf
lea
jmp
jbe
call
aas
mov
sbb
outsb
mov
or
mov
enter
dec
inc
mov
mov
dec
inc
cmp
ds
mov
lock
xchg
rcr
rolb
in
nopl
aas
mov
cmp
cld
int3
xor
jo
and
iret
pop
pop
inc
mov
addr16
sbb
and
hlt
das
mov
and
mov
loop
ja
shlb
dec
mov
inc
sbb
fistl
push
call
push
test
jp
adc
loope
inc
add
cmp
mov
sub
je
fldcw
mov
pop
sub
fsubs
cltd
repz
sub
pop
pusha
inc
iret
xlat
aas
std
xchg
jp
mov
jecxz
dec
enter
les
mov
push
lahf
lahf
mov
jne
hlt
lcall
dec
adc
jae
xchg
out
pavgw
push
aam
cltd
pop
dec
repnz
daa
xchg
xor
mov
leave
popa
adc
xchg
jo
inc
shrl
jne
add
sbbl
cmp
pop
xor
iret
lret
int
in
pop
push
or
hlt
xor
inc
lret
sbb
jb
in
jae
inc
out
ret
packssdw
sub
inc
xor
cmp
rorl
xor
mov
pusha
sub
or
hlt
loope
cwtl
dec
js
jmp
stos
in
push
xchg
ficoms
adc
inc
mov
lds
mov
mov
jno
lret
or
jnp
cs
gs
iret
xchg
push
setg
incb
leave
sbb
fisubs
adc
mov
punpckhwd
fs
or
imul
inc
cmp
fldcw
repnz
or
int3
and
lret
and
mov
fistl
and
jmp
fidivrs
or
fstps
xor
xor
and
push
adc
cmp
xlat
xchg
mov
cld
loop
dec
xchg
cmp
xchg
jb
xchg
mov
stc
or
pushf
pushf
pusha
pushl
lea
je
ror
rcr
cmc
cmp
mov
btr
rcr
clc
pushf
mov
pushf
sub
test
cmp
jmp
testl
cmp
scas
mov
into
sub
mov
inc
sub
mov
lock
xor
cmp
mov
test
cmp
cmpsb
adc
dec
inc
int
jnp
dec
lahf
pop
lahf
aas
sbb
and
shlb
dec
push
mov
pop
mov
leave
pop
sub
jg
jb
mov
loop
stos
or
les
mov
sti
adc
cmp
jmp
rorb
pause
pushf
push
call
add
dec
or
shlb
or
push
pushl
pushl
ret
push
call
xchg
adcl
adc
lods
jb
mov
mov
jmp
clc
cmpsl
cmp
jae
push
and
jae
add
ds
dec
mov
cld
or
xchg
je
ss
dec
mov
xor
popf
dec
cmpb
and
movsl
in
fldenv
cmp
mov
xchg
push
cmpsl
jo
inc
shl
pop
add
loopne
sbbl
in
xor
mov
jnp
mov
dec
out
icebp
cs
or
xor
popa
or
shrl
cld
mov
out
fistl
or
push
xor
mov
dec
inc
test
rorl
js
fsubl
xor
xlat
pop
fxch
addr16
cwtl
inc
adc
push
call
add
jmp
aaa
mov
and
orb
jmp
dec
pop
adc
jge
fsubrs
inc
aas
push
sahf
jg
clc
push
xchg
xchg
inc
adc
mov
adc
xor
inc
lds
xchg
das
into
dec
aam
pop
int
sbb
call
inc
mov
out
les
sub
mov
sub
out
xchg
jne
mov
add
adc
xchg
filds
adc
aas
cs
decl
lods
fimull
xchg
mov
aas
dec
mov
mov
cs
popf
cli
add
add
xchg
sub
dec
add
mov
jns
loopne
pop
mov
in
jns
mov
into
push
push
mov
jge
push
je
adc
sub
ljmp
inc
rorb
xchg
xlat
subb
jmp
loop
jb
add
aam
jo
adc
imul
xchg
jne
stc
mov
add
test
lods
cmp
scas
add
cmpsb
sub
xchg
imull
mov
add
pop
add
or
xchg
daa
pop
push
fsubr
sub
repz
dec
xchg
mov
sub
ljmp
repnz
sti
loope
stos
xor
aas
push
sbb
cwtl
nop
arpl
sbb
test
mov
rcr
pusha
pop
out
insl
xor
bound
lds
imul
lret
data16
inc
outsb
add
cwtl
add
call
pop
and
cld
push
pop
pop
dec
pop
add
xor
sbb
sbb
outsb
bound
sub
pop
sub
xchg
and
push
out
insb
ja
lods
aas
arpl
mov
jno
xchg
dec
roll
fbld
imul
adc
or
pop
pop
cmpsb
mov
out
dec
daa
in
rorl
aad
bound
jl
xchg
pushf
enter
daa
fstl
test
sbb
imul
xchg
push
xchg
jnp
mov
jbe
dec
sbb
aas
jne
add
jp
fmull
rcrb
cmp
mov
pop
push
lods
cmp
fistpll
xchg
sahf
out
ret
pop
and
pop
out
divb
mov
sar
leave
jp
jle
mov
enter
in
fistpl
fildll
fimuls
adcl
dec
xlat
fstl
gs
pop
pop
pop
mov
cmc
ljmp
cmp
jp
xlat
dec
add
aas
jbe
cli
lock
mov
dec
push
shl
call
push
call
xor
xor
inc
lret
jns
lea
pop
in
sbb
dec
adc
jae
dec
enter
cs
cli
loop
mov
sahf
aaa
adc
lahf
aas
es
xlat
cmp
aam
cmc
cmp
pop
neg
loop
pop
outsb
mov
pop
dec
adc
dec
lods
cld
xchg
cmp
out
mov
fistl
push
call
sti
add
fldenv
int3
cltd
pop
sub
pusha
xor
pushf
mov
repnz
jp
jmp
lods
inc
out
shl
fwait
cmc
je
nop
aas
fldenv
push
push
in
jne
jo
xchg
lods
pushf
cmc
inc
add
notl
fstp
jb
pop
mov
stos
adc
lret
inc
shlb
loope
cmc
mov
int3
rcrl
test
or
xchg
fistl
cmp
inc
jo
mov
jge
es
dec
push
pop
icebp
push
jno
add
cmp
pop
dec
cwtl
mov
or
cmp
jnp
ss
xor
cli
xchg
mov
mov
dec
sbb
push
dec
aas
xor
add
inc
addr16
xchg
icebp
pop
sbb
cmp
or
mov
mov
inc
icebp
pop
jecxz
iret
push
push
or
mov
add
mov
push
lods
xor
test
pusha
or
cmp
adc
add
cltd
push
xchg
push
hlt
add
jmp
and
cmp
je
test
in
stos
mov
in
outsb
xchg
cmp
xor
enter
mov
out
mov
cmp
roll
push
pop
sub
inc
mov
or
es
nop
incb
push
imul
inc
iret
shrb
in
jne
gs
or
lds
scas
insb
inc
mov
insl
mov
sarl
aaa
push
jge
bound
fistl
push
call
or
mov
lea
call
push
movw
cmc
sub
mov
lea
jne
call
push
pusha
pusha
pushl
mov
push
push
movw
lea
jmp
lahf
sub
add
jl
ret
inc
pop
mov
mov
rcr
xor
xor
add
les
ja
js
insl
cmp
jg
adc
pop
ret
lods
fisubrs
insb
jl
xchg
xchg
ljmp
inc
mov
clc
in
push
dec
inc
jns
scas
cwtl
fwait
stos
jecxz
lret
insb
mov
and
mov
adc
mov
out
loope
xchg
sbb
pop
and
pop
insb
shl
pop
or
dec
and
mov
call
jns
sub
enter
ja
shlb
loopew
add
bound
cmc
sarb
out
pop
inc
push
add
mov
pop
xchg
and
pop
mov
xor
enter
cmp
adc
hlt
je
inc
addr16
subl
pop
xor
mov
cwtl
xor
jae
js
mov
or
adc
mov
out
test
add
xchg
fldenv
dec
xchg
xchg
outsl
out
into
add
aaa
push
jne
in
lods
adc
mov
xor
inc
das
adc
add
test
out
test
xchg
inc
adc
push
call
les
lods
sub
adc
call
mov
mov
notl
adc
xchg
dec
sub
xor
loop
rcr
das
mov
xchg
xlat
mov
negl
mov
or
divl
aad
add
je
mov
mov
in
loopne
fwait
xchg
loopne
fwait
fwait
stos
push
adc
cmc
scas
movsl
daa
xor
fwait
push
rcl
dec
sub
add
jnp
test
mov
pop
inc
ss
xor
pop
cmp
lret
cwtl
sahf
pushf
pop
fistl
jno
lret
mov
cmc
and
fwait
push
cli
adc
orb
mov
loopne
inc
mov
div
fstpt
xchg
js
scas
cmpsb
mov
and
lock
adc
push
aad
lcall
cwtl
xor
jne
add
mov
sub
mov
mov
or
lret
dec
mov
jne
lods
aam
and
sub
shr
mov
pop
or
mov
mov
popf
mov
mov
aam
xchg
push
pop
lods
inc
mov
in
pop
and
jb
push
mov
shlb
outsb
imul
dec
lea
mov
push
pop
mov
imul
inc
xchg
push
int
test
jge
adc
jg
test
clc
push
repnz
and
les
lock
icebp
pop
cli
pop
sbb
dec
fcom
das
xchg
lret
rcr
jmp
inc
mov
scas
push
mov
ds
and
and
into
push
mov
movsl
arpl
jmp
sbb
sbb
lock
mov
jbe
out
mov
pop
out
or
push
call
and
sbb
js
sbb
cltd
sbb
dec
movl
fsubs
addr16
add
test
cld
loop
xchg
jge
lret
subl
adc
add
cmpsl
and
pop
sbb
mov
pusha
inc
call
mov
mov
xchg
mov
fxch
nop
inc
push
lods
in
leave
dec
sbb
shlb
and
mov
and
movsl
int
xchg
fs
scas
fdivr
mov
push
dec
sbb
mov
sub
cmp
dec
repnz
mov
and
push
addb
mov
lahf
pushl
leave
adc
mov
fistl
push
call
mov
lret
imul
les
pop
stc
cwtl
sbb
sub
cmp
aam
push
mov
jl
xor
loop
aad
mov
bound
call
adc
bound
scas
adc
dec
js
rol
ret
lods
cmpsl
or
xor
xchg
jne
int3
aam
jmp
jmp
adc
sub
mov
rcl
mov
clc
addl
stos
enter
in
dec
push
js
xchg
jle
xchg
aam
outsb
outsb
mov
sbb
cmovle
dec
movl
out
lahf
xchg
sbb
shrb
mov
inc
jb
push
and
in
les
addl
mov
or
data16
push
mov
mov
mov
es
inc
adc
daa
aaa
jmp
addr16
addb
lcall
mov
in
lcall
lcall
in
cmp
or
and
sbb
mov
mov
push
fldcw
fwait
add
scas
inc
push
call
in
call
push
call
int
decl
lret
test
xchg
mov
fistps
sbb
insl
sub
ljmp
scas
clc
or
enter
in
lcall
or
mov
pusha
sbb
dec
aam
repz
jecxz
xor
sbb
lahf
dec
sub
pop
fwait
push
sub
js
sbb
or
adc
adc
lods
in
add
cmpl
sbb
popa
ss
cmp
lret
ret
rcrl
xorl
inc
inc
js
jns
std
pextrw
xor
sub
pop
jo
xchg
jg
inc
or
mov
fmull
gs
pinsrw
data16
mov
mov
or
sub
lods
add
jg
gs
adc
out
xchg
cltd
adc
pop
xchg
mov
xlat
add
inc
out
std
jne
inc
xchg
push
test
outsb
mov
cltd
cwtl
xchg
int
fistl
push
call
insl
sbb
shr
imul
shrl
lcall
add
pop
rol
cmc
seto
ror
inc
setb
pusha
dec
ror
sbb
neg
jmp
pop
sub
mov
cmp
push
mov
jl
mov
lahf
stos
cmp
nop
pop
loope
loopne
push
movsl
jg
add
pop
dec
sub
inc
mov
push
sbb
adc
inc
enter
sbb
pop
xlat
pop
test
mov
test
and
scas
add
cld
fwait
xchg
leave
aas
fucomip
sub
pop
lret
cmp
sub
sbb
fistl
push
call
movsl
push
mov
test
lcall
pop
sarl
dec
push
mov
fnsave
test
adc
add
sarb
add
pop
clc
aam
xchg
inc
mov
nop
sbb
mov
dec
pop
xchg
jge
movl
mov
shll
insb
xor
test
and
push
icebp
jg
pop
sbb
xorb
xchg
pop
mov
xor
loop
imul
lea
push
or
cmp
les
mov
das
int
les
xchg
sbb
es
pop
dec
jbe
enter
mov
push
orb
and
push
out
inc
imul
adc
das
mov
xchg
out
cmpsb
addb
fildll
or
les
add
adc
jo
pop
dec
mov
scas
mov
fs
xor
and
pushf
mov
rcll
faddl
jae
cmp
add
add
cld
sub
push
inc
lret
aad
pop
lret
ret
xchg
orb
mov
sbb
pop
fs
sbb
cld
cltd
adc
sti
mov
xor
sbbb
pop
call
scas
jns
mov
out
shlb
mov
mov
idivl
lea
mov
cs
cmp
push
mov
bound
push
cmp
inc
jne
dec
xchg
jmp
popa
aad
loop
lea
andb
call
mov
dec
fld
sbbb
push
out
push
lret
in
ror
inc
cmp
jecxz
xchg
xorl
push
call
repz
call
pop
not
push
cmp
fildl
push
and
dec
jp
iret
int3
andl
or
adc
leave
adc
cmp
sbb
orl
or
popa
ljmp
sbb
mov
les
or
sub
jl
ds
or
jg
pushf
insb
mov
aam
out
int
pop
shrb
xor
fistl
push
call
or
sub
subl
in
outsb
xlat
pop
adc
imul
xlat
fistpl
cmp
xchg
sti
pop
add
xchg
pop
rolb
jecxz
test
gs
shlb
loope
loop
mov
test
mov
aaa
pop
fisubl
lahf
sbb
sbb
call
aaa
dec
test
jl
aam
pop
mov
and
incl
mov
mov
mov
push
push
aad
jl
lret
jg
fistl
add
jnp
clc
cmp
call
pusha
not
lods
pusha
inc
clc
lea
jge
ror
pushf
add
cmc
bt
clc
push
ror
jmp
cmp
and
xlat
adc
cs
xor
xor
lret
lods
daa
push
rorl
dec
rcrl
xor
out
leave
pop
in
adc
dec
aaa
pop
mov
loop
iret
pop
push
mov
mov
arpl
fcomps
dec
idiv
cwtl
rolb
xchg
js
std
popa
mov
jb
ror
mov
mov
jno
in
test
mov
dec
outsl
xchg
stc
repnz
sub
sarb
ss
xor
adcb
lods
mov
xchg
test
bound
pusha
movl
pushl
lea
call
push
mov
mov
lea
jae
pushf
test
jmp
jmp
shr
mov
call
inc
mov
pop
std
negb
pop
pop
in
and
jno
mov
sti
out
and
mov
add
negl
cmpsl
in
stos
rorb
sub
pop
dec
pop
xchg
iret
fnsave
jecxz
push
inc
push
addr16
mov
or
push
faddl
xchg
xor
scas
mov
pop
shll
add
sub
mov
dec
push
loop
cmp
mov
xor
shll
stc
mov
ljmp
pop
and
xor
adc
call
inc
mov
mov
jb
lret
pop
nop
andl
popa
mov
add
xchg
das
and
mov
cli
iret
mov
push
push
xchg
jb
sub
mov
fwait
push
and
or
or
mov
and
cmpsb
mov
sbbl
mov
rolb
xchg
inc
iret
fistl
adc
pushf
call
jb
outsl
jl
clc
mov
cmp
xor
es
icebp
rcl
test
add
std
push
data16
sbb
int
push
jmp
lods
repz
rolb
mov
lahf
lods
adc
daa
movsl
xchg
pop
mov
das
outsb
sub
sbb
pop
in
inc
pop
sbb
xchg
mov
aaa
mov
mov
ss
jno
out
mov
out
mov
stc
and
iret
aas
xor
int
imul
push
decl
in
ret
std
push
jl
imul
fstps
mov
fwait
xor
test
ret
mov
mov
lcall
xchg
sti
leave
or
imul
xchg
pop
movsb
nop
inc
pop
push
mov
stc
mov
int3
push
inc
pusha
jge
jge
xchg
xchg
sub
sub
cmp
jmp
adc
andl
call
fs
jl
push
lea
jne
pusha
pushf
stos
pusha
pushf
push
mov
lea
jmp
dec
dec
pop
test
jno
icebp
loope
cmpsl
cli
fisubs
and
jb
xor
cld
test
push
inc
or
xchg
fildl
fdivrl
in
sub
dec
je
cld
dec
xchg
mov
xor
imul
mov
inc
pushf
movsl
pop
ror
jbe
lods
mov
sbbl
fucomp
jmp
xchg
push
jns
mov
lret
xchg
mov
inc
out
std
inc
rorb
cmpsb
mov
icebp
fistl
push
call
stos
orl
ret
xor
xlat
inc
roll
ja
jae
xlat
mov
and
das
jle
inc
jg
mov
stos
mov
add
mov
jmp
mov
loopne
into
lds
lahf
rcrb
jmp
mov
enter
mov
or
cmpsl
enter
rcl
shlb
imul
inc
clc
sbbl
mov
inc
lods
xchg
xor
aaa
xor
fmuls
fistl
push
mov
pop
rcr
lret
stos
or
popa
daa
movsl
stos
lods
sub
nop
cmovg
push
fnstcw
mov
es
sbb
and
push
movsl
sub
sbb
enter
cwtl
sub
sub
add
sub
enter
mov
pop
ss
cltd
imul
arpl
cmpsl
inc
sbb
add
xchg
mov
xor
pop
sbb
sbb
cmp
lret
xchg
jns
mov
test
out
add
and
ljmp
mov
insb
mov
push
jmp
stos
repnz
lcall
es
dec
xlat
out
inc
xchg
push
cwtl
adc
add
sbb
and
out
cld
push
sbb
jbe
jmp
ds
inc
enter
mov
pop
jp
pop
cmpsb
jns
xchg
inc
sbb
push
cmp
fisubrs
nop
movsl
sub
push
nop
sub
rcrb
fucomip
aad
sub
or
popf
mov
sbb
stos
pop
pop
leave
pop
mov
fidivl
fidivl
mov
sub
mov
push
movsb
mov
ficomps
lret
shrl
push
jle
ljmp
mov
sub
lcall
add
xor
and
mov
push
and
clc
test
and
lods
subl
inc
fistl
icebp
add
js
inc
dec
or
cmp
rol
or
and
icebp
dec
filds
lods
ret
jle
test
iret
sarl
pop
push
movb
fstpl
or
cmc
or
or
js
jbe
repz
imul
xlat
nop
mov
push
aas
frstor
dec
lahf
scas
gs
or
cmp
push
push
cmp
movsb
popf
insb
sbb
cs
sub
lods
sub
dec
out
pop
in
push
insl
xchg
xlat
add
xchg
out
pop
rcl
sbb
mov
cmp
addr16
fistl
push
call
add
mov
cmp
ja
xchg
popa
sub
inc
add
shl
outsb
mov
test
mulb
push
mov
dec
adc
or
int
int3
test
sarl
fcmovne
xchg
mov
test
addr16
fcom
adcl
stos
cmp
int
cwtl
paddq
xchg
mov
xchg
mov
xchg
cmp
jl
out
xchg
cmpsl
push
in
dec
movsb
loop
pop
mov
xchg
mov
mov
mov
outsl
scas
sub
jle
std
idivb
xchg
or
loope
pop
push
xorb
ss
push
dec
push
in
jne
jo
jns
mov
mov
mov
pop
mov
mov
xchg
sbb
and
sahf
and
push
xor
or
pop
push
sti
imul
fistl
push
call
fldcw
cwtl
xor
xchg
add
sub
add
push
fistl
sbb
push
xchg
adc
gs
xchg
cmp
push
rorl
cltd
scas
lock
xor
mov
cld
lods
mov
jmp
push
pop
mov
fisttpll
sub
hlt
fst
mov
ret
inc
sbb
sub
int
cmpb
cmp
xor
int
push
inc
xchg
xor
or
inc
adc
xchg
mov
sub
push
sub
dec
test
mov
jge
addb
roll
outsb
test
iret
jno
pop
lods
cmp
mov
pop
stos
fcmovbe
or
scas
scas
mov
jno
pop
lods
mov
add
pop
mov
je
test
mov
stos
in
nop
cmp
cltd
mov
push
fiadds
cli
scas
aad
mov
int
xor
xchg
push
mull
add
mov
mov
add
jl
rol
outsb
xchg
aaa
sahf
or
shrl
cmp
outsb
arpl
lcall
lea
insb
loopne
and
cmp
and
xor
call
fidivl
addr16
cmp
push
adc
stc
aas
pushf
or
test
xchg
lea
pop
dec
push
call
pop
mov
lock
fsubs
mov
adc
lods
inc
pop
ficompl
cmp
sbb
cmp
inc
loope
inc
jmp
fs
popf
inc
dec
cmpsl
cmpsl
test
push
adc
push
rorl
orb
pop
jle
mov
imul
or
shll
jne
das
cmp
into
jge
inc
lods
lods
adc
data16
and
pop
push
fldt
push
xorb
cli
imull
sub
jbe
pop
imul
outsl
mov
mov
jmp
jbe
sbb
sbb
test
dec
or
pop
cltd
push
in
inc
orl
mov
cmp
add
cmp
and
in
loop
iret
mov
test
inc
into
rep
je
jecxz
xor
pop
icebp
adc
xor
insl
dec
cmp
pop
sub
sbb
push
gs
mov
and
sbb
int
out
mov
scas
gs
mov
adc
cmpb
enter
mov
ret
fistl
push
call
in
cmp
adcl
jmp
pusha
pushl
popl
clc
pushf
bt
jmp
movsb
sarb
cmc
scas
jb
mov
fwait
int
lret
popa
nop
inc
sub
cmp
nop
aas
xchg
dec
dec
mov
popfw
xchg
out
test
cmp
lds
xchg
fnstenv
jns
adc
stos
leave
add
jmp
xchg
andl
xchg
xor
repz
sbb
jmp
das
insb
jno
cmp
icebp
dec
and
out
cwtl
inc
test
outsb
in
jle
xor
push
scas
imul
xchg
iret
inc
lods
push
jo
sti
fnstcw
scas
fistl
or
xor
add
sub
adc
sar
mov
push
pushf
test
jmp
push
call
inc
js
jp
xchg
lods
adc
mov
push
sbb
iret
push
jge,pn
js
jne
push
fs
jno
repnz
shl
and
testb
mov
mov
jg
pop
adc
jecxz
ss
add
mov
mov
mov
orb
push
jp
outsl
mov
scas
xchg
xchg
xlat
popf
mov
cmp
std
jmp
out
sub
mov
xchg
dec
jg
enter
push
pusha
lods
pop
lret
mov
xchg
insb
ret
or
stos
inc
add
xorb
mov
xchg
sbb
lcall
and
lock
in
jg
adc
fdivrs
mov
add
jp
sti
outsl
addr16
test
mov
outsb
lret
xchg
jle
data16
mov
cmpsl
sub
scas
fwait
adc
adc
ret
int3
xchg
mov
aam
sar
shl
andl
outsb
xchg
push
sarl
add
popf
test
movsb
or
loope
enter
es
test
daa
lds
adc
jne
and
cmpsb
pop
sbb
call
sti
mov
fsubl
loope
repz
mov
push
out
mov
shrl
scas
lods
popf
jne
icebp
jb
repz
ret
and
fsubrl
pop
mov
out
mov
sub
jns
les
aaa
inc
sub
adcb
fistl
and
push
inc
mov
and
add
call
add
aad
jb
and
cmp
push
das
sub
clc
cmpsl
mov
mov
push
mov
pop
xchg
sbb
out
fnstsw
aaa
mov
push
mov
pop
lea
loope
fcoms
add
out
sbb
xor
je
push
dec
loop
icebp
mov
clc
movsb
clc
outsl
call
lret
adc
adc
xchg
sbb
mov
xchg
xchg
mov
pushf
enter
insl
popa
pop
hlt
and
cmp
daa
cmpsb
imul
rclb
cli
cmp
aaa
outsl
sub
push
cmpsb
sub
or
mov
jb
pop
jnp
ret
mov
jns
adcl
jae
cltd
and
and
add
add
inc
and
ret
xor
test
push
mov
mov
xchg
outsb
xor
pop
call
icebp
pusha
push
andl
xchg
xchg
jns
and
lret
adc
add
xor
adc
add
mov
push
call
push
jbe
into
nop
jmp
push
dec
inc
dec
dec
xor
cs
insb
add
ret
insl
xor
mov
cmc
movsl
sub
xor
fsubrl
shll
mov
adcb
movsb
insl
int
mov
sub
mov
loope
xor
add
and
pop
xchg
lock
push
mov
mov
or
push
and
pop
paddd
daa
adc
cmp
add
lret
mov
xor
bound
adc
dec
mov
je
cmpsl
cs
xchg
xchg
mov
punpckhbw
add
call
adc
dec
adc
adc
testl
mov
in
pop
int3
xchg
sbb
loope
and
sbb
pop
mov
dec
mov
mov
jecxz
loop
repnz
pop
movsl
mov
jg
pop
jo
lods
lret
ljmp
in
jg
out
xor
les
das
sbb
into
push
out
repnz
mov
not
jbe
out
and
dec
fwait
or
repnz
push
daa
fistl
iret
js
test
lods
cmova
xor
out
mov
mov
cmp
dec
jmp
pusha
outsl
cld
and
xor
rorl
push
pop
dec
add
jnp
ret
xchg
xchg
mov
push
push
mov
cmp
pushf
push
and
insl
sahf
pop
or
sbb
shrl
xchg
and
test
xor
xchg
lahf
popa
insl
mov
fidivrl
fdivs
inc
dec
cmpsb
sub
hlt
cmpl
clc
fisttpll
aad
stos
leave
pop
pop
insl
stos
imul
int3
inc
push
call
add
fs
jmp
mov
cmp
add
push
aas
cmp
and
les
mov
hlt
cmp
movsl
imulb
lods
adc
push
jp
jmp
imul
cmp
adc
fsubr
rolb
mov
add
push
xor
pop
repnz
dec
pop
lahf
pop
cmp
jmp
bound
add
mov
mov
daa
mov
or
adc
aam
stos
in
push
mov
jmp
xchg
cmp
jae
movsl
jnp
lock
adc
push
clc
adc
fistl
xchg
mov
mov
pop
mov
mov
dec
aad
inc
jle
mov
and
xrelease
jmp
xchg
xor
test
loope
xchg
fistl
push
cmc
bt
bt
ror
cmc
mov
pushl
mov
add
jmp
push
call
call
dec
jne
add
je
add
adc
sti
rclb
imul
fimull
lcall
shll
test
std
ret
mov
mov
xchg
lods
adc
mov
mov
dec
cmp
aad
jae
or
lcall
push
jo
push
push
sbb
ret
mov
xor
inc
ret
sbb
lds
inc
stc
scas
push
xor
inc
push
icebp
xabort
fiaddl
stc
data16
sbb
neg
fistl
push
call
sub
jne
cmp
pop
jne
add
add
add
adc
add
in
cwtl
push
add
and
push
sub
pop
push
mov
call
inc
push
mov
jg
int
or
aaa
add
loopne
adc
std
aas
fsub
inc
or
dec
dec
jns
movsl
call
dec
pop
outsl
mov
sti
out
fistpll
ds
xlat
push
fisttpl
lea
jbe
push
js
cmp
xlat
adc
adc
pop
sub
add
jle
fidivs
out
push
jle
adc
cmpsb
inc
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
dec
sub
jnp
aam
xchg
xchg
cmp
fisttps
mov
dec
cwtl
inc
inc
push
add
add
addr16
mov
pusha
cltd
loope
cmpsl
push
into
jp
ret
ret
fs
jnp
mov
stos
scas
sub
or
or
pop
xchg
ficomps
popa
add
test
aaa
ret
or
add
mov
dec
mov
cmc
push
mov
xor
sbbl
ss
fistl
push
call
roll
pop
dec
and
sbb
dec
add
mov
loope
mov
movsl
inc
adc
stc
adc
clc
push
jge
mov
fidivrs
push
mov
mov
sub
jl
jg
in
sub
sbb
fistl
pusha
and
outsb
cmp
cmp
or
sub
aad
pop
ret
jae
jb
pop
push
xchg
pop
jns
pop
xchg
inc
and
mov
aaa
xchg
fdivp
leave
fbld
jle
adc
push
addr16
adc
or
iret
pop
test
fs
imul
imulb
push
mov
jne
aas
ds
xchg
dec
sahf
pop
push
xchg
xor
imul
mov
enter
daa
addps
stos
inc
les
les
out
mov
mov
icebp
popa
pop
negl
test
xchg
cwtl
pop
pop
jl
hlt
shrb
and
sbb
and
lock
cmp
jle
mul
jp
jo
jmp
rcl
mov
dec
push
clc
cmpsl
cmp
push
dec
jae
call
hlt
lea
push
sub
imul
mov
faddp
and
subb
sbb
das
daa
pop
sbb
ret
les
mov
mov
push
inc
repz
lock
test
pop
jmp
or
fcomp
push
sub
test
or
adc
sub
mov
jno
cmp
xchg
cltd
mov
inc
test
jmp
push
aas
je
push
jae
loope
dec
ss
aad
sbbb
stos
mov
cmp
mov
dec
lcall
jmp
dec
lea
lcall
ret
mov
and
repz
sub
push
mov
lods
or
jmp
adc
stos
mov
rcll
adc
mov
sarb
xorl
iret
lret
lock
clc
mov
mov
cltd
pop
mov
xchg
cltd
pop
scas
mov
test
cmp
adc
inc
mov
call
pop
xor
pop
mov
dec
lcall
repnz
dec
mov
sub
mov
imul
xchg
fadds
mov
fucomip
mov
xchg
push
fimuls
and
xor
leave
pusha
xchg
in
mov
fs
es
mov
xchg
sub
xor
cmp
pop
cmpb
xchg
movsb
stos
fmuls
jnp
push
push
cld
arpl
fistl
xorl
in
cwtl
mov
cmp
cmpsl
out
and
jmp
mov
lahf
fbld
mov
and
test
loop
std
fs
loope
das
pop
outsb
cld
cld
or
jle
dec
ret
scas
xor
cltd
rcll
sbb
std
jo
data16
insb
imul
mov
scas
sbb
subl
mov
fs
xchg
lcall
mov
arpl
adc
push
gs
push
outsb
sub
sub
pop
jo
sahf
mov
test
xchg
ficoms
jne
pop
cld
testl
shr
mov
fcmove
int
repnz
sub
mov
pop
aad
and
and
int
push
push
cmpsl
sub
cmpsl
and
addr16
add
mov
bound
adc
mov
scas
lock
pop
and
daa
aaa
cld
loope
std
in
jo
inc
jbe
pop
push
mov
sbb
out
int
push
pop
insl
sub
sub
scas
push
adc
jecxz
xor
or
sar
mov
mov
and
out
dec
subl
mov
sub
fstp
pop
and
aam
divb
sub
roll
sbb
inc
in
dec
rcll
or
mov
xchg
lcall
dec
scas
push
ljmp
xor
fidivrl
add
push
adc
mov
cmpsb
inc
xchg
sbb
xchg
pushf
dec
int
adc
ss
pop
xor
mov
lret
xor
rolb
cmpsl
lods
pop
scas
lds
fwait
insl
js
out
fsubl
cmpsb
js
lret
rorl
rcrl
inc
add
pop
lret
adc
outsl
jmp
and
lahf
cmp
push
fistl
call
push
call
xchg
imul
test
in
push
adc
lret
mov
adc
cmpsb
sbb
jo
xor
loopne
xor
jo
ds
push
shll
iret
mov
cld
in
jle
mov
pop
add
cmpb
xor
data16
cmp
scas
push
daa
loope
push
cwtl
xchg
repnz
and
xchg
and
out
pop
inc
loopne
sub
push
xchg
push
or
jg
mov
inc
cmp
das
out
or
icebp
lahf
or
fistl
mov
cwtl
into
mov
mov
pop
dec
pop
pop
fisubs
add
aas
dec
adc
lcall
cmp
lds
pop
dec
sbb
mov
sub
jl
pop
push
pop
addr16
cwtl
cmc
call
xor
ret
fcmovu
fildl
rolb
sub
inc
push
inc
test
in
sahf
fsubl
push
xlat
stos
es
xor
pop
push
mov
mov
lahf
sub
or
mov
xchg
popf
inc
cltd
enter
addl
lods
pop
fisubs
mov
push
cs
push
and
das
xorl
push
stc
pop
cmp
sub
cs
mov
jle
popf
mov
hlt
push
add
mov
jb
movsb
cmp
or
int3
andb
xlat
xor
dec
dec
rcrb
int3
or
dec
in
xchg
std
in
pop
je
pop
jb
test
cmp
push
es
stos
inc
sbb
adc
add
xchg
ja
fisubrs
push
add
call
mov
sub
test
inc
shr
mov
shl
rcl
mov
sub
test
mov
test
bt
cmc
cmc
sub
pusha
jmp
jmp
add
add
add
add
jb
add
add
add
je
add
add
add
mov
add
add
add
in
sub
add
fnsave
add
add
add
add
add
add
add
add
add
cmp
add
add
call
add
add
addb
add
insl
ja
add
add
add
add
addb
add
add
add
add
pop
cmp
add
aaa
add
mov
add
fstpt
add
add
mov
cmp
add
add
push
call
sbb
pop
adc
add
int3
outsb
fst
mov
jno
cmpsb
mov
or
inc
mov
inc
dec
ret
adc
call
out
pushf
stos
ja
repz
repnz
cwtl
cmp
sub
fwait
mov
or
addr16
add
arpl
mov
aaa
add
lods
xor
xchg
push
pop
fildll
xor
cltd
lock
sbb
icebp
cld
cli
xchg
jp
ret
xor
pop
bsf
pusha
push
and
iret
xchg
xchg
sahf
into
and
movsl
lahf
and
adc
mov
daa
jg
cli
xchg
divl
mov
cmp
mov
mov
rol
mov
aad
mov
std
aam
inc
fbstp
lcall
or
insb
xor
push
pusha
hlt
testb
push
dec
loope
sub
jecxz
inc
sbb
and
xchg
push
pop
pop
lods
jno
rolb
loopne
or
ret
inc
test
dec
push
ror
add
xchg
mov
ret
lcall
call
pop
dec
and
push
idivl
jmp
mov
mov
imul
imul
xchg
pop
dec
fdivrl
inc
and
jecxz
sub
inc
push
incl
stc
out
adc
push
add
lret
inc
sar
xor
fwait
push
fcmovnb
movsb
push
push
cmp
cs
and
fnsave
test
lea
outsb
push
sbb
cmp
fistl
sahf
lds
sub
xchg
mov
lds
sarl
nop
outsb
movsl
add
adc
js
decl
xchg
sub
leave
aam
and
sub
loop
bound
fldcw
sub
scas
test
and
mov
xor
xchg
mov
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
jae
ror
sar
and
pushf
mov
push
or
ror
mov
cmc
pusha
test
mov
test
xor
cmp
repnz
call
lea
call
call
mov
mov
lret
adc
lcall
or
sub
in
inc
loopne
jle
jge
in
jecxz
sbb
push
into
mov
inc
jbe
pop
enter
xlat
pop
lret
mov
sub
aaa
jns
nop
fisubrl
roll
and
cmp
outsl
push
xchg
dec
mov
adc
jnp
aad
cmpsl
mov
jl
push
add
add
sbb
push
call
stos
dec
mov
inc
push
sub
cwtl
push
daa
dec
and
push
ror
ror
shl
aas
push
pusha
pusha
btr
mov
btr
aad
mov
daa
mov
bsr
mov
sub
cmc
clc
neg
lea
jmp
push
call
popf
xor
inc
jle
jmp
adc
add
push
call
outsl
push
call
jns
bnd
test
jp
adc
mov
mov
adcb
imul
insb
ss
fdivl
xor
repnz
lods
inc
sbb
jp
sbb
xchg
or
pushf
adc
fcmovnbe
stc
fcomp
mov
fistl
push
call
xchg
dec
lea
call
pusha
adc
lea
jno
pushf
lea
jae
pushf
lea
jne
call
mov
cli
sub
pop
mov
push
psadbw
sub
ret
rclb
jmp
jb
xor
pop
test
add
or
mov
xor
sub
pop
pop
pop
mov
dec
mov
fldt
and
movsl
into
loop
divb
pop
jnp
mov
inc
icebp
lea
or
xor
sbb
inc
int3
cli
sbb
aas
cwtl
push
pop
or
add
out
sbb
shl
cmpsb
or
mov
dec
lods
repz
cmp
sahf
movsb
sub
ja
mov
push
daa
mov
xchg
ror
sub
insb
loope
je
or
leave
pusha
inc
jbe
jbe
icebp
test
sub
sbb
pop
pop
dec
test
add
mov
into
imul
or
insl
cmp
addr16
cmp
inc
dec
test
jbe
add
xchg
sub
sbb
pop
loopne
jae
cmc
outsl
inc
dec
ss
cli
sbb
push
fildl
repz
cli
ret
cltd
pop
daa
aas
into
push
pop
and
and
sub
mov
addr16
out
sahf
sti
sbb
sub
cmp
enter
test
nop
cmpl
mov
dec
rcrb
or
fsubl
cmp
cld
fucomp
jmp
and
stos
cli
cmpsl
push
mov
insb
push
pushf
lods
test
ja
xchg
or
dec
pop
shlb
xchg
fistl
or
sbb
das
mov
ds
push
push
push
jg
stos
sti
jnp
cmp
scas
xchg
mov
sbbb
push
add
shlb
and
push
sbb
inc
idivb
push
inc
enter
test
dec
popa
sbb
mov
sarb
adc
xchg
movsl
cmpsl
inc
outsl
push
call
mov
ja
insl
pusha
aaa
movsl
jb
xchg
aas
lock
sti
enter
xchg
inc
jle
inc
cwtl
cmc
sub
je
add
cwtl
cmc
mov
in
jecxz
add
addr16
leave
mov
mov
cs
push
inc
jno
jl
rcrl
ja
mov
adc
scas
in
cmpb
fcomps
loope
sub
mov
push
dec
jno
pop
mov
adc
mov
xlat
movsb
fistl
push
call
pop
fucomp
add
call
push
call
cmpsb
leave
add
jne
add
mov
bt
call
push
call
lds
test
cmc
adc
jmp
fnstsw
mov
outsl
inc
aad
cli
lock
loop
or
insb
aad
aad
sub
pushf
sbb
mov
pusha
mov
jo
sbb
pop
sbb
xchg
cmpsb
andl
push
call
faddl
mov
test
jecxz
adc
add
mov
dec
call
wbinvd
mov
decb
in
cmp
loop
jns
iret
test
enter
into
daa
push
sarl
push
and
add
and
and
imul
enter
mov
jg
mov
addr16
jp
ja
sar
rorl
jg
dec
push
and
cmp
add
sahf
pop
xchg
mov
push
cltd
stos
or
adc
subb
std
mov
dec
sub
xchg
cmpsb
mov
enter
imul
in
arpl
cwtl
xlat
gs
inc
pop
mov
fisubrl
sub
aam
lret
in
ret
and
xchg
mov
lds
xchg
mov
in
mov
into
cmc
sbb
mov
sbb
and
hlt
push
lds
pop
jmp
dec
mov
hlt
es
xchg
lahf
sbb
data16
mov
cs
pushf
jp
push
cmp
mov
in
push
add
sbb
mov
xchg
cmpsb
ljmp
test
mov
fisubrs
jns
dec
cld
xchg
aas
imul
mov
lods
mov
push
shl
push
cmp
les
jb
ficomps
jne
push
cs
jae
mov
loope
mov
fsubl
imul
jbe,pt
cmc
cmp
aaa
xchg
sub
inc
xor
adc
inc
ret
jmp
insl
add
jne
into
xchg
xorl
jns
lcall
push
lds
add
pop
push
in
xor
xchg
mov
mov
xchg
fistl
add
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
xor
test
sub
adc
repz
test
and
adc
fs
ja
setns
inc
call
cmp
push
movb
lea
ja
rol
sub
shrd
add
sbb
add
shld
mov
and
neg
mov
cmp
test
cmc
repnz
pusha
pusha
lea
jne
setnp
movb
pushf
pusha
pusha
mov
not
pushf
bswap
jmp
push
call
in
jp
movsb
bswap
pop
pop
mov
movw
movb
lea
jmp
pushf
test
add
lea
jb
pusha
mov
pushf
pusha
pushl
pushl
lea
jmp
push
call
lret
sub
or
dec
sub
repnz
mov
scas
aas
sub
adc
mov
sbb
jmp
push
push
insb
lcall
sbb
mov
pop
mov
inc
nop
sub
dec
out
ffree
sbb
mov
inc
addr16
lea
dec
loopne
and
arpl
repnz
jl
jg
imul
les
lcall
add
sbb
add
call
cmp
in
btc
bsf
bswap
mov
test
pushf
movb
stc
test
movb
lea
je
xor
add
sub
sub
pushf
mov
movb
add
pusha
stc
cmp
mov
movzbw
stc
mov
cmp
cmp
clc
cmp
movb
push
lea
jbe
btr
dec
shl
bt
mov
movsbl
shl
shr
add
btc
mov
bsf
shl
add
pusha
movsbw
mov
ror
movl
rcl
mov
pusha
call
jmp
pushf
test
pushf
call
in
decb
add
outsb
sub
fsubrl
mov
mov
adc
mov
add
push
imul
stos
xor
jg
loop
ret
dec
pop
iret
xchg
jo
movb
dec
jns
out
dec
imul
std
lds
dec
pop
stos
in
jmp
out
and
inc
adc
jecxz
xchg
arpl
repz
push
test
pushf
mov
lret
insb
push
ljmp
andb
mov
xchg
adc
cmpsl
add
addr16
popl
push
mov
movb
movw
pushl
pushf
inc
stc
bt
ror
bt
pushl
test
add
jmp
add
pop
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
cli
decb
add
pop
xchg
out
inc
push
pop
pop
addr16
stos
ljmp
inc
cmpl
mov
cmp
arpl
ljmp
pop
push
mov
inc
and
orl
cmp
cmpsl
les
outsl
jae
shrb
cmp
loope
add
loopne
scas
cmc
aas
fadd
scas
mov
push
sub
rolb
in
repnz
pop
cs
xor
adc
inc
fiadds
and
fmul
sbb
sub
or
fistl
push
call
jbe
jo
insl
push
call
loopne
movsl
push
sub
push
push
sahf
lds
cs
and
adc
push
xchg
fcmove
jb
pop
push
cmpsl
mulb
faddl
dec
push
jg
add
icebp
inc
mov
outsb
cs
scas
jae
pop
repnz
in
aam
xchg
jne
inc
mov
lahf
sub
add
ficompl
mov
mov
xchg
and
andl
ficompl
pushf
inc
shll
inc
les
fisubl
lods
xchg
test
push
addl
lods
jnp
push
push
call
pop
pop
xchg
push
call
lea
pop
les
cmc
inc
pop
imul
mov
sbb
lods
push
lds
loopne
out
push
in
jge
minps
in
mov
into
adc
stc
xchg
mov
mov
pusha
enter
into
cmp
jb
and
dec
cmp
jns
cmp
and
sarl
mov
into
jmp
out
mov
and
mov
shrb
stc
scas
int
int3
adc
test
fistl
bswap
not
pop
call
outsb
test
cli
mov
lret
inc
stos
arpl
std
adc
push
pop
push
or
pop
test
sbb
add
cmp
aaa
out
mov
in
push
adc
jns
xor
test
fwait
popf
stos
cmp
or
out
push
push
int3
inc
cmp
call
push
mov
inc
mov
lahf
pop
repz
stos
mov
sub
roll
sub
sub
test
ljmp
cmp
in
sbb
sbb
rcrl
adc
sub
test
pop
adc
add
stos
pusha
push
movw
lea
jmp
pushf
cmp
jp
mov
push
cmp
xchg
add
lret
mov
cmp
xor
jb
xor
mov
std
repnz
push
xchg
adc
mov
and
cmpsb
add
push
pushf
pop
rcll
test
aad
pop
in
jno
pop
loopne
out
lret
jb
push
scas
js
xchg
push
call
sbb
ficoms
test
xor
add
in
sti
ret
add
subb
add
jb
pop
andl
es
jns
inc
jb
dec
xchg
outsb
outsb
pop
jge
adcl
shll
aas
mov
or
test
and
ljmp
ja
pop
mov
dec
push
lods
loopne
sub
mov
xchg
mov
mov
xlat
daa
repnz
pop
cwtl
mov
push
cwtl
pop
in
fistl
cmp
fildl
mov
aam
mov
aaa
out
xchg
inc
or
push
xlat
cmc
pop
pop
xlat
in
hlt
cwtl
repz
pop
push
push
pop
sbb
mov
cmp
ret
test
aad
lods
xchg
mov
orb
fs
push
in
or
pop
sbb
ficoml
mov
fcoml
mov
or
inc
ret
xlat
push
sub
stc
jl
inc
scas
xchg
in
repz
xchg
scas
shll
sub
cmpsl
mov
fdivrl
lock
jecxz
push
lods
jmp
dec
std
arpl
cmp
push
sbb
pushf
fwait
and
xchg
test
mov
mov
arpl
and
mov
mov
sub
sub
lods
push
mov
jo
jbe
pop
out
push
call
xchg
lahf
stc
cmp
stos
repnz
xchg
inc
je
dec
insl
mov
test
data16
out
insl
add
pop
inc
fistl
push
fwait
jns
xchg
push
add
xchg
adc
sarl
push
ds
dec
fsts
or
mov
les
or
jae
or
pop
xchg
scas
divb
mov
push
negl
xchg
mov
sbb
adc
push
jecxz
dec
sub
push
nop
fisubs
add
arpl
loop
test
dec
in
ljmp
ds
popf
andb
dec
push
ljmp
mov
sarl
or
push
in
adc
xchg
inc
lds
jg
push
test
mov
add
jae
lret
xor
lahf
test
sub
aam
ret
fistl
iret
fwait
sbb
mov
inc
pop
push
pop
jg
loop
adcb
jno
adc
mov
mov
inc
jae
cmp
int3
shll
cmp
xchg
mov
mov
notl
mov
scas
outsl
jmp
out
mov
in
push
into
jns
sbb
inc
ret
and
or
pop
fnsave
pop
lods
fwait
inc
push
mov
dec
jno
pop
imul
test
jo
push
aas
push
test
negl
int
pushf
sbb
jmp
xor
mov
stos
add
aas
push
push
hlt
jnp
push
lahf
pushf
cmp
mov
pop
pop
pop
jge
pop
jbe
bound
pop
jecxz
stc
scas
dec
mov
fistl
push
call
idiv
push
xchg
add
push
jne
add
mov
and
push
jmp
dec
mov
pop
jmp
push
jmp
movsb
fistl
dec
je
add
jnp
loope
repz
cmpsb
das
stos
push
xchg
and
dec
xchg
test
pop
enter
js
push
test
dec
lods
fistl
sbb
fbstp
popa
insb
iret
xor
sbb
dec
dec
xchg
sti
cmc
dec
mov
push
xchg
mov
rolb
adc
mov
cmp
xchg
mov
clc
out
push
call
add
jo
rol
add
int
ror
jmp
push
call
mov
out
inc
in
sub
adc
lahf
dec
stos
pop
lea
mov
mov
das
insl
or
jbe
mov
or
je
xor
bound
std
lret
mov
jmp
sti
lea
icebp
pop
xlat
sub
lahf
and
bound
loope
cli
and
pushf
jo
pop
mov
xchg
mov
lea
aam
sbb
enter
mov
inc
jmp
cs
inc
sub
test
xchg
mov
sbb
cli
sub
xlat
mov
or
mov
popa
mov
cmc
lock
lock
jnp
and
jl
shlb
shlb
out
jbe
mov
adc
xchg
jae
test
mov
cltd
inc
test
cmp
popa
in
cmp
mov
cli
call
dec
dec
repz
sub
dec
and
data16
mov
pop
xchg
bswap
les
imul
je
and
iret
je
rcrb
xchg
mov
cmp
push
call
push
call
xor
mov
test
sub
and
or
clc
add
pop
cmp
xchg
dec
inc
scas
pop
sub
icebp
and
xor
fwait
push
ret
dec
xor
dec
adc
sbb
movsl
fyl2x
outsb
test
push
repnz
ljmp
push
insl
and
xor
movsb
and
or
pop
data16
hlt
rol
cld
ret
mov
mov
inc
out
aaa
sub
test
in
or
das
push
call
sub
xor
mov
lret
stc
mov
pop
xor
cmp
lods
aad
aam
inc
sub
rclb
rclb
mov
cmpsb
insl
dec
cmp
shll
jnp
push
negb
movsb
aam
outsb
mov
or
clc
jo
inc
dec
cmp
dec
and
in
xor
fadd
andb
ljmp
cmp
mov
lock
fstpl
shl
adc
dec
sbb
cs
xchg
mov
jbe
push
call
xchg
cmovb
cmp
test
call
fcmovne
sbb
push
call
in
pusha
sbb
cld
jnp
fdivs
test
pop
data16
mov
lret
ja
push
pop
ljmp
gs
xchg
adc
pop
cmp
dec
popf
in
popf
js
xchg
mov
xchg
repz
xchg
mov
push
inc
pusha
jmp
outsl
or
sarl
cli
ljmp
fwait
dec
or
nop
mov
mov
jbe
stos
data16
shr
fimull
add
in
jl
and
mov
and
fsubr
call
sbb
fs
inc
xchg
mov
xor
cmpsl
xchg
mull
in
mov
iret
jb
inc
loopne
int
mov
fildll
rcr
inc
std
out
shrb
add
call
adcl
mov
int
inc
lea
pop
pop
mull
pop
add
cmp
lcall
inc
sbb
xor
inc
loop
loope
jecxz
scas
xchg
dec
mov
inc
adcb
and
sbb
mov
pop
cmpsl
into
test
or
fistl
xchg
mov
int
leave
iret
sbb
sbb
mov
push
shrl
cmpsl
test
popf
leave
adc
mov
ret
xchg
cmp
add
dec
lahf
pop
lahf
cmp
lret
pop
inc
jle
pop
lock
lea
sbb
adc
mov
xchg
adc
adc
sub
in
in
leave
arpl
lods
mov
mov
fwait
and
sub
imul
xchg
mov
pop
or
and
lret
add
ret
or
push
bt
cmc
and
test
test
add
call
and
cmp
cmp
mov
inc
sbb
dec
aam
mov
xor
icebp
and
sarb
subl
int
inc
cmc
xchg
mov
inc
shlb
jno
in
push
lock
mov
cmp
cmc
dec
inc
ljmp
xchg
xchg
movb
and
out
rcr
xor
adc
addr16
adc
mov
pop
mov
in
les
leave
aad
pop
test
or
push
jmp
out
xchg
pop
mov
mov
es
pop
and
fidivrl
shll
std
xlat
test
xor
ds
adc
nop
mov
xchg
xlat
jno
or
lret
push
jmp
pusha
in
cmp
loopne
adc
lea
sbb
shll
adc
cmp
test
test
push
outsb
fdiv
lret
pop
insl
adc
repz
iret
movsb
pop
sbb
ja
xor
sub
and
cwtl
mov
mov
add
insb
adc
mov
fistl
movl
popf
sbb
xor
in
push
movsb
push
js
sbb
dec
les
cmp
mov
xchg
and
jns
push
test
std
mov
neg
movsb
in
xchg
stos
sahf
or
icebp
and
inc
popf
das
cmpsb
test
cmpsl
imul
lea
inc
push
cltd
xor
sahf
xchg
ficomps
psrlw
lock
leave
data16
arpl
and
imul
lret
or
inc
mov
shll
cmpsl
mov
cwtl
push
push
sti
dec
out
std
ret
cld
sti
rorb
shll
dec
mov
and
xchg
mov
scas
dec
add
add
loop
lock
add
push
lods
fstps
inc
and
mov
aas
pop
push
xor
pop
mov
movsl
and
sarl
outsl
mov
ljmp
sub
jp
and
cmp
fnstenv
das
dec
pop
aam
inc
sbb
mov
dec
lahf
inc
inc
mov
insl
xchg
jmp
fistl
push
call
push
inc
and
push
adc
adc
mov
adc
add
mov
xor
jl
adc
test
inc
rcrl
xor
scas
cmpsb
lds
shll
sti
cltd
dec
push
and
cmpsl
nop
push
dec
cwtl
loop
push
xchg
pop
push
iret
push
ljmp
jo
xchg
sahf
imul
mov
pushf
dec
cmpsl
roll
dec
push
rclb
bound
push
repz
sti
cmp
cli
enter
jae
test
fcmovnu
shrl
mov
add
fistl
push
pop
mov
push
push
push
testl
pusha
mov
sub
and
loop
mov
mov
jge
xor
pop
movsl
es
iret
in
mov
xor
insb
push
mov
sub
addr16
in
sar
xchg
mov
add
adc
inc
adc
lahf
and
int
and
xorb
popa
repnz
and
in
adc
mov
fistl
dec
inc
jae
and
sbb
inc
adc
inc
lret
out
cmpsb
or
cmpb
cli
into
ficoms
jo
xor
imul
inc
adc
xlat
mov
les
sub
lods
cmp
sti
xchg
push
xchg
mov
cmp
mov
loope
lret
mov
repz
push
sub
je
dec
mov
cs
sbb
aad
xlat
push
xchg
sub
je
xchg
stos
pop
sub
push
repnz
aad
xchg
arpl
int3
pushfw
movsb
scas
enter
lcall
mov
mov
shl
lret
dec
inc
orb
js
jne
int3
lea
pop
inc
rcll
cmpsb
xor
sarb
mov
cmp
sub
mov
stc
xchg
aad
push
adc
jecxz
popa
movsl
addr16
mov
jb
cmovg
or
xchg
and
sub
sti
int3
std
divl
bound
dec
bswap
rorl
cmp
insb
push
fistl
xchg
ds
jae
sub
movsb
and
jbe
xor
pop
adc
push
pop
jne
mov
repz
xchg
dec
shll
push
push
xchg
xchg
dec
sahf
nop
es
lret
jg
js
sbb
bound
xor
test
pop
repnz
dec
iret
dec
fs
scas
stc
movsb
out
and
jae
mov
inc
pushf
out
dec
cs
test
incb
pop
jecxz
adc
add
sahf
or
cmp
fistl
pushf
stos
not
mov
push
pushf
call
mov
add
pusha
movw
cmpsb
call
push
call
push
ss
test
pop
js
test
xchg
pop
xchg
es
adc
loop
inc
jnp
popa
and
aas
dec
loope
lods
jns
test
mov
sbb
addr16
sbb
sarl
inc
xchg
fisubs
rorb
mov
cs
or
pop
jae
push
nop
dec
adc
cmpsb
dec
adc
sarl
push
stos
outsl
dec
xchg
sbb
pop
sub
cli
sub
mov
cmp
sti
cmp
and
fnsave
xchg
das
cmpsb
sub
shlb
clc
pushl
fcmovu
jl
xchg
mov
inc
pmulhw
sahf
inc
jp
jnp
test
mov
jo
jne
pushf
sti
or
push
dec
inc
xchg
fisubrs
mov
xchg
mov
arpl
lret
loop
stos
sbb
dec
out
stos
mov
lret
push
scas
jnp
mov
test
cmpsb
mov
and
push
cmp
dec
mov
mov
ficompl
jb
push
pop
ljmp
js
or
movsb
adc
adcb
xchg
sub
mov
cmp
rolb
sbbb
out
push
ljmp
mov
pop
mov
cmp
in
and
popf
fcoml
lret
scas
aad
lds
dec
movsl
call
sub
push
in
sbb
mov
sbb
repz
lds
inc
lds
in
movl
lea
push
sti
ret
fs
add
pusha
cmova
int3
fistl
dec
js
push
lock
sti
stos
aaa
cmc
sar
data16
lret
push
rcl
inc
push
inc
jecxz
xchg
test
adc
daa
call
nop
adc
cmp
or
fadd
ror
inc
push
lock
mov
out
sub
xchg
outsl
loope
shlb
nop
loop
mov
dec
scas
push
imul
jne
dec
push
push
mov
loopne
mov
push
xor
mov
xchg
mov
js
mov
fistl
push
call
rolb
add
data16
je
imul
dec
jb
inc
js
push
call
lds
adc
add
cmp
iret
call
pop
fs
xchg
rcrl
fldl
pop
lea
cmc
jbe
aad
dec
cltd
sub
inc
test
mov
shll
popf
jg
mov
addr16
cmp
lods
dec
xchg
test
xor
sub
sub
xchg
xchg
mov
lea
rcrl
sarl
pop
mov
cltd
inc
in
fistl
pusha
lea
je
jge
clc
cmc
stc
cmp
jns
pusha
lea
je
bt
stc
cmp
pusha
pushf
pushl
mov
lea
je
pusha
pusha
lea
jmp
push
call
push
hlt
mov
insl
adc
arpl
mov
dec
test
jmp
push
mov
dec
cwtl
rorb
cmpsb
out
lret
test
mov
xchg
and
leave
xchg
xchg
test
push
lods
cmp
adc
stos
ljmp
dec
dec
cmp
and
hlt
scas
stos
adcb
jl
in
mov
push
sub
in
mov
insb
sbb
sbb
xchg
sbb
xchg
cmp
flds
inc
lods
negl
rorl
sahf
sarl
add
mov
and
push
sbbb
and
cli
push
dec
xlat
loope
jl
dec
shlb
in
cmpb
stos
mov
adc
mov
inc
mov
mov
jecxz
xor
jb
sbb
mov
lds
add
mov
mov
mov
lret
mov
jmp
lret
push
jl
xlat
xchg
ljmp
xchg
lea
pop
push
inc
or
nop
add
in
xor
xchg
loope
xchg
mov
mov
jne
add
pusha
inc
sbb
push
js
in
popf
out
push
xor
aas
adc
push
addr16
adcb
jp
shlb
cmpl
aam
aam
push
push
icebp
stc
mov
sahf
jno
mov
dec
lds
pop
js
in
add
in
cmp
add
cmp
std
shr
pop
push
out
test
arpl
xchg
mov
in
jo
in
dec
aad
fistl
into
sbb
cmp
add
cmp
hlt
mov
es
pushf
jns
mov
lahf
test
fidivrl
sbb
cmp
push
sbb
mov
or
mov
mov
mov
push
jo
jne
lahf
inc
fistl
xor
test
add
sbb
sahf
jae
lods
les
and
add
sahf
nop
pop
and
inc
rclb
and
ficomps
stc
outsb
sbb
push
xlat
je
xchg
ret
xor
pop
xor
stc
adc
cwtl
ficomps
int3
sti
mov
xchg
aam
jg
lds
mov
orb
jb
pop
test
rcr
push
seto
or
inc
pop
dec
bound
test
jbe
ss
imul
jbe
sbb
hlt
sub
push
add
fisubs
mov
mov
dec
bound
xor
mov
popa
push
outsb
cld
push
sbb
fs
pop
cli
jg
mov
jmp
push
dec
mov
mov
ja
fistl
call
push
call
test
add
inc
gs
outsl
fs
gs
imul
add
adc
add
dec
dec
dec
cs
insb
add
repz
mov
lahf
push
mov
lods
sti
cmp
push
pop
enter
call
sub
mov
mov
fiadds
jecxz
fcoml
jb
mov
cmpsl
mov
insb
insb
cmp
and
mov
pop
and
jmp
jge
into
std
inc
fisttpll
ficoms
cli
adc
mov
out
cmp
test
clc
mov
and
rclb
add
jnp
out
push
sub
fistl
shll
out
push
and
push
pop
push
adc
inc
sahf
popf
lds
lcall
push
imul
in
xchg
insb
lods
xor
mov
aad
add
jge
cmp
in
fdiv
xor
adc
dec
rcrb
push
mov
mov
cmp
pushf
xchg
sub
pop
adc
bsr
aam
pop
cmp
xchg
ret
lock
pushf
pusha
movl
pushf
pusha
mov
pushf
pushl
ret
xchg
lret
sbb
add
lds
dec
xor
dec
jle
mov
and
stc
or
push
push
xor
mov
aaa
mov
sub
sbb
pop
mov
jg
cmp
and
enter
push
mov
in
push
insb
mov
cli
jns
adc
pusha
jo
mov
mov
mov
dec
nop
aam
inc
scas
rol
mov
push
fstpt
pop
sub
mov
push
fistpll
jmp
or
jnp
dec
das
jge
dec
mov
cmp
rcr
xchg
les
int3
push
call
mov
ret
sub
lahf
inc
mov
jb
pop
jecxz
pop
or
addr16
les
je
push
cmp
add
fisubs
mov
in
inc
dec
cmp
lods
push
mov
mov
inc
data16
cmp
sti
mov
add
jmp
xchg
sbb
fbstp
scas
lea
lcall
pusha
dec
or
fwait
repz
jbe
inc
cmp
xchg
or
jo
cmp
xchg
lds
mov
push
call
loop
jmp
fwait
shrl
leave
push
pop
cmp
cwtl
lods
pop
aad
or
popf
mov
test
pusha
cmp
add
jmp
mov
and
ret
lock
fsubrl
jl
sbb
or
dec
xchg
or
jns
cmpl
mov
adc
add
stos
ljmp
xchg
mov
fdiv
fsubr
jp
scas
fistl
negb
jle
or
shll
aas
xchg
sub
dec
fstpl
gs
scas
pop
fnstsw
mov
add
sbb
jnp
jle
or
cmpsl
and
and
mov
mov
jae
adc
in
inc
sbb
mov
sub
jecxz
and
mov
xor
inc
mov
iret
lea
sub
mov
inc
pop
call
dec
out
mov
sti
xchg
xchg
mov
push
adc
fistl
rcr
add
rcr
pusha
mov
stc
pusha
cmpb
pushl
push
lea
jne
aas
xor
or
btc
mov
jmp
lock
mov
dec
ljmp
push
adc
mov
orb
sub
mov
jbe
jnp
jne
sbb
outsb
dec
and
pop
repz
movsb
cmp
pushf
int3
pushf
cmp
ljmp
pop
les
push
stc
stc
mov
out
ljmp
movsl
dec
cli
cmpsb
xor
xor
jbe
pop
push
in
xor
push
nop
mov
dec
xchg
push
jge
sbb
push
fdiv
leave
xor
jecxz
dec
and
fcmovne
lcall
enter
testb
adcb
mov
push
adc
mov
es
pop
cmc
fs
daa
daa
push
cmpsl
es
inc
ret
imul
xchg
xchg
add
push
fdivp
jae
mov
sbb
push
shlb
mov
inc
cmpsb
into
movsb
push
das
sti
lds
sub
daa
fimuls
cmp
xchg
int
into
push
call
pop
gs
call
push
call
jmp
out
mov
adc
gs
adc
sbb
dec
adc
jle
xor
mov
pop
mov
popf
jp
mov
fwait
shlb
push
ljmp
dec
jb
jae
fmuls
push
mov
adc
mov
jle
popa
pop
adc
mov
cmp
jg
lret
inc
lahf
jle
inc
mov
fistl
sub
lret
push
cmp
dec
loope
insl
ficomps
mov
jp
push
enter
out
mov
xor
call
lods
movsb
loope
push
ja
xor
add
fimull
inc
push
fdivr
sub
jnp
imul
fimull
fs
pushf
adc
ss
shrl
loopne
jnp
test
xchg
enter
push
and
ds
push
jle
hlt
sub
addr16
mov
loopne
test
ret
push
lds
adc
jbe
out
inc
mov
fmull
pop
insl
add
xchg
icebp
mov
push
call
test
pop
lcall
pusha
scas
movsl
mov
jmp
xchg
mov
sbb
cli
lret
push
jo
and
je
lds
sub
cmpsl
sub
aam
fs
and
sahf
mov
cli
dec
mov
sbb
shll
movsb
fistpl
jb
pop
sbb
addr16
mov
inc
not
fbstp
cld
and
sbb
sub
dec
data16
add
dec
idivl
push
jge
inc
add
and
leave
jmp
push
loopne
or
stos
or
mov
xchg
push
xor
into
loope
ja
or
or
or
xor
sahf
mov
add
and
cmp
mov
mov
outsl
dec
add
jg
ljmp
movsl
xchg
sub
push
mov
adc
sub
mov
pop
js
sub
mov
inc
out
jnp
fwait
mov
sbb
adc
pop
sbb
rorb
mov
mov
xchg
fistl
xchg
or
mov
in
out
dec
repnz
lea
ficoms
scas
xchg
fwait
ss
das
aaa
das
out
dec
push
inc
push
out
movl
jle
add
mov
xrelease
push
xor
bswap
adc
fdivl
jle
dec
pushf
shlb
sbb
cmp
loope
jl
push
sub
pushf
cmpsl
mull
xor
insl
pop
and
jp
clc
mov
xchg
xchg
cmp
cmp
cmp
stc
scas
or
mov
inc
push
push
das
fistl
or
pop
dec
enter
mov
push
das
push
in
add
cmpsl
cmpsb
push
repz
fsubrp
pop
jg
pop
daa
sub
or
adc
sub
mov
mov
add
les
sti
imul
icebp
xor
insb
not
inc
lods
mov
movsb
imul
adc
test
and
popf
in
mov
in
sahf
and
adc
pusha
out
shll
and
inc
repz
inc
and
xchg
lret
cltd
fnsave
xor
test
lods
jecxz
add
inc
mov
pop
ret
std
dec
push
pop
sahf
push
push
inc
mull
addb
push
andl
push
insl
cli
jge
cmp
adc
mov
cmpsl
mov
jnp
in
loope
or
in
mov
adc
fwait
inc
xlat
lods
inc
or
mov
ljmp
in
add
daa
jbe
mov
xlat
mov
pop
pop
mov
adc
mov
jno,pt
jecxz
int
scas
mov
movl
ss
add
push
ss
push
pop
popf
das
fistl
push
call
rclb
pop
and
add
mov
test
ljmp
shll
bound
lcall
imul
xchg
sbb
in
mov
pop
push
adc
iret
sbb
dec
movb
inc
outsb
pop
and
cmp
cmp
push
int
add
and
scas
adc
pop
inc
out
pop
ljmp
jge
jp
sub
cmpsb
push
adc
dec
jmp
mov
mov
mov
xchg
int3
sbb
insl
bt
test
sub
stc
cmp
cmp
jmp
pop
aaa
push
sub
leave
arpl
frstor
popf
pop
movb
add
rcrl
mov
jp
cmc
gs
mov
out
movl
cmp
pop
ds
ss
loopne
push
int
clc
fs
xchg
mov
sbb
dec
jle
mov
push
pop
cmp
incb
pop
adc
int3
into
adc
mov
cmp
push
test
test
pushl
pushf
movb
pushl
lea
je
pusha
clc
sub
call
test
bound
sub
sub
xchg
movsl
mov
jle
push
popa
pop
add
mov
sub
pop
mov
pusha
ja
dec
ret
pop
adc
les
xchg
int
pop
loope
jbe
adc
add
pushl
pusha
ror
movb
mov
dec
call
push
call
subl
jne
add
pusha
push
popf
push
push
dec
push
lret
dec
popa
pop
incb
cmpsb
mov
bound
jnp
lret
repz
pop
insl
jne
push
dec
lock
sarb
pop
loop
mov
fwait
push
lret
sub
stos
int
ret
pop
sahf
sub
sbb
stos
jg
ret
adc
rcrb
mov
mov
jg
pop
jnp
xor
int
jo
cmp
cmpsl
mov
fistl
jmp
push
push
xor
xor
fs
insb
add
and
pop
jecxz
mov
sbb
add
pop
add
push
ficoms
and
mov
dec
in
cmpsl
xchg
addb
pop
out
jb
sbb
dec
test
cmp
mov
dec
xchg
scas
jne
jbe
ja
cmpsl
add
sahf
imul
mov
mov
fld
out
jae
les
call
adc
xor
pop
cmp
cmp
cmp
sub
aas
pop
pop
push
in
sbb
pop
das
cmp
mov
push
or
inc
jg
sbb
mov
inc
cmpsb
mov
in
cmp
call
push
loop
add
jle
xchg
stos
enter
cltd
pop
adc
sahf
gs
out
mov
lret
clc
mov
and
jne
and
dec
cmpsb
jns
jbe
ds
sub
mov
lea
and
cltd
je
adc
andb
sarb
mov
pusha
cmp
call
aas
in
add
cmp
push
pop
mov
sbb
dec
dec
jmp
pop
fsubl
test
fisttps
les
mov
add
call
cli
sub
push
call
xorb
sub
push
call
out
push
call
outsb
or
test
mov
adc
or
dec
cmp
test
repz
sbb
xlat
in
int
adc
mov
push
dec
push
je
cmp
jbe
mov
sub
icebp
sbb
cwtl
test
lcall
or
fstps
jno
mov
nop
jle
dec
lcall
sub
aaa
mov
add
mov
loopne
mov
out
or
ficomps
dec
mov
cmp
cmp
int
sbb
jns
push
int3
bound
fistl
mov
imul
mov
push
in
cli
sub
mov
mov
and
stos
cld
cmp
mov
in
bound
xchg
inc
fsubs
inc
sti
shl
pop
ja
xor
clc
ljmp
mov
or
addr16
cmp
cld
push
mov
test
cmp
sarb
sub
mov
outsl
scas
iret
sbb
popf
mov
adc
xor
xor
inc
repz
push
sbb
jle
sub
jp
fistl
jmp
jbe
js
bound
movsl
addr16
ljmp
call
push
fldt
mov
rcrb
pop
pop
xor
cwtl
and
pop
aad
cmp
push
pop
sbb
test
loop
pop
mov
stc
popf
xchg
orl
mov
mov
jno
mov
lods
sbb
jbe
xor
sub
or
jecxz
sub
ret
push
movsl
arpl
fimull
fidivrs
out
xchg
rcll
aad
mov
cs
or
loopne
push
jne
aad
hlt
mov
sbb
jno
push
mov
push
in
rcrl
push
cmp
fdivrl
hlt
rcrb
jns
pusha
cmp
les
jbe
cs
mov
add
in
call
imul
xchg
fs
sbb
cmpsb
sbb
loop
inc
xchg
sahf
sbb
pusha
xlat
xchg
lods
sub
std
arpl
push
dec
arpl
popa
sub
cmpsl
fistl
push
call
add
or
and
pop
mov
adc
mov
jns
cmp
mov
and
pop
xchg
aam
push
sahf
jge
xchg
icebp
data16
inc
adc
sub
mov
pop
xchg
pop
push
es
in
push
ret
jne,pn
mov
sbb
pop
adc
imul
add
cmc
adc
addr16
test
ja
bound
fistl
imul
mov
sub
jns
lds
xlat
xchg
push
aam
inc
ficomps
push
fwait
in
jo
rep
sub
test
mov
xchg
push
sbb
cmc
sarb
inc
xchg
dec
lea
mov
adc
dec
sbb
and
lds
jge
xchg
ljmp
xor
cmpsb
fisttpll
mov
mov
pop
js
sub
imul
ljmp
lret
mov
dec
dec
in
xchg
sarl
insl
mov
cwtl
dec
xchg
std
scas
enter
adcl
inc
and
pop
mov
push
insb
shl
ret
inc
rcll
adc
sbb
call
lock
jb
sbb
ja
push
imul
jbe
loop
inc
subl
popa
sar
in
leave
in
adc
mov
add
pop
mov
loope
lcall
in
xchg
nop
pop
or
jp
push
lods
lret
fidivl
jns
pop
int
pop
fistl
lea
jne
call
push
call
stc
mov
sbb
add
add
cmpsl
adc
xor
loope
movsb
arpl
adc
pop
jno
fnstsw
xchg
cld
popf
mov
out
loop
sub
jbe
jne
daa
and
out
punpckhbw
inc
testl
adc
arpl
js
out
pop
mov
orl
rcr
mov
adc
pop
psadbw
fistl
push
call
out
pop
push
call
movsl
out
jns
mov
fdivl
popf
ret
mov
clc
lods
cmp
in
xchg
jno
xchg
fs
jne
inc
pop
dec
jecxz
cwtl
inc
nop
subl
dec
mov
aas
movsl
pop
imul
or
pop
das
cwtl
push
lahf
movsl
xchg
test
leave
lock
jne,pt
out
jne
cmpsb
cwtl
push
shr
idivl
rolb
dec
mulps
and
cmpsl
lock
lahf
or
popa
inc
or
dec
push
xor
xchg
aam
or
jg
adc
mov
cmp
cs
loopne
inc
jge
enter
fbstp
push
sub
enter
ret
loope
orl
pop
push
add
pop
repnz
loope
test
mov
adc
mull
gs
repnz
sub
mov
mov
sti
jmp
aas
imul
lret
jne
je
dec
sub
or
loop
pop
popa
ret
iret
sbb
das
adc
inc
leave
fistl
sbb
aad
popf
jno
lahf
into
xchg
shl
into
mov
dec
mov
jno
pusha
pop
frstor
and
pop
add
jbe
pop
pushf
fisubrl
in
ds
inc
lcall
notb
aas
inc
test
jmp
dec
int
inc
push
add
push
aas
les
mov
into
test
imul
jbe
out
sahf
cmp
sub
lcall
jns
xor
jl
dec
sub
mov
sti
or
adc
arpl
xchg
aad
dec
jnp
jne
rep
sbb
loopne
jns
popa
sbb
out
push
sbb
mov
jmp
rorb
mov
addb
add
je
lret
loope
test
sub
aad
fmull
and
aam
in
inc
xor
inc
test
inc
xchg
pusha
or
mov
mov
loope
lods
pop
frstor
jecxz
fistpl
jg
fs
scas
mov
aad
inc
mov
test
movsb
ficoml
aam
cmp
mov
cmpl
mov
popf
lods
es
sbb
testb
jne
icebp
mov
fldenv
and
dec
clc
xchg
xchg
mov
jl
iret
adc
inc
movzbl
jnp
sub
ror
cmc
ret
and
pop
mov
test
enter
add
jp
loopne
inc
popf
and
in
xor
out
mov
add
insb
add
call
dec
pusha
mov
jmp
push
call
add
incl
jmp
dec
lcall
jo
paddusw
stos
inc
sub
mov
mov
out
mov
nop
xor
bound
hlt
adc
mov
mov
addb
daa
pop
mov
hlt
xchg
mov
std
cmc
mov
fstl
jne
cmp
add
xchg
cmp
mov
push
in
stos
push
insb
aam
xchg
jo
pop
pop
imul
xlat
std
push
dec
push
call
cmpsb
daa
incl
xchg
cmp
pushf
out
push
jbe
mov
loopne
pop
imul
dec
scas
sahf
std
mov
out
cltd
adcl
or
add
or
and
sbb
lods
fnstenv
adc
shrb
sbb
mov
call
imul
imul
orl
aaa
pop
rolb
adc
inc
sub
addb
lods
mov
jo
divb
xchg
fdivs
add
call
jle
insl
sar
stc
push
adc
add
jne
add
jbe
pop
cs
call
lds
sbb
push
call
cmp
adc
mov
insb
lahf
dec
addr16
das
loopne
call
test
pusha
rcrb
aam
repz
lret
push
dec
call
and
cmpsl
jae
fcmovnb
mov
pop
lds
dec
fwait
js
pop
pop
subb
mov
scas
and
mov
dec
pop
shrl
iret
subb
mov
in
orb
mov
dec
aas
test
mov
mov
sub
enter
je
jmp
mov
insb
or
or
add
inc
xlat
popf
adc
fsts
push
call
scas
mov
xor
test
mov
adc
cmp
stos
mov
lea
jmp
push
call
cmp
mov
add
adc
cld
push
call
and
test
ds
push
sahf
push
das
sarl
and
cmpsl
imul
xchg
call
push
mov
mov
js
repz
test
push
push
andb
je
in
mov
scas
adc
xor
pop
sbb
lea
test
sub
mov
decl
push
jae
cld
cld
stos
fsubrl
inc
inc
xor
fidivs
push
fimull
ss
jo
dec
fadd
inc
push
jmp
or
ljmp
mov
lret
fs
inc
and
shrb
ficomps
popa
and
test
pop
jmp
add
fwait
mov
in
fsubr
inc
dec
in
lods
add
lea
xchg
push
testl
mov
popa
cmp
xor
rclb
lock
outsl
and
cld
jle
mov
xchg
inc
mov
aam
inc
ret
lahf
nop
fdivrl
pop
dec
movsb
xchg
mov
fld
mov
cmp
mov
mov
test
cs
aas
insb
cmp
nop
or
xchg
mov
and
jnp
sbb
xchg
mov
cmp
fistl
push
imul
mov
mov
jns
xor
or
std
mov
cwtl
xchg
in
push
cmp
sbb
aas
icebp
loope
lods
aam
push
xorl
lds
mov
hlt
sbb
mull
pop
cwtl
jo
inc
add
cs
rcll
jle
inc
in
into
adc
or
test
sbb
mov
loope
mov
xchg
imul
imul
mov
jge
imul
sbbl
fistl
adc
repnz
and
mov
sarb
sub
push
jmp
jbe
xor
scas
stc
inc
push
xchg
popa
fpatan
dec
jbe
aas
push
movsl
sbb
mov
lea
push
lret
xor
jo
cmp
xor
popf
popf
mov
adc
xor
push
adc
push
or
push
sub
fdivrl
sbb
add
mov
xchg
sub
test
xor
xor
pop
jae
jne
je
or
push
pusha
cs
sub
popf
add
push
lcall
mov
out
nop
scas
xor
shll
in
dec
cmc
push
call
fidivrs
stc
into
imul
mov
adc
rcrb
jg
mov
fisttps
out
aam
jmp
xorl
fistl
push
call
ljmp
dec
or
mov
inc
push
sub
xchg
and
xchg
xchg
pop
lahf
pop
fildl
xchg
xor
xchg
mov
cmp
dec
mov
push
movsl
repz
push
dec
iret
push
les
ds
movsl
xor
lock
das
out
outsb
xor
add
fstl
enter
loope
iret
dec
imul
addr16
mov
pop
in
adc
pushf
push
fwait
loop
sbbl
cltd
jg
fnstenv
insl
test
fnstsw
fistl
bound
fcos
mov
pop
mov
cmp
pop
or
push
mov
lds
test
leave
jno
lea
cmp
out
mov
fistl
push
call
icebp
push
call
iret
cmp
cltd
jne
out
xlat
inc
outsb
hlt
fwait
mov
add
movsb
bound
xor
push
sti
clc
sti
pop
dec
jae
nop
mov
cmp
sbb
xchg
test
ljmp
xchg
pop
and
imul
xchg
mov
mov
std
ss
mov
mov
add
cld
sub
xor
sbb
dec
mov
mov
sahf
or
push
push
xor
in
xchg
icebp
cmp
mov
fistl
push
call
out
xchg
push
call
fcoml
lret
mov
and
mov
in
popf
pop
sub
loope
cmc
sbb
nop
insb
adc
xor
jne
cli
fcom
or
or
push
ret
or
outsb
aam
dec
mov
ret
mov
mov
fst
sub
xor
cmp
push
shlb
push
cmp
orb
cli
aad
cmp
inc
and
cs
push
shl
xchg
rcll
mov
jl
xchg
add
call
test
lret
in
add
and
jae
clc
cmp
cmp
call
push
call
or
insb
pop
pop
jno
jp
clc
push
inc
and
lock
jecxz
push
ds
xchg
push
fwait
mov
add
int
sarl
cmp
sbb
sbb
fsubs
push
les
ficompl
iret
and
adc
std
xor
daa
mov
push
ret
data16
mov
push
cmp
dec
fwait
andl
dec
daa
fdivl
xchg
filds
mov
test
lock
add
xchg
cmp
adc
add
call
push
call
push
call
inc
sbb
mov
jecxz
dec
jg
fs
sbb
push
push
test
sbb
mov
sub
aam
scas
fsubp
adc
xor
pop
dec
aaa
sbb
jmp
mov
fidivrs
push
push
repnz
or
jmp
lret
push
call
adc
ficomps
xor
lahf
loope
push
mov
scas
sub
ja
pushf
mov
xor
inc
inc
push
call
movsl
add
fiaddl
arpl
das
bnd
xchg
hlt
arpl
xchg
mov
pop
lret
cmp
cmp
add
leave
sbb
popf
mul
add
ficoml
mov
mov
or
scas
imul
test
aam
hlt
repnz
imul
pop
cmp
add
aaa
push
fwait
mov
cmp
mov
test
sahf
mov
lcall
xor
stos
pop
or
pop
xor
cmp
das
xchg
xchg
loopne
js
push
call
inc
push
call
scas
or
add
add
test
rcr
add
or
cmpsb
push
sub
pop
cld
outsb
cmp
dec
vandnps
mov
mov
mull
enter
mov
scas
outsb
hlt
in
in
mov
std
pop
das
out
cmp
xlat
push
sub
and
inc
test
pop
mov
add
pop
loopne
dec
push
icebp
jnp
push
push
incl
push
cmpsb
sbb
xchg
sbb
mov
jns
lods
xchg
push
fistl
dec
xor
add
adc
or
insl
xchg
dec
pushf
notb
clc
mov
daa
xchg
mov
xchg
out
push
orl
addr16
ficoms
in
and
int3
cmp
ret
das
mov
das
jae
ret
push
jb
add
rcrl
sub
ja
movsl
push
mov
out
fwait
cmpsb
lods
adc
lods
cmp
jmp
in
xchg
aaa
ret
xlat
adc
int
add
lret
mov
loop
mov
fistl
aas
lods
pop
repnz
jnp
scas
jae
adc
std
fcmovb
gs
popa
rorb
daa
sub
and
movsb
push
push
scas
test
push
pop
jp
pop
or
xor
xlat
movsb
cwtl
movsb
out
sbb
shrb
mov
xchg
adc
imul
xlat
pop
stos
jmp
pop
inc
aad
lret
jmp
and
xor
mov
popa
test
sahf
mov
cli
fmul
mov
sub
push
fwait
xor
xchg
cmc
jecxz
xchg
loop
mov
jecxz
mov
out
and
pop
pop
icebp
jns
test
ret
subl
jnp
dec
jne
push
mov
rcll
sbb
xor
dec
sti
push
xor
xor
addr16
mov
sbb
stc
xor
shll
cmpsl
lret
mov
test
aas
pop
jp
adcl
push
jnp
call
pushf
jno
sbb
imul
xchg
jg
push
xchg
loop
push
inc
push
call
clc
xchg
push
pop
fwait
cltd
outsl
dec
mov
mov
sbb
outsl
insl
mov
sbb
pop
das
cltd
repz
or
xor
scas
ret
outsl
dec
adc
cli
in
push
test
xchg
push
push
lea
mov
jb
dec
mov
fidivrl
stos
mov
inc
mov
repz
sbb
popa
out
jmp
leave
cmp
mov
xchg
jecxz
add
hlt
jle
arpl
mov
imul
sub
cmpsb
mov
insl
cwtl
mov
sub
cmp
imul
sub
lret
iret
out
cmp
jne
jg
pop
popf
add
and
pop
nop
lods
in
add
cli
repz
fimuls
push
ret
xchg
shl
cld
fnstenv
ljmp
repnz
imul
or
adc
leave
xor
lock
push
or
loopne
jo
out
cld
jae
std
fistl
fs
movl
mov
mov
in
jecxz
lods
int3
sub
sbb
ret
lods
and
incb
addr16
ficomps
roll
incl
pop
or
pop
addr16
lods
push
fsubrs
out
or
into
lret
or
ja
inc
cld
loop
inc
gs
bound
clc
andb
inc
imul
mov
cmp
xchg
in
push
out
adc
addb
cmpsb
xchg
mov
loope
xchg
sub
popf
jl
mov
outsl
das
outsl
inc
or
mov
mov
or
popf
shrb
jb
push
mov
lods
sbb
aam
or
and
mov
dec
pop
pop
cmpl
nop
int3
or
repz
rcrl
or
into
sub
xchg
sub
cmp
daa
sbb
inc
loop
movsl
sbb
mov
dec
rcll
imul
repz
subl
cs
and
mov
push
popf
sti
repnz
dec
mov
xchg
mov
sub
or
xchg
lcall
dec
ds
mov
push
fsubrl
icebp
sub
loopne
mov
jnp
sbb
push
xchg
fmuls
and
lret
ja
push
ret
xchg
dec
xchg
add
push
cmp
mov
add
in
mov
ljmp
add
stos
in
pop
call
mov
push
fcomp
xchg
out
add
push
call
and
mov
pop
add
idivl
aad
mov
add
pop
pop
mov
pop
in
cmp
mov
dec
scas
dec
sub
sub
imulb
mov
dec
pop
loop
mov
gs
in
xchg
and
test
outsb
and
pop
fldcw
mov
jge
lcall
movsb
fidivrl
or
mov
sub
sub
fiadds
outsl
jmp
push
add
popa
xchg
lock
test
add
imul
xchg
in
cmp
mov
xor
xchg
xor
icebp
out
push
in
jo
dec
adc
xchg
pop
dec
cmp
scas
inc
inc
mov
imul
mov
mov
adc
sub
std
pop
inc
rcl
jge
sub
pshufw
repz
jmp
inc
xor
xchg
scas
mov
pop
hlt
imul
mov
outsb
test
in
mov
movsb
mov
xchg
jl
stos
cltd
das
movsb
stos
xchg
js
dec
mov
rorl
add
arpl
mov
movsl
cmpsb
imul
test
mov
pop
jb
xchg
shrb
ljmp
adc
enter
jno
out
pop
xchg
mov
pop
orb
push
pop
stc
dec
or
xchg
inc
pop
mov
gs
xchg
mull
cli
push
subl
pop
dec
and
jecxz
push
adc
leave
or
out
iret
mov
ljmp
mov
js
inc
outsl
mov
mov
mov
and
xchg
out
xchg
fisubl
add
push
decl
rcrb
mov
add
pop
call
pushf
lea
je
add
movsbw
movsbw
mov
lea
mov
shrd
add
jmp
push
call
push
lods
out
jae
adc
add
cli
xor
push
fimuls
sub
sarl
scas
dec
and
sbb
aam
outsl
push
xor
hlt
imul
insb
jo
xchg
lods
das
cmp
out
outsl
rorb
mov
mov
mov
inc
sbb
int3
adc
xchg
mov
sbb
jo
jns
and
inc
xor
fwait
inc
sub
dec
stc
adc
in
mov
int3
cs
or
sbb
cmp
ret
xchg
gs
jae
ficompl
lds
adc
or
mov
dec
xchg
int
push
xlat
fistl
fists
xchg
lret
sbb
shll
js
daa
in
pushf
dec
push
insl
lods
in
and
jo
ss
scas
sub
movsb
or
cld
leave
jae
int3
xchg
dec
outsb
ljmp
adc
xchg
mov
sbb
mov
sbb
scas
scas
mov
jg,pn
out
test
cmpsl
sahf
and
test
cmp
jge
mov
dec
ficompl
mov
mov
add
lods
enter
clc
enter
mov
jo
mov
add
outsl
inc
cli
jae
enter
jno
fwait
add
adc
cmp
repnz
jg
mov
outsb
in
sub
movsl
and
jecxz
movsb
xor
mov
js
push
iret
lds
ss
pop
push
fwait
cmp
adc
add
mov
and
mov
mov
pop
sbb
mov
adc
xchg
call
jle
adc
add
push
call
push
lds
ja
adc
jmp
repz
mov
rcl
mov
jno
nop
mov
fbld
outsl
push
and
fs
sub
int
pop
jne
jb
xor
xchg
xor
dec
cmp
cwtl
mov
or
and
testl
fldcw
jge
mov
push
imul
cmp
dec
das
in
sbb
xchg
and
lret
je
dec
and
push
jecxz
loopne
inc
jmp
aas
fistl
push
call
rolb
mov
mov
ss
push
push
mov
sbb
add
xchg
push
push
push
scas
cmp
inc
mov
push
jmp
int
sar
jnp
sub
cld
pusha
pop
cmp
dec
and
add
ret
repnz
insl
add
push
ss
xchg
jmp
inc
aaa
mov
pop
imul
jns
dec
ss
fisubrl
into
dec
stos
ljmp
addb
sbb
mov
adcl
cmpb
aas
repz
mov
push
idivb
and
pop
fmul
xchg
sbb
insl
mov
pop
inc
rol
shll
cmpsb
out
mov
sbb
xchg
inc
mov
in
out
sub
xchg
out
cmp
outsl
js
popf
jp
or
adc
je,pn
xchg
outsb
je
pop
add
jmp
push
popl
add
je
popa
jbe
inc
imul
add
or
add
cmp
mov
pop
aas
inc
mov
inc
mov
jbe
or
mov
ret
xchg
and
sahf
push
out
inc
xlat
xchg
sbb
push
insl
out
fsubr
fstp
xor
lods
or
push
sbb
aam
mov
jmp
orl
mov
icebp
and
call
inc
nop
adc
sbb
xchg
xchg
mov
mulb
xchg
lds
jnp
iret
sti
mov
cld
repz
out
dec
cmpsl
in
xchg
popa
scas
mov
jmp
jnp
mov
xchg
in
pop
jne
xchg
push
or
lcall
test
jmp
lods
lret
adc
repnz
mov
aam
xchg
loope
xchg
insb
and
cmpl
pop
or
outsb
fistpll
push
xor
enter
xchg
mov
js
movsb
les
mov
lahf
mov
sbb
insl
or
int3
cwtl
out
xchg
aam
jns
cmp
pop
es
in
shll
pop
aam
sub
insl
mov
cwtl
push
out
shl
es
hlt
jno
call
mov
lock
add
xchg
insl
idiv
sub
add
push
outsl
fwait
or
push
cmp
pop
cmp
and
jg
ljmp
cmp
push
stc
cld
test
sbb
xlat
mov
cmp
loope
inc
adc
test
xchg
in
cmp
xchg
cmp
mov
pop
or
into
sbb
lea
call
jp
ret
or
in
and
rorb
mov
lds
test
mov
and
sbb
mov
jns
xor
pop
ja
and
mov
or
sbb
adc
push
xchg
loopne
stmxcsr
jne
xor
mov
dec
repnz
testb
rcll
ds
call
lahf
sbb
adc
add
push
call
fdivs
out
dec
int
mov
stos
jns
lahf
inc
rclb
xor
cmp
cmp
cltd
jnp
jo
push
popf
mov
push
pop
idivb
xchg
pop
sub
fistl
ror
call
mov
pop
bswap
jmp
mov
addr16
push
cmp
xchg
xchg
fwait
dec
std
rorb
les
clc
inc
in
inc
mov
push
and
ja
and
pop
mov
fadds
inc
rcll
into
cmpsb
in
daa
loopne
push
lahf
and
pop
dec
lods
popf
add
shlb
rclb
lcall
inc
jl
add
mov
xchg
out
push
iret
xchg
add
pop
jbe
mov
sbb
jns
insl
xor
jge
cltd
fcoms
mov
xchg
fcmovne
push
int
sbbb
adc
mov
lds
add
cld
int3
adc
mov
jnp
mov
sub
inc
stos
roll
xchg
push
loopne
movsb
push
nop
mull
out
std
lcall
call
xchg
jecxz
push
call
mov
xor
or
pop
dec
lea
fiaddl
out
cmc
das
repz
call
cmp
push
and
fwait
pop
add
xor
pop
fbstp
incb
insl
gs
dec
mov
jl
push
sub
add
xchg
call
xlat
xor
jle
pop
int
out
mov
jge
inc
lcall
and
fistl
push
call
dec
mov
fsubrl
aas
adc
add
dec
xchg
arpl
add
fsubrl
add
add
rolb
push
sub
cmp
mov
popa
stc
loop
hlt
and
xchg
sbb
stc
je
out
es
cmc
or
pushf
push
push
sbb
mov
mov
jns
adc
int
nop
cli
inc
out
sub
daa
pusha
xor
xor
jae
xchg
lods
sbb
notl
cs
addr16
jecxz
adc
fsubl
jns
shrb
and
shlb
in
out
xchg
mov
xchg
push
leave
cmpsb
adc
idivl
test
adc
std
shl
lods
cmp
dec
inc
mov
pop
and
popf
decb
scas
sbb
je
shlb
sub
in
sub
sbb
dec
dec
cmp
shlb
inc
jmp
sbb
jae
test
addr16
repz
and
adc
jle
mov
and
cmc
test
push
ret
mov
ja
inc
lods
cmp
stos
mov
fistl
push
call
icebp
movsb
or
inc
fisubl
lea
pop
xchg
inc
sbbl
push
addr16
pop
loopne
cmp
push
das
loope
sub
push
push
cmpsb
jg
inc
mov
add
shr
fs
pusha
push
fdivrs
stc
scas
mov
or
or
mov
or
stos
cmpb
bound
sbb
lods
xchg
cwtl
out
mov
ds
lret
enter
dec
lock
add
inc
call
rorl
shll
test
xor
clc
lock
and
out
mov
sbb
pusha
popf
jecxz
cmp
push
sbb
jbe
inc
adc
cmp
mov
xchg
xchg
push
fisubrs
xchg
cmp
pusha
testb
fistl
push
call
lret
pop
and
cld
scas
fisttpll
push
mov
cmp
dec
ret
nop
fistpll
cld
fnstsw
mulb
inc
fisttpll
and
cld
xor
sbb
jbe
adc
or
iret
imul
mov
cmpsb
out
mov
xor
sti
fcomps
sbb
adc
es
ficomps
mov
push
jge
adc
add
mov
xchg
into
xchg
fistl
pushl
lea
call
push
push
movb
pushl
lea
jb
pusha
pushl
ret
cmp
ret
adc
ficompl
rcr
pop
std
in
ret
jo
aad
lock
int3
dec
cmp
push
and
andl
out
out
push
test
mov
mov
jns
aam
dec
mov
in
movsl
or
or
stos
dec
jns
sbb
or
das
lcall
aad
mov
xor
mov
pop
mov
repnz
clc
push
mov
push
test
or
mov
cmp
add
fcmovb
push
es
sbb
jmp
shr
mov
out
inc
fs
cmp
xchg
dec
dec
popf
enter
sbb
jecxz
cmp
jne
inc
shll
push
push
imul
out
scas
enter
pop
dec
and
icebp
and
sbb
jnp
cli
call
mov
fsts
setl
xchg
push
les
pushl
rolb
xchg
and
cmp
subb
orb
xchg
rep
or
sahf
pop
fcmovnu
push
fsubrl
das
jge
cmp
and
callw
dec
cmpsb
and
push
lahf
sarb
iret
push
mov
pop
enter
and
jo
sahf
push
fistl
lea
call
pushf
push
lea
jmp
loopne
scas
cld
movsl
stos
sub
xchg
mov
negb
movsl
or
mov
imul
and
and
xchg
pop
pop
push
push
cld
cld
push
dec
cmp
jg
push
testb
xor
cltd
pop
insw
fwait
movl
pop
xor
testb
scas
jle
inc
test
pop
popa
ror
cli
adc
dec
gs
or
mov
or
sub
xor
adc
fadds
in
push
lcall
sub
loope
mov
fistl
bnd
icebp
sahf
push
jl
xchg
sahf
jno
out
and
repz
pop
push
mov
xorl
dec
imul
pop
loop
cmp
sarb
jns
pop
out
push
movb
dec
add
call
mov
and
out
jbe
sahf
aas
pop
inc
fisubs
in
mov
js
aam
jne
int3
cmp
out
rcrb
xlat
arpl
dec
rorb
jne
outsl
pop
out
ds
xchg
sbb
sub
jnp
cs
cmp
xchg
hlt
lret
ja
test
jge
adc
ret
rclb
jmp
sub
int3
orb
daa
lds
mov
fnsave
mov
sub
ret
mov
repnz
mov
out
out
fldt
xchg
sbb
jae
xchg
mov
inc
cmp
sbb
cli
push
cltd
push
jae
sbbb
roll
cmc
stos
dec
les
inc
sub
push
aas
add
pop
mov
sbb
ss
xor
cmp
xor
mov
cwtl
and
outsb
inc
mov
and
int
xchg
movsb
in
adc
mov
fdivr
dec
test
clc
xchg
fcoms
pop
xchg
jge
fisttpl
movsb
sub
pop
pusha
and
cld
mov
imul
push
pop
in
add
xchg
dec
xchg
stos
fnstcw
out
jbe
pushf
test
cmp
jmp
cmp
cwtl
outsl
inc
adc
mov
test
int3
xchg
outsb
sub
call
insb
inc
fdivrp
or
cli
lds
xchg
flds
hlt
test
enter
mov
cmp
mov
dec
lret
mov
movsb
ret
lcall
mov
or
lods
sub
fcomps
adcb
jo
push
scas
aad
in
das
jbe
cmp
or
cmpsl
in
and
jne
outsl
out
sub
cmp
stc
mov
mov
mov
ffree
js
fistl
push
call
testb
adc
add
test
xor
adc
push
ret
and
in
imul
mov
iret
xchg
cld
popa
lahf
mov
xor
rcrl
pop
stos
push
pop
mov
je
sbb
mov
xor
cld
icebp
xchg
testb
inc
mov
and
and
mov
sbb
inc
jecxz
outsl
cmc
mov
fistl
leave
adc
xlat
dec
out
mov
insb
shll
jmp
push
xchg
lret
test
aas
scas
rorl
cli
iret
xor
push
mov
jae
and
pop
ret
pop
mov
arpl
cmp
popf
add
sbb
pop
dec
add
or
fistl
xor
adc
popf
les
out
inc
ds
loop
enter
mov
imulb
test
pop
iret
push
push
testb
outsb
cld
and
inc
in
fwait
dec
push
call
test
cmp
hlt
imul
pop
push
dec
xchg
cmp
mov
sbbl
mov
push
fisubl
sbbb
jno
lock
dec
movsb
pop
shlb
int3
dec
in
cli
jle
adc
sbb
add
int
push
pop
adc
mov
or
stc
inc
sbb
cmp
mov
push
fbld
dec
iret
fistl
push
call
jle
fsubp
push
call
dec
outsl
push
call
cli
shrb
notb
test
ror
adc
popf
or
cmp
test
sbb
jo
adc
add
adc
dec
in
sbb
xchg
adc
xchg
and
sub
xchg
insb
jl
or
or
fucomi
lods
cmpsb
ret
popf
lods
cmpsb
push
test
ljmp
fstl
out
ret
or
das
ds
imul
mov
lahf
movsb
push
mov
cli
push
mov
inc
mov
cwtl
das
cmp
mov
scas
inc
xchg
imul
jo
inc
xchg
push
out
repnz
xor
add
out
ret
inc
inc
leave
fistl
pushf
pusha
lea
je
stc
cmp
pushf
pushl
lea
je
pushf
lea
jmp
push
call
or
ret
xchg
or
test
xor
adc
xchg
dec
cmp
add
lds
jae
or
sbb
inc
add
cmpb
std
in
in
cmc
cmp
push
jmp
icebp
mov
mov
dec
mov
int
popf
mov
loope
and
cmp
dec
divb
in
pop
add
gs
rolb
push
cmp
adc
xor
jno
inc
cmp
sub
cs
xor
pop
inc
test
cmp
lods
push
movsb
jp
inc
or
xchg
cli
adc
in
dec
sarb
outsb
aas
add
cmp
pop
cmp
dec
push
sub
ret
add
scas
aad
lods
push
xor
ds
popa
mov
loop
push
inc
mov
pop
pop
push
add
ret
insl
les
push
inc
enter
loopne
in
pop
lahf
and
or
pop
mov
aas
sub
lahf
cld
and
pusha
popa
out
sbb
jle
sub
cmpsl
das
xchg
cmpsb
movsb
out
ja
movb
lea
jb
jae
inc
sub
lret
mov
sbb
fistl
lea
je
pushf
pushl
lea
jmp
jb
inc
test
les
and
cmp
jl
mov
sahf
mov
xchg
xor
pmaddwd
mov
cltd
mov
cmpsb
xchg
inc
xor
mov
cmpsl
mov
push
inc
ljmp
xlat
cmp
cs
add
adcl
pushf
sbb
inc
add
mov
add
adc
add
mov
shrb
cmp
adc
lret
push
and
mov
dec
push
repz
or
clc
pop
lret
cld
arpl
xchg
xchg
in
pop
xchg
lcall
inc
push
pop
ljmp
inc
ljmp
sub
push
ljmp
es
or
lret
and
push
in
call
sub
dec
xor
dec
insb
and
jmp
fistl
push
call
pop
fsubrs
pop
mov
arpl
sbb
push
into
pop
ret
imul
outsb
jns
jg
xchg
imul
and
pop
inc
adc
cmc
inc
push
mov
not
int
pop
sbb
mov
lods
scas
lea
loope
xchg
inc
xchg
or
inc
xor
insb
je
push
enter
orb
xor
aad
xchg
cld
push
in
js
pop
xchg
xchg
in
pop
test
and
jg
invd
lea
cmp
ret
sub
mov
sub
xchg
cwtl
jo
rorb
xchg
cmc
cmpsb
lock
dec
sti
js
ds
mov
add
popa
fidivs
push
and
mov
dec
sbb
push
inc
add
inc
jecxz
add
call
daa
xchg
fs
jecxz
fistl
push
call
pop
cmp
shr
lea
stc
pushf
cmpl
call
cwtl
xor
xchg
adc
xor
test
in
add
loopne
and
xor
rcl
push
mov
into
xor
or
sub
or
mov
pop
inc
cmp
cmp
pop
scas
push
jno
xor
dec
lods
push
dec
adc
adc
xor
adc
xchg
push
lea
push
mov
pushf
xor
cmp
jmp
ds
icebp
jae
or
lahf
dec
or
xchg
mov
js
push
mov
cmpsl
das
push
ja
xchg
lock
cmp
and
jmp
xor
adc
les
xor
push
pop
push
cwtl
sbb
outsb
xor
or
xor
sub
test
imul
mov
sub
movaps
sub
sbb
notl
dec
add
ficompl
dec
bnd
xchg
push
xchg
and
mov
dec
adc
or
push
jbe
inc
or
jecxz
push
dec
aas
adc
aam
sarl
lret
cmp
sub
movsl
sbb
mov
cmp
push
je
dec
xor
push
scas
sti
pop
cmp
dec
imulb
xor
mov
das
cmp
je
push
adc
inc
insl
inc
sub
popa
out
xchg
bound
xor
xchg
es
xlat
hlt
add
int3
mov
or
sub
mov
and
sbb
cmp
inc
sub
push
jecxz
pop
aad
mov
pushf
or
cwtl
loopne
ret
mov
push
add
cs
mov
decb
sub
shlb
dec
cmp
inc
or
push
push
std
call
jae
cwtl
jo
cmp
dec
or
mov
lret
rcrb
xor
and
xor
scas
mov
cmpsl
jae
hlt
xchg
data16
fwait
or
ss
repnz
and
xor
cmpsb
aaa
or
ja
lods
nopl
testl
adc
loopne
or
sub
hlt
idiv
jle
lods
movl
push
xor
push
cwtl
dec
adc
flds
icebp
or
xchg
push
unpckhps
adc
shll
xor
xor
ret
mov
cmp
stos
mov
movsl
sarb
push
ret
scas
popa
movsb
cmc
subl
mov
mov
pop
or
nop
lock
or
cwtl
push
push
fsubl
in
je
push
adc
fbld
dec
adc
mov
add
jecxz
clc
cld
sub
or
dec
push
sbb
je
adc
or
gs
push
call
pop
inc
je
sub
orl
xchg
inc
dec
mov
das
pushf
insb
pop
sub
dec
icebp
sub
mov
hlt
lea
sbb
in
sub
rep
loope
mov
jns
dec
loop
addr16
ret
rcrb
lret
shlb
jo
xorl
lret
cwtl
sbb
les
sub
shl
shrd
sbb
xchg
dec
ja
inc
lock
xchg
jno
mov
popf
push
push
sarb
jne
sub
push
lods
ret
insb
jns
adc
pop
cmp
push
lret
jl
adc
xor
jae
inc
decb
iret
je
lcall
push
mov
xchg
shrb
stos
adc
add
dec
and
mov
subb
sub
mov
or
lock
clc
sub
shrb
sub
push
int3
or
or
lock
mov
in
jmp
aam
xor
mov
pusha
xor
fldl
sbb
add
enter
xchg
sbb
repnz
sub
add
adc
scas
ret
shrb
call
sub
shrb
cmp
dec
mov
push
lret
call
rcl
fbld
push
mov
jae
cld
push
cmc
mov
aam
sub
and
dec
add
lcall
ljmp
stos
fcmovnb
cmpl
pop
mov
sub
mov
sub
mov
sub
arpl
mov
outsl
imul
aaa
call
dec
in
iret
or
add
jp
sbb
push
push
repnz
stc
jle
sbb
sub
sub
pop
leave
mov
adc
xchg
jmp
dec
mov
ret
enter
es
data16
imul
push
mov
or
enter
mov
and
rcrb
mov
sahf
and
xchg
pusha
scas
aaa
pop
jecxz
mov
mov
or
sbb
js
aas
push
rcrl
mov
dec
add
adc
sbb
imul
jns
cld
cmp
add
pop
xor
int3
adc
or
iret
das
mov
aam
cli
dec
cmp
cwtl
adc
lods
rcll
or
mov
dec
xor
clc
add
je
and
jp
lods
mov
out
shll
jle
in
fildl
xor
out
sub
adc
jae
add
jne
daa
out
mov
rcr
or
jns
addb
sub
and
xchg
inc
pusha
push
or
mov
add
xchg
lret
xor
loop
shrl
xchg
cwtl
in
mov
push
imulb
subl
push
add
sub
add
mov
xchg
xor
push
dec
icebp
ljmp
add
pop
ret
mov
pop
fcoml
cmp
mov
pop
in
and
mulb
fdivr
jp
jae
in
push
mov
dec
adc
rcrb
and
xor
push
or
add
ret
mov
or
mov
mov
cmp
leave
or
mov
imul
or
sub
add
sub
jnp
in
loope
or
mov
ret
add
push
mov
add
sbb
xlat
inc
aad
mov
adcl
filds
mov
and
out
aas
aam
mov
dec
xchg
pop
inc
cmp
adc
jno
lahf
dec
sub
or
push
xchg
out
in
scas
jae
push
inc
lahf
xchg
mov
jae
in
hlt
mov
leave
add
cltd
ret
pop
in
or
cmpsb
rcrl
push
adc
add
xchg
test
test
leave
pop
or
sub
mov
shlb
lock
sarb
xchg
call
popf
sbb
mov
loopne
cli
inc
mov
fidivl
lret
test
add
lcall
mov
dec
dec
add
ror
push
or
nop
xchg
jno
mov
inc
ret
movsl
adc
inc
or
or
ds
xchg
cmp
pushf
dec
jo
add
push
adcl
imul
jmp
test
xchg
mov
xadd
nop
pop
fcmovnu
loop
aam
pop
leave
lcall
ret
sub
mov
and
cmp
test
rorb
sub
adcl
lret
inc
es
sbb
pop
cmp
idivb
dec
adc
xchg
leave
pop
add
xor
xor
mov
sbb
cltd
mov
or
jmp
sub
popf
aaa
add
jb
in
sub
sub
sbb
lods
outsb
loope
jae
ret
call
pop
rorb
arpl
popa
notb
cbtw
mov
push
xchg
sub
cmp
nop
sbb
mov
push
pusha
or
xchg
pop
xchg
dec
and
insb
push
mov
xchg
out
mov
test
scas
mov
lods
arpl
mov
cmp
bound
imul
push
inc
enter
scas
addr16
fmull
mov
lock
js,pt
and
stc
push
sub
in
out
les
sub
push
sbbl
insb
push
jg
push
shrl
cmp
cwtl
adc
xorb
xchg
lods
or
loop
cmp
aam
sub
pop
mov
mov
outsl
sbb
incl
das
or
adc
jle
addl
sarb
mov
into
jo
call
adc
lock
push
pop
jecxz
cmc
fstpl
mov
lock
sbb
adcl
push
sbbb
jae
jg
mov
inc
jecxz
sub
insl
and
mov
mov
xchg
mov
les
adc
and
ja
dec
aam
fdivrl
add
push
sub
jmp
adc
sub
sub
add
lret
loopne
pop
addb
xor
pop
mov
jo
push
hlt
sub
xchg
imul
sti
push
add
fucomp
xor
jns
scas
mov
in
ljmp
mov
mov
sar
pushf
dec
mov
pushf
sub
dec
pop
shlb
mov
mov
adc
les
ds
add
xchg
or
add
test
pop
jp
ret
scas
rcl
xor
je
adc
mov
lcall
push
pop
je
jge
clc
arpl
aam
add
push
mov
insb
rep
int
call
push
inc
cld
bound
hlt
mov
add
stc
mov
out
push
and
mov
pop
sub
xor
nop
in
cwtl
mov
flds
jno
ficoms
cmp
ss
adc
cmp
repz
cmpsb
je
pop
paddw
sub
xchg
cwtl
inc
push
mov
mov
je
cmpsl
insl
add
cmp
inc
ds
adc
xor
sub
out
inc
mov
scas
or
push
outsl
inc
mov
adc
adc
sub
add
fs
ficoml
cmp
cli
dec
rcrb
dec
cmp
add
aaa
loopne
xor
das
test
loop
sti
sub
xchg
cmp
aam
loopne
stc
jb
fmull
mov
mov
dec
add
cmp
mov
icebp
or
je
bound
pop
mov
or
jne
sub
cmp
cmc
adc
lods
dec
pop
adc
or
mov
sbb
xlat
dec
testb
test
and
jge
imul
add
and
cmc
add
test
outsl
aam
je
xchg
pushf
imul
stos
sub
xchg
mov
fs
enter
in
push
loopne
mov
cwtl
sub
xchg
lcall
aaa
mov
jo
cmpsl
xorb
mov
sbb
and
xor
cltd
xchg
xchg
test
sub
shrd
push
in
data16
scas
cmp
fmull
xor
inc
fcoml
and
test
cmp
les
andl
dec
pusha
push
addr16
adc
aas
dec
test
push
sub
add
pushf
shlb
fwait
sbb
pop
mov
cmp
jno
cwtl
faddp
mov
and
xchg
jg
jo
cmp
sub
jnp
xor
pop
lods
sbb
mov
mov
stos
xchg
test
lahf
or
lods
pusha
loop
out
xlat
or
fucomp
sub
or
cmpb
mov
fcomp
test
in
shrb
les
pop
or
cmp
cmc
jne
dec
in
push
adcl
adc
lods
adcb
into
inc
je,pt
mov
jo
inc
jnp
jp
popf
in
add
dec
cld
sub
mov
adc
lret
and
dec
inc
popa
push
adc
and
rolb
adc
clc
mov
lock
je
sub
fmull
sarb
aam
cld
or
cmp
mov
cwtl
fs
cmp
mov
xor
scas
fildll
js
add
scas
in
inc
scas
ret
out
jnp
add
sbb
xorb
dec
ret
sub
inc
loope
or
dec
and
sub
cmp
sbb
or
dec
cmpsb
shl
insb
lret
add
mov
ret
or
pop
sub
imul
mov
push
xor
xchg
ss
jne
push
inc
jbe
into
clc
int
cmc
orb
adc
and
jae
test
dec
movsb
adc
dec
cmpsb
jae
ljmp
xor
push
mov
cmp
or
push
cltd
push
jle
lcall
jp
jb
and
or
adc
xor
pop
rcrb
add
push
arpl
jne
dec
test
in
andb
call
ret
lret
fimuls
test
lret
and
test
imul
test
lock
cld
xchg
les
cmc
inc
inc
mov
int3
dec
or
sub
adc
or
lods
cmc
es
cltd
aaa
arpl
fwait
gs
ret
adc
rcrb
int3
jb
dec
sahf
jg
push
rorb
ja
dec
popa
and
or
xchg
aam
subl
xchg
sbb
or
or
inc
or
repz
cmp
xor
add
dec
add
ds
sbb
sbb
hlt
sbb
ret
add
sbb
jl
adc
add
mov
adc
cmc
jecxz
hlt
rorb
jo
and
jo
mov
dec
fimuls
loop
lods
sbb
lret
stos
or
test
cmp
hlt
adc
add
test
xchg
and
jne
sub
add
add
or
repz
and
adc
mov
out
inc
movsb
hlt
hlt
or
adc
das
adc
insb
sbb
jo
adc
xchg
movsb
or
jmp
sub
lock
lods
push
adcb
inc
sbb
or
sbb
rol
sub
mov
into
adc
mov
aam
js
in
inc
adc
loope
repnz
add
mov
enter
mov
inc
mov
mov
scas
clc
test
repz
loopne
inc
ret
arpl
add
cmp
cld
push
orb
mov
adc
or
adc
and
test
js
movsb
mov
or
iret
loopne
mov
mov
xor
jl
lods
adc
sbb
lret
sub
jge
sub
repnz
inc
repnz
dec
subb
push
adc
in
adc
xlat
push
jecxz
out
shl
xchg
ret
sub
adc
nop
test
sbb
nop
in
inc
sbb
clc
sbb
sub
mov
hlt
sbb
sbb
ljmp
andb
mov
fcompl
cmp
inc
add
cmp
pop
mov
mov
inc
push
sub
adc
jecxz
fsubp
dec
insl
cmc
add
lds
icebp
ss
je
cmp
leave
xor
cmp
pop
aam
aaa
pop
cmp
pop
sub
cmpl
sbb
push
lret
imul
ds
sub
xorb
and
adc
add
and
pop
cmp
aaa
sub
int3
sub
jecxz
add
cmp
clc
adc
test
cli
cmp
lds
add
cmp
and
shll
adc
add
xchg
notl
cli
adc
leave
call
in
decb
and
popa
mov
pop
adc
stc
xchg
cmp
call
pushf
and
push
fwait
test
int3
pop
xchg
and
outsb
sbb
ds
fs
adc
push
mov
dec
or
pop
cmpl
add
movsb
jle
fs
mov
clc
sub
test
addr16
mov
sbb
or
icebp
mov
adc
jmp
bswap
push
sub
push
mov
sahf
aam
addl
sub
add
daa
push
aad
push
and
cmp
push
arpl
jge
pop
ss
sub
sbb
mov
shrl
rolb
shlb
or
push
xchg
in
mov
mov
in
adc
sbb
cmpsb
sbb
jp
lock
pop
sbb
out
imul
lret
fs
out
and
enter
outsl
cmpsl
xor
sub
inc
jg
xchg
fisubrl
xor
scas
mov
sub
pushf
std
pushf
leave
ret
fwait
inc
sub
mov
out
inc
push
jae
or
inc
je
push
mov
adc
aaa
loop
sbb
cwtl
cld
inc
repnz
sub
je
lods
loope
in
xchg
cmpb
inc
push
out
or
adc
dec
xor
insl
rcll
xor
ret
flds
clc
mov
mov
sub
leave
or
pop
mov
sub
fmul
cwtl
jae
clc
cli
dec
adc
and
xchg
push
sub
lods
cs
or
popf
sub
xor
sub
push
sbb
repz
sub
pop
sbb
lods
and
aam
movsb
sahf
hlt
mov
ret
dec
cwtl
sub
and
cmp
cmp
bswap
cwtl
mov
ss
mov
jg
xor
xor
in
and
adc
icebp
pop
jnp
add
arpl
into
or
in
mov
mov
or
aas
add
push
xor
in
lret
pop
cwtl
sbb
add
lods
pop
lea
jge
add
test
mov
push
pop
cs
in
or
mov
stos
aaa
ret
jnp
or
jo
lods
jnp
imul
cmp
xor
lods
or
cli
sti
mov
pop
mov
je
xchg
or
cmpsb
mov
scas
cmp
mov
xchg
add
scas
sti
iret
pop
pushf
loopne
fdivrl
cmp
pop
cwtl
mov
xor
js
scas
push
cmc
ret
cmp
adc
push
sub
push
jne
das
add
bound
mul
cmp
push
aam
adc
sub
test
sub
jl
repz
push
adc
je
pop
add
inc
xor
into
pop
push
sub
jge
ss
sub
push
test
nop
adc
sub
push
out
lods
and
add
mov
mov
aad
or
jle
cmpsb
adc
fsubr
push
fstp
push
nop
pop
jl
sub
fnstsw
sbb
or
shlb
push
fstp
and
jecxz
sub
imul
cs
lret
je
xchg
mov
imul
popa
int
mov
add
or
and
fcmove
inc
or
in
sub
stc
aam
lods
aam
sub
das
mov
push
pop
in
cmp
das
push
testl
cltd
fwait
cmp
mov
sbb
sbb
xchg
add
repz
mov
xchg
lret
pop
in
mov
je
xchg
push
test
dec
dec
call
and
push
pop
in
fs
pop
cmpsb
adc
shr
in
mov
ret
pop
push
cld
in
clc
imul
dec
adc
out
adc
ds
mov
and
push
hlt
push
ss
lods
mull
out
sbb
jl
lret
mov
int3
jg
cmp
js
clc
ja
or
fwait
xor
xchg
or
dec
imul
sub
cmc
or
push
mov
cmp
outsl
sub
mov
inc
push
xorl
mov
or
or
mov
cmp
shl
aam
mov
inc
repnz
cmpsl
leave
fisubs
cmp
mov
sub
in
out
pop
jp
hlt
aaa
stos
das
arpl
adcb
jae
or
das
push
insb
xchg
adc
mov
in
jle
cmp
jns
inc
or
pushf
cs
jle
inc
je
sub
sub
sbb
and
lret
mov
dec
dec
in
mov
xchg
inc
inc
dec
popa
dec
nop
fimull
jns
xor
jnp
jmp
push
clc
cs
pop
cmp
adc
inc
pop
jns
mov
jae
add
inc
sub
push
dec
jecxz
and
inc
lret
mov
sub
int3
jmp
and
push
and
popa
cmp
jnp
and
cmp
dec
sbb
pushf
cmpsl
sahf
lock
popa
sub
pop
lock
push
shll
fistpl
adc
lcall
xchg
lret
mov
adc
push
sti
pop
ss
add
outsl
lock
mov
push
adcb
xlat
adc
xor
dec
xchg
sbb
xchg
mov
call
movsb
add
ljmp
sbb
repnz
mov
jbe
add
cld
add
mov
in
or
popf
stos
cltd
out
aad
pop
cmpsb
dec
cli
push
xor
fucomip
sub
dec
pop
push
loop
jecxz
lods
mov
add
mov
and
add
xlat
xchg
cli
imul
fnstenv
push
icebp
and
sbb
mov
in
pop
add
sbbl
xor
mov
push
xor
push
push
repnz
dec
xor
xchg
push
lea
lret
mov
add
aad
jg
pusha
add
ja
lock
ds
in
pop
add
cwtl
addr16
addb
pop
std
mov
ljmp
adc
xor
aam
test
cmpsl
cmp
loope
or
push
test
push
fsubrl
roll
loope
adc
or
mov
jbe
jne
mov
xor
paddw
cmp
mov
outsb
arpl
cmpsl
loopne
jnp
adc
or
xchg
add
jp
xchg
mov
or
cmpsb
es
leave
inc
xchg
icebp
dec
xchg
aam
or
out
je
dec
jmp
add
inc
xchg
subb
les
nop
mov
aam
int
mov
cs
mov
sub
mov
add
add
bound
ret
pop
push
dec
pop
and
int
stc
cltd
rolb
mov
lds
add
cmp
mov
cmp
adc
push
fld
rol
in
hlt
sar
pop
enter
or
mov
dec
mov
xor
jecxz
fwait
xchg
adc
nop
push
hlt
jb
pop
push
notb
or
xchg
insl
es
cmpsl
nop
push
or
add
imul
inc
bswap
add
fisubrs
in
imul
xchg
add
cmp
xor
mov
mov
mov
jo
mov
adc
mov
xor
xlat
je
shl
fs
iret
in
push
pop
push
pop
dec
in
inc
add
out
mov
pop
clc
or
cmc
xchg
add
dec
cmp
mov
pcmpgtb
push
aad
orl
mov
adc
add
lock
adc
sbb
std
add
call
inc
add
fcmovnbe
add
popf
scas
xchg
test
adc
mov
stos
pop
pop
mov
aaa
or
sub
pusha
sbb
push
xlat
jb
push
movsb
mov
or
xchg
adc
sub
arpl
xchg
ret
xlat
mov
xor
and
aam
mul
mov
lret
push
in
cmp
out
lea
gs
clc
push
hlt
mov
out
jae
jg
fdivs
pop
enter
mov
xor
lea
out
pop
and
movsb
lret
pop
jns
ljmp
aam
test
int
jno
mov
rolb
mov
add
leave
lds
inc
icebp
lea
push
ds
sub
cwtl
mov
dec
hlt
fildll
ret
aam
iret
push
inc
xor
or
or
mov
mov
sti
push
jg
xor
lea
cltd
ret
cmp
jns
xchg
mov
cwtl
out
xchg
sub
jo
hlt
sub
adc
fstpt
dec
mov
scas
aam
mov
jle
hlt
notl
mov
sub
stc
jecxz
rcl
mov
push
sbb
inc
popl
and
adc
pop
rolb
mov
call
dec
es
hlt
subb
int3
push
enter
adc
mov
mov
stos
cmp
mov
test
ret
adc
pop
add
or
add
sbb
les
sub
aam
inc
lods
es
xor
pop
adc
loop
out
lea
mov
mov
pop
xor
lods
xchg
dec
cld
lret
popl
mov
std
push
pop
aam
mov
cmpsb
ret
aam
shrb
test
movsb
adc
or
ret
into
stos
icebp
or
ds
aam
shrb
pop
xchg
mov
or
sub
or
and
push
sbbb
mov
push
inc
jne
jg
jle
dec
pop
sub
sahf
xchg
or
mov
xchg
arpl
jne
mov
int3
xchg
and
pop
mov
aam
test
mov
ret
cmp
aaa
int3
cmp
lahf
push
in
das
add
insb
out
lods
or
test
mov
add
pop
hlt
insb
outsb
mov
fldz
stos
nop
imull
jle
test
push
cmpsb
test
mov
icebp
rep
in
or
mov
sub
imul
sub
das
leave
push
dec
les
test
dec
addr16
jle
jp
adc
or
adc
aaa
mov
mov
push
fwait
inc
and
nop
mov
mov
dec
or
and
push
rclb
adc
xchg
cltd
loope
or
addr16
popf
ljmp
add
pop
cmc
adc
push
or
sbbb
jno
fnsave
ljmp
dec
xor
xchg
sbb
cmpsb
sbb
or
mov
lds
push
lods
push
ret
lahf
adc
movsb
adc
add
hlt
mov
mov
dec
cmp
adc
pop
add
inc
xor
cmp
adc
adc
lods
mov
push
xchg
xchg
adc
sbb
cmpsl
push
mov
out
and
and
rorb
cs
pop
push
lds
pop
cli
pop
out
xchg
loopne
adc
jne
inc
rorb
sub
in
bnd
fs
jecxz
jbe
lods
test
stos
jmp
int3
pop
sahf
aad
daa
in
jle
and
sti
fldl
push
adc
fildll
jecxz
xor
std
lods
lock
fwait
push
jecxz
aam
or
add
imul
dec
fisttpl
pop
sub
jnp
sub
jno
aaa
aad
mov
fbstp
push
rclb
push
and
jb
mov
push
xchg
jbe
and
jg
mov
movsl
mov
ret
int3
pop
xor
test
aam
xchg
push
fs
outsb
cmp
mov
test
jg
dec
or
clc
lret
roll
xlat
shrl
cmovl
inc
js
in
mov
leave
jg
sbbb
aam
and
outsl
mov
scas
aam
in
dec
minps
mov
loope
sub
lods
mov
xchg
mov
jns
sbb
add
mov
mov
andb
pop
inc
xrelease
sbb
shlb
inc
jno
dec
fists
imul
and
mov
mov
fisubrs
add
test
andl
movsb
jo
cwtl
js
out
jns
bound
mov
jbe
dec
cmp
cmp
scas
cmp
pop
ds
lahf
nop
xor
fdivrs
jl
mov
test
jmp
mov
aas
xchg
xor
pop
hlt
or
lea
sti
or
in
fs
push
sub
rcr
mov
roll
movsl
pmullw
or
push
bnd
out
push
rorl
insb
adcl
mov
je,pt
inc
lret
mov
hlt
cwtl
ret
fst
mov
xlat
xchg
push
xor
outsl
ja
std
movsb
int3
jo
adc
insb
popa
sub
cmpsl
popf
xor
sub
adc
sbb
xchg
idivl
sub
cmpsb
ljmp
call
mul
push
dec
mov
jmp
lock
cmp
push
loopne
xor
enter
and
and
xor
mov
icebp
jb
aam
sbbb
hlt
popa
or
mov
sbb
rclb
pushf
sub
fistl
aaa
mov
lcall
testb
int
scas
std
jns
insl
sbb
inc
mov
cmp
sbb
mov
push
xchg
add
enter
test
enter
dec
push
push
notl
cmp
push
mov
test
aam
xchg
inc
xchg
push
aam
jg
add
inc
jno
and
sub
mov
pop
lret
or
jbe
faddp
popf
jbe
aaa
mov
pop
insl
aam
lods
cld
add
push
adc
dec
sbb
mov
pop
enter
or
test
cmp
add
add
bound
cmc
sahf
or
xor
aam
lret
lods
imul
lods
movsl
push
xor
dec
sbb
and
addl
and
mov
loopne
cld
mov
cmp
xchg
lea
inc
loopne
nop
sbb
push
out
rolb
fmuls
lcall
mov
shrb
xor
sbb
push
out
add
jne
cmpsl
stos
lods
or
adc
dec
adc
mov
mov
cmp
dec
xchg
je
mov
mov
push
mov
cmpsl
lods
fcoml
jae
sub
jecxz
addl
push
adc
inc
push
pushf
mov
cmpsl
hlt
fisubrl
add
adc
or
or
test
ret
mov
orb
xchg
inc
js
adc
int
imulb
daa
ret
push
xchg
std
mov
cltd
mov
icebp
adc
fsubs
dec
aaa
in
sahf
sub
or
loope
fdivrl
jbe
ret
ret
mov
push
xor
mov
sbb
cwtl
mov
sub
ljmp
fwait
xor
or
insl
dec
mov
and
hlt
or
test
adc
add
into
or
sub
ficomps
xor
aas
inc
sub
lock
sub
xor
call
sahf
inc
loop
sub
push
sub
xor
jbe
sbb
dec
inc
addl
inc
cmc
add
lds
mov
loopne
xor
sbb
test
adcb
xchg
or
sub
incb
enter
xchg
pushf
mov
es
fcos
sub
jb
lock
fdivs
mov
shrb
mov
negb
xchg
mov
or
xor
loopne
pop
lock
es
aas
adc
mov
cmp
notl
mov
mov
mov
shrl
call
sub
aam
into
mov
or
xchg
sbb
in
movsb
cmp
mov
jbe
xlat
add
shr
push
mov
sbb
sub
xlat
or
enter
mov
fisubl
addr16
cmp
das
add
incb
mov
mov
roll
in
out
cld
dec
add
pushf
in
ja
scas
aaa
mov
mov
rorb
repz
mov
in
xlat
lea
cmpsl
adc
mov
or
adc
or
std
sub
pop
hlt
cmpl
and
sti
std
pop
es
loop
into
adc
loope
and
or
jmp
sbb
dec
in
xchg
push
ret
sub
sub
mov
ss
aad
test
dec
sub
jo
int3
ss
lahf
divb
and
push
repnz
pushf
in
mov
dec
aaa
mov
pop
mov
sub
rorl
cmp
xchg
mov
xor
in
adc
cmpsl
ds
cmc
mov
and
push
cwtl
sub
pop
lock
hlt
repz
jne
or
xor
fistl
sub
cmp
outsb
fmul
and
mov
fstl
adc
sub
test
adc
xchg
cmpsl
stc
adc
orb
push
pop
in
lretw
clc
loop
cs
dec
iret
xchg
lret
jns
add
mov
pop
lods
cwtl
bound
cmc
lcall
xlat
adc
push
stc
adcb
sbb
or
xchg
jg
sub
popf
loope
loopne
std
ja
enter
rcr
sbb
adc
orl
fistl
and
adc
fdivrs
xchg
roll
sub
inc
push
ret
test
rol
out
aas
sub
dec
mov
add
faddl
xchg
pop
sub
aas
rclb
inc
cltd
pop
ja
jg
iret
jo
loop
movsb
pop
xchg
bound
add
adc
add
pusha
dec
and
add
je
shrl
xchg
out
or
mov
cmp
push
lcall
cwtl
sbb
movsl
mov
in
adc
and
fildl
cltd
sub
add
xchg
add
je
in
repz
icebp
fcmovnbe
cmp
lcall
xor
sbbb
call
jl
int
adc
mov
ret
lret
or
mov
sbb
or
ja
test
ljmp
lds
shlb
push
popf
push
hlt
sub
lock
xchg
jge
rol
pop
jl
sub
out
jg
out
dec
ja
and
mov
adc
xorl
mov
or
mov
mov
ret
or
loop
aam
outsl
fs
cmc
inc
shll
mov
iret
adc
ret
repz
and
ret
ljmp
sub
movsl
dec
and
aam
mov
sub
pushf
imul
push
adc
test
sbb
mov
repnz
out
fmuls
ja
mov
aam
mov
sub
repnz
dec
xor
jo
call
in
fs
sub
lods
or
repnz
xor
mov
call
arpl
sub
fmulp
in
mov
cwtl
adcb
test
sub
sub
int3
fwait
xor
adc
sub
insb
fsubrl
sbb
ret
test
cmp
adc
test
lds
clc
sahf
loopne
xchg
lret
enter
decb
test
lret
pusha
jbe
lds
rcll
sub
sbb
cmp
mov
mov
xlat
repnz
adc
sub
mov
mov
out
shlb
or
pop
xor
push
dec
jl
test
jns
cwtl
mov
or
cmpb
pop
nop
and
or
daa
mov
jb
adc
cmp
xchg
cmpsl
movsb
mov
loop
adc
mov
jecxz
adc
std
push
jmp
pop
adc
sub
xchg
mov
sbb
rcl
leave
pop
mov
add
leave
add
outsb
jmp
sbb
je
inc
js
add
jnp
jno
jl
xchg
inc
ret
das
jo
in
mov
push
fidivl
lret
mov
cmpsl
lods
adc
addb
inc
mov
gs
add
cmp
jmp
adc
imul
adc
or
push
mov
cld
push
or
ret
out
setg
les
icebp
add
mov
add
stc
fs
xchg
push
aam
inc
aas
aam
orl
push
adc
scas
or
mov
and
xor
xor
mov
rorb
adc
inc
mov
aad
in
ljmp
push
or
fcoml
insb
lock
jmp
cwtl
in
sub
fcmovb
mov
sbb
jae
repz
xor
or
lret
adc
addr16
sub
ret
mov
movsb
adc
aas
jl
jnp
mov
push
xchg
adc
mov
or
out
test
dec
out
mov
push
nop
cli
stos
sbb
xor
mov
and
push
ficoms
out
mov
sti
inc
jmp
mov
adc
fsubr
pop
jl
or
adc
scas
xchg
fsubs
or
ret
jge
outsb
aam
jle
xor
inc
inc
dec
dec
clc
sub
rclb
xchg
test
mov
les
bound
repnz
mov
xorb
addr16
adc
adc
rorl
aam
aas
lods
cmp
call
jg
mov
fdivs
mov
xchg
dec
das
stos
adc
sti
and
jecxz
push
repz
test
outsb
jge
sub
fwait
into
fiaddl
shrl
pop
adc
sbb
jae
add
and
mov
push
cs
mov
in
out
cvtps2pd
sub
dec
push
add
into
sub
leave
pusha
sbb
inc
loop
pop
fwait
cmp
into
xchg
and
mov
or
mov
repnz
jne
and
js
shl
sub
int3
add
xor
xchg
je
test
ljmp
mov
inc
lret
fisubl
daa
prefetch
adc
into
jecxz
call
adc
pushf
int
inc
out
and
mov
sub
insb
dec
cmp
lock
jae
xchg
pop
sbb
dec
add
arpl
cmpsl
or
cwtl
out
mov
lretw
int3
mov
pop
mov
jecxz
mov
lods
lret
ja
lcall
push
loopne
hlt
testb
dec
jg
int3
test
dec
or
adc
dec
ffree
das
dec
pop
call
mov
out
dec
movsb
mov
dec
cmp
rcl
int3
sbb
cltd
inc
mov
sbb
fnsave
jae
sub
fcoms
mov
mov
jl
fimuls
cmp
pop
out
adc
aam
cmp
sbb
orb
scas
or
sub
ss
push
add
shlb
sub
std
outsb
mov
push
fists
arpl
sub
leave
lods
adc
pop
in
and
call
adc
push
sub
jns
jle
test
cli
jg
cwtl
js
xchg
aad
pushf
imul
mov
adc
jo
jbe
inc
ficoml
push
dec
pop
and
fdivrs
ja
iret
call
pop
in
push
jns
add
test
fwait
add
popl
adc
sub
ja
ja
inc
cwtl
or
cli
xor
aad
ret
lret
jnp
arpl
enter
xor
int3
mov
mov
dec
push
stc
sub
pop
mov
or
xor
or
mov
mov
xor
pop
and
sub
xchg
andl
pop
mov
pop
push
shlb
repz
jno
fbld
cmp
pop
xor
xlat
inc
hlt
jnp
pop
sub
ja
call
pushf
add
cwtl
test
jb
sub
movsl
rol
je
pop
push
inc
jecxz
mov
sub
mov
add
loop
fcoml
add
mov
adc
inc
lods
movl
adc
xor
cli
mov
sub
add
mulb
sub
aam
push
adc
xor
xchg
lcall
push
pop
push
push
lahf
shlb
int3
inc
cli
pushf
arpl
and
push
out
stos
adc
xchg
das
jno
dec
jl
xchg
adc
ret
out
repz
push
jmp
push
xlat
jb
inc
dec
sarl
aas
xor
dec
aam
jnp
xlat
or
testb
lret
hlt
sbb
adc
inc
test
sbb
test
dec
jge
cmpsb
addr16
jp
inc
dec
pusha
and
jo
mov
sub
cmpsb
jb,pn
xor
mov
lods
bound
fdivl
push
inc
xchg
cmp
test
hlt
inc
xchg
das
sub
inc
test
mov
int3
xchg
mov
mov
shlb
test
sub
push
inc
push
jne
inc
rcrl
andl
sbb
aas
jle
push
sub
icebp
test
push
push
xchg
sti
in
testl
lods
inc
mov
stos
cmp
mov
adc
push
imul
push
mov
je
dec
arpl
xor
or
rcr
jae
and
inc
adc
jnp
or
add
lods
mov
xor
jbe
xchg
in
sarb
push
add
je
stos
jle,pt
jl
sub
gs
jle
jnp
xchg
jg
mov
adc
mov
out
adc
mov
sub
ret
xor
mov
cld
out
aam
pop
enter
push
xchg
xor
stc
or
pop
hlt
sti
fnop
inc
and
lods
loopne
nop
insl
sub
mov
movsl
mov
jno
lods
cwtl
inc
repnz
dec
or
cld
adc
push
mov
jl
ror
aas
insb
popl
mov
call
call
or
or
cmp
cmp
inc
push
aam
pop
push
inc
aaa
lcall
ds
int
pop
jns
push
cltd
jmp
adc
pushf
fisttps
push
adc
xchg
inc
dec
or
mov
dec
arpl
cwtl
jg
fists
xor
popa
clc
outsl
enter
sahf
fwait
pushl
lcall
jnp
push
add
vaddss
adc
mov
std
adc
add
push
push
xor
dec
add
test
dec
jp
pushf
jnp
test
xchg
les
push
popa
jnp
inc
repz
lock
mov
cmp
mov
mov
popa
out
jge
adc
pop
jb
sbb
fs
xchg
sub
push
test
or
mov
jnp
xor
push
lods
mov
push
sbb
xor
lea
lock
pop
adc
jg
inc
call
out
cmp
incl
add
jp
inc
or
jnp
sub
sub
inc
bound
ret
test
scas
sub
lock
pop
sub
mov
inc
pushf
push
cmp
mov
push
mov
sbb
mov
test
cld
sbb
mov
shrb
xor
sarb
je
push
sahf
dec
and
cld
or
cmc
mov
in
add
jbe
out
mov
bound
imul
loop
cltd
testb
mov
test
push
add
jnp
adc
lods
mov
lods
popf
cmp
in
mov
xchg
add
or
and
push
sub
jae
scas
xor
clc
xlat
rorb
adc
ljmp
add
mov
or
imul
int3
and
xchg
jbe
xchg
into
ret
aad
sbb
in
sarb
repnz
cmp
push
jl
mov
dec
jnp
imul
js
pop
repz
mov
sub
push
push
xchg
jae
sbb
cwtl
out
add
rcll
popa
aam
push
push
sub
jl
test
movsb
fdiv
dec
inc
jae
adc
pop
andl
jl
lock
ja
out
or
cmp
test
add
jmp
sbbl
out
cmpsl
cmc
jmp
adc
leave
cmp
mov
pop
mov
inc
hlt
mov
lods
int
outsl
xchg
lcall
mov
lcall
add
adc
mov
ss
pop
jb
sub
mov
das
loopw
lock
hlt
jnp
sar
add
jae
mov
dec
fs
xor
cmp
adc
sub
jnp
dec
hlt
pop
out
pushl
divl
xchg
pop
push
sub
mov
or
js
in
test
sub
adcl
in
cmp
hlt
addr16
xchg
xchg
adc
cwtl
lock
and
ljmp
cwtl
sub
imul
fildll
mov
scas
int3
push
and
cmp
inc
sub
and
xor
xchg
std
repnz
cld
jge
jbe
lret
das
push
ret
test
or
add
nop
pop
addr16
out
add
jnp
test
into
mov
sahf
mov
fdivrl
pop
out
mov
jne
cmp
sti
sbb
jl
dec
inc
and
out
cmp
add
xchg
sub
bound
test
decl
jne
pop
sbb
jns
aad
inc
add
sbb
pop
outsl
aam
inc
mov
gs
mov
ds
ds
icebp
adc
ret
mov
jl
add
scas
push
xor
fsubrp
popf
mov
mov
dec
dec
inc
and
mov
sbb
cmp
sub
aad
adc
adc
dec
cli
sarl
adc
cmp
mov
cld
mov
cmpsl
dec
push
mov
outsl
ljmp
hlt
push
fwait
xchg
lds
sub
bound
sub
repnz
push
xchg
pop
pop
call
mov
xor
iret
or
setl
fcmovne
adc
ficomps
pusha
out
lock
mov
ret
insb
sbb
pop
flds
in
out
scas
sub
shl
les
push
mov
out
and
popa
or
or
push
sbb
push
mov
push
sub
push
adc
or
test
call
add
movsb
jae
imul
pop
inc
adc
dec
inc
sub
enter
add
push
mov
sub
popf
push
pushl
pop
push
push
adc
adc
leave
and
adc
push
xchg
movsl
in
xchg
sub
fistl
jne
lret
sub
ljmp
aaa
ret
je
ljmp
dec
push
js
sub
inc
lods
enter
lods
insb
push
and
dec
or
nop
dec
ret
test
mov
pusha
fst
inc
push
into
mov
mov
imul
fcomps
dec
sub
int3
aam
repz
xchg
xchg
inc
outsb
sbb
or
jle
jbe
dec
xor
call
dec
adc
inc
push
cmp
adc
mov
sub
push
xchg
jecxz
or
frstor
xchg
or
loop
cwtl
inc
dec
gs
aam
popf
dec
jnp
push
dec
jg
popl
inc
test
mov
leave
or
fcmovu
adc
lods
inc
or
add
mov
int3
push
mov
test
out
or
xor
aas
cs
fistps
repz
and
in
call
push
arpl
hlt
cmc
jge
add
rcrb
rolb
fisubs
cmp
xor
movl
les
ret
push
xchg
test
inc
leave
icebp
je
test
or
adcb
pushf
or
xchg
int3
andb
xchg
js
pushf
xchg
add
mov
repnz
jge
jle
in
in
jnp
mov
push
xchg
dec
push
xor
lods
sub
adc
add
xchg
dec
roll
gs
frstor
push
daa
in
sahf
sahf
sbb
leave
push
or
jns
xchg
push
or
stos
hlt
sbb
mov
pop
push
add
cld
xchg
jge
sbb
loopne
dec
repz
test
cld
jmp
mov
sub
loope
lea
prefetch
inc
fstps
movsb
mov
in
mov
mov
insl
adc
lods
jge
fwait
inc
aam
jmp
enter
jle
dec
jnp
ljmp
test
fmul
test
lds
add
lret
cmp
out
or
popa
pop
ja
test
testl
sub
sbb
xor
sub
pop
jp
adc
mov
inc
push
rolb
mov
push
popa
cmp
adc
jb
mov
or
sub
mov
jge
cs
sbb
push
dec
in
mov
push
mov
dec
mov
xchg
vpmacsww
inc
jg
daa
and
mov
cmp
mov
sub
cmp
popa
mov
add
fidivrs
je
test
or
adc
inc
or
sub
jecxz
rcl
or
enter
add
enter
or
mov
rclb
push
or
and
add
jae
mov
adc
fstl
sub
in
fsubrs
outsb
push
lock
outsl
pop
xor
js
pop
xor
dec
inc
push
add
or
ret
mov
js
jae
and
mov
or
jg
add
cmp
aaa
inc
lahf
mov
les
mov
das
mov
sbb
cltd
popl
sti
loop
inc
aam
adcb
bound
add
inc
rcr
dec
cld
or
jg
mov
mov
xor
nopw
repz
mov
call
enter
dec
jno
xor
xchg
cs
xchg
rol
aad
push
push
jp
ret
fiadds
mov
test
or
sub
cmp
lds
push
test
xchg
popa
inc
adc
insl
repnz
xor
imul
repz
mov
rclb
inc
fldt
pusha
sbb
pop
pop
imul
rcl
inc
sub
ja
hlt
fs
int3
sbb
gs
cmp
dec
add
repnz
aam
out
test
jl
lock
xor
mov
and
dec
fiaddl
sbb
mov
pop
jns
xor
push
aam
jg
sahf
lds
or
pop
lret
out
hlt
cwtl
icebp
ret
xlat
or
rorb
cwtl
dec
mov
inc
repz
hlt
lret
mov
sbb
mov
push
add
add
xchg
cmp
popf
out
sub
push
jo
add
jp
push
mov
pop
in
in
jne
shl
lods
cmp
jne
cmp
mov
lods
pop
xchg
or
ret
aaa
add
lds
clc
mov
cmpsb
sub
adc
lret
cmp
fdivs
pop
sub
shlb
loop
ret
sbb
xchg
and
pusha
cmp
pushf
add
shlb
push
xchg
jae
dec
mov
lods
sahf
dec
push
test
nop
loop
xlat
jmp
inc
loop
fs
push
mov
push
mov
call
scas
mov
push
adc
push
out
mov
cld
or
ret
adc
lea
sub
mov
and
inc
dec
int3
ror
stos
mov
out
leave
ret
lret
or
adc
sbb
addl
jne
fsubrl
inc
out
das
arpl
cmc
mov
lea
rcll
lea
xorb
dec
mov
mov
pusha
rolb
inc
shrb
or
push
aam
adc
inc
xor
sub
into
xchg
inc
cwtl
mov
jle
mov
dec
cmp
out
cmp
test
xor
xchg
sub
js
mov
push
inc
leave
test
add
aam
dec
out
sub
xor
sub
pop
roll
aam
mov
pop
rcll
jmp
popf
hlt
pop
mov
or
sub
pop
mov
iret
call
lods
inc
out
scas
into
mov
dec
sbb
mov
out
push
mov
std
repz
aad
rorb
sub
inc
fdiv
test
test
mov
xchg
or
dec
inc
shl
fsubl
aad
sbb
pop
inc
add
fidivrl
pop
cmpl
push
int3
cld
cmc
dec
pop
mov
jl
sub
mov
add
pop
xchg
pop
test
orb
jle
das
into
fistpll
shrb
ds
lcall
enter
xchg
push
lods
push
jo
sbb
pop
jecxz
sbb
or
mov
es
jge
mov
daa
xor
shl
mov
push
xchg
fwait
add
repz
outsb
insb
nop
cmp
iret
add
or
cmp
and
mov
call
ret
pushf
sub
nop
jns
or
jnp
fmuls
es
out
push
mov
cmp
stos
icebp
lahf
pop
and
addl
xchg
aam
jne
in
pop
xlat
push
dec
sbb
scas
dec
mov
add
test
lahf
lret
mov
pop
repz
dec
inc
testb
inc
add
pop
add
adc
cmc
jne
aad
cmp
or
cmp
add
sbb
popf
dec
lock
mov
or
add
out
pop
mov
aaa
test
fnstcw
mov
add
fwait
jae
xor
in
fiadds
pop
addr16
sbb
fistps
out
jbe
mov
lret
xchg
mov
jns
xor
repnz
stos
adc
addr16
leave
hlt
lods
pusha
outsb
jb
cwtl
nop
sub
out
subl
mov
subb
pop
hlt
dec
ds
sub
clc
jbe
xchg
pop
adc
outsl
dec
in
or
jbe
lret
in
movsl
pop
jge
lods
pop
push
push
data16
or
xor
sbb
out
sbb
add
mov
or
mov
push
hlt
push
jbe
fstl
sub
adc
gs
aam
jb
and
dec
xlat
jmp
fnsave
fnsave
jp
jbe
xchg
fwait
lock
cmp
ficompl
sub
inc
pop
mov
js
push
sub
scas
xor
hlt
lods
dec
lcall
outsb
out
hlt
mov
shrl
lcall
sbb
int
xchg
cltd
pop
lea
xchg
cmpsl
mov
lods
sahf
aas
movsb
jo
mov
test
in
inc
fiaddl
mov
lods
adc
sbb
ficoms
out
adc
pop
sub
push
xor
imul
push
cmp
lods
mov
aam
out
imul
jnp
fcmovnbe
jno
sub
push
jne
xor
adc
sub
imul
jp
adc
movsl
cmpsb
shrb
rcr
adc
stos
orb
sbb
and
adc
push
jno
lret
or
jg
pop
adc
sub
outsl
pushf
adc
xchg
lods
addr16
adc
movsbl
mov
fs
mov
push
out
mov
sbb
adc
mov
or
mov
xchg
jg
loop
outsb
xchg
add
faddp
dec
les
jp
push
sub
and
add
aad
and
cltd
pop
fstps
push
cmc
gs
loope
sub
out
subl
xchg
jl
dec
xor
xorb
or
aam
pop
jnp
mov
adc
jo
lods
repnz
jg
adc
repnz
int3
sbb
lcall
scas
faddl
xor
ret
xchg
in
and
xorl
xchg
in
mov
inc
sub
cmpsb
lock
lods
or
imul
push
repnz
and
les
popl
cmpb
jecxz
jno
mov
xor
inc
xchg
ja
xor
push
cmp
push
jmp
in
stc
cmp
sbb
adc
les
or
addr16
mov
jae
aad
add
addr16
dec
jbe
in
lcall
hlt
pop
rcl
adc
xorl
adc
sub
push
cmp
lea
sbb
jns
pop
dec
pop
sub
ret
adc
sub
sub
out
int3
aam
sub
and
mov
repz
inc
xor
sub
aam
adc
mov
and
xchg
add
ljmp
out
shlb
call
test
loope
fists
mov
jp
xchg
push
outsl
pushl
and
lret
and
scas
fdivrl
je
pusha
push
sti
ret
dec
xchg
jb
jecxz
enter
lret
dec
pushf
xor
fnstsw
push
fsubrl
in
pop
mov
hlt
aas
repz
lea
pop
add
jb
movsb
adc
insb
xlat
push
arpl
and
push
cmp
out
jne
and
lods
push
jno
fidivl
loop
imul
cltd
push
mov
rcrb
or
adc
sub
and
xor
dec
fldt
jl
cmc
testb
cwtl
movsb
or
fisubrs
sub
fildl
pop
cld
lods
sarb
or
aam
xor
mov
rcll
adc
loopne
test
les
and
add
xor
adc
sub
sbb
jl
in
mov
xor
mov
sti
iret
adcl
aaa
pop
mov
call
cs
and
push
sbb
movsb
nop
adc
cmp
je
jbe
inc
jnp
and
lock
jno
cmp
xchg
dec
fidivs
jg
mov
mov
adc
inc
xlat
sbb
inc
popa
in
test
lds
mov
push
and
iret
and
pusha
mov
mov
pop
mov
mov
imul
dec
cmp
push
pop
pop
call
or
mov
adc
sbb
mov
or
rcrl
dec
xchg
in
pop
add
rcrb
adc
mov
jae
push
xor
imul
dec
mov
jnp
loop
rclb
sti
aam
pop
inc
int3
repnz
dec
cli
push
xchg
sbb
mov
insl
notl
test
push
daa
dec
pop
repnz
daa
xor
and
and
jmp
enter
rolb
ds
cmpsb
mov
outsb
pop
mov
rolb
sbb
ljmp
nop
data16
sbb
adc
jle
pushf
aam
lods
or
notb
iret
dec
outsl
pop
int
frstor
jns
or
sbb
enter
cwtl
push
in
je
adcl
imul
ret
test
ljmp
test
jo
mov
add
inc
push
shr
pop
inc
loop
sbb
sub
aam
sub
pop
mov
test
pushf
movsl
sbb
inc
mov
ret
mov
pop
aas
sarb
incl
sahf
and
test
and
stc
sbb
jmp
in
sbbb
inc
push
jle
gs
pop
and
hlt
shrl
rcrb
pop
sbb
mov
push
ds
jmp
arpl
push
and
mov
push
jb
movsb
pop
sub
lock
out
jo
add
mov
cmp
pop
call
faddl
mov
out
xor
iret
dec
mov
idivb
inc
add
push
adc
pop
in
pop
mov
adc
test
add
jns
push
add
adcb
mov
sbb
fisubrl
jle
js
in
xor
sbb
jns
mov
call
sub
mov
pop
mov
xchg
in
and
lds
pop
lahf
pop
sub
ret
not
rcll
pop
adc
popf
int3
jmp
ror
popa
stos
leave
movsb
movsl
inc
mov
das
add
cmp
out
shrb
scas
in
xor
cltd
and
scas
mov
in
aam
pop
into
xchg
add
sub
sahf
out
jl
mov
cmp
cmpsb
jmp
lock
and
or
rcrl
jmp
in
movsl
dec
fucomp
jae
add
lret
fisubrs
inc
imul
push
mov
rorb
sbb
sbb
ljmp
ds
pop
sbb
bound
sub
outsl
jo
lods
jne
jns
mov
in
jae
adc
mov
addr16
ret
jl
daa
test
or
movsl
adc
subb
ss
data16
lods
test
aam
data16
xlat
rolb
aaa
lret
xlat
sub
cld
ficoml
xor
pop
clc
lods
push
cmp
inc
scas
int3
je
iret
ss
mov
cmpsb
ret
jle
sahf
call
pop
lock
pop
push
inc
mov
sub
jge
in
pusha
das
lods
or
push
repnz
add
add
pop
xchg
mov
and
mov
jle
xor
fwait
daa
add
sahf
or
adc
cmp
test
xchg
enter
fdivr
xchg
cmp
cwtl
fnclex
push
ret
push
inc
test
sub
sarl
jg
mov
or
mov
enter
outsb
push
adc
sub
sti
and
add
in
mov
sbb
int3
cmpsl
repz
inc
lods
jle
cwtl
aam
fs
in
add
adc
adc
push
jl
pop
mov
add
lret
sub
ret
and
sub
lods
and
mov
gs
ds
fildl
push
xchg
mov
cli
adc
jl
cs
mov
xor
xor
cmp
xor
ret
sub
xchg
in
push
cmpsb
das
fdivrl
sbb
sub
or
aam
mov
mov
xor
sub
mov
cmp
loop
adc
in
xor
xor
pop
das
mov
rcll
out
jae
or
and
mov
inc
xchg
dec
clc
std
or
sub
jb
fdivrs
and
add
mov
xchg
mov
loopne
and
pop
mov
out
lret
scas
sbb
adc
jle
std
mov
cmpb
xor
div
sbbl
cmpsb
mov
inc
or
sub
test
sub
sub
imul
test
jns
pop
mov
dec
aam
add
push
add
inc
cmp
loope
adc
and
imul
iret
pop
adc
xor
out
jp
mov
sbb
addr16
cmp
push
repnz
jns
int3
sub
cltd
mov
xchg
adc
arpl
adc
in
cmp
add
cli
or
mov
pop
push
out
dec
jno
and
cwtl
gs
mov
jl
cld
lods
inc
jge
add
fidivl
mov
rcll
rolb
or
je
inc
xchg
cmc
out
dec
clc
fdivl
je
sub
int
lahf
movsl
lret
mov
fisttpl
ds
sub
sub
fnstenv
stos
pop
jb
jecxz
mov
cmc
dec
sbb
in
mov
pop
mov
insl
fdivs
scas
mov
mov
xchg
cwtl
jl
clc
ret
outsl
xlat
fnstsw
dec
rorb
push
cli
sbb
je
mov
push
fsts
subl
mov
and
insb
xor
shl
jnp
popf
repz
ret
xchg
add
mov
sub
adc
mov
out
sub
aas
mov
adc
mov
test
push
sub
or
adc
lods
test
mov
xor
pop
sbb
subl
nop
ds
outsl
enter
jo
and
mov
aam
aam
ja
jae
repz
sub
fsubrp
testb
push
ficoms
subb
stos
pop
xor
sub
sbb
out
cld
and
jb
xchg
sub
in
outsb
xor
ret
les
adc
mov
cmpsl
and
iret
add
push
outsb
shrb
or
in
add
add
add
bound
stc
mov
orl
fldcw
jp
rcll
jg
insb
push
dec
pop
dec
loopne
dec
aad
in
popa
adc
cmp
addb
sub
jl
in
mov
ror
sub
pop
testl
dec
jnp
cli
int
test
test
xchg
test
mov
lods
pop
clc
mov
push
push
and
arpl
dec
lret
out
jo
scas
lahf
sbb
mov
dec
mov
sub
cmpsb
or
sub
insb
popa
and
xor
jo
xor
sub
sub
push
pop
test
mov
shld
clc
adc
xchg
sahf
mov
or
in
into
ret
inc
enter
aam
push
in
mov
ror
and
cltd
cmpl
mov
cs
cmp
push
lods
mov
jae
sbb
lret
pop
push
xchg
lock
test
xor
mov
push
je
inc
fstpl
outsl
dec
call
dec
mov
xchg
nop
das
iret
xlat
or
fwait
or
jb
or
in
stos
or
test
pushf
in
xchg
sub
jmp
enter
xchg
cmp
daa
insb
movsl
pop
lret
and
adc
push
dec
jo
xor
dec
ffree
lea
add
sbb
add
loope
inc
or
test
xchg
sbb
jns
scas
inc
std
xchg
decb
and
jns
xchg
orb
fdivr
repnz
repz
movsb
cli
orl
jo
ds
sub
xchg
iret
cmc
pop
lods
arpl
out
sub
test
mov
inc
xchg
lahf
daa
push
inc
mov
and
jno
inc
in
cli
adc
aas
dec
les
sub
scas
repnz
mov
adc
push
call
xchg
adc
dec
scas
jnp
pop
jo
cmp
and
adc
add
or
les
cld
fdivrl
hlt
or
push
out
aad
xor
lods
and
mov
pop
test
jge
jge
jae
mov
cmc
mov
xor
jmp
shl
lds
jnp
lret
lods
and
rcll
in
dec
push
scas
lea
test
popa
sbb
rolb
fwait
sarl
mov
icebp
imul
outsl
mov
ss
xchg
mov
lcall
inc
add
mov
aas
test
mov
mov
xchg
cmpsl
adc
jne
sbb
aad
sub
dec
inc
cld
or
sahf
dec
rolb
mov
repnz
movsb
inc
in
push
in
test
popf
enter
push
ja
sub
in
cmpb
movsl
xchg
dec
xchg
in
adc
xor
jg
shlb
inc
gs
add
mov
daa
xchg
clc
jp
pop
push
pop
outsl
cmp
test
inc
xchg
and
popa
sub
and
testb
jg
cmp
add
hlt
adcb
lods
xchg
mov
ficompl
cmc
jmp
lahf
addr16
push
or
push
mov
mov
xchg
test
mov
bound
ror
jle
dec
or
xchg
pop
in
cld
pushf
clc
mov
int3
and
and
imul
cmp
mov
inc
faddl
test
dec
mov
lcall
arpl
in
ret
call
xor
pop
cmp
daa
pop
mov
mov
sahf
addr16
pop
icebp
dec
loop
xor
inc
xlat
stos
test
aam
clc
loope
paddsb
test
xchg
pop
sub
lea
imulb
mov
jp
dec
hlt
mov
sub
repnz
rol
pop
fisubrs
add
jle
push
sbb
rol
jbe
adc
addr16
inc
jbe
aaa
push
sub
pusha
sub
sbb
shl
fstpt
es
lods
or
sub
mov
mov
xor
fistps
push
and
popf
sbb
or
cmp
test
xchg
push
xlat
sbb
cmp
in
lds
enter
adc
push
sbb
push
xor
stc
push
sub
sub
scas
jae
mov
hlt
test
sub
movsb
icebp
and
jae
and
or
dec
dec
inc
xor
pop
lock
pop
jae
jnp
out
iret
mov
sar
hlt
adc
pop
es
pop
ja
lds
adc
jle
cmp
in
daa
and
iret
sbb
rcrb
nop
shll
push
in
mov
sub
add
lods
icebp
or
fistps
icebp
cmp
adc
push
lods
jbe
dec
out
rcll
mov
adc
dec
cmp
sub
dec
dec
lahf
push
mov
repz
inc
jle
in
mov
in
insb
aam
inc
or
popf
aaa
adc
lods
xor
aas
xor
aad
xchg
sub
adc
add
out
repnz
or
movsl
sub
lea
mov
mov
jl
enter
movsl
sub
dec
ret
test
and
inc
xorl
jp
and
push
adc
add
ljmp
popf
mov
push
scas
cmpsb
jae
cmp
movsb
insb
adc
addb
andl
in
inc
xor
leave
sbb
ficoml
cltd
dec
in
je
das
xor
jg
sub
mov
out
jb
adc
push
or
sub
add
xor
dec
push
sbb
nop
notb
dec
rcrb
repz
push
mov
push
in
cltd
adc
scas
sub
or
sbbb
clc
push
pop
sub
pop
cli
int3
shlb
add
fnsave
stc
and
int
popa
and
xlat
cmp
test
xchg
nop
dec
and
in
in
ds
add
mov
sub
cmp
stos
pop
test
jb
hlt
roll
jno
jle
call
outsb
inc
ljmp
mov
andb
add
sub
add
lret
xor
test
sub
dec
cli
pop
gs
fsts
sbb
xchg
cltd
dec
xchg
xchg
xor
ds
jp
lock
out
pop
test
fs
mov
xchg
mov
adc
fwait
mov
lret
jp
fcoms
push
cwtl
jmp
cli
push
cmp
jno
dec
mov
mov
out
mov
push
fisubrl
push
ljmp
scas
lods
loopne
jbe
push
lods
pop
lods
jl
push
inc
dec
xlat
stos
shll
faddl
cltd
and
ret
add
fdivp
loop
stc
lret
out
clc
fsub
ror
in
cmp
pusha
pop
js
repnz
jl
popf
fabs
stc
pop
lock
lock
mov
xor
int
pop
add
out
pop
dec
push
lahf
std
fdiv
mov
sub
out
hlt
sar
mov
xor
pop
nop
mov
inc
cmp
xor
push
in
sub
mov
int3
mov
clc
loope
xor
mov
add
aam
arpl
push
mov
sbb
xor
jo
push
or
mov
outsl
mov
xchg
sub
sarl
xchg
push
adc
sub
xchg
pop
or
xor
scas
or
test
dec
sarb
cmp
std
xor
fdivl
push
pop
xor
ja
clc
into
test
or
or
and
dec
lret
loopne
aas
jb
out
pop
dec
arpl
pop
pop
xor
jbe
push
mov
dec
stos
add
cltd
hlt
dec
dec
jns
adc
inc
sub
daa
cmp
call
xor
mov
mov
sub
test
repnz
add
in
imul
inc
or
add
rolb
mov
rorb
dec
test
push
dec
ds
jne
jns
and
push
sbb
sbb
mov
sub
mov
mov
shl
mov
and
fimuls
loope
and
test
in
aam
pushl
mov
jb
pop
mull
or
rclb
fistl
in
arpl
jns
mov
adc
gs
sub
nop
dec
adc
sbb
adcl
add
fstpt
imul
pop
inc
stc
jnp
adc
push
lods
iret
addl
jnp
movb
setae
pop
movsb
sub
lret
mov
fimull
jl
mov
je
sbb
int3
dec
cld
test
int
jns
add
dec
or
call
inc
jecxz
int3
ds
popf
into
mov
test
and
push
test
xlat
out
int3
push
sti
jl
add
lods
out
adc
sbb
mov
nop
adc
sub
jp
ja
add
lods
movsl
push
add
push
mov
dec
xchg
lock
or
xchg
mov
fiadds
pop
in
jne
out
jg
or
cld
dec
repnz
clc
jle
cs
dec
adc
adc
jb
insb
in
sub
adc
not
adc
jp
dec
push
add
scas
adc
push
xchg
popf
lods
mov
iret
pop
xor
stc
scas
sbb
std
pop
std
adc
or
pop
mov
jbe
fnstenv
into
sbb
mov
sub
ret
sbb
adc
test
and
pop
packssdw
dec
xlat
push
sub
jle
nop
jne
popf
push
xlat
call
les
jb
lea
xor
pushf
je
loop
popf
push
or
adc
jp
dec
repz
stc
rolb
stos
fs
mov
insb
and
lds
adc
sahf
jge
notl
ret
fiadds
notl
pop
mov
ret
xor
scas
xorb
xchg
and
jg
jbe
sub
or
add
sbb
ret
sub
pop
dec
adc
out
adc
lods
adc
aam
xchg
jbe
jge
pop
push
aaa
adc
loopne
cmpsl
hlt
sahf
fsubrs
popf
add
jae
in
or
xchg
das
xchg
xor
clc
jnp
or
scas
aam
pop
fisubs
loopne
jne
jb
add
fsubrs
in
aaa
ret
and
ds
jnp
popfw
xor
shll
jle
mov
jbe
xchg
push
aam
out
lods
or
xchg
cltd
into
xlat
add
and
sbb
jne
jns
push
ret
lods
into
sbb
mov
stos
lock
add
adc
mov
cmp
movsl
mov
mov
xor
aaa
mov
mov
dec
lods
xchg
pop
pusha
jecxz
sub
jbe
lea
jle
sub
mov
imul
adc
pop
addb
xchg
fcoml
sub
leave
imul
lods
mov
lahf
mov
lea
push
mov
dec
dec
not
cmp
sbbl
dec
jp
loope
ret
cs
ljmp
sub
nop
rclb
jle
mov
and
rolb
cmp
adc
or
pop
or
push
subl
lret
xor
in
orl
add
xchg
push
lods
xor
pop
fildll
test
mov
fmull
add
xlat
shrl
push
aad
aaa
mov
pop
hlt
xchg
adc
out
loope
fstl
lds
shrl
test
inc
xlat
out
or
sbb
pop
adc
mov
rolb
mov
int3
in
popf
cld
adc
jb
test
cmp
jp
sbb
fwait
sub
in
xor
sub
add
push
test
push
fstpt
stos
xchg
push
fprem
dec
les
fwait
cmp
sbb
mov
clc
jnp
mov
shlb
push
fwait
icebp
sti
orb
and
andb
adc
or
int
mov
mov
lret
xchg
jmp
ds
adc
inc
int
test
or
dec
addr16
ljmp
ret
push
or
sub
dec
repnz
lahf
sbb
add
lret
xchg
imul
dec
fimuls
cwtl
mov
repz
ret
push
jle
pop
fwait
js
jmp
sahf
test
dec
int
xchg
mov
stc
xor
rorb
and
sub
lahf
insl
sub
sarb
arpl
scas
mov
fidivs
test
arpl
adc
jne
adc
pop
leave
leave
add
mov
aad
jbe
mov
and
shr
shrl
adc
iret
aad
jge
sarb
and
leave
jbe
mov
xchg
movsl
adc
test
iret
subb
je
shrb
call
xor
cmp
clc
add
cs
or
sbb
test
stc
jno
movsb
jp
mov
shrl
in
outsb
add
dec
push
adc
insb
sub
mov
repnz
lcall
mov
sub
mov
pushf
loop
and
movsl
popf
xchg
jo
jg
xchg
mov
sbb
xchg
ret
sub
rcr
roll
sub
push
adc
xchg
mov
cmpsb
cmc
sbbb
or
jg
ret
fildll
iret
repnz
jmp
adc
cmpsb
dec
testb
cltd
add
push
addr16
and
xor
daa
or
xchg
and
stos
push
mov
rclb
enter
adc
sbb
pushl
mov
cmp
aam
pop
shr
insb
popf
sarb
xor
js
cmp
adc
mov
fiadds
out
mov
imul
cmp
leave
enter
xchg
pop
inc
in
mov
sub
call
push
mov
and
out
sub
sub
fisttpll
hlt
test
cmpl
push
data16
adc
mov
jmp
leave
call
movsl
lahf
andb
xchg
shrl
rclb
fcomp
add
add
adc
pop
push
xchg
and
or
xor
adc
and
pop
xchg
fsts
js
inc
or
imulb
push
mov
xchg
adc
and
xor
in
sarl
cmc
movsl
loop
js
adc
mov
cli
movsb
std
or
inc
mov
sarl
xchg
iret
jae
mov
mov
sub
adc
js
shr
rcll
xchg
cld
lods
andb
jecxz
xchg
mov
imul
adc
out
add
decl
dec
fcoms
pusha
out
mov
daa
call
dec
adc
pop
inc
mov
aad
insl
xlat
dec
rcrb
or
insb
pop
sub
mov
sub
test
shll
lret
or
add
adc
je
and
pop
bound
fs
add
lock
or
sbb
stos
mov
imul
ja
mov
cli
repz
pop
mov
imul
sub
fisubs
arpl
test
scas
sbb
ja
leave
inc
jbe
fld
out
popf
push
jae
mov
mov
cmp
add
popf
pop
add
test
movsb
bound
mov
push
xchg
push
out
sub
sarb
imul
adc
dec
out
shrb
push
in
in
xchg
paddsw
jg
push
lods
stos
cld
test
test
cmpsl
movsl
shrb
jno
cmp
lret
pop
inc
rcl
sub
xchg
sub
dec
movsb
push
mov
pop
cmp
push
and
xchg
xchg
mov
jecxz
hlt
inc
insl
mov
add
inc
movsb
sub
pusha
and
jl
out
repz
add
or
cmp
mov
sahf
sub
addr16
adc
sarb
mov
ret
popf
rcrb
call
jns
cli
int3
mov
lods
mov
bound
xlat
jmp
mov
nop
shl
mov
xor
xchg
call
mov
repnz
in
cmp
mov
adc
pop
adc
sti
out
xchg
lea
mov
and
arpl
mov
js
inc
dec
mov
add
fs
jnp
das
xor
jno
leave
xchg
insb
mov
adc
cmc
jnp
mov
fistl
sahf
out
pop
adc
iret
inc
cmpsb
add
add
or
stc
in
xor
adc
pop
stc
shll
pop
push
lahf
hlt
jl
inc
fs
hlt
mov
dec
data16
lret
sahf
scas
mov
or
jg
mov
sarl
into
pop
inc
adc
inc
sahf
ja
mov
lret
lcall
ret
insb
out
es
sub
xor
or
push
mov
in
push
lret
cmp
adcl
les
fdiv
outsl
mov
cmpsb
arpl
add
add
sarl
jl
add
call
mov
mov
xchg
les
sub
cmp
lods
mov
xor
sbb
test
test
jnp
in
iret
push
sti
je
aad
repnz
mov
stc
lret
xchg
mov
ficoms
xchg
pusha
fildl
in
adc
enter
fwait
scas
or
shrb
jle
mov
or
loop
xchg
movsb
jmp
movsb
jb
lock
cmp
xchg
mov
imull
xlat
int3
in
nop
int
pop
pop
dec
xchg
dec
jns
mov
sarb
push
xor
dec
or
cwtl
sbb
sbb
loopne
pop
in
adc
fcmovne
xchg
jmp
enter
pop
dec
mov
insb
xchg
nop
inc
cwtl
jne
jmp
iret
ret
jb
push
and
and
mov
sub
lret
rcr
sub
inc
cmp
mov
sub
iret
jne,pn
jo
adc
rorl
adc
lret
fisubrs
cli
and
pop
inc
cmp
or
jo
lret
push
aad
fs
daa
enter
fs
popf
xor
test
mov
cmc
inc
pop
jle
jne
xor
lock
fxch
xor
repz
adc
pop
test
push
out
jnp
mov
cmpsb
mov
cwtl
sub
aad
push
fnstcw
out
aam
mov
adc
sub
rclb
cltd
inc
or
sti
cmpsb
push
js
inc
push
aaa
fdivl
fsubl
int3
mov
mov
dec
xchg
xor
repz
insb
cs
adc
push
addr16
gs
fxch
mov
jp
cli
movsl
fsubl
xor
inc
pop
aam
inc
and
sbb
and
inc
aam
jns
loopne
mov
jecxz
push
or
jl
xchg
fnclex
xor
lods
xchg
jne
jae
push
inc
mov
fstps
or
dec
shlb
clc
ret
and
pop
loopne
adc
les
pop
jl
or
sub
lcall
jl
add
out
mov
adc
data16
or
mov
cltd
add
dec
test
mov
icebp
hlt
ja
fcmovbe
sbb
sub
rolb
rcr
adc
in
bound
rcll
mov
lods
aam
out
mov
sub
xchg
pop
fistpll
push
mov
fldl
out
in
mov
in
sub
pop
jge
mov
sub
incb
xchg
dec
xchg
aam
push
aaa
in
mov
lret
pop
sub
imul
movsb
int
lcall
aad
jno
sbb
bnd
repz
fidivrs
cmpb
fld
fdiv
pop
inc
sub
stos
mov
out
jg
ljmp
cltd
jge
jmp
arpl
mov
mov
mov
sbb
adc
leave
mov
xchg
sub
xor
shrl
push
or
inc
test
sbb
cmp
sbb
je
push
sahf
jae
inc
test
fldt
lods
rol
std
lret
push
in
sub
pop
data16
adc
fidivl
stos
std
fwait
sub
incl
sub
mov
shrb
adc
inc
adc
shl
push
fwait
adc
out
mov
adc
dec
out
orb
jnp
push
leave
inc
cmp
stc
push
das
fisubrs
mov
cmp
sbb
or
les
cmp
clc
push
mov
xchg
adc
subl
lcall
cmp
das
jno
fisubs
cwtl
mov
insl
fst
lods
xor
outsb
jnp
sub
test
sbb
ja
fbstp
add
fsubrl
jle
jne
mov
mov
inc
scas
imul
iretw
push
test
push
lods
push
outsl
xchg
adc
jne
rorb
out
push
pop
std
sbb
push
mov
and
arpl
adc
jae
jecxz
nop
cmpsl
inc
pop
jg
adc
and
icebp
lret
mov
fwait
sbb
pop
xchg
stos
inc
sti
mov
les
mov
jns
or
adc
push
pop
scas
ret
adc
lahf
pusha
jge
sarl
rol
fsubrl
sub
add
mov
loope
pop
jne
and
fsubrp
int
test
jl
fistpl
add
mov
push
shrb
mov
insb
orb
js
push
ljmp
mov
adc
inc
and
aas
pop
fisttpll
mov
mov
flds
sbb
or
or
push
es
lods
cltd
mov
dec
sub
je
pusha
mov
movsl
push
in
xchg
push
jl
jle
hlt
loop
in
mov
and
clc
out
mov
xor
cmp
repnz
sub
inc
pop
es
or
lock
jge
scas
or
sbb
adc
loopne
in
and
and
pop
rolb
mov
fiaddl
add
mov
hlt
adc
jle
add
cmp
in
scas
outsl
pop
pusha
inc
add
jecxz
aas
inc
jecxz
mov
cmp
adc
sub
and
xor
xchg
sbb
call
or
rorl
pop
outsl
loop
cmp
insb
rolb
adc
mov
in
js
xchg
or
sub
scas
dec
mov
and
cltd
pushf
test
cmp
arpl
and
pop
test
jbe
cltd
sub
loopne
xor
shlb
xchg
rorl
lcall
std
es
xchg
je
pop
mov
xchg
dec
sub
dec
push
adc
ja
adc
jne
mov
arpl
mov
pop
push
dec
jae
mov
pop
or
add
fisttpl
push
adc
jge
dec
jnp
mov
mov
lret
dec
mov
mov
in
and
mov
icebp
rcrb
cmc
push
pushf
mov
fs
cs
jbe
cld
mov
bound
push
sub
out
sub
fisubrs
int
rolb
jbe
leave
sub
or
push
call
or
rclb
lret
call
dec
rep
inc
addr16
xor
jne
out
push
adc
mov
xchg
ret
aad
sub
imulb
sub
jo
inc
mov
cli
dec
mov
sub
xor
and
push
cmp
stos
idiv
stc
cld
lds
cmp
mov
loopne
add
rcll
mov
mov
hlt
adc
push
cmp
or
or
lods
xor
sub
mov
sti
aad
sbb
lret
inc
in
sub
fdivp
gs
mov
cmp
lret
mov
inc
stos
mov
or
mov
adc
mov
subb
cmp
inc
jl
xchg
sub
pop
imul
and
cli
outsl
jle
mov
iret
das
mov
ja
cmp
push
test
sbb
ljmp
and
mov
or
add
daa
ljmp
xchg
je
mov
and
push
fldl
sub
ja
adc
pop
shll
xor
push
dec
inc
out
adc
mov
mov
xchg
imul
in
dec
popa
shr
ljmp
addb
push
in
cmp
fsubr
aam
add
pop
adc
out
leave
out
lds
xor
daa
or
mov
mov
lahf
icebp
push
cli
jecxz
inc
xchg
mov
xor
mov
cmp
push
adcb
inc
sub
sub
insb
jg
jl
add
mov
sub
xchg
or
aam
add
mov
insb
inc
adc
scas
movsb
nop
sub
lock
js
mov
mov
lods
test
push
test
shl
hlt
xor
in
sbb
leave
in
cmp
cmp
imul
lret
into
mov
pop
inc
scas
out
add
and
sub
and
and
enter
fadd
outsb
cmp
cli
lcall
pop
fildl
and
cmpsb
push
cmp
sbb
xor
dec
jbe
push
jb
cmp
jmp
mov
mov
out
mov
lea
sub
cmp
bound
dec
repz
repz
xchg
jno
sub
pushf
sub
stc
jl
rcl
sbb
sub
jg
test
jb
lret
pushl
pop
sub
cwtl
jnp
out
shl
mov
jne
inc
outsl
pop
or
fmulp
lock
lret
rcll
out
orb
mov
ja
and
mov
addl
aam
push
call
xor
xor
adc
aam
out
mov
jle
xorb
adcl
pop
push
insb
loopne
dec
stos
sub
sub
mov
mov
cmp
sub
adc
ds
sbb
fdivrl
les
adc
outsb
sub
and
adcl
cmpsl
add
sub
xchg
ja
loopne
jb
or
jp
mov
fisttpl
out
fmull
pop
lods
push
add
imul
push
andl
pushf
pop
jg
push
in
les
pop
jae
aaa
scas
cmpsl
mov
cltd
frstor
sarb
repnz
or
lret
ret
aam
mov
bswap
shrb
inc
fistps
push
in
jl
mov
ds
add
jp
in
pop
dec
jbe
xor
adc
or
adc
inc
add
mov
cwtl
cwtl
inc
testb
xor
push
pusha
cltd
push
add
dec
insb
lret
scas
inc
xorb
pop
sub
aas
cmpb
pop
lods
daa
cmp
or
cmpsb
sub
pushf
nop
ja
mov
sbbl
out
adc
jne
jecxz
adc
cmp
push
mov
repnz
aad
dec
push
out
sub
adc
out
sysexit
fcompl
lds
les
fsubrp
push
or
xor
pop
and
add
mov
aam
or
add
lahf
testb
or
mov
mov
lea
mov
mov
adc
orl
cmpsb
stos
lds
lds
push
sbb
sub
sub
scas
sub
les
repz
pop
mov
dec
cmp
cmp
cmpsb
xchg
int3
adcl
insb
shlb
cwtl
pop
jp
push
mov
push
icebp
xor
add
and
mov
ret
xchg
jnp
dec
ljmp
stos
or
fcmovne
out
aam
jne
sub
hlt
decb
pop
push
bound
push
aaa
or
daa
dec
test
sub
ljmp
hlt
mov
arpl
inc
insb
and
push
add
mov
jmp
adc
loope
mov
hlt
movsl
cmp
insl
mov
jle
mov
orb
jecxz
nop
xchg
jmp
fimuls
or
sub
daa
out
lds
popa
iret
test
gs
mov
outsb
loopne
mov
jo
mov
out
adc
pop
mov
out
lods
mov
in
mov
jnp
je
cmp
xor
rorb
xchg
cmpsl
hlt
in
aas
push
xorl
sub
gs
gs
dec
and
movsl
insb
clc
test
inc
add
mov
add
xor
push
mov
cwtl
ds
divb
or
jmp
dec
outsb
xchg
sbb
adc
dec
xor
popa
mov
sarb
pop
ret
and
mov
sbb
icebp
lret
hlt
xor
cwtl
lods
cs
negb
xor
mov
adc
cmpl
jae
sub
jl
or
cs
rolb
hlt
pop
nop
call
inc
icebp
jle
jns
idivb
lock
or
jns
xchg
fidivs
push
data16
xchg
sub
add
pushf
insb
minps
dec
in
add
in
scas
xchg
ror
out
lret
xchg
popf
xchg
mov
insb
push
lret
xchg
lret
lods
test
push
sub
or
sbb
xor
xor
fldenv
cmp
hlt
insl
cmpsb
jae
sub
lret
cmc
nop
filds
jo
aam
add
clc
cmp
mov
sub
sahf
adc
mov
sar
xchg
aad
mov
xor
inc
sub
mov
push
sahf
fld
inc
add
adc
popf
mov
mov
pop
scas
mov
daa
aaa
xchg
jecxz
push
ljmp
sub
xchg
jmp
out
es
or
es
dec
push
pop
mov
jecxz
leave
in
sub
mov
fsts
fidivrl
mov
mov
jbe
shrl
addr16
movsb
loop
push
pop
mov
dec
sbb
push
popf
adc
push
repz
xchg
jae
mov
dec
mov
nop
in
jbe
ret
adc
scas
jae
add
rol
add
cmp
stos
adc
fiaddl
push
shrb
or
xor
adc
stos
mov
hlt
je
outsl
insl
cmc
dec
int3
or
adc
test
adcb
pushf
jbe
lds
inc
insb
testb
cmpsb
sbb
and
cmp
cmp
pop
push
lea
dec
rcll
arpl
xchg
mov
shll
ret
nop
in
push
mov
fidivrl
popf
repnz
repz
inc
leave
dec
sub
test
add
pop
cmpsb
and
lods
sub
cs
jne
pop
xchg
and
pop
and
adc
adc
pusha
ja
adc
jecxz
mov
mov
adc
stc
dec
sarb
aas
xlat
fcoms
xor
jl
leave
daa
cmpsb
cmp
lock
stos
xor
repnz
mov
xor
sub
sub
aas
add
fsubs
mov
ljmp
jp
pop
mov
dec
or
or
xchg
inc
push
inc
adc
xor
dec
push
cwtl
xor
xor
lcall
xor
jl
cmp
not
xchg
and
jmp
xor
int3
shlb
or
jo
iret
xor
pop
aam
decl
in
and
cwtl
popa
and
sbb
sbb
inc
popa
and
mov
cmp
test
shlb
xchg
push
cmp
push
jle
es
sbb
ds
lds
fcomps
mov
or
addb
loop
push
dec
leave
scas
imul
mov
fstpt
mov
and
mov
adc
push
js
adc
call
xchg
xchg
inc
dec
xor
jbe
add
pop
or
fildl
sbb
data16
into
push
lcall
push
and
sub
inc
jmp
in
call
jmp
or
pushf
push
jnp
cmpb
sbb
or
addb
lods
mov
cmp
repz
iret
ret
xor
or
fmull
fidivrl
mov
xchg
lods
je
popf
and
outsl
dec
mov
in
aaa
pop
push
ret
in
out
and
scas
mov
xlat
pop
push
mov
fdivs
mov
adc
pop
adc
dec
xchg
int
push
lret
adc
push
stos
imul
cmp
jg
jecxz
sub
sahf
les
outsl
jb
ret
gs
sbb
lods
adc
data16
daa
jl
adc
sub
mov
mov
mov
xlat
mov
push
jns
shrl
jbe
or
inc
sub
xor
scas
test
andb
cmp
mov
pop
mov
xchg
adcl
mov
aad
push
lock
leave
inc
sub
xchg
dec
sub
fcoms
movsl
inc
or
daa
ljmp
adc
cmpsb
rcll
cli
push
push
sub
insl
imul
jb
popa
adc
or
sbb
stc
bound
dec
inc
fs
pop
clc
pop
shlb
cmpsl
movb
mov
lahf
dec
push
pop
lret
test
jb
xchg
arpl
enter
cmpl
sbb
adc
out
hlt
mov
inc
les
jmp
push
test
push
mov
sbb
mov
xchg
lods
adc
lock
xchg
jg
push
mov
pop
cmp
xlat
insb
xor
pop
leave
dec
pop
push
sub
ret
sbb
ds
jg
adc
sub
mov
xchg
iret
std
adc
xor
jne
or
xchg
mov
xlat
mov
cwtl
into
mov
lods
or
aas
ret
jg
rorb
xchg
dec
fcmovb
out
lret
sti
cmp
icebp
popf
fs
add
push
repnz
pushf
push
mov
cmpsb
or
outsl
sbb
dec
in
rdmsr
sub
mov
vcmpsd
int3
cmp
push
mov
mov
push
cmp
jno
xchg
bound
fnsave
cmp
decb
ret
lahf
push
in
cwtl
fwait
sub
outsb
insl
or
jns
imul
jbe
rclb
sub
push
sti
scas
xchg
xchg
or
push
repz
add
ss
inc
loop
push
cwtl
in
pop
lods
cmpsl
stos
aam
iret
jle
rol
and
in
sub
insb
lock
xchg
and
ret
loop
loop
mov
cmpb
sbb
stos
dec
aam
sbb
mov
jbe
aaa
mov
push
cltd
pop
adc
ret
sub
call
popf
stos
mov
sub
jb
jo
repnz
push
jl
and
lock
fstps
jno
out
icebp
push
add
lahf
fisttpl
sbb
repz
lcall
nop
sub
inc
add
sub
ss
cld
mov
xlat
push
ljmp
sub
aam
inc
aam
and
in
sarl
rolb
pop
push
pop
movsb
pop
outsb
inc
in
jb
jno
sbb
imul
test
lods
notl
shrb
push
enter
xchg
cltd
sub
adc
lock
out
pushf
pop
sub
add
pop
ret
outsb
pop
rcrl
pop
mov
in
cmp
shrb
adc
insb
add
inc
icebp
adc
mov
adc
xlat
sub
push
jb
and
in
dec
adc
imul
jg
jbe
push
gs
out
lcall
xor
lods
jbe
adc
lahf
or
cs
mov
aaa
push
jae
ja
mov
dec
arpl
cmp
call
arpl
sub
pop
xor
test
mov
cmp
clc
out
dec
inc
add
sbb
jne
cmpsb
lock
mov
fmull
insb
cmp
xlat
shl
repz
sbbl
push
lods
and
xor
xchg
imul
fwait
popa
les
push
into
lret
or
in
jl
inc
push
cmpsb
dec
sub
dec
fs
sti
das
pop
ljmp
mov
outsl
adc
daa
jg
mov
sbb
inc
fcoml
repnz
in
adc
ljmp
inc
sub
sub
sub
outsb
test
push
push
inc
pop
in
frstor
add
adc
call
adc
mov
ja
mov
mov
adc
das
mov
data16
aad
xor
lock
arpl
leave
xchg
mov
mov
fucomp
or
sub
jmp
mov
nop
in
paddb
sub
mov
mov
aam
and
aam
out
push
jmp
jp
ljmp
clc
in
pushf
xchg
adc
sub
dec
clc
cmpb
imull
push
dec
test
loopne
xlat
jo
jbe
test
jmp
jl
and
inc
cs
test
out
mov
aaa
icebp
cwtl
lock
or
dec
and
loopne
test
add
pop
lret
push
sub
pop
add
lock
movsl
or
in
mov
or
inc
fsubs
xchg
dec
aad
pop
pushf
lret
lods
mov
sarb
jp
mov
add
aam
cwtl
jo
add
into
sahf
std
or
ret
mov
jae
xchg
dec
sub
int
cli
ja
sbb
shl
data16
out
pop
stos
xchg
aam
sub
pop
stc
sub
dec
mov
xchg
and
adc
xchg
push
sahf
ds
xchg
and
ret
pop
push
negb
scas
sub
xor
jle
push
jae
jns
dec
outsl
inc
pop
inc
adc
mov
push
movsl
or
movb
pop
and
aam
sbb
test
les
jle,pt
pop
in
mov
movb
cwtl
lods
or
aad
sub
jle
mov
or
adc
cmc
mov
sbb
adc
aad
outsb
sub
sub
movsl
or
popf
mov
enter
jp
imul
aam
mov
jg
dec
fdivr
or
fwait
jno
push
xor
mov
hlt
xor
mov
jne
xchg
push
test
adc
test
mov
add
sub
inc
adc
adc
fadds
dec
pushw
daa
jo
dec
push
mov
mov
cmpl
pop
es
cmpb
sahf
enter
push
adc
ss
sub
mov
xlat
add
popf
dec
popa
or
lret
lds
or
imul
mov
and
sub
or
hlt
push
mov
add
mov
or
pop
or
or
sub
loopne
sub
or
aad
imul
sbb
ss
jmp
pop
xchg
sub
mov
flds
cmp
mov
lcall
adc
mov
adc
mov
outsl
cmc
jae
rcll
dec
jmp
testb
sub
out
insl
xchg
clc
daa
cmp
and
cmc
jl
jno
jno
sub
jne
jnp
inc
gs
in
sub
and
ds
push
lahf
cld
mov
add
jbe
sub
stos
inc
out
rcll
adc
fldt
jecxz
xor
mov
cmovno
iret
ror
loop
pop
cmp
xor
enter
daa
clc
sbb
adc
pop
jg
jl
leave
add
decl
test
mov
lods
or
sarb
lds
mov
sbb
xchg
out
cmc
orb
mov
cmc
pop
inc
sub
and
stos
gs
je
push
sub
add
cwtl
cmp
pextrw
test
mov
dec
mov
shlb
push
xlat
pop
int
sbbb
mov
aam
dec
mov
sub
adc
push
icebp
out
adc
iret
shll
movsb
sub
fcompl
add
sbb
lock
lods
lret
lcall
mov
mov
cltd
mov
xor
xchg
inc
sub
out
ret
ljmp
or
mov
lcall
mov
hlt
inc
mov
adc
xor
sbb
add
subl
outsl
adc
je
mov
xlat
xor
das
fimuls
lds
popf
mov
fdivr
adcb
inc
mov
sub
dec
cmpl
inc
aas
scas
mov
xlat
ja
lret
mov
pause
xchg
sub
cmp
imul
or
into
jb
aam
jg
jne
stos
sahf
pop
or
out
mov
orb
rorl
jnp
nop
push
xor
fcmovb
adc
dec
daa
adc
push
xor
loopne
outsl
add
pop
sub
cmc
outsl
ljmp
in
jbe
push
lods
mov
fcoml
shl
shl
lcall
or
sub
mov
add
inc
fdivrp
fildll
fcompl
sbb
aam
ffreep
sub
adc
repnz
out
pushf
xlat
sub
cmp
insl
ds
aam
ret
sub
or
popf
pop
sarb
add
push
push
int
cmpb
pop
imull
dec
hlt
inc
mov
inc
inc
mov
jle
leave
xchg
movsb
call
test
sbb
push
inc
xchg
sahf
loopne
jmp
in
fs
fdiv
gs
sub
hlt
mov
ljmp
scas
cmp
cmp
push
out
movsl
sub
push
pop
lock
mov
and
adc
xchg
dec
and
sub
cmp
adc
and
add
scas
sub
add
xor
lea
cmp
xlat
aas
enter
outsb
jmp
xchg
add
pop
les
clc
adc
cmpsl
dec
sub
int
rcl
jle
fstpt
cmp
ljmp
in
fldcw
lea
jecxz
add
lods
and
push
hlt
adc
sub
movsb
int3
outsb
outsb
fs
mov
jp
in
sbb
sub
cltd
stc
sbb
ret
mov
sub
push
pop
xchg
pop
mov
push
dec
sub
jbe
jne
lea
or
iret
stos
out
or
add
sbb
jb
cs
out
int3
fldl
out
pop
fmul
push
ret
mov
push
popa
out
or
fcmovnb
pop
loopne
sbb
fistl
sub
inc
xor
push
andb
jo
fisubs
cmp
fsubr
loop
xor
push
jne
bound
decb
jae
int3
or
inc
rol
shl
les
sar
aam
sti
pop
jle
mov
and
flds
popf
aam
sbb
faddl
fisubl
and
jno
pushf
xor
lods
push
add
cwtl
mov
xchg
shrb
add
arpl
mov
lods
or
addb
rclb
shll
aam
mov
inc
inc
fdiv
mov
add
xchg
jmp
adc
clc
ja
push
outsb
std
sbb
xchg
mov
add
or
cld
push
gs
sahf
shrb
je
insb
sub
in
out
lods
pop
ds
lret
fldcw
pop
mov
sub
xchg
cmp
in
clc
shrl
jmp
lahf
lret
add
adc
and
mov
or
lgs
or
add
lea
ret
stos
cmp
mov
or
ljmp
call
ljmp
ds
hlt
cmp
sbb
mov
xor
mov
jmp
cmp
mov
push
jns
pop
sbb
js
adc
ret
mov
dec
fsubp
ret
icebp
in
stc
cltd
imul
test
dec
pop
out
fidivs
iret
shr
push
scas
in
fnstcw
xchg
adc
mov
mov
jl
ror
and
adc
jecxz
je
push
jl
mov
xchg
repz
std
fwait
nop
out
loop
mov
cwtl
jp
add
fstpt
cmp
mov
push
mov
mov
jl
cli
sub
test
outsl
in
ja
push
cmp
push
jg
dec
cmp
dec
int
ss
or
mov
mov
dec
lods
pop
mov
ljmp
sub
hlt
mov
insb
adc
mov
in
mov
fsubrp
mov
xor
inc
adc
add
or
mov
imul
xor
pop
or
mov
testl
add
cld
fwait
xchg
int
xorb
xchg
bndstx
sbb
cwtl
lcall
add
cs
in
popa
mov
adc
fcmovu
ds
sub
sub
adc
jle
call
les
andl
jmp
aam
lock
das
adc
frstor
in
cmp
mov
aam
jae
add
adc
lods
pop
ja
sarl
sahf
lods
in
dec
cmc
aas
or
daa
xchg
sub
mov
rcl
cld
and
push
jp
or
xor
jg
xchg
aam
popf
adc
shrb
mov
les
or
dec
out
xor
pusha
sub
lcall
pop
pop
pop
stos
dec
lret
mov
orb
push
sub
mov
jno
aad
adc
sbb
out
mov
scas
inc
lahf
insl
xor
ja
sub
jmp
popf
gs
iret
es
pushf
jae
jns
inc
sub
mov
and
shl
adc
cmp
enter
push
adc
mov
xor
loopne
lret
or
shr
lahf
bound
and
test
sub
inc
les
test
cmp
lods
jl
repz
pop
enter
sub
dec
sub
cmpsb
mov
popa
dec
xor
jge
sub
popf
add
and
and
xor
cs
ds
jne
sti
test
aam
jg
mov
out
lea
es
fstpl
sub
ret
mov
and
add
in
je
jle
inc
adc
pop
inc
andl
add
std
xor
mov
addb
and
inc
sub
cwtl
xchg
mov
sarl
jmp
ret
out
sbb
movsb
sahf
movsb
sbb
sub
sub
shll
mov
adc
imul
lea
xchg
and
jbe
mov
push
xchg
and
fdivs
sbb
repnz
pusha
jae
stos
mov
sub
xchg
shr
pop
in
fists
cmp
xor
fsts
jp
lahf
shl
fsubl
cmp
or
pop
ret
into
dec
push
jmp
sub
aam
xlat
mov
int3
jmp
pop
jl
adcl
lahf
repnz
ret
test
sub
or
inc
xor
inc
xchg
test
push
test
es
add
stos
pop
add
in
mov
shlb
ja
enter
sbb
inc
std
mov
xchg
cmp
popf
hlt
icebp
outsb
inc
push
iret
rclb
add
or
jbe
dec
roll
xchg
sbb
dec
jne
fmull
jmp
incb
inc
push
loop
xchg
rcrb
dec
dec
sbb
mov
mov
add
xor
cmpsl
inc
pop
xor
sahf
stc
dec
into
push
in
iret
hlt
les
fistpl
call
xor
push
push
out
push
or
movsl
les
in
cmpsl
xor
ret
je
in
ss
jp
movsl
mov
out
mov
push
jb
and
adc
add
or
insl
adc
lock
testb
mov
testl
adc
inc
inc
addb
adc
jo
gs
xor
mov
adc
ja
add
push
int3
fbstp
in
and
jbe
mov
push
pandn
das
enter
loopne
inc
xorl
aaa
loopne
fadd
jg
adc
sar
pop
xor
and
dec
or
mov
jae
mov
cmc
sub
scas
jp
in
xchg
cld
sub
int
push
inc
mov
cmp
in
dec
sbbb
lods
adc
test
roll
roll
jp
xor
pusha
in
lock
test
hlt
in
sbb
ret
cwtl
das
ret
mov
dec
xchg
jmp
or
sub
mov
xlat
js
fwait
test
leave
cmp
cmpsb
xchg
dec
js
sti
mov
xor
xor
jne
xor
test
dec
cmc
in
or
mov
jmp
fs
pop
add
push
xor
loopne
adc
pusha
mov
add
and
inc
ds
test
cmc
xor
inc
and
scas
xchg
mov
stos
cmp
cli
and
jge
clc
ret
cwtl
pop
int3
sar
sub
cmp
add
adc
mov
xor
std
loopne
mov
pop
rcll
mov
call
push
sub
mov
mov
pop
jbe
mov
testl
call
lret
movsb
fidivrs
push
mov
mov
cli
cmp
mov
movsl
sub
jmp
adc
jbe
out
pop
sbb
pop
xchg
mov
mov
adc
test
test
imul
jl
loop
repz
stos
adc
pushf
popa
cmp
enter
sub
dec
lret
sub
pusha
jo
jns
and
iret
mov
aam
mov
sub
movsl
inc
sbb
cld
xchg
fisubrs
jns
mov
sti
cwtl
cmp
les
mov
repz
mov
push
add
cli
adc
mov
testl
ds
stos
test
mov
sub
xor
lods
dec
fldl
mov
mov
cld
repnz
hlt
aam
sub
ljmp
cwtl
pusha
not
sub
lahf
sub
ret
call
jg
push
jp
jnp
pop
add
ljmp
cmpl
lds
mov
sbb
ret
sbb
push
movl
into
out
jbe
lret
std
jb
ja
int3
and
pushf
push
int3
xchg
pusha
outsb
mov
xchg
xchg
iret
mov
sti
mov
xor
sbbb
rcl
mov
mov
xlat
dec
add
mov
out
adc
sub
adc
adc
or
dec
cmc
sbb
inc
jge
pop
xchg
sub
das
std
push
test
pop
fptan
inc
aam
ffree
test
jbe
push
sbb
sbb
and
inc
adc
in
loop
xchg
mov
ret
test
in
mov
aas
xor
mov
pusha
test
dec
fisubrl
int
lods
adc
or
or
mov
outsl
sarl
out
popf
cmp
cmp
in
imulb
aam
lods
pop
adc
sub
push
nop
fcmovbe
sub
inc
in
jmp
sbb
cmp
aaa
dec
aaa
cmpl
testb
mov
lret
pop
inc
jecxz
xor
mov
mov
bound
in
jae
inc
mov
dec
ljmp
jl
lahf
sub
adc
jne
mov
outsb
cmp
mov
add
cwtl
mov
mov
pop
push
push
fwait
cld
jo
adc
les
push
fnstenv
lret
add
pop
aam
mov
xor
xchg
orl
imul
or
shrl
mov
inc
int
mov
mov
fwait
jle
test
lcall
xchg
dec
stc
dec
and
inc
xchg
ljmp
mov
cmp
sti
mov
enter
inc
out
xor
and
out
mov
enter
cltd
clc
loop
adc
push
pop
mov
push
sub
fcompl
int3
addr16
mov
test
mov
aad
sbb
and
jae
sbb
push
scas
aaa
push
imul
fdivrp
out
add
xor
cwtl
stc
hlt
pusha
lods
icebp
int
inc
xchg
lea
idivb
fstpl
cld
xchg
cmpsl
scas
dec
cmc
popa
or
fucom
mov
fstl
scas
xlat
ja
mov
popa
xor
dec
xlat
or
lret
int3
arpl
rorb
clc
ja
in
mov
dec
add
test
or
mov
mov
mov
sbb
dec
push
aaa
xchg
nop
cmpb
testb
cmp
mov
ljmp
and
cli
in
jns
cmp
adc
mov
xor
mov
jl
out
je
lods
int3
in
test
adc
cld
xchg
cmp
shrl
push
adc
inc
sub
fs
mov
repz
loope
mov
loopne
call
jb
or
mov
aaa
loopne
decl
out
sub
sbb
mov
out
pop
or
sub
in
mov
iret
push
adc
push
dec
and
jg
scas
addr16
ljmp
mov
mov
subl
lahf
mov
mov
sbb
sub
adc
jp
add
or
sub
dec
mov
faddl
mov
cmp
sbb
jb
rorl
movl
lds
rcrl
mov
jg
sar
push
cld
in
pop
test
xor
stos
loopne
xchg
xor
sub
add
insl
lcall
jnp
pop
rcll
mulb
pop
loop
out
cli
into
insb
pop
inc
add
sbb
insl
test
jb
lret
and
nop
mov
mov
outsb
adc
nop
sbb
lods
or
cmp
stc
inc
mov
shrb
aam
lods
ljmp
les
pop
push
sub
popf
jnp
push
pushf
mov
fadd
ret
outsl
push
out
xchg
aas
dec
push
or
add
stos
and
add
and
push
add
hlt
popa
daa
lea
lods
fsubrl
and
mov
xchg
inc
push
xlat
cs
cli
sub
inc
xor
push
mov
ljmp
ret
call
testb
or
fwait
dec
mov
adc
shlb
xchg
jbe
adc
lahf
jp
fwait
movsl
mov
je
jns
icebp
into
push
pushf
mov
inc
push
fbld
cmp
xchg
test
mov
inc
and
idivl
in
out
add
inc
mov
mov
mov
aaa
xchg
mov
and
xchg
std
push
mov
inc
xchg
push
in
jecxz
xor
out
loope
sub
or
sub
fists
xor
lret
xchg
inc
dec
push
nop
xor
jl
adc
hlt
mov
and
cmpb
mov
loopne
fcmovnb
and
or
jl
in
cli
sbb
adc
or
xchg
jb
jmp
pushf
dec
decl
mov
mov
cmc
add
ds
sbb
sub
fisubrl
dec
pop
and
jo
push
jnp
xor
xor
add
fists
fisttps
or
mov
push
xchg
pop
dec
pop
xchg
push
aam
dec
test
inc
adc
mov
stc
and
movsb
mov
and
mov
aaa
lods
and
push
pop
pop
dec
jge
sub
mov
nop
jne
arpl
repz
xlat
out
in
cmpl
push
shll
mov
les
sbb
ret
jl
in
daa
mov
push
fs
stos
mov
lock
xchg
jmp
xor
pop
dec
push
mov
jl
pop
dec
cld
mov
xchg
xor
push
xor
xor
jl
lret
shlb
add
mov
imul
push
aam
inc
xor
in
add
ret
mov
jno
scas
mov
pop
xor
dec
loop
push
pop
dec
xor
leave
scas
pop
adc
cwtl
imul
push
adc
xor
testl
mov
fwait
adc
add
xor
push
sbb
xlat
mov
xchg
test
xor
aas
xor
mov
out
add
cmp
xor
lds
add
xor
mov
stc
inc
sub
sbb
pop
scas
in
scas
movsl
das
xchg
sub
xor
loope
cltd
test
jle
and
push
stos
mov
pop
xor
fcomip
pop
inc
daa
inc
in
xor
mov
lret
scas
cmp
ja
fistl
adc
lcall
jo
stos
pusha
sbb
aad
je
test
push
or
xchg
xor
in
lods
enter
xor
addb
and
xor
pop
or
sbb
movsb
aaa
inc
jecxz
dec
pop
sub
push
subb
popa
out
repz
cmpsb
aad
xor
mov
stos
inc
xor
lds
inc
test
sub
and
out
push
adc
test
lahf
mov
xor
fldcw
or
out
sarl
scas
cwtl
es
pushf
ja
aaa
inc
lods
aam
adc
jle
lea
cmpsb
ss
in
xchg
sahf
mov
xor
cltd
scas
mov
mov
loopne
xor
jecxz
mov
mov
stos
icebp
je
arpl
leave
xor
pop
mov
mov
lock
ret
cli
push
js
cs
jns
rcr
call
dec
nop
xchg
inc
aaa
pop
pop
stc
inc
shll
xchg
rcrb
out
stos
mov
cmpsb
idivb
mov
popa
test
data16
mov
sarb
ds
sbb
push
sti
jmp
mov
loopne
aad
ret
nop
mov
dec
sbb
jb
popf
xor
insb
movsl
arpl
aad
add
ror
mov
xor
push
push
push
pushf
push
xor
dec
stos
adc
xchg
lret
aad
ljmp
jns
popf
xor
mov
mov
fimull
xor
aad
mov
shlb
outsl
xor
shr
inc
mov
push
dec
clc
mov
fcoml
xor
movb
pop
scas
mov
in
out
mov
cmp
scas
push
mov
call
aam
jno
cli
mov
xchg
inc
lea
mov
ret
xchg
add
jns
xchg
jecxz
sub
lret
ds
popa
cmp
push
cmp
adc
or
jge
mov
xor
fwait
shrl
test
adc
sub
aas
xorb
xor
lods
fdivrs
xchg
pop
inc
aam
and
lock
sub
xchg
adc
in
pushf
lods
aaa
jb
push
aad
cmp
xorl
in
cmp
mov
les
cli
jle
hlt
and
or
aas
ljmp
mov
cmpsl
dec
sub
and
inc
jmp
adc
pop
roll
xchg
jmp
std
push
sub
mov
push
inc
cmp
or
dec
rclb
in
ficomps
pop
pop
and
cs
sbb
rolb
test
fistpl
mov
xor
sub
or
mov
fsubp
lea
mov
fs
mov
sub
ljmp
push
pusha
stc
xor
sub
add
mov
inc
cli
ja
loop
stos
mov
inc
das
inc
aam
int
mov
rcrb
push
sub
call
scas
inc
adc
cmp
sbbl
fsubr
add
sbb
sub
cmp
out
aas
sbbl
addl
andb
cmp
jo
in
lods
sub
fidivl
je
sub
test
popa
pusha
popf
sub
pushf
dec
testb
test
mov
scas
add
aaa
lds
pop
jo
or
inc
mov
dec
je
dec
fcmovnb
lods
insl
or
add
test
rorl
jmp
fidivs
fisttpll
fcoml
adc
cmp
call
aad
dec
add
aas
fs
adc
mov
fnstenv
shl
jne
or
add
sbb
mov
sbb
xorb
and
and
sti
cwtl
fidivrs
int3
and
mov
sbb
ds
lods
mov
outsl
pop
shll
sub
pusha
mov
jge
or
lret
mov
aas
je
addb
inc
sub
adc
ret
and
jbe
inc
adc
jle
mov
call
ja
pushf
adc
lret
mull
mov
rclb
lods
pop
mov
cs
daa
adc
adc
jmp
sub
jne
cmp
std
adc
bound
xor
sahf
fnsave
mov
jg
test
fnsave
fidivrl
hlt
aas
and
out
and
lods
les
ds
enter
ret
and
jnp
xchg
sub
xchg
or
sub
mov
clc
icebp
or
pop
adc
and
mov
stos
movsl
popf
shlb
adc
jl
out
mov
test
xor
jle
negb
incl
adc
lock
inc
add
popa
push
fcmovnbe
fs
add
adc
mov
hlt
push
adc
lcall
mov
aas
dec
je
sbb
pop
xchg
mov
adc
pop
dec
jnp
mov
addr16
out
sbb
sbb
ret
shll
push
fimuls
lods
lea
push
fs
mov
out
adcb
std
lods
mov
ficoms
push
cmpsb
adc
adcl
test
mov
loopne
sub
rorl
cmpb
adc
mov
repnz
inc
fstl
and
je
lods
shrl
loop
xchg
ja
lret
or
call
in
xor
mov
jmp
pop
lods
push
xchg
adc
ffree
call
mov
xchg
mov
xlat
adc
fsubrs
adc
popf
hlt
and
cwtl
push
aad
test
inc
sub
adc
mov
repnz
incb
cs
fnstsw
push
dec
mov
jns
in
lret
mov
mov
xlat
fsubrs
ret
sti
sub
pop
imul
ds
jbe
std
inc
int
aad
jb
mov
test
pop
jg
dec
bound
fs
sub
mov
dec
sbb
jl
leave
inc
fimull
stos
aaa
lea
push
test
enter
jno
fmull
loopne
cmpsl
in
leave
or
rolb
inc
shrl
adc
hlt
ret
jp
pop
or
cltd
fadd
inc
arpl
das
or
mov
lcall
scas
xchg
call
push
fcoml
jg
lock
push
in
adc
int3
fildll
aaa
aam
add
mov
pushf
es
subb
mov
sub
adc
rcll
push
adc
sub
push
nop
popa
xchg
adcb
xchg
push
test
sub
add
test
sub
jne
cli
mov
xor
cmp
xchg
cmpsl
loop
test
enter
jne
clc
and
dec
shr
fadd
rcrb
mov
adc
sub
lods
mov
popf
mov
push
cs
subl
in
fiadds
or
fidivrs
mov
pop
fsts
xor
dec
loope
jne
insl
into
bound
outsb
xor
cmp
add
jg
sbb
jp
xchg
insb
sub
sahf
fmull
jecxz
adc
int3
je
les
cmp
push
cmp
jp
or
aad
mov
test
int3
faddp
ret
in
sbb
sti
cltd
xor
mov
push
ss
lahf
jae
test
inc
jbe
fisttpll
bound
popa
cli
je
lods
dec
or
cmpsb
jg
push
mov
lds
jne
rclb
inc
ljmp
jnp
sub
jp
in
iret
test
xchg
push
inc
sbb
addl
jae
xlat
shr
lods
push
xchg
sbb
sub
aam
xchg
sub
clc
add
dec
adc
or
sub
lods
adc
daa
jp
dec
mov
rolb
test
ret
loopne
into
dec
dec
in
push
lods
out
imul
or
cmp
and
test
ss
adc
out
out
mov
lods
xchg
sbb
sbb
mov
mov
lret
dec
mov
jbe
lea
test
push
xchg
lret
scas
stc
cmp
mov
jl
fxtract
push
sub
dec
adcb
in
add
shlb
popf
loopne
and
jle
xchg
cwtl
xor
jbe
scas
dec
ds
sti
sub
sub
or
sbb
dec
add
xchg
loopne
pop
push
inc
pop
dec
int
pop
or
mov
cmpsl
pop
pop
stc
xor
shlb
pop
scas
fimull
inc
or
imulb
pusha
push
pop
mov
xor
sub
fadds
inc
mov
scas
call
test
loope
inc
addb
sub
and
ret
xchg
sub
xor
add
add
popa
int3
cmp
mov
and
test
xchg
out
jecxz
pusha
xchg
mov
cmpsb
popa
leave
roll
mov
dec
mov
pop
sbb
jmp
imul
out
or
mov
negl
dec
out
mov
mov
in
rolb
test
adc
fadd
pop
adcl
lcall
in
test
inc
or
xchg
out
iret
jno
add
xchg
loopne
sub
push
js
push
and
test
iret
cmp
adc
movsl
push
sub
and
sub
test
stc
cwtl
jne
ljmp
scas
lock
aad
adc
shl
test
rolb
nop
jbe
lods
shll
sub
out
js
or
pop
xchg
les
adc
jmp
pop
mov
sub
cwtl
in
adc
dec
cmp
sub
jge
insb
shll
pop
movlps
mov
dec
out
xchg
pushf
add
in
enter
xchg
mov
xor
xchg
leave
jp
loope
mov
fwait
pushl
lods
dec
lds
pop
inc
ljmp
pop
mov
out
adc
jl
jo
sbb
mov
mov
add
xor
push
jp
mov
out
cmp
pop
roll
xchg
cmpsb
aam
aaa
in
fsin
push
cmp
cmp
jg
adc
int3
insb
push
cwtl
dec
mov
push
sub
adc
dec
out
into
mov
push
or
stos
jne
cmpsb
test
test
rclb
lds
jnp
or
out
mov
lds
push
outsl
pop
sub
cmpsb
cmp
adc
mov
lea
xchg
mov
adc
sub
push
lods
dec
std
xor
sub
fimull
movsb
std
sub
mov
divl
popf
test
addr16
daa
adc
popf
sub
pop
add
pop
mov
dec
test
add
adc
and
or
pop
mov
push
ljmp
push
dec
pop
dec
lods
or
adc
xchg
or
or
mov
inc
adc
les
adc
in
sub
push
hlt
mov
push
jg
xlat
je
lods
cmp
mov
nop
xchg
cmc
loop
in
sbb
xor
xor
cmp
pushf
fwait
xchg
xchg
and
push
int3
cld
dec
pop
mov
pop
cmpsb
popf
cld
jae
push
xor
jbe
rcrb
sub
fs
xchg
mov
push
iret
sub
pop
stc
repnz
test
das
dec
pop
sahf
pop
add
xorb
ret
jp
aam
testb
pop
ds
subl
call
sbb
lret
imul
xchg
adc
mov
leave
adc
subb
sarl
add
sti
adc
test
lea
sbb
jl
popf
sarb
push
bnd
push
sub
ret
jb
mov
or
jle
sub
pop
mov
test
jg
dec
loopne
mov
mov
dec
lret
lds
dec
cmp
cmc
rcl
dec
in
adc
sbb
rclb
fld
inc
stos
ret
out
add
lock
sub
int
inc
push
cld
test
push
xchg
mov
inc
lods
imul
or
idiv
aad
rcrb
ss
cmp
jne
sbbl
ja
or
pusha
pushf
push
rorl
out
sub
sbbb
orl
inc
nop
pop
movb
or
aaa
sub
enter
xchg
fsubr
loope
push
ss
and
js
inc
jb
mov
dec
pop
jns
clc
xchg
mov
mov
outsl
and
pop
dec
inc
mov
jge
or
xor
xrelease
lcall
insb
mov
test
cld
sub
les
sub
enter
dec
mov
mov
cmp
pop
int3
and
aam
xchg
aam
ficoml
push
imul
sbb
pop
add
jg
dec
in
sub
inc
das
mov
imul
hlt
or
into
mov
sub
sbb
jge
out
jae
fs
pop
xorl
jp
and
add
outsl
lret
pop
pop
in
jg
xorl
cmp
xchg
jp
sub
mov
xlat
dec
xchg
stc
jecxz
loopne
jo
movsl
rcr
stos
fisttpl
adc
dec
sbb
sub
out
xchg
call
cmp
xchg
aam
inc
sub
addl
adc
mov
aam
mov
and
ret
mov
scas
clc
mov
push
lds
mov
cmpsb
jl
jecxz
xor
into
int
push
fnstsw
dec
xor
add
lods
push
sbb
jp
ss
out
shll
xor
adc
pop
nop
mov
popf
sub
insb
testb
stos
icebp
xor
and
fst
mov
inc
jae
sub
fwait
iret
inc
cld
repnz
leave
jo
mov
sub
xchg
jge
push
pop
je
and
lret
ret
jmp
repz
push
add
lock
dec
cli
mov
lahf
pop
test
jbe
adc
pop
and
push
lods
xor
sbb
pop
rcl
aaa
scas
mov
ds
sarb
mov
mov
inc
adc
add
or
add
xor
push
sub
push
testb
ja
sbb
or
sbb
sub
xchg
call
cmpsb
scas
push
cmp
fistps
fwait
jns
adc
jp
xlat
mov
leave
adc
xor
xchg
movsl
sbb
dec
mov
mov
jmp
cmpxchg
imulb
adc
aas
add
sbb
xchg
aaa
sub
aad
mov
in
jp
xchg
and
daa
cmc
sub
fcmovnbe
aam
jbe
dec
test
or
sub
mov
jmp
out
clc
sub
rcrb
adc
test
sbb
fldt
pop
inc
aam
push
push
adc
mov
ficoms
xchg
sbb
sarb
mov
sbb
mov
call
adc
das
js
mov
imul
jg
in
imulb
int
sbb
mov
ljmp
iret
xor
loopne
mov
movsl
stos
aam
jmp
adc
pop
xchg
xor
sti
pop
adc
iret
push
jns
sub
test
lods
inc
sub
cmp
sub
pop
jae
scas
jnp
outsl
das
jae
orb
xor
insb
dec
ja
adc
daa
nop
jno
xchg
jb
mov
mov
jmp
loopne
iret
add
fs
and
add
fnstenv
out
mov
cmp
imul
mov
inc
lea
rclb
das
out
in
sbb
ret
loope
jg
sbb
xchg
xchg
cmp
mov
push
sub
cltd
adc
add
jns
mov
jns
mov
push
cmp
popa
cmp
lock
insl
push
mov
mov
mov
xchg
or
xchg
aad
xor
xlat
mov
bound
into
mov
lods
adc
addr16
push
lret
jno
outsb
or
sbb
sub
stos
push
dec
mov
je
sub
or
jle
xor
out
and
pushl
sub
sub
and
out
adc
add
and
sub
cmpsb
adc
inc
in
adc
jmp
push
movsl
adc
into
scas
xchg
xchg
sahf
test
jle
xorb
sub
push
xlat
push
adc
fsts
test
fldt
dec
ljmp
mov
sub
mov
in
xchg
add
sub
insb
mov
pushf
xchg
fwait
mov
js
sub
inc
cli
les
aam
xchg
and
loop
lods
repz
and
ljmp
add
shlb
mov
push
cld
aad
bound
jnp
leave
rclb
imul
pop
cs
insl
jno
push
icebp
jne
adc
xchg
sub
jne
lret
shl
mov
notb
mov
pop
add
movsl
rcr
in
adc
sub
icebp
xlat
xchg
loop
and
add
adc
sub
repnz
repnz
pop
mov
shlb
or
and
mov
jl
sub
xor
imul
or
dec
mov
out
xlat
aaa
inc
stc
pushf
cltd
sub
in
adc
jbe
pusha
hlt
loop
lcall
mov
pop
mov
lret
mov
xchg
sub
inc
push
sbb
enter
sub
jno
rcll
jno
mov
test
adc
sbb
push
mov
xchg
lret
movsl
cmpsb
or
out
fisttpl
xor
lods
scas
sahf
ds
xchg
pushf
inc
xchg
xchg
jl
popf
adc
subb
sub
cmp
fisubrl
scas
std
cmp
stos
loopne
stos
xchg
insb
mov
popa
out
ds
push
lcall
ffreep
adc
pmullw
cmp
pop
out
jbe
dec
adc
ror
mov
out
cmpsb
jle
mov
call
xlat
xchg
sub
jmp
xchg
xorb
and
lret
mov
or
cwtl
cmovl
dec
pushf
dec
mov
orb
jp
sub
negb
outsb
sti
divb
or
adc
pop
movsl
daa
repnz
xor
lods
or
scas
leave
mov
adc
mov
aad
out
add
sub
les
jnp
jecxz
iret
cmp
mov
adc
rorb
xchg
in
fidivrl
ss
shlb
cltd
cmc
sarl
sub
xchg
mov
outsl
inc
sub
xlat
ds
xchg
pcmpgtd
cmp
clc
cmp
xchg
xor
xor
mov
dec
icebp
adc
rcrb
fs
scas
daa
jmp
sub
imul
mov
adc
testb
aad
push
adc
enter
sub
aas
adcb
xchg
mov
loope
push
inc
push
sub
xchg
inc
dec
mov
pushf
mov
xchg
enter
mov
dec
sub
clc
mov
xchg
call
adc
sub
aad
repnz
mov
bound
daa
dec
aam
sub
inc
adc
jp
push
cld
pop
add
shlb
sbbb
sahf
fidivrs
iret
popf
and
sub
push
fdivl
shrl
adc
cmc
inc
mov
fld
repz
or
stos
out
mov
adc
jne
insl
ficomps
cmp
adc
unpcklps
or
sub
sbb
inc
jmp
sub
arpl
sbb
ljmp
std
insb
stc
dec
out
in
push
xchg
leave
mov
sbb
adc
pop
clc
pop
mov
push
and
and
add
xlat
push
decl
fisttpl
ficoml
imul
lods
jp
adc
sub
xor
jne
pop
mov
pop
inc
mov
sub
cmovl
adc
pop
aad
sub
adc
hlt
mov
fadd
sub
daa
mov
jno
dec
pop
sub
mov
out
inc
xlat
orl
mov
inc
mov
shrl
inc
loopne
mov
xor
mov
loop
lret
xchg
inc
gs
and
pop
popf
adc
bnd
dec
pop
inc
and
push
stc
sbbl
lea
xlat
lds
sub
jge
sahf
in
xchg
lea
imul
xchg
lret
cltd
cmpb
mov
add
mov
pusha
mov
mov
dec
out
inc
test
test
mov
leave
sub
sub
dec
test
fcompl
xchg
adc
std
movl
dec
cmp
std
jmp
sahf
insb
ss
pop
imul
jb
mov
lea
aas
mov
jb
jge
pop
clc
cmp
pop
xchg
nop
rolb
aad
outsl
popf
ljmp
imul
or
mov
mov
push
mov
icebp
mov
lock
imul
fldl
fstl
and
sub
incl
insl
pop
orb
rorb
in
sub
mov
or
aad
ds
sbb
add
outsb
xchg
test
sub
pop
add
and
mov
mov
shrb
sub
jns
test
ds
mov
inc
push
add
mov
mov
ds
jp
aam
jg
leave
add
mov
pushf
jmp
lock
nop
adc
lods
cwtl
xor
or
mov
push
es
push
faddp
pusha
jae
loopne
and
jbe
xchg
lahf
cli
or
or
xchg
sbb
adc
jbe
fiadds
in
xor
and
jmp
jp
movsl
sti
hlt
shll
loope
roll
fistl
adc
mov
ljmp
push
mov
imul
mov
rcrl
sbb
in
cwtl
jg
pop
push
in
mov
adc
test
sbb
inc
stc
sub
or
cli
mov
ja
fcoml
jmp
es
rorl
push
lock
cmpsb
add
adc
cwtl
ja
mov
lods
mov
adc
sub
hlt
xchg
cmp
test
mov
cmp
dec
jno
jmp
mov
sub
mov
inc
clc
aam
push
repz
jecxz
addr16
fsubs
add
cwtl
gs
xchg
jns
sub
int3
daa
sbb
xchg
inc
cli
iret
inc
inc
pusha
cwtl
adc
mov
or
mov
lods
or
mov
cmp
cs
imul
mov
xlat
movb
pushf
bound
sub
cmp
sbb
aad
sbb
test
or
test
dec
test
mov
movsb
push
adc
mov
or
fisubrl
cld
mov
rolb
add
push
nop
insl
nop
adc
dec
and
xchg
pop
cmc
add
pop
sarb
iret
cmp
imul
test
incl
dec
dec
add
sub
and
jnp
push
xchg
mov
mov
mov
xchg
or
mov
sarb
ss
adc
push
jbe
popa
out
lahf
sbb
mov
fs
in
xchg
pop
int
sbb
pop
rcrb
push
in
sub
nop
adc
sub
pop
mov
dec
test
push
cmc
xchg
adc
cmpsl
or
mov
lods
je
cmpsb
push
jge
mov
mov
sahf
or
jmp
sbb
xor
xor
lods
into
test
cmp
mov
lcall
inc
repnz
test
inc
mov
mov
or
mov
xchg
mov
push
mov
push
jne
fstps
ja
jmp
out
add
in
ja
push
popf
jne
adc
iret
out
mov
mov
fsubs
out
and
xlat
xchg
or
pop
mov
ds
push
push
jg
das
cmpsl
movsl
mov
sarl
mov
adc
pop
pop
push
mov
push
pmulhuw
nop
dec
lods
sub
lds
lock
sub
adcb
adc
aad
es
fmuls
mov
mov
das
aam
cmp
jns
cmp
xor
xor
sbb
mov
int3
roll
in
add
pop
add
jbe
fists
pop
in
lods
pop
popf
mov
dec
ret
lods
das
add
sarb
in
outsl
sub
sub
and
or
pop
and
mov
and
jp
adc
push
push
sub
xor
sub
and
sbb
mov
mov
aam
xorb
fld
fcmovnbe
cwtl
cltd
xchg
xchg
or
inc
push
ret
xchg
imul
push
mov
in
adcb
jmp
mov
mov
lahf
insb
adc
rcrb
or
dec
ret
mov
pushf
jl
xorb
mov
cld
push
push
aaa
stos
ss
adc
testb
arpl
xchg
xchg
mov
ret
popf
mov
lcall
jg
and
or
stos
dec
mov
movsb
push
cmp
jnp
push
jb
pop
mov
sub
sub
in
sub
mov
bound
add
push
lret
insl
mov
fucom
icebp
loope
clc
sub
adc
add
mov
in
or
arpl
adc
sub
cmp
loop
repz
sbb
loop
int3
push
xchg
xchg
mov
xchg
push
inc
sahf
and
pop
daa
in
or
cmc
adc
ljmp
aas
jmp
add
sbb
in
or
mov
mov
mov
shrb
xchg
jl
ljmp
mov
enter
cmp
lret
aaa
ja
out
inc
ss
xchg
push
xchg
cmp
aam
jge
mov
and
jecxz
shll
lds
lods
xor
sbb
dec
scas
scas
inc
aaa
xchg
adc
jmp
imul
push
xor
lods
mov
in
lcall
inc
mov
add
je
and
pop
mov
mov
in
adc
adc
and
fstps
push
es
sbb
mov
ror
aaa
rorb
fstpl
sub
jae
arpl
bound
sbb
sbb
imul
fidivl
inc
jp
fiadds
dec
fiadds
sub
jb
out
loopne
aaa
in
adc
adc
sub
subb
or
xlat
imul
mov
add
movsb
ret
ficoml
pushf
aam
adc
adc
push
push
fs
push
jns
shrl
int3
test
ret
stc
add
fstl
sahf
int3
cmp
xchg
sub
push
dec
jg
dec
movsb
and
imul
imul
mov
mov
movsb
insb
enter
stos
std
popf
lods
xchg
ja
in
add
sub
mov
sti
pop
dec
out
push
fistpll
bound
jl
cld
into
sbb
cli
push
mov
xchg
addr16
hlt
dec
mov
sbb
or
in
adc
ret
call
stos
sub
jnp
rclb
fcoms
movsb
lods
test
xchg
mov
mov
jnp
aam
dec
push
xchg
popf
jmp
nop
nop
and
arpl
jg
repnz
or
push
jl
jae
jp
xor
loope
sar
jmp
adc
mov
sub
and
aam
pusha
call
xchg
in
mov
outsb
mov
xchg
fistl
in
sub
aas
adc
adc
mov
call
xor
test
add
adc
xorl
adc
rorl
pop
js
inc
data16
mov
cmp
int3
cmp
pop
rorl
repnz
pop
push
sub
sub
add
push
ret
aas
mov
and
mov
jo
notb
mov
sub
cmp
cmc
ljmp
mov
in
adc
mov
jmp
imul
cmp
inc
sti
nop
mov
pop
pop
jo
inc
mov
cli
subb
lea
inc
and
pop
jo
mov
inc
pop
sbb
dec
adc
cmp
mov
xor
loop
mov
inc
mov
popf
in
adc
fwait
cmpb
sub
scas
inc
fnstsw
imul
adc
mov
mov
orl
push
mov
fnstcw
aad
dec
xor
aam
and
add
push
add
xchg
mov
in
mov
rolb
jg
pusha
mov
jge
xor
bound
and
test
stos
xchg
cmpl
roll
cwtl
in
movsb
dec
cmpl
mov
adc
mov
push
mov
scas
sbb
imul
add
jbe
push
mov
xor
mov
cmp
cmp
xchg
mov
std
outsl
movsb
rolb
daa
xor
push
sahf
push
mov
rcrl
mov
xor
orb
mov
loopne
adc
cmp
mov
pushf
lahf
pop
andl
add
hlt
sub
cmp
inc
jae
out
repnz
mov
repz
in
jne
xlat
xchg
pop
sub
test
mov
mov
stos
movb
jge
rcrl
pop
jle
cwtl
push
pop
test
jb
rclb
pop
push
sarl
lahf
adc
aam
addr16
lahf
cmp
or
repz
push
subl
inc
mov
fucomp
cmp
sub
xchg
mov
ja
pop
cmp
inc
lret
jecxz
frstor
test
mov
mov
mov
sub
and
ljmp
cmp
es
shrl
int3
int3
or
jb
mov
cmp
mov
dec
sub
jg
ret
aas
int3
sub
aad
dec
scas
jne
pusha
lock
ss
xchg
nop
mov
sub
hlt
hlt
mov
cmp
inc
pop
cld
and
fldcw
or
mov
jno
push
fcmovbe
out
lret
xchg
fimull
icebp
aaa
call
push
fs
jmp
addb
xor
fadds
sub
icebp
idiv
aad
pop
adc
jae
sub
jp
jae
jg
jl
add
push
fisubl
ja
add
sub
fs
add
out
cmpsb
out
lock
jge
into
mov
ljmp
xchg
out
xchg
push
iret
test
hlt
sbb
les
int3
adc
mov
pushf
mov
icebp
shr
mov
dec
xorl
jl
lret
inc
ljmp
push
outsl
mov
adc
js
sbb
shl
fs
cltd
push
cmc
sub
mov
xlat
lea
int3
mov
sub
fdivrp
jnp
lods
pop
add
cs
xor
push
arpl
and
inc
add
pusha
insl
xor
xor
outsl
int3
mov
fcmovnb
push
mov
popf
dec
pop
mov
test
xchg
adc
fistl
push
insl
xlat
add
loop
flds
aas
mov
jbe
rorb
das
movsl
push
jp
mov
mov
pop
adc
sub
fs
in
dec
insb
movsb
adc
mov
xor
aaa
cli
inc
cmp
leave
xchg
sub
add
adc
or
mov
jecxz
xchg
popf
adc
sub
mov
lods
aas
push
mov
ljmp
leave
mov
lcall
pop
clc
jp
in
call
adc
addr16
jg
sub
mov
call
mov
inc
sub
and
inc
xchg
jae
push
jo
fdiv
adc
iret
adc
dec
lea
scas
out
adc
sub
xor
test
ret
leave
repnz
jnp
xor
push
mov
mov
and
xchg
mov
sbb
out
mov
in
ret
pushf
xchg
aad
cmp
adc
jge
lea
pop
clc
dec
push
sahf
fwait
sahf
fisubl
or
sub
xchg
scas
shr
xor
or
jbe
shll
jle
scas
je
xor
mov
jg
mov
and
in
hlt
lret
pop
xor
fisubrl
call
divl
lret
cli
xchg
nop
add
pop
adc
in
xchg
rcll
or
adc
sub
in
inc
dec
sub
dec
fsubrl
lds
cli
popf
lds
out
cwtl
stos
jle
enter
add
loope
rcll
mov
mov
bnd
sub
mov
cmp
cmp
bnd
and
sub
xor
jnp
and
push
mov
mov
push
subb
cmp
pop
mov
dec
imul
repz
scas
hlt
jnp
sbb
movsl
inc
stos
jge
lret
aam
cmp
inc
icebp
ret
push
adcb
lods
mov
inc
aaa
mov
add
fwait
jg
jbe
pop
pop
hlt
das
cmpsl
xchg
icebp
mov
and
je
xlat
lods
mov
jae
inc
mov
fldenv
xorb
ja
jb
sub
cmp
pop
jmp
int
les
repz
pop
xor
mov
dec
dec
jae
repnz
outsb
jl
adc
int
xor
add
push
jge
fwait
loop
out
adc
xchg
add
jb
cmp
lahf
repz
leave
fsubs
pop
push
adc
sbbb
xor
fisttps
push
mov
mov
mov
mov
jge
inc
adc
sub
es
lret
ffreep
mulb
mov
lea
xchg
mov
mov
pushf
ret
mov
jne
xchg
jno
lds
test
xlat
sub
push
mov
leave
fxch
cmp
mov
insb
xor
es
adc
out
sahf
cs
loop
mov
int3
fidivrs
repz
jbe
ret
out
int
inc
lret
stos
sbb
push
or
sub
pop
dec
test
pushf
repz
sbb
push
fnstcw
outsb
add
scas
jp
dec
test
sub
outsl
aam
pop
sti
lret
mov
adc
add
call
pop
fldt
add
cli
je
jne
cmpsb
mov
add
cmpsb
jl
std
hlt
pop
mov
scas
inc
ficomps
dec
xchg
inc
test
inc
and
into
jb
push
pop
sub
dec
sub
xor
or
fcmovnu
xor
lods
jl
inc
xchg
jg
jg
cld
scas
sub
mov
xchg
jecxz
repz
jns
push
and
test
xchg
fpatan
pop
jg
adc
arpl
cmpsl
adc
xor
mov
xchg
push
pop
in
ror
cmp
ret
shl
stos
out
dec
dec
add
pusha
push
jl
and
push
add
push
inc
test
out
mov
dec
inc
ljmp
dec
out
push
mov
movsb
adc
push
xchg
out
mov
lret
stos
adc
dec
xor
lods
enter
xchg
pusha
aam
mov
loope
dec
mov
lret
repz
orb
repz
pop
jns
push
test
out
iret
adc
cmp
nop
test
jmp
push
or
push
adc
fnsave
mov
sub
decl
jl
mov
mov
mov
out
fcoml
push
fstpl
or
pop
xor
imulb
add
ret
clc
xchg
in
adc
sbb
add
mov
jle
add
push
movsb
lods
or
jle
xchg
mov
stos
stos
insl
pop
aas
jp
pop
aam
inc
stc
leave
xor
popf
add
adc
mov
mov
jae
inc
dec
js
add
je
sub
push
popf
add
adc
in
outsl
insb
xchg
js
push
cmpsl
mov
je
scas
ja
fiadds
jle
dec
pop
mov
lret
mov
popa
cmp
mov
mov
push
mov
dec
jp
and
adc
ja
fnsetpm(287
pushf
adc
inc
or
jne
int
adc
leave
pop
sbb
pop
enter
xchg
cmp
mov
push
or
push
into
or
xchg
mov
xor
js
xchg
sub
ja
add
cld
cwtl
pop
sbb
sbb
cld
jae
hlt
pop
add
and
push
enter
sub
call
ficoms
add
mov
lock
jle
mov
pop
mov
adc
mov
pop
pop
and
pop
mov
aam
fistpll
sti
in
ja
or
inc
adc
out
jb
scas
jecxz
xor
bound
mov
popf
cmpsb
in
mov
movsb
lret
stc
popa
jo
sbb
lods
or
std
fsubrp
push
hlt
movsb
ss
xchg
js
push
lods
stos
iret
cmp
xchg
dec
xor
std
cld
cmp
data16
add
ljmp
mov
out
mov
lret
in
adc
add
lret
adc
mov
sub
out
cmp
aam
or
push
dec
sub
fwait
adc
ss
mov
fldl
xchg
mov
aaa
add
arpl
ss
xorl
mov
xchg
jmp
sbb
call
mov
sub
repnz
lret
add
jns
inc
sarl
fiaddl
mov
in
sub
jecxz
outsb
add
xchg
ret
pushl
dec
add
mov
call
idiv
mov
in
les
shlb
out
nop
inc
mov
jbe
jns
lret
lret
and
adc
js
test
inc
or
fnstcw
add
adc
xor
pushf
loop
and
xor
xchg
pop
xor
fsub
add
outsb
xor
aad
ret
jp
mov
pop
or
sub
pop
shrb
sbb
pop
jl
jo
out
sub
or
js
push
out
cs
jne
int
sbb
ljmp
sbb
repnz
mov
les
sbb
fdivr
pop
in
add
leave
xchg
adc
insl
out
lahf
repnz
inc
pmullw
or
aaa
add
lret
rorb
xchg
or
rolb
sbb
cltd
outsl
lods
xchg
notl
inc
cmp
jp
movsb
push
test
test
ljmp
int3
lods
lods
and
pop
pop
cmpsb
mov
xchg
outsl
sub
sbb
xchg
roll
das
test
mov
ss
dec
and
jg
in
lods
dec
add
aam
shrb
jo
mov
dec
inc
int
aad
lret
cli
js
fstps
ret
scas
jp
pop
pop
pop
jbe
push
cmp
aam
repnz
push
out
adcb
push
add
sub
xchg
sbb
cmp
fidivrl
push
push
xchg
sbb
mov
test
mov
loop
sub
cli
sahf
jecxz
into
push
cld
fiadds
out
jle
mov
mov
or
mov
xchg
push
out
sub
or
jno
sub
pop
push
xchg
nop
xchg
sub
roll
xor
das
and
js
sbb
or
test
xor
lcall
popf
or
or
push
inc
mov
lock
and
les
cld
dec
cmc
xchg
and
in
stc
pop
push
ret
mov
insl
pushf
dec
xchg
mov
jle
movsb
mov
scas
push
or
pop
and
sar
aas
inc
lods
aam
mov
sub
sub
lahf
lods
cld
jns
lret
insl
in
mov
ljmp
mov
into
sbb
repz
sub
sbb
and
push
lret
outsb
jb
sbb
mov
cli
mov
pop
adc
fidivrl
inc
mov
xchg
ja
fildl
scas
push
imul
jle
in
ret
in
sub
mov
out
xchg
lret
jo
mov
enter
xchg
or
mov
dec
or
fldl
in
xchg
push
in
xor
lods
lret
xchg
cmp
xor
push
lods
filds
aam
push
jle
sbbb
in
test
std
or
pop
dec
cmp
pop
or
adc
scas
jne
fs
sub
push
dec
inc
dec
mov
pop
subb
jge
adc
sbb
sub
push
mov
rcll
std
xchg
stc
fistpl
sub
int3
lahf
xchg
sbb
sbb
mov
mov
in
adc
jns
out
dec
scas
testb
pop
aam
lods
mov
je
loop
lods
sbb
pop
lret
sbb
xor
adc
loop
lods
je
inc
cmpb
outsl
mov
aaa
repnz
mov
scas
clc
insb
push
add
enter
lret
or
test
push
popa
mov
adc
sub
cmp
cld
fnstsw
mov
sbb
inc
push
fwait
popf
push
rolb
sub
or
sub
or
or
xchg
sub
imul
xor
mov
jns
movsl
addb
outsl
push
in
lods
or
xor
sub
fimull
and
inc
cmpsb
adc
addb
pusha
iret
incl
mov
push
inc
fcomps
les
dec
rorl
test
lods
insl
lahf
cmp
or
dec
mov
aad
repnz
imul
pop
add
fdivrl
in
ds
pop
dec
jne
jmp
jbe
or
aad
popa
add
fdivs
mov
mov
dec
dec
hlt
test
xchg
cld
lea
cmp
mov
cmc
push
cmp
mov
or
mov
push
js
outsb
pop
jge
testl
ret
fcomi
aad
xor
pushl
js
shlb
in
hlt
fs
imul
test
or
mov
inc
andl
sub
lock
popa
es
mov
inc
pop
add
push
cmc
ret
lea
nop
mov
jns
sub
xchg
adc
ret
lods
aam
mov
lret
fnstcw
ret
in
xor
xchg
idivb
insb
lods
das
imul
mov
jp
fiadds
inc
test
xchg
in
sub
out
sbb
jne
popf
xor
mov
xchg
lret
pop
xchg
incb
jnp
leave
insb
xchg
orl
fucom
pop
sub
dec
dec
sti
stos
sub
mov
xchg
xor
insb
or
repnz
in
rclb
imulb
cmp
out
repz
jecxz
in
cmp
jb
inc
subl
cmc
dec
fwait
stos
or
jo
loop
dec
push
pop
loopne
in
push
mov
cli
jae
lock
mov
les
pop
fnstcw
mov
loop
add
sbb
das
inc
xchg
out
sub
xor
fs
leave
sahf
orb
pop
cmp
cmpsb
fiadds
es
xchg
inc
or
xchg
aad
cmpsb
inc
jge
or
xor
cld
mov
add
sub
aaa
dec
scas
test
or
mov
adc
jbe
push
pop
shr
ret
dec
pop
insb
adcl
jg
repz
les
test
xchg
push
cltd
sarb
in
or
jmp
mov
pop
jo
mov
mov
push
pop
repnz
ljmp
xor
dec
pop
jae
leave
pop
or
mov
jae
lahf
sbb
pop
jo
mov
lea
push
cs
add
mov
pop
mov
mov
and
sub
adc
in
cld
hlt
sbb
sub
jo
fidivrl
mov
adc
add
xchg
push
test
xorb
xchg
iret
rolb
aam
sub
xchg
and
jmp
cwtl
arpl
in
mov
aam
lea
cmp
adc
jle
mov
jmp
movsb
arpl
test
mov
lea
aam
movsl
push
adc
ljmp
jno
push
xlat
pushf
sbb
in
pop
bound
adc
rclb
xor
jb
sub
lods
lods
es
push
lds
add
pushf
addr16
icebp
jg
and
jmp
iret
data16
fistpl
es
and
push
es
push
jnp
pop
push
mov
jle
stos
inc
mov
out
shl
nop
js
test
add
jo
dec
cld
inc
jle
pop
cld
imul
nop
daa
fsubrl
dec
lods
or
rcll
lods
or
pushf
sbb
aam
cmpsb
lods
adc
xlat
add
enter
xor
lock
mov
mov
push
xchg
fs
stos
orb
push
push
test
sbb
out
pop
mov
sbb
test
int
leave
cmp
or
push
les
movsb
mov
lds
cmp
ret
dec
dec
adc
pushl
in
faddp
xor
mov
stos
sub
lret
mov
mov
ret
dec
pushf
xor
lds
pcmpgtb
in
das
loope
mov
adc
mov
adc
lods
and
jae
fsub
push
push
int3
xchg
das
fcoms
push
push
jb
aam
popa
pushf
and
or
sub
int3
mov
insb
pusha
cmp
mov
push
mov
or
push
jle
sub
push
out
sub
pop
test
or
push
pushf
push
jl
out
mov
call
pop
lods
hlt
dec
out
adc
mov
inc
cwtl
cli
xchg
in
stos
add
add
roll
mov
pop
dec
fdivl
pop
call
in
jl
mov
or
mov
loop
gs
shrb
or
pop
sbb
cmp
mov
mov
xchg
int
or
jnp
rcrl
test
pop
add
sbb
mov
sub
stos
outsl
xor
xchg
sub
mov
rolb
mov
add
pop
cltd
pop
add
int3
mov
push
in
adc
and
das
sti
pop
fldl
out
sub
cmpsb
nop
jbe
mov
adc
out
sbb
pop
andl
mov
scas
cltd
lods
fs
dec
jno
sub
dec
cmp
lret
sbb
aam
jne
push
es
pop
adc
test
adc
mov
dec
jmp
ret
sub
add
imul
lahf
fldl
jo
out
stos
frstor
or
in
lcall
xchg
add
jg
mulb
adcb
ljmp
jne
jl
push
push
sub
and
adc
in
aam
and
push
push
mov
cmp
ds
in
or
xor
xchg
xor
popf
dec
inc
pop
ds
mov
and
pop
pop
mov
lods
add
js
in
inc
dec
repz
rolb
jo
or
xor
jne
rcll
mov
add
cwtl
aam
xchg
js
xlat
fcmovnu
sub
lods
sbb
add
xchg
adc
push
clc
jae
scas
repz
jmp
jnp
shrb
js
mov
adc
imul
pushf
lods
mov
popf
pop
xchg
mov
mov
mov
aam
sub
les
push
daa
pop
mov
in
hlt
ficoml
push
test
orb
addr16
out
or
addb
cltd
and
or
push
mov
lcall
cmc
dec
inc
dec
ret
pop
pushf
stos
jge
shlb
jns
in
out
jp
dec
fucomi
bound
xchg
scas
xchg
add
xlat
iret
ret
sbbb
or
icebp
jo
xchg
xchg
mov
jns
outsl
mov
push
fidivrs
inc
aad
fs
adc
loop
jnp
in
enter
or
sub
jo
rcrl
sub
pop
jns
and
repnz
repz
int
es
pop
sub
out
inc
xor
xchg
leave
xor
orl
movsb
and
pushf
int3
std
inc
jecxz
insl
and
dec
stc
adc
inc
sub
mov
mov
xchg
aam
sub
jle
cltd
aad
adc
loopne
push
aaa
sbb
inc
add
dec
cs
or
js
pop
rolb
mov
jo
sahf
in
cmpsl
dec
adcb
mov
ljmp
sub
das
inc
ret
jo
sub
and
in
mov
shlb
lcall
sbb
les
mov
mov
rclb
jmp
ret
cmp
jne
stos
int
es
ret
adc
movsb
adc
fwait
adc
xchg
roll
jno
shrb
imul
or
mov
nop
popl
or
rolb
aaa
sbb
fs
jne
push
gs
call
loopne
pop
push
adcb
cmp
dec
lret
mov
ljmp
imul
cs
cmc
ja
inc
std
ljmp
rol
and
cmc
cmp
inc
sbb
jae
lods
shl
lods
xor
push
outsl
ss
stos
stos
add
dec
inc
or
xorb
ret
mov
out
call
jae
subb
gs
cld
or
mov
inc
adc
adc
call
scas
js
lret
mov
int3
mov
fwait
jecxz
xor
out
mov
rcr
addr16
es
mov
mov
icebp
stos
dec
pop
lods
or
testb
dec
dec
pop
jbe
jmp
int
scas
pushf
andb
xchg
xor
pop
nop
xor
sub
fcoml
inc
ror
in
mov
add
xorl
aam
xchg
push
push
and
es
je
sbb
icebp
push
pushf
push
cs
mov
dec
jnp
and
inc
or
fcomps
or
in
jbe
ds
and
mov
sub
xchg
mov
imul
ret
in
popl
xchg
sub
ds
sub
ljmp
xchg
adc
mov
cwtl
mov
inc
inc
divb
out
or
sbb
sub
sub
iret
xchg
cmp
mov
add
xor
pop
xchg
scas
test
fdivs
ss
aam
or
ret
lods
push
add
out
loop
xchg
mov
fdiv
pop
clc
ja
nop
or
out
adc
leave
jo
loop
rorl
mov
lahf
mov
xor
repnz
lret
xchg
cld
les
cmp
fs
push
loop
shlb
hlt
fs
adc
inc
outsb
mov
and
cmp
dec
xchg
jecxz
shl
pop
mov
dec
mov
rorl
aaa
sbb
lea
or
sahf
cmc
xor
out
pop
jb
mov
test
loopne
arpl
addb
mov
xor
leave
aas
inc
adc
shr
xor
lods
sbb
sub
jg
test
xlat
mov
out
mov
mov
mov
lret
lret
cmc
jmp
ror
or
jno
loopne
jg
mov
pop
aas
dec
movsl
dec
in
dec
lds
jmp
aam
push
ret
dec
mov
popf
sbb
mov
jg
inc
push
sub
sahf
out
push
dec
xchg
scas
mov
and
int3
dec
mov
loopne
or
mov
cmp
out
cmp
cwtl
out
into
rcrl
fmuls
xchg
or
test
mov
xor
daa
lods
xor
popf
lods
add
jge
or
dec
loopne
and
push
in
in
or
or
rclb
jb
dec
jl
fistl
test
or
lods
cmc
incl
xor
mov
ja
outsb
mov
nop
xchg
adc
inc
fldt
outsb
imul
lret
dec
xor
jbe
sbb
mov
rcrb
mov
in
xchg
sub
pop
in
lret
rcrb
mov
cmc
and
sub
into
jo
ret
insl
mov
sub
adc
in
test
in
dec
jge
leave
repnz
stos
imulb
sub
test
lret
push
push
cltd
adc
pop
or
xor
out
jge
jp
mov
ja
repnz
and
call
scas
in
enter
rolb
jle
xchg
clc
sub
add
pop
popf
cmpsb
shl
cmp
lods
test
dec
mov
adc
pop
and
xorl
adc
test
in
and
sub
or
cltd
lahf
push
lock
mov
push
mov
jl
aas
cmp
xorb
mov
xchg
jno
leave
stos
aaa
cmp
lods
push
dec
mov
iret
sarl
cmp
inc
xchg
push
inc
addr16
ljmp
dec
fildl
bnd
add
imul
or
sbb
loop
jge
sub
pop
shrl
mov
shlb
jns
jecxz
sub
and
pusha
addr16
pushf
imul
lret
cmc
mov
out
nop
jbe
int3
mov
and
push
and
sub
xchg
mov
pop
jp
fistpl
pop
dec
adc
mov
and
mov
movsb
xchg
lahf
mov
inc
cmp
cmp
mov
mov
insl
xchg
lahf
pushf
fcmove
jnp
xadd
sub
lods
inc
das
test
cmp
test
push
sub
scas
mov
fdivl
inc
mov
jne
jns
pop
jg
out
enter
dec
sbb
sbb
decl
jmp
pop
mov
cmpsb
adc
mov
add
nop
popa
int
inc
inc
repz
adc
lahf
sbb
ljmp
xor
and
insb
pushf
mov
dec
or
lahf
scas
bnd
insb
sub
lods
scas
out
mov
mov
rcrb
ret
cltd
stc
adcb
push
or
loope
decl
clc
cld
and
repz
inc
pop
jp
jecxz
push
jns
orl
add
mov
push
mov
mov
sbb
inc
imulb
xchg
push
test
aaa
mov
lret
imul
jb
stos
add
nop
jae
stos
mov
hlt
adc
adc
out
mov
fs
sub
mov
mov
sub
decb
pop
out
mov
push
out
pop
mov
push
pop
mov
sbb
jp
xchg
add
rcl
popa
mov
sahf
andb
mov
xchg
popf
les
pop
cmp
ja
pop
add
jne
jnp
and
jns
lods
mov
cmp
mov
sbb
movsl
xchg
adcl
xor
dec
sub
cmp
sub
push
loop
add
in
xchg
aad
inc
push
js
rorb
lock
aam
mov
jo
cwtl
inc
xchg
pop
push
les
and
cmp
dec
sbb
pop
mov
test
pushf
pop
out
out
xchg
adc
lock
jle
sahf
adc
and
cmp
test
sub
adc
or
inc
mov
loopne
adc
xlat
adc
movb
ja
xor
out
xchg
ret
pop
insl
inc
sub
pop
or
hlt
test
mov
and
imul
pop
pop
nop
pop
outsb
pop
fsubs
sub
out
push
add
in
and
ja
lock
and
shl
sub
iret
mov
test
icebp
movsb
mov
adc
push
mov
iret
dec
fucomp
push
xchg
jnp
sub
lods
mov
or
mov
jmp
and
and
test
cs
fdivr
adc
adc
push
ret
into
jmp
repnz
cmp
sbb
lds
lcall
subb
bnd
in
cmp
and
cmp
sub
mov
dec
ljmp
ret
shrb
cmp
js
or
movsl
sub
out
sbb
adc
imul
sbb
stc
cmc
cmp
jb
inc
xchg
enter
xchg
int3
fcomip
mov
int
notb
adc
lcall
movq
push
imul
stos
mov
scas
adc
nop
sbb
ja
lds
xor
scas
jo
cltd
jl
xchg
jmp
adc
pop
push
iret
jno
out
lret
cli
ret
test
mov
add
xor
ror
mov
sub
push
and
clc
ja
sbb
std
bnd
out
sbb
sbb
jge
adc
mov
xchg
stc
dec
mov
sub
or
cmp
xor
lods
mov
cmp
cld
sub
pop
pop
mov
inc
pop
sub
jbe
sub
scas
inc
rol
mov
sbb
mov
cmpl
sarl
sub
pop
sub
jae
mov
jo
cld
jne
xchg
add
or
and
in
hlt
fsubrl
in
ja
jge
into
adc
xchg
xor
xchg
rorb
xchg
int
mov
sbb
add
jbe
mov
sahf
pushf
pop
or
xor
fisttpll
inc
stc
dec
sub
or
sub
sbb
insb
xchg
addb
jp
or
sub
push
mov
add
fists
gs
loopne
jnp
lahf
imul
xor
mov
aaa
jecxz
cmc
bound
sub
pusha
loop
xor
lods
out
fmull
add
push
das
add
sbb
mov
bnd
mov
les
or
mov
shlb
sbb
mov
test
inc
cmpsl
inc
cmp
repnz
mov
fcmovbe
mov
sarb
jo
repnz
test
add
lret
ljmp
xchg
add
fidivrl
repnz
or
sub
lods
and
jecxz
js
add
sub
out
das
jne
test
sub
mov
adc
jge
lahf
push
jl
ret
popf
inc
loope
aad
aas
mov
pop
jae
inc
adc
and
xor
sub
push
jne
adc
mov
dec
xchg
and
test
jl
loopne
enter
pop
jge
pop
mov
in
sub
test
popf
ds
or
push
pop
add
mov
mov
rcrb
jne
mov
inc
sahf
dec
jmp
pop
lock
out
jp
pop
stc
xor
rolb
aam
arpl
out
add
orl
xchg
sub
mov
fwait
adc
sarb
into
push
sar
movsb
in
lret
imul
in
shrl
dec
pop
das
xor
adc
loope
stos
lahf
imul
and
jb
mov
jge
mov
fcmovb
out
mov
add
pop
cmp
inc
rclb
jns
dec
mov
and
fidivl
xchg
ljmp
or
mov
push
pusha
sub
je
or
jmp
test
mov
jb
sub
jno
loop
in
inc
mov
xchg
adc
sbb
mov
inc
add
pop
adc
dec
fwait
mov
outsb
add
sub
leave
fisttps
mov
add
sub
push
stos
pop
or
pop
xor
lods
sub
nop
pop
xlat
fistl
lret
pop
aam
sahf
and
mov
fsubr
jge
xchg
aaa
mov
dec
sub
jp
pop
shl
mov
jne
push
rcrl
and
enter
add
std
int3
mov
out
sbb
and
popf
inc
testl
ja
in
add
fdivs
and
adc
inc
test
enter
adc
aad
mov
les
roll
je
cmp
in
clc
je
int
adc
aad
mov
andb
loopne
push
xchg
fcompl
jecxz
cmc
and
push
mov
scas
test
dec
out
out
inc
pushf
xchg
cmp
mov
jmp
cli
lods
xchg
les
or
cmp
adc
pop
das
pop
jp
or
cmp
inc
shrb
cmp
pushfw
mov
repz
lods
or
cmp
mov
add
jo
inc
aad
iret
xor
ret
mov
mov
ja
in
and
cmp
repz
jnp
lods
das
hlt
hlt
ret
and
aad
pop
dec
inc
sbb
push
ret
mov
addb
sub
sub
xor
aaa
mov
sub
cli
mov
push
pushf
jp
pop
rolb
sub
jne
ljmp
push
out
test
movsl
ja
negl
sbb
pop
add
adc
cmpsb
imul
xchg
aam
ds
or
jp
aad
in
insl
mov
or
sbb
cmc
sub
dec
cmp
dec
xlat
ja
int3
loopne
cmpsl
lret
mov
les
mov
rcr
xor
mov
ljmp
adc
push
adc
mov
xchg
dec
repz
xor
sub
adc
push
movb
sahf
mov
imull
xchg
lds
adc
xchg
pop
ficomps
sub
mov
arpl
shl
sub
mov
mov
in
lods
or
and
sub
iret
xchg
jmp
mov
xlat
mov
in
int3
loop
les
aaa
xchg
push
xorb
pusha
or
push
jnp
dec
inc
push
sbb
mov
xor
jne
fwait
add
or
mov
out
push
xor
sbb
dec
adc
rep
lock
mov
sub
add
nop
insl
cwtl
xchg
aam
inc
out
xor
add
mov
xor
adcb
jno
out
popf
xor
insl
cmpsl
xchg
bound
xor
fs
sub
sbb
shll
sarb
loopne
lea
xchg
push
lds
les
push
jno
cs
lahf
add
mov
fcomps
ljmp
out
adc
dec
mov
mov
int3
or
sub
sbb
call
or
add
pop
xor
mov
loop
mov
gs
mov
cwtl
pop
or
enter
sbb
jl
leave
ds
adc
mov
mov
mov
pop
bound
cmp
pop
scas
imul
and
jne
adc
xchg
cld
push
leave
bound
rcrb
adc
popf
dec
xchg
push
or
mov
adc
xor
popf
jmp
adc
push
dec
leave
enter
insb
add
pop
testl
scas
mov
push
adc
sbb
icebp
jo
hlt
and
pop
sbb
jae
add
mov
movsl
push
cltd
push
jbe
mov
mov
or
mov
pop
xor
lret
adc
sub
out
mov
in
sub
mov
addl
lods
aam
push
aaa
push
and
jmp
sub
daa
inc
fbld
das
sub
sub
xor
clc
daa
pop
repz
les
addr16
dec
xor
leave
lahf
test
sub
lret
fimull
or
mov
pop
xorb
insb
loope
cmp
add
vandps
xchg
mov
in
jno
mov
ror
mov
and
cmp
cwtl
jl
in
les
adc
push
push
in
dec
lret
js
xchg
hlt
stos
sbb
paddsb
adc
push
or
cmpsl
xor
cmc
loopne
push
std
sub
lods
aad
daa
add
jo
xchg
mov
jae
jb
int3
xlat
sarb
aas
test
adc
les
rorl
mov
xchg
jmp
xchg
lcall
adc
out
jp
jbe
sahf
imul
jg
mov
add
cld
in
pop
jp
imul
mov
pop
sub
jle
out
fmuls
pop
mov
push
orb
jns
and
xlat
or
xchg
sub
outsl
pop
mov
and
pushf
cld
fisttpl
sub
rcll
jg
add
cmp
or
insb
imul
xchg
push
roll
add
lret
mov
das
imul
lret
inc
add
mov
cmp
xchg
arpl
xchg
sub
daa
jno
int
xor
sub
mov
mull
xchg
and
or
jmp
mov
out
mov
mov
add
call
test
inc
pop
dec
mov
mov
mov
ss
push
cmp
stos
jae
push
addr16
sti
or
ja
aad
dec
mov
stos
repz
test
mov
cld
jnp
push
clc
into
rcl
nop
test
xchg
call
in
ljmp
mov
sub
pop
fs
mov
hlt
ja
adc
push
mov
push
xor
jg
scas
out
ret
mov
lds
xor
or
hlt
lcall
xorl
aam
pop
dec
adcb
mov
and
scas
mov
fs
mov
mov
jge
dec
enter
sahf
andl
int
cmp
push
not
inc
negl
outsl
pop
cmc
xchg
push
fldl
xchg
add
repnz
jo
mov
dec
xchg
das
sbb
incb
pushf
cld
sub
popa
mov
test
xchg
cmp
sahf
ds
ss
mov
ficompl
pop
das
cmpsl
insb
arpl
xor
mov
sub
xchg
add
push
ljmp
sti
xor
cli
ret
adcl
push
xchg
fsubl
imul
inc
pop
or
sub
into
shrl
jg
imulb
jns
xor
mov
cwtl
mov
or
adc
xor
test
pop
ret
sahf
jle
rorb
xchg
jne
sub
inc
jecxz
out
or
mov
fld
sbb
fldl
add
and
inc
dec
roll
xchg
add
inc
dec
arpl
stos
jl
in
jle
pop
jbe
leave
mov
xor
lods
ja
cs
jbe
mov
adc
inc
lods
pop
jno
into
clc
inc
sub
nop
mov
dec
cmc
imul
sbb
cmp
cmp
pop
xor
push
sub
push
mov
dec
mov
xchg
and
mov
push
xor
pop
mov
repz
adc
adc
mov
xchg
or
jns
aad
outsl
cmp
je
stos
es
xor
jae
rolb
aam
mov
cmp
ret
sub
out
mov
in
push
xchg
ss
das
sub
bound
adc
sarl
or
add
pop
sub
dec
rcl
and
leave
jb
call
out
fimull
or
popf
in
adc
sub
out
mov
and
add
pop
mov
loopne
cmp
add
test
xor
in
addr16
mov
pushf
sahf
adc
xor
xor
dec
adc
push
inc
pushl
das
or
cmp
dec
fadds
push
jle
dec
stos
into
loope
xchg
into
sub
mov
aaa
inc
lods
adc
popa
sub
fiaddl
iret
adc
insb
cmpsb
push
mov
sahf
pushf
test
fnstsw
jnp
mov
cmp
sub
clc
cmpsb
mov
sbb
and
xlat
sahf
scas
repnz
ja
mov
loopne
adc
int
pop
push
push
inc
int3
shlb
lods
fsubrp
aaa
mov
lods
mov
pushl
lods
insb
bound
cmp
push
jle
mov
gs
jmp
pop
adc
pop
mov
jl
lret
lea
push
outsl
pop
push
adc
mov
orl
aad
push
out
test
aaa
ja
jecxz
shll
push
lods
ret
xchg
fstpt
pop
xchg
adc
fs
jg
icebp
js
mov
notl
hlt
xor
lret
add
bound
and
arpl
sbb
sub
out
imul
adc
xlat
nop
out
repnz
pop
mov
iret
sbb
cli
test
lods
clc
lods
roll
adc
sub
or
imul
lcall
jp
ficoml
jae
mov
cmpsb
xor
movsl
pop
cmpsl
test
cmpl
sub
push
dec
jns
or
fwait
ret
xor
lods
arpl
xor
cwtl
lahf
cmp
sub
ret
push
sbb
popa
add
dec
mov
in
inc
stc
ss
jmp
ret
popa
out
shlb
jae
cli
cmc
xchg
adc
ja
je
movsl
movsb
pop
jmp
aad
mov
shrl
sub
fcomps
ret
cmp
add
push
push
xor
push
or
sub
push
pop
sti
orl
and
jmp
cmp
cmp
or
imul
sub
fs
add
lods
mov
sub
sub
mov
push
daa
sbb
mov
jge
inc
xor
mov
push
pop
add
adc
xchg
in
ret
or
sub
jo
xchg
shrb
ror
xchg
mov
mov
pop
ficomps
add
subl
sub
fstps
in
or
xlat
lods
scas
ja
add
lds
xchg
out
adc
clc
fwait
aam
int3
ss
lret
add
inc
jae
sbb
aam
push
mov
aas
sbb
adc
jns
mov
add
mov
xor
sarl
ret
mov
sub
nop
mov
add
mov
mov
fcoms
adc
push
test
sbb
cmpsb
ljmp
pushf
add
imul
je
push
orb
adc
sub
test
push
sbb
fmuls
sbb
enter
addr16
rclb
fnstsw
dec
jae
jne
push
into
mov
call
push
test
mov
ja
fildll
je
adc
inc
and
mov
js
or
sub
lahf
adc
dec
dec
add
jne
enter
jg
incl
leave
test
or
enter
je
in
outsl
xchg
xchg
cwtl
fnstsw
aam
pusha
sti
ss
in
notb
fsubrs
xor
push
hlt
popf
pop
mov
mov
jae
mov
sub
mov
loop
daa
or
out
push
jbe
nop
sub
popf
jbe
mov
mov
fcomps
add
sub
sbb
andb
pop
mov
push
les
lds
sbb
mov
daa
and
and
xchg
sbb
jb
mov
stc
enter
je
adc
mov
mov
sub
ret
stos
xchg
aam
dec
push
sbb
sub
sub
fnstcw
mov
iret
insb
sub
or
daa
ret
xor
cmp
xchg
push
xor
insb
sub
lret
xchg
faddp
mov
in
xor
rolb
shr
push
xor
mov
xchg
jge
call
adc
pop
mov
mov
inc
xor
out
add
ret
sub
mov
xor
hlt
xor
pop
mov
sti
rorb
push
jns
cmp
dec
xchg
mov
xor
jae
mov
cmp
adc
ljmp
sub
sbb
mov
jl
dec
fdivl
std
mov
fdivs
mov
ret
lea
push
xchg
insl
dec
cwtl
and
add
movsl
cltd
sub
dec
je
cmp
mov
dec
sub
adc
jp
ljmp
cli
cmp
mov
sar
shlb
jnp
xor
jns,pn
repnz
adc
stos
mov
sub
mov
cmp
cmp
in
pop
divb
test
lea
pushf
gs
mov
jbe
cs
jns
and
xor
mov
mov
inc
push
or
pop
mov
pop
inc
push
push
addl
xor
ss
scas
ja
push
xlat
add
stc
insl
pop
xor
mov
add
lods
pop
in
out
int3
xor
pop
iret
jg
mov
xchg
cmovp
xchg
jae
push
aam
sbb
and
loope
out
inc
insb
add
xor
mov
scas
mov
pop
cmp
in
add
mov
adc
xchg
pop
cmp
mov
dec
or
push
aaa
shrb
aad
jl
nop
mov
sbb
stos
mov
repz
push
xchg
inc
sub
jp
pop
sub
arpl
in
daa
mov
and
add
mov
dec
int
xchg
fdivs
dec
fisubs
loope
xchg
push
xor
lods
sbb
lret
xor
lds
mov
sub
mov
test
sbb
cmp
dec
shr
fdiv
fldenv
push
mov
adc
xlat
xor
xor
mov
pushf
call
clc
xor
mov
pop
rcrl
inc
dec
movsl
xor
inc
hlt
pop
or
fwait
xor
call
push
xlat
xor
jbe
dec
cmp
ljmp
mov
pop
mov
ror
mov
push
icebp
lea
in
cld
out
loopne
pop
push
mov
dec
lahf
lods
jle
aas
xor
add
mov
cmc
call
and
dec
fimull
sbb
inc
fsubl
xor
mov
flds
push
mov
dec
mov
cs
movsb
pushf
inc
push
hlt
into
jbe
lock
sti
insl
mov
lea
mov
jmp
test
xorb
int3
mov
popa
sbb
mov
adc
xchg
sahf
subl
xor
popf
sub
lret
xchg
fwait
push
mov
fidivrs
mov
fs
loope
or
lret
insb
cs
sub
jo
mov
add
xor
fiadds
xchg
andb
push
xor
int3
lods
repnz
and
outsb
fisttpl
push
jl
int
xchg
in
mov
gs
jo
xor
adc
movaps
push
jl
xor
xor
repnz
xor
push
daa
das
je
dec
push
popf
aaa
lods
jge
and
mov
push
andl
mov
xor
dec
int3
sub
xor
or
xor
fistpl
inc
mov
pop
push
xor
mov
subb
fsubr
ss
and
call
inc
out
test
cmp
ljmp
sti
pop
dec
adc
mov
or
dec
sub
out
negl
xor
xchg
loope
cmpsb
jmp
and
aam
out
into
movsb
test
cmp
xor
call
pop
add
mov
popa
pop
xor
jmp
inc
pushf
xor
cli
mov
data16
into
mov
enter
inc
aam
mov
jmp
mov
pop
mov
xor
xor
add
push
jmp
adc
adc
mov
js
pop
fbld
mov
divb
fsubrs
jns
lds
inc
jg
cmp
xchg
lock
hlt
es
push
add
dec
adc
movaps
mov
push
jnp
xor
push
enter
leave
sub
sti
bound
movsb
push
xor
fcmovbe
pop
xchg
jne
lret
outsl
push
mov
inc
mov
inc
test
sahf
inc
or
loope
xchg
xor
inc
mov
in
cmc
pop
test
adc
fildl
push
sbb
or
and
into
stc
lods
adc
mov
popa
xchg
cmp
fisubs
movsb
push
adc
sub
inc
cmpsl
adc
dec
hlt
lcall
pop
pop
fwait
cmp
pop
sub
add
out
xor
cmp
daa
outsl
mov
adc
pop
out
xor
es
in
aad
scas
dec
fdivl
out
lahf
xor
js
adc
push
shlb
mov
fisttps
push
jno
ret
rcll
pusha
ret
cltd
std
loopne
ds
push
stc
inc
in
dec
mov
out
xorl
rorb
xor
mov
xchg
mov
ret
iret
add
data16
xor
repnz
pop
sbb
xor
hlt
jle
mov
out
lfs
push
xor
aam
fs
lods
inc
inc
xor
mov
jp
push
ficoml
cmpsb
lock
iret
xor
negb
daa
fisubrl
outsb
xor
bound
sbb
xorb
nop
je
push
out
jae
inc
ss
inc
out
pusha
movsb
test
adc
mov
jecxz
lock
arpl
hlt
shrb
insb
adc
or
pop
mov
jnp
jae
adc
inc
cmpsb
jp
adc
and
xor
jno
pop
and
sysenter
ljmp
dec
add
xorl
xchg
mov
addr16
push
out
std
mov
fs
push
and
push
ret
popa
lods
push
lret
sbb
test
das
popf
xor
clc
loop
popa
cmp
xor
loope
jnp
fisubrl
test
in
imul
cmpsl
cltd
mov
mov
je
push
pusha
mov
sahf
xchg
int
mov
lcall
add
ljmp
mov
insl
push
xor
sahf
mov
mov
cld
cmp
push
add
xchg
sbb
jno
ret
cltd
out
add
insl
test
mov
and
xor
pushf
pop
xchg
sbb
mov
push
add
sub
push
cmp
cmpsb
mov
mov
sub
xor
dec
stos
lcall
mov
jne
es
adc
push
test
jb
lods
push
bound
add
xor
push
icebp
das
pop
xchg
pop
cmc
push
and
loopne
call
xor
fs
push
push
mov
xor
mov
mov
sbb
aaa
pushf
int3
dec
xor
insl
int
and
ds
addr16
lock
scas
out
cmp
idivl
adc
cwtl
and
in
inc
dec
adcb
pop
out
hlt
std
outsb
loopne
adc
and
xor
and
xchg
xchg
mov
pop
cmc
rclb
add
xor
mov
mov
je
pop
lret
int3
inc
iret
mov
pop
cmpsb
leave
cwtl
stos
mov
shlb
insl
arpl
and
pusha
or
pop
pop
sub
xchg
ficoms
pushl
inc
jnp
add
or
jae
movsl
xchg
and
dec
adc
insb
and
mov
mov
xor
in
sub
fidivrl
aas
xor
fildll
dec
xor
mov
les
jae
adc
xor
rol
adc
lahf
push
xor
enter
sbb
pop
adc
fwait
cli
xor
cmp
pop
out
jp
les
nop
xor
test
pop
sub
jmp
loopne
popf
call
and
mov
add
aaa
jo
jnp
lret
adc
dec
xor
cmp
dec
sub
add
or
xchg
fnstsw
jbe
test
or
stc
pop
pop
adc
mov
repz
add
add
cmpsl
jle
mov
sub
push
inc
xor
jmp
sahf
data16
ja
out
jp
fldl
fs
cmp
aad
fisttps
gs
push
pop
sub
andl
je
in
addb
push
xchg
into
push
cmpl
and
dec
mov
pop
xchg
sub
mov
adc
xor
pop
pop
push
shrb
jle
nop
addr16
mov
leave
js
inc
cwtl
and
ljmp
jns
hlt
xchg
sub
scas
cmp
or
sub
lahf
adc
shr
xor
xchg
imul
sub
insl
out
cmc
dec
lods
loope
out
fdivrl
inc
mov
dec
mov
push
pop
or
add
dec
adc
js
push
pop
or
xor
or
mov
in
scas
pushl
das
xchg
rorb
pop
lods
insl
lea
insb
outsl
xorl
out
out
push
jno
fmull
pop
bound
orl
popf
ss
movsb
push
pop
inc
jge
fs
sub
ds
jns
inc
inc
mov
pop
jne
mov
aad
lea
sub
fnstenv
jbe
pop
mov
gs
or
rcrl
push
or
inc
dec
shrb
mov
mov
in
gs
sub
xor
lret
push
shlb
adc
mov
pushf
cmp
aaa
stc
inc
sahf
nop
adc
inc
imul
arpl
stc
popf
jp
xchg
dec
pop
pop
mov
mov
fnstenv
sub
add
mov
test
lret
or
add
aad
lods
cmp
notb
mov
ds
push
cmp
push
mov
pop
inc
adc
pop
out
and
xor
jl
adc
mov
js,pt
out
int3
les
stos
popa
fnstsw
inc
lret
leave
mov
sub
jmp
dec
and
push
ljmp
mov
outsl
or
jno
mov
lods
or
fbstp
push
out
xchg
int
mov
cmpsl
adc
jns
inc
sub
xor
ljmp
xchg
adc
mov
sbb
test
lock
enter
js
cmpb
test
clc
adc
jb
les
repz
xchg
mov
lds
jl
pop
sub
mov
mov
xchg
ret
or
cltd
sub
add
gs
cmc
mov
cmp
and
scas
mov
into
push
int
ds
sub
movaps
data16
lods
mov
ret
stc
xlat
imul
flds
mov
lea
cmp
lds
lahf
and
imul
aam
sbb
xorb
add
dec
cmp
sbb
lods
or
inc
cmp
cmpsb
repnz
sahf
fisttpll
mov
lods
lret
and
lret
mov
subb
add
sbb
cld
jne
movsb
pop
test
jbe
loope
xchg
mul
push
inc
sbb
mov
jle
and
xor
jae
lds
fdivrl
outsl
lock
sub
sub
mov
roll
sbb
xchg
sarl
xor
ds
jns
gs
sub
nop
mov
insb
mov
dec
fnstcw
fistl
sbb
insl
loop
movsb
mov
pop
repnz
insb
push
sub
adc
fldcw
sub
in
lret
pop
pop
les
dec
or
cmp
xchg
call
jb
in
sbb
sbb
cwtl
ret
in
sub
insl
sbb
or
add
add
and
inc
mov
js
jb
fsubs
in
ret
xchg
cmp
jmp
outsl
or
cmp
ds
daa
sbb
rcr
sbb
pop
and
pop
sbb
sub
xchg
xor
lods
dec
add
pop
mov
xlat
xchg
subps
sub
pusha
adcl
mov
add
ret
dec
loop
ret
inc
adc
dec
imul
add
lahf
sahf
adcl
lock
adc
adc
movsb
and
pop
xchg
adc
pushf
dec
cmp
popa
add
xor
icebp
xchg
push
cwtl
lcall
mov
fnstsw
sub
push
adc
adc
xor
cmp
cli
lds
push
jo
fwait
mov
cmpsb
pop
jb
xor
xchg
in
or
ja
jb
adc
call
push
les
in
push
sub
repz
jns
into
movsb
xchg
sbb
mov
adc
adc
cmp
cmpl
outsl
icebp
imul
sbb
xor
pop
or
mov
adc
lcall
xor
icebp
aad
inc
or
aam
xchg
lods
xor
sbb
repz
pop
or
movsb
and
xor
push
dec
orl
loopne
mov
jmp
lret
std
pop
je
inc
data16
xchg
jl
xor
in
xor
push
push
and
push
dec
test
jae
outsl
dec
repnz
add
pop
adc
cwtl
sub
rol
imul
xor
aad
dec
xchg
fcmovnb
sarl
movsl
shl
sub
stc
dec
push
adc
pop
icebp
loope
and
outsl
mov
data16
rol
add
lcall
ja
in
dec
jle
ficoml
lods
pop
and
movsb
pop
leave
inc
adc
jbe
jmp
adc
mov
lea
sub
sbb
push
pop
mov
in
xor
das
in
lret
arpl
enter
jle
mov
xor
cpuid
xor
dec
push
dec
xchg
fwait
mov
push
jle
xor
add
pop
or
sub
or
xlat
inc
xor
cmp
cwtl
push
jns
xorl
adc
test
pop
mov
push
repnz
test
mov
adc
aad
xchg
cmp
cmp
push
or
hlt
cmpsb
xor
in
adc
inc
orb
lahf
xor
js
and
andb
xor
sarb
inc
imul
adc
aas
or
fs
sbb
xor
out
mov
xor
test
loop
xor
cs
iret
jmp
xor
je
leave
mov
sub
jns
adc
or
sbb
nop
xchg
xchg
ja
jecxz
or
int
int3
mov
inc
sub
xor
cmp
shlb
testb
sbb
add
sub
add
add
mov
sbb
and
aaa
add
sbb
xchg
and
pop
ss
push
mov
pop
movsl
mov
dec
lahf
popf
in
cld
xor
push
aam
sbb
aad
cmp
sub
stc
dec
jbe
mov
icebp
insl
xor
jns
js
pop
inc
mov
xchg
sbb
adc
xor
cmc
xor
jg
push
dec
cmp
push
xor
mov
xchg
jno
bound
lea
sub
sub
pop
andl
dec
add
push
adc
push
je
loop
xor
push
sub
push
cmc
ret
dec
push
aas
arpl
xor
pop
dec
std
cmp
xchg
pushf
inc
mov
icebp
jle
les
and
sbb
and
sub
mov
push
adc
push
xchg
stos
ret
bound
mov
mov
jae
push
pop
rcrl
add
orl
stos
cli
lret
xor
mov
inc
mov
xchg
cmp
clc
xor
dec
aas
ret
sub
and
lret
sub
xor
clc
jns
sbb
xchg
xor
setge
mov
cmp
inc
insl
xlat
rcrb
xchg
or
sub
ret
jg
add
mov
dec
inc
xor
repz
or
jb
lret
xor
cmp
sub
and
jp
std
xchg
xor
movsl
inc
sub
rorb
fcomip
xor
ret
lods
xchg
pop
sbb
sub
je
mov
mov
imul
rcl
xor
jo
enter
mov
divl
jb
cmp
xchg
add
jecxz
dec
pop
adc
push
mov
jg
bound
inc
ss
xor
xchg
xor
outsl
cmp
cs
push
iret
imul
data16
fmulp
hlt
pop
add
push
sbb
in
gs
int3
hlt
out
push
xor
push
mov
pop
sarl
loop
inc
push
lahf
xor
sbb
fs
aas
shll
adc
fdivl
cli
xor
lds
xor
test
pop
push
pop
in
add
or
push
jl
popl
popf
stos
test
xchg
rcrb
sahf
and
xor
cmp
jbe
jg
call
xor
dec
popa
sub
cli
xchg
push
xor
js
mov
sysret
inc
xor
adc
mov
mov
cld
lret
jmp
or
popa
lds
das
lea
dec
aam
xor
enter
cmpsl
xor
jns
cwtl
bound
push
mov
inc
adc
xchg
dec
mov
in
aam
or
icebp
jno
cmp
xor
ffree
mov
repz
mov
call
sub
data16
adc
jnp
sbb
inc
mov
jno
mov
or
int3
cmp
add
outsb
dec
sub
std
jg
mov
adc
xlat
xor
mov
in
imul
sti
jbe
push
mov
cs
mov
inc
push
lock
in
dec
rcrb
cwtl
mov
roll
push
push
lret
xor
cmc
push
and
xor
idivb
jmp
sub
lret
xor
popa
inc
xchg
js
xor
bound
cmpsl
repnz
cmp
mov
jp
es
adc
imul
adc
mov
bound
push
xorb
outsl
clc
cmc
sbb
aam
pop
inc
push
add
icebp
push
popl
inc
aam
mov
or
pop
push
xchg
push
mov
cli
and
mov
inc
or
or
adc
aas
add
ret
push
ljmp
jae
ds
mov
or
sbb
sub
inc
fisubrl
pop
mov
ss
cmpsl
popa
or
movsb
clc
xor
push
cmp
idivb
mov
xor
mov
sti
pop
stos
add
sub
dec
mov
push
xlat
mov
clc
in
push
inc
js
int3
mov
push
hlt
es
int
push
das
xor
and
add
push
mov
inc
addr16
repz
mov
xchg
out
push
lcall
add
and
popa
imul
sbb
add
push
or
idivl
js
mov
push
pushf
adc
cmp
dec
jne
xor
gs
fistps
adc
push
xor
mov
ss
push
loope
cmp
mov
push
pop
aam
call
clc
mov
flds
xor
insb
jne
lret
inc
dec
lods
xor
shlb
mov
xor
push
sbb
out
xchg
cmp
cmpsl
sti
adc
xor
cmp
negl
fidivs
jmp
xor
cmpsb
dec
push
xchg
imul
dec
inc
sbb
mov
xor
cmpsb
in
sbb
fistpll
xor
mov
out
pop
and
inc
popf
cwtl
movsl
or
mov
push
shlb
fiaddl
lahf
push
testb
inc
gs
or
out
les
es
jp
outsl
cli
jl
decl
xor
shll
scas
pop
adc
adc
xor
inc
mov
ret
xor
int
push
xor
push
push
xor
sbb
lahf
sbb
cwtl
fdiv
mov
insl
and
xchg
jl
add
xor
cltd
jbe
lock
mov
int3
cmpsl
and
push
cmp
or
mov
les
jns
dec
push
mov
sub
mov
adc
xlat
movsb
mov
sub
sub
hlt
xchg
test
xor
sbb
adc
gs
aad
rcr
xor
pop
inc
test
xor
xchg
lea
sbb
clc
dec
jge
mov
adc
and
popf
mov
sbb
xchg
push
in
leave
xchg
inc
roll
sbb
xlat
lcall
andl
lret
pop
mov
jbe
push
jp
push
and
fdiv
push
lock
push
cs
pop
in
adc
mov
fbstp
gs
movsl
or
inc
push
sub
jbe
aam
xor
mov
out
out
inc
xchg
xor
gs
push
fptan
xor
push
mov
xor
pop
mov
ss
lods
push
add
and
mov
dec
xor
pop
orb
fmuls
loope
jnp
je
push
clc
mov
addr16
sti
sub
xchg
push
mov
sub
icebp
iret
pop
adc
cwtl
lea
stc
out
sub
scas
jne
lret
mov
mov
sub
ljmp
enter
add
mov
orl
fcoml
mov
sub
mov
std
sbb
mov
rep
xchg
in
iret
fsubrl
sbb
int3
sub
push
cmp
xor
sub
push
or
lea
xor
add
ret
adc
pop
aas
popf
ss
sub
xor
ljmp
mov
fstp
enter
int3
jg
sahf
aad
cmp
or
das
jae
adc
test
push
cmp
cmp
adc
fsts
gs
xor
jge
repz
dec
hlt
jg
decl
in
push
aam
daa
sub
mov
sbb
xor
lds
xchg
adc
orl
inc
sbb
sub
lds
rolb
insb
das
inc
cmp
pop
dec
ds
aaa
adc
inc
adc
push
sti
inc
repnz
roll
call
xchg
in
wrmsr
pop
cmc
fildll
out
cli
adc
les
in
popf
shlb
insl
ret
sub
ja
pop
lods
sbb
sarl
jne
pop
inc
scas
int3
ficomps
addr16
rolb
mov
cmpsl
pop
push
jo
cmp
shrl
aam
ret
sub
adc
dec
add
rorl
mov
push
add
sbb
pushf
mov
xchg
movsb
lods
ret
je
cmpsl
mov
jbe
jg
ss
jg
fwait
push
mov
fcmove
jp
inc
ret
pop
mov
push
dec
sbb
out
les
sahf
or
lret
fcmove
mov
ds
xchg
hlt
int
leave
mov
xchg
adc
mov
and
cwtl
sub
movsb
xor
inc
add
loop
sub
cli
push
jle
sub
lock
fldl
pop
pop
mov
cmpsl
enter
stos
adc
mov
sbb
out
and
xchg
lcall
lret
mov
outsb
imull
xlat
out
mov
je
clc
jns
rolb
fwait
imul
jecxz
mov
cmp
mov
stos
add
jnp
fs
xor
add
sub
push
lcall
lret
mov
xlat
dec
fsubr
ret
lcall
orl
sbb
cmpsb
lahf
cmpsb
or
mov
cmp
stc
les
and
in
adc
movsl
pop
jb
or
and
dec
mov
sarb
stc
or
xchg
mov
into
jb
xchg
dec
and
cs
repz
pop
mov
push
sub
sub
leave
lea
in
pop
xorb
adc
and
mov
rcr
ffreep
add
subb
push
cmpsl
cltd
in
xchg
xor
jns
cmp
lock
pop
loopne
jg
dec
jns
sub
outsb
rorb
mov
mov
push
stc
and
aad
mov
inc
stc
jge
rolb
or
std
repnz
xchg
and
iret
xchg
popa
mov
mov
cmp
emms
jl
int3
out
add
inc
stos
pop
adc
ret
mov
loop
or
dec
in
call
or
jbe
xor
lods
jmp
jb
add
loopne
test
fsubr
cmp
out
add
or
push
in
inc
jmp
jbe
cmp
enter
jnp
xchg
add
sahf
jle
pop
and
and
push
adc
flds
mov
add
mov
adc
mov
faddl
sub
lret
call
test
or
out
fldcw
mov
lret
rcl
mov
jo
scas
movsl
add
mov
lods
sub
int3
popa
dec
mov
test
pop
adc
mov
gs
dec
popf
pop
in
lock
xchg
add
sti
dec
xor
lret
adc
mov
addl
ret
push
cmp
out
cli
stos
aam
push
push
jecxz
call
mov
pop
aam
divb
sub
dec
cwtl
jl
lea
adc
subb
mov
mov
add
aad
ret
jbe
daa
adc
xchg
lods
data16
popf
cli
add
aam
hlt
ret
mov
adc
in
mov
push
jns
xchg
inc
rolb
push
js
out
pop
sahf
xchg
in
push
and
or
xchg
into
push
push
jp
cmpsb
loope
or
mov
or
aas
repnz
pop
out
lahf
add
dec
jg
xchg
js
mov
rcrb
lfs
cmp
cmpsl
fiadds
sub
dec
sub
push
xchg
sub
pop
jp
daa
iret
adc
fnsave
mov
popf
movsb
xor
mov
rcrl
jmp
cmp
adc
sub
and
sub
rclb
out
mov
lods
adc
add
sub
jmp
jl
pop
pop
add
cmp
mov
pop
movsl
xchg
mov
aam
stos
sub
stos
pop
adc
imul
pushf
dec
inc
out
or
out
dec
scas
mov
mov
mov
call
call
js
pushf
loopne
dec
mov
test
mov
dec
or
xchg
aad
std
int3
add
mov
xchg
repnz
cmp
repz
mov
cmp
shll
out
sarb
xor
jp
nop
stos
psubusb
sbb
arpl
out
fbstp
pop
out
sub
xlat
sbbb
dec
xchg
mov
pop
ret
sbb
sub
jae
iret
out
push
cmpsb
das
fucom
addr16
dec
pop
bound
push
jp
sub
ror
sbb
inc
ret
lret
lret
add
push
lods
insb
mov
cltd
mov
jbe
sbb
lods
xor
sbb
popf
out
mov
jo
mov
pop
ret
fsts
aas
sbb
psllw
test
mov
fld
add
push
add
ficoms
test
dec
pop
mov
mov
nop
pop
test
push
rcl
or
sub
mov
into
xchg
es
pop
test
cs
loop
xchg
enter
test
lea
xlat
in
xchg
or
arpl
into
fdiv
fwait
mov
sub
pop
push
loop
mov
or
shrb
jbe
or
inc
imul
test
mov
mov
out
push
sub
repz
in
pusha
mov
xor
adc
cmp
test
popf
inc
or
or
fidivl
mov
and
sub
and
cld
xor
cli
pusha
jp
ret
adc
inc
cmp
ret
add
frstor
adc
inc
addr16
scas
repnz
pop
xchg
jmp
pop
addr16
pop
adc
pop
lret
mov
testb
cwtl
adc
sub
cmp
push
inc
sub
sar
cmp
sub
xchg
mov
push
mov
push
adc
mov
test
push
fcomp
push
add
cmp
sub
decb
cmp
add
jmp
test
test
xchg
addr16
xor
adc
int3
pop
insl
stc
shr
mov
push
sub
sub
sub
arpl
int3
fs
push
aad
sub
mov
sub
cmp
enter
adc
js
and
push
mov
cmp
lds
mov
aad
cmp
add
adc
fsub
lcall
pop
rclb
imul
push
pop
jle
pop
mov
push
je
ret
mov
push
popa
iret
jno
popf
cmp
mov
shrb
mov
stos
dec
cmp
jne
repnz
jbe
cmpsb
cmc
sub
push
push
fldcw
mov
icebp
xor
mov
scas
xor
xchg
nop
pop
cmp
nop
cmp
push
mov
or
test
subl
repz
push
mov
and
cwtl
pop
stc
je
ja
jp
out
aaa
cli
cmp
pop
pop
data16
sbbl
push
ljmp
lock
push
subps
adc
mov
sub
jecxz
lea
jbe
push
pop
adc
repz
sbb
shll
fsubr
lds
adc
stos
pop
orl
hlt
or
bound
test
insl
and
addr16
or
fstpl
pop
add
or
cmp
xchg
roll
sub
in
in
faddl
inc
sahf
iret
mov
imul
outsb
mov
jle
dec
sub
imul
lods
ljmp
ja
addb
pop
mov
pusha
shrb
enter
sbb
stos
xchg
hlt
sbb
jp
out
in
dec
dec
push
mov
ja
push
shlb
pop
mov
je
adc
out
hlt
xor
mov
sub
loopne
and
push
lea
cwtl
insw
enter
or
cmp
push
add
clc
mov
ret
hlt
lds
int3
pop
cmp
sub
das
sbb
hlt
call
xchg
cmp
aaa
pushf
sahf
xor
mov
sbbb
xor
mov
sub
jp
stos
repz
jp
mov
movsl
hlt
mov
jb
int
test
pop
ret
ds
dec
sub
inc
ret
xlat
je
mov
pop
testb
movl
dec
cmp
sub
mov
jmp
daa
cmp
pop
adc
jno
mov
add
or
or
add
sahf
mov
add
push
cmp
fwait
dec
ljmp
or
inc
fs
mov
xor
jp
mov
int
mov
xor
sbb
test
push
xchg
cmp
outsb
in
jp
mov
lods
and
sbb
insb
mov
stos
cmp
repz
movsl
scas
mov
imul
mov
xor
xchg
jb
sub
jne
xorl
ror
fidivrl
stos
cmp
xor
sbb
or
cmpsb
shl
cmp
in
mov
dec
or
test
mov
sub
xchg
daa
lret
test
pop
push
cmc
xor
testb
inc
jge
xor
jae
add
and
mov
jl
fstpt
or
inc
lods
push
xchg
pop
stos
sarl
jns
sbb
mov
xor
or
and
mov
icebp
aam
jle
test
test
lahf
in
out
push
mov
dec
loop
cmp
lods
clc
sub
cmp
push
mov
pop
mov
jp
push
inc
enter
stos
adc
mov
stos
insb
xor
sub
lods
mov
arpl
push
sbb
scas
loop
pop
fsubr
push
aam
sub
or
scas
pop
loope
jo
push
and
inc
mov
enter
pop
dec
cmc
or
dec
js
ljmp
inc
sub
xor
std
inc
add
cmp
pop
fiadds
and
fisttps
xchg
fdivrp
out
dec
hlt
and
mov
pusha
dec
scas
push
mov
sub
ret
or
mov
loop
sahf
add
pop
sbb
inc
xor
jne
adc
popf
jg
ret
push
adc
cmc
gs
sbb
imul
sar
fstl
test
call
inc
adc
fcompp
je
mov
sti
xor
hlt
xchg
filds
xor
mov
jl
jo
adc
cwtl
inc
cmp
stc
xchg
fistps
fsubrl
ljmp
data16
arpl
sub
mov
icebp
adc
dec
push
xor
xchg
repnz
pop
out
ljmp
add
les
xor
cmp
pop
inc
stos
jp
jae
mov
lahf
arpl
add
clc
fldenv
gs
add
jnp
aaa
inc
push
stc
xchg
dec
scas
cli
addr16
clc
loopne
sbb
jmp
rclb
pushfw
lar
push
jns
dec
fwait
lahf
xchg
or
push
leave
or
je
and
adc
mov
cmpsb
mov
pop
out
das
xor
sub
lahf
adc
ret
in
ret
daa
ss
xor
js
movsl
sub
and
xor
nop
lods
or
push
pop
add
je
test
in
jb
xchg
mov
leave
push
or
mov
mov
jecxz
mov
mov
rol
fcmove
jnp
mov
fcomps
inc
adc
mov
xchg
enter
cmc
xchg
cwtl
bound
pop
insb
jns
pop
sbb
int
ret
mov
sbbb
inc
xchg
and
lock
lods
leave
mov
fstpl
add
repz
mov
sub
add
sub
vsubss
cld
cmp
mov
in
lea
jmp
jle
smsw
inc
insl
mov
pop
rcrl
mov
adc
lods
sub
pop
aaa
mov
leave
cmp
and
and
push
dec
adc
push
xchg
icebp
cs
and
icebp
add
aam
pushf
xchg
mov
pop
push
das
cmp
jno
hlt
push
lahf
sarl
loop
pop
jae
stc
mov
xchg
out
les
ret
cld
movsl
jnp
enter
scas
pushf
add
bound
inc
lods
push
push
in
push
shlb
and
out
into
jae
push
mov
dec
mov
aam
stc
adc
aad
in
push
xchg
jge
je
jno
cmp
test
mov
push
sub
shll
mov
roll
or
dec
adc
jbe
out
xor
and
dec
sub
and
mov
shrl
push
cmpsb
inc
add
cld
iret
lret
or
ljmp
ja
hlt
subb
mov
lcall
fwait
adc
das
sub
mov
or
pop
inc
xor
aad
ja
movsb
into
in
call
int3
in
push
fstpt
or
mov
stc
sub
insl
mov
jne
add
push
mov
push
in
shrb
jmp
cmp
jne
xorl
or
sbb
jne
xchg
test
cld
pop
nop
jne
aam
or
mov
sbb
mov
lret
xchg
jp
xor
cmp
inc
icebp
cmp
push
cli
mov
and
cmc
pop
bound
add
jle
ljmp
jp
mov
cmp
cmp
addr16
jnp
lret
and
test
add
pushf
add
je
cld
aam
das
fidivrl
sbb
dec
xor
add
push
sub
hlt
mov
lods
es
sbb
xchg
mov
lret
inc
xor
or
lock
in
imul
pop
push
std
outsl
ficoml
les
lcall
scas
in
hlt
shr
rclb
out
dec
cmpsl
je
cmp
out
jns
mov
scas
mov
cmp
lret
enter
cli
or
hlt
int3
imul
lods
enter
daa
icebp
cli
adc
out
fnsave
inc
jb
mov
xchg
adc
xor
decl
xor
xchg
aas
xchg
sbb
in
fdivl
out
add
rorl
fs
dec
fwait
popw
jo
in
mov
scas
push
dec
lret
adc
sub
push
mov
fwait
pushf
test
and
pop
scas
hlt
test
pcmpeqd
outsl
pop
sub
sbb
add
movsb
mov
test
sbb
mov
dec
inc
dec
and
xchg
repnz
pop
into
sub
push
addr16
cmp
push
mov
pop
jg
inc
push
out
mov
sub
lods
push
hlt
dec
movsb
inc
fnsave
cmc
push
dec
adc
push
fstl
ret
push
insl
inc
in
add
fs
int
adc
fisttpl
les
not
lret
sub
mov
mov
xor
add
imul
jl
mov
scas
test
adc
add
iret
shr
nop
imul
sub
ret
icebp
ret
aad
xor
insb
mov
sti
arpl
lods
lahf
sbb
or
sub
inc
test
lcall
fsubrl
in
adc
lret
test
sub
rcll
pusha
out
or
clc
push
loop
mov
inc
jl
sub
in
mov
jo
out
icebp
sbb
sub
aad
jb
lock
add
lods
add
sub
leave
dec
scas
ret
sub
or
mov
cld
mov
outsl
adc
jle
ret
jae
sbb
adc
jl
xchg
ljmp
inc
mov
dec
add
lret
mov
outsl
stos
mov
adc
repnz
test
in
cmc
adc
fstps
xor
mov
std
into
test
push
inc
xlat
push
push
dec
sub
cli
cmp
xchg
inc
sub
std
fimuls
push
in
xchg
je
mov
out
inc
pop
sub
andb
mov
loope
push
test
lahf
ljmp
jae
mov
stos
adc
xor
mov
jbe
xchg
into
nop
add
inc
adc
movaps
inc
jbe
in
inc
movsb
jns
mov
int
push
pushf
adc
dec
push
lods
pop
mov
loop
cmp
js
bound
sub
hlt
dec
xchg
and
push
add
psubd
push
das
lret
push
out
sbb
sub
dec
push
dec
fs
or
jb
inc
movsl
adc
push
icebp
fimull
mov
xchg
cmp
pop
mov
sarb
cmp
xchg
mov
popa
sub
iret
mov
mov
inc
mov
jecxz
out
fldl
adc
das
inc
cmp
nop
scas
dec
sbb
push
std
xor
jb
push
push
mov
xchg
jne
ds
adc
out
xor
out
aaa
jmp
and
inc
jae
push
loope
out
lock
xchg
and
xchg
scas
mov
fstl
popf
jle
xlat
add
sti
jl
sar
sub
xor
adc
shrl
add
js
dec
fcoms
hlt
cmc
jns
push
lret
rcll
lret
es
sub
or
pop
xor
xchg
pushf
adc
mov
das
push
cmp
jmp
dec
clc
cld
cmpsl
xor
cld
mov
or
test
repnz
inc
adc
ljmp
data16
fmuls
inc
leave
xchg
fdivl
daa
pop
adc
rclb
fucomip
push
or
and
push
daa
and
lods
xor
sbbb
sub
pop
cli
cltd
lods
or
add
xor
je
inc
push
or
cmp
sbb
jno
icebp
fildl
dec
cmp
fcompl
pop
mov
and
mov
push
mov
xor
ss
add
lret
ror
jge
test
add
dec
mov
adc
cs
mov
mov
das
or
js
cmp
sub
addr16
xchg
xor
stos
cmpsl
push
into
pop
xchg
xor
and
dec
push
inc
mov
std
jae
dec
dec
dec
xor
mov
loop
mov
ss
bound
adc
cli
mov
sub
jns
dec
xor
decl
inc
adc
cmpsl
push
and
vcomisd
xor
mov
jmp
adc
dec
call
xor
nop
add
mov
lahf
xchg
ja
adc
jae
rcrb
repnz
sbb
scas
jae
and
and
push
lods
adc
gs
push
mov
insb
xchg
adc
sbb
mov
lahf
mov
test
push
xor
or
fs
push
shlb
xlat
inc
adc
lds
xchg
inc
mov
stos
in
push
or
je
lahf
mov
fadd
add
test
jge
mov
mov
sbb
cmpsb
aas
pop
ljmp
cmp
gs
xor
mov
xchg
push
xor
popf
sarb
sub
les
xor
int
jecxz
mov
push
push
push
enter
iret
push
pushf
jne
mov
xchg
cmc
outsb
adc
subl
or
cmc
mov
pusha
push
movsb
pop
outsb
aam
xor
and
xor
sub
in
sub
mov
ss
lea
sbb
jae
fistl
or
or
pop
xor
cmp
ret
xor
cmpsl
cmp
xor
movl
add
lods
addb
jb
popf
xlat
sbb
push
out
mov
shlb
lea
xor
outsl
xchg
sbb
test
loopne
xor
fsubs
stc
and
xor
dec
ss
jp
scas
xor
test
lret
fisttpll
lds
mov
repnz
sbb
jne
cmp
push
popf
push
add
aam
inc
dec
shlb
xor
or
and
clc
inc
inc
mov
icebp
push
sub
sub
xor
pop
popa
fidivl
in
js
mov
out
adc
aaa
pop
xor
or
lcall
in
or
dec
mov
jg
les
adc
xor
lahf
in
out
sub
std
sub
test
or
or
xor
loope
inc
jne
cmp
xor
and
push
push
xor
cmp
and
testl
popf
out
in
mov
mov
xor
arpl
xchg
inc
mov
mov
xor
adc
push
push
mov
scas
imul
out
sti
push
push
movsb
popa
sbb
lret
or
pop
xor
or
das
jae
jl
ret
test
adc
mov
arpl
push
test
xor
ret
aas
pusha
push
cwtl
insb
xor
xchg
sub
repz
notb
leave
push
mov
jns
xlat
mov
call
roll
fcoml
inc
clc
pop
aaa
iret
xor
push
js
push
inc
lds
pop
and
inc
lea
inc
inc
or
sbb
loop
insb
add
xor
cltd
and
movsl
xor
lret
ret
mov
mov
inc
xlat
or
push
pop
cmpsb
mov
mov
arpl
data16
ficomps
and
aaa
hlt
xor
dec
mov
mov
jg
lahf
inc
cmp
aas
push
xchg
xorl
jle
or
jns
mov
insb
adc
or
xor
push
sahf
pop
add
scas
jae
and
lods
aaa
fwait
pop
mov
xchg
lea
adc
repz
cmp
push
enter
jmp
adc
stc
or
shlb
insl
pop
dec
out
lock
xor
jmp
dec
ss
sbb
inc
mov
and
hlt
test
mov
dec
xor
and
inc
lret
xor
dec
mov
cmp
adc
push
add
xor
call
cmpsl
adcl
and
mov
popl
fiadds
mov
das
dec
js
cwtl
xor
scas
aas
sbbl
ja
mov
xor
fadds
enter
xor
cmpl
xor
pusha
shl
cmpb
mov
adc
pop
adc
xchg
loopne
pop
lahf
dec
mov
jmp
jno
sti
lock
and
fildll
inc
add
stc
sub
adc
pop
rcll
scas
dec
push
push
hlt
icebp
into
out
lea
xor
fldt
repz
jae
xor
add
push
sbb
aad
imul
sub
jno
inc
fidivs
fidivl
scas
jle
pop
push
pop
orl
inc
add
xor
adc
cmpb
add
ret
movsb
sbbb
sub
nop
pop
mov
stos
push
lock
and
xchg
sub
lds
cmc
enter
or
pushf
xchg
sub
pop
sbb
xor
cs
pop
cmpsl
or
out
mov
xchg
push
popf
mov
mov
fs
scas
mov
dec
movsb
sti
sub
xor
push
adc
mov
sbb
imul
or
or
jl
inc
lcall
and
mov
adc
xlat
sbb
arpl
lret
xor
scas
push
mov
notb
cwtl
mov
test
mov
add
mul
test
insb
cmp
dec
xor
push
orb
mov
jge
pop
ret
std
sbb
pop
cmpsl
arpl
mov
ficomps
test
stos
addr16
push
dec
psubsb
fisubrs
pushf
inc
pusha
dec
insb
orb
roll
xor
nop
fisubrs
jmp
shr
outsl
dec
adc
xchg
xor
mov
push
push
mov
leave
push
insb
je
adc
add
js
pop
inc
lds
adc
sbb
adc
in
sti
mov
je
outsb
mov
hlt
mov
add
or
push
sub
and
test
shlb
mov
or
inc
adc
sub
mov
xor
andb
and
cmp
xor
add
jbe
fldcw
push
xor
pusha
ret
mov
adcb
rorb
sbb
imul
out
mov
hlt
out
xor
pop
jnp
push
and
push
push
fimuls
and
clc
adc
fistpl
dec
dec
cmp
cs
xchg
jmp
clc
popf
mov
add
data16
lods
adc
mov
inc
xlat
inc
mov
lock
loope
mov
in
lahf
xor
jne
or
xor
xchg
sub
inc
add
mov
xor
lea
das
outsl
sbbl
cmp
mov
xor
adc
ret
in
xchg
xor
sbb
cli
dec
inc
mov
test
add
pop
mov
and
insb
aaa
cs
cwtl
xchg
sbb
cld
sarb
xchg
jae
xor
negl
jmp
inc
fimull
aam
xor
mov
xor
loope
ja
pop
jp
adc
push
sar
inc
in
sarb
in
ja
out
dec
jnp
pop
int
stos
clc
cwtl
xor
fisttpll
inc
js
andb
mov
xchg
in
flds
jne
pop
jecxz
xor
in
sub
xchg
flds
aaa
imul
pop
adc
mov
popf
aad
and
jno
jae
or
pop
scas
clc
out
bound
mov
fucom
arpl
push
push
mov
scas
aaa
cmp
je
xchg
xor
enter
ja
aaa
xchg
xchg
mov
sub
push
mov
sub
xchg
sub
add
lahf
test
or
mov
rorb
xchg
xlat
push
lds
jge
mov
xor
icebp
cmpsl
repz
in
adc
inc
or
rolb
sub
scas
popf
sub
and
sbb
pusha
push
xor
cmp
scas
mov
xlat
push
sub
add
je
fstpl
jg
xor
mov
int
mov
mov
mov
cmpsl
dec
rorb
mov
je
test
dec
hlt
mov
shlb
and
add
ja
mov
sub
pop
sbbb
xchg
mov
pop
push
adc
adc
adc
jl
fdivs
mov
cmp
aaa
xlat
repz
repz
out
xchg
call
lods
adc
cmp
arpl
mov
pop
inc
gs
lods
xor
or
out
cwtl
sbb
adcl
repnz
nop
mov
adc
cmpl
enter
sub
mov
xor
pop
notl
jmp
ja
sbb
stos
test
push
xchg
call
cmp
int
rorl
jp
sub
push
les
sub
mov
xchg
sbb
pop
sub
jae
ret
aad
nop
cli
push
jp
movsb
js
fidivrl
lds
fwait
rcrl
mov
cwtl
ja
lret
mov
push
push
daa
cmp
or
cmp
inc
jg
jnp
aam
inc
rcl
inc
imul
sub
inc
rorb
mov
pop
cmc
jl
xor
mov
adc
mov
ds
mov
mov
sub
dec
lock
or
das
out
mov
or
scas
fstpl
lcall
pop
rclb
lods
or
rep
mov
imul
push
xor
popa
or
jo
push
jg
xor
ret
adc
mov
ljmp
ret
cli
mov
inc
mov
dec
stos
mov
sahf
in
es
pop
jmp
push
push
sub
rorl
mov
es
in
push
test
inc
and
or
lahf
aam
in
or
jmp
fsts
nop
cmp
leave
mov
jbe
aad
or
mov
cmpsl
dec
mov
enter
adcl
push
adc
or
inc
pop
rcr
cmc
ds
push
jmp
in
cmc
jg
push
mov
cmp
out
mov
sub
cwtl
rorl
in
popf
rolb
sub
jne
xchg
xchg
push
dec
fwait
push
sub
xchg
out
jg
xchg
arpl
jecxz
jne
add
insb
pop
adc
aam
das
inc
loope
sub
push
pop
cltd
das
pop
clc
or
adc
sub
outsl
fnstcw
adc
sbb
jne
adc
movsb
sbb
sub
aad
inc
dec
fildl
sub
lock
sbb
mov
mov
lcall
insl
dec
dec
out
dec
xor
adc
dec
testb
dec
das
pop
div
pop
out
and
jnp
adc
xchg
add
subb
sbb
dec
xor
jae
push
mul
insb
dec
lods
xchg
or
xor
popa
je
and
lret
jae
xchg
push
jne
cmc
popa
clc
mov
inc
inc
test
aad
xchg
adc
pop
xor
pop
test
stos
ss
add
xchg
inc
adc
push
scas
mov
or
jge
push
in
fdivs
jae
mov
adc
or
jmp
lret
xchg
fstps
and
ret
lret
lret
push
outsl
push
cmpsb
or
fisubrs
ds
push
in
dec
ret
push
aas
push
xchg
push
pop
inc
out
decl
or
clc
push
mov
call
push
inc
sub
mov
call
dec
stos
aam
cmpsb
xor
push
push
loopne
push
sbb
je
xchg
adc
sbb
loop
sbb
frstor
cs
adc
mov
or
jmp
aas
pop
and
xchg
jbe
fcompl
adc
add
xor
adc
sub
ja
cmp
popf
scas
mov
hlt
fiaddl
or
push
hlt
rol
fistpl
fnsave
adc
mov
clc
mov
and
sub
adc
lods
jns
jg
fstp
jns
push
mov
add
mov
xchg
faddl
lock
adc
mov
push
push
and
adc
nop
in
js
dec
sbb
lods
sbb
stc
pop
pop
enter
jo
jns
mov
mov
sbb
jle
adc
xor
mov
mov
xlat
nop
in
jge
sub
push
cmpsb
ss
and
arpl
adc
in
test
stc
jge
in
sub
imul
popl
inc
jae
sub
jp
and
into
dec
add
sub
popf
fisttpl
call
ss
pop
imul
pop
mov
mov
xor
sub
ret
jo
jnp
int3
out
push
cmp
addr16
push
or
das
mov
test
inc
xchg
xor
xchg
sarb
outsl
adc
adc
out
mov
cmp
sbb
ss
pop
adc
ljmp
outsl
jne
mov
add
aaa
mov
add
aaa
in
pop
sub
les
fwait
movb
pop
xchg
ljmp
arpl
arpl
das
mov
out
les
aad
pop
cld
fcomps
test
push
cmp
loope
push
mov
mov
sarl
add
or
xor
jne
rorl
adc
adc
sub
jns
pop
rolb
fisttpl
or
inc
adcl
incb
and
pop
ret
sbb
sarl
std
aam
mov
mov
or
mov
fidivl
pusha
fsubrs
lock
ds
mov
add
pop
fnstsw
sbbb
push
fmulp
dec
nop
bound
xorb
mov
aaa
jp
aam
fnclex
jl
call
jbe
das
jae
push
sti
or
xor
or
les
xor
divl
popf
xchg
inc
or
mov
jp
jne
push
dec
jno
jb
cmc
lods
sub
loopne
jmp
mov
hlt
pop
cli
ss
push
test
in
fstpt
mov
repz
fsubl
push
data16
push
jmp
push
sub
test
mov
sahf
data16
daa
aam
jne
pop
call
mov
sub
jmp
push
movsl
push
popf
mov
lret
fiaddl
jl
sahf
in
mov
and
ds
inc
rep
jge
addr16
lods
iret
xor
cld
in
or
ror
pop
sub
sub
clc
stos
xchg
inc
inc
mov
xchg
push
ljmp
adc
leave
cmp
shll
lock
lock
cmp
mov
mov
inc
repz
jne
inc
bnd
or
scas
aaa
jge
pop
fnsave
lea
cmp
dec
xor
or
aaa
sbbb
add
int3
lahf
lock
jne
sbb
or
mov
dec
cwtl
xor
push
pop
cmp
mov
popf
sahf
or
sbb
shr
loopne
fldl
xchg
cmp
cwtl
mov
lds
fisubrs
popf
ret
xor
push
sub
shlb
fwait
andb
mov
ja
xor
adc
sahf
jns
add
cmovg
inc
pop
adc
pop
xor
into
je
lods
aad
mov
adc
dec
push
push
sbb
mov
cs
jle
xchg
cwtl
push
jl
jns
lcall
jo
mov
fimuls
xchg
add
mov
movsl
cs
or
xchg
jle
sub
fsubrs
les
and
sahf
ret
loope
mov
test
lods
ss
fidivs
xchg
fimuls
sub
mov
mov
cmp
adc
and
lods
ffreep
xchg
sbb
test
mov
iret
or
pop
inc
dec
in
or
mov
pop
pop
sub
sarb
cmp
dec
jnp
test
lcall
in
jns
sub
sub
in
jmp
lcall
xor
les
mov
add
jge
jnp
ja
repz
cmp
fucom
adc
mov
inc
or
lcall
pusha
mov
outsb
ds
sbb
test
xor
js
jle
pop
aad
cmp
scas
lret
enter
cli
in
push
in
sbb
test
inc
flds
test
insl
mov
push
ljmp
jnp
xor
dec
adc
leave
out
icebp
dec
dec
out
inc
mov
cwtl
cmc
xchg
rol
pushf
flds
insl
fstpl
lods
sti
push
call
push
jnp
in
test
jo
jg
push
xorb
add
push
in
movsb
mov
scas
inc
lea
ja
popa
xor
into
lods
hlt
add
xor
adcb
xchg
jle
or
sub
sub
push
mov
lods
push
dec
mov
pop
mov
aad
dec
mov
roll
sub
sahf
cwtl
test
test
cmp
outsl
lret
inc
ret
les
ficoml
ds
dec
imul
mov
mov
mov
fstl
shll
cmp
iret
repz
insl
adc
rcrb
mov
lods
leave
xchg
out
add
push
scas
in
fcoms
sbb
rclb
imul
pop
pusha
mov
and
sub
inc
dec
xor
xor
inc
addr16
leave
inc
jg
arpl
outsl
or
cwtl
adc
pushf
pop
pop
push
in
addb
adc
or
xchg
and
outsl
xchg
add
hlt
lds
adc
add
fadds
stc
daa
jae
add
insb
push
add
lea
in
in
adc
jl
pop
pause
cmpsb
cmp
das
pop
sti
push
fisttpl
int
inc
dec
je
notb
sbb
cmp
push
mov
into
mov
pop
aaa
rolb
pusha
and
or
aad
pop
sti
aam
push
in
mov
jge
xchg
jl
dec
xchg
testb
popa
insl
aam
in
dec
jl
scas
adc
rorb
int3
les
out
mov
addr16
cmp
push
fsubrs
jne
loope
add
out
mov
inc
push
add
lock
or
xor
sbb
inc
xchg
xchg
fisubs
aaa
adc
sbb
xchg
mov
xchg
scas
fcomps
dec
jnp
aaa
bswap
ret
lcall
mov
lret
push
dec
shlb
int
sbb
add
int3
in
test
or
fmul
cmpl
das
in
popf
xlat
push
inc
mov
dec
out
cmp
jb
int3
fisubs
or
pop
push
lds
loopne
jne
mov
or
add
fldt
jl
js
xchg
in
mov
out
aad
jl
sahf
gs
lcall
xor
fisubrs
mov
adc
dec
sub
cmpb
hlt
dec
mov
mov
push
insb
and
stc
call
out
lds
push
adc
and
aad
mov
ret
arpl
push
push
dec
sub
aad
mov
faddl
and
jp
movb
movsl
mov
pop
or
dec
add
inc
xor
xor
inc
mov
fisttpl
add
push
gs
out
xchg
push
jge
inc
arpl
lock
test
cmp
dec
pop
fstl
add
cmp
ret
stos
lods
lret
jp
push
out
in
hlt
aam
xor
aad
push
jnp
negl
mov
ljmp
sbb
xchg
mov
sbb
ret
insb
mov
xchg
shll
sub
mov
out
sub
cmp
xor
mov
insl
stc
cmp
in
cltd
test
aam
fstpl
gs
ds
in
dec
or
add
jno
mov
sub
fwait
arpl
cmp
mov
or
sub
dec
add
orl
xchg
stc
loope
shll
lret
aaa
lock
outsl
mov
push
dec
je
xor
pop
inc
xor
pop
cmpsb
or
rclb
jl
in
inc
into
and
cmc
rclb
sbb
outsl
pop
jmp
int3
hlt
xor
ss
or
out
pop
clc
xor
mov
test
out
sub
xor
stos
inc
and
fsubs
xor
xchg
lds
jns
xchg
insl
xor
call
sarb
fucomi
mov
cld
jbe
mov
mov
sbb
gs
aad
sub
lret
bound
sbb
movsl
xchg
push
incl
mov
sarl
mov
dec
idivl
xlat
pop
loop
push
adc
ret
mov
sti
jns
fwait
sbb
loop
enter
lds
mov
jge
push
cmp
xor
cld
bound
lahf
mov
push
sbb
dec
xor
dec
cltd
adcb
mov
push
lret
pop
fwait
rcll
cmp
jbe
dec
cltd
adc
pop
shlb
xor
cmc
or
cmpsl
sub
or
lret
push
pop
jmp
cmp
insl
mov
mov
xchg
xlat
push
pop
cmp
cmp
cmp
inc
adc
lods
mov
les
and
dec
in
adc
inc
jns
sub
add
int3
inc
mov
mov
popf
pop
sub
adc
dec
sub
fdivs
shll
ret
leave
pcmpeqd
xor
lods
xor
adc
pop
hlt
out
out
stos
xor
shlb
inc
xchg
cli
xlat
fdivl
mov
into
sub
icebp
dec
push
xor
daa
loop
sbb
lea
dec
sub
xchg
or
xor
jp
je
pop
cmpsl
xor
ficoms
add
fldt
add
or
xor
movsl
loop
push
mov
adc
mov
jae
mov
and
push
sti
in
sbb
add
inc
xor
cld
into
rcll
or
xchg
imul
xor
lret
movsb
cwtl
call
sbb
popf
and
cmp
mov
outsl
fisttpl
inc
sub
insb
jle
repz
sti
jno
mov
cmc
and
mov
mov
jno
or
xor
popf
das
push
inc
push
jns
mov
int3
iret
adc
or
sub
fs
xor
and
fwait
xor
stos
mov
xor
pop
outsb
add
xor
pushf
mov
mov
sub
adc
imul
mov
push
mov
dec
mov
jg
xor
inc
fdivrl
xor
pop
inc
outsl
rolb
xor
sti
cld
jmp
ljmp
ret
mov
jns
mov
sar
adc
out
mov
cmp
cs
xor
das
sti
cmp
jns
fimuls
sub
lret
popf
mov
push
mov
mov
stos
sar
jb
inc
lcall
cs
xor
push
ja
pusha
ror
mov
lods
or
cmpsl
int3
push
adc
add
inc
xor
and
and
xor
jne
into
xchg
ljmp
mov
sub
mov
xor
ficomps
daa
xchg
push
xchg
lock
adc
mov
ljmp
pop
jbe
pop
mov
lods
mov
shrl
mov
cwtl
orb
popf
xor
xchg
xchg
jmp
lcall
lods
std
sti
rolb
in
xor
dec
hlt
push
mov
push
int
js
ret
xor
mov
xor
mov
mov
aam
cmc
xor
nop
cmp
shll
xor
add
sbb
xor
lods
mov
push
int3
mov
stos
mov
cmp
pop
arpl
mov
push
and
dec
mov
testl
lcall
xchg
xor
into
insl
push
pusha
sti
dec
inc
xor
ja
pop
stos
xchg
sbb
pop
mov
or
mul
ljmp
xchg
je
enter
lcall
aad
mov
popf
mov
call
in
je
sbb
lea
repz
pop
or
push
insb
adc
in
daa
or
xor
popa
jae
mov
adc
stos
es
stc
mov
or
mov
dec
dec
mov
shlb
dec
push
sbb
pop
xor
add
xor
pop
das
nop
mov
enter
pop
jp
lock
xor
and
pop
ret
negl
and
bound
shll
cltd
xor
xchg
mov
or
cmpsl
sbb
push
jns
pop
inc
and
jecxz
adc
mov
mov
pop
mov
mov
ret
loopne
in
and
or
add
mov
jge
pop
inc
out
pushl
sub
jns
popa
jne
adc
lret
je
dec
shll
cmp
rorl
pop
push
js
pop
sbb
xor
push
out
dec
in
scas
jl
sbb
adc
fisttpl
test
inc
mov
pop
enter
jg
xor
aaa
loope
sub
pop
aas
pop
push
mov
cmp
sti
pop
mov
clc
js
scas
test
jl
mov
dec
gs
xor
enter
xor
jbe
inc
int3
repz
stc
jns
push
jnp
lods
je
jp
push
rorb
jge
dec
pushf
js
aas
xchg
lea
icebp
sahf
scas
aaa
push
fnstsw
ds
jno
push
jp
pop
inc
sbb
xor
insl
pop
add
push
out
je
jp
les
into
ror
xchg
pop
pusha
pop
lahf
pop
movsl
mov
mov
add
jb
push
mov
push
les
xor
jg
testb
xchg
xor
fldcw
or
test
aad
arpl
mov
or
xchg
cli
mov
mov
xor
xorl
adc
fisttpl
sysenter
mov
xor
ret
or
and
hlt
cmp
xor
shrl
test
inc
inc
inc
je
in
ret
popa
cmp
xor
xorl
add
add
icebp
mov
pop
imul
jbe
cmp
push
pop
fwait
push
xor
int
xorl
sub
or
cmp
inc
adc
loop
pop
repnz
xor
inc
out
es
mov
cmp
jno
lahf
js
mov
inc
inc
push
xor
outsb
sbb
pop
cmp
jp
cmp
jmp
lret
hlt
jo
inc
mov
fsubrl
gs
sub
dec
mov
dec
inc
enter
xchg
cltd
mov
mov
jns
cmp
xor
idivl
push
push
aas
cmp
adc
xor
pop
imul
xor
sub
pop
xor
push
pop
or
and
xor
inc
push
loopne
inc
xchg
test
cmp
shrb
fldl
stos
in
mov
jns
cmpsb
and
lret
pop
sub
pop
jb
xlat
sbb
dec
sar
mov
mov
ficoml
xor
xor
call
sub
adc
in
cld
push
fstl
in
lcall
push
or
xor
xor
bnd
hlt
shlb
xchg
je
xlat
orl
push
cmc
imul
aam
adc
xchg
adc
adc
out
xor
mov
rol
movsb
dec
sub
or
sub
jbe
cmp
or
pop
xchg
shrb
daa
mov
ljmp
out
ficoml
aad
sub
or
cmp
and
std
mov
adc
push
xchg
and
xchg
jp
cltd
je
orb
mov
dec
daa
movsl
inc
pop
lods
je
ret
pop
push
sub
cmc
leave
adc
or
repz
daa
mov
movsb
out
pop
jae
out
xlat
sub
add
bound
imul
iret
sbb
lcall
mov
popa
push
ljmp
pop
mov
pop
test
adc
mov
inc
out
mov
xor
dec
xchg
out
mov
shll
mov
mov
push
push
lahf
push
aas
lahf
bound
scas
and
lret
addb
out
cmp
xchg
lret
or
cmp
or
xchg
or
lods
add
in
push
push
or
cmpsb
mov
outsb
mov
dec
push
popf
dec
xchg
test
jp
jns
outsl
fcmovb
cmp
ja
lock
insb
inc
in
or
and
jbe
add
xchg
jne
xor
sub
sub
add
or
mov
test
mov
lock
rcll
xchg
pop
stos
mov
and
cwtl
xchg
outsl
sub
inc
stos
sub
mov
leave
adc
sar
lcall
jp
stc
sarb
stos
jmp
xor
shrl
push
xchg
dec
sub
dec
mov
and
aam
les
adc
lods
fidivrs
add
mov
push
dec
sub
sub
jbe
and
sub
xchg
dec
mov
xchg
jle
movsb
sbb
cwtl
adc
ds
add
cmpsl
out
sub
stc
push
popf
adc
pop
cmp
and
pop
mov
add
sbb
push
xor
movsb
or
loope
aas
lret
or
adc
aam
js
mov
pop
fildl
lock
mov
lret
push
rorb
les
sbb
sub
shll
fs
pusha
loopne
ret
sub
int3
hlt
fwait
xchg
inc
test
push
and
bound
mov
jp
ret
cmp
out
adc
rcrb
dec
pop
mov
xchg
pop
adc
das
xor
scas
jp
add
nop
imull
dec
sub
fcmovu
or
movsb
mov
insb
loopne
jbe
jb
adc
dec
ret
fmuls
sbb
fsubrl
in
or
adc
lods
dec
or
cmp
pop
xchg
cli
into
xor
icebp
or
mov
jmp
hlt
mov
rcrl
icebp
push
push
sete
adc
out
lahf
int
ret
mov
pop
inc
sub
push
lock
push
push
inc
cmp
test
fcompl
dec
push
stos
xchg
mov
adc
xor
fnsave
test
push
leave
adc
out
fimuls
fldl
add
mov
add
clc
add
stos
mov
inc
mov
mov
fwait
cmp
int
nop
xchg
mov
outsb
jge
inc
jb
sub
xor
lods
leave
jbe
nop
inc
and
xor
bound
jae
pop
jo
xchg
mov
repz
sahf
dec
daa
jmp
dec
nop
jp
add
dec
inc
or
test
stos
out
mov
sub
dec
stos
adc
lret
lds
dec
cmp
iret
sub
cmp
add
jle
jp
sbb
dec
sub
push
pop
addb
imul
test
push
stc
jb
adc
lret
lret
dec
fstpl
jl
aas
out
sbb
sbb
mov
sub
enter
add
bound
jp
lret
adc
fwait
xchg
cmp
cmpl
sub
mov
adc
add
dec
push
cmp
dec
lods
push
je
in
jp
or
sbb
lods
subb
lods
and
imul
xchg
xor
push
out
inc
call
fs
mov
cmc
push
les
jg
jp
and
out
mov
sub
lods
lret
call
sti
add
inc
scas
add
and
mov
or
iret
jmp
mov
dec
xchg
add
jecxz
pop
add
divb
stos
sub
sub
lret
repz
stos
loop
stc
insb
mov
xor
int3
ftst
in
ja
divl
xchg
jae
mov
jnp
adc
add
adc
ds
sbb
das
xor
js
fisubrs
loope
mov
mov
or
sub
loop
dec
push
push
mov
mov
jb
mov
or
in
mov
or
mov
mov
add
sub
ds
mov
stos
mov
out
pop
push
sub
es
test
adc
je
or
sub
xor
repz
inc
fldenv
mov
and
shr
sub
scas
bound
mov
xor
test
xor
adc
cmp
add
push
fisttpl
pop
in
sub
test
xor
aaa
sahf
in
cmpsb
shrb
pop
arpl
mov
pop
lock
shl
mov
pop
icebp
fisttpll
int
add
subl
cs
lcall
lea
call
fwait
insb
pop
inc
ret
or
jno
lods
or
inc
hlt
and
sub
cli
add
fnstcw
jmp
loop
adc
lret
push
push
mov
repnz
mov
xor
loop
xchg
sarl
push
testb
stc
jp
sub
jg
popf
xor
mov
loope
pop
mov
fs
mov
mov
pop
pop
mov
sub
ret
adc
je
imul
jnp
mov
repz
sub
jp
mov
mov
test
outsl
pushf
xchg
or
addb
movl
and
adc
testb
sti
xchg
sub
out
pop
mov
sub
push
add
daa
lds
adc
mov
sbb
les
fdivrl
adc
lret
push
test
fmul
lock
push
sub
lods
lock
in
clc
hlt
jo
rorl
bound
rcr
jno
dec
jns
in
adc
arpl
lods
ljmp
inc
mov
shr
xchg
mov
jne
push
or
movsl
stc
insb
and
add
xor
fdivs
inc
arpl
mov
dec
push
stos
je
push
stc
add
je
or
enter
in
xor
adc
dec
sbb
inc
push
fldcw
out
aam
scas
and
sahf
mov
jp
scas
out
push
cmp
or
mov
mov
and
jmp
jo
add
lds
gs
ja
je
cmpsl
iret
xor
test
add
call
or
cwtl
out
xchg
jae
cmpsl
jne
insb
cmp
sets
int3
fsubrl
or
push
cld
cmp
push
mov
xchg
jecxz
in
test
out
ret
adc
pop
nop
or
out
inc
sahf
daa
shr
cs
insl
mov
ret
sbb
mov
or
sub
xchg
mov
test
jne
inc
adc
pop
xchg
adc
out
and
cmc
aas
mov
pop
xchg
jb
mov
nop
test
push
stc
cmp
or
int
mov
or
mov
repnz
mov
sbb
mov
fisubrl
loopne
cmpsb
out
xor
sub
int
mov
call
jge
dec
jnp
and
xchg
jmp
adc
sub
cwtl
adc
roll
mov
addl
repnz
out
lods
ret
mov
hlt
rcll
lock
add
xor
nop
subl
jl
idivl
mov
mov
add
sbb
adc
mov
test
push
dec
inc
cmp
ja
subb
mov
imull
cmp
pop
movsl
sub
xor
pop
imul
pop
ds
push
lea
loop
lret
inc
jle
sub
push
adc
mov
xchg
xchg
inc
lahf
icebp
lods
mov
ss
xor
call
mov
sbb
mov
push
jp
xlat
enter
lods
dec
or
sbbl
test
adc
sub
xor
pop
sbb
fisubrs
jne
push
adc
xor
sub
xchg
bound
sub
pop
mov
jne
mov
xchg
xor
inc
jp
sub
mov
int
lock
xchg
scas
out
jae
dec
js
sub
sub
mov
fimull
nop
jp
rcrl
jl
lcall
push
inc
aaa
mov
xchg
pop
push
xchg
pop
push
lock
enter
es
popa
movsl
pop
test
jnp
daa
cmp
test
shrb
ja
dec
arpl
leave
xchg
xor
and
scas
mov
mov
out
or
cli
lret
sbb
cmc
das
push
mov
push
push
or
xchg
inc
ja
int3
jnp
ret
jmp
insb
mov
mov
cs
mov
sbb
add
and
ds
insb
inc
xchg
push
xor
in
cmpsl
call
mov
push
inc
in
pushf
ret
lret
std
sbb
shll
xor
cmp
in
psubsb
fs
xor
jg
push
jnp
pop
xchg
rcll
xor
cmp
cmp
insl
test
fs
xor
xchg
ja
loope
lea
xor
and
mov
fs
push
inc
stc
dec
je
mov
or
insl
js
test
rclw
xor
ljmp
popl
aam
and
mov
mov
push
sahf
arpl
call
std
xchg
test
cmpb
hlt
iret
pop
inc
lret
xor
orl
xor
jns
lcall
pop
adc
out
xor
xor
sbb
xor
les
stos
pop
sti
cmp
daa
inc
pop
add
xchg
inc
sub
ret
ljmp
lea
fdiv
jmp
jle
fidivl
mov
imul
outsb
push
xor
jg
push
add
pushf
mov
mov
mov
xor
inc
push
test
test
and
xor
pop
sub
cli
or
dec
adc
mov
push
repnz
xor
adc
cmp
xor
mov
iret
mov
repnz
mov
loopne
inc
mov
lahf
dec
inc
cmp
stos
xor
cmp
popf
jne
mov
add
jle
je
adc
pop
cmpb
ss
movsb
pop
sbb
ret
imul
inc
fldenv
mov
mov
sbb
js
push
add
lret
mov
adc
xchg
sbbl
jle
loopne
addr16
int3
in
pop
fcmovnu
aad
mov
sbb
fadds
ret
test
repz
jge
scas
std
les
ret
inc
test
or
dec
xlat
push
push
movsb
hlt
adc
test
and
jnp
imul
and
jp
in
or
mov
cmpsl
jmp
repnz
out
call
pop
test
hlt
push
mov
in
stos
cmp
inc
sub
xorl
xchg
sbb
sub
sub
mov
sub
aaa
mov
nop
sub
dec
or
cmp
nop
or
jne
push
rcll
sub
mov
push
bound
mov
pop
lds
mov
jl
adc
outsl
popf
xorl
cmp
fmull
test
xor
xchg
mov
jb
and
leave
and
mov
or
xor
add
xorl
pop
movsb
out
lahf
arpl
cmp
into
lods
insl
icebp
ficomps
js
push
scas
push
sahf
mov
or
jo
adc
xor
and
das
je
daa
add
sub
push
roll
sub
adc
mov
pop
test
jl
das
fwait
test
mov
adc
je
and
inc
je
fbstp
xor
jno
mov
lahf
sar
sti
sub
ss
add
push
int
lret
inc
fnsave
dec
hlt
push
jp
and
outsb
mov
aaa
in
stos
dec
ret
mov
in
and
lock
adc
or
jl
xchg
push
sbb
add
dec
sub
jl
add
fisttpll
loope
frstor
inc
test
sub
mov
in
lahf
adc
insl
loop
popf
bound
push
clc
frstor
dec
ret
jb
add
xchg
das
in
or
into
cld
lods
cmc
ret
pop
imul
sub
lret
clc
sbb
mov
cs
push
loopne
pop
mov
das
lret
xorb
scas
sub
aaa
test
jle
jle
mov
rorb
cmpsb
popf
push
in
mov
adc
inc
sub
fwait
mov
pop
sbb
xor
jbe
or
stos
rorl
in
sub
ja
in
xor
aam
out
jp
testl
lds
push
daa
xorl
out
or
fstpl
rcrb
cmp
push
sbb
dec
add
push
fmull
andl
and
daa
in
insl
adc
jmp
aas
lret
mov
lods
adc
test
inc
xchg
mov
daa
repnz
les
test
iret
mov
sbb
popf
push
outsb
push
push
fstpt
imul
fs
adc
push
ss
loope
adc
in
xor
mov
cld
aam
pop
shlb
inc
add
je
pop
mov
lahf
mov
pop
out
daa
or
cmp
push
push
and
push
add
sbb
mov
jecxz
leave
call
dec
pop
addb
outsb
orb
pop
sbb
inc
aaa
ret
mov
aam
repz
adc
fwait
dec
std
mov
mulps
hlt
cmp
xlat
adc
xor
aam
add
bound
pop
cmp
repnz
or
movsl
pop
inc
add
xor
add
adc
and
popa
inc
or
out
ja
stc
xchg
mov
lret
repz
add
les
popf
or
jo
rcll
pop
insl
repnz
scas
stos
push
mov
xor
aad
jne
dec
shll
mov
mov
pop
rcll
mov
sbb
cwtl
mov
inc
jecxz
bound
lret
xlat
jns
stos
add
daa
adc
repz
icebp
bound
test
das
sub
dec
test
in
inc
xchg
jmp
adc
sub
adc
in
data16
popf
inc
sub
mov
aam
xor
push
hlt
mov
aam
jecxz
adc
movsl
cmp
xchg
negb
rcrb
dec
inc
xchg
adc
ss
or
leave
pop
fstl
push
test
repnz
pop
sbbl
aas
nop
adc
push
add
mov
adc
out
cmp
dec
in
adc
in
xor
dec
mov
pop
jp
mov
or
aaa
inc
mov
int
call
fldl
dec
adc
lahf
and
mov
and
aad
mov
push
dec
xchg
inc
lea
aad
icebp
sub
ss
sub
ss
mov
test
xor
jbe
xchg
faddl
repz
fsubrl
jns
in
push
pusha
and
lea
test
push
or
adc
mov
enter
mov
pop
or
xorl
pop
cmpsb
mov
push
jae
mov
fistpl
cmc
and
insl
repz
adc
push
cs
in
pop
cld
mov
mov
fmull
sub
cmp
loop
jp
in
and
call
stos
lcall
in
add
popa
sub
outsl
adc
pop
shlb
lods
jmp
aad
adc
jl
hlt
sub
jl
dec
stos
ror
sub
jne
incl
or
xchg
popf
inc
mov
xchg
cmp
mov
adc
pop
jne
loopne
rol
xchg
adc
add
inc
movsb
jo
jge
push
out
push
mov
xor
and
sub
mov
ljmp
push
setge
call
popf
and
test
daa
out
out
pop
lods
jl
arpl
sbb
dec
js
sub
push
jb
xchg
or
mov
ds
or
jns
mov
and
aad
hlt
or
in
pop
out
dec
pop
iret
sub
insb
add
mov
arpl
aad
xor
jmp
adc
out
jecxz
test
lret
cmp
add
cmpsl
sbb
test
xchg
jp
xchg
jmp
lahf
dec
clc
loope
add
clc
inc
sbb
je
mov
mov
adc
xchg
pop
inc
jne
pushf
cmpb
jae
sbb
and
rcrb
in
fldcw
jns
es
jbe
repz
jns
fs
aam
test
in
or
loop
nop
xchg
mov
jl
mov
xor
xchg
adc
mov
and
mov
push
adc
pop
jae
shrb
int3
lahf
mov
and
mov
jp
fdivl
hlt
push
xchg
jae
or
inc
and
loope
sbb
adc
lods
sbb
fcompl
xchg
mov
or
out
stos
sbb
mov
clc
ret
inc
aad
loop
into
jno
hlt
push
sub
xlat
arpl
call
mov
out
sbb
lods
push
mov
shl
pop
cmpsl
enter
ret
fucomp
sub
sahf
inc
cmc
imul
aaa
cmpsl
test
out
dec
pop
xchg
mov
orl
xchg
fwait
cltd
iret
mulb
or
or
popf
jp
jle
push
rcl
ret
mov
loop
add
call
xorb
xchg
add
popa
inc
shll
cmp
add
pop
test
add
enter
xchg
xchg
inc
sub
ljmp
pop
mov
lods
cld
lret
push
xchg
fdivl
mov
sub
aaa
mov
lods
test
mov
xchg
je
lret
pop
test
das
repz
lods
leave
or
jecxz
adc
shl
std
sub
cmpsb
or
daa
lock
lods
sarb
lea
test
and
in
push
call
add
xchg
mov
add
ret
push
shlb
mov
dec
or
call
pusha
pop
imul
xchg
test
in
test
jl
push
push
push
inc
adc
push
hlt
jns
fisubl
push
xor
or
lods
pop
lcall
mov
sbb
test
mov
cld
rcrl
dec
mov
add
or
icebp
sarb
inc
out
xor
push
jmp
insb
das
test
jecxz
or
sub
mov
aas
and
or
inc
ds
dec
xchg
addr16
in
ss
adc
hlt
xchg
dec
jo
out
add
inc
call
shll
ret
and
rclb
jne
nop
addb
cmp
jae
mov
jge
int3
enter
mov
ss
xor
sub
inc
xchg
xchg
sub
popf
push
sbb
lret
sbb
mov
scas
jne
test
es
or
mov
push
in
movsl
add
or
pop
fwait
nop
push
divb
gs
xchg
test
xor
sbb
leave
xlat
push
fidivrl
xor
jecxz
sahf
filds
push
and
mov
inc
stos
inc
sarb
jae
jbe
add
push
sbb
lock
mov
lahf
int3
jbe
dec
push
sub
neg
fs
cmp
in
xor
out
mov
cmp
inc
mov
fimuls
adc
xor
mov
movsl
shlb
cmp
sahf
nop
or
mov
fsubrl
jecxz
cmp
inc
mov
lret
mov
mov
push
dec
mov
movb
mov
in
iret
and
adc
inc
aad
cmp
call
inc
jo
in
stos
ret
push
mov
pop
scas
lret
xchg
scas
mov
adc
sbb
push
lret
loopne
leave
jns
lods
cmp
in
lcall
jae
cmp
test
sub
movsl
mov
or
and
lock
push
sub
adc
clc
cli
popa
rcl
xchg
add
jmp
mov
dec
lret
push
aaa
add
mov
xchg
sub
repnz
call
push
test
mov
bound
frstor
imul
cmc
and
xlat
lahf
hlt
ret
add
lret
push
pop
mov
lahf
fsts
cmpsb
popa
mov
nop
xchg
lret
sub
adc
adc
into
lods
fnstenv
or
sbb
ss
sub
and
pusha
mov
scas
mull
sbb
cmp
jmp
xchg
inc
cmpsl
mov
mov
add
lahf
stos
pop
push
cmpsl
mov
inc
movsl
jb
or
lret
jbe
jne
divl
out
cld
mov
lods
sub
ret
sbb
arpl
dec
dec
cwtl
cmp
int3
adc
and
mov
es
imul
lahf
jo
push
and
and
jge
loop
ja
les
cwtl
filds
sbb
sub
or
stos
push
xchg
mov
mov
xor
ljmp
ret
lods
jg
aaa
mov
rcl
xchg
in
sub
and
ret
es
dec
adc
jg
xchg
pop
mov
inc
mov
jbe
out
fsubr
ss
test
mov
dec
push
cmp
adc
sub
in
xchg
push
sub
rclb
outsb
jl
mov
pop
jns
lahf
int3
xor
faddl
les
mov
cmpsb
push
push
test
adc
loopne
add
or
push
mov
js
pop
stc
mov
cltd
mov
mov
and
int3
xchg
dec
sub
mov
imul
repnz
outsb
jno
sub
loop
xchg
cltd
cmp
out
rolb
clc
insb
sahf
mov
pop
gs
sub
insb
adc
jp
js
add
cwtl
jbe
adc
imul
push
adc
fsubr
fcos
outsb
in
mov
mov
lret
fisttpl
out
cs
vhsubpd
mov
mov
test
ss
jmp
sbb
rolb
or
sub
jg
adc
adc
subl
and
cmp
pop
addr16
sahf
lret
fptan
jb
jg
clc
mov
dec
hlt
lds
call
mov
call
mov
ljmp
bound
leave
imul
cwtl
cld
test
pop
pop
jae
aam
les
ds
in
pop
pop
adc
jo
mov
pop
add
jg
subl
sub
je
adc
mov
sub
push
xor
mov
out
lea
filds
shrl
jecxz
mov
jl
stos
add
cwtl
sbb
repnz
mov
ljmp
subl
fisubs
cmp
mull
lods
xchg
hlt
jbe
in
push
test
or
ja
sbb
xor
sub
in
or
imul
je
lods
xor
in
or
sub
add
enter
push
pop
push
data16
loopne
mov
or
xchg
aaa
scas
out
sbb
push
or
xor
je
adc
adc
fs
or
ret
pop
add
jp
ret
mov
sbb
int3
pop
push
hlt
loop
addr16
lods
test
push
insb
adc
pop
sub
jae
sub
jb
xlat
push
stos
push
ljmp
xor
test
jne
cmp
sub
pop
pop
aam
adc
js
push
adc
int3
xchg
pop
jno
mov
loop
xor
pushf
fldl
mov
out
sub
xchg
mov
lods
cmpsb
int3
jne
mov
mov
out
faddl
jbe
rorl
adc
pop
xchg
and
into
pushf
jge
pop
popa
push
outsl
add
xchg
es
popf
into
cmp
pusha
xor
fisubs
cltd
cmc
mov
sub
clc
adc
sbb
insl
and
inc
push
pop
pop
out
sub
xor
lods
pop
arpl
aad
jp
jle
and
lret
jmp
int3
jnp
sbb
in
enter
or
mov
ljmp
adc
ds
adc
mov
push
test
pop
adc
test
lea
movsb
jge
cmp
lcall
lea
or
lods
jns
fcoml
ja
adc
lea
outsb
jbe
xchg
inc
or
aad
mov
adc
sub
jl
inc
sbb
leave
cld
adc
cmp
in
in
es
and
les
outsb
mov
push
lods
iret
dec
out
test
jp
aaa
and
icebp
sub
mov
adc
lahf
test
adc
fisubrl
sbb
sub
dec
fdiv
fcmovnb
fidivs
or
pop
add
xor
or
fbld
lds
std
pop
mov
adc
xlat
jle
pop
lods
mov
cld
sub
cmp
loop
cmpl
test
or
sbb
mov
and
adc
xor
dec
cmp
mov
fcom
push
orb
adc
jns
add
hlt
in
mov
mov
xchg
ficoms
les
adc
stos
mov
jg
in
fs
sub
leave
es
shl
dec
imulb
rcr
test
fs
shrd
push
test
and
push
sbb
in
xchg
mov
les
inc
and
sub
lods
jae
xchg
sti
addb
inc
cmp
cmp
xor
mov
sub
imul
std
repnz
pop
fimuls
pop
or
xchg
outsl
push
cli
rcll
aas
push
and
ret
daa
ss
inc
lods
mov
lret
mov
test
pop
cwtl
jge
inc
pop
sub
pop
inc
enter
ljmp
sbb
xor
aaa
sub
add
mov
out
out
mov
int3
outsb
xchg
sub
mov
lret
dec
int3
adc
sub
mov
cmp
jmp
add
inc
call
in
jl
stos
aam
jmp
lcall
cmp
mov
dec
in
adc
test
push
pusha
repnz
adcb
adc
sub
lods
test
test
add
shrl
ret
stos
unpckhps
rolb
mov
mov
cmp
sub
lret
and
scas
pop
jl
shrl
addl
aam
rorb
or
inc
lret
lock
aad
pusha
enter
push
sub
mov
sbbb
cmp
inc
push
in
pop
fldenv
iret
sub
and
xor
bound
in
jmp
in
cltd
int
bound
pop
gs
jmp
in
xchg
inc
adc
enter
jecxz
in
pop
lock
sub
lret
cmpb
out
imul
les
mov
jl
xchg
addr16
leave
xchg
fisubrl
fidivs
insl
std
bnd
inc
add
pop
dec
andl
cmc
or
pusha
xor
xor
ja
xor
je
hlt
lods
push
push
jae
and
loopne
mov
adc
jecxz,pn
mov
fcomps
mov
push
lahf
ja
adc
push
add
cwtl
push
popa
adcb
fsubrs
dec
or
sub
fcmovbe
mov
push
and
dec
cwtl
fs
cltd
jae
sbb
and
jecxz
push
mov
cli
aaa
movsb
inc
xchg
pop
daa
nop
sub
xorl
fidivrs
fisttpl
mov
in
and
push
out
mov
jns
fcmovne
mov
lea
jno
test
insl
in
andb
mov
push
mov
hlt
add
call
and
decl
jae
outsl
ret
mov
std
repz
xor
jnp
addr16
pop
sti
sub
aam
lods
lods
jae
call
mov
movsl
mov
data16
repz
lret
lods
sub
adcl
and
std
subb
mov
pop
in
pop
jle
nop
out
jns
cmpl
loop
or
sahf
fldenv
pop
int3
mov
leave
dec
out
aam
mov
faddp
adc
add
xor
test
add
add
fs
lret
mov
mov
jp
iret
int
xchg
bnd
xor
adcb
xor
push
jmp
jl
add
dec
lahf
dec
sub
lahf
fcoms
popf
cmp
popf
mov
add
cmp
or
sarb
hlt
sub
js
push
out
cmp
add
jmp
inc
sbb
fidivs
adc
adc
dec
jns
hlt
stos
sub
xchg
add
loop
in
adc
mov
in
ret
dec
dec
aaa
repz
cmc
cmp
inc
in
ljmp
push
xchg
je
mov
pushf
test
sub
adc
stos
and
add
sahf
push
int3
sti
mov
xchg
inc
jno
pop
sub
jecxz
adc
sbb
int3
int
sub
nop
jne
in
sub
xchg
mov
mov
inc
adc
ret
lret
sub
pop
movsb
mov
and
and
cltd
das
sbb
fldl
lods
call
adc
xlat
and
push
rcr
inc
movsl
imul
mov
xchg
sbb
push
xor
fnstsw
repz
sbb
pop
lods
lret
lret
push
data16
cwtl
push
cmp
movsb
sahf
xor
enter
and
mov
outsl
scas
mov
add
mov
mov
xlat
call
fldl
dec
push
sub
dec
clc
inc
add
repnz
sbb
jnp
mov
fcmovnb
adc
push
jns
mov
loope
jp
aaa
sub
fldl
jne
adc
xchg
or
loopne
lds
push
or
add
pushf
fdivrl
out
xchg
xor
cs
push
out
jmp
mov
repnz
xchg
aas
repz
je
sub
cs
dec
sub
inc
lret
jne
test
js
mov
aad
imulb
sub
and
jne
outsb
cmp
popa
int
xchg
cmp
inc
lods
mov
dec
mov
adc
cs
sbb
ret
mov
lret
aaa
xor
leave
adc
mov
call
jo
add
pop
mov
push
and
cs
je
aad
stos
push
pop
ljmp
stc
jl
pushf
leave
add
sbb
sub
mov
pop
cmp
inc
mov
test
aad
divb
test
fcompl
jmp
jo
mov
dec
add
and
inc
sub
inc
adc
push
inc
out
mov
test
out
mov
dec
pop
jne
jecxz
rclb
jno
or
mov
add
xchg
pop
mov
fnstsw
iret
mov
mov
mov
dec
xchg
fisubl
sub
popa
aaa
addr16
jmp
lret
inc
cmpsb
cs
loop
aas
mov
mov
xchg
cmp
jmp
sarb
jmp
jns
push
lods
mov
or
je
jg
lods
hlt
in
sub
dec
aaa
les
or
mov
adc
ds
mov
sub
lea
test
cli
xchg
sub
cmc
inc
jl
mulb
jp
mov
mov
push
fndisi(8087
sbb
fwait
shl
add
mov
push
jne
mov
das
mov
ficomps
sub
sbb
sbb
cmp
scas
test
sti
and
cs
fldt
push
xchg
lcall
rcrl
popf
sbb
in
inc
sub
cld
cmp
pop
push
adc
leave
inc
xchg
ret
pop
or
push
in
movsb
js
cmp
out
int
adc
sbb
jnp
or
out
test
test
mov
jl
jecxz
repz
cld
jne
ficoms
insl
and
mov
add
lock
daa
std
adc
popf
cmp
js
cwtl
imul
popa
mov
mov
aaa
daa
out
cltd
jmp
adc
jae
push
xor
inc
aam
and
push
or
mov
or
icebp
test
imul
sbb
lahf
je
cmc
mov
adc
pop
xor
mov
aaa
mov
xchg
jns
shl
popa
push
out
leave
ss
mov
in
mov
mov
add
or
xchg
push
outsb
dec
frstor
ljmp
adc
test
xchg
int3
sbb
sbb
in
nop
insl
enter
je
mov
or
push
test
or
inc
mov
add
and
pop
jbe
test
pop
cmp
pop
add
cwtl
push
shlb
dec
xor
xchg
jns
call
in
mov
dec
stos
mov
iret
mov
inc
xor
jno
sahf
sub
pusha
mov
ror
inc
es
dec
fmul
cwtl
mov
lret
nop
push
popf
popf
les
or
pop
mov
fisubrs
or
popf
xor
jnp
push
test
ret
mov
add
inc
pop
addr16
pop
leave
pop
cs
mov
aas
add
sti
leave
dec
jp
and
aam
sub
cwtl
mov
test
adc
mov
pop
daa
adc
sbb
fs
push
cmp
sub
scas
stos
shrd
mov
mov
xor
xchg
imul
jns
aam
sub
ret
cmp
push
enter
sbb
jmp
mov
mov
mov
repz
call
jb
fs
call
stos
dec
ss
arpl
hlt
or
dec
pop
fstpt
cmpb
or
gs
mov
lods
cmp
push
cmp
scas
pinsrw
sub
in
mov
sbb
xor
push
and
jbe
jp
jno
jmp
adc
lret
xchg
or
loopne
jp
dec
mov
xchg
mov
insl
cli
and
data16
dec
cwtl
movsb
das
sub
scas
jne
push
xor
insl
dec
push
call
jp
pusha
cs
repnz
stos
and
jb
mov
hlt
jecxz
stos
ret
xchg
and
or
shrl
mov
lea
xchg
cmp
adc
cmp
repz
sub
stos
adc
mov
call
inc
xchg
mov
dec
cmp
jg
xor
lods
push
lds
sarl
jb
hlt
ljmp
push
lods
les
daa
add
xchg
in
jb
iret
push
repz
and
jnp
hlt
mov
pop
dec
pushf
fisttpll
inc
or
or
pop
iret
push
add
test
push
pushw
mov
outsl
adc
dec
mov
out
cmp
daa
ss
or
mov
or
lcall
pop
or
xchg
sub
dec
fcoms
push
popf
gs
xchg
and
es
mov
push
stos
jae
stos
addr16
ja
adcb
sub
pushl
repnz
shll
incl
sbb
mov
inc
sub
lret
adc
rcll
shlb
and
xchg
outsb
js
mov
aaa
fldenv
fdivrs
dec
sub
ljmp
sarb
lea
test
sub
iret
jge
cmpl
add
dec
rcr
sub
adc
adc
and
inc
xchg
fdivl
mov
in
movsl
rcll
sub
imul
xchg
in
dec
xor
cmp
mov
inc
ljmp
nop
divb
rol
addb
pop
test
cmpsb
adc
sub
xchg
aam
mov
das
out
aad
push
or
ss
mov
sub
movsl
shrb
roll
inc
test
jno,pt
jmp
xor
xchg
push
xlat
mov
es
cmpl
mov
push
mov
mov
in
cmp
inc
fstcw
enter
push
adc
or
fstps
xor
sahf
out
xor
mov
cltd
fistpll
adc
popa
jg
daa
imul
mov
sub
fwait
stos
cmp
and
mov
xchg
or
push
repz
aas
fnsave
fistpl
call
jno
outsb
iret
clc
dec
pop
in
push
sub
aaa
jns
adc
cmp
movsb
adc
test
in
shl
orl
xchg
stos
aam
nop
mov
inc
lahf
leave
icebp
and
mov
lods
push
and
in
cmc
vandnps
and
or
sbb
cli
xor
lods
insl
push
fstpt
mov
cmp
adc
dec
inc
jp
mov
enter
movsl
mov
mov
pushf
mov
lret
and
xchg
adc
shlb
add
or
push
fwait
test
mov
cmc
and
in
mov
lods
sub
shlb
pop
cmp
mov
int
stos
xlat
adc
in
cmp
lcall
mov
enter
pop
sbb
dec
cmp
in
enter
es
sbb
sub
ja
pop
mov
xchg
jbe
push
int
sbb
add
test
lea
sub
or
sbb
lcall
mov
rcrl
sbb
mov
mov
push
push
sbb
mov
push
jae
sti
push
lock
or
push
nop
or
ret
xlat
add
pop
mov
mov
or
mov
dec
pop
in
sti
mov
sub
aam
mov
int3
es
jle
jg
repnz
inc
imul
cltd
inc
mov
cmp
adc
je
mov
cmpsb
mov
stc
insl
in
repnz
iret
mov
adc
ljmp
mov
cmc
add
call
adcb
jae
adc
sub
aam
addr16
xor
jl
sub
movsb
loopne
or
cld
lock
push
and
jp
and
int
daa
xor
and
jle
push
imul
adc
mov
icebp
sbb
pop
pop
cs
or
loop
inc
test
cld
popl
xchg
ds
dec
out
mov
mov
mov
sbb
jnp
leave
adc
ljmp
pushl
ljmp
icebp
clc
push
cltd
push
movsb
subb
aas
xor
enter
test
inc
fmul
or
test
andl
aaa
dec
dec
ja
adc
add
jno
jle
out
pop
enter
mov
rcrl
imul
push
lret
mov
jns
mov
push
mov
fidivrs
shlb
ja
add
mov
fst
dec
dec
add
test
pop
dec
jmp
in
sub
mov
push
lahf
inc
filds
outsl
addr16
aad
add
mov
fldl
push
xor
call
and
cmp
adc
mov
aaa
sub
into
pusha
fucomp
pop
add
push
ljmp
arpl
xor
adc
lret
xor
mov
pop
cwtl
pop
and
hlt
adc
data16
out
cmp
adc
ret
jl
call
aad
imul
sbb
into
sub
icebp
movsl
xlat
add
push
dec
out
mov
add
inc
mov
push
sub
imul
pushf
mov
add
lods
ds
andl
clc
or
pop
dec
sub
or
lds
stos
or
hlt
xor
mov
out
cmp
in
push
test
pop
sub
pop
sub
pushf
jp
icebp
and
cmp
cmpl
cli
movsl
jo
mov
xchg
fists
mov
mov
xor
aas
and
call
dec
gs
ds
or
loop
mov
or
aam
lock
pop
push
iret
push
add
imul
jle
fcompl
imul
jle
and
or
push
cmp
shlb
mov
jbe
movsl
sbb
xor
add
enter
push
push
sub
and
push
call
icebp
jnp
mov
sbb
ret
into
call
xlat
dec
rolb
mov
stc
adc
lods
xorb
mov
repnz
add
dec
dec
and
call
out
mov
adc
dec
adc
mov
mov
nop
outsb
jne
mov
adc
sti
adc
jbe
inc
aam
ljmp
int3
nop
xor
int3
gs
scas
adc
jle
or
inc
insl
repnz
test
insb
adc
sbbl
shrb
fwait
add
pushl
or
call
loopne
aam
mov
pop
jge
mov
mov
ja
out
shrb
sub
lret
sbb
sub
pop
call
testb
jle
leave
in
rolb
xchg
scas
into
jecxz
out
enter
sub
rorl
icebp
push
adcl
push
stos
js
in
xchg
aam
and
out
fnstsw
add
shl
xlat
rclb
and
stos
mov
mov
sbb
sub
mov
push
xchg
jb
jmp
pusha
xchg
or
gs
imul
pop
hlt
xchg
vhaddpd
inc
mov
subb
test
les
sbb
lea
ret
mov
stos
adc
sub
lahf
sti
inc
lret
pushf
inc
mov
mov
in
js
mov
mov
push
dec
ret
xchg
hlt
les
xchg
sbb
sub
push
repnz
add
ss
xor
xor
or
sub
enter
hlt
mov
jo
and
add
pop
xchg
mov
dec
mov
add
sub
cmp
xor
push
jp
imul
test
call
js
push
pop
xchg
mov
cmp
pop
jne
mov
bound
out
gs
call
or
insl
in
je
jae
je
imul
repz
int3
mov
lods
cmpsb
xchg
jno
jnp
adc
push
pusha
cmp
sub
push
fldcw
or
cld
lods
mov
pop
or
sbb
aaa
fwait
rclb
mov
adc
iret
subl
out
dec
jmp
lahf
or
dec
jmp
ds
pushf
bound
mov
rcr
js
popf
jae
pop
in
and
mov
or
jge
lods
xor
push
push
mov
and
sar
in
mov
inc
xlat
mov
xchg
lret
movsl
push
xchg
add
pop
hlt
pusha
outsl
sbb
scas
adc
frstor
hlt
mov
xchg
mov
nop
add
push
movb
shll
push
ror
test
sahf
inc
rclb
ss
xchg
push
push
fs
lods
jle
insb
int3
cmp
pop
iret
or
stc
loopne
adc
jns
js
dec
mov
sahf
pop
sub
leave
js
xchg
pop
push
sbb
dec
orl
hlt
out
cmc
push
fidivrl
popf
adc
add
sbb
inc
mov
add
imul
xchg
mov
fdivs
out
loope
gs
or
mov
inc
aad
lods
pop
mulb
xlat
and
xor
cltd
rcrl
sub
xchg
pop
mov
out
lods
daa
xchg
xchg
or
scas
push
outsl
aas
mov
test
push
flds
inc
ss
sarl
jb
xor
xchg
mov
aaa
pop
cmp
aam
bound
mov
xchg
loop
xor
or
clc
jl
repz
or
adc
jno
out
loopne
js
jl
xchg
cli
sub
dec
push
imul
pop
inc
jbe
dec
into
pop
test
popa
aad
fcompl
daa
roll
fisttpll
jg
inc
lret
ret
xor
dec
sbb
sub
xor
pop
rclb
sahf
pop
repz
inc
or
mov
jo
iret
hlt
mov
jl,pt
sub
data16
mov
pop
call
test
nop
ja
inc
push
sub
test
loop
mov
lcall
pop
add
cmp
sub
das
sbb
or
pop
jle
add
sub
out
jmp
call
fldt
aam
into
setl
mov
aam
sub
iret
or
test
sub
je
add
xchg
mov
popf
out
jle
outsb
push
or
imul
pop
lret
mov
mov
lds
pop
sbb
add
jl
call
in
cmp
maxps
inc
sbb
lret
sub
loopne
repz
sub
add
lahf
xorl
popa
out
dec
add
or
inc
mov
outsl
fistps
nop
sub
push
jmp
sub
and
mov
add
mov
xor
movsl
mov
pushf
loope
pop
sar
pop
addb
sub
adc
testl
push
add
xchg
sbb
lock
dec
cwtl
fnstcw
orl
pop
call
fcoms
out
fstps
or
scas
xlat
mov
in
mov
mov
add
inc
aam
shrl
push
popl
xor
push
aam
xchg
cmp
cbtw
sub
or
pusha
cmp
mov
jnp
or
sub
and
sub
shr
mov
jecxz
in
push
and
jo
xor
test
out
enter
rclb
add
imul
pushf
ja
dec
in
int3
cmp
in
ja
fbstp
andl
sub
add
out
mov
cmp
int
ja
in
enter
lret
mov
hlt
mov
rcrb
mov
mov
nop
inc
mov
into
dec
mov
or
mov
int3
popf
inc
mov
aad
push
xchg
inc
push
mov
mov
inc
stos
mov
pop
stos
mov
push
add
xchg
inc
icebp
adc
out
fucomip
mov
xrelease
mov
mov
rolb
and
or
js
out
jbe
sub
xor
adc
pusha
cmc
jne
aas
and
sbb
adc
push
cmp
or
adc
loopne
in
jecxz
out
mov
hlt
jle
sub
scas
mov
pop
lcall
movsb
inc
imul
sahf
xchg
xchg
pushf
aad
xorb
push
lret
outsl
fimull
jl
sub
xchg
les
iret
xor
cmp
add
pop
cmp
stc
out
dec
mov
jg
xor
mov
xor
add
inc
adc
mov
sub
shll
sahf
ljmp
xorl
fstpl
pop
jmp
xchg
xchg
dec
sti
nop
cltd
jns
mov
ds
jae
add
cmp
push
das
out
mov
adc
lahf
orl
imul
add
mov
inc
out
and
js
mov
pop
dec
sahf
push
popa
push
repz
mov
ja
loopne
push
inc
jbe
shlb
and
stc
fld
and
mov
sub
dec
arpl
lock
and
mov
pop
mov
adc
xchg
or
and
mov
cld
adc
comiss
push
bound
inc
adc
cmp
fstpl
add
sub
hlt
mov
in
cmp
shlb
push
and
jne
inc
out
push
dec
xchg
dec
sbb
enter
push
fcmovnb
xlat
sbb
lds
stos
push
in
mov
cmpsb
adc
movsl
aam
mov
and
jnp
test
js
xlat
test
cmp
fisubrl
iret
int
sub
dec
jmp
xor
cwtl
push
addl
inc
and
mov
test
popf
scas
pop
out
mov
scas
mov
in
add
pop
and
xchg
push
xor
or
stos
fstl
mov
gs
notl
sbb
mov
dec
loope
dec
jl
add
adc
xchg
adc
inc
add
sbb
arpl
repz
out
stos
test
or
xchg
mov
mov
aas
push
dec
pop
push
lret
xchg
cmp
filds
add
mov
sub
mov
jo
dec
pop
mov
xor
es
add
xchg
mov
xor
pop
or
fadds
cltd
out
lods
mov
mov
shl
mul
ret
xchg
mov
or
shrb
test
out
sbb
or
inc
clc
push
fmull
cmp
xchg
push
andl
daa
sbb
test
out
adc
clc
std
loop
pop
cmp
out
jmp
pop
mov
lret
dec
add
dec
xchg
popf
xlat
insb
sarl
or
pop
adc
je
inc
push
push
loopne
mov
jle
cwtl
mov
push
sub
lret
pop
out
push
hlt
aaa
push
inc
or
fisubs
inc
xchg
enter
lahf
jle
and
fisubl
clc
or
out
scas
addb
jns
pop
mov
mov
loopne
test
lret
mov
mov
enter
jp
xorl
popf
mov
pop
mov
cmp
pop
nop
inc
push
pop
cld
test
faddl
push
les
fcmovnu
cmp
sbb
sub
push
mov
or
adc
cmp
imul
rcrb
add
dec
stos
inc
push
add
inc
mov
ret
mov
mov
leave
xchg
in
repnz
jge
out
mov
leave
sti
pushf
mov
jmp
andl
lods
sahf
repnz
mov
push
and
shr
xchg
js
ljmp
adc
or
sub
dec
push
loopne
jbe
lods
pop
adc
mov
fsubl
test
testb
inc
mov
loop
int
xchg
bound
xor
ds
cltd
xor
mov
int
icebp
xor
hlt
mov
clc
xor
test
or
std
dec
jg
scas
icebp
pop
jge
bound
inc
pushf
xor
adc
jle
shrl
leave
iret
sub
aam
movsl
in
adc
sub
pop
decb
xlat
inc
sub
jl
aad
and
cmp
aaa
dec
ja
cli
mov
iret
ss
dec
xchg
push
jl
lret
aaa
dec
cmpsl
sbb
pop
sbb
lods
cmpb
subb
call
std
in
fs
repz
adc
push
adc
adc
sbb
int
jle
in
clc
je
out
fisubl
xchg
inc
jnp
pop
lcall
jg
lcall
std
in
dec
mov
int3
rcl
insb
sbbb
xchg
lock
popf
inc
sub
js
push
adc
cltd
cld
pushf
cmp
or
inc
repnz
aad
insl
fwait
or
mov
lcall
in
jle
sub
insl
push
jnp
add
sub
xor
pushf
xor
adc
in
jge
pushf
sub
fnstcw
iret
insl
iret
lds
sub
jae
addr16
and
sbb
fnstcw
filds
call
in
sub
aaa
jmp
xchg
in
mov
in
aad
ljmp
in
mov
push
pop
add
and
sbb
enter
jle
add
xchg
sub
pop
sub
xchg
insl
pop
mov
in
ja
aaa
arpl
push
sub
out
inc
xchg
shl
push
sbb
daa
mov
push
rclb
mov
or
cmp
test
pop
test
inc
inc
aam
xchg
daa
xchg
jp
sbb
and
adc
dec
hlt
mov
arpl
ljmp
inc
cmpl
hlt
out
int3
sub
fdivs
jnp
lock
or
sahf
push
pop
lock
dec
cmpb
sub
push
ret
imull
xchg
in
pop
repnz
sub
out
push
clc
ja
jbe
and
jg
das
sub
pop
inc
add
adc
sti
sbb
fwait
lret
mov
push
xchg
scas
mov
out
xor
loop
or
aam
insl
insl
cs
lods
sub
in
out
push
sbbb
cwtl
pop
out
xchg
inc
xchg
push
dec
test
sbb
in
out
pop
inc
sub
xor
dec
xchg
and
xlat
dec
aam
inc
outsb
stos
pop
aad
pop
scas
imul
adc
adc
pop
in
jmp
lods
mov
sbb
inc
or
xor
aam
xchg
int3
iret
test
bound
adc
lods
pop
inc
pusha
les
mov
lds
mov
mov
sub
repz
adc
ret
imul
lcall
test
test
cmp
in
dec
push
popf
xchg
or
mov
into
xor
mov
ret
loope
or
jp
aam
jg
movsl
adc
out
pop
sub
aam
xor
lods
ja
das
rclb
cld
fsubrs
jmp
popf
pop
sbb
jae
or
add
mov
int3
and
mov
ja
inc
insb
test
mov
div
xchg
std
jecxz
adc
add
test
jae
mull
jae
pop
jns
jg
stos
ret
stos
cwtl
test
lret
cmpsb
push
and
pushf
jo
lea
mov
xchg
mov
aad
mov
mov
in
push
jno
push
jns
in
outsl
stos
pop
mov
jle
int3
cmp
mov
cmpl
mov
xor
jo
dec
push
push
jnp
rol
mov
pop
lahf
lock
imul
shlb
out
adc
popa
filds
int3
in
movsb
mov
push
les
popf
pop
mov
cmpsl
sub
int3
xorl
sbb
and
xor
aas
shl
mov
fdivrs
push
les
test
insl
imul
xor
push
imul
lret
inc
ljmp
stos
mov
mov
clc
mov
adc
test
iret
jl
shl
mov
sub
xor
jns
insb
rcrl
das
xchg
push
ret
xchg
sbb
adc
scas
sub
insl
fisubrl
test
sbb
shrd
inc
mov
mov
mov
lods
insb
into
lret
leave
jle
mov
mov
fisttpl
lcall
mov
cmp
insl
sub
cmp
mov
xor
add
cmp
xor
adcl
in
test
jo
je
xchg
daa
fdivrs
inc
in
jl
fadds
mov
or
mov
out
ljmp
scas
in
cli
mov
mov
mov
sbb
jbe
inc
sarb
mov
mov
aad
shlb
xor
popf
cmp
jnp
xchg
lods
mov
das
hlt
sti
insl
inc
jae
test
pop
jmp
jnp
movsb
push
fwait
push
inc
rcll
jge
push
imul
insb
xor
jmp
int
mov
pop
aas
sub
dec
mov
xchg
fistpl
iret
loopne
jns
mov
xorb
add
sarb
dec
flds
out
insb
push
sub
mov
adc
mov
lret
cmc
mov
pop
pop
xor
mov
sub
pop
xor
mov
sbb
and
pop
orb
ljmp
lahf
test
jb
ljmp
insb
test
mov
ret
mov
xor
sbb
jnp
out
mov
cmp
gs
int3
mov
andl
sbb
je
adc
cmp
sub
jge
pop
sbbl
movsb
clc
jl
mov
cs
imul
adc
cmc
adc
adc
pop
rol
repz
add
lahf
pushf
das
lods
mov
jbe
adc
lea
xchg
inc
cli
cmp
mov
fisubs
xchg
mov
jmp
push
dec
pop
enter
push
mov
popf
jo
shrl
outsb
arpl
mov
mov
mov
stc
bound
fnstenv
in
inc
sbb
cwtl
cli
cmp
xor
mov
arpl
pop
stc
jmp
push
adc
mov
push
jnp
cmp
insb
cmp
or
aam
stc
add
leave
and
sub
mov
in
fisubs
mov
lret
jne
mov
test
rcll
inc
pop
sub
test
sbb
test
fstl
add
dec
test
in
inc
and
sub
stos
es
jp
hlt
pushf
lods
or
or
add
push
ja
lds
jb
pop
out
pop
lahf
dec
out
mov
pop
sahf
jp
das
rolb
sub
call
fadds
sub
lods
loope
stos
aad
cld
jg
shl
pop
pop
cmp
jb
int3
lret
inc
sbb
sub
cli
jbe
adc
add
lret
sub
jle
xchg
into
xchg
fsub
and
mov
das
xchg
cmc
jae
cld
sbb
sub
jle
psrld
stos
stos
insb
in
xor
aam
subb
ficomps
jp
adc
subb
xlat
xor
pop
push
sub
fsubrs
jae
and
into
cmc
xorl
mov
push
repz
sub
test
jnp
leave
rclb
movsb
sbbl
cmp
gs
push
ljmp
xchg
repz
mov
push
sub
js
repz
fsubrl
fidivrl
out
movsb
stc
xchg
mov
push
push
dec
fisubs
in
lods
out
sub
sub
mov
sub
sbb
pop
stos
aad
pop
lret
repnz
dec
mov
aas
or
shlb
inc
test
cmp
lret
sub
jnp
sbb
call
hlt
sbb
sbb
push
das
addb
ja
push
clc
lods
pop
mov
mov
sbb
ret
shlb
xchg
fidivs
rcl
loopne
inc
in
lcall
cwtl
cmp
push
mov
dec
xor
and
fisubrs
adcb
std
ss
sub
sahf
aaa
xchg
dec
mov
shrb
jge
adc
fldenv
gs
in
aas
push
shrl
jmp
insb
es
jo
xor
out
jp
rcll
fistl
sbb
ds
hlt
pushf
dec
jp
mov
lds
ret
lods
hlt
js
or
sbbl
mov
loope
aad
add
aam
jp
mov
add
loope
arpl
iret
out
rclb
or
mov
pop
jnp
xor
lods
xchg
push
mov
adc
mov
xchg
or
das
jp
xchg
rolb
lret
lds
inc
out
daa
sti
push
adc
sbb
sub
in
pop
popf
mov
sub
mov
popf
dec
jge
xor
int3
mov
jnp
out
add
mov
dec
sub
pop
mov
mov
jp
out
out
adcb
xchg
fidivrs
pop
sbb
in
xchg
mov
xor
out
sti
hlt
stc
lods
lret
ret
popf
mov
scas
jbe
bound
fiaddl
or
ret
jle
aaa
xlat
mov
mov
inc
mov
sub
leave
insb
cmp
popl
adc
popa
jbe
fs
mov
jnp
ds
or
cwtl
into
and
sub
sar
shlb
sbb
stos
or
lret
mov
jo
js
xchg
sub
jne
xor
test
push
sub
adc
hlt
sub
dec
je
pop
push
ret
ja
pop
adc
mov
sbb
mov
lods
nop
xchg
and
jmp
or
jnp
cmp
inc
adc
movsl
arpl
les
repz
in
sub
push
ljmp
lea
sub
aaa
int3
das
daa
push
sub
push
mov
xorb
or
push
shlb
inc
or
cmc
rcrb
mov
mov
add
push
sahf
and
rcll
dec
push
ret
add
lea
popa
imul
ficoml
mov
mov
lods
mov
dec
imul
jbe
mov
sub
xor
dec
pop
cwtl
add
and
dec
in
xor
xor
push
cmpb
mov
adc
dec
or
mov
xor
xchg
fnstenv
cmc
ss
pop
sub
add
inc
push
sbbl
fisttps
add
inc
dec
pop
jbe
inc
sub
subl
lock
hlt
xchg
in
into
arpl
adc
pop
andb
lods
hlt
into
pop
pusha
dec
pop
xchg
int
or
sub
inc
add
or
aam
jmp
fdivrp
in
or
xchg
jae
mov
nop
sbb
xor
sub
push
push
or
jecxz
inc
mov
mov
xchg
lret
sti
scas
lods
dec
lds
xor
mov
xlat
testb
xchg
ja
inc
cmp
xlat
sub
sbb
pop
adc
pushf
jl
aad
mov
adc
xchg
push
in
push
xchg
dec
or
test
insb
inc
mov
ljmp
test
movsb
rcrb
testl
cmp
lea
inc
xchg
jge
leave
xlat
rolb
test
test
stc
ds
or
or
test
iret
mov
call
jmp
mov
nop
lods
dec
stc
bound
and
test
lock
pop
push
je
pop
lods
movsb
ret
les
ret
add
mov
pop
lods
add
aam
pop
rorb
outsl
imul
in
dec
lock
sub
ret
stc
inc
push
dec
adc
adc
xchg
mov
sub
cmp
mov
decl
inc
out
fidivrs
add
iret
arpl
xor
mov
cmp
push
jmp
xor
cs
into
cmp
shll
movb
pop
aam
daa
jl
jp
sub
cwtl
lods
sbb
leave
mov
sbb
and
inc
xor
pushf
and
in
ljmp
scas
sub
stos
hlt
mov
xor
daa
rclb
scas
xchg
mov
lods
repnz
sub
iret
add
and
mov
pop
lahf
xchg
movsl
dec
fcoml
shrb
stos
xchg
push
xor
jne
scas
int
xchg
sub
push
jbe
pop
push
cli
and
inc
inc
loop
pop
or
insb
movsb
xor
fsts
xor
mov
pop
sub
test
adcb
xchg
or
sahf
adc
fsts
nop
xor
ret
sbb
sarl
mov
adc
sbb
fcom
andl
sub
dec
shrl
cltd
aad
mov
nop
aam
push
insl
xor
xchg
push
mov
dec
xchg
sub
jg
push
pop
dec
rol
xchg
dec
xor
jge
into
fists
add
sub
test
lret
cwtl
ss
ficomps
aam
bound
stc
pop
js
pop
repnz
pushf
sbbb
jns
out
ljmp
cmp
out
fs
push
sbb
rorb
loopne
ss
cmp
int3
inc
xor
pop
sub
sub
sub
or
aas
int3
daa
sub
aam
pop
lods
stc
jo
les
and
ss
mov
pop
inc
and
aam
sbb
cltd
pop
fidivl
cmp
jmp
stos
dec
push
sbb
jmp
xchg
out
lods
add
jnp
lret
lret
test
nop
les
das
mov
clc
mov
daa
xorb
in
fcomp
inc
pop
lods
xor
out
insl
dec
jo
mov
dec
bound
jg
xorb
repz
jp
push
mov
sti
xchg
test
lahf
push
dec
fs
std
push
in
fnstsw
test
in
cld
fsts
xor
push
jo
iret
mov
cmp
add
sti
jae
cli
cli
mul
clc
jne
sahf
mov
add
add
popf
mov
adc
lcall
xor
in
or
sbb
jne
jecxz
int
das
fucomi
and
out
imul
or
adc
add
in
stos
call
std
or
iret
das
data16
xchg
add
dec
mov
dec
sub
stos
jne
cmp
es
fldcw
stos
push
pop
push
sbb
push
aam
push
rolb
repz
lods
sbb
iret
in
push
add
dec
add
popa
jb
in
imul
arpl
insb
mov
jbe
setg
out
pop
xchg
mov
sub
je
xchg
mov
push
mov
mov
mov
aaa
adc
xor
idivb
fisubrl
or
sub
jecxz
lods
or
jne
loopne
scas
jmp
shrl
loope
add
popf
ds
cmp
or
mov
rolb
push
orb
roll
fstpt
pusha
in
or
mov
fidivrl
or
xor
mov
inc
loop
sbb
lahf
test
jns
insl
or
xor
aaa
pop
sub
jbe
xor
ss
sub
xchg
sub
xchg
cmpb
jbe
addr16
sub
and
sbbb
push
cmc
repnz
pop
mov
sub
or
ljmp
adc
and
ja
adcb
jno
mov
cmp
xchg
mov
jo
scas
dec
rcl
out
jno
repz
push
push
mov
add
add
fwait
bound
cmp
dec
fnstenv
pop
jl
out
dec
sub
push
iret
aam
and
in
movntps
inc
mov
js
or
jl
inc
movsb
jns
fisubrl
add
das
and
jbe
dec
sub
jne
imul
jb
dec
inc
lods
cmp
push
pop
mov
mov
stos
fwait
adc
cwtl
aad
mov
jmp
xchg
leave
sub
cltd
fwait
jp
iret
mov
mov
cmpsl
rorb
xchg
rol
mov
or
sahf
and
repz
dec
push
xor
cld
sub
aam
or
adc
notb
in
fdivrs
adc
mov
rclb
rorl
subb
xchg
sbb
dec
loop
sub
out
jo
mov
loopne
cltd
xor
jmp
popa
sub
stos
cmc
in
xchg
jl
aam
insb
lods
inc
dec
dec
sahf
fisttpll
jae
icebp
mov
inc
pop
push
nop
arpl
xchg
pop
lret
hlt
adc
movsb
jl
inc
or
stos
popf
sub
out
add
loop
sbb
mov
int3
ror
push
jge
sbb
inc
or
out
cmp
outsl
pop
stos
popf
popf
and
rclb
sub
jnp
jecxz
sbb
cld
xchg
dec
add
sub
push
shl
xlat
push
adc
aas
and
sbbl
lret
rclb
or
dec
xchg
je
lods
mov
fs
roll
jle
and
jnp
aam
cmc
imulb
cltd
mov
inc
or
pop
notl
mov
adc
sub
cmp
push
bound
push
inc
arpl
cwtl
shll
cmc
hlt
push
pop
ret
inc
sbb
xor
dec
dec
clc
and
xchg
popf
inc
lds
jnp
mov
xor
fcmovne
pop
sti
in
sbb
inc
vmovntps
push
jbe
sbb
mov
into
xor
mov
sub
int
cli
popf
cltd
jp
inc
mov
add
fdiv
ret
cmc
orb
and
fdivs
xchg
mov
bound
in
or
xchg
or
xlat
cmpb
pop
cld
jp
xchg
stos
push
lahf
arpl
iret
mov
pop
pop
cmpsb
xorl
fdiv
out
call
pop
xor
or
adc
ret
jnp
jno
sbb
or
mov
pop
je
sar
pop
imul
filds
jle
filds
mov
adc
clc
fdivrs
mov
and
mov
jbe
pop
or
mov
push
mov
insb
clc
xchg
and
sub
in
call
add
insb
xchg
je
cwtl
pushf
mov
inc
cli
out
sti
or
pop
ss
fmul
xor
inc
jp
xchg
sahf
push
or
xor
popf
scas
mov
or
sub
in
inc
xor
dec
fiaddl
call
dec
fcoms
mov
fiaddl
lods
pop
sbb
mov
rolb
mov
jp
sub
test
mov
pop
enter
out
xor
pop
inc
add
and
push
mov
ret
out
sub
bound
adc
outsl
sbb
out
sahf
pop
sub
push
gs
mov
and
movsl
clc
mov
mov
imul
or
cs
loop
push
pop
pop
outsl
mov
add
cmp
mov
xor
aaa
mov
arpl
xchg
out
cli
fidivrs
mov
lahf
add
rcrb
pop
and
add
popa
adc
adc
mov
xchg
sub
xor
rcrb
addr16
sub
call
mov
lahf
lods
xor
int3
movsb
icebp
orl
fsubp
sbb
aam
out
jp
jb
sbb
xchg
test
dec
ljmp
jnp
in
cmpsb
outsb
mov
xchg
movsb
sbb
jp
popa
mov
inc
imul
lods
or
cli
sub
mov
pushf
and
data16
ds
lods
dec
mov
push
or
aad
sub
adc
xchg
push
jns
jecxz
lds
sub
in
cmc
std
test
jp
cmp
or
in
gs
aam
les
test
cli
aad
cmp
push
cmp
dec
aad
aas
cs
xchg
mov
inc
sti
mov
pop
cmp
imul
in
in
les
push
inc
int3
adc
mov
divb
cli
in
aaa
cld
xor
insl
pusha
jne
sub
in
push
sahf
cwtl
xchg
inc
add
gs
xchg
sbb
inc
pop
sub
or
bound
addl
shll
lock
stos
adc
adc
stos
hlt
in
test
out
xor
es
xor
xchg
xchg
out
aam
or
jp
repz
es
pop
fst
xor
jno
out
out
les
dec
xchg
dec
enter
xchg
and
mov
mov
sub
add
cmp
xor
lods
pop
mov
stc
mov
enter
test
mov
and
inc
add
cmp
xor
jae
add
push
jmp
inc
test
xor
stc
lret
adc
sub
fiaddl
push
mov
daa
pop
or
lret
roll
cli
fistl
or
pushf
mov
xchg
sub
pop
jb
pop
and
jne
aas
insl
mov
ror
addr16
dec
hlt
movsl
lods
mov
sub
inc
in
cmp
and
push
xor
inc
xlat
mov
aaa
aad
xor
or
sub
and
leave
adc
cwtl
rorb
cmp
jne
jmp
xchg
mov
jo
xor
out
mov
aam
pop
repz
fldcw
and
mov
mov
adc
dec
sbb
pop
xor
add
or
xchg
mov
mov
cmp
cmpsb
addr16
inc
or
loop
aaa
adc
mov
sbb
adc
mov
pusha
pop
adc
scas
mov
jp
push
in
mov
stos
sub
adc
fistl
lock
out
dec
mov
ret
aam
mov
mov
les
adc
ret
data16
sbb
xor
cwtl
lret
mov
sub
or
pop
adc
and
and
je
or
popa
xor
inc
sub
sbbb
in
push
jne
xchg
je
popa
daa
mov
jmp
lods
xor
loopne
into
mov
stc
in
in
testb
jbe
mov
or
lock
sahf
cmp
pushf
push
in
lods
cmpsb
pop
cld
not
int3
sub
sub
xchg
inc
adc
aam
add
rep
push
sub
jbe
cmc
jl
adc
and
mov
dec
lods
sarl
push
lds
aaa
mov
int3
push
jge
lret
cmp
mov
and
xor
lret
cmp
mov
push
popf
sahf
sbbb
lea
inc
inc
sub
jg
out
xchg
insb
mov
or
pop
inc
lahf
xorb
outsl
sub
icebp
jbe
call
mov
dec
aad
aam
xchg
js
cmp
mov
movsb
inc
or
sub
in
jno
mov
xor
fistps
adc
xchg
cmp
js
xor
fs
xor
adc
mov
out
push
xchg
mov
xchg
cmp
subb
adc
cmp
xchg
pop
mov
jl
shl
xor
jbe
popa
ror
lret
test
cmp
push
xchg
adc
mov
lods
push
stc
dec
xor
in
aad
add
push
cmc
mov
cmpsb
and
das
stos
jle
and
or
pop
imul
sti
xor
pop
je
fadds
gs
xor
pop
data16
xchg
xor
inc
rorb
mov
push
push
or
xor
hlt
mov
lret
shrl
pop
xor
mov
mov
jns
cwtl
lods
mov
xor
and
xchg
cltd
lcall
xchg
or
pop
sub
pusha
xlat
jno
jp
dec
xchg
jo
xor
xor
iret
mov
ja
xor
xchg
xchg
out
mov
mov
add
jmp
inc
adc
xor
cmpsl
or
jmp
push
sbb
xchg
mov
test
add
mov
test
push
dec
jae
adc
rcrb
js
xchg
add
push
inc
daa
lea
jle
fstpl
clc
fcoms
sub
sub
xchg
add
mov
adc
stc
push
xor
ds
mov
rclb
aaa
fnstcw
pop
inc
jne
dec
push
in
dec
lock
lcall
fildl
fldcw
and
jnp
mov
loopne
fwait
xchg
incb
lahf
cmp
in
jl
std
clc
adc
iret
dec
fmul
mov
scas
xor
dec
mov
sbb
pop
pop
sbb
lods
rcrb
mov
jne
mov
xchg
mov
pop
cwtl
shrl
insl
popf
mov
popf
mov
lcall
inc
rcrb
gs
pop
cmpl
cmp
ficoms
xor
aad
sbb
popl
lods
or
mov
dec
push
out
or
pop
mov
pop
jle
fistl
ja
inc
jge
sub
mov
stc
sbb
loop
aad
dec
and
sub
aam
imul
je
hlt
rorl
mov
pushf
inc
or
adc
sbb
in
test
xchg
sub
stc
jg
xor
lret
das
mov
imull
in
cwtl
fisubl
imul
inc
push
xchg
into
out
ret
mul
lahf
or
aam
pushf
sub
mov
inc
leave
or
jl
pusha
xor
or
pushf
popl
jbe
outsl
and
adc
mov
std
popf
pop
out
xor
test
lcall
pop
enter
mov
adc
push
or
aaa
imul
sbb
adc
das
add
pop
outsb
popf
ret
cmc
pop
imul
es
outsl
mov
push
jp
minps
xor
cld
sub
frstor
out
mov
inc
mov
pop
test
adc
rclb
out
xchg
mov
call
lock
repz
push
push
cmp
jl
cmp
sbb
jno
lods
add
ljmp
aad
icebp
cmpsl
adc
push
inc
and
lods
adc
rorb
ret
inc
or
cltd
repnz
cmp
inc
movsb
stos
cs
xlat
and
sahf
inc
or
mov
jne
arpl
add
xchg
sub
mov
test
mov
adc
xchg
add
int
jp
cmp
jns
xchg
cmp
lock
mov
pusha
cmp
test
and
xor
cmp
rcrl
hlt
hlt
xchg
push
leave
jne
in
sbb
push
popf
cltd
daa
xlat
aad
scas
cli
ror
lea
aaa
loop
test
dec
mov
pop
or
dec
sbb
adc
add
jb
orb
and
fistpll
lret
aam
adc
or
mov
cmp
scas
inc
or
test
mov
xchg
out
mov
mov
jns
push
push
dec
inc
cmp
lcall
nop
nop
fs
test
xchg
call
in
push
outsb
add
jbe
cmp
in
adc
or
pop
scas
inc
xor
lods
insl
and
lret
cmc
insb
popa
sbb
xchg
lea
or
imul
lret
dec
in
add
push
popf
test
enter
lahf
dec
sbb
jns
add
xchg
movsb
fiaddl
sub
push
es
and
sub
aam
mov
jae
jp
adc
hlt
cwtl
aad
push
xchg
jne
es
jecxz
and
notb
out
sbb
dec
leave
mov
adc
call
les
lock
icebp
mov
dec
lods
push
xorb
inc
jbe
xor
add
jle
or
les
and
out
ret
fwait
mov
sub
cmp
adc
and
or
mov
enter
or
rclb
mov
fdivl
or
jp
cmc
push
add
insb
sub
mov
data16
xlat
push
fldcw
hlt
xor
pop
xchg
adc
icebp
sub
mov
es
push
pop
or
pushf
ljmp
jns
in
pushf
jge
push
jbe
adc
pop
dec
aaa
inc
cmp
insl
shl
push
jl
stos
push
loopne
mov
add
fldt
in
xlat
lret
scas
xchg
dec
dec
nop
or
lcall
cmpsb
pop
jbe
pop
mov
xor
stc
in
cli
clc
cmp
sbb
dec
xchg
dec
add
cmp
jno
xchg
sub
xor
shrb
dec
mov
mov
cltd
dec
sbb
mov
lahf
dec
mov
jmp
cs
movsb
xchg
xor
mov
jae
xor
enter
pusha
cmp
repz
scas
or
xor
xor
and
test
xor
sub
cmp
pop
test
add
jmp
shll
push
adc
pusha
hlt
and
adc
repz
cmp
add
cmpsb
xor
mov
pop
add
fdivs
pop
in
roll
dec
push
hlt
arpl
adc
cmpl
cmp
aaa
xor
imul
add
aas
sbb
push
lds
das
jne
xor
inc
cmp
xchg
inc
xor
jl
cmp
out
xor
adc
iret
xor
mov
or
sbb
lea
dec
xorl
pop
jno
xor
insl
xor
shr
jo
popf
lea
dec
das
int
xchg
push
mov
mov
xor
xor
mov
sbb
sti
gs
xchg
mov
cmp
pop
xor
loopw
pop
mov
outsb
xor
aas
xchg
xor
jne
cwtl
push
xlat
mov
pop
push
pop
nop
dec
pop
jo
xor
inc
imul
aam
fnsave
and
push
and
xor
fadds
sbb
js
push
xor
bound
cmp
testb
je
cmp
and
daa
sbb
or
loope
fidivl
jae
lock
mov
fbstp
out
mov
sub
xchg
jae
push
daa
push
push
push
bound
punpckhdq
das
jge
adc
fsubrl
dec
icebp
xor
dec
lods
shl
push
mov
sbb
clc
movsb
je
cmpb
out
lahf
lret
add
or
inc
dec
clc
dec
xor
adc
in
inc
jo
inc
gs
adc
inc
loope
jl
dec
fdivl
cmp
pop
cmovp
jae
rorb
sub
stos
imul
fnstenv
les
cmp
inc
mov
cmpsl
aad
dec
xchg
test
int
repz
add
cli
pop
daa
insl
cmp
bswap
aaa
lea
dec
mov
stos
imul
jmp
xor
jle
add
movsb
push
je
jl
call
or
mov
adc
insb
xor
fmull
sbb
rcl
xor
popa
inc
cmp
xor
movsl
jns
fs
lock
out
sbb
push
inc
xor
pop
inc
aad
or
mov
mov
sti
add
inc
push
sbb
scas
xor
cwtl
aaa
idivb
or
push
pop
das
fcomps
rcrl
jg
fcmovbe
xor
ljmp
push
mov
in
dec
xchg
hlt
xor
push
cmp
fwait
daa
or
subb
lcall
out
movsl
fs
inc
cmp
mov
fistpl
dec
sub
pop
aam
sbb
out
dec
int
jns
loopne
xor
mov
inc
and
inc
lods
xchg
je
mov
xor
mov
scas
test
jnp
pcmpeqb
jno
mov
pop
jo
inc
cmp
cmpsl
outsl
lret
xchg
rcl
pop
inc
xor
dec
sbb
dec
mov
mov
mov
sub
jge
test
insb
adc
popf
sbb
es
notb
out
inc
add
call
dec
loop
cmc
mov
mov
xor
arpl
xor
jb
out
pop
mov
adc
inc
fs
arpl
xor
movsl
loopne
xor
push
shr
xor
xchg
sub
mov
notb
xor
jb
mov
in
xor
add
ss
notb
cmp
xor
std
and
sub
or
xor
rdpmc
pop
pop
push
aam
xor
or
mov
leave
icebp
xor
mov
jno
inc
push
mov
cmp
test
xor
adc
dec
filds
mov
std
pop
xor
mov
inc
pop
orb
lods
sub
sub
push
cmp
adc
dec
and
push
or
or
sar
das
cwtl
subb
push
sub
out
popa
je
ret
xchg
out
cwtl
mov
adcl
xchg
out
sbb
cs
push
pop
mov
hlt
cmp
xlat
and
mulps
lods
rcl
add
dec
or
aam
add
sbb
add
ss
push
into
sbb
aas
sbb
xchg
lret
clc
fisttpll
movsb
or
pop
mov
in
dec
xor
mov
lea
xchg
sarb
sbb
idivb
xor
fcmovnu
enter
xor
mov
inc
loopne
sub
mov
in
jle
xor
or
xor
push
jno
push
outsb
shl
and
pop
out
jae
mov
cmpsb
lods
out
divb
mov
pop
mov
push
xchg
adc
je
mov
gs
ret
and
xor
mov
adcl
mov
xchg
sub
xor
pop
rcr
pop
sti
inc
jb
aam
out
test
outsl
mov
cmp
mov
mov
push
in
scas
inc
adc
mov
inc
mov
orl
xchg
mov
mov
iret
push
xchg
push
or
imul
loopne
std
imul
push
and
lock
repz
je
test
mov
adc
xor
ret
in
aas
pop
aad
xor
xchg
popf
sbbb
dec
mov
and
shrl
push
add
popa
in
sbb
daa
cwtl
sub
subl
lret
fs
cmp
xor
dec
mov
bound
sub
xor
mov
mov
xor
movntq
xor
jb
jbe
call
or
and
shll
les
inc
dec
mov
js
adc
bound
or
add
insl
lret
inc
out
xor
jecxz
and
mov
popa
daa
inc
mov
xor
js
mov
jl
jmp
push
std
mov
hlt
shlb
sub
pushf
push
inc
movsb
sbb
testl
cmc
add
leave
xchg
loopne
in
loop
sbb
pop
xor
mov
adc
stos
je
loopne
xor
gs
sub
imul
frstor
adcb
cmp
loop
pop
call
fs
cmp
mov
xor
sar
pop
sub
in
sbb
cld
sbb
jo
cmc
mov
mov
push
out
lods
xchg
cmp
test
or
inc
lcall
pop
xor
jnp
pop
cmp
sbb
lahf
push
popa
fnstenv
iret
and
movsl
shl
adc
std
loope
je
dec
outsl
adc
mov
js
mov
jo
les
or
je
cltd
fnsave
sub
add
leave
cwtl
adc
or
adc
mov
mov
and
cltd
mov
adc
sbb
aaa
or
fwait
std
movsb
xor
push
jge
fisubl
and
push
test
and
xor
int3
fs
mov
es
xor
xchg
inc
test
shrb
mov
mov
dec
in
and
ja
adc
ljmp
mov
xor
mov
xchg
xor
loopne
cs
cmpl
mov
mov
fs
outsb
loopne
mov
repnz
fidivrl
test
std
ljmp
mov
jg
pop
loope
mov
push
hlt
sar
jecxz
xor
sbb
xorb
jmp
and
aas
and
cld
or
arpl
fnsave
mov
in
clc
je
xor
sbb
cmpsl
or
push
xor
loop
in
mov
pop
in
pop
inc
or
xchg
mov
cmp
imull
jbe
push
fprem1
push
enter
dec
cld
bound
addl
and
jg
lds
scas
shrl
stos
iret
jge
xchg
jp
adc
mov
lds
jo
and
lret
push
inc
cmp
lea
cmpsb
aad
je
inc
dec
dec
mov
dec
clc
mov
add
pop
test
push
or
adc
pop
cmc
shlb
lcall
aam
lods
mov
in
adc
insb
xor
in
push
mov
pop
mov
stos
imul
leave
dec
jb
sub
or
push
push
mov
xchg
insb
mov
sub
iret
es
sub
cmp
pop
rorb
or
adc
js
xchg
out
push
sub
add
sti
dec
fidivl
aam
aam
pop
or
call
cmp
leave
add
lds
loopne
xchg
mov
test
adc
in
adc
imul
call
sub
push
adc
lods
push
and
sbb
imul
push
nop
gs
and
jo
dec
test
dec
lret
leave
mov
imul
fstpt
cmp
addr16
xchg
jno
fisubl
jbe
in
rolb
mov
les
in
lock
cmp
push
jp
dec
xchg
mov
or
push
js
sbb
bound
incl
xor
adc
pop
xorb
aas
sbb
es
pushl
test
loope
mov
xchg
xor
add
adc
dec
xlat
sbb
inc
lock
ljmp
ret
and
sbbb
xor
cmp
push
or
in
mov
cltd
enter
je
sbb
xchg
cmp
cwtl
mov
stc
cmp
addr16
ret
inc
cmc
daa
movl
and
mov
mov
add
mov
adc
cmp
push
aad
jb
sub
push
add
dec
into
fcompl
mov
out
mov
shll
xchg
nop
into
mov
inc
mov
lods
jle
outsl
xor
addr16
je
push
push
inc
fimull
or
jns
or
aaa
test
xchg
pop
ljmp
in
and
outsb
popf
mov
jns
rcrl
js
lahf
out
cmp
je
lret
testb
outsl
nop
sub
addb
inc
add
pop
shl
mov
out
rclb
sub
ja
outsb
gs
fistpll
adc
incl
popf
dec
xor
jbe
jae
movsb
ja
aam
into
ja
scas
mov
xor
mov
jl
ljmp
lods
and
jg
sbb
push
insb
mov
sbb
out
mov
xchg
fstl
dec
loope
xchg
pop
rep
hlt
sbb
iret
int3
data16
das
aaa
mov
dec
push
inc
mov
test
mov
pop
dec
sbb
dec
inc
mov
or
in
adc
sbb
shll
in
fcmovb
push
and
inc
stos
add
faddl
addr16
or
mov
add
mov
adc
dec
and
data16
pushw
loope
int
lret
mov
dec
mov
lods
pop
out
in
push
push
cmp
iret
scas
and
imul
xchg
sti
gs
popf
or
pop
jp
pop
mov
adc
xor
gs
out
add
cld
imulb
mov
cltd
pop
add
xor
sub
xchg
mov
out
mov
mov
jg
sub
jno
xor
inc
icebp
sahf
jge
dec
push
les
in
fstpt
in
shr
cmp
push
lcall
sub
mov
loopne
loope
push
xchg
call
jecxz
sub
cltd
adc
sbb
daa
add
and
add
loopne
fsubp
insl
inc
pop
hlt
idivb
pop
xchg
dec
pop
arpl
jne
outsl
stos
jns
or
orl
cli
lret
lea
and
cmp
in
lret
push
outsb
inc
inc
out
inc
loop
test
cmp
push
mov
lock
in
adc
dec
pop
xchg
mov
dec
loop
mov
and
lret
adc
sub
in
lret
mov
in
push
sahf
loopne
xchg
sbb
ret
insb
inc
cwtl
xor
push
jp
fcmovbe
mov
neg
adc
and
inc
xchg
out
xor
cmp
imul
bound
ret
mov
nop
cmp
mov
xor
aaa
mov
xor
push
imul
dec
pop
xor
jmp
rcrl
mov
xorb
div
xor
das
shr
mov
xor
push
inc
ffree
je
jnp
sub
faddl
adc
fwait
shll
sbb
xchg
icebp
sub
jo
cli
and
adc
add
dec
sub
es
cli
rorl
cli
xor
mov
hlt
sub
cmc
popf
inc
ds
clc
jg
fwait
mov
ja
and
jmp
push
push
fcompl
jo
hlt
xchg
lahf
cli
fsub
repz
das
fstl
into
rcrb
jnp
div
shrl
adc
adc
lods
push
sub
push
pushf
lahf
enter
pop
dec
or
or
mov
stos
cmp
jbe
mov
sbb
lods
sbb
sbb
and
ds
pop
cmpsl
dec
mov
in
mov
jne
int3
imul
inc
pusha
test
jbe
fisubs
sub
icebp
jb
sub
sbb
aam
aad
sbb
xorl
lahf
and
mov
cli
nop
push
jbe
jmp
insb
pop
inc
xchg
dec
fstpt
adc
jne
xchg
mov
insl
nop
aad
adc
mov
js
xchg
xor
jb
pushl
mov
out
clc
mov
repnz
sbb
adc
adc
add
into
cmp
mov
test
jge
repnz
sub
jp
pop
sbb
add
inc
aam
popa
sub
add
sub
push
iret
ja
push
rcr
test
sub
sub
dec
lret
jge
int3
mov
nop
stos
repz
test
lock
or
jno
jae
pushf
push
pop
loopne
mov
jl
dec
inc
cli
sarb
movsb
cli
sub
mov
jecxz
xchg
adc
repnz
push
jl
jbe
aaa
repz
push
sub
sbb
cwtl
mov
dec
inc
dec
cmp
xor
gs
and
call
data16
xchg
cwtl
fs
jecxz
incl
test
xchg
jns
mov
js
push
sub
lret
mov
stos
cwtl
sub
mov
pop
cmp
bound
pushf
mov
aam
push
fstpt
adc
mov
cmpsb
nop
jo
int3
ret
jb
sbb
insb
test
add
sub
inc
jl
or
into
dec
roll
mov
test
lret
out
xor
mov
push
inc
insb
adc
mov
cmp
cwtl
and
sarl
pop
jl
jbe
jle
lahf
push
dec
aam
callw
pop
ds
flds
sub
push
mov
adc
sub
mov
pop
stos
cwtl
adc
and
sub
fdivs
insb
loop
or
mov
jb
mov
xor
ds
mov
lcall
jbe
daa
jnp
les
fiaddl
jmp
into
mov
xor
in
mov
push
add
add
xor
in
lods
mov
and
sub
mov
divl
dec
mov
sbb
push
mov
aad
jge
and
xchg
movsb
movb
sub
ret
xlat
jp
outsb
les
inc
cmp
lods
outsl
imull
ds
push
xchg
or
mov
mov
imul
loopne
inc
inc
xchg
dec
ficoms
lods
adc
bound
xchg
nop
ds
rorb
adc
mov
and
ds
es
mov
add
lods
out
outsl
add
dec
je
add
add
je
mov
push
inc
lods
mov
shlb
mov
or
ss
push
xchg
push
xchg
push
and
jns
test
cmp
add
adc
mov
lret
leave
outsb
adc
out
sbb
xchg
push
repz
shl
mov
pop
xchg
insl
mov
sbb
sub
bound
adc
das
pusha
jmp
ja
xchg
push
lock
mov
jmp
rorb
pop
cs
imul
mov
rcrb
add
push
loopne
je
sahf
je
xor
jl
inc
and
aas
xor
mov
test
fwait
sahf
mov
mov
mov
inc
add
les
cmp
lcall
jb
push
lods
dec
popa
enter
lds
test
jp
xor
aaa
lock
loopne
fnsave
pop
push
mov
call
mov
out
dec
lods
xorl
lock
aas
push
flds
shll
movsl
pusha
stos
rorl
cmc
dec
stc
je
jnp
fsubrl
xchg
pop
cmp
mov
mov
inc
lock
inc
stc
movsl
mov
popf
cmp
addr16
mov
jns
jge
dec
imul
sub
daa
add
fucom
cli
in
jo
cwtl
in
test
push
pop
jg
lock
fwait
add
fidivrl
aad
rolb
push
pop
dec
or
mov
push
jbe
popa
push
sub
xorb
push
shlb
adc
ret
mov
jns
into
sti
push
data16
mov
into
push
sbb
xor
sub
loopne
ss
xor
lods
and
icebp
mov
fucom
repnz
pushfw
mov
mov
adc
xor
cwtl
adc
daa
pop
enter
rcr
rorb
in
push
xchg
xlat
sub
leave
mov
adc
orb
outsb
test
aam
jnp
mov
jbe
sub
cmp
xor
inc
popf
or
or
push
repz
mov
sub
mov
in
pop
ret
pusha
adcb
jne
fsubrl
fcoms
lods
push
adc
ss
mov
jbe
lds
add
sub
add
ja
inc
out
popa
xor
jne
sti
lret
aaa
xor
xchg
inc
popf
pop
adc
sub
push
aam
cmp
lcall
shll
clc
or
stc
jmp
xchg
lea
cmp
adc
in
xor
mov
mov
jnp
popf
int3
bound
flds
cli
insb
stos
fs
das
mov
sub
test
mov
pop
xor
pcmpgtw
xor
mov
push
jle
push
and
subl
ret
cmp
add
xlat
add
sti
mov
pop
test
es
jle
fistpl
xor
sub
inc
sub
mov
sub
add
sub
sub
mov
dec
ljmp
jp
xor
cld
lods
xor
out
jbe
mov
loop
jecxz
subb
mov
cmp
outsb
adc
mov
xchg
test
leave
test
push
les
mov
lods
jae
jns
xor
adc
negl
aas
sbb
dec
jb
mov
jle
out
pop
pushl
jbe
mov
adc
jne
out
sbb
xchg
out
sub
loope
adc
clc
test
mov
aad
lods
pop
leave
pop
idivb
dec
andb
cmp
mov
stos
push
inc
stc
push
sub
mov
mov
lret
mov
mov
mov
nop
mov
sahf
push
cmp
push
aam
sub
lods
ja
fcomps
or
test
adc
nop
jmp
movsl
sub
sbb
dec
popf
mov
jg
inc
leave
shlb
sub
sub
mov
or
inc
notb
fmull
jl
xchg
rorl
inc
repnz
mov
rcr
mov
popa
mov
out
xor
divb
movsb
xchg
adc
pop
into
inc
int3
xchg
aad
fs
adc
dec
repnz
push
cmpsl
pushf
lahf
andl
xchg
lea
in
cs
jp
aad
sub
inc
fimuls
sub
leave
hlt
xor
cmp
ret
lock
loopne
and
out
movl
jl
xor
in
adc
out
out
jb
dec
lods
mov
pushf
pop
xchg
add
dec
mov
mov
scas
or
jl
lcall
ljmp
add
xchg
lahf
cmp
xchg
enter
push
mov
test
push
test
outsb
stc
cmp
subb
stc
sarl
jmp
jl
adc
hlt
cmp
imul
dec
xchg
mov
lods
repnz
sbb
loopne
push
imul
cmp
test
xchg
mov
je
mov
adc
inc
stos
imul
lods
fisubrl
ljmp
scas
jmp
jae
fistps
jnp
loope
jbe
pop
repnz
mov
xchg
test
in
sub
mov
adc
pop
fwait
xor
adc
jo
push
adc
into
nop
and
sti
push
pop
notl
xorl
jle
fisubrs
mov
adc
lea
mov
jbe
out
jne
lds
and
sub
add
xor
and
or
sbb
pop
lods
lret
mov
jo
call
xchg
stc
lods
mov
mov
add
sbb
jno
idiv
xchg
xchg
add
iret
sbb
push
xor
sub
and
sbb
outsl
add
popa
bnd
jmp
aas
fldenv
test
push
xor
sbb
xchg
add
adc
add
push
pushf
adc
lods
call
out
adc
data16
jmp
scas
sbb
jl
mov
fnsave
mov
int3
mov
lods
pop
adc
outsb
jecxz
add
and
add
iret
xchg
xor
jno
push
jno
aas
dec
cs
push
mov
xchg
jp
repz
aad
sbb
mov
test
mov
jns
out
mov
lods
sub
loopne
sub
xor
fimuls
mov
subl
jnp
mov
std
add
fwait
sbb
mov
in
fdivr
sub
hlt
ret
sub
pop
inc
mov
leave
jmp
mov
jno
lret
std
pop
or
and
in
lods
or
pop
sbb
jmp
pop
stc
sub
adc
leave
mov
jmp
lahf
cmp
lret
jp
sub
push
lock
push
sub
ret
int
aas
enter
call
dec
ss
push
in
or
hlt
imul
test
push
sub
mov
push
test
mov
xchg
sbbb
mov
inc
mov
push
test
lea
or
out
fisubs
mov
mov
xchg
xorb
cmp
pushf
or
xor
mov
dec
out
sub
inc
xlat
movsb
jp
aad
xor
inc
aas
adc
push
xchg
jae
push
push
dec
mov
test
adc
jns
mov
dec
idivb
dec
pop
ja
leave
xchg
aad
adc
in
cmp
data16
xchg
clc
aaa
jbe
jns
dec
add
in
sub
or
mov
dec
sub
mov
imul
push
test
fstl
cmp
movsl
cs
in
popa
push
out
push
push
ficompl
pushl
insb
pop
add
aam
jno
lret
mov
sbb
push
mov
xchg
lods
cmp
xchg
jl
xor
push
sub
or
test
mov
imul
or
aad
jns
xchg
aas
enter
in
and
pxor
lcall
cli
jl
shl
adc
cmp
sub
fbld
rorb
jns
or
sub
flds
sub
mov
sarb
cmp
insb
mov
ds
cltd
rdpmc
dec
inc
inc
lcall
or
fdivl
mov
imul
ficoms
dec
push
lods
cli
adc
loopne
sub
ds
out
sbb
push
andb
movsl
fdivrp
xchg
mov
repnz
xor
lods
jns
aam
icebp
stos
add
pop
call
js
push
jle
and
lods
or
push
das
sbb
pop
add
push
fstl
test
jne
inc
repz
enter
out
sti
bnd
daa
out
int
sub
push
cld
push
push
xchg
push
and
xchg
fisubs
in
lods
std
xchg
pop
mov
imul
shlw
jg
xchg
mov
pop
pop
hlt
hlt
lods
cmpsb
mov
enter
jecxz
test
push
outsb
add
and
sbb
mov
push
jl
sub
and
xchg
adc
sbb
add
cli
mov
mov
nop
pushf
jl
sti
bound
or
es
push
or
lods
dec
dec
push
sbb
pop
gs
call
dec
adc
int3
or
adc
loope
mov
pop
pop
add
adc
mov
adc
les
mov
push
mov
aaa
xchg
add
shll
rclb
aam
pop
sub
jg
or
ja
push
nop
push
adc
mov
mov
iret
movsl
cltd
lds
out
sbb
push
hlt
aad
fcoms
adc
nop
add
dec
inc
lcall
or
pop
sub
push
out
cmpsb
and
add
inc
fisubl
mov
adc
jnp
orl
call
sub
ds
mov
lret
mov
xor
jnp
cmpl
lret
lods
sub
dec
mov
adc
xor
lcall
lret
ja
inc
hlt
imul
sub
xchg
add
adc
fcompl
ljmp
int3
shrb
xchg
dec
fsts
ss
test
mov
or
sub
adc
adcl
out
add
add
push
push
js
ficomps
call
rcrb
pop
jp
mov
lods
rcrl
sub
and
cwtl
xchg
repnz
cwtl
in
mov
adc
fmull
pop
scas
je
inc
insl
nop
mov
inc
mov
jno
leave
popf
imul
out
lret
je
sub
sahf
jbe
aas
adc
sub
test
xchg
bound
jnp
sbb
or
lods
pop
push
pop
sbbb
sahf
inc
hlt
or
mov
stc
mov
mov
hlt
xchg
jno
or
int3
repz
lock
or
es
sti
repz
rcll
repnz
cmp
xor
mov
and
sbb
aad
sub
xchg
pop
ret
xchg
jp
int3
loopne
ljmp
adc
push
mov
cltd
movsb
push
mov
mov
imul
pop
hlt
addr16
xchg
mov
sahf
dec
mov
and
int
sub
lahf
rclb
jno
in
pop
xchg
or
sub
and
adc
ljmp
add
sbb
jb
push
dec
test
sbb
fucomp
addr16
cmp
aam
cwtl
dec
jbe
inc
into
nop
pushf
mov
xor
nop
sub
icebp
push
jo
xchg
nop
lret
jo
call
dec
mov
ret
lods
cs
jne
add
mov
inc
ss
xchg
mov
movsb
sub
or
jg
xchg
push
lds
sbb
adc
pop
call
jl
dec
rorb
insb
dec
dec
mov
repnz
aam
sub
daa
mov
ja
add
push
pop
sub
and
test
mov
flds
dec
xchg
leave
pop
cs
sub
int3
test
xchg
cmp
in
sub
mov
sahf
adc
nop
filds
aad
dec
lods
adc
pushf
and
add
jge
fcoml
pop
xorb
pushf
push
aam
push
dec
inc
jp
push
pop
sub
imul
in
pop
addr16
lods
and
cmp
mov
lcall
fidivrl
mov
sahf
dec
loop
sbb
or
xorb
xor
in
inc
test
jnp
sub
xor
aas
mov
jbe
jns
or
dec
adc
cld
rorl
inc
cli
hlt
jg
adc
sub
lods
cmp
and
xlat
enter
xor
adc
sub
jmp
out
add
add
sub
je
lods
and
fwait
test
sbb
or
lret
push
lock
test
subl
icebp
push
ret
nop
sbb
inc
paddw
adc
sub
lds
inc
push
ret
xchg
aam
aam
int3
adc
pop
adc
je
aad
shlb
adc
lock
or
stos
lcall
push
lahf
push
or
test
and
icebp
shl
mov
sti
sub
mov
lea
cmpsb
ja
out
xchg
int
push
inc
fwait
lods
les
adc
push
jbe
pop
sub
movsl
add
xor
pinsrw
cmp
and
out
imul
mov
scas
cs
lret
mov
sub
push
pop
ret
jnp
add
jp
cwtl
aaa
lods
sbb
jae
xchg
insb
mov
sub
cld
lods
ds
les
sub
sub
sbb
mov
out
popf
cmp
mov
cli
cmp
jge
dec
stos
push
jae
push
xchg
sarl
mov
mov
mov
adc
repnz
cmp
push
cmp
cmpsb
pop
call
dec
jl
jbe
test
loopne
jmp
insb
mov
jne
divb
xor
xor
sub
xor
xchg
stc
pop
test
xchg
mov
das
out
or
adc
negb
add
pop
or
or
fdivrs
lods
cli
shlb
scas
jge
addr16
out
add
imul
cli
popa
cmp
leave
iret
icebp
lea
sbb
sbb
sub
dec
test
in
jecxz
outsl
jg
test
add
dec
sbb
add
leave
divl
pop
std
add
add
mul
cld
sub
pop
or
fldenv
movsl
in
mov
cmp
lds
in
dec
pop
and
xchg
cmp
pop
sbb
cmp
xchg
mov
lods
add
mov
ja
xchg
int3
and
push
mov
popf
fs
jecxz
push
lods
aam
cs
xor
icebp
les
xchg
jne
cwtl
aad
iret
test
or
inc
adcb
dec
adc
loop
push
dec
fs
fidivl
ret
subl
mov
jp
adc
jb
adc
xlat
ror
adc
lods
out
iret
push
fcomps
movsb
sub
ljmp
ds
roll
sub
mov
cld
jae
jne
ds
lods
stos
jg
jae
arpl
adc
sub
fcomps
push
movsl
addb
push
push
jl
bound
hlt
jbe
pop
fs
push
jne
jmp
aad
repz
jnp
jge
xchg
xchg
dec
int3
push
jb,pn
ds
cmp
out
cmp
stos
jbe
ja
test
jae
inc
sub
push
fxtract
xor
adc
sub
inc
sub
mov
jne
xchg
and
push
jl
mov
adc
mov
sub
xchg
xchg
lret
jae
adc
and
movsl
arpl
mov
iret
push
cwtl
mov
insl
jl
insb
jb
je
pop
cmp
arpl
sub
mull
test
lock
rcll
ret
ret
pop
test
sbb
pop
or
cli
pop
and
sbb
xor
jno
mov
nop
or
mov
scas
sbb
xor
test
inc
cmp
jbe
cli
xchg
in
dec
add
push
outsb
sbb
repz
out
and
mov
mov
and
das
iret
push
outsl
mov
test
incb
popa
cli
sub
data16
adc
popf
enter
mov
xor
roll
mov
mov
js
mov
hlt
in
cltd
loop
or
ss
inc
pop
mov
cmc
addl
adcb
sub
jmp
sub
in
xlat
aad
pop
ja
in
repz
jg
hlt
sahf
iret
cmp
push
push
pop
icebp
sbb
clc
pop
lahf
add
sub
mov
notl
pop
add
xor
xchg
or
push
adc
push
int3
mov
mov
and
insb
ja
pop
or
pushf
lahf
jbe
push
sbb
leave
rcrb
and
mov
add
mov
sub
imul
adc
rcr
rcrb
aaa
push
add
jno
sub
popf
lods
dec
mov
lret
lret
or
mov
mov
push
int3
imul
push
sub
pop
aam
add
push
mov
mov
aas
mov
push
jo
outsl
push
into
pop
sub
ja
jg
ds
insl
shlb
jecxz
out
data16
xchg
loope
aad
push
push
cmp
rcr
adc
call
rolb
mov
jo
test
stos
or
lahf
add
inc
insb
into
in
gs
gs
xchg
cs
bound
daa
push
test
xor
push
ret
sub
ss
sbb
or
add
sub
nop
pop
mov
test
xchg
mov
lods
xchg
sub
cmc
jbe
das
jl
lret
enter
cmpl
mov
outsb
aad
sub
dec
mov
push
push
int3
adc
in
xor
or
jns
add
xchg
fs
cmp
adc
inc
xor
notl
add
push
pushf
push
mov
mov
inc
inc
xchg
lahf
add
sar
and
stc
cs
stos
mov
sub
das
fisubl
pushf
fldl
repnz
movsb
fwait
addl
sub
mov
mov
mov
pop
or
jle
adc
aam
aaa
mov
jnp
jmp
jmp
in
les
xchg
rorb
push
insb
jecxz
cltd
xor
mov
andl
mov
fwait
je
mov
lahf
cmp
es
daa
mov
lods
cli
outsl
insl
test
sbb
xchg
push
ret
cmp
mov
inc
fimull
lods
mov
pop
push
sub
mov
aad
xor
stos
mov
mov
mov
mov
insl
pop
addr16
xchg
mov
add
push
jle
xor
xor
es
sub
jecxz
adc
stc
aaa
cmp
mov
ret
dec
out
xor
jnp
cmc
rcll
add
jno
popa
mov
in
adc
imul
popf
push
jno
repnz
mov
ret
ljmp
je
aas
rep
fstpl
adc
call
aaa
in
scas
sub
sub
lock
and
add
mov
cwtl
mov
leave
sub
push
push
push
adc
nop
jbe
mov
adc
jbe
or
jbe
jnp
insb
int
loop
jg
into
sbb
iret
pop
stos
clc
and
lods
push
mov
jns
sub
lcall
ret
rorb
iret
lcall
pop
icebp
sub
or
sub
out
lods
hlt
push
aam
push
xchg
repz
pop
lods
fdivrs
xor
xor
mov
mov
clc
lods
dec
or
bound
fidivl
add
cmp
adc
push
mov
js
insb
fisubl
cmp
loope
fiadds
mov
push
out
adc
sbb
idivb
sbb
out
dec
ljmp
push
dec
shll
inc
push
dec
push
mov
ss
int3
es
lock
test
ds
mov
inc
ss
imul
fwait
cmp
int
jl
lret
add
adc
mov
les
les
push
and
aam
int3
add
add
mov
push
mov
repz
fs
dec
push
and
cmp
test
push
inc
mov
dec
outsb
mov
call
gs
icebp
nop
mov
lods
sub
sbb
push
pop
mov
lret
iret
or
ficoml
sub
or
popa
mov
xchg
leave
ja
pop
mov
mov
adc
jnp
das
jmp
push
pushf
jl
inc
mov
fwait
das
lock
pop
or
cmp
es
push
jne
insb
cmp
in
cwtl
mov
lea
xlat
iret
mov
mov
out
mov
jnp
mov
ja
nop
fwait
popf
aaa
lcall
xchg
shrb
es
xor
aaa
dec
lret
adc
cwtl
lods
dec
sub
js
mov
dec
inc
inc
push
sbbl
scas
pop
cmp
mov
inc
sub
aam
fwait
ss
cs
int
adc
xlat
stos
scas
pop
mov
push
push
sub
pusha
inc
fiaddl
mov
loop
sub
mov
out
mov
mov
and
aaa
xor
into
lea
mov
and
test
aas
ljmp
test
ljmp
pushf
jbe
sub
in
mov
shl
cmp
add
cwtl
sub
dec
xor
stc
dec
fisubrl
out
cmpsb
push
mov
add
aad
mov
ja
jne
mov
adc
mov
xchg
mov
pop
and
cmp
ljmp
lea
xchg
sbb
push
jo
out
adc
in
icebp
adc
add
ret
cmc
add
xchg
fnstenv
stos
push
cld
ds
xor
adc
lea
lahf
popa
pop
adc
imul
hlt
outsb
sub
aad
lret
cmovns
mov
and
xchg
fcomps
mov
and
imul
dec
jge
or
jp
jmp
pushf
sbb
stos
fildll
jmp
mov
jg
add
ja
fwait
or
cld
popa
out
fwait
jg
sub
mov
adcb
dec
pop
sub
adc
fmull
xor
repnz
rcrb
xlat
and
jge
sub
out
xlat
adc
rol
cmp
pusha
jno
add
stc
sbb
enter
xchg
lea
fwait
xor
test
call
lret
es
add
lahf
fildl
lock
hlt
loop
push
jg
das
out
mov
cmp
in
or
ds
xor
xchg
push
out
sub
add
test
scas
jbe
sub
jae
xchg
loopne
mov
mov
ds
lods
arpl
jbe
jmp
adc
xchg
pushf
fldl
clc
or
hlt
loop
sub
mov
js
lods
sbb
or
sbb
test
fisubrs
cld
sbb
mov
addr16
ror
xor
scas
add
mov
add
push
sub
and
rorb
aas
stos
and
xor
leave
add
jne
dec
pusha
xchg
out
mov
outsl
loope
sbb
cmpsb
jge
cmpsl
dec
pop
inc
out
mov
lcall
cmp
je
mov
xlat
jp
adc
fsqrt
js
xchg
jae
stos
sub
rorl
in
sub
hlt
ljmp
inc
push
clc
jb
lock
test
gs
ljmp
fnstsw
out
cmp
mov
stos
mov
loopne
sub
adc
sbb
sar
cmp
pusha
inc
sub
jle
mov
lds
lret
jae
ret
xor
lods
xor
xchg
push
dec
int
sub
sbb
mov
xchg
data16
lea
adc
sub
in
repz
inc
mov
ds
mov
sub
cwtl
push
rcll
xchg
push
dec
nop
add
cmp
or
and
sbb
movsl
sahf
fbstp
and
dec
lods
mov
out
aam
ja
push
mov
dec
pop
xchg
fldl
sbb
inc
or
scas
inc
sbb
movsb
xor
add
inc
repnz
je
or
pop
jge
ret
jb
int3
adc
mov
jne
lods
mov
sub
call
inc
mov
add
icebp
push
out
cld
adc
popf
cmp
push
in
in
and
or
dec
inc
fdivrs
ret
lods
mov
jns
mov
sbb
pop
outsl
popf
hlt
ja
in
inc
sub
test
aam
dec
stc
jne
pop
cvttps2pi
loopne
pushf
jae
out
in
es
test
dec
test
lods
ret
sub
out
inc
and
repnz
sub
dec
xor
in
or
ljmp
enter
jne
and
or
out
add
rorl
and
dec
xchg
pop
fisttpll
push
cmpsb
ja
cwtl
mov
or
shrb
dec
and
std
pusha
jl
fcoms
xchg
rcl
jbe
push
test
out
lods
xor
fcmovb
xchg
jb
push
add
testb
sub
cmp
inc
lea
cli
hlt
mov
cmp
cli
jnp
add
inc
addr16
push
scas
and
loopne
mov
dec
sub
pop
pop
mov
outsl
push
sub
add
lret
sub
lds
xchg
xchg
xor
das
or
into
cmp
fcomip
lods
std
sbb
loop
jne
daa
out
mov
pop
cmp
xor
fstl
shrl
sbb
xchg
ds
rcrl
sub
xor
mov
mov
add
pop
pop
ret
add
fdivrp
mov
lcall
fnstcw
cmp
mov
sub
mov
popa
lods
push
fistl
aaa
jg
inc
sbb
sbb
or
stos
push
ja
test
xchg
mov
cmp
pop
cmp
repnz
aad
subl
jnp
dec
inc
dec
aad
dec
hlt
in
sub
lret
andb
jns
pop
sub
out
dec
aam
aam
les
dec
adc
adc
cmp
pop
sarl
sbb
inc
sub
aam
movsb
xor
stc
mov
mov
aas
xor
cwtl
mov
shrl
xchg
jb
int3
test
inc
mov
or
sub
mov
lock
out
pop
mov
mov
mov
push
xor
xchg
je
push
js
xor
add
mov
imul
jmp
mov
mov
dec
pop
mov
loop
hlt
orb
ss
incl
inc
stos
imul
call
aaa
push
xchg
js
push
jbe
add
xor
aas
out
mov
jl
movl
adc
and
dec
sbb
mov
xchg
mov
xor
sbb
lea
sahf
loop,pn
repz
lods
imul
pop
out
sbb
push
mov
in
shrb
lock
sahf
ljmp
test
xor
pusha
aad
pop
sbb
outsl
stc
xchg
pop
push
mov
adc
ret
mov
xor
jp
sub
pop
mov
xor
add
add
je
dec
xor
sbb
push
inc
subb
xor
xor
jge
ret
lods
aaa
push
xorb
scas
data16
push
xchg
cmp
test
mov
popa
push
adc
xlat
cld
pop
jno
dec
out
pop
or
adc
mov
test
dec
fiadds
push
cwtl
pop
pop
dec
subl
or
js
or
xor
fs
sahf
cmp
and
fstl
and
xor
mov
fadd
xor
inc
les
adc
les
fidivrl
shlb
je
jmp
inc
or
xor
adc
sub
repz
ret
das
inc
filds
in
push
stos
add
jp
lcall
inc
adc
xchg
jecxz
pop
xor
gs
jmp
cmpsb
mov
out
cmp
xor
cmpsb
ret
cltd
mov
insb
xor
jecxz
lret
lds
xor
sar
dec
inc
adc
arpl
lods
xor
into
mov
mov
mov
push
fsubrp
addr16
push
je
mov
mov
xor
dec
inc
jg
std
adc
enter
push
popa
negl
mov
cmp
push
sub
xor
adc
xor
pop
jo
cmpsl
fsubs
popf
sbb
push
jno
rcll
stc
or
testb
xlat
cwtl
pusha
lret
mov
xor
dec
fs
aam
adc
cltd
xor
lret
pop
in
lcall
push
add
cld
push
add
hlt
cmp
xor
in
lahf
adc
cmp
bound
in
je
dec
scas
and
sbb
push
test
rorl
into
push
ret
clc
loop
test
je
ja
out
xor
hlt
sbb
jp
out
fucomip
mov
xchg
imul
adc
xorl
scas
xor
inc
cmp
lock
push
add
dec
xor
jnp
je
data16
xor
sub
sti
mov
clc
ja
imul
cmp
xor
sub
jge
xor
jb
jecxz
push
aas
aad
jae
movsl
xchg
jmp
mov
mov
adc
xor
lods
cld
add
lret
xor
fistpll
hlt
dec
dec
test
push
xor
in
stos
das
xchg
jle
xor
xor
or
adc
fldt
into
cltd
dec
xor
mov
cwtl
ljmp
ret
sub
xor
jb
shlb
jl
xor
scas
test
iret
pop
das
cmpsl
repnz
jne
push
imul
adc
ljmp
mov
mov
sub
mov
cs
push
mov
push
fistl
out
dec
dec
stos
mov
cmpb
xor
lock
ret
mov
jnp
mov
shrb
xor
dec
lret
inc
xor
xor
and
andl
adc
xchg
sbb
notb
mov
adcb
adc
jle
push
ret
mov
jae
pop
push
inc
cmp
outsb
xor
mov
or
sbb
dec
sbb
xchg
cmp
sahf
cmp
inc
fs
ret
jecxz
mov
insl
push
aas
jnp
mov
lods
mov
cmpl
sti
mov
es
sbb
addr16
inc
xor
inc
and
test
jnp
xor
adc
cwtl
xchg
sbb
xor
sub
push
sbb
xor
push
push
imul
lret
xor
and
pop
push
cli
in
test
and
in
xchg
add
insl
sbb
push
xchg
mov
in
sti
imul
pop
adc
repz
aam
shll
inc
add
cmc
loop
dec
inc
icebp
adc
mov
add
sbb
fsubr
js
shlb
and
pusha
int3
iret
push
clc
cmc
mov
test
cmp
adc
push
xor
mov
cld
ja
insb
dec
lock
adc
cmpsb
inc
frstor
xor
fwait
ljmp
stc
dec
hlt
je
add
lret
rcl
pop
sbb
mov
jo
stos
xlat
jmp
jae
adc
pop
test
imul
scas
outsb
push
rep
lds
xor
jge
jae
mov
in
and
or
mov
sbb
pop
xlat
mov
mov
adc
idivb
sub
inc
lods
inc
adc
repz
xlat
cmp
ret
pusha
inc
add
mov
push
les
lea
jb
movsb
ja
fiaddl
addr16
mov
add
shl
xor
call
xchg
jg
fstl
ja
xor
lea
lcall
lahf
cmp
jg
pop
xor
adc
sbb
xor
push
xlat
jb
aaa
in
hlt
push
aam
mov
and
add
enter
add
mov
xor
in
push
pop
ret
xor
mov
loope
es
pop
xor
or
aam
inc
xor
dec
icebp
mov
cmp
ret
or
dec
imul
xor
mov
int3
hlt
dec
sub
pushf
xor
pop
out
sbb
shlb
sub
pushf
insl
cmp
xor
fwait
ror
xchg
push
cmpb
xchg
push
sbb
xor
push
testb
subb
arpl
shrb
cmc
sub
test
pop
inc
xchg
mov
stos
lcall
mov
xor
jge
or
repnz
or
inc
fdivl
out
iret
sahf
sysret
or
adc
aam
xchg
xorb
icebp
push
jnp
and
mov
cmp
pop
adc
enter
or
push
in
add
and
cmc
mulb
cmp
cmp
xchg
push
outsl
clc
inc
hlt
cmp
inc
xor
das
aad
lahf
mov
xor
add
push
push
stos
js
xor
ds
es
jae
mov
jl
inc
aaa
mov
fneni(8087
xor
out
scas
in
outsb
jbe
mov
cld
fbstp
xchg
loop
jp
gs
pop
push
mov
and
stc
mov
add
lock
sbb
adc
mov
aam
xor
adc
push
fcoms
and
pusha
ret
mov
pushf
pop
sub
fisubrl
adc
mov
hlt
das
aas
xor
jns
xor
imulb
shr
mov
stos
adc
mov
or
lods
ljmp
mov
mov
or
mov
in
xor
mov
aaa
lret
inc
cmpsl
shlb
xchg
adc
push
mov
and
mov
imul
mov
add
xor
adc
cmpsb
mov
stc
cld
xor
sbb
rclb
sbb
push
sarl
into
xor
mov
fsubs
loope
paddq
sarl
inc
add
pop
jns
jl
hlt
sbb
test
push
inc
fwait
rcr
push
movl
xor
dec
scas
add
and
cmpsb
and
xor
or
clc
dec
mov
cs
mov
out
test
iret
dec
cmp
xor
pop
jmp
fdivl
cli
and
xor
xor
xor
lock
fidivs
aad
out
xor
inc
push
add
and
in
fnstenv
inc
push
fstpl
mov
arpl
mov
out
ss
mov
dec
subl
xor
cs
add
xor
xchg
push
lods
imul
push
je
insl
xchg
sahf
push
ret
clc
xchg
xor
mov
push
mov
decb
pop
out
xor
xchg
xlat
sbb
cmpsl
jae
out
pop
push
test
lds
cld
pusha
insb
mov
je
outsb
fsubrl
cmpsb
data16
je
pop
sbb
sub
jmp
mov
push
mov
out
and
daa
xchg
mov
push
mov
cmp
unpcklps
mov
lcall
jae
adc
xor
mov
fldpi
jne
lret
xor
daa
sub
cmp
xor
xchg
jnp
sbb
sbb
sub
lea
mov
dec
xor
jbe
jno
sbb
ss
data16
addr16
rorl
sbb
sbb
push
jbe
mov
inc
inc
and
push
xor
lahf
ret
out
mov
mov
xchg
aam
inc
dec
and
scas
call
ja
bound
sbb
xorl
ja
mov
int3
insb
inc
cwtl
or
popf
dec
pop
sahf
sub
daa
jns
shrb
xchg
jns
jg
out
xor
movsb
cmp
int
pusha
mov
outsb
addr16
ficompl
jle
shl
rcrl
into
lret
sbb
gs
cwtl
jmp
add
jp
push
mov
adc
sub
loopne
addr16
data16
dec
inc
dec
lods
push
mov
push
les
pop
push
mov
shl
sub
jecxz
mov
jp
and
sub
xor
std
scas
scas
ret
push
or
and
fnstsw
jb
ljmp
aad
in
shll
pop
repz
cltd
add
ljmp
mov
inc
jb
add
imul
adc
or
subb
icebp
lret
jmp
lret
sbb
xchg
xchg
mov
iret
je
ss
ret
ret
push
bnd
imul
dec
shlb
or
mov
sbb
fnstcw
addr16
jle
xchg
sub
out
or
and
fcoms
add
push
sbb
cwtl
pushf
cmpsl
and
xchg
mov
xlat
push
repz
lods
xor
sub
rcll
jmp
repz
cli
mov
popf
loope
divl
pop
test
jne
fistl
cmpb
adc
aam
or
pop
out
jle
cmp
cmp
push
xor
adc
sbb
cli
dec
out
in
dec
dec
pop
add
jl
hlt
gs
call
les
int
add
mov
mov
ret
push
stos
adc
cmpb
fwait
mov
mov
jo
xor
lods
scas
pop
bswap
dec
add
outsl
mov
cmp
inc
sarb
mov
mov
loopne
push
add
outsl
movsl
andl
incl
jne
pop
sub
jg
push
stc
insb
ficoml
mov
clc
insl
imul
cmp
xor
fdivrl
stos
adc
jb
jp
ror
es
in
xor
cmp
adc
add
sub
add
xor
hlt
fisubrs
sbb
lods
cwtl
push
aaa
hlt
int3
scas
jp
fstpl
inc
stos
pop
xchg
sub
in
xchg
push
lahf
adc
ja
adc
stos
not
sbb
push
lds
add
testl
adc
pop
mov
fimull
jge
sub
lods
dec
sbb
or
add
mov
sub
fstl
int
movsb
lret
xor
jp
iret
or
lret
popa
mov
jb
int3
pusha
not
push
cmp
ret
shlb
xor
enter
mov
jnp
mov
je
jns
lahf
into
pop
add
pushf
inc
aas
test
popl
push
mov
mov
mov
inc
mov
aaa
xchg
pop
mov
mov
in
push
jnp
loop
testl
add
rorl
or
inc
add
sub
or
aad
nop
push
mov
clc
xor
pop
addr16
fs
test
out
jge
lahf
lret
mov
pop
cld
ficoml
push
jp
cmp
or
dec
or
test
dec
jns
mov
xchg
mov
movsb
popf
es
jg
aaa
jle
dec
lock
ja
arpl
dec
cmpsl
dec
data16
mov
mov
pop
xor
add
add
aam
ds
fistl
fs
imul
xlat
inc
adc
push
sub
inc
mov
out
dec
xchg
inc
mov
mov
pop
sub
adc
pop
xor
xchg
xchg
pop
pop
addb
push
cmp
rcll
mov
imul
sub
inc
mov
jbe
lods
pop
dec
jnp
xchg
jl
dec
xchg
popf
sub
push
mov
andb
push
iret
mov
jp
pop
sub
aad
repnz
ret
aaa
dec
push
popf
mov
lods
mov
mov
mov
fidivl
fsubr
dec
addr16
xchg
sub
lcall
push
gs
test
jne
mov
lret
sub
sub
enter
mov
inc
mov
mov
sub
out
sti
mov
pop
insl
or
pop
stc
outsb
insl
ficoml
dec
mov
pop
aad
pop
fidivrl
jl
daa
push
sbb
in
mov
jae
mov
fwait
or
out
sbbl
lahf
and
imul
mov
or
aam
mov
in
cli
sbb
xor
xchg
aam
testb
xchg
or
cmp
sbb
xchg
push
out
lods
pushf
cs
fisubs
and
aam
xor
nop
xor
dec
xor
clc
lds
in
push
bound
push
cmp
jle
adc
sahf
sarb
mov
mov
ljmp
cli
imul
arpl
adc
rclb
xchg
int3
mov
aam
push
xchg
jg
lret
push
jl
jp
xorl
cmc
xchg
fdivs
sbb
jge
lods
xor
popf
ret
jmp
test
sahf
jae
mov
jno
add
sub
fwait
lea
sub
je
out
in
shll
push
fwait
mov
subl
xlat
mov
push
fs
aaa
repnz
mov
mov
cwtl
repnz
aaa
loop
out
sub
jns
arpl
add
in
stc
lea
mov
pop
stos
jb,pt
mov
int
iret
adc
mov
orl
in
mov
insb
jp,pn
test
test
jae
cmc
and
jp
int3
xchg
dec
pop
shll
ficoms
cltd
ds
add
sub
insb
iret
cmp
jp
pop
adc
popf
ss
clc
push
call
mov
ljmp
rorl
enter
sub
jl
in
ret
hlt
xchg
xchg
push
adc
mov
push
cld
in
es
pop
notb
in
cmpsl
cld
jmp
jnp
sub
xor
lds
js
iret
or
insb
in
dec
cmp
xchg
fimull
push
xor
cmp
push
es
jle
enter
in
aam
into
xchg
xchg
xchg
sub
mov
xlat
shrb
das
adc
lods
or
inc
rol
insl
aas
add
mov
mov
push
out
stc
cmp
fidivl
mov
pop
push
lea
shlb
adc
jge
ja
pop
xor
xchg
jmp
lods
out
dec
pushl
mov
cmp
dec
or
sub
pop
lahf
dec
jae
ret
dec
aas
inc
pop
sbb
pmullw
adc
xorb
jnp
jl
jmp
outsl
ret
int3
push
scas
and
test
push
pop
mov
mov
dec
loope
mov
jmp
jbe
fldt
adc
movsb
cmp
cmp
es
sbb
ljmp
inc
mov
xchg
jmp
adc
sti
lods
adc
addr16
or
xchg
cmp
dec
loopne
lahf
mov
xchg
inc
and
mov
push
popf
aaa
cmpl
pop
popf
dec
jnp
loope
shl
inc
pushf
jne
mov
pop
rcrb
adc
popf
inc
in
jle
pop
mov
sub
rcrb
inc
repnz
insb
sbb
stos
xchg
xchg
push
jmp
adc
ss
ficoml
xor
cmp
xor
iret
xor
push
lret
fsubrl
adc
aad
mov
lock
dec
insl
enter
adc
adc
push
ja
shrl
jl
adc
jge
sti
push
sub
lea
jns
movsb
push
lret
test
pop
repnz
lods
addr16
ss
pop
mov
mov
daa
or
xor
cmp
pop
adc
call
in
push
sub
mov
fwait
sub
js
sub
out
inc
inc
shlb
popa
insb
add
mov
add
add
into
aam
dec
loop
jle
aam
sub
push
mov
in
xlat
jp
push
cmp
js
xchg
sbb
aam
pop
push
cmpsb
xchg
das
xchg
lods
jmp
hlt
xchg
push
and
inc
mov
jmp
jmp
nop
cld
lret
out
inc
mov
jne
cld
nop
shr
or
ja
push
sub
adc
into
pushf
test
dec
shr
push
jb
jl
xor
aaa
in
inc
mov
fcomp
insl
inc
adc
out
adc
pop
ljmp
lahf
xor
jge
mov
add
stos
test
mov
fwait
push
stos
add
sub
add
inc
mov
inc
push
dec
enter
repnz
push
jmp
mov
push
lret
inc
pop
into
stc
xchg
xlat
out
cwtl
lea
into
or
dec
mov
sarl
jb
lock
lock
and
xorl
xlat
stos
dec
push
stos
jmp
and
fidivrs
add
sub
rdpmc
jp
lods
adc
fstpt
fldcw
xor
adcb
mov
lahf
outsl
in
xor
mov
push
sahf
dec
in
add
sub
and
and
aam
mov
push
cmp
stos
dec
sbb
aad
sub
int3
pusha
inc
add
xchg
mov
repz
xchg
idivl
mov
xchg
adc
add
mov
das
pop
repnz
adc
adc
push
mov
enter
pusha
mov
push
test
xchg
dec
out
sbb
pusha
pushf
xlat
jl
bound
lock
fnsave
int3
xor
lea
fs
stc
ja
inc
in
out
pop
adc
fs
out
jl
mov
inc
adc
xor
push
push
mov
ror
or
pop
push
cmpsl
ja
add
out
push
cld
arpl
jb
in
adc
daa
repz
sbb
pop
cli
test
fstp
cmp
inc
aad
and
in
cwtl
adc
xchg
dec
push
ss
and
dec
jnp
mov
pop
jne
push
adc
cmp
nop
lds
mov
xchg
mov
inc
lcall
and
call
clc
popa
push
adc
jg
dec
lods
add
das
inc
ret
mov
cmp
std
push
je
jb
pop
lret
sbb
aam
icebp
in
xlat
jecxz
push
cmp
lret
mov
sbb
fcompl
sub
or
addl
cmp
out
rorl
cmp
fwait
sub
sbb
push
pop
sub
push
pop
jle
inc
jo
jl
popf
insb
xchg
cmp
lahf
mov
jmp
mov
push
nop
and
xchg
arpl
pop
inc
test
rcrl
adc
clc
stos
ds
cmp
mov
inc
pop
xor
out
mov
mov
imul
push
fmuls
mov
mov
adc
cmova
ja
jp
call
adc
pop
ret
dec
outsl
add
fs
inc
xchg
movsb
subb
adc
pushf
fisubrs
repnz
in
aam
xchg
xor
cmp
push
adc
push
adc
push
sub
jns
js
mov
pop
sub
sub
leave
jne
scas
nop
sub
dec
dec
mov
adc
pop
fidivrl
test
pop
popf
in
mov
daa
gs
xchg
test
mov
sub
xor
inc
push
out
repnz
repnz
lahf
cmp
shll
cmc
pop
xor
xchg
hlt
push
cld
inc
bound
bound
fs
cld
aad
pop
sub
and
jns
or
add
call
aaa
daa
sub
pop
popf
rcrb
mov
cmp
in
add
inc
dec
add
movb
sub
xchg
jae
sub
push
repnz
inc
mov
lahf
cmpsb
mov
cmpsl
or
push
iret
lock
dec
f2xm1
mov
out
adc
sbb
cs
in
mov
jne
iret
out
ret
adc
data16
lret
pushl
mov
xchg
int3
jle
aam
fldt
jmp
cwtl
js
mov
mov
imul
in
mov
push
push
adc
xchg
fadds
lods
int3
jbe
ds
mov
rolb
jge
xchg
fdivrs
pop
filds
enter
xor
or
sub
xchg
push
das
sbb
out
mov
pop
jl
jg
adc
imul
add
aad
sub
subl
jl
repz
jl
push
sahf
movsb
sarb
or
inc
pop
pop
enter
lret
aad
setae
sub
movsb
cmp
popf
sub
pop
out
stos
jge
in
sub
jbe
mov
into
pop
lahf
jge
bound
or
leave
fsubrs
dec
test
cwtl
into
xchg
cltd
xchg
cmp
adc
fs
sti
nop
push
jo
cmp
pop
adc
test
out
addl
xchg
push
mov
pop
cmp
sub
mov
jb
in
xor
aaa
cmp
xor
push
fs
mov
inc
dec
and
cwtl
movsb
jne
fwait
add
push
das
jne
xchg
dec
mov
push
test
mov
jnp
cmp
shll
fcmovnb
dec
push
je
repnz
xchg
hlt
pxor
or
adc
scas
shll
pushf
and
pop
rol
mov
or
xor
add
leave
sub
sahf
iret
xchg
and
nop
inc
outsl
inc
cld
mov
ss
popf
sub
btr
mov
add
cmp
add
add
jbe
sbb
in
fsubl
shrb
dec
sbb
sbb
scas
mov
adc
loop
or
mov
call
xchg
data16
into
push
stos
in
ljmp
push
stc
dec
ja
push
mov
xor
lods
enter
aam
jge
push
fidivrl
sti
sbb
lods
int
dec
insb
jne
inc
clc
fldl
sbb
add
or
add
das
mov
jns
fs
stos
test
sbb
arpl
call
xchg
test
sub
or
mov
xor
or
mov
and
fstpl
mov
sarb
scas
add
in
cmc
xchg
sbb
or
push
xchg
pop
stc
mov
imul
xlat
mov
ret
movsb
imul
call
out
lods
sub
push
ja
nop
bnd
psubsw
xchg
dec
mov
add
jp
mov
es
pop
ret
sbb
or
mov
inc
and
xchg
jnp
je
xor
es
xor
xchg
xor
jae
mov
repnz
add
sbb
cmp
xor
in
into
shl
ss
sbb
dec
xor
push
mov
repz
stos
add
add
fs
push
clc
xchg
call
cmp
xor
dec
outsb
in
out
cmc
dec
popf
push
cmp
pusha
add
outsl
test
jp
add
rorl
divb
aas
lret
daa
sub
or
pop
adc
xor
imul
push
and
inc
mov
pop
les
xchg
jnp
cld
sub
push
insb
sarb
sbb
je
call
jmp
js
sbbl
mov
mov
bound
aam
sti
dec
dec
push
aad
xchg
daa
push
inc
shll
push
in
mov
or
pop
cmp
mov
test
adc
mov
xchg
add
int3
jle
mov
fwait
or
outsl
sub
and
xor
lods
icebp
push
out
mov
push
sub
in
ret
jmp
cmp
xchg
int3
jmp
pushf
or
sub
inc
ds
call
mov
rol
lods
ffree
pop
adc
mov
xchg
adc
or
sub
in
aad
ret
push
sahf
add
daa
push
int3
sub
mov
mov
cmp
xorb
jae
or
orl
mov
inc
rcl
xchg
sti
jae
clc
sub
bnd
xor
inc
sub
xor
fsub
mov
add
lds
xchg
push
xor
dec
lods
inc
int3
sub
leave
mov
sub
mov
leave
in
pushf
cwtl
insl
leave
or
fistps
jno
imul
push
inc
repz
lods
or
or
in
inc
add
sbb
imul
or
cmc
mov
mov
call
cli
and
or
hlt
dec
fbstp
or
push
cmp
insl
xor
fisubrl
add
aad
xor
push
jnp
inc
fmuls
ret
les
add
sub
leave
adc
movsb
jbe
xor
daa
aas
pop
adc
or
shll
daa
sbb
cmp
adc
cvttps2pi
and
iret
sub
xchg
je
jnp
outsb
lock
pop
scas
xlat
xchg
pop
shlb
pop
inc
test
stos
mov
ja
lods
rclb
in
jge
sbb
cmp
std
les
push
hlt
xlat
sub
adc
ljmp
mov
inc
push
pop
stos
inc
in
fildl
and
sbb
push
cmp
test
lock
lea
jno
adc
jmp
or
sub
sub
and
mov
dec
or
push
pushf
test
arpl
mov
or
repnz
xor
les
leave
pop
xor
sbb
xchg
mov
sbb
or
sub
nop
push
sub
or
inc
xchg
adc
mov
pop
ss
test
sbb
in
lods
or
hlt
or
or
xor
ja
divb
fdivp
mov
and
lret
loopne
cmp
mov
lcall
xor
mov
push
xchg
repz
adc
sub
or
xor
ffreep
pop
push
mov
push
hlt
shlb
fxch
pop
jge
mov
aam
and
imul
inc
stc
hlt
xor
xlat
movsb
cmpl
pop
ja
cmp
fnstenv
push
jbe
sub
aaa
daa
cs
rcrl
fisubs
mov
adc
popf
inc
shr
rclb
push
stos
negb
sub
or
jb
adc
lods
daa
push
call
xor
mov
in
aas
mov
jns
adc
and
adc
mov
leave
test
dec
addl
in
test
xor
movb
sbb
dec
jge
shlb
add
dec
into
out
push
add
pop
lods
fstl
push
sub
cli
xor
pop
ret
dec
sarb
movsl
insb
out
andb
jb
repz
shll
jns
push
stos
outsb
mov
int3
or
pop
jmp
cmp
mull
cmp
addr16
out
cmp
xchg
or
dec
fsubrl
in
popf
es
pop
movsl
aad
dec
xor
sbb
adc
pop
cwtl
push
lcall
popa
call
adc
xor
sub
fnstsw
imul
xchg
xor
aas
cmp
imul
push
test
test
sub
cmpsl
jbe
outsl
jne
adc
call
cwtl
notl
xchg
aaa
xchg
xor
xchg
push
in
pop
inc
scas
push
pop
aaa
jge
mov
aad
push
and
add
int
out
es
jo
xchg
sub
sub
sbb
pop
outsb
add
in
test
int3
push
jl
popa
outsb
jmp
insb
xor
push
lea
and
popa
add
popa
das
sbb
repnz
mov
aas
pop
sbb
in
jne
es
pop
mov
cmp
mov
out
jne
aad
int3
jge
jnp
inc
and
adc
mov
add
adc
push
test
jne
insl
mov
lcall
ljmp
sub
arpl
mov
add
xchg
jnp
loop
mov
mov
adc
fnsave
in
or
aad
lcall
dec
dec
lret
lcall
mov
lods
ret
inc
mov
xor
pop
push
and
sub
mov
adc
orl
xchg
jecxz
inc
dec
jbe
divb
es
sub
orb
movsb
cli
fidivrs
iret
lods
dec
pop
inc
daa
sub
je
les
adc
push
adc
sub
mov
bound
add
dec
arpl
int
cmp
nop
into
aam
enter
mov
mov
cmc
mov
mov
fmull
xlat
lods
mov
call
and
sub
pop
jle
and
in
sbb
mov
adc
js
je
sub
xchg
fidivrs
in
nop
add
lock
cmp
jle
or
andb
xchg
frstor
in
xchg
nop
repz
js
adc
fst
imul
arpl
sub
mov
es
jo
orb
test
sti
jp
scas
in
hlt
mov
jbe
imul
sub
fs
faddl
fucomip
pop
rorb
sarb
or
imul
xor
loop
loope
stc
lahf
hlt
xor
cmc
push
sub
and
inc
mov
lret
js
out
pop
imul
pop
fisubrl
test
imul
out
cmp
cmp
cmpsb
mov
out
push
push
lock
push
ss
pop
jae
cmpsl
subl
bound
xchg
sbb
imul
lods
aam
cmp
or
push
inc
jp
cmp
and
push
adc
push
and
bound
jp
push
cmp
lods
xchg
jle
adc
xchg
dec
mov
sbb
enter
aaa
rclb
pop
sbb
jb
nop
adc
lods
out
fdivrs
xlat
test
mov
mov
das
lods
movsl
mov
push
pushf
cmp
mov
lret
xor
pushf
mov
push
int3
or
cmp
dec
cmc
cmp
scas
test
mov
xchg
mov
shlb
ja
lock
into
xchg
mov
add
xor
lahf
loopne
dec
jl
es
popa
repz
mov
push
icebp
push
cmp
and
loopne
lods
into
jbe
mov
adc
mov
adc
in
and
std
dec
mov
jg
mov
insl
fdiv
mov
cmpsl
fdivs
in
gs
xchg
jae
test
cli
adc
xor
cwtl
pop
imul
insb
add
lret
and
xchg
ficoml
lcall
arpl
in
lods
jg
dec
fidivrl
xchg
adc
jl
jns
call
stos
or
xor
movzbl
push
mov
mov
enter
ret
cwtl
popf
les
popf
cmp
cmc
popf
rorb
nop
jo
repz
cmp
and
fstp
jle
or
mov
xlat
xor
into
and
xor
popf
lods
ds
aam
sarb
sarb
jg
push
jns
inc
outsb
and
addl
out
cmp
fcoml
push
lds
mov
test
loopne
push
mov
imul
pop
decl
ja
lock
fnsave
inc
rorb
aam
dec
in
daa
adc
iret
sbb
lods
pop
lods
scas
cmp
call
mov
sub
fucom
imulb
ret
jge
xchg
scas
jl
inc
aas
faddl
pop
lret
sub
adc
push
sahf
sbb
dec
orb
or
adcl
pop
jg
cmpsb
sahf
aam
stos
mov
call
test
divb
je
push
cmpsb
xor
xor
mov
cmp
in
cmp
jnp
incb
popl
lcall
push
sbb
insb
pop
jl
cmp
in
cmpsl
lret
adc
enter
adc
fiaddl
inc
notrack
into
dec
pop
sub
sahf
mov
in
repz
push
push
pop
xchg
jmp
ja
jb
addr16
fcomps
pop
lods
aaa
lock
mov
xchg
and
bound
mov
leave
or
sub
in
faddl
sub
jl
pop
cmp
gs
and
or
mov
aam
push
sbb
pop
mov
sahf
dec
mov
push
push
pop
jno
ret
xor
test
sbb
cmp
mov
mov
xchg
or
in
ret
cwtl
in
xor
inc
or
dec
into
mov
sti
mov
sub
pop
aam
js
daa
stc
call
fldlg2
stos
mov
sub
aad
sbb
fadds
mov
imul
fisubrs
push
push
cmp
inc
arpl
sahf
cld
clc
xchg
pop
ds
loop
lret
lret
and
ret
push
xor
push
pop
adc
cmp
fldcw
inc
out
or
imul
pop
mov
xor
dec
dec
sbb
addb
cwtl
jl
xlat
sub
sbb
in
in
mov
push
push
ret
pop
imul
mov
sbb
mov
into
inc
sub
jb
mov
and
xor
jle
fwait
cld
pushf
push
lods
or
add
repz
scas
leave
cmp
inc
das
es
sahf
sub
outsl
out
in
push
push
out
dec
sbbb
gs
ret
nop
add
jno
in
sbb
into
movsl
ja
aam
lods
xlat
popa
mov
mov
or
and
ret
out
xchg
adc
fldcw
push
imul
jmp
adc
sub
add
jb
cmpsl
test
mov
lret
pop
scas
push
inc
cltd
jbe
dec
int3
decb
popf
mov
arpl
into
sub
test
out
add
pop
outsl
mov
jne
call
nop
cli
jne
xchg
adc
sub
inc
adc
aas
in
call
jae
jnp
sub
inc
repz
sbb
insl
xor
lock
loope
cmp
cs
popf
pop
mov
sub
mov
mov
scas
adc
pop
mov
add
lods
adc
mov
sub
inc
jmp
int
add
ljmp
rcrl
mov
scas
hlt
pop
test
cltd
adc
in
pop
adc
or
mov
out
inc
shl
mov
xchg
fdivl
sub
fwait
mov
adc
test
lret
loopne
mov
int
test
push
cli
xor
or
push
jb
addr16
push
in
mov
adc
lods
mov
push
jp
sub
int
pushf
mov
mov
or
pop
fwait
cmc
lods
xlat
cwtl
adc
mov
stc
in
lods
testl
std
sub
in
insl
fs
adc
pusha
adc
push
push
sahf
dec
xor
or
mov
sub
test
add
sahf
adc
mov
lahf
mov
test
or
inc
fldt
fs
call
jmp
fsubr
dec
sbb
sbb
in
xchg
movsb
mov
movsb
jecxz
out
and
add
mov
hlt
sbb
ljmp
fisubl
loopne
push
rolb
push
cmp
lret
pop
push
test
orl
push
cmc
adcb
mov
shrl
xor
int3
push
jg
cmp
rorl
push
es
add
outsb
mov
jno
pop
in
aam
mov
es
inc
cmpsb
xor
adc
test
dec
inc
call
or
test
les
in
mov
dec
xlat
or
gs
xor
rcl
dec
xor
out
jg
imul
in
repnz
jmp
mov
mov
or
inc
aaa
adc
insb
and
fldl
jns
jo
ds
adc
gs
in
rcrb
and
inc
cmp
jne
pop
push
out
xor
jnp
cmp
mov
icebp
rcrb
pop
arpl
popf
sub
xchg
int3
xor
insb
mov
xor
out
adc
jae
std
add
lea
sbb
in
iret
sbb
cwtl
mov
filds
in
mov
sub
xchg
int3
pop
mov
xchg
decb
mov
mov
rol
shlb
daa
stos
mov
scas
pop
sub
outsb
xchg
mov
mov
int3
dec
jg
js
or
sbb
mov
mov
movsb
add
lods
jne
lahf
sub
adc
push
adcl
inc
xor
xchg
xchg
outsb
add
nop
pop
jne
add
jge
jo
jl
cli
aas
sahf
out
push
inc
jbe
flds
ljmp
xchg
daa
xlat
pop
jnp
out
int
out
shlb
mov
lea
or
push
sub
and
jbe
mov
or
mov
je
lods
or
test
das
inc
sub
mov
call
stos
sub
cwtl
or
shl
arpl
lea
mov
jne
rcrb
mov
adc
xchg
fwait
lret
mov
mov
mov
sub
or
add
ljmp
xchg
and
sub
xchg
insl
bound
or
jne
lahf
fwait
dec
aas
movsb
xor
lahf
pop
mov
js
add
push
adc
push
pop
sub
mov
sbb
xchg
adc
sarb
or
out
andl
sub
dec
pusha
pusha
lods
nop
shlb
mov
jno
inc
xchg
add
ljmp
inc
jo
leave
icebp
icebp
rol
xor
or
xorb
stos
sub
lret
data16
inc
push
scas
fxch
push
insl
add
pmaxub
push
jnp
adc
jp
xor
and
lahf
ljmp
mov
xchg
mov
stos
or
int3
stos
jp
inc
xor
push
jmp
sub
xor
add
push
add
mov
hlt
xchg
jne
lret
xor
fsubrs
xlat
add
add
mov
daa
sub
scas
test
out
xor
xchg
sub
out
fisubrl
xchg
insb
or
push
cmc
adc
xor
movsl
imul
inc
pop
icebp
mulb
xchg
in
xor
cmp
data16
cmc
cmc
outsl
rcr
imul
fwait
jl
dec
insl
sarl
mov
adc
sub
push
iret
adc
aaa
ss
mov
xchg
push
xchg
jns
add
in
cmp
sti
adc
aad
and
in
fwait
lds
lods
es
dec
fadds
mov
pop
pop
mov
xchg
push
push
adc
repz
hlt
lods
xchg
push
sbb
arpl
aaa
add
call
lods
xor
mov
sub
lahf
scas
inc
mov
jle
imul
xchg
cmp
add
xchg
fcomps
lretw
mov
out
mov
sub
sarl
int3
lret
cmp
sub
scas
and
outsl
mov
roll
aam
pop
jnp
add
js
pop
mov
pushl
shll
mov
lods
xor
std
out
call
enter
test
iret
sahf
call
pop
pop
push
inc
adc
jne
push
les
push
movsb
push
popa
push
jge
pop
scas
jbe
outsb
cs
lret
sub
fprem
aas
gs
lock
cld
pop
xchg
fs
popf
or
stos
test
mov
sub
popf
pop
in
rorb
test
dec
test
movsl
int
dec
out
xchg
xchg
fdivrl
js
jne
xor
inc
cmp
cli
loopne
test
iret
into
sbb
jl
daa
adc
push
mov
xlat
rol
mov
sbbb
lods
int3
cmp
mov
lods
ljmp
xchg
xchg
pop
les
mov
dec
xchg
int
leave
xchg
nop
movsb
sbb
divb
leave
cmp
pop
rolb
sub
xor
in
mov
add
aam
sub
inc
jmp
loope
call
repnz
add
out
dec
pop
shrb
or
jg
adc
sti
int3
mov
addr16
stc
insb
ret
fidivs
pop
arpl
push
test
leave
les
gs
add
bound
mov
xchg
ret
sbb
out
je
or
fisubrs
dec
add
add
jne
mov
popa
stos
lcall
int3
lock
das
stos
dec
bound
sub
jb
mov
jb
daa
js
std
push
pushf
in
pop
xchg
mov
jmp
pushf
hlt
dec
add
or
add
inc
addr16
sbb
es
inc
subl
pop
mov
ret
inc
popa
ss
xlat
mov
adc
jg
add
repz
leave
insb
lock
shrl
jns
mov
adc
rorb
lods
cmp
fimuls
sarl
daa
mov
and
sub
mov
mov
mov
jl
hlt
repnz
and
das
or
inc
popa
ficomps
pusha
sbb
hlt
xchg
jl
sbb
or
testl
sub
push
pushf
cld
or
fcmovbe
push
sbb
js
xchg
out
xchg
push
shlb
sub
cmp
test
xchg
lods
mov
lock
aad
addr16
mov
leave
mov
repz
or
lea
js
fcomps
inc
sub
mov
outsl
xor
cwtl
out
aaa
pop
sbb
xor
in
push
movsl
loopne
sub
push
mov
jne
out
xor
ds
mov
popf
xchg
fsubrs
sti
cmp
lret
push
sahf
xor
push
sub
jo
or
mov
dec
popf
mov
clc
cmp
enter
in
lret
nop
jp
shll
dec
jns
mov
orb
xchg
push
lods
or
sub
cli
adc
shll
mov
test
enter
sub
jmp
inc
fsubl
fs
leave
adc
dec
stc
push
or
aam
sub
jb
cld
mov
fnsetpm(287
jns
movl
out
pop
pop
adc
sub
mov
inc
pushf
mov
mov
std
pop
cmp
insb
rol
xor
fld
push
inc
or
jl
add
fldt
and
add
test
lods
roll
jg
inc
gs
lahf
xor
out
je
push
add
sub
ret
call
xor
in
iret
sbb
out
flds
push
xor
sub
fwait
daa
cli
dec
je
in
into
adc
or
sub
loope
test
cmp
hlt
adc
lock
sub
in
movsb
int3
fdivrl
dec
cld
int3
mov
or
mov
mov
xor
xchg
push
aad
ss
push
push
mov
mov
sti
xchg
or
fbstp
jbe
test
mov
cmpsb
je
mov
test
xor
mov
xor
movsb
sbbl
mov
sub
or
pop
int
jo
lret
cmp
call
test
and
jg
loope
cli
xchg
jb
xchg
and
sbb
xor
push
mov
int3
ret
in
mov
adc
add
xor
ret
sub
in
fsts
out
mov
sbb
pusha
gs
clc
lods
shr
xor
mov
or
jbe
test
aad
push
xor
dec
cmp
mov
arpl
adc
lret
adc
mov
mov
pop
int3
jbe
jnp
add
mov
xchg
fistl
in
dec
lods
negl
push
pop
ds
sti
sub
aas
lcall
test
xor
dec
aam
adc
mov
inc
mov
inc
mov
and
dec
and
inc
xchg
or
mov
mov
pop
or
push
cltd
dec
push
cmp
jne
daa
cwtl
out
cmpsb
adc
lahf
jns
mov
jge
mov
mov
push
jecxz
frstor
int3
loopne
lock
cltd
lahf
push
mov
push
mov
or
scas
mov
lods
ja
mov
adc
add
leave
incb
mov
ss
cmp
pushf
and
pusha
xchg
cmp
ja
clc
lcall
sub
add
inc
fs
sub
in
popf
ds
or
pop
popf
ret
adc
jle
pop
add
shrb
jo
xor
sub
cld
pop
out
dec
loop
inc
sub
sti
pop
test
mov
mov
imul
xchg
dec
pop
push
sbb
pusha
sub
orb
sub
push
jns
push
dec
push
inc
adc
dec
cwtl
fstl
enter
jmp
stc
jl
sbb
jecxz
out
int
rcrl
xor
xchg
dec
mov
daa
jge
clc
sbb
pop
lods
aam
pop
or
cwtl
popf
repnz
xchg
out
adc
or
enter
pop
test
sub
stos
push
decb
jne
dec
or
in
loopne
pop
sub
out
sbb
push
subl
add
sub
sub
fnstenv
xchg
push
mov
rorl
mov
mov
aam
pop
test
pusha
repz
mov
and
xor
mov
mov
iret
mov
loopne
and
push
or
add
jg
daa
mov
mov
jbe
adc
push
push
fldt
xchg
cli
ja
xchg
sub
add
in
mov
add
inc
lods
aaa
into
mov
and
pop
add
adc
test
lods
dec
fildll
mov
jbe
pusha
cmp
push
add
fs
pushf
jge
jmp
int3
jl
xor
shlb
aas
jge
adc
loop
adc
jecxz
add
cmp
ja
mov
sbb
loope
jbe
popf
cs
orb
scas
and
dec
lock
pop
pop
sar
dec
out
mov
inc
call
push
xchg
push
jns
push
int3
fisttps
xchg
push
dec
lds
repz
mov
xor
lods
jne
cmp
mov
xchg
rclb
sub
test
add
lods
das
loopne
not
adc
dec
jns
dec
cld
adc
sbb
adc
inc
jmp
and
or
mov
inc
adc
enter
pop
cmp
push
push
cs
or
jl
push
jle
lods
movsb
insl
into
sub
in
and
daa
icebp
ljmp
iret
bound
add
insb
jae
fisttpll
and
jne
insl
mov
ret
lods
mov
lods
jnp
pop
jmp
js
mov
xlat
shl
sub
lcall
lds
mov
out
inc
pop
xor
fldcw
dec
iret
sub
sbb
xor
ljmp
cmp
or
out
in
mov
push
sub
push
test
jg
adc
into
mov
test
cmp
push
adc
xchg
push
and
adc
scas
add
out
dec
test
sbb
aas
adc
popa
push
inc
dec
jae
mov
mov
mov
leave
into
sub
pop
lcall
mov
sub
aam
aas
cltd
adcl
imul
xor
movsl
rcr
scas
cmp
sbb
mov
lods
sbb
sub
testl
push
fs
mov
xor
and
decl
test
mov
adc
pop
jo
and
adc
pop
inc
rorl
aas
mov
xchg
dec
je
movsb
int3
das
push
xor
cltd
sub
push
xchg
adc
rorb
insb
mov
and
dec
xor
fs
push
push
adc
fisubs
sbb
dec
xor
lret
push
aas
mov
aad
xor
jl
jbe
cmpsl
pop
inc
push
xor
or
leave
outsl
dec
inc
repnz
pop
iret
inc
xor
int
xor
mov
cs
insb
imul
mov
fs
mov
dec
dec
fbstp
divb
pop
movsb
fcoms
push
inc
push
jecxz
xor
xchg
xor
psubq
push
into
pop
into
xchg
sbb
inc
pop
loopne
jmp
sub
push
pop
dec
cmp
aad
sbb
gs
cmc
mov
ds
clc
sahf
and
mov
out
lahf
aas
and
call
add
pushf
add
jge
inc
insl
enter
push
mov
mov
jae
scas
sub
xor
cmp
xor
or
pop
pusha
sbb
arpl
mov
push
push
add
mov
sbb
aam
adc
push
mov
hlt
jle
cwtl
xor
ret
repz
xor
mov
pop
pop
push
lcall
outsl
cli
lods
xor
rolb
push
push
xchg
jg
ds
bnd
sbbb
pop
hlt
imul
jmp
xor
rolb
mov
cmpsl
inc
loop
adc
ja
push
icebp
test
pop
lods
fdivr
xchg
inc
xor
mov
and
scas
xor
bound
lods
xchg
stos
loop
mov
push
mov
jg
je
lods
mov
aam
jmp
cmp
dec
jp
add
mov
sub
xor
mov
stc
xor
xor
mov
outsl
mov
inc
adc
cmp
inc
jmp
xor
je
int3
pop
pop
rolb
mov
notb
das
mov
xchg
or
ret
fwait
aad
dec
aam
mov
pop
xor
mov
mov
xor
sub
sbb
cmp
xor
mov
xorb
push
movsb
xor
push
ja
jne
or
aam
mov
rol
cli
stc
lahf
xchg
xchg
shr
fidivrs
xor
mov
imul
and
je
cmpsl
cld
adc
mov
dec
loope
dec
pop
fucomp
push
shlb
jg
aad
adc
adc
stc
loopne
mov
repnz
lods
mov
push
or
out
xor
jno
das
jmp
in
push
push
int
add
xor
or
xor
xor
addr16
add
lods
adc
xchg
scas
add
in
cmpsb
mov
aas
out
push
jb
adc
iret
add
xor
fscale
arpl
arpl
in
lods
pop
es
xor
cmp
push
inc
push
jb
sbb
mov
lcall
fiaddl
cmp
and
dec
aaa
js
stos
xor
mov
movsl
insl
mov
pushf
mov
dec
mov
cltd
lods
sub
scas
cmpsb
jo
mov
mov
cli
pushf
andb
mov
xor
cld
add
xchg
lret
faddl
xor
or
sbb
test
adcb
loop
mov
das
and
sub
adc
push
out
xlat
sub
sub
adc
mov
cmp
int
cli
mov
mov
dec
hlt
fistpll
mov
les
sbb
mov
mov
cmc
mov
pop
cli
dec
pop
rcl
ss
test
and
push
scas
pop
out
jae
cmc
xchg
mov
push
imulb
clc
outsb
sbb
je,pt
dec
jnp
popa
pop
xor
rcrb
roll
push
ja
inc
jbe
mov
mov
int3
pop
aaa
mov
lcall
push
mov
cmp
nop
icebp
mov
je
rcl
xor
and
out
ss
loope
push
fidivs
xchg
lods
xor
mov
xor
cltd
mov
and
fcomi
and
xor
daa
movsl
jo
pusha
outsb
xor
dec
jle
clc
jp
or
lock
add
sbbb
jge
add
negb
test
repz
enter
xor
mov
test
push
lea
and
subb
xor
xor
test
sbb
loope
aaa
imul
push
add
mov
pmuludq
xor
aas
iret
cmc
call
stc
in
sbb
rcr
into
inc
repz
orl
xor
call
iret
in
push
xor
out
addr16
insl
add
shll
int3
xchg
cmp
ja
dec
push
xchg
fldt
popf
pop
xor
stos
lods
je
mov
arpl
xchg
xchg
cmp
ficoml
es
bnd
push
push
xor
nop
pop
jne
sub
mov
sbb
fstpt
cltd
dec
je
lret
xor
push
dec
in
sub
orl
cmp
repz
je
cwtl
jnp
in
fldcw
orb
mov
imul
push
divl
call
mov
add
fwait
je
dec
xchg
shll
and
adc
add
mov
push
cmp
pop
pop
push
hlt
sub
xor
xor
call
xor
or
xchg
test
idivl
fwait
sbb
xor
xchg
cld
lret
nop
fbstp
push
xor
and
xlat
cmp
rorb
push
xchg
mov
push
hlt
sub
xchg
sub
push
mov
test
add
push
lods
xor
push
push
scas
fcomi
jne
add
sahf
xchg
sbb
nop
xor
or
je
xor
adc
dec
adc
mov
shll
fwait
xor
ret
cmp
fdivp
xor
sarb
mov
sub
movsb
push
repz
adc
arpl
and
pop
enter
jo
inc
mov
pop
and
or
or
out
shl
rorb
arpl
addb
sbb
call
push
adc
clc
pop
ljmp
mov
xchg
jle
and
inc
xor
pop
lahf
push
sub
add
scas
inc
je
xchg
add
push
les
je
test
cmp
sub
add
and
inc
ja
addr16
pop
lds
roll
or
je
sbb
xor
sub
jne
xor
cld
inc
stc
test
in
icebp
xor
xchg
rclb
xor
xor
sub
fnsave
xchg
dec
out
lods
jns
xor
inc
add
repz
enter
mov
jbe
xor
clc
outsb
mov
mov
push
out
push
pop
xor
dec
pop
cltd
fwait
imul
xchg
adc
aaa
sub
mov
out
sti
and
and
lcall
pop
xchg
sarl
sti
xor
pop
cltd
jbe
mov
xor
cmp
xchg
hlt
mov
popw
test
int3
insl
push
clc
dec
pushf
daa
cmc
xlat
pop
xor
dec
repz
rclb
mov
xchg
sub
mov
pop
xor
adc
pop
jge
jbe,pn
sbbl
push
adc
mov
xor
int3
int
sbbb
inc
and
jp
scas
sbb
hlt
pop
lods
ljmp
stc
in
cmpsb
addr16
and
ss
sbb
xchg
push
or
dec
arpl
and
adc
mov
je
fidivs
js
mov
addl
pop
int3
sub
jae
or
cmpsb
rcll
cmp
hlt
cwtl
sub
mull
mov
push
jbe
add
jns
inc
imul
faddl
and
je
sub
pop
pop
xchg
mov
ficomps
loop
cmp
push
mov
movsl
nop
adc
mov
cmp
or
lcall
std
popl
adc
cmp
pop
xchg
adc
sub
jae
out
xor
adc
test
out
idivl
leave
inc
jp
stos
arpl
js
call
pusha
inc
lods
cmpsl
cmp
and
pop
sbb
jnp
neg
stc
ds
or
loopne
ss
into
push
lods
add
std
std
push
jo
mov
mov
repz
mov
cmpl
int3
rorl
mov
ss
mov
pop
pop
mov
daa
and
xor
imul
test
ss
pop
das
inc
mov
sbb
inc
sub
in
int3
push
pushf
mov
sbb
js
lahf
inc
fs
or
jae
fistps
jns
in
hlt
sub
imul
jp
aas
xor
hlt
adc
in
mov
or
inc
sub
and
push
sub
jb
aad
pop
jg
mov
ds
mov
adc
push
inc
sub
mov
xlat
imul
rclb
push
push
test
sub
fldenv
inc
cmp
or
mov
mov
bound
in
dec
sub
std
jae
aad
repnz
stc
in
or
inc
hlt
inc
mov
mov
fwait
in
mov
aam
loope
rcll
jns
subb
sti
adc
xchg
push
bound
icebp
mov
rcll
call
das
xchg
adc
gs
aam
jg
inc
jle
dec
sub
data16
sbb
imul
xchg
sub
outsl
adc
lret
lds
cmp
ja
ret
cmp
push
or
lods
add
sbb
test
pop
fimuls
loop
pusha
adc
gs
and
dec
inc
push
stc
inc
loope
xchg
addr16
mov
cmpsb
shr
inc
jecxz
xor
dec
pushf
mov
sub
pop
pusha
cwtl
inc
cmp
push
mov
cmp
andb
ja
dec
loop
mov
sub
inc
std
and
lods
or
inc
rcr
hlt
in
lods
test
in
sub
cwtl
ljmp
push
push
lret
cmp
or
imul
call
jp
push
or
mov
or
iret
loopne
ljmp
shl
cmpsb
cmp
adc
dec
adc
iret
ljmp
push
and
scas
pop
jecxz
cmpsb
movb
and
shr
in
xchg
lahf
sbb
push
fwait
pop
add
pop
sub
lret
lock
test
shll
lds
psrad
add
sbb
lret
imul
cmc
or
pop
push
cmp
push
xchg
inc
pop
lock
faddp
or
mov
mov
repz
jp
and
cwtl
pop
push
inc
lds
sbb
and
mov
bswap
push
mov
fildl
dec
add
jae
clc
pop
aam
sub
aaa
lock
and
sbb
lock
xor
add
aam
xor
mov
mov
mov
loop
mov
shrb
cmpsl
adcl
hlt
repz
les
xor
adc
shlb
cmpsl
inc
fbstp
out
mov
cmpsb
pop
movsl
pushf
idivl
mov
xchg
lahf
ja
mov
mov
or
xor
dec
mulb
stos
hlt
pushf
pop
xchg
insl
xchg
xor
mov
jp
xor
push
in
fs
pop
dec
mov
lods
and
and
xor
out
out
add
xchg
fiaddl
mov
jo
or
xor
jmp
and
sbb
xor
sbb
notb
call
mov
xor
jle
pop
inc
push
fwait
mov
out
xor
pop
nop
push
imul
xchg
xchg
inc
sbb
cmp
ret
cmp
test
xor
icebp
xor
jmp
add
xor
push
ljmp
or
xor
jb
xchg
sbb
int3
xor
lcall
xor
cli
out
mov
sbb
fsubs
pop
sbb
call
xor
cmpsb
mov
mov
xchg
pop
mov
pushf
jl
sbb
sub
mov
add
inc
test
orl
adc
cmp
dec
in
pop
out
pop
xor
mov
pop
ret
clc
mov
push
jae
inc
jnp
dec
adc
inc
mov
test
lock
add
jl
and
lret
or
xor
push
sub
dec
pop
mov
hlt
mov
mov
add
inc
xor
fcoml
xor
push
xchg
cmpsb
fdivr
mov
xor
add
sahf
mov
jb
adc
ss
movsl
inc
popf
mov
sarb
adc
and
pop
cmp
jno
xor
push
sub
subl
pop
dec
sub
push
out
pop
pop
stos
xor
mov
xor
out
arpl
stc
adc
jns
das
or
hlt
test
or
fnstenv
pop
jnp
fistpll
rclb
je
xor
add
push
imul
mov
sarb
mov
ds
cmp
adc
js
cmc
xor
pop
jle
jg
inc
push
jae
push
icebp
out
sti
xor
pop
std
mov
iret
test
mov
sbb
jne
je
pushf
xor
or
push
dec
pop
sbbl
cbtw
decl
std
xor
sbb
add
aad
cmpsl
xor
fstpl
inc
push
xor
ret
mov
mov
in
popa
xor
sbb
test
testb
mov
jnp
push
xor
sbb
mov
xor
stos
xchg
fs
lcall
fstpl
xchg
or
cmp
testb
loop
mov
ror
xor
fs
test
and
cmpsl
cmp
xor
shrb
aam
xchg
aas
xor
ficoml
mov
ss
push
cld
cmpsb
xor
outsl
pop
mov
cmp
jno
xor
sbb
ja
push
cmp
out
mov
add
cld
xchg
xchg
fwait
arpl
cmp
xor
aam
jle
xor
push
sub
ftst
aaa
xor
cmp
dec
sbb
or
insl
xor
cs
stos
pusha
inc
jb
je
push
inc
es
mov
in
cltd
lods
addb
pop
xor
adc
into
mov
out
aad
cmp
xor
outsb
adc
adc
inc
mov
mov
clc
add
xlat
xor
fisubrl
mov
add
inc
movsb
xor
mov
pop
subl
outsl
call
inc
mov
xor
movsb
out
push
cmpl
out
adc
xchg
fnsave
pop
sub
mov
push
push
popa
aaa
dec
je
adc
push
xor
aad
addr16
mov
inc
imul
fildl
sarl
cmp
dec
adc
ficompl
cmp
inc
push
jb
fnstenv
inc
fsubrl
hlt
jne
cmp
cltd
cmp
xchg
pop
lret
leave
mov
pop
pushf
xor
xor
cmp
sub
inc
lods
mov
or
pop
add
sub
adc
mov
mov
cmc
js
xor
aas
push
out
push
outsb
xorb
jae
fnsave
lods
mov
jp
fbstp
out
repnz
cmp
jns
je
and
adc
sub
xorl
sbb
xor
andb
mov
in
xor
mov
test
or
add
popf
sub
lahf
cmp
xor
sub
shlb
aaa
add
adc
pushl
mov
dec
outsb
test
jl
out
adc
movsl
push
stos
std
mov
mov
mov
jecxz
in
xor
lea
xorb
cld
push
aad
js
xor
jne
insl
popf
fadds
pop
xor
push
pop
push
bound
mov
xor
adc
enter
xchg
xor
loopne
iret
repnz
push
mov
imul
sub
and
ljmp
push
cltd
and
les
xor
fdivrl
in
cld
lods
inc
int
in
pop
sbb
and
dec
out
cwtl
pop
enter
enter
mov
cli
push
xor
xchg
fcmovu
dec
in
lods
xor
stc
das
aad
mov
out
dec
aaa
fucomp
jae
clc
pop
and
mov
jmp
imul
mov
cmp
aam
fcmovnbe
pop
add
pop
pop
test
in
adc
ja
popa
das
stc
mov
cmp
ret
xor
adc
stc
push
pop
icebp
xor
push
imull
in
xor
int
xchg
xor
stos
push
lods
sub
pop
xor
mov
dec
mov
inc
insl
std
sub
push
xor
pop
ja
out
ret
lods
faddl
xor
mov
movsl
add
std
xchg
mov
cmp
push
sbbb
addr16
lea
in
mov
js
pushf
or
icebp
xor
mov
inc
cli
jbe
xchg
jmp
mov
adc
sbb
dec
movl
push
xchg
xor
mov
ret
pushf
jg
or
fmul
mov
cltd
bnd
push
lcall
mov
fcmove
ds
in
adc
mov
stos
mov
in
fcoml
inc
lds
cmp
mov
je
jns
sub
lock
rclb
xchg
or
dec
jg
scas
jl
xor
pop
ret
rcrb
xor
add
in
push
mov
mov
sarb
add
push
cmp
mov
imul
push
stos
aad
xchg
cmc
fbld
sbb
aaa
jno
cmpsb
push
xor
les
adc
sbb
jmp
mov
in
jae
sub
xor
mov
xchg
jnp
test
push
ss
cwtl
inc
icebp
test
adc
xor
fcomip
std
in
jb
xor
test
add
xchg
clc
data16
xor
ret
xor
dec
sbb
cmp
iret
push
mov
and
repz
cmp
rcr
repnz
dec
mov
xor
test
dec
mov
dec
xor
and
mov
sbb
mov
push
push
mov
lcall
mov
imul
xor
jge
push
adc
lds
cmpsb
pop
sbb
or
adc
or
aas
and
sub
xor
ds
movsl
mov
xor
and
in
sub
xor
jbe
jp
mov
add
sub
xchg
into
sbb
out
pop
icebp
mov
xor
test
xor
pop
xor
testl
xor
jo
dec
sub
add
loopne
push
out
add
push
xor
and
popa
sarl
pop
adc
and
sbb
xchg
es
lret
cmp
sub
sub
inc
jp
push
jmp
pop
hlt
jbe
lret
mov
sbb
sarl
jns
inc
or
lret
push
or
sti
xchg
sbb
dec
xor
or
sub
mov
xchg
xchg
cmp
enter
in
mov
testb
mov
mov
push
cmp
out
idivl
gs
sub
lods
out
lret
aam
mov
enter
int
es
pop
mov
jne
stc
or
aas
jns
repz
inc
jbe
in
das
fildl
push
fsubrl
sbbl
sbb
mov
dec
stc
dec
jecxz
xchg
aas
add
push
jmp
aas
sbb
in
mov
cmpsb
xor
mov
adcl
jge
shrl
mov
xlat
add
ret
mov
pop
adc
in
add
xor
push
xchg
test
adc
lods
add
and
sub
insl
inc
out
push
xchg
add
arpl
aam
dec
mov
jl
xchg
gs
inc
repz
xlat
mov
aam
pushf
cmp
mov
sub
test
xlat
dec
sub
jecxz
test
repz
mov
cli
lahf
cmpl
jg
sub
xchg
mov
mov
fs
sub
addb
int3
sbb
les
adc
xorb
or
lea
jbe
sub
jmp
fwait
mov
add
ljmp
and
dec
xor
xchg
push
test
lret
stos
sub
push
popf
inc
cli
cmp
fildl
jnp
or
lahf
shlb
cmpsl
or
adc
and
or
sti
sarb
mov
rol
lea
mov
xchg
push
inc
js
xchg
jae
fnsave
repnz
shll
and
call
sar
std
and
popa
push
lods
mov
inc
int
rolb
and
les
sbb
or
mov
aas
aad
sub
mov
add
shlb
pop
loopne
cltd
mov
lods
mov
imul
cmp
mov
pop
jp
in
pop
sbb
dec
stos
mov
aas
mov
pop
cmp
xchg
dec
jle
sub
jbe
ss
xchg
repz
fbld
test
sahf
pop
inc
mov
xchg
mov
inc
mov
inc
mov
add
push
add
icebp
aas
mov
int
jno
cmp
repz
mov
add
adc
jge
inc
xchg
adc
call
xor
pop
andl
sbbl
jg
scas
shlb
push
push
sahf
dec
jne
cltd
nop
sub
and
sub
fildl
mov
fwait
insb
push
sbb
imul
nop
or
mov
ds
ja
push
xlat
arpl
jecxz
push
pop
push
lahf
ret
iret
xchg
jo
xchg
mov
mov
mov
int3
and
jge
or
xchg
cli
and
in
in
rcr
adc
ss
inc
aad
fdivp
jmp
xchg
jb
in
fnstcw
xchg
scas
movsb
out
call
jmp
pop
or
std
mov
in
lods
push
add
dec
pop
pop
hlt
sub
push
sub
xlat
inc
mov
pop
push
jno
and
inc
xchg
dec
jbe
ret
mov
cmp
push
cld
mov
push
or
fdiv
and
jnp
ljmp
push
loope
ds
in
cmp
xchg
mull
loopne
sub
push
pop
imul
xlat
les
xor
into
lock
push
es
loop
xor
aas
cmp
adc
jl,pt
adc
add
xchg
sub
aas
or
mov
pop
cmp
inc
cld
push
xchg
ja
adc
add
loop
jns
into
xor
lods
sub
rcrb
mov
lods
sbb
sub
clc
sub
jmp
sbb
sbb
iret
shlb
mov
insl
mov
daa
lds
or
fwait
or
sub
jo
aam
push
test
dec
mov
or
xchg
mov
testl
cmc
outsl
xorb
jge
push
adc
jl
fnstsw
lahf
mov
adc
in
cmp
sub
hlt
popa
aam
shlb
mov
inc
xor
cmp
add
ret
push
mov
ja
pop
int
pop
test
xchg
in
insl
sub
jl
popf
repnz
xor
mov
iret
incb
in
int3
sub
add
daa
pop
leave
into
adc
sahf
mov
gs
stos
ret
enter
mov
lahf
aaa
int3
adc
sti
loopne
inc
fidivl
inc
mov
xchg
xchg
int3
jge
push
movsl
mov
or
xchg
pop
mov
ss
lahf
lock
enter
xlat
xchg
roll
int3
mov
addr16
mov
jo
enter
ds
shrl
sti
pop
fwait
clc
xchg
jge
adc
jl
movb
loopne
xor
adc
lods
xorb
pop
and
lret
lcall
xor
cwtl
jne
fwait
add
push
lret
add
or
ret
or
lock
inc
aad
push
xor
pop
in
add
out
push
cltd
arpl
fidivs
xor
gs
das
inc
rolb
outsl
push
lods
aam
pop
add
fstpl
add
popf
mov
or
dec
pushf
mov
data16
je
pusha
jae
out
imul
cmp
or
int3
jo
sbb
cmp
fimull
xor
or
cltd
es
and
adc
jb
imul
js
mov
lret
or
rolb
cmpsb
dec
mov
jge
lds
lret
sub
cld
pushf
jg
ja
js
loop
mov
stos
and
popa
iret
mov
movsb
adc
mov
and
cwtl
addr16
pop
insb
lea
sub
ror
pop
pop
imul
jg
jne
les
fidivrl
dec
add
rclb
push
into
lcall
or
cwtl
cmp
mov
pop
or
hlt
push
aad
cmp
adc
clc
sub
jnp
jecxz
iret
push
leave
sub
mov
das
mov
aad
test
or
push
jno
iret
mov
add
hlt
cmpsb
sub
mov
jns
pop
mov
aad
mov
fwait
in
sbb
gs
in
rol
loopne
ret
adc
test
sahf
fidivrl
aam
add
lods
xor
mov
cli
inc
clc
in
push
lds
dec
in
int3
ffreep
xor
in
xchg
negl
mov
xor
lret
or
adc
xor
popa
fldenv
jb
dec
bound
dec
inc
mov
jne
in
add
sub
testb
mov
shll
lret
xor
fcoml
or
dec
push
mov
sub
xor
cmp
sbb
xchg
xor
iret
push
inc
jle
add
lret
jg
and
orl
aas
leave
scas
shll
dec
push
mov
and
dec
rcr
inc
push
mov
pop
dec
cmp
mov
mov
add
sbbb
ljmp
jo
mov
rorb
rolb
mov
ja
loope
inc
dec
xor
roll
xchg
js
sub
popf
fmuls
push
fistpl
push
add
xor
adc
pop
nop
jne
push
cmp
pop
inc
out
jne
imulb
mov
xchg
dec
jmp
call
mov
inc
cli
pop
mov
imul
imul
cmpsb
xchg
mov
or
in
je
dec
or
mov
loope
pop
sub
push
add
lcall
sahf
loop
leave
aam
mov
and
add
xchg
jno
icebp
lods
call
in
ret
mov
adc
pushaw
jbe
jmp
movsl
aaa
adc
test
dec
sub
sub
push
cmp
mov
or
sti
das
and
or
int
sarb
mov
cmp
dec
mov
bound
xchg
sbb
dec
jnp
popf
fsave
push
les
and
sbb
mov
jg
jns
sub
and
push
aam
insl
jg
ja
add
ja
cmp
in
aaa
int3
movsl
or
mov
lret
addr16
gs
js
mov
pop
into
ret
and
cwtl
mov
jl
sub
gs
inc
test
xor
loope
mov
push
sahf
sub
pop
or
dec
or
push
cwtl
sar
ljmp
jo
jae
jge
dec
cmp
in
cmp
out
sub
sub
fisubs
xchg
xor
inc
lods
stc
inc
add
or
test
dec
sub
push
addl
into
inc
jbe
or
out
mov
or
movsb
push
xchg
out
mov
jg
scas
test
lods
add
sub
cmp
insb
push
pop
mov
pop
inc
scas
insl
ret
sub
mov
mov
pushf
cwtl
mov
push
lahf
loope
or
dec
sub
iret
sub
dec
xchg
and
cmp
mov
lahf
mov
mov
sbb
mov
les
dec
and
mov
cmp
xlat
rcr
dec
jns
mov
inc
pop
push
outsb
mov
enter
fsubp
mov
test
or
and
cmp
inc
sub
xchg
xor
ljmp
lock
daa
adc
mov
hlt
jp
lods
dec
stos
int3
dec
sahf
pop
jp
sbb
sub
dec
jecxz
mov
push
jo
adc
mov
cmp
icebp
test
stos
ret
fidivs
push
hlt
jbe
xchg
cmp
seto
or
ret
cli
call
sub
xor
jp
imul
jecxz
shll
insb
pop
mov
lahf
xor
jp
xor
stc
jbe
xchg
cld
popf
push
and
fdivs
xor
jp
rol
in
dec
loopne
xlat
inc
mov
jo
pop
inc
push
es
lcall
mul
and
lcall
dec
dec
jo
or
jp
nop
clc
jnp
push
or
inc
fsubs
mov
pop
xchg
aam
in
cmp
decl
mov
xor
dec
icebp
insl
sub
fidivrs
push
rcl
sub
inc
cld
mov
sub
insl
sub
sahf
test
les
cwtl
sub
push
xchg
cmpsb
sbb
jge
aam
and
pop
push
inc
and
jecxz
xor
sub
and
loop
in
inc
dec
out
icebp
mov
add
filds
outsb
push
mov
or
mov
add
test
xor
repz
jo
das
jb
cmp
push
movsl
mov
notl
dec
adc
mov
in
dec
scas
sarb
adc
xchg
fmull
test
bound
mov
cwtl
clc
or
xchg
sbb
jb
adc
sbb
mov
jle
dec
add
rorl
mov
mov
and
adc
ror
xchg
jae
popf
xchg
movsb
jne
fisubs
data16
inc
xchg
add
insl
mov
fwait
xor
add
pushf
pcmpeqb
rorb
cmp
mov
sub
addr16
bound
dec
icebp
jbe
jae
mov
call
rclb
movsb
bnd
xchg
sub
mov
lock
push
jno
or
inc
cmpsb
lret
xchg
sbb
aam
cs
sbb
out
out
scas
sti
xor
mov
sub
mov
leave
xchg
jne
cwtl
or
ret
push
xlat
mov
add
shrl
pop
adc
ficoms
in
or
cwtl
sub
fldl
je
adc
jb
out
mov
inc
popf
adc
mov
inc
add
jns
loopne
rep
fidivrs
dec
xchg
xchg
lret
sub
xor
dec
inc
mov
imul
mov
lods
or
lods
imul
add
push
cltd
imul
fistpl
add
mov
stc
mov
add
pop
push
jno
push
cmp
repnz
dec
push
aad
adc
and
pusha
jmp
imul
pop
mov
pop
pop
aad
inc
dec
pop
fstl
inc
cmp
ljmp
outsl
sbb
xchg
mov
add
pushf
sub
mov
or
mov
pop
cltd
mov
out
and
out
out
jge
and
dec
xor
lcall
sub
enter
jl
xchg
adc
aaa
push
jb
int3
stc
or
das
add
lret
push
fiadds
add
addr16
inc
out
rorl
and
or
inc
adc
cli
jb
stc
icebp
loop
and
out
mov
and
pop
fisttpl
xor
add
cmpsl
add
les
xchg
cmp
add
adc
push
in
jo
xchg
sub
mov
in
mov
push
xchg
push
jo
jns
jno
je
mov
sbb
ffree
push
sub
push
push
insl
repz
out
mov
dec
fs
rorl
push
je
mov
stc
jns
repz
cld
xor
xchg
and
jne
jb
lods
mov
and
fmul
shll
jae
adc
xlat
xchg
stos
loopne
shl
sub
pop
mov
push
lret
mov
clc
clc
mov
movsb
push
jmp
int
xchg
add
fldt
vunpckhps
fwait
xor
cltd
in
sbb
dec
mov
lock
int3
jb
xor
sbb
add
dec
lahf
push
mov
pop
lds
add
push
aaa
out
enter
bound
lds
lods
inc
and
adc
push
inc
ja
mov
cmc
rcl
lea
push
xchg
es
inc
rolb
pop
shrl
je
clc
xlat
push
ljmp
pop
imul
add
jnp
iret
ja
cld
rorb
xchg
adc
addl
out
cwtl
clc
push
push
dec
enter
cmp
adc
dec
mov
imul
xor
push
flds
mov
rcll
sahf
push
xor
xchg
stos
xor
cli
and
lret
imul
push
cli
xor
push
roll
xchg
pusha
sub
xor
jl
add
mov
in
inc
xchg
loopne
stos
test
xor
fs
and
repz
inc
into
decb
ljmp
and
add
data16
sub
push
inc
call
sub
jp
mov
add
mov
or
jl
loopne
test
mov
mov
into
xor
dec
int
aam
mov
out
add
xor
lods
adc
add
and
dec
addr16
add
or
pop
int
sbb
lahf
mov
bound
mov
add
push
adc
rorb
ret
icebp
imul
pop
cld
lods
sbb
in
inc
cmp
xor
incb
pop
outsl
add
ja
std
imul
test
jg
push
push
sarb
jecxz
mov
dec
adc
jp
ljmp
loope
cmp
movsb
addr16
adc
pop
mov
outsb
pop
jmp
pop
add
push
fistl
test
add
sahf
test
adc
xchg
jae
insb
aaa
lret
xchg
mov
jmp
lahf
test
push
cmpl
adc
pop
jne
sbb
mov
iret
jl
mov
mov
or
and
sub
mov
add
rorl
xlat
mov
int
pushf
pop
mov
xchg
data16
xchg
outsb
sbb
stos
imul
mov
lcall
push
in
test
aad
adc
ljmp
ss
das
out
dec
jmp
ja
or
ja
xchg
in
rclb
pushf
out
cld
or
mov
cmpsb
jns
sub
dec
push
add
out
rcll
or
push
cs
sub
loopne
ljmp
mov
hlt
sub
jne
mov
sbb
mov
xor
add
sti
daa
push
fst
mov
inc
mov
xlat
test
stos
push
xor
push
jae
push
scas
pop
sbb
jae
cwtl
ljmp
lods
movsl
inc
repnz
lock
mov
fisubrs
fisubrl
leave
mov
scas
xor
in
add
xlat
out
fstpl
int3
cli
push
ficomps
or
stos
dec
mov
adc
adc
shrl
xor
test
adc
push
push
push
xlat
jo
sub
jb
fstp
sahf
popf
mov
mov
das
cwtl
jo
pushf
movntps
sbb
lods
push
sbb
adc
push
jmp
cmp
shr
mov
jmp
mov
movsb
adc
lods
or
js
test
cld
sub
mov
dec
outsl
mov
mov
adc
out
mov
adcl
cli
xchg
pop
lods
hlt
in
push
mov
pushf
xor
pop
in
mov
cmpsb
sub
and
inc
or
xchg
jp
mov
cmpb
mov
jno
or
lock
in
sbb
adc
jb
das
sti
adc
xor
cwtl
sbb
rcrb
sub
repz
sbb
ret
adc
mov
and
sub
jno
cmp
or
xchg
bound
call
daa
ret
mov
add
sbb
xor
shrb
cs
leave
test
mov
lods
jle
out
xchg
loop
out
xor
sbb
cmpl
in
jno
shll
outsb
cmp
pop
mov
inc
out
dec
jae
mov
mov
cld
sub
xchg
stos
sbb
dec
add
out
mov
xchg
in
rol
jnp
push
mov
dec
mov
mov
dec
cmp
outsb
jmp
dec
les
mov
int3
sub
addl
inc
xchg
sahf
cmp
in
aad
mov
repz
cmp
dec
mov
mov
jae
in
xor
add
pop
ss
insb
cli
dec
or
fsubrs
aaa
sub
pop
stos
push
pushf
je
stos
je
push
sub
mov
aam
dec
xchg
out
push
adc
rol
scas
mov
aaa
sub
ds
and
xchg
sub
add
dec
inc
lods
ret
cmp
sahf
xor
adc
repz
pushf
out
jb
ljmp
sbb
push
int
ffree
inc
scas
jge
pop
enter
or
push
ret
loop
imul
cmp
loopne
into
inc
or
dec
in
out
push
mov
cmp
test
cmc
xchg
or
inc
mov
inc
or
cwtl
add
mov
test
aad
fwait
data16
insb
mov
inc
loope
mov
jecxz
cmp
aam
and
and
add
fsubs
jmp
or
flds
dec
and
adc
push
push
scas
repz
cmp
or
mov
cmpsb
adc
cmp
cld
iret
jl
push
insb
or
lret
fdivs
xor
gs
leave
daa
pop
or
shrb
sub
jnp
inc
jo
aad
dec
add
xor
dec
loope
test
push
or
nop
sub
jb
xor
out
repnz
es
xor
sbb
mov
pop
movsb
sub
push
xchg
shrl
mov
je
lds
insb
pop
dec
in
pop
add
shl
js
popa
sbb
push
pop
andb
jmp
jbe
mov
out
sahf
orb
sub
es
lret
or
inc
xchg
je
mov
lahf
sti
or
in
mov
add
xchg
sbb
adc
mov
lods
hlt
jl
push
jnp
dec
inc
xchg
andl
shl
lods
aam
cwtl
popa
cmp
aam
fnsave
sbb
xor
sbb
or
mov
push
adc
lahf
insb
ret
mov
pop
ja
dec
push
mov
or
stos
hlt
sti
cli
je
sub
add
xlat
fcmovne
shrl
cli
or
jle
or
jae
sub
or
sub
sub
or
lods
fldcw
movb
pop
or
push
icebp
int
in
mov
mov
loope
jne
sub
inc
push
mov
or
aas
pop
mov
in
mov
pop
push
push
mov
outsb
sbb
cld
int
dec
addl
in
pushl
fdivs
mov
fwait
xchg
sahf
in
adc
bound
inc
mov
popa
push
pushf
mov
filds
ja
or
bound
addr16
ret
xchg
les
mov
out
jae
popf
fs
fisttpll
aas
je
jae
ret
jmp
stc
lret
sbb
push
rcrb
cltd
hlt
sub
xchg
popf
fldenv
cmp
sahf
sub
in
aas
rcl
sbb
aam
fstps
push
shrb
clc
in
or
ja
imul
mov
mov
popf
shlb
mov
in
xor
pop
enter
ja
cmc
fsubrl
mov
test
insb
dec
push
xor
leave
fwait
xchg
test
pop
leave
mov
fsubrl
add
and
clc
fcoml
mov
scas
jl
cmpl
add
pop
add
mov
mov
and
xor
pop
ret
call
shl
add
enter
cmp
xchg
cmp
mov
adc
pushl
jg
cld
sub
lahf
dec
lret
jb
inc
je
inc
je
shll
mov
jnp
mov
push
sbb
push
inc
lea
cmp
adc
jbe
clc
push
icebp
enter
sub
sbb
add
inc
push
xchg
pop
stos
adcb
imul
lcall
dec
stos
mov
in
shrl
sbb
movsl
dec
popf
or
in
jg
or
sub
aas
push
cmp
pop
ljmp
cmp
sub
jmp
xchg
data16
adc
jecxz
lret
sub
cld
inc
ss
stos
push
dec
add
xor
xor
loop
nop
pop
frstor
in
shll
fwait
sub
and
xor
mov
fiaddl
sub
or
fsubrs
aam
mov
dec
lds
mov
mov
xlat
stc
decb
xchg
sarb
rcrb
subb
xchg
and
fimuls
inc
mov
scas
xlat
mov
mov
xor
push
sub
fidivl
or
mov
subb
idivb
mov
js
and
lods
iret
in
shr
loopne
xor
push
add
std
dec
adc
push
out
adc
jbe
jecxz
cmp
lods
push
adc
add
dec
ljmp
sub
jne
adcl
or
mov
leave
mov
popw
mov
push
in
cwtl
mulb
ljmp
leave
sarb
dec
subb
into
jnp
cmc
les
lea
out
adc
hlt
sbb
ret
xor
lret
jne
imul
pusha
push
sarb
jbe
ljmp
jp
mov
add
aad
and
sub
loope
sub
pop
mov
jle
stos
adc
adc
xorb
sbb
fsts
adc
jg
pop
xchg
inc
adc
enter
pop
lcall
fs
xor
mov
in
mov
fldt
push
push
stos
mov
lods
fwait
rolb
fidivrs
subb
add
je
push
xchg
test
cmp
xchg
inc
or
js
dec
mov
mov
rcl
sub
add
mov
leave
shlb
add
pop
xor
adc
movsb
or
xor
ss
sbb
into
test
xor
mov
dec
cmp
cmp
sbb
jne
jmp
rcrb
adc
lock
in
or
lcall
xchg
xor
aad
out
ret
in
and
mov
out
lds
stc
xchg
push
sub
stos
lret
sub
inc
jl
jne
xor
test
int
push
dec
mov
pop
add
and
sub
movsb
mov
imul
or
movb
cs
sub
lret
push
movsl
dec
lock
mov
out
cmp
adc
xor
mov
mov
mov
or
dec
scas
cmp
fmull
loop
sti
or
lock
inc
div
xchg
aam
adc
lods
icebp
pop
cmpsb
lret
loop
mov
mov
in
out
xorl
add
aad
jae
pushf
loope
pop
mov
add
bound
stos
mov
mov
test
inc
adc
into
ret
pusha
push
adc
pop
jnp
push
jb
popa
fisubrl
test
std
in
xchg
daa
sarl
lods
xchg
shl
test
sub
es
adc
and
aad
dec
lret
scas
xor
jp
jae
xor
out
sbb
mov
mov
pop
xchg
aaa
jl
sub
jns
test
rol
fs
rcll
fsubrs
test
bound
add
xor
out
inc
scas
bound
sbb
mov
popa
sub
xchg
cmp
aad
stos
fsubrl
xchg
insl
xchg
mov
aad
repnz
and
or
push
outsl
sub
add
pop
mov
adc
test
mulb
jp
xchg
lods
xlat
sbb
rorb
lods
or
cltd
je
xor
mov
inc
sub
loop
ficoms
in
cld
stos
fs
lods
pop
add
aas
lret
jnp
or
sub
data16
sarl
jp
xchg
jns
sub
sub
out
mov
sub
sarb
xchg
ss
add
adc
outsl
dec
push
adc
fsubrl
int3
jae
sub
scas
push
repnz
pusha
push
and
movsb
mov
lea
icebp
jle
popa
lock
popa
mov
fcmovu
hlt
cld
popf
push
sbbb
mov
aad
adc
test
lret
dec
push
in
adc
xchg
mov
fwait
dec
popa
fstpt
add
dec
adc
or
mov
jp
mov
shll
push
movsb
lods
dec
sub
shlb
stos
rcr
push
jne
call
jecxz
adc
sub
daa
ljmp
repz
cmp
xor
insb
and
mov
mov
mov
or
xchg
lret
pop
xor
shrl
mov
in
pop
inc
adc
sbb
imul
jg
jbe
adc
or
jne
push
jne
xor
jl
dec
xchg
sub
jne
in
bnd
ds
push
out
inc
fsubp
scas
aam
enter
sub
push
aaa
mull
leave
cmp
mov
ficompl
test
out
out
fisubrl
xchg
inc
mov
leave
sub
or
je
addr16
scas
dec
add
pop
push
xor
mov
gs
xor
arpl
sbb
sub
les
add
and
sub
mov
cwtl
rorl
fnstcw
bound
fiadds
sub
int3
hlt
fistl
leave
adc
es
mov
int3
dec
out
notb
xchg
bnd
mov
push
sbb
jbe
imul
dec
negl
lods
je
aam
sti
enter
cmpsl
pop
into
out
imul
dec
loopne
jbe
dec
imul
jo
das
sub
pop
pushf
jne
stos
inc
jno
xor
shr
mov
push
jmp
insb
fidivrl
pop
bound
fwait
loopne
nop
sbb
fidivl
sbb
mov
inc
gs
jae
in
data16
jb
xor
loop
push
inc
and
mov
sbb
pop
jmp
xor
decl
xchg
ss
jno
xor
loope
divl
cmp
xor
fstps
xor
inc
enter
shll
dec
push
test
and
mov
in
insb
pusha
adc
test
xor
call
pushf
mov
push
rcrb
jle
insb
ret
rorl
fsubl
xor
repz
lods
xor
outsb
xor
in
mov
hlt
cmp
mov
movsl
gs
mov
push
mov
je
sub
out
ds
push
xchg
xor
push
lods
mov
push
xor
divl
in
pop
jae
adc
pop
and
xchg
orl
mov
sar
nop
fxtract
int3
push
aam
in
push
es
xor
xor
pop
jmp
mov
push
and
xorb
sbb
pop
dec
jle
add
dec
ficompl
out
jo
ret
push
das
cltd
dec
pop
faddl
mov
xor
jp
lods
xor
and
push
stc
and
sbb
js
dec
cmp
xor
mov
cmovo
loop
outsb
push
mov
push
out
adc
adc
ja
mov
and
inc
add
xor
icebp
sub
push
fmuls
lret
adc
popf
mov
inc
xchg
xor
mov
jge,pn
push
outsb
xor
push
xchg
jb
ss
xor
push
and
shl
cs
dec
lods
add
testl
scas
cmp
enter
inc
xor
xor
dec
and
into
xchg
push
cmpsl
lds
cmpsb
or
in
ljmp
mov
push
push
call
aam
mov
out
dec
adc
jbe
sarl
fnstcw
sub
mov
sub
pop
xor
fldt
push
scas
jg
and
out
xor
inc
mov
mov
xchg
clc
push
ret
repz
hlt
and
adc
pop
xchg
mov
adc
xor
pop
imul
push
ret
pop
lahf
shl
je
out
dec
sub
fcmovne
fmul
addr16
xor
jo
pop
cltd
sbb
xorb
mov
in
add
mov
mov
sub
stos
lea
insl
inc
xchg
and
sbb
aaa
adc
add
jno
xor
mov
xor
faddl
xor
fidivrl
xor
or
enter
and
fs
stos
out
xchg
pop
sub
ja
aad
xor
incb
mov
fistps
test
add
mov
jno
or
and
or
xor
out
push
inc
rolb
pop
lock
stc
or
sub
outsb
mov
xor
dec
mov
fs
rorb
add
inc
and
out
push
mov
inc
loopne
inc
aad
dec
xor
arpl
daa
cs
je
push
jp
imulb
xchg
ret
pop
int
xor
push
or
and
mov
push
mov
inc
add
xor
sub
fmuls
outsb
adc
subb
cmpsl
cmp
xor
push
mov
xor
mov
sub
jecxz
jl
xor
frstor
push
mov
jno
inc
inc
out
mov
mov
test
inc
and
mov
loope
mov
mov
dec
mov
shrb
jge
adc
scas
fdivl
xchg
testl
dec
cld
adc
mov
xchg
pushf
fnstsw
xor
mov
fwait
lcall
icebp
sub
enter
js
mov
inc
add
pop
fdivrs
aaa
loopne
lahf
sbb
inc
xor
cltd
push
xchg
xor
pop
inc
dec
mov
leave
dec
enter
pop
hlt
adc
xor
and
imul
xor
cmpsl
out
es
sub
insl
pop
test
fdivr
mov
test
out
daa
inc
ret
lahf
xor
dec
insb
cltd
out
dec
or
xor
jecxz
jp
mov
outsl
shrb
push
xchg
mov
je
pmuludq
inc
outsl
loop
cmp
xor
push
sbb
xor
xchg
pop
mov
pop
xchg
and
sti
shll
lahf
dec
xor
out
add
xchg
xlat
into
sub
sub
fs
stos
dec
enter
inc
popa
jae
xor
and
je
sbb
cmp
mov
xor
push
insb
imul
jp
mov
dec
push
xchg
and
in
fadds
cmpb
pop
mov
lds
mov
push
fildl
push
aaa
xor
inc
add
cmp
adc
xchg
scas
inc
sub
fwait
out
pop
pop
loop
xchg
jb
mov
or
adc
roll
inc
test
fs
insb
mov
sysenter
in
push
mov
div
xor
test
sub
xor
inc
scas
cmp
pop
mov
sub
sbb
aad
adc
dec
sub
adc
stos
mov
movsl
xchg
xchg
inc
outsl
xor
inc
inc
addl
or
clc
jle
mov
loope
push
sbb
sub
pop
mov
fistpl
enter
xchg
pop
es
xor
jne
into
cli
in
sbb
add
xchg
xor
imul
or
les
daa
and
sub
or
pop
or
int
fstpl
inc
cmc
xor
or
ljmp
jg
xor
push
or
add
mov
xchg
pop
dec
fiadds
in
xorl
jae
or
or
xor
out
jne
into
mov
mov
icebp
lods
xor
mov
xchg
push
dec
push
xor
push
push
add
imul
js
jmp
sub
xor
pop
mov
movsb
cmc
inc
pop
mov
mov
and
lahf
adc
xor
test
inc
dec
icebp
mov
out
mov
in
pop
inc
fadd
xor
dec
outsl
sbb
pop
iret
dec
fcom
xor
push
jbe
movsb
idiv
shrb
nop
inc
shll
repz
mov
or
rorb
aam
inc
add
mov
xor
xor
dec
push
lea
aam
out
rclb
les
test
pop
inc
cmp
cltd
das
xchg
aam
jno
xor
push
jp
fiaddl
or
cmp
sbb
xor
adc
movsl
sbb
push
sahf
gs
push
xor
cwtl
mov
or
cmp
lahf
push
test
dec
mov
jge
inc
and
xor
cmpsl
mov
add
pop
insb
xor
add
push
xor
adc
add
in
jg
jle
push
mov
xchg
dec
jo
movsb
mov
mov
ds
lock
in
push
push
lret
add
mov
test
lea
ljmp
dec
imul
inc
popa
dec
andl
xchg
or
outsl
loope
mov
adc
jg
xchg
imul
xor
push
adc
out
xlat
shll
or
or
inc
xor
in
incb
adc
jbe
mov
add
dec
mov
push
inc
loop
push
loope
sbb
inc
xor
push
and
cltd
push
mov
push
inc
pop
xchg
mov
insl
repz
pop
imul
out
int
mov
sbb
xchg
xor
sbb
stos
jp
or
pop
sub
movsb
leave
mov
push
in
addr16
mov
push
and
xor
scas
push
mov
int
data16
jle
xchg
xor
aad
sub
xor
icebp
add
xor
dec
jnp
dec
jns
dec
mov
add
sub
push
ficoml
fisttps
dec
mov
int
aaa
daa
cltd
enter
addr16
mov
je
cwtl
mov
shl
in
xchg
lahf
out
rorb
in
mov
lods
icebp
or
adc
mov
xchg
inc
mov
xchg
test
loope
decl
dec
lods
int3
push
movsb
mov
sub
fisubrs
jle
ret
out
ret
dec
pop
or
jnp
mov
loopne
nop
dec
sub
bound
ja
pop
sub
aad
xchg
or
jle
jmp
pop
xor
daa
mov
bound
pop
add
dec
dec
xchg
dec
or
cmp
xor
xchg
and
repnz
jecxz
int3
test
movsb
sub
mov
pop
jecxz
push
or
jmp
fiaddl
or
dec
jns
or
mov
ljmp
sub
outsl
pop
cmpsb
lret
mov
aam
into
inc
push
lret
out
or
imul
mov
or
mov
cltd
cmp
or
mov
ret
mov
movsb
mov
sub
push
lcall
out
gs
sti
lock
sub
ss
sub
jmp
sub
or
aaa
mov
xchg
pop
repz
sub
jns
sbb
stos
rcll
pop
fstp
fmul
rorb
ja
aam
aas
into
cmc
jbe
xchg
cmpb
push
mov
insb
cwtl
mov
push
xchg
pushf
pop
cmp
xchg
lret
jmp
xor
pop
mov
mov
xchg
jle
psubsw
adcb
in
cwtl
test
or
add
pop
inc
int3
ds
fdivl
push
sub
or
mov
sub
push
mov
imul
pusha
lods
popa
pop
repnz
aam
adc
xor
in
rcrb
pop
ljmp
or
mov
jae
stc
je
lods
inc
outsb
in
or
and
ja
ret
mov
test
cmp
mov
inc
mov
in
and
jge
mov
jne
mov
cmp
jg
insb
xchg
sub
xchg
aad
aad
xor
jo
mov
adc
xor
in
nop
jnp
pop
int3
rol
cmpsl
lcall
jns
ror
jecxz
push
xchg
jg
mov
jnp
pop
pop
mov
jne
aad
inc
fst
and
or
push
push
mov
sub
es
out
inc
inc
popf
mov
fldcw
sbb
mov
faddl
xchg
cmpsl
bound
cmpsl
mov
inc
int
push
outsb
sbb
cmp
or
sbb
mov
fbstp
fsubl
clc
enter
repz
xor
and
xor
ror
xchg
mov
xchg
lret
loope
loop
sbb
aas
loop
cmp
mov
cli
fldl
sub
test
or
pusha
jne
xchg
mov
addr16
popa
stos
les
xchg
mov
les
mov
adc
lock
adc
sbb
adc
shl
jl
and
jg
jnp
jmp
repnz
xchg
push
or
fisubs
inc
test
adc
inc
sub
inc
js
xchg
mov
ljmp
sub
ljmp
in
add
jo
dec
add
aad
sbb
dec
int3
imul
or
pushf
push
push
xchg
aas
mov
inc
fwait
pop
or
push
jns
out
into
bound
xorl
adc
or
jne
sarb
xorb
xchg
xchg
fnstenv
pusha
out
popf
into
imul
mov
fstl
lods
xor
pop
mov
sub
das
sub
jle
mov
cmp
sub
cmp
bound
shlb
ja
or
xchg
push
xchg
mov
lcall
cmp
mov
mov
add
lea
xor
jnp
fwait
jb
jae
fucom
sbb
or
mov
repz
sub
jb
jmp
adc
popa
sbb
xchg
pop
push
aas
xlat
push
mov
pop
sbb
rol
push
cli
jbe
outsb
cmp
or
push
push
dec
rorb
js
shrl
mov
xchg
mov
adc
mov
mov
stc
fstpt
repz
and
push
mov
mov
lock
jo
pop
dec
or
dec
into
push
inc
dec
cmp
aam
adc
mov
adc
lods
cs
sarl
pop
mov
arpl
push
sahf
std
push
push
cmp
and
mov
dec
cmp
popa
int
jbe
cmp
vphaddbw
aaa
fisubrl
hlt
mov
jb
xor
push
ds
sub
cmp
bound
xlat
pop
sbb
jp
daa
outsb
xor
mov
std
imul
in
xchg
push
test
insb
jae
mov
in
loop
subb
lods
mov
call
pop
outsl
mov
cwtl
ja
hlt
aam
mov
jecxz
into
mov
insb
loop
sbb
andl
test
cmp
int3
sub
push
pop
pop
mov
dec
arpl
in
mov
shrl
imul
jae
push
dec
cmp
mov
data16
fwait
pop
sbb
cwtl
jmp
call
insl
push
repnz
cli
sub
jbe
dec
sub
or
jecxz
and
fmuls
cmp
xchg
and
mov
ret
mov
push
mov
aas
xchg
jb
imul
sub
lret
pop
add
pop
add
adc
jp
hlt
ds
sbb
dec
arpl
adc
ss
cmp
push
mov
mov
mov
ret
push
hlt
outsb
xchg
sub
stos
incl
flds
bound
inc
add
pop
or
enter
fbstp
sub
call
adc
xor
pop
dec
pop
mov
sbb
or
cmpxchg
mov
addr16
mov
mov
aas
fldt
inc
scas
jl
cmp
sub
sub
test
jp
stc
cwtl
lret
sbbb
leave
aas
mov
mov
mov
out
jge
stc
adc
mov
push
xchg
aas
mov
cwtl
fisubl
push
jp
mov
out
sub
lret
mov
cmp
jge
popf
mov
aaa
xchg
add
hlt
icebp
pop
add
push
mov
push
sti
test
dec
jne
fcmovbe
cwtl
inc
mov
jl
lahf
ljmp
sub
pop
stos
mov
les
call
sub
rorl
mov
mov
xchg
ret
push
imul
push
mov
add
sub
cli
mov
ss
inc
out
lods
aam
sub
pop
cwtl
movsb
xchg
inc
or
rcll
sub
in
adc
mov
sbb
leave
inc
cmp
xchg
aad
idivl
adc
in
sbb
pop
mov
jb
lock
out
pusha
or
push
je
sbb
loop
sbb
into
lock
mov
mov
sbbb
shl
sahf
imul
xor
lahf
pop
fwait
add
or
jl
enter
sub
xlat
xorl
ja
lds
jp
sbb
add
mov
add
fisubrl
sub
lods
aaa
stos
pop
je
sub
mov
mov
jb
mov
lcall
addl
cmp
cwtl
mov
add
or
xor
out
lods
sub
mov
jl
lret
in
jle
sbb
movsl
mov
xor
fs
adc
cld
mov
mov
call
fidivl
fldcw
ret
arpl
enter
jmp
mov
jg
jo
adc
xchg
mov
pop
add
in
lahf
testb
fdivr
ja
or
inc
mov
push
dec
add
add
dec
hlt
fwait
mov
pop
mov
dec
ja
push
ljmp
xor
pop
popa
cld
enter
jle
cwtl
xlat
in
insb
hlt
test
dec
or
sti
insb
call
mov
xor
sub
jo
or
mov
xlat
pop
add
mov
in
clc
and
cwtl
cmp
popf
sub
inc
or
pop
js
cwtl
dec
mov
jg
out
xchg
and
jp
fisttpll
mov
push
add
mov
aad
iret
mov
add
test
pusha
loope
out
ret
xor
jns
aam
call
inc
push
adc
out
inc
add
stos
adc
rorb
adc
pop
scas
fists
mov
mov
inc
out
jnp
adc
ja
or
pop
xor
inc
imul
pop
and
lods
or
dec
sub
mov
cmpb
xor
out
and
mov
mov
jnp
pushf
sbb
mulb
sub
push
mov
sub
mov
dec
scas
sub
out
pop
xor
add
dec
sub
bound
test
ja
insl
hlt
cmpsb
adc
mov
mov
subb
cmp
insl
inc
xor
cmp
or
mov
xor
jp
call
adc
lret
enter
imul
test
bound
in
xlat
xchg
divb
cltd
rorl
push
cmp
sub
jbe
or
inc
aaa
loopne
aaa
aam
lcall
adc
lods
fdivs
call
pop
jns
push
repnz
or
pop
add
dec
loop
jp
subl
std
and
addr16
emms
mov
inc
in
cmp
xlat
ss
jecxz
iret
xlat
out
sbb
into
ljmp
mov
mov
xlat
cmc
mov
mov
sub
cmp
in
sbb
or
jbe
dec
fstpl
gs
leave
lods
fildl
push
cmp
add
leave
xchg
inc
pop
sub
fwait
cmpsl
mov
mov
leave
mov
mov
and
xor
sbb
shll
call
or
addb
out
lcall
jne
dec
and
mov
addr16
xor
and
fisubrs
sub
xlat
pop
add
fidivrl
xchg
inc
ss
ficoms
xchg
out
push
lcall
push
ds
leave
push
and
addr16
fs
orb
push
mov
xchg
push
mov
xlat
add
mov
push
pop
mov
lods
or
jecxz
push
int3
xchg
in
or
jl
and
jl
aas
sub
out
pop
lret
das
fisttpll
test
mov
sbb
je
xchg
inc
mov
adc
jbe
aad
lds
lcall
lea
xor
jmp
mov
arpl
xor
sbb
jo
adc
and
sbb
lods
jg
and
in
adc
xchg
mov
scas
push
popa
in
or
or
stos
cmpsb
lret
lahf
movb
loop
sub
sbb
dec
stos
jg
outsl
int3
pop
xchg
push
bound
arpl
sar
sbb
sbb
clc
push
or
repz
mov
add
cwtl
or
fwait
iret
adcb
imul
aam
lods
rcrl
inc
xlat
stc
lods
push
shrl
call
pop
out
jmp
sar
leave
outsl
repnz
adc
lods
sub
or
jae
jp
cld
hlt
test
mov
sub
repnz
sub
in
in
lods
adc
insb
shrb
lds
lods
xor
fwait
mov
sub
xor
sub
jp
out
dec
and
push
in
xchg
sub
lret
iret
push
push
adc
les
por
jmp
pushf
add
sbb
jge
pop
orb
scas
insb
add
pop
ds
and
jmp
movsl
xor
lods
sub
xchg
test
or
mov
xlat
insl
jae
xor
pop
test
sub
jp
shrb
imul
fcmove
xor
xchg
in
sbb
or
inc
push
xor
pop
jle
aas
test
add
jnp
fwait
mov
jns
fcomip
fcomps
mov
jl
jno
mov
inc
cli
sub
add
les
mov
jne
jecxz
stos
jb
jb
scas
push
pop
test
mov
pop
xor
inc
xchg
mov
sub
mov
pop
sahf
sub
cmp
out
adc
mov
xor
lods
pop
ss
rcrl
call
cmp
add
adc
mov
dec
lds
lcall
and
xchg
adc
ret
jp,pt
dec
cmp
mov
lret
cmp
ret
sbb
lods
mov
andl
ljmp
sub
ds
movsl
in
rcrl
push
ja
clc
cmpsl
or
movsb
push
sub
scas
outsb
arpl
or
fsubl
ja
pop
pop
in
lods
and
jl
push
rclb
ds
xor
lahf
mov
dec
pop
push
sbb
arpl
push
fistl
pop
das
xchg
mov
mov
cmc
popl
add
addr16
xchg
fistl
xchg
push
mov
mov
inc
lods
dec
add
cli
xchg
out
mov
mov
pushf
mov
xchg
cmp
aad
repz
or
adc
loope
mov
fistpl
dec
in
lods
and
add
sub
iret
fbstp
adc
lods
xchg
lret
cld
xlat
sbbb
adc
scas
rcl
mov
pop
xchg
xchg
nop
mov
or
jmp
xlat
or
push
mov
xchg
test
int
mov
sbb
mov
xor
inc
lock
cltd
fcompl
fstl
mov
in
sbb
jae
test
ds
mov
dec
dec
call
jbe
scas
lea
add
cmpsl
pop
adc
pop
pop
fidivrs
push
out
push
out
rcl
mov
test
out
outsl
pop
xchg
and
xchg
mov
les
sub
or
dec
int
lahf
xor
addl
ja
fiadds
mov
nop
push
push
js
sub
mov
mov
mov
leave
jg
in
inc
fcoms
pop
jmp
int
nop
mov
mov
push
add
push
mov
into
nop
lds
lahf
jno
xor
inc
ret
add
lret
inc
push
daa
stos
int
push
add
decl
repnz
test
pop
or
pop
mov
push
pop
insl
sbb
insb
and
jbe
jb
fucomip
movsb
push
xor
data16
push
sub
sub
xlat
insl
js
cmp
mov
cmp
mov
in
pop
scas
lea
loop
inc
test
and
lahf
fdiv
xor
xor
arpl
or
mov
xor
mov
prefetcht1
cld
sbbl
push
lods
std
test
sub
pop
mov
mov
xchg
or
es
xchg
adc
les
jmp
js
dec
cmp
scas
cld
push
ret
insb
das
in
adc
addr16
popa
daa
push
insb
add
mov
fmull
cld
fildl
xchg
hlt
aaa
out
in
pop
pop
or
pop
rcll
rcrl
es
sub
and
cltd
push
jl
pop
nop
mov
nop
js
addb
imul
ffree
jnp
shrb
mov
add
fdivs
ret
or
rorl
subl
les
mov
or
sbb
test
sbb
xchg
lods
sub
jno
xchg
cwtl
adc
sbb
pop
sub
lcall
fwait
jp
out
jbe
xor
cltd
xor
sub
fidivs
xchg
fidivl
jae
mov
mov
lods
ljmp
fnsave
push
add
mov
or
sbb
cmp
je
cs
adc
fnstcw
in
ror
repz
pop
jb
les
in
rolb
cmp
outsb
jecxz
aaa
sub
jl
leave
addr16
out
stos
test
push
jns
push
push
test
pushf
mov
sub
mov
js
test
lcall
in
outsl
xor
cld
bound
pop
vmovss
jg
and
call
punpckldq
negl
xor
ffree
mov
pop
add
test
add
adcl
cmp
xor
xchg
jg
xchg
cld
mov
hlt
mov
popa
fldenv
push
daa
repnz
daa
jb
dec
fldl
je
inc
xchg
ljmp
mov
sub
in
jns
add
js
mov
lods
pushf
jl
sarl
mov
pop
adc
call
jp
push
jle
stc
in
ret
pop
jg
stos
and
fdivl
ret
inc
or
cltd
mov
sbb
stc
aaa
mov
or
sub
sub
int
inc
pop
mov
mov
stc
mov
add
divw
and
cmp
lea
jp
cmp
mov
hlt
inc
cmpsb
pop
hlt
xchg
jge
jno
xchg
push
es
orl
ljmp
push
int
and
xchg
push
mov
push
mov
inc
push
jno
insl
clc
xor
les
scas
adc
leave
leave
pop
mov
lret
js
int3
cwtl
or
mov
addr16
sbb
sub
out
mov
sbb
mov
lcall
push
movb
out
or
or
xchg
pushf
inc
dec
dec
xchg
cmpb
lret
sub
push
xchg
mov
stos
nop
sub
jmp
mov
sti
xchg
sbb
jnp
or
mov
mov
jbe
mov
repz
popa
sub
jl
cwtl
imulb
sar
pop
push
xor
shrb
test
mov
test
test
bnd
mov
jae
mov
push
or
cld
scas
push
faddl
mov
into
fistps
dec
loope
fadd
push
inc
sub
mov
lahf
fidivrl
xchg
xchg
jnp
fsubl
leave
pop
push
fmuls
cmp
dec
or
sub
xchg
adc
xor
xchg
inc
cmp
adc
sub
push
jns
jg
test
fimull
or
sub
leave
mov
mov
out
add
jp
pop
xor
testb
push
aaa
pop
add
push
pop
insl
ss
jae
ss
packsswb
jle
fwait
mov
lods
dec
pop
sahf
in
movsb
icebp
fwait
testl
cwtl
adc
jmp
aas
inc
xchg
and
stos
or
lods
clc
popa
inc
nop
addr16
imul
push
inc
test
enter
and
aad
jecxz
sar
sub
jg
and
and
pusha
es
fldt
inc
data16
sarl
push
sbb
mov
fidivrs
push
pop
test
dec
js
jnp
mov
push
sub
pop
lahf
push
jmp
imul
je
add
or
jne
cmp
xor
jbe
mov
int3
xor
rorb
or
dec
addr16
inc
dec
push
mov
mov
and
shrb
dec
dec
lahf
scas
fbld
jmp
push
cmpsb
mov
and
sti
pop
mov
adc
lret
lahf
arpl
or
mov
fiaddl
push
mov
dec
out
in
or
sub
lea
jle
sub
mov
and
sub
push
push
pop
movsb
xor
xor
jmp
ret
ficomps
fnstsw
addr16
test
shrb
andb
mov
sbb
verw
sub
mov
jge
stos
jp
cmp
fsubl
pop
inc
aam
mov
jo
jl
dec
loope
push
std
nop
adc
sub
add
or
fimull
xchg
mov
jmp
clc
outsl
push
sub
adc
ja
xor
or
mov
into
mov
aaa
add
mov
pop
jecxz
xchg
adc
sbb
inc
inc
test
insb
jbe
dec
aad
call
roll
nop
sub
shl
ja,pt
or
sub
cmpsl
lret
sbb
mov
mov
std
scas
aaa
ss
push
jmp
std
fs
jne
dec
lahf
sbb
imul
sub
scas
pusha
jno
cmp
sahf
and
xchg
sub
adc
into
cmp
sub
mov
sbb
xor
shrl
add
push
push
fidivl
lods
iret
cwtl
xchg
mov
pop
push
sub
jle
lea
or
aad
das
push
adc
stc
add
repnz
inc
push
jbe
adc
xchg
lahf
rcl
xchg
sub
xchg
sub
cmp
insl
inc
fdivrl
dec
jbe
mov
cli
imul
mov
loopne
ljmp
ja
mov
and
iret
xor
mov
ret
mov
aam
inc
push
pop
jg
shll
cli
decl
enter
arpl
ret
push
loopne
xchg
and
int
pop
movsb
push
or
in
imul
inc
xor
dec
test
nop
and
inc
call
dec
mov
xchg
push
ret
cmp
ret
xchg
jl
test
or
dec
mov
push
mov
cli
movsl
inc
adc
aam
mov
repnz
ret
pop
push
sti
and
xor
add
xor
sarb
movsl
aaa
cmc
ljmp
fsubrl
out
mov
aam
bound
pop
or
xchg
xchg
add
mov
mov
sarl
fwait
movsb
out
adc
push
mul
sub
mov
jne
adc
jae
mov
les
cli
cwtl
ja
fs
les
push
mov
add
cmc
add
lods
and
mov
testl
sub
sbb
cmc
xchg
inc
les
mov
mov
mov
add
hlt
loopne
daa
and
xchg
shrl
lcall
jp
int3
pcmpgtw
xlat
ss
inc
jle
sbb
stos
in
push
sub
sub
or
cmpb
pop
mov
jg
or
add
shl
push
lods
ljmp
mov
lret
pop
stc
cs
add
in
cmp
test
loope
daa
movsb
enter
pusha
out
push
xor
paddsb
xor
adc
cmc
pop
cmpsb
imul
loop
inc
sub
xchg
sub
lods
sub
stc
out
xor
shl
dec
sub
xlat
jbe
cwtl
fs
adc
xor
xchg
outsb
add
clc
add
test
andb
mov
jp
xor
mov
add
mov
sahf
or
cmp
pop
ret
sub
xchg
pusha
push
lret
call
loop
jmp
les
lret
push
mov
pop
adc
mov
out
cld
adc
or
add
pop
mov
lea
jp
and
popf
lahf
in
xor
inc
jns
sub
mov
fisubrs
mov
js
outsl
xlat
mov
mov
xchg
sbb
add
mov
jl
je
jo
or
call
mov
or
dec
das
lahf
cli
clc
pop
fdivr
adc
jecxz
addr16
inc
ficomps
lds
mov
pop
mov
sub
les
sub
nop
push
lret
aas
push
cmp
mov
sub
pop
sahf
clc
mov
cmp
xchg
cmp
lods
and
mov
lret
aam
cmp
andb
pop
and
xchg
ficomps
mov
ja
dec
sub
jmp
xlat
mov
div
sbb
ss
lret
xlat
and
sub
addr16
pop
dec
outsb
ret
push
dec
fists
imul
leave
push
and
mov
lret
jg
popf
outsl
or
aad
pushf
test
or
call
lock
clc
cld
in
mov
lds
adc
or
xchg
popa
add
jecxz
lret
adcl
ss
push
mov
lods
pop
sub
jg
std
jge
jns
mov
je
out
repz
pop
push
stos
inc
test
mov
ret
popf
mov
xor
sub
cmp
sub
sbb
xchg
cmp
pop
jns
cld
mov
enter
sub
ss
sti
mov
push
mov
cmp
push
push
subl
and
inc
repz
cmpb
js
push
jbe
jg
pop
stc
push
cltd
into
jl
out
mov
sahf
in
bound
mov
mov
notrack
in
mov
jp
pusha
in
mov
jne
fsubrl
or
add
xor
nop
scas
mov
in
sahf
js
pushf
mov
add
sub
imul
js
adc
mov
mov
mov
inc
lcall
xchg
ret
sub
jns
movsb
dec
test
jbe
int
lret
pop
xchg
xor
jb
in
fdivrs
jns
nop
mov
pop
ja
aaa
jnp
jns
lret
jg
inc
lock
fucompp
fs
js
cmp
cmp
sub
je
sub
push
popa
in
lret
ja
sbb
sub
pop
xor
icebp
xchg
nop
sub
jg
scas
push
lcall
xorl
bound
sar
aad
sarb
mov
fs
lret
jmp
jns
je
andb
xor
push
fcompl
idivl
lret
test
xor
cmp
sub
mov
xchg
fwait
dec
daa
enter
jl
dec
push
and
lahf
sub
cmp
addl
rcl
dec
cmp
add
pop
test
xlat
sti
mov
or
cmp
adc
cwtl
sub
enter
xchg
in
pop
xor
sub
repz
xor
push
mov
fwait
sbb
stos
inc
outsl
iret
je
jnp
mov
pushf
xor
jge
icebp
lods
cld
out
push
push
push
dec
pop
outsb
test
ljmp
jge
cmp
lret
sbbl
jl
in
fidivl
icebp
rorb
sub
ret
imul
mov
dec
popa
xor
adc
sub
add
sub
xor
aaa
push
mov
push
pop
les
jmp
push
jnp
les
out
dec
sbb
xor
mov
insl
popa
sub
cmp
mov
fsubr
dec
roll
and
add
gs
add
jnp
cld
xchg
hlt
imull
inc
lret
push
sahf
stos
xor
cli
sub
push
xchg
shll
pop
in
in
lods
pop
add
popf
push
jns
pop
mov
jg
add
hlt
imul
in
adc
movsb
adc
lods
mov
mov
jbe
cmp
clc
das
mov
jne
lret
int
lcall
fidivs
push
shrb
ja
mov
clc
lea
add
xor
xchg
cmp
scas
lods
sbb
insl
jns
sbb
mov
std
mov
out
push
out
ljmp
mov
test
push
xchg
or
push
mov
cmp
jno
sbb
aad
fisubl
mov
jmp
int3
cmp
cmp
mov
inc
adc
xchg
into
popf
xchg
mov
xchg
push
cltd
inc
jae
aaa
push
sbb
loopne
fcompl
cli
mov
pop
mov
mov
sub
jb
sbb
jnp
sahf
and
in
jl
dec
addr16
xchg
jbe
inc
lret
in
push
cmpb
xchg
jmp
sbb
repnz
into
test
adc
xor
jle
adc
fldln2
pop
into
sub
jecxz
insb
cmp
push
sub
add
adc
mov
sub
in
or
fisttpll
mov
aad
repz
loopne
push
adc
and
jmp
pop
outsb
adc
jle
out
mov
dec
lret
fcmovnu
les
test
push
dec
xchg
clc
jl
mov
aam
leave
je
in
sub
lods
in
push
cmpl
dec
insb
cmpsl
xchg
sub
mov
mov
jmp
lahf
cs
xor
aas
cmp
jnp
xchg
push
iret
and
mov
jne
movsl
push
cwtl
sbb
mov
jo
cmp
ret
jae
inc
sbb
in
das
jge
jle
cmpsl
enter
es
mov
cmp
repnz
jne
push
push
mov
ja
filds
aad
js
jae
mov
mov
loopne
sub
daa
daa
insb
inc
aam
je
mov
push
arpl
mov
lods
pop
cld
test
inc
mov
in
out
daa
insl
jl
fwait
pop
negb
lcall
aaa
adc
ss
or
hlt
cmp
lret
sbb
and
jae
fiaddl
inc
and
pop
sub
pushf
mov
out
mov
aad
stos
and
cmp
sub
loop
add
inc
ret
aaa
xor
fldl
and
shrb
ss
daa
mov
mov
outsl
mov
lods
jg
cmpsl
in
mov
pushf
lods
add
movsl
int3
mov
mov
jl
xor
adc
xor
out
dec
ror
xor
roll
repz
cmp
sti
popf
fnsave
pop
mov
mov
and
inc
and
add
jo
xor
insl
or
fisubrs
mov
adc
lods
xor
mov
dec
outsl
inc
cli
bound
subl
and
addr16
mov
ds
jg
xor
mov
dec
or
push
lods
test
data16
leave
pusha
andl
sub
in
ljmp
push
adcl
sub
xchg
ljmp
and
mov
lods
pop
fmuls
adc
inc
int
lcall
mov
jnp
jle
mov
xchg
bound
mov
adcl
je
cld
lock
pop
decl
dec
push
int3
pop
inc
jo
cmc
xor
xor
pop
adc
fdecstp
stc
mov
xor
pop
aaa
cmp
push
dec
das
cmp
hlt
rclb
popf
xor
mov
push
out
cmp
fdecstp
js
mov
lods
xchg
push
scas
jmp
pushf
loopne
lds
pop
ljmp
inc
shll
sbb
sbb
std
dec
xor
and
pop
cli
push
insb
fidivrs
mov
movsl
or
ljmp
adc
xchg
xor
xchg
test
into
clc
xor
xchg
mov
jle
mov
push
mov
mov
inc
xchg
ret
pop
bound
out
fsubrl
xor
and
divb
in
loopne
inc
orl
xchg
push
ret
push
dec
nop
push
add
push
xchg
pop
xor
ds
add
fcoms
sub
jmp
lcall
test
pop
fs
or
cmp
sbb
rolb
pop
test
sub
movsl
sub
xorl
repz
lahf
psubusb
mov
andl
push
mov
xchg
mov
icebp
movl
int3
xlat
xchg
outsb
jb
jmp
mov
pusha
and
in
sbb
push
fldl
pop
xor
into
loopne
lock
in
pop
xor
lds
bound
xor
xor
mov
mov
pop
jne
sbb
cli
inc
and
inc
stos
mov
sbb
cmp
xor
cmpsl
icebp
sbb
or
sti
lds
xor
adcb
xor
pop
jge
mov
lret
rcrl
loopne
stc
inc
js
pop
pusha
pushf
sub
mov
stos
xor
and
movsl
xor
subl
xor
jmp
xchg
ljmp
arpl
cwtl
scas
sub
push
leave
jns,pt
push
dec
gs
pop
push
sbb
xlat
lcall
push
ret
out
dec
xor
add
xchg
xor
mov
ret
xchg
pop
xor
cli
dec
jns
add
pop
adc
movsb
shl
cmp
inc
in
dec
sub
mov
stc
mov
push
and
dec
and
aam
mov
cmpsb
mov
jae
xchg
imul
ss
push
ret
mov
stos
jge
icebp
xchg
popf
xor
push
in
loop
adc
call
cli
outsb
xlat
in
sub
sbb
bound
out
add
stos
out
in
lret
xorl
lods
test
xor
jl
push
loop
out
xor
loopne
popa
mov
dec
pop
xor
add
xor
xor
and
xor
xchg
fbstp
and
push
fidivs
mov
gs
inc
ficoml
mov
lcall
sbb
xchg
test
xor
into
stos
jne
adc
les
adc
jl
je
sub
aad
xor
dec
pop
push
xor
jno
xor
jbe
pop
leave
movsl
and
add
xor
cltd
add
xor
testl
pop
mov
std
dec
xor
jne
xor
aaa
cmp
aam
jg
jns,pn
xlat
jmp
or
test
mov
repnz
push
imul
xchg
jl
push
cmp
jmp
mov
popf
xor
mov
and
fsubrl
shll
sbb
sub
sub
adc
mov
mov
stc
fidivl
dec
popa
ffreep
outsl
add
inc
mov
xchg
fdivl
push
mov
dec
jg
adc
mov
xor
xchg
fldt
mov
push
cltd
jmp
test
pop
dec
fldenv
push
xor
sub
xorb
or
add
sti
mov
jno
stos
leave
repz
mov
push
sbb
jo
enter
aam
lock
xor
mov
xor
jle
jae
out
jns
xor
ljmp
and
xor
mov
or
notb
fldcw
xor
dec
shlb
jae
sub
adc
xchg
pop
cmp
add
push
insl
ret
xor
push
outsb
es
dec
xor
ror
or
rcrl
cmp
jae
pop
into
and
add
push
sbb
push
repz
xchg
dec
mov
dec
push
sub
out
xor
scas
xchg
data16
jle
xor
sti
sbb
cmp
movsb
xor
and
jl
push
mov
xor
cltd
mov
fwait
mov
mov
push
in
lret
push
jne
or
inc
in
xor
mov
inc
testl
test
xchg
mov
inc
adc
and
mov
hlt
adc
scas
xor
push
mov
jge
push
les
sub
adc
xchg
push
mov
sub
shlb
mov
pop
sub
pushf
mov
imul
pushf
or
pop
out
adc
jns
xor
xor
scas
stos
xchg
inc
loop
mov
jno
jo
mov
gs
sarb
les
jnp
inc
ret
inc
movsl
movsb
sahf
cs
mov
xor
into
addb
mov
aad
cmc
in
cld
mov
test
mov
adc
mov
mov
xchg
ficompl
xor
sti
div
inc
outsl
fwait
mov
xchg
push
xor
mov
xor
mov
sbb
cmp
aam
insb
arpl
xor
push
jmp
mov
fdivs
test
or
mov
cltd
inc
add
enter
inc
dec
movsb
xor
cmp
decb
iret
push
call
xor
dec
xchg
std
xchg
mov
int3
sbb
and
xor
add
shlb
xchg
xor
push
idiv
pop
out
std
or
xor
repnz
pop
and
mov
xchg
jg
shll
jle
inc
mov
ret
pop
inc
add
loopne
or
int3
jp
push
fsubrs
xor
cmp
cltd
sub
xchg
out
fistl
cmp
xor
xchg
test
xchg
pushf
xor
mov
pop
pop
dec
mov
dec
mov
or
in
sub
cmp
out
adc
fs
push
or
sbb
lock
xor
and
adc
stos
mov
adc
cld
das
xor
js
inc
pop
aaa
bound
and
ret
xor
out
shl
jle
xor
jge
pop
xor
das
sub
testl
lods
xor
outsb
dec
ffree
ret
sti
scas
xor
mov
mov
ljmp
hlt
push
repz
stos
inc
test
mov
lea
mov
mov
cmp
mov
sarb
mov
insb
ss
adc
add
hlt
daa
push
jg
sub
pop
jp
out
xor
stc
aam
sti
push
nop
mov
and
lods
lods
push
cmpsl
es
ss
pop
xorl
sub
fs
cmc
adc
xor
mov
aaa
xor
lds
and
cmp
xlat
or
cmp
repz
sub
sar
inc
push
out
mov
orl
jp
hlt
inc
mov
mov
ljmp
jnp
pop
push
pop
dec
jns
push
dec
flds
clc
push
xlat
and
mov
jle
es
inc
xor
js
imul
mov
in
add
ret
ret
dec
xor
inc
sub
xor
stos
cs
mov
pop
out
js
lret
aam
movsl
scas
mov
int3
hlt
jns
mov
push
cs
jg
aaa
loope
sahf
ret
ret
or
xor
loop
fadd
hlt
dec
ds
jnp
push
jo
fstpl
sahf
adc
add
inc
add
js
and
mov
and
pop
sub
mov
sub
inc
xchg
and
mov
cmpsb
xor
xchg
sub
andb
adc
mov
and
pop
pop
inc
or
lods
incb
push
mov
scas
aad
jl
xorb
loopne
adc
test
dec
cmp
add
push
into
and
mov
push
xchg
loop
sbb
cmp
idivb
jge
or
out
inc
cmpsl
rolb
inc
adc
aam
enter
adc
lea
xchg
mov
xchg
mov
push
clc
out
fsub
cmp
cmp
mov
das
movsl
cmp
sar
adc
je
or
and
or
in
xor
add
or
add
jb
cmc
or
fnstcw
inc
or
hlt
mov
mov
xor
push
leave
stc
rolb
lcall
jge
aas
lea
or
sub
push
xor
and
je
inc
jl
out
int3
mov
lret
cld
arpl
push
sub
push
push
movsl
lcall
push
inc
xor
cli
mov
mov
sub
jmp
push
pop
in
xchg
fadds
cmp
cli
popf
jp
xlat
orb
enter
fsubrl
sub
loopne
add
es
adc
jmp
jb
das
mov
fidivrl
pop
int
sub
adc
add
jno,pt
je
and
jl
mov
sub
jl
mov
mov
push
out
inc
cmpb
push
jg
xchg
out
xorb
sti
xor
dec
cmp
lahf
add
add
xor
addr16
dec
test
push
mov
test
mul
stc
bound
or
addr16
mov
pop
or
insb
lea
lods
cmp
cmc
push
sub
ds
inc
cmp
and
cmc
inc
cld
fsts
mov
xchg
call
xchg
or
aaa
push
int3
inc
sub
rol
push
aam
or
mov
aaa
mov
jg
jae
fstpl
add
fnstsw
mov
test
cmp
xor
xchg
push
nop
sbb
cmc
cmp
fwait
sub
add
xor
and
loope
jge
xchg
jne
sub
lea
xchg
out
int3
pusha
xchg
sbb
rorb
adc
cwtl
sbb
or
inc
repnz
rolb
jmp
pop
mov
cmp
xchg
out
mov
jl
shlb
cwtl
addr16
mov
fcmovnu
push
xchg
es
xor
std
in
mov
push
mov
mov
mov
sub
cmpsb
adc
out
fisubrs
shl
int3
and
in
pop
push
test
mov
movsl
mov
mov
jmp
xlat
add
sahf
adc
repz
cmp
imul
pop
iret
arpl
sub
add
rcrb
fs
aad
ss
xor
cmp
or
sub
xor
cmc
jb
xlat
mov
lods
into
in
sub
jo
sub
adc
ja
sahf
xor
xchg
jno
into
cmp
pop
pop
test
outsl
push
sarb
fldl
add
lcall
sub
mov
jl
push
mov
pop
cli
aad
test
out
jg
jb
fdivs
adc
jo
fsubp
add
bound
lret
movsl
jge
or
fisttpll
jbe
js
jb
shr
adc
jnp
ja
xor
loopne
das
sbb
fisubrl
js
cmp
cwtl
push
notl
cmp
pop
sub
jge
adc
push
sub
cmp
xchg
test
fisubs
mov
outsb
sub
enter
ret
adc
mov
insb
inc
clc
loopne
add
and
xchg
mov
lods
movsl
push
adc
sbb
cmpsb
bound
stc
jg
adc
ja
sbb
leave
push
xchg
les
mov
xchg
shr
aas
stos
push
add
mov
jp
adc
filds
adc
cmp
xchg
dec
push
pop
jae
lods
sub
fldlg2
mov
push
sbb
or
sub
mov
rcrl
or
es
cmp
fadds
jbe
sub
sub
cmp
add
sub
mov
je
roll
into
and
adc
test
jge
loop
pop
mov
ficoml
icebp
xor
fdivl
pusha
inc
sub
add
sbb
repnz
lcall
sub
sar
xorl
mov
pop
sub
or
xchg
pop
ja
sub
rclb
aam
cmp
test
adc
xchg
sub
cwtl
mov
pop
mov
lcall
jae
xchg
test
inc
es
or
adc
enter
cld
nop
outsl
sbb
sub
mov
add
out
mov
aas
shl
or
mov
and
jne
inc
xchg
mov
ret
lcall
dec
ret
std
jmp
cld
xor
lods
rclb
sbb
push
mov
xchg
das
jl
lcall
insb
fmull
jl
mov
adcb
fcoml
cld
out
rcl
icebp
repz
fisubs
les
ret
test
add
push
or
add
repnz
push
push
into
call
arpl
scas
rorl
cmp
mov
sbb
daa
push
hlt
testl
or
cmp
jae
dec
add
aam
and
lods
repz
pushf
sub
cmovp
arpl
mov
mov
test
mov
sbb
into
sar
nop
out
aaa
daa
xorb
mov
push
jg
mov
mov
jecxz
aam
fldt
into
ds
not
xchg
push
das
sub
lock
push
scas
or
jns
ficoms
inc
in
enter
pop
add
sub
mov
xchg
or
sahf
fisubrs
add
lods
and
pop
push
xor
aam
ret
out
in
push
cld
test
or
in
inc
jno
dec
mov
mov
pop
movsb
ret
mov
jne
out
rcr
or
sub
adc
sub
aaa
jo
jne
xchg
mov
add
aam
call
adc
inc
and
cmp
cmp
sub
movl
sub
jecxz
push
out
mov
pop
mov
rol
push
cld
adc
dec
jnp
inc
repz
inc
aas
or
xor
mov
push
mov
test
cwtl
xor
mov
pop
sarl
stc
inc
js
dec
rcrb
push
addr16
sbb
aaa
gs
add
adc
stos
lea
push
add
lea
mov
sbb
sbb
test
inc
in
jne
icebp
jge
cmp
arpl
push
push
aad
aaa
sub
or
pusha
push
sti
and
xchg
cmp
repnz
subl
gs
dec
and
and
push
sub
lret
ja
ljmp
dec
mov
push
das
mov
xchg
cmc
sub
cmpsl
jnp
out
jne
adc
jl
cli
add
mov
sbb
iret
mov
push
daa
mov
insb
orb
fstpt
lcall
fwait
jecxz
mov
fwait
sti
push
mov
pusha
aam
out
iret
ret
inc
mov
subl
insl
dec
xlat
lods
push
pop
dec
dec
dec
andl
inc
xchg
add
sbb
sbb
loop
pop
push
loop
push
jecxz
jmp
mov
sbb
jp
pop
push
aad
push
sub
ret
sbb
out
sub
xor
jecxz
mov
sub
jae
cli
push
int
sub
cmp
lods
mov
mov
mov
mov
or
scas
jne
push
fimull
jns,pt
popa
int
xor
push
lods
cmp
stos
xor
push
cwtl
bound
xchg
clc
outsl
insb
push
mov
shrl
mov
repz
sbb
xchg
arpl
and
mov
loope
jl
xchg
dec
ret
xchg
sbb
sbb
in
add
loope
and
shlb
hlt
test
and
push
clc
ds
mov
mov
sbb
sbb
daa
push
scas
mov
xchg
sbb
sub
add
jmp
jl
xchg
add
dec
mov
inc
sbb
scas
out
sbb
cld
adc
imulb
sbb
xchg
pop
pushf
cmc
test
sbb
lea
ret
or
sub
jns
cmp
or
mov
cli
aas
cmp
stos
divb
lods
js
mov
add
xchg
xor
jl
and
or
pop
add
int3
add
lods
pop
das
outsb
fcoms
mul
pop
mov
pop
dec
xor
xchg
cmp
xchg
adc
pop
fs
dec
add
add
aam
lods
push
fldcw
mov
imul
negl
scas
mov
cld
loope
test
adc
mov
out
aas
pusha
jg
or
lahf
pop
rcl
jp
jle
add
push
adc
jbe
sbb
aad
icebp
call
xchg
jns
or
pop
pop
enter
mov
popf
lahf
adc
and
or
mov
cmp
inc
or
ljmp
rcll
jbe
jle
fwait
pop
test
into
adc
aad
sbb
out
push
lahf
test
mov
mov
orb
jl
and
push
inc
mov
imulb
shlb
negb
xchg
jbe
mov
add
pop
ljmp
xchg
xchg
lcall
out
daa
and
ret
shlb
jp
add
fs
jecxz
bnd
xchg
arpl
cs
bound
mov
cmp
mov
jge
xor
add
in
dec
dec
pop
push
mov
and
mov
mov
mov
sub
ret
pop
call
in
hlt
lods
lret
ret
sbb
ret
lret
lret
lahf
adc
mov
cli
cmp
sahf
je
cwtl
lods
iret
scas
jl
js
xor
loopne
jnp
in
call
shlb
out
aaa
loop
add
shl
popa
sub
rcrb
pop
out
sub
dec
pop
enter
jae
cwtl
lahf
inc
or
xchg
dec
cltd
jmp
push
jne
xchg
jge
aam
jl
sbb
sbb
ret
fmull
xchg
dec
dec
lock
xlat
mov
out
sub
rcl
mov
je
add
push
popf
xlat
leave
fimull
jp
and
and
ret
add
adc
mov
jnp
aad
std
out
dec
jecxz
sub
fcomps
into
hlt
cld
les
cmp
enter
rcl
adc
imul
pop
push
orl
sarl
rcl
adc
aam
scas
jmp
jmp
pop
push
pop
jp
push
cwtl
data16
test
adc
sub
or
stc
divps
inc
cmp
ja
xchg
lds
cmc
push
fisubrs
add
jae
call
adc
jo
cmp
inc
adc
mov
mov
out
pushf
sub
lret
mov
popf
or
or
sarb
and
mov
imul
lods
dec
cmp
jbe
sub
mov
sub
jmp
mov
es
lcall
int
outsl
cmc
inc
out
dec
xor
push
lock
xor
push
icebp
mov
cld
push
and
rcr
xor
cmc
sub
pop
mov
testl
dec
outsl
push
cmp
xchg
inc
rclb
notl
mov
inc
or
and
ds
int3
mov
rcrb
sub
rclb
mov
jo
dec
jbe
sarb
je
ja
and
inc
or
subl
dec
frstor
mov
in
lret
repz
stos
adc
push
push
out
mov
lret
mov
mov
push
sarb
dec
in
fists
fmull
mov
adc
push
ljmp
stc
push
sbb
or
jp
xchg
fiadds
cld
dec
xchg
pop
stos
cmp
inc
testb
stos
pushf
push
fidivrs
xchg
cli
test
adc
mov
jne
xchg
int
pusha
push
cs
inc
loope
mov
mov
xor
stc
inc
xlat
test
inc
mov
mov
lods
xchg
lea
push
fs
enter
fsubrl
cmpsb
test
push
xchg
inc
lret
fistps
push
jns
dec
jbe
sahf
lods
xchg
cli
adc
test
jns
xchg
sub
dec
push
sbb
push
mov
jnp
jnp
xor
shlb
jbe
xor
inc
and
dec
stos
inc
lret
gs
ljmp
cmp
mov
mov
or
sbb
mov
adc
fcomps
ljmp
jg
xchg
dec
pop
call
stos
dec
xchg
sbb
popa
hlt
lahf
fidivl
aaa
lcall
xor
sub
lret
push
ret
in
addl
shl
lock
mov
mov
das
outsl
fdivrl
xchg
daa
add
sub
sti
out
fldl
sbb
pop
out
pop
pushf
push
sub
fbstp
shlb
dec
mov
lods
dec
mov
fmul
dec
std
ret
inc
test
mov
mov
dec
add
cmp
xchg
stos
in
fnsave
add
pop
int3
add
mov
xchg
xor
mov
lcall
movsb
sub
xchg
add
js
pop
js
mov
mov
jne
mov
leave
or
pop
mov
aas
mov
cmpsb
jge
jle
scas
inc
sti
lea
mov
sub
jle
sub
aad
cmp
mov
je
js
xor
push
mov
sub
daa
push
popf
mov
jo
or
xchg
pop
sbb
hlt
cmpsb
inc
loope
hlt
dec
nop
jecxz
adc
out
dec
xchg
push
pop
fstp
sub
stos
fadds
cld
dec
nop
and
ja
mov
mov
sub
cmpb
lock
jns
xchg
sar
in
in
mov
mov
cmpsb
jge
or
dec
imul
mov
add
sub
cmpsl
pop
cmp
pushf
shll
pop
dec
es
or
adcb
jp
mov
pop
mov
inc
or
xor
sub
icebp
leave
adc
decb
sub
loope
adc
outsb
cmp
jbe
jp
imul
jne
aam
adc
jbe
or
sbbl
adc
shrb
stc
adc
lret
jnp
leave
rcl
mov
xor
mov
sub
xchg
push
daa
cmc
nop
bound
jge
mov
sub
divl
test
jg
sbb
sarl
xlat
dec
test
sbb
xorb
sbb
push
out
ret
cwtl
outsl
lret
mov
sub
jg
js
xchg
adc
lods
xchg
xchg
adc
cltd
inc
add
mov
add
sbb
xor
add
aaa
test
or
sahf
aad
pusha
imul
lods
pushf
adc
pop
mov
mov
out
imul
lea
jmp
faddl
and
sub
mov
mov
mov
iret
xlat
add
lock
xchg
sub
popa
pop
ret
mov
mov
andl
xor
dec
int
and
add
sub
out
lea
sub
inc
inc
jne
pop
push
rcrl
jmp
pop
jecxz
dec
xlat
mov
adc
adc
lcall
sub
loope
or
imul
aam
push
aaa
popf
pop
inc
insl
aaa
or
js
je
ret
xchg
or
ret
adc
xor
lds
daa
pop
ret
int
xchg
cli
imul
jg
and
inc
dec
cmpsl
cmp
int
scas
push
stc
or
pop
or
xchg
xor
jo
shlb
jae
adc
and
fs
and
stc
jne
adc
pop
fwait
dec
adc
sub
out
in
addr16
ret
ds
fld1
out
wrmsr
and
int3
inc
xchg
add
mov
nop
insb
jle
fdivrl
xor
ds
pop
inc
xchg
xlat
cli
mov
add
cmp
in
ret
mov
test
jmp
jns
or
repnz
hlt
xor
mov
stos
cmp
jnp
ret
lret
sub
adc
lods
call
or
add
lahf
aam
xor
sub
jbe
fld1
adc
cmp
xchg
in
xlat
cltd
les
icebp
mov
leave
aam
cmpsb
jmp
jge
xor
dec
sub
jp
dec
add
jne
xor
or
iret
or
or
aas
add
jne
xor
xchg
in
in
mov
and
add
dec
push
and
mov
sub
out
mov
mov
clc
pop
xor
out
add
jno,pt
sub
loopne
out
xchg
mov
insl
or
add
pop
shr
fsts
pushf
and
jns
aaa
xchg
xchg
in
in
xor
sub
sub
les
loopne
popf
add
ror
pop
pushf
xor
aad
sub
xchg
aad
cld
sbb
inc
sbb
popf
xor
in
test
out
aam
mov
pop
stc
sub
jp
jnp
lods
push
xorl
push
shll
stos
shl
sub
incl
mov
xor
lods
inc
es
pop
dec
push
mov
imul
add
xor
sbb
fiadds
gs
mov
mov
cmp
addl
pop
sbb
pop
inc
bswap
aas
and
adc
or
add
jne
adc
and
lods
mov
in
sub
aam
aam
jnp
pop
and
clc
aas
and
stc
sahf
or
sbb
xchg
aas
add
repnz
sbb
cwtl
dec
add
jle
inc
aas
sub
daa
sub
fstl
jbe
lahf
pop
dec
aam
dec
mov
std
push
pop
sub
cmp
addr16
imul
testl
dec
dec
add
xchg
sub
sub
data16
test
fs
in
js
or
mov
sub
pop
jo
mov
jbe
mov
arpl
scas
enter
mov
adc
hlt
and
xor
cmp
xchg
xchg
out
test
jno
jne
fcoms
mov
fiadds
fninit
jl
xchg
mov
push
mov
lea
data16
sbb
xorl
push
push
pop
add
shlb
mov
lods
jno
ja
sub
cmp
addr16
or
push
jecxz
xor
cmp
xorl
and
mov
jmp
movsb
mov
out
jl
lods
push
xchg
pop
xchg
inc
sub
shll
mov
test
shlb
adc
movsb
inc
xor
outsl
scas
push
aas
dec
xor
lock
jns
xchg
fs
pop
js
or
jo
lahf
lods
pusha
ret
jns
add
and
or
xor
xor
xor
testb
mov
mov
xor
mov
punpcklwd
mov
cwtl
add
jg
push
and
mov
imul
push
mov
lcall
adc
sbb
fs
shl
pushf
scas
mov
dec
ja
mov
aaa
pop
cmpsl
mov
out
cmp
daa
pop
xor
jmp
fisubrs
xchg
lea
out
mov
insb
repz
mov
test
dec
pop
lods
add
hlt
sub
xor
scas
imul
jge
fcompl
testb
or
daa
mov
push
jne
adc
adc
xchg
imull
sub
jge
jl
xor
arpl
mov
dec
xor
mov
xor
sahf
mov
fnstenv
xchg
aad
test
jmp
add
repnz
xchg
mov
jle
mov
pop
jmp
js
test
jp
push
inc
jo
ja
add
xor
out
push
jnp
ret
jecxz
roll
xor
dec
add
mov
xor
outsb
in
test
cmp
sub
xchg
js
test
mov
mov
les
mov
jnp
js
mov
mov
jae
mov
outsb
xor
stos
loopne
sbb
xor
pop
or
cltd
icebp
sbb
sti
nop
pushl
add
loope
jmp
adc
mov
xor
mov
test
jge
cmpsl
test
in
pop
in
in
sub
xchg
push
shlb
leave
sub
push
lret
xor
dec
jno
mov
xor
outsb
pop
sub
pop
sub
jns
push
je
sbb
fcoms
jecxz
or
push
in
inc
jle
xor
cmpsl
push
lcall
xor
or
push
inc
and
mov
jge
sub
pop
jae
jno
push
push
je
xor
push
adc
xor
dec
xchg
mov
sti
cmpsl
data16
adcl
xor
sbb
insl
gs
or
dec
mov
xor
sub
scas
mov
daa
xor
xchg
out
dec
idivl
ret
insl
addb
jb
push
xor
and
mov
mov
shrb
xchg
mov
scas
test
and
sub
and
pop
cmp
push
ret
sbb
test
adc
xor
inc
jbe
sti
xor
ljmp
mov
fcoml
push
mov
xor
dec
mov
ficoms
inc
xor
bswap
xchg
ss
fistpl
andl
scas
sub
mulw
xor
xchg
outsb
adc
xorl
aam
dec
adc
mov
fs
jl
mov
js
push
ret
cmp
clc
cmp
sub
imul
dec
jmp
jae
mov
inc
das
ret
xor
xchg
in
lds
jge
xor
xor
out
lcall
add
test
insl
xor
stos
ss
adc
loopne
pop
jne
sbb
sti
and
hlt
inc
shl
xor
mov
xor
das
insb
lcall
call
ja
mov
scas
jnp
insb
fiaddl
add
lret
je
pop
sub
cwtl
aad
jl
xor
add
adc
push
push
sbb
mov
in
xor
mov
sub
push
daa
scas
sbb
sub
rcrl
mov
xor
pop
and
aad
stos
xor
xlat
mov
xchg
cmc
cmp
push
push
jbe
mov
and
das
xor
dec
out
pop
push
ret
outsl
stc
xor
sbb
sub
mov
sub
add
inc
dec
sarl
mov
pop
shlb
mov
mov
in
push
mov
aad
lret
jo
sbb
call
lea
xchg
mov
mov
sub
std
jmp
je
hlt
or
mov
fsubs
in
dec
sbb
mov
or
push
add
push
jle
xor
orb
xor
in
mov
movl
mov
xor
test
xchg
jmp
mov
mov
sti
push
aam
xor
orb
leave
mov
imul
add
fimuls
fsubs
add
aad
cltd
xchg
dec
in
stc
push
imul
xor
pop
iret
pusha
jl
xor
adc
outsb
dec
scas
imulb
mov
jl
and
jns
xor
mov
jp
dec
fdivr
or
ss
iret
stc
sbb
cmc
rcll
popl
jne
jmp
and
cmc
push
xor
stos
jae
inc
popf
cmp
xor
pushf
loope
jmp
lds
jle
xor
xor
or
pop
pop
imul
hlt
jmp
xor
insl
scas
repz
mov
hlt
xchg
mov
pop
aad
xor
int
or
inc
in
inc
fnstsw
push
into
mov
mov
xchg
cmp
sbb
test
das
adc
xlat
fnsave
pop
jno
pop
dec
mov
pushf
sar
and
in
lds
sahf
rcl
and
add
test
dec
int3
enter
ja,pn
jmp
cmp
loope
jg
push
je
fistl
cltd
or
test
push
in
and
aam
push
cs
es
mov
xor
push
dec
cmpsb
mov
lahf
xor
gs
cld
cmp
jo
xor
mov
fldenv
and
data16
imul
jo
sbb
in
and
and
cwtl
adc
test
aad
mov
sti
xor
fsubs
shl
iret
not
stos
mov
fisttpl
popa
inc
push
cmp
jecxz
inc
xor
pop
sub
xor
cli
sub
icebp
jle
nop
xchg
insb
idiv
mov
xor
push
jae
and
xor
outsl
daa
jno
test
in
xor
cmpsl
pop
repz
adc
mov
jp
mov
aad
adc
pop
das
xchg
mov
fldenv
add
inc
addr16
sub
or
adc
imull
adc
inc
imul
jae
and
test
ljmp
testl
leave
cs
and
xlat
mov
push
pop
fistl
jne
jmp
dec
aam
jl
shlb
insl
out
dec
int3
repnz
push
out
in
xor
xor
cmpsl
push
inc
adc
stos
jmp
loopne
mov
dec
cmp
adc
jbe
adc
mov
les
xchg
xor
and
xorl
jbe
subb
adc
mov
add
js
push
into
adc
jb
push
scas
add
test
mov
mov
mov
mov
lret
cmp
sub
pusha
aam
call
add
ss
mov
dec
ljmp
lods
sub
mov
int3
and
gs
sub
aam
mov
les
xchg
stos
test
arpl
cmp
iret
or
and
aam
call
push
enter
jns
mov
adc
and
les
loopne
mov
aam
enter
push
mov
inc
outsl
lahf
push
aad
test
lods
movsb
adc
outsl
pop
clc
outsl
out
enter
sub
shll
mov
jne
xchg
out
or
sbb
sub
mov
pushf
ja
je
enter
adc
test
popa
jp
mov
or
andb
or
add
sbb
fldcw
adc
xor
enter
lret
outsl
das
sub
lds
mov
movsl
int
xor
loopne
mov
xchg
ss
adc
pop
mov
lods
or
into
into
and
sub
ja
cmp
loop
icebp
jnp
lea
fxch
out
jnp
out
decb
cwtl
addl
mov
xchg
dec
sbb
push
movsl
push
stc
daa
lahf
xorb
int
sub
popl
ret
cld
push
mov
dec
xorl
lock
orb
inc
cmp
sub
cmp
adc
mov
aad
cmp
inc
lods
rcl
imul
and
ljmp
jl
xor
mov
aam
sub
mov
push
pushf
dec
mov
jns
bswap
movsl
jno
or
mov
and
mov
dec
mov
test
xor
pusha
xor
ds
sbb
mov
xlat
and
int3
mov
and
inc
aas
cmp
mov
jae
popa
sub
xchg
push
aas
or
inc
sub
faddl
pop
or
jg
jne
mov
and
sub
mov
fisubrs
lret
mov
pop
or
mov
pop
aas
sbb
mov
hlt
sbb
pop
repnz
dec
pop
mov
xchg
cmpsl
xor
rcrb
ss
dec
cmp
sub
dec
out
sub
mov
adc
jns
iret
mov
shlb
mov
sbb
add
inc
xor
stc
pop
mov
out
mov
fwait
dec
loope
test
sub
fs
lods
add
and
or
fistps
jb
cmp
push
sti
ds
add
dec
pop
sbb
adc
sbb
sub
sub
ror
and
cwtl
insb
add
mov
xchg
xor
push
mov
xor
rcrb
sbb
sub
dec
gs
adc
dec
test
lods
xor
fimuls
mov
call
push
das
jne
mov
cmp
dec
imul
jge
jnp
add
clc
in
shl
movsb
or
movsl
sub
std
jl
mov
es
mov
xchg
sub
cmpl
mov
adc
mov
std
jmp
sarl
jp
rclb
adc
loop
add
in
aaa
inc
ret
pusha
jle
xchg
xchg
and
mov
and
addr16
test
inc
add
test
inc
push
pop
arpl
jmp
outsl
or
cmp
mov
add
xchg
mov
push
stos
mov
xchg
call
js
fdivs
ret
daa
mov
push
int3
sub
mov
mov
fcoml
enter
icebp
aas
jns
leave
enter
aad
mov
lods
shrb
jbe
pop
mov
inc
lahf
mov
and
outsl
in
test
jne
pop
xchg
adc
add
jg
sbb
and
jge
aas
mov
cmp
xlat
bound
jg
jns
loope
cld
or
inc
dec
lock
cmpsl
call
sub
lods
ficomps
lret
out
pop
ljmp
push
inc
sub
jne
out
inc
mov
mov
pop
cli
rcl
adc
xor
es
jne
in
mov
hlt
pop
fists
lret
sub
sahf
push
lret
mov
mov
aas
xchg
inc
mov
inc
movsl
push
add
add
push
sub
in
fdivrs
scas
std
fimull
sahf
xor
jbe
mov
sub
rorb
or
test
fsub
sub
lock
mov
jo
sbbb
pop
ljmp
jmp
mov
lds
andl
int3
ret
xor
movsl
and
lods
add
fsts
mov
jge
xor
adc
ret
push
test
shll
lcall
cmp
outsl
mov
cmp
into
add
into
jmp
mov
mov
rclb
sbb
jg
cmp
aad
mov
shrb
je
mov
pop
out
popl
leave
sbb
in
or
pushf
insl
stos
outsl
mov
int3
jne
shlb
add
mov
in
push
jno
jo
mov
popa
out
jno
or
cmp
xchg
sbb
aam
rolb
xor
xchg
icebp
sub
lret
testb
or
fs
daa
roll
push
cmp
ret
pop
add
lods
push
negb
loop
ja
mov
mov
dec
cs
daa
stos
out
mov
jecxz
xchg
dec
dec
push
jecxz
jns
mov
les
mov
and
inc
dec
imul
sbb
mov
xchg
and
cld
fisttpll
or
pop
call
out
adc
fdivrl
jns
imul
cld
mov
iret
push
push
leave
outsb
xchg
pop
sub
pusha
push
insb
inc
xlat
jecxz
sbb
rcrb
push
frstor
fwait
mov
xor
pop
sub
lret
lods
xchg
je
rcr
add
popa
push
lret
arpl
adc
push
imul
int3
arpl
adc
test
int
adc
test
sub
dec
cltd
aas
sub
sub
enter
ds
in
pop
sub
xlat
into
cmp
lds
and
inc
xchg
insb
dec
jg
pop
aam
ret
sub
lret
pusha
nop
adc
imul
out
mov
add
fs
cwtl
ret
lret
lahf
arpl
hlt
push
outsl
xchg
repz
mov
mov
sub
lods
xchg
push
stos
pop
dec
pop
xchg
divb
mov
jmp
imulb
mov
mov
test
pop
adc
loop
int3
pushf
scas
fs
in
pop
nop
pop
adc
fstl
pop
push
loopne
adc
dec
movl
jo
movsb
xchg
fidivrs
leave
repz
xchg
push
adc
in
and
xchg
xor
sub
pusha
ja
jle
mov
dec
aas
cmpb
push
loopne
push
shlb
push
in
adc
jb
add
xor
sub
stc
adc
jbe
adc
add
std
add
xchg
push
repnz
scas
add
iret
les
addr16
mov
aad
cmp
cmp
sarb
push
dec
sub
sub
and
test
loop
outsl
call
repz
xlat
pop
repnz
out
mov
xchg
repnz
mov
inc
inc
mov
xor
test
push
jb
add
fdivrl
icebp
inc
mov
add
stc
daa
sub
xchg
out
sbb
push
xor
pushf
sbb
fwait
and
out
aaa
cmp
xor
cld
xchg
pop
pop
mov
cmp
out
dec
mov
fildll
push
in
mov
sahf
adc
imul
scas
sarl
jmp
nop
shrl
rclb
rcll
aas
sub
xchg
ss
into
xchg
push
adcl
lods
or
push
push
mov
call
jg
xor
and
sbb
ret
mov
jo
shrb
test
les
ljmp
and
add
and
pop
jp
out
movsb
pop
cmp
les
test
decl
mov
inc
lods
jo
lcall
cmp
lahf
push
lcall
jle
pop
pop
sahf
push
jb
mov
iret
sub
testl
test
outsl
hlt
mov
fdivl
lcall
pop
lret
dec
pop
xor
mov
or
dec
mov
cwtl
test
adcb
out
aad
shrl
cmpsl
inc
mov
mov
fcmovbe
cmp
and
scas
leave
out
nop
sbb
sarb
cltd
daa
mov
sub
xor
mov
in
sti
stc
ret
sbb
jbe
insl
push
out
xor
push
lods
xchg
fwait
xorl
pop
mov
adc
rcll
stc
adcl
std
mov
outsl
mov
and
xor
push
jecxz
mov
or
rolb
sub
gs
mov
in
xor
lods
mov
fisubrs
stos
add
int
loop
sbb
in
jae
sub
xor
xlat
and
or
or
cmpsl
in
pop
fcomp
jae
lock
movsb
adc
pop
add
daa
jo
sub
repz
ss
les
xchg
jmp
insb
pop
adc
fstp
jno
push
int
pop
adc
ljmp
xlat
mov
je
test
fsubrs
and
aas
xorl
roll
flds
xor
pop
mov
cld
sti
dec
aam
hlt
inc
xorl
mov
xchg
fcoml
sti
movsb
out
rcl
push
bound
aam
lret
icebp
adc
sub
mov
jp
ja
movsl
lock
aam
pusha
sub
shr
in
fcoml
pushl
push
push
jle
lret
cmp
ret
ret
mov
cmp
jg
lods
test
ret
insl
pop
int
mov
lods
rorb
enter
ja
fcmove
inc
push
mov
lods
xor
mov
sar
repnz
pusha
pop
fistl
notb
push
out
or
rclb
out
imul
lret
jge
in
test
and
push
pushf
mov
sub
fmul
ja
insb
fldl2e
ja
xchg
adc
xchg
push
or
movsb
jb
mov
xchg
sbb
out
fisubrl
gs
cmpsl
mov
push
cld
push
mov
xchg
jp
push
test
hlt
jbe
jae
sahf
lods
push
adc
and
aaa
test
pop
stc
pop
call
adc
sub
xchg
jb
mov
fnsave
ds
ljmp
sub
aam
insb
jb
dec
xor
jbe
inc
and
xchg
cmp
rorb
andb
popa
int
mov
test
jp
mov
add
sub
jo
out
mov
int3
cmc
add
jg
fdivrl
or
push
sub
mov
mov
mov
js
xor
xchg
adc
push
jp
inc
mov
xchg
fimuls
mov
mov
or
sub
addr16
fs
mov
mov
mov
xchg
fistl
in
call
lret
or
cli
stos
xor
adc
ss
push
enter
mov
fcmovnu
shl
or
push
out
adc
jnp
jo
inc
inc
in
sarl
ret
ret
addr16
mov
push
std
mov
push
in
fdivl
mov
sbb
aam
xchg
data16
and
jnp
movsl
sbb
xchg
fisubrs
cld
ja
addr16
cmpsb
lods
or
or
in
jne
mov
movsl
ja
cmp
inc
xchg
mov
push
push
xchg
iret
in
ret
sub
mov
bound
mov
insl
mov
mov
arpl
rcrb
enter
cwtl
ja
cmpb
lods
pop
jmp
test
mov
pop
and
sbb
cltd
add
inc
mov
repnz
aad
iret
add
add
fidivrs
mov
pop
rorl
repz
repnz
jno
ret
and
xor
cmpsl
cld
adc
call
cwtl
repnz
ret
movsb
clc
pop
imul
icebp
xchg
adc
jae
fisubs
les
lods
mov
xchg
cmp
inc
inc
add
cwtl
mov
fs
add
andl
jge
dec
imul
ret
test
mov
out
shlb
sbb
popf
adc
sub
icebp
aad
cmpsb
jl
and
lret
adc
xchg
xor
or
aam
sub
mov
mov
ljmp
xor
sbb
dec
jo
test
add
cli
sub
jl
add
iret
sbb
xor
divl
push
lods
pop
or
into
or
out
pop
xor
inc
rcrb
adcb
xchg
jne
pop
in
ror
fidivs
inc
xor
adc
aad
ret
out
xchg
jne
adc
sub
pop
in
adcb
sbb
add
insl
in
lods
sbb
out
in
imul
neg
push
stos
sub
add
xor
rorl
call
adc
pop
dec
dec
add
adc
push
int3
fiaddl
inc
push
inc
add
mov
shl
imul
xorl
xor
out
jg
xchg
adc
stos
jnp
js
sub
cltd
je
xchg
push
stc
popa
insl
stc
ja
mov
sub
ss
mov
dec
inc
pop
dec
pop
lahf
mov
pusha
out
pop
push
lea
fcmovnu
push
add
loopne
cltd
sarb
clc
aad
jne
pushf
jmp
dec
out
mov
adc
inc
inc
pusha
adc
fprem
js
sahf
cmp
in
mov
mov
lods
insb
movl
daa
mov
cwtl
and
sub
sub
aam
in
fadds
lea
sub
incb
test
and
insb
sub
mov
xchg
push
xor
orb
jns
jecxz
int
shl
push
roll
sub
bound
shl
in
aad
xchg
daa
pop
dec
xchg
divl
jecxz
rol
jns
jmp
inc
call
out
arpl
sarb
sarb
push
mov
add
xchg
sbb
push
inc
and
repnz
fwait
mov
lock
cltd
arpl
out
add
xchg
in
nop
cmpsl
iret
push
cmp
loope
jo
loopne
pop
sahf
imul
cmpsb
add
and
lods
sub
enter
add
test
jecxz
xchg
mov
ret
sub
lea
dec
leave
shrb
xor
lfs
in
cmp
aas
xchg
mov
mov
cli
and
fs
fcmovnbe
or
outsl
es
push
data16
sahf
cmp
aad
fstpl
xchg
push
out
mov
pop
fnstenv
xchg
out
mov
cmp
push
sbb
testb
fs
jp
iret
mov
movsb
jbe
mov
dec
subl
mov
sbb
inc
or
arpl
add
sub
cmp
imul
scas
stos
stos
and
orl
lds
mov
lret
outsl
out
lcall
pop
sub
popf
mov
hlt
lods
mov
fisttpl
sub
aad
inc
call
test
std
push
rcr
in
fnsave
jg
in
imul
jb
push
sbb
or
movsb
jmp
xchg
xor
cltd
adc
jmp
test
and
adc
adc
leave
push
stc
lret
jae
fcos
outsb
push
sub
inc
jmp
cmp
popf
imul
lods
rorl
in
jns
push
or
dec
cld
mov
sub
mov
ficomps
xchg
sbb
fwait
jl
or
add
xor
inc
iret
stos
inc
add
push
cmp
push
addl
or
lea
mov
lahf
hlt
jbe
cwtl
pop
inc
push
jp
dec
inc
ja
call
mov
lock
sub
cs
in
ja
je
cmp
xchg
js
cmp
lcall
dec
mov
xor
fstpl
mov
pop
mov
sub
hlt
into
jp
repz
inc
movsb
jecxz
cwtl
test
repnz
push
clc
xchg
pop
xor
fsubl
push
lahf
loope
mov
pop
xor
call
push
jmp
iret
je
rcll
gs
aaa
dec
fidivrl
jae
sub
inc
cs
testl
jp
shrl
sbb
lods
jo
popa
les
in
out
gs
ljmp
pause
or
dec
movsl
loopne
daa
mov
push
test
or
push
sub
imul
mov
mov
lea
outsl
ja
cmp
mov
adc
mov
sub
pop
sub
lds
mov
data16
jb
or
ljmp
jg
lahf
adc
mov
rolb
sbb
pop
fst
mov
repnz
adc
popf
or
sub
test
jno
add
lea
jge
rol
and
xlat
xchg
test
mov
pop
push
sarb
hlt
jge
out
sub
lahf
lret
pop
mov
cmp
jo
sub
add
push
test
daa
out
test
aas
xchg
adc
cmp
test
ja
aas
push
xchg
dec
mov
add
adc
je
mov
cmpsb
int3
ficomps
hlt
stos
outsl
inc
sbb
ljmp
sub
stc
lods
sub
lea
push
dec
or
mov
pop
xchg
push
xchg
in
lea
jp
dec
loopne
xchg
sub
jnp
addr16
adc
jae
test
push
sarb
or
inc
pushf
test
cwtl
mov
and
lock
adc
xchg
je
mov
pop
das
push
xor
push
aad
imul
scas
into
ja
push
in
fs
aaa
cmpsb
cmp
outsl
das
push
adc
test
lea
or
xor
sub
out
aaa
ljmp
jne
insl
xchg
jae
arpl
push
jno
out
push
sti
loopne
sub
mov
sub
jmp
jne
lahf
negl
pop
loopne
pop
mov
jo
sub
js
and
in
aas
sub
mov
adc
pop
inc
das
lret
pop
aaa
pop
xchg
sub
out
push
pop
lret
loopne
jae
sbb
jno
insl
xchg
fstpt
mov
fs
je
jl
jge
or
sub
lods
sbb
inc
pop
mov
lahf
test
les
test
pop
xchg
rcll
movsb
inc
pushf
mov
sti
out
dec
inc
pop
aas
xchg
and
mov
negl
test
sahf
jp
enterw
and
sbb
cwtl
adc
sahf
adc
jl
mov
in
or
jl
out
repz
sub
daa
outsl
daa
pusha
leave
in
js
pop
and
movsl
outsb
iret
out
inc
cmpsb
xchg
mov
cmpsl
and
mov
into
frstor
enter
daa
aad
sbb
or
cltd
lahf
add
push
loope
lds
or
leave
xor
mov
xor
prefetch
add
clc
jne
sub
jbe
outsl
hlt
mov
jo
popa
xchg
and
jae
fcompl
adc
inc
je
sti
cli
in
xchg
icebp
push
pop
adc
in
data16
xor
mov
xor
test
pop
insl
pop
lret
lea
in
sub
shlb
lods
outsb
jg
in
in
jecxz
shrb
dec
movb
push
mov
orb
and
lods
lret
arpl
aad
gs
sub
fildl
pop
movsb
mov
mov
bound
xor
fbld
dec
sti
pushf
fadd
inc
jle
cmp
and
xor
loopne
push
sub
cmp
mov
leave
jecxz
rep
idiv
les
loopne
pop
sub
addr16
push
or
es
or
pop
fmulp
jb
xlat
sub
js
or
mov
lahf
and
lea
test
inc
or
mov
xor
pop
sub
mov
and
adc
add
roll
or
sub
adc
cmc
scas
cmp
inc
mov
and
jnp
ret
cmp
out
jnp
jle
rorb
xor
xor
pop
sub
jmp
sar
into
inc
rcrb
arpl
jmp
call
sbb
leave
fs
aas
pop
cli
push
ljmp
mov
mov
fdivs
sbb
cmpsl
out
addr16
sbb
cli
btr
lods
shll
pop
mov
xchg
add
sbb
and
ret
stos
outsb
aam
cltd
xchg
aad
push
sub
call
popf
or
mov
lods
add
xor
in
sub
mov
add
loope
mov
pop
rcrb
push
ljmp
stos
mov
adc
pop
stos
hlt
outsb
lcall
scas
fbstp
movsb
lods
mov
fdivrl
sbb
cmp
adc
sbb
xchg
in
cmp
xchg
xor
je
dec
cmp
js
outsl
xlat
xorb
call
cmp
std
ja
xchg
push
cli
insb
repz
jl
xchg
sub
inc
in
aam
add
out
lret
push
xor
sbb
rcll
sbb
cmp
mov
xchg
inc
dec
push
mov
daa
mov
leave
test
mov
cwtl
and
in
sbb
call
mov
mov
pushf
dec
jnp
aam
rolb
fucom
sbb
push
sub
jge
fwait
loope
lock
or
push
frstor
xchg
imul
adc
testb
jp
jns
sub
pop
ljmp
xchg
xchg
adc
enter
in
jne
in
and
cmp
and
jb
dec
cmp
adc
das
and
negl
inc
cld
lods
es
out
jae
sub
outsl
adc
xchg
pop
shlb
xor
inc
adc
test
test
jl
movsl
int3
xchg
sbb
dec
lret
adc
imul
jbe
hlt
mov
cmp
sbb
out
lods
pop
or
jnp
hlt
sti
adc
js
loopne
imul
jb
mov
cmp
push
jae
jb
jmp
lahf
sub
lahf
mov
insb
iret
sub
aaa
out
xchg
mov
and
lret
stc
aam
xchg
and
xor
or
ja
cmp
ret
pusha
cmp
stc
aad
mov
test
test
pop
outsl
push
adc
mov
fidivl
sub
sbb
sti
int3
lret
jge
or
decl
or
inc
add
or
jbe
idivl
dec
sub
pop
rclb
dec
fimull
out
cmp
jb
push
in
js
jl
adc
push
mov
dec
mov
ret
call
lds
adc
les
adc
or
jne
inc
scas
jge
xor
inc
push
cwtl
push
jl
in
repz
push
mov
imul
mov
mov
adc
push
js
xchg
ja
lret
shrb
mov
pop
mov
fcomp
sub
mov
imul
dec
mov
aaa
xchg
stos
shll
mov
xor
das
stos
and
sbb
push
jecxz
dec
out
rdpmc
sub
cmpsb
push
les
and
pop
sbb
arpl
ljmp
ret
mov
adc
pop
test
mov
lcall
mov
and
jle
sub
popf
add
sub
mov
repnz
pop
not
jns
sub
jge
cld
jmp
jecxz
dec
or
sub
loop
push
pop
aam
xchg
ds
xchg
mov
jecxz
cld
mov
pop
fs
mov
and
leave
scas
and
call
dec
xor
mov
cltd
sub
mov
or
jb
ret
pusha
ja
mov
rcr
cmp
js
jo
sti
imul
jmp
fiadds
decb
loop
pop
roll
fstps
adc
icebp
popf
fwait
ret
aad
aad
cld
lods
mov
repz
pop
subb
aam
jno
sbb
ret
daa
adc
mov
mov
mov
sub
hlt
aaa
orl
or
or
jnp
and
es
xor
sub
jl
mov
dec
insb
adc
push
xor
sub
jl
in
xchg
pop
push
jecxz
lods
stc
arpl
jo
mov
and
sub
mov
adc
adcl
sbb
push
outsb
push
test
mov
clc
cmp
sub
mov
xchg
int3
or
nop
jno
in
cmc
or
sbb
aad
jp
rolb
inc
sarl
pop
xlat
shlb
in
inc
aas
pop
xor
fsubrl
add
in
fdivl
aas
popa
cmp
adc
sub
ds
addl
dec
adc
jo
arpl
or
cwtl
jne
jns
add
mov
imul
cmc
xchg
xchg
add
and
adc
sub
xchg
inc
push
mov
jns
out
sbb
das
inc
insb
out
jle
jmp
xchg
mov
mov
cmp
push
addr16
lcall
pop
adc
in
mov
mov
jp
clc
repz
jne
sarl
arpl
out
push
xlat
ret
daa
mov
push
xchg
test
inc
xchg
test
push
bound
or
jecxz
mov
mov
xlat
add
push
inc
mov
mov
or
and
or
sub
jnp
sub
mov
dec
repnz
popf
pop
add
cld
sub
lret
testb
jbe
repz
out
jbe
xlat
add
popf
jp
dec
dec
lds
pop
leave
icebp
insb
pop
adcb
arpl
and
clc
sbb
or
incl
sub
mov
pop
push
adc
shr
ja
adc
mov
mov
pop
and
xor
popf
vmaxps
ret
mov
adc
sbb
fmul
in
sbb
fadds
hlt
mov
dec
push
xor
leave
aam
xchg
sbb
mov
adc
lods
dec
decl
call
and
and
cltd
call
sar
das
sub
lock
xlat
iret
js
std
pop
push
mov
mov
xor
les
jmp
lret
lret
jp
test
in
outsb
add
pushf
fsts
loopne
filds
rclb
pushf
andl
or
jno
xchg
out
test
jle
sbb
dec
mov
or
and
out
push
aas
add
xchg
and
enter
mov
xor
test
mov
push
mov
lret
inc
gs
push
repnz
inc
scas
cmp
xor
aas
ficomps
or
mov
pop
jns
xchg
cwtl
lret
ds
sbb
jbe
inc
pop
lock
add
xor
mov
mov
xlat
test
rcl
lods
adc
js
jl
aad
ret
shlb
or
adc
jp
test
sahf
xor
push
ss
les
gs
lcall
mov
mov
jo
ja
jno
cmp
bound
adc
loopne
popf
faddl
sbb
scas
push
inc
call
sti
sub
imul
fimull
sub
push
sub
sti
jmp
jmp
cmp
sub
adc
je
jp
jo
mov
mov
lea
jp
out
pusha
js
lods
sub
jp
xchg
das
ja
jne
iret
stos
cmpb
mov
scas
inc
dec
ds
xor
xchg
cmp
scas
pop
gs
sub
out
leave
xor
xchg
fdivp
jp
cs
ds
ret
adc
adc
pop
xchg
xor
sbb
loop
pushf
inc
popf
sarb
sarb
fcomp
or
jbe
into
test
xor
mov
inc
jge
xchg
jl
jecxz
adc
sub
inc
inc
fsubrs
xchg
ret
jmp
in
adc
shrb
das
add
cwtl
cmp
pop
iret
fidivs
mov
pop
rcr
repz
outsl
out
mov
fisubrs
xchg
subb
shr
sub
xchg
in
mov
jno
das
dec
jnp
lea
push
test
aas
cmp
xor
adc
mov
add
push
nop
jne
xchg
hlt
loopne
add
pop
dec
lock
adc
out
out
pop
rcl
mov
in
in
loop
mov
xchg
mov
mov
fbstp
push
lcall
sub
movsb
inc
inc
bound
sbb
pop
out
mov
out
mov
mov
xor
sub
xchg
mov
cwtl
data16
xchg
sub
lea
fcoml
push
fidivl
lret
lods
fisubs
cwtl
js
movb
adc
xchg
test
fldl
add
mov
repz
dec
push
dec
arpl
stos
adc
push
cmp
clc
iret
mov
mov
call
mov
enter
jo
mov
xchg
mov
jbe
sahf
hlt
stos
cmp
lea
inc
jp
jns
ret
popa
pop
add
jmp
cmpsb
movsb
ret
pop
inc
inc
in
and
insl
cmp
jo
mov
pop
sti
sbb
iret
pop
loopne
int
push
loop
les
add
mov
xchg
aam
or
movmskps
push
add
mov
and
loop
and
adc
loop
js
mov
aam
insb
mov
cmp
mov
add
imul
lcall
std
adc
push
or
lahf
fs
jae
sub
mov
adc
xchg
dec
mov
hlt
jg
jae
jl
jno
cmp
jmp
xchg
popf
mov
cmp
fnstcw
aad
mov
push
mov
pop
add
jle
popf
push
jl
lods
and
sbb
in
in
mov
scas
ljmp
and
xor
sub
adc
les
and
xor
lods
call
mov
rorb
sub
fcoms
sarl
fs
bound
cs
pop
imul
cmpsl
pop
test
mov
out
std
sub
jae
add
mov
rclb
mul
push
ret
cmp
pop
mov
sahf
fldt
fsubs
push
movsb
ret
sti
daa
cli
and
sbb
sbb
adc
arpl
cli
cmp
test
sub
sub
out
cwtl
ds
jnp
push
ret
jb
pop
shrb
fimuls
xchg
shlb
add
mov
and
scas
adc
jp
popl
mov
push
fldenv
mov
imul
add
cmp
or
pop
sub
dec
fdiv
xorb
jne
fldenv
stos
clc
and
repnz
or
xor
xlat
pop
imul
cmp
or
sub
lock
mov
sub
dec
push
ret
jbe
cmp
gs
sbb
and
pushf
mov
in
sbb
mov
mov
mov
push
cmp
xchg
lock
mov
jbe
xchg
lea
je
test
out
xor
ret
and
push
in
jmp
test
sbb
xchg
jge
decl
sub
inc
add
jnp
movsb
repz
push
ret
pop
iret
cmp
mov
xchg
fadd
pop
js
dec
sub
jl
not
adc
and
negb
or
sub
hlt
sub
pop
jle
repz
fisubrl
and
daa
sti
sbb
jge
push
mov
test
jp
adc
mov
mov
cmp
test
dec
shlb
loop
pop
test
xchg
pusha
out
xchg
mov
xor
pushf
cmp
sahf
cmp
sarb
lods
add
lea
adc
mov
jae
daa
or
stc
lds
and
xchg
loop
add
fdivrs
data16
and
out
cmp
cltd
out
mov
aad
xchg
fs
and
xchg
rcll
and
push
mov
leave
fs
ljmp
sbb
or
enter
test
cwtl
jne
pusha
pop
imul
ljmp
add
ret
inc
or
jmp
sbb
test
push
enter
push
xor
leave
das
popa
adc
or
jbe
nop
lahf
push
loopne
outsl
lods
lret
aad
jmp
jp
in
and
clc
outsl
push
xchg
jle
lret
mov
bound
int3
and
sub
fsubr
push
nop
call
cmpsl
xchg
scas
sub
or
fsubrs
scas
mov
daa
pop
mov
xchg
mov
pusha
xor
mov
aam
ret
xchg
lods
sahf
adc
je
push
mov
mov
imul
loopne
mov
in
icebp
orl
pop
xor
hlt
push
rclb
adcb
imul
rclb
test
out
xchg
sub
add
andl
push
push
fbstp
pop
insl
ss
js
xchg
cmp
or
bound
jns
sbb
bound
mov
ret
sub
dec
in
lock
cltd
lret
mov
test
or
fucomip
test
call
mov
dec
icebp
scas
add
sub
mov
push
imul
in
xchg
jle
sti
lds
mov
and
data16
inc
fcom
cmpl
mov
scas
mov
sub
xor
sub
mov
push
cmpsb
push
cmp
hlt
test
into
mov
xchg
jbe
lahf
jb
nop
or
ljmp
dec
sbb
into
out
lret
or
lods
lret
out
jge
subl
scas
cmp
mov
xchg
cmp
or
adc
lods
test
mov
add
aad
sti
je
mov
inc
sub
lret
icebp
cli
add
dec
into
aad
jb
loopne
ret
inc
cmpsl
lds
rol
dec
jb
jecxz
and
jbe
cmp
mov
es
pop
jg
and
in
mov
mov
sbb
pop
push
out
or
cmp
mov
cmp
mov
or
jnp
insb
push
rorb
or
jo
push
popa
fwait
dec
jns
in
mov
mov
sbb
jbe
out
loop
ret
adc
mov
into
and
xchg
hlt
stc
cmpb
aam
dec
xor
mov
bound
mov
inc
sub
les
jae
in
push
scas
lods
scas
pop
jecxz
fdivr
rorb
ss
sub
std
movsb
icebp
mov
repz
jnp
jno
mov
fcomi
add
dec
xor
dec
pop
xlat
or
add
or
xor
les
ja
mov
push
insb
or
jl
rcrl
mov
dec
cs
cld
aad
inc
lods
xchg
cmp
ret
jae
cmpsb
andb
lods
jle
jecxz
test
cli
jbe
jo
std
out
fcmovbe
jecxz
lods
jg
in
pop
add
les
mov
mov
lret
in
test
jg
lock
ja
mov
xchg
lods
fs
push
cmp
adc
cmpsl
out
test
xlat
das
push
das
xor
xor
call
push
mov
popa
jg
mov
inc
cmp
arpl
and
out
enter
cmp
push
mov
mov
add
aas
pop
add
fs
dec
rcrl
mov
mov
shrb
lcall
pop
jecxz
pop
out
jle
out
js
mov
lret
incl
xor
push
mov
out
add
pop
and
cmp
mov
sarb
rorb
bound
int
jne
xor
cs
aad
adc
popf
test
jle
add
xchg
or
arpl
jne
push
scas
sbb
sub
lea
cld
fiadds
xchg
je
lock
and
mov
in
cltd
xor
push
mov
sub
ja
push
pop
scas
push
lods
imul
mov
mov
mov
mov
or
rcr
fsubr
aam
test
or
adc
in
xchg
fidivs
jno
cmp
arpl
cwtl
fcomi
scas
mov
mov
mov
or
xor
xor
gs
jns
inc
and
mov
jge
jl
sbb
lcall
jmp
sub
fisubrs
xlat
out
daa
aas
mov
iret
dec
icebp
mov
jbe
push
mov
mov
push
xchg
jns
ret
fs
ljmp
fisubrs
lcall
ret
sub
sbb
sbb
inc
sbb
push
mov
cmp
jb
mov
testb
mov
mov
pop
sbb
sbb
movb
xchg
inc
fnstsw
xor
ljmp
fildll
xor
and
jp
mov
int3
lea
shll
fstpl
mov
mov
push
in
mov
cmp
jae
jns
xchg
stc
push
pusha
mov
cmp
ret
pop
test
inc
loopne
fs
add
cwtl
scas
jmp
shlb
aad
leave
stc
pushf
jl
or
pop
xor
sub
jp
mov
into
mov
xor
repz
xor
cmc
dec
cmp
xlat
adc
loopne
shlb
lret
push
jge
mov
addb
rol
jo
sub
jo
xor
push
sub
and
lods
es
daa
mov
or
aam
inc
xchg
loopne
xor
sub
sbb
fisubl
out
ret
push
sbb
mov
sub
mov
xchg
mov
cli
xchg
mov
sub
cwtl
aas
sahf
stc
aam
dec
sbb
xchg
cmp
cmp
add
push
js
bnd
push
xchg
js
sub
xchg
test
mov
inc
lds
push
movsb
push
dec
jl
es
mov
leave
cmp
lods
aad
lea
jne
jb
fwait
pop
cmp
pop
popf
ss
mov
xchg
adc
fneni(8087
out
test
and
fwait
add
je
sub
jge
push
or
push
inc
addr16
xchg
add
mov
aas
and
in
dec
ds
jge
mov
jae
adc
add
inc
adc
rolb
mov
pushf
lods
inc
jo
push
jg
and
rcrb
pushf
xchg
leave
addr16
pop
subl
dec
mov
add
lea
in
mov
cmpsb
xor
pop
movsb
jnp
xchg
insb
xor
imul
jno
xor
xor
jb
adc
cmpsl
test
jmp
adc
rcll
sub
dec
into
xchg
adc
cmpb
mov
sub
nop
push
sub
gs
cwtl
loop
aad
int3
mov
movsb
stos
push
test
push
imul
adc
imull
push
int3
jne
cmp
pushl
sarb
adc
ret
mov
icebp
cmc
or
xchg
sub
sti
mov
push
inc
sub
push
add
out
mov
ret
sub
add
pop
sub
inc
gs
out
push
adc
inc
mov
test
or
movsb
xlat
in
or
mov
leave
sbb
or
lret
sarb
bound
xchg
jg
jb
std
and
or
int3
add
call
das
mov
add
add
mov
in
ljmp
imul
lods
or
add
in
fld
jo
loopne
sub
dec
data16
adc
cli
and
roll
pop
int3
ret
xor
fsubrs
leave
mov
jmp
stos
addr16
mov
lahf
xor
mov
xor
in
fldl
push
xchg
jl
aaa
mov
les
jl
lret
cltd
pop
pusha
cmpsl
mov
sahf
dec
aas
test
fs
or
cwtl
xchg
je
adc
aas
gs
mov
mov
in
xchg
mov
rol
cwtl
adc
xor
mov
sub
ja
fwait
int3
push
push
lods
cmp
mov
hlt
pop
rolb
fcomip
add
rolb
cld
inc
jmp
icebp
jbe
lods
and
out
mov
pop
add
imul
mov
in
xlat
bound
fcmovnb
addr16
or
fwait
xchg
sbb
rolb
cmp
adc
mov
lods
in
cmp
sahf
idivb
pop
cmp
jg
and
pop
mov
sbb
das
sub
arpl
mov
pop
dec
outsl
lock
mov
out
mov
dec
mov
dec
test
pop
push
daa
sub
sub
nop
icebp
xchg
push
and
and
adc
mov
and
pusha
popf
push
jge
push
jbe,pt
inc
rclb
aam
bnd
mov
xor
pop
xlat
sbb
sub
mov
fisubrs
add
cmp
js
jne
mov
push
in
out
fwait
mov
testl
mov
mov
xchg
xchg
movsb
popf
add
mov
sub
mov
pop
enter
pop
test
aam
pop
adcl
sub
scas
lahf
rcr
leave
ficoms
cmp
data16
enter
add
push
addr16
adc
mov
out
xor
pop
cmp
pop
repz
into
sbbl
idivb
inc
in
ss
lret
xlat
cmp
in
aam
inc
adc
mov
sub
popf
sbb
int3
movsl
fwait
adc
and
inc
aaa
mov
repnz
add
xchg
outsb
mov
adcb
sub
inc
push
jge
sub
ds
fldenv
and
sbb
mov
ljmp
data16
mov
lds
test
xlat
int3
lods
ss
inc
sub
sahf
stc
out
lods
test
inc
mov
dec
pop
xchg
lret
pop
and
mov
aam
popl
imul
xchg
ja
xorl
or
xlat
frstor
outsb
sbbl
dec
lock
adc
add
imul
sbbb
pop
jecxz
mov
jl
ror
out
jae
in
cltd
jg
clc
sahf
das
je
rcrb
stc
mov
mov
shll
dec
jnp
sti
mov
inc
mov
push
lods
movsl
pop
fistpl
sub
rcl
xorb
movsl
mov
or
adc
insb
adc
cmp
clc
jb
mov
je
dec
dec
pop
fistpll
lea
jnp
stos
or
popf
push
popa
das
push
or
jae
adc
gs
xchg
xor
test
out
adc
aad
imul
or
les
pop
fistpl
jno
sti
inc
adc
adc
xor
scas
mov
ja
mov
ljmp
fwait
insl
ficoms
leave
les
mov
mov
aam
xchg
or
scas
xor
inc
rorb
mov
out
loope
xor
xlat
adc
fstpl
mov
bound
mov
push
pop
ja
aam
test
sti
cwtl
xor
sbb
sub
mov
scas
lret
mov
add
popf
ja
out
shlb
inc
lods
xchg
sarb
dec
sub
ds
das
and
test
xor
mov
lock
sub
arpl
cld
add
push
lods
hlt
lret
out
inc
add
pop
pusha
aam
or
je
aad
iret
nop
addr16
xchg
push
or
iret
pop
les
push
mov
scas
xor
pop
jmp
xchg
rolb
popl
jns
fsubrl
xor
lods
push
je
fwait
jge
into
cltd
cmp
or
pop
or
leave
jmp
jno
or
lods
sub
call
sarb
mov
or
sahf
inc
popf
clc
xor
dec
fnstcw
xchg
lcall
testl
es
add
test
or
subl
sub
mov
out
adc
mov
mov
jb
cmp
push
imul
out
pushf
fnsave
pop
inc
add
fisubrs
sahf
jo
mov
mov
sub
std
jne
lds
rorb
int3
test
les
loop
scas
out
jnp,pt
jo
lods
insb
cmp
sahf
cmp
push
mov
ficompl
adc
and
mov
mov
jne
in
xchg
repnz
jo
jecxz
lods
testl
jle
jbe
pop
sbb
sbb
sti
mov
ja
xorb
pop
adc
test
rcrb
add
fnstsw
sbb
adc
loopne
inc
xor
sub
insl
xchg
iret
pop
repz
sub
push
int3
jb
sbb
cltd
hlt
ss
out
cmc
jnp
fucomp
rolb
sub
inc
insl
std
fisttpl
push
or
popa
jne
and
out
pop
adc
mov
or
sub
int3
aad
and
jbe
or
sub
aam
add
pop
movl
jg
cmp
in
sub
mov
lret
jmp
and
add
in
aam
dec
sbb
int3
adc
sub
out
insl
stos
dec
lea
pop
add
add
sub
out
fsubrl
mov
mov
int3
jae
test
and
mov
pusha
jp
stc
xor
cmp
jnp
adc
cmp
popa
or
mov
push
popl
cld
mov
and
test
push
js,pt
mov
call
mov
push
ret
js
ja
jg
jecxz
cld
movsl
scas
jnp
mov
popa
jnp
push
push
pop
pop
cmp
cltd
pop
pop
dec
shlb
sub
test
loopne
mov
jnp
xchg
out
fcmovnu
push
outsb
insb
popl
leave
push
jle
push
mov
lods
mov
xor
sub
call
ja
xor
lods
push
xor
cwtl
inc
sub
sub
lods
or
movsl
lret
cmp
sub
inc
pop
or
rorb
cmp
aam
aas
fsubr
push
sub
mov
xor
mov
int
jae
ds
or
mov
aaa
inc
cmpb
inc
sub
push
bound
lods
int
ds
data16
pop
or
lods
movsb
outsl
push
xchg
aam
lcall
xor
inc
add
add
lea
mulb
sahf
sub
xor
jp
out
ss
scas
neg
lcall
jnp
mov
cmp
inc
test
mov
mov
dec
push
push
enter
pushl
bound
fwait
daa
and
mov
pop
sbb
int
adcb
test
sbb
mov
fisubrl
jne
xor
lcall
cmp
cmp
fistpll
mov
lods
push
je
ja
mov
loope,pn
sbb
or
lea
inc
jnp
pop
sub
xchg
aad
mov
mov
movsl
xorl
add
xor
jmp
outsb
ljmp
lret
adc
sub
mov
fidivrl
pop
movsl
pop
sti
ja
mov
jecxz
divb
push
aad
rcrb
sub
dec
cmpl
fcomp
lods
enter
pop
pop
jmp
mov
into
not
xor
loope
ja
or
inc
push
rcrb
ret
outsb
cltd
jae
lahf
xchg
repnz
mov
test
sarb
iret
mov
test
xchg
push
cmp
add
repz
mov
movsl
mov
cmpsb
sbb
pusha
in
add
jle
sarb
or
sub
jae
sbb
hlt
inc
sahf
sarb
lds
jns
in
dec
rol
mov
push
mov
out
scas
cld
bound
out
rolb
gs
dec
xchg
mov
popa
jl
sbb
sahf
les
jle
stc
in
stos
iret
int3
xor
das
aam
fmuls
and
sub
jns
jmp
in
clc
aaa
fs
out
js
leave
stos
lret
nop
mov
pop
rcll
call
pop
mov
or
jns
sti
push
movsb
fsubl
adc
in
add
jb
out
rcl
pop
mov
fnstsw
add
out
lahf
clc
or
lea
bound
pop
mov
lds
sub
fildl
aas
shl
dec
add
mov
xor
pop
mov
orl
pop
dec
or
insb
xorb
xchg
dec
adc
subl
inc
les
pop
fnsave
lret
jbe
and
lret
add
fidivs
adc
or
add
inc
xchg
pop
push
sub
in
dec
jnp
movsl
scas
rorb
test
into
adcb
ret
add
lods
add
out
lea
ret
daa
ficoms
imul
cmp
in
mov
inc
push
and
or
sbb
lods
andl
jg,pn
jns
xchg
jl
jmp
iret
pop
out
cltd
adc
into
and
out
cli
pop
mov
jge
test
sahf
jp
xchg
jne
pop
sti
repz
int
addb
test
popf
fdiv
mov
mov
xor
push
sub
lea
xchg
es
lods
sti
cmp
sar
mov
adc
out
jmp
sub
out
sub
sbb
push
rcl
adc
mov
testb
outsl
mov
shr
shrb
lds
xchg
jecxz
jmp
insb
and
jge
sbb
jns
adc
cmp
scas
scas
popl
and
aam
idivb
popaw
lret
in
mov
ds
mov
inc
lds
push
sub
inc
cmpb
pop
out
arpl
push
jp
negb
out
sub
cwtl
movsb
stos
mov
jle
xchg
nop
xor
jae
scas
jmp
jg
dec
xchg
ret
or
sub
mov
lret
or
and
gs
sub
clc
xchg
push
lret
add
sbbb
mov
fidivrl
adcl
add
adc
xor
in
ret
mov
lods
cmpsb
mov
sub
jae
lods
mov
mov
sub
add
pop
test
inc
cmpl
lahf
lods
fs
and
xor
dec
cwtl
divl
mov
adc
sub
sti
inc
adc
das
out
jo
lea
sub
mov
js
mov
xchg
fsubrs
movsb
stc
inc
mov
call
fisubs
inc
outsb
pop
test
stos
sub
jne
aas
lahf
fiadds
idiv
hlt
lea
jmp
orb
out
fcomps
andb
dec
or
les
imul
cmpsl
sub
aam
cmpsl
adc
fsubrs
xchg
sub
add
sub
jno
aam
loopne
insl
jnp
xchg
sbb
sub
popa
mov
ret
andl
rcl
ret
jne
jne
or
jl
sub
sub
and
add
mov
or
leave
imul
leave
xlat
push
jo
fnstcw
ljmp
sahf
pop
mov
mov
add
ljmp
je
sbb
add
cmp
xchg
ret
jl
test
push
inc
mov
adc
sbb
rclb
int3
mov
mov
dec
fidivrl
inc
cmp
test
push
sub
pop
cld
loop
push
bound
mov
jbe
sub
mov
push
add
pusha
adc
push
int3
or
test
sub
cs
std
or
or
adc
movsb
pop
sub
sub
dec
ja
dec
and
cmp
xchg
rcrl
push
or
insb
inc
inc
xchg
lock
cmp
imul
inc
int
sbb
adc
sbb
sub
sti
inc
xchg
mov
dec
ret
je
and
mov
scas
cwtl
mov
and
xchg
ja
adc
addr16
jb
iret
jbe
nop
sub
jge
dec
aam
ja
pop
adc
out
bound
inc
xlat
push
cmp
push
mov
mov
jl
lock
rcll
hlt
inc
adc
pop
mov
or
sub
dec
mov
popa
lcall
add
outsb
nop
add
sarl
inc
in
iret
out
sbb
push
sti
add
inc
mov
xor
or
shll
cli
xchg
mov
out
adc
mov
cmp
mov
adc
xor
pop
fcompl
dec
fnstsw
je
inc
mov
mov
cltd
sub
push
pop
roll
scas
jl
push
lods
mov
in
xchg
push
xchg
in
stc
dec
scas
dec
cmp
pop
repnz
xlat
or
int3
psubsb
test
or
mov
xlat
push
fimull
popf
loope
push
out
movsb
mov
out
cmp
xchg
ret
push
pop
sbb
mov
lret
orl
dec
push
stos
cmpsb
mov
sub
add
stos
imul
xorb
sub
jo
imul
jg
scas
test
adc
jae
dec
lods
mov
pop
jb
mov
in
inc
cmp
dec
mov
jne
mov
mov
insl
sbb
and
add
add
sub
jmp
xchg
mov
cmp
xchg
mov
pop
cli
fcoml
scas
mov
pop
pushf
adc
pop
or
inc
add
push
pop
in
adcb
aam
out
mov
cmp
popa
dec
out
pop
testb
nop
pop
test
std
sub
out
push
xor
pushf
jp
rorb
adc
decl
pop
ficompl
fsubrs
mov
inc
sbb
mov
adc
sub
movsl
ljmp
xor
xchg
cli
adc
sbb
mov
in
or
push
mov
out
aas
jo
mov
rcll
lock
clc
sahf
jbe
test
and
mov
push
and
xchg
xor
cmp
xchg
jl
mov
std
pop
xchg
xor
insl
out
jge
jnp
add
sbbl
adc
inc
addr16
aas
fwait
jo
or
push
mov
sbb
lods
inc
fbld
adc
loope
xchg
or
fldcw
out
cltd
ret
xchg
or
sub
push
int3
dec
stc
add
dec
shr
mov
les
xorl
repnz
daa
jb
sbb
dec
mov
stc
pusha
add
pop
sbb
inc
xchg
sub
ds
pop
pushf
cmp
and
fidivl
jb
mov
sbbl
popf
adcl
xor
scas
in
sbb
mov
push
add
push
lea
pop
dec
xchg
imul
lods
lock
aam
outsb
push
sbb
mov
aam
les
fdivs
adc
inc
lcall
push
jge
sbb
mov
xor
pusha
and
out
xchg
jmp
insb
out
sbb
lret
imul
and
jb
lods
adc
dec
mov
inc
push
pushf
jne
mov
adc
shlb
in
sub
daa
data16
hlt
loop
mov
inc
je
dec
mov
mov
xchg
adc
repz
mov
push
mov
dec
cmp
pop
inc
clc
sbb
in
mov
es
ret
cli
mov
sbb
clc
xor
ss
pop
cld
jo
call
add
cmp
mov
test
sub
mov
or
je
lods
mov
inc
test
xor
ret
pop
out
pop
aad
xor
jb
dec
in
dec
mov
jbe
mov
cmp
nop
daa
ljmp
fcomip
adc
pop
cli
xor
pushaw
xchg
inc
push
mov
adc
pop
cmpsb
lret
pop
add
imul
dec
or
ds
xchg
mov
loope
sub
cmp
inc
idivb
add
xlat
mov
pop
push
mov
std
divl
jp
inc
sub
xchg
dec
repz
int3
jmp
sub
push
xchg
push
lcall
push
jne
addb
adc
repz
bound
or
out
insl
xchg
and
sbb
aad
mov
jecxz
mov
shll
dec
movsb
and
enter
mov
pop
cmpsb
cmc
fsubl
imul
test
xchg
out
xlat
lods
or
pop
pop
inc
xor
jno
or
xchg
xchg
js
push
aaa
cmpsb
sub
dec
cwtl
push
jl
add
pop
mov
mov
insl
enter
jmp
cwtl
adc
in
dec
mov
stos
inc
push
or
sub
push
fucomi
mov
fs
fstps
cmp
inc
subb
hlt
adc
std
pusha
xor
inc
mov
leave
push
inc
call
cmpl
xor
push
add
sub
ljmp
or
lret
adc
fstps
cs
stc
fsubrl
inc
mov
xchg
lods
and
sti
mov
mov
cmp
sbbb
add
add
jle
mov
sbbb
xor
clc
mov
sub
pop
cmp
push
es
push
jbe
ja
fsubrl
sub
adcb
xor
mov
js
dec
lods
mov
mov
or
test
inc
lods
pop
push
ficoml
xchg
fildl
adc
cmp
lods
test
test
sub
mov
fmulp
inc
cmp
fsubrs
mov
shrb
inc
mov
or
pop
test
mov
popa
aad
out
cmp
pushf
in
push
ficoms
inc
sbb
inc
push
cmpsl
mov
push
xchg
mov
pushl
mov
and
shll
adc
in
aas
push
add
adc
pop
xchg
ljmp
sbb
ss
push
ret
xorb
cmpsl
mov
or
add
scas
jne
dec
shll
inc
lods
jmp
jmp
orl
cmp
jmp
sub
and
xor
dec
add
cwtl
fisttps
lods
repz
sbb
xor
lds
in
arpl
add
rcl
mov
add
rcl
mov
pusha
mov
cmpsl
sub
insb
jo
ret
sub
daa
mov
adc
mov
cmp
lret
mov
jbe
jge
rcrb
sbb
jle
mov
and
lcall
clc
aad
loope
xchg
adc
enter
outsl
push
mov
fs
imul
xchg
test
sub
in
aas
leave
jb
or
int3
cwtl
pushf
add
mov
sub
jb
pop
sbb
call
cmpsb
mov
sbb
xlat
jo
ret
dec
nop
fmull
sbb
jno
imul
or
lock
pop
pop
aad
jae
jl
out
daa
or
in
adc
ds
xchg
mov
pop
pcmpeqb
scas
std
movsl
cmp
jb
push
and
and
jns
outsb
push
rolb
or
or
cwtl
mov
jge
ljmp
cmp
lret
pushf
push
add
jge
sbb
inc
incl
cmp
movsb
call
mov
or
lods
dec
mov
xchg
xchg
fildl
emms
bound
rolb
add
xchg
fstpt
je
pop
push
push
stc
jecxz
and
push
jo
rcrb
pushf
push
pop
shr
xchg
push
jbe
pop
out
cmp
sub
adc
stos
ja
arpl
sahf
int3
imul
insl
mov
dec
jp
mov
daa
and
mov
mov
loop
pusha
sub
inc
shlb
add
subl
lods
aas
mov
out
sbbb
aad
and
jbe,pn
popa
and
push
mov
repz
pop
mov
in
mov
inc
fcomi
outsb
xor
cmp
jle
and
mov
test
xchg
pop
cmp
popf
jae
xchg
xor
push
ret
xchg
xchg
insl
movsb
mov
sbb
lea
or
or
in
leave
pop
jne
dec
ret
mov
lea
mov
add
push
dec
cli
loopne
cmp
les
adc
jge
lfs
icebp
jmp
push
inc
mov
jne
lahf
cmp
jbe
stos
xchg
fwait
xchg
pop
insl
rcrl
dec
data16
xor
xlat
cld
add
pop
arpl
sahf
mov
mov
inc
stos
push
psubsw
mov
mov
xchg
sub
cld
or
ret
mov
aad
test
pop
mov
mov
or
nop
inc
cwtl
push
dec
insb
lock
pushf
inc
inc
xor
mov
pusha
aam
cld
push
sbb
mov
ja
adc
hlt
cmp
scas
out
ss
pop
sbb
push
or
mov
pop
pop
jbe
mov
pop
lcall
adc
cli
adc
adc
or
leave
aas
dec
or
pop
xlat
cmpb
mov
addl
jno
or
sub
xor
cmp
dec
call
xor
mov
in
data16
mov
mov
scas
push
xchg
inc
sub
hlt
enter
xchg
mov
iret
fmuls
sbb
jg
mov
add
movsb
roll
pushf
jae
mov
stos
jl
aas
add
pop
imul
outsl
mov
stos
shll
adc
mov
xor
cmp
add
push
mov
cmp
jae
rorl
push
xchg
addr16
test
or
and
and
jp
add
ret
cmp
cli
bnd
mov
and
rorb
bound
mov
sbb
push
jge
out
inc
pop
push
pop
sub
xorb
and
add
push
ja
add
sub
pop
iret
sbb
or
les
jecxz
bound
inc
cmc
inc
jl
mov
xor
dec
loope
mov
push
leave
ss
sub
inc
leave
cmp
jae
cwtl
sbb
xchg
dec
ret
jne
dec
or
mov
test
or
mov
mov
jb
lea
lods
cwtl
and
and
and
jo
fistpl
xor
lret
cmpsl
stc
jb
lock
dec
sub
mov
mov
lea
enter
push
cltd
mov
adc
and
and
mov
mov
out
mov
mov
add
sub
aas
repz
stc
xor
shr
fidivl
xor
test
adc
in
cwtl
ret
sub
outsl
xor
mov
stc
push
mov
jp
inc
daa
mov
push
sub
mov
movsl
lods
mov
adc
sub
mov
shll
ss
push
dec
loop
lret
inc
fsub
in
and
push
repz
out
ss
xchg
inc
add
push
push
mov
lods
std
adc
arpl
in
es
or
mov
mov
and
lahf
cmp
jp
std
sub
sub
cs
mov
or
stos
jne
mov
xchg
test
fidivs
js
add
cmp
pop
sub
mov
sub
cmp
popf
and
arpl
out
rol
push
cwtl
mov
or
ljmp
sub
adc
ss
lcall
sub
jbe
xor
xlat
dec
add
loop
flds
mov
xor
pop
mov
jnp
mov
sub
gs
ja
out
and
cmp
aad
inc
notb
int
lods
movb
bound
aas
leave
scas
stos
and
iret
ret
bound
lods
xor
rorl
sbb
scas
sbb
dec
insb
lahf
cs
popa
fwait
xchg
scas
jne
sub
inc
movsl
sbb
add
mov
cmp
out
xchg
xlat
outsb
push
cld
aas
xor
xor
add
lods
jb
xor
std
adc
in
jnp
stos
frstor
add
cltd
and
aad
test
sti
test
test
sbbb
imul
lahf
clc
mov
add
into
pop
adc
add
hlt
test
dec
fwait
out
mov
or
testb
data16
in
sub
push
xchg
xor
xor
adc
sub
sahf
lea
imul
push
pusha
rcr
jmp
sbb
xchg
stc
ljmp
add
push
jbe
pop
mov
adc
lea
mov
jle
lahf
aad
cmp
jp
sbb
jp
sub
out
mov
mov
cmp
imul
fisubs
sub
out
or
movsb
mov
xor
out
add
fmuls
sub
push
imul
adc
rorl
mov
out
adcl
adc
sbb
fisubrs
mov
and
mov
jne
out
push
fs
or
mov
lods
js
jno
les
cwtl
lret
dec
push
dec
sub
sbb
inc
mov
sub
ja
push
repnz
sbb
stos
ret
cmp
push
jb
xchg
mov
sub
jmp
stos
into
mov
sbb
sub
cmp
mov
mov
sub
arpl
test
mov
cmp
hlt
and
les
repz
insb
loopne
push
pop
in
adc
into
in
lret
push
cmp
ljmp
notb
adc
sbb
mov
jmp
adcb
fs
lret
xchg
jne
outsb
push
adc
adc
int3
xchg
push
sahf
mov
loopne
in
sahf
adc
addb
xchg
add
aad
ljmp
sub
mov
mov
inc
xor
mov
sub
std
pop
push
inc
sub
pop
xor
and
out
xchg
push
pop
jl
in
adc
test
mov
fdivrs
orl
inc
sbb
jns
inc
repz
push
ds
or
rclb
hlt
sbb
inc
mov
mov
test
jg
push
out
or
add
pop
fwait
daa
jne
movsl
fmuls
mov
sbb
cmp
xchg
adc
and
inc
add
cld
daa
aam
cltd
mov
sbb
fcoms
adc
fwait
test
es
xchg
test
push
jne
loope
mov
cmp
mov
sbb
push
sbb
push
and
test
mov
push
jmp
repz
dec
or
add
push
xchg
adc
or
cmp
imul
ficoms
mov
inc
adc
sub
cmp
xor
ficompl
sbb
mov
iret
sbb
xor
or
pop
repnz
lods
mov
xchg
scas
jl
mov
cmp
sarb
repnz
jmp
in
rol
xchg
ds
push
into
adc
das
mov
int
loop
in
aas
cld
xor
push
dec
imul
or
popa
fildll
mov
mov
push
testb
test
mov
test
neg
sub
and
mov
shr
and
dec
inc
test
push
mov
subl
adc
dec
jnp
movsb
jns
and
cmpsb
lods
jge
mov
push
sub
and
cld
mov
sbbl
pop
sbb
inc
or
jge
lock
out
or
sub
mov
cmp
xchg
test
mov
sbb
jmp
in
aaa
xor
mov
mov
jge
cld
and
xchg
sar
push
hlt
push
leave
pop
and
inc
loope
arpl
mov
adc
ret
sub
shr
push
mov
pushf
iret
sbb
push
in
decl
add
sti
scas
sahf
daa
add
jae
mov
mov
push
pop
in
scas
cmp
mov
dec
fstps
shlb
or
or
test
rcll
mov
jge
adc
aad
sub
subl
push
xchg
push
xlat
jg
loope
mov
arpl
in
int3
pop
test
lds
nop
popa
addr16
mov
sbb
mov
rcll
add
imul
out
call
xchg
mov
jae
ja
mov
mov
pop
vcvtps2dq
lock
add
ja
sub
sub
mov
hlt
and
int3
and
shll
jl
das
jle
mov
xor
lods
inc
in
inc
enter
mov
aaa
push
push
ret
sub
and
jp
mov
rcl
add
push
aad
jecxz
leave
pop
sbb
popf
lret
fadds
and
scas
xchg
into
cmp
xchg
xor
mov
sbb
mov
icebp
or
mov
iret
jbe
inc
dec
xchg
push
mov
xor
int
shlb
mov
cs
jmp
xlat
xor
mov
push
sub
call
mov
adc
je
push
test
push
pop
dec
inc
imul
xchg
sub
push
add
inc
jmp
movsl
mov
pusha
xor
mov
mov
and
sbb
jl
in
mov
sub
fxch
lock
in
sbb
xchg
hlt
lds
mov
lcall
mov
pop
and
adc
gs
movsb
rolb
hlt
jno
adc
adc
into
gs
mov
adc
in
mov
jb
cld
mov
xor
mov
inc
mov
bound
out
aam
cmpl
lret
dec
cld
mov
dec
sub
dec
jge
scas
rorb
aam
mov
lds
ficoml
fs
push
push
andl
xlat
push
pushf
lret
lods
fwait
add
dec
inc
leave
xlat
and
sub
pop
xor
sub
xchg
repnz
dec
sbb
leave
ret
add
frstor
js
adc
je
leave
dec
les
push
aaa
call
stc
mov
inc
cli
ljmp
mov
and
xor
dec
jbe
add
ss
mov
jns
cmpb
cmp
mov
push
mov
jmp
or
lea
in
or
sbb
loope
inc
filds
adc
adc
cmp
fwait
inc
out
lock
insb
or
jge
cmp
mov
cltd
inc
push
ficompl
sub
sub
lret
cmp
enter
pop
add
ret
adc
and
or
ss
sub
sub
ja
das
aam
test
xchg
repnz
sbb
or
insl
push
out
fstpl
sarb
lods
add
cmp
rclb
test
mov
leave
pushf
adc
adc
inc
xchg
out
out
inc
cmpsl
mov
mov
aad
js
add
imul
dec
xchg
pop
and
lods
mov
add
test
jbe
adc
dec
sub
es
in
pusha
outsb
adc
clc
cmpsb
jmp
dec
daa
dec
sbbl
push
xchg
fmul
inc
pop
hlt
loope
shlb
adc
or
mov
add
imul
sub
mov
imul
or
sbb
test
xchg
in
xchg
in
xor
push
ss
dec
pusha
outsb
scas
divb
jecxz
mov
cmp
ljmp
sbb
ja
xor
sar
inc
and
mov
add
daa
or
sub
xlat
push
lret
jl
inc
aam
mov
cwtl
push
add
nop
js
ficoml
sbb
pop
adc
call
pop
jecxz
addr16
cwtl
fucom
mov
jne
sbb
out
lods
mov
push
stc
or
mov
adc
ret
fisubrl
add
jle
jp
pop
inc
mov
ja
nop
in
cwtl
xor
pop
gs
out
inc
xchg
ret
rcll
repnz
in
shl
pop
insl
mov
cmp
jne
or
jmp
cltd
xchg
or
loop
cs
pop
cmpsb
lods
inc
shlb
fcomp
aad
add
inc
add
dec
dec
xchg
fcom
shrl
cli
lock
lret
jl
leave
outsb
frstor
icebp
sub
pop
lcall
rcr
in
mov
push
jg
mov
in
mov
ds
js
stc
in
xchg
inc
dec
sbb
cmp
jecxz
in
pop
stos
mov
add
bound
ds
jp
adc
daa
mov
xchg
mov
pop
inc
bswap
mov
repnz
sub
leave
push
mov
cmp
and
iret
aam
mov
mov
loope
sub
inc
imul
or
sub
jae
shrb
idivb
inc
inc
lods
adc
addr16
add
sub
cwtl
scas
mov
mov
orb
sub
mov
xchg
ljmp
sub
and
jmp
in
lea
inc
pop
dec
pushf
jo
and
xchg
mov
roll
aad
popf
lret
xchg
fbstp
sti
jge
xchg
add
icebp
jp
pop
dec
jg
mov
cmpsb
mov
mov
xchg
add
cmp
cmp
sahf
shll
in
ljmp
out
mov
pop
icebp
ret
adc
pop
and
ss
or
push
pop
xor
out
out
movsl
lret
nop
in
xor
xchg
aad
cwtl
or
mov
nop
cmpsl
jne
in
movsl
repnz
xchg
jno
jle
stc
ret
or
and
fidivrl
dec
xchg
xor
dec
mov
xor
andb
aam
jnp
notb
push
sti
add
adc
or
subl
push
sub
xor
add
cli
loop
stos
les
ffree
adc
add
pop
outsl
jne
lea
jmp
xor
push
loop
cmp
jg
aam
jae
cmp
mov
leave
push
jecxz
loope
adc
cwtl
icebp
ljmp
daa
xchg
cmpsb
out
sti
mov
jb
sub
data16
test
shrb
mov
or
xlat
adc
pusha
xchg
mov
xor
inc
mov
or
jae
fbstp
inc
sbb
mov
in
test
int
xor
sar
xchg
adc
adc
popa
je
add
jp
cmp
push
mov
scas
fmul
inc
push
and
repz
mov
xor
mov
jns
xchg
cld
xor
fisubrs
inc
xor
cmpb
loopne
push
sub
stc
cmpb
push
je
dec
pop
test
hlt
pusha
roll
cltd
pop
push
jl
or
push
out
bound
xor
xchg
stos
inc
aaa
push
out
xor
fcmovu
pop
es
sahf
or
add
pusha
mov
daa
jne
xor
idivl
mov
xor
je
cmp
or
xor
xor
daa
cli
or
add
cmpsb
test
nop
xor
lcall
push
push
pushf
fwait
inc
or
iret
mov
push
xor
mov
cs
xor
mov
sub
push
xor
iret
cmpsl
hlt
push
out
push
and
xor
cmp
mov
push
mov
out
pop
lock
sub
or
js
xor
sbb
aam
add
push
jg
aas
lods
adc
or
outsl
inc
mov
dec
cwtl
adc
xor
mov
push
lods
lahf
xor
call
jb
lock
jl
mov
inc
insl
shl
insb
inc
mov
sub
xchg
fisubrs
aas
je
or
cltd
dec
out
arpl
ljmp
or
loope
push
pop
cmp
inc
xor
cmc
popa
xchg
stc
or
jl
xor
pop
xchg
das
cs
and
pushf
xor
inc
and
xor
in
add
mov
mov
shrb
dec
mov
fmul
pop
loope
jnp
mov
stos
loop
orl
xchg
xchg
xor
daa
mov
sbb
aad
pop
mov
mov
cmp
xor
jae
pop
aad
xor
inc
adc
sahf
fwait
xchg
or
push
fcmovb
xor
xchg
inc
rolb
mov
jge
adc
aas
add
inc
jnp
roll
dec
aaa
in
in
dec
pushl
xchg
je
cmp
pop
bnd
xor
and
jne
xor
sti
ds
sbb
stos
xor
dec
xchg
mov
add
bound
xchg
fnsave
xor
sbb
mov
test
sbb
int3
imul
pushf
adc
cmc
push
add
xor
mov
out
dec
sbb
mov
inc
jnp
xorl
mov
xor
sub
mov
xor
xchg
rcl
jne
xchg
jmp
emms
sarl
pushf
iret
nop
xor
mov
sbb
push
repnz
popa
test
aam
lods
ja
out
icebp
jge
stos
adc
jno
pop
movl
xchg
lahf
in
sub
test
mov
jle
mov
pusha
hlt
cltd
je
in
scas
ja
mov
flds
inc
and
es
loop
arpl
fnstenv
shr
pop
into
xchg
rorb
xor
ljmp
int3
fsubl
cwtl
xchg
dec
aad
test
mov
lret
stos
adcl
dec
out
pop
je
dec
in
xor
inc
sub
outsb
mov
scas
test
mov
mov
adc
sahf
and
adc
push
mov
mov
sub
cmp
xor
inc
xchg
ret
push
cs
jg
push
int3
mov
cmp
xchg
int
add
mov
jle
sahf
cld
test
lret
jnp
inc
es
je
mov
sub
xchg
inc
jl
pop
rcrl
and
sbb
ret
pop
add
aas
pop
xor
pop
call
rorl
aad
lods
jne
lds
mov
lret
rcrb
fstl
jle
jne
loopne
movsb
loope
adc
xchg
in
test
sbb
xchg
add
jns
not
jne
cs
in
ds
mov
pop
xchg
add
mov
sub
imul
inc
add
aad
rclb
out
aam
mov
mov
stc
push
out
in
sub
sbb
ljmp
hlt
sub
ret
test
inc
cmp
adc
data16
ficomps
and
jmp
push
xor
and
fldenv
push
mov
dec
push
pop
or
scas
lret
out
add
add
in
push
xor
mov
subb
mov
mov
xor
xchg
daa
adc
inc
cwtl
jne
or
mov
pushf
enter
cmc
call
das
xor
sub
lret
ret
inc
xor
xor
adc
pop
jmp
mov
sahf
xor
and
insb
adc
mov
xor
ds
sub
jo
and
push
fldl
add
dec
sub
cmp
fwait
repnz
fwait
mov
adc
ret
mov
mov
sub
sub
ds
sti
xchg
jl
fiadds
adc
or
adc
dec
push
out
add
in
jb
sub
fstl
fmull
push
enter
loope
repnz
arpl
sub
mov
stos
cmpsl
fmuls
ret
cmp
fs
adc
loope
xchg
jbe
cli
aam
sbb
mov
enter
mov
adc
frstor
fcoml
fstps
rcrl
lret
lds
mov
mov
mov
dec
adc
aaa
jmp
mov
sahf
push
test
lods
icebp
mov
inc
cli
movsb
loopne
dec
imul
call
mov
mov
mov
shlb
adc
enter
fsubrl
and
xchg
cmp
mov
push
les
pop
mov
icebp
or
popa
xor
push
mov
mov
cmp
jge
mov
hlt
mov
pushf
push
or
xchg
xor
into
dec
xor
shrb
jbe
mov
sti
mov
inc
pop
mov
fnstsw
movsb
or
ds
or
sub
ja
dec
jae
mov
out
std
scas
mov
cmp
aad
push
out
cmp
cmpsl
aam
ss
test
sbb
rcll
gs
pop
imul
inc
in
dec
mov
out
dec
adc
or
loop
scas
aad
in
andl
add
xchg
fidivl
sub
icebp
mov
and
pop
push
mov
pop
sarb
jo
add
mov
out
xor
xorl
in
mov
iret
leave
lahf
add
mov
arpl
ljmp
jp
ror
lret
xorb
xor
sbb
jno
xlat
cld
sub
cmpb
in
and
aam
dec
stos
in
cmp
sub
pop
pop
in
and
lods
ljmp
jmp
aad
dec
xchg
scas
in
cmp
push
push
test
dec
aaa
imul
jae
pop
daa
fwait
aad
cmp
sar
lods
inc
mov
inc
pushf
xor
into
add
orl
aaa
inc
pop
jb
fnstenv
push
jno
sbb
mov
stos
ficomps
scas
je
pop
popf
fstpt
stc
inc
xor
jge
mov
addr16
loop
push
in
push
scas
filds
mov
fidivl
jmp
cs
mov
call
and
cmp
lret
in
imul
and
adc
adc
or
mov
out
jne
int
popf
in
loop
mov
sbb
ljmp
cwtl
jne
ds
sarb
shrl
insl
cli
subb
daa
jne
iret
hlt
pushf
push
push
or
sbbb
jle
repz
sbb
enter
mov
bound
adc
mov
rcrl
out
or
dec
xor
nop
sub
dec
sub
cmp
les
in
stos
cmp
nop
xchg
mov
jecxz
xor
xchg
lahf
push
sbb
xchg
push
and
in
out
icebp
testl
adc
and
lret
or
dec
shll
inc
enter
sarb
pushf
pop
aaa
jl
out
mov
cld
or
sbb
in
loope
cwtl
cmp
xor
dec
inc
pop
push
out
jnp
mov
sbb
cmpsb
ja
lds
mov
aad
movsb
mov
add
sbb
das
lods
adc
xchg
leave
rorb
int3
xchg
jl
clc
pop
subb
xchg
push
cld
je
inc
inc
sub
call
jmp
inc
shlb
adc
in
push
pop
sbb
pop
inc
test
sbb
fistl
test
lcall
mov
stc
call
movsb
test
addr16
cwtl
dec
sub
xchg
cmp
mov
jo
pminsw
jno
movsb
sub
push
outsb
lods
dec
cmc
frndint
pop
push
shlb
pop
sub
mov
adc
aas
sbbb
mov
xchg
mov
mov
xchg
pushf
mov
ja
jge
lret
push
clc
orb
enter
and
into
xchg
stos
xor
icebp
jp
xchg
xor
mov
stos
xchg
clc
inc
sub
fsubrs
jne
dec
jmp
fisttpll
mov
notb
test
loopne
adc
fdivrl
mov
bswap
in
sbb
nop
aad
push
add
add
xor
jl
lret
inc
jns
int3
xchg
and
ret
fidivl
lods
xlat
add
jo
pushf
xor
xchg
aas
adc
call
int3
sahf
sub
xor
mov
stc
ljmp
jle
xchg
mov
pop
or
cmpsl
das
mov
or
adcb
mov
nop
lea
es
xor
fst
shll
call
add
sub
mov
xchg
jecxz
cmp
and
ds
xchg
cmc
jl
xchg
dec
jno
pop
cwtl
ror
scas
xorb
ljmp
cmp
outsl
xor
sub
jns
cld
lcall
mov
iret
sbbb
sub
repz
jmp
clc
fnsave
dec
rolb
popf
test
mov
cld
fistps
xchg
adc
jb
push
add
out
mov
das
xor
cmp
subb
popf
mov
mov
outsb
xor
mov
stos
pop
sub
cwtl
pop
mov
dec
lret
ret
loop
sti
call
ss
fadd
mov
lods
jg
add
cmp
ret
lods
bound
fidivs
ds
aam
adc
out
or
fistl
je
arpl
fsubrl
add
and
repnz
mov
mov
xlat
mov
movsb
or
outsb
rcll
push
pop
mov
in
out
cltd
in
xchg
sub
jo
jb
dec
dec
in
lahf
test
xchg
sub
mov
loope
adc
xchg
int
jb
dec
push
cld
aas
repz
icebp
out
xor
js
add
call
xor
or
and
inc
adc
xchg
aam
dec
jnp
mov
pop
mov
in
rorb
flds
jns
jecxz
jo
mov
xor
repz
pop
adc
and
rolb
jp
in
lcall
and
push
sbbb
cmc
aaa
jp
sarl
push
test
adc
or
aad
mov
repz
jp
fs
add
cmpsl
repz
xchg
in
pushf
aam
push
dec
adc
fimuls
dec
push
daa
and
hlt
ret
add
out
ret
enter
insl
pop
sub
inc
xor
lret
clc
xor
lods
arpl
ret
sub
lret
ljmp
sub
scas
sub
and
or
add
jo
jne
outsb
sub
xchg
cmp
das
mov
adc
ret
mov
addr16
ja
pop
mov
aam
les
dec
xor
ljmp
idiv
ja
pusha
mov
nop
lahf
cmp
lods
in
lret
inc
cmp
les
mov
xor
subl
cli
insl
and
dec
sub
pop
jecxz
add
mov
movsb
hlt
rcrb
xor
jae
aam
inc
mov
xlat
jmp
or
jecxz
aam
leave
movsb
call
sbb
sarb
inc
dec
dec
cmp
sahf
ret
cmpsb
dec
adc
rorb
cmp
subl
adc
flds
cmp
and
leave
pop
ds
mov
out
push
in
add
dec
in
imul
loop
outsb
push
ret
out
adcb
lret
in
fbstp
sbb
fld
testb
fnstcw
mov
loopne
cmc
xor
sub
sub
sbb
adc
lcall
pop
pop
loope
hlt
ds
repz
xchg
jp
cmp
cltd
or
sub
push
xor
inc
aam
sub
fwait
xchg
xchg
pop
jmp
dec
add
popa
cld
lcall
mov
adc
cmp
mov
sub
or
loope
push
lods
xchg
jg
cmp
movsb
mov
cmp
fdivl
imul
cmp
fldt
xchg
test
adc
fs
sbb
scas
sub
das
adc
leave
or
jg
imul
sbb
pushf
sub
test
out
fcmovnbe
xchg
xor
or
sub
xchg
nop
mov
test
sub
pop
lret
call
aam
lods
sbb
sub
add
bound
pop
jo
xchg
jbe
test
ror
cli
mov
jl
jno
rolb
push
scas
aad
and
cmp
mov
mov
jne
bnd
mov
and
fcompl
sub
popf
lret
testb
mov
push
mov
xchg
popl
pop
or
jp
lods
movsb
movsl
adc
xchg
mov
or
test
cs
jmp
stc
jp
ss
mov
popf
xor
jae
repnz
lret
xor
mov
xor
out
nop
and
inc
or
loopne
aam
inc
xchg
lods
push
fwait
rcll
mov
adc
mov
pop
dec
insl
and
push
add
sub
mov
addb
lahf
loopne
es
hlt
in
xchg
imul
add
sub
loop
xchg
test
mov
sbb
ds
es
mov
ja
lret
cmpsl
es
cld
sub
and
ret
sahf
sub
test
or
lcall
lods
int
sahf
lret
jae
adc
push
cltd
es
loopne
ret
gs
frstor
jae
aas
mov
mov
xchg
mov
aas
jmp
mov
lods
lea
and
push
cwtl
pusha
and
lret
dec
stos
xchg
lret
and
add
je
lods
pop
jb
pop
out
xchg
fprem1
jl
pop
mov
fs
arpl
push
sbb
push
js
add
fimuls
bound
push
insl
outsl
and
xor
pop
out
ds
aas
dec
or
loope
aad
repnz
add
xchg
cmp
ja
xchg
lds
in
sub
js
mov
mov
dec
mov
mov
pop
data16
sbb
repz
iret
stc
imul
push
sub
in
repnz
and
sti
xchg
xlat
pop
gs
xchg
adc
xchg
ja
sbb
push
adc
das
adc
adc
sub
add
lock
sub
aaa
push
loope,pn
mov
add
and
outsl
cltd
cli
orb
mov
xor
and
adc
push
cmp
ficompl
shll
jecxz
mov
sub
pop
add
pop
sbbb
push
mov
xchg
in
ficompl
pop
add
mov
jl
mov
lods
sub
rcl
adc
add
mov
mov
dec
mov
aaa
xor
mov
adc
test
cld
fisubrs
cltd
and
jne
push
leave
cmc
dec
inc
dec
incl
push
outsl
adc
dec
pop
sbb
loopne
fiadds
enter
imul
xchg
mov
in
pop
lret
lret
mov
fadd
add
sub
mov
cmpl
mov
fadd
jle
add
cmp
jg
aas
jp
test
or
xchg
and
fistpl
int3
mov
xlat
aad
jecxz
lods
or
stos
popa
and
int3
adc
int3
or
idivl
mov
lods
fsubp
push
mov
out
push
or
cmp
pusha
clc
mov
int3
call
or
sub
mov
loopne
shlb
test
sbb
adc
int3
rcrb
mov
xchg
cwtl
enter
fistl
cmp
jbe
mov
jmp
mov
mov
js
inc
adcb
insb
xor
clc
sbb
call
pop
lods
repz
cmp
dec
aad
push
xchg
rorb
push
out
or
inc
cli
xor
ljmp
cld
enter
cmp
push
lret
outsb
loopne
xchg
mov
jg
inc
cmp
push
mov
or
pushf
les
lret
sub
dec
stos
or
out
leave
mov
popa
push
add
loopne
sub
das
sbb
lds
dec
repnz
push
xchg
aaa
jmp
mulps
out
pushf
shrl
sbb
pop
pop
jb
stos
push
lock
mov
sbb
aad
mov
roll
stos
pop
mov
push
push
mov
mov
mov
icebp
stos
js
inc
lahf
cs
cmp
or
adcl
pushf
mov
int3
out
xchg
sub
mov
sbb
shlb
movsl
inc
and
mov
enter
addr16
jb
xchg
test
add
mov
into
scas
adc
xorl
pop
je
push
sbb
adc
push
cmp
xor
jl
lahf
repz
mov
dec
or
and
sbbl
add
movsb
fstp
xchg
adc
push
icebp
add
fsubrs
lret
fcoml
fldenv
xor
adc
adc
mov
push
adc
pop
fstps
mov
int3
pop
or
pop
and
aaa
jmp
adc
gs
daa
jbe
or
fwait
out
sbb
pop
or
inc
sarl
sub
push
mov
adc
cwtl
mov
shrb
jmp
mov
imul
jg
jp
sbb
lock
jo
or
jae
mov
jbe
or
int
mov
test
pop
movsl
pop
dec
stos
ljmp
xor
out
shr
and
and
add
jp
mov
jp
mov
xlat
push
mov
fisttpl
jl
out
mov
fwait
push
mov
out
into
pop
aaa
adc
and
gs
fdivl
add
push
xlat
cli
jl
notb
mov
pusha
adc
pop
push
out
orl
movsb
and
popf
jp
pushf
test
addb
in
sub
pop
cmp
leave
aaa
nop
lcall
jo
scas
fimull
bound
or
daa
jl
xlat
fcoms
loop
sbb
and
daa
mov
je
jbe
imul
fs
popf
add
cmp
leave
jp
pop
xlat
mov
cwtl
pop
cs
or
dec
repz
or
add
not
push
cmp
xor
adc
adc
jns
lods
jp
addr16
xchg
dec
mov
iret
addl
mov
inc
in
test
test
or
incb
adc
mov
and
sahf
test
add
js
dec
add
test
adc
jge
mov
jg
ficomps
sub
test
out
aas
xor
loope
stc
lds
lahf
push
mov
push
lods
int
outsb
add
lret
jo
sub
divl
insb
aaa
rcll
cmp
sbbb
mov
mov
mov
sub
or
lods
or
ficomps
dec
fsubs
sub
or
faddp
std
cmp
xchg
jg
cmpsl
in
add
fwait
insb
test
cwtl
or
sbb
enter
insb
jge
add
mov
add
leave
aas
cmp
dec
pop
fnsetpm(287
xor
jnp
movsl
mov
cmp
dec
test
fistps
leave
les
cmp
lock
aam
lods
pop
outsb
out
int3
pop
mov
dec
xchg
xchg
push
cvtdq2ps
fcmovne
xchg
js
push
sbb
fistps
sub
inc
inc
push
pusha
jbe
sub
pop
adc
pushl
loop
jb
mov
push
ljmp
out
test
je
lea
pop
outsl
and
aam
dec
js
stos
out
js
xor
mov
inc
mov
ljmp
cmp
sbb
test
data16
mov
lock
and
in
popf
shll
xchg
sub
sub
cmpsl
mov
rorb
or
sub
scas
add
aad
dec
rol
and
mov
cmpsb
adc
repz
sti
std
shl
aaa
lods
xorl
cmp
in
adc
popf
jmp
jecxz
fucomi
or
inc
repz
xchg
out
loopne
jbe
mov
repz
xchg
pop
jne
pop
add
mov
dec
push
or
mov
push
add
pop
rclb
test
std
mov
sub
test
popf
adc
sub
testb
mov
call
imul
sub
adc
cmp
hlt
dec
jb
imul
xor
sub
aam
fwait
scas
fs
mov
dec
jnp
mov
int3
loope
pop
loope
push
sub
mov
adc
nop
data16
popf
les
sub
mov
xlat
ja
sbb
dec
mov
or
in
sbb
or
adc
sub
jb
dec
fs
inc
inc
fisttpl
imul
mov
repz
mov
push
jmp
ret
jg
in
or
jp
add
fnstsw
xlat
imul
mov
sbb
xchg
xchg
xchg
xorb
fsubrl
daa
aad
cmp
lock
push
dec
mov
out
jne
insb
inc
cmpsl
adc
fidivs
sbb
in
js
or
adc
outsl
repz
push
es
fs
sub
sub
sbb
push
xor
js
xor
aam
xor
or
mov
push
sub
cltd
and
rcr
addl
sub
mov
mov
sbb
cmp
push
cli
das
lock
push
pop
pop
or
mov
cmp
dec
insl
stos
cmp
xchg
out
in
push
lds
or
hlt
and
mov
xor
adc
pop
aaa
push
cmp
nop
inc
aad
filds
adc
fs
cmp
and
adc
imull
rclb
mov
stos
sub
je
test
fcompl
adc
les
popa
es
in
sub
or
cmp
repnz
fildll
in
pushaw
cwtl
push
repz
imul
imul
adc
in
xchg
lea
shl
decl
ss
dec
and
popf
mov
sub
imul
sub
aaa
cmc
sbb
xor
lock
jecxz
cwtl
dec
dec
mov
jge
push
xor
imul
xor
xchg
es
dec
movsb
ret
subb
popf
mov
dec
push
xchg
insb
lahf
lahf
adc
mov
into
hlt
xor
stos
hlt
xchg
mov
repnz
xor
push
jo
ficoms
push
mov
inc
test
adc
mov
push
test
loopne
insb
je
xchg
aaa
jae
jb
leave
dec
ret
or
cmp
rcrl
int3
sbb
push
in
mov
adc
lret
dec
ror
mov
sbb
sub
jae
and
add
dec
cwtl
aad
daa
in
inc
dec
or
jb
xlat
mov
sub
xchg
add
int3
and
sahf
mov
or
fwait
loopne
jnp
and
loop
fldcw
out
adc
mov
ret
push
ljmp
sub
aad
xor
xor
push
xchg
dec
sub
mov
mov
lds
adc
hlt
inc
dec
movsl
ja
out
mov
test
bswap
and
ja
push
in
push
aam
lock
cmc
std
adc
sarb
call
cld
test
lods
or
iret
pop
and
and
popf
js
adc
jg
sbb
scas
inc
jg
in
jmp
jle
fldenv
xor
shlb
mul
addr16
xlat
xor
xchg
sarl
lea
les
add
fldenv
inc
js
pushf
insl
or
sub
cli
or
cwtl
mov
shl
aad
jae
popa
mov
jl
lret
push
dec
cli
lock
es
out
cmp
ds
jge
repnz
fnsave
outsb
sub
push
or
fdivp
rolb
js
jge
leave
mov
lcall
push
cmp
push
cwtl
ljmp
lret
mov
loope
dec
jl
subl
sub
add
push
out
push
pushf
movq
cmpsb
cmp
subb
or
xor
jno
mov
sub
enter
and
jae
ljmp
les
xor
pop
or
fwait
xchg
sub
sub
inc
adc
pop
jl
ljmp
cmpsb
iret
subb
scas
push
inc
adc
fwait
mov
lods
subb
add
rcrb
enter
lret
or
or
cld
cmpsb
sub
and
jb
and
ret
jne
xor
xlat
test
out
ret
in
and
cmp
mov
lret
sub
mov
ret
fmul
jle
sarb
cwtl
xor
adc
aad
leave
gs
pop
mulb
fmuls
or
xor
xchg
cld
jne
push
jp
rcll
movsl
ja
faddl
mov
or
fldcw
mov
adc
ljmp
sahf
xchg
insb
mov
add
ret
ljmp
test
push
inc
sbb
pop
call
fidivs
jg
jne
pop
mov
les
rorl
adc
fwait
pop
add
push
iret
adcb
stos
fsubs
gs
test
roll
imul
jns
xchg
inc
mov
xor
or
sub
pop
mov
push
sub
sub
lds
sbb
xchg
fisttpll
adc
sub
cwtl
std
ss
mov
mov
cwtl
mov
sti
pusha
fldl
jmp
in
mov
xchg
stos
mov
ljmp
adc
adc
js
push
sub
mov
nop
sub
outsb
inc
ds
add
cmpsb
sub
test
pop
movsb
xor
scas
mov
lods
xchg
jp
ja
mov
sbb
insl
sub
js
jns
sub
lcall
stos
out
mov
cld
out
in
lods
cltd
push
lret
mov
movsb
mov
mov
mov
cmp
jg
jge
scas
cmc
pop
ror
in
fcmovnbe
xor
fadds
enter
out
fst
sahf
test
sub
inc
mov
jne
cmp
push
sub
out
ret
fcompl
and
mov
dec
add
out
push
loop
mov
fstpt
pop
sbb
jae
sub
cmp
dec
cmp
mov
inc
jg
pop
nop
dec
popa
pop
in
add
sahf
repz
test
adc
add
jne
cmp
cld
aam
pop
aam
and
mov
cmc
jecxz
dec
inc
fs
test
andl
in
test
ds
lret
dec
xchg
xchg
iret
jns
dec
rcrb
in
mov
sarl
mov
leave
leave
jns
mov
xor
mov
xor
es
pushf
lods
or
sti
inc
adc
ja
add
leave
iret
xor
pop
mov
out
xor
test
cld
cltd
push
push
test
or
pop
fdivp
sbbl
mov
pop
and
pop
inc
sbb
mov
xor
sub
and
int
gs
mov
push
mov
lea
ret
pop
add
xor
sub
cld
jle
jp
aam
aam
rorl
jb
add
cmp
sub
and
sub
mov
faddl
xchg
popa
cmc
repz
popf
ret
ljmp
mov
std
gs
mov
cmp
lea
dec
mov
mov
std
aam
cmpl
xor
xchg
cli
rcpps
or
pop
mov
and
xchg
lret
rorb
fcoml
popf
dec
sti
ljmp
cmp
push
sbb
push
or
ret
adc
sarl
adc
inc
arpl
ljmp
popa
test
sub
mov
in
or
repnz
pop
xlat
aam
shll
push
push
movsl
insb
aas
inc
or
sbb
inc
pop
add
dec
pop
sub
xchg
hlt
ret
jb
jo
or
add
mov
pop
shrl
fs
imul
call
xchg
cmpsl
or
les
into
xor
cs
out
rcl
xchg
jl
sarl
pop
pushf
xor
repnz
fs
arpl
fnstsw
sub
mov
ss
lahf
fs
aas
lods
sub
sbbb
push
mov
jne
add
push
mov
jecxz
gs
scas
mov
dec
mov
jno
push
and
xor
cmpsl
ljmp
movsb
pop
add
shl
imul
pusha
dec
or
add
xor
lret
xchg
enter
jo
int3
fdivp
push
addr16
rclb
rorl
push
xchg
ret
test
repnz
cmovne
sub
icebp
test
jl
stos
iret
pushl
dec
int
in
sbb
lcall
les
jnp
cmpsl
repz
or
xchg
rcrb
and
into
cltd
leave
iret
xor
ret
mov
lods
mov
stos
pusha
sub
orb
and
aam
mov
mov
add
jge
shlb
lret
sahf
in
out
jno
enter
inc
xorl
icebp
push
addl
inc
inc
into
out
dec
push
mov
or
sub
mov
jae
jecxz
sbb
sahf
sub
popa
js
rolb
in
lea
jo
sbb
sub
pop
adc
insl
sbb
add
xor
out
rcrb
ja
fxch
hlt
orb
icebp
ljmp
or
sub
xchg
xor
add
lods
rolb
adc
je
stc
sub
repz
stos
out
dec
sahf
aaa
or
mov
shlb
jno
adcb
aad
xor
adc
in
in
lock
sub
mov
sub
bound
loop
xlat
in
lret
cmp
mov
sti
dec
push
pushf
push
dec
xchg
fdivs
jns
jo
or
fists
lea
into
mov
xor
lods
mov
cmp
adc
or
pop
push
mov
clc
mov
fs
nop
orl
stos
cwtl
gs
cltd
inc
mov
and
cld
jnp
push
xchg
loop
push
repnz
sub
push
les
push
adcb
sbb
roll
int3
fdivr
js
pop
jno
or
sbb
push
lods
or
cmp
mov
xchg
je
cmpsl
call
popf
push
jns
lea
jge
adc
jbe
jb
mov
lock
jno
jecxz
mov
idivl
popa
sti
and
testb
arpl
sbb
mov
mov
call
jbe
mov
mov
movb
imul
fucomi
orl
stos
adcb
jg
mov
cmpl
cmpb
sub
pushf
aad
fisttpl
jns
lcall
jle
mov
adc
fdivrs
mov
leave
sub
pop
inc
jp
ret
popa
pop
lock
fstpl
lret
lods
pop
dec
and
je
pop
out
xlat
dec
cmpsb
adc
jns
inc
lahf
xchg
adc
pop
adcl
cmp
dec
mov
mov
dec
jnp
adc
inc
sbb
xor
repz
popf
sbb
sbb
cwtl
setg
ss
les
and
imul
jmp
mov
dec
outsb
repnz
movsb
push
fstpt
rclb
stos
bound
fsubrp
sub
mov
adc
in
sub
hlt
ret
mov
aam
pushf
scas
shl
sub
jl
sub
mov
jnp
xchg
mov
mov
cmp
shlb
push
mov
push
mov
jns
push
test
ja
enter
adc
movsb
enter
loop
aam
pop
movsb
not
data16
mov
sub
push
jb
pop
movsb
jo
cmpsb
pushf
std
sub
sahf
xchg
xor
popf
dec
ljmp
fmuls
sbb
ret
inc
bnd
sahf
xor
das
mov
in
int
jle
sub
jne
in
js
push
sbb
jle
lret
xchg
in
dec
shlb
xchg
movsb
jge
adc
sub
mov
shl
sbb
inc
jp
inc
jge
fnstenv
cmp
adc
nop
mov
adc
sbb
aad
fbld
xchg
nop
xchg
mov
enter
mov
mov
fs
jle
inc
leave
xchg
xor
lahf
or
jp
cld
xchg
rol
iret
xlat
inc
jns
mov
jb
hlt
clc
push
ret
dec
out
rcr
bound
enter
and
sbb
sbb
mov
mov
and
mov
enter
mov
int
or
cld
ret
sub
out
cmp
pop
sbb
call
jo
mov
inc
pop
and
or
sbb
inc
fstp
ret
dec
push
xor
sarl
jae
stc
adc
or
inc
and
aas
mov
add
adc
or
mov
loope
ja
lret
mov
xchg
or
sbb
enter
shrb
sti
adc
or
pop
insl
lods
movsl
sub
clc
out
add
repnz
jo
ss
mov
cmp
rclb
mov
or
jno
xor
dec
out
adc
cmp
add
outsb
adc
cmp
mov
push
xchg
adc
js
notl
rcll
test
mov
or
call
mov
scas
iret
mov
xor
imul
and
xchg
pop
jbe
fdivs
or
in
inc
adc
out
jle
lods
adc
pop
es
mov
dec
push
jmp
test
repz
repnz
cmp
push
mov
add
subl
loopne
enter
or
clc
lods
jmp
popa
xchg
insl
push
push
lret
mov
in
pop
negb
jp
lods
int
mov
in
out
jmp
or
and
mov
adc
push
lods
lret
in
lcall
outsb
mov
cs
cmpsb
fimull
dec
ds
negb
pop
mov
fistps
pushf
lods
or
lret
outsb
mov
add
sub
popa
insb
pop
je
sti
movsl
sub
andb
lret
pop
sbb
lods
or
mov
outsb
jns
loop
sub
lods
js
mov
xchg
sbb
pop
sbb
fidivs
in
les
stc
push
pop
jl
or
movsl
adc
or
in
xchg
adc
jb
pop
nop
push
imul
xchg
and
shlb
xchg
fs
cmp
sub
ljmp
test
mov
in
and
and
ret
pop
xchg
xor
fwait
and
lahf
adc
sub
dec
mov
add
cmp
xor
and
adc
xor
and
repnz
mov
xor
stos
scas
fcmovnu
testl
sbb
xchg
jbe
out
pop
push
mov
sbb
xor
test
xchg
gs
lds
leave
jnp
movsb
into
stos
pushf
xchg
xchg
dec
fcoml
mov
sbb
repz
das
test
push
and
sub
mov
xor
in
xchg
movsl
add
imul
push
cld
ret
xchg
les
in
or
sub
dec
jg
mov
sub
call
iret
push
and
jl
cwtl
scas
xor
cmp
mov
out
pop
xor
lock
nop
jecxz
mov
adc
sub
orl
nop
testl
sub
les
xchg
aad
adc
jne
push
into
popf
fdivs
nop
mov
aaa
addr16
gs
add
jno
scas
mov
ljmp
ficoms
adc
cmp
jne
and
lahf
scas
sbb
je
cmc
imul
sub
pop
mov
cmp
jge,pt
in
or
dec
push
mov
xor
push
xchg
gs
les
push
xchg
xor
inc
push
loop
out
or
adcb
xor
outsb
stc
dec
lret
out
push
xor
and
fcompl
ret
dec
adc
daa
cmpsb
cmp
xchg
push
mov
mov
outsl
push
and
stos
hlt
adc
das
lret
je
push
inc
xor
cli
xchg
xchg
pop
and
clc
xor
push
pop
sbb
jecxz
pop
loopne
sbb
xor
mov
lea
xor
adc
dec
xor
fsubs
ja
mull
sub
test
xor
dec
pusha
adc
int
jo
mov
and
cmpsl
jl
das
inc
stc
jno
mov
lods
mov
push
lret
aaa
fld1
mov
inc
sub
mov
das
mov
ret
les
cli
out
mov
or
or
mov
insl
xchg
and
and
cmp
jmp
insb
fiaddl
out
icebp
repz
imul
and
leave
sub
insl
mov
gs
or
and
cmpsb
pop
cmp
jb
mov
inc
mov
outsl
lea
or
ss
aaa
jae
cmpl
testl
ret
push
dec
fldenv
cmpl
adc
mov
fadd
mov
add
aam
sbb
sbb
fstpl
jmp
dec
and
lret
rclb
jg
repnz
and
cs
insl
pop
jmp
dec
movsb
hlt
insb
lods
or
and
scas
mov
fsubl
mov
nop
jnp
xchg
inc
pushf
cmp
fimull
jns
xor
lods
fisubrl
imul
add
fwait
ds
sbb
fisubrs
dec
add
cmp
and
cmpsb
xchg
fcmovnbe
or
faddp
xchg
sbb
bnd
push
fisttpl
dec
aam
cmp
pop
es
dec
sub
pop
repz
jl
fwait
repz
leave
sub
cmp
adc
pop
push
sub
aam
or
mov
xchg
and
sub
movsl
insl
movsl
xor
iret
cld
inc
aaa
orl
iret
setl
dec
adc
adc
in
sub
rcrl
addr16
pop
mov
in
add
jne
popf
in
ffreep
das
call
ja
imull
fwait
cmp
mov
rol
xorb
xor
mov
aas
ja
and
jae
push
in
sub
cli
and
push
mov
cmp
lret
lods
adc
xchg
pop
mov
pop
sub
or
mov
adc
stos
ljmp
sti
mov
out
adc
mov
mov
mov
fucom
xchg
call
in
hlt
lret
faddl
clc
and
jl
sbb
fs
mov
dec
mov
adc
into
out
sub
jp
cltd
jmp
jo
enter
cli
iret
shrb
je
cltd
mov
cmpsl
cltd
in
add
cli
loopne
sbb
cmp
shlb
mov
jae
mov
shll
mov
imul
mov
jg
popf
je
pop
insb
pop
add
je
dec
jnp
aaa
rclb
mov
pushl
pusha
and
lcall
jnp
fwait
push
push
sub
mov
pop
faddl
jle
pop
bound
cmp
cld
inc
push
mov
fnstsw
cmova
inc
arpl
add
orl
loopne
mov
cmp
add
mov
mov
adc
mov
cmpb
xorl
in
icebp
arpl
push
push
bound
cmpb
jp
adc
ret
bound
sarb
hlt
sbb
aam
lods
inc
sub
out
icebp
out
add
push
sbb
dec
jo
fldcw
fs
test
push
ss
xchg
mov
dec
adc
int3
cwtl
mov
rorb
cmp
jg
xor
decl
sub
mov
push
dec
jl
fwait
mov
out
fwait
sub
cmp
push
sti
iret
cs
lret
aaa
xor
push
test
dec
sbb
push
cmp
addr16
movzwl
dec
in
les
pop
xchg
xor
jmp
push
mov
aaa
inc
jl
out
test
out
shrl
aad
sub
in
pop
mov
stos
call
sahf
rcrb
push
lcall
popa
aas
lret
ljmp
sub
pop
push
shr
jmp
cwtl
or
sub
pop
cmp
xor
xor
das
stos
push
sub
out
cmp
cmp
lcall
jmp
add
add
mov
fwait
hlt
sub
into
call
push
inc
cltd
xor
nop
mov
or
int3
pop
pop
lcall
aad
gs
mov
mov
in
and
int
mov
inc
movsb
out
das
insb
jno
test
fadd
jmp
add
repz
mov
in
mov
mov
lods
xchg
idiv
xchg
cmpsl
jmp
jbe
arpl
dec
cs
cli
or
xchg
cli
dec
and
mov
movsl
sbb
sbb
ret
mov
dec
jmp
sub
lock
sub
and
jno
xor
xchg
sbb
in
arpl
jne
cmp
ret
iret
adc
push
sub
mov
mov
sub
jecxz
jne
sub
push
lcall
add
sbb
jne
fstpl
sub
or
leave
sbb
xor
lods
jns
lods
clc
jne
ret
outsb
jg
pop
out
lcall
movsb
mov
mov
test
ds
cld
fsubrl
pop
mov
add
rorb
lods
ret
out
mov
adc
leave
sbb
loopne
call
enter
and
mov
fldenv
scas
lods
and
add
cli
pop
jmp
mov
mov
cmp
int
in
mov
mov
add
rcr
fbstp
pop
inc
fdivrl
stos
rorb
ret
lcall
dec
sub
aaa
pop
leave
add
es
inc
cld
mov
xor
add
push
test
ds
aaa
test
int3
adc
inc
jge
lds
repnz
cmp
cmp
mov
rcll
fiadds
xchg
xchg
fisubrl
lea
popa
jo
outsl
push
xchg
dec
test
sub
sub
adc
or
pop
fiaddl
lods
push
repz
jnp
xchg
fnstsw
sahf
icebp
jg
push
push
pop
mov
add
push
mov
and
icebp
adc
push
dec
fidivrl
or
movsb
mov
lret
call
lods
sbb
ja
fwait
jmp
loopne
leave
out
cli
inc
inc
ficompl
sub
pop
jb
cmc
dec
sub
cmp
adc
cmp
and
imul
fsubp
adc
sub
push
cli
pusha
cld
fucomi
push
sbb
mov
sbb
and
lds
jle
dec
hlt
out
fldl
pop
rcrl
int3
mov
pop
xchg
sbbl
int
aam
adc
mov
mov
dec
ror
cwtl
fldt
jo
or
mov
mov
inc
sbbl
mov
cmp
push
sub
mov
insb
nop
push
test
or
repnz
cwtl
shrb
cmp
fcoms
jne
jno
lret
aad
ret
jmp
repnz
dec
inc
out
loop
mov
adc
sub
pop
shlb
dec
sarb
jmp
xor
test
fcompl
nop
cmp
jns
rcll
fnsave
shll
scas
inc
xchg
inc
data16
xor
pop
push
push
sti
movsl
dec
je
xchg
sbb
or
int3
dec
mov
lock
mov
adc
icebp
adc
test
cmc
inc
bswap
and
notl
movsl
jg
sbb
jmp
sub
jo
xchg
push
jl
push
or
arpl
ja
sub
clc
addr16
call
and
adc
les
mov
xor
mov
movsl
cmpl
pop
push
xor
fnstcw
sbb
add
mov
hlt
lods
xor
lds
daa
gs
xorl
xchg
push
mov
aad
aam
xchg
loop
mov
mov
cmp
mov
aam
outsl
xor
pop
enter
scas
xor
push
mov
push
xchg
loope
jl
push
jbe
adc
mov
add
or
iret
mov
imul
leave
push
adc
mov
sub
stos
or
lcall
sub
test
mov
jp
out
int
cltd
cmp
aaa
mov
cmp
stos
in
push
jo
mov
xchg
mov
jle
sbb
stos
movsb
repnz
loope
sbb
mov
xor
sub
add
leave
shlb
push
cmp
in
ljmp
fsubrs
xlat
hlt
pop
xor
mov
xchg
cltd
fcoml
jne
out
jns
out
and
sbb
scas
jno
mov
push
sub
aam
mov
test
and
sub
test
adc
jg
lret
xchg
aad
fwait
add
inc
mov
rolb
gs
ss
inc
adc
fidivrl
lret
das
ds
inc
pushf
xchg
xchg
fsubrl
sub
push
jecxz
iret
or
aam
mov
inc
mov
push
lods
cmp
xchg
aam
dec
xchg
adc
mov
adc
leave
or
jle
and
adc
sub
loope
xchg
mov
push
icebp
ret
ret
or
outsl
pop
stc
or
lods
xchg
pop
out
in
cltd
sub
imul
daa
pushf
testl
fst
jg
imul
incl
inc
push
mov
or
and
aam
dec
cmpsl
or
push
pop
bswap
ret
clc
arpl
cld
xor
fsubs
outsb
jg
sbb
ljmp
adc
aad
xor
jmp
cmp
daa
cld
xchg
ds
jnp
addl
data16
push
inc
jp
rclb
cld
inc
cmp
and
insl
adc
mov
add
xchg
test
jae
add
popf
sub
mov
cmp
dec
add
cmpsl
lret
nop
ds
sub
out
je
outsl
in
jle
xchg
xchg
cmpsl
pop
vdivpd
adc
dec
jno
mov
sub
sub
stos
loope
repz
movsb
scas
xchg
lcall
jne
mov
sub
lods
test
nop
hlt
inc
sub
es
sub
in
repnz
rcrb
jge
es
fldl
jge
movb
fsubrs
outsl
pop
mov
pushf
sahf
ljmp
jg
fidivs
lock
cmp
push
pop
scas
add
sub
xor
dec
sti
test
aam
andl
jno
cltd
lahf
or
dec
lea
hlt
lret
pop
ret
test
mov
pop
mov
fld
inc
jns
mov
std
mov
aas
adc
push
jl
sbb
mov
fimuls
and
or
mov
sub
pop
jecxz
mov
imul
or
xchg
and
ds
sub
test
fucomi
xor
sub
adc
jae
stos
inc
mov
xor
or
and
and
js
pop
outsl
jl
ret
sub
and
neg
out
imul
mov
xlat
insl
inc
cltd
lret
push
cmp
xor
jle
inc
add
xchg
xchg
xchg
push
les
xchg
jecxz
mov
mov
mov
jmp
mov
testl
pop
lcall
sub
mov
sub
push
icebp
dec
out
push
test
test
outsl
adc
and
ror
push
mov
addr16
fimull
inc
cmpsb
ja
mov
xor
ret
lcall
in
aaa
sub
add
mov
add
jmp
out
mov
cli
into
out
ret
sbb
sbb
test
adc
jbe
cmp
adc
sub
imul
cmp
cwtl
popf
fidivrs
loop
or
adc
js
cmpsb
mov
jns
sub
cmpb
adc
jns
mov
xor
adc
movsl
xor
sub
pop
xor
sub
xchg
inc
je
sub
ds
nop
or
xchg
jns
es
sbbb
push
jge
mov
sub
cmp
add
arpl
shrl
rcrb
popf
add
mov
sub
xchg
and
pusha
adc
mov
ror
push
es
xlat
add
repnz
sbb
mov
mov
movsb
push
xchg
lea
mov
push
dec
push
mov
rolb
cli
sub
pop
jp
out
and
ret
cmp
fldenv
push
lods
sbb
dec
jmp
cmp
stos
imul
push
mulb
xor
mov
outsl
popf
pop
sbb
ret
sbb
lods
jns
push
ret
push
nop
push
out
xor
jo
and
test
cwtd
cmp
insl
push
mov
lods
inc
add
mov
pop
cmp
movsl
mov
out
jp
mov
jle
stc
jp
mov
fcompp
mov
stc
adc
ja
xchg
dec
xchg
movsb
adc
push
dec
mov
cmp
in
push
add
mov
add
mov
aaa
ds
adc
out
rol
enter
cmp
adc
in
fildl
xlat
mov
xorb
nop
xlat
and
js
lock
in
insl
mov
aas
imulb
mov
push
add
ds
mov
es
push
jl
push
inc
les
lahf
sbb
jp
fnstenv
or
fs
sbb
inc
test
mov
aad
xor
lods
dec
lea
bound
xor
orb
mov
add
call
ss
inc
jo
mov
pop
mov
xorb
push
push
in
js
nop
push
lods
xor
je,pt
lds
sbb
cwtl
mov
add
loopne
jnp
lds
cwtl
repz
xor
fsts
jg
jge
cltd
jno
fcmovbe
add
push
jg
xor
jle
mov
mov
sub
sub
pop
push
jne
adc
in
ret
fimuls
sub
adc
xchg
dec
sub
out
sub
aam
fisubrs
aam
stos
aaa
add
lock
in
test
aam
push
and
mov
jmp
sub
incl
mov
fs
lahf
cmp
mov
sub
adc
mov
test
test
loopne
vunpckhps
inc
sub
lret
fcmovu
mov
ja
in
rcll
ret
mov
mov
lock
mov
add
xchg
repnz
adc
pushf
push
shlb
fisubs
lret
ret
je
ds
jp
lahf
pop
rorl
icebp
xchg
aad
bound
mov
sub
xchg
mov
jmp
aaa
mov
and
dec
or
insb
nop
cmpb
call
mov
adc
sbb
pop
xchg
mov
pop
add
popa
adc
lods
sub
add
xchg
pusha
ss
in
aam
jne
mov
popf
dec
subl
or
inc
cmp
sarb
lret
pop
lds
sub
pop
mov
adc
pushf
in
jge
lcall
test
ret
push
fwait
push
or
inc
cmp
xchg
mov
xchg
scas
loop
inc
ret
mov
jno
lret
test
push
mov
fcompl
and
fs
adc
xlat
ret
mov
repnz
cmc
bound
dec
imul
out
adc
xlat
aad
dec
mov
int3
repz
stos
aaa
rorb
add
int3
mov
pusha
fnsave
fldt
inc
mov
cmpsb
jge
jge
cmp
jg
or
sub
imul
ret
jmp
add
cmpsb
repz
test
push
xor
sub
fldcw
pop
fildll
xor
ja
or
sub
fwait
sub
aam
in
pop
stos
popa
pop
in
aas
mov
aas
mov
adc
adc
sbbb
lods
fisubl
dec
js
xchg
insb
and
xchg
xlat
sbb
cmp
inc
xlat
sbbb
adc
mov
outsl
hlt
mov
mov
scas
dec
leave
or
daa
mov
out
out
stc
psrlq
mov
in
inc
arpl
addr16
xchg
sbb
pop
lods
ljmp
or
stos
ja
ljmp
je
add
cmp
pop
lcall
push
jl
aaa
xor
test
movsl
aas
in
repnz
icebp
sub
imul
xor
sub
hlt
inc
rcl
cmp
es
jp
hlt
jae
jno
hlt
xchg
les
pop
pop
dec
add
fcmovu
bound
jg
fldt
sub
rcrb
cwtl
cld
fnstenv
cmpb
xor
adc
xchg
in
loop
xchg
sbb
adc
xchg
add
mov
sub
insl
dec
ds
test
ror
adc
pop
sbb
jnp
stc
adc
pop
ss
daa
add
rol
pop
mov
inc
aad
or
add
xor
stos
jge
daa
mov
test
add
scas
xor
mov
pop
insb
data16
jne
xchg
pop
push
dec
jns
icebp
call
movsl
sbb
mov
xchg
jae
jle
or
jns
xchg
xchg
cltd
shll
jg
in
sbb
pusha
repz
gs
fisubrs
sub
stos
mov
or
cltd
insb
jae
dec
lock
dec
sub
ret
or
and
lock
push
test
push
mov
jne
fisubl
mov
mov
xor
mov
repnz
shlb
jo
mov
outsl
test
xor
fldl
sbb
ja
jae
orb
pusha
nop
hlt
mov
stc
repnz
sbb
dec
adc
push
repz
in
jb
test
dec
ds
xor
adc
lods
lea
mov
sub
mov
repnz
mov
pushf
jp
lock
push
add
mov
xlat
imul
pop
push
sahf
stos
addr16
lahf
add
test
xchg
insb
sti
jle
jnp
xchg
pushf
fsubrl
inc
lea
pop
adcl
or
pop
push
cltd
mov
push
mov
imul
pop
cmp
xchg
adc
cmpsb
mov
xorl
xchg
xor
in
ja
aaa
mov
mov
sub
dec
insl
into
adc
inc
leave
dec
push
pop
fcomi
ljmp
mov
add
jne
mov
cmp
faddl
adc
push
push
sbb
shll
addl
cmp
rol
in
addb
cwtl
lods
or
jmp
dec
cmp
pushf
imul
mov
jg
nop
sub
out
cltd
adc
pop
insl
sub
adc
xchg
call
xlat
jl
jl
in
out
shlb
jg
pop
mov
ret
xchg
lret
or
cs
add
jecxz
out
push
lret
push
in
cs
adc
test
ja
mov
mov
jmp
sbb
mov
adc
pshufw
or
repnz
mov
into
in
push
mov
add
aaa
stos
dec
mov
adc
push
imul
cmc
popf
cmp
rcrl
push
push
jp
lret
aam
xor
sbb
inc
sbb
push
push
test
and
jne
adc
xchg
call
dec
rorl
lahf
lret
adc
dec
pop
test
lcall
add
es
in
sub
in
xor
fs
add
or
bound
mov
and
adc
scas
push
movsl
mov
imul
repnz
xchg
aad
jns
test
rorb
xchg
xor
cmp
lcall
out
pusha
and
fsts
mov
rcll
pop
movsb
imul
ja
sub
jno
mov
pop
enter
ret
int3
lods
ja
dec
push
mov
nop
and
das
ja
push
addr16
cmp
or
roll
dec
leave
test
fmull
sahf
pop
repnz
mov
aaa
xchg
sub
and
push
loope
inc
inc
sbb
scas
adc
sub
lds
repz
jne
addr16
fimull
fldl2e
cmp
out
jns
mov
sbb
mov
and
mov
or
sub
jne
add
sub
mov
out
jp
cltd
jg
mov
les
and
inc
lods
fwait
dec
lock
fs
div
mov
iret
adc
mov
outsb
inc
sbb
in
aas
xor
xchg
ljmp
adc
lahf
and
test
adc
clc
test
cmp
test
inc
rclb
or
and
or
test
lods
in
clc
xlat
mov
cmp
jae
insl
pop
mov
add
pop
into
mov
sahf
ret
aam
xchg
mov
mov
rcrl
jno
push
mov
ficompl
je
lods
lock
subl
mov
ja
xchg
or
jne
pusha
mov
ret
mov
xchg
dec
or
xorb
repz
lock
fdivr
loope
sbb
data16
subl
inc
adc
cmp
dec
adc
jns
adc
cltd
or
xor
push
and
add
xorb
mov
orb
adc
dec
mov
rcr
popf
outsb
int3
les
sub
push
lea
clc
mov
push
mov
mov
push
test
and
jns
adc
adc
sub
inc
aad
repz
mov
test
test
sbb
das
lahf
mov
jecxz
adc
mov
or
dec
lret
push
cwtl
mov
mov
and
sub
fldcw
mov
test
mov
inc
das
jne
fimull
loopne
dec
xchg
inc
fs
push
inc
and
xchg
push
pop
jae
adc
ret
sub
inc
ds
outsb
lods
sbb
les
add
cvttps2pi
dec
xchg
and
js
hlt
pop
add
mov
cmpsl
sub
push
sub
xchg
inc
sbb
cs
neg
sub
int3
mov
adc
pop
lea
ret
sub
pop
sub
or
data16
or
mov
pop
inc
orb
sub
inc
push
cmp
test
aam
loopne
adc
or
test
mov
push
aaa
add
fcompp
sub
mov
cld
lods
sti
test
jge
dec
jg
out
push
sbb
fnstsw
cli
xor
pushf
push
ret
sub
sbb
imul
inc
insb
push
sub
lret
int3
mov
nop
les
ss
sub
in
mov
lret
xorb
mov
test
les
dec
lods
xchg
cmp
mov
sbb
pop
aad
sahf
mov
ret
gs
loopne
mov
fmull
sub
daa
test
sbb
cmp
adc
cmp
cmpsb
jl
adc
cwtl
jbe
in
repnz
hlt
jne
cmp
sub
popa
mov
sbb
fwait
and
pop
mov
or
dec
rclb
repnz
nop
push
fldt
loope
rcl
iret
in
cmpsb
jbe
sub
jg
stos
mov
out
push
ss
mov
sbb
pop
jmp
pop
out
in
sub
jnp
cmpsb
out
pushf
mov
popf
out
sub
mov
ss
in
xor
int
dec
mov
mov
adc
ret
stc
orb
jnp
cmpsl
repz
out
fsubrl
pusha
mov
inc
dec
testb
mov
in
test
sbb
push
shl
jle
test
adc
popf
mov
fnstenv
into
gs
shlb
inc
mov
sub
fldt
out
mov
inc
jp
pop
push
xchg
mov
inc
sub
nop
mov
scas
adc
mov
arpl
aad
jb
lds
fsubrs
mov
mov
imul
cmpsb
mov
pop
jns
add
mov
push
imul
pop
ja
rcrl
lds
mov
aam
inc
mov
sub
sub
gs
popa
sbb
fwait
pop
jae
jbe
ror
movsl
addb
jnp
pusha
mov
push
loop
fs
add
repnz
imul
inc
out
xor
lcall
cmp
loopne
sbbl
aas
sbb
dec
or
dec
sub
xchg
cmp
aad
jae
lret
cs
jmp
jnp
xchg
inc
mov
pop
pop
sbb
out
add
cld
imul
cs
lea
ja
int3
jmp
stos
out
insb
ret
add
sub
ss
push
add
cmc
jne
sub
push
or
nop
push
arpl
popa
mov
xchg
xchg
jnp
leave
shrb
inc
mov
lods
and
push
dec
add
pop
xor
sbb
stc
loop
icebp
lret
movsb
fidivrs
out
aaa
dec
ret
aam
add
dec
aam
in
out
test
jb
andnps
out
imul
loope
aas
sub
cwtl
jbe
dec
ret
out
es
jg
lods
or
jbe
test
iret
adc
addl
pop
and
pop
ret
pop
xor
adc
and
pushf
push
push
inc
xchg
imul
mov
gs
mov
inc
imul
and
and
int
je
add
add
lods
xchg
sahf
jne
sub
lods
loopne
pop
xchg
mov
xor
xor
loopne
mov
imul
jmp
mov
lods
pop
into
sarb
sbb
insb
fwait
or
call
jge
sbb
mov
mov
aas
fwait
mov
sbb
gs
mov
adc
daa
ss
into
rolb
jg
insl
imul
outsl
adc
les
adc
inc
imul
and
adc
and
fisttpl
int
mov
testl
pop
sub
pop
testb
push
add
inc
aam
dec
xor
cmp
jmp
sub
lahf
sub
mov
inc
cmp
pop
jp
push
adc
and
pop
jns
cmc
lods
test
sub
cmpsb
push
sub
subb
call
ljmp
imul
push
push
pop
into
cmp
sub
xchg
sub
cmp
and
adc
imul
into
leave
push
in
mov
out
jmp
outsb
std
mov
int
popa
fisttpll
js
outsl
xchg
fs
out
xchg
test
sub
sarb
cld
mov
push
pop
xchg
sub
mov
inc
adc
and
sub
sbb
rcpps
aam
in
inc
in
test
mov
cwtl
rolb
ja
push
rolb
ja
and
pop
mov
jg
jno
jg
xor
fimuls
pop
rcr
xchg
aam
xor
fisubrs
dec
fnstenv
xor
rcrl
stc
movsl
and
cmp
mov
push
nop
xchg
mov
enter
shrl
orb
inc
add
xor
out
dec
xchg
iret
fisubl
fs
mov
cmp
test
arpl
sbb
jne
shrb
sbb
mov
std
add
mov
mov
xor
hlt
enter
call
push
rcr
sub
dec
and
sub
mov
push
jne
and
das
fisttpl
xor
dec
mov
sub
dec
stc
cmp
sub
lret
push
cmc
stc
dec
sub
and
xchg
cmp
es
dec
fxtract
imul
push
and
hlt
push
sbb
xchg
push
jns
lret
cmp
test
or
mov
jge
fidivrl
shrb
adc
push
jg
push
and
mov
std
sub
xor
out
and
ljmp
adc
sbb
mov
aaa
xchg
xor
leave
jge
xor
pushf
dec
mov
shll
iret
rclb
je
jne
mov
adc
hlt
in
push
sahf
xchg
sahf
lods
shr
loop
mov
pusha
test
lods
mov
fdivr
mov
test
dec
lods
mov
mov
sub
imul
dec
fmuls
mov
adc
push
rcrb
lds
jmp
sbb
test
movsl
fsubl
xchg
je
negb
xchg
nop
sti
jl
sub
je
xchg
pushf
adc
cmp
fxch
ret
push
ljmp
jnp
add
int
jb
rcl
test
in
rorl
ds
fisttpll
xor
push
repnz
ss
inc
int3
add
jno
xchg
es
int3
pop
adc
in
sbb
jbe,pn
adc
cmp
pop
sub
push
sub
mov
jmp
mov
cmp
dec
fsts
jg
and
sbb
pop
adc
add
ds
and
mov
jb
aaa
mov
out
mov
out
cmpsl
orl
cmp
push
into
pop
xor
rolb
pop
xchg
sub
jnp
push
lret
jecxz
enter
into
in
mov
sub
mov
xor
sti
or
push
dec
sub
out
adc
es
xor
out
les
sti
ss
jns
lret
fldcw
and
xor
mov
mov
rol
push
cmp
sbb
lods
pop
inc
push
les
xor
fildll
jmp
mov
data16
jg
popf
repz
int3
push
jecxz
adc
addr16
into
jl
cltd
mov
mov
shll
jne
xor
fsub
adc
push
in
dec
dec
add
cmp
out
shlb
aad
xchg
nop
lock
xchg
cmc
or
fstpl
push
pop
repnz
push
adc
mov
jns
insb
dec
pop
in
faddp
outsl
add
js
pop
xor
sbb
shrl
cmp
xchg
fldl
pop
out
cmpsb
sbb
mov
insl
mov
bound
inc
fstl
cmpsb
cmp
adc
jno
sub
ret
call
bound
xchg
mov
xchg
xchg
fs
test
xor
cwtl
add
xchg
in
pop
adc
xor
inc
jge
mov
enter
fldt
call
xor
and
movsl
cmp
in
rcrl
cmp
fadd
bnd
add
mov
mov
pushf
les
out
xor
scas
ja
and
and
push
add
int3
fistpl
aaa
hlt
xchg
ret
aam
inc
gs
rcll
push
push
xlat
les
cmp
and
mov
mov
sub
aaa
pushf
sbb
mov
test
fsub
les
mov
fcmovnb
dec
rclb
adc
and
unpcklps
rolb
test
mov
stos
xor
pop
cmp
fimull
jne
push
pop
mov
mov
bnd
cli
imul
mov
ror
popf
and
dec
mov
mov
sub
pop
insb
imul
es
xor
ljmp
enter
jbe
xor
enter
fldt
int
ss
shl
inc
sub
out
xor
sbb
xor
cmpsb
decb
sub
dec
insl
cmp
fs
ret
cmp
or
lods
sub
imul
sbb
xchg
dec
jp
fldcw
shr
insb
rclb
sub
xor
test
addb
cmpsb
in
cmpb
popf
stos
inc
ja
nop
add
lret
adc
fcompl
out
leave
jge
lods
fnstcw
xor
ss
das
aas
xor
xorl
adc
filds
loop
lea
and
mov
push
mov
ret
aam
stc
js
push
sub
jmp
loopne
pop
lret
jecxz
mov
stc
inc
pop
aad
sub
sarl
lods
mov
fisttpll
mov
xchg
push
add
xor
sub
insl
lea
int3
stc
lret
sbb
xchg
sar
nop
xchg
jnp
mov
ds
add
pop
lahf
imul
inc
mov
mov
cld
pop
sbb
pop
mov
inc
mov
push
adcb
sub
ss
pushf
add
xor
sub
lea
mov
cld
push
test
xchg
cmp
xchg
jo
pop
pop
pusha
pop
xor
or
mov
sub
scas
sbb
pushf
dec
ds
mov
or
sub
xchg
jns
sarb
xor
leave
cli
adc
xchg
mov
je
fldcw
je
sub
jge
inc
sub
lcall
rcr
jg
add
dec
fdivs
add
jns
sub
gs
cmp
in
and
fdiv
lods
es
stos
pusha
jmp
jne
fsubrs
and
xchg
es
jne
movsl
mov
jne
mov
mov
mov
adc
aad
popa
in
iret
dec
sub
jl
dec
fcom
sbb
xlat
iret
cmpsl
adc
xchg
ret
jbe
sub
icebp
push
sarl
mov
addb
orb
out
rolb
mov
cmpsb
aam
mov
fcmove
dec
outsl
loop
xor
jecxz
xor
ljmp
hlt
adc
loope
xchg
movsb
mov
ja
call
sub
sahf
fsts
in
sub
or
jb
mov
jns,pt
mov
pushl
lret
in
fidivs
ret
push
jb
xor
aam
mov
jne
push
mov
test
popf
mov
jmp
fs
out
xor
add
mov
add
lock
ret
mov
pop
push
rorb
jae
sar
push
aad
or
push
out
mov
add
lock
fld
jb
sti
or
sbb
jb
and
addr16
test
and
test
xchg
xchg
dec
cmp
out
push
lret
insl
lahf
sub
inc
or
movsb
jne
aas
mov
aaa
cmp
test
sub
push
pop
lret
daa
jmp
rorb
sub
xchg
mov
ja
shlb
in
cwtl
mov
jnp
add
cmp
test
mov
mov
popf
fdivs
jo
or
xchg
cmp
cmp
sub
fdivl
lcall
push
sub
fcoml
outsb
add
inc
ss
or
out
cmp
or
leave
xchg
sub
out
jno
inc
movsl
or
mov
divb
inc
gs
jl
enter
jae
push
cltd
outsb
fnstcw
mov
ret
jne
lret
outsl
adc
xor
ds
cltd
fs
jg
or
mov
jno
mov
je
sbb
sbb
mov
push
dec
cmp
xchg
mov
push
mov
fsubrp
repz
sbb
sub
mov
sub
sar
sub
pop
inc
test
lret
push
mov
dec
inc
cmp
adc
arpl
outsb
fwait
popf
fdivs
outsl
fnstcw
flds
adc
insb
add
scas
lea
sahf
rorl
sub
xchg
inc
xor
cltd
les
or
pop
mov
adc
or
xor
mov
insb
aad
imul
jl
fldl
add
into
rol
add
sbb
iret
push
pusha
mov
cs
jmp
mov
movb
or
stc
inc
push
aam
les
jns
test
popf
dec
das
fsubr
hlt
dec
and
cmp
dec
adc
cmp
imul
cltd
pop
stc
pop
sub
js
hlt
jo
inc
mov
out
dec
push
mov
lods
fsubl
adc
xlat
jg
sub
stos
add
cmp
jns
lods
jle
inc
icebp
lea
or
loopne
clc
xchg
push
or
shrb
add
or
fwait
hlt
daa
mov
mov
rolb
sbb
mov
ficoml
bound
sarl
push
xchg
jne
push
ret
ficoml
cmp
jae
sub
cs
lahf
sub
pop
mov
pop
push
pop
rcl
sbb
loop
mov
pop
nop
test
int
out
insb
lods
stc
mov
insl
push
sub
nop
jb
inc
mov
lcall
sbb
fimuls
mov
ficoml
lret
ret
cmpl
mov
mov
dec
adc
mov
mov
pushf
sbb
fldl
xchg
push
adc
bound
inc
jecxz
jae
sbb
xor
xchg
cmp
mov
push
fs
sub
mov
rorl
lock
mov
xchg
in
je
repnz
cmp
mov
aam
add
jnp
add
jl
dec
fs
xchg
loopne
mov
xchg
mov
rorl
mov
cmp
jg
pop
shrb
test
mov
lods
das
gs
and
or
test
or
and
dec
jg
movsb
int
aas
adc
ss
pop
imul
in
mov
sbb
ret
pop
sbb
pop
xor
mov
add
lret
pop
sub
pusha
orl
xor
jbe
adc
xchg
xchg
int
ss
cwtl
sub
push
mov
add
jg
imul
push
hlt
scas
jp
add
xchg
xor
jnp
ja
aad
jne
push
jae
jae
jp
mov
mov
xlat
sbb
aam
hlt
call
xor
incl
ret
ss
leave
mov
add
add
xor
jbe
shl
testb
icebp
sbb
cmp
rolb
xchg
ds
mov
stos
add
in
iret
pop
mov
inc
lahf
fstpt
mov
fdiv
inc
nop
sub
xor
jb
add
bound
or
mov
xchg
enter
faddp
ja
cmp
in
rcrl
and
xor
jns
into
js
cld
push
int3
mov
notb
push
stos
push
fcoml
push
cld
sbb
cli
pushf
jns
push
sarl
out
movsl
out
lret
mov
cmp
xchg
mov
cs
movsl
or
adc
push
call
cmp
push
inc
inc
and
fcmovb
and
in
mov
mov
call
push
adc
rcrb
pop
loope
lock
loop
sub
jb
mov
js
sub
subb
lds
xchg
mov
add
out
shlb
sbb
or
mov
cmp
inc
popf
in
push
test
pop
sub
dec
inc
mov
mov
stc
mov
add
ret
mov
pop
jns
sub
mov
dec
cmp
mov
iret
mov
lcall
cld
aam
je
xor
push
test
arpl
out
mov
xor
and
dec
and
in
xor
cmc
lret
popf
je
jmp
push
dec
push
inc
bound
in
or
inc
out
xorb
and
push
lret
mov
cmp
repnz
xor
popf
xchg
sbb
cld
and
sbb
mov
clc
mov
orl
into
sub
stc
popa
mov
dec
or
repnz
mov
cwtl
dec
push
or
jns
mov
adc
adc
movsl
dec
pusha
sub
jnp
sub
lcall
pop
stc
sbb
pop
adc
or
ljmp
test
xorl
lods
add
out
add
xchg
mov
into
pusha
inc
incl
xor
loop
and
jl
jl
icebp
js
scas
mov
adc
xor
insl
je
sub
cld
xchg
mov
pop
testl
jp
push
adc
sub
cmp
inc
mov
mov
les
pop
subl
cmp
pop
ret
xor
pop
lods
mov
xor
mov
mov
jecxz
mov
js
jns
inc
push
fdivs
mov
xor
sub
mov
sub
jl
jb
and
cld
sti
pop
fildl
addl
xchg
lret
mov
js
inc
xor
or
and
dec
rcr
pop
test
aam
repnz
outsl
hlt
lahf
sti
shlb
pop
adc
cmp
pop
xor
mov
push
lcall
xchg
sub
xor
jo
sub
cmp
ret
xor
jno
std
adc
mov
ds
out
sub
dec
lret
in
xor
ljmp
je
pop
xor
out
aad
cs
mov
cwtl
jno
lret
int3
out
mov
mov
mov
aad
negl
cmp
mov
push
ret
add
icebp
and
leave
add
insl
xor
pop
jbe
testb
xchg
adc
xor
dec
jg
adc
cmp
sbb
pop
icebp
insl
fwait
in
xchg
mov
mov
mov
xor
shlb
xchg
stc
fstp
cmp
mov
repz
movsl
outsl
xchg
add
jp
divb
mov
sbb
sbb
sbb
and
dec
xor
mov
mov
fmul
push
outsl
fidivs
mov
jbe
push
pop
mov
sbb
mov
aad
and
fisubl
popa
adc
add
in
shll
cli
loopne
mov
pop
jae
mov
repz
in
pop
xor
lcall
xor
mov
cmpsl
xchg
ds
xor
outsl
inc
dec
push
jno
xor
dec
mov
aam
fcompl
pop
mov
push
lea
cmc
add
or
lahf
test
jmp
outsb
mov
sub
xor
decl
fisttpl
aaa
jmp
xor
mov
jg
push
lds
fbld
xor
inc
push
sahf
lcall
xor
fsubr
inc
cmc
hlt
dec
sub
std
sbb
sbb
lea
mov
sbb
lods
push
mov
rolb
ds
sti
jecxz
xor
mov
mov
sub
int3
mov
fdivl
aaa
push
fst
jne
imul
push
in
orb
subl
mov
and
push
xorl
rcll
in
jae
xor
jne
push
int
mov
xor
push
xchg
xor
imul
sub
mov
mov
in
lods
in
mov
cli
pop
mov
out
iret
int3
pop
xchg
xor
xchg
int3
faddl
dec
mov
add
xor
sahf
hlt
mov
xorl
cmp
std
rcrl
sbb
insl
push
jge
push
mov
jne
xor
xor
stc
jmp
xor
les
cltd
ret
add
inc
push
sarl
mov
dec
je
lcall
add
adc
xchg
hlt
das
shll
and
xor
xchg
lock
clc
in
xor
testb
jae
adc
mov
mov
int3
outsb
mov
xor
cmp
adc
into
cmp
cwtl
dec
outsl
xchg
aaa
xor
fwait
out
jp
and
icebp
jg
dec
imul
push
jbe
mov
xchg
fdecstp
data16
loop
daa
xchg
pusha
xchg
xor
dec
jp
addl
pop
rcr
push
mov
clc
cmpsb
out
cmp
xor
rol
dec
inc
push
sti
addr16
pop
stos
mov
subl
xchg
rolb
xor
cmp
xor
ljmp
inc
dec
sbbl
mov
adc
jp
mov
mov
add
hlt
fldenv
cmp
xorb
push
cmp
xor
fwait
or
mov
and
les
ret
xor
insb
inc
sbb
or
xor
in
adc
xlat
cmp
loope
sbb
mov
jl
fsincos
mov
arpl
sbb
sub
lea
inc
imul
iret
icebp
xor
mov
fs
xor
sbb
mov
mov
pop
mov
je
inc
adc
xor
jo
mov
push
setnp
add
push
mov
xchg
xor
xor
lock
subl
scas
dec
and
dec
push
xor
add
fcoml
dec
or
sub
xor
add
inc
dec
vminss
call
cmpsb
jne
aam
test
xchg
stc
jno
fwait
jg
mov
sbb
popf
mov
sbb
ret
adc
je
mov
xor
sbb
sub
cmpsb
xor
fcoml
add
xorl
imul
jl
dec
js
pushf
mov
aam
pop
xor
iret
fisubs
xor
lds
add
xor
sub
imul
mov
xchg
push
xor
sbb
aam
in
lea
xor
hlt
push
repnz
lret
sti
lods
jl
xor
and
push
or
lea
sbb
xor
dec
fs
nop
cmp
xor
xchg
ret
test
dec
sub
xor
mov
push
out
rorb
pop
or
fsubs
imul
lret
pushf
add
stc
pop
sbb
sub
loop
out
mov
mov
mov
push
jl
daa
and
jl
rcrl
xor
fsubs
movsb
xor
pop
cltd
push
dec
daa
xor
out
shll
inc
mov
pop
lds
cmp
pop
std
sbb
adc
xor
loope
sbb
hlt
or
aad
out
xor
inc
lods
fnstenv
enter
pop
dec
add
fwait
xchg
xor
shl
inc
and
push
push
xor
cmpsl
mov
adc
xor
nop
push
aaa
icebp
call
pop
stc
or
cmpsb
sti
ss
gs
sbb
negl
xor
jg
scas
mov
lods
in
cmpps
xchg
shl
mov
div
mov
mov
fdivs
add
shrb
mov
mov
jns
xor
mov
rorl
dec
jl
mov
iret
pop
idivb
cmp
out
push
add
and
andb
aas
arpl
xor
mov
xor
xchg
mov
lcall
int
test
mov
xor
outsb
sub
cmc
sbb
lcall
mov
fstpl
lret
test
xor
lds
xlat
lods
gs
or
pop
push
mov
and
or
frstor
movsl
int3
mov
xor
leave
xor
lcall
xchg
adc
pop
xor
arpl
stc
dec
mov
xchg
mov
aam
push
lea
test
inc
addr16
push
and
push
ficoms
sub
gs
mov
jns
sbb
add
mov
stc
jbe
lds
pusha
sub
sti
dec
mov
dec
mov
xor
dec
xchg
fldt
cmp
or
push
lods
xchg
outsl
fisubs
jp
int
or
sub
ds
leave
pop
shll
adc
mov
sub
jo
je
xor
dec
mov
and
lock
xchg
add
sub
lret
adc
add
add
das
fldt
sub
lods
xor
jne
clc
sub
je
push
mov
rcr
fs
fsts
dec
pop
add
xor
jl
je
fdivrs
pop
xchg
lret
or
ffree
les
insl
ret
jecxz
out
icebp
adc
xchg
pop
fstps
cmc
or
pop
popf
orl
jmp
inc
sub
jb
aas
push
mov
pusha
cmpsb
popf
out
imul
ja
outsl
leave
je
enter
cli
aas
dec
xchg
xchg
jnp
sbb
in
and
xor
pop
sub
fs
jp
mov
push
hlt
mov
xchg
add
and
adc
and
jne
aam
js
mov
mov
mov
xor
mov
orb
jp
fs
int
jl
add
pop
adc
pushf
or
mull
pop
loope
sub
adc
inc
sub
les
shll
or
sub
mov
fbstp
xor
nop
push
pop
xor
notl
sahf
lods
mov
icebp
mov
movsl
sub
es
outsl
insb
jg
sbb
jne
out
enter
aam
or
test
sahf
decl
dec
in
adc
loop
int3
or
push
add
inc
xchg
mov
repnz
xchg
and
out
lock
push
stc
popa
imul
push
xchg
leave
mov
lret
dec
cmp
xlat
aas
dec
stos
xchg
mov
cmp
xchg
or
incb
call
iret
dec
mov
popf
jge
test
outsb
addb
mov
daa
xor
lahf
dec
fisubl
std
enter
mov
cmp
dec
xchg
xor
andb
fcmovbe
xor
jecxz
cmp
dec
arpl
pop
es
dec
xor
sub
jge,pn
mov
mov
arpl
rcrb
sbb
mov
lahf
stos
fisttpll
jle
cmp
mov
and
popf
test
popf
xchg
push
lods
iret
jo
rcrl
fbstp
xlat
mov
cmp
enter
mov
adc
cmc
rcr
sub
xor
fldenv
push
jne
jg
fists
mov
inc
fsubr
or
add
xor
or
in
inc
xlat
push
inc
mov
mov
adc
test
es
mov
aaa
pop
mov
inc
push
int
xchg
es
cs
into
test
out
aad
mov
pop
int3
movsb
loope
or
sub
push
jb
outsl
jp
xchg
enter
rorl
dec
lcall
pop
add
decb
fstp
movsb
or
add
add
ret
fldcw
lret
sub
sbb
mov
mov
stc
cli
aam
adc
lods
adc
adc
sub
mov
mov
xchg
mov
call
mov
int3
mov
sub
push
inc
cmp
outsb
add
or
pop
aad
mov
daa
repnz
aas
dec
pushf
movsb
hlt
popa
lcall
xchg
adc
and
mov
sbb
xchg
add
decl
repz
jae
mov
mov
mov
sti
mov
cmp
jl
or
ret
sub
jo
mov
cmp
or
loopne
iret
xor
push
into
lcall
mov
mov
popf
or
test
jbe
add
lahf
div
sub
jo
in
lret
push
jne
in
cwtl
fidivrs
popf
jo
loope
ret
lret
push
movsl
cmp
lock
and
out
add
test
jp
cli
aad
push
push
dec
aam
pop
push
je
lods
loope
inc
cmpsb
arpl
lock
dec
jecxz
sub
cld
jne
lret
cs
leave
xlat
sbb
mov
xor
stos
mov
push
mov
out
or
add
nop
sub
cmc
pop
test
dec
pop
cmp
fwait
mov
xchg
mov
orl
or
pop
popf
ret
lret
mov
mov
leave
pop
cmpl
lcall
pop
jl
sub
imul
jp
pop
cmp
das
in
gs
dec
in
pop
xor
inc
mov
loop
xor
xor
lods
or
add
fsts
data16
adc
cwtl
gs
sub
mov
pop
movl
push
loope
sub
leave
push
lock
mov
mov
les
out
adc
insb
ss
dec
inc
sub
pop
or
ss
or
mov
pop
xor
pop
sbb
pop
mov
js
gs
les
jecxz
push
xchg
outsb
xlat
mov
fcmovu
mov
jle
mov
mov
in
movsl
pop
inc
lods
mov
dec
pop
repnz
pop
pop
aad
lret
add
sbb
mov
push
sub
jo
or
jns
pop
cld
cmp
fstpl
xchg
push
dec
in
jne
mov
add
or
pop
and
mov
mov
adc
sub
and
stos
mov
cmp
add
and
adc
mov
sub
pop
mov
outsb
mov
movsl
xchg
sub
adc
cltd
cmp
cmpsb
test
xchg
push
das
sti
ss
popf
mov
int3
daa
sub
rolb
sbb
add
mov
cmp
jns
and
repnz
mov
sbb
cmp
pop
add
mov
outsb
aaa
push
out
and
jb
add
ss
aaa
lahf
mov
jo
ret
jae
repz
mov
push
cmpsb
aaa
add
aam
mov
cltd
mov
mov
sub
xchg
aam
fdivl
push
adc
mov
ret
and
movb
mov
fmulp
push
daa
mov
or
insl
aaa
xor
and
test
and
mov
or
sub
call
add
mov
test
ret
add
test
inc
sbb
insl
xchg
jne
imul
daa
pushf
mov
ret
jg
aaa
mov
inc
xor
push
cmp
cmp
pop
cmp
xor
xchg
cmpl
and
add
push
ret
sti
les
adc
push
sbb
sbbl
jno
mov
orl
in
fstpt
mov
inc
aaa
nop
xchg
xchg
jge
mov
cmc
fs
jmp
ja
xchg
sub
pop
or
ret
out
mov
sub
fcomps
addr16
cmp
or
xchg
sub
sahf
push
mov
aas
lret
mov
jmp
add
jae
dec
adc
push
icebp
rolb
ds
rorb
dec
enter
aam
push
int
push
push
jne
lret
movsl
lahf
dec
pop
add
mov
jle
jp
jecxz
shl
lahf
xchg
sahf
fcos
mov
enter
mov
mov
sub
mov
int
sbb
dec
xor
cli
xor
xchg
pop
dec
push
shrd
pop
add
lods
mov
lock
add
and
or
or
mov
push
pop
pop
push
jae
jae
loope
test
pop
mov
dec
int
add
dec
cmp
push
jl
mov
sub
sub
or
inc
inc
fdivs
jne
data16
sub
pop
sbb
ror
pop
cmp
mov
in
pop
ljmp
scas
lods
push
data16
dec
clc
adc
adc
lea
scas
pop
aaa
xchg
mov
pop
outsl
mov
push
add
and
sub
cld
add
repnz
mov
adc
dec
sti
aad
xchg
aam
sub
pop
pop
ret
fs
int
push
frstor
mov
pop
jp
xchg
cmp
mov
faddl
mov
lcall
jbe
ret
in
js
pop
icebp
shlb
iret
fstl
adc
pusha
pop
rcl
mov
xor
imul
pop
sub
fildl
ret
sub
mov
xchg
cmp
insb
sub
fwait
xor
mov
pop
push
sarl
movsb
aaa
test
jg
rcrb
les
dec
mov
loope
fiadds
xlat
xchg
aad
insb
dec
inc
fidivrs
push
push
pushf
es
imul
mov
pop
incl
mov
inc
xchg
sub
lret
and
add
xor
lock
in
add
cmp
pop
jns
lods
int3
mov
or
pop
adc
inc
jge
cmpsb
jp
inc
cld
push
mov
lret
mov
mov
and
subl
popa
dec
lods
mov
fmuls
push
push
sbb
mov
add
cwtl
ret
ret
aad
rcr
sub
sbb
mov
stos
cmp
je
lahf
jp
or
add
movsl
inc
fs
mov
mov
mov
test
mov
jnp
out
add
push
testb
fbld
clc
add
jne
ja
jmp
push
dec
cmp
in
ja
fimuls
push
mov
hlt
outsl
xchg
int3
leave
les
hlt
adc
xchg
outsl
jns
stos
inc
add
lods
xchg
in
mov
test
aas
jb
inc
sbb
mov
add
std
imul
cmp
hlt
push
shlb
call
dec
fwait
mov
dec
pop
and
jne
push
popf
or
fmuls
inc
ficoms
adc
push
or
cmc
aad
xor
scas
imul
sbb
lret
icebp
in
lcall
push
sub
je
jp
pop
jle
or
lods
iret
test
jmp
test
mov
repnz
jo
enter
mov
adc
adc
jle
movsl
insb
sbb
mov
lret
adc
push
sub
sub
fs
push
loopne
cmp
cld
gs
mov
adc
pushf
xchg
sub
test
push
in
mov
add
shl
out
mov
xor
add
and
cmp
add
shrl
pop
mov
sub
nop
or
dec
lods
push
xor
add
into
xchg
push
ljmp
add
xor
sbb
sub
int
inc
push
ret
hlt
imul
das
hlt
push
push
lea
imul
aad
adc
pop
push
push
icebp
ja
mov
sub
xchg
sub
ret
sub
xlat
rcrb
fisubrs
cmp
clc
push
mov
inc
jne
pushf
mov
dec
add
cmc
xchg
push
repz
push
subb
sbb
idiv
cmp
xor
pushf
cmp
or
repz
out
inc
cmp
popf
data16
jge
mov
mov
orl
and
rcl
outsl
jne
shl
or
add
outsb
int3
mov
jle
nop
xlat
pop
sbb
repz
cmpsb
mov
out
and
inc
es
mov
inc
mov
push
gs
cmp
sub
mov
jmp
rcl
jbe
cwtl
mov
fsubl
jmp
cmp
jne
xor
mov
jbe
ror
mov
push
aam
rcll
sarb
adc
xchg
xor
add
adc
call
hlt
xchg
cmp
lret
mov
or
dec
jnp
jbe
and
xor
cli
jecxz
into
or
bound
movsl
stos
js
xor
lods
mov
shll
loopne
aaa
cmpsl
xchg
nop
push
mov
inc
xchg
mov
sub
add
hlt
les
jae
cmp
stc
ja
das
test
cwtl
lock
jge
bound
idivl
inc
lods
jbe
enter
mov
inc
clc
xchg
push
adc
pop
push
add
push
lock
or
ljmp
icebp
adc
aam
fsubrs
es
pushl
subb
pop
test
mov
or
add
xor
or
in
push
mov
je,pt
lods
or
jp
mov
cmpb
cwtl
mov
jl
cmp
cmc
lods
shll
aam
jne
mov
sti
ret
mov
ret
shl
in
sub
mov
stc
cmp
adc
arpl
orb
repz
fdivl
cmc
bound
enter
jge
repnz
mov
xor
repnz
add
sub
aam
jb
inc
je
lcall
mov
cmc
into
mov
adc
roll
adc
jg
mov
mov
sbb
scas
jbe
xchg
insl
jb
cmc
xor
sub
cmp
jg
mov
pop
jne
xchg
cltd
adc
sub
leave
mov
xor
aas
jbe
xor
mov
cmpsb
pop
lods
sbb
adc
cmp
xchg
jl
sub
stos
jnp
pop
addl
int3
add
mov
divl
mov
cmp
xor
dec
out
sub
cmp
sbb
int3
cmp
or
adc
jo
add
nop
sub
xor
cmp
xor
mov
mov
sub
movsb
test
sarl
push
jne
sbb
dec
sub
cmp
jo
adc
pop
bound
add
dec
rcrl
sub
fs
jge
cmp
or
lods
sbb
and
push
sbb
cmp
lret
ds
cltd
push
fstps
into
xchg
cld
sub
rcr
in
loopne
xor
xchg
int3
sub
mov
ror
js
xchg
inc
fstpt
pusha
cmp
movsl
popa
jg
jp
jmp
sub
test
lock
incl
sbb
xchg
adc
sub
cmp
or
add
adc
jne
or
int3
shll
repz
or
cmpsb
sub
out
mov
dec
nop
sub
imul
daa
stos
stos
in
ret
incb
mov
inc
jl
ja
into
jl
mov
sub
jmp
push
pop
rolb
lods
outsl
cs
xor
testb
bound
in
add
gs
je
lret
movsl
push
inc
ficomps
imulb
bound
xchg
aam
divl
outsb
push
sub
or
add
cmp
scas
push
xchg
shr
mov
mov
in
int
mov
lcall
rorb
mov
popf
sbb
in
iret
insl
lret
xchg
jecxz
mov
leave
les
mov
loopne
xor
test
fs
xchg
hlt
xchg
ja
and
lods
jae
les
sub
push
and
rol
jl
leave
ss
sub
gs
ljmp
cmp
dec
test
test
mov
jge
adc
jne
inc
mov
add
adc
push
push
test
sub
jg
orb
shlb
push
xchg
das
xchg
movsl
push
mov
mov
xor
add
pop
cld
test
out
fiadds
enter
out
fld
in
leave
cmp
hlt
pop
int3
pushf
loope
lret
bnd
mov
push
sbb
xor
push
ja
push
jae
xchg
cmp
sub
push
pop
and
sbb
lods
out
and
daa
loop
push
call
cmpsl
pop
test
fildll
mov
mov
pushf
dec
or
pushf
addr16
ret
cs
call
les
loope
orl
test
sub
cmp
pop
stc
cmp
dec
or
pop
and
push
dec
lahf
jecxz
int3
enter
std
pcmpeqw
fidivs
sub
movsb
mov
ja
adc
sub
or
push
int
jl
mov
mov
lods
add
out
loope
sub
push
lcall
sti
fmull
jl
adc
sub
es
sbb
aaa
cmp
lock
int
lods
add
in
push
push
sub
stos
adc
lock
push
out
into
mov
loopne
sub
sti
in
push
mov
cltd
pop
test
aam
fdiv
sub
lahf
loopne
dec
sbb
mov
aaa
mov
pop
fstl
push
out
mov
sbbb
mov
stos
pop
xchg
mov
mov
popf
je
xlat
jae
test
add
leave
ja
xchg
or
or
call
and
xor
jnp
out
std
adc
jle
xchg
and
adc
fidivrl
inc
subb
shl
dec
sub
mov
dec
test
cmc
mov
push
mov
inc
xchg
loopne
sub
imul
adc
mov
pusha
xor
fmulp
mov
ffree
inc
out
insl
enter
mov
xchg
dec
mov
rcrl
pushf
data16
mov
cwtl
lods
mov
aad
repnz
les
hlt
or
mov
lock
insb
arpl
int
pop
into
call
sub
push
adcb
mov
and
mov
xor
push
push
add
in
add
mov
mov
mov
sbb
fidivl
push
push
pop
mov
pop
mov
movb
xor
sbb
mov
mov
pushf
adc
popf
jae
mov
mov
or
jns
xchg
dec
or
pushf
dec
mov
mov
test
imul
sub
fstpl
add
ss
faddl
dec
sarl
xor
or
push
adc
xchg
push
push
and
push
mov
test
icebp
lods
sbb
xor
adc
push
lcall
and
lret
addr16
adc
fstl
mov
xor
aam
fistpll
shl
je
push
cltd
loopne
push
dec
mov
sbb
fisubrl
adc
out
aam
fs
in
jb
sahf
out
or
test
mov
jle
jbe
fldl2t
pcmpgtd
into
or
inc
lods
rcl
cmp
adc
add
sub
push
mov
subl
std
sahf
js
leave
sbb
leave
cmp
sub
test
cli
icebp
jge
out
insl
and
cmp
fs
stc
cmp
dec
mov
sub
xor
and
add
adc
jp
push
xchg
jae
push
or
push
mov
fisubrl
cwtl
fcoml
icebp
cmc
jp
in
loopne
daa
xchg
loop
jbe
jae
call
dec
mov
bound
mov
cmpsl
xorb
subb
loopne
xor
idivb
mov
je
add
iret
jg
aaa
sub
rcrl
insb
mov
sub
hlt
or
and
test
in
xchg
xor
ret
sbb
dec
jg
jb
jo
hlt
jns
insb
or
jns
cltd
mov
push
shlb
sbb
cwtl
jo
adc
adc
cmp
push
outsl
sbb
shrb
insb
pop
add
mov
mov
repnz
push
icebp
mov
nop
les
ljmp
mov
jns
fsts
lret
cmp
mov
push
mov
aam
sub
movsb
fists
mov
ret
xchg
adc
out
sbb
pop
mov
xchg
rcl
mov
in
mov
adc
fimull
clc
out
clc
jmp
xor
insb
mov
aad
in
lcall
fcoml
rcrl
loop
sbb
jb
cmp
jnp
mov
cld
jg
int3
sbb
out
lods
cmc
sub
test
enter
and
xor
add
cmp
cmp
cld
mov
pop
mov
and
xchg
push
lret
lock
fdivl
outsl
sarb
cmp
sti
aad
and
push
ret
xchg
repnz
shl
add
lods
gs
cmp
leave
hlt
scas
in
xchg
lea
das
push
cmp
inc
add
lcall
int
shl
xchg
je
popf
cmp
push
addr16
nop
push
bound
clc
jo
xchg
popf
add
imul
push
into
sub
outsb
dec
lods
ret
loope
cmp
pop
push
xchg
cmp
out
inc
outsl
sub
lods
jnp
add
je
add
dec
fbstp
ljmp
sbb
fwait
xor
xorl
adc
xchg
in
adc
ss
je
lods
or
in
adc
faddp
scas
aam
lock
out
cld
xchg
jecxz
add
aad
xchg
add
xor
add
jne
outsb
lods
rcr
xor
sar
nop
mov
inc
sub
add
icebp
mov
cmp
mov
push
les
and
xchg
dec
adc
sub
inc
adc
mov
or
adc
inc
ficomps
xchg
xchg
out
jbe
jnp
dec
or
inc
xlat
fsts
in
int
or
je
lret
out
aam
lods
fs
jb
push
rcrb
leave
dec
sub
dec
jbe
enter
ds
mov
out
je
xor
pushf
frstpm(287
aas
idivb
sbb
pop
hlt
les
stc
push
xor
lea
sbb
push
aam
in
xchg
lcall
into
push
add
fwait
movsl
nop
sahf
mov
lret
cmpsb
lods
lret
imul
stos
adc
fwait
push
adc
test
and
cmp
or
mov
xor
out
push
enter
push
push
out
shlb
jae
pop
gs
sbb
je
movsb
adc
cmc
push
mov
gs
test
jne
push
sub
enter
sbb
adc
mov
mov
add
sub
mov
out
outsb
mov
jns
lret
popa
cmpsl
call
adc
mov
sbb
xor
sti
in
push
jl
rcl
jp
syscall
push
sub
adc
lea
aam
mov
fsubl
jecxz
cltd
add
pop
adc
or
cwtl
mov
push
shrb
xchg
into
add
push
or
sub
popa
xor
adc
jne
or
adc
push
das
mov
mov
scas
pop
cmp
in
and
push
leave
mov
mov
clc
pushf
dec
jne
jl
imul
adc
or
movsb
xchg
mov
xchg
jmp
add
mov
ss
mov
test
or
je
push
mov
add
in
jae
insl
xlat
fs
dec
lea
rcll
add
xchg
pop
jl
inc
repz
push
jo
sbbl
sarb
lret
loop
js
push
xchg
or
and
cwtl
repnz
xchg
mov
clc
sbb
jne
js
sub
mov
pop
or
mov
ret
fmuls
add
push
aad
decl
sub
mov
lahf
sar
mov
fimuls
test
jecxz
jmp
sahf
gs
sub
mov
cli
inc
pop
cmp
and
jl
sbb
xchg
out
mov
mov
jmp
lea
outsb
jg
add
fstpl
jbe
movntps
jmp
cmp
icebp
les
sbb
popf
mov
dec
addb
lds
cmp
das
mov
xor
scas
mov
jno
sahf
fnsave
cwtl
add
int3
dec
dec
inc
xchg
mov
push
mov
push
or
in
cmp
adc
xchg
pop
fadd
mov
fdivr
cld
mov
outsb
adc
cmp
cwtl
cmp
jae
call
add
mov
adc
mov
cmp
into
jne
repz
cmp
sbb
or
push
ret
rorb
imul
sbb
add
loope
test
out
sarl
or
cwtl
cmp
jge
mov
or
xchg
sbb
xor
fsubrl
ja
add
push
xlat
out
sahf
fs
sbbb
lea
pusha
jl
cld
or
inc
sbb
xor
lods
repnz
ljmp
inc
sar
sbb
xchg
movsl
test
jl
int3
sbb
xor
sub
cwtl
ljmp
pop
ret
fwait
pop
call
sbb
loopne
mov
sub
rcll
dec
sub
or
sub
getsec
jae
rorl
fmuls
or
mov
adc
and
rcrb
shlb
sub
mov
xchg
ret
or
xor
inc
ret
out
dec
pusha
nop
sub
lret
popa
mov
inc
jge
out
mov
sub
fdivrs
lods
push
shr
scas
jg
cmpsb
int3
and
enter
aam
jbe
xchg
push
push
pop
jbe
xorb
ljmp
mov
pop
hlt
lods
out
xchg
ret
jbe
cmpsb
aaa
cs
mov
xchg
loopne
push
inc
or
jbe
fnsave
nop
sbbl
fs
cmpsb
pop
test
neg
add
repnz
stos
lods
nopl
popf
cwtl
xor
movsl
jmp
out
mov
or
push
cmpsl
inc
add
xor
mov
push
mov
fldenv
and
jle
stos
sub
sarb
mov
sub
add
call
imul
js
xchg
or
cmp
out
cmp
les
mov
mov
mov
aas
mov
mov
sbb
sub
or
mov
ds
outsb
xchg
loopne
insl
mov
or
jg
shrl
addr16
adc
mull
mov
mov
dec
rorl
mov
lret
aas
add
or
test
fcomip
aam
adc
add
fldcw
xchg
inc
arpl
loop
or
jno
push
pop
nop
and
aad
cs
testb
pop
pop
ss
push
fwait
cmp
lahf
hlt
test
orb
lcall
cmp
sub
dec
mov
sahf
add
sbb
and
gs
sub
outsl
adc
aad
xchg
or
pusha
and
test
and
adc
sub
imul
call
xchg
adc
les
add
movb
stos
inc
les
inc
ret
mov
ss
leave
and
dec
add
mov
clc
test
fidivs
cmpl
test
in
cmp
sbb
xchg
ljmp
xchg
imul
mov
cld
les
inc
mov
lds
lret
cmp
aas
mov
pop
adcl
cmp
ret
adc
ret
sbb
jae
jmp
inc
sbb
sub
pop
inc
jns
dec
xor
xchg
jnp
fwait
les
and
dec
adc
mov
iret
mov
in
cmc
sbb
jns
sbb
sbb
pop
scas
call
ret
jge
sub
test
mov
out
add
aas
cmp
xchg
lods
jmp
out
pop
fwait
pop
pushf
sub
adcl
mov
iret
divl
dec
rcll
adc
lahf
adc
leave
adc
hlt
sub
pop
xchg
xor
mov
xor
mov
icebp
test
popa
shrb
jnp
fcmovnbe
aam
mov
sbb
jo
sbb
sbb
sbb
push
pushf
push
test
push
mov
fnsave
cwtl
leave
les
mov
inc
pop
aam
sti
cmp
sub
in
sub
popf
pusha
xchg
lock
ja
rorl
sub
push
out
jbe
loop
or
jo
lahf
pop
lret
cltd
mov
sarl
addr16
cld
and
jne
sub
jno
imulb
push
xchg
mov
stc
dec
xor
adc
cmp
test
mov
mov
in
xor
cmc
pop
sub
fwait
xor
je
push
and
in
movsl
xor
mov
add
lds
lea
std
cs
das
jmp
lahf
rorb
pop
pop
push
adc
lea
or
mov
clc
in
cmp
cmpsb
adc
jecxz
cmp
push
xchg
jge
or
pop
jo
xor
scas
pop
mov
push
push
sub
fs
rcr
repnz
mov
jno
or
sub
les
aam
daa
xchg
inc
sub
pop
cmp
mov
ret
in
movsl
lret
and
out
mov
xor
into
fidivrs
inc
adc
jl
mov
sub
inc
mov
movsb
jno
xor
inc
rcrl
clc
ljmp
adc
lock
cmc
mov
lret
add
cmpsb
xor
ret
loopne
cwtl
cmp
dec
bound
adc
add
lods
add
cmp
xor
popa
fcoml
enter
mov
ds
jle
mov
mov
xchg
pop
in
inc
dec
push
in
ret
cwtl
fisubrl
lret
jne
ficomps
adc
jns
int
xchg
stos
sub
enter
pop
cmpb
sub
pop
mov
inc
loop
push
lahf
sbb
push
push
js
cmc
push
das
mov
xchg
imul
clc
cmp
imul
pushf
push
sub
stos
ud0
les
xchg
adc
adc
lds
shlb
sub
fcomps
push
mov
in
jle
sub
std
out
pop
ret
inc
dec
mov
push
jmp
xor
pushf
push
subb
and
popf
repz
int3
cmp
sbb
or
ss
ficoms
mov
test
or
adc
int3
and
lods
out
fcoml
leave
mov
mov
or
leave
cli
sub
loop
call
outsb
cmp
dec
dec
clc
ret
jp
xlat
int
xor
xor
movsl
add
xlat
lea
insb
xor
popf
adc
in
cwtl
and
mov
xor
adc
dec
test
inc
pop
pop
jae
movsb
pop
stc
sub
in
jg
jge
iret
gs
scas
rolb
or
jge
cmp
lcall
pop
sub
test
cmpsb
clc
and
mov
sbb
mov
or
xor
jnp
push
and
add
popf
sahf
inc
mov
inc
push
adc
cmpl
push
lcall
outsb
inc
in
lcall
repnz
les
or
dec
filds
sub
stc
sub
mov
aad
ret
push
mov
sub
and
inc
mul
pop
push
mov
sbb
and
xorb
dec
jmp
cmp
ret
lahf
lahf
fisubrl
mov
and
push
jae
cwtl
jne
lcall
push
pop
mov
addr16
cmp
sub
or
cli
frstor
lods
fcmovnb
sbb
sub
cmp
decl
scas
mov
lods
insb
xchg
arpl
shl
push
inc
cmp
lds
and
clc
out
mov
xor
jb
popf
aad
mov
rcr
xor
cmp
nop
lret
mov
sbb
aad
in
jl
cmp
ljmp
xchg
lea
add
dec
aaa
push
mov
and
in
aam
cmp
jl
mov
lcall
aas
and
test
aad
movsb
sub
ret
hlt
sbb
add
mov
pop
bound
jns
sbb
sti
inc
inc
ret
cmp
daa
fimull
sbb
or
in
leave
into
adc
mov
xchg
dec
lods
dec
xor
xor
xchg
xor
push
inc
mov
dec
roll
sub
out
sbbb
sbb
cmpsl
mov
mov
xlat
sub
xchg
scas
bound
and
popa
adc
jl
cmp
aaa
je
pushf
ds
push
xchg
lock
lods
mov
lods
cltd
cmpsl
jge
dec
mov
and
imulb
jl
movsb
jg
fdiv
push
mov
jbe
data16
mov
dec
mov
pop
fdivr
add
or
into
mov
fidivrs
xor
mov
jbe
addr16
ret
cltd
mov
clc
lahf
xor
clts
adcb
aas
and
xchg
dec
repz
add
fstpl
hlt
jmp
jne
mov
mov
cmpb
xor
add
sub
adc
jae
mov
ss
arpl
mov
lret
pop
mov
xor
sub
add
mov
or
mov
fimull
mov
daa
inc
testb
mov
out
mov
add
mull
sub
ss
mov
das
inc
lcall
idiv
subl
jbe
lock
das
push
out
jmp
push
add
pop
xchg
sbb
bound
lcall
sti
clc
repnz
xchg
stos
cmp
add
mov
cld
int3
dec
sub
pushf
aas
dec
xchg
sub
jnp
sub
jns
shll
subb
mov
jp
movsl
fnstsw
jle
in
adc
xlat
add
xlat
jmp
lahf
sahf
sub
mov
call
cmp
xor
and
fsubrs
jp
inc
or
adc
cmp
xchg
or
popf
xchg
fisttps
or
mov
push
or
or
ret
sbb
xor
sbb
lea
out
out
daa
hlt
test
cmpsl
cmp
jo
inc
aam
es
aaa
xor
mov
lcall
pop
cmp
test
out
jmp
cli
lock
ret
mov
or
push
test
ror
das
mov
xchg
call
js
jp
subl
std
xchg
xchg
shl
mov
andl
sbbl
sub
and
xchg
stc
test
lods
adc
lret
aaa
fisubl
pop
sub
jbe
sbb
or
adc
cmp
sub
sub
fs
imul
les
adc
mov
test
subb
jecxz
mov
iret
xor
rcrl
ds
shlb
jp
rorb
mov
lahf
out
pop
lret
mov
call
insl
fidivrl
jg
into
clc
mov
fcoml
xchg
jl
adc
movsb
shlb
jnp
add
mov
jle
fdivrp
or
test
cmpsb
hlt
or
scas
adc
cmpb
popf
or
sbb
pinsrw
cmc
lds
adc
out
sub
xchg
cld
insb
xor
and
dec
fdiv
daa
mov
enter
leave
mov
jne
aas
ds
ret
test
pop
jecxz
repnz
or
cmp
loope
mov
stos
xor
sub
or
popf
mov
fsubrp
xor
mov
popa
or
movsb
adc
dec
xchg
les
sub
or
out
or
je
call
pop
dec
pop
jbe
sbb
add
cmp
adc
sbb
push
mov
adc
in
sub
dec
orl
jns
jae
sub
xor
mov
aam
movsb
and
jg
push
jl
outsl
push
mov
mov
addr16
or
mov
movsl
in
das
out
push
adc
lods
mov
add
pop
into
in
jle
lret
mov
mov
aad
xchg
imul
adc
sub
push
xchg
inc
leave
xlat
in
nop
cmp
andl
xchg
add
mov
test
fiaddl
xchg
sbbl
in
fldcw
push
xor
dec
cld
mov
xor
inc
inc
enter
les
and
pop
pop
shll
roll
lods
mov
pop
jnp
or
sub
xor
js
cli
mov
push
jo
test
cmc
push
subb
or
sub
jae
ret
add
mov
data16
jg
add
jl
push
push
out
mov
add
mov
mov
cs
fiadds
push
or
adc
sub
or
pop
sbb
jae
lods
aad
rorl
pop
std
mov
sahf
or
cli
dec
cmpsl
pop
pop
sub
fwait
add
mov
out
cld
or
add
and
mov
lahf
iret
or
lods
test
mov
and
cmp
mov
pop
test
jmp
inc
das
add
mov
scas
sbb
addr16
loopne
push
aaa
pop
push
or
cmp
ja
inc
push
shr
xchg
mov
add
jecxz
clc
inc
aad
imul
mov
xor
shlb
cmp
lods
loop
xor
jecxz
ret
cmp
call
or
jl
push
sub
and
ja
mov
xchg
push
adc
cmp
jecxz
add
imul
jge
xchg
adc
test
sub
cli
repz
stos
adc
or
add
cmp
or
adcl
mov
shr
sub
xor
mov
sbb
lret
pop
jne
dec
mov
xchg
inc
int
mov
push
rcl
cmp
mov
sbb
movsb
jns
test
loop
and
decl
imul
das
rclb
jne
mul
dec
or
sbb
aad
sahf
out
jle
les
imul
rolb
clc
add
iret
jg
fsubrl
popf
mov
inc
es
jmp
lods
addr16
cs
mov
mov
mov
dec
hlt
pop
sub
xchg
in
mov
jne
mov
sub
popf
insl
adc
lods
insl
lods
inc
add
jge
ficomps
addr16
mov
cmp
out
je
sarl
fdivrs
fucomi
cmpsb
dec
mov
sti
xorb
sbb
inc
mov
push
pop
dec
xor
pushf
mov
fisubrl
in
mov
sub
add
nop
xchg
in
sub
hlt
fistpl
push
mov
in
rcrl
lret
sbb
enter
pop
dec
cwtl
mov
add
dec
scas
clc
scas
jno
push
mov
sub
sub
imul
outsb
mov
lret
enter
int
aam
ret
dec
andb
sub
mov
adc
aas
and
out
inc
hlt
push
rorb
adc
dec
je
xchg
outsl
pop
out
add
leave
jmp
mov
mov
arpl
push
fmul
or
mov
sbb
dec
stos
pusha
push
sub
mov
adc
aaa
imul
sub
adc
xor
enter
shlb
rorl
aam
shl
or
iret
pop
fadd
push
ret
jno
sub
mov
rclb
hlt
testb
xor
fs
adc
mov
or
xchg
out
mov
stos
mov
lret
add
xchg
pushf
lock
ljmp
adc
jge
scas
pop
push
cmp
stc
addr16
sub
dec
or
mov
clc
xor
cs
cs
push
imul
adc
in
mov
jae
mov
dec
xchg
lock
test
cltd
imul
out
sub
mov
xlat
ret
or
sub
mov
and
or
xchg
pop
inc
adc
fisttpl
sub
mov
push
cmp
push
enter
add
mov
inc
mov
sarb
push
pop
rorb
repnz
mov
testb
ds
push
ret
push
push
xchg
dec
sub
mov
and
pushf
fisttpll
xchg
pop
stos
push
rclb
lods
lcall
adc
dec
sbb
jo
jnp
pop
dec
xlat
stos
aad
lods
lcall
xchg
jo
mov
push
or
mov
add
icebp
sarb
mov
cwtl
je
dec
inc
insl
jno
xchg
inc
aam
xchg
xchg
pop
nop
lahf
das
pusha
push
pop
add
shlb
popf
in
jbe
jp
or
pop
mov
sub
out
repnz
jns
imul
push
adc
mov
add
mov
push
xor
pop
lret
loope
cwtl
and
aad
mov
movsl
mov
insb
movsb
jae
add
mov
xor
jecxz
cli
fmulp
mov
xchg
leave
ss
jo
lcall
or
repnz
dec
sbb
or
pushf
push
xlat
test
ja
arpl
bound
fld
xchg
add
xor
xlat
in
scas
jns
mov
xchg
fs
lods
das
mov
mov
jl
test
sub
cld
out
popa
jno
mov
cmp
or
pop
out
aas
pop
sub
loop
push
sub
aam
stos
in
jae
and
mov
jecxz
xchg
fucomip
xlat
sbb
cmpsb
imul
idivl
pop
push
or
shlb
int3
mov
out
cmp
hlt
inc
lods
outsb
test
jns
in
inc
nop
test
mov
daa
scas
aam
test
pushf
mov
ss
add
lahf
jo
jnp
mov
rolb
push
dec
add
test
push
add
jle
push
call
cmpsl
cmpb
and
pop
adc
cltd
mov
bnd
pop
cmp
in
or
xchg
clc
jns
daa
xor
sbb
jle
scas
in
mov
push
ss
insl
mov
jns
pop
leave
mov
xor
fbstp
jp
leave
andl
dec
inc
nop
lock
mov
pop
decl
and
xchg
sub
add
dec
push
and
xor
pop
sub
insb
jl
xchg
mov
inc
fcmovu
ja
push
or
scas
std
andb
push
or
incb
sub
jne
inc
inc
push
sub
mov
shl
sub
out
mov
stc
push
bound
imul
loopne
pop
mov
andb
outsb
dec
jne
and
mov
sbb
add
adc
push
in
push
sub
lods
lahf
pushf
in
xchg
sub
jg
aas
fidivs
mov
ds
sub
test
mov
mov
in
imul
addb
aam
outsb
into
mov
nop
aad
mov
lcall
pop
lock
inc
cmp
cltd
lret
repz
fnstenv
stos
jne
scas
dec
jne
sub
xacquire
insb
loope
xlat
mov
int3
outsl
je
insb
test
ss
scas
in
add
push
out
rolb
dec
sbbl
cltd
outsl
adc
lods
or
jbe
out
xor
cwtl
jns
inc
iret
in
lods
aaa
ds
out
enter
mov
lds
nop
das
aam
sub
cmp
std
ss
popa
or
dec
lods
movsb
inc
fs
push
pop
jb
sbb
add
xchg
clc
push
inc
sbb
mov
insb
mov
xchg
push
mov
mov
jecxz
sbb
jbe
mov
mov
inc
and
and
cmp
ret
aaa
cmpsl
dec
jg
sar
loop
pop
fstp
fwait
xchg
push
test
push
xchg
nop
pop
adc
fwait
out
adc
and
sahf
pusha
into
int3
dec
push
js
popf
xor
xor
sbb
lret
mov
or
or
xorl
ss
mov
jo
or
mov
jle
out
adc
sub
sbb
push
fcmovbe
pop
leave
fsubr
push
push
adc
or
into
fidivrs
mov
dec
loop
fmul
daa
repz
or
jbe
jp
outsl
testl
xlat
call
jo
pushf
mov
mov
jecxz
mov
test
cmpl
sbb
mov
sbb
pop
dec
lods
add
jno
sbb
out
clc
aas
cmpsb
ds
imul
ja
pop
roll
push
repnz
mov
aam
push
mov
lods
xor
add
jb
jbe
mov
iret
test
adc
pop
lret
mov
fldl
push
inc
cmp
xor
pop
ss
cltd
ret
mov
mov
stos
stos
xor
popa
xchg
fmull
aas
push
or
pop
inc
in
pop
les
fiadds
dec
adc
sbb
ficoml
cmp
jmp
es
push
xlat
loope
pop
in
jl
pop
or
jae
xchg
pushf
cmp
inc
pusha
test
lret
sbb
je
faddl
adc
sub
jmp
pop
in
in
cwtl
xor
popf
pop
mov
daa
mov
add
imul
pop
pusha
mov
lret
shlb
push
divl
or
sub
xchg
push
loope
push
dec
sub
pushf
mov
mov
in
cmpsl
xchg
out
xchg
mov
cmp
lods
pop
roll
outsl
inc
pop
testl
or
jbe
lock
sub
jle
mov
lods
and
push
xchg
test
ja
out
jle
sub
or
fmulp
push
lds
sbb
orl
aam
aad
adc
xor
flds
dec
xorb
sti
adc
popf
push
push
and
test
rcrl
inc
scas
dec
lret
add
out
mov
js
cmp
cmp
rol
jbe
mov
mov
push
sub
sub
cmp
lods
and
sti
fiadds
inc
dec
pop
in
fwait
jmp
push
popf
dec
andb
mov
scas
ftst
mov
inc
mov
pop
jne
sarb
or
shr
aam
cmp
jne
fidivl
cwtl
ret
pop
rcrl
mov
pop
inc
lret
xchg
sub
pop
loopne
addr16
sub
xchg
xor
sti
lods
mov
jl
sub
stc
rorb
pandn
jge
pop
mov
jnp
sub
dec
xchg
lods
dec
repnz
xlat
pop
call
stc
fstl
into
jnp
xchg
cwtl
jbe
cmpsl
cmp
out
and
mov
imul
push
sbb
push
dec
inc
xor
push
rclb
sarb
cmp
jno
daa
mov
in
cmpsl
and
test
push
jnp
lea
cmpsb
jno
fists
sub
movsb
stos
in
sahf
movb
fsts
push
xchg
adcb
shlb
in
jno
pop
in
jnp
lock
or
fs
fildll
xor
lods
popa
hlt
daa
out
cmp
repz
jp
sbb
stos
in
enter
jns
sub
mov
jge
mov
je
and
mov
es
jne
jge
push
push
notl
divb
mov
in
push
enter
add
xor
cmp
ds
rorb
ret
cmp
push
or
sahf
push
mov
xor
sub
fstsw
sub
aad
jl
push
aaa
or
or
cmp
push
jne
jg
imul
jbe
scas
repnz
insb
cmp
adc
in
cmp
lods
in
xchg
mov
xor
cld
fs
lret
dec
es
xchg
xchg
fistpll
adc
sub
xchg
stos
or
inc
inc
arpl
jne
and
aad
mov
popf
push
and
int3
das
sub
jge
xchg
jnp
outsb
mov
fsubrl
xchg
pushf
lods
sbb
shrb
iret
push
icebp
cmp
ret
jae
mov
jnp
push
hlt
cmp
pop
dec
push
je
leave
ret
sbb
cmp
daa
and
jns
cmp
imul
mov
imul
sbb
movsl
repnz
mov
data16
xchg
je
iret
sbb
imull
pop
lret
mov
push
lret
hlt
jecxz
in
push
incl
sbb
and
mov
call
ds
jp
jo
jecxz
sub
push
test
jl
movsb
out
xchg
fs
pop
sub
lahf
jmp
push
mov
jmp
fidivrs
arpl
jnp
xchg
jno
or
jbe
dec
inc
cmpsl
adc
stos
cs
inc
push
pusha
inc
shl
rcll
sbb
ds
add
movsl
cmp
int3
and
mov
dec
cmpsb
adc
jge
fcoml
or
out
xlat
jp
jne
dec
hlt
cmp
mov
iret
cld
cmp
add
enter
bound
mov
ja
xor
dec
mov
fucomi
xchg
dec
iret
xchg
jp
loope
fs
iret
movsb
mov
insl
out
in
test
lds
sub
sub
push
pop
out
mov
stos
and
mov
imul
and
cmc
xor
jbe
dec
aad
inc
adc
inc
mov
pop
adc
jbe
leave
rcrb
cmp
add
jmp
inc
pop
pop
inc
stos
aas
hlt
sbb
lds
xor
xchg
pop
add
mov
stos
rcl
pop
mov
fcmovne
nop
push
mov
ljmp
sub
xor
ja
mov
inc
push
sub
sub
data16
pop
cmp
sub
sbbl
icebp
push
cwtl
rorb
sbb
jbe
xchg
sarb
and
popa
adc
jmp
sub
sarl
cli
repz
add
xchg
xchg
aam
jne
in
shl
mov
iret
or
rcr
sbb
call
insl
push
jl
jo
in
movb
sbb
add
jmp
sbb
mov
fnstcw
push
aad
sti
adc
lahf
loope
mov
jge
dec
push
or
mov
and
in
sub
mov
popf
int3
adc
jne
adc
jnp
fsubrs
sbb
inc
cmpsl
xor
sub
ds
xchg
test
hlt
add
cwtl
xchg
sub
ljmp
outsb
mov
sub
inc
jo
insb
loope
mov
jp
int3
ret
lods
jns
push
jle
sbb
sbb
cmp
fs
cmp
dec
xchg
pop
ljmp
mov
add
push
daa
mov
cld
data16
aad
xorl
iret
sbb
inc
gs
xor
mov
cmpsb
inc
cmpl
in
int3
add
or
push
out
or
pop
sub
and
jle
cwtl
xor
cmp
and
jl
xor
aas
shlb
mov
daa
cmpsb
and
stos
sbb
fs
hlt
or
sub
and
inc
or
fdivrs
jl
stos
mov
pop
sti
sub
lret
insb
xchg
aas
pushf
jmp
addb
add
aas
add
push
addr16
mov
push
dec
fwait
mov
cmp
adcl
es
or
xor
lahf
jo
xor
mov
sub
fisttpll
add
sub
fmul
lock
pop
sub
and
adc
mov
add
mov
cmp
je
cwtl
jp
fs
std
inc
xchg
cmc
adc
push
sub
cmp
mov
cli
xor
bound
in
pop
jmp
pushf
scas
in
jo
jmp
jbe
sub
inc
subb
dec
mov
mov
push
incb
ret
loop
loope
lock
imul
in
sub
pop
int3
add
mov
or
or
inc
jb
xorl
sub
fisttpl
jl
clc
es
loop
or
xlat
cmpsb
ja
cltd
inc
push
dec
xor
sbb
ljmp
lds
sub
test
lcall
andb
scas
je
jmp
movb
and
inc
cmp
fsubr
pop
adcl
fidivs
es
xor
shr
and
lea
fmul
daa
xor
je
jl
jge
fimull
popf
pop
or
int3
push
sbb
ret
push
or
jae
mov
aad
cmp
aad
repnz
lods
and
aaa
add
pop
inc
hlt
lock
push
in
add
lret
or
jne
or
frstor
popa
pop
lods
cmp
les
test
jecxz
gs
adc
and
das
stc
iret
sub
or
sub
call
outsl
mov
adc
in
or
sbb
sub
mov
lret
sub
cli
shrb
cmc
adc
jno
addr16
push
cmpsb
mov
out
xor
icebp
push
daa
sbb
xchg
pop
pusha
loop
ja
adc
pop
jae
xor
std
mov
ret
mov
xor
ja
fstpt
mov
mov
or
jg
jge
push
pop
xor
shrb
xor
lahf
fsts
shl
and
jb
lret
testl
cmp
scas
xor
mov
mov
inc
mov
mov
sub
dec
aas
pop
lcall
xor
subl
xlat
push
aas
lods
nop
push
mov
mov
fiaddl
xchg
or
pop
xor
lds
repnz
out
aad
jo
adc
fistl
dec
clc
adc
fcmovb
xchg
test
mov
adc
mov
orb
xor
mov
int
jae
imul
jne
in
or
aam
out
neg
mov
and
push
iret
stc
leave
mul
xchg
push
xor
pop
lret
xor
jle
cmp
subb
xor
pop
out
imul
aas
xchg
xchg
mov
incl
inc
sub
xor
shll
cmp
lods
aam
xlat
daa
scas
fcoms
inc
mov
cmpsb
xchg
aas
je
mov
xor
popf
in
das
sbb
push
adc
rcl
and
std
cmc
push
xor
pop
xchg
stc
repz
ret
xor
repnz
loop
sbb
mov
push
mov
imul
mov
outsb
in
jae
stos
and
xchg
imul
xor
imul
loope
jmp
in
mov
push
decb
bswap
stc
test
push
ds
aam
mov
mov
out
jno
xor
rol
adc
movsl
icebp
cmpsl
inc
jbe
mov
push
mov
je
jns
sti
cs
or
lret
xor
out
xlat
or
sbb
mov
jg
sti
xor
aaa
fldcw
pop
xchg
nop
aas
lock
xor
out
into
outsl
out
loope
xor
rcl
aad
adc
add
repz
hlt
push
dec
jge
mov
sbb
ret
outsl
inc
xor
mov
jb
adc
sub
bound
pop
adc
push
xor
das
lcall
mov
push
xchg
and
push
inc
shlb
xor
mov
lock
cmpsb
pop
mov
xchg
dec
gs
cwtl
xor
repnz
mov
mov
xor
lcall
xor
fisubl
jp
jne
cmp
sbb
or
xor
sarb
push
imul
dec
sti
movsb
dec
xchg
fs
daa
mov
mov
test
jb
mov
pslld
addl
mov
insb
jge
fisubrl
mov
pusha
rcrb
or
mov
ss
xor
repz
jecxz
sbb
sbb
lahf
cmp
insb
or
push
pop
inc
std
mov
inc
jge
ficoml
cltd
clc
push
xor
imul
pop
inc
ret
pop
xor
lds
lods
rdmsr
sar
mov
je
roll
out
sub
int3
mov
adc
xchg
push
mov
mov
xor
test
fdivs
mov
pop
and
icebp
adc
push
fcmovb
sbb
pop
cmp
out
jb
cmpsb
cmpsl
pop
and
mov
jl
push
cmp
scas
aas
xor
and
mov
enter
pop
mov
gs
flds
daa
fucomi
out
xor
jg
cmp
and
sbb
pop
aas
inc
push
mov
cmp
sbb
xor
fsubrp
out
and
mov
lods
mov
fwait
adc
cmp
aas
les
sbb
xorb
push
sti
and
test
out
push
adc
js
pop
jo
aam
ljmp
rolb
arpl
les
lret
xor
bound
adc
xor
ljmp
sbb
xor
mov
out
fnstsw
mov
or
fs
push
push
xor
cmp
mov
xor
cmpsl
jle
fdivrs
jmp
repnz
popf
insb
nop
ds
je
inc
testb
inc
mov
leave
xor
test
xor
xchg
rorb
mov
mov
lods
inc
repnz
xchg
add
icebp
cmp
mov
xor
jns
pop
jg
cmpsb
fiaddl
int
out
adc
ficoml
sub
add
jmp
test
push
sub
je
jno
dec
ficompl
gs
es
or
sub
stc
test
and
in
mov
and
mov
xor
push
shl
or
es
xor
and
jbe
push
sub
inc
xor
lret
mov
leave
xor
mov
xchg
cmc
lahf
cli
fs
mov
hlt
push
pusha
mov
sbb
mov
mov
aaa
push
push
paddsw
mov
xchg
call
sub
jbe
outsl
xor
shl
xor
fucomip
adc
je
lahf
mov
pop
ljmp
subl
push
shrb
xor
pop
ljmp
test
into
xor
sbb
out
jecxz
dec
and
xchg
mov
cmpsl
xorl
pop
xor
jo,pn
adc
cmp
xor
sbb
xor
push
aaa
xor
in
outsl
mov
push
mov
sub
pop
push
aam
fs
adc
or
loope
cmp
pushf
or
adc
sbb
dec
inc
jnp
fsts
scas
pop
and
and
dec
and
mov
lods
mov
pusha
xchg
shll
xor
out
xchg
repz
inc
sub
addl
hlt
jbe
jno
inc
pop
mov
fadds
fidivl
xor
stos
push
mov
xor
fidivrs
xchg
mov
lods
ret
fwait
xor
push
sub
xor
mov
pop
imul
imul
int
imull
dec
jecxz
mov
aad
xchg
lods
lahf
xor
mov
fs
mov
pop
jae
cmpsb
jecxz
xor
jmp
fwait
dec
cs
imul
aas
sarb
and
add
push
inc
js
sahf
into
addl
loopne
lds
push
xor
cmp
out
and
mov
xchg
adc
dec
xlat
xor
sub
vpsubusw
cmp
js
std
dec
out
mov
ja
notl
fs
jb
xor
xor
pop
cld
shll
fsubrs
scas
dec
daa
or
mov
mov
repnz
je
js
in
jb
lcall
push
mov
xor
mov
adc
cmpsb
cli
imul
fcompl
iret
and
xchg
xor
pushf
jmp
fidivrs
test
fnstenv
das
adc
sub
push
icebp
xor
mov
pop
push
mov
xchg
aaa
mov
leave
sbb
jno
iret
mov
sub
pop
mov
jmp
inc
push
cmc
or
mov
ficompl
mov
int
mov
addr16
fistpll
jnp
fcmovnu
shll
lret
mov
mov
in
inc
cld
jl
sbb
and
push
push
dec
xorb
xor
pop
jg
sbb
jge
ds
adc
mov
out
dec
xor
sbb
xchg
or
jbe
xchg
ds
insl
cli
repnz
fldenv
xor
sub
fld
ficompl
jbe
into
mov
daa
sub
xor
mov
outsl
rclb
popa
iret
add
lock
cmpsb
cmc
enter
cmp
xchg
pop
popf
das
je
je
or
adc
adc
ja
fs
insb
fstpt
add
xchg
js
mov
xor
sub
hlt
and
jl
xor
add
fdivs
add
into
jle
jg
cwtl
mov
push
test
and
mov
cli
pop
stc
sbb
sti
push
push
inc
and
push
xor
in
cmp
mov
cmp
sub
inc
inc
movsb
out
cmpsb
xor
pop
dec
aad
lret
push
call
in
mov
inc
mov
pop
fwait
jae
movsb
iret
test
xor
stos
roll
lcall
je
xor
dec
inc
push
mov
out
or
xor
push
jge
fwait
insl
pushf
shlb
or
cs
or
inc
jle
push
mov
out
xor
cmp
sbb
shl
outsl
imul
xor
pop
in
mov
xor
pop
data16
jg
loopne
inc
mov
push
rol
sbb
cld
adc
xor
pop
cmpl
push
add
cmc
xor
dec
ret
ss
vpmulhw
nop
lcall
rcl
xor
xchg
cmc
cwtl
fcoml
mov
je
lods
shll
xor
ss
test
int
cmp
adc
push
mov
lea
push
push
cs
icebp
je
lods
push
pop
mov
xor
inc
pop
inc
push
xchg
or
xor
fsubs
jmp
adc
shrd
adc
sub
xor
jo
sahf
add
lcall
sub
adc
pop
sub
stc
jmp
rorl
loopw
std
movsb
js,pn
pop
xor
pop
scas
fcmovne
add
push
test
pop
dec
les
test
jecxz
xor
push
cmp
xor
in
mov
in
mov
xor
xor
add
cmp
mov
imul
iret
fidivs
cmp
movsb
push
xchg
xchg
pushf
xor
je
inc
cmpsb
pop
std
daa
add
lahf
loop
xchg
xor
add
xor
jle
lods
sbbb
js
lea
sub
scas
mov
fs
jp
xor
ret
das
insb
cmp
inc
xor
out
imul
outsl
jbe
orl
xchg
xor
adc
dec
cmp
mov
mov
mov
aas
bound
jl
mov
aad
clc
rcrb
dec
mov
jl
pop
xlat
xchg
sbb
mov
iretw
add
adcl
shl
jo
dec
push
fidivs
mov
pushf
mov
popa
push
clc
lcall
sti
cld
mov
sub
push
and
in
enter
mov
fcoml
xchg
scas
sbb
hlt
adc
cli
outsb
stc
mov
rcll
mov
xor
sbb
aam
push
sahf
mov
mov
adc
add
je
sbb
push
jo
cmpsb
dec
lahf
adc
xor
sub
subl
mov
dec
in
pop
adc
fwait
adc
and
mov
adc
cli
push
ficoml
or
ljmp
das
std
movsb
lret
dec
lcall
mov
xchg
push
xor
cmp
dec
mov
xor
into
clc
ret
in
adc
stc
popa
mov
loopne
lods
push
xchg
fs
adcl
mov
test
or
hlt
add
xor
cmp
imulb
sbb
sbb
mov
ret
lcall
xor
lods
sbb
mov
into
add
aam
pop
sti
out
push
sub
jbe
xchg
test
mov
xor
into
mov
push
xor
xor
ficompl
pop
xor
or
int
push
dec
or
xor
mov
enter
jg
out
xor
cltd
jns
dec
popa
push
cld
mov
pushf
lahf
push
ficompl
and
fnstcw
int
xchg
mov
fwait
push
dec
nop
pop
fmul
ret
xor
or
xor
dec
xor
mov
aad
sbb
in
out
ljmp
jae,pt
jecxz
adc
xor
xor
jno
xor
fdivrl
xlat
divb
into
imul
sti
pop
sbb
daa
xor
insl
out
push
push
lret
loopne
push
js
hlt
mov
es
or
xchg
xor
lods
jle
arpl
mov
adc
ds
test
xchg
mov
or
sbb
mov
dec
orl
pop
and
push
mov
mov
xor
push
movsl
popa
mov
add
aad
int
add
fwait
xor
push
mov
paddsw
mov
rorb
outsl
gs
xor
jp
out
xchg
xor
push
sub
mov
pop
push
cmpsl
xchg
jbe
in
push
or
andb
hlt
ja
pop
clc
jg
xchg
mov
jne
ret
lahf
fmull
sub
sub
dec
add
fisubl
cs
in
lds
cld
inc
imul
lret
mov
xchg
cmp
shrl
bswap
adc
mov
adc
mov
mov
sar
adc
gs
or
iret
cltd
out
pop
sbb
addr16
mov
and
cmp
test
sub
cmp
mov
ret
xchg
cmp
pushf
sub
and
jne
mov
jne
sub
cmc
dec
adc
inc
mov
int3
inc
test
test
push
cmp
notb
lods
out
addr16
pop
pop
sbb
rolb
mov
cmp
mov
push
and
mov
and
pop
repnz
aam
xorl
fimuls
mov
inc
js
adc
mov
xor
les
sbb
popa
clc
or
or
jp
jp
es
adc
mov
pop
xlat
fdivs
adc
leave
sub
out
stos
or
aam
sbb
add
mov
ja
daa
mov
xchg
xor
sahf
dec
push
mov
and
int
sub
push
mov
lahf
push
mov
or
mov
lds
setae
test
inc
push
out
xacquire
sbb
push
sbb
andl
leave
test
sub
outsb
ds
mov
sub
jecxz
ss
int3
mov
sti
and
fstl
aam
fmull
jmp
mov
push
jge
pop
sbb
lea
xchg
addb
fistl
fstpl
fs
test
mov
sub
pop
cmp
scas
lock
cmp
push
repnz
push
cmp
sub
hlt
mov
or
sbb
push
add
call
adc
insl
sub
inc
and
inc
jg
lret
jg
fwait
or
push
mov
nop
dec
mov
mov
sub
mov
xor
dec
sbb
lods
xchg
add
fcomps
adc
xor
or
aam
stc
push
dec
rcr
test
leave
hlt
cmpsl
push
fsubrs
dec
les
js
adc
divl
lcall
cmp
push
push
and
out
xchg
jb
push
cmpb
jne
leave
fimull
insb
or
cltd
fcomps
lock
rcrb
ret
mov
jp
pushf
fidivl
jg
int3
lods
add
addr16
xor
cmp
sbb
mov
cwtl
mov
lahf
dec
xchg
push
testb
rolb
inc
js
mov
and
loopne
fdivl
push
aad
or
and
cmpsb
data16
jae
out
dec
shl
rcl
repnz
popf
inc
mov
pop
fstpt
cmp
les
mov
bound
inc
sbb
repz
xchg
add
into
add
lar
mov
sub
pop
inc
repz
jae
lods
sbb
aad
cli
mulb
hlt
xor
dec
cmp
rolb
xorb
push
aam
mov
and
jae
mov
xchg
lret
xchg
mov
cmpsl
jl
xor
cmp
mov
push
or
fmull
mov
jp
daa
sar
jge
das
push
sahf
add
or
ds
pop
imul
in
dec
adc
lret
cmp
pop
cmp
or
mov
xchg
add
out
int
mov
push
adc
jmp
mov
rcrb
fdivrs
sub
stc
push
xor
test
and
push
add
xchg
or
cmp
jb
xchg
outsb
or
fistps
cmp
and
in
jb
inc
push
adc
and
shrl
daa
popa
inc
data16
sub
fs
rcrb
leave
jl
pop
pop
or
or
push
mov
inc
dec
and
sub
mov
and
out
es
out
loopne
in
inc
sahf
push
insb
add
xchg
push
jns
out
iret
pop
add
adc
or
mov
enter
fiaddl
enter
sub
test
push
insb
pop
and
in
xchg
call
pop
mov
test
pop
or
push
cmpl
js
jno
ret
cmp
pop
mov
xor
adc
and
jecxz
push
int
xchg
imul
fdivs
shl
test
or
dec
sbb
popf
mov
mov
adc
or
dec
leave
jne
fsubs
in
fdivl
lret
out
int3
popa
cs
inc
les
jo
sub
inc
adc
aam
jp
fcmovnu
int
pop
jge
aas
fnsave
mov
pop
and
push
mov
fmul
add
xchg
cmpb
mov
repz
cwtl
in
adc
insb
rcll
scas
shll
jl
pop
sub
stc
push
idivb
pop
cltd
movsl
sbbl
out
inc
mov
cmp
in
dec
mov
cmpb
sarb
push
in
ret
insb
push
dec
gs
mov
scas
xor
sbb
pop
imul
jecxz
push
insl
cltd
adc
popa
jno
test
mov
or
jbe
dec
adc
test
imul
out
enter
adc
out
sub
pop
nop
xorb
mov
lret
mov
mov
lret
mov
out
mov
mov
stos
pop
js
jmp
imul
loope
pop
mov
jo
jbe
aas
ljmp
int3
push
dec
cs
jae
aam
divl
mov
push
pop
test
shrl
in
mov
mov
xchg
jnp
and
push
gs
sub
jns
pushf
adc
mov
inc
outsl
ret
add
pop
and
pop
xchg
mov
and
or
cmp
inc
call
mov
lods
in
fucom
push
mov
and
dec
das
add
xlat
jnp
mov
das
mov
push
jo
xchg
bound
test
and
and
aad
cltd
sub
jp
xchg
mov
lock
pop
mov
in
pop
icebp
mov
and
or
mov
loopne
jae
fadds
aam
pop
inc
xchg
fstl
fsubr
push
pop
test
sub
icebp
sub
int3
xchg
inc
les
and
into
adc
jae
mov
or
push
push
push
shll
dec
dec
sarb
jb
lds
jae
or
in
popf
iret
mov
popf
imul
jbe
xchg
mov
popa
cltd
mov
push
test
mov
inc
mov
pop
push
lahf
shr
out
mov
insl
or
adc
or
jmp
mov
add
lahf
inc
xor
mov
hlt
cmp
and
sahf
jg
xor
mov
sub
in
in
xchg
push
xchg
icebp
jl
add
adc
mov
mov
add
and
out
idivb
fisubrl
lds
paddusb
lcall
out
or
sub
enter
jbe
mov
dec
or
dec
adc
pop
fldt
dec
sub
pop
sbb
ja
aam
push
cmp
out
test
dec
ljmp
lods
ja
rorb
aam
fsts
adc
jae
dec
lret
or
and
push
ret
jg
ret
jmp
daa
pop
cmp
mov
inc
mov
stc
pop
cs
out
scas
push
push
fdivl
fcoms
sarl
xor
pop
loop
mov
sub
ret
dec
jb
lock
add
pavgb
loope
test
xor
xorl
and
mul
fwait
xchg
push
push
pop
jmp
sub
inc
xor
xor
repz
push
in
mov
cmpsb
jp
push
mov
mov
sub
aas
test
clc
pushf
out
test
insl
lahf
dec
cmp
jnp
xchg
lds
bound
mov
fldl
sub
pop
pop
cld
les
andb
pushl
xor
inc
out
dec
cwtl
sub
adc
sub
or
xor
xor
lock
or
cmc
xor
icebp
add
daa
jle
cltd
mov
loopne
push
into
outsb
adc
xor
outsl
inc
add
jae
aam
insl
xor
pop
lret
pop
mov
jecxz
out
int3
adc
ss
sbb
lret
mov
jne
jb
incl
aas
rcrl
in
sub
jnp
aam
roll
jg
jns
add
loop
in
aad
fstps
pusha
xchg
iret
movups
call
sbbb
add
cmpsb
and
xchg
ss
cmpb
or
mov
rcrb
cmpsb
fdivrl
rol
in
mov
test
sub
cmp
fdiv
adc
subb
mov
xor
add
mov
mov
aaa
push
xor
jp
pop
sub
or
dec
stc
mov
push
test
dec
ss
mov
fimull
or
cld
inc
mov
xchg
xor
in
popa
mov
mov
fcoms
adc
pop
lret
in
and
test
pop
pop
xchg
ficoml
pop
or
mov
jnp
aam
loopne
or
aaa
sbb
test
outsl
shl
iret
lods
push
add
pop
out
mov
jg
pop
sub
int3
in
mov
mov
outsb
xor
cmc
cs
stc
testb
into
and
fsubrs
loop
cld
mov
fcoms
dec
into
inc
test
je
mov
cmp
jle
pop
in
lea
push
push
loopne
rolb
rcll
push
out
xor
lret
push
jne
icebp
adc
and
xor
cmp
xchg
xchg
push
inc
sub
adc
sbb
cmpsb
pop
js
popa
inc
fs
sub
jmp
test
repz
sahf
roll
or
jbe
inc
cmp
fbld
nop
cmp
sti
mov
lock
int
lea
push
cmp
sub
push
xchg
in
jb
std
sbb
clc
jp
dec
sub
ficoml
push
xorl
sbb
push
les
cltd
mov
xor
iret
icebp
int3
shll
enter
push
hlt
sti
ds
fiaddl
mov
cwtl
jl
sub
bound
xor
sub
faddp
sub
repz
mov
mov
dec
insb
mov
ja
adc
outsl
fidivs
aas
imul
mov
in
lret
sub
fwait
ret
cltd
push
call
mov
es
aad
mov
mov
jg
jg
imul
sub
lret
cs
push
jl
les
shl
xor
sub
out
xchg
movsb
gs
sub
shl
push
cmp
push
in
fiaddl
iret
out
setno
sub
dec
mov
and
sub
cmpsl
nop
idivb
push
pusha
mov
pop
or
jl
pop
imul
popf
dec
xor
sub
and
out
aaa
mov
ja
jne
sub
or
test
in
push
or
push
fdivp
mov
movb
inc
xchg
shr
mov
pushf
cmpsb
lods
or
jmp
mov
push
es
in
in
xchg
ljmp
mov
sub
dec
xlat
mov
push
mov
ss
sbb
jl
popa
loopne
mov
cwtl
jbe
sbb
js
xor
xchg
pop
arpl
push
jo
fidivs
adc
clc
leave
pop
add
fldcw
sub
enter
mov
push
push
mov
lods
pop
push
ljmp
xchg
in
sahf
sub
xlat
pop
mov
lcall
cmpsb
mov
rcll
mov
sub
lcall
out
xchg
mov
sbb
lret
lcall
aas
fsubrs
inc
xor
jp
xchg
repz
sub
mov
das
aas
push
pop
lret
xor
dec
fnstcw
pop
cmpsb
hlt
notb
cmp
dec
mov
stos
addr16
enter
push
gs
xor
mov
inc
cmp
xor
cmp
fists
jge
push
lea
cmpsl
movsl
dec
inc
sub
jno
ret
jae
jo
sbb
ja
sti
gs
inc
dec
adc
add
jl
mov
cmp
push
jmp
pop
test
xor
mulb
jno
adc
adc
mull
test
cs
xor
and
adc
xor
dec
aam
test
loope
out
inc
mov
mov
jae
jnp
add
loopne
jmp
sbb
or
cmp
sbb
mov
xor
test
lods
fisttpl
test
sub
sub
adc
jne
push
into
in
mov
out
hlt
mov
xorb
loopne
movsl
pop
gs
push
clc
mull
cmp
xor
pop
and
push
xorb
cwtl
inc
dec
jne
daa
nop
dec
mov
jle
mov
out
ficoml
lds
lret
sub
pop
push
shrb
lds
xor
push
lret
jb
repnz
sub
les
divb
outsb
popf
in
imul
dec
jb
and
arpl
add
xchg
and
out
xor
adc
pop
divb
shlb
pop
mov
inc
add
xchg
test
fistl
or
es
loop
inc
or
pop
fistl
and
bound
ds
jnp
mov
mov
push
out
cmp
mov
cli
mov
add
mov
shl
cltd
das
loope
sbb
jg
fs
and
add
sub
add
pop
lods
jnp
sub
pushf
cmpsl
jg
repnz
or
jne
jb
cmc
jg
sub
push
xchg
divb
adc
lods
or
xor
mov
jne
nop
add
andl
sub
aad
lds
dec
icebp
mov
cmp
in
fbstp
sub
mov
xlat
lret
negl
or
jg
jb
sub
pop
xchg
and
jbe
shrb
or
jg
rcr
xorl
sub
shll
pop
sbb
je
and
mov
and
xor
sbb
cmp
stos
ret
and
ds
aam
sub
adc
ret
in
xor
xor
mov
pop
xchg
enter
mov
aaa
jbe
mov
jbe
cltd
sub
jbe
mov
mov
jge
stos
mov
aam
inc
addl
mov
xchg
adc
je
mov
dec
cs
mov
movsb
mov
ja
mov
jg
jl
clc
fidivrl
in
arpl
in
xchg
mulb
je
push
lret
fmul
lock
mov
pop
cmp
push
sub
cmp
testb
loop
in
pop
out
movsb
mov
mov
in
cmp
mov
cwtl
jp
test
hlt
push
clc
sub
mov
sub
cmp
jecxz
inc
push
sbb
addr16
enter
mov
pop
mov
sub
cli
xchg
in
fldenv
sarb
mov
pushl
divl
cmp
aas
shll
rcrl
fstl
out
jp
pushf
xor
je
lods
mov
dec
stc
imul
test
bound
leave
dec
inc
aaa
sub
xchg
push
mov
mov
pop
icebp
or
add
mov
cmp
mov
add
fwait
dec
lock
popf
inc
push
pusha
insl
or
jbe
mov
int
mov
jae
adc
adc
push
jmp
shlb
push
jp
hlt
clc
ljmp
ds
sub
dec
stc
pop
sub
cmp
pop
in
hlt
jg
sar
fisttpll
add
addl
loop
adc
lock
add
adc
rcll
sub
es
mov
out
aaa
pusha
push
xchg
adc
test
ds
pop
adc
mov
stos
push
dec
shrb
int3
push
add
sub
test
int3
lea
sub
sbbl
mov
arpl
inc
and
and
or
addr16
mov
loope
mov
adc
jl
lahf
pop
insl
enter
inc
push
ret
push
jbe
fdivrs
imul
inc
push
aas
adc
cmp
cld
mov
jle
add
adcb
or
popf
mov
aad
rcl
jns
daa
mov
mov
mov
fnsave
ret
xchg
rcrb
loopne
or
outsl
mov
jbe
pop
jno
shlb
lret
sbb
movsb
sub
mov
fwait
dec
xlat
add
adc
sahf
jge
adcl
push
js
jb
and
mov
adc
pop
mov
lds
dec
push
xchg
mov
pushf
cmp
mov
mov
ja
xchg
cmp
add
gs
clc
lcall
rorb
mov
mov
mov
or
adc
fldt
aaa
pushf
xor
or
imul
in
cli
jl
aad
mov
jnp
push
lds
add
es
lret
pusha
xor
pop
ss
shll
cwtl
gs
or
adc
test
sbb
mov
adc
jg
or
xor
xchg
lret
ret
ret
test
test
addr16
lret
inc
mov
rcrb
xchg
xchg
pop
hlt
push
and
hlt
int3
dec
and
lock
dec
mov
dec
in
iret
in
xor
test
fsts
mov
aad
int3
lods
mov
ret
pusha
inc
mov
mov
cmp
je
push
xchg
or
outsb
push
shlb
popf
mov
mov
sub
jbe
push
in
pop
xchg
out
daa
loopne
jge
rclb
ss
out
ret
aad
pushf
sbb
sbb
pop
sbb
test
jb
add
aam
dec
enter
cmp
mov
bound
jae
push
pusha
aad
bound
jp
aad
pop
add
push
pop
cs
mov
aam
push
xor
rol
xorb
adc
and
add
rep
xor
stos
movsb
in
mov
push
and
jns
pop
lahf
mov
rcrb
push
sub
in
pop
call
pop
mov
mov
popa
push
in
lcall
jmp
imul
adcl
mov
xor
pop
mov
lcall
ret
pop
jge
push
sahf
xchg
fldenv
lock
sbb
pop
jno
lock
and
or
sbb
mov
lret
cmp
and
adc
ret
sub
ss
mov
enter
rolb
inc
shlb
or
in
or
stc
cmp
push
cmc
mov
jnp
ss
inc
sbb
hlt
je
fcomps
xchg
sahf
shrl
rclb
fs
pop
mov
cltd
pushl
xlat
sbb
jge
mov
or
mov
cmp
and
push
mov
mov
ds
shrb
pop
and
aad
cld
addb
leave
and
ret
gs
in
in
lods
mulb
pop
scas
jnp
test
rcll
jbe
out
mov
imul
aam
lods
push
or
aam
mov
push
dec
and
sub
cmp
lds
rorl
ror
lea
xor
mov
in
mov
push
cs
mov
sub
sahf
pop
ret
aas
aad
fwait
outsb
sbbl
sbb
test
js
movsb
pop
cwtl
test
inc
add
or
push
sub
lods
cmp
push
and
loopne
jnp
nop
es
sbb
push
iret
out
cs
shlb
xchg
jge
and
mov
or
cld
pushf
lock
mov
aam
in
jo
mov
sub
adc
push
jae
cmp
push
aad
jnp
adc
xchg
cmp
movsl
fcoml
sub
jno
scas
inc
out
dec
xchg
xor
lods
push
push
push
in
sbb
cmpsl
mov
jecxz
nop
imul
xor
sub
pop
clc
xchg
jge
pop
or
dec
xchg
xor
jecxz
push
shll
sub
jae
xor
leave
xor
dec
push
jo
addr16
test
cltd
ds
rcrl
push
ret
xor
lods
mov
rcll
adc
push
mov
xchg
call
lcall
pop
jbe
mov
gs
cmc
mov
pop
push
cwtl
mov
xor
push
and
fdivs
std
sbb
jp
push
rolb
lods
mov
mov
jg
jo
fidivrl
sub
add
test
jl
fidivl
repnz
aaa
call
ficomps
add
xor
mov
push
xor
and
movsl
les
jns
inc
sub
fsts
aaa
cmp
lahf
scas
sbb
les
xchg
push
imul
cmp
mov
rclb
aam
mov
mov
rorb
mov
sub
jae
jl
push
shlb
mov
in
mov
jge
add
xor
sbb
out
push
les
and
jmp
fimull
mov
ds
imul
adc
lcall
cmp
jne
push
jmp
in
faddl
sbb
mov
xchg
ret
xchg
test
xchg
sub
and
in
fwait
popf
int3
mov
xchg
xorb
aam
jl
and
and
cmp
imul
mov
push
call
scas
dec
hlt
imul
xor
jge
aad
cmpsb
sub
xor
adc
dec
ret
aad
xor
jl
jbe
jecxz
dec
mov
js
jl
xchg
sub
rcl
shll
jmp
hlt
arpl
inc
cmp
lea
inc
out
fdivrl
sarl
pause
sub
pop
or
rol
xor
popa
jb
adc
scas
jbe
iret
cmp
mov
addr16
dec
adc
inc
mov
push
sub
aaa
xchg
andb
adc
dec
sub
cwtl
shrb
std
jge
add
aam
jb
adc
ja
adc
out
jae
daa
or
mov
aaa
cltd
mov
leave
xchg
sub
rcrb
out
cli
repnz
and
ljmp
cmp
aaa
mov
lods
popf
mov
xorl
cld
sub
dec
jle
mov
in
jg
outsl
vmread
sub
xlat
mov
sub
rclb
add
mov
mov
sbb
inc
call
xchg
fldl
lret
sahf
aam
dec
jbe
mov
sbb
adc
and
fisttpl
gs
out
sub
gs
mov
fcmovbe
adc
nop
or
shrb
sub
jle
mov
ljmp
rolb
cmp
pop
jo
sub
dec
sbb
and
cwtl
pop
out
je
adc
sub
mov
scas
and
es
movb
jb
mov
nop
adc
lea
jl
fdivrs
clc
and
mov
and
lods
pop
pop
adc
cmc
cmp
adc
movsb
int
aad
or
xchg
sbb
outsb
dec
gs
push
mov
cmp
dec
lahf
cmp
mov
dec
lods
or
cmp
xor
dec
outsl
mov
cmp
aad
js
lret
push
cmp
jo
xor
lret
add
cmpb
inc
mov
xchg
andb
or
sbb
shrl
sub
mov
pushf
xchg
add
aas
test
fsubl
out
mov
add
fnstcw
repnz
sub
lea
push
mov
mov
aad
xchg
or
sbb
test
scas
lret
sub
sub
inc
scas
fmuls
pop
dec
pop
lahf
fldpi
cli
cwtl
pusha
into
out
push
adc
sub
enter
sub
aam
mov
sub
or
cwtl
sub
mov
mov
push
push
imul
lea
mov
push
jecxz
adc
xlat
cvttps2pi
aas
stos
xchg
mov
movb
jbe
inc
enter
lahf
mov
adc
jne
lock
sbb
in
insb
ret
add
jae
repnz
xchg
movsb
jno
fadds
lcall
repnz
loopne
jae
insl
fwait
shrb
insl
cmp
sahf
xchg
sub
and
movsb
jne
adcb
xor
mov
jnp
shl
in
out
adc
mov
xchg
repz
dec
push
lock
insb
mov
push
orl
xchg
in
cs
into
push
out
mov
jl
or
sub
add
fisubrs
test
cli
push
in
mov
fadds
loope
jne
out
in
pusha
test
add
mov
xchg
pop
lock
out
dec
rorl
add
in
rorb
jge
mov
cmp
rolb
or
jmp
std
dec
mov
sbb
adc
hlt
or
cmp
inc
sarb
test
lods
and
sub
jle
sarl
fildll
mov
sbb
mov
ljmp
pushf
test
popf
cmpsb
out
call
pop
pop
inc
adc
push
pop
push
add
cmp
dec
icebp
outsl
fcompl
aam
ds
fcoms
test
sub
cmp
cmovno
lahf
sbb
mov
jb
test
push
xorb
lcall
mov
mov
cmpsl
xor
lahf
add
call
daa
aad
iret
in
cmp
jmp
loop,pn
in
xor
or
clc
push
and
inc
mov
mov
and
sub
lret
pop
pop
inc
ss
mov
adc
mov
sub
sti
ss
mov
dec
in
mov
stos
push
hlt
adc
xor
sub
jl
dec
push
fs
and
xchg
je
jno
pop
cmp
int3
dec
add
lods
mov
mov
and
divb
jnp
xchg
imul
shll
call
movsl
push
or
fnstenv
hlt
ret
cld
adc
arpl
mov
sub
lret
sti
jbe
push
fistpl
inc
dec
int3
jg
test
xchg
xchg
mov
mov
add
movsb
in
push
mov
sub
and
fsub
pop
jne
push
ss
cmc
inc
mov
lods
in
popf
test
aas
sub
jmp
pusha
test
cltd
lcall
ljmp
clc
adc
mov
dec
insb
pop
or
js
lret
into
jne
cmp
inc
sub
pushf
loopne
sub
xorl
ja
cltd
cld
sti
or
cs
clc
add
cli
sahf
push
xchg
cmpsb
pop
inc
inc
in
mov
cmp
sub
xor
lods
xchg
or
mov
test
inc
lcall
cmp
scas
movsl
cmpb
push
cmp
ret
and
jne
dec
and
push
ja
mov
jnp
cmp
cltd
loope
push
mov
adc
sub
mov
push
jne
sub
insb
loopne
or
or
pop
mov
lods
cld
push
insl
bound
jo
dec
sbb
mov
in
pop
mov
adc
enter
cwtl
mov
mov
push
repnz
repnz
ret
fstl
imul
jne
pop
into
sub
or
sub
imul
in
or
stos
in
add
ja
xchg
jns
dec
sub
xor
xchg
popf
ret
inc
add
movsl
push
mov
sub
sbb
xchg
dec
jg
push
iret
in
inc
leave
pop
lret
cltd
sbbl
popa
mov
xchg
mov
mov
icebp
gs
or
in
sub
xchg
xor
jge
movsl
cmp
cmp
sbb
adc
and
fmul
repz
mov
fistpl
stc
fisttpl
aam
aam
in
sub
xor
sub
lods
jae
xlat
add
daa
lret
aam
sub
fscale
xor
mov
add
in
ds
fiadds
and
dec
fsubrl
xor
add
leave
data16
std
outsl
mov
repz
aam
repnz
jns
mov
xchg
imul
enter
adc
adc
lods
add
adc
sub
ljmp
push
dec
mov
shlb
and
out
inc
add
add
sub
lret
push
imul
ret
push
fwait
push
inc
xchg
inc
mov
add
fisttpll
xchg
adc
jl
or
sub
mov
sti
stos
xlat
lock
jnp
xchg
cmp
or
pop
dec
js
insl
or
xchg
mov
cltd
add
cwtl
mov
add
xchg
jae
out
push
les
mov
stc
stos
mov
jnp
xchg
sbb
push
mov
mov
jg
inc
xor
sbb
mov
mov
iret
push
rorb
xor
cmp
pop
cmp
jl
xchg
iret
sub
loopne
cmp
sbb
adc
in
push
mov
lret
fstpl
mov
int3
mov
mov
dec
xor
sahf
xlat
sub
xorl
icebp
hlt
inc
int3
mov
mov
sarb
dec
add
hlt
inc
jp
mov
lods
dec
aam
pop
shrb
adc
sbb
fs
adc
add
and
in
adc
sub
rorl
xchg
push
xchg
cmc
outsb
push
ljmp
jle
adc
lods
or
xchg
negl
packsswb
xchg
hlt
fwait
ss
aad
lret
mov
mov
xor
sub
jecxz
xchg
test
xor
rcr
mov
add
rolb
scas
pop
cmp
scas
fs
adc
jb
cld
je
int3
lods
aad
sub
out
into
lods
push
leave
int3
mov
push
mov
out
add
cmp
test
or
aas
mov
sqrtps
inc
jbe
add
mov
cmp
xor
mov
imul
pop
xor
mov
out
adc
or
and
ret
jle
mov
rolb
mov
inc
jo
rolb
clc
jl
pop
movsb
repz
mov
and
inc
xchg
xchg
ss
cltd
push
sub
sub
fs
cld
lods
and
das
ja
clc
xor
cwtl
fnstcw
stc
js
or
sbb
loope
dec
pop
jnp
push
mov
mov
aaa
scas
inc
fistl
test
lret
mov
mov
sub
sahf
jb
sub
mov
inc
std
in
add
pusha
dec
pop
mov
cs
icebp
push
mov
movsl
sahf
es
xchg
sub
cli
mov
out
loopne
icebp
mov
inc
lods
pop
mov
rclb
enter
inc
push
out
aad
cmp
in
int
push
aam
sub
inc
add
icebp
sub
imul
cli
inc
xchg
mov
fidivl
mov
imul
pop
sbb
out
dec
imul
inc
add
add
cmpsb
add
arpl
xchg
mov
sub
repz
pop
jp
out
mov
lcall
out
sub
in
add
add
cmp
clc
or
aam
push
lret
fwait
pop
rclb
cmp
inc
cld
movsb
repnz
jge
fistl
sub
and
testl
dec
rorb
jns
sub
leave
je
sub
mov
pop
jl
daa
repz
adc
call
jp
mov
inc
push
rcrb
lret
mov
cmp
mov
push
xor
call
push
ja
dec
mov
add
xchg
out
fistpl
cld
rcrl
mov
and
or
cmpsb
jbe
pop
mov
fisubrs
psubb
imull
jnp
aam
mov
leave
dec
rcrb
sbb
jnp
and
push
ret
stos
cwtl
aam
aaa
sub
mov
pop
cmp
lds
ret
popa
mov
push
filds
and
sbb
cmp
mov
sbb
push
inc
cmp
adc
jl
inc
repz
mov
cmc
inc
or
or
ds
xor
and
cmp
mov
js
jne
mov
lods
test
fiaddl
lods
hlt
adc
add
cwtl
dec
stc
sbb
sub
scas
popa
mov
cmp
xchg
nop
or
pushf
dec
loopne
pushf
xchg
punpcklbw
shlb
push
or
lret
aam
sub
jecxz
dec
lods
cli
aaa
mov
pushf
sub
mov
mov
cltd
aad
xor
mov
sub
out
ret
lea
jecxz
sub
scas
imul
cmp
mov
mov
test
ret
push
test
adc
mov
adc
and
mov
mov
add
jmp
or
jp
dec
aam
adc
int3
cmp
mov
movsb
shll
xor
fcomip
out
shrb
jl
sub
inc
loop
fst
pop
enter
sahf
movsb
cmp
stc
dec
lods
add
add
aam
shr
mov
push
xchg
jmp
je
xchg
add
out
lahf
repz
add
cld
out
push
stos
lods
jle
jns
in
pushf
add
push
cmp
lods
ss
mov
fisubrs
aam
dec
push
sub
adc
pop
jno
or
lret
xchg
mov
fcmovnu
repz
les
movsl
enter
cmp
lock
lods
fisttps
cmp
pop
pop
out
mov
adc
aam
jl
inc
js
pop
test
lods
mov
mov
fstl
jge
adc
jge
push
hlt
xchg
jge
fnstenv
jp
inc
rclb
mov
fistl
ret
push
and
inc
sub
mov
push
fdivrs
add
pop
or
cwtl
imul
orl
pop
inc
in
call
xor
mov
push
or
jl
adc
jp
mov
fsubl
mov
push
push
and
das
jp
bound
test
mov
pushf
and
add
js
inc
sub
mov
and
push
push
pushf
mov
jbe
test
cmpsl
int3
ss
dec
cmp
sub
shrb
lods
pop
call
mov
sub
shlb
fwait
cmp
data16
sub
mov
mov
pop
inc
xchg
lea
fs
sub
cmpsb
dec
add
clc
and
adcl
repnz
roll
dec
pop
xor
xchg
pop
bound
mov
lret
mov
or
sub
bound
bound
push
pop
xor
inc
jo
in
sub
xlat
fcmovne
outsl
xor
xchg
mov
je
lods
arpl
pop
ds
loope
jne
fdiv
faddp
leave
push
adc
dec
pmaddwd
sti
ret
mov
adc
adc
dec
xor
pop
lods
mov
sub
mov
aad
mov
cmp
dec
dec
insl
add
popf
inc
fwait
ror
andl
adc
sbb
mov
or
pushf
shlb
sbb
dec
or
pop
xor
fdivs
xchg
scas
out
dec
je
ja
repnz
pop
jp
inc
xor
xchg
faddl
jne
xor
sub
lahf
push
jne
stc
add
idiv
gs
ret
lret
and
push
stos
repz
push
lods
push
mov
movsl
sbb
aam
into
fidivs
mov
aaa
mov
stos
sbb
in
pop
and
mov
and
jb
xchg
pop
aam
mov
and
cmp
sub
xor
or
insl
add
jmp
fsubs
insb
jae
jmp
lret
cmp
loope
mov
mov
cld
xchg
xor
mov
adc
push
sub
iret
cmp
dec
repnz
daa
int3
sbb
mov
out
inc
xlat
jmpw
rorl
pop
addb
mov
movsl
add
dec
jne
les
cmp
shlb
jecxz
and
mov
mov
aam
insb
sub
stos
ret
xchg
inc
mov
push
sub
jne
mov
push
fs
shr
adc
loope
cwtl
adc
test
sti
or
mov
lock
adc
mov
pop
mov
jle
sub
nop
les
adc
add
out
jl
test
sub
sbb
pop
mov
xchg
ss
std
lret
add
xor
in
push
stos
mov
sbb
push
mov
adc
jp
cmpsb
jae
test
lcall
mov
jbe
pop
int3
repz
imul
lret
mov
mov
out
pusha
loop
sbb
fwait
lods
dec
or
push
adc
adc
ret
jbe
inc
adc
sub
xchg
jl
in
mov
stc
push
mov
mov
lahf
add
push
xorl
cs
aaa
dec
and
lods
or
push
mov
sarb
test
std
gs
jbe
mov
orb
or
dec
mov
adc
out
ja
mov
mov
dec
out
mov
scas
dec
sub
lods
stc
sbb
mov
adc
je
ja
jno
call
xor
outsl
and
popl
dec
cld
xchg
cwtl
aas
cmp
stc
insb
aas
xchg
mov
lods
stc
pop
loope
xchg
jp
xchg
jbe
cmp
cwtl
addr16
lcall
cmc
imul
inc
test
shlb
mov
daa
lock
inc
sbb
cmpsb
fnsave
jbe
imul
out
ret
cmp
scas
ljmp
jmp
xchg
test
inc
sbb
fwait
xor
or
add
add
fldt
mov
pop
cmp
sub
or
call
add
xlat
stc
mov
mov
mov
dec
sub
lcall
dec
jl
outsb
pusha
jbe
xchg
bndstx
fdivl
js
popa
ficoml
ret
leave
cmp
add
or
xchg
aam
adc
push
fdivrs
sub
cmp
mov
sbb
pop
jb
jg
pop
mov
xlat
pop
mov
xor
sub
mov
ljmp
das
mov
mov
and
sbb
scas
in
cmp
test
jmp
xor
leave
push
scas
adc
enter
cwtl
lods
mov
jecxz
repnz
adc
je
sbb
inc
daa
adc
daa
leave
fisubrs
mov
mov
lret
aad
sbb
jne
ret
mov
pop
shlb
fwait
int3
sub
mov
repnz
or
adc
mov
mov
adcl
and
add
push
rclb
jb
lret
push
fldl
ret
jmp
rol
popa
stc
out
push
inc
in
push
xor
add
aam
rorb
push
in
movsb
xchg
in
mov
sbb
and
add
stc
adc
or
jl
adc
xchg
and
sbb
mov
xchg
outsl
test
or
add
pop
inc
das
hlt
jb
sub
je
mov
cmp
mov
fsubs
aam
nop
jbe
ds
jae
out
jge
call
or
shrl
adc
mov
and
mov
imul
cwtl
mov
push
and
cmp
js
in
mov
pop
push
add
or
dec
sbb
xor
fnstsw
cli
add
dec
xor
dec
pop
cltd
mov
pusha
push
adc
movsb
jns
xor
les
jge
test
pushf
fnstsw
cltd
scas
loop
cltd
inc
popf
push
push
int3
call
imul
sub
lods
xchg
hlt
xchg
push
into
iret
adc
das
out
xchg
and
xchg
test
xor
adc
insb
mov
fwait
add
std
xlat
aad
cmpl
add
mov
mov
mov
jp
mov
push
pop
loop
fnsave
iret
adc
jbe
jo
rclb
pop
sbb
sbb
inc
clc
scas
ror
mov
or
pop
jb
sub
and
jnp
clc
push
jno
lcall
mov
in
mov
subl
mov
cmpsb
out
mov
out
mov
faddp
mov
enter
add
sub
aas
or
repnz
xor
xchg
bound
out
xor
push
aas
pop
pshufw
sbb
in
fadds
mov
add
sub
jecxz
ret
dec
cmp
sub
adc
jns
int
xlat
test
ljmp
push
cmp
mov
in
pop
sub
add
add
mov
add
mov
aam
daa
adc
dec
jb
popa
shlb
jae
pop
mull
inc
mov
loopne
lahf
sbb
outsl
adc
xchg
fidivs
shl
and
sub
rclb
lods
sbb
nop
lret
or
subl
pop
adc
in
sub
mov
nop
ja
pushl
insb
hlt
loop
adcw
fidivrs
dec
and
ds
fldenv
cmpsl
mov
rorl
rcrb
sti
stc
xor
addr16
adc
mov
xchg
mov
sub
aam
add
pop
sub
ss
notb
push
in
jnp
imul
cmp
neg
jb
adc
lahf
stos
cmc
cmp
xchg
aad
fmul
les
int3
sbb
push
cmp
pop
shrl
mov
jmp
insb
sub
adc
add
add
lcall
out
mov
mov
decb
ss
fsubr
jl
xchg
pop
stc
addb
mov
adc
test
stos
xor
enter
aam
push
sub
dec
outsl
jbe
bound
pop
enter
add
ret
inc
loope
aad
cmpb
fs
imul
adc
ljmp
std
or
add
xchg
aas
sbb
or
dec
sub
lods
sbb
repnz
sub
fs
addr16
icebp
dec
add
push
clc
dec
dec
mov
adc
sub
push
lcall
sbb
xchg
andl
je
insb
inc
in
aam
das
loop
shlb
add
push
mov
fdivp
enter
fidivrl
adc
xorb
cld
jecxz,pn
sbb
adcl
in
fcompl
xchg
inc
and
mov
int3
adc
out
fdivp
data16
aas
cwtl
movsl
dec
and
pushl
aaa
cmp
xor
lods
cmp
imul
jb
fcoms
inc
ljmp
mov
inc
xor
xchg
imul
insb
xchg
lcall
insb
es
jne
mov
aad
aaa
push
pop
mov
xor
sub
pushf
data16
xchg
mov
mov
out
lock
cli
sub
push
sahf
lret
push
in
dec
sub
out
cmc
int3
repnz
add
pop
insb
cs
and
ficompl
in
mov
lea
adc
mov
mov
or
sbb
lds
xor
jecxz
out
or
mov
ss
or
cs
dec
aam
or
dec
shl
mov
aaa
pushf
jl
pop
aam
shrb
enter
push
cli
pop
shl
daa
dec
cmpb
je
and
xor
jmp
loopne
fucom
xor
cmp
lds
cmp
push
icebp
sbb
sbb
test
push
inc
pop
lea
gs
cmp
pop
push
sub
sub
mov
pop
sub
stos
dec
add
cmpsb
jle
jnp
mov
dec
jo
sahf
adc
inc
rcrb
sub
dec
adc
ss
adc
sbb
iret
or
adc
pop
aam
dec
fimuls
test
and
sub
inc
xor
ja
add
cli
dec
imulb
and
out
jb
sbb
and
imul
adc
and
push
sbbb
inc
push
sbb
andl
mov
ds
lret
pushw
sub
cltd
adc
xlat
or
sbb
leave
mov
out
push
ss
scas
or
sub
ljmp
and
repnz
and
aaa
scas
push
ja
fdivl
or
xchg
sub
jns
mov
mov
cld
sarl
cmpsb
xchg
push
js
fistl
dec
scas
jne
sub
add
dec
cld
popf
and
mov
mov
daa
incl
cld
les
pop
fs
icebp
add
xchg
and
daa
in
outsb
adc
pusha
adc
push
cmpsb
cli
add
mov
add
out
lods
jle
mov
shrb
sub
ja
inc
gs
incl
cmp
add
push
mov
clc
sub
outsl
mov
cwtl
mov
lods
add
inc
in
imul
push
fisubl
xchg
in
inc
cmp
jge
and
sub
into
mov
mov
inc
shl
xor
lods
dec
adc
mov
jp
pop
movsl
out
negl
push
pusha
add
pop
xchg
cld
out
adc
mov
xor
hlt
jbe
std
outsl
or
and
push
mov
mov
inc
dec
sbbb
adc
iret
mov
push
push
in
push
insl
or
xchg
daa
fisubrl
inc
sbb
mov
cmp
xor
adc
aad
mov
repz
mov
jno
and
mov
fwait
jne
inc
aam
test
push
jns
sahf
sub
sub
mov
fadds
and
or
jmp
jae
push
adc
cmc
out
xor
push
in
aam
pop
jmp
aaa
jge
std
mov
jb
pusha
cmp
cld
add
cmc
bsf
push
cmp
xchg
jp
mov
stos
loopne
xchg
loopne
cwtl
idivl
out
repnz
lcall
lods
jl
xchg
push
aas
out
sub
xchg
xor
mov
cmp
fnsave
xor
lock
inc
lret
and
bound
in
shrb
aas
imul
in
add
jae
mov
aam
sti
mov
push
into
jb
mov
mov
mov
sbb
dec
je
leave
xchg
mov
mov
lods
sbb
cmp
out
gs
out
gs
ficomps
daa
lahf
aas
jno
xchg
xchg
dec
or
imul
rcl
mov
dec
mov
mov
push
into
xchg
sbb
mov
lods
jno
call
cmpsl
lret
mov
mov
or
adc
rcrl
add
imul
add
je
and
scas
lcall
pop
in
cmp
outsl
mov
in
xor
call
in
sti
mov
mov
or
cmpsl
push
sbb
lar
or
pop
mov
adc
sbb
gs
nop
and
xchg
pop
add
dec
outsb
mov
int3
dec
repz
sbb
adc
xchg
decl
add
clc
xchg
nop
or
test
imul
lea
xchg
mov
adc
sbb
cmp
xor
fwait
hlt
mov
mov
cmp
ror
xor
outsl
hlt
or
jle
or
sbb
sbb
or
ror
cmp
repnz
jp
pushf
sbb
jg
mov
or
mov
push
sbb
add
inc
xor
mov
adc
or
insb
in
scas
sbb
cmpsb
imul
sti
jae
add
sub
les
jno
je
or
or
pop
rclb
sbb
jbe
adc
ror
shlb
cmp
and
inc
lahf
sbb
dec
lea
outsb
pusha
adc
test
sbb
xlat
inc
rolb
cmp
push
into
cltd
mov
mov
push
push
cmp
aaa
scas
hlt
ret
loop
cwtl
sbb
push
notl
adc
adc
mov
and
push
cmpsl
sub
push
sub
or
mov
add
lahf
pop
loop
sbb
cltd
lret
sbb
cmp
ljmp
retw
nop
sbb
mov
out
dec
mov
mov
loope
fmull
sub
les
shl
add
icebp
xchg
mov
ds
lods
jne
int3
leave
mov
ljmp
sti
add
xchg
mov
je
rorb
mov
repz
xor
jp
in
adc
cmp
je
mov
sti
scas
lahf
in
adcl
push
adc
hlt
std
jl
mov
mov
lret
js
add
cmp
repnz
in
pop
aaa
test
shr
bound
pop
or
mov
dec
lahf
push
fcompl
xchg
add
sti
or
repnz
lock
adcb
cltd
adc
mov
fisubrs
xor
das
sbbl
sub
adc
adc
mov
jae
mov
inc
push
mov
push
jge
out
dec
mov
shll
or
jl
bound
sbb
add
cmc
lcall
add
mov
aam
cld
ljmp
jecxz
adc
sbb
sub
popa
movsl
int3
int
mov
fdiv
mov
fisttpl
push
icebp
xor
ds
shlb
and
out
xor
mov
es
add
dec
repnz
adc
mov
enter
loop
mov
roll
mov
jb
and
mov
mov
cmc
ljmp
add
loopne
sbb
dec
mov
or
cmp
sbb
mov
loop
jb
repz
sbb
hlt
xchg
pop
cmp
xchg
jnp
push
int
cmpsl
repnz
mov
xor
xchg
lahf
hlt
jmp
push
aas
mov
in
hlt
lds
popf
cmc
mov
fsts
xchg
mov
pop
jnp
push
inc
mov
add
aad
jg
lret
inc
push
xchg
pop
call
test
mov
sbb
dec
in
mov
sbb
cmp
push
adc
sub
or
add
xor
xchg
push
mov
repz
push
outsb
jecxz
adc
outsb
sbb
mov
cwtl
pop
inc
lret
faddl
sbb
test
sub
xchg
lret
enter
sbb
dec
leave
in
add
sti
mov
mov
std
in
insl
pop
sbb
add
mov
push
sahf
out
fadds
push
mov
into
adc
push
call
rorl
or
sbb
ret
jmp
ret
adc
lock
adc
fwait
adc
and
jno
push
cltd
adc
mov
sub
sarb
xlat
pop
and
add
aam
loopne
dec
cmp
mov
sbb
mull
push
cmp
mov
mov
fnstsw
add
sub
lods
sub
jl
std
hlt
jle
mov
jb
bound
es
push
fimuls
shrl
cmp
or
mov
lret
into
mov
addr16
je
sub
mov
mov
lcall
pop
cmp
and
pop
mov
in
rorb
stos
sbb
add
cwtl
mov
cwtl
testb
dec
pop
loop
hlt
loope
mov
decl
add
divb
dec
or
sbb
adc
pushf
insb
stos
adc
mov
and
pop
xchg
mov
shrl
out
stos
pop
repz
data16
xor
aam
sbb
cmc
mov
mov
mov
mov
add
scas
or
out
mov
adc
lret
push
repnz
std
pushf
push
movups
adc
enter
cmp
lret
adc
jnp
dec
mov
sbb
repz
adc
std
int3
aam
add
or
add
mov
andl
jge
push
sbb
sbb
ja
call
pop
sub
imul
sarb
push
inc
fildl
int3
adc
adc
es
fnstenv
sub
push
mov
jbe
test
pushf
jnp
mov
popf
push
lods
ror
call
pusha
xor
ficoms
mov
xor
test
adc
adc
int3
sub
sahf
adc
scas
clc
push
push
fbld
call
xor
mov
sti
sub
adc
lret
push
nop
arpl
pop
add
test
lret
call
xor
xorb
hlt
push
sahf
cwtl
hlt
xchg
pop
outsl
mov
mov
xor
xlat
loopne
insl
or
mov
dec
mov
add
add
sub
fisubl
nop
ja
add
jge
jmp
mov
dec
int
jnp
mov
mov
ret
add
mov
ror
mov
jle
pop
adc
sbbb
fstl
mov
or
call
adc
nop
lock
adc
leave
stc
or
lock
xor
test
and
xor
mov
mov
filds
rclb
xchg
je
cmp
in
adc
imul
sub
add
mov
jns
push
dec
out
arpl
int3
and
cld
pushf
repnz
inc
incb
dec
adc
adc
add
cmp
or
push
lcall
add
inc
adc
insb
xchg
pop
or
repz
mov
popf
insl
add
pop
dec
pusha
mov
dec
mov
lahf
lret
in
mov
ss
adc
int3
cwtl
sbb
out
jbe
mov
add
xchg
sub
mov
arpl
xor
xor
jecxz
add
subb
adc
xchg
jmp
int3
or
add
jl
xchg
outsb
inc
cmp
imul
push
mov
mov
and
adc
loopne
mov
or
dec
int3
mov
jge
dec
leave
add
rcrl
popf
cmp
xor
test
les
mov
out
sbb
or
add
pop
push
dec
or
push
inc
movsb
add
mov
xchg
outsl
xor
dec
je
leave
aas
push
push
lret
adc
hlt
repz
je
hlt
mov
or
in
fbstp
bound
inc
out
add
cmpsl
imul
pop
mov
xchg
dec
xor
xchg
out
daa
jae
mov
icebp
int3
xor
dec
and
sti
and
sbb
adc
shl
sub
cmp
clflush
movsl
mov
mov
cwtl
rcr
push
fistl
jbe
pop
xchg
mov
adc
lcall
pop
mov
and
jecxz
or
sbb
jns
push
loope
sahf
or
rorb
pop
cmpsl
or
addr16
je
lock
in
scas
cltd
sbb
adc
pop
adc
lods
pop
outsb
inc
out
cmc
fsubr
cmp
lcall
pusha
test
loopne
mov
pop
je
jae
add
adc
je
mov
pushf
mov
es
sbb
pop
mov
push
push
repnz
mov
sahf
mov
push
adc
jno
pop
mov
xor
xlat
jg
clc
push
adc
nop
in
sbb
pop
or
mov
jnp
imul
orl
or
mov
or
add
test
mov
cmp
lcall
out
ficompl
lahf
mov
xchg
push
adc
ja
inc
cmpsl
push
xchg
or
mov
add
mov
jb
mov
lods
lock
hlt
popf
data16
mov
xor
call
adc
cs
sub
mov
add
rcll
xor
xor
push
and
in
push
movsb
in
sbbl
in
test
mov
dec
cmp
adc
ret
and
pushf
mov
add
sub
mov
jb
mov
out
mov
in
out
loopne
jecxz
and
in
xor
dec
lods
adc
pop
mov
xor
pop
cmpsb
into
nop
adc
outsl
jle
adc
fisubrl
aad
mov
mov
jg
pushf
xor
cmp
and
lret
insb
call
adc
or
repz
jb
mov
in
out
popf
lret
mov
xchg
push
lret
jnp
mov
push
pushf
rclb
adc
xor
ret
mov
push
sbb
xlat
test
lret
mov
add
jae
mov
ficoml
aad
lcall
xabort
rcrl
pop
test
aam
test
xchg
xor
or
pop
pushf
mov
push
stc
lret
jle
aam
loopne
adcb
ret
movsl
aad
or
mov
jmp
and
push
imul
sahf
mov
stc
adc
les
dec
dec
in
and
fidivrs
and
inc
sbb
mov
lcall
push
jp
aam
les
pop
adc
xchg
mov
mov
push
xor
pop
bound
sbb
fimuls
xchg
cmc
test
les
addr16
nop
mov
jb
aam
mov
ret
lret
sarl
or
cld
xchg
call
cmp
or
push
and
jne
xor
repnz
or
mov
jmp
mov
in
pop
test
insb
lea
int3
xor
out
insb
sub
shl
cmp
xchg
cmp
mov
popf
in
or
mov
inc
test
leave
cmp
jecxz
orb
aas
inc
iret
xor
inc
hlt
nop
push
fstpl
arpl
xchg
mov
pop
shlb
sub
imul
jecxz
jp
dec
ljmp
jae
inc
in
jecxz
sbb
add
mov
loopne
stc
divl
or
js
lods
ret
add
jne
js
idivb
jnp
into
jl
cs
xchg
jle
mov
les
cmp
fcom
rcrl
data16
xor
leave
ficompl
test
adc
xchg
in
xor
das
repz
add
jno
mov
adc
rolb
mov
dec
in
dec
sbb
in
sbb
or
sbb
imul
mov
jae
ljmp
xorl
inc
sbb
or
jmp
int3
xchg
ror
icebp
cld
jbe
mov
cmp
jae
mov
mov
popf
loope
std
or
mov
fs
and
cld
cmp
fcoms
ds
push
xchg
ss
pop
lcall
and
xor
icebp
fstl
aas
xor
jp
cmp
pop
fmull
ds
mov
mov
push
xchg
mov
adc
push
xchg
mov
sub
adc
mov
cmpsb
adc
adc
sbb
jne
pop
rcrb
movsl
add
pop
and
cmpb
add
or
inc
mov
push
insb
sar
or
cmp
addr16
outsl
xor
nop
or
popa
cmpsl
add
movsb
push
je
mov
loop
push
arpl
hlt
xlat
jecxz
adc
roll
inc
lret
lret
adc
xchg
cmp
push
mov
adc
sub
in
push
sbb
ret
pop
dec
jae
fst
mov
out
testb
aam
in
pusha
movsl
into
mov
int
inc
adc
adc
adc
adc
sub
push
push
cwtl
add
push
add
les
adc
mov
xor
jbe
aam
cmpsb
je
adc
pop
or
xchg
clc
fwait
imul
sub
in
movsl
pushf
sub
add
popf
out
or
push
pop
and
loopne
jns
filds
xchg
push
rcrl
lret
adcb
lods
or
jae
data16
mov
cmp
imul
test
mov
inc
mov
sbb
xchg
add
out
cmp
addr16
pop
add
add
mov
mov
and
xlat
ss
push
js
mov
mov
mov
shlb
mov
and
int3
hlt
push
mov
dec
mov
loope
xchg
aaa
mov
test
pop
inc
xlat
add
sbb
aam
and
addl
ds
jno
push
sub
dec
sub
aas
pop
call
and
push
in
gs
dec
pushf
fadds
or
add
pop
ret
and
xor
xchg
or
mov
pushf
cwtl
xlat
or
xchg
imul
test
scas
mov
cmp
popf
lods
adc
aaa
mov
mov
or
pushf
sbb
gs
loope
or
icebp
or
add
out
adc
mov
test
enter
inc
sarb
pop
es
in
leave
movsb
adc
xchg
mov
jbe
sub
jbe
aam
ret
aam
out
pop
pushf
dec
jecxz
mov
out
push
sbb
pop
and
or
lods
movsl
jmp
push
cmp
orl
call
lods
sbb
push
adc
jecxz
rcl
inc
xchg
mov
adc
ret
pop
jne
pushf
mov
lea
rcrb
mov
or
add
clc
repz
out
insb
adc
add
add
pop
ja
add
in
mov
jl
pop
imul
add
idiv
pop
sbb
xchg
adc
xchg
in
mov
mov
test
push
mov
mov
jae
adc
int3
add
cmpsl
adc
out
jno
pop
fs
lods
cmp
nop
push
mov
sbb
sbb
and
mov
sub
int
cmpsl
cmpl
xchg
dec
or
cwtl
xor
adcl
push
adc
xor
sti
pushf
loopne
outsb
pop
sbb
adc
je
in
pop
jbe
or
iret
mov
or
inc
push
mov
add
test
aam
outsb
push
mov
jge
mulb
adc
lcall
popa
imul
and
xor
push
mov
ss
xchg
leave
jae
jno
mov
lret
insl
ret
xor
hlt
out
insb
aas
aaa
test
xor
add
dec
lods
test
lods
jbe
cld
jp
inc
dec
or
add
andb
int3
shl
jle
dec
jne
cmp
lahf
xchg
and
scas
imul
nop
ljmp
std
jp
dec
adc
jbe
test
xchg
jnp
jle
pushf
jl
sub
pusha
mov
mov
jb
xlat
xor
push
ficoml
mov
or
jg
mov
mov
ljmp
enter
fnsave
lods
or
aad
jae
xchg
out
shrb
ret
daa
data16
sub
fdivrl
cmpsl
fistpl
testl
jnp
rorb
mov
sub
xchg
popa
fstps
nop
outsl
fcom
cmp
pushf
sbb
pop
loopne
test
imul
pop
bound
nop
xor
push
xchg
jnp
inc
stos
mov
or
jns
ljmp
inc
mov
xor
mov
xchg
shll
test
add
in
push
mov
add
sar
fsubrl
stos
ret
inc
jp
jne
jne
test
sub
jb
mov
add
jb
loope
cmc
and
das
xchg
cli
jae
xor
mov
adc
pop
cltd
or
hlt
jge
negb
cmc
aad
imul
cmp
xor
and
jb
lret
int3
outsl
sbb
test
rep
in
xor
icebp
popf
insl
ds
mov
outsl
leave
jl
adc
cwtl
outsl
cmp
add
int
test
pop
cmc
rol
and
rcll
in
pop
mov
adc
outsb
and
xor
ja
in
xor
or
sub
sub
pop
mov
aam
mov
int3
inc
ss
add
mov
loope
insb
sbb
pop
ret
xorb
cli
jne
pop
fisubs
lret
dec
mov
mov
js
out
divb
fidivrl
nop
sti
fildl
ss
mov
push
mov
add
sub
xlat
dec
push
xor
aam
sub
mov
in
cmpsl
cltd
add
cwtl
pushf
jl
fs
into
add
insb
int
sub
mov
mov
jbe
andl
aam
or
sbb
mov
lods
orl
sbb
imul
xchg
popf
mov
fadds
or
jne
fildl
pop
ret
les
in
xchg
lahf
mov
sub
nop
ss
cltd
jmp
adc
adc
xchg
repnz
adc
imul
mov
mov
mov
jns
lds
mov
fs
sbb
push
jg
pop
bnd
add
xlat
mov
sub
mov
jge,pt
xlat
sbbl
movsb
mov
push
push
jno
mov
call
jo
inc
shlb
sub
or
ds
movsb
cmp
test
repz
movb
aad
in
lock
lahf
scas
xchg
aaa
pushf
adc
cmpsl
test
fs
int
push
pushf
jae
jl
lods
mov
sbb
in
fdivrl
stos
add
push
test
inc
mov
es
in
push
stos
stos
xchg
xchg
add
aaa
dec
mov
mov
fmul
xchg
jae
ds
cwtl
jecxz
out
enter
dec
pop
inc
jbe
aam
mov
xchg
add
nop
sub
mov
xor
cmc
inc
aaa
cwtl
fst
inc
jo
hlt
ja
push
sub
not
sub
adc
and
movsb
ret
fadd
leave
dec
arpl
call
shlb
mov
faddl
aam
in
lods
dec
inc
jb
ds
test
sub
popf
dec
test
jns
loopne
add
inc
fnstenv
jbe
cmpsb
ss
adc
dec
sub
orb
and
push
rorl
push
push
jno
and
or
cmpsl
stc
xchg
mov
mov
push
insb
adc
push
push
jmp
push
lods
mov
jle
push
add
imul
fcompl
and
cmp
rep
mov
pop
or
add
sahf
mov
lea
mov
push
lock
adc
add
pop
jne
xor
xor
add
jle
into
sbb
sti
inc
sbbb
sar
mov
push
aad
cmp
loop
sub
push
sub
rorl
out
and
testb
add
lock
testb
adc
decl
mov
arpl
mov
sub
cmp
outsb
mov
aam
sub
fstl
ret
daa
lcall
rcrl
je
lods
and
out
inc
imul
mov
mov
ljmp
jae
loopne
inc
test
clc
subb
iret
or
sub
xchg
and
jae
insl
loop
daa
push
push
dec
push
sbb
test
mov
insb
clc
in
ret
fildl
sub
aam
scas
or
add
and
outsl
push
cs
cmp
dec
sub
std
call
inc
pop
enter
jmp
mov
cli
and
mov
jbe
mov
inc
lret
and
not
fisubl
sub
mov
add
in
adc
loopw
jb
mov
xchg
push
mov
sub
test
daa
mov
mov
dec
pop
jecxz
lock
sub
stos
mov
outsl
inc
hlt
jne
ret
jae
sub
cwtl
jg
xchg
push
sub
xlat
repz
orl
mov
movsl
or
dec
mov
dec
pop
ret
dec
sub
data16
mov
shr
and
test
lahf
loopne
sbb
jno
push
mov
out
inc
pop
add
mov
aad
and
sbb
xorb
pand
cmp
popf
sub
lods
popl
sarb
push
in
sbb
xchg
iret
stos
dec
sub
cmp
add
xchg
sub
sub
std
mov
leave
mov
mov
jo
fdivs
testb
jecxz
or
leave
aam
and
lods
pop
jmp
lahf
and
out
repnz
push
push
stos
rcrb
lds
push
xchg
jmp
inc
movsb
or
sar
sbb
ss
pop
push
mov
out
and
mov
xlat
repz
adc
or
add
adc
push
jl
mov
push
mov
inc
mov
pushf
jp
mov
dec
push
insb
lods
dec
xchg
add
ja
sti
test
fs
jecxz
fstpl
mov
xchg
adc
aad
subl
repnz
push
sub
inc
mov
mov
in
adc
push
addr16
leave
cmp
sub
cmp
lods
addb
jp
in
outsb
ss
stos
subb
sti
test
xchg
mov
jo
dec
iret
push
mov
test
dec
flds
fcomip
cmpsb
or
adcb
add
fsts
lds
push
push
int3
sahf
push
lds
test
bound
repz
xor
dec
xchg
lock
cmpb
aad
mov
cwtl
push
and
data16
push
add
xor
push
icebp
insb
adc
mov
cmpsb
push
fistl
frstor
inc
ljmp
insb
adcl
push
mov
imul
pop
cmp
cmp
jp
mov
jo
push
hlt
ret
test
pop
sub
xlat
mov
xor
pushf
add
cmc
inc
aad
mov
imul
cltd
jl
jo
sbb
mov
pusha
mov
mov
leave
xor
xor
xchg
mov
aas
jge
incl
sub
adc
bound
andl
into
fdivr
stos
xlat
cmp
sub
inc
out
xor
icebp
jne
xchg
jae
lds
ljmp
or
cmpsl
aas
and
push
ss
xlat
in
jnp
stc
xor
mov
pusha
xlat
ret
mov
mov
gs
push
xchg
loopne
jp
jl
lret
fwait
imul
and
xchg
int3
pop
ret
out
pop
sbb
or
adc
mov
scas
cmp
lret
int3
xlat
dec
ljmp
sbb
pop
mov
cld
imul
sub
mov
test
nop
subb
inc
jbe
ja
xchg
adc
fcmove
xor
hlt
es
mov
andl
in
in
imul
arpl
daa
fsubr
dec
je
lods
sti
adc
fdivrl
inc
data16
ss
sub
xchg
mov
xor
jb
aad
sbb
jg
imul
jo
aad
or
loop
int
inc
sub
sub
and
shlb
addr16
cmp
mov
pop
cmp
add
push
jle
push
icebp
xor
jg
adc
popf
mov
icebp
xor
sub
loope
aad
repnz
pop
xor
mov
pop
jb
cs
sub
mov
lds
nop
or
dec
movsb
cmp
jnp
add
xchg
rorb
shr
pop
push
sub
data16
imulb
mov
aad
data16
adc
or
lret
adc
mov
mov
aaa
es
mov
adc
xor
add
imul
pop
push
push
push
inc
xchg
leave
andb
mov
jecxz
xor
sarb
push
adc
cmp
jb
rcrl
push
inc
fnstenv
mov
pop
mov
xchg
cmp
adc
sub
jp
subb
int3
sahf
xchg
and
insb
pop
sub
lret
out
movsl
mov
les
out
mov
ret
sub
xlat
lret
pushf
pop
sub
ljmp
push
mov
push
out
pushf
mov
jecxz
pop
fidivl
jne
mov
add
sbb
lods
das
cmp
jecxz
lea
popf
mov
mov
outsb
jle
mov
sahf
jp
inc
or
out
test
sub
mov
adc
push
pusha
sub
aam
jns
nop
iret
xchg
and
mov
mov
inc
mov
xchg
mov
jb
ret
ss
jbe
xor
sub
rclb
stos
or
sub
loopne
jae
addr16
pop
repnz
adc
lock
mov
pop
fldl
loope
xor
mov
pusha
aam
aad
cmp
jbe
add
xlat
pop
scas
xor
aad
jns
cld
lret
out
rolb
adc
xchg
or
dec
in
push
repnz
bnd
fnsave
fidivl
and
in
addr16
ret
cmp
jae
xor
inc
fcmovb
cmp
enter
add
xchg
mov
ja
sub
lret
or
xor
ret
in
cmpsb
pushf
jb
adc
loope
icebp
fdivr
jg
pusha
add
popf
lea
clc
shlb
xor
insb
sub
fdivl
push
mov
add
push
or
sbb
push
out
jo
shlb
jp
jg
sub
xchg
out
mov
push
mov
pusha
cmp
stos
dec
sub
add
or
shlb
mov
shl
enter
fidivrs
pop
xchg
mov
mov
fxch
sub
pop
test
ror
popf
aas
sbb
cli
mov
aam
mov
mov
hlt
sbb
mov
leave
lahf
out
lods
loopne
push
or
lods
scas
ljmp
sub
hlt
faddl
insl
stos
pushf
imul
mov
sub
shll
cli
cmp
popa
pushf
push
mov
adc
mov
lods
movsb
dec
cmp
sub
clc
insl
insl
pop
js
cmp
ss
xor
jne
sbb
xchg
mov
fdivrl
pop
iret
pop
push
clc
push
dec
adc
and
adc
scas
out
fwait
or
sub
jge
hlt
push
sbb
mov
dec
sub
cmpsb
dec
test
xor
enter
ficomps
mov
vaddsd
mov
adc
sti
stos
inc
mov
dec
push
addr16
push
sub
pop
je
test
xchg
movsb
xor
push
fld
lret
push
int
sarb
and
lret
cmpl
push
or
jmp
sub
test
pop
xchg
out
dec
cld
fstpt
cmpsl
or
shl
cmp
dec
stos
xor
jb
rcrb
push
in
adc
jmp
aad
ret
dec
pop
or
rcll
xchg
jbe
cmpsl
or
sbb
add
insb
pop
clc
mov
daa
cs
aam
xchg
outsl
sahf
mov
mov
call
out
clc
cmp
or
enter
xor
inc
cmp
ds
sub
pop
lods
and
xchg
dec
lcall
test
jnp
jne
mov
push
pop
sbb
push
push
xor
pop
or
fwait
adc
orb
in
mov
adcb
ret
xlat
das
adc
adc
push
pushf
sub
cwtl
lahf
mov
cs
sbb
aam
mov
jne
jae
repnz
pop
jp
mov
add
cmpb
push
xchg
and
ret
cwtl
and
jle
xor
mov
xchg
push
test
cmp
lock
inc
sbb
mov
gs
int
dec
add
xlat
sbb
cmp
cmc
cld
and
cmpsb
jo
lods
movsb
mov
xchg
repz
sub
mov
lahf
into
pop
xor
inc
ja
call
sub
aam
jbe
aas
or
imul
mov
pushl
ds
leave
sbb
fisttps
mov
push
test
aam
jl
fcomip
push
xchg
daa
dec
icebp
aaa
xchg
and
out
arpl
rorb
cmp
push
push
xorl
jne
jno
sub
dec
inc
scas
aaa
xor
je
in
roll
dec
in
pcmpgtd
mov
xor
push
jl
and
fwait
mov
mov
cmpsb
sub
push
mov
xchg
sub
lods
idivb
mov
pop
mov
ljmp
mov
push
aas
xor
inc
pop
into
es
jno
cmp
out
pop
jo
into
jge
sub
mov
pop
aaa
sub
clc
lods
adc
scas
sbb
fxtract
shrb
push
mov
mov
outsl
aas
mov
or
xlat
das
jmp
inc
xor
nop
loopne
sti
repz
popf
icebp
pop
shrb
sub
and
jecxz
fwait
or
les
jne
leave
stc
inc
int3
jp
inc
or
imul
jle
pop
inc
pop
ret
fnstsw
or
test
mov
xlat
mov
lods
cmpl
outsb
jno
sub
xchg
sub
into
mov
cmp
add
ja
lret
mov
sub
insb
cwtl
stos
xchg
dec
jp
out
and
cld
dec
aam
ja
jle
cmpsl
cmc
sub
mov
xor
cmp
in
pop
hlt
mov
les
jne
dec
mov
je
adc
repnz
data16
test
hlt
sbb
mov
out
add
dec
lods
out
jl
mov
ja
addr16
xorl
shl
push
out
lea
mov
adc
fldcw
fadds
jp
fcmovnu
xor
pop
sti
or
fwait
mov
daa
sub
inc
mov
push
or
pop
fsubl
pushl
ja
mov
cmp
mov
insb
xchg
das
push
popf
je
lods
pop
xor
fnstcw
push
ret
cwtl
mov
sbb
push
xchg
insb
arpl
fst
nop
incb
mov
hlt
ret
stos
xchg
xchg
adc
mov
sub
lret
addb
push
je
gs
xor
arpl
mov
mov
sbb
mov
arpl
pop
negb
jo
nop
push
test
push
inc
aam
int3
xor
loop
sub
sub
fxch
mov
imul
xor
int3
mov
pusha
xchg
sbb
leave
sahf
aad
and
iret
pop
lret
mov
pop
push
jg
add
jnp
sbb
push
jne
mov
xchg
fstpt
mov
sub
aam
jl
popf
mov
xchg
xor
lods
loop
sbb
lret
pushf
xor
imul
lods
or
xchg
popa
jnp
cmpsl
in
mov
leave
test
bound
or
jmp
mov
and
lods
mov
xchg
ds
loope
dec
adc
test
adc
pop
sbb
push
adcl
lock
dec
fisttpl
in
clc
push
gs
push
in
adc
inc
into
fwait
aad
jne
xchg
hlt
xchg
shrb
sub
cmp
sub
adc
adc
or
lahf
js
push
in
ret
dec
repz
pop
scas
sub
fdivl
push
ficomps
mov
in
and
fdivrs
or
add
adc
adcl
mov
mov
mov
push
aad
mov
lods
push
aad
lret
xchg
or
lret
gs
out
mov
movsb
mov
sub
pushl
into
dec
adc
mov
sarl
xchg
sub
aam
xchg
xlat
aad
aad
xor
ret
push
pop
pop
iret
daa
je
jp
push
sar
loopne
cmpsb
ficompl
xor
xchg
call
mov
dec
loopne
or
sbb
dec
fdivr
push
push
mov
popf
mov
in
jnp
test
push
into
jg
mov
clc
mov
divl
je
mov
xchg
mov
add
dec
push
push
mov
into
fdiv
lret
out
in
mov
xchg
pop
adc
icebp
pop
int3
sub
fidivrs
add
dec
jg
aam
lahf
mov
aam
inc
cmc
sub
ja
out
sub
fwait
cli
lcall
push
bound
out
cwtl
adc
cmpsl
jp
arpl
test
out
dec
mov
enter
sbb
loop
cmp
je
fcomps
dec
xchg
add
int
sub
sbb
dec
cmp
ja
push
cmp
and
pop
mov
sahf
stos
adc
fidivs
rcll
xchg
mov
sbb
mov
push
cli
adc
pop
adc
pop
ffree
mov
sub
out
enter
mov
roll
adc
scas
aaa
addl
xor
insl
hlt
push
lcall
shlb
mov
in
mov
rorb
push
js
popa
xchg
adc
subb
sub
fstps
addr16
bound
mov
movsl
cmp
push
scas
sbb
stos
dec
lea
xchg
rol
test
inc
clc
or
sarb
inc
pop
cmp
cld
lahf
jecxz
stc
jl
inc
add
push
out
dec
lock
adc
arpl
popa
sbb
in
or
bound
lock
aad
std
adc
mov
aam
mov
xchg
rcr
inc
lahf
ffree
mov
cmp
fisttps
xorb
pop
int3
mov
lcall
lods
int3
les
xchg
push
pop
paddsw
daa
mov
or
mov
jle
fs
cmp
jmp
shrb
in
cltd
mov
sarb
mov
movsl
jb
out
or
js
jb
jmp
jp
into
ret
in
dec
shr
orl
mov
leave
jno
and
arpl
xor
cltd
cmp
inc
sub
cmp
loopne
rcrb
fisubs
mov
fucomp
je
mov
cmp
fcmovb
jp
add
aaa
js
mov
stos
jbe
or
jne
push
add
cmp
call
add
cld
repz
sub
rep
shrl
movl
sub
xchg
or
int
or
jl,pn
dec
cmp
push
xchg
aad
push
cmp
jbe
test
fwait
lret
loope
mov
into
dec
push
cmp
clc
lods
adc
xchg
jle
ret
adc
cwtl
push
addl
rcrl
mov
dec
mov
call
sub
nop
out
sub
push
xchg
and
imul
ud0
incl
jne
leave
rolb
ss
aad
cmp
push
sqrtps
pop
rorl
arpl
orb
add
jp
movsb
stc
push
sar
in
cmp
jge
ljmp
xchg
mov
idiv
loop
or
push
cmp
popa
sub
in
in
pop
mov
mov
cwtl
lret
loop
dec
test
mov
jne
ljmp
scas
pop
xor
adc
sbb
aaa
push
je
mov
aaa
mov
push
mov
divb
nop
ja
shlb
dec
cmp
xchg
sbb
xor
xlat
mov
pop
stos
push
add
out
inc
jns
cmc
inc
roll
cmp
mov
fwait
addr16
test
lods
or
ja
add
out
mov
push
pop
jge
out
xor
je
stc
sub
loope
iret
jae
lea
bound
or
out
data16
adcl
add
sahf
add
jnp
hlt
jo
in
icebp
inc
ret
lcall
scas
lods
mov
add
fldl
sbb
sub
lods
idivl
cmp
ret
sbb
pop
xchg
jb
les
or
pop
shlb
fcoml
push
iret
push
aaa
pusha
or
movsb
xchg
fidivrs
sbb
xchg
hlt
aas
inc
xor
ficomps
sub
hlt
mov
mov
mov
pop
lods
andb
cmp
addr16
leave
and
cmp
das
push
pop
or
repnz
and
cwtl
cmpb
ss
repnz
push
in
cwtl
push
shrb
js
iret
test
repnz
push
sub
push
inc
lock
adc
decl
or
dec
mov
mov
push
dec
mov
pop
aad
loop
xchg
xor
ss
cmp
das
xchg
cltd
test
push
cmp
test
adc
inc
mov
ljmp
push
shrl
push
or
cmp
jae
inc
out
sub
jg
and
mov
mov
bound
leave
lea
loopne
fiadds
sahf
adc
and
xorl
adc
inc
lret
sub
cmc
lds
orb
dec
jnp
ror
add
or
jg
jno
add
mov
and
or
xor
adc
jle
mov
jge
mov
sbb
das
mov
popa
bnd
lret
pusha
mov
adc
aaa
icebp
mov
xor
sub
mov
fldcw
sbb
mov
push
imulb
arpl
stos
push
nop
popf
fisubl
mov
add
jg
cmp
je
in
jne
leave
test
mov
loop
mov
adc
mov
sbb
jge
jne
cmp
inc
inc
adc
jge
jmp
dec
sbb
jne
dec
aam
pop
mov
lahf
shlb
out
shl
or
adc
mov
pop
or
jbe
mov
rorb
leave
sbb
lret
mov
push
mov
mov
das
fmul
fstps
jae
inc
adc
mov
jne
std
adc
shl
popf
jnp
out
mov
fisubs
rclb
lods
push
mov
fwait
mov
pop
and
pop
pop
rorl
adc
out
jmp
sub
sub
pop
add
out
pushl
hlt
sub
push
push
imul
negb
sub
sub
out
add
fcomps
rorl
mov
sub
push
cli
bound
clc
add
inc
adc
jp
or
leave
insb
lock
dec
cmp
mov
outsl
sub
xchg
loopne
out
inc
inc
call
roll
adc
lret
mov
jmp
or
loope
add
xor
push
xor
ds
shrl
mov
les
gs
repnz
mov
arpl
imulb
cmp
je
repnz
xchg
test
dec
jae
bound
imul
xlat
mov
jle
loop
icebp
repnz
sub
ljmp
aaa
scas
pop
bound
dec
stc
imul
pop
sub
xorl
mov
adc
xor
add
jne
inc
pop
jae
xchg
dec
test
lret
lret
cmp
jbe
movsl
xchg
shrl
xlat
cmp
idivb
sbb
shl
scas
arpl
fnsave
sub
cld
cmc
add
arpl
xchg
ljmp
lods
cmp
sub
test
dec
lcall
xchg
adc
test
inc
ds
mov
insb
clc
aas
out
jle
fidivl
bound
jle,pt
call
xor
cmp
cmp
dec
or
out
sbb
cmp
adc
adc
mov
test
inc
ret
fstps
scas
leave
inc
cld
xor
sub
rolb
fsts
mov
add
cmp
dec
pushl
dec
mov
insl
push
jns
adc
aam
xor
mov
xchg
xlat
sbb
jns
lret
xchg
fisttps
daa
push
xor
lods
incl
sub
push
xchg
bound
lret
push
jmp
aad
mov
mov
fimuls
int
pop
and
ret
xchg
mov
mov
adc
hlt
cmp
pop
aam
fistl
pop
loope
loop
push
lods
jge
inc
push
dec
mov
or
mov
fxch
and
sbb
shrb
inc
adc
popf
adc
push
push
mov
push
out
xchg
mov
xor
das
push
es
xor
sub
xchg
push
xor
xor
es
aaa
jo
shl
inc
dec
adc
addr16
add
cmp
add
and
aam
pop
lods
xchg
ret
mov
scas
cmc
xor
in
mov
adcb
push
ja
push
push
mov
sub
clc
xchg
xchg
hlt
mov
fsubrs
loope
sahf
lahf
lcall
and
jb
int3
mov
mov
lahf
add
inc
inc
add
mov
aaa
mulb
scas
adc
sub
mov
dec
adc
mov
sub
into
shufps
mov
hlt
scas
jns
test
lea
mov
iret
out
dec
je
sub
jg
push
fisttps
insb
xchg
popa
imul
or
sbb
adc
push
in
mov
mov
xlat
sbb
cmp
mov
shl
xor
pop
mov
xchg
stc
jbe
cmpl
xor
xchg
jg
lret
lret
fsubp
add
loope
pop
stc
fldl
outsl
add
pop
lock
mov
pusha
movsb
jbe
adc
movntps
sub
pop
out
dec
dec
jle
dec
cwtl
inc
or
and
and
and
pushf
mov
inc
sbb
xor
sahf
in
ss
aas
xchg
adc
fisubrl
dec
adc
and
lods
arpl
and
popf
cmp
inc
stc
or
sub
mov
dec
jg
push
clc
sub
pushf
into
adc
mov
sub
and
pop
and
jmp
int3
mov
pop
fsubl
xchg
lahf
jl
mov
leave
adc
divl
add
and
hlt
inc
scas
enter
sarl
or
test
jg
mov
jp
out
hlt
mov
ja
rol
mov
cmp
xor
in
sub
repz
arpl
rorb
outsl
test
xchg
ret
inc
notl
or
sub
arpl
jb
sub
nop
addr16
sub
cmpsb
andl
xor
push
mov
lods
lahf
push
xlat
mov
in
cmp
jmp
xchg
ljmp
test
lret
push
jbe
std
push
sub
jo
or
arpl
lods
loope
movsl
stos
jns
mov
ja
mov
mov
cwtl
cmp
adcl
aad
out
xchg
lock
bound
xor
mov
leave
fmull
dec
push
sub
test
adc
jns
out
mov
gs
mov
push
push
cmp
sub
ss
push
jge
pop
cmp
push
mov
add
jg
push
xchg
sub
mov
mov
popa
es
out
inc
movsb
popf
leave
fidivrs
in
xchg
imul
outsb
xlat
sub
jmp
or
adc
out
cwtl
movl
push
sub
and
sub
dec
pop
xchg
cmp
jb
mov
hlt
call
push
push
inc
test
es
pushf
mov
imul
test
mov
mov
lea
or
and
loop
pop
xchg
fcompp
repz
loopne
lods
fsqrt
sub
cmp
lret
aam
ficompl
int
out
aam
shlb
ret
or
test
jne
popfw
int
lret
fmuls
dec
or
outsl
arpl
ror
lret
inc
jbe
js
pop
shr
push
sub
fisttpl
subl
pushf
into
jge
xor
adc
sahf
cmp
sub
jl
iret
adc
sub
inc
or
lahf
adc
sub
popf
xchg
jnp
or
loope
frstor
enter
mov
cmp
lods
pop
lret
xor
mov
int3
push
mov
and
mov
lret
pushf
mov
push
aad
aad
test
push
fnstenv
out
and
arpl
and
rcrl
sarl
xlat
into
cmp
inc
mov
leave
cmp
lods
and
loop
push
ror
clc
test
orl
pushf
push
push
in
xchg
pop
cs
loopne
stos
and
fs
jmp
xlat
mov
sub
gs
mov
rcrb
mov
les
scas
add
jp
outsl
int3
popf
les
popf
dec
dec
imul
dec
sti
pop
xchg
mov
nop
mov
xchg
lret
xor
lret
mov
add
mov
or
xlat
rclb
ds
ret
dec
rclb
pop
or
mov
shrl
and
adc
cmp
lret
insb
loop
mov
or
call
loopne
push
cld
test
addr16
wbinvd
xchg
sub
jecxz
cltd
cmp
lods
ss
inc
and
out
jp
bound
mov
sti
mov
mov
mov
or
xor
pop
cli
cmp
ss
in
mov
repnz
int3
aam
mov
add
sarb
jae
pushf
jg
hlt
loope
and
mov
rclb
insb
jl
push
sub
adc
and
add
xchg
pop
mov
pop
add
pop
sub
ss
rorb
icebp
data16
sahf
adc
mov
outsl
repz
cmp
out
scas
insl
mov
cmp
shlb
lock
sti
xor
aam
mov
cwtl
sub
sub
sub
xchg
lds
jne
jnp
push
divb
gs
sub
xchg
fidivrl
ret
jne
fistpl
push
int3
xorb
push
add
sbb
lahf
mov
or
nop
xabort
xor
mov
jmp
ret
jb
ds
call
je
xchg
xchg
shlb
xchg
dec
push
push
aaa
iret
push
pop
std
adc
lods
fs
sbbl
sub
or
movsb
faddl
sbb
idivb
aad
mov
lea
mov
add
fs
jg
sub
xor
ret
ficompl
xchg
outsl
iret
aam
add
orl
jns
cwtl
sub
dec
fidivl
loop
xchg
lock
scas
call
mov
xor
daa
add
mov
mov
mov
add
and
mov
mov
pop
and
and
leave
iret
sbbl
loopne
push
mov
jge
xchg
leave
or
aas
sarb
or
loop
ss
add
jns
push
adc
loop
jno
les
xchg
and
xor
lret
jae
sahf
cld
pop
addr16
scas
add
loop
ret
shrb
mov
je
push
xchg
inc
dec
insb
inc
or
add
adc
mov
xchg
jp
xchg
adc
stc
sub
dec
add
inc
imul
in
or
cwtl
shr
nop
xchg
mov
mov
jle
jge
add
jnp
sub
sub
sbb
les
leave
xor
lcall
push
aaa
lods
dec
cltd
mov
xchg
outsl
cmp
decl
or
add
or
adc
inc
dec
test
icebp
cmp
stc
shlb
mov
in
fldt
repz
mov
cmp
mov
jne
jmp
pop
bound
dec
addr16
fsubs
jno
fsubrl
fstpt
jo
dec
jbe
loopne
rcl
dec
cltd
push
push
pushf
jl
in
pushw
fldl
out
xlat
shrb
sub
shl
mov
mov
xlat
cs
cwtl
jbe
aam
inc
sbb
cmp
sahf
and
adc
repz
lock
sbb
das
jbe
cld
stc
and
mov
inc
sub
mov
mov
scas
lods
jg
test
sub
pop
les
das
add
mov
mov
insl
sahf
int3
add
xchg
jae
pop
inc
insb
insb
push
sub
ss
enter
fisubl
push
mov
cmp
lods
lds
adc
sbb
fwait
pop
dec
cmpsl
lahf
push
sub
cmp
or
mov
jo
pop
sbb
rcr
lret
clc
mov
dec
cld
scas
or
out
xchg
or
jne
jecxz
xor
or
pop
adc
add
pushf
push
or
stc
jo
cmp
lret
sub
outsb
mov
leave
mov
pop
mov
sahf
adc
mov
fwait
sub
sbb
clc
iret
sub
frstor
xorb
addb
les
push
push
push
repnz
in
dec
dec
add
sub
adc
lea
cmpsl
jmp
pop
cltd
jbe
inc
testl
mov
pop
jl
jmp
sub
dec
jae
push
xchg
fldenv
in
test
xor
xor
mov
enter
adc
pop
mov
scas
rclb
cmpsb
sar
and
mov
cwtl
pushf
es
shll
mov
es
mov
xchg
jne
add
lea
decb
clc
mov
push
inc
push
xorl
popf
jne
sub
mov
rorl
mov
mov
fs
push
xchg
inc
inc
push
sub
stos
fstps
cli
out
and
arpl
int3
mov
rorl
xchg
jmp
test
adc
xor
xor
int3
in
xchg
fsubl
es
fildll
mov
adc
sub
shl
test
ljmp
pusha
flds
out
ret
xchg
test
fstpl
mov
jne
add
mov
mov
sub
xchg
and
xor
jne
jo
sub
out
lret
mov
mov
in
jp
fwait
popf
out
shl
mov
dec
xchg
and
fstpl
jno
ret
inc
lcall
sub
xor
cmp
adcl
pushf
cwtl
jae
jl
lret
sbb
xlat
mov
lret
pop
imul
adc
mov
in
mov
repz
sub
fdiv
popa
shl
push
les
cmpsb
mov
aas
outsl
dec
mov
aaa
or
bound
fildl
mov
sub
lods
pusha
jbe
inc
mov
cmpb
repnz
mov
add
and
pushf
cwtl
dec
popa
subl
repz
mov
xor
mov
jae
int
repnz
push
mov
gs
push
sub
dec
repnz
inc
pop
mov
hlt
dec
mov
sub
xor
or
aaa
cmpsl
pop
in
in
fsubrs
jnp
push
xchg
sbbl
imul
test
adc
cmp
pop
xchg
pop
and
int3
pusha
pushf
pop
xchg
nop
hlt
xor
mov
aam
push
sbb
add
iret
dec
cmp
add
jecxz
or
pop
lret
enter
popa
in
jae
push
shlb
sbb
dec
mov
std
scas
inc
xor
inc
arpl
outsl
sbb
fmuls
mov
ret
jge
mov
jnp
sti
mov
or
repnz
jnp
test
add
sub
xchg
sub
andl
outsl
mov
or
adc
jnp
add
dec
push
sbb
xchg
sarl
and
mov
push
in
mov
adc
clc
cmpsb
cmp
lret
lods
es
inc
add
adc
xchg
insb
mov
bnd
mov
mov
jle
data16
adc
insb
dec
mov
daa
sub
jns
jo
pop
jae
mov
ret
test
lods
adc
cs
pushl
cmp
imul
jne
xor
loop
ja
insb
jp
or
scas
mov
lods
pushf
xor
aad
fcmovbe
insb
addb
mov
xor
push
popa
dec
call
lret
mov
mov
rolb
pop
mov
cmpsb
and
das
movsl
pop
jnp
mov
inc
push
ret
xchg
int
je
icebp
scas
cmp
pop
add
fcoms
lea
sub
hlt
and
pop
mov
leave
test
adc
rolb
ss
popa
mov
scas
inc
test
ss
divl
jmp
xor
test
das
adc
push
mov
inc
clc
mov
mov
push
sub
insb
xorl
sti
xor
idivb
fstl
out
cmp
fadds
fldt
lret
ss
add
sub
cli
int3
adc
stos
lods
pop
add
int3
sbb
movsb
mov
push
es
pop
inc
mov
push
out
scas
or
js
fnsave
in
fiadds
dec
adc
and
lods
push
inc
nopl
jmp
in
jl
push
xor
or
jg
pop
or
cli
aam
hlt
or
es
mov
push
sti
xor
pusha
movsb
lods
mov
mov
addb
fldcw
jp
cmp
xor
daa
int
ss
mov
sub
mov
enter
fimull
mov
jg
in
out
adc
sub
mov
add
mov
pop
or
mov
inc
jne
sbb
mov
mov
shlb
hlt
push
push
in
xor
xchg
push
pop
in
push
or
add
ljmp
test
xchg
hlt
insb
mov
jbe
addr16
out
rcrb
jne
sbb
popf
outsl
icebp
jbe
cli
sub
pusha
out
push
sti
movsb
sahf
and
mov
push
outsl
stos
push
jle
jbe
xchg
add
push
pop
dec
fldenv
js
xchg
sub
mov
sub
int3
popf
push
xlat
gs
orl
pop
imul
sub
rcrl
mov
imul
push
jecxz,pt
jo
insb
cmp
loop
pop
jo
fwait
in
sub
cmp
lret
adc
mov
pop
lret
inc
mov
fisttps
jbe
mov
stos
int3
or
sbb
cwtl
xor
pop
in
je
out
lahf
mov
lret
inc
ret
sub
pusha
loopne
fs
xor
scas
popf
lcall
cltd
cmp
sahf
dec
ss
pop
imul
mov
sbb
push
leave
loop
dec
mov
jnp
imul
jle
loop
movsl
adc
lahf
movsb
daa
adc
test
inc
inc
lret
push
jne
dec
mov
mov
push
add
in
xor
int
clc
sub
enter
pop
xorl
push
dec
lea
aad
adc
cmp
data16
sub
jl
push
outsl
mov
inc
fidivs
nop
cld
jne
jle
in
add
lret
and
mov
pushf
push
push
xor
test
int3
pop
fsts
cmpsb
dec
arpl
movsl
bound
ds
mov
jl
jo
jge
dec
or
nopl
pop
add
cmp
lods
ds
stc
hlt
stos
pop
test
popa
arpl
lods
add
jno
adc
roll
sbb
inc
and
inc
jbe
inc
jnp
push
push
mul
add
loopne
ret
adc
xchg
iret
inc
or
seto
pop
mov
test
imul
test
loopne
cli
cmp
adc
lret
pop
adc
sbb
hlt
rcrl
and
nop
or
jge
int3
mov
lds
push
outsl
xchg
shlb
scas
push
or
sub
fwait
jno
in
mov
mov
out
xchg
jge
and
mov
cmpsl
xchg
aam
ret
roll
adc
cmpl
addr16
sub
cwtl
xchg
pop
pushf
lret
dec
pop
sbb
div
sub
test
insb
stos
lret
inc
jmp
dec
pop
and
jb
xor
bound
cwtl
popf
iret
test
adc
frstor
pop
stos
adc
xor
sub
repz
popf
mov
popf
mov
mov
in
in
mov
aas
popa
popa
out
sub
lds
sbb
cmpsl
and
adc
push
cmp
cmp
xor
mov
in
sbb
dec
xor
lods
mov
jle
pop
loop
aas
ret
cld
add
int3
jnp
loop
push
push
in
push
sub
mov
mov
cmp
sbb
mov
sarb
and
lcall
or
or
sbb
pop
sbb
or
dec
jle
fisttpl
sub
jnp
cmp
add
dec
mov
xchg
out
mov
push
sbb
add
test
xchg
sub
roll
mov
movsb
insb
sub
push
cwtl
js
jg
jl
pusha
pop
out
cmpb
or
mov
fstl
clc
jp
mov
xor
sub
sets
adc
test
jge
xchg
lret
pop
mov
cmovnp
mov
sbbb
hlt
rolb
xchg
mov
test
test
daa
or
cmpsb
sub
pop
insb
mov
arpl
sbbb
mov
iret
out
rcl
and
pop
sub
and
xchg
clc
loope
rcrb
ja
jne
dec
test
push
stc
push
xchg
cmpsl
testl
flds
or
fimull
je
push
aad
imul
pop
or
push
sbb
mov
cmp
add
out
dec
mov
pop
scas
dec
mov
loopne
rcll
cmp
fildll
in
sbb
jecxz
dec
ss
stos
inc
fsub
aam
sub
imul
pop
pop
imul
jle
test
xchg
jbe
sub
decb
fs
pop
cmp
or
out
ds
adc
and
and
and
int3
orl
imul
add
sbb
or
lret
ds
pop
in
pop
bound
std
xor
lods
lret
jns
push
jns
repz
mov
es
aam
aam
cmp
lret
xchg
add
cmpsl
je
mov
in
fnstsw
and
mov
addr16
arpl
aam
cmp
decb
cmp
xor
xchg
push
cmp
aad
push
in
sub
test
clc
ss
shr
ljmp
pop
dec
outsl
inc
lret
fisttpl
add
and
out
pushf
roll
mov
in
test
les
sub
setp
mov
inc
push
hlt
jnp
mov
dec
xchg
add
mov
mov
adc
out
xchg
mov
icebp
stos
mov
mov
out
xorb
dec
mov
push
pop
push
xchg
sub
sub
frstor
mov
test
xchg
nop
jge
mov
or
push
ret
xchg
outsb
cmpsb
cs
notl
lret
or
aaa
mov
push
xorb
or
aad
lea
iret
push
mov
or
jl
adc
fcomp
fsubl
int3
sub
out
je
cmpb
xor
xor
mov
push
mov
add
sbb
sub
push
shll
inc
sti
lret
xchg
sbb
jbe
nop
je
cwtl
push
testb
adc
push
xor
in
xlat
xchg
add
repz
push
pop
add
xor
lret
mov
cmp
jnp
jno,pt
test
shlb
std
mov
mov
sbb
mov
mov
lods
pop
adc
pop
push
test
mov
push
mov
pop
aam
add
ljmp
movsb
xor
shlb
xor
cs
xlat
js
xchg
pop
xor
sahf
fmul
in
lods
jge
clc
cmp
mov
push
xor
mov
jmp
fs
push
xor
loopne
xor
sbb
adc
dec
add
mov
pop
mov
push
xorb
clc
add
sti
jge
hlt
jae
dec
lock
mov
push
xchg
xchg
or
sub
add
in
stos
adc
subb
sbb
aad
pop
adc
pushf
jl
shll
ja
lock
cwtl
xor
scas
jecxz
stc
jne
bound
sarl
mov
cmp
sbbb
xlat
test
xlat
outsb
inc
lock
mov
jne
adc
pop
lret
add
jnp
cmp
sub
shll
mov
popl
lahf
mov
dec
jne
and
add
testl
cld
adc
inc
xor
jl
xchg
cmp
leave
ret
push
push
cmpsb
cmp
dec
sti
jl
sub
insl
cmp
jle
shll
addr16
aaa
inc
mov
arpl
sub
lods
loop
mulb
jecxz
decl
cmp
mov
int
and
xchg
lods
and
popa
je
sub
push
jnp
add
jl
push
mov
xor
cmpsb
or
xlat
imul
dec
cwtl
bound
not
movsl
jmp
sub
inc
rolb
push
orb
aaa
clc
add
sub
mov
jmp
cmpsb
cmp
adcl
jb
out
popf
sub
fstpt
addr16
scas
lret
and
lock
das
aaa
lahf
dec
jae
push
or
lods
xchg
pop
enter
fimull
daa
jne
xchg
and
cltd
cmc
in
xchg
sub
push
mov
jmp
xlat
jg
lahf
adc
pop
adc
xchg
xor
scas
lret
sbb
push
cwtl
ja
icebp
and
pminub
inc
or
cmc
add
pop
sti
adc
jbe
mov
mov
mov
xchg
cmp
mov
enter
dec
inc
pop
out
lcall
and
gs
dec
cltd
fmuls
lcall
xchg
mov
pop
jo
nop
add
jns
inc
aaa
call
aas
mov
mov
pusha
inc
mov
xchg
lods
sub
shlb
jl
adc
dec
and
lock
mov
mov
sub
jnp
sub
pushf
addr16
bound
out
inc
inc
pop
push
loopne
rorb
out
lods
push
or
xchg
mov
out
mov
jne
adc
inc
ret
sub
jno
inc
clc
mov
pop
lock
jp
xlat
cwtl
mov
cmp
lcall
add
jmp
pop
mov
mov
gs
mov
jmp
add
loopne
adc
je
ja
mov
xchg
mov
push
das
out
js
and
push
into
sub
out
lret
mov
test
aad
aas
dec
sub
imul
xlat
sub
ds
sbb
iret
mov
sub
mov
xor
jle
loopne
lock
pop
bound
adc
and
add
add
fwait
hlt
mov
in
mov
mov
pop
add
and
mov
test
mov
sub
pop
js
add
xor
les
cs
mov
cmp
or
push
mov
lret
lret
mov
shrb
cmp
inc
mov
popa
clc
adc
ror
cmp
push
mov
scas
out
pop
aam
add
pause
rorb
jp
jmp
inc
fcompl
shrb
sbb
leave
and
fldenv
in
into
dec
or
xchg
push
out
cbtw
mov
push
inc
xchg
mov
jle
sub
jg
push
insb
xchg
cmp
rclb
xchg
jbe
xchg
pop
lretw
push
push
cli
sarb
ss
int3
push
sbb
mov
mov
mov
movsb
imul
dec
xchg
jb
cmp
loopne
mov
and
in
lcall
aaa
insb
fimuls
cli
loop
cmp
pop
lahf
mov
ja
xchg
cmp
stos
mov
adc
leave
pop
mov
push
dec
and
add
call
add
sub
or
cmp
sbb
or
les
xor
lock
imul
mov
and
in
std
mov
scas
das
clc
frstor
cmp
ja
in
subb
fidivs
aad
adc
or
add
dec
call
dec
in
xchg
bound
cmp
sahf
and
sub
mov
cld
pop
mov
add
or
mov
test
pop
mov
iret
test
mov
stc
out
jecxz
int3
jmp
sub
mov
dec
push
popa
pop
inc
pop
jnp
fidivrl
out
imul
dec
xchg
lahf
sub
jne
sahf
mov
and
data16
add
mov
popa
iret
xchg
sbb
imul
mov
shr
ljmp
sub
aas
and
outsb
lods
mov
ss
or
push
enter
rcrb
sub
xor
adc
mov
cmpsl
push
imul
pop
mov
faddp
hlt
hlt
clc
jg
mov
cwtl
ljmp
xor
stc
mov
stc
lods
mov
test
push
mov
adc
dec
test
imul
aas
cmc
xor
mov
jle
in
cmp
movsb
push
aad
sub
lock
sti
jne
out
faddl
mov
xchg
int3
lds
lock
mov
xchg
insl
lahf
dec
mov
inc
ret
dec
jns
gs
gs
adc
push
push
sub
cmp
cmp
lret
fldl
mov
loopne
xor
cmp
and
xchg
xor
gs
push
sub
xchg
cmp
and
mov
lods
add
fiadds
out
sarb
lods
inc
cs
outsl
adc
inc
in
inc
sub
leave
sub
stos
sub
je
add
xchg
pop
sbb
pop
mov
in
or
ja
xchg
in
das
ret
popf
clc
test
fwait
lods
lds
dec
ja
sub
sbb
aas
xchg
mov
in
ja
sbb
sub
imulb
in
cmpsb
adc
sbb
lret
jae
mov
dec
mov
inc
jl
test
paddusw
cmp
jb
sbb
mov
dec
stos
fwait
idivb
icebp
or
scas
push
lret
in
loopne
adc
adc
sub
sub
popl
lods
xor
sbb
and
ja
dec
ljmp
xor
shlb
imul
add
test
aaa
adc
push
mov
or
pop
imul
ret
sbb
in
push
adc
add
jnp
andb
ret
mov
data16
jg
cltd
add
lahf
xchg
push
loopne
sub
jmp
mov
inc
and
pushf
scas
popf
lahf
push
pop
nop
xor
sub
fmull
leave
push
sub
out
sub
xlat
mov
rcl
dec
mov
push
mov
repz
adc
inc
out
clc
push
sub
lret
test
pop
mov
gs
adc
xlat
call
stos
lret
lahf
and
adc
mov
pushf
ds
dec
lods
pop
add
fs
adc
es
jb
xlat
mov
mov
mov
mov
lods
sub
sbbw
xor
inc
mov
lods
pusha
add
sub
fdivrl
adc
inc
cmpb
add
shrl
rcrl
jae
adc
jne
movsl
ret
pop
pusha
xor
pushf
xchg
ds
xchg
cmp
or
sub
call
nop
ret
mov
cmpsb
dec
scas
arpl
sbb
in
adc
xchg
fsub
mov
ja
aad
xor
repz
xchg
adc
pop
sbb
cmp
sahf
subb
jnp
xchg
mov
addr16
or
jg
mov
mov
in
add
xlat
jecxz
sbb
push
sbb
pushf
je
mov
cli
xchg
push
xchg
mov
fs
and
loop
sbb
ret
aas
sbb
sbb
dec
pop
pop
sarb
rorl
xlat
dec
clc
sub
cltd
or
and
cld
ljmp
or
mov
adc
ljmp
push
orb
outsl
fst
hlt
bound
out
dec
mov
adc
jg
push
stos
mov
jbe
dec
mov
rcr
push
cmp
aaa
sbb
mov
sarl
fs
push
mov
loop
dec
push
xor
aad
mov
cmpsl
pop
and
xor
mov
adc
sub
xor
aas
or
popf
sbb
loope
and
mov
in
inc
push
dec
popl
arpl
push
fldcw
xchg
xor
and
popa
xor
mov
movsl
test
sub
xchg
push
add
out
mov
add
xor
daa
push
fwait
jnp
jne
xor
mov
mov
sti
xor
mov
pop
xor
std
jp
data16
and
pop
nop
mov
adc
notrack
fstpl
xlat
xchg
push
scas
aam
into
xor
shrb
xchg
loop
xor
sub
ret
pop
xor
mov
xor
pop
sbb
cmp
lret
and
mov
daa
xor
ja
imulb
adc
xchg
and
daa
in
xor
mov
test
repnz
xor
das
inc
scas
ror
push
lret
mov
inc
jecxz
sbb
adc
fsubs
test
push
iret
dec
cwtl
jmp
add
mov
xor
and
xor
mov
in
out
xor
adc
sbb
push
xor
test
cmp
mov
int
adc
cmp
stos
addr16
aam
lret
sub
xchg
lock
shll
xor
pushf
in
cmp
sahf
int3
sub
idiv
sbb
mov
jne
rclb
xor
mov
inc
neg
inc
lea
or
xchg
push
test
js
sub
iret
subb
mov
cmp
int3
testl
mov
sti
mov
mov
mov
push
mov
icebp
cmpsl
inc
jae
pop
addr16
test
xlat
hlt
dec
mov
cmp
out
repnz
orl
lcall
into
inc
jecxz
xor
out
test
dec
leave
cld
cmc
push
mov
jmp
dec
sub
jb
pop
out
sub
sbb
in
test
aaa
fucom
int3
push
out
es
jge
subb
mov
xor
adc
enter
xor
out
popa
xor
or
fisubs
add
clc
repz
xor
int
lahf
fstpt
push
out
xor
sub
and
mov
push
mov
stos
ja
mov
xor
mov
decb
lock
fldenv
test
xor
jne
pop
sub
xchg
jo
int3
dec
lahf
testb
ret
push
xchg
in
or
jecxz
rsqrtss
cmp
push
xor
sbb
push
xor
xchg
repz
adc
jecxz
dec
jge
or
xchg
xchg
add
sbb
xchg
xchg
pop
xorl
adc
push
aam
pusha
adcl
fstpt
js
inc
cmc
inc
ss
mov
mov
das
cmp
push
mov
lret
scas
lds
xor
mov
enter
sbb
cmp
xchg
push
sahf
inc
pop
add
sbb
fabs
xor
sahf
stos
mov
xchg
xchg
xor
mov
or
inc
divl
lods
icebp
xor
xchg
enter
mov
sub
mov
bound
xor
mov
fstps
xor
inc
shlb
dec
sub
inc
xor
insl
jno
xor
inc
mov
imul
pop
ret
gs
or
xor
sbb
xor
jp
ret
imulb
cmpsl
sub
xor
mov
add
mov
pop
jnp
xor
shl
mov
xchg
leave
in
or
movsb
jecxz
xor
nop
js
out
popf
cmc
push
xor
inc
inc
sub
movsb
xor
lcall
lret
dec
and
xchg
sub
addr16
int3
cmp
add
adc
cwtl
push
jae
mov
clc
or
dec
ja
negb
cltd
adc
pop
cmp
popf
das
xor
lcall
aam
cmpsb
xchg
in
push
xor
test
leave
inc
lock
sbb
inc
push
inc
and
xor
xor
test
jae
add
dec
or
scas
mov
mov
add
fcoml
addr16
aam
or
popa
andl
mov
rorl
xor
dec
nop
ret
sbb
enter
adc
adc
add
pop
fnsave
mov
cli
cwtl
cmp
mov
xor
mov
push
pop
add
icebp
dec
aas
lods
mov
jp
or
cmpsl
jae,pn
xor
out
popl
addr16
pusha
insl
mov
fidivs
test
mov
out
aad
mov
sub
jmp
jle
push
inc
pop
clc
or
mov
or
xor
mov
push
clc
bnd
and
or
mov
aam
cmp
mov
xor
add
sbb
adc
addr16
out
xor
jne
sahf
adc
aad
xor
add
jge
std
xor
pop
xor
nop
xchg
cmp
sub
push
inc
jge
scas
adc
xor
adc
jg
or
push
lods
mov
mov
xchg
fimuls
jle
pop
loopne
icebp
out
cli
insb
jp
int3
xor
push
shl
and
xchg
popf
xor
adc
in
fucomp
sbb
cmp
push
xor
pop
mov
xchg
mov
cld
push
jge
cld
movsl
clc
pushf
lds
jnp
sub
ds
xor
leave
into
xorl
mov
dec
mov
xor
sbb
pushf
stos
ds
xor
and
loopne
inc
push
or
das
bound
xor
mov
cwtl
dec
xor
sbb
sbb
cmp
push
xchg
jg
cmp
bound
mov
test
pop
scas
dec
shlb
push
xor
and
insb
loopne
and
push
sbb
xor
les
popf
pop
adc
or
shll
dec
and
fucomi
push
push
jecxz
push
hlt
test
mov
push
scas
xor
out
or
inc
xor
xchg
lahf
out
jmp
xor
test
and
sbb
in
hlt
sbb
loop
mov
mov
fldl
ja,pt
adc
mov
addr16
insb
fcomps
sbb
add
fiadds
jp
test
ds
lds
dec
adc
inc
cmp
mov
repnz
mov
add
adc
loop
xor
pop
shll
and
mov
icebp
mov
mov
inc
dec
xor
mov
je
mov
sub
mov
inc
xchg
push
mov
xchg
dec
jmp
xor
iret
lcall
lret
out
and
pop
xor
xor
fnstsw
cmp
mov
jmp
fcoms
xor
repnz
lret
insb
pusha
es
xor
mov
pop
xor
xor
xlat
insl
dec
pop
fs
lds
jp
add
push
xchg
dec
stos
iret
xor
or
mov
pop
xor
inc
or
andl
cmp
negb
pop
negl
dec
cmp
push
dec
repz
pop
mov
fiadds
sti
test
xor
dec
and
push
popf
push
push
add
xchg
stos
call
add
rcr
lahf
imul
xor
pop
movsb
pusha
es
inc
out
in
xor
jp
push
leave
pop
cmc
xor
shrb
clc
sti
and
xor
in
push
mov
xor
std
dec
jb
out
stos
sti
mov
cmp
pop
lret
mov
sbb
leave
sti
testb
pushf
mov
push
or
dec
dec
xchg
pusha
xor
int
aas
cld
jge
pop
movsl
pop
in
imul
push
fs
aam
xor
and
xor
dec
pop
pop
dec
cld
das
adc
inc
mov
pop
push
inc
sti
mov
lds
xor
xor
or
pop
xchg
cli
mov
jo
inc
cltd
mov
xor
stc
mov
lcall
and
iret
repz
mov
icebp
xor
sar
daa
or
xchg
insl
cmpsb
jmp
mov
pop
jg
es
ljmp
sbb
sbb
outsl
mov
fwait
cmp
cmp
rcrb
lods
pop
push
mov
fstps
ja
jns
inc
shlb
cmpsb
icebp
iret
rcrb
aaa
sarb
aad
inc
and
test
jge
push
mov
inc
xchg
pop
sahf
and
jp
out
xchg
jmp
aad
ds
leave
fucomi
std
or
push
adc
movsb
movl
sub
cmp
or
cs
mov
inc
and
outsl
pop
fwait
or
loopne
mov
xor
mov
xchg
shl
popf
dec
sub
add
inc
dec
pushf
cmp
xchg
sub
sbb
push
pop
push
adc
popf
ret
mov
mov
gs
clc
fiadds
inc
sub
dec
inc
bound
stos
gs
jmp
cmp
sbb
add
jae
in
sbb
movsl
ret
push
add
sub
push
sti
adc
push
mov
daa
or
mov
mov
das
xchg
fistl
test
lahf
lret
sub
mov
mov
add
pop
mov
insb
and
inc
out
ret
test
sub
xchg
imul
jmp
je
push
pandn
js
jb
lret
dec
into
shlb
and
pop
test
cmp
sub
popf
pop
jg
sub
pop
imul
sub
lret
mov
pop
pop
inc
mov
cmpsb
pop
scas
sub
outsl
sbb
dec
popf
or
sbb
xor
cmp
mov
jne
aas
fcmovbe
ret
mov
fwait
cwtl
mov
jnp
insl
hlt
push
mov
mov
js
push
sub
loope
ljmp
pop
pushl
push
push
mov
sbb
adc
mov
lahf
cmpb
rorb
and
sti
cmp
xchg
cmc
inc
push
inc
cwtl
mov
sub
cmc
jb
out
fdivrl
sub
in
dec
xor
out
or
adc
mov
xor
icebp
fucomp
cwtl
out
and
insb
adc
mov
pop
add
jnp
decb
mov
adc
ja
fst
mov
xchg
in
cmp
fsubrl
xchg
jg
adc
rcll
clc
cmp
fcmovbe
stos
xchg
mov
rorl
out
dec
push
pop
jns
cmp
xor
or
add
push
xor
push
stos
fnsave
cli
lods
iret
push
ljmp
lock
dec
fdivr
push
lock
out
scas
int3
or
aaa
xchg
ds
pop
mov
and
dec
mov
inc
jnp
mov
jp
out
mov
orb
and
ss
sub
jae
or
cmp
js
sub
pop
enter
stc
roll
jecxz
imul
lock
xchg
lods
mov
sub
or
and
inc
fsubr
xor
xor
lret
fnstenv
add
stos
daa
and
pop
push
lea
adc
leave
push
out
xor
jae
aam
cmpsb
fs
lods
enter
inc
popl
push
hlt
cmp
push
xor
mov
aam
stos
xor
xchg
push
sub
xchg
inc
pop
out
imul
aam
decl
fs
les
adc
dec
adc
fwait
inc
xor
clc
mov
mov
inc
insb
jmp
pushl
cld
iret
mov
mov
jp
repz
into
add
jno
cmp
repz
or
xor
out
out
sbb
cmp
out
push
mov
inc
fstp
shlb
cld
sbb
inc
sbb
in
sbb
decl
sub
insl
sbb
xor
cmpsl
scas
sbb
dec
jae
subb
inc
repz
cli
jg
out
mov
lahf
push
push
je
cwtl
test
mov
out
fstpt
or
cmp
stos
insb
rcrl
les
ja
repnz
or
mov
and
pushf
adc
cwtl
fstp
jns
xchg
icebp
test
add
mov
xor
pop
jp
ret
pop
add
loopne
xchg
dec
test
push
jb
clc
sub
pop
loope
jne
xchg
adc
mov
inc
push
pop
adc
testb
xor
add
xor
mov
adc
and
aas
xchg
out
cli
pushl
faddl
mov
shrb
xor
les
sub
and
stos
nop
repnz
sub
fsub
jne
ds
shrb
push
andb
xlat
and
sarb
dec
ret
sub
aaa
ja
es
call
dec
test
or
xor
add
push
jbe
int3
cld
lds
jae
cmp
adc
xor
pop
out
or
insl
xor
xchg
imull
mov
mov
xor
nop
inc
mov
daa
sub
cmc
psubq
dec
jo
pop
mov
push
ret
jnp
js
xor
mov
out
sub
aaa
mov
jl
adc
cmp
testl
out
or
push
sbb
or
jo
sbb
push
movsl
dec
pop
les
sahf
aas
jb
out
ror
aas
mov
lcall
imul
dec
insb
mov
icebp
bound
sub
push
xor
sti
cmp
leave
es
stos
add
inc
push
stc
stos
xor
fbld
lret
mov
mov
xchg
mov
dec
scas
jo
sub
adc
lods
cmp
fldt
fnstenv
test
adc
push
pop
sub
push
jp,pt
pop
sub
clc
movsb
pop
add
sar
xchg
jmp
add
shlb
rol
or
dec
sub
mov
aaa
popf
and
hlt
sbb
addr16
es
lret
es
sub
xchg
xchg
push
xchg
rcrb
js
addb
mov
stc
js
aaa
jo
or
dec
dec
int3
leave
fiaddl
nop
dec
dec
pop
sub
ret
fcom
mov
or
cmp
in
push
pop
clc
xchg
sub
leave
mov
sub
jns
sahf
and
push
dec
push
in
dec
mov
cmpsl
enter
pop
aad
xor
xchg
xlat
outsb
jo
addr16
jl
or
push
cli
insb
push
inc
adc
and
cmp
push
mov
inc
ret
adc
push
sub
pop
mov
dec
mov
mov
xchg
dec
loop
popa
mov
nop
mov
xchg
push
xchg
add
je
or
push
enter
sub
sbb
out
ja
pusha
sub
test
push
les
jns
test
cli
imul
inc
dec
adc
jp
mov
cld
push
and
out
jp
jmp
push
aaa
xor
aad
sbb
sbb
mov
rol
je
loopne
jbe
sub
leave
pop
fimuls
dec
lret
cmp
jae
cmp
mov
js
adc
mov
js
dec
xor
lea
outsb
fwait
cmc
rcrl
inc
das
leave
lcall
insb
in
lods
outsb
sub
jne
stos
or
sub
inc
jne
daa
into
dec
mov
mov
into
out
aam
jecxz
inc
scas
add
outsl
jmp
dec
lar
gs
lcall
popf
add
inc
push
or
bound
fmuls
imul
mov
push
dec
lcall
jp
cmp
hlt
xor
xchg
mov
add
hlt
fildl
or
mov
test
dec
add
push
into
xor
popa
mov
xchg
in
xchg
outsl
mov
lock
jg
out
cmp
popa
into
mov
pop
mov
add
test
rorl
mov
lods
push
mov
out
mov
pusha
sub
shrb
movsl
bound
lods
push
and
mov
inc
mov
int3
mov
les
insb
andl
dec
mov
xor
bound
adc
sub
insb
outsb
ficoml
mov
leave
sub
push
ret
out
xor
call
cmp
or
in
test
ds
nop
push
aam
cltd
in
into
rcrb
loopne
aas
inc
sbb
mov
fidivs
xchg
push
loop
inc
or
lods
fcoms
outsl
xor
ss
mov
xor
push
lcall
mov
sub
fidivrs
adc
or
sahf
mov
bound
fnstsw
ret
xchg
sub
pusha
jne
mov
xchg
sbb
test
out
sbb
std
and
pop
lods
ret
test
add
repz
insl
push
jecxz
sub
mov
fstpt
mov
jb
out
dec
adc
inc
xchg
loopne
gs
movsl
and
jl
out
jb
mov
pop
adc
dec
sbb
cmp
add
inc
pop
adc
adc
add
cmp
repnz
cmp
cmc
dec
test
mov
jp
push
or
ljmp
flds
or
rorb
sbb
loopne
cmpsb
ficoml
fidivrs
adc
sbb
pushl
push
in
aam
ljmp
or
dec
pushf
ret
lea
or
in
mov
test
fdivp
sub
sbb
shl
fsts
xchg
int3
nop
jb
div
pop
jl
pop
or
add
cld
inc
ror
int3
addl
xchg
dec
push
out
pop
adc
aad
jnp
xchg
jbe
lret
jbe
jno
test
lahf
jnp
push
sti
js
jbe
popf
aas
or
fisubrs
js
jne
bound
add
lret
add
aad
sbb
sub
test
xchg
xor
subb
add
decl
out
aam
cmpb
es
fidivrl
lods
push
sub
jp
ds
cmp
and
inc
push
xor
and
jge
mov
scas
sub
pop
dec
cmp
fadd
jg
jo
les
aas
xchg
aad
ds
rolb
test
adc
sub
andl
xchg
jb
loopne
scas
mov
testl
push
jno
add
insl
add
xchg
push
mov
stos
push
enter
xchg
inc
push
bound
aam
popa
lds
lret
stos
adc
jbe
and
loop
rcrl
xor
mov
mov
and
fmul
in
xor
out
rcll
add
xrelease
push
repz
fisubl
inc
je
fdivl
out
sub
mov
push
pop
nop
inc
das
cmp
dec
iret
cmp
xchg
jne
xchg
aaa
sbb
lret
pop
test
lock
add
and
add
cmp
xor
push
or
or
sti
js
push
or
cmpsb
adc
jno
inc
sbb
pushf
pop
adc
loope
dec
dec
scas
frstor
nop
ret
and
enter
or
mov
mov
dec
fwait
mov
mov
les
cmp
sti
scas
adc
adc
mov
ljmp
jns
jb
lock
rep
and
lds
int3
int3
push
jp
push
repz
outsl
out
shr
add
inc
inc
mov
shl
pusha
sbb
lret
lar
out
push
aaa
lods
push
popa
jns
inc
fistpll
das
sahf
mov
stos
adc
mov
lds
xor
dec
pop
xor
cmp
cld
add
test
mov
pop
fsubrl
sbb
fldt
sbb
mov
xchg
xor
call
dec
cmc
sbb
or
push
rcrb
or
arpl
fisubs
pop
adc
mov
out
jmp
out
mov
sbb
pop
mov
push
test
sub
dec
pop
ss
mov
mov
and
or
aam
sub
std
jnp
jg
out
inc
loopne
lods
and
dec
mov
jg
fs
nop
push
addr16
cmp
in
sub
jle
sarl
mov
test
sub
leave
out
cmp
jmp
mov
mov
and
mov
jg
out
xor
xchg
mov
xchg
inc
jmp
xor
dec
cmp
lods
pop
pop
dec
lea
mov
xchg
jno
stos
push
or
sbb
xchg
lahf
inc
mov
adc
loop
ret
push
ret
lea
sub
std
shll
mov
add
lcall
ficoms
jl
and
in
xor
clc
sub
cmpsb
mov
push
inc
add
rorl
ror
or
jo
cmc
jns
shrb
sbb
sbb
xor
cmpl
xor
pop
lock
imul
fisubl
lret
adc
fwait
iret
jne
sbbb
jle
jge
jbe
jecxz
test
lret
xor
mov
ljmp
fsubp
mov
sub
inc
dec
cmp
mov
xor
sub
pop
sub
xor
lea
jl
xor
aam
adc
add
iret
fnstcw
or
lahf
shll
aaa
xchg
lcall
mov
ljmp
inc
stos
mov
sbb
sbb
orl
insl
push
int3
push
add
fisubrs
movsb
mov
in
pop
fstpl
or
orb
mov
jae
ffree
loopne
in
mov
add
jnp
fnstcw
in
repz
bnd
ds
ficoml
test
xchg
imul
out
and
sub
popa
xchg
inc
icebp
or
pop
push
in
add
mov
shll
je
stos
mov
ret
cmp
into
cmp
out
mov
ret
xchg
int3
add
push
mov
int3
fstl
xchg
lret
aas
adc
ds
inc
jp
dec
int
pushf
cmpsb
es
fidivl
mov
and
jp
outsb
aad
rcll
ja
dec
repz
fwait
cld
aam
cmp
out
addr16
jne
andl
out
sbb
mov
and
inc
cs
mov
mov
jo
stos
push
mov
popf
xchg
mov
sub
movsb
and
add
push
test
ds
in
hlt
aad
cmp
sbb
in
imul
imul
adc
lcall
xchg
mov
lea
jp
incl
xlat
icebp
add
sub
lahf
cmp
mov
or
insb
fldt
xor
dec
pop
mov
aam
mov
add
xchg
lahf
push
cmp
sbbb
sbb
or
fwait
xlat
or
push
push
call
fs
lret
test
rolb
adc
adc
negb
adcl
and
clc
jo
nop
or
jg
push
call
shl
and
add
data16
xor
or
shrb
push
shlb
adc
adc
sahf
pushf
or
hlt
xchg
jp
mov
call
popl
pop
cmp
or
adc
add
or
mov
xchg
and
push
mov
sub
pop
orb
push
out
int3
adc
sub
cmp
sbb
loop
inc
push
xchg
xchg
jl
lret
sbb
sub
inc
stos
sub
sub
xchg
leave
pop
push
loope
or
test
inc
jns
imul
lods
out
sbb
call
into
repz
jbe
outsb
shlb
or
pop
aaa
mov
push
popa
leave
or
or
mov
movb
mov
stc
xchg
xchg
sbb
scas
loop
sahf
cmp
sub
mov
mov
leave
hlt
mov
mov
push
scas
mov
fstp
add
adc
adc
pop
mov
int
repnz
in
stc
and
mov
mov
gs
jp
mov
int
sub
mov
jmp
dec
pop
jo
jo
pop
pop
mov
sarb
adc
jp
insb
into
cwtl
bound
fsts
mov
sti
movsl
and
outsl
mov
mov
sub
fcmovb
or
add
outsl
mov
xor
adc
push
lods
icebp
cmp
sub
jmp
xor
mov
std
outsl
mov
adc
inc
arpl
out
loopne
xlat
hlt
subb
fisttpll
pop
lock
cmp
js
call
sub
es
adc
shlb
xchg
jne
xchg
shlb
gs
fisubl
mov
imul
and
xchg
test
out
sub
aam
adc
lret
je
pop
dec
mov
shrb
mov
cltd
dec
sub
xchg
fldl
adc
sub
push
addb
inc
rcrb
into
mov
aas
out
xchg
enter
xor
std
lds
int
xchg
adc
fyl2xp1
inc
lods
addr16
mov
mov
mov
cmpsb
scas
mov
popf
push
lahf
mov
jne
pushf
test
jb
out
or
iret
jmp
adc
lods
int3
xchg
push
mov
dec
scas
hlt
or
xlat
jb
out
inc
insl
mov
push
mov
shrb
insb
das
fistpll
mov
push
fwait
mov
stc
out
xchg
clc
sbb
fcomps
xor
pop
sub
ret
aaa
aam
and
fildl
add
cmp
iret
sbb
dec
rcr
adc
stos
test
popf
ja
push
push
lods
dec
scas
lahf
lret
popf
push
add
pop
and
or
dec
add
dec
mov
shlb
addr16
xchg
pop
mov
cmp
cmp
loop
shrb
or
pop
fadd
sbb
andb
movsb
inc
dec
aam
insl
clc
mov
push
repz
dec
mov
rcl
xor
fucomip
sub
pop
loopne
jg
loop
insl
lcall
pop
and
push
test
test
insb
into
fnstenv
cmp
dec
or
mov
outsb
lods
stos
add
cmp
insl
call
cmp
outsb
dec
lret
rorb
mov
shrb
pop
hlt
call
icebp
adc
push
jmp
je
xor
xor
addr16
je
leave
push
fidivs
dec
stc
mul
xor
mov
fsubr
cmp
cmpsl
out
repnz
cmpsb
es
aam
sarl
mov
roll
mov
fbstp
sbb
sub
scas
rcll
push
movsl
dec
mov
xchg
sahf
sbb
in
cmp
inc
pop
pusha
mov
pop
mov
addr16
inc
and
mov
add
mov
push
pop
lret
ficoms
sub
sbb
adc
scas
xchg
sub
push
iret
aaa
and
push
jecxz
mov
hlt
pop
mov
sub
sub
wbinvd
in
mov
ret
push
in
sub
fstpt
xchg
xor
ret
push
pushf
fdivs
aas
decb
in
js
and
push
push
xchg
pop
adc
orb
addr16
xor
ds
orb
inc
outsl
sub
inc
repnz
mov
jbe
jl
dec
sub
mov
inc
ds
cld
mov
xchg
dec
push
sub
int
push
aaa
popf
test
das
mov
mov
mov
push
inc
mov
mov
push
insl
push
mov
pop
mov
jo
sbb
mov
xchg
mov
jecxz
cld
mov
call
push
mov
mov
sbb
daa
pop
jge
push
adc
test
into
out
sarb
shlb
jp
adc
push
adc
inc
mov
adc
nop
into
jnp
cs
int
ficomps
lea
mov
pop
mov
outsl
xor
jmp
sbb
xchg
shld
jae
xchg
cmp
lea
sahf
xchg
out
outsl
lock
aaa
pop
add
repnz
push
xor
cmp
ret
aad
mov
jno
outsb
popa
cmp
xchg
or
repz
hlt
filds
inc
sub
xchg
mov
or
aad
sub
scas
pop
mov
sub
data16
popf
fnstsw
ja
mov
adc
lea
test
cwtl
jp
fmulp
cmp
fsubs
out
mov
dec
pushf
sti
les
mov
neg
adc
jp
jne
out
call
inc
push
stc
fbstp
sbb
and
shrl
add
cmp
push
adc
mov
sub
call
ret
adc
ss
movsb
pop
push
or
inc
cmpsb
and
mov
sbb
ss
xchg
sub
jge
push
sub
repnz
popa
scas
mov
mov
fidivrs
pop
push
int3
in
inc
enter
shl
mov
push
xchg
xor
int
or
pop
jb
pop
xchg
rcl
rolb
mov
fucomi
xchg
std
sub
insb
mov
push
push
add
mov
sbb
andb
mov
xchg
stos
ret
xchg
fs
mov
icebp
mov
push
test
mov
test
adcl
mov
pop
inc
in
push
aam
stc
das
mov
loope
in
pushf
or
pop
fmuls
out
adc
sub
xchg
and
mov
ljmp
mov
lret
push
add
aas
in
nop
pop
stos
mov
cli
push
subl
sarb
insb
inc
xchg
add
jns
jne
cmp
call
in
or
dec
inc
repz
les
add
mov
stos
fisttpll
in
and
push
jno
fists
aam
mov
jg
mov
hlt
aam
lea
pop
addr16
cmpb
xchg
fldt
or
outsb
mov
inc
flds
jbe
lods
cld
or
cwtl
sti
rcl
pop
in
sub
fsub
add
mov
adc
pusha
sub
mov
mov
shrb
addr16
ficomps
sub
pop
jb
adc
fdivrl
inc
cmp
pop
sub
xor
add
xchg
fdiv
ds
adc
mov
popa
stos
xor
repnz
in
inc
ss
jne
mov
lcall
jno
enter
andb
ljmp
mov
adc
cmpsb
cwtl
ljmp
not
filds
and
inc
popf
orl
dec
mov
xchg
add
dec
ret
mov
cmpsb
add
in
rolb
inc
es
mov
loope
cmp
or
jne
mov
adc
and
out
sbb
xchg
ret
mov
add
lcall
push
mov
adc
out
jae
and
or
scas
or
pslld
sbb
int
cmp
insl
xchg
imul
sub
xor
aas
mov
add
loope
push
inc
popa
push
mov
xchg
mov
ja
in
mov
psubsw
push
mov
scas
fsts
int
in
mov
frstor
ficoms
imul
mov
push
sub
sub
sub
xchg
mov
pop
push
mov
xor
outsl
clc
stc
jge
fidivrl
cmc
dec
sar
repnz
push
lods
or
insl
ret
pop
mov
adc
sub
stos
lods
pop
inc
clc
ret
shll
and
jecxz
xor
pop
or
jmp
sub
or
inc
jl
jns
arpl
repz
push
pop
mov
or
aam
cwtl
cmp
outsb
call
sub
loopne
push
push
adc
inc
or
in
push
jns
mov
adc
push
pop
fadds
jae
jne
fidivrs
inc
xchg
in
shr
push
sbb
or
push
sbb
jo,pn
loopne
sub
cwtl
loopne
push
pop
jbe
jg
pop
cmc
lahf
mov
xchg
fcmove
adc
imul
sub
sti
add
dec
stc
loopne
jp
pop
or
pop
jo
call
out
loop
inc
cli
or
test
xor
jmp
idivb
shrl
push
pop
xor
xchg
mov
je
and
scas
adc
popf
add
pop
je
js
out
stos
loopne
mov
mov
loop
je
imul
aam
in
bound
cli
xchg
lret
mov
mov
call
cmp
rol
mov
or
repz
or
into
lret
adc
and
popf
jo
test
pop
test
repz
sub
or
pop
jbe
aad
aam
ror
ret
adc
ljmp
and
out
adc
and
jnp
stos
jg
jne
dec
mov
scas
cmp
into
shll
mov
adc
test
or
mov
outsl
out
jmp
or
sbb
cmpsl
or
push
cmp
movsl
xor
insl
cmp
std
out
leave
fsubrl
outsb
inc
xchg
aad
sub
sub
testb
ficompl
add
jb
aam
aam
lods
xlat
scas
adc
sub
rcl
aaa
rorl
cmp
adc
xor
mov
dec
sbb
arpl
ds
mov
fs
mov
add
jnp
aaa
inc
shlb
push
aaa
int3
or
sub
aad
xlat
addr16
push
rcll
lret
jle
in
arpl
dec
dec
xor
dec
sub
test
jne
call
pop
test
xchg
and
jo
mov
sbb
loope
pop
pop
mov
es
mov
aad
sub
fld
nop
push
in
jecxz
cmp
jno
test
ss
mov
jae
lahf
pushf
ss
push
xchg
ret
repnz
or
and
rclb
mov
shll
jp
les
xchg
paddb
ja
jb
cmp
lds
push
mov
lods
lret
out
movsb
jp
mov
inc
and
in
clc
in
sbb
in
adc
inc
push
fdivrs
xchg
and
dec
or
dec
or
nop
pop
xor
push
jmp
xchg
push
mov
in
stos
sub
cwtl
mov
arpl
mov
insl
es
ljmp
loopne
mov
push
fildll
cltd
ja
pop
xchg
add
lcall
fisttpll
and
pusha
mov
iret
sbb
and
addb
mov
dec
sbb
xchg
ret
fdivrl
jle
lea
and
in
repz
js
aaa
ret
or
mov
out
out
aad
mov
adc
orb
stos
aaa
outsl
iret
dec
imul
push
int3
rclb
adc
subb
ret
xchg
xor
pop
add
test
dec
pushf
test
shll
shll
lea
fstl
sub
orb
cwtl
stc
movsb
aam
pop
mov
adc
int3
inc
jg
adc
sbb
pushf
jmp
movsl
sub
mov
popf
push
jmp
sub
xor
xchg
stos
aam
lods
xchg
dec
dec
push
cmp
or
mov
or
push
jns
mov
cmpsb
repz
jl
adc
neg
push
push
clc
jbe
shlb
clc
sub
in
pusha
pushf
pop
ret
lea
push
in
sub
mov
mov
sub
cmpsb
repz
mov
in
cmpsb
pop
ss
adc
pop
imul
jae
xlat
mov
ds
sub
jo
cwtl
bound
adc
jb
ret
outsb
and
clc
push
data16
aam
in
daa
xchg
in
jl
mov
lret
dec
xor
mov
call
dec
pushf
ret
push
mov
ja
pop
sbb
cld
or
push
add
fdecstp
pusha
lcall
sahf
xchg
in
out
mov
adc
fidivrl
ficoms
xorb
mov
outsb
adc
ds
cmp
and
insl
ja
mov
jo
mov
push
dec
xchg
dec
push
xchg
push
mov
or
jae
mov
test
aad
aaa
jle
push
cld
xlat
in
and
ret
insl
jge
das
adc
xchg
pop
push
notl
push
push
or
pushf
arpl
out
cmp
hlt
sub
shll
adc
cmp
loop
xor
sub
xor
bound
cmp
je
jmp
dec
push
pusha
push
cld
jbe
xor
ds
in
push
sub
scas
in
mov
fidivrs
adc
jmp
ret
fisubrl
xchg
lcall
push
int3
outsl
adc
xchg
rorb
adc
lods
pop
cld
pop
cmp
test
push
dec
dec
mov
jo
popf
mov
or
das
jg
sbb
mov
xchg
adc
loop
scas
cmpsl
into
daa
in
push
push
jb
push
mov
int3
xchg
mov
dec
adcl
je
cwtl
test
iret
sub
mov
sub
push
cwtl
mov
mov
jle
je
cmp
fs
inc
stc
out
cmp
push
ja
xor
or
dec
ss
push
cmp
push
ja,pt
fcompl
notb
scas
cmp
dec
inc
fiaddl
cmp
fstps
jo
ljmp
lock
out
int3
popa
adc
xchg
or
pop
and
test
jmp
mov
add
ficomps
push
jp
loopne
ret
bound
psubw
daa
lock
rcll
fnstsw
push
mov
hlt
cwtl
jbe
cmc
add
and
jae
pop
sbb
jg
shll
cwtl
dec
aam
pop
int3
in
adc
mov
push
xchg
lods
xchg
movsb
dec
inc
test
mov
or
inc
add
xchg
pop
shrl
popf
jae
and
ret
adcb
sbb
mov
orl
shll
test
xchg
shlb
fildl
or
cwtl
cmp
lret
xor
cmp
mov
mov
xlat
jg
adc
mov
and
fdivrp
int
cmp
rcrl
rorb
mov
mov
imul
sbb
dec
adc
xchg
mov
lods
xor
sti
jmp
cmp
lock
jne
test
test
lods
ret
repz
in
insl
call
es
push
ret
out
rcl
shl
xor
mov
cmp
lahf
pop
adc
mov
mov
lcall
pop
lea
fnstcw
sub
push
sub
jbe
cld
cmp
mov
fwait
mov
sub
shll
lahf
dec
add
fcompl
imul
and
mov
or
lret
sbb
sbb
xchg
leave
push
sub
fldenv
dec
push
bsr
xor
lea
lahf
push
mov
inc
ror
fcoms
jbe
ja
push
sahf
push
adc
jge
push
pusha
pushf
push
jg
fcoml
ss
cmp
cli
push
cld
sarb
mov
mov
imul
in
pushf
pop
push
bound
jge
psllq
jns
jp
mov
and
push
lcall
push
cwtl
in
mov
insb
dec
loopne
out
push
or
push
pop
cmp
sbb
adc
out
shrb
or
cs
lods
int
imul
mov
iret
sbb
mov
mov
cmc
imul
in
fdivl
pushf
xchg
cmp
adc
hlt
cmpsl
hlt
sbb
aam
insb
subb
xor
call
test
xor
adc
pop
or
es
pop
xor
imul
add
sub
roll
mov
int3
adc
sbb
lock
mov
cmpsl
xor
cs
xchg
jl
inc
jne
pop
aam
out
add
pop
cld
fidivrl
lock
mov
xchg
fnstsw
mov
lea
sub
and
jl
fcomi
add
mov
into
lds
dec
loope
mov
adc
in
dec
sbb
push
jnp
push
into
lock
stos
aam
cwtl
mov
or
mov
int
fisubs
xor
add
xchg
push
mov
inc
orl
rol
ficoms
mov
call
mov
sbb
idivl
out
aam
negb
mov
jo
and
inc
fsubrl
loop
aaa
pop
and
or
dec
add
or
pop
push
xchg
sub
sub
jb
hlt
mov
inc
xor
jecxz
xchg
movsb
or
mov
dec
jp
mov
leave
pop
xor
into
ss
cmp
xchg
shl
sub
mov
add
insl
lcall
ss
or
jecxz
push
andb
jo
out
sub
data16
and
inc
mov
adc
sbb
xchg
or
cmp
loope
xchg
mov
cmp
pushf
mov
jp
mov
aas
mov
outsl
cltd
imul
inc
push
in
inc
mov
shrb
add
pop
data16
fidivs
ret
mov
mov
arpl
in
mov
mov
jnp
jp
xor
mov
in
adc
sub
adc
imul
std
xor
out
and
adc
pop
inc
xor
mov
inc
sahf
xor
aas
adc
xor
or
pop
jg
hlt
pop
or
cmpsl
adc
push
into
sub
roll
data16
xor
xchg
pop
jge
push
push
xor
xor
movsb
lea
sub
std
lcall
orb
xor
xor
xor
push
stos
movsl
dec
jae
xor
jmp
adc
add
and
sub
push
mov
jmp
add
dec
add
xor
inc
lods
xchg
fcmovnu
pushl
rclb
sbb
inc
xor
data16
lcall
call
stc
and
and
dec
jno
outsb
push
sub
xor
cmpl
xor
xor
push
mov
in
mov
mov
push
xor
adc
nop
movsb
mov
push
sub
sub
sub
cli
mov
xchg
jg
push
lret
sbb
jle
jae
in
add
cmp
mov
jl
pop
js
xchg
scas
hlt
lahf
test
in
add
pushf
xor
rolb
inc
dec
add
xor
xchg
je,pt
xor
push
adc
xor
dec
cmpsb
fidivl
xor
cs
sub
or
xor
cmpsl
mov
inc
into
cmp
test
je
dec
or
push
add
add
call
out
xor
pop
fimuls
sbb
pop
je
add
xchg
cmp
mov
inc
cs
shll
inc
mov
adc
xor
fwait
mov
sbb
es
and
aas
or
out
pop
xchg
push
xorl
sub
das
fistpll
insl
xor
dec
dec
imul
inc
xor
scas
sbb
xchg
sahf
rol
mov
inc
mov
mov
xor
aaa
jne
cmp
mov
mov
xor
jmp
inc
orb
sti
and
mov
testb
ror
pop
add
jmp
push
repnz
iret
sbb
mov
dec
adc
and
xor
out
inc
mov
leave
cwtl
xor
adcl
lret
mov
shll
adc
testl
imul
lods
adcb
aas
push
mov
sbb
lock
pop
jecxz
lret
pop
sub
mov
nop
cld
pop
jge
fwait
inc
aam
lods
mov
cltd
repz
sbb
in
xor
and
test
pop
inc
stos
push
sahf
cs
jno
push
mov
add
sbb
lods
cld
cmp
mov
std
or
mov
sub
lods
xchg
xor
fidivl
outsl
sub
jbe
xor
das
dec
lahf
outsb
fnstcw
add
lock
mov
xor
jge
adc
out
in
rcr
pop
sbb
lock
xchg
pop
jo
xchg
xor
xor
test
or
dec
sbbl
xor
mov
repz
cmpsb
icebp
fwait
arpl
pushf
and
hlt
dec
movsl
dec
jo
mov
pop
sbb
pushl
mov
fwait
adc
cmp
je
inc
call
adc
sub
es
sbb
xchg
mov
in
xchg
stos
loope
lcall
addb
cmpsb
leave
add
sbb
push
adc
cmp
sub
mov
sub
xchg
fisttps
js
sub
repnz
sub
dec
cli
loop
jp
mov
pop
shrd
xor
push
sbb
adc
xchg
ficomps
int
es
mov
nop
imul
out
jae
add
xor
mov
fmull
movsb
sbb
fucomi
sbbl
and
add
dec
incl
pop
mov
adc
cmp
lcall
xor
test
pushl
xchg
pop
xchg
pop
pop
dec
and
clc
cmp
xchg
sbb
sti
push
mov
std
add
xor
repnz
jnp,pt
mov
aas
aaa
lahf
sbb
mov
xchg
and
jno
sbb
ret
cmpl
adc
jno
lods
push
xor
dec
mov
push
xor
dec
mov
std
daa
push
inc
xor
push
sti
or
fiaddl
inc
push
dec
pusha
loope
mov
mov
xor
imul
jmp
push
aas
push
xor
fisttpll
xor
mov
sbb
xor
dec
repz
mov
shr
je
xor
sbb
dec
out
xor
lds
std
and
pop
movsl
xor
push
ja
out
popf
adc
imul
xor
jl
sbb
js
pop
mov
mov
xchg
mov
dec
loop
mov
or
loope
sarb
jns
enter
mov
xor
dec
pop
fdivrp
stos
add
push
sub
push
je
insb
movsb
retw
test
pop
or
das
push
cs
lret
mov
popa
data16
mov
mov
push
outsl
stos
out
sbb
ja
or
mov
cwtl
xor
adc
cmp
pop
neg
arpl
dec
iret
xor
push
xor
adc
mov
data16
sbb
inc
mov
mov
push
in
and
subb
clc
pop
pusha
mov
lret
or
mov
push
jp
xchg
push
push
inc
aam
test
cmp
sbb
lds
stos
js
inc
xlat
fisubrs
shll
or
xchg
mov
negb
pushf
pop
xor
sahf
in
sbb
add
xor
or
test
test
xor
xorb
pop
push
in
loopne
dec
lahf
add
divb
sysexit
lret
inc
jns
ret
xor
xchg
cltd
add
cmp
xchg
push
movsb
cli
or
xchg
jecxz
xor
ss
push
rcll
out
insb
xor
mov
inc
test
xor
mov
pop
cwtl
xor
mov
cld
mov
dec
cli
cmp
mov
shlb
ja
clc
sub
popf
in
lret
and
jb
mov
roll
adc
fmuls
xchg
xlat
loop
sub
xor
lea
cmp
movl
out
inc
cmpsl
adc
sti
xor
stos
fucomip
ss
aam
sti
xor
jle
fsubrl
lret
xchg
mov
cmp
mull
jmp
adc
in
fisubrl
xor
xchg
in
mov
mov
xchg
pop
push
ss
cmp
push
js
repz
clc
movsb
dec
xchg
xor
adc
jo
xchg
cmc
pop
jge
les
cli
jmp
mov
xor
mov
and
pushf
lods
bound
lret
push
pop
in
sbb
mov
pusha
jge
mov
xor
in
pop
movsb
call
inc
lods
xchg
dec
mov
insb
out
test
sarl
and
mov
test
or
xor
xor
xorl
inc
push
lods
push
mov
xor
in
call
xor
das
mov
ret
push
fcmovb
imul
movsb
and
stc
out
xchg
xchg
lea
fistpll
xlat
rolb
mov
lret
mov
inc
pop
xor
je
scas
push
mov
cli
pop
sahf
push
inc
icebp
mov
in
loopne
fcmove
adc
push
xor
nop
test
loopne
jmp
adc
jne
movb
fnstcw
je
xchg
lcall
clc
or
xlat
lea
cli
inc
add
or
popf
daa
test
icebp
mov
es
out
lods
xor
mov
add
xor
mov
outsb
cmp
pop
loop
push
jnp
push
and
shrl
in
sbb
mov
mov
pop
push
in
jbe
gs
sbb
ret
pop
add
adc
pop
imul
dec
sub
out
gs
aas
test
cmp
loop
dec
dec
and
pushf
push
push
into
jp
jp
shrl
cmp
and
stos
imul
and
lds
sbb
adc
lods
xchg
xchg
repz
mov
scas
sub
sbb
push
daa
scas
cwtl
cmpsb
xor
test
inc
push
pop
out
add
sub
pop
ret
or
mov
cs
aaa
jno
out
pop
mov
xchg
xchg
pop
ret
xchg
jo
inc
cwtl
fnstsw
das
fidivrs
dec
hlt
in
sub
xorl
mov
or
data16
pop
outsl
push
push
jmp
ljmp
jecxz
scas
mov
insb
mov
pop
andl
push
mov
or
adc
pop
push
dec
aam
idiv
sub
cmp
cli
dec
test
ds
and
cmp
push
bnd
enter
dec
cmp
clc
shl
rcl
xchg
add
pop
fs
in
and
nop
pushf
jne
mov
push
cmp
popf
faddp
rcrb
pop
push
fwait
pop
or
shrb
push
sbb
insb
in
mov
fdivrl
and
shlb
xor
imul
or
hlt
push
inc
out
rcll
mov
rolb
stos
sub
mov
sahf
jno
lock
cmp
add
inc
inc
data16
les
pcmpeqb
jp
ret
adc
cmp
dec
sbb
sub
negl
dec
lret
dec
in
mov
or
xor
jge
fisubrs
popf
xchg
xor
cmp
sub
outsl
je
sub
jne
imul
ret
and
lods
loopne
jmp
ljmp
aas
bound
int3
pop
jnp
cmp
cs
dec
mov
sub
push
xchg
or
sub
sub
lret
fildll
popa
popa
aas
lock
rorb
jae
or
mov
cmp
and
adc
xchg
ljmp
mov
mov
push
jg
xchg
daa
lods
xchg
arpl
sub
pop
mov
jmp
cmp
sub
pop
imul
bound
mov
xchg
imul
mov
jo
shlb
push
add
imul
sub
test
rcr
xchg
lretw
sbb
dec
in
lret
fcmovbe
ja
out
dec
jge
std
add
inc
sbb
shll
sar
or
jmp
add
jg
es
lret
xchg
aam
mul
dec
gs
inc
adc
xchg
imul
test
fistpl
adc
sub
mov
pop
xchg
ljmp
dec
pushf
pop
ret
xchg
mov
loope
pop
fs
add
clc
imulb
loopne
sub
sub
add
mov
loopne
push
mov
and
lahf
jmp
mov
cmc
dec
mov
jo
movsb
cmc
add
mov
or
lret
push
dec
ss
mov
jge
loope
daa
or
nop
repz
loop
fcoml
mov
lods
or
lret
jo
es
js
les
add
in
cmp
jo
aam
fcom
repz
pop
adc
lods
repz
insb
mov
dec
jae
jle
imul
cli
lods
iret
shll
ds
jle
int3
or
fwait
repnz
nop
push
ret
arpl
jbe
jge
jne
xlat
xor
inc
hlt
lret
dec
jns
cmp
push
xchg
mov
sti
out
xchg
dec
mov
fsubrl
and
arpl
add
lahf
dec
cmp
test
dec
shll
xchg
hlt
cmp
mov
popa
stos
xchg
das
cmpsb
out
insl
jp
lcall
imul
inc
aaa
push
cli
jne
inc
mov
divb
lods
adc
ret
mov
bound
or
sub
and
jge
ss
daa
xchg
sub
je
mov
push
sahf
clc
cmp
and
testb
xchg
sbbb
sub
sahf
xlat
in
loop
jg
faddl
sbb
add
imul
inc
mov
loop
repz
and
xchg
pop
fnstenv
xchg
sub
sub
push
cmp
push
fbld
push
int
or
ss
test
aas
mov
sbb
inc
xchg
adc
mov
inc
jmp
xchg
fsubr
cmp
mov
cmp
push
pop
push
or
icebp
popl
sarb
outsb
popf
je
int
enter
sbb
sub
mov
stos
lret
add
lcall
in
pop
inc
mov
lahf
sbb
push
insl
stos
push
sub
lods
mov
dec
add
inc
xchg
addr16
push
cmpsb
jae
push
rcll
ja
mov
repnz
push
gs
daa
out
daa
cmp
rol
jp
sbb
das
cli
and
jl
fsub
mov
push
adc
push
sub
aad
sbb
sub
popa
inc
jmp
cmp
pop
cmp
loopne
sarb
pop
in
les
add
frstor
jnp
pop
stc
mov
test
mov
jbe
push
adc
ljmp
test
cli
or
pop
push
bnd
adc
fs
call
scas
adc
xor
jp
inc
dec
loopne
in
push
testl
inc
cmpsl
clc
xchg
jle
mov
inc
sahf
adc
inc
dec
or
aam
cmp
xchg
cwtl
xor
mov
out
push
cmp
daa
test
sbb
aam
add
les
adc
xor
push
push
adcl
sbb
mov
add
mov
lret
mov
xor
insb
mov
push
popf
jl
test
aaa
shrl
adc
sub
rcll
xchg
scas
and
cld
addl
cmc
dec
dec
mov
iret
sbb
aaa
xchg
adc
mov
lods
fimull
or
push
adc
fstpl
ljmp
out
jne
xchg
jle
iret
call
leave
push
imul
cmp
mov
loope
xchg
repnz
jp
aad
mov
fsub
les
push
andl
imulb
scas
dec
jae
lcall
adc
je
and
sahf
sbb
popl
cmp
mov
call
mov
sarl
adc
mov
les
fildll
xlat
mov
mov
push
mov
xchg
jl
add
cmp
lods
bound
fldenv
fistl
pop
fdivp
cmp
or
xchg
xchg
mov
and
cltd
or
les
xor
add
aam
xor
jl
jb
into
and
iret
rcll
mov
imul
leave
sub
add
or
enter
jg
ja
fsubl
daa
pop
xor
fisubrl
fdivs
jle
or
hlt
sub
mov
nop
jmp
les
jp
jl
dec
mov
pop
mov
push
and
hlt
call
xchg
mov
jge
dec
rorl
lock
stos
lret
cmp
cwtl
jno
push
sti
arpl
push
pushl
pop
out
xor
leave
cmp
pop
xorl
loopne
and
xchg
icebp
inc
dec
adc
add
daa
pop
xchg
mov
mov
pop
enter
sub
adc
jno
arpl
cmpsb
pop
lods
ds
stos
pop
inc
xlat
cmp
sbbl
in
lret
lods
dec
sbb
jge
inc
jnp
cli
xchg
bound
push
call
jg
sub
mov
test
xorb
mull
dec
sahf
jg
jo
or
xchg
or
sbb
andl
mov
or
and
cmp
enter
fwait
scas
cli
jb
mov
xchg
inc
add
inc
mov
mov
daa
fsubl
xchg
sbb
sub
pop
fdivrs
xchg
push
jl
cwtl
addr16
ljmp
mov
jb
push
shrl
sub
in
or
xor
int3
mov
test
subl
stos
xchg
addr16
fstpt
rcrb
cld
lods
stc
repz
sbb
out
out
mov
push
xchg
cmp
xchg
dec
arpl
and
inc
das
out
fnsave
mov
cmp
jg
lock
inc
ffree
or
ljmp
data16
mov
test
fldenv
cmpl
shlb
in
lods
lret
aad
popf
inc
xorb
xlat
loop
out
push
jo
femms
sub
lcall
outsb
dec
cmp
lret
cwtl
and
lcall
lahf
xor
rcll
mov
cmpb
lahf
leave
pop
xchg
add
push
jle
cmp
pop
enter
add
xlat
mov
mov
aam
maxps
pushf
gs
jae
mov
cwtl
gs
std
add
push
into
adc
xchg
or
cmc
jmp
xlat
cmp
dec
and
sub
rcr
lcall
jne
sti
out
orl
pushf
mov
imul
jmp
cmp
and
adc
mov
testb
fs
mov
mov
movsl
inc
adc
add
ret
pop
xor
mov
cmp
xchg
inc
lds
inc
sbb
adc
dec
fmuls
pop
mov
rcrb
or
cmp
xor
pop
ror
loope
cmp
loopne
cltd
in
out
pop
mov
cmc
xor
or
add
cmp
rcll
jne
push
rcrb
push
in
outsb
test
cltd
sub
xor
mov
mov
ljmp
jbe
xor
add
flds
imulb
push
lods
and
inc
cmc
lcall
test
jnp
jbe
outsl
int3
clc
hlt
ror
in
stos
jmp
dec
adc
dec
mov
enter
ss
les
mov
dec
sub
popa
jp
push
jb
cmp
inc
or
fimuls
cmpsl
aad
xchg
and
mov
sbb
xchg
pushf
cmc
push
xor
adc
insl
lods
sbb
lds
fwait
sub
stc
xchg
stos
stos
cmp
inc
mov
shlb
lds
loopne
ds
sahf
ret
jne
pop
js
xchg
cmc
mov
or
sbb
scas
cli
add
shl
pop
repz
dec
ss
mov
imul
in
xchg
sbb
push
mov
jbe
loope
fcmovb
ljmp
aaa
outsb
fs
adc
loope
mov
xor
mov
negb
aam
scas
add
call
jmp
push
in
cmp
cwtl
pop
jnp
insb
hlt
imul
cmp
ljmp
sub
pop
stos
pop
popf
dec
adc
cmp
stos
hlt
and
pushf
sbb
fsubr
outsb
aam
mov
out
imul
push
sti
mov
xchg
dec
fmul
cld
and
test
das
xor
or
inc
clc
push
adc
scas
mov
fsubrs
add
call
jns
arpl
push
scas
cvttsd2si
pop
mov
mov
mov
jge
aad
sti
in
adc
sbb
lods
push
jns
jl
popf
xor
jo
inc
cmp
pushf
jne
pop
out
movsb
jne
loope
mov
out
lds
inc
pop
dec
or
sub
fistl
adc
shlb
adc
inc
push
out
push
mov
adc
call
xchg
daa
dec
sub
lea
add
into
fisubs
cmp
scas
mov
sarb
push
insb
rcll
jle
jl
test
jge
repz
sub
cli
mov
xchg
imul
add
dec
dec
cmp
xchg
mov
mov
sbb
cmovno
cmpsl
cmpsb
cs
mov
sbb
nop
mov
adcb
cmc
and
xchg
jbe
sti
xor
std
lods
jecxz
test
lods
or
fstpl
dec
add
in
les
testl
call
leave
outsb
or
lea
stos
jge
pop
mov
jecxz
push
dec
pusha
lahf
or
inc
fnsave
testb
enter
stos
mov
fcmovb
jp
pop
testb
adc
popa
mov
adcl
ljmp
mov
rcll
adc
dec
inc
and
jecxz
out
mov
dec
outsl
into
inc
in
insl
xor
pop
xlat
jp
rclb
ja
dec
sub
inc
rcll
jg
loop
jbe
sarl
jnp
lock
leave
or
sbb
lret
in
inc
test
jmp
xchg
cmp
jns
mov
sub
xor
gs
aam
and
cmpsl
xlat
inc
sbb
addl
jbe
jns
lea
mov
mov
hlt
call
mov
jle
push
push
lods
xor
pop
cmpsl
cmp
add
popf
aad
arpl
sbb
test
and
mov
pop
mov
loopne
adc
test
dec
adc
sbbl
cmc
in
aam
mov
dec
mov
or
in
sbb
lods
popf
divb
les
mov
mov
rorb
loope
in
pop
dec
lods
sti
dec
sahf
jae
pop
adc
jle
adc
mov
xchg
inc
cmp
out
push
push
jbe
cltd
leave
imul
dec
pop
mov
or
sub
in
adc
jne
daa
adc
cmp
cwtl
gs
jl
mov
jne
or
pop
into
pusha
jb
faddp
add
adc
mov
pop
dec
or
fwait
stos
std
jo
subl
stos
popa
sub
add
imull
aaa
hlt
sub
int3
inc
test
popa
sbb
jne
jl
aaa
add
or
mov
xorl
insl
shlb
adc
fsub
mov
out
bound
adc
rcrl
lock
mov
cmp
push
and
jmp
mov
sub
outsl
mov
pop
or
call
insl
mov
cltd
das
xlat
in
cmp
or
xor
lahf
fwait
rcl
dec
je
or
call
mov
or
add
jle
add
pop
pusha
out
bound
incl
scas
in
sub
jle
stos
push
std
loop
out
int3
pusha
adc
out
dec
xor
dec
les
xchg
cwtl
push
and
sub
arpl
inc
mov
and
adc
cmp
mov
adc
mov
aaa
xor
sub
cmp
inc
mov
mov
or
stc
aam
roll
dec
sub
sbb
icebp
push
adc
adc
jp
test
xlat
sub
cmp
sub
push
mov
pop
scas
nop
jo
cmpl
xor
dec
fdivrl
mov
imul
xor
iret
lds
xor
loop
jg
mov
mov
fwait
aam
movsl
jmp
lea
inc
in
ds
mov
sahf
sbb
pop
shll
mov
mov
or
dec
xor
mov
lods
dec
cwtl
sub
cmpl
adc
or
jle
cmp
insb
dec
jmp
shlb
add
inc
jecxz
xor
je
xor
fs
addr16
push
xor
jae
shlb
andb
sbb
in
cmpsl
push
lock
js
push
lahf
xorb
inc
insb
cmpsl
repz
es
lock
and
lret
sbb
popa
scas
and
xor
test
das
test
scas
xor
xchg
stc
pop
sub
shl
je
pop
sub
jno
xor
cli
in
rclb
add
xor
loopne
sub
ret
adc
cli
outsl
call
sbb
in
inc
jne
pop
xchg
sbb
call
jg
sbb
imul
hlt
int
out
inc
imul
lahf
push
pop
mov
cmpl
mov
mov
arpl
jo
xor
icebp
cmc
dec
ja
xchg
or
imul
xor
sub
es
cld
cmpsl
or
stos
dec
sub
test
fwait
jecxz
xchg
adc
mov
pushf
test
push
call
in
xor
pop
sub
test
cwtl
pop
jbe
mov
out
xor
sbb
add
insb
sub
sbb
xchg
scas
push
push
xor
sub
pop
sbb
out
push
inc
xchg
in
loope
push
rcll
hlt
popf
sbb
pushf
push
inc
cli
cmc
xchg
jmp
imul
cld
lcall
push
movsl
loopne
ss
adc
into
push
pop
xor
das
lea
sub
sbb
notl
mov
or
push
mov
pushf
adc
repnz
lcall
mov
mov
xor
pop
es
jge
sahf
sub
inc
and
adc
xlat
xor
clc
sbb
popf
push
divl
xchg
cltd
or
push
push
leave
clc
push
or
inc
popl
xor
jns
and
clc
jp
mov
insl
xor
clc
mov
nop
fsts
xchg
and
xchg
xchg
je
mov
xor
sub
in
cmp
jmp
movsb
pusha
adc
pop
lods
mov
push
icebp
repz
dec
fs
mov
in
adc
rorb
or
mov
xor
xor
lods
inc
xor
add
sahf
cli
test
xor
dec
unpckhps
aaa
mov
pop
lret
mov
in
popf
lods
adc
das
sub
cltd
in
int
js
in
jl
inc
sti
pop
mov
pop
dec
xchg
adc
mov
test
cld
lea
add
cli
fsubl
and
push
mov
dec
cltd
xchg
pop
fptan
and
mov
outsl
push
test
adc
jge
cmp
and
or
test
hlt
adc
std
out
out
leave
dec
hlt
xchg
gs
and
dec
cli
cmp
mov
mov
or
mov
lahf
add
stos
push
ret
test
add
popa
lea
adc
aam
pop
call
or
fs
in
outsb
or
sti
hlt
cmpsl
arpl
and
fistps
adc
sarb
xlat
stos
mov
loopne
sahf
xor
sub
jb
jnp
cmovle
test
xchg
test
stos
cmp
aaa
lcall
mov
mov
cmp
xorb
xchg
popf
call
rorl
in
fdivrs
cmc
mov
addl
pop
aas
sbb
sub
gs
xchg
outsb
push
pushf
fwait
insl
xchg
aas
into
fsubrp
data16
iret
push
imul
loop
adc
ret
iret
or
mov
mov
adcb
xor
fisubs
loopne
dec
cmpsb
es
push
sub
cmp
lds
xor
int
rcll
movsb
mov
daa
lahf
mov
les
xchg
cld
cli
cs
jbe
imul
leave
je,pt
stc
mov
call
cmp
ss
test
stc
icebp
cs
ret
mov
xchg
jb
adc
cmp
dec
cwtl
jl
xchg
or
sub
cs
jne
adc
ja
jg,pt
outsb
push
ja
ljmp
sub
dec
pop
in
in
int3
lods
cltd
add
jge
ljmp
imul
or
mov
aas
push
adc
dec
fisttpl
arpl
pop
std
test
sub
in
mov
dec
and
cwtl
xor
sub
sub
mov
cmp
int3
out
or
cmp
sub
stc
lret
jg
popl
mov
ss
test
cmp
sub
jo
or
add
mov
movsb
sub
outsl
push
mov
and
pop
movsl
cmp
pop
sub
sbb
call
cmp
cltd
ljmp
fisttps
cmp
cli
mov
jo
xchg
pop
or
in
mov
mov
and
test
mov
stos
out
shll
mov
xor
mov
aam
mov
jp
cmp
je
lock
jns
mov
mov
negl
cmp
sub
lret
xchg
pushf
fidivrs
aad
or
fimuls
or
add
push
pop
repnz
f2xm1
mov
aas
push
mov
andl
decl
or
adc
jg
int
cmp
rep
pop
je
mov
mov
lcall
enter
enter
xchg
cmp
mov
clc
and
mov
cmp
ret
xchg
pop
fldt
cld
jns
stos
or
dec
mov
lods
or
pop
xchg
mov
mov
jo
iret
js
mov
push
sub
mov
nop
sub
mov
aas
adc
ja
insl
and
incl
jo
mov
cmpsl
aam
scas
sarb
jbe
cwtl
push
jbe
cltd
xchg
into
adc
scas
or
test
aaa
mov
out
in
dec
adc
pop
mov
or
xchg
daa
inc
fildll
stos
mov
adc
outsl
push
mov
cmp
inc
ret
mov
ds
dec
js
pushf
pop
jl
loopne
int3
lock
xchg
inc
mov
mov
insb
adc
lcall
lea
mov
lahf
cmp
dec
test
in
add
mov
push
inc
mov
sub
inc
outsl
adc
mov
addr16
icebp
jns
and
add
lods
stos
xchg
std
sub
cmpsl
mov
mov
mov
in
add
imul
jne
mov
iret
std
xor
mov
sbb
fs
pop
aad
and
test
jmp
and
scas
ds
xchg
mov
lahf
jmp
add
sahf
lret
cmp
addb
jecxz
fnstcw
ret
sub
push
pop
pop
xchg
call
adc
mov
adc
into
jb
or
scas
outsl
mov
fstl
jge
out
mov
adc
ffree
fwait
and
popf
push
add
mov
enter
add
sahf
xor
pop
or
dec
out
ss
add
and
rorl
repz
add
mov
push
shl
xchg
cmp
mov
rcrb
fwait
gs
cmp
lods
cmp
push
jnp
cmp
sbb
or
pop
daa
and
jno
mov
pop
int3
mov
shlb
jae
inc
lock
sub
aas
aam
pop
cmp
inc
sub
sbbl
sub
and
fstpt
ss
pop
xor
outsl
add
es
fadd
gs
sub
mov
sub
imul
jle
in
das
pop
roll
mov
nop
push
scas
out
sub
xchg
sub
aad
xchg
inc
out
sbb
pusha
movsb
js
cwtl
mov
jnp
scas
mov
pop
sub
xchg
outsb
push
stos
ret
dec
xchg
push
xchg
sub
dec
pop
or
sub
in
jb
in
stos
ljmp
jo
xchg
push
cmp
jbe
ret
cmp
mov
lcall
nop
sub
push
subl
mov
cmp
or
mov
fisttpll
xchg
test
lods
add
jo
sub
lcall
leave
popa
clc
pop
jp
xorl
or
cmpsb
sub
mov
mov
std
int3
pop
jle
push
lods
les
or
sbb
cmp
sahf
jns
stos
scas
jno
jp
das
stos
addb
ja
lods
sbbb
addr16
and
daa
mov
inc
xchg
pop
gs
popf
fiaddl
dec
out
cmp
push
cmp
mov
fs
mov
sub
pusha
mov
jb
push
stos
dec
icebp
clc
in
cmp
cmp
or
and
subb
les
lds
in
out
ljmp
inc
hlt
test
aad
jb
mov
pop
or
sbb
mov
mov
ja
push
sbb
fwait
es
adc
push
out
jmp
mov
nop
sub
pushf
sub
cld
lods
stos
rorl
fld
push
cmpsb
negl
or
es
out
or
add
mov
into
mov
inc
add
cld
icebp
enter
dec
dec
jbe
add
xchg
jae
aam
add
call
xchg
lods
or
repnz
xchg
aad
pushf
push
dec
jne
repz
rolb
adc
pushf
cwtl
faddl
mov
and
pop
or
sub
sub
out
bound
and
or
push
gs
mov
cmpb
ret
orl
call
push
cs
jb
std
hlt
jnp
mov
jl
out
daa
out
mov
iret
inc
js
stos
add
fldl
hlt
mov
add
pop
outsb
add
and
fldl
and
or
dec
push
sbb
imul
loope
sub
pop
nop
aaa
in
ret
negl
push
jne
cmp
cmc
out
pop
cli
sub
add
adc
sbb
fucomi
pop
jo
sub
push
stc
sub
xchg
pusha
icebp
jnp
xchg
xorb
and
inc
loopne
jbe
xchg
js
jp
aas
cld
iret
sub
leave
pop
xor
fwait
stos
xor
leave
xlat
sbb
push
mov
inc
in
into
push
xchg
mov
mov
out
aas
inc
jp
inc
stc
out
je
ja
leave
jp
imul
shr
mov
xor
inc
cld
adc
jge
add
mov
push
std
js
xorb
or
in
sbb
push
sub
lret
cli
lock
shlb
xchg
jbe
adc
jo
sbb
pop
cld
xchg
xchg
push
cmp
sbb
jbe
cmp
add
hlt
cli
mov
cwtl
jne
rolb
packsswb
shl
aas
ret
or
sub
in
shrb
and
sar
daa
cmp
mov
sub
es
lcall
xor
ja
pop
inc
repnz
loopne
adc
loop
inc
dec
call
push
dec
inc
mov
repz
push
mov
aaa
or
mov
lcall
push
scas
mov
shrl
lret
lea
outsb
dec
int3
xlat
out
xchg
or
adc
mov
cld
pop
call
mov
or
cwtl
pop
xor
mov
or
sub
mov
lret
fdivs
lret
jp
xchg
mov
jl
aad
push
or
fdivr
mov
dec
jecxz
inc
cli
mov
mov
sub
in
jge
test
mov
outsl
pslld
out
ret
out
aaa
sahf
xchg
in
sub
orb
sti
mov
ss
jns
and
out
lret
sub
mov
and
jne
cmp
pusha
ret
pushf
dec
xchg
test
sbb
xchg
xchg
sub
daa
pop
test
pop
fidivrs
adc
dec
shlb
sahf
adc
outsb
shll
imul
mov
inc
shlb
mov
mulb
add
std
push
mov
js
jmp
jno
mov
xchg
mov
aad
push
fsub
xor
es
dec
xor
push
mov
and
sub
mov
mov
scas
lret
ret
lock
xor
test
sub
or
mov
xchg
push
pop
cmp
sarl
test
push
inc
add
push
iret
xor
scas
cmp
xor
sbb
out
sbb
outsb
or
xor
outsl
pusha
cmp
jae
in
ss
fnstsw
inc
dec
fstps
xor
shlb
xor
out
aas
aaa
jae
roll
fs
les
push
popf
inc
aas
adcb
mov
adc
xor
popf
insl
push
sub
scas
loop
pop
cmp
in
xor
jnp
push
xchg
xchg
or
pop
xor
jae
jns
add
xor
cmp
cmp
or
xor
sub
in
xor
mov
stos
jno
or
insb
aad
jnp
daa
xchg
aaa
scas
jmp
xchg
adc
pop
out
leave
roll
subl
jnp
xor
sub
ss
pop
xor
bound
pop
xor
cmp
enter
mov
inc
jb
push
xchg
cmp
pop
scas
xchg
and
jbe
mov
sti
xor
je
iret
test
inc
push
dec
push
sarl
arpl
xchg
mov
call
pop
xor
xchg
mov
mov
add
and
test
rcl
lods
sbb
adc
not
das
xchg
dec
xchg
xchg
jns
adc
xor
popa
mov
cs
xor
dec
out
sarb
int
xor
in
out
mov
xor
lret
push
xchg
dec
cli
and
xchg
mov
add
repnz
inc
xchg
enter
adc
loop
hlt
adc
gs
xor
dec
loope
jmp
mov
mov
mov
es
pop
je
scas
sbb
cld
cmp
lds
in
cwtl
mov
xabort
shll
and
push
test
mov
lcall
les
lods
add
inc
aam
xor
pushf
cmp
dec
xor
sub
adc
enter
jecxz
xor
lcall
mov
cmc
cmp
jp
aaa
mov
xchg
insl
or
pop
jno
hlt
mov
xorl
icebp
pop
jmp
mov
sbb
stos
in
je
adc
ljmp
xor
cmpsb
nop
push
xor
test
cmpps
push
mov
imul
xchg
xor
mov
mov
sub
cmpsl
sub
cltd
aad
xor
add
adc
aaa
xor
pop
shrb
dec
dec
dec
jl
or
outsl
rolb
xchg
xor
in
lods
insl
das
loopne
xor
push
cmp
aas
cmp
push
xor
fimuls
mov
mov
clc
adc
jg
scas
mov
aad
jl
test
lds
xor
mov
hlt
xchg
call
xor
cs
cmp
dec
and
or
dec
cltd
push
mov
std
or
inc
nop
mov
cmpsl
push
lea
mov
pop
ja
sub
in
push
cmc
dec
xor
and
mov
xor
mov
push
xor
adc
jnp
jns
sbb
mov
dec
imul
inc
xor
enter
aam
mov
dec
mov
push
push
jae
sbb
loope
call
das
add
mov
xor
dec
xlat
adc
cmpsb
inc
pushf
xor
pop
ja
into
add
call
jge
lea
pop
pop
mov
mov
jp
fld
test
xchg
test
push
loope
popl
jo
mov
xchg
sbb
push
xor
mov
xor
pop
adc
mov
push
pushf
syscall
push
outsb
data16
mov
mov
mov
sub
xor
push
sub
and
fmull
arpl
aad
pop
xor
adc
dec
jecxz
out
xor
rcrl
cmpsl
and
pop
cmpsb
cmpl
adc
xor
mov
mov
xor
sbb
sbb
das
icebp
pop
and
mov
and
hlt
sti
add
leave
imul
scas
xchg
push
jb
adc
int3
pop
pop
xor
sub
insb
mov
sbb
lock
xor
loopne
lret
xchg
jg
xchg
add
out
pop
movsl
mov
sub
xor
sub
mov
lock
icebp
js
mov
in
pop
sub
pop
xorl
add
jbe
aam
xor
cmpsb
mov
pop
test
lahf
dec
mov
fs
scas
add
dec
aad
movsl
or
nop
dec
aam
push
outsb
rclb
push
mov
mov
jg
push
cwtl
push
cmp
sbb
aas
movsl
inc
ds
je
xor
pusha
inc
jae
mov
sub
dec
test
pop
cmpsl
lods
push
cwtl
xchg
mull
pop
xor
adc
xchg
jno
imul
xchg
pop
xchg
in
xor
pop
subb
cld
push
inc
mov
jno
jg
not
adc
ljmp
mov
xor
loop
inc
movsl
lods
fistl
xor
xchg
pop
dec
test
bswap
out
adc
das
mov
push
sbb
mov
xor
inc
and
mov
pop
loopne,pt
push
xchg
ja
xor
mov
outsb
popf
xor
rclb
sub
mov
aam
sbb
xor
push
repz
xor
jae
fwait
push
and
jmp
xchg
xchg
pop
jecxz
or
ljmp
leave
xor
dec
adc
ret
push
cltd
fnstcw
sub
int3
fdivs
fidivs
scas
inc
bound
mov
je
xlat
xor
cmpsl
sbb
fsubl
mov
or
lea
ss
bound
mov
mov
cli
iret
xchg
mulb
shll
mov
jecxz
adc
jns
xor
dec
fsubrl
jmp
mov
xor
gs
sbb
scas
or
add
mov
and
in
das
or
sbb
fucomp
push
int
std
mov
fs
xchg
nop
sbb
push
mov
int3
stc
inc
push
mov
and
pop
in
xchg
or
test
pop
data16
add
push
js
hlt
jge
xlat
add
adc
mov
call
sbb
mov
fimuls
pop
pushf
gs
mov
adc
sub
cmpsl
mov
aam
ret
inc
test
fidivrs
std
add
xor
sbb
shrl
lea
sub
xor
imul
shr
dec
mov
or
sbb
xorl
push
cltd
or
adc
fs
or
adc
sbb
or
pusha
out
xchg
cld
mov
sahf
sub
push
into
or
push
xchg
xchg
in
sti
dec
dec
lahf
and
pop
into
daa
xor
leave
adc
sti
es
xor
mov
cmp
xorl
idiv
cltd
jle
mov
push
sub
insb
and
sub
xchg
cli
mov
mov
sub
push
add
sub
pop
inc
lods
aaa
in
adc
add
jne
mov
dec
xor
repnz
pop
push
ja
xor
xchg
sahf
xor
mov
scas
repz
mov
out
cld
inc
stc
leave
pop
and
mov
outsl
arpl
mov
push
mov
mov
test
or
mov
xlat
shlb
jmp
mov
out
jmp
cltd
pop
sahf
les
or
inc
jne
out
iret
dec
int
jb
push
cmp
out
icebp
enter
cmp
sub
sub
jle
or
lret
inc
mov
repz
jns
gs
xor
imul
dec
icebp
or
test
xor
aaa
cwtl
xchg
pop
dec
movsl
sub
in
dec
xor
aas
nop
xor
xorl
adc
sub
inc
mov
scas
js
push
sub
imul
loop
jne
xor
jmp
imulb
shll
cmpsb
ljmp
pushf
flds
loope
rolb
push
fidivs
cmc
sub
jg
xchg
sbbb
jbe
pusha
fisubrs
add
xchg
shll
out
sbbl
fs
movsl
jo
jne
mov
mov
or
mov
push
xorb
arpl
stc
jnp
push
sub
data16
sti
or
xchg
cmpsb
sub
push
js
test
test
out
xor
lret
adc
sub
mov
jns
push
repnz
adc
jbe
pop
test
or
shl
xchg
jo
add
movsb
ret
lods
jns
or
shlb
mov
xor
popf
cmp
push
xchg
jae
mov
js
inc
inc
jnp
xor
sbb
push
mov
sbb
or
js
xor
xchg
das
repz
fadd
fyl2xp1
rclb
sub
pop
lock
dec
sbb
mov
push
sbb
fistps
loopne
jbe
add
pop
sub
nop
insl
inc
mov
rorl
xlat
push
inc
gs
pop
pop
xchg
ljmp
sub
movsl
push
mov
aam
jo
adc
jne
das
shrb
and
push
cli
add
pop
mov
test
cmpsl
sub
mov
data16
jmp
dec
push
fld
pop
cld
push
es
cmpsb
lock
mov
lods
xchg
repnz
fstpl
pop
data16
aad
push
dec
in
adc
fstl
and
inc
adc
popf
ret
dec
sbb
icebp
dec
cmp
ja
push
iret
fnstsw
aad
jno,pn
repnz
es
push
cld
lods
sub
imul
push
jb
popf
push
fnstsw
out
lret
aas
sub
repz
addb
lret
loopne
faddl
inc
push
cmp
sub
rol
sub
pop
sbb
mov
cmp
out
popa
sub
dec
cmpsl
lods
fdiv
sub
xlat
and
jg
mov
and
jne
or
lds
jnp
adc
jge
shrb
inc
add
loope
lds
out
jo
int
arpl
cmp
pop
xchg
and
mov
mov
sbbl
loopne
jno
jns
pop
call
outsl
fidivrl
mov
push
jae
mov
mov
ja
ljmp
and
jno
mov
out
test
mov
sub
mov
xchg
sub
cmp
and
lds
insb
das
fcmovnu
rolb
nop
inc
das
in
and
fsubs
mov
inc
lret
mov
cmpl
and
add
cmp
jae
aad
adc
xor
leave
popf
rorb
mov
inc
mov
out
andl
lret
adc
stos
mov
insb
lcall
popf
mov
and
push
mov
das
mov
xchg
and
loopne
pop
ret
dec
and
stos
out
mov
inc
xchg
nop
sbb
jbe
fidivrl
dec
jns
test
das
mov
mov
insl
mov
xchg
aam
mov
mov
outsl
xlat
push
fistpl
loope
inc
and
rolb
mov
lods
cmp
push
daa
repnz
insb
mov
mov
sbb
jecxz
lret
addr16
int
test
sbb
mov
dec
push
add
pop
dec
arpl
inc
shrb
popl
and
into
jp
or
arpl
sbb
mov
ds
pop
shll
inc
test
test
insb
fs
movntq
mov
mov
pop
and
cwtl
push
cmc
in
fldt
xchg
lea
sub
mov
pop
je
and
stos
into
in
push
mov
int3
jbe
call
outsl
and
mov
pop
lods
fnsave
aam
xchg
je
and
jg
adc
dec
xor
push
inc
xchg
mov
pop
jg
int3
cmc
adc
mov
push
xor
pop
dec
cmp
push
mov
adcb
rolb
adc
jbe
xchg
int
out
inc
arpl
and
cmp
ret
scas
mov
aam
ror
dec
and
and
les
and
imul
xor
ds
nop
lcall
and
mov
dec
xchg
mov
mov
pop
cmp
adc
dec
movsb
repnz
sub
xchg
or
test
jmp
inc
cmp
in
aam
aad
jne
mov
add
out
dec
cmpsb
add
aam
inc
jp
lock
xchg
into
sbb
ds
inc
xchg
test
add
repz
xchg
cld
push
jne
incb
sahf
test
xchg
dec
data16
call
leave
cmp
clc
adc
jge
lds
jo
push
fmul
mov
or
in
adc
jp
or
mov
add
je
sub
out
push
repz
sbb
add
push
ljmp
and
addr16
int
cmp
jp
cmp
push
sahf
lret
or
add
cwtl
jecxz
lahf
out
jecxz
cs
cmc
repnz
int3
stos
out
jbe
sub
pop
aaa
int3
xchg
scas
hlt
sbb
sbb
imull
and
sub
dec
imul
std
rorb
xchg
sub
sub
add
push
jb
cmp
in
loop
fcomps
or
mov
ss
sbb
pop
pop
inc
popf
pop
push
nop
fnstcw
push
nop
cmp
lret
mov
dec
or
push
jecxz
je
mov
fcoms
adc
leave
in
pop
in
lcall
xchg
and
mov
repz
mov
jno
fcoml
fiaddl
cmp
rcrb
mov
jecxz
pop
cmp
jg
xor
test
sub
sbb
cmp
and
lock
pop
push
xor
mov
xchg
sub
out
push
inc
fwait
test
cmpsb
inc
js
inc
aas
dec
in
cmpb
int3
sub
mov
pop
add
xor
sub
popa
cmp
adc
adc
iret
push
lock
xchg
sub
xchg
cmpl
cmp
mov
xor
xorb
sbb
dec
push
mov
dec
in
sarl
mov
mov
push
dec
push
leave
sbb
cltd
jg
icebp
pop
mov
shl
jecxz
test
out
mov
cmp
pop
cmp
sub
stc
sbb
aam
cmp
movsb
push
pushf
push
add
mov
repnz
std
sahf
jp
push
dec
xchg
mov
sti
nop
lret
data16
dec
in
adc
xchg
sub
and
insl
mov
or
lret
jmp
add
popf
pop
int3
ret
or
push
xchg
sub
jnp
ret
sub
adc
std
addr16
cmc
enter
jnp
xchg
push
or
icebp
out
aaa
rorl
adcl
and
xor
jne
adc
in
jg
push
or
inc
adcl
pop
dec
jp
cs
push
sub
jecxz
cmp
jg
cmp
aam
mov
mov
adc
push
test
cmp
inc
xchg
cmp
push
xor
outsl
pop
sub
mov
add
adc
xlat
dec
sub
les
in
xor
push
int
sbbb
popf
mov
add
sub
mov
sub
fmull
call
cwtl
jl
mov
ljmp
push
dec
sti
jbe
clc
scas
aaa
fs
jae
mulb
pop
out
add
out
sbb
adc
add
test
addr16
mov
inc
cmp
xor
sub
or
call
dec
pushf
push
add
sub
cmp
inc
or
and
lods
fs
pop
popf
fdivs
xchg
lods
ds
loop
imul
pop
sbb
sub
push
xchg
xchg
cmp
cmp
jp
inc
loope
and
mov
clc
adc
mov
movsl
and
jae
ficoms
movsl
repnz
dec
fnstsw
or
push
mov
sub
inc
pusha
jle
arpl
mov
movsb
add
xor
xor
inc
push
shll
cli
cmpsl
notl
add
shl
add
mov
sub
sub
out
ret
aam
je
mov
sbb
sbb
jnp
cltd
sbb
test
mov
sbb
pop
or
cmc
cli
jno
xor
jae
lock
test
pop
js
je
inc
push
jge
pop
xchg
sub
clc
cmp
fneni(8087
and
popf
aam
cmp
and
xchg
popa
mov
xchg
push
or
dec
icebp
adcb
and
xorl
jge
jns
dec
insl
les
jle
imul
js
es
push
pop
or
fstl
jecxz
mov
lock
lods
movsb
adc
pop
pop
cmc
cld
aam
test
out
data16
push
cmp
pusha
xor
sbb
jae
adcb
faddl
imul
sub
roll
sub
repnz
pop
mov
in
dec
jbe
test
movsl
xor
lea
xor
cmp
push
push
sbbb
daa
clc
lods
mov
xor
jecxz
mov
cmp
pop
or
enter
inc
mov
cmp
xor
sub
hlt
test
mov
cmp
cmpb
or
ja
cld
aaa
lahf
nop
sub
inc
data16
sahf
pusha
push
mov
jno
cmp
mov
les
lods
fcomi
jmp
dec
jns
aas
int
lea
dec
dec
adc
cmpsl
cmp
or
push
and
sbb
mov
add
fwait
or
dec
ja
mov
shrl
or
das
aas
lret
pop
add
in
shll
jle
jp
add
call
iret
sub
push
rolb
test
dec
iret
inc
push
cmp
out
mov
rorb
and
jno
mov
or
outsl
and
int3
push
out
arpl
sarl
lret
xor
out
sub
aad
hlt
cmp
cld
movsl
out
lret
faddl
sub
jnp
cmp
out
testb
mov
lods
adc
out
and
lret
ds
addr16
fisubs
out
sbb
xor
lock
inc
lods
push
iret
arpl
cmpb
xchg
dec
and
dec
mov
test
pop
nop
ss
xchg
imul
nop
clc
fsub
jo
pusha
out
push
cmpsl
jne
xchg
mov
mov
fildl
dec
cmc
cwtl
mov
jb
mov
sub
imul
into
mov
pop
js
mov
mov
add
xor
nop
sub
cli
cmp
mov
arpl
push
test
nop
icebp
adc
inc
xor
imulb
inc
aaa
xor
mov
dec
shlb
mov
sub
divb
sti
daa
push
xchg
movsl
mov
les
xchg
xchg
neg
xchg
subl
or
enter
jl
cmp
sub
shll
jbe
lret
ds
mov
outsl
inc
pop
cmpsb
cwtl
xchg
dec
std
insl
movb
rclb
insl
mov
xchg
lahf
subl
add
das
gs
divb
xorl
test
out
xor
popf
sbb
in
cmc
mov
into
out
ds
clc
in
les
les
mov
outsb
adcb
mov
outsl
std
movsb
cmp
mov
rorb
outsb
adc
imul
sub
lods
adc
call
xor
jmp
mov
mov
adc
into
jnp
int3
cmp
lret
rorb
jp
pop
repnz
loopne
out
je
xor
mov
ss
out
push
in
lret
sbb
adc
repz
addr16
js
mov
ss
lret
fadds
or
ds
popf
je
movsb
orl
stos
lcall
push
or
or
std
lret
add
scas
push
mov
mov
jmp
mov
mov
pop
push
into
fmuls
out
outsl
aaa
sub
rcrb
test
push
jmp
cmpsb
ss
xlat
add
dec
mov
test
inc
cld
bound
call
aad
clc
or
std
loope
add
imul
fsubrp
fsubp
inc
or
add
sbb
adc
leave
aaa
ret
icebp
dec
or
inc
jo
dec
dec
in
lods
or
xor
data16
ljmp
sub
mov
leave
out
loopne,pt
mov
pop
rclb
mov
subl
cltd
sti
xor
int3
xchg
dec
cmpsl
cmc
fcmovbe
gs
enter
or
push
jmp
adc
cmpsb
pop
sbb
jbe
roll
push
jp
cmp
pop
sub
cmp
push
dec
aam
xor
mov
sub
arpl
cmp
or
jnp
push
cmp
mov
cmc
fsts
fcomps
mov
fcoml
push
sti
inc
push
and
or
add
push
lret
repnz
sbb
or
sub
popa
mov
sbbl
push
aad
pushf
movsl
mov
push
clc
sbb
rcll
xor
nop
adc
sub
aaa
cld
jl
xor
pop
in
divb
or
add
sub
shrl
fdivl
es
mov
dec
es
jnp
ficoml
aaa
xchg
fwait
clc
movsl
jmp
and
mov
movsb
nop
adc
jmp
jo
and
and
js
add
hlt
fstpt
iret
mov
or
cld
xor
jmp
mov
cli
sub
lods
xor
out
xchg
jae
test
std
adc
jne
test
out
rcrl
imul
dec
xchg
jmp
popf
mov
dec
cmpsb
sub
nop
mov
movsb
sub
sbb
mov
sub
lret
ljmp
in
mov
sbb
mov
fidivrs
push
leave
fwait
mov
cmpsb
adcb
mov
jae
fsubrs
push
movsb
dec
call
jg
add
inc
mov
loop
bnd
orl
adc
ficompl
enter
fidivrs
cwtl
pop
mov
sbb
jnp
stos
adc
adc
bound
dec
lock
xchg
imul
out
or
push
mov
ss
inc
loope
test
or
add
and
jno
aaa
adc
mov
pop
push
sbb
ds
iret
adc
movsl
dec
add
jno
cmpsl
test
jns
orl
cld
mov
inc
cmp
fucomip
stc
hlt
into
test
xchg
ss
repz
shl
ret
test
jp
mov
aam
leave
shrl
stc
ja
xlat
mov
jb
sbb
jl
jmp
iret
clc
or
mov
aas
inc
and
pop
subl
xchg
enter
lods
jmp
adc
lahf
push
popf
jae
xchg
jbe
mov
in
ret
arpl
sbb
andb
aad
add
dec
mov
and
xchg
cmc
divb
sbb
xchg
pop
in
mov
or
push
ds
inc
js
push
ljmp
jbe
out
cmp
dec
gs
sarl
addr16
hlt
cmc
sub
jne
out
adc
cmp
sbb
in
fcmovnu
dec
shlb
pop
call
sbb
mov
jge
mov
loope
lret
mov
sub
cmp
out
mov
xchg
cmp
add
scas
jg
lock
mov
push
and
fsubl
in
test
xor
shr
sub
or
xchg
mov
mov
or
out
int
aas
es
add
das
jns
xchg
sub
ljmp
cs
mov
jne
js
popf
inc
xlat
lods
xor
inc
jg
pushf
jb
sub
mov
cld
adc
jb
ja
lret
jae
mov
lods
jge
sub
jmp
cmp
test
ds
mov
sub
insl
adc
shll
mul
xor
jle
lods
inc
pop
jo
jne
js
nop
sub
shrb
and
cmp
into
fcompl
jb
xchg
fidivs
cmpsb
mov
imul
aam
jge
cwtl
cmp
xchg
jle
dec
imul
sbb
push
or
lret
mov
cmc
nop
xor
leave
add
pushf
cmc
in
pop
cmpl
aas
data16
dec
xchg
aaa
and
sahf
pop
cmp
decb
adc
in
leave
cmp
rcrb
int
add
mov
into
in
inc
fists
inc
gs
xorl
out
mov
cmp
fistl
push
int3
test
rolb
pushf
add
adc
lods
pop
cmp
pop
add
pop
mov
lahf
adc
pop
test
repnz
loop
addr16
and
jle
mov
sub
adc
pop
jae
jne
mov
mov
sbb
mov
adc
mov
add
jne
mov
cwtl
loope
test
loopne
adc
pop
ret
mov
cmp
xchg
push
dec
arpl
cmp
xchg
lock
mov
insb
push
sub
in
cmp
orl
xor
push
mov
sbb
xor
aad
push
mov
fnstcw
fdivs
fwait
and
jge
or
add
lret
stc
cld
lods
mov
dec
adc
pop
popf
ja
dec
and
lret
mov
sub
lods
jnp
lcall
dec
into
sbb
stos
xor
push
xor
fistps
pop
xchg
bound
xchg
sub
xor
lods
fs
cmpsb
outsl
aam
and
in
and
mov
cwtl
aad
iret
lret
fs
popa
mov
sahf
push
sahf
gs
inc
dec
cmp
call
sub
jae
test
or
jl
sbb
in
test
loopne
add
lods
pop
test
outsb
inc
adc
sub
lret
hlt
mov
sar
repz
dec
insl
leave
jae
test
lock
into
inc
xor
dec
daa
or
xchg
rcll
sub
ss
jecxz
or
ja
adc
rcll
fwait
loop
lock
cld
inc
inc
orb
fs
lahf
int3
cmp
or
adc
or
sbb
push
stos
or
jg
sbb
xchg
pop
stos
inc
adcb
xor
dec
je
mov
pop
xchg
or
lds
rcll
stos
jno
or
sub
hlt
sbb
pop
pop
scas
dec
in
add
loop
rcrb
push
sub
mov
fdivs
add
cmp
xchg
lret
notl
cwtl
out
pop
or
test
cld
ds
or
push
pop
hlt
pop
and
and
add
add
out
mov
xor
nop
inc
jl
dec
xchg
mov
dec
sub
mov
mov
stc
lds
pop
pusha
aam
fisubrs
add
dec
and
sbb
mov
mov
jbe
out
test
mov
dec
lcall
fsubp
xlat
lret
mov
rclb
sahf
sub
adc
xchg
xor
cmp
push
adc
xchg
mov
xlat
adc
call
push
sbb
mov
leave
sbb
dec
pop
repz
shll
and
jle
push
push
cltd
xor
sub
inc
push
insb
xchg
movsb
icebp
mov
mov
les
repz
out
mov
shll
ret
mov
and
fcomps
push
jle
sub
mov
adc
jnp
pop
lcall
mov
in
sbbl
jne
stos
xchg
sarl
vhsubps
daa
jge
jp
xchg
cmp
fisubs
mov
and
mov
loopne
jb
jecxz
xchg
mov
loop
lock
mov
popf
adc
push
push
dec
loopne
lods
or
push
xchg
or
inc
xlat
shrl
lds
int
sbbl
push
sub
mov
add
fnstsw
sub
and
xlat
mov
mov
or
adc
xchg
lods
or
xor
push
push
mov
fs
stos
pop
pop
jo
xchg
aad
add
and
jne
push
adc
fidivrl
add
jae
loope
insb
in
hlt
dec
sahf
in
rorb
aaa
cmpsb
arpl
xchg
clc
and
sub
pop
popf
cli
leave
aam
in
sbb
mov
cltd
loope
sub
lret
aad
sti
sbb
pop
idiv
jns
mov
repz
pop
rcl
addr16
lret
std
daa
icebp
nop
ret
mov
add
push
mov
cwtl
push
push
mov
mov
sub
mov
mov
sub
cmp
cmp
shll
je
lods
cmp
push
jl
movsb
fcmovne
shll
stos
sarl
clc
call
sub
bound
sub
adc
aaa
fmuls
repz
push
inc
jl
aad
push
dec
lret
lret
pushf
or
arpl
push
in
push
mov
leave
ret
add
lret
lock
flds
mov
dec
push
mov
nop
xchg
cmpb
lea
adc
adc
lods
cli
adc
lret
push
adc
gs
loop
push
imul
movq
pop
dec
enter
jne
sarl
cmp
ja
addl
mov
jnp
adc
sbb
add
arpl
inc
xor
mov
mov
xor
adc
cmc
jbe
jns
pusha
cmp
dec
aas
aaa
mov
ds
xor
or
popf
xchg
mov
sub
mov
jl
or
inc
mov
sub
cmc
dec
push
mov
push
lock
sti
stos
or
js
lods
pop
fwait
push
pop
rcl
pop
lret
hlt
stc
into
test
insb
mov
pop
xor
jle
ret
xor
mov
mov
inc
test
sbb
cmp
cmp
leave
bnd
mov
pop
jg
or
mov
aaa
mov
jnp
mov
push
rcll
dec
xchg
jne
mov
shr
fisttpll
cmc
push
push
mov
adc
pop
jmp
daa
stc
cmp
rol
jns
xor
jge
xor
mov
xor
mov
aaa
lods
cmc
ficompl
xorb
or
test
mov
xchg
clc
adc
in
pop
shll
adc
xchg
pop
inc
in
sub
xor
fsubl
adc
pop
add
dec
adc
cld
xor
cwtl
push
shll
loop
xchg
add
sub
pop
lock
mov
in
es
testl
xchg
mov
into
ss
ds
addr16
cmp
std
add
push
iret
or
imull
les
shll
orb
stos
mov
je
in
std
jmp
test
inc
lret
aad
xor
cs
test
push
out
pop
inc
and
push
gs
xor
pop
sar
xchg
or
dec
fcom
push
xor
mov
mov
xor
jge
sbb
iret
bound
data16
or
mov
call
xchg
xchg
insl
jl
xor
jecxz
xchg
stos
fidivs
mov
cli
mov
mov
imul
xor
inc
push
xchg
inc
push
mov
adc
mov
ss
les
shll
xchg
mov
xor
rcll
xchg
shl
sbb
les
hlt
dec
aad
jns
push
and
shlb
movsb
pop
ljmp
dec
addr16
adc
xor
inc
ss
xchg
pop
outsl
or
dec
push
test
stos
pushf
popl
or
pop
repz
shl
andb
daa
mov
jb
pop
test
out
sub
movsl
aaa
fisttpll
inc
xor
xchg
xor
movsl
adc
orl
xor
sbb
adc
jns
outsb
sbb
cmp
clc
or
mov
pop
jnp
dec
xor
push
mov
sbb
sbb
and
dec
aam
mov
and
add
xor
ljmp
sbb
imul
mov
idiv
pusha
mov
fs
jae
xor
shll
test
divb
xor
ja
andb
mov
xchg
sub
sub
aad
xor
sbb
dec
dec
push
je
je
or
cli
xor
ljmp
sbb
aaa
mov
pop
ret
ds
movsl
xor
insl
jge
in
sub
mov
mov
js
rcrl
insb
xor
jl
test
and
in
icebp
xor
outsl
push
and
fstpl
add
xor
add
push
push
mov
and
jnp
push
lods
shl
lahf
ja
sbb
enter
outsl
pop
sahf
jo
cmp
fimuls
sub
fcoml
in
das
int3
xor
addr16
insb
jb
int
xor
xor
or
adc
xor
lahf
mov
add
dec
pop
adc
ss
loop
push
test
and
lods
xchg
fbstp
in
xor
out
sub
xor
xor
sbb
mov
or
mov
or
xor
adc
fbstp
mov
pop
mov
xor
and
sbb
movsl
fsin
xor
daa
push
scas
mov
add
pusha
xor
add
cmp
lods
jmp
aas
mov
incb
and
xchg
nop
pop
sbb
xor
add
std
and
faddl
add
xor
pushf
pop
jbe
push
imul
push
lcall
aas
mov
pusha
xor
inc
mov
lock
out
jbe
mov
mov
mov
ds
xor
dec
das
jbe
cwtl
repnz
stos
pop
daa
xchg
mov
clc
push
movsl
or
test
inc
rcl
mov
loop
in
in
add
test
enter
fidivs
inc
mov
iret
xchg
nop
leave
in
int
xor
cmpsl
push
push
inc
mov
jne
loope
mov
scas
in
sub
je
pusha
lret
mov
xchg
mov
sub
rcll
mov
decl
les
or
xchg
mov
mov
iret
xor
test
inc
xor
push
pop
jmp
js
mov
and
addr16
cltd
xor
dec
popf
out
fstpl
pop
pop
or
xor
in
add
movsl
cmpsl
imul
inc
outsb
js
xor
xor
std
push
push
rolb
je
in
imul
sub
fwait
xor
cld
addb
fcomps
sbb
je
mov
dec
lock
int3
and
xor
mov
xor
xchg
add
push
enter
mov
pushf
out
xlat
cmpsl
aaa
das
pop
test
fxch
jge
xor
scas
aam
nop
out
or
mov
mov
cmc
test
std
mov
fwait
jns
dec
fidivrl
shll
xor
int3
and
in
sti
loope
adc
pusha
xor
fidivrs
loop
xor
int
jns
push
mov
xor
cs
inc
push
popf
push
sti
and
div
pop
pop
sahf
mov
add
sar
inc
mov
les
xor
xchg
iret
jmp
bound
adc
jo
sbb
outsb
aaa
xor
dec
int
adc
imul
adc
bound
scas
out
push
push
fnstcw
fadds
adc
data16
mov
add
sub
mov
lea
xor
test
in
ror
arpl
test
or
dec
xor
into
inc
out
jl
inc
xor
stos
pop
es
mov
adc
dec
push
cmp
ret
xor
dec
sub
and
push
xor
fdivs
sbb
cli
xor
mov
mov
xor
jae
inc
int
pop
xlat
push
out
mov
aas
outsb
loope
xor
enter
rcll
push
mov
dec
ja
add
jb
cmpsl
jae
add
lcall
adc
add
out
xor
in
adc
daa
outsl
pop
xor
insl
jne
imul
mov
out
mov
and
rcrl
push
cmc
xor
push
cmp
mov
es
int3
out
xor
cltd
xchg
inc
cld
cmpsb
aam
pushf
pop
push
imul
pop
push
repz
mov
or
sub
cs
xor
ds
idiv
cli
cld
out
and
ret
scas
cld
les
xor
mov
mov
aaa
dec
and
cmp
mov
sahf
js
std
fsubs
sarl
int
cmp
lea
movsl
imul
in
and
xor
xlat
fisttps
push
rcll
ret
sub
rorl
daa
shll
test
loopne
je
popa
rorb
xor
ret
int
sbb
xor
jb
dec
lds
pop
adc
pop
sbb
xor
jmp
mov
mov
pop
sub
daa
mov
and
lret
shll
arpl
in
fdivs
iret
jbe
xor
sub
pop
mov
aam
es
dec
mov
push
cld
inc
stos
mov
xchg
jae
cs
out
stc
xchg
adc
dec
je
fs
mov
cltd
notb
push
stc
xchg
jecxz
data16
inc
dec
mulb
push
inc
push
sbb
xor
jns
out
cmp
mov
out
scas
push
and
out
pop
xor
pushf
fisttpl
std
imull
pop
xchg
xchg
das
push
push
jle
xorb
mov
daa
addb
out
xor
jae
inc
inc
xchg
js
notb
jb
inc
and
je
dec
fwait
mov
jns
into
sbb
imul
push
cmc
mov
int3
or
scas
rcrl
cmpsb
cmp
aas
pop
jle
or
inc
add
xor
add
inc
testb
push
xor
iret
inc
push
stos
adc
inc
push
gs
js
je
adc
xor
xchg
loop
out
in
cli
add
insl
loopne
jb
sahf
loope
fsubrs
and
xor
repz
mov
mov
sub
ljmp
jle
outsl
xor
test
mov
cmp
pushf
in
aad
mov
mov
mov
xor
jo
pop
in
out
and
movsl
push
jae
je
lret
hlt
cwtl
cmpsl
pop
inc
xor
ljmp
cld
sbb
imul
push
nop
hlt
bound
pop
outsl
adc
lret
rorb
mov
pushf
mov
xor
cmc
sbb
and
lods
xor
test
sub
mov
add
repz
test
movsb
mov
mov
push
lods
inc
insl
xor
xor
lcall
mov
imul
pop
popf
cltd
les
das
push
adc
lcall
inc
iret
xlat
dec
push
pop
cli
mov
loopne
pop
icebp
or
je
sti
lret
nop
pop
rcrb
cmpl
dec
xor
mov
imul
xchg
adc
xor
xor
mov
pop
pop
ljmp
inc
cmp
mov
or
int3
xor
mov
xchg
test
mov
dec
fdivrs
sahf
mov
cmpsb
xchg
xor
jl
xchg
jns
dec
sbb
jle
insl
mov
inc
sarl
sub
mov
pusha
jmp
sbb
mov
in
call
in
dec
arpl
push
int3
les
inc
push
mov
pop
lcall
stc
vmovdqu8
icebp
dec
mov
clc
cwtl
cmp
mov
jecxz
test
popa
in
adc
out
add
popf
jne
dec
fildll
push
imul
out
dec
in
dec
xor
ljmp
dec
cmpsb
jne
jb
enter
imul
aaa
jl
xchg
leave
je
jle
pop
pop
cmp
cmp
movb
cwtl
xchg
push
test
lods
mov
push
popf
jl
sub
pushf
mov
mov
insb
fwait
dec
stos
std
jnp
clc
test
mov
jne
jge
in
hlt
add
sub
jge
daa
sbb
sahf
xchg
mov
sub
ret
mov
addb
sub
movzbl
sub
xchg
inc
cmpsb
sub
jno
sbb
stc
movsb
xchg
fisttpl
sub
enter
rclb
sub
add
and
nop
cli
mov
sub
sarb
lahf
cmp
pop
loopne
jo
in
in
add
pop
mov
test
mov
pop
dec
mov
faddl
and
sbb
rorb
iret
push
push
inc
push
cltd
fnstcw
aas
out
pop
dec
or
adc
gs
aaa
loope
mov
dec
adc
jae
cmp
fs
sub
lret
icebp
push
shr
loopne
adc
xchg
xor
xor
cmc
lahf
add
mov
popf
xor
enter
jmp
movsl
sub
dec
loopne
mov
or
and
adc
sbb
in
sbb
into
cmp
mov
in
ret
mov
jnp
mov
lret
dec
ret
movsb
jp
out
movsl
mov
or
mov
sub
insb
cmp
inc
push
adc
sub
jae
sub
imul
cmp
jns
mov
add
jo
push
xor
pop
inc
xorl
dec
imulb
adc
dec
sbb
popl
popf
or
mov
add
mov
mov
pusha
and
jne
je
or
mov
jo
imul
out
sub
cltd
fidivl
imul
push
jb
jp
pop
sub
nop
lods
jne
in
test
and
in
jno
fldt
add
hlt
scas
inc
lods
mov
fidivrs
mov
je
ds
adcl
xor
add
mov
add
sbb
lret
mov
test
cmp
lcall
or
jecxz
hlt
imulb
jmp
jo
fisttpll
cmp
aad
add
test
je
dec
stos
cwtl
aaa
lods
jmp
cmp
xchg
mov
jae
dec
lret
mov
mov
mov
in
stc
xchg
fstl
cmpsl
in
mov
out
icebp
push
scas
mov
xlat
xchg
cmp
and
in
jle
jg
shlb
inc
jne
in
adc
cmpsl
xor
push
push
xchg
push
add
fldt
sub
xchg
stos
repz
fucomp
cwtl
shlb
or
push
mov
mov
sub
ds
adc
mov
fnstcw
and
cmp
mov
pop
cmp
jne
xor
pusha
loope
popf
xor
inc
testl
add
push
sub
inc
pop
hlt
enter
mov
xchg
in
int3
stc
or
and
adc
xchg
jb
mov
mov
repz
lods
add
add
test
inc
xchg
mov
nop
mov
out
pop
push
inc
push
sbb
out
mov
fdivrl
lea
sub
cmp
sub
pshufw
int3
cs
ss
or
inc
pop
push
out
lret
adc
sub
xor
dec
and
mov
hlt
pop
jnp
cmpsl
add
push
test
mov
fsub
jbe
out
pop
inc
sbb
xchg
xorb
mov
push
and
mov
jo
mov
data16
xchg
scas
iret
and
add
dec
jecxz
dec
lret
xchg
mov
mov
icebp
stos
inc
and
sub
lods
and
lds
add
ret
int
push
sbb
gs
fisubrl
xor
xchg
mov
in
add
insl
mov
lahf
or
adcl
cmc
je
fiaddl
popf
or
xchg
jo
popa
cmp
fstpt
aam
sub
mov
les
cmp
pusha
es
sub
shll
push
ffree
fstl
popl
pop
jns
in
dec
shlb
es
inc
mov
ss
push
sub
push
repz
iret
stos
daa
xchg
xchg
cmp
sbb
loope
jb
mov
bound
movsl
outsl
push
mov
adc
mov
mov
or
rol
jl
add
jae
pop
ret
insb
std
sub
call
push
jl
dec
or
jp
add
pop
or
jne
out
dec
stos
dec
int
ficoml
lds
out
in
out
fs
push
shrl
inc
test
push
pushf
orl
jae
shlb
dec
outsl
in
push
sub
lahf
aaa
cmp
mov
mov
cmp
dec
mov
out
imul
cwtl
outsb
outsb
incl
inc
mov
arpl
push
leave
cmpsb
or
fnsave
push
lock
pushf
enter
mov
pop
aam
xor
mov
repz
push
push
add
loop
jb
test
and
fwait
inc
jo
mov
cli
daa
inc
xchg
sub
ret
out
and
jle
fldt
mov
or
mov
insb
nop
les
and
fdivr
cli
mov
xchg
mov
push
adc
pop
pop
cwtl
jns
push
rcl
sbb
jbe
xchg
jns
mov
fwait
jae
icebp
adc
or
push
sub
out
popf
sub
ret
mov
mov
cmpl
int3
mov
rcrb
pop
sub
pop
sub
xchg
jo
loop
mov
or
xchg
ja
jl
outsl
and
mov
fstpl
and
push
push
sub
fsubr
mov
xlat
lods
sbb
or
rcl
dec
mov
lea
lcall
ds
cmc
xchg
insb
aas
jne,pn
shrb
repnz
push
std
js
addr16
fs
adc
jg
ds
mov
or
insl
xchg
mov
xchg
mov
jg
int3
cmp
jmp
push
jbe
sar
repz
popf
lfs
out
fs
jnp
testl
push
hlt
inc
mov
mov
or
adc
jl
inc
vpsrld
dec
hlt
cmpsl
mov
add
pop
stos
aaa
or
jle
sub
shlb
adc
sub
cmc
inc
xlat
imull
pop
inc
ds
jp
into
shrl
fdivrs
das
inc
jne
push
mov
xchg
dec
inc
into
aas
leave
lock
shlb
cmp
fucomip
sbb
adcb
sti
arpl
xor
sbb
inc
lds
xor
neg
push
sahf
arpl
adc
adc
imul
repz
sti
sbb
pop
jge
mov
mov
jae
pop
stos
insl
scas
adc
sub
push
push
mov
adc
cmp
cmc
sub
out
add
push
aam
xchg
or
or
insl
js
test
or
mov
ja
jno
leave
sub
popf
or
mov
cs
add
sub
shrb
pop
test
lods
or
push
ret
mov
sub
or
loopne
mov
scas
rcr
popf
mov
sub
mov
aad
jg
loopne
mov
sti
gs
jns
leave
into
push
jecxz
aam
mov
int3
fcoms
mov
cwtl
pop
dec
dec
add
fwait
sbb
jg
jo
pop
clc
ret
in
pop
inc
fistpll
in
dec
aaa
cmp
xor
or
jne
movsl
hlt
jb
sti
xchg
lahf
or
addr16
pop
mov
pop
lods
rolb
insb
pop
cmp
pop
rorb
cmp
insl
leave
aam
or
sub
fidivs
or
test
sub
aam
in
push
and
jp
adc
shrl
mov
adc
mov
idivb
and
leave
xchg
popa
mov
pushf
add
lcall
push
rcrl
fldcw
dec
jae
sub
clc
xchg
add
jb
movsl
push
test
inc
pushf
test
cwtl
mov
inc
pop
adc
push
imul
mov
jge
sbb
mov
aas
jmp
xlat
add
mov
push
mov
repnz
mov
inc
jae
popf
movsl
stos
push
push
inc
lock
and
nop
jge
es
outsl
loop
in
cwtl
jle
aas
notl
xor
and
add
clc
sub
mov
je
or
fiaddl
pushf
cwtl
cmp
xchg
daa
add
aas
mov
into
imul
fldt
test
jne
in
sub
outsb
lcall
lock
xchg
repz
mov
dec
mov
ret
cmp
pop
or
das
adc
sbb
cmp
mov
mov
mov
pop
in
or
xchg
es
das
imul
lods
ss
or
fnstcw
jae
adc
cwtl
inc
pop
add
test
add
inc
jns
xor
mov
mov
test
push
ret
cli
fdivs
scas
cltd
sub
jmp
jae
out
movsl
cmp
xchg
xlat
mov
mov
mov
dec
in
aad
adc
scas
inc
movsb
clc
jp
dec
jo
mov
jge
sub
fwait
test
pop
mov
fidivl
mov
hlt
dec
mov
sbb
lock
in
mov
aad
cmpsl
fcmovb
rcrb
sub
inc
inc
test
push
out
sub
out
adc
cwtl
adc
outsl
int3
add
sbb
mov
or
int
rclb
pop
xchg
rclb
cld
adc
sub
ror
ljmp
fsubr
xor
loopne
loope
popa
insl
hlt
outsl
lods
xchg
imul
divl
inc
xchg
jnp
movsl
pop
repz
fdivl
cmc
inc
pop
mov
pop
fs
daa
push
mov
xor
mov
movl
jl
push
mov
lret
add
sbb
scas
ret
sub
ret
aad
xor
jl
jmp
mov
out
or
ja
stos
shrb
imul
femms
leave
call
cmp
fisubrl
mov
and
mov
out
jge
mov
int3
mov
and
cmp
jbe
push
lret
jge
inc
pop
in
or
inc
cmp
adc
out
inc
pop
call
fldt
mov
movsb
scas
xchg
fsts
add
scas
adc
xchg
lods
jae
cwtl
cmp
std
mov
cmp
xchg
dec
sub
jnp
sbb
xlat
nop
lret
mov
aam
xchg
in
pop
cmp
cmp
xor
pop
fs
mov
mov
mov
sub
sbb
add
adc
lahf
fsubr
adc
mov
call
pop
jl
int3
lret
fwait
add
adc
hlt
out
cwtl
aad
lods
sub
aad
sub
pop
xor
cli
or
or
lock
data16
and
xchg
pushf
adc
jge
inc
cmp
scas
gs
xor
xchg
pop
stos
adc
in
ja
mov
push
clc
call
daa
cmp
adc
sub
cld
call
cmpl
sub
subb
fidivs
mov
fs
ja
loop
fstp
in
push
adc
cmc
pop
sub
or
add
push
sahf
jmp
fcomps
data16
push
movsb
and
fstl
dec
nop
iret
ja
push
int
cmp
rol
add
lret
outsl
xor
mov
mov
mov
mov
aad
pop
inc
scas
ja
xchg
mov
lea
sub
push
inc
daa
mov
mov
sub
dec
hlt
and
jb
in
test
lahf
add
out
sbb
pop
fsts
cwtl
xchg
stos
in
imul
sahf
adcl
cld
fsubrl
xchg
xor
lods
cmpsb
jns
fisubl
loopne
shll
jl
scas
sbb
add
cmp
jl
xchg
sub
ret
adc
push
xchg
call
adc
push
rclb
loopne
xchg
fmul
in
outsl
or
fs
mov
andb
mov
adc
mov
das
push
cmpl
or
cld
push
or
out
add
xor
dec
jmp
cmp
std
sbb
cmpsl
in
and
push
or
xor
mov
mov
push
mov
mov
in
movsl
inc
jp
out
sarb
stos
in
clc
add
inc
or
outsl
in
mov
fstpt
stmxcsr
sbbb
jae
cltd
test
aad
mov
ss
mov
xlat
aas
stos
repnz
lods
fsubp
adc
mov
xor
push
dec
sub
jge
mov
cmp
gs
jns
xorl
and
mov
sub
hlt
and
in
pop
mov
enter
outsl
xchg
push
and
pop
xchg
xchg
pop
out
mov
test
ret
xchg
add
ret
mov
call
sub
push
stc
mov
test
xchg
pop
rcrb
sbbl
adc
and
sub
sub
mov
jp
stos
pop
mov
xchg
jo
out
int
pop
dec
cmpsb
cmp
xor
loopne
xchg
call
roll
es
jae
mov
jmp
mov
in
lock
repz
sbb
inc
mov
jle
and
and
fcompl
in
aam
or
adc
jo
lret
mov
mov
sbb
test
and
fcomp
popf
and
jmp
aas
xor
loopne
inc
cli
lea
lock
push
cmc
pop
jl
inc
jae
xchg
xor
gs
das
call
pushf
inc
pusha
or
cmp
lcall
lahf
cld
lret
adc
enter
dec
rcll
jbe
test
add
in
sub
out
add
and
pop
mov
mov
mov
jnp
stos
dec
xchg
nop
xor
push
push
cmpb
ds
sub
fldenv
xchg
mov
sub
inc
mov
jecxz
push
xchg
in
mov
hlt
cmp
aas
daa
popa
cmc
xor
lods
add
rol
mov
cld
sub
fldenv
push
fmull
mov
xchg
push
dec
add
mov
xchg
cmp
xor
inc
frstor
aam
push
test
sub
leave
add
ds
out
cmp
es
sub
mov
in
push
or
sub
adc
or
xchg
out
adc
xchg
fldt
or
les
jg
out
pop
add
sub
fiadds
sub
ss
adc
and
mov
sarb
add
cmp
mov
sbb
js
repnz
jns
shll
cmpsl
jecxz
push
shlb
push
adc
outsb
xchg
cmp
pop
imul
popf
xor
push
out
fdivp
loope
call
dec
dec
sub
popf
test
or
adc
jge
xchg
push
or
jmp
mov
rcrb
aad
jb
pop
test
sub
les
add
push
shll
xchg
xor
pop
filds
sub
sbb
je
sub
dec
inc
dec
cltd
clc
pop
sbb
xchg
xchg
fcoms
jg
jp
xor
dec
stos
lret
mov
pop
js
subb
add
dec
hlt
xchg
les
hlt
push
aam
std
xorb
imul
in
stos
xchg
cwtl
jne
fwait
add
cmp
pop
lods
xor
add
push
adc
sarl
inc
jae
jnp
xor
in
jl
dec
lods
nop
xor
roll
mov
adc
push
jo
sahf
mov
pop
mov
xor
loope
push
nop
je
test
repnz
push
rolb
lods
ss
aad
mov
and
repnz
out
out
icebp
sub
pusha
mov
in
lods
or
iret
aaa
mul
in
cli
imul
adc
dec
push
imul
sahf
mov
ljmp
ret
call
mov
call
inc
or
inc
in
jne
aad
dec
lret
xchg
pop
fidivs
popa
or
adc
test
cmp
test
sub
cld
push
or
or
xchg
ds
sub
cmp
xchg
cmp
loop
dec
or
push
cld
mov
ret
add
movsb
addr16
mov
cmp
or
rcrb
xchg
jbe
adc
lcall
les
not
fdivrs
mov
mov
dec
xor
fwait
sbb
sub
scas
add
cmp
lock
cmp
mov
icebp
or
push
xlat
push
push
mov
arpl
sbb
xor
mov
mov
lods
sub
cwtl
arpl
ljmp
jo
paddq
jge
jno
and
lods
fdivrp
jmp
stc
jne
orl
fs
dec
orl
adc
je
fsubrl
jns
in
mov
in
pop
push
sub
jbe
aad
mov
jle
cmp
push
or
push
lcall
push
sub
jae
aam
iret
pop
cmp
sub
movb
jg
push
das
mov
andb
push
jnp
mov
jge
jne
fisttpl
jbe
out
stos
mov
minps
dec
sti
in
leave
sbb
ds
test
iret
test
mov
add
int3
add
data16
sbb
nop
adc
sahf
lahf
pop
fdivr
pushf
xchg
cmp
sub
adc
jmp
fstl
icebp
mov
sub
adc
je
adc
jge
and
dec
subl
lea
lds
out
dec
out
aad
adc
jns
fcompl
xlat
shll
divb
adc
sub
sub
mov
movsb
out
rclb
and
stos
iret
sub
lods
sub
mov
into
mov
push
dec
adc
inc
sbb
sub
or
or
cmp
in
and
stc
add
fcompl
test
call
sbb
xor
cmp
xchg
xchg
or
push
addr16
lock
xor
xorb
inc
stc
movsl
add
mov
fstl
pop
xor
test
bound
push
jmp
nop
jbe
inc
cmp
or
push
test
jnp
pop
push
dec
xchg
adc
and
daa
xchg
xchg
rcrb
sub
clc
mov
dec
inc
aam
mov
call
inc
adc
ja
pop
movsb
ret
movsb
loopne
popa
shrl
outsb
lcall
rcrb
sub
and
jle
pop
adcb
add
push
xorl
adc
fildll
dec
jl
mov
test
repz
shrl
jmp
icebp
mov
ffreep
lock
xor
adc
pop
adc
das
cmp
sub
fs
enter
or
out
je
sub
cltd
pop
sbbl
xchg
cs
test
lods
pop
add
inc
aad
ss
clc
daa
push
punpcklbw
aam
mov
push
imul
fistl
cmc
lret
jae
pop
lahf
aam
addr16
sbb
out
mov
filds
dec
push
jno
and
nop
fisubrl
and
xchg
xor
xor
pop
loop
sub
lock
stos
push
add
inc
addl
nop
stos
ss
adc
and
in
sub
or
aaa
push
xchg
pop
lcall
xor
sub
mov
imul
mov
rcrb
mov
loopne
scas
add
mov
mov
mov
addr16
aam
dec
out
jmp
lahf
sub
xchg
mov
xor
mov
pusha
mov
leave
cwtl
cmp
aam
je
lahf
jne
call
jo
scas
or
lods
adc
mov
or
mov
fstl
mov
lods
aas
adc
xor
fisubrl
pop
jne
test
mov
pop
out
imul
sub
xchg
mov
cmp
lock
mov
les
inc
fsubr
std
mov
push
ret
or
out
adc
pop
pop
sub
push
insb
ljmp
cli
push
push
push
cmpsb
jb
ret
out
sbb
clc
jbe
xor
js
and
cmp
mov
test
pusha
adc
popf
sub
into
add
inc
lods
movsb
jle
stc
mov
rclb
mov
movsb
imul
into
mov
or
or
dec
inc
insl
fs
sub
sub
call
pop
mov
lods
arpl
fnstcw
ss
in
pop
test
fsubp
xchg
lea
adc
jo
cs
mull
bound
or
rclb
xchg
shr
xor
andb
fnstcw
push
sub
in
jg
aaa
jns
cmc
dec
jae
push
sub
popa
idivb
mov
lods
test
rcll
in
ss
lods
jne
dec
enter
sub
clc
sub
mov
push
scas
mov
fisubl
push
out
out
mov
dec
cmp
int3
cmpsl
sbb
cmp
nop
notb
or
movsl
mov
and
dec
fsts
lock
pop
imul
mov
pop
and
jnp
lret
iret
jnp
xchg
cmp
in
out
mov
out
mov
ja
dec
int
sub
scas
out
pop
push
push
loope
or
dec
jg
jb
mov
pop
ftst
out
inc
pop
addr16
add
mov
add
push
pop
repnz
int3
xchg
call
lods
dec
adc
or
dec
xor
mov
lods
lahf
call
rorl
jo
sub
mov
mov
adc
test
leave
xchg
mov
xlat
cmp
push
aad
sbb
movsb
xor
add
pop
xchg
iret
sub
aam
sbb
test
push
mov
aad
pop
sahf
dec
add
stos
push
sbb
daa
rorl
cltd
cmp
notb
lret
ss
leave
or
cmp
pop
ljmp
mov
mov
mov
cmp
imul
xor
cmp
mov
xchg
imul
xchg
cltd
push
fprem
push
int3
lret
sahf
stos
jno
mov
ret
pop
sbb
dec
jns
call
and
sbb
lods
pop
mov
sub
out
aaa
imul
sahf
xchg
stos
jno
mov
test
cmp
rclb
cld
sarb
inc
sub
sub
xchg
adc
or
mov
xchg
test
push
jb
out
dec
fistl
jnp
lea
mov
mov
fisubrs
mov
cli
popa
or
lret
xchg
add
out
jnp
lret
aas
pop
inc
jo
add
and
sahf
aad
pop
in
or
in
cmpsb
sub
mov
aaa
pop
dec
pop
jg
xchg
in
shll
cmpsb
add
cwtl
sub
xlat
bnd
jp
pop
repnz
mov
cmp
sbb
inc
mov
push
lods
push
loopne
xor
loope
nop
sub
push
xchg
xlat
mov
push
js
out
mov
lods
pop
lods
in
jo
add
in
push
lods
mov
inc
loope
cwtl
push
shl
cld
fiaddl
filds
sub
push
cwtl
add
push
dec
aad
or
lret
pop
adcb
dec
fdivrp
es
testb
inc
leave
sub
incl
jl
mov
insb
sub
pusha
fs
mov
mov
push
dec
loope
pop
mov
adc
pop
adc
push
jae
pop
and
lcall
sub
pop
sbb
sub
mov
mov
xor
adc
adc
mov
mov
fdivrs
cwtl
jb
lahf
mov
pop
icebp
jg
lcall
sbb
rep
sub
dec
shrb
cmpl
mov
jp
int3
jbe
mov
daa
xchg
sub
frndint
ret
mov
loopne
les
leave
imul
sbb
push
hlt
add
pop
inc
pop
fcoml
jnp
sbb
mov
mov
lea
cmp
add
xor
cmp
add
mov
add
stos
aaa
test
mov
adc
lahf
mov
dec
or
sarb
mov
mov
fcoml
dec
mov
popa
std
xor
add
dec
sbb
xor
jmp
gs
jle
xchg
xchg
and
jecxz
sub
lods
jecxz
mov
ljmp
data16
out
insb
popf
outsb
cmp
ds
xor
push
push
movsb
outsl
andl
dec
push
cli
push
int3
outsl
ss
inc
sahf
push
pushf
push
and
jp
inc
xor
add
add
addb
fwait
in
or
cmp
push
lods
mov
mov
dec
in
out
ret
xlat
push
les
scas
jbe
mov
cs
repz
movsl
add
test
gs
je
ss
mov
cmp
sub
lahf
lea
jo
push
dec
aam
xchg
inc
sbb
or
cmp
xchg
out
or
std
sub
push
or
sub
add
shl
ret
inc
adc
ljmp
outsb
pop
mov
or
cs
pop
sub
sub
xorl
jne
icebp
hlt
out
dec
dec
fldl
inc
xchg
pusha
dec
cwtl
jne
scas
outsl
inc
dec
xchg
nop
ret
push
pushf
jg
inc
add
push
cmp
xchg
mov
addr16
xor
fcom
in
inc
mov
mov
sub
repz
cld
xor
sub
mov
es
mov
loopne
push
jle
sub
int
mov
lods
or
imul
cwtl
popf
mov
xchg
adc
sub
sbb
mov
movsb
aaa
jmp
jbe
mov
lods
lahf
lods
scas
dec
mov
push
dec
jne
adc
mov
dec
pop
jae
fs
cld
in
orb
lcall
mov
dec
inc
mov
cwtl
pusha
cli
fidivl
pop
sbb
mov
jl,pn
cmc
ljmp
sub
mov
jbe
dec
movsb
leave
cmpsl
sub
mov
xor
fmuls
sbb
cld
mov
sbb
dec
test
les
in
inc
cmp
cmp
sub
jae
cmpsb
cwtl
rolb
lods
adc
imul
push
mov
or
xchg
sub
aam
cld
push
sub
inc
dec
inc
adc
sub
inc
pusha
mov
in
in
mov
add
push
imul
push
add
idivb
xorb
test
popa
stos
mov
arpl
pop
push
xorl
aaa
pop
sti
test
mov
jbe
mov
je
jl
inc
arpl
sbb
subb
jecxz
jl
cmp
push
inc
in
shll
popf
enter
add
or
ret
inc
adc
test
into
rorl
jg
cmp
inc
sbb
cmc
jp
sahf
xchg
or
and
bound
add
sbb
je
mov
push
pop
push
mov
enter
mov
dec
dec
sbb
les
jne
lcall
xchg
cmp
in
insl
jb
adc
add
nop
ret
adc
scas
jl
negb
add
int3
inc
shll
and
incl
rorb
test
fldt
shrl
mov
mov
xchg
loop
push
rclb
lret
dec
add
stos
adc
sub
push
sbb
jp
pop
pusha
mov
mov
adc
add
xor
mov
mov
cwtl
push
sbb
icebp
cmpsb
in
or
fisttpll
sub
mov
adc
pop
inc
push
lods
popl
mov
sahf
sub
subb
out
and
clc
mov
push
or
cs
jne
pop
pop
rorb
popa
mov
or
orl
jns
dec
xchg
je
lcall
cmp
sbbb
shlb
push
sub
sub
cmp
lods
lret
adc
and
mov
push
inc
adc
gs
in
cmpsb
inc
popf
mov
mov
xchg
fcom
xor
push
daa
outsl
cld
xchg
sub
hlt
adc
push
xor
pop
mov
lock
fsubrs
xchg
mov
stc
lods
or
divl
pop
int3
sub
mov
arpl
notb
inc
and
out
cmp
test
xchg
mov
ret
pop
mov
aad
adc
jo
or
jnp
adc
jns
pusha
inc
pop
xlat
xchg
mov
aaa
add
jmp
ret
xor
fidivrl
hlt
aam
sub
sub
cli
imul
pushf
lods
inc
mov
sub
adc
orl
xlat
lods
mov
pop
push
andb
ja
sbb
mov
out
loopne
aam
push
js
mov
pushf
pusha
fidivrl
lcall
sub
xchg
insb
ss
mov
xchg
aas
mov
xchg
xchg
sub
es
xchg
sub
mov
xchg
and
xor
mov
sub
add
stc
push
xchg
adc
lcall
cmp
adc
ss
lods
les
mov
stc
fidivrl
in
jo
ds
test
fsts
jns
add
es
pushf
fdiv
push
cli
xchg
test
test
data16
repnz
mov
mov
subb
jl
popf
ret
xchg
mov
test
pop
cmc
lea
sub
outsb
jl
and
cmc
lahf
mov
jbe
push
fs
aam
cmc
lahf
sbbb
push
fldenv
out
or
ss
test
loop
inc
or
sbb
not
test
movsb
out
imul
push
fisttpl
mov
pop
call
int
repz
cmp
ja
sbb
jne
movntps
xchg
mov
loopne
sub
lods
or
jae
sub
cmp
fdivl
add
push
sub
and
es
in
mov
add
inc
inc
mov
pop
out
mov
les
add
inc
sbb
xor
lock
cmovg
jle
daa
idiv
popf
sahf
mov
popa
adc
sub
cmpsb
jb
jbe
aas
mov
inc
mov
lods
pop
xchg
int3
popa
adc
mov
lret
sbb
in
add
add
adc
xchg
and
test
leave
ds
outsb
aaa
popa
mov
fcmovne
xor
add
sarl
jae
roll
adc
add
mov
push
pop
jns
lock
sbb
sbb
xor
enter
mov
mov
pushl
jge
fiadds
stos
shl
jbe
push
lods
dec
jb
aas
sbb
in
cli
js
inc
xor
inc
ljmp
dec
rolb
lds
inc
and
insl
lock
inc
lds
ja
arpl
rcll
pushf
fs
adc
push
sub
scas
xlat
dec
dec
in
icebp
out
pop
add
mov
es
pop
push
add
sub
imul
in
or
aam
mov
inc
shl
pop
imul
push
in
pushf
push
xlat
jmp
xor
fsubrs
and
push
jb
push
bound
push
es
pop
js
mov
xchg
outsl
push
cmpsl
mov
icebp
jnp
and
cmpb
jp
xor
cmpsl
rorl
clc
mov
cmpsb
int
sarl
test
les
popa
push
dec
push
pop
lock
xchg
out
test
or
cmc
cmp
lds
push
gs
cli
jne
mov
int
cmp
push
lods
in
mov
add
pushf
stos
rcll
sub
clc
test
jae
mov
sti
lret
jno
mov
mov
or
imul
mov
fildl
pop
mov
sbb
push
shrd
popf
ds
mov
adc
sti
fildl
mov
sub
pop
mov
mov
pop
daa
movsb
pusha
je
jo
mov
mov
xchg
addr16
stos
inc
xor
loopne
or
jmp
fnstcw
loope
rcll
ljmp
addr16
int3
mov
test
repnz
pop
and
inc
pop
push
mov
add
es
xor
movsb
inc
mov
mov
xchg
mov
push
push
xchg
pop
leave
jo
xchg
test
jae
jnp
mov
dec
repnz
cmpsb
xor
adc
or
push
dec
mov
adc
aad
push
xor
call
adc
addb
adc
adc
mov
cld
int3
xor
xchg
daa
sub
ljmp
dec
xor
cmp
and
mov
lds
xor
inc
inc
je
loope
call
je
sbb
shrl
xor
pop
out
pop
cmp
jb
or
mov
xor
aaa
out
iret
scas
add
xor
enter
inc
shrb
jmp
xor
adc
mov
push
pop
xor
pop
pop
dec
mov
push
jmp
out
add
arpl
xor
pusha
adcb
iret
mov
xor
les
push
rorl
mov
push
cmp
cwtl
dec
lcall
push
sbb
into
cmpsl
aad
je
jl
fwait
fs
jbe
icebp
imul
mov
lret
sbb
lret
push
xor
fbstp
outsb
add
jecxz
xor
ljmp
pop
xor
sbb
cmpsb
push
dec
inc
daa
xlat
sbb
lea
xor
mov
xchg
jecxz
jne
clc
int3
and
shlb
pop
sub
push
and
ficomps
stos
dec
adc
cmp
cmp
les
pop
arpl
fs
inc
les
cmp
fwait
adc
push
insb
mov
rcl
xor
jae
out
push
sbb
xlat
mov
cld
aad
and
inc
ret
push
lods
aaa
cli
adc
or
hlt
andb
sub
push
test
mov
adc
test
cmp
int3
in
jmp
pop
cs
cwtl
inc
cmp
xchg
inc
add
aam
lods
xchg
out
xor
rcrb
xchg
or
xor
push
mov
imul
inc
push
in
mov
dec
xchg
popf
pusha
mov
mov
ret
icebp
xor
jmp
jle
xor
data16
mov
xor
sahf
aam
jp
sub
dec
iret
jb
xor
jle
hlt
addl
push
cmp
dec
shl
call
fdivrs
lds
iret
shrb
inc
jl
les
jg
andl
adc
dec
xor
xchg
adc
jb
or
jno
call
xlat
xor
pop
in
movsb
stos
pop
mov
insb
cmp
mov
lahf
sbb
pusha
adc
sarb
shrl
cmp
icebp
mov
call
cmp
add
notb
popa
xlat
xchg
nop
inc
xor
shll
xor
lcall
pop
call
cmp
cld
cmp
in
negb
push
xor
jle
aad
test
sbb
cmc
add
not
mov
cli
nop
hlt
cmp
in
lahf
xlat
push
inc
fwait
push
inc
outsb
sbb
cs
and
or
and
pop
faddl
dec
shll
and
xor
cs
dec
bound
pop
sbb
xor
lock
jge
pop
xor
movsb
add
sbb
out
mov
jge
popf
cmp
mov
testb
mov
arpl
adc
adc
pop
jbe
test
dec
push
cmc
lock
hlt
adc
cmpsb
mov
pop
aam
xor
and
shlb
push
cmpsw
adc
popa
xchg
jg
rcll
xor
adc
repz
cmp
mov
mov
les
add
insl
pusha
xchg
xor
add
push
mov
jno
adc
addl
loope
lahf
pop
clc
mov
addr16
mov
pop
xor
pop
sbb
jge
xor
push
daa
insb
mov
pop
ljmp
jns
jbe
cmp
xor
call
inc
xorb
js
adc
xor
mov
jg
insl
cmpsb
scas
xor
ss
mov
cltd
adcb
out
sar
nop
xorl
mov
loopne
aaa
xor
xchg
insl
xchg
xchg
and
mov
hlt
push
adc
jg
push
rolb
mov
lahf
xor
pop
push
jnp
adc
mov
dec
shll
jg
out
jp
testl
in
mov
aas
fnsave
pop
jbe
adc
sub
clc
pusha
dec
or
sub
sbbl
xor
mov
sti
xchg
jno
xor
mov
xor
xor
pushf
push
fistps
mov
lods
xor
repnz
scas
push
xor
mov
fcmovu
sbb
enter
test
fsubs
mov
jmp
cli
push
xchg
lods
cmpsl
int3
stc
mov
clc
adc
cmp
pop
and
repnz
aad
sub
jecxz
sar
aam
sub
hlt
pop
stos
inc
pop
hlt
push
ja
call
out
sbb
xchg
ret
mov
inc
mov
lret
mov
mov
fcomps
mov
insb
push
out
push
jae
dec
mov
xorl
dec
lds
mov
xor
dec
push
movb
push
push
in
push
shlb
fwait
inc
imul
inc
out
xor
lahf
mov
movsb
sub
jmp
jg
in
pushf
out
sbb
std
push
xor
lcall
push
scas
int3
sub
adc
dec
push
jg
xor
leave
jecxz
mov
cwtl
dec
inc
lcall
sbb
daa
inc
add
pop
adc
mov
in
mov
mov
cmpb
clc
repz
jb
sub
or
adc
test
mov
popf
add
sbb
jp
faddl
sbb
jns
mov
push
jecxz
xor
xchg
mov
ja
dec
push
sbb
jg
push
je
repnz
cmpsb
psubusw
insb
sub
pop
lret
xor
stc
test
mov
pop
or
mov
mov
mov
imul
fucomi
pop
cld
mov
add
fiadds
mov
movsb
stc
push
gs
aad
dec
xor
movsl
rorl
mov
test
push
or
repnz
cmp
cmp
or
pop
push
and
subb
dec
jbe
aas
xor
adc
and
cltd
imull
mov
dec
imul
fists
mov
mov
xor
test
mov
xor
sahf
adc
shll
mov
push
add
push
das
out
inc
jg
xor
lock
notl
loopne
sbbl
pop
mov
adc
mov
fadds
cs
and
pop
push
xor
push
jp
push
aaa
ja
xchg
insb
fisttps
xchg
cmp
and
add
adc
xor
push
and
out
xor
xor
mov
jmp
cmc
aam
xor
mov
cmp
xor
push
pop
mov
ljmp
sbb
outsw
xor
inc
inc
stos
insl
std
rorl
or
cwtl
sbb
xlat
testb
xchg
cmp
movsb
pop
jg
xor
call
lahf
mov
fidivl
xchg
add
push
push
out
push
push
pop
add
mov
loope
xor
test
lds
fbstp
outsl
add
xor
in
xor
mov
push
fnstsw
ljmp
xor
cmp
mov
push
cmc
push
inc
loop
in
sbb
test
dec
nop
lods
or
loopne
lret
mov
xchg
xor
push
ret
jle
into
mov
fiaddl
push
adc
xchg
lahf
cmpsb
xor
lods
stos
mov
popf
sub
mov
pop
mov
gs
sub
sbb
scas
int3
out
add
mov
ret
notb
in
push
jle
mov
iret
push
push
xor
clc
jns
lods
xlat
orb
mov
rcll
mov
inc
sub
xchg
xorl
addb
and
sub
das
hlt
mov
aaa
jecxz
in
enter
enter
inc
xor
lods
stos
cmc
cmp
hlt
mov
daa
xor
add
inc
ret
mov
repnz
int
inc
jl
in
lcall
iret
sub
cmp
add
jb
sbb
pop
adc
loope
mov
xor
cwtl
cmp
cmpsb
adc
ss
mov
into
push
jbe
shrl
aad
aam
aam
es
sahf
ja
in
sarb
or
and
out
imul
or
lahf
flds
aam
push
lods
lret
decb
push
fimull
in
or
jp
insl
cmpsl
mov
ss
aad
cmp
add
sub
push
mov
xor
jnp
shll
lret
jl
shlb
sub
hlt
andb
aam
js
sub
cli
ret
cld
xlat
ja
mov
xchg
add
xchg
xor
lods
nop
in
shrb
daa
mov
mov
insb
cs
lahf
loope
stos
mov
addr16
lea
inc
sub
ret
push
orl
jbe
mov
lods
and
mov
das
cmc
xor
in
pop
sub
mov
in
ret
xchg
mov
inc
stos
aaa
iret
aad
loop
repz
jp
and
adc
leave
mov
rorb
addr16
fstpl
inc
jp
out
lods
aaa
dec
xchg
fcomp
sub
adcl
mov
test
adc
lods
add
jmp
or
into
enter
xor
fsubrl
mov
aam
pop
cli
adc
sarl
mov
test
aas
jae
pushw
les
dec
sbb
xchg
sbbl
push
adc
out
xor
sub
lock
push
or
lret
mov
adc
push
clc
add
xchg
mov
mov
call
sbb
in
je
ret
das
add
cltd
daa
scas
mov
xor
pushf
push
call
dec
lcall
fs
cld
out
pop
mov
clc
lret
jns
pop
movsb
lcall
mov
and
pop
mov
pop
stos
test
cs
or
leave
dec
add
mov
rorb
cmp
push
popf
mov
mov
mov
popf
mov
xchg
mov
icebp
leavew
lahf
test
mov
in
jo
push
sub
jo
mov
or
inc
outsb
sub
sarl
cs
push
xor
das
divl
pop
ffreep
stos
shl
rcl
imul
outsb
aad
jbe
clc
loopne
mov
sar
adc
push
fs
sub
jg
int
pushf
and
and
inc
movsb
test
cwtl
lcall
cmp
movsb
ljmp
sbb
in
pop
cmp
xchg
xor
adc
lods
cmp
adc
inc
out
jl
add
gs
repnz
ret
jbe
xchg
jbe
cmpsb
and
mov
pop
out
mov
lods
subl
mov
pop
jmp
mov
inc
xor
xor
call
int3
loope
add
sbb
pop
insb
pusha
jp
dec
ret
mov
sub
push
int
and
repz
aam
dec
lods
adc
pop
and
xchg
movsb
add
inc
fwait
das
aam
outsl
in
imul
sbb
cmpsb
sub
clc
sub
pxor
push
sarl
xchg
mov
and
jmp
xchg
push
sub
mov
xchg
repz
in
xchg
or
or
mov
sub
stos
fcom
mov
push
xor
popf
pop
push
cmpsb
xchg
sub
push
mov
iret
in
sub
movsl
add
daa
in
sub
subb
push
jle
jl
adc
aam
sbb
roll
std
pop
mov
push
cltd
add
cmc
leave
dec
out
jne
out
jge
mov
bound
sbb
cmp
adc
add
dec
cmp
shlb
rcr
or
cwtl
mov
outsl
jp
pop
jnp,pn
js
adc
mov
aam
sub
ret
call
out
pop
inc
shlb
insb
pop
mov
sub
or
mov
lds
pusha
rol
jecxz
pop
loopne
sub
int3
jmp
enter
mov
mov
add
cmp
sub
repz
repz
les
add
in
mov
int
or
addr16
sbb
or
push
shrl
imul
daa
cmp
jge
test
push
push
sub
or
scas
pop
call
cmp
xchg
inc
je
loopne
sub
mov
and
mov
xchg
add
sub
pop
fwait
mov
mov
lock
sarl
iret
lret
orl
ret
fnstcw
sbb
daa
call
xor
and
mov
int3
inc
and
ja
in
hlt
into
jle
addr16
fucomp
lock
sbb
or
sub
ret
jns,pn
add
jmp
rolb
xchg
pop
repz
mov
sub
pop
adc
icebp
mov
and
lods
ror
lret
xchg
and
cs
xchg
push
movsl
ds
rcll
movl
cmpsl
repnz
cwtl
jne
adc
mov
ret
int
dec
cmc
xor
xchg
mov
jnp
arpl
xor
iret
dec
lock
inc
fsts
push
call
mov
cltd
ret
repz
cmc
adc
shl
into
sahf
cmpsl
shl
ret
dec
gs
adc
and
add
push
repz
out
pusha
cmp
hlt
jl
jns
mov
adc
gs
push
push
jp
pop
dec
ss
push
or
or
ret
adc
clc
sbb
jecxz
push
stos
mov
push
pop
jl
in
repz
les
or
loopne
bound
in
je
ficompl
cmpsb
adc
gs
popf
sub
scas
or
sub
enter
mov
in
dec
xchg
push
push
and
adc
fnstcw
inc
pop
add
repz
pusha
cld
pop
sahf
lods
inc
les
inc
cli
pop
mov
pop
rcr
add
jg
nop
mov
cmp
xor
int
in
fsubr
inc
cmp
jle
jge
test
mov
lods
xlat
pop
out
xchg
adc
sub
jbe
or
sbb
lret
nop
mov
push
mov
adc
xchg
adc
out
push
xchg
hlt
jne
sbbb
movsl
mov
mov
mov
mov
jmp
frstor
in
adc
mull
loopne
icebp
mov
outsl
cmp
adc
scas
push
test
xchg
pop
jmp
dec
nop
xor
mov
add
cmp
pop
mov
rcrb
int3
sub
cmp
push
dec
adc
imul
sub
xor
call
or
mov
lds
mov
jl
or
out
or
sbbl
shrb
jmp
rcrb
pop
inc
xchg
andb
cwtl
aad
mov
stos
frstor
sub
add
jne
mov
sub
movsl
sbb
dec
jno
xchg
add
xchg
dec
sub
xchg
xchg
es
jle
cwtl
push
xchg
ja
out
cld
or
xor
test
xor
bound
mov
sub
mov
in
aad
shll
iret
dec
je
rorb
repz
adc
dec
lea
out
pop
jle
sbb
pop
mov
ret
shll
adc
push
mov
inc
mov
test
mov
and
push
jle
or
cmp
xchg
lret
pushf
ljmp
sub
repz
addr16
movsb
or
popa
push
mov
lods
sbb
mov
ret
bnd
jge
shl
jae
imul
sub
pop
gs
mov
mov
lods
and
mov
lods
iret
bound
jle
mov
inc
push
fstpl
jns
incl
repz
adcb
mov
add
jae
leave
jno
mov
lods
lret
pop
mov
out
push
mov
push
out
test
push
push
movsb
out
outsl
fnsave
or
cld
imul
push
popf
mov
out
sub
cmpsb
out
mov
pop
pop
or
int3
bound
push
enter
pop
hlt
xchg
je
cmc
jp
pop
adc
ss
insl
mov
sub
cld
rcl
ss
rolb
mov
lock
cltd
push
and
add
stos
insb
aam
sarb
add
jl
aad
cld
ficoms
mov
inc
hlt
ljmp
mov
out
pushf
faddl
pop
shrb
vmovq
out
aas
cmpsb
xchg
lds
in
fsubrl
ds
jl
mov
cmp
enter
push
out
sbb
cwtl
push
movsb
lret
push
push
add
out
pop
push
mov
movsb
leave
xchg
inc
jbe
popa
sbb
shl
test
pop
out
jo
stos
mov
and
aaa
scas
pop
out
out
test
aam
popa
push
pop
fwait
roll
xor
jbe
movsl
pop
lcall
inc
mov
xor
hlt
xor
xor
cmpb
sub
sbb
push
repz
cs
or
sub
jmp
int3
mov
int3
xchg
mov
jg
mov
arpl
movsl
jno
lahf
fcom
test
xor
and
sbb
cwtl
mov
ss
in
mov
xor
mov
cli
movsl
or
movsl
or
mov
aad
insb
push
jbe
ja
xlat
pop
je
aaa
pop
and
or
and
fcomps
push
mov
sbb
popf
gs
inc
or
or
dec
xchg
insl
xlat
clc
rorb
adc
sub
jno
imul
cmpsb
dec
add
jl
in
aaa
test
xchg
mov
int3
shll
pushf
loopne
add
inc
pop
xchg
sbbb
sub
cs
and
xchg
movsb
repnz
out
xorb
insl
pop
pop
jmp
sub
jp
in
add
mov
or
push
cmp
lds
and
int3
push
or
adc
mov
lahf
sbb
in
add
push
add
mov
fisubrs
sub
in
sbb
test
and
neg
mov
out
ret
sub
add
mov
mov
leave
mov
nop
loop
jne
test
ja
fistpll
test
add
gs
sbb
dec
sub
add
call
movsb
icebp
popf
aas
sbb
pop
aaa
xor
mov
out
sub
jg
iret
dec
sbb
mov
adc
cmc
mov
inc
lods
notl
pop
dec
inc
mov
test
xchg
add
dec
fstl
fsts
xor
std
xor
test
cld
rcrl
mov
int3
ja
xor
nop
add
cmc
sbb
pusha
sub
mov
add
jno
std
mov
nop
jl
fisubrs
les
xchg
xchg
inc
decb
je
jecxz
or
test
inc
fisubs
cmp
aam
loopne
cmp
scas
adc
xor
xchg
pop
sbb
outsl
xor
popf
into
push
xchg
scas
push
sub
jo
push
add
ljmp
mov
jle
popf
leave
mov
test
inc
lret
dec
push
xchg
shrl
fwait
jmp
xor
sub
stos
mov
sbb
jb
or
inc
pop
repz
sub
jne
cmp
test
cmp
outsb
pusha
scas
icebp
stos
xor
xor
test
repz
adc
mov
lret
cmpsl
fcmovbe
enter
sub
mov
in
out
aas
mov
lock
adc
push
jg
popa
into
pop
mov
mov
cli
sbb
test
aaa
cli
mov
fs
inc
xchg
xor
add
dec
test
dec
mov
jo
jae
cmp
mov
xchg
inc
pop
aaa
jb
push
scas
mov
jg
icebp
pushf
jl
lahf
repnz
lea
iret
sub
lret
enter
sub
lds
mov
adc
jne
jg
iret
sub
mov
mov
adc
call
dec
mov
and
sub
loopne
sub
imul
sub
ja
dec
nop
sub
mov
aaa
lods
jg
ja
push
js
movsb
push
in
filds
movsl
fsts
movsl
inc
rcl
ret
mov
repz
in
sbb
push
mov
ss
and
cs
scas
mov
imul
mov
mov
push
xchg
lret
mov
mov
jae
nop
aad
lret
std
add
insl
iret
cmp
or
sub
mov
pop
jmp
xchg
movsl
mov
aaa
dec
scas
sub
addr16
inc
mov
iret
adc
push
push
out
mov
and
scas
call
jb
xor
adc
imul
jl
mov
inc
adc
or
or
lock
jp,pn
dec
cmp
push
nop
shrl
in
inc
int
bound
adc
dec
hlt
movsl
push
push
jl
or
icebp
loopne
add
inc
mov
bswap
mov
pop
jp
xor
and
mov
or
add
jno
xchg
lods
repz
sbb
inc
aad
mov
mov
arpl
sub
cmp
push
adc
inc
xchg
xchg
call
cmpsl
push
mov
mov
and
insl
cmc
in
pop
arpl
mov
sub
or
loopne
xor
in
lods
lcall
lock
mov
adc
adc
xor
push
test
leave
jne
push
xchg
pop
out
rclb
cmpsb
aaa
xchg
mov
andl
rcrl
add
cmp
mov
xchg
mov
xchg
fnsave
fmull
stos
cmp
mov
rcr
rcl
ja
ss
cmpsl
shlb
inc
cs
outsb
sub
out
insb
lds
inc
in
fcomp
shr
fisubs
pusha
push
pop
xchg
leave
pop
gs
pop
pop
cmp
jns
add
scas
mov
enter
mov
and
fcmove
in
sub
ss
das
ss
mov
mov
lea
fcoms
iret
xor
cmp
nop
xor
lods
or
add
xorb
in
xlat
ja
sbb
insl
pop
imul
adc
and
mov
leave
rorl
scas
scas
add
xchg
inc
mov
pop
ret
mov
push
out
mov
or
sub
push
pop
adcb
dec
cmp
dec
insl
inc
adc
ds
test
pushf
dec
jnp
dec
mov
leave
fisubrl
scas
lock
fldcw
mov
test
mov
ds
push
lods
fs
pop
in
lret
mov
loopne
jbe
pop
iret
sub
push
mov
mov
mov
sub
xor
repnz
call
dec
sbb
into
mov
jg
or
in
ret
out
mov
cmp
mov
add
dec
adc
jmp
std
mov
inc
xor
test
mov
jns
mov
inc
test
cmp
ljmp
cmpsl
xor
xchg
sbb
lea
xorb
xor
lahf
enter
push
in
push
xor
inc
cwtl
jne
fwait
add
out
push
stos
lods
pop
popf
les
and
lret
das
xor
fadd
into
pop
lock
inc
add
and
xor
faddl
xor
popf
arpl
in
test
out
dec
inc
aam
sahf
jo
adc
mov
mov
push
xor
sbb
sub
jne,pn
dec
xchg
mov
ret
dec
push
or
pop
jp
pop
push
pushf
add
or
shll
pop
cmp
or
xchg
cbtw
cwtl
cmpsl
in
sub
or
pop
ljmp
mov
cmpsb
or
lds
cmp
xor
dec
cmpl
sbb
cmp
or
cmp
js
insl
mov
or
mov
add
gs
in
sub
sub
cmpsb
inc
outsl
cli
jmp
shl
sub
cmp
lods
lcall
xlat
push
mov
hlt
cmc
pop
jb
shlb
inc
xchg
xchg
mov
pop
pop
and
pushf
inc
push
dec
cwtl
jge
cmp
in
inc
idivl
jmp
dec
push
push
jns
scas
mov
outsb
mov
inc
xchg
mov
sbb
mov
push
das
xchg
add
loop
jp
pop
and
dec
lods
leave
adc
ja
push
push
or
outsl
add
and
rorb
sbb
xlat
addl
cmp
pop
jns
cmpb
mov
leave
cmp
jmp
in
pop
fstpl
int3
push
jae
and
cwtl
insl
imul
and
rol
les
hlt
nop
pushf
jl
in
iret
push
test
mov
scas
push
adc
xor
out
mov
mov
cmp
mov
push
fucomp
mov
xor
ja
mov
lods
clc
pop
jl
mov
push
xor
adc
jmp
mov
fdivl
pop
and
or
mov
xlat
dec
xor
test
sub
or
sbb
cmpsb
dec
das
sub
loopne
fimuls
rclb
lcall
out
sti
lcall
sub
pop
mov
repz
mov
les
mov
xor
shll
or
fcom
pop
mov
jnp
jecxz
push
pushf
les
jge
mov
or
lahf
ret
stos
gs
dec
or
sub
jbe
add
notb
dec
insb
push
sbb
jnp
sub
js
test
inc
add
push
push
lret
dec
repnz
add
sbb
mov
mov
inc
in
xchg
push
cwtl
dec
cmp
aas
fnstcw
jl
or
pop
test
inc
into
call
addr16
cld
or
addr16
test
sub
aad
sub
mov
dec
scas
sub
and
lods
lahf
xor
rcrl
inc
stos
push
leave
lods
push
sbb
fmul
mov
lds
xchg
mov
adc
mov
shll
lods
push
repz
mov
addb
into
je
fsubs
dec
outsl
iret
mov
in
inc
xor
aam
fcomps
jne
cwtl
insl
mov
mov
mov
test
sbb
daa
loop
mov
xor
or
xor
insb
ljmp
fs
clc
test
xchg
xchg
fiaddl
mov
pop
sub
xor
in
hlt
mov
leave
mov
sarl
xor
xlat
mov
frstor
push
mov
sbb
mov
cmp
pop
fldenv
xor
dec
adc
and
xor
in
incb
cld
icebp
aaa
mov
xor
or
ljmp
xchg
lock
repnz
cltd
push
cmpsb
clc
xor
enter
lea
loop
push
add
add
movsb
add
leave
hlt
fidivrs
jbe
mov
pop
add
jmp
xor
imul
pop
xchg
call
cmp
and
inc
mov
pop
mov
pop
in
daa
in
test
mov
mov
aas
adc
mov
add
pop
xlat
jo
xor
xor
and
clc
xchg
mov
mov
in
sub
pop
mov
add
add
cmp
outsb
or
xchg
cld
mov
movsb
enter
xor
xorb
mov
inc
lods
xor
or
jg
xor
pop
xchg
fs
inc
cmp
cmp
xor
sbb
xlat
add
fs
fadds
test
sbb
std
test
xor
pop
cli
adc
add
pop
push
jl
xor
adc
gs
sbb
pop
xchg
add
rolb
pop
loopne
jle
dec
insb
add
stc
push
mov
fisttps
xorb
push
dec
lea
sbb
pop
xor
sub
add
adc
sbb
mov
sbb
mov
xlat
cmp
jp
popf
es
sub
adc
ret
outsl
mov
aad
shl
ljmp
sbb
divb
shr
testb
mov
or
and
dec
cld
cmp
cmp
fsts
mov
or
xor
cli
lcall
and
call
ss
xor
mov
mov
fbld
mov
imull
or
bound
xchg
jo
pop
jp
sub
sub
add
jmp
xor
sbb
fucom
fidivrl
fs
outsl
mov
pop
xchg
mov
xor
mov
cmp
mov
frstor
rcrb
and
or
mov
dec
mov
idivl
push
jg
mov
dec
test
add
fdiv
test
pop
idivb
pop
stc
jmp
mov
movhps
je
mov
sarb
xor
jno
testb
xor
imul
mov
dec
jle
sbb
pop
pop
jno
pusha
cmp
push
xor
cwtl
sbb
mov
or
in
ja
call
xchg
mov
loop
es
fadds
aaa
xor
mov
ljmp
fistl
xor
xor
push
out
xor
mov
sub
mov
stos
push
repz
jl
insb
popl
xor
sub
int
es
out
mov
mov
push
roll
push
dec
push
lds
cmpsb
xor
add
cmc
xor
sub
xor
pop
data16
pop
dec
sub
mov
cmp
xor
dec
ja
imul
and
aam
inc
mov
aaa
aam
cmp
shll
mov
mov
push
mov
lcall
xor
and
mov
lods
xor
stos
xchg
xor
sbb
push
mov
mov
aaa
push
or
testb
pop
sub
and
pop
adc
int
mov
sub
sbb
fs
rclb
jge
ss
jp
xor
sbb
add
push
fidivrl
adc
mov
push
scas
lock
loope
add
pop
cmp
or
xor
mov
lods
xor
push
lds
aad
cmpsl
cmp
iret
sub
loopne
gs
xor
cmpsb
xorb
xchg
push
dec
mov
xor
jle
sub
push
sti
xchg
fmuls
xor
mov
int
fdivrp
mov
mov
and
pop
pop
sti
mul
xchg
mov
xor
push
iret
push
inc
dec
sarl
mov
sbb
lea
mul
leave
aas
and
xor
inc
gs
inc
fcmovne
orl
jge
sub
hlt
cltd
push
ljmp
xor
adc
movsb
test
insb
or
push
icebp
sbb
push
mov
ljmp
xor
cmpsb
pop
fwait
mov
lods
sub
pop
ds
xchg
rcr
adc
scas
les
sti
hlt
sub
xchg
push
out
divl
xor
mov
das
repz
xchg
xchg
scas
xchg
sub
fdivrp
sahf
sub
xor
stos
inc
loopne
fists
xor
pop
jo
pop
inc
xchg
jl
or
sbb
cmp
inc
sbbb
xchg
movl
fdivrs
fbld
inc
push
push
mov
push
outsl
cmpsl
pop
push
lahf
push
ds
lds
add
cli
or
test
add
xor
jae
jp
xor
push
shll
shlb
mov
insl
xor
lods
dec
icebp
repz
pop
xor
aas
adc
sub
jl
inc
mov
dec
fcompl
xchg
push
jo
dec
divb
orl
push
mov
pop
add
adc
mov
sti
test
xchg
xchg
xor
aas
mov
fdiv
daa
dec
jl
mov
pop
rcrb
gs
outsb
lock
mov
scas
je
in
imul
xor
mov
sarb
adc
xor
je
insl
dec
pushw
out
or
hlt
std
xor
add
aam
jmp
int
iret
pop
ss
rcrl
push
shl
loope
pop
xorb
pop
mov
nop
xchg
mov
xchg
mov
push
jge
jns
repnz
enter
or
pop
cmp
cmp
and
push
or
xor
mov
pop
pop
mov
mov
aam
movb
adc
adc
inc
jmp
xchg
sub
push
adc
mov
jmp
mov
mov
test
xor
xor
movsb
aaa
in
cltd
negl
daa
stos
push
jl
hlt
imul
xlat
mov
push
pop
dec
test
and
pop
cmp
cmp
inc
jp
xor
mov
mov
push
nop
lret
ds
push
test
or
xchg
adc
sbb
push
scas
notb
xchg
add
xorl
jmp
repz
push
aam
or
adc
ljmp
shl
clc
outsl
xor
push
add
xor
and
lret
popa
sahf
repz
add
pop
add
jbe
push
pushl
mov
or
dec
jo
push
popa
push
mov
jmp
push
in
cld
fimuls
inc
adc
push
inc
test
mov
aas
adc
mov
add
cmp
fstl
xor
test
mov
push
push
dec
test
lds
movsl
sub
dec
arpl
fs
lret
fstpt
xor
xor
and
imul
arpl
and
xor
roll
jns
aam
jo
imul
test
ss
jecxz
dec
mov
mov
pushf
ret
xor
test
jbe
nop
push
adc
out
cmp
pushf
lahf
int3
pop
push
xor
nop
mov
dec
add
adc
int3
aas
sub
je
cmp
cmp
jmp
fldt
xchg
sahf
into
dec
aam
inc
addr16
pop
xor
int
cld
xchg
xor
sub
xchg
xor
std
into
sahf
icebp
or
mov
xor
insl
in
fwait
push
lahf
dec
xor
inc
or
ret
adc
inc
test
stos
cld
call
push
fidivrl
imul
mov
jmp
xor
sbbl
mov
pop
adc
cmp
shlb
pavgb
loope
fsubs
lret
fxtract
dec
in
ret
push
xor
leave
xchg
add
lahf
mov
jmp
dec
hlt
dec
xor
int3
mov
push
icebp
or
pop
add
xor
lods
dec
push
jle
sti
call
sbb
cmp
subl
jmp
lahf
or
pop
jno
push
ljmp
fists
xor
cld
cmc
push
ret
pop
mov
je
repnz
dec
lahf
jg
xor
fidivrl
mov
jle
dec
sub
cmp
mov
out
xchg
sbb
ljmp
div
ret
xchg
cmp
popf
or
in
rcrl
xor
cmp
cmp
sub
xchg
and
loop
nop
daa
mov
ja
out
cmc
rcr
rcl
sbb
sub
cmp
inc
iret
inc
jns
mov
aam
add
mov
insb
jl
jp
dec
mov
jns
jbe
hlt
idivb
xchg
xor
xor
mov
adc
cwtl
out
adc
and
cmp
add
and
adc
sub
or
nop
sub
push
jns
push
test
ficoml
int3
xchg
fmul
mov
xor
xchg
lods
or
pop
or
lahf
jns
xor
in
jl
add
cmpsb
mov
testl
loopne
xor
dec
fstl
dec
lds
jns
xor
add
cld
mov
into
stos
enter
pop
lods
in
inc
sub
stos
mov
sbb
fstps
test
pop
leave
cmp
add
sub
dec
pop
mov
sub
icebp
inc
and
mov
xor
scas
cs
push
dec
sub
or
add
xchg
iret
mov
stos
push
in
push
mov
vpunpckhbw
ret
jmp
and
adc
lea
jo
ss
movsl
movsl
xchg
mov
dec
leave
cwtl
imul
xchg
sub
mov
and
ficomps
cld
test
xor
sub
push
cmp
xlat
adc
xor
pusha
fistpll
daa
cmp
stos
or
mov
xlat
repnz
mov
insb
int3
and
andl
mov
jo
andl
in
mov
lods
add
sub
repz
adc
push
mov
add
push
mov
jns
jno
mov
test
sbb
test
push
rcrb
pushf
and
bswap
push
push
lret
cwtl
loop
fwait
inc
out
mov
jnp
add
mov
or
popf
test
rcll
xor
scas
add
cmp
test
daa
lock
or
int
inc
aad
notb
push
int3
sub
mov
fnsave
shl
pop
jle
aaa
lahf
cli
test
xor
aas
arpl
mov
orb
xor
adc
stos
and
out
mov
pop
inc
lea
fsubs
mov
mov
jns
ljmp
mov
sub
xchg
rorb
xorb
in
icebp
fs
pop
jl
movsb
int
sub
xor
mov
addr16
ss
pop
shrb
mov
mov
sar
adc
jne
push
repz
push
ret
sbb
fs
add
mov
in
movsl
push
out
add
out
add
add
mov
mov
sbb
or
roll
cmp
hlt
dec
push
push
test
mov
ja
dec
test
adc
rcrl
faddl
int3
adc
std
jbe
or
imul
std
push
inc
test
pop
aas
aam
daa
add
sub
dec
das
sbb
add
mov
test
lods
ss
add
dec
inc
jbe
leave
push
aam
ret
dec
push
hlt
mov
aad
out
lea
shll
or
pop
cmp
bound
xchg
xchg
sbb
outsl
xor
scas
xlat
adc
jl
jnp
or
loop
xor
sub
or
cmpsb
mov
add
push
sbb
jnp
xchg
sbb
mov
cmp
adc
out
subb
mov
jg
pop
mov
pop
lahf
or
int
sbb
mov
loop
test
mov
lret
cltd
ljmp
jo
sub
lea
xor
shll
xchg
push
hlt
and
mov
push
or
cmp
sbb
scas
mov
or
cmp
bound
xor
enter
mov
dec
iret
push
ja
or
shll
aaa
xor
popfw
hlt
lods
sub
in
icebp
mov
and
cmp
lret
dec
jo
jge
fnstcw
lret
add
lea
popf
rorb
dec
xor
sahf
sub
stos
insb
mov
fs
push
inc
inc
shrd
xlat
mov
and
jae
bound
inc
jp
scas
lret
inc
mov
or
lods
stos
jg
sbb
mov
sub
je
fbstp
sub
xchg
adc
adc
ds
jnp
mov
pop
lcall
xchg
fcmovnbe
sub
dec
out
cmp
out
inc
pop
xchg
or
pushf
adc
popa
rcrl
or
sub
subb
in
jecxz
adc
sub
jae
push
cmp
addb
enter
sub
hlt
push
jp
popa
add
and
mov
fldl
push
int3
invlpg
ret
xor
jae
add
ljmp
aam
in
ja
lret
ror
mov
mov
mov
adc
jns
cmc
xchg
out
add
stos
xor
inc
pop
sbb
lcall
aam
mov
jbe
adc
xor
dec
mov
mov
adc
ret
jno
push
jg
pusha
sub
xchg
jmp
pop
test
iret
and
push
mov
call
lret
sbb
fstpt
lods
repnz
outsb
fsub
sub
xor
mov
in
dec
push
lret
negb
lahf
ret
pushf
sti
add
aad
repnz
add
out
div
mov
jl
mov
adc
or
mov
inc
jbe
jmp
add
mov
push
lds
xchg
xchg
mov
sbb
sub
sbbl
inc
clc
lcall
xchg
mov
and
aam
in
scas
jbe
or
jne
jge
rolb
movsl
pop
cmp
out
push
mov
mov
adc
jecxz
and
movsl
inc
mov
mov
add
xor
mov
xor
out
lret
sbb
hlt
cmp
dec
sahf
jg
and
mov
cmp
fsubp
les
mov
dec
ret
jb
vfmsub132pd
dec
in
sbb
sbb
xchg
repnz
mov
aad
outsl
inc
out
pop
sub
pop
stos
mov
aas
mov
hlt
lock
or
sub
push
rcrb
bound
push
and
add
push
and
aas
mov
test
lods
jmp
mov
rcl
pop
sub
shl
xor
in
sub
adc
aas
leave
mov
add
jge
sbb
dec
adc
jo
sbb
mov
test
sub
pop
add
xor
jl
ja
or
test
fcmovnbe
or
addr16
jp
mov
xchg
lods
shlb
es
sub
mov
push
inc
or
popa
or
dec
pop
lds
leave
and
ds
insl
add
push
add
fldcw
cmp
mov
mov
pop
aaa
sarb
out
cwtl
lahf
movb
addr16
arpl
ss
fsubp
push
or
roll
sub
fidivs
arpl
pop
fsts
fs
ljmp
push
stc
sub
jmp
aam
fcmove
mov
cwtl
xchg
jle
or
mov
gs
lods
xor
add
rcll
dec
and
popf
les
xlat
sahf
fiadds
cld
or
jnp
ds
repz
rcl
mov
in
jl
or
sbb
mov
enter
arpl
add
dec
inc
popf
add
xor
hlt
cwtl
outsb
dec
xor
push
jp
gs
and
sarb
aas
xlat
push
ja
mov
rcll
and
data16
xchg
add
cwtl
icebp
ror
cmp
mov
cmp
data16
mov
dec
jecxz
out
sub
int3
sub
ds
pop
fldenv
stos
mov
fsubs
mov
cmc
aam
test
lds
pushl
fisubrl
aad
cmp
add
subl
ja
fs
dec
push
xor
mov
rorl
xchg
mov
or
or
sub
shlb
sbb
push
shl
rep
sub
sbb
adc
inc
push
mov
mov
addr16
lret
hlt
inc
pop
push
and
mov
pop
in
add
mov
push
movl
cmp
test
add
mov
jl
push
xchg
mov
aam
shl
pop
sub
in
mov
pop
daa
fbld
push
jg
jb
xlat
leave
dec
or
sub
loopne
addr16
mov
lret
in
or
cwtl
lahf
mov
jle
leave
sbb
push
mov
out
aam
add
cwtl
movsl
fbld
imul
loopne
xor
and
jle
daa
cli
xchg
insl
stos
cmp
push
push
ja
test
xor
cmp
inc
hlt
divb
mov
xor
and
mov
out
cmp
or
rcll
push
in
scas
jnp
push
mov
inc
xor
pusha
test
add
adc
mov
test
jne
or
inc
xchg
jge
shrl
cld
xchg
test
icebp
rcl
in
iret
add
dec
lret
cmp
sub
inc
sahf
mov
imulb
pop
jns
xlat
mov
mov
jo
sbb
movsb
enter
outsl
mov
add
xor
lods
push
call
mov
inc
cmp
ss
inc
cmp
sub
dec
push
ror
je
call
or
push
xchg
dec
push
pop
mov
or
cwtl
mov
lods
ret
adc
movsl
jle
cmp
jecxz
sub
dec
mov
shll
mov
sub
mov
pushf
test
inc
sub
ret
pop
test
scas
push
mov
hlt
iret
pop
aas
mov
rolb
add
sub
mov
aaa
pop
ficoms
jns
nop
sub
ja
clc
leave
cli
and
mov
js
pusha
aam
or
sub
sub
cmp
subps
push
mov
sub
mov
xchg
jl
lds
enter
shll
jl
xchg
mov
scas
inc
daa
xchg
int3
dec
push
cmp
clc
ja
xchg
cmp
push
aam
jnp
jg
inc
mov
pop
loope
pusha
adc
jg
xchg
cs
lcall
mov
in
mov
mov
imul
mov
ljmp
sub
push
add
push
push
push
jne
jg
leave
loopne
cli
aad
sub
andb
or
mov
faddl
lcall
in
adc
dec
or
inc
add
adc
dec
jmp
mov
xchg
call
std
or
jno
push
xor
fbld
les
popf
or
shlb
enter
push
jb
xchg
incl
sahf
dec
je
sbb
sub
sub
push
or
aaa
push
sub
push
fidivs
pusha
lock
movsl
adcb
call
imul
jl
inc
push
add
fidivrl
test
scas
lea
jbe
fst
xor
jle
hlt
add
loope
ret
dec
aaa
xor
mov
mov
aaa
xchg
inc
sub
cmp
jp
lret
cwtl
jae
je
in
lods
pop
shll
or
jg
cs
sub
push
mov
mov
sub
hlt
out
addr16
in
out
enter
pop
lods
jmp
scas
test
jg
mov
sub
add
mov
lock
cs
out
shl
cmpsb
mov
adc
fldcw
inc
inc
jne
mul
daa
adc
movsb
or
cwtl
mov
aam
or
mov
fwait
rcrb
cltd
jge
xor
push
inc
or
mov
or
gs
lods
jle
scas
bound
sub
mov
out
jne
lods
cmp
xorb
mov
inc
out
mov
or
stos
xchg
push
insl
rol
sub
fistl
push
mov
xor
fnstcw
jns
jmp
push
scas
dec
lret
dec
fdivs
push
fisubrl
popf
jnp
mov
push
fucomi
dec
test
divl
aas
enter
repz
pop
jno
ljmp
push
push
inc
xchg
xor
daa
jbe
dec
aam
pop
or
imull
jb
pop
sub
mov
aam
lahf
sbb
pop
mov
adc
adc
add
adc
addl
dec
ss
fcomp
lds
pop
cmp
rcrl
test
mov
push
jbe
leave
jne
enter
xor
or
or
les
mov
mov
mov
sub
mov
je
inc
push
int
popf
cmp
or
lods
sub
test
mov
ret
shll
push
inc
lods
aad
dec
push
mov
sbb
or
cmp
rol
mov
outsb
in
idivl
std
push
push
sub
mov
bound
mov
adc
mov
cli
sub
jg
xchg
lods
or
jle
xchg
fs
pop
loopne
xor
dec
inc
mov
int
jmp
and
mov
mov
push
lods
push
das
aaa
xchg
jmp
mov
mov
leave
es
popa
ljmp
or
cli
in
sub
mov
ljmp
jg
rolb
adcb
addr16
sbb
test
je
popa
cmc
aaa
rcrb
and
adc
pop
std
pusha
xchg
clc
mov
dec
add
push
and
xchg
cmp
push
jl
aas
test
jecxz
rolb
mov
sbb
cmp
fwait
xor
jl
ret
daa
push
out
shlb
dec
aaa
les
jmp
inc
push
cld
xlat
test
mov
xchg
orl
lahf
mov
jno
aaa
mov
fs
inc
or
sub
add
out
scas
mov
cmc
test
aam
xor
sub
mov
ss
jg
sub
test
mov
inc
or
les
lds
test
adc
nop
cld
jge
inc
mov
or
das
iret
add
inc
jmp
add
movsb
and
out
adc
lock
cmp
pop
faddp
sub
mov
adc
out
arpl
mov
ret
shrd
or
xchg
mov
or
clc
lods
or
iret
pop
fldenv
cmp
sub
inc
xchg
add
mov
je
push
ror
and
aaa
mov
xor
jg
inc
movsl
and
stc
rol
sbb
loop
xlat
or
lahf
pop
movsb
insl
inc
movsl
in
xchg
mov
and
pop
repnz
call
or
push
popf
push
jmp
fs
or
xor
into
sbb
aam
sbb
fsubrl
leave
push
adc
jle
out
fcmovbe
imul
mov
lods
mov
add
clc
cmpsl
rolb
xchg
mov
inc
outsb
in
outsb
popa
shrl
lret
into
pop
cli
xor
rorl
jns
pushf
aas
jb
or
adc
loop
xor
jl
stos
push
clc
or
hlt
xchg
out
push
fnsave
inc
addb
inc
mov
sbb
ss
or
sbb
lcall
jbe
xrelease
add
loop
imul
div
sub
adcl
cld
aaa
lock
jmp
fisttpll
mov
adc
xchg
mov
mov
mov
jl
dec
or
pushf
ret
std
cltd
dec
addr16
insl
pop
cwtl
mov
mov
mov
lods
lods
xor
ret
adc
hlt
stos
or
jns
jg
jmp
ret
dec
mov
test
xchg
orl
cli
add
adc
adc
in
adc
and
mov
mov
insl
int3
daa
imul
cmp
enter
jbe
sub
xchg
les
fsts
lahf
mov
dec
inc
in
xchg
xor
dec
xlat
enter
push
jecxz
aas
in
fisttpll
test
lods
or
and
jne
cmp
dec
adc
xlat
mov
les
into
jae
mov
fwait
mov
mov
ret
mov
lods
mov
add
adc
iret
pop
jno
in
adc
fisubrl
pop
fstpl
lret
mov
in
int3
lcall
stc
jae
sbb
pop
cltd
add
lds
lcall
dec
jns
shll
sbb
lret
ret
rcrb
sub
mov
push
shlb
jno
jb
xchg
pop
jge
or
aaa
sub
xchg
cltd
es
int3
ds
mov
out
xor
cwtl
outsl
mov
or
fdiv
pop
mov
je
ss
inc
xor
push
push
repnz
sub
mov
flds
lret
sbb
adc
andb
ljmp
movb
out
adc
popf
dec
sahf
fsubr
jae
jbe
xorl
cmpsl
outsl
outsl
call
dec
aad
cmp
aad
jo
sbb
add
mov
sub
aam
shlb
mov
lcall
cmp
sti
call
popf
push
cld
dec
add
repz
cli
cmp
out
roll
pop
addr16
cmp
shlb
aaa
notl
popf
es
test
sub
sub
add
and
lods
bound
dec
repnz
aam
fldt
sub
xchg
sbbb
xchg
test
push
fcompl
mov
push
dec
push
xor
adc
mov
call
aam
loop
cmp
stc
jae
jg
insl
cli
or
popf
fnstsw
aam
daa
cmp
fidivrs
sub
dec
jns
fs
sahf
ficompl
inc
lahf
jnp
jno
in
jns
lods
les
cwtl
mov
lods
popf
dec
xor
push
dec
lret
sub
orb
dec
pop
and
out
lock
sbbb
or
inc
sub
pusha
test
inc
iret
or
adcl
mov
dec
xor
jnp
fsubs
les
push
xchg
mov
outsl
add
adc
or
and
shll
ljmp
neg
sub
enter
ds
leave
adcl
cmp
dec
or
sub
mov
aam
lods
lods
or
mov
nop
insb
xchg
xor
cmp
xchg
mov
mov
mov
add
mov
sub
mov
adc
cld
int3
out
lods
je
repz
sbb
testl
adc
lds
or
push
lret
lret
sbb
jno
pop
insb
and
add
pop
shll
lock
and
repnz
jns
aaa
push
push
push
inc
lret
add
sub
lcall
fstl
mov
add
dec
inc
xchg
mov
ss
jnp
out
jl
mov
mov
insb
mov
nop
mov
cwtl
inc
mov
pop
loop
rclb
xchg
shr
sarl
mov
cmp
imul
push
fnstenv
data16
adc
adc
jge
xor
test
out
pop
ja
hlt
lods
into
add
pushf
jmp
movsl
jnp
xor
inc
jecxz
pop
lods
pop
jmp
adc
mov
mov
push
fwait
jge
add
xchg
rcr
fisttpl
and
test
ret
or
mov
js
sbbl
jo
mov
insb
pop
call
sbb
sub
or
xor
mov
xchg
pop
xor
and
lcall
jbe
iret
adc
pop
test
fs
jne
jl
mov
mov
fistps
add
xor
stc
mov
inc
insl
adc
push
scas
mov
jae
shlb
mov
pop
lock
mov
bound
xcrypt-ofb
cmpsl
ljmp
mov
mov
fcomps
mov
imull
xchg
push
push
stos
mov
push
repz
es
sahf
dec
jg
or
mov
mov
pop
xchg
inc
fidivrl
mov
sub
enter
cmp
cld
lods
sub
les
cmpsb
and
test
repz
mov
add
repz
pop
mov
xchg
movsb
jl
fs
setae
jmp
push
and
pop
iret
cmp
imull
das
sub
jbe
dec
fimuls
adc
inc
sahf
xchg
rorb
cld
add
pop
sub
jo
in
popf
pop
ss
mov
arpl
lret
pop
adc
xchg
fwait
test
sahf
add
push
repz
cli
sub
pusha
jnp
sahf
push
xorl
call
mov
loopne
lock
stc
test
mov
mov
jp
sbb
dec
pop
ss
cwtl
lods
jmp
adc
leave
int
mov
ret
data16
sbb
scas
sbb
and
mov
push
aam
aad
int3
js
and
xor
mov
ss
lock
add
add
jl
mov
divb
jg
daa
repnz
adc
sub
inc
mov
pop
and
mov
sub
rolb
fisubs
mov
inc
adc
cs
jno
fsts
cmp
addr16
xchg
out
cmp
xchg
or
ds
lahf
sub
cld
loopne
in
xchg
loop
icebp
insl
in
in
cs
loope
push
sub
inc
outsl
xchg
or
push
mov
icebp
inc
ds
pop
adc
sub
fldenv
rcll
das
mov
jl
pop
xchg
jmp
out
loop
push
test
test
out
arpl
xchg
xor
subb
jbe
sbb
sub
xchg
add
xchg
test
push
add
je
mov
or
mov
lahf
adc
dec
pusha
mov
js
xor
or
inc
xchg
scas
dec
dec
shlb
xchg
inc
sub
inc
mov
jns
inc
loop
call
sub
fistl
int
or
sub
mov
inc
mov
ret
test
int3
lods
mov
ljmp
pop
push
clc
sarb
lods
xor
inc
push
pop
push
out
xchg
outsl
pop
ss
sub
adc
loope
pop
jb
add
and
lods
or
fildl
cmp
mov
push
or
jmp
inc
aam
push
xorl
fimull
lods
or
pushf
out
cld
jp
adc
and
xchg
adc
pop
fsubrl
jbe
inc
xchg
loop
loopne
xor
test
xchg
fmull
xchg
pop
mov
loopne
enter
in
push
out
xor
nop
imul
lock
xor
sub
call
cmp
jmp
and
ret
mov
or
in
das
add
shlb
push
fsubl
insb
mov
xchg
jb
out
sahf
xor
aam
adc
fildll
rcll
leave
jns
push
dec
lret
inc
rclb
enter
lods
out
in
mov
mov
push
sbb
lret
popf
popf
stc
xor
jae
daa
je
loope
sti
sub
ss
mov
push
mov
jmp
int
adc
cmp
xor
push
les
jl
mov
mov
jg
mov
popf
add
sbb
in
ja
rclb
lret
add
jb
mov
pusha
and
cmp
in
pop
addr16
lret
lock
sub
mov
jb
or
jge
mov
mov
or
sbb
adc
neg
or
test
or
fcoml
call
or
mov
sbb
test
or
or
sub
xlat
imul
mov
push
mov
subb
xorb
cltd
les
insb
dec
adc
gs
ss
cltd
push
sub
insl
lret
sub
leave
jecxz
je
sub
xchg
lds
addr16
push
dec
add
popf
adc
adc
xor
mov
jae
outsl
xchg
je
sub
ds
and
jmp
xchg
sbb
lock
sub
fdivl
aas
in
pop
leave
mov
push
faddp
jns
xchg
test
inc
cmc
sbb
dec
jae
dec
mov
xchg
dec
xchg
adc
and
jbe
addb
sub
mov
lods
int3
xchg
push
push
sub
sub
push
das
push
sbb
ljmp
es
vpsllw
xchg
lret
cmp
arpl
lods
stos
decl
in
mov
out
sarb
add
jl
lret
daa
mov
arpl
sbb
ret
lcall
fwait
and
cmp
je
ret
xchg
enter
xlat
push
mov
imull
cmp
bound
popf
push
ret
dec
inc
lods
push
mov
add
mov
fs
xchg
adc
pusha
in
fidivrl
fsubrl
mov
add
cwtl
jl
adc
sub
mov
fcmovnbe
repz
jne
fisubrs
and
and
cmp
sbb
in
cmp
aaa
inc
pop
mov
xchg
sbb
loop
lcall
push
inc
cmp
mov
cld
push
adc
lods
mov
pop
cmp
gs
or
enter
sub
int
das
mov
mov
pop
mov
iret
dec
hlt
inc
dec
mov
or
inc
jno
xor
insb
mov
cmp
xchg
add
mov
fst
jne
and
js
jns
inc
std
test
lcall
out
push
or
addr16
stc
jnp
push
jle
jb
mov
daa
or
mov
in
cmp
sbb
leave
repz
gs
dec
fwait
adc
add
scas
sbb
insl
lods
inc
enter
add
enter
imul
fisubl
shlb
lahf
addl
mov
cs
adc
xchg
xchg
pop
jl
or
dec
cmova
push
jg
jnp,pt
push
sbb
mov
cmp
nop
cld
lea
cs
mov
imul
call
fiaddl
push
clc
fdivp
test
or
mov
sti
out
mov
mov
add
xchg
cmp
filds
outsw
and
mov
fdivl
sarb
repnz
ljmp
lar
sbb
loopne
jecxz
push
sti
out
aad
mov
rcr
nop
cmp
mov
stos
movsl
lahf
and
push
adc
les
out
xchg
push
push
pop
cs
cwtl
sub
arpl
xchg
push
jb
test
xlat
and
mov
out
test
xchg
cwtl
mov
out
cs
pop
inc
sbb
mov
pusha
leave
je
mov
push
loopne
fstl
push
aam
xor
fiaddl
sub
inc
iret
jo
or
push
jg
imul
pop
sbb
lcall
add
dec
pop
xchg
mov
xchg
movsb
lea
push
jp
gs
fcoms
sub
dec
sub
jae
mov
out
add
push
inc
insl
scas
pop
mov
ret
imul
inc
mov
mov
aaa
inc
fcoms
jbe
cwtl
cmpsl
sbb
cltd
movsb
or
lods
sbb
test
mov
mov
or
pop
mov
mov
insb
sbb
pop
insb
dec
loope
mov
lods
insb
std
cmp
popf
loop
je
sti
mov
mov
mov
xchg
test
cmp
pushf
mov
sahf
dec
xchg
movsl
sub
and
fiadds
adc
and
andl
bound
adc
ja
sbb
xchg
popf
pop
or
sub
pop
jle
add
sarb
mov
loope
stos
loopne
pop
cmp
xchg
ds
out
movsb
shlb
cmp
pop
mov
mov
cmp
push
cld
data16
jb
sub
sbb
jg
dec
inc
xchg
insl
mov
into
sub
mov
push
fisubrl
and
lock
aad
lea
iret
xchg
fdivp
sub
je
lods
mov
cmp
stos
fnstsw
clc
or
mov
aaa
mov
cmp
scas
inc
in
sti
mov
mov
repz
out
iret
idiv
sti
sub
cmpsl
mov
jae
mov
cmp
sub
or
mov
pop
imul
test
iret
lahf
xchg
call
inc
mov
mov
jb
shl
in
push
sub
mov
sub
data16
movb
sub
dec
insl
or
sub
repnz
sub
sub
iret
and
cli
sbb
leave
xchg
aas
mov
nop
cmp
push
cmp
adc
mov
sub
adc
push
iret
cmp
jecxz
mov
jmp
jmp
mov
roll
push
pop
filds
or
and
cli
pushf
sub
out
xchg
ds
xchg
push
dec
stos
ret
push
lock
jbe
xchg
push
push
pop
mov
cwtl
mov
mov
push
ja
and
mov
daa
ss
aad
fdiv
add
imul
cmp
push
nop
sub
sbb
outsl
loopne
mov
mov
cmp
mov
lahf
jne
rcrb
int3
ret
sahf
mov
jg
add
cmpsb
test
lret
inc
cmp
mov
ljmp
cmp
pop
mov
mov
xchg
adc
inc
in
aaa
test
flds
inc
cmp
push
lcall
jne
fs
pop
cmp
lods
cmp
std
movsb
xchg
fnstsw
push
inc
add
or
inc
mov
pushf
jle
push
lods
ror
sti
xchg
sub
orb
push
clc
sbbb
cmpsl
dec
add
leave
ss
pop
das
mov
sub
mov
cmp
movsl
cmp
push
mov
outsb
cmp
sub
ror
ss
mov
xchg
or
cmp
mov
lock
adc
idiv
test
bound
inc
sbb
stos
lsl
enter
hlt
xorb
or
mov
mov
jne
xor
call
push
sbb
mov
xor
xchg
in
repz
rolb
addr16
js
pop
jmp
cmp
into
add
sarl
dec
addr16
jmp
push
enter
hlt
jmp
into
shll
mov
sbb
std
pop
push
roll
push
outsb
in
cmp
push
mov
jns
xchg
inc
repz
dec
outsl
sbb
rcll
pop
fwait
sbb
fmuls
test
ja
jle
rcrl
mov
pop
jne
inc
sub
int3
pop
push
loop
shlb
jnp
lds
adc
movl
test
aas
push
icebp
add
fmull
xchg
sub
aad
mov
fwait
add
in
cmp
mov
addr16
sahf
jle
ret
cmp
adc
jno
ds
loop
adc
jb
inc
jne
mov
push
repz
iret
dec
sub
sbb
mov
push
add
das
mov
mov
loope
or
push
sub
jae
fbstp
aam
dec
adc
mov
mov
les
sub
cld
xchg
add
or
and
out
aaa
imul
pushf
insl
inc
leave
xchg
fldt
fistpll
rclb
xchg
jne
nop
push
ficoms
mov
xchg
cmp
sub
int
lods
add
into
scas
xchg
jmp
fsts
pop
jns
pop
mov
mov
xchg
jle
sbb
mov
out
and
sbb
loop
repz
ljmp
push
lods
jle
push
ret
sub
daa
enter
jns
sbb
push
das
sti
sti
push
notl
xor
rolb
ss
push
hlt
stos
sub
test
add
xchg
adc
les
loop
lds
enter
in
push
cmp
adc
mov
aad
cwtl
int
adc
icebp
cmpl
mov
and
stos
push
xorb
sub
aam
out
es
fs
mov
push
add
aaa
repnz
rclb
mov
test
dec
lret
out
ljmp
pushf
je
shrb
and
bound
fnstcw
in
xor
pusha
ds
clc
jnp
push
push
mov
mov
out
ret
xchg
jo
ret
dec
xlat
sbb
lahf
fisttps
arpl
jle
sub
sbbl
cmp
loope
cmp
cmp
mov
dec
jp
and
or
add
fbstp
cmp
je
jl
xor
shll
xchg
scas
aad
jbe
aaa
stos
adc
sbb
dec
popa
mov
jne
stc
sub
pop
sub
jmp
fmulp
movsl
push
lods
icebp
inc
jl
outsl
bound
outsl
repnz
push
mov
push
inc
add
test
aaa
imul
fimull
repnz
jmp
push
aad
jl
xchg
add
or
mov
inc
lret
dec
hlt
leave
outsl
inc
pop
arpl
push
mov
cmpsb
fistps
mov
mov
loopne
sbbb
stc
pop
lds
jbe
addb
cltd
dec
jnp
leave
mov
mov
fwait
jnp
adc
pop
push
adcl
daa
jp
lret
inc
add
xor
in
insb
mov
cmp
in
jmp
add
test
loop
sub
popf
cmp
mov
jecxz
popf
mov
add
sbb
rcr
and
or
sbb
icebp
push
inc
sub
pusha
cltd
and
jns
inc
in
pop
test
xchg
xchg
xor
loope
adc
push
stos
out
loope
sub
testl
xor
jne
mov
mov
mov
ret
cmpsb
rcr
ds
aam
in
push
and
aad
xchg
test
rcr
pop
add
js
cmpl
sub
gs
mov
jo
sbb
out
pop
inc
jge
and
sub
mov
dec
add
lret
jle
lret
pop
and
mov
aad
push
outsb
stos
rclb
ret
xorl
lret
pop
adc
lds
aam
insl
in
inc
insl
mov
repz
cmpsl
sub
lret
addl
imul
adc
sub
sub
rorb
in
and
je
mov
dec
push
lahf
cltd
xchg
push
fidivrl
jae
xchg
scas
cmp
gs
andb
or
int3
or
sbb
sbb
cmp
mov
mov
into
xchg
mov
not
jne
rorl
nop
fsubrl
mov
pop
mov
mov
out
jg
or
lods
mov
aad
xor
cs
lret
pop
xchg
mov
sbb
add
pop
lahf
xor
lahf
in
or
jns
mov
xor
sub
xchg
out
lret
and
sub
mov
ja
mov
repz
mov
mov
pop
in
jg
sbb
test
xor
leave
out
xchg
xchg
mov
mov
pop
mov
pop
inc
jp
xor
push
and
imul
insl
ret
xchg
xorl
das
mov
xchg
mov
daa
jae
into
andl
xchg
mov
retw
fdivrs
cli
dec
icebp
pop
lret
pop
enter
cmp
jecxz
fldl
cmp
xchg
pop
addl
xor
fimull
arpl
repz
enter
add
add
cmpsl
in
xchg
adc
xchg
mov
negl
sub
cmp
fimuls
jge
repz
xor
movsb
aaa
lods
jae
push
push
mov
add
add
mov
pop
int3
dec
int
inc
bound
subb
lods
inc
pop
loop
add
shlb
ja
subl
inc
mov
and
inc
into
pop
push
add
sbb
xor
mov
nop
in
cmp
fildll
xor
loope
stos
sub
lcall
test
mov
out
sbb
imul
aaa
mov
aaa
inc
push
mov
xchg
cmp
add
push
test
mov
adc
adc
cmp
adc
jae
sub
xchg
mov
lock
cltd
add
sub
push
push
cld
pop
lret
test
jle
sbb
mov
divb
mov
xlat
adc
inc
cwtl
and
mov
push
test
sub
dec
sub
mov
xchg
popf
cli
loope
and
cmp
cmpsb
fisubs
jne
lcall
xor
xchg
stos
leave
stos
inc
xchg
sbb
xchg
daa
fnstenv
lret
or
xchg
mov
cmp
shrl
add
and
ret
fstpl
icebp
sub
xor
and
aaa
adc
sti
pop
mov
cltd
scas
lret
fwait
clc
aas
mov
mov
mov
adc
lods
mov
mov
jbe
in
pop
out
aaa
mov
movsl
adc
lods
lcall
or
cmp
repnz
add
ds
lahf
dec
xor
and
arpl
xchg
in
lods
or
mov
and
pop
fisubs
or
xor
jle
cmp
sub
fnstsw
fsts
jle
add
pop
repnz
xor
jl
int
loop
dec
lahf
mov
inc
stos
hlt
sbb
mov
sub
xorb
cmp
mov
cltd
jecxz
daa
addr16
and
sub
push
inc
jle
ss
or
bound
xor
jae
adc
jns
adc
pusha
push
insl
pop
dec
out
cmp
adc
mov
mov
push
adc
movsl
js
xchg
jl
iret
fnstsw
xor
jle
or
push
mov
loop
scas
int3
push
nop
mov
push
xchg
jl
dec
aam
outsb
jmp
leave
enter
sub
dec
mov
imul
sub
mov
mov
cli
jp
fimull
cmp
push
lds
jne
into
sbb
mov
and
ja
push
scas
xor
lods
mov
cmp
imul
mov
lcall
pop
dec
rol
push
aad
xor
fisubrl
fiadds
cmc
pop
adc
lds
stc
adc
sbb
dec
jmp
pop
iret
das
xchg
sub
sub
xchg
xchg
call
pushf
push
inc
fwait
hlt
and
inc
mov
adc
cwtl
inc
adc
test
into
aaa
push
jmp
pop
sbb
imul
ss
call
sub
loope
scas
jge
pushf
xlat
and
push
je
ss
stos
outsb
outsl
push
mov
inc
aad
lcall
shr
pop
out
pushf
out
or
fistps
loop
aam
out
adc
or
inc
fdivl
scas
mov
xchg
jae
mov
adc
jle
in
and
xor
dec
jno
or
inc
jl
sahf
repz
pop
lock
fdivr
sub
imul
addr16
lds
rolb
sahf
jnp
mov
or
sbb
push
stos
mov
xor
mov
addr16
fnstenv
shll
cmp
out
jp
dec
rcll
push
xor
pop
jg
jnp
sbb
inc
xchg
jmp
mov
xor
mov
sub
pop
add
fmulp
inc
adc
mov
jp
test
push
or
lea
push
ja
mov
mov
imul
aad
sbbb
xchg
xor
nop
mov
cwtl
sbbb
cltd
data16
pop
test
xchg
mov
das
sub
aam
ja
ret
and
ljmp
xchg
mov
cmp
push
adc
push
sub
es
pushf
ror
shrl
adc
sbb
lea
lods
in
jo
leave
pop
outsb
hlt
cmp
nop
mov
scas
and
dec
mov
xchg
mov
mov
mov
cmp
mov
ss
cmp
aas
jae
daa
cld
pop
gs
mov
jb
or
push
and
loop
add
aam
add
mov
test
out
add
sub
and
inc
xor
or
ss
sub
xchg
inc
push
out
mov
imul
cld
leave
adcl
test
jns
ss
cltd
jmp
mov
cli
aam
fdivrs
mov
mov
sub
jnp
jp
mov
push
mov
cmp
xchg
dec
mov
mov
jbe
xor
sub
das
inc
aaa
xor
sti
pop
in
inc
shrl
pop
jge
lcall
bnd
lock
and
aad
sub
outsb
jmp
mov
in
cs
data16
test
jg
repz
ss
fwait
leave
mov
add
cmp
daa
cmp
lock
je
jl
arpl
shll
ret
or
js
shll
shr
adc
shr
mov
and
or
adc
gs
sub
lods
or
push
mov
mov
std
sub
int3
pusha
out
lds
fdivrl
adc
ljmp
mov
popf
dec
or
mov
rcll
fidivrl
lret
movsb
sbb
popa
ds
inc
jb
inc
rcl
or
xor
and
fstps
leave
add
mov
clc
sbb
cmp
adc
sub
and
repnz
aas
test
sub
js
jo
adc
lcall
dec
test
or
add
or
movsb
xor
jg
out
cwtl
xchg
pop
jmp
inc
ret
scas
hlt
pop
xor
lcall
jecxz
test
pop
mov
push
mov
cmp
lods
sar
ret
dec
dec
addb
ret
push
sbb
sub
mov
addr16
cmp
mov
jnp
sbb
movsb
je
xor
call
push
add
cmp
push
jne
xchg
in
lahf
imul
push
mov
rorb
movsb
fldt
fisubrs
fidivrs
stc
jge
mov
es
pop
aaa
fld
sub
mov
cmp
cmpsb
or
sbb
cmp
push
mov
xor
xor
or
lcall
fisttps
movsb
pop
fistps
cmp
es
lret
sbb
sub
push
lods
sub
inc
jnp
cwtl
push
insl
push
es
xchg
aaa
imul
jbe
js
sti
fadds
add
xor
jae
push
dec
mov
xor
cmp
push
cltd
dec
pop
xor
movb
mov
jno
test
rcrl
mov
pop
jns
xor
mov
scas
sahf
xor
mov
subl
stos
cs
sbb
push
mov
xchg
dec
pop
out
ret
imul
inc
push
adc
add
or
jne
cli
out
sub
out
hlt
clc
pushf
sbb
sarb
lods
sbb
arpl
sti
mov
inc
insb
mov
mov
hlt
and
pop
movsb
pop
push
lods
dec
lea
xor
jae
cs
fldenv
popl
mov
ss
aam
sbb
jns
lcall
push
push
cld
leave
shld
ja
mov
mov
push
adc
sti
sub
dec
cltd
loopne
mov
mov
cld
mov
ja
sahf
cmp
mov
xchg
push
jnp
mov
cmpsb
int3
and
add
and
sbb
dec
jle
orb
loopne
sbb
pop
adc
ret
push
imul
loopne
push
inc
adc
push
pop
rol
je
pushl
loop
sbb
xchg
inc
scas
mov
out
fdivrs
arpl
cmp
cld
decl
xor
loopne
mov
push
inc
movsl
xor
test
out
xor
aam
or
lahf
flds
jmp
xchg
popa
sarb
jno
xchg
pop
pushl
xor
movsl
push
sub
push
xor
mov
icebp
xor
xchg
adc
imul
cld
in
sahf
test
loop
or
xor
loope
ret
cmp
mov
sarb
arpl
lods
adc
test
sub
js
xor
pop
repnz
push
adc
xor
or
cmp
repz
and
pop
clc
mov
jo
inc
push
movsb
pop
xor
orl
sbb
pop
sub
dec
adc
xor
jecxz
xchg
and
outsl
mov
jae
lods
jl
stos
daa
sbb
cmp
mov
dec
hlt
xchg
mov
mov
jbe
dec
add
dec
icebp
int3
xchg
mov
popf
dec
subl
test
je
pop
mov
xchg
inc
add
xlat
inc
popf
xor
xor
fimuls
stc
cmp
cld
leave
mov
mull
sbb
cmc
push
xchg
mov
add
cmp
mov
cmp
jp
pop
out
xor
xor
loope
xor
movsl
xor
lods
out
out
pop
loopne
xor
jecxz
rcr
xor
cs
sbb
xchg
cmpsb
pop
xor
hlt
push
jmp
leave
adc
xor
pusha
int
xor
jo
in
shlb
sbb
subb
xchg
add
jecxz
std
pop
aaa
mov
xchg
jno
popa
clc
nop
xchg
or
lods
pushf
stos
leave
fisubl
testl
push
pop
inc
push
addr16
jbe
xor
cmp
xor
add
pop
ja
xchg
fcoms
xor
pop
adc
lahf
stc
pop
inc
test
cli
jg
fwait
mov
mov
sbb
inc
sahf
push
add
xchg
xor
inc
adc
outsb
sub
jns
or
and
imulb
fs
sbb
or
adc
xchg
and
pusha
push
aam
daa
and
pop
es
sbb
push
or
xchg
aaa
dec
aam
xor
sbb
filds
fnsave
rorl
sub
pop
xchg
pop
jo
jl
jae
xor
cmp
xchg
xor
sbb
shll
outsb
cmp
sarb
xor
gs
xlat
add
xor
mov
mov
xor
lds
jecxz
inc
roll
mov
lods
and
shll
mov
jle
enter
adc
jne
outsl
mov
leave
enter
jle
dec
lcall
andl
cmpsl
xor
cmp
adc
push
in
xor
sub
sub
enter
js
lods
jecxz
popa
xor
lea
arpl
push
inc
mov
mov
pop
push
insl
call
icebp
popf
mov
adc
pop
push
adc
mov
jmp
std
dec
xchg
js
xchg
mov
inc
in
push
movsb
insb
leave
aaa
cltd
xor
mov
push
mov
push
dec
ret
test
fstpl
mov
adc
scas
push
mov
sub
loopne
rol
je
push
xor
imul
xor
out
ds
xor
xchg
add
shlb
leave
xor
mov
pop
loope
xchg
aas
loop
dec
adcl
lods
outsl
dec
jl
int
adc
ss
sbbb
xor
daa
inc
lock
fs
xor
mov
sub
xor
int
loopne
dec
shl
and
push
call
cmpsl
aad
dec
jne
xor
hlt
cwtl
int3
ljmp
xor
mov
in
fnstenv
imul
jo
into
sub
xor
imul
jbe
lahf
fcompl
xor
cmp
out
cli
andb
adc
daa
add
sahf
inc
inc
jbe,pn
and
mov
mov
js
or
adc
call
push
mov
pop
dec
and
data16
add
or
mov
mov
pop
xor
and
jmp
inc
sub
xor
sub
es
or
mov
adc
xorl
dec
cmp
xor
push
jmp
movsl
cmp
ja
add
dec
adc
add
sbb
and
fnsave
push
pop
fnstenv
add
mov
lods
adc
inc
cmc
dec
loopne
les
adc
sub
and
cmp
and
fwait
iret
mov
leave
xor
push
mov
mov
push
mov
daa
jb
insl
pop
ret
repnz
shlb
and
inc
insb
push
dec
mov
mov
xor
or
test
and
push
xor
stos
fwait
xchg
sub
xchg
fsubl
mov
push
xor
das
leave
ret
xchg
nop
in
push
aam
in
jp
inc
fadd
repnz
addr16
lahf
aam
push
cmp
and
rcr
imul
mov
clc
cs
movsb
or
adc
faddl
icebp
lea
out
sbb
dec
notl
aaa
subl
shll
sbb
out
mov
test
lahf
aam
xor
ss
stos
jbe
push
mov
fisubrl
lock
sub
pushw
sbb
mov
iret
mov
mov
repnz
xor
xchg
push
gs
xor
shll
ss
cmp
xchg
xor
pop
insb
stc
cmc
xchg
rolb
sub
mov
repz
ja
or
stos
xchg
shl
mov
sub
pop
mov
stc
sub
xchg
insl
xor
call
cli
pop
pop
pop
out
pop
je
fnsave
pushf
mov
or
xor
out
cmp
bnd
repz
cmp
mov
pusha
scas
xor
dec
scas
jmp
xor
fwait
push
iret
shlb
adc
pusha
lods
loopne
jp
fwait
js
pop
in
and
aas
mov
les
sub
sub
add
push
xor
inc
rolb
sbb
mov
out
lret
subl
ss
loope
inc
inc
or
lods
push
pop
mov
push
call
adc
pushf
jl
inc
movsb
shlb
fwait
testl
mov
push
test
mov
sub
mov
sub
mov
jb
adc
imul
add
mov
ret
hlt
jbe
mov
and
mov
adc
outsl
add
add
pusha
dec
mov
in
or
or
push
pop
mov
enter
inc
mov
cs
cmp
cltd
xor
jno
je
in
shrl
test
imul
notb
fidivs
imul
jne
ficoml
and
adc
adc
sub
dec
xchg
aaa
pushf
mov
aad
gs
rcrb
push
lret
sahf
nop
cltd
ljmp
sbb
jae
stos
mov
mov
xchg
cmp
lods
sbb
add
jge
jo
lea
push
mov
and
lods
cltd
icebp
push
mov
xchg
push
mov
jp
aam
cmp
mov
xchg
jbe
mov
ss
rcrb
add
pop
dec
std
adc
cld
int3
sub
aaa
sahf
and
jb
adc
dec
adc
sub
mov
in
mov
mov
inc
aaa
pop
xor
int3
fwait
in
mov
jge
nop
mov
sub
xchg
xchg
jnp
sahf
jmp
cmp
out
jae
fs
adc
sahf
enter
mov
ret
push
adc
outsl
cld
lahf
or
xchg
mov
inc
lahf
mov
ss
or
push
in
sub
mov
aad
adc
jecxz
add
mov
mov
lods
inc
shrd
ss
push
pop
xor
leave
cwtl
jecxz
xor
xchg
call
xor
test
fmull
lea
mov
xchg
insb
mov
dec
insl
jbe
jb
lret
lds
jl
mov
push
shrb
push
adc
jl
push
in
ja
dec
adc
mov
inc
add
inc
int3
xchg
out
out
subb
lahf
push
sbb
dec
shll
cmp
xchg
mov
xchg
cmpsl
push
cmc
mov
cwtl
dec
ds
or
push
fs
mov
jns
stos
daa
movsl
ljmp
cmp
ljmp
dec
cwtl
or
mov
inc
and
lcall
adc
push
loopne
mov
sub
pop
cwtl
icebp
or
sar
fs
imul
lods
xor
mov
cmpsb
or
dec
lret
jno
mov
stos
je
xor
lret
fwait
adc
lods
jmp
lret
inc
mov
dec
das
sbb
fmuls
jmp
mov
je
jb
pop
add
fldcw
push
push
inc
add
aam
xor
push
insb
xchg
lahf
popa
mov
addr16
inc
xor
mov
std
adc
les
cmpsl
xor
or
mov
out
xor
mov
dec
push
pop
xorb
dec
int
add
movsb
xor
ja
mov
xor
loop
cmp
or
or
test
xor
mov
push
inc
pop
push
scas
fcoml
xor
cmpsb
mov
mov
mov
push
lahf
push
cld
addr16
les
jmp
mov
cmpsl
xlat
pop
push
imul
or
mov
jne
aam
inc
mov
xor
xchg
std
push
cmc
inc
xor
cwtl
cmpsb
sarb
ds
push
rclb
mov
cltd
and
jb
add
fnstenv
test
loopne
xchg
mov
pushf
out
pop
push
or
jl
pusha
adc
arpl
pop
add
inc
sysenter
movsl
cltd
test
add
xor
test
xchg
inc
xor
sub
push
and
sti
mov
cmp
fnstenv
adc
dec
lock
dec
xor
push
mov
mov
inc
out
in
dec
jl
xor
pop
aad
fld
outsl
pop
mov
cli
mov
mov
push
aas
mov
jg
xor
iret
dec
mov
sbb
xor
hlt
fstl
imul
sbb
mov
pop
jge
cmpsl
xor
inc
lods
imul
dec
xlat
cmp
orl
push
push
mov
gs
xlat
jo
mov
dec
cmp
fcoms
sub
xor
xor
jp
adc
cs
shl
repz
in
push
push
movsb
mov
jge
and
inc
jno
jno
and
add
push
xor
mov
mov
xor
lea
scas
out
dec
mull
lahf
adc
setl
incb
adc
xor
pop
stos
jmp
xor
aaa
mov
adc
mov
cmc
xchg
cmp
mov
mov
xchg
adc
mov
dec
jp
adc
cld
jns
rclb
test
adc
push
sub
sub
pop
insb
xor
idiv
aas
iret
test
cmc
cmp
ljmp
sbb
mov
sti
jns
fdivp
pop
test
cmp
int
out
add
xor
ror
pop
cmp
cmp
jae
push
and
repnz
xor
inc
int3
inc
push
mov
jmp
movzwl
outsl
xor
xchg
push
adc
fsubl
cwtl
mov
shlb
inc
orb
xor
lret
dec
pop
sarb
orl
outsl
sub
scas
push
stos
mov
leave
lcall
pusha
inc
repnz
aaa
cmpsl
aad
xor
nop
xorb
dec
inc
xor
cmp
xchg
subl
test
loopne
jg
push
add
sarl
push
js
jle
push
add
lahf
mov
cmp
xlat
push
dec
xor
xor
inc
pop
stos
mov
mov
adc
rcll
add
stc
movsl
add
jne
sahf
loop
sub
sbb
or
test
fnstenv
and
sbb
xor
push
pushf
mov
dec
dec
xor
cli
pop
fstps
jle
pop
loopne
je
sbb
outsb
std
push
or
out
mov
pop
loop
out
aam
in
lock
jne
add
frstor
jns
shlb
xchg
sub
mov
cmp
divb
push
loop
push
pop
mov
push
mov
adc
sar
cld
push
push
mov
insl
xchg
sbb
cmp
jns
sub
cmpl
test
jbe
sub
pop
push
test
xchg
lods
or
jnp
push
lahf
int3
rcrb
cmp
sbb
repnz
mov
xor
gs
lds
add
lods
fisubl
mov
in
in
idivl
add
xchg
outsb
insl
mov
scas
ret
xor
lret
cmp
repz
jne
xor
ja
pop
movsb
xor
and
sub
mov
inc
sub
ja
fdivl
xor
imul
mov
cld
jmp
dec
movsb
fidivs
out
inc
stos
ret
adc
xchg
int
mov
mov
popf
std
lods
jecxz
xor
xor
inc
inc
ds
addr16
decl
xor
jl
popf
es
fcoms
inc
jg
pop
outsl
jo
xor
mov
repnz
xchg
add
mov
out
sbb
push
xor
adc
nop
or
mov
arpl
xor
push
xor
inc
lods
xor
xor
pop
inc
aaa
adcl
adc
push
shll
test
xor
jnp
jg
mov
ljmp
jne
loop
cmp
mov
test
hlt
cli
dec
cmpsb
cmpsl
mov
iret
out
adc
loope
push
ss
xor
and
mov
sub
xor
mov
cmp
xor
ja
xchg
in
add
jns
lea
push
out
test
cmc
xor
das
cmp
sbb
and
insb
jne
add
xor
add
int
push
daa
dec
iret
ficoml
lahf
loopne
je
pop
xchg
dec
pusha
stc
mov
mov
adc
int3
fldt
xchg
jno
xor
aaa
adc
ret
fnstsw
sub
lret
aad
mov
divb
push
cmp
xor
mov
add
icebp
pushf
push
fs
mov
lcall
push
xor
pop
andb
sub
cmc
into
push
mov
lock
cmpsb
xor
xchg
xor
push
sahf
cmp
mov
cmpsl
insb
mov
push
pop
incb
je
add
xor
push
sub
mov
jg
push
sbb
xchg
sysenter
ss
sub
in
sbb
repnz
shll
and
xor
adcl
pop
cltd
sarl
rolb
sub
pop
cmp
mull
aam
or
adc
mov
xor
mov
mov
fs
sub
pop
xor
andb
out
xchg
sbb
stos
popf
jp
gs
cmpsl
jnp
push
push
pusha
add
mov
mov
dec
popf
cmp
xchg
xor
and
cmp
insl
lods
data16
jae
xchg
xor
movsl
xchg
test
adc
xor
stc
and
mov
add
push
scas
adc
hlt
xor
mov
lcall
mov
mov
adc
adc
mov
pop
xor
sub
xor
jl
insb
jae
out
icebp
xor
fidivs
mov
inc
mov
jl
jbe
stc
mov
fdivl
int3
imul
popa
xor
pop
push
jo
dec
jb
xchg
sbb
mov
push
jp
aas
mov
pop
test
or
test
pop
cmpsb
insb
cmpsl
pushf
sub
pop
mov
movsb
adc
sbb
or
iret
xchg
add
bound
push
adc
movsl
mov
or
mov
inc
jl
pop
lea
sub
jno
xor
aad
mov
hlt
jne
xor
mov
pop
popf
or
lret
aad
push
frndint
sub
outsl
es
idivl
or
ret
xchg
inc
mov
mov
out
loopne
xor
sub
ficoms
movl
out
mov
fidivrl
js
popf
fidivs
xchg
adc
aad
cmp
rcrb
cmpsl
out
xlat
inc
mov
aam
sub
cmp
mov
lods
sub
inc
fbstp
outsb
out
mov
sub
aaa
push
fnclex
push
add
dec
gs
mov
es
sub
cmp
jge
adc
xchg
out
adc
mov
push
sbb
jmp
dec
or
mov
sbb
push
bound
cwtl
sbb
sahf
and
mov
les
fldenv
push
push
mov
add
lods
dec
in
fisubrl
loope
in
repz
xchg
scas
aaa
xchg
lahf
jecxz
push
stos
lret
repz
std
xchg
mov
test
test
add
aam
and
push
mov
add
enter
adc
push
shrb
and
fnsave
add
cmp
push
sub
jge
jo
inc
jp
mov
je
push
push
es
jbe
mov
push
adc
push
mov
lcall
pop
jae
xor
rcr
add
les
xchg
insl
aas
lcall
jg
loopne
js
std
dec
jmp
dec
xchg
imul
ss
add
xlat
shl
mov
xchg
test
pusha
sbb
ljmp
mov
sahf
jne
jge
jecxz
xor
icebp
cmc
adc
push
ret
inc
xor
push
mov
inc
sbb
out
push
sbb
rolb
insb
mov
jge
in
mov
and
mov
enter
loopne
lahf
les
xor
imul
shrl
inc
mov
or
jle
ljmp
sbb
rolb
movsb
or
cs
jge
es
sbb
faddl
clc
in
add
gs
out
adc
push
test
mov
imul
mov
aas
add
lods
cwtl
and
jne
cmp
in
nop
fdivrl
adc
sub
aaa
xor
ret
shll
es
mov
shrb
dec
je
ret
pop
js
xchg
fisttpl
iret
fiaddl
flds
sbb
out
clc
mov
aam
out
jecxz
sub
and
mov
add
fwait
pop
lock
stos
pop
or
popa
nop
sbb
int3
lods
adc
and
ret
xchg
xlat
add
xchg
mov
mov
jne
adc
add
fnstsw
ljmp
jne
cmp
inc
or
stos
or
push
lods
xchg
fwait
rcpps
jl
mov
jne
add
sub
movsl
or
mov
push
xlat
imul
add
or
adc
leave
xor
cmp
andl
fidivs
cmp
xorl
iret
cwtl
je
insl
push
fistl
xchg
mov
jp
les
fld
and
sbb
mov
dec
loopne
mov
test
leave
loope
neg
jp
cmpsb
xchg
inc
or
add
fcoml
in
test
sub
outsl
fldt
push
and
sub
divb
int
dec
icebp
fldenv
in
inc
inc
sbb
adc
ljmp
and
lods
and
scas
jnp
adc
stos
pop
cmp
xor
xchg
adcl
arpl
rolb
add
sub
or
and
xor
ja
leave
pusha
adc
pop
xor
lods
shlb
add
into
pop
je
or
inc
sub
ljmp
mov
hlt
mov
push
inc
adc
xor
mov
es
xchg
mov
sub
rcrl
hlt
push
mov
push
adc
jns
xchg
ss
dec
addr16
sub
out
jae
je
ret
shlb
push
int
jecxz
sti
inc
hlt
mov
pusha
or
xchg
mov
and
xor
mov
push
add
add
jle
out
fwait
dec
jnp
enter
pop
push
or
push
jns
cmp
xor
xor
iret
mov
das
pop
cmpsl
loop
je
xor
clc
jnp
mov
adc
xchg
jb
nop
xchg
inc
adc
sub
les
push
dec
sub
test
mov
pop
imul
rorl
xor
es
xchg
stc
mov
mov
sub
aam
mov
push
sarb
lock
ucomiss
mov
xchg
xor
xor
jg
neg
shrb
loope,pt
call
mov
sahf
mov
les
mov
shrl
xor
mov
pop
pop
sbb
dec
jbe
test
lods
fs
push
mov
xor
push
jae
cld
cli
testl
sarb
mov
xchg
mov
sbb
mov
adc
das
insb
inc
pop
insb
push
sti
jg
xchg
sub
fcmovnb
push
test
rorl
push
les
divb
sub
cld
bound
sbb
mov
pop
aas
lods
xor
cld
ja
cmp
xor
sbb
mov
pop
jae
xor
jg
cmc
mov
add
aaa
inc
xor
scas
xchg
rcll
cmpsl
divl
pop
sar
aas
mov
cmp
popf
lods
add
jnp
out
movsb
rol
sarl
cmp
push
jns
pop
push
push
adc
mov
mov
pop
jl
les
sub
cmp
add
sub
jmp
leave
push
xorb
sahf
sub
add
lock
arpl
inc
or
popf
repz
aad
fs
ja
addr16
aaa
jl
push
cmc
or
cltd
adc
enter
pop
sbb
inc
das
lret
jb
cmp
cmp
cmp
sub
sub
mov
out
leave
sbb
adc
fisttpl
aad
xor
into
clc
inc
lret
cwtl
aad
sub
les
mov
mov
or
adc
je
mov
xorl
dec
push
negl
xchg
xor
outsb
cld
test
loopne
pop
les
out
cwtl
ret
insl
mov
ficomps
loop
pop
ret
fwait
fs
test
push
add
xchg
rcr
xor
aad
sub
cmc
pop
inc
aam
add
xchg
pushf
push
fwait
push
test
ljmp
jae
lods
fdivp
stos
cmp
lahf
xor
inc
pop
aaa
push
outsl
or
addr16
jae
outsl
setae
cmp
or
sti
das
mov
pop
test
sahf
hlt
mov
loopne
mov
cmp
test
shlb
lahf
hlt
dec
sub
hlt
pop
aam
and
dec
mov
fmull
add
jge
adc
push
cwtl
aad
mov
mov
fdivl
ljmp
pop
stc
xor
xor
enter
mov
sub
inc
fcompl
in
ficoms
or
cmp
cmp
mov
imul
ja
stos
pop
outsl
fnsave
mov
mov
cmp
push
xchg
in
dec
lcall
ljmp
sub
ds
or
fnstcw
fwait
mov
or
daa
adc
sub
sbb
lds
adc
xor
push
cs
sbb
mov
jecxz
adc
cmpsl
rcll
nop
adc
addr16
mov
lods
es
add
out
jp
mov
xchg
adc
mov
sbb
xor
or
sub
sub
sbb
adc
sub
pop
fs
sahf
ficoml
cmp
or
ret
data16
push
adc
or
je
push
test
mov
inc
xor
mov
adc
mov
das
adc
test
mov
xorl
sbb
js
test
xchg
aad
push
fwait
dec
xchg
and
in
cmp
adc
jae
sbbl
lock
gs
push
mov
push
mov
fdivrl
call
pop
add
push
aas
dec
inc
cmp
lds
sbb
xchg
fsubrl
pop
sarl
icebp
test
enter
shrb
pop
sarl
mov
mov
cmc
jl
testl
and
dec
mov
push
sbb
mov
inc
lods
rolb
in
or
and
in
adc
aaa
mov
clc
call
cmp
rcll
push
or
rcr
xor
out
andl
aad
jae
ds
nop
out
cmp
mov
in
cmp
icebp
or
sub
sbb
shll
cwtl
ret
inc
clc
jle
cmp
jmp
inc
aaa
lret
mov
xor
lar
xchg
or
test
mov
xor
inc
scas
test
mov
mov
dec
aam
les
icebp
jp
xchg
leave
or
gs
xchg
ret
jne
filds
push
and
sbb
rol
fsts
cmp
or
sbb
mov
cmpsl
pusha
aam
icebp
inc
or
popf
sub
sub
mov
add
std
adc
cmc
hlt
in
aad
icebp
adc
mov
pop
aam
ja
movsl
in
push
call
mov
in
loopne
sarl
sub
push
mov
lods
ja
stc
sub
jge
ljmp
pushf
test
stc
js
or
sub
push
popf
add
sbb
mov
inc
jns
in
test
out
adc
call
mov
cmp
out
aad
in
xor
les
fdivl
pop
cs
sub
ja
mov
and
add
lock
mov
or
std
call
je
adc
out
frstor
jbe
daa
sahf
iret
sub
ret
add
subb
lret
inc
adc
inc
fmull
lcall
int3
add
out
in
fidivrl
push
xchg
mov
mov
push
sub
add
fisubrs
jnp
dec
stc
bound
outsl
aaa
shrb
jbe
mov
and
xchg
push
shll
jl
scas
daa
xchg
nop
pop
push
xor
cwtl
and
push
sub
out
lods
mov
rcrl
icebp
and
clc
jns
push
sbb
cmp
js
or
xchg
adc
pop
outsl
jbe
cmpsl
flds
xchg
sbb
mov
js
ss
shrb
push
fbld
ret
xchg
rcll
repnz
cwtl
xchg
xor
stos
inc
pop
lods
push
sar
mov
push
sbb
into
mov
dec
cmc
test
sbb
xchg
push
rorb
icebp
inc
dec
dec
scas
lock
and
cmp
mov
sub
lock
jno
dec
pop
xor
nop
or
pop
xchg
adc
sbb
lahf
aaa
pop
jmp
es
test
dec
stos
jb
in
xchg
dec
mov
jp,pn
scas
repnz
mov
enter
inc
mov
add
cli
jmp
mov
imul
xor
or
cwtl
jecxz
xchg
push
inc
adc
add
idiv
das
sti
mov
adc
sbb
std
dec
repz
lcall
jecxz
pop
adc
std
xor
inc
gs
mov
xchg
clc
ja
sbb
mul
repz
mov
pop
adc
inc
movsb
enter
mov
pushf
mov
cmp
out
jp
adc
subl
xor
std
xor
push
hlt
xchg
cli
or
pop
xor
sti
clc
inc
adc
cmpl
sbbl
addb
loope
cli
dec
stc
sub
loopne
fwait
std
inc
xor
sti
cld
repnz
mov
xor
sti
stos
cli
int
mov
sti
notl
jb
cwtl
cmc
nop
and
les
in
dec
jmp
inc
sub
sbb
loope
test
js
mov
push
lret
out
sbb
lea
std
lock
sbb
push
cli
sti
dec
dec
or
popf
sbb
clc
mov
lea
testb
in
xor
rclb
lret
in
jecxz
andl
test
ljmp
pop
lea
hlt
aas
sar
sbb
cld
pusha
lea
xor
dec
xchg
inc
sar
scas
int3
nop
out
mov
clc
les
xor
in
xchg
repz
lahf
test
les
test
jge
mov
cli
cmp
fs
loope
xorb
repz
out
enter
pop
push
and
std
sbb
cld
pushf
mov
sti
in
gs
daa
inc
fdivr
mov
fists
push
adc
test
cmp
loopne
adc
in
xor
sti
jecxz
fistps
xor
sub
std
stc
xor
cld
ljmp
mov
clc
ret
xchg
xchg
inc
bound
push
lds
xchg
jnp
inc
test
divb
cmc
mov
adcb
in
int3
sbb
sti
jecxz
cli
xchg
stc
inc
pop
adc
rol
insb
xchg
push
or
hlt
inc
fildll
xor
xor
testl
jno
jp
pop
sti
hlt
test
data16
push
stc
and
notb
or
mov
jecxz
addl
loope
fbld
cmp
ljmp
sub
or
jbe
xor
sti
notl
add
xchg
in
cmc
sti
nop
rol
or
int
xchg
dec
outsl
loopne
mov
arpl
push
sbb
cld
mov
test
push
lods
cli
out
stc
into
in
xchg
hlt
inc
clc
lret
mull
sbb
push
jae
adc
ljmp
mov
leave
sti
loope
cli
insb
stc
inc
clc
sub
mov
fistps
xor
sti
std
mov
dec
orb
int
mov
sti
cmp
cli
push
ss
push
stc
push
clc
sbb
notl
pusha
ret
sbb
shlb
sub
mov
arpl
xor
sti
enter
call
in
xchg
hlt
xlat
sti
add
jecxz
clc
ret
jne,pn
testl
cmc
sub
jo
mov
xchg
in
orl
or
push
loopne
fbld
push
mov
out
sbb
adc
stc
xor
mov
lea
neg
in
inc
into
pop
mov
test
sbb
mov
push
lret
jecxz
andl
ja
ds
fucomip
fwait
shlb
dec
test
std
mov
cmpsb
sub
out
cld
loopne
xchg
sub
add
fsubrp
xchg
jae
cmp
jne
mov
and
enter
xchg
sbb
jb
jbe
fs
adc
in
test
adc
mov
xor
addr16
jmp
inc
and
ret
dec
xchg
push
sti
mov
pop
sbb
stc
fimuls
mov
inc
shr
mulb
scas
xchg
test
fs
jg
mov
and
icebp
loope
loopne
je
inc
fbld
mov
add
push
dec
sub
jecxz
iret
inc
sahf
nop
lods
and
loope
loopne
movb
sbb
xor
sub
out
mov
nop
adc
movl
push
lock
jo
inc
aam
add
xor
sar
cmp
fisttps
adc
xor
std
mov
fstpt
push
out
shll
cli
shl
adc
stc
mov
or
jle
stos
cmc
outsl
out
inc
or
repz
inc
loopne
push
xor
sti
loop
cli
pop
repnz
sbb
and
in
dec
cmc
inc
sbbb
add
mov
cli
mov
lret
inc
push
pop
fwait
idivb
sub
push
cld
jbe
and
mov
adc
jb
adc
test
cmp
fdivp
mov
mov
cmp
psubusb
push
call
sub
in
fxch
xchg
flds
cmp
pop
je
lret
jbe
insb
loopne
fisttps
fcoms
ret
std
cld
mov
cmc
push
aam
enter
rcr
sti
jne
and
scas
fistpll
out
add
pop
push
mov
cld
inc
push
rclb
divb
adc
mov
add
fsubrp
insl
int
cmpsb
add
std
mov
dec
leave
sub
call
mov
jle
sub
adcb
dec
sbb
adc
popf
inc
out
cs
icebp
addb
jb
xor
lcall
ficomps
adcb
xchg
sbbb
aam
insl
pop
cli
mov
clc
loope
xor
adc
pop
jmp
mov
nop
hlt
icebp
loop
les
test
test
adc
fbstp
aaa
xor
std
inc
adc
cld
xor
xchg
loopne
xchg
push
cli
mov
int3
clc
push
xor
test
test
push
jmp
loopne
add
in
pop
repz
inc
sub
lahf
dec
lock
mov
std
in
cld
enter
jl
xor
ljmp
out
sbb
cmc
adc
inc
mov
jmp
in
in
mov
jg
push
aam
loope
lret
loopne
xchg
add
pushf
in
lea
in
inc
xor
sti
cli
sub
xchg
stc
mov
aad
jmp
sbb
fdivl
lcall
fdiv
test
inc
roll
dec
outsl
in
sbb
xchg
loope
shll
pop
jg
movsb
fadds
sti
std
sub
mov
add
fiadds
in
stos
loop
lock
insl
mov
enter
mov
xlat
mov
fprem1
je
sub
je
in
jecxz
push
sbb
loop
xchg
xchg
sbb
test
jb
rcr
add
jl
push
stos
std
mov
inc
nop
jae
imul
fiadds
loope
xor
fistpll
test
adc
sti
stc
cli
xchg
lret
or
cmp
push
in
xorl
idiv
cmc
scas
cli
mov
sub
push
cmpsl
in
jmp
shlb
sbb
test
sbb
cmc
mov
and
mov
sti
adc
jmp
sti
clc
aas
pop
or
insl
ja
xchg
testb
pop
bound
rcrb
push
in
lea
jecxz
in
mov
lds
paddusb
es
xchg
pop
xchg
and
pop
fbld
adc
inc
mov
sti
adc
lea
inc
cmpsl
clc
sbb
rcrl
mov
je
in
add
repnz
mov
mov
leave
pusha
or
dec
push
and
clc
add
xchg
loop
loope
adc
test
idiv
xlat
test
cli
scas
das
lods
mov
mov
shl
js
call
popf
sub
aam
scas
in
jo
pop
rorl
jecxz
xor
jp
je
out
cld
aad
inc
out
jle
jnp
jne
into
clc
sbb
idivl
test
and
les
xchg
jecxz
hlt
aam
loop
xor
cld
or
dec
pop
pop
loopne
pop
xchg
mov
xchg
adcb
jae
call
ljmp
sti
in
cli
stos
in
addr16
stc
sub
mov
in
divb
add
lret
shl
xor
sbb
in
xchg
dec
cli
cwtl
jecxz
orb
imul
aam
sub
test
std
shll
mov
sbb
cli
addb
sub
xchg
pop
jle
loop
pop
clc
lods
leave
fwait
jno
shl
cltd
add
mov
cltd
sub
sub
mov
push
sahf
clc
adc
mov
lock
lock
push
loop
loope
sbb
repz
scas
dec
test
cld
dec
jp
mov
xchg
cli
cmc
stc
dec
repz
mull
push
cmc
dec
sahf
cmp
pop
inc
jecxz
xor
adc
insl
loope
loopne
sbbb
jg
sub
mov
xor
or
jne
outsl
popa
push
stos
pusha
adc
cli
movsb
dec
mov
pop
sub
mov
add
ss
hlt
mov
lods
in
dec
dec
inc
shl
push
mov
push
mul
dec
out
ffreep
in
popa
rol
mov
std
shl
pop
mov
out
mov
mov
push
xchg
jg
adc
lock
adc
pusha
stos
sbb
or
nop
push
xor
inc
cwtl
out
rcll
ja
pop
in
jmp
inc
dec
int
mov
testl
adc
lock
xchg
push
cmp
loop
nop
pop
loope
push
aam
sub
and
test
adc
xchg
sbbl
sti
jp
in
bound
dec
jle
sahf
das
jg
xor
pushf
movsb
add
adc
cmpb
loope
xor
add
loopne
xchg
arpl
repnz
call
cli
inc
inc
xchg
mov
or
adc
push
sub
sub
sbb
lods
lret
pop
outsl
mov
dec
shlb
xor
dec
movsl
in
mov
es
sar
mov
shl
andl
dec
into
sbb
sub
cmpsb
sti
loopne
push
inc
fucomip
incb
xchg
mov
std
jns
mov
pop
adc
add
xorb
mov
mov
dec
cmc
xor
push
pop
in
adc
jecxz
lock
loope
pop
xor
and
or
imulb
cwtl
pop
jge
fs
enter
jmp
loopne
shrl
jae
cmp
ficoms
sub
mov
mov
out
or
insl
dec
sub
xlat
imull
test
call
call
pop
shrl
cmp
sub
sub
sbbb
lcall
in
cmp
enter
pop
xor
int
xchg
pusha
clc
ljmp
inc
nop
mov
mov
push
in
fsub
sub
js
inc
je
fsub
jg
decl
or
hlt
sahf
filds
sti
mov
xor
sbb
in
incb
jle
jmp
xchg
jecxz
loope
cwtl
jbe
xchg
orl
adc
adc
pop
aam
sti
or
cli
or
stc
mov
xor
sti
cmc
mov
outsl
insb
and
je
popf
je
mov
jl
push
sub
sti
loop
cli
adc
adc
popf
xor
pop
std
mov
xchg
sbb
in
cmp
outsb
notb
adc
add
jl
out
adc
lret
pop
in
pusha
xchg
adc
loope
dec
fsub
mov
sti
mov
std
pop
leave
push
orl
pop
sbb
inc
je
xor
add
in
xor
xchg
dec
mov
sar
lea
adc
xchg
push
mul
push
mov
bound
outsb
cld
push
lea
leave
add
adc
add
add
adc
inc
cmc
mov
mov
sar
cld
test
out
xchg
xor
clc
sbb
pop
pop
push
scas
divl
jle
mov
je
xor
rcr
xor
movsb
jb
cmp
cmp
jecxz
cli
test
cwtl
loop
sbb
mov
fistps
xchg
sahf
sbb
cld
std
lcall
sub
xchg
outsl
jno
xchg
add
fdivs
push
lcall
je
sbbl
repz
inc
mov
loop
shll
pop
addb
rorb
xchg
cmc
cli
mov
daa
clc
rolb
in
mov
test
push
fdivrs
shl
les
sbb
in
loopne
mov
fbstp
jmp
out
sub
dec
xchg
stc
mov
xchg
inc
jae
push
push
sahf
sbb
mov
adc
daa
dec
mov
jecxz
mov
pushf
sub
dec
sbb
fistpll
out
jp
andb
pop
sti
push
push
cli
adc
stos
jmp
lret
in
test
push
outsb
pop
jp
fsubr
test
mov
add
loope
cli
sar
shr
mov
fisttpl
inc
sub
xchg
xor
into
adc
repnz
push
sti
fcmovbe
repnz
das
js
jmp
and
rcrb
adc
in
xchg
incl
xchg
lret
sahf
dec
je
loop
xor
sti
loope
sbb
loopne
xor
xor
adc
jle
push
rcr
push
addl
xor
adc
sti
pop
movsb
cmc
imul
cltd
sbb
xchg
lock
xchg
mov
jecxz
push
out
sub
jle
xor
sti
loopne
fcompl
out
xchg
bound
int
ljmp
pop
scas
std
ss
mov
aas
sti
xor
cli
iret
stc
sub
sbb
pop
push
pop
not
in
xchg
jno
mov
add
leave
ja
add
hlt
jl
jp
xor
fistpll
cld
dec
push
bound
sti
cli
data16
out
aam
mov
push
psubq
ret
jmp
jo
je
mov
in
jecxz
fsub
mov
cmp
jle
dec
ret
cli
mov
ljmp
clc
dec
push
adc
xchg
xor
jp
push
add
loope
pop
pavgb
hlt
pop
jecxz
clc
fsubr
cltd
aam
sar
dec
sbb
cli
sub
notb
cmc
xor
ficoms
es
jecxz
loop
xor
sti
loope
out
es
xchg
pop
cli
int
fisttps
gs
sub
xchg
push
push
inc
cld
aaa
adc
cli
rorb
and
jmp
arpl
sub
dec
stc
push
insb
pop
ljmp
adc
call
loop
xor
aaa
sub
or
adc
out
shl
jae
mov
and
push
mov
xor
dec
push
cmp
mov
jne
cmc
fstpt
clc
dec
jo
mov
sti
loopne
adc
std
dec
addb
sbb
sti
and
das
adc
xchg
in
cltd
int
add
les
clc
adc
in
xor
sbbb
fsubrs
lcall
pop
in
aam
pop
aam
cld
cmpsl
sti
mov
nop
pop
inc
mov
imul
or
and
xchg
out
lods
xor
push
mov
sahf
inc
cmpl
xor
out
std
ja
sub
xchg
lock
xor
jp
sbb
stc
mov
push
xor
out
mull
mov
out
stc
adc
xor
mov
add
out
in
pop
leave
adc
lock
mov
xchg
dec
mov
or
xchg
mov
xchg
jg
lret
push
xchg
push
fists
sbb
sti
popf
xchg
sub
sar
inc
popf
mov
cld
mov
push
inc
sbb
mov
outsl
cmpb
movsb
mov
pop
mov
loop
loope
dec
int
or
cld
into
rcrb
stc
notl
jp
hlt
jl
jnp
dec
out
mov
in
in
mov
cmp
popf
xchg
sarb
nop
xchg
clc
orl
pop
jno
and
mull
pop
sar
adc
loopne
in
cmp
les
loope
push
pushf
sub
cli
xchg
aam
jno
fs
pop
pushf
faddl
std
sar
js
pop
lea
andl
xor
repnz
xchg
adc
shlb
in
movsb
mov
cs
xor
adc
mov
mov
cs
lock
sbb
pop
mov
pop
cli
sarl
mov
stos
fisttps
inc
inc
pop
adc
mov
mov
cmpl
mov
clc
and
int3
js,pt
sbb
clc
mov
nop
adc
testb
xchg
fsubp
mov
adc
das
in
stc
or
cmp
filds
push
shll
or
out
test
push
sub
sti
sti
scas
out
push
push
xchg
iret
inc
xchg
fsubrl
notl
mov
orl
dec
adc
xchg
in
test
mov
pop
dec
and
incl
ret
incb
sbb
rclb
int
add
sbb
or
movsl
dec
div
sub
loopne
sti
in
lock
in
loope
ret
add
clc
repnz
push
clc
test
cmc
xchg
call
insl
js
push
out
sub
and
mov
add
aam
fsubl
dec
aas
inc
push
call
or
aad
adc
stc
pop
jp
push
xchg
push
notb
mov
xchg
in
dec
mov
xchg
xor
and
es
dec
std
rcrb
sarb
jne
xchg
cli
lret
lock
cmp
in
or
test
push
out
in
sub
in
cmp
or
sbb
mov
mov
cmp
and
inc
mov
in
mov
push
jecxz
lea
mov
pop
repz
jg
aas
fists
inc
mov
mov
call
push
clc
pop
xor
jno
orl
adc
enter
lret
lea
xchg
xchg
jecxz
dec
jge
adc
scas
loope
test
loopne
xor
out
mov
mov
xor
xchg
pushf
in
mov
xchg
mov
fdivr
mov
data16
loop
popl
mov
add
in
dec
in
out
popf
or
mov
sbbl
lock
ljmp
repnz
push
adc
xchg
jae
lahf
loop
in
and
test
aam
fistps
and
jo
xchg
xchg
jae
cli
mov
jno
testb
mov
push
xor
popf
add
in
pop
in
jb
daa
jecxz
loop
adc
loope
dec
jno
pop
pop
add
iret
push
mov
adc
ljmp
cmp
sub
in
out
lea
movsb
push
cwtl
loop
andb
in
fstl
jb
dec
cwtl
sahf
out
jmp
mov
or
loop
outsl
or
ss
out
fildll
ds
mov
int3
add
mov
adc
test
nop
cmp
mov
xchg
cmp
mov
call
mov
enter
fbld
mov
fs
sub
jbe
lods
push
out
and
call
mov
and
or
sti
fdivrp
test
mov
ret
clc
fimull
push
les
sbb
xor
inc
or
mov
jmp
jecxz
stos
pop
dec
and
dec
test
jecxz
std
mov
pop
loopne
data16
adc
push
ljmp
sbb
fs
shr
cltd
cmp
sub
xchg
loop
mov
sti
jbe
or
mov
push
mov
mov
popa
out
push
sahf
inc
ror
mov
and
sarb
inc
mov
in
mov
sti
loope
cli
es
adc
incb
arpl
xor
xchg
lcall
adc
mov
testl
push
in
mov
int3
jecxz
dec
xchg
inc
in
ret
loopne
push
push
stos
mov
ljmp
mov
lea
jl
rcrb
cmp
add
sbb
xchg
dec
or
loopne
adc
dec
fsub
movsl
dec
rorb
adc
cmp
rclb
clc
aad
push
imul
xor
fsincos
das
dec
dec
test
sbb
dec
xchg
sbb
push
ja
mov
xor
call
push
call
push
add
push
insb
popa
jns
outsl
jne
fs
add
pop
lahf
test
insb
dec
mov
movsl
ficompl
sub
push
push
mov
adc
in
hlt
fidivrl
dec
xchg
inc
fildll
pop
mov
mov
add
jg
mov
in
pop
cmpl
repnz
test
rclb
fs
cmp
mov
test
not
sahf
pop
xchg
sbb
mov
mov
and
pushf
filds
push
cmp
outsb
pop
push
pop
clc
mov
les
adc
dec
sbb
sub
je
mov
popf
aad
pop
dec
test
out
jae
and
push
mov
lock
cmp
insb
bound
int3
stos
lret
iret
mov
sbb
jae,pn
ss
mov
pop
cmpsl
cmp
mov
roll
mov
ljmp
sahf
xor
not
outsl
cmp
xlat
pop
fbld
lods
inc
ror
lods
fisubl
out
pop
out
dec
repnz
pop
data16
fistpl
push
je
sti
and
nop
jnp
scas
push
jne
and
and
jecxz
mov
stc
and
into
jne
repz
loop
out
lea
scas
xchg
push
dec
jns
movsb
stc
es
in
xor
shrb
xchg
pusha
push
add
enter
pop
repnz
mov
das
imul
sub
dec
mov
into
lods
mov
pop
mov
fistpl
sub
in
imul
pushf
hlt
rcrl
lds
addl
int3
rcl
sub
inc
inc
xchg
jmp
arpl
daa
pop
cli
xorl
or
mov
hlt
or
inc
hlt
leave
xor
ret
fildll
clc
inc
lret
rorb
pusha
cmpsl
hlt
aad
jmp
sbb
dec
lret
dec
popf
and
and
jmp
add
inc
lcall
mov
ljmp
and
mov
lea
ljmp
xlat
pushf
cmp
and
cmp
fdivr
dec
aad
xor
lock
loope
push
pop
dec
jae
xchg
mov
ret
mov
gs
jmp
push
inc
pusha
push
mov
iret
add
dec
gs
mov
call
icebp
lods
fcompl
inc
sub
xchg
inc
lret
pop
mov
imul
xor
xchg
adc
xlat
or
mov
cltd
push
jge
jno
inc
std
add
add
and
pop
rorb
aad
sbb
or
mov
mulb
aas
inc
pusha
mov
clc
jge
nop
and
dec
mov
jecxz
and
mov
or
icebp
xor
iret
cmp
lret
lahf
jae
out
js
add
add
pmaxub
mov
cmp
xor
out
mov
add
and
cltd
clc
lds
pushf
jp
into
enter
imul
dec
add
or
enter
push
int3
leave
addr16
mov
xor
push
call
and
fisttps
xor
jne
add
cld
add
js
aam
jmp
imul
mov
lret
pop
test
jnp
mov
shll
stos
xor
int3
addl
fucom
mov
pushf
and
rolb
fwait
cmc
xchg
inc
dec
popf
or
jl
arpl
xor
in
sub
dec
cli
rclb
insl
nopl
loope
xor
cld
mov
mov
das
or
popf
and
jmp
add
call
xor
testb
fdivl
push
leave
rclb
mov
sub
jne
or
or
and
in
or
cmpsl
jl
xlat
test
adc
cld
fldt
inc
dec
push
fnstenv
cmpsb
dec
xchg
fsubs
aas
xlat
jmp
add
enter
xchg
loope
jmp
jmp
jg
popf
and
aad
jne
add
push
testl
fcoml
fimull
mov
inc
xchg
mov
aas
mov
mov
divl
les
push
mov
addr16
in
adc
add
mov
xlat
push
sub
test
icebp
lcall
bound
shll
stc
popa
mov
stc
test
fistpl
push
call
dec
jle
push
call
push
fistpl
xchg
pushf
lea
mov
lea
push
pushf
mov
pushf
mov
pushf
lea
call
call
fwait
in
sbb
add
nop
out
insb
add
add
nop
movb
fdivl
add
mov
je
add
add
push
je
add
add
in
push
add
add
inc
or
add
lock
push
push
mov
je
add
add
jl
loop
mov
je
add
add
mov
je
add
add
inc
fimuls
or
add
pop
inc
jo
popa
xorl
sti
pop
xor
je
cmp
add
mov
je
add
add
mov
je
add
add
mov
je
add
add
mov
icebp
test
or
add
push
mov
pop
mov
mov
loope
sbb
add
pop
imul
inc
xorl
movsb
xor
add
aam
adc
ret
je
adc
add
sahf
mov
add
lods
pusha
or
in
hlt
or
add
jl
jnp
push
mov
je
add
add
sahf
jo
adc
add
xchg
outsb
add
sbb
add
iret
out
dec
or
add
aad
hlt
push
mov
add
jns
in
hlt
mov
je
add
add
and
imul
or
add
inc
movl
add
call
or
add
sbb
sub
insb
mov
je
add
add
jecxz
fs
or
add
fimull
cmp
mov
aaa
add
xlat
ret
sbb
xorb
es
lret
pop
mov
sub
pop
stos
push
dec
inc
in
adc
mov
out
in
mov
mov
mov
andb
or
xor
pop
mov
sar
add
in
push
dec
notl
test
je
insl
cmp
aad
adcb
jnp
fs
sub
stc
mov
imul
jb
xor
enter
loop
aad
outsb
or
jno
cmp
ret
jae
es
add
xchg
sbb
jle
test
notb
mov
test
adc
test
lea
jmp
push
call
in
jg
fwait
in
fst
add
std
push
call
icebp
push
call
cmpsb
mov
iret
fistpll
sbb
popf
sub
and
orb
ss
jns
adc
rep
jle
int3
jl
outsl
cwtl
push
sbb
jmp
add
jge
and
and
stc
mov
rcr
clc
sti
or
aaa
jae
stos
push
xor
or
in
imul
mov
adcb
mov
add
jnp
adc
push
xor
jns
add
xchg
sti
int
outsl
mov
lcall
ret
add
jo
out
hlt
jmp
stc
inc
jp
popf
sub
fs
call
lahf
mov
adc
add
ret
cld
adc
aam
pushf
cmpsb
lret
lods
movsl
insb
imul
ja
subb
aaa
js
or
setns
stos
fwait
adc
mov
cltd
sbb
mov
lret
fildll
inc
cmp
cmp
clc
sub
mov
xor
xchg
dec
lds
add
adc
mov
test
imul
adc
test
movsl
enter
or
push
lds
in
and
xchg
outsb
push
call
jne
fbld
adc
add
scas
inc
pop
push
movsl
scas
dec
mov
insl
xor
imul
inc
mov
mov
xor
push
mov
mov
cmpsl
xchg
inc
push
fwait
push
jae
push
sbb
add
dec
aaa
ret
and
xorl
cld
leave
pop
mov
pop
or
test
call
jg
or
jne
repnz
cmp
dec
mov
cmpsb
add
rcll
sbb
fistpl
push
pushf
jmp
push
call
jbe
mov
xchg
adc
jo
add
mov
jmp
test
add
movsl
mov
sbb
sbb
xor
mov
inc
xchg
jae
mov
mov
inc
mov
mov
jbe
sub
call
mov
jns
cmp
and
jo
mov
into
adc
mov
push
xchg
test
pop
add
jg
rcr
popf
sub
shll
rol
loope
leave
jp
mov
or
cmpsl
and
mov
sahf
dec
inc
sbb
out
fcom
and
push
jno
mov
daa
outsb
icebp
adcl
ret
cmp
adc
leave
xchg
adc
adc
movsb
popf
inc
mov
and
mov
mov
loop
dec
sub
mov
sub
fwait
or
jbe
add
dec
inc
add
sbb
xchg
pop
fistpl
pusha
neg
pushf
std
jmp
push
call
es
push
call
stos
jno
push
push
popa
pop
cmp
xchg
xchg
xor
mov
jge
idivb
mov
stos
call
test
mov
jl
and
mov
mov
fs
sti
lds
pop
cmpsb
scas
outsl
nop
dec
jge
xchg
add
shlb
cmp
sahf
mov
xchg
push
jl
mov
push
out
jle
jecxz
and
cwtl
mov
mov
xchg
add
add
cmc
fcomi
scas
aas
xchg
pusha
iret
scas
fsubp
fistpl
push
call
sbb
adc
or
test
mov
push
call
pop
jmp
pop
jne
add
cmp
xor
std
loop
jmp
mov
push
xchg
cmp
cmp
punpckhbw
imulb
loop
loop
mov
and
xor
xchg
dec
xlat
pop
cmpsb
and
push
mov
stos
pop
push
mov
inc
sub
test
pop
jnp
mov
adc
int3
xor
or
cmpsb
sub
sub
xchg
arpl
inc
jecxz
aas
inc
dec
push
icebp
push
insl
fisttpll
sub
dec
dec
push
push
dec
dec
dec
cs
push
push
add
loope
lcall
addr16
lahf
dec
pop
sarl
pop
pop
sbb
fmuls
aam
aam
sarb
sub
xchg
lcall
cmp
sub
cmp
mov
cmc
jns
push
enter
shrb
clc
jle,pt
cs
leave
adc
out
out
movsl
insb
sti
inc
mov
shlb
idivl
or
hlt
icebp
ljmp
sbb
repz
xlat
push
in
pop
adc
mov
pushf
lods
add
xchg
test
or
pop
lahf
cld
stos
scas
adc
ds
pop
enter
xchg
sub
cmpsb
and
addr16
sub
adc
ss
xor
pop
xchg
popa
bound
mov
xchg
sbb
fistps
xchg
pop
pop
dec
fstps
inc
mov
mov
sub
in
hlt
mov
repz
loop
outsb
movsl
pop
out
fistpl
dec
arpl
dec
adc
xchg
mov
mov
xor
cltd
inc
test
pop
shlb
pop
and
loop
fldcw
inc
cmp
bound
push
jle
lea
in
mov
lock
mov
cltd
mov
dec
lahf
lret
mov
mov
mov
xchg
adc
fistpl
push
call
stos
incl
mov
adc
str
pop
mov
mov
jle
test
sbb
rcl
fldl
scas
insb
loopne
adc
add
jbe
mov
or
and
ret
mov
sahf
mov
inc
into
rol
pop
pop
sahf
or
adc
xchg
mov
dec
inc
in
or
mov
movl
mov
js
push
cwtl
mov
mov
cli
push
sarl
int
subl
jg
fistpl
adc
cwtl
aaa
idivl
rolb
jl
cmp
xchg
pop
xchg
xchg
mov
mov
add
jp
cld
es
nop
jne
ds
dec
mov
jmp
xor
leave
pop
out
add
nop
jle
das
leave
shlb
push
loop
ret
data16
and
jmp
or
pop
pop
mov
hlt
mov
inc
xor
sarb
add
sbb
out
mov
stc
sbb
cs
in
dec
xchg
mov
je
xchg
popf
das
sbb
les
adc
xor
adc
xor
sbb
aaa
loope
test
sbb
mov
sub
xor
jp
arpl
cmp
add
cmp
out
xor
push
sbb
or
mov
ljmp
xor
or
aam
fwait
cmp
enter
pop
nop
aad
cmp
pop
incb
test
xor
sbb
adc
cmp
or
mov
fidivrs
fldenv
outsl
pop
sbb
insl
mov
xchg
roll
fimuls
jnp
scas
movsb
jg
pop
xchg
aad
nop
adc
pop
push
fldt
scas
xchg
ret
and
lret
stc
mov
pop
push
test
push
hlt
scas
ss
insl
push
sub
mov
cli
and
xor
or
push
adc
arpl
sbb
jl
mov
xor
add
push
fwait
mov
outsl
xchg
sti
push
inc
movsb
pop
cli
jge
scas
sahf
fmull
jnp
inc
and
dec
cwtl
ret
ljmp
mov
xchg
adc
xor
fldcw
xchg
push
xor
mov
dec
sahf
xor
fwait
lods
adc
push
xchg
push
xor
rcl
pop
ds
sbb
pushf
je
push
adc
cmp
push
insb
lahf
mov
jb
push
xor
mov
sub
arpl
mov
cmc
js
ret
shl
stc
dec
dec
test
cwtl
aas
sbb
xor
nop
sbb
mov
addb
fcoml
les
shrb
pop
mov
sti
sar
out
pop
int3
xor
in
or
cmpsl
icebp
fwait
movsb
arpl
push
sbb
xchg
cli
fldl
movsl
bound
lods
je
popf
dec
mov
cmp
stos
es
xor
sarl
ljmp
lret
push
ret
xor
ret
ss
sbb
jmp
xor
cmpsb
loop
test
in
jns
push
test
xor
pop
xor
xor
and
cmc
adc
xor
ljmp
je
or
xor
mov
push
mov
movsb
sub
xor
fimull
test
bound
icebp
test
add
sub
lods
push
xor
ss
fs
iret
xchg
mul
inc
mov
and
insl
xor
es
mov
icebp
push
push
fstps
aas
dec
mov
xor
adc
sub
add
lods
cmpsb
in
iret
dec
push
sbb
inc
outsl
push
pushfw
xor
mov
mov
xor
gs
cmp
fiaddl
sbb
push
add
aas
mov
mov
in
mov
into
cmp
mov
mov
loope
adcl
mov
mov
pop
xlat
mov
mov
inc
xor
cmpsl
ljmp
adc
mov
push
wbinvd
test
daa
jecxz
and
mov
jo
dec
push
cwtl
cmp
add
push
jne
push
fisubrs
imul
xlat
inc
inc
test
insl
push
push
cmp
mov
xor
bound
push
dec
or
and
js
je
adc
xor
aas
jns
xchg
push
addr16
xor
lock
cmp
ss
ret
push
scas
xor
or
sub
dec
or
mov
je
mov
clc
xor
out
xorl
test
push
lock
cmovne
test
adcl
adc
xor
jle
mov
pop
aad
jae
dec
dec
pop
and
fs
pushf
sub
loop
aam
or
add
in
jecxz
or
icebp
hlt
sub
mov
xor
not
lock
lods
mov
mov
cltd
enter
aam
mov
xlat
jecxz
loop
mov
movsb
xor
les
gs
out
lcall
jno
aam
data16
in
jge
int3
cmpsb
dec
pop
jg
and
in
pop
pop
or
sub
stos
adc
or
mov
mov
push
je
std
out
add
add
fsts
test
es
cltd
dec
pop
stos
xor
movsl
in
js
mov
xor
jae
xor
push
lock
scas
add
xor
inc
sahf
leave
inc
jp
sbb
int
sbb
sti
aam
pop
cmp
push
mov
xor
movhps
out
repz
sub
lea
pop
and
and
sbb
and
fcomp
shr
es
xor
and
sbb
inc
jbe
and
lahf
pop
xor
inc
and
push
inc
or
or
lods
or
mov
sub
jmp
or
add
clc
lock
leave
push
mov
adc
xchg
xor
adcl
mov
es
cltd
sbb
pop
jge
xor
or
subb
push
adc
stc
jo
pop
fdivl
mov
adc
adc
jne
iret
idivl
push
xchg
sub
cmp
insb
orl
jb
and
in
xor
lock
outsb
scas
xor
push
pusha
cli
hlt
inc
rol
pop
mov
das
addr16
and
testb
jl
cmp
gs
pop
fidivrl
dec
imul
mov
add
mov
xchg
inc
arpl
xchg
mov
test
outsb
push
jno
mov
and
mov
es
xchg
sahf
xor
js
inc
sbb
inc
push
cld
lock
test
out
and
repnz
xor
sub
lods
xor
mov
sub
cmp
fadds
dec
push
lea
dec
imul
enter
cld
into
clc
int
push
out
call
in
cwtl
add
or
stc
mov
sub
pop
xor
sbb
pop
adc
jb
mov
mov
jl
dec
adc
sbb
cld
inc
in
repnz
mov
xor
mov
pop
push
xor
das
movsb
dec
jbe
call
or
mov
mov
movsb
daa
jg
cmp
xchg
pop
jl
jae
pop
xor
fdivp
mov
cmp
cld
fcompl
enter
xor
pop
xor
das
pop
sarb
jb
xor
arpl
add
test
cli
out
out
mov
repz
hlt
xchg
int
jbe
imul
mov
add
or
cmpsl
jne
inc
dec
mov
sub
mov
mov
pushf
cmpsl
xor
out
dec
sub
push
pop
xchg
les
adc
aam
in
pop
pop
push
xchg
xor
pop
xlat
xor
fwait
xorb
and
or
aaa
jmp
mov
cmp
inc
push
mov
test
sbb
add
xchg
call
xor
push
mov
xor
cmp
cmp
push
or
jbe
add
mov
lahf
fcomps
add
enter
push
aad
lock
mov
dec
add
cmp
xor
add
mov
xor
scas
mov
xorl
bound
inc
cs
xchg
insb
je
in
xor
and
xor
addr16
inc
fmull
sarb
test
sub
adc
push
pusha
or
imul
ds
mov
mov
sti
mov
mov
cmpsb
pop
stos
mov
push
stos
loopne
and
loope
ds
mov
int3
fwait
pop
sti
les
or
mov
push
xor
adc
int3
repnz
hlt
ror
flds
sti
loope
data16
cmc
add
and
or
add
lock
repnz
and
mov
add
lock
repnz
cmp
mov
add
lock
xor
adc
mov
add
lock
push
orl
mov
add
lock
int3
push
addl
mov
add
lock
push
sbbl
mov
add
lock
int3
push
adcl
mov
add
lock
int3
in
sub
jmp
ljmp
aad
cmpsl
xorl
ja
inc
lock
int3
and
rorb
add
cmc
int3
movb
orb
int3
inc
adcl
shlb
pop
hlt
push
cmc
lock
fildl
mov
lock
int3
pop
adcl
adc
call
lock
repnz
shrb
dec
add
push
int3
sub
roll
mov
shlb
movsb
loope
shll
mov
mov
scas
cmp
xlat
and
shrl
shll
sbb
lock
loopne
jbe
rcrl
pushf
shrb
and
stc
fst
aam
mov
lods
dec
repz
out
jge
inc
push
sbb
mov
or
movsl
mov
or
into
ret
movsb
pop
mov
jnp
rorb
ret
cmp
lods
mov
mov
cmpsb
movsb
sbb
add
dec
hlt
shrb
sahf
repz
or
ret
std
fiadds
mov
sbb
rclb
roll
movb
xchg
fisttpll
rcrb
adc
repz
cltd
shrb
xor
jb
inc
mov
dec
fstl
test
mov
addr16
testl
lock
int3
adcb
ret
jle
sub
xor
popa
add
or
sub
jno
stos
lahf
ljmp
rorb
xor
mov
lahf
stos
jbe
fbld
add
cmp
in
add
sbb
pop
ror
pop
addb
mov
loope
xchg
repnz
in
sbb
mov
pop
loop
add
adc
mov
scas
mov
xchg
and
adc
xchg
shrl
cmpsl
mov
inc
stos
xor
cmpsb
scas
movsl
rep
call
or
and
out
lcall
or
and
pop
cltd
pop
iret
sbb
rol
sbb
pmaxub
mov
out
aas
rcll
lahf
cmpsl
jmp
lods
add
mov
call
or
gs
add
add
out
xor
bound
hlt
fnstenv
icebp
repz
je
mov
cmp
cwtl
int
add
bound
xchg
les
test
je
adc
fldcw
test
push
insl
test
jne
int3
clc
dec
cmp
test
or
sbb
xorl
popa
xor
sbb
jnp
adc
or
icebp
adc
xor
mov
push
scas
hlt
das
xchg
mov
inc
sbb
adc
mov
test
xor
dec
adc
inc
jns
test
xor
in
sub
push
test
xor
xor
in
scas
loop
mov
sti
fbld
aaa
sub
xor
pop
loopne
mov
jae
fbstp
xor
popa
jp
inc
push
pop
insl
and
mov
outsb
add
pusha
dec
sbb
or
cmpsb
add
mov
mov
movsb
mov
test
adc
and
sbb
add
or
fildl
test
mov
add
lret
movsl
sbb
lret
aam
into
xor
mov
jno
loopne
ljmp
lock
loope
movsl
in
cmc
mov
cmp
push
adc
jnp
push
pop
mov
jo
jb
xor
loopne
iret
std
loope
sti
pop
shlb
push
cwtl
rcrl
push
lock
ja
movsb
or
dec
xor
fsubl
into
jns
sbb
in
sbb
loop
cs
sti
adc
iret
mov
ja
push
imul
mov
mov
into
xchg
jns
ror
cld
mov
mov
repz
lock
push
fcoml
les
jl
sbb
test
mov
adc
cwtl
xor
fisttpl
mov
pop
cmp
inc
int3
jns
loopne
ret
into
repz
push
test
sbb
jnp
cltd
adc
push
arpl
mov
rclw
sbb
mulb
lret
test
cli
xor
cmp
push
dec
push
leave
das
mov
mov
push
insb
push
hlt
dec
add
or
in
lret
xchg
inc
shlb
push
pop
adc
test
adc
or
sub
inc
inc
iret
or
dec
adc
xchg
fwait
pop
or
mov
hlt
cmp
les
cld
jne
out
scas
into
lea
pop
sub
pop
push
add
mov
shrb
cmp
insl
shlb
cmp
dec
and
shlb
bound
popf
in
mov
in
sub
leave
pusha
pusha
out
jmp
in
mov
leave
mov
jmp
mov
dec
push
jle
inc
and
movsl
cmpsl
lds
mov
scas
mov
sub
xor
fs
dec
outsl
je
lahf
adc
lods
xchg
mov
add
or
xor
inc
rclb
bound
push
outsb
sbb
xor
jbe
add
in
stos
lods
add
dec
jns
ds
mov
cmp
or
clc
fmulp
daa
jl
inc
xor
arpl
dec
imul
adc
sub
out
scas
test
mov
int3
pop
dec
daa
in
inc
jnp
in
cmc
mul
je
mov
xchg
fs
popa
add
cmp
sub
add
push
repz
pop
dec
or
sbb
adc
mov
push
add
add
add
cli
jmp
iret
mov
rol
into
out
mov
fmull
mov
scas
xchg
sbb
push
dec
jbe
dec
mov
ja
inc
inc
jge
dec
fdivrl
jp
adc
and
cmp
and
test
fdivs
jbe
ja
out
test
test
xchg
add
in
test
or
push
xor
mov
or
adc
push
lods
stos
mov
lods
jg
xor
test
cmp
fcmovnbe
xchg
lahf
jne
stos
cmpsl
push
movsl
mov
out
add
lock
rclb
mov
js
int
inc
cmp
jae
pop
push
and
lea
ds
push
loope
xor
adc
pop
pop
and
adc
jae
stos
fwait
out
add
sar
push
sub
shrb
addb
mov
and
jl
pop
mov
ret
lods
int
jo
and
enter
adc
ss
mov
mov
pop
adc
loope
lar
clc
or
aad
or
add
or
inc
or
mov
adc
or
sahf
xchg
int
add
sbb
mov
push
lock
jecxz
fsubrl
dec
data16
push
push
jb
fldl
pop
or
lock
or
out
mov
mov
insl
adc
dec
mov
adc
mov
lock
mov
xchg
sbb
xchg
mov
sub
dec
dec
push
je
ljmp
roll
mov
fists
sbb
gs
sbb
jmp
loope
push
test
mov
lock
inc
lahf
or
mov
mov
insb
xor
push
dec
lcall
inc
sbb
jo
push
ja
adc
cmp
mov
add
popf
xor
repz
push
or
mov
push
and
sbb
inc
les
mov
shlb
xor
ds
adc
inc
int3
inc
rorb
push
mov
adc
cmpl
lret
jmp
gs
aam
xor
pushf
xchg
push
adc
iret
cmp
xor
mov
leave
cmp
push
push
std
xorb
xlat
cmp
shrl
test
testb
nop
inc
lea
mov
dec
add
sbb
push
or
jmp
add
adc
mov
xlat
push
or
mov
sbb
mov
test
or
or
into
sub
pop
cwtl
mov
sti
enter
setae
push
add
je
std
mov
cmp
sub
out
test
jns
sub
outsl
mov
adcl
sbb
mov
mov
add
lock
xor
jp
xchg
or
push
setnp
or
shrb
add
lret
lret
pushf
in
mov
lret
lock
dec
sbb
adc
lods
addr16
ljmp
dec
daa
int3
lds
sarl
push
jne
aas
repnz
outsl
push
popa
cltd
lods
movsb
decb
or
pop
mov
lea
iret
repz
or
mov
cmpsl
std
push
mov
scas
ss
daa
dec
mov
mov
loop
dec
mov
add
pop
xorps
xlat
mov
pop
ffreep
sub
sub
rolb
inc
pop
inc
mov
sub
add
pop
xorl
pop
mov
or
je
adc
rol
mov
imul
fs
sub
lea
hlt
adc
repnz
jl
dec
adc
lcall
and
outsl
mov
loope
push
clc
cwtl
insb
mulb
pop
mov
lock
test
lcall
xchg
add
mov
dec
ss
sti
out
negl
mov
pop
adc
xchg
fdivrl
sub
fldt
fiadds
stc
inc
jnp
lea
or
push
mov
lods
nop
int
mov
mov
sub
lcall
mov
sub
adc
mov
aam
lret
out
fildl
jmp
push
sbb
stc
or
or
sub
jl
call
push
pushf
fcoml
or
cmp
sub
or
cmpsb
iret
push
hlt
pusha
addr16
into
loop
jbe
popf
in
lahf
in
cmpsl
mov
fldl
orl
xchg
sub
repz
mov
enter
fsubr
push
xchg
testl
imul
faddp
push
mov
mov
and
sbb
shl
or
rcl
idivb
and
push
add
xor
mov
xchg
hlt
mov
cli
push
lahf
ret
int
pop
sbb
sub
sub
iret
jae
xor
fldl
add
xchg
dec
adc
dec
movsbl
xor
testb
sub
and
in
cmp
mov
movl
pop
sbb
adc
aad
pop
xor
mov
xor
or
inc
lahf
sub
es
push
pop
add
push
cld
shlb
stc
dec
loopne
int3
jne
pop
push
adc
or
jae
pushf
mov
pause
mov
lahf
and
push
mov
inc
xchg
and
loope
sahf
push
sbb
xor
mov
sub
repz
out
test
scas
sbb
les
adc
inc
xchg
ss
ss
loop
ljmp
push
adc
ret
stos
xor
pop
lahf
push
ret
and
ret
sub
lcall
push
adc
cmp
lahf
leave
sub
push
xchg
sahf
pushf
movsl
cmp
faddl
mov
push
pop
loop
lods
and
jo
xchg
cld
dec
push
call
cmp
loope
xor
mov
pusha
mov
pop
jb
fcoml
xchg
add
pop
fstpt
push
adc
ss
pop
jg
pushf
pop
mov
sbb
imul
fdivl
add
ret
bound
add
jmp
insl
das
fists
sbb
adc
sub
xor
sarl
stos
rcr
push
jne
negl
xchg
das
int3
cltd
addb
scas
add
pop
jno
gs
sub
mov
sub
lret
pop
pop
pop
and
jo
nop
andb
adc
mov
dec
inc
in
adc
shl
or
adc
add
fdivp
sbb
sub
dec
ljmp
or
cmpsb
sub
fsubl
adc
stc
jae
or
rolb
mov
and
cmpsb
push
mov
out
xchg
lret
cmp
je
dec
push
int
lock
sti
subb
aaa
push
xchg
into
sub
push
jmp
lcall
xchg
pop
repnz
sbbb
mov
cmp
xor
shlb
sbb
push
outsl
icebp
and
add
loop
xor
inc
out
sub
inc
into
jo
negb
loope
cmp
hlt
inc
mov
popf
lock
in
add
sub
jg
jle
in
xchg
and
out
push
push
insb
cmpl
fistl
aaa
pusha
add
sbbl
xchg
call
cmpsl
loopne
jg
jle
jmp
cmpsl
loopne
and
cmp
cmp
cwtl
loope
xlat
xor
adc
addb
loop
repnz
xchg
lcall
in
add
jo
jb
jbe
ljmp
imul
adc
ret
xchg
addb
lock
dec
mov
dec
and
test
enter
push
shrb
mov
ret
cmp
pop
and
int3
push
xor
adcb
rclb
popa
cwtl
lods
lock
ret
jl
xchg
in
add
pop
jne
cmp
adc
adc
add
arpl
sbb
pop
or
in
cmp
bound
test
ret
adc
mov
mov
dec
push
jo
push
sub
out
shll
xor
sbb
gs
int
dec
ret
int3
push
jb
hlt
aas
pop
sbbl
inc
lods
bound
rep
cld
ljmp
cmp
or
push
je
stc
add
test
cwtl
repnz
jns
fisubrl
mov
and
jecxz
imul
in
ja
int
out
arpl
int
or
add
test
mov
ret
inc
clc
xor
test
mov
xorps
or
cmpsl
test
cltd
out
sub
mov
mov
out
scas
jnp
cmp
ret
adc
dec
push
test
sbb
cmp
int
scas
lock
mov
cmpsb
scas
scas
and
inc
jns
cmp
and
pop
or
pop
mov
dec
pop
ret
mov
cmp
nop
jp
mov
xchg
add
push
xor
cmp
icebp
cmp
mov
add
nop
add
sbb
ljmp
xchg
adc
stc
nop
or
fwait
and
xor
out
aam
xchg
mov
leave
in
mov
pop
fcompl
xchg
inc
cmp
fstl
adc
mov
inc
rorl
ljmp
mov
cmp
rcll
add
rorl
dec
cwtl
aam
scas
push
adc
mov
mul
into
and
stos
cmp
mov
test
cmpsb
test
aam
sbb
add
and
mov
and
xor
dec
mov
jbe
bound
jb
push
add
jo
add
rorb
sbb
iret
int
push
inc
and
icebp
movsl
in
or
testl
mov
cld
sbb
stc
jmp
cmp
xchg
cmp
nop
test
mov
test
lods
xchg
sbb
cltd
rorb
add
hlt
insb
push
xchg
sub
mov
aaa
and
mov
ret
loope
inc
xchg
push
sub
mov
fsubs
insb
and
xchg
jno
xchg
sub
fdivrs
out
dec
push
insl
roll
or
sbb
mov
dec
and
lret
andl
popa
jg
bound
cmp
ljmp
insl
into
pop
lock
mov
insl
or
mov
mov
mov
xor
xor
sbb
repz
test
les
inc
punpckldq
sbb
push
stc
stc
or
mov
xor
js
mov
sub
sub
mov
in
adc
leave
jecxz
or
sti
popa
push
in
jle
ss
adc
cwtl
rcr
imul
cltd
push
pop
or
inc
scas
ss
mov
inc
movsb
out
dec
cmove
scas
sub
test
sbb
repnz
icebp
ret
dec
mov
aaa
xchg
adc
mov
mov
icebp
es
sbb
adc
aam
int3
and
mov
cmp
jnp
jle
xchg
xor
js
mov
jmp
adc
les
or
cmp
ret
push
sarl
jle
add
ljmp
nop
nop
mov
xchg
pop
int3
paddb
and
std
inc
mov
scas
jns
dec
pop
scas
and
je
shl
push
es
mov
in
lods
ret
pop
ror
nop
sti
jl
js
in
sti
mov
push
cmpsl
and
insb
cmp
inc
or
jmp
fbld
jno
add
ss
icebp
pop
nop
sub
dec
inc
pushf
adc
sub
lret
pop
jo
push
lret
mov
sub
push
jl
sub
lahf
pop
pusha
pusha
cwtl
int3
xchg
lds
or
xchg
lods
xor
decl
cmpsb
lea
pop
ljmp
mov
insl
mov
ljmp
es
or
mov
das
or
rorb
repnz
jmp
push
mov
es
rcr
mov
call
not
jmp
push
cmp
xchg
or
hlt
les
out
mulb
ss
hlt
pop
aaa
dec
adc
jle
into
cs
mov
mov
push
rcr
dec
les
and
or
mov
add
stos
adc
push
dec
mov
mov
mov
mov
jecxz
jmp
pushf
dec
jl
xchg
rolb
scas
jns
sti
jl
ljmp
mov
insb
stos
mov
std
push
pop
lahf
adc
mov
cmp
cwtl
mov
pop
enter
lods
fs
jge
popf
out
les
repz
adc
and
cmpb
add
xchg
push
xor
add
xor
cld
aaa
add
aaa
mov
and
inc
nop
adc
dec
sub
and
in
lcall
ljmp
les
std
or
sub
mov
stc
mov
mov
add
add
and
sbb
push
mov
or
and
rorl
repnz
add
int
sub
mov
jl
fwait
cmp
push
cld
or
out
scas
sbb
lea
pop
add
or
data16
jmp
inc
and
les
sub
pusha
loopne
repz
pop
cwtl
dec
mov
jl
cmp
or
xor
push
mov
js
cld
add
nop
mov
fs
pusha
push
rclb
add
into
idivb
jl
test
mov
mov
or
push
and
mov
sarb
int
dec
xor
push
mov
test
dec
and
rolb
int
lret
adc
mov
mov
pop
inc
pop
mov
and
mov
out
push
mov
in
jmp
lea
lds
roll
mov
lock
and
icebp
add
sarl
leave
insl
nop
add
call
jecxz
mov
jmp
jmp
dec
cmpsb
and
add
mov
imul
adc
cmp
mov
pop
dec
adc
xchg
shrl
adc
sub
popa
out
inc
test
scas
test
repnz
pop
lret
not
pop
clc
sub
in
add
or
mov
hlt
adc
setae
cmp
loope
js
adc
mov
push
jl
or
rolb
push
rcr
inc
test
xor
stos
out
lods
xchg
ljmp
cs
pop
mov
sbb
sub
xor
xchg
icebp
and
jge
stos
or
jne
ljmp
outsl
sti
in
movsb
dec
leave
rol
mov
jmp
add
bound
jp
fadd
outsl
divl
and
ljmp
sbb
aam
ret
mov
pop
mov
ss
enter
stc
adc
inc
or
mov
adcl
jl
clc
add
add
shr
inc
js
inc
repz
pop
icebp
shr
mov
xor
jnp
mov
outsl
sti
adc
xor
add
add
nop
aas
mov
or
movlps
rolb
add
or
jmp
cld
leave
lcall
sti
mov
out
jne
movsb
inc
jo
jo
xor
aad
lret
aaa
or
jbe
jge
icebp
add
out
das
nop
jl
loope
rcrb
icebp
mov
sbb
or
dec
pop
cld
out
mov
add
jae
cmp
mov
push
out
test
or
xor
xor
stc
dec
mov
mov
lock
shlb
out
sbb
iret
fidivrs
or
in
ret
jbe
adc
sub
jae
test
icebp
sbb
daa
sub
shlb
test
int
dec
cmp
push
lret
jbe
pop
add
sub
and
add
dec
sbb
inc
rorl
rorl
rorl
roll
cmp
xchg
loope
push
xor
sub
push
icebp
jmp
push
lahf
lea
sub
aas
xor
xorb
int3
out
stos
xor
xor
xchg
out
ljmp
cmp
jle
push
push
iret
lods
cmp
xor
bound
test
push
and
lret
bound
jne
sarl
mov
lods
call
lahf
or
pop
inc
ss
out
push
insl
mov
xor
mov
cmp
rorb
inc
dec
leave
scas
jb
bnd
jmp
xchg
idivb
rcrl
sbb
lods
mov
lret
mov
enter
clc
mov
adc
adc
or
push
enter
lea
dec
int3
push
ret
inc
in
push
lea
mov
roll
mov
mov
jle
mov
jmp
dec
in
add
or
or
jl
mov
mov
fistps
mov
mov
rol
mov
mov
mov
inc
mov
mov
jl
lret
rcl
fsubrl
pop
jo
out
ja
pusha
fdivl
xlat
and
inc
fnstenv
repnz
pop
shlb
cmp
cmp
bound
aas
out
sbb
pop
or
pushf
hlt
ret
leave
pop
xor
adc
mov
mov
pusha
mov
out
mov
or
jl
adc
inc
les
movsb
xchg
les
push
movsb
inc
dec
out
sbb
add
xchg
jl
xlat
int
or
movsb
xchg
movsb
lea
movsb
test
dec
movhps
movsb
fcomi
jnp
push
dec
fwait
xchg
aaa
push
nop
icebp
inc
cld
pop
rorb
js
rcrb
xchg
movsl
or
movsl
mov
mov
mov
in
stc
adc
xor
adc
icebp
sub
shll
cmpsb
test
jecxz
pop
adc
cmpsb
fmull
xor
xchg
cmp
or
or
rclb
cmpsb
add
cmpsl
lods
push
cmp
icebp
imul
adc
cmpsl
nop
aaa
xlat
lods
sbb
cmpsl
and
push
push
and
cmp
outsl
or
and
or
test
nop
cmc
test
ljmp
aaa
test
lea
test
sbb
hlt
rclb
xor
test
divb
and
inc
lea
icebp
aas
rclb
fdivl
push
outsb
stos
mov
test
mov
lret
loope
popf
daa
jecxz
icebp
add
inc
sbb
movsl
adc
or
adc
test
adc
xchg
insl
call
cmp
jmp
inc
and
add
cs
mov
lods
je
mov
fimull
ret
or
xchg
ljmp
ret
std
pop
pop
stc
fdiv
rclb
jl
fwait
aad
mov
imul
push
enter
add
loopne
std
or
ss
or
clc
sarb
push
jmp
rorl
movsl
int
mov
add
fwait
xchg
adc
xchg
push
cmp
add
in
cmp
dec
inc
iret
mov
sub
sub
sahf
push
add
cltd
cmp
lret
arpl
aaa
stc
in
fstp
push
mov
mov
sub
and
jp
sbb
psubw
or
dec
xor
or
add
sub
sti
les
push
mov
rorb
and
add
mov
xor
pusha
xchg
xor
adc
pushf
inc
inc
scas
xchg
or
mov
ljmp
mov
adc
lods
lds
mov
ret
and
sahf
dec
movl
scas
repnz
add
mov
mov
inc
push
mov
inc
push
loope
testl
dec
sbb
out
sbb
clc
adc
inc
push
add
andb
push
mov
pop
fadd
lcall
mov
add
scas
jae
jl
aad
ljmp
xchg
inc
cli
mov
pop
hlt
pop
push
mov
les
mov
les
movsl
add
pop
and
xor
inc
aas
or
ret
test
and
loopne
push
fs
mov
push
add
inc
or
dec
mov
test
jb
fidivrs
leave
sbb
dec
aam
insl
ret
and
fwait
pop
adc
inc
inc
negb
rclb
push
ror
arpl
inc
add
movsb
repnz
adc
lcall
push
xorl
jno
fildll
testb
js
cmp
into
mov
push
stos
popa
inc
add
add
push
mov
pusha
xorb
rcr
hlt
bound
xor
or
push
or
dec
bswap
test
int3
test
inc
daa
out
add
or
add
stc
and
sub
dec
pop
or
and
and
test
jp
rcr
dec
movsl
xchg
mov
cwtl
fcmovbe
out
ja
add
and
add
inc
rclb
or
scas
in
data16
xor
int
adc
mov
push
leave
xchg
je
sbb
push
int
pop
scas
or
pushf
inc
pop
ret
repnz
jg
xchg
cwtl
jno
nop
lods
arpl
aam
xchg
aam
xchg
add
mov
fdivl
mov
fwait
out
sub
dec
repnz
add
jg
aas
cmpsb
hlt
pusha
sbb
sbb
mov
mov
jl
pushf
sub
push
nop
fcoml
pop
jp
pop
jmp
ds
repz
loopne
lret
pop
test
je
jo
in
das
push
shll
jl
add
bswap
leave
je
mov
sub
or
xor
add
jb
adc
imul
ja
jmp
sbb
add
sub
lcall
cmp
popf
cmp
outsb
outsl
cmp
ja
dec
movl
test
and
xchg
xor
jecxz
movsl
sti
pushl
cmp
xchg
sub
je
dec
sbb
lret
out
in
sub
nop
pop
cwtl
push
imul
add
adc
leave
stos
pushf
mov
dec
dec
sar
sub
add
loopne
in
cmp
das
xchg
int
cltd
dec
cwtl
fldenv
cmp
scas
push
xchg
enter
sbbb
repnz
jg
inc
dec
addr16
sbb
xchg
mov
jl
aad
jnp
cmpsb
add
mov
inc
sbb
nop
int
mov
dec
mov
in
orl
pop
fwait
xor
or
loope
repnz
or
fsub
xchg
add
xor
jl
leave
aad
aaa
dec
xchg
fstl
in
and
fnstsw
jl
sbb
pushf
lret
rcrb
xor
push
add
pop
in
or
jne
pop
cld
stos
jge
cmp
or
push
sbb
pop
into
flds
and
cs
jge
mov
or
or
js
rorl
mov
add
jmp
cli
jg
ret
cli
mov
cmp
ret
scas
repnz
lods
sbb
icebp
std
mov
lods
ficoml
mov
mov
sarb
mov
int
icebp
mov
jp
mov
test
and
sti
mov
icebp
fcoml
fsub
mov
icebp
adc
xor
sub
test
int
arpl
fstl
add
fisttpll
inc
mov
icebp
mov
std
mov
mov
xor
mov
cmp
jl
xor
jl
add
xor
or
and
inc
stos
ret
add
xor
lods
add
pop
sbb
inc
sub
ret
out
add
mov
shlb
ret
add
dec
add
pop
mov
rclb
in
sbb
imul
mov
iret
lds
ljmp
lock
loop
fildl
inc
mov
pandn
aas
or
add
jbe
fimuls
push
in
mov
jo
outsb
jo
dec
jae
inc
je
lds
dec
pop
pop
out
out
push
sbb
mov
xchg
cmpsl
jb
mov
push
ja
andb
add
jg
or
jnp
cmp
test
add
arpl
add
lods
sub
stc
xchg
lock
ja
inc
int
mov
lock
cwtl
ficoms
xchg
mov
in
and
popa
imul
js
jno
cwtl
mov
mov
sub
scas
xchg
mov
mov
push
ret
js
jmp
scas
test
sub
add
jne
fists
jge
fmull
push
mov
adc
ret
popa
pop
mov
sub
icebp
jp
mov
int
loope
mov
jecxz
leave
xchg
icebp
xor
mov
fisttps
ret
and
ret
xchg
xor
shlb
sub
pop
add
in
ret
popl
push
popa
pop
mov
push
pop
icebp
jp
jns
add
insl
enter
fsubrl
sub
or
les
les
js
jge
or
pop
dec
lret
call
filds
cmpsb
nop
daa
lds
add
nop
dec
xchg
inc
fcomip
pop
jl
fisubs
and
fbstp
xchg
popa
add
inc
mov
popa
fildl
fists
xor
jl
sarb
ret
or
sub
daa
inc
mov
das
dec
mov
cmp
repz
xrelease
aas
inc
jp
negb
loope
cmpsb
jb
out
mov
pop
xor
pop
mov
mov
and
adc
mov
cmp
roll
mov
and
jmp
sahf
nop
inc
fildll
icebp
jg
and
pop
lock
cmp
push
or
movl
test
jl
into
enter
rorb
mov
jno
enter
mov
popa
fs
nop
cmpsl
enter
enter
mov
inc
lock
mov
leave
push
add
inc
gs
nop
mov
in
lret
add
leave
jno
cwtl
int3
icebp
cmp
push
xor
push
or
lret
and
lret
xchg
lret
lret
inc
dec
and
roll
aaa
lret
out
jle
pop
lret
push
mov
mov
adc
lret
fsubrl
dec
cli
outsb
pop
jmp
jl
sub
jbe
repnz
into
in
push
lret
adc
dec
sub
arpl
lret
or
add
sub
jmp
jecxz
or
xor
jle
icebp
pop
add
sahf
or
inc
add
mov
insb
adc
cmpsb
jmp
add
insb
testb
jne
out
insl
mov
pop
mov
cmp
sub
int3
stos
lods
rolb
mov
add
cmp
loope
lods
arpl
add
pop
mov
cmp
dec
jmp
jge
inc
repnz
adc
int
fidivs
movb
jb
in
push
xchg
mov
or
sub
fiadds
shll
pop
jno
push
in
int
insl
cs
insl
lock
xor
mov
into
xchg
fwait
sbb
out
into
push
mov
or
aaa
xor
push
sub
into
data16
int
nop
test
sbb
iret
sub
into
data16
addr16
into
mov
arpl
xor
xor
rcl
or
into
shlb
rorb
adc
addr16
or
rorl
mov
roll
cmp
shll
fldl
push
jno
jl
mov
testl
rorb
cwtl
outsb
shl
cmc
cmp
push
shl
imul
icebp
dec
repz
repz
dec
push
iret
mov
mov
into
imul
cmc
insb
cmp
rclb
repz
rorb
push
shrb
clc
icebp
popf
hlt
or
hlt
test
test
iret
out
mov
into
mov
jo
cmc
mov
inc
cmc
push
sarb
insb
std
shlb
cmc
and
insb
cmp
cmc
push
mov
mulb
jno
shrb
negb
xor
add
not
add
insl
aad
cmc
neg
icebp
test
sbb
sub
les
mov
mul
out
out
dec
into
inc
in
outsb
aad
adc
movsb
imul
cmpsl
xchg
inc
in
testl
adc
jbe
inc
outsl
cmp
clc
push
dec
insb
clc
icebp
and
xchg
ror
clc
push
das
adc
xor
stc
xchg
stos
ja
out
add
fwait
stc
jl
int
nop
lahf
stc
mov
imul
repnz
bound
jle
out
mov
into
dec
or
xor
or
or
mov
mov
hlt
cli
fcoml
xchg
pop
int
jl
mov
pop
icebp
and
push
push
sti
clc
icebp
inc
sti
push
je
clc
icebp
fs
push
xchg
sti
clc
icebp
test
push
mov
clc
icebp
movsb
sti
push
aam
clc
icebp
sti
push
hlt
sti
clc
out
in
rcll
mov
inc
cld
test
jae
std
rcl
cld
clc
adc
cld
push
insl
jo
xor
xor
std
xlat
or
jno
and
std
mov
jle
shlb
xchg
push
add
mov
pop
or
cld
cltd
shlb
xlat
or
cmpsb
and
decb
mov
add
fists
filds
add
adc
add
cwtl
xchg
jp
sti
jns
jmp
jl
ljmp
repnz
sbb
gs
or
pushf
or
aam
or
adc
adc
loope
jl
rcrl
testl
loope
or
fwait
popf
rolb
or
loop
push
or
loop
into
dec
push
imul
add
cltd
jp
mov
and
push
cmp
sub
jecxz
aaa
into
lcall
jecxz
add
lret
jecxz
lcall
add
shl
cmp
in
popa
in
add
rcrb
sub
int
push
mov
in
push
and
jmp
fisubs
push
pop
pushf
in
test
jl
int
nop
shl
mov
jg
sub
shl
cmp
outsl
xor
out
out
mov
cmp
push
or
out
push
popa
sbbb
cmpsl
out
mov
out
fimuls
xor
gs
pop
jl
insl
xor
jae
push
add
inc
addl
mov
in
lret
add
out
fs
sahf
cmp
call
add
call
xchg
imul
cmp
lret
call
adc
test
or
jmp
pop
jmp
and
jmp
and
jmp
and
jmp
and
jmp
push
pop
ljmp
mov
push
mov
sahf
jne
jg
nop
dec
push
out
in
ljmp
dec
jmp
jns
sbb
jmp
icebp
pusha
andb
dec
xor
jg
adc
xchg
and
mov
icebp
sahf
in
push
mov
push
add
sub
pop
push
mov
cmpsb
mov
mov
pop
nop
scas
and
jmp
or
push
test
ret
into
in
add
mov
stc
in
pop
nop
lret
nop
sub
out
nop
in
in
mov
push
or
test
jp
call
jl
mov
pop
mov
add
clc
adc
out
push
cmp
add
int3
out
xlat
or
cmp
mov
cmpxchg
inc
lock
loop
pop
or
mov
pop
lock
or
push
icebp
and
icebp
lea
mov
xor
test
icebp
test
lea
or
cmp
fisubrs
xacquire
das
mov
push
xchg
adc
mov
cmp
adc
mov
jno
pop
mov
xor
mov
adc
ja
sarb
adc
sbbl
cwtl
jb
out
add
dec
adc
mov
cmp
nop
inc
jg
cmp
adc
loopne
jp
iret
pop
push
cmc
mov
xor
push
push
or
push
test
xchg
sbb
mov
xchg
xlat
mov
fmull
cmp
lea
test
add
xchg
push
lods
jmp
or
mov
pop
mov
pop
mov
adc
pop
cwtl
add
push
and
pop
add
sbb
sbb
add
sbb
sbb
add
sbb
sbb
add
sbb
mov
push
loope
sbb
sbb
rol
and
sbb
mov
push
xchg
mov
pop
inc
or
sti
cmpsb
nop
pop
sbb
mov
sbb
nop
jne
cmpsb
mov
mov
pop
nop
outsl
in
test
or
adc
mov
out
sub
sbb
pop
mov
in
fnstcw
pop
movsb
mov
adc
inc
movsb
dec
sbb
inc
inc
xchg
xchg
test
fcomps
pushf
shlb
ror
sbb
movsl
pop
add
xchg
jp
and
add
xor
add
lcall
in
sarl
lods
pop
add
sbb
xchg
ja
pop
add
nop
or
dec
mov
push
push
or
adc
adc
decl
rcrb
testl
decl
mov
push
or
in
push
or
add
xor
mov
faddl
test
mov
aad
adc
fdivp
cs
test
mov
mov
mov
mov
mov
mov
icebp
add
adc
xor
mov
pop
xor
xchg
xor
jl
push
add
and
mov
jne
repz
into
add
jl
sarb
push
in
mov
add
add
sarl
and
add
push
hlt
add
mov
or
add
mov
xor
adc
add
add
or
add
movsb
lods
mov
xor
mov
es
push
repnz
pop
nop
pop
add
push
mov
int3
int
int
sbb
adc
mov
icebp
stc
add
icebp
sbb
arpl
push
pop
add
push
sub
int
nop
jns
mov
cltd
push
mov
inc
arpl
push
sub
into
mov
nop
imul
adc
mov
mov
dec
push
fiaddl
or
mov
mov
into
mov
pop
or
jmp
popf
dec
pop
inc
sarb
add
rorb
sub
into
mov
nop
jnp
sarl
or
aaa
sbb
jle
into
cmc
aad
pop
pushf
mov
or
and
or
orb
add
or
cmp
nop
mov
cmpsb
mov
mov
pop
nop
mov
in
jmp
adc
push
or
push
mov
mov
xchg
mov
sbb
adc
out
push
xor
cmpsl
add
mov
xlat
or
ljmp
jg
pop
mov
mov
clc
adc
or
xor
add
push
push
or
fsubl
and
push
lea
movsb
push
xor
push
or
push
test
test
aad
out
fdivp
pop
push
rolb
xor
add
test
stos
inc
mov
cmp
jg
out
arpl
movsl
push
xor
or
adc
or
push
mov
stos
adc
lret
or
shlb
lds
cmp
pop
xor
adc
and
loopne
out
daa
iret
pop
push
mov
in
add
movsb
push
cmp
push
nop
call
adc
outsl
adc
into
adc
shrb
push
mov
lret
rclb
cli
nop
push
adc
add
adc
flds
cld
pop
cmp
scas
push
mov
adc
adc
add
adc
adc
add
adc
adc
cmc
and
xor
xor
mov
popa
push
dec
xor
leave
lahf
cmp
and
cs
sub
or
mov
dec
sub
adc
cmp
jl
lds
lcall
and
loop
cmp
xor
xor
hlt
push
add
aam
adc
add
fsubrs
call
cmp
xlat
ret
sub
fsubrs
xlat
lcall
scas
mov
jge
icebp
xchg
rclb
push
sub
mov
popa
ret
inc
ss
in
adc
jmp
nop
aam
lret
ret
inc
cmp
jg
popf
add
push
pop
fwait
jnp
leave
jmp
rcl
sbb
popl
cmp
inc
sbb
sbb
shlb
adc
mov
jmp
ret
add
ja
icebp
int
ss
cltd
push
int3
sbb
leave
jle
repnz
pushl
xor
mov
xchg
lods
movsb
jp
cwtl
or
jl
nop
aad
lods
mov
test
cmp
test
sub
or
sub
or
sbb
test
jnp
shlb
mov
mov
roll
adc
add
fsub
bound
xor
add
lock
adc
std
popl
jmp
sbb
call
push
mov
sub
vmovaps
xor
or
ljmp
jg
lret
inc
inc
mov
das
jo
sub
push
fstps
add
mov
icebp
ja
jbe
mov
xchg
cmp
push
dec
repz
mov
shr
pusha
jl
aaa
in
jge
cmp
lea
cmp
or
sub
ljmp
push
insb
clc
and
out
ljmp
in
sub
xorb
add
or
arpl
sbb
cwtl
fwait
addb
mov
fnstsw
jecxz
lock
aad
mov
mov
sub
loope
sbb
out
pushl
std
xchg
mov
xchg
and
mov
test
mov
add
pop
stos
cmp
push
mov
cltd
mov
aad
mov
loopne
lock
outsl
mov
push
mov
cmpsb
or
adc
mov
jle
shlb
sarb
aam
jl
movsl
cmp
push
fmull
mov
fstpt
cli
pop
xor
cmp
nop
adc
cmp
xor
adc
mov
lock
int
xor
icebp
ds
aas
out
bound
insb
xor
xchg
mov
mov
mov
cmp
mov
bound
jg
shrl
or
mov
dec
nop
mov
cmp
insl
imul
jne
xor
sbb
popa
and
xchg
sbbb
add
faddl
adc
push
sbb
pop
dec
das
or
add
adc
pop
cmp
lahf
ret
xor
push
fwait
jg
mov
jb
add
push
xchg
ficoms
bound
mov
xor
push
jns
xchg
fdivr
jp
cmp
inc
pushf
fsubrl
fucomp
movsl
jge
dec
xor
outsl
pop
add
and
ds
cmc
leave
imul
test
sub
frstor
cmp
rcrl
nop
test
jo
cs
pop
cmp
rcl
xchg
test
or
pop
mov
add
sub
dec
and
and
adc
mov
cs
inc
sti
dec
xor
cltd
mov
or
sbb
fdiv
adc
sub
test
rcr
dec
nop
loopne
or
pusha
and
xchg
and
insl
call
call
mov
int
mov
push
add
and
dec
in
mov
icebp
sbb
adcl
sbb
mov
arpl
push
sbb
mov
addr16
pop
pushf
lock
and
mov
and
xorb
jne
add
fsubs
lret
movsb
add
add
fistps
arpl
add
inc
dec
int
cmp
xor
add
sbb
dec
insb
ret
sub
and
ss
stos
mov
shrb
sbb
push
lock
mov
shl
and
jno
jo
sub
and
lock
fnstcw
gs
mov
mov
orb
int
out
and
xchg
fs
or
and
jge
out
ret
aas
inc
push
scas
sub
jo
push
iret
jl
xchg
lcall
mov
hlt
loope
out
adc
stos
xor
pop
lds
lock
mov
cli
enter
int3
push
arpl
mov
or
rcrb
push
jbe
jl
jo
or
jo
sbb
and
inc
cmc
jnp
enter
mov
insl
popf
push
push
out
mov
mov
out
push
sti
xchg
mov
xchg
push
mov
mov
jbe
mov
dec
cmpsl
xchg
repz
mov
sub
movsb
and
mov
into
mov
ljmp
and
push
jmp
push
mov
repz
sbb
or
lock
pop
sbb
sahf
add
mov
inc
in
inc
xchg
mov
aaa
sub
stc
or
pop
mov
lret
iret
jb
loopne
mov
aad
loope
daa
es
in
and
add
push
mov
es
cmpsl
or
mov
into
sbb
push
xchg
sub
rol
andl
dec
hlt
les
adc
push
pop
loope
xchg
mov
sbb
in
xchg
add
rcrb
add
daa
popa
outsb
cmp
insb
push
shrb
inc
sub
les
inc
jl
xchg
pop
sub
push
jmp
jmp
push
fsubr
push
ret
roll
repz
int3
sub
xchg
enter
sahf
add
xor
sub
nop
sbb
testb
stos
sub
or
push
cwtl
xor
jecxz
mov
fdiv
dec
sub
sub
out
xor
adc
dec
outsl
call
mov
icebp
mov
push
xchg
mov
ror
mov
sub
push
push
in
cmp
inc
and
xor
aad
ja
and
sub
adcl
pop
in
mov
mov
jo
or
add
ret
shlb
pop
aad
sub
and
adc
lret
sti
push
xchg
adc
adc
mov
daa
out
popa
shll
sub
mov
in
shrl
mov
inc
sti
jl
das
push
and
leave
popf
pop
mov
orb
ja
inc
cmc
ret
inc
xor
mov
jmp
sbb
jp
mov
roll
dec
dec
adc
movb
arpl
insb
add
imul
jbe
out
mov
mov
mov
sub
inc
jl
xchg
pop
ret
add
dec
clc
push
mov
mov
sbb
add
in
add
jg
xor
mov
or
or
arpl
adc
push
cs
shrb
test
cmp
inc
inc
push
adc
adc
or
or
jp
inc
xchg
lret
ja,pn
and
xchg
div
cs
and
sbb
into
or
add
insb
push
mov
ret
inc
fisubrl
fmulp
lret
mov
rclb
mov
inc
mov
add
jnp
and
and
or
or
push
rep
into
shl
add
push
data16
jmp
mov
shrb
xchg
cmp
and
lds
push
push
mov
mov
das
stos
imul
add
add
out
out
sbb
mov
push
xor
addl
mov
mov
jg
jle
mov
xchg
cmp
mov
xor
insb
test
dec
stos
mov
nop
dec
enter
subb
xor
ret
xor
xchg
xor
xor
movsb
and
add
xor
sahf
lds
fistpll
out
cmpsl
xchg
inc
pop
xor
jne
clc
adc
xor
sub
ret
jg
jmp
jge
sub
jl
mov
mov
dec
jl
mov
ljmp
out
rcrb
pusha
in
shr
popf
jle
jo
add
or
push
lds
sub
or
mov
push
push
adc
test
mov
rclb
fcoms
cmp
xchg
jg
adc
cmp
gs
sbb
hlt
add
or
pop
adc
stos
ds
or
xor
das
aad
daa
sub
outsl
jnp
loop
mov
or
sbb
jl
inc
es
out
test
push
xor
imul
pop
icebp
mov
mov
shrl
das
test
jle
subl
cmpsl
ljmp
or
repnz
cmp
out
push
scas
scas
lret
pop
sub
dec
push
ficoms
adc
xchg
pusha
repnz
ret
stos
or
adc
int
pop
aad
fucompp
adc
movsb
cmp
push
and
mov
or
push
jmp
ficompl
and
dec
int3
pop
add
insb
scas
sub
int3
out
inc
xor
xor
add
mov
jne
or
cli
rclb
fcoms
push
jmp
sub
mov
ffree
pop
repnz
fldln2
ljmp
pop
loop
add
cwtl
dec
mov
shr
push
pop
mov
or
dec
lods
mov
inc
rcll
push
dec
int
xchg
and
sub
int
in
mov
test
mov
xchg
lret
jno
in
jecxz
sub
and
int3
jp
and
mov
repz
push
test
bound
arpl
xor
sub
lcall
or
adc
push
aas
mov
xor
pusha
mov
clc
add
outsl
and
sub
pop
dec
jb
adc
pop
push
xor
mov
push
cmpsl
dec
test
test
call
add
iret
ljmp
rcrl
jne
push
sub
pushl
xor
add
xor
add
aas
int3
fiadds
sub
mov
icebp
push
or
aad
fildl
or
lds
lret
dec
ficoms
pop
lds
lret
push
push
into
push
mov
popa
out
mov
xor
jp
jo
xchg
and
sub
shrb
or
jmp
push
fadd
nop
push
iret
rorb
nop
pop
pop
jmp
xor
pop
lcall
or
inc
rcl
xchg
xor
lahf
push
xchg
lret
cwtl
fcmovne
or
or
lcall
pop
push
bound
ret
addr16
lcall
movb
not
lcall
add
add
xor
sbb
mov
fsubrp
jge
add
loopne
mov
push
repz
pop
aas
add
xchg
lcall
pop
adc
push
adc
aad
lds
negb
mov
adc
inc
repnz
sbb
pop
movsb
sub
test
ficompl
sbb
or
pop
mov
pop
clc
cmp
inc
lds
dec
std
xchg
add
add
popf
or
cmc
pop
scas
lds
fadds
nop
or
add
rcrb
es
lods
lods
imul
adc
adc
aas
popf
cmpsb
add
stos
aas
cmp
sarb
arpl
xchg
fmul
push
fadds
adc
mov
add
and
inc
add
rolb
inc
inc
test
imul
xor
es
or
imul
adc
dec
mov
iret
push
movb
inc
push
lock
je
add
jl
sub
out
adc
rolb
mov
cltd
inc
sarb
jp
pop
mov
xor
cmp
out
or
nop
push
inc
daa
mov
adcb
les
inc
lds
into
inc
or
pop
std
lea
popf
cltd
mov
adc
jg
fsts
and
mov
decb
sub
cmp
lock
fcoms
cmpsb
add
dec
inc
negb
mov
sub
nop
sahf
iret
ljmpw
sbbl
jl
and
pop
nop
inc
clc
into
lret
inc
outsl
arpl
ss
in
loopne
mov
mov
fsubrp
ret
lret
out
loop
and
mov
sub
adc
shl
or
insb
in
jb
xor
adc
test
imul
mov
mov
int
mov
add
bound
icebp
punpckhbw
into
inc
adc
das
clc
mov
cs
cmp
jecxz
or
rorl
lds
push
jnp
cli
push
cmp
int3
pop
int
push
pop
inc
cmpsb
sti
lods
add
test
es
mov
enter
pop
mov
nop
mov
cmp
ds
repnz
out
icebp
inc
int
pop
adcl
jle
add
out
jmp
inc
std
cwtl
in
icebp
or
les
enter
pop
icebp
out
or
fmuls
dec
movsl
loope
nop
and
in
sub
lods
sti
mov
lcallw
mov
lea
add
and
xor
sbb
sub
stc
out
rclb
pop
sti
je
sar
lds
inc
or
mov
pop
xchg
fadds
mov
adc
int
dec
jl
pop
pushf
push
js
in
jecxz
fdiv
fs
jge
push
sbb
sbb
icebp
adc
push
xchg
mov
test
cmc
fstpt
loop
inc
fdivs
add
idivb
jl
mov
xor
dec
test
mov
sbb
icebp
shrb
push
test
pop
faddl
inc
xor
inc
ret
pop
sub
jae
scas
mov
ret
dec
xchg
arpl
testb
mov
fisubrs
cmp
push
fdivrp
aaa
dec
lds
or
sub
leave
mov
pop
iret
xor
dec
xor
and
mov
jne
stos
sbb
jmp
dec
xor
ret
or
fsubs
or
sub
out
inc
dec
rcll
mov
jl
mov
inc
jmp
jecxz
outsb
rclb
enter
nop
and
xor
cmc
dec
pop
popa
test
jl
in
repnz
std
cmpl
jbe
xchg
add
add
int3
push
sub
insb
jne
xorl
mov
rcrb
fsubrs
out
ret
jo
sub
cmp
or
adc
div
push
push
aam
int3
in
push
adc
mov
es
add
adc
cmp
push
fsubr
pop
divb
xor
or
lock
icebp
dec
lods
jno
mov
lods
cli
jg
lds
std
jb
cli
xchg
mov
rorl
popa
inc
xor
iret
ljmp
pop
inc
stos
cs
push
dec
mov
sahf
jns
rolb
ret
jmp
xorb
in
mov
jmp
jno
inc
rorb
mov
add
sbb
adc
icebp
out
scas
add
gs
inc
dec
jmp
or
pop
xchg
test
fimuls
and
xchg
ret
leave
dec
or
or
cmp
sub
or
dec
idivl
xchg
rcrb
dec
add
dec
and
sbb
inc
push
andb
aad
xor
leave
in
imul
inc
inc
sti
add
adc
cmc
insb
enter
addb
repz
xor
push
dec
add
sub
cmp
rolb
jmp
pop
cmp
or
push
push
sbb
xorl
insb
sub
xor
or
cwtl
jo
adcl
inc
and
add
pop
mov
jl
shlb
insl
lds
in
fcoml
xor
clc
push
or
jb
hlt
insb
fs
push
mov
jl
xchg
hlt
loop
xchg
push
and
xchg
cwtl
or
mov
sbb
nop
xor
or
sbb
nop
pop
rcl
mov
push
xchg
mov
sysexit
ficoms
shrb
or
pop
fistps
fadds
mov
sub
inc
inc
push
jb
fwait
add
aas
lods
mov
ret
ja
sbb
jns
in
pushf
enter
icebp
fiaddl
or
out
or
imul
out
jae
and
loop
push
notb
jae
ret
pop
popa
dec
add
inc
dec
test
int3
mov
and
out
add
je
xor
outsl
je
icebp
dec
lock
fdivl
pop
mov
loope
adc
xor
pushf
fcmove
adc
call
push
xchg
xor
bound
std
cmpb
push
ds
stos
push
fs
imul
sub
nop
mov
push
jne
adc
jbe
icebp
push
movsb
outsb
jbe
in
adc
ret
rorl
shlb
add
push
dec
ja
add
mov
mov
ljmp
mov
sub
adc
loop
stos
pop
inc
pop
mov
adc
scas
mov
adcb
adc
xchg
mov
pushf
sub
stos
shlb
js
test
sbb
jmp
insb
js
test
adc
xchg
test
or
test
into
adc
push
je
sub
fldt
push
jge
mov
sub
int3
adc
popf
adcl
out
outsl
adc
or
fsts
cmpsl
icebp
imul
adc
or
jp
cmp
test
jl
lret
lea
in
pop
add
mov
add
jne
lsl
inc
cmc
imul
ljmp
out
push
aas
cmp
fdivr
insl
lahf
mov
and
jp
data16
adc
shr
mov
pop
sbb
and
fdivrl
dec
int3
cmp
jnp
push
push
loop
push
xchg
xchg
mov
pop
sbb
pop
pop
or
das
fisttps
lcall
ss
adc
aaa
das
fdivl
lea
push
sub
jge
add
cmpb
jmp
sub
mov
sub
jl
and
idivb
hlt
inc
mov
loopne
cmpsb
sub
or
and
pop
xchg
lds
inc
mov
cwtl
adc
jnp
ret
mov
cmp
inc
out
rorb
inc
sti
sahf
pop
or
and
clc
lods
fwait
xchg
xorl
fdivrs
iret
jb
mov
pop
in
jnp
lock
cs
push
out
push
push
loopne
out
lcall
sub
nop
dec
es
push
sbb
stc
mov
xor
push
xchg
push
pop
adc
jmp
xchg
icebp
adc
out
fdivs
mov
aad
pop
adc
mov
pop
push
or
scas
xchg
aas
jg
add
push
add
js
stc
ret
sarb
testb
sub
mov
pusha
add
loope
sbb
dec
add
push
xor
sbb
sub
or
add
xor
add
cld
arpl
int
nop
sub
lds
data16
mov
or
ljmp
adc
jns
aad
xchg
fimull
mov
repz
inc
adc
sbb
scas
add
jl
mov
out
mov
in
sub
push
and
cli
and
outsl
out
rorb
addr16
in
into
and
shll
mov
push
enter
xchg
pop
push
loop
and
mov
xor
cmp
pusha
nop
ficomps
scas
pop
mov
into
jl
xchg
dec
adc
mov
cmpsb
adc
mov
sbb
jecxz
negl
mov
fcoms
popa
xor
fdivp
jl
jg
and
popa
test
and
sub
ffree
jp
xor
out
addr16
push
cs
mov
push
cltd
fs
data16
sbb
adc
mov
in
cmp
dec
jl
adc
aaa
negb
mov
push
or
push
rclb
sub
adc
cmpsl
aad
mov
mov
adc
jg
loopne
mov
mov
loopne
aaa
orb
cli
dec
push
jmp
cmp
jo
cltd
pop
lds
clc
add
sub
push
push
xchg
xchg
mov
mov
pop
and
lret
cmp
aad
mov
scas
arpl
arpl
in
scas
pop
jns
cmp
fnstsw
pop
ljmp
test
jb
or
jl
and
and
mov
arpl
outsb
roll
sbb
add
cld
rclb
cmp
jno
or
dec
je
or
jl
lds
fs
mov
les
dec
pop
out
cmp
es
roll
inc
xchg
rcll
cld
cmp
in
sbb
mov
fbld
enter
add
mov
in
add
push
mov
daa
mov
testl
push
aad
jge
ss
scas
bound
jmp
sub
mov
push
sbb
popf
arpl
push
sub
jl
mov
mov
je
insb
mov
mov
outsb
js
push
mov
push
mov
sbb
mov
in
leave
cmp
nop
aas
and
jbe
sbb
mov
cmp
inc
sbb
mov
popa
jbe
dec
rcrl
fstpt
lea
adc
lea
loop
into
sub
lods
rcrb
xchg
mov
sbb
icebp
mov
mov
pop
lods
cmp
sub
and
in
cmp
mov
test
push
nop
rol
jb
add
add
pop
mov
cmpl
add
mov
out
ret
cmpsb
or
jns
pop
xchg
and
pop
cltd
les
pop
gs
push
push
cmp
std
and
sahf
out
sbb
mov
xchg
sub
rorb
push
imul
and
adc
lods
sarb
mov
in
in
push
and
imul
xor
clc
push
movsb
push
xor
add
rorl
movsb
push
mov
aad
pushf
pop
rolb
push
pop
ljmp
jp
inc
imul
test
pop
and
push
insb
imul
jmp
scas
jb
add
mov
adc
aam
and
arpl
insb
push
add
cmp
jns
mov
xor
pusha
in
mov
add
jb
jle
into
push
leave
xor
fists
or
aad
and
arpl
add
mov
jns
shrb
jl
mov
inc
imulb
sbb
add
add
outsb
mov
fists
mov
cmp
or
aad
in
jl
sarb
into
push
sub
gs
push
popf
jp
or
mov
outsl
mov
fistps
ss
and
or
in
fisubs
xchg
gs
sub
mov
jo
and
or
insl
pop
mov
dec
mov
fistpll
dec
jg
xchg
add
jp
dec
jno
push
pop
jno
test
or
cmp
icebp
dec
push
push
les
mov
mulb
push
or
mov
es
push
mov
xorb
xor
test
jb
inc
fdivs
cmp
or
cmp
jl
insl
xor
fs
push
xor
je
pop
nop
mov
xchg
jmp
repnz
das
in
lock
xor
popf
xor
xchg
test
adc
or
fstl
ja
pop
das
in
rorb
xor
xchg
popf
xor
xchg
test
adc
or
lahf
xchg
fdivp
ficoms
das
in
aam
push
das
or
xor
cs
mov
sbb
cmp
xchg
cmpsb
mov
push
lods
jmp
adc
sub
adc
in
rcll
nop
test
movsb
xchg
xchg
adc
xchg
into
dec
xor
push
sbb
push
xchg
icebp
mov
xchg
nop
test
movsb
xchg
xchg
dec
xchg
gs
ljmp
or
sbb
cwtl
or
push
test
pop
xor
pop
mov
inc
ret
sbb
adc
add
cwtl
or
int
and
int3
sub
sarb
add
xorb
in
push
jb
lds
bound
std
xchg
push
sarb
ret
loope
push
or
out
or
mov
ja
das
adc
jl
and
xchg
fnstenv
sbb
dec
cltd
in
or
cmp
dec
cltd
mov
inc
bound
add
pop
fcmove
sbb
dec
out
mov
or
testl
enter
gs
mov
xchg
or
int
jb
push
push
shll
testl
out
subl
cmpsb
lods
fcoml
jo
lret
or
jb
add
mov
jg
and
lcall
adc
loopne
pushf
push
adc
lods
mov
test
in
and
cmp
jmp
out
xor
or
mov
sahf
and
lret
mov
fstps
xchg
icebp
lcall
mov
add
pop
lock
xchg
icebp
daa
lsl
leave
shlb
sbb
jae
jno
out
cmpsb
adc
inc
push
subl
cmp
in
push
pop
dec
rcll
inc
stc
imul
or
sub
inc
cmp
repz
jp
cmp
int3
pop
popa
mov
fwait
inc
push
inc
lret
and
leave
mov
sbb
adc
sahf
mov
push
lock
jl
fistps
sub
fwait
out
add
pushf
sub
bound
mov
xchg
push
jl
sbb
lods
ja
push
sub
std
mov
pushf
mov
pushf
jmp
out
mov
xor
sub
mov
pushf
adc
iret
stos
adc
sub
jb
jle
adc
adc
sbb
xchg
insb
cvtpi2ps
xchg
lahf
inc
cmp
popf
mov
mov
sti
mov
lret
popf
in
popa
dec
cmp
insb
jecxz
cli
add
popf
bound
adcl
stc
push
mov
popf
bound
aam
or
xchg
xchg
ret
out
aad
xor
iret
clc
xor
repz
cmpsb
sub
inc
aaa
mov
cwtl
gs
lds
rclb
xorl
notb
repz
and
push
adc
mov
cmp
jl
hlt
fidivrs
neg
cmpl
div
sbb
adc
add
and
ja
fadd
inc
jg
sbb
call
subb
push
sahf
jg
jecxz
repnz
fnstsw
pushf
test
scas
xor
jg
inc
mov
pop
xor
loop
sbb
sub
addr16
loopne
xor
add
xorl
sbb
dec
rolb
mov
add
gs
movsb
add
imulb
andl
orb
jmp
mov
in
sbb
add
add
mov
mov
subl
rolb
int
xchg
test
xchg
xchg
into
repz
lret
cli
mov
pop
dec
or
xor
cmp
pop
add
xor
enter
aaa
rol
ret
dec
mov
xchg
mov
xor
orl
cs
sub
jle
add
mov
js
mov
pop
lods
inc
rolb
adc
sub
fsubr
cmp
mov
fdivl
aad
xlat
lods
xchg
and
mov
ds
iret
cld
xchg
xchg
xchg
sbb
mov
pop
stos
cmp
jbe
jne
mov
add
sbbl
pop
push
or
shrb
mov
inc
pop
and
xor
pop
mov
dec
add
sbb
into
addl
cmp
addr16
xor
mov
or
pop
inc
jl
aas
adc
cld
in
scas
pusha
dec
mov
pop
dec
btr
mov
bound
aad
movb
test
insb
fnstenv
push
mov
cmp
mov
arpl
loop
xchg
mov
test
add
pop
mov
dec
jb
mov
orb
mov
loopne
lock
test
cmp
aas
mov
iret
jbe
push
adc
repnz
idivl
lods
dec
pop
popf
sbb
fwait
cmp
popa
dec
adc
or
ss
cwtl
add
mov
mov
shlb
dec
adc
pop
sub
jmp
arpl
sbb
sti
ficoms
jmp
jb
sbb
sahf
xchg
dec
mov
dec
das
lahf
jg
add
sub
jne
das
xchg
loope
jecxz
loopne
mov
inc
cmc
push
push
and
jne
xchg
xchg
rclb
and
scas
inc
fidivs
xchg
aad
xorl
cmp
lds
test
lret
add
jno
push
fadds
lods
sbb
iret
xlat
test
xor
push
repnz
roll
icebp
sbb
lock
sub
fs
jecxz
rorb
daa
mov
outsl
or
iret
lahf
out
adc
rcll
out
mov
iret
sbb
rcr
mov
mov
mov
test
ljmp
addr16
divl
add
int3
jmp
cmp
and
fsubr
sub
inc
lret
shll
lods
addb
scas
ror
testb
jnp
cmp
in
mov
mov
sti
movsl
arpl
xchg
lods
leave
cmpsb
mov
pop
pop
sub
stos
ret
loop
add
ds
daa
in
jo
jns
fadds
repnz
push
adc
lds
adc
ljmp
cmc
cmp
inc
and
sub
inc
sub
inc
and
sub
lea
sub
insl
pop
pop
push
fcmovbe
mov
xor
lea
stos
mov
stos
fdivrl
jmp
sub
mov
inc
or
fstp
fsubrs
or
inc
cmc
popa
cmp
cwtl
aad
lea
rolb
sub
mov
mov
dec
pop
loop
mov
add
sbb
lods
mov
mov
ror
or
pop
mov
push
adc
flds
sbb
dec
fnstcw
jge
rol
jp
sub
daa
cmp
cmp
jge
imul
or
sbb
xchg
mov
mov
cmp
and
jbe
adc
xor
int
add
and
lea
add
lods
dec
xchg
jmp
ja
into
or
inc
f2xm1
clc
leave
mov
fsubrs
pop
inc
mov
xor
pop
xchg
jmp
rclb
dec
leave
push
lds
mov
pop
insb
jmp
xor
mov
sub
mov
xchg
mov
push
sub
ret
mov
xchg
scas
mov
and
cmp
sub
por
mov
pop
pop
jns,pn
or
ss
mov
pop
sub
add
xor
xorl
add
mov
push
loopne
mov
inc
jb
fcmovne
fistpl
jmp
fwait
adc
or
test
ret
cmp
push
nop
pop
jne
add
push
mov
stc
mov
xor
movsb
nop
ja
dec
das
or
das
cs
nop
jl
cmp
nop
xchg
mov
jns
fcomi
int3
pusha
mov
fnclex
sbb
outsl
push
es
xchg
pop
inc
sbb
pop
loop
jnp
iret
cwtl
mov
or
rclb
ficoml
jmp
cmp
jecxz
add
xor
andl
nop
cli
outsl
ds
xchg
xchg
les
aad
lea
das
lods
xchg
test
mov
add
mov
adc
outsl
lcall
lret
pop
adc
stos
scas
movl
nop
mov
out
loopne
cmp
fld
mov
es
aam
add
out
aad
call
mov
mov
jmp
or
out
aas
in
addr16
push
dec
mov
popa
ret
adc
pop
jno
add
jl
clc
jmp
scas
cmp
repnz
adc
push
and
sti
enter
xchg
mov
mov
or
popf
cmp
inc
lahf
add
movsl
out
fimuls
shlb
mov
mov
xor
hlt
jae
xchg
pop
cmp
sub
ret
aad
and
fldcw
ljmp
fcmovnb
ret
xchg
scas
cmp
fnstcw
dec
mov
es
sbb
push
cmp
ret
mov
mov
fstpt
push
pop
adc
ja
lds
mov
rolb
and
cmpsl
add
lahf
pop
in
sub
mov
test
or
inc
fldcw
lret
ljmp
lods
xchg
rcrb
pop
inc
sbb
ljmp
call
mov
fidivs
inc
push
mov
mov
jne
fcoml
inc
jb
xor
dec
and
push
xrelease
push
mov
inc
movsl
pushf
adc
nop
icebp
inc
mov
js
lret
sub
rcrb
inc
or
lcall
sub
jo
mov
pop
fdivl
xor
pop
jno
popf
add
push
xor
mov
pop
add
rorb
adc
mov
push
into
mov
sbb
push
mov
or
jo
jg
mov
mov
sbb
in
mov
mov
mov
xchg
sti
xor
mov
xchg
mov
xchg
outsl
call
mov
in
mov
fisubrl
jnp
jle
pop
fistpl
sub
scas
or
mov
aad
dec
js
cmp
mov
add
jmp
fdivs
mov
xlat
jnp
or
pop
ret
out
cmpl
cmpsl
adc
es
out
add
sbb
or
sub
addr16
or
sahf
adc
imul
jle
add
add
inc
gs
rcll
std
cs
sbb
mov
push
mov
sbb
cmp
and
push
mov
lret
mov
xchg
ret
dec
mov
int3
and
outsl
push
mov
outsb
mov
enter
push
movsl
pop
cmp
scas
sbb
dec
add
and
cmp
iret
mov
mov
pop
lea
xorl
or
cmpsb
adc
mov
mov
mov
and
xchg
int3
mov
cld
adc
shlb
mov
aad
pushf
fnstcw
out
push
fldl
or
cmpb
pop
inc
roll
fs
clc
aam
arpl
mov
adc
scas
and
subl
mov
sub
and
mov
pop
es
cmpsl
outsl
mov
out
sbb
into
mov
push
inc
and
push
popf
cmp
mov
pop
dec
sbb
popa
lea
sub
fstp
jbe
adc
xorb
sub
xor
sub
sub
jnp
ds
sti
insb
lock
test
fcmovnu
inc
mov
mov
xor
das
sub
sahf
dec
xorl
sbb
push
ljmp
sbb
push
and
xchg
xor
mov
and
dec
adc
cltd
fidivrl
movb
and
xlat
mov
mov
sub
das
bound
das
ret
jecxz
mov
out
imull
and
jp
aas
jne
and
fstps
imul
sub
push
xor
push
data16
test
aas
adc
int
sub
int
cmp
jno
imul
lahf
mov
lahf
loopne
and
ja
xchg
sub
xchg
pop
add
pop
adcl
inc
fwait
mov
xor
add
lods
fs
or
cwtl
and
xchg
outsl
jo
jecxz
testb
add
sbb
out
fsubrp
jecxz
xor
push
shl
push
mov
jl
cli
jecxz
inc
pop
movsl
lret
and
flds
add
out
or
sub
push
add
cwtl
shlb
ret
mov
leave
ret
daa
ret
sbb
rorl
add
nop
enter
xor
pop
repnz
xchg
sbb
mov
movsl
stos
je
cmp
pop
add
je
popf
mov
mov
sub
sub
ss
pop
add
mov
shll
jmp
dec
or
inc
lahf
dec
lea
xlat
nop
mov
test
nop
or
pop
movsb
addb
jo
test
and
mov
lods
sub
into
adc
sarl
aaa
ss
fdiv
int
lods
loop
mov
add
out
sbb
add
add
nop
icebp
mov
inc
cmpsl
mov
int
mov
repnz
rcrl
inc
lea
pusha
cmpsb
mov
xchg
les
fistpl
icebp
mov
sbb
roll
cmpsl
mov
addb
into
adc
and
cmpb
mov
and
mov
xor
rclb
lock
or
sub
hlt
lods
sub
pop
cmpl
cmp
or
cmp
dec
jb
cmc
adc
mov
mov
lock
sub
vprotq
ljmp
cld
add
int
stc
pop
sti
mov
popa
incl
jp
mov
gs
and
mov
loope
inc
adc
out
or
pop
add
lock
int
add
call
subl
in
addr16
int
adc
ljmp
pop
lods
sbb
sub
leave
push
pop
mov
rcrb
xor
lods
imul
add
ljmp
and
fistl
cmpsb
enter
call
repz
inc
ds
push
call
sub
mov
add
push
push
stc
pop
add
js
pop
adc
dec
pop
and
mov
adc
scas
pop
or
lods
call
pop
jge
mov
test
xrelease
add
push
cld
cmc
rclb
xchg
xchg
andl
movsb
cmp
mov
lods
or
mov
mov
rolb
mov
lods
scas
int3
lret
mov
or
fidivs
pusha
dec
pop
ss
or
dec
call
lret
js
xchg
push
andb
sbb
inc
stc
inc
pop
imul
mov
xchg
pusha
inc
lock
shll
ja
or
imul
pusha
push
data16
ja
push
rcll
rolb
movsl
inc
cmp
add
subb
sub
push
jl
mov
push
add
xchg
inc
push
loopne
sbbb
mov
xchg
popa
sub
lock
ss
daa
call
hlt
sbb
sub
lock
jl
scas
mov
into
lods
and
lret
sti
jmp
data16
mov
jmp
mov
and
or
inc
adc
mov
icebp
cmp
outsl
pop
sub
push
in
nop
ret
mov
fcoms
lods
mov
push
xor
pop
xlat
push
cltd
inc
mov
mov
mov
popf
cltd
adc
inc
mov
out
in
test
inc
jmp
mov
fildll
outsl
jmp
clc
outsl
mov
dec
loop
sub
mov
dec
fmull
inc
xor
subl
xchg
sahf
jge
sbb
pop
std
cmpsb
sti
xorb
scas
mov
push
xlat
enter
cs
leave
pop
out
or
sbb
fst
mov
enter
inc
and
in
mov
in
ljmp
lahf
js
js
or
sub
je
xchg
xor
mov
pop
jo
clc
out
jmp
lcall
out
mov
pop
stos
fidivrs
mov
adc
ficomps
fldl2e
pop
aam
popf
sbb
or
sub
popa
mov
into
rolb
pushf
js
cwtl
imul
pusha
mov
jge
out
inc
mov
std
sub
inc
xchg
push
divl
ss
fstpl
push
loop
test
dec
call
mov
jns
or
jecxz
dec
int3
ror
adc
adc
xchg
xor
pop
call
inc
push
in
dec
or
or
in
test
in
pop
bound
lcall
sti
pop
insl
imul
inc
loop
cmp
mov
cmp
jg
xorl
iret
sbb
cld
sub
mulb
push
mov
out
lds
popf
push
nop
jg
jp
pop
add
sahf
and
aam
xor
add
mov
lcall
add
jae
sub
dec
or
adc
dec
mov
leave
mov
mov
push
or
cmp
sub
and
mov
rorl
in
sub
cli
loop
and
jnp
dec
pop
inc
push
pop
ljmp
jg
or
aam
and
mov
pop
insb
fbstp
cmpsl
aam
test
xor
aam
add
insb
aaa
leave
aad
and
js
aad
insl
and
rcl
push
jns
test
add
cli
sub
ds
push
mov
out
aas
lret
push
and
insb
sub
into
cmp
into
dec
push
pop
xlat
pop
popa
jno
imulb
adc
xlat
mov
out
xlat
lea
sub
pop
pop
ss
in
out
xchg
inc
ret
jb
fidivrs
pop
mov
inc
mov
mov
adc
fidivl
aam
shl
fildl
and
jb
scas
daa
dec
addl
orb
dec
ret
lods
hlt
out
xor
nop
adc
mov
dec
push
test
sbb
jmp
jg
or
popf
push
shr
mov
test
xchg
test
jns
mov
sbb
push
jp
or
add
jns
mull
insb
mov
fisubrs
dec
shl
pop
push
dec
and
lds
aam
fcomp
xchg
in
fidivs
inc
lahf
push
bound
jmp
jp
add
sti
push
push
mov
and
sarl
std
mov
jle
rorb
push
sub
sbb
aas
push
test
rorl
jae
jbe
arpl
xor
jbe
sarb
xchg
xor
and
xchg
rorl
ja
inc
scas
rorl
or
ret
xor
mov
cli
cmp
lea
sbb
out
adc
pushf
pop
push
ret
xchg
pushf
pop
xchg
push
ret
pop
inc
cmp
jp
mov
test
testb
pop
add
jp
add
lds
dec
popa
xor
ret
pop
xchg
push
or
ss
test
jne
mov
popa
lahf
cmp
cmpsl
ffreep
adc
lea
pop
enter
push
mov
leave
enter
enter
leave
mov
fs
icebp
add
shl
leave
mov
icebp
icebp
leave
test
push
xchg
push
pop
or
stos
pusha
fcompl
mov
xor
xor
insb
pop
sub
push
jb
test
xor
sbb
mov
lret
imul
int3
js
lahf
jp
fcoml
xor
bound
bound
out
aas
dec
sbb
dec
int
mov
mov
push
xor
int
into
inc
es
jmp
xor
jmp
outsb
sub
ror
pop
insb
test
pop
imul
sbb
jp
enter
into
sub
enter
arpl
lods
mov
xchg
add
pop
mov
sbb
ljmp
sub
mov
imul
mov
mov
pop
mov
in
lahf
push
out
xor
rclb
adc
rorl
mov
in
mov
add
add
out
add
adc
hlt
sub
js
push
push
add
push
and
fistpll
ja
gs
cmp
or
xchg
xchg
stos
ficomps
aad
in
add
bound
mov
les
lods
sub
adc
xchg
adcl
push
jmp
ss
imul
sti
inc
jno
aaa
cmp
into
mov
data16
fcompl
sub
pop
push
adc
aad
xchg
gs
jge
fsubrs
jl
and
leave
jp
pop
cld
movsb
push
leave
lea
fcomi
or
push
shrl
sbb
pop
adc
inc
sub
repnz
push
mov
mov
sar
pop
insb
inc
xchg
jnp
test
xor
sbbb
shrl
and
xor
js
sub
mov
pop
push
xor
and
roll
pushf
dec
cmp
aaa
and
mov
or
push
xchg
mov
xor
add
xchg
jmp
or
mov
cmp
pop
das
and
rolb
shr
push
arpl
inc
push
add
push
push
xor
xrelease
sub
xor
push
aad
mov
incl
rclb
mov
cmpsl
jl
scas
ljmp
bound
out
xchg
mov
decl
scas
dec
jle
movsb
lods
inc
mov
mov
test
jnp
call
adc
rorb
je
popa
xor
or
xlat
hlt
jmp
push
int
pop
and
sub
repnz
dec
cmp
cmc
xchg
adc
cmc
fadds
xor
in
dec
fdivp
je
les
insb
shrb
add
mulb
testb
adc
and
mov
push
xchg
inc
outsl
or
xor
insl
divl
neg
test
cmp
fcomi
push
cmpl
add
pop
nop
jmp
xchg
into
clc
xchg
test
outsb
stos
xchg
cmp
outsb
or
mov
insb
sub
outsl
arpl
dec
and
cmpsb
add
outsl
xchg
in
or
hlt
dec
dec
push
mov
fisubrl
cli
outsb
inc
loop
sbb
push
inc
cli
cmp
scas
sbb
cmc
and
cmpsl
sub
and
jb
lock
pop
mov
scas
cli
sub
lods
mov
lahf
jne
mov
and
mov
or
cli
inc
fiaddl
ss
cmp
ror
popf
xchg
in
add
sti
sbb
xor
rol
ljmp
aaa
hlt
jno
lds
addb
mov
mov
jmp
lock
mov
dec
fdivrl
inc
pop
mov
and
dec
add
mov
pop
pop
nop
push
fstl
jns
nop
daa
cld
jp
sbb
add
xor
rol
in
mov
pusha
stos
gs
shll
mov
dec
mov
loop
scas
pusha
into
ret
leave
pop
fcmove
cmp
xor
rclb
outsl
push
cmp
cmpsl
jb
and
sbb
inc
mov
push
xchg
scas
mov
adc
or
outsl
or
aaa
sbb
cmp
cmp
sbb
cmp
jno
fidivs
xchg
mulb
ret
mov
xchg
stos
adc
sub
inc
je
add
in
mov
xchg
jg
pop
nop
test
mov
out
or
incb
stc
outsb
cmp
cmp
sub
adc
mov
cli
or
push
icebp
sbb
xchg
add
sub
loope
add
adc
insb
xor
mov
in
and
out
mov
sub
test
pop
cmp
mov
inc
mov
sbbl
fnstcw
cmc
and
in
or
clc
mov
dec
outsl
stos
lock
xchg
out
and
pushf
jbe
cmp
or
cmp
mov
loopne
je
scas
and
sarb
faddl
cmpsl
loopne
xlat
inc
adc
lods
dec
push
inc
sub
xchg
out
loopne
jecxz
jnp
pop
mov
jg
ffree
inc
outsl
pop
add
loope
pop
push
cmp
in
sub
sub
in
jnp
dec
call
jge
or
stos
or
pop
jbe
lds
xadd
pop
add
inc
shll
lret
mov
loope
ret
inc
and
pop
fdivr
push
pop
loop
pop
repnz
inc
les
jg
test
mov
sahf
ss
jne
ror
jne
aam
lods
loop
inc
jp
xchg
push
ss
mulb
mov
popa
dec
xchg
adc
sbb
jecxz
inc
dec
jne
fdivl
sub
andl
pop
in
sub
mov
nop
jmp
lahf
push
scas
jecxz
dec
mov
ret
sti
fldenv
icebp
adc
call
add
jecxz
and
jmp
xchg
sahf
cmp
ss
pop
pop
ldmxcsr
jle
inc
sti
mov
jg
mov
add
in
inc
mov
jecxz
loop
sbb
sub
mov
push
incl
dec
test
sub
in
lcall
in
xchg
cmp
push
pop
mov
mov
xlat
sbb
push
insl
aad
jnp
pop
subb
in
sbb
stos
jno
aad
xor
orl
in
dec
stos
mov
mov
stos
jl
lret
imul
push
ljmp
mov
out
imul
cli
imul
adc
push
subb
jo
adc
pushf
les
out
fstpl
sar
sbb
int
outsl
aas
sbb
inc
repnz
pop
repz
es
icebp
pop
out
hlt
dec
xchg
inc
push
pop
stc
sub
mov
push
adc
shrb
fs
scas
sub
insb
adc
rcl
mov
sub
cmp
rcrb
push
repnz
cmp
jo
dec
mov
ficoms
call
rcr
in
test
lds
push
inc
sbb
pushf
sbb
test
and
call
push
cmp
xchg
movsb
test
dec
jo
cmp
rclb
shr
lcall
push
out
dec
jmp
jmp
cmpsl
pushf
lcall
mov
aas
inc
mov
add
jmp
hlt
shlb
mov
jmp
inc
ljmp
lcall
lret
ljmp
ljmp
and
mov
fistps
test
rolb
dec
dec
and
movsl
add
mov
lock
push
add
shr
cltd
sahf
and
mov
jecxz
adc
and
inc
sub
xorb
pop
xchg
pusha
mov
in
nop
mov
add
test
fdivp
shll
mov
and
mov
gs
in
push
jo
lods
sub
cmp
fistps
pop
jne
in
in
xchg
and
ret
iret
sub
sbb
xchg
cwtl
jmp
imulb
pushf
adc
icebp
xor
ja
mov
outsb
xchg
movsb
imul
stos
adc
pop
mov
orb
cmpl
add
cltd
cmc
add
test
xor
insb
fsubrl
lea
jne
cld
xor
rcr
lea
out
stos
pop
sbb
lods
lods
add
jg
test
out
pop
inc
arpl
cmp
sarb
loope
mov
movsl
or
fistpl
enter
push
inc
test
push
mov
lock
call
mov
xchg
push
enter
sub
ja
inc
decl
test
xchg
xlat
xchg
mov
push
xchg
loope
cli
mov
adc
or
push
ss
xchg
dec
cmpsb
cld
adc
cmp
icebp
xchg
xor
mov
les
in
pop
aam
test
inc
nop
cli
xchg
add
bnd
dec
mov
sub
test
jmp
inc
mov
and
pop
push
pop
mov
fstl
repnz
sahf
pop
cwtl
sbb
sahf
fiaddl
cld
pop
add
add
or
dec
sub
daa
cmp
dec
cmp
dec
jecxz
and
pop
cmp
mov
lds
cltd
adc
inc
stos
pop
std
jo
push
stos
mov
call
and
adc
adc
add
sbb
rolb
andb
cmp
movsb
and
adc
in
mov
cmp
sbb
ret
xor
sub
xorl
jmp
pusha
mov
nop
pop
push
stc
add
imul
fidivrl
push
out
fsubr
pusha
stc
les
jbe
ficoms
pop
jbe
push
into
out
xlat
and
aad
or
dec
fldcw
cmp
pop
dec
mov
pop
cmp
pop
nop
addr16
test
leave
imul
pushl
test
pop
cmp
cmc
mov
data16
movsb
movsb
pop
shrb
jecxz
cwtl
sahf
ret
fidivrl
pusha
movnti
dec
loope
and
jne
sub
mov
mov
pop
icebp
or
push
pop
fsubl
sbb
repnz
inc
sbb
xorl
mov
push
cmp
push
in
shrb
push
mov
push
xor
subl
inc
je
leave
sbb
push
mov
jne
sbb
push
es
loop
mov
arpl
mov
scas
jle
xor
shlb
pop
sahf
cmp
or
lcall
or
icebp
sbb
inc
push
cld
ret
sub
fnstenv
int
sub
nop
out
jp
imul
lods
sahf
or
rep
dec
inc
std
sbb
mov
xor
test
pop
insb
stc
add
outsb
push
mov
jg
or
push
sbb
inc
insb
int
js
lret
jmp
xor
push
and
inc
or
adc
jnp
repz
lods
xor
mov
scas
sbb
bound
add
loop
mov
cmpsb
comiss
in
jle
pop
or
fimull
popl
xlat
or
sbb
push
shlb
sahf
sbb
aad
cli
stos
sub
repz
dec
sub
int3
mov
insb
pop
sub
lret
sbb
cli
ret
sub
xchg
sbb
jo
test
dec
push
stc
popa
and
jmp
xorl
cmp
sbbl
call
xor
insb
mov
mov
add
mov
xor
and
mov
sub
insb
inc
sbb
mov
mov
add
push
dec
jmp
es
lcall
push
lea
fld
and
pop
mov
mov
pop
in
mov
push
xchg
cmpsl
adc
test
xacquire
nop
insb
mov
add
fsub
inc
insb
push
push
popf
adc
mov
stos
pushl
pop
mov
and
push
or
jbe
xor
mov
mov
enter
mov
movsb
add
and
pop
rcr
loop
pop
pop
cmp
adc
pop
xor
mov
pusha
xchg
pop
movsl
adc
dec
mov
aad
mov
pop
sti
pusha
sbb
push
xor
add
add
pop
std
jl
push
and
pop
add
pop
push
test
push
repnz
xchg
pop
popf
mov
mov
lcall
data16
dec
sbbl
dec
xor
ret
or
faddl
pop
mov
iret
cmp
jecxz
out
popa
jmp
jp
adc
cmp
stos
fisubs
insb
add
add
mov
fdivl
jecxz
movb
or
adc
fsubl
pop
test
clc
ficoml
fstl
mov
jns
cs
add
in
imul
dec
imul
dec
jle
loopne
adc
mov
jo
or
insl
test
lahf
add
inc
pop
jge
imul
ret
and
push
push
push
mov
pop
out
pop
fsubrl
jecxz
int3
mov
jb
out
mov
aas
add
les
jbe
fidivl
mov
rorb
int
out
sub
imul
xchg
mov
add
add
xchg
lret
add
repnz
arpl
or
mov
cwtl
call
outsl
add
jnp
fisttpll
xor
fisubrl
pusha
rcrb
add
add
add
imul
icebp
and
inc
fldt
aas
test
cld
mov
push
sub
sbb
cmpb
lock
mov
mov
add
push
jge
and
stc
and
dec
and
mov
movl
and
mov
lahf
fistpl
jg
sti
inc
dec
pop
test
nop
imul
sub
lea
pop
mov
test
mov
mov
sub
pop
sbb
push
jle
iret
mov
mov
sub
sti
mov
mov
mov
and
and
adc
xchg
ret
pop
mov
push
cmp
mov
add
pushf
pop
lock
shl
add
mov
div
adc
rol
jb
push
bound
sbb
xchg
push
ds
adc
push
pop
cmp
mov
mov
mov
xchg
and
xor
mov
and
add
adc
xor
cwtl
cmp
jne
cmp
ret
xor
add
adc
mov
mov
hlt
fidivs
enter
mov
or
sub
test
or
pop
or
jne
pop
mov
mov
pop
xchg
pop
pop
mov
cmp
xor
or
shlb
popf
in
add
es
sbb
push
or
sub
imul
pop
pop
out
ficompl
movsl
jle
aad
sahf
loop
mov
pop
adc
sub
mov
movsl
data16
insb
testb
ds
inc
jne
cmpsb
imul
or
outsb
dec
xchg
mov
nop
fsubl
pop
ss
pop
adc
test
test
dec
dec
sti
dec
mov
mov
sbb
pop
movsl
add
jmp
xor
mov
push
fimull
add
xchg
jne
sbb
add
mov
mov
and
movsl
aaa
sti
push
movsl
movsb
ss
fcoml
and
loope
push
pop
dec
aaa
jb
lahf
daa
in
in
ror
adc
rcl
js
push
in
pop
add
jo
mov
fs
cld
add
mov
dec
sarb
hlt
xor
jb
xchg
loop
loope
inc
mov
mov
icebp
outsl
movq
adcb
adc
aad
jns
ljmp
jnp
inc
loopne
and
pop
lret
inc
jno
dec
test
mov
xadd
jl
fidivs
adc
xor
sub
fisubs
rsqrtps
adc
int3
xchg
nop
pop
movsb
ljmp
cld
jno
lds
inc
es
push
js
fidivs
ss
sub
fidivrs
dec
push
fcomip
mov
adc
insb
dec
jo
nop
movsl
repnz
push
mov
mov
adc
cmp
or
adc
adc
inc
or
push
iret
and
dec
cmp
in
push
xlat
pop
sub
cmpsb
cld
jge
sub
in
jl
popf
jge
sub
xchg
enter
push
push
cli
aad
xchg
sub
inc
push
dec
in
jne
pop
lea
sub
negl
mov
repnz
cmp
jecxz
sub
out
cltd
and
adc
bound
pop
es
push
dec
nop
push
adc
arpl
adc
and
cmp
sub
mov
adc
clc
outsl
adc
popf
and
outsb
adc
xor
mov
or
ja
dec
icebp
jae
int
lods
ret
aad
push
ja
or
rcrb
out
repnz
in
xor
lret
fwait
push
push
or
ficoms
and
jg
and
mov
pop
cwtl
icebp
cld
rorl
call
sbb
adc
int3
push
divl
popf
pop
pop
fsub
cmp
or
ret
mov
test
mov
dec
in
mov
out
inc
stos
add
cmc
pusha
ss
inc
mov
ja
push
out
ret
jno
in
mov
adc
mov
popa
or
pop
xchg
adc
and
push
xchg
cmp
push
aas
dec
out
bound
icebp
xor
mov
sarl
mov
das
cld
lods
movsb
mov
movsb
int3
mov
mov
shlb
out
lock
jl
aad
testb
pop
xor
in
lods
add
dec
mov
in
lret
stc
push
mov
mov
aaa
sarb
xor
xchg
test
fimuls
jae
pop
in
cli
sbb
je
pusha
dec
insb
mov
loop
sbb
or
shlb
adc
rorb
mov
jp
int3
mov
adc
push
lea
cld
gs
jg
enter
push
dec
sub
jae
xchg
dec
xor
xor
lock
cmp
adc
js
push
int
push
int3
cmp
shl
jp
adc
mov
mov
mov
dec
fwait
popa
loopne
mov
sbb
test
cmp
adc
push
test
or
dec
add
add
or
leave
xor
dec
loopne
pushf
or
xor
and
xchg
hlt
adc
shll
add
jbe
xchg
sti
js
into
adc
pushf
sub
enter
sbb
xlat
or
js
pop
sbb
sbb
pop
jmp
and
pushf
or
mov
cmp
ljmp
mov
test
fisubrs
in
insb
std
and
and
rcll
dec
in
pop
jbe
mov
xlat
aam
int
mov
cltd
dec
add
sub
inc
adc
popa
hlt
sbb
push
ljmp
ds
mov
call
nop
sti
aad
jge
das
add
mov
ss
mov
sbb
lahf
inc
jl
jmp
not
or
adc
loop
test
mov
add
outsl
mov
rcll
mov
mov
fst
mov
or
out
cmp
xchg
adc
test
inc
lock
mov
sub
and
les
push
push
dec
hlt
inc
sub
lods
cmp
cmc
add
dec
xchg
sti
xor
clc
or
push
cmp
sub
popa
lock
jbe
iret
movl
mov
mov
nop
mov
dec
shrb
hlt
lods
push
sub
pop
cmp
ja
jne
sbb
ss
pop
inc
hlt
lds
mov
sub
sbb
push
pop
mov
ficoms
or
addr16
and
lods
push
ljmp
push
jecxz
or
dec
sub
mov
or
int3
xor
dec
bswap
push
mov
push
or
inc
repz
insb
lock
adc
ljmp
adc
push
cmp
repz
push
insb
flds
call
hlt
sbb
inc
test
adc
or
outsl
or
dec
push
shrb
call
pushf
lods
pop
inc
in
sub
repz
sbb
mov
mov
sbb
add
inc
inc
aas
shl
add
je
sub
iret
out
lahf
outsl
repz
inc
sbb
les
fmulp
adc
lret
aad
adc
push
lret
xchg
lret
pop
clc
add
nop
and
add
stos
mov
out
dec
inc
rolb
sbb
inc
sbb
les
pop
jecxz
sub
pop
es
fildl
mov
mov
or
xor
or
daa
or
fwait
adc
inc
out
xor
adc
rolb
sub
inc
hlt
fldt
or
push
aaa
pop
adc
fdivrl
popa
push
fisubrs
xchg
or
fcomi
add
dec
and
mov
call
je
int3
repz
ds
sub
sbb
lret
sbb
loop
add
push
adc
mov
or
les
jae
lret
icebp
xchg
stc
and
inc
mov
dec
mov
mov
lahf
or
adc
dec
jo
jne
adc
or
mov
loope
jmp
xor
pop
push
gs
mov
add
inc
inc
mov
adc
or
push
addb
or
ss
imul
mov
daa
int3
cmp
in
mov
pop
hlt
scas
fsubs
or
bound
cmp
xchg
aad
and
adc
pushf
lds
ret
dec
xchg
into
ret
lods
loop
xchg
std
mov
ret
int3
mov
mov
push
mov
xchg
adc
cmp
jmp
shlb
test
outsb
mov
negl
sarl
aaa
dec
mov
jp
stos
adc
dec
insb
testb
or
or
lahf
int3
pop
in
cmp
dec
int3
xchg
rcrb
into
mov
push
leave
icebp
mov
out
in
sbb
pop
lahf
sbb
dec
sbb
sub
jmp
iret
mov
repnz
in
mov
inc
cmp
mov
outsb
adc
pop
repnz
sbb
push
xchg
mov
xlat
pop
fnstcw
adc
cmp
pop
xor
ret
sub
push
push
or
jno
lahf
cli
in
add
and
jmp
les
in
cmp
mov
inc
or
outsb
lahf
add
and
mov
jo
mov
xor
adc
mov
nop
xor
pop
rcrb
mov
jecxz
or
xchg
pop
mov
ss
stos
ret
xor
lods
mov
mov
dec
mov
or
call
adc
dec
into
cli
loopne
or
or
push
lea
and
add
pmulhuw
lock
push
in
inc
adc
jg
lock
mov
pushf
lfs
shll
mov
mov
test
es
int3
dec
es
add
mov
mov
lea
xchg
fiaddl
jae
add
int
adc
dec
xor
sbb
int3
dec
leave
jp
add
fcmovu
fdivl
dec
call
ffreep
add
xor
inc
mov
ret
repnz
call
adc
daa
addr16
cld
jl
int3
ficoml
sub
rcr
and
insb
adc
add
fsubp
scas
into
or
repnz
xchg
mov
push
nop
add
int
stos
pop
adc
fisubs
adc
pop
or
add
xchg
mov
out
xor
mov
sbb
push
adc
inc
sub
loopne
fistl
push
sbb
fucomip
in
pop
nopl
pop
xor
daa
repz
xlat
sub
pop
lret
imul
xor
mov
mov
loope
mov
add
sbb
or
jne
lret
out
pop
cltd
call
push
sub
adc
out
ljmp
rorb
pop
pusha
test
testl
sbb
xchg
fs
pop
ficoms
les
lock
in
xchg
mov
mov
sbb
stos
xor
mov
in
in
fdivrs
fwait
adc
nop
pop
cmp
adc
and
sbb
lret
loop
ffree
sbb
mov
mov
add
cmp
imul
mov
jecxz
bound
call
add
sub
repz
cld
sbb
int3
push
or
or
push
inc
dec
shll
scas
aam
xchg
pusha
in
aam
dec
dec
inc
or
add
adc
jle
arpl
lea
mov
out
xchg
lods
or
dec
lock
cltd
jnp
test
out
clc
loope
loope
cmp
int3
mov
adc
dec
and
sub
jg
in
jo
in
aam
xchg
mov
fiadds
ja
fistl
sub
or
and
out
adc
daa
sub
daa
dec
mov
test
in
jp
cmpb
test
add
lret
adc
adc
lahf
sbb
cld
into
xor
add
mov
nop
lahf
push
sub
repnz
jb
test
repnz
mov
cmp
mov
lods
push
mov
cmp
xor
pop
mov
jnp
mov
sub
xchg
loopne
in
xchg
hlt
cmp
or
fcmovu
push
testb
clc
lahf
jl
loope
mov
push
mov
dec
push
fwait
cld
mov
rolb
aam
scas
repz
mov
lret
xchg
loop
mov
cli
mov
dec
out
cmp
cmp
sbb
sub
inc
pop
jns,pt
sbb
pop
cld
dec
jne
push
roll
rol
adc
adc
ds
and
sub
pop
jmp
cld
mov
push
push
mov
mov
jecxz
add
js
repnz
imul
or
jnp
jmp
push
sub
adc
dec
lds
or
cli
or
cmpl
insb
adc
fcoms
roll
push
loope
or
cmp
out
sub
out
mov
loop
add
decl
out
mov
add
in
loopne
cmp
push
inc
xchg
in
cld
and
xchg
je
sub
ljmp
push
pop
sbb
xchg
lock
sbb
or
movsl
hlt
sti
stc
pop
mov
ret
test
push
inc
sub
insl
pop
or
dec
ret
push
mov
repz
mov
pop
add
iret
rclb
push
jmp
mov
lret
jmp
mov
adc
ds
loopne
mov
leave
push
mov
ret
cld
ret
rcrl
pop
orb
sti
test
mov
mov
fdivs
xchg
sub
and
jl
scas
mov
in
jae
adc
or
pushf
mov
mov
and
add
jne
sub
ret
add
icebp
pop
cmp
xchg
rorl
push
adc
lock
in
lret
scas
pushf
jecxz
dec
push
ljmp
out
data16
gs
jnp
sub
sbb
xchg
push
xor
push
shrl
mov
push
jno
fnstsw
or
inc
hlt
adc
gs
jecxz
mov
iret
stc
mov
imul
push
into
mov
in
pop
mov
scas
jle
popf
ss
mov
add
inc
daa
push
orb
adc
and
jp
out
fsts
rcrl
and
sub
push
enter
shr
fisubs
in
cmpsb
insb
mov
inc
xor
fistpll
arpl
adc
addl
out
sbb
adc
push
fnstcw
sub
add
clc
xorl
or
cmp
out
jae
pop
mov
xchg
in
push
or
pop
xchg
add
or
sub
push
out
lahf
scas
in
imul
jge
rclb
sahf
lea
mov
scas
mov
dec
repz
out
loopne
in
jo
or
data16
adc
push
fcmovbe
cld
sub
or
out
and
sub
cltd
dec
sbb
lock
add
movsb
pop
rcrb
addb
xchg
fs
adc
in
adc
lods
popf
jno
repnz
out
divl
out
icebp
shrl
mov
sbb
mov
or
lock
arpl
mov
adc
add
in
not
adc
sbb
or
push
dec
mov
inc
repz
adc
rclb
fs
jae
mov
xlat
lret
mov
xchg
mov
mov
sub
jns
jl
mov
lods
mov
jne
pop
jmp
jp
fdivl
pusha
loope
mov
adc
dec
mov
mov
push
dec
xchg
add
mov
call
sub
inc
and
mov
mov
pop
icebp
and
sub
or
stc
xchg
mov
xchg
pop
dec
xor
adc
in
xchg
xor
adc
outsl
scas
aam
jecxz
lret
and
out
adc
push
cs
adc
inc
mov
invd
sub
adc
enter
es
jmp
jg
hlt
rolb
rolb
add
rcl
test
dec
jmp
sbb
pop
pop
mov
sti
inc
pop
cli
jmp
xchg
mov
stc
dec
lods
in
test
dec
xchg
orl
rolb
dec
sbb
jecxz
inc
fdivl
dec
mov
pop
leave
daa
xchg
mov
or
mov
ficoms
adc
mov
mov
idivb
jb
in
lcall
int3
fnstcw
mov
pushl
cmpsl
shll
sub
ret
fidivs
and
sahf
xchg
inc
xor
jge
jge
push
jecxz
push
xchg
sub
sbb
adc
iret
fimuls
nop
sbb
fisubrs
adc
cmp
out
mov
js
outsl
and
and
mov
add
iret
lds
pusha
mov
rol
xor
mov
xchg
aaa
push
mov
adc
in
mov
xlat
jg
nop
cmp
aaa
push
mov
in
in
inc
test
mov
adc
adc
inc
ret
inc
mov
xchg
adc
dec
push
cmpb
adc
inc
dec
dec
aad
adcb
out
mov
fs
xchg
pushf
icebp
cmpsb
mov
add
mov
or
mov
jo
and
enter
dec
add
add
lods
sbb
add
xor
or
or
fstpl
stos
or
popl
cmp
out
enter
add
or
cli
ja
dec
sub
dec
adc
mov
cmpsb
cmp
mov
and
xchg
cs
mov
xor
pop
repnz
out
out
push
int3
mov
test
aad
int3
repnz
sub
lcall
and
cmp
xchg
popf
push
les
bnd
loop
mov
mov
xchg
mov
popl
inc
pop
shr
lods
adc
ret
imul
lahf
inc
push
push
sbb
sbb
push
jg
or
out
enter
nop
test
scas
int
push
fcmovnbe
imull
lds
icebp
hlt
mov
mov
xor
add
lahf
jo
push
or
adc
ret
adc
xor
rorb
or
scas
xor
scas
sbb
sbb
xor
xor
or
jb
repz
das
mov
std
push
outsl
ret
orb
ret
mov
addl
mov
add
stos
push
mov
mov
mov
lds
jp
int
and
xlat
mov
or
sbb
clc
aaa
repnz
xchg
icebp
xchg
pop
sbb
sbb
imul
std
xchg
mov
adc
idivl
lods
int
or
and
jp
fcmovnb
push
adc
pop
and
pop
jecxz
out
mov
adc
mov
shlb
lahf
push
outsl
pop
lods
js
andb
jmp
push
cmp
arpl
clc
push
xchg
andnps
test
pusha
push
fcomps
add
loope
stc
push
lret
andb
in
rcrb
jp
push
xor
adc
sbb
in
cvtdq2ps
dec
hlt
nopl
ss
ficoml
xchg
fimull
ljmp
push
out
fucom
mov
pop
mov
fdivrp
jo
sbb
fnstsw
hlt
fmul
add
xor
fcmovu
mov
sti
inc
sbb
sarb
dec
add
test
into
add
sahf
adc
inc
nop
jno
jp
pop
out
jno
mov
or
add
mov
adc
xor
dec
stos
or
ja
aam
add
dec
adc
call
cmpb
adc
jmp
mov
or
adc
dec
fistpl
in
rorb
cwtl
jmp
mov
iret
mov
mov
ret
pop
icebp
add
or
hlt
sub
cli
popa
bound
rcll
and
loopne
adc
ljmp
in
or
mov
hlt
add
mov
add
adc
in
loop
lret
and
outsl
hlt
mov
fmuls
dec
prefetchwt1
or
mov
inc
inc
pop
adc
les
clc
test
pushf
lret
cld
xor
xchg
shl
dec
cmp
movsb
adc
push
add
repz
mov
nop
pushf
data16
lods
adcb
sbb
xchg
pop
push
outsb
mov
in
loopne
xchg
cmp
xchg
inc
sub
xor
ficompl
or
not
pop
comiss
das
lods
push
imul
out
inc
xor
adc
rorb
sub
and
dec
or
cmp
sti
popf
jnp
xchg
dec
sub
into
push
das
xchg
add
xchg
jae
pop
or
adc
shlb
test
aas
cwtl
xor
push
cmp
mov
dec
or
inc
mov
mov
jno
xchg
or
jbe
outsb
std
imul
into
fsts
xor
loope
add
pop
add
stc
push
lahf
enter
int3
mov
adc
aam
clc
dec
int3
mov
xchg
fistpl
mov
or
xchg
mov
push
or
mov
pushf
push
xchg
sti
rclb
rep
aad
shlb
stos
xchg
stos
sub
rorb
push
or
out
jno
push
xchg
stos
repnz
jmp
sarb
pop
xchg
inc
xchg
xor
jnp
push
shrl
or
daa
pop
pop
lahf
decl
sub
and
sbbb
push
jae
out
popf
leave
adc
mov
inc
mov
mov
push
jbe
xchg
je,pt
or
inc
mov
xor
and
cmp
movsl
mov
push
test
outsb
fistpl
lahf
xchg
xor
insb
in
sub
cmc
inc
andb
xchg
dec
rorl
or
mov
aad
inc
xchg
xchg
popa
test
add
ret
in
js
adc
mov
addl
mov
fucom
repnz
addb
mov
or
into
cmp
mov
cmp
jmp
fwait
mov
test
jae
push
in
imul
or
pushf
shr
aad
jbe
cmp
lods
xor
or
inc
xchg
cmp
mov
dec
arpl
xor
jp
lds
pop
movsl
jl
xchg
cli
hlt
or
scas
sbb
test
aam
out
out
hlt
push
push
mov
add
fsincos
bound
adc
adc
ret
sbb
ret
movsl
xor
jae
mov
les
or
ss
push
sbb
pop
inc
movsl
add
mov
adc
out
inc
insb
lret
add
aaa
in
ss
data16
push
stc
dec
mov
adc
dec
or
lock
or
xor
test
add
mov
cmpsb
xorb
in
into
in
xchg
or
jae
shl
pop
dec
loope
sbb
mov
mov
in
shll
jne
inc
and
aam
push
xor
je
fildl
jmp
notl
lock
dec
pop
fstl
xchg
push
mov
mov
sbb
sub
inc
test
add
outsb
scas
addr16
jmp
jb
xchg
jae
cltd
add
lahf
out
scas
fimuls
repz
cmp
cmp
xchg
lock
dec
les
sbb
cmp
mov
push
jecxz
ror
mov
and
and
dec
outsl
cmp
stos
adc
pop
adc
xor
into
out
xor
sub
push
cmpl
roll
xor
mov
jns
jle
lea
into
test
shl
and
sub
test
sub
and
and
cmp
arpl
ljmp
lret
enter
sub
in
and
subb
add
dec
out
mov
mul
aam
add
dec
mov
imul
sbb
xor
sbb
add
or
inc
pop
sub
icebp
lock
lock
and
add
inc
mov
jl
inc
popf
rorb
xchg
repnz
xlat
add
fnop
jmp
inc
stc
push
out
add
sarb
jp
sbb
push
and
dec
jecxz
dec
in
adc
lahf
nopl
clc
sbb
jne
in
pop
ret
adc
adc
mov
mov
or
add
lods
adc
push
sub
add
cmp
fstpl
mov
xchg
jl
adc
push
sub
loop
sub
mov
and
frstor
push
not
arpl
out
sub
xlat
imul
lret
daa
cmpsb
jbe
dec
mov
clts
nop
xor
clc
stc
pop
testl
ret
fdivs
out
push
add
stc
pop
popf
cli
mov
sbb
mov
sti
or
adc
inc
add
jno
lret
lahf
or
mov
adc
gs
adc
adc
xchg
out
out
stos
or
repz
push
or
xorb
pop
les
pop
ljmp
mov
rclb
mov
out
push
sarl
xchg
lds
push
bound
add
adc
and
xchg
sbb
jecxz
int3
shrl
sub
pop
out
push
add
inc
sub
sub
fisttpl
sbb
cld
add
jg
pop
mov
mov
shlb
clc
jecxz
and
inc
cmp
xchg
nop
xchg
pop
ror
or
jb
mov
sbb
adc
aad
out
jne
cmp
insb
stos
mov
jmp
xchg
mov
pop
call
cmp
popf
dec
mov
jns
fdivrl
jae
jnp
ret
sbb
imul
in
push
inc
jg
jne
lahf
push
pop
cmpsb
mov
xchg
and
leave
or
aam
pop
mov
cmp
call
repz
mov
or
pop
add
dec
cmpsl
mov
dec
mov
pop
sub
lret
push
adc
add
fwait
gs
in
dec
nop
jge
or
repz
fldt
mov
leave
cld
or
dec
loop
mov
xor
lods
aam
xlat
clc
sub
ficompl
xor
jmp
mov
hlt
in
xor
adc
in
loop
xchg
test
adc
adc
ret
inc
adc
dec
addb
in
mov
mov
movsl
mov
std
mov
xorl
sub
xchg
jg
jg
repnz
adc
or
add
daa
adc
mov
xor
lods
jmp
xchg
xchg
add
cmc
loope
mov
mov
les
sbb
jmp
shrb
fsubr
enter
int
stc
loopne
out
shlb
or
mov
pusha
roll
inc
test
mov
mov
in
data16
xchg
sbb
and
xchg
loope
adc
xchg
cmp
mov
les
jl
xchg
sub
mov
push
adc
mov
cmp
out
mov
mov
aaa
fidivs
push
in
push
inc
sbb
cltd
pop
orl
sbb
icebp
mov
xor
jno
aad
adc
lods
pop
push
xor
sbb
sub
movsb
add
inc
add
cmp
add
push
inc
iret
xchg
out
sub
andl
lock
and
xchg
repz
cli
packuswb
xor
movsb
in
mov
or
xchg
adc
sbb
out
or
jmp
inc
add
mov
dec
int
into
test
add
lds
dec
pop
and
into
or
xchg
mov
clc
lahf
shlb
push
pop
mov
ret
aas
xor
inc
fisubs
xor
dec
rorb
or
cld
jmp
and
push
pushf
pop
loopne
add
fidivl
notl
addr16
test
sub
add
inc
mov
mov
ret
adc
hlt
adc
mov
xchg
shlb
fs
lea
xor
sub
add
scas
dec
xchg
cld
ret
sub
aam
mov
add
loope
inc
inc
push
ss
shrl
push
push
inc
dec
pop
mov
lods
sub
idivb
push
xor
add
xchg
dec
jae
push
or
xor
fcomp
cmp
test
les
int
sub
inc
push
test
mov
daa
mul
jb
hlt
xchg
dec
iret
arpl
shrl
adc
dec
jp
xchg
arpl
push
or
mov
sbb
dec
adc
sbbl
test
mov
fstl
shl
ret
adc
lret
pop
pminsw
push
push
add
pop
nop
aaa
jmp
loope
shr
add
or
mov
jl
sub
add
inc
jmp
inc
out
jmp
mov
inc
or
sbb
mov
jmp
mov
fcmovb
filds
pop
push
dec
out
jmp
adc
adc
movsl
push
add
or
movsl
lahf
sbb
repz
aam
adc
xchg
mov
xchg
add
dec
into
or
or
inc
dec
dec
mov
mov
sbb
add
clc
scas
out
ljmp
enter
jo
rclb
sub
lods
imul
fistpl
xlat
arpl
roll
js
out
push
cmp
sub
add
sti
sub
cmpsl
mov
cmpsl
fistpl
pop
sub
push
lret
pop
or
lock
jg
rorl
iret
mov
mov
adc
push
out
xor
pop
or
and
mov
mov
or
in
int
in
mov
ret
add
jae
or
mov
adc
call
xchg
or
in
add
push
call
loopne
data16
mov
clc
repnz
in
popf
mov
add
movsl
sar
ret
clc
xor
mov
adc
test
mov
mov
repnz
sbb
or
adc
test
mov
mov
push
add
rcll
test
mov
pop
dec
sub
jmp
roll
dec
pop
adc
push
scas
sti
mov
jl
sbb
in
out
adc
or
add
rcrl
cld
pop
scas
xchg
cmp
stc
shlb
nop
mov
inc
mov
dec
push
movsb
add
loopne
scas
or
repnz
or
scas
dec
hlt
addb
scas
test
adc
rolb
icebp
hlt
adc
int3
cld
sbb
mov
cmp
cmp
ret
adc
push
fs
fdivl
mov
hlt
into
xlat
cmp
xchg
lock
or
and
sti
xchg
xchg
sub
outsl
fadd
leave
mov
insb
or
mov
adc
adc
adc
fadd
ret
lret
mov
aam
mov
cwtl
pop
icebp
repz
cld
scas
xorb
popa
adc
sub
jnp
add
in
and
push
fs
jp
aam
mov
dec
lcall
or
pop
xchg
rcrl
cwtl
mov
addb
and
pop
xlat
andl
repz
mov
mov
lods
clc
add
pop
jb
adc
mov
stos
push
testb
mov
push
aad
lret
push
loope
or
test
mov
mov
add
cmp
or
movntq
daa
and
test
movsb
add
add
adc
adc
push
inc
sub
and
stc
lods
rcrb
in
sub
adc
or
sahf
mov
sub
or
adc
adc
xor
mov
adc
mov
nop
in
daa
or
push
test
rclb
dec
sub
xchg
dec
pop
aam
lret
in
sbb
jo
lea
cmova
ja
icebp
mov
pop
add
cmp
mov
inc
mov
test
into
test
int3
ljmp
sub
push
adc
enter
push
dec
jge
minps
lsl
jbe
mov
lods
dec
jecxz
xchg
call
sbb
nop
rcl
inc
mov
rol
loope
loope
iret
lds
jne
dec
stos
hlt
sub
ret
or
outsl
cmp
lret
movsl
ret
xchg
mov
fwait
rolb
mov
or
push
arpl
out
xchg
mov
mov
movsb
mov
xchg
push
adc
sahf
ret
mov
sbb
nop
leave
dec
push
xchg
dec
out
mov
adc
dec
sbb
sbb
mov
incl
scas
push
addr16
cmp
mov
mov
push
or
test
popl
add
dec
lret
test
enter
out
pop
add
sub
add
and
xchg
inc
or
add
xlat
mov
test
and
pop
test
aad
adc
jmp
xchg
inc
xor
mov
js
adc
loope
adc
pop
popf
stc
jae
in
into
mov
fwait
je
cmp
in
lahf
jmp
int3
sub
fsub
adc
hlt
and
hlt
jl
dec
scas
in
xchg
jne
adc
add
rorb
sbb
jne
test
addb
cmp
scas
lods
lcall
xchg
and
stos
out
dec
jg
add
xchg
clc
int3
int
rorl
sbb
sbb
icebp
scas
std
call
jmp
mov
shlb
inc
mov
mov
push
mov
adc
shlb
ret
and
in
add
xchg
imul
in
outsb
lret
push
push
pop
fbld
iret
or
xor
scas
hlt
jb
xorb
das
sbb
mov
and
fldl
insl
popf
call
cli
out
jnp
mov
push
add
cli
loope
adc
and
or
push
add
push
xchg
nop
cwtl
mov
int3
lock
xor
ds
mov
mov
adc
add
xlat
sub
adc
pop
adc
lods
adc
bound
adc
fisttpll
inc
sbb
fmull
andl
enter
stc
dec
cmpsl
sbb
mov
add
jle
repz
pop
mov
adc
add
outsl
jmp
nop
adc
into
mov
movsb
leave
fdivrl
out
mov
ljmp
rcll
subb
sbb
mov
movsl
cld
xor
inc
mov
push
inc
rclb
lods
adc
fcom
sub
adc
pop
int3
arpl
jecxz
dec
fildl
sub
xchg
fsubrs
pop
nop
repnz
push
movsb
pop
xchg
inc
xchg
icebp
xchg
and
or
mov
jge
ja
xlat
jmp
addr16
gs
shr
or
scas
inc
mov
push
test
ret
adc
test
enter
jbe
int
scas
adc
cmc
xlat
xchg
fisubs
into
movsb
dec
scas
hlt
movsl
jecxz
loope
ret
adc
inc
loope
mov
or
loope
pop
sbb
or
sbb
add
inc
into
lahf
mov
or
sub
rorl
cmp
rcrl
jnp
pusha
icebp
xchg
in
jbe
push
jle
inc
jp
mov
mov
insl
jae
ret
inc
repz
add
xor
jo
je
jbe
in
mov
sbb
nop
add
mov
xchg
mov
or
ljmp
mov
or
sub
or
xchg
inc
or
nop
data16
sti
fsubl
outsl
scas
jp
es
mov
lret
add
xchg
sub
xor
test
or
add
xor
lods
xchg
inc
cmp
jg
mov
aam
orb
mov
int3
sub
int3
push
lret
enter
rcll
inc
ret
lods
arpl
dec
repnz
adc
aas
lods
xchg
popl
shr
int3
xor
cmp
sub
cltd
rcrb
and
subl
jbe
inc
adc
jg
orl
sbb
sti
push
add
sbb
lea
push
cwtl
mov
ret
sub
xchg
mov
mov
add
in
dec
ss
mov
fstps
xor
cmp
sub
mov
xorl
ljmp
mov
lret
sub
mov
push
int3
cmp
lahf
sub
adc
adc
fisubrl
jp
movsb
fidivl
ds
cmp
cwtl
add
mov
cmp
mov
and
xchg
inc
sub
inc
stos
and
lods
or
pop
dec
stc
mov
or
into
rorb
xor
xchg
adc
int3
push
pop
mov
aam
sbb
out
lods
pop
loope
dec
push
sub
ret
rorl
repnz
lods
cmc
subl
mov
mov
sbb
mov
hlt
sub
jnp
icebp
jno
xchg
xchg
xchg
stos
ja
rorl
jns
cmp
movsb
fs
ret
or
xlat
mov
sbb
jp
xor
and
shl
sbb
sbb
addb
push
jg
adc
inc
or
jge
mov
clc
pop
sbb
in
xor
mov
sub
flds
pushf
mov
jae
sti
inc
push
int
es
inc
aad
cmpsb
lock
pop
fldl
aaa
ljmp
test
repnz
sarb
sbb
cmpsb
mov
aad
adc
mov
int3
pop
mov
and
jo
out
and
int3
pop
pusha
movsb
mov
scas
xchg
mov
test
test
inc
mov
sti
repz
mov
jmp
sbb
mov
or
push
sbb
add
mov
cwtl
out
mov
mov
mov
dec
call
mov
mov
mov
js
ljmp
xor
in
lahf
or
and
jle
jle
xchg
mov
test
mov
add
das
mov
and
sbb
nop
movsl
adc
sub
inc
into
sub
mov
icebp
adc
les
push
lret
lods
fstpt
or
pop
movsb
movsl
pushf
ja
mov
test
repz
je
movsb
dec
add
xor
and
mov
add
inc
icebp
fmul
push
or
addr16
mov
pop
mov
sub
into
pusha
jne
and
pop
push
or
mov
mov
fcoml
jecxz
add
cmp
divl
mov
popa
and
mov
xchg
dec
je
cmpsb
xor
in
jne
stos
clc
jl
js
cmp
into
dec
inc
inc
hlt
sub
insl
popa
push
jl
sarb
pop
and
idivl
xabort
or
xor
mov
dec
bound
or
lcall
sbb
xorb
scas
or
test
lret
xor
and
ja
cmp
or
popa
mov
outsb
push
setbe
mov
ret
or
inc
mov
add
outsl
wbinvd
mov
add
push
add
inc
andl
rcr
adc
lods
adcb
aam
and
mov
sub
jbe
add
push
xor
push
repz
inc
daa
fucom
call
cmpsb
sub
aad
mov
arpl
or
cld
mov
fnstcw
lret
dec
pop
push
fdivrl
pusha
jb
bnd
xchg
fstl
add
pop
imul
xor
push
xchg
je
int3
jne
xor
or
hlt
lods
pop
inc
push
mov
call
cmpl
rorl
or
popf
xor
lret
and
lcall
leave
cli
mov
xor
add
jne
push
pop
xchg
mov
mov
dec
stos
les
sub
pop
aaa
cmpsb
push
pusha
out
add
or
push
inc
jbe
nop
or
gs
add
xchg
js
mov
pushf
adc
jecxz
mov
add
icebp
adc
addl
jl
dec
add
arpl
or
jp
cmc
xchg
outsl
lret
push
or
or
scas
test
movsb
adc
andb
aam
xchg
sub
add
fs
or
xor
mov
jmp
and
rcl
js
lea
and
adc
jns
and
in
jo
xchg
cmp
loop
sbb
xchg
add
add
iret
adc
aam
add
sub
test
push
or
or
add
outsb
push
add
pop
add
adc
aad
xor
call
cmp
nop
sahf
mov
add
adc
cmpl
or
rorb
push
add
rorl
cli
dec
lahf
daa
mov
loop
fst
mov
add
sahf
xchg
call
iret
mov
cmp
fnstenv
test
and
aad
call
or
jne
mov
aam
push
ret
dec
fidivl
and
add
sbb
out
xchg
push
cs
fisubrl
push
int
push
xchg
sbb
das
push
push
dec
and
loopne
fimull
fdivrp
adc
dec
sbb
out
push
cmp
xlat
jns
out
in
xlat
add
test
inc
mov
cmovno
in
jmp
push
loopne
cmp
jmp
xor
and
and
add
sub
dec
jo
hlt
mov
fsub
pushf
sahf
inc
adc
fdiv
and
call
gs
loop
xchg
sbb
add
sub
dec
and
sbb
add
mov
or
or
lahf
mov
movsb
sub
sbbl
std
mov
repnz
adc
cmp
ret
dec
mov
sub
fsub
ret
fisttpll
push
and
push
shr
mov
icebp
fdivp
popf
ret
push
jb
mov
sahf
lods
push
into
mov
jne
and
repz
mov
rcll
adc
adc
cmpsb
add
dec
jp
mov
mov
mov
push
add
rorb
inc
inc
cmp
dec
in
add
sbbl
dec
movsl
xor
push
mov
in
int
and
rolb
lret
mov
or
test
add
lock
adc
dec
cmc
adc
jle
scas
sbb
xchg
add
push
jns
nop
std
gs
ret
addr16
and
sub
sbbl
inc
adc
pop
push
inc
fimuls
sti
jp
lret
data16
mov
icebp
aad
add
arpl
sbb
icebp
mov
repz
pushf
stc
or
mov
sbb
xchg
clc
sti
xchg
and
mov
adc
push
mov
in
add
mov
in
leave
lcall
nop
sub
ficomps
add
xchg
or
int3
xchg
pushf
addr16
ljmp
lret
pop
dec
out
cmp
jp
add
shlb
adc
neg
fnstcw
test
cmp
sti
dec
and
cmp
pop
rcll
inc
jmp
cmp
arpl
orl
add
cmp
movsl
pop
ss
cmp
inc
push
mov
paddb
mov
cmp
repnz
adc
les
test
sbb
pop
notl
clc
daa
outsl
mov
fstl
jae
jl
ljmp
jb
inc
call
pop
fs
mov
pusha
inc
push
outsl
leave
xor
inc
ret
cmp
mov
or
mov
sub
cmpsl
and
out
call
ret
adc
jbe
sarl
sbb
aad
stos
flds
pop
dec
fisubrs
mov
inc
jmp
insb
stos
jnp
test
jge
adc
add
pop
into
in
jo
enter
incl
xor
shr
mov
adc
dec
call
sub
xchg
and
mov
repnz
xchg
or
in
adc
in
dec
je
or
lahf
test
cmp
sub
out
sbb
movl
jno
push
negb
push
inc
inc
insb
hlt
or
mov
nop
aam
imul
stos
cmp
addr16
sbb
cmp
pop
fwait
jle
adc
divl
rolb
loop
popa
mov
mov
mov
jl
push
sub
int3
sbb
add
mov
sbb
into
loope
div
mov
loop
jl
push
sub
sbb
call
push
add
or
xor
ret
add
or
add
adc
jecxz
push
movsl
mov
or
loope
sbb
add
fldenv
ret
adc
incb
data16
xchg
mov
xchg
push
pusha
sbb
add
shlb
ret
lock
setbe
pusha
inc
sub
jmp
add
jbe
add
pusha
pop
jne
in
out
adcb
shll
mov
leave
ret
push
sbb
mov
mov
shl
sub
movsb
push
lret
imul
pop
sub
popa
adc
js
nop
lahf
sbb
sub
into
mov
jl
jecxz
out
aam
mov
or
lret
data16
add
adc
jecxz
sbb
xor
and
sti
cmp
or
stc
xchg
pop
cmp
xor
je
mov
test
int3
pusha
xchg
jg
mov
mov
ss
mov
ds
outsl
shll
int
in
jge
pop
or
outsl
adc
lods
fs
or
icebp
xor
rolb
aad
popf
pop
jle
loopne
xchg
add
es
test
mov
cmp
cmp
or
lock
xchg
mov
cmp
push
rorl
push
pushf
mov
ret
icebp
lods
sahf
dec
dec
insl
cmp
das
mov
mov
and
lcall
or
inc
and
xchg
lods
inc
jbe
or
mov
push
xchg
in
pop
push
ljmp
sbb
lret
add
repnz
fldl
movsb
cmp
push
mov
mov
ret
shl
scas
push
adc
repz
mov
inc
add
mov
mov
or
mov
flds
xchg
aaa
int
fwait
into
iret
stos
dec
incl
jne
cld
loop
inc
mov
mov
test
add
adc
lods
faddp
loop
dec
outsl
daa
sahf
ret
add
shlb
scas
mov
push
shlb
jg
mov
mov
int3
dec
push
or
jmp
fstl
jae
nop
jnp
repz
sub
cld
insb
cltd
lret
outsb
adc
sub
pop
insl
dec
lock
and
movsb
inc
ds
add
inc
push
mov
mov
adc
aam
in
or
les
repnz
decl
jae
mov
mov
adc
or
cmp
dec
inc
jmp
les
shlb
inc
ljmp
mov
popa
aaa
cmpsb
inc
xchg
sbbb
je,pt
push
adc
ss
push
in
jbe
push
out
mov
xchg
mov
repz
movsb
mov
mov
or
add
lock
and
stos
adc
ss
out
cli
leave
popa
add
lea
mov
sub
jle
pop
popf
jbe
in
sub
cmpsl
cltd
pop
sbb
or
leave
add
xor
cmpsb
dec
dec
add
shrl
shlb
pop
pop
ret
loop
inc
in
outsb
inc
add
lock
mov
push
inc
nop
and
int
mov
out
jns
out
shrb
cmp
fcmovnb
push
bound
pop
sub
jmp
adc
pusha
mov
lds
fildl
push
push
ret
jge
popf
shlb
mov
jg
push
mov
sub
add
jne
pop
cmc
fwait
dec
adc
mov
scas
cmpsb
xchg
popa
orb
mov
icebp
std
dec
add
mov
sbb
ret
andb
mov
xor
in
stos
cld
imul
fimull
insl
mov
inc
dec
jmp
fimuls
stos
leave
pop
add
loop
push
mulb
or
pop
ret
aam
push
nop
sbb
icebp
movsb
adc
sahf
jl
jne
in
scas
stos
iret
xor
and
cmp
int3
movsb
imul
stos
sbb
into
inc
xchg
gs
inc
pushf
ljmp
jecxz
push
push
push
push
inc
pop
js
push
push
inc
xchg
or
shll
out
jp
and
insb
push
xchg
sbb
jmp
cmp
sbb
add
jnp
pop
scas
adc
adc
leave
mov
ja
mov
pop
pop
push
in
and
je
pop
pop
bound
dec
imul
or
repnz
ror
hlt
mov
lea
adc
cmpsl
lahf
test
sub
dec
xor
mov
jp
rcl
pop
add
mov
mov
or
pop
test
sub
fdivrs
mov
dec
aad
pop
shlb
push
cwtl
data16
mov
hlt
or
movsb
push
mov
push
push
push
mov
imul
lea
call
clc
mov
jae
in
xchg
push
add
jl
mov
dec
mov
mov
pop
and
mov
add
mov
mov
leave
movhps
sbb
cmp
sbb
sbb
pop
xlat
sbb
jb
fwait
inc
mov
xchg
arpl
lods
adc
dec
xchg
int
ficompl
les
mov
cwtl
dec
inc
test
pop
testl
and
jb
ffreep
mov
cli
adc
addr16
test
add
cwtl
stos
inc
inc
xor
sbb
rorl
movsl
mov
ret
inc
cmp
stc
and
andb
les
add
or
fadd
adc
dec
mov
adc
mov
lret
mov
in
xchg
lods
add
sbb
xor
in
mov
push
shl
mov
icebp
cld
cwtl
scas
rcll
ljmp
dec
out
iret
jecxz
adc
sbb
lea
adc
sub
adc
pop
mov
stc
lret
jecxz
dec
scas
add
sub
or
repnz
fcmove
insl
pop
mov
shlb
popa
jp
jmp
lods
xchg
jecxz
or
add
fisubrs
xor
sub
scas
test
mov
inc
out
fcomp
fcoms
popf
and
andl
pop
fnstsw
adc
cmpsb
add
sub
xor
sbb
jmp
pop
imul
aam
push
sub
sbb
je
stos
add
movsb
adc
push
jns
sub
cs
mov
xchg
loope
stos
or
or
sbb
jo
hlt
adc
sbb
pop
fsub
popf
cmp
xchg
pop
imul
xchg
sub
push
lock
enter
outsl
adc
fucomi
out
push
jl
fadd
jge
or
dec
mov
or
push
dec
sub
fdivrs
dec
lahf
incl
lock
repz
add
nop
shrb
xor
cwtl
xchg
push
sub
jne
xor
push
bnd
rolb
dec
leave
add
les
out
adc
ret
push
shr
scas
movsb
sbb
movsl
mov
ret
into
adcb
sbb
mov
data16
ror
lahf
call
mov
dec
dec
xchg
test
lret
fs
push
ljmp
xorl
call
js
dec
in
xchg
or
imul
fld1
push
push
mov
dec
test
xor
aas
iret
in
test
inc
bound
dec
ret
test
repnz
test
and
repnz
lock
jae
movsb
fcmovnu
dec
out
jle
mov
jle
or
mov
repz
imul
ja
rclb
in
xchg
jno
call
push
std
cmpb
pop
fisubs
ret
popf
pop
cwtl
xor
mov
imul
orl
pop
dec
xchg
push
dec
and
lock
push
jge
lods
sbbb
ret
loopne
test
sbb
xor
inc
adc
aam
sub
inc
sub
adc
std
lahf
repnz
fbld
push
lret
add
or
lock
sar
add
xchg
or
aam
or
ss
sbb
addr16
mov
cld
mov
cmp
in
ret
add
push
fwait
clc
sub
mov
add
mov
popf
mov
add
jne
xor
add
out
push
push
je
pushl
data16
and
add
sbb
insb
inc
mov
in
cltd
add
and
or
rolb
into
rcrb
clc
js
jl
cmp
call
cmp
add
test
sti
divl
in
lods
add
lods
sub
scas
leave
lret
jnp
in
mov
loopne
shl
icebp
cmpsl
cld
test
sbb
les
or
movsb
fnsave
mov
push
sub
pop
in
mov
pop
jbe
rorb
add
xchg
out
ret
add
jl
addr16
or
arpl
xor
lock
add
ds
add
sub
sbb
add
sbb
out
int3
out
fmul
dec
lds
pop
add
lds
pop
xchg
mov
enter
movsb
test
or
or
shll
dec
and
rorb
or
mov
adc
mov
pop
aad
or
jle
leave
mov
insb
popa
push
out
fsubp
push
pop
not
sbb
jne
pop
sbb
sub
hlt
sbb
aad
les
arpl
out
adc
add
lcall
int
mov
mov
xor
xor
cli
add
dec
nop
hlt
xor
mov
call
dec
in
jne
mov
xor
dec
sti
hlt
ret
push
sbb
mov
bound
push
rol
mov
daa
fsubrp
enter
add
outsb
test
into
push
mov
in
out
andl
sbb
dec
push
out
xchg
or
out
pusha
lods
or
and
xor
lds
dec
mov
or
sub
in
adc
lock
es
aad
xchg
ja
test
sub
dec
enter
out
mov
or
loop
add
jecxz
add
or
rorb
adc
jle
pop
add
or
dec
inc
xor
mov
xor
rcrb
add
adc
fs
ret
mov
in
fildl
adcl
mov
dec
shrb
push
mov
xlat
movsb
je
cmpsl
test
popf
scas
fisubrs
sbb
imul
adc
popf
jmp
sbb
or
clc
lock
xchg
add
or
enter
jecxz
adc
xchg
add
or
out
mov
xlat
sbb
mov
adc
or
jnp
sbb
and
test
lahf
push
mov
cwtl
jl
bound
jae
add
enter
pop
lcall
adc
adc
int3
shlb
sbb
and
mov
cld
pusha
ds
in
sub
sub
rcr
or
cmpl
shlb
sbb
xchg
stos
sbb
and
sub
mov
inc
xor
or
mov
add
or
shl
nop
lret
sub
mov
out
xchg
mov
in
add
decb
add
faddl
les
mulb
pop
inc
lods
adc
and
popa
int
ret
ja
sbbl
movsb
cmpsb
inc
pop
sbb
imul
jmp
inc
ja
adc
sti
xchg
lahf
loopne
ss
enter
ret
xchg
orl
je
sub
mov
xchg
dec
jmp
arpl
pop
cmp
fistl
push
inc
jno
adc
mov
popa
adc
lret
jno
mov
cvttps2pi
mov
jecxz
hlt
jecxz
in
mov
cld
sub
add
lret
shrl
add
cmp
rclb
sub
or
jae
push
lea
movsl
xor
or
adc
shrb
jae
rol
sbb
shlb
stos
xchg
cmp
or
ljmp
bound
sarb
in
scas
adc
mov
sub
adc
push
dec
cmp
mov
mov
add
push
leave
movsb
jo
add
adc
rcl
adc
cmp
xchg
jns
lods
sub
pop
mov
mov
cmp
dec
in
xor
dec
dec
in
xchg
subb
seto
dec
dec
inc
loopne
cmc
orb
icebp
push
xchg
mov
mov
xchg
adc
adc
int3
jno
loop
sbb
push
inc
lret
push
dec
add
mov
sahf
inc
pushf
add
sub
jo
call
sub
cmc
iret
pop
cld
or
push
repz
je
mov
sbb
adc
mov
mov
sbb
mov
ftst
xor
jg
rcrb
sbb
mov
inc
inc
dec
wbinvd
mov
add
lret
bound
aad
hlt
or
or
imul
push
inc
push
and
sub
cmpsl
imul
addr16
jmp
sbb
add
mov
adc
jne
in
neg
lods
repnz
stos
mov
jmp
xor
mov
decb
pop
scas
mov
ret
sub
aad
mov
cld
or
mov
out
and
mov
fcmovnb
hlt
inc
sub
add
inc
dec
test
pop
add
push
adc
push
mov
mov
int3
movsb
mov
sbb
mov
bnd
icebp
leave
outsb
cmp
pop
fstpl
mov
jecxz
pop
mov
jl
push
adc
insb
sub
aaa
mov
stos
mov
cmp
add
add
sbb
sbb
clc
jg
xor
arpl
enter
mov
inc
adc
pop
insl
ss
pop
mov
dec
mov
xchg
push
jl
jg
or
popf
mov
stos
dec
xchg
call
fsts
dec
clc
or
shll
fsubl
into
jbe
into
aas
stos
test
xchg
mov
jp
sbb
inc
or
dec
mov
es
xchg
push
iret
adc
popf
inc
movsb
add
and
aaa
leave
pusha
dec
aaa
mov
add
mov
lds
shr
aad
insl
lret
les
lock
fistps
cmp
sbb
cmp
cmp
andb
inc
adc
or
pop
hlt
xchg
mov
dec
sub
popf
or
push
ret
out
mov
out
jb
aaa
ljmp
lret
pop
cmp
fisubrs
sub
cmp
mov
adc
pop
loop
xor
int3
and
je
outsl
repz
push
repz
mov
stos
adc
inc
shl
mov
fistl
rcrb
mov
icebp
in
loope
mov
dec
inc
cmp
fcompl
inc
rclb
push
or
stos
repnz
adc
in
and
push
adc
fadds
mov
or
fsubs
pop
sahf
loopne
adc
addr16
jb
mov
pop
jp
adc
jl
push
mov
adc
xchg
and
loopne
jg
xor
jns
pop
daa
mov
add
xchg
dec
mov
push
leave
xchg
stc
fstl
movsb
push
fs
adc
notb
and
repnz
js
add
pusha
in
fisubl
pusha
int
xorl
test
loope
xchg
dec
repnz
add
mov
mov
or
add
movsb
push
xor
ljmp
aaa
leave
pop
roll
arpl
sub
or
nop
mov
stos
lds
and
mov
rclb
cwtl
xchg
mov
push
out
nop
dec
cltd
test
rcll
pusha
call
int
in
xchg
addr16
out
pop
adc
and
xchg
mov
dec
into
xchg
adc
mov
mov
cmpb
push
xor
add
fwait
aam
mov
xchg
cmp
mov
add
xor
stos
fists
mov
sub
mov
dec
popa
bound
xchg
pusha
or
cmp
ret
jmp
ljmp
or
into
inc
jns
dec
cwtl
dec
lret
dec
in
in
nop
push
adc
lds
sub
push
adc
add
or
lea
sbb
into
adc
stos
adc
and
cmp
aaa
cmp
adc
or
jo
adc
sbb
in
out
insb
lock
rol
int
das
xchg
push
nop
popa
in
mov
dec
in
lret
sbb
push
ljmp
jg
std
or
loope
repz
nop
orl
cmp
jne
clc
and
add
fcmovbe
mov
dec
repz
popa
repnz
jmp
clc
pop
mov
mov
movsl
dec
movsb
inc
fsubrs
sub
mov
inc
in
sub
add
adc
popa
or
icebp
loop
add
or
nop
jl
jae
and
jecxz
mov
out
imul
iret
mov
xor
movsb
adc
jnp
add
ret
shl
xchg
push
xor
sbb
push
out
adc
adc
mov
dec
sub
xchg
xchg
hlt
pop
push
push
push
jbe
sbb
aaa
cmc
or
push
movsl
adc
in
int
cmc
je
xchg
ret
orb
or
rcl
xor
push
ficoms
loopne
bound
sbb
mov
dec
out
fsts
cwtl
mov
jle
adc
sub
xchg
movsb
adc
or
push
hlt
mov
jg
pop
pop
repz
ljmp
cltd
fcoms
mov
push
pop
mov
push
lahf
les
mov
inc
test
and
fs
rorl
aad
jp
push
adc
inc
roll
cli
or
nop
or
call
jg
jg
fwait
imul
ss
push
fldcw
sub
lock
mov
sub
pop
fimull
loop
roll
xchg
fs
fldl
dec
nop
ds
repnz
pop
xchg
out
inc
dec
mov
push
add
lock
mov
add
pop
dec
rol
mov
dec
jmp
or
jecxz
fistps
or
mov
outsl
mov
enter
ret
lods
adc
push
mov
orl
xor
repnz
jl
mov
pop
sbb
data16
xchg
cmp
push
sbb
out
int
nop
aas
mov
test
inc
push
adc
inc
addr16
dec
fdivrl
rcl
push
fisubs
shlb
mov
or
int3
scas
cmpl
push
adc
push
add
dec
ds
aam
out
mov
clc
push
dec
fstl
pop
add
in
ficompl
inc
xchg
cmp
inc
sub
in
sub
out
mov
xlat
mov
fadd
lea
ss
push
ljmp
aam
jmp
mov
push
add
shl
in
mov
push
lds
sub
xchg
xor
sbb
dec
jmp
jb
stc
push
outsl
andb
out
xchg
ljmp
or
pop
in
in
shlb
cld
push
rclb
pop
jno
sub
pop
inc
push
sbb
pop
rcr
pop
hlt
mov
in
pop
icebp
hlt
jmp
or
or
out
int
adc
sub
push
in
insl
cli
les
pop
rcll
icebp
xchg
mov
fwait
adc
fsubrl
xchg
faddl
xlat
lret
xchg
mov
ja
test
pop
mov
sets
or
mov
in
mov
add
aam
push
mov
jb
dec
push
xchg
ret
loope
cmp
sbb
xchg
xor
lret
mov
xchg
pop
imul
jge
cmpsl
iret
and
dec
pop
jno
adc
mov
push
shlb
xchg
add
arpl
adc
sub
addl
lock
adc
and
adc
test
rclb
inc
cmp
stc
add
or
inc
int3
lcall
mov
ljmp
push
cmp
xchg
add
test
add
sub
sbb
rcrb
loopne
cld
sub
rcrl
inc
sbb
or
xor
add
cmp
cld
lea
bound
or
fsubs
xchg
sbb
cmp
subb
ret
inc
xchg
add
in
ss
loope
test
push
mov
add
subl
lods
clc
jmp
xchg
mov
or
inc
add
sub
in
or
movsl
pop
shlb
mov
movsb
lret
aaa
outsb
jbe
mov
unpckhps
pop
mov
fiadds
mov
test
mov
fidivrl
jmp
les
shlb
imul
std
jae
es
in
pop
xchg
or
cwtl
add
xchg
int3
mov
mov
ds
ja
repnz
fadds
sbb
cmp
dec
xchg
cmp
and
jne
jg
popf
loop
or
lock
int3
into
xor
adc
jmp
ljmp
shlb
mov
sti
loope
and
cmp
or
ret
fisttpll
jnp
mov
adc
sub
loopne
cmp
jle
xor
outsl
shlb
ja
les
xor
les
jg
cs
lods
lods
imul
sub
jne
mov
mov
addr16
cwtl
nop
shrb
ljmp
push
push
outsb
ljmp
cwtl
ret
outsl
dec
cwtl
push
mov
push
push
mov
leave
pop
test
loope
ja
lahf
sub
shll
test
mov
and
and
adc
mov
cmp
in
push
mov
shlb
repnz
xor
loopne
sub
or
cs
int3
test
dec
scas
xor
stc
insl
add
enter
sbb
lods
clc
push
sub
mov
test
adc
pcmpeqd
inc
lea
mov
in
mov
mov
movsb
leave
adc
sbb
push
rclb
jmp
dec
cmp
mov
add
lret
inc
lcall
add
repnz
test
insl
pop
enter
sub
jns
test
jno
imul
adc
push
fwait
mov
js
pushf
scas
or
mov
sub
xor
test
xchg
or
push
ficompl
aam
cmp
jl
fnstcw
in
mov
jp
data16
movsb
xchg
les
shr
or
push
push
call
sbb
mov
dec
push
hlt
inc
jg
mov
rcrb
aam
xchg
nop
jne
xor
xchg
in
movsl
add
add
hlt
mov
ror
inc
push
mov
pop
aam
lahf
aad
xor
push
sub
mov
mov
hlt
shrb
sbb
rol
in
adc
and
mov
int3
mov
push
fcoms
jbe
push
clc
mov
push
jl,pn
cmpb
and
je
movsb
out
mov
jl
aam
cmp
mov
mov
adc
rcr
pop
ss
pop
test
popf
xchg
mov
mov
shlb
iret
xchg
in
xchg
and
xlat
xor
dec
lret
hlt
ds
iret
xor
dec
mov
aad
addr16
add
mov
movsl
test
cmpsb
imul
xchg
pop
mov
pop
sub
mov
mov
out
push
int3
out
or
mov
sub
subl
sub
fistps
jns
mov
mov
lods
fs
jge
mov
inc
jge
iret
push
push
mov
mov
sbb
lods
jae
out
pop
jmp
adc
mov
add
fbstp
lret
lcall
fldl
pop
inc
mov
add
and
sbb
mov
rcrb
enter
mov
jl
xor
orb
sbb
stos
and
faddp
jb
mov
lods
push
out
int3
adcl
popa
xor
movl
adc
add
pushf
arpl
sahf
outsb
cltd
shll
fcoml
cmp
sub
sarb
rclb
ss
sub
pop
add
out
sbb
aam
sub
nop
jo
cmp
mov
ret
ljmp
iret
lcall
test
in
rcr
ret
aas
mov
hlt
cmp
inc
sbb
add
mov
cmpsb
mov
mov
call
fsubrl
pusha
xchg
subl
aam
sub
aad
jb
out
xorb
stos
adc
pop
mov
movb
rcll
sub
mov
ret
dec
out
adc
adc
xor
cwtl
jb
outsl
hlt
out
cmpb
lods
repz
mov
xor
sbb
xchg
mov
fwait
addr16
or
ret
fstp
adc
loop
xor
xchg
in
pop
or
sbb
jecxz
add
inc
inc
gs
or
scas
adc
aam
or
bound
in
call
xchg
add
fistps
mov
xor
mov
pop
or
lahf
shrl
pop
ja
mov
xor
or
mov
aas
add
or
cmp
add
cmp
insb
adc
fisubrs
lahf
or
call
xchg
mov
fwait
push
cmp
or
push
call
xor
add
fsubl
les
xor
inc
xchg
lahf
popf
sahf
dec
mov
roll
jo
addl
xor
fcmove
imul
mov
popa
pushf
in
and
add
test
loopne
enter
movsb
and
pop
sub
mov
lret
aaa
mov
lea
repnz
lret
and
mov
dec
in
inc
ss
sahf
xor
or
or
lods
cmp
dec
mov
in
mov
out
nop
aam
int
cmp
mov
dec
push
adcl
test
popf
or
repnz
fiaddl
enter
dec
lcall
in
int3
xchg
enter
nop
xor
hlt
xor
adc
fst
clc
lahf
push
adc
pop
adc
cmp
pop
movsb
dec
sbb
fbld
fiadds
out
mov
in
call
and
aaa
dec
and
or
sub
sahf
add
xor
xor
jg
sarb
ljmp
jbe
xchg
jmp
or
push
mov
stos
or
dec
pop
sbb
dec
pop
adc
nop
sbb
out
adc
std
mov
push
xchg
into
popf
insb
ja
mov
out
or
addr16
xchg
fadds
xor
adc
xchg
add
jg
sub
push
popl
sub
out
es
fnstenv
in
mov
and
jg
xchg
inc
ret
pop
sub
daa
xor
subb
adc
sub
outsb
aad
sub
lock
xor
call
bound
and
mov
xchg
inc
pop
loopne
add
fcomi
lods
dec
js
jl
shr
dec
nop
enter
rclb
sbb
mov
mov
push
clc
push
xor
loopne
push
pop
das
mov
in
sub
pushf
js
ret
and
cmp
jo
frstor
scas
ret
mov
addl
xchg
pop
mov
push
iret
sub
add
mov
jo
inc
jp
mov
fimuls
mov
adc
push
mov
mov
pop
sub
xor
lods
das
sbbl
inc
dec
mov
mov
aad
arpl
je
cmp
mov
shlb
in
shr
shll
xchg
jle
fbstp
or
inc
inc
lahf
in
movsl
bnd
aam
stos
add
aad
aas
xor
es
jae
nop
and
out
lret
pop
add
fnsave
push
push
out
clc
cli
in
jns
shlb
cmpsl
je
cmp
mov
jl
push
pop
mov
cmp
add
mov
mov
ja
pop
lods
mov
in
lret
daa
out
mov
ret
fbld
shl
enter
mov
shlb
push
mov
push
arpl
sbb
sbb
test
fdivrl
out
adc
repnz
hlt
dec
aam
adc
xor
inc
sub
jmp
mov
mov
insl
dec
subb
push
jae
out
lock
inc
sbb
or
add
lret
lock
xchg
cmpl
out
sbb
inc
call
int3
jbe
les
xor
xchg
pusha
enter
bound
das
int3
jg,pt
push
loop
or
jmp
pop
movsb
dec
ficomps
fs
jecxz
loopne
mov
jl
sub
pop
sub
jge
mov
push
sub
mov
aam
jle
fnstsw
lds
jb
in
or
mov
test
mov
ret
mov
cwtl
dec
in
bound
loope
jecxz
xchg
or
les
mov
cmp
cmp
fimull
jmp
sub
add
push
pushf
ljmp
xchg
nop
and
repnz
stos
mov
or
not
dec
push
sub
mov
in
adc
push
lret
sarl
leave
xchg
lds
mov
cmp
mov
xor
loopne
ljmp
lret
jo
sub
add
and
subb
shlb
inc
imul
cmp
and
or
inc
xor
adc
aas
mov
iret
mov
iret
iret
imulb
clc
sbb
or
push
ret
push
add
and
in
cmp
adc
jne
pop
mov
lahf
pop
out
popf
inc
nop
int3
jns
xchg
inc
mov
lahf
stos
jne
into
adc
add
push
push
lock
repz
mov
mov
dec
adc
mov
call
mov
das
push
enter
jmp
test
sub
or
faddp
push
and
mov
jmp
clc
repnz
sti
pusha
push
ret
sbb
rcll
or
imull
and
std
adc
mov
xlat
repnz
pop
cmp
popa
int
cmp
leave
push
xchg
adc
or
int3
xchg
mov
sbb
push
in
movsb
pop
ret
sub
pop
lods
and
mov
fidivs
in
mov
jge
ds
mov
sbb
ss
push
lea
aas
loop
hlt
out
lods
cmp
push
adc
sub
in
rorb
sbb
loopne
inc
sarl
dec
and
sti
jmp
mov
sbbl
sub
pop
sub
sar
lods
push
jecxz
ret
sub
and
mov
hlt
or
adc
cmp
ret
xchg
cs
ljmp
or
bsr
scas
mov
mov
and
ret
sbb
and
mov
adc
mov
jmp
pop
push
dec
sbb
inc
adc
mov
jl
dec
sbb
jne
subb
inc
pushf
pop
inc
adc
pop
cmp
pop
sub
xor
out
in
ss
pop
or
aaa
aad
hlt
dec
adc
fdivrs
lahf
adc
and
shrb
jnp
in
orb
adc
out
or
adcb
mov
outsl
inc
lret
call
cmp
or
icebp
ret
fnstsw
inc
push
xor
data16
ret
add
push
xchg
and
sbb
or
enter
pop
lock
cmp
in
sub
fwait
add
mov
fsubrl
add
rcl
cwtl
les
push
cld
stos
cmpps
in
cmp
lods
dec
js
gs
jg
ja
test
pushf
push
mov
in
cmp
adc
inc
lcall
dec
jno
aas
into
ss
xchg
sub
or
add
hlt
mov
adc
addr16
adc
sub
pop
xor
roll
mov
repz
enter
add
adc
out
or
mov
pop
or
jmp
nop
aad
xchg
es
xchg
jb
into
mov
adc
jge
int3
adc
aad
ss
pop
pop
lock
inc
lcall
lret
adc
jne
add
sti
sub
xchg
push
cmp
lods
repz
repz
gs
in
sub
pop
lods
inc
cmp
mov
xor
ret
jae
jno
mov
push
test
ljmp
lret
push
dec
inc
fidivrs
test
mov
sbb
in
stos
xchg
mov
das
lret
cmp
movsb
pop
js
mov
aad
xchg
push
or
mov
push
shrb
lods
xchg
sbb
add
cmp
cld
inc
xchg
shll
sub
mov
add
out
mov
jb
into
pop
cmp
jb
decl
xchg
lret
arpl
lods
xchg
mov
adc
cltd
or
decb
inc
mov
ret
in
sbbb
ljmp
incb
je
mov
jmp
mov
add
aad
push
in
jne
inc
xchg
fcmove
les
dec
aam
rclb
mov
test
mov
mov
xchg
mov
add
sbb
add
cmc
dec
cmp
jge
or
out
adc
dec
cmp
in
cld
icebp
in
inc
daa
xchg
lock
jg
sub
fs
fmull
sahf
andb
in
fmull
mov
push
push
fwait
push
aad
add
les
push
outsl
aas
or
xor
imul
dec
scas
repz
mov
jmp
mov
adc
mov
shl
int3
int
leave
fnstcw
das
call
mov
inc
mov
add
or
inc
mov
adc
xchg
aas
aas
ret
enter
sub
call
add
lret
push
aad
inc
mov
jnp
jno
insl
adc
nop
rorb
or
xchg
outsb
sub
dec
scas
sub
mov
pop
xor
mov
push
jge
jno
push
sbb
lea
push
paddsb
add
adcb
jb
stos
jo
mov
enter
ljmp
aad
and
int3
fsetpm(287
ss
xchg
testb
idivl
aad
mov
lds
xchg
and
rorb
push
ficoml
adc
add
loope
jno
and
or
in
mov
in
mov
ret
loopne
push
push
inc
mov
cld
shl
pop
test
insb
sbb
jecxz
lahf
rorb
pushl
sbb
in
fcoms
pop
pop
call
mov
push
add
pop
enter
outsl
insb
shlb
mov
mov
lar
adc
add
cli
in
inc
shlb
or
mov
repnz
outsl
mov
dec
rcrb
pushf
pop
pop
les
jl
cmp
imul
adc
jnp
pop
jne
aad
insb
add
mov
or
in
repnz
into
cld
add
fcmovnbe
mov
xorl
sub
push
loope
repnz
lahf
pop
xor
add
or
xchg
dec
data16
mov
dec
fisttps
ret
dec
lods
jne
dec
movsb
sti
push
lcall
lds
sub
mov
push
sub
dec
fsubl
xchg
stos
jmp
in
and
mov
mov
adc
adc
mov
pop
sbb
cmp
sub
test
int3
jb
mov
into
fsubs
add
cmp
int
push
mov
add
xlat
ret
sub
push
mov
cmp
sub
pop
lock
add
add
jne
push
add
and
enter
aad
mov
sarb
ret
hlt
or
andb
add
xor
sbb
mov
add
shlb
add
adc
insl
mov
xor
or
fsubl
cmp
sub
xor
adc
ret
mov
push
xor
scas
out
inc
push
mov
shl
push
jl
sbb
shlb
mov
insl
iret
jb
add
sub
into
inc
lods
or
pop
cmp
mov
outsb
mov
movsb
sub
dec
pop
lret
out
mov
and
fsts
cmp
cli
ret
dec
rol
ret
push
mov
aad
adc
pop
push
xchg
lcall
or
and
xorb
xchg
test
pop
and
add
or
mov
aaa
inc
rcrl
out
mov
lcall
repnz
xorl
nop
add
je
xchg
mov
mov
mov
sbb
outsl
out
push
push
push
push
mov
or
outsl
dec
int3
ljmp
and
jno
xchg
fsubl
out
pop
jg
cmpsl
aam
adc
fldt
movsb
subb
lahf
ret
dec
sahf
add
jmp
dec
ret
mov
dec
mov
cmp
repnz
inc
inc
pop
out
fnsave
cmpsl
ja
outsb
aaa
lahf
outsl
js
test
push
repz
sub
or
int3
cltd
andl
rolb
mov
add
scas
adc
lock
and
insb
push
mov
sbb
shr
jmp
lock
add
fadds
ss
data16
mov
aaa
add
mov
sti
mov
in
inc
imul
rcrb
dec
inc
sbb
lods
call
mov
stos
adc
sub
fidivrl
adc
mov
mov
adc
add
stos
and
call
fcmovnu
mov
in
lods
or
sub
adc
xor
mov
dec
add
push
aas
cld
or
xor
iret
adc
lods
jnp
call
mov
inc
test
scas
pop
mov
ja
les
shl
hlt
adcb
sbb
scas
bound
scas
ja
fdivl
cmp
nop
rcrl
cwtl
call
dec
popf
gs
je
push
sub
xor
sub
adcl
mov
aam
iret
insb
or
mov
push
push
xor
sarb
push
xchg
inc
xlat
mov
sub
pop
outsl
scas
adc
jmp
nop
shrl
not
mov
dec
jne
mov
cwtl
push
arpl
or
mov
sub
xchg
sub
or
dec
fldl
scas
cmp
mov
sbb
shrb
iret
fnstsw
scas
rcr
pop
push
push
push
jl
lds
das
je
mov
xchg
xchg
movsl
dec
hlt
nop
adc
rorb
pop
mov
inc
jmp
xchg
jne
aad
jle
imul
aas
sti
aaa
imul
jns
add
aad
bound
cmc
test
xor
mov
out
imul
inc
push
ret
sub
inc
mov
lcall
or
jle
ret
add
mov
jg
or
or
out
cmp
imul
jge
sti
cld
or
int
scas
xor
loopne
mov
je
sub
xor
add
mov
pop
add
xor
adc
fmull
inc
fs
cmp
test
dec
xchg
inc
movsl
dec
cmpsb
icebp
test
mov
pop
popa
hlt
rol
adc
dec
xchg
inc
inc
popa
sbb
or
cli
lods
int3
and
imul
stc
shll
pop
jbe
mov
cli
ds
imul
mov
and
ljmp
inc
movsb
push
in
push
in
pop
fs
test
faddp
movsb
xor
into
fisttpl
pushf
xchg
je
inc
bound
xchg
xchg
dec
mov
mov
xchg
test
adc
shr
call
fstpt
dec
sub
movsb
ja
aam
xor
pop
nop
pop
jge
mov
pop
loop
jo
push
fs
andl
lea
nop
lods
test
mov
je
cld
test
xor
mov
mov
into
jg
subl
mov
xchg
rcrb
jmp
sbb
icebp
dec
xor
xor
cwtl
mov
xlat
into
hlt
shl
and
pop
adc
sub
lahf
xorl
xor
aad
ret
jp
in
fnstenv
test
cmpsb
mov
imul
or
in
jg
mov
push
mov
shl
xchg
std
adc
cmp
adc
aam
xchg
les
shl
mov
adc
adc
mov
shl
and
add
fcomps
pop
jg
and
xchg
and
jnp
add
ljmp
movsb
add
aaa
mov
push
fdivl
sbb
aam
inc
shll
insl
shl
cs
loope
stc
xchg
imul
mov
test
lahf
sbb
icebp
sub
xchg
or
jecxz
sbb
rcrb
rcll
dec
shrb
adc
fmull
and
xchg
cld
je,pn
xor
imul
aaa
or
ret
dec
jge
arpl
addb
cli
inc
mov
ret
les
mov
lret
cmp
les
into
dec
fs
mov
mov
or
je
inc
aam
push
mov
adc
ret
mov
dec
icebp
mov
es
into
shr
cltd
mov
xor
jle
int3
fs
loop
fucomip
sahf
fdivrl
fadds
sub
fmull
push
mov
dec
mov
dec
xor
out
cs
repnz
sbb
add
inc
cli
bound
into
or
and
mov
cltd
jg
les
mov
fsubrl
std
dec
sti
outsl
jbe
lods
and
stc
dec
mov
scas
dec
cmp
cwtl
negl
jo
mov
pop
add
xchg
inc
stos
stc
or
sub
or
jge
ss
adc
lds
dec
mov
imulb
cmpsb
mov
test
in
mov
adc
add
adc
jg
movb
ror
pop
or
pop
xchg
dec
pop
sub
stos
mov
jg
jo
in
fisttpl
aas
mov
sbb
fstpl
fisttpll
cmp
mov
ficoms
mov
sub
call
sub
cmp
aad
lds
mov
in
ljmp
mov
stc
pop
lahf
mov
push
test
cmp
loope
icebp
cmp
push
mov
movl
mov
sub
imul
cmp
sbb
mov
out
in
shlb
and
ret
testb
int3
fmul
inc
sahf
mov
or
mov
pop
call
sub
sbb
cld
mov
mov
mov
add
rcrb
push
cmp
inc
sub
xchg
insb
dec
push
push
sbb
mov
nop
ds
cmp
mov
dec
add
adc
ds
inc
mov
dec
mov
mov
pop
icebp
mov
icebp
scas
lahf
movsb
cmp
test
aad
ss
push
mov
pop
add
mov
jp
xlat
scas
or
addl
testb
clc
jb
add
orl
sbb
icebp
addb
jp
jl
pusha
push
mov
idivl
addr16
sub
rcl
adc
add
or
jecxz
rolb
adc
push
nop
add
xlat
or
adc
repnz
mov
nop
rorb
addb
xchg
mov
insb
repnz
mov
jl
mov
je
rcll
dec
add
sbb
adc
inc
add
mov
in
add
adc
add
mov
push
jg
div
xor
jno
adc
sub
and
add
cmp
fsts
push
out
in
rcr
ds
sub
in
fdivrl
add
std
xor
aad
cmc
dec
and
rcr
push
mov
loop
mov
lahf
jne
fadds
xor
sub
fwait
add
mov
pop
call
ret
or
rcl
inc
in
shrl
cmpsb
xchg
addr16
fstp
int
pop
lods
les
push
insb
adc
fstpl
sti
sbb
pop
dec
jnp
test
xchg
cltd
and
mov
sbb
jmp
inc
or
mov
ret
aam
fnstcw
sbb
and
ja
std
xor
adc
insb
in
xchg
mov
dec
and
xor
sub
movsl
out
loop
dec
sbb
dec
mov
sub
cmpsb
fbstp
aad
add
ss
mov
aad
mov
add
fdivr
mov
pop
push
mov
and
decl
inc
adc
pop
xor
in
lods
sub
jb
push
out
sub
add
adc
in
push
inc
push
jle
mov
cltd
add
mov
pop
or
hlt
adc
jae
pop
iret
add
nop
into
subl
fisubs
mov
inc
mov
mov
icebp
outsb
adc
xchg
scas
es
repnz
fwait
int3
or
stos
xchg
mov
and
stc
cmp
sar
loop
adc
psubsw
inc
or
and
lret
sub
xchg
lcall
add
adc
xor
cwtl
jns
cltd
cmc
jl
sub
xchg
loopne
cmp
lret
sbb
adc
lret
mov
dec
pop
iret
sub
pop
cld
pop
cltd
imul
mov
lea
mov
mov
cmp
jecxz
adc
push
sub
sahf
fdivp
dec
lock
xor
ret
outsl
mov
sub
andb
cmpsl
in
sbb
mov
push
rorb
insb
push
sub
pop
adc
sbb
stos
and
js
out
data16
pop
mov
test
inc
outsl
fs
sbb
or
sbb
cmp
enter
inc
pop
cmp
ret
push
sub
in
sbb
fidivl
fxtract
jp
push
pop
test
int
rol
sbb
div
or
jg
dec
fcoml
jne
scas
mov
lds
xchg
shrl
js
sbb
test
and
ja
mov
and
cmpsb
push
jg
hlt
ss
xor
mov
mov
xor
fnstsw
out
sub
mov
lea
dec
push
sub
xor
cmpsb
cmp
adc
push
or
fdivl
mov
xchg
inc
cmpsb
and
adc
inc
iret
xchg
cmc
cmp
xchg
popf
rcll
sbb
insb
add
xchg
cmp
enter
arpl
repnz
push
mov
in
ret
jae
mov
jg
call
inc
jae
out
in
mov
mov
int3
cltd
add
fxch
fisttps
stos
adc
add
out
stc
int
lahf
icebp
fiaddl
push
hlt
inc
sbb
test
imul
rclb
pop
push
mov
les
push
pop
sti
ljmp
mov
mov
in
adc
insb
outsl
inc
cmp
or
mov
sbb
fwait
mov
jno
mov
sahf
test
adc
xchg
aam
mov
mov
repnz
lret
out
js
mov
cmpsl
lret
in
or
or
dec
movsl
dec
cmpsb
xor
xchg
cli
jl
push
insl
dec
dec
pop
scas
loopne
cltd
jbe
sbb
mov
mov
icebp
push
dec
sub
cld
sub
cwtl
jo
adc
sbb
clc
cmc
xchg
xchg
xchg
mov
jb
xchg
pusha
out
or
lahf
jmp
mov
mov
xor
mov
sub
leave
sahf
dec
rorb
push
pop
inc
xor
sbb
repz
repnz
dec
ret
fstpl
xor
push
lods
jno
mov
push
dec
hlt
mov
scas
out
mov
int3
nop
out
fidivs
hlt
les
sub
fisubs
lret
call
mov
mov
xchg
cmc
cld
je
leave
insl
cmpsl
jne
sub
in
dec
lods
jl
dec
jp
cs
cld
adc
xchg
ljmp
mov
ds
cmc
fisttpl
dec
mov
arpl
out
xchg
mov
dec
dec
push
cmp
inc
jle
iret
in
sbb
add
jmp
adcl
xor
cmpsb
or
int
or
mov
adc
or
fsub
leave
pop
push
scas
sub
sbb
or
push
stos
sbb
mov
insb
jns
pusha
popf
dec
mov
or
lret
fwait
into
int3
insb
or
sub
pop
lds
jp
adc
cltd
in
and
xchg
mov
std
sub
lds
orb
icebp
jae
testb
loope
pop
popa
push
lds
cld
pusha
xchg
sub
lcall
push
adcb
mov
fsubrp
sub
mov
in
xchg
in
rep
inc
shll
mov
mov
xor
fwait
int
jmp
or
ljmp
xchg
adc
lock
pop
das
je
cmpsl
push
push
and
in
inc
add
inc
add
jne
std
jno
ret
push
idivl
bound
cli
add
sbb
jo
iret
cld
mov
jbe
pushf
jo
or
icebp
jne
mov
rolb
pop
mov
pop
mov
iret
ret
fildll
push
add
les
sub
and
and
add
or
add
nop
adc
add
in
sbb
enter
out
jo
in
iret
jno
or
in
and
mov
mov
repnz
add
or
nop
add
adc
in
out
mov
mov
adc
faddl
aam
pop
adc
mov
mov
lods
shrb
mov
mov
repnz
nop
or
xor
nop
rolb
roll
cwtl
icebp
mov
add
or
add
mov
pop
mov
in
inc
mov
ljmp
mov
pusha
rol
jl
push
adc
je
mov
test
rolb
jecxz
ret
add
or
adc
test
and
cmp
cmp
sarb
adc
out
or
jg
add
rcrb
repnz
mov
call
mov
push
clc
loop
add
or
adc
test
mov
rcr
repnz
mov
push
mov
test
shlb
mov
add
or
adc
test
cwtl
jecxz
sbb
adc
add
mull
jle
jl
mov
inc
xlat
and
fs
clc
adc
enter
pop
out
mov
repz
stc
jo
jbe
ss
pmuludq
push
popl
ja
xor
mov
adc
neg
hlt
out
ret
mov
or
fists
mov
sub
xor
xlat
and
or
mov
mov
outsb
xchg
popf
push
sub
lahf
into
sbbb
xchg
cmp
in
inc
sbb
lock
sarl
jae
jg
push
lahf
test
out
adc
fisubs
pop
inc
xchg
les
pop
sbb
ljmp
hlt
cmp
int3
cs
push
sub
mov
popf
fld
add
sbb
mov
push
out
iret
mov
mov
rclb
sub
mov
pop
mov
mov
out
xchg
and
mov
cmp
sbb
push
dec
hlt
pop
or
add
or
jmp
mov
xor
xchg
jnp
sub
sub
lret
repz
mov
jl
inc
daa
jo
jge
xchg
outsl
add
add
shll
mov
icebp
or
xor
cli
jl
fcomip
cmp
in
hlt
sub
lock
dec
sub
sbbb
add
add
push
xor
lods
jae
mov
int3
cmp
decb
iret
ret
lods
lret
adcl
int3
movsb
push
loope
call
jo
fucomp
mov
push
xchg
mov
or
rorb
mov
xchg
in
mov
mov
add
adc
mov
cmpb
jae
xor
orb
sub
inc
mov
ret
jp
add
xor
int3
xor
scas
aaa
cmp
push
movsl
in
add
add
int
andb
mov
das
xchg
mov
cmp
jno
pop
stc
push
aad
fldenv
sbb
call
pop
cwtl
scas
test
xchg
mov
test
loopne
in
add
adc
xchg
es
sbb
xor
nop
out
add
shrd
jecxz
mov
arpl
mov
lahf
add
sub
cmpsl
jg
cmp
test
xor
add
in
jmp
shrb
mov
nop
mov
mov
imul
mov
jmp
fsubl
add
mov
adc
add
into
mov
mov
test
cli
jmp
fwait
hlt
cmp
stc
mov
or
cwtl
test
and
hlt
rclb
sbb
or
pop
adc
xorb
or
iret
lods
jecxz
je
loope
dec
push
adc
arpl
js
bound
popf
push
pop
loopne
jp
and
cmpsl
lcall
stos
std
ds
dec
sahf
push
sub
add
loopne
stos
je
xchg
fdivs
xor
or
add
add
push
mov
sub
mov
jae
fsts
jns
hlt
popf
jmp
cmp
cmp
sub
mov
adc
iret
add
das
add
or
or
or
in
shrb
sbbl
and
into
hlt
les
int
mov
xchg
sbb
mov
ficoms
dec
mov
mov
ret
int
std
rcr
les
and
push
popl
ja
mov
into
shr
add
repz
jno
sbb
mov
test
mov
ficoms
mov
aaa
dec
jg
jmp
rcr
shrb
push
fildl
test
ret
adc
jp
dec
fstps
and
mov
or
repz
shrl
int
xchg
insb
or
xchg
addr16
jmp
cwtl
jno
and
jmp
fcoms
addr16
pop
int3
lea
stos
adc
push
loopne
cld
xchg
jle
jmp
and
addl
jmp
cmpsl
rorl
aad
cmp
stos
xchg
out
out
leave
test
enter
or
xor
inc
sub
insl
lahf
add
fistl
cmpsl
mov
sbb
rorl
and
out
fisttps
mov
cmp
mov
jmp
rol
jns
cmp
pop
flds
sarb
mov
jge
fwait
out
fwait
jo
lock
cmp
jmp
and
jl
inc
mov
push
mov
mov
adc
shrl
loop
cmp
mov
sbb
nop
mov
jmp
bound
push
loop
xlat
inc
adc
test
and
or
hlt
out
adc
sub
sahf
push
jns
push
push
push
movsl
dec
adc
sub
mov
xchg
ljmp
or
jae
ret
sti
adc
or
sahf
stc
call
dec
nop
jmp
ret
loope
pop
orb
add
ret
xchg
ljmp
jecxz
push
stos
pop
fstpt
dec
fisttpl
dec
or
xor
sbb
pop
sbb
mov
sub
orl
nop
jbe
mov
mov
fistl
fimull
mov
push
mov
adc
push
sbb
les
cli
sbb
inc
lcall
pusha
jns
shrl
adc
sub
jp
enter
jg
xchg
clc
dec
dec
add
mov
mov
adc
push
xchg
je
mov
cmc
sbb
int3
cli
add
add
mov
mov
fidivrl
ret
movsb
ljmp
xchg
outsl
popf
xor
ret
out
mov
rcrl
lods
shl
jnp
jl
lahf
add
mov
outsl
imul
or
inc
aad
pop
push
je
in
mov
clc
fnstenv
cmp
jae
adc
push
mov
int3
mov
imul
mov
ficomps
or
xor
les
fnsave
lods
in
out
pop
lahf
mov
adc
inc
mov
mov
adc
or
addr16
mov
in
fistpl
jmp
mov
loope
mov
in
inc
int
rcl
sarb
jae
fsubrs
and
movsb
pop
lods
lds
in
sbbb
ficompl
lahf
jnp
int3
mov
lret
js
add
cld
imul
lret
or
js
lret
mov
lahf
lret
aam
in
out
mov
xchg
jno
out
jns
xchg
xchg
mov
push
sbb
jge
out
xor
bound
xchg
test
or
xor
outsl
mov
fcmovne
icebp
scas
outsb
out
or
fbstp
mov
ss
cltd
cmp
jno
leave
sub
repnz
fdiv
mov
int3
pusha
and
push
add
or
push
das
fldln2
sub
sti
add
dec
mov
addr16
subb
je
or
pop
psubd
inc
repnz
adc
or
popf
jno
xchg
inc
and
jne
lcall
leave
fildll
orl
mov
mov
movsb
je
rorl
add
inc
add
add
in
fsub
push
stc
and
sbb
xchg
or
add
adc
jne
push
sahf
data16
add
dec
mov
test
pop
adc
dec
mov
push
lret
add
stc
cmpsl
inc
sahf
or
arpl
xchg
std
rolb
js
aad
roll
decb
popa
sbb
stc
xchg
clc
das
or
loopne
ss
out
inc
fucomi
push
shll
mov
sbb
mov
imul
int3
sti
adc
testb
adc
mov
out
add
stos
les
dec
inc
jne
fistpl
mov
jmp
in
xchg
jl
pop
mov
dec
testb
loopne
push
ret
inc
mov
fucomp
inc
add
or
ret
sub
cmp
loopne
fucomp
iret
gs
sub
or
hlt
fstl
dec
sub
aas
inc
dec
out
lock
scas
es
sub
inc
pop
lret
sub
testb
adc
push
sub
pushf
loop
mov
stos
or
dec
jo
adc
jmp
sub
inc
gs
mov
add
loope
shl
pop
inc
mov
cmp
out
sbb
repnz
pushf
ret
loope
mov
nop
and
or
inc
cmp
add
mov
aaa
ret
mov
push
or
aam
test
insb
xor
loop
and
fstpt
adc
daa
mov
jp
in
add
mov
sub
sbb
sub
cmp
sub
xchg
hlt
fimuls
insb
push
or
cmp
aas
jecxz
push
mov
aaa
jae
adc
add
xchg
mov
mov
imul
leave
xlat
stc
adc
or
dec
les
cmp
adc
ret
mov
sarb
mov
mov
or
leave
stc
div
xorb
jo
and
into
lds
in
add
cltd
xchg
in
add
or
adc
shlb
insb
out
mov
or
in
aam
fstpl
add
or
scas
orl
sbb
add
cmpsl
out
ja
xor
popf
aad
mov
std
or
sbb
add
lock
fsubl
sub
fstl
pop
jns
shl
add
shl
jae
sbb
mov
in
rorb
inc
mov
call
and
call
mov
and
adc
cmp
xor
or
fdivr
push
cmp
jns
xchg
adc
mov
or
aad
fwait
push
cmpsb
ja
inc
fs
sub
nop
loop
scas
enter
mov
pop
insb
add
adc
push
lea
add
outsl
clc
lock
hlt
shl
mov
fldl
nop
cltd
out
sti
je
mov
mov
mov
jg
insb
ret
push
mov
xchg
ljmp
lahf
or
push
inc
push
lods
add
hlt
adc
push
out
mov
mov
push
sti
sbb
jae
or
into
sub
adc
testb
cmp
push
jne
out
mov
mov
xchg
adcl
inc
push
lret
divl
bound
popf
mov
imul
add
sub
ret
push
jecxz
out
xor
xchg
mov
enter
sbb
ds
jmp
movsb
or
cmc
mov
lahf
push
adc
lahf
xor
scas
jg
std
or
mov
adc
add
sub
cmp
adc
cltd
mov
xor
xchg
adc
icebp
outsl
jb
loopne
xor
hlt
mov
push
int3
enter
out
repnz
xchg
sbb
or
imulb
dec
add
hlt
arpl
lock
insl
in
add
fstp
imull
out
adc
nop
ret
stc
push
outsb
loope
out
xlat
dec
mov
into
sbb
jmp
loopne
adc
cmp
jne
repnz
loopne
lahf
push
sub
hlt
test
fisubs
faddp
mov
rcl
xchg
push
dec
icebp
dec
insb
or
sub
mov
daa
push
xchg
iret
cmp
mov
adc
mov
in
add
cli
jp
mov
gs
cmc
clc
insl
mov
fistl
add
add
jl
lret
xchg
loop
js
xchg
insl
aas
incl
adcl
int3
sbb
sub
xlat
dec
not
stos
rol
jmp
adc
insl
arpl
push
ja
imul
mov
into
push
testl
out
xchg
popa
inc
adc
divb
xchg
cmp
xchg
gs
leave
das
lds
cmp
fucomi
bound
push
test
into
add
ds
mov
in
jo
out
and
daa
addl
repnz
mov
mov
xchg
xlat
sbb
push
lret
sbb
sub
lock
sahf
in
leave
fdivrl
jmp
addr16
jecxz
cmp
jg
push
mov
mov
mov
mov
cmc
in
lahf
cmpl
test
adc
bnd
cld
mul
int3
add
repz
xor
sub
lock
in
or
ljmp
icebp
push
notl
js
rol
fiaddl
rcl
dec
in
lds
stos
cmp
dec
test
push
ret
outsb
mov
lahf
ficoms
and
fisubrl
add
mov
filds
out
sub
fnstenv
lock
loope
mov
xchg
inc
xor
repz
add
xchg
or
push
sbb
or
add
sub
pop
or
dec
add
mov
mov
xor
cmp
decl
ss
add
jge
jns
cmp
je
loope
mov
sub
in
push
test
popf
or
mov
mov
fstps
jno
hlt
add
xchg
adc
shrl
pop
xchg
rorl
lods
gs
mov
leave
sub
or
mov
mov
cmp
add
and
notl
sbb
adc
movswl
dec
pop
mov
sti
orb
or
or
fnsave
xchg
or
sub
ret
and
sar
xchg
mov
je
inc
scas
adc
add
incl
clc
ret
out
mov
pop
nop
aaa
icebp
mov
xchg
daa
aaa
or
push
hlt
sar
arpl
fidivs
lods
xchg
nop
mov
dec
mov
scas
mov
xor
push
popf
mov
sub
fistps
inc
andl
lret
fmull
cbtw
push
lea
adc
hlt
pop
flds
inc
stc
clc
sub
sbb
ljmp
sbb
jl
mov
mov
xchg
jno
jb
pop
push
mov
fucomip
in
lret
aaa
mov
pop
sbb
out
test
cli
pop
in
out
pop
adc
lods
mov
fmuls
dec
xchg
sub
into
xchg
subl
adc
adc
mov
mov
adc
and
gs
fcomps
lods
inc
jns
mov
cwtl
cmp
xchg
dec
dec
jne
xchg
mov
repnz
push
sub
lret
cmp
mov
inc
ret
popa
lret
xchg
mov
pop
insl
mov
mov
push
daa
jmp
in
fldenv
cmp
jae
notl
int
arpl
cmp
fstl
lds
add
add
ss
cltd
pop
mov
pop
test
mov
out
fsubs
xor
ss
dec
aad
outsl
sub
and
push
jmp
jae
or
mov
adc
sub
or
and
adc
movsl
lock
jo
adc
das
ret
daa
fildl
pop
loope
mov
out
dec
int
out
dec
and
sbb
fsubr
sub
je
xor
jno
arpl
sub
leave
or
pop
or
fistl
xor
mov
and
js
in
xor
jge
xlat
or
loopne
add
xchg
std
inc
or
push
add
daa
loopne
sub
dec
and
inc
push
inc
adc
je
stos
into
mov
cwtl
loopne
mov
movl
pop
test
xchg
js
dec
subb
mov
or
and
push
nop
mov
jns
fidivrl
popf
mov
faddl
cmc
sbb
clc
pop
or
aad
add
add
inc
sub
pop
loope
fwait
in
enter
loopne
pop
negb
jle
xlat
sarb
out
loop
push
xchg
data16
int
jo
insb
dec
push
push
js
sbb
pop
push
add
dec
adc
lahf
and
sbb
xchg
rolb
add
and
shlb
pop
repnz
ftst
adc
idiv
sbb
dec
lcall
inc
dec
cvtdq2ps
mov
movsb
mulb
shll
mov
out
shll
mov
sub
mov
pusha
jne
les
fnstcw
lret
cmp
jg
push
outsb
loopne
add
enter
xchg
pop
into
in
aad
popf
mov
inc
add
adc
fbstp
adc
inc
mov
xchg
lret
pop
lods
out
hlt
shrl
nop
loopne
repz
fstpt
pop
add
ret
lods
xchg
loopne
cmp
xchg
arpl
js
adc
sub
aad
mov
push
sbb
sub
sbb
mov
add
loopne
imul
xchg
add
push
cmp
popw
adc
insl
cmp
les
sub
xchg
aaa
psllw
jne
sub
cmp
or
push
scas
lea
cmp
or
mov
je
mov
or
stos
stc
dec
adc
sub
add
loopne
fnsave
int3
mov
pop
into
fcoms
xor
adc
xor
push
je
icebp
push
pop
repz
push
xlat
or
mov
call
shrl
xchg
or
jo
pushf
clc
adc
cld
push
mov
sub
shl
call
nop
rcr
adc
add
hlt
loop
in
xchg
lds
aam
mov
hlt
sbb
mov
js
fcoms
add
nop
ljmp
jg
sbb
xchg
xor
xchg
in
nop
mov
pusha
loop
bt
dec
or
rolb
inc
dec
adc
dec
adc
data16
shrd
and
rclb
push
lret
je
and
and
mov
mov
jl
mov
dec
mov
jo
pushf
loop
sbb
enter
syscall
ret
jo
sbb
push
add
or
shl
in
imul
push
and
jg
jo
mov
hlt
je
adc
cmp
xchg
dec
or
mov
lock
mov
mov
mov
flds
out
adc
and
xor
mov
lods
movsb
and
jbe
jmp
ss
repz
jmp
sahf
or
lret
or
nop
xor
test
int
mov
js
inc
ret
xor
cmpsl
ljmp
push
pop
xor
sub
test
mov
lods
aam
stos
jl
mov
push
add
mov
outsb
or
xor
add
jmp
fmull
dec
sbb
push
add
loopne
into
xor
int
xchg
punpcklwd
faddl
das
in
sub
sbbb
mov
fwait
ss
bound
cmp
cwtl
cltd
add
cmp
fidivl
lcall
xor
loop
stc
sub
add
addl
jo
adc
or
xchg
add
xchg
cmp
add
dec
mov
pop
mov
mov
pop
movsb
push
sub
mov
mov
mov
push
into
adc
sbbl
nop
sti
or
and
add
movsb
orl
pop
mov
mov
int3
xchg
or
dec
push
xor
xchg
nop
bnd
xchg
mov
addb
repnz
and
fdivr
push
inc
or
movsb
shlb
rcl
cmc
add
inc
mov
push
pop
orb
pusha
add
sub
sub
addl
ffreep
adc
adc
testl
cmp
cmp
popf
enter
pop
loopne
mov
mov
add
pusha
push
nop
mov
sub
mov
dec
adc
nop
or
and
mov
sub
fsts
into
iret
dec
and
push
xor
cmpsl
mov
xchg
cmp
add
out
inc
xchg
add
mov
jl
adc
sub
ja
ret
adc
xlat
sbb
mov
mov
mov
cli
pop
sbb
adc
sbb
pop
xor
adc
js
popf
mov
xlat
jo
cmp
outsb
loopne
jecxz
add
int3
adc
loope
sub
jmp
pop
jmp
pop
scas
push
negl
ret
scas
xlat
pop
aad
sub
pop
xchg
sub
jmp
and
jmp
or
add
xchg
loop
adc
test
or
or
pop
adc
jbe
sub
outsb
jae
aad
push
mov
mov
jmp
ficoms
dec
cvtpi2ps
xor
cld
push
in
push
adc
mov
popf
iret
stos
push
dec
push
cwtl
mov
mov
mul
mov
add
stos
clc
sub
push
aas
cmpsb
push
add
stc
dec
jmp
stos
or
cvttps2pi
pop
and
xor
scas
dec
in
pop
out
or
push
or
ljmp
or
xor
dec
leave
sbb
jecxz
sub
enter
mov
xor
hlt
sbb
xchg
rorl
iret
subl
iret
imul
outsl
and
out
insb
mov
fsubr
sub
mov
or
jl
dec
lret
xchg
lret
add
in
mov
sbb
fsubrs
shrl
fists
das
rcl
hlt
cmp
or
pop
xchg
stc
mov
test
stc
cmp
scas
iret
fldt
jle
sbb
jecxz
lods
xchg
sbb
stos
loopne
or
mov
sti
mov
mov
in
sub
mov
clc
and
add
sub
add
sti
xchg
in
inc
insb
not
dec
mov
mov
roll
dec
call
push
jne
dec
xchg
vmovhps
mov
add
mov
sbb
mov
cltd
cld
out
sub
jg
mov
sub
push
xchg
push
add
pop
jae,pt
clc
roll
bound
dec
cmc
xor
jg
aas
cmp
and
adc
push
imul
cmc
mov
xchg
sub
pop
xorl
arpl
lods
nop
out
and
dec
push
in
rcr
or
rol
inc
add
or
inc
add
jb
or
sti
pop
adc
test
out
rcll
xor
pop
jge
cld
ret
in
js
ret
aaa
addr16
sub
add
mov
pop
out
sbb
mov
enter
lock
out
cld
dec
dec
push
lcall
cltd
or
sbb
mov
mov
mov
shlb
xlat
push
outsl
dec
bound
adc
lods
out
mov
fmull
loope
mov
add
int
mov
imul
hlt
add
jae
imul
ss
rcr
mov
jae
sub
repz
add
arpl
sub
xlat
scas
cld
jmp
cld
lods
push
pop
sub
scas
dec
push
jae
shll
cmpb
punpcklwd
mov
and
lock
xchg
inc
cmp
adc
fwait
lds
xchg
out
leave
push
lods
or
leave
xchg
test
mov
add
mov
popa
add
xchg
ja
int3
and
mov
popl
sbb
sbb
or
in
dec
cwtl
and
psubw
inc
pop
std
sub
adc
sub
dec
push
les
iret
es
mov
or
mov
mov
inc
lds
aaa
xchg
cli
and
sub
in
mov
jo
mov
mov
fiaddl
or
or
lcall
addr16
movsb
in
push
rcrb
xlat
nop
add
mov
dec
aam
ret
or
fstl
add
scas
movsl
fnsave
pop
scas
adc
hlt
cmp
jecxz
push
in
cmp
lcall
and
fcoml
stos
loop
shlb
addr16
xchg
aad
test
or
cmp
int
jo
nop
test
or
sub
mov
sarb
or
lahf
faddp
dec
mov
jo
dec
stos
or
inc
jnp
dec
in
cld
leave
jmp
push
in
insb
push
negl
sub
lahf
xlat
out
out
mov
mov
add
andps
jae
add
add
outsl
adc
lds
test
sub
adc
ret
arpl
repnz
jmp
mov
gs
mov
sub
in
ret
adc
dec
nop
or
outsb
stc
out
adc
cs
push
add
insb
adc
mov
adc
hlt
loop
ljmp
push
or
in
test
dec
repnz
sub
popf
cmp
sub
push
inc
lock
adc
adc
or
and
or
shlb
push
sbb
xchg
hlt
mov
sti
insb
rorb
test
pandn
mov
pop
dec
sbb
jne
inc
adc
sub
mov
adc
and
cld
xor
adc
mov
xchg
orl
pop
push
xchg
xchg
sbb
sub
fwait
jl
clc
mov
mov
insl
xor
ret
or
sub
adc
cwtl
mov
adc
pusha
adc
lret
and
into
adc
and
testl
jecxz
lock
data16
stos
dec
pop
sti
int3
adc
sub
test
mov
or
xor
xlat
and
pop
mov
adc
lcall
test
mov
mov
adc
cwtl
adc
lret
mov
std
xchg
clc
orps
and
call
mov
mov
add
xor
fimuls
fildl
mov
sbb
hlt
das
pushl
sbb
sbb
fcoms
fidivs
ret
loope
cmp
ret
clc
sub
inc
out
mov
or
cmp
mov
push
cmp
cmp
loope
shll
pop
pop
push
add
leave
mov
dec
nop
sub
mov
xor
jb
stc
mov
shlb
ja
sbb
mull
fs
nop
lret
outsl
xor
sub
fistpll
and
icebp
or
das
rcrl
idiv
repz
adc
xor
popa
in
dec
and
mov
or
int3
xchg
push
add
repnz
shlb
push
hlt
jbe
mov
mov
int3
je
shl
icebp
mov
divl
or
sbb
aad
mov
push
pop
pop
or
add
sar
push
or
sbb
test
add
or
repnz
pand
adc
fwait
fwait
mov
jl
dec
lock
shlb
loope
loopne
or
sti
in
mov
pop
popf
sub
jmp
xor
pop
mov
mov
or
loop
push
jp
mov
push
jmp
xchg
push
fistl
adc
stos
jno
filds
rol
sti
add
rcrb
call
xchg
int
cltd
stc
push
data16
repnz
cmpl
in
popa
nop
lret
lds
jbe
rclb
and
mov
push
mov
daa
nop
mov
dec
jmp
mov
enter
jl
loop
fnstsw
inc
xor
inc
push
arpl
sbb
xor
cwtl
adc
imul
neg
cmp
sub
adc
add
add
lods
out
cltd
lret
jae
adc
cmpl
js
lret
adc
aaa
mov
mov
add
cmp
out
in
jbe
xchg
adc
xchg
mov
inc
stc
ljmp
out
push
lahf
jbe
adc
xchg
mov
jns
xchg
sti
scas
and
jae
jecxz
imul
and
xor
iret
lret
out
test
cwtl
cmpsl
mov
mov
movl
cmp
mov
loop
add
hlt
bswap
sub
test
jl
dec
in
push
cmp
jae
aaa
bound
test
in
add
jmp
mov
mov
xchg
lahf
xchg
mov
ror
hlt
repnz
clc
sub
into
pushf
sub
mov
sub
adc
add
xchg
aad
in
and
repz
xchg
mov
sbb
xchg
out
stos
sbb
int
or
aad
pop
ja
mov
or
adc
pop
out
popf
push
mov
jge
xor
decl
jmp
or
mov
sub
lret
loopne
in
xor
lahf
or
roll
cmp
aam
popa
sar
nop
cltd
inc
mov
add
inc
call
jecxz
add
or
push
and
cmp
gs
sbb
sub
jg
sub
aaa
pushf
int3
aam
xor
push
mov
pop
push
adc
push
push
sub
cld
push
xlat
sub
out
fstps
stc
cmp
jnp
push
add
addr16
adc
fists
sbb
sub
in
hlt
cmp
xchg
je
rorb
inc
fistpl
push
fsubrl
in
imul
add
pop
mov
outsb
stos
jg
nop
or
iret
je
mov
inc
jne
imul
mov
enter
mov
fistpll
xchg
mov
cwtl
movsl
sub
add
or
xchg
mov
xor
dec
xor
adc
sti
pusha
ret
repnz
repz
cmp
out
pop
in
adc
jbe,pn
adc
lods
and
mov
sbb
mov
insb
sarb
lret
addl
or
fstpt
inc
dec
testb
push
dec
cmpl
repnz
inc
jmp
or
mov
jge
push
jno
nop
test
add
add
dec
je
xchg
loopne
sub
pop
inc
push
addl
enter
mov
xchg
or
les
xchg
jle
or
pop
out
fs
in
mov
ljmp
jnp
arpl
inc
xchg
cltd
out
cs
mov
sbb
shrb
mov
ljmp
aaa
mov
lods
lds
lds
sbb
in
lret
push
xchg
iret
aad
cmp
mov
insl
xor
aad
pop
inc
mov
dec
dec
add
jmp
in
leave
cli
loopne
mov
sub
xchg
adc
fcompl
inc
shr
repnz
fiaddl
sub
out
inc
orl
add
incl
out
mov
enter
mov
sbb
adc
sub
fsubl
xchg
fildll
sub
pushf
rol
add
pop
dec
loope
xchg
ret
xor
inc
arpl
or
push
sbbb
jle
mov
addb
rolb
add
std
mov
pusha
pop
mulps
sub
loop
mov
pushf
jmp
xchg
in
addl
mov
push
in
pop
jg
add
and
or
dec
sbb
div
adc
or
out
mov
cmpl
and
fnsave
mov
outsl
or
dec
add
or
mov
mov
cli
xchg
addr16
sbb
ret
add
vmovlhps
jecxz
xchg
dec
roll
enter
ljmp
out
ljmp
mov
not
push
cwtl
mov
lock
addl
pop
daa
das
ljmp
sub
lret
imul
lret
stos
in
ftst
stos
xchg
mov
cmp
int3
repnz
nop
push
dec
ret
hlt
cs
xchg
add
out
call
aad
fs
leave
jecxz
cwtl
mov
fiadds
mov
data16
sahf
cmpl
rorb
test
cmp
mov
push
mov
icebp
dec
aas
cmp
cmp
cmp
enter
icebp
cmp
and
leave
jns
loope
adc
mov
sbb
jmp
aaa
dec
dec
mov
add
sbb
inc
pop
stos
push
dec
sar
or
inc
push
in
xchg
jae
push
stc
pop
add
push
test
shr
xchg
test
add
xchg
ret
xchg
out
je
xchg
mov
jmp
adc
or
mov
cmp
add
scas
adc
or
dec
ss
pop
dec
jl
movsl
rorb
jbe
insl
fs
sbb
ret
cmp
fdivp
call
mov
lcall
add
xor
add
mov
and
or
mov
mov
xchg
sub
lret
or
and
in
and
jge
xor
psubsb
int3
call
iret
fstp
lods
ret
dec
adc
div
or
int3
or
in
out
fbld
cmpsb
add
leave
adc
popf
andb
push
fcmovnb
jmp
push
dec
test
std
ss
push
insb
roll
dec
stos
loopne
and
lret
inc
testb
pop
mov
icebp
faddl
sbb
add
jbe
or
xor
sub
push
push
xchg
xor
add
cmpsl
add
aam
inc
ja
dec
sbb
int
sti
or
inc
xchg
movsl
sbb
cmp
xor
lcall
ret
loopne
lock
in
jne
repz
lods
shlb
cld
xorps
add
imul
push
js
adc
ficoml
loope
and
sbb
dec
dec
into
sub
lahf
dec
test
sbb
dec
ret
int3
inc
adc
pop
xchg
shlb
or
outsb
aad
enter
cmpsb
in
test
adc
outsb
sbb
in
mov
dec
push
outsl
movb
mov
push
adc
leave
mov
and
pop
inc
or
mov
xor
mov
rorb
lods
dec
imull
into
stc
or
add
pop
mov
sbb
dec
mov
sub
sub
aas
inc
jne
fists
pop
shlb
mov
stc
cmp
push
and
fistl
push
mov
in
or
dec
ds
sbb
xchg
xor
mov
out
out
jae
aas
xor
stc
ss
cli
in
mov
xor
fcmovu
push
sbb
in
mov
push
or
pusha
sbb
lods
mov
loopne
push
xor
jo
enter
pusha
aas
mov
push
lds
dec
dec
push
rolb
jecxz
push
jle
cltd
fs
jnp
add
mov
ret
adc
xchg
shll
or
insl
fnsave
add
add
sbb
test
arpl
push
cmpsb
ret
cli
and
lret
pop
in
scas
inc
jns
xlat
jne
les
push
sbb
sub
push
jo
leave
and
je
dec
push
fs
jecxz
dec
jnp
imul
add
inc
out
mov
dec
stc
movsb
mov
insb
mov
lods
shlb
icebp
mov
mov
jmp
cltd
mov
into
sub
adc
lahf
xchg
jno
dec
fwait
sub
jecxz
or
mov
cmp
ds
pop
mov
aas
inc
movsb
jle
dec
ds
fcoml
das
dec
mov
lea
and
sbb
ret
dec
fst
mov
js
mov
in
addl
jmp
dec
out
mov
dec
jecxz
mov
xchg
pop
lea
pop
mov
cli
dec
fdivp
aam
mov
push
jg
adc
insb
xor
and
jnp
adc
dec
cmp
add
mov
push
add
adc
subl
lock
ljmp
sbb
rcrb
pop
test
cmp
and
aam
movsl
dec
loop
insb
sbb
sbb
and
les
outsb
mov
xlat
xor
xchg
adc
adc
rorl
jbe
push
ret
add
and
jae
and
je
sbb
inc
adc
add
pop
sub
push
aas
mov
mov
jne
lcall
add
in
inc
clc
sbb
lock
add
add
into
sbb
pop
push
je
add
sub
or
and
mov
sti
xlat
cmp
loop
cmp
sub
lahf
test
out
cmpl
push
inc
inc
aaa
test
sarl
out
mov
or
dec
mov
jbe
aas
out
mov
push
gs
jns
adc
inc
inc
xor
mov
or
inc
and
lods
insb
cmp
xchg
mov
fisubrl
sub
adcb
xor
jnp
or
cmp
and
add
lock
cmp
jle
add
mov
xchg
daa
test
mov
imull
rcll
mov
adc
test
xchg
xchg
mov
mov
mov
mov
xchg
loopne
xchg
out
lret
in
cmp
pop
add
mov
adc
aad
testl
enter
or
in
cmp
dec
or
adc
jge
xor
jp
jbe
movsl
loopne
rcll
adc
and
push
xchg
das
mov
testb
push
call
jnp
stos
notb
add
jnp
testb
iret
sbb
sub
mov
add
and
jge
shlb
jecxz
lahf
jo
jno
inc
push
sub
repz
or
pusha
mov
sbb
enter
jbe
iret
cmp
decb
sub
int
push
movsl
fmuls
jle
call
xchg
mov
sti
or
fdivp
lahf
sub
pusha
and
dec
jge
or
sbb
fcomip
in
inc
ljmp
popf
or
push
xchg
scas
dec
jbe
out
adc
lahf
leave
pop
gs
add
mov
push
out
ret
popf
inc
out
jb
cmp
dec
mov
add
das
popl
arpl
sbb
jne
faddl
fsts
loopne
and
sahf
rcrb
roll
lret
insb
call
or
mov
mov
bound
xchg
push
loopne
adc
and
jb
mov
les
ffree
mov
jbe
aad
flds
fmul
jo
stc
clc
xor
jno
les
int
jg
aam
stos
pop
hlt
adcl
xor
adc
leave
xchg
testl
iret
loope
pop
add
adc
lret
mov
out
mov
push
out
cmpsl
lods
push
jmp
gs
mov
ret
in
jmp
cmp
imulb
mov
jg
push
and
in
aam
inc
cmp
add
jl
mov
sbb
rolb
mov
and
dec
sub
outsl
sar
cwtl
push
movsb
lods
push
mov
out
pop
shrb
cmp
rcl
or
and
jmp
and
lahf
sub
inc
aam
enter
mov
lock
adc
xor
leave
mov
pop
inc
cmc
rorl
fidivrs
das
or
mov
scas
jbe
xor
in
sti
mov
addb
sub
test
out
and
mov
sub
cmc
push
inc
iret
aam
mov
or
stos
or
jecxz
call
dec
lahf
loop
aaa
sahf
mov
mov
push
pop
js
pop
in
jge
push
js
mov
cmpb
rcr
push
cld
dec
xchg
daa
sub
dec
imul
pop
mov
pop
dec
sahf
daa
in
movswl
or
mov
or
pop
loop
fsubr
inc
add
xor
in
add
and
leave
js
and
add
popf
xlat
or
inc
mov
cmpsb
mov
popl
repnz
aad
xchg
ret
lret
sbb
mov
jl,pn
fcmove
push
sub
pop
andl
fs
xor
xchg
adc
jns
fstpt
add
pop
push
sbb
in
push
add
pusha
add
movsl
add
fwait
cld
lcall
and
mov
loop
add
dec
mov
adc
mov
in
bound
sub
and
mov
pop
cmp
push
lea
mov
pushf
mov
out
pop
aas
fs
or
mov
xor
mov
adc
lahf
add
pop
inc
pusha
das
leave
aaa
sub
sub
xchg
xchg
lret
rol
rorb
loope
jb
lods
sub
adcl
xchg
xchg
dec
inc
cmp
arpl
loope
push
adc
data16
jb
cmp
lds
dec
adc
adc
pushf
repnz
xchg
xchg
push
hlt
aad
cmp
mov
sarl
fimuls
adc
stc
stos
cli
cmp
mov
fs
dec
and
mov
lret
cmp
adc
sub
push
shlb
aas
ds
and
xchg
pop
dec
xor
jmp
add
xchg
out
sbb
push
rolb
notb
adc
push
lods
into
rorb
fwait
push
loope
fstpl
repz
pop
xchg
aad
cmp
pop
xchg
int3
test
dec
pop
xchg
leave
int3
repnz
cmp
ret
in
fidivrs
jle
add
fisubrs
mov
jae
adc
pop
mov
scas
dec
xlat
hlt
mov
fwait
sub
fnstenv
mov
mov
cmpsb
mov
stc
xlat
cmp
aam
imull
adc
or
popf
jecxz
adc
xor
clc
in
lahf
mov
fxtract
fisubs
or
mov
aam
mov
xlat
rcrb
scas
jge
loopne
jp
gs
add
ds
call
stos
lret
adc
pusha
cmp
push
ret
sub
std
adc
push
cmp
jp
in
int
jbe
xchg
ret
scas
cltd
xchg
pushf
mov
cltd
cltd
jno
test
mov
xchg
add
adc
mov
gs
pop
sbb
pop
cmp
and
sub
push
loopne
fnstsw
out
add
fcomp
lret
cmc
mov
cld
jb
loopne
popf
xlat
or
aas
xchg
pop
cmp
push
push
dec
add
lret
dec
or
or
fisttpll
or
sbbl
rolb
movsb
mov
sbb
or
lods
ror
xchg
push
in
xor
xchg
je
jae
xchg
ret
cmp
lods
hlt
pop
sub
pop
aaa
fwait
add
loopne
sbb
imul
cmc
sbb
sub
lock
icebp
lods
call
mov
sbb
lods
xchg
jno
cmpsb
int3
sbb
adcl
in
popf
aam
lahf
adc
lock
mov
adc
jnp
loopne
and
and
dec
in
jecxz
sub
adcb
jno
in
ret
lahf
cld
int
pop
insb
sahf
add
add
mov
sub
adc
mov
dec
mov
jbe
mov
movsb
shlb
xchg
pop
shufps
xor
iret
dec
outsl
add
xor
ficoml
pushf
dec
movsb
hlt
and
adc
mov
mov
call
xchg
adc
sub
mov
cmp
fscale
xchg
push
rclb
pop
mov
adcb
fnstenv
mov
or
mov
inc
das
daa
add
out
inc
lods
int3
cmp
mov
or
ss
insl
out
ds
es
inc
dec
dec
scas
daa
ljmp
dec
data16
mov
adcb
cmp
test
sti
sub
xchg
aas
int
lods
data16
xor
in
addr16
ret
sub
dec
mov
and
cmp
pop
js
jg
andl
pop
hlt
rorl
inc
movb
cmc
or
sti
xchg
jae
push
gs
lret
pop
or
jae
and
mov
mov
cmp
inc
cs
mov
cmp
out
insb
pusha
sahf
popf
sbb
push
repnz
cld
rclb
adc
jg
push
lods
fsubrp
in
aaa
xchg
jo
sarl
lahf
adc
inc
nop
inc
push
int
mov
or
adc
sti
lret
jbe
orl
jb
stos
repz
outsl
sbb
xchg
in
jbe
or
lahf
leave
or
and
adc
cmp
lods
imul
cltd
test
stos
icebp
jae
cli
jmp
loope
sbb
ds
push
or
hlt
xchg
lock
lret
pop
xor
pop
pop
lods
sub
push
jl
cmpsb
aaa
loop
xchg
xchg
mov
div
in
jno
adc
into
les
pop
scas
xchg
and
xor
inc
bound
add
pop
outsb
ret
xor
sbb
call
pop
push
push
add
or
adc
iret
push
jl
aas
rorl
gs
ja
out
mov
rol
inc
sahf
mov
call
xor
jle
sub
push
inc
mov
and
add
movsl
dec
and
and
mov
int3
loopne
les
dec
jmp
add
sub
mov
dec
rcr
push
scas
mov
pop
jmp
ss
and
xchg
adc
cmpsl
fwait
sub
sbb
or
cmc
jmp
lahf
test
fwait
mov
lock
repz
xchg
std
jno
sub
sbb
or
rolb
push
fistps
jb
stos
repnz
fmul
xchg
out
ljmp
pushf
lods
mov
pop
inc
gs
sub
sub
stc
dec
scas
into
cmp
rorb
mov
mov
inc
insb
nop
jno
in
loope
and
movsl
mov
lahf
mov
fiadds
icebp
sbb
addl
mov
and
fldt
sub
mov
inc
or
cld
mov
mov
subb
fstps
xor
and
lret
dec
jo
out
lret
pop
cmpsb
outsb
movsl
add
mov
mov
fildl
xor
loopne
dec
adc
cmp
dec
mov
les
insb
stos
popf
loop
cmp
mov
mov
jb
xchg
movzbl
sbb
fldl
lods
nop
push
push
cltd
mov
repz
addb
mov
jnp
jb
mov
leave
xor
std
aaa
movsb
pop
or
cmp
icebp
loopne
into
fistl
dec
leave
mulb
adc
cmc
out
mov
adc
push
sub
mov
in
jo
inc
filds
stc
aad
jb
mov
push
add
daa
mov
sahf
dec
fs
loopne
cmpl
sub
lahf
add
mov
adc
or
push
aam
push
out
shr
adc
mov
insb
aaa
xchg
sti
mov
loope
jae
xchg
aas
cmovge
pusha
iret
in
pop
adc
add
sbb
fdivrs
js
in
mov
aam
dec
push
ss
inc
je,pt
push
test
xchg
or
sarb
shl
sub
mov
test
int3
mov
jo
js
fisttps
push
jne
jg
shrb
dec
and
sub
lods
stos
adc
add
add
jne
and
aad
and
pop
lock
inc
sbb
inc
or
xchg
add
mov
clc
push
lock
adc
sbb
sub
outsl
push
mov
push
testb
sbb
loopne
lods
xchg
xor
iret
jl
push
mov
mov
dec
hlt
sbb
jnp
dec
cmp
add
sub
sub
das
jae
cmp
icebp
push
lret
js
fs
out
adc
imul
mov
addr16
push
mov
mov
pop
lock
pop
or
or
int3
or
inc
add
nop
lahf
fs
mov
pop
xor
or
add
xchg
sub
and
sbb
out
push
mov
imul
cmp
into
mov
pop
add
mov
rolb
adc
add
mov
add
push
mov
or
mov
mov
add
and
in
push
push
cli
mov
xchg
add
cmp
or
add
lahf
ret
shrb
test
dec
dec
lds
fldcw
pop
sbb
addl
leave
stc
push
mov
cmp
dec
aad
shl
xchg
adcb
add
mov
mov
jg
out
mov
adc
dec
popf
mov
xor
int3
xchg
cmp
stc
sub
popf
cmp
add
push
mov
repz
mov
test
mov
lods
fadds
cmp
ja
pop
add
cmp
fildl
mov
push
cld
loopne
jp
sub
adc
pushf
aam
jg
add
jne
les
add
jg
icebp
ret
push
out
das
inc
ds
and
aas
ljmp
int3
mov
movsb
add
xor
jp
inc
out
push
addr16
data16
cmp
add
int3
and
and
push
test
or
nop
fs
mov
mov
leave
xchg
and
sub
aad
xlat
mov
clc
xlat
pop
mov
int3
test
xor
or
lret
or
nop
addr16
sub
fs
mov
in
fisubl
adc
aam
ja
inc
sahf
adc
sarb
cmp
es
pop
jns
clc
mov
mov
test
rolb
add
inc
in
push
nop
in
movswl
outsb
lret
dec
stc
js
mov
mov
cmp
ficoms
and
xorb
jle
add
lods
mov
cli
xchg
cmp
scas
add
push
bound
cmp
fcmovb
inc
inc
inc
pop
xchg
xor
mov
jg
add
mov
pop
out
or
push
es
shll
call
fistpll
add
adc
xchg
out
sbbb
test
cmp
mov
adc
and
in
sbb
mov
cli
aas
sbb
adc
push
andb
sti
dec
in
in
adc
jbe
and
and
cwtl
mov
sti
test
nop
adc
ja
xchg
xor
or
mov
mov
cltd
dec
frstor
rolb
jo
jg
jae
mov
dec
shrb
cli
out
adc
int
sub
mov
fdiv
add
mov
or
sbb
hlt
ret
jb
daa
es
xor
add
add
leave
cld
dec
mull
insb
inc
ret
pop
hlt
sbbb
push
mov
aad
inc
ret
sub
ja
mov
xor
call
nop
hlt
les
aas
jl
adc
cli
sub
jo
or
push
mov
cmpb
push
stos
mov
testl
dec
pop
fimuls
call
fcoms
ficompl
adc
inc
mov
pop
popa
addr16
sub
cmp
fwait
aaa
cmp
add
mov
hlt
sub
cs
xor
pop
mov
or
repnz
icebp
sbb
mov
std
int3
addl
shlb
les
mov
ja
jb
shll
movsb
dec
xchg
dec
out
inc
add
inc
in
lahf
sbb
in
stos
pop
out
xchg
add
add
aas
sahf
and
lret
mov
mov
out
mov
aad
inc
pop
pop
add
insl
es
js
adc
ss
mov
ss
pop
gs
xchg
xor
push
jne
or
ljmp
sahf
shll
out
andb
push
mov
mov
dec
sbb
pop
adc
rclb
andb
cmpsl
test
sbb
lret
mov
or
jg
shlb
sub
or
sbb
dec
shlb
ficompl
mov
sar
xor
mov
or
adc
push
imulb
adc
jb
mov
cld
movsb
shlb
ja
out
or
xor
sub
inc
loop
mov
mov
ret
mov
mov
popf
xlat
in
call
jmp
fsubrl
xchg
lcall
rcll
and
xor
fwait
cmp
mov
adc
adc
or
cld
sub
cmp
xor
in
clc
sub
mov
inc
inc
subl
jae
insb
shr
sub
add
push
cwtl
mov
adc
loop
xchg
xorb
push
sbb
outsl
mov
popf
add
popa
daa
inc
iret
mov
jae
adc
push
pop
in
xchg
pop
xor
cmp
js
into
fimull
in
pop
fst
jmp
aaa
dec
mov
dec
adc
aas
loop
jmp
xchg
mov
mov
add
pop
inc
sbb
inc
clc
xchg
push
es
lcall
pop
adc
push
sub
sub
jg
mov
icebp
xor
sbb
sti
shll
pushl
in
adc
int3
mov
sub
fcomps
xchg
stos
jp
push
fdivrl
out
push
clc
shrb
mov
adc
inc
sahf
imul
inc
in
inc
mov
or
cmp
out
mov
add
les
and
adc
cld
femms
cmp
mov
xchg
mov
cmp
add
push
int3
pop
xorl
lcall
mov
into
hlt
call
adc
test
loopne
cwtl
push
daa
popf
mov
out
shll
loopne
xchg
pop
mov
dec
idiv
adc
adc
fs
or
xchg
outsb
data16
in
pop
hlt
adc
mov
add
sub
or
inc
movsl
sbb
stos
sub
push
mov
mov
or
sub
inc
out
neg
mov
ds
out
scas
aam
aas
pop
pop
cmp
xchg
inc
pop
pop
and
ret
sub
das
mov
sbb
bound
loop
or
or
add
inc
mov
add
mov
push
movsl
mov
mov
mov
mov
loop
pusha
adcl
jp
push
mul
nop
push
mov
sbb
stos
dec
adc
jecxz
cli
or
add
add
dec
ds
in
xchg
je
sbb
mov
pop
dec
int
cltd
cs
mov
jne
add
movsl
mov
dec
jmp
sub
hlt
mov
sbb
pop
aas
fs
movsb
inc
add
cmp
sbb
or
int3
mov
insb
call
loop
add
mov
cwtl
adc
or
icebp
ficoms
out
xchg
popa
lahf
nop
jne
jnp
aad
adc
repnz
push
lret
lret
mov
add
shlb
push
mov
cltd
or
fcoml
adc
mov
repnz
pop
or
or
add
repnz
sarb
lret
mov
ficoml
shlb
insl
sbb
mov
shlb
push
les
out
sub
mov
sub
sbb
and
xchg
xchg
mov
or
sbb
add
mov
push
sbb
pop
sti
idiv
dec
in
jo
sbb
dec
and
xor
fcmovnb
xchg
mov
cld
lahf
adc
imul
push
inc
add
rolb
dec
shlb
push
lock
mov
fiaddl
inc
or
jo
fs
mov
and
jb
mov
enter
or
test
mov
bound
adc
repnz
mov
adc
xor
or
lds
fiadds
and
jmp
and
push
xlat
ss
addr16
inc
int
adc
add
lods
inc
lods
out
xor
stos
divb
and
push
jmp
test
cmp
in
xor
jg
jmp
add
and
jb
mov
xor
test
fimuls
dec
jge
mov
mov
jnp
jns
pop
and
arpl
mov
sub
or
sub
outsl
add
repnz
or
mov
adc
lock
push
mov
fiadds
and
xor
ljmp
js
das
imul
sub
les
mov
xor
out
imul
mov
dec
add
mov
or
adc
jecxz
cs
pusha
in
inc
cmp
adc
jo
inc
lcall
mov
icebp
add
mov
test
add
cmpsl
or
add
lea
mov
mov
add
mov
rclb
jne
sahf
mov
fisttpll
push
popa
sub
test
imul
mov
les
pop
push
jmp
in
or
and
fidivrs
and
inc
hlt
ret
and
insb
je
or
cmovge
inc
pop
lahf
inc
ljmp
dec
pusha
iret
ret
daa
cmp
lgs
adc
sarb
std
cmp
outsl
add
jmp
sub
test
bound
sbb
test
sbb
fiadds
or
pinsrw
loope
pop
enter
cltd
inc
xor
add
or
mov
lock
mov
xchg
push
aad
int
hlt
in
insl
add
test
leave
add
mov
mov
lds
jb
addl
ss
lea
xor
pop
out
je
sub
pop
or
inc
les
rolb
mov
push
add
mov
ja
push
sub
push
mov
inc
or
push
fs
push
xchg
or
mov
push
stc
dec
out
dec
fmuls
daa
add
or
jns
push
in
sarb
popf
push
rolb
mov
popf
not
cmp
in
mov
jl
push
out
inc
mov
jecxz
push
and
pop
in
xchg
sarl
cmp
adc
mov
or
jbe
adc
cmp
inc
push
pop
jmp
dec
aaa
lret
inc
shrl
dec
sub
loop
dec
mov
loopne
mov
pop
mov
jg
fmull
add
jb
mov
mov
add
push
in
ret
js
inc
sub
imul
lahf
pop
ss
push
in
inc
fldcw
lcall
loopne
jmp
cwtl
dec
mov
sbb
or
mov
sahf
add
add
mov
orb
adc
sub
fbld
out
jb
test
jbe
sbb
adc
mov
int3
xrelease
out
pop
mov
ficoms
std
sub
scas
dec
or
and
enter
fs
xor
sub
sub
push
icebp
std
pop
push
cli
repnz
mov
cmpl
cs
adc
push
jmp
mov
out
sbb
call
jnp
xchg
sub
push
mov
out
pusha
or
ja
and
out
mov
pop
iret
push
sbb
jg
mov
add
pop
xchg
stos
xor
jmp
pop
popf
subb
pop
push
mov
inc
add
add
std
inc
ret
out
pop
add
mov
mov
shrl
test
sub
test
js
push
push
add
mov
loope
sahf
sti
divl
sbb
stc
inc
out
cs
adc
and
bound
push
int3
push
lock
cli
sub
dec
cs
and
or
add
xor
stc
push
inc
mov
scas
xchg
divb
inc
sbbl
loopne
add
pop
pop
and
cmp
mov
add
ret
fistl
and
sub
fwait
repnz
and
pusha
cmpsl
add
stc
ficomps
mov
popa
pop
test
adc
xchg
loop
sahf
sbb
push
aaa
lods
hlt
jg
jge
and
test
cli
cmp
and
dec
and
cmp
rorl
cmp
ss
mov
out
aas
test
or
dec
ss
int3
xor
hlt
cmp
push
pushf
roll
out
mov
xchg
ljmp
sub
nop
iret
add
and
dec
jne
mov
movsb
mov
rclb
pop
fdivl
popa
and
sub
cmp
popf
xlat
cld
sub
in
shlb
stos
mov
add
cld
sbb
mov
rcrb
sarb
movsb
mov
in
lods
sub
add
int3
sub
pop
adc
adc
imul
mov
jae
jg
mov
or
inc
add
sbb
pop
aaa
jnp
mov
or
adc
sub
adc
fs
xor
push
or
insb
scas
faddp
jnp
xorl
dec
push
mov
sar
push
xchg
pop
xchg
nop
xchg
sub
scas
mull
adc
dec
lahf
cmp
pop
mov
push
dec
pmuludq
dec
incl
mov
hlt
xchg
sahf
test
stos
dec
and
mov
cmpsl
lcall
mov
xchg
jnp
repz
adcl
cmp
pop
fnsave
test
movb
add
in
icebp
pop
add
sti
mov
ljmp
mov
fsubrs
into
mov
sub
fiaddl
movb
in
lret
xchg
rcl
sub
iret
inc
test
adc
mov
sbb
int
inc
lods
sbb
add
popf
or
dec
pop
xchg
repz
into
mov
xchg
repnz
xor
add
aam
mov
into
shll
shl
pop
dec
lods
mov
and
and
pop
adc
mov
int
stos
nop
dec
icebp
flds
into
aad
sub
lea
cwtl
dec
xchg
call
shrb
inc
add
repz
jbe
pause
dec
out
add
ja
imul
inc
popa
out
nop
mov
int3
out
enter
aaa
dec
mov
push
xchg
daa
enter
push
mov
sbb
mov
mov
add
or
movsb
repnz
adc
or
pushf
or
pop
int3
push
mov
pop
sbb
add
add
stc
movsl
enter
sbb
adc
repnz
rcl
mov
notl
cli
xor
add
insl
mov
ficoml
in
mov
xchg
mov
dec
repnz
in
xor
sbb
jne
xor
push
adc
dec
xchg
rclb
lret
fs
adc
mov
sbb
xchg
insb
jne
cmp
add
ret
std
dec
ljmp
inc
jl
fdivs
or
or
outsb
std
inc
out
mov
decl
ss
das
data16
pslld
xchg
pushf
mov
push
mov
jbe
aam
mov
dec
leave
pop
xchg
gs
mov
sbb
icebp
jae
sub
mov
test
sub
add
lods
pop
xchg
in
cmp
psubw
mov
add
nop
add
add
and
jno
loope
psubsb
loopne
pavgb
iret
enter
loopne
mov
lods
nop
repnz
stc
adc
test
cmc
mov
fwait
bsf
mov
push
scas
nop
int3
jl
lock
cmpl
out
mov
jnp
popa
cvtpi2ps
icebp
mov
push
jnp
enter
xchg
int
jmp
and
push
pop
push
mov
and
sbb
rclb
dec
and
call
fwait
sbb
cmp
pushl
lods
add
scas
loop
add
or
mov
adc
loop
ret
in
sub
adc
loope
mov
jg
inc
icebp
nop
int3
test
add
xlat
sub
aad
popf
mov
bound
jo
mov
jmp
mov
bsf
adc
insl
pop
cwtl
or
in
push
add
adc
imul
pop
add
rsqrtps
decb
or
mov
mov
int
shl
test
mov
cmp
fst
call
mov
bound
inc
or
inc
cmp
pop
xor
loopne
jmp
push
add
push
push
sbb
add
mov
out
xchg
or
mov
add
test
and
test
nop
lea
pop
scas
pop
dec
mov
mov
popf
test
sbb
ret
ret
sub
ror
push
aas
jl
test
pop
dec
movzwl
fs
frstor
push
add
xchg
cmp
inc
sbb
xchg
pop
adc
sub
daa
sbb
fcoml
and
inc
loopne
jae
jns
stos
dec
addr16
dec
jne
sbb
jno
jl
in
rorb
xor
jle
xchg
setle
xchg
pop
call
sbb
pop
out
clc
adcl
mov
cmp
popf
dec
mov
std
repz
adc
cwtl
cwtl
dec
sub
pmulhw
fld
repz
mov
adc
lahf
adc
stc
iret
push
adc
push
sets
xchg
or
mov
movsb
insl
xorb
fbld
and
push
je
or
xor
lret
pop
repnz
mov
call
insb
addb
aad
stos
add
sub
ds
popf
pop
xchg
lcall
inc
call
jge
fld
les
mov
pop
pop
push
movsl
sbbl
xor
outsl
and
cmpsb
cmp
inc
sub
or
pop
int3
mov
pop
xchg
mov
shl
into
mov
les
mov
out
int3
fwait
pop
adc
add
jmp
or
and
stc
in
mov
insb
jl
jo
xor
sbb
adc
out
dec
hlt
push
jmp
or
adc
pop
adc
pop
mov
push
test
lahf
xlat
fcmovu
jbe
js
fstl
xchg
mov
dec
xchg
or
push
ret
lcall
mov
cmp
in
sbb
adc
imul
or
add
mov
in
inc
xchg
or
sbb
xchg
movsb
xor
nop
adc
jb
not
call
push
notb
jg
cmp
xchg
popf
js
add
or
inc
aad
jbe
sbb
fiaddl
out
push
pop
mov
adcl
cmp
mov
hlt
push
cmp
out
aas
jp
aam
sti
fisubrs
clc
mov
lock
je
test
fmuls
mov
out
and
stc
inc
lahf
or
push
inc
cltd
cld
dec
or
repnz
xchg
je
adc
test
adc
out
adc
icebp
mov
adc
or
dec
adc
scas
lods
orb
adc
movl
lods
lret
loope
out
nopl
sub
ret
imul
mull
clc
sub
jo
push
adc
sbb
mov
inc
jmp
sub
inc
aas
sbb
jmp
pusha
out
lahf
xor
add
add
adc
add
xchg
pushf
adc
in
hlt
pop
jle
out
add
add
lret
xor
int
jbe
mov
cmp
mov
xchg
negl
push
lods
mov
push
ror
sbb
add
or
sbb
scas
rclb
adc
dec
dec
in
int3
and
xchg
sahf
ret
movsb
jmp
or
fisttpll
fstl
in
add
icebp
adc
push
pop
mov
jmp
cmp
jo
pop
push
nop
pop
xor
mov
test
lock
add
adc
inc
stc
inc
mov
sbb
and
mov
cs
mov
insb
cwtl
lcall
add
out
adc
inc
lahf
ret
mov
sbb
cmp
dec
xor
ficomps
push
popf
cli
out
mov
cs
in
jg
test
in
pusha
and
add
mov
int3
adc
cmpsl
add
stos
jl
cmp
jne
push
outsb
in
aas
cs
adc
cwtl
add
sbb
sub
out
fucomip
cmp
and
repz
scas
pop
leave
test
sti
into
test
add
fnstenv
ss
cli
mov
into
xor
into
lods
cmp
mov
ds
dec
mov
aam
stos
lret
std
gs
cmp
inc
insb
xor
cmp
rcrb
enter
mov
push
xchg
pop
add
push
xchg
mov
cmovl
iret
out
out
xor
cltd
aas
push
sub
aad
inc
push
icebp
and
jne
mov
inc
ret
adc
mov
mov
outsb
cmc
aaa
xor
nop
jmp
adc
mov
hlt
push
out
sahf
inc
loop
sbb
push
mov
imul
lods
xor
fbstp
movhps
adc
or
push
rcl
mov
stc
ja
xchg
test
adc
pop
adc
mov
jbe
leave
and
xlat
add
push
loop
imul
mov
test
imul
adc
xchg
add
mov
test
aad
cmc
icebp
pop
sub
mov
sbb
iret
mov
ja
adc
sarb
mov
out
push
sbb
sub
ljmp
out
adc
push
add
xlat
test
jecxz
aaa
mov
mov
aaa
fwait
repnz
lods
sub
cmp
pop
adc
xor
lods
movsb
ret
add
mov
shlb
test
mov
setbe
sub
cmp
dec
fs
mov
sahf
push
call
out
rcrb
xor
or
pop
mov
inc
ja
pop
add
aas
sub
in
add
inc
jae
sti
cmc
jb
out
push
jle
add
push
fnstsw
cltd
shlb
push
js
mov
dec
jmp
out
mov
or
cli
add
mov
xchg
and
incb
mov
test
pop
inc
or
arpl
test
mov
hlt
stc
sub
cmpl
rorb
push
lahf
cmp
jno
in
popf
push
mov
cmc
lret
in
or
insl
sbb
loop
hlt
pushf
orl
pusha
push
cmpl
js
jo
rcrl
mov
sbb
gs
notb
mov
lret
popf
lods
int3
int3
icebp
push
test
icebp
aas
ficoml
xchg
inc
iret
stos
add
fsts
int3
sub
js
xor
add
jmp
xchg
mov
or
daa
mov
and
adc
insl
mov
mov
call
inc
mov
jae
adc
js
popa
inc
mov
sbb
push
xor
iret
push
jno
lea
aam
fwait
add
mov
and
lret
loopne
dec
xor
cwtl
dec
add
cwtl
lcall
push
or
adc
out
xchg
push
mov
repnz
add
mov
or
repnz
jg
mov
xor
cmp
add
or
add
loope
jnp
repnz
rolb
mov
or
lock
fisubs
inc
cltd
movsb
adc
push
add
push
imul
sbb
into
fsubs
lgs
fidivrl
inc
aad
pop
sbb
in
add
cmp
mov
xor
and
test
aas
dec
mov
into
lods
pop
sti
xor
mov
pop
dec
dec
adc
stos
fidivs
dec
push
add
cmp
sahf
mov
mov
add
lea
test
call
push
hlt
popf
or
shll
sub
sarl
je
add
rorb
movsl
pushf
xchg
xor
sbb
or
add
lock
test
cmp
hlt
in
sbb
arpl
dec
sbbl
adc
in
rolb
fcomi
cmpsb
int3
xchg
addr16
add
mov
jl
mov
xchg
addr16
add
ffree
xchg
add
jno
insb
aad
and
ljmp
xor
iret
xchg
cmc
or
inc
psubd
add
loope
fdivs
rclb
add
nop
stos
xor
iret
insb
or
shl
imul
jge
pop
in
mov
int3
in
pshufw
jae
insb
in
shl
dec
jo
or
mov
mov
stos
lahf
mov
or
out
rcr
mov
popa
lea
dec
test
cmp
add
push
inc
inc
std
push
nop
cmp
jmp
mov
and
stc
mov
push
xchg
pop
push
cmp
out
or
mov
popf
bnd
dec
cmp
mov
stos
rcr
jl
pusha
jmp
pop
cltd
outsl
jg
call
cmp
test
add
sbb
sub
repnz
push
icebp
push
inc
fs
ja
in
adc
push
icebp
pop
mov
orb
mov
and
fnsave
xchg
int
pop
add
repnz
mov
mov
addr16
mov
enter
mov
sti
mov
out
cmp
jo
add
jb
mov
lret
pop
add
call
sbbb
shl
cmpsb
in
xor
xor
xchg
pop
add
int3
dec
test
fadds
repnz
adc
xchg
pop
mov
pushf
in
sbb
adc
jp
mov
shl
cwtl
mov
xor
stos
ja
push
test
or
cwtl
pop
pop
repnz
mov
cwtl
outsl
scas
add
push
sub
orl
cli
add
mov
xchg
es
adc
and
mov
cmp
into
lahf
add
dec
orb
outsl
pop
es
test
into
fnstenv
fs
adc
push
aam
out
sbb
imul
pop
es
adc
and
sub
in
ret
dec
or
mov
dec
or
jmp
movsb
decb
push
lock
jl
rorl
jbe
out
outsl
lahf
popf
test
fs
insl
adcb
add
aad
stos
adc
fcmovbe
fs
mov
repnz
xchg
shll
add
les
xor
mov
mov
adc
ret
sbb
sub
scas
nopl
sub
xchg
mov
jbe
jmp
mov
jno
jbe
nop
sbb
inc
or
pop
adc
test
xor
xor
js
insb
jo
jo
sub
sbb
push
jl
pusha
mov
mov
ljmp
push
dec
sbb
outsl
lahf
jecxz
add
jnp
dec
out
data16
push
mov
push
or
pop
pop
das
cmp
adc
pop
mov
jmp
or
movsb
movsb
leave
sub
push
cltd
ret
adc
or
test
and
push
adc
jne
in
push
rcl
xchg
test
icebp
push
push
test
shr
sbb
stos
test
lock
pop
or
nop
adc
or
loop
pop
xlat
in
inc
mov
in
fs
outsb
cmp
mov
popf
test
add
xor
jp
cmp
aaa
push
pop
jmp
dec
shl
adc
orl
stc
cmpsl
repnz
cmovb
xor
out
xchg
xor
in
jnp
divb
into
les
popf
xchg
jmp
mov
dec
mov
je
xor
pop
pop
lcall
mov
outsl
pop
mov
fimull
jbe
dec
sbb
and
call
and
cwtl
lods
mov
cmp
or
setp
fsubl
mov
notl
sbb
lahf
jne
mov
ret
mov
adc
int
push
scas
and
mov
add
sahf
in
stos
call
pop
lahf
or
sbb
jge
mov
out
jge
cmp
dec
fidivrl
cmp
imul
loop
repz
lods
loopne
dec
decb
notb
jno
jns
xchg
push
fmull
mov
and
es
or
int3
hlt
stos
adc
sub
test
les
enter
mov
push
rolb
add
insb
xchg
ret
and
out
and
call
into
hlt
cmpsb
jb
xor
adc
inc
cs
and
push
hlt
out
cmp
mov
in
lahf
jmp
jge
movsb
mov
sub
cmp
inc
xor
xor
call
jnp
cli
in
inc
loopne
adcb
in
stos
add
adc
jmp
xchg
xlat
sbb
push
nop
cltd
jge
push
mov
daa
fnsave
jbe
xor
inc
out
sbb
mov
ficomps
or
decl
cmp
xor
add
call
adc
jecxz
and
mov
test
xor
inc
je
ficoms
lods
xor
inc
inc
int3
les
adc
test
jp
jb
adc
sub
and
dec
adc
jb
lock
clc
add
jne
scas
shrb
push
add
mov
pop
mov
dec
cmp
or
lret
int3
cld
mov
xchg
addr16
scas
push
orl
mov
leave
lods
or
pop
cli
rorb
xchg
xor
mov
jae
adc
out
mov
les
fs
inc
pop
mov
add
push
or
adc
dec
pop
jle
les
add
sub
push
sbb
sub
testl
lret
int3
mov
push
mov
bnd
xchg
popa
push
nop
ja
sub
cmp
inc
cmp
imul
jns
mov
faddl
out
cmp
dec
pop
add
jg
adc
pushf
mov
sub
aad
call
jg
add
sub
loop
dec
jmp
add
dec
mov
xor
jecxz
lcall
xlat
fwait
adc
and
add
mov
inc
or
int
clc
in
subl
pop
jns
rcl
cmpsb
mov
stos
xchg
movsb
adc
gs
adc
xor
imul
pop
jge
mov
cmp
mov
xchg
negl
pop
xchg
push
loopne
or
mov
gs
in
or
add
jmp
mov
lret
or
inc
mov
xchg
rorl
mov
jg
shl
les
mov
imul
popf
sarb
in
xor
rclb
pop
inc
push
idivb
arpl
ficoml
mov
jl
aam
pop
inc
jp
jns
stos
and
xor
xchg
decl
push
xlat
adc
popa
sub
push
dec
stc
inc
fldl
sbb
rcrb
maxps
pop
cmp
dec
or
adc
cld
mov
test
fstpt
inc
cmpb
lcall
lods
mov
sub
sahf
leave
dec
test
cld
cli
rcl
inc
rclb
xchg
cmp
data16
add
or
adc
cmpsb
sarb
cwtl
outsb
cmpb
aaa
xlat
add
clc
cwtl
push
dec
cmp
daa
adc
jb
ret
cmp
dec
push
add
push
loop
sub
adc
push
mov
or
xor
sbb
or
sbb
inc
out
push
xchg
add
dec
scas
or
xchg
cli
mov
adc
cmp
and
mov
mov
outsl
push
ret
gs
adc
outsb
mov
cmp
fsubrl
add
fdivrs
jno
shl
inc
cltd
mov
sbb
cmp
jae
xchg
mov
sarb
repnz
xchg
xchg
lods
adc
or
pop
mov
sub
in
sbb
dec
mov
dec
sahf
inc
pop
push
xor
stc
inc
mov
add
fwait
sbb
add
mov
outsb
add
mov
pop
fsub
or
pop
mov
or
push
mov
inc
test
mov
sbb
adc
lcall
cmp
add
test
and
les
lcall
add
adc
and
into
adc
mov
sub
hlt
imul
xor
adc
loopne
jbe
cmp
or
leave
cmpl
xor
adc
pushf
xchg
loopne
xlat
sub
sti
xlat
insb
sahf
rorb
int3
ficoms
adc
lret
xor
mov
or
fidivrs
lret
fcoms
out
mov
fwait
mov
jl
inc
sbb
push
sub
jo
sub
lret
pop
lret
dec
mov
jge
leave
test
add
sbb
push
or
scas
leave
adc
ss
push
and
in
mov
mov
movb
cmpsb
sarl
shl
xchg
lret
into
and
popf
add
scas
mov
push
push
and
fstps
sub
arpl
jle
repz
pop
imul
adc
roll
aad
and
xor
pop
jmp
xchg
clc
mov
jo
bnd
in
aad
loopne
xchg
dec
lahf
sub
prefetch
mov
lret
push
js
das
and
fcomp
cwtl
push
mov
cmp
or
ffree
lahf
int
mov
clc
loop
hlt
add
in
pop
or
push
xchg
in
push
pop
rcr
cmp
mov
popw
mov
lahf
or
push
mov
sub
ja
lock
scas
inc
add
fidivrs
sbb
adc
xchg
pop
stc
and
jnp
or
push
fcompl
mov
mov
popf
fnstenv
push
mov
in
xor
ficomps
cmp
into
pusha
push
mov
lahf
jl
lahf
sbb
sub
push
jg
mov
mov
xor
pop
push
adc
xchg
jle
movq
jle
mov
in
jecxz
sub
jmp
sarl
mov
popa
lea
loope
outsl
inc
insl
ljmp
dec
or
pop
mov
mov
add
dec
adc
add
jne
mov
mov
movsl
push
lock
or
add
adc
pop
icebp
or
cmp
dec
enter
jne
fiadds
lret
shl
sbb
push
jns
or
push
fwait
iret
jge
loopne
shlb
fidivrs
das
push
xor
and
mov
jecxz
ret
jbe
mov
rol
lahf
mov
shrb
xchg
out
mov
dec
push
fwait
ds
mov
lret
aad
int
and
lret
outsb
and
lcall
mov
mov
mov
pop
fildl
cltd
fmulp
cmp
add
sbb
jecxz
call
mov
pop
fwait
mov
lahf
fdivr
stos
lahf
and
jg
sbb
fucomp
mov
mov
push
andb
addl
push
shrl
or
in
loopne
push
lahf
fmull
or
arpl
mov
call
adc
out
lahf
cli
shlb
xor
sub
pushf
sbbb
mov
aas
sarl
add
sub
enter
insl
inc
or
pushf
cs
ds
adc
addr16
or
adc
les
add
jmp
cs
xchg
mov
xor
dec
add
scas
stc
out
shrb
fisubrs
call
xor
hlt
inc
push
mov
mov
fcoml
xchg
cmp
lahf
jb
add
mov
push
sbbb
mov
repz
push
pop
mov
ljmp
xchg
push
mov
out
shlb
xor
xchg
xor
stc
inc
lahf
pop
dec
push
call
insl
inc
rorl
clc
jg
push
in
or
sub
push
or
cmp
aaa
adc
ret
xchg
adc
sbb
jmp
push
adc
xchg
cmp
xchg
ss
mov
in
add
xchg
add
cmp
int3
inc
aad
and
lods
test
mov
data16
cltd
or
icebp
jbe
dec
out
and
dec
or
inc
hlt
lcall
aam
aad
xchg
pushf
in
mov
js
lods
rolb
outsl
and
inc
push
test
ja
adc
push
cmp
iret
adc
push
xor
les
aaa
daa
cmpsl
xlat
cmpsb
imul
mov
and
ljmpw
ret
sarl
pushf
and
pop
test
sub
pushf
inc
dec
nop
lret
dec
fbstp
sbb
fldenv
inc
mov
jne
js
jb
pop
fsubl
xchg
adc
out
or
dec
mov
mov
fmull
les
cmp
inc
add
xor
add
rolb
mov
sbb
out
push
xchg
mov
pushf
mov
fdivl
leave
add
adc
jle
mov
out
sub
mov
mulb
ljmp
mov
jo
sbb
push
sub
xchg
gs
and
loope
imul
pop
jg
adc
out
xor
loope
sbb
add
jb
aad
pop
mov
sub
xor
cwtl
jbe
push
gs
cmp
ficoml
pop
pop
popa
mov
adc
mov
xchg
lret
mov
sbb
dec
adc
ss
jp
stc
ret
scas
outsb
repnz
pusha
jecxz
shlb
adc
push
clc
dec
jns
xchg
fadd
cld
fsubs
mov
int3
mov
or
or
lahf
pushl
sbb
aaa
xchg
popl
aaa
aad
decl
sub
fimuls
adc
adc
roll
jmp
sbb
rorb
mov
lds
out
lock
mov
cmp
push
lds
xorl
aas
dec
cld
cmp
mov
adc
out
jo
in
lret
int3
cmp
or
into
pop
sub
cmp
out
xchg
repnz
or
fs
adc
aad
in
xchg
sub
or
mov
sub
cs
xor
mov
sub
xchg
mov
inc
add
cs
lods
out
add
add
cwtl
mov
lods
xchg
adc
sti
call
jo
shr
test
mov
cmpl
call
stc
pop
ljmp
mov
clc
in
scas
orb
iret
leave
lret
xor
jae
push
add
xchg
adc
bound
xor
test
movsl
xchg
jmp
out
cs
pop
pushf
imulb
mov
sub
js
fs
mov
cs
into
dec
rcr
movsb
mov
inc
sbb
ficompl
pop
jnp
jecxz
cmp
push
add
lock
pop
outsl
rorl
pop
push
jne
dec
add
leave
inc
cmp
pop
sub
jle
ret
call
cmp
or
sar
mov
push
sbbl
js
in
xchg
into
fldlg2
cld
les
es
add
loopne
mov
add
jns
cld
mov
jg
mov
sub
nop
incl
sub
imul
out
cmpsl
fistpl
enter
addr16
rclb
mov
sub
lock
or
test
inc
outsb
popf
fcoms
fnstcw
lds
xor
sub
push
iret
cmpsb
dec
pop
movsb
insl
aaa
xlat
cltd
gs
sub
or
or
cmp
stos
push
add
dec
cltd
adc
ja
mov
mov
cmp
jbe
add
fldenv
mov
add
mov
adc
xchg
sub
jo
mov
lahf
cli
sub
lods
sbb
loope
ss
cmp
repnz
insb
xlat
mov
mov
es
mov
xchg
jge
gs
mov
insl
repnz
and
insl
xchg
adc
insb
pop
andl
aad
jbe
pop
repnz
sti
aad
ret
ja
or
les
andl
repnz
sti
jge
adc
jo
jge
jbe
jl
adc
or
sub
insb
dec
sbb
sub
add
lds
ret
std
push
mov
pop
add
fidivs
out
sbb
ret
jge
xchg
repz
test
outsl
push
mov
into
jo
lcall
mov
add
xchg
xchg
adc
ja
and
cltd
jbe
and
ss
xchg
or
xchg
mov
or
lock
lods
or
xchg
add
mov
mov
mov
dec
mov
xacquire
sbb
pop
inc
dec
ret
lea
mov
in
out
pop
xorl
enter
fwait
ds
fstps
ret
mov
and
mov
fsubrl
sarb
int3
movsb
or
rorb
out
adc
cmp
dec
call
fsts
push
fstpl
dec
ret
push
jnp
and
sbbb
mov
repz
xor
fdivrs
in
fistl
and
jle
incl
sub
and
jns
add
adc
add
nop
pop
bound
and
popf
cwtl
cmp
xchg
and
jae
in
xchg
push
xlat
stos
or
nop
bound
stc
add
cmp
arpl
imul
fwait
mov
mov
arpl
inc
in
xchg
mov
push
ret
pop
fwait
mov
bound
or
inc
mov
inc
outsb
ss
and
fld
loop
addb
icebp
adc
imull
leave
mov
jp
cwtl
and
int3
repnz
xor
mov
fcomp
adc
ret
sub
jg
inc
imul
adcl
xchg
into
jmp
pop
and
sbb
dec
dec
xchg
rcr
addr16
sub
or
xchg
ficompl
decl
pop
jno
js
xor
add
or
mov
adc
and
pop
lret
ds
sbb
fsubrl
or
adc
jmp
sbb
mov
shrl
shll
clc
cmp
fs
adc
movsl
xor
jns
shrl
aaa
pushf
cmpb
adc
ret
xrelease
push
add
ret
sarb
inc
ja
jne
pop
enter
and
add
inc
push
dec
cwtl
cmpsl
lret
outsl
mov
adc
shr
bound
insb
jo
mov
nop
lret
or
imul
mov
mov
imul
xchg
sbb
adc
cmp
push
mov
decb
and
pop
cld
je
lahf
mov
jg
daa
add
lahf
addb
xchg
sbb
std
xor
add
iret
test
dec
sbb
shlb
cmp
sub
ret
and
lods
xchg
mov
repnz
push
lret
movsl
add
inc
stos
ss
sbb
inc
ror
iret
dec
jmp
adc
dec
adc
mov
jg
xchg
inc
or
stos
mov
sbb
cld
jb
leave
dec
mov
enter
test
rolb
ljmp
scas
or
push
aas
aaa
inc
ret
push
daa
fwait
adc
insb
pusha
lods
scas
aaa
repnz
mov
sub
or
shrb
inc
mov
push
jp
cmp
in
push
jg
sub
mov
mov
les
fcompl
dec
push
mov
mov
pop
or
xor
cwtl
sahf
or
xchg
xor
cltd
xchg
add
pop
and
pop
xor
ss
sub
add
popa
jo
adc
sbb
loop
adc
xchg
cmp
adc
aaa
mov
add
fbstp
les
push
in
cmp
nop
test
lcall
or
leave
and
xor
repnz
jmp
lock
jbe
jae
add
cmp
stc
repnz
fsts
in
pop
lahf
les
add
in
and
in
mov
adcb
les
or
xchg
sub
insb
xlat
and
movsb
xor
mov
and
inc
sub
movsb
cmp
mov
stos
or
jmp
mov
pop
xchg
or
in
adc
sti
adc
push
mov
ss
pushf
fcmovbe
push
add
adc
arpl
lcall
mov
cs
stos
insl
cmc
push
mov
popf
imul
jns
test
adc
pop
add
push
push
push
jns
out
sbb
dec
stc
mov
and
sbb
sarl
push
pushf
adc
lret
mov
fs
xchg
jg
xchg
out
lds
inc
mov
jmp
xchg
cmp
inc
and
bnd
xchg
lods
and
test
mov
data16
mov
ret
sbb
scas
sbb
add
test
inc
xchg
jae
in
push
hlt
cld
add
fsubp
add
and
push
loop
sbb
cmp
dec
movsb
pop
xchg
adc
cld
xlat
cli
loope
dec
iret
and
loopne
aad
cmpsl
cmp
sbb
sarb
jmp
dec
mov
sub
and
out
jnp
sahf
rolb
fwait
jae
inc
or
fcoms
dec
mov
dec
mov
or
and
rcrb
sbb
or
mov
test
movsb
push
cwtl
data16
pop
rorb
fsubrs
xorl
adc
arpl
mov
pop
mov
or
mov
add
leave
or
sub
test
shll
sub
sbb
cmpsl
popf
lret
lcall
adc
mov
stos
js
mov
inc
jp
xorl
dec
sbb
add
sub
or
pop
mov
xor
pop
scas
xchg
mov
push
add
lcall
in
lahf
out
leave
inc
push
mov
lcall
out
stos
mov
cmp
inc
add
xchg
mov
dec
adc
into
ss
rorb
addb
icebp
jo
or
stos
or
pop
mov
rcrl
mov
lcall
push
test
push
iret
mov
dec
enter
and
push
jb
hlt
jnp
adc
lret
mov
std
sub
test
or
mov
popa
xor
fwait
adc
xchg
lds
xorb
leave
or
cmpsl
hlt
mov
push
and
test
adc
jnp
and
lea
push
adc
push
leave
sub
in
adc
mov
adc
mov
cld
sub
add
inc
inc
fidivl
shlb
std
jnp
xor
dec
jbe
mov
imul
xor
or
add
or
mov
or
arpl
or
in
xor
jle
sti
dec
lods
in
push
or
neg
jb
lret
push
add
pop
push
test
scas
xchg
or
pop
inc
adc
aam
int3
sub
pushf
jo
shlb
shlb
push
mov
or
xor
repz
test
mov
jo
inc
pop
gs
sub
loope
stos
in
scas
pop
stos
dec
das
clc
push
sbb
hlt
out
in
int3
xor
mov
xchg
dec
or
js
stos
add
add
adc
adc
xor
jnp
pop
movsl
loop
les
lock
sub
mov
sub
insb
inc
or
adc
xchg
add
xor
jns
and
dec
or
in
mov
shlb
mov
ret
jno
enter
insl
jo
outsb
xchg
rcrb
and
bnd
rcrb
aad
hlt
push
mov
inc
mov
pushf
frstor
fisubrl
adc
or
xchg
or
mov
sbb
iret
cmc
out
addr16
mov
and
hlt
ljmp
lahf
fsts
xor
inc
dec
or
leave
inc
adc
mov
in
cmp
dec
pop
lock
or
lahf
roll
mov
fisubrs
lods
push
push
pop
aas
outsl
mov
sahf
out
sub
movsb
enter
leave
xlat
pushf
movsb
xor
in
inc
rorb
pop
push
inc
ds
cmp
scas
fadds
movsl
andl
iret
sbb
adc
sub
into
xchg
in
aad
in
push
ror
clc
leave
rorb
pop
outsl
cltd
mov
sbb
or
aam
mov
mov
cld
movsb
xchg
dec
mov
xor
sahf
fcomps
jg
push
cmp
in
arpl
add
mov
shr
or
bound
sub
cmpsb
mov
inc
out
fsubrl
pop
out
sub
incb
sub
sub
add
jecxz
cld
iret
jmp
sahf
jb
leave
out
and
add
rorl
cmp
into
xchg
popf
int3
mov
lods
add
lea
dec
leave
aad
adc
add
jb
mov
lock
sub
hlt
sub
xchg
movsb
jne
shrl
mov
lahf
or
add
mov
mov
push
push
or
aad
imul
lds
in
add
dec
xchg
into
and
xor
jmp
mov
adc
fmul
mov
dec
mov
cmp
adc
pusha
lret
ret
push
sub
test
cmp
ficomps
add
outsb
popa
scas
and
add
mov
push
ret
pop
mov
xlat
fimull
adc
in
pop
mov
sub
and
in
in
mov
dec
push
and
inc
add
hlt
xor
call
rcrb
enter
ss
jge
add
testb
inc
sub
pop
cmpsb
mov
dec
out
imul
or
test
int3
xlat
mov
insl
xorl
cwtl
inc
cmp
out
inc
mov
pop
out
pop
xorl
push
mov
sbb
out
aad
loope
cld
or
jnp
or
push
sbbl
mov
ss
and
jae
or
mov
sub
imul
and
repz
xor
push
stos
adc
mov
inc
cmp
repnz
sbb
ret
inc
imul
ds
pop
pop
xor
mov
add
ret
mov
pushf
sbb
jo
les
mov
jb
jnp
aad
lret
ret
loopne
mov
lret
fs
gs
mov
rorl
and
test
mov
out
fisubrs
dec
test
leave
insb
mov
pushf
daa
in
sub
mov
lret
xchg
jno
rorb
and
inc
jecxz
stc
adc
aad
sbb
fs
ret
fildl
lock
lret
bound
and
popf
aaa
sbb
lret
add
mov
test
cld
mov
cli
stos
adc
loopne
in
imul
xor
sub
sub
jp
add
xlat
push
dec
inc
adc
mov
adc
add
ss
jb
ja
loopne
divl
sbb
push
rol
mov
mov
cmp
mov
sti
dec
pop
dec
mov
or
fdivrs
or
sub
ret
xchg
pop
add
addl
inc
cwtl
and
sbb
or
xchg
jnp
push
in
pop
fsubr
mov
mov
shll
cmp
scas
out
fldcw
test
loop
je
leave
pusha
sub
rcll
jo
loopne
mov
cmpsl
rep
je
xor
sbb
imul
rorb
add
xor
or
or
faddp
out
inc
sub
and
je
hlt
les
movsl
sub
cmpsl
inc
popf
mov
cmp
fisubl
push
scas
es
mov
adc
push
add
pop
stos
out
insl
mov
testb
jp
inc
stos
jmp
xor
lret
xchg
pushf
sub
or
add
and
or
test
lahf
xchg
sub
inc
lock
fdivrs
cli
sub
xchg
and
popa
inc
cld
aam
sbb
hlt
xchg
ds
cmp
ret
in
jl
aas
pop
test
push
xor
adc
cltd
push
push
movntps
cltd
xchg
xor
aam
mov
jae
adc
or
add
lret
sub
loopne
sub
invd
cmpsb
sbb
mov
jecxz
cmp
lea
in
mov
or
jmp
inc
pop
and
jg
xlat
add
sub
and
mov
movnti
mov
pop
repnz
jmp
or
into
mov
or
jecxz
sbb
insl
xchg
adc
adc
in
or
sub
xchg
jno
outsl
std
dec
cmp
or
inc
cmp
mov
xchg
in
mov
or
shl
cmp
sub
mov
mov
movl
pop
inc
and
adc
sub
sbb
ja
cs
in
sub
mov
pi2fd
addb
icebp
or
rsm
movsl
in
mov
sbb
movups
sbb
negb
cwtl
dec
lock
mov
adc
dec
jbe
push
inc
add
stos
push
jbe
xchg
push
adc
add
xchg
iret
testl
add
aad
xor
mov
add
add
dec
push
inc
mov
hlt
rcrb
sbb
jmp
lret
mov
cltd
and
dec
adc
adc
dec
mov
stos
enter
mov
push
shlb
and
fcomip
mov
and
lret
add
loopw
mov
imul
fnsave
cmp
das
in
sbb
mov
cmc
mov
imul
fdivr
adc
hlt
or
push
push
sub
hlt
call
repnz
dec
roll
cld
or
adc
cmp
pusha
sti
adc
pop
fcomp
or
and
dec
jl
inc
shlb
mov
pushf
or
inc
adc
mov
and
js
xchg
add
adc
lcall
hlt
stc
jne
icebp
jns
outsl
nop
je
and
int3
mov
inc
insb
jg
ja
or
adcb
sbb
push
jp
fs
js
jge
inc
sub
xor
in
cmp
cli
sbb
mov
aam
or
enter
rclb
aad
int3
mov
cmp
push
pop
mov
push
loop
ds
les
pop
add
stos
fsubrs
clts
mov
cmp
rcl
inc
psrad
dec
mov
movb
stc
dec
fdivl
fimuls
push
rcr
add
mov
push
fyl2x
inc
fwait
sbb
sbb
dec
dec
repz
sub
insb
lahf
jmp
push
fwait
clc
loopne
or
nop
testl
repnz
pop
addr16
std
cltd
xchg
hlt
repz
pop
mov
or
subb
test
movsb
outsl
push
pop
not
rorb
inc
push
je
scas
xchg
ss
aam
or
dec
inc
jmp
cmp
outsl
pop
sub
btr
mov
hlt
mov
add
iret
mov
ja
aam
cmpsl
lahf
push
jbe
ja
sub
cmpsb
sbb
or
cltd
pop
jne
lcall
mov
testl
push
jl
push
sub
in
divb
mov
or
int
into
repnz
or
pop
fwait
shr
push
fwait
icebp
push
push
int3
shrb
popf
mov
inc
fnsave
or
pop
or
xlat
adc
adc
mov
out
and
decb
out
lods
bound
dec
cmp
mov
adc
inc
xchg
cmp
adc
test
popf
fwait
sub
sbb
jmp
sbb
push
stc
dec
adc
push
or
imul
xor
mov
mov
ret
insb
mov
xor
cli
inc
cmp
cld
cmc
int3
adc
pop
in
pop
rcrb
or
cmp
mov
fidivrs
or
iret
dec
int
je
jbe
xchg
adc
push
adc
xchg
push
and
mov
pop
xchg
les
or
inc
push
mov
mov
jbe
mov
cmc
cmp
or
adc
and
loope
mov
pop
sub
shl
jecxz
cmp
movsb
fmull
in
push
pop
lahf
pop
sub
data16
jbe
add
fldenv
mov
pop
into
into
fstl
or
rcl
inc
mov
add
ja
xchg
mov
repnz
daa
mov
mov
cmc
xor
pop
pusha
fldt
ficoml
rol
rorl
xchg
mov
loopne
push
popa
rcll
mov
mov
lret
lcall
or
les
and
enter
in
ja
pop
stc
aad
mov
hlt
sub
jmp
fists
push
andl
cmp
or
jnp
test
pop
push
jmp
imul
ficoml
push
sub
ljmp
mov
scas
div
xor
fdivrs
enter
bnd
jo
sbb
mov
loopne
bound
fidivl
test
xchg
rclb
or
mov
ret
or
or
and
clc
jb
pop
dec
out
mov
cmc
int3
jp
loope
and
out
ss
or
div
adc
and
mov
repz
or
aam
in
or
cmp
test
ds
push
cmp
stc
fadd
cli
sub
mov
mov
add
add
mov
ret
sub
jmp
push
std
sahf
mov
repz
sbb
mov
fnstsw
daa
inc
aaa
pop
icebp
pop
or
mov
pop
shr
repnz
es
gs
rclb
push
jnp
repz
je
ljmp
push
int
jbe
test
icebp
lahf
divb
ret
imul
loopne
and
and
out
fwait
adc
mulb
mov
ljmp
adc
xchg
xor
pop
cmp
push
pop
mov
adc
sub
clc
push
mov
jl
xchg
add
es
pop
ret
les
cld
sub
repz
popf
add
inc
outsb
xchg
xor
aam
out
in
bnd
mov
or
or
outsb
mov
xor
dec
sbb
or
mov
out
push
or
push
xchg
push
or
in
fdivs
hlt
shlb
add
inc
in
lods
in
in
repnz
test
out
add
xor
push
sub
mov
hlt
cltd
mov
lock
or
mov
in
sub
push
repnz
pop
adc
lahf
or
inc
dec
sub
mov
incb
xchg
jo
mov
cwtl
xchg
add
gs
cmpsl
sbb
cmpsl
fists
pop
jg
pop
push
cs
xchg
or
mov
imul
lcall
xor
repnz
into
mov
movsb
lods
into
test
aad
inc
jg
push
pop
jge
mov
leave
inc
insl
dec
inc
xlat
fsubs
outsl
ret
push
push
jp
cmp
fdivrs
in
outsl
dec
cli
leave
cwtl
sbb
nop
aad
and
cs
cmp
test
adc
jo
or
shl
testb
frstor
mov
push
dec
inc
xchg
sub
ficoms
mov
pop
rcr
gs
mov
adc
jb
fwait
xchg
aam
cld
in
scas
test
mov
xor
clc
iret
pop
or
push
loope
sub
lahf
pop
insl
out
mov
or
pop
push
loope
ficompl
mov
cmp
and
mov
and
test
xor
test
fldl
and
dec
push
out
ret
leave
in
cmp
xlat
mov
adc
cmp
add
add
push
adc
adc
and
cmp
js
inc
jnp
xchg
mov
sbb
imul
xor
adc
and
js
jno
or
cli
mov
adc
loop
inc
mov
add
jo
add
mov
das
hlt
dec
ret
fucomi
xchg
dec
rol
shll
pop
repz
mov
stc
dec
adc
mov
sub
cmp
scas
fiaddl
mov
jne
subb
cmp
dec
mov
add
ljmp
pop
aam
or
inc
mov
test
aad
jg
sti
lods
rcrl
jno
jae
rolb
xor
inc
or
pop
cmp
test
mov
out
xor
pop
lea
scas
xchg
sbb
aad
and
mov
ljmp
cmp
into
and
adc
clc
sub
int3
jne
scas
aaa
push
call
or
stc
adc
adc
mov
mov
add
insl
adc
in
sahf
pop
cmp
push
cli
sub
jno
nop
int3
test
movsb
lods
mov
and
je
fstp
roll
test
jo
lcall
sbb
or
int
or
jg
xor
mov
clc
fdivrp
lds
dec
xlat
cmp
add
push
jne
push
lret
pusha
mov
out
insb
insb
adc
and
ds
xor
call
adc
dec
popf
jae
xchg
mov
js
insb
mov
pusha
int3
rclb
xor
push
imulb
mov
loopne
mov
lret
and
or
jmp
loop
adc
mov
outsb
dec
fimuls
rcrl
lret
subl
sub
xor
cmp
mov
popa
adc
push
xlat
mov
or
inc
loop
xchg
add
pop
lcall
lahf
arpl
cmc
sbb
sub
imul
jmp
sub
gs
xchg
aas
adc
ss
push
mov
add
cli
add
adc
nop
in
mov
fldl
inc
lock
push
rorb
movsl
push
jne
mov
jae
fwait
mov
lret
fisttpll
leave
push
mov
cmp
mov
sbb
inc
fsts
int
dec
adc
hlt
dec
dec
call
fiadds
mov
or
ret
in
aad
jns
in
adc
repnz
shr
or
adc
sub
bound
jb
cmc
sub
stos
arpl
jl
sub
mov
sbb
out
in
mov
xor
pushf
add
aas
lds
push
mov
out
shll
xor
mov
or
test
mov
mov
push
jp
xor
sbb
icebp
adc
mov
out
sarb
mov
or
and
add
sbb
add
jecxz
dec
hlt
stos
xor
push
mov
scas
out
movsb
pop
cmp
mov
nop
cmp
or
mov
or
mov
sbb
imulb
dec
xlat
cmpsb
leave
xchg
test
mov
push
loopne
nop
je
mov
scas
mov
lahf
lea
daa
or
mov
ljmp
jmp
out
jl
in
shl
sub
mov
mov
push
adc
and
mov
jne
sbb
dec
loopne
fsts
test
mov
jmp
sbb
adc
add
jecxz
push
pop
push
ret
jmp
push
xchg
fsubrp
jmp
addl
insb
fimull
lcall
adc
in
cmp
ret
loopne
outsl
jmp
prefetch
insl
add
fmull
scas
dec
xchg
in
mov
fimuls
in
mov
jae
insb
mov
rolb
rolb
mov
test
sahf
out
mov
mov
clc
mov
dec
xor
lahf
pop
lods
xchg
imul
clc
adc
sub
mov
incl
or
jno
dec
loope
shr
insb
aam
add
dec
repnz
cmp
out
push
mov
jecxz
mov
das
fxtract
rcrl
stos
ret
repnz
sahf
pop
sub
outsb
or
xchg
mov
dec
popf
jge
out
adc
push
xor
jnp
les
sarb
test
push
inc
aam
hlt
lock
or
push
inc
movmskps
inc
insl
aad
ja
xor
inc
jnp
repz
cmp
xchg
fcomp
and
rcr
sub
add
dec
addb
cmp
insb
roll
cld
lret
je
adc
les
loopne
xchg
push
add
adc
imul
int3
pop
incb
shlb
int3
sti
repz
loope
mov
mov
adc
lahf
mov
and
push
test
lods
test
cmp
fisubrs
mov
fisttpl
ljmp
xchg
sahf
cmc
nop
aaa
pop
mov
xor
or
lcall
clc
in
adc
adc
ljmp
xlat
mul
adc
add
add
sbb
add
sbb
add
sbb
add
sbb
add
divl
inc
popa
add
incb
sar
enter
nop
in
out
xor
cld
addr16
cmp
iret
vmwrite
pusha
sub
xchg
adc
add
pop
sbb
or
ljmp
addl
stc
mov
xchg
add
push
hlt
movsb
and
scas
adc
repnz
jp
lret
repnz
insb
lahf
lock
jmp
jmp
je
pop
push
repz
mov
lahf
clc
mov
dec
mov
imul
outsb
fwait
add
inc
stc
or
outsl
jo
in
imul
loope
scas
subb
cmp
xchg
enter
flds
stos
mov
into
pmullw
xchg
xor
in
test
add
mov
cld
incl
js
out
mov
ror
mov
pop
dec
aad
dec
lret
fsubl
mov
mov
and
repz
adc
mov
dec
call
pop
pop
and
fcom
adc
mov
add
lret
adc
push
rorl
sahf
filds
jns
inc
dec
daa
and
mov
shll
mov
insl
loope
cmpsl
int3
in
and
stos
adc
sub
lret
pop
and
cmp
hlt
xchg
ret
xchg
push
out
add
lahf
sbb
pushf
mov
mov
dec
adc
in
lock
orb
in
dec
xchg
xchg
add
or
mov
loope
mov
dec
cmc
mov
adc
pop
xchg
ja
addb
pop
mov
das
or
mov
cltd
mov
mov
inc
mov
add
sbb
cs
adc
xchg
int
fwait
cmp
mov
stos
movsl
ja
jb
jbe
imul
fs
mov
out
mov
mov
push
stos
movl
mov
int3
fs
dec
mov
ss
rcrl
mov
and
rclb
mov
lods
into
rolb
incb
mov
rorb
pop
orb
or
sbb
or
sbb
mov
in
push
int
sub
mov
data16
imul
mov
call
call
mov
sub
and
fwait
xor
add
add
jmp
lock
cmp
or
jge
mov
pop
imul
mov
inc
out
movsb
dec
and
inc
inc
fwait
stos
fwait
adc
jl
or
add
jae
or
pop
fists
sub
mov
jge
adc
fwait
shr
jae
repz
clc
rol
dec
leave
inc
leave
add
adc
lods
cli
add
and
xor
ja
jbe
push
lret
fucom
sbb
inc
out
mov
or
out
cwtl
or
addl
inc
xchg
and
int
pop
mov
lods
call
ret
je
loope
stos
in
ret
rcl
fs
lods
aaa
loopne
leave
push
or
mov
or
fcmovne
or
dec
cmp
or
in
xchg
out
ret
mov
call
and
and
inc
sbb
push
inc
push
nop
cmpsb
bound
pop
mov
ljmp
loope
inc
es
int3
or
adc
stos
lock
pop
adc
lock
jns
xchg
test
jae
ljmp
and
sub
fnsave
pop
fmul
repnz
dec
mov
jno
orl
shrl
sbb
mov
xchg
fldcw
fisttpl
cmp
stc
in
enter
cmp
out
sub
xchg
push
mov
in
lret
call
pop
in
and
adc
ret
clc
adc
adc
out
add
in
sti
mov
add
push
sbb
rorb
lahf
mov
ret
cmp
enter
mov
repz
mov
movsb
push
mov
fwait
sbb
leave
push
sub
in
jmp
sbb
xlat
xor
aas
sub
sub
jg
jle
je
dec
sub
int3
into
or
lock
leave
call
fwait
ret
or
mov
xabort
fdivrp
xchg
ret
into
int3
data16
clc
shr
hlt
les
stc
int3
adc
aam
cmp
insl
pop
cmc
add
pop
lahf
or
adc
xor
shll
dec
xchg
adc
lret
pop
sbb
pop
lret
pop
adc
pop
jne
iret
or
loopne
mov
rcrb
dec
mov
sbbb
xor
bound
xchg
xlat
pop
out
test
lcall
nop
andb
mov
or
jle
aad
jge
xor
fnstcw
and
nop
cli
sbb
cmpsl
fchs
outsb
and
sbb
iret
jns
ret
es
jne
jmp
hlt
in
sbb
jmp
pop
ret
mov
aad
cmc
add
push
repnz
cwtl
xchg
push
sbb
dec
ficomps
jmp
jl
std
loope
sahf
aaa
ds
or
cmp
lods
rorb
popa
notl
nop
in
push
add
jl
inc
mov
movsb
mov
cltd
add
ds
xor
or
sub
fists
mov
aas
rolb
sub
sub
repz
test
and
int3
hlt
cmp
jbe
jp
push
sub
sarb
mov
xlat
ficoms
jp
pop
imul
sbb
fcmove
mov
xchg
in
jmp
push
push
lahf
jo
push
stc
dec
mov
push
sahf
fdivl
adc
shl
subl
cmp
push
mov
sahf
insl
loopne
movsb
in
sbb
fwait
jmp
std
int3
imul
lds
hlt
fcompl
repnz
mov
pop
jb
out
pop
push
sbb
cld
cli
arpl
jmp
mov
inc
mov
dec
mov
adc
add
stc
inc
push
repz
pop
xchg
adc
push
cmp
dec
add
aam
sub
push
mov
add
inc
and
fs
ds
dec
out
add
loopne
xor
push
sub
or
jg
and
loop
dec
stos
shlb
adc
int3
jmp
stos
pop
out
fnsave
fs
sub
dec
int
outsb
into
faddl
xor
push
les
imul
sub
int3
xchg
pop
dec
mov
sbb
loope
add
ss
jae
dec
decb
sbb
adc
xor
xchg
cld
xor
pop
lods
aam
loope
sub
jmp
mov
mov
sbb
jae
mov
sub
mov
mov
mov
lods
int3
cld
xchg
inc
jge
mov
int
or
enter
cmp
scas
hlt
int3
dec
mull
shr
out
or
insl
aad
daa
mov
ror
ret
in
mov
jmp
enter
rclb
cmp
mov
ret
sub
xchg
lahf
sub
cmp
shl
adc
das
jecxz
xchg
hlt
and
ss
push
add
jg
scas
and
mov
ds
mov
fsub
aad
inc
adc
subb
mov
jnp
or
js
dec
lret
lock
jge
lahf
adc
inc
jmp
or
in
mov
sbb
enter
jge
decl
icebp
push
in
bnd
pop
test
sub
lods
sub
push
push
xchg
sbb
pop
frstor
sub
call
mov
rcl
sbb
jae
mov
sub
ss
cmp
dec
dec
hlt
rcll
add
sub
jmp
idivl
mov
fcmovb
sbb
or
mov
in
sub
inc
outsb
aad
xor
or
adc
test
mov
mov
or
inc
loop
mov
rclb
mov
mov
jl
push
scas
mov
lret
lcall
mov
ljmp
dec
fwait
icebp
mov
mov
mov
cwtl
pop
cmp
sbb
arpl
mov
add
dec
iret
inc
ret
sub
fcmovu
jmp
mov
mov
fdiv
push
adc
jo
or
out
lock
movsl
jle
adc
sub
mov
sbb
sub
push
sbb
pushf
lods
shrl
pop
enter
rcr
mov
pushf
lahf
sub
cmp
lret
mov
or
cmp
inc
xchg
pop
sub
xlat
ss
ficomps
or
sub
sub
sahf
ds
xchg
sub
stos
xor
mov
popf
out
jnp
inc
sub
cmp
and
out
pop
inc
xor
or
dec
pusha
jmp
xor
mov
adc
outsb
mov
mov
add
push
hlt
mov
jg
mov
push
mov
add
enter
xchg
cli
out
xor
sbb
lahf
lods
fcmove
push
movsl
popf
out
adc
inc
je
sub
out
adc
xchg
jg
jae
std
decl
adc
out
push
fidivrs
std
pop
imul
or
adc
lcall
or
mov
test
sbb
inc
lret
icebp
xlat
pop
aam
mov
sub
loope
adc
lods
stos
adc
xorl
mulb
mov
push
adc
daa
add
mov
add
scas
push
mov
xor
mov
or
iret
scas
mov
ret
dec
sub
icebp
dec
pop
lea
lret
ficoml
dec
leave
adc
and
and
adc
inc
push
xchg
push
dec
pop
mov
xor
jb
mov
cmp
mov
lahf
cmpsb
es
cwtl
call
test
movsb
test
insl
sbb
or
icebp
enter
fistl
and
sarb
xchg
jno
jmp
hlt
xchg
mov
adc
pop
mov
nop
dec
mov
repz
iret
daa
popf
mov
shrb
mov
xor
fstl
fxch
push
sub
mov
sub
and
adc
stc
push
rcrb
ret
push
bound
pop
inc
inc
jg
add
icebp
mov
les
mov
aam
and
lds
es
inc
dec
add
jmp
or
popf
test
sub
andb
add
push
mov
adc
sbbb
imul
mov
test
stos
hlt
add
jae
adc
xchg
mov
xchg
mov
in
pop
mov
push
loopne
fisubl
jg
insb
fwait
rorb
jns
mov
adc
sbb
mulb
mov
push
jl
inc
rorl
xor
js
repz
stos
andb
int3
mov
les
cld
push
or
jno
hlt
add
xor
or
cli
mov
loopne
repz
stos
daa
daa
mov
lods
fiadds
mov
xor
push
cmp
sahf
mov
xchg
inc
cltd
stos
mov
in
cmpsl
mov
push
jnp
push
iret
sbb
sub
into
adc
lock
jecxz
cvttps2pi
fld
push
jge
repz
pop
jns
push
enter
mov
mov
je
lods
repnz
aas
mov
sbb
xchg
sub
push
cli
jo
out
notb
dec
add
mov
iret
in
jecxz
mov
scas
or
xchg
int3
fsubr
add
rcrl
dec
loop
lods
jmp
cmp
mov
lret
and
jge
pushf
lock
fiaddl
dec
cmp
inc
leave
xor
iret
jo
out
dec
xor
push
sahf
test
jg
lret
hlt
pop
mov
jmp
jo
or
or
xor
rclb
mov
xorb
add
loop
lods
or
out
cmpsb
call
sbbb
jg
outsl
sarb
outsl
or
popa
cltd
or
xchg
ret
adc
xchg
lock
pop
rcr
and
push
mov
push
stc
jns
repz
roll
mov
les
enter
ss
sbb
or
movsb
sub
pop
jmp
adc
frstor
pop
sub
leave
insb
aaa
sbb
movsb
outsl
or
jno
pop
mov
mov
test
mov
dec
movsb
sub
iret
ljmp
mov
ret
call
test
mov
inc
popa
call
fs
into
push
lds
xchg
repnz
lea
mov
mov
push
stc
jae
jno
pop
or
adc
push
movsl
repnz
mov
lahf
aad
dec
cltd
add
aad
out
sti
test
xor
mov
jo
ss
mulb
sub
gs
mov
std
lcall
push
cmp
and
pop
lock
ljmp
sbb
out
mov
hlt
ret
adc
sub
push
sti
in
push
jno
rorl
out
test
loop
movsb
cltd
sbb
push
pop
in
inc
mov
add
shlb
ret
ffreep
xlat
inc
je
xor
dec
je
cmp
lret
ljmp
add
ret
jbe
js
and
add
jmp
mov
sahf
adc
mov
clc
xlat
rcr
adc
jbe
xchg
out
mov
cmp
adc
imul
inc
xor
icebp
cmpsl
repz
shufps
loopne
pop
cmpsl
add
sub
inc
jl
jge
push
push
into
hlt
daa
ret
clc
jl
out
or
push
inc
mov
mov
lret
in
push
popa
or
pushf
and
xchg
mov
insl
int3
push
lods
lcall
inc
and
sbb
out
sbb
xor
adc
cmp
jg
call
and
sub
and
jnp
push
sbb
and
pop
fcom
dec
sbb
push
or
sub
mov
outsl
loop
mov
mov
jmp
mov
stc
inc
mov
cmpsl
pop
dec
ljmp
sbb
daa
nop
aad
sarb
mov
call
stos
into
loop
mov
sbbl
outsb
cmp
andb
loop
ret
sub
lea
ss
pop
ljmp
add
adc
or
sub
stos
repnz
pop
lds
test
sbb
xchg
mov
push
push
push
ljmp
rolb
lahf
sbb
daa
movsb
test
ret
fldenv
add
hlt
or
lods
pushf
mov
ss
mov
adc
sbb
jg
mov
xorb
pop
cmp
sbb
lods
jmp
aas
in
adc
aad
inc
stos
ds
jne
and
dec
in
mov
lods
push
neg
jecxz
lods
arpl
clc
testb
shl
jge
ret
xlat
out
add
jecxz
icebp
jnp
inc
add
les
lret
push
cmp
mov
inc
adc
jo
popf
and
mov
inc
or
icebp
jb
lret
andl
out
xchg
daa
mov
add
es
bound
fnstcw
divl
inc
nop
out
xlat
push
and
aaa
out
xor
ds
orl
neg
imulb
loope
imul
xor
inc
jle
rol
sbb
sub
xchg
dec
loopne
loop
scas
mov
sti
cmp
cs
dec
pop
popf
add
xchg
or
stos
ds
or
fsubr
test
shr
sub
mov
in
add
pop
pop
rol
hlt
lret
inc
ljmp
repz
pusha
adc
mov
sub
push
cmp
fiadds
rolb
leave
aam
mov
jnp
xor
push
add
lock
and
pop
aas
cmp
ja
pop
addr16
mov
fadd
mov
adc
sub
out
mov
add
inc
sbb
dec
push
pop
ficoml
loop
adc
repz
xchg
or
sub
ret
or
andps
push
xorl
ds
cwtl
loope
dec
gs
sub
cmp
pop
insl
je
repnz
sub
xchg
lret
dec
popf
or
lods
sub
sbb
aad
jg
jl
lods
es
movsb
add
push
stc
fs
mov
cmpsb
mov
test
lahf
and
mov
cmpsb
rolb
sub
aad
mov
test
call
mov
lods
push
adc
mov
jmp
loope
jmp
int3
jbe
f2xm1
xchg
sbb
pop
dec
jle
test
movsb
lret
push
sub
adc
mov
div
and
mov
dec
movsb
outsl
or
mov
push
jg
jecxz
test
jb
in
rcll
xchg
mov
cld
mov
sub
add
dec
pop
loopne
out
jb
test
jl
mov
orl
in
loope
push
mov
icebp
adc
jb
xor
jle
ss
mov
in
lods
adc
mov
shll
mov
in
or
in
mov
lret
push
push
ret
push
mov
outsl
andl
enter
stos
aam
ret
sbb
es
lods
cmp
adc
test
shlb
int3
test
lods
lcall
ds
aam
fbstp
ret
sbb
enter
push
jns
xchg
sahf
fcmovbe
maxps
or
je
jo
ret
or
decb
cmc
mov
add
sub
in
stc
push
mov
xlat
flds
mov
aaa
lret
outsl
or
hlt
lea
adc
mov
xchg
and
out
subl
clc
mov
lret
out
mov
sub
push
sahf
push
lock
orb
mov
iret
shrl
mov
adc
mov
icebp
icebp
rorb
and
popf
rcl
jbe
jle
xor
pop
dec
lahf
inc
enter
pop
pop
stos
or
std
and
out
loopne
xchg
out
xor
repz
sbb
jns
aas
xor
out
fildl
lcall
adc
out
fs
iret
and
mov
pop
pop
xorb
lods
cmpsb
addr16
cmpsb
mov
ds
sar
sub
xchg
out
mov
mov
lret
pop
xchg
pushf
ljmp
ja
leave
push
enter
stc
stos
adc
dec
ret
sti
fidivs
push
rcr
inc
jno
sar
int3
mov
ffree
leave
dec
sbb
cli
outsb
subl
adc
pushf
mov
and
jp
adc
inc
scas
inc
xlat
add
sbb
and
mov
cld
cmp
ret
outsl
cmp
inc
jmp
cwtl
adc
inc
imul
sub
out
ds
in
inc
cmp
std
addb
and
mov
push
pop
cld
aad
cmp
pop
xchg
jg
xchg
clc
adc
out
hlt
sbb
movzbl
or
les
or
jns
shll
shrl
dec
mov
jmp
mov
in
inc
add
loope
movsl
sarb
fdiv
shrb
js
cmp
bound
pop
out
leave
jg
shll
dec
mov
push
dec
sahf
xchg
nop
dec
hlt
adc
sub
jecxz
xor
jno
jp
sarl
push
lcall
jmp
cmpsb
daa
mov
lahf
cmp
shlb
mov
in
add
movsb
enter
and
ja
sti
stc
dec
mov
dec
push
lahf
push
xor
cli
cmp
outsl
addb
cmc
rclb
adc
adc
or
cmp
pop
pop
push
movsb
sbb
mov
sbb
sbb
push
ret
cmp
mov
adc
adc
outsb
lock
mov
int3
out
inc
dec
mov
mov
scas
and
out
mov
adc
in
pop
adc
sub
add
adc
mov
pop
lds
ds
int3
pusha
add
xchg
mov
ret
nop
pushl
ss
ret
es
jnp
sahf
negl
adc
lahf
not
mov
sub
ja
pop
ss
cmc
cmc
mov
dec
fnstenv
scas
bnd
mov
leave
out
add
xor
sti
cmpsb
aam
stc
jb
dec
shll
add
leave
out
mov
or
xchg
adc
and
sub
mov
cmp
iret
add
inc
int3
into
push
outsl
pop
mov
sbb
nop
add
adc
sbb
hlt
add
out
add
or
adc
es
or
ficoml
jnp
jle
jg
int
xchg
mov
stos
orl
adc
inc
jp
add
aam
or
or
out
mov
clc
mov
xchg
mov
cmp
test
hlt
push
mov
lahf
icebp
mov
icebp
fidivrs
inc
sbb
fnclex
jmp
xor
adc
add
jl
lea
enter
sahf
xchg
sbb
jnp
les
int
xchg
mov
sbb
cmp
test
xor
cwtl
sub
xchg
mov
jmp
push
jno
or
cmp
xchg
add
std
mov
adc
mov
sub
lret
lds
mov
fsub
cmpsb
fnstenv
aad
sub
in
ror
icebp
mov
mov
adc
mov
xor
aam
notl
ds
add
int
jne
sbb
arpl
in
rcll
lahf
shlb
jne
int3
call
ss
stos
test
lcall
fdiv
dec
gs
cmp
and
out
leave
ljmp
repz
pop
pop
arpl
popf
cmpsl
into
in
add
into
cmp
sbb
mov
ficoml
fists
pop
cld
jno
mov
hlt
ret
dec
jne
pop
cld
ret
scas
ret
push
sbb
nop
jecxz
jg
loopne
adc
in
clc
rcrb
pop
and
rolb
ret
das
in
scas
lods
push
and
inc
pop
add
in
and
clc
add
lret
mov
jp
push
mov
mov
test
ret
and
test
aaa
shlb
popf
cmp
in
xor
and
xchg
mov
mov
fstps
rcl
js
jge
daa
lret
or
xchg
adc
pop
ret
gs
adc
js
out
lret
adc
jecxz
mov
xchg
mov
iret
jns
inc
lds
pop
mov
int3
xchg
test
add
pop
xor
imul
jg
inc
add
neg
ljmp
mov
mov
nop
push
sbb
decl
mov
shrb
cmp
lahf
xchg
ds
push
in
cmp
push
daa
test
xor
jae
js
int3
adc
orb
xchg
add
fisubrs
out
mov
adc
adc
push
push
rorl
adc
int3
shr
push
negb
hlt
push
xlat
push
inc
sti
add
and
push
stos
add
sub
add
and
or
outsl
into
rorb
mov
jns
xchg
stc
mov
rorb
sti
adc
orl
mov
ficoms
mov
loope
or
mov
adc
adc
subb
repz
enter
lar
inc
adc
mov
push
fwait
jb
dec
repnz
push
test
add
mov
push
int3
lahf
sbb
push
xchg
das
rcrl
mov
dec
mov
out
aaa
orb
hlt
mov
cmpsl
add
ss
jno
jo
mov
sub
lods
add
or
sbb
pop
hlt
jmp
xchg
or
pop
sub
adc
cmpsb
sub
mov
sub
push
push
fdivrp
cltd
clc
pop
rcl
jg
add
lcall
push
or
xchg
mov
cmpsl
and
jmp
call
cmp
mov
sub
inc
push
cmp
aaa
movsl
cmp
aad
lods
je
popf
hlt
test
or
cli
sbb
out
icebp
inc
sub
ret
push
push
pop
add
or
and
sub
adc
adc
mov
mov
xor
mov
int3
push
add
mov
jae
mov
inc
fst
push
fdivrp
imul
nop
test
imul
mov
ret
push
daa
cmc
subl
or
gs
adc
adc
test
repnz
out
mov
into
cmpsl
hlt
ficomps
scas
add
sti
mov
gs
or
ret
nop
sbb
fidivrs
xchg
nop
sub
xchg
add
ret
test
push
pushf
pop
int3
pop
add
sbb
and
int3
dec
int3
cmpsl
sub
or
fadds
add
add
repnz
push
push
mov
xchg
nop
cld
imul
ret
push
mov
adc
cmp
mov
sbb
leave
mov
lret
mov
lahf
or
mov
mov
mov
mov
jmp
in
fsincos
divl
lcall
cs
mov
ret
call
fmull
adc
mov
lods
jp
mov
sub
out
and
shll
mov
aam
stos
in
out
adc
aam
push
sub
es
lds
jecxz
faddp
cmpl
mov
aad
int
add
repz
insb
int3
mov
push
and
xor
pop
shld
and
cmpsb
sub
fstps
ljmp
test
inc
push
xchg
push
sub
jae
push
push
ss
loop
mov
add
es
lods
aaa
xor
push
jns
pop
cmp
or
mov
jae
adc
pop
mov
ret
mov
insb
lods
jno
push
sub
fcomp
mov
mov
mov
shrb
idivb
adc
or
and
jo
dec
pop
mov
js
push
mov
das
ror
push
notb
push
enter
push
xchg
aam
dec
je
fsub
popa
in
sbb
lret
scas
enter
addb
or
aad
out
shll
ficomps
mov
pop
inc
fisubrl
xor
add
scas
sar
rol
and
pop
aas
xor
mov
pop
shll
or
mov
in
stos
pop
les
lahf
fs
fldcw
xor
roll
push
lods
ret
mov
stc
sbb
mov
jl
push
pop
les
jmp
arpl
mov
loope
jg
push
lret
aaa
adc
int
adc
in
pop
cmp
add
mov
and
stc
in
lahf
mov
sbb
mov
cmp
or
jns
mov
jnp
out
pop
add
xchg
outsb
mov
sbb
xchg
cmp
jl
xlat
mov
fldl
xchg
sub
out
stos
rclb
mov
or
lods
or
xor
stos
out
ret
mov
inc
ficompl
sub
stos
out
dec
xchg
scas
stos
adc
or
aas
js
fwait
jp
fs
imul
xchg
loopne
shlb
shrb
push
mov
mov
pusha
xchg
sbb
sub
cmp
fmulp
bound
jns
test
scas
xor
loopne
add
arpl
adc
sbb
test
in
test
xchg
rcrb
pushf
add
dec
mov
sub
call
loopne
pop
out
cmc
mov
cmpsb
outsl
notl
sbb
in
adc
mov
cmp
rclb
nop
fcomip
jae
imul
daa
push
sbb
add
movsl
loop
aas
ret
ja
in
sub
mov
mov
pop
andb
add
jno
add
cmp
repnz
movsb
xchg
out
xor
imul
sbb
cli
cmp
jge
hlt
je
outsb
add
pop
adc
rorb
fs
sub
repz
dec
cld
cmp
mov
cmp
xchg
loope
ja
enter
lods
push
adc
sub
xorl
call
mov
add
ss
test
dec
jg
sti
mov
aam
adc
mov
dec
imul
pop
and
mov
shll
push
lds
jae
or
imul
adc
in
cld
sub
ficompl
add
daa
dec
cli
sbb
es
cmp
xor
icebp
inc
or
xchg
add
stc
cmp
xchg
jle
dec
in
mov
jp
pusha
movsb
and
mul
jns
fs
loop
mov
xor
inc
loopne
jl
xchg
out
dec
xchg
loopne
insl
mov
out
sbb
sbb
add
push
shrb
add
adc
pushl
gs
je
push
xlat
mov
fadds
mov
xchg
add
in
fnsave
jl
prefetch
mov
out
xchg
ja
adc
imul
fsubl
paddb
adc
jne
sbb
enter
adc
nop
imul
sbb
pushf
add
aad
into
orl
push
add
fstpt
test
cltd
add
push
in
xlat
pop
and
cmp
mov
lock
adc
stc
dec
lahf
pop
push
add
insb
imul
push
and
dec
adc
test
imul
pusha
pop
add
pop
movsl
adc
xchg
jo
jae
push
xchg
lahf
bswap
int
mov
mov
ja
loope
aas
sub
xorl
cld
push
into
cli
into
aas
add
mov
repnz
pop
inc
js
mov
mov
repnz
inc
mov
cli
inc
sub
jb
clc
mov
fnstsw
xchg
orb
in
lods
fsubs
xlat
adc
adc
and
push
mov
lds
inc
cmp
lock
adc
push
repnz
fisubl
insl
xor
and
mov
imul
pushf
shrb
mov
mov
sub
mov
add
mov
xorl
es
es
dec
mov
mov
mov
movsb
out
call
jp
xchg
lret
or
dec
test
sar
mov
mov
int
mov
daa
add
push
cmpb
adc
push
cwtl
scas
call
sub
push
fwait
sar
cmp
bnd
adc
ret
sub
dec
std
aaa
sub
or
mov
mov
sarb
xchg
ret
push
icebp
dec
icebp
push
out
mov
add
lods
and
dec
push
inc
mov
xor
clc
push
mov
jecxz
insl
xlat
loop
lahf
fiadds
in
add
or
dec
adc
inc
lds
fs
decl
lea
scas
jb
repz
mov
mov
mov
mov
mov
xchg
cmc
adc
mov
xor
sti
movsl
or
or
or
add
sbb
jmp
ds
sub
add
loop
add
jae
adc
lret
fdivrl
and
gs
dec
add
sub
pop
add
mov
mov
cmpsb
xor
or
in
loope
sahf
adc
mov
stc
out
cmp
xchg
scas
add
mov
movsb
nop
cltd
test
mov
xchg
insl
pop
bound
mov
push
rcrb
xchg
or
add
sti
mov
jle
pop
andb
jg
xor
lahf
fwait
loop
push
int3
aam
mov
pop
jbe
pop
das
sub
dec
gs
stos
call
xchg
jne
movsl
adc
adc
add
dec
sarb
pop
or
push
xchg
jmp
pop
or
xchg
xor
pop
adc
jg
mov
out
mov
mov
loopne
mov
mov
dec
inc
cmp
push
imul
adc
adc
cmp
mov
je
cwtl
inc
jo
test
sub
jg
push
dec
adc
dec
lods
dec
es
cld
loop
jbe
pop
scas
aaa
pop
dec
pop
adc
mov
adc
lret
int
jno
mov
mov
jmp
cld
jne
push
mov
je
or
pop
lret
and
push
or
hlt
stc
or
mov
fldl
loope
adc
lods
sub
pop
push
cltd
hlt
adc
push
sbb
dec
sub
je
add
push
push
movsb
pusha
or
sbb
jmp
in
add
sub
jae
mov
sahf
xorb
scas
loopne
aam
repz
outsl
mov
adc
lcall
es
movb
xor
cmp
mov
mov
mov
std
xchg
push
adc
out
movl
out
rcrl
mov
xchg
dec
test
cmp
inc
aaa
fdiv
xor
in
adc
adc
repz
insl
repnz
shl
dec
cld
lahf
xchg
dec
xchg
pop
daa
adc
dec
in
cli
add
rclb
arpl
fcoml
xchg
add
mov
lock
jecxz
pop
xor
repnz
lds
fisttpll
sub
lock
xlat
in
das
and
xchg
repnz
pusha
test
dec
cld
jne
lahf
outsb
imul
into
adc
sbb
or
xrelease
ror
mov
stc
xchg
add
jbe
pop
dec
xchg
insb
mov
push
aaa
scas
hlt
popf
cld
push
mov
dec
int
xor
push
pusha
xchg
add
incb
sbb
cmp
loopne
repz
mov
xor
jne
mov
add
add
mov
imul
aaa
sbbb
aas
xor
pusha
movsb
test
lock
dec
pusha
jle
outsl
nop
out
jmp
pop
xchg
or
xor
inc
add
adc
out
out
sbb
jno
or
and
ficomps
xchg
ss
adc
imul
dec
fwait
in
cmp
lcall
mov
adc
dec
int3
mov
rcrb
loope
aad
xor
cs
mov
xlat
lret
adc
mov
lahf
or
scas
sub
rol
push
sbb
mov
pop
add
js
sub
dec
repz
les
inc
pop
pop
mov
and
jl
mov
fdivrs
out
xor
into
sbb
cltd
sbb
sub
dec
sub
cltd
jmp
pop
sbb
inc
xchg
hlt
data16
xchg
xchg
or
sbbl
mov
rolb
adc
push
push
adc
fdivrs
pop
sub
sbb
fcmovu
sub
adc
adc
sub
xor
aam
sbb
xchg
sub
or
xlat
dec
aaa
loop
lock
sbb
or
leave
push
scas
int
in
lds
prefetch
or
loopne
or
xchg
fwait
xor
popf
xchg
xor
and
cmp
test
jge
rorl
jns
or
mov
pop
jbe
subb
sub
movsb
lds
add
adc
xor
dec
jb
adc
mov
cli
push
push
ljmp
ret
sbb
xchg
lock
outsb
mov
dec
mov
jmp
mov
mov
ljmp
sbbb
lock
or
fisttpll
dec
adc
mov
sub
arpl
cli
mov
jp
mov
lods
lods
push
dec
mov
ja
adc
or
ret
mov
jb
xor
jmp
out
and
push
push
test
inc
and
or
repz
xchg
leave
jmp
adc
xor
out
sbb
mov
pop
or
mov
cmp
les
shl
lea
les
cltd
push
fbld
bnd
mov
scas
xor
lret
mov
in
adc
pushf
notl
xchg
cmp
mov
jnp
jmp
pop
ret
rol
bound
fcoms
aas
xchg
daa
fnstenv
sbb
ljmp
loope
enter
or
push
addr16
sub
xorb
xchg
mov
je
add
fnstsw
jmp
or
jecxz
jne
jns
aad
add
xor
aam
mov
mov
lea
dec
add
mov
aam
xlat
sbb
cli
xor
fsubr
ret
test
ja
xchg
cmp
cmp
push
insl
add
push
mov
add
adc
add
mov
jge
iret
pop
fsubs
movsb
mov
sbb
cld
jae
lods
push
cs
nop
or
inc
sub
jb
or
aaa
adc
xor
cmpsb
lods
out
sti
adc
adc
repz
cmp
mov
lret
mov
mov
inc
and
cmp
sbb
repz
ficoml
push
clc
adc
or
iret
add
mov
ret
imul
movsl
inc
dec
and
jnp
mov
mov
sub
mov
mov
mov
hlt
xor
and
sub
jo
dec
jp
pop
mov
jns
mov
add
adc
loope
cmc
cmc
or
push
int3
hlt
daa
mov
shlb
ds
push
push
mov
add
cwtl
cli
and
mov
push
sub
push
ja,pn
push
adc
adc
cmc
push
push
ss
mov
scas
sub
mov
sarb
ret
repz
mov
jnp
popf
inc
mov
add
ljmp
xchg
fsubrl
xor
jg
subl
adc
sti
leave
repnz
sbb
fstpl
cwtl
sbb
out
pop
addb
lcall
sbb
and
mov
lock
test
inc
xchg
test
cmp
add
pop
lret
mov
lahf
lcall
insl
jg
xlat
aad
pop
mov
mov
mov
aaa
out
cmp
imul
hlt
in
pusha
cwtl
inc
dec
js
popa
jecxz
pusha
fldl
js
ja
xchg
leave
mov
sarb
jne
fucomp
int3
fsubrp
dec
fstl
test
sub
cmp
push
and
scas
pop
fxch
jb
out
insb
stos
jb
rol
std
or
mov
je
outsb
loopne
jne
addr16
sub
out
lds
xchg
loop
sbb
cmc
and
push
dec
mov
mov
loopne
ljmp
sbb
push
icebp
test
lea
dec
into
inc
xchg
dec
fstpt
and
aad
push
adc
dec
dec
into
jge
jno
fisubs
add
aam
sarl
fiaddl
mov
ja
cmp
lret
shll
repz
sti
rolb
ret
lds
or
cmp
pop
lret
mov
lods
adc
xor
jo
dec
xbegin
loopne
jl
add
cld
aaa
pop
jnp
adc
repz
add
scas
or
or
sbb
das
fistpl
push
aad
add
aas
setae
aad
add
sub
add
repnz
sbbb
hlt
test
add
and
add
stc
aad
arpl
iret
inc
add
adc
xchg
les
popa
add
nop
adc
cmp
lahf
stos
xor
in
pop
repz
scas
inc
jg
adc
cmp
or
xor
in
sub
mov
mov
adc
pop
or
mov
loopne
dec
sub
cmp
sub
shlb
xor
inc
mov
mov
test
out
aam
or
mov
push
xor
xchg
and
push
sub
out
push
dec
adc
or
and
lahf
and
jl
ret
in
push
inc
aaa
and
hlt
dec
pop
xor
adc
daa
call
pop
roll
pop
sub
inc
jns
cmp
ljmp
cmp
gs
lahf
fadds
cmpsb
or
cltd
mov
addl
sub
aad
mov
or
push
ficoml
aaa
ljmp
and
lret
inc
int3
js
push
push
gs
imul
dec
add
and
outsl
clc
fmuls
pop
in
call
addb
sbb
sbb
sbb
and
stc
inc
rcrl
xchg
repnz
sub
xlat
aaa
dec
jecxz
mov
aad
in
in
lahf
push
fwait
test
mov
cs
dec
push
lods
jae
adc
xor
ret
sub
daa
loopne
out
push
stos
and
mov
xchg
mov
lahf
fisttps
and
jo
and
adc
sub
inc
xlat
push
add
fstpt
xchg
inc
xchg
fidivrl
lds
fiadds
cmc
inc
ds
push
iret
mov
out
and
leave
or
enter
sbb
mov
sbb
mov
outsl
or
jmp
mov
pop
mov
stos
dec
or
xor
dec
movsb
in
fidivrs
fnsave
add
loop
lea
mov
lret
mov
in
cmp
out
lods
jnp
xchg
or
les
or
dec
add
or
sub
xlat
mov
xchg
sub
jo
repnz
cmp
jo
repnz
fistps
dec
inc
and
test
adc
nop
jae
subb
xlat
mov
mov
or
mov
ss
xor
add
in
add
clc
mov
fcoml
ds
xchg
aad
and
xor
add
mov
push
scas
push
sahf
sbb
pop
bnd
cmp
inc
xor
fwait
adc
push
or
jne
call
xor
xchg
sub
inc
and
pop
mov
dec
rorb
mov
test
aam
ret
jbe
in
sbb
sub
hlt
mulb
out
gs
and
sti
mov
fimuls
adc
jmp
aam
or
mov
in
cwtl
inc
cmp
es
pop
clc
std
ret
mov
out
add
sbb
leave
repz
or
jg
fimull
stc
addr16
out
inc
sahf
sub
xchg
ja
shrl
adc
inc
insb
xchg
sbb
fnstenv
loop
psrlw
test
rcr
scas
dec
mov
cmp
dec
cmp
add
push
fucom
or
mov
into
lcall
xchg
out
in
sbb
in
or
or
lret
hlt
mov
mov
mov
daa
sub
test
sub
mov
mov
add
mov
sub
ret
push
out
jb
and
add
adc
adc
xchg
mov
mov
test
push
mov
add
enter
xchg
push
and
push
popf
mov
jns
xchg
cmp
into
lret
xor
fadd
ror
ss
mov
xor
add
arpl
inc
sbb
jp
inc
adc
sub
notl
or
testb
xchg
jmp
xchg
int3
xor
sahf
jns
stos
sbb
fs
jle
leave
sub
xor
lret
inc
insb
xor
aaa
test
xor
push
mov
inc
sub
loope
je
push
pop
mov
aad
fsubrp
mov
pop
cmpsl
lods
mov
sub
ret
xchg
aaa
pusha
fisttps
xchg
adc
loope
sbb
scas
outsl
sbb
pop
mov
into
xchg
leave
add
movsb
sahf
mov
cs
xchg
mov
mov
shrb
dec
cld
mov
outsb
lret
or
jle
into
cli
hlt
or
xchg
loopne
fs
cli
das
in
out
test
outsb
cli
dec
xor
js
cmpsl
mov
fstpt
insl
fldl
insb
mov
stos
aas
clc
sbbb
lcall
fistps
outsb
or
sbb
or
adc
dec
mov
lds
in
xchg
outsl
fwait
adc
mov
lock
mov
fidivrs
enter
mov
cmp
cmp
or
popa
movsb
inc
or
dec
rol
jno
xlat
fdivrp
sub
lds
dec
xor
mov
mov
mov
ds
clc
lods
stos
push
cmp
int
fcompl
cld
and
out
jp
cmp
lret
sub
out
data16
jg
or
xchg
or
es
test
xor
adc
mov
fnstsw
or
pop
or
sub
cmp
inc
mov
mov
andl
outsl
jmp
cmpsl
pushf
cmp
mov
xor
enter
jge
sub
adc
ret
inc
bound
and
leave
rcrb
jg
je
cmp
inc
call
hlt
add
lock
mov
loope
sub
les
fwait
clc
aad
cli
jmp
jle
adc
mov
jae
fcomp
cli
shrl
xor
test
addl
dec
sbb
adcb
int3
test
lock
add
sub
rcll
sbb
jae
pop
and
lret
dec
in
mov
xor
repz
pop
inc
add
insl
ds
or
dec
push
sub
fsub
in
push
shll
gs
call
stos
js
mov
mov
nop
dec
int
add
loopne
jg
rcl
outsl
repz
or
and
xchg
inc
and
sub
xchg
arpl
pop
sub
mov
mov
sbb
pop
sub
xchg
out
add
repnz
xchg
add
lcall
es
sub
in
out
js
fmulp
xchg
out
push
hlt
iret
or
shrb
cmp
or
push
loope
daa
stc
dec
mov
in
lods
ja
and
add
add
xchg
and
adc
push
adc
add
nop
pop
stc
xlat
xor
xchg
adc
lahf
xchg
push
pop
mov
out
jmp
int
jbe
adc
or
lret
lret
add
or
or
ret
push
cmc
and
ds
or
hlt
out
sbb
add
gs
dec
lds
jb
adc
add
push
repz
mov
ja
adc
dec
mov
fidivs
xchg
jmp
rclb
xorb
mov
adc
cmp
push
jle
clc
sub
call
aam
sub
push
xorl
xchg
mov
xor
inc
sbb
cmp
shll
cs
xor
test
jne
xor
ljmp
xchg
hlt
dec
out
sub
or
cmc
sbb
stc
adc
jmp
xchg
fcmovbe
gs
pop
mul
add
das
push
add
shlb
dec
xchg
sub
shll
mov
adc
mov
push
rcrb
dec
or
repnz
fldcw
sbbl
rcrl
int
mov
sti
fcoml
rclb
int3
adc
jge
xor
sbb
fadd
int
lahf
out
lret
mov
or
into
xor
adc
cld
push
sbb
std
lretw
movsb
clc
repnz
fsub
or
cld
mov
mov
loop
or
sbb
sub
nop
movsl
pop
or
testl
inc
xor
mov
adc
or
or
movnti
leave
xchg
push
dec
jecxz
or
jecxz
xchg
das
xchg
in
ret
xchg
fdivrs
fdivrl
lea
sahf
add
or
push
jl
push
mov
push
add
adc
xor
add
or
lret
mov
sbb
mov
or
or
js
mov
pop
test
lret
inc
repnz
cltd
xor
out
cmp
rol
testl
mov
sub
push
addr16
pop
scas
or
adc
and
push
cs
bound
xchg
mov
jbe
jmp
xor
cwtl
push
iret
or
sbb
lds
inc
push
jae
adc
push
rol
pop
in
or
sbb
push
das
aam
adc
push
mov
adc
push
dec
pop
adc
lods
int3
subb
sub
add
in
xchg
in
stc
cmp
mov
cmp
pop
inc
dec
xor
sbb
dec
sbb
addr16
fcmovnbe
call
daa
lcall
cld
stc
repz
test
sub
xor
les
inc
jno
enter
xor
xchg
shlb
xchg
mov
in
push
cmp
ss
inc
lcall
clc
fincstp
inc
sub
lret
imul
in
lahf
lret
cmp
fidivl
pop
adc
jmp
or
mov
sub
push
push
mov
ljmp
sti
xor
mov
sub
xor
stos
jle
xor
pop
jl
xchg
das
inc
push
out
inc
aaa
or
cs
pop
inc
jle
jo
xor
xor
fisubs
out
je
icebp
insb
mov
sub
pop
push
fwait
push
add
sbb
or
or
adc
fsub
pushf
add
movsb
das
pop
mov
ss
ret
adc
mov
inc
lock
dec
mov
push
pop
bound
in
add
xchg
ss
adc
push
scas
inc
aam
fwait
inc
adc
xor
lock
pop
xchg
xchg
lock
push
cltd
cmp
cld
adc
add
mov
push
add
movsb
mov
xchg
mov
lret
jae
ret
sub
mov
hlt
pop
add
enter
dec
movups
insl
testl
xor
sub
in
sub
push
bnd
cs
roll
push
lods
adc
jl
push
jecxz
lods
inc
jl
je
pop
adc
and
xchg
aad
movsb
inc
sub
jbe
test
add
ss
lahf
shlb
push
ljmp
hlt
lahf
rclb
neg
dec
mov
mov
aaa
add
xchg
leave
sbb
jecxz
add
cmp
adc
add
sbb
sub
rcrb
fsubs
mov
xchg
cmp
in
into
lret
and
in
cmp
enter
cmp
mov
add
je
cmpb
pop
es
les
negl
and
xor
frstor
cmp
dec
and
mov
pop
loop
xlat
shr
or
aas
dec
dec
add
dec
dec
cmpps
in
in
sub
cwtl
cmp
adc
inc
add
jge
out
movsb
mov
outsl
xor
push
lods
dec
dec
ss
xchg
rcll
stc
dec
mov
cmp
xchg
and
ret
aad
jle
and
mov
or
mov
pop
sbb
pop
lret
adc
pop
lds
repz
dec
adc
dec
sbb
push
sub
inc
cmp
jmp
push
inc
mov
daa
and
psubsb
rol
lcall
daa
ret
shl
and
imul
rorb
cmp
sub
lret
mov
sub
sub
pop
or
cvtpi2ps
push
sti
movsb
mov
xor
adc
or
inc
loope
aad
nop
push
jg
push
inc
loopne
mov
or
clc
lock
and
lods
push
jmp
jns
icebp
add
or
and
inc
hlt
lret
testb
stc
pop
and
jp
nop
jg
pop
add
call
inc
stos
call
inc
ret
ret
int
std
sbb
sub
dec
pop
and
pop
add
add
das
popa
and
and
or
inc
mov
pop
mov
inc
rcr
js
xchg
into
sbb
pop
outsb
insb
mov
mov
addr16
flds
hlt
push
add
and
cmpsb
jno
cmc
enter
xchg
imul
shl
sbb
pop
nop
sub
lds
push
mov
lret
add
mov
pop
int3
pop
iret
addl
inc
or
pop
lret
movb
ljmp
xchg
test
lds
cmp
push
or
sub
lret
mov
repz
cmpsb
xor
push
pavgw
lret
imul
jae
lock
mov
in
and
or
adc
dec
nop
jo
sub
shl
je
and
mov
sub
inc
sub
sub
jmp
in
cmp
mov
add
lahf
or
inc
and
adc
daa
dec
mov
mov
in
sub
sarl
pushf
scas
mov
lcall
test
or
pushf
bnd
jmp
sarb
mov
and
push
cmpsl
push
push
sti
fstpt
inc
cmp
mull
adc
or
push
pop
ja
pop
fiaddl
out
test
push
mov
inc
sbb
lods
flds
in
adcl
insl
repz
cld
mov
xchg
int
popf
adcl
rclb
jl
daa
mov
loop
mov
mov
insb
push
fisttpll
or
push
mov
mov
jnp
aaa
fwait
cmp
mov
or
push
popl
xor
pop
test
or
push
pop
rclb
daa
xchg
add
xor
mov
mov
pop
in
mov
xchg
negl
test
cld
add
nop
jne
lock
add
adc
aam
insb
nop
mov
dec
xor
scas
popa
fidivrs
mov
fists
and
in
aas
sahf
inc
in
push
jae
adc
scas
and
cmpsb
or
cmp
add
inc
dec
fimuls
mov
imul
fcoms
mov
lret
aad
ss
pop
int
xchg
jge
xchg
xor
je
mov
pop
mov
dec
rcr
jle
xchg
scas
inc
into
and
jge
movb
daa
sbb
unpckhps
mov
in
mov
out
mov
scas
in
pop
jno
int3
mov
jnp
sbb
idivb
mov
mov
in
push
int
pusha
je
pushf
idivl
push
sub
push
or
enter
adc
sbb
in
clc
jmp
mov
int
mov
jae
add
pop
push
dec
mov
push
jno
sub
push
pop
jbe
jo
adc
push
sub
stc
hlt
inc
mov
mov
jmp
outsb
popf
inc
js
push
mov
and
mov
jmp
pop
mov
dec
dec
xchg
ds
and
cmc
add
int3
push
dec
mov
dec
dec
mov
or
mov
xor
out
adc
push
dec
jmp
adc
clc
mov
scas
sbb
lret
setne
xchg
ss
lahf
xor
xchg
sbb
jge
mov
movsb
jp
add
mov
and
aaa
push
or
xor
mov
or
stc
and
cmp
sbb
add
int3
fucomp
outsb
cmpsb
jecxz
pushl
push
out
es
and
jmp
dec
cmp
mov
in
mov
push
xlat
mov
adc
xchg
dec
ss
jae
xchg
mov
mov
gs
aam
adc
nop
hlt
mov
mov
into
cmp
xor
ljmp
mov
sub
enter
dec
test
stos
enter
mov
mov
clc
je
int3
fnstcw
dec
out
sbb
cmc
imul
cli
jp
cmpsl
inc
hlt
dec
lock
mov
loope
dec
add
dec
repnz
jo
or
and
testb
mov
push
pop
adc
or
adc
mov
sbb
lcall
and
mov
cmp
filds
cmp
jo
or
lret
sbb
loope
sbb
stos
mov
jecxz
mov
mov
mov
setb
adc
or
and
dec
loop
add
lea
mov
xor
roll
dec
mov
push
dec
adc
pop
andb
add
insl
or
data16
divb
inc
mov
xchg
ja
inc
cmpb
pop
cld
dec
lds
nop
add
ret
popa
inc
movsb
out
mov
xchg
in
imul
fldt
push
insb
out
out
mov
addr16
in
in
adc
test
loope
lahf
xchg
mov
fdivrs
aam
jl
mov
mov
test
xor
push
bsf
aad
or
mov
push
popa
push
sbbb
ficoml
push
lcall
ret
shlb
mov
xor
int
dec
push
cmp
mov
popf
cmp
pop
out
lods
sub
adc
sti
jbe
hlt
pop
push
mov
sarl
dec
xchg
subb
pushf
jge
sahf
sub
shll
mov
push
cmc
out
test
aam
adc
icebp
dec
rorl
int3
or
aad
movl
sbbb
cld
xchg
pop
into
dec
lds
add
push
jae,pt
mov
sbb
or
call
loopne
in
jle
cld
psllq
cmp
adc
int3
dec
bswap
add
jne
jl
fdivrp
inc
aad
shl
mov
mov
and
arpl
push
clc
push
or
sub
lods
fsubl
mov
roll
int
cli
fisubl
mov
test
xchg
or
add
test
cmpsl
mov
add
add
or
mov
pushf
mov
test
iret
cwtl
aam
adc
xchg
jecxz
mov
scas
or
fisttpl
adc
adc
mov
mov
popf
popf
mov
pop
or
pusha
pusha
gs
and
pop
rcll
js
and
dec
pop
add
negl
inc
imulb
xor
jae
sub
xor
jl
mov
sbb
push
xchg
cli
je
xchg
add
fmull
inc
movl
test
sbb
and
sbb
mov
or
loope
fistl
xchg
add
mov
jne
jge
les
adc
xchg
push
xor
adc
mov
and
cmpps
bound
pusha
icebp
inc
fsubp
add
mov
jl
push
ljmp
stc
inc
mov
shlb
stos
add
imul
rol
push
aas
add
xlat
adc
in
stc
pop
mov
sub
fldenv
lods
loope
jns
jmp
pop
push
mov
cmc
mov
mov
andb
mov
xor
lcall
adc
pop
scas
rcl
or
test
lods
in
fcmovb
ss
mov
push
ljmp
adc
cmp
xor
sbb
xchg
imul
adc
shrb
dec
pop
cmp
cld
js
adcb
es
and
cmp
jb
rorl
ret
pushf
push
dec
push
stc
das
loopne
sbb
ficomps
repz
mov
es
sub
xchg
loope
jmp
adc
jecxz
mov
or
lods
inc
jp
push
fstpl
jmp
mov
push
add
icebp
mov
hlt
jg
test
xchg
and
adc
je
inc
pop
mov
enter
sub
xor
sub
into
sbb
cmp
lock
cltd
les
add
cld
xor
imul
ds
jmp
jne
ja
repz
xchg
popa
call
in
sbb
mov
stc
stos
addb
imul
and
imul
push
fstps
dec
nop
mov
sahf
outsl
mov
decl
dec
rclb
push
xchg
mov
cwtl
and
mov
mov
sub
rolb
jns
mov
ficompl
popf
gs
jo
jle
es
add
stc
cmp
orb
ljmp
aad
subl
xor
roll
out
mov
lock
jb
pop
aad
dec
into
addr16
cmp
add
aad
lcall
or
les
dec
cs
adc
cs
fnstsw
mov
fdivr
add
and
lds
sbb
adc
xchg
loop
ret
add
adc
push
fwait
iret
xchg
dec
aam
sub
or
aad
inc
push
ret
push
mov
fs
fcmovne
mov
xchg
into
outsl
clc
ja
fwait
rclb
prefetchwt1
or
test
aad
cmp
stos
mov
add
jmp
out
sub
xchg
jl
pop
out
adc
pop
jl
faddl
sbb
and
jp
out
push
outsl
cmp
mov
or
jbe
outsl
add
mov
jo
and
mov
mov
pushf
lahf
push
jo
jmp
or
insl
aas
test
je
popf
mov
cwtl
mov
out
ret
nop
add
xchg
fxch
mov
fadd
ljmp
pop
push
dec
sbbl
out
mov
sbb
rorb
fwait
fs
lret
cli
hlt
adc
jae
add
sahf
call
cmp
xlat
int
mov
movb
jbe
pop
ret
fldl
mov
adc
xchg
add
mov
sbb
ljmp
inc
ds
sub
mov
xor
mov
adc
lock
nop
sub
fistpl
jae
sbb
hlt
cmp
cli
pop
cmpl
adc
cmp
adc
movq
or
stc
lea
push
and
adc
inc
stc
inc
les
rep
mov
pop
push
lahf
aad
int
nop
dec
mov
push
adc
lds
clc
je
dec
lock
aad
mov
ret
test
jl
sbb
dec
ljmp
fisttpll
fcomip
mov
test
dec
or
dec
mov
and
cmp
cmpsl
dec
adc
or
inc
push
test
xchg
daa
xchg
aad
addb
fisttpll
nop
test
pop
push
stc
ret
loop
jb
imul
sub
push
jge
cmp
push
mov
cmc
ret
shlb
in
sbb
mov
jl
mov
subl
out
aas
or
jne
pop
cs
or
jne
clc
mov
or
mov
je
mov
mov
call
dec
push
test
jns
lock
mov
sbb
int
in
mov
adc
inc
pop
xchg
sub
xchg
pusha
sub
push
mov
add
cld
add
imul
mov
or
rol
add
adc
lahf
in
test
fisubrs
xorb
into
stos
xchg
pop
mov
or
add
popw
cmp
lret
adc
clc
mov
pop
push
shrb
adc
inc
mov
int3
sbb
cs
or
and
aad
fimull
dec
aas
cmp
data16
pop
inc
hlt
cmp
xorb
or
mov
enter
or
stc
dec
mov
or
repnz
fistpl
mov
xchg
xchg
adc
push
stos
sti
fdivrp
xor
dec
or
shr
jle
push
sti
or
mul
pop
mov
ret
gs
cmp
jns
push
cmp
adc
jl
int3
shl
mov
sub
les
mov
lahf
das
jmp
xchg
lret
mov
adc
inc
jp
daa
adc
cmp
sbb
mov
or
aad
add
sub
aaa
mov
ret
adc
shll
xchg
cmp
ja
mov
popf
mov
cld
out
les
pushl
sti
push
mov
sti
in
sbb
adc
int
or
inc
fildl
fdivp
lcall
js
call
adc
lods
call
js
popf
nop
imul
jge
push
cs
sub
aam
insb
inc
jbe
sub
leave
frstor
mov
xor
fimuls
inc
or
imul
mov
add
lods
or
push
jnp
sbb
xchg
jl
cwtl
bound
lock
lods
subl
scas
sbb
pop
push
pop
adcb
inc
inc
push
or
insl
pop
lret
ret
sbb
jecxz
and
loop
pop
push
out
adc
movsl
jbe
insl
fucomp
lcall
xchg
xchg
mov
sub
movlps
pop
adc
sar
imul
daa
push
out
and
mov
imull
orb
inc
sbb
iret
int3
jne
test
jge
dec
mov
adc
or
jae
dec
pop
mov
jp
nop
fidivrs
cmpsb
iret
sbb
aas
leave
adc
aas
mov
repz
xorl
jge
dec
mov
test
cwtl
xchg
xchg
mov
iret
stos
sahf
ret
dec
or
mov
lods
mov
mov
shlb
test
leave
dec
rorb
sub
ds
sub
in
aaa
or
push
shrl
mov
mov
push
pushf
clc
cmpsb
lahf
out
fadd
stos
mov
iret
pop
or
push
addb
adc
xor
lahf
in
popa
adc
in
repz
sbb
int
push
mov
mov
jmp
ret
pushf
lret
sbb
push
push
sti
sarl
cmpsl
pop
push
inc
xlat
mov
adc
ret
dec
pushf
mov
scas
mov
dec
testb
popa
fldenv
adc
mov
cmp
push
lret
adc
iret
inc
jns
icebp
lods
mov
jbe
jb
push
stc
jae
arpl
xchg
fmulp
sarb
dec
sbb
pushf
xor
les
lds
and
rol
cmp
push
or
lahf
sbb
xorl
adc
adc
mov
or
sbb
inc
xchg
repnz
and
dec
add
mov
stos
push
sbb
sbb
daa
mov
mov
xchg
pop
or
mov
cwtl
lock
sarb
rorl
lahf
mov
or
stos
repz
jp
mov
fldl
lods
sahf
bound
sti
xor
mov
test
out
ss
jge
cmc
cmp
or
jecxz
mov
dec
out
and
clc
fs
push
jle
mov
push
sti
jns
cmp
push
or
rorb
ret
fmuls
inc
or
popf
inc
pop
mov
inc
sub
out
push
movsb
jns
jnp
fsubrl
mov
xchg
push
mov
int
rorl
xchg
into
loopne
push
xchg
call
pop
aam
lret
and
aad
icebp
cwtl
xchg
fimuls
js
add
cmc
leave
ret
movsb
or
adc
adc
call
add
add
std
or
or
cmpb
jns
ror
xor
movsb
sbb
cld
test
adc
xchg
stos
mov
test
rcr
and
or
jbe
movsb
scas
cmp
aaa
or
adc
or
or
dec
jg
or
push
xchg
mov
popa
mov
sbb
dec
loop
jmp
in
stc
sub
mov
and
inc
sub
jmp
testl
adc
cmc
adc
sub
movb
nop
mov
sbb
shll
cmc
loope
and
cmp
outsl
jge
or
jmp
push
daa
sbb
sbb
push
jbe
imul
in
or
xlat
dec
repz
adc
stc
dec
cmp
xlat
jmp
push
adc
cmp
scas
cmp
push
adc
push
outsl
test
adc
sub
lret
insl
mov
xor
sbb
add
pusha
data16
dec
xor
adc
xchg
jb
sbb
cmc
jp
shlb
pop
push
or
dec
or
inc
int3
inc
iret
and
or
mov
dec
in
inc
std
or
in
inc
stc
inc
push
mov
jnp
pop
mov
jl
dec
cmp
add
or
jne
push
cmp
adc
and
in
mov
push
adc
push
fmuls
push
mov
and
comiss
jmp
repnz
add
push
movsl
sub
push
xchg
sub
mov
enter
ljmp
out
sbbb
lock
xchg
and
mov
jae
shll
and
mov
add
nop
rcl
int3
adc
mov
push
in
xlat
mov
hlt
ret
push
pop
test
call
jae
adc
inc
test
psrad
or
loop
inc
cs
xchg
cld
adc
loopne
inc
add
daa
jg
insl
xchg
arpl
xchg
inc
fmull
add
xchg
imul
mov
mov
testb
lret
mov
xchg
addr16
cmpb
lock
or
push
andb
inc
or
add
cmp
out
into
pushf
daa
in
sub
lret
aaa
fadds
mov
pop
arpl
or
push
pop
sti
jg
inc
dec
aad
mov
sti
jge
enter
aad
inc
fisttpll
fwait
pushf
sbb
adc
loop
je
loopne
imul
xor
sti
mov
mov
orb
rol
sbb
cli
imul
cmp
mov
or
lds
stc
inc
int3
aad
mov
addb
pop
stos
push
lock
cmp
rcrb
jmp
rcrb
pop
jnp
es
pop
outsl
cmpsb
inc
sub
add
xor
mov
enter
or
mov
push
push
shl
mov
lods
icebp
rcll
xchg
or
or
inc
pop
mov
nop
push
ret
into
sbb
mov
jl
jb
mov
lods
loope
jmp
mov
xor
pop
pop
mov
enter
add
sub
mov
bound
inc
imul
pop
inc
mov
mov
scas
dec
popf
out
sbb
pushf
jo
mov
add
rolb
insl
push
jl
adc
ror
mov
in
sbb
rorb
push
cwtl
subl
inc
cld
mov
jle
sarb
cli
imul
ret
stc
cmp
jmp
lods
dec
add
lock
pop
push
out
and
ljmp
scas
rcrl
or
sbb
dec
stc
cmp
sarb
add
dec
into
jno
test
jns
rolb
lret
cwtl
adc
lcall
lcall
lcall
xchg
mov
lcall
test
lahf
dec
test
mul
mov
pop
loopne
stc
inc
cwtl
loop
add
je
inc
sbb
pop
aad
and
test
xchg
aaa
pop
sub
enter
sbb
push
out
ror
adc
mov
pusha
test
call
nop
xchg
sbb
les
scas
andb
inc
cmpsl
loop
mov
mov
adc
out
mov
push
sbb
cmpl
xor
fldcw
bound
mov
ficoml
lods
mov
fdivp
dec
mov
iret
push
adc
loop
dec
or
dec
mov
and
sub
jp
xor
insl
ret
ja
into
call
jg
lods
mov
outsl
push
dec
cltd
adc
lock
mov
fisttpl
pslld
repnz
test
sub
insl
jmp
jmp
adcb
fbstp
call
mov
mov
jl
mov
movsb
xlat
jne
pop
fwait
mov
hlt
adc
iret
or
cmp
mov
mov
enter
mov
test
jb
out
or
rcl
mov
jnp
in
jmp
adc
jnp
fistps
mov
and
fcomps
lds
pop
rolb
mov
frstor
clc
adc
in
sub
je
jl
adc
jge
or
sbb
mov
arpl
pop
add
adc
in
shr
jp
adcb
jb
sub
inc
lret
popf
in
xlat
mov
sub
movsl
fldcw
cmpb
in
leave
mov
jno
shll
push
add
sub
xchg
and
push
scas
sbb
xorb
add
ja
int
je
sbb
stos
adc
lods
mov
aad
add
mov
push
aam
test
enter
shll
push
addr16
or
int3
sub
arpl
add
mov
add
adc
fdivs
jne
cmp
cwtl
repz
shll
addr16
outsl
int3
inc
ja
xchg
loopne
push
pop
dec
ror
push
aam
sarl
or
hlt
lahf
add
rclb
push
push
int
push
int3
cmp
fsts
jns
popf
movsb
xchg
jmp
out
into
adc
and
and
lret
mov
mov
pop
mov
lds
int
dec
das
ljmp
pop
jns
xlat
loopne
stos
cltd
int3
or
adc
push
dec
push
and
test
fisttpl
sub
push
hlt
roll
cmp
push
adc
mov
sub
cs
dec
pop
sub
jno
aas
fisttpl
outsb
and
ljmp
fiaddl
pushf
inc
xor
hlt
adc
sbb
test
adc
xor
adc
call
push
movsl
jl
dec
loope
out
mov
icebp
mov
adc
ljmp
adc
call
jl
decl
mov
lock
sub
test
inc
jo
hlt
xor
adc
cmp
imul
dec
sti
cld
lock
xlat
imul
adc
mov
dec
leave
cmpsl
leave
mov
leave
xor
lock
jbe
lods
ror
jp
adc
push
ss
fs
jg
dec
xchg
mov
call
pushf
jnp
test
push
jmp
cmp
mov
inc
jl
scas
sub
test
push
dec
push
clc
les
jecxz
sbb
and
dec
je
lcall
adc
jb
mov
rorb
dec
mov
mov
mov
ret
sarb
mov
xchg
in
sar
jnp
enter
mov
mov
add
dec
dec
push
inc
bound
sub
fwait
or
decb
mov
stc
cs
incl
xchg
mov
push
outsl
jecxz
outsb
mov
sbb
adc
enter
mov
or
lea
ret
xor
adc
mov
adc
xor
sub
or
add
push
adc
add
and
sub
aam
adc
mov
push
ljmp
push
adc
pop
mov
mov
sbbb
js
dec
and
stc
hlt
lahf
adc
adc
sub
insb
pop
sbb
mov
orb
mov
xchg
decl
imul
jbe
sub
push
sbb
adc
loope
stos
sbb
inc
jecxz
testb
dec
push
fmuls
lds
pop
pop
lret
cmp
add
into
aaa
sbb
test
mov
add
sbb
jb
lods
jno
mov
getsec
mov
les
mov
or
adc
lahf
jge
mov
add
adc
dec
std
pop
push
mov
sub
pop
sbb
sbb
rcl
testb
mov
mov
mov
pop
sub
or
loopne
mov
cs
add
jae
cmp
ds
in
dec
imul
popf
jae
jb
dec
inc
mov
mov
xor
mov
mov
push
mov
ds
in
arpl
sbb
inc
ret
dec
in
mov
push
icebp
into
mov
pop
jmp
fimuls
sub
mov
xchg
popa
mov
rcrl
ret
clc
subb
daa
int
or
aas
test
es
out
xor
sub
aad
and
mov
test
dec
inc
test
repz
and
add
push
mov
add
stc
and
mov
and
ss
hlt
jo
in
add
mov
sbb
jns
sbb
lret
add
stos
or
lea
fcoms
or
cmpsl
pop
fisubl
clc
pop
cmc
inc
lds
mov
mov
push
jp
add
clc
loopne
rolb
inc
or
mov
pop
and
lret
aad
jb
jmp
decb
js
ret
or
sub
adc
jg
push
mov
in
insl
out
cmp
dec
movsb
sub
adcl
aam
js
fnstcw
mov
shrb
shlb
pop
pop
sub
fmul
add
pop
inc
in
adc
add
jne
push
add
mov
faddp
leave
push
scas
sub
testl
nop
popl
test
sub
aaa
leave
scas
sbb
stos
lock
ret
xor
and
out
cmp
in
daa
adc
mov
sub
sbb
clc
lahf
out
xchg
pop
jg
iret
fsubl
fistps
mov
in
out
inc
sub
dec
xchg
and
inc
push
pop
cmp
shr
inc
xchg
mov
mov
xor
out
pop
ss
mov
nop
mov
sbb
repz
xor
ret
add
rorl
mov
test
int
xor
push
add
push
add
sbb
ljmp
aaa
rcrl
leave
add
loop
pop
add
sarb
inc
push
movsl
in
xlat
cs
mov
loopne
ror
movl
popa
xlat
popf
or
push
iret
mov
les
sti
or
sahf
cmp
fisttps
roll
mov
test
xor
out
mov
or
incl
mov
test
ljmp
ret
stc
incl
outsl
cmp
push
mov
adc
in
and
dec
sub
in
aaa
mov
xchg
push
or
leave
pop
mov
inc
das
imul
ss
rolb
mov
das
loope
jbe
popf
jecxz
cld
or
mov
add
cmp
or
xchg
push
sbb
sub
and
in
scas
outsl
arpl
nop
stc
or
xchg
adc
cmpsb
mov
push
enter
sub
cmp
lcall
pop
mov
and
decl
les
dec
ds
enter
mov
fcom
fadd
lahf
sbb
imul
les
lret
xor
or
cmp
and
fistpl
shl
pop
daa
pusha
adc
push
in
iret
jno
lods
cmp
and
scas
and
cmp
dec
mov
xor
leave
icebp
imul
pop
sbb
mov
mov
xlat
mov
imul
xchg
cmp
add
dec
sarl
fwait
mov
mov
jp
aaa
add
leave
cmc
sub
push
test
rol
mov
testb
push
fdivs
or
ljmp
pop
add
jo
and
mov
sahf
sub
stc
pop
add
fisttpll
adc
in
clc
out
or
mov
xchg
sbbl
lds
adc
or
insb
or
les
xchg
pop
sbb
int3
negl
inc
sahf
sbb
pop
cwtl
push
xor
pop
pop
mov
cli
adc
mov
jmp
xor
or
hlt
or
out
scas
xchg
mov
dec
sbb
cmp
iret
sub
xor
out
adc
inc
jbe
rol
cmp
imul
insb
insb
add
fadd
xor
xchg
pop
into
or
and
dec
ret
push
je
repnz
adc
jns
jge
in
or
push
loope
dec
dec
xor
push
mov
jle
or
mov
rol
or
adc
sub
in
inc
into
movl
mov
fisubrl
xchg
mov
jl
in
iret
adc
shr
fstpl
mov
adc
sub
insl
sbbb
pop
loop
testl
pop
push
and
sahf
imul
popf
lahf
sbb
retw
dec
in
adc
or
fxch
push
fdivs
mov
sub
or
and
push
xchg
mov
popf
aam
inc
cmp
into
scas
dec
out
les
mov
into
inc
sub
xor
xor
push
xchg
dec
in
dec
hlt
rorb
sub
mov
out
imul
fst
xchg
fsubrs
adc
sbb
nop
dec
std
mov
mov
xor
sub
mov
jns
clc
cmpb
imul
adc
mov
hlt
add
xchg
push
push
andb
ljmp
int3
push
jecxz
sbb
lea
ljmp
mov
sbb
mov
adc
add
sub
mov
adc
jae
sub
sbb
sub
shll
adc
fimull
sbb
push
push
sub
mov
test
pop
sub
jecxz
pop
out
or
adc
repz
stc
int3
add
or
or
mov
sub
sbb
lods
icebp
in
or
sti
adc
pop
in
cmc
mov
push
add
negb
test
push
adc
rcrl
pop
rclb
sub
jecxz
pop
sbb
sub
clc
adc
add
lods
or
sbb
mov
dec
dec
pushf
hlt
dec
jo
sub
push
sub
nop
icebp
cmp
and
into
jecxz
popa
jp
or
nop
adc
pop
jecxz
adc
pop
ret
in
fcomps
fwait
loopne
in
adc
sbb
out
adc
sbb
out
adc
sbb
call
jmp
ret
ljmp
jmp
adc
sbb
in
sub
rcrl
in
sub
in
out
sub
sbb
out
sub
push
sbb
push
sub
sbb
iret
icebp
xchg
cld
sbb
or
dec
sbb
loopne
adc
mov
roll
adc
loopne
push
sub
sbb
mov
sub
sbb
mov
dec
loopne
sbb
push
or
sbb
sbb
push
out
xorb
test
iret
pushf
or
in
sbb
psubsw
leave
shl
out
pop
bound
push
pop
adc
out
out
iret
xchg
stos
mov
in
mov
test
loop
nop
cli
je
mov
mov
mov
mov
mov
xchg
sahf
or
pop
or
pop
adc
sbb
add
adc
scas
add
aam
lcall
lods
cli
jae
and
hlt
call
push
ret
add
fiadds
add
jae
add
sub
clc
enter
stc
int3
or
push
ljmp
push
xor
hlt
mov
add
add
and
add
insb
insl
add
loop
xlat
add
adc
cmp
inc
popa
arpl
adc
lahf
sub
addr16
lock
adc
sbb
adc
xor
out
bound
andb
movsl
hlt
mov
addb
xorl
iret
les
sbb
lret
push
dec
and
pop
ret
bound
imull
shrb
inc
xchg
jns
imul
adc
adc
fiaddl
push
clc
xor
lahf
stos
rep
and
js
adcl
sbb
in
in
dec
push
dec
fiadds
shll
or
adc
push
push
nop
jge
jl
and
lods
and
add
dec
fimuls
lahf
jns
xchg
imul
push
inc
pop
sbb
mov
mov
mov
fildll
in
mov
jge
pop
sub
mov
jge
mov
rolb
jns
xchg
mov
sub
out
jg
or
iret
dec
push
inc
out
sbb
and
hlt
adc
subb
mov
pop
lahf
xor
push
sbb
adc
pop
shl
jne
stos
and
pop
mov
aad
arpl
fidivs
jo
int
hlt
cmp
rolb
fwait
dec
mov
out
xor
lods
in
add
lcall
inc
loope
repnz
mov
inc
inc
adc
leave
fidivs
lahf
movsl
jo
or
rclb
xor
into
shll
cwtl
aaa
cmp
outsb
aad
repz
mov
fdiv
test
inc
je
out
inc
xor
xchg
mov
sub
sub
push
jb
rclb
jae
mov
in
or
fwait
or
inc
push
out
sbb
sbb
rorl
mov
divb
sbb
fwait
les
dec
jo
pop
sub
les
push
adc
andl
arpl
stos
arpl
mov
add
mov
pop
mov
mov
push
xor
add
insl
mov
lock
popa
iret
cld
das
pushf
add
scas
or
pop
rcrb
add
leave
out
sub
popf
dec
inc
int
cmpsb
lds
and
lret
sbb
adc
punpckldq
sub
test
cmp
ss
sbb
adc
testb
add
adc
cmp
sahf
fsubrs
xchg
fwait
cmp
scas
dec
dec
fcoms
xchg
add
or
cmpsl
xchg
mov
or
push
ss
lcall
or
gs
frstor
mov
jae
mov
mov
shl
push
fwait
aaa
lock
jmp
jae
shrb
fsubrl
stc
and
test
out
sbb
pop
cmp
stos
scas
sahf
sbb
fistpl
xor
lret
mov
xchg
jl
mov
sub
pop
mov
or
jo
add
int
sar
mov
fidivl
add
clc
iret
fcompl
repz
sub
or
or
cltd
xchg
mov
gs
jbe
mov
and
sub
inc
lret
je
jbe
shl
ret
fs
cmpsl
xor
into
in
cmpb
xchg
sbb
loope
int3
xlat
pop
scas
cmpsb
mov
push
int
mov
mov
inc
mov
sub
lahf
jl
mov
adc
pop
in
faddl
lahf
stos
jo
inc
pop
cmpsb
and
rcll
das
in
and
cmp
in
lahf
sbb
call
inc
adc
int3
fsub
sub
or
add
xchg
lret
hlt
call
inc
bound
xchg
sti
nop
pop
lahf
add
rorl
stc
sti
insb
cmp
adc
add
xchg
xor
mov
mov
enter
mov
inc
dec
xor
ret
test
sub
inc
add
push
fcmovnu
aaa
dec
jns
repz
ja
mov
jnp
je
mov
pop
mov
ficoml
test
shlb
pop
decl
sub
xchg
cmpsl
out
push
xchg
test
adc
outsl
push
adc
hlt
sahf
loop
or
lret
dec
xor
cmpsl
xor
nop
test
out
mov
jle
in
mov
fsubrl
pop
arpl
fcoml
enter
or
mov
xlat
mov
mov
subb
ficomps
adcb
test
loopne
out
les
not
add
repnz
sbb
rclb
repnz
dec
in
fisubrs
icebp
shrb
pop
lock
imul
sbb
jne
mov
push
adc
cmpsb
mov
add
sub
mov
sub
inc
add
sub
cmp
insl
jge
sub
mov
js
mov
lcall
mov
sbb
gs
pop
ss
inc
std
dec
imul
sub
xor
cmp
loop
lods
add
gs
adc
adc
mov
dec
push
xor
testl
pop
xor
das
sub
xor
adc
popf
clc
inc
imul
sbb
loop
sub
mov
xchg
cmp
fidivl
jge
lahf
sbb
addr16
or
push
adc
mov
jo
xchg
and
stos
and
stos
mov
mov
out
iret
lock
scas
es
dec
and
lret
leave
lea
mov
stos
fldcw
mov
mov
jmp
lods
ret
rcll
test
adc
add
dec
jp
cvttps2pi
add
ja
es
push
ss
loope
mov
movsl
sub
sub
jl
adc
push
sbb
sahf
popa
jbe
add
into
adc
cwtl
cld
movsb
mov
adc
and
mov
subb
xor
cld
mov
xchg
pop
out
jg
xchg
bound
push
in
inc
fldenv
test
jg
jg
loop
inc
add
adc
lea
lock
push
fwait
repz
jns
aad
pop
fisubrl
rcl
call
sbb
mov
lock
and
pavgb
cli
cld
sub
push
hlt
and
imul
fdivl
into
fdivr
in
fldcw
insb
mov
repz
imull
lcall
push
out
mov
lcall
sar
in
or
add
cmpsl
sub
pushf
aam
fdivrl
jae
imul
xor
ret
push
scas
or
push
insb
jnp
out
cmc
mov
jae
fnsave
in
into
push
mov
lds
lock
arpl
inc
loop
inc
out
lea
adc
inc
fnstsw
add
adc
pop
mov
dec
int
mov
jp
inc
adc
int3
ret
aaa
lret
xchg
fwait
inc
shlb
cmpsb
or
sti
or
fcoml
inc
aad
aam
push
aaa
push
cli
cmp
nop
xchg
leave
add
or
out
dec
jmp
push
cmc
loopne
jns
push
fdivp
pusha
or
scas
call
out
loope
dec
mov
push
aas
add
pop
in
sub
pushf
add
xchg
xchg
loopne
in
mov
rcrb
xchg
sbb
push
iret
lock
and
lret
xor
mov
mov
ds
mov
push
adc
lret
add
jb
xchg
add
xchg
or
mov
ficoml
lahf
aad
shrb
mov
xchg
mov
add
call
loopne
sbb
adc
pop
ss
mov
mov
adc
lahf
lods
sti
cld
ret
fdivrl
dec
into
ss
dec
jecxz
sahf
sub
lea
jg
fs
or
out
mov
ja
mov
or
adc
cmc
nop
sbb
ds
imul
lahf
mov
daa
mov
cmpsb
arpl
adc
leave
mov
ljmp
cmp
dec
add
nop
adc
dec
add
aad
shll
sub
nop
xchg
sbb
sub
cmpsb
cmpsb
sub
and
dec
les
sbb
jl
jo
add
push
test
lods
or
int
jne
xor
in
push
add
xor
dec
sbb
sbb
xor
es
push
adc
into
add
push
add
inc
adc
fisttpll
mov
loop
add
jne
mov
ljmp
pop
adc
out
ret
mov
xchg
shr
ljmp
push
mov
fimull
aaa
dec
push
leave
out
push
xor
cmp
aaa
and
jo
or
mov
ret
mov
mov
icebp
adc
fildl
xchg
xor
dec
mov
mov
fstp
adc
cmp
mov
dec
jg
jb
cli
and
sbb
cmp
adc
les
icebp
fidivs
dec
and
push
scas
int3
call
nop
pop
inc
gs
xchg
sub
js
ret
dec
insl
and
movsb
loope
scas
shrb
ficoml
xchg
into
in
dec
add
stc
inc
pop
cmp
loop
mov
xchg
int3
jae
pushf
add
mov
mov
sti
jmp
and
inc
xchg
cltd
inc
add
sub
out
mov
xchg
fwait
roll
dec
pusha
jg
xchg
dec
fsubs
push
outsb
add
push
mov
fstpl
fldl
mov
jne
cmp
fsubr
cmp
in
in
pusha
inc
shrb
cmp
cmp
enter
cmpsb
fstl
inc
pop
out
xor
sbb
andl
pop
scas
fdivrl
mov
lahf
cs
ret
mov
pushf
push
movsl
push
pop
movsl
sub
ret
lods
mov
xchg
or
out
test
dec
inc
movsb
divb
cmp
stc
pop
mov
sub
imul
icebp
stos
mov
mov
pop
fidivrs
lahf
loop
cmc
dec
add
push
cmc
pop
rol
sarb
dec
ss
cmp
in
pop
or
or
rcrb
lods
jb
iret
addl
dec
sub
stos
lods
mov
or
subl
inc
lods
out
or
aas
in
call
mov
scas
aaa
or
pop
lahf
add
pop
pop
or
sarl
in
iret
lods
js
mov
rcll
xor
adc
out
push
adc
lods
push
jmp
or
stos
repnz
jmp
ss
add
daa
adc
adc
loopne
clc
addr16
xchg
xchg
pop
jbe
fstp
rcl
xor
repz
add
mov
pop
bound
cmp
test
icebp
cli
adc
lds
cmp
or
add
inc
push
rorl
popf
test
call
stos
add
orb
leave
add
pop
les
pop
inc
or
aaa
and
jl
lods
arpl
push
ljmp
mov
out
fcom
sbbl
cltd
adc
lcall
fprem
or
ja
and
xor
push
out
cmp
fistl
out
aad
in
mov
sarl
stc
add
jecxz
mov
loope
add
gs
aad
in
lahf
pop
pop
in
shrb
mov
sub
cmp
subl
lock
popf
jecxz
mov
cmp
or
sarb
and
mov
or
mov
xchg
push
enter
pop
push
add
adc
stc
add
xchg
and
push
scas
jno
mov
push
xchg
cmpsl
gs
push
or
stos
add
adc
test
jno
aad
hlt
cmpsb
in
pusha
inc
sbb
dec
das
add
xor
dec
in
loope
pop
xchg
add
adc
mov
repnz
xor
mov
inc
adc
mov
mov
das
stc
pushf
and
ret
idivl
or
pushl
inc
or
lcall
xchg
in
mov
shrl
mov
imul
rorb
pop
dec
mov
pop
jp
and
push
nop
sahf
xor
xor
xor
cmc
imul
mov
shrb
ds
rclb
jb
out
push
sti
out
inc
or
popf
ret
sbb
sub
into
aam
lret
jl
adc
add
xor
push
pusha
inc
mov
xchg
fldl
div
mov
int
sub
jno
lret
mov
mov
jmp
push
ret
add
loopne
imul
mov
enter
jbe
push
mov
shrb
ret
mov
sbb
adc
shlb
or
and
pop
shr
xor
mov
hlt
ficomps
out
or
or
xor
ffreep
outsb
jnp
ret
xchg
sbb
ljmp
fucomip
sub
push
mov
adc
xchg
inc
cld
push
xchg
and
xchg
scas
xor
sbb
js
shrl
mov
push
out
mov
push
arpl
push
ret
mov
in
adc
push
inc
adc
rolb
jmp
cmp
push
repnz
mov
mov
lock
and
jecxz
in
fists
mov
repz
notb
mov
lods
fcomp
add
jbe
and
and
fnsave
add
mov
mov
dec
in
pop
movsb
out
mov
push
add
xchg
mov
and
fwait
pop
push
or
push
addr16
inc
jnp
rclb
mull
pop
or
and
and
pop
sbb
and
and
ss
xor
xchg
mov
lds
repz
out
repnz
push
xor
repnz
dec
jns
push
sbb
int3
mov
inc
mov
clc
add
insb
stos
mov
mov
cmc
pop
call
jg
repnz
inc
jae
punpckhdq
sub
dec
mov
outsb
adc
dec
sbb
jae
mov
stc
cmp
gs
xchg
sub
push
sub
jae
mov
jmp
mov
push
xorl
inc
call
test
inc
cmp
push
jl
xchg
pop
xchg
add
mov
xor
sub
dec
sub
inc
out
stos
in
inc
or
mov
mov
sarb
adc
sbb
int3
push
jo
pushf
pop
pop
scas
push
rclb
addr16
mov
pop
pop
pop
adc
sahf
repnz
enter
roll
add
sbb
in
push
mov
ret
lds
out
repnz
pop
sbb
xorb
in
aam
ja
xor
adc
mov
dec
rorl
mov
jg
scas
fistl
adc
sub
mov
add
inc
inc
in
mov
cmpxchg
lock
pop
enter
std
adc
jmp
fstpl
xacquire
add
adc
pushl
mov
mov
je
int3
mov
or
or
lock
jl
pop
inc
xchg
pop
dec
push
jg
sbb
pop
inc
add
adc
loopne
or
add
clc
das
icebp
mov
call
hlt
movq
cmp
inc
int3
or
call
inc
pop
icebp
pop
popf
push
in
inc
add
les
fnstenv
sahf
gs
sub
push
lret
dec
fs
daa
rol
sbb
sub
fcompl
test
and
popa
lret
mov
add
xchg
scas
or
xchg
push
add
inc
mov
aaa
fisubl
in
pop
or
mov
push
dec
cmpsb
cmp
subl
loopne
mov
ret
in
add
call
lret
mov
adc
andb
add
sahf
xchg
cld
sti
push
rep
dec
mov
int3
je
stos
adc
sub
sub
mov
jne
fsubs
push
jmp
iret
jp
adc
xor
fdivrp
stos
fs
nop
or
and
imul
bound
in
lock
and
rcrb
ret
jmp
cmp
popl
fucomi
sbb
sbb
add
adc
addl
fcoml
jns
mov
jmp
inc
add
out
add
ror
lock
cwtl
in
aas
jns
into
mov
shrb
pop
call
ret
shr
adc
xor
and
int3
pop
scas
rclb
out
adc
push
mov
lock
fs
pop
push
into
cmp
popf
mov
pushf
sbb
xor
push
mov
inc
and
adc
jns
shll
jp
cs
rcll
xchg
push
icebp
add
inc
and
adc
ljmp
imul
pop
adc
mov
inc
imul
shr
fcmovb
add
aaa
mov
in
data16
dec
sub
mov
addb
ss
fmul
ja
sbb
push
xchg
repnz
jns
mov
mov
les
add
test
cmp
lods
add
out
int3
cld
orl
mov
ret
enter
sub
stos
ret
aas
push
mov
cmpsb
repz
mov
js
loope
inc
xchg
mov
cwtl
les
jno
int3
jbe
fisttps
inc
inc
mov
into
rcl
lret
rorl
push
dec
mov
ds
xchg
or
push
pop
cmc
lods
sbb
cmp
mov
stos
xchg
pushf
or
sbbb
inc
mov
or
sbb
stos
and
jo
push
add
imul
les
in
aas
or
sub
movsb
and
int3
ret
mov
inc
xor
in
or
std
pop
or
stc
sbb
mov
lret
std
mov
or
inc
movsb
or
or
sub
xor
icebp
test
lods
mov
movsb
addl
int3
push
nop
mov
mov
out
mov
push
sub
lret
cs
loopne
push
or
mov
test
or
xor
adc
ljmp
sti
jae
sub
pop
mov
rcl
lret
pop
test
fidivrs
arpl
frstor
ljmp
push
inc
xchg
mov
pop
xorl
sub
jnp
int
xchg
xorb
jle
test
test
push
xchg
addr16
loope
iret
out
test
je
dec
mov
addb
and
fnsave
outsl
and
push
mov
cld
jne
xchg
mov
ljmp
push
mov
shr
hlt
adc
inc
push
cli
inc
scas
aas
inc
pusha
aas
sbb
movsl
in
add
sub
call
pop
test
in
scas
pusha
mov
pop
adc
icebp
int3
mov
and
sub
inc
aam
insb
cmp
lcall
fists
xor
in
dec
add
push
xor
ss
insb
loopne
inc
mov
mov
cmp
iret
mov
mov
xor
push
and
dec
int
adc
lock
or
fmull
pop
sbb
test
mov
jmp
fistl
lret
and
push
and
push
lahf
dec
shl
clc
fcmovne
nop
cmp
rolb
jns
add
jmp
sahf
push
scas
pop
repnz
inc
pop
jo
xorl
ret
addb
push
cmpsb
scas
and
dec
hlt
fmull
mov
pop
push
push
test
out
aas
mov
mov
lahf
lods
loopne
or
ret
les
scas
sub
xor
lods
mov
iret
dec
cli
inc
push
shlb
adc
xor
cmc
sbb
repnz
and
jge
out
xchg
jmp
or
hlt
push
pop
inc
cld
xor
dec
dec
imul
dec
xchg
in
sahf
incb
sbb
push
xchg
or
inc
mov
into
push
dec
into
mov
add
aaa
mov
test
iret
mov
das
clc
rcr
push
sub
xor
repnz
sub
mov
fnstenv
cmp
std
daa
mov
test
call
hlt
xor
hlt
loop
add
jnp
repz
dec
or
xchg
cli
popf
dec
adc
adc
rclb
or
sub
add
mov
out
pop
add
sbb
push
inc
shll
into
adc
ret
shr
mov
cmpsb
ret
inc
adc
mov
lahf
add
inc
fsubp
adc
sub
mov
enter
jbe
xchg
nop
rclb
andnps
cmpsl
dec
in
mov
mov
sar
leave
aas
or
adc
repnz
push
or
mov
jne
pop
mov
mov
xchg
inc
incb
dec
pop
sbb
dec
mov
sub
arpl
xlat
dec
mov
imul
pop
popf
loop
rclb
les
dec
shrl
mov
push
aad
sti
pusha
into
jns
les
sub
mov
hlt
mov
xor
cld
xchg
push
cld
cwtl
testl
icebp
in
cmp
and
repnz
in
xchg
nop
scas
inc
out
add
notl
into
hlt
xchg
or
int3
frstor
push
add
push
ss
test
inc
dec
jmp
dec
mov
mov
lret
fsubl
sub
pop
mov
movsl
jne
sub
xchg
sub
stos
inc
rolb
sub
mov
mov
cmp
jp
pop
shl
xchg
ret
push
push
sub
stos
or
mov
mov
cltd
sti
test
subb
fmull
test
rolb
cmpsb
jno
mov
call
std
mov
mov
stos
cmp
lds
jb
add
mov
ror
in
repz
rclb
jae
mov
call
stos
add
sub
inc
aad
ret
mov
icebp
push
stc
mov
sub
add
lea
mov
or
jle
clc
pop
insb
popl
adc
sub
call
cmc
je
jmp
int3
popa
mov
fs
int3
jle
and
jo
das
lods
repnz
les
pop
mov
pop
stos
xor
cwtl
fstpt
lret
nop
push
ds
inc
bound
cmp
xchg
in
xchg
sub
adc
cmpsl
sub
mov
add
cmc
aam
pushf
cs
jne
shrb
dec
mov
bound
or
mov
sub
fisubs
inc
in
shlb
push
movsb
into
call
pushf
sbb
or
in
add
jae
pop
ret
pop
sub
adc
in
je
aam
sub
dec
mov
xchg
das
add
dec
mov
mov
adc
sub
lcall
push
or
icebp
xchg
jmp
or
fsubl
test
pop
push
and
out
cmp
aam
pusha
mov
sub
jbe
xor
mov
imul
adc
nop
mov
jp
push
adc
mov
ret
lds
push
mov
repz
scas
roll
adc
and
sub
dec
sub
rol
lahf
fisttpl
xlat
or
add
ja
inc
mov
push
fisubrs
rolb
sbb
mov
jmp
inc
test
test
iret
mov
mov
sub
pop
call
push
xor
jne
xchg
repz
pop
ss
mov
movsb
shrb
or
sbb
mov
test
loopne
call
aas
dec
add
in
andb
jae
movsb
mov
xchg
mov
rolb
lahf
shll
fadds
in
aam
je
and
cwtl
mov
icebp
jae
pop
push
xchg
inc
xor
lock
push
lret
mov
int3
mov
jmp
push
jp
add
hlt
dec
push
mov
mov
lds
dec
nop
mov
sbbb
rcll
ljmp
out
sub
cmp
dec
mov
mov
shrl
mov
addb
fisubrs
mov
add
xchg
ror
sbb
rcll
pushl
ret
xor
out
mov
pop
xlat
out
push
inc
pop
test
add
xor
loopne
mov
cltd
xor
dec
pop
push
adc
cmp
stos
cmp
sti
mov
jbe
notl
add
xchg
jmp
dec
scas
ret
sahf
push
xchg
add
fisubs
fimull
push
push
adc
pop
in
leave
push
dec
xchg
cmp
jl
pop
outsl
je
inc
pop
jmp
adc
int
mov
ret
clc
or
fidivs
pop
bound
sub
cld
inc
xchg
add
add
nop
adc
mov
orb
fstpt
and
aam
into
mov
jns
rorl
add
into
std
or
pop
rorb
mov
dec
push
movsb
lods
mov
fs
mov
mov
sub
shlb
inc
inc
add
sbb
cmp
test
fstpt
lods
sbb
sbb
mov
loope
cld
sbb
sub
add
xchg
push
jae
sub
jmp
jo
mov
hlt
cld
into
hlt
leave
xchg
repz
mov
in
je
hlt
add
fs
xorb
dec
fimuls
fs
frstor
cwtl
pop
adc
sub
dec
adc
in
pop
mov
mov
out
mov
lahf
inc
fs
or
lret
rcrb
sbbb
pop
and
aad
ds
dec
mov
mov
fldlg2
sub
aas
jg
mov
std
jl
pop
loope
popl
pop
mov
sbbl
add
arpl
dec
lret
ljmp
mov
sub
hlt
push
les
mov
jbe
cmp
mov
in
xlat
and
mov
jo
dec
xchg
pop
cmp
cmp
dec
js
xsha1
jmp
fwait
push
sahf
push
sbb
push
mov
aad
jno
mov
int3
inc
lret
push
sbb
mov
rol
inc
jmp
dec
add
fadd
push
xor
fsubrs
arpl
fadd
lret
xor
rorb
dec
clc
sub
sbb
push
pop
pop
push
aas
sahf
lods
mov
mov
aaa
or
sub
sub
imul
clc
mov
adc
sub
dec
mov
pop
sub
xlat
out
iret
add
lea
fld
push
push
add
pop
pop
ja
aam
in
cmp
xor
std
shl
jne
mov
loopne
push
push
add
das
scas
les
aam
rcrb
daa
adc
jnp
cli
loope
inc
loop
sub
push
nop
sarb
in
sbb
jb
xor
sub
fwait
ret
mov
adc
movsb
sahf
adc
fmull
inc
sub
adc
rcr
call
insl
pop
popf
sti
gs
in
repnz
fnstenv
les
repnz
jmp
stc
jnp
push
jmp
sub
shr
loopne
xor
mov
push
jae
cmp
mov
mov
popf
in
pop
movsb
add
xchg
test
fisubrs
add
sahf
fstpl
xchg
out
mov
jb
sub
outsl
mov
mov
sbbb
xchg
gs
add
cli
test
push
mov
nop
mov
pop
sar
aam
push
idivb
push
sub
pusha
mov
and
sbb
ret
adc
incb
lret
cmp
movsb
sub
and
rcr
jns
loopne
ficoms
stos
or
pmaxsw
lret
push
cmc
jne
in
lret
pop
xor
mov
push
lcall
pop
mov
loop
loopne
in
rcr
int3
clc
add
daa
fcomp
loopne
mov
fs
in
mov
jns
call
push
addr16
stc
push
loop
or
mov
inc
push
sbb
or
add
or
fwait
sbb
sub
sub
int
or
shl
pop
adc
leave
out
mov
add
jno
shlb
adc
push
sbb
fsub
movsb
and
mov
and
scas
sbb
popf
push
lcall
xor
sub
xchg
add
sbb
out
in
or
fnstenv
lock
and
fdivrs
jmp
scas
mov
loopne
int3
xor
jns
test
adc
sub
psubb
push
mov
flds
cld
push
pop
aas
jo
cltd
sti
or
push
fs
stos
push
nop
adcl
shlb
adc
push
pop
add
mov
dec
es
xchg
sbb
out
cmp
cmpsb
leave
inc
fstps
sub
clc
neg
lahf
mov
sti
cmpsb
mov
rolb
cmpb
fsubs
adc
lcall
xchg
jg
jmp
add
sbbl
lcall
rcrl
scas
mov
ljmp
add
int3
out
cli
dec
fcoml
int3
push
fidivrs
cmp
mov
add
ret
popf
ss
cmpsb
in
hlt
mov
popf
and
lods
xchg
out
pop
sarb
inc
divl
mov
jmp
add
or
xor
sbb
xchg
je
mov
ds
idivb
lahf
pop
inc
cmp
andl
mov
aaa
bound
test
fs
imul
adc
dec
icebp
dec
bound
int3
or
shlb
xchg
stos
add
lret
adc
xorl
add
out
loopne
cltd
add
sbb
nop
dec
stos
push
add
ror
shl
cmp
or
push
arpl
xorl
hlt
sbb
call
ljmpw
sub
or
mov
lock
add
cmpsl
out
inc
fldcw
xchg
addr16
adc
repnz
add
dec
lcall
fisttpl
in
pop
loopne
pop
mov
sub
ret
mov
jg
push
test
das
enter
add
sub
aas
mov
or
out
mov
push
xor
fstps
in
fcmovnu
fbld
sub
data16
movsb
aam
adc
inc
pop
insb
js
imul
inc
pop
xor
sbb
out
jmp
xchg
inc
adc
data16
insl
cmc
cli
sub
jns
jp
dec
xchg
pushf
cld
stos
sub
pushf
es
nop
or
sub
aas
sbb
mull
dec
mov
jg
jp
fwait
jmp
in
mov
out
rolb
pop
mov
or
mov
into
inc
mov
or
add
add
xchg
mov
rorb
in
sub
std
out
lds
pop
cs
xchg
call
pop
jecxz
call
mov
repz
aas
cli
mov
and
roll
in
aaa
jge
jo
dec
mov
int
ljmp
and
dec
cmpsl
or
dec
inc
xchg
leave
xor
pop
mov
add
mov
jmp
pop
shufps
popf
and
sub
jp
lods
xlat
xchg
xlat
loopne
jo
xchg
dec
inc
lret
imul
sub
in
popf
inc
or
dec
adc
pop
shlb
stc
fwait
hlt
out
loop
jg
mov
fidivrl
jns
cmpsl
jne
call
sti
mov
shr
imul
popf
xchg
xchg
cmp
sbb
sub
jbe
xchg
add
jle
cmp
pop
popl
xchg
mov
enter
mov
add
js
fwait
lcall
mov
mov
test
test
mov
test
xor
dec
stc
mov
ror
and
jecxz
in
fcompl
mov
sbb
xchg
mov
add
inc
in
icebp
pop
jae
sub
jl
repnz
scas
add
sub
pop
les
push
in
in
push
jb
ds
loopne
pop
testb
insl
shll
mov
and
push
addl
fwait
cmp
mov
add
xor
jmp
push
roll
dec
rcrb
mov
cmp
jmp
aaa
fs
sub
call
mov
nop
mov
mov
mov
jo
mov
lods
inc
aad
jmp
pop
sbbb
loop
or
ljmp
jge
lods
sub
adc
scas
sub
nop
rcrb
test
and
cmp
sbb
mov
and
cmp
pop
mov
rcr
or
inc
rorb
pop
xor
ljmp
dec
lret
push
subb
add
pop
out
incl
adc
andb
movsl
cmp
je
sbb
inc
cmp
mov
out
mov
in
loopne
mov
stc
cwtl
pop
ret
jl
adc
insb
aad
add
xchg
pop
sub
jle
leave
adc
pop
mov
pushf
adc
shrb
test
repnz
ret
in
add
insb
jmp
aaa
or
push
das
dec
xor
ret
jae
cmp
adc
adc
sub
add
dec
add
adc
fsubrp
fdivl
mov
out
sbb
lds
add
inc
insl
pop
stc
hlt
xchg
enter
pop
sub
mov
fmull
inc
outsb
or
xor
dec
loopne
cld
out
mov
cld
rorl
mov
orl
movsl
dec
jnp
fucomi
test
rclb
in
cld
iret
sbb
arpl
pusha
sub
xchg
sub
mov
xchg
mov
lds
bound
enter
insb
stc
decl
add
push
cld
out
nop
adc
xor
inc
mov
shl
add
jno
sahf
sbb
leave
mov
and
decl
leave
std
aad
mov
mov
rcrb
arpl
pop
pop
xchg
lock
pop
xchg
icebp
xchg
inc
adc
and
mov
in
enter
testl
xor
lret
int3
lret
mov
cmp
hlt
inc
sub
push
inc
mov
mov
js
cmpsb
inc
sbb
cmp
adc
xchg
into
insl
aas
jl
lahf
or
outsl
and
mov
adc
leave
add
sahf
add
sub
jno
push
test
mov
sub
xchg
sub
bound
in
icebp
jle
fwait
in
mov
imul
mov
ret
adc
mov
jmp
stos
lock
or
sub
pop
pusha
add
leave
fldl
dec
inc
xchg
jmp
test
or
xlat
push
pusha
inc
sub
out
dec
nop
scas
sub
shr
pop
call
push
ds
in
mov
xchg
push
lock
sbb
in
pop
xchg
imul
js
and
sub
push
sub
push
xor
and
ret
fists
xor
sbb
jo
movsl
outsl
in
inc
push
jl
icebp
mov
ja
rorl
les
adc
jp
cmp
pop
jnp
xor
push
jg
cwtl
test
jne
sbb
adc
sbb
push
es
push
ja
loope
and
out
sbb
popa
loopne
sub
pop
or
add
xchg
lods
or
sbb
push
mov
dec
mov
test
dec
out
ss
sti
nop
into
repz
add
mov
sub
leave
sarl
mov
pop
shrb
push
adc
xor
call
ret
mov
mov
jae
fsubl
daa
xor
xchg
pop
mov
imul
ds
mov
psllw
loope
cmp
cwtl
pop
dec
xchg
jae
push
and
loope
xchg
and
ret
xchg
cmp
fwait
les
jg
lret
adc
inc
mov
pop
dec
scas
pop
popf
or
sub
imul
push
rorl
pop
sub
inc
sub
data16
sub
push
adc
sub
test
or
mov
out
pop
adc
aas
rol
ret
adc
enter
sbb
mov
sbb
scas
inc
mov
les
inc
ficoms
add
push
xchg
sbb
mov
enter
dec
mov
enter
xor
jg
adc
iret
dec
sub
mov
imul
xchg
divb
andl
xchg
imul
sub
jae
sbb
repz
cmp
xor
xor
clc
ja
fldcw
std
mov
imul
xor
adc
pop
clc
popf
and
int
or
mov
adc
sbb
inc
int3
call
adc
addps
or
or
ja
repz
add
pop
adc
icebp
or
in
adc
adc
mov
in
js
dec
enter
into
das
inc
mov
in
dec
test
call
nop
jecxz
inc
adc
out
add
hlt
jnp
or
mov
outsl
inc
pop
mul
lods
nop
or
dec
nop
fucom
xor
imulb
push
fwait
mov
ffree
das
scas
lods
dec
xchg
orb
add
in
out
out
mov
sub
arpl
xchg
shl
sub
sub
repz
mov
lods
sub
jbe
or
rcrb
lret
imul
add
orl
add
adc
pop
rol
dec
mov
pusha
les
jae
sahf
add
pusha
idivl
iret
outsl
cmpsl
clc
dec
lret
push
lock
or
push
pop
shl
aad
fldl
sub
andb
pop
fadd
mov
pop
push
je
dec
or
pop
dec
daa
mov
or
lret
insl
push
and
sub
sarb
insb
xchg
mov
push
push
fcomp
ficoml
jmp
cmp
stc
ja
leave
and
in
xchg
aad
mov
mov
mov
mov
mov
or
pop
inc
andb
adc
or
xchg
in
mov
adc
in
jmp
push
inc
int3
sub
inc
fcoms
call
xchg
lret
mov
sbbl
mov
xorb
adc
add
leave
out
and
xchg
aad
in
daa
insl
push
mov
int3
sub
inc
inc
popa
mov
bound
push
mov
mov
movsl
push
fcom
pop
mov
inc
sbb
lock
std
lods
inc
daa
sub
das
mov
insb
sbb
repz
dec
add
sbb
or
in
cmpsl
lahf
mov
lods
test
and
xchg
mov
mov
inc
rclb
push
imulb
dec
fmuls
jle
roll
fdivr
in
adc
ret
xor
sbbb
aaa
test
loopne
data16
in
aad
dec
add
sub
ret
loopne
and
in
push
jb
xchg
jmp
adc
dec
dec
rorl
clc
leave
stc
push
xchg
add
sub
int3
notl
pop
fcoml
rorb
aaa
or
or
sarl
push
andl
lahf
cmp
pop
push
jmp
stc
fsubrs
test
fwait
jno
sahf
int3
das
daa
mov
xchg
xchg
lcall
dec
sub
and
mov
lds
or
adc
movl
lret
inc
or
jle
mov
lds
sarb
and
pusha
call
cmp
out
adc
dec
roll
push
lds
jno
push
or
jge
jns
fwait
pop
int
adc
lahf
or
ds
adc
rcrb
sub
or
ret
aas
mov
xlat
add
mov
and
sarb
stos
adc
mov
sbb
cmpsb
je
add
loopne
mov
cld
sub
or
mov
sub
cltd
pop
repnz
je
imul
sub
and
jmp
and
dec
je
iret
adc
shl
mov
push
dec
mov
or
xor
add
cmp
stos
dec
sub
sub
or
mov
xchg
insl
aad
dec
cmpl
lods
jp
mov
ja
scas
cmp
xlat
sbb
roll
imul
call
push
xor
mov
or
aad
or
orl
mov
out
sti
outsb
jne
sbb
dec
fsubs
lods
aad
fs
mov
ret
xor
faddl
test
into
adc
push
xchg
inc
jmp
dec
aad
shrl
sbb
test
mov
add
dec
clc
mov
rcll
fcmove
xchg
cmpsl
xor
ret
mov
mov
rcl
push
dec
imul
repnz
cmp
loop
lahf
orl
jb
es
cmp
add
call
adc
cmp
jmp
in
call
jg
sbb
lock
and
shll
dec
jecxz
dec
pop
xchg
xor
xchg
mov
lcall
push
pop
mov
xor
add
xchg
jmp
or
je
xor
out
in
add
xchg
enter
fcoml
popa
in
or
sahf
push
rorb
in
sub
dec
pop
fs
jecxz
sbb
push
pop
jne
outsb
loope
sub
pop
cli
repnz
and
subb
xchg
pushf
insl
stos
lahf
aaa
lret
test
loopne
dec
adc
mov
mov
add
or
pop
dec
cmc
mov
cmp
adc
mov
xchg
add
add
lahf
push
add
mov
add
add
lock
lock
sarb
ret
mov
push
in
adc
cld
adc
ljmp
dec
mov
lcall
adc
adc
mov
xchg
insl
andl
mov
cwtl
adc
add
pop
cmp
mov
or
dec
cwtl
out
fimuls
dec
pop
mov
jne
cmpsb
hlt
mov
fwait
addr16
inc
stos
xor
and
popl
adc
int
pop
xchg
and
dec
or
adc
mov
pop
and
lock
cmp
icebp
dec
ljmp
dec
outsb
jnp
xchg
jbe
pop
ret
lret
loope
pop
movsb
repnz
sarb
xor
rorl
and
or
xchg
add
adc
test
jbe
rcll
popa
or
sbbl
mov
pop
leave
mov
mov
outsl
insb
push
bound
int
inc
push
aam
push
nop
repnz
das
rolb
subb
sahf
and
add
push
inc
sbb
jecxz
adc
in
cmp
stos
mov
pop
stos
inc
fucomip
in
ror
call
adc
sub
and
fmull
test
insb
scas
dec
rcrb
adc
loopne
enter
lds
pop
add
sub
daa
push
xchg
data16
mov
pop
pop
xor
sbb
xchg
test
mov
lret
lods
adc
sbb
stc
inc
sti
add
mov
out
inc
add
jns
mov
fs
dec
mov
clc
popa
dec
add
jo
pop
hlt
shrl
popf
mov
lahf
add
out
hlt
and
rcl
dec
jge
jmp
sbb
cmc
adc
fidivrl
jp
add
xchg
mov
or
data16
nop
push
and
mov
loop
add
xchg
gs
je
jns
fnstenv
cli
rclb
sbb
in
inc
loope
arpl
mulb
lret
insl
adc
inc
ret
movsb
add
aaa
out
icebp
mov
popa
mov
push
in
and
push
lock
push
icebp
inc
repz
adc
clc
mov
hlt
std
sar
lahf
pop
movsb
iret
out
sub
sub
ficomps
sbb
repz
jge
test
gs
out
subl
flds
psllw
adc
lret
enter
int3
mov
clc
rolb
xor
out
enter
cmp
loop
add
inc
ljmp
in
iret
push
mov
filds
aad
cmp
inc
mov
fwait
xchg
testl
outsl
ljmp
mov
add
gs
or
pop
mov
add
xor
fstpl
pop
dec
lahf
add
fimull
sbb
mov
adc
sub
rcrl
xor
push
icebp
adc
movb
adc
adc
lret
mov
jg
add
ret
in
or
repz
vpmacsdqh
mov
add
add
sub
sbb
sbb
sub
add
cld
xchg
rcll
stos
into
fnstcw
hlt
xchg
je
push
dec
in
pop
js
out
icebp
repnz
rcr
or
call
enter
cld
adc
add
movsb
aam
lahf
add
jmp
into
enter
cmp
push
sahf
rcl
les
inc
add
inc
dec
int3
xor
pop
stc
out
icebp
cmpb
rorb
int
js
loopne
adc
jecxz
or
xchg
dec
lock
lods
sbb
fwait
adc
das
mov
adc
adc
femms
or
xor
or
or
jl
fcmovne
das
push
inc
mov
out
add
clc
sbb
out
test
loop
jg
cwtl
cmp
push
mov
cmp
add
shll
xlat
xor
or
ret
lock
rcl
ja
mov
or
sub
aaa
pop
stos
ds
jno
mov
aas
pop
or
pop
fadd
movsl
sub
or
add
add
iret
jle
loop
mov
les
push
xor
cmpb
sub
jge
loope
dec
aaa
rclb
cld
lahf
jae
lret
loop
in
and
push
xchg
inc
mov
fisttps
les
adcl
sub
and
pop
pop
mov
aaa
jge
mov
pop
pop
clc
jb
add
jae
fimuls
cltd
pushf
in
adc
dec
push
cltd
lret
sbb
add
arpl
mov
cmp
push
mov
sbb
fadd
xor
aam
stos
add
je
loop
push
push
jbe
repz
lahf
dec
mov
pop
outsb
push
dec
mov
fcomi
rcl
dec
hlt
pop
sub
push
cltd
enter
int3
ffree
or
fisubrl
sbb
mov
adc
or
aaa
and
in
jmp
jbe
xor
xchg
cmc
and
cmc
sub
mov
ds
push
lret
add
pusha
test
mov
fcomi
pop
repnz
dec
push
jb
xlat
lret
int3
enter
inc
adc
dec
mov
ds
lret
pop
outsb
sti
mov
xchg
add
fnstcw
cs
xlat
ds
fs
addl
push
iret
mov
mov
add
xor
or
stos
mov
jge
icebp
inc
lds
adc
cmp
fcoml
das
push
negl
sahf
jecxz
int3
shrl
lret
inc
enter
outsl
add
dec
sahf
ror
cmc
shl
outsb
ficoms
outsb
aad
jle
js
xchg
test
dec
lahf
cli
jmp
xchg
sub
pop
ja
mov
pop
jg
xchg
pop
dec
mov
add
adc
sub
iret
sub
jge
pop
sbb
jl
sub
and
movb
shrl
int3
aam
pushf
pusha
sub
test
xor
stos
sub
hlt
in
loopne
bound
adc
dec
rcrb
or
sub
fdivrl
in
mov
cli
mov
add
insl
dec
or
stc
push
inc
dec
gs
sar
jb
mov
push
xchg
pop
mov
mov
xchg
mov
imul
mov
call
or
lret
lods
mov
fisubs
outsb
adc
inc
js
aam
xchg
inc
pop
adc
push
stc
bound
int
stc
cmp
mov
hlt
sub
add
add
mov
xlat
xlat
enter
push
icebp
test
data16
fcom
or
inc
jecxz
dec
xchg
dec
mov
into
xor
arpl
mov
test
or
xlat
fwait
ja
mov
out
das
pop
out
icebp
xchg
popf
jmp
adcb
inc
call
mov
pusha
or
push
dec
inc
sbb
mov
ret
jmp
sub
xor
mov
rolb
inc
lahf
shrl
sbb
push
dec
repz
movsl
scas
mov
ret
rorb
cli
cmpsl
pushf
shl
in
filds
jb
scas
adc
pop
popf
xor
mov
dec
pop
inc
out
cmp
and
insb
cmp
test
fwait
adc
cmp
push
gs
pop
aam
rclb
xchg
pop
sub
push
jae
mov
dec
and
subb
xchg
out
add
cmp
cmp
dec
adc
mov
pop
pop
or
adc
mov
jl
cmp
sub
xor
dec
pop
outsb
std
popa
sti
int
cs
ret
rorl
sub
les
out
rcrb
fnstsw
xor
add
or
add
xor
nop
pop
cmp
nop
movsl
mov
shl
add
or
sbb
add
cmp
xor
repz
pop
adc
fxch
loopne
push
and
fidivrs
into
fadd
add
jae
cwtl
test
xabort
push
push
shl
mov
sub
addr16
push
rcrb
movsl
aam
aam
cmpsb
or
sbbl
cs
adc
xor
adc
add
adc
out
dec
bnd
je
adc
sbb
mov
movsb
stos
shrb
loopne
cmp
mov
popa
stos
push
fcoms
arpl
sti
or
in
mov
dec
bound
flds
and
mov
mov
mov
xor
mov
cld
sub
xchg
test
lahf
dec
sti
je
mov
fldt
pop
fimull
adc
shlb
addr16
call
pop
insb
adc
js
mov
movb
stos
lret
jl
sub
sub
xchg
test
outsb
push
orb
inc
add
clc
pop
add
mov
jg
dec
icebp
dec
lock
add
jg
pop
outsl
loop
repz
pop
iret
shrb
sbbl
in
dec
rclb
add
push
les
stos
in
mov
into
inc
test
cltd
rorb
fstp
mov
mov
jae
jnp
fisubl
push
stc
pop
ljmp
xchg
fs
add
adcb
in
xchg
scas
sbb
fisttpll
push
fstps
mov
aas
inc
add
les
icebp
adc
nop
popa
xor
test
std
int3
sbb
imull
dec
insl
ret
push
or
out
enter
pusha
mov
mov
fimuls
jne
hlt
ret
sbb
sub
lods
add
and
lds
sub
sub
imul
or
rclb
enter
sub
adc
or
insl
sub
in
shr
and
xor
and
push
aam
mov
dec
cmp
mov
dec
jns
sub
ffreep
out
cmp
jl
and
cmp
jecxz
mov
and
sub
insl
xlat
mov
jb
xor
je
out
call
imul
mov
mov
mov
push
pop
or
jne
out
jle
loope
loop
or
cmp
mov
lods
sbb
push
dec
sub
ja
in
fcmovnb
nop
mov
xchg
push
inc
sub
shrl
lret
ficomps
stos
cmp
xadd
roll
sub
repnz
mov
insl
mov
adc
push
pushf
sbbl
sub
movsb
push
pop
jmp
imul
mov
mov
nop
mov
adc
xchg
adc
notb
jae
sub
stc
or
mov
mov
jo
dec
sbb
aaa
adc
addr16
xchg
inc
mov
push
add
inc
fsubrp
cli
leave
bnd
xlat
fidivrs
ja
loopne
in
ljmp
sti
cmc
js
dec
shl
ret
movsl
loop
jbe
jl
cld
out
inc
ss
push
sub
or
push
sub
jg
addr16
fldenv
enter
sbb
mov
pop
rorb
jmp
push
mov
cwtl
iret
rcl
cmpsl
mov
iret
jb
arpl
add
add
mov
stos
sbb
test
push
sarl
fsin
mov
sbb
jg
mov
adc
mov
sti
ljmp
insb
xchg
add
roll
aad
stc
and
js
push
mov
test
insl
xchg
lcall
rorl
daa
es
mov
cmc
push
scas
cwtl
sbb
mov
ljmp
nop
ljmp
jmp
clc
adc
xorb
mov
scas
lods
adc
cs
test
and
add
pop
adc
test
sub
fists
mov
sub
cltd
aad
pop
fsubr
jne
sarb
lods
in
ds
pop
inc
sub
dec
mov
out
mov
iret
faddl
addb
pop
xchg
add
mov
imul
push
jnp
dec
cld
add
test
sbb
repnz
jne
popa
push
sub
lods
cmp
add
mov
mul
aam
push
sbb
cmp
fdivrs
pop
add
nop
and
outsb
cmp
and
ja
stos
rcl
fcmovbe
jnp
and
mov
jl
lret
shlb
mov
inc
ret
pop
mov
mov
sbb
sbb
or
fldenv
loopne
or
mov
xor
sbb
adc
add
out
lods
pop
fcos
jmp
das
lock
jle
rorb
das
cmp
dec
or
mov
jg
add
jge
mov
sub
shll
sub
xchg
inc
jae
add
cmp
imul
sub
jge
xchg
mov
mov
add
repnz
or
push
cmp
je
xlat
push
xor
rcrl
add
xor
rcrl
add
icebp
pop
notl
xor
mov
or
arpl
rcl
stos
mov
in
faddl
fisubs
shl
sbb
pusha
mov
stos
enter
jmp
fldt
test
pop
in
pop
xchg
pop
jl
ja
pop
jns
xor
cmp
mov
xchg
ljmp
lret
loopne
arpl
movsb
cmp
int3
clc
lods
dec
outsl
insb
mov
shll
cmp
int3
or
mov
popa
sbb
xor
das
pop
sbb
rcrl
icebp
and
out
cmp
test
aaa
aaa
mov
sub
push
lahf
in
rcrl
pop
fwait
add
jo
rcrl
mov
and
cmp
cmp
add
push
sub
aad
add
shl
stc
cmp
and
loop
pop
int3
pinsrw
sbb
fdiv
lret
sub
pop
fists
and
adc
sub
insl
fdivrl
pop
jns
push
adcl
pop
dec
ss
pusha
add
pusha
in
popa
and
xlat
sbb
lahf
xlat
jnp
sub
pop
and
das
and
add
out
adc
lret
inc
xchg
jb
stos
cs
fistpll
add
pop
pop
out
rcl
fcomp
inc
cmpsb
sub
xchg
xchg
roll
sub
test
dec
scas
jns
stos
xchg
add
mov
pop
int3
jo
popf
repnz
test
adc
leave
in
mov
jecxz
aas
mov
dec
mov
adc
packuswb
stc
sub
in
movsb
sub
xchg
shrb
js
lret
push
ds
add
inc
xor
sahf
imul
int3
fstl
inc
jbe
dec
xorb
xor
cmp
fwait
imul
mov
xchg
xor
dec
jae
cwtl
mov
add
stc
fnstcw
push
jg
xchg
js
push
xor
fcmovne
jbe
xor
pushf
add
test
sub
mov
jae
pop
add
pop
dec
mov
out
imul
mov
mov
sub
mov
arpl
jb
add
in
mov
push
pop
jle
fsubs
mov
mov
cwtl
hlt
jge
in
movsb
add
mov
sarb
sub
sahf
inc
leave
call
adc
add
jae
mov
shrb
jg
add
push
dec
and
sbbl
int
or
lods
dec
pop
pushl
in
and
ja
insl
lods
cmpsb
adc
ret
adc
sub
lea
jge
sbbl
hlt
dec
dec
test
test
imul
mov
std
jo
sbb
mov
aaa
int3
push
mov
sub
adc
notb
test
cmp
outsl
cli
inc
push
sbb
fidivrl
cltd
sbb
mov
add
fnstenv
js
icebp
bnd
subb
les
sahf
cmp
sahf
push
add
leave
addr16
push
ret
add
fidivl
jle
enter
div
imul
and
nop
fnsave
mov
nop
adc
xor
fsub
shlb
jo
hlt
in
icebp
inc
sub
in
nop
ss
mov
mov
test
xchg
xor
xlat
dec
rcrb
cmp
xchg
nop
jo
loopne
sub
inc
mov
hlt
stc
adc
push
mov
aaa
add
pop
fstpt
adc
in
arpl
rolb
mov
add
adc
adc
or
push
sbb
movb
lret
or
xor
and
xchg
test
jmp
notb
sarl
addr16
lret
addr16
push
push
cmp
mov
andl
js
push
aad
negl
std
push
test
das
dec
cmpl
fisubrs
dec
add
in
fcmovbe
int3
pop
push
inc
es
sub
adc
leave
and
dec
out
stc
dec
or
icebp
dec
mov
dec
dec
sub
mov
pop
jne
dec
test
ror
hlt
das
mov
jns
push
repnz
xor
adc
push
mov
iret
sbb
ret
std
mov
sub
ljmp
xchg
jmp
clc
inc
lods
xchg
push
ret
adc
adc
les
or
push
cmp
add
ds
je
adc
jg
adc
mov
in
rcl
jmp
jbe
ds
js
repz
xor
cld
ss
int3
and
fcmovnbe
jne
push
or
cmc
outsb
pop
cltd
aad
ss
std
xor
dec
rcll
or
in
mov
xlat
inc
addl
push
incb
int3
sub
push
mov
test
lcall
out
test
sub
xor
stos
mov
pop
adc
jb
pop
cmpsl
rorb
jmp
movsl
out
sbb
fidivrs
popa
dec
imul
rcrb
cld
jp
jno
mov
mov
mov
inc
mov
into
add
sbb
out
test
jo
ror
xor
add
fwait
inc
enter
sti
in
mov
mov
jmp
dec
sbb
adc
arpl
sbb
outsb
or
push
shrb
add
mov
xor
movsb
mov
lret
pop
ret
jb
inc
in
mov
dec
ds
push
mov
cmp
mov
or
mov
arpl
push
pop
pushf
fwait
sub
cmp
jge
or
bound
adc
aad
out
mov
adc
sub
add
in
lcall
adc
add
xor
push
adc
sub
cmp
or
sub
sahf
rclb
into
sti
lret
adc
rcrb
testb
and
mov
movsb
out
push
jnp
sbb
adc
nop
scas
xor
pop
cmp
imul
lea
or
sbb
jmp
and
lods
push
adc
fcmovne
sbb
fildll
fisttpll
in
fldcw
in
ljmp
adc
adc
test
ret
int3
jne
mov
push
sbb
or
sub
repnz
jns
sar
adc
pop
in
inc
inc
out
dec
pop
jl
xchg
push
add
xchg
mov
test
sbb
movsb
pop
push
mov
incb
sti
mov
aas
pusha
add
test
stos
add
pop
rorb
adc
cmp
adc
cmp
push
jp
repnz
into
ds
pop
repnz
and
or
and
or
and
sub
jnp
mov
and
sub
lds
adc
out
sbb
jb
pop
ror
aas
pop
lods
popf
pop
adc
stos
lock
cmp
or
test
enter
cmp
ljmp
cmp
dec
add
sbb
and
mov
and
and
jmp
xor
mov
xchg
andb
sub
pop
jb
mov
adc
inc
ss
xchg
test
outsb
lret
or
sbb
andb
or
mov
xor
rorb
xchg
sbb
daa
cmp
xor
dec
push
adc
decl
add
leave
jns
adc
adc
int3
into
je
xor
cmp
push
gs
adc
sbb
fdivr
jp
lcall
xchg
test
lret
stc
iret
rcl
or
pop
ret
mov
push
test
xchg
or
hlt
mov
ftst
sub
mov
mov
loope
xor
mov
lahf
inc
xor
adc
adc
sbb
pop
fnstcw
sub
add
xchg
push
or
mov
xor
enter
xchg
mov
dec
or
dec
icebp
nop
sub
and
sbbl
sub
push
cmpb
stos
sbb
loop
ret
ret
sub
add
push
or
inc
add
jmp
xor
xchg
icebp
pushf
add
scas
xor
rcll
adc
enter
cmpsl
adc
sbb
xor
icebp
cmp
enter
xor
sbb
out
out
adc
jo
inc
push
push
cmp
jns
lahf
pop
sub
xor
mov
jbe
int
jp
and
sbb
sti
jl
inc
jle
repz
jle
inc
add
sbb
adc
add
xor
movsb
dec
add
lahf
sub
repz
pop
loope
jo
mov
rol
out
add
sbb
rclb
pop
orb
mov
adcl
sbb
movsl
clc
push
mov
xor
in
cmpsl
add
lret
inc
gs
call
add
pop
ss
cld
mov
add
add
mov
inc
adc
sub
pop
sub
fsubrl
vpunpckhdq
in
mov
mov
mov
push
inc
sbb
ds
test
sub
mov
pop
push
ret
stc
into
add
mov
sti
lahf
adc
or
lods
add
mov
mov
or
sub
in
into
pop
jecxz
call
hlt
out
cmp
out
dec
stc
adc
adc
in
xchg
int
adc
sub
das
lahf
repz
jp
sub
jl
pop
shrb
mov
ss
or
xor
mov
push
or
adc
pop
xchg
and
mov
imul
add
fidivs
jle
repnz
repz
stc
loopew
adc
dec
xlat
pop
iret
adc
xor
or
xor
cli
mov
int3
nop
adc
jecxz
mov
xor
aam
jle
jge
push
push
fisttpll
mov
ss
ja
jge
in
jne
stos
lret
mov
add
pusha
decb
pushl
ret
xchg
repz
fisubl
dec
aas
cmc
push
mov
jp
leave
sub
mov
notb
mov
lods
in
ret
repnz
mov
xchg
add
out
out
cmp
xchg
xchg
shlb
xchg
repz
jp
mulb
in
mov
sub
aaa
test
ds
rorb
mov
xchg
dec
mov
das
mov
les
in
pop
mov
andl
cltd
lds
rolb
test
rcrb
xchg
push
es
fs
out
sub
call
xchg
xlat
cwtl
mov
mov
adc
mov
mov
test
jb
aaa
dec
outsb
incl
and
lock
fucom
rol
out
pop
jl
leave
int3
in
sbb
adc
inc
dec
lcall
or
push
pop
push
iret
xor
sbb
push
mov
call
loope
adc
ror
adc
cld
jo
xor
jge
xchg
ss
ret
sbb
pushf
mov
arpl
add
mov
dec
shll
test
push
or
clc
or
dec
cld
sti
mov
pop
mov
mov
add
scas
push
xchg
hlt
mov
sbb
add
in
dec
sbb
aaa
mov
rcll
add
xor
faddp
sub
cmp
ja
iret
adc
mov
mov
fisubs
pop
lret
dec
pop
xchg
in
jge
fs
or
lea
mov
adc
mov
aaa
data16
je
jmp
mov
out
push
add
lock
mov
dec
mov
xchg
mov
jp
repz
dec
outsb
and
ja
mov
add
jnp
out
xchg
jb
mov
stc
imul
or
enter
jecxz
iret
dec
sub
pop
jecxz
adc
in
xchg
cmp
dec
ret
icebp
and
adc
roll
jae
or
mov
mov
cmp
stos
sbb
push
leave
ljmp
cmp
inc
mov
fwait
sbb
ret
fsub
xor
mov
push
push
lahf
popl
dec
xchg
mov
lock
wbinvd
pop
add
mov
push
or
dec
pop
rcl
xor
stos
mov
lcall
xchg
xchg
pop
cmp
adc
adc
or
ficomps
xchg
mov
stc
dec
lahf
cvtpi2ps
rcrl
dec
fadds
mov
xchg
adc
add
adc
xchg
inc
test
ljmp
imul
push
call
cld
pop
sbb
mov
mov
inc
sbb
push
shl
lret
sbb
test
imul
arpl
mov
imul
adc
ret
mov
or
xchg
and
in
pushf
aam
data16
pop
mov
lret
push
and
jmp
or
inc
mov
push
push
test
xchg
pop
jmp
xchg
and
dec
xchg
test
hlt
fwait
sub
into
jl
and
push
clc
int3
sub
test
in
pop
dec
enter
jno
xchg
dec
jmp
into
add
jmp
sarb
pop
jne
cld
adcb
add
lret
sub
fcoml
push
fidivs
sub
cmc
ljmp
push
fnstenv
inc
test
sar
pop
lret
dec
dec
notl
sub
xchg
ret
inc
pushf
sub
int3
and
sub
mov
mov
xlat
cwtl
stos
pushf
mov
decl
push
jo
add
ds
lret
sbb
jns
test
nop
jecxz
aaa
sbb
out
xor
aad
jno
mov
jecxz
je
xor
out
faddl
sbb
and
push
xchg
dec
les
mov
xor
wbinvd
adc
jae
mov
pop
dec
popl
pusha
test
pushl
pop
lock
shlb
xchg
jnp
scas
push
ss
insl
push
lret
imul
pop
adcl
lcall
cmp
cmp
fnstenv
fists
dec
dec
push
pop
and
les
mov
xor
xchg
cmp
add
cmp
fisttps
fsubr
rorb
mov
cmp
fs
ja
xor
jns
xlat
mov
xor
mov
cli
insb
dec
in
fisubrs
sbb
pop
mov
push
fimull
in
sbb
inc
ret
lret
push
lock
into
adc
xchg
sub
cld
clc
stos
clc
in
sahf
clc
subb
adc
stos
push
inc
cli
aad
or
jne
xchg
jg
lret
sbb
or
xchg
dec
add
xchg
mov
dec
xor
adc
sbb
pop
out
in
xor
pop
sub
add
xor
repz
aaa
dec
or
pop
lret
add
hlt
adc
mov
lcall
push
dec
push
lret
xor
dec
leave
add
add
push
inc
xor
sahf
mov
pop
sbb
or
adc
ljmp
mov
xorb
or
lret
in
incl
pop
mov
sub
aas
test
stos
inc
dec
sub
stc
out
repz
xchg
mov
data16
jns
lods
scas
mov
sbb
sahf
into
das
adc
iret
adc
or
loopne
add
or
daa
add
or
sub
add
or
popf
cmp
sub
testb
in
mov
movsl
add
roll
dec
nop
in
mov
fistpll
mov
cmp
xchg
ss
cld
int3
movsb
mov
mov
pop
scas
jmp
xchg
jo
xchg
sub
add
or
dec
xor
inc
or
or
sub
or
xor
mov
jecxz
ret
xchg
repz
sbb
clc
or
popa
outsl
mov
loopne
or
stc
dec
loope
jne
jo
mov
aad
bnd
xchg
xchg
xchg
mov
rorb
dec
add
std
scas
lret
stc
mov
or
xchg
dec
push
inc
mov
inc
or
lret
dec
push
xchg
mov
es
test
ffree
cmc
insl
cmp
xchg
jae
cld
hlt
inc
mov
mov
push
leave
jbe
imul
in
das
imul
jg
sarl
ds
cmp
jmp
pop
out
adc
mov
xchg
repnz
sub
mov
sub
mov
pop
jecxz
test
xor
in
jb
sub
cli
mov
sbb
out
repnz
mov
icebp
fisttps
push
shr
fwait
xor
int3
and
js
lret
mov
adc
jae
push
xchg
adc
shll
ret
push
imul
lds
in
mov
sti
cwtl
sarb
xchg
fs
adc
jb
xchg
jbe
faddp
and
adc
out
mov
out
inc
mov
mov
pop
ret
out
mov
mov
les
push
add
mov
add
lds
shlb
cld
mov
pop
ret
lds
hlt
nop
std
add
pop
in
pop
call
repnz
or
push
sub
sub
sub
xor
sub
subl
shlb
dec
or
pop
ja
add
jmp
adc
pop
daa
es
roll
add
ja
ss
inc
cmp
cwtl
xor
lcall
inc
leave
push
or
cmp
or
push
loopne
iret
or
mov
sbb
xchg
jno
add
add
jecxz
sub
and
xor
pop
mov
mov
fcomp
ret
or
test
cld
xor
hlt
sarb
lock
add
ja
scas
xorb
and
and
in
mov
add
imul
leave
fwait
int
int
cmp
lahf
pop
out
cs
jno
adcl
pop
add
cmp
imulb
mov
mov
push
mov
lret
mov
xor
pusha
or
inc
mov
adc
int3
xchg
popf
adc
jns
mov
jb
stc
popa
push
mulb
mov
dec
jl
rcll
popa
test
mov
or
stos
pushf
enter
sbb
sub
sub
cmp
dec
popf
sub
jne
int3
sub
out
pop
push
mov
out
add
pop
nop
ficoml
jecxz
or
adc
pop
pop
mov
mov
test
mov
sbb
mov
out
inc
dec
insb
adc
add
rorb
add
mov
lods
pop
lods
dec
in
mov
and
jb
lahf
es
pop
hlt
inc
or
xor
dec
mov
push
pop
mov
daa
mov
jns
in
out
pop
sub
add
out
hlt
mov
cmp
pop
push
mov
enter
clc
pop
out
scas
scas
sahf
add
cmp
leave
push
or
out
sbb
add
xor
push
xchg
bound
mov
add
stos
sub
shlb
insl
lock
xor
loop
jae
mov
dec
xchg
test
or
into
sub
push
scas
loope
push
sysret
popa
stc
add
mov
push
mov
push
inc
clc
sbb
test
dec
adc
test
incl
push
push
pop
nop
icebp
out
mov
iret
icebp
mov
mov
test
sti
push
cmp
movsb
push
mov
push
out
pop
pop
xlat
int3
fadds
nop
ret
inc
xchg
push
and
mov
push
push
push
push
pop
arpl
inc
leave
push
out
xor
add
push
shrb
mov
test
outsl
push
insb
sbb
mov
jo
adc
sub
mov
inc
imull
sbb
xor
jne
adc
mov
jne
cmpsb
fistps
sub
repnz
or
fisubs
sbb
cmp
dec
mov
jae
stc
mov
daa
cmp
and
insl
out
ds
bound
add
push
rclb
cmpsb
popf
call
aad
nop
sub
push
pop
int3
dec
and
dec
adc
lock
int3
addb
inc
int3
hlt
jp
pop
cltd
ljmp
dec
rol
fmuls
add
into
out
adc
cmp
scas
lods
add
pop
push
popl
push
pop
clc
xchg
cli
adc
hlt
mov
lds
and
in
mov
cmp
cmp
cmpsl
adc
inc
adc
xlat
xor
aaa
xor
dec
add
add
add
jno
jns
aam
add
adc
into
mov
hlt
add
mov
cmp
push
and
push
lods
inc
jmp
in
and
cmp
xchg
leave
rorl
in
mov
push
in
shl
stc
shl
jg
imul
sbb
clc
adc
xchg
lahf
or
mov
jne
and
sub
mov
movups
push
testb
or
and
dec
cmp
and
sbb
mov
sbb
test
dec
pusha
xchg
movsb
imul
sbb
or
lock
test
or
in
xor
lret
jae
adc
jmp
or
fs
into
lods
pop
push
rcrb
cmp
inc
mov
xor
mov
mov
mov
add
add
push
add
sub
shrl
bound
loope
jp
in
inc
jmp
clc
lds
loope
cwtl
cmp
lcall
xor
fcmovu
adc
sub
aad
inc
lock
clc
sub
push
push
push
xchg
pop
jle
js
aad
gs
aas
pop
lcall
adc
pop
loop
mov
ret
aad
movsb
lret
test
ror
pushf
loope
fimull
lret
fcmovne
leave
add
iret
out
je
mov
pop
int3
or
es
inc
add
xchg
push
adc
cld
jne
movsb
and
lds
mov
test
jecxz
repnz
lahf
sbb
or
mov
movsb
into
mov
data16
add
outsl
sub
mov
push
flds
jns
es
in
jb
loopne
rcrb
cltd
mov
cmp
stos
nop
scas
inc
sar
aad
dec
test
add
test
clc
xchg
xor
sti
aaa
cmp
hlt
cmp
daa
lahf
add
inc
push
lahf
adc
ret
stos
xor
xchg
push
mov
out
lret
push
pop
enter
jnp
ret
pop
movsl
fadd
xchg
mov
out
jo
xor
gs
cmp
push
mov
cwtl
iret
in
pop
in
out
mov
ss
push
sub
jns
lcall
data16
iret
ljmp
shll
sbb
test
cwtl
in
in
out
push
addr16
jbe
push
adc
sub
mov
sbb
clc
out
cli
mov
or
inc
sub
pop
add
into
fiadds
adc
sti
into
or
add
and
nop
ror
adc
push
or
xchg
xlat
cmp
mov
add
mov
mov
fldt
leave
pop
add
cmp
cmp
pop
fstl
hlt
pop
es
mov
xor
sub
sbb
scas
aaa
mov
push
push
mov
xor
add
out
jp
ret
insb
enter
mov
mov
sbbl
out
push
mov
inc
mov
iret
add
mov
ret
xor
xor
dec
sub
inc
mov
jmp
ljmp
sub
jp
mov
fstps
ficoms
xchg
add
jge
mov
out
in
fadds
sarb
stos
pop
pop
lret
mov
mov
test
cmp
movl
fisubl
add
hlt
xchg
sub
and
not
cld
lret
imul
out
mov
mov
movsb
or
sti
hlt
jmp
and
rorb
scas
dec
mov
rcll
jle
outsl
xlat
lcall
jp
push
or
sbb
dec
xlat
jne
or
stos
add
cmp
sub
and
adc
cmp
popf
sti
or
adc
test
xchg
or
subb
add
sbb
nop
loop
repnz
cmp
push
shl
adc
in
gs
sub
lahf
add
data16
cld
mov
popf
mov
int3
cmpsb
aad
popa
cmp
add
in
into
fldenv
cli
call
ret
jnp
addb
scas
sbb
pop
iret
adc
lret
dec
nop
bound
roll
sub
inc
repz
jmp
add
imul
or
in
sub
roll
add
add
fisttpl
add
test
and
add
pop
sub
call
testb
ljmp
outsl
fcmove
xchg
in
call
mov
subb
mov
enter
sub
roll
sub
scas
ret
xor
add
dec
dec
leave
bound
mov
out
sbb
add
les
popf
mov
or
dec
mov
dec
pop
and
or
ret
ljmp
mov
xor
add
xorb
push
push
sub
popf
lods
inc
shlb
pushf
cmp
lret
insl
sub
jo
daa
int3
es
lcall
mov
add
xor
aaa
mov
leave
cli
mov
shlb
std
dec
xlat
push
iret
out
ret
push
sub
pop
in
sbb
repz
subb
loope
cld
and
lock
jle
jbe
popa
dec
xchg
fmuls
jae
loope
hlt
cmp
orl
sbb
pop
mov
xlat
sub
xor
repz
add
sahf
into
inc
call
push
push
or
xlat
aam
lds
andl
push
add
js
jge
adc
fcomip
sbb
lcall
sarl
pop
and
mov
mov
sub
sbb
adc
push
fdivrp
cmp
in
adc
mov
frstor
rcr
bound
arpl
cmp
dec
mov
xchg
mov
or
adc
lret
iret
ds
popf
clc
add
lock
repz
testl
cwtl
fucompp
jb
out
dec
iret
xchg
cmp
scas
imul
int3
stc
sub
mov
sub
mov
lahf
test
insl
cmp
outsl
sbb
push
xor
pop
and
sbb
xchg
mov
pop
push
sbb
pusha
push
and
mov
ljmp
or
outsb
sbb
xchg
repnz
xor
fs
loopne
sub
es
jp
mov
jno
iret
sub
pop
add
les
add
es
sub
decb
es
mov
push
aaa
movsl
pushf
or
jb
sbb
stc
popa
cmp
xchg
sub
xchg
cmp
in
cmp
popa
add
ss
in
iret
es
sbb
daa
adc
and
shlb
pop
decl
add
and
inc
data16
ret
add
inc
stc
and
jle
dec
add
rorb
mov
adcb
out
lret
lods
mov
adc
fimuls
add
cmp
adc
ds
cmp
push
and
arpl
loopne
inc
and
mov
mov
push
adc
dec
enter
outsl
push
pop
push
cmpsl
jecxz
out
cmp
stc
gs
nop
loopne
lret
xchg
les
push
jns
and
nop
and
test
mov
sub
repnz
inc
xor
addb
pop
int3
add
vunpcklps
pop
cmp
xchg
inc
xchg
push
into
fidivs
lock
pop
ror
dec
popa
push
mov
dec
popa
add
xchg
adc
mov
insb
in
rcrb
sub
mov
fisttpll
or
imul
xchg
pusha
es
int3
sarl
in
cmp
out
mov
mov
xor
push
sbbb
jp
mov
xchg
xchg
les
dec
ffree
jg
jbe
fcmovb
out
imul
xchg
sbb
adc
das
add
add
cmp
fsubl
sub
push
mov
clc
jg
dec
fs
mov
lock
les
mov
insb
fsubl
cs
mov
cmp
idivb
shlb
in
add
sbb
jo
or
mov
repz
sub
mov
add
or
out
lahf
and
lock
push
sub
and
jmp
mov
shrb
or
and
mov
pop
mov
enter
adc
and
es
push
add
push
mov
fisubrs
and
ljmp
or
or
outsb
les
add
rcrl
rorl
in
scas
pop
mov
or
sbb
ljmp
push
hlt
js
in
mov
mov
sti
fcmovbe
xchg
call
jne
pop
enter
and
movsl
add
xchg
jmp
movsb
inc
and
adc
adc
repz
pop
clc
lahf
mov
add
push
call
and
cmp
jg
pop
or
adc
popl
loope
mov
ja
movlps
loop
pop
aad
mov
je
stc
add
xabort
or
ljmp
sub
inc
aad
fildl
shl
hlt
loopne
nop
rorb
inc
or
pop
xor
mov
gs
fdivrp
cmc
daa
cmp
jne
lds
add
daa
mov
mov
fildl
call
out
out
in
push
les
aam
lret
jne
pop
xchg
jno
mov
cmp
imul
test
push
dec
inc
jmp
xchg
lds
jo
lcall
and
pinsrw
loopne
shrb
mov
dec
lock
push
lret
push
ljmp
adcl
push
es
mov
lods
outsb
js
nop
dec
pop
fists
es
stos
mov
xchg
out
mov
jbe
xchg
xchg
adc
loopne
fmull
xchg
orl
call
jne
push
and
pusha
outsb
jo
sub
xchg
lahf
inc
das
iret
jp
xchg
inc
pop
or
add
jl
sbb
lret
ret
xchg
scas
xchg
jmp
out
les
add
mov
fcomp
add
adc
mov
ret
jg
out
leave
sbb
loope
lock
mov
lret
xchg
adc
pop
insb
imul
mov
mov
sbb
repnz
jmp
xchg
mov
mov
add
paddd
stos
mov
hlt
push
xchg
into
cmpsb
sub
pop
mov
int
in
inc
inc
pop
js
ror
in
jecxz
mov
call
push
daa
jo
iret
jb
popa
jnp
or
lret
lcall
cmp
psubq
lret
mov
add
clc
lods
mov
fcmovne
sub
dec
in
je
dec
mov
mov
test
mov
or
push
imul
rclb
mov
sbb
mov
inc
lock
inc
sbb
arpl
sub
adc
repz
movb
xchg
in
push
aaa
cli
adc
gs
inc
push
sarb
lret
into
pop
push
mov
movsl
xor
mov
lahf
das
outsb
ljmp
cmp
fcmovnb
out
jmp
sbb
repz
stc
sub
mov
lret
hlt
sbb
jns
pop
or
adc
paddusb
xor
sahf
lret
clc
popf
outsb
or
in
adc
imul
mov
xor
in
sbb
shrb
pop
xchg
mov
jae
inc
xchg
sub
push
insl
mov
xor
pop
jg
nop
leave
jmp
call
push
cmpsl
cltd
adc
adc
addr16
mov
rorl
shrb
jb
or
movsl
int3
adc
dec
rcl
into
lret
aaa
sbb
testb
adc
roll
cli
imul
pop
jecxz
outsl
jno
rcrl
mov
jecxz
insb
std
or
into
adc
or
push
sub
pop
sbb
rcll
xchg
xchg
mov
sbb
les
out
lcall
lret
mov
and
in
adc
or
add
outsb
push
dec
dec
fisubl
inc
aam
loopne
mov
adc
mov
mov
cmp
add
lock
out
loopne
sbb
scas
dec
aad
cli
cmp
test
or
dec
ret
adc
dec
inc
int3
jnp
cmpb
adc
dec
add
mov
or
xor
loope
or
cmpsb
daa
pop
les
sahf
adc
imul
cmp
shll
dec
or
lahf
mov
sub
or
mov
mov
push
test
scas
dec
add
pop
fisubrs
sbb
jo
sub
imul
insl
pop
iret
dec
jmp
ficomps
sbbb
dec
mov
or
cmp
xorb
rolb
adc
mov
rcl
xchg
add
int
inc
mov
jecxz
push
lock
adc
adc
inc
pushf
jmp
jecxz
sub
add
out
mov
in
out
clc
mov
or
mov
arpl
clc
jns
adc
movl
insb
xchg
mov
dec
rcrl
push
stos
stos
mov
cs
gs
lds
lcall
scas
sbb
and
jp
push
ja
xor
add
cmp
add
in
dec
mov
jecxz
fnstenv
out
pop
outsl
aad
rcrb
ffree
push
push
xchg
stc
pop
xlat
dec
clc
or
es
es
mov
pop
lods
add
lret
lahf
mov
inc
cltd
mov
aad
inc
adc
or
js
xorl
nop
lds
adc
mov
sub
xor
fdivs
lahf
bound
rol
ljmp
xorb
mov
dec
nop
loope
jl
mov
inc
add
sub
fcomps
jg
shl
lahf
imul
in
mov
mov
mov
lods
scas
cmpsb
out
stc
loopne
push
int3
loop
mov
dec
push
or
mov
popa
lcall
addr16
adc
sti
dec
sbb
jmp
push
or
mov
dec
xor
push
and
or
es
repnz
int3
dec
add
fnstenv
repnz
and
idivb
icebp
xchg
mov
aas
and
xchg
jmp
inc
jns
xchg
and
ror
and
xchg
outsb
lahf
stc
gs
or
add
xor
leave
xchg
cmp
inc
out
rcll
sub
push
clc
sub
xchg
inc
adc
push
cmpsb
int3
stc
arpl
ss
repz
push
lret
in
and
mov
and
and
push
cltd
pop
jmp
jb
imul
xchg
imul
les
aaa
xchg
cli
sub
mov
sub
nop
and
jb
or
adc
stos
pop
dec
fsubr
add
jno
nop
imul
lahf
int3
xchg
sbb
sub
or
push
jmp
sub
ljmp
mov
stos
adc
cmp
sbb
push
xlat
adc
fidivrs
adc
enter
fnsave
out
and
or
int
rcrl
dec
icebp
adc
jb
cltd
push
jbe
cmp
sub
pusha
loope
stos
nop
jns
aam
sbb
sub
push
lahf
inc
cs
hlt
cmp
xchg
xorl
leave
mov
fstl
xchg
lcall
clc
or
adcl
or
cld
cmp
adc
cmp
add
mov
mulb
jb
pop
ds
xor
divb
add
dec
lcall
mov
scas
add
sti
daa
or
sbb
lods
leave
loop
cmp
mov
add
add
loop
mov
cwtl
jne
movsb
lret
fnsave
adc
jo
add
loope
pop
add
mov
ret
test
jmp
fsubs
cld
cmp
and
aad
cmp
inc
jns
cld
nop
push
cmc
and
loope
setle
test
adc
mov
imul
out
mov
int3
adc
gs
stos
rcrb
data16
jl
outsb
sarb
sbbl
sbb
jno
lret
ja
sub
xor
mov
dec
mov
ret
loopne
dec
pop
jecxz
call
pop
pop
lock
jne
push
inc
dec
xorb
mov
cmpl
orb
gs
dec
add
or
ret
jmp
imul
push
fwait
sbb
adc
loope
dec
int3
add
jae
sub
notl
cli
addr16
xorl
and
les
mov
mov
xchg
shlb
mov
pop
add
jne
inc
sbb
add
xchg
adc
subb
nopl
daa
and
rolb
push
jle
movswl
xchg
mov
mov
fistps
mov
mov
lds
pusha
es
das
push
push
imul
lret
test
push
scas
xor
adc
cs
les
adc
sub
mov
add
cmpsb
cmpsb
sbb
sbb
jecxz
adc
subl
add
or
je
jl
das
add
mov
lret
sbb
lods
nop
out
testl
lds
mov
aad
bound
dec
adc
cmp
lcallw
xchg
mov
mov
inc
stos
push
adc
ss
cmp
xor
adc
in
jae
out
stos
lods
sub
mov
jg
ret
lahf
xor
es
sub
inc
arpl
sub
jge
pop
xor
or
and
lcall
push
out
push
inc
in
aad
mov
add
dec
out
jb
lds
add
imul
into
shrl
lahf
jmp
add
nop
shrb
ret
pop
popf
push
mov
rolb
pop
inc
int
sbb
sbb
sub
insb
in
add
out
fs
test
pop
adc
mov
mov
mov
popl
jns
aad
sub
test
mov
jns
into
in
shr
fidivl
dec
lock
ret
sub
stc
jnp
rcl
pushf
popf
sub
pushf
and
movsl
mov
daa
xchg
in
add
hlt
sub
fldl
or
shll
rorl
sbb
push
dec
stos
cmp
popf
gs
daa
in
es
incl
nop
xchg
jbe
jb
dec
adc
adc
ror
test
sbb
dec
xor
loope
xlat
daa
psubq
mov
lods
sub
push
jns
add
xchg
popf
jb
dec
xchg
inc
lret
pop
iret
rcl
sbb
out
push
xchg
jg
xor
mov
adc
jns
xchg
fsubrl
shl
sbb
cli
movsb
fnstsw
fisubrs
mov
stos
aas
pop
lock
lahf
repnz
or
stos
out
shl
adc
xor
mov
int
not
adc
mov
ret
mov
sub
fwait
add
movsl
or
les
outsl
pop
cs
sub
fwait
dec
mov
add
sbb
das
adc
inc
jae
adc
mov
movq
rcl
clc
xchg
and
ret
add
icebp
cmp
jo
fsubs
enter
rorl
in
jns
in
pop
pop
cs
in
fstp
add
push
adc
pop
in
sahf
dec
xchg
out
shl
add
lahf
adc
leave
jecxz
or
cld
addl
test
test
xchg
push
jo
xor
loope
dec
call
xchg
adc
mov
xchg
push
test
sub
push
movsl
mov
shrb
in
lock
out
sub
or
xchg
stos
inc
test
es
popf
inc
dec
push
mov
dec
stos
roll
xor
xchg
cmc
push
cmc
mov
les
lea
mov
inc
add
mov
push
xchg
add
out
cmp
sahf
pop
fcomps
xlat
negb
add
sub
sbb
cmc
jmp
xchg
in
add
es
int3
icebp
mov
pop
add
mov
cmpsl
fsubl
popf
mov
adc
fdivr
aas
jns
and
in
adc
aad
xor
jae
or
adc
std
or
pop
and
xchg
mov
jbe
push
loop
shlb
or
xor
loop
lret
push
into
ret
cmp
outsb
or
mov
pop
ret
mov
iret
push
lods
adc
cs
ror
ja
test
test
xor
call
xor
mov
stos
sbb
fidivs
cmp
loope
scas
fisttps
or
sub
les
fcoml
enter
fistps
pop
orb
xchg
jmp
dec
sub
aad
adc
int
lds
lret
push
into
inc
pop
in
mov
in
ret
das
dec
sub
stc
sub
mov
xchg
or
xlat
cmp
and
rolb
push
push
mov
lret
xor
and
imul
or
xlat
fbstp
cld
sub
loope
pop
xchg
cmp
mov
sbb
mov
mov
adc
jl
pop
cli
cmp
sub
push
xor
out
pop
or
mov
push
ljmp
fiadds
mov
cmp
and
aaa
mov
xchg
dec
jb
pop
dec
repnz
mov
lock
test
shl
add
or
cmp
leave
xor
rolb
adc
mov
rol
jbe
testb
mov
lock
or
ret
cld
mov
or
inc
sub
lahf
out
jge
mov
and
jae
pop
call
ds
push
adc
sub
and
cmp
mov
jo
jbe
or
push
cmc
mov
sbb
loope
in
sbb
and
or
pop
inc
lods
xchg
fwait
out
adc
xchg
jbe
jae
ss
mov
addb
pop
push
out
mov
shrb
leave
pushf
sub
dec
xor
adc
inc
jnp
xchg
adc
inc
mov
mov
sub
jge
shrb
into
jmp
imul
adc
cli
mov
and
lea
pop
push
rcr
or
leave
stc
sar
inc
mov
test
clc
add
out
aad
mov
dec
rol
into
iret
cmc
or
flds
int3
mov
jmp
mov
add
ret
fdiv
mov
cmpsb
out
sub
cs
inc
cmp
out
dec
cmp
test
sub
lds
sbb
push
sbb
pop
fldenv
out
mov
dec
in
loopne
jl
lret
push
ret
ds
int
ja
fldcw
pop
cmpsb
jnp
scas
xchg
mov
or
xchg
mov
cmpsb
and
insl
mov
jne
adc
sbb
or
mov
pop
test
push
pop
out
in
jbe
int
jb
lahf
int
push
hlt
and
fsubr
xchg
sub
repnz
add
fstp
mov
fs
rcrb
mov
outsl
lock
fs
and
jne
inc
or
fisttpl
int3
xchg
stc
xchg
repz
fdivr
mov
out
roll
dec
inc
mov
loop
add
mov
jg
add
test
iret
js
jle
ljmp
mov
dec
repnz
int3
push
inc
out
cmpsb
mov
aam
cmp
pop
mov
cli
jnp
add
lret
loope
sbb
mulb
add
adc
adc
fstp
aam
mov
mov
loop
add
ret
mov
roll
jecxz
jmp
pop
js
fldcw
dec
fwait
sbb
sub
into
inc
mov
jae
cld
int3
sahf
out
mov
mov
stos
adc
jmp
mov
into
pop
add
and
cmp
cmpsb
lods
int
adc
stc
adc
adc
and
mov
push
xchg
or
pop
and
add
push
out
pop
push
cmp
jbe
sub
hlt
loopne
adc
mov
test
ret
scas
test
mov
mov
inc
mov
inc
cmp
in
adc
mov
sti
pop
cmp
dec
std
xchg
or
dec
movsb
jno
push
sbb
lcall
or
mov
sub
push
inc
orl
inc
xor
push
leave
in
iret
shlb
push
stc
and
adc
push
in
shll
loop
insb
in
insl
addl
fbld
dec
jno
push
sti
jbe
clc
lahf
mov
call
sbb
lahf
int3
mov
xchg
inc
out
cmp
jb
jmp
fildll
sarl
xchg
loopne
inc
dec
aaa
sub
fmull
movsb
ret
add
jg
pop
test
scas
push
sarb
and
jb
adc
rolb
movaps
dec
add
ds
scas
adc
mov
call
mov
adc
sub
shll
in
scas
mov
fnsave
sub
xlat
out
adc
jne
sub
cmpsb
add
mov
sub
ss
jnp
mov
and
pop
lock
and
xchg
ja
pop
lock
in
rolb
movsb
xlat
ds
xor
out
mov
add
std
add
fmulp
in
or
lods
mov
test
sarb
xor
imul
ds
push
pop
push
inc
or
xchg
jnp
xlat
xor
xchg
push
lds
pushf
mov
adc
stc
and
mov
pusha
pop
scas
and
mov
fldcw
adc
ret
outsl
or
dec
adc
mov
je
dec
imul
pop
jl
xchg
stos
orl
test
mov
jno
fidivrl
push
repnz
add
xchg
sub
jbe
jnp
orb
in
pop
in
cld
mov
lock
cwtl
mov
sbbl
cwtl
jl
inc
or
rclb
scas
mov
or
or
xchg
ret
shrb
cmp
and
ret
arpl
mov
mov
inc
dec
addr16
xchg
cmpb
ljmp
imul
inc
jp
mov
mov
mov
roll
xchg
lock
popf
aas
jne
rorb
push
andb
mov
fsubs
sbb
das
or
setnp
repnz
add
sbbl
ret
stos
add
mov
dec
jle
push
adc
iret
nop
ret
nop
jns
push
rol
movb
insb
mov
imul
inc
lret
movsb
iret
enter
in
stos
aas
rorl
jecxz
ss
inc
xchg
pop
jns
push
nop
jne
sub
adc
xchg
movsb
jge
or
stc
xchg
cmp
fdiv
xor
lcall
aam
cmp
inc
add
sbb
add
xchg
mov
inc
add
loop
mov
adc
nop
aad
xor
ret
int3
lret
inc
xor
cmp
add
mov
or
loopne
in
sti
mov
je
add
movsb
cmp
mov
xchg
aaa
add
call
dec
or
fsubl
out
arpl
jp
mov
jmp
outsl
mov
jnp
popa
repnz
sub
ficoms
adc
sar
mov
test
popa
pushf
neg
dec
leave
mul
pop
push
lds
ret
fldl
and
pop
jmp
popf
shld
jno
imul
out
mov
push
sti
and
ds
or
outsb
rclb
fwait
mov
cmpsb
and
pop
aas
xor
addr16
jge
add
jmp
xor
popl
shlb
lret
outsb
in
out
add
inc
lahf
fsubrs
dec
loopne
in
enter
sbb
out
lea
aam
or
mov
scas
sub
cwtl
mov
sahf
cwtl
or
hlt
sub
xlat
scas
pop
ret
lds
dec
mov
add
data16
pusha
fucomi
fsub
lahf
faddl
push
in
cmp
les
inc
inc
xchg
subb
add
sti
adc
mov
push
jmp
sbb
out
cmp
mov
fsts
or
lods
int
or
jb
jecxz
fmuls
pop
daa
cmc
mov
mov
add
orb
nop
adc
cmp
sbb
int
pop
xchg
arpl
add
lret
adc
adc
mov
or
hlt
cld
mov
mov
or
clc
std
mov
mov
movsb
loope
je
jae
iret
andps
int3
xchg
addr16
sbb
pop
repz
movsb
daa
cmp
adc
mov
dec
shl
inc
push
add
leave
sub
or
popa
xor
cmp
adc
lcall
or
and
mov
neg
in
sbb
js
jle
xlat
inc
dec
xchg
dec
loopne
lahf
leave
or
xchg
lcall
mov
repz
adc
cmp
hlt
cli
jmp
les
pop
bound
leave
repnz
cmp
ret
dec
sub
mov
mov
cs
repnz
testb
rcrl
ret
pop
dec
loopne
add
xchg
pusha
stc
inc
hlt
mov
push
mov
mov
cwtl
jp
lea
movsl
mov
fstp
push
inc
cwtl
xor
fs
rol
adc
sub
stos
insl
xchg
jmp
adc
shl
je
stc
push
fstpl
in
stos
mov
push
icebp
xchg
andb
mov
enter
push
add
mov
xor
jg
addb
call
xorb
loope
rcrb
in
push
hlt
repnz
xchg
xor
ds
or
xor
dec
mov
mov
add
mov
dec
xchg
dec
adc
mov
push
sarb
mov
xlat
mov
hlt
pop
cmp
addl
in
xor
ret
adc
and
jo
mov
or
adc
sbb
hlt
rcrb
or
sub
sbb
nop
lods
sub
push
inc
mov
fldt
dec
mov
pop
xor
into
shl
push
dec
fildl
out
sub
or
fwait
xor
inc
mov
orl
cmp
add
movsb
adc
push
sub
xor
push
mov
xor
or
or
adc
xor
xor
adc
or
mov
dec
or
jg
les
xor
ljmp
push
mov
jp
lds
add
iret
dec
or
push
add
aam
mov
pop
push
mov
jmp
movsb
push
dec
in
lret
es
ret
rcll
lret
fld
mov
hlt
les
icebp
fcmovu
out
scas
xchg
or
xor
gs
jne
rcll
in
cli
xor
les
sub
addr16
cli
jns
cmpl
mov
pop
mov
jae
xchg
jecxz
dec
daa
mov
xchg
add
push
or
lret
and
jmp
test
ds
lret
scas
dec
int
sbb
or
and
lgdtl
sbb
adc
negl
stos
repz
jne
sub
leave
push
lcall
fprem1
or
add
out
cmpsl
mov
lret
nop
je
jg
xchg
int3
lock
adc
ljmp
testl
mov
addb
rcl
test
mov
add
les
dec
xor
repz
push
mov
enter
or
iret
cmp
or
adc
les
aas
shll
hlt
addl
sahf
inc
shlb
loop
int
adc
lcall
jo
out
int
and
pop
scas
push
aam
mov
add
lret
inc
lcall
xor
test
int3
dec
jg
sbb
pop
les
loop
mov
and
int3
repz
mov
jmp
mov
jg
test
stc
jae
jecxz
fdivrp
or
xor
or
aad
stc
ss
xchg
mov
sbb
pop
mov
hlt
inc
sub
adc
ret
daa
loop
call
inc
mov
add
mov
js
addb
leave
jbe
lcall
ret
xor
xor
hlt
icebp
mov
mov
inc
lret
mov
xor
dec
push
in
sub
fbstp
lret
out
sbb
sbb
test
dec
ret
fldt
jno
cltd
jmp
mov
push
ljmp
out
add
ficompl
pop
pop
mov
mov
adc
pop
mov
push
hlt
jmp
sub
fwait
or
insl
int3
aad
fidivrl
hlt
sub
das
shrb
add
enter
add
ds
xor
dec
lret
fmulp
push
mov
inc
filds
call
add
mov
or
push
loop
inc
xchg
xchg
or
cmpsl
or
sub
lock
sub
rorl
or
add
sbb
add
mov
in
sbb
repz
cmpsb
adcl
cld
xor
loop
inc
les
stc
xchg
cmp
clc
mov
push
ljmp
sub
adc
xchg
mov
xor
in
repnz
mov
nop
hlt
mov
sbb
ja
repz
in
lret
enter
sub
aam
inc
xchg
int
adc
int
icebp
sbb
inc
ja
add
pop
int3
sti
sbb
or
fldcw
les
push
inc
clc
int3
andb
test
sbb
inc
push
dec
clc
sbb
mov
pushf
cmp
pop
inc
xor
inc
sub
mov
xchg
dec
call
mov
cmp
sbb
mov
push
adc
into
div
mov
in
iret
fldenv
ja
sbb
cli
adc
lods
or
adc
sub
push
cltd
adc
rolb
jp
jnp
cmp
out
and
cmpsb
push
mov
orb
mov
xor
mov
cli
pop
inc
adc
int3
adc
loop
test
jae
xchg
outsl
mov
nop
mov
ja
nop
mov
sub
stc
mov
push
adc
cmc
add
xorb
fs
cld
enter
pop
cmp
loopne
pop
push
xchg
imul
mov
stos
mov
ficoms
inc
lahf
pop
pop
call
push
xchg
rol
in
lret
sub
pop
repz
adc
pop
fiadds
jmp
xlat
sub
pop
imul
int3
and
aaa
aaa
icebp
loop
mov
leave
add
push
jmp
or
loop
scas
fsub
orl
adcl
pop
lods
mov
mov
dec
jb
pop
dec
stos
nop
sbb
mov
mov
cmp
into
js
ret
sbb
add
popf
push
sub
icebp
hlt
insb
mov
int
dec
sti
outsl
cld
lahf
andl
cmpsb
inc
fists
and
ja
inc
mov
aas
int3
jg
hlt
xorb
lret
jmp
add
mov
fcompl
adc
pushf
mov
cmp
jne
sbb
add
push
push
pop
fwait
push
adc
shl
es
fsubr
call
scas
or
and
cmc
mov
xchg
arpl
inc
dec
mov
jne
add
adc
mov
cmp
xchg
add
sub
fdivrp
cwtl
cltd
push
in
mov
inc
out
and
jo
leave
stc
sbb
iret
pop
shlb
loope
dec
adc
shlb
aad
ss
add
lods
push
mov
cmc
sbb
nop
aad
or
sbbl
rclb
push
and
imul
loopne
mov
es
xchg
insl
shlb
jo
pusha
pop
stos
addb
jo
jns
xchg
push
mov
aaa
scas
test
push
xorl
sbb
in
jb
aad
pop
add
jb
push
test
sbb
sub
shrl
insb
adc
in
mov
mov
imul
sahf
ljmp
inc
dec
adc
jo
das
icebp
inc
adc
mov
test
repz
rol
aaa
cmp
popf
pop
mov
sub
pop
mov
outsb
mov
rclb
jbe
in
xor
daa
nop
stos
lahf
into
mov
test
aad
cmc
and
cld
xor
xor
jl
in
push
fidivs
orl
add
push
add
in
mov
ja
imul
addr16
sub
jbe
inc
or
dec
mov
add
mov
leave
pop
imull
pop
enter
dec
jmpw
or
mov
insl
or
inc
outsl
sub
mov
stos
adc
lret
mov
out
inc
mov
test
and
or
dec
stos
inc
scas
icebp
add
popf
push
pushf
aas
sub
xchg
mov
aad
inc
fidivl
xor
mov
loop
xchg
sbb
sahf
sbb
test
dec
repz
ret
pop
add
mov
or
mov
jmp
xor
stos
pop
stos
fiadds
adc
dec
aaa
lcall
pop
loop
xor
out
fcmovnb
clc
mov
jb
mov
lahf
push
les
mov
mov
adc
sub
pop
insb
adc
push
dec
aam
out
out
aaa
mov
adc
xchg
sub
popf
mov
adc
adc
xchg
adc
inc
or
loopne
push
cmp
insl
mov
jae
adc
adc
mov
insb
mov
cmp
divb
xchg
dec
xchg
je
lds
and
cmpsl
and
addb
mov
and
imul
inc
movsl
jo
lret
lods
leave
fimull
sub
sub
add
hlt
xor
adc
hlt
jb
ffree
mov
inc
mov
stc
push
lahf
call
push
fnstenv
mov
popf
lods
sbb
sbb
or
push
sbb
or
in
xor
xor
ds
aam
mov
ret
mov
call
add
xchg
push
fsts
push
sub
adc
ss
shll
lds
negl
pop
ret
addb
int
in
jns
rcrb
sub
jmp
pop
cmp
in
push
shll
outsb
cmp
test
or
aam
pop
pushf
sub
das
in
aas
addl
or
std
jne
fmuls
out
out
sub
cli
in
lods
add
sub
xchg
loope
and
lods
jne
xchg
loope
dec
mov
mov
xchg
or
dec
sub
jg
mov
cmp
mov
sarl
lods
pushf
push
cmpsl
in
lahf
or
ds
or
push
roll
or
mov
dec
jne
pop
mov
mov
iret
inc
je
stc
dec
mov
cmc
mov
mov
sub
cwtl
mov
pop
jl
fsubrs
or
jb
leave
iret
in
xor
icebp
unpckhps
cld
fisubrs
sbb
loop
insl
fcmovu
dec
mov
stos
bound
popa
pop
shlb
aaa
pusha
ja,pt
pop
dec
int3
sbb
dec
sarb
lahf
iret
popf
js
rcr
fdivrl
or
les
ljmp
enter
jno
in
add
jecxz
hlt
add
add
jae
push
out
hlt
shl
lods
aam
movsb
adc
popf
outsb
rorl
cltd
inc
or
adc
push
push
lods
ret
ja
add
mov
repz
pop
stc
xchg
fwait
jmp
mov
repnz
inc
je
jae
sti
adc
cmpl
loope
pop
inc
mov
xchg
dec
or
jns
loope
jbe
xor
incb
testl
stc
ss
mov
mov
jno
popa
push
push
call
and
adc
pop
jb
mov
fimuls
cmp
jo
sti
lret
ljmp
or
call
push
ret
pushf
sub
xor
jl
lret
repnz
or
adc
fs
adc
in
and
sbb
sahf
dec
sub
and
inc
out
xchg
imul
dec
mov
int
inc
adc
sub
sub
out
jo
fucomi
shl
xchg
shlb
and
aad
cmp
clc
inc
cmp
xchg
faddl
mov
sbb
inc
idivl
fmuls
push
std
loope
int3
xchg
add
xor
adc
stos
or
or
add
ss
in
sub
adc
xor
mov
push
loope
pop
test
call
mov
inc
xchg
sahf
lahf
ficomps
mov
jl
xlat
xor
or
jae
adc
pop
xor
add
iret
je
adc
mov
dec
notl
xchg
push
sub
jo
lods
lock
pop
and
inc
mov
sbb
rcll
jo
das
dec
xchg
add
push
mov
xor
data16
mov
sbb
mov
jnp
adc
fwait
out
cmp
jnp
sub
mov
push
test
and
add
xchg
repnz
add
ficoml
or
repz
out
imul
ffree
movntps
lahf
out
mov
ds
sahf
mov
sub
pop
mov
cmc
xchg
inc
jae
mov
push
jno
mov
push
inc
mov
stos
or
add
hlt
loop
repnz
lret
dec
fistps
jg,pt
push
jle
pop
mov
xchg
cmp
mov
mov
adc
sub
jne
adc
inc
lret
rclb
test
ss
loopne
je
adc
or
adc
xorl
ljmp
ret
out
cwtl
and
cwtl
int
add
adc
xor
rdtsc
pop
shl
in
ret
or
in
in
pop
add
rcrb
sahf
fsubrp
divl
insb
jg
pop
fisttpl
repz
mov
or
push
es
dec
ret
adc
add
or
pop
imul
jae
sahf
mov
lret
dec
jmp
popf
dec
mov
ret
adc
repnz
dec
mov
fcmovnbe
inc
sahf
nop
lret
lahf
and
arpl
rorl
mov
les
jbe
hlt
mov
push
mov
and
xlat
sbb
cmp
mov
add
sub
xorl
scas
insb
out
shrb
xorl
loop
in
dec
addr16
addr16
pop
int3
mov
xor
adc
jno
and
hlt
jge
jb
xor
sbb
jg
mov
sbb
int
jmp
add
jecxz
sub
adc
or
les
sub
int
incb
lods
adc
push
into
mov
aam
sbb
push
nop
rclb
popf
mov
adc
adc
or
fadd
mov
jbe
outsl
lods
fistpl
adc
jge
adc
adc
pusha
ljmp
mov
pushf
xor
outsb
shlb
sbb
adc
xchg
push
mov
aad
inc
fildl
mov
xchg
ret
ja
sbb
adc
nop
pop
push
mov
int3
push
shl
xchg
xchg
outsb
adc
push
sub
mov
fsubr
mov
outsb
icebp
xchg
rorl
add
xchg
mov
sub
cmovb
sbb
lock
sub
rclb
xchg
push
call
sub
mov
test
jno
repnz
or
mov
push
xchg
push
icebp
mov
fs
into
push
pop
hlt
mov
lods
movsb
and
mov
jo
push
into
stc
and
add
call
add
in
adcb
mov
mov
loop
repnz
adc
idivl
fisttps
xchg
dec
sub
jb
sub
xchg
dec
iret
je
shrl
ljmp
sbb
dec
movl
repz
xorl
adc
les
ret
sbb
mov
fmull
std
fucomp
or
in
mov
js
inc
ret
sub
cmovb
add
je
out
mov
mov
pop
push
les
ret
or
sarl
fsubrl
or
push
lahf
inc
mov
fcoml
jae
adc
and
adc
leave
jecxz
xor
aad
loope
sbb
jecxz
mov
inc
sbb
mov
add
cli
cld
test
fimuls
out
or
and
mov
wbinvd
add
dec
pop
xor
push
push
fimuls
xor
mov
xchg
not
cli
movq
mov
mov
mov
or
or
setl
cmp
test
ja
nop
fwait
adc
sub
inc
scas
or
lret
enter
xor
pop
jae
push
sar
xchg
addl
adc
int3
jae
repz
jbe
lods
add
stc
repz
sub
xchg
aaa
sar
dec
call
int3
xchg
dec
sub
lea
sub
js
inc
in
in
out
adc
mov
nop
call
into
cli
dec
push
xchg
mov
add
jmp
sub
addr16
inc
ds
stos
test
data16
sub
ret
xchg
sub
sar
in
or
add
mov
or
push
fdivrs
cmp
sub
lret
push
fildl
test
adc
add
push
dec
cmp
jl
lods
xor
cmp
or
push
out
push
cmp
dec
or
mov
stc
in
mov
repz
sub
testb
mov
xlat
dec
mov
test
fwait
sbb
and
in
sub
xor
in
imul
icebp
push
rcll
and
adc
mov
xor
mov
ss
dec
adc
add
inc
dec
and
dec
and
or
jge
adc
fwait
xor
shlb
int3
inc
aaa
and
inc
std
icebp
pop
ret
leave
in
adc
sub
movsb
adc
ja
mov
add
push
adc
lret
pop
cmp
push
stc
call
es
ja
and
lods
sub
or
ret
jecxz
or
cmp
jmp
in
aaa
nop
fdiv
sub
push
mov
and
add
cmp
icebp
ret
dec
push
dec
dec
dec
loopne
shlb
dec
int
add
xchg
xchg
pusha
ret
cld
or
in
insb
adc
icebp
xchg
push
test
shlb
add
into
aaa
jmp
xchg
js
ret
pop
push
rcl
scas
xchg
rol
xchg
ljmp
js
pop
pushf
mov
pop
pop
shlb
or
adc
lds
jae
cmp
or
push
ret
repz
jb
dec
sbb
xor
add
mov
cwtl
sub
pop
lock
xchg
test
pop
pop
sub
inc
xchg
cltd
in
faddp
mov
and
add
test
rolb
mov
or
data16
andl
mov
cli
cmp
lock
sub
adc
test
jae
sarl
add
lock
lcall
jae
repnz
mov
xchg
adc
mulb
xor
daa
dec
out
inc
adc
jae
es
mov
pop
ds
xor
and
mov
and
sub
icebp
ja
popa
xorb
or
rolb
xchg
mov
inc
jnp
enter
ret
fcmovbe
out
or
add
sarb
sub
repz
push
jle
add
idivl
xchg
jns
iret
xchg
cwtl
adc
add
adc
and
or
shlb
jno
mov
push
sahf
add
int3
dec
aad
int3
fistps
roll
rclb
adc
inc
adc
push
mov
fcomps
add
dec
or
ret
add
pop
mov
pop
mov
js
push
dec
cmp
pop
pop
lret
jb
and
inc
dec
add
push
shlb
aas
lahf
xor
adc
cmc
and
pop
sbb
loop
test
scas
fsubl
sbb
std
push
add
inc
int3
cmpb
call
or
or
and
or
jnp
inc
loope
ljmp
add
iret
cmp
dec
push
or
pushf
in
dec
sbb
mov
add
sub
imul
outsb
sahf
ljmp
sbb
jg
inc
fcomip
add
and
or
cmp
nop
dec
clc
icebp
outsb
xchg
inc
or
adc
rolb
or
fs
dec
fwait
cmp
outsb
int3
flds
mov
ljmp
loopne
jbe
mov
inc
loope
inc
enter
jo
or
sti
cmp
xchg
jo
mov
push
mov
pop
das
shrb
xchg
enter
mov
xchg
int3
add
jno
inc
loope
in
inc
mov
fdivl
xchg
cmpsl
shrl
adc
or
loope
xor
mov
mov
in
cld
das
jle
inc
hlt
inc
add
adc
push
movsb
mov
test
jo
mov
add
in
push
loope
jb
scas
sub
imul
leave
out
stc
loop
xor
add
sub
inc
imul
adc
leave
jns
clc
push
loop
sub
aaa
loope
sbbb
mov
cmpsl
adc
push
mov
add
int3
pushf
dec
loope
ret
cld
dec
mov
fldlg2
and
mov
jp
pusha
repz
adc
in
loopne
sub
push
mov
rcll
adc
inc
rolb
mov
and
aaa
push
int3
loope
cli
sub
sub
aam
jmp
sbb
daa
push
push
loop
dec
movb
sti
add
inc
pop
loop
and
push
xchg
push
sti
push
fdivs
pop
cs
adc
push
lods
nop
adc
or
push
adc
lock
je
push
lods
sti
xchg
xorl
shrb
xchg
xchg
sub
pusha
std
loope
push
movsl
ret
nop
bnd
iret
sub
or
adc
inc
sti
shrb
sub
test
mov
add
data16
push
js
loope
jb
or
subb
add
push
in
cmp
repnz
in
fucomp
aas
sub
jmp
mov
aam
lods
push
fldcw
adc
mov
mov
lods
orb
stos
or
rol
jne
jmp
in
cmc
insl
cmpsl
xor
mov
and
enter
xor
fstpl
adc
lods
inc
xlat
nop
shl
push
lahf
fs
in
mov
mov
fnstsw
push
insb
ret
movsl
cwtl
adc
shl
add
cs
call
xchg
fidivl
dec
call
jno
repz
pop
shll
repz
fwait
pop
mov
adc
lahf
sarb
lods
cwtl
adc
mov
fwait
cmp
lahf
ftst
outsb
push
mov
cmp
and
ss
fbld
cli
ja
cwtl
or
loope
nop
loop
pop
inc
mov
lods
jns
pop
ljmp
shr
icebp
stos
sti
fstps
xor
addl
sub
lahf
pop
mov
loop
loope
into
enter
les
popl
mov
into
fsubrl
sub
pop
frstor
and
aas
adc
fcomp
stos
cmp
lahf
mov
inc
or
in
dec
loope
mov
lods
in
or
xor
xor
pop
inc
aad
push
mov
push
or
mov
dec
fiadds
mov
outsb
cwtl
adc
andb
imul
sbb
iret
lods
pop
les
imul
pop
jp
push
fdivrl
loopne
push
mov
imulb
or
push
std
xchg
xchg
push
and
mov
iret
mov
cmp
or
xor
sbb
movsb
adc
pop
mov
movntps
mov
jcxz
or
dec
xchg
inc
adc
js
sahf
xor
inc
cmp
mov
adc
dec
ret
mov
xchg
shll
ds
stos
test
shlb
xchg
fidivs
xor
imul
cmp
inc
cwtl
push
les
dec
and
or
mov
push
jne
shl
lcall
popf
push
mov
les
orl
xor
sbb
jmp
pop
cmp
lds
iret
pop
inc
push
out
mov
and
test
ljmp
dec
shlb
push
fldt
rcrb
xchg
sub
pop
fisttpll
xor
or
inc
ja
pop
cvtpi2ps
jmp
inc
mov
mov
xchg
sub
in
sbb
xchg
jg
jae
cmp
mov
out
cmc
push
mov
stc
pop
mov
xor
jae
fcoml
stc
xchg
dec
pop
cltd
dec
mov
cmp
xor
xchg
push
ffree
aaa
and
subl
sahf
lods
xchg
push
fs
subb
mov
fiadds
dec
ret
push
sub
rcl
or
stc
xchg
and
insb
pmaddwd
in
xchg
aad
jae
inc
cmpl
xor
out
ret
sub
movsb
ficoml
or
adc
fisttpl
les
sahf
aad
dec
xor
sbb
imul
jo
sbb
gs
xchg
mov
or
jae
mov
lock
inc
mov
xchg
sub
cmpsb
or
adc
cmp
jmp
stos
std
loopne
mov
adc
and
in
repnz
inc
mov
add
xchg
sbb
mov
in
loop
nop
dec
repnz
movsb
mov
sbb
outsl
jecxz
mov
adc
jb
ja
lods
xchg
in
je
rcr
mov
dec
lods
test
fsubl
jmp
pop
aam
mov
stos
nop
xchg
cli
add
ljmp
push
bound
mov
out
mov
enter
sarl
cli
enter
sbb
jno
fdivrl
vmovaps
cli
adc
lahf
add
lahf
or
push
les
inc
push
or
mov
cld
cmpsb
or
mov
jnp
and
add
mov
pop
cmp
inc
jp
test
insb
mov
push
jl
lret
jge
pop
pop
pop
fstpl
inc
popa
jne
push
ss
dec
pop
adc
adc
xchg
sub
jae
adc
add
xor
xchg
rclb
jl
xchg
mov
adc
sbb
add
jl
pusha
sarl
add
incb
pop
scas
icebp
es
or
std
mov
adc
or
call
dec
outsb
mov
and
push
imul
xchg
mov
push
loope
pop
cli
xor
fwait
dec
stos
sbb
mov
mov
inc
push
fbstp
aaa
lods
and
cmp
push
push
lea
cmp
jge
jnp
cmp
dec
xorb
pop
nop
sub
mov
pushl
jmp
push
out
in
mov
hlt
dec
sbb
jno
test
add
jmp
ds
lods
subb
in
mov
shlb
mov
xor
add
adc
repz
push
xchg
inc
cmp
push
sbb
mov
pop
sub
daa
mov
jno
stos
cmc
or
push
inc
ret
add
js
pop
les
dec
adc
jae
in
push
stos
dec
push
ret
sub
out
stos
in
xchg
loop
out
cmp
jae
adc
push
rolb
fchs
psraw
inc
in
push
lahf
pop
in
push
fisttps
enter
fwait
cmpsb
mov
sbb
or
mov
ret
sbb
jns
or
sub
inc
xor
pop
dec
mov
leave
imul
xchg
inc
mov
out
dec
inc
fs
mov
adc
and
mov
inc
and
test
not
mov
test
sub
dec
outsb
xor
dec
xchg
dec
adc
testb
in
dec
inc
push
cwtl
fwait
icebp
push
aam
mov
mov
ss
dec
enter
add
pop
rclb
fiadds
ret
xor
lcall
add
jl
hlt
clc
incb
inc
jnp
pop
or
mov
mov
imull
mov
jb
inc
ds
adc
jae,pt
test
fidivrl
outsl
ds
call
mov
and
push
insb
adc
xchg
mov
push
arpl
lret
dec
mov
add
arpl
test
shrl
adc
lea
mov
cmpsb
lea
add
ror
fisubl
or
inc
jae
mov
popa
and
hlt
push
xchg
push
adc
and
pushf
aas
hlt
push
mov
pop
or
xor
sbb
adc
lahf
xor
stos
sub
mov
adc
stos
pop
outsl
dec
push
sub
add
mov
cmp
jbe
cli
into
xor
je
ret
push
add
mov
sbb
frstor
dec
frstor
xor
out
out
add
mov
add
add
testb
repz
dec
cld
dec
xor
lods
hlt
jae
dec
fnstcw
jg
stos
aam
sarl
hlt
mov
ret
shll
mov
or
xchg
or
out
inc
jp
or
fiaddl
mov
xor
lea
popf
push
sbbb
lock
enter
lods
outsl
int3
orb
pop
xchg
repnz
sti
lsl
pop
push
adc
add
or
mov
andb
orb
jne
arpl
adc
icebp
lods
jbe
test
test
add
pop
mov
int
arpl
mov
lds
sbb
in
inc
mov
sbbb
sub
add
into
test
nop
sbb
push
xchg
sub
cltd
and
out
mov
insb
mov
sbb
inc
push
push
or
test
mov
jb
je
or
push
cmpl
xchg
xorl
cmp
in
and
add
push
add
inc
or
lods
div
test
mov
test
enter
outsl
add
mov
repnz
loop
sbb
or
rol
adc
mov
adc
inc
dec
aam
mov
mov
pusha
adc
test
dec
and
lret
loop
sbb
sub
or
sar
xor
rcrl
push
ljmp
sbb
inc
repz
sahf
fmull
mov
loope
xor
sbb
or
lds
mov
adc
int3
adc
out
mov
adc
fisubrs
shrl
jae
push
movsl
jp
xchg
scas
and
xchg
je
cmpsl
push
in
push
clc
xchg
jl,pt
mov
xor
scas
pop
out
and
fidivl
repnz
stos
into
fisttpll
ret
mov
pop
or
faddp
ret
xchg
outsl
cld
sub
push
ficoml
shrb
fisubrs
mov
popf
and
ja
pushf
call
mov
ja
jb
fcomps
fnsave
push
push
adc
std
sbb
or
in
cld
xor
test
push
xchg
pop
add
lahf
leave
pop
arpl
sbb
cmp
sbb
ss
adc
mov
repnz
mov
mov
inc
push
clc
stos
pop
aaa
jecxz
out
in
shr
test
push
cmp
sbb
mov
mov
out
add
leave
out
std
sbb
pop
sarl
cmpb
sub
lea
xor
loopne
jns
push
incl
loopne
push
mov
or
add
add
fs
sub
push
cmpsb
ja
arpl
or
jns
push
dec
jb
pop
mov
hlt
popf
mov
dec
push
jge
leave
mov
ret
lods
nop
or
mov
call
jg,pn
xor
sub
cmp
jmp
sbb
xor
or
leave
enter
push
cmp
dec
es
insl
xor
sub
jns
and
and
jno
jb
jmp
pop
mov
das
push
xchg
ficoms
xor
fxtract
shrb
int3
inc
out
push
andl
das
pop
in
sub
rolb
add
mov
jge
xor
fnstsw
xor
jae
jae
ss
mov
inc
pop
into
out
shll
out
je
mov
ljmp
or
andl
add
cmp
cmp
repnz
jnp
cmpsb
pusha
push
sub
lahf
mov
mov
and
mov
pop
mov
fdivs
pop
shll
in
pushf
and
add
shl
jb
sbb
sub
sub
cld
add
or
pop
aaa
mov
and
in
icebp
push
xor
mov
int3
or
adc
and
stos
jp
fstpl
add
cmp
loopne
sahf
stos
mov
out
or
or
mov
rolb
call
sub
add
or
sub
icebp
lods
and
jo
push
dec
in
pop
sub
rorb
mov
adc
cs
out
jbe
xor
nop
fldenv
fidivl
push
popf
mov
jae
xchg
add
popf
mov
and
add
nop
lods
rorl
nop
pop
orl
jns
inc
leave
push
orb
dec
dec
adc
pushf
lea
mov
add
mov
sti
mov
sub
push
enter
mov
adc
imul
lods
push
int3
jg
lret
jmp
sti
or
rcrb
rol
shlb
js
inc
xchg
fcomps
repz
xor
cmp
sub
or
pushl
and
shl
stos
mov
adc
xchg
imul
loope
sub
add
pusha
mov
icebp
roll
pop
mov
lods
daa
rclb
push
pusha
adc
roll
mov
sahf
iret
inc
insl
ret
adc
loop
xacquire
dec
sbb
call
push
test
sub
jno
push
sbb
gs
jo
lods
sub
out
xchg
pop
icebp
ret
lahf
sub
iret
pop
cli
popa
jecxz
dec
lahf
add
cld
cmp
add
out
cmpps
clc
sbb
jbe
out
sbb
mov
dec
push
loop
clc
repz
int
push
mov
cmp
add
int3
cmp
sbb
pop
loopne
adc
jecxz
push
scas
fs
mov
xor
lea
adc
add
or
repnz
jp
fadd
sbb
repz
bound
sub
lods
into
pop
mov
sub
jae
pushf
popf
xor
xlat
xchg
ret
dec
js
xchg
mov
imul
or
arpl
sahf
stos
xorb
jno
pushf
mov
pop
dec
dec
sub
and
and
push
push
mov
xor
mov
fwait
lods
and
fwait
ret
inc
xchg
add
fiadds
mov
rclb
jnp
xchg
imul
into
sbb
add
xlat
push
repnz
shlb
pop
fiadds
add
ret
mov
popf
fldl
adc
addr16
adc
jb
ss
jo
lock
mov
lahf
mov
push
dec
push
out
les
jb
jl
push
push
aam
adc
jne
cmp
out
pop
jl
jl
repnz
jecxz
push
lock
iret
lods
rcll
push
add
rcrb
adc
loop
aam
mov
in
jno
jbe
push
cmp
fst
cld
jl
scas
insl
adc
pop
inc
cmp
fistpll
jae
add
jns
pop
mov
adc
out
leavew
cmp
aaa
lods
push
lock
out
mov
call
xor
cmp
ss
xor
add
hlt
add
cld
inc
je
mov
mov
add
mov
adc
or
clc
jnp
lcall
add
or
sub
mov
shr
push
test
fcomps
cmpsb
cli
arpl
stos
data16
sarl
fldpi
loop,pt
loopne
add
adc
mov
out
xchg
fisttpl
lods
add
ficoms
pop
aam
leave
mov
orb
int
add
fstp
std
sub
push
mov
ret
inc
lret
out
shrl
test
loop
ret
shll
out
mov
leave
mov
loope
sub
mov
cli
sbbl
jl
and
push
mov
mov
adc
clc
adc
js
push
rcl
arpl
sbb
cltd
jbe
pop
loope
lods
mov
xor
stc
xchg
scas
mov
es
loop
fdivl
mov
mov
outsb
sbb
std
ret
mov
mov
nop
arpl
pop
add
or
out
push
jb
adc
dec
jle
into
ret
movsb
mov
xorl
sti
and
lods
sub
rolb
hlt
pop
xorb
mov
bound
lahf
fcmovu
push
cmp
xchg
xchg
icebp
insl
cli
je
movsb
in
and
ret
push
das
out
scas
xchg
dec
dec
xchg
xchg
xor
addl
xlat
mov
jnp
jp
jle
imul
sub
lods
ret
adc
add
shlb
lock
dec
into
arpl
rorl
mov
in
pushf
push
shlb
mov
or
lods
clc
or
ret
push
inc
sub
inc
fnsave
mov
test
nop
jl
in
xchg
adc
cli
jae
fistl
in
xchg
mov
aad
mov
adc
lret
in
push
out
lahf
push
pop
adc
push
jne
add
rcrb
push
ret
pop
in
adc
or
mov
in
add
int
push
or
lea
adc
std
xor
mov
mov
add
test
mov
and
loopne
out
mov
sub
mov
nop
sbb
out
fsubrl
inc
adc
cmovs
or
mov
add
hlt
adc
cmovnp
mov
sbb
daa
repnz
sarl
mov
and
sarb
push
pop
sarl
fnstsw
or
push
mov
pop
cli
jp
pop
cmp
scas
adc
cmpsb
mov
lahf
rcll
lahf
notb
add
pmulhw
ficomps
repnz
jmp
sbb
adc
adc
enter
adc
jmp
ljmp
jo
pop
xchg
into
xor
xchg
cmc
pop
ret
fistps
mov
or
movsb
fdivrl
cmp
aad
adc
mov
loopne
mov
xlat
jmp
lock
iret
cmp
arpl
ret
int3
mov
ret
sub
in
lock
sub
xlat
mov
xchg
pop
mov
je
bound
jg
mov
les
adcl
cmp
aas
cmp
fwait
sub
dec
in
cltd
arpl
lea
sub
imul
lock
pop
or
cmp
sbb
mov
dec
cmpsl
inc
das
cmp
subl
lock
decl
inc
add
add
dec
popl
pop
adc
test
cmp
daa
inc
inc
scas
int3
stos
jnp
out
fisubrs
cmp
mov
cwtl
mov
lahf
cmpsb
in
inc
les
ret
flds
enter
fidivl
jno
aam
cmc
test
cld
shlb
xor
ret
insb
dec
jmp
inc
adc
cmp
sbb
dec
loop
push
jmp
dec
mov
pop
decl
rcll
dec
jg
ds
out
sbb
imul
jg
jp
lret
inc
dec
loopne
dec
or
insl
pop
je
lds
jb
adc
lea
shll
fsts
sahf
out
lods
ficompl
fiadds
out
sbb
test
movb
bound
push
rorb
jmp
fwait
test
cmove
repnz
outsb
adc
jbe
and
and
inc
jg
inc
dec
and
inc
push
jbe
iret
sbb
out
in
push
sub
movl
rol
mov
xor
mov
jmp
xchg
arpl
adc
lods
dec
sub
das
and
sbb
in
cld
aas
into
and
push
in
sbb
jge
xchg
scas
xor
in
shr
pusha
in
jbe
mov
rorb
push
jg
bnd
adc
or
mov
push
or
lret
mov
cmc
nop
outsb
sub
daa
pushf
cwtl
sbb
adc
call
pop
sub
mov
xchg
cmpsl
push
imul
in
jne
or
inc
push
or
adc
cmp
xor
mov
cmp
push
aas
cmpsl
add
and
andl
sbb
pusha
mov
jbe
dec
xchg
dec
jmp
loop
inc
roll
jo
hlt
cltd
pushf
fdivl
call
xabort
fwait
lret
lret
xchg
jns
test
fs
push
or
adc
cmp
pop
add
nop
mov
jnp
pop
sub
sub
xor
push
nop
xlat
cs
sbb
in
xor
ljmp
sub
dec
add
or
in
xchg
inc
xor
loopne
out
std
pop
enter
push
adc
or
or
mov
adc
or
rcll
cmp
fcmovnb
add
mov
fstl
enter
int3
daa
ljmp
loopne
cltd
ds
dec
mov
sub
jp
leave
mov
push
ss
mov
inc
mov
xchg
dec
ret
test
cwtl
test
mov
imul
hlt
xor
sbb
aaa
mov
mov
add
push
call
and
data16
sbb
aad
int3
pop
inc
fsubs
les
push
and
enter
nop
and
xchg
outsl
cld
add
mov
mov
fwait
cld
jne
aad
mov
out
lock
dec
cmp
rep
stc
jns
inc
stos
or
fldenv
lret
inc
out
inc
out
mov
scas
add
or
add
fwait
mov
mov
or
jp
insl
pop
xor
or
int3
ret
push
sub
xchg
adc
int
or
push
int
sbb
and
jae
mull
jl
es
movsb
mov
ljmp
loop
mov
sub
rorb
das
je
mov
dec
pop
mov
mov
jg
mov
movsb
sarb
cmpsb
test
push
jne
dec
or
sub
dec
adc
cs
fst
push
mov
adc
push
dec
jmp
sbb
cmp
jbe
xchg
mov
popf
push
xorb
mov
test
dec
ret
dec
mov
xchg
dec
stos
mov
push
push
mov
andl
aad
jmp
push
sub
out
push
stc
jmp
aam
push
in
in
adc
and
and
pop
pop
add
cmp
xchg
imul
cmpsl
push
out
roll
add
mov
and
push
mov
sbb
clc
rcrb
out
mov
ret
inc
mov
mov
mov
and
add
out
cwtl
lods
cbtw
xor
inc
mov
or
int3
ret
sbb
cli
xor
jle
nop
add
mov
sub
mov
xor
ljmp
push
push
and
sbb
fmuls
xchg
mov
pop
sahf
or
fs
loop
loope
inc
inc
insb
jle
mov
pop
pop
mov
jl
fldl
adc
mov
sbb
mov
mov
out
arpl
scas
pop
add
ss
xchg
mov
repnz
or
push
xchg
jl
in
sub
sub
rcrb
sub
mov
cmp
dec
ljmp
push
inc
test
mov
fdivs
js
mov
cmp
aam
cmp
fs
popf
pop
fadds
mov
dec
enter
mov
jae
xchg
adc
sub
xchg
loopne
loop
mov
dec
or
mov
stos
gs
sub
push
stos
stos
int3
push
mov
fwait
jns
add
mov
fldenv
fstpt
ret
xchg
push
fnstsw
test
repnz
xchg
cld
xchg
je
add
in
inc
sahf
jae
sub
mov
icebp
dec
and
jge
or
call
mov
lahf
inc
repz
call
stc
lds
mov
jb
int
push
dec
sbb
nop
ret
mov
pushf
bound
pusha
filds
or
idivb
and
out
mov
and
test
add
sbb
adc
cmpsb
jae
adc
sahf
shrb
out
xor
movsb
test
mov
loop
aas
in
test
fsubrs
popa
dec
jmp
adc
mov
mov
divb
jmp
loop
clc
or
mov
inc
data16
data16
cmpsl
mov
fsub
imul
adc
fidivrs
loope
jmp
clc
pop
test
stos
or
push
dec
adc
sub
push
sar
clc
and
push
jge
testb
cmc
push
gs
sbb
lret
loop
adc
xor
stos
inc
mov
enter
push
push
add
or
sahf
pop
jns
idivb
or
jbe
out
jo
sti
push
out
mov
mov
adc
int
mov
fstl
jo
ret
insl
cmp
cmp
pop
clc
adc
shll
int
fdivs
add
ja
dec
lods
les
xlat
inc
loop
xchg
adc
xor
ret
push
xchg
mov
rcrb
loope
sub
push
ljmp
sbb
sub
mov
lods
pop
sbb
push
nop
xorl
outsl
adc
inc
add
out
push
add
push
xor
lds
mov
jns
out
ljmp
dec
mov
insb
or
ret
and
popl
loopne
sbb
fbstp
call
pushf
bnd
popf
cmp
mov
fidivl
sub
stos
adc
adc
push
adc
call
pushf
mov
add
dec
dec
sbb
cmp
out
pop
imul
test
loop
mov
incb
lods
lret
or
lods
stos
inc
sbb
sub
xchg
and
xchg
fs
and
inc
or
sub
in
add
psrld
inc
or
pop
out
fsubrl
xchg
lock
mov
pushf
leave
ja
sbb
ret
mov
cmpsb
jb
out
loopne
mov
mov
fwait
xor
push
mov
mov
stos
aaa
mov
cmp
jmp
xchg
mov
into
jns
dec
les
pop
stc
decl
xchg
push
in
pop
jne
or
pop
jbe
mov
mov
cmp
bound
enter
decl
mov
sub
je
lods
ret
dec
mov
pop
sbb
pop
adc
or
out
aam
ficoms
lahf
or
imul
je
or
ficomps
xor
pusha
jo
or
test
or
call
cmp
negb
outsl
xor
hlt
std
xchg
rorl
lahf
sbb
mov
adc
adc
aas
scas
je
movsb
mov
xchg
sub
divl
sbb
popf
mov
jne
outsl
outsb
add
fcmovne
dec
scas
cld
mov
aad
lret
xor
push
incb
shl
xchg
scas
fsub
jecxz
inc
push
fsubrl
data16
xchg
lods
ret
inc
jl
pop
cmpsb
ret
pop
shr
arpl
xchg
push
sbb
out
lods
jl
fdivr
ret
jns
xlat
mov
jno
pop
sbb
repnz
hlt
aaa
mov
je
stc
dec
jne
mov
sbb
xor
rcll
mov
sub
in
add
lock
outsl
adc
int
ds
add
and
add
stc
jae
mov
adc
sbb
adc
int
push
push
ds
sub
pop
inc
mov
stc
inc
out
ds
mov
or
sub
jns
mov
and
ja
insl
mov
dec
sti
aad
ja
push
push
dec
sub
daa
ja
mov
scas
push
dec
clc
adc
inc
or
lcall
pop
add
xchg
je
jns
push
lods
push
cmp
and
adc
adc
adc
cmp
xchg
push
ret
fwait
pop
inc
shrl
loope
or
mov
pop
nop
iret
pop
and
in
adc
cmp
pop
ljmp
ror
xchg
pop
aas
xchg
in
inc
jl
out
cmp
pushf
add
pushl
sbb
sbb
jmp
mov
in
int3
out
jae
call
push
insb
jbe
cwtl
js
dec
adc
loopne
and
jmp
ror
push
cmp
jp
adc
inc
mov
or
mov
add
ja
or
lods
loop
ss
sub
pushf
add
dec
ja
sbb
cmp
mov
mov
and
and
aad
sbb
jle
ret
mov
lds
jmp
or
sub
xchg
ljmp
jae
and
add
in
loop
mov
addl
mov
push
jg
cli
sahf
clc
xor
lret
rol
sbb
mov
sbbb
outsl
lods
dec
add
add
add
pop
rclb
mov
call
jmp
outsl
mov
fnstcw
cli
je
sub
popa
aam
push
push
and
loop
call
mov
sub
rol
mulb
hlt
rcll
or
scas
jne
mov
or
add
xlat
les
pop
das
pop
addr16
sbb
inc
mov
pop
stos
stos
pop
add
lahf
and
xchg
sti
xor
lret
mov
inc
dec
xor
lods
movsl
add
jbe
pop
outsb
jl
fs
ret
xchg
pop
adc
or
cmpsb
arpl
daa
mov
add
mov
pop
insl
or
stos
adc
incl
movsb
mov
mov
dec
leave
fdivrs
jmp
leave
out
repz
pop
push
sub
jns
popa
xchg
iret
movsb
rclb
out
mov
std
push
xor
enter
js
mov
insb
shrl
push
fdecstp
fistpll
mov
maxps
or
mov
aam
fmuls
movsb
test
inc
sbb
in
mov
aaa
add
xchg
mov
jo
lret
mov
sti
mov
cmp
sub
xchg
xchg
fldcw
scas
add
jne
sub
cmc
inc
insb
sahf
adc
adc
add
pop
sub
add
fwait
push
pop
leave
add
add
or
lods
dec
rol
or
std
jns
scas
push
fmuls
lods
scas
mov
ret
outsl
push
sarb
mov
push
sbb
shl
xor
inc
aas
repnz
cmp
dec
xchg
push
cmpb
or
jmp
loope
ja
cmp
je
call
hlt
mov
dec
imul
jb
into
cwtl
fs
fnstsw
add
jns
xchg
inc
adc
pop
fimuls
mov
pushf
or
mov
ret
andl
mov
mov
adc
sbbb
sub
push
popf
sti
xchg
or
sub
add
jmp
sbb
das
dec
mov
mov
cmp
in
fstpl
push
dec
push
mov
pusha
add
les
adc
in
out
ret
mov
pop
leave
ret
push
mov
bound
cld
fsubl
push
mov
nop
stos
lods
jl
dec
loope
or
in
lret
loop
and
sub
ljmp
sub
push
iret
pop
xchg
repnz
mov
dec
dec
ljmp
mov
hlt
xchg
mov
jecxz
test
inc
mov
mov
jmp
ret
mov
xchg
cmp
flds
sub
pop
pop
js
dec
adc
popf
or
jo
jl
int3
jno
adc
ljmp
push
gs
popl
scas
push
adc
xchg
gs
jne
mov
movsl
cmp
clc
inc
push
sub
adc
xchg
mov
and
or
ret
adc
adc
push
int
sbb
add
shlb
sbb
popf
mov
sbb
aad
adc
adc
ret
sub
pop
and
push
push
xchg
pusha
mov
popa
cli
xor
push
push
nop
je
shl
add
in
mov
insl
cmp
and
add
xor
call
mov
jecxz
adc
sbb
in
mov
xor
shlb
mov
add
lods
lahf
dec
dec
mov
clc
rolb
mov
cmp
clc
sub
negb
aad
xor
rclb
stc
cmp
aam
add
xchg
dec
or
jl
inc
sub
test
shll
jns
psubusw
in
lret
xor
xchg
jmp
call
xor
fidivl
pop
out
cli
sub
stos
xlat
pushf
inc
sub
aad
cs
popa
mov
repz
test
mov
dec
les
add
add
das
inc
in
mov
ret
clc
sbbb
pop
ret
add
sbb
popa
or
and
les
loop
clc
pop
xor
aaa
rclb
cmp
pusha
loop
clc
rorl
sub
lods
mov
adc
xchg
in
les
repnz
lods
inc
rclb
mov
enter
stc
inc
xchg
mov
call
outsb
notl
cmp
xorb
sbb
imul
outsb
shlb
or
mov
mov
ds
xor
nop
sub
mov
jno
mov
ljmp
out
add
mov
mov
push
outsl
add
mov
or
popw
in
xlat
mov
cmp
outsb
addr16
add
shll
adc
push
sub
shrl
adc
and
loope
dec
mov
sti
add
push
dec
hlt
push
push
repnz
ljmp
sub
cld
adc
or
fcoml
std
add
mov
or
loope
pop
or
sbb
movsl
jno
add
and
cwtl
loop
repnz
or
sbb
jle
xor
dec
pcmpgtb
fs
mov
ljmp
mov
pop
fsub
loop
inc
push
pop
and
adc
mov
dec
rol
push
pushf
sahf
add
push
nop
inc
sub
lock
adc
ffree
ret
cmp
inc
xchg
stos
inc
jns
add
ret
hlt
es
adc
dec
into
clc
adc
subl
shr
repnz
add
mov
sub
fsts
jae
sub
inc
jmp
sbb
pop
cmp
or
out
push
hlt
cld
mov
inc
mov
rolb
jmp
repnz
xchg
or
pusha
test
push
js
sbb
dec
add
cmc
inc
movzbl
scas
jbe
pop
stc
cmp
cmpb
mov
jnp
hlt
xlat
mov
leave
add
jmp
or
ret
cmp
cmpl
fsubl
repz
daa
add
mov
fnstsw
inc
into
adc
lahf
subl
jbe
ret
mov
scas
ja
in
xchg
fs
or
dec
das
sbb
in
xchg
sbb
jg
call
cltd
add
xor
enter
faddl
push
pusha
cmc
pop
inc
inc
not
add
inc
ljmp
sub
mov
and
cwtl
scas
lret
jo
or
jae
out
scas
fwait
inc
call
mov
mov
push
shr
stos
in
jl
cli
frstor
adc
test
cld
in
test
lret
lahf
je
in
mov
mov
clc
sahf
or
or
or
push
push
sub
hlt
mov
in
fsubrl
push
or
or
add
stc
dec
sub
popa
jne
mov
push
add
loopne
and
mov
push
leave
lahf
push
leave
add
lock
sti
cld
lret
mov
jae
int3
sbb
or
leave
fstps
add
xchg
sbb
inc
push
mov
ret
cmp
push
dec
loopne
sbb
lods
push
sahf
cmp
adc
lods
adc
mov
xchg
loopne
andb
les
add
cmp
ret
lret
or
pop
cmp
push
in
lahf
stos
insb
ss
push
call
mulb
sub
fnsave
adc
push
in
jns
sub
into
lcall
testl
jns
ss
repnz
dec
inc
fisttpl
rorb
iret
mov
or
mov
hlt
sbb
ret
xchg
pop
pusha
push
inc
int3
les
out
test
stc
mov
pop
sub
repnz
fstpl
gs
or
mov
pop
pusha
mov
out
lods
add
or
pop
pop
hlt
int3
and
adc
and
scas
lods
cmc
add
and
fadds
mov
inc
rep
das
test
imul
push
jo
add
add
decb
sub
sub
movsb
inc
xchg
sbb
aas
movsb
sti
xor
cmp
out
hlt
jg
shrb
in
ret
loop
xchg
lret
shrb
les
fisttpll
nop
rcrl
adc
cmp
std
jecxz
sub
nop
sti
sub
lods
daa
daa
push
sbb
int
icebp
or
mov
push
adc
gs
sub
sub
jp
mov
fcoms
inc
cmp
in
ljmp
rcrl
push
into
fdivl
lret
pop
push
std
add
stc
or
into
add
fucom
jne
faddl
sbb
sbbb
pop
push
mov
add
shlb
adc
fwait
sbb
stos
mov
pop
adc
mov
or
mov
lods
mov
add
or
mov
cmc
enter
jmp
push
popa
leave
add
pop
mov
imul
fidivs
sub
into
add
rol
aaa
repz
std
cmp
or
enter
jmp
pop
adcb
lcall
arpl
mov
cmp
les
movsb
rcpps
sarl
dec
push
sti
dec
mov
mov
and
in
hlt
shlb
jbe
lahf
lret
bnd
aas
adc
sub
xor
out
cmp
mov
ret
leave
cmp
mov
lret
aad
adc
lret
inc
cmp
frstor
adc
add
sub
jmp
mov
shlb
test
pop
sub
mov
inc
mov
sbb
add
hlt
pop
and
or
gs
sub
adc
push
mov
mov
je
dec
add
fwait
xchg
ret
xor
in
subl
stc
repz
hlt
lods
mov
pushf
jnp
pusha
test
jecxz
push
sbb
pop
nop
rorb
mov
pop
jbe
xchg
xchg
inc
shlb
lahf
dec
and
mov
mov
add
int
pop
lret
mov
sti
push
mulb
or
cs
mov
dec
sbb
jmp
dec
mov
cmp
xchg
jae
mov
mov
xlat
adc
ret
xchg
in
in
insb
inc
inc
fstpt
dec
xchg
add
cmp
call
stc
cmp
gs
jo
ret
and
test
add
jae
cmp
fmulp
jge
push
bound
cli
cmp
movsb
cmp
scas
mov
adc
arpl
aam
dec
inc
sbb
cmp
nop
add
fisttpl
in
push
mov
fstl
lahf
pop
mov
or
nop
jge
mov
adc
sub
jb
lret
sahf
test
pop
in
jg
fcom
pop
cltd
out
out
mov
imul
fidivs
mov
test
pop
loope
enter
hlt
jae
pusha
mov
stc
push
mov
cwtl
or
cmp
les
dec
xchg
lcall
sahf
xchg
cmp
or
sub
nop
and
mov
jnp
cmp
mov
push
arpl
adc
adc
outsl
add
sahf
add
pushf
xchg
aas
xchg
lret
inc
cltd
in
hlt
pop
add
jbe
dec
inc
cmpsb
push
push
xor
add
ret
fstpl
pop
fstl
stc
pop
in
or
mov
mov
push
je
aad
or
xchg
pop
pop
jle
add
dec
xor
sarl
mov
or
xchg
xchg
lahf
mov
mov
and
stos
stos
lds
add
push
xchg
aam
cmp
pop
shl
or
sarb
add
push
or
ret
xlat
adc
sar
mov
or
pushf
insl
inc
push
jmp
mov
in
cmpsb
dec
xor
jb
xchg
ss
mul
test
inc
dec
xor
push
cmp
pop
sbb
inc
hlt
pop
lods
shr
lock
fbld
add
jle
mov
mov
imul
test
or
sub
sbb
fwait
ror
arpl
mov
sarl
pop
addb
sbbb
xorb
mov
leave
adc
jbe
pmaxub
mov
or
inc
cmp
dec
lods
ljmp
cli
fnsave
xchg
int3
mov
lret
inc
or
stc
cmp
les
mov
jne
mov
leave
gs
or
adc
add
xor
decb
fwait
xor
or
mov
xchg
std
adc
fstl
xlat
mov
xchg
and
adc
dec
mov
stos
dec
lods
or
sub
jns
inc
xor
inc
loopne
repz
xchg
dec
xchg
jge
pop
ja
ret
mov
sbb
cmp
adc
test
loop
add
frstor
sbb
pop
add
mov
fisubl
mov
xchg
lods
mov
xor
dec
aam
mov
iret
test
in
sub
fiaddl
jno
lret
movsb
push
shrb
lods
shl
imulb
mov
mov
imul
rcrb
mov
into
adc
adc
ret
mov
lret
aam
cli
fwait
or
xor
xchg
jno
sbb
rorb
je
in
push
pop
clc
xor
mov
aam
jb
xchg
push
nop
scas
lret
ljmp
aam
stos
sub
fldcw
leave
jg
cmp
add
repnz
lret
push
rcrb
push
adc
cmp
push
adc
movsl
or
sbb
jmp
in
jmp
movsl
stos
inc
add
shll
jmp
mov
std
add
cmpsb
mov
out
popa
cld
scas
dec
out
stos
mov
rcr
sti
enter
jae
jnp
adc
push
into
shrb
add
push
add
int3
outsb
push
sub
push
jp
mov
int3
iret
add
scas
mov
jb
and
mov
and
sub
fimuls
xchg
pop
xor
out
cmp
les
mov
call
cmp
ficoms
fucomp
push
sub
ret
mov
xchg
jmp
inc
movsb
popf
mov
out
les
imul
mov
add
hlt
sbb
cmp
js
sahf
fidivrs
shr
sub
roll
in
or
aas
mov
mul
add
or
pusha
mov
lret
pop
xchg
sahf
mov
jns
inc
inc
inc
push
mov
in
add
cmp
ret
pop
mov
fists
aas
jno
or
mov
mov
idivl
adc
mov
pop
push
in
stos
adc
dec
fsubl
ja
orb
vmovapd
mov
or
and
repnz
into
repnz
or
push
scas
sbb
subb
andps
sbbb
enter
into
setnp
shrl
push
out
ret
mov
mov
push
fisubrs
cmp
icebp
ret
rorl
ret
stos
out
stos
mov
gs
dec
js
in
pushf
jge
mov
cmp
xchg
movsb
imul
add
shll
or
add
rolb
xor
hlt
repz
push
shlb
xchg
push
adc
push
add
scas
xchg
in
add
adc
cli
lret
inc
in
mov
es
xor
out
mov
jae
or
sbb
or
adc
inc
mov
subb
jmp
mov
stos
daa
mov
lods
adc
jne
repnz
mov
pop
subl
test
pop
insl
scas
clc
ror
xchg
mov
jg
jp
cmp
in
aas
sbb
hlt
loop
lahf
xchg
mov
mov
cmpsb
std
les
add
mov
mov
mov
test
jo
mov
mov
sub
cltd
sub
or
fnstsw
dec
dec
dec
or
and
push
pop
xchg
daa
jbe
jno
repz
into
loop
or
repz
imulb
out
pop
inc
xor
roll
mov
les
ljmp
cmp
leave
and
xor
loope
xchg
cmp
mov
adc
or
xor
inc
add
test
pop
repnz
out
fnstsw
lret
pop
in
fidivs
mov
mov
or
repz
loope
xchg
or
mov
insb
add
or
push
aad
fsubl
sbb
ficomps
sub
add
or
std
or
gs
sahf
gs
movsb
ljmp
mov
movsb
dec
mov
push
xlat
and
lea
mov
lret
rcll
lret
mov
mov
nop
pushf
sti
jae
rcrb
adc
gs
aam
sbb
sub
or
mov
add
mov
mov
scas
movsl
jb
and
add
les
mov
imul
daa
loopne
fcoml
leave
dec
in
aad
iret
in
icebp
leave
sbb
repz
dec
cltd
ficomps
test
pop
cmc
orl
xor
jl
inc
adc
jbe
xchg
dec
ja
adc
push
or
jg
fnsave
push
sti
shrl
or
in
sub
sbb
add
adc
mov
mov
sbb
sub
ljmp
adc
mov
jbe
or
or
xchg
sbb
iret
adc
pop
in
adc
or
fcoml
ret
cli
fucomip
sub
add
shrb
lret
inc
repnz
gs
cmp
insl
jmp
mov
xchg
cmp
cmp
inc
call
sahf
shrb
jg
adc
sar
or
adcb
ja
xchg
xor
loop
call
scas
out
cmc
cs
out
jmp
ret
fsub
fwait
sbb
add
test
mov
push
aas
lods
xorl
jmp
mov
dec
addr16
pop
sbb
mov
loopne
sahf
xchg
out
sbb
adc
sub
in
testl
dec
mov
xor
add
lret
push
fldcw
sub
inc
mov
ret
les
stos
mov
popa
sub
mov
mov
mov
pop
in
jmp
hlt
les
xor
mov
dec
fwait
into
xchg
push
mov
lahf
mov
faddl
or
sub
icebp
lret
std
jnp
adc
inc
add
adc
pop
test
fiaddl
sub
push
pop
cmp
add
jnp
push
clc
outsl
lods
insb
or
leave
imul
arpl
sub
loope
sbb
testl
add
jbe
nop
adc
sti
mov
movsl
test
dec
mov
popa
adc
dec
mov
dec
push
loope
xchg
mov
add
aas
pop
xchg
cmp
jnp
jo
das
push
ja
pop
xchg
call
sub
dec
movsb
mov
jecxz
dec
push
call
mov
xchg
icebp
mov
jg
adc
jnp
push
jne
add
push
xor
push
aas
repz
mov
inc
hlt
inc
pushf
inc
js
int3
inc
fdivs
aaa
enter
repnz
dec
fsubrl
xlat
mov
pop
sub
hlt
push
addb
or
in
add
imull
dec
cmp
sbb
xlat
add
cmpsb
sbb
xor
dec
hlt
or
movsl
pop
lods
test
add
shlb
sbb
adc
sbb
mov
jne
outsl
xlat
and
push
sbb
aas
xor
movb
jle
mov
scas
int3
mov
lock
push
fucomp
push
push
lea
insb
pop
lret
rcrb
dec
adc
xor
daa
mov
lret
adc
jb
jo
xor
mov
in
aam
stc
and
add
shr
sub
pop
push
ss
dec
dec
lock
imul
and
ds
shlb
dec
inc
mov
sub
and
lods
pop
xchg
sti
xchg
lods
test
test
sub
mov
adc
push
add
stos
fdivs
pushl
dec
out
mov
es
aam
test
push
data16
xlat
add
push
push
in
shlb
add
stc
test
add
cli
es
push
sbbb
xchg
daa
lock
dec
mov
push
xchg
sub
pop
adc
adc
jecxz
jo
add
mov
sub
std
cli
cmpsb
pop
shl
mov
les
jo
or
sarb
jne
cltd
popf
shlb
add
pop
cmp
mov
push
in
sub
out
push
mov
jne
sti
ror
out
adc
adc
sub
sbb
adc
cwtl
jnp
sub
lahf
sbb
leave
lret
add
arpl
ret
icebp
sub
daa
jno
sahf
add
pop
sub
popf
rcl
lcall
sbb
fcoms
clc
push
or
adc
jl
jo
cmc
xchg
sar
movsb
xchg
scas
xchg
adc
sbb
dec
fucomip
or
mov
pop
push
insb
jmp
jo,pn
fs
xchg
or
xchg
cmpb
dec
rorb
mov
sbb
ret
mov
sahf
fdivrs
xchg
hlt
add
mov
fneni(8087
paddb
clc
or
xchg
lahf
adc
and
mov
loop
stos
mov
sbb
cld
mov
adc
test
loopne
fidivrs
lcall
sub
out
xchg
add
pushf
mov
scas
lahf
dec
push
push
xchg
arpl
inc
repnz
or
lds
pop
orl
stos
or
arpl
push
or
cmpb
call
cmp
ficoms
mov
adc
dec
inc
leave
shlb
lock
xchg
jb
testl
cmp
mov
ret
pop
push
mov
add
ljmp
outsl
sar
and
add
push
add
inc
int3
xor
jmp
stc
iret
xor
lahf
shlb
hlt
cli
ss
mov
pop
nop
popa
jo
dec
cmc
xor
add
xor
pushf
lods
nop
jmp
xor
ss
ret
adc
xchg
and
sbb
outsl
mov
outsb
lcall
adc
mov
cmpsb
test
pop
test
add
es
aad
js
sbb
jmp
mov
mov
lret
xchg
es
aad
push
xchg
faddp
inc
sbb
outsl
push
push
fldenv
mov
test
mov
sbb
mov
sub
and
push
insb
rolb
leave
fisubrs
sbb
mov
jl
push
jecxz
or
sbb
mov
mov
inc
out
dec
mov
lcall
shl
loope
rcrb
ja
cmp
push
fiadds
cmp
out
or
add
shl
add
cmp
xchg
mov
or
cmc
dec
jmp
xor
adc
stc
pop
mov
mov
or
out
out
mov
pop
add
fimuls
sub
ljmp
loop
sbb
scas
xor
xchg
and
arpl
adc
ret
loopne
pushf
movl
jg
fwait
cwtl
addl
lret
add
jle
jo
xor
int
lods
inc
mov
repnz
je
or
aad
inc
fnstenv
push
lds
pop
arpl
mov
sub
push
repz
movsl
scas
loopne
jnp
mov
jmp
lea
jg
hlt
dec
pop
nop
test
cwtl
dec
mov
stos
call
sbb
mov
aad
icebp
push
loop
movb
leave
push
xor
pushl
and
adc
and
mov
push
push
adc
push
and
jp
xchg
push
xor
dec
adc
mov
insb
push
push
lds
out
xlat
lods
leave
mov
or
or
sub
adcb
cwtl
jb
mov
test
push
sub
mov
cld
inc
rorl
cmp
add
iret
sbb
push
int
xor
mov
push
lahf
mov
cmp
push
mov
gs
lahf
inc
aad
fidivrs
and
dec
rcl
pop
push
daa
lahf
in
pop
sub
stos
xchg
jae
imul
jo
jb
lret
adc
and
inc
jns
mov
and
fcoms
push
mov
add
stc
or
in
mov
lock
repz
inc
out
jp
in
push
adc
rorb
jmp
or
and
sbb
xor
mov
mov
imull
jmp
sub
sbb
test
inc
outsb
pop
or
sub
add
pop
data16
int
cmpsl
out
in
test
pop
mov
sar
add
cmp
jo
nop
pop
call
int
test
cmpsl
icebp
mov
std
and
push
or
adc
mov
shl
push
cmpl
mov
inc
adc
jl
add
mov
rolb
int
sbb
inc
aas
cmp
add
sub
clc
fcmove
inc
lea
lds
fs
cli
dec
sbb
mov
cmp
mov
incl
cld
fcompl
dec
add
sbb
js
adc
xor
jns
and
fldcw
pop
xlat
enter
push
std
sbb
mov
fmul
rorl
mov
sbb
cmp
adc
xchg
scas
in
repnz
loopne
pop
icebp
lret
call
adc
xchg
sbb
or
pushf
jno
aas
push
or
push
push
mov
les
andl
adc
in
and
push
jae
push
mov
sub
mov
call
sub
mov
sti
mov
ja
add
loopne
add
dec
sbb
in
jae
fdivl
xor
stc
xchg
rol
cld
push
xchg
push
out
jmp
add
in
lock
popl
adc
xor
or
pop
loope
sbb
pop
xchg
loop
or
iret
sarl
inc
inc
jo
repz
lahf
icebp
nop
add
jmp
mov
stc
push
sbb
and
dec
mov
mov
hlt
scas
rcrl
mov
add
fs
xchg
jecxz
push
faddl
add
out
outsl
scas
mov
sbb
add
repz
scas
mov
test
or
xor
xlat
pop
repnz
and
mov
sarl
jmp
add
push
cmc
filds
add
mov
or
popf
jmp
rol
mov
call
ret
mov
jl
jle
xor
xor
loope
sti
fdivs
lahf
out
xor
ss
sub
push
enter
imul
cmp
out
xor
xchg
xor
inc
push
stc
push
dec
adcl
sub
adc
shr
fisttpll
or
femms
jnp
or
nop
les
int
mov
mov
jg
cmp
ret
sbb
testb
mov
sbb
call
lock
sbb
or
lods
movsb
sub
xchg
fldenv
sahf
cmp
dec
rcrb
add
or
and
incl
aaa
pushf
ret
outsb
sbb
inc
add
jmp
das
in
lock
nop
fadd
sti
shrb
insb
or
push
imul
and
sbb
int3
dec
or
sbb
dec
or
sbb
mov
push
mov
orl
cwtl
shlb
jecxz
shll
dec
xor
jne
adc
adc
sbb
push
in
or
or
hlt
pop
fnstenv
into
testb
insl
jo
adc
sti
mov
mov
mov
and
inc
adc
mov
and
xor
pop
mov
hlt
xchg
and
es
fcoml
mov
adc
sbb
pop
scas
dec
out
pop
mov
clc
lock
in
popa
repz
cld
adc
lock
jp
insl
idivb
dec
lahf
or
cmp
mov
add
std
ret
test
lods
mov
rclb
pop
add
adc
sub
cli
or
xorl
mov
rcrl
mov
jmp
sbb
dec
pushl
lds
out
mov
in
push
push
dec
push
das
xchg
push
push
lock
pusha
push
mov
int
and
rcll
cmp
adc
rcl
sbb
sbb
cli
hlt
or
ss
add
mov
fnstenv
cmp
xor
in
adc
orb
out
in
hlt
movsb
push
mov
xchg
inc
testb
jecxz
and
xchg
sub
cmpsb
sub
outsl
lahf
sbb
pop
cld
imul
shll
dec
mov
cmp
push
push
jae
push
enter
repz
and
cwtl
in
mov
add
pop
shrb
mov
push
sbb
add
mov
into
jns
mov
movb
nop
stos
jno
xor
xor
enter
fucom
xchg
dec
mov
inc
add
notb
in
movsl
mov
dec
lahf
scas
jne
mov
pop
nop
or
lock
sar
mov
in
repnz
sbb
ffreep
pop
adc
scas
repz
cmp
sub
sarl
jp
adc
stc
inc
lahf
in
leave
xor
stc
pop
lods
cs
shlb
dec
mov
mov
andl
push
jmp
nop
mov
mov
jnp
ret
xor
test
arpl
adc
sahf
ficoms
shll
test
mov
sti
push
mov
pusha
or
mov
andl
and
xor
sbb
sbb
push
cmp
dec
in
int
test
push
jl
fwait
rolb
mov
add
addr16
cli
xchg
rorb
mov
dec
cmp
out
xchg
sti
push
mov
hlt
fmull
mov
shr
mov
push
and
cwtl
cmpsb
out
push
stc
jae
add
stc
inc
hlt
sub
pop
sub
insl
jle
jp
loope
lcall
pushl
repz
int3
sbb
sub
and
aaa
or
cmp
push
out
or
adc
into
mov
or
rorb
xchg
dec
fbld
insb
popf
test
stos
mov
push
call
mov
xchg
ror
dec
sti
sbb
int
aaa
adc
inc
pop
outsl
xor
or
cwtl
in
test
mov
pop
jae
cmp
mov
sbb
mov
push
add
mov
push
test
shlb
add
or
jns
mov
aaa
movsb
push
in
xor
shll
lock
call
aad
jb
pop
pop
in
sub
aad
leave
mov
aad
mov
rolb
xchg
in
iret
jg
cmp
roll
push
dec
pop
clc
jno
mov
jmp
loopne
iret
xchg
xchg
loope
fdivp
cmpsl
in
fcmovu
lock
mov
jbe
push
xchg
hlt
sbb
or
hlt
cltd
cmp
pushf
sahf
mov
inc
mov
enter
adc
xchg
adc
xchg
ss
sbbb
mov
jp
ds
rcl
fsubl
outsb
add
aam
xchg
pop
popf
cmpsb
or
loop
xchg
ret
push
je
sbb
dec
cwtl
jbe
bt
flds
mov
add
iret
imul
jne
scas
adc
xchg
cmp
inc
mov
jp
adc
cmpsb
mov
lahf
xchg
sahf
adc
cmc
mov
or
ret
or
push
push
push
in
xchg
lds
repz
repz
sbb
push
add
push
faddl
mov
and
cmc
sbb
mov
sub
mov
add
outsl
aas
jle
jg
hlt
mov
adc
sub
leave
call
lahf
xchg
int3
cld
es
mov
into
cmc
lret
or
icebp
test
adc
adc
fmuls
mov
lret
fcoms
fs
pop
mov
push
push
into
jae
popa
ss
in
les
or
out
mov
call
dec
mov
inc
sub
movsb
push
popf
inc
mov
sbb
imul
add
mov
iret
lret
test
jne
inc
rolb
jno
nop
out
xor
adc
pop
repnz
mov
lds
or
into
push
push
das
add
mull
scas
and
lret
mov
lods
adc
mov
int3
add
shr
les
es
jns
and
repz
popf
mov
pop
lock
hlt
inc
jne
add
test
cmp
push
out
scas
loop
dec
test
ret
and
in
or
and
sbb
jg
cmp
or
fwait
mov
jmp
mov
mov
lds
js
insl
pop
dec
mov
pop
scas
push
leave
add
fistl
sbb
outsl
subb
mov
sarl
mov
mov
cwtl
xor
pop
cmp
add
data16
popf
dec
orb
sub
jmp
ja
push
sbbb
xchg
call
mov
shll
out
xor
mov
pop
mov
add
lahf
push
pop
push
dec
mov
ficoms
mov
mov
lret
js
push
mov
push
add
sub
sub
sub
mov
into
stos
les
ffreep
xchg
cltd
stc
and
inc
push
fwait
js
pusha
pmuludq
xor
into
adc
jbe
push
or
adc
fs
sbb
xchg
jae
adc
sub
dec
push
add
test
mov
call
jnp
xchg
or
cmp
std
add
jb
repnz
sarb
adc
fcoml
daa
fnsave
pop
shrl
mov
stos
adc
jb
mov
mov
mov
jmp
add
aad
mul
or
add
call
into
push
pop
bound
inc
adc
adc
mov
jbe
adc
je
dec
push
jl
call
cmp
out
pop
repz
adc
ss
enter
scas
pop
or
jl
sti
mov
arpl
repnz
call
add
stos
push
loopne
aam
sub
push
add
lods
jl
and
jmp
notb
ret
mov
inc
add
mov
inc
mov
inc
loop
nop
sahf
adc
test
push
icebp
out
mov
pop
mov
dec
dec
and
gs
ja
mov
movsb
or
out
and
adc
adc
divb
add
cmp
mov
pop
xlat
pop
push
dec
gs
inc
je
lock
xchg
in
call
mov
out
shll
mov
mov
or
int
push
mov
sub
xor
ds
push
in
inc
cs
lret
ror
xchg
xchg
adcb
add
fisttpl
jle
lcall
aad
rclb
js
lret
mov
and
mov
insb
rclb
ret
xor
adc
outsl
cmp
ret
leave
mov
ds
test
or
js
call
mov
mov
mov
in
gs
mov
cmp
mov
mov
pop
sahf
jnp
ss
mov
xchg
jae
movsb
push
lret
pop
stc
aaa
mov
xchg
test
xchg
jae
xor
jno
add
adc
cmp
jae
push
jecxz
pop
insb
dec
adc
mov
add
jg
xor
rcll
fstl
or
dec
and
xchg
mov
dec
shl
dec
jmp
inc
jnp
sbb
popa
stos
loope
or
in
adc
int3
mov
dec
mov
cmc
mov
rorl
ja
notl
fucom
ds
addb
fdivl
add
aad
jp
push
push
adc
adc
out
or
call
rcl
out
nop
rcrb
or
push
jmp
push
sbb
adc
xor
and
dec
xor
faddp
sub
pop
jg
mov
mov
lcall
popf
cmp
push
inc
lahf
xchg
adc
mov
rcll
push
mov
cmp
cmp
out
mov
cmp
pop
xchg
sub
out
insb
adc
or
faddp
repz
add
sub
and
or
enter
add
cmp
lock
sub
shlb
sti
je
pop
cmp
into
jns
push
dec
lcall
loopne
into
xor
repz
sarb
fmull
ja
push
ret
sbb
out
stc
std
pop
mov
adc
int3
add
sub
pop
jecxz
sbb
and
mov
mov
into
mov
ror
jge
adcl
mov
stc
cmpsb
sbb
or
imul
stos
loop
jb
mov
mov
dec
mov
in
out
mov
fsts
adc
ja
in
and
lcall
inc
adc
jg
dec
outsb
int
in
mov
xchg
sahf
pmulhuw
in
mov
std
adc
lock
subb
jecxz
popa
fcmovnbe
xchg
stc
sbb
arpl
add
inc
inc
mov
dec
ljmp
fadd
mov
add
mov
cmpsl
pushl
jmp
pusha
sub
popa
or
mov
mov
stos
sub
fisttps
jp
sub
or
icebp
xchg
xor
test
roll
jnp
ss
out
mov
dec
aaa
mov
mov
mov
insb
adc
cmpsb
add
pop
in
sub
nop
sub
dec
test
shrl
fmuls
lock
mov
sub
popf
fistpll
repz
aaa
add
dec
pop
mov
mov
int
pop
pusha
std
loopne
hlt
pop
in
push
into
sahf
sbb
sub
imul
mov
add
dec
shrb
sub
in
lock
fucomi
nop
jns
and
iret
mov
test
sbb
aad
in
jl
sbb
in
dec
cmp
add
mov
call
shlb
gs
adc
add
ds
dec
lret
or
cld
or
or
std
mov
add
cmp
cmc
sub
pop
cmp
adc
and
mov
jno
jbe
mov
mov
arpl
lock
add
mov
mov
les
lock
insl
push
jle
imul
hlt
cmpsb
xor
adc
or
mov
push
push
mov
pop
test
in
sar
dec
daa
push
xor
mov
push
fdivrl
cmc
xchg
adc
pop
dec
push
in
mov
mov
sbb
lock
or
repz
or
call
in
xchg
add
roll
in
loopne
stos
xchg
push
cmp
jmp
mov
pop
jmp
subb
xchg
outsb
loop
jmp
mov
cmp
dec
adc
loop
mov
sbb
sbb
push
adc
add
lock
sbb
pop
rclb
mov
rcl
cmp
adc
mov
negl
in
cmp
fcmovnbe
cmp
pop
inc
xor
add
sbb
xchg
loopne
in
cvtps2pd
adc
sub
sarl
scas
mov
adc
out
and
inc
out
dec
pop
test
leave
xchg
dec
test
xor
outsl
iret
in
cmc
aam
adc
in
xchg
rcll
xor
or
jl
add
int3
jns
cmp
adc
push
mov
ret
adc
pshuflw
adc
dec
lahf
adc
mov
cmp
push
icebp
test
pusha
dec
sbb
mov
xchg
sbb
dec
fs
enter
jg
cwtl
push
test
shlb
cli
mov
dec
sub
lock
in
mov
adc
in
adc
ret
mov
pop
repz
repz
out
fdivs
ffreep
sti
cmp
ja
out
or
cmc
mov
pop
repz
repnz
pusha
or
fwait
mov
lock
aam
or
lods
ret
mov
mov
add
xor
dec
in
dec
xchg
mov
adc
inc
outsb
mov
add
stos
mov
dec
test
or
xor
andl
add
or
shll
add
lret
aad
mov
adc
je
lahf
or
mov
test
lock
mov
sub
addb
mov
sub
or
pop
push
or
cltd
adc
mov
cmp
mov
test
xor
lods
sbb
ffreep
sbb
xchg
add
jg
or
iret
int
sub
jb
cmc
mov
jae
cld
rorb
into
test
out
xor
or
lods
loop
mov
or
xchg
movsl
adc
sub
stc
xchg
xor
push
sub
hlt
lock
movsl
into
fs
mov
in
imul
ja
sbb
into
shlb
test
jecxz
bnd
mov
cmpsb
pop
std
ret
pop
sub
out
inc
mov
ror
mov
mov
sub
hlt
adc
mov
clc
dec
addr16
fs
test
aaa
xchg
icebp
test
jae
push
lret
cmp
mov
fwait
mov
lock
nop
pop
or
int
mov
or
lock
push
adc
jp
hlt
pop
and
adc
mov
cwtl
enter
aam
arpl
rolb
xchg
push
mov
test
sub
adc
in
inc
je
xchg
std
insb
and
loop
cmpb
mov
les
push
jo
or
dec
in
mov
out
jle
mov
lahf
cli
dec
repnz
add
jge
stos
cltd
ret
repnz
fmuls
leave
int3
jno
decb
and
ja
mov
in
fcompl
pmaddwd
sbbl
add
or
inc
cmp
jle
push
dec
in
iret
sub
or
lret
test
jecxz
dec
insb
adc
out
sarb
or
xor
add
test
jg
ljmp
add
xchg
fs
push
jo
mov
sbb
or
xchg
inc
stos
sbb
inc
xor
hlt
lret
hlt
xor
outsl
jae
test
jmp
fcomps
lds
loopne
adc
movsb
mov
out
movsb
mov
pop
repz
sub
insb
mov
lcall
jo
pusha
cmp
std
imulb
popf
push
ljmp
lods
aam
int3
popl
inc
add
xchg
dec
push
push
cmp
les
pop
dec
and
add
iret
in
or
in
enter
mov
stos
lret
ret
out
adc
andb
dec
adc
lock
sahf
je
jecxz
pop
adc
jae
mov
out
mov
sar
sahf
je
cmp
or
cmp
add
xor
incl
sbb
xchg
mov
xchg
jb
pusha
popa
fistps
sbb
cmp
call
or
adc
test
sub
dec
pusha
jo
cmp
stos
add
fcompl
dec
inc
jg
or
adc
jge
int3
test
sub
test
clc
ficoml
cmp
or
xchg
je
mov
out
cmp
pop
xchg
lock
enter
xchg
in
call
mov
sbb
mov
cld
enter
fwait
lret
clc
bnd
add
xchg
jns
fidivrl
lret
adc
lods
add
mov
adc
sbb
sub
mov
stos
inc
aas
sldt
mov
mov
inc
out
sub
sbb
mov
test
rclb
inc
fwait
mov
push
int3
call
subl
mov
mov
adc
push
adc
xchg
sbb
xchg
jnp
repz
fisttpll
sub
adc
loopne
mov
adc
sbb
push
fbstp
push
call
xchg
push
mov
dec
and
sbbl
sbb
ret
mov
sbb
call
push
flds
lods
lret
inc
mov
jne
and
and
rorb
push
add
arpl
and
jae
call
adc
mov
inc
cmpsb
cmp
lds
popf
sbb
loope
inc
pushf
out
call
jmp
lret
sbb
pop
out
mov
or
mov
mov
add
push
mov
add
fldcw
lret
out
lahf
inc
movsb
stos
sub
lahf
pop
adc
ret
xchg
or
lds
int
mov
in
call
popf
jmp
cmc
mov
ja
sbb
cmpsb
loopne
mov
mov
sbb
dec
xlat
std
mov
push
or
mov
addr16
xchg
sbb
adc
mov
pop
pushf
movsb
into
enter
cli
cmp
mov
ret
in
push
mov
je
mov
ret
jb
enter
hlt
jb
dec
sahf
cld
xorl
add
mov
push
xchg
bound
pop
sub
xchg
xchg
or
ficomps
push
push
outsl
test
lret
mov
insb
clc
call
arpl
out
fidivrl
out
test
dec
add
shrl
aas
mov
lcall
in
or
push
inc
in
mov
push
out
adc
add
dec
gs
jae,pt
int
data16
add
or
outsl
out
sub
call
fidivrs
sbb
lds
ret
and
test
shr
jnp
xchg
rcrb
clc
jbe
fcompl
inc
jmp
roll
jnp
xchg
popf
cli
add
lds
sbb
add
aad
psubb
sbb
adc
aas
pop
dec
push
int3
stos
adc
adc
sbb
lahf
rorl
dec
ja
mov
lahf
pop
mov
test
inc
out
fs
outsl
sub
lock
xchg
sub
repnz
add
ret
pop
mov
in
sbb
or
pop
jp
lods
xchg
leave
cmp
or
mov
xchg
rcr
daa
xchg
aad
cmp
adc
add
mov
mov
into
push
jecxz
hlt
pop
test
adc
stos
adc
and
movsl
fs
mov
lret
pop
loop
mov
insb
adc
pusha
sarl
pushf
ljmp
orl
sub
inc
imul
rolb
sbbb
jb
ret
and
int3
mov
add
rorl
test
add
sub
pop
imul
or
xchg
xlat
push
int3
push
test
rorb
dec
in
mov
jmp
and
mov
fnstsw
xchg
outsl
or
cmp
icebp
pop
xchg
mov
ds
mov
mov
add
sbb
jno
lock
leave
stos
insb
xor
or
movsb
pop
mov
out
lods
or
or
mov
stos
inc
clc
and
js
cmc
add
nop
push
pop
pushl
xchg
and
dec
mov
push
cli
or
inc
inc
out
call
mov
mov
icebp
push
and
or
dec
scas
sbb
out
mov
inc
les
lock
pop
lcall
add
insb
or
iret
mov
mov
addr16
add
or
rclb
fstpl
in
movsb
pop
test
hlt
mov
pop
xchg
out
outsb
push
sarb
lret
insb
test
jmp
nop
adc
jl
cmp
jnp
out
add
ds
jne
lea
dec
adc
jae
push
rorb
ds
cmpl
lahf
stos
mov
sub
out
imul
sub
les
fidivrl
pushf
out
pop
sub
or
or
xabort
sub
loope
hlt
xchg
js
js
test
push
stc
sub
cmpsl
hlt
mov
in
push
leave
push
js
mov
lahf
cmpl
adc
aas
mov
aam
call
imul
mov
clc
sti
aad
sub
mov
fmulp
mov
pushf
push
in
into
mov
dec
dec
cld
jno
push
xchg
mov
fnstsw
push
add
xchg
lock
aas
lcall
push
bound
fdivrs
loopne
movsb
popf
mov
test
andb
adc
in
nop
es
jp
push
cmpl
push
loop
cld
adc
pushf
xchg
loopne
je
pop
pop
std
push
mov
push
cmp
adc
inc
xor
dec
and
add
dec
push
pushf
mov
out
jns
dec
sbb
mov
movsl
das
xchg
jmp
push
fisubrs
gs
or
das
push
fnstcw
in
push
hlt
xor
aad
inc
cli
jns
inc
lret
mov
mov
int3
mov
xor
jg
xchg
adc
and
or
hlt
rol
sub
sub
int3
fxam
adc
and
inc
rcr
fiaddl
adc
stc
pop
and
dec
int3
xchg
in
sbb
push
add
cwtl
inc
xchg
cmp
cmp
cmc
xchg
and
call
xchg
leave
scas
in
loopne
cmp
jbe
js
sti
andb
mov
jae
dec
out
in
fucomi
pushf
addr16
adc
scas
test
iret
push
mov
loope
jae
push
jbe
mov
btc
rcll
fst
add
mov
sbb
jge
hlt
push
cltd
cmp
mov
jo
jns
rcl
adc
xor
xchg
mov
jne
and
sahf
xchg
mov
int
out
shrb
daa
out
loopne
cmp
stos
cmp
rcrb
addb
jne
sahf
adc
mov
add
mov
fnsetpm(287
out
pop
mov
jbe
aad
test
adc
mov
mov
xchg
dec
xlat
out
xchg
test
pushf
repz
test
orb
ljmp
cltd
mov
sbb
dec
add
or
popa
mov
lahf
sbb
sti
xchg
inc
cs
or
dec
jbe
jp
test
jmp
nop
sub
mov
rcrb
ret
cmp
sub
adc
jg
leave
push
adc
leave
sub
lret
and
xchg
fs
adc
lock
or
inc
add
mov
fists
xor
push
cld
mov
frstor
sub
inc
push
ja
sbb
sub
dec
mov
add
cld
mov
and
add
inc
jno
stos
divb
enter
add
scas
sbb
mov
jge
cmp
int
or
jmp
mov
mov
dec
sbb
je
clc
mov
fldcw
pop
dec
mov
mov
je
fiadds
pop
add
push
leave
aad
add
sbb
sti
xchg
xchg
or
inc
mov
cltd
lock
lret
lds
insb
dec
test
in
dec
or
push
fcomps
mov
enter
mov
jmp
subl
dec
push
mov
adc
cmp
int3
adc
stos
mov
dec
dec
xchg
sti
push
mov
xchg
xchg
cmp
in
sbb
insb
out
fsubrs
sub
lcall
pop
lea
xor
in
rol
pop
sti
inc
leave
out
loop
mov
not
testb
mov
mov
mov
popa
push
hlt
test
mov
scas
pop
ss
xor
mov
mulps
loopne
mov
test
hlt
inc
pop
push
and
push
or
dec
mov
lods
pop
adc
adc
jecxz
mov
mov
xor
add
repz
cmc
lds
mov
adc
jl
inc
incl
pop
jecxz
movsb
cmpsb
jle
enter
dec
in
jge
inc
jle
or
and
xchg
cltd
jae
cli
aam
shl
adc
xchg
mov
jp
pop
inc
out
lahf
lsl
loopne
repnz
ds
xor
jmp
adc
fnsave
fidivrs
push
inc
int3
lahf
mov
cld
or
enter
inc
or
out
int
sub
in
add
lret
cmpsb
popa
stos
hlt
js
repz
sub
shlb
xchg
xchg
xchg
iret
sub
pop
adc
add
mov
int3
mov
lcall
or
jmp
into
xchg
fsubrs
pop
adc
fldl
ss
popf
mov
adc
rorb
xlat
or
sbb
push
add
push
mov
cmp
xor
incl
ljmp
jne
ds
add
mov
sbb
mov
packsswb
in
jecxz
fdiv
insb
hlt
dec
or
mov
lahf
dec
mov
fsubr
and
xorb
ror
sub
sub
pop
pushf
daa
loope
adc
les
sar
loop
jmp
cmpsl
out
sbbb
and
lret
sahf
cmpsb
add
or
in
out
data16
sub
add
push
movsb
add
adc
push
das
or
mov
mov
inc
lods
xor
adc
push
jmp
adc
scas
test
mov
or
insb
dec
lods
cmp
mov
mov
out
sub
mov
pushf
and
mov
mov
sbb
sub
orb
mov
mov
repnz
shrb
in
dec
or
dec
xor
sbb
test
push
add
cld
test
std
sub
add
or
icebp
push
adc
sub
fnsave
cwtl
pushf
adc
imul
push
ret
or
mov
push
rolb
es
mov
dec
jecxz
dec
mov
mov
push
sbb
loope
mov
insl
call
add
dec
test
mov
hlt
mov
sub
push
mov
data16
mov
loop
in
and
enter
adc
fdiv
xlat
cmp
lods
jnp
mov
mov
push
mov
cmovg
outsl
add
mov
popf
sti
cltd
push
xor
cwtl
xor
sub
sbb
inc
xor
loopne
popf
lret
rcrb
in
dec
sbb
cli
sub
idivb
clc
push
nop
xchg
inc
outsb
push
rcll
push
push
and
xchg
adc
and
push
subb
cmp
hlt
fs
pop
popa
popf
adc
outsl
and
into
shl
xchg
cmp
mov
aaa
cmpsb
mov
xchg
mov
nop
inc
push
jbe
mov
ljmp
push
nop
das
pushf
nop
adc
scas
or
mov
inc
push
into
adc
lahf
aas
loope
jnp
xchg
clc
sbb
imul
loop
movsb
mov
les
mov
add
mov
jmp
lock
adc
mov
dec
and
push
xor
jne
gs
inc
ds
scas
push
mov
push
bound
push
mov
arpl
xchg
dec
pop
dec
js
xor
jns
dec
xor
adc
arpl
or
push
xchg
out
mov
inc
or
int3
mov
adc
or
stc
push
imul
xor
mov
leave
les
inc
mov
int
and
inc
mov
jne
mov
lret
int3
cwtl
push
sub
jg
lcall
lahf
decl
int3
add
hlt
inc
adc
xchg
dec
leave
inc
pop
lds
lret
adc
dec
dec
push
rorb
adc
cbtw
stos
mov
mov
cmp
mov
out
mov
jl
sub
ljmp
mov
xchg
sbb
mov
insb
fisubrs
cmp
leave
adc
cmpsb
andl
mov
push
mov
sub
cmpsb
add
aas
dec
in
mov
test
jle
jne
mov
jne
fcomi
shrl
cmp
fisttps
cmpsb
xor
sub
jb
test
inc
or
dec
sbb
inc
sub
cmpl
jnp
icebp
pop
and
stc
xchg
mov
inc
leave
cs
out
in
ret
xchg
mov
jns
fnstenv
mov
or
pop
repz
out
and
mov
cmp
ja
das
mov
leave
add
les
in
or
arpl
cmp
lock
mov
sar
sub
mov
aam
mov
loop
inc
cmc
cmp
inc
sti
int3
adc
xor
sub
and
sub
sbb
cmc
mov
pop
adc
leave
push
push
dec
xchg
popf
das
repnz
mov
jb
movsb
scas
or
jbe
add
and
add
or
cmpsl
pxor
mov
sbb
xor
mov
shl
fs
xor
cmp
jbe
or
cmp
cmp
cmp
jne
lcall
in
jp
imul
mov
out
or
rclb
cmp
pop
into
loopne
leave
sbb
sub
mov
mov
or
add
add
hlt
cmp
cmp
or
and
lock
icebp
push
or
sbb
add
xchg
clc
lds
mov
outsb
movsl
push
cmp
lahf
pop
cmp
nop
rclb
xor
out
add
nop
out
mov
hlt
cmp
mov
pop
imul
stc
lock
mov
or
fldl
loopne
loopne
jns
cmpsl
adc
outsl
mov
enter
lock
xchg
or
add
mov
push
shrb
jp
ljmp
out
lock
inc
cmp
aam
sti
jbe
mov
daa
push
xchg
mov
ret
mov
sub
xchg
sub
pop
inc
lds
js
inc
addl
push
jmp
loop
pop
adc
or
outsb
fbld
pusha
push
sub
lods
sub
out
xchg
shlb
rcrb
adc
dec
mov
fsubrp
xchg
lea
jle
pusha
cmp
inc
pushw
lret
inc
xor
or
movsl
jae
lret
stc
inc
lcall
adc
sub
bound
fmul
jb
adc
nop
fbstp
add
mov
dec
repz
jecxz
insl
loop
push
cmp
repz
add
daa
lods
imul
adc
ss
and
or
aaa
pop
repz
mov
lret
cs
mov
test
cli
insl
mov
aaa
std
add
or
or
mov
mov
loopne
sub
push
push
add
dec
scas
mov
add
test
cmp
cld
sub
add
sarb
push
sbb
in
lret
add
test
sahf
in
or
or
outsl
inc
jo
scas
test
loopne
pop
aad
loope
sub
repz
xchg
adc
push
rcr
xchg
inc
inc
out
and
mov
mov
push
push
push
in
ds
cwtl
fmuls
cmp
jp
mov
loopne
xlat
sbb
fmul
rorb
leave
sbb
call
andb
loopne
jbe
jns
push
and
or
fwait
and
and
ret
sbb
jae
cmp
inc
inc
mov
popf
scas
adc
dec
fxtract
adc
dec
in
xchg
push
xchg
add
or
xor
mov
mov
lock
and
mov
shr
add
mov
je
call
int3
adc
or
pusha
lds
jns
xor
push
xlat
xor
mov
aas
sub
and
sbb
jnp
aad
cmp
loopne
imul
cs
stos
nop
xchg
sub
jno
or
loope
scas
in
mov
fnsave
push
stc
mov
adcb
mov
mov
mov
mov
inc
repz
mov
xchg
sbb
hlt
mov
jbe
pop
enter
iret
cmp
int3
mov
add
lds
loop
shr
pop
jno
and
data16
leave
nop
or
mov
dec
push
aam
cmc
xor
xchg
repnz
push
cli
xchg
xchg
imul
sub
dec
mov
mov
mov
push
std
lret
pop
mov
mov
jg
xor
xchg
lods
mov
shr
nop
jo
sbb
xchg
and
into
add
repnz
pop
roll
add
cmp
xchg
clc
push
iret
inc
jg
sbb
jns
cmp
push
mov
fldt
add
xchg
lahf
adc
call
xor
sub
icebp
mov
iret
rcl
stc
rcll
fdivrs
lock
mov
add
mov
clc
xor
pop
bound
sbbl
std
mov
cmp
test
in
mov
or
in
shl
and
inc
xor
or
dec
xchg
popl
xor
pop
mov
xor
sbb
sub
adc
sub
iret
iret
xor
mov
insl
mov
push
xchg
inc
pusha
xchg
movsl
push
add
fidivl
lret
jnp
adc
mov
ficompl
dec
stc
faddl
cmp
or
adc
adc
xchg
mov
mov
xor
ret
and
fdivrs
jb
bound
jmp
mov
cld
jb
les
hlt
shrl
dec
inc
in
fcmovb
xchg
in
add
sbb
daa
fsubl
jecxz
inc
scas
or
das
loop
mov
inc
pop
mov
and
stc
dec
mov
pop
stc
mov
jl
roll
mov
mov
jo
mov
push
test
xor
push
shrb
cwtl
rolb
sbb
cltd
fists
inc
xchg
insb
sbb
lock
fidivl
push
daa
mov
jmp
mov
mov
into
push
add
mov
pop
add
lahf
in
xor
iret
mov
leave
xchg
xchg
mov
add
sub
xchg
inc
cmpsb
frstor
sahf
jbe
xchg
in
pop
cltd
add
pop
lock
lahf
jo
sbb
pop
add
test
dec
int3
in
aam
add
test
call
jmp
xor
cltd
decb
mov
and
push
scas
push
gs
xchg
dec
lahf
adc
adc
jbe
outsl
out
push
or
sahf
sahf
cld
xchg
icebp
in
lret
push
subl
fcmove
imul
ret
sub
or
cmp
xchg
mov
push
sbb
fcompl
adc
xor
sub
jbe
lods
dec
mov
adc
out
inc
or
mov
mov
sub
pop
popf
xor
icebp
pop
adc
mov
mov
fiadds
mov
es
lock
xor
lcall
push
or
int3
mov
or
sbb
mov
movsb
ljmp
roll
inc
push
mov
int
adc
int
in
cmp
inc
in
dec
pop
xor
stos
sbb
add
sbb
dec
cld
out
xchg
data16
popf
lea
ljmp
ja
adc
mov
xor
add
ds
ss
scas
lods
add
xor
loopne
ret
ror
aam
mov
mov
inc
sbbb
test
sbb
mov
or
add
inc
in
xchg
inc
push
hlt
enter
aam
test
insb
ljmp
movsl
in
lods
adc
div
sub
xor
mov
cmp
add
xor
xchg
das
popf
fnstsw
sub
stc
rorb
mov
int
pop
xlat
or
lahf
adc
bound
les
test
mov
and
add
aaa
mov
lods
loopne
sbb
fimuls
fcoml
test
rol
sub
daa
call
mov
int3
jl
in
cltd
rolb
inc
call
call
cmp
ja
sub
sbb
mov
aam
push
loopne
pop
mov
jae
adc
out
add
das
push
in
sub
mov
lahf
das
jae
je
mov
jle
out
jecxz
inc
addr16
leave
lods
jg
nop
inc
pushf
pop
sbb
mov
gs
adc
lret
cmp
sub
sbb
call
adc
mov
incl
cwtl
sbb
xor
clc
int
into
or
imul
and
insl
sahf
mov
push
pusha
push
fstps
inc
cmc
lahf
pop
aam
mov
lret
scas
add
call
push
sti
adc
jmp
movsb
add
rolb
inc
mov
loopne
jns
jmp
push
mov
out
sti
mov
call
in
inc
cmp
repz
mov
adc
shl
in
sub
dec
or
push
sub
sbb
mov
adc
imul
mov
das
push
enter
sbb
xor
mov
add
jno
addr16
out
jae
cld
and
or
push
xchg
jae
adc
jp
mov
out
sbb
mov
xchg
fistpl
rolb
mov
adc
pusha
aaa
mov
mov
cmp
std
add
xor
jb
xchg
fdivr
addr16
or
test
jge
and
or
mov
mov
adc
mov
jae
cmp
jb
xlat
icebp
fwait
scas
dec
jno
add
lahf
daa
imul
enter
jbe
push
sar
mov
jge
lcall
int3
aas
or
mov
lods
sub
mov
repnz
sti
jne
xchg
mov
imul
push
rorb
bnd
mov
or
dec
aad
les
flds
pop
frstor
aas
adc
mov
or
jp
mov
cmp
mov
inc
mov
cmp
push
lea
sbb
pop
adc
lea
push
mov
xor
cmp
mov
or
femms
cli
bound
loope
pop
hlt
repz
outsl
mov
icebp
test
sbbb
sub
mov
push
pop
repz
sti
mov
add
sarb
lret
decl
decb
call
popa
cmp
in
invd
fadds
das
sub
clc
test
push
pop
jbe
mov
dec
or
clc
in
test
mov
mov
xlat
xchg
aad
movsb
pop
negl
cmp
pop
pop
fidivrl
daa
pop
mov
mov
add
jae
mov
xchg
nop
call
jl
xchg
fimull
inc
mov
out
insl
sbb
xor
mov
mov
adc
mull
sbb
int3
jp
dec
daa
jecxz
in
rorl
lahf
and
pusha
inc
shlb
mov
int
jge
sub
jb
or
addr16
mov
iret
mov
add
in
sbb
mov
push
int3
stos
fnstcw
fstps
fidivrs
call
mov
mov
push
sbb
mov
movsb
movsb
bound
scas
pushf
xlat
das
shll
inc
xchg
pop
sti
ret
pop
cmpl
fcoml
shlb
repz
push
sbb
xor
sbb
xchg
or
adc
add
push
xor
out
xor
jg
mov
rorb
std
fimull
inc
rcl
test
loopne
adcl
sbb
add
or
and
cld
push
jo
in
les
arpl
fstl
jmp
sub
xchg
dec
mov
push
rolb
or
jge
in
mov
shrb
push
mov
or
leave
cmp
or
add
movsl
pop
sbb
movsl
mov
fcom
lret
dec
sarb
mov
inc
mov
mov
mov
ret
push
dec
sub
xor
nop
xor
cs
popf
sahf
les
jmp
cmpsb
in
jno
gs
jl
push
mov
test
sub
aam
adc
push
outsb
js
mov
mov
xchg
xor
or
pop
jl
pop
dec
jp
imul
adc
lods
rclw
hlt
mov
rcrl
clc
push
mov
repnz
cmp
fldt
movsl
mov
lods
dec
jne
subl
movsl
popa
jg
or
iret
or
adc
jecxz
pop
nop
adc
addr16
push
push
add
jmp
lea
xor
int
leave
and
jae
lods
xchg
sahf
add
insb
lret
jae
xchg
je
enter
in
les
arpl
dec
call
jmp
mov
enter
mov
pop
test
in
or
mov
cs
cmp
pop
ljmp
aad
sahf
cmp
in
loopne
and
xor
int3
ret
jbe
stos
pop
bound
insl
fcompl
pop
lds
dec
test
leave
ds
or
or
sub
jno
les
cli
lahf
push
in
dec
push
rol
repnz
and
ss
leave
in
pop
insb
adc
int
or
test
leave
mov
pop
stos
sub
push
push
jno
jge
pop
jmp
loope
sbb
fwait
sbb
pop
or
scas
hlt
es
fdivrp
pop
and
pop
add
gs
fs
stc
dec
movl
movsb
mov
adc
jne
in
cmpsb
sub
add
cmp
loopne
cmp
inc
or
movsb
mov
mov
out
dec
pop
cmpsb
stos
dec
enter
rcrl
rol
xchg
fsubr
push
cltd
dec
rcr
push
mov
shr
cli
movsb
fsubl
sbb
cmp
hlt
mov
push
jl
fstpl
test
repz
mov
scas
pop
jno
add
into
test
mov
addb
ja
pop
sbb
rcll
aaa
in
stc
xor
xchg
iretw
dec
out
fidivrl
sub
fwait
jge
ret
mov
rcl
jmp
arpl
in
sub
sbb
in
outsl
into
movb
loopne
aad
jns
xor
test
fwait
pop
adc
adc
rcl
leave
fdiv
jmp
add
sbbb
stc
pop
fnstcw
pop
push
adc
pop
mov
mov
jno
adc
mov
mul
lock
ljmp
inc
aad
loope
fisttpll
ficompl
decb
sahf
xchg
sbb
jl
cmc
xchg
in
mov
in
mov
xor
adc
stc
pop
mov
repz
call
inc
inc
add
fmul
ss
pause
dec
cmp
jg
inc
xchg
fwait
mov
daa
cmp
hlt
in
xchg
cmp
lock
or
movsb
lret
ja
xchg
xor
inc
iret
dec
ljmp
cli
xchg
xlat
dec
repnz
lret
test
stos
jg
cld
insb
cmpsl
xchg
pop
mov
das
in
lock
test
xchg
shll
adc
push
cmp
xchg
push
mov
outsl
or
loope
and
popf
insb
in
subb
mov
into
mov
mov
push
inc
sbb
adc
fs
aam
sahf
in
fmulp
fndisi(8087
scas
jge,pt
xor
mov
out
ret
mov
lods
push
int
fs
xchg
xor
test
and
sub
fimull
push
decb
adc
mov
nop
jp
test
imul
in
adc
ss
jg
mov
adcb
in
jmp
iret
or
jl
in
inc
movsb
or
mov
sbb
in
xchg
rcrb
jae
cmc
cmp
jo
addr16
sub
mov
inc
leave
xchg
loopne
add
ss
loop
lods
lcall
hlt
sbb
xchg
lahf
pop
rcl
in
shl
xor
outsb
enter
cmp
or
loope
adc
ja
popf
mov
mov
inc
movsb
fiaddl
out
mov
or
clc
xchg
push
out
adc
push
add
and
mov
sbb
mov
bound
mov
jge
lahf
cmpsb
psubb
cmp
bound
or
je
into
mov
cmp
cltd
sub
and
les
push
xor
int
add
mov
out
in
dec
sub
mov
or
decl
in
lea
mov
in
push
xchg
pop
xchg
sub
mov
mov
adc
push
notb
sbb
or
dec
mov
mov
mov
leave
pop
mov
dec
lcall
rorb
sbb
xchg
rolb
xchg
inc
cmp
stos
add
xor
mov
xchg
nop
fstpt
adc
add
add
add
mov
hlt
ss
jge
js
add
adc
je
jo
xor
sbb
lock
bnd
lea
xor
pop
clc
add
out
repnz
add
repnz
call
jae
pop
pop
icebp
jns
mov
sbb
lock
loopne
mov
movsl
movq
pop
pusha
mov
lock
lahf
sahf
sub
xchg
outsl
cmp
cmp
and
jno
sbb
or
filds
data16
adc
repnz
jb
sub
or
mov
fidivrs
in
jnp
cmp
xchg
mov
aad
cwtl
pop
sub
out
and
jnp
shrb
fs
add
pusha
cli
dec
js
sub
mov
es
mov
jg
add
mov
int
cmp
or
sbbb
adcb
sbb
and
xlat
sub
jmp
add
out
lret
or
stos
frndint
jne
sbb
sub
xchg
call
pop
jae
sbb
in
call
adcb
sub
jb
btr
dec
out
mov
jle
testb
ljmp
sbb
insb
push
xchg
cmp
dec
inc
xor
popa
lea
fs
xchg
push
ret
adc
mov
jno
mov
xor
add
and
or
ret
hlt
add
mov
lret
data16
in
mov
mov
call
insb
je
clc
lds
lea
add
pop
cs
lret
jg
mov
stos
jg
in
cmp
jo
call
mov
in
pop
sub
jmp
push
lret
loopne
pop
aad
mov
jg
mov
jl
les
loopne
or
and
clc
test
push
je
add
pop
jp
push
cmp
xor
stc
adc
mov
clc
jns
outsb
popa
scas
ljmp
lahf
lcall
cwtl
or
adcb
fbstp
push
ret
jecxz
cwtl
test
push
data16
adc
pop
cmpsl
jo
rcrl
push
adc
fldenv
and
loopne
fldl
mov
mov
movsb
iret
ja
lock
adc
xor
sbb
mov
test
cmp
and
subl
jae,pn
jl
pop
insb
pushf
push
in
lahf
imul
cwtl
movsb
pop
adc
jno
int3
test
add
ja
fisubl
adc
jne
pop
sbb
inc
mov
lock
sbb
inc
mov
mov
cld
and
sbb
dec
in
hlt
out
cmp
loopne
and
int3
add
in
call
sbb
rclb
jecxz
dec
xchg
in
es
clc
sub
cmp
hlt
cli
xor
xchg
dec
hlt
sbb
cld
or
cmp
fisttpll
or
addl
sbb
jmp
dec
add
test
and
enter
jmp
xchg
into
lock
int3
call
pop
jmp
push
push
hlt
xor
jmp
fmuls
pop
sub
mov
or
mov
out
xchg
int3
fwait
lock
je
jne
push
ds
sbb
pusha
bound
jge
add
in
push
mov
inc
in
mov
lahf
out
xchg
cmp
pop
or
test
andl
lods
test
and
ret
lock
xchg
add
push
mov
adc
add
mov
sbb
add
sbb
imul
jp
rorb
sbb
sub
aaa
hlt
lret
call
sub
je
bound
int
push
loop
lret
in
lret
sbb
xchg
sti
xchg
adc
adc
js
inc
popa
mov
into
sub
fsubr
mov
mov
fsubl
adc
cmp
enter
cmp
and
mov
rcrb
mov
aaa
add
lahf
lret
and
ss
daa
clc
and
rorb
les
insl
ret
lret
add
pop
mov
shr
jmp
add
lahf
adc
add
aaa
xorl
or
push
in
mov
jbe
lret
sub
mov
sbb
ret
pop
jecxz
xchg
repz
xor
outsl
lods
xchg
loop
adc
xacquire
repnz
int3
sbb
test
xlat
sbb
push
xchg
sub
mov
xchg
loopne
add
xchg
js
mov
sub
nop
jno
scas
faddl
call
adc
inc
mov
mov
xor
loopne
dec
jp
and
fs
push
mov
push
in
or
ss
mov
stc
cmp
sbb
mov
or
or
ljmp
sbb
pop
enter
jmp
stos
std
and
jmp
jg
test
scas
insb
jmp
movsb
xor
mov
mov
outsl
into
pushf
rorl
imul
adc
adc
mov
movsb
push
mov
les
add
adc
add
sub
dec
jl
push
pop
aam
test
xchg
aam
ret
out
jl
stc
pop
cmp
jns
pop
out
mov
jecxz
sbb
cmp
scas
sbb
mov
out
sarb
mov
mov
int3
movsb
mov
add
addl
cld
mov
add
out
out
fsubs
xchg
push
adc
xchg
jno
sbb
orl
add
jne
mov
add
pop
fists
dec
and
cmpb
mov
or
test
jb
call
cld
adc
lds
dec
rorl
lea
adc
out
pop
or
push
fldt
mov
rolb
repnz
ss
out
sub
cld
xlat
fsub
inc
ret
mov
out
adc
jge
or
ss
shrb
fcmovnb
orl
shll
inc
xor
in
cmp
jb
aad
orl
repnz
adc
push
sbb
xchg
call
add
iret
ljmp
in
xorb
ljmp
pop
inc
out
cmp
add
int
sub
cmp
lds
dec
cld
mov
add
xor
cmp
xor
jmp
std
movsb
aam
cmp
or
rorb
mov
jno
adc
fildl
jp
push
outsb
jbe
mov
xor
fimuls
popf
outsl
mov
mov
mov
js
imul
pop
jo
int3
dec
push
cmp
out
push
insb
jg
adc
adc
ja
ret
inc
in
shlb
lods
aas
jl
ss
xchg
aaa
cwtl
and
lahf
and
mov
sbb
pop
mov
xor
rcll
dec
and
in
mov
mov
loope
pop
mov
jmp
lahf
and
xchg
js
lret
out
test
outsb
jb
movsb
push
cwtl
sub
cmp
hlt
lret
loopne
jnp
scas
push
sbb
add
pop
adc
pop
test
jbe
mov
enter
jo
jbe
rclb
insb
mov
out
xlat
fwait
add
into
lret
ds
inc
scas
xor
lahf
rorb
adc
mov
pop
xchg
out
into
in
cmp
aaa
xchg
mov
pusha
push
popa
push
repz
add
ret
jns
add
ret
pop
shr
or
mov
negl
lahf
add
std
rclb
mov
int
clc
outsb
mov
fisubrl
sbb
or
aaa
dec
test
xor
repz
psubw
adc
sub
dec
in
xor
mov
adc
push
inc
jne
add
and
das
mov
sub
lds
imul
dec
shrb
jno
popf
jg
js
mov
cmc
lcall
push
or
jl
push
shr
ret
in
add
cmp
call
jge
out
repnz
stos
xchg
pop
sub
testb
dec
or
insb
pushf
repnz
push
sub
roll
push
hlt
push
ss
mov
dec
push
mov
xor
push
daa
pop
xchg
lret
lahf
mov
jle
or
nop
aad
popa
clc
stos
push
rcll
cwtl
lcall
pop
jge
push
jmp
mov
jae
test
scas
aaa
sysexit
mov
pushf
sbb
xchg
xor
jae
adc
mov
dec
adc
test
fstp
leave
fstp
imul
dec
je
popf
repz
add
inc
iret
hlt
xor
adc
loopne
faddl
push
aad
jae
lock
push
or
push
mov
imull
mov
repz
insb
mov
add
fdivp
mov
std
inc
jne
or
push
jbe
out
es
lds
lahf
shll
test
jae
and
add
xor
loop
nop
mov
call
cmp
and
or
int3
push
mov
outsl
adc
adcl
pop
outsl
sbb
rorb
cmp
ret
or
enter
mov
add
pop
xchg
addr16
jmp
ja
mov
add
inc
adc
fmull
out
sub
or
and
inc
adc
sbb
jae
sub
jmp
push
gs
pop
negl
or
inc
fisttps
pop
inc
push
out
je
inc
mov
mov
jmp
mov
mov
mov
xchg
dec
or
push
mov
stc
dec
mov
cmp
js
inc
mov
dec
scas
pop
mov
paddusw
pop
adc
and
ljmp
icebp
dec
scas
and
js
pusha
add
add
sub
mov
ja
add
inc
ss
mov
cltd
pop
ljmp
mov
add
cmp
movsl
lahf
cmp
sbb
mov
sbb
xor
jmp
loop
push
je
inc
ss
mov
ja
add
ret
mov
ljmp
in
hlt
repz
dec
mov
das
jp
or
add
jnp
dec
jl
sub
cmpsl
mov
xchg
cld
adc
dec
push
or
fwait
in
or
das
int3
xchg
xchg
mov
or
out
jl
ret
movsb
addb
arpl
inc
and
aad
xor
iret
clc
mov
call
stos
push
divl
adc
cmpxchg
cmp
pop
mov
mov
je
mov
xchg
dec
in
add
test
lahf
call
push
mov
sub
pop
add
or
outsl
or
mov
lcall
mov
push
ja
fcmovbe
sbb
lret
into
iret
sbb
lahf
movsl
ja
mov
cmp
xchg
adc
test
mov
test
lret
cwtl
sahf
gs
hlt
cwtl
jnp
mov
repnz
stos
adc
adc
in
fcomp
sbb
into
dec
add
nop
push
mov
sbb
jmp
sbb
xor
pop
subl
adc
adc
and
mov
loope
stc
hlt
sub
jmp
adc
icebp
pop
mov
stc
das
xor
pop
push
xchg
movsb
lahf
filds
sub
bound
dec
mov
fdivp
sbb
sub
mov
mov
mov
loop
das
mov
adc
in
les
or
inc
dec
push
cmp
add
ds
dec
das
out
in
jecxz
test
dec
loopne
fimuls
push
jne
int3
dec
mov
in
fwait
mov
stos
xchg
sbb
jno
cmp
nop
in
adc
cli
push
cmpsl
loop
pop
or
test
cmp
jmp
cmp
mov
or
inc
pop
fcoms
dec
scas
movsl
out
mov
push
mov
outsb
mov
cli
xor
adc
cltd
push
loop
int3
rclb
sub
aas
dec
loope
mov
mov
mov
mov
xchg
test
mov
movsb
int3
mov
push
fsubrl
jmp
aam
cmp
cmp
mov
scas
mov
sbb
aas
sub
sub
sbbl
in
or
int
add
jle
hlt
sahf
dec
in
adc
or
pop
in
inc
test
mov
mov
orl
test
or
loopne
adc
stc
movsb
inc
adc
push
mov
clc
add
hlt
or
pop
clc
pusha
jl
or
sbb
sbb
ja
fsubs
mov
xchg
aaa
inc
sbb
fcoml
add
in
mov
mov
sub
mull
hlt
out
pop
test
mov
mov
jae
ret
in
inc
js
or
push
fstp
cmp
push
mov
mov
ja
in
add
iret
mov
sahf
bnd
jp
stc
sub
cmc
outsb
test
js
adc
stc
push
jp
push
push
add
gs
push
sub
push
jb
inc
and
outsl
les
adcb
jae
repz
in
call
cli
or
mov
jne
xchg
scas
dec
notl
push
lret
inc
test
stc
cmp
jg
inc
push
xor
adc
add
iret
insb
sub
dec
mov
ficomps
sti
add
leave
cmp
lret
push
xchg
push
negb
sar
add
dec
fstps
cltd
nop
push
cmp
aam
mov
xchg
sub
cld
sub
loopne
add
add
or
dec
fisttpll
lods
pop
or
pop
repnz
adc
xchg
les
loope
icebp
mov
int3
xchg
leave
sub
push
insb
ret
push
sub
repz
pop
sbb
add
mov
jmp
pop
inc
pop
jne
stc
cmp
mov
pop
push
mov
add
jo
adc
dec
xorl
xchg
adc
fcmovbe
adc
int
jbe
jmp
addl
and
sub
add
adc
stc
push
ss
push
cmp
dec
or
jae
mov
fadds
pop
add
dec
mov
hlt
sbb
mov
lods
hlt
out
mov
movsb
mov
into
add
addb
inc
inc
mov
psubusw
pop
popf
fisubl
xchg
hlt
shlb
hlt
xchg
dec
nop
leave
pop
mov
push
bound
shrb
mov
subl
mov
cmp
jb
or
pop
test
pusha
pop
dec
mov
add
mov
out
fcmovu
xchg
lods
mov
xchg
add
js
dec
jle
jo
push
mov
es
outsb
push
mov
push
lds
int
dec
adc
mov
sub
lods
and
add
daa
sub
xchg
aad
mov
mov
jnp
loopne
out
dec
mov
add
call
dec
lret
daa
cmp
int
xor
add
adc
leave
xor
xor
lret
lahf
ret
lret
das
in
int3
out
cmp
push
fsts
push
or
xchg
mov
add
ljmp
das
add
stos
cli
push
daa
xor
mov
inc
aas
dec
nop
xchg
cmp
cmp
cmc
ss
dec
xchg
add
add
subb
jecxz
inc
ret
mov
sub
adc
aaa
test
ja
lret
cmp
mov
add
iret
or
cmp
jl
loop
sbb
pop
xchg
addl
cmp
ficoms
outsb
lret
ja
incl
test
inc
imul
aas
add
fwait
or
faddl
jmp
dec
mov
ret
enter
ja
notl
pop
sbb
lahf
testb
dec
jns
or
scas
in
call
cmp
cmc
jmp
repz
pop
or
and
add
adc
add
jmp
mov
mov
mov
dec
sub
insb
imul
ret
aad
lahf
cwtl
or
sbb
stc
in
pop
mov
out
cmp
xor
and
mov
fldcw
movsb
or
adc
loop
sbb
andl
xor
push
lds
int3
lret
mov
les
test
in
add
out
stos
loope
cmpsl
lahf
loop
mov
cmp
jmp
mov
dec
aaa
cli
fcmovnb
sahf
aam
sbb
stc
and
outsb
cmc
dec
sahf
pushl
pop
adc
fsub
into
aad
mov
jmp
adc
daa
iret
mov
or
adc
mov
aad
out
xchg
add
icebp
adc
pop
pop
push
xchg
test
mov
mov
mov
ret
mov
sbb
mov
arpl
push
lds
bound
icebp
mov
lahf
mov
clc
bnd
mov
stos
test
rep
aaa
mov
nop
fwait
sub
negb
jg
aam
add
lret
pop
cmp
lcall
add
ret
adc
add
movnti
xchg
ret
push
dec
add
repz
sti
andb
inc
fmul
xor
dec
aas
enter
leave
out
cld
cmp
rorb
loopne
xchg
repz
jmp
pop
aam
xor
sub
arpl
or
ja
lret
mov
jbe
fldl
in
shl
stos
and
mov
movsl
adc
sbb
imul
lret
ljmp
jg
fimuls
dec
loopne
lods
xchg
push
mov
add
mov
decl
cli
jne
pop
jmp
xchg
into
aaa
aaa
push
stos
xor
pop
aaa
cmp
mov
xchg
push
xchg
jmp
out
mov
ja
pop
and
mov
dec
ds
je
in
sub
repz
inc
adc
jae
or
inc
or
aad
push
imul
das
clc
xor
push
nop
sarl
mov
pop
aam
xor
pop
das
add
cmp
nop
push
mov
repz
and
test
mov
ss
sbb
rcll
mov
xchg
enter
sbb
lahf
cmp
sub
leave
xchg
cmp
mov
jmp
adc
mov
sbb
fdivs
imul
push
ljmp
mov
scas
stc
shlb
mov
or
and
dec
cwtl
or
inc
gs
push
mov
mov
lahf
push
cmp
bound
add
es
sbb
jg
pushf
xchg
aad
cli
dec
mov
or
test
jae
or
adc
dec
inc
cmp
adc
or
sub
insb
pusha
sbb
ss
shll
or
in
outsb
xor
inc
inc
insb
lods
popf
cmp
push
pop
les
cltd
lret
mov
adc
mov
pop
out
xchg
xchg
loopne
xor
fmul
pop
pop
add
xchg
sub
dec
xchg
call
mov
adc
leave
fs
jge
mov
pop
and
or
fwait
inc
push
pop
je
and
sar
sbb
sub
out
fwait
dec
add
mov
cmp
sub
xchg
mov
outsb
lods
sub
enter
mov
mov
insb
adcl
sbb
iret
sti
test
in
gs
movsb
push
jg
xchg
xchg
iret
jl
jo
aam
xor
insb
xchg
dec
adc
popf
shrb
movsb
xor
or
jb
daa
repnz
sub
mov
mov
jmp
ss
lahf
imul
pop
jns
xor
repz
lds
and
xchg
outsl
aas
push
sub
int3
mov
fidivs
dec
mov
mov
jg
loopne
mov
scas
inc
lret
movsb
mov
test
je
mov
push
xchg
xchg
add
mov
imul
das
mov
das
or
sbb
outsb
in
adc
movsl
loopne
in
dec
sbb
fidivs
add
sbb
in
ss
bound
imul
mov
xor
sub
movsb
in
add
mov
dec
push
rcrb
loopne
jmp
lahf
adc
mov
into
jnp
pop
and
pusha
scas
pop
jl
fnstsw
xor
inc
or
in
les
adc
or
pop
mov
repz
dec
push
in
push
out
jl
int
gs
adc
add
sbb
inc
or
xor
dec
mov
jbe
jle
sarb
mov
ret
jle
add
imul
fnstenv
inc
jmp
testb
adc
mov
mov
hlt
enter
pop
mov
insb
cmp
add
dec
into
lds
or
mov
in
lret
lahf
dec
mov
jp
and
mov
icebp
lahf
enter
aad
jmp
and
nop
jne
jecxz
movsb
mov
mov
mov
sub
pop
add
lret
mov
push
sbb
shr
cmp
xchg
imul
in
and
fcmovbe
pushf
cld
or
dec
add
mov
mov
dec
ljmp
dec
xchg
pop
inc
orl
pop
mov
sbb
fwait
aas
jno
sarl
repnz
dec
dec
jl
repz
stc
xor
rcrl
leave
icebp
and
xor
and
mov
or
jmp
cmp
ret
mov
orl
int
jmp
out
out
clc
lcall
fistpll
cmp
sbb
cmp
sti
adc
ss
sbb
mov
test
lock
jns
sbb
and
cld
mov
shl
add
push
repz
push
lret
lahf
pop
ror
aaa
into
jnp
add
clc
mov
ret
in
sbb
leave
dec
rclb
pop
cwtl
enter
stos
loop
popa
xchg
add
adc
into
in
lret
movsb
xchg
or
sub
outsl
in
das
add
xchg
xchg
sbb
push
fstpl
cli
push
sub
aas
enter
iret
clc
loope
mov
jmp
aam
mov
movlps
cmpb
mov
andl
cli
mov
lds
xchg
sbb
jmp
loop
add
or
adc
test
notb
xlat
sbb
sahf
sbb
andl
dec
rcl
mov
lret
lret
mov
lods
fs
stos
ljmp
push
and
mov
lahf
test
iret
sti
cli
std
mov
lock
shl
pushf
jecxz
movsb
mov
lods
pop
dec
aas
addl
push
xor
loop
mov
ss
inc
stos
mov
add
fistl
xchg
fwait
pop
out
mov
ds
dec
out
sbb
rcl
leave
les
sub
mov
pop
cmpsl
jne
dec
mov
inc
cmp
pop
push
cmp
aas
inc
cmp
test
xchg
add
mov
sbb
adc
push
add
inc
mov
xchg
aam
add
cld
outsb
add
sbb
je
cltd
clc
aam
sbb
scas
clc
aaa
mov
mov
pop
xchg
xchg
outsl
out
sub
loopne
jae
adc
out
ljmp
je
inc
test
or
add
lea
and
mov
ja
loope
out
stos
out
or
mov
loopne
repz
cld
cmp
addr16
add
in
loope
mov
push
mov
sub
rol
xorb
cmp
decl
adc
pop
int
ljmp
fldcw
and
sub
jne
sar
add
pop
pop
int3
mov
les
fdivp
and
xchg
xbegin
jg
jnp
fxrstor
mov
sbb
int
insb
test
mov
fwait
adc
or
or
add
pcmpgtb
mov
dec
cmc
aam
ja
stos
cmp
pop
repz
testb
push
dec
mov
loop
adc
jne
jnp
xchg
je
and
scas
xchg
mov
xor
sbb
rorb
sub
fists
in
or
jmp
pcmpgtb
cmp
call
or
movsl
jmp
adc
dec
decb
dec
scas
clc
mov
enter
psubsw
test
ljmp
enter
mov
cwtl
push
jmp
insb
or
neg
xor
fs
in
dec
pushf
jp
stos
call
mov
mov
lret
ret
pop
and
les
add
xchg
aad
sbb
xchg
aam
push
sub
ja
mov
add
sbb
push
mov
scas
add
push
hlt
add
adc
stos
pop
lcall
add
or
andb
je
xor
loop
push
push
shrl
or
adc
fs
jb
or
or
nop
xchg
and
in
mov
pushf
imul
dec
mov
add
ds
fldcw
fadd
mov
jmp
sahf
cmc
loopne
or
stos
pop
shlb
xchg
jae
pop
xchg
sbb
loop
xor
jecxz
inc
hlt
adc
arpl
and
int
or
push
test
add
jb
rcrl
clc
pop
aaa
sbb
jmp
rclb
int
cwtl
stos
push
push
mov
jmp
in
dec
in
mov
hlt
int3
jmp
fidivs
xchg
int3
dec
stos
adc
jae
or
in
mov
dec
dec
mov
mov
clc
sbb
push
sarl
push
dec
mov
or
fmul
insl
pop
pop
or
fcomp
mov
ficoms
xlat
sbb
or
inc
inc
pop
mov
or
in
repz
notb
mov
adcl
mov
fwait
repz
adc
adc
and
adc
femms
out
sub
push
mov
or
add
xor
inc
mov
call
push
push
xchg
or
fists
cmovbe
popf
pop
jnp
xor
cmp
and
pop
mov
add
add
out
pop
ljmp
pusha
add
sub
cmpl
add
adc
mov
fcmove
xchg
lcall
xor
jae
jg
cltd
dec
sti
test
enter
popa
repz
fwait
pop
fcomip
sbb
cltd
inc
jb
subl
imull
sub
inc
jmp
sub
xlat
push
js
and
cwtl
push
ljmp
lods
add
xor
dec
les
add
mov
add
xchg
stc
mov
jo
xor
fdivr
rorb
ret
fcompl
das
stos
fidivrs
cmpsb
cld
stos
movsb
dec
dec
int3
in
adc
mov
in
ljmp
and
dec
sahf
mov
ss
cs
je
pop
lret
mov
arpl
adc
add
adc
xor
add
in
aam
mov
cld
cmp
das
lret
les
fs
shll
jno
mov
cld
cmp
lret
leave
addb
add
jle
loop
les
rclb
mov
mov
inc
sbb
add
fcmovbe
or
adc
rcr
add
push
sti
adc
adc
hlt
setl
sarl
xchg
pcmpeqb
sbbl
ret
dec
mov
adc
add
add
and
mov
jmp
loope
and
loopne
punpckhwd
push
or
lock
cs
inc
add
fwait
adc
out
out
in
jp
and
or
mov
adc
sbb
mov
pushl
mov
xchg
outsb
xlat
and
push
xchg
cwtl
in
sbb
cmp
es
xchg
cmp
pop
inc
pop
jbe
adc
lidtl
jl
test
or
cmp
ficomps
lock
lea
push
jo
adc
mov
divl
inc
jge
inc
add
jl
and
push
loopne
arpl
inc
jb
ret
orl
mov
rorb
inc
mov
scas
call
loopne
out
je
in
lods
and
sbb
test
fcompl
les
popf
fs
mov
in
add
addb
xlat
lds
jo
lods
add
lret
mov
inc
xorl
xchg
push
mov
push
test
addr16
push
adc
addb
or
xor
add
ja
mov
insl
sub
loop
ret
adc
mov
stos
jnp
mov
or
pmulhw
sub
or
sub
dec
and
dec
jbe
lahf
cmp
or
dec
adc
push
jae
test
mov
lret
scas
sbb
cmp
faddl
in
push
sbb
add
pop
test
sbb
sbb
sbb
rol
mov
int3
pop
push
xchg
shl
repz
or
sbb
push
inc
mov
mov
or
lret
adc
nop
les
lret
xor
stc
or
inc
xor
xor
leave
fxch
loop
mov
mov
jns
cltd
scas
push
push
adc
mov
cmp
add
sub
mov
push
jbe
sti
adc
call
jns
fadd
or
rol
int3
cmp
cmp
hlt
xor
movsl
repz
pop
ljmp
das
or
out
jmp
mov
das
ret
out
xchg
stos
jb
out
lcall
lcall
outsl
popa
pop
dec
insb
mov
sarl
mov
call
jb
fdivrl
fnsave
insb
iret
loopne
sti
adc
addl
mov
psllq
cmp
mov
loop
mov
pop
or
sti
sbb
adc
pop
test
shlb
dec
sub
mov
fisttps
stos
adc
add
push
dec
sbb
orb
push
xor
dec
adc
into
mov
sbb
je
push
repnz
xchg
fisttpll
push
cmp
add
pop
mov
sbb
mov
sti
xor
pop
push
imul
add
adc
inc
and
mov
repz
les
repz
mov
test
push
mov
lret
ror
popf
sarb
add
iret
sbb
add
push
inc
fucomi
inc
lea
adcl
imul
add
outsb
dec
xchg
sub
mov
outsl
mov
sbb
push
add
outsb
mov
or
adc
xchg
and
jl
and
fcmovnb
cmp
xchg
testb
mov
and
push
mov
jnp
call
clc
scas
dec
jns
pop
dec
inc
pop
cmpsl
cmp
inc
bound
mov
int3
mov
imul
sub
orl
iret
add
loopne
aas
jno
mov
fxrstor
cli
jge
adc
lret
incb
sub
rcrb
ret
mov
outsl
fsubr
fdivp
sub
test
push
repnz
leave
push
lret
cld
mov
mov
sub
mov
add
mov
sti
add
xor
xor
inc
insl
sub
rcrl
sub
clc
in
xchg
add
adc
sub
in
pop
dec
sbb
rcrb
add
test
cmc
or
test
loop
push
jp
ret
mov
int3
mov
push
cli
ss
cmp
popa
aam
xchg
adc
jo
fwait
insb
push
shl
scas
out
pusha
jmp
dec
mov
aam
sarb
jecxz
cld
push
xchg
rolb
bound
cmp
push
nop
test
faddl
fwait
leave
cld
in
sbb
or
add
xor
lahf
add
cmc
out
rorb
pop
or
push
push
jg
lahf
repz
xchg
inc
gs
pop
and
sbb
or
repnz
cmp
sbb
pop
push
fdivrl
mov
hlt
push
add
xorl
xor
adc
movsl
adc
jmp
push
dec
inc
or
mov
ss
xchg
mov
or
jmp
xchg
aam
dec
pop
adc
lret
xor
mov
dec
push
and
pop
nop
push
sub
rep
daa
iret
jns
or
inc
sbb
push
push
pop
enter
movups
xchg
pushf
pop
lahf
sbb
sbb
test
jmp
sbb
and
in
je
shrd
or
dec
sti
aas
mov
mov
je
or
jne
pop
dec
nop
add
pushf
mov
mov
push
movsl
leave
add
and
sbb
adc
sub
cmp
in
push
sbb
fadd
stos
lret
popl
mov
out
ss
lds
inc
in
out
out
adc
adc
xor
leave
and
sbb
les
add
inc
jl
repz
nop
sbb
mov
ja
cmp
and
cmp
add
ret
xchg
cwtl
sbb
add
dec
scas
int3
dec
mov
add
jmp
setbe
dec
imul
insb
add
aaa
aaa
cs
mov
in
js
cwtl
aam
xor
xor
jb
jmp
push
xor
mul
setl
iret
insl
rclb
es
jp
xchg
sub
pop
jo
call
lcall
stos
hlt
and
adc
loope
push
mov
cmc
pop
and
jmp
mov
pop
outsl
jmp
mov
xchg
scas
cmp
dec
or
out
ret
or
insb
mov
pop
add
add
adc
sahf
shll
xchg
into
xor
adc
xchg
or
mov
cmp
les
sarb
mov
jl
and
fstl
fmull
hlt
fcomps
in
cmp
lahf
mov
dec
add
add
dec
enter
nop
lods
frstor
int
int3
pop
xor
or
aaa
dec
add
hlt
xor
sub
xor
imul
adc
push
ss
sub
inc
pmaxub
push
cmc
xorl
aas
rcr
inc
cld
lock
sub
incb
imul
ja
loope
inc
push
mov
call
in
pop
push
adc
lret
add
sbb
arpl
or
pusha
adc
jmp
adc
or
xchg
or
inc
cs
push
sbb
faddl
leave
lret
adc
push
add
daa
push
sub
xchg
fdivl
fcoms
inc
cmpb
pop
fistl
andl
or
dec
adc
sub
out
add
clc
sub
push
sub
xor
xchg
add
cmp
addb
sub
les
push
pop
mov
pop
cmpl
loopne
push
dec
mov
cmp
jmp
testl
leave
lcall
lds
adc
jmp
pop
out
std
js
int3
insb
mov
in
or
inc
out
xchg
hlt
pop
bound
mov
dec
adc
nop
xor
mov
or
pushf
lret
mov
or
sbb
arpl
pop
mov
gs
ret
icebp
ret
inc
jno
jo
in
dec
adc
imul
hlt
stos
rclb
rorb
or
adc
call
xor
clc
aas
add
sbb
loop,pt
into
es
fisttpll
or
cld
or
sub
push
aas
shll
aad
iret
sub
dec
xchg
scas
add
lods
pop
xchg
or
inc
fdivrs
mov
cld
push
pop
mov
sub
pop
push
xchg
call
les
lock
dec
mov
inc
rclb
or
mov
icebp
fisttpl
push
or
or
push
dec
push
jl
mov
rcl
aad
addr16
loopne
push
jp
arpl
out
pop
dec
sub
add
flds
or
jl
xchg
cwtl
pop
pop
jle
call
xchg
xlat
loopne
mov
cmc
loop
mov
or
out
or
add
scas
pop
and
add
or
dec
pop
repnz
xchg
stos
push
aam
cmp
add
aaa
daa
mov
data16
pop
jo
aad
shll
dec
xchg
scas
jge
dec
repnz
or
sub
or
inc
lret
jg
pop
push
movsl
lock
lds
sbb
out
mov
cmp
inc
lea
push
sbb
cmp
pop
adc
add
mov
jae
or
nop
add
lds
dec
sahf
xchg
lret
or
aad
adc
dec
mov
loope
pop
xor
adc
adc
rclb
outsw
call
push
or
sbb
mov
movsb
lods
enter
scas
or
into
aam
adc
lret
nop
push
or
les
add
mov
push
xor
or
call
shrb
mov
je
or
test
adc
les
add
addr16
lahf
std
nop
mov
mov
cmpsb
or
dec
les
cmp
pop
adc
fidivrs
jbe
adc
lahf
add
xchg
mov
pop
adc
insl
ss
xorb
scas
inc
inc
cmp
movsb
inc
jecxz
mov
adc
push
call
cmp
xlat
inc
lahf
sbb
push
fnstsw
xchg
cmp
and
mov
lahf
sbb
ss
dec
xor
xchg
popf
xchg
out
sbb
add
mov
mov
in
mov
xchg
das
cmp
fimuls
sub
roll
int3
ret
fimuls
gs
sahf
movsl
gs
test
in
xor
jg
imul
out
fisubs
xor
adc
sbb
lock
mov
mov
int3
in
add
loopne
or
enter
jecxz
inc
je
adc
push
daa
cmpsb
bound
ret
frstor
push
stos
pop
sub
leave
lahf
ret
add
dec
jle
mov
int3
jb
adc
sub
imul
rcr
jmp
inc
aam
test
sub
sbb
jae
stc
and
mov
mov
inc
mov
add
shl
icebp
int3
stos
fisubrs
inc
imul
cmp
mov
or
int
mov
ret
fistpll
and
sbb
add
fnstsw
push
test
popa
addr16
icebp
jne
and
jecxz
test
jae
sub
dec
pop
and
push
jns
pusha
xor
or
xor
pushf
adc
pop
jg
xor
mov
cmc
adc
pop
jae
push
or
out
loopne
fs
inc
inc
inc
pop
cmp
or
lahf
dec
cmp
repz
out
adc
les
or
adc
xchg
fsubs
adc
adc
xor
std
in
sub
aas
mov
mov
push
pushf
mov
mov
rorl
rsqrtps
and
jecxz
dec
pop
imul
loop
enter
repz
dec
jns
lret
in
jbe
test
adc
xchg
jbe
lea
push
aaa
frstor
push
mov
or
fldl
cmp
cmp
pop
and
mov
jle
fs
xor
and
push
int3
mov
lods
xlat
int3
aad
adc
pop
mov
stos
push
mov
mov
ljmp
xchg
add
jnp
lret
jo
in
and
adc
cli
jae
cmpsl
mov
pop
dec
sbb
leave
std
adc
or
sub
inc
jno
mov
rcll
es
xor
sbb
or
add
into
fisubl
xchg
test
add
add
push
imul
xor
add
pop
ds
stos
cmp
ret
lret
into
clc
dec
iret
loop
jl
jno
hlt
out
inc
cli
pop
mov
in
cmp
sub
and
sub
ss
outsb
xor
jne
ds
addr16
nop
or
sub
nop
add
negl
call
sub
ja
jbe
shr
lock
and
popa
add
mov
enter
inc
addr16
jle
mov
push
repnz
fcomi
sub
fcom
outsl
imul
and
pop
push
cld
jecxz
jmp
repnz
sub
cmp
dec
dec
loope
ret
scas
dec
xchg
aam
loop
pop
in
lock
rolb
dec
lock
adc
and
imul
dec
mov
stos
mov
ret
sahf
popa
call
and
pop
ret
sub
jg
gs
xor
sbb
test
cmp
xor
cmp
scas
sub
jle
cli
sahf
lret
mov
or
jb
add
lock
xor
sbb
in
pop
daa
outsb
jo
es
gs
test
sbb
and
cmp
dec
and
andl
xor
mov
add
adc
sbb
test
or
jnp
mov
or
mov
add
scas
and
in
xchg
inc
pop
add
into
dec
std
pusha
repnz
lds
cli
hlt
inc
xchg
int3
cmp
andl
push
rolb
adc
insl
cmp
add
mov
in
std
ss
fmulp
or
fcmovnb
lret
jecxz
add
fmulp
adc
pop
push
cmp
test
add
ret
lret
sub
lods
sbb
mov
or
inc
popf
adc
push
movsb
push
xchg
out
xchg
sarl
aaa
adc
jbe
push
sbb
stc
dec
lahf
xor
jae
fidivrs
push
flds
testl
and
pop
out
xor
and
mov
je
loope
cmpl
testb
mov
movl
xchg
std
cmpl
rclb
es
sahf
add
or
fxch
ret
leave
cmp
gs
or
or
ljmp
ds
fadds
adcl
or
add
or
xor
mov
add
mov
push
js
ret
mov
and
bnd
hlt
stc
add
add
sbbl
xchg
js
stc
mov
mov
mov
cmpsl
and
mov
inc
sarb
popf
rolb
push
cs
ljmp
pop
adc
jmp
or
mov
mov
into
imul
shlb
push
adc
and
sbb
je
jg
xor
dec
add
cmp
sub
fimull
push
lahf
adc
in
cmpsl
fptan
mov
mov
inc
fucomp
push
xlat
orl
pinsrw
adc
lret
fstpl
pop
adc
enter
add
mov
xor
adc
mov
mov
divb
jmp
pushf
dec
in
into
call
aam
fldl
jl
jg
xorl
xchg
push
xor
in
adc
adc
sub
lods
leave
leave
leave
call
stc
dec
add
push
push
lcall
les
inc
or
or
jae
add
sahf
add
sbb
or
mov
push
lea
mov
div
mov
rcl
leave
outsl
stc
test
xchg
enter
fst
ret
lds
loop
or
jecxz
mov
cmp
push
pop
shll
loop
cmc
in
add
jmp
or
ds
data16
xchg
cmp
in
mov
cs
scas
mov
lds
imul
pop
pop
mov
stc
jae
ljmp
adc
jmp
push
xlat
stc
mov
adc
mov
fcoms
inc
xor
or
in
and
loopne
sub
add
and
and
fdivs
stos
lahf
nop
push
lret
leave
imul
push
mov
add
in
mov
out
out
jo
xlat
test
jg
sbb
or
sbb
mov
and
add
in
out
clc
dec
adc
ret
ret
add
push
pushf
xchg
xchg
les
pop
mov
jg
es
data16
add
lret
sbbl
fisubs
jae
in
ret
in
shll
or
xchg
and
nop
gs
mov
mov
sub
sub
jnp
push
clc
push
add
add
movsb
pushf
mov
lock
lock
push
ja
push
sub
adc
adc
or
mov
jecxz
push
mov
adc
movsb
lods
or
cltd
popf
pop
or
cwtl
lret
mov
in
push
les
dec
je
mov
adc
fisubs
repnz
adc
mov
add
push
cld
aad
scas
add
imul
push
sbb
jmp
adc
mov
into
testl
push
and
rol
sbb
or
inc
scas
hlt
mov
pushf
stos
call
adc
inc
cmp
cmp
in
xchg
loop
sub
xchg
mov
lcall
add
xchg
lds
scas
xchg
cmpsl
movsb
repnz
out
or
leave
xor
dec
jb
shlb
jg
xchg
insl
and
or
leave
adc
mov
shrb
or
mov
mov
xchg
sub
faddl
out
aad
in
hlt
xchg
insb
adc
hlt
rcr
mov
shrb
sbb
pushf
stc
mov
jg
stc
jb
movsb
aaa
addr16
outsb
jle
int3
aaa
iret
movsb
xchg
cmp
xorl
mov
insl
jmp
enter
mov
js
mov
adc
pop
aam
fwait
add
adc
sbbl
mov
scas
add
lods
sub
push
lcall
lock
scas
lret
sbb
or
add
ja
cmp
insl
adc
lret
and
jl
loop
lea
mov
leave
mov
adc
roll
dec
dec
out
mov
into
iret
push
push
outsb
sahf
stos
xchg
bound
xchg
popa
cmp
cmp
imul
imull
mull
sbb
imul
sbb
xor
mov
ss
loopne
cld
lods
aas
or
fldl
mov
dec
mov
insl
xchg
pop
into
rclb
je
jae
adc
mov
cltd
ret
aaa
cmp
lcall
loopne
cmpsl
pop
gs
stos
rorl
mov
inc
cld
mov
jp
lahf
out
add
rcrl
cmp
add
add
add
shr
mov
dec
mov
in
or
and
xlat
push
xchg
addl
mov
insl
nop/reserved
repnz
enter
sar
jge
pop
js
xchg
add
in
sbb
dec
gs
adc
and
inc
imul
inc
sub
fstpt
mov
xchg
rorb
inc
push
hlt
or
xor
sarb
mov
fdivrl
outsl
push
xchg
or
jg
adc
pop
and
int
dec
fsubs
addr16
ficoml
jb
clc
jne
push
push
test
sarb
xchg
or
dec
or
stos
jmp
cmp
push
inc
mov
jne
test
sub
cmpsl
js
or
clc
xor
or
push
dec
rcr
out
cmpsb
add
xchg
sub
adc
xor
js
pop
mov
jne
insb
push
add
mov
divb
test
xchg
out
nop
int3
or
add
gs
xor
sub
outsl
jg
popf
and
push
jle
inc
movsb
in
imul
int3
popf
cltd
adc
das
shlb
add
push
mov
mov
mov
jo
aam
cli
push
or
lea
aam
mov
or
push
add
jbe
mov
push
push
push
insl
test
rcr
sub
loope
frstor
sbb
loope
out
push
inc
and
clc
loopne
sti
push
cmp
cmp
cltd
add
insl
push
xchg
mov
aad
cld
push
adc
stos
mov
and
push
movsb
stos
jl
fimuls
add
sub
sub
mov
cmp
pop
xlat
mov
dec
outsb
nop
sbb
cmp
lret
pop
call
in
sub
scas
push
aam
test
stc
push
lahf
mov
sub
pushf
adc
cmp
sbb
xlat
mov
cmp
loope
sbb
lods
hlt
rorb
lock
imul
inc
sub
jnp
mov
rcrb
lods
pop
jl
jnp
in
stos
loopne
add
xor
int3
cmp
ret
ret
shlb
push
cwtl
xor
sub
cli
mov
out
adc
into
pop
and
gs
jp
outsb
scas
hlt
in
das
lret
rorb
in
sub
leave
sub
in
mov
mov
push
sub
cmp
inc
sbb
mov
aas
lods
sarb
lret
les
adc
fwait
lea
push
push
adc
cltd
cltd
and
add
mov
stos
mov
mov
xchg
lock
adc
lods
das
outsb
and
add
lods
fidivs
jnp
cmpsb
sub
mov
cld
orb
and
add
push
imul
pop
xlat
or
mov
push
popa
jp
fcompl
or
fldl
in
mov
jecxz
push
rorb
xchg
add
and
dec
xor
sub
aas
sbb
cld
pop
mov
gs
dec
arpl
addl
jo
mov
nop
push
nop
mov
add
inc
je
test
loopne
sysexit
insl
add
daa
pop
cltd
in
cmp
mov
aaa
xchg
mov
adc
mov
fnstsw
jo
xchg
sub
fnstsw
sbb
lock
enter
in
sub
loopne
out
icebp
mov
lcall
in
inc
inc
int3
dec
or
add
test
out
mov
insb
inc
dec
xlat
sbb
push
rcll
or
add
cli
pusha
out
inc
repnz
sub
lods
out
test
adc
push
insb
xchg
sub
mov
push
add
mov
pop
fldenv
adcb
les
sub
jecxz
pushl
mov
inc
clc
lcall
in
in
xlat
dec
mov
mov
iret
hlt
ret
or
testl
in
cmp
inc
rolb
adc
dec
jns
or
push
sahf
pop
sub
rolb
orb
xchg
mov
sbb
xchg
mov
push
aaa
test
or
enter
jno
mov
int3
mov
mov
stos
xlat
pop
mov
or
or
jno
rorb
or
mov
mov
dec
lea
stos
xchg
nop
hlt
fiaddl
pop
add
add
es
sbb
jbe
pop
xchg
movsl
xchg
lods
mov
or
cmp
stc
xchg
pop
lahf
or
ret
cmp
jbe
rcl
lahf
stos
pop
hlt
testb
imul
mov
ret
mov
sub
add
mov
xchg
je
pop
mov
cmp
cli
or
inc
mov
pop
mov
sbb
push
test
outsb
fistpl
lahf
xchg
cmp
idiv
mov
in
sub
jbe
cmp
jecxz
or
mov
out
nop
int3
ret
aad
inc
xchg
xchg
popa
test
add
ret
in
js
adc
mov
addl
adc
and
notl
into
les
rclb
cmp
call
out
mov
jmp
fwait
pop
mov
push
jae
or
rol
in
repz
lock
fstpl
xchg
adc
push
jmp
adc
jmp
inc
jecxz
cmc
jp
pop
scas
sti
movsb
out
stos
inc
insl
mov
pop
fsts
dec
mov
dec
mulb
lcall
decl
add
ficomps
sbb
xor
int
outsl
mov
add
mov
xorb
inc
jg
pop
out
test
sbb
shll
lcall
lods
stos
adc
cmp
aam
add
mov
adc
mov
aaa
testb
adc
scas
xchg
out
inc
jne
dec
frstor
in
lret
adcl
out
cmp
mov
mov
rorb
sub
adc
sub
push
faddl
scas
and
mov
out
pop
lock
push
push
dec
push
cld
int
leave
cmp
adc
mov
mov
loop
repz
outsl
mov
mov
repnz
add
or
push
sub
data16
repz
mov
fisubs
mov
stos
push
add
ljmp
jecxz
sub
in
sbb
lahf
sub
add
sbb
sub
ret
lea
mov
pop
mov
add
repnz
pmaxub
movl
dec
test
add
les
vpor
test
into
xor
jecxz
mov
aaa
or
lret
je
sbb
les
int3
adc
xor
dec
or
or
add
and
inc
xchg
or
xor
cmp
push
jmp
fildll
sbb
lods
and
mov
add
lcall
cmp
into
in
sbb
xor
sub
xchg
jb
mov
pop
sub
sub
ljmp
lret
int
ret
cmp
sub
jmp
popf
jp
loop
outsb
or
or
arpl
add
inc
ficoml
pop
pop
imul
imul
lret
cwtl
lret
adc
call
or
scas
jo
xchg
call
cmpsb
insb
cld
xor
or
or
sahf
mov
insb
sub
add
nop
add
jb
out
jno
xchg
imul
add
push
movsb
mov
outsl
and
les
sarb
iret
test
inc
xorl
or
pop
aaa
shll
fs
and
outsl
notl
outsb
mov
xor
add
les
jge
mov
rcrl
mov
xlat
cmp
lcall
push
nop
mov
roll
mov
in
xchg
in
fcom
xchg
push
cld
pop
aad
cmp
xor
xchg
in
fstps
cmp
sub
cmp
xchg
mov
sub
cmc
adc
clc
lea
xchg
dec
mov
lods
aas
js
xchg
inc
pusha
sti
jbe
lock
jne
sub
repz
sti
pop
iret
mov
mov
inc
or
adcl
sysexit
push
mov
les
repnz
jl
or
or
mov
test
or
jecxz
sti
repnz
ror
ret
mov
add
push
addr16
stos
ds
or
ja
xor
cmp
xor
inc
fidivs
test
mov
xchg
les
sbb
xchg
and
lret
leave
pop
dec
xor
lret
xor
lock
aad
data16
pusha
sub
nop
ret
aad
les
rcr
add
aad
outsl
xchg
ja
pop
iret
fimull
aam
stc
fistps
pop
les
lahf
adc
sti
jae
nop
cmp
push
lea
fldenv
or
enter
xor
lods
fcoml
insb
aam
add
shrb
mov
lahf
sbb
push
jo
add
dec
mov
pop
push
sbb
mov
mov
nop
int
dec
dec
dec
sbb
clc
pop
lret
clc
xor
cmc
loopne
int
nop
les
rcl
dec
mov
and
adcb
fidivrl
xor
mov
adc
cli
clc
clc
rcrb
push
not
xor
sub
subl
and
test
js
test
add
xor
or
xor
sbb
adc
in
test
jp
movsl
cmp
mov
shl
les
int3
and
rcl
mov
addb
lock
inc
xorl
cmp
or
int3
add
lock
int3
nop
sbbl
sub
cmp
insb
mov
lock
iret
sarb
adc
push
out
out
or
xor
or
or
push
mov
add
add
lcall
sbb
sbb
adc
adc
mov
nop
lock
ljmp
stc
dec
xchg
out
adc
sbb
repnz
rcll
nop
test
jecxz
nop
add
repnz
pop
ret
repz
int3
mov
imul
cli
push
enter
adc
out
or
aam
or
aam
mov
fisubrs
jcxz
xor
xchg
or
add
sti
and
mov
push
mov
mov
lds
mov
test
movsb
sub
stc
xchg
mul
mov
lret
cmp
push
sub
scas
addr16
addl
push
fsubrl
stc
fldenv
push
call
pop
out
xchg
fcmovnu
mov
shll
scas
jecxz
cs
add
mov
fstps
sbb
fsin
lock
adc
jae
sub
ficompl
add
pop
aad
cld
mov
pop
or
mov
les
test
dec
sahf
inc
adc
xlat
mov
pop
push
enter
xlat
rorb
pop
icebp
adc
adc
dec
sub
cmp
push
sbb
dec
or
fcoms
icebp
or
and
adc
add
sar
sub
mov
xlat
dec
jle
xchg
xor
les
add
pop
rol
mov
fcoml
mov
push
mov
mov
mov
out
xor
jecxz
mov
js
add
mov
ja
dec
xor
dec
or
andl
shrb
xor
mov
mov
add
sbbl
adc
leave
mov
int3
jns
pop
repnz
int
mov
mov
cltd
int3
jge
inc
repnz
rorb
test
jno
aam
sub
inc
cmp
jl
sub
cmc
pop
mov
cmp
fbld
pop
mov
iret
mov
push
cli
pushf
add
xor
mov
andb
jae
add
push
je
roll
rcll
jge
andl
stc
push
insl
ja
lret
leave
sub
inc
repz
ljmp
dec
push
mov
adc
mov
xchg
in
cmp
cmpsl
cli
sti
loop
jg
stos
leave
incl
aad
dec
pop
iret
ret
add
ret
mov
mov
adc
mov
loope
icebp
inc
jae
fimull
or
test
arpl
adcb
or
cmp
dec
push
adc
sub
push
push
aam
stc
cld
add
popf
daa
xor
aam
sub
xor
cmp
push
or
cmp
aad
xor
sub
in
or
mov
xchg
mov
fldl
xchg
sbb
gs
loop
fistpll
hlt
mov
mov
nop
jg
loop
pop
out
sbb
dec
mov
xchg
lds
stos
jge
fadd
push
adc
aad
add
fldenv
lds
adcb
popa
in
paddb
sbb
xor
add
into
or
loop
mov
hlt
sbb
shlb
les
sub
push
fcoml
data16
mov
or
in
fdivr
into
jge
add
rcrl
les
aad
or
mov
inc
or
fmuls
sbb
add
push
ja
pusha
scas
das
ret
adc
out
xchg
push
or
add
mull
les
js
iret
je
cld
push
cld
or
xchg
rorb
dec
mov
inc
imul
ret
ljmp
add
mov
rcrb
dec
mov
push
or
mov
lods
sbb
out
ljmp
out
xor
in
stos
xor
push
add
add
roll
add
dec
mov
jecxz
sbb
jo
mov
adc
pop
push
sub
sub
and
insl
out
cmp
or
adcl
push
adc
loop
setle
sub
loope
int
add
xor
mov
inc
lods
pop
xchg
push
fstl
rol
xchg
inc
leave
add
lods
in
fnstsw
sahf
decl
loop
or
mov
clc
inc
xchg
stos
lahf
and
cs
ret
mov
call
jp
outsl
adc
frstor
sbb
add
xor
and
icebp
loopne
sub
out
sub
insl
aaa
je
and
xor
mov
push
xor
gs
inc
stos
push
mov
dec
push
jae
int
int
xchg
aad
xchg
loop
mov
mov
mov
cld
mov
mov
mov
sbb
callw
stc
mov
pop
xchg
and
and
aaa
inc
pusha
cmp
notl
or
jae
mov
lock
adc
pop
rol
lret
repnz
movsl
xchg
mov
lahf
push
xchg
fs
loope
mov
adc
sub
adc
rol
int3
les
lahf
dec
jbe
sbb
out
dec
leave
xchg
clc
cmp
push
sbb
hlt
sar
insb
test
mov
pop
hlt
sahf
add
cli
push
sub
sbb
jmp
sahf
mov
mov
sub
loop
leave
xchg
pop
sub
inc
popf
adc
mov
lods
shrl
sbb
mov
xchg
push
xor
out
cmp
cltd
adc
rcl
icebp
sbb
add
adc
cld
hlt
out
lods
lods
push
adc
inc
push
mov
and
fs
mov
pop
xchg
shll
jl
jmp
test
sbb
divb
lcall
mov
leave
pusha
cmp
sub
shl
adc
stos
mov
xchg
xor
mov
sub
add
sub
test
flds
insb
add
mov
xchg
out
push
inc
xor
adc
fs
mov
lret
stos
mov
inc
adc
test
fsubrl
cmpb
inc
add
shr
int3
fimull
cmp
dec
mov
aad
xchg
in
xchg
and
jmp
xchg
mov
or
push
clc
jno
pop
test
sbb
scas
in
sbb
sbb
repnz
call
and
adc
pushf
sbb
mov
cwtl
ss
aad
lcallw
sarb
xor
push
inc
test
jg
ret
scas
mov
pop
xchg
arpl
lahf
fadds
jb
les
or
lcall
adc
call
in
mov
subb
adc
jle
aad
call
sub
pop
cmc
inc
sbb
andl
mov
mov
mov
das
repz
sbb
adc
in
xor
mov
xor
or
mov
fwait
push
jp
adc
xchg
mov
mov
sbbb
push
pop
jg
cli
ja
out
and
sar
aas
xor
add
add
fidivrl
push
mov
sbb
jge
in
imulb
subb
mov
popf
mov
add
inc
mov
cld
stos
adc
or
fcmovnb
xlat
pop
les
les
pushf
add
mov
dec
sub
jo
outsl
pop
ss
xchg
pop
rorb
test
ret
fdivrl
mov
jno
adc
push
mov
adc
ret
ret
cmp
in
enter
adc
sub
xchg
lea
mov
mov
or
dec
int3
insl
out
movsb
push
test
out
and
cmp
mov
adc
pop
pusha
xchg
mov
icebp
cmp
ljmp
jecxz
shlb
add
int3
or
stos
mov
cld
lret
into
add
outsl
cltd
call
xchg
dec
ret
xchg
or
cmp
mov
jns
xor
shlb
loopne
adc
into
or
mov
ret
les
into
ret
add
or
test
inc
shlb
or
push
or
clc
enter
xchg
lret
pop
mov
addr16
inc
rolb
push
mov
jo
into
adc
in
dec
jp
pop
sbb
test
stos
and
lods
xor
xor
mov
xchg
arpl
sub
or
inc
mov
push
leave
jns
lods
xchg
sub
inc
mov
push
in
dec
and
aad
jo
push
sbb
fwait
mov
sarb
mov
lods
mov
repz
or
inc
std
cwtl
hlt
or
xorl
fs
or
ret
leave
add
mov
mov
std
pop
adc
popf
insb
adc
lea
jne
movsl
mov
cs
mov
popf
loopne
add
mov
mov
push
dec
es
cld
cmpsl
xor
loop
ret
mov
rolb
in
into
aas
out
int3
pop
adc
mov
paddusb
xchg
into
faddp
fnstcw
pop
sbbb
ret
mov
sub
test
fbstp
imul
cmpsb
cmp
inc
xchg
call
mov
sarb
ret
sbb
ret
mov
pop
filds
lret
or
outsb
sbb
repnz
fisubl
ret
xor
and
mov
sahf
and
mov
aad
or
jbe
ret
push
ds
int3
push
lods
stc
hlt
ret
std
adc
les
lds
jbe
imul
sahf
ret
clc
or
or
and
or
or
mov
nop
xchg
aad
repnz
scas
adc
or
test
or
sahf
inc
loope
daa
mov
jae
movsb
mov
out
in
cmp
xchg
mov
popf
into
inc
xchg
dec
in
lds
mov
sub
dec
push
aam
mov
int3
loope
cmp
xchg
outsl
push
mov
idiv
iret
cli
mov
mov
je
testl
adc
add
and
mov
movsb
adc
imul
dec
mov
inc
push
xchg
add
decl
add
sub
sbb
add
ret
test
iret
nop
and
sub
jo
inc
fcmovbe
stc
dec
shrl
add
sti
mov
fstps
push
mov
lds
sbb
dec
jmp
mov
je
pusha
sbb
cmpsb
inc
sti
and
js
in
insb
xor
pop
xchg
shl
mov
stos
mov
jb
mov
daa
push
xor
lcall
xor
imul
xchg
jmp
fcompl
adc
repnz
mov
jbe
inc
out
les
dec
xlat
cld
push
mov
hlt
xor
bnd
ljmp
or
push
pop
andl
cli
insb
sbb
mov
jno
iret
adc
push
inc
mov
mov
pop
jmp
dec
lahf
repz
dec
icebp
sbb
push
ljmp
lock
adc
and
add
in
into
fcoml
arpl
scas
movsb
rclb
lea
mov
out
stos
sarb
mov
dec
movsl
pop
or
xchg
cmp
mov
out
push
subb
sbb
sub
insb
adc
cmp
cmp
push
cmc
adc
sub
stos
shlb
mov
adc
addl
int3
sub
add
gs
aaa
add
or
movsb
gs
dec
cli
call
sahf
rorl
pushf
cld
jmp
xor
adc
xor
loopne
fs
inc
in
popf
xchg
movsb
rcrl
pop
dec
dec
add
mov
mov
adc
clc
adc
sarl
xorl
mov
jbe
mov
xchg
imul
enter
sbb
popa
or
sbb
lods
sbb
adc
adc
rolb
xchg
in
fucom
sbbb
jo
loopne
shlb
stos
mov
and
icebp
inc
in
sbb
sbb
fwait
pop
in
sbb
cmp
inc
ds
out
mov
jl
sub
adc
sub
sar
lret
arpl
fidivrs
mov
mov
push
lea
ja
repz
call
scas
jne
push
aam
add
dec
in
ret
sub
jns
push
jp
jnp
lcall
stc
inc
push
lock
nop
gs
sahf
xchg
ljmp
xchg
add
fistps
mov
test
add
mov
mov
lahf
lock
movsb
rcrb
lods
xlat
adc
mov
pop
mov
dec
aad
pusha
lahf
movsl
mov
std
add
jmp
xchg
dec
cmc
sub
in
stos
jnp
push
mov
add
les
sub
dec
imul
mov
test
ret
in
fsubl
cld
mov
dec
testl
fnsave
test
jg
lds
imul
add
rcll
or
lahf
jmp
fstl
mov
repnz
mov
inc
in
dec
nop
mov
cmp
sbb
cmp
mulb
sbb
lahf
sbb
int3
cwtl
in
xor
ret
call
sub
sahf
in
add
adc
out
push
pushf
ret
ret
addl
icebp
inc
adc
add
adc
lock
xlat
mov
icebp
adc
xchg
int3
cltd
ja
dec
cwtl
adc
add
aam
int3
xor
out
push
mov
xchg
dec
les
nop
push
cmp
pop
or
mov
andl
scas
rdrand
fsubl
inc
js
mov
pop
fisttpll
adc
int3
out
xor
jp
xchg
adc
sub
adc
test
sub
int3
xor
sbb
adc
jae
ds
out
xor
sbb
les
mov
sbb
lock
mov
aas
mov
int
or
movsl
insl
mov
dec
inc
fadds
jecxz
add
push
sbb
dec
push
cmovo
mov
push
push
iret
mov
xchg
std
popl
data16
sub
or
xchg
dec
fmuls
ljmp
stos
adc
ret
mov
or
or
adc
adc
in
ret
out
out
jmp
pop
mov
loopne
xchg
xorb
out
jne
push
sarl
mov
mov
iret
ret
test
lods
dec
leave
dec
and
xor
ret
mov
loope
hlt
or
sbb
outsb
fdivp
push
mov
aad
aad
add
jg
repz
and
push
ret
imul
pop
or
mov
xchg
faddp
das
sbb
inc
lcall
push
lret
shll
fstl
push
jmp
adc
dec
test
mov
add
test
stc
iret
and
mov
repz
mov
lret
or
dec
cltd
rcr
cld
or
jmp
jbe
jae
sbb
sub
decb
dec
mov
adc
mov
nop
add
rclb
daa
dec
mov
stos
mov
xor
ja
xchg
mov
bound
shr
sub
pop
inc
jg
test
fistps
popa
loop
lea
and
clc
jo
in
mov
sbb
lods
es
mov
ret
shrl
and
jno
sbb
xchg
mov
rclb
jmp
ret
out
mov
push
inc
fwait
adc
rol
repz
clc
shrb
ret
jle
xlat
negb
shr
aad
sbb
sahf
outsb
fistpl
xchg
ret
add
pop
adcb
into
adc
sub
add
fs
bound
out
ret
adc
les
push
lahf
mov
lods
adc
fs
xchg
dec
sub
insb
mov
out
inc
lahf
add
jne
sub
jge
mov
inc
shrl
je
scas
pop
test
cwtl
dec
lahf
jae
xchg
lret
or
lcall
jg
mov
or
push
push
ljmp
lds
adc
adc
lret
fwait
mov
out
cmpsb
loopne
cmp
xorl
inc
mov
movb
mov
jo
sub
rcr
adc
pop
test
clc
push
mov
mov
lods
les
add
push
or
mov
cmp
or
and
dec
orb
adc
mov
cmc
dec
mov
cmc
dec
mov
out
xlat
mov
jmp
mov
or
scas
and
nop
xchg
shll
xor
mov
push
sub
ja
cmp
and
and
fiadds
insb
xor
mov
divl
sub
adc
ds
jno
out
int3
jg,pt
jge
inc
dec
fldcw
xchg
sbb
loop
jbe
movsb
js
mov
sarb
mov
je
adc
push
mov
ret
or
sub
and
sbb
push
adc
pop
lds
aas
mov
mov
in
add
stc
dec
mov
int3
xchg
and
lret
lods
cmp
jbe
jns
add
lock
sbb
add
out
push
xor
cld
pop
jecxz
mov
inc
shrb
dec
and
and
sub
stc
jecxz
ret
test
in
adc
xchg
add
sub
xchg
loope
loop
add
add
lock
cmpsl
or
mov
add
mov
hlt
es
and
xchg
and
stc
jo
out
pusha
nop
push
sbb
push
test
jmp
or
mov
push
push
add
subb
sub
loop
xor
xchg
in
rcrl
push
jne
push
orb
mov
xchg
lock
mov
cmove
push
mov
add
sbb
ret
mov
or
xchg
and
sub
sti
lahf
inc
fidivs
dec
pop
into
mov
int3
jmp
mov
clc
or
insb
sbb
pop
mov
adc
push
mov
or
insb
or
mov
and
sub
iret
js
jl
ffreep
pop
mov
test
rclb
mov
out
in
enter
insb
outsb
mov
hlt
or
sub
sub
mov
pop
pop
mov
test
orl
iret
mov
mov
jnp
cmp
add
insl
push
or
mov
push
rolb
adc
jo
popf
lock
lds
pop
jbe
and
or
jae
inc
or
push
lock
adc
notb
inc
xor
adc
mov
lret
jl
in
cmp
mov
test
jecxz
dec
or
insb
pop
out
pop
pop
addr16
rcll
popf
add
ja
out
in
dec
mov
add
in
sbb
vphaddbw
mov
push
shlb
pop
testb
xor
out
sahf
fcmovne
mov
sbb
sub
jnp
jbe
xor
xchg
jg
add
push
mov
or
mov
out
adc
fcmovne
push
mov
lret
and
popf
fstp
outsl
rclb
adc
sbb
outsl
pop
pop
sub
adc
inc
sub
stc
sub
lret
push
jecxz
cwtl
in
enter
sbb
mov
loop
xchg
pushf
out
shll
sahf
int
test
iret
fnstsw
and
out
cmp
and
scas
or
into
and
add
xor
iret
lds
fs
jecxz
or
aas
or
add
sbb
sbb
out
lds
sub
push
loopne
pop
pop
rcll
fists
add
test
or
repnz
sub
hlt
imul
jp
pop
orl
fldt
pop
xorb
add
jle
outsb
push
xchg
outsl
fstpt
xor
mov
stc
lret
xor
and
mov
lock
or
dec
pop
ds
ret
push
je
mov
lods
je
sbb
dec
and
fimull
mov
scas
adc
sub
int3
setl
ljmp
test
aad
aad
aam
pop
outsb
push
cmp
cwtl
mov
pop
sub
sarb
pusha
pop
push
cmp
rcll
dec
sub
xchg
mov
in
loopne
int
jne
cmp
out
sub
jae
lods
daa
into
vmovsd
sub
push
int3
js
inc
sbb
push
ljmp
xchg
shlb
rol
sub
add
repnz
iret
or
out
pop
sahf
pop
nop
adc
fcomi
sbb
adc
lock
and
in
push
mov
add
insl
pop
mov
scas
psrld
cmpsl
icebp
pusha
add
xchg
lret
or
pop
sub
popf
mov
dec
js
shrl
sub
dec
pop
rclb
pop
dec
ljmp
iret
stos
and
ljmp
enter
rorb
orb
inc
pushf
pop
mov
scas
pop
shlb
popa
cmp
sub
sbb
loop
jae
inc
rcr
ret
das
or
jg
loopne
add
loope
adc
jg
jmp
add
sbb
stos
sbb
push
rcrb
xchg
fcmovnb
shl
push
mov
movsb
sbb
lahf
adc
lea
add
pop
fcom
push
out
aad
sbb
mov
rcrb
sti
or
sub
add
add
push
xor
and
sub
lods
and
ficoml
jno
pop
mov
int3
dec
shlb
or
icebp
fnsave
icebp
test
mov
sub
fdiv
rolb
test
rcrb
repz
lods
dec
rcl
cmc
lret
add
and
add
adc
mov
inc
add
int
xchg
or
fwait
outsl
add
or
popf
test
jecxz
pop
aam
mov
in
adc
icebp
pushw
sarb
in
sub
add
mov
or
jmp
iret
and
jns
aam
sbb
xlat
pusha
adc
rcrb
pop
mov
xlat
enter
int3
popa
cwtl
lods
ss
adc
xchg
mov
inc
std
adc
push
das
adc
icebp
hlt
and
addr16
rol
cmc
adc
fucomp
xor
jno
mov
sub
or
push
icebp
or
mov
xchg
cmp
inc
clc
out
cld
cmp
mov
fs
cmc
jg
shll
pop
sbb
or
loope
mov
push
arpl
sub
lock
xchg
fstl
push
fldl
stc
test
sub
push
adc
in
xchg
enter
stc
cmp
or
movb
test
addr16
sbb
inc
out
add
inc
and
pop
nop
dec
fnsave
and
sbbl
ja
cltd
pop
ljmp
mov
dec
into
xchg
mov
rcrb
sub
scas
fnstsw
push
je
int
adc
in
pop
aam
into
call
out
lds
or
loopne
inc
adc
sbb
aad
mov
push
or
add
jg
push
ret
subl
in
loope
out
call
enter
jle
cli
in
and
lods
mov
repnz
repz
cmp
jae
bound
and
fisubs
push
sbb
mov
xor
repnz
sub
xor
mov
push
fisubs
push
sub
or
adc
or
mov
loop
sbb
mov
js
mov
bound
cmp
sti
push
clc
jnp
mov
fistpl
cli
shll
aaa
clc
je
inc
dec
fidivrl
ja
sub
insl
fldcw
les
inc
cmp
mov
or
mov
stc
sub
or
push
sbb
adc
xor
or
mov
sub
aas
pop
xchg
lret
lahf
lcall
cwtl
inc
adc
sbb
dec
cmp
adc
jns
sarb
mov
std
cmp
jge
and
jbe
hlt
loope
aad
in
scas
or
cmp
stc
dec
mov
test
sti
add
mov
xchg
push
add
ja
clc
ret
and
xchg
inc
into
fidivs
andl
pop
inc
loope
mov
dec
hlt
mov
xchg
inc
aaa
stos
sub
sbb
pop
and
dec
sub
ss
jae
lahf
adc
cmp
loopne
mov
push
jne
nop
enter
out
inc
psrlw
fidivs
daa
lcall
push
shll
outsb
mov
dec
aad
and
leave
add
sub
or
xor
dec
or
loopne
sub
sub
stos
xlat
je
lahf
or
pushl
push
pop
stos
out
jo
ret
outsb
xor
and
xchg
por
and
or
add
sub
shll
cltd
nop
arpl
xchg
int3
or
imulb
xchg
or
int3
xor
push
stc
xor
lahf
imul
jns
cmp
sub
xor
idiv
into
pop
and
mov
inc
adc
test
aas
sbb
inc
ret
lret
jmp
push
add
fsubr
stos
sbb
hlt
or
les
fists
subl
cltd
lret
rorl
lds
adc
popf
xor
cmp
lds
out
aad
mov
and
out
aad
jle
xchg
test
adc
call
dec
fstpl
jae
clc
sub
pusha
cmpsb
xchg
jo
mov
jbe
ud2
lahf
loopne
nop
into
jl
cmp
xor
mov
xorb
cmc
mov
xor
dec
add
outsl
sub
insb
adc
imul
add
shlb
mov
ret
add
or
adc
into
ret
hlt
into
lds
rorb
rorb
rorb
pop
add
les
sub
les
cs
repnz
inc
adc
mov
repnz
push
les
lds
fnstsw
dec
jp
adc
andl
hlt
mov
jl
or
sbb
into
je
test
addr16
dec
test
sarl
add
sub
mov
out
pop
push
add
scas
xor
adc
mov
jp
push
fmull
mov
xor
dec
jp
mov
call
shrb
cmc
sbb
adc
sub
int
adc
push
push
or
ds
adc
pop
shl
fs
sbbb
mov
push
hlt
ret
inc
mov
jg
mov
call
xor
popf
std
or
dec
lods
sbb
int3
or
mov
mov
xchg
sbb
push
dec
ffree
sub
in
mov
mov
stos
sub
cmpl
fwait
sbb
jb
push
mov
cmp
add
sahf
test
push
xchg
push
cmp
out
add
les
lods
movsl
test
mov
imul
sar
mov
adc
mov
aam
xor
cwtl
dec
add
fdivl
bound
dec
sbb
jl
daa
dec
lcall
pushf
xchg
mov
and
ret
into
sbb
lret
xor
mov
fs
inc
sub
mov
ret
add
mov
inc
inc
lds
inc
test
stc
leave
and
iret
std
sub
mov
adc
negb
call
jae
or
add
sub
or
jo
pop
sub
push
stos
dec
push
aas
or
jnp
in
add
stos
jecxz
aaa
jae
or
xchg
roll
mov
pop
sub
std
sbb
sub
mov
les
mov
cmc
imul
ss
daa
jno
push
sbb
repz
movsb
adc
or
xlat
out
jecxz
dec
sbbl
aad
sbb
add
push
push
add
in
and
inc
leave
test
test
adc
xchg
nop
mov
or
stos
repz
in
cmp
rclb
daa
aam
push
fsubrl
jge
cmc
mov
mov
ljmp
and
cmpsb
mov
sti
lods
adc
fnstenv
mov
jecxz
add
cli
jo
mov
fisubrl
xor
nop
push
out
mov
jle
add
xchg
jecxz
popa
mov
push
movsl
xchg
sub
test
in
xor
ret
or
xor
and
cmpsl
inc
nop
rolb
rorl
mov
and
in
sbb
rorb
cmp
daa
leave
and
sbb
cmp
imul
into
aad
or
sub
lret
or
dec
adc
in
xchg
sbb
jmp
popa
imul
imul
push
cmovbe
mov
sbb
cmp
les
adc
popf
lds
lahf
gs
popf
and
or
aaa
repnz
sbb
ret
ss
mov
or
lret
push
jb
rcrb
mov
jle
popf
test
loopne
sub
out
or
stc
in
lahf
scas
cli
sub
shll
mov
arpl
in
nop
push
xor
mov
scas
test
scas
ljmp
movsl
inc
mov
mov
sbb
ss
or
lret
mov
sub
jns
sti
cmp
mov
lcall
cmp
outsl
repz
or
adc
ss
mov
cmpsb
or
sbb
push
push
sbb
andl
pop
inc
call
dec
stc
mov
cli
mov
mov
loop
inc
push
nop
out
es
and
add
mov
icebp
mov
add
gs
or
cmp
xchg
mov
movsb
jmp
frstor
pop
mov
hlt
dec
push
stos
xor
add
add
cmp
or
lcall
jns
test
inc
popa
push
sti
inc
enter
jp
into
jge
ret
inc
or
mov
cld
pop
sbb
add
jns
scas
xor
and
sti
repz
leave
mov
sub
cmp
insb
cmp
cwtl
lret
or
and
clc
int
ds
push
hlt
movsl
mov
in
push
movsl
arpl
cmp
sub
icebp
add
test
or
out
add
lcall
outsl
psubsb
roll
push
sub
or
les
nop
fwait
mov
sub
shrb
push
and
mov
pusha
pop
nop
fisttpll
sarb
pushf
mov
mov
xor
cmp
lret
adc
enter
clc
ss
or
nop
dec
or
pusha
sti
out
adc
xor
sub
and
push
repnz
mov
sub
push
lods
or
ret
fidivl
and
pop
pop
sbb
out
lahf
push
stc
jg
stos
jne
loopne
sbb
pop
hlt
mov
jo
movl
or
les
mov
cmp
xchg
in
mov
sbb
frstor
popf
add
lahf
or
push
inc
ficomps
pop
push
das
fmulp
iret
andb
lds
push
xchg
xchg
or
stc
push
fsubrs
or
mov
fadds
xchg
repnz
inc
adc
ret
fcomps
incl
test
mov
fcoml
add
cmp
sbbl
adc
fcomps
pop
inc
lds
sub
xchg
or
jne
enter
in
cld
psubb
or
inc
or
jb
in
jnp
in
stos
push
dec
cmp
xor
jns
mov
sbb
adc
lock
repnz
or
repnz
test
lods
cwtl
or
jbe
jbe
pslld
xor
add
fcoml
or
pusha
in
jl
sbb
ret
in
xchg
push
add
push
unpcklps
cmc
repnz
sar
inc
mov
or
ret
jo
push
iret
lods
test
add
add
sbb
cli
fsts
jl
xchg
and
int
notb
leave
add
jns
jge
pop
cmp
jno
repnz
inc
adc
sub
stos
stos
pop
insb
repz
adc
std
call
icebp
mov
pop
inc
rcll
dec
sarl
shr
mov
pop
jmp
add
add
lds
sbb
shrl
adc
scas
push
fimuls
or
in
call
call
mov
loopne
clc
mov
cld
or
repnz
mov
out
loop
stos
in
sbb
push
push
test
lock
aas
push
sub
sbb
push
inc
sbb
xor
ljmp
add
fadds
cltd
pop
jo
pushf
mov
and
or
nop
int
adc
subl
push
or
pusha
xor
ret
sti
xchg
add
lods
sbb
pop
aas
lret
jle
and
lock
inc
and
inc
ljmp
cli
mov
dec
adc
inc
jg
sbb
inc
mov
add
int3
sbb
and
add
sbb
dec
sbb
and
jecxz
mov
dec
or
xor
push
scas
enter
sbb
cmp
add
adc
hlt
pop
add
push
lock
adc
jo
movsb
dec
gs
add
movsl
rorb
add
mov
jle
roll
mov
aas
mov
sub
and
int
pop
sub
adc
cli
cmp
lock
add
lock
ret
add
or
nop
rcl
loopne
rol
cld
nop
ror
clc
nop
shl
out
pop
outsb
push
add
movsb
mov
sub
fsubrl
sti
leave
fldt
iret
sti
int3
hlt
add
out
mov
lock
sbb
imul
lds
or
sahf
add
sti
xchg
fimull
pop
addl
mov
xchg
sbb
fadds
push
fidivrl
sbb
pusha
jg
ljmp
js
dec
or
das
xchg
mov
adc
mov
popf
and
inc
cld
jmp
dec
rolb
dec
mov
mov
and
icebp
test
inc
mov
fwait
xchg
subl
add
loope
push
pop
enter
xchg
pop
push
mov
push
add
popf
leave
out
aad
fucom
lods
sub
add
and
hlt
push
jnp
mov
int3
inc
cmp
aam
push
pushf
add
mov
or
test
sub
add
js
inc
call
adc
pop
cmp
dec
subps
mov
add
sub
and
dec
in
les
sub
cmp
xor
aas
xchg
int3
jo
rolb
nop
cmp
add
cmpsl
inc
decl
mov
dec
jns
inc
test
push
cmpb
jl
push
outsb
call
lods
dec
cmp
loopne
adc
adc
test
fnstcw
and
cmc
or
fcoml
pop
sbbb
dec
aaa
jmp
ds
das
pop
mov
jno
push
ret
mov
push
sbb
incl
call
add
fwait
jecxz
or
mov
fcmovnu
out
sub
lret
mov
repnz
jge
add
imul
adc
fchs
push
test
dec
ja
popa
cmpsl
cld
in
movsl
call
xchg
adc
icebp
push
les
dec
push
jl
push
push
enter
notb
xchg
lea
pop
or
pop
add
fisubrl
pop
aaa
outsl
test
lret
add
das
adc
stc
push
push
ljmp
or
push
xchg
sub
test
inc
cmp
xor
shlb
lock
inc
cmp
call
mov
pop
sbb
jb
add
jmp
add
ret
jns
push
aam
adc
in
daa
cld
sub
mov
jo
repnz
aam
sub
sub
or
add
call
jb
mov
clc
je
jg
ret
test
adc
jb
inc
sbb
test
push
adc
in
fcmovnu
add
pop
and
push
scas
aam
add
cmp
pop
adc
adcb
and
mov
adc
in
xor
ds
xor
dec
jae
adc
push
and
les
or
cmp
jne
shl
into
in
pop
fadds
mov
outsb
pop
and
aad
xor
roll
push
aad
jae
or
xchg
lea
clc
ret
pop
add
test
int3
dec
mov
sbb
jle
imul
ret
sbb
xor
mov
ljmp
out
cld
insl
rolb
cmp
and
fnsave
add
icebp
stos
adc
adc
jno
or
movsb
mov
inc
jp
or
jae
adc
push
cmpsb
sbb
repnz
ja
sub
nop
dec
jmp
mov
or
or
cltd
test
clc
in
aaa
pop
mov
out
lods
mov
out
ljmp
pop
cs
std
clc
xchg
sub
mov
or
sub
call
mov
les
dec
mul
imul
or
pushf
adc
filds
inc
lret
push
ret
add
leave
pusha
lahf
or
dec
fs
add
xor
or
jae
hlt
jo
adc
mov
in
int3
xlat
add
test
pop
adc
pushf
add
enter
repnz
mov
fsubrs
inc
ret
jp
fldl
outsl
inc
repnz
or
lds
bound
leave
mov
mov
lahf
pop
and
rol
sti
cmp
sub
push
sbb
fs
jmp
pop
mov
add
in
fimull
add
lahf
and
int3
iret
or
loope
sbb
jno
dec
ret
les
ljmp
je
inc
stc
dec
out
xchg
sti
pop
mov
fstl
dec
lahf
pop
jne
mov
xchg
call
sbb
clc
xor
mov
lahf
and
lods
into
nop
xchg
push
cmp
pop
or
or
cmp
pop
cmpsb
mov
in
clc
enter
clc
dec
adc
mov
adc
sahf
dec
hlt
dec
mov
int
inc
mov
push
lds
test
addr16
xor
jns
dec
mov
adc
das
sub
scas
mov
repz
add
and
xchg
stos
js
and
pushf
es
faddl
daa
adc
ret
push
pop
pop
mov
sbb
insb
in
leave
rolb
hlt
xchg
outsl
scas
adc
adc
cld
mov
mov
add
pusha
xchg
fistpl
popa
push
in
add
push
adc
adc
gs
inc
mov
or
add
loop
dec
in
push
cwtl
je
adc
inc
jmp
cmp
jo
mov
fstp
lret
and
add
pop
push
aad
lods
in
fnstcw
pushf
pop
sub
scas
daa
dec
shrl
fistpll
xchg
gs
into
xchg
sub
sub
fs
std
in
push
shll
out
fstl
sahf
cmp
jne
mov
addb
adc
or
ja
iret
gs
ja
lock
fisttpl
mov
popf
repz
push
in
push
jbe
ret
aam
sub
add
aas
insb
and
xor
lret
scas
sbbl
add
mov
xchg
test
adc
xorb
xchg
adc
cli
ss
xchg
or
sbb
jge
push
push
pushl
jp
jl
je
int
xor
add
mov
nop
cmc
cmp
inc
or
adc
dec
lods
btr
add
cmp
jb
pop
insb
add
aaa
or
add
inc
adc
sub
push
push
sahf
sub
jle
mov
sti
dec
inc
outsl
stos
addr16
jae
inc
xor
repnz
xchg
push
sub
orb
and
les
push
sahf
cmp
pop
sbb
lahf
icebp
xlat
dec
cmp
loopne
dec
enter
in
jle
ret
loopne
pop
dec
movsl
addr16
xchg
lods
rorb
jmp
fstpl
add
ret
mov
shr
push
in
sbb
xchg
rcr
hlt
in
xchg
xchg
lret
scas
sbb
adc
or
inc
sub
pop
pushf
dec
or
adc
dec
imul
mov
or
lret
mov
sbb
sahf
or
add
fs
mov
push
test
mov
pop
sarb
add
pop
bound
or
cmp
or
shlb
push
sub
inc
or
or
or
mov
aam
repz
cmp
mov
adcb
sbb
aaa
xor
and
and
repnz
in
adc
in
cmp
or
and
add
cmp
or
mov
rolb
cmc
adc
add
les
insb
lcall
in
stos
or
add
lock
int3
lds
mov
mov
and
sti
shl
rcrb
pop
sub
xchg
or
faddl
pop
sbb
pushf
ret
pop
jbe,pt
imul
fs
xchg
sarb
nop
push
adc
mov
add
pop
repnz
push
repnz
adc
repnz
adc
call
sub
pop
adc
movups
lret
daa
imul
fldcw
dec
icebp
dec
jmp
stc
rorl
fxch
mov
and
int3
cli
inc
out
repnz
dec
jl
adc
rclb
repnz
adc
int3
ret
mov
aad
lret
or
jae
inc
repnz
iret
sub
int3
mov
leave
or
or
xor
dec
int
cmpl
stc
lock
add
ret
sbb
dec
cld
sbb
pop
les
jp
inc
pushf
rorb
or
and
insl
add
xchg
pop
dec
mov
out
sar
add
push
push
and
in
aaa
imul
mov
dec
add
push
lds
xor
jnp
std
mov
clc
xlat
pop
iret
sub
ja
mov
test
into
lds
cmpsb
addr16
les
dec
gs
in
jo
push
add
jbe
push
fcmovnu
mov
fisttps
mov
aas
push
stc
push
out
es
aas
cltd
ja
and
out
icebp
mov
hlt
lret
inc
add
fcomps
je
fldenv
orl
push
pushf
test
mov
adc
cmp
jmp
xchg
xor
add
xchg
pop
mov
imul
cmp
roll
or
fldcw
mov
xor
and
add
clc
cmp
sub
jbe
xchg
lret
pop
lds
jb
dec
cld
sahf
dec
ljmp
push
sbb
cmc
mov
push
mov
stc
icebp
pushf
xor
enter
ja
je
ljmp
mov
rclb
leave
or
mov
jg
and
push
or
and
lahf
and
out
mov
sbb
popw
jp
scas
mov
sub
dec
stos
pop
cmp
repnz
or
mov
and
js
mov
aad
hlt
push
frstor
mov
mov
pop
or
add
dec
cmpsb
aad
test
les
or
sbb
fcompl
sbb
mov
sub
test
mov
shrd
shrb
sub
int
or
add
mov
fdivl
lods
sub
jbe
fimull
push
or
mov
sub
pop
adc
pop
jp
xor
pop
movsl
hlt
mov
xlat
add
push
mov
xor
aas
xor
aam
lods
in
jge
inc
fcoml
cmc
pop
adc
je
mov
mov
out
dec
pop
or
aad
test
lret
xchg
lods
in
pop
add
mov
rclb
insl
adc
dec
mov
adc
or
cwtl
mov
cmp
adc
sarb
adc
pop
divl
mov
jmp
mov
cmp
fcompl
jb
fsub
dec
xchg
cmp
adc
xor
mov
dec
jecxz
push
rcrl
ss
add
into
ret
adc
xor
repnz
aad
sub
sub
cmc
inc
bound
and
sub
and
jle
stos
pop
push
xor
pop
sbb
sar
in
lods
jo
loope
or
pop
fbstp
int
aaa
les
mov
fisubl
or
add
popa
jo
or
sar
pusha
and
push
jle
or
adc
dec
les
dec
ljmp
out
out
inc
aaa
xchg
movsb
rorb
or
inc
loope
or
xor
push
sub
movsl
std
std
out
cmp
xorl
push
mov
in
std
cmpsb
mov
lea
or
push
popa
inc
jg
push
sti
push
in
xchg
pop
fiaddl
mov
jge
test
sub
sti
sarl
jbe
cmp
in
dec
movsb
fcmovbe
sti
mov
mov
je
loope
pushf
fs
push
inc
ss
pop
out
cltd
es
or
xchg
pop
jp
mov
xlat
dec
sub
or
mov
sub
mov
std
int
sbb
inc
fcoml
and
mov
mov
dec
add
dec
loopne
mov
dec
dec
rcrl
jmp
aas
aas
dec
aas
add
dec
stc
cmp
cmp
dec
mov
test
rcrb
mov
cmp
jg
jb
pusha
addb
jne
sub
repz
test
insb
and
cmp
dec
movsb
jnp
shrl
pop
sbb
lret
xlat
sbb
das
daa
adc
in
pop
fcomi
mov
sbbb
roll
mov
js
add
std
sbb
xchg
pop
lcallw
test
clc
cmp
hlt
jle
in
inc
dec
xchg
dec
aad
hlt
jnp
out
xchg
popf
sub
hlt
popa
scas
mov
outsl
cmp
lock
xchg
andb
popf
cli
or
arpl
pop
inc
sbb
and
dec
mov
or
xchg
sahf
adc
jns
lret
repnz
mov
dec
cmpsb
or
mov
xchg
sidtl
or
adc
shr
adc
in
or
mov
loopne
repz
mov
cmp
or
mov
mov
pop
add
or
mov
aam
mov
test
lods
sbb
or
enter
test
lock
xor
int3
iret
jp
push
test
add
sbb
cmp
mov
mov
add
jecxz
cmp
cmpsb
jle
pushl
sub
mov
pop
arpl
outsl
xchg
fiaddl
and
fistl
loope
insb
mov
inc
arpl
mov
push
xchg
adc
xor
loopne
add
test
cmp
int
push
push
aas
call
stos
inc
adc
icebp
ja
push
push
cs
add
inc
and
inc
adc
xor
in
int3
jno
scas
lahf
jbe
adc
lock
rclb
les
xor
adc
ret
bnd
cmp
int
dec
add
rorb
repnz
shll
mov
popl
movsb
mov
add
ret
mov
lea
mov
repz
sub
popf
pop
clc
mov
push
pop
test
out
sti
rclb
mov
or
data16
stc
aaa
add
push
rorb
aas
dec
adc
aaa
lahf
and
cwtl
pop
rol
out
imul
jg
or
rolb
iret
or
mov
sub
inc
jmp
test
mov
dec
adc
lods
in
ret
dec
or
sbb
dec
not
push
ds
rcll
push
mov
mov
fcomps
adc
jbe
mov
xorl
or
jmp
xor
mov
sub
dec
es
add
push
cmp
aam
sub
mov
and
jnp
mov
sbb
xchg
cmp
adc
xor
hlt
mov
mov
nopl
add
adc
dec
mov
mov
icebp
cmp
shl
sub
jne
push
scas
and
test
pop
push
add
push
inc
sub
push
fsubrp
nop
cmp
jno
mov
out
sbb
jbe
and
clc
les
fmuls
in
loopne
jp
and
je
cmpsb
dec
pushf
sarl
in
jo
arpl
xchg
mov
dec
mov
sub
sub
mov
jmp
fstp
je
pop
mov
mov
jg
dec
cs
lods
test
push
adc
dec
scas
les
inc
sbb
sbb
mov
lods
les
outsl
push
jb
test
adc
inc
rorb
mov
ret
out
xlat
aam
push
push
imul
js
hlt
shlb
addr16
mov
nopl
iret
dec
hlt
adc
and
daa
fs
jp
ret
icebp
adc
sub
sbb
mov
or
aas
test
push
inc
mov
mov
dec
mov
inc
ss
movsb
sbb
or
and
inc
sbb
pop
mov
mov
or
ljmp
adc
fldl
nop
ss
dec
or
rorb
mov
adc
mov
fwait
mov
push
int3
add
push
adc
insb
loope
jp
inc
add
loope
stos
push
add
mov
je
ljmp
repnz
sbb
sbb
mov
out
mov
adc
out
and
cwtl
jo
sub
repnz
or
es
icebp
mov
adc
adc
add
mov
enter
add
dec
sbb
cmp
movsb
sbb
sub
aam
push
mov
inc
adc
mov
insb
loope
add
mov
rorb
shrb
dec
scas
sarb
push
mov
mov
sbb
jl
icebp
add
xchg
adc
add
cmp
add
add
inc
stos
pop
or
add
add
and
daa
icebp
pop
add
lret
add
inc
in
and
clc
adc
js
mov
add
imul
or
cwtl
add
orb
add
mov
nop
int3
add
nop
add
mov
scas
test
iret
nop
add
fadds
or
les
icebp
adc
dec
add
rorb
ret
adc
adc
sahf
mov
push
icebp
test
inc
adc
int3
divl
mov
ja
lea
loop
add
jae
adc
jecxz
or
into
pop
ljmp
dec
adc
sbb
lds
test
into
jl
fldl
add
mov
xchg
add
iret
sbbb
mov
add
pop
adc
adc
cmp
iret
mov
add
pusha
mov
add
fmuls
mov
les
stos
pusha
adc
jecxz
or
clc
sbb
hlt
xchg
loopne
sub
call
mov
mov
adc
and
adc
cmp
add
add
repnz
add
out
adc
cs
scas
bnd
addl
push
arpl
and
fimuls
sbb
mov
rclb
test
dec
adc
inc
add
bound
or
adc
adc
mov
repz
jecxz
or
aam
add
or
into
les
adc
or
mov
add
iret
call
loop
das
xchg
pop
add
out
addb
icebp
sbb
scas
inc
mov
adc
push
stos
psrad
bnd
gs
mov
andl
mov
push
mov
add
lcall
inc
dec
adc
adc
adc
sbb
movsb
icebp
mov
or
pop
jecxz
or
into
fdiv
lret
add
cld
push
push
addr16
aaa
pop
ret
addl
test
in
adc
scas
iret
or
adc
and
add
sbb
hlt
push
mov
inc
sbb
nop
cld
gs
rol
adc
adc
orl
inc
sbb
jnp
dec
adc
adc
cmc
or
push
xchg
dec
adc
add
push
cld
js
je
mov
sti
or
orb
mov
adc
jo
syscall
and
aam
mov
pop
adc
jecxz
or
fmuls
xor
or
int3
add
nop
test
sub
jo
shlb
stos
fiaddl
hlt
mov
loopne
test
int3
add
nop
add
sbb
mov
sbb
cmpl
jne
adc
loopne
int
repnz
add
and
ret
adc
adc
push
popa
or
adc
add
lcall
das
aad
or
imul
shrb
mov
ja
or
mov
test
rorb
or
mov
nop
rolb
icebp
aam
fisttpll
add
or
adc
add
mov
rolb
bnd
nop
into
sbb
add
and
movsb
dec
push
rcrb
repnz
add
sbb
icebp
inc
add
dec
mov
add
repnz
sbb
cwtl
mov
stos
adc
add
mov
sar
repnz
add
or
adc
add
mov
rorb
add
shlb
stos
mov
add
sahf
leave
ss
sub
jbe
ja
lahf
lret
push
leave
lods
push
in
sub
insb
pop
mov
pop
rolb
xor
xchg
clc
sbb
jo
hlt
or
xor
enter
fwait
jle
add
jne
loope
xor
cli
call
cmp
popa
adc
add
fs
cld
sbb
jp
popf
enter
movsl
cs
adc
test
mov
and
ja
cld
lds
jmp
pop
add
mov
xor
clc
rcr
sub
sub
mov
insl
push
jne
ffree
les
cmpsb
pop
cmp
popa
repnz
outsb
sbb
xchg
jbe
adc
sbb
sbb
cmc
call
pusha
xor
cmovae
lea
mov
or
jecxz
js
stc
popa
icebp
leave
add
mov
popf
inc
movaps
cmpsb
icebp
pop
test
in
sti
mov
jl
xchg
sbb
dec
add
xor
sbb
xchg
jns
incl
jno
icebp
adc
imul
imul
lahf
and
add
xchg
inc
sub
pop
lret
mov
rcr
ret
mov
dec
pop
push
test
sub
and
cmc
sbb
add
cmp
call
lds
rcr
mov
roll
dec
or
inc
dec
push
adc
movsl
xor
lock
jecxz
jns
sbb
mov
push
ja
mov
xchg
mov
call
sbb
pop
test
inc
mov
icebp
mov
int3
ds
cmp
subl
or
mov
jecxz
sbb
sub
ds
jb
mov
lret
mov
int3
test
or
or
sbbb
or
enter
adc
jne
test
in
mov
shl
xor
fsubr
mov
lds
mov
orl
xor
pop
mov
jge
in
xchg
xchg
stc
dec
iret
pop
or
mov
or
xchg
mov
mov
pop
mov
inc
add
cmp
jnp
pop
dec
mov
pusha
clc
in
decl
mov
ss
xchg
mov
repnz
inc
stos
movsb
jnp
daa
gs
push
in
add
in
bound
lcall
add
mov
lret
scas
sbb
push
push
aaa
mov
aas
or
and
nop
jne
push
mov
int3
js
movb
imul
imulb
xlat
or
lods
hlt
stc
pop
lock
in
loopne
adc
shlb
inc
clc
call
push
in
test
or
ret
in
sub
add
cwtl
adc
cld
aaa
xor
mov
lods
adc
xchg
das
add
mov
xor
dec
bsf
dec
mov
andb
ret
fldl
call
rorl
jmp
adc
lahf
jo
les
inc
xchg
fisttpll
push
aas
int3
lods
sahf
bound
pop
pop
aas
lret
dec
mov
repnz
cmc
add
adc
fs
stos
in
repz
push
in
mov
jo
mov
inc
rolb
xor
out
xchg
jns
lea
xchg
in
xor
add
arpl
xor
ds
int
aam
nop
dec
in
popl
outsb
mov
sbb
mov
pop
sbb
icebp
xchg
push
xchg
cmovge
lahf
das
jecxz
mov
jmp
pop
movsb
sarb
repnz
ds
mov
dec
fcoml
xchg
lcall
xor
lock
data16
mov
ja
in
loopne
jns
cld
or
out
mov
sar
rorb
sbb
sbb
or
adc
xchg
mov
mov
jp
cmp
pop
jb
aad
bound
xchg
xor
mov
xchg
push
fisttpll
call
test
mov
cwtl
rcll
mov
cld
xor
loope
sub
jl
mov
mov
in
pop
dec
lds
lock
pop
dec
add
nop
dec
pop
dec
mov
dec
pop
dec
jl
inc
mov
inc
adc
in
fisubrl
stos
mov
addb
or
mov
out
cltd
in
dec
mov
inc
sub
fisubl
dec
xor
sbb
pop
sbb
imul
rol
add
int3
add
push
mov
in
fs
shrl
add
and
mov
fsubrs
lods
pop
jbe
mov
fsts
movsl
adc
inc
leave
lret
clc
addl
cmc
hlt
in
pop
and
jle
xor
ret
cmp
adc
xchg
lods
les
jmp
test
scas
mov
rcrb
dec
inc
jmp
cli
imul
jmp
in
cmp
adc
mov
sbb
push
and
cmp
add
leave
in
lods
lock
cld
ss
int3
nop
loopne
rol
dec
jl
loope
in
adc
jne
xor
je
inc
xor
adc
jne
or
aam
cltd
mov
add
fcompl
mov
jo
xchg
insl
mov
mov
mov
mov
add
rorb
pushf
stc
clc
rol
pushf
inc
iret
xor
test
lret
xchg
or
syscall
bound
jp
or
adc
xchg
push
push
xor
adc
lock
in
sbb
sub
pop
push
loope
mov
jno
rorb
dec
mov
js
popf
push
hlt
fcompl
cmp
lcall
inc
adc
bound
adc
inc
mov
adc
mov
les
repz
xlat
jne
xchg
testl
or
aad
arpl
xchg
fdiv
repz
leave
stos
iret
out
rsqrtps
ss
push
arpl
jmp
mov
add
xor
pop
pop
clc
add
cli
jo
int3
sbb
mov
and
faddp
add
popf
enter
bound
and
xor
adc
lea
fcoms
xlat
push
xchg
mov
inc
shl
sub
mov
pop
loope
jl
mov
sti
lea
cwtl
jmp
into
mov
cmp
int
mov
ja
pop
sbb
lcall
dec
nop
ret
loope
sarb
dec
mov
arpl
pop
test
sbb
inc
lea
xchg
addb
in
xchg
jo
push
sbb
ret
adc
in
mov
xlat
int
sbb
test
pushf
nop
mov
xor
insb
test
pop
mov
inc
xor
in
jmp
cmp
xchg
fisubl
xchg
cmpb
cmp
fdivs
or
inc
sti
mov
mov
or
int
rorb
dec
cmp
in
add
cmpsb
fwait
imul
nop
xor
xchg
in
mov
cld
jge
ret
test
ret
or
cmp
ret
aaa
adc
ret
ss
add
andl
cmp
enter
mov
ss
mov
push
add
lods
jmp
js
mov
sar
fcoml
call
lds
add
inc
aad
adc
outsl
sbb
mov
jl
and
aam
sub
add
js
js
push
movsl
sub
in
and
add
pushl
jno
or
addr16
push
push
lahf
cld
lds
mov
xchg
inc
es
pop
loopne
lea
pushf
out
dec
inc
sub
sbb
xchg
push
add
fildll
jbe
mov
out
inc
pop
cmp
cmp
stc
lcall
pusha
insl
shr
add
in
into
adc
or
pop
ffree
aam
addl
into
mov
and
insl
xchg
push
stos
jae
xlat
in
sub
loop
xor
addl
adc
mov
je
out
mov
dec
int3
lret
sbb
jo
xchg
mov
pop
mov
loopne
ds
insb
testb
jnp
bswap
add
das
cmpb
or
adc
xchg
cmp
das
stos
jb
mov
xor
ficoms
xor
test
stos
iretw
sbb
push
jmp
mov
in
adc
sub
dec
dec
sub
pmuludq
sub
xor
ss
rcl
sub
stos
lods
sahf
in
idivl
ds
hlt
outsb
stc
es
add
jmp
popl
icebp
stos
mov
imul
mov
leave
pusha
mov
sub
aaa
sbb
hlt
icebp
mov
add
push
adc
push
push
stos
push
xor
iret
roll
xchg
int3
sub
pop
dec
std
test
pop
std
jp
mov
cli
push
adc
mov
mov
sub
arpl
dec
popf
sar
jns
jle
rol
bound
push
loope
out
aam
ret
shl
jg
inc
aad
ret
cmp
sub
push
test
adcb
les
mov
clc
ljmp
aam
das
loop
pop
int3
inc
xor
jmp
jnp
mov
mov
add
mov
or
add
mov
shll
faddl
shlb
sub
mov
mov
push
in
rcrl
out
mov
scas
inc
sbb
xchg
push
mov
xchg
jmp
dec
xchg
sahf
clc
call
dec
faddl
jp
lods
jo
xor
inc
and
mov
jge
roll
aas
fs
rorb
or
call
push
jnp
xor
repnz
pop
fld
leavew
bound
loop
aad
xchg
mov
ds
add
mov
rclb
sub
sahf
sbb
push
popl
shlb
call
sub
sub
and
mov
mov
mov
xor
loopne
ret
push
sub
mov
outsb
and
in
imul
mov
bound
jne
in
lds
test
outsl
add
xor
push
mov
insl
adc
call
sbb
adc
dec
lahf
ds
icebp
iret
mov
aas
rcrb
in
ljmp
subb
gs
into
shr
dec
cmp
adc
cwtl
insb
repnz
shr
cmc
adc
and
sub
cmp
mov
es
pop
lods
mov
jmp
adc
xchg
sub
bound
fnsave
rcr
popa
popf
adc
mov
dec
add
mov
cmp
xor
mov
dec
and
inc
addr16
mov
sti
cmp
sub
popf
loop,pt
adc
cmp
fcompl
dec
push
rclb
mov
pop
sub
popa
push
or
mov
leave
dec
xchg
push
or
cmp
add
test
mov
inc
push
or
mov
fimuls
mov
cmc
les
lcall
jns
sahf
sahf
pop
mov
mov
movsb
jl
inc
fmulp
jge
cmc
lds
fiadds
jb
arpl
call
enter
pop
out
pop
xor
clc
mov
andb
hlt
inc
jmp
aad
popl
jmp
push
call
rcll
add
inc
hlt
call
mov
icebp
stc
dec
mov
mov
sti
xchg
pop
lret
push
nop
mov
lods
sub
jbe
lock
dec
insl
sbb
adc
ret
repnz
fs
lods
push
dec
ret
sub
add
xorb
sub
shll
cmp
jg
sar
mov
dec
mov
aad
sub
jbe
push
xchg
mov
lret
mov
push
fldl
cmp
pop
add
fadd
fsubrl
pusha
in
and
jecxz
or
out
cmpsb
adc
and
mov
mov
ja
lock
cmp
leave
xlat
pushf
jg
jmp
jmp
inc
sti
pop
rolb
ret
dec
jbe
cmpsl
and
test
mov
mov
xchg
shl
fs
and
dec
loop
lret
dec
cmpsl
pop
test
add
cmpsb
addr16
leave
iret
mov
mov
push
jno
adc
xchg
les
lea
xor
jecxz
mov
inc
daa
inc
xor
test
lds
inc
fldl
jp
adc
orl
mov
rcll
cli
mov
sub
cmp
mov
and
out
lods
pop
mov
les
jo
mov
aad
in
rcrb
call
lcall
nop
dec
in
cld
test
andb
into
dec
and
adc
lods
dec
shlb
adc
jae
mov
pop
and
dec
mov
outsl
mov
dec
lret
adc
fdivl
in
add
xchg
lds
lods
cmp
out
call
xchg
mov
aas
push
mov
scas
or
mov
mov
mov
or
add
fs
mov
jp
int3
hlt
adcb
in
les
call
lret
and
in
pusha
lcall
fdivs
divl
pop
cmp
sub
lcall
popf
mov
push
je
call
add
add
ret
push
lahf
jns
aaa
push
push
xchg
pop
mov
add
loope
xchg
and
ss
inc
popf
or
push
add
adc
mov
mov
ds
loopne
add
lret
mov
mov
loop
fucom
out
adc
sub
mov
lret
fwait
lds
je
outsb
insl
popf
ljmp
mov
add
jp
dec
repnz
ljmp
pop
cmp
cmp
jmp
inc
int
push
mov
fisttpll
das
decb
movsb
sub
cmp
cmp
or
dec
jb
inc
jo
add
sbb
lods
sub
lcall
dec
cmp
icebp
shl
or
enter
inc
or
add
test
mov
fs
and
dec
sub
nop
shl
adc
mov
dec
addb
add
xor
adc
sub
mov
inc
xorl
adc
enter
loope
mov
mov
and
fmuls
mov
adc
mov
xor
and
pop
das
outsl
dec
push
cwtl
or
dec
jl,pn
xor
push
xor
js
dec
pusha
adc
xor
xchg
imul
xor
fcmovu
mov
push
add
into
andl
mov
sbb
dec
add
jno
orb
dec
sub
cmpsb
fsubl
pop
inc
negl
jnp
leave
pop
mov
aam
stos
aad
adc
jl
jo
rcrb
jb
call
pushf
mov
adc
sub
cmpb
mov
mov
xchg
adc
dec
and
mov
imul
inc
cwtl
fwait
inc
imul
out
nop
mov
mov
xor
push
push
outsl
mov
repnz
or
das
out
xchg
jg
lcall
push
dec
mov
sbbb
adc
xchg
dec
push
jo
mov
repnz
push
dec
mov
dec
gs
dec
cmp
in
dec
jns
add
addl
pop
adc
popf
sahf
js
adc
leave
fs
in
mov
js
scas
mov
pushl
jge
out
adc
lret
jecxz
lahf
and
cmp
bnd
test
loopne
mov
jo
shlb
adc
adc
aas
fcoml
push
mov
aaa
ret
js
rcrb
jnp
fmuls
scas
dec
lret
jno
mov
addb
mov
ret
mov
inc
jnp
push
jmp
push
sub
and
aam
fwait
je
in
loope
into
pop
dec
mov
or
scas
push
arpl
leave
movsb
insl
rcrb
loopne
or
pop
inc
cmpsb
mov
mov
or
or
imul
addl
imul
mov
popf
xor
test
mov
and
mov
cmpsb
sub
sbb
popf
ss
push
mov
inc
dec
aad
xchg
out
xchg
loop
aas
je
movsb
cmp
push
xchg
jge
ret
mov
xor
dec
inc
fs
loopne
inc
pushf
inc
jle
sub
push
scas
daa
nop
add
fisttpll
jne
cs
ljmp
adc
and
pop
loope
xor
push
xchg
mov
sub
inc
sub
jl
cs
shlb
or
sub
xchg
mov
aam
dec
cltd
mov
jl
enter
mov
hlt
les
dec
das
cld
push
and
repz
dec
pop
cmp
xchg
and
lds
leave
pop
outsl
outsl
push
jmp
and
bound
jmp
movsb
xchg
fmull
sub
mov
jmp
mov
in
dec
cld
sub
inc
dec
xor
xor
repnz
sahf
jns
sub
fcmovne
lods
mov
in
mov
loop
mov
sti
imul
or
xor
sbb
jmp
or
adc
repnz
nop
mov
sahf
push
int
push
popa
mov
mov
mov
dec
dec
jbe
rclb
imul
scas
js
ret
sti
pop
cli
aas
out
pop
jae
rcl
inc
inc
pop
sbb
push
inc
aam
ss
jmp
mov
pop
adc
xor
in
add
clc
test
inc
push
out
subb
mov
into
adc
pop
and
cmpsb
out
ds
cltd
lock
dec
stc
rcll
and
sub
mov
sub
pop
js
cmpsb
or
fwait
push
in
add
scas
in
xchg
add
call
stc
sub
sahf
lds
lahf
out
inc
dec
das
adc
fsubr
inc
mov
into
call
sbb
in
sti
mov
mov
pop
stc
cmp
lds
pop
iret
sub
or
mov
lock
out
sub
adc
add
cmpsb
pop
and
xchg
fiaddl
dec
cmp
inc
ret
jge
test
pop
faddp
add
inc
fs
mov
outsl
enter
jbe
shll
xchg
loop
adcl
cmpsb
repz
jo
inc
jecxz
dec
mov
test
mov
mov
jge
jg
sarb
mov
add
adc
cmp
fwait
cwtl
dec
ss
sti
add
ja
cmp
and
inc
jg
xchg
dec
push
or
pop
in
mov
call
xlat
into
lock
orb
lds
dec
out
enter
push
out
cmp
mov
cmp
insl
mov
inc
jg
pushf
lret
call
jb
adc
inc
int3
fmulp
arpl
sub
fistps
insl
mov
mov
ret
or
push
cmp
mov
push
lods
je
pop
or
lock
sbb
xchg
aaa
int3
push
sahf
pop
cltd
sbb
jmp
mov
mov
dec
stc
jno
rcrb
repz
int3
fdivp
dec
inc
nop
xchg
dec
sarb
jmp
out
xchg
test
filds
loopne
faddp
adc
pushf
iret
js
mov
repz
test
filds
fmul
inc
ficoms
fidivrl
jns
inc
sub
mov
outsl
in
adc
hlt
sbbl
xchg
xor
movl
test
pop
inc
scas
fnstcw
sbb
xchg
sbb
lret
and
loopne
das
shr
fisubrl
push
mov
out
or
add
insb
xchg
in
sbb
test
pusha
insl
push
je
xchg
stc
inc
mov
pop
or
add
mov
sbb
in
pop
jno
mov
xor
lahf
ds
ja
dec
mov
xchg
mov
mov
das
and
push
rolb
dec
mov
add
adc
sbb
adc
jne
dec
jno
rcl
in
or
push
push
lahf
sub
cmp
inc
cld
add
aam
dec
leave
sbb
jne
xor
fidivs
aaa
mov
mov
hlt
cmp
mov
loope
fdivrl
pop
or
loope
enter
xchg
out
aas
popa
call
test
int
in
push
in
add
and
cmpsb
sub
sbb
cmpsl
sub
iret
stos
mov
cltd
stos
add
xchg
sti
jl
add
shlb
stos
lret
jns
rcrl
mov
mov
call
add
ret
or
jb
mov
mov
fiadds
sub
mov
stc
loopne
dec
push
xchg
mov
test
fidivs
cmp
mov
jg
pop
xacquire
pop
dec
jecxz
fwait
and
inc
jae
fisttps
jbe
and
mov
lahf
sbb
mov
rcrl
out
pcmpeqw
out
sub
push
leave
fisttpl
addl
pop
or
mov
mov
arpl
jmp
rcl
add
clc
or
lods
cmp
mov
xchg
movsl
dec
pause
mov
dec
push
sbb
xor
adc
adc
sbb
stos
loope
mov
hlt
sub
jne
rorb
mov
aam
inc
or
testb
rorb
pop
nop
sub
adc
lock
add
inc
ret
add
pop
mov
push
mov
es
mov
fsubr
sub
jo
or
in
jl
mov
sub
jmp
roll
bnd
mov
in
lret
lret
xadd
mov
rorl
ds
adc
add
mov
iret
ret
adc
and
xchg
dec
fsubl
es
outsb
jl
ret
sub
outsl
dec
rcrl
shlb
mov
ret
jo
je
rorl
xchg
cmp
dec
xlat
dec
mov
add
mov
lret
xor
push
das
aaa
ljmp
ss
push
dec
stc
mov
adc
fdivs
add
pop
cmp
mov
daa
xchg
pop
imul
push
call
cmc
sbb
mov
lods
mov
jo
cmp
mov
pop
insb
xlat
xchg
dec
push
rorb
sub
cmpb
xlat
mov
lcall
mov
xlat
shl
ret
cmp
pop
rep
pop
mov
cld
xchg
les
fs
movsb
cwtl
mov
int3
or
push
adc
cli
mov
adcl
adc
pop
loope
movsb
dec
cmp
inc
mov
and
cmp
add
cmp
lock
and
push
dec
pop
pusha
sub
stos
stc
iret
xchg
sub
mov
sbb
scas
mov
mov
js
imul
rcrl
in
mov
add
loope
insb
fadds
push
inc
mov
ds
js
int
jnp
push
inc
xlat
aaa
and
sbb
adc
aad
mov
pop
mov
add
adc
xchg
adc
jae
sub
add
adc
add
out
mov
or
enter
pop
out
mov
or
rcl
sub
subb
and
xchg
xchg
mov
pop
arpl
add
push
sub
clc
testb
add
mov
call
push
jo
dec
mov
lds
int3
shlb
add
adc
fldl
mov
xchg
mov
xchg
dec
xchg
xchg
jecxz,pn
iret
ss
call
js
int3
jl
stc
call
pop
xchg
lahf
notb
adc
test
or
lret
adc
push
stc
dec
shll
cmp
push
repnz
pop
les
jno
dec
mov
xlat
into
jp
push
aam
cmp
lock
das
nop
adc
mov
repnz
pop
jbe
adc
xchg
adc
outsb
mov
mov
stos
fisubrs
xchg
adc
fnsave
fistps
mov
sbb
jmp
xchg
dec
movl
mov
sub
gs
xchg
inc
xchg
jbe
loope
mov
dec
sub
lds
cmc
lock
or
jbe
dec
rcrb
nop
mov
sahf
adc
cmpsb
sub
and
jg
pop
pop
fidivs
fisubl
cmp
xchg
adc
xchg
add
bswap
push
into
push
mov
xchg
or
xchg
je
ss
mov
out
sub
loop
dec
enter
dec
dec
popf
push
sbb
cltd
push
and
push
sbb
mov
mov
aam
fnsave
les
mov
add
in
xchg
inc
or
rcll
or
or
sub
stc
inc
stos
nop
insl
sub
jo
inc
or
sbb
xchg
cmp
or
push
adc
add
mov
lcall
es
aam
mov
in
nop
test
pop
mov
pop
int3
xchg
je
sbb
sub
std
or
shll
mov
outsb
add
inc
in
mov
fcompp
xchg
pop
jo
add
aad
inc
xorl
into
xchg
rolb
cwtl
mov
in
adc
mov
fimull
leave
repnz
add
ret
nop
ljmp
jecxz
cwtl
sbb
test
mov
adc
mov
add
jp
jmp
xchg
bound
or
mov
and
lcall
sub
mov
lds
xchg
add
pop
or
sbb
das
pop
cld
or
in
or
in
add
mov
adc
shr
mov
lods
push
orb
mov
mov
mov
popf
cmpl
fidivs
mov
jo
xlat
and
div
xchg
loopne
incl
sarb
xor
call
test
sbb
mov
sub
rcl
push
add
loop
negl
adc
pusha
in
cltd
inc
jo
into
and
xor
push
cmp
rclb
out
dec
sti
push
push
cmp
inc
or
stc
push
push
xchg
fadd
enter
mov
ffree
mov
cld
jle
lds
and
call
test
xor
cwtl
insb
pop
mov
fstpt
push
nop
dec
fildll
mov
paddusw
lods
insb
mov
jb
fcmovne
clc
push
mov
sbb
mov
mov
cmp
mov
mov
xchg
test
xor
ret
sub
mov
push
out
push
hlt
and
pusha
ret
dec
sub
sar
cmc
pop
or
or
mov
xchg
movsl
andb
orb
int3
cmp
push
into
sbb
jae
and
addb
shlb
je
rol
mov
loopne
jmp
adc
cmc
cmpsb
adcb
aaa
fcompp
sbb
adc
or
mov
cmpb
lret
ret
fsubrp
xchg
scas
dec
insb
lds
insl
test
dec
xor
clc
test
mov
xlat
call
sbb
push
xchg
in
jae
mov
es
or
push
leave
adc
cmp
push
inc
push
adc
adc
pop
into
test
mov
pop
adc
sbb
jg
mov
dec
rorb
and
pusha
inc
mov
fisttps
jecxz
inc
xchg
adc
jmp
imul
out
and
lret
mov
arpl
ja
fsub
iret
daa
addl
stos
dec
cmpsl
cmp
out
divl
xchg
jge
add
adc
iret
jno
mov
addl
or
or
into
fmuls
pop
in
mov
shrl
dec
cmpsl
imul
stc
cmp
mov
push
call
inc
xor
sbb
jns
jne
nop
mov
adc
out
rolb
mov
sbb
filds
sbb
sti
repnz
mov
cli
lods
mov
and
or
into
cmc
out
or
add
xorb
imul
ficomps
les
sub
xchg
cwtl
adc
roll
nop
xchg
adc
mov
imul
mov
push
xchg
or
adc
fldenv
jae
sbb
std
cmp
cmp
out
xchg
mov
or
cli
xchg
mov
lods
daa
fdivs
pop
xor
repnz
repnz
lcall
sub
push
sbb
dec
cld
push
or
cmpsl
jbe
and
lahf
stos
sbb
hlt
test
mov
enter
les
les
adc
sub
mov
roll
fstpt
sub
push
shrb
cmpsb
dec
fdivs
sbb
mov
and
sbb
jnp
jecxz
lock
in
loop
push
sbb
mov
hlt
repz
push
adc
test
bound
rcl
enter
jecxz
cld
sub
scas
xor
or
gs
divl
ret
sbb
rolb
lods
shl
mov
jmp
mov
data16
and
mov
outsb
test
adc
int3
cltd
cld
dec
mov
inc
mov
sub
pop
push
dec
call
xchg
sarb
dec
jg
add
and
adc
jmp
mov
jmp
ret
je
add
sbb
testl
add
or
mov
scas
adc
lock
loope
call
scas
loopne
pop
ret
push
push
imul
add
shlb
rcrl
bnd
int
icebp
cmp
and
and
enter
scas
adc
stc
rcrb
adc
inc
repnz
or
or
lods
int3
add
movsb
int3
sbb
mov
in
imul
loopne
iret
aam
or
int3
lods
out
mov
insl
sbb
xor
int3
les
lahf
out
mov
jae
jbe
js
mov
cmp
jmp
xchg
xor
xor
cwtl
pop
int
or
int
xor
mov
lods
or
mov
adcb
xor
nop
mov
mov
dec
call
xchg
xor
pop
sub
mov
hlt
loopne
push
jecxz
lahf
or
adc
add
jmp
jae
stos
mov
out
mov
testb
and
scas
pop
shrb
mov
sahf
dec
loop
mov
test
add
sub
lods
std
xchg
mov
jl
sbb
repz
clc
fsubp
in
jns
xor
adc
mov
int3
clc
nop
mov
loope
mov
in
mov
adcb
xchg
sub
scas
or
in
popl
fs
mov
add
lds
int3
pop
sub
les
out
xchg
mov
es
es
jae
pop
data16
sub
mov
gs
sbb
mov
mov
fwait
lahf
fisubl
add
js
sahf
daa
lods
pop
add
les
clc
fnstsw
mov
mov
lods
xchg
jl
outsb
mov
test
dec
mov
ret
aam
rorb
sbb
imul
sbb
add
lahf
in
andb
mov
inc
sbb
adc
nop
adc
xor
nop
sub
adc
add
cwtl
ret
mov
sbb
cmp
insb
add
inc
lods
xor
cmp
iret
bound
into
jb
int
adc
xchg
cld
rclb
rcr
mov
mov
xor
sbb
in
add
jb
add
fildl
lock
andl
sbb
add
test
sub
pop
adc
mov
mov
test
push
sbb
dec
or
je
shll
mov
rcrb
sbb
mov
cwtl
fcoms
in
sub
inc
xchg
or
mov
popa
outsl
cmp
out
cmp
enter
add
insl
xor
dec
push
push
push
dec
jne
fisubrs
dec
rep
xor
sub
int3
push
push
mov
fdivrs
dec
sbb
lcall
inc
xchg
lods
pop
shrb
inc
mov
mov
inc
inc
inc
push
push
and
clc
cs
ficoml
psraw
in
rolb
in
shrl
add
cmp
js
in
int
sub
add
mov
lods
out
inc
and
ret
xchg
jl
cmp
test
fsts
xchg
dec
jmp
daa
xor
stos
adc
push
or
mov
ret
int3
mov
add
cmp
fcmovnb
jmp
in
and
pop
fs
cwtl
popf
es
iret
sub
or
cmp
mov
sbb
lret
pop
fsubrs
inc
shlb
loope
add
dec
pop
mov
fs
iret
lods
aam
adc
shrb
pop
clc
gs
mov
ret
aas
jns
dec
aaa
iret
and
filds
and
imul
test
aad
je
nop
ja
cmpsl
sub
adc
dec
ljmp
or
or
mov
mov
sahf
xchg
xor
pop
xchg
cmp
mov
imul
add
test
cld
lods
sub
out
ja
adc
adc
add
ljmp
cld
dec
adc
fstp
push
outsb
mov
out
rclb
mov
fnstcw
lret
sbb
aaa
dec
mov
xor
sub
mov
adc
jmp
push
sub
push
add
xor
cmpsl
jmp
test
xor
pop
repz
push
loope
stos
or
out
mov
mov
nop
or
test
add
xchg
xchg
loop
lcall
dec
push
adcb
sub
lahf
lcall
loope
mov
mov
lods
dec
cwtl
mov
clc
stc
pop
push
aad
stos
adc
mov
into
xchg
cmp
addb
cli
inc
mov
fs
ret
les
jmp
push
pop
cmc
popa
fidivrs
cli
add
lock
mov
add
loop
loopne
out
xchg
xor
xlat
ficoml
add
inc
mov
out
mov
repnz
cmp
aas
mov
imul
push
mov
mov
enter
out
and
fistl
jmp
push
pop
jbe
and
arpl
jb
cltd
ljmp
scas
cmc
jne
sbb
sub
aam
xchg
iret
sbb
inc
cwtl
insb
adc
jno
add
dec
pop
clc
jecxz
outsb
mov
filds
xchg
sbb
loope
add
mov
and
or
push
sbb
sbb
ja
call
icebp
out
cld
xor
int3
mov
jae
xchg
mov
pop
sub
mov
repnz
mov
test
stos
in
nop
out
fmull
bound
outsl
sbb
fs
fwait
push
adc
add
iret
cwtl
in
sub
fadds
inc
aas
sbbb
dec
push
inc
out
mov
mov
mov
sbb
mov
fcoml
lea
push
sub
mov
out
shlb
addr16
inc
stos
out
push
cmc
cs
adc
sbb
adc
add
mov
mov
shlb
loop
lods
cld
sub
jmp
sti
jmp
mov
xchg
addr16
push
pushf
fcomi
fidivrs
cmpsl
shlb
loopne
scas
dec
mov
ljmp
ret
sub
movsl
call
adc
xchg
xlat
popf
clc
mov
scas
ficoml
imul
mov
in
sbb
pusha
mov
pop
sbb
int3
sub
rorl
cld
fcmovu
mov
nopl
insl
fadd
repnz
add
pop
movsb
cmpl
in
add
ret
sub
loope
dec
inc
jle
dec
decb
jns
in
dec
fs
inc
adc
jle
rclb
cwtl
push
and
loopne
mov
and
push
test
insl
push
jbe
inc
hlt
pop
push
xchg
jle
jmp
dec
jne
test
inc
jmp
out
repnz
dec
add
xor
pop
lods
adc
fcoml
mov
adc
fstpl
ret
gs
shr
negl
sarb
adc
mov
repnz
sbb
mov
cld
rorl
scas
int
shll
mov
mov
jmp
dec
xchg
movsb
cmp
xchg
movsb
adc
push
push
adc
test
cmpsl
lea
loop
sbb
imul
push
mov
test
push
pop
adc
les
cltd
adc
enter
sbb
fs
or
movsl
sbb
aad
loope
les
mov
ja
dec
fcmovb
movntq
cmpsl
inc
push
cli
add
xor
sbb
out
test
xor
cmpsl
cmp
xor
rcr
nop
sub
mov
cmpsb
aad
xchg
lods
clc
lss
cld
mov
cld
dec
pop
pushl
movsl
ret
shlb
mov
sub
mov
out
sub
stos
mov
cmpsl
mov
and
fcomps
add
xchg
jnp
jmp
mov
scas
in
cltd
rorb
cltd
mov
mov
ds
sub
stos
mov
shlb
jmp
test
adc
out
loop
ret
dec
mov
jg
push
dec
rclb
add
enter
jp
or
or
lods
sbb
inc
jb
add
mov
clc
cmpsl
int3
mov
shl
nop
rcr
mov
int
call
add
or
js
or
adc
xchg
adcb
lock
add
movl
jae
sub
lods
ljmp
rclb
gs
test
sub
or
fbstp
imul
jae
fldt
icebp
sub
bound
loop
xlat
stos
popf
mov
test
icebp
jg
inc
jno
pop
int
outsl
or
or
or
or
inc
sbb
loope
test
jmp
dec
cmpsb
out
inc
leave
lahf
ficomps
or
cli
repnz
js
das
test
mov
ffreep
mov
jp
xchg
mov
mov
mov
xchg
and
mov
and
out
roll
out
daa
test
xchg
pop
stos
or
test
adc
sbb
mov
push
mov
aas
or
fsubrl
mov
mull
mov
fstps
jb
cmpb
in
clc
cmp
fsubs
fs
stc
clc
in
sbb
shrb
xchg
add
fcmovbe
int3
and
test
rcll
pop
jne
repz
fsubr
in
loope
stos
jg
jb
movsb
or
sbb
cld
or
test
xchg
jmp
mov
add
or
leave
ret
popf
fisttpl
add
xchg
adc
imulb
mov
dec
mov
lret
pop
mov
adc
fwait
xchg
aaa
lods
rolb
dec
lcall
xchg
repnz
mov
bound
bnd
push
fmuls
dec
sbb
mov
adc
xchg
sub
cli
iret
icebp
push
popf
adc
inc
test
dec
and
aad
pop
int
dec
xchg
jmp
stos
fstl
pop
inc
mulb
test
push
sarl
nop
xchg
jo
enter
mov
addr16
jnp
push
lods
ret
mov
adc
mov
loopne
or
xor
adc
push
out
mov
imul
cmc
push
shr
incl
gs
xchg
pushf
fcoms
nop
ss
cmp
insl
dec
mov
xor
in
xchg
shlb
mov
jo
stos
mov
jne
ret
aad
mov
jecxz
iret
mov
leave
movb
clc
sub
stos
or
lret
mov
xor
ret
sti
enter
in
loop
cmp
das
dec
popl
lods
push
adc
xor
and
jg
push
pop
or
and
and
cmp
cmp
mov
divl
inc
push
gs
stc
pop
aam
xor
cmp
mov
clc
jle
push
rcr
fmull
add
or
xor
dec
mov
xor
mov
in
mov
cwtl
adc
cltd
loope
mov
fldcw
pop
lea
incb
adc
lods
and
adc
fdivs
lods
pop
popa
test
rcll
xchg
nop
sub
rcll
scas
add
test
mov
cmp
adc
xchg
and
out
fs
test
frstor
mov
andl
cmp
add
adc
enter
aam
ja
xor
mov
fstpl
sbb
fcompl
ret
ret
out
mov
dec
sbb
mov
inc
pop
dec
add
nop
bound
lods
std
mov
icebp
sub
mov
pushf
popf
jecxz
test
xor
xchg
add
xchg
rorb
push
fcomi
addr16
pop
iret
pop
enter
mov
cmpsb
mov
adc
sub
mov
test
adc
mov
pop
inc
lods
pop
xchg
mov
mov
jbe
pop
arpl
inc
lods
xchg
xchg
loopne
sbb
fimull
lea
cwtl
jns
mov
mov
les
adc
sarb
or
push
add
std
ficoms
sbbb
or
sub
cltd
cwtl
icebp
add
sub
inc
inc
and
movsb
or
sub
movsl
mov
mov
repnz
mov
nop
xchg
loop
mov
leave
adc
test
xchg
mov
sbb
nop
mov
cld
lcall
or
sub
lods
sub
loope
cld
adc
in
sub
dec
scas
xchg
jge
inc
and
inc
js
lods
hlt
jne
popl
adc
movsb
mov
xor
cld
hlt
push
jmp
dec
pop
loopne
xlat
and
mov
mov
xchg
or
lahf
mov
loopne
jnp
mov
mov
fs
cmp
loopne
bnd
jns
sbb
je
sbb
mov
aas
ja
imul
lods
lea
imul
out
ja
add
aam
das
xor
repnz
ljmp
sub
test
add
sub
mov
add
add
push
xor
jecxz
stc
test
mov
jmp
inc
lret
out
imul
and
dec
je
jmp
stos
int
dec
daa
addr16
int
gs
faddl
mov
sbb
loop
sub
mov
lds
ss
loope
mov
cld
sbb
lock
or
xchg
cwtl
or
mov
push
rclb
cmovs
mov
fiaddl
add
pop
lock
hlt
fdivs
mov
adc
mov
sub
test
mov
adc
mov
adc
mov
cmpsl
aam
jns
cmp
mov
cld
mov
stc
dec
adc
aas
std
outsl
lock
in
sbb
pop
lcall
sub
sub
xchg
js
dec
add
call
or
adc
xchg
jp
jb
out
adc
movsl
mov
or
in
xor
mov
and
or
call
add
leave
hlt
loope
cmp
pop
fidivs
inc
xchg
cmp
shll
cmp
fisttpll
mov
lea
push
scas
adc
nop
xchg
add
leave
jb
loop
sbb
fiadds
xor
fidivl
insl
adc
loopne
xor
rorb
sbb
psrad
jmp
ficomps
jecxz
in
cld
xchg
in
xchg
mov
into
adc
xor
in
loope
loopne
movsb
in
hlt
cld
call
adc
shlb
clc
lcall
das
or
adc
dec
scas
inc
test
repnz
hlt
aam
dec
jmp
lods
rclb
xor
movsb
adc
mov
shlb
mov
out
loope
into
cmp
fs
cmp
xchg
stos
push
xchg
daa
inc
fisttpl
xor
ljmp
jp
test
adc
dec
sarl
mov
out
xlat
enter
inc
xchg
sbb
loop
enter
or
scas
adc
into
or
in
ret
scas
dec
lcall
int3
std
cld
mov
add
adc
aam
adc
fst
add
push
call
ljmp
in
cs
add
aam
cltd
push
lods
clc
cs
test
mov
ljmp
test
add
lods
in
sbb
in
add
ljmp
fldcw
and
and
adc
je
aas
mov
into
cli
lds
mov
dec
test
fwait
add
pop
xchg
lock
fnstenv
leave
popf
xorl
ffree
pop
jle
add
sbb
sahf
aad
fidivs
rclb
mov
pop
mov
enter
out
fnsave
ds
icebp
sub
dec
sbbl
lock
add
sub
or
mov
loopne
mov
lds
sub
jo
adcl
add
xchg
aad
pop
ss
scas
ret
pop
xchg
pop
es
jg
mov
dec
sub
xchg
ficoml
ss
mov
fadds
leave
leave
shlb
push
int3
stos
mov
xlat
add
xor
cli
insl
mov
popf
inc
repz
arpl
push
stc
and
in
mov
lods
jle
push
cmpsb
mov
test
or
test
lret
mul
cld
bndldx
lret
lret
adc
xor
dec
nop
sub
sbb
mov
pop
ret
mov
add
push
loop
cmpl
aas
ret
pusha
add
mov
test
add
lds
mov
add
in
lods
adc
and
insl
mov
or
xchg
test
ljmp
enter
jmp
jbe
jmp
popa
mov
jmp
xor
lock
pop
add
or
mov
add
jno
or
and
out
lock
xchg
sti
add
mov
push
mov
xor
cmp
out
daa
jo
add
nop
repz
sub
mov
call
and
cmp
jl
cld
in
mov
xchg
sbb
pop
lods
test
adc
ja
xchg
lods
out
pusha
fsubl
xchg
mov
clc
fiaddl
mov
inc
jle
mov
adc
int
push
ret
pop
sbb
sub
shll
sub
xor
inc
int3
sarl
mov
push
lods
mov
shr
idivb
andl
jno
or
aam
sub
sub
subl
int3
jg
leave
fisubrs
xchg
popf
imul
xchg
or
fs
mov
or
sub
loop
mov
gs
cmp
adc
xchg
pop
mov
xor
jnp
aam
jmp
push
add
xor
mov
je
adc
sub
sbb
add
pop
iret
push
test
shll
push
rclb
pop
imulb
cmpsb
sbb
push
sub
adc
ljmp
in
ja
adc
rorl
jnp
mov
popf
in
pop
mov
sub
lods
mov
cltd
sbb
jecxz
pushf
stc
add
xchg
mov
add
pop
add
hlt
xchg
out
or
out
rolb
xor
mov
or
sub
xor
add
jnp
dec
jb
mov
nop
fists
imul
shr
call
lahf
mov
sbb
jmp
and
mov
sbb
mov
ds
fidivrs
or
ret
mov
fidivs
insb
cmp
outsb
fisttps
lods
pusha
rorb
pop
xchg
pop
push
stos
or
and
in
sbb
pop
leave
xlat
mov
cmp
mov
dec
sub
sahf
cwtl
shll
rcr
aad
mov
inc
popa
jb
mov
jne
test
out
pop
jmp
dec
mov
xchg
xor
stos
fs
adc
cs
or
inc
jbe
in
hlt
int3
pop
adc
imul
orb
ret
mov
and
sbb
add
clc
les
cld
xchg
cmp
loope
or
adc
decb
push
std
pop
add
jp
fisubl
mov
inc
mov
stc
les
push
outsb
ret
leave
out
test
fisttpl
mov
mov
push
enter
xchg
mov
jmp
enter
cwtl
mov
add
sbb
jo
test
ret
orb
aas
enter
sar
sub
sarl
ds
or
xor
add
in
or
sub
ret
nop
add
sub
lret
adc
dec
mov
ret
mov
or
movsb
daa
sub
push
sbb
lods
in
sahf
int
mov
mov
sbb
xchg
mov
sbb
iret
fmuls
in
add
fdivr
or
rolb
adcl
jae
mov
xchg
cmp
xor
call
pop
ret
into
js
sbb
sub
lret
ja
inc
insl
mov
cltd
sti
arpl
popa
push
mov
pop
rol
sub
pushl
sti
test
clc
push
test
dec
repz
sub
shr
rorb
int3
test
outsl
jbe
lret
lret
fwait
pushf
inc
nop
std
cmp
add
sbb
lea
mov
sbb
dec
in
lret
lods
push
ds
rclb
loop
clc
mov
jb
ja
pusha
push
popl
mov
fsts
xchg
cmc
push
imul
add
or
test
adc
out
faddl
test
cmc
stc
les
outsb
fwait
adc
adc
sub
pusha
cwtl
lock
sti
jp
enter
cltd
sub
mov
push
sbb
scas
adc
mov
pop
popf
hlt
jp
pop
fdivrs
popa
cmp
mov
mov
sbb
adc
lock
add
pop
mov
lds
xchg
sub
cmp
pop
sub
push
hlt
push
or
fwait
adc
push
in
sub
mov
pop
sbb
pop
fimull
rcl
gs
inc
test
ret
add
clc
mov
cld
xchg
pop
push
incl
sarl
inc
push
cmp
sti
mov
shrb
and
das
jecxz
out
inc
imul
cltd
and
jne
mov
add
mov
test
push
cmp
add
into
mov
pmuludq
sbb
cmp
data16
or
int3
mov
sti
js
dec
addb
inc
out
jae
insl
mov
add
les
push
add
rol
xchg
xchg
adc
pop
ret
adc
push
adc
lret
mov
outsl
dec
je
dec
sahf
mov
or
and
sub
dec
shll
out
mov
xlat
xchg
scas
out
scas
push
or
inc
mov
sbb
call
add
push
or
mov
out
mov
fisubrl
fucom
aas
orb
lret
pop
inc
call
adc
es
inc
or
imul
pop
es
popf
xchg
lret
loopne
add
jb
ret
das
pushf
sbb
xor
dec
adc
pusha
or
cmp
dec
sbb
les
je
mov
dec
xchg
es
scas
pop
mov
inc
ret
jno
int3
push
dec
in
jp
fucomp
in
or
dec
or
push
jge
cmp
mov
xor
enter
fs
addr16
pop
loopne
mov
xchg
enter
mov
int3
test
adc
faddp
jb
adc
sub
cmp
test
js
inc
enter
scas
and
or
lret
lcall
leave
mov
xor
inc
leave
mov
adc
mov
sbbb
aam
cmp
loope
leave
test
addr16
add
mov
adc
lock
jae
push
rcll
sub
or
js
push
shlb
test
mov
movsb
jge
scas
jmp
movsb
add
insb
leave
jmp
xchg
popa
pop
out
jmp
lret
add
out
cld
add
sbb
fisttps
loopne
pop
add
lds
or
int3
and
or
orl
shrl
dec
mov
inc
je
push
lret
add
repnz
xrelease
sbb
xchg
or
jle
sbb
sub
push
enter
ja
int3
and
jecxz
and
in
dec
lret
popa
add
insb
adc
fdivp
nop
mov
loop
push
jecxz
inc
and
cli
int3
cmp
cmp
pop
mov
lods
cmp
sbb
lret
imul
fs
sti
adc
fsts
xlat
iret
fidivl
gs
outsb
test
fadd
lret
jg
out
mov
xchg
jl
mov
mov
adc
dec
xor
mov
call
mov
aam
cs
into
adc
inc
bound
rorl
aad
roll
inc
mov
cltd
aas
inc
jecxz
add
push
aad
sub
leave
int3
in
daa
cld
jnp
fwait
adc
test
addl
xor
mov
testl
lock
xor
int
xlat
push
pop
repnz
cli
pop
aas
pop
nop
jbe
js
repz
cmc
enter
cmp
loope
fwait
mov
jp
add
xlat
insb
lahf
mov
pusha
jne
iret
or
push
sub
push
and
or
shl
mov
push
jmp
loop
mov
add
popa
std
mov
out
rcll
scas
and
popl
mov
adc
xchg
or
dec
rcl
sub
or
cmp
sar
cmpsl
adc
or
inc
scas
or
out
jnp
or
mov
or
inc
lds
aaa
add
dec
out
push
jmp
rorb
repnz
xor
sub
and
sbb
fisttpll
enter
enter
push
or
sarl
pop
idiv
jl
int3
jmp
movsb
push
int3
sub
popa
out
std
pushf
fistpl
adc
call
adc
repz
sub
xor
sar
stc
and
push
das
mov
addr16
sbb
xchg
imul
call
leave
and
jmp
or
out
adc
mov
les
add
in
add
rcrl
rclb
loop
loopne
fmuls
push
cld
and
nop
into
adc
adc
dec
shlb
jecxz
stc
push
adc
push
or
lods
sub
outsb
adc
movsb
sub
mov
push
test
cmc
sbb
or
popl
in
sub
cmp
vgatherdpd
or
add
sub
cs
mov
xor
mov
xor
mov
sahf
mov
mov
xlat
out
pusha
pushaw
je
lret
sub
jb
cli
sbb
mov
mov
out
sahf
shll
mov
mov
hlt
mov
jne
mov
mov
call
lods
pushf
fiaddl
jl
adc
cmp
jmp
sahf
sbb
adc
pop
cld
mov
in
xchg
adc
cld
add
push
out
and
lea
sti
add
repz
and
dec
popf
out
sub
ja
out
dec
jle
sti
cld
cmp
lea
pop
and
mov
sar
xor
adc
test
cs
adc
mov
jnp
inc
or
addl
xchg
adcl
or
hlt
mov
lock
cld
add
ret
pop
int3
adc
push
adc
or
adc
jbe
mov
shrl
fucom
pop
ret
jae
cmp
pop
mov
icebp
dec
pop
rcll
pop
pop
cmpsb
sub
hlt
sbb
adc
ficomps
adc
mov
adc
in
push
into
mov
divb
mov
adc
mov
aam
call
nop
pop
cmc
loop
repnz
lock
adc
es
dec
dec
jg
mov
rorl
faddl
or
dec
mov
add
push
adc
pmulhuw
mov
div
adc
mov
fcmovb
xchg
rclb
nop
js
mov
les
jp
dec
ds
push
scas
push
loop
push
mov
or
imul
out
push
or
mov
int
pusha
push
jg
and
dec
xchg
roll
fildll
imulb
addl
stos
mov
mov
sub
jmp
lahf
leave
loop
iret
repz
aas
int3
adc
add
xor
aaa
jl
jb
andl
fcoml
or
xchg
je
rcr
jmp
and
pop
cmp
push
pusha
rcl
repnz
into
imul
leave
imul
sub
fsubs
sub
sbb
lods
int3
mov
xor
push
mov
data16
lret
add
xchg
or
inc
in
xor
rolb
gs
imul
sub
jmp
or
sub
hlt
inc
stos
fisubrl
jg
mov
push
ds
mov
mov
push
fsub
push
jb
retw
rorb
add
cld
pop
jno
pop
or
pop
sub
out
call
or
shl
add
fldenv
test
mov
mov
mov
inc
add
mov
sub
fdiv
add
jl
xchg
cld
cmp
insl
mov
loopne
in
jmp
in
push
sub
sub
in
cmc
mov
mov
std
int3
in
cmp
shll
int3
mov
shl
cmp
dec
or
or
icebp
sbb
or
add
sbb
xchg
nop
add
out
add
or
shlb
pop
sti
mov
xor
imul
incl
xor
mov
cmp
xchg
sbb
add
insl
push
and
inc
roll
mov
sbb
push
jnp
cmp
cmp
pop
mov
mov
dec
push
sub
pop
mov
mov
sbb
dec
or
stc
inc
dec
call
push
dec
xchg
add
loop
rorl
add
sbb
call
mov
aad
pop
loopne
mov
aam
leave
jmp
sbb
sub
aad
shl
jmp
hlt
pop
pushl
cwtl
push
push
punpckhdq
adcl
scas
sbb
jb
xlat
ds
fadds
nop
bound
xor
or
das
int3
out
sbb
mov
test
xchg
lods
mov
mov
je
mov
push
das
cmp
jmp
lcall
jg
testl
lods
jo
fucom
stc
adc
cmp
bound
sbb
adcb
lods
movl
push
enter
lock
xor
sbb
enter
into
in
ds
inc
fisubrl
pop
push
pop
lods
adc
or
mov
adc
or
pinsrw
rorb
add
aam
scas
mov
ds
enter
loopne
adc
or
lods
mov
sub
jbe
mov
test
shrb
cld
lahf
ret
jb
jo
gs
jl
bound
jmp
jge
hlt
jae
inc
std
cmpsb
out
int
inc
faddl
out
ljmp
dec
repnz
aam
xchg
lret
stc
dec
xchg
daa
pop
out
adc
inc
mov
int3
add
adc
sub
or
sub
loop
add
cmp
inc
push
jbe
je
clc
mov
sbb
push
xchg
sbb
xchg
fsubr
pushf
into
test
je
les
stc
dec
push
mov
mov
xor
clc
loop
pop
inc
in
dec
aas
mov
stc
xor
imul
jnp
in
iret
ret
rcl
xor
out
loopne
aaa
es
js
fadd
std
js
test
push
add
repz
jae
mov
push
mov
cli
shrb
cmc
aaa
or
sub
std
jmp
test
xchg
inc
ret
lock
or
pushl
cld
jb
push
cmc
add
lock
or
leave
sub
mov
mov
bnd
adc
jno
mov
insl
xor
push
sub
bound
divb
mov
jmp
out
loope
jmp
or
push
mov
dec
lret
decb
mov
fs
loopne
sarb
fdivrp
repz
das
arpl
dec
loop
in
ret
stos
out
pop
mov
or
in
adc
adc
ret
iret
mov
loope
dec
test
sbb
rclb
pop
ljmp
xchg
pop
add
cwtl
adc
xchg
or
add
add
sbb
xorl
mov
cmp
movsl
js
pop
mov
lret
cwtl
ljmp
push
lods
xchg
adc
jae
push
loopne
dec
or
aad
mov
das
hlt
roll
push
stc
pushf
and
mov
mov
cmp
mov
adc
clc
in
mov
test
repz
jl
cmp
inc
add
push
call
push
push
in
dec
jmp
dec
sbb
in
add
iret
or
jne
mov
mov
and
xchg
dec
in
pop
and
or
adc
push
shll
es
mov
or
cli
dec
cld
mov
sbb
iret
mov
fisttpl
cmpsl
pop
xor
push
je
dec
pop
xlat
js
mov
fimuls
in
or
sub
aad
push
sub
inc
xchg
add
rcrb
in
mov
into
mov
mov
shlb
test
mov
faddp
add
in
ja
out
adc
mov
mov
cli
inc
fs
adc
dec
scas
jecxz
mov
mov
movsl
hlt
mov
or
push
shl
call
jno
xor
shrb
lock
int3
inc
sbb
add
xorl
mov
leave
daa
cmp
sbb
or
and
hlt
cmp
lret
mov
push
adc
mov
lahf
cwtl
pushfw
ret
call
loop
in
xor
mov
not
bnd
ret
ret
loopne
dec
inc
ret
push
subl
or
adc
clc
sbb
iret
xor
mov
sbb
cld
and
push
push
aaa
sbb
das
inc
inc
out
mov
cmp
call
ret
xchg
iret
test
push
popa
xor
into
xchg
inc
adc
in
in
into
mov
push
jmp
pop
sub
cmp
sub
ret
and
lret
inc
push
dec
adc
adc
jecxz
scas
jnp
sbb
ret
icebp
add
hlt
test
stos
inc
mov
iret
xor
addr16
adc
enter
xor
jecxz
inc
push
in
fdivs
ljmp
nop
leave
jecxz
sbb
cmp
pop
dec
sbb
lret
xlat
das
nop
sub
push
dec
in
cld
xchg
jecxz
loopne
mov
in
leave
call
jb
insl
pop
or
mov
and
sub
jae
sarb
push
movsb
cmp
icebp
jmp
pop
inc
push
lods
stc
test
mov
inc
mov
in
clc
inc
ja,pn
mov
jb
out
push
loope
dec
imul
add
adc
mov
imul
test
fcoml
fadd
mov
push
aaa
sbb
out
in
cli
loop
mov
rorl
push
jecxz
mov
ret
hlt
and
dec
outsl
sub
scas
inc
js
dec
jbe
mov
and
add
les
mov
les
lds
data16
or
sub
push
inc
test
dec
into
xor
jmp
dec
rcr
sbb
clc
xchg
pop
xchg
mov
imul
out
jnp
xor
pop
daa
or
repnz
jecxz
out
leave
aad
jecxz
insb
push
sub
imulb
add
out
inc
call
jl
arpl
or
lea
mov
std
push
fdivs
stos
mov
sub
leave
stos
xor
call
add
les
aam
rcrl
mov
fdivl
sub
jb
sbb
sub
sar
dec
pusha
push
addr16
repz
mov
lods
rorb
cmc
add
jns
mov
lods
int3
mov
sub
int3
sub
scas
bound
adc
inc
in
jmp
sub
adc
adc
and
sbb
push
mov
mov
adc
or
or
popf
clc
push
inc
insb
popa
call
in
ret
or
xorb
jle
push
sahf
mov
push
ffree
gs
clc
or
call
in
adc
in
fstps
add
xchg
xchg
hlt
pop
pop
or
cld
sbb
popf
push
dec
nop
jne
iret
dec
imul
out
cld
add
lahf
iret
imulb
cld
or
int3
sbb
pop
mov
test
and
call
sbb
cmp
mov
jl
in
mov
xchg
jecxz
out
lods
subb
push
mov
les
push
shrb
in
sub
nop
out
insb
fildl
mov
mov
addr16
push
xchg
std
insb
inc
js
mov
add
mov
adc
push
ret
in
sub
popl
in
fstpt
xchg
cmpsb
in
call
in
mov
loopne
xchg
out
fs
pop
jp
inc
rolb
fwait
dec
jl
stc
clc
mov
lret
fst
leave
jns
mov
inc
hlt
sub
movsl
pushf
rcr
icebp
mov
clc
loop
adc
test
mov
sub
mov
les
xchg
push
mov
ljmp
fcmovnb
mov
jl
leave
loopne
jg
aas
fstp
or
jecxz
mov
rclb
add
push
fcmovu
sbb
fcmovbe
adc
in
fisubl
out
mov
push
rol
test
jmp
sbb
dec
add
js
jo
mov
mov
incl
sub
mov
fucomi
lret
push
mov
xchg
sbb
mov
lods
call
sbb
aam
and
push
mov
ret
mov
sub
out
add
call
sbb
push
mov
adc
adc
shll
push
in
or
jns
shr
push
or
mov
lds
jecxz
sbb
adc
lock
imul
ret
or
pop
pop
inc
add
jns
xchg
leave
or
out
popa
push
shlb
push
cmc
mov
jno
in
xchg
and
lret
xlat
loope
mov
push
xor
or
xchg
aas
xchg
cmp
lret
and
mov
push
pop
adc
ljmp
daa
adc
push
andb
rorl
stos
fwait
or
adc
push
stc
mov
sbb
and
rorb
shl
cmc
mov
add
lock
cmc
jbe
pop
xor
xor
adc
adc
movzwl
push
faddp
fnsave
and
int3
and
ds
sub
rcll
cwtl
mov
pop
mov
xchg
rolb
push
subl
iret
xor
and
sub
or
jg
or
movups
les
adc
into
stc
and
jmp
or
iret
cld
jae
dec
aaa
mov
adc
in
cmp
push
mov
xor
cmp
nop
idiv
and
lds
pop
lds
push
nop
or
pop
pop
cmpsb
adc
adc
or
xor
mov
cmp
mov
inc
mov
clc
mov
adc
push
add
and
sbbl
roll
and
sti
rorb
cld
sub
into
sbb
rcrl
push
push
push
inc
loop
loopne
or
dec
mov
stos
inc
sbb
push
icebp
jno
or
js
into
mov
mov
add
lret
sbb
push
cwtl
loop
loopne
push
sahf
sub
fnsave
popa
xchg
xor
sub
in
jae
adc
mov
cmpsb
cld
cwtl
mov
or
pop
mov
popa
xor
xor
push
out
xchg
sub
jns
pop
out
cld
arpl
in
inc
jmp
loop
test
outsl
xor
cmp
loop
sti
fisttpll
xchg
icebp
in
add
icebp
dec
sbb
or
addr16
lret
shll
sbb
ret
mov
andl
aam
lds
int
fimuls
sub
movsb
and
mov
mov
cmp
sub
mov
in
push
adc
mov
xlat
mov
cwtl
mov
sub
roll
mov
shll
mov
mov
dec
mov
in
mov
stc
sahf
mov
add
les
fimull
les
mov
and
adc
adc
lret
movups
lock
outsb
sbb
sub
push
cmp
jge
int
ret
cs
add
aad
cltd
adc
push
jb
pop
add
sbb
dec
in
mov
sbb
fadds
out
popa
subl
sub
adc
shrl
cli
ret
cmp
dec
repz
outsl
int3
adc
aaa
mov
or
hlt
ret
aaa
adc
mov
cmpsb
add
out
sbb
enter
lret
in
test
in
rolb
push
andb
andl
xchg
lret
xor
insl
mov
out
clc
adc
cmp
je
stc
aaa
push
nop
pop
popf
fwait
mov
inc
xchg
movsl
ret
sub
add
in
mov
sarb
aad
push
ljmp
mov
outsl
int3
xchg
cmc
adc
xlat
push
pop
cmp
aam
sub
xchg
inc
lret
mov
ss
adc
mov
fdiv
xchg
mov
cmp
in
pop
add
rorb
push
and
adc
fsubrs
test
adc
fwait
pop
sub
add
arpl
into
ficoms
pushf
rol
leave
mov
adc
inc
ljmp
pop
or
inc
pop
push
loopne
xor
in
outsb
je
mov
sbb
push
add
out
dec
sahf
test
out
mov
sub
out
xor
mov
jp
sbb
inc
dec
lds
jecxz
mov
push
jg
not
dec
lret
sbbb
or
jp
xchg
aas
jmp
shll
sub
inc
mov
mov
or
push
shll
xchg
jne
push
push
mov
mov
cmc
cmp
adc
push
aam
adc
repz
mov
inc
mov
xlat
cmp
clc
push
pop
sbb
push
and
ss
fimuls
fcoml
and
filds
jne
stc
loope
push
adc
or
mov
mov
add
repnz
rcrb
sub
dec
sub
and
dec
sub
pop
test
inc
mov
jp
xor
sbb
dec
int3
jne
arpl
fnstenv
popa
fidivl
mov
mov
mov
repz
nop
lahf
and
xchg
iret
ljmp
add
daa
jne
hlt
mov
mov
shr
cmpsl
mov
mov
in
push
std
movsb
test
dec
ret
and
repnz
add
sbb
inc
es
test
test
loop
rorl
es
mov
into
jp
insb
sbb
jg
adc
xor
sub
xor
sbb
cmp
add
cli
or
sub
loop
mov
sbb
es
rclb
xor
mov
mov
ficoms
dec
jae
stc
cmp
and
add
aam
imul
scas
cmp
call
mov
repz
test
sub
stc
aaa
divb
add
fists
xor
push
inc
dec
inc
aaa
loopne
pop
pop
mov
dec
sahf
out
mov
loop
aaa
push
out
mov
push
lahf
sub
aad
movsb
fwait
inc
int
xor
add
sbbb
jp
in
cmp
xchg
pusha
mov
movsb
pop
cmp
push
or
push
push
lea
test
and
pop
pop
mov
pop
cmp
hlt
push
push
mov
ds
mov
sbb
ret
popf
add
repz
mov
push
stc
push
out
and
mov
push
xor
frstor
ret
xchg
and
sub
mov
jg
leave
push
pushf
xor
add
fadd
jns
inc
hlt
in
push
iret
push
in
je
mov
push
lahf
lock
dec
dec
iret
mov
inc
in
pop
stc
push
enter
stos
push
xchg
out
out
rcrl
mov
enter
fldenv
pop
jne
jg
inc
mov
cld
int3
cmc
xchg
add
ds
and
mov
lahf
add
and
loope
adc
mov
ret
mov
mov
mov
adcb
loop
add
push
aad
adc
repz
or
es
loop
rcl
push
jns
hlt
out
aad
lcall
sti
sub
adc
test
shlb
push
inc
or
clc
dec
cmc
rcrl
ficomps
fwait
push
ret
adc
mov
or
iret
cmp
xor
dec
bound
outsl
and
nop
jp
hlt
out
ja
or
fisubrs
scas
inc
leave
bound
or
mov
mov
xchg
xor
rcrb
int3
sbb
jae
push
xor
in
cmp
mov
push
push
mov
jecxz
aad
andl
nop
push
lahf
cs
lcall
sbb
fstpl
sub
jmp
push
lret
and
or
add
adc
mov
dec
stos
pop
hlt
and
in
sub
clc
mov
mov
dec
mov
aad
or
gs
int3
inc
inc
je
cmc
xchg
xchg
dec
jne
pandn
mov
adc
adc
pusha
out
dec
or
sub
push
adc
sbb
push
mov
jo
shlb
ret
repz
lock
loop
sbb
call
loopne
mov
in
mov
repz
rcrl
aam
jne
shrl
test
int
jno
iret
xor
mov
cmp
fs
dec
jp
sub
bound
out
and
adc
xchg
mov
xchg
fcom
fimuls
repnz
jne
dec
repz
cmp
xor
adc
mov
or
and
shlb
mov
icebp
mov
cld
or
js
clc
dec
mov
and
test
mov
enter
or
mov
ret
adc
dec
xchg
fdivs
xor
mov
sub
lods
mov
enter
mov
icebp
mov
test
add
iret
or
mov
sbb
or
aad
push
sbb
mov
xlat
das
les
adc
jns
dec
aad
mov
pop
jns
test
push
xchg
test
pop
adc
lea
sbb
je
xor
daa
cmp
mov
push
xchg
cmpsb
adc
test
or
adc
sub
or
pop
xor
cld
mov
or
lahf
pop
mov
pop
nop
ds
cld
stos
movb
das
mov
les
je
aam
xor
dec
cmc
lds
aam
addr16
and
dec
sbb
in
mov
or
sbb
rorl
shl
mov
push
jmp
out
popf
pop
sti
add
add
and
fidivrl
cmc
in
jne
push
sbb
pop
stc
lahf
stos
xchg
xchg
dec
push
dec
and
loope
sti
faddl
adcb
jae
fildl
add
mov
rep
sub
jbe
test
and
xchg
pop
fbstp
xlat
inc
or
sub
out
dec
hlt
add
loope
sahf
inc
fcmovb
aad
arpl
sub
ficomps
xchg
cltd
rclb
mov
in
mov
mov
inc
stos
bound
in
sbb
cmpsb
or
ss
pop
xchg
push
inc
ror
nop
in
mov
mov
in
xlat
addb
arpl
divl
in
fisubrs
movsb
icebp
add
sbb
repnz
sahf
clc
pusha
outsl
shrb
aam
stos
lret
sub
sub
fwait
das
mov
and
sub
dec
add
into
je
dec
hlt
data16
cmp
cmp
movsb
popa
jns
fs
sahf
out
rcrl
fdivs
sub
ss
stc
rcr
sbb
test
mov
or
push
sahf
iret
mov
insb
adc
or
aaa
fisttpl
push
mov
test
adc
ja
and
mov
xor
adc
movzwl
sbb
mov
mov
push
sbb
adc
sbb
test
push
dec
adc
nop
in
ljmp
dec
aaa
int
add
mov
std
test
jne
dec
pop
add
sub
sub
stc
aad
sub
dec
int3
sbb
ret
add
dec
rol
adc
popa
or
pop
add
adc
outsb
dec
xchg
push
xor
mov
test
bswap
popf
add
dec
dec
repz
sbb
clc
cmp
dec
jb
sti
inc
and
or
add
nop
cmp
call
lods
lods
sarb
cmp
dec
push
xchg
cmp
movsb
dec
add
pop
hlt
or
mov
xor
mov
push
jns
inc
orl
cmp
test
or
pop
push
gs
sahf
clc
pop
pop
cmp
cmp
add
xor
add
movsb
push
shrl
mov
addl
adc
lret
xchg
cmp
mov
inc
insb
pop
test
int
sbb
mov
lods
add
push
mov
jmp
cld
and
int3
cmpsl
mov
shr
dec
iret
mov
sbb
aaa
iret
je
cmp
test
divl
inc
adc
sti
cli
mov
je
add
add
sarb
cmp
in
push
hlt
cli
dec
dec
call
cmp
aaa
ss
testl
add
loope
mov
lock
push
daa
or
stos
outsl
rorl
xchg
inc
lret
or
push
dec
push
lods
in
or
test
stc
inc
mov
add
inc
cmp
outsl
sub
leave
dec
cmp
jmp
sub
add
aam
nop
rclb
xor
dec
add
push
add
or
xor
adc
lds
fists
int3
sbb
mov
mov
pop
lahf
out
ja
repz
aad
insl
out
ds
add
je
in
fisubrl
cmp
lahf
call
add
xor
add
xor
xor
adc
sbb
outsb
sbb
adc
mov
sbb
inc
cli
xchg
cmp
jmp
adc
sbb
fucom
lcall
pop
push
jmp
xor
repnz
xor
lcall
mov
pop
jecxz
lds
mov
dec
int
adc
aas
push
xchg
sub
test
xchg
arpl
jp
jb
jmp
cmp
mov
dec
test
ljmp
int
xchg
or
mov
jae
xor
leave
xor
inc
in
int
out
add
and
pop
movsb
mov
sbb
push
push
imul
aad
jmp
cmp
push
leave
lahf
das
mov
pop
and
stc
mov
ss
out
mov
lods
cmp
add
adc
lods
mov
adc
pop
adc
int
rcll
add
sbb
les
jmp
mov
xchg
and
adc
xchg
pop
lock
lds
stos
sti
mov
push
dec
loop
sbb
bound
rcl
mov
in
orl
inc
iret
and
sub
fninit
fmuls
inc
jmp
lret
lcall
repnz
lcall
stos
jnp
inc
and
mov
mov
adc
cmp
cmpsb
shll
js
in
test
loopne
fimuls
cmpsl
dec
rep
push
mov
popa
mov
das
adc
dec
pop
inc
lock
adc
add
pop
push
dec
push
movsl
imull
xchg
sub
ljmp
sub
or
and
mov
loop
sbb
and
mov
repnz
and
xchg
and
adc
lods
aad
xor
pop
push
xor
pop
shlb
mov
lock
mov
into
lahf
mov
xchg
adc
leave
adc
add
mov
dec
in
imul
int
sub
les
sbb
daa
and
sub
lods
dec
test
lahf
jge
xor
stc
xor
xchg
out
ret
call
fwait
push
lahf
xor
aaa
test
dec
pushf
rorb
out
lock
cld
mov
pop
fwait
aam
lahf
push
xlat
xchg
repnz
loope
pushl
out
adc
popa
jbe
test
and
xor
icebp
or
and
mov
into
movsl
cltd
sbb
aad
mov
fcom
es
adc
aas
addb
mov
sub
jmp
adc
push
mov
mov
dec
ret
sbb
adc
inc
cltd
xor
pop
jg
jns
lea
pand
lahf
and
div
dec
es
jmp
sbb
pop
push
sub
sub
clc
popa
xchg
orb
ret
stos
and
adc
sbb
movsb
jl
cltd
pushl
stc
inc
lahf
push
push
and
ret
dec
push
add
push
aaa
dec
dec
xchg
outsb
sub
adc
mov
aaa
mov
mov
or
adc
test
mov
mov
pop
int3
sbb
xchg
lods
es
and
out
aas
and
add
push
movb
fwait
sbb
cmp
cwtl
repz
les
leave
pop
test
inc
jo
sub
and
dec
lcall
xchg
sbb
ja
xor
cmp
dec
lahf
je
xor
out
xchg
fidivrl
int3
add
add
dec
jbe
insl
dec
xor
test
pop
pusha
pop
aam
add
or
and
fldl
out
add
lods
pusha
mov
jg
add
fildl
push
or
add
sub
hlt
add
add
fcoml
cmp
xor
sbb
js
mov
mov
loop
iret
fidivrs
fiaddl
inc
insl
mov
mov
xor
icebp
fildl
xchg
add
mov
aas
pushf
mov
rorb
sarl
and
cmp
fimuls
cmp
ret
sarl
aaa
sbb
loopne
cmp
dec
inc
xchg
push
testl
inc
cmp
jle
scas
stos
push
push
jecxz
lea
daa
imul
adc
xor
mov
lahf
and
clc
mov
fabs
ficompl
or
or
inc
push
repz
fnstsw
dec
mov
roll
sub
inc
adc
pop
test
push
or
shll
pop
or
je
repnz
pop
repnz
cld
jne
shlb
mov
ss
iret
sub
movsl
mov
call
xor
int
leave
or
sarl
stos
aad
adc
shl
stc
icebp
inc
das
xlat
xchg
ja
and
mov
mov
push
sbb
adc
inc
adc
mov
inc
dec
stos
repnz
gs
loope
mov
push
iret
xchg
or
mov
dec
sbb
lret
ficomps
dec
xchg
jbe
xchg
add
int3
mov
mov
pavgw
sar
stc
repz
sub
fidivs
add
push
fistps
repz
xor
pushf
dec
mov
stc
rol
mov
mov
mov
sub
ja
cmp
push
pop
decl
shlb
dec
std
call
dec
pop
push
xchg
pop
loop
into
or
adc
push
adc
cli
dec
push
repnz
leave
adc
pop
sub
ficoml
fnstenv
dec
aam
popf
addr16
bnd
sarl
inc
into
and
push
or
ss
and
les
xchg
cmp
test
and
jbe
xchg
push
daa
xlat
and
js
test
cmp
insl
stos
add
in
insb
or
add
ret
pusha
aam
add
inc
aad
les
fwait
add
add
loop
add
das
xor
add
int
dec
mov
adc
out
sbb
mov
or
in
push
mov
sbb
add
mov
nop
inc
les
enter
jae
mov
push
xchg
ja
inc
gs
jmp
push
out
repnz
dec
leave
ds
jb
clc
jae
adcb
xor
push
inc
push
jp
pop
and
mov
pop
sbb
or
adc
fildl
sub
push
jno
and
ret
add
pop
sub
in
jae
fsubl
sbb
leave
and
jae
out
push
add
test
pop
fidivrs
lds
aaa
test
sub
leave
and
iret
icebp
insb
add
adc
xor
ret
sbb
push
mov
movl
sub
add
popf
push
out
lods
divps
lret
cltd
imul
cwtl
pop
mov
test
add
sbb
cmp
mov
loopne
and
push
sbb
jg
jmp
sarb
leave
xchg
pusha
sub
xor
rcll
add
ljmp
sbb
xor
lahf
and
mov
xlat
adc
mov
fs
mov
sub
ss
pop
fsubp
hlt
sbb
mov
dec
dec
fwait
jg
xor
lahf
sub
jg
xchg
and
sbb
add
fbld
pop
lret
out
jae
loopne
adc
pusha
or
insb
mov
repz
inc
int
mov
mov
or
shrb
clc
adc
sub
shlb
or
push
sub
cmc
mov
or
shlb
ja
test
add
lret
push
inc
test
sahf
pop
fs
mov
sub
cmpb
sub
into
adc
js
inc
mov
aaa
ret
popf
sub
jge
xor
sbb
fbstp
ljmp
pushf
cld
in
adc
dec
sub
aas
dec
addr16
in
clc
out
dec
lods
jmp
cld
mov
dec
jmp
inc
outsb
jg
hlt
call
shrb
or
inc
sub
es
dec
mov
loop
pusha
vpminub
nop
js
lock
aas
add
fisubl
jl
ljmp
xor
add
and
ja
inc
cmp
loop
pop
cwtl
cmp
loopne
iret
int3
mov
shlb
ss
loop
sti
mov
push
sbb
pop
insb
fwait
push
out
cmpsb
mov
bound
pop
jg
sbb
ffreep
mov
ss
mov
xor
and
popf
jle
mov
andb
push
stc
xchg
jl
and
push
in
mov
mov
add
xor
adc
out
xchg
dec
psubd
rcrl
cmp
adcl
cli
movsl
mov
xor
sbb
push
xor
mov
and
mov
jle
or
cmpsl
adc
jne
ror
sti
insl
mov
stos
pushf
xor
adc
pop
mov
dec
mov
es
std
add
or
mov
jg
push
jmp
ficomps
pop
insl
test
fs
cmp
lods
je
dec
xlat
and
xlat
jb
sarb
push
cmc
std
push
icebp
ljmp
leave
xor
call
ljmp
ja
push
mov
and
ret
addr16
ja
insb
bound
sbb
in
subl
push
jmp
dec
push
dec
pop
xchg
out
push
inc
xor
or
stc
xlat
add
jl
push
xor
nop
xchg
scas
out
mov
aad
movsl
lret
inc
mov
aad
jnp
cmp
shrb
mov
sti
je
xchg
cwtl
or
xchg
cwtl
or
lock
adc
sbb
inc
or
fst
loopne
adc
sbb
inc
adc
rolb
adc
pop
movsb
adc
pop
movsb
adc
pop
movsb
adc
pop
movsb
adc
mov
sub
sub
mov
daa
cmp
xlat
fnstenv
add
mov
mov
mov
std
mov
insb
in
fadd
jb
push
ljmp
out
imul
sub
cmp
stos
vphaddw
in
adc
repnz
adc
call
fidivl
and
add
sar
je
xchg
cwtl
or
xchg
cwtl
or
xchg
cwtl
or
pop
lock
repz
adc
adc
bsf
inc
in
sub
sar
and
sbb
jmp
in
test
push
and
sub
push
push
fs
jo
enter
mov
mov
mov
sub
xchg
dec
jne
insl
mov
ss
push
mov
jne
inc
push
icebp
sub
jmp
push
pusha
popa
jae
inc
xor
push
xor
cs
sub
adc
xor
imul
or
or
push
imul
push
stc
inc
fidivs
add
dec
xor
jle
pop
jae
xor
ret
mov
mov
hlt
faddp
xchg
mov
cli
xor
cmp
add
aas
jg
jp
mov
xor
pop
xor
or
mov
cmp
insb
jg
jne
shrl
adc
je
jl
cmpsl
imul
mov
lea
out
sbb
mov
adc
insb
sbb
add
inc
movsl
sub
out
pop
fs
adc
das
xchg
and
fs
adc
jne
ljmp
ljmp
pop
dec
ret
les
lea
out
dec
push
adc
xor
loopne
and
sub
sti
or
push
xor
ss
cld
test
rcll
leave
leave
in
add
notb
dec
andps
push
mov
xor
lods
hlt
dec
aaa
iret
in
repnz
push
loope
xor
test
jno
add
add
loop
or
in
xor
and
in
mov
xor
mov
mov
xchg
sbb
jne
or
cmp
or
push
imul
in
sbb
mov
stos
sbb
and
mov
xor
fidivl
imul
int3
mov
sarb
xchg
int3
add
jns
repz
mov
rolb
jnp
mov
in
dec
out
cmc
in
xchg
fstpl
jo
repz
sbb
mov
cmpb
rolb
push
gs
cmp
mov
fnstcw
pop
dec
adc
imul
leave
or
test
or
mov
fwait
test
sbb
fs
fisubrs
and
stc
dec
in
xchg
adc
fwait
call
mov
push
loop
aas
daa
shlb
inc
inc
es
hlt
jmp
jae
add
push
lret
ja
lret
mov
data16
out
lahf
and
lret
loop
cmp
add
fsubrl
in
aam
add
hlt
ret
cmp
lret
lock
cmpsb
inc
xchg
push
aaa
push
jl
repz
ret
mov
dec
mov
mov
int3
or
xchg
imul
std
dec
gs
mov
imul
fcompl
and
popf
push
cli
in
sbb
push
cmp
dec
lret
mov
lret
in
movb
sahf
cmp
dec
push
in
add
aam
cmp
in
or
leave
jp
sahf
pop
mov
repnz
xchg
imul
and
int3
sub
cwtl
jmp
jo
xchg
pop
sti
clc
gs
pop
push
mov
add
in
gs
dec
clc
lret
out
adc
ficoml
int3
pop
sub
test
shrl
pop
jl
xor
ret
lods
pop
cmp
test
and
adc
jns
sub
inc
xor
icebp
mov
add
or
lds
jne
dec
in
sarl
lret
out
and
stos
cld
mov
push
mov
sbb
and
in
aaa
mov
xchg
rep
popw
shl
out
stc
adcl
sub
ljmp
cld
add
mov
hlt
xchg
add
neg
ret
adc
push
adc
fmul
clc
popf
stos
hlt
insl
mov
test
cmp
call
pop
push
out
or
mov
pop
stc
add
daa
mov
add
inc
out
or
push
inc
sub
mov
out
mov
sub
push
dec
or
lods
andl
sbb
sbb
rclb
or
mov
and
out
sbb
cmp
dec
or
xor
add
xchg
pop
int3
mov
mov
lret
shlb
pop
ret
cld
ja
sbb
mov
dec
jb
pop
jno
mov
mov
xchg
mov
or
sbb
jmp
fidivrs
sub
or
mov
repz
inc
or
aad
push
and
mov
inc
in
mov
mov
adc
loope
sub
xchg
push
or
push
iret
insb
xor
pop
or
lea
sub
dec
fimuls
lds
or
xor
shlb
jae
sbb
ljmp
inc
mov
dec
xor
sbb
jne
mov
leave
mov
shl
push
mov
pop
sbb
add
push
xor
int
add
in
out
iret
push
or
pop
jb
xlat
dec
adcl
outsl
es
sub
and
icebp
and
sbb
dec
xchg
shlb
jecxz
fwait
mov
jae
lret
jns
shr
or
dec
aad
cmp
arpl
repz
popl
or
push
ljmp
add
or
aad
pop
dec
pop
add
fcompl
sub
dec
add
mov
std
loop
shlb
sub
dec
mov
rcll
inc
dec
insb
dec
jecxz
dec
push
pop
andb
or
cmp
pop
add
fwait
lret
and
xchg
repnz
xchg
outsl
sahf
add
mov
pop
fildll
adc
push
dec
addr16
aam
repz
clc
imull
clc
jecxz
data16
movsb
pop
sbb
inc
stc
add
dec
fistpl
xchg
sub
aaa
dec
mov
inc
xchg
mov
insb
fistpl
push
sbb
cmp
mov
outsl
xor
aad
shlb
push
xchg
jg
jo
xchg
movsb
cmc
jl
dec
enter
push
cmpsb
in
jp
add
js
arpl
fimull
mov
pxor
push
ret
push
lds
mov
mov
into
scas
pop
jecxz
test
hlt
into
mov
add
ret
sbb
or
mov
adc
add
stc
mov
popa
aam
mov
movl
adc
push
clc
mov
mov
sarb
shlb
sub
dec
inc
add
pop
je
test
mov
or
ja
stos
mov
sub
into
loop
mov
sub
out
add
ret
call
test
fiadds
xlat
dec
sbb
lcall
push
inc
adc
cld
lock
xchg
mov
jae
loop
cmp
mov
outsl
mov
inc
mov
aas
and
dec
sbb
pop
int3
cwtl
inc
cmp
popl
add
jns
insb
cmpsl
adc
jae
jb
fdivr
and
jns
ss
pop
aad
lret
xchg
adc
xor
adc
jae
punpckldq
scas
sub
push
icebp
movsl
add
addl
popf
push
mov
pusha
outsl
mov
aam
mov
in
sbb
mov
clc
or
jmp
jae
push
push
dec
push
gs
hlt
cmp
adc
inc
add
jno
icebp
xor
imulb
in
int
dec
push
cli
jmp
faddl
jmp
iret
cmpsb
dec
xchg
jp
cld
mov
stos
add
lret
clc
push
mov
add
scas
into
nop
insl
sbb
adc
sbb
xchg
sbb
add
cmpb
lcall
sbb
mov
aaa
hlt
pop
add
push
mov
inc
mov
push
lods
fs
leave
cld
xor
inc
repz
hlt
fucomp
dec
dec
and
fimuls
iret
sub
pop
mov
jmp
out
loop
ret
pop
das
xor
cmp
cmp
aas
rorb
sbb
push
das
and
push
dec
xchg
ja
lret
roll
andps
dec
out
jmp
mov
sbb
add
sti
aam
popf
sub
das
out
inc
mov
adc
imul
lds
fnstcw
in
mov
or
jb
in
add
mov
call
shl
pop
adcl
inc
pop
fsub
ror
inc
into
stos
popa
mov
adc
jle
push
dec
mov
ljmp
or
fdivl
dec
xorb
mov
loope
aam
pop
cmp
rol
jae
or
or
daa
add
jmp
in
add
adc
and
mov
push
lret
repnz
fmuls
aam
sub
or
in
hlt
jp
aam
xor
push
mov
mov
ret
or
sub
pop
sbb
in
cmp
mov
jbe
dec
clc
jp
repz
fdivs
sbb
add
divl
or
mov
fwait
sub
pop
or
or
aas
mov
and
enter
dec
pop
scas
mov
imul
mov
cmp
cmp
mov
dec
or
and
pop
jl
mov
pop
fwait
cmp
push
cmp
enter
out
cmp
push
sbb
cli
test
xor
add
push
sti
pusha
jge
push
iret
repz
loopne
sahf
mov
jae
pop
loopne
enter
in
jno
les
inc
ss
out
pop
or
pop
push
fistpl
cmp
adc
sub
icebp
sbb
test
loope
jae
cmp
out
or
pop
test
mov
jnp
ljmp
pop
ss
mov
mov
push
mov
fnstcw
sbb
adc
sub
fistps
dec
stc
dec
out
ljmp
dec
int
xor
dec
adc
sub
fwait
les
arpl
mov
rorb
sbb
add
je
add
mov
xlat
dec
jg
dec
je
fadds
xchg
les
in
mov
ret
mov
add
clc
test
das
sbb
push
clc
adc
jl
in
mov
pop
sub
je
enter
or
dec
mov
loop
add
int
iret
stc
ss
lret
imul
dec
adc
data16
movsl
lahf
xlat
test
in
push
out
cwtl
or
jo
push
jl
negl
cmp
outsl
or
fadd
out
loope
outsb
sahf
jne
xchg
sub
adc
sub
stc
or
ljmp
pop
jl
leave
insb
dec
inc
push
or
sub
dec
sub
iret
stc
es
icebp
mov
mov
adcb
mov
or
push
xchg
jb
cmp
imul
fcoms
mov
dec
ret
sbb
nop
fcoms
call
aas
shrl
lahf
adc
xorl
call
int3
jno
adc
in
adc
adc
dec
sub
pushf
subb
lods
movsb
addr16
mov
enter
into
or
es
cmp
imul
in
outsl
lret
xchg
orb
inc
or
add
mov
mov
push
lock
and
sbb
mov
lret
ljmp
mov
mov
mov
ret
shr
push
shlb
cmp
add
nop
jmp
pop
mov
pop
mov
pop
jno
adc
add
stc
dec
lret
add
int3
push
and
lock
adc
fcomps
cmp
cmp
inc
or
adc
repnz
jmp
sbb
and
push
xorb
fcmovu
mov
hlt
push
clc
fiaddl
ror
fstp
xlat
jmp
xor
call
mov
add
adc
sahf
ja
pop
adc
mov
xor
mov
fnstcw
push
sbb
jmp
adc
push
iret
sub
ja
mov
sub
and
sarb
pop
fisttpl
or
sahf
add
or
mov
inc
push
ljmp
push
adc
push
cmp
jae
hlt
fdivrl
in
orb
inc
xor
inc
out
lahf
sti
inc
cmp
inc
mov
js
imul
mov
xor
loop
mov
add
adc
jo
repnz
sbb
or
dec
shr
das
or
mov
adc
cmp
fidivl
cli
aad
out
dec
xor
ljmp
add
outsl
out
or
add
dec
repnz
dec
lahf
push
mov
out
rcrb
popa
nop
orl
xchg
adc
iret
aas
jp
popf
sbbl
jns
loope
or
cmp
aad
jp
subl
cmp
bound
test
out
sub
mov
hlt
rclb
sub
jno
cmp
push
lock
mov
cli
pop
scas
sub
mov
aam
int3
xchg
jmp
cld
xchg
adc
cmp
or
sbb
pop
adc
inc
and
dec
and
cmp
pop
fisttps
fucomi
test
mov
pop
sbb
call
ja
jl
pop
push
lea
pop
lods
addl
stos
xor
xchg
in
loopne
dec
sbb
xchg
movsb
test
add
loopne
sbb
out
cld
jmp
inc
ret
or
add
sub
fmull
sbb
sbb
fwait
cmp
nop
dec
shlb
jae
sub
push
sub
xchg
xor
mov
jecxz
neg
adc
loopne
ror
pop
push
mov
orl
nop
stc
rorl
adc
jle
andnps
in
jo
ret
fsub
pop
inc
imul
adc
ficoml
rcrb
cld
mov
push
cltd
mov
or
cmpsl
test
es
ret
mov
pop
adc
and
loopne
arpl
or
mov
mov
or
xchg
mov
mov
inc
xor
sbb
sarl
into
loope
sbb
add
loop
fidivrs
push
lret
or
jb
in
stos
push
loope
nop
adc
stos
in
fldl
lock
adc
ret
push
mov
xchg
in
xor
pop
or
shrb
sarl
push
movsb
in
xor
lahf
dec
in
mov
in
mov
sti
fldl
stc
and
sbb
mov
sbb
leave
inc
cmp
or
sub
sub
sub
mov
pcmpgtd
mov
negl
test
xchg
addr16
and
mov
rcr
loope
inc
mov
aaa
adc
pop
mov
fldcw
adc
test
loopne
mov
sarb
lods
jbe
mov
inc
outsb
in
insb
sub
xor
enter
pop
repz
xlat
jmp
pop
cltd
sbb
out
stc
hlt
jae
clc
and
mov
in
call
stc
rorl
fcmove
nop
shlb
enter
lahf
push
sti
xchg
xor
xorb
sub
popf
sbb
pusha
push
xchg
jecxz
rcr
shl
ficompl
jg
ljmp
das
sarb
or
hlt
out
cmpsl
les
lock
jmp
testb
sbb
cmp
std
push
adc
pushf
lret
xlat
push
leave
fdivrl
std
inc
inc
adc
pand
inc
jg
lods
xor
sub
xchg
lods
sbb
hlt
mov
aam
mov
adc
ret
cld
add
sti
aaa
jb
add
ret
adc
sub
shrb
xor
sbb
sub
or
mov
in
xchg
testl
add
jecxz
fsubl
loopne
lods
movsb
mov
es
mov
sub
sub
rclb
nop
mov
cltd
jge
shrw
iret
add
jnp
clc
stos
jmp
cltd
scas
shlb
decb
mov
test
insl
sub
aam
hlt
sub
shlb
or
mov
lret
js
mov
ficoms
shrl
inc
lahf
cmp
iret
shlb
adc
xor
add
aam
jg
stos
push
inc
xor
xor
into
adc
sub
push
xor
cltd
arpl
arpl
enter
leave
cld
cmp
cmp
out
add
aad
fsubr
cmp
push
sbb
cs
sub
stos
xor
mov
xor
fdivs
rcrb
inc
add
fmuls
sbb
cmp
jmp
mov
jo
or
nop
cld
lods
iret
sub
fcompl
repz
adc
es
push
ret
fimuls
addl
faddp
call
jo
xchg
jmp
into
jo
lock
push
inc
mov
loopne
sub
in
cs
repz
mulb
add
in
jo
jae
push
loopne
cmp
jne
popf
add
cmp
mov
adc
add
ja
push
mov
mov
das
mov
ja
fadds
out
outsl
xchg
push
push
gs
cmp
orl
ret
fcmovnb
jle
pop
dec
cmp
jo
xlat
push
repnz
or
daa
sub
test
sbb
in
xchg
repnz
in
adc
xchg
xchg
sub
xor
adc
ds
lahf
adc
loope
mov
lods
movsb
mov
scas
test
ret
mov
xor
pop
sarb
fcompl
imul
dec
ljmp
jo
mov
jne
outsl
ficomps
cmpsl
ret
add
and
fwait
clc
sub
shl
iret
js
int
pop
mov
mov
les
insb
push
push
push
ret
stc
hlt
fmulp
jmp
sbb
jb
sbb
or
pushf
popf
lock
jle
rorb
into
orl
lret
mov
or
pop
rcrb
ja
shll
mov
shrl
mov
adc
and
xor
clc
jnp
push
xchg
sub
xor
sub
or
inc
aad
bnd
sub
mov
mov
mov
inc
prefetchw
and
or
adc
sbb
stos
icebp
sbb
add
les
shrb
or
hlt
insl
pusha
lret
dec
shl
jno
out
lock
mov
lret
les
call
sub
scas
pop
fists
js
jb
adc
mov
lret
in
pusha
outsb
sahf
adc
push
sbb
stc
push
orb
and
adc
subl
lds
bound
jne
xorb
hlt
andb
cmp
in
out
mov
pop
out
mov
out
cmpl
or
push
pop
push
jmp
jo
out
bound
push
dec
in
mov
aad
nop
push
nop
neg
pop
jg
insl
in
mov
or
repz
push
movsl
add
add
xorb
cmpb
cmp
sub
dec
cld
pop
push
call
cli
lret
es
push
or
loopne
or
mov
add
cmp
in
push
jp
pop
sbb
pop
and
je
cmp
mov
cmp
jl
movsl
sub
jne
xchg
test
cs
daa
div
mov
in
in
jmp
popf
add
add
lret
popf
test
lock
sysret
mov
ss
jb
je
lret
push
add
aas
aaa
jl
fsubl
cmp
icebp
jo
and
ret
or
jg
adc
les
lahf
data16
popa
sub
call
push
mov
xchg
aas
push
jae,pn
sub
leave
in
mov
inc
cmp
add
ret
cmp
hlt
mov
push
mov
sbb
stc
cmp
pop
mov
push
out
mov
fadd
and
lds
loopne
or
dec
adc
mov
insl
loop
mov
scas
lds
or
push
lahf
ret
push
pop
or
mov
or
sub
pop
fwait
xlat
inc
mov
cmc
mov
push
mov
push
mov
in
xor
or
add
out
or
add
add
jl
push
cmp
mov
xor
shlb
out
mov
sbbl
pop
lds
and
out
sbb
sub
sbb
sbb
sbb
ljmp
je
push
in
sub
lds
push
in
pop
in
ds
ret
xor
cld
setg
jg
out
jecxz
nop
lods
xchg
sbb
jl
cltd
loope
jecxz
jmp
jmp
in
pop
mov
pushf
std
jmp
pop
xchg
dec
stc
push
lock
cs
push
fldcw
ds
shl
rep
shrb
push
and
into
mov
cs
mov
ret
fs
sti
pop
sub
inc
lods
ret
outsl
leave
cld
loop
test
or
xchg
or
mov
jmp
dec
lret
outsl
add
jno
push
or
push
repz
orl
inc
pop
inc
xchg
adcb
pop
lods
aas
or
add
or
jl
cmp
sbb
add
cmp
or
nop
mov
in
ret
jae
sbb
enter
push
in
fstpl
int3
clc
sbb
imul
insb
repnz
call
dec
loopne
stc
mov
sub
adc
pushf
cmpsb
xor
iret
sahf
pop
jmp
fsubrs
inc
test
fstpt
dec
jge
or
iret
dec
ljmp
in
inc
inc
cmp
in
fwait
or
cld
adc
sub
mov
lret
and
shl
popa
sub
add
roll
aam
jb
push
decb
les
inc
jl
sbb
fisubs
mov
lret
adcl
adc
mov
hlt
jnp
les
imul
xor
sub
js
dec
sbb
jg
inc
testl
pop
adc
jle
xchg
xor
xor
jno
sub
or
cs
mov
lds
push
pop
mov
loop
sub
popf
pop
pushf
shl
sti
loop
jb
sahf
movsl
add
loope
sbb
adc
adc
sub
fldcw
dec
cmovb
sub
jge
push
rorb
xchg
sub
jmp
movsl
or
mov
sbb
dec
int
xorb
in
xor
jae
cmpsl
xor
push
scas
mov
shl
push
xchg
pop
xor
mov
mov
sbbb
hlt
in
jns
xor
mov
lods
fnsave
pop
pop
jo
loopne
in
or
dec
sarl
dec
mov
inc
and
ljmp
jg
mov
mov
cmp
mov
test
mov
mov
movlps
xchg
dec
ljmp
add
push
out
adc
xor
mov
scas
cmp
cmp
sbb
popl
out
in
and
rolb
and
aaa
loopne
stc
incl
mov
or
mov
mov
add
sub
mov
push
insb
mov
inc
xchg
sbb
cltd
popf
lahf
xchg
jecxz
pop
imul
push
into
test
mov
stc
gs
add
mov
je
stc
sbb
mov
jb
sub
faddp
outsl
mov
sub
test
add
mov
pop
lret
lret
mov
lea
ficoms
jle
cmp
and
mov
lahf
shll
sub
or
or
or
jmp
push
xchg
jns
and
sar
fidivs
fstpl
pop
hlt
cmp
jecxz
les
xchg
push
xchg
divb
jnp
scas
dec
out
jmp
arpl
je
dec
sub
shlb
inc
inc
sbb
clc
out
sar
push
stos
fisubrs
ret
dec
cmpsb
and
inc
dec
les
stos
out
es
cmp
cli
add
call
pop
fwait
shrb
aam
pop
aad
roll
xchg
hlt
dec
lahf
pop
xchg
mov
cmp
lret
mov
lret
fimuls
lret
push
and
nop
mov
into
sahf
jl
adc
ficompl
sarl
adc
repz
adc
adc
adc
xchg
es
add
xchg
popa
adc
add
push
aam
mov
mov
sub
adc
or
adc
adc
jmp
cmp
jns
je
jl
fiaddl
pop
cmp
push
imul
stos
mov
ljmp
jmp
popf
shlb
inc
xchg
inc
sub
in
adc
data16
in
aam
fmuls
inc
mov
jg
in
je
xchg
aam
sub
mov
jmp
lods
orb
cltd
lret
mov
lret
add
sbb
shlb
lods
push
adc
call
les
dec
enter
add
cmp
and
outsl
push
inc
hlt
jb
mov
inc
adc
sahf
ret
jnp
or
nop
dec
shrl
faddl
pop
sub
outsb
sbb
push
mov
pushf
je
pop
mov
xor
cmp
ret
in
loope
dec
add
loope
lahf
sahf
jmp
enter
sub
jmp
jp
add
sub
mov
jmp
inc
dec
inc
call
dec
outsl
cmpsl
iret
or
add
in
xor
jo
icebp
lret
into
imul
clc
lret
mov
ret
or
dec
add
hlt
and
xchg
fnsave
add
sbbb
aas
ret
imul
rolb
sbb
sub
jecxz
pushf
cmpb
jecxz
cmpb
sub
mov
movsb
movsb
sbb
mov
jo
icebp
nop
rcrb
xlat
fdivl
stc
out
mov
xchg
rorb
shrl
fsubrs
loop
clc
dec
and
bsr
loopne
jnp
pop
jo
mov
inc
mov
xchg
jb
xchg
mov
pop
mov
dec
mov
sub
push
aas
int3
xchg
dec
sbb
pop
xchg
fucom
loopne
sbb
and
add
imul
pop
bound
rol
testb
imul
ret
mov
and
lret
scas
cmp
mov
clc
push
cmpb
in
sub
loope
ret
push
add
les
ja
bound
lret
rolb
test
cmpsb
icebp
push
loope
out
lods
fldl
inc
xor
test
sub
hlt
mov
push
xor
push
mov
mov
lock
stc
and
fidivrl
mov
call
imul
jp
icebp
jno
aaa
sbb
adc
movsb
mov
xlat
movsb
inc
lock
jp
jl
les
pop
sahf
loope
stos
adc
cmp
and
push
int
test
rorb
and
les
pop
pop
pop
cmpsb
lret
outsb
pop
dec
movsl
adc
int
stos
and
idiv
hlt
in
dec
push
dec
xor
push
jns
push
fcoms
shl
push
xor
pop
add
fucom
xlat
sbb
int3
or
lahf
imul
mov
decl
pop
pop
or
in
jg
or
adc
mov
push
cld
or
gs
test
sub
in
xchg
sahf
scas
push
outsl
mov
push
adc
or
sbb
cli
ljmp
ret
mov
xor
sbbb
arpl
in
ds
inc
out
fs
xchg
mov
ret
pop
out
nop
mov
sub
fcomps
repnz
mov
nop
or
xchg
xor
sbb
mov
int3
adc
decl
sub
aad
stos
dec
pop
sbb
aam
adc
rolb
dec
push
sarl
loop
or
int3
mov
inc
or
sbb
addl
cld
shrl
out
insl
xor
loope
mov
ret
adc
cld
mov
out
add
cmpsb
cmpsb
add
cwtl
xor
js
push
pop
or
insl
sbb
rorb
pop
repz
mov
pop
inc
xchg
pop
movsl
sarl
cmpsb
push
adc
xor
lahf
or
add
cmp
inc
fxch
xorl
add
in
ljmp
lahf
test
push
or
lahf
rcl
out
repz
push
push
clts
jg
out
add
loope
sub
stc
inc
mov
hlt
je
loopne
mov
js
cmpsb
int
inc
push
dec
inc
push
jae
push
aas
add
rorl
rcll
xlat
and
fiadds
inc
jle
sbb
add
daa
xchg
add
push
std
adc
js
mov
hlt
repz
incl
inc
xor
jo
out
xor
ja
pop
pop
je
adc
or
lods
aam
adc
shll
jmp
jno
sarb
stos
fnstsw
push
or
add
sub
shll
lods
add
bound
push
xchg
pop
das
stc
cmp
outsl
fldt
ljmp
xchg
repz
ret
cmpsb
test
shll
fmuls
or
mov
add
cmp
addb
loopne
add
in
cld
pusha
addr16
in
rcr
gs
rorb
sbb
push
or
sub
rcr
cmp
rcrb
ja
fldcw
push
pop
lret
les
popf
int3
rcr
sbb
mov
add
and
fsubr
call
scas
ja
jno
adc
adc
jae
push
xor
pop
sbb
aaa
out
fldenv
sub
out
cltd
scas
mov
cli
aas
fnstenv
mov
rcll
in
pop
or
inc
lahf
or
popf
cmp
xor
jg
jg
push
xor
sub
daa
sahf
adc
popf
pop
mov
stc
dec
test
and
add
add
push
mov
add
adc
repnz
out
or
fs
push
lea
or
rorl
adc
frstor
aad
out
sbb
add
repnz
ss
fidivs
scas
out
inc
xor
out
out
push
or
nop
and
xchg
push
aad
lahf
test
dec
out
lock
or
aad
lret
lods
lock
add
add
cmp
adc
lds
inc
int
aad
cmp
outsb
xor
imul
pop
adc
fstl
popf
sub
in
add
insb
outsb
imul
push
add
lods
iret
fs
xchg
pop
lcall
bound
sub
xchg
pop
pop
inc
pop
outsl
pop
ds
and
clc
sub
and
sbb
int
call
fistpll
cmp
mov
out
int3
test
mov
jmp
hlt
jg
ss
dec
mov
ljmp
add
hlt
sarb
pop
push
add
je
push
add
js
shll
hlt
xchg
cmp
mov
jg
mov
sbb
adc
mov
cltd
rorb
or
sbb
push
adc
add
jl
sub
shlb
into
lret
icebp
ds
hlt
adc
xchg
imul
sbb
and
movsb
in
mov
jns
pop
in
mov
cmp
or
and
repz
in
and
out
loop
cmp
cmp
jmp
jl
inc
bound
push
movsb
mov
push
cs
ja
add
call
popf
xor
jmp
push
push
dec
sbb
dec
jns
cmp
jle
dec
pop
xchg
fidivs
rol
adc
push
or
xchg
dec
xchg
js
adc
roll
ljmp
addl
mull
cmp
fmuls
loop
or
jmp
push
xchg
or
rorl
in
push
xchg
scas
jle
adc
imul
out
outsl
jae
std
jae
mov
scas
mov
gs
fidivl
adc
mov
rorb
mov
jl
and
dec
xor
out
inc
movl
fbstp
lcall
imul
push
mov
sbb
and
xor
sbb
xor
and
mov
mov
repnz
mov
sbb
rcr
iret
test
push
mov
aam
and
adc
inc
repz
jge
sbb
sub
or
lods
push
sbbb
addb
mov
dec
pop
pop
fwait
movsl
or
add
out
adc
pushf
dec
lahf
adc
int3
push
jo
sub
jl
add
pop
add
mov
shlb
xlat
incl
pop
push
test
inc
jne
jecxz
mov
leave
js
outsl
ja
push
mov
and
cltd
adc
leave
sbb
mov
or
add
pop
sbb
repnz
adc
adc
mov
dec
pop
or
push
jg
lret
mov
hlt
outsl
cmc
fdivr
ret
push
nop
jmp
or
add
pop
push
rorl
add
and
test
dec
sub
dec
push
icebp
sub
and
inc
test
into
pop
xchg
repz
xor
xor
cmp
xor
mov
mov
aas
fistpl
xor
js
mov
or
sbb
adc
mov
mov
sub
xlat
mov
mov
enter
loope
adc
mov
repz
daa
pop
clc
push
pushf
mov
add
loop
and
jo
add
adc
dec
or
xor
or
cmpsl
mov
mov
out
fcompl
std
sub
push
xor
in
cmc
xchg
shl
cmc
cmp
sahf
sub
xor
and
push
stc
jge
push
push
cmp
andl
cmpsl
adc
add
and
icebp
lcall
mov
cld
jge
cwtl
test
push
fcmovnu
gs
adc
cmpsb
repnz
sbb
add
stc
xchg
nop
pop
cmp
leave
je
add
pop
push
push
shlb
or
lret
cmc
inc
and
ficoml
sub
repnz
dec
cli
dec
imul
pusha
mov
xor
xchg
lods
pusha
es
push
or
insl
pop
add
lahf
add
lahf
dec
repnz
addb
xor
je
lock
popf
addb
pop
faddp
inc
iret
dec
stc
adc
mov
int3
sub
adc
and
ds
adc
cli
out
sub
pop
pop
testb
add
cmp
lea
sbb
stc
pop
int3
jns
jne
dec
push
jae
cltd
testb
cwtl
or
push
jecxz
in
fsubrp
add
or
scas
or
adc
xchg
xchg
mov
push
jns
nop
inc
mov
stc
daa
rcrl
add
sbb
ret
and
adc
ss
neg
stos
and
jmp
jecxz
ret
scas
mov
lock
in
cld
sbb
lret
lea
fnstenv
mov
pop
xchg
mov
push
xchg
add
add
loopne
or
iret
or
jge
mov
stos
mov
fstcw
sbb
cmp
jg
add
add
in
mov
sub
aad
sti
mov
aam
inc
mov
xchg
nop
aaa
lods
add
mov
jmp
adc
stc
mov
ret
mov
test
rcrb
sbb
mov
cmpsb
fcmovnb
jns
aad
daa
add
dec
out
stos
je
xchg
jmp
push
fwait
cmp
outsb
inc
jae
or
mov
sbb
iret
add
sbb
jp
sub
movsb
or
stos
and
jg
xchg
mov
pop
push
jo
adc
aaa
test
push
pop
jae
sbb
rol
and
push
sbb
lret
push
ficoms
pop
sbb
ficoml
xchg
outsb
in
test
cmpl
in
dec
mov
mov
mov
ror
lock
scas
add
into
xchg
xchg
pop
je
dec
cmp
sbb
scas
sub
mov
xchg
sbb
mov
pop
xchg
lcall
cmpsl
mov
xchg
popa
xor
into
xor
arpl
adc
mov
add
mulb
out
push
push
xor
pop
xchg
push
push
cmp
inc
dec
adc
mov
jbe
adc
xchg
popl
push
repz
lods
adc
popa
iret
int3
jne
test
pop
shl
mov
xchg
and
mov
sbb
repnz
mov
mov
sbb
mov
aam
loop
lahf
sti
push
mov
ss
gs
and
or
xchg
dec
jmp
loopne
pop
out
mov
cmpsl
push
jle
sbb
pop
inc
pushf
sahf
das
sub
xor
into
dec
adc
adc
cmc
jl
and
jbe
jecxz
mov
sub
nop
add
and
pop
pop
add
adc
prefetch
or
xchg
js
fsub
add
out
or
sbb
call
gs
push
nop
pop
or
mov
lock
stc
inc
in
mov
movlps
jmp
pop
es
aad
icebp
or
mov
or
call
int3
in
push
bound
pop
nop
mov
dec
imul
push
adc
or
lock
dec
push
xchg
jae
xor
jno
fisttpl
xorl
fsubs
xor
pop
lret
cmp
mov
mov
and
adc
lahf
mov
nop
mov
movsb
pop
sbb
sub
loop
add
in
lock
loop
add
repnz
insb
arpl
push
or
adc
enter
xor
xor
xchg
or
sarl
add
adc
push
sbb
push
ljmp
lea
ss
dec
xor
shl
dec
push
rorb
pop
sub
fstpl
jo
mov
sub
pushf
bound
loope
and
ret
inc
or
or
add
and
test
ss
ficompl
daa
repz
into
in
push
stos
dec
or
cmp
aaa
or
xor
lcall
push
lret
je
bound
mov
xor
sbb
or
xchg
je
xlat
push
sbb
lahf
fs
inc
out
adc
and
les
clc
cmc
sub
fcmovu
jle
add
pop
bound
add
add
sarb
add
mov
mov
push
and
lret
fimuls
mov
out
and
push
gs
fsubrl
loopne
sbbb
test
aad
inc
add
faddp
cli
and
dec
pop
xchg
mov
jmp
mov
test
imul
pop
cmpsb
inc
mov
mov
sub
mov
xchg
adc
adc
xor
add
xchg
cmp
in
cmp
or
push
or
les
xor
dec
or
sti
push
nop
stos
push
in
mov
xor
xchg
scas
jno
les
adcb
orl
gs
lds
mov
mov
dec
lods
ret
mov
inc
jl
xchg
jb
push
mov
into
ljmp
xor
push
mov
push
add
repz
ja
adc
add
mov
mov
xchg
adc
mov
or
sbb
iret
lock
rep
daa
push
in
jne
movsb
lcall
add
lds
ds
inc
leave
jns
call
in
loopne
enter
push
sub
mov
or
je
loope
sti
sbb
xor
hlt
mov
sub
stc
lods
dec
fwait
or
lret
xchg
or
sbb
jl
movsl
mov
stc
push
jno
sub
mov
add
sub
and
notl
mov
and
test
xchg
sbb
xchg
fadd
fwait
adc
in
sbb
mov
and
xchg
repz
dec
adc
jp
xchg
dec
hlt
push
sub
xor
mov
add
push
enter
or
mov
xor
mov
xor
add
ret
mov
jmp
mov
fwait
icebp
arpl
sbb
sub
les
dec
add
sub
fisttps
inc
lcall
sbb
jb
mov
pop
cmp
mov
or
roll
pop
fwait
adc
loopne
add
sbb
repnz
cmpsb
mov
add
iret
xor
push
pop
aad
shl
xorl
or
add
int3
or
or
and
lods
pushf
xor
lods
add
int
adc
xor
test
or
and
xor
lahf
mov
xlat
dec
ds
and
cli
ficoml
test
mov
ret
or
fstpl
mov
out
dec
add
roll
pushf
lahf
and
pop
adc
ljmp
push
xchg
push
in
or
or
iret
adc
cmpsl
mov
adc
adc
adc
arpl
push
push
mov
clc
mov
int3
adc
add
mov
rcrb
mov
repz
andl
ret
sbb
clc
push
movsb
pop
out
push
jl
or
repz
jl
xor
ret
mov
and
repz
mov
or
sbbl
sub
mov
mov
ds
lods
ficoml
lods
sahf
add
jno
or
decl
xorl
inc
imul
hlt
push
in
sbb
fimuls
lahf
adc
jb
aad
sbb
ror
arpl
data16
cmp
inc
unpckhps
mov
dec
sahf
sbb
push
stos
aam
les
cwtl
add
adc
jno
lock
std
ret
lock
insb
dec
pop
jl
mov
movb
inc
mov
popf
stos
in
in
mov
ret
in
repz
sub
add
jno
lock
fisubrl
je
mov
lahf
in
sub
repnz
lret
cld
in
stos
loopne
in
xor
int
sub
pop
cld
xchg
lret
xchg
gs
or
adc
mov
mov
cmp
aaa
out
lock
in
mov
enter
xchg
pop
cmp
lds
push
into
push
add
jecxz
imul
mov
out
iret
fbld
fstpt
jmp
adc
cmc
sub
xor
pop
or
pop
mov
push
push
mov
inc
addr16
or
xchg
and
fidivs
int
ds
or
int3
xorl
into
enter
pop
les
lock
or
daa
xor
push
xor
and
ror
call
mov
ret
sub
xchg
mov
mov
dec
sub
dec
jns
pusha
mov
and
jl
movsl
ret
sub
add
xor
cmp
adc
push
imul
pop
mov
mov
movsl
sti
adc
dec
jmp
imul
xchg
push
ja
sub
lret
pop
xor
in
mov
mov
mov
repnz
call
add
jl
mov
mov
test
cmpsl
push
or
mov
clc
dec
test
jecxz
je
jl
dec
fcoml
and
adc
dec
jns
dec
xchg
jae
imul
jo
in
lret
mov
or
enter
sub
xor
sbb
push
add
xchg
test
inc
fmulp
xorb
mov
cmp
scas
and
inc
or
hlt
inc
pop
imul
stc
xchg
lahf
pop
ljmp
fstps
sub
jl
mov
rclb
xor
xchg
push
neg
andl
sti
iret
inc
dec
xchg
cli
adc
sub
cmp
add
loope
insb
jmp
sti
neg
add
jecxz
sbb
stos
std
sub
leave
cltd
xor
loope
push
xchg
mov
add
test
sub
and
mov
andb
lods
cld
jp
add
pop
pushf
sub
test
pushf
push
scas
sbb
push
mov
mov
mov
shll
xchg
repnz
adc
clc
sub
sbb
mov
xor
mov
lahf
sbb
xchg
mov
cmp
sti
cmp
scas
mov
dec
dec
push
or
aaa
rcrb
xchg
adc
stc
push
sub
test
xor
sub
pop
ret
xchg
outsl
lret
insb
mov
mov
shl
adc
sub
std
repnz
sub
pushf
in
or
jmp
into
mov
aas
iret
sub
aad
mov
pop
call
notl
add
mov
xor
or
push
or
pushf
or
or
mov
cmp
pop
insb
cwtl
xchg
push
gs
rcll
and
adc
fcoml
lahf
fbstp
notl
ret
loopne
adc
lahf
adc
or
incl
rclb
in
add
push
sub
mov
mov
adc
cmp
int3
pusha
adc
xlat
jl
fisttps
cmp
xchg
test
dec
xchg
out
into
pushf
rorb
xchg
mov
out
inc
mov
dec
add
dec
pop
dec
test
inc
jmp
mov
outsb
and
in
adc
cli
pusha
dec
mov
daa
add
lahf
lds
adc
mov
stos
pop
je
cmp
pop
xchg
dec
pushf
pop
mov
jg
xchg
js
imulb
hlt
nop
pusha
in
lods
test
or
inc
fistpl
adc
orl
fisttpll
pop
pop
sbb
bound
push
inc
dec
enter
dec
dec
push
or
pop
fxch
addl
dec
dec
pop
ret
and
mov
dec
cmp
dec
mov
ret
stos
call
out
push
repz
rolb
mov
pusha
cmp
push
orl
les
sbb
imul
leave
int3
fnstenv
sbb
mov
xchg
add
les
cld
mov
in
adc
add
pushf
pop
sub
add
loope
in
adc
aad
insl
aad
push
stc
jne
xchg
mov
into
push
loope
add
push
xorb
inc
xchg
enter
das
push
and
xchg
ret
pusha
mov
adc
xor
test
jmp
mov
ret
jl
dec
lar
ret
jl
icebp
roll
cld
and
out
jns
pop
sub
scas
mov
push
js
lea
out
mov
sbbb
sub
xchg
mov
test
sub
and
lret
dec
fs
fistpl
clc
jmp
mov
sbb
mov
mov
aad
xchg
in
or
or
psrlw
mov
push
incb
aam
mov
lock
sti
popf
push
and
push
pop
dec
dec
movups
push
add
push
bound
sarb
xchg
stc
pusha
lret
push
inc
loopne
xor
lret
pop
mov
push
mov
shrb
inc
xor
jne
ret
pop
aas
repz
jb
into
inc
or
jae
sub
int3
pushl
fwait
bound
xor
scas
and
int
movsb
inc
in
jae
in
pushf
sbb
add
lods
and
sbb
jle
ret
mov
add
divl
push
lahf
adc
pop
push
adc
adc
jnp
arpl
xchg
or
rclb
mov
int3
pusha
pop
sub
loop
add
jl
pop
mov
jg
arpl
jecxz
push
in
push
aas
out
hlt
inc
sti
insb
lea
or
sarb
icebp
pushf
sarb
stos
dec
cmovbe
dec
xor
push
mov
fstpl
or
cmc
orl
addr16
or
loopne
int3
pop
and
gs
adc
sbb
add
mov
mov
push
adc
in
mov
icebp
loope
jb
loopne
in
shlb
mov
mov
out
popf
or
jp
das
sarb
push
push
jecxz
incb
pop
in
out
ror
pusha
sbb
imul
in
lock
adc
mov
pop
jmp
jns
mov
test
sub
mov
in
mov
xchg
mov
lods
lock
push
fucomi
je
leave
xor
loop
sub
out
leave
mov
or
hlt
enter
sbb
cwtl
push
mov
jnp
sbb
stos
or
sub
mov
les
stc
and
mov
sub
sub
pop
imul
outsb
cmp
add
push
iret
popa
repnz
sti
xchg
mov
dec
dec
loopne
sbb
enter
sbb
push
cmp
push
cli
adc
jbe
cmp
ret
jg
out
sub
and
push
lods
ror
out
sub
lea
jnp
mov
push
sbb
out
sbb
filds
out
lds
sbb
jecxz
add
mov
push
push
push
ret
scas
mov
adc
out
push
adcb
xchg
adc
mov
repz
scas
adc
add
sbb
ret
outsl
adc
pop
aam
sbb
sbb
subl
out
and
add
push
lahf
mov
mov
sbb
pop
rolb
xchg
les
mov
in
cmp
in
pop
imul
or
mov
inc
sbb
jge
xchg
loopne
adc
or
rclb
mov
xchg
sub
ficomps
iret
out
jl
shlb
xor
stos
rclb
push
push
dec
nop
pop
gs
pop
leave
or
or
push
ds
push
xor
or
scas
dec
mov
push
and
adc
lock
int
jmp
or
sbb
nop
mov
ret
adc
jg
leave
les
adc
lahf
adc
rol
push
lock
ds
mov
fstpt
incl
scas
repnz
pop
mov
pop
adc
and
push
mul
dec
push
es
push
mov
cmp
or
nop
fs
or
and
in
mov
cld
push
jns
cmp
in
sbb
fs
sti
mov
in
and
add
push
xor
inc
xchg
cmp
in
lahf
cmpsl
inc
mov
or
xchg
add
push
rorl
aam
add
mov
outsb
and
adc
out
add
mov
jmp
sahf
jp
loopne
add
bound
mov
adc
aaa
popa
rorl
lret
mov
cld
or
stos
loopne
loop
jmp
pop
sub
inc
jnp
add
push
das
push
in
jbe
or
xor
xlat
and
in
mov
xchg
mov
or
sub
add
jecxz
or
into
addr16
pop
js
insl
and
sbb
dec
aad
jae
jl
sub
mov
add
test
les
jl
inc
lcall
sub
pop
lahf
and
in
sti
aad
mov
xchg
in
cmp
pop
xor
shr
mov
adc
ficomps
lock
loopne
or
loope
fmuls
jb
cmp
rcll
scas
sti
push
and
cld
int
ss
pop
or
sub
mov
ficoml
test
mov
pop
incl
mov
push
pop
mov
mov
adc
movsl
rclb
xchg
daa
xchg
adc
shlb
stos
adc
fsubrs
ja
adc
adc
and
out
ljmp
inc
mov
les
in
adc
hlt
fisubs
jb
lods
add
xor
in
adc
testb
xor
sub
push
stc
iret
cmp
les
adc
and
or
mov
add
xor
mov
jmp
pop
repnz
sub
rorb
mov
or
xchg
stos
fistl
int
data16
mov
xor
test
and
add
mov
dec
cmp
test
leave
pop
outsb
jecxz
inc
shrb
pushf
sbb
cmc
imul
fidivs
mov
cmp
pop
out
scas
sub
iret
mov
xor
mov
add
sbb
fwait
sub
push
loopne
jmp
in
mov
repz
lahf
inc
aad
jl
cmp
pop
mov
lock
add
add
mov
jl
repz
fwait
add
or
add
loop
outsb
out
add
loope
add
push
mov
or
lds
push
fiadds
mov
xchg
repnz
mov
adc
and
int3
dec
and
insb
ds
cwtl
adc
int
mov
cmpsl
sbb
mov
xor
push
adc
mov
adc
mov
ror
sbb
shufps
daa
pop
mov
loopne
xchg
nop
scas
je
xchg
and
push
mov
push
cmpsl
cmp
jns
cli
negb
jecxz
or
push
push
xchg
cli
aad
mov
repnz
stos
and
cmp
loop
xor
sub
stos
and
pop
call
rolb
test
movaps
mov
fisubl
sbb
mov
jae
jmp
adc
xor
pop
fs
les
stos
adc
mov
add
xchg
adc
xchg
push
push
sub
in
jb
xchg
es
das
adc
cmp
fwait
add
icebp
and
jbe
add
jmp
xchg
fmulp
rcrb
les
lea
addl
in
jl
mov
int
addl
int3
rcrl
mov
cld
or
xchg
push
add
sbb
add
adc
fdivrl
lret
sub
sub
mov
daa
dec
mov
or
pushf
jo
sahf
cmp
testl
aam
fmul
adc
sub
sub
add
mov
push
aad
mov
int3
enter
fiaddl
test
push
dec
push
mov
in
int3
inc
jg
xchg
rorb
or
add
das
iret
jnp
insb
rcll
push
sub
cmp
rcrl
test
fwait
and
sbb
dec
push
sub
or
cld
push
sti
xchg
jns
mov
and
push
or
add
jecxz
lock
mov
adc
stos
xor
loop
inc
out
aad
jmp
dec
push
push
in
insb
and
push
xchg
add
mov
negb
add
into
xlat
out
mov
fwait
insb
das
lret
inc
inc
push
out
lcall
push
xchg
adc
pop
repz
sar
sbb
repz
cmp
push
sbb
test
test
push
imul
nop
pop
jge
push
sub
rclb
add
xor
lcall
arpl
or
dec
push
or
push
lods
cs
xor
mov
jp
das
aam
in
xor
cmp
xchg
ret
mov
mov
sub
out
out
ficomps
pop
cmc
clc
movsb
cltd
jbe
pop
fimull
cmpsb
dec
fcmovnb
mov
xorl
mov
pop
gs
js
in
mov
je
shlb
push
rcrl
dec
aaa
or
jo
inc
mov
stos
sub
repnz
pop
int3
int3
add
insb
pushf
flds
mov
stc
jnp
out
inc
mov
mov
test
jbe
inc
push
roll
divb
jl
les
sub
pop
aaa
gs
pop
mov
out
clc
mov
sbb
mov
push
pop
sbb
mov
lock
add
out
cmp
sbb
add
or
je
mov
adc
loopne
or
push
out
ja
lcall
les
es
mov
jp
int3
xchg
cwtl
test
addb
cmpsb
shlb
rcr
or
jp
sbb
cmpsb
call
adc
jmp
or
mov
call
and
fnsave
jmp
in
adc
xchg
xor
incb
sub
in
sub
repnz
fwait
push
jge
mov
xor
inc
pop
jmp
inc
loopne
pop
lods
add
mov
adc
cmp
dec
in
scas
fs
dec
cwtl
stc
dec
mov
test
xor
inc
insb
adc
add
xor
aad
je
dec
mov
enter
fdivr
sub
adc
pcmpgtb
xor
pop
adc
inc
sbb
leave
adc
popa
inc
outsl
aad
xchg
or
xor
rcll
popa
cmc
push
loope
in
or
or
lahf
xlat
fiadds
pop
outsl
mov
sti
inc
stc
push
leave
les
dec
dec
push
gs
adc
jne
cwtl
mov
cmc
pop
lds
pop
push
pop
lea
shll
push
js
xchg
jns
mov
ret
in
adc
mov
out
sbb
mov
mov
movsb
dec
stos
lods
fwait
push
adc
lock
sbb
and
imulb
mov
adc
jmp
add
xchg
mov
clc
xchg
mov
aam
ljmp
sub
incw
jmp
push
in
mov
mov
mov
mov
dec
addb
out
les
mov
xchg
mov
mov
fisubrs
shl
ljmp
xchg
mov
mov
shlb
or
aaa
mov
pop
sti
jecxz
int
xor
cmp
test
xor
scas
lahf
int3
or
pusha
and
sbb
fcoms
fistpl
mov
ljmp
pmullw
jb
sub
popa
arpl
dec
nop
pop
pinsrw
mov
test
nop
sbb
enter
dec
cmp
pop
or
mov
dec
fwait
std
add
add
adc
outsb
pop
scas
or
mov
fsubs
xchg
in
add
in
clc
xchg
jae
push
xchg
and
cld
rolb
cmc
pusha
ja
inc
mov
sbb
and
add
fnsave
stos
xchg
cmp
push
scas
push
fldt
movsl
outsl
rol
ljmp
and
icebp
sub
movsb
cmp
cld
or
adc
cmp
sbb
add
clc
xchg
roll
cmp
xor
adc
fistpl
out
cs
and
test
fildll
lret
loopne
jmp
xor
xchg
mov
ret
das
loop
test
dec
loop
mov
nop
hlt
pop
or
mov
insb
mov
xor
sub
inc
outsl
ret
scas
cmp
fadds
inc
jne
int3
fiaddl
test
push
mov
adc
mov
mov
clc
xchg
jle
ret
add
or
mov
cwtl
pop
cli
loopne
pop
mov
jne
adc
add
fistpll
sbb
xchg
mov
lret
xchg
jo
fbld
push
ret
xchg
sub
jb
and
cld
dec
ljmp
pop
inc
test
aam
inc
test
out
add
sub
in
rorb
sub
jb
nop
adc
nop
add
inc
push
fcompl
jecxz
outsl
sarb
repz
jge
fnstcw
out
inc
outsl
sbb
dec
pop
and
das
cs
bnd
jmp
lahf
lret
out
or
movsb
ret
mov
ds
mov
in
mov
shlb
rcr
jmp
roll
and
and
shll
sbb
leave
dec
jle
adc
stc
gs
or
pop
call
xor
and
add
fsubp
xor
push
or
lahf
stos
aad
and
rorl
fidivs
rcll
out
inc
repz
movsb
pusha
test
sub
and
andl
sarl
cmp
ret
insl
xor
xor
in
mov
sbb
jmp
mov
pop
hlt
and
pop
jecxz
lcall
push
je
cmp
mov
les
mov
mov
lret
xor
in
cmp
sbbl
and
and
cltd
mov
in
lcall
faddl
mov
mov
push
imul
insl
jp
mul
mov
fldt
pop
jle
xchg
loopne
shr
js
mov
add
fwait
xor
enter
sub
sarl
mov
cmpsb
add
or
stos
out
int3
or
in
xchg
js
repz
dec
add
jae
ret
or
test
xchg
mov
pusha
push
into
sbb
fsubrs
andb
loope
lds
pop
or
rorb
xor
add
repz
push
cmp
loop
add
add
push
mov
mov
adc
push
aad
leave
popf
lock
nop
xor
push
movl
cmp
and
mov
mov
rcrl
pop
inc
jne
call
mov
mov
lret
xor
ds
lock
les
mov
aad
pop
std
ret
fmull
ud0
lret
dec
dec
mov
dec
iret
cmp
xchg
lret
and
push
cmc
aad
hlt
ret
sub
scas
cmp
and
scas
lds
or
and
mov
call
int3
or
stos
and
add
ret
xchg
rclb
fdivs
pop
cs
jge
sti
mov
mov
mov
insb
test
push
fsubrs
add
aaa
insb
lods
negb
sub
pop
xchg
fnstcw
std
or
flds
movsl
pushf
test
or
jb
pop
mov
ret
jecxz
mov
adc
and
inc
lock
push
scas
sti
mov
aam
xor
fisubrs
lock
mov
xchg
push
push
clc
adc
push
jge
in
jl
pop
sub
fucomi
push
dec
dec
cmp
fcompp
adc
lock
jo
cld
int3
in
cmp
sub
mov
out
sbb
ja
add
outsb
ret
popa
add
in
sub
int3
mov
inc
outsl
ja
es
shl
ret
jo
hlt
enter
mov
aas
add
bsr
add
loop
fstpl
inc
popa
dec
mov
push
out
inc
inc
pop
stc
pop
push
sahf
mov
sti
mov
je
xlat
test
xor
xor
cmp
pop
lock
es
mov
mov
in
mov
mov
lahf
inc
adc
das
mov
adc
add
sbb
jle
push
xor
stc
xlat
inc
lahf
or
sub
in
xor
psubq
mov
cmp
arpl
fcmovnbe
stc
push
ficompl
and
ds
mov
sysexit
test
and
sub
lods
js
or
int3
pop
repz
std
inc
and
xchg
cmc
cmpsl
ret
call
sti
into
adc
or
push
cld
or
mov
xor
cmp
cld
scas
adc
mov
push
ljmp
mov
les
xchg
scas
cmc
hlt
or
mov
lret
sbb
pop
jg
addr16
aad
lock
in
and
mov
jmp
sbb
clc
popa
int3
add
rol
push
jmp
dec
sarb
imul
pop
rolb
lods
fs
mov
sub
imul
inc
imul
je
imul
adc
andb
push
hlt
mov
jne
xor
out
push
fmull
pop
fsub
mov
mov
sub
or
xor
lret
cmc
jl
out
xchg
popf
mov
mov
sbb
xchg
fsubp
ret
mov
push
xlat
pop
lcall
ret
into
xor
push
mov
sahf
cmp
dec
or
push
or
aam
shl
ja
test
in
aam
fcoms
fisubl
out
mov
push
jbe
xor
stc
add
push
fmuls
xorb
dec
cmpsb
sub
dec
jne
add
mov
fidivrl
sti
xchg
stos
add
outsb
repz
sub
mov
push
mov
push
lods
ret
stos
xchg
lods
ss
inc
fstpt
and
nopl
xchg
int3
dec
push
sub
sbb
mov
xor
and
out
ret
inc
inc
add
ror
ja
ret
mov
mov
mov
es
cs
mov
or
jge
sub
rclb
lea
lods
pop
inc
jl
xor
adc
lods
cmp
or
adc
or
cmp
lds
inc
psllw
test
dec
or
lods
mov
pop
adc
mov
mov
dec
pop
cmp
ret
mov
andb
cmp
cmp
mov
jecxz
repnz
pop
in
mov
cmp
rol
sub
sub
mov
xchg
push
icebp
inc
insb
aaa
inc
or
adc
adc
xchg
adc
out
popa
cs
les
add
jo
jp
cmp
sub
sarb
les
sarl
xorl
mov
mov
cmpsl
jmp
ret
lret
aas
lods
lret
xor
lds
mov
push
sub
leave
inc
rcll
inc
cwtl
dec
out
jl
subb
lret
pop
stc
in
in
movsl
rcrb
ret
jg
dec
or
and
mov
cld
test
leave
rcrb
pop
imul
mov
fstps
loop
push
clc
xchg
fnstcw
imul
mov
into
je
cmp
lcall
adc
mov
fucomi
or
adc
xchg
xchg
push
pop
push
add
hlt
lods
xchg
adc
add
fnstsw
fwait
imulb
daa
cmpsb
icebp
jmp
rorl
jmp
dec
or
dec
mov
out
sbb
jns
insl
sbb
sbb
or
cmp
cmp
arpl
cmp
add
hlt
xlat
inc
das
ds
movsb
jle
popf
jmp
mov
xchg
push
adc
shr
adc
into
call
popf
ds
sbb
loop
addl
jge
cld
jmp
lock
mov
xor
pop
jae
adc
cmp
arpl
mov
insb
lsl
addb
or
adc
add
add
mov
mov
mov
out
pop
jne
pop
fnsave
rcl
cmp
mov
add
adc
mov
or
mov
ja
aaa
sub
aaa
ret
fdivl
out
rcll
mov
lahf
mov
out
in
cs
xor
lret
mov
enter
fwait
sub
stos
mov
nop
rol
jmp
in
push
arpl
rcrl
testb
push
rcrb
stos
push
lods
add
pop
repnz
mov
stos
or
mov
and
les
dec
adc
jge
sub
push
jg
shll
les
mov
insl
repnz
in
or
sub
sub
lret
mov
xlat
lea
insl
push
mov
pop
sub
or
cmpsl
jnp
sbb
out
pop
sbb
nop
nop
sbb
or
addr16
or
cmp
int
stos
jae
lret
loop
es
out
cmp
push
jge
nop
sbb
out
jg
inc
and
ds
jb
jp
jo
add
mov
and
pop
jb
push
nop
aaa
movsl
cmp
scas
sub
cmp
add
mov
dec
aad
cmp
in
jle
movsb
lock
out
inc
adc
shll
push
rorl
daa
mov
or
push
jmp
sbb
xchg
adc
mov
js
dec
xlat
and
fldenv
xor
lret
push
sti
imul
cld
stc
xor
and
or
mov
sbb
lods
or
out
add
insl
rorb
jne
lds
mov
outsl
ror
rorb
sbb
in
mov
test
subb
push
adc
xor
xchg
sbb
cld
or
insl
movsb
inc
sbb
out
repnz
adc
lods
pop
mov
sub
icebp
add
insb
or
mov
fldcw
fistps
repnz
scas
or
sub
mov
notb
inc
adc
cmp
xor
or
pusha
or
pop
jmp
inc
dec
gs
out
cmp
les
lods
ret
ljmp
jl
nop
sub
and
dec
mov
stc
fnsave
stos
mov
cmc
sbb
mov
adc
inc
jns
push
sub
hlt
add
in
sbb
push
jg
aam
or
sub
push
push
xorb
jns
outsl
mov
sub
or
jg
mov
jmp
xchg
xchg
adcb
or
mov
mov
ret
ret
mov
out
aad
adc
or
sbb
xchg
dec
mov
cmp
shrl
add
fs
jae
lahf
cmp
cmp
push
cmp
adc
cld
and
mov
aam
out
ds
adc
mov
adc
daa
inc
lock
pop
sbb
ret
cmpb
cmpsb
jmp
rorb
lock
pop
pop
or
arpl
ja
fs
xor
add
movsb
ljmp
lock
sar
mov
jle
push
nop
mov
xor
mov
rclb
or
or
pusha
jmp
int3
gs
imul
mov
push
jg
std
stos
mov
mov
nop
ret
push
in
sbb
sbb
adc
sbb
inc
les
lret
fwait
std
or
out
aaa
sub
adc
or
cmp
or
hlt
mov
pop
jo
andb
in
int
adc
stos
adc
repnz
les
pop
leavew
mov
orb
pop
xchg
sti
jge
jo
sbb
xlat
jno
iret
dec
push
inc
pop
pop
stc
adc
orb
inc
cmovo
xor
sub
repz
or
or
dec
mov
or
jo
aad
xchg
xor
sahf
mov
in
mov
xchg
mov
adc
adc
sbb
sbb
fstl
outsb
cmc
or
dec
or
add
popa
fidivrs
popf
push
sbb
sbb
int3
cmc
mov
test
out
inc
jno
push
add
pushf
out
or
xchg
popf
js
jo
cmp
jnp
add
lahf
std
stos
arpl
or
stos
out
push
pop
xor
or
ret
xor
and
and
or
mov
and
mov
data16
fcomip
loope
mov
add
xchg
les
popf
or
das
xchg
xchg
setle
loopne
imul
jnp
sub
push
fs
mov
or
sbbl
adc
jmp
or
leave
adc
insl
xchg
je
stos
les
xor
add
xchg
test
add
int
es
or
mov
dec
je
testl
les
in
stos
fdivr
cltd
out
ret
xchg
leave
and
dec
fiaddl
clc
std
inc
dec
movsl
loopne
mov
mov
dec
push
inc
ljmp
into
lds
loop
jle
or
into
gs
mov
mov
repz
mov
pop
popf
jae
jo
psubusb
hlt
add
xor
cld
mov
mov
adc
jnp
cmp
mov
sub
in
add
clc
sub
test
aam
hlt
and
mov
dec
lds
inc
mov
or
xchg
mov
pop
fmuls
aad
jb
leave
movsl
jl
and
lock
pop
sahf
int
sub
hlt
mov
test
rcrl
enter
mov
or
dec
bound
das
inc
test
insb
stc
into
add
add
cmp
popf
push
enter
shrb
sub
lods
sub
add
mov
cmp
mov
or
push
repnz
sbb
pop
aad
inc
push
mov
lods
lcall
popf
test
lret
faddp
add
add
mov
adc
ret
xor
dec
aas
es
pop
cmpsb
dec
outsb
mov
out
nop
dec
incl
cmp
dec
lock
push
adc
adc
sub
leave
xor
dec
fldt
pop
insl
jecxz
repnz
dec
add
pusha
outsl
pop
jmpw
imul
xor
rcll
cltd
movb
jge
or
xor
adc
xchg
scas
push
lcall
mov
add
notb
xor
adc
fisubs
or
scas
lret
mull
sub
mov
mov
pop
sub
lret
scas
fistpl
sub
adc
inc
js
pop
outsb
jbe
stos
lret
pop
hlt
fxch
shll
sti
adc
cwtl
iret
rcrb
or
pop
shr
inc
fs
inc
xchg
xor
inc
adc
insb
test
xlat
andl
xchg
lods
aad
dec
jns
mov
dec
sahf
fdivs
clc
mov
pushf
iret
dec
jmp
push
jnp
leave
leave
lret
adc
push
outsl
addb
out
scas
sahf
xchg
xor
test
push
adc
pop
out
rol
or
mov
pop
push
mov
push
mov
bound
orb
add
rcrb
out
sbb
outsl
add
les
cmp
and
dec
jmp
inc
sub
push
xor
sti
rorb
aas
cwtl
imul
adc
les
repnz
out
in
fisubrl
pop
lock
cmp
ret
pop
fcmovne
cmp
dec
loop,pt
jl
iret
push
jmp
sbb
cwtl
pop
cmp
scas
add
adc
shll
add
sti
add
or
nop
in
jb
xlat
cld
jno
insb
popa
mov
cmp
adc
dec
adc
popf
mov
mov
adc
jp
in
loop
push
pop
push
and
into
jb
movsb
das
stos
adc
adc
pop
mov
mov
dec
sub
adc
out
stc
and
cmpsb
jmp
rcll
adc
mov
sti
mov
sbb
adc
or
or
sti
inc
movsb
sbb
xor
rcll
insb
out
push
in
or
rol
cmp
push
adc
movsb
mov
xchg
add
adc
loope
int
jmp
mov
sub
mov
or
dec
and
mov
lock
loope
push
std
xchg
insb
dec
in
call
xchg
adc
push
mov
or
mov
add
stos
and
add
sbb
sbb
insb
xor
or
jl
fstpl
add
push
mov
lahf
push
push
sub
xor
js
push
push
loope
dec
roll
je
cmc
loop
cmovl
dec
xchg
ljmp
pop
data16
sub
mov
dec
dec
enter
outsl
inc
and
loopne
adc
xchg
xor
pop
sbbb
add
xor
cmc
imul
out
xor
mov
or
xchg
sub
push
in
sahf
jb
push
adc
mov
or
lret
sub
setg
or
rep
ljmp
push
movsb
or
aaa
sub
pop
jp
int
out
xchg
mov
dec
lods
adc
lahf
jne
inc
out
loop
or
mov
cmp
sub
cmpxchg
int
and
aad
div
xchg
sub
mov
xchg
pushf
fidivs
ficomps
sub
lock
hlt
xor
sub
cmpsb
push
sti
jne
mov
stos
cmp
mov
stos
add
and
leave
add
in
xchg
scas
sarb
inc
xchg
jbe
into
or
mov
mov
pop
mov
adc
cmp
sbbl
fldl
hlt
mov
push
sbb
mov
fiaddl
cli
mov
ds
mov
mov
mov
add
fcoml
int
cmp
outsb
add
mov
test
loopne
pop
push
fidivs
cs
add
mov
and
lcall
das
addb
sti
lock
add
cmp
pop
cmp
adc
pop
lret
fs
push
outsl
out
fmulp
or
out
sbb
sub
adc
test
pop
lahf
mov
sub
mov
hlt
lret
fiadds
and
mov
ret
adc
adc
adc
in
xor
or
popf
cs
mov
inc
adc
sbb
or
fidivl
repnz
add
adc
rcrl
mul
mov
jmp
pop
test
shll
fldcw
push
rcrl
push
test
jo
fcom
shlb
jae
adc
dec
fdivs
adc
xchg
mov
fildl
jle
inc
cmp
xor
adc
insb
fs
mov
inc
sarl
cmp
popf
enter
mov
push
icebp
outsl
lcall
dec
loopne
in
sbb
xor
fs
add
dec
adcb
mov
add
ret
xchg
inc
test
dec
aas
xor
mov
ret
int3
push
js
lods
or
pop
cli
out
in
and
fiaddl
pop
clc
push
loopne
xor
arpl
adc
push
jb
sub
sub
xchg
stc
dec
push
adc
outsl
push
adc
fwait
out
pop
add
pop
xchg
sub
arpl
mov
repz
sub
repz
sarl
int3
fistpl
fidivrs
cli
add
call
addr16
ja
or
insb
add
cmpsb
in
outsb
xchg
daa
jae
cmpsl
mov
cld
cmp
out
jl
arpl
sbb
ds
sarl
lds
cmp
fs
sub
shrb
punpckhdq
mov
cli
cmc
jp
mov
adc
lock
sti
fdivr
bound
sbb
lock
xchg
outsl
pop
popa
pop
stos
pop
add
hlt
cmc
push
movsb
ret
enter
add
dec
adc
nop
jne
loopne
and
sbb
ret
dec
xchg
sarl
repz
notb
and
fidivrl
je
fdiv
out
sbb
mov
sbb
lock
push
or
fwait
add
clc
movsb
sbb
test
or
sbb
hlt
sbb
sbb
xchg
int3
loope
adc
or
ss
gs
and
repz
aam
mov
push
bndstx
shlb
jae
cmp
inc
pop
cwtl
dec
repz
sub
add
sub
insb
xchg
in
adc
mov
lds
cmc
cmpsb
mov
arpl
sti
xlat
xlat
xchg
out
pmaddubsw
movsl
xor
mov
sub
inc
xchg
and
in
mov
cmp
loop
leave
movsb
dec
repz
push
cmp
or
mov
ror
lcall
mov
sti
xchg
mov
fstpt
push
iret
ss
sub
lret
nop
cmp
cmp
loope
mov
pop
addl
mov
sub
mov
adc
sar
xchg
leave
mov
mov
add
mov
repz
hlt
hlt
pop
sub
pop
bnd
xchg
cmp
sub
idiv
je
cmpsb
push
mov
testl
orb
pop
out
or
xor
adc
movl
repz
jnp
or
mov
mov
cli
outsl
dec
mov
and
mov
push
mov
and
sub
inc
sbb
push
das
push
jg
in
mov
sub
cli
xchg
sbb
icebp
cwtl
jo
nopl
jae
push
jmp
xor
mov
push
push
fstpl
ffreep
shlb
xor
sbb
dec
adc
jo
bound
sbb
test
cwtl
push
lcall
add
les
in
xorb
bound
push
call
or
inc
xchg
std
or
or
mov
jg
negl
clc
inc
jo
cld
mov
stc
inc
jo
jnp
xchg
je
mov
push
xor
fdivrp
lret
push
int3
jne
and
mov
clc
orl
and
xchg
mov
xchg
push
xor
mov
mov
mov
sub
or
jae
mov
stc
in
je
sub
cmp
pop
jnp
sar
sti
sbb
xchg
mov
sbb
push
xor
mov
xor
pushf
fimuls
cmp
rorl
lods
in
lahf
xor
and
in
pop
xor
adc
push
mov
cld
fidivl
cmp
add
aaa
pop
jg
pop
addr16
out
lcall
hlt
popf
fwait
mov
out
int
lods
loopne
xlat
stos
xor
or
shrl
lret
push
jb
or
mov
pop
daa
iret
push
je
sti
ret
int3
xchg
mov
lret
stc
dec
test
sbb
popa
cmp
sbb
iret
shl
xchg
mov
stos
bound
xlat
je
rol
mov
cmp
jo
pop
adc
lods
mov
data16
fst
adc
jmp
push
fiaddl
loopne
xor
scas
push
xchg
xchg
in
fsubl
jmp
push
push
jmp
rcrb
ficoml
xor
push
mov
adc
ss
inc
and
es
or
mov
sbb
sbb
imul
add
ds
je
pop
ret
test
nop
adc
cmp
repnz
jle
sti
pop
rclb
mov
inc
xor
int
movsb
push
mov
mov
popl
xchg
inc
or
cmp
jnp
rcl
or
mov
hlt
xor
outsb
pop
scas
inc
xor
rol
mov
push
popf
fdivr
fimull
pop
xchg
xor
xchg
movsb
push
cwtl
mov
adc
call
push
sub
adc
into
add
add
fistps
test
push
pusha
xchg
mov
enter
sub
enter
lods
xchg
mov
rorb
adcl
mov
sub
push
mov
mov
cmp
pop
iret
ret
cwtl
daa
push
xlat
jo
lods
jmp
nop
or
xchg
mov
sub
jne
adc
or
mov
or
je
and
xchg
or
adc
adc
or
adc
adc
jmp
stos
push
xchg
rcrb
or
sub
outsl
or
push
in
mov
mov
sub
dec
pop
cmp
mov
sub
cltd
jo
xchg
push
int3
gs
ljmp
repnz
mov
shlb
aad
enter
xor
dec
cmp
inc
popa
adc
or
cmp
inc
jmp
mov
or
or
test
fcomi
or
jl
mov
or
js
sbb
test
push
or
push
gs
scas
adc
mul
push
adc
push
sahf
inc
push
arpl
in
hlt
mov
add
sub
rcll
xchg
push
cmp
mov
mov
fstps
pop
jl
movl
jecxz
mov
mov
dec
ret
mov
imul
call
jne
mov
sub
imul
call
sub
daa
cmp
xor
pop
mov
es
or
dec
xchg
subb
in
pop
pushf
sbb
stos
pop
mov
lods
test
cmc
add
ljmp
shll
or
push
sub
sbb
mov
ds
and
popf
outsl
add
rcll
ficoms
mov
jmp
call
mov
xlat
andb
push
sub
cmpsl
fwait
in
sub
rcrb
mov
aas
add
repnz
aam
jo
cmpsl
dec
sbb
ss
nop
xor
or
pop
or
clc
add
mov
dec
mov
emms
lock
sbb
nop
xor
mov
sarl
pop
adc
nop
icebp
cmpsl
xor
xchg
sub
cld
jbe
adc
sub
xchg
call
insl
icebp
je
test
iret
std
jmp
nop
imul
inc
xchg
mov
aas
pop
xchg
fdivrs
xchg
adc
int3
pop
arpl
pop
inc
xchg
mov
pop
repnz
jne
pop
pop
xor
out
loop
test
dec
in
ret
jae
dec
adc
or
sub
stos
lds
xor
lds
adc
and
cvttps2pi
xchg
in
sbb
sbb
loop
mov
pusha
out
mov
ret
call
xchg
in
xorb
clc
je
ljmp
shl
sarb
in
stc
pop
ljmp
call
and
insb
or
cld
dec
dec
cltd
push
fistps
outsl
lahf
and
push
int
adc
xchg
jne
js
or
rorb
icebp
jg
nop
cmp
dec
xor
cmp
dec
aaa
out
dec
pop
mov
inc
hlt
xchg
mov
cmp
dec
jle
popa
ja
shlb
sbb
cld
push
cld
mov
popf
sbb
test
jns
rclb
imul
push
rorl
out
jle
mov
or
ret
adc
mov
mov
nop
jb
push
ret
sub
sub
push
mov
xchg
sti
mov
sub
loope
shl
xor
push
inc
push
rep
push
in
xchg
push
xor
jmp
xchg
rcrl
cmp
dec
repnz
ja
mov
or
in
xchg
xchg
ja
sub
mov
lahf
mov
xchg
aaa
les
sub
xchg
iret
pusha
pusha
mov
shlb
loop
sbb
or
fcmovne
call
aas
adc
shlb
and
mov
sub
lods
cmp
push
jbe
sysexit
mov
test
or
leave
dec
and
lds
add
fisubrs
add
int3
or
leave
mov
ret
add
and
shl
or
sarl
pushf
add
sub
aaa
mov
push
enter
and
lret
bound
or
out
sahf
dec
stos
push
dec
adc
int
jle
xor
mov
sbb
mov
mov
push
push
int3
stos
sub
lods
cwtl
sub
and
and
mov
push
aaa
pop
in
clc
mov
iret
adc
stc
shlb
sbb
mov
pop
mov
sub
leave
adc
add
test
test
sub
test
or
cltd
or
dec
les
incb
ret
mov
adc
rcr
jb
repnz
sub
lea
adc
in
out
nop
loop
iret
orl
int3
add
adc
sbb
sub
adc
add
ljmp
push
xchg
test
mov
and
push
jno
testl
mov
mov
ret
mov
adc
xor
lahf
inc
ja,pn
dec
out
outsl
lret
lds
jno
int
aas
pop
sbb
les
rorl
adc
fwait
les
mov
mov
dec
add
repnz
or
call
das
lods
and
dec
es
fs
mov
pop
pop
jg
movsl
repz
xor
jle
ret
adc
or
jo
or
inc
push
mov
lcall
xchg
mov
sbb
sbb
rolb
out
fwait
pushf
sbb
add
repnz
lock
int3
pusha
jg
ja
mov
repnz
nop
inc
cmp
jo
test
lret
daa
push
xchg
out
icebp
test
out
fstl
out
scas
test
dec
loope
sub
cwtl
out
pushf
xchg
xchg
daa
in
xchg
mov
stos
and
cld
pop
sbb
pop
leave
gs
aad
nop
cltd
push
jbe
add
iret
leave
inc
cmp
cmp
mov
sbb
push
in
stc
fisttpl
xchg
jmp
mov
dec
mov
sub
sti
mov
lahf
add
pop
addr16
mov
mov
pop
gs
jmp
push
xor
add
sti
push
sub
add
jae
sub
xor
iret
push
cld
and
mov
jo
sti
xor
or
mov
lahf
sbb
mov
sbb
mov
lahf
js
nop
aad
jge
mov
rcl
mov
insb
out
push
popf
ss
frstor
mov
insb
repnz
xor
addr16
push
adc
or
add
fstpl
scas
sti
cld
jl
lock
jns
or
aad
and
xchg
push
jg
clc
mov
adc
pop
mov
jo
xor
test
jo
int
int3
xorb
mov
mov
mov
insb
not
xorb
cmp
inc
dec
inc
decl
pop
pop
call
xchg
in
dec
in
ret
shll
jae
push
sahf
sbb
xchg
cltd
mov
pop
pop
inc
fucomi
add
out
mov
pushl
push
xchg
or
adc
clc
jmp
ss
sarl
sbb
add
lahf
xchg
rorb
ds
orl
jne
inc
int3
sbb
cmp
sbb
cmp
cmpb
sub
ds
xor
mov
shll
je
stc
push
mov
leave
loopne
and
jg
xor
mov
push
mov
loopne
mov
aad
mov
or
sub
jmp
dec
lock
and
add
int
loop
or
and
xlat
js
or
add
ds
xor
test
sbb
xchg
lds
lea
sahf
and
sub
jg
pop
mov
mov
sbb
inc
fdivrp
cmp
jmp
or
dec
sbb
nop
lret
dec
movsb
or
add
std
jp
mov
adc
ret
fisubrl
sub
and
jl
orl
out
xchg
push
jne
xchg
lds
sarb
jb
add
shlb
add
and
ja
mov
xor
lret
ja
push
sub
rol
add
dec
decb
add
stos
cmp
loopne
add
and
cmpsl
pop
ljmp
inc
jge
mov
movsl
loop
add
jle
sbb
sbb
xchg
enter
repz
push
aas
lcall
in
mov
leave
or
movsb
mov
stos
inc
inc
add
or
xchg
xchg
lret
cmp
stos
pop
les
pop
lods
xor
divl
out
pop
push
or
jnp
mov
and
ffree
and
pop
or
fmuls
popf
aad
decb
aaa
xor
fidivl
aas
loopne
ficoml
popa
mov
es
inc
aaa
cmp
mov
inc
jge
gs
or
ja
fmull
sub
rclb
js
dec
ret
in
cltd
xchg
push
jp
ds
add
dec
lds
inc
sbb
push
mov
int
mov
movsb
inc
add
and
subb
lods
dec
int
add
push
loopne
adc
stos
inc
and
loop
std
lahf
xor
ss
mov
insb
jmp
adc
mov
push
popf
lahf
or
xor
rcl
lds
add
mov
xchg
inc
push
outsb
imul
add
adc
lret
int
push
mov
mov
add
or
das
ds
xchg
mov
adc
push
stos
adc
mov
lock
mov
mov
fdivrl
push
xlat
add
pop
fisubrl
mov
icebp
decl
insl
push
or
sbb
adc
sub
scas
pop
cmpsb
fisubrs
push
out
imul
dec
jmpw
int3
lods
call
shl
in
sbb
cltd
sbb
adc
aad
je
cmp
aam
adc
jnp
inc
mov
mov
jb
xor
xchg
outsl
mov
mov
cltd
or
sbb
rcl
mov
stc
rorb
hlt
sub
and
in
pop
cmp
test
cmp
jno
sub
mulb
mov
sub
and
sub
inc
and
testb
sbb
dec
dec
mov
aam
sub
sbbl
rcrb
mov
jae
adc
dec
adc
mov
std
xor
xor
adc
or
pmaxub
loopne
icebp
in
rorb
rolb
mov
cli
xchg
imul
push
mov
bndldx
fimull
shll
sub
les
cmp
icebp
sbbb
sub
cmp
loop
pop
scas
rcrb
nop
xlat
lds
push
xchg
mov
aam
arpl
xchg
sbb
sahf
faddp
mov
in
popf
add
xchg
icebp
jg
sbb
pop
push
cwtl
inc
adc
adc
out
xorl
nop
sbb
mov
add
and
adc
or
cmp
push
ss
cs
xor
popf
aam
pop
lahf
pop
cmpsb
sti
mov
pop
jp
imul
stc
push
pop
inc
or
or
call
jecxz
pop
adc
insl
pinsrw
or
sub
sub
push
fwait
adc
push
pop
sub
pop
lcall
and
sub
push
lods
lea
cld
xchg
cwtl
and
mov
movb
fs
cmpsl
or
sarb
and
lods
pop
add
jmp
movsb
sar
push
mov
and
cltd
mov
and
mov
sub
mov
dec
cmc
enter
ret
and
xor
mov
inc
jp
adc
jmp
rorb
sub
xor
jae
and
or
or
nopl
adc
or
sub
lcall
leave
xor
inc
mov
shrl
lret
or
and
rorb
add
call
xor
mov
in
or
adc
insb
adc
dec
inc
adc
xchg
jno
jg
mov
mov
inc
bound
jecxz
in
int3
pop
nop
xchg
paddd
jb
jb
iret
sub
adcb
mov
jo
cmp
out
xor
adc
arpl
int
add
pop
pusha
out
dec
iret
jmp
into
loop
les
lcall
jnp
mov
inc
divl
jbe
mov
rcrl
fidivrl
test
mov
jmp
sub
or
mov
rdtsc
jecxz
ret
mov
inc
or
roll
jp
cwtl
push
adc
subb
int
add
and
jp
jge
or
faddl
sbb
pop
inc
sub
pop
in
mov
mov
frstor
repnz
mov
dec
mov
adcl
cmpsb
je
jl
xchg
jle
push
sub
cmp
out
cmp
or
mov
orb
call
xchg
rcr
gs
jg
in
sbbb
rorl
mov
out
cmp
mov
stc
xchg
push
mov
in
stos
mov
mov
add
stos
aam
push
scas
sti
fdivl
mov
cmc
xchg
xor
xchg
stc
lahf
dec
std
mov
xchg
scas
jle
aam
xlat
sub
jne
test
and
sbb
repz
push
add
cmpsb
or
stos
pop
sub
pop
mov
cmp
add
lods
arpl
icebp
mov
scas
push
into
into
ret
shl
ror
clc
fstp
push
sbb
and
jmp
out
dec
scas
je
or
hlt
lahf
jmp
mov
mov
cld
stos
nop
ljmp
sbb
out
push
bound
hlt
lea
repnz
pop
and
sbb
adc
pop
aam
sbb
setg
loop
mov
adc
inc
mov
push
lods
dec
lods
stc
mov
mov
sti
add
dec
out
inc
fcmovnb
rcr
cmpsb
jge
mov
mov
mov
jg
sbb
rcrb
push
mov
xor
or
sub
mov
nop
ljmp
dec
sub
pop
ror
in
test
dec
imul
ja
out
cmp
sub
js
dec
fucom
pop
fwait
out
or
out
or
subl
fadds
jo
push
adc
icebp
add
mov
cmp
mov
xor
mov
fimull
sbb
mov
add
loop
lods
mov
sbb
aam
mov
movsl
xor
dec
fwait
push
jb
roll
fidivl
dec
cld
je
or
hlt
mov
out
pop
or
push
mov
insb
jbe
mov
cmp
mov
into
pusha
bound
adc
sbb
adc
mov
cld
cs
adc
mov
xor
cmp
dec
adc
ljmp
fmul
mov
stc
dec
sub
pop
jl
dec
mov
cmp
mov
pop
movsb
cld
lock
or
std
rol
jl
dec
iret
adc
fwait
mov
jae
fcmove
pop
cli
push
movsl
stos
addr16
ds
enter
test
lret
loope
fildl
sbb
scas
cmpsb
xchg
ret
and
mov
sub
repnz
lods
jecxz
adc
out
lahf
repnz
stc
dec
sarb
sub
mov
mov
jne
xchg
in
push
stos
dec
pop
inc
dec
scas
fsubrs
lahf
inc
outsl
mov
pmullw
jle
pop
push
arpl
rclb
fstpl
shr
inc
cmp
imul
pushw
dec
clc
pop
add
andb
push
in
push
test
dec
sub
fwait
lods
add
adc
sub
jge
pop
rolb
xor
pop
sbb
push
popf
xor
andb
sti
js
imul
mov
xor
jl
loopne
fistps
popf
xchg
push
in
cld
rorb
call
sbb
fdivp
popa
inc
mov
cs
mov
cmpsb
add
pop
rolb
mov
mov
aaa
cmp
hlt
adc
sti
popf
fmuls
out
mov
dec
jae
lods
inc
lcall
jge
pop
jmp
aad
lds
sti
and
adc
add
jae
into
mov
int3
fisttps
adc
pop
leave
push
add
adc
pop
sub
dec
jo
dec
mov
loopne
mov
adc
add
sub
dec
rorl
jmp
ss
push
fistps
mov
iret
dec
sahf
insl
in
shlb
in
jmp
inc
clc
adc
loop
nop
add
adc
dec
icebp
xor
add
ficoml
push
jecxz
out
add
lcall
andb
jp
adc
push
mov
jle
cwtl
dec
cmpsb
mov
pop
mov
push
mov
or
pop
add
fldcw
mov
push
xchg
sahf
xor
or
lea
ss
mov
add
ret
aad
dec
loop
mov
mov
flds
add
pop
lock
push
jns
sbb
add
pop
mov
mov
inc
mov
daa
jecxz
sbb
xor
adc
lahf
std
mov
cld
push
call
mov
or
or
or
ds
test
call
add
int3
int3
lods
scas
or
aaa
ljmp
jmp
out
nop
lahf
xor
jne
ljmp
adc
lahf
test
add
add
clc
jo
add
lcall
sub
pop
aad
in
xor
or
iret
dec
adc
in
sub
jb
xchg
push
jo
in
adc
mov
xchg
cmp
stos
add
pop
iret
mull
or
dec
cmp
sub
hlt
or
int
std
dec
sub
mov
sub
jnp
lret
cmp
add
mov
sbb
test
mov
cmpsl
lret
movsl
or
repz
or
pushf
rclb
fcos
stos
scas
mov
fcomps
arpl
loop
cmpb
push
jg
jge
loope
cmpsb
push
adc
je
xchg
inc
mov
push
test
sub
daa
jno
ljmp
xchg
xchg
jge
xchg
aam
insb
adc
fmulp
add
dec
adc
cwtl
jae
sahf
mov
dec
mov
sbb
and
movsb
dec
or
loop
cmp
mov
push
mov
shlb
daa
out
sbb
mov
addr16
add
jg
xchg
add
in
add
cmp
inc
mov
or
sarl
mov
icebp
addr16
loope
mov
ror
ja
or
mov
leave
mov
adc
insl
int3
in
fwait
rclb
adc
lcall
aad
icebp
pop
cld
out
aad
fs
sbb
arpl
cmp
ds
fnstenv
xor
mov
iret
jp
pushf
inc
hlt
jecxz
mov
mov
scas
in
mov
sub
shrb
ja
jae
xchg
add
in
pushl
mov
sbb
add
xchg
push
push
sub
int3
shr
xchg
mov
js
bswap
pushl
sub
lds
dec
xchg
clc
ret
xchg
push
hlt
mov
jmp
add
mov
jno
push
jno
insb
or
aam
or
or
call
enter
mov
adc
clc
jno
mov
ror
push
xlat
pushf
cs
int
cmp
lret
jb
adc
mov
fildll
notb
adc
call
mov
xor
fdivrl
sbb
insb
or
inc
or
dec
test
lahf
push
ret
cmp
pop
or
cmp
addr16
jnp
call
negl
fsubr
stc
aam
adc
jg
pop
add
nop
sub
ss
hlt
ja
xchg
add
stos
and
std
fucomp
xchg
push
lock
ds
and
out
jmp
fcomip
loopne
enter
add
fcom
or
sub
insb
mov
pop
pushf
add
mov
pop
and
fisttps
insl
pop
lods
imul
jnp
sbb
add
imul
cmc
cmp
xor
jl
xchg
or
aam
sub
dec
rcrl
fadds
repnz
and
incl
shlb
testl
xor
cmp
mov
cmpl
xchg
mov
icebp
fucomi
mov
les
mov
or
lock
in
xor
or
outsl
cmp
or
dec
sub
and
ret
fldl
lea
push
xorb
xor
and
sub
and
cmp
scas
popl
inc
add
jp
lods
sub
inc
adc
push
cmp
sub
ret
enter
std
lea
imul
sub
push
std
jae
dec
push
call
and
adc
mov
lret
mov
or
or
adc
or
and
mov
xor
xsha1
cmpsb
or
dec
jl
or
adc
dec
ret
shr
mov
pop
cltd
sbb
sub
mov
dec
add
xchg
mov
sub
xor
mov
call
in
mov
mov
je
loop
cmp
pushf
insl
cld
pop
out
nop
sub
sbb
enter
test
lock
imul
push
int3
pop
add
aas
sbb
jae
pop
push
xchg
jmp
dec
adc
xchg
iretw
aam
xchg
outsl
xchg
ret
je
cmp
push
cltd
xor
push
xchg
lahf
push
pop
or
lcall
lcall
fcmovu
fcmovnu
data16
jbe
mov
fbstp
int3
in
inc
lock
or
lock
mov
movsb
xchg
fbld
outsl
iret
xlat
jb
insl
aam
sbb
pop
adc
lahf
iret
std
shll
cwtl
int
es
fmull
sub
cmc
xchg
add
cmp
dec
loope
cmp
lods
test
hlt
jmp
rcrl
inc
repz
sub
rclb
lcall
mov
jge
jae
sbb
into
out
or
testb
mov
jo
cmp
jmp
cld
cmp
xchg
orl
add
or
repz
adc
pop
adc
push
hlt
cmpsl
sub
movsb
cmpsl
subl
push
pop
shrl
lret
xor
sub
and
lods
adc
ss
pusha
and
out
into
xor
outsb
mov
xor
aad
jb
addb
lock
mov
jp
inc
pop
rolb
aas
lahf
or
sub
aad
mov
or
shl
or
fmull
loop,pn
lret
mov
aad
shlb
adc
jae
push
call
add
mov
hlt
repnz
adc
cmc
cmp
fs
aad
mov
stos
and
and
mov
lret
inc
mov
mov
jnp
mov
and
ss
out
jnp
mov
aas
fxch
xchg
add
cltd
add
pop
adc
aaa
jnp
pop
hlt
lcall
lahf
fsubrp
lahf
faddl
in
int3
pop
jbe
inc
or
imul
sub
test
add
and
mov
lahf
pop
cmp
and
fmull
ja
sub
test
mov
shr
mov
iret
pop
mov
lahf
or
push
inc
or
xor
xor
mov
leave
out
add
stos
dec
aaa
rcll
adc
push
stos
jecxz
pop
sub
stos
or
dec
leave
movsl
out
xor
cmpsl
add
out
mov
imul
mov
shlb
mov
sbb
pop
enter
loopne
hlt
mov
pop
jg
lods
pop
push
fs
test
fcmovnb
cmp
jnp
mov
test
or
clc
cld
negl
ljmp
inc
dec
or
sar
xor
lret
fnsave
pop
je
in
mov
push
inc
adc
in
hlt
insl
mov
and
cs
adc
fisttpl
push
fadd
jo
xor
mov
lret
popa
or
movsl
sahf
xorl
hlt
dec
mov
hlt
cld
mov
and
out
jl
std
inc
pop
sbb
sbb
xchg
cmp
xchg
mov
jmp
mov
add
dec
jo
adc
out
lock
jo
lds
sarb
hlt
aaa
out
xor
outsl
xchg
push
sub
push
dec
jb
rol
jge
outsl
mov
cli
cmp
jae
mov
std
movsb
pop
cmp
or
nop
ficomps
mov
pop
push
or
loop
sbb
or
adcl
and
cmp
out
fwait
cmpsl
cmp
xchg
adc
rorb
enter
inc
push
xchg
ror
or
sub
clc
jne
call
dec
nop
push
jbe
push
sbb
aaa
repnz
mov
cli
cli
xorl
ljmp
movsl
loopne
sub
add
add
data16
mov
lock
or
lret
inc
sub
dec
test
pop
push
not
fldcw
pop
lcall
mov
adc
sub
mov
movb
xchg
sub
adc
stc
int3
or
cmp
test
push
xchg
lret
movl
or
xor
and
mov
test
jg
and
pop
or
push
adc
jns
pop
bound
cmp
loop
mov
cmp
into
push
mov
popf
je
lods
mov
xchg
mov
cmp
leave
data16
xchg
or
insb
aam
mov
out
pop
adc
popf
in
sub
mov
fldl
adc
lods
out
pushf
cmp
movsl
xor
push
mov
adc
adc
adc
stos
imul
sti
jbe
repnz
and
or
add
leave
popf
psrlw
subl
sub
shlb
mov
imul
cli
adc
idivb
push
mov
decb
add
adc
into
sub
push
testb
in
lret
mov
pop
and
or
add
into
fisubrl
outsb
jp
fisttpl
or
push
ret
int
call
push
out
es
jmp
loope
push
adc
insb
adc
or
jo
push
fmul
inc
jecxz
sub
aaa
adc
pop
pop
pop
push
jle
lret
and
fstpt
ret
popf
dec
sbb
ljmp
daa
test
or
popf
jmp
or
shll
sub
nop
bound
add
cmp
enter
and
inc
aas
inc
sbb
sub
add
call
jmp
sbb
xchg
mov
sbb
divl
add
or
push
push
call
pop
pop
cmc
lock
add
or
imul
fldt
mov
bound
sub
out
lock
xor
lcall
loope
int
movsb
jbe
ds
cmpsb
adc
mov
je
cld
fsubrl
loope
int
and
inc
aas
mov
into
push
bsf
mov
daa
ss
pop
scas
sti
xlat
imul
sub
pop
sbb
scas
stc
call
int3
bound
fisttpl
mov
js
shlb
les
or
lods
dec
jns
sub
cmp
stc
and
repz
fwait
xor
inc
sbb
cwtl
lods
inc
xor
push
xchg
xchg
xor
adc
test
pop
vmread
push
pop
adc
cs
popf
mov
mov
loopne
sbb
es
add
jae
sbb
push
in
sub
push
mov
push
dec
packsswb
int
jl
daa
adc
syscall
dec
into
or
fdivl
shll
push
add
sbb
rol
or
jecxz
jns
push
int
bound
clc
rorb
test
inc
push
out
out
push
xchg
push
sub
loop
hlt
adc
jl
movsl
push
loop
nop
call
shlb
xchg
pop
xchg
push
iret
repz
cli
je
out
int
adc
xchg
leave
aad
xchg
xchg
push
add
sbb
sbb
inc
in
sahf
sub
add
arpl
repz
stc
push
add
int
rcrl
adc
xor
dec
dec
outsb
adc
mov
or
fstpt
mov
sbb
pop
cli
xor
jno,pt
or
frstor
and
or
iret
add
add
ret
xor
lahf
sbb
jle
shll
pop
mov
push
mov
lds
pop
rcrb
and
jbe
rorb
orl
rorb
mov
sbb
lods
add
mov
out
sarl
in
jae
inc
adc
inc
jp
adc
xchg
mov
mov
pop
jp
mov
jmp
adc
lock
ja
mov
dec
jp
or
sub
mov
pushf
lods
in
mov
pop
dec
cmc
test
nop
scas
and
sbb
mov
or
inc
pop
les
into
lahf
xor
bound
pusha
dec
adc
xlat
dec
faddl
push
out
lods
stc
repz
or
test
sbb
iret
int
sbb
push
push
mov
int3
mov
xor
sub
xor
sub
and
xor
sub
cmp
xor
sub
ficoml
popf
and
cmp
or
int3
and
sub
out
dec
js
mov
or
cmp
jb
addr16
push
mov
sbb
mov
adc
push
or
mov
cmp
adc
jne
cmp
sub
test
cmp
mov
aam
scas
mov
je
pop
adc
stc
push
imul
sarl
fwait
loop
cwtl
jo
es
mov
test
jle
insl
push
and
fcmovb
adc
jno
loop
sbb
lock
repnz
ffree
lods
sbb
fwait
add
push
int3
addl
mov
mov
adcl
sbbl
int3
cwtl
imul
mov
gs
adc
dec
jl
ret
and
jae
mov
dec
xor
repz
xchg
cmp
bound
rcrb
idivb
or
adc
mov
fst
rorb
in
sbb
push
ds
lret
mov
sahf
enterw
adc
stc
cmp
loope
js
or
sti
pop
xor
nop
outsl
lahf
sahf
sbb
mov
stos
jg
mov
fwait
into
sbb
add
fwait
mov
ljmp
inc
mov
inc
fsubl
xlat
dec
or
movntq
out
cmp
inc
push
sub
lods
mulb
in
movsb
and
add
leave
les
cmp
adc
es
xor
cmp
pop
pop
push
mov
or
push
mov
mov
fs
mov
add
mov
xchg
clts
addr16
inc
out
sub
push
sub
arpl
mov
dec
punpcklbw
mov
adc
push
popf
inc
fstpt
jecxz
ret
adc
cld
and
xchg
out
mov
inc
xor
aaa
out
mov
cli
stos
xor
sub
or
xchg
adc
sub
push
push
sbb
push
outsl
dec
les
pop
cmp
cmpb
es
lahf
incl
cmp
fwait
cmp
les
movl
pop
ljmp
mov
rolb
stos
adc
daa
add
sbb
jbe
jl
inc
dec
inc
sbb
out
sahf
mov
sbb
sub
and
pop
aad
dec
xor
outsb
mov
lods
push
dec
lds
sub
push
leave
fildll
inc
movsl
sub
push
int
xchg
dec
mov
jmp
adc
adc
ret
xchg
xor
mov
mul
leave
lahf
and
and
rcrl
add
stc
or
das
es
stc
test
loope
cmp
dec
mov
mov
inc
jae
gs
ss
mov
push
movlps
test
push
jmp
mov
xor
mov
push
nop
inc
int
lret
mov
pop
cmp
bound
or
jmp
test
xchg
add
mov
push
push
aam
lahf
cmp
jp
jo
pop
push
cmpsb
jl
lahf
add
or
push
sbb
and
xchg
out
sub
adc
mov
lds
mov
jecxz
and
xchg
push
stos
pop
outsl
mov
psllw
ret
scas
shlb
rcrl
and
popf
pop
cwtl
in
pop
testb
addr16
mov
jg
rorb
mov
cli
popa
jbe
pop
sub
dec
roll
aas
xchg
inc
subb
fidivs
filds
dec
add
jne
popf
and
mov
fistl
decb
adc
push
mov
sbb
in
jo
dec
sti
mov
mov
mov
push
loope
sti
in
inc
sbb
test
stc
fisttps
sbb
lea
int3
xlat
jmp
or
jnp
imul
cmpsl
sub
lock
js
xchg
push
xchg
xor
mov
push
and
fmul
repz
cmp
jae
pop
adc
and
or
out
mov
push
add
lret
sbb
and
icebp
cli
mov
fsub
xchg
adc
add
adc
sub
movsb
pop
mov
subb
sbb
stos
and
sbb
adc
out
fimuls
jmp
sbb
cmp
or
mov
jl
mov
or
adc
in
mov
mov
fs
mov
hlt
add
cmc
adc
adc
pop
pop
xchg
xchg
xchg
je
lcall
ja
or
mov
rcll
or
neg
cmp
ficoml
jg
or
hlt
test
push
testl
sbb
mov
cmp
in
push
add
test
int3
ret
mov
inc
fmul
roll
int3
add
add
and
pusha
les
or
and
push
out
and
insb
mov
sub
divl
jge
out
out
cmp
int3
jecxz
daa
rcrb
jno
adc
cmp
mov
cltd
sub
adc
hlt
dec
sbb
inc
mov
fistl
int3
push
lods
inc
inc
mov
mov
push
or
dec
repnz
fwait
test
les
push
sahf
out
sbb
sub
roll
or
mov
mov
cmp
lock
jns
push
nop
sbb
pop
stos
or
sub
fstpt
cltd
add
mov
movsl
int
pop
cmp
fdivrs
or
in
int3
cmp
imul
xchg
negl
movsb
push
rcll
ror
or
mov
js
addb
xchg
inc
sbb
or
in
in
adcl
rcrl
daa
addl
pop
nop
and
add
adc
ror
xor
jl
or
sub
sbb
pusha
out
je
or
adc
and
sbb
ds
xor
xchg
je
insl
sub
pop
test
andb
out
hlt
or
add
mov
mov
lds
filds
and
into
idiv
inc
outsl
add
or
pop
adc
add
xchg
sub
adc
in
sar
push
lahf
push
and
lods
adc
icebp
jae
icebp
sbb
arpl
or
mov
cmp
xchg
xor
outsl
or
fldt
out
jae
push
sbb
sub
push
mov
dec
add
les
fdivp
jmp
fistl
xor
stc
cmp
gs
jmp
dec
lea
xchg
js
hlt
popa
sbb
or
push
ret
adc
mov
or
shlb
pop
dec
mov
rorb
mov
cmp
add
pop
pop
inc
nop
dec
inc
ret
add
subb
jge
add
or
std
cmp
in
dec
mov
cmp
hlt
inc
dec
dec
mov
adc
lahf
sbb
push
int3
ret
inc
push
xor
lock
test
mov
cmp
pop
mov
pop
pop
add
leave
les
mov
pop
in
jl
fsubs
movsb
adc
aaa
jecxz
or
mov
jo
dec
xor
cmp
adc
cld
push
mov
or
pop
gs
out
xlat
in
lahf
je
vmovupd
faddp
push
cmpsb
adc
adc
cmp
lea
lea
mov
xor
in
dec
in
cmp
xor
add
inc
push
or
adc
loope
and
and
mov
cmp
or
pop
dec
mov
popl
adc
jmp
daa
stc
mov
sub
call
push
xchg
out
divl
imul
icebp
inc
test
adc
inc
xor
sbb
mov
insb
out
les
and
inc
aam
ret
jae
adc
mov
fists
jae
and
and
sub
mov
imul
inc
push
fucomi
push
lahf
repz
push
jle
mov
mov
out
push
xchg
int
mov
std
and
dec
mov
or
out
dec
loopne
fcoms
cwtl
loope
mov
in
test
int3
out
dec
es
or
add
xchg
cmp
adc
push
add
lock
je
add
out
test
ds
adc
sub
fiadds
lret
xchg
fcomi
pop
sub
jl
mov
or
or
dec
sahf
sbb
loop
adc
adc
or
pop
mov
lods
jge
and
add
adc
fiadds
scas
adc
dec
daa
and
ljmp
out
add
or
or
cli
and
ljmp
sub
add
push
mov
inc
mov
movsbl
sub
and
leave
jmp
and
push
sub
fyl2xp1
mov
call
sbb
in
rcll
loop
or
scas
sbb
lock
lock
ja
mov
sbb
push
pop
dec
fists
jbe
push
sbb
aas
push
inc
aam
adc
loop
inc
cli
xchg
pop
stc
pop
xor
jmp
lret
and
in
insb
cmp
add
out
fidivl
and
pop
jb
or
mov
test
dec
outsl
loopne
and
nop
in
lock
mov
bound
xor
mov
fdivs
xlat
sbb
push
xchg
cld
inc
or
sub
ret
icebp
movb
leave
dec
fisttpl
jo
adc
dec
shlb
xrelease
lock
ss
xchg
mov
lea
lock
cs
fs
mov
repz
sbb
call
mov
push
outsl
inc
cmp
push
fdivs
out
jl
adc
out
std
mov
cmp
add
rorb
leave
adc
jns
adc
sub
xchg
and
adc
mov
jg
push
ja
fildl
add
cld
push
mov
pop
jg
fdiv
or
subl
mov
mov
mov
and
and
xor
mov
sub
adc
mov
jns
sbb
sbb
test
mov
xor
mov
push
xchg
or
xchg
orl
and
ljmp
push
sub
push
xchg
stos
mov
out
pop
lahf
push
les
outsl
dec
adc
jno
into
les
movsb
cmp
add
or
sub
andb
testb
sub
pop
and
sub
in
mov
push
aad
orl
jne,pn
int3
sbb
and
and
out
sti
rcrb
xchg
leave
push
push
lea
mov
fucomi
cmp
addl
and
enter
jb
test
or
pop
sub
adc
test
mov
int3
pop
arpl
adc
inc
sbb
iret
jmp
xchg
std
inc
adc
sti
mov
lahf
leave
xchg
orb
les
outsb
push
xchg
dec
pop
loop
xchg
inc
pop
pop
sub
shl
in
cld
in
lods
sub
fimull
repnz
fimuls
mov
mov
or
imull
adc
arpl
sbb
cld
iret
mov
popf
and
cltd
stos
mov
stos
lock
je
sub
int
fcomip
sbb
or
mov
and
mov
and
jmp
xlat
inc
pop
inc
jl
push
stos
and
mov
jae
adc
lahf
inc
adc
dec
sub
mov
inc
lret
fidivrs
jg
mov
gs
ret
adc
jg
pop
mov
aam
rol
int3
cmpsb
sbb
leave
mov
dec
xor
inc
bswap
shlb
shrl
add
imul
lahf
scas
pushf
frstor
das
mov
leave
loop
jo
adc
add
xchg
into
int3
lret
sbb
mov
orb
cmp
mov
shl
fimull
fwait
xchg
cld
cmp
adc
imul
sbb
shlb
orl
sub
adc
iret
neg
mov
sbb
ficomps
loope
clc
xchg
mov
loopne
push
outsl
mov
movsl
or
mov
out
sub
xor
adc
movsl
or
mov
xchg
jl
xchg
inc
sbb
dec
add
out
pop
loop
lcall
mov
das
imull
jmp
repz
loopne
lcall
jns
cmpb
in
dec
ja
hlt
int3
std
sub
push
or
hlt
in
mov
icebp
xchg
fsubrl
lret
adc
popa
out
cltd
cwtl
aad
aad
mov
cmp
jns
xor
pop
adc
int3
mov
test
jecxz
ret
aad
out
jecxz
lret
mov
into
out
mov
mov
push
aad
das
movups
adcb
in
jbe
insl
jmp
and
pushf
rorl
out
and
and
xor
lds
les
pop
imul
xor
push
mov
or
xor
rolb
imul
xor
dec
adc
adc
into
push
jno
mov
push
in
imul
mov
mov
fnstsw
xchg
ss
imul
in
or
in
or
mov
notb
stos
dec
or
mov
loopne
pop
pop
pushf
mov
xlat
inc
ds
ficoms
push
movsb
insb
fstl
jle
fldt
int3
inc
sub
push
je
pop
aad
xchg
jno
imul
mov
jecxz
repz
ficoml
xchg
add
adc
xchg
push
adc
mov
sti
fists
mov
loopne
sub
fdivrl
dec
or
orl
scas
sub
add
fsubl
cmp
ret
sub
mov
fildl
fsubs
lret
sbb
ss
inc
lods
subl
hlt
pop
mov
xchg
fstpl
ljmp
push
add
mov
sub
out
cmpsl
ss
add
cmp
cltd
sbb
ljmp
in
inc
mov
xor
jo
lock
stc
mov
std
cmp
dec
ret
daa
add
adc
fmul
add
adc
xchg
lahf
push
sarl
ret
or
jge
xor
mov
shll
lret
xor
ja
outsb
and
pushf
jb
fisttpll
dec
into
sub
xor
fdivp
xchg
scas
mov
icebp
mov
or
cmc
out
sbb
lods
std
stc
xchg
mov
lds
or
push
inc
or
rclb
int3
adc
sbb
pushf
or
mov
cmp
sub
ret
insb
or
cmpxchg
cmp
adc
int
lahf
sbb
jb
jge
adc
mov
in
clc
mov
inc
loop
call
push
sub
pop
faddl
xor
repnz
std
mov
sub
rcl
cmp
sbb
push
and
fstl
xor
cmp
loop
jecxz
push
in
and
mov
nop
bound
repnz
push
aam
in
pop
push
nop
hlt
pop
jecxz
pop
sbb
loop
mov
aam
adc
pop
mov
sbb
push
fwait
push
or
add
loop
and
lock
pop
gs
aam
adc
pop
adc
sbb
or
add
jmp
je
mov
pop
sbb
xchg
or
scas
rcl
je
les
ret
mov
nop
add
xorl
jne
aam
arpl
or
add
jmp
push
icebp
dec
xchg
sti
mov
repz
or
cmp
cmp
ds
int3
fmull
cwtl
lret
cs
mov
or
les
test
inc
clc
rclb
sbb
cli
adc
fwait
rolb
push
andb
pop
fs
sub
das
sbb
mov
mov
out
in
hlt
xor
or
lock
pop
mulb
sbb
pop
ret
and
test
popl
repnz
xchg
jmp
xchg
rorb
in
dec
rcrl
leave
and
ss
in
jle
mov
mov
insb
dec
cmp
dec
cmp
fmulp
repnz
loop
jl
cmp
adc
mov
into
insb
out
push
sbb
adc
orb
into
and
movsl
insl
pop
xorl
sbb
mov
adc
sarl
shlb
dec
fstps
add
rcrl
cmc
mov
or
mov
mov
cmp
mov
or
and
inc
ss
lahf
cmp
adc
add
xchg
or
mov
and
loop
adc
cmc
add
push
xchg
sbb
sbb
nop
cwtl
and
jne
xchg
hlt
stc
lcall
mov
lds
hlt
push
repz
and
insb
or
aad
dec
mov
lods
mov
jae
mov
addps
cmp
mov
lock
add
arpl
adc
xchg
pop
push
adc
ss
call
aad
into
mov
test
lds
sbb
mov
ffree
cmp
lea
pop
lret
sub
dec
std
mov
cli
push
lahf
ret
int3
fists
int
cld
inc
pop
iret
xchg
xor
xchg
add
stc
ret
fisttpll
decb
jle
cli
and
in
in
cmp
mov
or
push
cltd
sub
repz
inc
sbbl
push
cmpsb
and
push
or
dec
lahf
sub
es
dec
pop
add
ret
sub
xchg
psubw
jns
pusha
test
fs
iret
in
jge
pop
mov
out
test
push
rcl
out
enter
jmp
and
cs
or
jecxz
sub
les
int
in
cs
sbb
adc
sbb
adc
or
pop
andl
mov
sub
push
mov
fwait
rolb
test
xchg
notl
or
out
sbb
out
rorl
mov
out
jge
out
mov
mov
lea
aam
mov
dec
cli
add
mov
push
int3
fdivl
mov
cmp
les
aas
inc
pusha
xchg
shr
data16
pop
cmp
jp
mov
dec
loop
fdiv
jmp
in
fcmovb
rcr
adc
in
add
cmp
sti
sub
std
adc
call
fistpl
xor
xchg
jecxz
inc
or
in
sub
fwait
jne
cltd
into
adc
loope
aad
ficoms
xchg
loopne
clc
add
repnz
sbb
into
sarl
popl
adc
fnsetpm(287
adc
mov
sbb
fcmovnu
mov
into
or
sbb
xlat
push
mov
ret
sbb
xor
mov
xchg
sub
xor
dec
lds
outsb
pop
mov
enter
insl
mov
xchg
and
mov
test
add
push
jp
imul
mov
repnz
mov
mov
xchg
xor
pop
push
shll
sbb
sub
outsl
cmp
pop
cmp
sbb
lret
add
add
cmc
es
push
inc
adc
inc
or
xchg
ljmp
lcall
and
andb
jnp
hlt
push
divl
push
or
clc
rcrb
mov
mov
mov
push
xchg
adc
fbstp
mov
jo
lahf
or
add
add
sbb
fldenv
sbb
push
repnz
mov
and
lock
or
sub
clc
lds
or
testl
mov
shll
pop
fwait
cmp
jbe
dec
sbb
je
ss
enter
icebp
outsl
mov
flds
lret
clc
ja
orb
sbb
fwait
pop
ljmp
roll
push
adc
add
ss
dec
dec
add
mov
rol
xor
ds
pop
iret
inc
stc
xchg
pop
sub
pop
inc
sub
xchg
movsb
leave
fnstcw
repnz
add
jae
mov
sbb
xchg
mov
cmp
inc
xchg
mov
cmc
pop
leave
push
pop
adc
sub
jg
stc
nop
xchg
cmp
lea
mov
mov
ret
into
mov
cli
ror
push
add
cmp
xchg
or
lock
add
lahf
outsb
imul
cwtl
int
pop
out
mov
out
mov
imul
fiaddl
jle
jne
jp
fucom
xorl
aad
call
cmp
or
mov
pop
xchg
mov
rcll
and
mul
in
sbb
sub
lock
cwtl
in
lret
jg
outsb
fcomip
cld
or
dec
push
scas
mov
js
mov
enter
imul
sbb
jo
call
adc
sqrtps
mov
cwtl
mov
ja
fsubrl
imul
pop
je
and
pop
xlat
push
pop
subl
repz
adc
stc
testl
sti
mov
ret
ljmp
lahf
adc
iret
push
out
sti
mov
mov
int3
lret
sahf
lret
nop
mov
repz
cs
out
xor
hlt
fldt
or
inc
xchg
out
cmp
mov
fisubrs
push
lea
in
mov
push
or
in
loope
add
shlb
cld
add
gs
insb
adc
loop
je
lds
xor
iret
push
mov
jb
addl
outsl
mov
mov
je
dec
stos
or
jae
pop
imul
xor
fldl
push
or
add
rorb
in
jae
mov
push
cmp
mov
hlt
adc
cmpsl
cmc
divl
adc
push
inc
nop
lret
adc
out
pusha
lds
je
or
sub
pop
es
stc
add
mov
jno
add
xchg
ficoml
sbb
mov
loope
test
mov
jmp
or
ret
icebp
je
and
mov
jmp
clc
int3
and
mov
cmp
adc
fdivp
lahf
mov
or
or
addb
sub
mov
push
jae
imulb
mov
xchg
cwtl
dec
xorl
cmp
lgdtl
pop
dec
mov
repnz
fsubr
bound
lret
or
cmpb
push
lock
aad
mov
mov
dec
add
pushf
sbb
aas
adc
ds
cmp
push
cwtl
movsb
test
xor
stos
lock
mov
xchg
mov
ds
jnp
inc
rep
adc
xorb
mov
mov
xchg
sti
testb
mov
inc
into
cmc
mov
xor
and
sbb
add
jl
xor
xor
adc
pusha
sbb
cmp
aam
mov
add
push
nop
inc
test
xor
repz
mov
and
xchg
je
jne
add
mov
sbb
mov
add
push
sbb
ds
int3
mov
add
lea
addr16
pushf
or
nop
and
lret
jl
xorb
add
sbb
jle
push
sub
xchg
adc
mov
xchg
rcll
xchg
jl,pt
push
popf
jae
test
adc
sub
sbb
inc
sub
sub
mov
test
add
jl
cld
pop
pop
sti
sbb
ror
testl
add
adc
fstpt
push
out
inc
popa
imul
jne
nop
mov
mov
and
rorb
dec
pop
mov
push
push
and
inc
sbb
mov
xor
push
xchg
sbb
xor
inc
pop
call
test
push
xchg
int3
jb
mov
mov
dec
mov
test
out
jge
ja
cmp
dec
xor
mov
orl
in
mov
dec
dec
inc
out
sub
push
xlat
xor
mov
adc
mov
jno
outsl
sub
jo
jecxz
clc
mov
outsl
lret
inc
lret
pinsrw
in
mov
imul
cmc
hlt
imull
sbb
add
call
sub
mov
lcall
in
sub
jge
sbb
or
lret
dec
in
inc
and
cld
loopne
jge
imul
sarl
out
mov
imul
jecxz
adc
ljmp
sub
hlt
cmp
sub
sbb
lret
inc
and
popf
or
aaa
cmp
push
jl
push
sarl
rorb
andl
adc
rolb
dec
std
adc
adc
sbb
popa
push
incl
mov
cld
je
aam
mov
aas
xor
mov
and
popl
adc
rcr
lock
andnps
sbb
jmp
sbb
jl
adc
sub
rcrb
mov
xor
aad
movsb
cmp
cmpsl
out
jb
leave
fiadds
int3
lock
int3
pop
add
push
push
outsl
sub
jmp
repz
jnp
clc
jno
shl
out
fcoms
xchg
scas
mov
push
add
mov
mov
test
icebp
js
sbb
adc
jnp
xor
mov
sbb
iret
insb
xor
lret
lret
lcall
cld
cmp
or
add
enter
jae
jne
lret
loop
mov
mov
clc
sub
push
pushf
popf
jbe
popf
out
and
mov
aaa
sub
push
fistl
popf
das
btsl
hlt
pusha
xchg
movsb
adc
mov
daa
mov
add
dec
push
sub
jne
js
dec
cmp
in
in
aad
rcrl
push
int
mov
lret
lahf
es
or
mov
stos
scas
or
imul
jno
adc
dec
xchg
out
ret
push
inc
ds
pop
das
jb
or
les
outsl
sbb
std
fcomi
mov
clc
adc
mov
setg
insl
xchg
xchg
outsl
sub
mov
repnz
sbb
les
dec
xchg
mov
into
push
les
adc
iret
cmc
loope
dec
dec
call
imulb
xor
jne
pop
mov
out
iret
test
sub
sbb
adcb
andb
in
push
les
popf
inc
dec
sbb
push
mov
cld
mov
cmpsl
icebp
hlt
add
mov
push
ret
lods
jg
lock
bound
sti
push
cld
stos
fimuls
push
mov
mov
lods
pop
cmp
ss
pop
pop
xchg
sub
push
mov
mov
add
mov
ljmp
scas
add
je
dec
into
adc
or
sub
push
jl
cs
and
xchg
mov
inc
leave
jl
popf
jp
clc
sub
xchg
fcoml
stc
mov
dec
cmpb
xchg
dec
sti
divl
inc
cltd
orb
bound
pushf
xchg
jae
mov
xchg
js
hlt
or
mov
fwait
mov
ljmp
imul
xor
ljmp
adc
loop
rorb
ret
jo
and
inc
mov
or
es
or
or
int3
addr16
nop
inc
into
rorl
stc
cmp
or
lock
jp
push
lahf
mov
adc
and
adc
xor
les
push
frstor
mov
notb
call
mov
aaa
js
mov
xchg
cmp
mov
sub
sub
jnp
ljmp
dec
std
shll
mov
or
sar
lods
cltd
sarb
dec
enter
and
nop
inc
jmp
out
lret
fucomi
add
imul
lods
jl
or
inc
pop
lock
jbe
cmpsb
loope
mov
cli
ja
cmp
clc
testl
push
sub
jp
jp
add
dec
push
push
enter
stc
and
mov
ffreep
jge
add
push
mov
outsl
xchg
lahf
mov
in
xor
push
add
pmulhw
movsl
in
cltd
push
enter
lahf
add
xor
inc
repz
sbb
pop
pop
shlb
jg
es
fstps
ljmp
lret
push
ljmp
lock
ffreep
mov
mov
cmp
arpl
rorl
dec
outsb
cmp
es
mov
aas
daa
inc
or
nop
mov
pop
jb
mov
in
lret
xchg
lret
pop
sub
sub
add
xchg
sbb
push
shlb
in
inc
add
gs
adc
lret
fisubs
inc
jo
nop
aad
or
mov
push
xchg
xor
lahf
rorb
cmp
xor
ds
out
clc
xor
ret
cmp
sub
int
dec
repz
sub
ret
push
mov
xchg
inc
pavgb
mov
mov
sub
fmul
push
ror
scas
pushf
sbbl
scas
sbb
push
out
adc
adc
and
jne
dec
cmp
xchg
pop
cli
in
mov
fcomps
cmp
cmp
mov
out
gs
cmpsb
push
or
in
adc
movsb
movsl
or
sbb
push
adcb
or
mov
fsubl
adc
fmul
mov
ljmp
pop
pushf
dec
or
mov
out
cli
lahf
add
out
rcrl
bswap
adc
repz
cmpsb
out
imul
shll
dec
adc
pop
sub
sbb
subb
adc
cmpsb
ret
push
push
inc
in
ds
outsb
imul
or
lret
or
ljmp
in
js
enter
cmp
jb
rcrb
repnz
sub
mov
lret
rorb
lret
hlt
add
or
sub
sarl
dec
sbb
jmp
jmp
shlb
cmp
test
int3
test
xor
stc
sub
loope
fimull
movsl
pushf
icebp
cli
mov
mov
or
dec
add
mov
push
or
sub
mov
xchg
mov
call
stc
dec
mov
hlt
push
cmp
adc
ds
and
inc
addr16
jns
shlb
add
sub
add
outsb
imul
dec
jo
xor
cld
ficompl
clc
xor
or
jae
xor
mov
or
dec
lahf
jl
call
dec
add
sub
dec
or
enter
sbb
pusha
add
add
icebp
cmp
jo
test
daa
mov
test
add
dec
pop
stos
sub
nop
jne
popf
insb
mov
xchg
jb
aas
mov
xor
sarl
mov
call
cld
sbb
add
mov
sub
jle
pop
lret
sbb
sub
out
mov
pop
sbb
les
xchg
xchg
add
or
ficoms
cmc
add
hlt
data16
sbb
inc
ljmp
dec
sarl
mov
mov
insb
clc
and
cwtl
push
mov
push
sbb
fbstp
inc
mov
mov
lret
pand
iret
mov
mov
shr
add
lea
jno
xor
sub
subl
add
jnp
into
mov
lahf
sbb
repnz
mov
dec
push
jb
in
mov
lahf
scas
sbb
push
adc
add
int3
loopne
hlt
loopne
dec
sbb
xchg
or
lea
test
jne
mov
aas
xchg
dec
add
sar
mov
adc
lret
push
iret
sub
adc
mov
repnz
pop
lcall
pop
data16
push
jle
mov
les
movsb
cmp
pushf
dec
xchg
test
clc
push
mov
xor
fiadds
xchg
int3
stc
push
mov
repz
mov
jae
adc
stc
sahf
sbb
cmpsl
out
lahf
xor
and
mov
cmp
repz
loop
inc
sub
cmc
fwait
mov
enter
jae
les
jmp
fdivp
add
xor
sub
xor
clc
mov
les
pop
fcoms
mov
lods
call
scas
lods
dec
out
push
xchg
out
adc
sbb
jecxz
add
insb
imul
pop
iret
icebp
cmp
fdivs
sbb
repnz
lods
jmp
rcrl
dec
stos
inc
push
call
loop
jecxz
mov
ficomps
xor
movsl
fildl
dec
and
inc
insb
xchg
pop
and
inc
jle
addb
leave
test
rclb
inc
pop
insl
outsl
fisubrs
dec
rorl
iret
fwait
pop
lahf
xor
cmpsl
sbb
aaa
sbb
mov
iret
push
mov
jle
jne
pop
fwait
loop
mov
hlt
les
push
sub
andl
pop
loop
call
into
inc
mov
mov
leave
loop
outsb
lcall
lahf
mov
fnstsw
icebp
pop
into
jbe
mov
adc
dec
lahf
and
and
rolb
or
cli
dec
inc
dec
jae
xor
cltd
mull
lock
shr
or
mov
scas
loopne
or
xchg
stos
sub
jae
int3
sub
in
cmp
aam
xor
mov
add
pop
lods
scas
mov
ds
add
in
mov
ret
sbb
inc
xor
sbb
aam
inc
cmpsb
fstpl
out
mov
and
xchg
push
jnp
repnz
imul
push
xchg
ja
sbbb
pop
jmp
push
into
xor
out
jo
in
aam
xchg
jae
adc
ret
sub
outsl
inc
leave
push
lahf
add
or
jmp
adc
in
imul
sbb
jo
test
push
mov
ret
test
les
mov
lods
adc
dec
push
es
int
mov
clc
aas
mov
mov
stos
neg
mov
out
mov
or
mov
add
push
dec
xor
push
adc
or
clc
hlt
adc
mov
in
out
arpl
mov
out
mov
fnstenv
mov
psrad
or
pusha
cmpsl
ja
sub
icebp
add
and
xor
cmpsl
repnz
xor
sti
fisubrs
movsb
frstor
test
jg
or
lahf
add
insb
lcall
dec
pop
ds
adc
mov
mov
sbb
adc
push
mov
cmc
lret
lock
in
repz
adc
pop
test
mov
or
repnz
aad
pop
mov
pushf
mov
aad
out
mov
push
or
adc
fsubs
in
fs
jnp
incl
imul
cld
cmpsl
mov
add
rclb
add
xchg
xchg
sbb
stc
and
push
movsl
mov
rclb
repnz
pop
or
lahf
cmp
dec
xlat
xor
ds
ret
jmp
enter
add
pushf
loop
call
out
add
jo
sarb
sbb
xor
add
add
adc
stos
add
dec
mov
or
lret
adc
adc
cmp
lock
aad
add
dec
movsb
je
or
lahf
leave
sti
pop
dec
or
sub
add
loop
cmp
push
dec
fldcw
jae
shll
sbb
dec
cwtl
add
and
push
hlt
push
mov
or
loopne
sub
into
mov
xchg
mov
push
sub
test
adc
sub
pop
repnz
mov
daa
lret
xor
cltd
push
inc
ret
mov
popl
jecxz
xchg
push
cmpsb
lahf
sbb
sub
out
psraw
mov
lret
sub
lea
jmp
inc
enter
rclb
adc
mov
das
push
fmuls
adc
adc
sbb
imul
leave
adc
sub
dec
jl
jo
fisubs
hlt
outsl
je
notrack
mov
jg
ret
nop
mov
adc
mov
xchg
sarl
pop
xchg
cmp
pushf
sbb
cltd
push
ljmp
jb
rclb
inc
adc
fdivp
jo
and
jns
cmp
fwait
outsb
mov
adc
mov
scas
lock
out
mov
push
int3
xchg
add
pop
xor
lahf
add
mov
inc
adc
sub
scas
jns
add
mov
xchg
vmwrite
mov
sbbb
add
in
cmp
xchg
shl
push
pop
push
lea
sub
loope
mov
adc
add
addr16
out
lods
clc
outsl
in
repnz
mov
dec
inc
ret
lahf
rcll
xor
or
mov
jae
or
xchg
add
int3
ds
adcb
push
mov
mov
bound
vmread
or
mov
pop
or
add
mov
out
or
add
lds
ret
jg
mov
sbb
mov
sbb
lds
subb
xchg
inc
adc
and
or
push
push
xchg
out
add
sub
pop
add
stos
push
fnstcw
add
adc
pop
cmpsl
ja
mov
pop
push
lret
jp
mov
jmp
push
push
ds
mov
shlb
in
cvtdq2ps
adc
and
loope
push
or
pushf
xchg
mov
mov
push
adc
cmp
xor
pop
push
xor
or
inc
mov
sub
sub
enter
push
or
dec
shrb
repnz
or
add
mov
lahf
xchg
jl
fcmovu
sbb
push
pop
sub
push
mov
rorb
jecxz
or
cmpsb
lods
lret
loope
add
fiadds
mov
aad
test
nop
lahf
adc
sbb
sbb
cmpsl
subb
mov
adc
pop
adc
xchg
mov
dec
or
clc
icebp
sub
add
je
nop
ficompl
xchg
pop
fsubp
inc
enter
pushf
add
gs
or
lahf
loopne
mov
push
iret
mov
movsb
mov
lock
in
push
fnstcw
dec
mov
rolb
sbb
fsubrl
jp
cmpsl
dec
clc
add
mov
mov
je
sub
xlat
fcmovbe
sti
lahf
sbb
fadd
cmc
shl
add
xchg
ss
add
sub
jno
adc
mov
lret
ljmp
jns
dec
jb
mov
fmull
fldt
lahf
lret
add
shlb
mov
add
ljmp
movsb
icebp
adc
ja
scas
enter
leave
in
imul
addr16
mov
jmp
push
scas
in
or
mov
mov
xor
adc
cmp
push
psubsb
push
add
in
adc
xor
sub
dec
push
sbb
mov
mov
adc
les
insl
daa
std
repnz
xchg
scas
push
les
cmc
adc
orl
adc
in
adc
xchg
push
xchg
clc
cwtl
int
ficoml
add
adc
cltd
sbb
ljmp
xchg
push
test
sbb
les
rcr
fildl
jp
xchg
pop
or
xchg
mov
test
or
stos
adc
int3
pop
repnz
adc
mov
adc
xchg
into
test
jl
lcall
pop
cmp
xchg
xor
dec
aad
jnp
repz
ljmp
lods
in
mov
out
mov
icebp
inc
add
aam
ret
push
sub
mov
stos
aaa
xor
xchg
lret
or
push
rep
or
jp
sbb
cmp
iret
in
fsubl
xchg
xor
mov
sarl
or
dec
lods
in
int
inc
adc
adc
xchg
pop
inc
add
or
dec
mov
cmp
adc
div
nop
or
sub
sub
cltd
or
loopne
add
push
push
mov
xor
test
mov
fsubs
inc
add
add
mov
xor
xchg
cs
push
in
lret
push
test
push
xchg
ja
mov
rclb
add
push
or
hlt
sub
cmp
lock
add
fistpll
sub
sar
ds
dec
and
xchg
std
out
add
int3
adc
cmp
nop
fadd
sbb
insl
jp
aaa
mov
sub
inc
out
lret
decl
mov
mov
xor
sub
cmp
inc
adc
dec
nop
or
adc
xor
les
loopne
xchg
dec
mov
ljmp
int3
shrl
int3
or
dec
ficoml
pop
stos
push
push
sbb
mov
outsl
sub
pusha
fldenv
sub
or
sub
adc
sub
jp
pop
ds
mov
sub
sbb
cmp
shlb
push
push
or
inc
cmc
bnd
push
out
hlt
add
sub
faddl
push
in
test
into
or
xor
dec
adc
es
and
subb
adc
jo
xchg
ror
xor
movsb
xor
ss
jl
inc
pop
mov
nop
fwait
orb
and
add
push
jmp
icebp
mov
out
stc
fnstsw
fdivrp
adc
fildl
mov
inc
movsl
adc
or
scas
mov
sub
cld
shll
mov
inc
mov
cmc
cmp
scas
mov
jl
adc
aam
jmp
nop
inc
aam
mulb
add
inc
cmpsl
and
aas
jecxz
js
mov
lahf
xor
push
push
rcrb
sbb
loop
push
push
and
aaa
mov
mov
inc
adc
jg
push
and
aad
jg
or
cli
push
cmp
cli
inc
mov
mov
mov
ss
mov
lahf
or
cs
lret
or
pop
or
adc
out
lock
mov
lock
addr16
jo
xchg
enter
xchg
adc
or
sub
mov
rcll
lds
mov
popl
adc
sub
and
push
ljmp
dec
test
inc
xchg
mov
lods
out
mov
adc
stc
and
pop
cltd
aad
gs
lcall
roll
movlhps
add
fsub
dec
jle
ret
inc
pop
fprem
arpl
pop
call
leave
mov
xchg
out
mov
pop
jne
jp
inc
lret
pushf
ss
inc
data16
mov
sub
lahf
or
inc
fwait
jmp
int3
add
jg
cmp
inc
push
scas
adc
push
jo
sahf
test
push
movups
xchg
xor
adc
xlat
cld
mov
fidivs
cmpsb
or
sub
scas
loop
pop
xchg
scas
aas
cmpsb
mov
fucom
dec
jbe
cld
pop
fisttpl
add
mov
or
xor
or
mov
add
movb
mov
icebp
jbe
sub
stos
push
mov
push
add
pop
mov
adc
jne
mov
shr
push
jo
mov
rorl
ss
cld
call
pop
xor
ret
push
mov
cmovae
fistpl
es
pop
pop
cmpsl
test
call
add
test
inc
xchg
xlat
sbbb
add
xchg
inc
sbb
fsubrs
pop
loopne
shrl
pop
sbb
sbb
inc
pushf
push
mov
aad
aaa
xlat
repz
cmp
mov
add
xchg
xchg
stc
adc
xchg
jbe
repz
jb
mov
mov
sbb
jno
jno
jp
test
iret
sub
lock
sar
mul
rcrl
xor
pop
in
mov
pop
int3
fldt
mov
dec
ja
adc
les
xor
lahf
enter
mov
adc
iret
xchg
test
sbb
sbb
fiadds
jnp
sub
mov
mov
rolb
adc
repz
mov
push
add
aaa
fisubl
jge
xchg
sub
pop
push
jbe
repnz
push
adc
or
sub
sub
out
adc
es
mov
inc
lods
leave
xchg
adcl
mov
add
icebp
leave
adc
imul
mov
pushf
jbe
mov
repnz
xchg
inc
sbb
mov
sarl
fsubrs
repz
mov
in
aas
enter
sbb
mov
pop
lock
and
lret
inc
jae
push
and
scas
push
gs
test
lahf
pop
fs
dec
xor
addr16
xchg
adc
jo
or
pop
cmpsl
jns
lahf
inc
std
jp
pushf
in
mov
shlb
je
xchg
mov
xchg
adc
push
xor
sbb
xchg
push
jge
sbb
mov
aam
mov
adc
cmc
adc
and
mov
sbb
mov
push
sbb
xchg
pop
jno
push
push
xor
pop
mov
lahf
xchg
andb
imul
loop
add
or
fsubrs
fwait
pop
adcb
xor
in
cltd
or
mov
xchg
sub
in
cmc
jne
les
mov
pop
fdivrs
inc
cmp
or
call
add
push
das
fildl
or
stc
clc
roll
adc
dec
and
or
xchg
shll
lcall
div
jb
mov
iret
lret
mov
sub
int
add
insb
dec
mov
sub
aaa
cltd
push
pop
divl
into
push
dec
aaa
add
sarb
sub
inc
nop
jmp
shrb
dec
jle
rorl
leave
push
notl
clc
into
aaa
or
jo
cmc
cwtl
xchg
xchg
mov
cmp
loopne
rcll
jmp
iret
dec
or
dec
jo
dec
test
mov
insl
push
mov
into
mov
xchg
jo
cmc
shrb
shlb
sbb
dec
ret
repnz
addr16
dec
dec
adc
inc
movsb
incl
ret
nop
cmc
cmp
nop
mov
call
pushf
jmp
shlb
inc
jle
daa
or
push
dec
and
or
jo
cmc
xchg
push
xchg
mov
roll
and
inc
iret
pop
or
inc
jo
inc
test
mov
jns
mov
into
orb
test
repnz
call
xchg
stc
cmp
in
ss
in
enter
jecxz
mov
pop
xor
push
push
cltd
sbb
decl
pop
xchg
sub
enter
les
jmp
dec
pop
jmp
push
or
aad
push
inc
add
dec
push
adc
rclb
test
nop
into
ficomps
pop
mov
clc
js
jmp
repnz
loopne
pop
nop
cmp
mov
test
and
ss
xor
not
mov
and
pop
shlb
xor
testl
sarl
faddl
lock
xor
rol
cld
ffreep
push
cli
imul
subl
mov
dec
mov
movsb
es
push
xor
fsub
out
adcl
rcrl
icebp
rolb
call
int3
or
nop
into
ljmp
adc
mov
xor
jmp
sbb
or
push
mov
or
in
add
dec
cld
mov
adc
sub
push
mov
enter
add
cmp
in
adc
sub
push
and
ds
in
sbb
loopne
int3
test
cld
cwtl
xor
mov
dec
repz
in
push
lods
xor
mov
out
les
jmp
push
jo
or
arpl
sub
dec
pop
or
cmp
in
lahf
xor
mov
out
mov
std
cmp
shr
loopne
dec
in
pop
jae
or
stc
outsb
in
sbb
push
mov
mov
je
nop
testl
movl
and
scas
js
or
and
sbb
pushf
sbb
mov
adc
push
repz
push
xchg
fwait
ss
mov
mov
xchg
add
in
xlat
repnz
mov
xchg
pushl
xchg
push
sub
jns
repnz
push
arpl
or
in
jl
dec
push
aad
pop
push
dec
pop
push
scas
jp
pop
xchg
bnd
pop
ffree
ret
push
ljmp
mov
pop
and
and
fbld
lea
dec
rorb
shlb
loopne
add
ret
negl
icebp
cmp
pop
fistps
add
loopne
add
les
sbb
xchg
pop
mov
test
push
fldcw
mov
or
pop
fs
ficoms
push
xchg
loopne
lahf
in
neg
ds
adc
fisttpl
and
dec
xchg
mov
lahf
or
mov
cvttps2pi
ret
das
inc
push
aad
mov
inc
xchg
divb
xchg
sub
in
ds
frstor
lret
shrl
loope
inc
or
es
and
jl
mov
aaa
daa
outsl
or
ret
jge
pop
cvttps2pi
cmc
cltd
sbb
and
inc
sub
and
xchg
orl
idivb
repnz
ljmp
dec
jmp
in
lahf
jl
mov
sub
pop
ja
inc
cmp
push
or
mov
pop
jl
cmp
hlt
cmpsb
sti
out
jne
xchg
addr16
jae
push
xor
adcb
int3
sbb
dec
cltd
cmp
jecxz
lahf
shrb
push
cli
imul
clc
int3
in
loop
add
imulb
inc
bound
stc
push
nop
mov
ficoms
sar
mov
loopne
lahf
add
int
ror
push
inc
jmp
in
es
xor
adcl
fidivrs
loop
pop
pushf
pop
loopne
sti
xchg
mov
xchg
sub
lret
fcmove
js
mov
pop
cwtl
in
or
cmp
sub
push
sub
cmpb
adc
loop
lahf
mov
adc
and
imul
sub
cmc
in
add
nop
out
xor
bound
fs
mov
arpl
rol
into
mov
jns
hlt
dec
hlt
ud2
xchg
jge
sub
cmp
es
cmp
les
hlt
cmp
inc
icebp
pop
rcll
add
sub
xchg
imul
sbb
push
gs
mov
mov
cld
clc
div
pop
nop
or
scas
inc
in
pop
inc
jmp
cmp
shlb
cmp
fstpl
dec
lods
aad
push
sbb
xchg
add
xlat
push
push
shlb
daa
inc
or
xchg
dec
imul
mov
test
dec
push
adcb
cwtl
pop
jbe
mov
call
sub
push
nop
xor
leave
jbe
incl
sub
popf
ret
push
mov
push
jecxz
or
aaa
cmp
icebp
mov
sbb
cmp
or
inc
or
or
push
or
add
inc
mov
push
int
mov
sub
pop
pop
xor
inc
push
stos
push
mov
shl
sub
and
pop
pop
das
add
fwait
pop
dec
outsl
mov
adc
push
xlat
or
jns
xchg
sbb
adc
adc
push
adc
jle
mov
mov
stos
pushf
in
faddp
mov
jne
ret
divb
mov
ret
mov
sbb
xlat
push
loope
mov
sbbl
inc
or
test
ret
dec
sub
or
push
adc
mov
out
scas
hlt
push
scas
cmpsb
or
mov
stc
repz
push
or
lret
mov
push
pop
fs
iret
leave
xor
add
sub
sub
inc
pushl
add
add
mov
out
push
repz
adc
mov
add
cli
sub
dec
pop
add
sub
lret
les
or
jnp
adc
clc
xchg
pop
sbb
fstpl
xor
fstpl
ds
xorb
sub
cmp
inc
cld
push
xchg
insb
jecxz
mov
mov
mov
inc
pop
fsubr
add
cmp
xchg
into
xchg
mov
dec
mov
shl
xor
stc
sub
stos
repnz
mov
mov
jmp
cmp
and
push
lret
insl
mov
pop
dec
rcr
fstpl
adc
cmp
add
in
cmpsb
mov
sub
and
sub
mov
fisttps
int
popa
push
sub
sub
jg
and
or
int3
dec
test
lods
pushf
adc
fmuls
stos
hlt
into
cld
ret
mov
lret
out
pop
rorb
cmp
lds
mov
mov
jns
in
movb
scas
lfs
push
add
fmull
jmp
test
clc
movsl
jmp
xor
xchg
sub
dec
add
imul
lods
mov
mov
mov
cli
xchg
mov
sbb
jns,pt
sahf
jbe
adc
addps
repnz
sub
pop
lret
mov
insb
xor
or
imul
jbe
repz
jp
xor
or
mov
mov
stc
xchg
mov
divl
int
xchg
jmp
int3
shlb
push
pop
push
sbb
lock
push
jne
in
imul
jo
jecxz
and
sub
lret
fwait
pop
sub
or
pop
aaa
addl
jmp
and
jg
insb
adc
mov
or
dec
adc
jno
mov
mov
movsl
dec
add
inc
stos
into
adc
and
adc
mov
or
jg
lret
cld
add
lret
push
pop
aam
and
inc
imul
sbb
stc
sbb
pop
xchg
inc
add
into
or
push
dec
das
loop
test
xor
loop
or
mov
fimull
nop
push
or
push
push
int3
movsb
es
adc
xor
mov
fisubs
cmpsb
inc
adc
iret
or
int
aas
adc
cmpsb
ljmp
inc
push
out
repnz
in
inc
ss
test
pop
les
dec
mov
pushf
jo
push
adc
jmp
mov
leave
icebp
cmp
jecxz
mulb
push
mov
pop
loopne
cmpsl
xchg
fs
xor
pop
mov
rcll
or
aas
fwait
push
clc
jnp
mov
or
push
nop
lahf
jo
cmp
add
rolb
aam
shl
mov
cmp
rorb
adc
adc
in
cmp
pop
ret
adc
push
call
and
jae
repnz
add
enter
in
xlat
enter
jmp
inc
out
cltd
push
add
call
inc
mov
adc
jbe
loope
push
mov
js
dec
adc
loopne
add
dec
mov
movsl
ret
dec
mov
push
mov
or
aam
sub
in
pop
arpl
int3
int3
cmp
ret
stc
dec
movsl
arpl
or
scas
int
mov
popl
add
aam
aad
popa
jl
mov
ret
mov
mov
mov
cld
ret
dec
push
pop
es
mov
add
repz
xor
nop
inc
or
iret
or
mov
js
test
stos
ret
pop
les
push
inc
mov
xchg
test
or
es
leave
jae
push
cmp
ret
xor
mov
cmpsl
pushf
sub
sahf
jno
mov
push
xlat
jmp
add
mov
bound
adc
pop
shrl
add
xlat
fldt
pop
jb
push
mov
cmpsl
dec
mov
test
sti
movsb
aam
push
cwtl
popa
sub
shl
sbb
or
sub
fxch
shl
jb
cmc
adc
lea
repnz
das
add
inc
sub
in
loopne
daa
xchg
xor
adc
jo
cmp
cmp
gs
sbb
push
pushf
sbb
or
pop
stos
push
ss
int3
adc
push
clc
adc
in
hlt
adc
lcall
push
in
daa
cld
mov
mov
jmp
mov
leave
aad
mov
mov
mov
cli
ficoml
jge
adc
sub
ret
mov
mov
jle
ds
pushl
mov
es
ss
xchg
loop
aaa
push
dec
and
repnz
or
nop
icebp
cmp
add
in
push
adc
iret
or
add
push
mov
mov
clc
push
adc
sarb
stc
out
mov
add
sbb
repz
sbb
jmp
rcll
and
mov
xchg
inc
push
hlt
jbe
popf
in
add
sub
xorl
lods
mov
inc
add
dec
add
sahf
jne
sbbl
push
xor
dec
into
fidivs
lods
push
lret
repnz
add
scas
add
sub
mov
insb
les
adc
push
dec
adc
add
add
xchg
hlt
loope
iret
sub
sbb
mov
lret
sub
cwtl
sub
iret
adc
mov
leave
arpl
push
or
mov
fnstenv
xlat
xor
leave
push
lock
mov
xlat
stos
jno
cmp
sub
add
movb
pop
mov
stos
das
loope
mov
rcr
jb
lods
and
int3
outsb
push
fnstsw
hlt
pop
stc
cmp
iret
or
fcoms
or
stc
repz
mov
fistpl
loope
repnz
test
push
xchg
int
jns
repz
fsubl
sub
rcll
cmpsb
lret
test
push
sbb
pusha
fimuls
aad
add
lahf
mov
or
or
lods
adc
add
in
mov
test
push
fs
aad
jl
outsl
cmp
in
pop
dec
pop
insb
cmp
fsubs
cld
int3
sub
pop
mov
dec
and
and
iret
rolb
dec
cs
aad
cmp
cmp
js
inc
movsl
iret
ret
mov
jp
or
addl
dec
mov
orl
outsb
test
or
xchg
xchg
addl
aaa
cmpsl
push
cmp
into
and
dec
mov
push
xchg
out
cmp
mov
rclb
mov
sbb
repz
pusha
jle
ljmp
xchg
mov
dec
ret
fst
enter
jmp
cmp
xchg
cmp
inc
add
sub
aad
cmp
add
sub
out
sub
xchg
dec
push
fs
push
or
stos
dec
adc
rcrl
in
jno
enter
loope,pn
add
xchg
sub
fisubrs
add
test
xchg
lret
cmc
mov
mov
and
dec
or
adc
jb
mov
dec
arpl
xchg
adc
cmp
adc
ss
in
xchg
inc
sbb
push
xchg
push
insb
adc
push
cwtl
jl
bound
syscall
fistl
inc
or
iret
ljmp
adc
or
adc
and
or
das
add
dec
or
fiadds
inc
cmp
ljmp
dec
cltd
jmp
fistpll
adc
jne
xlat
leave
stc
push
mov
test
inc
inc
mov
sbb
pop
out
insl
rcrl
mov
inc
add
mov
xchg
cmp
sbb
dec
adc
cmp
jp
adc
lahf
ret
in
jecxz
lock
push
insb
push
sbb
jl
repz
mov
pop
add
xor
inc
not
push
push
xlat
pusha
sub
jb
mov
aam
inc
adc
scas
ret
movsb
cs
dec
or
pop
lahf
lock
adc
movl
mov
and
daa
or
icebp
cmpsb
mov
data16
jns
push
out
int3
add
fidivs
inc
nop
fwait
jnp
lahf
inc
roll
adc
clc
sbb
and
jns
push
xchg
mov
ret
jb
or
aad
xor
rcpps
adc
or
xor
and
adc
ret
xor
loope
rorl
or
hlt
dec
xchg
jo
inc
pop
fcompl
or
insb
or
add
adc
add
stos
mov
lods
movsb
or
jle
jnp
push
daa
sub
mov
mov
fsubl
push
jmp
and
enter
imul
test
out
or
cmp
fwait
push
xchg
repz
adc
icebp
mov
faddl
in
inc
iret
jmp
imull
ret
pop
mov
add
fldl
jb
push
pop
int3
push
call
jae
adc
sub
push
test
pop
ret
sti
add
xchg
notl
aaa
ds
stos
sub
fcompl
mov
adc
sbb
jbe
cmpsb
icebp
fsubl
mov
and
cmp
mov
mov
in
add
bound
icebp
sub
mov
mov
sub
daa
sar
out
add
es
sub
mov
mov
mov
lcall
add
imul
xor
add
mov
outsb
pop
ljmp
movsl
cmp
jo
test
ror
mov
std
inc
add
movsb
lock
test
adc
sbb
nop
lret
jo
cwtl
shr
aad
adc
or
sub
test
jae
enter
lahf
or
lods
stos
adc
xor
adc
int
jecxz
mov
sarb
mov
jmp
pushf
dec
mov
cli
xchg
push
mov
sub
mov
movsb
or
xchg
xor
xor
push
in
jno
mov
push
sub
fmuls
push
lahf
cld
xor
or
adc
sub
iret
call
mov
sbb
shlb
out
bound
adc
mov
pop
jnp
cmp
std
sbb
xor
push
and
xchg
outsb
mov
ret
repnz
or
xchg
dec
mov
je
or
jmp
push
dec
popf
mov
ds
dec
shll
inc
inc
and
in
dec
mov
jmp
or
dec
mov
js
pop
out
mov
std
call
sti
mov
fdivl
out
cmp
loopne
inc
lahf
and
inc
into
xor
cs
dec
rolb
add
stc
sbb
daa
xchg
adc
jmp
pushf
out
mov
loopne
pop
adc
iret
pusha
test
out
xlat
or
fidivrs
int3
mov
jb
shl
hlt
or
fs
adc
out
pop
out
sbb
push
lods
mov
nop
mov
out
adc
add
push
xchg
or
push
repnz
add
mov
nop
xchg
repnz
mov
insl
fisubs
fwait
mov
pop
rcll
les
push
pushf
cld
mov
fwait
xchg
push
fimull
in
xchg
dec
cmp
adc
cmp
mov
movsb
push
mov
add
lcall
addl
mov
fmul
and
aad
jns
cmp
dec
hlt
pop
and
fcmovnbe
pop
and
adc
sub
icebp
add
jb
mov
push
gs
dec
mov
nop
adc
adc
mov
xchg
or
rorb
push
mov
shl
dec
jae
nop
je
mov
lahf
adc
adc
lcall
in
push
jnp
dec
or
aaa
sub
push
je
xchg
sub
push
fs
fwait
xchg
fadd
cmp
lret
stc
xlat
insb
call
clc
lret
or
aad
mov
lds
adc
and
test
jecxz
cmc
mov
mov
fildl
aad
xor
int3
call
call
enter
test
or
test
in
insl
mov
lgs
scas
pmulhuw
jne
mov
push
ljmp
mov
in
cld
cmp
cmp
jle
or
dec
enter
mov
cwtl
enter
xchg
pop
call
xchg
jnp
scas
inc
sub
lds
jp
out
call
shl
dec
rcl
mov
push
repnz
ljmp
mov
xchg
or
jo
cmpsb
call
pop
inc
out
sub
mov
insb
xor
lahf
sub
adc
sbb
repnz
adc
adc
add
pusha
test
movb
bsr
mov
and
or
or
mov
ud1
out
mov
fsub
es
lcallw
data16
sub
add
cld
mov
nop
rolb
fsubrl
pusha
or
mov
inc
adc
adc
sub
subl
and
sarl
sbb
lods
adc
cmp
pop
ds
mov
fsubl
jbe
add
insb
jne
loopne
jmp
mov
lds
aas
inc
adc
gs
fdivr
and
lahf
pop
xor
or
jno
or
sbb
setae
imul
mov
in
lea
into
add
mov
popf
xchg
dec
mov
daa
jnp
insl
out
notb
aaa
je
xchg
push
lret
cs
scas
mov
int3
dec
xorb
fidivl
xor
subl
push
in
sbb
cli
mov
sub
mov
dec
inc
adc
nop
sub
xchg
inc
in
xlat
enter
add
mov
loopne
jp
and
jecxz
movsl
or
adc
jae
inc
add
xchg
cmp
scas
mov
maxps
push
ret
adc
leave
xor
frstor
flds
xor
test
shlb
mov
sti
dec
out
adc
push
loop
les
xlat
mov
or
adc
lret
sub
add
lea
xchg
jp
push
or
and
fsubs
addb
gs
adc
mov
fidivl
cld
adc
rcl
ret
jmp
or
sbb
mov
sbb
mov
enter
in
fldt
adc
stc
repz
mov
xor
std
sub
insb
push
lahf
enter
hlt
repnz
and
pop
pop
movsl
repnz
dec
push
mov
xor
jmp
sub
mov
push
iret
fucom
rolb
loop
out
fidivrs
xor
cld
add
adc
mov
push
xor
scas
adc
jne
out
sub
mov
jecxz
outsb
inc
fnsave
jmp
xor
enter
sbb
pop
dec
xchg
sub
adc
stc
leave
cmp
and
cli
mov
clc
inc
mov
sti
aad
mov
in
jnp
mov
std
pop
or
cmp
rolb
mov
into
fs
loop
sbb
cmp
in
loope
adc
mov
sarl
out
inc
fwait
mov
xchg
mov
stc
mov
mov
cmp
jge
add
sub
lret
or
or
in
xor
stos
mov
pop
rcrl
xor
push
fisubrs
cmc
pop
xlat
scas
pushf
imulb
sub
aad
pop
and
es
hlt
ss
adc
add
adc
xor
jmp
cld
xchg
and
add
mov
fisubrs
dec
aad
les
inc
out
and
lahf
cmp
sub
int3
jne
std
mov
jae
mov
popa
fistpll
mov
and
ss
fwait
lret
xchg
cwtl
add
repz
xchg
xlat
pop
test
cmp
dec
pushf
sub
add
dec
mov
adc
stc
sub
sbb
mov
hlt
bswap
or
add
adc
js
mov
mov
sti
loopne
in
mov
mov
dec
loop
sbb
sbb
flds
rcrb
mov
les
gs
adcl
adc
sti
xchg
js
lock
adc
push
mov
mov
xchg
sub
jl
enter
ss
sub
fsts
cmp
adc
dec
xchg
hlt
sbb
mov
mov
fsubrl
out
stc
push
xchg
ror
jecxz
cmp
rol
push
cmp
repnz
call
mov
dec
test
push
sub
xchg
add
adc
loope
sub
push
mov
mov
ljmp
das
hlt
inc
outsl
lods
out
shrl
push
ficompl
fsubl
in
or
push
rorl
mov
in
push
or
or
loopne
and
popw
push
je
and
insl
movsb
decl
inc
or
dec
push
and
jecxz
lock
fimuls
into
rolb
or
movl
mov
jmp
xor
inc
int
push
sub
aam
scas
jmp
inc
adc
xchg
mov
and
mov
cli
or
add
push
std
and
into
stos
mov
add
mov
add
mov
scas
push
hlt
mov
stos
or
int
repnz
aaa
sbb
mov
sub
or
fistpl
pop
sbb
out
or
dec
fnstsw
mov
or
insb
loope
sub
cmove
push
adc
xchg
jp
shrl
pushf
sbb
rcll
mov
jmp
mov
mov
adc
push
mov
imul
arpl
lret
out
adc
bound
dec
push
cmc
sub
in
pop
outsl
push
or
out
mov
and
pop
pop
aad
dec
inc
sub
pop
popf
adc
or
xchg
out
or
stos
add
mov
cmp
xchg
dec
addb
mov
mov
xchg
add
cmp
lahf
icebp
popf
inc
push
or
push
push
insl
je
push
xchg
outsb
mulb
ret
sbb
cmp
rorb
repz
sub
aas
data16
sti
hlt
mov
loop
add
cmp
mov
dec
sti
mov
sub
cld
or
scas
or
add
mov
adc
mov
add
adc
push
lahf
add
mov
loopne
pop
into
xor
dec
aaa
pop
orl
push
pop
xor
xchg
data16
sbb
or
mov
testl
lods
into
cmpsl
sbb
jmpw
clc
sub
lods
mov
jnp
scas
add
mov
add
sub
add
shlb
adc
adc
scas
cmp
es
push
ljmp
mov
push
push
and
ds
and
dec
lahf
or
jns
push
in
adc
jae
pop
aas
pxor
sbb
xchg
cld
and
sahf
add
or
sub
mov
adc
adc
aaa
inc
mov
and
cmp
mov
lret
xor
test
mov
add
jb
adc
push
hlt
and
mov
mov
xor
sub
xchg
aas
fisubl
loop
int3
cmp
xchg
imul
adc
fcmovnbe
mov
int3
mov
and
sbb
sbb
or
mov
movsl
jmp
push
push
sbb
pusha
inc
mov
gs
out
jno
add
xchg
in
out
or
insb
sub
lcall
jecxz
sub
mov
pop
adc
mov
cmp
icebp
and
loopne
adc
ja
inc
into
mov
es
outsb
and
aad
mov
fsts
mov
or
mov
fcomi
enter
int3
mulb
or
aas
jmp
xor
cs
cmpsl
mov
icebp
mov
fistl
imul
cmc
stos
out
icebp
xor
adc
sub
jg
cmpb
filds
stos
jp
enter
das
xchg
push
adc
and
jb
mov
fwait
jmp
shl
popa
xor
adc
addr16
in
iret
sub
sub
sbb
in
mov
add
xor
sub
insb
std
cmp
or
push
js
sbbb
mov
dec
push
sub
adc
in
mov
add
loop
or
mov
ljmp
out
or
xor
add
pop
add
dec
mov
stos
adc
sbb
mulb
scas
push
or
lock
fistpl
je
sub
xor
insl
or
stos
and
or
mov
loope
inc
sbb
out
sbb
movsb
cmpsb
out
add
das
jne
ret
push
pop
repnz
les
xor
sub
sbb
mov
xorb
or
pop
leave
cmp
cmp
iret
dec
in
fwait
or
shr
pop
stos
fwait
popa
ljmp
jp
mov
jo
jecxz
cmc
add
cmp
fidivs
xlat
sub
adc
in
add
push
scas
cmp
out
mov
xor
hlt
dec
and
push
mov
jmp
adc
pop
shll
sti
in
xlat
push
sbb
leave
hlt
mov
xor
std
mov
dec
stos
lea
pop
test
push
daa
lahf
out
cli
dec
xor
jo
out
add
hlt
or
or
pop
and
jmp
and
or
es
fisubrs
out
ljmp
sub
lcall
fidivl
mov
push
in
cmp
loopne
icebp
cld
repz
stc
mov
push
stos
adc
xchg
cmpl
sub
ljmp
push
lods
mov
div
mov
rcrl
add
and
inc
pop
aad
movb
inc
adc
mov
lds
cmpsl
jmp
and
int3
or
loop
into
or
adc
loopne
sti
gs
or
xor
jb
mov
adc
xor
sub
lock
inc
cmovns
xchg
mov
test
in
pop
lcall
loope
sbb
or
sub
ret
dec
negb
push
insb
adc
xor
ss
leave
mov
sbb
paddusw
mov
test
cmc
inc
movsl
hlt
xor
jg
movsl
jl
and
or
cmpsb
out
adc
test
ret
cmp
ret
scas
hlt
pop
rcr
jge
sbb
sub
inc
aaa
stos
out
ds
pop
adc
ficoms
cmp
rcll
sbb
fcomip
inc
sbb
sahf
test
push
xor
jne
add
jg
es
repnz
loopne
cvttps2pi
push
or
int
rcr
mov
sub
movsb
cli
add
leave
cmp
fisubl
aas
mov
and
mov
ds
out
hlt
xor
mov
push
xor
repnz
rorl
adc
mov
adc
lahf
std
scas
imul
pop
jecxz
push
pop
adc
ffree
or
xchg
jae
pop
popf
aad
sbb
dec
lock
cmp
pop
mov
adc
jne
in
mov
cmpsl
cmpb
cmp
lcall
mov
or
sti
fistps
mov
add
les
imul
jae,pt
in
subb
dec
mov
in
push
in
sbb
sub
sbb
cmpsb
push
mov
jb
mov
xor
cwtl
fbld
arpl
ret
mov
pop
imul
dec
mov
adc
jle
hlt
jae
sbb
pusha
or
push
into
sub
and
test
pop
or
bound
push
or
mov
add
jne
outsb
or
stos
mov
push
or
movsb
cmp
xchg
dec
cmp
repnz
pop
mov
push
push
or
ja
cmp
test
mov
lds
aad
lock
xchg
mov
mov
push
inc
shll
mov
adc
push
push
adc
dec
mov
call
int3
enter
xor
aaa
int3
inc
lret
fstps
cmp
jo
mov
ss
gs
adc
sub
insl
and
xor
jge
popa
fidivrl
mov
or
pop
push
mov
sbb
int
cmp
mov
cmp
pop
in
dec
xchg
push
lahf
or
cs
loope
add
xor
push
out
cmp
xchg
mov
push
jmp
into
test
mov
imul
rorb
xchg
push
mov
fs
inc
stos
mov
inc
andl
in
mov
add
adc
imul
call
js
jo
int3
xlat
push
mov
add
xchg
movsb
jbe
in
fadd
xchg
popa
dec
jbe
and
lock
xchg
ljmp
outsl
xor
push
les
scas
sub
dec
mov
pop
out
add
je
or
call
out
mov
gs
ds
mov
mov
xor
sub
movsb
adc
fldl
out
or
sbb
add
into
cmp
aas
fidivl
incl
out
xchg
push
pop
or
or
repnz
and
mov
rcrl
or
lret
repz
dec
iret
and
pop
inc
dec
mov
in
push
pop
xor
movb
cli
aaa
push
repnz
in
sub
mov
mov
movsb
div
into
loope
or
cmp
adc
xchg
adc
sti
dec
sub
and
test
or
sbb
xchg
clc
mov
xchg
push
aas
sbb
sub
into
and
repnz
fisubrl
std
mov
mov
push
vmread
vmread
repz
mov
and
lds
fs
inc
out
pop
mov
lods
js
add
or
sub
mov
sar
sbb
rcrl
mov
daa
sub
jg
inc
dec
or
xchg
pop
scas
scas
cmpsb
xchg
sbb
mov
add
cmp
lret
mov
or
jae
mov
sub
and
or
push
or
adc
or
out
xchg
add
push
add
jecxz
stos
insb
push
lods
mov
cld
or
cltd
repnz
mov
ss
enter
rcll
stos
mov
rcrb
iret
mov
insb
sub
dec
mov
pop
clc
lds
hlt
jl
lahf
pop
mov
testl
xchg
repnz
sbb
sub
xorl
test
leave
aaa
outsl
cmp
js
repnz
ficomps
fcmovbe
test
pop
inc
test
push
ret
adc
jmp
add
xor
push
jmp
movsb
cld
jns
cld
sbb
mov
fdiv
es
repz
cmpsb
shl
js
lea
inc
in
mov
scas
sbb
or
adc
cmpsl
pop
int
adc
std
dec
dec
out
lahf
adc
jmp
adc
push
loope
mov
cli
adc
mov
mov
pushf
out
xchg
lods
mov
xor
adc
pop
hlt
xchg
pop
add
dec
pop
out
jae
and
pusha
add
push
jbe
dec
adc
inc
int3
push
push
stc
sub
lret
jmp
jmp
dec
dec
jecxz
lret
add
mov
outsb
sub
jne
int3
imul
mov
movsb
dec
jl
adc
scas
lds
mov
arpl
mov
lock
and
mov
repnz
pushf
call
push
adc
sub
mov
push
or
cwtl
lret
add
mov
lods
loop
shll
xchg
inc
and
xor
add
pop
lods
adc
decb
in
adc
into
leave
dec
icebp
stc
loope
in
fsubrl
mov
sub
jno
cld
stos
or
stos
stc
in
cli
stos
cld
sar
xor
in
sub
xor
iret
or
and
xchg
inc
int
xor
dec
ljmp
in
inc
mov
cli
mov
mov
sub
bound
aam
mov
clc
pop
mov
sub
cmc
testl
inc
mov
stc
or
lock
mov
pop
and
mov
push
mov
out
xor
cmp
cwtl
push
rol
lahf
gs
sub
adc
mov
push
sub
xor
in
rclb
add
rorb
int3
sbb
out
shl
das
enter
ror
inc
sub
jle
test
mov
xor
aam
xlat
sub
inc
xor
jae
adc
or
inc
mov
ret
sub
mov
dec
call
or
in
push
out
cmp
daa
loope
xchg
and
test
xchg
stos
addr16
fstp
movsb
pushf
add
xchg
inc
jg
int3
popa
mov
or
rclb
in
sti
jp
outsl
in
es
inc
or
push
mov
push
xchg
adc
loop
fsubrl
jp
and
dec
push
lahf
wrmsr
dec
pushf
mov
pop
sbb
andl
shlb
loop
sub
mov
test
out
lahf
lds
jo
or
or
out
push
jo
popf
sbb
pop
dec
mov
fldt
and
rorl
pop
out
adc
fcmovnb
scas
sub
aas
cli
in
and
lahf
add
les
sti
sub
pop
pop
sub
lods
xlat
mov
xchg
inc
fwait
mov
sbb
jp
lock
mov
sub
out
xorl
daa
sub
nop
pop
mov
out
inc
cmp
sbb
push
lock
ret
bound
movsb
mov
roll
mov
xor
sub
clc
jne
inc
and
fwait
inc
sbb
mov
test
sub
xor
jns
xor
push
inc
push
push
fdivl
or
xor
xor
or
add
sub
inc
ficoml
ljmp
rclb
and
push
data16
testb
mov
or
shl
sub
sarl
push
cmp
insb
movl
or
les
notb
ja
jne
mov
cmp
and
shlb
add
mov
pop
push
pusha
adc
in
mov
xor
push
scas
out
loopne
sbb
sbb
outsl
add
lcall
jmp
es
imul
pusha
flds
ljmp
cs
es
notb
xor
or
or
sub
sub
lret
and
mov
fisubrl
adc
gs
fldl
add
jge
mov
add
fnstenv
dec
nop
sub
pusha
xor
imul
add
cmp
out
jo
in
or
adc
and
sub
fcoms
scas
jl
lock
adc
mov
les
add
adc
cmp
add
push
jno
scas
cmp
frstor
xchg
in
pop
bound
sub
test
xchg
mov
cmp
push
enter
push
sbb
dec
call
out
les
jno
adc
jmp
push
mov
in
pop
mov
sub
add
arpl
fiadds
pop
aad
mov
fprem
sub
xchg
jns
mov
shrb
aaa
in
lock
mov
dec
test
push
mov
into
push
mov
lds
movsl
mov
nop
test
loopne
je
push
ja
add
push
pop
or
adc
mov
into
sub
mov
leave
and
and
add
inc
pop
xchg
and
push
into
sbb
push
add
lahf
out
dec
mov
sbb
dec
fsubrl
add
hlt
incb
mov
mov
adc
xor
mov
arpl
ljmp
bsf
aad
jae
lock
scas
imul
mov
pop
add
ss
popf
adc
add
call
flds
lods
push
repz
mov
add
aad
adc
rol
mov
scas
loope
xchg
jp
jg
test
pop
mov
dec
pop
cwtl
ss
adc
cmpsb
sbb
fisubrs
dec
roll
inc
jg
pop
fdivl
pop
test
pop
prefetcht2
jg
adc
mov
sub
xchg
jge
adc
or
xchg
out
nop
adc
sbb
mov
xchg
clc
ss
imul
pop
jae
pop
rcll
jae
fnstenv
mov
jne
shlb
jmp
adcb
cli
stc
insl
outsl
loop
fisttps
xchg
loope
sub
gs
leave
xor
and
dec
xlat
dec
les
mov
popa
iret
lahf
push
cmp
mov
rcrl
or
psllw
into
cmp
rcll
push
dec
aad
je
mov
or
adc
xor
cs
lret
pop
adc
loop
insl
lock
bound
and
cmp
sub
loopne
or
adc
jl
out
cwtl
movb
cmpsb
or
sbb
mov
stc
fmul
jp
ss
sbb
add
mov
push
scas
sti
fistps
xchg
add
xchg
fidivl
leave
mov
add
mov
test
add
and
mov
outsl
jb
sbb
jae
mov
dec
mov
add
sub
or
fbstp
cmc
jne
sub
jecxz
cmp
sbb
sbb
aam
pop
js
shll
pop
mov
xlat
cmc
rcl
cld
adc
ficoms
fs
lds
out
mov
mov
xchg
push
repz
das
mov
in
loopne
ficoms
fs
add
repnz
inc
jg
pop
mov
xor
scas
push
mov
roll
adc
sbb
fsubp
lock
xchg
pop
invd
jne
cmc
stos
adc
mov
in
sbb
push
dec
adc
sbb
dec
or
insb
mov
in
dec
in
dec
pop
loopne
sbb
mov
cli
push
mov
adc
movsl
stos
outsb
lahf
xlat
iret
mov
in
adc
in
jmp
repnz
in
out
or
dec
cmp
insl
adc
jno
cltd
ja
mov
jne
jae
mov
loope
and
out
repz
add
xchg
sub
jbe
dec
scas
dec
fidivs
pop
ja
sbb
add
mov
pop
sbb
lcall
inc
fcmove
fstps
add
stc
adc
loop
add
shl
mov
cltd
sbb
or
dec
sbb
scas
ljmp
add
cmp
or
fst
add
fwait
sbb
or
icebp
sub
add
jmp
add
les
repnz
push
loop
out
insb
fwait
or
loop
in
add
sbb
cmp
dec
jne
mov
sub
arpl
ffree
adc
sub
adc
sub
mov
or
inc
adc
int3
sarb
add
icebp
pop
xchg
cmp
stc
inc
mov
jno
pop
mov
xchg
mov
jge
dec
movsl
mov
nop
mov
cmp
mov
add
and
mov
nop
ljmp
or
stos
mov
lahf
push
xchg
adc
adc
popa
out
xchg
jae
pop
addb
shrb
dec
sbb
xchg
jb
fidivs
mov
xchg
scas
pushf
lret
jb
mov
pop
scas
mov
or
je
bound
cmpsl
in
stos
inc
in
jmp
cmp
in
stos
push
adc
cwtl
rorb
iret
sbb
sbb
jmp
and
mov
mov
or
adc
xor
jae
inc
mov
xchg
sub
sbb
mov
or
je
adc
mov
mov
xor
or
mov
add
mov
aaa
dec
add
ret
add
mov
pxor
insb
jp
mov
test
cli
fsubr
ljmp
or
in
push
mov
add
sbbl
push
push
jp
pop
sub
add
mov
insb
mov
lods
pusha
addl
ja
jns
bound
push
xchg
mov
pop
lret
mov
add
xchg
add
adc
incl
jg,pt
adc
gs
sub
sbb
ficomps
outsl
and
jne
mov
cmp
or
mov
pop
in
test
xchg
or
add
dec
test
shlb
and
mov
cwtl
insb
mov
or
stos
add
adc
or
movsb
repnz
xor
in
xchg
sahf
xchg
decl
mov
xchg
and
pop
ja
mov
push
xchg
scas
xor
dec
add
jo
add
fadd
dec
sbb
xor
mov
xor
inc
cmc
mov
add
cmpsb
aad
or
dec
add
in
sbb
mov
mov
adc
int
cmp
xrelease
enter
jbe
sbb
mov
call
cmp
sub
sahf
xchg
push
cli
dec
icebp
aad
mov
lahf
sbb
adc
leave
add
add
push
push
jne
les
jmp
xor
popl
fs
negb
into
mov
adc
push
cld
loope
pop
sbb
out
and
stos
dec
adc
rolb
push
jo
push
adc
mov
loopne
sbb
orl
in
stc
xchg
and
sub
mov
dec
pop
jp
mov
xor
rcrl
stos
xtest
mov
mov
and
in
mov
int3
call
imul
add
fldl
adc
out
xor
cs
push
sarl
in
jae
insl
xchg
xor
xchg
pop
and
es
sub
cld
jbe
add
lret
mov
aad
xchg
sub
adc
in
fcoms
add
add
dec
push
sub
jmp
and
jns
pop
fwait
or
mov
jg
pusha
mov
fsts
imul
pop
clc
pop
in
push
xor
icebp
inc
pop
dec
icebp
sub
mulb
push
imul
ljmp
pushf
and
cmp
pop
stc
push
mov
mov
push
repz
jne
gs
repz
mov
push
pop
scas
inc
sahf
sbb
sub
mov
pop
in
mov
jnp
mov
mov
pusha
add
mov
cmc
arpl
lock
je
pop
fldenv
mov
dec
loope
movsl
lcall
popa
xor
adc
and
jmp
jae
gs
sub
cmp
mov
jg
ret
shlb
rcr
mov
adc
jmp
and
ret
adc
or
mov
jmp
jmp
jecxz
inc
add
adc
or
xacquire
setl
mov
ljmp
pop
ret
add
add
jb
sub
aas
push
aam
mov
cmp
and
sub
cld
dec
js
jae
xchg
mov
mov
or
js
in
in
or
fsts
lahf
hlt
or
mov
inc
rep
or
aad
jecxz
test
cmp
stos
mov
mov
mov
add
out
out
xchg
xor
push
bound
mov
int3
or
push
mov
dec
out
rorl
jp
ds
xchg
lret
xor
xor
in
mov
mov
inc
loope
mov
add
or
repz
adc
hlt
mov
or
sbb
es
lahf
or
jb
push
push
sub
fnstenv
or
jecxz
xor
add
sub
mov
and
pop
pop
push
rcr
adc
nop
or
add
lahf
sbb
or
add
add
mov
adc
aas
subb
jne
pop
stc
pop
inc
xchg
rcrb
jmp
jge
pop
xchg
mov
mov
add
les
loop
push
mov
lahf
mov
enter
icebp
inc
fstps
out
loopne
jae
pop
jbe
sub
imul
add
adc
out
in
jne
push
stc
outsl
adc
mov
adc
or
sbb
sub
xor
loop
add
or
jns
fsts
mov
inc
lahf
sbb
xor
jae
push
or
add
add
imul
lcall
lods
mov
negl
xlat
and
add
pushf
fstp
int3
mov
jle
jmp
sbb
mov
push
lahf
cmpsb
stos
add
xlat
xorl
and
jecxz
int
test
mov
fnstenv
ret
jae
mov
in
lret
call
test
xchg
or
les
out
sbb
pop
pop
xor
mov
stc
sbb
xor
xlat
mov
pop
and
lret
nop
aad
and
aas
dec
mov
add
idivb
mov
dec
or
push
add
sarb
xchg
inc
lret
lods
rclb
and
subb
lahf
hlt
fnstsw
xchg
les
mov
movsb
hlt
lret
mov
icebp
cli
shrl
mov
in
dec
adc
add
jecxz
stc
and
cmp
jbe
sti
xlat
sbb
cmp
dec
sub
ret
push
rclb
sbbl
ljmp
mov
pop
xchg
adc
xchg
xchg
or
and
imul
add
push
lret
stc
fdivr
adc
xchg
push
push
jge
mov
jb
movsb
sbb
dec
cld
mov
mov
sub
fdivrs
or
mov
fldcw
pop
mov
ljmp
hlt
sahf
sbb
mov
xor
mov
inc
add
out
les
cld
inc
enter
je
je
std
les
loope
dec
pop
enter
rcrb
xchg
subb
or
fnstsw
rcr
lret
mov
mov
push
lock
mov
lds
ljmp
cmp
xchg
cmpsb
push
lods
cmp
enter
sbb
out
cmpsl
adc
out
es
pusha
push
daa
lahf
add
movsl
lret
mov
or
or
sbb
jl
test
cmc
les
push
pop
xor
mov
mov
int
and
or
jmp
loopne
stos
inc
sub
mov
or
bound
xor
mov
fsubrs
mov
rorl
mov
fidivl
add
sub
xor
and
sub
mov
inc
or
sub
inc
xchg
adc
or
mov
adc
or
aam
clc
mov
aad
adc
lea
les
xor
cmp
mov
mov
mov
sub
jecxz
jg
mov
pop
adc
insl
and
adc
mov
mov
jne
mov
test
loopne
fsubrl
insl
fsubs
xchg
xchg
jb
and
adc
mov
leave
out
lahf
add
scas
repnz
or
and
mov
push
add
iret
mov
sbb
sbb
ja
adc
mov
je
sbb
enter
jecxz
xchg
or
sbb
sbb
sti
add
cmc
mov
cmpsb
add
and
js
inc
leave
jae
sub
jmp
dec
sub
mov
sbb
add
mov
or
adc
pop
cmp
jne
jge
xor
out
outsb
jne
addps
dec
lret
mov
push
sbb
add
pop
mov
int
xor
inc
or
sub
sbb
pop
shlb
xchg
orl
sarb
pop
pusha
pop
stos
sbb
sub
adc
stos
lods
aad
xchg
inc
stos
mov
sub
sub
mov
mov
or
adc
lds
jl
into
lahf
or
shrb
jae
jno
mov
xor
add
pusha
mov
push
push
sub
nop
clc
or
dec
mov
xchg
outsl
jg
sub
loopne
sbb
jno
add
out
fmulp
jp
sbb
and
inc
dec
call
dec
mov
inc
sbb
mov
int
mov
pop
mov
inc
lds
pop
mov
xorb
add
mov
push
adc
pop
imul
int3
stos
adc
mov
push
and
sbb
into
pop
dec
std
and
arpl
cmp
mov
push
in
pop
test
int3
add
dec
add
jmp
mov
push
pop
xlat
add
movswl
mov
mov
mov
sub
adc
sbb
mull
push
arpl
pop
sbb
xchg
hlt
dec
dec
dec
cmp
pop
mov
push
sahf
jg
or
jne
jmp
leave
push
rorl
xor
aad
mov
adc
sub
dec
add
dec
jae
lods
orl
sarb
mov
lahf
mov
add
data16
stc
gs
mov
adc
pop
out
jb
sub
push
xchg
icebp
lea
hlt
ja
rcrb
xor
sahf
cmp
lock
push
xor
pop
dec
shrb
pop
daa
cli
sub
pop
mov
xor
les
add
adc
fstpl
xchg
mov
sbb
or
or
and
movsb
pushf
mov
push
ljmp
mov
cmc
lock
push
jno
fisubrl
adc
pop
sub
dec
cwtl
pop
dec
add
icebp
pop
dec
inc
xlat
cmp
inc
movsl
inc
sarl
into
or
xchg
leave
scas
jl
sub
fisubrs
xor
scas
sarb
jne
cmp
gs
pop
jecxz
daa
loopne
lret
mov
lcall
cld
test
mov
adc
push
xchg
sbb
xchg
rcll
testb
ret
repnz
sbb
mov
add
out
mov
imul
ds
adc
and
sar
push
dec
lock
adc
push
aaa
add
jns
dec
stc
sub
adc
es
pop
and
testl
mov
test
or
andl
leave
out
push
xor
outsl
xchg
pop
dec
sbb
sti
call
mov
data16
mov
and
cmp
lock
and
mov
cmp
mov
inc
sbb
or
xchg
adc
mov
das
jge
sub
fisttpll
or
jae
rorb
shll
sub
xchg
leave
daa
fcmovb
or
or
mov
dec
adc
hlt
mov
dec
in
xchg
in
dec
rolb
clc
leave
and
fs
shrb
mov
addl
sub
xor
or
dec
sub
adc
mov
add
dec
insl
pop
sahf
xchg
mov
adc
dec
sbb
enter
iret
sbb
jb
repz
or
and
ffree
bound
scas
iret
or
inc
shlb
insl
out
cwtl
add
hlt
jg
lods
call
nop
dec
jnp
fsubrl
out
sbb
pop
les
and
and
imul
into
push
inc
test
lea
xchg
xlat
in
aam
or
clc
jg
xchg
fldl
push
lock
jle
dec
call
hlt
loopne
mov
pop
or
cmp
pop
flds
aad
ret
or
adc
or
xchg
dec
mov
fs
xchg
xor
imul
or
out
cmc
ret
rcrl
lret
sti
loope
xchg
xchg
mov
test
xchg
or
in
ret
les
push
cmpb
enter
lock
insb
lcall
or
or
xchg
or
cmp
pop
out
inc
stc
jae
popl
push
xchg
dec
jns
push
mov
sbb
or
pop
jecxz
xor
push
lret
sti
outsb
xchg
test
adc
sub
dec
adc
sarl
cmpsl
fildl
pop
sub
or
scas
add
int
inc
lret
repz
les
add
push
test
shl
adc
jmp
test
mov
dec
cmp
sub
push
pop
cmpsb
ljmp
adc
cmc
adc
mov
rolb
imulb
push
xor
xlat
mov
hlt
ret
das
adc
sub
sbb
xor
mov
mov
lret
les
je
mov
mov
dec
ljmp
int
pop
add
xchg
add
inc
filds
rcrb
cmp
inc
cld
push
lret
or
pop
mov
adc
jo
add
mov
xlat
cwtl
mov
testb
or
sbb
pop
adc
in
dec
mov
cld
shll
push
fsubrl
push
cmc
mov
xchg
aas
stos
and
sti
dec
mov
data16
fisubrs
and
out
xchg
mov
mov
lods
stos
popa
mov
sub
les
mov
shlb
sub
cwtl
xor
add
inc
push
test
add
cmpb
fiadds
dec
rcrb
or
push
adc
out
mov
or
addl
pushf
into
xor
adc
add
mov
jecxz
pop
in
sbb
mov
sbb
lock
push
out
cli
push
jnp
push
cmp
rol
or
adc
lods
lods
int3
jl
fstpt
stc
mov
lahf
mov
sbb
stos
push
fmull
iret
fs
out
leave
jne
les
aas
add
xchg
inc
jp
xor
adc
push
xlat
jp
dec
pop
cmp
sbb
das
pop
jge
test
repz
scas
clc
or
mov
aaa
sbb
sub
jnp
or
mov
mov
sbb
or
in
sub
movsb
ljmp
pop
add
sti
cmp
lcall
sbb
shlb
cmp
mov
fmul
cmp
dec
pushl
or
sub
xchg
aas
gs
fwait
leave
pop
out
pop
mov
cmp
in
sbb
mov
into
dec
fdivrl
loope
or
push
xor
lahf
sbb
push
push
clc
ss
sbb
dec
into
inc
mov
lock
jecxz
std
adc
mov
setae
jae
in
adc
in
in
faddp
mov
inc
mov
add
repnz
divl
repz
stc
inc
lock
adc
adc
mov
jge
js
or
inc
mov
or
inc
cmp
cmp
test
mov
movntq
repz
jmp
ljmp
repz
push
movsl
jae
clc
lret
jg
jp
xor
dec
mov
nop
and
and
jae
popf
mov
daa
pop
push
jne
cld
loop
dec
jp
out
xlat
out
loope
xchg
fimuls
cltd
shll
fs
std
push
xor
data16
js
jne
mov
sub
add
adc
or
fwait
jecxz
push
mov
dec
mov
shrb
mov
inc
adc
fst
push
loopne
push
jae
push
or
das
int3
push
inc
pop
and
mov
in
push
push
mov
sahf
and
push
in
cli
sub
inc
lods
mov
or
sub
inc
pop
fdivp
xchg
cmp
add
xor
and
icebp
hlt
hlt
mov
prefetch
adc
pop
xchg
push
cmp
dec
cmp
stos
or
dec
sub
ret
jmp
push
lahf
test
incb
jbe
clc
nop
adc
push
dec
insl
sbb
outsl
clc
xchg
scas
lahf
jle
dec
aad
push
adc
mov
mov
insb
in
lods
pop
es
sub
dec
call
pushf
mov
inc
andb
sahf
and
aaa
out
xor
cmp
out
or
cwtl
repz
dec
jbe
mov
add
icebp
cli
push
add
jno
xor
or
mov
sub
sub
sub
es
and
inc
mov
fcmovbe
adc
sub
rorl
pushf
inc
lahf
pop
mov
nop
aad
xchg
or
in
ss
test
mov
dec
movsb
out
cmp
mov
jmp
lods
add
into
popf
mov
je
xchg
xchg
repnz
lods
pop
mov
push
lods
shl
mov
icebp
xchg
push
divl
pop
inc
or
cmpsb
inc
lods
jmp
push
sbb
push
push
push
jge
lock
mov
sbb
inc
enter
insl
out
and
mov
mov
arpl
ss
lret
sbb
lods
aaa
xor
push
jne
cmp
or
xor
movzwl
xor
stc
into
int3
sbb
repz
mov
popl
scas
cmpsl
adc
xor
mov
sub
mov
out
add
add
in
aad
in
cmp
cmp
push
cs
or
out
xchg
sub
sbb
in
and
cmp
adc
mov
ret
out
incb
jb
mov
pop
mov
bound
add
notl
cmp
or
or
add
clc
mov
jmp
repz
adc
push
movsl
adc
ret
jle
sub
int3
xor
xchg
sub
ud0
sub
hlt
cmp
hlt
scas
xor
ljmp
push
dec
adc
adc
push
mov
or
in
adc
fisubl
pop
adc
in
mov
push
sti
sub
inc
mov
lock
or
cmp
xor
into
fmull
xchg
out
jp
hlt
loope
icebp
push
xor
mov
shrl
add
inc
out
add
insb
outsl
loop
jmp
cmp
mov
mul
cmc
cmc
jecxz
sub
jecxz
pop
rorl
scas
mov
fisubrs
push
push
or
movsl
fldenv
pop
pop
adcb
adc
sar
add
adc
lahf
movsl
sbb
cvtps2pi
arpl
adc
mov
xchg
lret
add
ljmp
and
sbb
stc
sbb
xchg
sub
movsb
jl
push
sub
cmp
inc
movsb
mov
popf
and
ficoms
xchg
cmpsl
and
sub
scas
dec
sbb
add
sbb
cwtl
aam
or
scas
daa
nop
mov
jae
sub
adc
or
mov
adc
jb
jmp
xor
add
incl
mov
cmp
mov
pop
add
repz
int3
sub
sub
das
mov
and
mov
js
hlt
and
pop
sbb
lahf
filds
push
push
sub
lds
add
sbb
enter
cmp
dec
std
add
and
loope
insl
mov
sahf
or
pop
pop
add
test
xor
movhps
pop
sub
cmp
pop
pop
out
xor
aad
shll
jae
jns
mov
sub
aam
mov
mov
lretw
fidivrl
dec
jne
and
xchg
out
push
rcr
mov
xchg
adc
mov
cmp
pushf
xchg
pushf
in
repz
mov
mov
out
adc
mov
dec
mov
lret
imul
pop
dec
aad
es
or
sub
adc
cmc
in
mov
or
in
outsb
fwait
and
jp
mov
sbb
mov
cmp
and
fsubr
jo
outsl
mov
dec
xor
mov
jae,pt
mov
xchg
mov
inc
fcmovbe
mov
bound
mov
push
mov
int3
mov
ret
out
dec
or
push
and
outsb
fdivrp
or
fdivl
jae
sub
int3
dec
add
sub
dec
loop
dec
or
xor
cmc
mov
les
or
sbb
or
test
repnz
push
xchg
or
mov
jne
bnd
shrl
push
mov
lea
dec
pop
cld
mov
movsb
jmp
rcl
mov
stc
lret
sbb
out
push
out
sbb
sub
insb
icebp
cmpsb
and
lods
sahf
mov
xchg
inc
mov
icebp
push
adc
dec
and
cmp
fcomps
push
cltd
hlt
mov
and
arpl
aaa
mov
rcll
cli
js
xchg
je
or
or
inc
sbb
sbb
aad
cmpsb
cli
sbb
dec
sub
icebp
in
fwait
sub
ret
sub
push
push
stos
ja
or
pop
add
pop
dec
insl
out
outsb
or
jae
adc
punpcklbw
and
and
movsb
cmp
stc
cmp
fists
and
inc
fisubrs
stos
enter
mov
cmc
cmp
mov
dec
lock
mov
xor
sub
aad
leave
sbb
mov
or
hlt
mov
mov
data16
insl
out
xchg
ficoms
jae
pop
add
arpl
shlb
fnsave
in
imul
movsl
gs
mov
add
xchg
xor
or
adc
ss
mov
sub
push
add
xor
adc
pop
sub
shlb
push
cmp
loop
sbb
xchg
mov
test
dec
mov
cld
loopne
data16
fwait
rorb
repnz
adc
sbb
xor
sbbb
xchg
jmp
adc
lahf
mov
xor
adc
stc
in
insl
test
lock
add
mov
pop
orl
inc
mov
mov
mov
inc
adc
mov
xor
lds
xor
lahf
enter
mov
lock
loop
icebp
iret
push
jmp
push
loopne
je
sub
add
xor
push
pop
sub
cmp
test
cmp
sub
sti
mov
mov
push
addb
xor
push
jl
sub
inc
xor
push
sarb
outsb
ja
jle
push
outsb
jg
pop
add
mov
adc
loopne
les
in
int
or
rolb
sub
je
dec
sti
arpl
fstpt
or
push
mov
mov
nop
test
xchg
lods
outsb
mov
fsubp
movsl
leave
into
push
jmp
or
sti
hlt
inc
stos
mov
and
or
mov
xorb
jmp
xchg
lock
lret
imul
mov
repnz
out
push
orl
aaa
test
popf
outsl
lret
cmpl
xchg
in
pop
add
test
fcmovbe
xchg
jns
or
fucomip
mov
lret
fcomps
shrl
inc
cvttps2pi
div
xchg
cmp
mov
or
xchg
paddusb
decb
mov
daa
sti
imul
dec
add
je
stos
adc
outsl
mov
test
push
into
adc
leave
sbb
lahf
push
mov
insl
int3
xchg
cmp
std
and
adc
sbb
call
mov
or
sub
sub
or
or
aam
jmp
dec
mov
lods
or
data16
rorb
enter
pop
enter
iret
lds
and
xchg
scas
sub
fdivs
clc
sub
mov
rol
test
into
ret
dec
rol
adc
sbb
pop
sbb
les
in
mov
inc
ror
add
jl
cltd
pop
leave
dec
add
and
or
les
lret
pusha
hlt
push
adc
test
dec
mov
lret
dec
sbb
aas
xor
sub
in
lahf
shrb
mov
arpl
ret
hlt
sahf
xor
mov
repnz
aaa
sub
xchg
adc
in
or
cmp
adc
cmp
push
sub
testl
mov
sub
cli
rorl
and
dec
test
xchg
jl
rcl
mov
jnp
fcmovnu
or
mov
ret
movsl
mov
sub
add
xchg
imul
adc
or
shrb
lret
push
loop
lock
repnz
or
cmp
ss
sbb
nop
sarb
mov
sub
inc
sarb
push
movsb
shlb
cmp
mov
outsb
pop
aas
or
and
xchg
jl
dec
out
xchg
sbb
xchg
and
or
dec
cld
mov
lret
dec
xlat
jle
rcrl
iret
pop
mov
or
sbb
or
xlat
sahf
lods
into
mov
pop
push
imul
ret
mov
loope
loopne
mov
pop
sub
movsl
aam
dec
xchg
insb
add
insb
fistpll
fsubrp
xor
imul
stos
xchg
mov
inc
loop
jo
adc
inc
mov
mov
xchg
xor
cmp
push
jbe
inc
xchg
xchg
sub
lret
pop
jp
mov
pop
mov
in
push
scas
or
sbb
int
pop
test
xchg
cmp
in
mov
add
stos
pop
xlat
cmp
aad
mov
out
out
or
clc
cmp
ficoml
rcrb
out
adc
sahf
adc
movsl
or
mov
imulb
loopne
ret
out
xor
fsubp
gs
sub
mov
mov
push
xchg
xor
lahf
xchg
push
xchg
push
sarl
gs
outsb
and
jecxz
mov
mov
and
mov
xchg
daa
cld
push
aam
sub
jmp
roll
insb
popf
mov
shrl
pop
loop,pt
ljmp
sbb
push
xchg
insb
mov
cmp
jne
pop
ja
jecxz
add
adc
sub
adc
lock
shr
in
jmp
outsl
imul
ret
pop
movsb
jbe
xchg
test
imul
jl
hlt
cltd
shll
fcoms
or
sub
mov
movsb
aas
sub
or
repnz
into
jmp
mov
sub
popl
scas
cli
push
jp
cmpsb
hlt
inc
jecxz
fcompl
pop
mov
mov
inc
pop
jmp
jecxz
in
push
shll
adc
in
fs
std
test
pusha
in
sub
gs
ds
enter
bound
cmp
lcall
jmp
jl
jo
rorb
xor
dec
les
pop
ret
call
fidivrs
or
adc
jmp
int
arpl
lret
rcl
push
mov
jne
in
mov
mov
add
rclb
cmp
xchg
mov
and
mov
sti
sbb
cmp
fdivrs
stc
int3
add
push
sub
jecxz
arpl
adc
adc
jmp
pop
add
mov
imul
pop
add
test
out
nop
rorb
mov
mov
xor
xchg
dec
jo
mov
loopne
adc
mov
clc
out
in
add
and
cmp
pop
testb
push
sti
xchg
sub
dec
in
jp
imul
sbb
jo
daa
xabort
icebp
inc
or
fmul
mov
sub
inc
xor
lock
sbb
std
add
mov
loop
sbbl
sbb
in
lahf
in
pop
sbb
loopne
push
push
sub
loop
iret
lahf
nop
cs
mov
jne
clc
or
push
into
mov
ret
sbb
xchg
into
adc
adc
lret
or
out
out
out
stos
mov
out
jnp
lret
xchg
add
in
mov
stos
add
jb
mov
sahf
sbb
xor
mov
icebp
nop
cmp
add
filds
ss
test
add
icebp
ret
pop
lcall
int3
push
inc
mov
repz
out
push
adc
out
mov
push
lcall
int
in
lahf
dec
addr16
aad
inc
fcomip
mov
stos
adc
das
call
sbb
pmaxsw
mov
cmp
xor
rcrb
in
and
mov
push
adc
mov
mov
sub
mov
adc
jo
xchg
or
mov
push
ret
xor
push
paddusb
mov
leave
pusha
lods
mov
jbe
mov
sub
out
jbe
xchg
daa
pop
hlt
ja
mov
icebp
wbinvd
mov
xchg
ljmp
lock
jl
adc
dec
mov
mov
mov
xchg
adc
or
aaa
arpl
add
shl
jne
sub
movsl
stos
shlb
inc
adc
jmp
ss
lds
push
popa
mov
out
xchg
mov
popf
imul
pusha
sbb
push
mov
lods
jo
pop
xchg
add
or
lock
jle
shrl
shll
lret
pop
fiadds
push
cli
cmp
insb
push
pop
out
rcrb
fldl
shl
fdivs
aad
dec
lret
or
fdivrs
xchg
mov
ret
test
jb
mov
out
mov
sbb
pop
mov
jl
push
sub
pop
hlt
mov
jmp
push
ficompl
out
jle
adc
ffreep
jne
adc
push
enter
dec
adc
fcoml
pop
adc
shll
lods
inc
jno
fs
add
arpl
clc
inc
test
xchg
adc
mov
dec
jle
xchg
or
adc
addb
cmp
push
or
sbb
jnp
adc
mov
testb
cmp
pop
jne
mov
pop
into
mov
mov
mov
mov
rolb
lods
mov
jne,pt
cli
test
sbb
adc
jbe
xor
test
jecxz
add
in
xor
cmc
lahf
and
adc
adc
lods
les
movsl
adc
ja
xor
xchg
dec
mov
mov
cwtl
jmp
mov
repz
push
jne
loop
es
mov
int3
das
or
loopne
pop
aam
dec
rcrb
fcompl
stc
jne
leave
ret
and
jg
dec
aad
inc
push
push
mov
adc
mov
sub
rorl
jbe
add
sub
pop
mov
push
xchg
mov
jge
testl
pushf
mov
mov
and
addl
jo
mov
push
sub
adc
ja
fnstsw
push
testl
loopne
cmp
pop
jae,pt
repz
and
add
jecxz
and
jl
inc
popl
and
jbe
xchg
xchg
ljmp
mov
andb
sbb
dec
fnstenv
or
sub
adc
dec
outsb
mov
out
int3
xchg
mov
jecxz
loop
sbb
sarb
xor
enter
mov
add
add
into
imulb
iret
push
fs
mov
lret
repnz
mov
xchg
mov
add
jl
imul
shrb
sub
outsb
rorl
add
dec
xor
fimull
push
mov
add
daa
mov
xchg
lock
cmp
or
or
xchg
cmp
ja
jb
rorb
mov
cmp
ljmp
insl
flds
mov
pop
mov
stos
orl
or
adc
rolb
inc
jmp
test
dec
pushf
cmp
shrl
jmp
mov
lock
adc
add
adc
add
mov
aas
cmp
dec
add
push
sub
or
mov
lock
cmc
or
aad
adc
mov
js
mov
lds
je
lods
enter
lahf
fdivrp
leave
add
in
jecxz
mov
mov
dec
adc
push
cld
fs
clc
push
movsb
mov
andl
faddl
negl
popf
insb
lea
sub
loope
fists
xchg
add
movsb
or
mov
inc
add
mov
rcll
nop
call
sbb
jo
ficoml
or
dec
jmp
dec
sub
add
lods
sahf
inc
pop
jnp
inc
xor
mov
pop
adc
idiv
add
popf
lcall
and
mov
sub
setb
sbb
xchg
xchg
dec
mov
push
lret
hlt
clc
jnp
sbb
lret
jns
pop
pop
push
jmp
ds
mov
aaa
je
nop
push
adc
mov
push
mov
jecxz
or
add
movsb
or
les
mov
push
push
addb
add
mov
add
lahf
jg
add
lock
push
adc
loopne
mov
cli
add
adc
fmuls
leave
nop
and
arpl
mov
test
xchg
sub
out
stc
dec
aad
xor
out
lea
fcmovb
rclb
nop
sub
stc
push
add
pop
add
in
adc
mov
scas
leave
arpl
icebp
ds
cmp
add
or
push
dec
adc
popa
mov
std
repz
sub
or
inc
jns
mov
lods
mov
mov
jecxz
int3
fisttps
mov
cmp
inc
loope
aaa
mov
pop
dec
aaa
sub
push
sbb
stos
lds
push
and
test
mov
sub
dec
add
gs
jp
in
add
adc
or
adc
cs
jae
orl
arpl
xchg
pop
mov
mov
pop
lds
lret
cmpb
scas
incb
push
fisttps
enter
mov
mov
or
je
cwtl
jp
lods
pop
cmp
imul
or
or
xchg
and
xorb
loopne
jl
cmp
add
data16
push
fcmovnb
cld
dec
mov
inc
cmp
push
add
or
mov
and
cmpl
movsl
addb
cld
fs
pop
sub
adc
and
add
xchg
jne
push
into
dec
adc
adc
test
mov
pop
sbb
xor
addl
lds
inc
adc
fwait
decl
repnz
lods
adc
sahf
ret
rclb
imul
repnz
fscale
jmp
add
and
scas
dec
sbb
or
cmp
sarb
mov
jg
inc
push
and
add
sbb
cmp
popf
loop
sbb
dec
or
push
sbb
test
ss
rcrl
jo
in
dec
in
pop
repnz
shlb
out
lret
adc
pop
push
sahf
xor
push
dec
in
hlt
or
outsl
shlb
or
into
test
sarb
jb
out
mov
arpl
sbb
sbb
adc
sbb
or
lret
call
loop
mov
dec
mov
cmpl
in
add
adc
add
xchg
jns
dec
pop
mov
int
or
pop
mov
add
daa
in
repnz
sarb
je
push
jne
mov
jge
in
inc
add
mov
inc
shl
push
adc
icebp
data16
sub
icebp
and
push
incl
call
dec
adc
aad
pop
xchg
add
jo
dec
or
xchg
movsb
lock
lahf
int3
cmp
xor
shrl
dec
stos
fxch
or
popl
stos
xor
in
or
xor
mov
lods
push
jno
or
movsb
faddp
mov
sti
lock
dec
dec
sahf
sbb
jae
aam
or
pop
pop
push
cmp
adc
fs
repnz
loope
or
xor
xor
pop
popf
add
sbb
incl
sub
fs
adc
xchg
xor
scas
cmp
mov
in
sub
mov
repz
add
mov
sbb
xchg
jae
cs
shlb
cmp
pop
push
in
jo
mov
cmp
pop
shl
in
aad
mov
mov
in
cmp
sub
adc
cs
loope
cmc
jb
lret
fs
into
or
mov
mov
in
sbbb
inc
fisubrl
test
add
mov
cmc
clc
add
out
shrb
mov
xchg
and
or
adc
aas
sbb
mov
mov
ss
push
lret
adc
jl
mov
bound
or
aas
cmp
dec
sub
adc
dec
mov
fdivrl
mov
jo
rcrl
addl
cld
cmp
sbbl
orl
mov
stc
jne
fcomps
out
push
insb
push
xor
fildl
pusha
data16
and
mov
lret
ret
dec
mov
lahf
mov
add
mov
fwait
test
sbb
les
adc
pop
iret
arpl
xchg
sub
inc
aas
enter
loopne
jb
mov
outsl
cmp
outsl
push
lret
in
int3
adc
inc
push
in
shlb
pushf
test
mov
push
adc
sub
mov
out
call
mov
lds
jge
cmc
add
or
jmp
fimull
jb
cltd
push
call
pusha
lock
mov
stos
jnp
movsl
in
movsb
add
out
jmp
xlat
inc
rclb
mov
mov
mov
stos
in
aad
inc
sbb
sbb
or
adc
sbb
jmp
rorb
inc
aam
adc
popf
test
or
fmull
test
call
data16
inc
sbb
add
push
cmp
data16
and
dec
sub
sbb
cmp
push
push
lret
xlat
cmp
nop
jl
das
inc
mov
xlat
lcall
pushf
add
scas
iret
add
jb
lret
xor
add
sub
add
or
mov
inc
les
loopne
scas
add
lret
lcall
fildl
mov
or
pop
repnz
repnz
jge
xchg
sub
clc
sbb
decb
push
pop
sub
lahf
cmp
sub
ret
flds
fisttps
shr
jp
stc
inc
in
stos
add
pushf
shlb
imul
and
lods
or
lret
insb
xchg
fs
sbb
or
push
sbb
clc
push
adc
out
imul
sbb
call
xchg
jne
xlat
jg
mov
cmp
mov
pop
test
pop
lock
mov
frstor
lahf
out
jne
jae
adc
jl
push
shrl
pop
mov
fidivrl
jo
push
clc
fsubl
pop
cmpsb
xorb
cmp
sub
mov
or
adc
pop
jae
adc
mov
test
dec
jne
jle
icebp
mov
adc
xor
inc
sub
daa
fdivrl
in
mov
mov
mov
mov
lcall
das
mov
mov
jae
adc
mov
dec
out
mov
into
nop
jg
notl
mov
adc
pop
push
lods
push
repnz
call
loopne
bound
add
pop
or
stos
cmpl
test
int3
sbb
movsb
xor
mov
mov
sbb
and
lock
dec
fstpt
fcompl
or
ret
pop
ficoml
int3
dec
int
sbb
or
lret
push
dec
mov
pop
jmp
lods
addr16
xor
pop
mov
jmp
jnp
es
lock
jns
push
jbe
les
in
mov
inc
jmp
or
pop
cld
sti
js
andl
adc
icebp
popa
jle
jne
testb
ljmp
push
int
stc
mov
into
dec
fidivl
mov
adc
push
xchg
and
or
cmp
inc
xchg
cmp
push
jbe
push
push
dec
jmp
mov
push
fldenv
sbb
add
adc
sbbb
insl
and
jmp
or
lods
jns
rcll
repz
out
out
dec
call
fisttpl
cmp
xchg
adc
sbb
stc
jae
mov
int
iret
jge
cli
nop
sub
out
call
push
pop
aas
rcrb
push
adc
or
xor
pop
jmp
into
or
or
int3
jne
in
insb
inc
stc
insl
inc
in
out
out
mov
mov
mov
add
cmpb
arpl
mov
xchg
ficoms
das
cli
pop
test
mov
mov
jmp
shll
add
dec
sbb
inc
sub
mov
into
ret
xchg
sub
inc
pop
repnz
mov
and
mov
mov
imul
cld
ljmp
xor
mov
mov
dec
or
pop
or
icebp
xchg
cmc
mov
mov
in
xchg
arpl
jmp
adc
mov
clc
repz
mov
lret
xchg
jne
sbb
cmp
cmp
mov
dec
add
lock
push
jb
add
jmp
daa
or
sbb
daa
mov
nop
scas
lock
jno
sub
adc
mov
xchg
gs
icebp
push
lret
mov
or
js
mov
out
nop
js
cld
jecxz
or
ja
mov
push
jns
lock
in
loopne
popf
dec
sbb
xor
paddsb
shlb
repnz
out
jg
add
in
rcl
push
pop
jb
in
mov
fistpl
push
inc
lods
mov
fldl2e
insl
inc
ret
int
add
mov
mov
or
std
bound
vpmovsxwd
and
fs
pop
inc
dec
push
or
add
mov
mov
lret
pop
add
lock
inc
ror
pushf
push
push
mov
test
lahf
in
jne
xlat
jno
sbb
pusha
cs
imul
add
add
and
fiadds
adc
xchg
popf
cmp
cmpsb
repz
jne
push
mov
repz
aam
nop
jbe
test
lret
loop
ffree
ret
clc
stos
pop
mov
leave
xchg
imul
inc
mov
enter
int3
repnz
repz
loop
movsb
incb
xor
in
mov
jl
lahf
mov
sbb
push
ror
dec
pop
les
in
loop
out
or
in
imull
ret
iret
xchg
add
das
inc
movsl
insl
push
sub
aad
or
stc
mov
lahf
and
cli
xor
repz
cld
mov
repz
int3
adc
push
leave
or
jp
adc
ret
sub
test
dec
or
mov
adc
pop
jmp
stc
in
hlt
test
icebp
cmc
rolb
loopne
cs
lods
or
jge
mov
sub
in
sbb
jmp
bound
add
mov
icebp
add
icebp
cwtl
push
jl
fldcw
call
aas
ret
clc
enter
pop
mov
loope
jae
sub
cmp
add
pop
pop
andl
shld
and
scas
adcl
frstor
movsb
jmp
cli
mov
sahf
fnsave
mov
fisubrl
lahf
sub
jge
in
aas
lock
sub
test
das
icebp
stc
and
jp
cmpsb
sub
mov
mov
jecxz
mov
addr16
or
mov
xlat
push
imul
xchg
xor
sti
mov
pushf
in
jl
sub
bound
movl
sbb
sbb
nop
popf
adc
add
fldz
inc
bound
int
mov
cmp
lock
in
pop
xchg
rorl
rorb
stc
inc
mov
test
cld
dec
cmc
or
sbb
imul
cld
scas
jge
lock
push
subl
imul
xchg
loopne
rorb
sbb
jae
sub
sti
and
mov
xchg
aas
jmp
loope
lock
cmpsb
adc
lds
mov
clc
pushf
in
aaa
mov
mov
and
stc
or
mov
aad
mov
ja
push
rcll
cmp
add
inc
shrb
enter
mov
sbb
fldl
jecxz
fadd
lret
cmp
xor
aas
add
pop
cmpsb
pop
loopne
push
loop
test
mov
lods
ss
addb
or
mov
nop
insl
xchg
sbb
xor
into
sub
add
xor
push
cmp
movb
nop
lcall
push
mov
sub
xlat
enter
stos
add
push
sbbl
xchg
pop
pusha
repnz
mov
ficoms
and
xchg
mov
js
jne
cmp
scas
adc
sbb
push
data16
inc
push
adc
jns
out
xchg
sub
dec
mov
sahf
loopne
es
or
lds
loopne
xchg
sub
push
lods
xchg
bound
xchg
test
out
mov
jg
adc
cmp
gs
add
mov
cmp
add
mov
aaa
scas
or
daa
mov
es
lcall
and
pop
xor
es
sub
mov
jecxz
fs
pop
scas
push
stos
mov
inc
dec
rorb
jns
dec
xor
or
mov
sahf
or
sub
in
or
nop
loop
loop
add
sbb
xchg
add
fisttpll
movsl
nop
into
loop
mov
lods
push
out
mov
xchg
movsb
mov
fdiv
jge
outsl
sub
sub
or
movlps
lods
fnstsw
mov
inc
iret
leave
shll
nop
or
and
sub
jne
xor
mov
sbb
nop
sub
mov
adc
dec
jno
mov
mov
pushf
jbe
sbb
mov
pop
mov
repz
hlt
ljmp
push
imull
stos
cltd
and
mov
xor
lods
inc
add
ss
push
movlps
mov
jae
nop
shlb
mov
xor
sub
sub
lcall
adc
add
xlat
jmp
inc
nop
leave
xor
out
add
scas
adc
xchg
lods
ret
ljmp
sahf
std
add
sub
or
sub
mov
inc
imul
inc
xchg
push
gs
inc
inc
sbb
cmc
inc
mov
mov
stc
sub
loop
push
pop
shr
fldl
mov
dec
rcrb
jnp
mov
ds
fstl
jne
cmp
jp
dec
or
cmp
insl
jo
push
fidivs
int3
rcll
add
fs
outsb
push
jg
cmp
xchg
pop
hlt
sbb
fs
scas
xchg
or
jge
jmp
adc
mov
cmp
jae
push
or
jno
rcrl
enter
rol
inc
ret
cmc
or
sub
sbb
jo
arpl
cmc
lea
ljmp
imul
adc
aam
roll
movsl
ret
das
test
int
adc
sub
test
in
pop
daa
adc
dec
mov
jle
or
jae
lret
out
mov
xor
mov
push
pusha
mov
and
xor
push
push
cmp
sub
divb
outsb
in
popf
mov
sub
int3
das
pusha
ret
adc
or
stos
and
and
xchg
lret
push
icebp
mov
mov
sbb
rorl
test
push
sbbb
xor
ja
jl
popa
pushf
add
add
inc
or
xchg
dec
in
ds
int
lret
jne
jne
cwtl
aad
popf
or
push
mov
xor
mov
iret
fucomp
scas
fidivrl
cmp
cmp
add
sbb
fsubl
cmp
or
or
shll
movsb
test
inc
xchg
ret
mov
jg
sbb
shll
das
rolb
imul
jmp
add
stc
les
pop
adc
popf
or
sub
add
xor
iret
mov
movsb
loop
stc
add
cmp
loop
ljmp
mov
jle
inc
cli
rcll
fsubr
mov
or
scas
add
push
aad
jbe
cwtl
in
js
adc
dec
adc
int3
or
pop
push
popf
addl
push
jno
ljmp
xor
mov
cltd
iret
sti
in
js
rcrb
pop
jno
adcb
push
push
leave
mov
push
pop
mov
cmp
or
cs
jle
ret
call
or
ds
adc
jae
jle
aad
mov
push
pop
iret
and
xchg
iret
xchg
ret
subl
imul
mov
orb
add
les
pop
adc
and
arpl
push
sbb
stos
cmpsl
push
xor
sbb
stc
push
mov
mov
fsub
pop
push
mov
lret
pushl
sbb
push
pop
dec
hlt
mov
jne
mov
mov
in
dec
lahf
cmpsb
adc
subl
movsl
lret
fcmovu
cmp
sub
jmp
push
inc
cmp
lcall
pop
lret
push
inc
subb
xchg
mov
and
xlat
inc
push
stos
in
mov
lahf
ret
or
add
jg
sub
in
sub
jb
mov
je
xchg
pop
adc
sub
jge
cli
jmp
and
sub
sarb
push
notl
inc
outsb
sti
or
or
mov
stos
xchg
mov
lods
push
and
ret
jg
jl
mov
flds
xchg
mov
push
fnstenv
sbb
lfs
cmp
iret
mov
pop
arpl
cmp
cmp
inc
inc
push
pusha
xor
insb
imul
mov
mov
mov
lods
push
testl
js
mov
jle
leave
cmp
push
out
cld
les
mov
xchg
pusha
xor
push
add
dec
in
or
add
pop
mov
pop
mov
pop
dec
sub
cmp
sbb
nop
or
jp
dec
add
fnsave
popf
mov
or
add
inc
or
inc
adc
int3
or
fldenv
sbb
adc
mov
fdivrl
push
add
cmp
icebp
fiaddl
inc
or
outsl
mov
pusha
add
lcall
and
mov
mov
add
and
ret
ret
jb
repnz
push
push
in
push
js
add
sbb
sub
sub
xor
je
ds
cmp
lods
sub
cmp
xlat
ret
test
pop
jecxz
addr16
fldl
lret
pop
pushf
cmp
rorb
iret
mov
pop
enter
sbb
lahf
pop
dec
push
ret
in
sarb
sbb
mov
jp
sti
mov
mov
stos
xchg
or
xor
popa
dec
hlt
mov
cs
pop
adcl
enter
aad
jb
into
jmp
cmp
jge
and
dec
xor
lock
daa
pop
mov
in
addb
lods
into
xor
mov
sub
dec
mov
add
scas
jmp
leave
repz
orl
fldt
test
aam
insb
jno
test
jmp
fadd
into
mov
bswap
out
pop
shll
ret
or
roll
iret
in
fcompl
push
test
or
fisttpll
aad
in
inc
cmp
jl
or
add
loope
enter
and
stos
mov
cmp
clc
mov
scas
das
mov
sub
loop
ds
push
out
aad
in
test
jg
push
dec
fwait
jge
shll
adc
bndldx
repnz
rol
test
dec
dec
rcrb
movsb
pop
sbb
inc
sbb
push
div
inc
sbb
insl
loop
cmpsl
jle
mov
xchg
sub
adc
pop
lea
push
add
int3
mov
mov
je
cli
dec
adc
ss
adc
hlt
ret
mov
les
or
shrl
sub
push
sahf
hlt
sbb
test
add
repnz
push
sbb
jo
dec
lret
or
cs
add
mov
jb
ficoml
cmc
fnstsw
push
add
mov
add
lret
mov
les
aas
sbb
cmpsb
test
sub
mov
out
scas
sub
or
cs
hlt
xchg
sub
cmc
or
jle
enter
mov
lahf
jmp
fists
les
dec
enter
enter
inc
dec
xor
xchg
pop
mov
out
rcrb
cli
xlat
adcl
and
cmpsl
mov
adc
int
mov
aad
cmp
and
stos
add
in
insb
rorb
push
repnz
stos
jo
jecxz
insl
gs
pop
fwait
mov
test
cmp
and
popf
andb
inc
out
call
stos
xlat
ljmp
hlt
shrl
outsb
outsb
xlat
fsubl
nop
movsb
daa
rclb
dec
mov
lds
mov
jmp
or
xor
notb
or
mov
int3
sbb
imul
pop
xchg
push
add
or
lds
jg
std
mov
mov
mov
cmp
shrb
imul
jl
test
jmp
inc
fnstsw
inc
xchg
pop
pop
shll
imul
or
outsl
jne
popf
mov
ret
cvttps2pi
sahf
or
pop
je
push
lcall
ja
dec
test
inc
stc
push
sub
jb
sub
ret
cmpsl
dec
push
jnp
sahf
mov
adc
outsb
push
cmp
sbb
ljmp
ss
ljmp
outsb
jae
lods
sub
fidivl
sub
andb
xchg
out
lods
pop
fwait
add
or
mov
jbe
or
xor
je
cmp
lret
jno
rcrb
mov
ss
lods
ret
pop
push
or
ret
mov
mov
jl
enter
push
jb
dec
xchg
mov
pop
or
push
lock
add
adc
hlt
sbb
lods
push
out
inc
or
in
cmpl
xchg
xor
adc
mov
aas
adc
inc
xchg
ljmp
int3
nop
cmpb
dec
xor
adc
fcmovnb
fstpl
cmp
add
sub
aam
xadd
or
pop
scas
out
iret
jo
icebp
add
into
jb
ficoml
mov
mov
lods
add
in
imul
jbe
mov
das
mov
push
cmp
adc
les
andl
into
les
jns
add
popf
push
pop
add
mov
xchg
out
mov
adc
jns
pop
push
xchg
shlb
bound
cmp
push
xchg
dec
mov
jbe
or
imul
sub
int3
push
faddl
adc
lret
mov
xor
adc
sbb
in
push
in
mov
ds
push
mov
leave
lea
in
mov
pop
jae
into
mov
stos
adc
jbe
add
loop
add
jmp
sub
dec
pop
xor
inc
lahf
cmp
in
setbe
mov
cmpsb
ret
in
mov
adc
mov
popa
sbb
mov
push
sbb
int3
repz
leave
jge
loope
cwtl
addl
stc
dec
mov
mov
stos
adc
fldcw
iret
mov
push
push
adc
test
lret
ljmp
lods
popf
sub
adc
sbb
pop
mov
or
inc
ja
xchg
int3
push
rolb
frstor
mov
sub
sbb
mov
les
dec
mov
js
jo
mov
adc
cld
lret
idivl
repz
std
and
push
fiaddl
and
nop
sub
jp
dec
sub
pop
mov
out
mov
subb
fdivr
and
enter
mov
sti
test
sbb
add
sbb
stos
xor
mov
jle
into
fistps
in
test
mov
lock
loope
fs
push
xlat
ds
mov
xchg
jecxz
push
js
test
daa
mov
mov
test
sahf
jbe
mov
push
add
add
sbb
ljmp
lea
or
in
sar
into
enter
pop
xchg
in
out
or
jp
not
rorl
dec
mov
adc
mov
ss
adc
out
and
fcmovnbe
ret
push
call
xchg
mov
inc
out
add
adc
clc
lret
mov
xor
mov
aam
shrl
mov
ret
mov
testb
and
cwtl
fsubl
mov
lret
sysret
cmp
test
inc
inc
add
mov
add
aam
cmp
lahf
push
sub
movsl
adc
out
mov
sub
repnz
lret
mov
adc
push
push
in
xchg
sahf
xor
sbb
data16
leave
inc
add
mov
mov
push
adc
ss
xlat
sbb
mov
or
xor
add
stos
pop
mov
xor
pop
sub
or
ss
adc
jecxz
mov
mov
or
in
sub
imulb
out
lods
sub
push
in
push
testb
mov
notb
in
bnd
sbb
nop
push
adc
or
cmp
testb
push
mov
into
dec
or
sub
cmp
jbe
arpl
mov
jbe
adc
and
sbb
int3
repnz
or
fidivl
pop
scas
mov
pop
es
in
aad
xchg
out
aas
sahf
dec
xchg
in
test
mov
icebp
dec
or
stc
fdivl
dec
ljmp
sbb
mov
ret
ret
xor
sbb
nop
xlat
push
add
mov
stos
and
or
add
notb
sbb
insb
dec
or
pushf
shrb
and
sub
xchg
sbb
jb
pop
xor
mov
shll
push
pop
les
fisubrl
adc
and
cmc
idivb
sbb
stos
sub
mov
inc
adc
mov
popf
pop
add
xorb
jp
hlt
adc
popf
loop
or
push
pop
popf
out
fwait
mov
sbb
sbb
pop
js
loope
sbb
inc
xchg
rcl
gs
fmul
fdivrl
unpcklps
int
lahf
add
push
add
mov
ss
pop
scas
mov
sahf
xor
push
nop
rorb
mov
xor
outsb
xchg
sbb
xor
or
inc
and
mov
call
cmp
xlat
mov
jl
dec
fldcw
pop
cmc
add
bound
mov
pop
stos
push
aas
lea
pop
sbbl
mov
sbb
fsubp
sub
xorb
cmpsb
inc
sub
mov
dec
cld
push
adc
mov
inc
mov
cmp
push
pop
push
ljmp
or
cmp
popf
test
sbb
inc
jae
lahf
shr
jmp
jmp
icebp
sub
jnp
dec
decl
sub
mov
add
xlat
sub
dec
scas
adc
sub
jl
pop
cwtl
in
xchg
insb
xchg
jp
cld
add
lahf
je
lds
sbb
cmp
out
nop
lret
adc
adc
adc
jne
jae
invd
je
int3
ljmp
lods
std
fcoml
xchg
mov
hlt
mov
movsl
enter
cld
jl
iret
xchg
mov
jl
add
aam
push
mov
scas
lods
rolb
xchg
add
testb
pop
add
lods
pop
sbb
pop
add
sbb
jl
stc
cmp
ret
dec
lret
push
sbbl
and
out
xor
push
popf
ror
jge
xor
jecxz
aam
ds
sbb
outsb
adc
in
jg
cmp
jo
std
sbb
mov
cmpsl
pop
addl
cld
in
cmp
inc
or
adc
rcrl
add
std
add
sti
push
pop
inc
add
add
add
repz
adc
sub
or
sarb
mov
inc
out
sub
mov
aam
and
or
mov
xchg
pop
stos
addr16
in
push
std
sub
psubusw
nop
addr16
dec
pop
sbb
mov
add
add
ret
les
lret
mov
mov
lea
ja
fnsave
fwait
repnz
add
fldl
jl
mov
fmuls
pop
or
stos
cmp
into
pause
sahf
iret
fsubr
int3
mov
out
nop
outsl
enter
cs
push
movl
xchg
ss
xchg
loope
shl
adcb
sbb
sub
int
or
ficomps
and
insb
int
lock
lcall
fnstcw
pusha
jge
add
jl
in
sahf
inc
sub
adc
arpl
ret
fnstenv
jle
test
xor
in
test
jne
lods
mov
fistpll
inc
lods
fs
and
into
dec
adc
mov
fbstp
pop
sbb
add
cld
or
or
push
in
lock
lea
jge
push
or
sbb
adc
out
push
fisttpll
stc
pop
mov
lret
int
rol
shr
pop
iret
int
movsb
call
sub
xchg
movsb
add
sub
mov
push
jle
hlt
xlat
imul
clc
push
icebp
xor
sbb
roll
in
test
daa
pop
enter
clc
push
jne,pt
add
int
mov
mov
push
adc
stos
adc
aaa
push
jge
hlt
icebp
lods
insb
lcall
sub
stos
pop
aad
movsb
pop
sub
inc
mov
lods
xorl
out
rcrl
jmp
mov
idivl
das
outsb
lock
xchg
ret
xchg
mov
popl
movsl
adc
jle,pn
fisubl
loopne
jns
add
enter
cs
xor
mov
jmp
jo
into
push
sbb
dec
andl
add
stc
dec
lret
rcrl
out
push
in
pop
sub
xchg
std
lds
xchg
sti
lret
fwait
lret
fidivrs
imul
add
add
lahf
lock
push
shrb
rorl
push
or
pop
sub
cmpsl
dec
imul
xlat
insb
or
aam
mov
nop
mov
push
dec
or
repz
mov
lahf
aad
imul
mov
adc
pop
and
jp
call
mov
xor
in
and
dec
mov
add
scas
jp
mov
sub
popa
addb
ja
das
mov
fldenv
pcmpgtw
jmp
push
sub
xor
loope
push
in
in
pop
add
call
sub
mov
stos
inc
loope
inc
call
or
lret
flds
out
cmp
jne
pushf
sub
cld
repnz
lods
pop
jl
mov
in
pop
and
jns
push
mov
cmp
cmp
push
repz
jmp
cmpsl
shlb
enter
and
call
in
movsb
lea
push
pop
testb
adc
adc
fstl
cmp
adc
push
push
leave
and
popf
dec
add
cmp
dec
jne
push
xor
ret
hlt
fisubs
inc
inc
jle
sbb
shll
cwtl
inc
fwait
popa
pop
xchg
out
mov
and
rolb
or
sub
rclb
pop
pop
push
loopne
mov
sub
lock
xchg
xchg
aam
cmp
dec
imul
sti
inc
dec
mov
inc
sahf
repz
sarl
sbb
out
lds
repz
sbb
lock
faddl
insl
sbb
stc
add
jmp
push
mov
sub
push
add
adc
dec
in
stc
dec
jmp
push
sub
es
xor
mov
push
mov
inc
jl
sbb
hlt
sbb
stos
fs
jb
nop
pusha
add
mov
in
jb
aas
push
loop
sbb
pop
jg
ret
inc
movsb
test
inc
aas
push
testl
aad
int3
jle
ret
mov
adc
ret
mov
jae
aam
inc
xchg
sar
and
or
fucomp
pop
out
sahf
inc
push
je
mov
cmp
pop
or
mov
sbb
inc
test
pop
and
mov
add
movsb
inc
stc
adc
and
lcall
add
mov
in
in
test
jo
push
mov
loopne
into
adc
inc
ljmp
lahf
jecxz
mov
push
dec
push
pop
sahf
jne
cmp
pop
lret
rolb
mov
sbb
lahf
shlb
imul
inc
pop
insl
rcr
jb
jmp
sahf
xor
in
popf
mov
aam
push
jge
je
mov
xor
imul
mov
sbb
xor
fstl
or
rorb
mov
mov
popf
mov
jo
xorl
lahf
out
sbb
mov
test
out
xchg
std
dec
das
dec
jno
out
or
ja
ljmp
xlat
jnp
sub
push
xchg
xchg
scas
add
in
fs
add
add
sbb
sbb
add
jecxz
and
bound
scas
push
int3
sub
nop
and
or
mov
fiadds
fsubrp
leave
mov
inc
out
cmp
addl
or
mov
pop
or
into
insb
mov
inc
aad
rorb
inc
push
add
pop
mov
int3
add
dec
out
lret
hlt
add
sbb
add
cli
jp
out
int
aas
mov
sbb
in
sub
add
hlt
inc
sbb
add
int3
les
sub
mov
jnp
jle
mov
xchg
cmc
adc
push
pop
lods
cwtl
sub
or
testb
call
add
add
pop
adc
adc
dec
mov
jp
xchg
js
jne
lahf
cld
add
mov
nop
push
into
sub
cmp
dec
fbstp
cmp
jnp
add
popf
mov
or
mov
sbb
loopne
sbb
inc
dec
mov
mov
or
mov
pop
fdivl
jmp
push
fistpl
sarl
sub
mov
fsubrl
dec
xchg
std
negb
push
push
popa
sbb
add
dec
or
lods
pushl
inc
jne
push
ret
mov
sbb
rol
push
inc
add
sahf
xor
hlt
xor
xchg
arpl
call
cmp
lret
filds
and
and
adc
ja
sub
adc
scas
dec
cmpsl
sbb
aad
jbe
fldt
in
and
cmpsb
mov
mov
out
daa
add
test
sbb
push
mov
rol
and
xor
repz
and
decb
lock
rcpps
inc
lock
aam
test
iret
and
cs
enter
out
mov
je
pushf
or
lds
xor
and
outsl
repnz
repnz
in
xchg
stc
push
mov
inc
test
xchg
int
mov
pop
xor
rorl
shrl
mov
mov
jns
je
xor
int3
ror
push
mov
mov
fnstcw
es
call
jbe
popa
rcll
ds
or
or
sub
fwait
mov
fnstcw
xchg
pop
mov
emms
mov
data16
add
nopl
jmp
fildll
dec
repnz
xor
repnz
rcr
movsb
ja
cmp
mov
dec
dec
aam
lahf
sbb
test
mov
xchg
cmp
mov
xlat
lock
cmc
aad
push
mov
and
inc
mov
mov
add
xchg
mov
movsb
and
scas
cmc
test
cli
es
stos
adc
aas
fld
insb
mov
xchg
cli
loopne
adc
mov
jb
push
pop
jl
xor
push
loope
pop
sub
xchg
aad
jbe
stc
push
out
aas
sub
jmp
call
in
xchg
adc
rcr
or
fucom
in
xor
or
sbb
mov
test
or
mov
mov
stc
dec
mov
ror
push
push
shlb
sub
cmpsb
cmpsl
out
sub
mov
fcompl
mov
scas
ds
wbinvd
mov
out
inc
arpl
adc
faddl
rcrl
scas
popl
xchg
mov
cmp
sub
mov
push
mov
jne
sarl
dec
stc
jb
lahf
cmpl
or
add
clc
movups
je
and
out
in
pop
inc
push
push
lea
jecxz
pop
adc
aas
xchg
std
aaa
sub
jno
and
inc
add
xor
adc
sub
lret
icebp
adc
vphadddq
popf
fxch
insb
cmp
sub
xor
mov
js
cmc
fsubs
int
scas
mov
xor
js
int3
adc
add
adc
bound
int3
pop
dec
scas
push
inc
sahf
movsb
push
inc
or
push
and
inc
xchg
jmp
sub
mov
lds
pop
les
mov
out
hlt
pop
fldenv
pop
sub
insb
mov
inc
adcb
mov
adc
in
jecxz
push
jge
add
lcall
sub
aad
movsb
ret
push
ljmp
ljmp
test
call
mov
sub
and
and
jecxz
adc
and
adcl
fimuls
int
add
in
inc
and
inc
mov
sbbl
inc
adc
movsl
or
mov
xchg
mov
out
imul
push
les
int3
stc
adc
mov
fistl
inc
movsb
inc
out
adc
dec
sbb
fwait
out
lahf
push
repnz
scas
js
push
sub
dec
ret
fisubrs
nop
add
int
mov
fisubrs
mov
inc
sbb
out
enter
jge
inc
out
lods
popf
loopne
add
mov
sbbl
sarl
lock
adc
leave
xor
clc
sbbb
dec
push
jl
add
sub
pop
in
cld
mov
add
or
adc
les
jecxz
add
es
out
les
fcmovne
dec
adc
andb
rclb
or
repnz
shlb
cmp
setnp
push
or
sbb
fcomp
or
outsb
add
pause
or
lds
movsb
xorl
adc
inc
movsb
jg
and
ljmp
adc
in
push
leave
cmp
jb
mov
sbb
cli
push
in
scas
fs
inc
push
xlat
dec
fwait
add
rol
and
add
enter
call
sbb
xor
jmp
stos
add
mov
cmp
mov
and
inc
enter
or
mov
xor
test
mov
ret
into
or
jmp
ror
roll
out
lock
push
or
sbb
mov
loopne
push
fdivs
push
dec
dec
cwtl
mov
out
dec
mov
pusha
shl
sbb
mov
loope
fwait
sub
and
jmp
in
sbb
push
adc
cmpsb
popa
incb
cmp
jle
adc
into
or
in
push
test
repnz
mov
or
mov
sub
adc
push
xchg
test
int3
mov
lahf
xorl
pop
mov
adc
pop
or
cmpsl
and
test
ret
lods
lcall
aas
pop
dec
add
bnd
repz
popf
sub
std
paddsw
lahf
in
int3
stos
outsb
cmp
aam
sbb
outsl
call
push
pop
pop
mov
jp
mov
or
pop
jp
and
mov
mov
mov
scas
cmc
imul
sub
sub
jecxz
mov
roll
pop
sti
jmp
xchg
or
fidivrl
das
or
sub
lret
pop
ljmp
inc
nop
shlb
pop
jbe
test
mov
fsubrl
pop
mov
xorb
in
fwait
mov
sbb
push
mov
ret
lret
dec
cld
lret
fs
cs
iret
out
dec
in
stc
dec
xor
mov
add
lods
lret
add
insl
cmpsb
mov
mov
push
xor
les
lahf
inc
jmp
test
add
mov
xchg
insl
aad
fxam
lock
nop
and
fisttps
out
test
scas
pop
add
sub
dec
sahf
test
jne
in
and
adc
hlt
cwtl
lock
jg
jb
push
jle
cwtl
aas
xchg
sbb
cmp
stos
or
mov
push
movsb
adc
test
enter
andb
int
push
fnsave
jmp
cmpsb
sub
jl
xor
adc
add
out
push
loop
inc
mov
clc
sarl
fsubl
outsb
lods
jle
pop
mov
imul
pop
lods
mov
mov
stc
jle
insl
cmp
xchg
cmp
or
mov
mov
fnstenv
cmp
clc
jne
jle
mov
mov
jmp
add
adc
or
lahf
mov
and
insb
push
add
gs
scas
xchg
inc
push
jb
js
mov
aas
incl
sub
clc
or
filds
ja
std
jp
jg
movsb
xor
stc
inc
fsubl
lods
xchg
pushf
sub
mov
mov
fadds
add
aas
in
leave
and
jmp
notl
in
push
sahf
jmp
adc
inc
js
mov
cmp
and
xor
inc
lods
sbb
cmp
jae
sti
std
aad
mov
scas
sbb
stos
mov
mov
adc
ljmp
arpl
in
xor
out
mov
sub
mov
cwtl
ds
xchg
ljmp
jb
leave
add
push
pop
out
or
movsl
mov
cli
sahf
xchg
scas
jno
negb
cmp
repnz
add
in
sbb
dec
cmp
xlat
add
mov
cld
inc
insb
mov
or
aas
stos
add
fisubs
nop
sahf
inc
hlt
out
adc
add
push
dec
jg
adc
jl
insl
mov
test
scas
adc
test
adcb
inc
cmp
inc
mov
rolb
test
stc
je
outsl
cltd
push
sbb
into
pop
fcomip
leave
pop
movsb
imul
jno
push
xor
aad
sub
jmp
adc
divl
pushf
sbb
xor
sub
or
icebp
ret
add
mov
ret
cmp
fists
and
dec
imull
stc
dec
mov
outsb
rcrl
push
xchg
xor
repnz
inc
ret
jnp
cli
out
and
stos
sub
and
stos
xchg
mov
add
shlb
out
mov
sub
jbe
and
xor
test
pop
les
stos
jno
sbb
add
pop
sub
add
andb
push
or
mov
pop
jmp
inc
adc
jmp
or
rcll
fldcw
pop
jb
shlb
push
cwtl
imul
jb
fcompl
outsb
xlat
inc
sarl
jecxz
adc
inc
xor
fwait
inc
ret
add
das
enter
push
or
dec
cli
icebp
mov
stos
aaa
dec
movsl
add
fs
mov
sbb
xchg
mov
stos
adc
lods
lock
or
dec
mov
out
nop
rcr
or
int3
lcall
out
xor
fsts
cmc
leave
xchg
mov
es
sub
test
in
sub
testb
out
xchg
ror
iret
nop
ljmp
in
mov
lods
or
lret
dec
jo
repz
or
lcall
ret
mov
imul
out
fucomip
aam
out
xchg
cmp
or
mov
or
sub
ds
xor
test
mov
pop
andb
lods
test
das
aam
adc
sbbl
insl
sbb
fwait
adc
inc
adc
push
aam
stos
and
pusha
aas
fldcw
push
rorl
adc
ljmp
cli
sub
sti
ss
negb
ret
mov
stc
out
or
add
or
or
sub
jno
loope
inc
pop
xchg
cmp
adc
cli
rcr
shr
das
add
imull
out
pop
sbbl
roll
push
cmpsl
mov
add
jecxz,pt
sbb
xor
mov
adc
sub
stc
xor
pop
inc
call
inc
sti
inc
cmp
cmp
sbb
dec
adc
lea
outsb
push
push
std
inc
ss
mov
jmp
imulb
adc
out
test
lods
xchg
sub
cmp
xlat
and
jmp
lods
stos
add
xor
movsb
cmp
dec
loopne
xchg
and
jmp
mov
sub
fildll
loop
fdivr
out
lods
mov
cwtl
jb
fisubrs
push
stc
dec
xchg
test
push
sbb
cli
push
push
aas
fnsave
mov
shrb
cmp
out
mov
pop
jg
inc
repnz
mov
into
inc
sbb
or
and
loopne
push
add
ds
lods
jl
inc
lahf
sbb
sbb
adc
sub
in
sbb
pop
xor
jp
orb
push
mov
rolb
mov
lahf
sbb
ficomps
jbe
nop
pop
arpl
add
mov
mov
adc
lods
mov
dec
adc
lds
and
lock
dec
push
or
xor
push
pop
leave
nop
mov
cmp
cmp
push
mov
setge
push
sarb
xor
fcoms
inc
mov
pop
cmpsl
addr16
adc
sub
lds
movsl
sbb
xchg
in
jge
xchg
dec
in
xchg
sbb
adc
inc
lods
jmp
imul
inc
jno
lahf
sub
sbb
or
and
xchg
sti
in
fwait
push
push
mov
xor
stos
adc
mov
push
mov
sub
pop
lods
scas
ret
iret
shrb
add
push
lahf
push
push
clc
ljmp
mov
or
cs
xor
xchg
pop
pop
or
sub
jmp
xchg
test
xchg
shrb
call
es
push
repz
loop
into
testl
and
sbb
aad
cmp
ret
xor
test
test
or
mov
ret
call
icebp
or
xchg
sbb
sub
sub
sbb
or
rolb
leave
and
pop
sar
push
sti
mov
ds
cltd
xor
mov
icebp
dec
and
xchg
nop
aad
sub
es
addl
ss
sbb
scas
mov
mov
mov
hlt
and
jg
or
sub
fmul
iret
adc
sbb
or
lret
loopne
ss
loopne
push
les
ss
push
mov
dec
or
sub
and
stos
out
ds
xchg
xchg
jne
xchg
xor
fnstcw
sub
mov
cmpsl
dec
dec
cmp
lea
scas
adc
mov
dec
mov
mov
int3
or
inc
adc
stc
mov
pop
jmp
test
repnz
adc
lock
mov
ficoml
lods
adc
test
sbbl
sti
jo
sbb
or
outsl
mov
mov
shl
ret
mov
adc
repnz
into
scas
or
hlt
mov
adc
push
fbstp
cmp
adc
push
pop
rorl
add
insl
cmp
adc
mov
shrb
aaa
add
jae
add
jae
sti
rcll
movsb
jne
or
adc
add
push
adc
add
mov
mov
dec
mov
fistpl
mov
rol
sbb
push
sbb
rolb
sub
sbb
bts
adc
jp
stos
or
mov
cmp
cmp
or
adc
imul
jmp
hlt
shr
lret
push
sahf
mul
adc
xor
xor
inc
add
aad
popf
out
dec
outsb
sti
jg
sti
scas
out
mov
out
not
or
mov
lahf
jns
daa
loopne
xchg
xor
fstpl
mov
xchg
in
icebp
or
pop
lret
xchg
pop
stos
nop
dec
add
adc
lret
loopne
push
xor
scas
sarb
repz
cmp
mov
enter
dec
sbb
sti
cli
out
cmp
in
and
in
sub
mov
iret
push
mov
push
push
ljmp
mov
add
fsubrs
dec
jns
out
xchg
adc
test
les
mov
sub
loopne
dec
push
mov
adc
and
popf
into
push
pop
push
loope
out
cld
sbb
add
xchg
repnz
dec
dec
movsl
fidivs
lock
js
jb
cli
in
or
lret
jno
mov
arpl
sub
mov
mov
in
xchg
inc
into
aas
sub
ret
loopne
jecxz
mov
out
iret
into
addl
addb
es
shr
dec
nop
lret
add
in
das
or
in
adc
les
and
out
test
imul
imul
add
inc
mov
daa
ret
push
orb
sbb
enter
rcrb
pushf
push
icebp
xchg
int3
inc
push
cwtl
cld
jo
clc
shl
fcompl
push
insb
lods
add
push
lret
int3
dec
push
pop
mov
dec
adc
pop
lock
push
addb
insl
outsb
adc
out
ret
fimuls
xlat
mov
inc
and
repz
mulb
jb
pop
dec
ficoml
pop
mov
cmp
add
testb
inc
mov
mov
lahf
jnp
ret
or
cmp
add
jle
pushf
fcmove
lock
popa
or
jb
mov
mov
inc
loop
lock
jl
push
and
aas
mov
mov
mov
nop
mov
jge
nop
aas
xchg
shrl
aaa
ss
push
les
mov
gs
fcmovnu
cs
adc
roll
rcrb
jge
cmpsl
cmp
xchg
dec
or
or
lea
mov
cltd
jle
rcrl
pop
cmp
sbb
cmp
xor
cwtl
out
ret
lds
push
leave
into
cli
cmpsb
pop
mov
loop
lods
inc
xchg
lods
stos
ret
sub
pop
adc
out
add
ret
pusha
les
cmp
test
mov
lea
push
sahf
rcrl
jne
mov
loop
adc
push
push
mov
mov
xchg
cwtl
cmp
mov
push
bound
mov
and
mov
test
cltd
movsb
cmp
ret
and
sbb
stos
add
cmpxchg
adc
lret
in
orl
jl
cmp
push
lahf
cli
fcoms
lcall
shl
mov
push
test
jmp
mov
js
sti
movd
aad
outsb
inc
lahf
mov
adc
mov
pop
lret
mov
jne
scas
sbbl
or
movsl
lods
out
xchg
int
imul
sub
add
pop
rolb
stos
adc
xchg
leave
and
sub
or
daa
or
jg
jne
imul
aad
and
sbb
sbb
pushf
ret
sbb
aaa
pushf
incb
xor
push
sub
mov
mov
xor
push
cwtl
nop
xlat
pop
sbb
lret
outsl
sahf
xor
idivb
inc
das
sbb
fstl
cmp
xlat
adc
adc
clc
cmpl
outsl
movsb
ss
sub
sbb
icebp
mov
adc
xorb
mov
mov
ds
sbb
stos
sarb
addr16
jmp
add
leave
inc
xchg
add
dec
enter
mov
in
outsb
loope
mull
lock
adc
loope
sub
wbinvd
loop
sbb
jl
xchg
mov
ss
mov
cmp
add
insb
mov
cmp
and
sahf
cli
in
fldenv
cmp
jb
in
sbb
pop
and
inc
sub
call
call
mov
lahf
stos
into
sbb
xor
in
mov
pop
popf
scas
mov
or
sub
add
jmp
in
adc
js
mov
push
adc
les
scas
shr
or
push
test
push
adc
pop
push
gs
pop
sub
jmp
and
aad
mov
pop
jne
push
jns
xchg
ljmp
aam
adc
out
stos
push
mov
cs
rol
xchg
sbb
call
lock
fisubrl
push
inc
adc
add
call
mov
or
shlb
mov
rol
clc
sti
mov
outsl
push
test
sbb
out
and
cmp
les
in
ss
fstl
xor
cmp
ljmp
ret
ss
test
hlt
pop
popf
push
cmp
cmp
add
outsb
and
add
imul
addr16
out
das
jo
movsb
jge
dec
imul
push
stos
sub
lret
mov
test
loop
add
sub
add
insb
jp
sub
mov
sub
aad
pop
xor
les
sub
mov
jl
pop
xchg
sbb
movsb
xchg
or
out
lods
nop
pop
add
sub
cmp
adc
lock
inc
enter
sbb
or
xchg
inc
iret
mov
aas
cmp
aaa
adc
adc
push
and
frstor
add
pop
and
xchg
pusha
mov
cmova
xchg
test
xchg
bnd
mov
rcr
sub
sti
dec
add
jbe
in
sbb
dec
into
popf
add
pop
dec
int3
xorl
mov
mov
sahf
rolb
mov
or
pop
and
mov
mov
and
and
adc
sti
mov
xor
and
lahf
in
imull
mov
pop
scas
or
in
pop
or
imul
mov
jge
or
jb
repz
jne
ljmp
out
xor
scas
out
cmp
or
scas
lods
aad
push
call
xchg
jle
imul
out
enter
jecxz
cli
or
lret
pop
pop
es
mov
mov
cmp
into
in
sub
ret
dec
mov
rolb
inc
fiadds
push
sub
stos
ret
daa
adc
mov
add
jno
aad
push
mov
ret
jno
punpcklbw
outsl
inc
push
sti
or
cmp
mov
ret
fimuls
cmp
dec
jo
inc
and
sahf
leave
jg
push
inc
aaa
pop
dec
mov
add
or
sub
lea
pop
add
imul
dec
jl
dec
add
lock
pop
cmp
jg
or
test
js
adc
xchg
mov
in
sbb
fisttps
xor
jmp
or
pop
pop
scas
shl
test
jmp
add
mov
add
pusha
lret
sub
mov
xchg
cmp
jp
mov
mov
movsb
xchg
mov
and
cmp
lahf
jmp
movsb
ret
push
sti
ret
fcoms
leave
mov
mov
add
aam
inc
pop
repz
sbbl
sti
test
pop
fldl
in
push
mov
jns
xchg
mov
pushf
test
dec
jb
mov
jne
mov
bound
dec
cmp
inc
mov
lahf
sbb
or
inc
adc
fdiv
dec
inc
into
lds
mov
pop
adc
cmpsb
sbb
xor
mov
mov
adc
inc
ljmp
shl
push
mov
in
sub
push
bound
mov
adc
mov
mov
mov
sub
lret
jbe
sar
sti
cmp
push
lret
sbb
andb
inc
push
loop
cmp
xorl
rcrl
mov
sbb
jp
in
add
sbb
sarl
filds
push
mov
fs
xchg
sub
int3
lahf
mov
xor
loopne
leave
stos
loopne
mov
lds
clc
or
leave
adc
xchg
in
mov
sub
xor
stos
add
fmul
daa
jmp
in
mov
add
xchg
add
lods
adc
scas
jns
add
sbb
lret
sti
inc
out
and
sub
out
cmovl
inc
mov
and
inc
adcb
jmp
in
dec
sub
cli
jno
loope
add
fildl
jecxz
pop
jge
xor
leave
int3
cs
dec
push
lahf
icebp
dec
jbe
jb
xor
pop
dec
pop
mov
push
fidivs
adc
pop
rol
pushf
cli
out
in
xor
fidivs
test
xchg
in
or
mov
int
ds
mov
or
cmp
jb
mov
adc
out
nop
jns
inc
leave
sub
stc
imul
cmp
in
mov
gs
push
mov
out
fimuls
or
add
cli
xchg
fisubrs
repz
test
lock
mov
lret
push
shll
push
sar
aad
xor
adc
enter
loop
shl
lahf
sbb
pop
push
fisttpl
mov
adc
dec
movsb
fstps
xchg
das
push
or
mov
shl
loope
inc
sarb
pop
dec
inc
sbb
lds
scas
addb
push
sti
int3
xlat
out
push
inc
je
adc
into
pushf
inc
mov
lock
jmp
subps
xor
stos
push
xchg
xchg
fnsave
jg
pop
or
adc
stos
sbb
test
fcoml
repz
jno
sti
repnz
or
or
repz
aam
or
loope
aad
aad
sub
pop
hlt
test
mov
in
loop
cltd
pushf
andl
pop
shll
iret
lods
push
mov
push
jl
jbe
inc
adc
adc
push
into
dec
adc
sbb
pushf
or
mov
pop
sbb
lds
xor
jnp
aas
cmpsl
mov
mov
shrb
int
xchg
arpl
mov
mov
add
jno
pushf
xor
clc
shlb
aaa
leave
dec
push
inc
and
adc
ja
leave
adc
inc
mov
mov
into
lret
aam
enter
inc
daa
xchg
ret
lahf
or
sub
fabs
into
inc
lahf
pop
nop
fidivrl
outsl
push
xchg
mov
mov
or
lea
jge
out
and
fistps
loope
lret
push
xor
xlat
adcl
and
fmuls
mov
xchg
aad
cmp
cli
jo
xor
mov
mov
into
pop
stos
cmc
out
jb
sub
xchg
adc
test
mov
mov
dec
add
daa
mov
mov
daa
push
push
lea
jne
sahf
push
xchg
push
add
or
mov
sbb
cmc
mov
out
mov
not
add
lea
adc
gs
call
nop
rclb
ds
in
push
and
dec
fcoml
mov
test
aam
subl
into
adc
rdpmc
shl
sbb
xchg
adc
xchg
je
orb
ret
sub
int
into
shl
pop
mov
aaa
sarl
sti
xchg
mov
sbb
mov
loopne
inc
jbe
shlb
mov
arpl
imul
push
les
aam
push
add
and
adc
sub
jg
xor
mov
xchg
lahf
jge
xor
xorl
movsl
jnp
movaps
or
dec
clc
mov
lods
jo
iret
roll
sub
jnp
jle
adc
mov
push
mov
hlt
or
sub
hlt
push
in
loop
mov
sub
mov
and
add
out
loop
ficoms
repnz
mov
and
mov
sub
ljmp
sbb
int3
stos
sbb
sbb
int3
loope
add
repnz
loopne
sbb
loopne
cld
adc
add
sbb
jmp
cld
jg
adc
cltd
fdivl
dec
daa
cld
or
repz
lds
subb
sub
sub
sub
pop
arpl
iret
pop
jl
mov
shl
push
testb
repz
arpl
xchg
xor
add
jns
movsl
iret
loope
sub
dec
imul
cmp
bound
pmulhw
or
rcrb
js
xor
sbb
dec
lods
ret
arpl
out
aaa
popa
aaa
lret
dec
sub
cli
insl
shrb
and
sbb
sub
add
sub
sti
cmp
dec
jmp
mov
adc
adc
insl
push
js
xchg
mov
inc
std
adc
int
std
imul
repz
jl
jecxz
push
mov
push
add
shrb
mov
stos
jno
hlt
push
sti
mov
and
fisubs
incl
cmp
paddsb
popf
cmp
call
cmp
popf
mov
add
add
mov
fs
pop
or
inc
push
inc
ror
adc
mov
or
dec
jnp
xchg
lock
mov
xchg
cmc
sbb
iret
in
lods
sarl
sbb
hlt
and
dec
ss
push
sub
mov
mov
or
popl
jb
mov
add
cmp
jl
outsb
fistl
dec
jge
testb
mov
addb
mov
mov
add
lret
sti
xor
flds
jg
adc
jl
cmpsb
pop
push
cmp
fnstsw
xor
lods
cwtl
jbe
jbe
fcoms
fstl
add
push
pminsw
dec
shrb
xchg
loopne
push
gs
and
mov
sbb
jl
adc
andl
lahf
jg
fbld
inc
ret
ffree
xchg
sub
xchg
jle
into
xor
or
jg
insb
xchg
hlt
mov
xor
xor
rclb
lahf
dec
mov
push
jecxz
mov
icebp
inc
sub
and
push
rcl
lahf
adc
xchg
lcall
jb
les
xchg
test
push
push
daa
mov
pop
sub
rcll
arpl
or
into
call
clc
cmp
inc
jle
lds
or
and
divb
sahf
adc
rcr
sbb
xchg
adc
and
pop
and
loop
out
fwait
nop
hlt
cltd
push
and
stc
cmp
push
or
mov
inc
inc
mov
add
adc
popf
push
dec
fxch
ficomps
xchg
je
les
sahf
orl
ficomps
stos
push
add
mov
sub
mov
mov
adc
push
push
popa
int
nop
data16
cmp
xchg
push
xor
cmp
pop
out
leave
xor
orl
adc
insb
inc
fwait
nop
mov
sub
or
stos
adc
cmp
adc
sbb
sbb
adc
sub
adc
pusha
or
push
lahf
ds
scas
cmpsb
mov
jg
data16
leave
adc
hlt
adc
fnstsw
je
repz
int3
xchg
pop
ja
fldt
int
aad
test
mov
nop
sub
imul
dec
add
out
jge
lahf
out
mov
xchg
lods
pop
add
jno
sub
hlt
loopne
roll
icebp
push
jge
mov
xor
mov
imul
add
hlt
stos
inc
dec
cmc
xchg
mov
or
pop
loopne
fstpt
or
dec
jo
sbb
adc
lret
push
add
int3
cmc
outsl
ljmp
mov
xchg
or
out
fimuls
in
lods
cmp
mov
push
adc
and
jns
pusha
testl
dec
ret
test
mov
xlat
repnz
mov
cs
into
inc
or
mov
fdivs
dec
cli
or
in
fs
mov
sub
shll
pop
cmp
jne
cmp
sti
fs
pop
loop
in
jp
jns
mov
into
jp
mov
aad
mov
sub
rol
std
scas
or
adc
dec
hlt
ja
adc
adc
adc
xor
fwait
and
mov
call
adc
ret
sub
cmc
loopne
and
mov
xor
inc
inc
in
sbb
fdiv
ja
mov
incl
ds
jne
push
mov
sbb
or
cmp
cmp
mov
aad
icebp
sti
push
adc
mov
pop
mov
adc
out
fcmovu
cmp
ss
jmp
pop
decl
hlt
sub
daa
stos
pop
dec
push
mov
fdivs
pop
cmpsb
mov
lods
rcll
stos
push
cmp
call
add
in
syscall
loopne
les
enter
add
test
hlt
iret
push
mov
or
arpl
pop
test
sub
pop
jg
sub
lock
sbb
arpl
outsb
stos
fsubl
add
ret
and
pop
iret
xchg
not
sub
orl
adc
or
cltd
or
xor
mov
mov
jo
or
sti
adc
les
xchg
shl
test
sub
sub
inc
lcall
fisubl
dec
leave
mov
push
pop
xor
popf
stos
sub
shll
or
gs
int
nop
popf
gs
pop
add
loopne
jae
pop
and
jl
mov
sub
ss
mov
in
dec
out
mov
jmp
cs
fimull
sub
cmp
mov
sbb
subb
enter
shlb
dec
mov
icebp
lock
mov
lds
xor
mov
repnz
in
test
in
imul
loope
cmpsl
mov
fcompp
dec
jae
pop
imulb
lcall
enter
pop
or
daa
lds
leave
jno
jmp
dec
push
dec
mov
test
mov
popf
mov
data16
mov
or
rcll
les
leave
push
sub
fisttpll
int
fildll
mov
mov
inc
jl
push
jmp
add
cmp
mov
ss
cmpsb
sbb
divb
ret
int
shl
sub
lea
push
popa
mov
test
cld
jmp
orb
or
jmp
or
jle
pop
mov
inc
mov
cmp
enter
out
cld
push
mov
out
inc
outsb
sub
mov
mov
sbb
fmull
hlt
leave
jo
shrb
pop
ret
cmp
popa
ret
enter
mov
addb
testb
mov
repnz
mov
sbb
sahf
jbe
data16
xor
or
adc
inc
mov
fstl
lahf
in
cmp
test
dec
sti
xchg
add
das
add
add
jns
mov
call
sub
cmp
cmp
inc
jne
repnz
rorl
add
aas
sysexit
mov
or
xlat
ja
clc
icebp
mov
inc
jecxz
jg
and
sti
push
sbb
xor
mov
add
jae
sbb
andb
and
repnz
add
or
jo
pop
jae
mov
hlt
xchg
and
mov
imull
cltd
in
sahf
out
sub
icebp
mov
ret
in
idiv
fsts
stos
mov
cmp
adc
mov
stos
add
inc
out
jl
inc
sbb
jmp
push
into
push
xchg
xor
je
mov
movsl
les
cmp
add
in
dec
mov
mov
test
mov
push
movsb
sub
addr16
xchg
pop
into
and
cmc
cmp
rcl
sbb
pop
adc
ds
mov
xlat
add
push
lea
push
jnp
ds
insb
or
loope
repnz
pushf
add
ret
pusha
add
push
push
pop
mov
test
sarb
data16
in
arpl
sahf
pop
in
xchg
inc
inc
mov
int
call
loop
adc
sub
inc
and
dec
pop
or
shll
push
mov
mov
dec
sbb
mov
incb
ja
js
shlb
jl
xor
add
out
pmulhuw
lret
add
aad
mov
mov
xchg
les
test
adc
lret
mov
leave
adc
daa
insb
sbb
adc
ss
cwtl
jl
incb
inc
ret
cmp
inc
in
or
les
aaa
loop
mov
cmp
repz
in
mov
add
add
stc
push
insb
mov
pop
in
imul
sbb
pop
cmp
cmp
or
stos
es
pushf
dec
repz
notb
sub
mov
xchg
mov
clts
jle
adc
cmp
or
cmp
jne
int
dec
add
shlb
add
sbb
push
jge
add
popf
mov
clc
aas
push
dec
stos
mov
aas
outsl
neg
or
xchg
out
sbb
lcall
sub
cli
insb
push
adc
ja
outsl
adc
ja
clc
xchg
add
daa
sbb
push
jle
mov
sbb
mov
les
mov
xchg
and
lahf
andl
insb
in
aaa
nop
dec
push
rclb
outsl
xchg
movhlps
and
aas
mov
ljmp
xchg
inc
pop
fsub
adc
push
xchg
lret
adc
mov
mov
clc
add
int3
hlt
sub
sbb
add
in
cmp
stc
mov
loope
sbb
add
add
inc
ljmp
xlat
in
pop
xchg
adc
mov
int3
and
fidivl
mov
mov
scas
mov
or
ds
jg
in
movsb
dec
and
cmp
cmpsl
xchg
mov
rclb
lods
insl
in
fsub
rclb
lcall
sbb
jbe
movhps
xchg
xchg
popf
scas
mov
mov
add
mov
cld
jns
out
insb
sbb
adc
jnp
test
dec
scas
insl
ds
cs
cmp
inc
std
add
hlt
pop
lock
out
in
jmp
inc
add
js
push
pusha
outsb
or
dec
inc
mov
imul
push
xor
push
inc
jl
sbb
jbe
sub
xchg
loopne
iret
mov
cmp
mov
aam
mov
mov
sti
and
aaa
push
mov
iret
in
xchg
adc
cmp
pop
mov
imul
mov
adc
cmpsb
adc
cmp
adc
sub
ja
and
rorb
repz
add
je
or
ret
inc
iret
dec
push
dec
lds
sbb
popf
push
cmp
outsl
fisttps
sub
mov
lahf
xchg
outsw
jb
orl
loopne
add
lock
cld
ret
inc
lret
test
call
sub
xor
dec
mov
lahf
pop
in
imul
mov
jnp
sub
rcr
call
or
stc
push
mov
mov
sar
in
repnz
add
mov
movsl
inc
movsl
fs
sub
jo
dec
pusha
ret
loop
out
sbb
enter
dec
nop
rclb
pop
int3
or
cmp
dec
inc
lret
lahf
fsubr
mov
sarb
inc
fnstsw
loope
jne
in
push
imul
add
icebp
inc
shl
xor
dec
mov
pop
lock
or
cmp
push
mov
xchg
inc
out
or
adc
xchg
in
jo
mov
rcl
push
sbb
pop
jno
push
mov
scas
mov
and
dec
sahf
pop
ret
cmp
cld
andb
or
rorb
test
pop
inc
cmp
xchg
les
dec
add
sarb
xchg
sub
fstpl
or
movsl
mov
jl
mov
lret
or
rorb
jg
or
mov
dec
mov
shrl
orb
adc
test
adc
insl
or
jmp
adc
fisubs
bound
clc
ret
push
ljmp
aas
dec
mov
xchg
jb
mov
inc
hlt
or
rcrl
aas
das
mov
mulb
scas
sahf
cmp
popf
fwait
add
push
repz
stos
ret
test
inc
or
fucomp
repnz
stos
adc
ficoms
jle
ss
in
fs
addr16
mov
lahf
out
iret
pushf
gs
jmp
add
cs
fcoml
loop
fisubrs
jge
dec
push
scas
fisubl
dec
push
or
bound
insb
sub
das
mov
cmp
jmp
push
or
rcrl
ds
add
inc
lret
and
aad
sti
or
sbb
dec
les
mov
push
push
push
and
pushf
add
ss
sbb
add
sub
mov
push
sub
jl
dec
loope
ret
lcall
sarl
movsb
xchg
xchg
in
mov
dec
push
push
outsb
and
scas
jmp
add
pop
out
rorb
push
mov
mov
ds
push
sub
inc
aad
mov
xchg
adc
mov
jl
adc
jge
ret
adc
mov
out
mov
xchg
scas
cld
call
jae
dec
adc
add
std
imul
mov
jl
ljmp
pop
xor
mov
and
ja
iret
sub
repz
sub
sar
xor
mov
pop
sub
and
push
hlt
mov
daa
xchg
leave
mov
arpl
arpl
dec
mov
movsb
and
pusha
push
sub
repnz
fisubl
and
inc
mov
popf
pop
imul
sbb
aas
das
add
aaa
enter
mov
les
xor
jbe
mov
fnstsw
dec
loop
and
dec
add
cmp
or
mov
sub
xchg
add
into
stos
or
sahf
hlt
cmc
push
adc
mov
inc
pop
in
xchg
lods
sbb
jns
enter
add
pop
test
pop
push
push
adc
arpl
and
ja
sbbl
fwait
stos
shl
lret
loopne
sbb
aaa
ret
iret
mov
adc
inc
jge
mov
ret
push
ret
push
add
les
lods
sbbl
xor
add
jo
add
mov
leave
mov
das
xor
mov
pop
sbb
pop
cmpb
add
pop
loop
and
jae
pop
in
sub
dec
jbe
movsb
adc
jo
mov
rorb
xchg
jne
fld
jl
stc
push
in
mov
jg
pop
aad
and
mov
jecxz
add
pop
repnz
sub
lcall
push
add
ret
fiaddl
test
stc
dec
repnz
mov
add
mov
cmp
jae
nop
stos
mov
mov
inc
aaa
stos
dec
inc
jo
stc
lock
sbb
ret
dec
push
fsubrs
pop
sbb
aam
mov
sub
cmpsl
call
mov
mov
pushf
jle
push
cmp
enter
mov
jp
pop
or
pop
into
mov
add
mov
sub
jo
repz
mov
adc
mov
int3
cmp
or
mov
sub
rcrb
mov
mov
lret
ret
mov
addr16
aam
adc
sub
sub
gs
mov
and
jge
pmaxub
cs
inc
xchg
sub
fiaddl
push
data16
into
jl
leave
adc
cmp
jmp
add
mov
rolb
adc
jns
sbb
leave
dec
lods
inc
fbstp
xor
xor
sub
sbb
jmp
sbb
sti
cmp
jmp
aad
ja
cmp
sub
ds
mov
dec
pop
in
cwtl
push
fwait
add
std
cmp
xlat
jnp
add
and
xor
sub
xor
les
ds
sub
push
mov
pop
jne
ret
enter
adc
or
xor
xchg
ja
in
cmp
cmp
inc
es
mov
sqrtps
and
shll
push
sbb
aas
adc
pop
out
in
les
push
mov
sub
and
movsl
dec
ja
in
fnsave
in
and
sbb
lods
inc
mov
jne
inc
pushf
xor
xor
lds
cmp
lahf
sahf
dec
sub
daa
sub
pop
sbb
das
add
cmpsl
fwait
mov
data16
dec
add
das
mov
mov
mov
cwtl
xor
icebp
adc
out
or
xchg
lods
push
jno
push
sbb
push
mov
dec
pushl
xchg
daa
ss
lahf
scas
sub
xchg
mov
push
dec
add
or
mov
add
fiadds
cmpsb
inc
sbb
push
scas
mov
aaa
in
xchg
inc
repz
sar
out
push
push
dec
in
ss
repz
ds
sbb
gs
clc
pop
xchg
adc
leave
icebp
jb
add
fsts
mov
mov
mov
aad
out
pop
jbe
or
push
jbe
out
mov
enter
adc
aas
aam
add
xchg
rclb
stos
jo
xor
or
jmp
loop
pop
jmp
add
mov
mov
out
ja
imul
sbb
les
out
jecxz
lahf
mov
loopne
sub
or
push
in
mov
xor
shl
fnstsw
pop
adcb
xchg
push
adc
cmpb
sbb
add
dec
imul
ljmp
lods
sub
jae
cmp
inc
lods
adc
loopne
push
iret
lods
popa
ret
fsubr
insb
aas
pusha
xor
shl
and
mov
mov
adc
out
dec
fidivs
and
imul
or
pop
in
xor
cmp
add
stc
jge
mov
push
lcall
je
sbb
xor
sahf
mov
insb
add
sub
fldenv
out
outsb
add
push
leave
cltd
js
jb
mov
sar
or
mov
repz
lea
les
and
mov
mov
lahf
adcl
inc
aad
fldl2t
loope
lods
xor
adcl
repz
xchg
and
gs
xchg
lods
lods
push
mov
pop
xor
lret
sbb
mov
leave
adc
stos
cmp
outsl
xor
ss
pop
mov
push
out
lahf
rep
int
clc
in
mov
mov
fidivl
push
jbe
adc
int
jecxz
add
lret
lock
and
cs
out
pop
or
push
jle
cmp
mov
rol
sub
jno
cmp
xchg
and
inc
add
sub
mov
hlt
jne
xor
mov
mov
int
fstl
int3
cmpsl
in
pop
leave
cmpsb
and
pop
xor
setl
or
xchg
jmp
jno
xor
mov
out
mov
pusha
mov
add
push
jmp
pushf
popa
adc
dec
xchg
inc
pop
les
pop
sar
jp
les
add
xchg
adc
inc
mov
movsl
pop
nop
repz
test
sbb
push
fildll
sti
cmp
mov
adc
lret
cmp
sub
sbb
repnz
aas
pop
repnz
xchg
inc
xchg
inc
popa
in
sub
cmp
xchg
popa
lret
cli
dec
pminsw
or
mov
je
push
add
imul
sub
arpl
mov
rcrl
mov
popf
mov
xchg
add
sbb
mov
pop
cli
mov
mov
iret
inc
pop
push
sub
lahf
or
in
mov
dec
push
lods
add
mov
pop
push
cmp
add
and
xchg
es
push
pop
ss
inc
adc
pop
or
pop
pop
stos
mov
adc
in
sbb
idivb
cmc
addr16
mov
stc
insb
inc
sar
dec
xor
jb
xor
decl
ret
cs
repz
push
mov
in
adc
mov
push
insb
dec
inc
push
clc
pushf
inc
lods
out
fwait
xor
daa
roll
pop
stos
repz
mov
out
fstpl
mov
sbb
lcall
sub
bound
mov
aam
or
in
out
mov
ret
adc
repnz
push
rcrb
enter
jecxz
bnd
cmc
and
sbb
and
push
clc
rcrb
mov
sahf
xor
add
repz
in
enter
cmp
rcrl
pop
in
out
mov
mov
in
popf
sub
mov
int
orl
outsl
cwtl
jg
andb
add
jmp
lods
pushf
cli
and
insl
mov
dec
ret
cli
shrb
mov
sub
adc
ljmp
and
cmp
mov
popf
in
out
mov
decb
les
dec
lods
xchg
loop
pop
pop
fdivrl
repnz
loope
gs
xor
jnp
test
lods
cld
xchg
in
mov
loopne
mov
adc
and
mov
les
mov
sti
xor
clc
lahf
inc
cs
pop
inc
arpl
xor
popf
cwtl
leave
aaa
mov
sub
aaa
out
xor
adc
nop
mov
jge
adc
ret
shrl
decl
test
repnz
leave
jae
adc
push
push
add
jmp
repz
std
aam
xchg
aaa
sahf
sub
rcl
sbb
sub
out
rcrb
ss
dec
adc
lahf
pushf
or
scas
and
add
xchg
pushf
xor
sbb
js
outsb
jo
rcrw
stos
outsl
aad
ja
shll
push
mov
les
jle
adc
repnz
xchg
out
fnsave
xorl
jne
gs
xor
and
lods
pusha
pop
cmp
int3
dec
sbb
mov
ret
mov
jmp
pop
push
xchg
or
scas
imul
xchg
xchg
lea
movb
jo
mov
rcl
mov
add
jp
ss
push
in
lods
out
mov
dec
add
jmp
lahf
andl
sub
sub
and
add
sbb
xchg
arpl
scas
jne
stc
or
ret
lea
mov
push
addr16
loope
mov
add
add
pop
insl
jp
push
dec
lds
lret
sbb
add
hlt
jl
int3
or
mov
inc
xor
test
clc
adc
rorl
add
inc
sub
mov
aaa
xor
stc
xor
sbbl
out
jnp
mov
sbb
push
jnp
lds
mov
lret
test
cmpsb
sub
enter
cmpsl
addl
mov
mov
enter
cmp
or
out
push
aaa
iret
outsl
or
mov
out
xchg
xor
iret
adc
mov
cmpsb
jge
cmp
sbb
ljmp
xchg
xor
hlt
adc
sar
std
icebp
lcall
sub
lods
mov
inc
jmp
push
std
into
mov
sarb
rclb
lret
xchg
lods
mov
xor
jb
out
or
fmull
fucom
sub
jg
insl
leave
cmp
test
stos
mov
mov
test
cmc
sub
ret
das
push
pop
lahf
mov
jmp
fists
cld
push
sahf
repnz
and
adc
cli
and
mov
jmp
stos
out
xchg
pop
jg
rorl
xlat
fidivl
bound
inc
fimull
inc
mov
mov
push
inc
mov
xchg
or
mov
fcompl
mov
pop
push
mov
mov
aad
or
pusha
jmp
cli
mov
mov
outsl
mov
add
pop
adc
int3
stc
ss
test
push
xor
lock
pop
mov
add
rcr
ss
sub
andps
mov
fstpt
sub
cmc
stc
adc
addb
or
push
pop
xchg
into
mov
mov
xchg
jb
xor
lods
mov
popf
rclb
jecxz
clc
sub
jb
std
push
popf
lret
call
in
movsb
mov
push
sbb
xor
adc
xor
loopne
sub
or
mov
int3
sub
or
stos
faddl
cli
pop
sub
pop
repnz
fmull
sbb
inc
or
xchg
sarl
ss
in
or
mov
out
call
add
pop
bound
sbb
inc
cmp
and
mul
mov
popf
rolb
push
and
xchg
mov
dec
push
repnz
out
add
lods
stc
jg
sub
jle
jmp
stos
cmp
push
and
adc
lds
icebp
xchg
add
scas
test
cmp
ret
leave
cmpl
sarl
leave
add
sub
insb
sbb
jle
lds
test
aaa
xchg
je
sub
lods
xchg
mov
mov
mov
sbb
sbb
test
icebp
les
movl
faddp
jmp
dec
gs
sbb
inc
or
or
jne
test
pop
inc
std
lods
push
jmp
mov
mov
scas
call
dec
or
insl
aad
lods
in
add
cmp
push
enter
mov
lods
into
insl
lret
adc
sub
sub
xor
shrb
adc
mov
roll
in
test
sub
lret
loope
lcall
lods
lods
sahf
les
loop
push
dec
mov
cmpsl
xor
sbb
push
fstl
call
sub
inc
adc
call
out
pushf
ljmp
push
out
mov
test
orb
icebp
sahf
inc
fbld
pop
jne
push
dec
mov
testl
lahf
sbb
add
mov
sub
and
pslld
xor
add
push
shlb
jl
pop
cmp
in
ficoms
fsts
pop
sbb
lods
cmp
and
sub
bnd
jle
into
adc
nop
roll
mov
mov
out
lea
ret
aad
inc
ds
adcl
scas
stc
pop
iret
sub
cmp
add
mov
push
andl
repnz
inc
dec
int3
outsl
mov
adc
mov
inc
add
add
mov
sarb
push
add
sbb
stos
add
test
push
lret
inc
lret
sbb
add
lods
sbb
or
aam
sbb
dec
out
dec
mov
scas
jb
rcrl
pop
pcmpeqd
pushf
test
test
jg
cmp
aaa
cmp
popf
dec
adc
hlt
xchg
in
stos
xchg
mov
into
jmp
fistpll
cmp
imul
sbb
xchg
ss
jl
out
or
sub
mov
out
mov
rolb
popf
or
stc
pop
shrl
addb
cmp
neg
add
movsb
or
dec
imul
sub
push
mov
shl
dec
adc
inc
shr
sub
out
or
jnp
add
xchg
push
inc
scas
jp
xorl
sub
xchg
cld
rorb
jecxz
cmp
js
push
leave
xchg
mov
or
js
mov
mov
iret
mov
bnd
clc
test
aam
jo
repnz
fdiv
stc
movsl
or
dec
cli
jmp
or
mov
shl
jl
push
add
nop
lret
xor
iret
mov
or
in
sub
push
add
push
adc
xchg
roll
or
out
inc
cltd
pushf
mov
loopne
paddsb
movsb
push
fcmovne
mov
shlb
and
adcl
sub
xchg
mov
xchg
mov
jae
mov
adc
pop
adc
mov
imul
pusha
push
arpl
xchg
ljmp
adc
mov
jbe
movsl
loop
add
mov
lcall
fwait
sahf
adc
fisttpl
in
test
gs
ss
popf
cmp
pop
pop
out
fimull
repz
stos
mov
inc
xchg
sbb
in
mov
in
ret
adc
repnz
int3
rol
or
mov
jb
in
sbb
pop
adc
sbb
rol
mov
stos
sbb
in
push
cmp
or
or
or
inc
mov
jle
rcrb
mov
insb
stc
daa
sub
push
dec
sahf
lock
jns
pop
leave
xor
sbb
nop
orb
jmp
inc
xchg
mov
fmull
rclb
scas
jbe
mov
lret
mov
mov
mov
add
mov
out
in
lods
sbb
clc
adc
cld
adc
xchg
mov
sub
xlat
jg
ljmp
sub
lock
movmskps
cmp
add
mov
mov
fmuls
das
push
xor
adc
mov
fcmovnu
out
sub
add
inc
fldln2
xchg
or
adc
lahf
repnz
arpl
ret
push
stos
mov
add
jp
adc
fldcw
mov
fisubrs
pop
sti
add
repnz
jb
pop
jle
movsb
gs
xlat
stos
enter
sar
push
icebp
cmc
rcll
in
lods
or
adc
mov
push
lods
and
loopne
push
adc
std
or
inc
shrb
push
cmc
pop
inc
jne
frstor
adc
fs
fnsave
clc
add
ss
and
aad
mov
add
jp
mov
out
cld
and
push
gs
mov
xor
loop
or
mov
xor
pop
xor
pop
xor
dec
mov
addr16
ret
pop
add
shlb
or
jg
mov
popf
add
xor
scas
out
sbb
aad
nop
mov
lret
out
sub
add
daa
sub
sbb
add
in
pop
in
and
sub
clc
popa
fisubl
xchg
ljmp
popa
push
lock
add
mov
stc
aaa
mov
inc
jg
subl
test
stc
sbb
xchg
je
or
test
add
mov
mov
jecxz
adc
popf
xchg
jae
push
inc
lods
adc
push
xor
add
repnz
into
push
mov
sarl
dec
lret
movsl
out
mov
mov
inc
xchg
sbb
iret
inc
cmp
mov
and
push
jae
mov
mov
mov
loopne
lcall
mov
retw
xchg
jb
jb
or
xor
or
mov
sti
push
cmp
add
add
inc
add
stc
es
push
pop
jg
pushf
idivl
adc
jo
adc
push
and
mov
lret
pop
ss
sub
ljmp
adc
and
adc
iret
out
pop
or
rcl
dec
xchg
dec
mov
jbe
sbbl
adc
mov
sub
xchg
out
repnz
aaa
xor
pop
int
jmp
add
rorb
sub
or
adc
lock
mov
mov
mov
pop
movb
test
ficompl
int3
mov
add
rcl
outsb
dec
ret
mov
jns
testl
das
cmp
xchg
xchg
hlt
mov
int3
push
cltd
xchg
mov
mov
fwait
aad
push
insb
jl
dec
adc
repz
or
mov
insl
int
ficoms
int3
mov
rcr
adc
sarb
iret
push
xor
push
sti
sarb
adc
push
insb
sar
jl
mov
lods
pop
cmp
jl
push
in
sti
xchg
leave
fiaddl
mov
mov
inc
lock
lret
stc
loope
adc
push
sahf
and
daa
sbb
rcr
rcrb
mov
rcrb
fiadds
mov
pop
dec
push
lds
xchg
jecxz
adc
jmp
dec
sub
ret
leave
ss
cmp
jno
repz
sub
jnp
lock
jae
or
sub
lret
insb
dec
loopne
dec
rorb
mov
testl
test
and
fs
xor
lods
out
fisttpll
fnsave
sub
fdivr
shlb
imul
mov
ret
or
push
ljmp
jl
sti
fiaddl
movsl
mov
mov
divb
mov
push
arpl
adc
mov
mov
dec
fisubrl
scas
fildll
xchg
fnstsw
out
mov
xchg
sti
imul
das
rorl
std
or
cmp
sub
outsl
jg
or
lret
das
pusha
popf
mov
cld
ss
fists
rcrl
fists
test
or
lahf
jmp
xor
sub
or
xchg
out
push
movsb
dec
jbe
adc
je
mov
xchg
and
test
pop
xlat
testl
dec
in
mov
sti
enter
mov
mov
repnz
aad
loopne
mov
pop
icebp
xchg
xchg
pop
ljmp
or
sbb
in
stc
and
fisubl
inc
cmc
call
lods
das
jbe
daa
jle
ret
test
aaa
mov
ljmp
pop
bound
int3
icebp
movsb
add
jo
aaa
stc
ficoms
pushf
test
js
nop
rorb
jl
push
imul
adc
fdivl
push
sub
out
add
xor
inc
adc
jnp
lea
mov
push
aaa
mov
jecxz
add
sub
or
sbb
or
shrb
mov
jl
fiaddl
repnz
jno
xchg
cli
push
fwait
dec
jge
jo
cmpsb
scas
xchg
pop
in
mov
pop
adc
roll
out
inc
aam
std
mov
add
add
out
ljmp
push
adc
and
jb
rclb
outsl
or
inc
out
bound
adc
test
xor
add
jbe
mov
mov
push
mov
xlat
test
jle
push
imull
or
mov
test
push
hlt
jecxz
mov
in
sub
in
xor
ret
or
dec
fsubr
les
pusha
cmp
or
sbb
or
and
push
sbb
sub
stos
pop
loopne
add
push
stos
ja
mov
repnz
into
cld
mov
test
jb
push
jae
add
ror
or
jo
pop
in
jne
xchg
fldl
mov
sar
daa
adc
fidivrs
or
sub
sub
add
filds
push
lods
jl
jno
adc
or
adc
imul
adc
mov
in
sub
nop
jl
and
repnz
insl
popf
push
imul
cwtl
xor
jne
mov
shl
dec
ss
adc
shrl
out
cmp
adc
loope
xor
int
cmp
aad
int3
fdivr
dec
out
mov
push
xchg
jo
fisttpl
loop
mov
jecxz
mov
inc
cmp
gs
adc
lea
ret
inc
scas
push
jle
inc
push
sub
loope
dec
cmp
shlb
or
adc
or
mov
cmp
sahf
or
and
jnp
mov
add
add
adc
inc
insl
pop
inc
clc
fsubr
inc
and
cwtl
call
stc
popf
mov
jb
sbb
sub
imul
or
mov
sub
in
pop
dec
mov
adc
or
fsub
xadd
in
mov
and
loopne
mov
fidivs
and
lock
lds
imul
xchg
idivb
mov
in
jns
lods
imul
imul
mov
iret
test
popf
mov
out
push
das
mov
sub
mov
push
pushf
jmp
sbb
or
adc
rclb
sti
sbb
repnz
lea
es
or
sarb
in
fldt
and
or
mov
pop
stos
shrb
and
fisttps
add
rclb
aad
mov
cmp
mov
add
aam
or
in
les
sub
and
mov
push
hlt
mov
pop
fidivl
or
add
adc
or
arpl
test
add
cld
jl
inc
adc
adc
into
pop
pop
and
pushf
orb
lods
jns
push
mov
or
add
shl
and
stos
out
dec
test
aad
mov
adc
call
out
pop
cld
leave
js
mov
xchg
jmp
add
xchg
mov
add
sti
or
es
dec
or
jmp
or
sbb
les
setl
int3
imul
pop
test
loop
fs
xchg
pop
xor
adc
xlat
cmp
shll
rclb
push
mov
icebp
xchg
xchg
cwtl
cmp
shr
mov
lods
inc
fld
adc
mov
dec
leave
and
stc
test
mov
cmc
clc
fdivs
sub
and
and
call
pop
das
ror
add
inc
or
pop
scas
push
in
or
mov
jl
fwait
or
jb
adc
pop
fsubrp
lahf
loopne
add
imul
pop
inc
out
add
jae
or
out
lret
xchg
mov
mov
aam
shlb
pop
in
lahf
in
ffreep
aad
movsl
nop
loope
pop
jbe
into
sahf
jns
sbb
xchg
dec
adc
rclb
sub
mov
subb
repnz
xor
fcmovb
and
into
sbb
mov
jmp
mov
popa
jno
adc
faddp
insb
mov
xlat
sbb
daa
mov
andl
cmp
inc
dec
adc
call
sbb
movsl
ja
lea
jnp
insl
ret
sbb
inc
addr16
mov
aas
in
mov
repz
add
shlb
hlt
fmull
in
sbb
gs
cmc
mov
and
cmpsb
add
fisttpl
cmp
das
insb
lods
sub
adc
xchg
or
loopne
stc
repnz
jmp
lods
mov
pop
rcr
sar
daa
leave
push
mov
cmp
adc
jno
or
dec
adc
jo
or
sub
out
pop
stos
in
loope
pushf
mov
jle
mov
xor
or
shl
iret
out
push
mov
movsb
xor
or
xchg
or
or
lods
mov
and
imull
pushf
loop
hlt
out
mov
xchg
fcoml
add
shlb
in
mov
ret
or
push
scas
outsb
je
cs
les
rcl
push
jg
hlt
xor
sahf
call
ss
and
adc
sub
cltd
stc
in
or
cmp
fldcw
enter
and
push
adc
rcll
jae
loope
jbe
aaa
std
shl
lock
mov
and
mov
and
cmp
cmp
jae
div
cli
push
push
out
cmp
fstpl
xor
push
outsl
fists
pop
add
sbb
push
and
inc
cmp
mov
xor
fadds
shl
sbb
adc
loop
and
cmp
adc
ds
cmp
mov
xlat
into
inc
out
jns
popa
faddp
lods
push
sub
mov
mov
mov
orb
aas
cmp
xchg
mov
pop
xchg
enter
xor
rcll
pushf
xchg
ret
outsl
into
mov
hlt
dec
rolb
clc
stos
jno
add
mov
fs
lret
or
sbb
adc
jecxz
lar
add
ss
sub
or
rorl
mov
mov
sbb
mov
or
fiadds
call
inc
sub
in
test
mov
sbb
adc
jge
jle
sub
cmp
daa
sub
xlat
mov
mov
pop
push
hlt
aam
xchg
jb
hlt
insb
fmull
into
sarb
stos
hlt
sub
enter
sub
test
inc
nop
or
sub
std
sbb
jg
inc
dec
dec
insl
mov
sbb
in
std
mov
mov
mov
add
shll
sub
jmp
push
dec
jl
pushf
xchg
lahf
push
xchg
jns
decl
iret
mov
rcll
sub
push
cld
push
hlt
and
adc
push
add
not
sub
or
cwtl
or
popf
les
xor
dec
fmull
std
sbb
loop
adc
in
adc
cld
hlt
push
or
call
dec
and
sti
sbb
or
sbb
arpl
outsb
bound
fdivrs
push
cs
dec
xor
push
push
ja
stos
mov
push
rclb
mov
cwtl
insl
sarl
or
dec
stos
out
leave
push
adc
rclb
lcall
adc
and
push
lock
add
push
in
sub
dec
fisubrs
mov
push
adc
cwtl
fs
mov
add
add
mov
sbb
cmpsb
sets
lods
or
mov
lahf
scas
fnsave
jecxz
or
push
stos
cmp
push
aas
mov
pusha
cmp
fldcw
gs
hlt
xchg
fstl
dec
cmp
in
lahf
push
cmp
shrl
fsubrp
or
pop
mov
jecxz
mov
testb
xorl
cld
mov
mov
add
mov
fbstp
ljmp
pop
lds
ss
sti
add
pop
mov
das
lock
adc
sub
and
cmp
clc
push
fstl
or
xor
ljmp
add
or
movsb
sbb
mov
bound
inc
or
leave
sub
fs
cmp
xchg
loop
adc
mov
fdivrl
xchg
call
int3
sub
xchg
cmp
xor
subl
push
je
or
dec
lahf
pop
ror
cmp
out
inc
rcrl
fildll
mov
icebp
push
repz
pop
loopne
loopne
out
ss
mov
gs
or
mov
insb
jnp
insl
outsl
mov
sub
sbb
dec
jl
jl
push
xor
pop
insb
or
add
sbb
xchg
cmp
stc
add
push
mov
push
rcl
jbe
xor
fisubrl
jge
cmp
fcom
xchg
cmp
mov
loope
adc
xlat
in
sub
addl
aas
dec
mov
lods
shlb
repnz
push
call
hlt
lods
or
mov
movsb
push
jg
mov
nop
mov
push
cmp
outsb
adc
sub
jg
jno
sarl
enter
lahf
mov
jbe
lods
mov
aam
in
addb
std
daa
push
adc
xchg
divl
xchg
cmp
adc
push
repnz
dec
mov
sub
repnz
mov
pop
fstl
xor
or
mov
subb
aam
add
push
outsl
inc
fisubl
in
outsl
cmp
out
and
sub
add
in
jmp
pop
mov
js
ror
push
jl
pusha
sbbb
sti
adc
adc
aaa
or
cmp
iret
leave
mov
cmpb
in
stc
mov
mov
mov
les
gs
adc
in
aam
pop
cmp
aad
fwait
mov
sub
jp
xchg
add
into
push
xlat
roll
adc
ss
stos
mov
inc
subl
fs
mov
sbb
push
cmp
mov
in
mov
cmp
int3
decl
aam
mov
das
push
add
sbb
hlt
push
push
cmp
in
mov
adc
jg
pop
shlb
push
cmp
xlat
inc
cmpsb
cmp
int
inc
xchg
or
jg
call
and
ds
or
inc
fucomi
sub
xor
push
lret
fsubr
pop
mov
fidivl
jns
fmuls
ds
subb
cmp
xchg
shll
mov
xchg
dec
shlb
movsb
sub
cmpsl
bound
push
ljmp
mov
dec
xchg
movsb
add
jo
sub
jno
in
dec
push
outsb
pop
mov
leave
fadds
mov
and
xchg
pop
add
ds
test
das
nop
mov
mov
or
or
aam
xor
adc
lods
mov
inc
pop
dec
repnz
out
fidivrl
mov
lods
xchg
fisttpl
add
cmp
aas
inc
cmp
outsl
fisubs
out
sub
push
dec
rol
push
jns
stos
xor
cmp
cmc
sbb
adc
adc
mov
outsl
sbb
fists
lret
lcall
fucom
shrl
out
push
js
fldenv
adc
adc
js
imul
cs
icebp
push
sahf
enter
in
in
dec
out
pop
cmp
jb
sbb
clc
bound
adc
lahf
mov
iret
and
xor
mov
mov
mov
mov
jl,pt
add
aam
mov
pushf
cmc
jecxz
loope
out
jg
jo
xchg
fdiv
out
jae
xchg
js
adc
in
mov
arpl
cmp
out
aad
push
je
mov
or
cmc
jl
ret
adc
mov
out
push
add
cmpsb
lret
lcall
push
les
lret
repnz
mov
sbb
call
testl
dec
and
xchg
aas
insl
jae
bound
fnsave
fimuls
push
mov
in
in
jbe
cmp
dec
stos
lcall
out
aaa
xchg
cltd
pop
sub
pop
test
mov
jne
inc
cmp
aad
or
lea
jmp
mov
stc
into
in
sbb
xchg
mov
xchg
pop
xor
int3
in
fcmovnbe
jecxz
adc
inc
mulb
jno
outsl
dec
add
push
setb
int
push
mov
sti
mov
adc
xchg
xor
xor
rcr
mov
test
or
jae
lods
or
pop
dec
jo
push
dec
int
ffreep
out
xorb
lret
adc
or
add
pop
or
ret
repz
popf
fadds
les
mov
mov
stos
adc
arpl
fcompl
dec
push
adc
push
add
push
nop
adc
psubsb
adc
pusha
pop
repnz
aas
bound
xor
aaa
xlat
push
dec
sub
stos
paddusw
in
movsb
subps
nop
sti
shlb
xchg
add
add
push
inc
mov
mov
push
lea
inc
or
js
xlat
or
and
xor
mov
inc
subb
leave
adc
jmp
mov
aam
subl
mov
lock
jmp
mov
xchg
mov
sbb
sub
out
cmp
pop
cmp
and
dec
insb
mov
mov
mov
push
or
jge
jnp
mov
movsb
mov
bound
movsb
ss
push
push
fistl
std
mov
xchg
inc
mov
mov
stc
adc
rcrl
scas
mov
mov
repnz
xchg
inc
rcll
xchg
mov
xor
sub
flds
mov
add
and
mov
sub
repnz
in
fildll
mov
hlt
and
xor
xlat
inc
nop
sub
sbb
in
aad
popf
std
js
lds
jp
xor
dec
ljmp
or
pop
fldl
sub
addr16
push
pusha
jmp
test
jl
or
and
sub
lods
sahf
andl
out
gs
dec
movzwl
pop
fldcw
es
cmpsl
aad
or
adc
jne
cmp
pop
mov
jno
clc
lret
pop
push
push
cmp
ror
adc
xor
es
xor
jno
int3
cld
mov
pop
inc
jecxz
movb
ds
imul
mov
stos
adc
aad
xlat
mov
loopne
mov
jl
mov
add
cltd
add
inc
pop
in
je
fdivs
xor
jmp
rorl
pusha
sub
adc
test
cmp
pop
orl
sub
xchg
imul
mov
adc
xchg
arpl
push
les
les
xchg
xchg
repz
xchg
lods
hlt
mov
in
lahf
stos
adc
stc
push
fsubs
jb
pop
orb
lretw
mov
in
pushf
movsb
sbb
mov
aam
nopl
pop
dec
cwtl
add
je
adc
leave
ja
adc
cli
je
adc
ja
xor
jo
in
in
fildl
leave
push
loop
or
nop
popl
push
ret
jne
in
push
into
xchg
in
push
push
mov
jmp
and
xchg
daa
xchg
lret
fisubrs
dec
dec
adc
mov
nop
fs
mov
fiadds
mov
incl
sbb
mov
or
ljmp
mov
and
push
sub
nop
clc
add
je
push
xlat
pop
jo
xor
jmp
add
xor
xchg
dec
sbb
mov
fwait
add
or
enter
sbb
jmp
jecxz
hlt
adc
outsl
lock
adc
mov
adc
mov
lret
repnz
movsb
or
nop
adc
data16
pop
xchg
mov
out
mov
sub
fwait
or
or
add
push
mov
mov
fcmovb
fucomi
stc
or
push
push
ljmp
mov
push
mov
mov
lods
inc
xor
dec
mov
dec
scas
sbb
sbb
std
mov
adcl
xor
dec
lahf
pop
sub
outsl
ss
enter
mov
adc
ficoms
add
and
push
add
pop
pop
adc
and
xor
and
rol
or
sub
call
ret
mov
in
inc
jl
clc
or
mov
fisttpll
cmp
mov
push
out
sbb
cmp
push
mov
push
iret
lret
mull
lahf
and
subl
sub
inc
or
call
dec
call
adc
out
adc
pop
and
inc
dec
sbb
mov
mov
in
lahf
cld
adc
mov
aam
shrl
xchg
pop
sub
insb
lahf
mov
and
sub
in
in
aam
adc
mov
lahf
ljmp
in
add
test
fwait
cmp
cmp
add
jne
cmpsl
ljmp
addr16
lret
mov
jne
cld
mov
lret
inc
pop
stos
insb
push
inc
jge
pop
or
and
add
outsl
out
jbe
add
cltd
push
mov
or
add
stos
or
out
jae
dec
sahf
push
out
sbb
lcall
jo
fucom
aas
add
ss
adc
lea
ret
jno
cmp
push
movntps
mov
loopne
pop
push
or
dec
cmc
push
mov
sbb
sbb
add
xor
jg
hlt
xor
dec
jo
adc
jo
adc
mov
mov
inc
adc
imul
iret
adc
or
mov
and
pop
push
push
shr
fucom
xor
push
nop
and
loopne
das
lock
fbstp
scas
mov
sub
xchg
adc
push
mov
pop
mov
and
lahf
sub
icebp
jns
push
idivl
shll
mov
sbb
mov
mov
stos
idivb
test
mov
or
dec
leave
shlb
mov
fisubrs
das
fildl
xchg
lahf
jge
xor
and
or
adc
cmpsl
pusha
arpl
push
jo
iret
dec
mov
nop
mov
nop
fwait
mov
push
sbb
add
xlat
cmp
mov
insl
scas
push
sti
pop
xor
xor
push
scas
pop
aas
ss
sub
sahf
inc
add
push
mov
addr16
mov
sub
add
sub
push
shlb
pop
or
push
lret
es
jmp
dec
hlt
mov
lock
jno
cmpsb
sbb
mov
aas
sbb
xchg
adc
in
or
adc
cmp
push
mov
mov
cmpsb
sub
inc
xlat
mov
fsubl
xchg
push
inc
frstor
dec
aaa
out
hlt
enter
sub
add
int3
or
in
push
outsl
sub
and
scas
xchg
in
rolb
cmp
cmp
sti
push
popf
imul
fistl
add
sbbb
push
sub
aad
fwait
and
mov
push
shr
into
js
or
jnp
clc
or
add
out
lret
loop
clc
sahf
adc
aad
outsb
or
adc
mov
insb
icebp
rcll
push
pushf
jne
std
or
add
pop
mov
add
notl
addr16
sti
xor
cli
jmp
cmp
push
repz
dec
fisubl
insl
mov
adc
stos
popl
push
aas
mov
sub
incl
lret
mov
int3
jbe
inc
add
scas
int3
les
mov
rorl
ret
scas
sbb
sub
and
call
stc
inc
pop
cmc
jmp
push
cmp
icebp
imull
adc
jo,pt
adc
mov
or
stos
hlt
inc
shlb
sti
in
movsb
cmp
test
stc
dec
jo
int
mov
rcl
push
adc
shrl
mov
std
test
int
lret
pop
mov
out
test
repnz
les
lea
sub
lods
lcall
sti
lahf
and
js
adc
fbstp
rorl
sbbb
addr16
lahf
leave
sub
inc
out
imul
sbb
jle
xchg
movsl
les
dec
mov
fdivl
icebp
fldenv
adc
xchg
cmc
repnz
sbb
lret
ret
mov
int3
add
mov
shll
mov
push
cmp
sbb
cli
imul
xchg
add
scas
xchg
inc
mov
cmp
jae
icebp
cmp
insl
lret
xor
jecxz
stos
inc
int3
mov
pop
fbstp
cmp
sbb
mov
sub
push
mov
pop
loopne
jg
in
add
adc
mov
test
lcall
dec
lock
push
xorl
mov
ds
rol
pop
adc
int3
xchg
mov
lret
seta
mov
inc
and
add
insb
xor
movsl
out
pusha
ret
sbb
dec
push
imul
pushf
stc
adc
inc
cmpsb
cmc
shr
enter
sub
sub
mov
in
push
add
addr16
pop
sub
or
stos
or
dec
lock
add
mov
sub
inc
bound
movsb
or
xchg
test
xlat
pushf
outsb
cmpsb
scas
movsl
jo
inc
inc
xor
rolb
ret
or
xchg
inc
out
inc
out
dec
insl
movsb
popa
repz
out
inc
cli
pop
and
mov
inc
fwait
xchg
pavgb
mov
jp
xlat
fisubl
test
adc
dec
imul
repnz
rol
pop
mov
cld
popf
xor
mov
jp
pop
imul
jp
mov
or
fwait
rorl
aam
sbb
adc
and
test
mov
or
sbb
test
nop
rclb
cmp
dec
inc
add
jmp
push
sti
add
icebp
rorl
hlt
pop
sub
outsb
jecxz
or
sub
dec
out
push
dec
mov
xlat
dec
or
add
and
xacquire
in
loopne
fsubrl
pop
in
jge
nop
fisubrs
fdivr
lods
add
sub
into
in
mov
inc
add
int3
out
mov
sub
push
int3
push
fs
mov
int
in
insb
dec
ljmp
add
xchg
mov
aam
pop
std
add
or
sbb
lods
sahf
sub
sbb
daa
iret
push
and
xchg
repnz
or
adc
push
lret
add
out
sbb
hlt
ficoms
test
cmp
cmp
in
int3
jo
lods
in
or
sub
inc
adc
les
decl
inc
sar
or
ds
icebp
in
cmp
jecxz
in
es
adc
adc
aam
inc
ret
jmp
pusha
xchg
clc
dec
cmpsl
shrl
jne
shrl
sti
test
shrl
mov
repnz
ficompl
outsl
mov
sub
imul
add
jl
mov
sub
repz
sub
push
mov
std
mov
out
push
mov
sbb
jmp
push
out
call
and
cmpb
sbb
xor
ja
xor
add
adc
mov
adc
js
sub
out
sbb
xchg
sub
lcall
fstpt
in
hlt
in
out
ds
movsb
inc
jle
hlt
movsb
add
adc
mov
les
hlt
iret
jl
or
xor
sbb
xabort
xchg
sar
lcall
std
pop
push
xor
in
push
mov
xor
cmp
or
aaa
mov
popa
jo
push
adc
or
mov
cmp
dec
add
cmp
jl
nop
repnz
pop
incl
jl
mov
sub
adc
shrb
pop
repnz
mov
mov
adc
decb
xchg
push
sbb
push
dec
push
push
jb
adc
xchg
sbb
leave
test
sub
xchg
adc
je
orl
jnp
sarl
lret
mov
jmp
dec
out
out
mov
mov
popa
je
les
pushf
callw
test
xor
jmp
mov
fists
clc
mov
loop
pushf
push
testb
pop
test
inc
addr16
pushf
lret
inc
in
hlt
leave
repnz
dec
ljmp
call
add
lods
cmp
sbb
out
or
and
jmp
inc
fcompl
data16
rcl
adc
add
into
nop
push
inc
adc
sbb
add
nop
icebp
cmp
leave
clc
nop
inc
out
pminsw
pop
imul
je
cs
push
rcrb
pop
lods
adc
shlb
sbb
out
nop
xor
rolb
test
push
movsb
sti
icebp
pop
add
pushf
dec
fisubrs
sbb
std
les
jmp
lahf
out
div
or
sbb
add
idivb
cmp
xlat
cld
pop
pop
call
add
repnz
les
inc
nop
lock
aam
aam
cwtl
jg
sarb
rolb
push
aad
add
push
pusha
adc
adc
mov
add
jo
mov
xchg
push
push
xchg
insb
nop
repnz
cmp
inc
pop
or
sbb
fs
aam
cmp
pop
js
mov
xchg
cmp
rol
xchg
inc
andl
adc
in
nop
pushf
in
mov
sahf
add
mov
icebp
jbe
je
das
pop
into
cmp
je
cld
pop
inc
mov
les
jmp
mov
push
les
nop
icebp
xlat
test
test
mov
sbb
lock
test
mov
movsl
or
sti
jecxz
adc
mov
or
out
jne
imul
add
out
in
int3
mov
cmp
cmpb
adc
test
mov
stc
adc
or
push
hlt
cmp
nop
ret
bound
fcoml
int3
shlb
in
shrb
push
jne
sub
rorb
or
in
adc
add
dec
xor
call
cmp
mov
stc
lcall
insb
test
lock
xor
les
add
lods
and
or
cmp
hlt
fbld
outsl
call
push
adc
and
lods
push
cmp
sub
sbb
add
lock
cmp
jbe
mov
dec
test
scas
in
xchg
scas
nop
in
xacquire
test
dec
mov
mov
pop
das
mov
sbb
rcll
shr
jmp
hlt
sub
xor
ficomps
add
jmp
pop
add
adc
inc
nop
jmp
icebp
pop
test
lcall
pop
nop
dec
add
adc
xor
icebp
sbb
dec
sbb
popl
fmuls
mov
popl
push
je
jmp
pop
ret
test
adc
sarb
call
mov
faddl
adc
cld
movb
rcl
adc
shlb
cwtl
adc
shlb
sarb
repnz
add
add
mov
in
test
shl
mov
fs
rclb
cmp
fcoml
add
rcrb
dec
les
sbb
fdivl
add
add
nop
sbb
mov
sbb
adc
test
mov
popl
mov
int3
adc
sub
outsb
sbb
pop
adc
ror
repnz
rcr
adc
shlb
adc
rcrb
test
in
mov
jle
jle
pop
add
or
cld
icebp
adc
dec
adc
nop
shlb
mov
rolb
aam
rorb
mov
nop
shrb
fs
ret
icebp
adc
jno
add
jmp
popl
mov
bound
cmp
add
incl
add
repnz
push
shlb
add
repz
xor
les
bound
push
and
icebp
pusha
gs
insb
out
cmp
add
movsb
adc
mov
dec
jmp
mov
nop
and
xor
data16
jg
or
sub
inc
adc
fidivl
sbb
out
jle
jmp
pop
les
push
or
xchg
pop
add
add
sti
ds
xchg
mov
iret
mov
xor
or
jbe
push
sub
int3
pop
rclb
repnz
mov
adc
add
push
adc
repnz
inc
outsb
sbb
sbb
insb
fiaddl
cwtl
scas
ret
enter
out
mov
repnz
cmp
xchg
or
xor
xor
sbb
add
fsubrl
iret
or
fsub
mov
das
mov
mov
cld
fmull
xor
fucomip
roll
add
push
and
xchg
add
sbb
fistpll
movsl
or
les
mov
adc
push
ljmp
sbb
add
popl
push
repnz
jns
sub
test
add
or
movsb
sarb
xchg
rcrb
push
add
adc
int
pop
iret
aam
mull
inc
sub
rolb
inc
ljmp
out
movsb
xchg
mov
jp
fdiv
xchg
xchg
in
movsl
fcoms
fs
cmp
subl
ret
dec
adc
and
mov
lcall
stos
nop
test
pop
mov
jl
lods
pop
adc
pop
les
dec
mov
mov
mov
in
movsb
mov
aad
loopne
adc
dec
jge
mov
ret
mov
rolb
mov
or
mov
add
fimuls
inc
adc
test
sbb
scas
mov
or
cmpsb
sarl
adc
sahf
test
fdivl
movsb
adc
xor
adc
or
or
xor
adc
mov
sbb
push
adc
mov
jl
push
add
adc
adc
xor
xor
nop
das
or
dec
popa
xorl
or
les
fcom
sub
les
add
int3
or
or
iret
cmp
shl
mov
rorb
repnz
jb
adc
inc
sahf
xor
cmp
iret
or
and
faddl
lods
sub
sub
out
testb
or
popf
in
xchg
mov
xchg
pop
mov
rolb
clc
sub
cmpsb
in
test
lock
push
and
adc
sbb
icebp
adc
ja
or
mov
cmp
xchg
lods
outsl
mov
roll
and
jecxz
loope
ss
adc
sbb
mov
lcall
test
or
and
daa
cmpsb
dec
jmp
push
or
test
movsb
mov
mov
add
int3
adc
sbb
and
mov
data16
fs
nop
repz
or
xchg
rolb
jb
pop
nop
dec
cltd
lods
jge
add
nop
ret
fcom
scas
movb
adcb
jmp
std
rclb
orb
pusha
les
mov
orl
jno
iret
cmp
or
fs
cmp
or
call
adc
push
add
scas
repz
or
or
cld
nop
adc
sub
hlt
add
xchg
aam
mov
mov
adc
xor
add
add
mov
in
iret
cmp
jb
add
clc
insb
mov
repz
sbb
fmul
or
or
jle
push
sbb
movsb
add
aam
cmp
ret
or
cmpsb
add
cld
scas
insl
in
adc
dec
mov
hlt
out
hlt
mov
int3
mov
jmp
out
in
mov
sub
decl
xor
or
lods
xor
bnd
xchg
enter
adc
jl
jg
add
gs
movsb
rolb
xchg
adc
ja
je
repz
add
je
jmp
cmp
out
fidivl
xchg
movsb
ja
je
sbb
mov
mov
add
mov
sbb
dec
mov
hlt
sti
pop
adc
mov
mov
mov
lock
jmp
xor
or
add
add
in
movsb
or
rorb
add
in
lods
nop
rclb
sub
sub
xor
push
mov
adc
je
jl
cmpsl
adc
or
jg
loop
mov
or
repnz
or
xchg
mov
mov
mov
insb
nop
rcl
and
sahf
divl
inc
not
inc
repnz
insl
adc
cld
add
insb
mov
int3
outsl
lods
mov
or
sbb
shlb
xor
pop
add
or
sahf
add
cmp
test
nop
jmp
repnz
add
or
leave
jg
cmp
repnz
in
mov
fs
pop
jecxz
aaa
add
mov
dec
mov
xchg
adc
test
cmc
nop
mov
ss
push
int3
or
shr
loop
add
or
roll
cmc
or
rcl
or
scas
int3
mov
add
pop
call
mov
popa
movsb
arpl
or
pop
push
push
stc
sub
cmp
inc
xor
cmp
inc
jle
popa
imul
inc
movsb
popa
sbb
call
adc
stos
sub
cmp
in
add
shlb
mov
mov
gs
and
dec
stos
pop
push
add
enter
mov
or
adc
adc
nop
fisubrs
in
pusha
pop
fidivs
mov
add
adc
shrb
adc
rclb
add
sbb
icebp
push
addl
sbb
imul
pop
push
or
lock
in
int3
nop
fimuls
fidivrs
into
in
je
out
mov
rolb
mov
mov
push
aas
shrb
in
rolb
in
and
xchg
cmp
sbbb
adc
fisttpl
rorb
cmpsb
adc
hlt
add
lock
mov
hlt
hlt
incl
movsb
dec
hlt
or
adc
xor
adc
xor
or
jne
adc
nop
lods
pop
mov
repnz
sbb
sbb
js
test
adc
add
in
rorb
dec
or
sbb
pop
xchg
add
sub
ss
adc
push
lock
stc
adc
add
rclb
adc
add
mov
sub
mov
mov
ss
cmp
or
cmp
push
shlb
push
mov
je
inc
mov
das
hlt
or
decl
add
repnz
dec
sbb
hlt
call
dec
cmp
sbb
xor
mov
incl
or
iret
std
cmp
inc
cmpsb
pusha
call
call
mov
sbb
incl
outsl
loopne
in
jns
mov
daa
incl
sub
ret
pop
imul
into
dec
decl
jl
sbb
in
aaa
fiaddl
shll
or
scas
or
dec
mov
shll
mov
loopne
mov
popf
adc
push
in
in
in
shrb
inc
inc
and
test
mov
xor
add
fmull
in
decb
ret
dec
lcall
fdivp
loopne
pop
cmp
add
scas
or
cld
lea
or
add
mov
fbld
frstors
imul
jb
in
dec
and
fs
in
jmp
jle
dec
xor
nop
adc
sbb
cmp
xor
mov
xchg
xchg
nop
ret
pop
hlt
push
or
mov
inc
or
hlt
dec
movsb
or
nop
sbb
rclb
testl
nop
mov
cmp
or
adc
jmp
je
or
xchg
aam
mov
fimull
jle
shlb
add
xchg
dec
xor
lret
shr
clc
mov
out
add
aaa
pop
push
inc
sub
cmpsl
jl
pushf
lock
loope
jb
rcl
clc
negb
rolb
iret
push
xchg
stc
dec
in
xchg
xchg
xchg
sbb
push
add
cmp
iret
or
insb
fs
popf
mov
fwait
or
dec
repz
ret
adc
add
lahf
cld
or
out
mov
in
hlt
sbb
test
loop
lods
sbb
lret
cmp
les
mov
out
push
flds
mov
sarb
andb
add
pop
add
sahf
mov
arpl
scas
fs
pop
dec
out
aam
in
je
sbb
pushf
xchg
adc
or
mov
jo
enter
in
ds
or
hlt
fcoml
and
std
in
in
xchg
add
into
fdivl
lods
iret
adc
cmp
hlt
jb
nop
adc
pop
mov
sbb
mov
adc
add
loope
add
ds
add
add
repnz
hlt
pushf
or
leave
aam
mov
in
mov
shr
inc
xor
sbb
hlt
and
sti
in
inc
nop
mov
adc
icebp
test
mov
mov
mov
jns
lods
ljmp
in
pusha
push
adc
xchg
icebp
push
dec
mov
ds
lds
mov
in
push
jbe
mov
or
loope
xor
add
push
add
mov
jge
jl
lock
pop
hlt
shlb
adc
in
lods
mov
aam
push
mov
or
jecxz
xor
jl
fstl
pusha
gs
xor
mov
and
sub
out
aam
or
add
inc
in
sub
adc
rclb
and
stos
cmp
hlt
xchg
adc
je
movsb
cmp
or
pop
test
inc
bound
mov
icebp
clc
dec
or
cmp
add
insb
or
sbb
push
or
adc
adc
rorl
rorb
adc
ret
movsb
shl
loopne
push
jg
test
pop
nop
int
sub
pop
cmp
icebp
fmull
mov
mov
xchg
cmp
icebp
ds
int
sub
pop
cmp
mov
xchg
jno
int
sub
jecxz
loopne
icebp
xchg
add
mov
xchg
in
nop
push
and
fldl
aam
ljmp
xor
cmp
shr
pop
leave
and
out
lcall
mov
inc
cmp
adc
lret
fmulp
pushf
pop
mov
mov
sub
xor
adc
pop
sub
sbb
add
je
add
loop
or
or
and
cmp
jle
fwait
cmp
sti
pop
and
or
les
repnz
popf
dec
xor
mov
jmp
shll
pusha
or
in
je
test
add
repnz
jns
dec
ljmp
fs
sarb
sti
mov
cmpsl
xchg
mov
mov
loope
mov
and
adcl
and
inc
mov
inc
ss
xchg
adc
and
jle
mov
xor
or
mov
or
sahf
pop
test
cli
lods
mov
ficoms
bnd
les
lret
mov
jg
add
add
sbb
movsb
push
push
sbb
sbb
mov
ss
rolb
mov
jno
mov
repnz
sub
add
addr16
nop
cmp
mov
shl
mov
rorl
mov
iret
fmull
cmp
jecxz
add
mov
movsb
xchg
and
lods
ficomps
adc
mov
call
lods
mov
and
lods
and
adc
pop
nop
or
das
rcll
xchg
icebp
cmp
xchg
rorb
sbb
mov
add
xchg
sub
insb
xchg
iret
jle
fptan
xor
dec
pop
adc
addl
mov
fdivrs
xor
adc
subl
test
inc
in
imul
les
nop
out
pop
es
les
daa
mov
jle
mov
fs
adc
fmull
mov
xchg
and
add
in
xchg
fucom
int
sbb
inc
nop
push
shl
push
nop
push
enter
inc
insl
inc
adc
daa
fwait
push
inc
pop
sbb
cmp
xchg
jmp
rclb
adc
cld
aam
lods
mov
and
mov
out
xchg
cmpl
or
in
xchg
jnp
mov
test
fsubl
sbb
or
int3
aad
xor
jo
les
stc
sub
push
out
xor
ret
aam
jge
nop
les
int3
sub
insb
mov
sub
cmp
jo
outsb
in
jnp
inc
or
jecxz
mov
and
adc
inc
in
int
in
movsb
mov
push
shr
cmp
movsb
add
adc
test
pop
rclb
int3
adc
xchg
add
fdivr
jg
lret
mov
stc
xor
sub
xchg
inc
je
adc
aam
sbb
mov
aam
sbb
aam
add
sub
add
loop
jbe
push
jl
adc
xchg
cmpsb
cmp
in
into
scas
add
jl
in
xchg
add
or
sti
jo
outsl
jnp
out
ret
add
pop
adc
push
adc
cmp
cmp
jg
je
add
ss
loop
push
sub
mov
add
or
cmp
insb
ret
cld
add
aaa
xlat
add
cld
js
mov
int3
adc
dec
in
fmulp
xchg
hlt
sbb
cmp
cli
aam
je
dec
out
in
adc
fisubs
hlt
out
mov
mov
icebp
mov
loopne
push
shl
adc
mov
push
inc
les
inc
popf
push
xchg
cmp
ljmp
insl
hlt
push
jl
mov
addr16
int3
cld
mov
cld
or
add
adc
loope
xor
popa
pop
pop
int3
cmp
mov
fnstenv
pop
lods
ret
loop
stos
or
insl
adc
cld
rcr
or
push
rolb
movsb
loop
pop
repz
add
or
test
aad
incb
popfw
adc
fs
leave
in
jmp
rorl
sub
out
fbstp
sub
push
cmp
repnz
repz
add
inc
add
and
add
add
mov
repz
std
add
cs
xchg
icebp
jnp
jl
adc
add
sbb
xor
sub
ljmp
inc
clc
jmp
mov
ret
or
cmp
loop
in
xchg
pop
push
pop
sti
cld
or
int3
or
adc
pop
sbb
std
mov
js,pn
movsb
pop
and
negl
imul
add
add
and
or
add
add
jmp
xor
outsb
ljmp
xor
pop
fidivs
pop
fidivs
xor
inc
into
fidivs
mov
ret
icebp
movl
pop
push
xor
pop
or
popa
inc
pop
call
cld
add
iret
fs
negb
and
add
jge
inc
and
loope
int3
cmpsb
or
cs
hlt
add
adc
stos
add
into
repz
cld
sti
add
xor
cli
je
std
mov
stc
add
adc
add
fs
push
xchg
js
dec
and
or
or
add
iret
jno
or
in
mov
je
push
lods
push
sbb
mov
mov
fnstsw
enter
or
add
or
jae
sarb
mov
add
push
in
or
jne
push
add
ror
mov
nop
rorb
cmp
and
andb
fcoms
lret
int3
es
jne
fs
fdivr
js
xor
jge
xchg
nop
rcll
popf
add
or
adc
mov
or
test
int
fldt
or
jecxz
incl
js
sbb
push
nop
iret
adc
push
mov
pusha
int
addr16
ljmp
loopne
pop
or
fnstsw
push
gs
decl
xor
pop
into
jb
ja
push
popf
ret
add
add
mov
mov
test
aam
mov
fs
rol
cmc
or
jmp
jl
pop
jo
mov
add
or
adc
add
mov
rorb
jl
rolb
cmp
and
inc
insl
lcall
jnp
jns
iret
mov
outsl
lcall
in
lcall
push
push
xchg
outsb
adc
push
mov
mov
fsub
lret
add
xor
rorl
stc
cltd
and
loope
repnz
stos
mov
lds
xor
cmpsl
or
call
iret
pop
je
es
or
inc
nop
pop
loop
rolb
lock
or
jl
fmull
cs
cwtl
xchg
mov
shrl
xchg
or
in
test
or
clc
fs
xchg
xchg
ljmp
sub
hlt
xor
nop
xor
adc
mov
jl
enter
dec
inc
aam
push
pushf
xor
outsb
add
jbe
jl
repz
push
out
les
sbb
push
adc
pop
mov
push
clc
sub
xchg
test
aas
xor
int3
add
xchg
adc
pop
loop
sti
pop
fs
icebp
sub
es
mov
mov
pop
sub
sarb
push
sbb
faddl
mov
xor
sub
cmc
adc
int3
jge
inc
in
mov
cmpsb
andl
add
mov
clc
inc
sub
mov
xchg
mov
jl
sbb
ds
pop
or
add
sub
or
inc
lret
inc
dec
xchg
mov
sub
rorb
xchg
scas
sub
movsb
jmp
int3
xchg
fsubrp
movsb
dec
mov
sti
add
fldt
fs
cld
mov
fisttps
pushf
pop
mov
aam
push
dec
pop
add
cltd
hlt
cmc
mov
out
pop
inc
push
cs
push
sarb
das
or
roll
and
dec
test
mov
sahf
cltd
je
xchg
pop
in
int
ljmp
scas
sub
xchg
cmp
xchg
inc
add
int3
mov
arpl
sbb
xor
mov
in
push
adc
addb
ret
sub
add
ljmp
add
adc
sub
jno
add
in
mov
jg
enter
popl
shrl
hlt
dec
icebp
sub
jo
adc
iret
shrb
int3
nop
sub
lret
sbb
mov
movsb
repnz
sbb
int3
adc
nop
rclb
jge
cli
in
in
out
sti
aaa
cmpsb
mov
fs
outsl
or
fcoms
inc
test
mov
call
xor
arpl
movsb
daa
hlt
mov
sarl
sub
sub
int
adc
pop
and
nop
rcrb
mov
add
in
dec
insb
lds
push
jl
sti
in
push
pop
push
aam
sahf
mov
add
in
les
test
mov
scas
je
xor
movsb
je
mov
nop
hlt
cld
repnz
aam
decb
and
lret
inc
adc
push
repnz
leave
fwait
mov
mov
call
add
add
push
rolb
xchg
push
aam
std
dec
pop
fcoml
rolb
mov
mov
mov
xchg
jb
ror
in
sub
fisttpll
mov
sbb
add
xor
pop
mov
int3
call
pusha
ret
imul
mov
insb
add
xorb
int3
dec
lret
dec
in
sbb
leave
nop
xor
xchg
add
add
or
loopne
les
or
in
fstpt
sar
loopne
in
adc
cmp
roll
repnz
dec
sub
pushf
add
test
or
in
je
shl
adc
mov
repnz
or
add
nop
or
rclb
incl
hlt
in
mov
add
xchg
clc
subb
xchg
and
int3
add
popl
nop
add
loopne
dec
or
xor
sub
sbb
sbb
mov
and
or
outsl
pushf
xor
cmp
or
insb
les
dec
fwait
mov
mov
or
pop
mov
stos
mov
jae
nop
iret
cs
xchg
xchg
test
mov
out
lcall
sub
add
mov
rclb
or
adc
scas
nop
mov
adc
and
push
mov
add
cld
add
mov
cmp
xchg
add
leave
dec
add
adc
mov
sar
dec
dec
shlb
fstpt
pop
nop
adc
inc
shlb
adc
int3
pop
insb
ljmp
in
xchg
lock
mov
cli
or
jb
add
add
rolb
xchg
adc
lock
adc
adc
mov
push
nop
ret
dec
mov
dec
inc
rorl
repnz
movsb
add
aaa
in
iret
lock
add
add
add
ss
or
and
shll
hlt
mov
sub
xor
dec
inc
mov
shll
mov
subb
dec
push
mov
mov
sbb
pop
dec
or
pop
xor
push
call
int3
lret
repnz
jns
pop
hlt
repz
inc
lret
insl
add
lods
adc
outsb
loopne
or
test
decl
adc
or
sbb
add
popf
cmp
loopne
inc
add
jno
add
int3
lea
lret
test
rcrb
adc
add
dec
iret
jg
jo
sub
adc
jmp
shlb
lods
cmc
xor
add
sub
or
in
xchg
in
in
jle
out
cmp
adc
and
adc
sbb
loopne
in
adc
pop
add
dec
xchg
lret
mov
jmp
mov
adc
pop
sub
repnz
mov
in
movsb
les
sbb
call
or
arpl
or
dec
add
enter
sub
rclb
iret
inc
les
imul
adc
aam
ljmp
mov
inc
test
add
test
mov
add
das
xor
ss
cld
rolb
pop
dec
test
add
hlt
push
jns
mov
dec
hlt
add
cmp
nop
or
mov
test
mov
test
test
jo
fiaddl
mov
or
stos
adc
ss
rcl
ds
inc
rcr
pop
outsb
sbb
mov
or
rorb
jl
call
or
or
loopne
adcb
inc
inc
pushf
fcompl
mov
add
arpl
add
imul
mov
jg
andl
cld
or
sub
pop
and
sti
test
mov
push
ret
push
sub
and
nop
sbb
xchg
add
add
ljmp
and
pop
dec
sub
dec
sbb
mul
repnz
int3
add
and
push
adc
mov
inc
ffreep
mov
aad
inc
ret
iret
fcoml
or
call
rcrb
lcall
or
add
in
or
or
cmpsb
add
shl
mov
xchg
popa
ret
in
fwait
pushf
add
dec
mov
pushl
pshufw
out
or
or
bound
rolb
add
leave
jle
or
jge
mov
scas
out
imul
out
inc
adcb
into
add
aam
dec
cmp
add
sbb
insb
leave
jo
sub
icebp
sahf
sahf
test
ds
ret
add
or
mov
add
jecxz
or
nop
lcall
cmp
add
adc
and
rorb
pop
jecxz
or
ficompl
xor
add
paddsb
sub
nop
adc
xor
add
inc
in
int3
add
inc
mov
pop
in
movsb
add
jbe
hlt
mov
jle
test
nop
rcll
jp
add
cmc
jp
test
add
pop
int3
cmp
aad
mov
jmp
or
pop
ret
loopne
adc
mov
jnp
inc
lcall
leave
add
mov
cmp
and
lcall
lea
cmp
fucomi
nop
jg
sub
aad
dec
rclb
nop
rolb
and
imul
or
xchg
mov
nop
in
jl
lods
dec
xor
fwait
int3
iret
fwait
vpunpcklqdq
sbbl
repnz
int
testl
add
push
in
loope
popf
aas
lods
push
or
popa
in
sbb
je
add
scas
xor
adc
shrb
jo
sbbl
add
adc
push
pop
pop
pushf
adc
inc
jecxz
or
test
add
dec
shlb
mov
test
mov
xchg
jo
in
add
or
xchg
icebp
fstl
iret
jae
add
add
xchg
push
or
jns
mov
mov
cmpsb
repnz
or
sub
inc
mov
inc
add
movsb
add
add
or
mov
loopne
mov
shr
movsl
out
jbe
in
xchg
add
rolb
push
add
sub
xchg
dec
repnz
shlb
mov
xor
or
out
add
loope
inc
add
repnz
mov
xor
dec
mov
data16
rorb
out
rolb
or
xor
inc
lock
int3
jp
push
sahf
shlb
lock
out
repnz
and
adc
int3
dec
cmpl
shlb
dec
and
add
rcl
cld
call
out
add
rclb
push
add
xchg
int3
xchg
push
mov
add
cmp
lret
adc
sbbb
out
shl
fmulp
lods
cmpl
mov
inc
lock
int3
sub
loope
jae
repnz
rclb
push
xor
hlt
test
dec
or
orl
ds
rcrb
mov
mov
xchg
repnz
rol
decb
and
adc
int3
inc
xorl
push
mov
aam
shl
shl
repnz
fdiv
and
dec
mov
lock
int3
addb
into
mov
add
lock
mov
repnz
rorb
mov
int3
scas
add
mov
or
iret
out
cmp
add
sub
sarb
mov
mov
adc
ljmp
mov
add
js
xorw
rclb
into
lock
int3
ljmp
mov
dec
add
outsb
int3
lcall
fimull
in
adc
mov
dec
mov
lock
int3
test
test
rolb
lock
add
and
xor
inc
js
data16
test
or
lock
cwtl
mov
mov
add
orl
jo
loope
add
repnz
rorb
adc
or
push
adcl
push
rcrb
add
sar
leave
xor
and
or
repnz
ror
fimuls
insb
int3
jl
dec
repnz
shrb
cmp
in
lock
int3
rolb
jb
inc
fwait
jae
or
add
add
stos
or
int3
rolb
add
xchg
adc
push
int3
inc
adcl
adcl
inc
shlb
mov
jp
repz
xchg
add
sbb
lret
in
mov
int3
adc
pop
rolb
add
test
mov
cmpsb
repnz
fmulp
mov
add
lock
int3
or
pop
rorb
insb
add
mov
les
repnz
add
repnz
mov
lock
int3
mov
mov
mov
add
lock
int3
sbb
mov
push
rolb
mov
repnz
subl
xor
rorb
mov
add
out
addl
pop
shr
clc
mov
add
subl
rcrb
mov
add
adcb
lock
repnz
mov
lock
int3
dec
sbbl
sarb
sbb
out
orl
iret
mov
xor
or
repnz
dec
xchg
push
leave
mov
lret
ljmp
mov
mov
orb
cmp
bound
sbb
add
out
adc
scas
lock
loopne
fisttpl
sbb
add
orl
or
cli
rol
mov
mov
adc
hlt
enter
dec
or
hlt
test
mov
xchg
mov
insb
in
or
xorl
stc
in
or
pop
sbb
ret
repz
in
movsb
movsb
xor
fildl
jge
xchg
jecxz
cmp
lock
int3
xchg
adcl
jo
outsl
lock
ja
dec
repnz
shlb
and
or
out
stc
int3
mov
add
lock
int3
enter
rol
les
ror
cmpl
mov
add
lock
fadds
aad
mov
add
subl
mov
int3
test
cmpsl
repnz
shlb
mov
sbbl
mov
int3
mov
shlb
xchg
lock
int3
nop
orl
mov
int3
pushf
xorl
rorb
mov
add
in
add
rcrb
jmp
lock
int3
aam
test
lahf
rorb
fs
inc
adcl
sarb
push
hlt
aaa
pop
mov
add
lock
int3
mov
rclb
arpl
jne
dec
sbbl
shlb
pmuludq
push
mov
add
lock
andl
mov
pusha
lock
int3
pop
subl
sub
xor
lock
rolb
mov
fs
inc
adcl
xor
adc
cmc
rol
mov
mov
int3
push
fwait
adc
lahf
mov
loop
mov
pop
or
jg
and
lods
and
sbb
sub
xor
push
shll
shrb
rcrl
int3
dec
cmpsb
mov
push
shll
cmc
les
jns
mov
lods
icebp
inc
jns
cmc
loop
rclb
sub
or
out
cmc
jge
push
test
xor
cmpsb
or
rcl
xchg
insb
fisttpll
in
sbb
shrl
jp
cltd
mov
mov
sbb
sub
mov
or
mov
dec
sarb
test
jmp
mov
cs
shll
stos
arpl
stos
xchg
fs
lds
mov
add
mov
mov
out
push
pop
fldcw
and
mov
fsub
sarb
lods
jge
jnp
test
iret
movsb
mov
shll
mov
mov
stc
mov
lahf
dec
mov
enter
test
mov
add
mov
test
inc
mov
jno
roll
data16
cmp
into
out
sbb
fwait
adc
cmp
in
ret
adcl
movsb
pop
mov
dec
rol
pop
test
nop
repz
and
mov
xchg
mov
cltd
jb
mov
pop
add
mov
push
into
shlb
and
jmp
mov
mov
or
sti
push
xlat
nop
out
pop
pusha
mov
sbb
add
xchg
mov
dec
inc
shrl
mov
sbb
jle
push
jno
inc
outsl
movsb
mov
mov
mov
lcall
cmp
adc
add
sbb
pop
ror
pop
addb
cmp
movsl
stos
loope
xchg
repnz
mov
bound
jo
sbb
pop
lahf
movsb
out
stos
mov
fmulp
inc
sub
es
int
repz
and
shll
push
loop
lret
enter
call
ret
pusha
outsb
ds
cmp
mov
repnz
dec
pusha
pop
loopne
pop
ret
enter
mov
sbb
ret
ljmp
add
sub
xchg
jmp
jbe
ret
mov
jle
rorl
rcll
xor
repnz
adc
out
xor
mov
hlt
jecxz
push
leave
or
stc
out
add
cmc
jae
loope
xchg
adc
or
xchg
test
adc
out
roll
xchg
or
fcmovnb
pop
nop
pop
loopne
add
aam
je
jle
and
adc
add
clc
push
ljmp
xor
jmp
adc
scas
adc
add
int3
ret
xor
mov
fs
adc
adc
mov
jl
andl
mov
sti
pop
scas
loop
loopne
cld
jecxz
fcomip
xchg
ja
mov
xor
xor
loopne
mov
call
inc
pop
inc
popa
jp
inc
sbb
insl
cmp
or
add
hlt
dec
mov
xor
hlt
pusha
or
jae
addl
adc
sbb
arpl
or
jge
adc
adc
cmpl
aad
adc
dec
popa
sti
jmp
sbb
jl
loope
hlt
andl
fs
cmpl
and
test
dec
loope
adc
mov
push
or
dec
push
mov
test
add
push
push
arpl
adc
xor
std
mov
inc
in
les
loopne
sti
ss
sbb
repnz
cmp
jbe
aas
jnp
add
inc
jns
into
std
xor
sbb
repz
fidivrl
sub
popa
cld
push
and
loope
shl
sti
test
jmp
outsb
sbb
lret
jne
sti
loop
loopne
mov
adc
cld
std
out
scas
mov
and
rcl
aaa
shrb
imul
sub
pop
inc
das
push
adc
xor
sar
into
cli
repz
jp
lods
mov
loop
insl
arpl
dec
adc
int3
shrb
arpl
mov
mov
add
inc
jbe
rclb
out
outsl
push
push
sarl
int3
pop
hlt
aad
repnz
mov
xchg
and
lds
inc
sbb
pop
int
je
xor
push
lret
out
lock
push
arpl
sbb
cmp
and
movsb
loope
sbb
cmp
rolb
push
dec
lret
test
pop
jns
test
xor
repnz
inc
lock
popa
jl
or
push
inc
and
aad
rep
sbb
iret
lock
sbb
fstpl
in
sbb
shl
adc
rorl
lret
movsb
mov
in
hlt
jne
add
adc
mov
dec
lds
xchg
fisttpll
mov
jmp
pop
subl
jb
jae
fs
jae
test
sub
add
daa
and
push
das
and
les
ret
es
cmp
ret
and
add
sub
pusha
xlat
xchg
les
in
mov
xchg
jl
fld
and
ja
sub
arpl
addr16
xor
mov
mov
test
loop,pt
cmp
cmp
lret
sub
adc
jge
sub
roll
jl
daa
adc
js
xchg
ror
or
movsb
sarb
outsl
adc
lahf
mov
add
cmpsb
add
ret
inc
xchg
inc
and
cld
rorl
mov
and
mov
out
outsl
xchg
std
sub
jae
and
jl
mov
enter
or
jns
push
sub
add
cmp
ss
dec
arpl
add
shll
jl
cmp
imul
shll
scas
enter
insl
or
cmp
clc
fisubrs
in
fs
cmp
adc
dec
push
dec
jbe
mov
aad
repnz
mull
notb
add
adc
clc
jmp
add
xor
bound
inc
loope
xchg
cmp
dec
dec
add
lods
xor
les
clc
bound
leave
add
jmp
neg
lods
add
flds
mov
fimuls
dec
cld
mov
in
xchg
pop
and
sbb
inc
js
cmp
test
dec
mov
lret
push
dec
scas
jecxz
push
add
adc
test
or
fs
inc
or
stos
adc
stos
pcmpeqb
orl
push
mov
rol
into
out
mov
outsl
adc
mov
cmp
jbe
je
push
inc
insb
inc
jns
int
dec
jp
std
loope
cld
xor
sub
movaps
ja
mov
push
jle
cmp
push
pusha
xor
push
dec
jbe
js
dec
push
sub
mov
fs
int3
xchg
pop
jno
incl
inc
jge
xor
ret
mov
sub
loope
std
jmpw
push
dec
loopne
neg
mov
pop
jns
ja
outsb
adc
push
cld
and
je
out
push
out
adc
mov
adc
push
inc
push
pop
arpl
jb
std
pop
into
loop
rorl
loope
cld
cld
in
cmpsb
decb
dec
mov
xchg
mov
cmp
adc
mov
adc
mov
mov
rclb
pop
pop
jmp
add
mov
scas
sub
mov
cmp
cld
shl
xor
ljmp
or
lds
sbb
stos
xchg
lods
fistps
loopne
or
adc
sbb
cmpsl
rcrb
lret
or
int3
xor
lcall
popl
loopne
decb
or
repz
ror
into
jmp
jae
dec
cmpsl
push
sub
add
bound
dec
sub
cmp
pop
add
std
jl
dec
and
lock
je
jno
adc
mov
xchg
loop
hlt
sbb
pop
ja
sub
jge
ret
or
fsub
or
pop
call
push
popf
add
adc
mov
hlt
leave
cwtl
sbbl
les
jl
in
hlt
enter
push
adc
or
add
sbb
loop
cli
push
jae
lret
xchg
ficoml
mov
xchg
mov
dec
xchg
inc
xchg
pop
xchg
push
xchg
cs
es
ds
mov
push
sbb
repz
loope
repnz
xchg
dec
sbb
jne
sbb
test
pop
int
sbb
lea
sti
push
in
ljmp
insl
les
sub
test
js
push
sub
sub
push
dec
sbb
pop
out
loop
frstor
sarl
test
cmp
cmp
push
cmp
sub
pop
xchg
stc
loop
mov
xchg
inc
imul
roll
jno
arpl
divl
xor
and
and
pop
cmp
cmp
cmp
sti
cmc
movsb
cli
mov
loope
sub
and
insb
jl
jecxz
outsl
mov
jmp
lock
lods
sbb
xchg
popf
xchg
xchg
xchg
jno
push
xchg
sub
adc
int
lods
fmuls
subb
push
add
sbb
inc
in
pop
ficoml
sub
push
cmp
inc
cmp
fbld
les
mov
mov
mov
mov
mov
mov
mov
sbb
decb
xchg
inc
sbb
lea
std
in
in
in
subl
dec
and
sbb
repz
inc
pop
mov
and
stc
sbb
clc
scas
xchg
lahf
sbb
sbbb
sbb
idiv
xchg
sbb
xchg
test
nop
xchg
adcb
xchg
xor
or
push
int
lods
mov
dec
je
sub
push
pop
cmc
test
pop
in
adc
or
mov
push
jp
inc
mov
loop
jp
int
lods
push
fs
jle
jns
jae
dec
sub
xor
cmp
cmovge
lock
push
mov
xor
push
and
and
loopne
xor
sub
sub
and
and
cmp
cmp
cmp
pop
fs
fucomip
cli
out
ret
clc
adc
cmpb
aaa
push
add
mov
pop
leave
push
pushf
sub
cmp
cli
mov
cld
mov
stos
mov
mov
mov
mov
lret
mov
fwait
cmc
xchg
cmc
jge
je
dec
cmc
aas
cmc
push
pop
psubw
call
push
into
fiadds
inc
scas
inc
xchg
inc
inc
inc
push
inc
sub
cmp
clc
in
and
push
fadds
xor
and
pop
cmp
cmp
adc
mov
in
call
cmc
ret
cmc
mov
stos
cmc
mov
lock
xchg
lcall
xchg
jp
push
xchg
dec
xchg
inc
sbbb
sub
dec
cmp
loopne
into
sbb
sub
cmp
std
mov
push
xchg
call
lds
mov
nop
sub
test
push
in
xor
sub
popa
jo
insb
inc
push
imul
in
xor
bound
jecxz
cmpsl
out
and
mov
or
dec
je
flds
repz
add
lahf
cmc
push
inc
cmp
test
jmp
add
inc
push
mov
sbb
or
or
mov
or
mov
adc
setno
jg
dec
popa
xor
inc
cmp
jo
sub
adc
push
cvtpi2ps
sub
xor
sub
push
jmp
sbb
push
or
insl
sar
rol
adc
push
mov
sbb
xor
push
sbb
insb
and
jp
je
push
xor
or
adc
jl
enter
xor
lods
stos
mov
mov
cmpsl
dec
push
sub
shrb
push
mov
mov
out
lods
adc
cmpsb
test
std
ret
inc
mov
or
sbb
jmp
sbb
xchg
or
dec
sbb
loop
add
pop
inc
sbb
xor
or
test
xor
push
xor
jmp
push
scas
mov
mov
and
pop
fwait
xchg
or
leave
xchg
dec
test
adc
cmp
test
mov
js
scas
addl
sbb
fisttpl
lds
add
adc
ja
mov
sub
outsl
or
repnz
aam
or
xor
repz
push
cwtl
jo
les
insl
rolb
lock
stc
in
mov
jmp
and
cmpsb
repz
add
jecxz
add
push
loop
ret
jno
xlat
aaa
push
aam
out
inc
movsb
add
xor
dec
sti
dec
sbb
cmp
js
push
pop
cmpl
mov
aam
repnz
sub
xor
rcll
imul
movsb
xor
lock
pop
push
jge
pmulhuw
fldcw
shr
sbbb
mov
xorl
mov
jns
movsl
scas
xor
pop
stc
xor
jmp
sub
push
hlt
mov
or
out
push
aam
aad
xor
sub
mov
sub
movsl
xor
fldcw
add
and
adc
enter
shlb
adc
pop
mov
or
in
mov
lahf
pop
dec
adc
movsl
mov
ds
cmp
or
cmc
out
hlt
xor
dec
shrl
and
mov
xor
sub
pop
pinsrw
rclb
decb
imul
ljmp
les
neg
ficompl
dec
xor
out
aaa
ret
xor
jo
add
fldt
pop
or
outsb
pop
xor
jno
xchg
lods
test
pop
pop
push
and
cmp
jg
js
shrb
sbb
xor
ret
dec
dec
in
test
test
dec
lahf
sbb
test
shl
or
jecxz
xor
sub
and
inc
lahf
push
cmc
int
mov
mov
std
push
sub
and
sub
cmp
nop
je
xor
xchg
mov
jnp
cld
xchg
fimuls
and
jl
jae
nop
push
push
xchg
mov
adc
notb
aad
lahf
cmp
mov
ret
adc
insb
push
pop
xor
or
lock
cli
xchg
adc
lods
and
inc
sbb
or
jmp
jns
xor
adc
sahf
add
push
divb
mov
out
mov
jmp
or
push
xchg
xor
xchg
leave
add
sbb
add
ljmp
fldt
lods
loopne
cmp
push
mov
mov
lea
xor
add
or
mov
mov
and
adc
mov
rclb
cmp
push
stc
es
icebp
sbb
jl
xor
subb
outsb
mov
mov
jno
adc
push
pop
je
scas
out
mov
lock
and
or
stos
push
sub
or
cmp
add
in
dec
lret
xchg
adc
sarb
cmp
xchg
int3
sub
les
ret
je
mov
aad
adc
add
mov
in
add
sub
bound
fdiv
clc
mov
mov
sti
add
mov
mov
je
or
enter
test
je
in
or
lret
push
xor
movsb
xor
fs
ja
in
jb
adc
or
fcoml
mov
jnp
lahf
mov
push
push
mov
or
inc
or
call
sbb
jl
xor
in
xchg
mov
mov
push
xor
sbbb
addr16
cli
pop
xor
daa
push
lock
push
adc
pop
xchg
add
jmp
in
adc
fcmovnu
xchg
mov
lods
xor
mov
iret
add
push
add
loope
xchg
repnz
xor
mov
jecxz
mulb
add
xchg
hlt
xor
sub
sarl
mov
mov
sbb
push
bound
mov
jbe
xor
or
mov
arpl
bound
and
xor
fcmovnu
push
mov
adc
xchg
xchg
sbb
in
adc
int
jge
mov
adc
ljmp
adc
adc
cmc
test
aad
mov
movsb
push
or
push
pop
test
and
xor
push
push
add
xor
or
xor
int
movsl
adc
cmp
xor
int3
mov
jns
jecxz
cmpsl
cmp
sti
out
lret
xor
out
dec
sub
push
cmp
movsl
add
adc
sbb
insw
lock
or
mov
cmp
shrb
adc
lret
pop
xor
les
sbb
mov
sub
lahf
and
adc
std
hlt
in
pop
jmp
inc
fs
adc
movsl
adc
repnz
cmp
xor
popf
add
adc
movsl
cmp
xchg
mov
jl
xor
dec
or
loope
inc
mov
fidivl
mov
pop
sub
es
push
loopne
in
xor
jb
rcl
dec
sub
xor
push
lahf
rcrb
pop
enter
sub
int3
push
out
xchg
scas
cld
push
out
xchg
jp
xor
insb
mov
sar
add
outsb
rolb
xchg
lds
adc
aas
xor
in
rcrb
stc
test
lods
pop
xchg
jmp
sub
aaa
sti
fs
xor
shlb
std
xlat
jns
xor
in
pop
mov
cmp
iret
cmpsb
icebp
xchg
xchg
cltd
sub
or
adc
add
sar
pop
mov
xor
rcrb
in
sub
mov
inc
sbb
mov
loop
mov
js
hlt
cmp
aam
xchg
pop
or
xor
arpl
sbb
cmp
cld
nop
les
cmp
xor
in
lods
cmp
clc
int
mov
mov
xchg
mov
hlt
fidivrl
mov
iret
push
pop
inc
icebp
xchg
and
divl
je
lahf
cmc
sub
mov
pop
inc
mov
mov
or
dec
loop
push
fcmovu
xchg
aam
lods
pop
mov
adc
into
sub
sub
xchg
repz
xlat
cmp
push
jle
adc
nop
sub
hlt
mov
in
fidivs
iret
push
inc
ds
outsb
push
orl
scas
dec
push
cmp
sbb
mov
add
push
pushf
je
pop
sub
add
push
push
mov
add
xchg
mov
inc
jmp
adc
cld
add
scas
adc
iret
out
lock
xor
cmp
sbb
fs
out
ljmp
pop
mov
test
cmp
pop
adc
xor
lods
or
or
lods
add
push
xor
inc
mov
or
jae
adc
out
and
xchg
xor
mov
jno
fs
lock
fadds
mull
pop
pusha
sub
cmc
sbb
fcmovnu
dec
inc
cli
ret
add
add
data16
fidivl
sar
push
mov
adc
or
sbb
add
dec
loopne
xor
cmp
divb
adc
xor
aam
dec
xchg
sub
cmc
pop
xchg
insb
hlt
test
cmp
dec
mov
lods
push
lret
inc
xor
pop
cld
or
mov
dec
adc
xchg
jo
rorl
adc
jl
xchg
sub
incl
add
push
xor
add
adc
mov
mov
jge
adc
xor
jmp
adc
xchg
adc
fidivrs
dec
xor
rclb
les
push
xor
pop
push
adc
xchg
scas
jmp
add
cmp
adc
xor
xor
jne
xor
or
stc
mov
iret
je
xor
fcoml
fiaddl
mov
ds
inc
imul
dec
or
xor
divb
fs
lock
xor
lahf
int3
sbb
xor
push
sbb
dec
fisubrl
xor
out
loope
adc
xor
nop
in
test
dec
and
dec
out
mov
pop
inc
mov
jmp
and
pop
test
dec
test
mov
inc
jmp
hlt
lock
xor
dec
sub
pusha
mov
xor
xchg
nop
cmc
or
clc
or
cli
repz
aas
adcl
frstor
ja
push
dec
flds
or
xor
shl
inc
ret
pushf
call
popa
xor
push
out
xor
js
shr
mov
lret
xor
pop
fdiv
pop
jecxz
div
sub
mov
mov
fwait
inc
mov
je
jnp
adc
out
movsl
sbb
pop
pop
daa
dec
xor
or
aam
mov
out
adc
sti
fiadds
sbb
shl
xchg
cmpsb
cmp
adc
pushf
sbb
bound
sbb
fmull
out
cld
and
mov
xor
or
mov
push
add
add
or
or
add
ja
cld
push
mov
loopne
add
inc
xor
xchg
push
popf
xor
outsl
mov
cmp
xor
pop
jb
or
mov
rol
and
pop
ljmp
out
xor
repz
xchg
or
xor
mov
mov
jno
push
mov
and
add
xchg
jp
cmp
rcrl
xchg
mov
xor
xchg
fs
xor
add
ret
jnp
stos
shll
or
ds
xorb
fnstsw
mov
add
testb
adc
test
push
out
inc
aam
ret
jle
inc
or
mov
push
enter
add
xchg
or
or
adc
cwtl
jns
sub
sbb
xor
int3
jns
idivl
aad
loopne
mov
push
xchg
stc
pop
int3
xor
outsb
sbbl
cmp
push
mov
jp
adc
pop
je
stc
xorb
js
xor
push
mov
mov
or
and
idivb
aam
sbb
mov
or
mov
sbb
jmp
add
rcrl
out
out
or
xor
mov
xor
sbb
cli
ficompl
daa
loop
mov
sub
in
mov
mov
sub
mov
mov
lods
push
jae
jg
mov
xor
subb
push
pop
pop
dec
pop
icebp
or
inc
xor
lods
xor
or
fwait
xor
lret
mov
roll
and
ret
xor
mov
mov
or
sub
cmp
mov
adc
jmp
lea
and
add
mov
sbb
jns
inc
imul
mov
fwait
pop
cmp
pop
pop
pushf
xor
sbb
daa
lock
sub
ss
outsl
aaa
xor
jnp
arpl
sbb
cwtl
and
out
enter
fsubs
inc
inc
push
ja
xor
xlat
push
jo
movsl
sub
out
sub
or
sbb
xor
sbb
aas
aad
or
popf
or
cmp
mul
outsb
mov
xor
outsb
inc
les
adc
xor
imul
imul
loop
fistpl
push
insl
jecxz
adc
adc
xor
daa
pusha
in
leave
or
push
jb
mov
dec
and
push
lret
push
sub
pop
pop
xor
jmpw
pusha
adc
sub
lock
mov
aas
mov
cmp
push
repnz
imull
sbb
gs
cmp
ds
xor
adc
mov
enter
adc
pop
rol
xor
shlb
andb
imul
xor
loop
or
out
pop
cmp
fs
push
cmpsl
clc
push
push
mov
xor
jb
out
dec
sub
push
inc
lods
popa
sahf
stos
in
xor
xor
adc
lods
add
movsl
xor
mov
mov
je,pt
pop
mov
sub
mov
imul
pop
movsl
out
adc
adc
adc
sahf
push
dec
or
cmc
je
or
add
cmpsb
and
xor
iret
or
rcrb
insl
xor
lcall
cs
xor
fidivrl
mov
jge
jb
pusha
pop
adc
xor
fcompl
sub
insb
xor
xor
xchg
shrl
mov
incb
dec
mov
stc
and
xor
sub
pop
call
es
stc
add
cwtl
jmp
xor
loope
push
push
xchg
movsl
mov
or
fsubr
dec
into
sbb
inc
mov
adc
rorb
sub
ret
inc
rcll
xor
xchg
dec
lahf
cmp
adc
in
jns
mov
icebp
push
pop
sub
hlt
lcall
jmp
mov
mov
test
cmc
xor
push
ficoml
push
ljmp
jmp
ficoml
out
mov
jecxz
pop
push
jl
roll
jbe
xor
xchg
aas
outsb
out
or
adc
stos
dec
adc
jl
dec
in
adc
mov
adc
jo
pop
roll
lahf
push
jno
cmc
int
sub
jle
push
adc
fcmovbe
mov
dec
in
adc
xor
shrl
sub
or
rcr
ret
push
sub
call
sub
push
pop
lea
or
or
and
mov
adc
movsl
out
sbb
mov
popa
cmp
mov
subl
adc
xor
sub
jae
cmp
xor
xlat
clc
mov
dec
loop
fdivs
data16
mov
mov
dec
cmpl
mov
pop
add
lods
inc
adc
arpl
sub
mov
push
xor
dec
mov
pop
xor
pop
in
sbb
fcmovnb
xor
sub
smsw
xor
ljmp
icebp
into
adc
push
mov
sbb
in
repz
and
fs
adc
and
pop
xor
aas
and
mov
mov
les
fisttpl
xchg
scas
mov
xor
sub
mov
xchg
loop
repz
in
push
sub
test
inc
movsb
mov
add
mov
adc
push
xchg
aam
bound
lock
jmp
cld
loopne
fsubr
sbb
push
sub
add
sahf
pushf
test
in
push
mov
cmp
mov
je
repz
or
xor
mov
xchg
push
mov
test
sbb
imul
sbb
mov
clc
dec
xor
cld
push
pop
push
outsb
sti
cmp
in
cmp
xor
ljmp
xor
adc
jo
hlt
sahf
mov
sbb
add
aaa
sbb
dec
cmovge
xor
cmp
ja
dec
shlb
dec
add
or
xchg
jb
cmp
or
xor
mov
jno
adc
es
ret
bnd
push
mov
mov
in
sub
xor
push
pop
mov
hlt
clc
add
in
bound
test
lcall
push
loopne
mov
mov
mov
rol
je
xchg
mov
out
lds
mov
mov
or
dec
mov
pop
stc
mov
notl
repnz
loop
xor
xor
mov
mov
ljmp
mov
mov
xor
sarb
das
adc
daa
xor
ret
push
lea
es
mov
aaa
sub
and
daa
sub
adc
movsb
push
xor
ds
adc
fwait
xor
ret
cli
or
js
xor
mov
xchg
xor
pop
sub
pushf
lahf
ljmp
shll
lret
xlat
xor
pop
dec
or
sub
sub
push
pop
ljmp
sub
push
arpl
sub
out
bound
int3
fs
sbb
int3
shrb
sbb
push
mov
aaa
mov
add
fwait
int3
outsl
push
jl
lods
adc
popf
aaa
je
scas
mov
dec
mov
jae
jne
or
ja
xor
and
adc
xor
aad
mov
mov
les
rcrl
adc
adc
mov
aam
out
xor
pop
push
xchg
pop
out
mov
or
and
adc
add
xor
ficoml
fdivrl
mov
mov
in
push
int3
or
sbb
sub
or
xor
lock
out
sti
cmp
xchg
adc
adc
xor
mov
inc
mov
mov
sub
in
pop
mov
leave
mov
push
and
ss
push
xor
dec
cwtl
jne
mov
into
xor
mov
mov
int3
mov
add
adc
andb
inc
jmp
mov
fninit
ds
xor
rcrl
in
xor
or
lcall
push
push
lahf
sbb
shll
dec
out
jl
hlt
movsb
xchg
mull
ss
xor
mov
push
jge
or
xor
repnz
mov
mov
lods
and
adc
fsubrs
xor
pop
add
pusha
test
shr
xchg
dec
iret
and
les
mov
sbb
lods
das
out
inc
call
rcll
xchg
adc
xor
scas
xchg
add
xor
xchg
xor
xor
or
jno
add
pop
or
sbb
xor
rcr
ret
fcom
adc
das
jae
shrb
stos
in
rcl
cld
les
cli
test
jecxz
jl
xor
xor
cmp
push
in
push
bound
xor
mov
add
add
mov
pop
nop
inc
pushf
cmpsl
sbb
sbb
push
push
xchg
je
outsb
stos
adc
xor
int3
fadd
mov
sbb
xor
push
pop
sub
push
data16
xor
mov
xor
mov
mov
sub
outsb
xor
dec
push
pop
jae
loop
adc
pushf
loopne
sbb
std
sub
xor
out
dec
fucompp
xor
in
or
ret
xor
cmp
xor
mov
mov
push
fldcw
cmp
rorb
lods
mov
rcr
push
jne
les
mov
inc
mov
aam
or
popl
nop
movsl
and
ret
ss
add
out
sbb
and
pop
pop
fsts
xor
mov
mov
aas
adc
adc
cmpl
int3
mov
or
adc
pop
arpl
sbb
cld
xchg
xor
or
adc
movsb
mov
je
shll
inc
pop
mov
sbb
in
pop
das
lods
jae
jne
stos
les
xchg
mov
loope
ja
or
push
mov
dec
int
xor
mov
xchg
push
adc
adc
shll
sub
push
call
mov
leave
insb
je
out
push
xor
xchg
xlat
call
mov
lret
adc
sbb
ds
bound
or
xchg
rolb
mov
mov
dec
lods
rcrl
ret
sub
or
jle
cmpsb
hlt
shlb
mov
hlt
pop
or
adc
scas
xor
das
add
shll
clc
sub
outsl
lret
test
mov
mov
repz
adc
push
out
xor
xor
ljmp
jo
loopne
or
xchg
adc
in
dec
movsl
cmpb
xor
call
rorl
add
adc
adc
pop
test
and
mov
xor
xchg
sub
mov
ret
divl
orl
sub
aaa
xor
push
push
in
mul
out
pop
call
ljmp
inc
mov
lea
xor
dec
inc
lods
add
pop
push
or
pop
cmp
dec
xor
lahf
sti
ret
inc
push
std
pushf
cmp
xor
cmpsl
xchg
cwtl
mov
inc
xchg
jl
call
mov
sti
xor
inc
xchg
jecxz
xor
stos
outsl
stc
loope
push
shll
rcrl
xor
cmp
pop
test
cmpsl
xor
sbb
cmpb
int
xor
adc
enter
aas
das
sub
pop
sbb
ljmp
cmp
cmp
mov
inc
les
andb
dec
in
jmp
push
push
mov
adc
mov
nop
xor
sti
dec
lahf
lea
mov
xor
xor
or
mov
adc
scas
adc
test
mov
int
sbb
sbb
leave
cmp
hlt
aam
pop
inc
repz
adc
mov
mov
xor
movsb
iret
sub
sub
pop
adc
xchg
push
or
dec
xor
aad
lods
sbb
or
loope
mov
adc
and
xor
pop
mov
movsb
push
arpl
mov
leave
aam
cmp
jecxz
or
fcomps
add
or
or
adc
adc
orl
or
xor
cld
bnd
xchg
or
fsub
dec
xor
push
das
or
jecxz
dec
gs
mov
dec
call
add
and
or
repnz
shlb
bswap
or
jb
gs
int3
add
in
adc
push
out
adc
inc
loopne
xchg
and
add
mov
test
lea
sbb
push
xor
mov
fdivp
enter
cmc
adc
sub
dec
jns
test
xor
cmovl
std
pop
arpl
icebp
add
xor
fwait
pushf
pushl
jae
add
mov
mov
lret
cmc
sbb
xchg
adc
sbb
test
xor
sub
shlb
cs
inc
mov
mov
adc
cmp
lock
pushf
push
aad
push
xor
xor
aas
mov
fs
dec
js
xor
or
aam
jae
push
mov
adcl
xor
xchg
mov
add
xor
popl
lods
jo
cmp
add
push
pop
inc
mov
cmp
xor
sbb
or
push
mov
push
ficompl
pusha
lret
enter
add
cmpb
xor
pop
jp
cmp
je
jns
pusha
push
jbe
hlt
mov
in
push
cmpsb
pushl
not
push
sahf
jg
push
shrl
lahf
and
adc
sub
popf
mov
pop
out
data16
rcll
pop
movsb
hlt
push
push
and
fdivl
xor
loope
mov
fnsave
push
fstps
xor
test
les
test
inc
stc
inc
mov
or
sub
xlat
xchg
rclb
std
dec
lahf
adc
or
or
cltd
push
adcb
add
mov
fs
xor
fs
subl
xorb
sbb
adc
test
sub
or
sbb
adc
lret
mov
pop
lahf
or
push
les
fdivl
xor
js
pop
mov
mov
bound
sbb
or
jmp
adc
cmp
dec
pop
test
lock
repz
sbb
ret
jl
adc
in
in
mov
int3
lods
and
fisubl
adc
or
and
pop
mov
les
push
ss
imul
dec
rclb
cltd
xor
add
nop
imul
pop
loopne
xlat
xchg
sbb
jl
xor
push
pop
cmp
dec
or
int3
and
movsl
xor
pop
xor
add
xorb
sbb
fadd
adc
ret
add
add
xlat
xor
hlt
les
pop
test
fs
aad
xorl
mov
pop
dec
in
sub
xchg
cmpsb
xor
xor
in
in
fsubrp
xor
stc
jp
mov
bound
orl
not
or
xlat
in
xor
mov
pop
push
xor
aaa
mov
fisubs
push
xor
loope
movsb
outsb
in
mov
adc
push
mov
pusha
cmp
std
mov
fdivr
shl
sbb
push
or
xor
or
xchg
push
imul
mov
jmp
cs
cmp
mov
adc
pop
stc
inc
mov
or
fiaddl
pushf
push
enter
or
adc
mov
mov
inc
fldl
hlt
or
data16
inc
fdivl
jae
aad
sub
jmp
clc
lret
adc
enter
and
xor
int3
or
repz
sbb
sub
movsb
sbb
dec
adc
mov
xor
sub
push
nop
lea
cmp
mov
cli
out
clc
pop
sub
xor
out
sub
xchg
push
dec
mov
cwtl
sbb
or
sub
test
out
push
je
or
adc
xor
sub
sub
xchg
andb
jle
lods
adc
cld
cwtl
insl
xor
xchg
int3
xor
std
icebp
adc
lahf
push
jg
ljmp
jae
and
stc
daa
adc
movsb
cmp
xor
push
test
in
pusha
inc
insb
adc
addb
cmc
mov
push
and
out
lds
xor
push
cmp
or
xor
out
mov
xor
adc
sti
fidivl
mov
mov
int3
mov
adc
hlt
or
les
mov
adc
sti
aam
dec
xor
mov
dec
in
add
ret
xor
add
stos
pop
xor
inc
adc
sti
arpl
xor
push
sub
movsl
cwtl
movsb
pop
nop
and
std
xor
into
bound
xchg
insl
outsb
je
mov
sub
mov
adc
pop
andl
sub
inc
push
gs
lods
xor
and
in
mov
les
out
inc
rclb
inc
mov
sub
push
mov
xchg
pop
ret
push
jae
rorb
in
jnp
dec
or
jg
bound
stos
and
pop
sub
xor
cmp
fdivl
mov
lret
or
jmp
or
sar
xchg
leave
adc
adc
lahf
icebp
jl
push
cmp
xor
xchg
jb
ret
pop
xor
adc
xchg
xor
scas
mov
repnz
shll
outsb
test
xor
push
dec
les
insb
push
adc
sti
lcall
push
sub
decb
test
jge
lds
xchg
das
addr16
out
lods
sbb
fs
mov
je
xor
sbb
hlt
jno
subl
rorb
in
in
xor
pop
add
xor
xchg
bnd
out
shll
mov
xlat
sub
adc
in
ss
or
lahf
insl
pop
fnstenv
adc
lret
fwait
and
sbb
cld
cmp
adc
xor
dec
es
jl
sbb
xor
lcall
nop
sbbb
xchg
stc
sub
add
push
dec
repz
repnz
mov
xchg
ljmp
dec
xor
fcoms
sub
movsb
xor
sbb
jo
or
xor
lods
icebp
mov
or
dec
add
cmp
mov
sbb
pop
dec
add
add
xor
or
iret
xor
add
call
sbb
pop
out
xor
mov
ds
xor
xchg
nop
pop
repnz
sbb
mov
cmpsb
hlt
mov
jp
add
dec
ja
ljmp
fldt
dec
cmp
inc
outsl
hlt
or
adcl
outsb
or
mov
jp
xor
rorb
xchg
adc
xor
pop
roll
mov
dec
adc
scas
repnz
push
jae
in
and
xor
test
pushf
ret
fsubrl
divl
push
cwtl
cld
adc
loopne
add
nop
pop
movsb
xchg
sub
pop
mov
ss
xor
xor
mov
xor
xchg
int3
icebp
rolb
xor
mov
sbb
repnz
icebp
lock
adcl
add
and
xchg
or
adc
and
xchg
and
sbb
pop
sub
nop
adc
cmp
mov
cs
fcmovu
push
rcl
scas
shl
or
jns
inc
fnstcw
xor
lret
mulb
je
ss
push
xorl
cwtl
mov
adc
or
lods
push
push
xorb
and
filds
xor
nop
int
mov
xor
or
loope
push
xchg
sti
xor
sbb
ss
mov
testb
arpl
xor
stos
mov
out
cmp
sbbb
pop
sub
xor
mov
dec
fcmovb
js
divl
dec
mov
xor
cli
in
sbb
fildl
repz
cmpsb
stos
sbb
or
adc
inc
loop
xor
fidivrs
xor
dec
jnp
sbb
inc
pop
push
inc
and
outsb
xor
into
cmp
nop
jmp
xor
aad
adc
sbb
mov
das
push
mov
xor
sar
adc
movsl
push
scas
hlt
xor
add
aas
sti
ds
sbb
add
mov
pop
pop
jae
xor
and
int3
cmp
jo
lret
mov
adc
xor
mov
in
push
xor
mov
sub
xor
pop
incb
jae
xor
jecxz
sbb
bound
stos
jmp
push
repnz
push
into
imull
push
push
ds
jp
mov
mov
push
in
outsl
jp
xor
dec
setge
mov
lahf
fs
sarb
hlt
add
add
jb
xor
sbb
sbb
stos
cli
inc
mov
lret
xor
clc
xor
ljmp
add
sub
and
xor
movsl
scas
ds
mov
mov
push
rclb
mov
scas
mov
xor
fimull
pusha
jle
add
cmc
or
les
in
test
xchg
xor
xchg
push
adc
cli
bound
lahf
cld
les
loopne
xor
adc
fnstcw
mov
fs
into
shl
pop
je
fildl
les
stc
pop
inc
js
add
mov
sbb
ljmp
sbbb
mov
pop
or
mov
xor
push
dec
jmp
lahf
push
sbb
mov
jae
push
ret
rclb
sbb
adc
bswap
push
xor
into
not
dec
inc
and
cmc
add
js
inc
xchg
cmp
call
xchg
enter
lret
mov
les
cmp
and
xor
add
adc
or
cmp
push
xor
sahf
mov
leave
lahf
push
jnp
adc
mov
hlt
pusha
nop
xor
inc
popa
outsb
sbb
push
jl
sub
test
jo,pn
pop
repnz
sbb
mov
or
push
sbb
nop
xor
out
add
lock
mov
pop
add
push
jg
xor
sbb
push
xor
dec
loop
icebp
xor
adc
je
mov
fwait
xor
lock
or
jnp
fimull
push
jo
lock
sub
xor
xchg
mov
add
movsb
int
dec
nopl
xor
aas
pop
mov
add
in
div
adc
cltd
loop
pop
out
adc
xor
les
mov
sbbb
inc
xchg
hlt
pop
adc
xor
inc
scas
int3
pop
dec
stos
sub
pushf
mov
mov
cld
push
sar
div
scas
lock
add
xor
mov
sbb
xchg
xchg
xor
dec
mov
inc
or
mov
je
push
les
test
inc
pusha
daa
sti
add
or
ljmp
jmp
sub
dec
fcomps
xchg
aam
rorb
loop
lods
or
enter
mov
cmp
pop
ja
hlt
mov
sbbl
jns
int3
push
or
leave
mov
adc
inc
cmp
lahf
adc
pop
int
fildll
push
call
mov
cmc
inc
push
xchg
ds
dec
inc
cmp
mov
gs
mov
jge
add
mov
out
je
xchg
lcall
jb
in
sbb
dec
fs
adc
pop
loope
sub
repz
and
add
fiaddl
out
imul
push
nop
daa
xor
jmp
or
dec
jbe
sub
testb
fs
sub
stc
mov
incl
hlt
xchg
xchg
dec
push
mov
and
xor
bound
je
jecxz
xor
rcr
out
mov
shlb
pop
push
xchg
push
sbb
lret
push
sub
arpl
push
sbb
shufps
cmp
pop
mov
pop
ljmp
mov
lahf
xor
cmp
mov
adc
cld
xchg
jg
inc
xor
jb
jo
dec
xchg
adc
adc
xor
add
push
mov
stc
xor
cmp
cltd
mov
orb
sarb
popa
xor
pop
flds
loop
xor
jl
mov
xor
out
fists
rcrl
and
adc
xor
nop
mov
jp
rol
xchg
gs
push
xchg
adc
adc
add
xor
sbb
mov
lea
pop
cmp
in
and
jg
sub
add
aas
jl
out
mov
push
lret
dec
xchg
jbe
or
les
and
popl
mov
inc
ss
push
pop
and
add
pop
or
dec
fwait
mov
cmpsb
xor
sbb
or
adc
rcl
aam
fs
and
mov
push
stc
jnp
rclb
loopne
pop
jmp
fstl
xor
loope
loopne
xlat
mov
mov
or
adc
addl
into
or
hlt
orb
int3
xchg
dec
xor
dec
xchg
xor
push
sub
es
xor
add
clc
jp
mov
sbb
push
movsb
mov
fidivl
movsb
std
adc
adc
push
adc
jecxz
ja
dec
nop
cld
sub
pop
mov
lods
insb
clc
fnsave
xor
mov
cs
mov
or
inc
mov
icebp
add
fwait
or
adc
xchg
negb
add
lret
or
in
adc
pusha
roll
nop
push
sub
inc
and
jae
pop
xor
xor
les
mov
mov
add
adc
adc
add
icebp
sbb
dec
dec
pop
dec
xor
pop
inc
xchg
mov
pop
pop
xor
pop
dec
xor
push
push
xor
push
xor
dec
shll
mov
mov
or
cmp
xor
not
adc
jge
fs
jns
or
xor
mov
inc
lret
dec
sbb
mov
xor
or
int
es
xor
cld
jnp
arpl
mov
jp
mov
call
adc
pop
cltd
xor
mov
int3
xor
mov
inc
pusha
fs
movl
cld
or
mov
cmp
xor
mov
push
repnz
sub
dec
dec
push
cmp
repz
add
sub
push
lea
xchg
jne
nop
pop
cltd
adc
lcall
out
mov
popf
or
hlt
jo
je
movsl
and
adc
ja
in
cld
mov
or
dec
xor
in
roll
or
and
repz
xor
pop
hlt
sti
aam
adc
inc
mov
fs
xor
and
add
adc
mov
or
or
push
jae
std
aam
out
sub
mov
adc
outsl
test
mov
pushf
mov
les
hlt
ret
std
inc
cs
sbb
hlt
adc
repz
sub
push
push
aam
mov
adc
test
in
sbb
mov
cltd
jo
pop
mov
fcmovnbe
or
xor
mov
sub
dec
xor
stos
and
mov
jne
xor
dec
add
enter
outsl
push
xor
iret
pop
fsubs
lret
pop
in
mov
adc
mov
cmp
lahf
stc
xor
into
cld
scas
inc
pop
mov
xor
enter
stc
rcrb
dec
int
xchg
ficomps
mov
test
rcrl
shrb
mov
pop
cmc
xchg
loop
mov
es
shlb
sub
sub
out
in
mov
in
pop
fs
scas
push
movsl
repz
xor
cmpsb
mov
cs
stos
in
or
inc
repz
inc
loopne
test
mov
cmpsb
lcall
xor
mov
jecxz
mov
shll
lods
push
mov
inc
sbb
sbb
mov
into
clc
movsb
repnz
fidivs
idivb
xor
lret
mov
int3
imulb
mov
mov
movsl
cmp
shlb
xchg
lods
jne
cmp
popf
xor
lret
push
xor
mov
pop
movsb
mov
mov
lods
ret
lahf
out
sahf
mov
push
rep
add
outsl
nop
add
adc
or
fidivrs
aas
out
mov
sbb
xchg
pop
add
or
inc
fisubrl
mov
mov
cmpsl
add
fstpt
xchg
cli
stos
icebp
push
enter
mov
scas
push
cmc
mov
pushf
add
ret
xor
xor
and
lahf
or
add
repz
dec
cmp
test
cld
test
repz
mov
mov
out
xor
mov
loop
jmp
mov
fldt
lock
push
cltd
and
aam
movsb
or
mov
mov
jle
dec
repz
mov
inc
xor
jmp
pop
sub
imul
lock
mov
xor
mov
mov
outsb
adc
in
adc
or
add
pop
shlb
and
lods
test
mov
cmc
je
repz
nop
loop
test
int3
lock
shlb
adc
mov
push
repnz
cmp
cmp
lock
xor
test
mov
stc
or
push
mov
pop
ret
or
adc
or
cmpsl
wrmsr
xor
adc
mov
xor
mov
loop
mov
lret
mov
stos
mov
mov
fcoms
mov
mov
mov
mov
mov
mov
mov
mov
in
sbb
add
repz
adc
lock
xor
cmc
xchg
mov
rcl
test
je
xchg
ljmp
into
xchg
les
scas
sub
sub
cmp
cmp
push
cmp
pop
cmp
cmp
rorb
adc
insl
frstor
lahf
mov
xchg
mov
push
mov
xor
cs
sar
stc
loop
xchg
hlt
xchg
clc
imul
cmp
and
adc
mov
jo
or
jno
popa
jns
push
push
inc
inc
xor
xor
sub
shlb
push
mov
in
outsb
lea
cld
cmp
dec
shrb
sti
jecxz
cli
xor
stc
fwait
clc
outsl
mull
in
push
pop
and
xor
lods
xchg
popf
notl
clc
dec
testl
cmp
cmp
sub
inc
push
xor
sub
mov
adc
in
sub
and
push
cmp
inc
jb
mov
clc
stc
call
dec
cmc
inc
sbbl
and
ds
cmp
cmc
mov
movb
push
adc
popf
inc
xchg
inc
dec
add
and
xor
sub
sub
xchg
cmp
pop
cmp
mov
xor
jne
pop
push
cmc
pop
add
mov
push
nop
lds
sub
push
mov
popa
mov
xor
in
cmp
test
dec
sbbl
xchg
inc
pop
and
adc
or
repnz
sar
mov
mov
jp
mov
sahf
movb
push
lds
jns
jae
dec
xor
push
push
xor
mov
in
cmp
sahf
xor
cli
jb
fwait
sub
xchg
push
sbb
cmp
xor
or
push
mov
mov
sub
popa
arpl
rorl
sbb
lea
xchg
adc
xor
and
add
push
mov
shrb
leave
xchg
pushf
and
cmp
sbb
stc
cld
clc
shl
fildl
imulb
xchg
xor
mov
dec
mov
and
adc
call
inc
into
insl
movb
fisubrs
xchg
push
inc
lds
sub
cmp
dec
in
negb
shll
fsubrs
test
mov
mov
inc
xchg
lock
ljmp
xor
adc
testl
in
loopne
rclb
stc
mov
stos
out
mov
mov
hlt
lcall
sub
push
insb
cmp
in
les
sub
test
notb
aad
push
lock
int
cmp
adc
add
cmp
mov
dec
call
push
cmp
cmp
mov
xchg
mov
mov
pushf
js
imul
addl
xchg
call
pop
pushf
pop
xor
cld
fidivs
jp
jae
xor
ret
cli
push
sbb
mov
imul
lret
mov
addl
cmc
adc
dec
jmp
insb
push
mov
xor
in
or
xor
push
sbb
push
or
mov
lds
inc
xchg
push
enter
rol
pop
dec
sbb
push
rclb
lods
push
fmull
push
les
pop
sbb
cwtl
int
iret
inc
lret
push
hlt
into
sbb
imull
cld
xor
xchg
std
jl
lock
adc
push
cltd
cli
xchg
in
xor
jo
dec
aaa
inc
enter
dec
ret
or
leave
je
fwait
into
sbb
jmp
subb
int3
test
xchg
mov
shrl
push
add
daa
cmpb
ds
or
ja
and
or
cs
pop
push
and
cltd
jl
mov
inc
cmpsb
xor
push
scas
pop
xor
scas
push
movsl
dec
idiv
lock
cltd
in
xor
loopne
loope
and
xchg
roll
cmpsl
add
rcll
imul
scas
fdivrs
ds
in
fnsave
jmp
or
or
inc
pusha
scas
mov
ret
dec
sarb
push
xor
outsb
jo
inc
mov
cmpsb
mov
fidivs
insb
mov
add
add
or
mov
jmp
xor
movsb
fsubrs
mov
repnz
cltd
jbe
xor
lods
jg
add
insl
out
adc
dec
add
xor
dec
or
xorb
cld
push
jmp
aas
xor
daa
sbb
lods
xor
mov
lret
mov
or
data16
fwait
jl
pusha
mov
adc
mov
lcall
xor
push
cltd
pop
enter
adc
jmp
aaa
push
gs
adc
fdivrp
cld
gs
rclb
push
mov
dec
mov
shll
push
add
test
inc
jmp
lret
notl
pop
imul
mov
rorb
or
push
in
int
scas
fidivs
stc
push
or
or
add
mov
lds
rcrl
adc
repz
dec
inc
aas
mov
xchg
add
out
repnz
push
xchg
xchg
lret
lods
cmc
sahf
leave
fucom
push
push
and
cmp
cmp
into
imul
xlat
add
sub
in
sbb
cld
mov
sub
sahf
add
rclb
stc
leave
sub
xor
xor
rcrb
push
dec
cld
adc
xchg
js
test
or
and
cld
out
pop
mov
mov
fstps
xchg
cltd
pop
fidivs
test
mov
shlb
mov
xchg
inc
cltd
mov
push
das
jge
xor
sub
inc
push
jge
xlat
dec
sub
pop
xchg
pop
outsl
jp
fidivrs
lahf
cmpsl
lcall
cld
adc
add
sbb
or
mov
aas
inc
test
and
mov
into
sbb
stos
dec
les
pop
addr16
jle
aaa
imul
sti
push
ds
xchg
xchg
adc
enter
pop
out
iret
rol
xchg
enter
mov
popa
stos
stos
lahf
xchg
imul
or
les
cmp
mov
mov
rorb
imul
lds
push
or
fcomip
je
loope
repz
cld
loop
add
loopne
imull
cmc
push
sub
popa
std
sub
int
inc
lock
stos
dec
jecxz
cmp
fmul
push
xor
inc
push
dec
imul
ja
inc
jge
add
sbb
pop
sub
push
loop
into
jecxz
or
loopne
shrl
inc
neg
add
cmpsb
je
mov
add
or
inc
iret
push
sub
fneni(8087
pop
cmpsl
push
sahf
or
push
push
sub
and
and
jno
push
outsl
ror
jmp
sbbl
mov
clc
push
addr16
imul
push
repnz
fs
mov
out
pusha
and
call
dec
push
or
jl
inc
fsubp
push
out
fmull
xor
adc
mov
ror
or
xchg
dec
int3
push
jb
and
pop
mov
loopne
mov
gs
shl
jae
daa
ja
sbb
loope
inc
rolb
fdivrp
xrelease
jge
into
nop
in
loopne
mov
mov
sti
clc
jae
dec
jnp
inc
loope
shl
or
pop
repnz
cmp
imul
ds
jbe
pop
inc
push
popa
dec
inc
sub
pop
dec
jne
jns
jle
addr16
cmp
jnp
push
ja
push
jl
pop
popf
daa
adcl
mov
jb
cs
lods
adc
outsb
jo
xor
push
jp
jge
bound
enter
and
jae
mov
jle
aas
jl
imull
stos
push
cmpsl
movsl
mov
mov
or
or
shlb
je
jp
adc
pop
pop
pusha
dec
xchg
add
lahf
push
add
xor
sahf
add
adc
out
dec
mov
jbe
xchg
mov
stos
jl
xchg
loopne
jo
iret
in
enter
aam
gs
pop
adc
xor
jecxz
movsb
adc
orb
mov
inc
xor
sbb
sub
ds
jb
mov
or
pop
les
dec
iret
inc
fsubl
adc
rclb
pop
cwtl
in
jmp
aas
adc
lock
rorb
repnz
and
xorl
hlt
shl
mov
push
jo
rorl
into
in
xchg
imul
mov
or
or
xor
xchg
cmp
mov
jnp
xchg
js
div
xor
dec
add
sbb
pop
iret
xorl
xchg
mov
mov
leave
ljmp
add
sahf
xor
sbb
popf
adc
pop
inc
xor
gs
cmpsl
push
dec
jnp
stc
in
shll
lcall
mov
xor
int3
pop
arpl
mov
mov
lods
dec
xor
out
mov
daa
les
sbb
rorl
int
cli
inc
outsl
js
test
jmp
sbb
push
fldcw
or
mov
popa
jmp
sub
pop
mov
xor
mov
fiadds
insb
dec
pop
xor
jnp
dec
das
push
or
xor
xor
xor
ljmp
xor
jmp
aam
ss
fnsave
bound
stc
dec
dec
mov
sub
in
adc
imul
xor
cmp
sbb
jno
es
aam
push
lret
cmp
dec
and
repnz
arpl
or
pop
iret
mov
xor
lcall
xor
psrlq
mov
jp
cld
mov
dec
and
aam
cmp
jns
xor
inc
push
data16
loopne
xor
xor
pop
xor
dec
jp
sti
or
and
ljmp
cs
sbb
xor
ret
sbb
inc
jg
sbb
cwtl
jge
add
fadds
frstor
int
lock
data16
inc
lahf
out
mov
pop
push
out
sub
orb
cmpsl
enter
mov
jo
je
lcall
push
test
lods
and
notl
in
or
mov
mov
ret
aam
pop
xor
sbb
sub
lock
dec
rorl
and
in
adc
add
push
ficoms
jle
test
lahf
insl
stos
mov
sti
adc
insb
dec
xchg
bound
push
fnstcw
mov
jl
and
sbb
lds
sub
push
jne
and
or
lock
test
adc
fcmovnb
dec
clc
fidivl
push
adc
lret
imul
pop
cmp
push
or
bound
stc
ja
test
mov
mov
xor
insl
arpl
inc
sub
mov
mov
fstl
std
lahf
cmp
sub
outsb
sub
fnstenv
int3
adc
xor
fisttpl
inc
les
sub
xor
sbb
repnz
das
arpl
xor
out
push
jae
adc
in
scas
outsl
aas
mov
inc
jns
sbb
xor
fidivs
cmpsl
mov
movb
xor
pop
jno
fs
xor
repz
fdivl
pop
fwait
jb
mov
sub
cld
aaa
test
test
rclb
xor
cmpl
mov
cwtl
movsb
pop
push
cmp
mov
shl
or
sbb
jp
cmc
lods
xor
pop
xchg
or
test
push
xchg
add
es
movsl
scas
mov
into
mov
sbb
dec
out
loopne
je
test
and
pop
push
wrmsr
dec
sbb
and
daa
jge
jae
and
inc
arpl
push
push
or
fildl
outsl
notl
mov
hlt
aad
push
and
mov
sbb
bound
xor
lods
xchg
jbe
xor
adc
sti
xor
push
jnp
fcoms
movsb
adc
les
je
leave
dec
add
mov
sub
inc
dec
stos
dec
lods
lea
mov
fcomp
sbb
scas
std
and
out
xor
adc
bound
mov
sub
jecxz
jle
shlb
jnp
outsb
xor
bound
inc
in
pop
nop
pop
shlb
mov
insb
cmp
inc
xor
icebp
ja
mov
dec
push
testb
cmp
mov
ja
xor
and
jp
sbbl
xor
or
xchg
push
or
cmp
xchg
ffree
xor
and
inc
jmp
dec
sbb
xor
js
pop
or
jb
repz
lods
xor
mov
test
or
cltd
xor
in
into
ss
xor
adc
cltd
pushl
mov
imul
and
sub
hlt
or
idivl
add
enter
or
je
out
xor
movsl
pop
push
push
inc
lret
jge
adc
xorb
adc
in
and
pop
jne
push
xor
cltd
clc
in
xchg
cli
cwtl
xor
add
lock
repz
cmp
sbb
pusha
pop
dec
shll
rcrb
mov
jnp
dec
inc
jmp
ss
rorb
or
ret
inc
xor
push
insb
into
test
hlt
loope
popa
mov
xchg
dec
nop
orb
pop
mov
test
call
xor
repz
adc
and
push
pop
push
xor
xor
adc
push
fwait
cmc
push
mov
sarl
push
adc
inc
insb
jge
or
fildl
mov
fisubl
je
xchg
pop
xor
outsl
cmp
lods
xor
dec
pop
lods
cmpsb
xor
sub
movsl
or
pop
sahf
cltd
xchg
popa
xor
cmp
es
pusha
hlt
mov
push
in
add
call
jno
mov
adc
push
popf
xor
aas
out
mov
mov
xor
imul
subb
insl
ret
int
xor
mov
xchg
adc
cwtl
addr16
mov
jns
xor
sub
cld
les
xor
pop
xchg
xchg
fistpll
arpl
ret
xor
fidivs
int
xchg
std
shlb
iret
in
and
data16
imul
adc
inc
ljmp
mov
xor
cmp
inc
xor
or
out
pop
ffreep
and
xchg
shrl
aaa
lds
xor
mov
mov
mov
xor
andl
jns
in
jmp
out
adc
mov
leave
aas
sub
xchg
in
push
ret
std
or
and
out
sbb
mov
shrb
adc
mov
mov
aam
ret
ud2
add
insl
sbb
cmp
jmp
out
mov
or
out
xor
addb
mov
inc
inc
data16
adc
xor
in
inc
aam
sbb
fwait
in
pop
push
add
xchg
sti
pop
jge
cld
scas
mov
and
pusha
sbb
push
jno
xor
add
imul
xorl
in
and
jp
sti
test
xchg
rcr
xor
pop
out
mov
adc
gs
xor
mov
sahf
fcompl
xor
or
and
adc
or
dec
in
enter
test
inc
mov
pop
or
xor
ret
fs
add
adc
pop
mov
xchg
test
lods
shll
add
push
and
or
push
pop
xchg
test
std
xor
fsubs
out
pop
arpl
rolb
mov
cld
das
shll
int3
aad
enter
addl
cld
subb
push
imul
mov
js
leave
sbb
mov
scas
pop
iret
outsl
xor
popf
add
jnp
aam
out
and
test
fs
stos
into
and
add
fwait
ds
fcomi
aaa
ss
push
pop
sbb
insl
sahf
xor
cwtl
and
les
stc
arpl
mov
mov
mov
xor
xchg
sbb
test
xor
mov
inc
std
out
into
xor
pop
je
jbe
xor
scas
mov
mov
adc
jmp
popf
daa
es
rcrb
inc
cld
loopne
mov
lahf
loop
ljmp
mov
xor
jle
push
push
out
adc
jae
push
mov
fs
les
shl
mov
fnstcw
or
or
push
xor
out
scas
jne
bound
xor
push
adc
ss
push
aam
add
cmpsb
xor
std
adc
xor
aaa
jo
jae
fmuls
pusha
std
orb
sub
xor
call
bound
pop
ss
xor
mov
mov
xor
xlat
and
adc
push
lret
out
pop
inc
fsubr
xor
mov
rorl
repnz
out
xchg
or
push
cs
mov
inc
out
adc
movsl
in
insl
xchg
shll
jl
sub
xor
sbb
ficoml
and
pop
add
notb
arpl
push
into
push
ljmp
mov
cmp
outsb
in
adc
mov
pop
add
aaa
clc
sti
push
mov
stos
fbstp
por
xorl
lods
call
xor
mov
xchg
xor
cmp
lret
fsubr
faddp
mov
or
push
hlt
insb
loopne
xor
push
mov
mov
leave
subb
fwait
xor
add
lds
aaa
iret
pop
xor
ret
fsubrl
lcall
jne
sysret
int3
adc
pop
mov
mov
je
mov
test
or
jp
mov
outsb
xor
js
das
scas
sti
ds
aam
fstps
fisubs
hlt
mov
enter
pop
shlb
jo
push
inc
sahf
sbb
mov
xor
xor
shlb
mov
stos
sbb
sbb
mov
dec
inc
addr16
cmpsb
add
xor
test
mov
adc
mov
pop
icebp
jl
dec
cmpsl
xor
imul
xor
loope
push
add
sub
into
mov
rcr
push
mov
insl
adc
jnp
jae
sbb
inc
xor
add
das
xor
test
icebp
jle
cltd
jo
inc
sahf
dec
test
rolb
xor
mov
sub
leave
xor
xor
and
into
push
cwtl
sbb
xor
bound
pop
xlat
sub
sub
mov
jbe
xor
repz
push
push
out
or
aas
negl
xor
and
adc
daa
dec
pop
arpl
mov
cld
shll
insb
mov
js
stos
decl
xor
add
out
adc
mov
std
or
xor
dec
inc
cmp
gs
xor
ljmp
xor
xor
sahf
lret
xor
sarl
leave
mov
add
xchg
mov
test
dec
push
cld
adc
into
mov
jl
ss
rcll
fdivp
sti
jp
mov
mov
push
inc
lahf
jno
push
mov
fs
jne
add
lds
lods
fbld
xor
push
xchg
and
test
shl
mov
or
and
push
add
fildl
fwait
mov
xchg
jg
testl
mov
movsl
adc
adc
nop
mov
xor
xorb
sub
repnz
lcall
movsb
xchg
in
jns
cs
test
outsb
adc
mov
xor
xchg
push
mov
les
pushf
lret
jns
fld1
shrl
adc
pop
mov
insl
fstp
mov
pop
cmc
shl
in
push
rclb
mov
jae
xlat
mov
fiadds
mov
xor
jnp
push
out
pop
and
adc
sbb
xor
mov
push
ret
sbb
mov
loope
mull
pop
imul
je
repz
sahf
pop
xor
mov
mov
xor
out
sub
jmp
test
pop
push
scas
xor
bound
sbb
jo
pop
xor
adc
cwtl
xor
loop
enter
xchg
xor
inc
rcrb
fadd
int
clc
push
sub
inc
push
cld
mov
mov
jne
inc
add
or
hlt
test
rcrb
cmp
ficoml
pop
xchg
loope
push
mov
shl
xor
push
js,pn
setns
out
mov
sbb
shrb
inc
in
mov
sbb
jg
or
mov
xor
popf
imul
pop
push
shrd
xor
aam
cmp
add
jmp
cmp
lods
sub
mov
sub
mov
xor
out
mov
add
push
xchg
or
push
test
xchg
inc
je
andl
in
push
xor
int3
stc
pop
mov
sub
push
stos
mov
loope
pop
xor
popa
adc
mov
fwait
incl
sahf
xor
pop
mov
pop
das
cld
aas
mov
adc
xlat
add
in
push
gs
out
call
xchg
sbb
adc
push
or
xor
ljmp
xor
aas
fwait
dec
arpl
cmpsb
es
xchg
shl
xlat
push
jge
mov
mov
pop
fsubp
xor
insl
sbbl
dec
mov
insb
out
or
push
fmull
sarb
xor
jne
xor
sbb
xor
loop
andb
loope
push
mov
rol
xchg
in
push
xor
das
out
xchg
je
in
xor
push
enter
mov
out
std
jg
aaa
out
loope
xor
push
roll
stos
sub
sti
pop
lock
lcall
xor
push
jae
pushf
test
and
jno
aam
insb
push
scas
pop
xor
shll
imul
cmp
ret
push
push
mov
jae
jns
pop
roll
xor
ljmp
hlt
xchg
xor
or
lock
cli
xor
loopne
int3
cmp
scas
xchg
icebp
mov
xchg
xor
push
sbb
push
jo
mov
mov
and
adc
fnstsw
aas
xchg
or
inc
add
push
adc
rcrl
xor
pop
clc
les
sbb
sub
sti
or
mov
shl
rclb
ds
xor
mov
out
push
cwtl
mov
mov
xor
outsl
jmp
dec
movsl
cmc
push
adc
cmpsl
pop
add
je
ss
and
xor
xchg
xor
xor
dec
push
mov
adc
clc
sbb
fiadds
jo
idiv
mov
adc
add
cmp
rclb
inc
sti
fcoml
mov
pop
add
subb
fidivrs
xor
cmp
xor
pop
sub
add
xchg
out
mov
mov
repnz
inc
imul
enter
hlt
cld
sbb
mov
push
sbb
mov
bnd
sbb
test
xchg
out
adc
xor
push
sahf
inc
out
add
fxch
repz
lds
xor
outsl
call
pusha
xor
adcl
xor
rol
pop
xor
pushl
jnp
jle
inc
sub
xor
sub
jno
mov
icebp
xor
cmpsb
int3
mov
sbb
shrl
arpl
pop
jns
loope
in
divb
sub
shll
jl
sti
jns
mov
out
in
add
xor
repnz
sbb
into
add
sahf
sbb
dec
adc
or
mov
push
fs
shr
jge
icebp
xor
adc
push
js
xor
mov
pop
xchg
mov
xor
or
sarb
inc
jo
nop
es
sub
cmp
je
pop
or
int3
or
hlt
mov
cmp
mov
lret
mov
pop
pop
sub
cmc
lret
and
or
mov
push
adc
faddl
pop
ja
mov
push
inc
inc
fisttps
les
push
mov
into
andl
lcall
pop
pop
sbb
push
adc
das
push
aaa
mov
lret
inc
jae
mov
xor
and
sub
xchg
xchg
xchg
mov
xchg
ficompl
xor
aad
mov
out
outsb
push
mov
pop
lret
xlat
xchg
rol
std
xor
inc
repz
xor
cwtl
pop
pop
xchg
pop
divb
xor
mov
pushf
sbb
pop
sub
out
loope
inc
and
imul
adc
and
inc
xor
sub
inc
out
shlb
insl
pop
ja
sub
xor
mov
xor
jo
maskmovq
imull
mov
dec
scas
mov
lret
sub
imul
rcrb
cmc
aam
pop
cmp
notl
arpl
ret
mov
jmp
mov
fwait
nop
das
or
xor
popa
fmull
sbb
lods
jp
cmpsb
jae
adc
jne
pop
mov
cmpsl
ss
fs
ret
push
test
repz
test
xor
stos
lret
lock
ljmp
adc
or
mov
cli
push
je
mov
xor
and
push
xchg
enter
push
cld
test
mov
sti
scas
add
je
dec
fs
jns
mov
xor
push
sub
inc
inc
lods
dec
xor
leave
and
xor
div
mov
push
mov
call
test
sbb
lahf
fldt
xor
int
or
sub
push
jno
adc
xor
pop
ja
push
test
ss
inc
fidivrs
xor
imul
xchg
pop
dec
xor
adc
mov
out
xchg
repz
mov
inc
sub
mov
imul
dec
xor
lock
stos
pop
sahf
clc
inc
push
xor
popa
or
sub
mov
mov
and
lahf
paddb
mov
fcmovnu
cmc
xlat
andl
je
inc
shll
inc
sbb
or
test
jnp
mov
cmp
sub
inc
aad
aam
lret
pop
push
jle
xchg
in
xchg
andl
jbe
incl
pop
out
js
xor
sub
pop
pop
inc
or
ficoms
movsl
mov
stos
push
mov
push
mov
les
xor
mov
xlat
nop
add
icebp
add
mov
mov
loope
repz
outsb
cmpsb
ret
or
xlat
int
sbb
dec
pop
adc
cmp
ss
and
jge
popf
imul
cmp
lret
lea
xlat
or
fsts
xor
or
js
cmpb
iret
in
dec
add
fs
loopne
mov
xor
cmpsl
push
roll
add
mov
orb
and
int
push
xorb
xor
push
popf
or
arpl
add
jl
sbb
into
cwtl
repnz
cs
pop
pusha
notb
xor
out
roll
hlt
dec
and
cmp
in
out
adc
mov
xchg
cs
pushf
push
std
lods
movsl
sub
or
mov
xor
xor
ffreep
insb
out
jnp
and
jne
mov
pop
pop
xor
lret
in
imul
mov
fdiv
popa
insb
divl
xor
pusha
dec
outsl
aas
jp
and
icebp
or
or
sub
xor
repz
xchg
arpl
std
xor
andl
mov
nop
add
inc
les
adc
ss
cltd
arpl
jae
iret
mov
lret
mov
inc
je
mov
and
lods
jmp
adc
jno
dec
sbb
in
es
push
mov
pop
or
loop
sbb
daa
imul
ds
push
stos
test
fsub
sub
sub
scas
jns
outsb
imul
adc
dec
xor
js
xor
inc
das
ret
xlat
imul
out
push
dec
xor
mov
or
inc
fucom
cs
xor
loope
mov
rcrb
mov
sbb
sub
adc
icebp
jbe
pop
xor
jl
lret
std
les
xlat
or
bound
lods
roll
jg
dec
xchg
push
mov
xor
pop
into
or
or
loopne
ret
sbb
lds
dec
out
adc
push
push
push
or
push
in
xor
mov
adc
divb
repz
xchg
rorl
lret
popf
xchg
xor
std
xor
out
sub
push
cli
mov
cmp
add
jl
sahf
mov
js,pt
push
adc
inc
aaa
pop
inc
sbb
mov
xor
fneni(8087
push
jnp
jg
mov
test
jp
xor
or
enter
or
add
push
andl
push
loopne
add
addr16
mov
mov
adc
sub
in
xor
loope
add
movb
jle
xchg
push
mov
xorb
xor
gs
addr16
leave
cli
dec
dec
mov
cmpsb
sub
pop
mov
mov
sbb
jp
push
mov
fdivs
xchg
xchg
mov
xor
mov
lret
jno
cmp
push
xor
mov
cmovb
xchg
lea
inc
iret
jecxz
sti
pop
loope
jbe
push
jp
pop
inc
xchg
out
cld
shl
pop
aam
js
xor
mov
xor
sahf
test
repz
stc
sbb
xor
xor
cltd
fldcw
xor
cmpsl
call
jae
xchg
iret
mov
mov
insl
aam
fnstenv
daa
pushf
cmp
jmp
filds
int
dec
icebp
xor
lods
pop
sub
lret
les
sbb
pusha
jecxz
or
push
adcl
mov
scas
in
cwtl
pop
rep
sub
gs
xor
mov
shll
adc
mov
out
add
pop
lahf
cli
xor
cwtl
mov
rdpmc
imul
out
movsb
sbb
mov
sti
xor
xor
jmp
repz
pop
pushf
xor
adc
mov
repnz
jge
add
mov
fstl
lods
sarb
xor
subl
out
and
cmpb
lret
push
jle
mov
push
cwtl
mov
andl
xor
nop
or
cmpb
mov
jns
dec
enter
dec
sbb
sbbl
mov
adc
mov
jbe
lret
call
aas
mov
cmp
pushf
adcb
adc
scas
mov
pop
andb
addr16
aam
pop
leave
lret
xor
cli
loopne
adc
call
jnp
push
xor
scas
test
mov
popf
adc
dec
cmp
fstpl
dec
pusha
xor
inc
nop
cli
mov
outsl
ljmp
xchg
xchg
lods
and
arpl
addr16
jno
push
clc
call
xor
sbb
outsl
pop
sbb
in
inc
xchg
addl
rcrb
xor
sub
push
rclb
divb
or
cmp
sub
add
inc
adc
push
and
sbb
cld
mov
or
xchg
pop
dec
or
js
mov
jmp
cmp
cmp
push
sub
add
sub
loop
divb
xor
mov
fld
mov
test
inc
mov
adc
dec
jae
xor
inc
xor
fcoms
or
cs
pop
jns
cmp
xor
mov
add
mov
pushf
jns
enter
and
xchg
mov
pop
std
cmp
xor
adc
fcomp
shl
das
xor
sub
or
icebp
loope
lock
xor
mov
imul
pop
xor
push
les
std
xlat
xor
jle
lcall
fistl
jns
adc
sbb
or
repz
adc
inc
push
or
ret
xor
lods
test
les
out
pushf
sti
mov
mov
dec
mov
insl
xchg
in
xchg
shrb
jb
sbb
rorl
xor
cmpsb
cltd
mov
mov
jns
or
adc
jge
xor
jle
inc
mov
aam
xor
add
push
call
jmp
pop
ficoml
in
lea
in
xchg
xchg
aad
xchg
jg
cmpsl
push
in
ds
sbb
add
out
add
sbb
movb
push
push
js
xchg
hlt
hlt
adc
pop
push
and
xor
vandps
mov
jp
mov
or
fsub
loope
xchg
pop
xor
dec
dec
add
andl
dec
cltd
mov
scas
pop
loop
xor
mov
jae
dec
aas
sub
ret
lock
in
or
cwtl
data16
loope
shll
sub
push
les
imulb
xor
das
sbbl
inc
mov
lret
stos
mov
cmp
pop
fstl
repnz
mov
iret
inc
jecxz
rcrb
shl
xorl
mov
xchg
xor
mov
lea
rorb
cli
sbb
dec
rorl
xor
jnp
scas
jo
xor
movsb
xor
cmpsb
or
ficompl
cmp
cmp
int3
pop
xchg
pusha
fldcw
or
xchg
adc
xor
iret
mov
jne
cmc
hlt
inc
ror
sbb
and
cmp
dec
mov
aad
aad
xchg
cmpsl
out
or
sbb
testl
out
push
ds
pop
fistpll
or
testl
lea
les
fsubrs
cmc
or
ljmp
sub
icebp
push
stos
dec
inc
xchg
push
mov
lcall
fidivs
xor
lods
mov
pop
push
sbb
and
into
xor
pop
test
popf
push
mov
xchg
or
xor
jl
lret
cmpsl
js
sub
fwait
sbb
jb
dec
ljmp
pop
and
cld
or
xor
cmp
pop
push
adc
aas
je
int3
xor
mov
jae
js
iret
mov
cli
ret
mov
mov
mov
ss
xor
xor
pop
xchg
add
dec
jl
dec
mov
or
and
mov
xchg
add
inc
and
mov
loope
rol
xchg
pop
outsb
mov
je
and
imul
loop
rorb
js
addr16
mov
or
daa
pop
insb
cmp
fidivs
dec
mov
mov
fadd
lret
gs
lea
push
xor
jb
xchg
pushf
test
xor
insb
cwtl
ret
rcll
lahf
gs
adc
sbb
xchg
je
add
mov
insl
jecxz
xor
mov
sub
ljmp
icebp
mov
fadds
cmc
inc
divl
push
loop
addr16
pop
jl
or
in
cmp
in
imul
or
push
or
pop
xor
filds
clc
in
xor
xlat
pop
pop
sbb
xor
pop
out
es
outsb
mov
push
mov
adc
adc
jns
xor
subl
jecxz
mov
mov
ja
in
leave
dec
movsl
adc
xchg
cli
js
adc
insb
imul
pusha
test
imul
mov
in
add
aad
gs
xchg
lds
dec
mov
sar
cmp
adcb
adc
adc
out
divl
push
test
adc
cld
lret
and
imul
pusha
fisubrs
xor
cmp
hlt
jg
push
pop
pop
fdivp
bound
push
add
jp
mov
adc
mov
sti
dec
inc
hlt
ret
rorb
push
xchg
dec
lods
ficoml
push
xor
sbb
xchg
cmp
test
inc
out
stc
out
mov
xchg
insb
stos
pop
sub
mov
cmp
mov
jg
xchg
dec
add
test
xor
fiadds
mov
hlt
cld
outsl
xchg
xor
push
rcll
ss
cmp
shr
cmpsl
icebp
mov
mov
and
cmp
xor
shlb
ficoms
out
adc
pop
dec
push
mov
call
daa
xor
ss
addr16
jno
jb
aas
cmp
push
subb
std
mov
mov
mov
mov
dec
stc
andl
jge
in
lret
xchg
sahf
fs
or
mov
xor
mov
in
imulb
jnp
orl
xchg
mov
pop
adc
fldt
xor
sbb
out
cmp
insb
repnz
xlat
mov
jne
data16
push
out
shll
or
lret
sarb
xor
les
cmc
xor
outsl
jp
dec
imul
fidivs
push
insl
cmpsb
imul
repnz
test
arpl
xor
jmp
jne
in
add
mov
pop
and
dec
popa
je
sub
movsl
push
es
mov
mov
jecxz
push
aaa
sbb
scas
stos
je
shll
push
pop
mulb
dec
cmp
pop
mov
xor
jnp
jae
stc
jmp
mov
cmp
int
int
jb
add
xor
mov
into
mov
fcomps
inc
dec
insl
les
ja
mov
jg
pop
adc
lods
mov
rdpmc
xchg
cmp
sahf
lcall
ljmp
pop
stos
sub
mov
fidivrs
scas
rcrb
jbe
sbb
cmp
mov
mov
xor
popf
add
imulb
inc
adc
fmul
cli
out
push
dec
push
mov
xor
cs
mov
xor
scas
sbb
mov
xor
jbe
pusha
mov
jle
xor
jo
xchg
mov
ss
add
or
test
xorl
cmp
cld
cmp
cmp
or
adc
xor
sarl
add
xor
mov
dec
scas
jl
mov
xor
xchg
adc
lahf
add
pop
xor
push
adc
aas
push
jp
xor
jl
outsb
mov
push
xchg
mov
push
mov
sub
push
fstl
je
sub
and
xor
xchg
rcl
rorl
xor
mov
cmp
cmp
sar
adc
add
inc
push
pop
call
push
int
loop
jb
mov
out
adc
pop
sarl
jmp
sub
fwait
imul
jge
push
xor
adc
movsl
sbb
cmp
jecxz
or
addb
ljmp
idivb
sub
or
aas
xor
cmp
loope
lock
js
pop
mov
dec
xor
rclb
or
jne
lahf
xor
dec
cmp
push
inc
ret
mov
pop
adc
popa
negb
mov
std
push
cwtl
fs
sbb
cmpsl
mov
cmp
push
test
leave
dec
mov
lods
fistpll
fs
testl
pavgw
mov
sub
sarb
loope
pop
fiadds
stos
xor
cmp
adc
inc
jns
pushf
rorb
cld
xor
std
subb
enter
int
pop
jp
loopne
sbb
lahf
and
sbb
mov
arpl
lds
scas
out
mov
insb
loop
inc
in
fistpl
into
add
mov
push
push
jnp
call
mov
mov
jcxz
sub
icebp
cld
cltd
repz
aam
enter
sub
ret
test
daa
mov
mov
jecxz
iret
xor
aaa
int3
test
andl
shl
push
jno
mov
xor
pop
pop
testl
sub
and
xor
dec
in
cmp
jmp
sbbl
stos
dec
or
lds
call
jne
or
cwtl
push
xorb
and
jp
loop
xor
bound
aad
mov
and
adc
sbb
adc
push
sub
push
and
divb
xor
int
dec
push
cltd
sbb
xor
xor
mov
lea
mov
push
mov
mov
xor
testb
xchg
xor
into
sbb
sbb
imul
mov
pop
xor
jb
enter
shlb
jl
divl
gs
xlat
dec
testb
jne
hlt
sbb
leave
mov
push
fisttps
je
roll
fldl
push
fcomi
shlb
adc
add
movsl
pop
les
mov
inc
test
jmp
imul
mov
push
xor
and
divl
xlat
leave
jne
adc
push
jmp
or
push
movsl
cmp
mov
enter
dec
add
cmp
add
push
icebp
adc
xor
inc
lret
cld
int
pop
call
cs
shr
mov
roll
and
scas
rep
lock
pop
lret
cmp
mov
fcoms
dec
sahf
xor
mov
xor
je
xorl
jb
mov
jl
or
sbb
in
mov
push
xor
nop
dec
xchg
insl
mov
sbb
into
pushf
push
loope
push
aaa
adc
xor
and
dec
mull
stos
inc
mov
cmp
push
jp
shll
ss
mov
bound
aam
negl
fsubr
dec
orb
hlt
cmp
movsl
out
jb
xchg
rolb
addl
mov
pop
adc
pop
je
push
xor
dec
adc
das
lds
xchg
mov
sbb
jo
pushf
adc
inc
adc
jae
dec
cmpsb
adc
shlb
fidivrl
jecxz
out
xchg
xchg
push
and
sbb
scas
mov
mov
dec
ror
divb
fs
xor
push
dec
and
jb
sti
hlt
mov
pop
cld
xor
sbb
insb
lcall
dec
sbb
xchg
jecxz
dec
inc
mov
lahf
inc
cli
jp
fldenv
sub
xor
daa
sub
mov
hlt
mov
pop
xor
loop
push
imul
cmpsl
andb
xor
pusha
jae
adc
inc
add
int
push
xchg
into
xor
xor
out
mov
xor
pop
insl
adc
and
or
enter
and
jge
push
dec
icebp
pop
or
rcl
xchg
push
ss
popf
xchg
push
int3
lahf
js
cmp
mov
lea
neg
xchg
xor
data16
adc
sbb
xor
fucomi
and
test
and
add
mov
loopne
xor
or
arpl
xchg
mov
jae
and
push
addr16
cmp
rclb
jb
lds
dec
push
xchg
outsb
in
cmp
mov
jnp
ljmp
or
mov
popa
in
jo
pop
push
adc
mov
out
lcall
push
popa
xchg
ljmp
push
cmp
xchg
ficoms
lock
xor
sub
sub
xlat
mov
mov
les
sahf
inc
jge
add
sbb
xor
inc
mov
xchg
jno
ja
mov
sub
xlat
push
jb
loope
mov
hlt
inc
xor
xor
in
sbbb
and
xor
xchg
push
in
pop
xchg
es
jb
cld
aas
lret
push
pop
sub
mov
loop
mov
fimuls
cli
fisubl
insl
xorl
test
jo
in
mov
cmp
ret
mov
xor
jmp
mov
pushf
pushl
dec
mov
ret
pop
or
lret
xchg
inc
jge
cli
xor
push
jmp
fmull
xor
loopne
incl
inc
shll
mov
sahf
sbb
pop
dec
xchg
in
dec
lea
imul
pop
out
dec
cmpsb
xchg
scas
sbb
jns
mov
xchg
xlat
mov
in
mov
and
xorb
daa
outsb
enter
xor
xor
and
std
xchg
movsb
je
mov
sarb
mov
lods
loop
cmp
xchg
cmc
pop
ret
hlt
mov
jge
stos
mov
sub
inc
push
pop
xor
and
mov
xor
cmp
lods
xor
cmp
test
nop
out
xor
outsl
push
xor
in
jae
pop
lret
sub
sub
je
xor
out
pop
or
mov
pop
aam
inc
add
adc
insl
es
xor
popa
sub
pushf
cmp
adc
outsb
inc
sbb
jne
in
aaa
xor
shlb
rorl
xor
iret
inc
divb
fcoml
push
stc
push
xor
fistl
xor
dec
fisttpll
pop
add
inc
xor
sbb
outsb
xor
add
pop
es
inc
sub
adc
add
cmpsl
fiadds
rcrl
js
je
and
cmp
test
adc
scas
movsb
pusha
cld
repnz
scas
shll
push
cmp
mov
pop
das
jne
jecxz
in
dec
inc
jle
adc
inc
sub
je
xor
cltd
dec
scas
adc
sbb
xor
mov
add
jno
inc
xor
mov
adc
xor
push
xchg
popf
xor
sbb
add
inc
fmulp
lock
stos
lods
mov
lret
mov
xor
and
jbe
nop
xor
aam
or
mov
mov
in
stc
lods
mov
cmp
cmp
lea
cmpsb
clc
mov
jp
test
jge
xchg
sbb
adc
sub
adc
mov
rcr
and
outsl
sbb
insl
mov
pop
pop
mov
lahf
push
xorl
hlt
mov
jnp
cmpsb
push
cwtl
test
fisubrl
xor
fisubs
push
xchg
mov
cli
fstpt
and
xor
es
push
ja
ss
stc
push
imul
fmuls
mov
jecxz
movsb
sbb
lds
adc
arpl
or
inc
test
jecxz
das
shll
aas
xor
call
dec
je
jmp
xchg
mov
out
push
pop
or
adc
sbb
push
jle
add
xchg
cltd
pop
mov
mov
test
mov
sbb
pop
or
sti
mov
adc
icebp
hlt
pop
cmpsl
stos
xor
xor
lods
xchg
pshufw
stc
and
push
test
xor
es
aaa
pop
icebp
fcoms
fs
scas
jge
cmc
and
add
xor
inc
mov
ret
fs
jne
rolb
sub
cmc
test
lods
les
and
and
scas
cmp
adc
xchg
addr16
popa
lea
fidivl
divb
gs
pusha
cwtl
lret
and
ja
clc
orb
or
cmc
cld
arpl
pop
fcoml
aam
jl
mov
cmp
pop
jg
cmp
mov
mov
adc
push
push
mov
mov
or
jecxz
je
jg
xor
or
pusha
in
mov
data16
fsubl
and
lock
adc
cmpsb
movl
xchg
hlt
fistps
mov
sti
xor
lods
lods
out
scas
movsb
mov
pop
stos
arpl
mov
adc
cmp
or
add
mov
shlb
pop
aam
sbbb
aaa
in
mov
cltd
push
xor
out
out
fcoms
movsb
xor
push
lods
orl
cmpsb
inc
and
mov
mov
daa
cwtl
in
xorl
jb
adc
jmp
mov
xor
cmp
in
rorb
movb
aam
adc
adc
divl
andps
xchg
xor
push
jo
add
push
xor
mov
dec
cltd
xor
xor
inc
testl
jg
out
mov
mov
mov
xor
pop
dec
fwait
shrb
or
adc
and
rcll
addr16
xor
pop
mov
push
mov
mov
out
fisttpl
push
inc
pop
pop
xchg
lods
inc
sbb
mov
push
xlat
mov
xor
mov
push
pop
xor
mov
imul
sbb
jnp
stos
je
mov
addr16
les
push
push
jbe
mov
es
sbb
xor
ret
scas
ret
pushf
xchg
cmc
dec
into
jne
xor
in
sub
and
xor
push
push
fldl
icebp
ja
pop
mov
jno
movsb
xlat
xor
test
inc
pop
pop
xchg
insb
mov
jmp
lods
das
push
sub
repnz
rclb
push
mov
fadd
pop
cmp
out
imul
xor
sbb
popf
lcall
xchg
pushf
push
pop
xor
cmc
mov
mov
test
je
mov
mov
jp
pop
pop
dec
in
imul
mov
pop
int
loope
jle
mov
inc
pop
sahf
pop
sti
xor
outsb
data16
cs
les
adc
xchg
clc
stos
dec
out
xlat
mov
xchg
jbe
mov
cmp
dec
pop
xor
mov
sub
lcall
mov
pop
xor
fabs
fldl
lcall
sub
pushf
nop
push
mov
rcrb
test
and
add
in
push
mov
or
xor
inc
mov
aas
shl
stos
jle
push
xor
adc
sti
stc
mov
push
mov
inc
inc
cmp
xor
lods
add
andb
push
pop
push
sarb
xchg
fldenv
push
jl
fs
je
mov
push
cmp
test
add
dec
jmp
in
mov
add
push
icebp
xor
int
les
leave
push
dec
adc
cmp
push
sub
inc
insl
mov
pop
ret
ljmp
stos
xor
and
cli
push
cltd
xor
mov
add
mov
or
inc
dec
stc
adc
lahf
outsb
mov
xchg
jae
xor
xor
jle
xor
out
cli
jl
stos
lcall
mov
fdivs
mov
push
repz
xor
cmp
out
mov
cmp
jns
xor
ljmp
notb
cs
gs
cmp
add
dec
xor
repz
push
movsl
and
jnp
pop
or
xor
jns
pushf
mov
imul
xchg
xor
push
out
and
es
lods
mov
mov
out
cltd
data16
xchg
cmp
icebp
outsl
hlt
in
shll
jnp
xor
lea
cmp
ret
mov
out
out
or
cld
mov
and
xor
adc
test
push
sti
adc
mov
sbb
sbb
in
push
call
mov
mov
and
cmc
add
xor
std
dec
mov
pop
push
imull
mov
popf
sub
ds
mov
sub
jge
mov
jne
sbb
mov
cltd
lods
into
loopne
dec
sarb
xchg
sub
xor
add
rcrl
push
xor
aas
lret
mov
jle
sti
adc
mov
cmp
sub
jb
xor
xor
mov
push
shl
mov
mov
pop
xchg
xor
mov
xchg
add
imul
lea
push
dec
pop
and
cmpsb
xor
jg
stos
out
cwtl
mov
xor
mov
aam
xor
stos
and
adc
std
xor
xor
gs
into
pop
xor
xchg
jbe
jb
push
icebp
xor
push
cs
das
lds
push
loop
sbb
mov
dec
fs
lret
or
jne
add
xor
fiadds
mov
jb
mov
movsl
cmc
xor
mov
pop
and
adc
mov
jp
push
dec
cltd
imul
sub
clc
lods
pop
fcoms
inc
sbb
sub
fs
mov
test
xor
pop
shlb
xor
into
dec
mov
adc
pushf
and
sbb
adc
arpl
in
pop
cmpl
or
fwait
xor
sbb
pushf
out
xor
xor
xchg
xor
ret
hlt
rcrb
dec
dec
xchg
and
je
data16
clc
int3
cmp
mov
dec
cwtl
mov
roll
xor
ds
mov
jl
or
out
adc
pop
fwait
cmc
xchg
push
popa
cmp
xor
inc
icebp
mov
xorb
dec
xor
add
inc
xorl
xor
sbb
sbb
mov
add
dec
jb
xor
call
cwtl
dec
mov
xor
gs
push
outsb
dec
shlb
loop
data16
cmc
pop
push
add
xor
pop
adc
test
or
sahf
mov
dec
xchg
mov
inc
pop
xor
out
push
cmp
popa
int3
push
inc
mov
lcall
adc
mov
scas
xchg
add
sti
xchg
jo
repz
stc
push
pop
pop
sbb
mov
jns
dec
cmp
ljmp
cmc
lahf
push
xor
lcall
xor
jl
jo
movsb
cmp
mov
or
xor
sbb
shll
pop
xchg
mov
insl
pop
mov
pop
sub
xor
or
push
jns
dec
stos
xchg
jl
xor
orl
inc
mov
insb
jae
jle
xor
push
xlat
cmp
arpl
jmp
xchg
ret
div
jmp
adc
xor
mov
es
pop
scas
push
subl
mov
ret
mov
jb
pop
repz
rolb
xor
out
popa
sbb
add
ss
adc
jb
daa
stos
xchg
adc
out
jne
push
pushf
ljmp
nop
repnz
xor
movsl
fdivr
xchg
dec
insl
ret
sarb
cmp
cmpsb
scas
xor
aam
mov
adc
flds
mov
sbb
xor
push
pusha
sti
out
and
push
xchg
cli
popa
test
xor
inc
mov
popf
ja
rol
dec
push
addb
dec
jno
hlt
mov
xor
push
xor
or
shlb
push
lcall
in
mov
or
stos
fistl
divb
pop
loop
mov
shl
mov
inc
or
fldcw
xor
pop
push
jl
xor
in
and
xor
mov
pushl
out
add
adc
push
fstpl
hlt
scas
mov
mov
lock
mov
mov
jb
dec
mov
repnz
xor
hlt
insb
lock
jo
je
add
push
loopne
stos
insb
aas
or
imul
enter
adc
xchg
push
mov
dec
pmuludq
push
xlat
lahf
mov
mov
lea
mulb
xchg
cmpsl
in
and
mov
xor
je
add
inc
xor
xor
mov
jb
push
aad
lea
inc
lret
jge
xchg
xor
cmp
mov
push
sbb
gs
addr16
mov
jl
fmull
push
push
adc
jge
xor
cmp
pop
call
xchg
xor
adc
lods
shll
pusha
xor
ds
es
and
lret
mov
mov
xor
insl
jb
lea
jmp
pop
inc
sub
xor
insb
inc
pop
mov
adc
lret
inc
aam
pop
jecxz
sub
aam
fs
xor
mov
and
xor
add
jb
add
xor
xlat
insl
popf
pop
push
int3
xor
in
mov
lahf
or
inc
fldenv
xchg
jne
scas
inc
shll
sti
lcall
aam
fs
hlt
mov
sbb
in
inc
test
mov
dec
pop
push
xor
clc
lock
xchg
js
testb
xor
std
addb
test
inc
and
cwtl
xor
pop
pop
scas
cmp
lea
ret
jne
outsl
mov
cmpsl
addr16
pop
push
cwtl
fcmovbe
fs
push
sub
add
xor
fwait
jp
int
adc
fmull
in
push
adc
xchg
jno
pop
dec
sub
sub
cmp
adc
add
sahf
inc
xor
and
in
dec
in
xor
insb
push
and
dec
shlb
sti
xor
jge
sbb
sub
call
in
cmc
lea
pop
cs
sub
sbb
xchg
roll
nop
jp
xor
or
dec
inc
ja
sarl
bound
pop
dec
dec
push
add
les
inc
movsl
xor
cmp
jb
js
mov
xor
stc
jg
std
xorb
test
pop
xor
out
cmp
xor
cmp
or
inc
mov
sbb
lds
pop
jns
dec
xchg
or
jb
shll
push
popa
lods
stos
jne
movsl
inc
xor
push
xchg
hlt
cmpsb
dec
loope
mov
sbb
and
cld
push
mov
fdiv
jmp
adc
dec
or
cmpsl
in
stc
jl
mov
xor
arpl
push
mov
ljmp
xor
gs
cmp
mov
bsf
leave
jp
jge
sahf
xor
icebp
pop
add
enter
ljmp
xor
mov
pop
jne
mov
mov
sub
cmp
popa
cli
mov
sbb
cmpsb
outsl
xor
cmp
xchg
imul
cmp
xor
mov
mov
sbb
dec
or
ja
lahf
aas
mov
mov
sbb
push
cmp
dec
xor
mov
out
xor
daa
sbb
sbb
mov
or
jl
xor
lret
xor
pop
lock
add
pop
dec
and
jnp
test
jecxz
into
neg
mov
arpl
mov
xchg
scas
stos
aam
in
inc
xor
aam
mov
je
iret
push
out
syscall
clc
dec
out
cwtl
int
std
xchg
xor
and
mov
push
cld
adc
outsb
data16
in
es
jae
add
dec
dec
fimuls
cmp
into
in
lock
push
iret
mov
mov
xor
jns
faddl
xor
fidivrs
repnz
xor
out
sub
adc
clc
fisttpl
xor
xchg
icebp
sub
mov
xor
movsl
add
repnz
loope
xor
mov
daa
pop
scas
lcall
lret
fbstp
cltd
inc
sbb
aas
fidivl
cmp
leave
and
mov
xor
lods
mov
cmp
repnz
out
xchg
add
xor
mov
sahf
mov
leave
and
mov
xor
mov
push
mov
pusha
push
jne
xor
adc
xchg
dec
mov
jl
inc
faddl
xor
cmpsb
test
pop
mov
fcomi
clc
lcall
out
adc
lret
test
xor
push
xor
test
in
aas
sub
mov
jns
xchg
xor
shrb
xor
pop
outsl
fldt
mov
les
adc
jno
dec
xor
dec
ror
adcl
sub
push
stos
adc
lods
int3
mov
dec
xor
leave
cmp
enter
and
movsb
fsubrs
mov
lret
mov
mov
xor
testl
js
scas
xor
sbb
jno
mov
lock
adc
ja
sbb
push
push
repz
aad
movsb
jle
xchg
negb
adc
mov
stos
ds
fcmove
xor
std
jne
pop
push
pop
sub
popa
adc
out
add
jne,pt
inc
xor
mov
in
pop
jl
ljmp
sbb
mov
and
test
scas
out
pop
inc
xor
and
mov
xor
cs
loopne
xor
das
mov
imul
insl
int3
cmpsl
mov
xor
out
fs
add
outsl
inc
arpl
loop
out
jl
mov
bound
cltd
adc
rorl
fcom
movsb
push
lds
loopne
push
rcr
lods
mov
pop
and
scas
lds
cmp
loopne
ja
inc
jne
xor
mov
or
in
es
ss
xor
stc
cmpsb
andb
xor
mov
adc
mov
dec
idivb
lahf
xor
imull
cld
mov
push
adc
push
push
jns
je
inc
pop
cli
xor
jg,pt
lock
mov
jae
add
push
xor
push
pop
inc
cs
jne
sbb
lret
mov
add
xor
pop
scas
xchg
xor
xor
in
mov
cmp
popa
pop
push
mov
push
div
xor
and
lahf
iret
xor
fdivs
xor
cmp
dec
ja
add
push
lea
cwtl
dec
cltd
orb
xor
sub
push
jb
movsl
xor
sbb
stos
mov
push
adc
add
xor
icebp
cmpl
jnp
pop
addr16
xchg
sti
je
xor
movsl
das
xor
pusha
dec
sbb
mov
ljmp
xor
jno,pn
fbld
mov
bound
xchg
mov
jb
lock
aad
and
xchg
adc
aam
imul
mov
lret
inc
and
xchg
test
out
sbb
sahf
mov
push
inc
cwtl
jecxz
scas
leave
lock
push
cmc
rcrl
push
add
int3
push
mov
pushf
xor
gs
test
lret
xor
fbld
ljmp
push
inc
cmp
hlt
loope
popf
inc
stos
xor
icebp
xchg
pusha
sbb
inc
aaa
inc
mov
iret
push
sbb
and
jl
xor
shl
and
xor
loop
mov
lds
push
mov
mov
or
in
je
xor
in
push
sub
in
jb
cs
xor
dec
std
add
xor
ret
mov
xor
add
movb
xorb
mov
xchg
xchg
sbb
cmpsl
adc
jo
cmp
fstpl
pusha
rclb
push
nop
cmpsb
shlb
icebp
imul
in
popf
enter
xor
mov
pop
inc
out
xor
loope
or
add
movsb
test
aas
daa
xor
inc
enter
jnp
and
pushf
fcmovnu
mov
push
test
pushf
cmc
sub
xor
insl
jno
or
mov
lds
out
aas
or
loop
xlat
xchg
xor
rol
pop
repnz
vmovshdup
mov
loope
cmpb
xchg
jo
popa
push
jecxz
dec
xor
and
mov
mulb
test
sub
dec
mov
pop
mov
mov
xor
add
dec
call
mov
movsb
mov
in
mov
mov
repz
mov
out
xor
ss
pop
add
bnd
push
cmp
lret
movsb
mov
adc
test
in
jno
push
rorb
adc
jo
in
sub
adc
pop
adc
mov
std
or
mov
adcb
mov
jge
je
push
in
xor
outsb
lahf
fsubs
loope
push
test
mov
sti
mov
adc
lock
xchg
xchg
or
push
pop
and
xor
mov
je
add
add
xor
mov
fadds
popl
mov
pop
push
jecxz
and
cld
cmpsb
aam
lea
inc
jge
or
adc
push
gs
lea
jge
dec
cli
or
xor
mov
jo
jne
mov
pop
test
cmc
xor
dec
in
lret
lret
es
inc
rclb
or
lods
cmp
xor
mov
adc
int
int3
inc
pop
xor
out
sahf
pop
push
das
dec
xor
xor
xchg
lea
mov
xor
fiadds
xor
sbb
sarb
sub
loopne
add
iret
clc
xor
sbb
or
mov
adc
adcl
lret
testb
jns
ja
sbb
hlt
fldenv
in
adc
xor
in
push
imul
push
xor
push
rcrb
mov
jecxz
push
incb
dec
insl
inc
cmc
subb
adc
out
sbb
xchg
adc
cmp
out
sbb
xor
push
push
js
aas
cmp
mov
call
or
inc
pop
sar
sbb
mov
ja
ss
xor
loopne,pn
pop
jne
sub
or
push
loope
jns
rcr
cmp
xchg
les
lret
push
sahf
dec
mov
test
xchg
rol
xor
cmpsb
loope
aaa
lcall
mov
inc
mov
insl
inc
xor
das
scas
nop
sbb
out
xor
daa
jg
pop
adc
mov
inc
mov
mov
adc
push
jb
jns
dec
jp
adc
stos
test
insb
scas
jmp
pusha
sti
shll
adc
xor
in
test
push
push
mov
aam
and
cmp
mov
jg
jp
int
std
ljmp
je
loope
mov
xor
mov
push
mov
dec
lret
out
mov
pop
mov
in
scas
adc
jbe
dec
arpl
cld
xor
cmp
or
into
ror
adc
out
push
movsb
mov
inc
insl
ss
xor
lods
mov
aam
cmp
stc
mov
inc
repz
jno
test
dec
mov
les
adc
aad
cmp
dec
add
scas
out
sbb
shlb
cmp
or
mov
pop
hlt
mov
lret
xor
mov
pop
xor
cld
imul
adc
adc
setl
shlb
in
sbb
cmp
jne
lods
adc
fwait
and
in
sahf
jbe
xor
xchg
jp
mov
xor
pushf
adc
and
std
mov
lret
or
xor
call
xor
movsb
pop
mul
in
push
and
jl
out
cmp
rcrb
and
add
mov
iret
inc
mov
xor
es
rorl
xor
xchg
inc
inc
lods
mov
clc
mov
jbe
sub
pop
lods
xor
jle
jge
daa
fs
xor
test
ficoml
adc
popf
dec
das
push
sahf
push
or
pop
clc
je
pop
fists
adc
pop
sbb
adc
orb
shl
and
xchg
in
xor
rolb
out
je
mov
fcomip
inc
cltd
test
xor
test
fwait
pushfw
pop
xor
cmp
bound
stos
jle
mov
aas
fidivs
push
test
stos
xor
shll
ja
jmp
loope
out
mov
xchg
mov
adc
jbe
adc
add
xor
pushf
push
cmc
inc
adc
mov
adc
ret
xor
mov
mov
xor
stos
call
cld
lods
or
sub
js
leave
sub
xor
xchg
mov
and
cmpsl
dec
mov
dec
xor
and
and
pop
push
ljmp
pop
call
dec
push
cs
sbb
cmpsl
xor
xorl
cmp
test
dec
cwtl
xor
int
imul
jmp
fisubrs
and
lret
aad
xor
into
lcall
rcr
sbb
xchg
ss
push
sahf
fbstp
xor
test
repnz
in
mov
orl
push
xor
sbb
cmp
mov
xor
or
sub
xlat
popf
push
icebp
push
inc
hlt
xor
aam
stc
dec
in
cmp
sbb
mov
sub
inc
adc
loopne
xor
cmpsl
dec
out
pushl
cmp
das
xchg
sbb
jge
fdivr
je
push
or
jmp
mov
outsl
xor
xor
sbb
adc
das
xlat
std
out
jns
test
inc
out
pop
sahf
je
addr16
testb
scas
xchg
add
inc
fcompl
jg
je
push
bound
jae
sub
and
dec
fisubs
dec
aaa
jp
ret
sbb
mov
xor
xchg
inc
ret
fistps
ja
mov
leave
stc
pop
xor
dec
adc
mov
jo
mov
xor
lods
int3
imul
out
inc
mov
ss
in
add
cmc
lods
mov
mov
pop
mov
mov
mov
and
dec
xchg
add
xchg
xor
cmpsb
and
or
cmp
icebp
test
cmp
xor
mov
mov
pop
lods
testb
or
test
popf
rcll
xor
ret
xchg
out
push
add
push
cltd
ljmp
sub
mov
ja
js
cmp
sbb
fadd
insl
jae
cwtl
sub
inc
fldcw
push
bound
xor
test
inc
sbb
and
test
xor
loopne
fildl
sti
xchg
mov
sbb
xor
pop
int3
or
fcoml
in
xor
fisttps
inc
aad
xor
loop
sbb
mov
xor
ds
add
mov
xchg
roll
cmpsl
push
pop
inc
mov
mov
jle
lret
or
xchg
lds
popa
xor
mov
repz
aas
add
mov
ret
lret
or
mov
das
in
filds
xor
not
mov
xor
pop
in
push
xchg
hlt
push
outsl
xor
ret
mov
stos
mov
xchg
nop
adc
insl
scas
int3
hlt
pop
repnz
xor
jg
or
movsl
adc
adc
inc
xlat
orb
sbb
cmp
xor
test
mov
inc
xchg
and
mov
into
sub
push
shlb
cld
xlat
mov
cmp
push
or
xchg
call
dec
xor
notb
sbb
sbb
push
lahf
test
cmp
push
rcll
daa
jecxz
out
movsb
insb
cltd
andb
in
sti
cmpsb
xor
jge
aad
pop
sub
adc
pusha
arpl
pop
stos
xor
jp
lahf
add
fdivl
aad
call
in
or
push
dec
push
ret
lret
out
or
cmp
xor
ror
inc
inc
jmp
and
cmpb
xor
cmp
pop
xor
or
and
or
xor
push
popf
cmp
cmp
mov
add
xchg
pop
adc
add
push
data16
je
sbb
sbb
clc
sub
enter
jl
decl
in
add
test
pop
mov
jg
fsubrp
imul
das
int
aam
test
pop
xchg
dec
xor
stos
dec
scas
mov
xor
sti
pop
or
mov
adc
xchg
push
addb
into
loopne
mov
fwait
adc
insb
in
lahf
popf
xorb
outsb
cmc
mov
movsb
mov
in
xor
jbe
fldcw
loope
popa
push
jne
mov
jl
sahf
pop
inc
sbb
addr16
lods
cmpsb
hlt
ftst
in
adc
aam
mov
icebp
lahf
xor
movsb
add
add
xchg
dec
cmpl
call
xor
or
ffreep
mov
adc
das
sbbb
push
dec
cmpsb
rcrl
popf
enter
xlat
mov
push
xor
outsb
dec
idivl
xor
sub
shrb
jge
xor
loop
cmp
mov
mov
test
addl
pop
and
or
jne
xor
jae
loopne
movb
mov
gs
dec
mov
ja
adc
out
fidivrl
pop
or
call
xchg
pop
mov
dec
pop
inc
jge
std
xor
jnp
and
imul
out
add
out
and
xchg
dec
fiaddl
xor
push
mov
dec
cmp
lods
out
clc
in
add
enter
pop
inc
pop
es
mov
rcr
jle
sbb
or
add
xor
pop
dec
fwait
arpl
or
push
inc
push
icebp
pop
xor
lret
outsb
mov
lods
addr16
rolb
mov
xor
inc
cmc
movsb
lret
ds
sub
out
lock
xor
mov
xchg
cs
jg
xor
mov
popa
xor
push
fs
jnp
imul
out
sbb
adc
jmp
or
fs
movsb
cmc
sub
push
filds
xor
mov
pop
xorl
jle
cmp
ss
in
mov
xchg
lea
int3
arpl
inc
sahf
in
xor
ret
mov
and
add
xor
ss
mov
pop
ljmp
fadds
xor
dec
pop
hlt
xchg
stos
mov
sub
imull
mov
xchg
jge
stos
add
xor
test
data16
ljmp
inc
cwtl
outsb
les
gs
lock
pop
shrl
aas
loope
and
xor
mov
and
xor
jnp
xor
es
inc
das
cmpsl
imul
out
mov
pop
add
add
push
dec
jbe
sbb
into
xor
jecxz
inc
mov
xorb
mov
test
sti
jae
stos
xchg
stc
xchg
sbb
pop
adc
cmp
jg
dec
inc
mov
xor
inc
andb
add
call
sbb
aam
dec
lock
jg
xor
dec
jmp
push
push
xor
aaa
lods
adc
sub
add
mov
sbb
push
inc
sub
mov
in
pop
xor
mov
mov
fcmovnbe
int
shll
mov
repz
sbb
roll
fstpt
adc
sub
inc
xchg
mov
jle
lods
clc
push
pushf
xor
fadd
aad
mov
out
inc
lock
aam
pop
test
test
xlat
gs
ja
stos
xor
lods
cltd
lahf
ss
sahf
shlb
sbbb
dec
xor
jnp
mov
and
imul
jno
hlt
test
pusha
xor
ss
mov
aad
xor
sbb
inc
ljmp
add
xchg
in
mov
imul
lahf
push
xor
insb
lret
and
push
pop
xchg
movsb
lahf
faddl
mov
mov
sub
xor
cmp
jecxz
mov
sbb
add
or
imull
jmp
jne
out
mov
xchg
push
aaa
popf
mov
mov
iret
in
subl
adc
sub
xor
into
xor
pop
push
out
je
jne
lea
cmp
callw
and
ljmp
aam
push
xchg
scas
clc
ret
inc
pop
sbb
adcl
out
repz
xor
xorl
adc
fisubrs
pop
inc
fistpl
pop
sbb
testb
mov
push
xor
sahf
pushf
in
and
shrb
sbb
in
fisubs
jp
cmp
aam
jl
mov
outsb
lods
cmc
movsb
push
cmpsb
retw
xor
mov
orb
shlb
inc
std
in
in
nop
stc
push
lods
or
insl
shll
push
inc
push
das
pop
xchg
and
cli
xor
xorl
sbb
sbb
sub
mov
lea
inc
fwait
push
call
and
test
ror
cld
popa
add
push
orl
sbb
pusha
mov
dec
xor
or
cmp
pop
cmpsl
xor
pop
jecxz
in
and
xor
and
aas
inc
adc
cld
sub
test
xor
daa
mov
xor
insl
mov
cmp
jb
and
dec
clc
out
or
fcmovnu
push
arpl
insb
aam
sub
fcmovu
push
imul
adc
hlt
leave
inc
shll
cltd
push
adc
data16
mov
push
cmpl
clc
leave
shll
xchg
or
jbe
hlt
jecxz
mov
dec
push
xor
leave
or
mov
out
xor
pop
into
cwtl
js
inc
xor
clc
jnp
cs
and
xor
int
jg
inc
ds
pop
xor
inc
xor
xchg
mov
dec
and
xor
mov
dec
mov
cmpsb
xor
lock
sbb
dec
xor
fsub
js
scas
push
xor
andb
pusha
add
pop
outsl
insl
inc
sub
insb
in
inc
add
movsb
rcrb
add
push
lahf
jno
sub
and
cmp
push
loope
adc
mov
adc
jmp
adc
test
jp
inc
dec
repnz
adc
cmpsb
inc
popf
jl
xor
jno
xor
inc
addl
cwtl
adc
fstpl
pop
mov
mov
push
push
and
sub
in
repnz
lcall
outsb
gs
scas
xchg
xor
jecxz
loope
fdivr
sbb
arpl
xchg
movsl
adc
jno
xchg
enter
sti
fnsave
stos
ret
inc
xchg
push
test
xor
into
cmp
mov
sbb
inc
mull
mov
cwtl
and
roll
xchg
dec
data16
in
jmp
xchg
cld
xor
shlb
loop
je
mov
lea
cmp
push
packsswb
cli
fwait
push
xchg
rorl
into
lea
dec
hlt
cmpl
xor
cmp
xlat
xchg
push
nop
push
xor
sub
pop
sbb
jecxz
pop
push
mov
add
xchg
xchg
adc
pop
xor
adc
or
jbe
lcall
and
inc
push
sub
sub
test
jnp
jb
mov
cmpsb
inc
xchg
fidivs
or
out
cmp
pop
mov
pop
push
aam
xor
pushf
xor
addr16
test
jp
xor
adc
icebp
pop
cmc
shr
inc
xchg
xor
or
cltd
loope
sarb
sbb
fidivrl
cmp
jbe
mov
mov
repz
mov
mov
or
inc
xor
cmpb
ret
jae
mov
inc
out
xor
add
mov
and
imul
loope
xchg
popf
loopne
adc
in
movsl
fs
push
xchg
sbb
lret
mov
push
mov
push
xor
or
stc
jb
aam
push
xor
jns
orl
xchg
cmpsb
pop
out
mov
lcall
xor
sbbl
xor
out
cmpsl
push
cmc
in
cmp
jmp
inc
scas
shlb
insb
mov
cmp
mov
jg
rorl
lock
dec
or
lock
repz
or
mov
push
xor
roll
sub
lcall
adc
mov
jl
fisubrl
mov
or
and
dec
aad
mov
mov
ds
jo
cmp
stos
lahf
popf
adc
or
sarl
out
xor
mov
xor
inc
test
lahf
push
shlb
dec
adc
adc
mov
and
jb
inc
or
cmp
mov
and
xor
add
fcmove
dec
mov
xor
cmp
loope
rcrb
movsl
test
jp
inc
cmc
and
sub
fbstp
jnp
jbe
je
ret
or
out
fsubrl
sti
cmp
fcmovnb
dec
push
das
cltd
out
in
inc
mov
and
push
stos
sub
cmp
test
mov
ret
mov
xor
cmp
or
dec
xor
push
mov
stos
xor
shll
inc
fstpt
jl
xor
data16
dec
jo
adc
pop
mov
xlat
inc
or
adc
pushf
mov
out
mov
fcmovu
dec
aaa
sbb
xchg
pushl
push
mov
lret
and
add
and
xor
outsb
jo
ljmp
je
cmpsb
hlt
jnp
fisubl
cmc
sti
cli
xchg
es
xor
or
inc
pop
sbb
ret
roll
xor
jg
dec
arpl
in
jle
mov
fs
xor
sti
aam
fdivl
xor
push
idivb
mov
insl
movsl
fidivs
or
cmp
mov
in
xor
aam
jbe
xchg
imul
sbb
jecxz
mov
adc
hlt
push
cmp
cmp
mov
insl
xor
mov
mov
ret
jno
cmp
in
mov
aad
add
ja
push
mov
mov
sbb
shl
in
scas
xor
pop
jb
adc
jnp
xor
pop
push
xor
mov
mov
loope
jbe
xchg
xchg
jns
test
mov
mov
aaa
mov
pusha
outsl
xlat
cmp
sub
xor
jbe
mov
repz
es
sub
cwtl
cmpsb
fnsave
std
sub
push
lcall
leave
cld
jae
xchg
fisubrl
aaa
arpl
cli
sbb
and
fidivs
xchg
cmp
push
push
hlt
ss
xor
jl
xorl
add
xlat
jmp
or
add
jl
repz
scas
les
xchg
pushf
pop
mov
mov
mov
xor
test
in
xor
sub
push
cld
stc
push
jmp
mov
jbe
xor
xor
pusha
push
xor
pop
jge
cld
jp
xor
mov
lock
xor
rolb
sub
push
mulb
or
in
dec
aam
adcb
clc
inc
mov
sub
enter
mov
mov
cmp
mov
jo
pusha
mov
das
xor
cmpl
cmp
lret
mov
rcll
inc
mov
add
push
xchg
hlt
jne
mov
lahf
imul
xor
aaa
cmp
push
repnz
nop
sti
pushf
dec
push
or
jo
cmpsb
lcall
xorb
sub
div
lret
xor
dec
dec
sbb
xor
notl
subb
pop
xor
dec
and
mov
fwait
xor
cmpsl
lcall
jg
mov
push
pop
inc
dec
sub
fstl
aam
and
imul
shrl
ret
js
xchg
scas
push
lahf
pushf
sub
jbe
xor
insl
and
add
scas
hlt
pushf
sbb
sub
mov
or
mov
and
xchg
xor
jge
mov
mov
outsb
xor
std
xor
mov
adcl
mov
mov
enter
xor
bound
mov
xor
add
ja
pop
sbb
and
mov
mov
fdiv
sbb
push
jne
mov
ret
xor
sbb
test
lods
cmp
or
lahf
push
push
or
mov
imul
mov
loop
mov
or
push
xchg
xor
xor
adc
into
lret
cmp
divl
imul
dec
xor
in
xchg
mov
sbb
or
test
xor
pop
jl
mov
mov
add
xorb
sub
jae
pop
dec
scas
rdpmc
mov
jne
cmp
lea
popa
pop
mov
dec
mov
push
insl
add
xchg
adc
push
call
in
xchg
xor
incb
push
xor
mov
inc
push
xor
jmp
dec
int3
sub
xor
adc
stos
or
mov
cmp
xor
jp
lock
bound
test
mov
xor
xchg
mov
dec
jmp
int
into
pushf
xor
and
adc
outsb
jne
ja
jo
scas
xor
daa
mov
fidivl
lea
push
mov
xor
mov
roll
and
push
in
push
mov
les
jge
ss
je
enter
jne
scas
neg
rclb
mov
lods
jl
jne
pop
pop
cmc
jbe
hlt
es
fcmovnbe
mov
notl
push
jmp
repz
aad
fidivl
and
js
and
sbb
pop
adc
pop
or
clc
xor
add
enter
push
clc
pop
in
push
cmpsb
leave
lods
adc
adc
add
sub
xor
mov
pop
xor
rol
scas
and
push
jo
je
das
loope
dec
movsb
ss
js
lods
cmpsl
ficoml
in
hlt
adc
xchg
ljmp
lods
fidivs
and
inc
xor
jl
push
dec
ss
test
xchg
sub
icebp
push
add
xor
leave
pop
xor
pop
cld
ret
mov
jp
adc
cmp
xchg
xor
cmpsb
lret
iret
xor
pop
xor
pop
or
stc
mov
sbb
mov
arpl
bound
sbb
jp
dec
jmp
cmp
out
push
fs
xor
shll
ss
lcall
xchg
mov
xor
ja
cmc
or
jne
xor
mov
imul
jbe
dec
in
push
mov
or
mov
inc
fistl
fwait
pop
sbb
adc
js
lcall
lods
cmp
je
adc
movsl
cmp
and
pusha
mov
dec
sub
pop
jmp
int
inc
dec
mov
mov
cmpsl
cmp
cmp
cmp
aam
add
mov
clc
pop
sbb
cmp
into
xchg
mov
in
cvtdq2ps
test
adc
loop
xorb
inc
or
call
aaa
jmp
lods
mul
movsb
mov
mov
xchg
mov
xchg
mov
xor
mov
data16
nop
daa
les
mov
adc
or
sub
lods
sub
sbb
aas
hlt
repnz
into
cwtl
or
pop
loop
rcr
jl
popa
xor
hlt
insb
jecxz
mov
xchg
add
xor
lods
sub
inc
xor
js
scas
cmp
outsb
cld
xor
or
adc
mov
xor
push
iret
popa
lahf
mov
and
mov
adc
mov
std
xor
inc
leave
xor
into
mov
xchg
hlt
loop
popa
lock
jmp
sub
cmp
push
xor
mov
mov
aas
jmp
fnstenv
inc
xor
cwtl
dec
testb
xor
call
test
fdivrl
inc
push
jnp
jg
pusha
sbb
jb
mov
xor
aas
xor
cmc
xor
shrb
fnstsw
xor
xchg
out
mov
test
jnp
int
aaa
es
mov
inc
xor
jo
pop
fwait
xchg
sub
xor
or
adc
dec
xor
xor
xchg
sysenter
sbb
xor
sti
cmp
mov
mov
mov
jbe
adc
lods
fldcw
push
adc
hlt
xor
cwtl
call
lret
push
ja
pop
loop
inc
pop
adc
cmp
fisubrs
sub
fwait
movsb
icebp
push
or
mov
xor
jmp
sub
dec
lahf
idivb
cmp
xor
and
sbb
cmp
andl
pop
and
jl
xor
pop
mul
adc
cmc
sub
out
sbb
cmpsb
ficoml
sbb
inc
shll
addl
mov
mov
push
lret
add
xchg
arpl
xor
mov
push
adc
inc
xchg
jg
add
outsl
jp
shll
xchg
xor
andb
out
cmc
fstpt
pop
cltd
xor
popa
inc
ret
insb
dec
sub
mov
and
addb
ss
xor
mov
and
cltd
std
adc
in
xor
xor
or
lret
mov
sbb
add
mov
sub
xor
push
mov
hlt
xor
mov
mov
push
fidivrs
xchg
arpl
push
xor
adc
jmp
xchg
movsl
adc
xor
inc
and
daa
mov
jmp
nop
js
jo
push
sub
lcall
sbb
daa
gs
xor
dec
add
aad
inc
jno
adc
popa
ret
aad
mov
mov
divl
pop
dec
mov
or
mov
cmp
pop
cld
fdivs
popa
stos
sub
das
lret
pop
xchg
out
and
fs
adc
loop
adc
push
nop
fisttpll
xor
mov
sbb
pop
mov
mov
jae
jns
pop
pushf
xchg
in
inc
cmpsl
cwtl
divl
mov
dec
or
or
mov
pushf
lea
aaa
mov
pop
jmp
inc
pop
xor
dec
into
inc
sub
jbe
cmp
insl
xor
mov
movsb
or
clc
cmp
jp
xor
test
pop
jmp
pop
sbb
mov
scas
push
cmp
pushw
rolb
mov
unpckhps
mov
jo
jns
xor
mov
xchg
into
mov
cmc
pusha
push
mov
mov
xchg
rcrl
xchg
stos
or
out
add
mov
loope
add
and
add
sub
cmpsb
ds
in
xor
vpmacssdd
inc
dec
jecxz
jns
and
dec
iret
bt
bound
add
adc
fisubrl
push
xor
lods
xor
sbb
ffree
cmp
or
lea
mov
xlat
lods
jno
push
xor
and
je
push
jns
cmp
mov
hlt
or
test
xchg
stc
jecxz
push
enter
lahf
jae
mov
xor
arpl
mov
adc
pop
daa
mov
pop
dec
mov
mov
sbbl
xor
cmp
filds
nop
pop
sub
mov
popl
xor
pop
and
jno
call
imull
xor
subb
xor
fdivrl
xlat
out
mov
mov
xchg
hlt
and
jo
mov
cmp
sbb
out
xor
ret
adc
es
fcomps
mov
xor
push
in
leave
mov
pop
xor
dec
js
sbb
aad
imul
dec
mov
xorl
sbb
push
fs
add
jns
jge
imul
xchg
cmp
add
popf
xor
movsb
and
fwait
jg
add
pusha
xor
std
dec
dec
sbb
xor
and
outsl
ror
xor
fildll
les
mov
mov
mov
or
inc
cmp
xor
xchg
inc
xor
cmp
push
pop
in
xor
addr16
in
stos
push
mov
jmp
aaa
nop
dec
fcompl
xchg
lret
xor
xchg
mov
xor
mov
shl
push
lods
loope
xchg
adc
jnp
pop
inc
insl
push
les
bound
lret
and
dec
lret
xor
mov
xchg
dec
inc
fnstenv
lock
xor
mov
addl
nop
xchg
mov
pop
adc
mov
push
pop
data16
repz
xor
repz
push
push
jg
jecxz
outsl
insb
xor
test
bound
lds
sub
jp
icebp
outsl
dec
mov
int3
shr
lahf
test
or
nop
inc
jne
shr
in
mov
out
mov
test
dec
and
jecxz
add
mov
xor
mov
cmp
or
mov
xor
cmpb
pop
xor
sub
sub
incb
movsl
xor
xchg
dec
mov
cmp
xor
pop
mov
into
sbb
inc
mov
jne
filds
add
xchg
bound
decl
and
sub
sub
mov
xor
jmp
sti
cltd
adc
clc
push
ss
mov
xor
in
rorl
dec
xor
das
mov
gs
xor
push
mov
dec
mov
adc
js
loope
adc
pop
rolb
je
cltd
ja
mov
scas
add
pop
mov
pop
pop
mov
xor
es
push
movsl
subb
fldl
xor
dec
mov
jmp
push
fnstenv
pop
lcall
daa
imul
sub
test
cmp
mov
pop
xchg
sub
dec
loope
jnp
stos
mov
hlt
loopne
lahf
cmp
mov
lods
dec
bound
and
stos
fcomps
mov
pop
orb
mov
sbb
clc
divl
mov
incb
popf
xchg
xor
jae
add
repz
adc
sti
mov
insl
dec
push
shl
pop
add
test
jg
inc
mov
push
pop
jno
add
je
push
cmc
or
mov
xchg
mov
je
test
cwtl
pop
xor
ds
lods
push
jbe
xor
inc
sbb
xor
xchg
or
xor
addb
mov
jmp
sbb
nop
inc
jg
cmc
mov
rolb
xor
nop
sti
fwait
icebp
xor
je
lret
jbe
xor
aas
int
dec
mov
orl
mov
mov
ljmp
jae
fnstenv
and
dec
xor
iret
inc
in
out
sahf
cmpsb
mov
fdivr
and
xor
mov
cltd
mov
xor
xor
ret
cmp
shlb
push
jle
mov
xor
repnz
xor
inc
push
outsb
sahf
push
dec
pop
adc
mov
mov
adc
pop
je
in
xor
cmpb
jg
aad
push
imul
pushf
inc
test
ljmp
xor
xchg
xor
popf
sti
rcll
call
es
push
xchg
sbb
lcall
pop
lock
xchg
xor
arpl
lods
push
xor
cltd
push
lcall
mov
lret
dec
xor
jns
pop
or
xchg
dec
das
mov
sub
inc
mov
xlat
jp
out
aam
pop
xor
iret
and
addr16
sahf
xor
lret
scas
push
push
lahf
mov
xchg
test
mov
push
int3
mov
xchg
nop
xor
xor
xrelease
lds
cld
push
jno
test
faddl
jge
xchg
or
jnp
and
pop
repnz
arpl
and
mov
xor
cmc
aas
mov
and
repz
push
mov
jb
lods
hlt
enter
repz
ret
xor
adc
xchg
fwait
jns
xor
or
mov
adc
xchg
sub
jmp
mov
jl
adc
shrb
shll
xchg
xor
xchg
adc
sbb
mov
cs
pop
and
xor
xchg
or
cmp
xor
aam
std
jge
ljmp
add
mov
out
inc
adc
xor
imul
xchg
adc
inc
adc
adc
ret
xor
inc
adc
mov
cld
insb
loope
nop
jb
xor
sub
negl
pop
out
jb
pop
clc
mov
or
and
mov
xor
cmp
adc
push
adc
std
fs
pushl
jnp
mov
popa
cli
or
mov
add
sahf
xor
adc
xchg
xor
addr16
lds
daa
push
test
not
pop
cmc
cld
xor
lahf
jno
mov
jns
add
xor
pop
rorl
sub
mov
les
xor
aas
fnsave
jmp
push
adc
sbb
jp
dec
xchg
lds
xor
out
inc
mov
push
outsb
xor
dec
sub
ja
mov
xor
subb
cmp
loope
adc
fs
pop
mov
test
or
xor
sbb
call
adc
imul
dec
sbb
sub
push
stos
loope
mov
shll
ds
test
add
pop
mov
jge
or
mov
mov
movsl
mov
sbb
and
lds
cwtl
mov
rep
xor
xor
icebp
roll
sbb
dec
adc
mov
mov
adc
rcll
mov
dec
pop
sbb
in
xor
xor
sub
xor
lock
sbb
pop
std
sbb
xchg
fldt
xor
push
xor
ret
mov
sub
out
leave
repz
xchg
sarl
xor
mov
mov
out
cmpsl
inc
jl
xor
cmp
sbb
xor
jg
mov
mov
sub
xor
and
fbstp
adcb
and
icebp
mov
shll
unpcklps
sub
or
clc
inc
loop
pop
cmpsl
xor
push
aaa
xchg
mov
mov
fisubl
dec
dec
mov
fnstsw
jl
int3
mov
icebp
adc
sub
mov
jge
out
cmp
xor
xor
pop
clc
imul
popf
mov
pop
adc
pusha
inc
lea
pushf
scas
loopne
xor
push
push
jo
xchg
pop
pop
mov
sub
push
aas
clc
push
ja
xor
inc
xchg
add
push
test
lea
xor
jo
sub
push
loop
adc
inc
dec
push
push
aad
xchg
cld
addr16
xor
pop
push
inc
jnp
jo
xchg
sub
xor
mov
xor
movsb
mov
adc
inc
mov
pop
fsub
cmpsl
mov
push
sub
xor
xchg
jns
adc
pushf
test
imul
xor
shlb
sub
xor
add
inc
scas
xor
out
push
rolb
lahf
loopne
je
aam
repnz
addr16
xchg
xor
jo
push
or
or
mov
outsl
add
inc
pop
jb
cmp
sbb
jae
xor
sub
pop
or
or
outsb
push
add
mov
movsl
test
lock
dec
fcoml
mov
and
sub
out
pushf
testl
mov
adc
mov
sub
sub
push
flds
xor
das
sahf
pop
cmpsb
adc
xor
insl
mov
icebp
xor
dec
mov
sub
inc
fimull
adc
out
mov
jle
xor
xor
stos
test
jno
in
add
push
loope
sbb
adc
jg
lock
push
xlat
add
ret
and
lahf
aam
mov
xor
std
stos
adc
clc
push
clc
xor
xor
gs
test
cli
subl
cmc
fistpll
mov
in
cltd
mov
sbb
incl
cmp
and
js
dec
jo
stos
mov
xchg
cmp
shlb
aaa
sbb
inc
mov
mov
xor
pop
idivb
xor
add
xor
enter
xchg
addl
cmp
or
lret
push
push
jno
inc
xor
into
scas
enter
adc
xchg
aam
lcall
mov
push
imul
cmpb
xor
dec
xor
push
outsb
sbb
test
and
mov
jae
sub
push
stos
movl
mov
dec
test
or
pop
adc
add
outsb
adc
pop
and
loope
push
sub
xchg
dec
addl
out
mov
xor
nop
fists
popa
test
xor
mov
stc
jnp
and
pop
push
push
or
insb
xor
shll
mov
mov
xor
jl
push
scas
jnp
sbb
paddb
inc
into
xor
cmp
sbb
lods
scas
xor
arpl
mov
sub
xor
push
push
sbb
xor
stos
cs
and
or
lahf
sbb
test
push
sub
add
popw
add
xor
cmpsl
mov
dec
dec
test
xor
outsb
pop
icebp
pop
aas
xor
cmp
fdivl
cli
mov
lret
aam
sbb
inc
cmp
add
xor
out
mov
stos
xor
cmpsb
or
sbb
adc
xor
mov
add
xor
mov
dec
repnz
dec
ficoms
xor
decb
and
lds
lcall
movsb
in
clc
mov
add
sbb
adc
xor
imul
lods
xor
xchg
shlb
add
int
xchg
sbb
xor
sub
xchg
inc
stc
pop
push
xor
std
sbb
cmp
test
adc
out
jl
sbb
and
cmp
sub
fs
dec
das
jb
mov
inc
ds
xor
jae
jge
scas
sub
xor
dec
inc
out
lret
add
sub
xor
mov
xchg
out
cmp
cld
push
pop
jg
xchg
mov
jle
int
jl
xor
nop
xchg
push
lahf
jns
sbb
mov
adc
sbb
add
add
lods
pop
dec
cmp
xor
stos
jno
or
mov
ret
aam
and
cli
xchg
into
adc
fmuls
xchg
popa
in
pop
sahf
xchg
pop
xor
lea
push
xchg
xlat
out
sub
fiaddl
jno
dec
adc
dec
mov
addr16
xor
mov
xor
pop
scas
add
fisubrs
jge
cwtl
inc
and
fs
aaa
xchg
mov
jg
sbb
push
loope
loop
xor
mov
adc
or
popf
mov
pop
test
xor
call
push
jbe
mov
hlt
push
movsb
add
pop
pop
fs
cli
jge
gs
mov
sbb
mov
cmp
popa
mov
mov
roll
xlat
lahf
les
xor
xchg
shrl
jae
ss
pop
lods
mov
mov
or
repnz
xor
js
dec
cmp
and
sbb
mov
jns
fcoml
hlt
xor
xlat
outsb
ret
push
cs
push
mov
and
lcall
xor
push
mov
pushf
mov
lahf
testl
mov
inc
sbb
cmpsl
ja
imul
int3
insb
cmpsl
lahf
xor
jo
in
pop
mov
jmp
test
pop
pop
mov
xor
test
sbb
pop
in
and
xor
adc
mov
es
addr16
mov
xor
out
in
fsubrs
stos
xor
xor
outsb
rol
pop
call
ret
add
loop
mov
pop
clc
aaa
or
dec
out
xchg
repnz
mov
mov
xor
int3
in
jg
inc
dec
cmc
and
nop
adc
adc
test
bswap
sbb
js
xchg
push
loope
inc
jg
xor
popa
std
mov
pop
cmp
jecxz
jl
and
pusha
test
dec
push
push
pop
adc
xlat
mov
or
inc
fwait
arpl
movsl
push
xor
or
ljmp
dec
dec
leave
je
mov
scas
nop
aad
mov
cmpl
jecxz
xor
movsb
into
arpl
filds
sub
in
scas
cmp
push
xor
push
enter
dec
xor
repz
in
push
les
and
push
pop
xor
push
mov
or
inc
sub
xchg
xor
xor
cs
cltd
push
loopne
das
xor
jae
jl
out
and
xchg
pop
daa
pop
inc
inc
xor
jecxz
dec
sbb
lods
sub
adc
xor
mov
xor
and
int3
jecxz
ficoms
test
insl
je
add
pushf
jnp
cmpsl
stos
xchg
push
inc
cmp
adcl
mov
outsb
add
xor
inc
shrl
xor
popf
xor
or
and
lods
and
xor
push
stc
push
and
and
jbe
inc
aad
cmp
xor
js
adc
push
add
outsb
jmp
clc
xor
in
mov
mov
push
jbe
jno
jae
es
icebp
xorl
clc
sub
xchg
xor
inc
das
out
cmp
mov
sub
gs
cwtl
dec
dec
lea
in
xor
xchg
push
lret
and
pop
dec
inc
lret
hlt
loop
scas
xor
test
popf
cltd
mov
jbe
push
xor
ss
and
stos
adc
lcall
add
ja
std
xor
dec
cmp
xor
arpl
sbb
iret
movsb
test
sub
lods
test
outsl
adc
adc
sahf
jp
push
rorl
add
icebp
mov
jo
mov
xor
and
pop
clc
fisubrs
and
xor
jae
cmp
xor
scas
dec
repz
cwtl
jmp
xor
add
xor
inc
or
mov
add
push
jne
iret
mov
jnp
cld
movzwl
icebp
xor
jle
mov
fimull
xchg
xor
cmpsl
cli
in
pop
inc
movsl
xor
into
pop
and
dec
mov
xor
adcb
jo
ja
sbb
add
mov
lret
cltd
xor
jbe
jb
xor
sbb
mov
lock
mov
fldcw
outsl
jg
sbb
imul
add
jo
and
xor
cmc
pop
pop
popa
lret
ss
sbb
xor
lret
test
lds
or
cwtl
inc
and
sbb
pop
xor
mov
ljmp
push
sub
outsb
adc
movsb
aam
add
mov
js
inc
mov
push
jl
push
cld
imul
or
cmpsb
sbb
movsl
mov
das
in
mov
mov
loop
jmp
es
cmp
xchg
or
fidivl
imul
mov
iret
sub
addr16
dec
aas
xor
pusha
pop
adc
mov
mov
xor
sub
ss
xor
xchg
fmul
cwtl
push
pop
test
and
hlt
add
cmp
xor
pop
dec
roll
jp
std
out
dec
mov
xor
push
ds
push
stc
xor
pop
inc
jg
data16
xchg
pop
cmp
xor
cmp
dec
arpl
fwait
push
mov
adc
popf
pop
call
cmp
div
inc
aaa
dec
movsb
inc
ret
lahf
sub
push
lret
mov
cmp
out
push
pushl
pop
push
xorb
sarb
push
add
arpl
fwait
ja
xor
repnz
xchg
stc
push
xchg
in
aad
shlb
sahf
getsec
or
mov
xchg
cmpsl
inc
imul
loop
fisubrl
xchg
or
sar
cmc
mov
hlt
cmpsb
or
subl
cmpsl
xor
pop
push
cltd
in
lods
or
dec
int
xor
push
stos
or
push
xchg
and
pop
sbb
lea
test
xor
fcomps
ja
push
push
jo
sti
push
push
insb
xor
mov
test
xor
push
inc
sbb
inc
das
dec
fwait
es
int3
mov
xor
ss
cmp
mov
rolb
int3
sbb
pop
test
xor
sub
jle
sahf
fstpt
add
push
dec
lods
hlt
js
xchg
xor
add
stos
push
lret
in
xor
xchg
repnz
shrb
pop
call
bound
clc
repz
xchg
clc
pushw
test
mov
jmp
sub
mov
outsl
call
dec
inc
cwtl
cmc
repz
js
aam
adc
or
jg
nop
pushl
loope
sub
xor
cmp
xor
xor
sbb
push
adc
fsubrl
out
or
adc
xor
and
cmp
cmp
xor
mov
int
adc
jl
cmp
push
sbb
inc
inc
popa
jg
pop
in
ret
push
xor
pop
xor
jbe
fisubrl
mov
mov
sahf
xor
into
paddsw
sub
add
data16
popa
dec
xchg
lret
mov
mov
repnz
push
mov
push
and
mov
xor
sbb
rcr
out
xor
dec
jecxz
mov
mov
cmp
lods
repz
insb
pushf
jne
stos
jno
scas
call
jnp
and
std
push
aam
mov
fdiv
dec
add
xor
leave
mov
out
test
mov
xor
jb
inc
and
orb
mov
inc
aaa
and
xor
xchg
repz
push
inc
push
jl
das
inc
jecxz
dec
sbb
divl
fcmovbe
into
adc
and
out
int3
fistl
xor
sti
je
ret
add
push
push
in
in
test
movl
mov
pop
js
outsb
xorl
int3
push
ds
repnz
test
xchg
cltd
ds
ret
arpl
stos
dec
sbb
lods
pop
ss
out
loop
or
outsb
imul
loopne
adc
mov
push
or
adc
and
rcll
jnp
outsl
jb
adc
sub
test
jecxz
je
in
xchg
arpl
addr16
mov
fdivs
cmp
int
loope
push
je
mov
shll
out
xor
aaa
xor
adc
mov
mov
dec
cmpsb
sbb
fisubs
aad
jbe
jl
add
hlt
xor
lret
cmp
jge
xor
movsl
ret
add
xor
ret
adc
aam
push
xor
aam
faddl
mov
lret
int
or
jnp
jp
mov
push
mov
xor
and
imul
sar
hlt
lahf
aaa
outsb
xor
xlat
push
pushf
jge
ficompl
and
iret
xchg
fcomip
mov
mov
push
fmul
movsb
mov
outsb
xor
repnz
or
mov
pop
pop
outsl
lods
pushl
mov
mov
pop
shl
pop
insl
popa
adc
inc
jg
or
movsl
out
xor
dec
and
xor
or
jecxz
push
push
mov
ljmp
cmp
xor
sahf
sub
sbb
xor
cmc
sub
mov
pop
mov
xor
psllw
xor
loop
lock
pop
loope
xor
lret
lods
inc
daa
repz
mov
cmp
mov
xor
push
xchg
pop
stos
mov
adc
scas
add
movsb
cmpsl
jo
pop
xor
in
clc
or
mov
cmp
mov
aam
xchg
incb
add
mov
dec
xor
or
fcom
scas
test
aaa
mov
jnp
mov
fucompp
jg
xor
popf
addl
adc
pop
out
mov
sub
xchg
xor
sub
inc
rclb
in
mov
stc
je
sbb
leave
test
mov
cli
lea
int3
data16
cmpsl
sub
dec
cmp
fs
shrb
shll
fisubl
push
jmp
js
stc
daa
push
imulb
xchg
stos
dec
inc
push
adc
add
fisttpl
mov
or
add
dec
dec
xor
les
jo
je
adc
jp
test
sbb
leave
xor
and
je
push
icebp
inc
pop
in
cli
push
add
xchg
mov
inc
mov
cli
xchg
pop
jbe
and
stos
lahf
aaa
cmp
add
cltd
pop
pop
out
leave
xor
cmpsl
mov
xor
mov
enter
data16
ret
sahf
jae
lcall
sub
lds
inc
or
sbb
loop
pop
push
xchg
hlt
out
sub
test
mov
pop
pop
cmp
xor
xor
or
cmp
push
mov
add
lret
push
je
sbb
int
and
push
xorb
pusha
mov
out
dec
sti
loopne
mov
aas
push
int3
xor
xor
test
xchg
mov
cli
loopne
mov
cmp
jno
fs
mov
xor
or
mov
xor
jmp
hlt
push
pop
cmp
mov
andl
ret
ret
xor
xor
iret
fcmovbe
pop
add
mov
loop
outsb
hlt
mov
call
test
loopne
sbb
jns
ja
loop
int
xchg
leave
xchg
pop
add
xor
imul
out
jo
outsl
mov
dec
and
dec
and
pop
movsl
push
arpl
jmp
aam
icebp
or
ja
pop
mov
es
xor
lods
insb
jb
jecxz
out
mov
in
add
mov
inc
and
xchg
or
jnp
pop
ljmp
and
sub
out
ret
xor
sar
sub
mov
push
stc
int3
adc
dec
push
push
jecxz
pop
xor
ffree
daa
pushf
mov
sbb
cmpsb
lea
cmp
xor
pop
mov
das
pop
sti
push
sbb
push
call
xchg
mov
divl
int
mov
clc
cli
cmp
dec
mov
xor
xor
adc
jecxz
shr
ja
cmp
mov
mov
cmp
lahf
les
stos
fistl
mov
clc
cmpsb
sahf
and
xor
loop
or
out
ja
enter
jmp
movsb
mov
push
or
nop
xor
cwtl
xchg
mov
push
and
jle
loop
jno
xor
push
adc
mov
adc
outsl
cmp
jecxz
xor
pop
popa
mov
shr
pop
ds
int
mov
int3
sbb
arpl
sbb
divb
stos
dec
das
adc
je
cli
fcom
push
adc
flds
imul
xor
mov
sbb
fisttpll
divb
mov
lret
xchg
mov
repz
mov
movsb
pushl
rcrl
fisubrl
fimuls
xor
gs
jle
xor
sbb
fmul
mov
in
popf
xchg
jl
push
icebp
xor
lea
push
rdtsc
or
ret
xor
out
add
push
mov
fs
out
ficoms
loopne
bound
rcll
insb
lcall
test
mov
dec
push
test
inc
lods
push
mov
and
sti
bound
cltd
push
inc
leave
dec
ss
adc
xor
test
lret
xor
add
stc
xor
rorb
add
xchg
mov
push
mov
inc
hlt
and
jno
pop
adc
fisttps
dec
arpl
arpl
push
push
add
adcb
xor
mov
cmp
or
or
leave
add
xor
and
or
sar
dec
lcall
ljmp
hlt
stos
mov
xor
adc
in
aam
je
mov
mov
mov
mov
stc
cmp
mov
push
repz
orl
push
int
xor
insl
add
dec
and
std
fucomip
mov
xor
aas
je
pop
add
push
lea
insl
inc
add
xor
push
and
je
mov
jns
scas
lea
mov
adc
jno
cld
pop
loop
daa
xor
movsb
xor
adc
mov
push
pop
cmp
stc
adc
roll
xor
xchg
lods
mov
cmp
rolb
push
xchg
or
mov
and
cmp
js
mov
insl
insb
mov
scas
data16
cli
jecxz
addr16
cmp
shll
fdivl
adc
lock
add
je
adc
xchg
lods
pop
mov
adc
inc
cmp
call
fdiv
xor
sub
cmc
aam
adc
jl
imul
hlt
mov
aas
sub
xchg
scas
adc
lret
xor
rclb
je
mov
pop
cmp
ds
push
sbb
pop
fidivs
cmpsb
push
lods
add
inc
inc
mov
mov
roll
imul
or
sbb
mov
or
jmp
aam
and
push
push
orl
push
inc
or
stc
iret
pop
xor
in
fsts
xor
ret
add
stos
sub
xchg
cs
stc
mov
add
lahf
lea
inc
lock
lcall
lret
add
cmpsb
test
mov
icebp
hlt
insb
iret
out
dec
dec
adc
addr16
pushw
jg,pn
repz
xchg
mov
fs
cmp
fdivl
aam
loope
add
jle
ret
cltd
xor
dec
sahf
fbld
xor
repz
xor
sub
and
pop
rorb
xchg
inc
into
dec
in
cli
xor
cmp
add
pminub
pop
gs
cs
jb
cwtl
fisubrs
or
jl
mov
sysenter
xor
push
jp
pop
movsl
sbb
aad
hlt
shll
push
pop
dec
sub
stc
int
test
jo
mov
xor
bound
dec
pop
inc
dec
fadds
push
xor
push
insl
fs
addr16
repnz
mov
mov
inc
int
adc
push
iret
mov
xor
cwtl
push
add
popf
or
sub
loop
loopne
ss
aam
cmp
or
mov
mov
bound
push
mov
jg
xor
mov
rolb
xor
or
mov
shlb
jp
je
stos
mov
push
push
pop
pop
lahf
mov
jb
adc
fldl
fnstenv
sbb
xchg
adc
push
mov
push
jp
das
bound
cmp
inc
xchg
std
jle
mov
lahf
clc
dec
cltd
popl
sub
push
out
dec
lods
call
cli
add
sti
imul
ret
arpl
xor
sub
clc
mov
ret
ss
jns
sub
shlb
clc
es
loope
mov
and
adc
in
sarb
ror
jge
cld
dec
push
cmp
sbb
fs
jbe
cmc
pop
xor
xchg
movsb
push
test
pop
adc
sbb
push
push
xchg
in
cltd
sbb
add
mov
stos
es
in
xor
jg
adc
lock
xor
sub
shll
push
cs
xor
lods
mov
fisttpll
add
xor
in
insb
inc
mov
cmpsb
lahf
jecxz
jbe
add
fs
imul
push
fs
xor
push
enter
js
xor
mov
mov
fidivs
inc
push
sub
adc
pop
cmp
loope
jle
mov
mov
inc
fcmovnbe
xor
jo
inc
andb
xor
jmp
adc
out
je
fs
add
and
fisttps
dec
les
mov
lea
pop
ud1
bound
movsb
or
jns
jl
or
insl
xchg
idivl
mov
imul
sub
lret
cmpsl
test
mov
leave
xor
je
inc
cmovne
adc
add
mov
arpl
mov
cmp
rcll
roll
sub
or
lods
addr16
iret
jb
xor
mov
push
cmp
or
divb
add
fwait
xor
xchg
cwtl
jle
xor
xchg
xchg
mov
and
or
cmp
in
xor
push
fwait
push
lea
adc
sub
xor
cmp
stos
adc
stos
jns
adc
popf
loopne
shrb
mov
mov
pop
fisubl
xor
inc
push
pop
stos
adc
es
mov
add
hlt
fmull
inc
inc
cltd
ret
ja
in
xor
dec
pop
xchg
jp
push
ljmp
rorb
xor
insb
pop
ss
movsl
and
jbe
insl
or
cmp
ret
pushf
dec
mov
add
mov
fneni(8087
xchg
shll
jle
push
sbb
fsts
test
loope
push
pop
inc
and
xor
xchg
leave
add
mov
adc
fisttpl
xchg
mov
sub
xor
out
test
and
xor
leave
xor
push
xchg
adc
sbb
adc
xorl
xor
test
cmp
scas
dec
xor
pusha
loop
adc
pop
aad
xor
sbb
movsl
lods
mov
push
sub
je
add
cmpsb
adc
sub
push
sbb
pop
loope
jmp
xor
fldt
xchg
movsb
mov
dec
mov
stos
sub
jno
xchg
and
xor
jge
mov
dec
sbb
jecxz
rcl
outsl
xor
ljmp
push
push
aas
mov
adc
xor
sbb
mov
mov
mov
xor
repz
mov
inc
mov
xor
out
sahf
adc
cmp
mov
jns
into
ficomps
xor
inc
cmp
pop
scas
fildl
push
enter
rolb
mov
push
dec
push
xor
push
adc
or
gs
lcall
fldl
dec
adc
imul
xor
dec
out
ffreep
in
sti
inc
and
pop
and
inc
adc
add
and
mov
data16
mov
xor
xor
mov
outsb
fidivrs
jo
mov
xchg
stos
push
ja
pop
shll
fldcw
xor
pop
mov
mov
std
dec
aas
shlb
pop
xchg
mov
int
mov
adc
sbb
insl
mov
inc
xor
mov
jbe
out
dec
xor
dec
fldt
mov
xor
inc
cmp
ss
pop
out
xor
lock
dec
je
pop
adc
clc
xor
bound
jbe
xor
mov
push
mov
outsb
dec
mov
xor
scas
jge
popa
and
xor
jle
insl
and
lahf
ja
push
dec
add
or
xor
inc
sbb
xor
xlat
jl
daa
icebp
pop
cs
sub
imul
push
pop
insl
xor
imul
sub
and
loopne
push
xlat
mov
stc
xor
orl
insb
push
aaa
out
xchg
mov
movsb
orb
xor
pop
add
xor
ret
mov
and
fnstsw
adc
js
out
pushf
pop
hlt
or
jnp
or
fldl
out
clc
aam
loope
lock
pop
notb
pop
sbb
lods
mov
and
mov
je
mov
addr16
outsl
dec
xchg
xor
repz
cmpsl
sub
cs
movsl
xchg
mov
cmp
and
and
push
jne
cmpsb
cmp
pop
dec
popf
pop
ja
jb
inc
xor
jnp
addr16
outsl
inc
call
cmp
and
add
xor
loop
xchg
je
pop
cld
dec
shlb
adc
hlt
dec
pop
mov
lcall
push
jecxz
sbb
mov
movsb
in
cmp
adc
xor
add
movsl
insb
or
shlb
fcomip
in
pop
outsb
scas
xchg
ljmp
and
divb
sbb
fdivrs
fbstp
xor
jno
sub
xchg
jne
hlt
out
adcl
loop
outsb
adc
imul
cmpb
sti
add
mov
pop
bound
mov
js
xchg
xor
mov
aad
xor
mov
ds
imul
inc
inc
add
or
push
out
pop
jle
inc
add
daa
mov
jno
pop
mov
in
or
inc
dec
xor
jb
xchg
xor
pusha
pop
outsl
sbb
xor
xchg
int3
mov
sbb
jns
sub
xor
das
mov
push
xor
fnstenv
pop
in
insb
push
xor
aam
sbb
jge
int
loope
in
mov
bsr
mov
mov
adc
repz
jl
scas
jecxz
subl
mov
inc
xchg
fiaddl
jnp
testb
xchg
pop
cmp
or
jns
xor
nop
or
inc
fcompl
xor
or
pop
cmp
lret
mov
pop
cli
test
xor
cltd
inc
pop
push
cmp
xor
frstor
cld
scas
push
xchg
cmp
shrl
or
dec
mov
xor
mov
ret
mul
xchg
push
mov
divb
xor
pop
xor
daa
adc
mov
mov
lods
push
pop
add
pushf
jne
mov
mov
enter
mov
dec
push
xor
add
mov
das
test
popa
sub
test
aad
xor
dec
jge
stc
stos
mov
mov
in
lock
inc
pop
call
out
mov
inc
push
dec
sub
ss
dec
mov
jbe
mov
push
mov
out
pusha
push
sub
xchg
xor
pop
rcl
xor
xchg
pop
cmp
xor
jb
scas
insb
adc
hlt
pop
lods
inc
or
dec
adc
std
ja
xor
xor
fwait
cli
lret
inc
push
ret
xchg
pop
popa
push
cltd
fcomps
hlt
xor
mov
xchg
add
pop
push
sbb
sar
enter
and
xchg
cmc
mov
dec
add
lcall
adcb
xor
movsb
test
xor
push
mov
insl
into
mov
in
adc
mov
add
jns
aam
cltd
mov
daa
jnp
push
pop
push
add
xor
in
sub
or
inc
in
mov
pop
inc
jl
mov
cli
sub
sub
push
xchg
imul
cld
add
repz
shl
push
iret
rorl
xor
ss
sub
lods
dec
ja
data16
insb
push
lods
xor
adc
dec
imul
cwtl
xor
add
mov
inc
inc
dec
xor
cli
mov
data16
adc
jg
mov
aas
stc
std
or
pop
repnz
aad
outsb
xor
dec
test
xor
jge
jae
xchg
cmp
push
cmp
adc
xor
imul
sbb
xor
sti
cld
push
popf
loopne
mov
inc
dec
cmpl
rcrb
pop
cli
adc
adc
js
xor
cld
int
cmpsl
int3
into
xor
mov
call
movsl
outsl
loopne
inc
jmp
rorl
xor
and
rclb
popf
lret
mov
push
xor
das
outsb
xor
fucomip
mov
jmp
xor
dec
adc
sbb
lds
scas
xor
idivl
aas
xor
addb
cld
add
loope
rclb
ret
out
mov
xor
adc
lods
add
xchg
cmc
push
pop
dec
add
push
mov
adc
lods
add
xor
mov
das
int
jge
jmp
cmpsl
xchg
and
sysenter
mov
pop
dec
test
jns
hlt
or
pop
lock
dec
adc
sub
mov
and
hlt
stos
mov
call
in
sub
stos
insb
xor
adc
pushf
add
xchg
out
xor
in
xor
sbb
jg
xor
jne
cltd
cmp
iret
pop
out
sbbb
fxch
insl
sbb
in
pop
aad
in
cmp
arpl
mov
jnp
and
cmp
xor
mov
inc
push
mov
or
dec
icebp
xor
cmc
xor
int
ja
xor
movsb
daa
or
and
std
and
sbb
cmpl
out
xor
sbb
dec
xor
std
in
daa
push
sub
pop
and
adc
push
xor
jno
imul
incl
xor
lods
xor
cmp
xchg
mov
jae
and
and
push
push
xor
sahf
push
cltd
xor
rclb
sub
fidivrl
sub
ret
fwait
inc
xor
sub
cld
xor
push
pop
pop
das
push
xlat
lret
testl
add
stc
xchg
mov
imul
nop
xor
cld
mov
xor
push
jmp
sbb
inc
imul
enter
xchg
xor
nop
mov
sub
mov
or
push
jbe
fmul
movsb
aas
xchg
xor
push
pushf
popf
cmp
cmp
push
xor
and
test
mov
push
pop
out
inc
sub
xor
or
xacquire
cmp
and
movsl
pop
xor
lock
xchg
dec
arpl
jne
xor
es
pushl
mov
xor
push
jecxz
xchg
xor
test
push
mov
xor
or
push
fcoms
inc
inc
dec
cmp
mov
fisttpl
ret
je
and
xor
push
movsl
cmpsl
sub
iret
push
sahf
xor
lock
and
repz
xor
int
mov
lret
mov
in
into
in
xor
push
cmp
shll
jbe
scas
mov
cmpsb
and
adc
hlt
sub
xorb
daa
pop
scas
dec
scas
sbb
call
dec
arpl
insl
sti
xor
js
ret
lds
in
push
xor
dec
xchg
fstps
stos
je
jecxz
out
test
mov
push
cmp
sti
xor
xchg
dec
lock
cmc
push
ja
mul
mov
incb
test
or
mov
sub
cmp
repnz
pop
jl
aad
mov
pusha
cmp
lds
out
loopne
adc
fbstp
inc
int
cld
push
and
iret
lahf
lods
xchg
pop
enter
jecxz
fcomip
and
inc
pop
lret
jle
xor
push
gs
mov
hlt
stos
xor
pop
loopne
and
arpl
sub
add
inc
ja
push
adc
adc
orb
sub
or
mov
add
in
push
mov
data16
int3
in
mov
sbb
xor
pushf
pop
or
xor
fbld
test
in
out
test
lret
stos
fdivl
fldt
or
les
inc
fisubrs
movsl
xchg
int3
test
inc
xor
cltd
jo
push
xor
sub
fnsave
inc
cmp
fnstenv
xchg
or
daa
cltd
ljmp
arpl
mov
push
push
add
sbb
sti
pushf
and
push
xor
fcmove
popf
adc
dec
xor
push
xlat
sbb
jns
mov
scas
xor
fwait
or
xchg
jl
xor
pop
pushf
push
push
or
jae
popf
or
test
adc
xor
xor
scas
pop
movsb
adc
mov
mov
mov
or
sbb
daa
sub
shl
xor
or
push
out
jno
jbe
call
arpl
in
xor
pop
mov
movsb
sub
mov
xor
pop
inc
sub
lods
cmc
xchg
sahf
fidivl
jl
imull
xor
sbb
ffree
or
nop
mov
mov
pop
call
adc
push
xor
mov
stos
repnz
pop
dec
loopne
push
testl
xor
ja
out
addr16
push
sbb
pop
lret
andb
inc
xor
ffree
and
dec
mov
movl
mov
sbb
out
mov
sub
pop
test
adc
nop
add
rclb
fwait
adc
mov
data16
out
xor
loopne
mov
push
pushf
outsb
xor
movsb
push
xor
clc
or
push
xor
jns
mov
sub
mov
loope
xor
fsubrp
inc
outsb
cmpsl
movsb
push
xor
fsubrl
fwait
adc
push
mov
aam
insl
subb
lret
push
or
mov
pop
movsl
popf
loopne
push
mov
push
stos
ds
jne
inc
dec
fldcw
sub
xor
adc
insb
ljmp
imul
adc
repnz
bound
push
fiaddl
pop
jns
test
shl
inc
mov
jnp
sub
lret
movups
xchg
and
sbb
mov
xor
inc
pop
cmpsb
fistpll
adc
mov
pop
pop
xchg
and
adc
mov
and
and
xchg
jmp
adc
and
jne
clc
push
cmp
out
xchg
pop
insb
mov
jecxz
addr16
je
cmp
inc
xor
inc
mov
sbb
cmp
test
xor
mov
int3
inc
xor
jns
lds
orb
js
mov
dec
sbb
push
rclb
xor
mov
out
xor
fstpl
stc
mov
je
add
fisubl
loope
jne
pop
inc
ljmp
push
insb
sbb
mov
inc
mov
cli
test
scas
cwtl
adc
push
xor
xor
lahf
pop
jge
push
rorl
cmp
loop
dec
pop
xor
mov
or
test
in
jno
push
mov
sub
push
push
sub
in
xor
xchg
mov
inc
sbb
enter
outsl
lock
shrl
sbb
xor
push
mov
cli
adc
xor
sub
cmp
addr16
je
adc
pop
push
imul
sub
push
xchg
add
mov
or
add
xor
xor
mov
stos
jp
mov
or
lea
sbb
inc
lret
xchg
stos
jnp
adc
stc
ja
xrelease
jmp
lods
jmp
adc
push
jge
dec
xor
pop
dec
aaa
pop
adc
sub
enter
xor
leave
push
mov
inc
xorl
fstl
int3
pop
and
jne
mov
adc
xlat
test
mov
repz
xchg
mov
push
and
xlat
pushf
or
out
adc
sti
xor
aas
cmc
inc
sub
mov
xor
mov
push
in
jp
xor
cmpsl
push
daa
aaa
sub
sbb
out
xchg
movsb
pop
lahf
sar
push
push
pop
fwait
cmc
lret
in
add
add
adc
mov
outsb
xor
mov
push
sbb
xchg
xchg
test
push
or
adc
adc
jb
ja
jl
aam
inc
mov
pusha
and
push
mov
adc
sbb
xor
aad
xchg
les
mov
andb
xor
adc
pushf
pushf
aam
mov
or
jnp
hlt
xlat
ss
mov
adc
inc
ja
jae
int
and
call
sbb
sbb
fwait
movsb
out
in
xchg
dec
mov
ja
mov
jo
dec
mov
imul
xor
js
aam
daa
xor
pop
js
loope
jmp
sbb
pushl
push
fmuls
in
hlt
mov
popf
faddp
push
out
or
sti
pusha
push
lret
sbb
je
jmp
mov
jp
dec
mov
xchg
enter
mov
pop
sbb
out
mov
stos
xchg
push
and
cmpsl
enter
sahf
inc
lea
lret
mov
cmc
xor
mov
or
aas
scas
adc
xor
add
leave
in
push
and
in
xor
sbb
mov
shll
iret
loopne
and
andb
pop
movsl
sub
sbb
sti
into
add
pop
push
mov
xor
and
push
andl
repnz
push
pop
push
sbb
xor
daa
fistl
lret
dec
mov
mov
sub
leave
outsl
inc
inc
push
jb
xor
jmp
lock
bound
inc
test
mov
aad
imul
and
mov
nop
popf
sub
adc
cmc
fs
mov
xor
les
and
jecxz
or
adc
ss
lret
sbb
push
dec
repz
mov
dec
push
in
das
adc
lret
sub
jecxz
mov
test
sbb
mov
fnsave
lret
repz
mov
xor
push
sub
jp
ss
xor
pop
in
xor
test
imul
lods
mov
sub
xor
xor
add
das
sub
pop
mov
aad
push
loop
adc
mov
push
test
cmp
lods
jns
or
xor
inc
sbb
test
mov
int3
movsb
mov
movsl
out
in
mov
jbe
cwtl
call
ret
cmc
imul
popf
cmp
ljmp
or
repnz
leave
cltd
cmp
xor
fsubrl
cld
ds
es
jmp
pushl
mov
push
xchg
cmp
lock
and
das
cmpsb
repz
sbb
xor
mov
enter
cmpb
in
mov
mov
jle
xor
icebp
and
movsb
xor
imul
xchg
xor
xchg
mov
cwtl
and
fsubr
lock
outsb
jnp
nop
push
push
pop
enter
xor
loop
or
outsb
imul
mov
hlt
mov
jge
not
or
or
cld
cmp
movsl
outsl
xor
jnp
mov
push
test
sub
cmpsb
push
jae
out
sbb
iret
xchg
stos
je
mov
dec
jae
sub
jmp
ret
shlb
imul
mov
lods
in
dec
loop
aaa
mov
cmp
daa
or
mov
jns
pop
push
idivb
xor
or
fstp
imul
and
add
aas
fdivr
movsb
pop
xchg
xor
pop
sbb
divl
mov
imul
sbb
and
andb
popa
movsl
dec
xor
js
loopne
cmp
xchg
or
jbe
xor
insl
imul
mov
mov
fdivs
nop
popf
xor
dec
sbb
into
nop
jg
dec
mov
out
scas
mov
popa
push
xor
shll
hlt
inc
mov
lock
cmp
sbb
cwtl
sbb
mov
adc
jno
ret
cmp
fnstenv
popf
and
xchg
cmp
lea
cmp
hlt
adc
mov
fidivrl
xor
or
push
mov
andl
xchg
shl
sub
cmp
js
ds
in
int3
xor
mov
icebp
aam
nop
and
fisttpl
xor
pop
sbbl
xor
adc
xchg
jmp
and
out
std
push
sub
sahf
iret
push
xor
pop
lcall
add
loop
pop
aam
jns
stc
xor
adcl
in
push
lahf
movsb
cmp
adc
pop
pop
testb
push
dec
sbb
mov
sbb
je
push
loop
and
and
jge
pop
sbb
lds
ret
push
aas
xor
loop
xchg
pop
fidivrs
cmp
push
stos
fcmovne
push
out
movsl
lods
dec
sbb
push
and
lahf
jne
and
push
mov
scas
xor
mov
xor
push
mov
testl
jle
dec
lods
dec
sub
movsl
jnp
mov
jle
pop
xor
icebp
hlt
cmp
into
arpl
cmp
inc
insb
cld
stc
adc
cmpsl
repz
pop
adc
cmc
mov
sub
fmull
rcrb
adc
hlt
lods
xor
cmpsl
adc
adc
loope
cld
call
mov
icebp
cmpsb
adc
das
je
jae
push
adc
push
je
lock
xor
mov
push
jno
stos
xor
inc
xchg
inc
ljmp
sbb
dec
add
mov
cmp
cwtl
dec
mull
pop
mov
dec
je
stos
in
inc
xorl
and
push
test
jle
or
mov
xor
xor
pop
mov
inc
in
sbb
pushf
lret
hlt
or
mov
into
out
mov
mov
pop
jp
out
ljmp
sub
xor
das
jne
push
repz
or
int3
adcb
popa
xor
es
xchg
mov
cmp
ret
push
adc
sti
and
xchg
push
mov
add
push
add
and
cmpps
in
mov
sub
adc
adc
call
push
xchg
std
out
xor
movsl
ja
test
test
mov
dec
jo
inc
inc
cli
push
push
mov
outsl
in
push
cmp
std
push
and
dec
xchg
lahf
or
call
sub
dec
mov
mov
fbld
mov
fnstcw
out
cli
clc
stos
jo
xor
insb
jecxz
xlat
rcrl
xor
push
aad
dec
outsb
scas
xchg
xor
decb
xor
pop
jecxz
jg
in
xor
test
xchg
int3
imul
push
call
inc
jge
pusha
out
adc
out
push
sahf
cmp
pop
popa
mov
xor
xor
testl
fdivs
movsl
and
push
mov
jg
sahf
int3
pusha
xchg
jmp
outsl
cmp
jle
xor
negb
nop
test
popa
xor
shll
cmp
add
sbb
cltd
xor
pop
js,pt
stos
pop
lret
add
push
push
and
push
xor
rcl
dec
xor
hlt
and
mov
les
adcl
fwait
pop
subb
sub
loop
in
sub
xor
dec
mov
push
add
sbb
cs
xor
sub
sbb
arpl
xchg
rolb
xor
mov
mov
or
cmpsb
mov
push
ss
std
jo
mov
jl
clc
aam
lock
divps
js
inc
cmp
and
xchg
icebp
rol
or
add
outsb
sub
loopne
pop
push
ds
mov
leave
xchg
lods
fidivl
imul
sti
push
dec
loope,pt
sarl
lods
xor
fsubrl
xchg
insb
xchg
xchg
addr16
xor
xchg
inc
mov
xor
fnsave
stc
jle
xor
sbb
popa
daa
push
xchg
push
add
sub
mov
inc
ljmp
cmp
sub
aas
imul
cmpb
mov
mov
or
cmpb
or
cmp
mov
jbe
aam
fdivs
arpl
jg
mov
or
ficomps
les
push
ss
inc
add
fwait
pop
xor
mov
popa
shr
ja
mov
loop
mov
xor
push
jno
idivb
iret
ds
xor
gs
int3
ret
inc
xor
fiadds
jb
adc
push
adc
test
inc
xor
mov
or
xlat
lret
mov
dec
xchg
rcr
pop
sub
iret
movsb
loopne
inc
push
push
mov
subb
dec
pop
xor
push
cs
lock
lds
push
mov
mov
add
mov
std
adc
repz
imul
sub
jo
aaa
popa
jg
sub
cmp
out
jbe
push
jae,pt
imul
add
xor
or
ja
lret
push
add
test
fistpl
xchg
mov
cmp
jge
pop
xor
xchg
xor
mov
cmc
je
xchg
xor
aad
mov
add
in
add
inc
inc
fnstsw
outsl
cli
loopne
aam
xor
jnp
inc
les
jbe
int
mov
mov
les
cli
add
xor
gs
and
xchg
icebp
sub
and
xor
sbb
inc
pop
or
push
add
cmp
pop
jecxz
aad
bound
adc
and
mov
hlt
je
cs
pop
je
mov
dec
arpl
repz
sarb
loop
scas
into
in
pop
int
xchg
mov
std
mov
ja
dec
xor
xor
ds
sbb
sahf
icebp
push
mov
xor
das
popf
pushw
inc
add
std
int
daa
xor
or
lahf
fsubs
dec
xor
lret
aam
stos
fcoml
imul
pop
or
das
dec
loope
xchg
lods
cmp
mov
fs
mov
xor
ss
xor
sbb
and
xchg
and
pushl
inc
xor
ljmp
xor
push
aaa
outsb
leave
push
int3
test
mov
fstps
ljmp
aaa
shll
inc
mov
lcall
in
cmp
in
pcmpgtb
loop
cmp
adc
push
xlat
xor
scas
cmp
or
xor
imulb
hlt
lock
cmp
xor
xchg
shll
fiaddl
adc
outsl
mov
jb
sub
mov
enter
xor
xorl
pop
in
or
rclb
dec
and
xor
stos
mov
mov
cmpb
xor
lret
je
mov
mov
out
jb
dec
jg
sbbl
jo
movzbl
mov
pop
push
mov
int3
inc
pop
mov
jmp
xor
mov
sub
cwtl
xchg
adc
pushf
mov
inc
mov
xor
add
dec
scas
jno
push
xlat
arpl
pop
popf
aam
dec
and
pop
scas
cmp
pushl
sti
adc
fimull
jae
jmp
lods
in
dec
pop
adc
xor
xor
stos
xchg
mov
xor
fcom
xorb
push
sub
push
divb
cmc
mov
pop
sarl
cmp
mov
lea
xor
xor
jle
je
mov
pop
adc
into
dec
sbbl
rolb
loopne
mov
movsb
nop
push
xor
xor
push
xchg
ss
xchg
lds
ja
cmp
rorb
inc
pop
clc
sbbl
sub
imul
je
out
stos
rorl
jne
push
push
xchg
dec
aaa
lods
push
fwait
xchg
sbb
adcb
pmuludq
push
and
data16
cld
test
fildll
pop
stos
movsl
mov
ss
mov
xor
xchg
addr16
lret
aad
int3
jge
fisubs
pushf
cmp
fisubrl
xor
jnp
adc
fnstsw
popa
xor
push
mov
iret
mov
add
lcall
xor
and
test
push
ss
or
inc
hlt
jb
jmp
pushf
jae
insl
popf
repz
adc
inc
test
cmp
lods
rcl
les
inc
mov
dec
push
xor
inc
add
repz
ljmp
adc
fildl
xchg
xor
push
cmpsb
shll
and
out
dec
mov
push
jo
sbb
inc
xor
adcl
mov
inc
xor
in
push
jl
jne
iret
jl
clc
adc
fstps
pop
and
fisttpl
pop
xlat
xchg
shl
pusha
idivb
xor
jge
aam
dec
jo
xor
push
arpl
push
pop
adc
jae
stos
jb
mov
rcrl
fs
mov
inc
pop
xor
lea
in
mov
out
arpl
je
xor
xchg
ret
test
fwait
xor
xor
jo
pop
popf
sub
hlt
lock
lret
fdivrs
push
xor
xchg
xor
add
adc
xor
or
xor
push
test
inc
xor
scas
push
or
movsl
mov
adc
nop
adc
fdivs
aam
scas
in
stc
and
mov
sub
icebp
int3
loope
aad
movsb
mov
fwait
dec
cld
push
jbe
push
pop
leave
pop
mov
mov
adc
xchg
mov
dec
xor
sub
arpl
mov
push
cs
gs
fucom
je
adc
fiaddl
pop
mov
aad
test
mov
mov
in
dec
mov
fidivl
test
dec
cmp
clc
hlt
mov
pop
shll
xchg
push
inc
xor
sub
in
out
cld
cmpsb
xor
lock
lds
dec
mov
out
xchg
das
ficompl
push
in
jecxz
mov
mov
mov
aas
scas
cs
test
and
xor
in
arpl
mov
sahf
clc
xor
cmp
push
xor
mov
insl
in
das
movsb
sub
int3
cmp
add
sbb
in
mov
and
sbb
mov
add
data16
inc
pop
popf
hlt
out
add
xchg
push
bound
xor
cmp
cmovg
xor
sub
mov
or
cmp
xchg
and
sbb
hlt
cwtl
enter
nop
xor
stc
sbb
in
std
ret
xor
fcmovbe
push
fidivrs
aad
int3
add
jl
fs
popa
gs
and
push
add
pop
xor
insb
inc
adc
ja
fbstp
outsb
sub
insl
in
fadd
push
xor
sahf
mov
lock
out
or
xchg
push
xor
cwtl
push
add
xor
in
int3
adc
sahf
or
orb
test
xor
inc
movsb
cmpsl
lea
push
xor
mov
clc
xchg
pop
sub
xor
dec
popf
testb
lock
xor
hlt
iret
jmp
das
xchg
push
mov
xor
xchg
mov
mov
in
mov
popa
cmpsl
dec
lock
xor
leave
std
dec
cltd
out
jns
xchg
in
jbe
int3
pop
pusha
xor
js
ret
clc
hlt
xor
inc
jge
bnd
jecxz
mov
mov
or
or
repnz
fistps
sub
lret
sub
xor
cmp
movsb
pop
mov
cmp
xchg
push
adc
xchg
cmc
int3
or
xchg
loope
ss
repnz
adc
cmp
filds
xor
cmp
out
mov
push
loop
push
mov
aad
dec
movsl
test
push
pop
aas
xor
outsb
xor
add
fdivrl
xor
push
jno
mov
int3
cmp
pusha
push
ljmp
mov
sbb
mov
adc
fildll
gs
pop
push
aam
and
xor
or
xchg
sub
pushf
xor
mov
or
sbb
cmp
dec
divb
sbb
leave
mov
xor
dec
lahf
cmc
add
or
xor
lret
mov
test
lret
sysenter
pop
mov
popf
mov
cmp
rcr
xor
lods
add
data16
outsb
cmp
stc
inc
sti
mov
cltd
inc
push
das
dec
stos
adc
sbb
js
pop
aam
cmp
push
fs
ret
xchg
out
mov
inc
inc
dec
mov
test
mov
pop
inc
sbbb
add
movsb
add
outsb
xchg
xor
cmp
add
mov
int3
adc
xor
mov
movsl
xor
pop
sti
fcomi
xor
or
test
pop
je
fs
out
jne
sti
push
jecxz
mov
sub
and
adc
nop
push
mov
jmp
in
add
lahf
xor
mov
in
sbb
mov
add
sbb
jno
mov
mov
mov
sub
int
xchg
xor
dec
stos
out
nop
jne
divb
push
add
add
sbb
aam
fwait
outsl
xor
xor
xorb
xor
movsb
popa
imul
pushf
cli
add
hlt
and
xor
jg
adc
aas
jno
mov
cwtl
adcb
xor
fsubrs
lret
pop
out
sub
push
mov
fwait
cmp
pushf
lock
xor
or
sbb
pop
leave
cmpsb
adc
aad
lcall
xor
in
xchg
stos
xor
mov
out
inc
cltd
hlt
xor
inc
divl
xor
or
add
fiaddl
cli
jge
subl
push
aaa
jge
fidivl
mov
shl
cld
adcb
push
mov
int3
dec
push
or
mov
cmp
xor
sub
ljmp
sbb
or
or
pop
mov
xchg
daa
add
pusha
enter
xchg
sbb
xor
ret
lock
jl
xor
add
mov
xor
inc
sbb
sub
stc
lahf
xor
adc
and
dec
enter
inc
icebp
int
jecxz
push
mov
cmp
addr16
mov
cmp
movsb
dec
xor
adc
lods
lock
es
lock
xchg
xor
cmpsb
iret
imul
movsl
add
jle
les
pop
mov
fstpt
add
dec
jne
xor
dec
ror
pushf
and
mov
pop
push
push
cs
sub
cmp
test
int
mov
popf
dec
mov
xor
pop
pop
hlt
out
sub
cld
pop
daa
mov
mov
sti
dec
ljmp
jbe
adc
add
add
sahf
xor
enter
pop
sub
or
or
cmp
lock
cmp
push
fisttps
lods
mov
cs
fwait
xchg
rclb
mov
mov
cli
es
mov
cmp
xor
add
stc
xor
loopne
fisubl
push
sbb
dec
mov
adc
cmc
into
jmp
leave
xor
bound
in
inc
inc
add
dec
xor
rol
mov
xor
jns
jl
cmp
scas
sbb
pop
sbb
push
dec
jge
adc
jo
pusha
mov
mov
je
rclb
repz
jns
xor
xchg
xor
mull
xor
movb
stc
sbb
sbb
add
popa
xor
mov
jge
inc
fdivr
xor
and
or
fwait
dec
test
mov
je
xchg
inc
xor
jl
add
and
outsb
push
jge
clc
pushf
push
loopne
sub
imul
or
xor
xor
inc
push
pop
loope
pop
dec
mov
mov
cmp
pop
dec
leave
inc
mov
add
adc
xor
cmp
pop
int
scas
push
js
xor
adc
sub
outsb
test
sbb
arpl
or
jl
xor
mov
inc
in
rol
xor
addr16
cld
pop
subb
shlb
sbbb
inc
lock
push
stos
xor
cmp
sahf
mov
and
mov
fisttpll
movsb
mov
in
mov
pop
fdivs
mov
inc
xorb
inc
mov
sgdtl
vunpckhps
cs
mov
jecxz
hlt
in
xchg
push
mov
push
push
xor
add
sub
shll
inc
mov
or
xchg
adc
mov
sti
cmp
sbb
stc
pop
je
sbb
js
div
pushl
xchg
pop
test
cmp
mov
popa
hlt
adc
scas
cmp
loope
stc
fsts
push
idivb
es
mov
cmc
xor
scas
cmp
cmp
test
loop
push
test
aam
sbb
movsb
lret
adc
xor
sub
xchg
mov
sysenter
imull
aam
xor
sbb
filds
test
mov
call
and
pop
push
xor
test
in
xchg
xchg
xor
aam
cmpb
pop
dec
jnp
test
xor
notb
mov
pop
and
inc
xor
push
in
mov
lret
in
pusha
jbe
lea
sbb
mov
cmp
push
cmc
repz
out
cmpsb
push
and
xor
mov
jmp
dec
pop
sbb
out
shlb
out
jae
push
sbb
push
mov
and
fadds
shll
lods
mov
hlt
or
inc
xchg
clc
dec
xor
and
stc
call
xor
cmp
fcoms
mov
lret
outsb
fwait
push
ljmp
jne
push
pop
xor
inc
imul
hlt
inc
test
in
dec
shl
dec
pop
test
xchg
jp
out
dec
push
shrl
jbe
push
mov
pop
xor
push
ljmp
xor
insb
jo
fcoms
xor
out
mov
jmp
fnstsw
add
xchg
sar
xor
sub
adc
mov
popa
xor
pop
jne
push
movsb
inc
daa
cmc
mov
cmpsl
mov
pop
xchg
sub
cmp
xor
cmpsb
ficomps
popf
mov
mov
cmp
lret
adc
fs
add
dec
outsb
dec
push
pop
add
inc
jge
mov
aaa
or
push
xor
xor
pop
xor
add
jbe
xor
dec
xor
xchg
sub
testl
mov
outsl
call
sbb
dec
jb
jns
inc
imul
adc
repz
fdivl
pop
leave
cltd
jl
add
xor
push
lret
ret
mov
and
sarb
add
sub
std
cmp
xor
addr16
mov
push
cmp
fisttpll
out
xor
add
ret
pop
stos
cli
imul
xor
dec
mov
rcll
cmpsb
adc
sbb
jmp
je
inc
sub
loop
sub
fwait
jns
jge
in
adc
ds
pop
outsl
shll
loopne
mov
xor
dec
addr16
xor
mov
inc
and
lret
ret
pop
sub
xchg
hlt
sbbb
push
xchg
jbe
mov
jno
xor
orl
fs
pop
in
sub
xor
cmp
mov
movsl
outsb
jle
out
mov
or
pushf
fs
cmp
xor
int3
lods
xchg
jg
das
add
arpl
xor
cmp
sub
ja
repz
in
je
pop
std
je
mov
xor
mov
into
add
and
xor
ja
sbb
test
fdivl
fs
mov
pop
testl
ds
fbstp
enter
mov
lea
sub
inc
scas
xor
leave
mov
adc
cli
pop
adc
pop
or
inc
cld
fisubrl
mov
ret
add
sbb
js
dec
insl
sbb
ljmp
xor
pop
outsb
mov
push
lea
fs
outsl
jp
jecxz
xor
out
and
imul
xor
lds
pushf
test
into
stc
test
divl
xchg
xchg
pusha
out
sbb
mov
popf
test
cmp
add
leave
push
mov
cmp
cmpsl
scas
sbb
rcrl
push
dec
cmp
push
cmc
pop
lcall
mov
leave
jecxz
and
out
outsb
cwtl
lods
inc
adc
sbb
pop
add
jl
or
xor
sbb
aas
mov
cmc
xor
pushf
fsubl
pusha
fwait
int3
loop
stc
inc
xor
aaa
xchg
dec
inc
xchg
adc
nop
fbstp
ljmp
inc
out
pop
mov
fmull
xor
inc
cltd
test
cmpsb
adc
add
sti
js
jle
xor
and
mov
shl
sbb
icebp
xor
jo
std
mov
inc
or
adc
xor
mov
add
cltd
push
mov
dec
jae
hlt
xor
ljmp
loopne
jecxz
out
imul
xor
xor
xchg
and
mov
lret
cmpsl
inc
xor
stc
fs
pop
pop
add
jle
int
in
add
iret
mov
adc
out
pop
inc
xor
xchg
mov
xorl
ret
rdmsr
xor
jmp
push
sbb
mov
sbb
cmp
cmp
testb
enter
xor
and
test
sub
call
data16
add
call
sub
sbb
loop
pop
push
mov
movsb
in
xor
std
mov
inc
pop
pop
adc
adc
xorb
xchg
ss
push
xor
outsb
pop
das
lods
dec
adc
ficoms
xor
pushf
daa
jecxz
popf
seta
into
lcall
push
enter
jmp
sbb
cli
gs
imul
fwait
push
pop
push
int3
mov
xchg
ret
jge
cmp
pop
fdivl
lods
popa
clc
add
fstpl
mov
xchg
sub
adc
mov
mov
les
je
xor
dec
and
insl
xchg
movsb
push
les
sub
rol
aam
insb
data16
ds
in
js
pop
add
mov
clc
out
add
fnstcw
xor
out
imul
lahf
sub
or
cmp
push
pop
movsl
les
xchg
bound
push
xchg
mov
aas
mov
movsb
leave
adc
mov
fsubl
xor
lret
xchg
jecxz
or
rcrb
jb
fimuls
mov
les
arpl
dec
cmp
adc
push
and
xor
add
xlat
xor
lret
repnz
das
xor
insb
xchg
sub
pop
sub
rorb
lock
and
push
cmpsl
and
xor
xor
lcall
xor
xor
push
cmp
add
xor
pop
jl
mov
stc
int3
scas
aas
sbb
push
mov
or
rorb
or
mov
xor
adc
sahf
adc
cld
lods
insb
std
je
hlt
xor
sbb
fcomp
sub
xchg
push
dec
mov
mov
xor
inc
sbb
xchg
xchg
mov
pop
sbb
sbb
xor
xchg
xchg
mov
movsb
push
xor
mov
cli
ss
fildl
or
xlat
loope
xchg
mov
aas
mov
imull
push
mov
pushf
push
or
mull
sahf
mov
adc
dec
fistl
mov
loopne
mov
xlat
push
icebp
je
mov
mov
lahf
int3
xchg
adc
inc
std
mov
jmp
mov
inc
xor
es
repnz
sub
xor
and
les
mov
sti
hlt
mov
ds
adc
mov
insb
shl
push
scas
add
xchg
xor
dec
insl
shll
lds
popa
and
dec
fistpl
sti
add
iret
mov
test
ljmp
xor
outsb
out
mov
les
shrb
xor
push
adc
jge
jnp
xor
mov
jne
sbb
inc
xor
test
lods
jle
movb
jnp
mov
lahf
dec
jns
xor
int
bound
mov
xor
pusha
sbb
jb
lea
movsl
sbb
adc
shrl
test
pop
and
ljmp
in
lods
push
sub
xor
cmp
inc
push
adc
adc
test
pushf
pop
push
stos
jp
xor
mov
or
push
in
cmp
jg
xor
int
lods
es
inc
fadds
pop
sbb
je
adc
xor
mov
adc
test
mov
arpl
sub
xchg
icebp
xchg
or
xchg
sub
xor
xchg
repz
dec
or
clc
and
sbb
mov
add
sbb
jg
mov
loop
mov
stc
or
mov
dec
imul
jg
icebp
sub
cmp
je
fwait
pop
add
pop
or
push
je
pop
pop
scas
mov
inc
jge
mov
lock
pop
adc
or
aaa
dec
mov
cmp
test
sub
inc
ret
mov
data16
sub
xchg
jle
adc
push
xor
je
xor
popa
in
into
in
es
mov
inc
xor
cmp
int3
cmpsl
pop
xor
aam
mov
jbe
outsb
xor
cmp
sarb
ljmp
push
hlt
mov
stos
mov
add
adcb
xchg
xor
dec
xor
popa
pop
xlat
in
and
cli
imul
add
xor
mov
lods
nop
jae
sub
fdivl
adc
cmp
popf
jl
cmp
js
push
jge
cmpl
adc
sbb
pop
push
andb
scas
mov
cld
lcall
xor
pop
div
push
mov
inc
xor
das
jne
hlt
ret
in
xor
or
xor
stos
pop
adc
insl
push
xor
outsl
cmp
mov
cmp
shrl
cmc
sti
aaa
adc
mov
xor
test
mov
push
lods
int3
lods
imul
outsl
push
sub
add
pop
mov
sti
pop
out
sub
pop
hlt
lea
clc
sbb
pop
rclb
push
adc
fdivrs
mov
scas
xor
btr
pusha
test
mov
inc
jl
ror
xor
leave
loope
xor
adcl
xor
js
sub
jg
loop
pop
imul
lods
push
sub
movsl
adc
inc
cmp
inc
xchg
fsubs
jb
mov
adc
je
push
lahf
mov
sub
cmp
mov
push
fiadds
add
xor
sbb
pop
inc
add
or
and
jbe
mov
movsb
lock
jne
mov
mov
push
jle
sar
add
xor
stos
adc
fincstp
jmp
jg
pop
xchg
out
cld
jae
imul
or
hlt
xchg
push
mov
popl
int3
cmp
inc
xor
ja
iret
sbb
fnstenv
jbe
jae
inc
hlt
call
pop
ret
gs
stc
inc
xor
bound
push
sti
add
xchg
je
je
lahf
stc
adc
push
int
pop
sbb
dec
pop
aaa
repz
lock
mov
xor
iret
push
mov
inc
cmc
jno
dec
fdivs
das
lcall
mov
sub
push
sbb
dec
in
xchg
dec
and
mov
xor
push
xor
out
insb
xchg
xor
pop
and
xchg
or
fdivrl
popf
or
push
mov
push
push
hlt
pop
and
aam
scas
xor
mov
sbb
xor
movb
xor
outsb
sub
test
fcmovb
notb
xor
cs
fmull
inc
xor
cmp
sub
inc
ret
pop
repz
enter
push
xor
jl
stc
add
sahf
add
jnp
pop
mov
aaa
mov
ja
mov
inc
test
adc
mov
mov
je
cmp
mov
lock
push
push
ljmp
mov
xchg
xor
int3
fcompl
insl
cmp
divb
cmp
cmpsb
rcl
adc
xor
pop
repz
sub
out
ds
and
repnz
dec
in
pop
test
and
mov
push
cmpsb
mov
mov
adc
testl
xor
imul
xor
rcrb
inc
push
sbb
int
out
mov
das
orl
and
out
iret
pushf
jmp
mov
xor
shr
movsb
mov
adc
imul
fstl
push
cmp
adc
fsub
and
jns
xor
stc
xlat
hlt
imul
sbb
jae
mov
nop
pop
movsl
add
popf
push
cmp
cld
push
cmp
jl
xor
insl
inc
scas
mov
push
lret
jecxz
push
cld
outsb
inc
mov
push
push
jl
clc
std
xor
jne
sbb
xor
shlb
loope
push
mov
xchg
adc
movsb
mov
add
cmp
pop
and
mov
in
icebp
imulb
frstor
clc
and
add
xor
and
inc
push
mov
push
pushl
push
icebp
mov
sub
inc
xor
sbb
xchg
mov
dec
das
and
jg
loope
inc
add
aam
xchg
loop
inc
imul
jb
mov
test
xchg
shl
inc
jnp
xor
jo
adc
jl
xchg
jbe
fistl
nop
mov
push
sti
push
lahf
xlat
push
push
hlt
fcomp
lret
cmp
xor
jecxz
data16
mov
imull
sub
sub
dec
mov
dec
mov
pop
xor
cltd
mov
xor
sahf
fdivrp
iret
inc
daa
call
inc
adc
lahf
mov
xor
cmpb
daa
movsb
cmp
inc
jl
jne
imulb
aas
adc
adc
xchg
xor
leave
pop
cmc
jbe
insl
xor
repnz
mov
xor
aaa
inc
mov
push
int3
jns
pop
es
aas
test
data16
lea
es
dec
cmpsl
jg,pn
pop
xor
mov
loopne
scas
xor
leave
enter
in
mov
lods
je
cmpsl
mov
adc
sbb
push
into
dec
cmp
bound
scas
sub
cmpsl
nop
xor
dec
out
orl
adc
rcrl
xor
adc
aam
out
ss
mov
lahf
xor
pop
pop
pop
mov
out
lds
pop
fcmovb
stc
push
xchg
and
aam
adc
sahf
or
or
push
fwait
xor
sbb
imul
xor
and
fsubl
in
dec
jl
sbb
arpl
push
push
test
push
aas
inc
das
xor
mov
or
dec
xchg
rcll
repnz
nop
adc
xchg
pop
cli
push
mov
ja
adc
xchg
ret
push
adc
mov
push
sub
outsb
pop
imul
push
push
hlt
test
dec
sti
inc
inc
mov
jge
add
jno
int3
mov
jg
lahf
xchg
and
repz
dec
mov
je
icebp
cmpsl
imul
cmpb
xor
lea
out
inc
nop
cli
xor
sahf
ffree
pop
addr16
push
mov
xor
mov
pop
mov
cmp
push
idivb
ret
or
adc
mov
sbb
push
mov
mov
xor
push
cmp
push
adc
inc
xor
mov
stos
push
sbb
push
cli
into
push
cmc
insb
xor
jp
loopne
xor
adc
out
test
add
mov
pop
mov
into
es
xor
shl
push
pushf
stos
stc
jnp
mov
jns
cmp
adc
out
call
fadds
mov
iret
ljmp
in
mov
xor
and
stos
cmp
arpl
pop
jecxz
mov
xchg
data16
dec
cltd
or
ret
insl
mov
inc
adc
outsb
jp
std
out
mov
sub
mov
insl
lea
mov
sub
pop
inc
xor
cmp
jae
imul
mov
shll
enter
pop
jno
icebp
inc
jecxz
xor
fucomi
in
xor
or
xchg
and
cmp
add
push
push
push
arpl
push
fistps
push
sar
xor
push
adc
je
imul
out
pop
es
hlt
ljmp
repz
out
or
sub
into
mov
mov
test
lods
mov
xor
ds
push
mov
cmp
clc
stos
out
xor
fcoms
pop
ja
pop
mov
xor
jb
scas
push
pop
and
les
mov
push
mov
das
mov
xor
and
jmp
add
fcoml
xor
std
push
or
outsb
inc
adc
push
test
mov
ss
sbb
mov
scas
lcall
push
lahf
fnsave
dec
ret
mov
adc
icebp
in
lret
pop
push
bound
dec
push
mov
pop
mov
divl
std
cmpsb
arpl
test
sete
test
pusha
cmp
mov
jae
stc
hlt
arpl
sbb
lods
pop
push
std
adcl
add
mov
lret
pop
inc
push
xchg
aam
mov
cli
hlt
mov
stos
test
pop
sbb
insl
mov
mov
arpl
adc
fdivrl
pop
push
pushf
ss
jae
pop
jne
push
lret
xor
sub
cli
popf
call
ss
xor
pushf
mov
inc
clc
xchg
push
mov
adc
xor
push
lds
and
das
imul
lahf
add
cmpsb
out
gs
push
pop
sbb
cmp
icebp
xchg
dec
adcl
inc
fiadds
scas
clc
jbe
xor
gs
add
loop
mov
sub
or
and
sub
mov
sub
adc
push
cmp
mov
insb
and
dec
xor
sub
pop
fs
ret
mov
sub
push
lock
cmpsb
sahf
jle
cltd
mov
in
mov
mov
rcrb
or
repnz
push
adc
or
xor
or
imul
mov
xchg
mov
xor
inc
inc
loopne
mov
and
test
in
push
jge
fwait
js
pop
push
pop
xor
sbb
pop
out
aam
cmpsb
xor
in
inc
daa
cmp
inc
mov
cmc
bound
jns
aaa
push
jae
aam
pop
leave
xor
fists
nop
pop
and
in
cwtl
adc
lahf
shll
push
sbb
or
xor
ficoml
xor
ss
xchg
cmpsl
scas
xor
insl
lock
sub
das
test
xor
adc
leave
shr
test
pop
test
push
and
jg
mov
out
mov
daa
sub
sar
cmp
xchg
sbb
push
or
insb
in
in
pop
ret
xor
xor
push
adc
je
adc
jmp
push
shll
mov
xchg
je
push
xchg
xchg
sbb
in
aaa
xor
and
data16
xchg
or
xchg
xor
sti
inc
ret
out
pop
push
and
xchg
jne
fldl
xchg
les
in
imul
test
mov
mov
cwtl
rorb
xorl
sbb
js
loopne
pop
mov
insb
pop
push
arpl
push
adc
jo
test
movsl
sbb
push
xchg
mov
add
rclb
aad
inc
aas
pop
jp
enter
pop
add
lcall
ret
repnz
hlt
mov
sub
dec
push
js
mov
test
dec
out
fbstp
and
pop
push
sbb
outsb
adc
jns
in
test
js
lahf
cmpsl
push
mov
or
mov
dec
xchg
mov
cmp
popa
iret
xor
mov
mov
mov
mov
inc
mov
push
mov
pop
rorb
fildl
ret
test
xor
arpl
rolb
cmp
sbb
test
push
mov
mov
and
rcll
notl
cmp
ret
xor
out
and
sahf
lret
mov
mov
push
lret
ret
insl
stos
lcall
and
add
movsl
neg
pop
jo
test
jp
lods
aad
cmpsb
xor
ljmp
out
stos
in
es
and
xchg
cld
mov
xor
iret
cmp
lcall
or
mov
push
pop
outsl
mov
xor
inc
mov
out
sbb
lcall
clc
push
and
dec
sbb
test
sbb
or
aad
insl
cmp
jecxz
xor
pop
cmc
mov
mov
out
loop
xor
pop
cs
mov
xchg
insb
hlt
scas
push
jne
leave
das
xor
cwtl
cmpsl
sbb
mov
pop
movsb
pop
xchg
xchg
idivl
add
dec
mov
cmp
push
push
xchg
xor
scas
mov
out
ss
int3
xor
jecxz
rclb
and
stos
xchg
cmp
xor
test
jae
divl
cmp
mov
fists
stos
cmpsl
mov
pop
xor
inc
lret
movsb
sub
xor
mov
pop
pop
hlt
xlat
mov
aas
pop
cmp
xor
sub
or
clc
add
movb
mov
out
aad
xor
lret
dec
loopne
jo
add
cltd
aas
jle
enter
mov
test
mov
outsl
lahf
cmpsb
pop
push
jae
hlt
dec
xlat
or
movsl
negl
gs
pop
fstl
inc
scas
and
xchg
dec
jle
push
rcrl
sub
dec
lahf
loop
cmp
push
xor
dec
out
lret
cmpsl
mov
xor
ss
or
ret
sub
push
push
aam
xor
movsb
pop
loope
in
test
in
add
ljmp
sarb
xor
test
add
sbb
cmp
xor
mov
push
inc
in
mov
loop
jno
inc
push
jne
mov
mov
popa
cmp
xor
jns
lahf
push
mov
imul
mov
lahf
popa
clc
mov
and
mov
xor
fdivs
dec
xor
loopne
inc
push
int3
xor
rcrl
xchg
mov
jne
test
mov
adc
pop
pop
leave
sbb
clts
inc
xchg
je
aam
out
xor
pop
mov
std
jmp
clc
ret
orl
cmpsl
mov
push
mov
xor
push
pushf
sub
adc
leave
lret
mov
xor
xor
sti
pop
mov
push
cmp
adc
sub
jae
and
fldcw
repz
jle
call
push
out
pop
outsl
or
dec
test
test
icebp
pusha
xor
sbb
mov
xor
mov
lods
lock
cmp
xor
push
mov
stos
pop
call
xchg
mov
xchg
and
mov
pop
mov
dec
push
xchg
jmp
dec
enter
xor
out
sub
xor
mov
sbb
inc
je
jmp
xor
negl
clc
loopne
in
es
xor
mov
sbb
pop
sbb
in
cmp
push
mov
clc
xor
mov
jo
sarl
pop
orb
int3
lret
pop
test
inc
push
into
ss
mov
xchg
test
jo
or
repnz
neg
mov
fistps
xor
push
adc
push
xor
cmp
aad
sub
pop
adc
inc
or
test
push
mov
add
xor
xacquire
faddp
out
dec
je
or
xchg
xor
mov
enter
aam
jbe
mov
clc
aas
push
push
sub
xor
in
jge
scas
or
outsl
sub
xor
in
loopne
push
push
adc
xor
jg
jae
xor
sub
jne
add
jmp
pop
mov
imul
pop
dec
in
xchg
movsl
mov
lods
xor
out
movsb
sub
ret
ds
sub
and
shlb
dec
mov
pop
fdivs
into
mov
or
test
mov
jl
xor
test
movsb
push
int
ds
lret
lahf
xor
ljmp
xor
ror
das
xor
push
rclb
hlt
pushf
add
insl
push
fdivr
shll
xor
test
mov
xchg
loope
adc
adc
pop
arpl
fstl
sub
xor
lods
loope
and
xor
push
pushf
dec
mov
pusha
lret
fists
xchg
xchg
sbb
lods
pushf
xchg
sub
jle
mov
aam
dec
in
xor
das
scas
add
add
adc
add
jmp
lock
jl
inc
xor
js
dec
dec
mov
xchg
mov
imul
and
xor
movsb
loop
aas
daa
into
jnp
enter
inc
xchg
lea
dec
stc
sub
adc
pop
jl
loop
cmp
call
cmc
adc
daa
mov
xchg
scas
repz
insl
in
mov
ljmp
push
mov
cmc
xchg
jne
daa
push
in
fisttpll
aam
cwtl
cmp
xor
inc
xchg
test
fistps
sbb
mov
mov
sbb
xchg
add
sbb
mov
jnp
mov
pop
imul
aam
mov
test
mov
loopne
gs
stc
and
jbe
jmp
mov
sbb
sti
pop
sbb
mov
mov
enter
xor
fwait
push
dec
into
xor
mov
sbb
sub
mov
addr16
movsb
je
rorb
sub
js
xchg
sub
dec
ret
pusha
xor
pop
xchg
cmp
mov
cld
inc
push
mov
mov
cmp
repnz
xor
xchg
pop
push
pusha
roll
cmp
xor
jnp
mov
mov
les
sbb
cmp
mov
stos
pop
sub
data16
pushf
repnz
mov
ss
adc
jl
loope
xchg
sbb
xor
push
sbb
ss
out
adc
daa
inc
lret
mov
push
aad
xor
or
call
adc
jl
pop
pop
inc
mov
stc
imul
movsb
cmpsl
mov
mov
ja
or
jmp
popf
xor
sub
xlat
fnstsw
out
insl
adc
jne
and
pop
lods
ljmp
test
arpl
mov
jp
pop
aas
or
hlt
into
add
jno
hlt
xor
inc
xchg
xchg
cmpsb
in
xlat
xor
jns
out
aam
subl
xor
pop
fidivrs
test
mov
fs
mov
cmp
out
repnz
ret
and
add
jg,pn
push
pop
loop
xlat
es
cmpsl
xor
lea
rcl
jle
and
sub
jne
xor
inc
mov
xorb
sti
clc
lods
ret
sahf
jp
fisttps
faddl
mov
xchg
xor
jge
call
flds
loope
mov
pop
xor
and
xor
out
out
mov
adc
push
mov
shrb
dec
pop
mov
mov
rorl
pop
mov
mov
adc
lods
fdivs
xchg
mov
mov
dec
ret
xchg
addr16
data16
mov
or
jbe
adc
stc
xor
push
pop
xor
loopne
adc
negb
xor
jmp
mov
adc
xor
inc
cmpsb
imul
push
mov
mov
pop
jle
cmpsl
mov
pop
aaa
xchg
add
sbb
push
test
sub
repz
xor
jo
or
mov
mov
aad
xor
and
ss
mov
icebp
andb
lds
xchg
inc
ja
out
gs
ret
flds
sub
leave
mov
dec
xor
push
xchg
mov
and
insl
xor
add
xor
mov
rcrl
cld
test
std
ljmp
test
negl
push
inc
xor
dec
xor
xor
xchg
repnz
cmpsb
xor
cmp
jge
xor
pop
jecxz
and
and
mov
test
lods
pop
out
and
xchg
sbb
sbb
xlat
mov
xor
push
repnz
cmpl
lahf
cmp
hlt
hlt
pop
stos
filds
xor
mov
inc
xor
and
imul
andb
cmp
iret
cld
pop
jns
mov
pcmpgtd
sub
aad
cmp
pop
inc
jne,pn
cltd
popf
mov
ja
loope
xor
ss
movsb
dec
pop
fistpll
cwtl
xlat
xchg
pop
cs
push
sbb
sub
leave
popf
cmp
adc
pop
inc
mov
out
push
addr16
lock
push
xor
testb
xor
push
xlat
mov
mov
pop
xor
scas
xor
aad
push
xor
inc
inc
xchg
xor
mov
movntq
mov
sahf
pop
mov
xor
das
adc
test
xor
enter
rcrb
sub
push
mov
repz
into
xor
rcr
pop
mov
andl
add
iret
adc
xor
inc
outsb
out
mov
mov
jno
push
xor
cmpsl
ja
sbb
xor
xor
repz
inc
jb
shl
es
aad
dec
xor
adc
mov
push
fistpl
je
inc
mov
fs
sti
xchg
xor
inc
pop
sub
fistps
sbb
nop
dec
divb
dec
add
xor
mov
pop
frstor
shrb
xor
fiadds
jno
xchg
lods
mov
cmc
jl
xor
movsl
xchg
bound
sub
clc
mov
xor
sbb
outsl
gs
call
add
sbb
iret
stos
fstl
in
jp
or
into
sahf
insb
dec
lea
xor
unpckhps
xor
addb
stc
pop
pop
pop
dec
gs
leave
dec
loop
les
sbb
mov
add
xor
sahf
pop
adc
addr16
xor
pop
mov
inc
cmc
in
mov
fistl
loop
adc
jl
sahf
push
imul
add
out
push
outsb
xor
imull
xchg
push
sub
aas
in
fs
push
stos
pop
push
lock
xor
push
movsb
cwtl
xchg
outsl
pop
adc
sbb
and
sub
mov
xlat
adc
in
xor
mov
dec
xchg
xor
xor
notl
in
xchg
dec
mov
xor
xchg
stos
mov
mov
pop
shlb
inc
and
pop
sbb
shll
clc
popa
outsb
push
jbe
pop
cli
cltd
mov
and
xor
ljmp
out
daa
jno
hlt
add
mov
mov
xor
xor
adc
or
xchg
xor
mov
push
push
outsb
pop
sub
sbb
push
je
add
xor
mov
test
sub
cmp
jns
xchg
xor
and
xchg
xor
adc
jbe
add
out
sysenter
dec
lock
nop
sarl
test
xchg
inc
aad
dec
mov
out
sbb
or
out
mov
mov
mov
sub
xor
or
dec
mov
xor
pop
xor
adc
insb
rcl
xchg
pop
arpl
adc
mov
mov
ja
xlat
rcrb
and
out
mov
lret
mulb
xor
xor
xchg
int
or
leave
mov
xor
cld
xchg
pusha
sbb
xor
dec
jae
aad
fadds
xor
mov
sarb
xchg
into
pop
shrb
popf
xor
lods
les
mov
xor
jo
test
pop
push
scas
xor
jb
int3
push
inc
not
or
xchg
xchg
jae
jb
dec
jno
dec
div
imul
repnz
je
jg
push
cmpsb
loop
aad
and
adc
add
sbb
repnz
jmp
pushf
push
push
sti
xchg
movlps
imul
jecxz
xor
out
and
je
or
mov
mov
dec
outsl
push
and
ffreep
faddl
fldt
sbb
fldenv
or
xor
iret
mov
xchg
mov
pop
out
pop
push
and
mov
jo
inc
xchg
sub
je
cmpsl
mov
or
mov
test
imul
xchg
ss
aam
sbb
push
fwait
mov
xor
sub
add
push
xchg
mov
sub
push
fstps
lds
pushf
pop
xor
in
inc
pop
cmp
test
out
xchg
je
mov
insl
xor
js
xlat
pop
loope
repnz
lds
and
jmp
out
xchg
pop
scas
mov
stos
call
shlb
sbb
cmpsl
jp
std
popf
xor
xor
cmp
jge
bnd
es
inc
sub
fldcw
stos
cltd
xchg
jecxz
cld
mov
xor
movsl
jno
imul
ljmp
jmp
mov
xor
push
jp
mov
icebp
cwtl
mov
jl
pop
mov
inc
mov
xor
ljmp
xor
and
sahf
xor
xchg
and
push
adc
stos
je
jmp
xor
mov
add
xor
jns
jne
xor
sbb
pop
mov
cmp
clc
aaa
sbb
sar
hlt
jmp
xor
out
jg
pop
movsl
iret
fwait
xor
xchg
pop
sbb
into
xor
les
out
rcrl
je
out
addr16
cmp
es
cld
jge
scas
mov
insb
je
test
gs
inc
shrl
je
cmp
xor
add
and
out
xchg
xor
aad
inc
push
sub
cli
out
pushf
add
cwtl
hlt
inc
lret
push
cli
stc
add
or
xchg
mov
xor
or
jo
jg
xor
daa
inc
dec
les
fldenv
pop
add
inc
insl
sub
push
fsubp
mov
xchg
push
addr16
or
xorb
inc
jmp
mov
fs
jo
dec
cmp
je
call
aam
mov
jle
add
int
lds
mov
jge
pop
icebp
push
or
inc
test
lods
and
push
and
loope
mov
sbb
xor
fwait
push
and
xor
insl
inc
cmpsl
pop
mov
push
clc
out
and
inc
inc
stos
clc
scas
jns
xor
mov
shlb
or
inc
add
jns
ret
ret
and
push
mov
inc
jns
in
nop
cltd
cmpsl
rcl
movsb
into
xor
push
out
xor
xorb
xor
in
ja
subl
outsl
xor
filds
dec
cltd
popa
or
xor
ljmp
fcomps
xor
test
cld
xor
push
sbb
lods
mov
lahf
mov
dec
push
shll
aad
ljmp
lods
jo
lock
xor
add
mov
sbb
sbb
mov
mov
call
or
ret
adcb
mov
dec
pop
and
inc
fdivr
jp
pop
dec
imul
inc
xor
jne
or
fs
fsub
xchg
adc
inc
in
add
push
and
xor
jae
stc
mov
sub
pop
out
icebp
loopne
cli
push
test
pop
sti
cmp
xor
or
dec
out
push
std
stc
xor
mov
dec
sub
and
lret
xlat
pop
stos
xor
fidivrs
arpl
mov
pop
enter
outsl
xor
push
dec
push
cmp
inc
sub
mov
xor
mov
mov
fadd
popf
and
pop
mov
inc
stos
int3
cld
push
sbb
into
adc
repnz
inc
xor
hlt
xor
fbld
jne
loope
dec
leave
fcoml
fcomps
jmp
nop
push
xor
and
adcb
cltd
xorl
outsb
xor
xor
roll
jnp
jb
jg
xchg
push
sbb
pop
in
ljmp
pop
xchg
fcomps
sub
xor
mov
xor
lods
dec
gs
mov
ficoms
mov
imul
hlt
xchg
dec
pop
mov
test
jnp
movl
test
leave
ret
arpl
adc
mov
sub
xor
push
xchg
sahf
and
lods
xor
call
adc
pop
dec
pop
mov
sahf
and
xchg
mov
xor
shl
push
dec
add
mov
jge
cmp
mov
insb
mov
xor
adc
dec
sbb
adc
xor
add
xchg
pop
aaa
xchg
mov
sbb
push
sbb
adc
lcall
pop
fbstp
dec
inc
in
pusha
fcompl
stos
xlat
mov
mov
xor
sub
iret
mov
jle
xor
sbb
xor
inc
into
lret
cld
js
adc
pop
cmp
cmpsl
dec
lds
nop
out
lea
mov
push
dec
jl
pop
sti
jae
add
aam
gs
sub
adc
push
mov
scas
xor
adc
lea
stos
xchg
push
xor
ret
sub
movsl
clc
sub
xchg
inc
add
pop
sbb
scas
xor
mov
or
dec
add
adc
popa
or
dec
xchg
mov
xor
insl
shr
mov
cmp
int3
sbbb
push
out
inc
sysenter
test
push
adc
mov
lret
test
add
addl
ret
push
adc
push
imul
test
pushl
pop
push
addr16
out
lcall
mov
in
dec
leave
xor
sbb
mov
ret
jle
movsb
addr16
pop
test
inc
sbb
adc
out
xchg
xlat
xchg
iret
lods
add
mov
test
xor
mov
jnp
mov
je
clc
icebp
dec
jae
les
test
xor
jnp
arpl
rcr
les
push
lret
sub
and
mov
xchg
nop
divb
mov
hlt
mov
insb
mov
lahf
inc
jmp
adc
lea
icebp
push
cli
jns
and
mov
xor
test
fs
cmp
outsb
push
xor
out
jecxz
xchg
and
jmp
xor
pop
push
hlt
push
push
and
repz
sbb
into
xor
test
or
les
sti
xor
pop
dec
scas
idivl
daa
xor
add
jns
sbb
mov
mov
xor
mov
lcall
pushf
xlat
hlt
out
jmp
fsubrs
xor
cmp
pop
adc
dec
xor
push
cmp
ret
movsb
jns
test
mov
xor
test
mov
ret
inc
xchg
rorb
int3
xlat
xor
fucomip
jmp
fdivrl
xor
cmp
jecxz
cmp
cld
std
jno
loopne
adc
shl
mov
divb
mov
mov
lods
xor
xorl
sbb
out
jae
pop
xor
addr16
xor
into
fisubl
xor
cwtl
adc
not
xor
cmp
int
sub
aad
stos
xor
inc
ss
mov
jns
inc
and
ljmp
sub
xor
test
repnz
cmp
int
lret
out
adc
push
cmp
push
cli
shlb
push
add
push
or
int3
mov
xor
and
aam
outsl
fmuls
cltd
xor
frstor
sbb
and
mov
ficoms
push
sbb
xlat
out
adc
out
stc
add
xor
xchg
jl
and
xor
cmp
inc
xor
incl
xchg
xor
insb
push
outsl
lret
pop
pop
enter
stos
mov
xchg
imul
or
xor
nop
mov
stos
xor
scas
xchg
inc
orb
xor
push
fwait
push
shlb
inc
mov
sbb
fidivrs
pop
sahf
sub
mov
xchg
mov
pop
mov
insb
jns
mov
adc
sbb
gs
mov
jno
add
pop
adc
fidivs
push
lret
mov
clc
push
out
mov
pop
and
shlb
pop
xor
icebp
mov
pushl
bound
lret
pop
popf
xor
test
sbb
arpl
test
xor
sbb
test
cmp
or
push
jno
rorl
lock
mov
xor
xor
mov
and
leave
lret
xor
lcall
push
imul
in
push
ret
adcb
icebp
aaa
mov
test
ljmp
mov
cmpsb
pop
and
xor
mov
scas
and
cmp
lahf
and
xchg
adc
shl
pop
xor
push
sub
nop
xor
push
outsl
out
daa
in
xor
aas
in
ds
gs
jmp
fdivl
adc
mov
mov
fistl
lcall
jmp
dec
push
inc
xor
jb
inc
mov
sbb
mov
add
iret
xor
pop
clc
sub
cmp
les
jle
xor
imul
mov
xor
int3
movsb
outsb
decb
clc
arpl
xor
aam
popa
sub
orb
daa
or
push
xchg
addr16
int3
cli
les
jae
hlt
rclb
sub
sub
sbbb
inc
adcl
jno
jge
in
sub
xchg
xor
push
mov
fs
mov
popa
xor
jp
in
cwtl
fbstp
xor
aam
sub
jnp
xor
cmpsl
sbb
hlt
inc
divl
into
xor
xchg
in
xlat
aam
inc
cmp
clc
mov
mov
xor
xor
mov
imul
sahf
lret
sbb
dec
aas
or
clc
pop
hlt
inc
enter
fs
add
ret
pusha
popf
fldenv
xor
loope
jae
test
clc
out
xchg
cmpsl
fdivs
popf
xor
mov
repnz
xor
inc
rclb
cmpsl
or
test
xor
sub
adc
mov
cmpsl
outsl
cmp
xor
pop
push
sbb
mov
imul
mov
or
mov
or
xor
push
push
xor
hlt
sub
pop
mov
inc
sbb
dec
xor
and
inc
dec
cwtl
sub
leave
jmp
cmp
push
arpl
data16
stc
enter
enter
dec
xor
mov
add
xor
jecxz
fmul
xor
push
les
jb
mov
roll
xchg
push
xor
popa
add
jae
jno
adc
xchg
pop
mov
push
jp
cli
xorb
insb
push
or
dec
and
or
pop
jecxz
adc
jge
push
clc
mov
iret
cld
repz
push
and
jo
aad
or
dec
push
in
cmp
jg
rcrl
pushf
pop
fisubrs
loopne
xchg
sub
xorl
in
jecxz
mov
xor
jns,pn
xor
sub
add
xchg
lret
and
mov
mov
and
jl
pushf
aad
movsb
xor
adc
shll
sahf
add
ds
or
or
sub
cmp
and
fadds
ret
jmp
lods
pop
xor
imul
mov
push
stc
or
lahf
push
sbb
add
mov
xchg
dec
daa
mov
xor
mov
jae
jns
push
xchg
xchg
call
movsl
push
adcb
xor
jg
repnz
xchg
push
dec
loopne
xchg
inc
mov
push
jmp
sbb
mulb
mov
xor
inc
out
xchg
lret
pop
adc
and
xor
adcl
xor
cmp
insl
ljmp
int3
pop
sub
fs
push
lods
shlb
push
aam
gs
dec
cmp
fnstcw
icebp
mov
or
jno
cli
cmpsb
mov
push
add
cmp
or
push
pusha
sahf
xor
popa
in
jmp
xor
cs
lahf
mov
arpl
imul
je
mov
fisubl
mov
jae
mov
xchg
mov
shlb
les
push
hlt
sbb
in
and
xor
sahf
xor
mov
mov
adc
je
in
xor
xor
sahf
and
xor
push
or
movsl
jne
inc
xor
std
push
sbb
jecxz
jae
in
repnz
inc
cmp
adc
jge
fistps
xor
pop
call
mov
sub
jb
in
mov
xchg
xlat
daa
hlt
stos
push
jno
inc
add
cmp
pusha
mov
sub
arpl
sbb
sub
jecxz
notl
pop
fnsetpm(287
cmpl
dec
dec
out
mov
xor
mov
lcall
sar
xor
push
add
add
jmp
sbb
sbb
ljmp
xlat
mov
out
pop
xchg
sub
js
and
ds
in
adc
in
cs
sbb
xor
pop
push
mov
aad
in
lret
ja
addr16
pop
jp
lods
mov
xor
xor
dec
aam
mov
mov
jbe
xchg
adc
xor
shl
or
outsl
out
xor
ret
lea
xor
lock
fnstenv
test
pop
outsl
int
sti
pushf
sub
test
xor
or
test
lock
fwait
mov
or
imul
adc
test
cmp
mov
pop
cmp
push
mov
inc
bound
sbb
loopne
in
clc
xor
jle
je
push
out
and
test
cld
push
jmp
push
mov
or
ret
pop
xchg
sti
jnp
xchg
xor
add
pop
outsb
fs
push
insb
lea
xchg
dec
mov
rorb
cltd
xor
push
cld
inc
arpl
stc
xor
push
out
inc
ja
test
addr16
xor
or
ss
rcrb
and
xor
mov
xor
out
subl
shrl
icebp
or
movsb
mov
jne
decl
mov
xor
xor
lock
lods
lahf
daa
bound
pop
sarb
cmc
cmp
pop
add
or
test
cli
stc
ds
xor
mov
ss
out
in
jg
cld
cs
adc
jno
push
xor
or
xor
movsl
mov
js
lcall
insb
scas
sub
popa
adc
int
hlt
push
push
aad
cmpsb
pop
inc
in
movsl
cmp
adc
pop
pop
xor
sti
pop
or
jns
mov
frstpm(287
ds
xor
fsubrl
dec
scas
add
xor
jo
xchg
inc
sub
into
xor
leave
test
add
dec
xchg
aam
push
icebp
inc
imull
roll
xor
mov
movlps
ds
jp
int3
lcall
stc
xor
test
push
jnp
pop
hlt
mov
jp
mov
les
outsl
fstpl
add
scas
loop
add
push
repnz
dec
mov
jg
jle
adc
das
cmp
dec
imul
jg
mov
xchg
xor
popf
sbb
out
xchg
enter
jmp
leave
jecxz
inc
xor
inc
out
movsb
insb
jmp
rorl
int3
add
pop
fsubr
xor
xchg
jae
negl
mov
loop
dec
xor
fstps
xor
stc
mov
inc
xor
push
repnz
ds
adc
push
fwait
xor
das
mov
jle
add
nop
inc
jbe
xor
sub
incl
jae
mov
mov
out
dec
lcall
mov
sub
jmp
addr16
in
inc
inc
adc
jb
imul
cltd
or
inc
cwtl
int
hlt
call
fstps
xchg
addw
or
mov
mov
fadd
loopne
fs
aam
push
stc
clc
outsb
dec
or
daa
mov
xchg
lods
xchg
je
aad
xor
mul
imul
add
push
dec
enter
mov
lret
sub
mov
sbb
je
test
lret
push
sub
fs
push
inc
inc
adc
push
leave
ret
adc
push
xchg
pop
out
aas
push
aad
mov
repz
and
xor
dec
sub
inc
or
jnp
rcll
dec
repz
xor
mov
pushf
std
repnz
push
in
jle
push
movsb
in
jp
mov
or
je
stos
push
lds
in
fidivs
pop
push
es
xor
sbb
sub
je
xorb
stc
adc
ja
add
or
dec
mov
xlat
add
sti
movsb
pop
xor
addl
pop
or
or
xor
dec
inc
aam
sub
out
mov
mov
sbb
inc
sahf
fcoml
xchg
jp
jne
adc
xor
es
xor
xor
leave
jnp
ja
dec
push
xor
and
subl
int
add
xchg
xor
xor
add
dec
in
jae
lcall
xchg
lock
repz
sbb
push
jmp
push
insl
cmpsl
and
sti
test
mov
xor
in
outsb
hlt
sbb
sub
xor
sub
mov
push
es
out
xor
sub
lods
jle
cltd
scas
shll
lret
add
mov
xor
insl
push
sbbb
fbstp
aas
pop
xor
push
ret
cmp
dec
cmpsl
xor
xor
add
xlat
pusha
loope
push
and
jl
jmp
push
jmp
xlat
and
or
mov
ss
sbb
sub
jnp
jmp
je
jb
hlt
push
xor
xchg
xchg
push
inc
dec
stos
push
xor
insl
mov
jnp
inc
sbbb
cwtl
add
or
xor
popa
push
push
insb
dec
pop
xchg
pop
popf
mov
cltd
xor
lods
sub
push
xor
jne
sarb
push
sub
sbbl
inc
sub
sarb
loopne
xor
movsb
cmp
std
testl
scas
xor
pop
xor
in
push
mov
sub
and
push
mov
imul
mov
test
or
push
insb
push
jne
daa
clc
cli
adc
xor
fisubrs
pusha
push
adc
in
adc
aas
push
xor
dec
insl
ds
leave
sbbb
vucomiss
not
mov
mov
mov
leave
mov
testb
pop
aas
cmpsb
cltd
xor
jge
daa
cmp
lret
in
xor
mov
sub
sbb
imul
fildl
cli
jbe
xchg
outsb
mov
fsubrs
xor
ficoms
sbb
lods
add
hlt
jne
mov
xor
xor
ficomps
out
xor
inc
int3
stos
xchg
mov
lds
pop
and
xor
inc
icebp
jecxz
and
popa
int3
test
cld
dec
in
pusha
pop
xor
jbe
or
adc
aaa
adc
test
mov
xor
cmp
or
nop
outsl
inc
jl
adc
adc
aaa
sbb
rcl
fdivrp
add
xor
push
sub
icebp
mov
pusha
loop
push
and
daa
aaa
jne
cmpsb
add
inc
outsb
xor
es
mov
shrl
and
insl
out
pushf
ss
sub
push
mov
push
push
push
cmp
lea
or
ljmp
adc
mov
scas
jnp
push
stc
shll
lds
mov
clc
mov
pop
stos
dec
loope
scas
mov
jecxz
stos
les
incb
and
sub
xor
movsb
cmp
push
push
insl
pop
int
jl
cltd
lahf
mov
arpl
pop
cmp
xchg
lea
mov
sbb
imul
dec
mov
inc
aaa
stc
inc
and
repz
jp
mov
adc
xchg
cmpsl
unpckhps
movsb
pop
push
sbb
icebp
sbb
xor
inc
xor
push
cli
insb
lds
sub
frstor
cmpl
sub
xchg
pop
adc
mov
das
jnp
jle
push
test
or
mov
inc
push
lret
inc
xor
repz
cwtl
push
or
mov
imul
adc
sub
dec
sub
sub
gs
enter
lea
mov
shrb
call
xor
sub
dec
cli
adc
adc
jne
jle
mov
stos
flds
out
mov
mov
xchg
fwait
notb
mov
ss
push
and
xor
hlt
cmp
mov
sbb
mov
mov
inc
jae
clc
mov
lods
push
test
dec
xor
dec
hlt
push
ret
fcoms
and
xor
sahf
mov
cmpl
popf
xor
stos
loop
cmpsl
lahf
xchg
jge
bound
ljmp
cmpl
mov
sti
and
inc
xchg
adc
hlt
das
popa
xor
ss
mov
adc
hlt
rclb
xchg
dec
add
xor
sti
lods
test
xchg
jbe
orb
push
pop
lret
sbb
cmpsb
sbb
xor
call
push
stos
push
js
sti
lock
xchg
fnstenv
cmp
mov
daa
mov
mov
stc
ret
and
and
fcmovbe
or
shlb
mov
call
test
in
jne
shll
jecxz
xlat
xor
mov
loope
or
xor
lds
mov
xor
adc
out
jge
cmpb
xor
adc
mov
incb
test
outsb
xor
dec
add
popf
out
loopne
out
xchg
call
xor
cwtl
and
cmpsb
cld
jae
nop
pop
fs
xchg
imul
sbb
sbb
adc
insb
sub
cltd
pushf
adc
ds
xor
dec
movsl
pop
push
xchg
push
cld
jno,pn
add
jae
dec
jo
add
out
fistpl
xor
or
or
pop
sub
jbe
psllw
das
fiadds
xor
fldenv
cld
push
add
rorb
mov
sbb
mov
fdivl
test
or
jg
sub
xorl
ja
jnp
repnz
inc
loopne
or
loope
cmp
jb
and
xor
push
and
push
mov
hlt
jno
mov
xor
inc
push
jecxz
inc
jle
test
adc
xor
mov
scas
and
and
push
aad
test
mov
ficoms
fwait
lds
push
jnp
xor
adc
jb
fiadds
and
testb
stos
cld
inc
repnz
mov
cld
xor
cmpsl
add
sub
std
xor
les
push
int
test
pop
ljmp
shrb
xor
je
dec
jb
adc
dec
orb
sub
sbb
xchg
xchg
shr
adcb
mov
ret
dec
xor
mov
sbb
xor
lods
roll
xor
mov
sahf
xor
sub
xor
adc
mov
mov
enter
lock
lea
aad
and
inc
pusha
push
inc
aaa
movsl
xor
mov
adc
xor
stc
cli
pop
setge
je
xor
rclb
divl
test
and
push
out
and
mov
sti
and
push
loope
xor
in
xor
jns
cmp
mov
rcrb
push
pop
push
jl
in
fcoml
and
dec
mov
push
leave
adc
xchg
push
hlt
inc
or
dec
mov
rorl
int3
sahf
push
daa
add
push
cmp
adc
addr16
stos
outsl
daa
xor
cld
ret
scas
int
add
sbb
shl
insl
pop
mov
xor
shlb
xor
jle
pop
in
imull
mov
mov
mov
cmp
or
pusha
jne
mov
xor
insb
nop
add
ja
es
mov
adc
inc
mov
jae
nop
sub
sti
loopne
xor
fs
and
dec
test
or
adc
pop
xor
ret
lods
movsb
fcmovnbe
mov
add
pop
in
xchg
sub
push
mov
sbb
movsl
xor
cmc
popa
dec
dec
iret
sub
xor
imul
jge,pt
stos
pop
mov
js
movsl
sti
lock
xor
jl
add
lock
cmpsb
popa
xor
mov
xor
adc
andb
adc
push
mov
lea
pop
orb
mov
pusha
sub
clc
xor
test
mov
mov
in
push
mov
push
jge
jae
xor
and
inc
dec
ret
popf
cli
arpl
subb
sub
jnp
in
out
lds
push
js
xor
adc
xchg
pop
inc
movl
sti
mov
xor
outsb
sti
mov
insb
xor
xchg
jo
pop
push
mov
xchg
aaa
les
bnd
xchg
mov
xor
dec
xor
sbb
xlat
and
imul
push
fidivs
cmp
dec
lds
fistps
inc
divl
sbb
xchg
insb
xor
xchg
in
insl
and
push
pusha
loop
lahf
adc
in
adc
aad
sahf
fsubrl
lods
mov
xor
push
xor
push
nop
ljmp
pop
inc
lods
push
fsubs
xlat
lea
xor
jl
mov
test
stos
sbb
test
sbb
push
je
and
or
xorl
xor
push
sbb
loope
sub
or
pop
mov
test
xorl
in
xor
fdivs
mov
and
outsl
mov
jae
std
outsb
inc
es
loope
jl
lcall
jmp
push
xor
test
mov
mov
lret
in
clc
jnp
xor
pop
das
jns
mov
sbb
imul
shl
test
jno
mov
jmp
test
popf
add
pop
jl
xor
and
sbbl
loop
movsl
xor
dec
aam
lcall
or
add
test
pop
adc
cs
test
and
pop
push
push
cvtdq2ps
in
xor
mov
je
xor
cmp
fimuls
stos
mov
std
sbb
daa
xchg
xor
inc
test
push
jbe
sbb
les
cmc
cmc
pop
repnz
fildl
cs
mov
adcb
and
fistps
xor
out
xlat
scas
sub
jbe
mov
lds
adc
lods
xchg
testl
jbe
inc
sbb
jne
cmp
cli
enter
xchg
lret
ja
stos
jecxz
pop
pop
movsb
inc
je
dec
push
fs
add
adc
hlt
inc
enter
out
lahf
inc
daa
lcall
push
shl
flds
mov
sub
push
xor
call
outsl
push
nop
or
lret
and
xor
xor
jmp
mov
pop
mov
xor
pop
and
jge
xor
movb
mov
jae
sub
push
push
rcr
je
add
clc
xchg
xor
mov
stc
scas
jecxz
shlb
pop
or
leave
mov
punpckhbw
xchg
jl
xor
inc
adc
jnp
pinsrw
iret
cmp
pop
xor
fadd
mov
xor
out
cmp
outsb
insb
imul
lock
fbld
outsb
adc
stos
dec
jae
xor
xchg
fs
jo
xor
out
adc
jl
adc
in
fildl
adc
xchg
cli
call
xor
sub
ficompl
push
testb
sub
mov
hlt
cmp
xor
and
sbb
pushf
xor
xchg
pop
and
ja
fbstp
in
jns
out
push
aad
mov
push
cmpsb
scas
pushf
inc
add
adc
push
and
je
sbb
mov
mov
rcll
in
lods
mov
in
test
xchg
xor
mov
jge
mov
js
loop
dec
sbb
stos
push
in
ljmp
jo
imul
pop
scas
adc
or
dec
mov
pop
jg
shlb
insb
int3
outsl
add
adc
cltd
aam
xor
dec
dec
xor
mov
nop
pop
dec
cwtl
out
mov
mov
inc
and
inc
push
fimull
dec
or
mov
mov
push
jae
repnz
xor
pop
daa
scas
mov
lahf
fldt
or
dec
pop
sub
push
pop
pop
testl
jecxz
push
cmp
pop
test
hlt
outsb
lret
fadds
inc
adc
incl
in
and
adc
mov
xor
jae
add
inc
xor
enter
jno
mov
dec
xor
cmpsl
loopne
mov
stc
shll
hlt
sbb
push
ds
imul
dec
mov
adc
lcall
sti
and
push
mov
ret
hlt
push
icebp
in
cmp
mov
adc
jle
and
fmulp
sbb
dec
daa
adc
mov
aam
loop
xor
pop
addr16
into
pop
mov
into
aas
shlb
and
fdivrs
xchg
jns
cld
jle
cmpsb
sti
popl
dec
mov
xchg
js
adc
push
lock
cmpsb
repnz
int3
mov
xor
ljmp
xor
rcrb
xor
mov
js
ds
add
add
or
push
mov
xchg
int3
je
xor
mov
mov
clc
sub
fnstsw
pop
xor
sub
clts
sbb
mov
in
xchg
lret
cmp
push
or
into
xor
scas
xchg
mov
ret
xor
sarb
mull
inc
repnz
pop
lcall
enter
mov
add
popa
cs
sub
mov
xor
add
sub
stc
inc
mov
cs
std
or
xchg
sbb
sbb
push
push
mov
jnp
jns
sbb
pop
xor
push
sub
je
xor
pop
inc
shlb
pop
sub
enter
aaa
pop
cmp
lods
adc
push
cli
js
ret
xchg
hlt
dec
and
sysenter
lcall
into
xor
aam
mov
xor
movsl
adc
push
or
pop
mov
sub
xchg
xor
movsb
fstps
inc
adc
ljmp
rcl
sti
loop
mov
fstps
jp
testb
fwait
cmpsl
and
movsb
dec
xor
xor
dec
pop
scas
popa
or
int3
push
leave
test
aam
adc
jns
pop
pop
push
shll
sub
sub
push
stos
aaa
mov
pop
aam
mov
int
in
jo
pushf
xor
xor
mov
add
fwait
stos
mov
ret
push
js
int
mov
repnz
pop
sub
xor
cmpsb
jne
xchg
popa
mov
inc
xor
lret
xor
mov
jno
rclb
mov
xor
xor
mov
xor
mov
add
test
xchg
sub
pop
xlat
xor
lds
sti
lea
cli
jmp
pop
ss
inc
inc
push
cmp
out
mov
outsb
sbb
or
dec
adc
loopne
int
fs
rorl
adc
adc
xor
cmpsl
dec
mov
dec
pop
sub
sbb
mov
shll
dec
xchg
test
xor
xor
xor
sbb
mov
mov
ljmp
ror
cwtl
mov
xlat
or
sbb
xor
repz
enter
mov
call
stc
xchg
sti
xor
push
lods
inc
dec
gs
and
xor
sbb
xor
out
mov
jno
hlt
xor
cltd
add
aad
ret
inc
and
xor
mov
xor
pop
out
jae
dec
jecxz
dec
cmp
sub
jnp
int3
jmp
mov
and
cmp
aas
mov
lcall
push
sub
mov
addr16
stc
jp
and
mov
ret
add
fnsave
xlat
lods
xor
lret
or
scas
cld
and
dec
std
mov
xor
stos
dec
fisubs
mov
xor
push
pop
xchg
or
data16
ja
jmp
add
jle
aam
pop
repz
or
xor
jne
and
loope
xor
mov
mov
pusha
sub
xor
push
and
cmp
xor
cwtl
adc
fucomip
cmp
push
mov
out
xchg
pop
mov
insl
stc
push
insb
int
xor
jge
jae
adc
pusha
ds
xor
or
imul
or
outsl
xchg
shll
push
mov
ljmp
dec
jns
xor
js
cld
sahf
xchg
push
popa
sbb
or
dec
inc
or
hlt
and
adc
cmp
jge
lds
fistpl
jo
loop
jae
xor
mov
xlat
pusha
mov
mov
enter
pop
xchg
xor
push
call
out
gs
xor
fiadds
cmp
inc
xor
mov
or
mov
mov
xor
gs
add
xor
jmpw
cmp
push
pop
orl
hlt
rorl
cmp
xor
cmp
xchg
cmpsb
jmp
mov
movsb
sahf
in
pop
lds
shrl
jne
and
jge
sub
jmp
cli
pop
fwait
sbb
je
push
andl
xor
mov
das
cmpsl
xchg
jp
mov
inc
lret
push
dec
or
out
xchg
add
imul
std
sub
xor
jp
and
mov
leave
es
sub
into
push
inc
int
mov
mov
mov
sbb
adc
adc
sbb
push
cmc
jle
cmp
xor
out
sub
xor
and
xor
ljmp
xor
lea
xlat
pop
stc
fs
mov
xchg
push
pop
repz
jl
xor
and
and
gs
xor
popf
mov
pop
das
push
je
push
push
ds
dec
test
xor
adc
lods
jbe
mov
mov
xchg
or
loopne
mov
pop
das
dec
pop
scas
xchg
add
bound
push
or
insl
and
xchg
arpl
sbb
and
xorl
ljmp
xor
add
dec
push
iret
ds
mov
xor
cmp
loop
icebp
xor
add
dec
cmpsb
es
inc
push
cltd
sbb
xor
shll
inc
rcrb
out
push
inc
fidivrs
jle
xor
adc
in
adc
inc
cli
push
lret
push
xchg
stos
or
xorl
dec
push
xchg
lret
pop
push
mov
xor
mov
xor
and
cmp
and
enter
dec
xor
xlat
dec
wbinvd
mov
inc
push
pusha
xor
je
and
lea
ficoml
xor
dec
sbb
mov
mov
xchg
outsb
or
insb
pop
xor
lock
jne
jl
es
xor
es
xor
into
adc
ss
cs
or
mov
dec
xor
imul
jmp
ss
adc
xor
arpl
sysenter
icebp
stos
pop
popa
movsl
add
mov
je
pop
cmpsb
jle
sbb
sub
inc
hlt
sbb
dec
fadd
xor
dec
popa
xchg
aam
push
addr16
sbb
and
outsb
xor
push
je
pop
fdiv
sub
in
mov
popa
dec
add
cmp
lret
push
xor
mov
xor
sub
mov
mov
das
or
jp
outsl
in
mov
lds
out
fs
divl
mov
adc
out
aad
enter
les
lret
lea
callw
mov
mov
or
ljmp
pop
popa
in
pushf
pushl
mov
xchg
inc
add
cmp
lock
and
lea
sar
ds
jecxz
pop
imul
mov
gs
xor
push
movsl
lahf
mov
adc
sub
xor
mov
push
push
mov
mov
test
lahf
out
fisubrl
pop
adc
jg
shll
out
in
xor
dec
add
inc
mov
xor
mov
mov
xor
insl
shld
mov
pusha
pop
cli
inc
das
ficoms
sbb
xor
inc
mov
pop
ds
xor
sbb
inc
jg
scas
scas
add
xor
orb
jae
xchg
xor
out
xor
inc
dec
xor
jecxz
xchg
repz
xor
or
pop
sbb
add
or
mov
xor
jecxz
pusha
mov
out
push
xor
cmc
sub
jl
pop
adc
adc
ja
sbb
in
test
jne
pushf
push
mov
leave
shll
mov
imul
ret
sbb
ss
out
in
or
jb
and
loope
cmp
nop
push
and
pop
ret
sbb
sub
dec
xor
sarb
cli
call
test
fs
inc
push
add
xor
les
adc
push
adc
jne
mov
add
mov
js
mov
adc
leave
pop
sbb
mov
push
movsl
je
in
mov
pop
cltd
cld
mov
sub
push
inc
mov
inc
ds
fsubs
xor
mov
push
jl
dec
sub
inc
push
sub
in
mov
xor
iret
cld
jns
repz
fmull
pop
xor
imul
xor
mov
icebp
arpl
stos
lret
or
cmp
push
dec
jl
mov
fxch
xor
push
cs
xor
sbb
stc
test
mov
jp
push
inc
sti
popf
push
xchg
pop
push
adc
loopne
jne
jo
jg
pushf
out
mov
and
xor
adcl
ja
xchg
addr16
arpl
fwait
adc
fsubrs
insb
mov
or
cli
test
jmp
inc
xor
xlat
into
lret
jno
jnp
mov
popa
js
pop
jbe
push
add
sbb
cmpsb
clc
mov
xor
scas
faddl
fwait
mov
bnd
popf
outsl
xor
push
test
pop
jnp
imul
add
dec
aas
repnz
into
test
test
jb
xor
rolb
mov
ss
mov
xchg
in
test
ret
clc
test
dec
pop
sbb
scas
jmp
cli
sbb
xor
push
repnz
out
cmc
inc
subb
clc
stc
gs
inc
imul
inc
jae
sub
xchg
mov
pop
lret
dec
jl
inc
adc
or
in
outsl
adc
xor
and
xorl
dec
sbb
in
pop
or
int3
lea
into
cmp
mov
mov
popa
jle
and
cld
fbstp
fdivs
stos
aaa
or
and
aas
sub
cmp
dec
cmp
sub
fs
dec
jg
pop
jo,pt
add
inc
jmp
inc
aam
pushf
pop
dec
nop
dec
fstl
jbe
or
hlt
int
xor
mov
pop
push
jl,pn
sub
adc
cmpb
sbb
adc
push
std
dec
push
clc
js
and
insl
outsl
in
aaa
jbe
sbb
xor
mov
inc
dec
sahf
mov
mov
lcall
fcoms
xor
jge
push
shll
xor
scas
mov
scas
adc
push
xchg
outsb
inc
hlt
mov
xor
je
mov
sbb
adc
and
pop
push
out
cli
aad
push
mov
xor
int
in
mov
sub
mov
fs
add
aaa
aas
xor
shlb
push
xor
int3
lcall
outsb
or
xlat
in
jo
xor
stc
nop
inc
rolb
mov
mov
sbb
clc
or
mov
mov
sbb
jp
cmpsl
lods
dec
adc
rclb
mov
pop
and
xor
rorl
mov
sbb
mov
xor
pop
ja
in
pop
xor
cmp
pop
push
dec
or
mov
imul
ret
pop
add
xchg
mov
inc
in
adc
pop
aad
shlb
out
lret
adc
fstpt
test
jbe
mov
or
sahf
xchg
cmp
xor
push
dec
sub
xchg
repz
mov
xchg
shrl
mov
sbb
pop
repz
inc
adc
mov
mov
sbb
clc
push
hlt
inc
xor
jne
mov
ja
lret
nop
xor
mov
out
xor
dec
loop
xchg
outsb
movsb
mov
inc
mov
arpl
pushl
lea
xchg
pop
daa
push
aam
sbb
ds
out
dec
iret
mov
aam
jb
dec
mov
mov
and
sub
xlat
xchg
enter
sub
dec
jecxz
lods
xor
push
rcrl
mov
xor
decl
scas
sub
pop
mov
mov
sub
pop
xchg
dec
jmp
jmp
dec
insb
xor
lods
jecxz
lcall
push
gs
adc
xor
ds
adc
add
insl
repz
std
pop
test
dec
push
mov
xor
mov
fadds
cli
pop
sbb
inc
imul
test
xchg
sbb
jne
rcll
ret
inc
mov
cld
rol
xor
lea
lods
divb
xchg
clc
fsts
hlt
pop
push
push
daa
or
cmp
iret
pop
dec
fistl
das
ljmp
inc
mov
jmp
adc
arpl
pop
pop
or
xchg
fdivs
lret
cmp
xor
and
push
mov
adc
sub
cmp
jg
inc
mov
int3
fcomi
pop
xor
xor
xor
mov
shll
push
clc
mov
pop
jbe
cld
mov
nop
cmp
sti
inc
mov
arpl
or
xchg
dec
pop
inc
in
push
lock
xchg
mov
inc
xor
inc
cld
lds
xor
test
jg
jne
jae
jl
faddp
cmpsl
adc
pop
inc
into
mov
mov
mov
arpl
mov
jo
or
mov
xchg
stos
push
push
sub
or
pop
leave
pop
and
cmp
decb
xor
xor
hlt
fbstp
and
push
xor
inc
stc
fnstenv
dec
xor
sbb
xor
add
xchg
push
xor
or
sub
ds
and
ljmp
and
mov
aam
test
inc
cld
repz
or
fidivl
mov
mov
divl
movl
xor
decb
repz
xor
sbb
pop
addr16
jmp
stc
sub
mov
imul
mov
jbe
cwtl
pop
add
into
cli
jo
loop
mov
decl
nop
sub
xor
int3
lock
xorb
imul
fwait
test
loopne
ret
xor
or
and
scas
fldt
hlt
test
inc
xor
sbb
and
and
adc
dec
jmp
inc
push
xchg
pop
or
out
mov
sti
xor
cs
xchg
dec
sub
sbb
add
pop
push
cltd
or
leave
sbb
or
in
sub
mov
or
and
imul
push
mov
inc
push
pop
sub
fsubr
xor
xor
lret
popa
pop
mov
xchg
add
jo
rcr
mov
jnp
dec
iret
mov
cltd
icebp
push
xchg
ret
popf
or
xor
fcoml
js
pushl
pop
or
mov
test
dec
push
push
and
ljmp
xor
sub
sti
mov
mov
cmp
gs
xor
shrb
xor
jo
xor
cmp
inc
xor
cmp
and
dec
dec
jo
rcr
xor
mov
clc
xor
je
cmpsb
test
loopne
ffree
push
sbb
ss
imulb
sarl
push
push
mov
xor
inc
xor
adc
or
test
jo
xchg
sub
ret
cwtl
inc
loopne
xor
push
jne
mov
adc
out
push
adc
and
mov
rcll
sarl
adc
sbbb
xchg
ret
xor
data16
xor
icebp
in
js
mov
out
cwtl
mov
pop
rcll
fiadds
je
mov
add
test
cli
out
xor
cmc
cli
mov
sub
xor
mov
mov
out
shlb
mov
add
push
enter
adc
scas
mov
notl
in
lret
dec
rcrb
movsb
pop
mov
ds
jg
sbb
fwait
jbe
pushl
sbb
add
testb
rcrl
jl
xchg
ror
xor
scas
mov
or
lods
icebp
mov
aam
mov
sti
loop
insb
jg
fwait
pop
xor
and
iret
jl
mov
cmc
sahf
pop
mov
cmp
addb
aaa
mov
rorl
fnstenv
or
fs
xchg
int3
lret
xor
js
add
in
mov
mov
and
xor
add
cmp
xor
shlb
enter
mov
shlb
xor
inc
pushf
outsb
mov
xor
sub
lahf
cwtl
and
adc
dec
es
jb
xor
ret
mov
mov
xchg
xor
out
pop
mov
xorl
pushf
sub
fcmove
lods
add
xchg
inc
xor
loop
cmpsl
push
push
xor
xlat
jl
lret
sbb
out
sub
mov
inc
xor
rcrl
stc
push
cs
je
pop
fwait
and
xor
adc
movsb
pop
xor
xor
or
xor
mov
add
clc
ficoms
pop
imul
repz
cld
or
xor
add
jae
les
out
mov
push
cli
pop
xor
jecxz
loopne
xchg
mov
push
sbb
xchg
xlat
addl
adc
je
jns
mov
mov
scas
pop
jle
mov
xchg
push
or
jl
sbb
pop
and
ds
push
in
dec
cmp
into
mov
clc
xor
addr16
push
fstps
mov
mov
test
lods
sub
out
insb
ss
cmp
aam
sub
jb
jno
rcr
cmp
jo
cmc
adc
cli
pop
dec
popf
mov
jnp
mov
ljmp
cmp
sbbb
push
sbb
xor
dec
rcl
jmp
xor
sbb
lock
in
mov
scas
aaa
lret
push
dec
inc
add
add
xor
call
dec
xor
fldt
pop
rcr
dec
adc
push
imul
mov
push
mov
inc
nop
les
addr16
into
notb
xchg
pop
out
mov
pop
push
in
pushf
xchg
xor
dec
in
fsts
push
jnp
adc
sbb
push
mov
push
push
cs
pop
mov
enter
xchg
loop
aaa
aam
xor
pop
mov
insb
xor
jbe
xchg
mov
xor
stc
jle
ljmp
dec
mov
push
push
ja
add
adc
xor
cli
dec
test
lcall
sub
mov
xor
sub
sub
mov
jge
rorb
movsb
dec
jbe
cwtl
jmp
jne
cld
mov
cs
loope
xchg
insl
adc
mov
xchg
push
testb
xor
xchg
lahf
jmp
in
int3
xchg
push
jp,pn
lock
cld
sub
ss
or
xor
in
divb
dec
jmp
idiv
lods
nop
mov
or
cmp
xchg
std
into
xor
adc
pop
sar
xor
out
lods
push
xchg
cld
loopne
xor
enter
dec
xor
lock
test
mov
leave
loope
add
icebp
xor
mov
in
xor
xor
repz
pop
mov
pushf
icebp
xor
in
hlt
xchg
shll
mov
xor
lahf
out
push
sbb
xor
sbb
pop
jmp
push
dec
or
dec
or
pop
cld
xor
pop
std
pop
mov
es
push
call
jns
xor
data16
mov
shrl
xor
lcall
xor
enter
out
xchg
xor
sub
ja
xor
and
and
xor
in
mov
push
lock
push
stc
inc
insl
mov
divl
sub
mov
jl
stos
fidivs
ja
in
mov
push
in
mov
mov
xor
mov
xchg
call
sub
jp
loope
lret
push
dec
inc
adc
cwtl
pop
je
test
cli
stos
push
call
lds
jb
and
or
fs
xor
decb
cs
movsb
xor
mov
xor
xor
xlat
cs
cmc
add
inc
and
mov
push
jo
in
push
push
inc
xor
fildl
mov
push
out
sbb
mov
stos
push
inc
je
bnd
push
inc
xor
dec
sub
cmp
dec
es
shll
push
sarl
adc
xor
enter
pushf
push
adc
ja
fxch
and
sbb
jge
mov
jo
movsb
cs
call
cmpsb
loopne
or
test
push
push
icebp
adc
xorl
leave
das
push
repz
ret
sub
jge
fmull
mov
mov
sub
sbb
cli
inc
sub
xor
and
jae
xchg
pop
enter
stos
call
lock
xor
push
cltd
rcrl
inc
sahf
aam
out
xor
pop
insb
inc
mov
mov
cltd
mov
push
xchg
cli
movsb
std
sti
stos
cmp
xor
ret
pop
add
outsl
sbb
or
dec
enter
imul
push
iret
mov
loopne
xor
sti
testb
mov
imul
adc
rcr
popa
jecxz
pop
push
xor
int
pop
push
lret
notl
adc
fidivrs
xor
pop
mov
insb
pop
call
stos
iret
loopnew
xor
sbb
out
enter
xor
jecxz
push
sbb
loopne
xor
mov
mov
cltd
in
test
repz
rolb
int
adc
test
sbb
sub
and
or
insl
repz
ljmp
cmp
daa
cmp
xor
inc
push
inc
lret
sbb
or
xchg
dec
cmpsl
xor
imul
dec
pop
jns
jae
mov
xor
rcll
jecxz
mov
das
xor
pop
sub
mov
gs
ss
mov
pop
int3
xor
push
cmp
out
lret
push
xor
xor
xchg
test
cmp
mov
cmp
xor
or
mov
stc
enter
xor
push
or
push
lret
jp
add
push
cmp
testb
sbb
push
push
enter
hlt
xchg
jno
xor
nop
push
or
xchg
dec
lods
call
xor
ficoms
mov
sbb
sbb
mov
mov
adc
mov
repz
cmp
in
jbe
popa
lock
pop
mov
fbstp
mov
loop
cs
push
mov
es
jne
mov
dec
movsb
sub
jns
xor
dec
lods
stos
hlt
xchg
cmpsb
adc
mov
in
repnz
out
data16
mov
and
sub
jg
jns
pop
cli
jno
shlb
xor
lret
nop
push
test
imul
push
clc
adc
dec
mov
mov
mov
and
adc
fsubrs
jl
xor
repz
push
out
xor
fsub
cmp
xor
rorb
hlt
insb
pop
mov
cmpl
loopne
xchg
mov
ja
out
lret
ret
push
test
sar
xor
and
test
mov
jmp
pushf
xor
movsl
aas
push
sahf
out
aad
inc
xchg
shlb
out
fldenv
test
ret
cmc
les
pop
sti
outsb
out
mov
sbb
sbb
lahf
xor
pop
xor
movsb
ds
lret
and
enter
jne
push
cmp
fdivs
sbb
test
loope
xor
xchg
fidivl
push
inc
jae
mov
xor
test
mov
jl
mov
iret
sbb
pusha
add
inc
pop
xchg
xor
out
dec
mov
lods
or
cmp
fcmovb
cmp
add
cmp
pop
sub
fdivrl
leave
clc
push
jmp
and
mov
movsl
cmp
sar
jb
lods
ss
aaa
scas
mov
jmp
les
imul
in
int3
sbb
enter
out
hlt
mov
xor
ljmp
les
xchg
out
leave
mov
addb
loope
shll
xor
decl
nop
scas
sub
xor
popf
outsl
and
jno
mov
inc
push
icebp
dec
js
mov
xor
sub
shll
fdivrs
outsb
mov
popf
add
and
outsl
xor
shll
sbb
in
out
push
adc
pop
add
cmp
xor
push
xchg
hlt
ret
loopne
xor
movsb
mov
lcall
dec
jmp
lods
xor
sub
pusha
insl
adc
mov
mov
outsb
flds
sbb
fwait
divl
mov
adc
leave
stos
fbstp
fnstsw
cltd
ljmp
mov
jecxz
push
or
sbb
pop
outsl
mov
xchg
push
and
inc
sbb
push
xchg
ja
negb
lea
shrb
lds
xor
imul
mov
mov
pop
or
ds
mov
aam
push
js
push
pop
xor
mov
filds
mov
or
xor
pushf
es
mov
add
mov
gs
jbe
cltd
push
sbb
sub
mov
fs
push
push
jb
xor
mov
push
push
push
int
xor
mov
lds
push
dec
popf
out
cwtl
adc
xchg
xchg
dec
mov
xor
cmpxchg
mov
or
mov
ret
lock
mov
iret
xor
and
pop
fs
xor
daa
out
into
mov
cmp
or
sti
popf
lods
shrb
stos
rclb
enter
dec
xor
lahf
pusha
xor
mov
dec
aas
sbb
inc
js
jnp
mov
mov
outsl
mov
mov
sahf
scas
or
jmp
movsl
xor
dec
mov
daa
dec
les
shlb
add
clc
dec
or
call
dec
xor
and
xor
cld
aam
ret
mov
adc
ljmp
dec
xchg
and
dec
mov
add
lea
sbb
xor
mov
in
or
sbb
adcl
mov
dec
fwait
lret
push
mov
adc
pop
pop
pop
test
imul
mov
jge
pop
ffree
fdivrl
cmp
mov
sbb
out
fdivs
mov
xor
jb
inc
std
mov
adc
sub
ret
fldt
adc
pop
xor
mov
out
adc
dec
stc
xchg
jecxz
adc
xchg
add
mov
xor
cmp
inc
fimull
jmp
mov
lret
inc
repnz
cmpsb
mov
push
fbstp
or
jo
add
sub
xor
adc
scas
icebp
insl
sbb
into
sysenter
aas
inc
out
in
dec
add
xchg
xor
arpl
mov
cmp
lret
sahf
cli
pop
dec
adc
sub
divb
iret
popl
cmp
aaa
xor
out
jl
or
imul
filds
mov
and
xchg
in
xor
aam
mov
adc
dec
jmp
mov
pop
push
jae
mov
xchg
and
jg
xor
popf
sbbb
xchg
mov
xor
psrld
sbb
jl
sbb
mov
sbb
insl
roll
call
xor
xor
xor
sbb
xor
xchg
outsb
adc
jnp
add
xor
adc
fs
or
xchg
xchg
ds
push
movsb
xor
sbb
xor
stc
lret
xor
xchg
shl
fsubl
xlat
mov
fucomi
mov
xor
pop
xor
mov
xor
sbb
rcl
lahf
icebp
pop
mov
jp
and
xor
cmp
xchg
add
dec
adc
inc
jg
in
xor
xor
jbe
jecxz
and
sbb
aas
and
push
push
add
dec
pop
popa
lock
xor
jns
ret
jle
add
xor
inc
add
cld
xlat
cmp
mov
lcall
jle
adc
xor
jmp
push
push
and
xchg
sub
insb
inc
jae
mov
lods
out
hlt
jmp
mov
ds
inc
es
cmp
xor
sub
dec
dec
sti
push
xor
push
jle
mov
pop
xchg
std
lea
enter
push
mov
rolb
fsub
xor
cmp
clc
jo
pop
mov
aam
pop
cli
pop
cld
xor
and
imul
sub
lahf
js
push
pushl
imul
adc
jl
inc
aas
imul
aaa
sbb
in
cmp
rcll
ss
mov
aam
and
xor
sbb
xor
push
dec
add
adc
inc
inc
push
sbb
add
and
int
sbb
mov
mov
mov
ret
mov
sub
xor
out
jns
shrb
pop
and
cmp
xor
daa
das
add
mov
insl
sbb
push
pop
aam
lret
fstpt
aad
jle
push
movsl
fdivs
xor
add
test
or
pop
clc
and
xor
hlt
les
orl
dec
mov
or
push
cmp
xchg
xor
mov
in
xor
ljmp
xor
cmc
mov
in
clc
iret
sub
dec
xor
imul
sub
or
xor
xchg
sub
mov
dec
pop
jl
cmc
mov
pop
adc
pop
xor
out
dec
daa
aad
int3
jae
jne
mov
stos
inc
cli
mov
xchg
fiadds
pop
sub
test
rorl
mov
xchg
pushf
ret
pop
xlat
movsl
sub
pop
sub
inc
pop
xchg
addr16
jns
enter
add
add
jg
mov
adcb
in
and
mov
xor
shll
cmpsl
test
loopne
mov
cmp
out
xor
inc
dec
push
je
pop
xor
jo
sub
lods
pop
lret
pushl
popa
pushf
test
test
push
addr16
int3
ret
fsqrt
jecxz
mov
and
xor
fimull
add
shl
mov
mov
adc
jle
mov
xor
subb
icebp
addr16
enterw
pop
sarb
into
sub
mov
fsubrp
xor
lret
mov
xorb
push
add
jmp
pop
push
xchg
nop/reserved
or
aam
mov
icebp
and
xor
cli
aam
lret
aaa
mov
std
mov
pop
xorb
pop
leave
addr16
jno
push
outsb
hlt
jmp
in
dec
push
pop
xor
xchg
jg
adc
push
sbb
pop
cltd
or
xchg
pop
divb
rolb
adc
xor
or
push
xor
aam
mov
xor
cmpsb
out
test
lret
push
fisubrl
cli
add
xor
aad
fwait
mov
cmp
mov
lcall
jnp
repnz
xor
mov
int
push
pop
pop
adc
or
xlat
fldenv
fnsave
fwait
mov
xor
xchg
hlt
lea
mov
add
jbe
addr16
mov
mov
daa
push
push
icebp
pop
ss
mov
mov
xor
repz
cmpb
xor
mov
leave
dec
xor
pop
js
lods
out
or
lock
xor
xchg
iret
jb
ds
xor
lods
adc
andl
outsb
add
mov
movsb
ret
mov
jb
mov
js
shrb
dec
in
dec
pop
and
aaa
repz
dec
mov
out
pusha
mov
ja
push
jno
and
loope
push
mov
enter
push
adc
push
xor
jne
icebp
add
xchg
je
xlat
sti
out
mov
push
stc
dec
ret
stos
jo
cmc
cltd
sbbl
adc
gs
mov
add
push
sti
dec
add
in
push
mov
adc
jns
adc
add
xor
inc
xor
inc
cltd
test
add
cmp
cmp
jmp
sahf
pop
shr
adc
aam
fidivl
jo
imul
testb
movzbl
mov
fdivp
mov
mov
push
cmp
insl
push
sub
pop
inc
fs
adc
lods
loopne
xor
dec
push
mov
mov
xchg
rcl
xchg
pusha
add
xor
dec
test
inc
adc
in
push
outsl
sub
xor
fcompl
cld
add
sub
cmp
insl
cmpsl
xor
jbe
lods
aas
add
push
enter
out
pop
xor
xor
leave
cmp
les
jecxz
ljmp
inc
addr16
mov
fdivl
mov
cltd
pop
lods
adc
shlb
dec
xor
push
inc
in
inc
push
adc
pop
sbb
or
ja
enter
setno
in
inc
pop
xchg
sti
push
push
sbb
ret
sub
xor
insb
loopne
cmp
xor
testb
mov
xor
pop
cmp
xor
out
in
cs
xchg
xor
inc
sub
xchg
test
push
dec
repnz
adc
pop
jl
xchg
stos
adc
jne
and
sarl
mov
iret
adc
cmp
daa
ret
stos
aad
sahf
mov
mov
out
adc
nop
out
xor
fwait
dec
int
movsl
mov
sub
or
sub
push
sbb
fldl
xor
icebp
mov
out
xchg
loope
pop
and
hlt
ds
dec
xor
lock
imul
push
push
xchg
mov
lods
dec
mov
dec
hlt
push
pop
cmp
xchg
mov
cmpsb
mov
adc
fidivl
cld
sbb
inc
jg
sub
rolb
inc
cmovbe
and
test
mov
mov
sub
lahf
sbb
xchg
add
adc
subl
sub
xor
lret
movsl
mov
mov
ss
xor
insl
leave
and
ret
aad
xor
out
in
ljmp
jl
sti
xor
mov
jecxz
cltd
pop
mov
daa
jmp
cmp
rcll
xor
and
sub
mov
mov
pop
out
jge
cmp
repz
mov
xor
xchg
popf
inc
jnp
jbe
adc
inc
xor
xchg
mov
or
pop
push
ror
orl
int
into
cwtl
adc
clc
xor
or
push
mov
movsb
dec
pop
js
xor
shrl
insb
adc
sbb
aad
into
std
adc
scas
push
mov
xor
xor
sbb
rorl
popf
pop
xor
cmpsl
inc
movsb
call
and
ss
mov
pop
out
jl
push
cmp
aaa
ss
dec
pop
les
xor
test
inc
aad
xlat
jns
cmp
scas
out
aam
push
mov
inc
mov
lahf
adcl
add
rorb
mov
inc
xor
in
bound
xor
push
push
xor
xor
nop
add
shll
mov
push
adc
mov
inc
add
xor
dec
inc
push
xorb
push
leave
fldcw
popa
jae
pop
insb
or
push
sub
and
clc
adc
ja
and
push
out
ss
jl
pop
imulb
hlt
jb
ds
test
sahf
ja
not
int
pop
popa
sbb
xor
add
lods
sub
js
loop
push
mov
je
mov
pop
sbb
ret
sti
ret
popf
adc
aam
repnz
mov
cli
push
adc
sub
xor
sbb
loope
repnz
jae
in
daa
clc
es
adc
fwait
loop
mov
loopne
adc
mov
outsb
push
pop
fsubrs
push
inc
sub
cmpsb
stos
lcall
cmpsl
sahf
inc
sarl
add
movsl
mov
xor
sbb
negb
dec
jo
je
repz
pop
or
jne
xor
popf
jmp
push
aam
shll
cltd
int3
jbe
xor
sub
mov
outsl
pop
dec
loope
pushf
nop
xor
lret
aam
ja
ret
or
daa
test
sub
cs
xor
lea
cmpsl
inc
pop
aam
xor
sub
stc
mulb
or
cmp
xor
dec
add
xor
lods
fiaddl
roll
push
xor
insb
mov
clc
out
xchg
orl
bound
inc
add
xor
mov
shll
xchg
in
cmp
hlt
or
mov
outsl
cli
push
insb
push
sub
sub
cmc
cld
or
xor
fimuls
xor
stos
xchg
jns
jnp
xorb
dec
int
imul
xchg
test
adc
pop
inc
xor
push
jle
cmp
sub
xor
call
scas
ljmp
pop
inc
inc
outsb
xor
mov
add
push
sbbb
push
push
int3
mov
nop
push
inc
push
test
fstps
fwait
jnp
les
push
xor
cmp
test
push
jo
mov
dec
xor
inc
fidivs
stc
mov
cmc
in
scas
gs
dec
xor
xor
jno
push
test
fs
lods
push
fcomi
xchg
add
xchg
push
or
ja
pop
ret
les
push
inc
repnz
mov
xor
push
xor
ficomps
ljmp
xor
add
mov
xor
leave
adc
jge
inc
mov
lcall
int3
jo
xor
pop
sbb
std
scas
rcrb
dec
nop
fisttps
xor
clc
leave
pop
cmp
testb
pop
jp
xor
xchg
pop
into
mov
or
mov
lret
and
mov
mov
insb
mov
fbstp
adc
adc
movsl
addr16
or
xor
iret
mov
fimuls
hlt
insb
xor
adc
jns
push
push
xor
mov
fs
lods
mov
dec
xor
enter
hlt
cs
mov
sbb
outsb
xchg
cmovge
hlt
xor
push
jmp
ja
pushf
mov
xorb
xchg
shlb
xor
or
stos
mov
aas
xor
or
push
xlat
or
mov
mov
outsl
add
mov
stc
mov
aaa
push
lea
out
in
test
adc
cmp
dec
adc
sbb
loope
sbb
xor
clc
mov
push
xlat
or
inc
in
xor
sbb
push
add
push
jb
aad
loopne
dec
dec
pop
in
mov
je
hlt
xchg
jno
jl
mov
cld
test
dec
test
nop
fdivs
jmp
lret
push
xor
xor
dec
in
stos
dec
scas
xor
xor
int3
icebp
cmp
rcll
sbb
mov
test
dec
call
cmpb
popa
pop
dec
sub
inc
push
lcall
in
jb
bound
pop
cld
push
or
mov
pop
sbb
mov
mov
push
sti
jnp
pop
xor
into
iret
jl
add
xor
cmpl
cmp
jb
xchg
test
in
es
and
pusha
xor
cwtl
cli
mov
dec
leave
inc
xor
xor
daa
test
ss
lcall
xor
insb
add
mov
xchg
xor
xchg
dec
mov
mov
out
and
iret
pop
inc
out
test
add
xor
lcall
scas
xor
cmp
pop
fwait
xor
outsb
test
dec
mov
cmp
xor
push
sub
sbb
int
push
std
mov
jle
adc
or
xlat
mov
mov
imul
xorb
and
push
inc
stos
pop
pop
ret
sub
ss
xor
loope
xchg
pop
cmpsl
gs
adc
cmp
je
test
dec
loop
jb
pop
dec
xor
and
cmp
insb
fbstp
test
jg
nop
jb
negb
cmpb
xor
cmpsb
sbb
xor
xor
repz
push
inc
popf
mov
fdivs
sbb
mov
jbe
xor
sahf
pop
pushf
ss
dec
pop
scas
shlb
push
loop
ret
in
rcl
or
inc
and
ds
cmp
sbb
cli
xor
sarl
inc
xor
fs
orb
push
dec
xor
in
push
mov
loope
push
mov
jns
push
and
push
cmp
xor
mov
fildll
pop
inc
sub
sahf
aam
push
xor
jo
test
xchg
int3
mov
aad
je
xor
sub
xor
mov
xor
xor
xlat
xchg
jl
iret
sbb
in
adc
mov
pop
xchg
cmp
test
test
les
fisubrs
pop
xor
xor
popa
stc
sbb
push
fsubs
pop
shlb
ss
push
xchg
xchg
pop
mov
shlb
sbb
inc
cmp
addb
icebp
hlt
clc
sbb
jp
movsb
sub
xor
adc
popa
arpl
adc
ret
jle
in
pop
sbb
or
mov
out
xorb
push
int
subl
test
xchg
xor
lods
and
je
popa
xlat
pop
mov
cs
push
punpcklbw
lret
ja
xor
rclb
lea
mov
imul
or
dec
xor
fmuls
jae
lcall
xor
dec
mov
push
pop
mov
xchg
push
roll
popa
hlt
imulb
adc
jbe
mov
xchg
mov
bnd
add
cmp
adc
int3
hlt
les
fcompl
lds
mov
jl
enter
or
xor
pop
push
sub
cs
xor
data16
add
ret
xor
or
lret
xchg
xor
or
outsb
xor
sub
mov
pop
add
clc
in
jbe
xor
gs
dec
aad
adc
cmpsl
fsubrs
ret
lods
or
outsb
xor
mov
add
sub
ja
xor
jnp
jo
in
jmp
mov
cmp
xor
ljmp
xor
inc
popf
push
add
cmp
mov
mov
lcall
les
outsl
out
mov
shlb
xchg
cmp
pop
test
mov
xor
lea
push
into
pop
adc
sar
gs
add
push
fidivrs
push
inc
ds
xor
mov
in
movsl
test
xor
mov
loop
lock
adc
sbb
xor
aaa
iret
pushf
addb
ret
xor
mov
addr16
cltd
push
pushf
fsubs
adc
mov
sbb
xor
rcr
roll
xor
mov
jge
call
rcr
adc
lcall
dec
xor
call
cs
xchg
xor
ficoms
inc
push
mov
xor
xorb
lret
addr16
mov
gs
xor
sub
ret
pop
mov
mov
adc
push
cltd
lret
mov
or
push
cmp
movsl
cwtl
jge
xor
mov
daa
push
mov
adc
dec
adc
mov
xor
jge
cmp
mov
sarl
push
ja
mov
js
xor
mov
cltd
xor
scas
int
pop
push
stc
popa
xor
xchg
pushf
mov
ret
jbe
mov
lock
dec
xor
xchg
sub
jae
ljmp
mov
mov
mov
push
adc
mov
dec
sbb
mov
adc
mov
rolb
xor
es
and
or
shl
sahf
mov
pop
pop
push
ret
stc
ljmp
rol
in
or
add
push
hlt
adc
cmp
sbb
push
sbb
xor
sarl
jecxz
ret
dec
xchg
cmp
sub
add
sahf
cld
jl
sar
cld
dec
leave
xor
scas
outsl
lret
out
mov
xor
lods
imul
mov
lret
xor
int
sbb
xchg
fs
xchg
outsl
adc
mov
in
pop
lods
lea
push
rcr
fimull
lcall
fisttpll
repz
xor
mov
rcrl
movsb
and
sub
pop
mov
in
mov
mov
imull
aas
ds
mov
adc
push
cmpl
lods
clc
sbb
jbe
lods
fistpl
xchg
mov
cmp
mov
xor
in
das
fwait
sbb
jae
xor
js
inc
push
sbb
push
mov
ja
jnp
xor
imul
or
xor
sbb
add
xchg
das
in
xchg
adc
mov
mov
dec
stos
jl
call
and
aas
lods
je
xchg
nop
decl
mov
stc
inc
xor
aas
adc
push
sub
mov
cmp
xchg
mov
icebp
in
cmp
xor
jl
imul
hlt
outsb
divb
iret
mov
pusha
sub
xor
repz
jbe
arpl
cmp
cld
les
mov
sbb
pop
pop
arpl
adc
icebp
out
jo
or
les
mov
xor
imul
in
fcomi
xor
pop
fistps
popf
call
sbb
daa
repnz
sbb
imul
or
adc
ss
movsb
xor
mov
pop
or
mov
or
call
stc
xor
xor
mov
mov
leave
xor
lock
xor
dec
les
xor
pusha
add
xor
mov
xlat
leave
jno
bound
mov
jns
stos
fs
xor
cs
cmpsb
push
cwtl
push
dec
xchg
test
mov
jo
mov
mov
bswap
ds
push
sti
das
shr
hlt
jo
xor
adc
sbb
pop
sbb
cmp
mov
loope
pushw
push
add
xchg
adc
inc
or
adc
sbb
xor
stos
add
scas
push
pop
adc
jne
mov
jnp
adc
fcmove
or
leave
inc
sti
js
dec
xor
inc
pusha
iret
fbld
popf
add
shrl
sbb
xor
cmc
sbb
jno
aam
enter
mov
jne
push
in
fcom
shlb
jae
adc
fcompl
and
lods
push
nop
jo
cwtl
xor
sub
mov
and
hlt
xor
arpl
pop
xor
mov
cmp
pop
and
jbe
sub
cli
je
mov
shrl
es
push
ficomps
lods
cmp
fwait
xor
lea
add
insb
xorl
jecxz
mov
pop
xchg
andl
mov
sahf
not
add
mov
stc
hlt
pushf
mul
jnp
cmp
jno
daa
pop
and
aam
je
xchg
movsl
ljmp
lods
fcomps
adc
mov
pushl
mov
push
or
mov
pop
fcoms
push
mov
hlt
push
cld
fadd
and
inc
xor
in
daa
imul
xchg
cmpsl
xor
jnp
scas
adc
xchg
dec
lcall
emms
pop
call
xor
jae
dec
shll
adc
cld
inc
lock
aad
pop
pop
scas
dec
sub
out
mov
iret
xor
xor
adcl
mov
xor
cld
out
inc
inc
popa
icebp
sahf
test
xchg
xor
mov
inc
in
ret
xor
out
leave
lods
mov
jl
push
fidivrs
cmpsb
xor
lcall
int
pop
je
movsb
mov
xor
rol
inc
xchg
and
jl
inc
jbe
jns
es
hlt
xchg
inc
or
push
scas
mov
inc
lret
push
pushf
ret
and
leave
add
mov
nop
bound
dec
xor
imul
xor
roll
or
nop
sbb
mov
movsl
repnz
and
pop
jb
imul
cmp
xor
rolb
jns
pop
pop
mov
inc
insb
mov
das
aad
cmp
or
fnstsw
stc
xchg
push
mov
dec
jnp
loop,pt
aad
sub
xor
adc
dec
pushf
out
jbe
jmp
test
push
and
dec
out
dec
inc
js
int
movsb
outsl
pop
pop
cli
sarl
mov
iret
lods
sub
dec
sbb
ret
les
push
sub
push
lret
fdiv
dec
pop
cld
std
or
adc
lahf
push
insb
jno
cmp
and
mov
cmpsb
std
mov
xchg
sub
xor
inc
fisttps
inc
in
or
data16
sub
ljmp
or
test
mov
fs
jbe
mov
and
xor
inc
in
or
add
mov
pop
mov
sub
aam
lret
mov
mov
in
sbb
dec
imul
adc
addr16
sub
add
orl
inc
pop
js
push
jle
add
jb
xor
inc
dec
mov
xor
in
push
imul
popf
adc
je
cmp
jmp
icebp
pusha
in
jo
or
push
arpl
or
out
adc
xor
clc
adc
cmp
jle
sbb
test
xchg
dec
xor
xor
sahf
cmp
push
pop
sub
jns
aaa
jmp
mov
xor
or
inc
das
and
shrb
dec
jecxz
iret
or
xor
and
pushf
test
data16
jmp
dec
iret
adc
dec
lea
and
aam
adc
ja
sbb
mov
push
out
fwait
pushf
xor
lea
cmp
jnp
in
jp
or
xchg
scas
jmp
mov
cli
pop
bound
call
mov
fisubrs
or
push
xchg
cmp
stos
std
inc
mov
xor
mov
cmp
repnz
adc
cmp
mov
sub
xor
jnp
xchg
xor
sbb
push
mov
hlt
adc
mov
add
scas
xor
or
ret
in
ja
xor
lcall
xor
outsb
into
push
outsl
movsl
enter
and
imul
push
or
cmp
cmpsb
roll
pop
fisttpl
pop
mov
dec
add
sub
or
pop
xor
cltd
or
xchg
xchg
out
sahf
xor
outsb
lods
fsubl
add
adc
jg
xor
pop
les
push
lock
aas
adc
dec
dec
jns
jmp
orl
cwtl
std
lods
sahf
mov
xor
jle
or
dec
add
cmpsl
push
bound
mov
pop
cmp
ja
je
push
lods
sbb
stc
dec
mov
pop
xorb
das
inc
push
inc
or
dec
in
adc
xor
out
mov
mov
leave
inc
dec
aam
jno
push
std
mov
push
xor
cmpsb
into
push
insb
add
clc
test
xor
call
sahf
pop
and
xor
mov
cmc
pop
xor
add
push
xchg
xchg
and
cmc
loopne
xor
xchg
mov
movsl
stc
shlb
pop
mov
dec
push
dec
movsb
push
lods
fdiv
xor
repz
dec
xor
aad
pop
es
pop
jbe
sub
mov
sub
test
cmp
or
xor
jge
call
xor
dec
mov
jmp
and
nop
mov
stos
sbb
repz
jg
xor
inc
mov
fwait
outsb
sbb
roll
lea
adc
xor
aas
ds
fildl
dec
xor
push
clc
mov
xor
into
aas
cmp
xor
jno
mov
xor
xchg
add
mov
sbb
in
sahf
je
mov
xor
loope
mov
call
inc
xchg
loopne
xchg
je
mov
dec
jl
xor
js
lods
jecxz
mov
xor
dec
int
stos
and
pop
push
stos
aaa
mov
cs
adc
shl
fs
in
ret
xor
sub
pop
mov
sbb
xchg
xor
negl
mov
mov
insl
mov
mov
jne
mov
jbe
lea
andb
adc
out
test
sub
or
push
xor
stos
xor
and
cmp
cmc
mov
and
gs
add
fnstenv
mov
popa
xchg
xorl
dec
fnsave
ret
pop
lcall
iret
xchg
cli
sub
xor
cmp
mov
and
mov
mov
xlat
xor
xorl
xor
cmp
lods
xor
cli
std
scas
dec
pop
es
lret
fistpll
mov
mov
xor
push
pop
movsb
add
sbb
xchg
jmp
insb
xor
mov
imul
adc
xchg
jmp
pusha
ja
lahf
xor
mov
sbb
xor
and
mov
leave
out
faddp
outsl
int
pop
pop
stos
lcall
dec
in
mov
sbbl
dec
ds
push
cmp
push
dec
idivl
fdivl
xor
jns
and
and
ss
and
or
add
xor
jg
ja
pop
pop
mov
xor
sub
mov
test
out
scas
or
pop
lods
int3
ret
sbbb
xor
lahf
mov
xlat
popf
fmuls
xor
stos
sbb
movsl
mov
imul
xchg
xor
mov
inc
in
cmp
xor
out
mov
fidivrs
mov
stc
addb
adc
repz
rorb
cmp
fidivs
ret
pop
loop
mov
cmc
xlat
fstpt
jne
fcoml
pusha
sbb
push
ja
mov
add
jmp
xor
push
xchg
cmp
cmp
xor
jns
test
or
sbb
sahf
sbb
iret
push
and
push
ds
call
les
push
cmc
add
enter
cld
scas
inc
xor
mov
out
xor
insl
push
or
xor
xchg
cmp
xor
dec
xor
xor
mov
nop
sbb
push
mov
xchg
and
mov
xor
mov
dec
pop
push
xor
jae
push
daa
das
or
test
fsub
mov
push
mov
or
push
pop
pop
out
out
xor
jbe
mov
lea
aas
pop
jne
ror
mov
mov
xor
xor
fnstcw
push
mov
jp
es
jmp
scas
xor
add
daa
fwait
mov
dec
data16
push
push
dec
popf
dec
pop
out
jecxz
pop
xor
mov
jns
ja
adc
cs
dec
xor
popf
lahf
inc
mov
push
int
lock
xor
push
adc
pop
or
pop
icebp
sub
imul
jno
lods
or
lcall
mov
cltd
je
out
mov
notb
mov
movsl
xchg
cmpsl
jb
cmp
jns
dec
xchg
lret
mov
jbe
pop
arpl
push
xchg
xor
in
cmp
popf
ja
xor
push
out
and
mov
and
push
xor
fnsave
xor
test
sbb
xor
jnp
pop
repz
mov
cli
xchg
mov
xor
hlt
sti
adc
sub
xor
leave
aad
pop
mov
xor
xchg
jno
mov
cwtl
popa
shll
dec
push
fnstsw
add
mov
sbb
and
xor
adc
push
mov
push
mov
fdivrp
mov
gs
xor
mov
adc
sub
adc
cmc
sbb
jne
and
add
mov
popa
mov
mov
sub
jo
cmpsl
jg
lock
cld
insl
sti
and
fisubl
cmp
jle
addr16
push
divl
sbb
xor
sub
out
xor
xchg
inc
sub
inc
xor
cld
add
pop
lret
xlat
inc
imul
xor
mov
mov
or
outsb
mov
rolb
adc
pop
and
inc
xor
inc
addr16
jo
xor
lods
push
cmp
xor
cmp
push
test
adc
push
es
test
push
inc
mov
pop
cmpb
leave
inc
imul
arpl
xorb
scas
mov
cli
jl,pn
lret
mov
add
sub
xor
mov
mov
cmp
imul
cmpb
ret
dec
mov
ljmp
pop
or
loope
hlt
shll
pop
lret
sti
fsubs
push
xor
movsb
lret
ss
mov
hlt
popl
jge
aam
stos
pop
ja
lcall
mov
and
and
imul
test
push
xchg
mov
jmp
es
jae
push
jge
xor
dec
hlt
orb
dec
lret
gs
xor
shl
inc
pop
inc
xor
jne
push
sub
jg
test
pop
or
mov
lcall
imul
cmp
sahf
pop
ds
mov
inc
test
aad
js
dec
adc
add
mov
inc
aaa
mov
xlat
push
push
and
ret
cmpb
out
jae
push
jbe
mov
daa
imul
xor
out
cltd
ss
popa
xor
sbb
test
clc
xor
in
ret
nop
inc
sub
xor
push
in
add
jg
mov
es
and
and
clc
hlt
in
cmc
das
xchg
les
test
in
mov
and
pusha
dec
adc
push
mov
or
cs
sarl
addr16
sub
mov
jnp
lods
ja
dec
xchg
stos
fidivs
or
add
mov
daa
xor
jmp
adc
add
call
xor
xchg
xlat
subb
pop
push
jmp
mov
mov
jp
scas
push
and
les
push
sub
mov
inc
aam
movb
xor
data16
xor
jecxz
mov
xor
dec
and
enter
xor
push
lret
xchg
shlb
xchg
xor
ds
lret
cmpsl
adc
push
lahf
push
xchg
xor
and
aaa
lcall
add
imul
pop
cltd
pushf
push
cwtl
hlt
outsl
cmc
push
mov
and
rorb
mov
push
xor
mov
cmpl
cmp
ds
sbb
sub
aad
divb
in
sub
rorb
cmp
bound
push
es
icebp
shll
fbld
daa
sub
mov
jg
xor
or
push
subb
fnstsw
xor
roll
xor
leave
add
xor
inc
sbb
xor
insb
mov
mov
and
hlt
jae
je
cmp
aaa
lahf
leave
adc
pop
imul
mov
xor
push
adc
add
addl
jo
mov
pop
xchg
cmp
mov
orl
pushf
mov
call
in
sbb
rcll
jle
xchg
in
test
cld
mov
inc
add
xor
or
and
pop
jbe
sbb
mov
push
cmp
push
sbb
mov
sbb
rol
hlt
mov
pop
jae
add
mov
ret
adc
fcoml
xor
mov
push
sbb
jnp
jg
stc
lret
iret
mov
loope
int
mov
push
test
xor
sbb
xor
cs
xor
or
mov
xor
fs
dec
sub
xor
fists
lahf
push
call
mov
je
in
add
xor
push
add
ret
popa
mov
jl
repz
and
xor
stc
inc
pop
fistpl
stos
cli
or
test
ficoml
out
adc
push
in
xor
fldt
loop
cli
cld
xor
in
pop
jb
rclb
xchg
jp
shl
fidivrl
das
xor
mov
or
cmpsb
push
les
outsb
add
xor
in
mov
adc
cmp
sbb
add
add
mov
pop
inc
lods
lds
test
mov
add
movsl
dec
fnstsw
pop
adc
insl
addr16
jne
ret
xor
and
aam
popa
and
jge
add
fdivs
fcoml
xor
sbbl
adc
loopne
adc
aaa
out
or
jae
clc
xor
je
sahf
xor
paddsw
das
mov
pushf
xor
mov
add
cs
xor
jp
movsb
jns
and
xchg
call
dec
mov
ret
and
mov
push
ds
xchg
mov
mov
inc
aad
shll
cmp
push
insl
and
fwait
enter
dec
dec
call
xchg
aas
fistpl
jecxz
jl
push
add
push
and
push
add
xchg
xchg
std
xchg
int3
xor
sti
ret
cld
loop
pop
das
xor
repnz
icebp
mov
xor
pop
dec
push
gs
push
out
fnsave
loope
add
cmpsl
int
pushf
adc
add
ja
jl
movsb
xor
test
xor
clc
adc
and
loop
idivl
jl
xor
in
out
jl
ret
pop
push
rcll
jp
repnz
mov
movsl
xor
xor
mov
icebp
xor
and
dec
loope
sbb
add
mov
jecxz
sub
adc
mov
ficoml
punpcklbw
sbb
pop
rcll
sub
sbb
imul
xor
ror
xchg
jmp
cmpl
add
js
mov
add
mov
adc
jp
pop
mov
push
xorl
jg
std
out
push
shlb
pop
imul
fwait
mov
mov
add
test
insb
lea
pushf
roll
xor
js
test
adc
sub
inc
xchg
mov
mov
rorb
and
pop
fistpl
sub
xor
cld
mov
int
xor
lea
dec
mov
mov
outsb
sub
or
mov
mov
adc
adc
xor
int3
mov
fidivl
add
xor
pop
frstor
xor
jbe
fwait
push
ds
mov
inc
popf
pushf
std
mov
pop
mov
bound
mov
xor
pop
cmp
stos
fcmovb
arpl
mov
nop
icebp
xor
es
imul
pop
pop
xchg
shlb
bound
call
mov
outsl
xchg
mov
je
xchg
jns
xor
and
mov
mov
add
xor
push
pop
movb
xor
addr16
push
xor
xchg
sub
pop
push
xor
cmp
push
je
loopne
add
xor
and
push
rorl
jmp
movsl
mov
test
jecxz
mov
daa
inc
xor
pop
push
and
or
xor
std
jmp
ljmp
push
dec
sub
push
pop
jmp
dec
out
mov
xchg
xor
cmp
shll
lcall
mov
push
lods
into
bnd
cmpsl
cmp
push
xor
dec
fbstp
jne
gs
cld
jbe
mov
data16
lahf
mov
sbb
push
mov
je
outsb
or
sub
add
xor
popw
cmp
sub
push
pop
dec
mov
push
lea
pop
sbb
in
jnp
mov
shl
add
sti
ret
pop
inc
jno
je
stc
scas
mov
out
pop
jnp
lret
pusha
fisttpll
stc
enter
xchg
mov
out
xor
pop
dec
cli
call
fcoms
popa
lock
mov
jmp
adc
inc
mov
scas
inc
jbe
xchg
and
cmpsl
mov
sbb
jp
in
sbb
mov
icebp
ljmp
shll
loop
xor
adc
aad
outsl
sbb
mov
sahf
xor
sub
dec
cmpsb
out
cmp
cmpsl
je
adc
aam
les
call
cltd
jbe
roll
mov
push
dec
ss
or
aaa
pop
xor
lods
xor
sbb
std
push
popf
ds
test
inc
add
mov
fisubrs
cmp
out
push
add
cmp
sub
xor
int3
xor
xor
das
or
add
fldt
mov
sub
mov
rolb
fidivs
xchg
movb
push
enter
xor
adc
and
loope
fbld
stc
adc
add
jle
ret
sbb
sbb
push
push
add
jae
addr16
push
aam
xor
push
fs
pop
pop
mov
xor
imul
lahf
xor
lret
mov
jmp
sub
sbb
sbb
jae
push
loop
std
and
pop
in
int3
imul
pop
sbb
xor
jg
stos
lret
sbb
inc
imulb
cmp
jbe
push
or
loop
ret
push
xchg
push
cli
imul
jb
fimull
mov
xor
inc
sub
stos
xor
insb
mov
push
stos
out
icebp
and
imul
notb
es
mov
call
lahf
or
xor
cwtl
outsb
loop
xor
xor
aaa
mov
mov
popf
scas
mov
push
mov
sahf
imul
fistpl
xor
cltd
addr16
jo
into
clc
nop
sub
sahf
jne
inc
ret
loop
jmp
cltd
push
xor
xchg
and
cmpsb
xor
xchg
pop
in
fidivl
das
pop
sbb
cmp
pop
sbb
sub
clc
push
mov
inc
jae
std
andl
push
mov
bound
push
pusha
pop
xor
aad
sbb
pop
mov
mov
pop
mov
mov
xor
aas
test
mov
and
dec
mov
adc
add
xor
lcall
dec
cwtl
cmp
aad
mov
jmp
ret
push
repnz
xor
int
push
push
xchg
scas
pop
sbb
mov
xor
mov
pop
xor
sub
popf
addr16
mov
insb
pop
push
pop
andb
xor
aam
sbb
cli
sti
popa
xor
mov
loope
xchg
cmpsl
and
push
repz
or
sbb
out
or
xchg
std
inc
add
mov
mov
mov
xor
mov
and
cmp
mov
jecxz
stc
pop
test
hlt
ret
xchg
jmp
sbb
loop
adc
add
je
xchg
clc
aam
and
js
push
mov
loope
add
call
jmp
jmp
cmc
jno
xor
test
cld
xor
push
repz
jnp
sbb
daa
test
xor
lcall
xor
mov
int3
lahf
mov
scas
fcmovnbe
xor
hlt
add
dec
mov
clc
xor
clc
lret
add
pop
mov
xchg
or
test
int3
sbb
push
add
dec
xor
xchg
fstpl
pop
cmp
xor
mov
push
xor
out
movsl
or
fimull
leave
sbb
and
std
mov
pop
dec
cltd
sbbb
sbb
das
adc
xchg
stc
mov
ljmp
mov
cld
xlat
push
mov
in
insl
push
dec
xchg
adc
xor
nop
add
test
cmp
addr16
pop
or
add
add
mov
sbb
psubq
xchg
bound
imul
cli
add
les
inc
cmp
jle
test
adc
sbb
test
dec
xor
xchg
add
push
xor
or
pop
mov
sti
mov
adc
rcrb
xlat
mov
adc
mov
mov
add
jb
xor
adc
lods
push
xor
pop
fwait
sbb
shr
xor
push
imul
xor
cwtl
popf
fsubrl
and
sub
shll
cmc
xor
das
sbb
xor
jnp
andl
mov
cmp
mov
push
mov
pcmpeqb
push
and
or
pusha
xor
inc
cmp
xor
sbb
lahf
sbb
stc
push
and
jne
pushl
and
add
cs
lods
out
aam
loope
xor
clc
aas
sub
out
xchg
pop
gs
inc
test
js
cltd
jns
jecxz,pn
or
add
les
pop
mov
stos
sti
sub
xchg
and
jl
cmp
ss
pop
loopne
pop
push
and
into
int3
movsb
shrb
and
cmpsl
inc
adc
dec
adc
sbb
jle
add
popf
psubusw
sub
adc
mov
mov
lret
jb
mulb
and
pushf
lea
mov
push
mov
mov
push
fwait
call
fs
and
pop
adc
cmp
mov
cmc
cmpsb
xor
sbb
mov
out
mov
adc
ja
push
pop
xor
xchg
int3
sub
mov
jno
aad
xlat
jae
jge
fidivs
push
stos
ljmp
mov
inc
push
push
pop
dec
xor
mov
adc
xor
iret
inc
cmp
xchg
mov
and
adc
and
hlt
fdivr
adc
push
xchg
push
xor
sbbl
or
icebp
pop
or
mov
scas
add
mov
lahf
in
ret
dec
sub
rorl
into
pop
dec
leave
fwait
xor
icebp
aaa
aas
xor
mov
inc
add
nop
int3
sub
xchg
aam
xor
scas
test
je
lret
or
xchg
sbb
cmp
push
xor
cmp
cltd
add
icebp
shl
sub
xchg
xor
pop
jl
dec
inc
inc
mov
ret
int3
dec
push
add
cmp
test
mov
cltd
mov
mov
xor
jg
sbb
push
xchg
shlb
lods
and
mov
xor
xchg
iret
and
push
adc
hlt
hlt
pop
loope
add
test
stos
mov
bound
popa
lea
fnstsw
pop
cld
xor
xchg
scas
cmpsl
adc
imul
popf
push
mov
xchg
stos
aaa
cmp
and
or
pop
sbb
xor
aam
lods
cmpl
aas
push
xlat
je
addr16
pop
dec
xor
add
xor
test
addr16
jne
mov
call
jno
inc
ficompl
enter
pop
xlat
lds
adc
popf
or
xor
sbb
and
rorl
mov
outsb
fwait
xor
xchg
cs
mov
or
int3
jp
insl
push
daa
cmp
xor
xlat
mov
jae
bound
and
aaa
fcompl
mov
int
adc
xor
cmp
sbb
mov
in
xor
inc
jo
sbb
adc
gs
es
xor
stos
cmp
cmp
js
fs
movsb
movsl
ficoms
icebp
push
adc
cmp
orl
pop
lods
ret
fldenv
fsubs
inc
in
lea
sbb
mov
aad
ret
mov
xor
adc
adc
push
mov
shl
or
roll
xor
aad
and
addr16
cmp
stos
out
pop
pop
mov
hlt
lods
std
dec
frstor
in
adc
xor
sub
gs
nop
divl
xchg
sbb
mov
in
and
xor
fwait
leave
cmp
negb
xchg
dec
stc
and
xor
pusha
jp
pop
out
xchg
inc
aaa
pop
push
xlat
fdivrs
xchg
mov
loop
add
les
dec
xor
pop
das
push
push
loopne
push
addr16
idiv
mov
and
jns
jle
push
and
out
adc
adc
pop
ret
jmp
sbb
shld
outsb
push
sub
inc
mov
das
pop
xor
adc
mov
sahf
xor
fisubrs
lods
mov
and
stos
pop
lcall
cmp
ret
mov
jne
jle
jmpw
xor
clc
nop
xor
dec
outsb
cmpsb
sbb
popf
mov
ja
mov
outsl
lcall
addr16
int
adc
xor
scas
sbb
add
insb
leave
mov
pushf
xor
ds
pop
and
push
loop
mov
xor
aas
test
xor
cmp
pop
out
fbld
leave
xor
fwait
in
movsl
clc
lods
or
push
push
mov
mov
repz
xor
xor
decl
sbb
mov
xchg
or
xor
popa
and
mov
xor
inc
jge
add
mov
loop
xorl
cmp
jp
repnz
push
test
push
test
out
xor
lahf
cwtl
inc
mov
xor
movsl
push
dec
add
jo
xor
inc
fcomp
push
cmpsb
push
movhps
jne
aaa
leave
mov
push
pop
bswap
pop
push
sub
cmp
pushf
repnz
sahf
add
addr16
arpl
pop
aaa
mov
test
add
cmp
je
mov
xor
pop
cwtl
add
inc
jecxz
sub
xor
jne
push
sti
into
out
pushf
xchg
cmp
js
mov
jl
repnz
adc
xchg
mov
fdivl
test
cli
cmp
out
jns
xor
jo
mov
xchg
xor
pop
inc
lods
stos
mov
adc
rorl
and
dec
xor
sbb
cmp
jle
jl
sub
sbb
fs
mov
pop
xchg
inc
xor
push
enter
stc
test
or
ror
jg
xor
mov
lods
and
pop
fidivs
cmp
gs
xor
lret
inc
iret
pop
sbb
push
xor
cmpsl
and
hlt
aad
sub
jle
xor
test
out
mov
or
shl
push
in
jg
cmpsb
movsl
jae
jnp
test
push
mov
fnstcw
enter
outsb
aam
pop
jg
adc
ss
mov
stos
push
scas
test
lahf
push
mov
jo
fcoml
cmp
mov
pop
add
sbb
pop
pop
repz
scas
push
test
adc
fdivrs
das
xor
nop
adc
or
jmp
int
orl
repnz
mov
in
xor
xchg
test
sub
enter
xchg
jmp
or
es
ja
jb
icebp
je
lock
adc
push
xor
pop
push
pop
daa
dec
jo
xor
andl
adc
je
outsl
dec
dec
xor
pop
cmpsb
movsb
push
sub
mov
sub
fcmovnu
sub
xchg
sub
inc
xor
repnz
nop
sbb
ficoms
mov
xlat
mov
cmp
push
loop
sahf
and
xor
dec
arpl
mov
imul
mov
mov
pop
mov
and
xor
pop
in
push
sbb
xor
loope
sub
out
daa
mov
hlt
jle
xor
inc
sbb
std
pop
insb
iret
adc
add
sub
je
cmp
mov
inc
scas
xor
push
jnp
xchg
call
cwtl
xor
push
xchg
xor
mov
pminsw
xchg
aas
shr
pop
inc
mov
sub
clc
incl
adc
adc
mov
fcmovne
jnp
mov
and
sbb
nop
shll
fdivrs
or
push
shrb
adc
pop
add
cmpl
push
sarl
pop
pusha
dec
lret
xor
jb
cmc
adc
mov
ss
mov
dec
mov
aad
sub
adc
data16
xchg
and
mov
xchg
fldenv
sbb
mov
ret
faddl
sbb
ret
or
xor
insl
push
mov
shrl
xor
dec
xor
xchg
clc
xchg
xor
jecxz
in
arpl
dec
adc
adc
aaa
adc
inc
xchg
cmp
inc
pop
inc
push
pop
insb
sbb
jae
jae
sub
dec
xor
out
sarb
lea
sbb
pop
xor
mov
int
out
jl
xor
inc
jle
loop
jb
sbb
push
fwait
sbb
xor
sbb
push
das
fisttpl
and
fmull
dec
in
outsb
push
mov
mov
add
adc
ret
hlt
adc
cwtl
xor
in
jnp
cs
add
dec
dec
pop
shlb
loope
sbb
cltd
xor
push
sub
mov
jp
icebp
lcall
xor
mov
in
gs
imul
movlps
aam
adc
out
pusha
shlb
popa
mov
dec
pop
xchg
loop
ret
cltd
xchg
mov
arpl
pop
xchg
inc
mov
xor
adc
xor
in
inc
mov
lea
inc
fisubrs
not
xor
aad
lods
iret
xlat
cmpsl
push
xor
test
scas
rorl
inc
cmpsb
cmp
bound
xchg
aaa
popa
inc
xchg
dec
jecxz
push
cmp
dec
sarl
dec
call
in
lret
hlt
ss
jnp
daa
mov
add
xor
push
or
lods
xor
in
or
sbb
inc
ret
mov
xor
sti
in
pop
das
ret
subl
sub
add
xor
xor
cli
mulb
scas
pop
or
xor
push
push
xor
mov
test
sub
dec
pavgw
xor
inc
xchg
jnp
cld
je
xor
cli
test
pushf
add
or
mov
push
push
fwait
adc
addr16
push
pushf
fistpl
xor
sbb
xor
int
inc
xor
jl
xor
addb
bound
insb
jo
xchg
and
xor
sahf
mov
es
movsb
daa
xor
xor
mov
sub
mov
push
into
fisubs
nop
sub
mov
dec
jb
sbb
cmp
cmpsl
fsubr
mov
sbb
xchg
aaa
jns
mov
xor
xchg
fldl
mov
xchg
lahf
ja
adc
out
xor
dec
cmp
jno
mov
xchg
xor
aam
cmp
sbb
cmp
push
cwtl
sar
scas
mov
pop
sbb
pop
push
hlt
stc
lock
cmp
jbe
loopne
mov
add
pushf
push
fidivrs
shll
dec
xor
mov
cmp
add
pusha
out
ret
adc
mov
test
rclb
clc
mov
je
or
or
jne
out
aam
xor
lock
xlat
xchg
sarb
pop
xor
push
dec
cmp
push
pop
push
and
xchg
out
xor
sub
pop
inc
adc
xor
dec
mov
testl
cmp
inc
xor
and
xchg
xor
popa
xchg
xchg
adc
push
xlat
add
es
js
pop
pushf
sbb
mov
lahf
xor
inc
cwtl
loop
stos
mov
daa
cld
xor
push
xor
fidivl
or
push
and
pop
xchg
xchg
jecxz
dec
jnp
loopne
lret
addl
or
repnz
ds
pop
hlt
xchg
addr16
scas
mov
jne
out
add
cli
xchg
add
outsl
lock
sub
adc
mov
sub
adc
lret
push
sub
cmp
lahf
hlt
outsl
xor
fprem1
arpl
aaa
test
lcall
xor
jns
or
or
in
mov
divb
nop
mov
push
xor
stos
ja
push
sbb
xor
in
inc
mov
xchg
pushf
cli
or
int3
xchg
adc
pushf
cmp
jo
repnz
push
xlat
dec
pop
movsl
sbb
pushf
icebp
hlt
xchg
cmp
pop
mov
int
mov
cltd
jl
test
pop
dec
mov
add
adc
mov
test
xchg
xor
leave
mov
adc
jo
adcl
cmp
jp
xor
cmc
pop
addr16
inc
fs
adcl
fidivs
ss
pushf
xor
shl
mov
xor
mov
jp
testl
pushl
test
or
mov
ret
inc
clc
or
xchg
cmpsl
cs
ret
int
inc
xor
mov
test
jb
mov
and
xor
lods
int
clc
sub
je
lahf
notb
mov
gs
mov
inc
lcall
sub
mov
xor
ret
xor
jecxz
xor
out
orl
mov
icebp
adc
je
and
daa
adc
xor
imul
cmp
mov
ja
lea
add
xchg
push
and
mov
or
pop
hlt
sbb
and
lret
mov
mov
or
sbb
adc
xchg
mov
out
addb
scas
push
lahf
jge
sti
dec
xor
daa
pop
scas
sbb
or
add
movsb
dec
dec
movsb
xchg
mov
mov
mov
mulb
loopne
dec
lds
cmp
xorl
popf
pop
inc
push
mov
xor
xor
pop
xor
or
insl
xchg
popf
jns
xor
mov
xchg
sbb
inc
xchg
stc
xor
add
add
fiaddl
hlt
add
mov
sbbl
es
test
cwtl
push
mov
jb,pn
shrb
mov
dec
xor
add
xor
enter
cmp
js
xor
neg
mov
and
cmp
adc
rcll
cmp
push
xor
add
ljmp
out
testl
or
lret
and
movsb
xor
fwait
insb
xor
push
jb
inc
je
mov
and
pop
lds
dec
fistl
cmp
cmp
or
and
dec
mov
cld
xor
aaa
dec
es
dec
imul
sbb
xor
fnstenv
xor
and
xchg
push
sub
xor
push
insl
adc
or
fst
lret
adc
mov
clc
fbstp
xor
out
gs
inc
mov
xchg
cmp
dec
leave
cwtl
push
xor
inc
pop
adcb
ret
roll
aaa
sub
dec
sub
daa
xor
xor
cmp
xchg
mov
into
push
or
sub
mov
inc
fisubl
inc
and
push
cld
jns
jmp
fs
sti
in
aam
fmul
push
je
xor
iret
mov
xor
pop
add
mov
inc
mov
pop
push
in
cmpsb
les
cmp
movsb
mov
inc
cmp
or
lret
and
shlb
les
lds
pop
divl
sbb
mov
sbb
arpl
and
xchg
mov
push
data16
pop
lret
push
pop
jl
inc
je
lds
cmp
cmc
lods
xchg
pop
dec
xor
push
data16
inc
popf
cs
sub
lea
mov
les
sbb
jo
xor
push
popf
std
or
mov
int
push
ljmp
out
cmp
insb
push
adc
jmp
or
xor
mov
xchg
cmpsl
clc
lcall
sbb
pop
xor
mov
inc
unpckhps
rclb
xor
scas
adc
or
imul
stos
xchg
enter
sub
movsl
mov
mov
jmp
inc
mov
xor
sbb
jmp
adc
pop
and
mov
mov
aas
jnp
cli
clc
mov
pop
xchg
stc
sub
jl
shlb
inc
jg
movsl
mov
bound
xor
gs
push
xor
dec
adcb
das
jbe
test
cmp
ss
lcall
cmpsb
xor
jle
sbb
pop
les
mov
xchg
lds
adc
pop
ret
das
sub
daa
xor
jl
cld
fistps
sahf
mov
xor
subb
sub
add
jle
and
imul
cld
pop
xchg
jecxz
lret
xor
push
cmpsl
jp
pop
repnz
add
dec
push
sub
xchg
cmp
and
je
adc
mov
shll
stos
mov
lahf
xchg
xor
call
and
xor
repz
and
orl
push
ljmp
lock
jmp
pop
shrl
iret
fnstenv
add
mov
push
xchg
and
jl
adc
add
stos
int
cmpsl
aam
cmp
xor
popf
cmp
jmp
adc
adc
testb
pop
dec
scas
inc
lods
xchg
xor
fmuls
cmp
scas
fwait
aaa
xor
jl
lods
lret
fidivl
pop
outsl
adc
xor
incl
pop
xor
xor
popa
das
stos
mov
mov
dec
xor
in
stc
aad
xor
inc
mov
push
push
dec
jno
shrl
imul
mov
into
sbb
mov
sbb
fdivrs
out
ss
inc
mov
mov
hlt
testl
or
cli
push
movsl
jecxz
loopne
and
push
dec
scas
pop
xor
sbb
mov
xor
add
add
adc
shrl
xchg
mov
xor
cmp
jne
fs
pop
jb
mov
mov
punpcklwd
aam
dec
or
sarb
push
adc
cmp
movb
shlb
and
xor
cmp
and
fcomps
xchg
dec
adc
or
loop
out
or
call
js
xor
sub
stos
pop
idiv
int3
int3
lret
pop
jbe
sbb
je
movb
dec
xor
mov
ret
add
mov
sub
mov
push
pusha
mov
inc
dec
repnz
into
mov
and
popa
push
hlt
sbb
add
adc
xor
mov
jbe
es
jp
xor
or
lcall
mov
daa
jmp
sbb
and
push
ja
inc
fs
and
pushl
xchg
fcoms
pop
lods
xchg
adc
add
ja
jmp
sbb
xor
sarb
fnsave
das
mov
in
sbb
ljmp
sbb
add
loop
bound
mov
divb
test
xor
int
jge
mov
xchg
xor
movsl
cmpsl
stos
adc
mov
jmp
xorb
js
inc
lds
jo
xchg
rcll
rcrb
test
add
es
cmp
push
icebp
repz
xor
mov
lock
jb
jle
or
into
xor
add
aas
or
arpl
and
test
and
mov
push
inc
push
pop
mov
mov
movsb
pop
push
jle
jb
push
in
insl
push
movsl
les
adc
les
push
inc
xchg
lcall
fidivrl
sbb
mov
mov
fmull
jmp
popa
mov
xorl
ja
and
test
xor
xchg
cmpl
xor
dec
or
xor
xor
xor
sbb
ja
test
xchg
in
cmc
aam
and
pop
pop
jb
adc
setle
cmp
and
and
pop
or
sub
adc
imul
push
fsubrp
popl
adc
dec
out
icebp
or
jae
cmpsl
push
hlt
xor
scas
pop
sti
and
mov
mov
in
movb
xor
int3
shrb
inc
inc
lcall
incl
ja
push
mov
nopl
cmp
div
sub
stos
push
fs
mov
movsb
add
shrb
jmp
mov
mov
xor
je
fimull
and
dec
sti
sbb
movsl
nop
in
xlat
fwait
xchg
adc
pop
daa
stc
pop
or
jns
mov
imul
test
enter
mov
sub
jg
inc
xor
sub
mov
xor
mov
sbb
scas
loop
out
inc
dec
jae
loope
push
js
jbe
sbb
push
xor
sbb
int
or
jecxz
xorb
xchg
push
mov
inc
out
push
pop
jae
xor
lock
mov
lcall
add
sub
ds
inc
jecxz
adc
xchg
add
jmp
clc
lds
testb
mov
repz
mov
fs
sbb
adc
enter
cwtl
insl
test
aaa
push
ja
imul
lods
xor
xchg
xor
movsl
hlt
repnz
push
ss
roll
pushf
andl
cmp
mov
and
pop
jns
movsb
cltd
mov
pushf
cld
or
arpl
and
xor
mov
in
mov
fstps
cltd
aas
xor
add
pusha
push
jmp
or
mov
ret
cmp
nop
lock
jl
xor
jae
mov
mov
push
int3
fimuls
rcll
mov
cmp
sub
cmp
mov
fwait
inc
into
adc
and
mov
testl
in
adc
mov
sub
fs
push
jle
adc
loop
jbe
add
inc
aas
cmp
xor
pop
mov
sub
insl
in
stos
adc
mov
ljmp
scas
sub
shll
xchg
inc
pop
stos
push
push
mov
pop
in
add
inc
or
pop
and
jae
cli
testb
dec
loopne
xor
iret
cwtl
jle
inc
sub
pop
push
dec
enter
xor
popf
inc
adc
xchg
xchg
cmp
add
mov
cmpsb
push
stos
add
mov
inc
ffreep
pop
clc
dec
xor
bound
sarl
je
add
not
cld
dec
inc
mov
fs
and
std
test
into
pop
aas
fstpl
cmpsb
mov
and
dec
inc
lds
lret
mov
rcrb
xor
aam
or
cld
js
xor
int
adc
inc
adc
in
outsl
call
xchg
xlat
movsl
cmpsb
clc
fsubrl
repz
pop
in
mov
shll
sbb
xor
pop
mov
or
push
mov
je
lahf
sbb
jle
adc
repnz
jl
into
xor
push
jns
xor
push
mov
jmp
xor
xor
icebp
sbb
and
mov
inc
sbb
outsb
int
pop
les
imul
lahf
clc
outsl
pop
xor
sub
or
out
pusha
cld
sub
sti
jp
frstor
mov
push
dec
fistl
in
inc
imul
clc
pop
test
push
je
icebp
mov
mov
inc
loope
or
pop
and
jne
aad
loop
xor
push
test
mov
mov
xchg
lods
sbb
jecxz
add
aaa
incl
sarb
adc
into
jge
loop
xchg
xchg
inc
pop
ficompl
pushf
bound
mov
xchg
mov
inc
leave
add
inc
ss
sti
outsl
jge
xor
imul
or
cli
xlat
hlt
xor
and
adc
je
sbb
sbb
xor
inc
fadd
mov
jno
xor
iret
sub
lret
movsb
fdivrs
mov
ljmp
or
aam
push
push
xor
sbb
mov
inc
popf
stos
and
push
pushf
fdivl
mov
pop
sbb
jns
idivb
lods
arpl
cld
jecxz
mov
mov
aam
dec
mov
push
dec
data16
xchg
pop
push
cmp
cld
pop
test
not
shlb
aaa
xor
cltd
adc
push
add
sub
popf
inc
mov
lea
push
aas
dec
inc
in
cmp
int
shrl
xor
js
pop
or
xor
mov
push
xor
inc
gs
xor
nop
inc
jl
jmp
xchg
mov
jge
adc
popf
adcb
repnz
mov
xor
sti
fsubrs
mov
dec
push
int3
push
mov
sub
jecxz
aaa
mov
cs
jle
jbe
rclb
lret
mov
loopne
aam
divl
insb
fistps
std
dec
push
sub
jnp
lea
jl
stos
sbb
mov
xor
out
mov
std
fsts
xor
adc
jnp
xor
int3
push
cmp
ret
push
jne
adc
or
and
or
loopne
inc
xlat
enter
xor
sbb
pop
pop
ret
adc
and
sbbl
and
xchg
pop
cmp
mov
out
mov
mov
or
loopne
or
push
pop
push
inc
out
push
push
sbb
cld
xor
mov
or
push
adc
test
push
sub
das
ficomps
scas
test
xor
sub
fcompl
cmpsb
sbb
pop
popa
mov
or
push
mov
push
loope
lods
cmp
pop
adc
fnstenv
cmovle
adc
int
repnz
pop
mov
jnp
sbb
cld
ja
ljmp
mov
xor
mov
imul
aas
cmpsl
repz
push
iret
mov
jge
inc
ljmp
xchg
into
xor
mov
xor
in
fcmovnu
dec
insb
push
lock
cld
scas
inc
pop
cmp
scas
push
cltd
cmp
int3
xchg
mov
outsb
rcll
sbb
mov
xor
push
push
mov
xor
call
les
sub
sbb
xchg
sub
shlb
cmpl
insl
cmp
cmc
daa
dec
out
aad
sub
andl
mov
or
mov
testl
sub
testl
bound
lods
out
adc
jge
pop
pop
rcl
mov
xor
jle
mov
xor
aam
xchg
fsubs
leave
xchg
out
pop
mov
sub
push
loope
push
inc
inc
sbb
es
pop
repz
aaa
jo
add
scas
outsl
adc
mov
or
fcompl
pop
jle
dec
mov
ss
cmp
push
sub
aad
xchg
in
les
and
rcr
xor
sub
imul
sbb
dec
sbb
scas
xchg
mov
jns
xor
insb
sahf
iret
sub
outsb
pop
insl
mov
cmp
xor
ds
mov
xor
mov
adc
in
xor
cmpsb
lcall
pop
mov
adc
and
call
xor
mov
lock
xor
shrb
mov
and
jo
push
xor
das
imul
pop
lcall
pop
mov
and
pop
cli
negl
cmp
or
cwtl
das
hlt
andb
xor
jp
pop
sbbb
or
sub
push
jl
cmp
mov
hlt
inc
ret
hlt
sub
adc
jo
mov
loopne
cmp
adc
or
movsl
clc
dec
adc
pop
stos
cmp
lock
adc
shr
push
mov
cli
sub
add
xor
mov
clc
enter
jno
call
out
cwtl
jbe
xor
mov
pop
pushf
dec
push
xor
inc
out
lcall
xchg
int
cmpsl
inc
xor
pop
push
xlat
mov
cmc
xor
test
jl
dec
push
hlt
xor
pop
push
inc
mov
jg
ret
bound
cwtl
push
xor
jp
adc
pop
pop
ds
pop
xchg
sbb
sub
pusha
push
nop
popa
add
inc
xchg
mov
cltd
mov
in
testl
fisttps
xor
int
xor
xor
andl
cmpsl
push
lret
mov
inc
mov
push
mov
dec
movsb
push
xchg
mov
dec
sbb
aaa
stc
fnstsw
adc
test
xor
jbe
test
pop
sbb
adcl
xor
inc
cmp
setl
testl
lret
dec
xchg
sahf
rolb
xor
in
jbe
in
popw
dec
jno
mov
xor
int3
sub
xor
stc
pop
arpl
popf
pushf
push
lds
mov
nop
fcoms
cmp
xor
rcr
xchg
stos
xor
pop
inc
inc
scas
mov
test
push
in
shl
mov
cmp
and
or
cmpsb
xor
test
push
inc
add
inc
pusha
mov
xor
xchg
imulb
cltd
stos
mov
test
and
lds
push
jmp
dec
xchg
cwtl
lock
loope
pop
sub
hlt
nop
pop
das
sbb
aaa
xor
mov
lods
mov
mov
in
jo
add
or
aaa
jb
je
cmp
call
pop
call
popf
int3
push
sarl
sbb
mov
jmp
scas
jae
inc
pop
unpcklps
adc
xchg
dec
mov
in
mov
adcl
adc
jns
addr16
or
adc
sbb
push
rcrb
nop
xor
mov
cmp
sbb
xor
cld
mov
pop
push
jecxz
lahf
cli
hlt
iret
xchg
enter
pop
push
cmp
xchg
clc
movsl
outsl
push
cli
cs
or
jmp
sahf
or
push
testl
popf
leave
push
ffree
cmpsb
pop
xor
in
in
xchg
pop
stc
mov
push
inc
mov
lcall
or
sbb
dec
dec
adc
insl
out
xor
xchg
subl
insb
ja
mov
fs
adc
movsb
jp
adc
pushf
fwait
push
xchg
movsb
packuswb
sbbl
sbb
pop
jge
mov
mov
dec
mov
scas
mov
pop
in
mov
push
jno
push
aas
je
jl
fisttpll
xor
xchg
cmp
mov
mov
mov
ret
shl
mov
in
fwait
sarb
enter
adc
nop
pop
cwtl
imulb
add
xor
and
xor
add
jmp
sbb
mov
clc
xor
mov
sbb
xor
push
add
stos
inc
icebp
sub
sbb
in
add
xlat
mov
imul
out
inc
jle
mov
mov
add
add
add
jle
dec
aaa
pushl
pop
push
xor
leave
dec
nop
xlat
mov
dec
adc
fwait
adc
jae
mov
insb
xor
sbb
adc
fs
xchg
lahf
dec
xchg
xchg
and
mov
rorl
mov
jle
stc
aam
jg
lcall
pop
push
call
jecxz
mov
mov
pop
pop
andb
jae
sbb
arpl
or
add
insl
clc
mov
cwtl
mov
and
push
jecxz
pop
nop
xchg
jae
sbb
xor
dec
xor
gs
cmpsb
hlt
xchg
fwait
in
enter
test
cmc
add
adc
pushl
movsl
xor
push
add
test
xor
fcmovbe
push
dec
mov
shr
xor
adc
mov
pop
out
push
or
out
jp
or
cli
test
pop
loopne
pusha
add
decl
xor
aam
fbstp
push
xor
out
mov
xor
cmp
adc
xchg
pop
cmp
insb
outsl
xor
push
cli
pop
inc
lock
negb
je
ljmp
out
cli
xor
sub
push
fs
xor
fcom
bound
mov
push
xor
add
xchg
pop
sub
cmp
and
push
jmp
sbbl
test
jl
les
popf
pop
adc
pcmpgtb
divb
scas
shrb
movsb
lock
out
sub
int
je
gs
adc
xchg
fidivs
and
push
xchg
outsl
xor
xorb
movsb
xchg
inc
add
push
sbb
int3
stos
jno
jl
xor
leave
std
int
incl
mov
xor
jmp
into
add
mov
xlat
inc
xor
mov
mulb
repnz
cld
test
mov
ja
mov
cli
sub
lods
pop
shlb
addr16
popa
jne
les
lret
jle
mov
cmp
in
je
mov
cmp
dec
ja
pushf
xor
test
or
dec
ret
mov
adc
je
cld
lds
je
sub
addr16
push
jmp
das
mov
popf
push
sub
andl
xor
les
pop
jmp
cmp
int3
nop
or
das
pop
pop
xor
fdivp
aad
gs
xor
ss
mov
sbb
push
mov
jne
xor
int3
dec
ret
into
sysenter
jl
rcl
dec
pop
xor
sbb
iret
mov
std
movsl
les
xchg
dec
popf
cmp
adc
or
xlat
push
adc
cmovl
xor
rclb
xchg
mov
jno
pop
or
xor
hlt
pop
jmp
xor
jbe
into
dec
dec
mulb
add
hlt
or
xor
xor
mov
arpl
lcall
add
les
lods
ja
mov
repnz
movsl
sbb
push
adc
movl
call
push
xor
mov
data16
gs
loop
std
cmp
pop
imul
xor
pushf
jl
fidivs
adc
in
rolb
dec
adc
aaa
dec
pop
ss
pop
push
hlt
int
xchg
test
adc
call
cmp
les
inc
movsl
mov
xor
loopne
subb
or
stos
adc
hlt
vmulps
fstl
xor
imul
test
xchg
test
test
mov
test
inc
into
mov
mov
xor
testb
outsb
mov
xor
push
aas
test
xor
or
and
or
sub
mov
push
icebp
mov
and
loope
adc
ljmp
push
xlat
inc
push
dec
hlt
dec
lret
test
ret
xor
sbb
cmp
and
outsl
mov
xor
xor
hlt
sti
and
mov
adc
inc
fs
add
xor
fdivrl
sbb
adc
pop
jge
push
pop
das
mov
movsl
rclb
xor
popa
inc
adc
out
imul
mov
pop
stc
je
xor
dec
cld
sbb
insl
jno
mov
jo
xor
lods
or
cmp
sub
push
mov
int
hlt
sbbb
fs
jmp
dec
mov
int
mov
and
fisubl
add
je
call
imul
sbb
popf
jp
cmpsb
mov
pop
xchg
xor
insb
subl
push
mov
js
jnp
add
cmp
ss
xor
sbb
push
out
sti
xor
sbb
aas
lock
jl
xor
adc
cmp
adc
addr16
stos
mov
mov
loope
sbb
leave
daa
xor
cli
adc
push
insl
inc
std
data16
lcall
xor
mov
or
mov
pushf
pop
dec
cwtl
lea
xchg
test
sbb
jb
inc
clc
in
je
mov
mov
mov
mov
fstps
sbb
fdivrs
ds
mov
xor
sub
loopne
lret
xchg
push
cwtl
out
clc
addr16
dec
push
stc
imull
xchg
xor
or
mov
ffree
sbb
add
cli
push
repnz
or
sbbb
xchg
pop
pop
hlt
jg
hlt
dec
jno
lcall
scas
adc
dec
or
lock
leave
xchg
or
fdivl
inc
lahf
push
push
pop
into
xor
in
xor
cmp
push
cltd
pop
movsl
cmp
inc
nop
out
dec
push
inc
pushf
add
adc
adc
sbb
jg
inc
rorb
push
mov
lret
cltd
xor
scas
push
sub
dec
or
sbb
xor
out
icebp
sub
xor
sbb
das
mov
inc
sbb
adc
mov
stos
int
es
push
aam
inc
xor
or
mov
repnz
mov
loope
ds
cmpsl
dec
xor
pop
out
out
test
scas
xor
bswap
jns
loope
or
xor
xchg
cmpsb
faddp
aam
mov
fcomi
xlat
out
daa
imul
shlb
adc
adc
cmpsl
scas
call
test
repz
pop
es
xor
mov
xor
xor
out
in
xchg
mov
aad
popf
inc
xchg
inc
sbb
lock
movsl
xor
mov
movsb
idivl
sahf
je
mov
adc
xor
mov
mov
or
sti
mov
mov
xor
pop
xor
mov
and
int3
sbb
mov
pop
shrl
clc
pushl
and
in
mov
xor
mov
lds
xchg
insb
xlat
adc
inc
cmpsl
pop
push
ret
stc
push
add
inc
mov
aad
xor
loop
xor
ds
xor
inc
add
and
rcrl
adc
mov
xchg
lds
xchg
ja
jo
dec
cli
sub
sbb
and
xor
inc
lods
mov
xor
dec
aam
jb
in
loopne
imul
jne
inc
ss
sub
mov
call
push
xor
jns
lea
pop
mov
xor
mov
dec
insb
xor
or
jecxz
mov
sbb
cmp
ret
jae
lock
xchg
divl
ljmp
pop
insb
or
out
push
add
int3
sbb
push
push
std
fwait
xor
mov
push
ret
push
out
pusha
adc
in
inc
iret
jl
sub
xor
repnz
jnp
xor
xchg
rcr
pushf
loop
jne
jle
outsl
push
mov
fwait
clc
ret
mov
rorl
push
sub
mov
xor
sub
out
mov
mov
pop
pop
insb
xor
pop
xorl
or
cmp
jne
mov
fidivs
push
add
std
notl
fldenv
fwait
lods
mov
xor
mov
ret
mov
adc
mov
repz
fwait
popf
shll
jg
lcall
movzwl
adc
jecxz
popa
jmp
lds
mov
sub
iret
adc
sbb
xchg
inc
movb
xor
pop
gs
dec
dec
xor
stc
lds
loope
out
addr16
leave
mov
clc
in
lret
add
popf
sub
testb
and
and
in
aas
mov
jno
cmp
jecxz
mov
mov
mov
xor
mov
mov
pop
mov
push
add
xor
push
movsl
mov
add
into
lds
push
adc
addr16
in
pop
faddl
into
pop
push
enter
test
lock
mov
xlat
fidivrl
add
stos
jg
cmp
cmp
fxch
jno
sahf
mov
loope
mov
and
xor
jg
ljmp
pushf
xor
mov
fildll
mov
je
lods
je
in
jg
sub
xor
or
test
xor
cmp
xor
mov
inc
inc
pop
xchg
xor
cmp
mov
sub
cmpsb
dec
mov
xor
out
sbb
in
mov
fwait
and
jg
pop
loope
jecxz
adc
test
test
and
xor
cmc
mov
or
ss
xor
rcll
fdivs
mov
pop
clc
adc
push
mov
add
sbb
push
rcll
fnsave
lea
mov
sbb
out
inc
and
push
call
imul
pop
xchg
sbb
xchg
mov
test
cmp
and
push
push
adc
inc
push
mov
inc
cmp
xchg
add
pop
jge
xor
push
mulb
in
mov
lds
xlat
sub
pop
mov
sub
repnz
enter
adc
pop
and
jae
je
jmp
sbb
cmp
test
push
insb
daa
jns
and
xor
out
rclb
test
add
xchg
mov
arpl
inc
ret
aad
mov
out
jp
push
pop
xor
movsl
jne
cmp
and
rorl
rorb
xor
xchg
lahf
cmp
inc
filds
jne
sbb
pop
jmp
pop
es
imul
cmp
loop
fsubl
sbbb
orl
add
xor
out
push
push
xor
jnp
fisttpl
mov
jns
mov
loop
push
mov
outsl
pop
add
dec
xor
cmp
je
inc
sub
orl
hlt
arpl
mov
repz
mov
or
je
mov
test
inc
xor
sbb
gs
idivl
out
sti
mov
mov
lods
pop
das
push
lret
mov
lock
push
or
aam
mov
adc
aaa
xor
cwtl
lock
jae
inc
jecxz
les
sti
pop
lahf
cmp
add
lods
lahf
fsubr
adc
xchg
push
adc
add
divb
or
adc
mov
push
sub
addr16
mov
dec
inc
add
pop
cwtl
sbb
xchg
adc
xor
jle
mov
sbb
xor
pop
lret
xor
lock
push
xor
mov
shrb
dec
iret
pop
repnz
aam
aaa
movb
sbb
mov
fdivs
adcl
enter
rol
mov
and
xchg
dec
mov
xor
xchg
je
xor
cmp
jecxz
lods
int3
data16
mov
jbe
pushf
and
es
stc
fmuls
push
add
adc
or
xchg
pop
cmp
mov
mov
rolb
mov
xrelease
divb
aam
mov
jno
xor
mov
call
les
out
mov
cli
scas
fs
fdivrs
clc
gs
dec
push
rcll
loope
or
mov
cmp
ret
or
dec
mov
mov
test
adc
jnp
xor
push
cmovp
xchg
xchg
sbb
jae
nop
adc
push
xchg
lock
xchg
cmpsl
xchg
outsb
mov
hlt
inc
pushf
cli
std
mov
jp
cwtl
mov
loopne
call
nop
cli
clc
xchg
dec
add
cmp
lcall
mov
icebp
insl
dec
pop
and
pop
dec
rcrb
rclb
mov
mov
jmp
mov
mov
pop
call
rolb
ss
xchg
mov
jl
xor
outsl
insl
adc
rclb
push
add
fwait
bound
adc
insb
fsubr
sub
lret
lea
jns
lock
mov
pop
push
repz
shl
scas
sbb
or
push
out
mov
or
or
test
sub
rcpps
add
jecxz
pusha
mov
push
jmp
cmp
inc
mov
out
mov
mov
enter
fists
inc
int3
ret
cld
xchg
add
pop
jg
xor
sti
jge
pop
repnz
add
mov
mov
pop
sar
js
mov
les
iret
loopne
add
fcmovne
shl
fsubl
out
push
xchg
or
or
pop
pushf
mov
in
sub
mov
addr16
dec
fldt
mov
mov
add
sbb
cs
and
mov
inc
sti
pop
lea
xor
mov
loopne
subb
aad
lret
jb
aam
daa
aam
adc
adc
cmp
pop
adc
shlb
lock
inc
sbb
adc
mov
ja
xor
lcall
adc
push
jo
push
sarl
xchg
or
scas
aam
ret
mov
adc
cmp
ljmp
lahf
sbb
dec
orl
or
or
jmp
sbb
test
sub
or
adc
ror
and
pop
mov
icebp
mov
dec
enter
adc
fs
fsubrl
jo
and
int
or
cltd
les
mov
icebp
adc
sbb
pop
inc
sbb
xchg
cmc
push
les
mov
mov
push
pop
mov
mov
or
shl
or
adc
shlb
adc
sub
add
xor
outsb
in
dec
dec
sub
cmp
adc
imul
call
xorl
mov
xchg
enter
add
pop
sbbb
mov
adc
sar
and
xchg
repz
add
xor
adc
sub
lock
outsb
mov
add
repz
mov
add
jno
in
rorb
lret
add
add
adc
adc
ljmp
fsubrp
dec
or
sub
and
sbb
incl
mov
aaa
mov
nop
jl
inc
push
dec
clc
adc
call
push
test
push
imul
adc
mov
inc
mov
nop
test
in
or
repnz
xor
std
dec
dec
push
xchg
mov
dec
push
hlt
or
jmp
je
push
add
push
xchg
xor
mov
inc
cmp
cs
xchg
nop
mov
adc
decb
mov
adc
lods
call
mov
adc
imul
sub
mov
cmp
fidivs
or
ds
or
mov
jp
lret
sub
adc
addr16
sbb
xor
je
sbb
movsb
sub
loop
sbb
outsl
adc
add
push
lock
add
hlt
or
sbb
or
in
icebp
push
movsb
in
cmp
sti
fsubs
stc
or
mov
jae
sti
mov
mov
loop
sub
sbb
adc
ret
xchg
in
add
adc
shlb
push
mov
push
mov
or
xchg
stc
push
xchg
jns
rorb
dec
add
paddq
or
adc
push
je
ja
rorb
jle
lds
fsts
aad
adc
outsb
lret
lock
mov
les
sti
dec
lahf
cmp
jecxz
dec
sbb
sahf
loop
mov
dec
xor
mov
or
mov
push
mov
xor
je
or
ljmp
xor
add
sbb
and
fsts
inc
sub
fbstp
pop
lahf
add
mov
adc
movsb
dec
dec
ret
je
clc
push
aad
je
in
push
push
adc
into
or
lods
jg
int
clc
pop
xor
mov
sub
push
fildll
in
push
shll
push
or
pop
xchg
cmp
fsincos
xor
clc
and
mov
bound
xor
mov
cmpsb
adc
cs
push
xor
jp
adc
shrb
xchg
pushf
jl
aam
in
cmpsb
fsubr
rolb
enter
lock
xor
push
lahf
cmp
cli
popf
nop
loopne
xor
lock
fcomps
adc
add
inc
repz
inc
sbbb
aam
mov
add
or
lret
movsb
lds
into
jb
call
add
mov
scas
adc
fstl
push
add
sbb
xchg
mov
jae
jae
popa
xchg
add
pop
sbb
and
adc
sti
lret
push
movb
or
jecxz
dec
lret
cmpsl
adc
cwtl
test
push
roll
movsb
pop
adc
outsl
cltd
add
test
jbe
cwtl
testb
rcrb
rcrl
repz
enter
mov
out
cld
enter
call
xchg
jmp
dec
cltd
movsb
jae
arpl
jmp
sbb
mov
out
xchg
xchg
or
ljmp
ljmp
xor
push
add
movsb
sahf
dec
mov
test
dec
or
cld
add
ljmp
mov
add
xor
in
add
psubusb
mov
mov
lods
out
fisubrs
or
rep
clc
rorl
inc
shlb
fstpt
repnz
or
lret
or
pop
jmp
aad
xchg
mov
adc
rcr
mov
rcrb
call
in
add
cld
cld
cli
jmp
shlb
insb
dec
shll
mov
insb
shrb
faddp
nop
loop
cs
lock
stos
adc
dec
cmpsb
push
push
hlt
out
test
or
mov
or
aas
adc
add
mov
or
test
test
add
testb
or
xchg
mov
in
dec
outsb
or
andl
cmp
or
sti
ret
enter
shlb
adc
shrb
cmp
ror
jecxz
mov
push
ret
or
into
fstpl
xchg
mov
adc
sbb
mov
adc
jmp
scas
mov
xlat
add
mov
into
int3
fmull
lods
cwtl
sahf
mov
cwtl
mov
test
rol
sbb
scas
imul
inc
and
lea
or
push
cmp
nop
pop
pop
adc
jmp
adc
or
mov
or
xlat
adc
fwait
add
aad
aam
movsb
rolb
test
sti
mov
jmp
fisttpl
add
sti
and
test
fwait
and
or
add
lock
int3
mov
shrb
mov
pop
lock
int3
cmpl
push
pop
repnz
out
mov
add
outsb
repnz
push
jo
sub
adc
push
pop
jecxz
or
enter
int3
lcall
lcall
ds
test
test
imul
test
sub
js
add
mov
or
iret
mov
add
add
dec
fldenv
pop
shll
push
enter
mov
in
roll
outsb
or
cmp
outsb
sbb
cs
mov
and
pop
inc
es
jecxz
sub
movsb
jmp
roll
int
xchg
je
fcmovnu
popl
jmp
mov
jne
fiadds
inc
test
stc
es
aaa
notb
xor
repnz
test
mov
mov
shr
iret
fisttps
fsubrl
cli
xlat
popa
adc
sti
adc
clc
push
add
mov
push
xor
inc
jns
jle
rcl
andb
pop
xor
xor
xchg
mov
test
mov
pop
add
push
loopne
mov
lds
add
adc
scas
mov
insl
mov
and
hlt
out
adc
xchg
sub
mov
test
sbb
hlt
lret
bound
out
dec
xor
cmpsl
test
inc
xor
xchg
ss
fs
rorl
jae
xchg
pop
inc
fs
mov
dec
mov
xor
sub
sub
push
lods
xor
xchg
add
xor
cmp
lock
push
push
lds
dec
movsb
ljmp
or
mov
in
push
cltd
and
icebp
push
xor
sbb
shlb
sti
push
add
punpcklwd
inc
out
sub
arpl
ja
xchg
pop
mov
scas
mov
loope
stos
test
push
xor
adc
inc
test
inc
jl
push
daa
mov
xor
les
jb
mov
xchg
fsubs
push
sub
pop
jae
xor
inc
lds
jne
leave
lock
push
int3
xor
dec
mov
and
sub
adc
push
repz
in
jl
or
pop
push
sbb
insl
mov
xor
jo
in
mov
sbb
jl
mov
jno
lret
shl
ficompl
hlt
xor
test
repnz
arpl
xor
ret
xor
or
ss
dec
xor
xchg
or
mov
fdivl
mov
hlt
mov
xor
test
add
jmp
testb
mov
iret
mov
add
xor
int3
rclb
xor
or
add
xor
divb
xor
pop
xchg
aaa
test
xor
psubusb
dec
ret
sub
cmp
imul
inc
sub
aam
mov
es
xor
rcrl
push
jge
xchg
pop
jl
add
loop
sub
xlat
xor
push
push
xchg
icebp
insb
add
call
and
scas
faddp
jo
popf
sbb
in
lods
mov
inc
mov
mov
add
arpl
dec
cli
pop
xor
or
ljmp
push
fidivrl
in
lods
dec
and
into
sahf
push
xor
inc
stos
mov
outsl
fcom
push
clc
xlat
popf
jb
les
aaa
sub
and
xor
mov
hlt
cmp
mov
pop
add
cs
add
imul
aad
push
push
add
sbb
lea
aaa
push
in
xor
inc
mov
add
mov
adcl
clc
addr16
shrl
ret
push
add
popf
or
xor
cld
outsl
xchg
mov
jne
xor
and
add
stc
or
cmpb
and
into
pop
iret
push
div
das
or
push
sysenter
xor
xor
mov
jo
dec
cwtl
xor
push
push
movsb
movsl
js
xor
mov
loopne
pop
or
pushf
pop
xor
mov
jnp
or
xchg
push
ret
xor
hlt
das
jns
push
push
lret
fwait
cmp
inc
jl
shll
pop
fdivr
pop
hlt
vsubps
scas
cwtl
jl
cld
sub
add
jle
sarl
pop
ds
jmp
lret
inc
cmp
jmp
outsb
and
cmpl
divb
jne
push
jno
fildll
mov
in
xor
imul
rorl
pusha
cmpsl
xor
xor
ljmp
add
js
xchg
push
xchg
or
lds
std
add
lret
test
lock
stc
adc
sbb
jg
mov
or
dec
xor
jo
cmpsb
jns
rclb
xchg
adc
inc
add
sub
inc
xlat
xor
dec
sbb
cmpb
les
in
xorb
mov
mov
sub
mov
push
decb
adc
nop
aas
adc
sub
xor
aam
aaa
cmp
lret
insb
in
ds
push
push
sbb
xor
inc
je
adc
andl
movsb
dec
pushf
lea
mov
xchg
repnz
stos
mov
push
test
cmpl
add
and
lea
jmp
divb
push
sahf
jb
test
adc
mov
cmp
xor
pop
cmp
adc
popf
inc
adc
aas
or
xchg
jne
add
sub
loope
pop
hlt
xor
inc
push
sub
testb
clc
xor
fwait
repnz
add
mov
les
sbb
lret
or
and
leave
xor
das
stos
fistl
seta
inc
outsl
sbb
int3
jl
pop
cmp
test
or
call
mov
daa
push
scas
mov
insl
aam
jns
sbb
cmp
hlt
xchg
dec
xor
ja
lods
xor
leave
add
cld
in
insb
scas
dec
mov
lds
sub
pop
in
lahf
mov
je
sahf
es
test
jg
xchg
xchg
and
push
aam
or
stc
dec
cli
cmp
jb
pop
out
popf
sbb
jle
mov
addb
push
addr16
add
xchg
adc
arpl
dec
jbe
sbb
ss
push
push
xor
sub
push
lret
je
incb
push
pop
int3
mov
in
ljmp
xorb
push
mov
xor
idivl
int3
and
daa
inc
inc
and
fsubrl
xor
add
scas
dec
jbe
xor
xchg
sbb
int3
xor
push
icebp
xchg
jnp
push
ja
loopne
or
clc
pop
lahf
pushl
pop
push
cmc
jmp
cli
sbb
add
dec
stos
mov
lea
shl
inc
xor
and
fadds
cltd
inc
pop
lds
dec
cmpsb
faddp
ret
adc
mov
mov
and
xor
daa
mov
inc
int3
inc
mov
jo
xor
das
cmp
sti
xor
or
clc
jp
mov
hlt
add
xor
inc
push
sbb
icebp
gs
mov
lods
fmul
jmp
pop
dec
out
xor
mov
jg
mov
xchg
arpl
test
sub
xor
push
sbb
and
or
inc
mov
jl
sub
sbb
sbb
xor
mov
push
cmc
xchg
cmpsb
and
test
pushf
xor
sbb
fldl
push
mov
jecxz
cld
add
mov
xor
call
mov
xor
popf
lods
pop
test
push
and
jo
sti
add
adc
push
jl
and
and
xor
add
xchg
push
cmp
cmc
popf
stc
jne
pop
pusha
mov
es
sub
scas
xchg
mov
imul
push
xchg
sbb
cmc
mov
push
sarl
cli
jbe
mov
mov
sti
ret
cli
xor
mov
call
insl
xchg
mov
inc
or
divb
mov
mov
decl
loopne
sarl
in
push
or
push
es
pop
add
xchg
clc
xchg
jmp
and
movsb
xor
or
outsb
xor
imul
adc
mov
mov
adc
pop
out
xchg
and
loope
sub
not
lret
test
pop
scas
pop
xor
scas
les
pop
es
push
cmp
hlt
push
xlat
sub
xor
cmpl
cmpsl
leave
into
fadd
mov
mov
fstpt
lretw
push
pmuludq
xor
sbb
mov
sbb
jne
nop
xor
xor
inc
mov
pop
push
push
loop
je
arpl
addr16
add
cmp
xor
in
hlt
lcall
dec
inc
sbbb
jl
data16
push
or
insl
mov
xchg
jno
xor
jp
jno
mov
pushf
adcl
ljmp
xor
push
imul
ja
mov
push
test
xor
push
and
insb
xor
shll
call
je
enter
add
addr16
inc
cmpsl
inc
stos
push
pusha
dec
xor
mov
sahf
sbb
dec
pop
cmp
shll
in
dec
dec
push
jbe
scas
imulb
sbb
mov
xor
popa
add
test
or
sub
xor
iret
and
xor
cmp
cmc
mov
xor
aad
mov
addr16
push
push
or
add
cli
pushf
lock
out
fstps
cmp
inc
mov
je
icebp
outsl
and
repnz
lret
fdivrs
mov
pop
xor
shrl
jge
pusha
cmp
int
push
dec
sbb
xor
or
test
mov
cmp
xor
cltd
xor
adc
xor
sarl
xor
pushf
sub
pushl
arpl
outsb
add
inc
push
lea
fld
pop
jns
jp
dec
and
stc
adc
sahf
xchg
or
mov
fcmovnb
cld
push
lcall
add
outsl
cmpb
call
imul
sbb
sub
xor
test
jns
push
out
bound
push
xor
sbb
push
js
jle
xor
mov
adc
lret
popf
inc
rep
andb
imulb
aam
lret
loop
xchg
int
insl
xor
push
jno,pn
or
fdiv
int
dec
add
stos
jae
in
push
xchg
jmp
ds
mov
push
ljmp
mov
xchg
inc
fsubrl
xor
mov
mov
je
push
nop
lock
adc
iret
movsl
enter
std
cmc
hlt
ret
mov
inc
push
cmp
or
je
sub
mov
pop
dec
push
or
les
les
divb
xchg
xor
roll
lcall
mov
push
push
sahf
lea
and
add
add
in
pop
jecxz
je
lods
jnp
xchg
cmp
dec
mov
lahf
imul
add
xor
push
test
aad
jns
popa
xor
mov
sahf
push
enter
jb
aaa
xor
nop
mov
bound
xor
clc
xor
stc
popf
int
pop
arpl
movsb
push
add
int3
mov
dec
fildl
cmp
inc
push
mov
push
in
popa
pop
fstl
inc
dec
shll
add
adc
sti
jl
xor
mov
rol
add
mov
lret
fucom
pop
xor
pusha
arpl
scas
test
sbb
frstor
dec
mov
xchg
enter
popf
icebp
inc
test
xchg
push
pop
adc
jne
nop
sahf
sbb
adcb
dec
pop
cmp
jecxz
loop
mov
aas
xor
lret
pop
subb
ljmp
idivl
dec
xor
dec
cmp
arpl
cmp
cltd
outsl
sub
push
cmp
push
sub
les
inc
roll
jp
nop
xchg
pop
sahf
repz
inc
or
jae
out
int3
sarl
js
jg
and
adc
cmp
mov
fdivp
xor
pop
es
ss
out
push
pushf
cwtl
leave
cmp
shlb
or
sub
sahf
sbb
mov
sbb
xor
push
imul
es
mov
sti
push
mov
xor
dec
mov
mov
je
fnsave
int
in
je
lea
push
jne
and
mov
sbb
xor
aam
movl
pop
pushf
jg
int
add
out
push
mov
jne
ja
pop
push
and
pusha
lcall
pop
in
lea
sub
hlt
pop
xor
aaa
loop
aas
scas
mov
xor
aam
enter
pop
sbb
jecxz
rolb
loop
push
inc
hlt
sahf
and
add
rolb
inc
or
xor
pop
xor
adc
and
pop
jle
mov
jns
pop
cmp
pop
in
adc
and
mov
xor
aas
ret
and
push
outsb
cmc
push
adc
xor
rclb
movsl
push
jnp
xorb
add
xor
mov
mov
adc
xchg
and
mov
push
clc
jmp
push
inc
adc
cmpsb
xor
jnp
cmp
fdivl
sub
flds
push
or
bound
adc
push
cmp
adc
ficompl
sti
cmc
or
cmpsb
mov
pop
sbb
sub
loopne
out
xlat
pop
popf
aam
xchg
xor
sub
arpl
test
das
push
addr16
xchg
xor
loope
aas
dec
or
or
movsb
mov
int
xor
mov
lahf
sbb
pop
jo
sub
mov
cmp
inc
out
xor
pushf
test
sbb
jo
cmp
push
adc
mov
cltd
je
sbb
cs
xor
test
xor
pusha
ret
fistpl
jno
pop
lret
mov
int3
mov
repz
jl
or
sbb
push
lods
cmp
mov
std
jnp
cmp
test
leave
xor
inc
in
jb
ja
cmp
or
loope
movsb
xor
xor
and
mov
and
js
cmp
int
pushf
loope
scas
jmp
push
aad
add
push
das
cmc
xorb
fidivrs
mov
in
xor
sub
add
lret
push
adc
ret
jecxz
jl
mov
add
xor
mov
push
jns
push
aam
xor
sub
adc
cmp
push
int
aam
pushf
je
xchg
mov
gs
mov
xor
leave
jo
fwait
dec
rcl
mov
stos
mov
xor
jae
sub
repnz
xchg
xchg
icebp
mov
push
xor
jo
iret
sbb
nop
or
push
lds
xor
popf
cmp
repnz
in
inc
andl
jne
pop
pusha
jnp
mov
nop
fisubrl
dec
movsb
cmc
loopne
lock
inc
orb
fwait
repz
cmc
test
out
dec
jl
xor
mov
cmp
cs
xor
jp
outsl
test
push
loopne
out
mov
xchg
inc
aad
fsubp
xor
clc
xchg
pop
pop
lods
sbb
inc
aam
mov
test
or
mov
jno
dec
xor
inc
test
in
pop
std
rcll
out
or
push
or
hlt
adc
lods
pop
pop
es
cmp
fisubs
xor
and
push
xor
adc
jbe
int3
and
sbb
pop
int
outsb
push
psubb
mov
sarb
xor
stos
sarb
adc
lods
push
xchg
mov
and
cs
ja
pop
pusha
ss
ds
dec
fiadds
add
test
loop
sbb
or
mov
push
xor
fists
flds
push
aad
mov
mov
xchg
push
inc
xor
decb
sub
cs
data16
mov
shrl
ss
xor
xchg
mov
in
sbb
mov
fs
lahf
adc
cmp
out
pop
dec
cmp
testb
aaa
dec
add
shlb
or
sbb
das
push
je
fiaddl
xor
push
test
dec
and
insb
je
fsts
push
xor
and
imul
lods
inc
into
dec
adc
std
xor
mov
outsl
out
sub
xor
mov
into
pop
xor
xor
adc
xor
stos
cld
hlt
lret
js
shl
mov
pushl
adc
divb
jge
dec
sub
mov
dec
jmp
push
xorps
xchg
movsb
sbb
adc
je
jo
divb
pop
pushf
orb
fwait
add
sahf
and
ja
cmp
xchg
stc
sbb
sbb
xor
test
popa
pop
xchg
insb
push
lock
xor
mov
js
subl
fs
xchg
ret
or
aam
movups
fldenv
mov
inc
rcll
xor
inc
sbb
lahf
jno
xchg
scas
xchg
aas
push
les
fwait
and
out
loope
negl
mov
xor
lret
adcl
jge
dec
xor
inc
cmp
les
xchg
rorl
push
dec
adc
andl
and
mov
xor
stos
xor
mov
sbb
xor
lock
movsl
or
mov
inc
cltd
inc
jns
inc
push
xor
pop
cld
shlb
shll
fistpl
pop
sub
mov
adc
xor
mov
push
shl
gs
xor
scas
xchg
sbb
pop
repz
xor
add
dec
dec
jb
cltd
dec
cli
cli
xchg
shlb
jmp
jge
xchg
adc
pop
out
xor
add
mov
mov
into
test
mov
and
sub
sub
fs
push
test
and
into
cmp
lcall
push
inc
and
rol
jno
movsb
push
call
es
jl
mov
je
inc
fidivl
jmp
jmp
rol
xor
sub
fistl
mov
or
push
xor
and
aas
hlt
divb
lahf
stos
pushf
call
sbb
lcall
cs
xor
dec
inc
mov
xor
fs
mov
mov
scas
adc
xor
pop
int3
pushf
sbb
sub
adc
cmp
mov
mov
xchg
dec
je
fwait
movsb
xor
not
sub
sbb
mov
adc
cmp
pop
aaa
adc
dec
popa
push
dec
sub
idivb
test
xor
or
stos
cmp
pop
push
and
gs
hlt
aad
rclb
xor
add
ss
and
xchg
adc
sub
sbb
notb
fdivrs
xor
push
rcrb
in
ret
sbbb
push
push
sbb
test
ds
out
or
std
cmp
or
push
or
shlb
mov
xor
push
leave
dec
je
xchg
js
pop
cmp
xchg
outsl
fsubrl
pop
xor
mov
pop
and
jl
call
shlb
mull
stos
mov
imul
mov
and
xor
pop
push
stc
call
jmp
fdivrs
adc
sbb
pop
ds
xor
faddl
jl
pop
outsb
incb
mov
aad
xor
dec
xchg
sahf
xor
cmp
add
or
icebp
out
loopne
xor
and
mov
leave
xor
and
pop
push
inc
xor
mov
fwait
sbb
sbb
mov
xor
dec
adc
movsb
insl
aas
cmpb
sub
jne
mov
rclb
xor
push
fld
xor
push
or
inc
xchg
je
in
icebp
loope
leave
sub
xor
fadds
lret
aad
lea
das
mov
and
inc
fiadds
push
pop
nop
test
and
sub
xor
into
mov
mov
pop
clc
mov
cmp
sub
xor
push
jle
xchg
mov
mov
jge
mov
and
xor
push
les
pop
xchg
xor
lods
std
dec
cmpsb
popf
cmp
add
out
xlat
xor
adc
aam
xchg
bound
xor
cmp
inc
adc
mov
push
mov
add
pop
jmp
arpl
push
cwtl
scas
jmp
and
insl
ja
xor
cmp
jecxz
jno
push
mov
sub
loopne
inc
popf
jl
jge
je
xor
nop
or
sub
cwtl
cmp
push
movsl
out
mov
xor
fwait
hlt
das
xor
dec
inc
push
stos
pop
push
dec
stc
adc
mov
xchg
cmp
mov
rclb
sub
inc
push
imul
xor
cmc
aam
sbb
jp
or
xchg
imul
or
xor
enter
mov
push
inc
and
sysenter
jecxz
lcall
dec
adc
fbld
push
xlat
in
fdivs
outsl
mov
pop
shrb
or
cmp
xor
cltd
xor
js
test
or
mov
and
out
dec
xor
push
mov
mov
and
mov
cld
inc
ret
inc
adc
mov
xor
mov
cwtl
in
cs
icebp
inc
and
mov
add
adc
inc
cs
mov
cld
xchg
xchg
aad
repz
jge
das
sub
jmp
adc
inc
sub
sbb
mov
fs
ret
xor
mov
pop
xor
jb
mov
mov
mov
paddd
jns
dec
lahf
push
jno
fs
adc
xor
mov
daa
nop
sub
xor
and
loope
push
adc
xor
and
inc
jg
xor
or
cli
rcl
cmp
or
lock
lock
xor
cmp
adc
xchg
xor
fcmovnu
subb
mov
add
xor
jb
inc
mov
cmpb
fs
aas
shlb
repnz
pop
popa
xor
xchg
scas
aam
and
sub
loope
js
outsl
inc
dec
fwait
xor
or
pop
mov
ja
lds
pusha
xor
add
je
xor
xorl
and
jb
adc
add
pop
icebp
divl
add
in
or
xor
mov
fstl
in
addb
fs
pop
std
sbb
fwait
hlt
jno
add
xchg
mov
xor
push
inc
popa
fcmovu
pop
dec
adc
and
push
popf
in
das
pop
xchg
scas
push
adc
and
add
scas
xchg
or
les
leave
mov
xchg
xor
outsb
mov
xor
sbb
push
lcall
in
insb
aad
fs
push
rcpps
aam
xchg
xor
xor
mov
sub
sub
adc
xchg
cmc
fdivl
sahf
lods
pop
mov
mov
aad
push
push
xor
adc
mov
out
fstpt
xor
cmc
aas
push
mov
pop
ds
or
stos
add
push
test
cmpsl
mov
xor
jp
icebp
cld
push
ljmp
test
sub
aaa
xor
sbb
xor
in
lret
enter
out
pop
cwtl
xor
mov
cmp
adc
mov
sub
sbb
divb
mov
adc
xor
sub
lods
xchg
scas
aad
xor
jl
adc
mov
jb
rolb
outsb
xor
stc
daa
test
push
rol
sub
add
mov
or
lcall
addr16
test
cmp
mov
pop
in
mov
mov
popa
dec
and
add
mov
push
ds
sbb
push
sahf
scas
adc
xor
and
incl
sub
and
fcoml
xor
sbb
jbe
arpl
in
xor
aam
addr16
int3
cmp
dec
lods
push
pop
les
and
les
clc
div
pop
pop
sahf
xchg
iret
ds
mov
outsl
xor
cltd
adc
jb
call
dec
pop
adc
pop
inc
xchg
pop
mov
xor
mov
adc
and
or
stc
in
dec
sbbb
adc
adc
daa
rorb
ret
mov
cld
xor
fldt
lret
adc
andb
push
mov
inc
push
adc
or
push
dec
xor
xchg
int
or
mov
push
daa
sub
jae
out
arpl
jmp
fs
fs
pop
test
pop
lcall
sti
fs
test
mov
orb
and
ficompl
push
jp
mov
inc
jno
cmp
cmpsl
lret
xor
xchg
outsl
imulb
xor
shll
cmp
repz
or
pop
inc
xor
fldenv
adc
and
jmp
and
roll
inc
into
inc
ss
pop
stc
loopne
push
cli
cmc
popf
mov
cld
enter
loope
fdiv
shlb
xor
xlat
leave
stos
adc
imul
xor
std
or
add
test
or
and
adc
insl
and
out
ds
fs
xor
call
pop
push
cmp
daa
repz
sti
mov
sarb
xor
in
push
add
or
mov
xor
jbe
int3
fistpl
test
xor
and
xor
lods
fisttps
in
sub
lods
sbb
pushf
andb
add
cmp
rcrb
sbb
inc
xor
test
mov
sbb
xor
lods
movsb
lret
aad
xor
movsl
iret
loop
fneni(8087
in
xlat
xor
mov
pop
int
movsb
jecxz
xchg
ret
ret
xor
push
and
sbb
and
xor
dec
pop
jbe
fs
xor
cltd
mov
jae
jl
xor
ficoms
subb
sahf
xor
popf
imul
push
jmp
or
lds
xchg
pop
add
mov
out
cmpsb
cmpsl
push
popa
dec
sbb
insb
mov
dec
jae
xchg
sub
dec
xor
push
std
pushf
lret
lods
lcall
rorl
and
cmp
mov
or
push
aam
xchg
fstpl
mov
jge
out
test
xor
and
mov
cmc
add
lods
adc
adc
test
mov
mov
xor
insl
push
faddl
push
out
fimuls
mov
bound
jl
pop
insl
xor
xor
hlt
lods
loopne
lock
xor
xchg
jge
pop
sbb
adc
sub
xchg
mov
out
push
xchg
out
push
int3
rol
xor
add
ljmp
dec
inc
scas
mov
mov
or
xor
sub
lret
sti
jp
das
xor
push
loopne
xchg
rcrl
cmc
sub
adcl
xchg
popf
xor
adc
lahf
fsubs
cwtl
pop
mov
push
loope
not
mov
adc
jp
adc
iret
aam
inc
pop
jnp
in
imull
push
xor
mov
imul
lret
cmp
pop
push
les
jbe
sub
enter
adc
pop
dec
sub
cmp
xor
add
or
push
inc
push
das
and
xchg
mov
jg
out
out
loope
xor
fsubp
scas
pop
pop
sbb
test
hlt
pop
push
add
nop
add
pop
sbb
fwait
adc
cmp
mov
mov
xchg
xor
add
stc
jg
sbbb
push
lock
sbb
xor
pop
jge
adc
or
cmp
push
and
fcompl
jae
mov
popa
cld
and
add
int3
mov
pop
pop
xor
fistps
lock
rorl
xor
cmp
cmp
mov
push
call
mov
cld
mov
repz
inc
adc
jecxz
push
mov
xchg
gs
pop
xor
mov
xor
adc
mov
lods
leave
filds
jecxz
enter
xchg
nop
xor
inc
mul
pop
int
stos
adc
push
fisttpl
inc
inc
xchg
cmp
jb
add
jl
and
push
pop
xor
cmpsb
mov
jp
out
pop
aaa
inc
mov
inc
adc
and
fwait
dec
jecxz
xor
bsr
sbb
jmp
add
jge
icebp
sar
sbb
pop
adc
pop
xor
mov
in
mov
xor
mov
adc
aad
xor
xchg
in
fcompl
adc
xor
cmp
jle
mov
push
imul
xor
and
pop
mov
iret
xor
cmpl
dec
xor
sbb
or
add
test
rcrl
mov
lods
mov
pusha
xor
stos
fs
pop
pop
cwtl
sti
sub
mov
sub
cmp
out
xor
cmp
mov
xor
insb
pop
sti
shlb
repz
out
sub
adcb
ja
fs
mov
push
lea
sbb
xor
mov
mov
push
shll
movsl
pop
xor
jg
inc
scas
cmp
movsb
xor
std
adc
ss
jne
cmp
pop
add
ds
xor
loop
lcall
and
sarl
xor
mov
dec
adc
add
repz
lds
or
xor
xor
lcall
mov
rclb
mov
xor
outsb
xchg
jae
pop
push
or
xchg
adc
xor
add
in
lock
cmp
pop
xor
loope
xchg
jp
and
mov
bnd
mov
lods
push
push
pop
or
sub
pop
scas
loopne
xor
xchg
sbb
out
cmp
pop
int
ss
cmp
imull
cmp
ljmp
cmp
inc
out
or
xor
pusha
data16
mov
lds
das
std
in
stc
insb
xor
mov
jge
adc
outsb
xor
jnp
inc
and
pusha
dec
xchg
icebp
mov
ljmp
push
rcll
fldt
mov
dec
inc
sahf
xor
pop
jg
jle
or
shll
mov
xchg
xor
jmp
adc
ja
jae
mov
push
aas
js
imul
sbb
loop
xor
pop
mov
push
shr
push
pop
xor
inc
xor
sub
fldt
mov
pushf
and
enter
fidivrl
push
vpcmpeqw
inc
dec
lea
repz
mov
xchg
xor
outsb
or
gs
jge
sbb
movsl
dec
xor
lods
int
cmp
or
lret
inc
inc
sbb
addr16
mov
xchg
ja
mov
subb
mov
les
loop
sub
int3
addl
cmp
xor
lcall
xor
popf
sahf
sti
subb
xor
ret
stos
xchg
rcrl
aam
repnz
lcall
xchg
cmp
dec
fsubl
aam
std
shlb
xchg
inc
lahf
mulb
sar
fistpll
jp
jmp
es
dec
je
sub
xor
shlb
inc
mov
andl
idivl
shll
cmp
jecxz
inc
xor
mulb
or
adc
adc
mov
jge
pushf
pop
pop
shrb
dec
xor
push
test
cmpsb
xchg
lds
dec
hlt
cmp
inc
sub
daa
xor
xchg
cs
push
xor
jo
outsl
out
or
std
xor
rol
jp
repnz
adc
jns
int
fnstenv
jp
xchg
popa
xchg
and
cmp
xor
add
mov
imul
xor
imull
inc
and
push
jns
xor
repnz
dec
call
mov
ret
out
pop
pusha
fbstp
inc
xor
lock
sbb
mov
cmpsl
cmc
enter
inc
sbb
icebp
nop
std
xor
mov
addl
jmp
inc
je
xchg
sub
cmp
xor
mov
fcompl
mov
xor
and
shrl
mov
insl
subl
dec
movsb
sub
stos
or
fcomps
adc
xor
movsb
lcall
xchg
adc
inc
jnp
lock
xor
int3
ja
push
jp
mov
fiadds
pusha
mov
shlb
cmpsb
in
fidivl
inc
mov
xor
or
xor
and
pop
push
adc
dec
hlt
pushf
insb
ret
and
cmp
pop
mov
xor
test
es
mov
into
or
mov
inc
cmc
mov
insl
enter
lahf
xor
imul
pop
daa
sbb
sub
push
xor
fisttpl
adc
jle
dec
pop
stos
mov
popf
adcl
add
mov
enter
nop
jl
out
jno
dec
mov
push
das
cmpsl
xchg
leave
jge
jo
sbb
ret
xchg
aaa
out
mov
out
xor
fwait
xchg
cmc
mov
xor
adc
sub
sti
xor
sub
inc
and
movsb
jl
push
cs
test
pushf
sub
lret
xor
ret
or
into
fadds
mov
push
loopne
pop
shlb
jle
fs
inc
xchg
push
call
adc
pushf
sbb
xchg
imul
dec
add
adc
cmp
inc
loopne
repnz
repz
inc
fdiv
pop
push
add
inc
mov
cmpsb
xor
nop
sub
mov
jno
or
fists
xor
jne
or
and
pop
cs
lret
outsl
je
pop
push
xchg
push
in
xchg
sbb
insb
inc
cmp
mov
ret
adc
pop
push
test
dec
jg
jns
je
xor
xchg
inc
ds
or
lahf
xorps
into
pusha
ss
repz
add
in
cmpsb
jb
scas
fs
pop
adc
adc
sbb
dec
add
fstpt
add
cmp
je
dec
mov
pop
mov
jb
cmpsl
outsl
sysenter
pop
mov
in
mov
cld
push
jecxz
cmp
imul
int3
xor
pop
pop
mov
adc
in
jbe
data16
loop
lods
movsb
out
loopne
test
ficompl
inc
inc
repz
xor
mov
sahf
xchg
in
or
ds
scas
out
xchg
push
fs
movsb
jns
sbb
jno
xor
ret
sysenter
idivl
mov
data16
mov
push
inc
xor
jmp
pop
jne
and
xor
pop
dec
jle
cmpsl
roll
inc
cld
dec
push
je
mov
mov
cmc
xor
xchg
bound
pop
or
sbb
xchg
mov
lret
mov
into
push
movsb
cmpsl
mov
leave
sub
mov
mov
adc
xchg
dec
adc
ret
push
jo
push
je
sub
adc
or
jnp
test
fstpt
and
push
lods
or
testl
scas
mov
add
mov
and
scas
cmpsb
jg
xor
and
or
dec
and
xchg
scas
pop
or
sub
xor
jle
mov
cmpsb
xor
add
xor
pop
sub
sbb
subl
mov
lahf
stos
sti
fbld
dec
push
lea
adc
xor
cmpsb
inc
jl
popa
dec
push
xor
mov
xor
out
mov
pop
push
mov
sbb
das
add
jae
push
fwait
mov
out
dec
dec
fimuls
das
sahf
fs
ljmp
popa
and
nop
sub
xor
sahf
lods
or
pushw
xchg
fldt
pop
loop
daa
enter
jle
dec
stos
lret
pop
movsb
mov
or
xchg
mov
mov
or
in
mov
in
roll
je
scas
cmp
lods
int
mov
mov
pop
daa
testl
push
mov
push
mov
mov
mov
and
lods
int3
push
jno
mov
xor
dec
ss
lods
fdivrl
shrb
lock
mov
leave
in
mov
jg
pop
cmpsb
stc
cmpsl
mov
add
pop
push
mov
mov
mov
mov
xor
or
subb
mov
inc
mov
pop
dec
sahf
add
xor
bound
inc
nop
iret
push
lds
outsl
xor
push
fs
hlt
cmp
dec
sahf
lods
mov
xchg
adc
dec
jmp
xor
shll
xor
mov
cmp
xchg
cmpsb
xor
dec
push
mov
fsubrl
rorl
mov
aad
inc
in
dec
inc
jmp
clc
dec
and
push
jmp
pushf
adc
push
mov
icebp
fisttpll
in
jns
aam
xor
lock
dec
movb
fs
int
popf
fs
jb
insb
pop
incl
lods
int3
je
rorl
clc
dec
stc
std
xor
pushf
push
lock
insb
je
push
and
fstpl
dec
push
cmp
jae,pt
scas
test
lea
add
xchg
xor
push
sbb
in
xor
mov
popf
addb
int
xor
in
push
aaa
stos
mov
subb
xlat
pop
dec
adc
jns
xor
std
sbb
xor
inc
xchg
xchg
pushf
outsl
mov
add
sahf
pop
xchg
push
push
xor
push
add
or
fstl
in
inc
mov
cmp
notl
stos
repz
aam
hlt
loopne
mov
ss
call
addr16
add
adc
lret
xor
xchg
mov
aad
jbe
popa
aam
frstor
pop
fmul
movsb
ret
mov
daa
hlt
jo
fstl
push
xchg
or
mov
xor
rclb
gs
pop
or
cmp
popa
ds
sub
add
jns
xchg
xor
xchg
mov
sbb
iret
xor
ja
jbe
loope
enter
inc
add
enter
push
mov
scas
fsubrp
add
pop
mov
push
rcrl
dec
pop
mov
and
mov
pop
jne
xchg
test
adc
pop
cmp
pop
mov
hlt
mov
push
push
imul
pushf
xor
mov
dec
mov
adc
clc
push
push
int3
cld
mov
clc
loopne
sbb
je,pt
jp
jle
xor
pusha
mov
xchg
dec
or
icebp
je
fbstp
insb
xor
movsb
push
loop
push
cli
pushf
xor
test
mov
into
inc
xchg
xchg
lock
ror
jl
ret
xchg
xor
fstpt
and
push
or
outsb
pop
test
sub
xor
aad
fnsave
sub
pop
mov
cmc
and
xlat
rorb
ds
push
push
jmp
loope
repnz
push
es
inc
bound
out
xor
js
add
cmp
jnp
dec
xor
pop
aam
cld
mov
jo
sysenter
scas
popa
out
dec
mov
cld
ja
clc
in
inc
pushf
stos
xor
andb
mov
xor
jb
push
cmp
jae
loope
test
push
fucomi
xor
xor
pushf
pusha
movsb
add
pop
push
lds
pop
xchg
dec
jg
popa
adc
cltd
push
inc
xorps
loop
imul
popf
mov
test
je
sub
add
hlt
fstpt
call
adc
push
xor
xor
andl
out
lods
xor
sbb
pop
sqrtps
inc
xor
xor
jmp
call
pop
xorl
movl
and
loopne
movsb
xor
xchg
mov
out
jns
sub
repnz
sub
lcall
out
jp
xchg
mov
fcoml
out
mov
ljmp
imulb
dec
cmp
fidivrl
fwait
dec
inc
cs
push
data16
sbb
push
xor
into
imul
xor
push
mov
adc
sbb
jge
enter
or
push
xchg
insb
jno
xor
push
in
jmp
xor
aas
in
js
inc
ret
pop
mov
lahf
xor
rorb
sbb
mov
mov
or
sub
xor
sbb
roll
sti
and
shlb
cmp
cld
and
push
pop
xor
push
call
test
fcomp
xor
push
popa
cmp
or
stos
out
inc
sub
push
movsb
data16
fidivs
add
jne
stos
sbb
cs
dec
popf
xlat
push
dec
in
outsb
test
pop
sahf
xor
icebp
xor
xor
inc
mov
outsl
xor
xchg
movsb
in
iret
xor
mov
test
push
add
or
cld
xor
jmp
dec
xchg
xor
into
lea
ljmp
outsl
jno
sub
sub
fdivp
out
shrl
jecxz
lods
mov
ljmp
pop
push
cmpsl
stos
xchg
cmpsb
xor
ret
mov
lods
enter
in
je
call
ret
mov
xor
push
repz
aas
cmp
cmpsl
adc
push
or
jns
lock
jp
and
mov
xor
repz
sub
cmc
divl
dec
dec
cmp
sbb
push
xor
xorl
notb
and
out
ret
add
mov
cli
rsm
int3
cmpsl
xor
ss
xor
mov
pushf
or
xor
repnz
lcall
in
lahf
loope
and
xor
mov
and
cltd
xor
mov
xchg
push
jns
les
xor
pusha
and
pop
adc
mov
adc
pop
xor
xor
jmp
add
jne
xchg
into
xor
cmpsl
and
shl
cmp
fwait
adc
mov
pop
push
pop
lds
xchg
push
shll
pop
pop
jb
xor
das
pop
test
add
sub
jns
push
xor
aaa
xlat
ss
divl
xor
bound
sbb
mov
or
out
xor
cltd
aas
and
popf
cmpsl
xchg
call
es
xor
hlt
jge
jb
lret
xchg
mov
bound
hlt
mov
cmc
mov
xchg
mov
vcvtpd2dqx
pop
dec
dec
popa
sbb
ficoms
xor
mov
adc
mov
int
clc
sbb
dec
jge
insb
pop
cmp
dec
xchg
xchg
in
ja
xor
test
jl
xor
push
fisubs
xor
xchg
inc
adc
xchg
clc
xor
xchg
stos
push
pop
dec
add
mov
scas
loop
xor
pop
cmp
mov
repz
xor
int
xchg
mov
mov
fs
cmpsl
adc
ljmp
test
pop
pop
jo
or
in
movsb
ret
das
mov
or
test
or
cltd
mov
call
cld
mov
xor
fsubs
xchg
inc
cltd
lds
push
xor
es
insl
leave
xor
cmpsb
sub
ss
pop
xor
scas
sub
iret
inc
mov
pop
cld
add
addr16
ds
xchg
jnp
and
in
rcll
xor
push
add
mov
imul
call
and
pop
and
xor
xchg
inc
xor
sbb
test
inc
xor
xor
mov
dec
mov
lds
fisttpll
data16
int
sbb
xchg
ret
ret
pop
xorl
push
xor
xorl
xor
jmp
neg
cmp
insb
xor
sbbl
push
aad
dec
dec
mov
cmc
test
xor
add
sar
cmp
jg
fs
push
jbe
pushf
int
and
or
sub
test
and
mov
dec
cmp
mov
mov
add
imul
clc
pop
daa
jg
dec
mov
leave
inc
cmp
ret
js
jl
and
add
pop
ffree
scas
push
orb
inc
mov
dec
xor
leave
cmp
mov
xor
or
jae
pushf
fildll
adc
xchg
xor
iret
ljmp
int3
test
or
movsb
and
xor
popf
pushf
jbe
lds
test
or
xchg
cwtl
sub
jnp
int3
enter
das
xor
loope
push
mov
xchg
and
ja
jno
fs
inc
xor
sub
dec
les
jbe
fsubrl
add
adc
pop
xor
jnp
mov
sysenter
push
aas
ds
mov
pop
push
movsb
or
xor
rolb
mov
aas
xor
push
push
pop
dec
inc
mov
popf
sub
inc
fdivs
gs
nop
movsb
aad
adc
in
rol
pop
pop
rcll
xchg
call
popf
arpl
pop
sbb
and
cmp
xchg
xor
fwait
xchg
cmp
mov
cltd
xor
enter
aaa
test
and
pushl
adc
movhlps
xor
in
jae
aam
cmp
pop
or
cmpsb
or
sahf
pop
imul
xor
xor
cld
in
xor
repz
int3
jl
xchg
xor
mov
jno
test
xor
xor
insl
andl
jmp
add
push
pop
nop
mov
sbb
jg
xchg
inc
pushl
test
popf
push
xchg
inc
mov
xor
push
movsb
xor
cld
pop
or
mov
mov
pop
arpl
jge
push
mov
xchg
test
pop
add
xor
nop
mov
adc
adc
pop
push
mov
clc
or
test
push
insb
and
cltd
nop
icebp
daa
xchg
jne
cmp
mov
cwtl
push
clc
roll
xor
lret
into
shlb
xor
xor
xor
aaa
cmpsb
push
in
mov
gs
fdivp
and
dec
xchg
push
pop
sub
enter
mov
cwtl
adc
inc
imul
inc
cld
dec
xor
cmp
fldt
lret
jb
test
dec
jecxz
lock
es
adc
mov
outsb
push
jno
shr
dec
xor
inc
stc
outsl
push
testl
clc
sub
cmp
jecxz
aas
xchg
mov
je
xchg
testb
in
add
cmp
cmpsl
jl
aad
dec
sbb
lds
inc
pushf
xor
fisubs
mov
adc
fildll
mov
loope
mov
xchg
xor
inc
testb
jae
add
dec
ret
sbb
xor
fildl
push
aam
adc
rorl
push
std
push
pushf
sbb
push
xchg
repnz
es
mov
lret
cmp
stos
sbb
mov
addl
cld
jns
jl
xor
inc
lcall
push
iret
gs
xor
and
mov
scas
fdivr
adc
popa
mov
cmp
repnz
stc
cmpsb
xchg
xor
ret
lods
sbb
dec
xor
cltd
sbb
sbb
lret
mov
mov
es
cmp
or
dec
mov
lahf
adc
jge
fnsave
jmp
adc
sbb
sub
xor
in
clc
pop
add
and
ja
dec
dec
cld
adc
shll
mov
adc
inc
mov
adc
fistpll
add
xchg
sbb
lock
xchg
add
cmp
xor
pop
dec
mov
push
jne
cmpsl
xor
inc
xchg
iret
cltd
movsb
xor
fdivrs
dec
add
xorl
pop
jne
inc
push
or
cmp
mov
in
push
rclb
mov
mov
sbb
xor
cmpsl
xchg
xchg
adc
ds
mov
pop
jle
pop
xor
orl
xor
add
dec
and
mov
xchg
insl
cmpsl
aad
jo
ror
xor
ret
je
and
or
add
movsl
mov
lods
sbb
mov
mov
mov
insl
xor
jns
fmul
push
mov
jmp
test
fdivl
fisttpl
xchg
das
lahf
mov
fsubl
pxor
test
xor
movsl
dec
mov
push
or
je
out
scas
or
test
scas
in
dec
xor
xor
xor
shlb
fcmovnbe
push
test
mov
idiv
adc
imul
inc
and
mov
into
mov
aaa
jae
xor
leave
out
mov
and
dec
xor
movsb
int3
add
aaa
xor
mov
xor
out
mov
pop
mov
xchg
mov
xor
cmpb
adc
sahf
cmpsl
adc
xchg
push
cmp
movsb
fdivr
or
fxch
out
push
pop
jb
xchg
les
sbb
aam
add
pop
xor
pop
popf
dec
xor
sti
adc
les
adc
jl
cmpsl
hlt
fnsave
clc
ds
mov
cltd
inc
and
add
pop
cld
sbb
hlt
lret
sar
pop
mov
jl
stos
mov
pop
xor
adc
aas
mov
mov
dec
sbb
mov
mov
jne
xor
je
int3
test
lahf
xor
mov
mov
add
add
push
lds
or
jp
or
bound
inc
sub
mov
xor
cltd
jp
lods
pop
in
bound
stos
lcall
sbb
xor
std
dec
pop
sarl
es
out
dec
dec
xor
mov
xor
out
inc
insl
mov
push
shl
dec
xor
jmp
add
mov
das
push
aad
push
xor
jmp
test
push
nop
xor
or
mov
pop
adc
icebp
addr16
sbb
sub
ds
pushf
adc
mov
test
pop
out
jge
mov
push
repz
xchg
mov
shlb
ficoml
arpl
inc
xchg
pushf
cmp
push
pop
cli
stc
daa
push
pop
inc
xchg
loope
xor
gs
or
pop
pop
xor
popf
xor
arpl
fidivs
js
pusha
jns
push
pop
cld
popa
nop
push
dec
cmp
dec
xor
aam
add
cs
jp
out
in
es
cwtl
adc
push
adc
adc
and
out
mov
leave
cmp
push
add
lock
xor
call
pop
push
push
pop
mov
lds
push
push
add
shl
pop
pop
fiaddl
mov
inc
xor
inc
lods
xchg
and
xchg
test
jne
push
out
rorb
xor
pop
outsb
push
aam
pushf
cmc
stos
jge
sbb
test
shrb
xor
jae
imul
stc
push
adcb
push
aad
mov
fs
xor
out
lock
add
lea
pop
push
enter
add
call
sbb
insl
fst
inc
push
add
push
fidivl
mov
sub
mov
inc
sbb
js
divl
ret
sub
mov
test
mov
fists
mov
adc
insb
out
inc
hlt
loopne
adc
hlt
push
jl
mov
mov
push
xchg
inc
dec
pop
pop
popa
jmp
hlt
loopne
cmp
adc
xor
and
lret
pop
jb
and
lahf
fdivrl
pop
scas
mov
xor
sahf
push
cwtl
inc
add
dec
xor
mov
jns
jp
mov
mov
test
push
xor
push
adc
or
pusha
cmp
mov
ds
lret
jle
data16
mov
or
xor
cmp
add
mov
cld
repz
push
flds
pop
insb
sbb
dec
jp
lcall
jae
xor
pop
movsl
lds
testb
push
mov
sbb
adc
cmp
dec
adc
and
adc
les
xchg
mov
xor
push
push
cmp
imul
pusha
jbe
adc
mov
push
bound
out
sbb
cmc
popa
vunpcklps
test
or
inc
fidivl
and
adc
enter
lahf
mov
sbb
xchg
dec
dec
rcrb
cmpsl
inc
xor
sbb
movsb
pop
xor
adc
outsb
mov
xor
out
pop
dec
je
pop
ja
in
xchg
xchg
and
and
into
dec
xor
movsb
shll
outsb
inc
rcll
cld
imul
adc
into
mov
push
in
inc
push
add
lods
shll
dec
aam
nop
out
nop
aam
add
push
and
jnp
das
pop
pop
inc
int
dec
test
adc
inc
imulb
lea
loop
add
les
push
push
mov
cmpsb
adc
xchg
adc
dec
inc
push
dec
imul
xchg
in
arpl
lds
call
push
cmp
sbb
cld
loop
mov
or
not
adc
std
add
push
cmp
pcmpeqb
popa
dec
stos
push
int3
xor
xor
push
scas
cltd
jb
rclb
hlt
mov
push
loopne
rclb
jecxz
mov
lods
sbb
pop
mov
and
mov
std
into
loop
shr
xchg
jg
xchg
ror
sbb
add
inc
jbe
cmp
push
pusha
imul
inc
jecxz
iret
in
xor
hlt
mov
mov
cmpb
xor
repnz
inc
call
xor
cmp
adc
add
cld
vpunpckhbw
sbb
dec
das
inc
xchg
cmp
rclb
dec
push
sar
fistps
iret
ds
xor
sti
rcl
adcb
dec
mov
push
pop
aam
insl
dec
js
cmp
jns
arpl
and
dec
add
mov
stos
lock
in
inc
inc
or
call
movsl
cld
xor
sub
jmp
gs
je
pop
in
loope
and
lock
and
adc
and
mov
inc
sub
sbb
dec
or
jp
jl
dec
and
movsl
js
adc
dec
lret
loop
pop
arpl
clc
pop
dec
mov
pop
les
inc
adc
iret
pop
cli
pop
repz
int3
and
hlt
dec
out
mov
dec
jb
rol
shl
pop
enter
mov
xor
push
adc
repnz
mov
xchg
lock
add
in
xor
jmp
sti
ljmp
call
fwait
jecxz
sbb
adc
sub
or
stc
or
cmc
mov
dec
fwait
lds
mov
inc
xchg
or
arpl
sub
push
pop
xor
bound
cmp
adc
xchg
push
jge
pop
jnp
sbb
jbe
pop
inc
sub
jo
cmp
bound
push
divl
mov
inc
jge
inc
inc
mov
in
cwtl
mov
sar
fsubs
sarl
loop
shlb
repnz
leave
mov
in
mov
lods
movsl
mov
jg
incl
pop
mull
shll
pop
repz
sbb
or
mov
mov
sbb
std
sysexit
jne
imul
movsb
mov
push
pop
shll
call
lahf
xchg
sahf
sbb
or
repz
inc
cmpb
adc
out
mov
mov
pop
out
add
cmpsl
xadd
pop
cmp
inc
arpl
dec
inc
pop
xchg
inc
jns
pushf
xor
xchg
or
mov
or
cmpl
outsb
adc
or
xchg
push
aas
push
cmp
pop
jmp
dec
add
je
dec
daa
js
xchg
or
push
dec
xor
pop
inc
jno
xchg
adc
je
xchg
jb
fs
les
push
mov
inc
push
pop
dec
ja
mov
jp
data16
adc
push
sub
sbb
inc
add
or
push
inc
fdivl
add
into
jle
xchg
add
pop
mov
sti
mov
popa
dec
pop
push
mov
jp
outsb
mov
or
mov
or
dec
lret
call
dec
arpl
sarb
pop
push
mov
push
dec
mov
lret
pop
inc
sbb
pop
stos
stc
or
adc
adc
shll
aam
movhps
int3
or
inc
inc
lock
dec
pop
add
lret
or
call
test
ja
pushf
dec
xchg
out
je
inc
xor
loopne
add
inc
pop
jnp
or
mov
aad
adc
push
inc
and
mov
js,pn
into
pusha
in
mov
xchg
bound
jae
xchg
add
push
mov
fdivs
mov
xchg
lods
push
cmpsb
jle
sbbb
testl
arpl
jbe
inc
jae
jns
dec
aas
mov
clc
addr16
inc
push
adc
stos
xchg
cli
in
push
adc
inc
sub
dec
jnp
nop
push
ja
fs
cld
adc
pop
inc
or
jbe
push
xchg
lock
rorb
push
cmp
inc
inc
dec
inc
sub
sub
jp
insl
jmp
ret
pop
icebp
adc
inc
es
and
push
jo
jbe
cmpb
add
adc
in
sbb
adc
adc
sub
loop
pop
mov
adc
mov
not
les
jp
in
clc
in
push
hlt
sub
pop
add
or
je
movsb
lahf
push
test
mov
call
cmpsb
shll
mov
aam
add
push
add
cltd
dec
movsl
push
push
and
or
lahf
cmpsb
mov
sbb
movsl
inc
shll
fcom
call
in
call
adc
push
xor
push
lds
repnz
jl
mov
pushf
rorl
or
mov
jmp
out
cmp
and
mov
mov
aad
arpl
into
jbe
nop
lods
cmpsb
into
ljmp
iret
mov
mov
lods
jnp
idivl
out
dec
lret
mov
adc
mov
jecxz
add
cmpsb
mov
sub
notb
rcl
imul
loope
in
sub
stc
std
shll
cmp
shlb
loop
jns
sub
mov
pop
mov
lock
leave
mov
xor
pop
xchg
dec
es
sub
fcomi
or
add
shr
int3
xor
js
and
jbe
test
mov
outsb
mov
mul
andps
push
lds
into
add
xor
jecxz
loope
std
xor
sti
repz
ror
into
pusha
xorl
mov
push
popa
adc
pop
lds
adc
ljmp
roll
into
xor
lods
push
xor
mov
loop
pop
lock
add
mov
call
test
test
loope
cmpsb
mov
mov
push
xchg
lods
mov
rcrl
das
push
test
scas
mov
sbb
sub
and
xchg
in
movsl
pushf
xchg
xchg
and
loope
icebp
into
stos
aam
pop
rcll
add
test
mov
mov
movsb
cld
mov
mov
sub
movsl
jecxz
or
pand
cmpsb
movsb
les
sub
mov
fs
pusha
mov
jp
mov
push
sar
mov
sub
repnz
or
mov
insb
cmc
sbb
rolb
cmc
rol
pop
xchg
sub
ficompl
out
into
shl
sbb
pause
stos
aad
add
in
ret
adc
xchg
or
adc
xchg
in
mov
sarl
shrl
repz
fnsave
enter
iret
aad
add
add
sub
movsb
pop
in
lret
ja
dec
mov
ret
jecxz
ret
fnsave
sar
dec
jecxz
repz
repz
test
repnz
mov
cmpsb
lahf
outsl
and
mov
mov
lods
inc
scas
shl
jg
jl
ja
dec
mov
mov
movsl
mov
scas
inc
jbe
jae
add
sbb
adc
adc
inc
pop
jg
mov
int3
xchg
repnz
mov
test
pop
lahf
movsb
mov
dec
fiadds
movl
int
dec
cmpsl
pop
lret
add
ss
fsubs
ret
rep
mov
out
rcrl
pop
loopne
cltd
and
sti
ds
mov
fnsave
fnsave
addl
shll
fdivr
pop
or
push
push
xor
xchg
mov
and
add
sbb
bound
mov
repz
mov
or
sbb
xchg
xchg
int3
scas
mov
push
add
repnz
mov
add
lock
fiadds
ret
lds
lock
int3
enter
lret
int3
mov
add
lock
int3
rolb
repz
mov
add
lock
cli
sar
cld
mov
add
lock
loopne
loope
loop
pop
ljmp
or
add
rolb
hlt
sbb
or
sbb
pop
sbb
notl
push
adc
cmp
hlt
repnz
hlt
icebp
arpl
lock
hlt
out
mov
out
lods
hlt
in
fcomip
jmp
hlt
ljmp
call
dec
sti
in
cmp
gs
xchg
loop
mov
mov
add
fbstp
xchg
xor
xor
xor
adc
clc
adc
notl
out
notb
icebp
cmc
in
inc
add
or
mov
rcll
add
adc
jb
lahf
cmpsl
clc
xchg
xor
lock
repnz
fildl
psubsb
xor
nop
in
sbb
jbe
ja
jl
in
pop
cmp
cs
adc
insb
out
int3
jp
popf
and
xor
sti
xor
push
leave
int3
rcll
mov
ffree
jae
fcmovb
and
fdivrs
ficomps
mov
fisttpl
lods
mov
test
test
and
lods
sarl
cmp
mov
adc
aam
hlt
test
or
fdivr
scas
shl
rcr
push
aam
mov
mov
jge
jae
rol
ret
mov
rorb
int3
iret
divb
hlt
stc
arpl
in
mov
and
leave
push
adc
test
pop
mov
test
mov
push
mov
inc
inc
or
jl
dec
adc
stos
jo
adc
int3
mov
pushf
xchg
mov
pusha
lods
clc
add
xor
inc
mov
inc
mov
cmc
mov
cmp
fstp
les
mov
lcall
les
push
jl
bound
test
lea
int
and
fstpt
in
jbe
jns
fwait
not
jg
xchg
mov
mov
pop
jno
sub
or
cltd
movsb
neg
jle
popf
les
push
xchg
notb
adc
rorl
ret
les
mov
mov
cmp
and
mov
add
and
cmc
mov
add
or
push
jnp
lea
je
cs
mov
mov
push
outsl
aam
jae
sbb
das
test
inc
push
je
jbe
xor
add
or
xor
aam
mov
lahf
push
pop
sbb
dec
ss
aaa
jae
lock
or
fadd
int
sbb
movl
adc
test
pop
dec
mov
es
les
testb
or
adc
jnp
pop
xchg
mov
adc
inc
das
add
mov
adc
push
xchg
mov
cmp
insb
cwtl
sub
add
push
cmp
cmp
rcll
and
sbb
mov
mov
mov
in
fcomp
and
mov
mov
fstps
and
sarb
inc
and
dec
rclb
pushf
mov
and
xchg
and
sub
pop
adc
adc
les
les
dec
adc
leave
js
inc
rcrl
sbb
or
mov
jo
pop
or
sbb
add
xchg
jo
lock
add
mov
sbb
ffree
or
or
aad
andb
test
out
dec
inc
shrl
add
ds
and
daa
cmp
add
push
adc
orl
adcb
jno
add
and
add
adc
je
js
sbb
lods
rclw
inc
mov
hlt
xorb
mov
or
mov
push
in
dec
pop
lock
push
mov
cmp
or
and
lret
aam
daa
or
fs
outsb
xor
xchg
cwtl
adc
push
sbb
pushf
call
sbb
les
sub
mov
dec
clc
hlt
xor
repz
lock
outsb
call
clc
mov
scas
stc
std
aad
jp
xchg
scas
in
movsb
cmp
scas
sbb
je
or
mov
pop
and
dec
mov
out
mov
sub
xchg
push
jns
mov
pop
or
stos
xchg
sarb
push
and
scas
inc
fcoml
adc
clc
inc
mov
in
ds
xor
sbb
fadds
nop
call
sub
mov
test
test
out
inc
dec
pushf
adc
in
mov
loopne
pop
mov
or
cmp
sbb
and
xchg
pop
into
nop
in
jge
push
jo
je
inc
mov
pop
pop
cmp
mov
xor
shld
or
fwait
bsf
loopne
pushf
fsubl
add
mov
fsubl
push
jne
mov
mov
aas
in
inc
subb
jecxz
push
push
fidivs
cmpb
and
push
dec
das
cmc
push
xchg
cwtl
lahf
dec
repz
in
jnp
bound
or
outsb
jp
mov
adc
cmp
xlat
mov
das
add
and
xchg
inc
in
in
xorl
nop
in
mov
scas
xchg
or
xlat
lahf
inc
or
stos
xchg
nop
mov
cmp
adc
mov
or
jl
or
int3
test
add
inc
xchg
jae
dec
js
sbb
pop
fstpl
sub
jmp
lock
les
int3
lock
arpl
int3
mov
xchg
xchg
mov
sub
mov
cmpsl
cmp
sub
int3
mov
mov
dec
jnp
dec
xchg
cs
push
inc
int
div
mov
loop
jnp
hlt
shlb
test
and
inc
in
sub
dec
unpckhps
add
xchg
push
xor
jmp
sub
sub
dec
mov
in
push
cwtl
js
fs
push
icebp
push
lock
mov
xchg
mov
mov
mov
sbb
movsl
adc
mov
mov
mov
add
jge
mov
dec
push
pusha
jg
push
imul
gs
insl
and
xchg
xchg
inc
pop
rcr
inc
lock
rorb
adc
ss
cmp
dec
adc
add
jp
mulb
mov
std
insb
mov
xchg
pushf
les
lock
outsb
lea
sub
xchg
mov
jae
movsl
adc
mov
test
shll
adc
in
test
mov
cmp
imul
ja
adc
pushf
dec
daa
orb
pop
and
pop
add
pop
mov
pop
dec
add
inc
push
xchg
jp
and
push
les
cwtl
test
mov
mov
nop
mov
inc
mov
push
lahf
adc
mov
dec
sbb
inc
sbb
orb
jl
negb
or
pop
les
jbe
jne
jae
mov
dec
push
sub
inc
stos
adc
push
pop
xor
adc
cs
dec
test
pop
popf
add
sti
mov
jae
aam
jp
je
outsb
pop
mov
sar
push
xchg
sahf
or
xchg
mov
xor
mov
hlt
dec
push
xchg
mov
xor
push
ret
jl
jo
cmp
or
jns
mov
push
xchg
mov
dec
xchg
mov
nop
push
push
cmp
sub
das
fcoms
push
in
mov
inc
test
add
dec
jo
mov
mov
pushf
cld
xchg
adc
insl
imul
push
xchg
cmp
fwait
add
adc
mov
or
mov
cmp
mov
orb
mov
int3
rcrb
je
outsl
dec
adc
mov
push
jae
or
xchg
aam
push
ret
and
aam
pop
inc
adc
push
lea
int3
mov
addb
jecxz
inc
int3
dec
push
mov
popa
test
movsb
imul
xchg
mov
fs
rclb
test
out
push
mov
xchg
mov
mov
mov
int3
movsl
or
mov
sub
mov
add
imul
nop
dec
jnp
cmp
mov
inc
and
lds
sti
lock
mov
sub
add
sub
jae
nop
push
mov
xchg
cs
loopne
das
in
pop
cmc
les
jecxz
pusha
xor
das
and
fistps
or
mov
cmp
mov
mov
push
or
jb
and
je
inc
rolb
out
jne
cmp
dec
xchg
inc
or
imul
sub
sub
dec
add
pop
inc
pop
dec
fs
push
roll
and
and
sub
sub
mov
lret
sbb
cld
sub
cwtl
out
cmp
push
cmp
out
enter
mov
cmp
xchg
adc
mov
and
dec
lret
sub
pop
cld
adc
xor
xchg
fs
out
pop
sub
adc
and
push
sahf
test
add
adc
pop
loope
aas
out
push
inc
movsb
jl
in
pop
pusha
push
in
lods
test
ret
sub
adc
or
out
dec
int3
popf
enter
divb
in
push
or
rclb
adc
xchg
xchg
mov
mov
es
xor
ss
mov
lock
out
or
adc
pop
cld
aas
enter
or
mov
xor
and
dec
loop,pn
push
inc
jns
test
push
inc
or
push
and
xchg
mov
mov
aam
mov
add
nop
sub
xchg
insb
push
cld
hlt
shlb
lds
adc
cmp
mov
inc
mov
insb
mov
pusha
cmp
xor
cmpsb
iret
mov
xor
mov
push
mov
add
add
sub
mov
movsb
and
hlt
and
dec
pushf
rorl
je
xor
push
je
jle
and
adc
push
mov
or
sbb
loop
dec
fdiv
lods
jo
pop
dec
fsubr
adc
xor
adc
aam
cwtl
mov
popf
cmp
xchg
adc
int3
sub
ficompl
dec
push
and
filds
imul
lahf
rorb
lods
jne
pop
or
jno
dec
mov
or
pop
rorl
imul
dec
lcall
mov
add
xor
mov
and
repz
add
mov
ds
cld
pushf
or
inc
cmp
adc
stos
scas
mov
and
mov
daa
out
and
push
jo
pushf
add
jecxz
dec
fsubp
mov
loope
dec
or
nop
jbe
xchg
test
sub
xchg
mov
in
je
adc
pop
int
push
jns
in
in
lock
sub
in
lret
cmp
sub
in
imul
xchg
jg
pusha
test
test
scas
nop
cwtl
add
or
mov
pusha
push
or
sbb
fs
out
jnp
clc
or
dec
and
or
shl
mov
mov
sarb
add
push
and
data16
add
pushf
lock
cmp
repnz
jne
hlt
pushf
jge
dec
movsb
push
mov
dec
mov
jo
lcall
push
mov
cmp
cmpsl
test
mov
rcrl
add
dec
push
pop
cld
adc
pop
pop
in
je
push
sarb
bsf
inc
and
add
test
loopne
jl
mov
outsl
xchg
jb
pusha
cmpsb
dec
jl
or
nop
daa
push
jae
pop
aam
mov
int3
shrl
push
sbb
add
sub
ds
jb
push
sbb
jl
je
mov
lods
pop
pop
cmp
lods
test
fcmovu
pop
mov
mov
stos
lods
jp
and
or
cmpb
inc
mov
or
inc
shrb
loop
rorb
xor
lods
test
cld
cltd
lcall
fistl
or
or
insb
nop
pop
call
and
lock
mov
cmp
in
sbb
mov
mov
cmpsb
jae
scas
mov
cmp
mov
ficoml
xlat
aam
pop
nop
mov
or
lock
mov
les
mov
adc
fadd
pusha
cmp
scas
movsb
cld
es
push
int3
mov
orb
test
pop
les
jo
mov
xchg
subb
jg
xchg
lods
mov
xor
jle
and
movsb
cmp
nop
mov
cmp
shrb
faddp
fucomp
xchg
push
add
scas
mov
sahf
lods
in
mov
add
mov
test
int3
fnstsw
imul
inc
in
test
stos
insl
adc
cmp
je
les
in
lcall
push
mov
mov
mov
and
std
sub
adc
ret
fcmovnb
imul
add
cmp
push
sbb
add
insb
int3
cli
mov
xchg
cmp
add
test
add
dec
xor
add
cld
pop
test
test
cmp
aad
lods
mov
fcmovnbe
xchg
pop
cmp
adc
mov
mov
fildl
test
insb
nop
fsubrs
mov
sbb
insb
mov
mov
int3
adc
add
lds
jbe
out
movsb
sub
mov
adc
aad
cmp
mov
pop
into
ret
enter
mov
xchg
adc
adc
and
popf
leave
ja
insl
popa
cmp
dec
adc
jl
inc
push
adc
jle
jae
gs
ret
in
lret
ret
adc
push
adc
aam
push
jbe
gs
jne
jecxz
add
jae
or
sbb
mov
sub
sbb
arpl
dec
imul
mov
jl
jp
mov
cmpsb
lret
mov
xchg
xor
push
xor
jecxz
push
xor
cmp
ret
shr
inc
ss
rcrl
xchg
or
cld
cli
out
lods
push
sub
cltd
leave
fsts
nop
xlat
adc
fnstenv
addl
dec
cmp
dec
and
dec
jbe
fwait
cmp
sub
jg
iret
rorl
imul
push
xchg
cvttps2pi
push
mov
adc
or
jmp
add
add
adc
jl
mov
cmpsl
hlt
mov
adc
sbb
aad
andb
mov
movsb
leave
stc
and
cli
mov
push
test
xchg
cmpsl
stos
jae
cli
repnz
inc
adc
aas
call
sti
shll
movsb
adc
jecxz
cmp
insl
cmc
ficompl
mov
lods
pop
stos
mov
ret
loop
shl
icebp
scas
push
sti
sbb
repnz
loope
loop
push
repz
ret
icebp
loopne
in
pop
ffreep
nop
int3
and
cmp
xor
out
jns
xor
mov
ret
mov
cmpsl
mov
mov
xor
into
mov
sbb
sahf
ss
sahf
ljmp
inc
shll
xchg
mov
inc
xor
sub
jns
lds
mov
out
out
mov
xchg
sub
int
push
lahf
ljmp
call
out
jecxz
mov
out
xchg
lods
mov
ds
sbb
mov
push
call
ret
mov
sti
jmp
mov
enter
std
push
aad
in
lahf
in
in
add
jecxz
mov
stos
add
and
test
sub
in
push
sbb
and
or
dec
outsl
shll
out
push
mov
adc
mov
ds
mov
jecxz
decl
xor
pop
inc
inc
dec
jbe
and
adc
sbb
or
adc
shrb
fcmove
ret
push
dec
popa
mov
stc
mov
push
dec
jp
outsb
out
push
jg
dec
lds
das
mov
arpl
cwtl
dec
pop
dec
iret
or
les
sub
mov
mull
inc
add
popa
nop
add
mov
mov
pop
das
pop
pusha
repz
and
out
out
ficompl
mov
or
push
aam
insl
or
add
fs
mov
jno
add
jg
xor
mov
out
push
rcr
lods
scas
mov
scas
cmp
js
mov
js
xchg
ja
inc
push
xchg
jns
cmp
fs
inc
mov
mull
pop
inc
jbe
pop
push
xor
jge
ja
xor
mov
or
add
js
incl
lahf
mov
jae
ja
js
fsts
pop
mov
loope
fwait
or
cmpl
sub
clc
sbb
inc
jns
shl
cmp
test
mov
scas
sbb
stos
lahf
imul
xchg
movsb
xchg
enter
mov
xor
or
add
adc
and
loope
mov
cmp
fs
lret
or
or
ret
call
sub
or
add
adc
xchg
sub
lea
or
push
adc
std
cli
loope
rep
adc
repz
test
adc
sub
dec
popa
ds
mov
push
in
notb
sbb
fidivl
pop
je
daa
jl
xor
push
js
adc
repnz
sub
lea
test
bnd
xchg
and
fwait
pop
sbb
fcoml
dec
aaa
jl
scas
adc
xor
sub
loop
mov
mov
cli
inc
cmp
jnp
pushl
jp
cmp
fxch
jmp
loopne
hlt
lea
bound
jge
test
push
push
dec
popf
sub
loop
les
mov
jne
dec
jb
ss
xlat
dec
xchg
pop
mov
in
xchg
dec
popf
xchg
pop
push
into
loopne
imul
sub
insb
lea
sarb
xor
sbb
adc
shl
cli
push
xorb
jbe
sub
leavew
inc
sti
cwtl
sub
sub
cmp
loop
fldenv
lret
test
cld
ss
sti
pop
and
jae
arpl
into
or
in
ds
jge
adc
dec
daa
orl
orl
hlt
int
in
inc
popf
cwtl
repnz
add
and
jle
dec
bound
xor
inc
pop
pop
adc
imul
shlb
std
mov
lret
pop
pop
aas
nop
inc
push
xchg
sbb
pop
adc
aas
inc
push
and
mov
fs
je
or
adc
jne
cmpsb
add
repz
mov
push
cmpb
push
and
xor
pop
sub
jne
loope
xor
lock
jns
loopne
pop
lds
dec
ret
popa
rol
cs
sub
rolb
out
test
arpl
ja
push
rorl
mov
and
cwtl
sub
sbbb
lock
and
jbe
lea
dec
sbb
cmc
call
jp
mov
jmp
aam
xor
popf
sub
in
sub
jo
inc
iret
or
jbe
imulb
lods
sbb
jnp
aas
sub
test
adc
ficoms
ljmp
jecxz
or
aas
cwtl
gs
fists
sub
cmp
ja
dec
inc
lods
adc
xchg
nop
orl
cmpb
push
dec
dec
lods
jnp
dec
xor
stc
jp
sub
mov
add
sub
das
fnstcw
dec
pop
xlat
inc
fsts
pop
jae
and
cmp
mov
inc
sub
add
cld
std
rcl
and
popa
testl
sbb
sbb
shlb
inc
xchg
pusha
and
das
fdivl
cltd
mov
cmp
jp
into
and
popa
mov
jle
cld
cld
xchg
subl
inc
jnp
adc
jno
sbb
movsl
xor
popa
fisubs
ss
cwtl
daa
mov
ret
fs
je
or
mov
push
int3
ds
out
out
sbb
mov
out
loopne
loopne
add
adc
das
loop
enter
sub
js
je
cmp
or
inc
dec
daa
dec
jl
dec
xchg
pop
sbb
push
insb
outsl
sub
shll
nop
movsb
in
rolb
packsswb
aaa
sub
repnz
insb
je
fcomi
scas
hlt
jle
int
pop
jb
ja
cmp
sarl
or
inc
pmullw
adc
and
ret
add
mov
pusha
stos
jae
adc
mov
dec
adc
jnp
in
inc
mov
add
add
in
sarb
test
das
in
and
cmp
sbbl
out
mov
mov
adc
push
nop
dec
jecxz
xchg
push
jecxz
push
hlt
movb
int
sub
mov
cli
cmp
sbb
aas
in
ret
xlat
out
es
arpl
push
js
ss
add
in
push
mov
xor
loopne
lock
shl
lret
cld
and
repnz
adc
xor
fcmovnb
hlt
push
sbb
ret
inc
xchg
dec
iret
pop
mulb
dec
dec
sti
jns
repz
mov
push
sbb
pushf
dec
or
fisttps
pushf
adc
mov
mov
dec
dec
in
ret
stos
sti
jg
dec
or
movsb
scas
inc
or
sbb
test
icebp
enter
inc
or
test
test
rcrb
out
insl
push
out
or
and
sbb
lret
movsb
xor
je
cld
dec
adc
add
lret
movsb
inc
jecxz
fwait
and
sbb
fs
adc
repnz
and
test
int
xor
push
xor
rcr
dec
or
sbb
jecxz
jo
inc
and
sbb
dec
or
aam
cmp
add
xor
int3
les
hlt
cmp
faddl
lret
js
mov
in
mov
in
mov
movsb
or
cmp
adc
popl
rcrb
into
push
jmp
jecxz
push
add
in
in
loope
jecxz
nop
mov
mov
push
repnz
xor
sbb
adc
xor
sbb
loop
sbb
insl
sbb
xchg
iret
adc
inc
aam
fwait
or
adc
adc
adc
pop
adc
lahf
mov
add
into
int3
mov
ljmp
push
in
push
or
lcall
test
adc
int
hlt
sbb
cmp
cld
ja
mov
hlt
out
insl
push
mov
pop
aam
add
cld
hlt
jecxz
test
push
push
andl
push
hlt
lret
adc
not
pop
hlt
shl
push
hlt
loope
xchg
je
psubq
add
pop
push
hlt
lret
pop
iret
aam
adc
add
fcomip
lock
mov
sbb
or
xchg
cld
mov
cmp
je
mov
mov
insb
add
incb
mov
cld
lds
dec
xor
mov
cmp
pusha
fdivrl
or
mov
mov
dec
fs
les
pushf
add
lock
xchg
les
popa
clc
lds
repz
stc
cmp
lret
stc
sbb
push
movsb
rcrb
sbb
repz
inc
sbb
rcrb
add
nop
aam
mul
fs
xchg
loop
push
and
push
nop
in
or
jbe
inc
mov
lods
mov
mov
cmc
or
mov
push
add
mov
push
push
fisttpl
in
lds
xor
jne
or
lds
sub
cmpsb
loop
mov
les
inc
cmp
fsubrs
stos
push
je
in
xor
sbb
adc
aam
cmpsb
push
cmpsb
push
test
xor
push
mov
in
and
mov
mov
inc
xchg
adc
mov
mov
negb
in
cmc
xor
mov
xchg
je
movsl
mov
insl
mov
nop
in
ret
fs
mov
cmp
sarl
sub
add
ficomps
xor
mov
mov
push
mov
test
add
xor
sarl
xchg
xchg
popf
xchg
push
mov
or
push
stc
xor
rolb
movsb
push
je
inc
mov
hlt
test
aam
pop
mov
sbbl
lea
or
inc
lea
adc
mov
std
add
cld
adc
sub
dec
push
jecxz
mov
mov
stos
hlt
adc
and
mov
mov
cltd
dec
dec
stos
or
adc
pushf
arpl
and
popf
lea
pushf
xchg
pushf
or
pushf
cmc
mov
je
inc
mov
lea
lcall
jmp
pop
test
insb
jmp
fcompl
sbb
xchg
mov
push
mov
or
ret
fdivrl
or
and
inc
pop
es
sub
add
repz
jecxz
jl
pop
daa
femms
in
or
and
and
adc
pop
xor
mov
mov
and
lret
sbb
dec
add
repnz
mov
or
cmp
inc
sbb
xor
sub
mov
xor
jecxz
sub
add
orl
mov
repz
or
xchg
adc
inc
sub
int
or
xor
sarb
and
test
or
ret
jl
int
es
cmp
pusha
push
pop
les
inc
fstpl
ret
addr16
adc
shlb
mov
fs
or
repnz
inc
lock
jae
out
adc
sub
aam
clc
push
xlat
pushf
inc
fldt
or
fmulp
rcrl
push
in
or
jecxz
cmp
mov
cwtl
cli
hlt
aam
adc
ffree
push
ss
enter
movsb
rcr
jl
int
es
jl
xchg
or
fsts
lods
add
stos
lds
mov
ljmp
hlt
push
xchg
or
adc
mov
sbb
or
inc
push
out
adc
xchg
cld
je
cwtl
and
push
or
jge
in
xchg
ret
int3
mov
add
cvtps2pi
mov
add
scas
jns
xchg
jecxz
xchg
add
mov
pop
repz
adc
comiss
rclb
stos
or
faddl
add
jg
and
aam
hlt
scas
fs
rep
push
add
pushf
cs
mov
xor
fucom
and
jl
in
dec
xor
xor
sarl
sub
mov
in
xor
sar
test
imulb
in
mov
mov
push
repnz
adc
add
icebp
add
notb
imul
adc
sub
hlt
rcl
adc
test
test
fs
adc
xchg
aad
in
scas
and
adc
scas
mov
gs
aam
and
adc
in
insb
div
test
loopne
loop
imul
xchg
hlt
les
add
test
lods
xor
popf
stos
sbb
or
jo
hlt
jb
adc
xor
in
push
sbb
movsb
movsl
adc
inc
aam
popf
ja
mov
xchg
pop
mov
movsb
lods
mov
adc
add
ret
les
mov
xchg
xchg
loopne
jp
dec
or
lcall
out
pop
add
lods
add
enter
jnp
cmp
inc
xchg
add
add
mov
inc
subb
jmp
adc
adc
lcall
jmp
adc
pushf
jl
sahf
pop
adc
or
mov
xchg
push
mov
add
inc
jl
into
aas
sbb
inc
dec
or
xor
mov
in
pop
fmulp
pusha
jl
dec
rcrb
xor
andl
mov
push
cld
out
inc
pop
popa
add
add
les
xchg
movsb
out
inc
adc
prefetchwt1
pop
xor
stos
cltd
pop
mov
mov
adc
xor
add
adc
movsb
hlt
incl
clc
sbb
xor
hlt
insb
je
sbb
xchg
xchg
hlt
or
adc
mov
xchg
fcoml
mov
adc
xchg
les
cwtl
lods
mov
xchg
mov
test
rclb
and
mov
cwtl
fs
push
add
sbb
xchg
in
jmp
or
or
enter
add
lods
jo
or
lock
aam
pushf
test
movsb
nop
je
sub
push
leave
test
sub
or
cli
sbb
adc
insb
xor
mov
push
pop
pushf
mov
and
fstps
test
pushf
nop
aam
inc
int3
nop
hlt
and
insb
dec
js
dec
arpl
sbb
shrb
and
mov
dec
push
iret
sub
loopne
inc
adc
adc
es
push
push
add
pop
jl
cmp
cmp
or
movsb
xor
loopne
adc
adc
add
xor
sbb
add
sbb
dec
mov
adc
xor
adc
out
test
jmp
jmp
or
int
push
int
repz
in
rorb
sbb
in
lds
xlat
adc
mov
mov
adc
out
out
enter
int
xchg
in
int3
jp
adc
xor
xlat
icebp
test
je
icebp
test
ret
push
adc
jo
les
iret
fiaddl
fs
repnz
sbb
into
adc
fs
int
lea
adc
push
adc
lcall
sbb
push
mov
xor
sti
test
ficomps
scas
loope
fdivp
ds
ret
mov
xchg
mov
push
std
cs
idivb
xor
daa
mov
and
adc
pop
sub
push
sbb
hlt
je
sub
cmc
jnp
xchg
in
inc
in
inc
and
adc
movsb
je
add
int
mov
mov
push
je
adc
xlat
lods
pushf
jmp
rorb
iret
hlt
aad
sbb
test
pop
xchg
xchg
fs
mov
aad
int3
shrl
repnz
inc
mov
mov
int
aam
adc
adc
out
push
clc
pop
cmpsl
insb
xor
les
lods
or
in
push
hlt
scas
adc
pop
loopne
data16
xor
jae
and
fs
mov
movsl
adc
mov
jl
daa
test
xor
inc
in
sub
dec
mov
jl
fisubs
or
nop
les
mov
adc
andb
mov
jns
and
lahf
movsb
movsb
lahf
lea
hlt
lahf
mov
outsl
cwtl
push
add
in
lret
out
xchg
push
nop
adc
hlt
lea
mov
movsb
mov
dec
adcl
icebp
add
xorb
adc
out
stos
in
sub
dec
jecxz
cmp
add
mov
jl
xchg
sbb
idivl
push
rolb
lods
movsb
jno
test
ja
mov
xchg
adc
cmp
or
mov
mov
packssdw
or
sarl
hlt
adc
mov
or
add
add
or
in
adc
or
repnz
shl
jmp
repnz
lock
mov
pop
lock
out
add
subl
push
cld
repnz
shl
jmp
mov
or
cltd
jo
pop
or
add
lock
cli
cmp
loopne
out
fs
dec
or
flds
fisttps
add
lock
in
std
repnz
cmc
gs
adc
add
jg
adc
push
sysexit
adc
and
mov
nop
shlb
cmp
push
int3
je
mov
mov
je
dec
fcoml
add
repnz
add
adc
or
mov
bswap
or
mov
cld
jae
repz
shlb
out
push
shlb
mov
mov
adc
jp
push
add
decb
movsb
pop
sar
add
push
or
mov
jne
xchg
pop
insb
mov
sbb
pop
xor
cmc
and
clc
jecxz
xor
movsl
movl
and
aam
stc
jne
push
je
lock
adc
ret
push
xor
imul
and
dec
clc
cmp
push
loope
and
inc
je
mov
movsb
mov
js
xchg
shll
test
add
sbb
xor
inc
in
and
test
push
jno
add
aad
dec
cld
cmp
xor
loopne
or
cmp
xor
std
cmp
nop
xor
pusha
mov
lea
sbb
add
sub
pop
in
xor
push
pop
insb
lods
pushf
fdivl
mov
shrb
fldcw
lods
popf
fstl
push
loop
pop
xor
divb
xor
and
xor
divl
xchg
shlb
xchg
jbe
mov
arpl
mov
xor
inc
out
es
push
adc
add
out
daa
sbb
mov
ret
cmpsb
xchg
xchg
roll
xchg
xlat
or
cmp
xor
ds
sti
cmp
xor
fistps
mov
jp
mov
jle
mov
jnp
xor
pop
lahf
ljmp
lcall
sub
out
xor
add
push
lcall
imul
jg
ss
or
xor
mov
lahf
imul
hlt
clc
xchg
sub
adc
clc
xlat
jb
pushf
mov
out
adc
cmp
minps
sbb
push
ret
mov
scas
dec
xchg
xor
int
push
adc
jl
les
jge
dec
into
xchg
in
pop
movsb
in
scas
hlt
push
mov
pop
xchg
rorl
insb
mov
dec
repz
les
adc
in
outsl
adc
push
xor
xor
and
test
pop
rol
lret
aam
mov
repnz
jg
cmp
jp
in
xchg
fimuls
imul
in
and
stos
les
mov
xchg
jo
mov
jmp
sbb
sbb
fistl
mov
push
in
mov
test
icebp
xor
fadds
push
in
popf
and
xlat
sbb
xlat
xchg
test
je
and
mov
lods
dec
push
stos
paddusw
xor
test
jl
arpl
fidivs
fs
hlt
dec
mov
adcl
adc
inc
push
stos
xor
push
mov
pmaddwd
sub
pop
ror
push
xchg
sbb
xor
xchg
push
hlt
addb
in
pushl
sbb
js
mov
scas
lods
xor
xchg
mov
imul
cmpsb
dec
mov
dec
mov
test
fcoml
nop
and
inc
dec
lret
mov
add
fs
sahf
aam
pop
xor
repnz
and
or
movsb
inc
jne
mov
adc
dec
arpl
jmp
jle
ror
sbb
mov
and
dec
fimull
adc
sahf
bound
nopl
xor
mov
mov
rorb
and
jge
cmovge
lahf
nop
mov
psraw
mov
mov
call
out
fs
jl
mov
jecxz
in
add
inc
cli
aam
lret
hlt
cld
in
decb
cld
fcomip
or
add
xor
xchg
in
jo
enter
dec
mov
pop
mov
push
push
add
jl
mov
aam
inc
clc
repnz
xor
mov
ja
mov
add
xor
outsl
push
add
movsb
cmc
je
or
mov
mov
jg
test
add
inc
add
aam
sbb
les
out
cld
mov
movsb
push
rorb
sbb
dec
adc
clc
pop
sub
loopne
or
dec
movsb
push
iret
stos
xor
and
dec
stos
add
lea
dec
adcl
hlt
sbb
xor
movsb
mov
cmp
loopne
in
adc
insl
xchg
add
js
sbbl
int
adc
cmp
or
mov
mov
or
or
or
or
in
xor
adc
sbb
sbb
sbb
sbb
push
inc
sbb
push
jp
sub
sbb
sbb
sbb
lret
mov
dec
xchg
into
je
into
es
mov
bound
sbb
mov
sbb
push
xor
xor
or
mov
jns
in
jmp
adc
repnz
adc
or
mov
mov
fimuls
movsb
je
js
jge
push
sbb
int
sar
or
gs
jbe
mov
into
lds
xor
or
adc
sti
ljmp
loopne
repz
adc
or
jbe
xchg
or
xchg
or
rol
movsl
mov
popa
mov
cli
mov
mov
in
in
fnstsw
lret
lods
xor
insb
repz
push
lods
addr16
int3
mov
in
dec
shl
inc
loop
insb
or
cltd
xchg
or
add
sbb
xor
lret
xchg
dec
int3
fdivrl
fnstsw
xor
dec
mov
aad
cmp
push
or
cmc
cmp
stos
mov
arpl
adc
out
jmp
jg
test
xor
call
sbb
adc
or
scas
negl
clc
nop
subb
mov
add
bnd
rol
orl
lock
or
adc
movsb
mov
test
adc
inc
add
test
int3
fmuls
inc
rcrb
faddl
push
ret
xor
lea
mov
fs
in
je
stos
mov
insb
adc
and
dec
push
push
hlt
nop
mov
pop
test
mov
call
iret
in
or
sbb
ret
ror
adc
mov
stos
lea
enter
in
dec
lahf
xor
jmp
insb
in
sub
leave
ret
add
mov
sarl
test
scas
mov
cmp
or
scas
mov
or
sbb
jb
push
icebp
test
adc
or
int3
test
sbb
rcr
adc
out
sub
xor
or
add
call
or
add
loopne
div
mov
sbb
inc
and
add
call
or
out
cmp
mov
add
out
cmp
repz
inc
adc
sbb
or
pushf
mov
pop
test
imul
insb
ss
and
fstl
dec
sti
jl
adc
mov
aad
sbbl
jle
add
enter
in
sahf
sbb
jne
mov
dec
adc
aam
adc
add
xor
push
and
or
sbb
scas
adc
adc
scas
jmp
xor
in
fcoms
int3
fs
inc
fmul
dec
fcoml
pushf
jmp
ret
testl
jnp
popfw
xor
mov
scas
test
adc
xor
fbld
fmuls
add
cli
shl
lods
or
clc
cltd
or
add
cmpsb
mov
push
hlt
clc
xchg
mov
mov
jbe
or
mov
xchg
sbb
lea
cmc
adc
cmp
push
pop
sub
js
mov
in
in
dec
cs
repz
dec
dec
inc
and
xor
rcrb
xchg
repz
dec
jl
mov
add
rcrb
in
orl
cli
jecxz
push
adcb
outsl
in
rcrl
test
in
mov
sbb
repnz
adc
dec
ljmp
int3
or
imul
fwait
stos
and
cmp
add
push
xor
add
push
repz
mov
ret
mov
loopne
loope
add
sbb
cmp
rcrl
in
adc
into
and
cmpsl
scas
fiadds
adc
or
pop
aad
out
xchg
push
fs
stc
xchg
cld
outsl
aaa
out
jnp
dec
lods
shlb
jl
cmp
cmc
cmpsl
rclb
mov
or
xchg
insl
cmpsl
les
out
lods
add
aad
jno
add
fcomps
add
push
mov
movsb
sub
lods
movsl
add
or
or
stc
sbb
inc
mov
pushf
pop
or
fdivl
or
sub
stos
or
xchg
adc
add
orb
push
mov
lock
stc
adc
add
mov
mov
cmp
loope
faddl
or
js
dec
aad
int3
cltd
and
jbe
les
repz
in
mov
in
shll
shll
or
in
fcoml
clc
add
hlt
adc
inc
rcrb
inc
inc
shrl
mov
and
push
xchg
imul
orl
lock
mov
inc
je
and
fcmovne
out
adc
outsb
or
mov
cmp
xor
cmp
in
xor
xchg
sub
or
inc
pushf
xchg
leave
or
enter
xchg
aam
les
dec
shll
adc
test
mov
movb
or
mov
sub
lds
xchg
xor
push
mov
hlt
into
pushf
dec
jecxz
jl
push
or
call
mov
or
fldt
push
inc
xchg
cli
push
ja
pop
push
fs
pop
add
into
loop
imul
xchg
add
jno
js
aam
and
add
popf
fisubl
les
mov
jns
xchg
xchg
add
stos
fs
and
push
aam
mov
leave
je
adc
in
sbb
movsb
movsl
test
jmp
push
adc
adc
clc
std
or
inc
jmp
inc
adc
push
add
lret
fistpl
add
mov
xchg
xchg
fcom
sarl
push
add
hlt
pop
repz
mov
and
adc
mov
sub
rorb
mov
push
xlat
add
cmpsb
scas
icebp
fiadds
dec
inc
and
push
mov
jmp
in
rcrb
mov
shl
inc
loop
jo
je
pop
lods
es
dec
cmpsl
mov
push
shll
mov
jecxz
jo
xchg
inc
nop
xchg
xchg
xor
cld
sub
insl
xor
xchg
in
outsl
cmp
fldcw
insb
arpl
or
loopne
std
imul
repnz
push
mov
adc
dec
andl
int
hlt
dec
pop
adc
sub
sub
mov
push
cmp
outsb
adc
cmp
mov
push
push
in
dec
int3
sbb
and
add
xchg
lods
shll
mov
icebp
dec
insb
repnz
out
shrl
lods
sahf
xchg
jl
mov
add
in
popf
xor
mov
dec
out
dec
xchg
push
adc
jo
mov
xor
in
repz
push
mov
ljmp
rcll
fistpl
das
cmp
mov
mov
insb
in
mov
pop
int3
aam
pop
mov
mov
push
add
loop
lret
lods
int
insl
iret
fs
bound
cmp
mov
inc
dec
test
in
aaa
in
je
pop
add
inc
push
or
add
dec
aam
sbbl
repnz
mov
fsubr
out
imul
ja
sub
ljmp
imul
mov
mov
addr16
ja
mov
ljmp
fnsave
mov
rcrl
stos
mov
popa
pop
int3
fwait
pusha
or
push
lahf
jecxz
pop
scas
or
mov
adc
add
shll
or
add
dec
jnp
je
je
fsubr
les
mov
test
stos
movsb
pop
mov
int3
push
das
imul
push
adc
push
mov
pop
hlt
push
stos
insb
jl
push
add
mov
jg
pop
lock
vpcmpgtw
xchg
loope
push
mov
scas
cmp
pop
dec
sbb
jecxz
lods
arpl
insb
push
dec
xchg
std
cld
add
sbb
xchg
hlt
cmp
add
iret
hlt
lods
xchg
xor
push
test
push
xchg
xchg
xchg
pop
inc
cld
mov
sub
adc
mov
bound
pop
sbb
stos
cld
popf
mov
push
je
dec
mov
in
adc
in
push
or
or
xchg
cmp
int3
add
ror
pop
dec
add
lock
dec
adc
cli
lret
lock
sbb
xor
sbb
clc
in
mov
push
repz
shlb
xor
adc
fs
aas
mov
roll
in
push
adc
mov
subb
or
pop
dec
or
repz
imul
je
inc
add
mov
mov
xor
lahf
pusha
mov
int3
push
xor
outsl
rcrb
dec
add
jae
jecxz
mov
mov
shll
sbbl
int3
repnz
lret
rorb
mov
fcoml
fidivs
mov
mov
adc
ficompl
clc
add
in
push
inc
xlat
push
adc
cld
xchg
movsb
adc
sarb
loop
lret
dec
icebp
stc
jle
in
jge
pushf
adcb
shl
lret
jg
rorl
enter
fs
in
push
in
in
into
sub
jecxz
cmpsl
xchg
pop
out
sub
test
mov
add
or
rorb
jnp
dec
lock
lret
cmpsb
sbbb
mov
movsb
arpl
in
sub
lret
sbb
test
jne
outsl
adc
int
jb
int
lds
mov
add
outsl
insb
leave
out
stos
popf
fadd
cmpsb
rcrb
sbbl
roll
cmpsb
mov
pushf
movsl
cld
scas
mov
bound
fs
mov
xorb
movsl
mov
sub
cld
inc
mov
flds
add
fcomps
stos
scas
and
mov
jmp
hlt
cld
and
mov
iret
mov
aad
mov
int
bound
push
mov
sbbb
jmp
hlt
repnz
sbb
adc
or
stc
aaa
pusha
rclb
cli
inc
add
loop
add
lock
int3
xor
fists
lock
mov
cld
adc
dec
sarb
dec
js
sub
je
lret
dec
push
add
inc
mov
add
int3
mov
je
or
cmp
push
nop
jg
sbb
mov
add
daa
rorb
or
jmp
repnz
hlt
scas
jo
add
mov
flds
jecxz
or
scas
adc
mov
lods
arpl
fldl
mov
add
add
or
cwtl
xor
xchg
add
add
pop
add
fimuls
lock
push
mov
lcall
loopne
in
or
mov
jmp
movsl
xor
pop
rcrl
sbb
cmp
sarl
or
cld
xor
or
repz
iret
cmpsb
jmp
inc
xchg
addl
sub
push
dec
add
xchg
or
int3
push
pusha
lock
adc
or
repnz
iret
jle
sbb
jl
adc
stos
mov
or
int3
stos
xchg
mov
add
and
adc
mov
mov
mov
adc
sub
cmp
lcall
dec
sub
add
in
adc
popa
push
mov
loope
sub
in
in
movhps
hlt
add
nop
hlt
repz
mov
pusha
stc
adc
or
push
fwait
aaa
dec
xor
into
push
lods
mov
fisttpll
cmpsb
add
mov
cmpsb
test
mov
xchg
loop
mov
int3
add
cli
cmpsl
mov
mov
loopne
in
add
loopne
sbb
fwait
mov
or
mov
jge
test
clc
test
adc
add
pop
cwtl
and
or
scas
xchg
repz
iret
insl
test
or
jno
adc
or
add
sub
push
add
mov
cmp
hlt
mov
subl
repz
pop
fsubrs
int3
mov
mov
movsb
int3
jg
pop
mov
xor
mov
jecxz
js
fcmovb
dec
and
insb
inc
mov
sub
and
push
outsb
mov
sbb
aas
fildll
add
loop
rolb
jecxz
or
cmpsb
push
cmc
in
aaa
in
cs
movsb
pop
movsl
es
mov
cmp
inc
mov
repnz
push
inc
pop
mov
jae
rolb
fldl
or
mov
mov
loop
adc
mov
mov
cs
test
aam
lock
shlb
das
iret
rclb
pop
inc
ficoms
loop
sbb
xor
xchg
xchg
sbb
mov
lods
ss
shl
xor
adc
stos
in
scas
push
rcrl
sbb
jb
call
stos
rcrl
addb
mov
loope
cmp
mov
pop
pop
loopne
push
push
adc
xchg
testl
sbb
mov
jmp
call
bnd
push
fwait
or
add
jp
lock
fmul
test
call
shlb
repnz
shrl
repnz
push
jmp
mov
sbb
or
xor
pop
add
insb
mov
ret
loope
add
jmp
les
adc
or
sbb
cld
adc
dec
stc
push
mov
sub
inc
enter
fdiv
jae
lret
sub
or
xor
dec
sbb
mov
inc
cld
aad
inc
pop
push
xchg
cwtl
inc
movswl
or
cmpsb
test
scas
sub
cmpsl
lods
adc
out
adc
cli
cmpsl
pop
cmpsb
mov
repz
jp
inc
or
pop
adc
mul
and
pop
les
mov
in
mov
movsl
mov
xchg
insb
or
std
lods
jmp
subb
nop
fdiv
cmp
cmc
mov
rcrl
in
into
scas
mov
lahf
inc
sbb
or
rorb
mov
xchg
clc
or
int3
fildll
ror
jbe
or
lods
dec
out
mov
inc
cmp
or
and
mov
lahf
outsb
or
cld
adc
add
out
movsb
add
cs
insb
sahf
or
and
sub
aad
int
sub
sub
cmp
sub
shr
dec
and
mov
sub
and
jno
inc
dec
incb
je
mov
or
pop
enter
int
pop
adc
shr
add
dec
add
adc
dec
push
jl
jl
cmp
jns
sti
sbb
in
std
nop
test
cmpsl
mov
lods
pop
jl
or
and
sti
pop
dec
mov
stos
adc
mov
cld
adc
add
jl
lcall
cmc
lods
ret
loopne
aam
aad
sahf
mov
push
cmc
dec
lock
cmp
mov
mov
movsl
sub
call
xchg
xchg
stc
lock
stos
faddl
lock
mov
sub
jg
add
sbb
into
aad
sub
arpl
pop
das
mov
pop
rcrb
iret
stos
in
mov
xchg
les
fcmovnbe
fisubs
lock
iret
lahf
nop
jmp
mov
ret
rcll
call
cmpsb
ret
lods
xchg
cli
inc
dec
out
inc
mov
out
push
ficompl
adc
pop
shr
testb
xchg
imul
inc
xlat
push
mov
add
adc
lock
mov
fimull
scas
iret
lahf
pop
out
aam
je
xor
repz
add
out
out
int
jmp
sub
adc
daa
jmp
cmp
xor
mov
fists
adc
adc
dec
div
sub
push
and
xor
pushf
je
or
mov
pmullw
lcall
push
cmpsl
movsl
shlb
js
enter
repnz
cmc
scas
inc
les
lcall
popa
dec
push
push
mov
pop
jne
add
lock
jmp
add
leave
or
lods
xchg
sbb
mov
or
in
movb
cld
mov
pusha
or
out
ljmp
fdivrs
jmp
jno
or
add
or
out
fsubrs
add
in
lock
pop
or
sbb
sbb
loop
sub
or
sbb
rdpmc
int3
push
adc
xlat
adc
iret
adc
nop
ret
fistpll
stc
adc
and
cld
push
or
fnstsw
add
popa
adc
movsb
mov
clc
mov
push
adc
aad
jae
adcl
aaa
cmp
mov
mov
inc
cwtl
pop
loope
aam
jb
or
lret
nop
or
add
nop
out
jno
lret
nop
xchg
xchg
mov
bswap
test
outsl
nop
push
lret
adc
ficoml
shr
repz
popf
les
lock
and
xor
mov
hlt
mov
loope
add
adc
icebp
ret
repz
hlt
inc
add
mov
scas
shl
push
pop
add
sbb
test
and
out
cld
pop
sub
in
decb
jl
dec
outsl
add
fidivrl
cld
stos
push
mov
cmpsl
iret
outsb
xor
jae
out
mov
add
dec
and
pop
add
test
int
inc
or
nop
les
push
repz
add
push
jle
lds
cmp
xor
jnp
inc
add
aam
xor
insl
enter
add
repnz
dec
add
das
or
cmp
cli
or
mov
xor
ret
inc
inc
adc
hlt
clc
cwtl
jle
js
cmp
nop
daa
jne
mov
mov
mov
sbb
hlt
scas
add
js
daa
ret
inc
ss
and
mov
decb
jle
adc
ja
outsb
int3
hlt
std
les
test
nop
les
add
mov
xchg
xor
leave
jl
xchg
call
inc
addr16
test
xor
mov
nop
int
lods
xor
mov
add
push
test
cmp
lea
adc
adc
cmp
push
dec
or
or
test
cmp
lea
or
adc
cmp
push
dec
add
add
push
test
cmp
lea
push
cmc
adc
cmp
dec
sbb
leave
in
cli
xchg
rcrb
adc
adc
test
cmp
lea
pmaddwd
push
push
push
in
jl
and
dec
pop
push
in
jmp
cmpsl
aad
lods
fwait
aam
xor
dec
mov
adc
mov
or
dec
jl
adc
je
xor
and
enter
shll
add
mov
fwait
add
cli
repnz
inc
inc
shr
push
add
cmpsb
negb
cmp
mov
mov
fwait
add
mov
int
inc
shr
mov
xchg
cld
jmp
and
inc
xchg
cmpsl
les
rolb
lds
and
inc
test
jmp
les
xchg
mov
shlb
dec
pushf
push
int
inc
shr
je
sbbb
xchg
inc
adc
push
or
shr
loop
inc
xchg
les
xchg
rol
mov
pop
ficoms
jo
mov
pop
addr16
iret
and
les
rolb
les
movsb
hlt
inc
test
imulb
inc
jl
fcoml
insb
add
test
pop
inc
or
sub
xchg
enter
add
hlt
push
inc
movsl
push
add
cmp
dec
xchg
hlt
or
mov
mov
enter
idiv
repnz
fs
dec
inc
xorl
in
pop
sbb
inc
lock
inc
inc
mov
adc
in
fwait
add
and
fldl
lods
fsubl
enter
cmc
je
movsb
cmp
jo
icebp
pop
sub
add
dec
test
mov
pop
icebp
in
inc
dec
rolb
cld
add
push
add
add
add
jl
int
inc
enter
sbbb
rolb
in
int
test
jmp
add
mov
pushf
outsb
add
or
inc
and
fwait
add
and
push
add
in
aas
clc
mov
cld
enter
les
sub
add
pusha
pop
hlt
mov
mov
mov
mov
pop
add
xchg
test
hlt
pop
xor
rol
add
mov
rclb
bound
push
and
shlb
mov
mov
pop
or
in
pop
fdivrl
mov
hlt
add
int3
rcll
mov
les
lods
insl
les
inc
les
push
add
mov
pop
or
pop
clc
mov
in
add
cmp
mov
xchg
mov
fimuls
add
mov
ret
push
hlt
enter
shll
push
cld
pop
pop
hlt
enter
mov
pop
incb
mov
xchg
enter
icebp
movsb
ds
insb
imulb
add
dec
mov
mov
add
mov
hlt
enter
int3
cmp
add
fcoml
xchg
xorl
js
stos
dec
cmp
adc
div
push
push
or
rorb
push
in
pop
outsb
xor
pop
clc
repnz
mov
xor
pop
xchg
pop
adc
xchg
mov
mov
xlat
adc
inc
mov
and
add
cmp
xchg
nop
sbb
pop
xor
shl
add
lods
mov
test
shll
std
addl
push
add
and
sub
adc
jmp
add
push
cld
jl
les
mov
mov
add
dec
aam
rolb
add
andb
lahf
aam
mov
lahf
cld
cmp
lds
push
xchg
mov
xchg
push
js
nop
pop
call
jmp
mov
addb
fistl
jl
les
pop
add
cmp
stc
faddl
leave
mov
push
or
in
sbb
mov
enter
orb
hlt
jmp
add
xchg
les
or
ja
adcl
add
add
push
std
xor
les
mov
test
push
cmpsl
fs
push
cmpsl
lods
adc
and
add
lds
push
mov
add
jle
mov
mov
add
clc
mov
rcrl
dec
les
rcrb
jl
sub
pop
lods
sub
mov
xor
sub
icebp
int3
xor
aam
inc
add
lds
cltd
xor
les
shlb
in
stc
icebp
pop
mov
jae
mov
mov
cli
mov
adc
mov
pushf
les
mov
cli
mov
ret
je
pop
adc
pop
loop
sub
pop
mov
xor
in
dec
rolb
hlt
add
addb
mov
lods
mov
jmp
add
lea
sub
inc
mov
das
test
pop
insl
les
push
les
push
hlt
rcl
outsb
add
or
add
and
enter
icebp
or
andl
sarl
pop
hlt
rcrb
les
cs
or
mov
lods
enter
jl
pop
cmc
loope
mov
icebp
je
rolb
inc
add
mov
or
clc
sbb
and
mov
hlt
lret
fisubs
add
add
pusha
xor
cmp
mov
les
cmp
pushf
mov
push
and
push
cmp
inc
mov
aam
sub
shr
movsb
add
mov
jecxz
or
mov
imul
inc
shr
add
push
sub
fs
sub
hlt
sar
outsb
add
mov
int
push
sub
mov
jecxz
fs
int3
mov
je
clc
jmp
add
lret
xor
sub
and
push
insb
int3
int
xchg
ret
roll
shl
das
in
in
addr16
xchg
addb
add
mov
divb
cmc
inc
push
lods
xor
add
in
push
iret
test
jo
shl
sbb
in
sbb
adc
inc
xchg
in
and
in
add
jb
jle
jg
mov
adc
jb
mov
xor
push
out
in
cld
movsl
icebp
movsb
and
mov
mov
fdivr
fxch
insb
xor
andl
daa
dec
test
jno
int3
push
ret
in
popf
je
mov
dec
adc
or
daa
sbb
fs
in
andl
cmp
faddl
cmp
or
in
or
hlt
enter
int3
add
int3
and
adc
or
arpl
cld
pop
roll
fs
aam
sbb
xchg
iret
inc
or
adc
std
mov
add
jl
into
cmp
into
clc
ror
clc
ret
into
clc
aad
jmp
sbb
xchg
cld
mov
int3
or
mov
pushf
mov
jbe
and
sub
adc
mov
hlt
xor
int3
aam
iret
aam
sub
fsubl
std
xorl
mov
or
insb
leave
lods
icebp
cmp
inc
sbb
mov
std
add
dec
cmp
pop
add
lock
lock
call
rcl
push
mov
enter
sbb
xorl
repnz
inc
and
std
xorb
xchg
sarb
dec
sub
xor
cmp
xor
movsb
in
jnp
push
mov
ret
mov
jg
movsb
jl
test
fdiv
mov
adc
movsb
xchg
test
jg
int3
pushf
insl
push
jg
in
fdivrs
xor
inc
pop
add
lret
scas
loop,pt
ss
mov
inc
mov
adc
sahf
fcoms
and
and
hlt
sahf
mov
in
push
lods
ret
xor
lods
or
je
cltd
in
mov
fs
jl
lods
push
fwait
add
pop
mov
fisubs
bound
in
icebp
sbb
insl
pushf
add
in
push
clc
into
jmp
or
mov
mov
pop
cmp
dec
mov
adc
popf
fsubr
push
pop
jg
nop
cmp
adc
das
sbb
iret
mov
cld
in
push
pop
mov
lret
mov
add
test
add
cld
dec
cld
xor
les
test
cld
fs
cltd
lods
js
jno
enterw
adc
or
cmp
push
or
pushf
cmp
fisubs
add
dec
adc
cmp
fs
out
hlt
fwait
data16
cmp
lods
add
cmp
aam
xchg
jmp
add
clc
push
pushf
mov
and
cld
xor
int3
jg
inc
dec
dec
int3
mov
mov
in
cmp
xor
add
jecxz
xor
and
lods
push
int
icebp
int3
add
rorl
mov
mov
push
cmpl
mov
pop
test
cmpsb
or
dec
in
push
push
cltd
lea
js
lea
adcl
mov
sub
xchg
hlt
or
fsubr
fs
add
add
cmp
int3
mov
in
push
cwtl
mov
cmpl
adc
or
shl
repnz
xchg
add
js
outsb
in
lods
hlt
mov
ja
in
icebp
in
xchg
sbb
mov
sbb
mov
dec
loop
inc
xchg
jl
test
bound
cmp
in
je
add
sbb
in
in
ret
xor
aaa
ja
jl
xchg
out
fs
cld
adcl
mov
iret
sahf
or
sub
lret
je
add
addl
rcrb
mov
add
mov
xchg
not
add
or
in
or
not
pop
enter
jecxz
lods
rolb
mov
add
addl
xchg
rolb
mov
add
push
int3
dec
sbbl
mov
add
lock
adc
sbb
call
lods
xor
ss
or
xchg
test
and
sti
xor
in
mov
mov
int3
inc
push
iret
xchg
loope
mov
icebp
pop
push
icebp
pop
inc
icebp
pop
push
icebp
pop
es
pop
cmp
cmc
icebp
xchg
pop
sbb
pop
loopne
pop
shl
pop
icebp
pop
icebp
pop
test
pop
mov
pop
sahf
icebp
pop
jo
pop
pop
inc
icebp
pop
pop
icebp
pop
sub
pop
cmp
or
mov
mov
mov
mov
mov
mov
lods
lock
mov
xor
into
pop
arpl
in
popa
hlt
hlt
sar
movsb
test
cmpsl
ret
or
mov
pusha
and
and
adcl
xchg
or
add
pop
or
jmp
sbb
xchg
xor
fucomip
cld
jmp
or
into
lods
jmp
jb
lods
add
js
xchg
fcoml
rcl
or
insb
mov
inc
mov
mov
adc
push
sti
adc
int3
in
js
add
or
in
mov
or
sbb
mov
adc
inc
cld
mov
push
hlt
mov
fisubs
out
mov
pop
ret
fistpl
xor
push
shll
jo
jl
stos
adc
lcall
repnz
or
lock
int3
xchg
addl
outsl
cld
lods
in
addr16
jl
mov
add
dec
int3
add
bound
add
in
icebp
xchg
adc
outsl
jmp
inc
mov
xor
jmp
into
xor
repz
clc
enter
add
xchg
mov
xchg
or
xor
dec
jge
dec
jne
lods
pop
out
jo
xor
in
fimull
sbb
outsb
sbb
loopne
aaa
pop
dec
cmp
pop
int
icebp
faddl
adc
mov
addb
repnz
rorb
imul
dec
mov
movsb
fisubs
loop
and
or
sbb
outsb
lret
int3
adc
jl
int3
mov
je
loope
or
rolb
xor
jns
mov
hlt
test
mov
pop
iret
dec
test
test
dec
jl
adcl
push
sub
sbb
in
or
xor
in
pop
rcll
jb
pop
into
cld
and
sti
adc
dec
push
iret
mov
or
fs
or
inc
dec
pop
xchg
rol
or
cmp
adc
adc
icebp
pop
sbb
dec
xor
or
hlt
std
test
and
addl
or
je
xor
xor
in
dec
sub
inc
adcl
insb
fwait
and
jecxz
xor
and
in
in
push
aam
push
test
rcrl
mov
jl
aam
xchg
imul
sbb
jecxz
aam
clc
jmp
hlt
mov
aam
or
lods
icebp
mov
add
into
int3
bound
and
std
add
int3
pop
in
jg
pushf
dec
cmp
adc
pop
xor
sbb
sub
push
test
add
fiadds
and
cld
push
xor
in
addl
outsb
add
in
std
add
fdivr
test
mov
mov
dec
in
adc
inc
xorl
sub
add
ljmp
push
cmp
or
add
hlt
mov
pushf
sub
and
pushf
in
jmp
or
test
mov
xor
in
pop
rcll
outsb
movsb
mov
inc
jg
push
sbb
xchg
or
js
xchg
movsb
mov
mov
xchg
fwait
xor
and
je
dec
pop
mov
adc
push
dec
cmp
inc
adc
push
add
test
add
les
push
pushl
sbb
mov
pushf
mov
not
xor
sbb
jae
or
add
push
pop
or
and
in
cld
adc
addr16
or
in
adc
sub
mov
dec
cmp
mov
test
xchg
cltd
out
loop
pop
pushf
mov
sbb
dec
sbb
cmp
lods
cld
push
xor
in
dec
add
dec
test
in
in
or
push
cld
scas
aam
lods
stos
sti
xor
add
mov
xchg
mov
mov
mov
xchg
add
inc
insb
add
call
in
gs
add
jae
out
adc
lods
fmul
add
mov
mov
stc
ret
repnz
je
dec
push
gs
test
dec
test
lods
aam
popf
decl
jb
sbb
dec
jl
mov
push
mov
push
jl
inc
pop
add
and
xor
clc
and
add
fs
mov
clc
out
into
clc
jecxz
clc
clc
into
clc
int
clc
ret
xlat
into
clc
lods
into
clc
mov
lds
andl
cwtl
and
and
dec
add
addl
rclb
mov
add
lock
out
xorl
in
add
lock
int3
adc
shr
decb
call
fisttpll
in
cmpsl
and
mov
cmpl
xchg
arpl
xor
jl
popa
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
xor
add
pop
mov
or
call
adc
mov
push
mov
dec
xchg
fs
fcmovnb
leave
in
icebp
pop
mov
sub
mov
xor
cld
dec
je
dec
clc
test
in
test
jl
dec
adc
hlt
mov
aam
in
xor
clc
mov
xor
xchg
push
mov
movsb
lret
pop
pushf
nop
loopne
pop
mov
push
pop
adc
pop
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loop
jns
cld
dec
enter
fadd
pop
lods
jmp
mov
aaa
pushf
xor
xor
pop
xor
jmp
and
mov
sbb
dec
fmull
rcrl
xor
xchg
jle
add
outsb
fmul
jl
adc
mov
pop
add
push
mov
into
jl
adc
or
sub
in
adc
xor
adc
ret
sti
fmul
sbb
mov
push
nop
fcompl
cmpsb
jmp
in
pushf
or
mov
or
jge
xor
in
push
sub
dec
and
jb
jns
dec
jmp
push
sbb
mov
xchg
hlt
mov
mov
int
repnz
xchg
enter
mov
or
dec
and
cmp
in
je
jge
sbb
int3
test
fcoml
dec
idivb
sub
iret
repnz
repnz
mov
int3
xor
mov
jnp
xor
fucomip
xorb
mov
in
push
in
sbb
dec
dec
inc
xchg
mov
and
fisttpl
xchg
in
adc
pop
in
and
xorl
mov
lds
pop
sub
sub
rcrb
dec
lods
mov
dec
int3
adcl
xor
pop
ds
dec
movsb
mov
ss
jg
adc
mov
add
jbe
mov
jbe
shl
inc
pop
mov
cmp
push
les
jl
adcl
xor
lret
jae
push
sbb
xor
xor
pushf
cmp
adc
push
icebp
mov
pop
movsb
mov
in
and
cmp
mov
jb
mov
fisubl
cmc
dec
sub
les
add
movsb
arpl
inc
dec
mov
xchg
je
mov
push
add
lret
pop
mov
addr16
adc
loop
nop
mov
test
lds
frstor
out
lods
dec
insb
movsb
mov
jns
xor
fucomip
test
and
repnz
push
lret
and
dec
cmp
pushf
xchg
in
jecxz
xor
into
dec
and
pop
into
and
movsb
sti
mov
icebp
xor
les
dec
xor
mov
lods
inc
mov
dec
hlt
pop
int
icebp
cmp
adc
xor
cld
fcoml
xchg
xor
xor
jge
lock
icebp
aam
adc
int3
mov
outsb
or
lods
mov
movsl
jmp
in
movsl
cmpl
sbbl
iret
adc
sbb
and
or
cld
test
mov
movsl
icebp
aam
rorb
dec
nop
mov
mov
fadds
and
sbb
fs
jns
mov
mov
inc
push
jns
mov
and
out
adc
out
std
or
jbe
xor
out
sbb
push
or
out
bound
notl
popf
scas
xor
out
mov
outsl
aam
add
sbb
fsts
in
mov
adc
rclb
pop
dec
shl
in
std
add
pushf
inc
cld
pushl
xchg
icebp
add
pushf
inc
aad
ja
xchg
out
scas
pop
mov
mov
fidivrs
xchg
outsl
out
dec
sbb
in
jae
fdivr
lods
inc
mov
pop
sub
pop
cmp
or
mov
xchg
icebp
icebp
pop
jecxz
pop
cmc
icebp
pop
icebp
pop
fyl2x
pop
stos
icebp
pop
mov
dec
std
or
mov
xor
andl
add
xor
cld
scas
push
call
adc
mov
movsl
add
jae
in
or
sbb
in
or
clc
scas
lret
into
cld
bound
mov
insb
sbb
mov
fdivs
or
or
dec
movsb
sbb
push
jecxz
leave
in
int3
mov
cmpl
xor
insb
and
xchg
sti
insb
sbb
mov
in
dec
rolb
rclb
mov
add
out
cmp
xor
jecxz
xor
add
clc
mov
xchg
les
xchg
mov
dec
cwtl
das
push
add
xor
xor
call
add
pop
jl
lea
push
call
xor
pop
std
add
mov
mov
or
mov
or
xor
and
je
push
jmp
insb
das
int3
test
mov
movsl
movsb
dec
sti
xor
in
dec
adc
js
mov
in
bound
out
mov
in
faddl
movsb
dec
mov
cld
push
aam
push
mov
cpuid
aam
jge
xorb
fwait
or
pop
mov
into
in
add
mov
les
dec
les
mov
int
jmp
mov
movsl
icebp
test
sbb
shll
in
push
xchg
sub
dec
hlt
push
push
dec
mov
pop
jmp
dec
je
pushf
in
loope
push
out
or
hlt
sar
add
lods
fs
mov
xchg
or
fsubr
mov
fnstcw
adc
xor
add
pushf
lds
sti
adc
add
mov
mov
dec
dec
push
mov
sub
mov
dec
pop
cmp
dec
call
dec
in
sbb
lret
sbb
dec
clc
int3
into
clc
ror
roll
lock
xchg
in
bound
js
inc
dec
cmp
or
iret
dec
push
and
cmp
adc
mov
or
dec
cli
xchg
xchg
shl
loope
add
mov
addr16
mov
mov
dec
pushf
in
test
and
jl
dec
pop
or
sbb
clc
hlt
xchg
hlt
mov
movsb
std
adc
lods
outsb
sbb
insb
cld
pop
int
icebp
pushf
xorb
data16
mov
das
pop
call
xor
cmp
or
inc
mov
hlt
mov
dec
jecxz
xor
sbb
mov
xor
hlt
pop
in
movsb
dec
ret
xor
fbstp
xchg
out
fucomip
mov
arpl
xor
jl
aad
sti
xor
in
dec
inc
and
pop
clc
push
mov
call
add
dec
loope
std
push
or
mov
movsb
dec
push
push
leave
outsl
add
leave
adc
add
int3
sub
push
int3
std
sbb
aad
in
fildl
imul
test
inc
mov
pop
and
or
mov
mov
mov
mov
xor
cld
cmpsb
call
inc
mov
loop
add
cld
movsl
icebp
test
dec
js
mov
stc
push
mov
mov
fwait
les
test
mov
shll
jecxz
xor
inc
sbb
dec
sti
pop
shll
shlb
inc
data16
hlt
in
icebp
mov
add
js
lea
rorb
cmp
xor
mov
rorb
out
cltd
call
xor
aam
jg
mov
inc
fisttpll
mov
rol
loopne
call
pushf
and
or
les
into
fs
and
xor
push
pushf
pop
and
cmp
push
add
push
add
repnz
sti
cld
sbb
mov
xor
stc
jl
ret
into
dec
addl
sbb
int3
je
xorb
in
dec
out
jno
mov
dec
xchg
rcr
insb
clc
push
fwait
add
adc
or
xor
out
sti
mov
fiaddl
cmpsl
dec
scas
sbb
mov
outsb
in
shll
inc
jmp
or
xor
dec
lock
inc
add
outsb
int3
shr
icebp
incb
enter
mov
sub
mov
mov
in
xchg
xor
jecxz
xor
jmp
in
mov
movsl
icebp
inc
xchg
test
sub
bound
or
cmp
test
lret
inc
sub
or
xor
negb
adc
in
push
clc
ret
les
pop
aam
add
mov
mov
mov
je
sub
je
inc
in
cmc
pop
int
icebp
sub
and
cmp
cmpsb
or
lods
xor
int3
fcoml
mov
std
addl
dec
les
adc
xchg
lods
jmp
adc
push
std
addb
xor
int3
in
fldl
pop
mov
xchg
and
or
dec
mov
les
mov
mov
ret
xor
or
and
aam
aam
lods
repnz
xchg
loop
mov
mov
insl
out
mov
inc
xor
xchg
insb
ficomps
or
test
mov
movsl
icebp
hlt
adcl
sbb
mov
aam
adc
int3
in
xchg
sti
test
xchg
lods
xor
cld
fildl
xchg
push
or
xor
jl
pop
pop
or
icebp
sbb
xor
mov
push
sar
add
aam
les
dec
cld
pop
int
icebp
pushf
adcb
sbb
dec
mov
xor
mov
sbb
rclb
lods
and
loop
sarb
adc
push
jb
dec
rclb
pop
sti
xor
in
dec
hlt
xor
int3
insb
push
iret
aam
or
addr16
test
and
sbb
in
dec
hlt
push
shll
lods
push
jmp
pop
sub
test
or
leave
in
je
les
faddl
andl
sbb
jecxz
xor
or
add
jl
push
mov
jo
xor
fcmovb
push
or
in
jl
cmp
in
mov
sbb
fwait
int3
xor
mov
pop
cwtl
xor
int
xchg
sahf
movsb
in
bound
dec
enter
movsb
int
adc
xor
push
dec
int
dec
clc
push
rclb
pop
mov
cld
fadd
test
push
mov
xor
int3
jl
pop
loope
lret
xor
in
aam
pop
xchg
in
bound
fs
mov
push
in
or
dec
and
cld
sbb
pop
mov
push
cld
lods
xchg
int3
mov
and
dec
mov
into
lock
test
int3
out
adc
push
int3
jb
notl
icebp
in
mov
fwait
je
or
add
pop
pop
mov
jle
repz
int3
dec
xchg
ss
je
xor
leave
std
add
lods
in
in
mov
cwtl
lods
sub
cli
inc
xor
in
adc
in
mov
xchg
in
clc
pop
xchg
clc
divl
sbb
mov
les
dec
mov
mov
xchg
movsl
adc
xor
pusha
xor
std
add
test
lods
std
mov
push
test
push
test
loope
mov
iret
sbb
mov
adc
call
jge
int3
jne
insb
mov
and
ret
push
inc
or
xor
lods
dec
mov
fiadds
inc
mov
cmp
hlt
or
lds
aam
cmp
xor
arpl
push
ret
jae
cwtl
mov
pushf
and
ss
dec
push
mov
movsb
sbb
mov
in
repnz
mov
js
cld
clc
push
fdivs
test
xor
push
adc
dec
mul
faddl
cmp
repnz
icebp
or
jl
in
fmull
push
lea
js
lea
subl
addl
cmpl
lea
ret
sbb
mov
sbb
or
xchg
or
cmpb
sbb
dec
inc
xor
aad
mov
lea
movsb
adc
in
in
push
les
jmp
fdivl
in
mov
movsl
jmp
mov
inc
int3
xor
or
shlb
in
sarb
mov
mov
pusha
das
push
in
pop
call
sub
pop
xchg
or
inc
xor
mov
mov
add
in
in
int3
sbb
xchg
xor
xchg
test
in
mov
xchg
cmp
xchg
insb
divl
sbb
inc
pop
adc
sub
adc
mov
or
ficoms
pusha
hlt
push
add
xor
add
xor
xchg
xor
xchg
mov
clc
les
xchg
test
adc
xchg
int3
xor
or
pop
sahf
xor
std
mov
mov
fsubl
int3
movsl
adc
xor
movsl
adc
xor
and
sub
call
xor
je
mov
fsubl
fsubl
std
xorl
push
icebp
xchg
nop
test
mov
fs
adc
das
int3
loop
ret
sti
inc
xor
fisubl
test
inc
fucomip
jg
mov
sbb
pop
add
in
sub
push
cld
inc
or
inc
add
xor
fstps
mov
mov
push
xchg
sti
or
cmp
ficomps
or
out
xchg
adc
or
xor
push
in
lahf
iret
mov
or
mov
fadds
hlt
xor
test
test
in
shrb
mov
test
dec
icebp
inc
test
cmp
sub
popf
roll
jl
xor
or
push
out
inc
les
test
fcompl
fwait
xor
mov
pusha
repnz
pop
in
bound
push
subb
subl
push
push
aam
clc
rorb
mov
das
pop
sbb
enter
pop
cld
cmp
hlt
xor
les
fiadds
jl
xor
std
or
in
adc
xor
mov
test
in
pop
int
icebp
mov
subl
mov
add
sahf
out
cmpl
int
push
hlt
aam
testb
fs
je
cmp
pop
dec
sub
mov
shl
sbb
sarl
or
sbb
inc
test
in
fs
rcll
cs
jmp
push
add
mov
cld
lea
sbb
aam
rclb
mov
xor
fstpt
aam
jl
dec
xchg
loopne
xchg
mov
clc
or
pop
into
in
pop
sti
adc
fdiv
xor
lods
add
xor
mov
mov
adc
mov
out
int3
cmp
add
inc
inc
and
and
mov
pop
arpl
mov
xor
adc
lds
mov
push
test
stos
aad
jl
and
hlt
add
lcall
mov
fcompl
sub
loopne
adc
lods
in
in
mov
out
scas
add
shll
shrb
inc
sti
xor
stos
xor
in
dec
mov
mov
pop
fidivrs
pusha
in
or
js
bound
push
outsl
in
sbb
aam
cmp
adc
mov
sub
iret
sbb
pop
insb
dec
lret
fs
jp
push
xchg
sub
and
mov
jb
arpl
sbb
cmc
nop
hlt
lods
xor
mov
test
lods
jl
into
sub
mov
shrl
push
rclb
das
xchg
mov
icebp
lahf
subl
sahf
sti
rcrb
lds
xorl
imul
int
push
adc
inc
xor
in
sbb
push
add
mov
xor
pushf
mov
movsb
dec
fs
cld
dec
push
test
enter
push
stos
cmpsb
add
in
jmp
inc
xor
stos
jecxz
xor
push
mov
aas
scas
mov
ds
mov
fsubrl
test
or
or
push
aam
movsb
push
xor
xchg
xor
dec
push
and
mov
cwtl
in
test
push
push
clc
cld
addr16
scas
pop
test
cmp
push
or
sub
test
add
aam
je
pop
mov
and
dec
ljmp
sbb
je
pop
nop
sub
ret
cmpsl
sbb
push
sub
add
xchg
repnz
fiaddl
fs
repnz
shr
jmp
clc
lcall
xor
in
in
push
int3
movsl
repnz
dec
ljmp
movsb
shll
mov
jl
ret
dec
push
push
lret
mov
push
in
test
and
pop
jmp
sbb
int3
and
add
in
andl
mov
mov
or
add
cmp
add
and
mov
adc
pop
add
and
test
scas
xchg
jmp
cmp
adc
les
jmp
dec
xchg
pop
clc
leave
in
repnz
je
ret
push
add
sbb
mov
hlt
jg
mov
xor
js
loop
or
lock
imul
push
xchg
repnz
mov
pop
mov
loop
sub
cmp
xor
xor
dec
cmpl
shlb
hlt
mov
mov
add
lock
or
xor
inc
rclb
mov
sahf
lock
movsb
xorl
mov
add
out
add
rolb
mov
lock
and
mov
add
or
mov
add
lock
int3
call
push
add
mov
sub
push
int3
pop
adcl
rclb
push
mov
add
cli
add
lock
orb
rcr
lods
mov
int3
adcl
rclb
mov
adc
cmpsb
loop
mov
test
xchg
int3
pusha
jg
cwtl
notb
fcoms
test
decb
mov
add
test
cs
int3
dec
subl
ret
test
add
or
lock
int3
incb
and
shlb
inc
mov
lock
pushf
orl
rolb
lock
bnd
push
icebp
and
int3
dec
cmpl
rclb
lock
into
cmp
in
rcrb
mov
add
int3
bound
mov
out
aad
loop
cld
lock
aad
push
add
mov
mov
dec
lock
cwtl
orl
mov
add
lock
ss
repnz
sarb
mov
xor
int3
mov
sar
ljmp
mov
orl
shrb
mov
int3
fiaddl
in
mov
add
mov
int3
dec
xorl
rcrb
test
shl
shl
add
and
xor
inc
int3
js
data16
test
repnz
rorb
cltd
call
add
mov
add
xor
or
add
or
lock
int3
adc
or
mov
add
lock
repnz
add
mov
or
nop
adc
int3
in
cmp
int3
rcr
movsb
mov
int3
dec
sbbl
sarb
or
in
add
lock
cmpl
jae
or
mov
loop
stos
or
lock
call
ss
mov
add
int3
push
fwait
adcl
inc
repnz
ds
jp
repz
xchg
mov
int3
fiaddl
in
cmp
adc
and
repnz
shlb
mov
test
mov
cmpsb
adc
into
cld
mov
add
lock
cmp
dec
sarb
mov
mov
rol
into
mov
add
lock
jl
repnz
rclb
mov
cwtl
lock
mov
mov
rorb
sbb
mov
push
repnz
sarb
mov
ret
int3
test
mov
mov
dec
rcrb
and
adc
bnd
scas
add
xorl
sub
mov
adc
add
mov
mov
pusha
lock
int3
pop
subl
cmp
sbb
add
mov
xor
or
lock
dec
addl
mov
lret
sub
sbb
cwtl
loopne
test
xchg
mov
inc
in
fildl
xor
adc
inc
lock
dec
or
or
xor
add
or
mov
cli
add
lock
mov
push
mov
ret
hlt
scas
mov
lcall
movsb
lods
test
shll
cmp
int3
enter
lret
rorl
push
ret
mov
cmpsl
stos
dec
adc
mov
mov
xlat
call
movsl
mov
sbb
lahf
mov
jmp
test
movsl
mov
lock
jl
jmp
lock
cmp
dec
les
in
daa
mov
cmpsb
lock
mov
cld
jl
mov
jmp
bound
mov
pushf
sbb
test
add
add
add
add
adc
mov
jp
jno
shlb
xorb
mov
into
les
shr
aad
fs
fmulp
mov
add
cld
sbb
xchg
imul
mov
test
push
sub
cmpsl
xor
shrb
cmpsb
shrl
inc
sbb
jbe
cld
repz
xor
lahf
test
daa
mov
insb
repz
mov
add
add
movsl
and
scas
xchg
adc
fisubs
lret
cmpsb
scas
stos
cmp
stos
mov
rcrl
lahf
mov
cmp
loope
mov
sbb
jb,pn
inc
into
stos
xchg
fisttpll
rcr
xlat
or
stc
fwait
mov
in
cwtl
lret
test
out
es
xchg
or
clc
xorl
xchg
push
icebp
adc
icebp
mov
repz
adc
aam
jecxz
loopne
add
iret
mov
lret
es
comiss
adc
les
mov
scas
addr16
cmp
lahf
cmp
shlb
or
daa
rcrb
xor
and
aaa
ja,pn
adc
fs
outsb
sbb
stos
int3
cld
arpl
data16
jecxz
or
sub
movsb
xchg
add
jmp
sarb
cmp
adc
ret
pop
mov
int3
xchg
sbb
dec
mov
sahf
mov
movsb
mov
imul
enter
pop
ss
xor
lret
xor
add
inc
pop
sub
dec
movsb
lret
mov
mov
sbb
pop
sbb
jne
lock
mov
fwait
enter
inc
mov
in
popa
aad
adc
ret
jno
pop
sbb
js
dec
scas
xorb
js,pn
mov
xor
inc
mov
movsb
mov
or
sbb
enter
xchg
adc
ret
sbb
sbb
or
adcl
repnz
scas
add
int
inc
out
jnp
mov
sbb
test
push
dec
call
cmp
int
rorb
add
dec
cwtl
add
add
ror
in
push
fs
loop
shll
stos
adc
fwait
idivb
mov
add
outsb
xchg
int3
cmp
xchg
out
sarb
adc
push
ret
mov
cmc
js
xchg
push
sub
xor
lahf
mov
jo
pop
mov
je
lods
push
mov
xlat
movsb
mov
call
arpl
sub
or
imul
pushf
cmp
adc
mov
cmp
sub
mov
lret
mov
jno
sbb
fs
inc
cmp
inc
in
out
icebp
jb
div
pushf
outsb
pop
iret
cmpsl
movsb
sarb
insb
insb
cmp
jnp
xor
xor
mov
ret
sub
add
mov
imul
scas
aam
mov
ret
mul
sar
lret
cltd
loopne
lret
mov
cs
mov
mulb
fists
sarl
lock
and
daa
jecxz
imul
mov
stos
sub
push
lcall
adc
fiaddl
add
sbb
in
stos
andb
add
loope
lret
sub
mov
lock
pop
xchg
rcl
jae
xchg
out
outsb
movsb
push
inc
bound
mov
ret
stos
iret
nop
clc
rorl
rorb
hlt
aaa
in
aas
loopne
popa
sbb
adc
cmpl
icebp
nop
lcall
add
push
cmp
cmc
inc
mov
fucomp
push
add
stc
fidivrs
inc
les
scas
lods
or
lea
mov
ja
mov
inc
jmp
fbstp
iret
mov
jns
inc
loop
int3
addb
adc
sbb
stos
xchg
lahf
sbb
xchg
mov
mov
mov
fcomps
loopne
jg
xor
mov
inc
dec
sub
jo
pushf
xchg
pop
rclb
cmp
arpl
push
into
dec
push
sub
adc
daa
ds
enter
mov
addr16
add
sti
xchg
mov
sub
mov
ret
fildll
mov
movsl
adc
out
mov
test
pop
lret
mov
mov
pop
nop
mov
mov
sbb
ret
fucomip
icebp
mov
sbb
scas
mov
dec
pop
call
shrl
lea
iret
in
xor
cmp
imul
ret
lahf
stos
jmp
iret
cwtl
loopne
ljmp
das
mov
enter
mov
cmpsb
mov
dec
enter
cmpl
xchg
sbbl
dec
and
fwait
mov
jecxz
lock
mov
test
lock
cmpsb
dec
nop
jae
lret
jns
movsb
rcrb
push
xor
xchg
shrb
mov
fimuls
rcr
sar
add
mov
stos
scas
mov
lods
cld
push
pop
mov
fsubrl
pop
fiadds
fadd
fcmovb
push
adc
add
push
add
daa
adc
ds
xchg
lods
shlb
aas
lret
dec
xchg
fldcw
adc
cmp
add
popa
lock
cld
fnstenv
xchg
out
ljmp
mov
jecxz
or
fxch
and
iret
mov
scas
insb
lret
sbb
dec
sub
mov
mov
sub
xchg
pop
xor
mov
les
add
jge
mov
xor
test
fwait
mov
adc
xor
leave
mov
and
aas
pusha
adc
stos
sub
adc
cld
jge
mov
ss
loope
xchg
icebp
bound
repnz
add
lret
mov
iret
js
mov
jbe
mov
adc
push
mov
test
in
inc
pop
hlt
shlb
pushw
or
mov
push
rolb
ds
scas
and
out
sub
sub
inc
or
cmpsb
push
adc
jbe
popf
imul
mov
dec
jp
ljmp
clc
sub
outsb
lcall
mov
fwait
add
add
or
rol
ljmp
push
dec
add
subb
adc
sub
les
pop
mov
jg
xor
jg
inc
les
rcr
mov
jp
adc
fiaddl
nop
movsb
add
call
lret
sub
aad
lcall
cmpsl
sbb
push
xchg
xor
rcl
cmpsl
mov
imul
lods
jbe
add
insb
xchg
xchg
xorb
sbb
leave
out
add
dec
data16
repz
inc
insb
mov
fucomip
inc
adcl
jmp
or
mov
xor
mov
aam
inc
aam
xchg
add
ret
loop
xchg
mov
test
or
stos
inc
jo
sbb
adcb
adc
and
outsb
pop
push
movsl
or
jg
iret
lods
dec
cmp
lock
lock
test
out
jae
jae
jbe
inc
or
mov
mov
sbb
sub
ficompl
pushf
push
jmp
dec
jmp
ja
dec
dec
cli
into
sti
add
cmp
or
mov
sbb
and
pushf
sbb
andb
cmpsb
lret
sbb
rcll
xchg
jmp
stos
adc
js
ret
aaa
add
sbb
push
lock
mov
int3
dec
sahf
mov
inc
mov
mov
repnz
mov
jl
jle
int3
out
and
aas
sbb
add
repnz
mov
push
pop
push
sub
adc
loope
pop
lret
push
stos
push
movsb
mov
jne
mov
sarl
xor
or
rol
ficomps
fstps
movsl
cld
in
mov
sbb
iret
jg
sub
lahf
push
repnz
mov
ljmp
shrb
xchg
jnp
rcr
rol
outsb
insb
push
mov
icebp
lret
lahf
mov
mov
mov
add
iret
enter
and
lret
std
xor
push
add
clc
mov
jae
rolb
lret
addb
pop
iret
repz
push
cmp
fwait
cld
jae
flds
repz
sbb
push
repnz
sbb
nop
xchg
std
sahf
add
ret
ljmp
out
push
jmp
cmp
test
lods
out
or
mov
iret
shrb
test
inc
pop
pusha
sar
push
mov
sti
sbb
inc
adc
icebp
jo
out
iret
cld
cld
out
dec
sub
fcom
dec
gs
sub
sub
jle
pusha
lods
pop
adc
xchg
fmull
sbb
movsb
adc
add
daa
out
push
pop
aad
out
xor
or
mov
leave
popw
es
mov
add
jnp
sbbl
push
cmpsl
movsb
stos
in
pop
xchg
enter
sbb
ss
mulb
xchg
add
enter
mov
xchg
dec
mov
inc
jnp
leave
pop
repnz
dec
sbb
loop
cmp
rcl
or
mov
jno
jl
jno
outsb
enter
loop
cwtl
add
subl
int
add
cmp
cmp
dec
enter
dec
stc
int3
pushf
sbb
stos
push
es
das
jne
into
les
mov
pop
push
fsub
adc
pop
cmp
lock
push
mov
push
mov
jno
jno
add
jnp
dec
rolb
test
sbbl
add
mov
movsb
adc
lock
arpl
push
clc
dec
bound
jle
iret
sub
dec
sahf
lret
sbb
into
or
add
jmp
fnstsw
popa
mov
insb
ret
cltd
mov
test
adc
jp
pop
rcrl
shrb
jne
xor
ret
ret
je
add
int3
cwtl
adc
add
add
cmp
in
mov
loope
mov
inc
imul
lock
inc
add
movsb
adc
dec
mov
pusha
add
pop
mov
lahf
mov
pop
scas
lret
mov
jp
pop
sarb
popf
add
aad
adc
es
aam
mov
shrb
nop
jno
cmp
add
cli
add
mov
inc
jbe
inc
lahf
and
cmp
out
pop
mov
mov
xchg
cmpsl
aas
cmpl
jge
out
pop
sbb
lock
fcomps
add
xchg
addr16
orl
jb
flds
mov
ljmp
sbb
lret
fmul
dec
mov
repnz
rorb
test
movsl
adc
movsl
shrl
fstpl
clc
jmp
popa
dec
pop
stc
add
mov
or
sub
fcmovnbe
and
negl
and
sti
jle
lds
cs
adc
and
stos
lahf
lods
lods
mov
xor
mov
push
mov
cmp
mov
cld
fistpl
mov
in
lods
dec
inc
test
mov
fidivrl
pop
xchg
sbb
int
enter
pop
ss
les
cmp
stos
ret
jmp
leave
mov
jmp
dec
icebp
xchg
add
mov
into
lock
imull
xor
lock
movsb
outsb
insb
leave
push
dec
mov
addl
xor
mov
or
call
sbb
lock
in
xor
mov
fs
iret
mov
into
push
mov
ljmp
ret
incl
pop
lock
aam
push
cli
adc
das
sbb
aad
cmc
pushf
call
xor
lahf
outsl
pop
icebp
enter
js
pop
xchg
mov
push
pushf
in
cmpsb
bound
inc
add
cld
pop
xchg
jb
sti
push
jg
sbb
sbb
adc
sarl
or
imul
out
jo
out
movsl
dec
pushf
xor
mov
lds
cli
pop
int3
adc
ficoml
inc
cltd
lock
je
mov
add
add
adc
outsl
sub
test
cltd
pop
lret
dec
sbb
insl
imul
bound
or
lods
subl
mov
add
faddl
xchg
in
mov
inc
fldcw
in
hlt
jecxz
push
lret
cli
add
add
sbb
mov
mov
sub
popf
dec
mov
xchg
fmull
mov
icebp
ss
push
add
add
in
sti
or
or
add
add
sbb
sti
add
jmp
or
lock
fistps
jbe
ja
push
mov
rcrb
icebp
sub
outsl
cmp
js
push
pop
inc
pusha
dec
jl
std
ja
add
inc
das
jnp
jns
sub
pcmpeqd
int
mov
fdiv
sub
pop
fidivl
push
fdivs
iret
lods
xor
xor
jmp
push
and
sbb
lahf
stos
xchg
jp
adc
movsb
pop
fdivr
divb
or
adc
into
adc
adc
mov
mov
movsb
mov
aas
cmovne
mov
mov
jge
lods
pop
or
cmp
pop
xor
xlat
or
or
into
mov
add
cmp
hlt
movsl
jecxz
mov
or
repnz
mov
lods
arpl
repnz
adc
int3
mov
dec
sbb
test
mov
aad
sbb
pusha
addb
cwtl
and
push
ret
push
movsl
or
mov
mov
mov
inc
xchg
jle
or
cwtl
mov
mov
mov
or
push
pop
xor
dec
insl
inc
ret
add
add
inc
jns
adc
push
inc
das
push
cmp
mov
pop
dec
mov
pop
dec
push
or
jno
add
jge
dec
ss
and
sub
dec
xor
inc
adc
pop
dec
and
dec
aaa
inc
pop
jae
and
jmp
mov
test
xor
push
pop
push
je
inc
mov
sbb
bound
pop
cmp
sbb
out
lahf
or
add
inc
push
mov
aas
jno
sbb
jge
mov
sub
pusha
js
mov
out
repz
push
incb
adc
pop
fdiv
in
jne
clc
mov
or
add
mov
sbb
add
cmpsb
mov
dec
xor
push
js
adc
jmp
mov
cmp
fistpl
dec
xchg
aaa
cli
and
stc
mov
push
xchg
pop
jl
jle
pop
mov
pusha
cs
pop
bound
lock
sbb
or
add
pop
adc
fs
mov
dec
pop
mov
add
mov
sub
push
push
jb
add
and
or
andb
sub
into
es
add
in
bound
jg
sbbl
or
sub
faddp
sub
daa
pop
mov
pop
xor
lods
mov
mov
popf
dec
lods
add
mov
or
in
fstpt
movl
int3
data16
das
int
adc
shr
or
in
int3
pushf
adc
ficompl
out
mov
adc
dec
cmc
ret
jg
jg
add
push
imul
dec
push
scas
xor
jmp
mov
xlat
out
mov
inc
jge
lret
ja
jmp
lcall
cmp
add
int3
cmp
insb
jo
in
lds
aad
daa
mov
test
loop
int
xor
cld
ja
in
ficomps
pop
mov
jg
sub
xor
jo
mov
xchg
adc
push
mov
xor
fcmovnb
mov
in
mov
mov
fisttps
enter
andl
hlt
lahf
adc
adc
sarb
das
cmp
in
fdivrs
test
jne
or
jge
push
nop
les
ficoms
pop
addr16
aam
insl
cmp
in
adc
dec
cwtl
xor
add
xchg
and
ret
sub
pop
popf
andb
loopne
rolb
jnp
stc
inc
dec
pop
daa
sbb
inc
pop
xor
sub
pop
add
and
sbb
pop
inc
js
adc
xlat
add
add
sbb
mov
pop
jb
mov
hlt
leave
dec
clc
mov
xchg
inc
jbe
aas
cmp
mov
daa
jmp
ret
mov
int3
or
jns
sub
les
dec
adc
and
movsl
mov
test
js
gs
out
sub
xor
lods
aaa
adc
mov
int3
es
push
mov
mov
add
out
add
or
mov
or
adc
sti
or
mov
add
fwait
jae
jae
push
mov
push
cmp
and
dec
push
test
notb
popa
sbb
out
sbb
ficoms
inc
loop
mov
push
adc
and
icebp
or
aaa
push
sbb
or
or
add
adc
lret
pop
jne
js
in
adc
dec
test
mov
push
cmp
xor
mov
or
or
stos
mov
jge
push
xchg
adc
adc
insb
adc
add
in
mov
push
fists
in
inc
cmp
pushf
jne
clc
xor
pop
adc
mov
mov
add
scas
pop
cmp
add
and
add
jns
adc
fmuls
enter
loope
adc
orb
fidivl
or
sub
jo
std
add
push
in
clc
cmc
add
bound
mov
mov
pop
mov
cmpb
lods
xor
sub
mov
mov
daa
data16
xor
jb
inc
fdivrs
lahf
dec
or
andl
lcall
cmp
push
mov
cmp
xor
cmp
add
es
popf
movsb
dec
add
and
xorl
test
adc
adc
inc
or
stos
adc
stos
or
repnz
adc
mov
test
mov
shll
jp
push
ljmp
mov
outsb
jb
fstpl
fcmovne
pop
sbbb
out
mov
cmp
jnp
jne
jb
push
jne
pusha
cmp
jge
jp
or
dec
and
xchg
add
jne
inc
cld
pop
sub
or
jae
in
jecxz
inc
push
pop
arpl
sub
daa
adc
jns
fsubrl
dec
arpl
inc
dec
aaa
lcall
es
rorb
dec
cmp
inc
xchg
jo
sti
popa
push
xchg
jge
es
push
mov
ja
repnz
inc
push
xchg
aam
jo
or
les
or
xchg
pusha
jge
jns
mov
enter
or
pop
dec
inc
push
inc
popa
sarb
arpl
push
shl
push
lods
add
pop
cmp
xchg
jp
xor
jb
pop
jle
aas
jns
pusha
daa
inc
xor
in
sbb
cld
dec
xor
dec
inc
arpl
push
int3
sub
jo
sahf
jecxz
repz
popf
add
pop
push
jmp
jl
adc
dec
xor
jbe
inc
inc
adc
psllw
xor
inc
int3
sub
ret
out
pop
insb
int
and
mov
pushf
adc
test
aad
movsb
jbe
push
cmpsb
shll
mov
ror
iret
rcrb
in
sbb
mov
xor
pusha
dec
outsl
xchg
sbb
dec
test
cld
in
inc
sahf
les
out
dec
cltd
repnz
dec
mov
divl
bound
mov
lods
mov
sarb
cmp
push
cmpsb
xchg
pop
push
shrb
jne
in
ss
enter
inc
jae
ja
int3
dec
inc
pop
shr
addr16
cli
mov
mov
mov
add
jbe
fsubs
pop
push
push
addl
outsl
hlt
push
push
pop
lock
and
insl
popa
dec
jne
and
lock
sub
in
adc
inc
push
jge
dec
popf
ja
hlt
or
shll
mov
out
fs
xchg
sete
js
jne
mov
dec
inc
add
movlps
jle
xchg
repnz
insl
push
into
call
nop
xchg
add
fiaddl
push
aaa
imul
jae
mov
outsb
mov
or
in
ljmp
adc
pop
ja
push
rorb
lods
jne
mov
or
mov
cmp
sub
inc
dec
inc
loope
hlt
xor
mov
cmp
fcmovbe
mov
ret
hlt
mov
enter
lret
shr
es
adc
mov
cmp
sar
lret
ja
pop
test
inc
dec
das
push
loope
enter
push
cld
into
in
aad
dec
lods
mov
int3
pop
rolb
nopl
pop
push
cmpsb
stos
mov
inc
in
mov
xor
inc
mov
sub
rclb
sub
push
jmp
and
pop
jo
add
aad
clc
sub
jg
lods
push
sub
xlat
or
mov
adc
cmp
pop
sbb
add
adc
jge
push
movsb
push
jo
mov
movb
add
mov
aam
push
loop
push
lcall
rcl
movsl
cld
add
test
sbb
jecxz
xor
addr16
fld
in
fwait
sbb
or
scas
scas
add
or
or
adc
jecxz
dec
enter
inc
add
outsl
rolb
icebp
std
xor
and
fistps
mov
jl
imul
mov
add
lret
lock
fcompl
ljmp
adc
push
pop
in
dec
call
scas
into
add
adc
shr
lods
add
pop
fmuls
sbb
pop
call
adc
lods
movsb
mull
adc
push
sbb
push
rclb
adc
pop
imul
pop
test
mov
dec
sar
out
sbb
or
les
add
cmpsl
iret
clc
cwtl
mov
push
fisubl
clc
stos
pop
sub
add
cli
adc
addr16
add
pushf
fcmovne
sbbb
into
cmpsl
shl
rclb
std
ret
fsub
jle
fs
repnz
out
lret
mov
pop
dec
cmpsb
pop
adc
add
or
xchg
aam
movsb
sub
jl
std
or
out
pop
xlat
pop
add
mov
call
fmull
fistl
or
xchg
adc
ror
mov
mov
sbb
loop
cli
out
add
jb
or
xchg
lock
fildl
adc
scas
adc
cmpnltss
lock
adc
shrd
out
or
xor
adc
sbb
in
or
lods
jecxz
cmpsl
fnstcw
cwtl
dec
jle
or
in
add
int3
movups
mov
pop
addr16
jmp
dec
mov
insb
xchg
inc
add
insb
cmp
lahf
cmp
xor
sub
add
iret
or
aam
mov
or
adc
xor
pop
cmpsl
or
shrb
adc
mov
mov
int3
xchg
adcl
jae
out
out
lods
push
jno
jecxz
dec
lock
sbb
or
pop
or
mov
or
insl
mov
and
in
ljmp
adc
push
rclb
je
adc
js
bswap
jl
push
repnz
rorb
push
orl
jo
or
pop
int3
pushf
ja
orb
repnz
add
add
mov
add
mov
push
add
sbbl
rcrb
lods
mov
add
sbbl
fcom
pop
fmull
adc
repnz
mov
add
lock
clc
sub
loopne
out
call
out
repnz
adc
sub
sbb
out
pop
and
or
in
mov
add
lock
repnz
cmp
jmp
mov
loopne
and
filds
sub
mov
xor
lods
lods
stos
stos
test
movsb
mov
mov
mov
xor
pop
adc
or
ud2
int3
adc
xor
or
xor
add
mov
jl
imul
test
mov
adc
jmp
push
sbb
sbb
sbb
jecxz
out
pop
push
in
out
in
out
loope
in
es
lods
stos
test
mov
scas
xor
shll
sbb
sbb
push
adc
jl
mov
adc
sbb
adc
insb
sub
adc
xor
lcall
sbb
sbb
test
movups
sbb
das
rorl
or
adc
xor
decb
cli
or
or
jo
mov
movsl
pop
adc
sti
in
jecxz
test
push
mov
or
add
outsl
mov
rcrl
sbb
mov
or
add
fstpl
adc
or
sbb
adc
pushl
fwait
or
mov
sbb
or
addb
sbb
inc
mov
push
lock
pop
add
fcoms
push
sub
adcl
ret
jns
adc
sbb
lock
cld
adc
outsl
add
sbb
jo
hlt
out
std
adc
out
mov
or
in
sbb
fnclex
sbb
fucomip
or
adc
dec
std
xor
loop
not
loop
fucomip
mov
xchg
daa
repz
mov
aad
sbb
sbb
out
pop
adc
in
fstpl
icebp
adc
jmp
sbb
xor
mov
loop
loope
lds
loopne
xchg
add
in
adc
adc
out
in
jae
mov
dec
outsl
or
cld
adc
dec
in
std
adc
cli
add
mov
adc
clc
jg
out
adc
mulb
jg
icebp
fists
mov
psrld
ror
add
adc
sbb
mov
daa
sbb
and
push
test
mov
push
std
int
jmp
add
into
lret
adc
mov
sbb
sbb
adc
leave
mov
jmp
mov
add
adc
lds
test
test
and
mov
pop
and
jmp
ljmp
cmp
fcoml
ret
adc
shr
imul
pop
sbb
adc
sbb
push
rol
mov
sbb
mov
fiadds
fisttpll
int3
fistl
mov
rcll
adc
mov
mov
adc
mov
or
xlat
push
lret
adc
jmp
jp
scas
adc
or
ljmp
lock
out
add
adc
mov
mov
sbb
incb
imulb
scas
out
adc
lods
mov
adc
or
stos
or
or
call
mov
icebp
cmpsl
jno
xor
or
push
movsl
mov
jmp
mov
clc
mov
repnz
mov
insl
out
jg
adc
mov
pop
adc
xchg
mov
dec
jecxz
adc
adc
mov
mov
adc
ljmp
rcll
mov
adc
push
mov
orl
mov
sbb
add
mov
xchg
push
or
mov
sbb
or
icebp
sbb
mov
rolb
push
pushf
adc
mov
mov
dec
jmp
ljmp
mov
adc
mov
fists
mov
mov
or
or
xchg
sbb
xchg
test
orl
pusha
adc
addb
dec
or
decb
call
jmp
das
fadds
in
adc
jecxz
in
testl
push
adc
movsb
popf
mov
pushf
insl
add
adc
in
lcall
cltd
les
adc
dec
sbb
xchg
cmp
adc
or
and
pusha
adc
xchg
mov
add
into
jno
test
test
dec
sbb
jo
and
adc
nop
movsl
outsl
adc
repnz
shrl
call
or
in
jecxz
in
clc
out
repnz
in
push
imul
addr16
mov
std
adc
data16
mov
lods
or
aad
sbb
mov
sbb
sbb
fwait
lock
cmp
or
adc
jle
in
adc
cmp
lea
jge
std
jl
adc
xor
adcl
jae
sbb
add
jnp
icebp
sbb
sbb
sbb
jns
js
add
adc
sbb
sar
push
ja
fmuls
call
repnz
jecxz
in
sbb
pop
mov
jne
sbb
add
cmc
sbb
std
adc
mov
dec
arpl
push
and
dec
cmp
lods
dec
or
mov
add
notl
adc
dec
mov
jmp
loope
adc
add
js
ficoms
jmp
or
inc
pop
sbb
lret
inc
mov
jmp
mov
arpl
inc
cmp
adc
aas
add
adc
in
out
lock
std
cmpsb
pop
nop
adcb
ljmp
in
mov
sbb
sbb
add
push
sbbl
or
xor
int3
out
loop
pop
mov
filds
adc
sbb
sbb
test
pop
mov
sbb
push
loope
adc
push
int
adc
sbb
sbb
in
imul
sbb
push
fcompl
jo
lods
xor
adc
icebp
cmc
adc
les
mov
add
xor
adc
cs
sbb
sub
jmp
sub
lret
std
inc
jmp
daa
mov
flds
jmp
add
and
sbb
lock
sti
loop
and
fists
or
and
mov
int3
add
adc
std
shr
mov
shr
out
mov
loop
add
js
ret
or
cmp
sbb
cmp
mov
adc
cmp
cmp
adc
in
adc
test
dec
in
into
in
bound
sti
std
pop
dec
ljmp
adc
adc
aaa
int3
or
insl
adc
xchg
mov
or
insl
adc
add
adc
push
lret
sbb
adc
loopne
adc
adc
xchg
paddb
in
nop
add
mov
orl
dec
loope
sub
adc
or
scas
or
rcrb
sub
test
push
mov
or
repz
cld
adc
outsl
add
add
adc
add
add
adc
fdivr
call
loope
push
into
or
mov
adc
sbb
shl
xchg
sbb
adc
adc
sbb
sbb
push
test
icebp
or
loop
jg
sbb
cld
pop
jmp
pop
adc
add
js
rcll
in
add
add
mov
dec
sbb
xlat
test
insb
icebp
push
mov
fcomp
lock
dec
out
cld
and
lret
out
mov
incl
adc
or
adc
lea
adc
sbb
pop
jmp
ljmp
sbb
jmp
std
icebp
call
cmp
cmp
out
sbb
out
in
xor
jno
cli
sbb
int
sbb
mov
icebp
loop
loopne
adc
sbb
loope
pushf
icebp
loopne
sbb
icebp
push
cmp
dec
dec
fildll
lret
and
mov
jmp
lock
in
lret
cld
shrb
sbb
xchg
adc
std
xchg
stc
mov
sbb
clc
or
adc
dec
or
or
lock
cmc
jmp
loop
fisttps
hlt
mov
shl
loop
repz
inc
adc
roll
shlb
adc
adc
mov
ljmp
movsl
into
rolb
adc
std
push
push
inc
or
push
or
add
gs
fs
mov
call
in
decb
jnp
push
xor
or
call
movsb
int3
enter
dec
mov
lret
icebp
leave
pushf
adc
fcomps
cmc
push
in
decb
repnz
adc
loopne
loopne
insb
push
adc
in
in
std
out
or
mov
jmp
jmp
pop
mov
sbb
test
or
xchg
mov
std
add
imul
or
nop
bound
xchg
push
aaa
push
mov
pop
mov
xchg
mov
jmp
or
in
rsqrtps
jb
or
in
lds
add
rcll
push
repnz
dec
push
inc
sbb
add
les
add
adc
or
adc
pushf
push
adc
push
cwtl
and
jbe
ljmp
pushf
mov
inc
in
pop
adc
in
lods
or
dec
add
and
std
sbb
mov
mov
adc
push
and
and
pop
and
in
cmpsb
sbb
add
xchg
paddsw
push
pop
test
sbb
push
nop
loopne
xchg
into
add
fdivr
ret
adc
or
add
loop
std
adc
into
mov
inc
xchg
repz
adc
pop
cld
sbb
out
les
jl
mov
adc
mov
out
xor
repnz
sbb
jb
sahf
hlt
shl
jns
stos
int3
addr16
andb
fisubl
adc
ret
mov
mov
cvttps2pi
out
mov
sarb
push
nopl
in
in
shrb
or
mov
loope
lock
jbe
add
loop
mov
mov
data16
sub
push
ljmp
adc
test
bndldx
sbb
sbb
ja
sbb
push
add
orl
mov
out
xor
adc
fistps
sbb
nop
out
faddl
xchg
or
in
or
icebp
mov
fwait
adc
in
lock
push
or
imul
adc
ljmp
cmpsb
dec
push
clc
lret
sbb
fidivl
adc
or
or
or
or
or
sbb
hlt
pcmpgtd
ds
andb
scas
rclb
hlt
sbb
adc
in
pop
ljmp
nop
adc
add
test
add
lock
xchg
cmp
adcb
jo
imulb
adc
in
pop
int3
add
in
jl
xchg
or
sbb
out
push
fidivrl
aad
aam
roll
cmp
nop
mov
push
xor
loopne
jmp
add
lock
inc
repz
out
in
mov
outsb
dec
xchg
cmc
mov
sbb
stos
mov
pop
xor
repnz
test
unpckhps
adc
mov
sbb
scas
lret
jecxz
loop
inc
imul
add
fisubl
or
insb
test
pop
add
dec
add
scas
adcb
stos
jle
out
les
pop
cmpsl
adc
and
jb
mov
mov
shlb
cmp
std
sub
xor
adc
repnz
cs
mov
je
cld
sbb
sbb
mov
add
add
or
or
pop
xchg
and
lahf
pushf
popa
aam
push
int3
inc
mov
in
add
adc
dec
dec
out
sbb
adc
fs
push
mov
push
clc
or
pop
mov
sbb
xor
test
add
or
add
mov
fisubs
jmp
xchg
fists
sbb
or
sub
in
in
int3
xchg
xor
insb
mov
popf
pop
stos
or
jmp
into
xor
lods
sbb
adc
movsb
mov
adc
mov
sub
pop
cmp
push
pop
push
add
mov
int3
adc
mov
mov
loopne
in
sbb
mov
shlb
cmp
add
call
or
sbb
fiadds
jb
mov
pop
lock
adc
ljmp
mov
mov
push
pop
rclb
mov
or
sbb
mov
lcall
icebp
xchg
jle
jmp
ljmp
adc
xor
adc
mov
in
push
loopne
dec
loopne
mov
cmpb
and
pop
mov
or
nop
mov
iret
subb
mov
jb
shll
ds
jb
fldl
mov
mov
adc
lret
movsl
adc
mov
pop
fadds
add
add
add
jp
lahf
lods
cmp
pop
sbb
jle
or
repnz
add
adc
cmp
inc
ret
mul
add
mov
arpl
or
nop
push
or
push
repz
psubb
stos
outsb
mov
popl
add
or
insb
lret
jb
xchg
mov
sbb
sbb
lea
pop
xor
pop
enter
pop
lock
in
ret
add
sbb
sbb
mov
lret
cld
add
outsb
sbb
int
xor
sbb
sbb
jb
adc
mov
fcomps
fwait
adc
inc
leave
and
hlt
pop
out
loop
xchg
nop
nop
or
aam
push
adc
adc
jl
cmp
les
pop
pushf
push
sub
outsl
mov
mov
or
or
adc
mov
inc
pop
add
add
jle
fistpll
or
insb
incb
adc
ljmp
mov
xor
push
push
adc
out
and
push
rorb
aad
pusha
and
mov
sub
push
mov
orb
repnz
sbb
in
enter
adc
lock
mov
sbb
into
sbb
popf
sbb
addb
call
andb
add
cmc
cmpsb
ffreep
push
dec
adc
mov
mov
dec
mov
sbb
pop
or
sbb
mov
jmp
adc
xchg
scas
stos
scas
push
pop
pushf
mov
psllq
in
adc
test
nop
sarl
out
sbb
adc
in
mov
fmull
xchg
out
leave
aam
cwtl
mov
sahf
xchg
cld
call
adc
movd
and
pushf
xchg
pushf
outsb
loop
mov
fsub
pushf
sbb
adcl
rep
push
xchg
movsl
fwait
in
xchg
ret
ret
iret
pop
xchg
mov
mov
sbbl
add
dec
jb
repz
adc
fcomp
in
inc
sbb
in
mov
mov
inc
and
aaa
cld
mov
dec
fsubr
jg
out
call
mov
jo
das
movsb
lcall
nop
lock
cmp
sub
adc
push
xchg
sub
pop
or
cwtl
mov
paddsw
lret
mov
adc
mov
inc
je
fldcw
shlb
dec
sbb
les
fwait
scas
mov
call
or
shl
push
push
int3
sbb
arpl
shr
insb
insb
data16
pushf
fdiv
fiaddl
or
sub
out
fs
inc
je
pop
add
add
add
add
nop
mov
addb
jecxz
jmp
sbb
add
adc
call
inc
clc
in
or
decb
xchg
cmp
jp
lds
lcall
cwtl
jmp
notl
xor
xor
mov
cwtl
mov
or
insb
add
fimull
xor
pop
lock
xchg
add
or
call
pop
in
push
scas
js
hlt
or
pushf
lret
and
or
or
hlt
mov
dec
repnz
mov
lods
scas
daa
adc
fmul
stos
cli
xor
add
aam
or
mov
repz
sub
pushf
lret
sbb
pop
movsl
adc
leave
cltd
je
pop
loopne
mov
icebp
rcll
xchg
je
dec
mov
or
jo
jo
xchg
push
outsb
xchg
cmpsl
xchg
les
or
add
movsb
adc
jecxz
sbbb
adc
dec
sub
pushf
pop
inc
test
jnp
mov
cli
fwait
pop
out
xchg
in
sbb
fdivs
jl
mov
push
les
js
je
add
add
jo
xchg
lcall
loop
add
in
inc
add
in
insb
call
repnz
xchg
push
or
js
or
mov
ror
clc
mov
lcall
cmp
testb
push
rorb
pushf
mov
ret
dec
push
fimull
lock
adc
clc
xchg
enter
lock
add
push
push
outsl
cmp
lea
test
mov
xchg
orb
or
mov
out
add
xchg
push
push
adc
scas
out
or
xchg
loope
in
mov
or
push
cli
outsb
stc
insl
stos
aam
adc
fnsetpm(287
in
lock
insb
push
sbb
fstl
add
mov
jbe
push
or
incl
fisubl
rorb
fmul
push
mov
iret
inc
sbb
dec
add
leave
imul
addb
xchg
or
lret
data16
adc
jbe
cmpsb
fucomip
inc
add
pop
add
xor
addr16
in
xor
cmp
call
sbb
pop
inc
enter
in
fs
add
dec
push
int
imul
sub
bnd
adc
adc
lds
shrl
lret
adc
mov
or
data16
mov
pop
inc
add
or
call
inc
add
rcrb
and
sbb
test
ret
mov
out
repnz
lds
outsb
lea
ret
mov
pop
maskmovq
divl
add
leave
push
nop
and
xchg
mov
enter
dec
push
inc
pop
add
sbb
xchg
subb
lret
stos
sbb
repnz
jle
bound
jo
ljmp
pop
stos
aaa
lahf
sub
lcall
data16
arpl
pushf
push
cld
ret
out
sbb
or
test
in
or
mov
sub
out
jecxz
pinsrw
call
fisttps
rorb
cmpsb
lock
js
fsubl
sbb
rorb
gs
or
xor
rolb
fucomip
or
xchg
pop
xchg
lret
clc
in
xchg
xchg
mov
mov
div
inc
sarl
popf
dec
mov
out
mov
insb
xchg
fwait
lsl
add
or
movups
adc
mov
stos
fadds
xchg
lea
and
into
pushf
push
adcb
pusha
adc
fmul
mov
inc
pusha
push
ficoml
cld
imul
call
data16
mov
ret
jge
xor
insl
sbb
or
testb
jmp
cmpsb
movhps
mov
ljmp
out
aad
or
jnp
sbb
or
push
les
push
jae
cmc
fisubs
out
jno
fdiv
xor
cld
in
sbb
jns
sbb
inc
decb
sbb
jp
fstps
or
loope
push
cmp
scas
push
and
aam
lcall
pop
in
xchg
hlt
sbb
mov
incl
sbb
mov
push
dec
add
nop
or
out
dec
or
pop
add
in
nopl
cwtl
adc
xor
les
fidivl
or
adc
scas
ljmp
cmp
adc
sbb
cwtl
jmp
cmp
lret
data16
scas
cmp
pop
loopne
ror
lret
jl
sub
xchg
cmp
ss
lcall
jmp
lods
cli
mov
test
test
mov
movsb
int3
push
nop
sbb
xchg
push
adc
test
and
insb
dec
dec
push
loopne
adc
enter
ds
je
js
add
jmp
popf
mov
lea
daa
pop
push
sbb
pop
fists
mov
xor
fcomps
dec
iret
add
dec
outsb
inc
dec
sub
or
or
adc
shlb
jbe
std
dec
ljmp
mov
sub
dec
scas
pushf
add
fsubr
sbb
test
add
pop
sbb
or
cwtl
cwtl
add
and
lods
or
in
add
es
movsb
adc
out
int3
or
adc
data16
xchg
xor
and
or
sub
pop
ljmp
ja
enter
rclb
mov
push
out
sbb
in
add
rorb
mov
clc
push
pop
push
add
test
out
xor
cmpsl
fadds
xchg
nop
cmp
cmpb
ret
push
pusha
out
dec
cmp
and
dec
sbb
adc
sar
in
pop
jp
jb
mov
lret
cwtl
jo
data16
add
mov
pushf
mov
add
or
repnz
dec
mov
xchg
or
xor
adc
adc
and
dec
les
sbb
fsubr
in
xor
pop
insb
pop
outsb
popf
imul
xchg
js
dec
mov
out
fs
loopne
pop
pop
jmp
rorb
arpl
punpckldq
adc
xor
mov
ret
or
sbb
enter
and
sarb
lcall
mov
mov
test
jne
mov
or
sub
out
enter
sbbb
std
inc
or
outsl
scas
mov
mov
ds
sub
mov
inc
or
mov
inc
stos
inc
mov
int3
adc
sbb
and
pop
mov
mov
jmp
adc
xor
add
push
adcb
test
pop
cmp
test
jbe
add
pusha
sbbb
or
mov
sub
in
enter
imul
imul
stos
push
in
mov
decb
or
pop
dec
int3
hlt
add
adc
je
inc
and
mov
lret
xor
ds
jl
inc
iret
mov
jae
icebp
aas
in
sub
fcompl
sub
push
fists
inc
in
inc
enter
sbb
push
faddl
sub
and
push
add
lret
pop
mov
jp
insb
and
aas
push
jo
adc
adc
outsb
jge
lock
cmp
mov
jmp
int3
adc
mull
fs
cmpsl
xor
test
jo
mov
data16
add
repz
mov
pop
or
or
addb
test
sbb
jb
test
mov
sbb
lret
test
outsb
push
push
shr
jmp
add
push
test
push
fsubr
add
ljmp
cmpb
pop
sbbl
sbb
jo
call
inc
dec
push
lock
sbb
je
pop
inc
push
rcrb
xchg
shrb
or
push
das
cmp
mov
cmp
xor
sbb
mov
add
sbb
pop
xor
add
inc
out
or
inc
shl
inc
or
adc
inc
icebp
adc
pop
mov
push
sbb
cwtl
andb
es
mov
mov
push
fisubrs
int3
hlt
testb
push
pop
sbb
aas
fsub
in
pop
xchg
or
mov
pop
in
inc
mov
lahf
adc
mov
fisubs
fsubrl
mov
mov
adc
sub
outsl
pushf
loop
stos
cwtl
mov
repnz
or
mov
stos
dec
imul
filds
jmp
cmp
mov
or
dec
cmc
cmc
jmp
in
or
add
push
pop
enter
mov
call
jl
or
lret
pusha
lods
pop
pop
iret
pop
arpl
adc
fcmovb
jle
jp
push
cmp
push
or
pushf
xchg
js
cmp
or
sub
pop
sub
jle
lock
mov
out
shll
push
incb
mov
loopne
sub
test
sub
mov
test
push
mov
pusha
lods
dec
pop
in
mov
mov
jp
or
and
in
loop
mov
adc
aaa
gs
inc
mov
add
rclb
insb
jo
incb
ljmp
icebp
movsb
mov
or
call
test
or
rorb
adc
cwtl
in
popa
sub
lds
mov
sub
or
js
sub
adc
or
insb
adc
not
xor
test
mov
loope
ljmp
adc
lock
loopne
sbb
xchg
pusha
or
mov
add
sahf
xchg
adc
psubd
sbb
out
inc
dec
loop
jo
out
test
adc
outsb
enter
scas
push
mov
sbb
mov
xlat
pop
sbb
ficoms
or
in
or
sbb
or
shll
in
sbb
repnz
aad
decb
out
adc
int3
pop
inc
outsl
in
add
push
rsm
sbb
mov
int
inc
or
insb
sbb
and
and
in
add
sbb
pop
sbb
maxss
or
int
int3
cmp
and
adc
or
jle
hlt
or
or
sbb
imul
imul
xchg
popl
xchg
add
movntq
and
int
inc
or
sbb
icebp
lods
imul
pop
or
or
lret
test
cltd
aaa
inc
gs
cmovne
dec
std
jp
add
or
sbb
inc
lret
or
adc
sbb
fisubrs
pushf
mov
add
in
in
sbb
sar
adc
fcmovu
lret
pop
or
push
adc
mov
adc
push
testl
mov
orb
lock
jo
and
es
or
out
adc
inc
loop
icebp
stos
or
adc
inc
fisttps
pushf
xchg
pop
shl
sbb
movsb
into
pop
out
dec
nop
or
sbb
or
out
out
sahf
les
ljmp
or
or
xchg
bswap
into
in
loope
adc
pushf
adc
or
jge
iret
add
fdiv
mov
pop
loopne
setl
or
sbb
std
xlat
movb
psrlw
ljmp
aam
out
cmpxchg
jne
or
adc
decl
add
push
mov
outsl
sbb
push
jl
andps
fidivrs
mov
nop
out
or
or
ret
or
punpcklwd
jmp
or
sahf
mov
mov
add
mov
iret
std
inc
rolb
fs
mov
mov
in
je
add
or
wrmsr
sbb
sbb
add
in
xchg
stos
adc
int
sub
call
insb
je
aaa
xchg
push
and
inc
adc
push
rcr
sbb
or
lcall
or
lds
xchg
fs
sbb
push
out
sbb
mov
dec
push
and
pop
enter
dec
jecxz
adc
cmpsl
or
psubw
repnz
sar
imul
inc
popf
bound
add
mov
pop
mov
ret
aaa
add
mov
xchg
sahf
xchg
adc
add
imul
repnz
sbb
gs
shl
ret
add
test
arpl
adc
movlps
cli
or
adc
jmp
sbb
in
nop
cmp
jmp
mov
or
mov
xor
hlt
int
cmc
std
repnz
inc
pop
or
mov
jecxz
jnp
mov
adc
adc
fbstp
popf
rorl
sbb
or
sahf
xchg
push
sahf
dec
decb
in
in
or
nop
jge
push
push
cvtps2pd
rorb
jnp
out
into
pinsrw
shl
add
fucomip
std
lock
dec
xchg
bswap
orb
push
sbb
pop
add
mov
lock
mov
sbb
adc
push
jb
mov
prefetch
or
int3
jg
mov
add
adc
decb
dec
icebp
fisttpll
dec
ja
loopne
or
jle
wbinvd
sub
jecxz
sbb
push
sub
test
dec
cltd
or
ljmp
outsb
or
add
add
ljmp
xchg
mov
les
or
or
xor
pop
and
fwait
into
cmc
stc
icebp
stos
and
push
jb
nop
comiss
in
nop
inc
xchg
sbb
insl
dec
ljmp
clc
stos
or
nop
pop
cwtl
push
or
inc
push
inc
lock
lock
mov
cld
pop
or
loop
jecxz
rol
pusha
xchg
sti
ret
lock
add
add
add
pop
pop
pop
shl
aam
fmull
cli
in
std
or
mov
adc
out
lcall
push
cmp
mov
out
push
call
pop
call
mov
add
jb
pop
cmpsb
fisttpl
lods
adc
mov
dec
lods
sbb
stos
lock
add
pop
mov
lock
cwtl
fmull
pop
fdivr
xchg
or
sbb
jbe
loop
dec
cmp
mov
nop
ret
xchg
std
scas
mov
push
mov
lret
in
push
pop
jb
lock
push
xor
test
andl
faddp
cld
repnz
lock
mov
bound
adc
sbb
jp
push
mov
dec
fs
mov
in
repnz
xor
cmc
add
test
lcall
cli
add
adc
fisttpl
xor
jmp
icebp
xor
psubsb
sbb
pop
add
pushf
xor
jb
add
mov
popl
pusha
unpcklps
jmp
inc
push
bswap
jmp
mov
push
push
adc
xchg
ret
mov
sbb
in
ds
pusha
push
and
shl
sbb
adc
mov
in
clc
in
xchg
sbb
in
ja
lock
xor
xchg
inc
lods
pusha
inc
test
aam
add
icebp
inc
cmp
outsl
add
rolb
rorb
loop
or
adc
filds
decl
push
int3
loopne
int3
pop
dec
fbld
ljmp
jmp
daa
clc
adc
cmp
pop
mov
loop
mov
dec
mov
dec
mov
or
add
jb
rorb
leave
in
out
jecxz
pop
pop
popf
jae
fcomip
and
in
out
stos
mov
pop
add
int3
push
cmp
negl
mov
loop
or
lock
add
std
rcrl
cltd
cmpsb
add
int3
scas
xchg
adc
repnz
cld
cmpsb
or
push
ret
decb
xchg
aad
pop
inc
adc
or
insb
adc
mov
sbb
mov
loope
or
loope
dec
ret
mov
add
andl
mov
shrl
mov
int3
movsb
xorl
or
subb
or
mov
xor
adc
jno
cs
pop
inc
mov
push
sub
adc
ds
in
loopne
xlat
mov
ljmp
aaa
cmp
scas
fnstenv
or
or
pusha
add
xlat
xor
pop
js
pop
test
leave
daa
mov
popa
push
pusha
sub
sub
inc
js
dec
push
mov
inc
pusha
jg
and
add
or
das
and
adc
sbb
fcompl
fstpl
lret
lods
ror
or
add
cmpsb
fistpll
fld1
fsub
arpl
jbe
sbb
stos
lea
nop
xchg
fld1
mov
jecxz
add
repnz
rcrb
lock
repnz
fadd
mov
add
lock
int3
in
in
repnz
or
in
and
mov
add
int3
pop
addl
rorb
mov
je
js
jl
fs
rclb
lock
mov
rcr
enter
loopne
in
int3
sbb
adc
push
lock
int3
dec
cmpl
rcrb
test
fmul
enter
call
cmp
pop
orl
mov
or
lock
rolb
int
mov
add
lock
int3
enter
rol
les
ror
cmpl
mov
add
inc
cmpsb
xchg
jbe
mov
stos
movsb
or
mov
int3
lahf
cmpl
mov
inc
in
mov
cmp
dec
jbe
and
cmpl
iret
and
cmpl
push
dec
jbe
and
adc
dec
or
sbb
ret
cmpsb
lods
and
shrl
loop
add
test
sti
icebp
push
cld
mov
and
test
dec
loope
loop
repnz
jns
sarl
popa
add
or
imull
xchg
jno
lds
rcrl
test
mov
les
in
jmp
or
xor
mov
loope
int
lods
lods
adc
push
add
inc
add
jbe
jle
data16
mov
fimull
xor
mov
rolb
ret
dec
les
lds
enter
icebp
lret
dec
int3
xor
mov
rolb
hlt
repz
insb
inc
push
add
pop
mov
outsl
add
int
dec
rol
and
into
sub
cmpsb
or
fsts
inc
mov
into
std
out
fistpl
pusha
push
call
scas
lcall
inc
call
arpl
out
imul
mov
pop
jl
lods
sub
nop
fxch
pop
stc
sbb
out
mov
cmpsb
movsl
dec
scas
push
in
jne
or
mov
add
adc
sub
adc
leave
add
or
inc
or
lock
int3
push
adcl
rorb
stos
mov
pop
aaa
std
shll
pop
adc
popa
mov
adc
add
lock
int3
cmp
call
cmp
or
clc
add
repnz
sarb
dec
mov
add
and
cwtl
andl
mov
and
lock
faddl
es
hlt
stc
daa
mov
lock
repnz
mov
mov
add
and
adc
bnd
das
push
lock
addb
rorb
int3
sbb
repnz
shlb
pop
mov
pop
lock
cmpl
mov
add
clc
int3
pop
jbe
aas
mov
cld
mov
add
lock
int3
inc
addl
rolb
mov
lock
int3
nop
addl
rolb
mov
shl
dec
int3
sbb
std
repnz
rclb
dec
add
jl
dec
adcl
mov
jno
loopne
fwait
add
adc
add
repnz
ror
jne
cld
add
lock
ja
push
js
cmp
mov
add
lock
pop
cmpl
sarb
jge
lods
lock
hlt
sbbl
shlb
mov
sub
adc
push
int3
arpl
test
and
adc
pop
push
sub
clc
pop
push
push
jl
inc
and
mov
jne
paddsw
pusha
xchg
inc
mov
jns
add
jae
fisubs
jge
dec
cmp
cmp
mov
sub
popa
dec
out
inc
and
sbb
push
push
in
dec
pop
cmpsl
pop
lods
cli
arpl
pusha
and
xor
jno
enter
xor
subl
in
push
jnp
inc
inc
int3
sbb
loopne
push
pop
xchg
fs
mov
pop
jnp
jae
mov
js
inc
cmp
sub
inc
test
mov
add
fs
mov
in
pop
pop
jle
adc
loopne
xor
cmp
xlat
pop
jbe
and
jno
icebp
push
adc
pop
push
popa
mov
test
lods
mov
lock
jp
in
add
in
adc
rorb
or
or
xchg
mov
test
hlt
xlat
and
jl
pop
cmp
mov
mov
inc
es
in
inc
call
inc
jns
jl
add
rol
enter
inc
inc
imul
call
xor
adc
pushf
out
out
mov
out
mov
cmpsl
fdivl
push
lret
ret
xor
je
nop
add
inc
dec
add
mov
out
add
into
add
fdiv
add
and
jne
js
bound
and
cmp
or
test
adc
jmp
loop
cmp
adc
int3
mov
jp
add
clc
sar
imul
lret
or
arpl
scas
loop
or
cmp
xchg
nop
mov
les
mov
or
jl
fsub
ret
add
adcl
int3
pop
or
rorb
adc
adc
xchg
sbb
sbb
pop
je
fisubrs
negb
loope
test
jo
sahf
decb
cwtl
inc
ja
bound
mov
sbb
mov
push
cmp
xchg
cmpb
stos
add
pop
ja
inc
adc
jp
add
jmp
cmp
or
sbb
call
jo
xchg
sub
mov
add
dec
aaa
js
stos
pop
push
cmp
imul
and
pop
in
mov
jbe
pop
jl
dec
hlt
js
ret
test
xor
or
imul
jo
ret
dec
call
sti
jecxz
inc
clc
pop
mov
dec
dec
cmp
test
mov
sbb
out
fcomi
inc
mov
test
sti
jnp
sub
or
push
arpl
dec
jmp
mov
das
jmp
jns
push
inc
iret
or
sub
inc
push
push
mov
lret
ret
mov
mov
inc
sbbb
mov
pop
cmp
ret
jp
lds
mov
or
jbe
in
scas
cmp
pop
push
mov
push
push
out
lahf
mov
test
xchg
cmp
dec
imul
adc
scas
cmpsl
push
sub
andb
mov
setne
xchg
cli
push
jno
das
aam
cmp
mov
adc
pop
insb
out
popf
pcmpeqw
or
ljmp
inc
xchg
mov
ss
lock
fsubr
mov
add
or
xor
xor
inc
arpl
and
mov
push
xchg
push
mov
or
and
inc
cmp
aam
bound
xchg
ja
xchg
or
jb
cld
or
mov
ja
outsb
cmp
xchg
cmp
or
jle
or
and
inc
shll
sbb
cmp
or
adc
xlat
lock
int3
aad
aam
rcl
mov
push
ret
mov
or
int3
fadds
hlt
cld
mov
add
repnz
dec
shrb
rorb
dec
pop
nop
or
mov
xchg
add
and
ret
or
stos
enter
aaa
fs
lods
js
pushf
in
jge
outsb
or
shlb
mov
int3
push
int3
movsl
fidivrl
and
lods
sbb
adc
lock
lret
arpl
icebp
mov
or
or
or
add
or
or
je
jae
fiadds
jae
jae
incl
push
jl
or
push
push
insb
imul
bound
test
add
lods
push
push
add
hlt
mov
movsb
mov
lods
mov
mov
cltd
sub
xchg
arpl
out
addl
cld
fidivl
jo
in
sbb
add
sbb
or
pop
ja
sub
popa
dec
adc
dec
adc
je
add
enter
jmp
add
dec
rcrb
push
ret
clc
jge
hlt
movsl
sbb
pop
hlt
int3
cld
hlt
or
hlt
lods
or
aam
stc
imul
or
add
movsb
sbb
inc
sbb
lods
pop
aam
pushf
icebp
hlt
icebp
mov
push
nop
hlt
jmp
imul
out
lods
lahf
lods
add
mov
mov
or
test
dec
inc
xor
cmp
push
mov
scas
in
in
pand
mov
mov
inc
lret
int
sub
sbb
arpl
dec
imul
or
push
add
cmpl
imul
lds
cmp
xor
or
pop
pushl
xchg
int
stos
cmc
adc
in
dec
jne
scas
imul
add
adc
mov
pop
inc
out
dec
lods
and
test
clc
neg
push
mov
fs
rcll
sbb
in
aaa
jmp
sbb
mov
xlat
cltd
scas
fsubrs
adc
sub
xchg
sahf
lahf
xchg
rol
xor
pop
mov
arpl
repnz
sbb
and
mov
rclb
jg
les
daa
cmc
and
cmp
inc
in
mov
leave
inc
or
jb
nop
popf
adc
std
fwait
icebp
hlt
mov
aaa
repnz
sub
int3
test
divb
xchg
ret
rclb
iret
jmp
mov
cmpsl
fwait
sbb
inc
ror
adc
mov
mov
cli
xor
mov
mov
pushf
mov
mov
into
lret
push
jne
ja
lods
and
call
xchg
pop
or
cmc
jmp
stos
data16
adc
div
or
and
mov
or
xor
mov
cmp
mov
mov
test
push
cmpsl
stos
dec
mov
cmp
call
sbb
movsb
adc
jecxz
mov
loopne
or
mov
stos
les
loope
icebp
scas
dec
sti
dec
in
pop
rcl
mov
mov
ret
mov
and
lret
filds
mov
cmpsl
cmp
out
retw
jb
sbb
cmpsl
adc
xchg
imul
push
pop
rcll
stos
mov
dec
clc
mov
pop
aaa
push
mov
out
lea
xchg
xor
jmp
call
lahf
sarl
test
jle
mov
ret
sbb
mov
add
jmp
xor
jle
xchg
pop
pop
and
xchg
pop
cmp
out
push
fistpll
cmpsl
call
ret
mov
pop
jmp
mov
enter
ljmp
and
ret
fistpll
xchg
js
mov
xor
inc
cmp
dec
ja
daa
in
rol
dec
jmp
add
stos
hlt
and
int3
rol
inc
repnz
pop
mov
push
hlt
les
sub
add
lock
int3
lock
sbb
adc
repnz
sub
pop
lret
aam
cmpsb
mov
loope
stc
fs
xchg
or
rcrb
ljmp
loop
mov
sahf
lods
push
push
repnz
or
sbb
or
pop
stc
or
or
lods
call
test
in
lcall
xchg
push
and
mov
mov
push
repnz
add
sbb
mov
pop
xchg
or
mov
mov
rcrb
jo
nop
or
sbb
adc
xchg
add
pop
cli
cmp
in
add
add
out
or
fs
mov
xchg
pop
je
add
je
cld
push
mov
sbb
clc
dec
adc
xchg
push
and
lock
test
jo
sub
js
pop
stos
mov
in
cmp
mov
into
adcl
jne
insb
lahf
in
jge
mov
inc
pmaxsw
in
or
or
adc
pushf
cmp
notl
rclb
mov
xchg
repnz
add
mov
cld
loopne
pop
les
sbb
loop
cmpsl
test
sbb
aaa
out
or
pop
scas
lods
or
cmp
in
or
add
add
fidivs
mov
insb
or
jo
aas
imulb
or
addl
stos
subl
mov
add
jo
adc
mov
xor
mov
add
cli
xor
fs
mov
mov
nop
add
jmp
dec
add
add
test
lods
inc
ret
loop
add
rcll
in
rorl
adc
iret
ja
scas
rorb
int3
jmp
lock
int3
sbb
clc
jo
or
add
loop
and
mov
ret
xchg
ds
lret
aad
lock
mov
xor
adc
inc
push
stos
add
incl
bound
insb
add
dec
insb
mov
push
in
lods
movsl
push
loopne
movsb
loopne
ret
fdivs
stos
fcoml
adcb
sbb
jns
xchg
in
scas
lahf
xchg
cmp
add
and
jo
nop
out
pop
enter
nop
incb
mov
subb
xchg
test
add
or
xor
lock
int
lods
xchg
add
in
ss
or
jp
or
add
jmp
repz
or
add
adc
mov
enter
mov
jbe
imul
mov
push
add
push
iret
or
mov
faddl
sub
and
adc
les
sbb
adc
stc
mov
shll
into
adc
sarl
lret
mov
stos
adc
add
sbbl
lods
nop
mov
dec
mov
adc
mov
dec
outsl
jmp
lret
aam
adc
nop
loopne
and
jnp
xor
lods
lret
sarb
xor
int3
outsl
push
fmul
enter
mov
fadd
popf
add
imul
adc
sbb
add
shrb
sbb
mov
sbb
xchg
mov
jno
xchg
loopne
mov
stos
push
mov
mov
push
cmpsb
clc
shl
nop
xor
pop
push
in
rcr
mov
push
add
mov
lods
lods
lret
mov
movsl
sbb
jae
push
mov
js
out
mov
negl
xchg
stc
mov
xchg
fsubs
push
mov
call
pushf
mov
fsubrs
ljmp
movsb
fcomip
test
shlb
int3
loopne
loope
loop
jecxz
stos
call
fcomip
xor
push
add
add
js
push
adc
insb
loopne
xchg
icebp
mov
roll
cmpsl
addr16
mov
fs
jl
iret
pop
fldl2e
repz
pop
sub
js
in
push
adc
sbb
or
loope
and
or
pusha
sbb
add
push
mov
xchg
mov
push
hlt
stos
lret
out
or
cmp
jg
lods
in
scas
bound
inc
or
cmpl
js
dec
mov
insb
dec
push
sub
rorb
int3
mov
push
mov
loop
mov
sbb
xor
scas
adc
in
or
subb
add
dec
mov
or
shl
mov
add
inc
mov
and
add
add
or
adc
add
shl
scas
leave
repz
cmpsl
movl
inc
imul
push
iret
pusha
addr16
fwait
sbb
cli
or
nop
movsb
cltd
jne
popa
add
push
outsl
fs
out
loope
pusha
sbb
push
cld
pop
or
cmp
enter
mov
mov
in
scas
sbb
mov
lods
subb
movsb
inc
jb
movb
lret
lds
xor
loopne
mov
insb
and
andb
clc
or
or
enter
lret
aaa
xor
data16
loopne
push
xchg
sub
adc
dec
pop
and
nop
or
jns
add
out
or
dec
fimuls
subb
sti
add
or
xchg
mov
orb
mov
lock
fiaddl
scas
ret
xchg
mov
in
mov
lret
inc
clc
out
movsl
mov
or
mov
mov
ja
cmpsb
mov
or
cltd
or
loope
mov
loop
dec
dec
lods
in
or
mov
aad
mov
xchg
sbb
addb
dec
cwtl
cmpl
sbb
stos
outsl
or
adc
test
add
cmp
adc
add
test
adc
lods
in
jno
jmp
movsb
fdivs
lods
mov
add
sbb
push
outsb
or
lret
frstor
test
add
mov
mov
mov
lock
daa
sti
fadds
sar
sbb
mov
push
repnz
int
icebp
and
scas
jg
aam
loope
add
repnz
iret
xorb
sbb
sbb
orb
hlt
lock
int3
add
mov
mov
xchg
adc
nop
sbb
mov
pop
inc
or
loopne
cmp
pop
xchg
sub
xor
je
dec
cmp
jnp
sub
ficomps
adc
xchg
bound
add
cld
sub
pusha
dec
push
push
sub
rcrb
popf
into
cwtl
movb
testb
jp
bound
jmp
les
test
mov
adc
cmp
inc
sbb
jbe
push
sub
cmp
xchg
xor
pop
jge
in
das
adc
mov
dec
and
sub
push
jno,pn
and
cmp
adc
pop
inc
bound
sahf
fisubs
inc
hlt
ficomps
js
jp
jle
jns
jne
xchg
clc
shll
bound
jmp
or
jge
pusha
inc
jns
inc
cmp
rcll
lds
sub
inc
push
loopne
hlt
pop
es
aam
ja
pop
or
dec
dec
add
jmp
or
xor
shlb
sahf
fmull
xchg
scas
hlt
ja
fs
rcrl
into
push
popf
rclb
adc
aad
scas
imul
and
inc
insb
fmull
repnz
add
add
lcall
jo
sahf
lahf
ja
outsl
arpl
call
add
adc
ja
and
cmp
add
jae
jnp
rolb
pop
data16
sub
adc
dec
push
and
outsb
je
pop
inc
gs
mov
js
out
test
rclb
inc
jo
or
bound
or
in
mov
mov
mov
add
and
ret
aam
sub
test
int3
mov
aam
cld
jge
dec
inc
outsl
nop
in
mov
jns
mov
outsb
mov
jle
in
add
mov
mov
sub
xchg
ret
repz
rcl
enter
into
shll
out
pop
and
adc
cld
cwtl
test
lods
lock
int3
pop
in
lcall
pushw
ljmp
mov
fisubl
ret
adc
movsb
lret
cmp
insb
cmpsb
jg
enter
int3
inc
addr16
inc
sub
leave
mov
mov
cmp
insb
adc
adc
push
int3
fidivs
xchg
mov
mov
mov
mov
mov
adc
jns
addr16
cmp
adc
mov
rorw
dec
aas
enter
shrb
aam
bound
inc
jne
pusha
into
xchg
jle
mov
push
push
adc
lcall
les
outsb
push
jb
or
mov
insb
or
sbb
fcoms
adc
lcall
insb
inc
mov
sarb
inc
mov
daa
adc
lret
fs
cld
jo
jge
adc
dec
cli
filds
stos
sub
xchg
jle
xor
nop
enter
pop
outsl
hlt
int3
push
rcr
in
jnp
mov
mov
fidivs
push
adc
out
aas
addl
jge
mov
lret
or
or
mov
pop
inc
inc
push
popa
pushf
aam
jne
popw
sub
jp
cli
adc
cmp
push
fdivr
mov
mov
sub
adc
and
pop
sbb
dec
or
mov
jmp
mov
and
adc
add
inc
or
jge
test
in
arpl
ljmp
inc
dec
or
mov
add
repnz
repz
testb
in
adc
fldcw
fisubl
clc
sbb
movsb
leave
pop
pop
adc
mov
cmc
fdivrl
sbb
cmc
or
gs
fdivrl
inc
in
ja
cld
xorl
sbb
add
clc
push
and
sarl
add
shrl
int
stos
add
lods
shlb
pop
ss
test
dec
adc
or
cmp
sub
outsl
gs
inc
int3
test
data16
xor
xchg
scas
out
sbb
xchg
sbb
sar
les
lret
icebp
in
mov
les
addl
les
into
fmul
mov
stc
shll
les
mov
xor
rcr
add
push
pop
lea
mov
test
nop
popf
lea
enter
sbb
ret
movsb
rol
lods
lods
test
sar
xchg
mov
mov
pop
pop
pushf
push
ror
iret
cmp
xor
mov
iret
les
or
push
iret
pop
adc
adcb
xlat
or
lods
movsb
dec
dec
dec
aas
xor
data16
dec
sarb
out
push
or
mov
fucomp
lret
mov
shl
cmp
push
hlt
andb
enter
int
adc
cld
mov
pop
jp
jecxz
or
sbb
fdivrl
adcl
scas
mov
jbe
fdivrs
mov
dec
int3
and
movsb
and
cmp
sbb
int3
push
push
adc
sub
fisubrs
in
adc
ret
ret
push
out
pop
inc
adc
outsb
mov
icebp
xchg
movsl
or
movsb
pop
gs
and
inc
loop
and
enter
mov
sub
loope
sahf
sub
and
imul
adc
das
sbb
pop
cmp
iret
fmull
adc
gs
loop
or
mov
xor
lock
cmpsb
test
cmp
in
movsl
add
mov
jmp
imul
int
outsl
push
or
jne
add
cld
inc
mov
xor
mov
push
loope
dec
xchg
mov
lahf
stos
clc
int3
fiadds
fwait
and
bound
jl
test
pop
adc
jl
shrl
nop
imul
subb
push
sub
sarb
mov
ret
scas
mov
cli
sbb
sbb
aam
sub
repnz
xor
sarb
inc
fisubs
lods
mov
inc
sub
lret
jg
xchg
adc
les
pop
iret
dec
or
ret
sub
cmpsl
loopne
sbb
adc
stos
mov
repnz
in
pusha
stos
mov
cld
pop
dec
cmpsl
mov
cmp
sbb
jno
mov
push
aaa
shlb
lcall
in
movsb
adc
xor
or
ljmp
jae
mov
mov
xchg
rcr
lds
test
sbb
pop
cmp
jl
cmp
sbb
rolb
cmp
movl
lock
jg
inc
pop
hlt
xor
pushf
adc
sbb
test
push
sub
js
push
adc
push
adc
in
fs
adc
jne
inc
jo
nop
mov
adc
sub
adc
imul
lods
je
sarb
jbe
cmc
inc
sti
sti
xor
add
out
cmp
push
adc
test
adc
mov
cmp
aad
sbb
in
inc
mov
or
sub
outsb
xor
sbb
sbb
jbe
fmuls
fadd
mov
add
lock
int3
hlt
cmp
in
lock
jl
cmp
ja
mov
add
sub
sub
xor
push
rcrb
mov
dec
lock
jl
fs
insb
adcl
mov
int3
mov
fdiv
int3
iret
hlt
ljmp
pop
cmp
sahf
fwait
sbb
lock
or
or
or
dec
or
or
enter
add
adc
sbb
add
jmp
loopne
ret
rorl
fwait
mov
mov
lret
das
psrad
mov
pusha
mov
or
xchg
jmp
int3
addl
jmp
movsb
dec
insl
das
jge
xchg
inc
fwait
adc
push
or
push
bnd
xor
xchg
mov
add
or
mov
push
sarb
or
insb
rcrl
jae
pop
adcl
das
pop
out
dec
repz
inc
jb
sbbl
push
xchg
test
xchg
or
mov
or
sahf
je
aad
stos
shl
push
inc
pop
push
adc
mov
out
mov
mov
lock
or
or
or
sub
mov
push
js
push
pushf
mov
lods
lock
rolb
add
jne
sbb
jl
sbb
int3
sbb
arpl
mov
and
adc
fsubr
fisubrs
pop
sbb
ret
and
or
pop
xor
pop
jnp
scas
mov
inc
lock
cmp
sbb
jg,pt
cmc
inc
jb
adc
xor
shl
outsb
cwtl
movb
mov
je
mov
push
lods
adc
pop
testl
and
or
push
push
or
aad
iret
enter
fs
clc
fidivrs
sub
loop
add
lock
int3
add
dec
pop
mov
insb
cmpl
iret
pusha
cs
repnz
rclb
lock
int3
or
mov
mov
sbb
movsb
repnz
lods
sbb
lock
push
add
repnz
icebp
mov
add
lock
and
scas
dec
cmp
lret
mov
testl
das
clc
loop
in
lret
loopne
inc
xchg
dec
arpl
or
dec
sbb
xor
es
movsb
shrl
int
ret
cs
ss
int3
add
or
lock
int3
ljmp
rorb
mov
repnz
jbe
mov
add
repnz
adc
int3
loop
into
repnz
shlb
arpl
jle
pop
subl
adc
mov
incb
stc
lock
repnz
outsb
jp
pop
add
cmp
xchg
sbb
repnz
shlb
jb
push
int3
pop
andl
adc
repnz
repz
add
imul
sub
push
add
cmp
adc
mov
cmp
loop
adc
movsl
inc
gs
int3
icebp
add
bnd
sahf
adc
xor
pop
hlt
jmp
adc
mov
xor
in
pushf
mov
mulb
and
xor
addr16
mov
loopne
mov
loope
shll
adc
push
cmp
xlat
add
pushf
add
xor
jne
pop
add
rol
and
cmp
fsubrs
js
xorb
add
je
or
adc
xchg
or
test
test
orl
mov
or
int3
mov
pop
outsl
fmuls
cli
repnz
mov
inc
mov
fwait
or
ret
in
or
out
test
scas
scas
cmp
orl
hlt
aaa
roll
sbb
xorl
xchg
jmp
dec
adc
cwtl
or
push
nop
lock
in
mov
sahf
pushf
call
xor
jne
sbb
daa
dec
inc
dec
push
inc
je
and
pop
xor
stos
and
xlat
xor
out
das
sbb
xchg
xor
sahf
pop
jg
pop
adc
xor
jne
shlb
mov
add
mov
aas
outsb
inc
xor
mov
mov
xor
dec
int
subl
in
sti
xchg
shlb
xchg
xchg
cmp
mov
ret
rcll
dec
and
in
mov
xor
in
add
inc
xor
push
cmp
sub
and
xor
inc
iret
scas
dec
dec
addl
outsb
xchg
sbb
jno
or
push
pop
or
dec
int3
fdivl
xor
sti
stc
fistpll
daa
shll
cmc
xchg
mov
outsb
xor
xchg
adc
std
push
roll
mov
adc
xor
pop
lods
push
cmp
in
push
jne
dec
hlt
push
mov
enter
popf
adc
push
out
ret
sbb
adc
mov
movsb
lea
cmp
fidivl
xchg
and
inc
xor
scas
sbb
fcompl
jge
mov
icebp
nop
int
test
insl
mov
jle
test
adc
std
mov
xor
idivl
mov
jne
sub
inc
rcll
imul
push
xor
push
jbe
jg
dec
and
lahf
rolb
dec
lcall
adc
iret
addr16
arpl
je
icebp
dec
xor
rorl
arpl
sarl
es
xor
jbe
popl
cmp
jne
pop
outsl
sub
aam
sub
xor
xchg
xor
mov
mov
dec
icebp
xor
mov
testl
mov
shl
je
xor
adc
inc
cld
xchg
int
movsb
jl
aaa
pop
stc
pop
mov
or
xor
nop
iret
xor
push
jle
lahf
std
pop
out
cli
loope
sbb
je
es
xor
outsb
lea
fstl
pop
outsl
xchg
xor
pop
loop
lods
bound
insl
ret
fstpt
xor
out
lret
xor
loopne
push
shll
aam
fistl
jo
xor
push
mov
sub
pop
xchg
xor
mov
fldl
xchg
repnz
aaa
and
pcmpgtw
xorb
inc
inc
dec
adc
out
pop
or
add
adc
addr16
cmp
push
or
leave
dec
outsb
push
adc
pop
jg
jo
push
push
notl
in
popf
cmpsb
int3
add
lret
pop
add
adc
add
mov
seta
add
xchg
les
inc
fcoml
leave
sbb
mov
notl
aam
jb
roll
adc
jno
fwait
xor
rclb
pop
jecxz
adc
push
mov
pop
cld
mov
cld
mov
les
mov
pop
mov
std
push
mov
sbb
mov
adc
mov
mov
xchg
jae
push
xchg
add
sbb
or
or
mov
cld
add
push
insl
jno
adc
jo
add
add
pop
fistpll
add
or
lret
dec
mov
movsl
pextrw
adcl
pop
sbb
fnstenv
dec
sbb
xlat
cltd
lahf
test
faddp
sbb
rorl
stos
lods
pop
adc
add
jnp
pop
adc
sbb
int3
fdiv
lods
jg
adc
hlt
lock
test
out
test
enter
out
stc
jb
movsb
mov
adc
aam
adc
icebp
mov
sbb
call
add
mov
shr
js
out
fidivs
sbb
mov
shlb
sbb
cmpsb
add
sub
or
fsubs
loop
or
xchg
notb
cwtl
adc
icebp
imul
adc
xor
stc
sti
insb
jno
lods
test
divl
adc
lock
fstl
lcall
subb
repz
vprotb
rol
movsl
push
or
add
in
mov
std
scas
jecxz
int3
cld
adcb
sti
or
adc
mov
outsl
or
adc
vmovlps
and
push
sbb
or
in
pop
jb
pop
cmp
inc
jo
push
popl
mov
inc
mov
mov
mov
ss
sbb
push
fidivl
jbe
movb
fimuls
mov
ljmp
and
adc
add
lock
adc
mov
orl
cmp
or
hlt
adc
mov
aam
adc
add
adc
in
cmp
add
sbb
fdivrl
test
sub
movsb
fwait
jecxz
icebp
mov
shlb
inc
lock
movsl
mov
mov
int3
int3
cmpl
sarb
add
insb
lock
je
jl
adc
and
icebp
or
cld
dec
cld
mov
and
cmc
icebp
mov
loop
push
icebp
lods
jbe
lds
dec
inc
jnp
popa
pop
push
pushf
loope
ljmp
dec
repnz
rclb
cmp
cmpsb
repnz
in
mov
mov
iret
fcompl
aam
divl
popf
mov
sbb
add
add
lock
int3
add
jl
add
inc
add
or
sbb
sbb
int3
lock
aam
xor
scas
or
or
test
xor
inc
hlt
push
and
mov
movsl
pop
add
jmp
mov
add
out
adc
cmp
push
dec
les
push
test
cmc
adc
cmp
inc
mov
push
and
jl
or
add
shl
and
push
test
cmp
lea
movsb
cmc
adc
cmp
sbb
je
mov
push
push
test
jae
push
mov
in
test
cmp
lea
aam
adc
cmp
xchg
and
je
inc
lea
push
cmc
adc
cmp
cmp
adc
cmp
push
dec
aam
mov
movsb
in
mov
mov
in
or
add
cmp
sbb
in
ret
xor
adc
push
jl
mov
adc
xor
test
sbb
lea
adc
fcompl
push
mov
sbb
sbb
icebp
nop
sbb
pop
clc
icebp
loopne
push
mov
mov
movsb
movsb
in
mov
push
sbb
sub
and
ljmp
out
in
xor
pusha
add
sarb
adc
movsb
or
leave
in
and
jmp
adc
mov
adc
sahf
adc
leave
add
or
bound
dec
push
add
lret
inc
adc
xor
pusha
leave
adc
ret
dec
test
lea
loopne
adc
hlt
cmp
add
mov
leave
hlt
loop
adc
pop
adc
mov
rclb
clc
cmp
mov
adc
into
add
and
addr16
fs
adc
or
in
lret
rep
sarl
shr
subb
lock
jg
repz
lock
or
dec
adc
ror
scas
test
xchg
lds
lods
mov
icebp
stos
cmpsb
popf
cmp
shrl
xor
or
repz
out
cmpsl
scas
out
bound
mov
rol
lret
rclb
cmp
jne
mov
lock
pop
or
rol
ror
shrb
mov
rcr
mov
adc
in
lock
pop
adc
mov
lahf
shr
int
pop
or
jmp
jle
js
inc
mov
loope
pop
enter
mov
sti
loopne
push
icebp
push
movsb
mov
aad
pop
aad
lahf
decl
in
sti
loope
out
loope
in
scas
cld
sti
lock
out
push
jp
sub
adc
xor
mov
movsb
aaa
xor
fwait
rcl
in
mov
adc
cld
leave
data16
inc
mov
in
andl
test
divl
std
das
fimuls
adc
jae
pop
or
xor
cmpl
iret
mov
add
movsb
movsb
dec
or
xchg
sub
sub
aaa
dec
or
mov
movsl
push
sbb
aaa
cmp
or
adc
inc
sbb
or
movsl
jbe
and
enter
push
add
in
sbb
sub
repnz
rclb
cmc
mov
jae
icebp
loopne
push
jecxz
or
arpl
ss
adc
inc
mov
push
orl
sbb
stc
loope
aaa
adc
cmpsl
scas
ret
test
lret
aam
adcl
or
loopne
xor
cmp
mov
and
mov
push
enter
mov
mov
adc
in
xor
lcall
cld
add
lods
adc
push
adc
sbb
adc
repnz
je
mov
loop
pop
or
lock
nop
xor
ss
adc
xchg
ss
fwait
sbb
or
adc
je
adc
push
xor
mov
or
mov
rcll
mov
insb
and
sbb
jae
aam
fwait
popf
dec
or
icebp
test
jnp
add
jp
push
stc
adc
nop
dec
xor
xor
adc
mov
test
sbb
jmp
sti
adc
mov
or
pusha
or
popf
add
mov
lea
dec
or
pusha
bound
push
adc
push
mov
repz
into
cmp
in
adc
test
push
js
jae
mov
inc
and
adc
je
adc
adc
bound
pop
out
scas
popa
icebp
xor
cmp
or
outsl
jne
mov
loop
mov
roll
icebp
mov
mov
mov
add
ret
cmpsl
enter
enter
mov
push
sarb
rcll
mov
sti
enter
dec
push
lahf
das
push
mov
movsb
mov
pop
push
cmpsb
push
or
les
mov
xor
jl
hlt
sbb
add
dec
hlt
xor
in
movsb
clc
and
hlt
test
xchg
xor
mov
or
aad
roll
hlt
cmpl
or
imul
add
fiaddl
xlat
or
shl
prefetchwt1
adc
outsb
or
imul
xor
inc
pop
enter
pop
nop
cli
sub
popf
aas
sub
andb
lock
mov
arpl
stos
out
push
add
jno
call
mov
xor
icebp
xchg
nop
mov
mov
sbb
inc
les
mov
xchg
iret
add
dec
repz
rolb
outsb
adc
add
add
adc
int3
rorb
or
mov
adc
out
decl
cwtl
mov
pop
in
int3
adc
aad
es
stos
or
ret
shrl
mov
cmpsb
push
shll
push
shll
sbb
sbb
jg
xlat
lock
dec
or
adc
push
or
int3
aad
sub
dec
int
pusha
jmp
addb
xchg
fs
mov
inc
nop
ss
jp
xor
cmp
or
fcomps
int3
fadds
mov
fmull
lret
into
jnp
sbb
mov
lret
test
cmp
pop
or
leave
adc
mov
int3
in
push
pop
inc
push
push
aam
dec
enter
jns
jl
cmp
pop
mov
add
adc
xchg
cld
repz
outsb
js
lea
xor
fwait
pushf
fwait
or
int3
or
xchg
adc
test
adc
xchg
pop
push
mov
and
call
push
jge
pop
lods
int3
arpl
lcall
into
test
inc
test
jmp
fcmovne
pusha
rclb
dec
icebp
pop
jno
xchg
int3
xor
fucom
ficoms
ret
push
ss
mov
cmp
jb
xor
jo
push
xchg
shl
into
push
xor
xchg
push
mov
test
push
bound
lea
cmp
movl
xchg
push
insb
xchg
mov
xor
pop
jge
cmp
les
push
mov
push
cmc
pop
cmp
xchg
cmp
push
lock
jnp
sbb
repnz
pop
int3
adc
shrb
addl
sarl
lret
aaa
inc
pop
jge
test
cmpsl
push
loopne
orb
mov
mov
mov
mov
pop
cld
push
adc
push
fbstp
dec
cmpsb
push
call
push
andl
loop
lock
xor
rcrl
or
jecxz
push
out
push
lea
sbb
int3
sbb
movsb
das
sbb
pop
add
test
lods
shrb
mov
lock
xchg
test
pop
or
xchg
adcb
test
pusha
xchg
gs
dec
xchg
pusha
lret
movsb
adc
dec
mov
push
xchg
adc
xor
lods
leave
jnp
les
mov
or
jmp
xor
in
adc
mov
xor
in
push
xor
xor
ds
ds
xor
inc
pop
add
and
in
pop
lret
in
pop
enter
inc
rol
xor
mov
dec
or
subl
xor
cmpsb
and
adc
add
and
xchg
mov
pop
jmp
xchg
sti
add
aaa
jmp
mov
in
pop
cmp
mov
add
xchg
pop
dec
popf
outsb
sub
adc
fmuls
shll
push
jne
and
std
push
adc
in
adcb
int
lcall
add
es
negb
cli
das
mov
jb
inc
in
outsb
jmp
or
cmc
andb
mov
and
or
test
lahf
shlb
aas
jae
xchg
adc
xchg
mov
test
pop
icebp
repnz
xor
adc
or
fdivl
iret
in
cmp
mov
aad
cwtl
adc
pop
jl
pushf
jnp
cmp
add
mov
add
or
mov
repz
or
sbb
int
icebp
and
jp
movq
jne
xor
adc
lea
mov
or
add
xor
test
movsl
ds
daa
inc
repz
xchg
sbb
cmc
push
mov
adc
add
or
pop
sbb
jo
sub
lret
cmp
add
mov
mov
pop
mov
adc
mov
push
jne
lods
jbe
addb
jmp
xor
push
shll
loopne
sbb
or
mov
orb
out
inc
notl
lods
sbb
lcall
adc
add
adc
adc
adc
add
adc
jo
iret
test
push
in
sub
xor
add
pusha
jne
pop
inc
scas
jno
add
mov
mov
add
das
sbb
movsl
lret
cmpsb
adc
lods
hlt
ret
movsl
pop
lock
imul
inc
mov
sub
pop
repnz
out
ss
mov
mov
and
xlat
arpl
loope
pop
add
xchg
push
mov
jecxz
ss
jge
sbb
inc
in
std
sbb
add
pop
sbb
dec
push
test
inc
in
pop
jecxz
clc
mov
xlat
xchg
negl
test
sbb
lods
lds
scas
xor
movsl
lret
add
lods
adc
out
sbb
lods
fnsetpm(287
fcmovne
test
aam
xchg
cmp
popa
jecxz
in
lcall
stos
xchg
loope
shl
pop
and
xlat
jb
pop
add
in
cli
adc
jecxz
sbb
mov
loopne
out
mov
adc
test
test
cld
sar
rcrl
mov
stos
inc
push
and
movsl
and
rorb
popf
mov
sbb
les
sbb
jns
cmp
cmc
pop
outsl
lods
dec
mov
mov
icebp
loop
dec
loopne
in
dec
lods
bound
test
int3
lock
lds
loop
xchg
aaa
mov
iret
addb
loopne
dec
lods
mov
jecxz
or
or
lea
or
cmpb
je
es
jo
pusha
and
push
cmc
shll
push
xlat
sub
icebp
cmc
xlat
int
out
movsb
xchg
std
jecxz
dec
add
push
out
mov
repnz
or
ret
add
or
cmp
cld
mov
rcrl
scas
stos
insb
xor
loop
fcmovne
sbb
rorb
movsl
push
mov
out
jecxz
cld
or
mov
nop
repnz
int3
movb
mov
pushf
or
push
rclb
enter
jl
push
mov
fldcw
into
or
rorb
mov
xchg
add
in
int3
pop
cmpsl
push
mov
dec
in
and
jg
mov
repnz
sbb
sbb
ljmp
lock
mov
in
enter
ja
nop
or
ret
or
repnz
fcoml
repnz
push
cmp
add
add
clc
loopne
outsb
cli
or
scas
pop
sarl
aam
call
leave
into
adc
or
imul
dec
pop
movsb
scas
ret
mov
mov
je
ficoms
jl
mov
and
dec
dec
mov
fld
vmovdqa
lock
pop
mov
xchg
jmp
aam
mov
fsubl
mov
aad
push
add
pop
sub
or
adc
dec
sti
mov
cmp
sbb
adc
jg
pop
sbb
out
push
add
pushf
or
sbb
xor
movsl
loopne
or
sbb
pop
adc
xor
sub
icebp
add
inc
and
cld
loope
add
adc
mov
mov
sbb
jmp
in
adc
add
dec
push
aam
les
rorb
in
fcmovnbe
cmpps
loope
adc
ret
add
int
adc
test
bound
sti
addl
in
jae
jecxz
or
sbbb
adc
pop
rorl
repz
jle
xor
xor
sbb
adc
dec
sbb
add
add
test
es
cld
sbb
leave
scas
jne
add
mov
dec
or
lock
inc
mov
adc
sbb
test
mov
adcb
je
cld
cwtl
lock
push
cmpsb
mov
inc
add
outsl
in
stos
xor
idivl
sbb
add
dec
sarl
dec
add
cld
icebp
lods
cwtl
mov
mov
cwtl
cltd
in
cld
mov
ret
dec
xor
and
rclb
sub
lcall
ljmp
adc
shll
pop
mov
fsts
into
lods
pop
or
cwtl
int3
repnz
push
in
lods
jmp
lock
out
cmc
ret
jbe
leave
push
out
lods
xchg
mov
adc
popa
nop
push
xchg
clc
ljmp
ret
scas
ds
cli
xchg
enter
sbb
imul
sbb
rclb
aam
mov
jecxz
lahf
add
dec
pop
hlt
inc
pushf
jnp
in
push
xchg
lds
or
mov
inc
cwtl
shr
cmp
loopne
ljmp
stos
sbb
fists
cmp
adc
mov
loop
add
insl
mov
adc
loop
xchg
fwait
lock
sbb
fnstcw
in
movl
rcl
inc
cs
mov
adc
lret
test
jl
mov
leave
and
push
and
mov
scas
out
inc
cwtl
mov
pop
add
adc
mov
js
lock
mov
test
jae
fisttpl
ret
rcr
call
lock
sub
sub
nop
cmp
inc
in
add
mov
ret
lcall
mov
sbb
mov
aam
xlat
or
lock
adc
in
adcb
aam
fstpt
scas
push
aad
call
loop
pop
sub
add
outsb
loop
das
adc
pop
test
loopne
jo
cli
dec
lret
vpsrld
xchg
cld
mov
mov
mov
add
lret
not
adc
mov
cmp
leave
jae
jae
add
push
popf
mov
ret
sub
add
inc
mov
lods
rolb
rcrl
dec
dec
shlb
push
adc
int3
mov
fsubs
test
cmp
mov
mov
and
mov
popf
jo
cmp
lock
mov
adc
mov
inc
inc
mov
insl
dec
jo
cmpsl
mov
add
nop
and
mov
test
js
xor
lret
fsubrl
jecxz
and
ret
or
test
iret
ret
add
mov
push
jle
movsb
push
rol
into
rclb
popf
test
lods
mov
jne,pn
mov
mov
mov
call
stos
pusha
jo
in
adc
in
cli
lock
jmp
and
or
cmp
adc
in
in
jg
into
or
and
mov
xor
or
outsl
fs
outsb
in
cwtl
fs
cld
jns
rorl
and
pusha
dec
adc
xchg
inc
xchg
mov
fdivp
and
sti
in
jle
mov
addb
arpl
in
lods
pusha
mov
or
in
fldl
cmp
sbb
jp
mov
jl
pusha
adc
add
jae
mov
sar
sti
mov
inc
add
or
dec
lret
mov
lret
mov
scas
mov
lcall
pusha
mov
inc
cld
imul
mov
mov
and
pop
inc
xor
xchg
pop
negl
xchg
cld
sbb
jge
into
sbb
stos
dec
loopne
adc
jae
popa
adc
shl
aam
setg
adc
mov
mov
push
mov
shrb
inc
mov
test
loope
inc
push
cs
rcrl
aad
sbbb
adc
mov
push
hlt
out
imul
nop
ror
nop
or
inc
and
mov
pop
test
lods
adc
pop
dec
pop
inc
in
mov
push
xor
lds
or
sub
js
fcmove
pop
and
or
jbe
jns
test
incl
out
sbb
adc
xor
xlat
fld
pusha
push
mov
aad
ret
sbb
jmp
inc
jecxz
and
loope
adcl
stos
insb
cmp
loop
sub
add
ror
adc
das
adc
sub
mov
cli
or
dec
data16
adc
bound
scas
sbb
lods
pushf
scas
test
adc
ljmp
out
xor
rorb
sahf
inc
loopne
lea
dec
mov
ret
ret
sbb
push
lds
je
mov
fisubrs
mov
in
xor
mov
lods
cld
cwtl
or
mov
sbb
xchg
cmpsl
mov
pop
into
jp
popa
xchg
mov
mov
mov
sti
int3
lods
rclb
dec
loop
push
into
adc
lods
jecxz
out
ret
xchg
lret
insb
push
fdivr
mov
fildll
sbb
icebp
cld
push
xor
mov
push
testb
jmp
push
jo
fsub
in
wbinvd
in
nop
adcl
adc
add
or
xorb
or
rcrb
lods
xor
adc
test
lcall
and
lock
sub
mov
ret
mov
pop
cli
push
mov
mov
cmp
cwtl
fcompl
or
or
int
xchg
fstpt
mov
xchg
sbb
stos
lock
cmp
aam
enter
mov
testb
test
aam
fs
inc
mov
enter
mov
test
mov
enter
sbb
shl
add
push
dec
outsl
mov
sbb
xor
bound
repnz
test
sbb
fs
cli
lods
lods
call
mov
lret
out
jb
ret
jnp
jae
int3
mov
clc
leave
xor
out
scas
ret
xchg
lock
ret
or
adc
repz
jle
scas
rorb
dec
or
and
cmp
sbb
fstp
in
add
sbb
xchg
in
aam
hlt
clc
out
mov
or
sub
data16
adc
arpl
fwait
push
lods
mov
movsb
jo
mov
ljmp
lock
repz
paddb
lods
push
aad
sbb
xor
fwait
pusha
repnz
pop
mov
test
and
cltd
xacquire
out
insb
sahf
in
cmpsb
mov
jae
pop
out
mov
test
jb
cmp
dec
sbb
rorb
mov
in
xchg
mov
int3
inc
mov
mov
jp
add
add
ret
push
fimuls
lods
push
xor
sarl
pushf
or
sbb
xor
mov
and
je
ret
das
mov
or
dec
jnp
inc
adc
mov
add
dec
jo
decl
test
data16
imul
push
or
mov
pop
loop
fiaddl
adc
fbstp
ret
add
test
roll
add
or
mov
lahf
push
rcrb
add
cmp
xorb
ds
and
pusha
loop
test
sbbl
shr
jno
int3
sbb
push
into
fadd
jl
cmp
sbb
jg
lcall
mov
inc
mov
mov
add
mov
mov
push
lods
pop
cmp
je
mov
lret
fisubrs
repnz
leave
ret
mov
adc
mov
insl
push
icebp
ss
das
fstl
push
push
fnsave
mov
jb
add
mov
sahf
jmp
adc
lret
push
in
adc
or
push
test
adc
pop
or
outsb
ror
arpl
add
and
jg
enter
pop
lret
or
int3
aad
jb
imul
loop
mov
loopne
and
add
xorb
fiadds
into
mov
push
in
push
mov
scas
mov
fistpll
or
repnz
adc
int3
lods
jl,pt
push
mov
adc
loope
xor
mov
jp
jmp
sbb
adc
in
mov
shlb
mov
les
lock
adc
adc
cld
in
pop
leave
cmp
adc
ret
sbb
cwtl
add
inc
loopne
lods
aad
iret
cmpps
lret
sub
aad
mov
into
jle
aam
adc
or
sub
ja
and
mov
popa
xchg
add
pop
sbb
imul
jae
test
inc
rorb
add
or
fidivs
sbb
push
adc
in
adc
clc
rorb
movsb
shlb
jmp
mov
fwait
stos
fistps
jmp
cmpsl
lock
cmp
mov
ljmp
cli
les
and
jo
insb
out
rclb
scas
enter
mov
rcll
scas
lock
popl
xor
adc
in
adc
inc
xorl
mov
in
lahf
mov
pop
in
clc
enter
xchg
subb
pop
xor
loop
cmp
lock
not
cltd
out
repz
cltd
hlt
pop
adc
rclb
int
dec
lcall
outsl
add
mov
jecxz
loop
dec
aam
stos
pop
mov
and
add
mov
push
jle
daa
sbb
sbb
lea
int
aam
std
sbb
mov
pop
mov
and
cmp
sti
mov
dec
sbb
sbb
pop
pop
xor
in
jne
rcll
not
dec
scas
inc
test
push
pop
sub
and
mulb
lea
mov
sbb
fldenv
mov
lods
adc
mov
nop
mov
dec
mov
mov
sbb
jecxz
lcall
inc
jl
jbe
sub
cmp
fstps
push
sub
sub
loope
or
sahf
mov
pop
mov
mov
sbb
loopne
xchg
sbb
xchg
cmpsl
pop
mov
adcb
xchg
bound
sub
in
jecxz
std
lods
rorl
cmpsb
mov
pop
das
push
icebp
std
mov
cmpb
ja
dec
lea
sti
push
in
lods
int
lods
mov
pushf
outsl
lds
xor
stc
test
inc
sub
sub
push
stc
daa
movsb
sti
imul
cli
out
stos
divl
xor
shufps
pop
lds
cwtl
pop
cmc
add
mov
mov
ljmp
dec
test
pop
and
and
and
and
sti
jecxz
cli
lods
stc
xchg
clc
jns
cmp
shl
test
data16
adc
loope
add
loopne
xor
sub
sub
and
cmp
filds
pop
mov
inc
cmp
xor
cli
pop
stc
or
mov
jo
inc
xchg
sub
cwtl
cmc
lods
xorb
pop
dec
sub
sbb
inc
mov
add
outsl
inc
idivl
test
je
stc
mov
cs
sti
cmc
cli
mov
idivl
pop
sbb
out
cmpl
aas
xchg
push
xchg
das
dec
daa
pop
pop
sub
cmp
loop
sbb
sarl
dec
loopne
cmp
mov
push
popa
lds
test
push
add
roll
push
insl
sub
xor
jmp
mov
jae
sub
xchg
iret
sbb
xchg
aas
push
pop
xorb
ja
imul
lea
int
lods
pop
mov
sti
cli
dec
rolb
pop
lcall
cmp
out
mov
stos
mov
push
inc
sub
and
cmp
stc
mov
jo
push
clc
pop
xchg
out
sbb
xchg
adcb
xchg
pop
push
push
lea
idiv
in
ror
lods
mov
dec
imul
pop
in
dec
clc
lods
cmpsb
lea
ss
stc
cmc
rorl
inc
mov
sub
xor
xor
in
int
lods
jo
dec
lret
ds
in
cwtl
cmpsl
mov
add
lret
jno
popa
lods
push
mov
sub
jecxz
stos
test
pop
sub
in
loopne
add
jnp
push
mov
jmp
scas
in
movsb
int
lods
fwait
lea
imul
and
mov
mov
sbb
sti
in
xchg
movsb
sbb
pop
pop
ja
xor
add
in
std
int
lods
outsl
lea
insl
sub
push
sbb
jecxz
pop
adcb
push
clc
mov
mov
xchg
mov
sbb
test
xchg
xchg
add
and
inc
cmp
divb
popa
jge
sub
cmc
mov
xchg
mov
sub
pop
jae
in
dec
xchg
inc
addr16
popa
push
dec
sub
and
jecxz
mov
test
inc
ficomps
loop
sahf
mov
sbb
in
add
push
addb
or
cli
xor
xchg
dec
lea
inc
in
fmul
aam
mov
pop
es
std
int3
in
int
lods
jg
jns
daa
jae
cld
push
dec
filds
pop
jp
push
sub
and
repnz
mov
stos
mov
cmp
jmp
xchg
push
sub
and
push
outsb
sub
inc
cmp
clc
mov
stos
mov
push
aaa
movsb
call
ljmp
sbb
neg
xchg
sbb
nop
jecxz
clc
inc
push
cmpsl
popa
mov
pop
push
mov
cmp
dec
lret
inc
repz
mov
mov
inc
test
pop
lds
mov
xchg
sbb
lahf
xorl
mov
test
push
cmc
pop
out
adc
cmpsl
xchg
adcl
mov
mov
popa
jb
dec
inc
cmp
sbb
shrb
sub
inc
and
aaa
cmp
sti
cld
lret
cli
ret
stc
mov
pop
adc
or
or
push
dec
jno
repz
pushf
fwait
insl
push
jl
pop
push
iret
stc
les
inc
mov
lcall
dec
xlat
inc
mov
mov
neg
add
mov
sbb
in
xchg
hlt
sbb
lea
cmc
or
repnz
rolb
jp
jle
jg
dec
xchg
jecxz
in
mov
mov
loop
dec
out
rcrl
xchg
mov
sti
loope
cli
mov
mov
jp
inc
cmc
pop
pop
adc
lret
xchg
lds
sub
pop
js
push
sub
and
mov
test
pusha
mov
sti
in
cli
mov
imulb
pop
out
cld
out
incb
sub
inc
sub
iret
lcall
sbb
es
in
jp
insl
ss
or
jle
popf
es
pop
push
xchg
sub
clc
sbb
frstor
push
inc
inc
cmp
and
dec
cmpsb
jae
gs
push
push
in
cmc
mov
movsb
mov
aaa
dec
xchg
mov
add
xlat
lcall
daa
add
jecxz
sbb
sbb
xchg
adcb
xchg
pusha
push
pop
xchg
repnz
aad
lods
out
pop
jg
dec
xchg
push
push
sub
xchg
cwtl
popa
jo
dec
les
jmp
pop
xchg
rcrb
mov
pop
ror
jecxz
leave
add
ss
mov
scas
push
and
add
std
sbb
mov
ljmp
pop
push
push
inc
xchg
jle
sub
push
push
inc
es
jl
mov
lcall
mov
mov
mov
clc
adc
leave
dec
mov
mov
sbb
pop
cmpb
data16
xchg
je
and
call
mov
jne
and
out
jecxz
push
xchg
push
mov
and
loope
loopne
mov
xchg
xchg
decb
sub
adc
std
pop
cli
lcall
fisttpl
push
cli
enter
popf
pop
jb
int
mov
out
cmp
pusha
or
fs
std
push
pop
cld
dec
adc
aas
push
loopne
mov
inc
adc
adc
jecxz
mov
and
jl
out
loop
push
mov
cwtl
jle
and
iret
filds
mov
mul
mov
sti
xchg
ljmp
clc
dec
sub
fs
cld
cli
jo
fs
inc
pusha
or
divb
push
jle
pop
sub
daa
out
les
cwtl
pop
insb
push
dec
lock
xor
sub
sub
cmp
sti
addr16
sub
in
sahf
dec
sbb
lea
jecxz
in
mov
es
lock
xor
and
sti
loope
cli
sub
jbe
dec
sub
sub
sti
std
cmpsl
cli
mov
outsl
pop
cld
hlt
stos
xchg
leave
sbb
lret
xchg
push
push
cli
out
mov
sbb
stc
notb
dec
negl
clc
aam
imul
scas
sub
sub
and
and
cmp
stc
ja
pop
lock
ror
decl
mov
jecxz
mov
imul
stc
nop
clc
pop
divl
push
psraw
pop
mov
mov
in
imul
in
sbb
subb
mov
xchg
leave
gs
xchg
xor
and
adcb
andl
pop
sbb
sti
seta
push
adc
cmpsl
in
addr16
mov
stc
arpl
inc
dec
push
mov
cltd
in
icebp
negb
mov
sbb
inc
push
frstor
mov
inc
or
in
xor
pop
jecxz
loop
mov
lea
or
rep
mov
out
sti
loopne
cli
fucomip
xor
gs
aas
sub
mov
stos
lods
test
xor
inc
dec
test
pop
xchg
push
dec
sub
sbb
cmc
mov
dec
mov
pop
into
stc
mov
jo
or
in
sarl
movb
cli
inc
testb
pop
dec
pop
push
sar
dec
mov
push
jnp
lock
lret
in
fidivrl
sti
testl
and
div
das
xor
aas
clc
push
sti
psubd
stc
repz
push
inc
add
scas
jecxz
push
rclb
aas
inc
xchg
adc
icebp
xchg
sar
leave
push
shlb
xor
loope
andb
or
loopne
je
jno
popa
notl
inc
mov
mov
andl
and
dec
dec
dec
or
lds
mov
mov
aam
scas
xorb
fcomps
stc
cld
mov
mov
roll
mov
cmpsb
loopne
das
and
clc
int
insb
mov
mov
cmpsl
testb
icebp
dec
aad
lret
int
lods
movsl
lea
das
sub
push
inc
out
lret
loope
dec
xchg
repz
inc
lock
xor
decb
or
hlt
in
mov
or
jecxz
xchg
jb
loopne
fistps
fdivr
mov
mov
adc
clc
popa
lods
pop
lock
aaa
pushf
fadd
jecxz
dec
push
loop
sbb
mov
mov
fistps
push
lea
pop
data16
test
stc
in
insb
in
mov
xor
xor
ss
ljmp
cmp
divb
xchg
mov
adc
adc
in
mov
das
int3
mov
loop
loope
fisttps
nop
jge
pop
adc
sti
ret
dec
aad
mov
mov
aam
push
clc
jmp
inc
das
pop
sbb
es
cmc
or
in
in
and
xor
dec
or
push
push
lock
mov
insb
sub
pop
std
iret
mov
mov
rcll
in
pop
out
cmp
mov
ds
and
ss
scas
mov
lds
das
or
mov
mov
std
clc
push
xchg
or
jne
ljmp
xor
pop
push
mov
cli
out
adcb
inc
mov
push
sub
cmp
clc
mov
iret
mov
jns
dec
fcompl
or
scas
in
add
fwait
sub
sub
bound
mov
add
shl
movsl
xchg
sbb
nop
sahf
jecxz
xchg
fcomps
xor
sub
xchg
push
push
inc
cs
xchg
leave
push
rorb
insl
es
aas
adc
stos
cli
jmp
sar
xlat
out
test
popa
popf
dec
mov
mov
mov
cltd
sub
sti
sti
mov
mov
dec
leave
inc
fcomps
push
jp
test
cmp
jle
sbb
ficompl
gs
sbb
dec
lcall
nop
data16
leave
jns
aam
movsb
push
lods
mov
fisttps
pop
jle
jae
pop
xchg
sub
in
mov
mov
je
incl
popf
aad
cmp
test
ds
mov
scas
cmpb
sub
and
mov
and
sti
std
clc
cli
vpminub
sbb
lock
pop
ss
stos
xchg
sbbl
xor
and
movsb
mov
xchg
mov
fs
mov
call
sbb
out
cld
push
test
or
call
add
xchg
push
les
sbb
dec
mov
cld
push
sti
mov
mov
pushf
mov
inc
pop
or
mov
ljmp
and
cmp
push
mov
or
rorl
jecxz
pop
mov
and
cmp
sahf
add
push
js
push
enter
mov
inc
cmp
adc
rclb
dec
pop
mov
sbb
loope
in
push
int
lods
pop
pop
test
mov
xchg
xor
insb
sub
bound
sahf
adc
and
ds
popa
and
mov
movsb
push
xor
je
fadds
clc
push
fdivrp
xlat
adc
std
pop
dec
in
cld
shr
nop
jle
and
inc
sub
sti
cli
lds
stc
mov
dec
jno
mov
in
lea
mov
notl
clc
aaa
scas
popfw
leave
outsb
xor
push
push
inc
jl
adc
rol
in
adc
loop
sahf
fs
loopne
std
test
and
sbb
cli
les
dec
mov
xchg
leave
mov
popf
lret
mov
lea
andps
adc
loopne
and
add
cltd
stc
cmp
inc
mov
decl
icebp
cmpl
inc
xchg
lret
sti
cli
hlt
out
in
sahf
test
in
push
xchg
pop
clc
mov
fisubl
or
cmp
enter
stc
or
add
sbb
lock
and
lret
sahf
loopne
cld
in
jo
hlt
lea
sub
fsubp
jp
mov
nop
adc
inc
mov
push
subb
in
lea
xor
jl
js
je
xchg
call
cwtl
add
jmp
std
or
mov
mov
hlt
inc
daa
push
pop
and
or
mov
stos
mov
in
nop
xchg
pop
push
jle
ja
push
stos
pop
movsb
sbb
add
aam
mov
push
xchg
cld
jb
das
sub
daa
pop
sti
mov
lret
out
in
lea
imul
mov
sub
or
sbb
adc
or
addb
pop
sbb
cmp
and
sahf
mov
and
imul
push
sbb
loope
cli
loopne
cld
clc
clc
out
hlt
jae
sarl
out
inc
repz
cld
pop
mov
pop
in
push
xchg
and
cli
push
mov
out
int
loopne
pop
jl
pop
idivb
or
sahf
add
imul
dec
rolb
mov
in
dec
xchg
push
loop
clc
xchg
stc
inc
out
repnz
loopne
loopne
fcoms
push
jae
shr
or
push
or
popf
pop
popa
push
sar
mov
adc
hlt
mov
int3
clc
jb
rcrb
jbe
popa
adc
lret
lock
push
jp
add
xchg
repnz
pop
js
repnz
jo
sub
or
pop
lods
sbb
bound
repz
fs
stos
xchg
mov
xchg
adcb
jo
and
mulb
xchg
and
sahf
jb
cwtl
sbb
imul
jno
das
out
mov
addr16
pop
add
dec
xor
xor
insl
xchg
fs
addl
push
movsb
inc
sbb
negb
and
sahf
xor
out
out
dec
lods
and
mov
xchg
call
inc
andb
int3
js
mov
out
mov
ss
sbb
ret
dec
test
nop
cwtl
sbb
lock
in
insb
repz
sbb
mov
and
ss
sub
jb
ror
call
jb
call
outsb
mulb
adc
aas
mov
outsl
xor
xchg
dec
shrb
jae
subb
les
fwait
loop
hlt
and
adc
in
dec
push
in
push
out
add
loopne
mov
loop
or
push
fcmovne
mov
inc
xchg
clc
stc
int3
dec
enter
rorb
shr
aam
or
lods
movsb
dec
mov
in
rclb
fsubs
mov
lods
cmp
cmp
push
hlt
insl
sub
orl
push
or
inc
push
dec
aam
stos
sub
adc
cmp
sti
cmc
mov
mov
mov
cmp
sbb
sahf
fdivr
push
jl
or
mov
shrb
out
adc
xchg
subb
dec
ficoml
loope
aad
sahf
and
mov
outsb
out
jp
and
push
dec
mov
or
repz
inc
aaa
and
cmpb
aad
cli
imul
in
cmc
xor
mov
orl
clc
ljmp
sti
jecxz
cli
push
out
cli
repz
jg
ljmp
out
bound
jl
les
push
loopne
adc
add
adc
xor
lret
xor
ficoms
add
inc
cmp
inc
adc
decb
sub
stc
in
clc
jae
add
cs
test
fimuls
paddb
cmp
mov
subb
dec
and
fimuls
inc
xor
add
cli
lea
sar
mov
and
stc
sbb
pop
clc
adc
or
jno
jge
out
notl
mov
pop
mov
loope
loopne
das
jne
mov
cld
test
into
sti
imul
stc
and
jp
mov
adc
loope
cli
fs
sahf
hlt
add
lds
mov
incb
dec
cwtl
inc
outsb
mov
mov
mov
jns
push
inc
inc
push
mov
mov
mov
mov
mov
lds
out
in
adc
mov
sbb
lret
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cwtl
cmp
cmp
cmp
mov
jnp
cwtl
sti
jecxz
jbe
add
pop
mov
mov
jmp
push
mov
int
mov
arpl
lods
xor
fistps
cli
fadds
popf
xor
cld
std
dec
pop
int
lods
add
jle
clc
adc
mov
pop
mov
sbb
inc
in
or
movsb
cld
dec
adc
imul
stos
add
push
rclb
cwtl
call
or
or
push
les
xlat
pop
mov
cs
xchg
cmp
or
scas
sbb
or
lock
ret
xor
enter
and
stos
cmp
mov
movsb
sahf
xchg
push
popf
sbbb
pushf
mov
push
movsb
inc
inc
inc
inc
pop
inc
xor
shrl
or
pop
push
mov
out
cld
and
in
xchg
test
jg
cmp
xchg
data16
inc
mov
leave
mov
mov
int3
outsb
and
bound
shlb
in
dec
shll
cmp
cmp
cmp
pop
test
in
xor
add
mov
xchg
sub
cs
iret
xchg
enter
fistl
lods
xchg
movsl
sahf
mov
mov
cmp
xchg
jecxz
aam
test
nop
repnz
adc
adc
das
xor
or
stc
stos
out
test
ds
loopne
cli
inc
stc
pop
out
add
pop
lock
jmp
mov
in
pusha
push
adc
clc
jmp
test
cmp
jle
cmpsb
inc
inc
cmp
test
mov
adc
dec
iret
aad
mov
fwait
jl
test
pop
push
adc
or
cmpsl
les
sbb
clc
out
negb
mov
gs
aam
or
cmc
add
inc
addb
call
mov
call
cs
lock
sbb
lahf
imul
cli
push
xchg
xchg
jp
ficompl
int
push
ret
dec
pushf
in
data16
cmc
rorb
push
sbb
iret
pop
cwtl
repnz
jg
je
adc
pop
movsl
lds
and
add
cli
icebp
fs
sub
mov
out
scas
stc
add
rcll
mov
je
insb
out
sbb
adc
jle
sbb
xchg
xor
cld
je
push
test
inc
lds
pop
push
rclb
sub
sub
mov
cmp
inc
adc
adc
add
sbb
adc
mov
fs
mov
dec
hlt
mov
enter
rclb
xchg
add
mov
pop
push
nop
xchg
mov
movsb
jp
scas
cmp
outsb
mov
fwait
repz
sub
repnz
adc
lret
into
fcomp
dec
push
mul
xorb
xchg
push
out
sbb
ja
add
es
adc
add
js
or
and
psubd
adc
and
aaa
cli
or
imul
inc
ficompl
in
and
cmp
mov
adcb
fdivp
rcrb
push
repnz
sbb
adc
xor
in
out
rol
xchg
daa
push
pavgw
in
ror
fcoms
xor
loop
dec
push
push
lock
inc
pop
adc
pop
push
dec
dec
repz
mov
movsb
js
inc
xor
std
mov
adc
adc
add
out
mov
jnp
out
adc
sub
shll
sub
sub
xchg
push
lock
int
scas
jp
sbb
xchg
fiadds
cmp
popf
adc
mov
pop
popaw
push
push
das
xchg
lcall
ret
sarl
push
sub
mov
sti
jecxz
lock
adc
add
ror
out
mov
sbb
mov
dec
nop
sub
scas
inc
test
std
jmp
dec
andl
pop
je
adc
or
and
and
push
cmp
xor
inc
hlt
fisubrl
or
sbb
ret
mov
or
jo
and
push
xchg
fisttpl
leave
mov
and
in
fdivrp
mov
inc
cmc
pop
out
pop
roll
jae
and
cmp
cmp
pop
clc
adc
pop
dec
or
or
cmp
sti
loopne
cli
data16
push
clc
inc
call
mov
movsb
mov
jp
test
sub
jbe
in
and
jno
bound
shrb
add
adc
adc
xor
jecxz
adc
xor
jno
jge
pop
ljmp
adc
mov
mov
sub
imul
push
mov
push
sbb
popf
stc
xchg
out
stos
and
inc
xorb
fcompl
add
mov
sub
loope
call
push
es
lock
xchg
xchg
movsb
cmpl
nop
cmp
sub
faddl
cmp
fs
push
xchg
jl
js
je
push
xor
lock
push
pop
xchg
pop
xchg
push
xorl
adc
sti
jo
insb
test
add
je
push
and
inc
cmp
pop
cmp
push
cmp
cmp
sub
ss
or
push
insl
xor
push
test
jb
ficoml
pop
outsl
cwtl
icebp
and
int
mov
xchg
idivb
dec
fsubrl
push
ljmp
xchg
bound
mov
and
xor
out
repz
cmc
or
add
sub
sub
loop
ret
sbb
leave
je
movsb
rolb
mov
hlt
fs
out
outsb
dec
popa
inc
jae
std
adc
pop
push
pop
ds
scas
cld
lahf
sub
in
push
out
sti
rol
or
fxch
push
pushl
xchg
cmc
stc
lret
lahf
jno
fs
idiv
sahf
cmp
and
mov
push
and
xchg
xor
fadds
sti
sbb
sahf
xlat
push
sbb
dec
mov
loope
lods
add
fistpll
negl
je
stos
jl
out
negb
sub
xchg
bound
and
inc
mov
push
sbb
mov
ss
shr
out
loopne
in
jae
orl
in
shrb
jae
shrl
inc
adc
leave
push
xchg
jb
shlb
out
push
fnstenv
sahf
stos
out
adc
fs
xchg
decl
mov
mov
and
ljmp
cwtl
adc
in
test
add
jecxz
nop
scas
mov
dec
sarl
push
adc
add
in
popf
push
cwtl
xor
pop
add
lods
xor
mov
out
push
xor
pop
mov
pushf
mov
mov
insl
or
repnz
jmp
lods
push
nop
dec
xchg
sbb
pop
adc
adc
mov
sub
mov
and
jo
inc
push
inc
sub
add
mov
call
fcoml
mov
outsb
and
inc
mov
xor
pusha
call
jae
adc
aam
add
out
sbb
test
incb
or
imul
sub
mov
and
cli
xorb
icebp
mov
cmpsl
xchg
pop
push
inc
adc
clc
mov
lock
repnz
inc
nop
or
inc
fildl
mov
add
out
mov
repnz
ret
pop
xor
mov
or
jnp
cmp
lods
push
out
push
cld
mov
mov
inc
loope
xchg
dec
je
push
shrb
sub
push
jmp
test
stc
out
sub
or
clc
in
jae
pop
pop
shll
pushf
or
pusha
inc
inc
lret
das
cmp
mov
pushf
push
in
adc
loop
sbbl
incb
mov
cmp
nop
xchg
mov
cmp
jo
insb
or
testb
outsl
push
dec
insb
xchg
inc
repz
push
cmp
cmp
mov
cmp
or
outsb
cltd
call
pop
sti
loope
mov
insb
sbb
xchg
ret
add
sbb
data16
mov
add
and
pushf
mov
fdiv
mov
fstl
ljmp
fsubr
loopne
shll
inc
pop
jmp
pop
and
xchg
inc
push
adc
push
rcll
xchg
xchg
call
mov
cli
call
test
pop
out
mov
sub
stc
sub
aaa
movsb
and
enter
or
popa
enter
fs
adc
pushf
jne
adc
pop
inc
ss
and
clc
les
into
xchg
push
mov
jbe
adc
ja
mov
repz
data16
loopne
cli
mov
nop
dec
adc
sub
movsl
lea
or
rorl
mov
push
pop
add
popa
mov
dec
mov
jae
ficoms
sti
cli
add
shl
add
lret
mov
pop
push
in
mov
xorl
loop
jg
int3
lods
xor
leave
loop
fs
movsb
sti
jns
adc
and
jg
sub
push
push
jbe
les
cmc
test
bound
or
cs
sahf
jne
loop
pop
push
jl
js
je
adc
pop
push
stos
in
mov
mov
pushf
fadds
inc
pop
add
mov
sbb
xchg
into
xorb
adcb
cld
lods
xorb
fcomip
addr16
jp
aaa
push
or
test
arpl
lret
cmpsb
sbb
lods
mov
into
mov
ret
xor
test
adc
mov
stc
aaa
loope
and
jle
fisubs
xor
add
cld
push
pop
sti
sbb
mov
inc
outsl
jp
xor
outsb
pop
insb
push
push
inc
enter
and
lock
loop
test
fsubr
out
xor
or
dec
push
sti
lea
mov
sbb
call
hlt
pop
add
fcomip
cli
in
mov
insl
std
enter
fldenv
in
dec
insl
sub
leave
and
xchg
inc
lret
xchg
pop
clc
sub
cmc
jae
pop
and
imul
and
push
sub
imul
push
jp
sbb
dec
xchg
rolb
pop
pop
adcb
sub
ret
popa
icebp
sub
shll
loop
loope
in
ret
je
cmc
std
adc
cld
add
cmp
not
cmp
push
xchg
add
adc
and
and
cmp
pusha
fs
loop
in
cmp
mov
and
mov
fdivrl
mov
cwtl
or
add
mov
add
loop
loopne
lods
lret
cmpsl
jae
test
ljmp
fwait
jb
inc
mov
sub
sti
sti
cmpsl
in
fwait
xor
mov
xchg
cli
pop
pop
xor
les
stc
push
in
lcall
repz
test
leave
lahf
insl
mov
jb
jge
xor
loopne
push
dec
jnp
xchg
mov
popf
dec
std
je
jecxz
clc
cmpsl
out
repz
in
push
push
loope
ja
andb
test
into
xchg
push
dec
sub
or
dec
jp
ret
adc
jl
out
rclb
mov
std
cmp
sbb
xchg
mov
push
mov
add
cmpsb
and
jmp
or
adc
mov
lret
sbb
mov
clc
sub
aad
jge
int3
movsb
adc
testl
push
jle
loopne
fcomip
push
std
mov
push
inc
stos
xchg
js
push
pop
sbb
pop
nop
jb
sbb
adcb
push
cmp
adc
test
xchg
in
ficoml
adc
dec
testl
mov
jge
shl
or
fnsave
or
lcall
pop
xchg
insb
xor
test
sub
mov
insl
fcoms
in
or
test
in
loop
jae
mov
js
jg
pop
loopne
data16
mov
xchg
orb
cld
jmp
lock
sub
popf
adc
xchg
push
cs
push
out
lock
pop
pop
aad
daa
lret
or
inc
loop
mov
dec
mov
popf
repz
movsl
add
adc
jmp
fwait
sbbb
add
cmp
and
hlt
push
sahf
or
push
iret
xchg
xor
notb
cmp
push
inc
push
xchg
js
add
cmp
test
loopne
and
jne
shl
cli
mov
movsb
divl
neg
inc
adc
mov
test
mov
jnp
cli
xchg
stc
xchg
out
enter
enter
cwtl
adc
nop
sub
loopne
jg
mov
xor
pop
sub
push
fisubl
mov
sub
dec
pop
enter
jecxz
xchg
lock
sbb
testl
cmpsb
push
xor
fidivrl
adc
mov
xchg
test
outsb
mov
lret
inc
andb
or
imul
mov
pushf
and
fdivs
push
int3
adc
cmc
pop
fidivrl
fcomp
inc
xchg
xor
fcmovnb
lods
or
out
push
push
rclb
fstps
xchg
dec
cmp
inc
cmp
jnp
push
pushf
jo
int3
in
sti
xchg
cli
dec
mov
and
mov
es
cmp
in
pop
imulb
inc
or
jae
sti
out
pop
pop
js
jno
in
xor
cmp
in
jb
bound
in
fsubl
pushf
jo
or
and
out
mov
push
call
loop
lret
fdivl
hlt
push
aaa
mov
sarl
mov
mov
cmp
jl
push
xchg
xchg
xor
pop
mov
xor
sub
pop
loopne
idiv
sti
in
dec
shrl
cmc
or
cltd
aam
adc
mov
out
add
push
mov
mov
incl
mov
xchg
mov
jle
and
mov
adc
stos
loopne
and
leave
and
adc
dec
leave
sahf
push
pop
pop
ror
loopne
pop
lock
mov
ffreep
xor
dec
sub
and
in
xchg
push
xor
add
testb
or
lahf
mov
fmull
and
fmull
mov
or
rcl
clc
sti
scas
adcb
pop
adc
cli
mov
mov
adc
mov
mov
mov
push
test
and
mov
add
xchg
out
dec
pop
cli
fildl
int3
xchg
mull
call
sbb
fstpt
adc
pop
icebp
pop
adc
mov
es
cmp
shll
sub
repnz
dec
sbb
js
lcall
cld
xchg
inc
aam
push
adc
loope
sbbb
nop
popf
sub
test
jne
jb
xchg
lea
pop
dec
out
mov
inc
pop
ficoml
lahf
and
push
mov
and
and
sbb
push
and
pop
ja
pop
push
aaa
lea
leave
jbe
fisubl
cmp
pusha
fiaddl
std
or
out
lret
nop
xchg
into
adcb
in
inc
dec
push
push
js
call
out
push
bswap
in
sub
xlat
nop
xor
push
aam
inc
push
push
sub
cmp
shr
mov
or
pop
repz
clc
xor
jmp
je
sub
lds
jns
lret
dec
stos
les
mov
popf
sub
in
push
xchg
cld
rcrb
jne
in
stc
fidivs
ds
dec
divb
mov
jno
pop
cmp
cwtl
in
push
adc
lea
push
push
cmp
or
movsb
pushf
xchg
sahf
mov
and
and
sbb
ror
mov
xor
add
pop
inc
rclb
jno
xchg
int3
sub
repz
mov
xchg
jg
addr16
testl
xchg
adc
fistpll
mov
js
or
push
mov
movsb
in
rcrb
xchg
adc
faddl
xchg
jl
pop
cmc
loop
leave
cmpsl
rep
lcall
data16
andb
adc
push
push
or
decl
inc
out
mov
adc
adcb
pop
add
cmp
inc
jo
push
xor
pop
in
sbb
in
dec
stos
and
mov
xchg
push
mov
ret
cmc
jae
inc
repz
pop
movsl
pop
xor
mov
sbb
lock
cmp
test
cmc
loopne
cld
in
repz
cmpsb
cli
mov
push
inc
lahf
testb
mov
loop
jbe
sbb
add
lock
rclb
icebp
loop
test
loope
jge
cs
scas
in
sbbb
roll
jmp
xchg
push
cmp
popf
std
xchg
mov
adc
adc
sub
or
mov
cli
push
jl
dec
or
mov
add
adc
xorl
adc
adc
call
les
and
or
cli
loope
pop
fidivrs
fiaddl
dec
pusha
xchg
lods
mov
pop
pop
repz
mov
jg
lea
outsl
add
shl
aas
nop
and
cli
adc
enter
cmpl
sbb
xchg
xor
lahf
push
cs
mov
xchg
adc
cmp
mov
lret
or
aas
arpl
mov
xchg
sbbl
or
mov
divb
push
xchg
jmp
bswap
sbb
mov
in
loop
mov
adc
xor
fsub
sub
out
cli
adc
inc
add
push
and
icebp
imul
inc
rcl
jecxz
pusha
sub
jmp
sbb
xor
xchg
add
out
jp
ljmp
and
mov
push
rcr
or
push
scas
mov
inc
or
xlat
adcb
inc
xchg
stc
ret
nop
inc
lods
xor
fdivp
xlat
mov
arpl
jbe
dec
hlt
xor
negb
mov
out
nop
and
hlt
mov
cmpsb
mov
and
mov
push
gs
nop
xchg
mov
nop
aaa
call
adc
xor
fdivr
int3
mov
fisubrs
lcall
mov
xchg
test
fnsave
dec
loop
je
sbb
js
mov
fistpl
in
loopne
fcomps
fcompl
jmp
jae
sbb
out
cmp
mov
hlt
sbb
lock
mov
cld
pop
mov
mov
jecxz
orb
orb
cmp
cli
mov
stc
fnstcw
out
cld
and
fsubrl
mov
sub
xor
mov
push
mov
mov
push
fsubrl
leave
sub
mov
dec
jne
sub
leave
test
scas
jle
dec
leave
fs
and
sbb
push
std
stc
roll
hlt
lock
push
into
je
movd
mov
xchg
xchg
mov
cmpsl
int3
out
mov
fidivrs
xor
ljmp
sub
loop
popl
cld
cmp
out
sbb
popf
mov
sbb
test
out
loop
test
pop
add
adc
stc
sahf
add
jle
ja
rcrb
aam
hlt
jmp
xor
pop
loop
mov
lds
adc
int3
mov
fdivrs
sahf
in
push
inc
push
dec
mov
adc
cmp
cmc
pop
dec
sub
mov
add
loop
cmp
in
rorl
push
jo
jp
cwtl
mov
lret
fs
mov
or
sar
inc
ror
aam
es
lds
mov
adc
pop
fimuls
in
cmp
and
cld
in
imul
pop
pop
xchg
pop
mov
out
jae
adc
or
cmc
pop
loopne
popa
push
test
sub
in
push
ds
pop
in
xchg
enter
sub
movsb
or
in
in
push
sar
xor
push
fisubrl
nop
fdivl
loop
cwtl
push
clc
lret
or
push
loopne
repz
out
adc
jae
ret
ret
mov
pusha
push
imul
jae
xor
pop
xchg
dec
repz
arpl
xchg
jne
inc
jnp
hlt
inc
cmp
mov
xor
add
out
inc
gs
cmpsl
outsb
adc
mov
mov
int3
test
out
mov
jl
jge
js
push
fs
mov
fnsave
shrb
fsub
aam
fisubrl
cmc
inc
out
jo
ret
push
ss
and
push
je
push
push
into
dec
cmpsl
mov
push
sub
mov
cmp
push
insb
inc
xchg
shll
cmp
cmp
sub
and
and
or
cmp
or
jl
negb
lock
mov
call
sub
hlt
jns
outsb
cs
or
xchg
in
add
pop
sbb
shl
xchg
js
add
push
adc
cli
mull
sub
addb
xlat
xor
iret
clc
leave
dec
roll
mov
jae
in
xchg
cmpsb
mov
push
push
stos
cmc
cmp
cmc
mov
mov
sub
adc
add
mov
jecxz
jg
mov
push
in
je
into
loop
ficoml
aad
fdivp
jecxz
dec
popl
pop
ja
push
in
and
jmp
test
jno
and
call
push
rclb
adc
jp
mov
outsl
or
fdivl
fsts
cmp
insl
mov
sbb
xchg
push
pmulhuw
loopne
fcoms
insl
xchg
sub
les
mov
shl
aad
push
out
inc
outsl
push
pop
xchg
andb
call
and
out
pop
fdivl
into
sahf
mov
bound
fmul
pmulhuw
jo
jne
mov
xchg
pop
repz
adc
push
cmpsb
mov
loop
in
stos
fdivl
sbb
pop
push
in
xor
idivl
popf
mov
sahf
and
jb
inc
and
out
fdivp
repnz
jle
shlb
dec
mov
dec
sub
and
and
jo
sar
adc
hlt
and
xchg
push
clc
js
adc
fiaddl
pop
sbb
imul
push
jbe
idivb
into
jne
mov
sub
enter
nop
inc
nop
jo
stos
dec
and
sub
pusha
dec
movups
subb
jno
sahf
out
cmp
movsb
in
dec
jae
lret
sahf
mov
cmpl
or
stos
inc
clc
leave
mov
sub
xchg
push
ss
push
or
xor
cld
test
dec
pusha
jle
inc
sahf
inc
xchg
pusha
jmp
adc
push
popf
sub
out
inc
in
xorb
out
in
jae
cld
cmpsb
or
sbb
jne
adc
in
cwtl
andl
mov
and
in
notb
clc
lock
xchg
clc
popa
jecxz
pop
xchg
jmp
adc
insb
adc
and
push
mov
mov
cld
out
lods
and
xchg
ljmp
inc
dec
inc
fsubrl
push
xchg
in
sti
decb
loope
lea
dec
stos
sub
outsb
or
clc
in
repz
or
fsubp
pop
pop
lock
lea
adc
pop
sbbb
jecxz
ret
lret
mov
sbb
push
cmp
adc
or
lret
push
into
stos
jge
sar
add
dec
push
fistl
pop
or
popa
add
inc
sub
mov
and
fimull
pushf
xor
push
ja
add
int
scas
outsb
sub
out
mov
mov
in
loope
inc
mov
push
scas
cs
mov
movsb
call
fbstp
mov
jecxz
cmc
mov
xchg
lcall
cli
jo
adc
jae
mov
jmp
cmp
pushf
push
scas
ja
jmp
cmc
or
repnz
enter
and
sahf
cmp
imul
lret
and
adc
sbb
hlt
in
arpl
jge
jne
dec
gs
cwtl
jbe
cmp
and
fisttps
aad
xchg
lret
lcall
push
inc
ljmp
hlt
add
sub
out
cld
sbb
leave
xor
shr
test
hlt
arpl
fnstenv
adc
in
push
xor
sub
cmp
jp
hlt
sahf
adc
mov
dec
lret
repz
xchg
xchg
mov
flds
xor
and
mov
std
test
in
xchg
jge
or
push
aam
ja
xor
push
les
push
mov
notb
inc
fadd
and
jge
dec
fbstp
je
xor
xor
or
inc
fidivs
jmp
cs
add
icebp
loop
iret
push
cmpsb
lods
xor
dec
inc
insl
xchg
sbb
inc
loope
or
mov
fwait
pusha
insb
add
jl
and
and
out
pop
lret
adc
add
shrl
shlb
jle
lret
push
imul
dec
popf
pop
and
cmp
jg
jb
int
mov
insb
outsb
out
stos
jae
mov
leave
inc
jmp
popf
adc
add
cmpsb
decb
pop
dec
mov
mov
cwtl
mov
and
int3
fwait
loopne
dec
repz
rcl
mov
out
cmp
out
mov
insl
in
fcmovbe
data16
test
pop
stc
xchg
cwtl
inc
add
adc
testl
in
add
dec
push
dec
inc
mov
sub
cmp
cld
xlat
cmp
cmp
xchg
arpl
test
mov
cld
out
and
lret
in
movsb
sub
jnp
mov
loope
loopne
dec
adc
lret
add
mov
das
cmp
popf
push
push
xchg
mov
insl
push
cmp
inc
jl
int3
adc
subl
jecxz
out
ds
sbb
fwait
repz
push
mov
stc
test
mov
pop
imul
stos
xchg
mov
mov
add
pop
push
bound
add
in
push
out
push
jnp
in
cmp
adc
dec
loop
mov
mov
and
mov
push
mov
mov
fs
mov
mov
adc
xchg
pop
je
or
sub
dec
add
cmp
adc
sti
push
insb
ss
call
mov
in
jecxz
xor
cmp
insl
das
push
xor
ljmp
lock
nop
xchg
sub
and
call
adc
fildll
xchg
shll
mov
fisubrl
enter
out
pop
stc
xbegin
mov
sub
jne
xchg
cmp
pop
sub
std
inc
sbb
pusha
nop
es
les
hlt
out
cli
js
sti
mov
outsb
xor
mov
dec
movsl
orl
cmp
push
cs
jb
mull
cmpsl
cmc
or
push
mov
dec
jge
add
xchg
iret
lret
sub
and
mov
cltd
push
je
or
mov
push
shll
pusha
sub
sti
sub
cmp
out
cli
shrb
and
hlt
ljmp
mov
out
fsubrl
insb
mov
hlt
pop
not
cld
cli
int
mov
decl
cmc
icebp
popf
test
call
push
pusha
mov
lcall
sbb
add
into
loop
mov
aad
cmp
int
lods
xchg
dec
inc
push
and
push
push
mov
mov
jmp
enter
insb
xchg
cmp
adc
pop
mov
xor
into
leave
mov
jb
xchg
push
sub
popa
cld
inc
sar
sti
test
cli
xorb
pop
sarl
xchg
mov
ds
mov
sbb
idivl
popa
push
mov
lret
nop
add
lock
or
aam
dec
mov
xor
stc
pop
sbb
loope
movsl
inc
xchg
pop
dec
ljmp
mov
mov
stc
pop
push
dec
dec
mov
std
push
jle
movsl
or
adc
sti
pop
cli
add
mov
mov
adc
cmp
adc
jle
inc
mov
pop
out
fcompl
mov
mov
push
cmpsb
cli
sar
in
test
pushf
adc
mov
ljmp
jno
mov
and
je
insl
ret
pop
bound
lods
enter
adc
add
sbb
xor
jmp
cmp
add
sbb
and
xor
mov
lret
in
je
push
dec
hlt
sarb
xlat
inc
cli
sti
adc
in
rcll
fdivrs
in
lea
jmp
pop
pusha
pop
add
push
jg
cmp
stc
or
nop
movsb
out
movsl
je
adc
mov
std
test
or
mov
imul
mov
and
cmp
jle
add
push
pop
push
cs
daa
and
mov
add
jbe
fcomp
lret
jae
sbb
adc
jle
cmp
hlt
data16
std
mov
iret
in
cld
jg
mov
popa
nop
xor
lea
push
add
out
rcll
pop
jb
inc
xchg
pushl
pop
addb
jl
in
lret
pop
ljmp
jmp
fnstcw
popf
push
bound
push
cli
loopne,pt
insl
jne
inc
sub
bound
rclb
cld
out
dec
mov
mov
lock
sbb
add
mov
or
jecxz
cmc
aam
clc
imul
sub
sahf
sub
or
insl
ror
int3
scas
enter
shlb
cmp
pop
jg
jl
or
cmp
sahf
stos
incl
lret
lret
out
or
mulb
out
or
push
stos
mov
movsb
or
or
rcll
test
mov
ficoms
int
xor
into
or
mov
mov
adc
lahf
adc
jb
or
out
push
adcb
fs
ljmp
push
xchg
sti
sub
jg
outsb
insb
cmp
out
jae
sub
lret
sarb
jo
inc
call
les
outsb
popf
cwtl
cld
add
pop
xor
sub
ja
sub
neg
imul
repz
adc
in
in
push
les
test
and
ficompl
pop
mov
cmp
lods
push
mov
xor
out
insb
ja
xor
popl
and
rcr
adc
negb
xchg
xchg
stos
movsb
xor
mov
jmp
and
ja
loopne
jl
fnstcw
mov
mov
jnp
sub
stc
dec
sub
add
lret
rolb
lea
dec
fldt
cmc
pop
cmc
sub
lds
mov
cmc
stos
out
movsb
ror
fldcw
cmp
pop
sarl
cmpl
ds
icebp
fs
int
xor
addr16
xchg
sub
aam
sti
xor
cmpb
das
and
pop
lret
dec
js
add
fs
aad
push
cmc
ds
push
and
mov
or
lret
lea
jo
mov
mov
stos
push
bound
and
push
inc
pusha
inc
jp
je
mov
or
mull
jbe
inc
cwtl
stos
sbb
data16
scas
lret
pop
faddp
add
inc
in
rorl
ja
dec
mov
nop
jp
jp
pop
dec
scas
push
and
stc
pop
pop
sbbb
adc
std
jns
scas
lea
repnz
xor
pop
cmp
ja
jae
dec
cmp
mov
inc
cmp
cmc
pop
in
push
repz
cmpsb
push
rcrb
cmp
mov
lahf
pop
lcall
or
sbb
sar
jmp
mov
in
mov
xchg
mov
les
push
xchg
in
fs
shrb
mov
push
push
push
cmp
fimuls
sbb
or
negl
in
cmp
sub
pop
bound
or
in
cmp
in
repz
or
ds
jle
adc
mov
mov
sub
pushf
sub
push
cmp
out
mov
push
ret
les
sub
ds
ds
xchg
adc
jp
and
mov
sbb
push
xor
adc
adc
sub
ds
cmc
push
ss
ljmp
or
aam
repnz
adc
jns
ficompl
test
ljmp
movb
add
cmp
cmp
cs
xor
das
nop
cli
in
push
mov
add
mov
add
into
leave
push
add
cmp
loop
push
movb
sub
push
das
xor
mov
adc
in
lock
pop
lret
stos
or
loop
and
push
push
xchg
inc
dec
sbbb
cmc
inc
enter
int3
out
cmp
fsubrl
cmp
lret
outsb
movsb
ja
or
out
mov
dec
out
divb
jae
popf
movsl
pop
enter
addl
lock
addr16
loop
mov
sarb
sbb
mov
insb
xchg
stc
dec
cmp
sub
mov
out
sbb
out
cli
lds
cli
mov
aad
xchg
sbb
mov
jl
pop
pushf
imull
lods
add
xor
xchg
dec
pop
sbb
test
inc
mov
pop
je
sbb
out
sub
sti
mov
adc
cmp
fs
sti
std
push
out
xchg
push
addb
out
lea
push
cli
dec
out
roll
pop
movsb
hlt
lds
push
enter
into
jae
fdivrs
xor
clc
out
add
mov
push
faddl
add
mov
movsl
xchg
mov
pop
adc
push
inc
neg
insl
xchg
inc
cmp
mov
mov
adc
cmpsl
xor
out
sbb
mov
in
inc
dec
add
sbb
adc
out
sahf
data16
jg
and
dec
mov
sti
in
fcompl
out
jmp
mov
mov
jl
fiaddl
push
fmuls
mov
fcoml
fisubrl
int
xor
in
inc
and
aad
or
xchg
addb
dec
ret
fimull
lds
cwtl
add
call
fs
cli
das
aam
imul
cmpsb
loopne
js
in
dec
repz
loopne
ret
jnp
mov
cmp
inc
push
sbbl
call
and
push
dec
jg
push
cmc
cmp
sbb
fiadds
mov
pop
in
pop
nop
pop
das
xchg
push
jg
xor
mov
lea
and
insb
sti
push
ljmp
clc
js
push
pop
jne
dec
pop
test
mov
dec
push
in
push
leave
scas
mov
aam
add
pop
push
sbb
gs
loop
jb
ds
fwait
sahf
push
push
nop
iret
in
xlat
jae
sbbb
xchg
cli
adc
mov
cltd
lret
mov
mov
std
call
xchg
hlt
and
jg
push
push
mov
in
inc
push
add
enter
cltd
jl
out
js
xor
in
scas
pop
cmp
fwait
fs
inc
cld
je
fs
adc
and
lock
gs
push
push
movsb
dec
in
mov
sti
testb
out
in
mov
dec
pop
dec
rol
cmpsb
out
push
or
in
stos
push
fdivrl
mov
sbb
push
or
out
mov
or
mov
mov
jbe
dec
lret
mov
add
loop
jb
rolb
enter
mov
int3
lods
mov
inc
and
or
popa
andb
subl
out
dec
add
push
fsubrp
jns
add
pop
repz
pop
in
aam
cmp
subl
stos
xchg
bound
pusha
sub
out
push
faddl
ss
cmp
sbb
mov
and
xchg
repz
fcoml
mov
leave
inc
or
push
jae
aaa
jecxz
movsb
sahf
test
popf
mov
pop
push
sub
pop
add
push
xchg
jbe
out
aad
cmpsb
ds
add
xchg
rolb
loop
rcl
push
sbb
mov
cld
mov
lds
jo
pop
and
ret
inc
cmp
lcall
into
push
push
and
ficomps
xchg
sarb
or
push
inc
dec
inc
jo
push
sub
scas
adc
inc
pop
mov
stos
das
pusha
aam
cwtl
add
std
fiaddl
popf
popa
arpl
stos
mov
lods
lods
cli
movsl
stc
addr16
dec
rcll
stc
dec
repz
add
mov
mov
push
gs
pop
pop
push
jmp
jbe
stc
push
xor
andb
int3
inc
fiaddl
xchg
push
cmp
movsl
ljmp
push
lret
int3
adc
jmp
dec
mov
xchg
js
leave
subb
dec
scas
mov
clc
or
push
mov
push
dec
xchg
adc
mov
call
cmp
inc
add
inc
inc
and
lahf
hlt
xlat
xchg
cmc
js
pop
mov
xchg
out
sbb
fs
xchg
mov
mov
cs
lret
xor
jp
vpcmpgtb
cmp
xchg
jae
mov
dec
mov
xlat
pop
add
add
pop
nop
and
ret
inc
nop
enter
pop
adc
cmp
in
add
sbb
or
add
mov
mov
inc
bnd
adc
sbb
mov
fwait
cwtl
cmp
dec
jnp
rorb
arpl
fs
out
loop
nop
mov
loopne,pt
jg
imul
xlat
loope
test
xor
js
mov
dec
mov
dec
ja
adc
or
dec
mov
xor
adc
or
popf
sarl
in
lods
push
out
or
inc
out
push
fucomip
pxor
lea
mov
test
mov
dec
ja
loop
pop
test
pop
ret
ss
icebp
and
dec
adc
rcll
loopne
xlat
cmp
dec
jp
ficompl
inc
adc
add
xchg
stc
xchg
adc
adc
push
nop
jbe
insb
mov
push
and
add
outsl
push
mov
cmp
xchg
sub
or
push
or
push
rclb
inc
sub
mov
jge
jp
cmp
es
jo,pt
hlt
pushf
sub
bound
orb
outsl
and
mov
jb
push
lea
das
pop
js
cli
shr
sub
call
hlt
faddl
ds
loopne
and
ja
inc
sub
shl
mov
mov
aad
pop
cs
adc
mov
push
cmp
stc
in
out
lods
les
sarb
mov
xchg
clc
mov
sub
mov
push
or
mov
addb
ljmp
lods
push
jp
stc
repz
or
mov
test
push
lret
add
mov
sbb
push
or
xchg
lcall
xchg
push
xchg
cmpl
ljmp
mov
mov
outsb
fs
sub
cmp
pop
sbb
je
push
pop
mov
mov
mov
out
int3
in
out
mov
xchg
cmpsb
or
push
push
loopne
cmp
popf
repz
add
pop
out
leave
adc
dec
inc
nop
lret
es
pop
add
sbb
out
push
jmp
faddl
cwtl
lret
int3
pop
outsl
lret
cmovo
push
les
adc
in
in
test
stos
jl
in
push
ret
pop
je
xchg
dec
outsb
lock
xchg
out
cmp
js
sbb
sbbb
add
push
enter
fmull
cmpsb
faddl
cli
out
adc
jo
fs
push
cmp
inc
or
dec
arpl
sarl
sub
and
movsb
or
add
hlt
stos
stc
mov
ljmp
jb
xlat
nop
xor
or
pop
je
mov
xchg
shlb
or
sub
out
aam
subl
mov
jge
jl
das
add
jae
and
sub
test
or
imul
bound
xlat
sarl
adc
imul
or
lahf
bound
insb
stos
out
adc
xchg
dec
jne
xor
xchg
shlb
cmp
in
rcll
jbe
jp
dec
pop
test
and
pop
lds
lret
jge
jp
out
rcrb
dec
lock
xchg
loop
inc
sbb
mov
sbb
cmp
ss
jp
cmp
sbbb
out
notb
out
push
jecxz
adc
mov
insb
mov
and
andl
cmp
int3
lds
mov
add
in
jo
ljmp
pop
js
cmp
push
jecxz
in
pop
dec
xor
jno
push
push
dec
ret
xchg
mov
xchg
xchg
jns
xchg
and
mov
in
clc
lea
mov
cmc
mov
cmc
jb
insb
jae
pusha
call
jmp
sahf
loopne
js
push
adc
cmp
fwait
sub
sti
xchg
pop
in
lock
ficoms
orl
iret
ljmp
cmp
add
and
pop
and
xchg
adc
repz
inc
add
lock
fmuls
cmp
push
cmp
in
sub
nop
sub
cmc
insl
jle
das
ret
sub
test
out
jp
ljmp
jne
add
mov
push
lcall
loop
mov
pop
xchg
popf
mov
adc
loopne
and
adc
paddusw
or
ljmp
mov
inc
into
lods
jb
faddl
add
out
and
out
xor
cmp
out
movsb
pop
mov
xor
push
inc
push
push
push
bound
xor
inc
pop
adc
out
mov
push
sbb
cmp
mov
aam
std
sti
in
cld
dec
sbb
push
aam
sbbb
jo
es
mull
dec
jg
sbb
sub
mov
pop
adc
lret
sub
dec
dec
and
and
xor
fisttpl
push
sbb
and
mov
jecxz
rclb
out
xchg
xor
pop
inc
add
xor
fs
xor
jo
mov
mov
clc
jnp
repz
fdivrl
jo
shr
adc
xchg
and
testl
movsb
inc
mov
push
mov
push
aam
dec
pusha
sub
in
sbb
call
push
xchg
xchg
test
inc
jle
sbb
pop
fisubrs
jb
inc
in
adc
pushf
or
out
pop
jp
fcoms
jg
pop
sub
in
addb
mov
in
mov
adc
add
nop
imul
outsl
jp
dec
push
outsl
mov
movsb
jb
jno
bound
xor
push
push
inc
and
jae
add
adc
pop
out
jb
cmc
xlat
out
scas
push
jbe
dec
xchg
mov
mov
sti
sahf
shlb
and
push
arpl
or
add
cwtl
add
fs
in
clc
fwait
push
or
and
shl
sar
in
or
dec
fcmovbe
mov
outsl
cwtl
out
mov
in
lret
int3
xor
and
pop
mov
lcall
and
cltd
push
push
xor
adc
cmp
in
mov
sub
sbb
and
dec
or
rcrl
xchg
push
pop
pop
mov
and
sbb
add
xor
out
inc
rcl
mov
insb
inc
out
les
mov
mov
sub
imul
xchg
xor
das
in
cmp
adc
testb
adc
add
cmc
sbb
adc
xchg
jmp
out
lret
int3
notl
iret
and
and
aad
insb
mov
rcr
jb
stos
xchg
mov
leave
mov
aam
cmp
sbbl
fsts
imul
fldenv
sub
xor
and
or
ret
sub
stc
push
fisubrs
xchg
sbb
lahf
leave
and
push
in
xchg
or
push
fdivp
push
call
push
adc
sub
mov
push
scas
and
adcb
imul
push
ret
movb
inc
add
dec
adc
leave
mov
repnz
fs
xchg
sub
insb
push
add
fisubs
lret
jle
imul
insb
je
or
mov
push
in
adc
mov
pusha
in
dec
adc
cmp
cli
xor
xor
out
stos
cmp
popw
lock
mov
in
or
ljmp
pop
stc
pop
or
cld
pop
push
ret
xchg
jnp
add
lret
js
add
jbe
in
sbb
push
dec
xchg
mov
xor
data16
int3
or
xor
ds
xchg
jmp
lret
add
jl
sahf
and
sbb
push
push
aaa
add
pop
bound
pop
rcr
sbb
push
jb
jge
outsb
test
idivl
out
call
loop
inc
int
and
out
pop
xchg
in
shr
or
sub
fists
xchg
mov
inc
into
mov
ficoms
fisubrl
xchg
movsbl
bound
ds
xchg
sahf
shll
mov
push
outsb
bound
push
jmp
or
andl
mov
pop
sub
xchg
repz
jmp
or
mov
fs
ffreep
jle
sub
lret
aam
sar
in
repz
cmp
jmp
add
out
mov
fdivp
mov
xchg
push
adc
popf
repz
out
fisubs
dec
push
testb
test
fs
xchg
in
adc
cld
leave
xchg
out
mov
js
sbb
imul
cld
les
ljmp
add
adc
mov
repz
and
pop
in
divb
cmpl
and
fildll
fdiv
rcrb
mov
push
push
sub
in
test
je
lock
lods
and
mov
fisubl
adc
pop
jbe
stc
cmpb
les
and
pop
xchg
mov
fdivs
leave
xchg
xchg
stos
dec
and
rorb
mov
movsb
push
mov
xchg
and
lcall
and
mov
hlt
pop
movsb
repnz
aas
cmp
out
movups
and
loopne
push
add
in
and
lcall
rcrb
pop
call
xor
jl
out
repz
cwtl
shrl
dec
adc
or
xlat
rcrb
jg
jnp
ds
dec
cmpsl
les
push
and
in
testl
lock
sbb
adc
push
and
or
jb
cmp
mov
sbb
cwtl
cld
popf
jmp
inc
jmp
pop
pop
dec
or
adc
lret
fsubrs
mov
xchg
cmp
mov
lcall
popf
rcll
les
push
xor
dec
and
sbb
or
out
jg
jl
mov
mov
fs
xchg
mov
aad
or
std
in
sub
out
cmc
ss
xchg
mov
pop
cmp
sbb
cld
in
cmp
fldenv
lcall
cmp
cmp
pusha
dec
push
pop
cmpb
xchg
sbb
subb
inc
inc
xor
push
clc
add
push
pop
mov
lret
jecxz
fmul
enter
mov
int
shlb
xor
cmpsb
sti
cmp
lret
jge
testb
xchg
push
dec
fidivl
fiaddl
enter
mov
sbb
in
iret
sub
jp
leave
inc
or
scas
mov
mov
int
mov
insb
push
in
and
fs
in
pop
lcall
add
idiv
and
jo
mov
jae
sub
out
jne
jl
mov
sbb
dec
or
cmp
movsb
movsb
aad
push
fsubrl
jo
outsl
sub
xchg
nop
sub
push
pushf
and
fs
push
add
push
dec
lahf
and
rorb
xchg
push
scas
cmp
out
push
and
cmp
loopne
add
into
orb
fistl
pop
pop
lret
hlt
inc
and
leave
sub
cmp
sbb
roll
insb
in
movsb
sub
dec
push
cmp
inc
or
push
lahf
mov
xchg
push
pushw
jge
movsb
in
jae
xor
sub
and
mov
push
lret
sbb
call
xchg
or
mov
rcrb
mov
lret
adc
push
adc
push
notb
fadds
dec
xchg
push
nop
inc
ja
fiadds
cs
sub
ret
rolb
pop
jmp
push
pop
inc
sub
mov
or
in
outsl
push
test
jbe
dec
push
dec
das
and
fsub
sbb
sbb
call
popf
xchg
xchg
bound
add
mov
pop
repz
cmp
in
shll
in
repnz
sub
lods
mov
movsb
in
and
cmp
int3
leave
sub
or
push
mov
push
bound
fisubs
out
int3
les
in
movsl
add
jmp
out
ret
xchg
lods
and
cld
adc
loop
jl
lock
or
pusha
jl
out
rclb
mov
dec
enter
jae
dec
jmp
ret
movsb
stos
decl
jae
cmp
push
adcb
ret
jae
insb
movsl
push
cmp
dec
cmc
dec
out
push
push
xor
lods
mov
push
pop
jbe
es
cmp
cmp
imul
cmp
clc
lret
jle
dec
dec
es
adc
push
sub
addb
xchg
or
insl
fisubl
sub
adc
std
push
mov
je
push
pushw
ljmp
test
mov
adc
mov
rcrl
lret
lds
aam
cmpl
jmp
adc
insb
cmpsb
in
jae
inc
mov
dec
push
cmp
lods
out
or
push
mov
clc
adc
or
or
scas
xchg
mov
clc
subl
pop
jmp
xchg
add
inc
jo
hlt
inc
call
add
stos
pop
jnp
pop
jbe
and
enter
mov
jns
loop
jecxz
add
pop
xchg
mov
scas
add
xchg
xchg
jne
mov
cmp
jae
sahf
movsl
jg
or
adc
inc
adc
jmp
mov
mov
test
stc
push
repnz
mov
or
and
in
fdiv
push
daa
xorb
push
or
cmp
int
lods
mov
jg
sbb
cmp
mov
and
and
or
jo
inc
fldcw
push
jp
andl
or
pop
cli
dec
stc
sub
shl
bound
or
fwait
inc
js
and
cli
pop
ret
stos
in
mov
in
fsubl
push
inc
cltd
push
push
dec
pop
mov
push
dec
mov
fsubrp
add
int3
fldt
imul
pop
outsl
add
cmc
cmp
cmp
sbb
cmp
xchg
mov
aad
in
imul
jecxz
xor
fs
mov
loop
cmpb
mov
nop
lds
or
inc
xor
mov
out
shll
repnz
movsb
arpl
mov
xlat
dec
sub
fstpl
sub
xor
popf
test
popf
fcmovnb
ret
jnp
mov
stc
add
clc
mov
pop
mov
rep
xorb
jl
push
test
inc
pop
jo
jmp
stos
les
cmp
inc
or
xchg
mov
xchg
shlb
popf
or
cmp
bound
lds
sbb
loop
xor
add
pusha
push
lods
or
jl
test
arpl
fnstsw
xor
stos
mov
xchg
int3
pop
cmp
cmp
sahf
mov
mov
cli
adc
xorl
xor
mov
aam
pushf
testb
sub
inc
mov
push
jp
adc
stc
fstp
js
xor
cmp
fdivrs
inc
ret
out
shll
and
push
jp
pop
fmul
fs
in
frstor
outsl
andb
add
leave
nop
mov
dec
xchg
sub
jp
jnp
xor
fs
out
add
sahf
lret
push
nop
repz
mov
cwtl
jmp
ret
je
xor
adc
scas
outsl
jle
add
out
imul
mov
xchg
bound
pop
xchg
outsb
or
negl
mov
out
adc
jg
or
ja
or
lock
addb
mov
add
inc
dec
daa
jne
cmpsb
mov
mov
mov
mov
fstps
loopne
xchg
pop
and
or
mov
loopne
and
and
pop
dec
lahf
dec
mov
cmpsb
mov
push
aad
dec
pop
pop
push
xchg
test
inc
pop
mov
add
lods
popf
xchg
push
jae
nop
push
cmp
cmp
mov
lret
lahf
sbb
jg
push
pop
inc
mov
lods
sbb
leave
insb
push
in
pop
xor
sbb
rcrb
stos
insb
sub
imul
in
cmp
dec
loopne
mov
testl
imul
mov
out
lret
push
movsb
jbe
loopne
cwtl
mov
out
shll
mov
inc
cmp
cmp
xor
mov
out
cmpsl
jl
jg
sbb
add
add
sub
sub
jne
hlt
sarb
jl
sti
adc
sub
negb
lock
jb
inc
jnp
aam
ror
lods
and
movsb
cmp
xchg
add
lahf
iret
mov
jl
gs
out
daa
in
cwtl
aaa
ljmp
inc
or
mov
ss
cld
jge
inc
hlt
mov
push
ds
cmp
push
and
pusha
inc
in
xor
jle
push
and
sbb
pop
mov
es
push
or
clc
cmp
mov
pop
dec
aas
nop
ljmp
pop
test
xor
cmp
xorb
out
cld
popf
movsb
push
jo
cmp
cwtl
push
add
pop
push
xchg
mov
add
mov
fsubrp
outsl
in
test
push
mov
ljmp
or
stc
push
cmp
leave
inc
push
pop
sub
mov
or
inc
xchg
fcomps
or
cli
or
add
addps
and
jp
sbb
dec
outsl
push
mov
imul
fsts
call
sbb
mov
lea
fcoml
or
test
mov
pusha
movsb
add
and
loopne
enter
mov
push
jbe
mov
mov
hlt
xorb
inc
push
cld
adc
pop
mov
nop
in
nop
loop
add
les
add
les
lret
sbb
push
out
pop
adc
sub
cli
call
mov
adc
mov
clc
call
add
lock
xchg
lcall
dec
xor
shrb
nop
out
cwtl
dec
stos
xchg
jo
add
loopne
mov
jo
sbbb
and
fsubl
mov
jo
or
outsl
and
fcoms
into
je
push
scas
or
enter
fdiv
push
mov
jo
jb
in
pop
shll
or
rcl
and
movsb
sub
dec
push
call
add
call
pop
or
test
xor
sub
adc
sub
out
jae
mov
mov
push
add
xor
sub
sub
call
push
sub
insb
adc
xchg
stc
clc
lock
dec
add
divb
xor
sub
xchg
mov
pop
xchg
pop
dec
movsb
or
or
cmp
ljmp
push
or
adc
and
rclb
jmp
cmpl
outsl
in
or
lock
clc
push
mov
and
enter
lock
dec
pusha
outsl
pusha
xor
sbb
xlat
enter
lods
popf
push
xchg
cmp
in
push
jl
dec
aam
pop
cmc
push
in
adc
inc
in
push
mov
cli
xchg
rclb
cmp
rcrb
cmp
ljmp
pusha
xor
dec
es
jg
dec
xor
push
jl
xor
cwtl
leave
and
adc
jnp
dec
int3
fcompl
push
popf
outsb
outsl
fdivs
jmp
in
inc
mov
inc
int3
out
cwtl
les
ljmp
cwtl
mov
insb
in
push
jnp
pop
mov
push
ja
add
sub
and
xor
xor
mov
es
clc
nop
mov
nop
pop
les
or
fdiv
rcl
jbe
adc
mov
pushf
cmp
js
fcoml
dec
inc
fdivl
cmp
fwait
push
sbb
inc
lock
in
jmp
mov
divps
mov
cmp
cmp
sub
and
dec
or
push
or
sbb
and
in
jp
inc
adc
dec
cld
mov
inc
cmp
rorb
dec
les
fcoml
aam
ljmp
scas
push
mov
mov
cmc
fs
pusha
cmc
jl
js
je
insb
push
bound
jle
sub
popf
cmp
shl
sti
cli
or
data16
adc
lods
sahf
in
inc
cld
and
and
sub
mov
shl
mov
lods
mov
mov
pop
stos
mov
mov
sub
mov
sahf
sbb
adc
mov
xor
js
sub
jl
sahf
jp
leave
mov
mov
ror
arpl
cwtl
inc
sarb
cmc
sub
and
hlt
xchg
push
rcr
mov
mov
add
jne
pop
mov
ret
and
fsts
add
xor
pop
pusha
cmp
and
fmuls
dec
xchg
fs
inc
jb
lock
in
bound
dec
adc
loopne
add
mov
inc
mov
jp
inc
adc
dec
movsb
lcall
out
enter
sbb
sbb
int
shl
xor
leave
push
pop
out
or
out
pushf
clc
adcb
pusha
cld
addb
fcoms
jo
aam
mov
jmp
push
lret
sub
mov
mov
sub
pop
mov
push
les
pop
dec
cmp
lds
xchg
xchg
cmp
push
and
xchg
cmp
cmp
loop
cmp
and
call
int3
dec
int3
pusha
pop
push
les
test
mov
mov
dec
mov
mov
pusha
push
test
xchg
sahf
sub
repnz
in
adc
dec
add
mov
jle
push
xchg
rcr
sub
test
je
insb
hlt
mov
repz
int3
out
call
adc
js
cmp
and
stos
xchg
loopne
mov
xchg
pusha
orl
and
push
and
movsb
sahf
out
mov
or
mov
test
inc
xchg
lcall
mov
lret
xchg
cs
and
and
xchg
dec
and
aaa
sahf
faddl
aad
lods
aaa
std
sbb
jge
call
mov
pop
push
sbbb
ss
pop
cltd
cld
out
decb
call
jg
rol
pop
inc
out
sub
orl
fdivrl
insb
leave
jl
add
add
adc
xchg
jl
and
movsb
or
cwtl
insb
mov
mov
push
aam
lcall
sub
mov
mov
ftst
repnz
movsb
or
test
cmc
pop
in
sub
or
adc
or
push
push
ljmp
jl,pt
sub
pop
sbb
jecxz
int
inc
xchg
and
fisubs
cmp
push
pop
ljmp
and
or
add
insb
jo
int3
sub
test
out
mov
sahf
movsb
push
scas
mov
decl
sub
and
stos
movsl
movsb
push
sbb
nop
xor
sub
jnp
clc
xchg
pusha
cwtl
sbb
xor
lret
jnp
cli
loopne
sub
popa
pushf
lret
lret
push
cmp
or
movb
push
mulb
fldl
pushf
popa
es
xchg
pop
sub
adc
mov
test
sub
jnp
xlat
test
mov
lret
push
fsubl
cmpsb
or
push
pop
fsubrl
lods
jmp
jl
je
push
mov
ror
and
lea
das
xor
inc
cmp
js
aaa
in
test
or
in
es
and
les
dec
xor
and
and
out
pop
fcmovb
mov
pusha
lods
jbe
ja
into
inc
mov
loop
mov
jns
sahf
int3
mov
mov
cwtl
dec
mov
leave
inc
xchg
lock
xchg
ja
mov
adc
in
add
je
lahf
jl
adc
jb
xchg
cwtl
lds
jl
sub
cmp
mov
inc
aam
movsb
int
push
insb
xchg
dec
int3
inc
mov
sub
cs
inc
movb
or
xchg
rcr
xchg
or
sub
test
jb
cmp
pop
cld
adc
push
dec
das
mov
push
stos
call
leave
sbb
sub
mov
addr16
pop
addr16
pop
cmp
pop
jp
fsubs
bound
inc
in
push
adc
xor
mov
ss
mov
add
and
int3
lods
inc
jmp
repnz
jb
insb
pop
inc
push
or
inc
addb
bound
sbb
push
ss
fdivl
push
insb
repnz
mov
jnp
popf
int3
mov
xlat
pushf
jp
dec
fwait
push
sahf
loopne
mov
cmpsb
arpl
out
sub
or
adc
js
mov
mov
cli
out
das
out
pusha
loop
inc
push
add
or
sahf
fmull
les
hlt
sub
push
inc
ljmp
inc
ret
mov
icebp
je
and
int
sub
lcall
or
aam
mov
movsb
inc
and
aam
das
rcrb
cld
popf
jo
in
je
sbb
push
or
add
push
sbbb
dec
cltd
push
call
jnp
addl
dec
xchg
in
or
mov
test
push
cmp
mov
call
mov
xchg
or
cmc
repnz
clc
dec
push
movsb
andb
nop
fmull
adc
clc
in
fadds
scas
push
ds
cmc
cmp
andb
insb
fimull
jo
pop
mov
dec
in
push
lret
shr
arpl
fsubs
arpl
cmp
out
push
sbb
cmpsb
mov
push
pusha
inc
insb
dec
leave
bnd
cmp
orb
xchg
inc
and
mov
pusha
fmull
add
scas
dec
xor
xorb
int3
cwtl
out
iret
fs
cmc
je
inc
push
incl
jge
cltd
push
or
rorb
ja
xor
dec
dec
pop
js
cmp
ljmp
add
outsb
pop
dec
sub
js
lret
add
in
js
test
pusha
add
mov
incb
push
test
insb
mov
shld
sbb
out
sbb
pusha
call
sub
insb
enter
cld
jnp
test
lcall
scas
mov
into
lock
negb
mov
insb
js
dec
pop
xor
jecxz
std
lock
cmpsb
leave
mov
aam
out
push
add
test
sub
in
int3
pop
hlt
mov
andb
and
leave
pop
add
repnz
aam
cwtl
mov
mov
insb
lcall
int3
out
psubb
cmp
loop
add
test
pushf
mov
sub
in
ss
shl
inc
test
bnd
inc
mov
out
adc
nop
andb
push
sub
inc
adc
loopne
rcrl
movsb
and
xor
xchg
ljmp
add
pop
adc
rorb
lods
repz
and
pusha
adc
inc
movsb
inc
lock
xchg
pop
lock
or
repz
lods
outsb
out
mov
xchg
mov
mov
adc
and
movsb
add
clc
call
mov
lcall
repz
stos
cmp
push
xchg
nop
loopne
mov
shrb
cmp
mov
lret
pop
inc
repz
cmc
bound
lock
in
mov
mov
js
push
inc
lods
sub
loop
rcl
sahf
test
mov
lcall
jo
js
xor
xchg
xor
lcall
fiaddl
and
or
inc
and
stos
call
inc
pushf
inc
fsubl
les
mov
jp
xlat
clc
cs
enter
and
adc
scas
add
je
sbb
pop
nop
adc
mov
jo
out
dec
into
popf
and
push
sbb
pop
pop
enter
sarb
pop
pusha
sub
loopne
sub
adc
sub
jg
into
popf
leave
pop
mov
mov
xchg
divb
pop
pusha
add
notb
mov
xlat
rolb
call
push
cmpl
add
clc
inc
push
lock
mov
cmpb
lods
pusha
xor
out
push
popf
sbb
mov
ljmp
add
pop
xlat
and
sbb
call
mov
cmpsb
push
mov
orb
je
inc
int3
ljmp
xor
sub
cmp
rol
mov
rcr
lods
aam
mov
pop
mov
test
aad
pop
sbb
mov
xchg
aam
mov
pop
cwtl
push
mov
nop
xor
test
sub
cmp
std
mov
movsb
scas
sbb
fsubl
outsb
xchg
sbbb
nop
je
pop
mov
add
lock
pushf
stos
nop
cmp
mov
insl
inc
movsb
jo
sub
rolb
lcall
mov
sbb
and
movsb
mov
pushf
inc
xor
push
xor
mov
clc
pop
mov
popf
inc
xchg
test
movsb
mov
sbb
gs
xor
fsubl
mov
mov
push
inc
sbbl
xlat
sbb
xlat
rclb
adc
jp
mov
xlat
inc
pop
cmc
cmp
add
adc
inc
popf
or
js
jecxz
pop
mov
scas
sbb
shlb
adc
insb
mov
cmp
std
xchg
int3
jo
clc
pushf
jg
sahf
adcb
ficoml
xlat
or
popf
ror
mov
jle
mov
subb
dec
adc
enter
push
enter
xchg
and
inc
cmp
fmull
xchg
aam
mov
dec
sub
mov
xlat
int3
dec
dec
movsb
outsl
mov
cwtl
cld
push
add
mov
fdivl
mov
je
ret
scas
clc
in
add
adc
or
push
shlb
mov
fsts
dec
or
jp
xlat
aam
dec
fs
pop
cmp
cli
loop
hlt
lock
jg
negb
xchg
ret
test
fdivrs
mov
dec
mov
dec
fisubl
inc
mov
enter
cmp
or
add
mov
stos
shlb
test
pop
push
subb
and
dec
int3
jo
test
mov
je
test
dec
adc
dec
cmp
les
dec
lods
pop
repnz
sbb
inc
lods
xchg
inc
test
cmp
sbb
call
fcom
cmp
jae
test
mov
mov
clc
int3
mov
sub
add
xchg
mov
and
add
push
and
or
mov
insb
xor
or
insb
mov
sarb
fadds
dec
cmp
in
cmp
movzbl
repnz
je
mov
es
sbb
dec
jo
and
xor
xorl
dec
loopne
xorb
repnz
lock
fs
or
shrb
xor
mov
leave
cmpsl
int3
in
mov
in
and
enter
rolb
in
jo
cli
dec
xor
or
call
andl
loopne
in
jp
mov
mov
mov
int3
out
sub
xor
mov
popf
push
insb
mov
rorb
movsb
cld
decb
mov
lret
movsb
in
jae
enter
fcomps
and
inc
mov
push
clc
mov
fsubs
addr16
add
mov
in
xchg
adc
dec
push
shlb
jnp
jne
shl
fdiv
lods
movb
xor
rorb
clc
jmp
rcrb
cmp
leave
inc
imul
mov
sbb
int3
mov
xchg
mov
int3
sub
je
jg
jbe
leave
aam
mov
rorl
xor
sub
int3
lret
pusha
fsubl
movsb
xlat
pop
pusha
movsb
lcall
jo
mov
shlb
sub
pop
add
add
lods
xor
out
pushf
in
scas
xor
in
mov
push
pop
mov
xchg
xor
inc
cmpsb
int
lock
lods
pop
lret
mov
ljmp
xor
arpl
sbb
mov
mov
add
stos
mov
inc
dec
sub
jecxz
hlt
sub
sbb
bound
loop
cmp
pop
fs
inc
push
pusha
cmp
in
in
std
ljmp
mov
repnz
push
mov
lods
sub
insb
rorb
lds
mov
enter
mov
mul
inc
shl
cmp
clc
sbb
add
sub
mov
pusha
dec
or
faddp
je
or
fiaddl
scas
jb
cwtl
sarb
enter
mov
sbb
sahf
push
add
sbb
dec
nop
inc
add
inc
inc
test
hlt
loop
inc
inc
mov
dec
in
xor
call
adc
out
popf
enter
dec
lods
xchg
insb
sahf
call
lcall
cmp
mov
add
mov
mov
loop
or
out
jb
mov
sbb
adc
adc
test
je
cmp
sub
les
push
popf
pop
loopne
jno
dec
enter
movsb
leave
mov
and
cmp
iret
mov
sub
jl
popf
and
xchg
lods
fwait
movsb
sbbb
push
jbe
mov
pop
add
insb
nop
stos
xchg
mov
sbb
sbb
xchg
lret
mov
xor
movsb
faddl
pushf
scas
inc
lcall
out
enter
and
inc
orl
dec
in
test
fdivrs
xlat
push
jbe
in
aam
cmp
fs
hlt
and
pushf
add
mov
mov
mov
loopne
pop
and
and
nop
aam
inc
or
lods
xchg
xchg
inc
cmp
bound
lods
repz
and
adc
inc
mov
sbb
pop
popf
add
enter
stos
lock
addb
ljmp
push
test
push
cmpl
sub
mov
cli
sahf
jmp
mov
js
sub
lret
arpl
lock
popf
stos
inc
cmp
in
xor
inc
mov
fs
in
ljmp
sub
repnz
jp
mov
push
push
ds
out
adc
adc
dec
imul
sbb
mov
cmp
jl
aam
dec
inc
cwtl
xchg
es
push
cmp
mov
push
xchg
addb
mov
cmpsb
es
sub
daa
mov
leave
dec
or
and
xchg
push
sbb
mov
cmc
and
ja
idivl
push
cld
sub
leave
cs
cmp
mov
call
fmul
mov
fs
push
iret
call
enter
pusha
dec
in
pushf
push
rolb
push
shlb
xor
lods
push
loop
cmp
pusha
and
mov
insb
and
dec
push
test
and
mov
pop
stos
and
in
mov
out
cmpb
insb
jae
xor
sbb
lock
push
fs
cmp
hlt
push
or
jl
push
jmp
xor
and
sub
outsl
cld
and
jl
fwait
cmpb
and
cli
cmp
pop
lretw
orb
mov
movsb
aaa
aam
pushf
mov
push
pop
arpl
mov
arpl
mov
pop
popa
inc
lret
into
cmp
pop
popa
hlt
push
clc
test
popf
jge
inc
out
fucomip
sub
inc
xor
loop
test
push
jl
cwtl
sahf
arpl
mov
cmpsb
loopne
imul
fsubl
outsl
fildl
dec
outsl
fisttpl
int3
xorb
cmp
enter
lock
int3
cs
jl
push
bnd
out
insb
dec
xor
jle
add
mov
adc
adc
xchg
push
mov
fistpl
je
cli
pop
and
add
call
dec
inc
push
repnz
dec
dec
pop
ja
push
pop
lcall
es
scas
int3
jnp
test
in
push
sub
je
sub
sub
shr
and
and
into
popf
dec
je
lcall
ja
in
call
mov
ja
adc
sbb
add
rcr
ds
fcoml
outsl
fdivrl
cmp
mov
out
fcmovnu
outsl
fld
outsl
fadd
popf
dec
mov
outsl
and
ja
test
jle
test
mov
out
jg
ret
enter
fistl
fcomi
outsl
gs
mov
push
ljmp
push
jb,pn
rclb
into
cmp
jg,pt
and
xor
sarb
push
add
and
xchg
fs
stos
push
jo
hlt
fwait
xor
cmp
mov
mov
mov
cwtl
jne
repnz
dec
mov
mov
mov
stos
mov
out
pop
cs
pop
push
popf
scas
pop
popf
scas
pop
popf
mov
pop
add
inc
pusha
popf
mov
mov
mov
scas
in
mov
xchg
dec
rcrb
inc
out
pop
inc
gs
mov
and
leave
mov
and
mov
sbb
jnp
shl
jl
jg
or
movswl
jg
cmp
mov
shrb
les
jg
push
jne
mov
inc
in
mov
dec
mov
js
jl
shlb
test
outsl
ret
outsb
outsl
les
rcrb
scas
lcall
movsb
negb
mov
aam
pop
ja
mov
shll
sbb
cmp
mov
mov
out
ret
inc
out
ret
dec
outsl
ret
dec
outsl
ret
dec
outsl
les
fcomps
sarb
mov
hlt
shlb
jl
dec
jle
or
shrb
sbb
inc
sbb
mov
aam
arpl
out
shl
jns
int3
ss
mov
popf
cmp
pop
cmp
leave
jle
leave
popa
rol
xor
xor
popa
rol
xor
push
mov
add
ja
adc
cli
leave
pop
cmp
mov
ja
clc
mov
dec
shrb
pop
sarb
push
mov
pop
pop
int3
out
ret
rorb
fs
lret
in
pushf
out
les
bound
data16
push
jle
push
mov
jle
bound
inc
data16
cmpl
mov
xor
dec
mov
dec
mov
popf
iret
js
inc
jl
inc
pusha
outsl
ret
loopne
inc
push
inc
jo
scas
xchg
data16
push
enter
jl
jo
sub
or
rcr
sahf
int3
dec
scas
rcrb
lret
imul
aad
pushf
adc
mov
sub
mov
bound
fsubrs
add
subl
jb
mov
pop
lcall
mov
insl
fdivl
dec
cmp
in
and
in
and
lret
mov
lret
xchg
hlt
fidivrs
ljmp
inc
adc
nop
cmp
jp,pt
and
sub
inc
mov
out
in
dec
sub
rclb
add
dec
inc
mov
leave
jno
leave
xchg
sahf
jmp
sarb
nop
mov
test
jo
pop
mov
xchg
add
sub
subl
lock
shll
xchg
push
push
loopne
mov
push
pusha
lock
mov
mov
rcl
mov
sahf
mov
movsb
dec
mov
clc
sub
and
mov
rorb
adc
mov
mov
inc
scas
outsl
inc
mov
enter
addr16
es
cltd
add
pusha
add
cli
sub
stos
inc
loop
inc
in
inc
call
inc
out
stos
mov
out
mov
add
push
popf
cs
jg
sub
jo
add
add
xchg
notl
dec
hlt
in
cli
jb,pt
push
inc
testb
repnz
dec
frstor
and
repnz
mov
lret
push
subb
sahf
insb
sbbb
jb
fisubrl
stos
nop
mov
xchg
xor
imull
pusha
faddp
dec
fsubs
mov
stos
mov
stos
mov
stos
mov
sub
sub
mov
imul
clc
xor
cli
push
orl
mov
adc
clc
pop
add
push
in
les
dec
das
xor
outsl
ret
xchg
outsl
and
xchg
sub
ror
inc
imul
fldcw
xchg
sub
mov
sub
push
test
push
mov
nop
stos
xlat
sbb
into
push
jg
js
das
nop
in
jo
cmp
mov
and
clc
xor
out
and
in
dec
shlb
int
jl
push
pop
cmp
clc
push
mov
pop
out
sbb
xor
lret
xchg
jb
cmp
in
fldenv
insl
insl
fldt
insl
fldcw
fs
mov
stos
cmp
mov
sub
inc
stos
cmp
cmp
cmp
cmp
cmp
js
mov
or
fbld
subb
ja
jmp
push
cmp
mov
cld
subb
addr16
lret
clc
push
mov
call
lods
out
leave
fmuls
jne
call
loop,pt
mov
xor
push
push
hlt
sub
cwtl
leave
mov
les
mov
lods
fucomi
add
js
mov
dec
xor
dec
sub
cmp
inc
js
loop
xor
aaa
fwait
pop
les
pushf
inc
mov
fldt
out
scas
jnp
ret
jo
jge
adc
cmp
ds
jle
sub
mov
mov
inc
xchg
movb
xchg
into
dec
jl
jle
mov
je
sarb
int3
pop
xorl
cld
nop
subb
inc
stc
mov
lods
ds
movsb
lds
dec
mov
or
shr
test
in
xor
in
push
aam
mov
dec
je
jle
push
cmp
outsl
xor
ljmp
je
shlb
mov
les
mov
inc
les
repz
xchg
in
inc
idivb
orb
xor
out
je
push
inc
sbb
rcr
xchg
sbbb
add
lods
lret
fsubrs
pop
xor
push
call
enter
xlat
jl
mov
push
cmp
movsb
xchg
sub
fwait
xchg
rcr
mov
mov
or
and
mov
sbb
mov
cmp
loopne
mov
jne
pop
incb
incl
repnz
ljmp
cli
cmp
cmp
cmp
cmp
cmp
cmp
aaa
fidivrs
fidivrl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jle
jp
jbe
push
cmp
dec
cmp
inc
cmp
pop
cmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmpsb
and
wrmsr
or
and
xor
lret
jbe
xchg
push
mov
shl
popf
add
or
jge
pop
push
mov
ja
out
cmpsl
movsb
scas
movsb
xor
fiaddl
or
sbb
hlt
mov
push
mov
or
adc
xor
xor
shrb
movsl
lods
xchg
shll
mov
mov
negl
rol
sarl
pop
mov
out
out
or
loope
into
cmp
push
adc
push
loopne
in
adc
negb
ljmp
sbb
aam
std
cmp
imul
sbb
in
sub
imul
mov
push
enter
or
outsb
cmp
add
pcmpeqd
jmp
cli
sbb
or
jbe
ret
adc
js
testl
dec
push
shlb
leave
enter
scas
lods
movsb
hlt
je
int3
push
js
mov
adc
adc
addr16
hlt
out
scas
mov
fadds
xor
sbb
in
cmp
dec
xor
hlt
push
ret
mov
jecxz
movsb
and
inc
in
xchg
je
mov
sbb
les
lods
inc
and
in
mov
sti
add
outsl
mov
movsl
push
sarl
in
in
int
or
push
mov
lcall
lods
add
xor
push
mov
sbb
mov
jno
mov
movsb
pop
les
push
mov
or
or
ret
inc
push
test
sbb
xchg
lahf
fcompl
les
jg
xchg
push
inc
sub
adc
cmc
fwait
mov
in
mov
mov
or
xchg
popf
jb
loop
add
or
rorl
push
mov
sbb
add
mov
or
xor
mov
repz
loop
in
dec
mov
push
adc
and
add
jbe
dec
sarl
notl
sbb
pop
out
aad
mov
lcall
sbb
jl
mov
xchg
jg
inc
test
aaa
out
mov
inc
cs
aad
icebp
xor
xchg
sub
les
fsubp
cld
lods
ljmp
jnp
mov
add
adc
jecxz
sbb
or
xchg
andl
sysret
ret
cmc
sub
inc
movsb
shl
loop
loopne
cmp
scas
cmp
or
shl
mov
outsb
jo
lods
loope
fisubs
adc
les
cs
movsb
add
movsb
sarl
jbe
movsb
dec
aam
lcall
subb
mov
icebp
aam
and
out
mov
push
push
stc
cmp
or
sbb
or
push
sbb
dec
aam
mov
pop
jmp
cmp
mov
adc
outsl
pop
dec
and
xchg
push
adc
jo
aad
cld
or
xchg
xchg
sub
aaa
mov
lret
dec
aam
pop
std
xchg
scas
fnsave
jb
mov
aaa
mov
mov
adc
lea
xor
ss
and
adc
xor
add
jb
pop
cmp
xor
adc
ds
adc
bts
mov
add
outsl
jnp
leave
dec
add
mov
repnz
sub
jne
test
dec
incb
or
mov
push
mov
dec
mov
xchg
sub
jno
lret
and
lock
adc
add
xor
add
pushf
outsb
or
sbb
cli
or
cld
add
or
or
test
sub
jno
xchg
stc
adc
xchg
in
aas
adc
or
mov
xor
xor
divb
jae
call
mov
ja
or
lahf
adc
lahf
rol
loope
push
inc
aas
insb
outsb
add
or
adc
call
fcmovnbe
je
int3
movsb
mov
lock
std
stc
jbe
faddl
add
testl
aam
adc
xor
or
faddp
xor
sub
idivb
push
lock
stos
mov
or
in
in
push
lock
ds
and
out
jmp
fcomip
jecxz
enter
mov
nop
mov
or
bswap
mov
xchg
mov
mov
pop
pushf
iret
xchg
ds
mov
pop
adc
popa
add
movsb
mov
rol
adc
arpl
int
adc
push
or
push
add
adc
orl
add
add
cmc
es
push
inc
adc
inc
ffree
xchg
add
xor
mov
aam
push
adc
mov
mov
add
or
les
enter
xchg
enter
cltd
push
xchg
adc
fcomip
xor
int3
pushf
add
dec
adc
loop
pop
fdecstp
mov
lods
xchg
iret
mov
xchg
stos
or
orb
or
xchg
stc
ret
pop
mov
adc
pop
loopne
sub
stc
rolb
hlt
cmpl
jno
push
dec
mov
xor
mov
ds
jmp
xor
call
movsb
ret
mov
cld
rcll
sbb
cmp
xchg
aam
ret
sbbb
ljmp
pop
xchg
les
mov
lock
les
stos
loopne
sbb
cmc
outsb
mov
stc
mov
shlb
imul
lea
or
aaa
out
pop
int3
mov
in
addl
add
les
pop
mov
imul
popa
add
sbb
in
or
add
mov
hlt
mov
jecxz
sbb
jo
mov
data16
bound
push
stos
or
or
insl
mov
hlt
pop
lods
mov
movsb
add
or
dec
lahf
inc
push
sbb
xchg
lock
adc
loopne
adc
jb
hlt
int3
mov
add
mov
dec
into
adc
ret
xchg
in
cmp
adc
jl
cs
scas
push
mov
cmp
fisubrs
outsl
loop
dec
add
adc
enter
jl
or
adc
mov
fidivs
cltd
in
pop
or
jg
nop
subb
jae
sbb
lock
mov
je
mov
mov
push
inc
cmpsb
adc
mov
insb
or
or
push
cmp
xchg
cmp
mov
fsubrl
loop
out
lahf
or
mov
pushf
pop
icebp
lock
or
xchg
call
xchg
inc
adc
testb
fs
test
mov
int3
addr16
nop
inc
into
rcll
stc
cmp
push
fadds
lock
xchg
clc
mov
xor
ljmp
stos
fsubrl
repz
pop
addb
fmull
xor
ds
frstor
lret
outsb
mov
jecxz
aam
bswap
mov
or
sub
lret
repnz
or
mov
hlt
xchg
mov
push
out
jle
add
fs
adc
aad
pop
mov
fmul
mov
shlb
popf
inc
push
push
sbb
xor
sbb
out
add
out
mov
ss
jl
insb
mov
sti
sbb
xor
hlt
add
leave
fcomip
adc
xor
push
mov
xor
aam
mov
mov
mov
ja
push
in
in
or
push
stc
and
push
lret
scas
rclb
or
je
sarb
mov
clc
lahf
mov
mov
xor
mov
enter
pmulhw
sub
xchg
cld
out
or
cltd
mov
adc
movsb
lahf
dec
xlat
shll
in
ret
sbb
pop
pop
shlb
jg
lock
flds
jbe
lock
popf
fldt
and
or
rolb
or
cld
sbb
imul
nop
ficoml
mov
add
push
sbb
or
in
lret
popa
lret
pop
ljmp
add
jle
mov
xchg
jno
ret
push
outsb
or
fwait
lcall
mov
lret
fdivl
cld
or
xor
or
xchg
cli
adc
cld
repnz
push
rorb
cmp
xchg
out
push
jle
ds
adc
or
mov
call
cmp
sub
or
out
test
repz
sub
outsl
add
fistl
or
xchg
mov
xchg
outsb
loopne
sbb
adc
add
lahf
repz
inc
adc
jl
mov
scas
in
xchg
cld
scas
sbb
push
fimull
in
adc
imul
cmc
mov
inc
or
into
mov
out
fcomps
cmp
push
mov
enter
sti
mov
cmpsb
or
xor
or
or
inc
sbb
sbb
or
inc
sub
addb
test
into
bound
leave
lahf
and
xchg
mov
add
mov
dec
jle,pt
rol
xor
loop
arpl
push
icebp
repz
adc
jp
subb
jnp
jecxz
adc
dec
adc
add
xchg
cmp
xlat
push
lret
sub
or
mov
inc
or
sbb
or
jecxz
adc
ror
mov
sub
fucomi
mov
repz
adc
sub
mov
out
rorb
out
hlt
rclb
out
pop
test
push
add
and
fmull
jecxz
xchg
inc
cmp
test
inc
nop
or
xor
sub
jae
dec
push
sbb
ljmp
cwtl
xchg
daa
sar
xchg
stos
sbb
fcomps
rclb
fadd
mov
enter
lea
mov
dec
dec
or
mov
ds
adc
jmp
inc
ror
inc
inc
je
sub
fs
ds
add
mov
test
xor
sub
loope
test
add
pushf
es
jnp
loop
mov
scas
mov
adc
lahf
add
push
or
jae
icebp
sbb
into
xor
add
or
xchg
ljmp
mov
sbb
hlt
jmp
add
add
xor
fsubrl
adc
adc
test
ror
sbb
fiaddl
xchg
adc
xchg
mov
mov
clc
sarl
adc
adc
cld
sbb
daa
adc
stos
incl
push
add
shll
sbb
lret
add
testl
inc
or
aaa
adc
les
add
insb
or
adc
in
mov
mov
sti
int3
or
stos
or
add
jae
mov
push
mov
sbb
cmpsb
shrl
pop
pop
mov
lret
pand
iret
mov
mov
ljmp
out
test
repnz
xchg
sbb
sub
scas
mov
shr
push
lahf
or
sub
jecxz
or
sbb
xor
into
loop
iret
mov
push
xchg
fmul
xchg
or
fidivs
add
xchg
xchg
or
add
repz
xchg
adc
pop
in
xchg
jb
out
xor
mov
ljmp
add
dec
add
stc
int
mov
jmp
adc
orl
popa
mov
mov
leave
lods
pop
xchg
stos
adc
das
pusha
push
xchg
shr
xchg
adc
cmp
call
fistpl
jecxz
fisttpl
popf
push
test
or
pusha
incl
stc
or
or
fnstenv
div
mov
xchg
aam
cs
sahf
jb
mov
and
js
ret
sub
xor
or
cmp
sbb
fsubrs
cmc
loop
add
pop
inc
test
adc
add
ljmp
into
jbe
fisttpl
clc
mov
movd
data16
push
xchg
push
or
lods
or
adc
aam
addr16
nop
js
xchg
add
insb
aas
sub
pop
pop
in
jle
add
dec
add
adcl
sahf
push
xchg
aad
sub
mov
add
jecxz
mov
add
cs
imul
pandn
xchg
loope
mov
mov
mov
add
or
add
mov
fbld
add
mov
add
sbb
dec
pop
cmpb
outsl
lods
pusha
adc
pop
std
test
test
cmpsb
arpl
adc
xchg
lahf
neg
stos
je
mov
adc
xor
add
and
xchg
testb
nop
pop
xchg
lds
lods
into
mov
mov
jb
add
xlat
shll
sbb
add
mov
inc
rclb
sbb
mov
adc
ja
mov
push
gs
or
call
push
lods
or
pop
xor
scas
cs
jl
mov
testl
fistps
mov
dec
iret
mov
push
xor
add
mov
mov
pop
mov
push
lods
mov
mov
mov
xor
int3
popa
sahf
or
leave
call
movsl
repz
pusha
orl
xor
and
jmp
sbb
mov
mov
lahf
ss
fwait
push
lcall
or
pusha
scas
or
in
xchg
loopne
cwtl
adc
pop
xorl
cmp
push
ss
mov
lock
and
add
mov
adc
stc
insl
pop
add
scas
push
mov
sub
out
xor
loope
or
push
cld
inc
dec
repnz
hlt
je
ret
dec
scas
test
lock
aaa
cpuid
repz
lods
sub
pop
mov
push
sbb
pop
lock
les
subps
lret
push
pop
adc
or
lret
or
pushl
lret
cli
sub
repnz
cwtl
sahf
clc
loopne
push
mov
repnz
out
mov
fistpl
mov
sbb
in
fcompl
mov
imul
sarl
add
lock
lret
sub
jmp
dec
orl
mov
shll
sbb
aaa
lock
pop
pop
hlt
je
enter
sub
insl
inc
mov
cmp
mov
or
lahf
out
sub
aas
xor
jp
scas
or
fcoml
incb
dec
enter
mov
movsb
push
stos
xchg
sbb
insl
xor
int3
jae
subb
xor
nop
or
push
repz
and
ss
pop
inc
xchg
and
loope
jno
adc
xor
repz
icebp
inc
xor
sbb
sub
cmp
sub
inc
xchg
ss
or
or
adcb
push
sbb
add
inc
movsb
mov
push
int
mov
sub
mov
add
lods
push
sbb
push
xchg
shl
pop
ds
cmp
add
mov
push
scas
or
dec
int
or
sub
mov
nop
push
mov
hlt
rclb
xchg
pop
xor
lock
mov
jmp
popl
movsl
test
adc
jg
pop
js
jg
hlt
pop
out
sbb
fisubrl
mov
lahf
push
loope
sub
jae
fidivs
mov
pushf
hlt
imul
pop
adc
shl
mov
sub
rolb
std
adc
fs
xchg
out
lock
out
xchg
push
adc
sub
imul
sub
mov
es
and
sbb
bound
dec
or
push
rolb
pop
hlt
sub
fwait
push
loopne
aam
xchg
ret
cs
adc
xchg
insb
jg
mov
ja
dec
mov
ljmp
stc
dec
mov
mov
addb
in
mov
mov
adc
call
sbb
nop
adc
adc
aad
jecxz
les
outsl
shl
or
mov
xor
ret
mov
nop
adc
int
cli
push
sbb
jb
hlt
notl
ror
add
rorb
push
rorl
dec
mov
adc
and
fsubrl
sub
lahf
aad
ja
sub
cmpb
cmp
mov
out
jge
lahf
sub
lods
sbb
jl
repnz
pusha
adc
lahf
push
xchg
mov
in
sbb
add
jo
mov
repnz
push
inc
imul
push
icebp
adc
push
jl
sbb
pop
add
or
fstpl
mov
cltd
adc
cs
inc
aad
nop
adc
and
fadd
and
or
cs
out
push
shll
push
or
mov
dec
mov
bound
inc
std
rcr
xchg
mov
jae
mov
js
mov
jl
adc
mov
ret
imul
xor
aad
stos
sub
mov
loopne
lock
les
push
xor
repz
lock
add
pop
fidivrs
sub
sbb
lock
std
in
dec
push
xchg
push
fadds
dec
xchg
mov
ds
xor
add
repnz
adc
xchg
jnp
xor
mov
xor
call
out
repz
or
popa
icebp
enter
jae
mov
lret
loop
mov
mov
lahf
sub
sub
popf
jbe
jle
mov
lahf
add
jbe
adc
jnp
dec
lock
jge
pushf
sub
data16
adc
dec
stc
ss
xchg
mov
dec
mov
subb
cmp
xor
out
mov
jp
xchg
fsubrl
call
cmp
dec
in
xchg
call
pushf
cmc
test
sbb
jmp
jl
aam
icebp
inc
mov
cli
mov
sbb
xor
int
or
test
add
mov
ret
cld
xchg
fucomp
iret
out
pop
pop
inc
mov
test
into
into
iret
int
mov
sbb
push
test
or
repnz
ror
rolb
clc
jmp
cmp
inc
repnz
sub
sub
xor
sub
and
xor
sub
cmp
inc
add
jmp
sbb
and
cmp
or
andl
orl
je
clc
lock
aad
add
cmp
add
or
xchg
xchg
sti
lock
lock
or
aaa
xor
push
and
lock
inc
shl
ret
cmp
adc
out
adc
sbb
or
mov
pop
adc
std
push
faddp
popa
vmovd
cld
jo
dec
sbb
mov
ljmp
push
and
jno
iret
inc
enter
xor
cmp
adc
push
sub
pushf
repnz
add
sub
add
mov
adcl
sbbl
int3
fsubrs
lods
jl
jle
mov
gs
adc
dec
jl
stos
mov
dec
mov
repz
sub
lods
mov
adc
cmp
popf
xchg
inc
mov
gs
or
fdivrs
or
jg
in
mov
repz
idivl
into
sub
out
cmpsl
mov
xchg
movl
sbb
jmp
lds
mov
xor
mov
int3
test
jecxz
xchg
in
or
in
ret
jns
in
clc
mov
mov
or
sub
pop
roll
adc
xor
xor
cmp
imul
outsb
xor
mov
stos
adc
sub
fs
xchg
jo
mov
movsb
push
int3
insb
sub
jbe
or
sub
or
xor
jmp
icebp
dec
dec
add
adc
lods
in
std
stc
xchg
mov
fdivrl
fadds
dec
mov
lret
lret
xor
and
leave
xor
sbb
mov
add
jge
or
adc
pmaxub
or
insb
adc
mov
lahf
sbb
in
imulb
adc
sbb
mov
inc
fs
call
in
sub
pop
cvtps2pd
mov
xor
repnz
mov
sub
ds
pop
cmp
jb
jge
ja
mov
fldl
lods
in
push
loop
or
mov
addr16
jnp
xor
xchg
xor
mov
mov
xor
mov
pushf
test
add
add
pop
test
dec
stos
ret
add
lahf
daa
or
sqrtps
add
fnstenv
mov
dec
inc
push
cmp
xor
dec
repz
adc
lahf
sbb
mov
ret
inc
push
adc
or
push
push
shll
mov
push
mov
cmp
pop
in
mov
lea
in
fs
sub
in
add
pop
lock
sahf
into
fsubs
lods
movsb
push
add
mov
int3
inc
leave
hlt
call
fimuls
fisubrs
and
lds
push
into
cld
inc
jo
or
or
pop
adc
aad
xchg
add
and
sub
adc
pop
in
bnd
cld
push
int
xor
insb
scas
inc
movsl
jae
rcll
arpl
aam
mov
inc
xchg
in
test
sbb
push
dec
mov
shlb
push
xor
jo
pusha
bound
adc
dec
and
imul
dec
cli
scas
out
mov
lret
cmp
add
push
ret
div
lret
dec
jo
or
adc
xor
dec
mov
sbb
push
aam
hlt
adc
push
lahf
lods
fidivrl
pop
mov
or
xchg
out
cmp
xchg
jg
gs
push
mov
ret
dec
adc
movsb
addr16
or
or
pop
push
lret
add
sbb
push
xchg
or
add
sub
ja,pt
jg
push
or
mov
fpatan
push
ret
ss
jmp
jmp
and
dec
adc
les
xor
arpl
lret
ds
jae
cmp
jne,pn
lea
jecxz
sbb
sub
cmp
or
add
aaa
mov
lahf
mov
pop
cmp
lret
cmc
mov
mov
loopne
enter
pop
jns
in
adc
enter
cmp
shlb
or
in
imul
adc
push
cwtl
jl
adc
rorb
sbb
adc
mov
adc
fsts
sub
fimull
mov
add
push
sub
inc
mov
xlat
xchg
and
lcall
inc
lea
out
jae
cmp
js
xor
stc
push
mov
test
inc
hlt
mov
stc
cmpsb
pop
out
xchg
mov
mov
xchg
add
hlt
xchg
cmp
sbb
dec
inc
or
mov
adc
lahf
out
int3
lcall
push
push
rcrb
pusha
push
mov
lret
out
mov
in
or
inc
mov
push
mov
fidivrs
adc
nop
jnp
stos
shrb
nop
ja
adc
jle
aad
cmp
or
or
lahf
aam
ljmp
ss
push
sbb
out
mov
js
pop
adc
daa
or
sbb
xor
test
sbb
add
sbb
adc
or
and
add
shl
fmull
pushf
cmp
or
xchg
fsts
mov
cmpsb
and
dec
ffreep
enter
push
adc
or
outsb
push
aam
jbe
rol
pop
lret
adc
or
or
hlt
xor
fmull
ss
rorl
clc
mov
mov
inc
insb
or
xchg
aam
add
mov
roll
add
sub
lods
mov
and
xor
push
dec
fsubrp
je
enter
ret
cli
int3
add
les
jge
ljmp
in
adc
icebp
mov
faddl
in
inc
iret
jmp
imull
ret
pop
cli
mov
sahf
mov
jecxz
inc
fisttpll
mov
jbe
push
xchg
push
and
icebp
jae
xor
pop
repz
int
or
xor
scas
and
add
stos
ds
sub
push
inc
ljmp
fs
mov
push
or
pushf
xchg
push
add
xlat
mov
loope
sub
mov
pop
or
add
js,pn
arpl
leave
mov
lcall
xchg
cld
out
or
or
mov
es
js
pushf
pop
stc
mov
pop
push
fstpt
fs
shrl
leave
xor
push
dec
jmp
ljmp
mov
test
pusha
mov
mov
movsb
lock
out
jno
sub
mov
mov
lahf
push
loopne
nop
stc
arpl
outsl
stc
push
rclb
je
or
mov
pushf
loope
and
enter
rorl
sbb
xor
mov
sub
cmp
mov
jmp
in
ss
mov
sub
adc
pop
repnz
or
xchg
xor
xor
push
out
xor
inc
shll
icebp
fmuls
push
lahf
cld
dec
mov
or
push
dec
lds
bnd
bound
rcrb
bound
mov
aam
mov
or
nop
and
adc
and
xchg
ret
jno
mov
mov
adc
call
popf
stc
and
out
dec
jne
arpl
add
test
ret
jae
xchg
push
ficoms
lret
push
xchg
data16
mov
or
in
cmp
jecxz
mov
cmp
loopne
xchg
lahf
and
inc
into
xor
add
cmp
xchg
inc
pop
mov
xchg
out
stc
sbb
lds
add
push
sahf
movsb
dec
out
mov
or
or
adc
or
cmpsb
push
dec
xor
movsb
xlat
mov
les
mov
mov
dec
mov
lret
in
outsl
or
ficoml
mov
add
fisttpll
mov
push
mov
lods
adc
add
rorl
lahf
add
mov
aad
data16
mov
push
repnz
mov
dec
adc
repnz
popa
ret
sahf
push
int
mov
loope
push
lock
cld
stos
popa
repnz
ficoml
in
xchg
fstpt
adc
push
cmp
mov
push
push
mov
xchg
movl
popf
ja
pop
stc
cmp
mov
int3
push
and
aaa
push
cmp
and
rorl
and
adc
cmpsb
movl
int3
es
mov
dec
and
lds
or
cmp
adc
aad
sub
or
xchg
mov
mov
lods
rorb
mov
mov
push
nop
je
mov
adc
out
adc
lcall
or
push
sbb
les
mov
jbe
or
sbb
aad
cli
adc
xor
out
pop
cld
mov
mov
dec
loopne
icebp
imul
xchg
fucom
rclb
sub
dec
jl
adc
and
pop
repz
mov
jno
or
sbb
sub
mov
xchg
add
hlt
pop
fists
testb
addl
cmp
add
fbstp
jnp
ss
je
xchg
push
lret
cs
mov
loop
mov
aad
leave
xor
add
sub
idivl
add
push
sub
sbb
xchg
stc
push
dec
sub
lods
and
mov
pop
shrb
pop
mov
or
push
jg
test
xchg
mov
mov
adc
mov
jno
rcrl
loop
mov
cpuid
fs
push
ret
lock
or
mov
xchg
daa
xlat
xor
jbe
ljmp
sti
inc
jp
lahf
sti
add
fstl
jb
lcall
push
xchg
mov
fcomps
adc
or
adc
clc
mov
and
or
and
lds
lods
pop
push
inc
repz
mov
out
xor
jmp
add
shl
ret
and
fimuls
inc
pop
sar
add
push
test
in
imul
add
ds
dec
stc
mov
or
mov
push
mov
insb
push
lahf
jecxz
fnstsw
fisttpll
cs
mov
pop
pop
xchg
or
dec
scas
mov
and
jae
pop
sbb
mov
rorl
fucom
xchg
cmp
jecxz
or
dec
sbb
jle
xor
cld
add
lahf
push
nop
sub
cmp
and
add
ss
jle
repz
outsb
jecxz
fidivl
rcll
roll
jmp
popf
adc
jp
xchg
push
stc
cmp
cli
out
mov
push
pop
mov
mov
adc
jnp
jg
dec
xor
dec
shrb
mov
into
out
dec
or
pusha
enter
mov
dec
push
mov
shll
cmp
fadd
out
inc
fwait
mov
xchg
mov
stc
mov
mov
cmp
jge
add
sub
lret
or
or
stos
outsl
cmp
leave
mov
pop
paddb
or
or
pop
ljmp
aad
sar
outsb
and
push
jmp
add
mov
add
adc
fidivrs
lret
mov
inc
fistl
push
push
push
fisubrs
bound
repnz
mov
cmp
sub
adc
inc
pop
cmp
mov
popa
lcall
dec
scas
cmpsb
les
mov
jp
fwait
inc
cwtl
add
repz
pop
sbb
lahf
pop
mov
jo
pushf
sub
add
dec
mov
adc
sbb
nop
or
dec
add
add
js
enter
mov
sub
sub
cmp
mov
mov
fildl
mov
inc
cwtl
lock
adc
les
mov
sub
or
xor
mov
xchg
and
adc
mov
adc
adc
mov
xor
add
xchg
or
lahf
rcll
push
push
mov
outsl
imull
jnp
push
adc
adc
loopne
sbb
mov
in
sti
fsubl
push
and
into
jecxz
cmp
rol
push
cmp
imul
mov
mov
fmull
adc
ljmp
lea
mov
ljmp
fidivrs
hlt
outsl
inc
fmull
sub
vmovups
jmp
or
lret
add
xor
add
iret
rep
mov
shll
je
and
insl
andl
xchg
mov
adc
pop
test
out
jmp
cwtl
bound
mov
mov
lods
jae
adc
in
out
xor
ljmp
and
xchg
or
sbb
or
pushl
pop
xchg
ret
add
roll
xchg
push
sbb
add
mov
popf
sbb
popa
add
in
or
cmp
pop
clc
xchg
dec
sub
movsl
sub
push
pop
mov
lcall
push
fwait
es
cmc
xchg
xor
rclb
mul
sub
daa
ja
lret
push
mov
mov
add
shrl
jmp
stc
sbb
fisubrs
sbb
bound
dec
call
sbb
call
sbb
sub
out
mov
pop
fcoms
adc
inc
shrb
push
jb
mov
out
push
jo
xchg
test
ljmp
sbb
push
aad
not
out
ret
push
or
jno
int3
inc
out
pop
xor
mov
push
andl
dec
lock
or
xchg
inc
add
mov
and
mov
xor
mov
push
stc
fisubl
lods
lock
dec
gs
lock
mov
lock
mov
repz
fiaddl
add
in
adc
jl
lods
push
mov
hlt
les
xchg
mov
fistpll
jle
lods
fists
movsb
cmp
dec
dec
in
je
mov
mov
lcall
and
lods
mov
cmp
adc
sub
test
mov
jmp
in
mov
les
add
stos
mov
add
ret
fmull
mov
jns
jp
jmp
or
xor
jl
pop
or
fsts
xchg
int3
fisubs
loop
mov
aas
leave
lret
xchg
xlat
xchg
cmp
aaa
xchg
jmp
lahf
adc
add
mov
xchg
nop
bound
mov
rcrb
ja
in
clc
mov
lret
push
adc
neg
sbb
or
push
test
shll
push
mov
inc
sub
sbb
cmp
xchg
xlat
stos
xor
xlat
in
jg
mov
arpl
sbb
xchg
or
out
lods
xor
dec
cmpl
push
scas
sub
mov
testl
fld
lods
test
out
inc
lds
or
sbb
or
push
inc
or
repnz
adc
mov
mov
xor
mov
scas
sbb
sbb
or
push
mov
leave
push
dec
xor
movsl
mov
nop
lock
hlt
movsb
into
mov
movsb
dec
lret
mov
pop
add
stc
push
mov
cwtl
movsl
addr16
add
sbb
clc
lock
mov
push
std
adc
push
out
nop
pop
mov
into
lds
and
mov
scas
rcrl
fmull
sbb
outsb
add
out
mov
xor
stc
cmp
or
sbb
shlb
xchg
pop
mov
push
inc
jno
test
pop
push
scas
dec
mov
xor
fs
inc
sub
push
test
jge
pop
popa
aaa
or
pusha
fimuls
lods
mov
jecxz
adc
mov
lods
adc
mov
out
mov
test
add
leave
not
test
fiadds
or
mov
lret
or
les
daa
sbb
mov
pushf
sbbb
mov
pop
notb
or
ficomps
pop
outsb
dec
adc
in
sub
sbb
fmulp
mov
add
inc
inc
stos
stos
adc
out
jno
out
lock
and
or
xchg
mov
loopne
sub
nop
xlat
sbb
out
nop
adc
scas
hlt
xor
sub
in
arpl
fdivl
and
lcall
movsl
xor
arpl
adc
sub
mov
nop
notb
jmp
adcb
cli
stc
insl
outsl
repz
add
sarb
dec
negb
je
cwtl
lahf
mov
iret
lahf
add
loope
shrl
fildl
or
adc
sub
push
inc
shrl
mov
pop
mov
pop
ljmp
pop
sub
xlat
push
pusha
jb
repnz
in
pop
and
or
jnp
sub
aad
inc
or
adc
lea
push
mov
sarl
dec
and
xchg
add
xchg
or
in
ja
adc
adc
sub
add
mov
mov
add
add
or
ds
xor
jae
jnp
fwait
xlat
or
sub
sbb
test
jge
adcl
imulb
pop
mov
sub
jmp
sbbl
outsb
lcall
pop
or
or
sub
mov
insb
sarb
jge
repz
ds
add
xchg
addl
aaa
fildl
xchg
mov
cmp
push
aaa
jo
hlt
sbb
iret
sti
or
or
out
shll
enter
mov
fmul
push
pop
xor
iret
je
mov
enter
enter
dec
cmc
push
call
sbb
add
or
mov
leave
jg
je
adc
enter
aam
test
mov
shlb
mov
enter
out
cmp
lods
sbb
je
adc
movl
fsubrs
shlb
mov
js
push
int3
pop
outsl
ret
je
imul
sbb
push
je
cmp
push
mov
out
push
cmp
cli
mov
out
aam
out
and
mov
das
xor
sbb
adc
adc
pop
sti
push
adc
mov
xchg
jle
pop
test
xchg
inc
push
hlt
js
dec
push
xor
dec
jl
mov
mov
repz
mov
in
pop
shrl
bound
add
loopne
sahf
push
aaa
mov
fisubrs
xor
adc
imul
dec
ret
fiadds
into
push
jno
mov
outsb
out
inc
sub
mov
xor
out
ret
leave
xor
xchg
mov
lea
stc
fs
out
into
in
int
push
and
pop
call
dec
mov
adc
mov
push
push
pop
push
dec
inc
cmp
xor
mov
imul
xchg
mull
or
add
or
inc
add
ret
jl
lcall
mov
add
call
js
repnz
add
push
in
mov
sbb
fmull
cmp
lds
mov
int
push
ss
cmp
int
jae
nop
sub
xor
pop
or
xor
jge
popa
fidivrl
sub
out
sbb
into
mov
into
cmp
cmp
adc
outsb
cmp
rcrb
cmp
or
dec
add
cwtl
cltd
loopne
xor
enter
sub
sbb
mov
xchg
inc
sahf
and
mov
adc
sub
daa
stc
mov
ljmp
int
insb
mov
and
or
and
loope
mov
adc
xchg
jg
aam
nop
xor
in
sub
mov
shl
sbb
add
add
pop
in
or
sub
cmp
cmp
dec
ffreep
adc
cli
pop
stc
sub
pop
cmc
adc
and
mov
mov
adc
pop
stc
dec
ret
mov
fstpt
mov
lret
loope
movsb
repz
push
sbb
add
mov
dec
or
repnz
sbb
les
pop
int3
loop
push
shlb
fnstsw
aad
repz
fcmovbe
xchg
adc
jne
dec
push
stc
adc
mov
sti
fistpll
hlt
lock
movsb
rcl
or
adc
inc
dec
adc
adc
mov
fsubrl
shr
add
mov
aad
fstpl
shlb
xchg
data16
dec
mov
and
dec
or
or
rcll
cmp
rorl
lock
or
inc
fdecstp
push
xor
push
fidivl
ss
lods
or
push
lods
or
jle
outsb
lock
repz
dec
or
cmpl
push
mov
stos
mov
add
lock
shrb
jb
jl
inc
subl
adc
ror
mov
mov
int3
cwtl
subl
inc
sub
xchg
test
xor
out
test
faddl
cmpsb
lock
xchg
dec
adc
cli
outsb
push
or
xor
int
insl
xchg
int3
iret
imul
sub
push
sbb
ret
jmp
data16
xlat
push
int3
adc
stc
mov
or
loope
rclb
push
testb
repz
add
ret
in
cld
add
adc
test
mov
out
cmp
mov
cld
mov
std
or
and
scas
push
or
movsb
shrl
mov
sti
cmpsb
cltd
pop
cmp
test
mov
lahf
mov
mov
outsb
add
sbb
aam
aad
sahf
mov
push
adc
aam
jecxz
cmp
movsb
cmp
mov
sub
and
xchg
push
xchg
mov
xchg
fcmovu
hlt
lock
test
mov
inc
sbb
in
cmpsb
sbb
sub
aad
psrlw
mov
pop
jbe
pop
std
gs
imul
cmp
cmpsl
add
into
cld
jge
mov
lahf
jmp
mov
call
push
cmpsb
lods
test
stc
out
xchg
mov
out
sar
scas
imul
fidivrs
jmp
xchg
enter
pop
lret
sbb
xlat
jecxz
iret
repnz
loop
lock
adc
jae
lret
push
popa
fisubrl
idiv
daa
loop
rorb
movsb
lock
push
out
sbb
mov
xchg
mov
scas
add
rep
leave
mov
lahf
sahf
in
in
add
mov
push
inc
out
in
shrl
repz
lahf
pop
mov
loope
out
mov
fstpt
sarb
js
aam
test
add
and
adc
mov
pop
pop
sahf
sbb
iret
pop
mov
adc
in
jge
push
les
jecxz
dec
cmpsl
mov
pop
fmuls
movsl
mov
fwait
insb
or
add
repz
repz
cmp
hlt
shlb
mov
clc
ret
lock
movsb
or
scas
adc
and
imul
faddl
mov
hlt
add
cmp
pop
mov
shrb
lods
out
mov
adc
orl
jecxz
add
rcrl
xchg
cld
or
inc
repz
repz
adcl
pushf
xchg
iret
outsb
add
pusha
jns
push
or
xchg
cwtl
scas
add
adc
outsl
add
fisubrs
popa
mov
jmp
aam
test
push
xor
add
fwait
mov
dec
gs
xor
jmp
jnp
repz
adc
xor
lock
pop
js
arpl
mov
insb
jg
or
push
xor
scas
loopne
stos
cli
xchg
inc
sarl
rcrl
iret
mov
shrl
mov
adc
iret
jbe
xor
jne
mov
push
testl
inc
push
test
leave
or
or
rorl
iret
enter
daa
enter
or
adc
push
sub
insl
cmp
or
subb
insl
mov
cmpsl
sub
shrb
cmp
cmp
add
das
lcall
jns
push
dec
or
pop
repz
jp
aam
jb
add
sub
jmp
int
loopne
jb
pop
pop
les
mov
out
loop
ret
sarl
add
stos
inc
mov
repnz
shll
scas
movsl
es
sbb
adc
mov
stos
xchg
mov
push
lock
aam
mov
inc
cli
testb
cmpsl
add
sahf
fcomps
movsb
and
sbb
lea
adc
call
sub
movsl
mov
push
adc
add
mov
sbb
cwtl
orb
out
out
outsl
fsubrs
lahf
orl
stos
xchg
xor
int3
add
out
movsl
add
jb
push
jne
adc
lcall
fmuls
add
mov
cmp
stos
clc
in
outsl
ljmp
popa
pop
push
movsb
enter
pushf
mov
mov
scas
call
add
sahf
bound
shl
test
or
xchg
lock
jb
testb
insl
mov
popf
adc
xor
iret
mov
cmpsl
outsl
mov
sbb
mov
leave
outsl
je
add
stos
sub
iret
fisubs
dec
lret
addr16
loope
test
pop
and
movsb
dec
in
inc
int
sbb
push
dec
adc
sub
fwait
adc
je
icebp
aam
or
add
add
jmp
or
or
jmp
add
sbb
rcll
arpl
cmpsl
mov
orl
mov
int3
insb
andl
rolb
mov
add
out
enter
inc
or
xchg
or
xchg
adc
adc
jae
jae
jae
jae
jl
jbe
add
add
and
or
lods
imul
fstpl
out
out
sbb
or
xchg
iret
daa
in
inc
cmp
mov
popl
fisubs
cli
pop
js
cmp
stos
lods
nop
loope
or
add
outsb
push
test
lahf
xorb
add
popf
movsb
stc
push
lea
jecxz
mov
inc
mov
inc
push
mov
push
clc
leave
xlat
ror
push
rorb
lds
lea
or
inc
in
insl
repz
divb
xor
sbb
scas
mov
and
dec
ds
push
hlt
shlb
int3
lret
enter
shrb
xchg
inc
pop
ror
out
lret
rorl
mov
dec
xor
jge
je
aas
jnp
ss
adc
adc
gs
hlt
adc
inc
pop
sbbb
adc
xor
std
xor
cwtl
mov
or
or
rclb
stc
adc
mov
add
push
lock
xchg
addl
mov
sbb
add
sbb
pop
rorl
sbb
mov
mov
or
cmp
int3
xor
mov
cmc
cld
or
cwtl
adc
mov
jno
mov
or
rcrb
adc
orl
adc
xor
andl
iret
mov
adc
icebp
pushf
jo
aam
mov
add
or
mov
push
sarb
or
insb
rcrl
jae
pop
adcb
mov
in
xor
jle
inc
jb
jmp
in
lods
sub
fldcw
or
das
xchg
je
xchg
stos
add
pop
push
push
cmp
jecxz
mov
or
adc
sbb
sti
and
xor
mov
les
adc
jmp
adc
sbbl
mov
push
lock
or
fwait
sbb
push
jmp
clc
xchg
or
add
add
xchg
sbb
add
das
fwait
sbb
outsb
aam
fstpt
cmpsl
repnz
mov
in
mov
jmp
or
xchg
das
nop
loop
xor
lret
scas
xchg
mov
insl
sbb
xchg
roll
pop
mov
jg
cmp
xor
out
add
fsubrs
adc
jb
sahf
adc
xor
pop
hlt
jmp
adc
mov
mov
rcrl
rcll
mov
pop
mov
scas
add
andl
shrb
mov
inc
lock
int3
je
pusha
repnz
pushf
add
orl
mov
int3
lods
sbb
rol
in
rcl
clc
loopne
in
add
adcl
mov
mov
orl
addl
xchg
jg
iret
mov
xor
add
mov
lret
ror
add
shl
cmp
test
fnstcw
add
lock
int3
fiaddl
pop
or
int3
and
push
loop
or
lock
ret
loopne
cli
enter
sahf
mov
inc
lock
add
movl
into
in
psrad
int3
fdivl
iret
xor
mov
insl
in
xchg
in
adc
sbb
pop
add
adc
xchg
in
orb
mov
dec
in
loopne
fisubs
aad
or
or
add
push
lds
adc
or
rcrb
and
js
or
adc
adc
jmp
fdivs
xchg
mov
push
cmpsb
shrd
add
sbb
loope
xchg
cld
adc
loopne
mov
ljmp
cmpsl
adc
inc
jmp
or
sbb
jecxz
lock
xor
sar
lret
bound
mov
nop
mov
mov
in
sbb
dec
mov
mov
dec
ret
cmp
test
mov
fmuls
add
pop
scas
test
call
call
cli
ljmp
fsubp
add
ljmp
lods
inc
xchg
mov
clc
adc
fwait
enter
lock
push
scas
lods
xlat
lods
mov
arpl
mov
aaa
in
fwait
imul
daa
loop
mov
hlt
rcrb
dec
sbb
test
faddl
jo
sub
lret
out
loopne
dec
adc
loopne
mov
lahf
outsb
enter
mov
enter
adc
mov
mov
sbb
ror
cmpb
sbb
pop
shll
hlt
adc
data16
lock
cli
lret
cmpsb
push
push
hlt
out
enter
fs
iret
mov
xchg
mov
stos
daa
adc
or
adc
loope
je
adc
xor
lock
add
filds
mov
lea
mov
lea
nop
shlb
mov
and
repnz
mov
add
faddl
or
sbb
xchg
adc
jge
mov
mov
test
mov
xor
adc
xor
shll
imul
out
adc
icebp
mov
popf
inc
adc
cmc
pop
adc
notl
or
in
or
lcall
push
cmp
push
enter
in
das
and
push
out
inc
out
loopne
stc
and
and
and
and
dec
and
and
and
xor
or
sbb
daa
xchg
adc
xchg
fistl
xchg
mov
lods
xchg
cmpsl
xchg
mov
xchg
xor
sbb
cmc
int
lods
enter
sub
loope
dec
push
inc
dec
pop
pop
push
xor
and
cmp
loopne
or
loop
std
mov
stos
mov
mov
mov
mov
sbb
xchg
ret
xchg
mov
push
test
pop
xchg
push
xchg
and
ds
aaa
lea
adc
lods
sti
imulb
dec
shrl
ja
push
sub
cmp
sbb
inc
ljmp
and
cmp
cmp
cld
mov
lret
mov
arpl
xor
xchg
cmc
sbb
xchg
dec
push
inc
xchg
push
jl
cli
out
xchg
loopne
rcll
dec
push
inc
xchg
push
xchg
and
or
mov
push
push
clc
sub
idiv
dec
hlt
inc
ficompl
push
mov
mulb
mov
sub
cmc
mov
jg,pt
xor
lea
in
in
out
cli
lods
lret
insl
fmull
sub
fwait
sub
dec
sub
xor
jmp
incb
pop
lds
sub
cmp
cmp
loop
sbb
mov
movsb
mov
mov
int3
mov
ror
cmp
popa
cmp
push
cmp
push
sbb
and
add
test
mov
xchg
inc
xchg
push
lea
stos
in
movsb
lds
jns
je
xor
fisttps
lods
sub
in
lods
int
scas
dec
or
cld
nop
cli
xor
pop
xchg
jp
dec
push
cmp
or
sbb
cli
int
lods
rorl
mov
sub
ja
dec
sub
or
add
inc
jmp
loope
lret
cmc
mov
mov
test
jg
data16
pusha
pop
icebp
stc
jmp
int
faddl
push
mov
xchg
test
jnp
dec
inc
sub
push
or
jno
popa
mov
xor
and
aas
and
and
negl
xor
and
and
cmp
add
xchg
mov
mov
mov
mov
lret
cmp
sti
adc
clc
in
loopne
ret
cmc
mov
cmc
jl
js
je
push
cmc
dec
cmc
dec
cmc
inc
pop
sbb
adc
inc
call
xorl
mov
mov
lods
loope
lahf
xchg
lds
inc
fs
cmp
add
shl
int3
cmc
fdiv
mov
lahf
cmc
mov
xor
jo
arpl
inc
hlt
xchg
push
xorl
adc
or
inc
pop
add
adc
or
adc
in
inc
out
cld
lret
imulb
lret
sub
adc
and
stc
bound
jbe
inc
sub
xor
sbb
clc
lock
call
not
test
inc
cmc
pop
cmc
xor
sub
adc
or
and
sbb
fcomip
stc
not
cmc
ret
cmc
popf
cmc
cmp
pushf
xchg
lods
cmc
lahf
adcl
test
mov
xor
cmp
adc
or
add
push
push
lock
fbstp
ret
aam
loope
xor
sti
loopne
cli
insb
stc
arpl
data16
inc
xchg
sub
call
or
xchg
ret
pop
stos
xchg
mov
push
xchg
cmp
xchg
jge
aaa
lea
cld
pop
in
jecxz
adc
and
and
andb
jbe
add
out
xchg
sbb
xchg
mov
jbe
and
adc
sbb
insl
cs
stc
fldl
lods
lds
inc
aas
inc
pop
inc
push
inc
xor
inc
sub
inc
and
push
sar
int3
insl
xor
lods
rorb
sub
and
and
add
xor
push
mov
sti
inc
pop
cmp
cmp
sub
lock
adc
add
lock
in
cli
cmp
clc
insb
out
enter
scas
xchg
adc
out
adc
int3
jno
jge
push
test
js
dec
dec
inc
adc
cmp
sti
in
cli
pusha
stc
js
push
call
popf
xor
lcall
rol
add
call
in
mov
mov
loope
dec
pushf
inc
cwtl
js
je
mov
sbb
fbld
pop
mov
mov
cmc
test
xor
cmc
cwtl
cmc
xchg
cmc
jo
insb
cmc
push
cli
xchg
js
je
push
xchg
dec
xchg
dec
xchg
inc
xchg
inc
xchg
pop
xchg
pop
xchg
push
xchg
xor
and
and
int3
cmp
sti
cli
or
notl
in
call
cld
cmp
mov
mov
lret
sub
addr16
xor
jl
pop
cmp
and
inc
push
js
push
popa
lahf
push
add
pop
or
inc
inc
cwtl
pop
in
and
mov
mov
loope
scas
mov
fstps
cld
dec
inc
mov
arpl
pusha
daa
jno
xchg
or
adc
add
inc
jb
jp
repz
pop
je
rcll
mov
jl
scas
test
mov
pop
sub
cmp
mov
and
push
jp
pop
mov
pop
fisubl
xor
add
mov
xor
inc
xor
fs
push
dec
jbe
inc
jns
jle
xor
pop
dec
jnp
jl
sub
inc
sub
inc
pop
jne
jb
add
dec
pop
push
fs
jnp
cwtl
je
dec
aas
jns
call
and
fs
sub
cmp
aas
aaa
popa
jno
inc
push
jge
cmp
jae
lock
add
push
test
xor
push
jns
sbb
popa
sub
imul
inc
lods
adc
adc
stos
lods
hlt
sbb
mov
mov
lds
mov
shll
popa
repnz
ficoms
repnz
mov
adc
or
adc
mov
add
iret
fnstenv
out
jnp
addr16
arpl
pop
inc
xrelease
dec
sub
rcrb
cmc
inc
inc
inc
adc
push
arpl
xor
pop
sar
fcomps
mov
test
cmpsl
test
and
test
cmp
leave
lret
cmp
mov
pop
movsl
cmpsl
push
call
mov
add
ljmp
mov
pop
shl
jecxz
jne
and
push
loop
and
in
mul
stos
pop
shll
fisttpl
out
jo
fbstp
sbb
out
inc
cmpsb
out
push
pop
cli
jnp
push
pop
insb
fs
mov
cmpsb
lods
stos
out
fcompp
repz
je
xor
arpl
inc
pop
inc
push
sti
jns
mov
jge
or
lock
jmp
push
dec
sub
lea
add
ret
or
cmpl
add
jge
add
push
insb
dec
daa
rcr
xor
jns
dec
push
xor
jnp
jno
out
icebp
adc
or
mov
push
popa
dec
inc
push
push
pop
dec
cs
in
jge
jne
inc
cmp
mov
mov
cmp
hlt
or
inc
aaa
in
inc
stos
push
lods
add
into
jle
xchg
add
lahf
pop
mov
dec
jnp
sti
dec
pop
pop
dec
pop
inc
mov
jp
xchg
mov
pop
bound
mov
adc
sbbb
jnp
fs
dec
arpl
pop
js
movsl
push
mov
xor
mov
pop
lret
inc
xchg
popa
inc
pop
ds
dec
push
xchg
add
add
rcll
ret
adc
sub
dec
cmp
inc
lock
dec
ret
dec
lret
aam
jbe
call
int3
vcomiss
cmp
adc
xor
cld
add
inc
pop
jnp
or
push
fsubl
sub
aad
adc
push
inc
and
dec
enter
js,pn
pusha
lods
in
push
xchg
dec
and
adc
or
jbe
rorb
cmp
mov
xchg
lods
push
cmpsb
jle
sbbb
testl
arpl
jbe
inc
pop
mov
test
cmp
inc
addr16
inc
lock
scas
loopne
jb
out
push
push
inc
aaa
xor
add
mov
xor
push
ja
fs
shlb
pop
hlt
pop
inc
cmp
aas
jbe
mov
sti
lret
std
xor
arpl
ja
inc
push
inc
dec
inc
and
sub
push
js
int3
cmp
das
pop
adcb
mov
push
inc
lcall
cmpb
add
adc
xchg
in
notb
fistl
fsubrl
loop
idivl
xchg
shll
mov
rol
mov
jp
dec
clc
in
cmpsb
hlt
pop
sti
cmpsl
add
sets
cmpsb
movsb
movsl
lahf
test
mov
popf
fcmovnu
push
and
adc
dec
filds
mov
add
inc
dec
jge
push
mov
test
add
into
push
jnp
int
jne
inc
push
mov
jmp
sub
mov
shr
movsl
push
adc
add
divl
repnz
dec
push
ds
mov
movsl
cmp
inc
enter
add
add
mov
jmp
mov
xor
pop
lds
loope
aad
fwait
rcrl
notb
push
iret
shll
mov
mov
lods
insl
dec
testl
lret
mov
in
adc
mov
add
mov
subb
mov
jecxz
insl
xor
loope
fistps
sti
in
push
jecxz
shll
sbb
and
loop
cmp
movsb
cmc
mov
enter
xor
loope
std
cld
sti
adc
rcl
ror
into
mov
int
hlt
mov
aam
rolb
je
add
push
dec
mov
adc
cltd
xor
xlat
lret
xchg
and
mov
je
lds
repnz
aad
xlat
push
mov
movsb
mov
dec
push
repz
stos
ret
xchg
stc
adc
mov
mov
movsl
shll
cwtl
push
sbb
push
adc
jmp
pop
mov
sub
add
outsl
pop
repz
popf
push
das
shlb
movsb
inc
rcl
popa
mov
jecxz
lock
stos
pop
mov
movsl
fcomp
dec
sbb
shl
ja
dec
mov
inc
gs
xchg
sbb
sub
or
shlb
add
test
xchg
ja
xor
les
cmp
mov
lods
cmpsl
push
cmpl
movsb
push
gs
jmp
fdivl
test
sahf
repz
or
inc
mov
ret
rol
fists
xor
rcrb
inc
xchg
aas
or
out
lds
cmpsb
aas
call
pop
add
stos
add
inc
mov
addb
fnsave
test
sub
sub
je
cmp
rorl
in
xchg
adc
add
ficompl
add
pop
pop
jns
push
rolb
mov
pop
mov
jb
fnstenv
xchg
xchg
imul
xchg
loopne
nop
xor
add
sbb
dec
add
pop
sbb
enter
sub
xchg
add
les
pop
out
jne
push
mov
jmp
in
jnp
aad
inc
pop
rcrb
hlt
dec
add
xchg
fcmovne
repnz
ljmp
xchg
icebp
push
lods
sbb
push
sbb
mov
outsb
push
into
call
stos
loop
sbb
ficompl
in
xlat
dec
bound
cwtl
adc
or
push
xchg
inc
adc
sub
and
out
faddl
push
push
or
lods
js
sar
jns
or
shrb
sbb
add
jle
add
dec
jmp
inc
es
loop
sbb
adc
or
jno
adc
xchg
in
fisttpl
cmpsl
rolb
adc
fcomps
ljmp
outsl
add
inc
or
push
mov
iret
add
idiv
xor
push
leave
int3
rcll
mov
ffree
jae
fcmovb
and
fdivrs
ficomps
mov
fisttpl
lods
mov
test
test
and
lods
sarl
cmp
mov
xor
stos
aam
hlt
sbb
or
fadds
fdivrl
not
mov
fsubs
shll
into
push
enter
int3
iret
mulb
hlt
test
add
in
aad
and
leave
cmp
hlt
fst
pop
rcrl
mov
mov
or
inc
mov
or
or
mov
lods
or
movsb
lods
mov
push
movsl
sbbl
les
add
mov
lcall
movsw
iret
fwait
es
rorl
cmp
fisubrs
sub
rcr
cwtl
std
lcall
test
push
popa
fildll
jl
bound
lea
test
push
pushf
fildl
push
jbe
jns
fwait
xlat
jg
xchg
mov
mov
mov
mov
xchg
jb
cltd
push
movsb
fistpll
popf
les
jae
notb
pushf
adc
test
ret
les
or
push
fidivrs
and
enter
add
and
gs
jb
or
daa
in
clc
pushf
cmp
cmp
idiv
je
cs
xor
jp
arpl
xchg
cmp
negb
arpl
mov
jbe
xor
das
jae
xor
test
ljmp
pop
sbb
cmp
push
aaa
cmp
lock
add
add
fldlg2
ret
and
repz
adc
xor
mov
dec
jecxz
dec
sub
es
lret
arpl
sub
sub
and
adc
cltd
jnp
xchg
mov
das
add
repz
cmp
addr16
sbb
add
cwtl
push
sub
sub
xchg
cmp
cmp
aaa
in
push
and
sbb
in
mov
jl
adc
mov
nop
mov
lds
mov
ficoms
and
fs
rcr
jbe
pushf
rolb
sti
and
lods
xchg
js
sub
mov
adc
xchg
and
je
jmp
mov
push
and
stos
xchg
or
dec
adc
leave
xchg
js
roll
sbb
and
rorb
jb
pushf
repz
pop
jb
mov
inc
nop
loopne
inc
xchg
nop
push
xchg
xchg
aam
mov
fcmovu
or
int3
aad
out
mov
ret
inc
out
dec
push
add
ds
int3
xchg
daa
adc
sub
add
rorl
adc
add
dec
sub
insb
and
sbbb
sbb
adc
je
les
ret
insb
test
adc
cmpsl
mov
aad
cmpsb
dec
add
in
dec
jo
pop
mov
jecxz
xor
cmp
and
and
sub
daa
or
mov
xchg
xor
cwtl
push
dec
ficoms
mov
shrl
adc
xor
xor
cmp
rcll
pop
and
in
lock
int3
pop
fdiv
and
outsb
xchg
nop
adc
pause
stos
scas
push
scas
aad
cmp
push
in
movsb
or
lods
cmp
pusha
mov
je
les
push
es
pop
fwait
sbb
out
mov
sub
push
push
jns
imul
cmp
loope
mov
inc
fcoml
xchg
jo
clc
les
fisttpll
ds
xorl
enter
movsb
xchg
fcoms
mov
lods
jg
sbb
mov
push
in
push
mov
test
movsb
out
inc
pushf
adc
or
sbb
inc
shl
pushf
daa
or
cmp
leave
sbb
cld
and
insl
push
jo
insb
add
push
add
cmp
pop
pop
cmp
adc
enter
and
addl
adc
xchg
sub
lahf
repz
inc
xor
pop
xor
inc
bound
pop
jecxz
cmp
ficoms
loop
pop
mov
push
sbb
das
cmc
les
int3
dec
xor
addr16
xor
dec
outsb
jp
mov
adc
cmp
xlat
and
mov
jo
jmp
mov
and
lock
inc
enter
xorl
nop
mov
loopne
or
cmp
xchg
in
in
lcall
sub
pushf
xor
or
jl
or
test
daa
pushf
cld
add
inc
xchg
pushf
call
or
or
les
sub
loopne
sub
and
les
int3
ret
xor
lock
mov
xchg
and
mov
sub
mov
cmpsl
cmp
stos
adc
or
mov
xchg
cs
test
inc
sub
ja
pusha
dec
pushf
cmpb
mov
and
adc
push
adc
jmp
push
inc
dec
hlt
adc
fstpt
xchg
mov
dec
sub
ljmp
xchg
in
enter
js
adc
icebp
push
adc
mov
xchg
mov
mov
mov
xor
movsl
adc
sbb
mov
mov
lea
jge
mov
dec
xchg
pusha
jg
cmp
fsubrl
clc
gs
add
inc
or
inc
lock
insb
adc
push
cmp
push
div
dec
fcompl
inc
and
pop
jl
mov
dec
dec
les
inc
sub
sbb
insb
mov
xchg
dec
pushf
mov
mov
outsb
lea
mov
mov
xchg
mov
mov
or
or
mov
mov
mov
in
sbb
pushf
or
mov
popa
xchg
dec
ja
push
or
pushf
sbb
or
inc
xchg
and
xchg
pop
xor
mov
mov
inc
inc
dec
jns
inc
mov
cmp
idivb
mov
int3
push
cltd
je
addl
cld
jbe
sbb
mov
adc
mov
daa
and
mov
mov
pop
cwtl
lcall
mov
popa
push
pcmpeqd
jae
mov
dec
xchg
sub
inc
daa
adc
dec
je
cs
pushf
test
pop
addb
sti
dec
loopne
sbb
jp
lock
mov
sahf
push
lcall
mov
xor
xor
popa
mov
mov
xchg
mov
adc
nop
push
xchg
jl
insb
jo
enter
dec
les
dec
mov
adc
push
dec
cmp
xor
fcoms
sbb
inc
dec
insb
jo
add
add
add
adc
add
cmp
push
in
xchg
mov
insb
jg
hlt
xor
mov
mov
fs
mov
cmp
mov
repz
int3
fwait
mov
jo
xchg
xorb
arpl
ja
adc
je
aam
stos
push
and
call
repz
mov
dec
or
sidtl
int3
call
popa
pop
mov
pushf
int3
xor
pushf
push
imul
arpl
xchg
in
mov
mov
int3
movsl
xor
and
pushf
jle
mov
dec
sub
js
add
imul
fs
jnp
cmp
dec
jns
pop
ficompl
xor
xor
pop
push
ja
jecxz
add
sub
les
push
xlat
mov
or
icebp
xchg
loopne
in
in
pop
cmc
pop
insb
add
pusha
sbb
sbb
inc
fists
cld
pushf
xchg
mov
sub
xor
lcall
dec
mov
cmp
push
mov
dec
add
push
mov
popf
in
jne
jae
dec
xchg
repz
dec
imul
lret
mov
sbb
dec
and
stos
push
insb
add
or
test
daa
xchg
pushf
xor
sbb
cld
sub
nop
cwtl
cmp
push
cmp
out
adcl
mov
sub
cmp
test
scas
mov
addr16
and
sub
cld
aam
xor
sbb
out
sub
aam
and
mov
pop
push
pop
cmp
aas
push
inc
pop
movsb
push
pop
pusha
adc
adc
sbb
and
mov
xor
mov
orb
push
push
push
pushf
xor
aam
test
lea
out
xchg
mov
mov
inc
xor
mov
add
adc
sub
out
pop
inc
rcl
pop
mov
popf
or
out
sbb
and
dec
jecxz
loop
inc
jns
test
loop
inc
int3
mov
add
in
sbb
mov
sarb
sub
sbb
cld
rorb
and
fcoml
popa
mov
or
mov
jmp
cmp
xor
lods
cmpsb
mov
mov
mov
pop
mov
push
enter
add
pop
cs
int3
push
and
dec
xchg
shll
xor
je
jle
and
xchg
inc
push
lret
adc
and
hlt
pushf
inc
fiaddl
or
divl
negb
call
lock
enter
cwtl
mov
nop
cmp
sub
rorl
pop
lock
add
lds
sbb
daa
movsb
icebp
mov
lods
jne
pop
or
daa
mov
inc
lahf
rep
pop
call
nop
dec
imul
dec
lcall
repnz
dec
mov
fs
adc
int3
ds
cld
repz
popf
mov
cmp
mov
hlt
mov
cmpsl
cmp
inc
scas
int
xchg
fsubr
mov
adc
pop
and
add
push
add
adc
enter
mov
jae
dec
mov
pop
nop
jbe
cwtl
test
sub
dec
lea
adc
out
jns
adc
shll
dec
in
cmp
cmp
fs
int3
sbb
push
imul
mov
test
scas
add
jae
pop
sbb
das
sbb
je
sahf
adc
jae
jle
mov
dec
or
out
js
mov
cmp
add
fmull
and
or
xchg
aam
lret
nop
pushf
cmp
in
pop
repnz
jne
movsl
pushf
sbb
mov
sbb
in
nop
dec
ret
adc
mov
mov
subb
pop
mov
cld
cmp
shll
push
adc
mov
cld
les
and
pop
pop
fsubr
in
or
arpl
bound
mov
add
test
sub
test
out
xchg
jb
sbb
das
and
push
pushf
mov
pop
aam
or
shll
sub
sbb
cmp
sub
ds
xor
shl
push
hlt
sbb
add
lods
pop
add
lods
or
fdivs
pop
mov
add
fidivrl
add
mov
dec
add
pop
ficoml
or
movaps
dec
lret
and
jp
push
or
xor
or
cld
in
cld
imul
nop
pop
call
jbe
pop
mov
xor
cmp
mov
mov
lea
pushf
mov
movsl
adc
xlat
aam
xchg
nop
mov
add
orl
arpl
pmulhuw
nop
push
push
ret
outsb
movsb
cld
es
or
mov
addb
test
or
jo
bound
xorb
lods
test
add
jle
and
cmp
scas
lods
cmp
ret
or
ret
or
test
pushf
mov
sahf
cmpsl
in
mov
xchg
cwtl
xchg
adc
pop
mov
or
fstl
cmp
scas
xchg
sub
mov
test
insl
aam
test
xchg
pop
cmc
mov
mov
in
lcall
xchg
mov
and
shll
ficoms
cmp
test
add
rclb
or
out
push
movsb
adc
mov
mov
call
push
cmp
inc
pop
cmp
cmpsl
mov
push
xchg
add
mov
js
and
pop
push
sbb
test
into
inc
stos
stos
cmp
sub
lods
and
loopne
pop
push
cmp
and
lret
jg
test
or
fcomi
adc
loopne
mov
xchg
xor
adc
mov
mov
and
pop
mov
push
sub
mov
jge
fcoml
pop
sub
sub
movsb
rcrb
add
lret
test
sub
inc
cmp
adc
nop
ljmp
dec
and
js
dec
pop
aam
dec
push
push
pop
inc
push
pop
inc
xchg
xchg
dec
jle
arpl
outsb
and
push
jae
sub
lds
and
divb
popa
inc
mov
pop
mov
jae
sub
mov
add
mov
stc
stos
fadd
cli
scas
popf
hlt
mov
mov
in
xchg
jne
movsb
adc
or
push
cmp
imul
push
sbb
lds
insl
mov
xor
adc
mov
popf
and
push
xor
fisubrs
cmpsl
gs
das
jae
mov
cmp
push
mov
or
xchg
jnp
jns
call
js
pop
das
xchg
cld
cmp
cmp
mov
or
add
int
sub
xlat
add
xchg
or
inc
inc
mov
call
je
ds
pop
push
pop
mov
cmc
or
fwait
mov
bound
push
arpl
mov
jecxz
jb
mov
or
adc
lds
cmp
or
lahf
cmpps
data16
in
and
sahf
xchg
mov
insl
sub
insl
and
ficoms
lret
popf
insl
mov
popa
or
sub
aam
dec
adc
pusha
inc
dec
inc
jp
js
out
jne
inc
daa
out
mov
pop
gs
xlat
adc
dec
jle
cmpsb
dec
pop
adc
lcall
outsl
aaa
fwait
or
cmp
jo
adc
adc
mov
jo
sub
aaa
and
jne
mov
push
mov
cmp
sub
shl
mov
dec
arpl
xor
jp
repnz
faddl
adc
jle
jbe
into
out
shlb
add
mov
or
pop
pop
pop
push
outsb
or
test
adc
sbb
inc
xchg
dec
bswap
pop
mulb
out
sbb
negb
lea
jmp
int
dec
inc
push
or
mov
jecxz
test
cmp
ret
es
test
shll
ret
jecxz
repz
test
pop
aad
mov
aaa
cld
push
dec
or
xchg
hlt
stos
sbb
push
rolb
xchg
hlt
test
sub
out
movsb
hlt
insb
adc
xor
push
clc
rolb
hlt
push
repnz
adc
fs
int
lock
adc
lea
fbld
sbb
imul
test
or
int3
in
outsl
add
and
add
adc
dec
jecxz
cmp
movsb
aam
call
dec
jecxz
mov
in
xchg
jb
movsb
sbb
jl
movsb
dec
mov
rcrl
and
adc
sbb
movsb
gs
je
add
in
add
pushf
mov
push
repnz
and
in
not
adc
jmp
sbb
sbb
cltd
add
hlt
xor
sbb
adc
pop
lds
mov
push
mov
mov
mov
fs
lahf
js
fisubs
push
pop
mov
xchg
jmp
mov
shll
inc
jbe
test
pushf
mov
add
je
and
cld
arpl
dec
mov
push
ss
ja
insb
add
xor
rclb
fmulp
movsb
sbb
pop
bnd
push
or
add
sub
sarb
add
insb
mov
adc
xchg
aam
adc
xchg
sbb
push
dec
dec
cmc
xchg
or
lods
push
fs
pop
mov
jo
or
mov
cmp
dec
hlt
loop
cmp
iret
xchg
mov
push
nop
mov
mulb
mov
inc
lds
stos
mov
add
push
inc
xorl
fs
clc
fs
or
cmp
inc
jo
int
dec
and
mov
mov
add
adc
movsb
jmp
hlt
pushf
and
xchg
popf
and
push
pop
push
fs
les
xor
stos
negb
xor
pop
mov
adc
pop
mul
jmp
sbb
in
xor
cli
in
fdivr
sub
push
in
xor
xchg
loop
push
movsb
pop
push
mov
jecxz
mov
fs
mov
xchg
push
test
test
in
mov
push
ja
add
push
add
mov
push
mov
or
inc
push
lds
in
mov
bnd
movsb
pop
idiv
andl
sub
into
xor
les
arpl
es
mov
testb
testb
xor
cmpsl
insl
dec
push
add
xor
xor
xor
cmpsb
divb
dec
add
imul
adc
and
sub
testb
sub
sub
cmp
das
dec
movsb
push
das
cmc
mov
add
jg
or
sub
fmull
les
cmp
adc
sub
sub
or
sub
push
or
cmpsb
pop
mov
fmull
push
cmp
fs
add
xor
mov
cmp
push
pop
cmp
or
outsl
and
mov
repz
movsb
or
repz
mov
repz
sub
fimuls
cld
jb
out
mov
dec
lock
cmc
icebp
movsb
mov
push
dec
test
xor
cld
mov
nop
aam
or
or
mov
adc
inc
bound
cld
jmp
mov
inc
fcmovb
push
fcoml
movsb
push
sub
adc
mov
repz
adc
cmp
pop
xorl
les
cmp
add
cld
or
int
jb
xchg
fmull
adc
mov
mov
mov
int3
cmp
insl
lods
mov
add
sbb
dec
mov
mov
popf
repz
mov
and
iret
push
adc
pop
int3
push
fnstenv
sbb
hlt
imul
adc
push
adc
xlat
shlb
sbb
jb
stos
int3
mov
sub
int3
adc
jno
mov
mov
add
jns
mov
sbb
add
or
jge
xchg
jl
add
or
call
adc
push
sub
and
cmp
js
test
testb
jmp
sbb
in
add
hlt
les
or
add
call
xor
movsb
sarl
push
jmp
pop
aam
ret
push
inc
add
mov
pop
dec
mov
or
add
test
ret
jecxz
mov
or
mov
aad
add
adc
enter
out
fiadds
mov
cmp
jg
jg
pusha
movsb
mov
or
out
adc
sbb
lret
fs
adc
shlb
lret
fs
jl
add
gs
mov
jge
push
xor
bnd
pop
and
jae
ss
cmp
or
push
repz
inc
insb
int3
mov
fiadds
pop
in
int3
push
hlt
aas
rep
pushf
sub
lret
jno
arpl
push
adc
js
mov
in
mov
adc
mov
faddl
xor
or
dec
fs
les
xchg
insl
in
push
in
xor
or
out
les
pusha
insb
dec
in
pop
or
movsb
repz
hlt
xor
lods
xor
sbb
stos
cmp
jae
nop
out
or
in
or
and
movsb
xor
in
lods
lods
into
movsb
adc
sub
adc
nop
je
insb
les
emms
movsb
xchg
push
in
fwait
test
adc
push
inc
xor
ja
mov
mov
xor
ljmp
mov
ror
mov
insb
je
je
add
jb
jmp
dec
mov
rclb
in
sub
fldl
lods
xchg
in
in
adc
hlt
cmp
dec
mov
mov
sarb
adc
adc
sbb
adc
or
les
jl
adc
sbb
xchg
into
adc
dec
sbb
dec
inc
push
out
clc
ror
sahf
fsts
push
rcl
es
jg
add
xchg
nop
lret
or
movsb
or
repnz
xchg
int3
in
xchg
sbb
fs
dec
xchg
jp
add
mov
jl
mov
cld
int
or
adc
and
in
adc
push
mov
cmp
mov
pop
mov
sti
aam
or
fcoms
cld
mov
mov
and
mov
out
add
xchg
test
iret
xor
xchg
add
adc
mov
les
sub
inc
jecxz
or
sahf
jl
add
subl
movsb
je
repz
push
mov
in
roll
dec
mov
in
adc
jge
push
or
sbb
xchg
pop
sahf
push
sahf
xchg
jo
repnz
jmp
rcrl
mov
cld
mov
out
movsb
mov
xchg
mov
xchg
and
mov
cli
dec
add
scas
notb
fsubl
lods
fnstenv
xlat
xchg
lods
popa
pushf
movsb
movsl
stos
les
insb
nop
adc
inc
mov
shl
int3
fs
stos
shll
mov
lret
add
test
dec
dec
mov
leave
das
cld
les
adc
rcll
jnp
int3
test
test
outsl
movsb
mov
lahf
out
je
and
adc
xchg
rcrb
push
test
in
add
test
insb
xlat
ret
fsubl
shll
js
mov
repnz
sub
shll
repz
in
shl
orl
fcmovnb
push
lret
iret
lds
sbb
xor
lods
cmp
iret
adc
into
out
adc
inc
pop
sbb
jl
jle
int3
xlat
icebp
test
and
out
dec
aam
enter
test
fmull
iret
ret
and
repnz
adc
jp
adc
xor
xlat
icebp
add
movsl
add
fisttpll
and
rcrl
fs
mov
hlt
jbe
dec
lcall
dec
mov
shrl
test
ficomps
and
pop
ret
mov
jae
sar
push
inc
push
mov
movsl
xor
daa
mov
clc
xor
std
pop
and
loop
push
arpl
hlt
aam
sub
cmc
jnp
xchg
in
inc
in
mov
fisubs
icebp
movsb
push
mov
push
mov
les
add
push
je
inc
pushf
ret
sbb
fsub
adcl
sti
xchg
nop
mov
imul
xchg
sbb
int3
aam
iret
adc
dec
testb
xorl
inc
cmp
inc
loopne
clc
pop
cmpsl
pushf
xor
dec
test
popl
inc
rorl
xchg
inc
hlt
xorl
sub
lret
mov
or
pusha
push
mov
in
mov
xchg
push
push
and
and
add
xor
dec
jl
lds
push
nop
pop
fstpt
add
pop
shr
add
add
adc
and
push
push
movsb
adc
push
mov
xorb
out
xor
pop
inc
pop
push
and
inc
or
and
jl
inc
sub
and
push
adc
adc
mov
cli
in
aam
sbb
rolb
movsb
mov
add
sub
and
push
cmpl
sbb
insb
cmp
rcr
adc
sarb
or
add
inc
xchg
in
mov
jo
lret
pop
add
jecxz
or
pushf
mov
mov
dec
or
pop
lock
movb
adc
in
shl
jmp
repnz
jmp
mov
push
sti
ss
std
shr
dec
or
push
cld
repnz
shl
jmp
andb
cmp
jo
pop
or
lock
repnz
shl
out
arpl
push
loop
or
lock
std
shl
cmc
outsl
hlt
add
lahf
add
int3
out
dec
jmp
or
cmp
jae
mov
or
cmp
and
push
xorl
mov
mov
dec
fcoml
add
in
add
adc
cmp
jne
or
in
sbb
cmpsl
shlb
out
push
shlb
add
push
add
hlt
cmpsl
or
xchg
in
std
sbb
in
mov
jne
xchg
jle
mov
push
test
xor
cmc
and
jecxz
xor
movl
and
adc
je
stos
lock
adc
mov
mov
xor
in
xor
dec
clc
cmp
push
loope
cmc
push
inc
mov
mov
movsb
mov
xor
mov
test
xor
mov
push
add
sbb
xor
inc
in
xor
push
xchg
aam
les
xor
fdivs
add
aad
dec
cld
cmp
push
xor
and
dec
stc
cmp
dec
xor
cmp
nop
shlb
mov
int
jge
in
sub
pop
lock
inc
jmp
sub
lods
pushf
fdivl
xor
shrb
fldcw
xor
fstl
push
loop
pop
inc
xor
xor
and
inc
xor
aaa
xchg
shlb
xchg
xor
mov
repz
mov
xor
inc
out
xor
push
adc
add
out
xor
push
jb
add
cmpsb
xor
xchg
roll
xchg
xlat
or
cmp
dec
xor
ds
sti
cmp
dec
xor
pop
mov
jp
mov
xor
mov
iret
xor
lahf
ljmp
lcall
sub
out
das
xor
aas
push
lcall
imul
jg
rolb
inc
mov
cmc
lahf
imul
hlt
xchg
mov
pop
jecxz
xor
call
into
imul
in
lods
pop
push
inc
inc
hlt
cs
add
call
in
test
cld
out
and
cmp
inc
lcall
arpl
inc
sarb
sub
rolb
mov
pop
inc
sub
adc
mov
sub
dec
push
mov
sbb
les
testl
aam
test
jl
sub
sub
xor
adc
and
adc
and
jle
mov
cmp
lods
jb
jmp
cld
mov
mov
mov
pushf
arpl
or
or
xchg
mov
push
cld
nop
les
shlb
aaa
rol
push
inc
xchg
test
adc
mov
movsl
aam
jo
jnp
hlt
push
or
adc
mov
add
or
test
pop
xchg
add
movsb
sub
or
repz
mov
jb
mov
sbb
mov
test
push
dec
cmc
mov
adc
daa
je
into
lods
sbb
outsl
enter
out
sub
or
add
fwait
xor
movsl
idivb
add
jl
aam
jmp
test
insb
inc
js
stos
push
dec
in
je
iret
loope
fs
dec
cmpb
pop
push
mov
mov
push
cli
dec
lods
jae
or
pop
lods
in
enter
mov
jae
sbb
push
pushf
inc
xorl
push
in
fmull
sub
loope
iret
push
pop
test
test
dec
pop
fs
xchg
fisubrs
xor
lods
or
test
test
mov
add
pop
sub
arpl
mov
adc
test
xor
in
movsb
and
mov
xor
in
insb
lods
sub
pushf
fdivl
cld
jl
cmp
nop
shlb
lock
xor
add
inc
loopne
mov
xor
call
cwtl
fdivs
clc
js
cmp
xchg
shlb
bnd
xor
add
inc
loop
mov
xor
ljmp
xor
cli
jp
cmp
mov
xor
out
outsb
scas
lcall
jle
ds
xchg
xor
out
cmpsb
es
xchg
xor
divb
xor
xchg
rcll
add
inc
jecxz
mov
xor
jmp
stos
sub
sti
jnp
cmp
iret
xor
out
outsl
scas
das
add
xor
fistps
pop
or
cmpsl
daa
sbb
ja
aaa
adc
jno
xor
add
mov
adc
imul
mov
dec
in
xor
lods
sub
std
xor
mov
inc
in
movsl
and
cmc
in
mov
xor
inc
adc
movsb
xor
and
rclb
addb
jo
loopne
xor
and
fdivl
pop
in
lods
insb
sub
mov
enter
fdivs
pop
call
mov
repz
add
xor
inc
adc
xchg
push
jecxz
xor
and
iret
dec
add
scas
outsl
das
fistps
lret
mov
pop
jmp
imul
mov
movl
addr16
divl
rclb
addb
jb
loop
xor
and
into
mov
fidivs
pop
out
scas
outsb
cs
mov
lret
sbb
xor
pop
ljmp
jp
pop
movb
push
out
data16
rcll
addl
mov
int
dec
push
fnsave
sub
cmp
sbb
xor
pop
jmp
mov
lds
xchg
push
in
gs
xor
add
aam
xor
test
xor
add
jecxz
ret
shll
arpl
push
and
add
loop
ret
xor
xorb
inc
xor
xor
add
loope
shll
popa
push
inc
xor
xor
add
loopne
shlb
pusha
push
inc
xor
push
adc
out
xor
mov
xor
pop
dec
aas
das
pop
ud0
dec
fisubrs
outsb
jle
pop
cs
push
xor
std
int
lods
mov
jge
pop
sub
in
cld
int3
fsubrl
jl
pop
sub
or
xor
sti
lret
fldt
imul
sub
or
xor
cli
lret
mov
jp
pop
sub
or
xor
stc
leave
fldcw
imul
sbb
clc
enter
mov
pop
sub
or
xor
test
xchg
xor
ja
push
daa
aaa
pop
pop
xor
test
cmpsb
mov
xchg
xor
jbe
push
es
push
xor
cmc
mov
xchg
xor
inc
push
and
pop
shl
nop
rolb
adc
adc
and
fninit
out
loop
cld
popa
shlb
int
or
rol
add
insb
or
les
ljmp
ret
lods
repz
rep
lret
rol
stos
rorl
or
and
mov
shlb
enter
shll
ror
rorb
push
or
adc
iret
lret
hlt
xor
shll
mov
sbb
adc
mov
jns
vcvttsd2si
imul
mov
in
mov
call
xor
or
or
shll
push
mov
mov
or
shrl
movsl
mov
dec
push
lods
xor
adc
fnstenv
xor
cmpsl
jbe
jl
and
es
rorb
jl
sahf
in
push
mov
jp
push
or
sbb
cmpsl
inc
test
stos
movsb
xor
outsl
mov
jno
mov
xor
mov
jo
pop
mov
push
mov
inc
popf
jmp
ja
arpl
xor
add
xor
stos
int3
mov
xor
nop
mov
pop
sbb
xor
push
cmpsl
ret
pop
adc
xchg
xor
pushf
test
je
test
mov
sub
mov
test
mov
mul
push
cmp
or
stc
xor
add
aam
push
mov
test
clc
int
xor
leave
aaa
pop
pop
or
insb
xchg
fildll
pop
dec
jns
hlt
cmp
mov
xor
loop
fcoms
inc
or
pop
fcomi
inc
imul
push
push
ret
mov
pop
dec
call
xor
jne
and
icebp
push
xor
ficomps
outsl
sbb
xchg
mov
in
or
bound
dec
lock
arpl
enter
imul
scas
jle
test
pop
mov
xor
adc
aas
and
mov
pop
jle
outsl
xor
sub
dec
or
mov
xchg
xor
pushf
pop
push
jns
stos
mov
fidivs
or
xor
push
mov
and
test
sbb
scas
pop
testl
inc
mov
jae
or
pop
xor
pop
fs
les
jge
xor
jl
mov
push
sbb
lret
out
add
scas
enter
roll
movl
js
xor
xor
inc
rep
push
lret
aam
push
push
inc
jo
adc
pop
inc
stos
sub
loopne
mov
xor
mov
sbb
xor
aad
or
mov
mov
adc
add
mov
lods
push
frstor
movsl
hlt
or
scas
jnp
xor
roll
cmp
pushf
jl
cli
jmp
mov
fs
insb
pop
dec
push
push
mull
mov
xchg
out
fdivs
jge
test
je
xchg
jl
daa
jle
jne
or
pop
adc
arpl
mov
gs
out
pop
adc
xor
mov
nop
stc
mov
testb
cmpsl
or
push
inc
pop
xor
in
data16
arpl
xor
and
jno
lea
push
bts
fnsave
cmp
mov
sub
sbb
xor
jmp
pop
add
lods
movsl
push
jnp
xor
dec
jge
aas
aam
aam
jno
pop
xor
addl
xor
and
and
js
xor
maxps
leave
int3
xor
jmp
or
ds
aam
adc
push
and
stc
lods
insb
mov
cmpsb
jecxz
jbe
into
xor
popa
rorl
xchg
scas
js
xchg
inc
movsl
out
xor
dec
adc
or
jnp
adc
in
adc
dec
in
and
bound
adc
xor
push
jecxz
inc
pop
mov
push
fldenv
cltd
xor
and
lahf
xor
andl
pop
sub
fstl
xchg
lret
add
jmp
jle
xor
xchg
or
das
xor
and
pop
or
shlb
je
cmp
push
lods
xor
xchg
pop
push
inc
pushl
xor
out
jnp
push
mov
or
sbb
movsb
stos
push
xor
scas
fmuls
xor
xchg
xor
cmp
xor
test
mov
inc
xor
pop
rclb
adc
shr
lods
insl
cmp
int
lret
pop
mov
stos
inc
pop
fidivl
pop
scas
or
and
push
pop
std
shll
or
inc
int
xor
in
and
mov
push
jp
hlt
andl
lock
inc
jbe
minps
fstl
shlb
icebp
out
scas
out
jl
xor
adc
lods
xlat
xorb
ljmp
xchg
push
je
adc
xchg
arpl
jl
sub
out
or
or
pop
pushf
xor
mov
pop
and
jecxz
out
loope
shll
stos
lods
lods
mov
or
aas
inc
dec
test
mov
sahf
insl
loopne
or
dec
or
scas
add
mov
push
fldcw
jmp
int3
roll
mov
adcl
lret
cli
dec
xor
pop
adc
icebp
adc
adc
movsb
xchg
xor
inc
call
jnp
sbb
mov
or
lock
das
js
mov
mov
stc
std
loopne
or
mov
int3
hlt
jg
xor
inc
test
jae
sub
or
mov
lock
neg
les
jl
hlt
dec
adc
je
in
iret
fstpl
and
test
aam
je
scas
sub
adc
add
and
int3
test
nop
ss
jmp
je
lods
aam
mov
xchg
xchg
fmull
inc
lcall
jbe
daa
and
mov
scas
insb
push
mov
pop
cld
or
cmp
sbb
jecxz
popf
mov
jg
mov
cmp
sbb
aaa
sbbb
iret
sbb
mov
add
dec
fcmovb
nop
push
dec
or
int
shlb
push
mov
clc
icebp
hlt
inc
or
dec
mov
cltd
sbb
cmpb
pop
add
test
ret
icebp
cmp
hlt
mov
dec
add
and
inc
loope
push
inc
dec
push
nop
adc
data16
cmp
fxch
xor
xchg
and
iret
xchg
ja
in
inc
xchg
xchg
pop
inc
sbb
inc
pop
cltd
and
pop
xor
push
push
pop
iret
cmc
fsubl
sub
int3
int3
fldenv
cmp
lods
jmp
les
xchg
sub
stc
test
in
popa
cmp
test
test
sub
test
mov
test
xlat
pop
fcoml
or
xlat
bound
add
cmp
xchg
add
cmp
cwtl
sbb
les
add
in
les
lods
in
dec
and
shll
cmp
cmp
ret
dec
push
xchg
push
sarb
mov
adc
xchg
icebp
in
aaa
icebp
sbb
mov
or
sub
and
fcoms
sub
iret
jns
inc
loop
sub
and
repnz
in
xchg
jecxz
loop
mov
movsb
push
loope
push
test
sbb
daa
lret
add
mov
mov
inc
sbb
ljmp
loopne
mov
testb
push
or
enter
insb
popa
mov
xchg
mov
mov
jb
jmp
in
pop
into
stos
sbb
repz
pop
inc
ljmp
sbb
fs
or
xchg
jecxz
sbb
rorl
mov
mov
push
fsub
rcr
outsb
fsubl
adc
test
stc
and
lahf
inc
sbb
test
cmp
cmp
or
push
arpl
pop
inc
mov
sub
mov
xor
loope
adc
or
adc
rorl
sbb
mov
dec
out
or
scas
jecxz
testb
lahf
mov
mov
in
data16
shlb
xchg
adc
mov
jb
xchg
xor
mov
lods
sbb
xchg
lds
pop
mov
dec
shrb
lcall
mov
jle
cmp
ja
mov
test
adc
scas
int3
call
int
jmp
sub
sbb
ret
ror
adc
mov
stos
lea
pushf
and
in
jnp
xor
in
and
mov
sbb
dec
or
mov
enter
push
ret
add
call
pop
sahf
sub
or
or
sub
clc
int3
addl
shll
repnz
jbe
hlt
and
into
and
xor
les
push
add
xor
scas
rclb
mov
and
icebp
in
and
into
pop
xor
iret
icebp
test
mov
mov
test
loop
adc
out
or
lods
push
cmp
pop
jno
insb
mov
fs
sbb
ds
insl
cmp
loop
xor
push
bound
fcoms
icebp
hlt
js
shrb
aad
xor
jp
jb
and
xor
dec
pop
or
dec
in
into
adc
in
adc
fwait
insl
subl
add
cltd
movsb
in
push
test
movsl
int3
ficomps
lahf
jae
lcall
push
sub
lock
push
jg
insb
mov
sbbl
decl
int3
scas
test
pop
repz
or
or
add
cld
dec
popa
shrb
jge
lock
cmp
int3
out
adc
frstor
lea
sub
scas
cld
adc
lods
lret
add
jl
out
and
loope
fists
test
cmp
lea
loop
adc
cmp
addr16
call
lods
or
fstpl
push
xor
rcrb
call
dec
dec
or
add
loop
jae
jle
rorb
dec
mov
push
dec
xchg
fcmovnb
movsb
fisubrl
lods
int
mov
mov
add
in
sbb
jbe
addr16
int
dec
ljmp
in
sahf
jbe
ret
push
mov
dec
dec
das
cmp
cmp
pushf
jae
je
sbb
cmp
or
std
cmp
repz
mov
out
xchg
loopne
loope
add
or
sahf
gs
sbb
in
ror
aad
ja
iret
add
or
xchg
push
fs
stc
xchg
cld
gs
test
cmpsb
dec
lods
iret
mov
pop
and
jmp
mov
or
cmp
orb
sti
add
fcom
jl
inc
movl
movsb
cmp
daa
les
cmpsb
mov
outsb
lods
enter
xchg
mov
sub
in
xchg
int
subb
cmp
movsl
mov
cli
out
xchg
adc
add
inc
or
push
mov
jno
into
adc
lret
stc
adc
add
mov
xor
jbe,pt
enter
sbb
add
cmp
repnz
add
sub
les
repz
dec
sarl
add
adc
aam
dec
mov
test
rcr
das
xlat
mov
shrb
sti
aam
rcrb
xchg
insl
adc
rorl
jo
sbb
mov
ror
mov
cmp
and
cmp
je
in
add
stos
or
test
jmp
or
popa
and
jb
test
stos
mov
inc
and
in
add
js
in
int3
inc
int3
inc
dec
add
int3
and
cli
les
or
sar
cld
mov
jecxz
xor
jb
adc
and
mov
repnz
shlb
in
mov
adc
mov
nop
scas
dec
ds
xchg
inc
dec
divl
sub
mov
jecxz
jge
jb
adc
sub
and
dec
es
hlt
cmp
scas
jg
mov
stos
sbb
scas
lea
icebp
sbb
imul
xchg
push
ljmp
mov
add
adc
jns
sbb
movsb
mov
jecxz
into
jmp
mov
adc
je
sbb
mov
xor
mov
push
adc
jmp
loopne
jmp
adc
push
int3
data16
add
inc
ficomps
add
mov
shrl
testb
rorb
test
jmp
mov
ljmp
inc
dec
xlat
nop
push
pop
and
push
call
lds
dec
jecxz
mov
lret
sub
adcb
dec
cld
adc
test
je
mov
mov
pop
mov
dec
ss
push
sbb
xchg
cld
mov
xchg
xor
dec
fstpl
test
adc
in
or
sub
add
test
inc
movsb
hlt
sbb
adc
add
or
movsl
add
and
lods
stos
fidivrl
xor
in
popa
or
sbb
and
add
pusha
push
shrl
sub
sbb
sub
cmpsb
push
xchg
or
mov
or
mov
rolb
add
into
sub
push
adc
mov
xor
lods
rcrb
xlat
jl
or
push
movsb
out
add
in
dec
xchg
inc
or
sub
lcall
fs
inc
lock
dec
mov
or
pop
add
xchg
fsubrl
push
pop
dec
add
test
mov
mov
in
pop
sub
dec
inc
or
jl
push
and
ret
in
xor
pop
inc
cwtl
xchg
mov
jmp
inc
sub
cmpsb
lahf
daa
ret
inc
lret
pop
outsl
push
xchg
lock
insb
imul
sti
or
push
push
jecxz
in
call
push
dec
in
shlb
std
out
sbb
aam
cmpb
addr16
outsl
sbb
sti
sub
mov
or
add
sub
adc
nop
je
inc
xchg
push
shll
or
add
in
stos
mov
push
mov
cmpsb
mov
test
stos
movsb
outsb
popf
fsubl
add
lods
push
cmp
or
sbb
movsl
mov
arpl
adc
jl
repnz
mov
mov
ret
leave
lds
mov
loope
loop
nop
mov
out
sbb
sbb
sbb
adc
fcompl
cmp
lods
fwait
hlt
and
add
hlt
out
stos
ljmp
gs
stos
popa
fsubs
repnz
adc
push
xor
shr
push
mov
adc
sub
add
scas
push
loope
sub
inc
adc
or
and
cld
push
xlat
loopne
or
mov
hlt
int3
sbb
enter
add
lock
adc
xchg
pop
sbb
cmp
adc
into
xchg
loop
shll
add
jne
mov
add
nop
int3
dec
subl
push
arpl
inc
pop
mov
push
mov
add
andb
repnz
mov
dec
dec
ret
push
or
mov
mov
or
leave
add
enter
fsubrs
xchg
mov
out
xor
pop
sbb
fistpl
jecxz
inc
test
or
enter
mov
in
mov
repnz
mov
sbb
adc
pop
inc
inc
insb
jnp
mov
bound
adc
fistl
sbb
lods
clc
fdivrs
jo
adc
lock
syscall
jmp
int3
mov
shrl
int3
out
sarl
sbb
lret
addl
out
mov
xchg
push
sbb
mov
lock
in
adc
lods
push
mov
sub
call
call
push
repnz
mov
rcl
mov
adc
movsb
sub
mov
aam
out
das
rolb
aad
sbb
add
pop
outsb
or
incl
add
nop
mov
lock
enter
stos
lods
out
int3
fiaddl
std
fisubrs
in
enter
pop
sar
cmpsb
and
in
in
in
cld
xchg
cmp
pushf
aad
out
jl
sarb
adc
mov
in
lret
dec
mov
xchg
pop
cs
pusha
push
or
std
or
cmp
mov
add
lcall
popa
add
pusha
sbb
sub
stc
aaa
adcl
cli
add
lock
int3
adc
std
or
lock
cmp
mov
adc
sub
add
sar
je
inc
mov
push
in
dec
adc
fwait
sbb
sub
lret
int
or
out
daa
int3
mov
shr
or
or
hlt
fistpll
lock
rcrb
decb
add
add
rol
push
hlt
sti
fmuls
sub
pop
mov
stc
add
repnz
adc
ss
pop
movsb
icebp
mov
movsl
loop
add
mov
mov
int
test
sbbl
or
cmpsl
or
popf
push
cmpsb
aas
repz
push
sti
sub
jmp
lods
add
cmpsb
shl
xchg
movsb
repz
xchg
dec
mov
inc
jecxz
or
jnp
push
adc
adc
jecxz
rcr
jecxz
or
add
jno
jecxz
pop
repz
xor
adc
call
mov
push
imul
or
add
mov
push
or
or
or
mov
mov
lock
hlt
negl
or
pusha
insb
mov
pop
testb
lods
nop
adc
adc
roll
in
out
add
aad
je
shr
cld
idivb
pushf
jmp
jno
add
fisttps
lock
int3
and
mov
enter
inc
sbb
jns
repnz
mov
jo
adc
pop
push
mov
mov
into
jp
shlb
sahf
or
mov
cmpsb
test
fidivrl
out
add
test
and
call
mov
mov
lods
adc
int3
hlt
lods
loop
fwait
mov
or
and
jns
jmp
inc
or
cli
add
adc
add
pop
dec
or
mov
insl
add
loop
or
out
jno
mov
or
rolb
into
sti
jl
adc
int3
pop
roll
in
or
lock
dec
or
pop
push
hlt
shll
dec
or
cmp
pushf
iret
pop
adc
cmp
pop
test
and
or
mov
jecxz
aam
insb
out
iret
jne
loop
pop
mov
shl
outsl
imul
jl
or
loop
loop
fistps
js
fcom
enter
addb
or
jmp
mov
and
and
xorb
in
and
pop
fst
loope
shl
fcoms
xchg
insb
in
mov
loop
jo
mov
inc
fldenv
xor
jecxz
shrl
xchg
push
aam
stos
ficoms
loop
sbb
pop
sbb
ss
sbb
mov
ffreep
mov
loopne
mov
out
jbe
scas
rcrl
sbb
shll
std
sahf
sbb
stos
pop
out
xlat
mov
push
loope
cmp
into
pop
inc
les
cltd
push
xchg
push
push
shrb
icebp
dec
xchg
mov
iret
mov
stos
int3
cmp
call
adcb
orl
mov
or
jmp
hlt
add
and
rcrb
push
add
cld
or
int3
addb
test
mov
fadds
test
mov
adc
pushf
or
cld
or
and
cmp
aam
adc
pusha
push
icebp
xor
pop
mov
lcall
jnp
mov
xchg
mov
dec
or
insb
repz
inc
lea
add
outsb
pop
add
imul
cmpsl
ficoml
repnz
mov
xlat
fsubs
or
leave
or
jge
xorb
xchg
cmp
rep
add
ds
or
mov
inc
fwait
dec
mull
adc
cmp
sbb
sub
mov
xor
push
lods
adc
pop
push
dec
in
hlt
into
cli
out
and
xor
pushf
je
mov
shll
mov
js
inc
pop
sub
movsl
mov
sbb
rcrl
test
adc
les
f2xm1
js
jns
inc
adc
das
xor
mov
jmp
lods
sar
jne
leave
loopne
lods
js
dec
mov
or
in
movsb
xchg
xchg
cmp
sub
test
sbbb
test
add
cmp
add
lahf
adc
or
cld
jb
fwait
add
out
mov
mov
cmp
cwtl
jmp
loopne
pop
or
or
push
xor
mov
adc
adc
adc
ret
xchg
lea
push
or
frstor
xor
aam
out
cwtl
add
push
jns
cmp
push
loopne
incl
cmp
aad
pop
mov
xor
test
or
adc
jo
jbe
cmp
stos
fimull
pop
add
leave
rorl
dec
dec
add
or
pop
icebp
ret
repz
add
push
into
nop
mov
sbb
ret
mov
clc
add
mov
mov
jns
cld
in
imul
push
jbe,pt
shrb
int
pop
add
aam
sbb
sahf
arpl
aam
jle
push
loopne
push
push
xor
xor
js
jge
sbb
add
int
jle
or
inc
gs
mov
push
into
lds
push
cmp
sbb
imul
mov
aas
mov
add
out
xor
out
add
les
and
repnz
sbb
test
inc
or
nop
les
push
repz
add
jmp
aaa
sub
pop
stos
cli
jnp
inc
add
rcl
insl
add
inc
push
add
dec
repnz
dec
and
inc
adc
adc
test
ljmp
int
je
test
pop
mov
clc
xor
jle
js
cltd
and
daa
add
sbbl
add
dec
daa
ret
inc
in
ss
in
jne
push
dec
adc
jmp
push
das
sbb
data16
hlt
nop
std
shlb
popl
jle
ficoms
pop
je
clc
js
arpl
xchg
xor
call
fiadds
mov
sysexit
push
stos
rcll
loopne
xor
jo
sbb
push
adc
adc
dec
adc
push
test
cmp
lea
or
or
dec
or
push
test
cmp
lea
add
add
adc
cmp
push
dec
add
push
test
sbb
repnz
leave
in
xchg
xchg
adc
mov
cmp
push
dec
adc
push
jg
push
in
jl
push
mov
out
in
cmp
flds
mov
jl
jecxz
rcrb
xor
adc
out
fsubl
push
xor
or
iret
add
movsb
sbb
add
jns
fcoml
int
inc
enter
xchg
hlt
jmp
and
and
rclb
rclb
in
add
and
sbb
jo
adc
movsb
les
mov
or
cmp
rolb
test
add
jmp
add
hlt
and
adc
movsb
fwait
add
dec
pushf
push
int
inc
shlb
les
std
jl
and
add
hlt
mov
les
int
inc
shr
mov
sub
rorb
fisubrs
nop
xor
adc
pop
xor
adc
jmp
les
add
lods
rolb
xchg
add
popf
negb
jmp
add
dec
sub
mov
icebp
cld
ds
enter
push
or
in
ja
add
ja
cmp
mov
jb
divb
push
clc
subl
mov
out
xchg
in
andb
xor
lods
rolb
mov
mov
xchg
cmp
inc
enter
subb
lea
add
in
int
test
jmp
add
mov
les
rorb
cmp
addl
enter
sbbb
jl
int
test
jmp
add
mov
test
ror
bound
inc
mov
enter
aam
lods
xor
cmp
jbe
add
or
cmp
add
add
xchg
dec
mov
rcrb
jl
sbb
mov
add
cmp
jl
rol
add
cmp
mov
mov
hlt
rclb
les
sbb
adc
and
add
xchg
les
cmp
hlt
add
xor
add
jb
out
mov
les
rolb
dec
jl
faddl
inc
les
push
add
fidivs
and
adc
in
add
fsubl
add
aam
je
or
inc
and
testb
add
sbb
in
mov
add
out
jl
mov
mov
pushf
enter
sbb
insb
test
orb
mov
pop
icebp
in
xor
add
fs
loopne
outsb
xor
cmpsl
fdivl
enter
int3
sub
mov
in
lret
add
mov
xor
sbb
lock
cld
adc
movsb
cld
into
fadds
int3
add
les
jmp
xor
les
aam
cmc
xor
hlt
rcl
adc
xchg
rol
sub
jmp
xchg
cmp
xor
mov
cld
enter
les
sub
add
into
and
rcrb
or
sahf
mov
sbb
enter
in
and
xor
adc
xchg
adc
mov
add
xor
test
fmuls
hlt
rclb
lods
js
mov
jmp
lods
clc
add
add
cmp
out
fs
insb
mov
cmp
push
stc
pushf
loope
inc
mov
or
rol
hlt
fstl
mov
inc
enter
mov
push
mov
adc
mov
inc
les
push
testb
push
orl
or
add
sub
mov
xchg
sbb
add
movsb
mov
in
cmp
les
rorb
insl
les
sbb
mov
ds
aam
dec
enter
inc
cld
xor
call
les
fadd
mov
and
bswap
fsubrs
lods
jo
shl
add
fmull
cmpsb
insb
jmp
add
into
insb
and
shrb
add
inc
sub
dec
icebp
push
push
in
push
adc
cmpsb
xchg
add
push
xor
enter
int3
dec
mov
pop
ficomps
add
xchg
sub
adc
cmp
add
in
mov
or
or
adc
les
aam
add
mov
test
in
adc
lret
jl
lods
enter
dec
adc
hlt
dec
cmp
hlt
or
lea
in
or
mov
cld
enter
lods
mov
cmc
repnz
test
add
dec
push
mov
push
dec
lea
cmp
xor
or
rorl
in
repz
les
int
test
jmp
add
mov
test
pushf
fld
hlt
shrb
mov
lea
jl
jae
pop
hlt
rolb
les
or
or
mov
aam
add
push
sbb
mov
add
and
shrb
add
mov
das
sub
or
add
clc
sub
push
fs
les
mov
jecxz
in
decb
sahf
cwtl
andb
mov
mov
pop
rclb
or
loop
xchg
and
sbb
mov
icebp
fmull
dec
rolb
lods
add
sahf
inc
sub
lods
jecxz
cs
mov
mov
mov
add
xorl
mov
notb
mov
dec
lods
lods
push
faddl
push
add
add
int
inc
fcoms
int3
imul
add
shl
repnz
cld
xor
mov
add
dec
sbb
nop
adc
call
jg
mov
je
mov
sbb
in
insb
push
rol
dec
inc
push
int
repnz
cmp
add
test
add
jmp
aam
push
mov
icebp
xor
pushf
xor
shrb
dec
add
inc
pop
add
add
fdivrp
xchg
fdiv
in
add
add
les
lea
adcl
test
xchg
adc
jmp
pop
push
and
inc
mov
adc
in
xchg
add
into
fs
fwait
in
or
pop
std
adc
xor
repnz
adc
cwtl
subb
bound
orb
add
hlt
daa
add
mov
scas
cmp
pop
mov
mov
fildl
std
and
out
test
fwait
loopne
roll
push
mov
sbb
mov
test
add
add
je
lods
std
adcl
test
or
fwait
or
adc
push
ret
pop
add
jl
xchg
paddsb
mov
addl
or
leave
mov
leave
in
icebp
xchg
mov
mov
and
in
mov
dec
hlt
push
shll
push
icebp
mov
jl
repnz
arpl
or
dec
xchg
push
push
add
sbb
in
in
cld
rcrb
out
xor
push
out
xchg
dec
vaesenc
xchg
movsb
hlt
clc
mov
push
int
icebp
pushf
xorl
inc
mov
cmp
inc
sbb
mov
std
add
dec
cmp
cmpsb
or
int
icebp
cld
fcoml
in
mov
hlt
push
or
jl
in
aam
je
push
sbb
mov
mov
shr
cld
adcl
into
xor
sbb
add
inc
xor
sub
xor
int3
and
adc
rorb
or
loope
sbb
add
shr
or
incb
or
ror
or
aam
mov
int3
push
orl
mov
add
pusha
int3
add
inc
add
sub
push
cmpl
sbb
sbb
mov
add
lock
loop
sbb
hlt
rcrb
mov
add
lock
int3
stos
imul
std
or
mov
fs
mov
int3
pushf
push
iret
inc
loope
mov
icebp
pop
and
div
aam
add
pop
call
cmc
mov
mov
mov
mov
mov
mov
mov
icebp
or
pop
sbb
pop
in
icebp
pop
icebp
pop
shl
pop
ret
aam
pop
cmpsb
icebp
pop
mov
dec
add
adcl
outsb
andl
nop
pop
sbb
pop
add
add
cld
inc
add
int3
sarb
jg
je
adc
push
xchg
sub
adc
mov
sbbl
shl
add
roll
dec
xor
sbb
dec
dec
in
or
jne
fwait
pushf
push
or
lods
in
in
xorb
sbb
pushf
leave
lods
icebp
movsb
mov
pushf
mov
mov
mov
fnstenv
pop
shlb
fsubr
in
or
hlt
pop
fiadds
inc
movsb
movsb
pop
xchg
mov
mov
movsb
sub
mov
enter
or
xor
push
mov
push
mov
push
mov
push
pop
jl
dec
rorl
test
hlt
and
clc
dec
into
clc
inc
into
jmp
cld
lods
in
push
repnz
sub
mov
add
lock
add
aaa
cmpsb
push
xchg
add
hlt
movsb
in
jb
adcb
movsb
les
xor
scas
out
sbb
mov
mov
int3
adcl
jmp
or
inc
sti
push
sbb
cwtl
xor
sbb
jmp
add
hlt
mov
rol
repnz
adc
je
xor
xchg
mov
add
or
mov
add
int3
pop
orl
and
sbb
fwait
or
sbb
lock
or
mov
pop
int
repnz
xor
icebp
mov
in
lcall
sbb
je
sbb
repnz
jb
jnp
push
enter
adc
xor
hlt
mov
lods
movb
in
in
les
mov
test
in
js
inc
shll
in
out
push
lods
xor
fucomip
push
and
pop
sbb
loopne
int
repnz
add
js
outsl
in
mov
dec
in
int
repnz
fsubl
inc
jnp
pop
sbb
mov
andb
in
cmp
jl
stos
cmp
mov
and
add
sbb
icebp
in
pop
xor
sub
lods
out
aam
mov
inc
add
pop
rorb
pop
jmp
xor
out
cmpsb
push
stos
mov
leave
push
mov
fwait
mov
test
xchg
mov
mov
or
pushf
les
js
mov
ret
dec
sub
push
stos
insl
pushf
or
adc
pop
loope
pop
div
pop
enter
int3
dec
movsb
xchg
or
mov
inc
xor
cld
arpl
in
pop
fnsave
dec
sbbb
push
lods
fstpt
pop
add
cmpsb
adc
and
andl
mov
add
fmulp
mov
mov
dec
vpsubsw
or
rcrb
and
nop
clc
lret
sub
jl
mov
dec
loop
inc
fwait
or
fsubr
jl
xchg
adc
fldlg2
clc
in
adc
in
lods
je
hlt
mov
mov
xor
mov
jmp
add
pop
xor
hlt
and
popa
xchg
jbe
dec
int3
and
mov
sbb
push
test
jl
sub
push
aam
sub
add
or
ljmp
into
ljmp
mov
into
fptan
adc
insb
adc
mov
cmp
push
ljmp
or
cmpsl
adc
dec
cmpsl
sbb
jmp
xchg
cmpsl
movsb
test
push
cld
mov
fidivs
je
aam
xor
or
test
cmp
cmpsb
and
call
sub
pop
iret
hlt
push
xor
in
aam
or
shrb
jmp
je
and
jmp
in
mov
out
add
test
lods
std
mov
dec
in
adc
jl
xor
pop
mov
lods
movsl
add
push
mov
out
hlt
add
jg
lods
push
or
lods
loope
mov
orl
into
clc
outsb
leave
loope
arpl
js
jno
clc
dec
fabs
xor
push
mov
push
insb
dec
inc
sub
test
add
add
test
add
sbb
and
and
and
and
and
and
imul
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
repnz
adc
pop
mov
add
lock
repnz
in
out
add
lock
int3
iret
sub
shr
jmp
mov
lock
addb
insb
mov
add
jl
jecxz
hlt
in
inc
lds
jl
xor
and
jecxz
xor
or
mov
mov
mov
mov
mov
mov
mov
mov
icebp
or
cli
mov
jecxz
in
sbb
and
fsubs
sbb
xor
les
in
fistl
add
je
xchg
int
clc
pop
aad
xor
loop
and
cld
cmp
jg
in
add
sbb
dec
in
mov
dec
les
mov
mov
mov
inc
cmp
dec
movsb
push
icebp
add
pushf
mov
mov
pop
mov
into
icebp
pop
ret
icebp
pop
fsubr
fmull
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loop
sub
xor
mov
lods
clc
push
ret
repnz
cld
fisubrs
fidivrs
fimuls
call
push
mov
sbb
movsb
mov
xor
int3
pop
call
add
loop
sub
adc
hlt
pop
in
icebp
mov
inc
clc
ficoms
ret
mov
shl
clc
cld
lret
dec
fs
int
repnz
int3
or
lock
mov
mov
sbb
enter
push
mov
sti
dec
enter
sub
pop
cmpl
or
push
add
jmp
sarb
in
cld
and
mov
movsb
mov
xchg
test
sbb
fs
mov
xchg
pop
hlt
enter
scas
and
in
sub
xor
cld
sbb
push
mov
push
lods
sub
xor
int3
popa
xor
in
test
mov
in
andb
test
dec
mov
in
dec
and
pop
frstor
icebp
cmp
adc
xchg
call
hlt
clc
mov
adc
xchg
in
jl
xorl
mov
vmulsd
sub
xor
shll
call
push
adc
scas
mov
dec
cli
sub
or
add
xor
mov
and
repnz
loopne
shlb
pushf
xlat
cli
mov
xchg
rcrb
lds
pushf
and
bnd
lds
movsb
or
mov
push
mov
test
xchg
adc
lods
push
pop
int3
sti
mov
xchg
fwait
movsb
je
dec
adc
mov
pop
jmp
xor
push
sar
test
jl
mov
std
idiv
icebp
mov
mov
lret
movsb
aam
or
mov
adc
push
clc
fnstsw
pusha
and
divl
cmc
mov
adc
adc
hlt
inc
insb
mov
mov
in
dec
xchg
mov
mov
mov
mov
notb
mov
lds
hlt
sahf
fmul
aam
aam
lods
push
icebp
test
mov
in
sub
je
int
repnz
mov
les
and
xor
hlt
pop
icebp
adc
pop
loope
cwtl
xor
cld
mov
mov
and
movsb
outsl
in
subl
xchg
adc
jnp
jl
or
lods
dec
hlt
pop
ret
dec
mov
add
js
xchg
adc
hlt
les
aam
add
jl
outsl
in
sub
test
sbb
out
icebp
mov
jl
daa
insb
adc
loop
sahf
sbb
sub
int
repnz
xlat
adc
push
jl
jl
xchg
add
popf
cwtl
insb
fisubrs
cmp
xor
xchg
or
rcr
fmull
subb
rorb
hlt
push
imul
lods
imul
mov
push
dec
xorl
cwtl
mov
or
pushf
lods
push
pushf
xchg
mov
mov
lcall
mov
lods
jnp
fstpt
dec
out
dec
or
sbb
lods
and
out
dec
movsb
icebp
or
icebp
pop
std
icebp
pop
iret
in
scas
dec
mov
mov
mov
mov
movsl
sub
je
test
xor
sar
add
sub
xor
cld
mov
mov
xor
fucomip
and
adc
xor
cld
dec
push
push
iret
mov
or
sahf
mov
xor
iret
cmpsb
jmp
lods
cmpb
in
ret
dec
movsb
push
int
mov
add
jmp
dec
out
mov
les
std
add
dec
fdivrl
mov
and
movsb
sbb
pushf
sbb
pop
mov
jmp
in
cmp
or
sbb
adc
in
jno
or
hlt
xchg
stc
ror
rcl
outsb
int
icebp
mov
mov
int
icebp
jbe
dec
dec
pop
add
and
jns
xor
xchg
nop
clc
int
xor
nop
cmp
push
xor
jmp
or
test
pop
mov
xor
les
cmp
xor
cwtl
fsubr
cld
lret
pop
xchg
clc
rclb
cld
in
imul
jg
cld
in
xchg
cmp
fdivs
std
mov
je
push
mov
out
in
clc
add
xor
cltd
fcoml
xchg
lock
dec
imul
pusha
jmp
jl
xor
dec
xor
aas
xor
push
xor
das
xor
daa
xlat
test
loopne
lret
jl
push
mov
mov
int3
lods
iret
mov
ret
insb
sbb
lods
mov
mov
orl
into
leave
xor
sbb
add
sub
push
rorb
enter
mov
test
xchg
imul
add
js
lea
or
lea
xor
enter
insb
pop
add
shlb
scas
es
mov
mov
and
adc
push
xor
mov
bound
test
push
shll
imul
inc
mov
and
das
cmp
in
xchg
add
fidivs
mov
mov
fdivrl
in
push
fadd
pusha
or
mov
push
cld
std
add
int3
adc
fs
je
mov
push
in
fstpt
add
bound
out
cwtl
xor
lds
mov
in
fcmovnbe
add
les
xor
dec
pop
cld
mov
roll
cld
dec
insb
or
sbb
inc
jnp
pop
enter
hlt
shrl
movsl
add
les
js
xchg
adc
lods
loop
mov
aam
insb
and
je
adc
cmp
in
or
lret
mov
out
dec
adc
xor
mov
cmpsb
jmp
mov
mov
mov
sbb
dec
in
fildl
les
xor
add
mov
cld
push
out
test
sahf
cld
in
aam
pushf
sub
inc
aam
mov
pop
mov
dec
jl
scas
je
je
addr16
scas
push
out
and
jl
xchg
sar
adc
js
mov
je
in
aam
icebp
aam
lods
mov
test
xorl
xchg
insb
or
and
icebp
inc
sbbb
nop
shlb
std
mov
mov
xor
mov
les
add
xchg
mov
cmpsb
adc
mov
cmp
push
icebp
jno
dec
jnp
jl
push
dec
cmp
sub
push
in
mov
dec
add
dec
hlt
es
enter
fs
fdiv
pop
aam
lods
xor
int3
jl
xchg
insb
or
jl
je
aam
int3
push
push
test
cld
xor
pop
loope
push
out
fiaddl
or
push
mov
and
mov
xlat
test
test
add
nop
hlt
test
xor
test
test
pushf
std
subb
jo
in
dec
and
push
icebp
cmp
adc
in
fsubl
adc
fsubl
lret
jp
sti
mov
jg
adc
fcomps
hlt
dec
mov
pop
rclb
sub
dec
dec
orl
mov
lods
pop
push
or
mov
int3
push
in
mov
les
mov
bound
jnp
sub
pop
ret
push
sbb
xor
movsl
adc
xor
movsl
add
std
test
call
mov
mov
mov
mov
mov
mov
mov
xchg
lock
push
fadds
inc
mov
adc
faddl
mov
adcl
jno
push
dec
fdivrs
int
xor
lods
mov
xlat
cmp
fmull
xlat
mov
aam
mov
xchg
jb
loope
mov
pop
out
addl
push
jecxz
ret
ret
mov
in
jl
lea
mov
mov
mov
pop
icebp
insb
mov
inc
dec
lods
xchg
xor
inc
xor
aad
mov
push
add
aad
hlt
add
fsub
dec
xchg
out
faddl
pop
jae
and
xor
push
jae
ficomps
into
je
je
in
into
sub
inc
pop
icebp
add
icebp
cld
mov
mov
mov
lea
rclb
pop
xchg
enter
rorb
rcrl
mov
nop
xor
int3
aam
fstpl
movsl
adc
and
adcl
shrl
add
jg
cld
in
pop
int
repnz
aam
mov
mov
das
int3
mov
in
sbb
jl
and
in
xor
loopne
and
in
lods
dec
aam
clc
shlb
cmp
adc
cmp
jle
pusha
loop
mov
cmp
aam
pop
int3
mov
and
fs
test
pop
std
orb
mov
mov
das
pop
call
add
sub
loopne
in
icebp
mov
mov
mov
scas
xor
jg
cmp
insb
data16
mov
add
scas
cmp
into
scas
repnz
xchg
mov
sbb
xor
cld
pop
lret
xor
scas
std
add
in
std
mov
popf
mov
mov
mov
mov
mov
mov
nop
clc
hlt
xchg
pushf
clc
lods
xchg
push
movsl
bnd
xor
insb
push
fsubs
cmc
or
lods
xchg
loop
das
sti
daa
out
xor
cld
push
and
adc
test
or
icebp
je
enter
mov
in
sbb
add
arpl
stos
or
icebp
movsb
stos
mov
lea
orl
jae
into
jmp
sub
mov
mov
add
stos
test
add
gs
into
fsubrl
insb
movsl
mov
cmp
fcompl
addr16
add
xor
add
xor
test
or
add
test
cmp
test
push
xor
ds
fsubrl
mov
mov
sbb
test
das
jo
or
mov
dec
test
dec
add
lds
icebp
inc
sbbl
fwait
cld
xor
cld
pop
add
test
jmp
clc
inc
sti
xor
hlt
dec
call
cmpsl
arpl
xor
push
xchg
cmpsl
dec
pop
jae
lock
ret
sbb
fs
push
inc
cmpsl
test
arpl
dec
mov
les
in
movsb
aam
sub
pushf
enter
cmp
jnp
and
jae
push
push
sbb
aam
mov
movsl
mov
mov
movsb
pop
adc
fsubrl
in
or
test
icebp
and
jl
add
movsb
jl
lea
rclb
lods
xchg
and
xor
cmp
xor
cltd
pop
xor
cld
pop
ret
dec
dec
push
shl
dec
and
ror
push
sbb
adcl
hlt
shlb
les
mov
cmp
into
mov
sub
lods
xor
outsb
or
mov
add
mov
push
in
push
push
int3
mov
std
insl
push
or
mov
and
or
into
add
inc
outsb
les
ror
dec
lea
xor
mov
into
in
bound
add
aam
mov
mov
sbb
int
adc
test
inc
mov
xchg
mov
inc
fucomip
test
and
std
mov
dec
adc
push
iret
loopne
xor
sahf
in
inc
and
in
or
adc
cmpl
add
clc
movsb
mov
in
add
xor
mov
lahf
jns
inc
add
sti
xor
push
or
into
xchg
add
mov
mov
jmp
mov
faddl
mov
mov
cwtl
or
jmp
mov
int3
adc
sbbb
dec
sub
sti
dec
in
push
xchg
inc
jmp
sbb
cmc
xor
fnstsw
jb
std
add
adc
cld
push
int
repnz
mov
imul
xor
outsl
movsb
mov
stos
dec
dec
add
dec
xchg
sti
xor
in
dec
push
mov
and
inc
hlt
into
mov
lods
mov
ret
mov
adc
hlt
push
and
adc
out
dec
and
cmc
dec
movsb
cmp
mov
cltd
mov
fs
das
dec
in
add
popa
xor
mov
xor
and
push
test
cli
and
mov
mov
mov
gs
mov
or
shll
cld
lea
adc
inc
sahf
push
imul
cli
cli
xor
mov
pop
stc
shrl
xchg
jle
hlt
mov
xor
out
sbb
xor
sbb
mov
or
popa
enter
je
push
add
mov
jae
sti
int3
jno
pop
cld
xchg
or
jbe
push
adc
repz
inc
dec
imul
xchg
lods
and
cwtl
jns
mov
push
inc
jnp
inc
dec
fsubs
xchg
iret
sub
xor
mov
in
push
enter
xchg
hlt
test
inc
xor
in
stc
into
out
mov
jg
xor
push
call
dec
fwait
in
mov
adc
pop
mov
aam
xor
test
inc
ret
sub
adc
pop
inc
imul
cld
in
mov
push
adc
push
xor
or
js
out
jle
inc
push
xor
or
pop
stc
or
pop
cmc
cmp
ss
mov
push
mov
mov
and
push
sbb
dec
test
dec
pop
xchg
cltd
adc
lahf
push
testb
cwtl
pop
addl
push
and
xor
sub
lock
test
xchg
sbb
or
add
lock
inc
adc
nop
add
xlat
scas
dec
jb
add
fidivs
popa
icebp
mov
xchg
add
int3
dec
sbbl
and
hlt
xchg
sbb
fmulp
lods
cmpl
scas
test
ds
xchg
cltd
fwait
fwait
add
or
add
sub
ds
int3
orl
in
repnz
or
add
stos
lock
enter
adc
es
pop
arpl
add
int3
data16
xor
pusha
orl
repnz
mov
adc
int3
faddl
in
in
loop
sti
or
ljmp
mov
ror
rorb
adc
andl
rolb
mov
and
or
pop
enter
adc
pop
and
lock
push
adcl
shlb
pop
hlt
xchg
in
rolb
aam
mov
bnd
mov
les
pop
mov
add
mov
inc
icebp
mov
jl
shlb
mov
int3
enter
out
repnz
mov
mov
inc
int3
je
jb
xorb
mov
repnz
call
repnz
orl
shlb
mov
int3
rolb
mov
pop
push
add
mov
sub
pop
mov
fs
int3
nop
andl
mov
add
repnz
orl
shlb
mov
int3
les
pop
add
pop
or
add
jp
push
lcall
mov
enter
ljmp
and
popl
push
add
push
repnz
movsb
mov
add
lock
int3
sbb
cmp
orl
jl
outsb
sahf
mov
or
test
add
cs
adc
or
hlt
dec
or
push
adc
bswap
jp
jo
sbb
add
orl
push
rclb
or
lock
repnz
or
fstpl
enter
nop
mov
lock
ss
popf
sub
outsb
int3
sahf
orl
cli
add
lock
adc
dec
sarb
mov
int3
mov
shr
adc
jg
xor
pop
int3
push
cmpl
cwtl
mov
fmulp
rolb
or
mov
jbe
fs
jo
test
mov
rorb
add
loopne
insb
andl
int3
sahf
cmpl
mov
add
lock
addb
pop
shlb
mov
test
mov
repnz
shl
lock
add
repnz
addl
jl
mov
int3
aam
repnz
in
sbb
test
xor
pop
orl
jo
mov
int3
add
rcl
loop
mov
push
or
push
repnz
shlb
mov
cwtl
lock
xchg
cmpl
mov
add
repnz
or
cmp
xchg
mov
inc
lock
int3
bound
mov
lock
int3
testb
and
xchg
add
mov
adc
add
aaa
pop
xchg
pslld
loopne
mov
add
subl
rolb
mov
add
xchg
adc
lock
cli
add
xor
rorb
adc
fistl
or
inc
lock
in
repnz
call
enter
dec
or
mov
lods
gs
rcl
outsb
loop
adc
shrl
mov
or
enter
dec
or
sbb
imul
or
lds
cltd
jno
pop
sbb
sahf
add
xlat
ss
push
mov
hlt
sub
xchg
xor
dec
les
sbbb
dec
xchg
loop
fidivl
xor
stos
xor
xor
cmc
imul
push
bound
pop
xor
dec
std
fildll
clc
andb
cmp
cmp
out
mov
sbb
icebp
aam
jle
mov
sbb
fs
push
sti
in
repnz
xor
ja
lcall
in
cmpsl
push
stc
ficoml
mov
jno
push
adc
pop
mov
cmp
sbb
cld
xor
dec
loope
sahf
or
adc
es
imul
mov
inc
pop
jecxz
mov
xchg
dec
out
mov
adc
add
mov
ret
fsubs
jecxz
xor
ljmp
and
push
xchg
or
xchg
lret
fistpl
and
mov
movsb
sub
add
lock
xchg
push
mov
imul
mov
cmp
sub
mov
add
push
cmc
push
loope,pt
lea
cmp
or
jp
xor
lret
xor
aam
call
xor
into
push
mov
insl
mov
mov
inc
jnp
movsb
les
into
push
sbb
mov
adc
cld
rolb
adc
adc
adc
fucomi
cmp
sbb
loope
pop
sbb
xor
inc
imul
setg
mov
sub
adc
sbb
xorb
xchg
stos
xor
dec
mov
jb
loopne
mov
xchg
adc
roll
sub
popf
push
push
hlt
jnp
dec
sbb
data16
push
fs
ja
pusha
cwtl
clc
inc
xor
mov
jne
and
or
divb
jl
test
sbb
in
movsb
mov
outsb
inc
jo
xor
movsl
sbb
test
pop
andl
or
adc
icebp
imull
in
pushf
pop
cltd
pop
mov
std
test
sub
cmp
mov
push
aas
push
lret
add
call
in
push
aam
call
adc
jge
xchg
and
mov
shl
cmp
mov
or
bound
mov
mov
lcall
mov
in
cmpsb
ss
ljmp
sub
push
lret
iret
or
cmp
shlb
sub
xor
mov
cmc
repz
mov
push
cmp
gs
lods
and
fdivrl
and
pop
lea
or
jge
adc
mov
xor
xor
adc
mov
lea
in
sub
xchg
mov
sbb
fsubrl
add
jo
push
ds
xchg
or
mov
ja
xchg
loopne
xor
fs
imul
xor
sub
shlb
xor
pop
pop
int
dec
adc
xor
pop
xchg
or
aad
mov
adc
movsb
push
lahf
cmpsb
or
je
jns
push
mov
fs
add
adc
pop
jmp
int3
sbb
pop
xor
out
sti
xchg
sbb
jp
bound
xor
add
int
cmc
test
pop
cmp
pop
es
xor
xchg
inc
mov
jg
inc
dec
ja
mov
dec
out
pop
and
adc
cld
sbb
dec
data16
cmp
xor
sbb
mov
int
fs
mov
test
leave
repnz
icebp
or
je
shr
in
enter
popf
push
adc
pop
fldenv
or
mov
and
adc
in
sbb
insb
lock
adc
mov
and
xor
inc
xor
pop
cwtl
ret
inc
test
mov
stc
inc
push
add
cmp
test
sub
or
mov
and
jmp
roll
test
sub
push
add
mov
add
xor
cmp
dec
cwtl
cmp
in
push
out
adc
xchg
adc
xor
cmp
adc
mov
hlt
sahf
xor
leave
ficompl
popf
xlat
pavgb
xchg
movsb
nop
xor
add
add
hlt
repz
add
or
ss
push
xor
jmp
mov
push
mov
adc
push
fmull
xor
or
pop
out
and
xor
mov
insb
je
ja
push
xor
push
clc
lods
outsl
outsb
inc
cmp
mov
lea
adc
fmuls
add
xor
push
sti
popf
jnp
movsb
sub
xor
push
aam
jns
jne
lahf
inc
fdivrs
adc
mov
push
xor
add
mov
enter
cmc
and
jp
sub
movsl
out
xor
stos
lea
in
mov
inc
mov
xor
push
dec
pop
sbb
push
sbb
jo
adc
pushf
sub
sahf
fimull
mov
loope
or
adc
mov
jno
jl
xorb
ret
scas
mov
mov
roll
xchg
mov
xor
dec
cmp
xchg
cld
dec
lahf
cmp
in
xor
adc
adc
les
inc
pop
push
mov
sub
movsb
add
jns
cmp
xlat
pop
stos
fs
mov
fidivl
aad
cmc
xor
aam
inc
ja
out
pop
jae
pop
mov
or
pop
xchg
xor
cld
loopne
daa
xchg
sbbb
dec
xor
test
xchg
pop
xor
push
cltd
int3
xlat
rclb
and
das
mov
mov
ja
movl
cmp
add
xor
int3
cwtl
lds
imul
clc
jns
iret
adc
xor
cmp
sbb
outsb
jb
imulb
xor
mov
mov
push
pop
into
popf
loopne
aaa
push
mov
xor
mov
fistl
mov
outsl
sbb
mov
cltd
icebp
and
and
fs
packsswb
int3
sarl
xor
out
loope
mov
sti
dec
jle
adc
insb
mov
fisttps
mov
adc
push
xor
sbb
das
lock
push
mov
push
fimuls
je
test
inc
adc
shld
out
imul
mov
mov
mov
and
pop
stc
push
out
push
dec
push
addb
pop
mov
pop
ja
ret
sti
hlt
test
mov
lea
and
in
call
cmp
je
lock
cltd
dec
xor
rcll
mov
ja
mov
adc
push
ljmp
xor
test
mov
inc
jle
aam
clc
in
dec
dec
sti
xor
mov
mov
xlat
and
repnz
icebp
mov
fisttpl
fsubl
add
test
and
out
inc
dec
or
cs
xchg
movsb
xor
mov
sbb
and
cmc
xor
cmp
imul
dec
push
in
adc
sbb
xor
xor
xorb
and
sbb
inc
jge
sahf
call
xor
call
es
pop
xorb
xchg
push
jmp
in
cmp
and
push
or
in
inc
hlt
and
ds
xor
int3
icebp
xlat
pop
stos
inc
imul
sub
dec
push
in
xor
leave
dec
lcall
and
adc
loope
sbb
mov
shll
xor
mov
xor
pop
xchg
push
cld
xor
je
cld
adc
je
sub
xchg
fisubrs
jns
in
nop
pop
jae
icebp
xor
xor
push
jo
cmpsb
sub
pop
sti
mov
mov
or
mov
push
dec
jl
xor
mov
inc
push
push
vandpd
xor
outsl
mov
jns
mov
cs
cs
lock
xor
arpl
adc
xor
int3
shrb
stos
mov
xor
xor
mov
xor
push
pminsw
sub
fisubrs
xor
pop
in
mov
mov
jae
lods
sub
or
push
into
ss
xchg
xor
stc
pop
push
jns
mov
mov
and
icebp
push
jo
pop
sbb
jb
xor
ljmp
jns
xor
xor
adc
bound
add
mov
pusha
xchg
sub
jl
cmpsl
scas
movsb
divb
and
or
sbb
or
jo
mov
fisubrs
inc
xchg
je
pop
xor
mov
addr16
or
sbbb
fs
cmpsl
dec
xor
lds
popa
ret
stos
mov
ret
pop
and
cmpsl
mov
lahf
mov
loopne
push
mov
mov
je
inc
stc
ds
mov
mov
or
lock
sarb
xorb
scas
inc
ret
cmp
xchg
inc
mov
xchg
clc
lods
test
xor
in
xchg
xchg
sub
sbb
cmpsl
les
xor
out
sub
mov
mov
pop
fisttpll
xor
adc
mov
cmp
xor
mov
adc
or
mov
leave
sbb
decl
test
dec
into
cmpsb
xor
mov
rcrl
incb
movsl
mov
hlt
in
in
arpl
xor
xor
cli
das
hlt
or
icebp
nop
cmp
fstpl
ret
mov
mov
mov
xor
cmp
fdivr
and
jge
mov
push
sbb
aam
adcl
fnstcw
sub
mov
adc
mov
push
xor
movsl
xor
andb
inc
jo
nopl
inc
loop
xor
lahf
inc
int3
mov
pop
lods
xor
shrl
mov
dec
lock
or
shll
mov
mov
xchg
and
inc
inc
and
ss
int3
add
jns
adc
mov
scas
jae
cmp
mov
adc
mov
clc
out
mov
and
jmp
inc
xor
xchg
pusha
inc
rclb
mov
xor
int
mov
sarl
xlat
loopne
xor
jbe
loop
cmp
xor
mov
mov
lock
push
scas
xor
addr16
xadd
jl
in
les
leave
xor
and
cmp
cmp
fs
sarb
adc
lods
pop
push
adc
je
cs
push
paddusb
js
sub
test
aaa
repz
inc
mov
cmpsb
pushf
cmp
scas
fidivl
xchg
sub
rorb
xor
or
push
test
jns
mov
xchg
and
sbb
test
iret
orb
mov
nop
push
sub
stos
xor
fstp
insb
lea
xor
das
sub
push
sbb
rcrl
out
jg
adc
inc
push
mov
xchg
sti
xchg
adc
dec
outsl
jp
hlt
pop
mov
jne
out
shrb
test
xor
xor
ds
pop
mov
cld
jo
mov
adc
fstpl
lds
xor
aad
arpl
pop
sar
push
and
push
adc
cmp
mov
adc
add
xor
push
or
cs
movsl
xchg
mov
pop
pop
out
test
call
je
sar
out
jne
pop
mov
add
push
jmp
xchg
ljmp
xchg
sarl
lahf
or
setle
adc
adc
outsb
cmp
pop
adc
es
mov
jns
xchg
mov
sti
adc
pushf
dec
stc
mov
xchg
jmp
pop
cli
adc
jae
mov
xor
jg
testl
mulps
out
test
test
imul
imul
loopne
stos
mov
lret
into
out
sub
xor
add
jo
or
in
hlt
inc
mov
push
je
outsl
jo
sbb
cmp
xchg
pop
push
xor
addl
loop
xor
pusha
cmp
in
sbb
mov
arpl
popa
sbb
scas
mov
fsts
push
push
aad
sbb
cmp
pushl
in
sbb
jl
push
xchg
xor
inc
pop
rcr
xor
js
dec
leave
mov
notb
mov
jp
mov
in
inc
scas
sti
gs
sbb
jg
rol
std
xor
arpl
ja
into
pop
sbbb
xor
rclb
jge
cmpsb
shll
cli
fldcw
jbe
mov
lock
test
inc
insb
mov
movsl
sbb
or
repz
xlat
inc
adc
and
add
popf
mov
ljmp
pusha
mov
pushf
xchg
xor
inc
mov
adc
sbbl
dec
andb
mov
xchg
pop
cwtl
pop
dec
mov
sub
rcrl
and
or
add
lock
cld
mov
cmpsb
fimuls
mov
or
sub
jno
sub
mov
push
adc
rcll
clc
adc
xor
sbb
sub
mov
xor
imul
pop
in
inc
sarb
xor
sub
scas
jecxz
inc
in
add
xor
jae
mov
shrl
lea
xor
aaa
cld
mov
testb
jl
inc
hlt
punpckhbw
or
out
mov
out
jb
jge
xorb
jle
xor
xor
les
test
sbb
hlt
pop
scas
pop
mov
mov
fs
inc
nop
pop
xor
add
mov
push
push
arpl
pushf
push
stc
xorb
mov
mov
pop
push
mov
shll
sub
orl
mov
loop
cltd
push
jge
movsb
xor
add
push
jb
fs
add
pop
add
xor
sub
mov
stos
shlb
mov
or
push
mov
loop
push
test
or
and
adc
out
or
xchg
push
sub
sbb
iret
sub
xor
test
std
mov
loope
mov
xor
faddp
xchg
or
xchg
es
inc
cmc
xor
mov
enter
gs
out
push
fadds
adc
xchg
imul
or
leave
rcrb
xor
push
mov
add
sub
fcoml
movsb
cmp
mov
inc
and
or
push
add
mov
pop
pop
xchg
in
cli
lock
xor
xor
sub
ljmp
pop
jle,pt
mov
fmul
and
je
mov
xor
call
inc
inc
xor
mov
iret
lods
inc
pop
jb
jno
xor
cli
xor
loopne
sbb
mov
xchg
sbb
pop
adc
jge
outsb
mov
mov
fadds
test
mov
loopne
adc
cli
mov
adc
push
jp
or
seta
add
clc
xchg
lods
push
pop
test
or
jp
add
mov
xor
inc
xorps
test
cmp
jne
add
push
mov
inc
ficoml
or
arpl
int
bound
mov
test
dec
xlat
pushf
mov
mov
push
push
xchg
add
arpl
int
cli
inc
xchg
dec
adc
sbb
add
stos
pop
out
and
lds
icebp
xor
test
sbb
pop
jns
lods
out
adc
repz
aam
arpl
adc
imul
leave
push
fwait
jmp
sbb
add
dec
dec
pop
or
and
and
out
ja
xor
add
sub
movsb
insl
popf
mov
jle
pop
xchg
jmp
ret
mov
mov
es
hlt
dec
jl
xchg
lds
jne
or
adc
fdecstp
insb
and
fs
scas
das
pushf
xor
pop
aad
push
cmp
ss
xchg
cmpsl
je
les
hlt
inc
imul
aaa
pop
add
add
mov
push
fwait
hlt
dec
test
movsl
or
sub
lcall
cmp
mov
ja
push
fimuls
xor
jnp
jl
inc
pop
pop
xor
mov
inc
sub
fmul
pop
jns
divb
pop
add
sub
sbb
jecxz
push
or
nop
int3
fbstp
mov
sub
and
mov
imul
aam
cmp
loopne
fnsave
jo
xor
and
andb
lods
mov
cmpsb
psrlq
fnstenv
mov
pop
out
push
je
aas
ret
pop
test
or
ljmp
ret
js
je
add
nop
sbb
aam
lock
cli
inc
xor
adc
ds
or
push
mov
sub
imulb
test
movsl
loop
les
adc
add
adc
push
adc
pop
ffree
mov
gs
adc
push
or
jge
lret
divb
push
mov
xor
faddl
lock
jmp
psrlw
sbbb
sub
mov
add
js
xor
je
dec
stc
ret
xor
pop
loop
xchg
and
lahf
ljmp
mov
cltd
cld
ja
xchg
xchg
in
imul
push
jae
lds
je
stc
popf
xchg
xor
mov
mov
in
push
outsb
mov
cmp
or
out
push
push
stos
adc
push
mov
icebp
xor
fmull
and
pop
dec
ret
rclb
adcb
adc
add
mov
xor
fwait
jmp
jl
outsb
lcall
jno
sarl
push
push
mov
add
ljmp
in
add
mov
adc
or
sahf
idiv
mov
imul
ss
push
cltd
or
lods
push
and
mov
nop
mov
mov
out
pop
mov
shl
sbb
and
pop
test
xor
cmp
insl
xor
sub
movsl
cmc
add
cld
jne
xor
xchg
push
mov
mov
ds
arpl
jno
jp
in
int3
in
dec
dec
xor
dec
mov
inc
adc
mov
mov
pop
pop
mov
pop
xor
lock
adc
ja
jle
push
adc
mov
mov
pop
xor
rorl
push
add
xchg
and
lods
data16
push
movsl
arpl
cld
cmp
push
repz
inc
xchg
xchg
sbb
fists
das
jp
cmc
pop
in
popa
pop
je
cltd
fsub
xor
jle
in
xchg
or
rorb
pop
xor
test
addb
or
and
fnsave
dec
mov
jl
xor
add
lahf
mov
sub
fidivs
int
pushf
push
and
inc
clc
cwtl
or
dec
mov
fdivrl
jns
cli
mov
leave
push
loopne
jne
stos
hlt
mov
mov
mov
icebp
int3
lods
fiaddl
loop
iret
outsl
jae
xor
loopne
cmp
cld
push
cmp
cmp
add
adc
xchg
xor
jb
xor
cmpsb
les
test
mov
adc
xor
popf
daa
fmuls
jne
adc
xchg
adc
jb
push
mov
or
lret
xchg
xor
cmpsb
mov
xchg
and
cmpsl
lea
repnz
sti
hlt
xchg
fdivs
sbb
push
hlt
add
aam
test
out
aad
sahf
popf
and
sbbb
call
lods
sub
pop
sub
std
dec
jl
call
pop
fstl
mov
incl
out
sbb
ret
ret
iret
jmp
push
and
out
inc
mov
cld
ret
jno
xchg
xor
dec
sub
movsl
xchg
icebp
jae
scas
aam
pop
mov
push
les
shrb
test
in
adc
mov
sbb
shlb
jne
lret
leave
js
in
pop
jmp
pop
out
mov
add
dec
push
cmc
or
ja
scas
dec
or
mov
adc
pop
push
nop
xor
mov
mov
mov
test
lret
jns
pushl
popf
aam
adc
insl
movsb
lret
pop
mov
outsb
dec
and
xor
cld
sbb
mov
xor
xor
sbb
ljmp
or
imul
and
or
push
pop
xlat
adc
jmp
and
xor
fwait
mov
xchg
or
enter
cbtw
mov
lods
mov
mov
pop
es
sbb
jecxz
inc
pop
xor
int3
pushf
sub
mov
mov
pop
hlt
lret
add
in
leave
les
dec
shlb
insl
in
adc
sarb
loop
out
sbb
daa
adc
and
fdivr
in
push
mov
or
imul
mov
nop
lahf
adc
sub
push
cmc
movsb
xchg
cld
out
jo
mov
push
lock
loop
or
arpl
cwtl
imul
xor
mov
lods
test
push
call
mov
or
mov
je
int3
xchg
int3
add
sbb
mov
dec
or
fs
movsb
xor
xor
sbb
xor
adc
mov
clc
xchg
lahf
sbb
xchg
movsl
cmp
dec
push
rcr
cmp
cmp
push
and
or
push
out
je
rdpmc
cli
xor
dec
mov
jecxz
aam
jmp
or
xor
mov
add
xchg
notb
pop
arpl
jge
out
out
cmpsb
nop
add
adc
or
xor
xchg
push
or
mov
xor
mov
or
sbb
mov
add
into
pop
das
pushf
in
jae
lret
fwait
lods
pop
xor
push
add
pop
mov
jl
xor
sub
xchg
inc
fcmove
push
mov
pop
int3
or
xchg
mov
cmp
lcall
sbb
adc
sbb
mov
fistpl
sub
fs
out
cmp
inc
push
push
jnp
jne
xchg
add
movsl
xor
or
dec
and
xorb
sbb
and
and
sahf
inc
inc
cmpsb
insb
int3
xor
outsb
pushf
mov
mov
xor
jecxz
inc
add
cmc
lea
pushf
mov
mov
xchg
mov
pop
mov
push
pop
xor
add
inc
dec
xorb
sub
mov
test
popf
xor
in
hlt
push
gs
lahf
xchg
or
in
pop
aam
cmp
mov
xor
dec
pop
dec
push
add
mov
sub
jp
push
popa
dec
or
int3
dec
dec
xor
sahf
mov
pop
xchg
lret
xor
ret
aas
mov
or
push
and
mov
adc
inc
out
fwait
sbb
mov
mov
pusha
movsb
jl
inc
insb
mov
sbb
inc
lret
lcall
pop
movsl
negb
aam
dec
lock
ret
xor
sbb
xchg
mov
frstor
sub
bound
xchg
enter
jo
sub
std
lock
pop
repz
xchg
mov
leave
imul
iret
insb
aaa
out
xor
repz
loop
or
sub
movsl
sbb
push
sahf
enter
lea
xor
mov
push
and
push
out
xor
or
jecxz
or
xor
std
test
inc
adc
in
loope
sbb
in
xchg
stos
pop
imul
add
xor
scas
int3
fwait
ss
dec
test
push
sbb
inc
mov
loopne
ja
xchg
stos
push
push
clc
aam
idiv
pop
jecxz
cmp
enter
xor
jb
dec
out
adc
xchg
imul
mull
jg
xor
or
push
dec
xor
out
or
push
sbb
sub
test
int
pop
jle
outsb
jecxz
xor
xor
ja
jns
inc
loope
cltd
sbbl
out
mov
sarl
and
mov
mov
push
jmp
lret
int
inc
mov
push
jge
adc
sbb
jns
sbb
cld
test
xor
aad
push
xor
loop
sub
mov
jmp
jle
inc
add
and
lock
add
push
and
add
mov
das
cmp
xor
push
clc
xor
test
or
pop
test
movsb
cwtl
xor
std
imul
add
xor
sub
je
rorl
sti
pop
jb
ljmp
mov
sbb
xor
in
push
inc
test
mov
cld
jmp
in
scas
cmp
jle
xor
xor
repz
cli
std
cmp
add
mov
mov
add
jle
mov
outsl
mov
pushl
lea
or
sub
cmp
xor
cltd
xlat
jnp
and
jbe
inc
and
or
mov
test
aas
fwait
and
xor
ljmp
xor
shlb
inc
fdivs
adc
pop
mov
jl
cld
in
int
das
push
or
ja
adc
repnz
stc
xchg
xor
xor
iret
mov
xchg
cmp
jl
add
adc
test
cwtl
push
or
adc
ja
jb
adc
jecxz
insb
lods
inc
fmuls
sysenter
icebp
fs
mov
imul
mov
sub
push
aam
jne
lock
lahf
xor
dec
adc
in
je
es
jmp
pop
sahf
test
call
sbb
jl
mov
pop
mov
push
lret
push
fs
lods
adc
inc
aam
outsl
insb
lcall
cmp
adc
and
cmp
cmp
or
or
std
cli
sub
adc
add
cmp
sbb
push
into
test
mov
sub
jg
out
not
pop
dec
inc
bound
sbb
dec
jne
imul
aad
add
divb
outsb
in
adc
outsl
lahf
insb
jo
or
mov
push
jae
in
shll
jge
shlb
xor
mov
jnp
ficomps
dec
push
jge
mov
cwtl
and
aaa
mov
jmp
stc
adc
sbbb
imul
add
scas
call
and
cltd
push
jae
push
mul
adcb
dec
xor
dec
in
mov
leave
mov
pop
push
push
add
or
sub
loopne
or
sub
orl
pop
cmp
adc
hlt
add
fmuls
pusha
or
adc
cmc
mov
push
xor
dec
xchg
jmp
mov
shl
xor
loop
pop
sbb
jbe
xor
cmp
out
outsb
aad
xlat
ds
xor
xchg
xchg
stos
pop
push
imulb
xor
mov
xor
stos
pop
ret
sbb
sbb
mov
xor
jmp
lret
adc
and
mov
es
xor
pop
fcomp
fstpt
imull
daa
push
or
mov
sbb
nop
arpl
fst
xor
adc
push
adc
or
ficoml
adcb
inc
int3
jle
js
sub
incl
add
lods
pusha
fistl
jl
xchg
dec
jae
insl
xor
pop
add
negl
mov
mov
and
pushf
xor
mov
mov
movsb
mov
leave
mov
jns
dec
ljmp
rcrb
mov
repnz
push
mov
jmp
aas
rcrl
in
arpl
inc
push
mov
add
fwait
std
mov
aad
add
jns
push
aam
dec
push
cld
add
mov
hlt
aas
fmull
les
push
xchg
lret
loop
arpl
leave
adc
push
xor
and
stc
mov
xor
cmpsb
ss
ljmp
or
jo
ret
lret
icebp
repnz
push
ds
jo
adc
mov
cmp
jge
arpl
sub
cld
pop
mov
aad
mov
test
xor
jbe
out
and
mov
addl
xor
xor
pusha
adc
pop
lret
lcall
mov
cmpsb
fwait
int3
mov
xlat
add
pop
mov
cld
push
dec
or
xor
andl
jle,pn
cmpsb
out
test
in
movl
jmp
popa
and
mov
out
mov
push
iret
mov
loopne
mov
adc
fsubs
test
pop
push
adc
push
or
out
shrl
ficoml
aam
cmp
inc
push
sbb
testb
jge
loop
dec
xor
bound
adc
mov
imul
arpl
xchg
xor
aad
push
std
mov
xor
ja
lea
in
inc
adc
sub
sbb
cmpsl
xor
pop
pop
aas
pushf
in
jnp
fs
add
cwtl
push
mov
and
pop
clc
ss
fsubrl
sbb
xor
push
cwtl
pop
or
js
cmp
mov
dec
xchg
leave
jl,pt
mov
xor
xor
and
push
aad
lret
repnz
iret
aam
xchg
xor
or
movsb
cmp
inc
push
insb
lods
sbb
push
xor
jl
sub
sar
popf
pop
fdivs
pop
adcb
inc
push
and
push
xor
pushf
push
and
leave
add
jnp
pop
cld
sub
les
xor
pop
popa
cmp
fnstenv
jp
aam
loopne
cmp
out
adc
xchg
add
pop
xor
sub
test
cmp
js
mov
popa
push
or
daa
aaa
scas
out
or
push
pop
pop
ss
in
dec
dec
pop
or
test
dec
pop
inc
in
in
aam
call
imul
push
int3
cs
gs
mov
sarl
loopne
pusha
les
subl
sub
xchg
jmp
fidivrl
cmpsb
stos
fbld
inc
push
call
out
lea
movsl
pop
add
call
pop
out
push
pop
xor
lahf
inc
sbb
push
loope
xor
jns
dec
dec
mov
jmp
out
jb
in
aaa
enter
xchg
sahf
xchg
push
lock
popf
cmp
or
andb
scas
xchg
mov
icebp
dec
or
ds
pop
jge
cmp
call
mov
fnstsw
std
out
sahf
scas
or
mov
lods
and
ror
mov
or
repnz
ror
mov
je
xor
jb
mov
push
popa
xor
cld
sahf
out
cmp
ja
popa
sbb
out
lret
pop
loope
and
mov
cmpsb
lods
sub
rcll
test
dec
or
add
lcall
pushf
sub
mov
ds
aaa
mov
adc
push
mov
jnp
es
shr
dec
lahf
inc
cmp
sbb
pop
sbb
lods
sahf
xchg
mov
inc
xchg
jmp
lahf
les
sub
sti
aad
mov
std
ret
in
xchg
repz
inc
fidivrl
cmc
inc
inc
shlb
addb
pop
cmpsb
xchg
inc
push
push
lods
jg
lea
jmp
mov
jbe
mov
lds
push
cmpsb
xchg
out
out
push
xchg
sub
daa
jle,pn
ja
inc
mov
gs
outsl
ret
gs
mov
mov
xchg
fs
scas
or
xor
push
xchg
lock
push
mov
sub
frstor
sub
sbb
loope
xor
shll
xlat
push
xor
test
push
sub
int
je
pusha
and
sti
arpl
cmp
ror
sbb
mov
sub
fimull
ror
out
jl
into
dec
mov
stc
test
lods
sbb
stc
addr16
gs
lods
dec
loopne
sbb
scas
aaa
jle
adc
rcr
ljmp
mov
sub
sub
ret
inc
cmp
cmp
cmpsb
popa
scas
adc
push
adc
mov
sahf
jae
cmp
mov
or
test
scas
adc
fwait
orb
fldt
clc
das
sbb
adc
pushf
xor
nop
add
aas
pop
adc
sub
cli
test
lret
adc
jnp
cmp
nop
inc
mov
mov
or
mov
aas
cmpsb
ffree
sub
jno
cmpsb
lods
fistpl
call
test
pop
pop
push
add
inc
dec
std
pop
in
sub
imul
mov
mov
test
push
cli
adc
mov
pusha
pop
push
push
mov
mov
iret
sub
in
in
imul
mov
or
mov
fisubrs
daa
inc
mov
inc
and
inc
add
sub
adc
jle
loopne
dec
inc
cmpb
and
lahf
jbe
mov
dec
adc
inc
push
jne
jge
mov
push
add
dec
std
js
xchg
dec
mov
mov
push
cld
loop
xchg
mov
gs
scas
pop
jnp
mov
test
push
call
divl
aad
sub
adc
add
push
mov
or
adc
add
retw
inc
push
call
adc
std
adc
add
add
mov
xor
cld
fdivr
nop
mov
push
jmp
sarl
sub
mov
gs
push
push
push
js
fnstcw
xchg
vpunpckldq
negb
cmp
adc
jne
inc
je
hlt
inc
dec
cmp
lock
xchg
and
mov
insl
movl
inc
jg
jl
add
pop
int
hlt
arpl
cmpsb
scas
in
mov
gs
frstor
outsb
adc
jge
mov
cmp
icebp
lret
lea
repnz
mov
test
xchg
inc
out
inc
sbb
ret
adc
xchg
insb
sti
lret
dec
push
or
pusha
es
pop
ja
in
movsb
mov
push
call
daa
in
mov
in
or
jl
lods
sarb
call
stc
sbb
mov
or
dec
push
jo
fs
fisttpl
pop
cld
adc
mov
push
push
inc
lahf
and
cltd
ret
and
in
icebp
arpl
je
pop
xchg
inc
cmpsb
sbb
aas
adc
jl
jecxz
mov
dec
cmp
je
pusha
and
out
pushf
or
pop
pop
hlt
jns
xchg
movsl
jecxz
cmp
cmpsb
scas
iret
adc
ds
xor
je
mov
and
lcall
ds
xchg
ficoms
jae
rcrb
out
jo
dec
out
cmpsb
pusha
lcall
jbe
jl
xchg
push
addr16
adc
loope
loope
aaa
add
mov
xchg
xchg
and
enter
mov
or
add
push
pushf
push
mov
rol
lods
and
loopne
jne
xchg
jmp
dec
dec
sub
sbb
sbb
dec
inc
cmp
cmp
sbb
outsb
fnstenv
push
and
push
sub
xor
and
and
inc
inc
cwtl
test
stc
mov
add
jno
cmpsb
mov
out
push
call
iret
push
call
add
cmp
xor
mov
imull
js
jle
imul
mov
mov
or
mov
imul
sar
int
lea
stc
xlat
cli
enter
inc
pop
push
mov
call
xchg
pop
add
and
sbb
mov
les
aam
lret
dec
fcompl
mov
inc
mov
mov
int
fnstcw
mov
lret
xlat
mov
pushf
pusha
pushl
ret
push
call
or
orb
ja
outsl
inc
inc
pop
pop
mov
sbb
rolb
mov
or
pop
cmpsb
hlt
and
inc
popf
fdiv
add
mov
lods
test
push
xor
cmp
dec
jne
xchg
mov
or
jge
and
clc
test
and
sar
clc
cmpsl
push
ret
xchg
sbb
dec
mov
mov
inc
mov
loope
cmpsb
mov
call
add
call
adc
inc
jecxz
outsb
sub
jl
jecxz
sub
mov
fwait
dec
pop
sarl
out
pop
in
test
push
sbb
lret
aam
pushf
mov
loope
add
add
data16
outsl
mov
add
in
adc
add
sub
pop
adc
mov
inc
pushf
mov
lea
dec
inc
push
lods
test
mov
movsl
repz
daa
push
pop
dec
push
call
xor
fst
mov
roll
pop
push
scas
and
popa
int
outsl
test
mov
lret
xchg
mov
adc
iret
inc
lea
cmc
or
adc
imulb
jne
out
jle
jecxz
add
cmp
pop
fwait
pop
and
andl
ret
ja
pop
push
cli
test
cmp
scas
cmp
and
xchg
and
push
call
mov
or
push
jmp
adc
clc
into
int
fimull
dec
int
push
addb
cld
cmp
loop
xchg
jb
mov
sbb
dec
in
xlat
inc
mov
push
lock
addr16
pop
popa
adc
rol
scas
lret
fldl
dec
mov
repz
mov
adc
idivl
mov
sbb
js
cld
cmpsb
push
call
fcmovnb
push
scas
adcl
sub
inc
mov
or
mov
push
pop
iret
push
jl
or
in
adc
mov
out
fcomip
cmc
cld
out
test
cmpsl
mov
rol
aam
mov
add
jp
jbe
cmpsl
mov
out
mov
sub
sbb
mov
aad
test
cmp
push
call
jle
jle
dec
or
imul
insb
ret
push
jne
push
cmp
xor
inc
out
push
xlat
icebp
push
loopne
pop
cmpsl
mov
ljmp
inc
test
ret
bound
adc
into
test
scas
imul
pushf
out
cmpsb
jnp
mov
mov
xchg
push
test
push
and
subl
mov
sub
push
push
cmp
ret
xchg
adc
hlt
push
aaa
xchg
mov
test
xchg
adc
popf
cmp
test
or
add
das
test
add
shrb
jge
insl
lret
insl
fs
js
cld
roll
push
push
dec
xchg
stos
xor
inc
xchg
mov
jns
out
jne
out
mov
jno
inc
out
pusha
xor
mov
and
movl
adc
mov
add
sub
jle
push
jp
pushf
cmp
mov
mov
mov
movsb
or
cltd
int
adc
jle
outsl
dec
enter
scas
mov
in
mov
cmpsb
mov
and
push
call
jl
stos
xor
test
addl
add
add
xor
lea
ja
setb
not
dec
jmp
not
iret
dec
and
les
fistpl
push
enter
add
cmp
pop
or
xchg
sbb
or
inc
js
or
pop
sbb
and
insl
inc
dec
xchg
fsubp
out
sub
mov
xor
ja,pn
sub
aaa
adc
mov
mov
push
or
cmpsb
mov
mov
add
push
add
push
call
aam
push
call
mov
add
cli
add
stc
adc
add
or
xor
xchg
mov
xlat
outsb
sub
jae
or
xchg
lret
mov
push
jo
mov
ss
stos
mov
cmp
cmp
ds
or
add
insb
add
xchg
mov
sub
adc
jbe
and
ljmp
iret
push
ss
gs
rcr
mov
cwtl
sub
jle
test
mov
push
add
sub
mov
xor
scas
inc
sub
in
leave
adcl
stc
xor
lock
sti
lock
or
push
out
xlat
test
jmp
cmp
lods
adc
jbe
jge
xchg
cli
outsl
mov
lahf
sahf
dec
inc
rclb
inc
xchg
and
aam
outsb
jne
daa
ja
jecxz
cmp
cmpsb
dec
dec
mov
mov
and
xchg
sbb
sbb
mov
sbb
pop
mov
mov
xchg
scas
and
lock
test
cmpsb
mov
faddl
push
call
stos
in
je
ss
call
cmp
cmp
test
pop
stc
add
and
adc
add
push
call
insl
pop
cmp
sub
addb
mov
fwait
mov
push
xchg
jae
mov
xor
xor
jae
add
push
jp
insl
iret
pop
sub
push
pop
int
mov
jp
pop
movsb
aam
jecxz
jae
xlat
loopne
xlat
or
ja
inc
out
jge
flds
xor
scas
les
lds
imulb
sbb
imul
enter
dec
jg
xchg
imul
in
sub
dec
pop
nop
add
movl
push
cmp
movsb
test
mov
add
push
add
outsl
movsl
mov
test
aas
out
int3
push
int
lret
bound
pop
in
mov
icebp
pop
nop
pop
leave
shrl
mov
push
push
jnp
jbe
cli
push
inc
shrb
int
aad
dec
test
mov
ss
inc
inc
xlat
and
ror
cltd
jle
jb
and
mov
leave
mov
dec
or
aas
aas
mov
mov
cmc
mov
dec
sub
adc
cmp
pop
push
inc
sahf
mov
mov
aaa
add
imul
cli
cmp
aas
xchg
outsb
repz
jae
add
pushf
jno
sub
loopne
stos
daa
mov
mov
pop
or
pushf
leave
test
inc
sahf
dec
lods
push
jnp
in
push
stos
cld
repz
or
cmc
cli
mov
mov
pop
pop
xor
aad
inc
push
call
sarb
add
xorb
icebp
sbb
jle
mov
push
stos
mov
sti
adc
aas
cs
out
ret
xchg
inc
in
mov
mov
mov
pop
les
inc
int3
loopne
push
pop
sbb
jmp
ja
fiaddl
mov
jnp
mov
repz
pop
es
adc
or
and
clc
std
pop
add
push
call
cmp
dec
ljmp
shr
movsl
add
mov
mov
pop
mov
scas
pop
inc
jecxz
xorl
addr16
mov
ret
jns
push
mov
or
xchg
push
jl
cmpsl
test
insl
xlat
or
mov
jp
mov
lahf
xor
push
or
hlt
add
xchg
mov
adc
dec
push
enter
frstor
xchg
icebp
inc
push
inc
call
out
add
into
adc
mov
ret
clc
sti
in
jmp
jmp
call
push
call
and
adc
add
dec
jnp
mov
pop
sbb
sbb
aam
js
pop
or
pop
push
int
outsb
sbb
sbb
inc
aas
and
and
cwtl
xchg
pop
test
adc
push
jecxz
sahf
fld1
fsubr
xor
xor
push
stc
xchg
enter
leave
sub
mov
jmp
xchg
xchg
dec
es
sahf
nop
dec
pop
imul
dec
insl
addl
std
jg
xchg
es
inc
and
fwait
mov
jno
mov
sub
es
std
xor
movb
lea
je
test
cmc
add
stc
pushf
pushl
jmp
ja
out
push
lods
push
sub
imul
push
in
fs
popa
pop
dec
jle
std
out
int
mov
decl
jnp
and
fwait
ret
cld
in
add
in
add
mov
mov
lret
aam
test
sbb
cs
pop
sbb
push
or
cmc
push
cmp
xchg
rolb
mov
das
sub
test
adc
add
test
mov
mov
mov
dec
repz
dec
xchg
nop
fcmovbe
or
dec
push
out
out
and
pop
push
mov
inc
ja
mov
inc
push
lods
popa
dec
fucomp
jecxz
pop
cmc
loop
cmp
std
inc
scas
adc
icebp
xchg
push
dec
ret
adc
std
pop
add
aaa
lds
push
out
imul
cmpsb
mov
jp
adc
add
cmp
ss
mov
mov
inc
femms
pop
test
push
out
mov
aam
mov
mov
xlat
push
sub
xchg
shrl
outsb
gs
stos
mov
sbb
xor
js
lret
jne
cmp
leave
test
in
imul
das
test
addr16
cli
mov
add
mov
add
sbb
mov
ret
sbb
lcall
add
sub
or
std
push
pop
mov
sahf
aad
cmpsl
stos
mov
test
jecxz
aad
push
les
jbe
sbb
nop
cmp
cmp
cmp
jns
xor
clc
dec
inc
gs
mov
lds
push
or
push
jg
pop
sar
mov
cltd
sbb
aam
rolb
lods
cmp
mov
mov
gs
leave
sarb
pop
imul
cmp
jp
dec
stc
enter
xchg
xchg
fdivs
lahf
and
popf
mov
mov
adc
aas
cmp
mov
out
mov
cmp
pusha
pop
scas
lds
popf
lds
cmc
inc
ret
je
xor
or
pop
sbb
jle
sti
jmp
outsb
outsb
aad
testb
jo
je
lret
push
push
cmp
or
pushf
shr
push
in
jl
mov
call
mov
jle
sub
negb
sub
xchg
int3
sti
xor
and
arpl
outsb
push
call
dec
inc
rclb
lock
mov
sbb
iret
mov
push
jno
lods
inc
imul
push
xor
icebp
inc
adc
and
imul
mov
mov
dec
fcmovne
int
loop
jae
mov
in
push
imul
or
sub
test
xor
mov
push
fdivrl
test
cmpl
or
add
in
test
scas
push
and
rcrb
es
and
cmpsl
inc
cmp
xchg
adc
xor
and
sbb
add
cmp
fisubl
lahf
lds
ret
add
outsb
push
jb
outsb
je
jb
add
push
jne
add
data16
cmc
test
jmp
faddl
sbb
je
lret
aad
jno
cmp
ret
dec
xchg
inc
shrb
ror
leave
push
popf
or
push
mov
popf
cli
imul
fmuls
movl
xor
cmp
push
out
ljmp
mov
xchg
and
dec
or
sbb
mov
jmp
jge
movsb
push
pop
jl
iret
xchg
popf
pop
aad
mov
cltd
jle
gs
push
jno
mov
je
insb
ror
mov
mov
adc
test
ljmp
xlat
pop
mov
mulb
push
aad
or
push
mov
ja
lret
mov
and
lret
cltd
and
pop
pop
nop
in
cmpsb
dec
and
repnz
js
cmp
addr16
pop
repnz
pop
imul
iret
rcrl
into
xor
push
push
shlb
adc
les
push
je
inc
scas
out
inc
mov
push
arpl
and
sahf
mov
xor
repnz
jmp
jnp
jb
or
and
incl
movsl
aaa
lds
je
xchg
push
push
test
inc
xchg
mov
xor
mov
mov
lds
push
xchg
mov
test
push
movsb
sub
jb
cmc
call
push
inc
cmpsl
mov
sub
mov
sarb
es
sub
adc
pusha
adc
fwait
sbb
sbb
lcall
or
test
inc
jne,pt
xor
sub
jg
adc
enter
mov
outsb
sub
dec
loope
xor
ret
add
mov
xchg
cmc
xor
xchg
and
mov
hlt
add
inc
dec
repz
lods
icebp
pop
jnp
lcall
xchg
lahf
jno
fs
pop
jg
xchg
or
test
clc
repz
or
push
call
enter
insl
push
call
aas
jb
filds
push
rcrb
popf
xchg
sub
out
adc
inc
and
xor
int3
jmp
and
mov
popa
stc
mov
add
pop
insl
dec
dec
dec
mov
dec
xlat
inc
pop
clc
pop
test
xorl
out
cwtl
mov
jge
push
lcall
sub
int3
mov
dec
adc
aad
loop
mov
cmp
dec
and
jle
orl
adc
ds
jg
aam
cmp
in
cmp
add
pusha
into
test
push
call
jbe
pushf
shlb
ret
lret
jne
add
aad
push
call
jb
mov
add
aad
in
sub
pushf
arpl
dec
dec
das
jle,pn
cmp
push
movsl
sub
aad
decl
pop
push
cwtl
test
sub
decb
push
inc
lods
stos
popa
cmp
push
xchg
aas
dec
dec
sub
inc
xchg
jle
adc
xchg
pop
repz
shlb
clc
in
es
mov
andl
mov
and
fcompl
push
push
scas
jbe,pn
popf
pop
push
mov
cmp
data16
cli
mov
outsb
out
jmp
xchg
mov
mov
push
shrl
into
es
mull
or
movsl
xchg
mov
push
shlb
lea
out
mov
pop
mov
jg
xchg
jge
pop
bnd
mov
mov
cmp
pushf
andl
adc
pop
mov
shr
mov
push
mov
cmpsb
ret
inc
mov
inc
addr16
call
xchg
or
dec
sti
clc
gs
adc
adc
addr16
sub
push
int3
in
lret
jmp
lcall
cmp
cwtl
push
sarl
cwtl
jne
jbe
push
xor
pop
imul
or
lods
cmpsb
out
cs
dec
add
xchg
xor
inc
pop
mov
jp
aas
jle
stos
inc
pushf
sub
sbb
fucom
jno
cmp
xor
das
stos
sub
sub
mov
push
call
mov
jmp
push
call
insb
push
call
pop
mov
inc
mov
inc
popfw
jmp
push
call
and
add
rol
sub
jmp
push
call
or
jns
xchg
aam
popf
push
and
mov
add
test
sub
inc
cmpsl
shll
sbb
test
fisttps
push
mov
mov
pop
sbb
aam
ss
rolb
outsb
cmp
ljmp
push
xor
sub
ss
inc
rorl
mov
movsl
sbb
adc
lea
call
popf
ficoms
inc
int
push
push
pop
dec
push
pop
movsb
mov
test
jb
es
sahf
mov
jo
xchg
ja
cmpb
mov
mov
dec
mov
adc
loope
ret
xor
iret
sub
repz
adc
push
sub
push
call
sub
in
shll
mov
std
aam
jmp
pop
loop
pop
mov
fcomps
cltd
idiv
and
addl
in
sub
mov
ljmp
test
add
loopne
enter
scas
push
cltd
inc
out
fldl
in
add
or
push
mov
jbe
lods
lods
ret
xchg
mov
push
or
ja
roll
out
out
loopne
aaa
pop
repz
push
xchg
imul
stc
test
cmp
pop
mov
out
mov
lds
fdivrs
ret
sar
shrb
inc
aaa
aam
cmpsl
adc
popa
or
xor
xchg
xor
in
stos
add
insb
dec
pushl
add
jb
sub
inc
xchg
cmp
inc
cltd
push
pusha
pushf
call
test
into
scas
lret
popf
cmpsl
mov
das
xchg
adc
pop
add
and
cld
insl
adc
out
cmp
push
add
inc
pushf
fistl
sub
divb
xchg
icebp
adc
jmp
and
push
or
add
out
jp
adc
or
mov
cltd
insl
les
push
rorl
mov
adc
sti
mov
cmpsb
vmovsldup
sbb
mov
outsb
or
xchg
cli
jns
shr
cmpsl
aad
lods
xor
cmp
movsl
fdiv
cmp
and
mov
jge
jg
in
jne
out
inc
mov
cli
ljmp
cmp
mov
test
lods
mov
mov
inc
sbb
push
cmp
ja
push
nop
pop
dec
sbb
mov
xchg
mov
inc
jmp
es
dec
xchg
dec
sub
bound
or
adc
add
mov
sub
int
in
comiss
ds
or
out
xor
mov
popa
aad
xor
ljmp
in
sub
sub
scas
cmp
jecxz
inc
adcl
test
movsl
inc
mov
jp
adc
cmc
aas
mov
cli
imul
mov
adc
jl
jnp
dec
popf
xchg
outsb
rep
push
fmuls
lock
aaa
aas
aad
mov
jmp
loopne
mov
clc
add
sbb
pusha
movb
pushf
lea
jne
push
pusha
push
push
lea
jmp
xchg
xor
js
shrl
insl
daa
popa
inc
inc
jo
mov
shrl
adc
movsl
lret
sarl
test
inc
adc
cmp
push
insl
movsl
popf
in
cmp
leave
shlb
and
icebp
test
push
popf
loope
cli
pop
sahf
adc
dec
ss
sub
ds
sub
xor
push
pop
rolb
sbb
pop
popl
sub
shrb
push
fstl
in
enter
jne
loop
inc
push
jmp
iret
xchg
jno
addl
and
adc
sbb
mov
test
inc
ret
loop
xor
jno
xor
aam
jbe
add
cmpsb
fwait
cld
and
push
shll
lods
pop
fcompl
jle
sbb
mov
ud2
push
aad
cmp
fcompl
push
mov
jp
int3
jbe
cltd
aad
cmp
lds
jbe
cmp
jge
add
inc
outsl
inc
jb
gs
outsb
jne
gs
imul
jae
push
call
imul
mov
add
pop
and
sbb
divps
or
ret
in
mov
jnp
cwtl
popf
adc
push
pop
cmpsl
loope
push
negb
inc
jae
shlb
jg
and
mov
mov
inc
inc
mulb
jnp
mov
jmp
shll
loopne
dec
loope
add
ja
cltd
sub
jmp
popa
sbb
push
mov
mov
lds
lods
jecxz
cwtl
sub
jmp
cmp
xor
xor
lds
inc
pop
test
leave
or
jmp
inc
sub
addr16
cmp
lock
lcall
push
mov
jmp
repz
subb
pop
mov
xchg
lcall
popf
dec
dec
scas
push
or
iret
cmc
add
icebp
jno
clc
add
ja
je
leave
add
iret
add
fimull
add
ficomps
dec
jae
dec
pop
int3
inc
push
clc
loope
je
and
adc
xchg
insb
sub
jo
adc
insl
add
push
imul
or
test
lret
jecxz
std
pushf
les
ds
in
movsl
cld
mov
mov
lcall
in
fistl
xor
ret
sbb
add
movsl
add
pop
xchg
sub
jmp
mov
jno
das
sub
pop
push
mov
out
cmpsb
dec
push
sub
icebp
jecxz
lea
pop
sahf
add
adc
push
call
nop
sahf
ret
cs
mov
insl
pop
push
in
dec
jmp
cltd
fnstcw
movsl
in
icebp
sbb
mov
test
pop
loop
gs
xchg
cwtl
leave
add
gs
pop
adc
fbstp
scas
pushl
add
fidivl
int
jge
xchg
orb
sub
push
fdivrs
arpl
push
cld
mov
movsl
pop
int3
and
mov
mov
daa
push
call
jno
in
adc
mov
lods
aas
or
sub
or
je
into
jnp
push
cli
mov
add
loopne
cmp
and
ret
aad
and
aam
xchg
addr16
mov
or
outsl
sbb
push
adc
ret
mov
sub
xchg
mov
sahf
imul
jne
hlt
xor
adc
pop
scas
xchg
gs
leave
jo
in
sub
loopne
mov
lret
push
icebp
sbb
in
imul
mov
das
mov
test
mov
push
jmp
xchg
ja
sub
cmp
sub
jecxz
xor
into
sbb
lock
fisubl
pusha
dec
rdtsc
jle
inc
movsl
aam
inc
jno
pop
adc
js
pop
dec
lcall
addr16
and
sub
stc
stos
cmc
roll
and
cmp
lret
mov
cmp
cmp
jmp
dec
outsb
fcompl
lock
mov
xchg
int
daa
loop
sahf
push
sbb
rolb
xchg
adc
sub
xchg
repz
fisttpll
mov
jp
mov
or
push
bound
loopne
outsl
shr
dec
jmp
xor
dec
fidivrs
adcl
inc
mov
call
scas
fldenv
sbb
push
js
ret
int3
jge
rcll
jbe
das
mov
sbb
mov
das
test
popa
sub
lret
jmp
int3
into
adc
mov
adc
add
dec
sub
dec
repnz
pop
xor
fisttpll
xlat
out
cmp
stc
sahf
int
push
int3
or
adc
int3
imul
push
jb
mov
iret
mov
mov
dec
pop
stos
arpl
dec
insb
fsubs
xchg
cmp
mov
dec
mov
push
sbb
scas
mov
outsl
idiv
bound
cmpsb
int3
jmp
mov
movsb
adc
test
out
testl
adc
add
push
call
mov
outsl
inc
inc
arpl
data16
sub
stos
xchg
add
outsb
cmpsl
hlt
cld
sarl
mov
xor
scas
cmp
cmp
sbb
movsb
fistps
mov
gs
push
sub
cmpsl
es
xor
imul
pop
rclb
xrelease
sbb
mov
mov
insb
xlat
pop
into
cmpsb
out
stos
jnp
hlt
arpl
imul
fistl
hlt
or
addr16
setae
fistps
fstpl
pop
nop
ds
fbld
or
into
cmp
dec
testb
js
sbb
fisttpll
fimuls
mov
in
pop
push
sub
in
mov
insb
sub
inc
jbe
scas
int
sub
and
sub
adc
push
scas
repnz
cmpb
lock
push
push
fsubrs
call
sub
inc
xlat
lods
mov
adc
rcll
cmp
fisubs
push
ret
inc
inc
movsb
sub
mov
pop
push
sarl
xlat
iret
pop
cmc
and
jge
jge
pop
aaa
mov
jnp
lock
jl
cmp
ret
mov
mov
jecxz
aaa
aam
pop
les
mov
add
sarl
outsb
and
jmp
or
or
fnsave
cltd
sti
in
xor
jl
test
out
addl
jecxz
jecxz
mov
divl
add
cmp
mov
ret
dec
ja
inc
xor
rorb
fisttpl
movsb
cwtl
mov
sbb
mov
add
outsl
sbb
jne
cmp
leave
add
pop
and
mov
leave
mov
ja
mov
xchg
mov
lret
xor
dec
add
divl
sub
imulb
adc
test
xchg
dec
sbb
cmp
jo
je
cmp
cwtl
aas
into
in
xchg
mov
inc
rcrl
dec
or
decl
cmp
mov
jne
rep
popf
push
jo
dec
adc
and
loope
mov
mov
bound
imul
nop
aas
std
shrl
call
cld
inc
imul
mov
add
xchg
pop
stos
adc
add
xor
out
sbb
mov
and
or
sbb
adc
add
jns
mov
cltd
pop
push
gs
dec
cwtl
push
setle
add
mov
fadd
ret
xchg
pop
lea
inc
icebp
scas
jp
mov
in
pop
adc
pop
loop
mov
sub
push
int3
inc
loop
mov
popa
int3
fmull
popf
icebp
sahf
or
dec
or
stc
ja
inc
sbb
leave
cmpsl
clc
sbb
cld
push
pusha
stos
mov
inc
leave
sub
js
pusha
cmc
xor
fxch
push
jp
xor
cltd
iret
sub
mov
fwait
insl
push
stos
jo
divb
iret
mov
mov
sub
pop
push
call
fcoml
movsl
int3
adc
add
arpl
aad
xchg
out
stc
cmp
xchg
cmp
sub
mov
in
sahf
push
push
add
ret
arpl
sub
out
and
fldenv
push
addl
in
rorl
pop
lock
jp
inc
adc
inc
add
jnp
dec
je
rolb
mov
leave
dec
lods
jne,pt
push
mov
out
sub
adcb
mov
in
stc
test
sahf
mov
pop
pand
shrl
or
inc
into
mov
and
dec
pop
shr
adc
cltd
js
fucomi
mov
mov
mov
sub
xchg
cld
ret
dec
sar
sbb
js
jns
gs
std
je
mov
jecxz
rcrb
and
push
lret
ss
jo
inc
and
pop
xlat
imul
sbb
or
or
sub
jecxz
inc
or
test
sub
cmp
lock
addr16
call
dec
xchg
and
shlb
in
lret
cmp
or
push
adc
js
call
jnp
movsl
sub
lcall
mul
push
aas
ljmp
rcll
push
inc
aaa
jnp
repnz
cld
in
lcall
add
orl
sub
clc
sarb
jmp
aad
push
pop
adc
addb
stos
push
in
negb
pop
cmp
push
imul
es
and
cmpsb
shlb
push
gs
jo
outsb
dec
gs
js
add
or
add
push
call
pop
sahf
jno
push
jne,pn
add
push
call
mov
xchg
pop
call
jl
mov
pushf
pop
data16
push
cwtl
cmpsl
movsl
fwait
cmp
sahf
jl
stos
cmc
or
data16
fmulp
daa
and
fadds
jbe
mov
xchg
shl
xor
inc
testb
in
lods
ja
orb
shrb
add
xchg
fisubl
adc
mov
mov
out
cmp
popa
scas
cmp
imul
jb
lds
leave
mov
inc
sbb
iret
jle
je
and
or
cmpsb
rcrl
inc
jb
ja
imul
push
call
fsubp
cmp
xadd
xchg
int3
loope
adc
out
fucomi
sub
mov
test
in
hlt
xor
dec
adc
cmpsb
and
mov
sbb
xchg
outsl
outsl
leave
mov
lea
push
int3
icebp
mov
pop
adc
aas
or
pop
adc
notb
fwait
jp
repz
jg
and
sub
adc
testl
outsl
aaa
xor
leave
or
fldcw
addr16
fcoml
into
xchg
jo
and
jns
inc
mov
inc
lcall
dec
cli
mov
dec
scas
and
add
cmc
jae,pn
xchg
mov
decl
test
out
insl
call
movsl
jnp
in
jbe
shlb
lcall
test
fildll
lods
sarb
push
int3
jno
jns
push
or
jmp
push
mov
cmp
inc
call
add
test
cmpsb
aad
gs
push
data16
jbe
pop
jne
mov
or
pusha
pop
fisttpll
loopne
pop
test
aaa
sar
mov
mov
cmp
inc
xor
jne
add
fidivrs
push
cmpsb
scas
test
lds
inc
ja
or
push
inc
in
rcrb
mov
jecxz
scas
jecxz
lret
xchg
add
pop
jmp
mov
sub
repnz
adc
mov
cs
lock
aad
lock
dec
xor
push
call
or
pusha
shll
call
push
call
stos
bnd
int3
mov
ljmp
xor
cmp
arpl
ret
push
decl
out
loopne
incl
xor
push
mov
lock
enter
mov
mov
popf
adc
xor
xor
sub
push
insl
hlt
shll
push
call
lds
jge
cmp
in
add
cmpsb
xor
mov
adc
cmp
lock
adc
mov
xor
pusha
pop
cmp
adc
int
js,pn
aad
shlb
movsb
dec
dec
and
mov
mov
adc
jecxz
inc
mov
ficomps
aas
imul
mov
push
ficoml
jae
pop
cmp
adc
fstpt
jne
or
outsb
push
decb
andb
cmpsb
jecxz
push
call
push
outsl
push
call
inc
sbb
mov
subb
ds
outsl
ficomps
std
rolb
push
loopne
outsl
or
push
mov
mov
sti
mov
sahf
sbb
mov
and
xchg
and
aas
cmp
and
cmp
int
push
shrb
sub
out
addr16
cli
ljmp
dec
pushf
loope
inc
and
dec
jns
xor
popa
mov
mov
mov
orl
lcall
sbb
push
call
mov
push
inc
push
xor
cs
insb
add
movsb
pushf
jno
js
sbb
xchg
jbe
jb
add
arpl
sub
cmc
fcmovu
outsl
ror
lods
fisubrs
std
jl
and
dec
pop
jno
jb
int3
into
xchg
stos
mov
mov
jmp
cmp
and
pop
lret
sbb
adc
mov
movsb
mov
out
xor
jnp
mov
test
add
xchg
je
lds
jbe
pop
lahf
inc
and
adc
and
fs
aas
int
inc
and
adc
xor
nop
jl
pop
and
arpl
xor
jge
test
xchg
mov
jae
xor
mov
dec
out
dec
les
flds
cld
sub
lcall
aad
inc
xchg
data16
movsl
sbb
sub
xchg
inc
data16
mov
sbb
mov
movsb
gs
in
dec
stc
xor
out
std
inc
xor
mov
mov
pushf
in
jo
iret
pushf
ret
add
cmpsb
fdivs
jne
movzbw
bswap
rol
xor
movsbw
pusha
lea
mov
mov
pusha
setge
mov
bswap
mov
bswap
mov
movzbl
call
push
call
inc
sub
push
call
clc
movsb
in
cmp
add
jne
inc
aad
fistl
adc
andb
sbb
cmp
mov
mov
sub
or
in
lds
and
jo
jne
add
push
mov
fs
jmp
inc
cmp
cmc
xchg
adc
sub
or
cmp
dec
push
arpl
jb
sbb
sbb
das
adc
and
ret
iret
jge
cmpl
ret
clc
inc
inc
push
inc
push
dec
xor
cs
insb
add
sbb
jge
jne
push
scas
cld
inc
ret
inc
loope
call
xor
mov
sub
aam
cmp
jnp
pop
adc
cmp
mov
mov
mov
dec
mov
cmp
push
adc
out
movsl
loope
add
push
jge
push
xchg
mov
dec
popa
jg
mov
cmp
jno
and
cwtl
pop
push
sub
shl
data16
mov
cmpsb
fld
bound
lock
testl
sub
mov
in
orb
fisttpll
clc
xorb
dec
mov
push
mov
mov
orl
jb
cmp
les
call
cmpsl
fldcw
inc
cld
cmc
lret
in
inc
xchg
stos
inc
cmp
pop
xbegin
mov
or
cmpsb
rcll
mov
int3
mov
test
add
test
lods
jg
into
rclb
pop
cmp
nop
pop
fs
rolb
ret
and
bound
xchg
orl
mov
xor
sbb
add
pop
fsts
into
lea
idivl
inc
pop
sbb
dec
sahf
mov
fyl2x
mov
dec
je
pop
add
out
xor
jp
bound
lret
add
mov
cwtl
push
push
cmp
ljmp
int3
push
lods
pop
ljmp
xchg
xor
adc
pop
gs
or
pushf
lea
jne
jmp
sub
xchg
int
xchg
adc
mov
and
test
inc
jl
mov
mov
mov
pop
dec
xchg
dec
mov
cmp
xchg
push
push
adc
jo
inc
ljmp
movsb
xchg
shr
dec
pop
or
aam
hlt
in
std
andb
jns
daa
notl
fmul
add
je
push
jo
pop
leave
scas
sahf
mov
shrb
out
sbb
in
loope
outsl
insb
sub
fadds
jecxz
pop
pop
testb
jo
or
mov
push
icebp
std
outsb
sub
sbb
mov
pushf
jnp
sbb
push
xchg
ljmp
mov
fnsave
xchg
cld
xor
push
ljmp
rcrb
xchg
test
das
push
outsl
xor
jne
rcr
adc
or
add
stos
js
int
jb
lret
and
sub
pop
push
aad
fbld
test
pushf
in
fsts
mov
shrb
or
out
push
pop
and
push
fwait
push
call
push
sarl
aas
add
frstpm(287
xorb
ljmp
data16
dec
jmp
add
dec
and
sub
out
ret
jno
pusha
fidivs
inc
aad
push
mov
mov
lcall
mov
dec
xchg
adc
add
int3
das
ret
pusha
push
movsb
add
lds
or
jge
in
mov
sbb
ja
loopne
push
cmp
jo
je
mov
test
pop
pop
dec
jno
into
popa
jb
cmp
jge
jp
push
inc
dec
cmpsl
negl
in
fistpll
cmpsb
fstl
jno
lds
mov
ss
dec
xor
jp
cmpsl
cmp
sub
pop
pop
pop
push
cmp
mov
popa
jb
cmp
cmc
int
ljmp
sub
jp
frstor
push
adc
mov
data16
daa
aaa
jo
sbb
call
adc
nop
test
test
jbe
or
or
xchg
jo
sbb
repz
mov
stos
mov
or
xchg
push
popf
lcall
push
push
test
pushf
mov
data16
rorb
mov
sub
fcomp
ja
dec
and
cmpsb
fisttpll
xchg
es
xor
shr
inc
jb
outsb
jge
arpl
shlb
inc
pop
sub
push
mov
nop
test
nop
ljmp
sub
jns
and
ret
inc
push
shlb
adc
jo
or
mov
clc
shll
js
xchg
ja
andl
pop
std
fsubl
js
loope
out
leave
adc
add
mov
jo
mov
xchg
push
je
out
push
call
inc
enter
outsl
popa
fs
imul
add
dec
adc
add
push
call
ljmp
jge
loope
out
xlat
lcall
cli
leave
mov
mov
xchg
daa
and
mov
mov
or
andb
mov
xlat
std
int
inc
in
lret
add
ret
adc
xchg
sub
and
cmp
rol
divb
pop
lcall
inc
frstor
dec
inc
stc
xor
cmp
xchg
mov
out
pop
lcall
shrd
fistpll
orl
pushl
fisubs
leave
push
inc
and
movsl
inc
out
cwtl
gs
jg
cwtl
jbe
sub
mov
jl
insb
das
popa
jne
adc
mov
shll
pusha
imul
pop
repnz
nop
fidivl
out
in
inc
aas
lret
mov
pop
out
inc
xor
test
loope
xchg
dec
shlb
stc
jne
pop
adcb
pop
and
sub
ret
pop
in
cmpsb
fistpll
or
data16
call
push
call
imul
push
call
ret
inc
push
xor
cs
insb
add
jne
notl
mov
dec
ss
sub
pusha
inc
decb
je
xchg
stos
stos
push
lock
pop
cld
pop
fs
scas
lahf
mov
andl
sbb
adc
xchg
pop
lahf
stos
mov
sbbb
popf
icebp
cmp
test
adc
mov
pop
push
adc
jne
or
in
dec
add
push
rolb
add
jg
ljmp
lahf
filds
out
in
push
scas
xor
data16
mov
loopne
outsl
inc
xchg
movsb
or
aam
pushf
xchg
fcoml
inc
lds
mov
into
out
mov
jb
mov
mov
push
inc
in
push
cmp
popf
add
outsb
outsb
enter
repz
es
push
dec
lock
xor
orl
inc
pop
mov
xchg
hlt
sbb
cs
and
cmp
loope
pop
inc
xchg
push
aaa
in
xchg
push
mov
xchg
int3
pop
imul
jle
cmpsb
aam
lahf
jp
inc
ret
daa
rclb
imul
push
push
adc
shr
fs
add
dec
push
mov
arpl
lods
cmp
fdivr
inc
fld
sub
add
rclw
sub
push
iret
pop
lods
or
pop
mov
inc
pop
xchg
cmc
xor
es
dec
loopne
and
shrl
fsubr
rorb
push
stos
mov
and
outsb
mov
popf
cmp
adc
adc
cwtl
pop
push
daa
in
adc
insl
js
mov
push
test
push
jmp
xchg
sbb
cmc
mov
aas
xor
sbb
not
jae
pusha
loopne
call
sub
mov
out
sub
jmp
pop
push
scas
popf
jnp
cmpsb
loop
fs
adc
or
xchg
jle
mov
cmpsb
aad
add
push
scas
out
push
outsl
sbb
cmp
push
sbb
and
push
add
xor
push
inc
fistpl
xor
in
mov
mov
cmp
xchg
dec
sub
mov
push
popf
int3
sar
lahf
xchg
stos
push
dec
push
dec
xor
and
mov
mov
ljmp
sub
inc
push
and
xor
mov
inc
rcrb
mov
push
cmp
push
test
pop
mov
inc
into
push
lret
sbb
out
daa
scas
inc
sub
push
sti
inc
insl
sub
clc
mov
lods
ljmp
or
mov
daa
sahf
or
xchg
jbe
jnp
sahf
push
pop
sti
repz
push
outsb
imul
sbb
fwait
and
in
dec
inc
inc
out
or
jecxz
pop
sbb
cmp
dec
js
pop
mov
dec
mov
in
or
pop
xchg
mov
dec
and
scas
pop
and
mov
addr16
cmp
mov
hlt
clc
mov
sub
aas
je
push
rcrl
dec
nop
or
ficomps
mov
leave
push
adc
xchg
lret
dec
jmp
adc
call
mov
out
in
inc
call
adc
pushf
or
mov
push
pusha
cltd
inc
pop
popf
mov
mov
inc
pop
and
mov
loope
or
rcrb
ds
jge
adc
xchg
addb
rolb
sub
enter
rclb
dec
inc
in
cmpsl
pop
adc
push
insb
shr
mov
arpl
pop
arpl
or
lret
and
lds
js
loopne
sub
jb
dec
test
lret
frstor
insb
mov
push
fists
ret
sti
mov
push
jle
ret
and
dec
test
xor
pop
pop
mov
sub
test
ljmp
in
call
adc
add
lea
jb
pusha
movl
pushf
mov
pusha
pushf
push
pushl
ret
push
call
pop
ljmp
adc
add
pusha
movzwl
lea
btr
xor
adc
bts
mov
pusha
call
push
pop
xor
addr16
pop
jno
push
movsb
mov
ja
xchg
lcall
lods
test
jnp
cmp
pop
mov
gs
push
cmp
inc
mov
dec
sbb
xor
cmpsb
mov
sbb
jge
sbb
mov
ss
cmp
xor
pop
fcmovnbe
es
jns
push
ret
aas
pop
push
cmpsb
lea
iret
push
inc
cwtl
icebp
aaa
xchg
out
insb
jp
mov
push
fistpll
cmp
add
movsl
pop
shr
mov
test
stc
pushf
bt
shr
cmp
call
mov
sub
pop
xor
dec
pop
aad
test
and
adc
jge
mov
fisubrs
cmpsl
xor
inc
xchg
adc
jmp
call
xchg
mov
push
jns
cld
push
lock
xchg
pop
sar
mov
into
arpl
leave
and
jae
jno
test
test
scas
data16
ds
movsl
int3
jnp
call
scas
pushf
call
push
call
push
push
call
inc
dec
rcrl
push
call
xchg
fs
call
jnp
dec
jo
daa
out
fwait
xor
mov
fwait
add
inc
out
mov
sub
xor
mov
add
jnp
aaa
sahf
push
scas
xchg
iret
in
lds
cmc
dec
mov
jle
jb
aaa
pop
pop
movsl
and
call
add
inc
inc
xor
jae
mov
jecxz
filds
add
add
push
mov
inc
mov
mov
loope
sbb
stos
ss
ljmp
sub
mov
mov
shr
test
sbb
in
inc
out
arpl
cmpsb
in
and
push
call
mov
push
call
mov
movl
hlt
lods
mov
mov
lea
je
push
adc
push
lea
jmp
mov
cltd
rolb
xor
inc
int
pop
incl
and
aaa
insl
lcall
xor
adcl
push
and
ret
flds
dec
or
or
lcall
std
add
pop
mov
out
icebp
xorb
mov
mov
fnstsw
mov
adc
aas
xchg
jp
andb
scas
push
cmp
rolb
mov
cmpsb
out
ficoms
test
loop
add
or
add
pop
push
call
mov
scas
mov
dec
out
pop
adc
stos
cmpsb
dec
test
mov
adc
mov
movsb
or
out
scas
fs
out
repz
mov
xchg
rol
lret
rorb
mov
mov
lock
mov
iret
push
pop
clc
rol
ror
shrb
mov
rcr
mov
adc
in
lock
pop
adc
mov
lahf
sar
int
ror
shr
sti
fists
js
lret
loope
sbb
enter
mov
loopne
cwtl
hlt
icebp
movsb
mov
cmp
inc
incl
sti
in
loope
cmp
sbb
dec
lock
mov
mov
jge
jae
mov
mov
xchg
push
test
mov
cmpsb
adc
lret
into
mov
add
scas
cmpsl
sbb
adc
adc
adc
lock
lcall
ss
and
and
rorb
into
adc
lea
out
push
dec
adc
fwait
call
fwait
cs
mov
hlt
pop
inc
cmc
push
dec
inc
fldl
xor
push
dec
inc
mov
push
mov
xor
cld
dec
imulb
adc
xor
push
hlt
sub
int
mov
push
pop
pop
in
jae
cmp
and
aaa
je
or
cli
and
leave
cmp
jp
cltd
xor
sub
add
push
pop
mov
das
dec
lcall
stos
test
sub
adc
negb
aaa
push
and
pop
mov
add
pop
xor
pushl
stos
push
inc
xchg
add
xor
aas
jge
icebp
xor
aaa
add
push
or
jae
sbb
leave
in
mov
cmc
and
xor
outsl
push
cli
adc
in
inc
jecxz
mov
jl
xchg
divb
icebp
cmp
mov
hlt
stc
push
mov
jle
xchg
inc
jbe
mov
pop
cmp
ds
pshufw
inc
adc
xorl
adcb
and
cmp
testb
les
cmp
stc
adc
xor
or
cmc
cmp
adc
and
mov
js
lea
and
xor
and
mov
sub
mov
out
call
notb
in
mov
pop
ss
aad
mov
orl
sub
cmp
sbb
inc
in
or
pushf
push
cmp
and
data16
repz
aas
sub
aaa
cli
and
sbb
pop
daa
jmp
add
adc
xchg
movsb
cmp
mov
and
cmp
pop
lock
xor
add
lock
push
add
jmp
inc
mov
sbb
cmc
xor
add
repz
mov
mulb
pop
and
adc
in
mov
aam
push
push
mov
das
in
popf
aaa
js
pop
pop
adc
roll
cmp
pop
mov
fsubrl
jle
pop
or
or
out
push
outsb
pop
cmp
push
lea
push
cmp
cmp
and
lcall
xchg
sub
cs
or
add
adc
imul
cmp
fimuls
sub
je
push
xchg
ss
inc
shrb
add
add
dec
add
or
les
out
je
cmp
sub
push
fwait
and
sub
add
mov
aaa
movsb
cwtl
movsb
andl
popf
out
and
xchg
push
sub
int3
xchg
push
or
cmp
negb
roll
mov
adc
cmp
int3
push
xor
movsb
sub
cs
mov
and
mov
xchg
xchg
jmp
pop
adc
and
cmp
frstor
lea
push
lcall
dec
add
std
les
pushf
pop
and
xchg
lcall
sub
clc
sub
negl
push
in
push
fbstp
scas
stc
hlt
sub
movsb
lea
add
pop
add
and
sahf
rorb
hlt
jo
sub
push
repnz
push
cmpsl
adc
or
add
out
scas
or
pop
push
mov
mov
mulb
and
or
adc
xchg
push
in
out
adc
pushf
or
and
xchg
xor
inc
fs
int
adc
xor
enter
aaa
dec
mov
cmp
int3
daa
pusha
push
or
mov
inc
or
adc
lock
jecxz
or
jl
xchg
mov
mov
or
or
movsl
punpckhwd
loope
xadd
daa
adc
rcrb
mov
or
adc
push
pop
mov
xlat
or
and
or
and
and
cmp
adcl
pusha
ficomps
nop
int3
dec
pushl
lods
adc
xor
les
add
adc
cmp
aad
ret
adc
test
out
sbb
cld
imulb
mov
xor
mov
dec
adc
jae
mov
test
adc
cld
mov
cmp
hlt
xor
adc
xchg
or
insb
aam
or
push
ja
out
adc
cli
mov
adc
test
cmp
push
push
adc
insl
or
jl
out
adc
cmp
mov
or
xchg
and
jecxz
cmp
cmp
jl
lock
mov
mov
mov
pusha
aaa
outsb
sbb
cmp
shlb
add
mov
insl
push
dec
cmp
outsl
lock
add
adc
push
mov
out
lods
cmp
insb
push
cmp
adc
mov
adc
cmp
hlt
rclb
pushf
add
or
fs
cmp
sbb
sbb
daa
adc
add
push
pop
ds
dec
push
jbe
jae
or
cmp
aas
inc
and
cmp
jp
pop
push
and
inc
push
mov
jl
rcrl
adc
mov
test
jb
repz
jae
pop
idivl
mov
sbb
aas
test
add
or
and
adc
and
lock
adc
std
cmp
movsb
xor
pop
idivl
or
pop
insl
aaa
outsl
push
orl
or
adc
adc
cmp
nop
or
std
lea
ss
outsb
popl
mov
sub
inc
jno
and
bound
push
lea
cld
xor
mov
enter
sbb
hlt
cmp
sahf
jno
xor
cmp
je
push
dec
xor
in
insb
movsb
and
pushf
xchg
idivb
test
outsb
mov
cmp
movhps
xchg
out
push
adc
sbb
jo
inc
or
dec
pushf
dec
xchg
adcb
inc
lock
movsb
add
push
insb
or
adc
sub
cmp
mov
adc
dec
les
insb
jo
adc
rclb
in
or
adc
pop
adc
or
mov
mov
adc
or
xor
hlt
jmp
adc
inc
xchg
aaa
test
jecxz
cmp
xchg
cld
and
fs
and
jo
pop
cmp
fs
movsl
inc
cld
pop
int3
in
push
aam
data16
push
pop
xor
or
inc
fwait
pop
scas
or
cmp
call
enter
mov
aaa
mov
jno
or
xor
xor
dec
cmp
aaa
mov
shrb
hlt
mov
movsl
out
pop
fistl
cmp
mov
je
ss
fs
xor
into
mov
cmp
xor
in
movsb
push
adc
adc
cld
cmp
sbb
ss
inc
je
rclb
sahf
add
testb
rcll
aaa
hlt
loopne
cs
or
js
shll
push
xlat
mov
adc
pushf
and
add
push
mov
ss
add
enter
jecxz
xor
pop
cmp
lea
adc
xor
jno
xor
outsb
mov
or
add
cmp
dec
xor
je
mov
add
ret
cmp
mov
mov
push
gs
cwtl
or
call
mov
mov
popa
jb
mov
mov
pop
pop
mov
mov
inc
cmp
push
ret
mov
sahf
leave
add
dec
sbb
cmp
sbb
fidivrl
sub
lods
orb
cld
dec
les
fs
adc
mov
rcrl
xlat
sar
sub
inc
add
out
movb
xchg
fdivrs
mov
adc
jg
mov
loopne
xchg
adc
push
mov
xor
xorb
fs
in
push
sahf
xor
cmpsb
aaa
xchg
movsb
inc
int3
notb
mov
push
pop
jge
mov
ret
adc
cmp
mov
xor
sub
sbb
pop
jb
js
xor
xor
rolb
xor
dec
sub
pop
sbb
xor
jecxz
sub
rcrl
pop
ss
daa
xor
or
in
adc
adc
cmp
shll
inc
stos
adc
mov
cmp
jp
lock
je
or
aas
shll
ds
mov
mov
xor
sarl
outsl
push
shll
call
xor
lret
movsb
call
xchg
adc
push
je
mov
and
setno
or
xor
mov
adc
sbb
dec
and
enter
jle
add
and
xor
push
mov
dec
push
les
call
push
mov
enter
and
xor
and
adc
xor
jl
push
and
mov
and
adc
lods
adc
and
and
test
dec
sbb
push
cli
sti
cmp
push
xor
adc
pushf
cmp
lock
in
movsb
adc
punpckhbw
aaa
adc
push
adc
and
pop
test
add
xchg
add
pop
and
fdivrp
or
push
xor
xor
cltd
cmp
mov
push
sbb
or
adcl
pop
je
out
or
ss
inc
mov
mov
adc
jo
sub
xor
add
sahf
sub
mov
out
sub
or
or
dec
cmp
int3
push
fcoms
stos
push
ficoms
pop
lcall
sbb
cmp
xchg
jb
daa
pop
hlt
adc
cmp
jo
and
xor
dec
xor
and
rorl
loop
adc
ficompl
mov
sbb
pushf
or
or
adc
pop
xor
or
xor
and
test
adc
test
mov
shrb
push
je
fisttpll
movsb
lcall
cmp
push
sub
jnp
aaa
jo
loopne
cmp
jne
pop
pop
ss
cmp
sub
jae
or
movsb
dec
cld
adc
cmp
arpl
mov
daa
xchg
jl
fsubrs
hlt
push
jb
movaps
pushl
and
xor
in
push
in
je
or
in
inc
testb
lea
sbb
pop
pop
xchg
push
rcrb
aam
add
add
pop
jae
push
adc
or
xor
or
adc
xor
sub
jae
adc
inc
or
fs
cmpsl
add
je
and
and
cltd
and
mov
mov
clc
mov
out
daa
xor
fs
xor
fadds
nopl
mov
sarb
xor
adc
sub
stos
xor
dec
aam
add
push
and
xor
sub
js
and
xor
dec
or
in
dec
les
cmp
mov
xor
add
test
xor
and
pop
xchg
js
or
mov
out
xor
and
stc
xchg
cli
jns
into
enter
adc
sbb
push
fmull
arpl
xchg
inc
cs
and
loope
es
mov
jl
inc
adc
xor
sub
fsubrl
push
cmp
and
or
cli
cmovle
jo
jo
xchg
daa
sub
dec
fmuls
sbb
cmp
xor
pop
int
push
or
push
lods
sti
ss
cltd
jb
push
jbe
cmp
pop
xor
cmp
xor
adc
adc
pop
shl
in
inc
enter
js
test
push
faddl
loopne
adc
jne
push
bound
push
push
mov
pop
and
fs
clc
adc
sbb
or
or
xor
adc
sti
movsb
mov
in
adc
xor
and
xor
mov
shrl
gs
xor
int
cld
inc
or
adc
sbb
loop
pop
call
mov
or
inc
cmp
mov
xchg
push
or
xchg
adc
cltd
je
push
adc
in
les
test
out
cmp
sbb
lret
mov
mov
xlat
xor
fists
out
shl
ljmp
or
aaa
push
test
push
xlat
adc
out
es
push
cmp
xchg
loope
add
scas
and
adc
add
mov
push
in
xor
jae
jae
rolb
xor
insb
aaa
int3
push
cld
aam
xor
adc
subb
inc
xchg
and
dec
sub
xchg
inc
imul
push
push
hlt
pop
inc
cmp
fisubl
mov
cmp
and
mov
push
add
cwtl
or
adc
pushf
aas
adc
push
mov
in
call
fadds
push
mov
push
mov
pushf
xchg
jbe
pop
adc
jb
nopl
dec
add
sub
aaa
cmp
sbb
js
xor
adc
jp
faddp
or
ss
mov
push
inc
clc
clc
lret
adc
int3
sar
and
jae
cmp
mov
jp
testb
sbb
cli
adc
hlt
std
adc
adc
mov
add
inc
jmp
adc
fs
push
outsl
adc
add
sahf
push
stos
push
cmp
lahf
cmp
out
ljmp
pop
hlt
inc
sbb
lea
xor
xor
jecxz
shll
outsb
push
rolb
and
cmp
adc
sbb
dec
testb
dec
repz
insl
nop
lahf
mov
mov
test
jl
and
jl
out
mov
xchg
pop
mov
dec
clc
ss
je
mov
addb
sub
stc
pop
fildll
xchg
add
or
outsl
test
jae
inc
shlb
or
dec
push
roll
sub
adc
sahf
enter
push
adc
sbb
nopl
je
add
int
push
movsb
mov
sahf
ljmp
ss
and
and
shl
lahf
sbb
and
cli
in
jmp
sahf
shlb
nop
xor
xchg
lods
lock
push
xchg
push
or
inc
xor
push
mov
adc
sbb
xor
mov
lret
fsubl
jl
insb
inc
fcmovb
loopne
pop
pushf
add
je
shll
and
pause
mov
mov
loope
xor
movsb
mov
mov
int3
push
cmp
pop
jl
out
insb
xor
fwait
enter
in
inc
aaa
je
cwtl
lods
and
sbb
addr16
clc
cld
out
mov
jno
mov
xlat
fidivl
rcrl
pusha
dec
call
jo
push
pop
mov
lea
push
scas
sbbl
repnz
sbb
add
xlat
fs
sbb
loopne
or
sahf
mov
lock
xor
add
and
bound
or
in
cmp
xor
jb
out
add
or
xor
xor
and
call
daa
jb
push
xchg
adc
cmp
ljmp
lock
push
fsubrl
fsub
push
ss
xor
in
dec
adc
js
clc
lock
push
and
loopne
push
movsb
enter
add
movsb
nop
mov
shll
in
mov
addb
out
jo
sub
aam
pushf
mov
inc
sbb
sbb
pushf
lods
mov
jg
fsubrs
in
test
sub
das
adc
mov
or
cmp
inc
jl
mov
divl
cmp
rclb
roll
lret
push
push
push
in
or
lret
xchg
push
out
in
push
mov
mov
or
orb
sbb
mov
dec
out
mov
inc
adc
mov
stos
aam
xchg
pop
cmpb
scas
push
xchg
sbb
rorb
subb
jg
lcall
cs
sbb
jl
rcrl
test
add
inc
dec
jecxz
jmp
pop
xsave
push
or
jae
fdivrl
imul
pop
mov
fcomi
lret
adc
xchg
das
loopne
pop
jecxz
loopne
pusha
fwait
daa
stos
sub
xor
add
jmp
out
cmp
sub
lcall
and
push
or
add
out
push
jmp
adc
add
cmp
adc
out
or
mov
or
mov
les
dec
mov
adc
call
xor
pop
dec
shl
or
mov
cmp
cld
fnsave
lock
adc
scas
adc
or
adc
lret
add
aad
adc
lahf
movl
imul
dec
jae
push
or
notb
int3
scas
cmpl
add
sarb
sbb
cmp
and
mov
cmc
mov
movsl
mov
dec
js
add
sbb
out
adc
sbb
push
les
dec
or
movsl
in
and
push
adcl
cmc
mov
and
push
lock
int3
cmc
cwtl
lsl
stc
loopne
and
inc
xor
xor
adc
or
sbb
stc
shl
aaa
adc
cmpsl
out
ret
mov
or
fwait
rclb
movsb
and
cmp
sbb
add
je
mov
mov
repnz
xor
jo
imul
add
out
in
mov
add
adc
repnz
je
sbb
cwtl
sbb
xor
ss
lret
xchg
and
or
add
or
push
xor
jb
cmp
or
nop
or
insb
and
sbb
jae
aam
fwait
popf
dec
or
icebp
test
jnp
add
jp
push
stc
adc
nop
dec
xor
xor
adc
mov
test
sbb
jmp
sti
adc
mov
xchg
scas
mov
or
sarb
xor
adc
out
adc
push
mov
xchg
add
scas
mov
or
push
xor
loope
xor
add
add
mov
jns
jnp
xor
add
out
loopne
xchg
mov
ss
jo
xchg
add
out
lods
mov
mov
fisttpl
add
adc
mov
jo
cwtl
jbe
nop
add
movsb
test
sub
leave
in
add
inc
pop
sbb
cmpl
call
mov
xor
jge
jge
jnp
push
xor
or
add
add
adc
adc
jmp
inc
xor
mov
orl
xor
mov
push
mov
mov
mov
lods
mov
or
add
enter
enter
hlt
popf
push
push
pop
add
sbb
dec
dec
lea
in
pop
pushf
push
subl
jne
cld
into
int
icebp
inc
dec
pop
std
push
mov
loope
in
pop
in
cmp
xor
test
movsl
jl
or
mov
scas
hlt
xor
in
movsb
xchg
and
hlt
dec
in
and
clc
hlt
rolb
mov
mov
or
jge
xlat
or
pop
mov
jmp
push
mov
xchg
in
hlt
mov
push
lea
mov
lds
or
or
in
mov
or
pop
idivb
jne
or
adc
adc
mov
pop
mov
out
test
mov
aaa
sbb
loopne
mov
adc
add
in
fwait
xchg
sbb
and
xchg
add
mov
ret
dec
cmp
add
iret
add
adc
shlb
push
pop
jo
outsl
rolb
hlt
int3
stos
shlb
fisttpll
adc
or
lcall
or
test
and
int3
or
movsb
cmp
or
popf
sbb
jne
add
or
lods
sbb
inc
fsubrl
out
lods
rorl
mov
or
xchg
int3
sub
xor
or
add
testl
sahf
cmp
xchg
mov
nop
and
inc
js
push
push
and
sub
int3
dec
insb
cmp
or
nop
and
leave
into
fwait
js
fcompl
mov
jb
ljmp
push
push
leave
mov
dec
leave
inc
int3
das
into
sbb
or
aam
enter
jns
adc
iret
cmp
in
pop
mov
scas
and
adc
xchg
cld
repz
outsb
js
lea
xor
fwait
pushf
fwait
or
int3
or
xchg
adc
test
adc
xchg
or
mov
and
orb
and
fcmove
std
arpl
out
and
xchg
mov
inc
test
pusha
test
jmp
fmulp
cmpsl
rclb
dec
int3
pop
sub
sub
mov
adc
bound
fiaddl
push
mov
mov
mov
cwtl
jb
imul
push
xchg
inc
repnz
inc
push
jl
xchg
fbstp
mov
test
push
sub
lea
jo
sbb
pop
fsubl
imul
in
jge
push
lods
insb
mov
hlt
xor
sbb
pop
rolb
xor
push
inc
pop
cmp
lock
loopne
push
in
lock
jge
or
scas
pop
xchg
mov
mov
mov
lods
test
mov
mov
jge
lock
push
mov
outsl
push
push
mov
insl
into
jp
add
mov
pop
push
lock
sbb
xchg
dec
sbb
mov
xor
and
mov
xchg
xorl
or
dec
mov
movsb
dec
push
lea
sbb
into
cwtl
sti
rol
mov
pop
nop
cld
lahf
test
lods
test
andb
lods
scas
pop
test
sbb
xorb
andb
es
and
mov
rorb
lods
arpl
mov
push
js
xorb
or
sub
push
in
mov
in
add
sbb
adc
in
adc
scas
dec
rol
xchg
xor
and
xor
pop
xor
stc
movsl
add
and
inc
lods
lret
and
vzeroall
or
test
pusha
out
lds
xor
jns
lods
adc
dec
push
push
mov
jmp
mov
jmp
loopne,pn
rol
inc
cmp
mov
add
sti
int
xchg
and
dec
ficomps
notl
imul
addb
out
push
mov
repnz
sahf
fwait
add
or
mov
cld
test
jmp
lods
ljmp
clc
rolb
enter
fadds
lret
cmpsb
in
pslld
cld
or
mov
mov
lock
adc
orl
pushf
or
xor
rcl
lods
repz
shll
mov
fnstcw
lret
int
dec
into
xchg
fstp
pop
test
adc
int3
pop
cmpsl
jb
mov
cli
insl
add
in
dec
iret
aaa
fidivl
or
sbb
ljmp
lock
mov
in
enter
mov
add
hlt
or
repnz
fcoml
adc
hlt
cmp
repnz
dec
movb
pop
shll
aam
call
leave
mov
cmpsb
je
hlt
mov
lods
imul
iret
addb
sub
nop
or
lcall
xchg
mov
je
fld
lds
addb
loop
outsb
push
sti
int3
xchg
loop
push
mov
popa
call
mov
sub
cld
mov
push
adc
loopne
sub
or
adc
dec
sti
mov
cmp
sbb
adc
jg
pop
sbb
out
push
add
pushf
or
out
xor
adc
lea
pushl
jns
sub
mov
addl
bound
out
add
mov
inc
add
jmp
dec
jno
test
mov
les
ror
icebp
movsb
dec
xchg
in
adc
packssdw
sti
adc
cmp
lret
fmulp
aad
adc
sbb
aam
pushf
stos
nop
call
pop
call
rorl
mov
fs
mov
sbb
xlat
cmp
dec
push
or
sbb
enter
in
es
sbb
adc
fildl
adc
in
or
lock
add
adc
mov
xchg
repnz
mov
jmp
in
cld
lcall
mov
cwtl
icebp
subb
xor
mov
fdivs
adc
add
lods
icebp
xchg
mov
pop
bound
rcrb
repnz
dec
add
outsb
lret
sbb
add
sub
lock
sub
sbbl
adc
shll
mov
fnstcw
or
ret
iret
and
in
cli
lods
fsubl
bound
lock
out
cmc
cmp
pushf
and
call
or
and
sbb
inc
repz
lods
in
lea
enter
sbb
roll
lods
pop
adc
andb
cld
rclb
mov
outsb
mov
jecxz
lahf
rol
movsl
hlt
hlt
pushf
jnp
push
xchg
lds
test
inc
cmp
cwtl
rolb
cmp
jno
xchg
loope
pop
and
inc
loopne
fists
cmp
adc
les
test
aad
mov
or
dec
adc
xchg
loop
stos
sbb
jle
rol
dec
or
rol
adc
mov
int
push
shll
adc
scas
xchg
fistpl
pop
bound
mov
sub
enter
adc
xchg
jmp
imulb
add
pop
jmp
jo
jl
ja
fnstcw
lock
mov
adc
xchg
xchg
fisttpl
ret
fmuls
jecxz
rcl
sub
sub
nop
and
inc
in
add
mov
ret
call
pop
mov
sbb
mov
aam
or
lret
lea
adc
sarl
jae
fstpt
out
aad
shlb
fsubr
pop
in
aam
push
outsb
mov
adc
pop
imul
lods
hlt
xchg
jecxz
ret
in
arpl
mov
test
cmpsb
out
or
adc
mov
cmp
enter
shrb
ret
sarb
dec
outsb
rol
sub
hlt
mov
mov
notb
inc
mov
lods
cli
adc
test
sub
rol
aaa
mov
push
repnz
sarl
fdivs
xchg
xchg
adcl
js
lds
and
adc
js
push
test
out
fwait
adc
ljmp
lds
mov
insl
pushl
fisubrs
push
std
xchg
sahf
and
fwait
mov
push
fisttpll
loop
lods
cmp
or
insb
adc
inc
orl
nop
lods
mov
test
add
mov
add
popa
push
xchg
repnz
adc
js
lea
pusha
push
lret
or
jmp
push
mov
test
in
test
in
mov
jmp
and
pusha
jg
push
mov
leave
and
jg
into
or
and
push
xor
mov
in
add
outsb
in
cwtl
fs
cld
jns
rorl
and
pusha
dec
adc
xchg
dec
xchg
mov
icebp
fldenv
loop
sti
in
pop
les
ljmp
push
lcall
pusha
rcl
cld
push
adc
xchg
mov
in
fst
pushf
xor
xor
sbb
xchg
pushf
sub
jl
inc
adc
add
adc
mov
add
mov
ret
inc
call
dec
mov
adc
or
fcos
frstor
cld
mov
pop
xlat
lock
pop
js
movsb
pop
cld
negb
cld
mov
mov
dec
jle
insl
out
dec
mov
and
test
sub
popf
icebp
pop
pop
push
push
jecxz
rcll
xchg
jmp
jle
add
sbb
sbb
cmp
mov
aam
pusha
or
in
lods
push
adc
mov
testl
push
loop
push
sbb
orb
or
rclb
out
imul
nop
int3
incl
push
or
inc
shll
and
pop
test
loopne
mov
out
adc
in
ret
fsub
push
adc
lds
or
insl
cmp
cld
std
out
add
bound
nop
pusha
subb
cmpsb
ret
enter
add
mov
mov
inc
push
lret
and
inc
pusha
mov
ret
sub
insb
insl
sub
sub
sub
mov
jmp
sbb
jg
sub
mov
lock
movb
adc
mov
or
lods
mov
ljmp
out
lds
pop
rolb
and
xor
or
in
cmp
xor
push
lds
xor
mov
fsubrp
lods
mov
adc
mov
in
xor
adc
xchg
cld
cwtl
decb
mov
or
xchg
mov
or
popa
xchg
xchg
or
xchg
mov
mov
das
xchg
rclb
dec
dec
movsb
push
sbb
xor
mov
jecxz
out
xchg
add
lock
fdivs
incl
sbb
out
cld
mov
xor
mov
or
mov
push
ljmp
adc
add
sbb
rclb
add
rorb
call
lahf
or
or
rep
xor
lret
adc
test
hlt
cs
aaa
sarb
out
lock
add
ret
mov
imul
mov
sub
fdivr
fcmovne
cmpsl
or
sysexit
int
xchg
fstpt
mov
xchg
sbb
stos
lock
cmp
aam
enter
mov
testb
test
aam
fs
inc
mov
enter
mov
test
mov
enter
sbb
shl
add
push
dec
outsl
mov
sbb
xor
bound
repnz
test
sbb
fs
cli
lods
lods
call
mov
lret
out
jb
ret
jnp
jae
int3
mov
clc
leave
xor
out
scas
ret
xchg
lock
ret
or
adc
repz
jle
scas
rorb
dec
or
and
cmp
sbb
fstp
in
add
sbb
xchg
in
aam
hlt
clc
out
mov
or
sub
data16
fisttps
sbb
mov
sbb
mov
in
push
mov
fdivrl
hlt
in
xchg
jo
andl
cld
pushf
fidivrs
push
aad
sbb
pusha
subl
orb
mov
mov
and
pop
repnz
out
rcrb
add
jae
pop
add
int3
movsb
sbb
cmpsb
call
fldcw
dec
cmp
jecxz
fxch
inc
mov
mov
jp
mov
push
jg
mov
xor
sarl
pushf
adc
ljmp
mov
push
lahf
jl
jo
and
bswap
loop
icebp
fwait
ret
and
inc
lods
nop
adc
mov
add
sbb
add
loopne
adc
dec
mov
pop
dec
not
push
and
mov
addl
adc
push
add
add
out
jno
inc
setae
les
jg
insl
dec
xor
test
pop
scas
and
in
pushf
xchg
cld
outsb
push
adc
jmp
sbb
push
icebp
fsubr
jl
cmp
sbb
lret
nop
or
pop
rcll
inc
mov
mov
add
mov
mov
pop
aaa
fucomi
aam
mov
lret
jmp
scas
adcl
imul
mov
mov
in
sbb
cmp
push
xorl
das
imul
test
pop
ret
add
mov
js
scas
fcompl
adc
lret
push
in
test
mov
push
test
adc
pop
or
inc
lock
sahf
and
mov
mov
and
mov
int3
gs
inc
sbb
cmpb
loopne
cwtl
add
or
cmp
lock
lcall
loop
pushf
lods
rorl
cmpl
stos
jo
fsubs
mov
xor
cmpsl
loopne
push
cs
add
adc
adc
adc
int
jecxz
repz
cld
int
inc
or
add
popa
daa
cmc
xchg
push
push
sbb
test
fadds
addr16
aam
pop
cmovge
cmpsb
jae
clc
call
xchg
or
push
cmc
push
test
jp
and
and
enter
mov
dec
mov
pop
mov
push
xchg
daa
mov
hlt
ljmp
sub
jae
xchg
shlb
cltd
dec
inc
dec
movsb
inc
outsl
mov
sahf
fstl
lods
je
aad
pop
iret
jbe
imul
insb
movl
pushf
jmp
push
call
inc
fwait
ds
ror
in
mov
xor
addr16
iret
inc
daa
adc
push
out
sbb
mov
mov
pop
pop
sub
rorb
cs
pop
mov
jmp
std
add
std
sbb
insl
cmp
or
ficompl
xlat
jmp
pop
leave
mov
movsl
fsubl
lods
out
ret
imul
xchg
pop
stc
adc
aad
fld
clc
cmpsl
sahf
mulb
adc
sub
pop
arpl
push
cmp
lock
mov
jmp
xor
inc
cmpsl
adc
daa
gs
xchg
cld
icebp
in
callw
repnz
jae
das
out
js
or
outsl
leave
mov
hlt
aaa
sub
lds
mov
sbb
pop
jne
pop
fisubrl
dec
xor
ss
in
or
sub
push
sub
loop
pop
cmc
mov
dec
mov
sbb
push
xchg
jecxz
cwtl
cmp
jge
jb
jo
pop
mov
push
sahf
xchg
or
rorb
mov
in
push
lcall
test
add
jle
push
cmp
cmpsb
cmp
ds
in
sub
cli
nop
jle
push
call
push
mov
movsb
mov
push
in
push
add
insl
sub
gs
pop
in
mov
mov
pop
out
imul
mov
pop
xchg
lcall
sbb
cmp
pop
imul
mov
das
imul
iret
iret
filds
popa
jnp
sbb
mov
jns
push
loop
and
hlt
shrb
pop
adc
stos
or
push
add
call
push
call
pop
scas
push
call
dec
stos
mov
adc
add
add
push
call
mov
loopne
mov
movsl
pop
in
scas
sahf
lods
sbb
push
sub
fwait
pop
cmpl
pop
aad
hlt
mov
sub
cmp
adc
stos
mov
arpl
cmp
movsb
ret
movb
out
jp
pop
cwtl
mov
sub
push
dec
mov
adcl
sbb
push
test
sbb
inc
fsubrl
or
aas
mov
shl
add
push
fdiv
and
push
call
out
sbb
add
lea
ja
pusha
push
call
add
inc
jb
imul
insb
add
int
stos
test
pop
xor
jno
mov
cmp
pop
dec
dec
aas
xor
cli
outsl
dec
cmp
test
sbbl
test
stc
mov
cli
push
or
sub
sti
aad
cmp
sbb
dec
int3
dec
aam
mov
sbb
out
jno
gs
test
in
iret
test
xor
cmpsb
jg
scas
outsl
xchg
cld
push
clc
clc
mov
xor
scas
dec
das
mov
adc
cli
dec
sbb
xchg
stos
fmuls
aas
sahf
loop
mov
notb
xchg
outsl
jmp
and
imul
push
and
push
lret
loope
push
sbb
mov
aas
cwtl
cmc
jecxz
lods
jb
and
inc
lea
lds
xchg
adc
lahf
mov
sarb
in
out
in
pop
outsb
cltd
stc
aam
rorl
jo
xchg
inc
mov
out
xor
add
stos
jle
add
dec
out
fucomi
inc
rorl
lahf
sbb
sbb
or
movsl
out
rcrl
push
lcall
jns
scas
dec
cmp
out
int3
mov
pop
mov
sbb
mov
pop
xor
push
into
into
lods
bound
xor
pop
sub
cmp
cli
cmpsl
outsl
lcall
loopne
inc
lea
sarb
js
sahf
pushf
leave
outsb
and
popa
sbb
push
ret
repz
adc
xchg
mov
mov
les
dec
nop
sbb
pop
xor
dec
scas
out
mov
mov
mov
xor
pop
xchg
fwait
sub
rolb
iret
test
xlat
xchg
movsb
jp
jbe
cmp
pop
into
popf
push
xlat
popa
sub
mov
dec
pushf
cs
mov
sti
and
and
sbb
mov
leave
setnp
scas
fisubrs
addb
cli
jmp
mov
jns
test
outsb
sbb
test
inc
stos
dec
mov
push
scas
aam
cli
stc
sub
sbb
ret
flds
in
pushf
xor
fbstp
mov
mov
xor
bswap
aad
pop
enter
js
xlat
dec
xchg
clc
xor
mov
nop
push
cmp
jbe
jge
xor
adc
or
lods
insb
push
mov
shl
or
xchg
jo
jne
cli
leave
divb
add
sub
in
in
mov
mov
mov
pop
xchg
enter
test
lahf
test
insl
stc
outsl
std
cmp
test
outsb
imul
mov
push
fidivrs
shlb
test
cmpsl
adc
scas
repz
call
ljmp
iret
adc
add
sahf
aaa
cmp
add
add
lret
push
call
aaa
fwait
mov
bound
test
jb
add
sti
push
call
adc
lcall
push
call
leave
outsb
jecxz
decl
cmpl
inc
movsl
xor
and
xchg
dec
mov
jne
les
dec
decl
mov
mov
popl
addr16
mov
inc
adc
stc
or
or
and
and
arpl
cli
je
lock
push
and
xchg
bswap
les
xchg
notb
and
xor
sbb
sub
jg
sub
push
dec
sbb
mov
les
loopne
out
jne
js
js
mov
xchg
fldl2t
pop
dec
test
clc
push
adc
xor
dec
mov
repnz
js
daa
pop
lret
test
push
loopne
imul
stos
ret
jmp
jmp
pop
mov
pusha
les
test
js
es
or
gs
dec
movsb
idivb
ret
movb
lods
sbb
xor
mov
cmpsl
adc
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
call
mov
inc
call
push
jl
xor
jb
insl
insb
mov
push
push
dec
nop
insl
js
jns
push
mov
jl
mov
sub
xchg
imul
dec
xchg
sahf
push
or
fnstsw
pop
fucomip
or
repnz
mov
cmp
fnsave
incb
outsb
mov
imul
xor
dec
outsb
add
addr16
sub
xor
xor
lahf
in
lret
mov
int3
cmp
outsb
cmp
cmpsl
push
into
and
xor
adc
sub
xchg
stos
mov
lcall
push
pop
imul
rclb
jg
mov
enter
scas
push
repnz
out
cmpsl
fists
sti
fs
in
enter
dec
movb
push
and
sbb
cmp
cmpsl
mov
out
std
das
sahf
mov
lock
pop
xchg
ja
stos
gs
xchg
cmp
jo
mov
push
mov
lcall
mov
add
int3
orl
es
adc
jg
push
call
clc
push
fldcw
jl
test
sbb
not
push
call
or
xor
pusha
push
lea
jne
cmp
movsbl
sub
shld
mov
pushf
stc
add
call
jne
jmp
cmp
movb
pushf
lea
jb
jmp
ds
testl
xchg
dec
mov
push
or
inc
cmpl
ljmp
or
out
stos
adc
pop
fwait
inc
xchg
es
pop
je
roll
je
std
loope
sbb
sbb
test
aam
and
ds
fisubrs
lahf
lea
or
cmp
push
mov
mov
in
call
lret
inc
flds
push
jbe
pop
sarb
into
cmc
fcompl
mov
cmpsl
pop
in
inc
mov
test
sbb
and
into
push
call
out
pop
dec
stc
mov
daa
jne
add
fildll
sbb
mov
loopne
cmp
dec
repnz
test
dec
inc
xchg
ret
add
or
cmp
sub
mov
lret
sub
ljmp
scas
sbb
pop
notl
add
xor
or
std
jg
cmp
lahf
jmp
out
shlb
subl
dec
scas
js
loope
or
jecxz
divl
mov
fidivs
xchg
push
cmp
fnstsw
push
call
jmp
push
call
outsb
pop
fcoml
pop
dec
in
sahf
shll
andl
stc
cmp
es
mov
and
mov
je
gs
pop
or
jle
popf
xor
mov
xor
enter
sti
ret
push
enter
stos
mov
adc
pop
push
xor
push
jp
push
repz
out
push
mov
lahf
inc
hlt
adcb
cmp
push
adc
add
inc
and
jne
add
or
enter
lock
add
mov
push
call
repz
addr16
call
push
push
cmp
cmp
testb
xchg
dec
mov
push
and
aaa
test
and
jnp
and
mov
ret
jge
fcmovnbe
xlat
xchg
pop
fwait
cld
out
jecxz
popa
dec
fcmovnb
jns
imul
fnstcw
inc
out
and
adc
into
in
jno
jbe
and
pushf
mov
mov
fcmovnbe
xor
orb
subl
sbb
out
lods
loope
test
test
test
cmpsl
into
lret
in
loop
mov
mov
lcall
lock
pop
mov
fnstsw
insl
add
sbb
adc
pop
cmp
mov
imul
add
imul
jle
nop
pop
mov
test
add
std
insl
jno
jle
push
xchg
outsb
arpl
scas
pop
jo
lea
jp
mov
push
addr16
add
ffreep
fistl
jno
arpl
pop
lret
gs
not
cmp
or
cmc
mov
loope
daa
aaa
xchg
in
insb
psrad
outsl
xchg
and
jp
push
insb
push
xchg
push
call
es
push
call
inc
cmp
in
repnz
sbb
dec
or
push
pop
xor
add
sbb
push
rorb
xchg
sub
je
out
and
test
dec
lret
cwtl
shrl
and
mov
clc
or
dec
test
sti
mov
and
ss
pop
adc
xchg
in
adc
lcall
mov
popa
syscall
in
bound
aas
loope
cmpsl
sbb
dec
jo
add
jecxz
mov
jns
sbb
in
add
jo
sbb
jbe
or
scas
adc
test
mov
outsl
or
out
cmp
push
push
fistl
cmp
hlt
xchg
dec
call
push
push
sub
push
push
adc
adc
cmpsl
xchg
jle
das
mov
lret
jns
addl
cmp
dec
pop
add
sbb
jno
int3
push
test
xlat
xchg
and
cmpsl
sbb
push
or
sub
cmp
jae
loope
xor
loope
cmp
test
fisubl
pop
pop
add
ljmp
dec
dec
test
inc
popf
dec
and
mov
fidivs
pusha
addb
andl
stos
sbb
maxps
movsb
ss
push
das
jne
aaa
adc
inc
rolb
pop
add
jge
cmp
mov
loope
add
leave
sbb
std
dec
bnd
cmpsl
sbb
movsb
in
test
aam
add
es
addl
mov
inc
xchg
ret
add
test
cs
jle
push
push
sbb
mov
dec
pop
stos
pushf
xchg
imul
je
aas
leave
cmp
jl
pusha
pop
xchg
insb
jecxz
inc
jbe
fucompp
js
std
xchg
cmpsl
sbb
inc
rclb
test
xchg
xchg
add
hlt
ret
xchg
and
xor
out
cwtl
add
leave
rcrl
xchg
stos
cmp
add
cmp
test
cltd
lods
and
add
mov
mov
cld
cmp
adc
xor
mov
in
loop
pusha
cmp
loope
data16
push
inc
call
jp
adc
fadds
dec
leave
add
nop
into
mov
loop
addr16
outsl
in
pop
cmp
mov
aam
xor
push
call
mov
fsubrl
test
mov
add
enter
testb
fistl
mov
sub
gs
and
jbe
rcr
mov
jo
imul
mov
daa
fdivrp
mov
jmp
inc
jecxz
daa
jl
cmc
pop
shl
xchg
enter
cmpsb
cmc
int
leave
fmuls
push
sub
mov
imul
fldl
or
jl,pt
ds
mov
pop
jmp
mov
jg
jno
mov
dec
jle
or
jno
ja
inc
rol
jecxz
xchg
sbb
test
cmp
xlat
adc
xor
mov
jg
lret
int
aas
testl
test
cmpsl
pop
pop
mov
push
call
ja
pop
mov
adc
sbb
mov
inc
test
fadds
dec
lods
pop
out
es
push
and
fwait
cmpl
jno
push
inc
pop
mov
pop
or
js
sub
mov
pusha
imul
int
adc
stos
push
cwtl
xor
test
je
fbstp
cmc
inc
jecxz
push
call
test
jns
xor
movsl
aam
call
xor
cmpsb
imul
sub
mov
in
pop
dec
pop
in
jge
push
dec
cmp
and
push
push
pop
mov
in
nop
jle
jecxz
rcr
outsb
add
out
jno
dec
and
sub
cltd
push
sets
test
jnp
sbb
sub
adc
lret
inc
lret
jne
cmpsl
and
movsl
jg
lahf
aaa
add
add
add
add
add
jb
add
add
add
je
add
add
add
mov
add
add
add
in
sub
add
fnsave
add
add
add
add
add
add
add
add
add
cmp
add
add
call
add
add
addb
add
insl
ja
add
add
add
add
addb
add
add
add
add
pop
cmp
add
aaa
add
mov
add
fstpt
add
add
mov
cmp
add
add
push
call
addl
lock
inc
enter
inc
dec
movsb
push
add
inc
popa
ds
imul
popa
jmp
xor
das
jmp
pop
imul
add
jp
cmp
mov
push
mov
rcl
sti
mov
add
dec
fildll
out
hlt
mov
pop
test
orb
dec
leave
nop
pop
push
cmc
and
popa
mov
mov
pop
push
out
inc
pop
xchg
mov
pop
fs
add
mov
jae
jb
pusha
aad
loope
cltd
leave
push
adc
or
xchg
sti
shrl
mov
insb
jo
push
xor
jae
js
movsl
or
or
mov
mov
addr16
sarl
and
fs
add
subl
jns
mov
xor
out
popa
push
mov
std
pop
js
and
ret
mov
mov
addb
push
or
jle
mov
mov
gs
cmpsl
and
push
cmp
pusha
call
push
call
out
mov
lcall
adc
pop
push
mov
push
sub
xchg
std
and
mov
sahf
add
punpcklbw
jg
push
mov
lahf
clc
cmpsb
cmp
outsl
repnz
jno
jg
jo
cmpsl
sub
push
ds
sbb
add
scas
in
jmp
sub
outsl
jg
movsb
out
cmpb
call
scas
pop
xchg
lret
push
movsb
lret
idivb
ficoms
cmp
in
xor
xlat
es
rorl
testb
in
sbb
or
add
add
dec
pusha
call
cld
mov
jecxz
adc
sahf
cmc
mov
push
xchg
xor
add
pushl
cwtl
sbb
test
mov
cmp
adc
push
ss
adc
push
xchg
push
push
inc
fs
icebp
or
mov
arpl
arpl
jp
test
adc
pop
imul
dec
loopne
ror
dec
insb
inc
fadds
or
mov
sbbb
cmpl
mov
push
stos
pop
sbb
hlt
vpavgw
out
add
lret
cmpl
pop
fimuls
test
add
adc
push
insb
push
arpl
hlt
int
or
rorl
in
push
arpl
movsl
xchg
adc
xchg
movsl
push
dec
dec
mov
insl
jno
sbb
jne
cmp
push
mov
cmpsl
and
gs
and
add
cli
cmp
sti
inc
pop
mov
inc
stos
add
push
or
adc
insl
movb
cmp
or
in
dec
cmc
stc
xor
fnstcw
fidivs
pop
xchg
sbb
push
repz
mov
std
push
jmp
jo
test
repnz
lock
xor
xchg
pop
ret
mov
add
int3
pop
cmp
sbb
dec
xchg
stc
push
or
fistps
xchg
orl
xor
loope
stc
mov
rolb
aas
add
add
sbb
cmpsb
scas
pop
sbb
push
mov
or
fcom
pushf
dec
and
iret
cmpsl
pop
je
ret
dec
les
out
fists
pop
stos
popf
xor
adc
scas
mov
repnz
in
loope
lcall
adc
fidivrs
sbb
test
or
loopne
sbb
in
pop
push
xchg
sbb
pop
mov
outsl
popf
insl
push
mov
push
incl
stos
cmp
mov
movsb
test
dec
outsb
jl
xchg
pop
in
jns
xlat
imul
xor
not
not
lea
mov
movzbl
lea
jnp
pop
pusha
mov
pushf
movw
pushl
ret
push
call
mov
jmp
and
adc
cmp
orl
mov
popa
mov
in
push
out
sbb
adc
leave
in
mov
in
xor
out
jno
cmp
icebp
stc
pop
lret
xchg
push
call
or
inc
sub
cmp
test
lret
add
pop
or
iret
lods
bound
cmpsb
inc
loopne
mov
loope
mov
cli
cmpsl
cmpsl
movsl
movsl
sub
push
adc
sarl
and
cmp
ds
adc
mov
scas
cmpsb
jo
cltd
xor
notl
pop
sub
mov
mov
mov
push
and
scas
lahf
mov
pop
adc
xchg
outsl
pop
fwait
sarb
pusha
mov
sub
xchg
dec
push
xchg
xlat
xchg
fidivrs
push
push
ret
mov
push
call
sti
inc
push
push
call
fsubrs
insl
jecxz
jp
ret
nop
dec
out
adc
cmp
aam
xorb
rcrl
popa
sbb
outsb
pop
sbb
mov
scas
mov
in
out
xchg
lods
scas
cs
mov
or
and
sub
xor
jb
inc
fnstsw
push
xchg
iret
shll
xchg
sub
push
test
xchg
test
cs
xchg
mov
fnstsw
filds
ss
cmpsl
es
fidivrl
loope
je
test
lock
push
adc
int3
xor
iret
cmp
jle
push
push
sbb
mov
push
pop
mov
fstl
xchg
push
mov
or
popl
and
je
mov
and
jecxz
or
and
aam
mov
push
push
and
rolb
adc
test
shl
mov
xor
sub
jl
leave
cmc
mov
add
push
shrd
pop
xor
mov
push
ror
ret
shl
sbb
lods
mov
pop
clc
lods
adc
outsl
icebp
adc
icebp
jns
mov
xchg
stc
in
mov
das
xlat
push
push
shl
enter
inc
lahf
cmpsb
or
je
mov
inc
xor
mov
lcall
cli
sbb
inc
cmp
std
mov
mov
sub
push
or
or
add
and
and
push
jae
add
jmp
mov
cmp
sbbl
cmc
xor
mov
mov
repz
in
pop
shll
lods
insb
fldl
adc
add
in
mov
sub
lock
dec
adc
pushf
in
or
inc
xchg
dec
jnp
mov
and
push
lock
or
adc
jecxz
adc
jbe
ret
cmp
bound
ret
hlt
sbb
and
mov
inc
or
sub
mov
or
lods
cmp
xchg
cwtl
lret
jae
call
cmp
sti
in
stos
dec
push
sbb
lds
ret
mov
int3
aaa
fucomip
sub
into
xchg
sbbb
cmp
push
jg
jnp
xor
xor
fscale
xor
or
rolb
ss
fbld
jo
popf
cmp
jl
add
loope
mov
mov
addl
cmp
adc
dec
sub
and
cmp
mov
dec
pop
repz
xor
sub
shrl
scas
jb
mov
adc
sbbb
sahf
stc
jmp
test
or
lahf
aam
jae
aaa
xchg
xorb
cmp
movsb
rclb
arpl
lock
lods
in
mov
ret
add
lahf
adc
lds
roll
pop
enter
mov
les
cmp
cmp
testb
je
adc
test
lea
call
push
ss
xchg
sub
sub
popf
mov
jne
or
adc
int
xor
loop
mov
adc
ret
mov
sub
popf
nop
lods
ret
test
xor
adc
mov
adcb
test
ljmp
add
ss
adc
int3
jae
test
nop
je
stc
test
lahf
and
ss
enter
loope
push
or
mov
psadbw
cmp
mov
sbb
or
push
adc
inc
xchg
xor
ss
sbb
add
icebp
jae
adcl
xchg
lock
xlat
xor
lahf
xor
xchg
dec
adc
jecxz
push
push
icebp
shr
or
lahf
sub
sub
les
faddl
xchg
lock
scas
ss
sub
in
int3
xchg
dec
movsb
push
jo
mov
mov
add
jns
fldt
mov
testb
aas
xchg
cwtl
and
jmp
mov
lock
mov
cmp
adc
mov
sbb
mov
rolb
nop
inc
pop
ss
rcll
sti
or
mov
adc
jmp
out
jo
jns
pop
rorb
scas
add
fimull
xchg
mov
xor
je
ljmp
shlb
bound
es
fcmovu
mov
xorb
adcb
inc
movsl
or
loopne
mov
add
test
subl
jb
push
test
jl
enter
dec
int
icebp
and
add
cmp
and
xchg
adc
and
movl
or
fadds
in
add
add
add
add
in
lret
cmp
nopl
mov
adc
scas
nop
imul
sub
xor
sbb
pushf
xchg
mov
rorb
mov
rcrl
scas
and
sub
enter
push
test
push
in
or
dec
in
jl
out
fidivs
mov
dec
imul
lret
testl
jl
ljmp
dec
mov
test
movsb
add
out
adc
rclb
mov
adc
mov
cmp
repz
sub
call
and
sub
push
addb
fwait
xchg
je
nop
cmp
xchg
mov
aad
sub
leave
sahf
or
push
inc
dec
imul
mov
jle
out
jecxz
out
sbb
add
ljmp
add
arpl
shrb
adc
mov
push
pop
fmuls
adc
lret
in
dec
gs
lret
cmpl
daa
nop
jb
cmc
bound
stc
xor
mov
adc
int3
aaa
test
nop
mov
test
xor
int
imul
mov
idivl
rcl
repz
out
adc
sbb
or
mov
imul
int
jl
into
into
inc
dec
and
fcmove
aam
clc
cmp
daa
add
mov
sub
out
rorb
sub
dec
incl
andb
pop
or
xor
shl
and
iret
cs
push
and
sahf
pop
stos
fs
or
iret
out
jb
jp
xchg
pop
rorb
dec
movsb
iret
sub
push
jmp
push
roll
sub
stos
mov
outsl
sub
test
or
aad
cmp
inc
dec
stos
or
jb
sbb
inc
pop
repz
push
pop
mov
repnz
icebp
inc
or
pushf
add
mov
xor
rclb
add
jge
arpl
mov
jp
addb
in
inc
pop
inc
in
mov
xchg
sbb
jge
jbe
stc
fsts
call
mov
sub
fmulp
sbbb
ret
mov
popf
cld
hlt
push
pop
negl
mov
sbb
sbb
or
xor
xor
shlb
out
loope
sub
sti
call
roll
xchg
sbb
sbbb
ret
rorl
test
insl
sub
nop
jmp
xor
in
or
mov
roll
push
xor
lock
mov
or
mov
fcmovnu
stc
jae
or
push
add
adc
pop
nop
aam
jnp
popf
cmpb
push
push
inc
shlb
add
mov
sti
dec
je
push
sub
shrb
xor
rcl
rcrb
pop
mov
ret
rolb
pop
adc
aaa
in
mov
mov
adc
ds
enter
mov
repz
repz
lret
incb
mov
mov
bound
lcall
shlb
adc
arpl
push
nop
aam
sub
cmp
rol
out
repz
or
in
add
test
and
mov
fstl
int
adc
fcompl
mov
hlt
clc
rolb
iret
mov
jb
sub
rcll
mov
sub
bound
push
fiaddl
int3
lret
add
cmpsb
ljmp
call
sbb
pop
xor
dec
cmpb
rolb
out
cmp
outsl
jno
hlt
subl
add
movsl
cmp
pop
pop
in
lahf
mov
mov
out
lret
ret
out
int
push
outsl
dec
test
scas
pop
lds
add
sbb
fcmovne
lahf
ret
sub
cmc
jmp
mov
fucomi
or
or
add
mulb
inc
sbb
or
outsl
iret
stos
cmpsl
in
jge
ss
not
in
lods
add
and
imul
sub
sub
mov
mov
les
xchg
sub
add
pop
add
adc
mov
mov
hlt
pop
mov
aaa
and
jns
ljmp
pop
rcll
adcb
dec
sbb
sbb
js
and
lcall
ret
lock
insl
insb
pop
push
clc
xchg
push
cmpsl
loopne
mov
stc
xchg
xor
add
popa
or
lcall
mov
mov
mov
sahf
sub
cmpl
stos
or
mov
xchg
ret
jae
in
stc
cmp
outsl
jne
je
push
cmc
jmp
fmul
out
adc
stc
adc
vcvtps2ph
dec
hlt
les
adc
add
jno
pop
sub
sti
pop
hlt
sub
rcr
cmc
xchg
inc
push
xor
dec
lods
fsubrl
rolb
cli
push
adc
out
aas
mov
shlb
fnstcw
pop
adc
add
orb
and
fsubr
jae
shll
push
test
repnz
in
fildl
jae
adc
std
outsl
jo
scas
lret
lock
pop
sbb
into
cld
xchg
inc
sub
xor
push
ja
neg
aam
lret
push
cwtl
shlb
sbb
or
dec
mov
jo
xor
xchg
mov
cmp
add
dec
insb
push
mov
push
sub
fwait
loopne
fiaddl
jb
fildl
sub
dec
add
xchg
test
leave
std
cmp
inc
rcrl
icebp
adc
call
xchg
mov
lret
jmp
cld
lret
cli
mov
adc
insb
adc
xor
shll
pop
add
jle
mov
jne
int3
inc
dec
sti
or
leave
shl
ljmp
lret
scas
std
shlb
jno
pop
loopne
mov
nop
mov
das
push
gs
push
mov
pop
test
es
and
xchg
fdivs
or
dec
adc
movb
sarb
stc
push
pop
adc
jmp
loop
sbb
rolb
add
loopne
adc
inc
fimull
mov
nop
pop
pop
les
push
arpl
sub
bound
data16
pusha
inc
fwait
ss
in
add
or
xor
nop
or
leave
out
mov
jmp
adc
or
add
sub
jg
jne
add
pop
test
push
mov
and
xchg
xchg
ret
sub
sbb
into
or
push
mov
ret
inc
ljmp
or
mov
lods
lahf
cmp
pusha
cmp
add
xor
pop
jg
pop
and
ror
add
loop
test
or
iret
outsb
lods
retw
cltd
add
js
inc
int
in
cmp
jmp
gs
daa
inc
imul
pushf
mov
jecxz
imul
sub
and
jecxz
movsl
jecxz
xchg
fistps
notl
jecxz
cmpl
lret
cs
xor
or
jecxz
js
push
xchg
cmp
mov
xor
mov
test
dec
stos
mov
xchg
mov
sbb
push
testb
test
inc
ret
into
fwait
jl
mov
in
adc
or
sub
and
lds
push
or
fwait
mov
fstpt
ret
ret
arpl
rcrb
or
out
cmp
rclb
xor
or
mov
or
jae
pop
cwtl
push
xchg
incl
bound
xchg
jns
mov
out
jo
mov
lea
push
add
sub
ret
ds
jge
or
mov
les
xchg
dec
cmp
daa
mov
fisubrs
push
dec
adc
inc
gs
movsb
add
cmp
xchg
out
inc
xor
mov
xchg
add
inc
enter
out
cmpsl
stos
enter
sti
out
sbb
mov
fcom
sub
out
and
mov
in
adc
addr16
cmp
pushfw
nop
jl
or
mov
cli
jmp
or
lcall
mov
jno
or
mov
xor
rclb
jl
ljmp
and
in
shr
pop
pop
jmp
std
pusha
xorb
mov
jno
pop
adc
div
mov
jmp
aad
stos
orl
or
imulb
cld
add
popa
lret
dec
nop
push
pop
jmp
mov
and
pop
push
mov
jmp
jg
into
dec
pushf
ret
icebp
fucomip
andl
call
jns
mov
pop
mov
jmp
mov
ljmp
shl
cmpl
mov
inc
enter
jo
call
leave
push
loopne
jmp
mov
shr
pop
decl
inc
fdiv
imul
xor
ror
cmp
and
add
loop
cmpsl
mov
mov
das
outsb
lods
enter
mov
and
add
shr
sti
ds
jns
mov
dec
gs
sbbl
jp
mov
cld
mov
jmp
cmp
push
dec
pop
sbb
or
mov
leave
or
push
shll
cmp
mov
cld
lahf
loop
mov
subl
xorl
sahf
add
daa
in
fidivl
add
in
outsb
int3
cli
adc
push
sbb
hlt
leave
sbb
inc
jmp
into
cmp
jmp
add
adc
jl
in
scas
jle
sti
cld
fwait
stos
int
cmp
push
xchg
stc
cltd
shll
out
fcmovnb
out
enter
clc
roll
cmp
push
cmp
outsb
ljmp
imul
mov
outsl
mov
in
ljmp
notl
xlat
inc
in
mov
ss
inc
cli
pop
mov
or
xchg
and
in
std
ss
cmpsb
scas
mov
in
negb
dec
fnstsw
push
cmpsb
inc
adc
and
pop
mov
adc
sbb
icebp
stos
in
lods
mov
cmp
sbb
in
or
lcall
push
aaa
ljmp
mov
in
repnz
add
insb
xlat
adc
out
mov
rcrl
sbb
jg
test
out
test
adc
sub
lds
mov
test
mov
insb
push
add
fcomps
adc
xor
dec
jl
cmp
mov
jmp
call
xorps
lar
pop
inc
mov
sub
jmp
jg
push
adc
add
rolb
iret
push
xchg
js
rcll
inc
stc
jo
jl
icebp
push
jnp
js
adc
repnz
cmp
das
inc
imul
test
push
push
loop
jp
repnz
in
fucomp
mov
mov
adc
int
cwtl
jl
inc
sbb
out
incb
mov
cwtl
lret
outsl
xchg
jo
sbb
out
sbb
add
pop
mov
stc
add
mov
add
adc
xorb
adc
nop
shrb
popl
mov
adc
out
and
add
sti
loop
ret
orb
cld
lock
cmp
cld
sub
fsubrl
sub
lock
and
icebp
test
add
adc
icebp
sbb
jne
or
jmp
nop
sahf
repz
push
xor
push
outsb
icebp
lds
fcmovnbe
pop
lret
pop
mov
xchg
jnp
fwait
pop
push
sbb
adc
adc
lret
mov
adc
add
orl
in
and
sub
shlb
mov
test
call
mov
push
pop
xchg
int3
adc
mov
cmp
das
imulb
xchg
lcall
test
test
js,pt
mov
repnz
cmp
mov
or
adc
je
test
cmp
flds
repnz
icebp
aas
adc
sub
out
cmp
das
cwtl
out
nop
jmp
cmpl
and
sbb
sbb
adc
sbb
icebp
shll
ret
int
in
loop
xor
cmp
shll
inc
int
ffreep
jb
xchg
inc
adc
movsb
add
stos
leave
nop
jbe
xor
mov
or
adc
and
cli
fildll
add
in
lret
loop
sub
mov
or
pop
nop
shrl
mov
push
add
push
bnd
clc
icebp
and
dec
jl
pop
pop
sahf
lds
sub
inc
cmp
pop
mov
jnp
mov
ret
cmp
add
xchg
mov
pop
jg
popf
icebp
mov
sub
data16
rcll
scas
adc
std
xlat
je
std
mov
rolb
fidivs
push
or
xchg
fwait
sub
sbb
rclb
dec
jl
push
sub
ret
pop
popf
cwtl
pusha
inc
adc
jbe
test
ret
push
mov
dec
sub
sarl
dec
fcom
mov
pop
mov
jl
xchg
pop
icebp
dec
pop
mov
mov
icebp
jl
gs
mov
push
add
mov
rcrl
push
push
sbb
adc
sub
aad
adc
sbb
ss
add
in
call
sub
or
rcll
repnz
sahf
dec
dec
mov
pop
dec
btr
mov
xchg
cli
push
rolb
imul
dec
xchg
cmp
movsl
mov
xchg
adc
lret
sti
jp
lret
mov
push
add
mov
leave
scas
addr16
xor
das
mov
jmp
or
mov
inc
stc
int
sbb
dec
cmp
sub
insl
lods
jno
aaa
sbb
mov
or
jbe
test
add
fwait
cmp
loop
jmp
jb
xchg
cmp
or
mov
outsl
or
je
xor
cld
lds
fadd
push
xor
push
xor
dec
out
push
fs
bound
jecxz
mov
lods
adc
or
jbe
jecxz
mov
push
bndstx
ljmp
and
cmpsb
sub
sbb
mov
cmp
orl
adc
stos
sbb
out
testb
out
adc
in
int3
ficompl
lods
mov
xor
pop
sub
or
pop
lods
fisttpll
fcmove
lods
nop
into
adc
sbb
icebp
xor
in
xchg
or
adc
inc
icebp
adc
stc
out
adc
xchg
out
shll
enter
inc
out
sub
sbb
popa
xorb
sahf
jb
inc
sub
sbb
aaa
mov
add
mov
jmp
sti
xor
out
imul
dec
cmp
pop
shlb
out
fisubrs
sub
outsl
sub
push
pop
adc
xor
cmp
mov
and
or
xchg
fwait
sub
out
cmpsb
pop
lods
cs
mov
cwtl
mov
mov
ds
mov
inc
outsl
icebp
add
push
ja
dec
add
wbinvd
sub
js
xor
dec
adc
or
jle
xlat
lods
cmp
xlat
or
push
push
frstor
rolb
ror
push
inc
out
xchg
addb
or
cmc
adc
cli
push
nop
sub
test
xor
push
bound
add
addb
icebp
adc
ljmp
pop
call
jmp
lods
adc
dec
prefetch
dec
leave
clc
push
jg
mov
cmp
fcmovnbe
adc
jl
adc
add
cmc
push
addr16
adc
insb
fldenv
int3
cs
or
shrb
or
mov
in
out
fistpl
in
add
scas
incb
sub
inc
ret
and
fldl
nop
cmp
mov
xor
mov
test
sub
push
jae
rcrb
xchg
sub
and
adc
mov
or
push
and
nop
fimull
repnz
das
and
or
jmp
sbb
inc
mov
add
icebp
fsubrp
aad
or
or
stos
stc
mov
fildl
movl
andl
mov
or
sub
add
xor
add
adc
add
or
xor
inc
popa
xchg
and
or
sbb
clc
xor
popf
jg
out
fs
add
fidivrl
jb
add
and
add
or
cltd
rcll
mov
xorb
adc
popa
push
scas
sbb
pop
xor
pop
inc
ljmp
mov
lods
lahf
mov
repnz
xchg
mov
add
add
inc
or
addr16
cmp
jns
add
mov
jmp
cmp
or
repz
add
mov
and
jle
add
and
clc
into
fdiv
sub
outsl
test
cmp
loopne
adcl
or
xor
scas
movsl
cmp
insb
and
test
mov
fcomip
hlt
addl
xor
xor
pop
inc
pop
mov
imul
mov
daa
lock
std
add
pop
adc
lods
xchg
int
nop
and
mov
faddl
xchg
dec
cmp
sub
clc
out
cmp
sbb
ja
bound
int3
hlt
push
lret
dec
cmp
mov
push
loopne
and
add
in
mov
push
xchg
sahf
mov
mov
loop
xor
stos
add
sti
adc
push
lods
xor
sub
pop
fwait
add
cmpl
test
nop
aas
pop
cltd
jecxz
je
mov
popa
addr16
orb
mov
fwait
pop
call
out
add
mov
cwtl
xchg
add
rol
or
jl
out
add
loopne
add
mov
imull
jns
push
sub
push
xchg
inc
scas
rorl
or
push
or
sub
cmp
xor
mov
add
std
push
test
sbb
or
inc
hlt
fidivrl
jmp
xchg
not
push
add
or
or
or
lret
push
rorb
or
popa
mov
cmpsl
movsl
arpl
ljmp
add
xor
or
rcrb
rolb
movb
add
or
mov
or
shl
and
xchg
mov
xlat
lret
dec
add
or
sub
jl
push
leave
loop
out
iret
into
sbb
out
fisttpl
or
int3
xorl
repnz
jp
in
add
test
jnp
mov
or
aas
sbb
or
adc
add
sbb
jl
mov
or
clc
fisubrs
ljmp
filds
inc
or
out
jns
mov
xchg
push
add
shll
cmp
int
adc
inc
xchg
insb
mov
les
and
fistl
repnz
jo
cmp
es
add
cwtl
xor
add
pop
jb
or
movsl
xor
daa
mov
test
sub
sub
jo
pop
test
clc
lds
pushf
in
lds
or
cmp
inc
xor
xor
push
mov
ds
xor
mov
int3
stos
es
push
xchg
push
pop
mov
jnp
mov
jl
outsb
outsb
popf
iret
push
jge
mov
aam
stos
repz
int3
add
ljmp
sbb
sahf
push
movl
movsb
in
mov
mov
add
cltd
cwtl
dec
push
mov
inc
cmc
inc
add
punpcklwd
cmp
jge
das
mov
cwtl
lock
pop
inc
nop
jecxz
stc
add
sysexit
add
adc
cmp
in
mov
sub
xchg
ret
dec
inc
xor
adc
mov
add
popf
or
mov
das
sbb
mov
ret
pop
into
adc
push
cli
adc
adc
cmc
push
pop
lods
dec
pop
repnz
xchg
sbb
bound
nop
mov
push
pop
mull
rcrb
outsl
into
push
icebp
repnz
xchg
cmp
jo
and
orl
push
dec
adc
add
test
pop
sbb
test
addr16
test
jb
pop
movsb
add
cli
test
sub
cmp
into
adc
and
push
scas
cmp
dec
xor
test
sti
push
jo
and
or
sub
ja
dec
inc
push
jl
roll
mov
lret
into
mov
xchg
pop
push
and
mov
xor
add
push
push
and
adc
mov
push
aad
lods
adc
mov
push
outsb
pop
pop
adc
xor
mov
pop
push
sub
add
js
and
testb
loop
ljmp
mov
pop
pop
pop
sbb
push
nop
adc
cltd
pop
cld
daa
cmpsl
adc
fwait
xor
inc
data16
mov
int
mov
mov
push
les
dec
aam
push
xchg
movsb
fcoml
jl
repnz
pop
cmp
or
pop
or
mov
cmp
xchg
in
ret
inc
insl
sti
inc
push
iret
add
push
add
adc
xor
xchg
dec
mov
aam
lods
std
insb
mov
loop
sbb
or
mov
fmuls
xor
inc
pop
hlt
rorb
mov
fisubs
xor
xchg
cmp
push
lea
dec
sub
push
sub
cmp
push
dec
xor
cli
xchg
dec
adc
and
shl
or
aad
inc
mov
adc
test
mov
or
jp
or
mov
jns
ja
sub
dec
nop
mov
jno
jecxz
adc
adc
rclb
add
mov
lock
add
test
insb
inc
lods
fcomps
pop
repnz
sbb
adc
stos
pushf
add
sti
and
loop
flds
in
aad
xor
sbb
push
ds
xor
lahf
sbb
adc
or
pop
jmp
sbb
pushf
or
mov
cmp
mov
lods
mov
fiadds
movsb
sub
mov
data16
jno
mov
das
jbe
add
xor
xlat
mov
rcl
lock
lock
loope
popa
nop
ljmp
or
mov
mov
sti
lock
adc
dec
lea
mov
and
sbb
data16
or
les
outsl
shll
mov
push
stos
sti
sbb
or
add
or
adc
mov
fst
mov
or
out
and
stc
push
ljmp
adcl
in
and
int3
jle
imul
cmp
or
adcb
mov
push
ljmp
mov
loope
sub
or
lds
jae
or
pop
jns
js
adc
or
mov
sub
test
add
sub
xchg
lds
sub
dec
hlt
add
jo
jg
sahf
out
inc
push
mov
add
repz
les
xchg
ficoml
mov
mov
aam
aaa
je
lahf
in
ret
or
icebp
in
cli
or
je
adc
inc
in
mov
rolb
mov
push
or
xchg
loop
jge
or
outsb
les
jae
scas
sti
adc
push
rcrl
push
loop
dec
fisttpll
jle
dec
shrl
pop
enter
sub
repz
or
sub
jge
scas
inc
sbb
lret
xor
repnz
lret
or
in
loope
sbb
jae
icebp
inc
stc
and
inc
mov
dec
mov
push
sbb
adc
push
jmp
mov
adc
cmp
ds
push
jmp
xor
pop
or
jmp
movsb
pop
ds
sbb
dec
push
push
cs
faddl
sub
lret
aad
and
push
jmp
or
lods
push
xor
add
scas
mov
aaa
call
test
adc
dec
jbe
or
or
out
lcall
pop
sbb
dec
xor
pop
int3
into
mov
push
leave
icebp
pop
loope
mov
stc
pop
lahf
mov
mov
ljmp
mov
and
sub
mul
jmp
mov
add
addr16
sub
mov
jns
adc
bnd
sub
push
xchg
add
fsts
mov
mov
ret
imul
loop
in
add
pop
aam
repnz
inc
jp
mov
pop
xchg
inc
and
add
adc
in
mov
ds
dec
mov
mov
xor
adc
mov
nop
xor
pop
rcrb
mov
jecxz
or
les
nop
cmp
mov
popa
int
inc
lods
pop
mov
xchg
lock
adc
adc
fiadds
sub
stc
dec
cmp
loop
dec
or
adc
leave
dec
jecxz
inc
movsl
adc
mov
les
adc
loop
jo
or
cwtl
gs
adc
or
adc
ds
jae
pop
mov
mov
pop
mov
add
mov
in
insl
pop
int3
sahf
repz
fimull
mov
xor
mov
arpl
add
ret
mov
out
inc
or
jl
and
rclb
add
xchg
ljmp
pop
imul
push
adc
mov
shrd
lret
clc
adc
mov
ror
mov
ret
sbb
jae
or
sub
adc
or
out
adc
daa
sub
adc
push
in
xor
push
add
mov
movzbl
clc
adc
lahf
sbb
into
pushf
das
lock
add
lahf
push
orb
cmpsl
dec
inc
xor
inc
orb
mov
out
lods
cmp
std
or
fsubrl
aam
dec
push
hlt
test
xchg
loopne
in
xchg
hlt
cmp
or
fldt
sub
clc
lahf
jl
loope
mov
push
mov
dec
push
fwait
cld
mov
rolb
aam
scas
repz
push
push
add
xor
cli
dec
cmp
scas
jmp
in
aas
adc
sub
inc
ljmp
add
jmp
stos
imul
add
out
adc
sbb
ds
and
in
jno
jmp
push
cld
rcrb
mov
mov
mov
or
add
fstpl
adc
decl
iret
dec
repnz
or
pushl
jnp
call
adc
or
int
mov
pop
sar
lock
sarb
or
mov
push
push
sbb
push
xor
pop
cmp
jb
test
stc
mov
cli
test
or
repz
push
gs
cmp
sub
mov
movsb
push
mov
aam
lahf
into
out
xor
fsubrs
lods
dec
das
jae
jecxz
xchg
lcall
and
jb
dec
sarl
lcall
push
dec
push
sub
adc
add
in
in
enter
roll
out
pop
sti
mov
inc
or
adc
adc
or
dec
and
adc
push
jmp
adc
push
fnstcw
in
sbb
imul
rcrb
hlt
push
mov
mov
lods
dec
mov
test
pop
inc
clc
push
add
sub
mov
sbb
fcoml
cli
push
enter
pop
lock
or
loopne
setg
adc
hlt
sbb
xchg
mov
lock
adc
out
subb
fcmovb
push
mov
sbb
in
xchg
call
dec
out
iret
push
adc
adc
imul
sub
es
push
mov
jb
dec
ss
out
jmp
mov
xchg
or
mov
mov
daa
roll
pop
pop
pushf
mov
jl
out
dec
xchg
jecxz
pop
dec
or
out
pop
scas
out
int3
call
jne
stos
ror
test
and
mov
or
mov
adc
add
pop
mov
aad
dec
xor
int3
xlat
stos
out
adc
iret
xor
jo
jge
inc
outsl
inc
xchg
mov
xchg
xlat
adc
test
mov
dec
add
adc
xchg
jmp
sub
adc
adc
lret
or
xchg
inc
out
andl
push
mov
inc
or
push
xor
push
push
jne
inc
push
ret
mov
add
loope
mov
ret
imul
outsb
int3
dec
loope
mov
pop
dec
inc
or
in
ret
pop
jnp
sbb
xor
mov
push
dec
xor
fstpl
call
cs
mov
ss
insb
stc
or
dec
dec
adcb
mov
js
mov
cmp
or
and
out
adcl
cmpsl
adc
or
xor
mov
mov
sbb
mov
push
adc
orl
int3
inc
or
dec
lods
imul
inc
push
push
sbb
sbb
push
bound
or
sbb
sbb
int
push
imul
pop
ror
arpl
or
cmpsl
and
lea
ret
pop
repnz
cmp
or
int3
inc
nop
loope
repnz
popa
cmpsl
stos
adc
push
add
or
test
lret
xor
test
push
mov
push
xchg
sub
push
push
cmp
pop
pop
dec
push
add
sub
fldln2
adc
add
adc
sbb
std
test
mov
xchg
mov
int3
mov
mov
ret
inc
fsts
mov
or
mov
fadd
sub
orl
aad
aaa
push
cli
mov
mov
fsubrl
sarl
mov
mov
dec
ljmp
addr16
ret
sub
xchg
repz
cmpsb
cwtl
icebp
inc
lcall
inc
lds
fadds
sahf
lods
add
repnz
mov
ret
shl
adc
movsl
add
call
dec
in
or
into
adc
fmuls
and
sbb
cmp
divb
ret
jg
mov
inc
lock
aad
and
lahf
push
cmpb
sbb
jbe
or
ljmp
jecxz,pt
enter
orl
ud1
mov
xchg
add
adc
xor
andb
mov
add
mov
cli
add
movsb
nopl
fisttps
adc
scas
jbe
shlb
adc
and
sahf
cmp
lock
lods
pop
rcrb
mov
je
mov
lcall
ror
sbb
add
cmp
xchg
add
adc
xor
in
sbb
sub
or
out
adc
or
adc
aam
and
adc
xchg
add
ficompl
mov
mov
fld
dec
xor
or
or
xchg
fcoms
cmpsl
imul
repnz
xchg
jp
pushl
icebp
fwait
in
adcl
mov
repnz
out
idivl
add
mov
jmp
cmp
push
fstl
adc
jl
hlt
mov
sub
sbb
das
xchg
sub
and
xchg
nop
dec
xchg
push
sub
jmp
xor
adc
push
lods
scas
mov
fisttpll
aaa
ficomps
xchg
int
sbb
or
fcmovnb
call
xor
jnp
jo
or
repnz
add
fdiv
gs
rcr
or
adc
movsb
lods
push
or
nop
jg
xchg
sub
repz
test
fcompl
add
ret
sub
dec
jg
stos
pushf
lret
xor
or
xlat
les
loope
jl
xchg
jge
loope
mov
les
jg
or
push
les
dec
inc
mov
or
add
push
inc
cmp
mov
adc
popf
loope
xchg
jno
or
cmc
mov
clc
aam
lods
inc
mov
sub
jo
mov
mov
xchg
jae
or
add
repnz
int3
pop
nop
clc
mov
sar
mov
repnz
push
pop
aaa
push
mov
lods
fs
test
mov
stos
push
xchg
xchg
xchg
out
imul
mov
sub
sub
rorl
lret
mov
mov
jb
lret
cmp
rcll
fistpl
icebp
pusha
in
adc
add
data16
lock
and
sub
xchg
hlt
outsl
mov
fdivrl
cmp
test
into
mov
add
out
out
add
cmp
sub
mov
add
and
xchg
xor
je
lock
call
fldl
jae
xchg
or
mov
ja
adc
dec
and
xchg
test
icebp
shrl
aad
rcll
out
mov
mov
xor
sub
and
out
inc
stos
xchg
sbb
and
popf
bnd
mov
push
xor
mov
scas
lahf
movsl
dec
out
and
cmp
ret
sub
subb
add
shl
hlt
divb
es
enter
sbb
fcomps
xor
ds
cwtl
push
xchg
movsl
dec
sbb
es
sbb
test
lcall
push
jp
inc
add
int3
lods
dec
test
pushf
mov
lods
dec
add
ret
sahf
dec
stos
push
or
xor
push
mov
add
mov
loop
loopne
or
sub
cmp
je
pop
nop
mov
add
dec
cmp
test
push
xchg
stos
push
pop
out
mov
or
and
icebp
addl
sti
add
lds
movsl
push
sub
xor
xchg
xchg
cmc
lcall
fimull
movsl
dec
nop
jnp
push
or
test
sbb
lret
push
pop
jb
and
dec
hlt
aad
push
sbb
jae
outsb
push
hlt
dec
adc
pop
arpl
push
mov
push
popl
mov
out
add
inc
jbe
inc
call
add
cld
xor
xlat
mov
xchg
sbb
ret
and
or
in
fimull
lods
ljmp
lahf
out
mov
adc
pop
arpl
into
mov
sub
jbe
push
mov
adc
pop
scas
enter
dec
push
add
outsl
scas
enter
aam
add
inc
push
push
xchg
push
ss
cmp
mov
jg
mov
fnstcw
inc
pop
scas
in
adc
outsb
adc
push
int
orl
xchg
fs
bound
lods
sub
push
sub
test
or
gs
inc
cmp
flds
dec
push
out
mov
setno
lahf
or
test
int
mov
and
call
fbld
lods
sub
bound
enter
add
ret
jns
or
adc
stc
xchg
xchg
mov
jecxz
fstpl
mov
cltd
testb
ja
sahf
into
ficoms
mov
bound
mov
mov
xchg
stos
out
xchg
adc
add
sarl
fucomi
or
pminub
mov
add
arpl
adc
lods
ja
in
xor
popl
ds
push
sub
lods
xor
repnz
ja
out
mov
rolb
lret
push
roll
push
imul
aad
lock
jl
int
mov
xchg
out
lret
pusha
push
out
adc
lahf
pusha
mov
stos
shl
pushf
sbb
out
test
decl
mov
lds
scas
jbe
movsb
push
mov
stc
enter
dec
enter
or
loope
scas
sti
cmp
adc
jg
jae
or
add
adc
sub
in
lds
add
repz
fisubrs
cs
cmp
adc
add
fcomp
mov
dec
hlt
adc
lahf
add
adc
test
rorl
sub
icebp
call
mov
or
mov
repnz
xor
xor
pop
pop
and
adc
popf
push
sbbb
lock
push
out
pop
dec
sbb
or
xchg
shll
mov
dec
rorb
and
add
push
push
ret
jne
lds
in
pop
add
push
pushf
jge
xchg
out
xchg
imul
out
sti
mov
fwait
mov
mov
sub
push
add
pop
repnz
sti
repz
sub
out
stos
out
or
inc
stos
mov
loope
pop
push
push
xchg
sbb
jmp
sbb
pop
mov
cmp
jp
pusha
push
fstpl
jp
sbb
lock
pop
xor
hlt
btr
addr16
pop
scas
dec
push
lock
sub
sub
mov
scas
popf
jne
xchg
cmp
lahf
test
xor
pop
adc
adc
push
movsb
push
xchg
fmull
cwtl
cmpsl
or
inc
int
xchg
rorl
xchg
out
push
sub
push
pop
decb
enter
jge
push
jns
mov
rcrl
int3
fsubp
and
hlt
push
or
sbb
stc
ss
push
das
pop
inc
pmuludq
int
adc
out
mov
push
add
add
push
movsb
dec
and
mov
inc
cli
dec
lahf
dec
pushf
adc
pushf
lret
xchg
mov
ret
add
test
mov
leave
out
fwait
int3
pop
subb
cmp
push
cmp
imul
cltd
mov
loopne
xchg
loopne
loop
cs
or
jnp
or
orb
xor
lahf
jo
cld
xchg
or
mov
mov
mov
repnz
sbb
and
mov
shrb
pop
adc
adc
add
scas
repz
pop
mov
add
xchg
sub
movsb
add
orb
jmp
or
fiadds
push
inc
or
in
add
dec
mov
in
ret
das
pop
pop
rcll
adc
lock
cmp
add
cwtl
insb
inc
jmp
mov
jb
call
mov
sbb
sbb
or
lea
jnp
inc
cltd
movaps
or
lahf
or
movsl
xlat
rclb
add
inc
out
inc
dec
hlt
scas
shlb
xor
in
add
sti
ficomps
inc
stos
testl
or
jae
and
or
pusha
aaa
iret
mov
lcall
jb
push
out
sbb
out
mov
xchg
fldl
popf
lea
std
mov
shlb
test
sahf
or
jp
cmp
cmp
push
orb
xor
ret
in
aaa
enter
add
sbb
mov
pop
cmp
dec
inc
idiv
loop
rol
adc
pop
add
mov
call
std
jmp
cmp
push
pop
mov
call
or
aad
pop
or
repz
mov
sub
leave
inc
and
fcoms
js
xchg
or
inc
and
push
fidivrl
inc
mov
repz
push
or
xorb
xlat
les
sbb
ds
inc
mov
sbb
xor
enter
add
movsb
cmp
add
adc
inc
scas
fisttps
xchg
jg
hlt
add
dec
testb
fcomps
lods
addps
adc
pop
adc
jo
cmpsl
out
lods
insb
out
adc
mov
test
add
dec
or
and
adc
mov
imul
xchg
adc
imul
sub
mov
or
dec
in
dec
inc
sbb
dec
sub
fadd
cwtl
ret
or
xor
jecxz
bound
inc
pusha
mov
and
or
xchg
add
adc
cmp
adc
or
xor
loop
jmp
fimull
leave
and
mov
cwtl
adc
mov
pop
sub
sahf
out
movntps
popf
xchg
or
and
ss
jno
sub
cmp
inc
in
add
or
mov
dec
into
or
fstl
repnz
jo
mov
xor
push
adc
lahf
insb
scas
push
sub
mov
or
sti
dec
xor
ret
add
or
pop
xchg
mov
ret
adc
or
inc
add
icebp
mov
xchg
sahf
cmp
sbb
add
ret
sub
push
adc
mov
add
mov
test
gs
xchg
jmp
mov
ret
adc
ss
inc
adc
mov
adc
sub
shrl
xchg
lret
scas
sbb
fdiv
fiadds
aam
orl
add
mov
add
rol
fimuls
repnz
xor
das
in
adc
cmp
adc
xor
adc
xor
test
add
fs
or
pop
push
icebp
pop
test
cmp
rcrl
or
hlt
rcr
xor
jne
pop
ret
xchg
mov
add
nop
mov
mov
mov
test
jecxz
sub
icebp
mov
push
cmp
imul
rclb
xchg
jne
test
imul
or
mov
cmpsl
aam
xchg
adc
push
cltd
orb
xchg
pop
pusha
movsb
jns
out
fxch
iret
movsb
repz
cmp
into
test
adc
ja
cmpsl
scas
and
mov
jb
test
xor
ficoml
call
xorb
les
icebp
mov
add
mov
les
shlb
fcompl
add
mov
outsb
int3
xchg
or
nop
ret
les
pop
shrl
fnsave
xlat
repz
mov
adc
and
inc
test
add
adc
mov
sub
xchg
xor
cmp
xchg
inc
mov
pop
nop
sbb
or
insb
data16
or
dec
mov
inc
or
mov
pop
and
cmpsb
insb
pop
or
dec
ds
xor
mov
push
data16
inc
jl
imul
jo
push
dec
out
jg
rcll
scas
shrb
sub
sbb
sub
or
les
out
in
cs
popf
fwait
ss
jbe
push
sbb
pop
adcb
inc
add
mov
movsb
mov
pop
or
and
shlb
adc
add
adc
shlb
or
and
test
sbb
push
out
xchg
xorb
test
pusha
cmp
pop
adc
xchg
inc
sbb
add
xor
lahf
cmp
rclb
and
mov
lock
pop
or
sub
and
inc
inc
into
add
inc
pcmpgtb
les
hlt
mov
imul
xchg
mov
jo
test
sub
loop
and
or
fadd
ret
adc
iret
dec
xchg
add
rclb
push
mov
sbb
xchg
or
or
lds
pop
shrl
or
inc
je
popa
in
adc
xchg
addr16
testb
inc
insl
dec
dec
push
popf
int
adc
popf
dec
cmp
dec
mov
lret
cmp
or
mov
push
push
out
jp
test
and
insl
shr
pop
lret
inc
pop
add
ja
push
mov
push
lahf
enter
movsb
es
sarb
aam
clc
stos
movsb
cmp
out
ret
ljmp
filds
push
add
mov
je
jae
int3
or
push
add
pop
xchg
mov
lea
mov
addb
push
out
xchg
adcb
arpl
vpperm
add
mov
sbb
mov
shll
daa
lahf
pop
jae
sub
mov
mov
add
pop
mov
dec
sub
or
lret
add
xor
add
mov
addr16
pop
mov
add
stc
inc
mov
fildl
or
data16
mov
push
test
jae
pushf
dec
out
jae
or
stos
jp
ret
or
adc
add
sahf
mov
shrb
mov
mov
lret
mov
or
sub
mov
mov
xchg
sbb
ret
mov
push
pop
leave
add
or
lock
add
push
push
mov
add
mov
loop
dec
fdivs
dec
repz
adc
mov
or
mov
jmp
fwait
mov
push
in
cmp
inc
in
repz
xor
ljmp
cmp
data16
mov
lcall
jmp
mov
bound
mov
adc
out
cmc
pop
dec
scas
xchg
cmp
pop
xor
inc
xchg
hlt
sub
adc
sbb
scas
repz
push
mov
or
decl
mov
jmp
fsincos
mov
adc
adc
loopne
out
xor
mov
cmpsl
lahf
sbb
ds
sbb
and
xchg
mov
sarl
cmp
insb
ror
not
add
inc
sbb
xor
adc
dec
mov
sub
lods
repz
fdivp
mov
cltd
or
int
movzbl
push
rorl
mov
sub
in
les
mov
push
adc
sbb
fistps
mov
sbb
cmp
test
lcall
and
push
xor
stos
push
dec
rclb
dec
mov
fldl
push
push
clc
cwtl
cmp
jg
pop
test
in
cmc
sbb
addr16
jmp
mov
test
jp
or
sub
mov
out
and
pop
jge
and
mov
and
rcrl
dec
and
cmp
mov
push
jecxz
aas
adc
push
fidivs
sub
sbb
and
negb
mov
sbb
xchg
dec
repnz
je
mov
shlb
adc
fistps
xor
and
les
xlat
outsl
pop
sbb
ljmp
aam
ret
push
test
xor
fldl
sbb
sti
pop
repz
and
test
sub
in
out
xor
xchg
scas
cmp
sbb
mov
imul
in
push
add
lret
in
add
adc
sbb
xor
or
cmp
adc
ds
cmp
push
ss
lock
and
orb
mov
adc
jg
jo
cmpsb
inc
xchg
repnz
xlat
xor
fldl2t
jecxz
out
mov
stc
push
lahf
add
cmp
mov
jp
sbb
mov
dec
adc
in
adc
ret
in
fadds
add
in
adc
sub
pop
adc
lcall
add
lods
adc
inc
pmuludq
adc
into
or
and
xor
push
dec
adc
add
xor
mov
aad
cmc
out
ljmp
addl
shll
mov
mov
push
push
stc
pop
testl
ret
movsb
jo
push
add
in
stc
pop
and
sub
push
sub
shll
adc
inc
mov
add
popf
mov
adc
sub
xor
adc
adc
js
pusha
pushf
bound
repz
push
or
xorb
pop
mov
pop
push
test
int
or
adc
push
pop
xor
pusha
lods
and
lock
xor
pushf
lret
adc
pop
xor
mov
sub
jl
push
mov
dec
inc
sub
ret
sti
or
popl
enter
outsl
and
sub
mov
push
es
jecxz
dec
jmp
lcall
sub
rol
or
lods
sbb
vcvttps2dq
aad
out
jnp
icebp
cmp
stos
sbb
xchg
cmp
push
ret
push
test
movsl
testl
cmpsb
addr16
nop
lock
iret
or
jae
jnp
ret
ret
mov
pop
movsb
mov
in
mov
loop
push
cmpsb
aad
in
ffree
leave
cmp
in
pop
mov
cmp
and
or
repz
mov
or
rcrl
xor
lds
jp
adc
out
mov
pop
adc
in
in
dec
nop
adcb
sub
arpl
sarb
ds
mov
loop
shlb
xor
lods
fnsave
sub
push
xchg
or
add
or
dec
popa
adc
adc
in
in
adc
adc
dec
mov
adc
pop
inc
out
enter
add
mov
dec
sbb
sub
movsl
mov
mov
mov
xlat
mov
fcoms
xor
lret
ljmp
jmp
repz
adc
in
bswap
xor
outsb
xchg
out
pusha
add
mov
js
cmc
xor
cmpsb
adc
mov
cmc
sbb
mov
mov
fcomip
int3
scas
fnsave
popf
pop
popa
xor
adc
shrb
fcomps
sbb
icebp
mov
negb
arpl
mov
lock
scas
or
test
cmp
sub
jo
mov
mov
lret
stos
movsb
mov
bnd
hlt
and
xor
jno
out
mov
imul
movsb
shll
dec
adc
int3
sbb
mov
lret
pop
shll
lahf
inc
push
out
sbb
or
xchg
and
push
iret
jecxz
mov
incb
cmp
call
int
insb
and
in
subb
push
repnz
lret
dec
call
inc
jp
xchg
mov
dec
sbb
in
sti
ret
mov
jmp
mov
push
mov
or
xchg
jae
ret
cli
adc
loop
lock
dec
push
cmp
xchg
xchg
dec
or
outsl
pop
add
xor
lret
add
sbb
popf
mov
repz
out
je
mov
inc
add
dec
jmp
mov
icebp
add
mov
daa
cmp
sbb
adc
shl
mov
or
lahf
sbb
cmp
lcall
arpl
xlat
sbb
aas
fdivs
sbbb
in
popa
daa
popa
cs
mov
flds
push
add
fs
sbb
clc
fsubr
mov
out
ret
out
sbb
sti
pop
clc
xor
xchg
push
call
add
gs
sub
test
add
or
push
cld
xchg
fists
test
ja
fsubrs
pop
or
in
add
inc
sub
fiaddl
adc
mov
xchg
mov
and
inc
out
mov
outsb
push
int3
fs
push
or
add
push
or
movaps
ffree
dec
stc
int3
lods
sbb
fadds
ret
pop
and
lret
pop
inc
insb
imul
mov
sbb
cwtl
loope
daa
fcompl
lds
loope
arpl
xor
fstpl
push
ret
aad
sub
out
adc
sub
aad
movsl
pop
into
mov
push
mov
pusha
sbb
sahf
fs
pushf
ss
std
stos
jg
push
cmc
ret
fnsave
cld
out
jl
or
add
push
jg
gs
or
fucomi
sub
dec
xchg
scas
inc
sarl
push
mov
popa
daa
faddl
lock
sub
rcrb
push
sti
loopne
add
ljmp
inc
add
inc
aad
in
push
adc
fst
or
aam
stos
rorl
nop
jge
cmpsl
mov
pushf
es
pusha
into
rclb
rorl
inc
cli
dec
lahf
pop
sub
out
and
ss
sub
cmp
call
inc
sbb
les
in
adc
out
mov
daa
scas
xorl
adc
push
ret
xchg
xor
insb
dec
enter
xor
sbb
addl
mov
ret
mov
or
mov
test
fsubp
lahf
enter
mov
inc
daa
adc
and
push
adc
sbb
and
mov
mov
stos
jb
or
mov
mov
arpl
add
sbb
sbb
xchg
aad
fcmovne
loop
in
je
test
outsl
jmp
push
loop
add
dec
aad
xor
jb
stos
es
add
lods
sahf
rcrb
push
int
fistps
jle
mov
loopne
pop
out
hlt
xchg
enter
ss
into
cld
cmc
lea
imul
in
xchg
xchg
mov
jb
push
rolb
insl
out
xchg
dec
or
or
lahf
mov
frstor
int3
adc
mov
dec
ljmp
xor
cmp
adc
mov
sub
in
fisttpll
mov
in
xchg
int
shl
repz
ret
sbb
and
inc
das
adc
pop
icebp
fistpll
jge
ficoml
jmp
or
push
inc
cmp
enter
add
pop
jae
adc
pop
push
cli
outsb
sahf
jecxz
in
pop
testb
loope
jmp
js
or
and
hlt
add
repz
daa
mov
popa
leave
and
sub
out
shr
mov
int3
loopne
aam
enter
xor
sti
dec
lret
stos
add
fsts
sti
movsb
jg
fisttpll
xor
mov
xor
jp
je
dec
sub
mov
push
mov
sarl
lods
inc
in
xchg
cmpb
outsl
jp
dec
les
leave
repz
add
lret
pusha
add
je
cwtl
pushf
jnp
popa
mov
mov
mov
bound
loopne
and
or
mov
lods
dec
mov
xchg
iret
out
adc
jecxz
jmp
inc
mov
adc
add
stos
out
mov
rclb
scas
daa
xchg
mov
test
out
unpckhps
lahf
loopne
mov
pusha
call
inc
leave
ret
imul
push
in
les
in
loopne
xlat
les
call
adc
data16
and
sbb
push
adcl
ret
insb
inc
add
les
xor
add
int3
mov
enter
incl
and
lods
in
call
fxch
nop
adc
mov
cmpb
mov
mov
or
aas
in
and
or
cmp
push
or
push
push
lahf
xor
out
adc
or
inc
sbb
mov
mov
int
fcoml
mov
xchg
cld
clc
out
xor
mov
je
leave
adc
push
int
inc
je
push
or
in
ds
cmp
mov
outsl
insb
xor
adc
divl
rolb
in
loop
sbb
or
fs
jl
push
sub
int3
sbb
rcll
sub
das
dec
fdivl
inc
std
add
mov
pop
les
lock
outsl
jmp
push
sub
nop
sbb
scas
add
js
mov
inc
adc
adc
out
jnp
xchg
pop
cmovb
push
adc
mov
addb
test
sahf
sarl
sar
jmp
sbb
push
out
inc
sub
loopne
lock
mov
add
mov
xchg
push
ljmp
add
add
hlt
cmp
push
pop
add
lock
xlat
addb
pusha
out
clc
adc
or
int
pop
in
leave
ret
push
sbb
das
dec
enter
scas
xchg
or
cmc
xor
call
pop
sbb
sub
lret
or
lahf
sbb
pushf
nop
into
push
bound
adc
popf
inc
xchg
mov
or
sub
push
dec
xchg
sbb
xchg
xorl
sbb
xor
jns
cmp
mov
jae
sbb
or
repnz
aad
dec
test
jnp
mov
fisubrs
xchg
pop
xor
int3
repnz
xchg
or
int
push
sarb
jns
adc
lods
fs
cld
or
sub
adc
fdivs
dec
mov
bound
loopne
xchg
add
push
in
test
add
cmp
cmp
or
repz
sub
jne
icebp
cmpsl
cli
pop
xor
jnp
sahf
hlt
pushl
jno
nop
bound
rclb
push
mov
push
push
test
xchg
out
ds
test
sbb
add
int3
mov
fldt
and
lret
movsb
aas
mov
in
shl
bound
test
repz
ja
adc
add
or
add
xor
xchg
mov
iret
stos
cmp
sbb
int3
push
adc
mov
cmp
repnz
mov
repz
faddp
fwait
stc
dec
ret
push
push
cmc
sbb
icebp
sbb
rorb
xor
adc
icebp
sbb
shl
adc
push
mov
jmp
stos
xor
fimuls
mov
ret
testb
out
shlb
in
and
mov
cli
testb
sbb
int
and
repnz
fistl
push
jl
ss
push
loope
mov
sbb
mov
stc
mov
sub
flds
or
outsl
xor
and
push
dec
mov
mov
push
scas
mov
test
adc
add
sbb
scas
lods
or
rol
dec
push
and
adc
adc
es
and
shrb
mov
jg
add
iret
mov
xor
int
rcrl
cmp
mov
pop
imul
pminsw
cmpsb
out
fdivs
or
sub
rep
mov
cs
or
stos
movsb
rorl
add
ja,pt
inc
fiaddl
add
sbb
loopne
cld
sub
jns
js
aaa
xlat
in
lock
pop
cltd
pop
sti
or
lds
or
cmp
test
push
xchg
fdivrs
lret
inc
fwait
add
int3
or
cmpsl
sub
nop
lock
pop
mov
test
pop
stc
mov
mov
xchg
add
aam
fistl
jmp
mov
ja
adc
ret
loopne
mov
popf
leave
and
in
ret
pop
mov
cmpsl
in
lret
mov
call
aas
nop
fs
ja
cli
or
out
in
xorb
push
shl
es
adcb
into
cld
rolb
std
mov
sbb
jecxz
sbb
xchg
clc
add
and
mov
ss
iret
clc
nop
outsl
push
out
jg
insl
lds
jae
ss
lret
mov
in
mov
shrb
cld
push
int
shl
lock
adc
add
movsb
mov
loop
cmp
or
mov
clc
lock
and
jb
pop
jb
add
xor
sbb
jl
inc
das
outsl
cmp
push
in
mov
add
adc
push
pusha
rorl
sub
jb
jecxz
or
mov
jp
adc
cmpb
mov
into
push
xchg
xor
cmp
xor
das
rcrl
xor
jnp
xchg
loope
sub
lret
pop
rcrb
cmp
add
leave
out
cwtl
push
add
lods
in
hlt
adc
fadd
mov
adc
rorb
or
or
enter
push
arpl
cld
inc
sub
out
popf
xor
insl
mov
aam
fldenv
push
or
pop
dec
inc
xchg
movsb
sub
mov
jnp
mov
adc
lret
xor
cwtl
pop
loope
mov
hlt
or
movsb
push
mov
nop
push
push
jp
mov
push
jg
add
inc
mov
add
push
in
and
dec
jl
mov
dec
mov
mov
pop
and
mov
add
push
sbb
es
pop
adc
movsl
bndstx
sub
int3
inc
test
sbb
addr16
sbb
ss
jb
fwait
rol
mov
xchg
jae
dec
and
fnstcw
pop
mov
insb
roll
pushf
lds
stos
nop
ss
jne
jle
testb
mov
insl
adc
cwtl
into
ret
xor
fucomi
mov
adc
push
jne
inc
loop
stos
lods
lods
stos
test
test
lret
int3
stc
sar
lods
adc
ret
push
inc
roll
and
and
cmp
inc
pop
cmp
add
in
rclb
xor
mov
mov
xlat
jbe
add
or
ret
jl
iret
or
or
cltd
in
adc
shll
push
in
icebp
cld
sub
and
lock
stos
faddl
das
repnz
adc
in
mov
dec
fmulp
push
mov
adc
stc
push
mov
jecxz
dec
fwait
add
rorb
call
or
popf
sbb
adc
pop
mov
rolb
pushf
jp
jmp
xchg
adc
jg
cli
sub
adc
fmuls
push
data16
jle
or
xor
xlat
int3
push
into
lcall
sub
xor
rolb
int3
fmull
cmc
xor
hlt
and
sub
push
inc
pushf
imul
imul
fcoms
sub
sti
mov
dec
jmp
mov
mov
xor
mov
sub
out
iret
push
in
int3
jns
and
decb
cmpsb
enter
iret
or
loope
pop
and
pop
imul
cli
jecxz
into
ror
adc
fsubrl
pop
imul
xchg
cvttps2pi
xor
sub
mov
lods
mov
ret
sbb
cmp
dec
mov
xchg
stos
dec
lahf
incl
lock
xchg
pop
adc
add
lods
aad
cmp
faddl
push
sub
ja
jae
std
or
add
mov
add
repnz
les
add
dec
sbb
fsubr
test
stc
stos
rcl
or
jne
sbb
movsl
add
ret
adcb
adc
stc
inc
mov
lret
ja
mov
push
xchg
ret
repz
lock
fidivrl
inc
imul
mov
in
sub
subb
or
imul
add
xor
add
mov
in
xchg
orb
xchg
cmp
push
test
test
fcomp
loop
faddl
clc
bnd
movsb
dec
fimull
jle
add
mov
clc
or
rclb
nop
mov
ljmp
jg
mov
aad
jge
sti
popf
jle
push
pop
ficoms
xor
rorb
mov
enter
int3
push
inc
xchg
push
outsb
and
ret
icebp
push
bnd
lods
mov
out
pop
sahf
pop
loopne
test
stc
push
sub
add
inc
adc
push
or
daa
and
mov
cmp
bnd
dec
out
adc
or
movl
sub
fdivp
cmp
mov
cmpxchg
repz
or
jge
pop
adc
test
clc
lahf
out
je
xor
mov
cmp
test
adc
dec
sub
stos
std
hlt
jecxz
add
stos
add
mov
in
mov
add
sub
notb
notb
mov
pop
shl
cmp
sbb
pusha
rcl
lock
push
and
adc
gs
into
rorb
push
jb
ret
loop
mov
xchg
fdivrs
rol
cmpsb
test
test
in
iret
rolb
sub
imul
mov
xchg
jno
sahf
cmpsl
into
cld
mov
sbb
out
scas
jmp
movsb
icebp
in
adc
aaa
fnstcw
push
jecxz
mov
int3
shlb
and
adcl
xchg
ret
test
leave
mov
ja
and
cltd
pop
or
mov
ret
xlat
in
fdivl
mov
sub
jno
jo
movsb
jo
xchg
test
fmuls
xchg
jge
sar
int3
sub
mov
mov
pusha
movsb
jl
fcmovnb
xchg
sub
aam
jne
dec
adc
and
and
add
or
jbe
fwait
mov
prefetch
mov
and
repnz
sbb
loopne
and
lret
bound
out
add
or
mov
jb
adc
sub
jb
dec
les
arpl
jle
mov
in
add
lods
out
gs
sahf
adc
and
dec
mov
fs
xlat
das
xchg
xor
mov
adc
xor
ljmp
loop
sti
hlt
ss
mov
bound
sarl
fsubrp
enter
add
xchg
xchg
fadds
pop
stc
mov
jmp
es
and
xchg
pop
pop
out
pusha
lods
or
add
add
mov
sbb
ds
lock
and
xchg
and
mov
sub
dec
mul
icebp
out
out
mov
or
sub
pop
icebp
push
cmp
dec
adc
dec
sbb
or
rorb
adc
jle
pop
or
or
test
push
enter
or
xor
loope
pop
mov
push
jbe
flds
add
sub
inc
push
popf
fsubrl
loopne
push
dec
jecxz
add
lret
sarb
lds
andl
sub
lret
cmovno
fnstcw
shr
fisubs
cmpsb
cld
mov
out
jmp
adc
int3
cmp
mov
hlt
add
mov
mov
enter
jbe
mov
cmp
xchg
or
and
adc
xor
sbb
xchg
adc
adc
or
dec
jns
jmp
sbb
sti
test
lahf
cmp
in
sub
mov
cmp
es
add
add
out
sbb
adc
adc
inc
xor
int3
xor
mov
lret
les
and
ja
cmpsl
cltd
pushf
and
dec
sub
or
cld
cmpb
shrb
mov
sbb
out
jg
scas
outsl
sbb
push
in
mov
inc
movsb
xor
or
mov
ret
or
xor
hlt
ret
pop
cwtl
mov
xchg
imul
push
adc
ljmp
dec
std
mov
xor
lods
adc
and
dec
int
mov
ds
movsb
add
imul
and
aaa
fldl
push
adc
stc
ss
dec
out
jmp
dec
adc
add
push
sbb
fdivl
dec
jmp
add
out
cmp
cld
subl
cs
out
adc
lret
jno
mov
out
addr16
xchg
jae
push
in
dec
and
lds
mov
loope
dec
loopne
lret
shrl
add
mov
jbe
stos
adc
iret
hlt
fcompl
lds
sub
push
call
ror
xor
add
sbb
xor
fsubr
scas
sbb
mov
add
ret
or
sub
out
cmp
test
in
jle
jl
scas
adc
mov
sub
ljmp
cmp
repnz
sbb
cmpl
add
mov
in
rolb
xor
scas
cmc
iret
mov
dec
jns
out
sub
cmp
mov
out
ret
xchg
sbb
xor
scas
stc
add
in
mov
bound
ljmp
jbe
adc
icebp
push
add
vmovlps
sbb
leave
std
int3
into
add
pop
push
jo
push
dec
lock
movsl
stos
ljmp
sub
shl
bnd
sub
cmc
iret
pop
cld
or
push
pushf
in
je
mov
ret
adc
addl
aam
add
je
and
xchg
loope
in
in
dec
sar
lea
mull
dec
pop
add
ds
out
cmp
inc
js
dec
or
mov
aas
fsubrl
push
es
mov
int3
lock
js
repnz
and
adc
movsl
in
or
shll
sbb
js
lds
fsubl
jne
bound
add
invd
shr
les
pop
lods
into
lret
pusha
jns
test
jl
mov
jecxz
dec
scas
ljmp
or
sbb
adc
cmp
ret
bound
repnz
out
call
mov
movsb
insb
daa
int
pop
jno
sbb
imul
adc
pop
sbb
cmp
mov
int3
loopne
in
xchg
fwait
pop
rclb
sti
sbb
cmp
mov
mov
cld
xchg
mov
cmpb
sti
or
adc
push
cmp
xor
leave
ret
adc
test
daa
rorb
in
xchg
add
orb
sub
cmp
pop
and
sbbl
or
or
sti
movsl
shlb
mov
dec
mov
adc
xchg
sbb
pop
push
inc
int
push
mov
ja
pusha
mov
jae
andl
and
out
fadds
pop
js
out
orl
orl
rolb
int3
sub
jb
jle
out
in
iret
or
popf
add
mov
add
lock
xor
les
pop
repnz
fadds
in
les
pop
sub
call
dec
pop
cmp
or
mov
inc
enter
lods
mov
int3
ret
sbb
les
mov
or
add
mov
gs
into
insb
sbb
loope
xor
sub
outsl
ja
adc
mov
xor
fstpl
add
rclb
scas
enter
adc
mov
pop
add
fistl
ret
add
mov
lods
ds
decl
jbe
out
cmp
jbe
inc
jbe
int
or
jecxz
push
repnz
adc
mov
int
or
dec
inc
das
cwtl
rolb
or
sub
in
int3
mov
subl
sub
loopne
push
leave
ja
ficoml
and
push
sub
dec
fimull
dec
cmp
or
inc
and
sahf
mov
rclb
pop
adc
dec
hlt
lock
popf
or
inc
and
inc
sbb
or
push
enter
lds
dec
sbb
adc
sbb
scas
out
in
push
test
loop
pop
cmp
movsb
jo
es
insb
rcrb
movsl
mov
inc
jmp
int
mov
sbb
adc
dec
lahf
lret
sub
jmp
testb
fnsave
scas
shl
push
aam
hlt
sub
xchg
dec
stc
idiv
jecxz
aad
or
jg
cmp
imul
fwait
jmp
icebp
xchg
out
ja
cmp
xlat
jmp
loope
arpl
xor
mov
or
icebp
fimuls
mov
js
test
pop
lods
push
add
adc
in
repz
out
add
pop
loop
or
hlt
pop
add
les
insl
jle
insl
jge
or
push
inc
pop
add
add
hlt
jb
add
and
fdivr
xor
lahf
out
lahf
jo
or
bound
hlt
sub
das
test
ret
or
mov
jns
adc
ret
repnz
fmuls
clc
jmp
push
out
sub
xchg
adc
test
inc
fwait
pop
aam
cmp
mov
into
adc
aam
enter
mov
ljmp
sub
mov
aam
fsubrs
jo
add
rclb
pop
ja
mov
dec
jmp
in
hlt
mov
ss
mov
or
fsubs
pop
jnp
push
movsb
xchg
sbb
les
jg
mov
nop
pop
mov
in
sub
jp
and
daa
enter
or
inc
and
insl
add
es
or
mov
sub
subl
mov
cwtl
insl
out
or
icebp
ret
ficoml
xchg
popf
mov
cmp
jnp
cmp
sarl
fcoml
testl
cmp
ret
in
int3
xchg
adc
cmp
cmpsb
daa
add
mov
lret
lret
mov
and
add
mov
adc
stos
adc
dec
sbb
push
dec
add
pop
out
add
pop
xor
aad
ret
fimuls
mov
ljmpw
in
fimull
mov
stos
out
jecxz
add
inc
iret
fiadds
daa
mov
notb
fwait
cvtdq2ps
out
call
xor
xchg
dec
mov
aas
ret
scas
lret
outsb
movsl
popf
mov
test
push
inc
or
mov
inc
dec
pusha
jo
add
leave
mov
into
jge
add
in
sbb
aam
sub
iret
mov
pop
enter
rorb
into
iret
sbb
shll
pushf
jg
sbbb
movsl
sarb
cli
fadd
push
hlt
xchg
rcll
iret
xor
into
mov
sub
ret
das
faddl
call
call
xor
mov
int3
js
and
in
sub
xchg
fwait
push
in
xlat
scas
or
dec
stos
adc
xor
push
mov
xchg
or
adc
out
out
test
scas
mov
outsl
hlt
out
cmpb
lods
repz
fucom
mov
cmpsl
jle
xchg
mov
fwait
addr16
or
ret
fstp
adc
loop
xor
adc
sbb
inc
jmp
mov
imul
inc
aad
or
pushf
adc
aam
or
cmp
xor
inc
cld
xchg
mov
lds
popf
enter
xchg
mov
xor
mov
fstl
or
lahf
mov
fisubs
adc
or
rcrl
aas
mov
or
mov
jno
lds
insb
adc
fisubrs
lahf
or
test
fwait
jns
xchg
cwtl
dec
stc
inc
jae
xor
insb
stos
mov
mov
orl
insb
mov
les
sahf
mov
ss
sbb
mov
dec
int3
vucomiss
adc
adc
fistpl
or
int3
mov
xchg
dec
loopne
enter
movsb
ret
xchg
cmpsl
sub
pop
jecxz
lea
sarb
andb
lea
push
arpl
aaa
movsl
out
or
insb
mov
sub
cmp
inc
inc
sbb
pusha
nop
je
int
cmp
xlat
jge
push
xchg
mov
sub
sub
jp
push
or
repnz
mov
xchg
mov
sbb
lock
int3
call
or
sub
sbbl
rolb
fucom
xlat
clc
inc
jecxz
cmp
push
pop
loope
jg
mov
jg
faddl
jg
sbb
fldl
insl
inc
adc
addr16
add
xor
xor
jg
sarb
ljmp
adc
imul
xchg
push
lahf
pop
imul
repnz
cmpsl
adc
adc
sti
fimuls
or
les
adcl
jge
in
icebp
push
add
in
sub
sub
scas
push
decb
dec
mov
mov
test
xor
lcall
push
jecxz
sub
pop
std
dec
loopne
adc
loopne
aaa
dec
xchg
adc
dec
test
or
or
popf
in
fidivs
jge
and
inc
xor
adc
pop
cs
rorb
ret
sbb
rcll
test
sbb
notl
xchg
add
xor
xchg
js
mov
xlat
iret
mov
test
adc
int
and
sbb
adc
sub
inc
cmp
pop
mov
sbb
ds
sbb
dec
popa
push
lret
dec
pop
lods
xchg
insl
inc
add
or
push
fnstsw
int3
out
orb
pushf
fstpl
add
ss
ds
mov
inc
loope
test
fcoms
out
sub
or
aad
cmp
add
outsl
rorl
mov
mov
sti
repnz
mov
sahf
mov
sarb
or
lods
lds
cmp
in
xlat
fildll
je
sbb
sub
mov
std
dec
out
and
rorb
jmp
xor
cmp
or
rorl
adc
scas
add
mov
aas
jo
jmp
inc
and
aam
and
push
shrb
and
add
aad
mov
inc
inc
jne
sahf
mov
mov
subb
inc
pushf
xlat
cld
fmuls
jge
xor
repnz
shlb
ljmp
fildll
jb
aad
hlt
adc
mov
jbe
mov
sbb
test
xchg
test
sub
pop
insl
push
mov
and
pop
call
cmp
mov
ret
sub
les
mov
loopne
shlb
fcmovb
and
adc
lds
lret
mov
sbb
or
enter
imul
push
xchg
sti
jbe
add
adc
fsubrl
add
sarb
jmp
push
push
cld
stos
movlps
adc
dec
push
sub
jo
fiadds
xchg
cwtl
leave
adc
movsl
jae
int3
adc
add
je
or
ja
sbb
pop
mov
xor
cmp
add
inc
or
out
pop
shl
xlat
repnz
scas
cmp
or
sub
push
mov
mov
sbb
or
adc
sub
jmp
in
sbb
sub
add
nop
lock
es
je
int3
adc
aas
loop
mov
push
rorb
add
xchg
push
lret
adc
aas
add
shlb
movsb
sub
mov
pop
loopne
lret
pop
sbbb
ror
pusha
cs
lret
iret
rorb
jae
fmul
jns
or
shll
cmp
mov
push
enter
sbb
out
stos
or
or
js
mov
lods
out
xchg
mov
sub
jae
add
adc
mov
lahf
call
lret
pop
pushf
sub
and
icebp
test
adc
adc
rcrb
lods
scas
and
les
add
xor
xchg
push
dec
repnz
sub
or
sbb
inc
aam
mov
arpl
dec
sbb
rorb
fnstsw
into
mov
mov
jns
dec
loope
dec
ljmp
aam
inc
pop
push
xchg
push
cmp
xor
sarl
cmc
test
dec
inc
fcmovnbe
mov
mov
rcrb
push
mov
inc
dec
or
and
enter
add
pop
cmpsl
cmp
inc
mov
movsb
addl
sbb
pop
xchg
je
test
cwtl
mov
xchg
cmp
mov
xchg
dec
mov
xchg
adc
pop
andl
call
pop
lahf
das
jb
xchg
sub
mov
jno
xor
divl
sbb
les
push
jge
adc
pop
test
shll
add
push
mov
rcrb
xor
jge
ret
jo
je
icebp
jl
test
push
sti
mov
inc
mov
inc
test
shrb
xchg
movsb
dec
xor
shlb
dec
insb
and
inc
arpl
clc
repnz
into
hlt
jecxz
and
adc
xchg
sub
das
ficomps
in
loope
xor
mov
pop
arpl
ficoms
pop
pop
into
push
mov
xchg
xchg
xchg
movsl
mov
inc
mov
push
mov
or
fstpt
or
adc
les
adc
cmc
out
and
add
fxch
addr16
mov
repz
adc
sub
cmp
xor
or
loopne
jnp
divl
fadds
adc
or
pop
inc
daa
mov
dec
int
loope
in
xchg
popf
scas
mov
xchg
mov
mov
jl
shlb
or
leave
nop
xor
cld
jl
shlb
cwtl
mov
jl
bound
ret
xor
rcll
dec
shlb
adc
or
rorl
ret
push
or
add
and
stos
inc
ret
leave
mov
outsb
add
inc
inc
jbe
sub
lods
mov
xor
sub
xor
or
jne
lock
les
adc
or
and
cwtl
fwait
add
jg
gs
mov
mov
pop
fstpt
or
out
shll
inc
mov
lods
pushf
rclb
mov
mov
mov
cmc
loopne
cmp
sub
sbb
out
add
les
cmp
stc
or
lods
rol
insb
fcomip
ficoms
out
sbb
shl
fmull
leave
push
fwait
mov
mov
lock
or
sahf
mov
cmp
repnz
pop
mov
sbb
add
dec
xor
stc
and
decl
push
and
xchg
mov
cmp
sti
inc
jbe
lods
jo
jp
imul
cmp
xchg
push
divl
out
pop
rorb
mov
pop
inc
shll
push
sbb
adc
in
xchg
lret
imul
icebp
inc
stc
dec
out
mov
dec
movsl
dec
or
adc
dec
lcall
or
repnz
shrl
scas
sbb
xchg
outsl
test
mov
sub
add
xchg
inc
jno
lock
fistl
sbb
ds
lcall
jno
mov
sub
vcvtps2dq
cmp
les
mov
push
cmc
cmp
push
ret
mov
mov
scas
in
js
pop
lahf
stos
mov
fstpt
call
cmp
sbb
push
xchg
or
adc
mov
pop
xor
xchg
iret
into
sub
repnz
xchg
cmpl
sbb
mov
out
in
fldenv
and
int3
stc
out
sbb
adc
out
xchg
aam
or
mov
xadd
push
dec
mov
lds
dec
mov
test
add
xchg
sbb
cmp
jb
mov
sbb
mov
xchg
std
push
mov
xchg
ss
and
push
arpl
sbb
add
xchg
jno
dec
mov
test
mov
add
xchg
sub
xchg
jbe
cs
jl
int
xchg
sub
push
popa
mov
xchg
dec
pop
fdivs
lret
adc
xor
fcom
push
enter
inc
cmc
ljmp
push
add
mov
push
mov
jecxz
sbb
pop
cmp
sbb
dec
jp
addr16
rol
jno
add
sbb
adc
lock
sub
adc
xchg
add
push
fsubp
or
loopne
sar
int3
ds
mov
rcl
or
adc
add
out
mov
aam
mov
lods
mov
mov
add
or
mov
xor
add
sbb
adc
xchg
add
mov
in
add
adc
add
mov
push
jg
div
pusha
in
jno
adc
js
je
add
dec
add
push
out
xchg
test
xchg
in
sar
scas
popf
mov
mov
out
int3
popa
cli
insb
rol
lret
jp
ljmp
std
adc
aad
push
add
shr
jo
shl
sarl
lock
xor
dec
sub
cltd
xor
xchg
sub
fwait
add
ljmp
leave
xchg
scas
adc
aad
aad
and
cli
out
cs
mov
lcall
cmp
dec
mov
std
cmpsl
mov
jne
pop
setl
fnstsw
in
fdivrp
adc
xchg
cs
add
mov
push
popf
push
mov
ret
outsl
inc
pop
test
imul
cld
pop
loopne
fnstsw
cli
rcll
lods
lret
out
ja
repz
dec
mov
clc
xor
pop
mov
sbb
mov
nop
sub
pop
arpl
aad
adc
dec
mov
push
pusha
adc
adc
push
jmp
sbb
popa
hlt
inc
adc
mov
lahf
mov
cltd
sbb
out
add
adc
fs
cmp
mov
sbb
jb
out
fdivrs
hlt
fmulp
pop
ljmp
cmp
nop
add
movsb
mov
mov
fidivs
push
sbb
or
pop
nop
movsl
dec
sbb
mov
subl
in
adc
cs
xchg
xchg
jmp
add
lds
push
sub
orl
xchg
out
arpl
sub
cmp
das
add
add
outsl
cmp
test
inc
nop
lock
sbb
test
inc
and
lcall
jo
nop
cmp
int
icebp
cltd
pop
lods
add
imul
fisubs
divps
mov
jg
cmpsl
loopne
and
dec
pop
nop
fldcw
pop
cld
cltd
mov
cltd
clc
xchg
pop
jg
rorl
sub
dec
adc
repz
shr
push
in
add
mov
inc
dec
pop
ljmp
icebp
lock
mov
ret
popf
mov
push
mov
andb
cmpsl
add
mov
rcrb
mov
adc
sub
dec
pop
xor
test
inc
sub
sti
and
clc
mov
mov
jecxz
test
lret
xchg
sbb
lret
cmp
gs
dec
adc
push
pop
sub
cmp
shl
xchg
mov
cmp
outsb
aad
fxch
hlt
jmp
xor
sbb
rolb
orl
mov
fnsave
imul
mov
mov
js
sbb
test
int
or
push
cmp
orl
inc
push
stos
aas
fwait
xor
adc
add
lods
repz
xor
xor
das
sub
add
jmp
shr
cmpsb
repnz
jo
test
stos
outsb
out
lret
push
pop
fdivl
mov
adc
adc
xchg
jae
cmpsb
fistpl
inc
repnz
jg
or
std
sub
add
lret
or
or
xor
and
or
adc
jae
mov
sub
dec
fcmovb
les
cmpl
xor
stos
test
cmp
rorb
push
add
mov
mov
add
adc
outsb
stc
int
lahf
jne
lea
stos
lret
shlb
mov
ljmp
sub
push
pop
push
nop
mov
lods
movsb
jnp
out
out
or
jbe
in
adc
pop
adc
jmp
sub
arpl
or
mov
movsb
adc
fwait
shr
push
jns
std
shll
mov
push
int3
xor
sub
ja
cli
jle
adc
sub
ds
out
js
mov
aad
scas
push
jmp
ret
xor
ljmp
call
loope
loopne
add
xchg
in
out
pop
mov
hlt
subl
mov
cltd
cmpsb
shlb
adc
popa
or
clc
int3
sahf
outsl
cmp
fdiv
out
mov
fs
lahf
jmp
pop
push
dec
jecxz
out
enter
mov
cmc
or
lret
dec
andl
repnz
dec
mov
repnz
adc
adc
shrd
and
les
push
xchg
aas
xchg
adc
mov
jmp
mov
sti
int3
stos
nop
fsubp
dec
add
out
ss
inc
push
push
enter
jge
dec
leave
sbb
test
cmp
jne
mov
nop
aam
mov
divb
out
jo
xor
btc
dec
cmp
scas
adc
sub
out
cs
cwtl
dec
ds
cmp
push
mov
xchg
clc
dec
out
js
add
dec
cmp
pop
cld
push
in
ljmp
adc
or
jb
adc
mov
les
leave
int
or
push
dec
sbb
lret
mov
leave
fcomps
dec
sub
test
lods
xchg
mov
hlt
adc
jo
adc
sarb
pusha
fistpl
or
or
into
int3
insb
or
mov
mov
mov
inc
xlat
bound
cltd
iret
and
aam
loopne
pop
cltd
sub
insl
inc
test
adc
icebp
jae
divb
repz
sbb
sub
fildll
inc
lods
sahf
adc
sub
icebp
adcl
out
sarb
lahf
cs
mov
in
jp
in
repz
pop
or
daa
mov
test
add
sub
mov
or
ljmp
iret
and
pop
mov
cmpsl
push
push
and
in
push
add
push
push
add
jne
std
jno
ret
push
testl
jmp
push
or
sbb
add
pushf
mov
jns
popf
icebp
jne
mov
jecxz
outsb
shll
adc
fs
jl
push
add
adc
or
push
add
inc
test
rcrb
pop
sbb
shrb
and
push
sarb
cmp
jno
jno
xchg
push
lea
or
repnz
jno
adc
add
scas
sbb
cmp
call
adc
outsl
add
lock
rcrb
loop
loopne
cld
or
sub
add
repnz
sbb
or
adc
in
xor
faddl
adc
add
mov
ret
adc
test
mov
ret
icebp
sahf
add
mov
cs
in
push
mov
repnz
or
mov
ret
ljmp
add
insb
int3
sbb
fs
add
sbb
adc
add
inc
iret
push
sbb
icebp
inc
rcrb
add
sbb
or
icebp
and
or
jmp
inc
mov
or
add
rcrb
adc
bnd
addl
cld
add
shlb
enter
adc
add
xchg
xor
mov
lods
add
sbb
adc
add
mov
notl
mov
stos
in
jmp
cmp
cld
aaa
nop
enter
pop
push
fsubr
out
repz
mov
arpl
decl
shl
push
ljmp
repnz
repnz
scas
out
adc
imull
insb
out
out
adc
mov
out
mov
gs
adc
mov
cmp
mov
stos
and
cmp
xchg
xchg
ret
movl
test
movsb
test
push
in
lods
pop
dec
pop
mov
shrl
jae
ljmp
xchg
adc
out
cmpsl
aad
or
jg
xchg
les
mov
stc
mov
loope
sbb
into
hlt
cmp
fsubrl
push
fldenv
lret
push
xor
orl
mov
adcl
iret
es
or
or
add
stos
sbb
repz
std
fstpl
cltd
pop
movsl
add
sbb
jp
test
push
psllq
pop
add
adc
clc
push
xchg
in
jnp
shll
dec
cltd
sbb
mov
jae
mov
ja
pop
mov
sbb
mov
adc
aam
adc
imul
dec
loop
cmp
push
mov
sbb
sub
orb
add
stos
push
xor
lods
adc
mov
repnz
sbb
sbb
repnz
loope
call
faddl
fnstsw
mov
push
clc
or
fmull
jb
in
lock
test
add
mov
sahf
cwtl
adc
mov
or
lret
push
push
pop
dec
adc
pop
imul
addr16
mov
jmp
shl
jo
or
rolb
mov
aaa
lods
in
in
nop
call
shlb
xor
stos
mov
jbe
pop
and
in
jae
mov
shrb
push
sbb
cmp
add
xlat
push
fldenv
enter
mov
mov
push
pop
jmp
fldl
mov
out
mov
fiadds
adc
mov
hlt
ret
lods
mov
mov
je,pt
arpl
popa
mov
or
mov
popa
sub
dec
pop
jmp
inc
mov
adc
addl
fisubrl
add
hlt
add
cmp
add
jp
and
push
sbb
das
in
mov
cld
add
cs
cmp
adc
in
out
or
sti
test
or
mov
cmp
add
int3
xchg
fmul
test
adc
aas
arpl
sbb
mov
or
inc
adc
lahf
iret
lods
xchg
jecxz
mov
addb
adc
pop
inc
jge
cmovg
popf
lcall
in
loope
mov
sub
push
push
xchg
lcall
push
sub
popw
mov
stos
jp
outsb
stos
outsl
out
inc
out
push
out
mov
sub
or
add
add
data16
stos
ret
les
js
ljmp
insb
or
push
adc
add
cmp
sarl
fs
mov
adc
stc
add
das
aam
fnstenv
mov
fs
ss
hlt
les
mov
or
inc
lea
into
fs
rcr
test
push
enter
jecxz
sarl
adc
repnz
pop
int
or
jno
inc
rorb
mov
jecxz
push
fcmovnbe
popa
mov
mov
cltd
dec
mov
cmp
or
push
sub
xor
repnz
lods
add
aas
add
adc
orl
pop
ret
leave
mov
movsl
mov
xor
ret
or
sub
ss
js
xchg
pop
fsub
test
fildl
stc
mov
sub
lea
in
add
cld
jns
sub
mov
sub
inc
and
idivl
mov
mov
popf
iret
pop
in
je
xchg
out
add
mov
sub
xor
lock
in
insl
pop
xor
rclb
mov
mov
dec
xlat
cmpsl
xor
sbbb
mov
pop
fstpl
and
cltd
fcomps
add
les
cmp
leave
pop
int3
test
jl
sbb
fwait
aad
lret
lret
mov
leave
loope
mov
pop
pop
les
dec
push
mov
ja
adc
adc
xchg
popa
loop
mov
pop
inc
adc
mov
xor
sub
lahf
xchg
outsl
arpl
mov
or
add
pop
fwait
cli
xchg
xorb
fdivp
out
enter
sub
xchg
ja
movzwl
in
adc
mov
xorl
pusha
cmp
dec
or
mov
adc
push
stos
or
stc
call
ret
mov
pmovmskb
mov
fildll
cvttps2pi
jle
inc
ret
test
stos
pop
xor
push
inc
pop
fldt
mov
fiaddl
add
roll
hlt
rcrb
pop
jecxz
push
adc
add
pop
rolb
xchg
mul
shll
mov
fisttpl
mov
sbb
jno
out
mov
add
lahf
sbb
sbb
xor
fstpl
lcall
addr16
xchg
dec
or
aam
ret
shl
sub
push
jo
push
mov
clc
test
neg
lret
das
mov
or
andl
xor
cli
add
dec
cmpsb
adc
rclb
adc
rol
out
popa
xchg
shlb
push
and
push
dec
pop
lret
jno
lahf
sbb
loopne
jnp
test
pop
testl
in
inc
jg
fsubrs
mov
mov
stos
int3
out
mov
test
push
leave
add
int3
repnz
lods
xor
stos
and
mov
or
or
shll
in
mov
lods
inc
data16
into
dec
repnz
mov
add
movb
sub
xlat
inc
movsb
mov
jo
in
xchg
xor
lods
mov
imul
aam
int
andb
cmp
adc
push
popa
lea
lahf
lcall
xor
dec
jns
push
add
push
int3
outsb
test
mov
jl
outsb
push
cmp
and
adc
and
pusha
add
xchg
push
aad
je
adc
das
jns
sbb
add
dec
dec
push
fwait
cmp
rolb
xor
push
cli
daa
or
adc
ret
test
jne
scas
in
or
mov
sbb
ss
dec
repz
mov
sbb
inc
fisubs
test
mov
add
xchg
sub
jg
adc
mov
cmp
add
test
ret
mov
in
mov
cltd
in
fcoml
stc
and
mov
xchg
jg
mov
adc
mov
push
inc
shll
mov
bound
pop
int3
in
or
mov
pop
add
dec
mov
adc
lret
add
or
sbb
or
ss
std
mov
or
sti
test
dec
mov
pop
xchg
clc
les
push
lahf
or
movsb
add
fcompl
out
dec
nop
addb
cmp
fsubrl
fisubrs
fs
add
jg
daa
adc
push
mov
ror
sbb
xchg
or
addl
rcr
test
mov
stc
call
dec
add
or
rorl
lock
adc
sarl
lea
push
iret
fnstsw
adc
sub
ljmp
stos
add
std
lods
cmp
fstpt
insb
loop
test
mov
mov
stc
or
add
js
adc
jmp
pop
push
cmpb
lods
inc
or
sub
stos
mov
iret
repnz
in
cmpsl
or
hlt
fst
jp
jae
mov
or
xchg
nop
js
outsl
adc
mov
aas
and
stos
fcoms
push
movsb
push
jmp
cld
int3
inc
lret
push
lret
cli
roll
inc
mov
fs
in
rcrb
clc
or
pop
or
jp
jo
inc
lret
stos
insb
jmp
jle
call
std
lods
hlt
pushl
adc
jnp
mov
or
and
ljmp
lret
push
mov
pop
bound
rolb
fwait
sub
testb
push
ljmp
and
mov
pop
ret
test
xor
sbb
lret
mov
xchg
push
scas
ret
shr
sbb
and
mov
or
stc
xchg
loop
aad
rorb
addl
jno
icebp
or
ret
incb
xchg
mov
ret
mov
mov
or
cmpb
mov
mov
pop
daa
mov
or
rolb
shll
sub
sbb
pushf
xor
test
sub
sub
fs
shl
mov
stos
iret
push
mov
lds
aaa
sbb
add
mov
or
jae
adc
cld
pop
pop
bound
dec
out
mov
fcmovne
jp
xchg
fcomps
mov
xor
ret
xchg
dec
in
adc
add
jns
into
sub
iret
mov
dec
out
out
inc
fwait
or
dec
stc
div
sub
test
rorb
push
mov
sub
mov
sub
decb
jae
add
or
adc
mov
add
mov
jl
mov
into
add
xchg
push
xor
sub
mov
xor
xor
seto
or
dec
pop
xchg
jle
add
cmpsb
insb
add
in
xchg
add
mov
mov
add
push
push
psubsw
fimuls
inc
fs
fdivrp
or
mov
sub
push
xlat
push
mov
add
lret
add
sbb
push
and
push
adc
xchg
jp
aam
ds
pop
lods
lret
test
push
test
adc
mov
aaa
mov
push
cmp
repnz
imul
sti
push
add
pushf
adcb
cmp
aad
pop
aaa
ror
aad
pop
dec
frstor
out
xor
sub
mov
push
jl
dec
mov
repz
xor
inc
faddl
push
adc
add
aad
xor
shll
je
stc
inc
or
push
nop
cltd
out
popf
mov
mov
mov
push
pusha
int
das
sbb
insb
xor
jae
mov
clc
ljmp
dec
or
push
std
inc
lods
push
test
adc
add
out
mov
push
or
sbb
jae
or
mov
fidivs
loop
les
mov
iret
daa
das
int3
loop
lret
adc
ja
pop
ret
inc
cs
test
add
xchg
xchg
sub
ffreep
stos
push
and
jp
fiadds
xchg
nop
enter
fnstsw
out
shll
or
push
push
adc
lds
fdivp
lcall
or
cs
jno
adc
ret
sub
adc
sub
adc
sbbl
xor
icebp
cmpl
and
pop
add
enter
jp
adc
mov
jo
dec
lds
lock
fsubr
pop
out
das
or
int
adc
add
push
sub
mov
out
cmp
add
ss
movsb
and
mov
shrl
mov
ds
punpckhdq
mov
mov
jg
ja
ds
mov
sub
pop
xchg
push
icebp
dec
or
push
pop
push
lods
xchg
in
or
mov
adc
mov
mov
jg
popl
push
test
jb
sahf
rclb
add
sbb
iret
mov
hlt
lret
xchg
loop
xor
mov
and
inc
fs
lret
fdivrs
into
out
stos
xor
jp
adc
jecxz
fldenv
not
inc
rol
fmul
lcall
arpl
dec
sub
in
sbb
mov
into
push
testl
scas
xchg
dec
pop
or
adc
add
push
ljmp
sub
leave
fldt
inc
clc
mov
add
push
mov
add
add
jg
repnz
data16
test
loopne
mov
xor
stos
adc
inc
sub
lret
loopne
call
clc
mov
sub
fxch
mov
cmp
jmp
or
mov
push
int3
mov
stc
mov
cld
xor
jae
mov
mov
dec
or
jl
lret
test
in
test
adc
subl
mov
in
push
xor
xor
pop
push
lods
out
shrb
rcr
in
popa
xor
ja
fcoml
inc
xlat
repz
push
mov
mov
rorl
out
sub
mov
filds
out
roll
rorb
test
loope
mov
inc
xchg
test
and
lret
or
and
mov
adc
sub
or
out
inc
jmp
jmp
and
psubd
and
xlat
or
xor
sbb
mov
mov
cmp
or
pop
jo
mov
add
cmpsl
gs
or
ret
xchg
push
adc
sub
xchg
mov
test
inc
dec
hlt
stos
stc
aaa
mov
pop
mov
xchg
lea
dec
add
mov
js
cmp
adc
repz
sti
add
into
movswl
or
repnz
add
push
push
movsl
rorl
push
adc
mov
fstpl
add
mov
pop
sub
rcr
push
enter
mov
jnp
pop
scas
es
movsb
mov
add
cmp
dec
sbb
mov
sbb
test
cmp
adc
lods
in
jae
mov
jb
xchg
add
movsl
scas
push
push
xor
sbb
mov
mov
sub
out
pop
notl
hlt
push
xor
mov
push
jg
push
call
sbb
sub
imul
inc
in
mov
lahf
iret
clc
mov
mulb
aam
je
jnp
mov
jl
xor
sub
icebp
sbb
fstpl
mov
mov
in
xchg
sbb
and
aaa
pop
aam
mov
out
sbb
xchg
inc
jg
jne
int
cmpsb
test
lods
stc
popa
lods
push
in
pop
push
das
dec
adc
into
cmp
mov
rclb
adc
mov
jl
cmc
stos
mov
adc
push
leave
mov
aas
daa
es
push
add
hlt
scas
xor
xor
mov
and
cli
jno
outsl
jb
jb
pop
mov
mov
sub
mov
mov
sub
out
leave
popf
insl
mov
test
cli
aaa
inc
es
in
or
pop
rorb
add
mov
push
in
lea
add
add
scas
ret
mov
xor
sub
fnsave
shrl
loop
test
dec
dec
mov
out
mov
mov
ja
lret
rol
aad
outsl
sub
and
cld
adc
insl
mov
add
dec
adc
cld
jne
sub
rorb
and
jno
add
and
ds
mov
ret
mov
lahf
dec
int
sub
and
sub
hlt
jmp
into
pop
pop
aad
mov
or
pop
adc
fistl
xor
xchg
xlat
jp
xor
loopne
bound
mov
jne
popa
adc
cmp
or
fwait
loopne
fbld
sahf
sbb
in
inc
sub
cmp
adc
and
dec
mov
push
je
leave
inc
into
and
xchg
loopne
lock
test
inc
jp
mov
stos
shl
dec
and
push
les
mov
hlt
test
test
cmpsl
jmp
stos
insl
pop
clc
dec
mov
dec
sub
shrb
sub
fsub
fwait
scas
in
enter
loopne
pop
negb
mov
stc
repnz
xor
or
retw
int3
mov
dec
sub
pop
adc
cmp
dec
adc
lahf
fisubs
sbb
in
rclb
dec
shlb
std
add
gs
xor
sub
repnz
into
jns
and
or
testl
iret
pop
mov
lret
divb
or
ss
iret
inc
lock
pop
xchg
xor
mov
push
mov
or
je
jnp
sbb
adc
shlb
or
mov
mov
insl
loop
repz
pop
add
into
mov
int
pop
ds
add
adc
mov
mov
movsb
adc
push
nop
xchg
lret
pop
lods
dec
movsb
test
adc
pop
jne
sbb
adc
jl
mov
aas
or
mov
mov
jae
cmp
xchg
test
or
aad
mov
fimuls
inc
or
and
jmp
out
test
icebp
mov
mov
imul
xchg
sahf
mov
std
sbb
jmp
and
xchg
adc
enter
xchg
pop
dec
scas
ret
xchg
ja
sbb
mov
adc
push
dec
adc
aad
loopne
rcrl
clc
fmuls
push
clc
nop
mov
leave
dec
pushf
push
cld
clc
push
xchg
xchg
pop
sub
ljmp
psubq
mov
or
xchg
or
add
push
icebp
cld
add
add
xchg
sahf
or
cwtl
add
xchg
xor
aam
xor
jmp
add
cmp
jns
lret
test
jmp
mov
or
mov
pushf
sbb
xchg
fwait
sbb
mov
sbb
lret
push
or
dec
adc
or
into
inc
cmp
push
xlat
mov
mov
jle
and
and
push
add
xor
sub
test
mov
lods
movsb
dec
sbbl
adc
test
push
jg
unpcklps
add
loop
outsl
clc
in
pop
inc
pop
aam
js
jmp
and
ljmp
push
in
pop
jp
lret
scas
les
push
in
xchg
dec
or
sub
dec
scas
popf
lock
push
jns
pusha
mov
mov
fidivs
cmpl
mov
je
cmp
outsl
adc
repz
pushf
inc
insl
lea
cmp
imul
inc
retw
into
divps
test
sbb
xor
dec
fs
fldl
adc
int3
mov
dec
out
es
add
into
adc
add
std
mov
repnz
sarb
or
fstpt
adc
push
mov
mov
loop
or
inc
in
xor
int
nop
int
test
mov
aam
faddl
out
sub
bound
or
mov
cld
ss
test
and
nop
rcrl
mov
mov
ficoml
out
adc
pushl
add
sbb
shlb
dec
xor
inc
or
xchg
add
xchg
cmp
add
dec
jb
pop
mov
or
push
sub
pop
call
add
into
adc
sbbl
nop
sti
or
in
int
icebp
or
mov
or
add
dec
push
xor
sti
nopl
bnd
sahf
fcoml
repnz
and
fimuls
cli
lahf
or
sub
xorl
shll
inc
dec
iret
lret
scas
xchg
jg
add
sub
fldl
sbb
adc
jecxz
inc
pop
xchg
adc
xchg
mov
push
cmp
xchg
fs
test
sub
pop
loopne
mov
cmp
add
pusha
push
nop
mov
sub
mov
dec
adc
nop
or
push
sbbb
add
sar
sub
fsts
mov
dec
and
push
sbb
xchg
in
dec
sub
in
lahf
inc
shrb
icebp
cmp
out
scas
xor
sbb
mov
orb
subl
aam
xor
loopne
add
mov
cmp
or
adc
sbb
pop
xor
outsb
add
push
mov
inc
popa
cmp
adc
xchg
adc
xor
mov
out
xchg
xor
nop
adc
mov
pop
call
cld
outsl
sub
xchg
xor
adc
jmp
and
iret
int3
or
popf
cmc
mov
xchg
dec
xchg
jg
pop
nop
adc
mov
cli
test
adc
cmp
stos
addr16
fnstsw
loopne
adc
stc
ret
push
in
sub
mov
lods
addr16
fadds
shrb
popf
iret
stos
push
outsb
or
loopne
mov
sbb
ret
push
lcall
jmp
inc
or
jp
lcall
pop
mov
adc
dec
sub
insb
ljmp
push
or
stos
jmp
jmp
sub
mov
shrl
movsl
imull
popa
lret
int
and
sbb
sub
ds
mov
mov
adc
add
leave
sub
out
mov
ret
dec
ror
push
xchg
sub
lret
mov
pop
int
sti
xchg
ret
icebp
jnp
in
or
stos
rcrb
out
fsub
jo
dec
rcll
out
das
rcl
push
hlt
cmp
jmp
adc
mov
test
add
scas
fcmovne
xor
cmp
adc
mov
test
xor
and
adc
data16
cmp
xchg
sbb
mov
les
add
test
xchg
in
inc
insb
not
dec
mov
or
rcll
int3
dec
in
fs
loopne
sarl
ret
pop
or
mov
add
mov
sbb
mov
cltd
cld
out
sub
out
daa
mov
cmp
xor
add
clc
int3
roll
sub
xchg
cs
and
jecxz
dec
adc
push
imul
cmc
mov
xchg
push
mov
sub
pop
xorl
fs
lods
in
es
adc
je
or
ror
inc
ror
out
les
hlt
pop
lret
mov
xchg
mov
xor
cli
shl
add
adc
xor
lods
jge
ret
inc
js
xchg
scas
cmpsl
jle
imul
rolb
cmp
stos
and
add
popf
push
int3
orl
cld
jge
dec
mov
rorb
add
or
add
sbb
mov
mov
iret
daa
push
sbb
bound
adc
lods
fisttpll
fnsave
fmull
cld
xor
xchg
add
or
inc
test
or
repz
sub
mov
xchg
loop
rcr
sbb
das
pop
mov
fmuls
ja
sub
roll
ror
cli
and
pop
dec
push
sub
jbe
subl
mov
jae
int3
pop
ficoml
dec
mov
fcmovu
andl
inc
cli
fsts
sub
lret
leave
mov
mov
mov
int3
shll
nop
xlat
rolb
stc
dec
sub
jae
fucomp
mov
mov
or
decb
sbb
sbb
lret
sti
and
and
loopne
mov
cld
ss
dec
lahf
push
mov
sbb
fsubrp
pop
xor
arpl
inc
sbb
push
jmp
adc
mov
fsts
adc
loopne
lea
pop
add
or
fsubrl
arpl
into
in
shrb
add
add
in
mov
aam
mov
in
fisttpll
scas
fisttpll
mov
add
add
stc
push
in
cmp
adc
bound
and
ret
mov
cld
nop
lods
pop
in
pusha
fwait
xchg
repnz
adc
repz
or
mov
prefetch
cmp
jae
adc
sbb
loopne
inc
jae
mov
or
add
or
mov
adcb
jle
lods
adc
or
imul
repnz
adcl
jnp
adc
cld
call
call
xchg
testl
cmp
out
out
andb
or
push
gs
mov
lret
lahf
cmp
or
outsl
add
push
inc
push
int3
or
lock
adc
ret
add
sbbl
or
arpl
gs
call
jae
cltd
adc
sub
in
loop
ret
or
sahf
stc
mov
adc
mov
scas
pop
adc
xor
hlt
add
mov
int3
adc
icebp
and
repnz
push
mov
push
or
mov
cmp
xchg
sbbl
pminsw
mov
lock
xor
adc
out
in
adc
or
lret
push
push
imul
mov
xchg
sldt
lret
test
dec
dec
jo
je
mov
clc
push
or
sub
jo
sbb
and
push
xor
adc
mov
pop
orl
pop
push
xchg
xchg
sbb
sub
fwait
jl
clc
mov
mov
insl
xor
ret
or
sub
adc
cwtl
mov
adc
pusha
adc
lret
and
into
outsb
add
cwtl
and
xor
and
mov
ds
jno
orb
lret
cmp
movsb
push
cmc
aaa
jle
push
xlat
cmp
push
add
out
cli
mov
and
test
mov
loopne
push
cwtl
bound
xchg
aad
sbb
clc
out
js
inc
loopne
lcall
in
jg
rolb
inc
movsl
or
mov
arpl
arpl
hlt
cld
das
lock
cld
sub
pop
pop
cli
mov
incl
dec
cld
cmp
ret
dec
add
push
adc
xchg
cmp
jmp
mov
or
xchg
xchg
int3
mov
ds
stos
es
sub
mov
xor
pop
mov
outsl
out
bound
mov
popf
faddp
fcomi
or
sub
cmp
lret
mov
idiv
stc
xchg
or
lcall
shll
in
or
rol
sub
divb
cmp
adc
orl
fcomip
jmp
adc
add
decb
or
mov
cld
add
repnz
adc
lods
mov
cli
adc
int3
pop
pushf
outsl
adc
stc
mov
orl
mov
add
clc
adc
loope
incb
repnz
rorb
adc
and
xchg
cmc
jg
mov
mov
xchg
mov
inc
fucom
jmp
sub
pop
pusha
icebp
mov
or
call
clc
inc
rolb
in
fndisi(8087
out
int
mov
jno
jnp
call
adc
or
jl
fsub
lahf
pop
cs
dec
call
push
int
mov
movaps
dec
or
js
mov
mov
ss
lds
pop
xor
mov
dec
scas
cltd
or
incl
jbe
add
daa
or
push
ret
sbb
cmp
mov
gs
sub
jmp
push
mov
xchg
jecxz
xor
xor
mov
mov
imul
sub
xor
out
jecxz
adc
adc
jp
xlat
push
add
mov
cltd
push
pop
adc
sub
jne
imul
add
mov
dec
cld
mov
add
sbb
mulb
scas
inc
sbb
and
mov
mov
mov
test
push
ss
adc
stc
jmp
xor
scas
and
and
xlat
sub
mov
and
sub
push
test
inc
xor
mov
movl
enter
cmp
inc
dec
add
xor
push
enter
fcompl
inc
jl
rcrb
push
daa
insl
fdivs
test
leave
stc
cmp
adc
sbb
sub
add
jl
push
shrl
clc
sub
pushf
fnstenv
ret
push
test
or
or
test
pop
test
jb
mov
pop
ljmp
mov
sbb
icebp
jmp
nop
repnz
fbstp
fwait
repnz
sbb
adc
jne
pop
out
popf
add
push
fs
loop
shlb
js
stos
and
xor
xor
loopne
and
xor
or
lahf
or
shll
jmp
mov
add
clc
adc
loopne
xlat
fiaddl
cmp
scas
sub
enter
add
fisttpl
xchg
push
cmp
divb
push
push
dec
repnz
test
movsb
ljmp
imulb
push
mov
xchg
push
adc
test
pop
test
sub
mov
jbe
loope
mov
mov
mov
adc
or
repnz
sbb
imul
mov
dec
gs
lret
xchg
adc
aad
xor
sarb
sbb
popf
sub
push
out
mov
adc
stos
sarb
add
xorl
inc
in
jmp
pop
push
andl
js
inc
mov
sub
and
mov
faddl
inc
daa
jnp
sub
and
stc
dec
adc
sti
shlb
lret
fildl
xchg
nop
aaa
xchg
lods
icebp
pusha
in
rorb
cltd
jbe
adc
lds
in
xchg
leave
and
mov
mov
scas
mov
push
jg
pop
bound
fucomi
orl
mov
dec
or
mov
mov
adc
xlat
repnz
jge
push
jno
nop
test
add
add
dec
je
xchg
loopne
sub
pop
aas
fmuls
adcl
enter
mov
xchg
or
les
xchg
jle
or
pop
out
fs
in
mov
ljmp
jnp
arpl
cmc
mov
add
pop
cmp
lcall
into
lret
jbe
test
xor
mov
lods
lds
lds
sbb
in
lret
push
xchg
iret
lds
push
clc
ss
push
in
mov
push
outsl
pop
inc
mov
dec
dec
add
jmp
in
leave
cli
loopne
mov
sub
xchg
sub
dec
icebp
fidivl
sub
call
mov
mov
movsb
adc
xchg
dec
incl
sti
orb
ret
mov
sbb
mov
sub
aas
inc
sub
mov
add
iret
pushf
roll
push
jae
or
loope
add
jp
leave
ffreep
jecxz
fimuls
add
mov
jle
xchg
rolb
sbb
loope
mov
into
or
add
cltd
jns
cmp
dec
mov
iret
pushf
out
xchg
and
std
mov
push
cmc
sub
lret
rcrb
inc
nop
mov
mov
adc
popf
out
hlt
or
jbe
inc
pop
cmpl
icebp
popa
mov
fwait
jb
jmp
stos
or
dec
jl
jno
dec
or
imul
push
subb
loope
rolb
dec
lret
shl
mov
and
xor
xor
stc
pop
mov
jb
jo
sbb
mov
idivl
mov
int3
addl
pop
daa
das
cmpsb
aaa
call
sub
sub
imul
lret
stos
cwtl
fsts
rolb
lods
repnz
int
lahf
dec
lret
jecxz
adc
ret
xchg
xchg
push
ret
or
call
repnz
jae
jecxz
and
add
lret
or
fidivs
mov
fldenv
sbb
int3
mov
rol
aaa
push
mov
shll
cmp
inc
jns
inc
aaa
cmp
ret
pop
lds
add
cmp
frstor
pop
inc
dec
adc
add
jbe
std
jmp
aaa
mov
dec
add
adc
sbb
arpl
std
sbb
inc
push
in
stc
xchg
sub
cmp
out
push
pop
push
out
inc
cwtl
or
xchg
rolb
ret
xchg
out
je
add
cmp
dec
pop
rcll
mov
or
ja
or
int3
lcall
pop
les
sbb
mov
jmp
or
shl
fstps
xchg
mov
andl
jmp
adc
data16
pushf
repnz
add
aam
pop
mov
fstl
sbb
lds
mov
lcall
pushf
mov
or
push
mov
movsl
cmpsl
pop
daa
and
mov
or
xchg
add
int3
in
fwait
add
cmp
pop
xlat
fs
xchg
clc
fcompl
in
dec
sbb
and
dec
lock
repz
in
out
fsubs
les
leave
adc
mov
push
fcmovnb
lahf
push
fwait
dec
mov
std
adc
repz
jbe
xchg
adc
lret
inc
cmp
or
mov
add
jbe
or
xchg
imul
adc
xchg
xor
pop
dec
andb
movsl
push
dec
mov
int
jecxz
jmp
outsb
xchg
movsl
sbb
cmp
mov
imul
jnp
add
loopne
gs
mov
sbb
xor
jo
iret
movsb
add
push
ja
sahf
mov
dec
insb
sub
jae
fstpl
inc
ret
fidivl
sub
ds
or
sbb
dec
into
sub
dec
addr16
scas
xchg
add
add
inc
in
mov
and
or
cmc
mov
cmpsb
in
test
adc
outsb
sbb
les
iret
mov
add
mov
push
int3
fisubrl
dec
mov
sub
mov
ss
xlat
or
xor
sbb
out
xor
mov
pushf
ret
lds
mov
jl
icebp
into
adc
mov
jg
xor
push
xor
sahf
cld
mov
xor
mov
xchg
sub
inc
push
pop
rcl
mov
leave
jbe
sbb
xor
stc
cmp
fsubl
mov
xchg
adc
ss
adc
pop
sbb
xor
pop
push
jg,pt
fnstenv
xor
test
ds
leave
lahf
jl
jge
out
sbb
mov
mov
or
or
or
mov
out
pusha
aas
out
sub
push
cmp
dec
jo
into
inc
icebp
sub
sub
push
cmpl
popa
arpl
adc
xchg
jmp
dec
adc
mov
add
add
mov
pop
into
adc
sbb
out
arpl
andl
pop
xor
scas
in
mov
sbb
push
sbb
imull
aad
sbb
stc
dec
push
fs
cmpsb
hlt
dec
mov
jbe
inc
sbb
rol
inc
mov
fdivr
lods
mov
jp
sub
rcrb
dec
pop
movsl
rcrb
cmpsl
mov
mov
jp
inc
rorl
loop
xchg
test
in
popa
insb
in
enter
inc
fidivl
notl
mov
adc
shrb
fsubrs
add
pop
rolb
nop
mov
xor
fsubl
outsb
adc
add
xorb
sbb
xor
repnz
inc
push
cmp
add
fsubrp
jb
push
gs
out
jle
mov
fdivrp
or
sbb
jecxz
mov
push
repz
push
lea
cli
jg
hlt
out
clc
faddl
shll
hlt
and
mov
adc
mov
in
mov
sbb
sub
cmc
mov
dec
add
imul
daa
lahf
sbb
sub
fsubs
inc
jae
lcall
divl
lahf
sbb
and
jno
ja
push
lret
call
or
call
mov
push
ret
add
and
pop
and
in
adc
sbb
inc
add
add
push
dec
push
aas
jg
addr16
xchg
mov
jne
mov
icebp
add
dec
in
sar
mov
insb
mov
mov
jecxz
into
sbb
movsl
push
mov
adc
or
iret
stc
and
cmc
xchg
sti
xlat
mov
adcb
stc
test
pop
or
fadds
das
xor
add
dec
loop
mov
out
sti
push
scas
or
dec
sahf
mov
lods
xor
aas
out
mov
push
gs
jns
test
xchg
inc
xor
mov
repz
jecxz
sbb
aad
or
add
xchg
or
das
xor
inc
lea
cmp
and
sbb
or
int
or
fsubr
outsb
mov
daa
sbb
das
popa
divl
loopne
adc
jge
inc
bound
adc
add
xchg
mov
mov
or
mov
xchg
sub
cmpsl
iret
loopne
rcrl
add
or
inc
test
jmp
mov
and
cmpsl
push
pop
test
cmp
xchg
add
loope
rcll
pop
jnp
or
add
movsl
in
adc
adc
popf
mov
insb
out
testb
mov
or
cld
pop
add
xorl
testb
dec
sbb
pushl
into
xchg
fsubp
and
es
in
lahf
jo
arpl
push
mov
ss
jae
ret
push
adc
jne
mov
xchg
cmp
add
jmp
xchg
lods
decb
ret
mov
add
int
push
mov
clc
call
xchg
mov
sti
or
inc
add
pop
xor
dec
dec
adc
inc
add
xor
scas
cs
or
in
hlt
aad
sub
sub
xchg
jp
mov
mov
out
outsb
popf
or
mov
rorb
fcoms
out
lahf
pop
out
sbb
mov
push
pop
out
shll
outsl
jb
push
xorl
movsb
add
pop
mov
outsl
jbe
fmull
add
insl
and
mov
add
sahf
or
pop
inc
xlat
sbb
add
aaa
icebp
inc
or
outsb
mov
inc
mov
lods
dec
mov
and
mov
jae
scas
enter
mov
mov
sarb
push
and
pop
stc
flds
mov
clc
xor
jno
lret
xor
fcmovbe
and
adc
clc
popf
sbb
idivl
or
pop
dec
adc
mov
adc
lock
add
js
aam
lods
inc
cmc
push
cld
sub
jno
aad
pop
js
into
hlt
iret
nop
movsb
stos
ss
lret
or
les
ret
sub
in
dec
jg
fnstsw
in
stos
cmovp
jno
dec
aam
dec
inc
ja
scas
push
cld
add
lock
sbb
rolb
hlt
mov
xchg
sbb
test
sti
jg
push
lret
mov
push
lods
cmp
stos
or
push
adc
repz
xlat
repnz
stc
bound
mov
push
js
or
mov
andb
movsb
ljmp
adc
out
pusha
outsl
mov
inc
leave
mov
aad
popa
loop
jecxz
cli
fisubrs
mov
das
mov
jbe
pop
push
cmpsl
adc
jae
xor
xlat
mov
hlt
add
adc
jo
int
repz
aaa
and
jmp
repz
push
in
jae
stos
or
push
pop
fidivl
loop
jne
addr16
push
les
in
pop
movsl
pop
aas
lds
gs
jne
xor
jge
or
fadd
cld
cmc
dec
xchg
pop
pop
out
imul
ret
lods
jmp
rcll
sub
cmc
push
push
mov
ja
and
subb
movsb
out
stos
mov
adc
and
pop
lea
aam
loop
fdiv
jp
mov
push
mov
add
push
and
jns
and
push
mov
mov
inc
mov
cmpsb
mov
popl
repnz
in
xchg
mov
jb
lret
fisubs
push
mov
repnz
cli
sahf
sbb
cld
cmp
out
fldl
faddl
sbb
rcr
cmp
mov
and
pop
push
sbb
xchg
push
mov
stos
inc
add
movsl
test
push
push
jmp
xchg
jp
lods
movsl
push
add
shl
xchg
add
xor
movsb
add
jae
push
add
lods
out
or
push
xchg
mov
mov
add
lea
imul
push
lahf
or
mov
xor
mov
icebp
lahf
or
xchg
xor
das
out
jb
sub
popl
or
std
pusha
push
arpl
mov
fimuls
test
aaa
adcl
xchg
push
xchg
aaa
sti
or
sub
push
push
popa
sbb
je
fsts
out
movsl
inc
popf
mov
ret
xor
add
pushf
xor
cld
repz
push
hlt
rorb
mov
push
adc
fidivs
push
add
mulb
bound
fimuls
aam
mov
xor
pop
pop
in
xchg
fdivr
insl
fidivs
out
dec
pusha
sub
mov
aas
xchg
mov
enter
call
inc
cmp
and
scas
nop
push
out
negb
jmp
in
ret
lock
push
fisttpll
pop
mov
mov
inc
cmp
pop
sub
test
lret
int3
fistpl
add
jmp
mov
jmp
mov
xchg
and
rcrb
mov
jae
adc
pop
mov
scas
dec
xlat
lret
mov
fwait
sub
ja
sbb
pop
nop
mov
stc
mov
aas
xchg
in
mov
mov
sub
pop
mov
inc
popf
mov
rolb
aam
lahf
add
inc
jg
pop
pop
mov
adc
mov
rcl
fwait
push
mov
jge
push
rcrl
sar
mov
add
xchg
out
lahf
shll
lods
aam
hlt
sub
cmpl
dec
or
dec
pushf
std
adc
push
push
ljmp
andl
insb
pushf
out
mov
cltd
sub
xor
repnz
jecxz
or
mov
pushf
or
pop
mov
andl
pop
scas
fincstp
std
mov
and
sub
jl
popf
jns
lods
push
addr16
fsub
outsl
mov
iret
cmc
mov
cmp
mov
xlat
or
xchg
aas
xchg
pop
xor
nop
dec
repz
mov
cmp
mov
rcr
adc
cmp
inc
push
lock
xor
jge
pushf
shrb
and
and
lcall
sahf
xchg
je
pushf
xchg
mov
lods
xor
sub
clc
dec
mov
je
mov
in
jmp
pop
negb
inc
cli
adcl
lods
inc
enter
xchg
or
fucomi
bound
lea
xchg
cmp
addl
sub
xchg
pop
dec
push
or
lahf
adc
mov
mov
sbb
sbb
jno
and
stos
cmp
bound
mov
jecxz
stc
loopne
outsl
push
adc
sub
mov
out
insb
push
adc
int3
dec
sub
or
xchg
mov
mov
pop
stc
movsb
shlb
xchg
pop
repz
jmp
adc
add
jle
or
or
stc
sub
lcall
xchg
inc
xor
push
das
std
movsb
push
rol
mov
cli
dec
ja
or
jns
mov
mov
pop
rcrl
faddl
xor
cmp
out
rcrl
syscall
ret
adc
add
sub
out
xlat
insl
fstpl
pop
call
test
jb
out
icebp
dec
fmuls
vphsubwd
out
cmp
pop
dec
mov
aas
or
hlt
pusha
mov
fcomi
and
fwait
sbb
in
adc
mov
arpl
ss
andb
mov
or
push
clc
aam
mov
lcall
pop
adc
mov
xchg
shrl
cli
dec
mov
cmp
cmc
xchg
jae
push
gs
lret
jb
xchg
jmp
or
sbb
mov
lea
xor
stos
jb
ficompl
ljmp
mov
jb
pop
push
ret
lahf
adc
mov
fsubrp
cld
push
aad
xchg
adcb
std
fmuls
insl
pop
add
push
or
repz
cmpb
jbe
mov
cwtl
push
adcb
bound
jl
ficoml
bound
or
mov
nop
in
or
xor
lock
cmp
imul
fdivrs
adc
xor
stos
icebp
nop
mov
and
mov
sbb
push
sbb
push
shl
xor
sbb
or
xorb
aaa
pop
push
push
or
cmp
aaa
mov
adc
xor
in
jno
adc
into
les
xor
dec
xchg
pop
push
pop
jge
and
out
fistl
mov
shr
dec
xor
push
popl
insl
testl
add
xor
xor
xchg
lea
mov
push
notb
sbb
adc
xor
adc
rol
inc
dec
add
fadd
repnz
mov
xchg
xor
dec
jo
fidivs
mov
and
jg
es
push
popa
movsl
repnz
and
sbb
sub
into
inc
push
sub
and
add
inc
and
mov
mov
scas
sbb
jp
out
push
xor
out
mov
loope
pop
negb
ljmp
xor
les
pop
mov
xor
sti
ret
mov
or
mov
icebp
movsl
movsl
or
out
shll
repnz
push
adc
sbb
dec
sbb
push
in
test
mov
stc
dec
dec
into
cmp
insb
dec
push
mov
out
lcall
pop
sbb
js
mov
mov
push
sbb
mov
dec
enter
icebp
sarl
aam
test
fxch
mov
mov
add
gs
add
test
bound
cld
pop
xor
sahf
and
lock
cmpsb
or
pop
push
inc
push
sarl
adc
pop
leave
in
xor
ret
xor
xor
lods
push
dec
xchg
or
cmp
les
xchg
dec
aam
sbb
pop
repnz
sub
insl
cmp
test
xchg
out
cmp
mov
lock
test
mov
repz
push
aad
fmuls
popf
inc
jmp
mov
movsb
pop
nop
mov
sub
jb
cmp
push
cmp
dec
mulb
leave
jb
mov
or
xchg
mov
cmc
dec
mov
loopne
push
inc
add
stc
push
adc
adc
lret
daa
or
sahf
xor
loopne
cmpl
sub
or
jb
rcrb
sbb
fcompl
aam
inc
push
enter
je
in
dec
mov
insb
cmp
xor
or
pusha
in
mov
jp
adc
xchg
outsl
sbb
jnp
adcb
pop
out
mov
pop
jns
push
or
addl
or
enter
mov
sub
in
sub
fcoms
mov
jbe
mov
es
push
or
or
rolb
test
jecxz
je
shrb
sbb
lods
stos
adc
push
xchg
cmp
aad
push
shll
ja
or
mov
jp
push
mov
sbb
jae
mov
lcall
dec
imul
andl
adc
ljmp
inc
sti
pmulhw
push
testb
sbb
mov
fsubrl
pop
test
add
icebp
or
sbb
or
dec
push
nop
dec
add
push
sub
movsb
ret
jae
jne
icebp
sbb
xchg
out
lcall
sti
xchg
addr16
lods
cmp
call
btc
or
adc
bound
and
xchg
xor
sbb
icebp
or
inc
ret
add
sbb
xor
jbe
push
rcl
or
and
repnz
xor
rcrl
sbb
rcll
pop
or
mov
cmp
and
jecxz
pop
push
repnz
or
mov
dec
stc
xor
add
add
pop
popa
pusha
subb
add
gs
movsl
sbb
or
sub
test
add
cmp
or
add
lahf
ret
shrb
mov
dec
ficoml
cld
xchg
sti
lahf
pop
repz
xor
mov
insb
rcrl
mov
nop
ss
cmp
pop
mov
cmp
ffree
mov
inc
lahf
sbbl
fldenv
push
cld
push
push
mov
in
adc
call
or
lea
mov
dec
test
xor
push
in
dec
mov
jb
pop
stos
sbb
test
pop
mov
fcom
dec
lock
sbb
test
fcmovb
or
push
fildl
repz
dec
cld
inc
jl
inc
in
ffree
push
add
aam
dec
aad
in
sarb
les
outsl
inc
or
pop
icebp
scas
push
pop
out
aad
stos
fimuls
movsb
test
jg
jae
pop
int3
aaa
jg
pop
int3
movsb
jmp
xor
adc
adc
xlat
movl
fstl
add
aad
pop
aaa
mov
daa
cwtl
aam
sbb
xchg
add
lods
enter
and
in
leave
ja
xchg
add
in
jmp
clc
and
add
mov
insb
mov
pop
call
inc
inc
cmp
idivb
in
mov
iret
aam
cmp
xchg
sahf
orps
jae
xor
jnp
movsb
out
pop
pop
rclb
jns
clc
add
sti
mov
aas
pop
pop
mov
add
inc
ret
push
or
mov
imul
roll
in
pop
or
fisttps
movsb
lahf
arpl
mov
mov
mov
cmp
xchg
jecxz
les
bound
je
jae
pop
cltd
inc
jo
cmc
in
hlt
loop
fbld
dec
sbb
xlat
xchg
ret
ficompl
repz
call
fbld
xor
xor
dec
rcrb
adc
inc
testb
cmp
xor
cmp
adc
int3
in
sbb
std
xchg
int3
rorl
adc
mov
jmp
mov
adc
jbe
mov
push
mov
or
in
jge
gs
adc
ja
push
stc
mov
add
bound
loopne
fidivs
cltd
fisubrl
sahf
adc
outsl
faddl
jg
mov
mov
mov
sbb
es
aas
lret
icebp
fadds
sub
or
mov
dec
or
int
sbb
div
inc
mov
in
pop
hlt
dec
pop
jle
mov
mov
gs
cld
in
mov
imul
push
inc
nop
xor
mov
aas
jl
adc
cli
sub
int3
add
push
xor
ret
je
in
adc
xchg
notl
into
outsl
rcr
call
fsubrs
pop
mov
lock
mov
push
push
pop
pop
fwait
addr16
pop
adc
fidivl
xchg
add
movsl
in
out
repnz
mov
js,pn
add
testb
fsubs
mov
movsl
mov
add
jns
or
fnstsw
dec
xchg
jo
jo
jp
and
mov
dec
out
mov
jne
sbb
repnz
aad
addb
cmp
sahf
add
sub
lret
aas
movsl
push
jno
mov
out
stos
pop
out
xchg
push
flds
cmpsb
pop
cmp
mov
mov
push
daa
xchg
mov
pop
add
jne
movsb
and
add
jne
or
ljmp
sahf
shll
popf
xorb
into
mov
push
cmc
ljmp
push
imul
pop
adc
shlb
lock
push
repnz
cs
inc
test
mov
mov
lahf
or
jg
int3
aaa
sub
rolb
sarb
mov
hlt
scas
mov
or
and
lahf
std
dec
lock
dec
sub
dec
jb
mov
cld
movsb
shlb
ja
out
or
xor
sub
inc
loop
mov
mov
ret
sub
mov
loope
push
aad
adc
call
movsb
stos
mov
sti
push
repnz
je
xor
lock
rcl
lahf
xchg
cld
and
push
fwait
cmp
mov
adc
adc
adc
sub
cmp
xor
sbb
mov
fldt
fsubs
pop
jae
insb
add
sub
add
inc
mov
repz
xor
pop
lret
mov
call
sbb
pop
mov
popf
or
adc
mov
daa
sub
push
add
and
test
int3
sub
adc
cmp
js
out
ror
inc
nop
add
pop
frstor
subb
pop
xor
xchg
stos
loop
mov
xchg
mov
mov
mov
inc
kmovw
movb
hlt
and
lret
mov
movsb
sub
sub
push
jns
cmp
cmp
xor
jg
dec
loopne
insl
xor
decl
xor
sub
fmull
pop
int3
mov
sub
or
pop
sbb
jae
cmpsl
xchg
std
ret
andb
clc
mov
enter
or
addb
xlat
movsb
mov
sbb
adcb
shlb
daa
add
int3
inc
add
jp
push
call
sti
adc
mov
push
cmp
sbb
mov
movsl
int3
nop
sbbl
sarb
inc
repz
mov
fidivrs
out
fstpl
mov
jle
popl
fdivrs
mov
arpl
sarl
pop
enter
stc
adc
push
adc
or
xchg
enter
in
sbb
adc
repz
ret
add
sub
cs
push
sbb
inc
sub
mov
sbb
in
mov
arpl
lods
hlt
hlt
sub
adc
pop
cmp
push
pop
ret
sub
mov
sbb
mov
fsubl
int
adc
or
lahf
aam
xor
je
sbb
nop
mov
dec
push
movsl
iret
xor
ljmp
adc
out
add
scas
sub
mov
sti
inc
mov
and
out
jnp
sbb
xchg
mov
je
fsubrl
stos
dec
adc
mov
cmp
movl
je
jbe
repz
mov
out
int
movsl
ds
add
ss
jne
push
fs
jle
sbb
es
fs
movsb
pushf
sbb
es
mov
ljmp
test
and
mov
ret
jo
cwtl
mov
hlt
or
lods
fs
mov
out
stc
cld
lahf
lret
mov
out
out
lret
lret
mov
fsubl
out
or
repz
inc
out
addb
jmp
xorb
or
cld
fsubp
call
or
or
add
rorb
or
or
pop
fidivs
mov
mov
cmpb
leave
sbb
mov
jb
test
push
les
fisubrl
jge
imul
mov
push
xor
cwtl
or
pop
lret
jb
push
cltd
pop
mov
jecxz
pop
sti
imul
dec
aam
fcmovnb
out
repnz
test
or
xchg
mov
cld
lahf
adc
imul
cs
push
inc
adc
dec
add
mov
adc
push
jne
push
or
jl
pop
xor
jnp
data16
fstl
ljmp
cwtl
xor
in
mov
or
jmp
or
cmpsl
adc
adc
mov
or
and
mov
or
and
fdivp
add
dec
jmp
xchg
and
in
add
mov
inc
cmp
aad
pop
push
loopne
mov
sbb
insb
push
ja
outsl
sub
testb
stc
xchg
and
ja
lods
loope
pop
push
ss
xchg
dec
add
ret
cld
sub
mov
xchg
sub
lods
add
ljmp
xlat
jl
data16
jnp
mov
adc
les
sub
outsl
mov
bnd
lods
enter
mov
adc
sahf
lock
push
mov
fiadds
xchg
jns
adc
dec
mov
rcr
jbe
icebp
mov
jne
xchg
sbb
inc
pop
cs
leave
adc
sbb
mov
xor
sbb
lock
dec
add
and
repnz
sub
or
fldt
xorl
jge
mov
mov
cmp
nop
mov
add
leave
add
cmpsl
or
add
lea
mov
hlt
hlt
mov
adc
adc
sahf
mov
fisttpll
dec
push
sub
loope
nop
imul
orl
mov
aam
jmp
ret
mov
xor
inc
push
or
aaa
je
mov
mov
push
inc
pop
ret
popf
fldenv
stc
mov
pusha
ret
inc
cmp
push
push
mov
mov
push
add
jo
repnz
lds
inc
sub
adc
in
add
rcll
adc
or
setp
add
cmp
loopne
cmc
dec
fcompl
add
or
lea
mov
mov
xchg
mov
mov
push
hlt
mov
adc
call
scas
mov
jns
and
add
adc
inc
imul
scas
mov
sub
jp
mov
and
xor
sub
or
add
add
aam
aaa
mov
push
add
mov
ja
push
sub
ja
incl
icebp
scas
mov
sbb
add
add
sub
mov
stc
leave
dec
push
out
or
jb
mov
shr
in
les
fcomp
jno
leave
mov
shl
and
ds
sub
loopne
jp
dec
movsl
mov
insl
rcrl
popf
call
and
jmp
xchg
js
xchg
cmp
push
mov
or
mov
mov
sub
aaa
push
jbe
ljmp
dec
stos
xor
dec
sub
fs
sarl
sub
scas
out
mov
dec
pop
mov
ljmp
mov
in
inc
jb
mov
inc
add
sbb
int
rol
jne
cmc
in
ret
sub
lods
pushf
dec
adc
mov
aaa
jb
fldcw
jb
xlat
dec
xchg
inc
loopne
or
cmc
ret
jo
dec
int3
sub
or
mov
sahf
lcall
adc
or
mov
xchg
adc
mov
mov
scas
mov
test
jg
cli
or
cmp
xrelease
pop
call
aaa
mov
std
sub
outsb
scas
shl
inc
mov
loopne
add
enter
jecxz
dec
xor
filds
sub
mov
test
add
mov
adc
mov
sbbl
stc
sub
lret
adc
push
fistl
rcrb
xor
arpl
mov
movsl
hlt
cmp
and
shl
adc
sbb
mov
out
or
mov
sub
sbb
out
daa
push
inc
out
sub
jle
in
sbb
jo
sarl
sti
cltd
or
add
icebp
fcomps
nop
aad
jb
stos
pop
enter
sti
mov
fldenv
sbb
scas
outsl
xlat
stos
or
rcl
pop
add
mov
mov
shrl
sub
in
adc
outsl
fwait
push
push
mov
jae
loope
dec
pop
sti
mov
addb
pop
stc
inc
adcl
out
pop
lahf
and
pop
push
adc
int3
and
sbb
adc
jg
and
sbb
loopne
mov
add
xor
stc
imul
sub
and
outsb
sbb
sub
mov
and
orb
mov
pushf
ret
popa
push
or
push
pop
scas
repnz
mov
cmpsl
lds
stc
fisubrs
daa
cltd
or
inc
aam
or
adc
jbe
std
jle
xorl
cwtl
xor
lods
hlt
jg
jge
and
adcb
xchg
ror
and
adc
pusha
push
push
xchg
push
or
mov
mov
out
lcall
add
inc
dec
je
hlt
cmp
icebp
push
shl
fsts
outsw
and
pop
mov
gs
pextrw
jae
or
jo
in
iret
add
and
cs
jne
mov
fsubs
xchg
cmp
mov
stos
inc
add
shrb
mov
js
jp
xchg
add
adc
cld
sbb
push
movsb
push
jle
cltd
adc
push
push
lds
fstl
adc
ss
push
add
push
int3
sub
pop
adc
adc
or
mov
jne
mov
jae
jg
mov
or
test
nop
or
lods
add
add
adc
adc
outsl
nop
ret
xor
cmp
push
call
insb
loop
jnp
rorb
jb
jmp
ror
pop
adc
mov
lea
mull
adc
lahf
stc
inc
cld
popf
push
pop
hlt
lret
repz
add
pop
xor
scas
test
cmc
inc
cmpsl
lcall
jo
ja
cmpsb
jg
repz
mov
in
sub
mov
cmp
pop
fstpl
adc
sti
test
xchg
jo
in
popl
repnz
lret
arpl
inc
and
cmp
sub
xchg
jb
fsubrl
mov
mov
sub
xlat
add
sub
add
inc
xchg
shrl
xor
enter
into
mov
inc
xchg
and
lods
dec
ja
pusha
out
into
push
dec
dec
mov
rorb
into
cmp
bound
cmp
popl
add
xchg
adc
fadds
mov
shrb
push
pop
adc
mov
push
loop
sahf
xor
mov
scas
into
popf
loopne
or
fndisi(8087
repnz
call
push
inc
add
repz
cltd
pushf
int3
dec
rolb
test
repz
out
pop
jmp
nop
mov
int3
jo
dec
and
popa
mov
or
ds
lret
popf
nop
inc
or
add
bound
hlt
mov
mov
mov
icebp
out
mov
inc
add
xchg
add
nop
repnz
xor
int3
pop
mov
push
pusha
in
inc
enter
mov
or
rorb
mov
fidivrl
push
jp
sarb
mov
or
lea
push
xchg
jg
jns
mov
jns
add
xor
shrb
cmc
push
adc
cmp
add
mov
mov
adc
pop
cmpsl
xchg
xchg
add
fsts
pop
ret
lret
std
dec
fsubrp
adc
sub
jl
icebp
movsb
ret
mov
movsb
std
leave
adc
std
inc
mov
cmpl
mov
out
das
in
sti
dec
pslld
xchg
in
fisubs
mov
mov
repz
adc
movsb
dec
pop
popf
push
gs
dec
mov
cli
hlt
int
jl
imul
mov
lods
aaa
dec
movsb
lret
pop
leave
adc
adc
add
or
sbb
lock
or
scas
in
lfence
loopne
pmuludq
cld
sub
loope
hlt
les
ror
adc
test
bsf
mov
push
dec
nop
je
sub
aaa
adc
shll
xor
cld
mov
add
imul
leave
aad
test
add
xor
sub
adc
or
mov
lret
fwait
cli
dec
pusha
add
jns
test
add
adc
shrl
repnz
in
mov
sti
sub
push
lea
or
pop
stc
or
push
push
and
shl
out
jb
enter
int3
xchg
in
ret
mov
or
stos
or
mov
add
add
or
in
stos
jg
call
add
jge
mov
push
xchg
adc
add
inc
dec
mov
mov
adc
idivb
sub
adc
mov
dec
jg
inc
rcll
stc
iret
adc
xlat
sub
aad
ljmp
into
adc
jmp
mov
adcb
mov
jae
adc
mov
test
mov
push
ficoml
sahf
push
rcrb
jmp
mov
cmpsb
cs
add
dec
push
iret
add
fwait
decb
pop
cmp
inc
push
nop
fbld
mov
int
ror
cli
outsl
fwait
or
repz
or
adc
jb
push
test
adc
movsl
ja
loop
jp
xor
xchg
mov
testl
adc
loopne
push
jne
adc
mov
fcom
cmpsl
bound
push
sbb
adc
movsb
and
adc
pop
mov
enter
call
nop
sub
lea
pop
mov
push
and
jmp
dec
mov
popf
test
mov
ret
sub
repz
clc
flds
push
push
adc
into
dec
mov
or
xchg
repnz
add
add
mov
les
ret
cmp
adc
gs
sub
addr16
repz
mov
cmp
and
inc
xchg
in
jns
cwtl
popa
addr16
dec
pshufw
mov
sub
shl
push
xor
cmp
push
stc
xchg
rcrb
or
pop
lods
and
pop
out
clc
xorl
test
mov
dec
ljmp
push
mov
adc
push
mov
in
les
pop
mov
mov
mov
loop
push
sub
mov
in
xor
cs
push
rorl
xchg
jmp
insl
lea
pop
popf
mov
sahf
xchg
es
sbb
popa
push
inc
pop
jbe
add
sub
fldenv
out
mov
mov
inc
dec
xchg
adc
into
scas
add
mov
xchg
or
cmp
mov
loop
mov
or
pop
data16
cwtl
pop
aaa
push
cmpl
cmc
incl
popf
cmpsb
adc
or
push
int3
rol
es
loop
cmp
imul
add
in
jo
mov
icebp
mov
jmp
or
mov
sbb
stc
mov
insb
pop
add
lds
jo
pop
std
cmp
mov
sub
cld
popf
mov
lods
or
notl
xor
lahf
adc
fcomps
adc
pop
xchg
xor
sbb
lock
or
dec
repnz
xchg
outsl
int3
mov
lret
jae
xchg
push
dec
scas
sbb
cmp
mov
in
aas
pop
test
inc
std
aad
jno
mov
js
inc
xchg
adc
stos
jae
fiaddl
inc
pop
repz
and
adc
mov
inc
add
mov
add
push
and
and
jg
aaa
je
sub
adc
push
inc
sub
cmp
add
jg
jns
inc
mov
rcr
aam
fisubl
add
rcl
mov
bound
sub
push
clc
push
cmp
mov
test
jp
sti
xchg
adc
fisubrs
clc
mov
pop
je
push
rcl
test
dec
movsb
fdivl
xor
or
inc
lahf
or
push
stc
cltd
cld
in
or
mov
mov
loopne
adc
adc
icebp
or
lea
mov
jg
mov
cltd
adcb
iret
adc
mov
and
lret
mov
inc
jecxz
clc
imul
das
testl
loop
cli
xchg
adc
enter
jle
adc
loope
aas
push
in
inc
cmp
pop
ret
imul
fs
xchg
add
loopne
dec
adc
hlt
push
jle
les
xor
inc
jbe
add
xor
ret
adc
xchg
divl
cmp
push
push
lods
mov
or
sbb
add
aam
or
and
add
jl
int3
and
push
jo
loop
int3
mov
ret
jmp
push
jb
mov
or
sub
aad
add
scas
adc
add
in
call
cmp
clc
mov
call
mov
pop
xor
inc
aam
add
dec
addb
add
fs
fsubr
inc
or
inc
mov
test
and
ficoms
cwtl
lret
into
fbld
add
faddl
sbb
out
sbb
jg
das
ret
mov
sbb
cmp
dec
xor
ficomps
push
pusha
cli
xchg
movsb
mov
cs
mov
jg
xor
push
fsubrl
insb
jecxz
pop
mov
rol
mov
adc
add
pop
scas
mov
or
push
and
mov
stos
jmp
adc
adc
inc
subl
add
or
lock
ret
push
hlt
outsl
rcrb
in
mov
jnp
or
into
test
add
fidivs
push
jl
or
mov
xorb
wbinvd
and
mov
add
xor
lods
mov
pusha
pushf
add
xor
ds
sahf
mov
adc
sahf
gs
iret
jecxz
xchg
cli
nop
xor
jb
sbb
sahf
pop
add
push
loop
lahf
sbb
dec
push
pushf
adc
mov
adc
jp
mov
movaps
in
xchg
ret
iret
cltd
ret
sub
cmp
shlb
lods
stc
mov
jmp
enter
rcll
mov
mov
insl
outsb
xor
adc
or
push
pop
sahf
hlt
mov
in
repnz
sbb
sbb
or
jb
xchg
imul
mov
and
enter
movhps
push
call
mov
mov
gs
rclb
imul
add
fptan
jbe
popf
fdivl
in
push
or
out
arpl
mov
adc
movsl
aas
popl
mov
mov
mov
push
int3
insb
add
aam
loopne
in
xchg
adc
pop
divb
movsb
aaa
inc
jns
in
xchg
add
xor
ret
lods
mov
lcall
adc
adc
mov
mov
sub
fildll
pushf
sub
mov
adc
aad
lret
xlat
test
scas
aaa
mov
mov
aaa
popf
repnz
inc
adcb
adc
adc
xor
lock
lods
movsb
or
sub
aad
lea
out
mov
test
fmull
mov
loope
xorl
mov
roll
mov
cld
pop
decl
push
or
test
test
xchg
dec
xchg
rolb
or
dec
out
fdivs
cmp
aas
xchg
gs
out
ja
pop
add
aas
sub
in
add
inc
jae
sti
cmc
jb
out
push
jle
add
push
fnstsw
cltd
sarb
js
mov
dec
jmp
mov
icebp
dec
push
stos
test
mov
out
mov
mov
into
insl
push
sarb
pop
dec
and
out
xlat
pusha
jge
rcrb
stos
adc
imul
xor
fwait
les
jbe
sbb
sub
leave
jno
in
pop
cmp
leave
fldcw
mov
jge
loop
out
pushf
cmp
enter
pusha
cmp
sahf
add
pop
sbb
or
shl
add
lret
lods
jp
into
icebp
icebp
test
sbb
xchg
int3
sub
sub
or
adc
int3
lds
push
ss
adc
data16
aas
fstpt
mov
fwait
lds
cmpsb
sarl
mov
iret
sub
mov
in
into
jno
ds
mov
jne
bound
into
test
data16
and
sbb
xor
data16
fs
aad
loope
fwait
adc
jl
lahf
test
lds
sub
cld
loopne
push
add
cwtl
dec
jmp
cmpsl
lret
daa
clc
lcall
iret
or
add
repnz
adc
fwait
add
repnz
rclb
repnz
cltd
adc
int3
mov
shlb
mov
adc
push
xchg
lgs
xchg
or
int3
xchg
dec
xchg
push
or
mov
cmp
in
clc
adc
adc
or
sub
aam
repz
cmp
into
hlt
pop
orb
dec
outsb
hlt
cli
es
shl
int3
push
add
fcomps
lods
pusha
mov
push
push
push
or
cmpsb
cwtl
vcmpge_oqss
jo
int3
aam
cmp
sbb
inc
add
movb
cmc
in
repz
les
jg
test
xor
outsl
sti
cmc
and
xchg
mov
pop
dec
dec
adc
test
xchg
int3
rorb
push
xchg
pop
sahf
icebp
scas
push
mov
push
xchg
sahf
mov
mov
pop
fmul
inc
stos
pop
fwait
rcll
inc
fdiv
ret
mov
mov
aaa
pop
mov
shll
sbb
out
xchg
or
inc
outsb
pop
xor
pop
push
hlt
xchg
testl
dec
repnz
adc
mov
lock
dec
sbbl
adc
out
roll
imul
clc
sub
pop
shll
cltd
in
sti
mov
cmc
popa
pop
aad
fisttps
filds
dec
gs
jne
movsb
pop
cmp
aam
add
sub
dec
and
pushf
ss
adc
iret
iret
or
iret
stos
inc
cmove
mov
roll
repnz
add
cmp
stos
xor
iret
insb
or
aad
lret
sub
sarb
mov
mov
cmp
mov
insb
fwait
lahf
xchg
pop
jae
daa
inc
rcrb
add
dec
out
or
adc
arpl
out
in
mov
movsl
and
movsb
pop
jmp
out
add
fiaddl
or
repnz
inc
lea
out
cmp
insb
add
push
inc
idiv
push
loop
sbb
mov
sbb
mov
mov
std
or
mov
insl
lret
out
or
mov
ljmp
cld
jge
mov
xor
stos
faddl
rorb
out
mov
jg
push
loope
mov
add
adc
add
subb
rorb
mov
test
nop
push
and
inc
mov
adc
pop
add
lds
xchg
lea
test
std
jp
rol
adc
adc
ljmp
mov
mov
xor
out
cmp
add
sbb
or
nop
xchg
fdivrl
bound
dec
sbb
sbb
in
movsl
imul
or
pop
mov
int3
dec
dec
sbb
mov
mov
scas
repnz
inc
adc
cmp
lock
pop
clc
or
adc
add
push
xchg
mov
incl
fidivrs
mov
lds
mov
popa
mov
adc
add
or
mov
scas
jb
adc
push
cmc
cs
int3
sbb
cld
dec
seta
daa
jle
movsl
adc
nop
sub
mov
sti
adc
push
sub
in
dec
mov
repnz
jne
xor
scas
mov
and
xor
or
repz
lods
sbb
add
sahf
sbb
mov
rorb
fs
repnz
ret
sbb
dec
pop
or
je
lret
mov
push
jo
lock
loopne
add
and
scas
or
add
xor
mov
xchg
pop
or
push
or
add
mov
or
clc
aam
mov
scas
loopne
or
sub
cmp
xchg
clc
loope
repnz
leave
cmp
cmp
imul
lock
loop
out
sbb
or
clc
or
nop
pushf
jmp
fs
leave
mov
and
xor
sbb
push
in
fcompl
adc
sub
jbe
jmp
mov
or
and
outsl
jbe
or
push
or
shrl
adc
mov
js
insb
int3
pshufw
pop
loop
sbb
ret
sbb
add
outsb
rolb
cmp
das
adc
push
lock
mov
add
jnp
les
out
cli
mov
shll
dec
or
push
push
call
push
cld
stc
repz
jl
scas
add
nop
adc
adc
add
fnsave
test
daa
cltd
push
inc
adc
or
push
dec
gs
cmpsb
adc
inc
and
adc
sub
test
adc
push
xbegin
in
push
aam
sub
push
xor
push
sahf
testb
inc
or
add
push
push
or
in
adc
sub
fdivl
popf
out
inc
xor
push
maxps
adc
test
mov
sahf
sbb
dec
fldcw
adc
aaa
in
lahf
out
xchg
xor
push
fwait
push
notb
les
popf
xchg
mov
testb
cmp
jle
in
pop
cmp
pop
sbb
shlb
call
aad
sub
gs
sub
js
mov
lods
and
mov
pop
and
jg
setp
fsubl
je
notl
sbb
lahf
jne
mov
ret
mov
adc
int
push
scas
and
mov
add
sahf
in
stos
call
pop
iret
or
sbb
jge
mov
jne
fnstsw
aad
or
sub
rcr
sahf
and
lods
jnp
mov
mulb
adc
hlt
mov
and
mov
jo
stos
add
sub
lock
xchg
lock
outsb
imul
rcll
loop
lock
clc
push
sahf
popf
xchg
adc
lret
aad
repnz
mov
jb
jbe
rclb
inc
add
outsl
dec
adc
hlt
add
xor
in
lahf
jmp
jo
mov
pop
roll
loop
mov
cli
xor
adc
movsl
mov
call
jnp
sub
jb
ficoms
movsb
mov
outsl
add
xor
mov
cmpsb
sbb
xlat
pop
sbb
sub
lret
cli
push
nop
cmpsl
jge
and
daa
hlt
fnsave
ljmp
mov
scas
mov
ss
mov
ficomps
or
decl
cmp
xor
insl
mov
pop
push
fcoml
aad
scas
add
pop
xchg
cmpsb
sbb
dec
pop
inc
mov
ficoms
lods
xor
jb
inc
les
fnsave
add
mov
sub
iret
bound
pop
lods
loop
lock
clc
std
movsl
cmp
shrb
cld
dec
lahf
inc
xor
ret
mov
repnz
dec
movsb
adc
add
mov
mov
adc
cld
mov
sti
addr16
scas
push
orl
mov
adc
lods
xor
adc
out
adc
in
and
cmp
pop
cmp
jmp
ret
lret
call
lret
fsubrl
test
stos
adc
icebp
dec
fidivrl
int3
dec
outsl
lods
jo
es
subb
faddl
adc
testl
add
js
and
sbb
ja
jecxz
push
pusha
jle
arpl
ror
test
add
popf
sub
aam
sub
test
enter
shl
pusha
int3
cmp
clc
mov
movsl
repnz
sti
leave
imulb
cmp
into
sub
aad
inc
je
enter
outsl
pop
sahf
xor
xor
add
out
and
out
add
jns
cld
fldl
sti
scas
hlt
js
in
sbbl
dec
mov
bound
aad
add
pushf
xchg
inc
dec
sub
int
clc
shrl
mull
adcb
addr16
rorb
xlat
cmpsb
xor
loopne
mov
and
pop
jle
aas
xor
imul
dec
jge
xor
jns
nop
cs
ljmp
negl
pop
mov
add
out
cmp
or
and
pop
pop
mov
add
lds
repnz
push
lret
push
outsl
scas
mov
dec
inc
push
mov
rcrl
jbe
jg
shl
les
dec
pusha
sub
sub
int3
xrelease
adc
jmp
adc
mov
out
ss
test
push
pop
iret
loopne
ss
aad
mov
test
and
jl
out
fsubs
and
and
les
inc
xchg
in
mov
xor
sbbb
fdivrs
push
mov
adc
nop
dec
stc
inc
outsb
sbb
sar
int3
lcall
minps
mov
in
or
rcl
cld
mov
addl
xor
push
xchg
pop
aad
jnp
sbbl
in
lods
push
adc
cmp
icebp
or
jno
dec
test
push
cld
rcl
inc
je
xchg
cmp
jg
loop
add
push
jg
add
xchg
cmpsb
shlb
andb
hlt
jbe
mov
ds
mov
frstor
mov
or
sub
rcrl
xor
adc
dec
popl
sarl
adc
mov
xor
sbb
or
in
or
out
jle
ss
jmp
dec
in
mov
inc
hlt
xchg
or
xor
xor
xlat
sbb
je
or
cmp
loop
in
mov
les
imul
fdivl
lock
adc
inc
xor
cld
inc
cltd
mov
adc
jns
push
mov
jae
cmpsb
push
pop
push
sbb
dec
add
adc
inc
in
jecxz
xchg
les
pop
mov
pop
jae
in
sbb
dec
push
inc
push
dec
inc
mov
inc
out
mov
mov
and
add
mov
inc
or
mov
pop
call
pop
and
enter
test
adc
or
mov
push
cmp
aaa
push
mov
add
or
add
lcall
lea
push
out
and
inc
adc
sbb
test
xchg
shrl
mov
int3
xor
insb
pusha
jmp
andl
leave
and
imul
mov
inc
sub
sti
popf
insb
scas
rclb
sub
xor
aad
lret
add
das
add
hlt
ficoms
lahf
push
or
outsb
cmpsl
lret
push
nop
in
cvttps2pi
mov
adc
xchg
sbb
push
sub
lret
mov
les
stc
js
call
fsubl
mov
or
popa
cmp
xor
sbb
nop
cmp
vsqrtps
adc
dec
cmp
loope
pop
sub
and
popf
xor
rcrl
push
mov
test
mov
jle
mov
jmp
fadds
out
pop
mov
xchg
movsl
sub
xor
fldenv
arpl
loopne
js
mov
gs
jp
cltd
push
dec
pop
seto
dec
jge
int
sub
dec
daa
adc
xchg
mov
dec
neg
gs
mov
push
cmp
mov
clc
loop
hlt
add
in
pop
or
push
xchg
in
push
pop
rcr
cmp
mov
jp
inc
dec
in
popf
or
and
xchg
mov
cmp
popl
shr
fcompp
std
or
adc
xchg
decl
into
pop
stc
and
gs
push
sbb
xchg
dec
or
aad
mov
fsts
push
mul
popf
xor
imul
mov
add
lahf
mov
or
push
push
push
in
je
ss
mov
xor
sub
cmpsl
cld
in
imul
jmp
sarl
mov
popa
lea
loope
es
imulb
lahf
adc
xchg
xlat
xor
xchg
cmc
mov
mov
mov
add
clc
adc
icebp
sub
mov
mov
and
addr16
mov
push
test
mov
mov
sub
icebp
push
mov
jmp
add
pop
xor
push
rclb
mov
mov
shrb
adc
push
mov
repz
icebp
or
clc
ret
jno
push
xor
adc
push
sahf
out
jp
mov
out
and
jecxz
xchg
ss
mov
or
out
imul
sub
mov
fwait
mov
out
repz
iret
cmp
lret
and
ljmp
lret
outsb
xchg
jmp
jb
sti
test
into
jg
jl
iret
fmuls
and
repz
cwtl
fcomi
aas
cltd
enter
fwait
lret
ljmp
not
mov
push
sbb
sbb
mov
repz
test
inc
fucomi
imul
inc
jl
jne
aad
ret
mov
pop
push
mov
leave
shrb
push
pop
stos
repnz
data16
repnz
add
or
pop
loopne
rcll
push
or
shll
clc
jp
je
add
push
pop
cmp
setg
loope
add
jmp
xchg
add
add
mov
lret
sbb
xor
sub
sbb
xor
cwtl
sbb
cmpsb
lock
xor
jmp
adc
addr16
or
adc
mov
push
mov
inc
inc
jmp
stc
xor
mov
add
scas
xorl
or
adc
inc
push
add
data16
cmp
push
mov
inc
or
fstl
push
pop
dec
mov
push
sbbb
mov
repz
push
pop
mov
ljmp
xchg
push
cmp
pop
mov
xchg
inc
lahf
pop
push
call
adc
rorl
mov
je
pop
shrb
sub
xchg
push
cwtl
arpl
daa
imulb
psraw
aaa
adc
add
sbb
aad
dec
jmp
sbb
jne
mov
jne
mov
pop
mov
je
fs
mov
xchg
gs
sahf
pop
std
or
aad
das
mov
in
adc
iret
xchg
cmp
dec
xlat
add
or
gs
icebp
mov
dec
fstps
sub
addb
imul
pop
jne
sub
xchg
leave
dec
xchg
dec
or
cmp
test
imul
inc
jno
inc
xchg
cwtl
jmp
bound
sbb
push
in
lea
les
jecxz
mov
lods
insb
rorl
aaa
jle
jge
mov
jmp
das
or
data16
fimuls
ret
mov
cld
xor
aam
gs
inc
jbe
rcl
ss
inc
dec
nop
lret
dec
xchg
into
lock
fldenv
inc
mov
jne
js
loop
sarl
push
cmp
shl
in
scas
ss
push
mov
scas
mov
fcoml
dec
shrl
jnp
jmp
jg
lcall
int3
add
jb
sbb
adc
sbb
jl
xchg
vpmacsdql
jg
xorb
jbe
int3
daa
jle
aad
or
adc
sub
jne
mov
test
popf
pop
adc
out
pushf
pop
push
inc
add
xchg
pop
outsl
mov
sub
mov
fndisi(8087
add
idiv
enter
inc
xor
int3
stos
sbb
or
leave
push
pop
shr
mov
jbe
cmpsb
cwtl
repnz
mov
mov
cmp
sahf
pop
pop
popa
sbbl
jmp
mov
ds
adc
fwait
mov
ljmp
mov
pusha
in
add
adc
adc
adc
lock
cld
fsubs
mov
int3
mov
or
ss
xor
pop
lock
hlt
jb
mov
clc
movsb
xchg
sub
pushf
ret
inc
adc
xor
adc
add
subb
pop
rol
out
xchg
add
pop
sbb
mov
mov
and
shlb
xor
mov
pop
xchg
sub
in
pop
jb
aas
lcall
jo
in
int3
enter
inc
jmp
nop
iret
into
gs
mov
mov
std
xchg
repnz
adc
mov
xchg
sub
pop
ds
sub
mov
jae
js
imul
add
or
out
sbb
rol
incb
xor
pop
sti
call
into
xor
mov
andb
aam
loope
pop
call
in
pop
mov
in
adc
mov
add
scas
lret
or
stos
lret
xor
pop
jae
push
jnp
xchg
or
ljmp
mov
movsb
xor
out
jmp
dec
or
dec
add
mov
xchg
sub
or
pop
add
stos
test
dec
dec
faddl
cmpsb
add
icebp
sub
or
pop
enter
cmp
in
xlat
xchg
test
pop
pop
lret
pop
leave
push
cld
add
xor
push
adc
cmp
roll
loopne
xchg
mov
or
adc
sub
imul
jo
and
xor
mov
add
imul
in
and
and
jne
sahf
mov
out
je
loope
lods
adc
inc
xor
push
push
in
cmp
adc
adc
imul
add
fcmovne
mov
enter
add
fimull
lock
or
test
cs
fcoms
push
fldenv
add
xadd
pop
addr16
insb
cmpsb
mov
adc
rolb
mov
or
or
pop
clc
xor
jns
rolb
add
cmp
lds
aam
sub
inc
or
in
mov
flds
dec
or
and
cmp
ds
mov
addr16
jmp
mov
or
dec
mov
add
mov
xchg
pop
xor
stos
insb
xlat
aam
mov
es
xchg
xchg
mov
mov
jne
in
test
in
mov
mov
sub
xchg
lea
pop
andl
aad
jbe
pop
repnz
sti
aad
ret
ja
or
sub
daa
insb
repnz
sti
jge
adc
jo
jge
jbe
or
sbb
pop
out
movsb
clc
popf
cmp
mov
addr16
cmp
lds
ret
std
push
mov
pop
add
fidivs
out
sbb
les
xchg
rorb
push
loope
mov
bound
mov
push
xchg
xchg
jbe
pushf
mov
mov
rcrb
scas
pop
movsb
repnz
ja
or
jb
leave
sbb
dec
push
jp
test
nop
mov
or
lock
sar
in
int
ret
mov
shrb
adc
lock
xchg
sbb
pop
inc
dec
ret
lea
mov
in
out
pop
xorl
enter
fwait
ds
fstps
ret
mov
add
xchg
push
pminsw
dec
fmull
or
add
cmp
nop
sub
adc
mov
add
cli
sarl
pop
pop
push
divl
cmpsl
rclb
push
fstpl
pop
xchg
pmaddwd
and
jge
notb
ficomps
jo
in
xlat
push
rep
mov
nop
or
jmp
dec
jle
pushl
sub
jecxz
fldt
adc
xchg
adc
add
nop
pop
bound
and
rcll
leave
lods
orl
stos
or
repnz
int3
jae
arpl
imul
mov
sbb
sbbl
dec
pop
jo
xchg
xor
rorb
js
cmp
and
mov
nop
enter
adc
adc
mov
out
add
lcall
or
add
adc
xlat
or
iret
xchg
dec
fisubs
jl
lock
nop
add
push
xchg
imul
xor
cmpsb
dec
sub
fldl
lock
mov
push
pop
push
jmp
jl
sub
or
ficompl
out
mov
pop
int
mov
push
sub
add
sub
mov
push
or
mov
adc
and
jo
xchg
sar
mov
pop
sub
fsubl
ja
cltd
adc
insb
mov
xor
aad
insb
and
enter
sbb
xor
mov
dec
pop
cmp
or
ret
repz
xchg
shlb
ret
in
jecxz
nop
enter
stos
jge
xchg
shrl
cli
xchg
mov
or
cld
cmpsl
lret
outsl
das
cli
push
add
or
call
insb
jo
push
orl
xorb
mov
adc
xchg
mov
aad
or
push
mov
bnd
cmp
pop
add
mov
push
mov
fmul
andb
push
lahf
lret
int
or
std
xor
xchg
iret
test
js
add
sbb
loop
mov
addb
cli
lahf
add
adc
int3
jg
shrb
jp
xlat
mov
sbb
fisubrl
cmp
rcrl
jo
int3
mov
scas
or
push
leave
pop
dec
mov
xchg
dec
mov
sub
or
rolb
movsl
and
aad
sub
into
jns
mov
sbb
ja
jnp
xchg
cmp
test
mov
xor
or
adc
orb
aas
cmc
aaa
repz
hlt
push
shlb
mov
or
xchg
ja
inc
lods
xorb
mov
xor
iret
adc
std
outsb
sti
inc
cld
leave
inc
or
push
jp
cmp
iret
mov
fisttpll
rcll
jp
sarb
dec
jmp
aaa
fdivrp
aaa
fcompl
scas
push
bound
cmp
lock
sahf
ret
adc
in
xor
movl
xor
mov
add
sub
add
cmpsb
loop
mov
ficompl
repnz
jo
call
nop
mov
adc
aas
das
arpl
leave
cli
add
push
out
adc
in
and
add
xchg
adc
xor
lcall
or
mov
push
dec
mov
xor
call
inc
jmp
out
push
pop
jae
sbb
cmp
int
push
enter
sub
fistl
stc
les
push
jmp
and
add
or
in
or
icebp
les
sti
push
std
xchg
and
mov
or
iret
add
xchg
pop
push
nop
repnz
jl
jo
hlt
outsl
pop
pop
outsl
xor
pop
xchg
cmp
in
adc
sti
mov
mov
push
sbb
fcmovbe
ficoml
mov
xlat
ja
adc
lcall
jbe
nop
cmp
mov
fwait
xchg
insl
insl
cmc
ret
iret
clc
sbb
mov
popl
stos
out
sub
test
repz
int
jno
jne
add
rcrb
loop
insb
stc
mov
fstps
jns
mov
mov
add
sub
int
jl
sbb
xchg
ficoms
push
leave
inc
sub
add
cmp
mov
push
lods
jb
xchg
cmpsl
and
mov
jg
xchg
out
lahf
mov
nop
aas
xor
dec
xor
xchg
ficomps
into
scas
sbb
add
ficoml
add
lcall
hlt
cld
xor
dec
fsubp
gs
and
enter
in
mov
int3
cmp
cli
jbe
jo
hlt
add
lahf
sarl
and
subb
lock
jecxz
sub
sarb
mov
push
loopne
mov
sub
and
out
jnp
sahf
rolb
jae
pusha
or
fcoms
imul
lret
rorb
mull
test
movsb
push
cwtl
data16
pop
rorb
fsubrs
xorl
adc
arpl
mov
pop
mov
or
mov
add
leave
or
sub
test
shll
sub
sbb
cmpsl
popf
lret
fbstp
aad
xchg
lret
lds
rcl
rol
in
cli
out
inc
imul
cltd
cmp
fs
into
add
add
sub
rolb
pop
shll
fiadds
pop
fildl
fs
push
nop
les
iret
add
shlb
aas
dec
add
lcall
loop
add
lods
insb
mov
mov
mov
out
xor
in
loopne
adc
into
ss
rorb
addb
icebp
jo
or
stos
or
pop
mov
rcrl
push
add
fcomip
mov
cltd
dec
mov
add
or
dec
cmp
mov
int3
jnp
movsb
adc
mov
sub
incl
mov
out
in
sub
nop
int3
cmp
xchg
fwait
adc
pop
xor
fistpl
loopne
shlb
and
out
jnp
push
mov
lea
push
insb
in
xor
in
cmp
push
je
adc
adc
sub
fisttpll
mov
sub
add
fiaddl
xor
jl
or
out
and
jne
imul
mov
or
shlb
or
cmp
xchg
cs
into
xor
jle
sti
lods
lret
les
repz
sub
add
les
lds
in
xchg
hlt
pop
xchg
adc
int3
sub
pushf
repnz
movsb
dec
scas
dec
loope
pop
movsb
cmp
mov
or
xor
repz
or
push
adc
mov
fistpl
pushf
gs
or
or
scas
ds
loop
clc
mov
add
in
int3
xor
mov
xchg
dec
or
js
stos
add
add
adc
adc
sub
js
dec
fldl
movsb
jo
or
sub
mov
enter
sub
insb
inc
or
adc
xchg
add
xor
jns
and
dec
or
in
mov
shlb
mov
ret
jno
enter
insl
jo
outsb
xchg
rcrb
and
bnd
rcrb
aad
hlt
push
mov
inc
mov
pushf
frstor
mov
inc
or
pmullw
aam
mov
loopne
jmp
addr16
repnz
and
aaa
push
cld
repnz
dec
lahf
adc
dec
inc
sub
adc
aad
ja
adc
icebp
xor
stc
cmp
or
les
add
sbb
out
fcomip
jae
in
lods
vpunpckhbw
sbb
xor
sbb
push
movsl
jb
sahf
jns
movsb
sub
jbe
sarb
jmp
call
sahf
lods
push
cld
pop
pop
test
cmp
sbb
iret
addr16
lcall
push
mov
mov
xorb
jno
xor
ja
out
sub
mov
push
xchg
adc
aad
pop
cmp
mov
and
inc
or
adc
jg
or
push
xor
dec
sbb
rclb
pushf
sub
mov
rol
call
pop
test
push
fnstcw
dec
mov
fsubrp
xchg
fsubrl
jp
popa
lds
inc
xor
xchg
icebp
test
jb
mov
mov
iret
shl
mov
mov
rcll
mov
stos
cmp
push
ja
subl
lods
iret
sahf
leave
jbe
test
mull
insb
adc
mov
pop
shlb
cwtl
int3
orl
sub
and
sub
lahf
or
adc
sub
loop
aad
dec
enter
or
aad
sub
repnz
add
cmp
push
in
sbb
and
sbb
jmp
cmp
enter
mov
inc
inc
inc
addr16
out
ret
add
adc
cmp
ficompl
leave
and
inc
out
push
jle
ret
cld
movb
aam
jg
pop
inc
cmp
ret
pop
popf
and
jp
and
popf
sub
sub
and
sub
mov
inc
mov
hlt
xor
call
jb
ljmp
xchg
cwtl
add
xchg
mov
jo
ljmp
clc
dec
out
inc
ds
adc
adc
data16
int3
xlat
testb
dec
bnd
cwtl
stos
xlat
repnz
inc
mov
pop
out
pop
andb
jno
jns
pop
mov
sbb
in
call
cld
or
xor
or
bound
inc
pop
lcall
push
sub
sub
xor
in
add
jl
push
gs
aas
imul
add
or
sbb
adc
mov
and
fstps
in
out
pop
xor
fisttps
hlt
jge
cltd
std
fnstsw
mov
ret
inc
pushf
lret
mov
testb
pop
lahf
fiaddl
push
mov
out
sbb
xor
jl
fldenv
adc
rcl
rcl
adc
sub
dec
fmul
add
adc
mov
pop
or
aas
xchg
and
xchg
jae
xchg
rclb
fimuls
jmp
test
ljmp
lds
daa
add
mov
push
into
dec
jno
rorb
mov
mov
pop
inc
add
inc
push
ljmp
rolb
jg
jl
add
mov
cmp
dec
repnz
jmp
fadds
roll
ljmp
cmp
xchg
lahf
or
scas
sar
fimuls
push
scas
ret
nop
imul
sti
adc
fs
sub
lcall
dec
adc
jecxz
adc
adc
hlt
repz
cmp
lcall
push
shl
mov
cmp
out
jl
pop
int3
call
dec
mov
or
out
mov
or
sub
imul
les
add
addl
rolb
inc
cmp
adc
adc
sbb
xchg
mov
xchg
jnp
mov
cmp
pop
pop
in
sbb
sub
mov
cmc
inc
arpl
pop
je
popa
nop
je
je
mov
adc
adc
lds
repz
add
sbb
push
inc
daa
leave
int3
rclb
or
sub
iret
dec
or
lock
inc
out
popa
xchg
ret
ret
je
hlt
les
push
add
sbb
addl
sbb
sub
test
ror
mov
jbe
adc
add
inc
cwtl
cmp
xchg
mov
xchg
xchg
sub
xor
sub
pushf
sub
add
xor
add
lahf
fwait
sub
rolb
mov
fdivrs
sub
out
and
inc
loope
and
dec
hlt
xor
mov
mov
xchg
ret
test
or
notl
sbb
push
sub
or
sbb
outsb
or
mov
jae
adc
jp
dec
and
loopne
mov
xor
cltd
or
mov
jecxz
pop
lea
xchg
push
adc
mov
jmp
hlt
pop
and
push
jge
pop
xchg
nop
sbb
add
jmp
inc
mov
ret
or
mov
jne
sbb
outsb
or
mov
int3
add
mov
sbb
insl
hlt
xchg
pop
adc
adc
sub
xchg
outsb
imul
rcr
mov
jmp
mov
enter
mov
pop
idivl
sub
adc
je
lods
adc
int3
add
sti
mov
nopl
loopne
test
jnp
je
pop
lock
repz
push
addb
test
xchg
lds
or
adc
lcall
and
negb
cwtl
dec
or
sbb
pop
xor
mov
mov
inc
xchg
lock
mov
add
loope
iret
stos
jbe
xchg
push
ficoms
add
pop
xor
lods
xchg
std
xchg
addb
mov
xor
xchg
imul
inc
fcoml
inc
dec
push
inc
mov
fs
jb
hlt
sbb
sbb
add
popa
and
daa
xchg
or
dec
mov
shrl
outsl
cltd
hlt
add
adc
sbb
pusha
jnp
popa
adc
xchg
adc
sub
int
adc
or
push
sub
mov
xchg
les
and
pusha
mov
cmc
mov
js
adc
aaa
lret
hlt
or
mov
sub
hlt
das
insb
xchg
sbb
dec
inc
repz
outsb
jnp
arpl
imul
sbb
testb
cmp
pusha
sti
test
and
sahf
dec
jl
jmp
jo
cmc
ja
jle
enter
inc
sub
mov
ljmp
js
xchg
add
xchg
pop
out
push
aad
xor
or
sub
lahf
pop
push
adc
mov
lods
inc
jl
rol
vmptrld
add
lahf
add
insl
in
lods
lock
imul
mulb
pushf
flds
pop
and
xor
in
mov
sbb
mov
mov
xor
nop
dec
popl
mov
mov
es
sub
and
pop
mov
add
stc
stos
fsubrs
cmp
add
out
int3
mov
dec
add
dec
mov
lock
out
in
pop
mov
cld
xor
mov
add
bnd
es
push
push
inc
jecxz
cmp
or
xchg
lods
adc
imul
jo
and
inc
or
in
minps
mov
dec
push
hlt
popf
xlat
lock
adc
ja
lcall
mov
or
sahf
mov
scas
jmp
push
ret
jb
lret
push
lods
jbe
and
xchg
aad
lock
in
lcall
je
and
mov
or
mov
inc
jmp
cmp
stos
pop
mov
inc
sub
cmpsl
std
add
or
mov
mov
mov
cmpsl
lahf
push
jbe
push
dec
sub
cmpsb
sbb
add
add
add
stos
jl
insb
je
add
push
in
or
mov
jl
or
or
mov
adc
mov
mov
sbb
add
or
movsb
mov
xor
aaa
stos
fwait
out
push
loop
push
out
imul
mov
out
mov
jp
inc
dec
jbe
inc
jmp
rclb
stc
loopne
push
int3
ret
adc
mov
out
test
push
mov
add
xchg
add
fisubl
mov
cmp
lahf
roll
int3
inc
cmp
mov
popf
fwait
ss
sbb
jnp
test
stc
les
lret
push
lret
cli
outsb
adc
or
cld
ret
loop
mov
mov
adc
into
cli
inc
push
icebp
cld
int3
adc
pop
ret
in
shlb
sbb
mov
or
fimuls
iret
int
je
sub
adc
out
adc
mov
clc
and
sbb
add
push
jne
push
movsb
repz
iret
or
mov
xor
push
jbe
mov
cmp
inc
jp
mov
sub
xchg
adc
mov
aad
mov
loope
jmp
pop
sub
lcall
fmull
in
negb
sbb
adc
mov
scas
lret
mov
adc
fldl
adc
adc
cld
shlb
sbb
call
sbb
and
in
cwtl
xor
hlt
pop
fldt
enter
pop
sbb
cmp
loopne
jmp
rcll
pop
cs
push
add
dec
jmp
sar
mov
test
lods
cmp
in
lret
nop
xorb
pop
cmp
lods
push
les
outsb
int3
push
adc
sbb
stos
popa
sbb
mov
dec
sub
and
push
aas
xchg
adc
dec
pop
addl
cmp
jbe
mov
jb
lret
mov
cmp
ds
xlat
lods
mov
xchg
or
icebp
pop
fcomp
enter
repnz
int3
mov
loopne
in
push
xchg
ds
cmp
push
stos
sbb
hlt
adcb
xor
add
loopne
es
incl
jne
inc
xor
loop
enter
lock
ja
ret
or
or
imul
adc
xor
or
pop
in
sbb
mov
push
lret
fdivl
movsb
xchg
fcompp
or
pop
jb
dec
sub
fadd
xchg
mov
and
push
mov
jg
add
insl
mov
sti
sbb
movsl
sub
lods
int3
cmp
sbbl
add
rcrb
cld
sub
sbb
fnstsw
daa
inc
aaa
pop
icebp
pop
or
mov
pop
rclb
mov
push
nop
stos
rclb
push
es
xchg
shlb
test
push
int
test
mov
clc
std
lahf
div
cmp
mov
and
mov
or
fstpt
daa
mov
ljmp
mov
sub
pop
push
stc
adc
out
sub
ds
mov
push
lahf
fwait
jl
xchg
sbb
cltd
aad
and
clc
xchg
mov
dec
outsb
xchg
or
fsub
ds
cmp
aam
out
fstpl
rol
es
mov
or
lret
mov
xor
mov
or
fdivrs
out
xchg
push
or
jns
push
or
in
fdivs
hlt
shlb
push
adc
in
in
inc
in
repnz
and
mov
adc
xchg
or
pop
add
jg
mov
sub
adc
hlt
xchg
aam
cltd
mov
int3
xor
addb
push
rcrb
repnz
or
arpl
sub
dec
pop
cld
add
incb
sbb
rol
lret
imul
dec
lods
adc
sti
rclb
add
in
gs
lahf
int3
pop
cmpsl
test
std
pop
push
cs
pop
adc
xlat
mov
and
or
daa
pop
imul
repnz
fsubrs
mov
jmp
out
inc
dec
popf
inc
lds
add
ret
push
push
jp
add
add
cmp
lret
cwtl
popf
sbb
or
jne,pn
push
loopne
sbb
mov
mov
sub
pop
imull
cmp
fcmovbe
popf
xchg
and
push
mov
fstl
mov
jb
call
cld
jbe
imul
sbb
bound
pop
xchg
int3
push
leave
loope
sub
outsl
dec
lahf
das
cli
inc
addr16
fsubs
cmp
jp
loope
in
adc
int3
mov
jns
pusha
jno
cs
adc
neg
adc
dec
xor
test
shll
out
mov
loopne
in
jne
jae
cmp
add
or
add
push
adc
sub
ficompl
ret
scas
out
or
mov
sbb
imul
out
xchg
and
and
jno
or
or
adc
je
mov
add
mov
add
mov
popf
hlt
sbb
jg
fcmovb
adc
mov
les
xchg
or
mov
stc
xor
or
adc
sub
cmp
loope
xchg
mov
pop
dec
je
sbb
adc
add
sub
or
cmpsl
aam
or
mov
test
aad
fnsave
lods
sarl
test
xor
or
and
gs
data16
mov
mov
jge
jno
mov
push
sbb
repz
movsb
adc
sub
filds
repz
paddw
ja
sub
add
in
sub
cmp
in
push
add
adc
xor
sbb
cmp
lods
xchg
in
inc
pop
clc
lahf
les
stc
push
push
dec
loope
nop
int3
and
idivl
cmovbe
sub
sbb
rcrl
add
push
cmp
jno
jbe
jecxz
and
mov
sti
mov
jae
inc
icebp
jae
sbb
mov
add
fdivrp
into
sub
call
dec
pop
gs
loopne
sub
push
ss
or
xor
sub
setge
push
sbb
xchg
xor
sahf
mov
dec
mov
mov
sarb
addl
jecxz
insb
adc
nop
ret
xor
out
cmp
aaa
enter
sub
and
in
jmp
fstps
enter
and
mov
sbb
clc
decb
push
mov
out
je
insb
cmp
mov
popa
adc
in
repnz
xor
or
loopne
je
mov
icebp
mov
adc
shr
data16
test
adc
inc
clc
add
add
fmuls
mov
sbb
mov
mov
loop
shr
cmp
shrb
pop
adc
scas
xor
loop
sbb
out
mov
repnz
int
cmp
jns
rorb
movsl
push
jne
mov
jae
fwait
mov
lret
fisttpll
leave
push
mov
cmp
mov
sbb
inc
fsts
int
dec
adc
hlt
dec
dec
call
ficoms
mov
mov
sub
fwait
out
push
inc
xlat
mov
insb
mov
repnz
rolb
movsl
imul
cmpsb
into
adc
dec
and
mov
push
adc
jl
sub
mov
mov
jnp
jns
cmp
add
les
mov
movsl
je
ds
mov
adc
mov
mov
imul
rol
dec
test
mov
mov
push
jp
xor
sbb
icebp
adc
mov
out
sarb
mov
and
lcall
stos
ficomps
sbb
add
jecxz
dec
hlt
stos
xor
push
mov
adc
xchg
movsb
movsl
insb
push
popf
adc
jne
dec
xchg
or
wbinvd
clc
mov
push
js
add
or
sbb
add
mov
xlat
jo
jl
cs
or
stc
and
loopne
enter
clc
mov
mov
add
sbb
rolb
push
xchg
fucomp
xchg
inc
insl
mov
or
repnz
repnz
in
shl
sub
mov
mov
push
adc
mov
lock
ds
sti
mov
loopne
push
mov
jmp
sbb
adc
or
mov
rorl
push
outsb
inc
iret
pushf
cmp
mov
scas
mov
adc
ret
js
pop
cmp
ret
insb
loopne
int3
jmp
adc
cmp
mov
insl
adcl
ficompl
stos
gs
mov
out
sub
lcall
pop
pop
loop
or
lock
test
test
add
inc
out
movsb
mov
in
mov
dec
or
imul
ret
adc
or
clc
mov
add
mov
aad
mov
loope
add
mov
hlt
es
scas
cmp
in
mov
aas
hlt
cmpsb
rcr
rcrb
sbb
gs
leave
mov
adc
popf
jnp
loop
adc
aam
xor
cmpsl
in
dec
lea
popf
push
test
adc
aam
hlt
icebp
push
or
and
push
sub
jnp
xchg
adc
xchg
es
push
xor
hlt
mov
xchg
imul
sub
add
sahf
cmpb
and
std
fsubs
mov
xor
icebp
or
rclb
adc
ljmp
adc
adc
test
int3
sbbl
add
sub
loopne
mov
adc
add
stos
xor
xchg
icebp
ja
loope
out
stos
or
stos
bound
cmp
or
mov
or
push
xchg
cmc
nop
jge
pop
mov
push
mov
push
mov
or
or
ja
lahf
incl
clc
loop
clc
in
paddw
hlt
call
lods
add
mov
loop
lock
or
or
in
in
jecxz
in
loop
lock
je
or
xchg
popa
add
push
mov
fwait
sbb
ljmp
and
stos
push
jl
sub
in
sahf
adc
dec
adc
push
insb
cmovbe
lcall
inc
pop
in
mov
dec
fiadds
xchg
add
lahf
xor
scas
dec
xchg
add
dec
jp
in
sub
test
sbb
add
leave
sbb
push
repz
push
inc
clc
mov
cmp
mov
cmp
mov
icebp
push
jge
stc
and
outsl
jo
in
gs
pop
incl
scas
ret
push
sub
fxch
add
or
aaa
ljmp
stos
inc
sbb
in
test
add
bound
add
insl
add
ror
jb
pop
dec
aad
dec
outsl
int3
mov
fidivrs
rorb
shll
repnz
adc
fisubrs
sub
orb
ja
jno
and
push
mov
add
sahf
adc
push
rorl
sahf
filds
out
jns
inc
dec
daa
and
mov
shll
mov
shrb
popf
imul
dec
out
push
in
xor
in
pop
cmp
xchg
lret
cs
mov
mov
hlt
ret
xchg
jl
xlat
adc
sbb
inc
xor
hlt
and
adc
sbb
scas
inc
or
ret
addb
xchg
cmpsb
in
mov
push
mov
loope
mov
dec
mov
push
xchg
in
adc
xchg
sbb
mov
pop
cmp
xchg
or
dec
xor
test
lret
insl
dec
xchg
mov
insb
repnz
std
pop
std
adc
xchg
xor
into
mov
imul
inc
rorb
mov
bound
mov
and
xlat
mov
mov
cmp
lods
mov
push
popf
sbb
inc
mov
call
lret
lahf
and
js
daa
hlt
into
pop
cltd
iret
jge
popf
lret
rcr
inc
imul
mov
imul
mov
outsl
test
mov
jno
push
in
insb
shlb
or
pop
dec
or
pmulhuw
int
cmp
mov
fdivrl
mov
mov
call
xchg
bound
pop
or
ret
fildll
or
sbb
pop
lret
add
jmp
sbb
adc
arpl
add
jns
mov
xchg
dec
sub
adc
movsb
mulb
pushl
xchg
fwait
fwait
lds
lahf
je
pop
xchg
popl
jae
cmp
les
xchg
xchg
stos
xchg
test
iret
in
jge
add
fwait
ljmp
pop
out
leave
loop
add
mov
adc
inc
and
pop
out
mov
jmp
sbb
or
loop
or
clc
lds
and
int
pop
mov
nop
call
movnti
loope
push
stos
in
ret
lret
cmovp
aaa
loopne
enter
popf
push
add
dec
push
cmp
xchg
in
adc
adc
les
push
xchg
call
inc
adc
ja
incl
nop
sub
cmp
mov
into
ljmp
loope
es
inc
int3
mov
push
stos
lock
mov
les
sar
add
lods
add
jg
mov
ljmp
and
sub
fldl
repnz
dec
jmp
inc
push
add
repnz
shll
pop
sub
stos
pushf
cmp
sbb
xor
mov
in
insl
inc
sahf
sbb
bswap
popl
hlt
xchg
cmp
out
adc
xchg
push
mov
jmp
sbb
add
lret
and
push
push
adc
clc
push
cmp
adc
mov
mov
mov
or
lahf
add
push
xchg
arpl
mov
insl
or
xchg
and
mov
xorl
popl
mov
mov
jnp
in
fwait
sbb
adc
push
jmp
xchg
out
arpl
aas
and
lret
jle
push
jae
sub
pop
orb
add
lahf
outsl
call
stos
out
aas
jg
nop
xchg
mov
sub
fidivrs
ret
into
int3
sub
sbb
mov
int3
je
push
inc
lock
fcom
mov
sbb
insl
pop
push
add
pop
lahf
or
or
pushf
dec
hlt
test
test
rcll
les
stc
sub
pop
test
pop
repnz
in
adc
inc
aaa
mov
xchg
mov
shl
push
pop
pusha
dec
sarl
aad
pop
pop
xchg
test
icebp
mov
test
dec
and
clc
cmp
ss
test
and
pop
outsb
stos
push
test
enter
mov
and
push
xor
mov
jmp
lcall
sbb
push
push
jmp
hlt
add
jmp
pop
ret
adc
repnz
xor
test
adc
push
inc
lock
rcrl
push
push
mov
div
sahf
movsb
add
loope
pop
sahf
cmp
inc
sub
in
popf
test
xor
jb
push
scas
bound
xlat
jno
sbb
lea
mov
mov
cltd
sub
cmp
jle
out
xor
data16
mov
mov
ljmp
push
dec
push
rol
mov
and
int3
hlt
sub
cmp
or
pop
adc
dec
rcr
and
dec
jg
iret
enter
inc
push
in
cmpb
dec
ja
out
int3
sbb
push
clc
popa
in
jmp
cwtl
ficompl
in
inc
mov
stc
dec
and
ret
inc
mov
aam
movlps
rol
out
lods
popf
mov
cmp
cmp
out
loop
insl
loopne
movsb
xor
dec
aas
stc
ss
leave
int3
imul
lds
adc
sub
pop
push
cmp
mov
mov
in
pop
ret
scas
add
mov
cld
xchg
fdivl
jg
loop
aam
in
mov
dec
mov
xchg
mov
and
in
loopne
cmpsb
inc
repz
adc
push
mov
es
and
and
push
les
or
inc
and
gs
popa
inc
shl
mov
jae,pn
cld
and
or
sbb
cld
loop
dec
stos
stos
gs
ficoms
int3
sbb
sub
in
dec
sub
adc
add
add
loope
inc
jns
adc
je
sbb
push
shl
lret
push
push
cmp
pop
out
into
mov
or
nop
scas
adc
lods
fsubrl
lea
aam
jno
in
cmp
xchg
cld
push
mov
pop
lods
shl
sub
jmp
mov
jecxz
mov
mov
jae
push
fcoml
mov
mov
mov
lds
cld
lahf
loopne
xchg
push
int
or
out
repnz
ss
scas
test
push
dec
mov
rorb
or
outsl
push
es
shlb
xor
xor
push
enter
cmp
out
mov
sbb
dec
fwait
sub
push
shl
pop
adc
xchg
adc
pop
mov
mov
stos
repz
sti
xchg
mov
lea
mov
loope
aaa
adc
mov
xchg
mov
mov
mov
or
mov
adc
mov
adc
jge
lahf
adc
inc
sub
sbb
sbb
pusha
adc
jge
hlt
push
push
push
in
jo
out
addr16
push
in
push
push
xchg
push
filds
mov
popa
add
js
in
xchg
aad
ret
dec
ss
xor
outsl
cmp
cmp
hlt
adc
loopne
rclb
iret
sub
xchg
adc
sbb
sub
add
addr16
sub
fildll
aad
call
into
push
cmc
rolb
in
mov
leave
and
loop
dec
ja
iret
subl
mov
scas
mov
call
push
hlt
adc
sbb
add
sbbb
mov
cmp
mov
movl
mov
add
iret
inc
iret
xor
pop
xchg
into
nop
mov
repz
xchg
fdiv
push
test
jo
or
js
mov
xchg
or
sbb
mov
jecxz
sbb
sub
adc
fldcw
push
lret
insl
or
cmp
adc
lahf
sub
inc
jmp
lret
mov
jg
cmp
outsl
add
arpl
mov
fwait
addr16
mov
sahf
jle
lret
sub
call
mov
xchg
sub
inc
xor
cmp
cmp
jnp
inc
sub
cmp
and
out
pop
inc
xor
or
dec
pusha
jmp
xor
mov
adc
outsb
mov
mov
add
push
hlt
mov
jg
mov
push
mov
add
enter
xchg
cli
out
xor
sbb
lahf
lods
fcmove
push
movsl
popf
out
adc
inc
mov
add
adc
adc
std
mov
cmp
sub
mov
mov
cmpsb
outsb
andb
pop
mov
sub
sub
out
test
lret
adc
das
dec
lea
sub
test
mov
lret
icebp
mov
pop
adc
fmull
sub
popa
nop
stos
int
stos
call
adc
cmc
push
movsb
aam
test
or
push
push
adc
test
xor
scas
mov
cwtl
sbb
adc
sub
mov
pcmpgtd
inc
icebp
pop
ret
lret
leave
fistl
and
movsl
mov
xchg
xor
dec
adc
xor
or
lahf
cmpsb
pop
mov
cld
call
test
aad
jbe
add
or
icebp
out
fmulp
or
pop
sbb
mov
and
jg
lcall
addr16
shl
xchg
repnz
jno
adc
lahf
pop
mov
dec
xchg
push
nop
loop
push
hlt
jmp
aad
shrb
mov
xor
push
sub
xchg
mov
js
push
xchg
and
adc
push
daa
ret
pop
jo
loop
loop
bound
mov
pop
test
out
xlat
rorb
adc
push
and
pop
cmc
cld
jl
insb
inc
dec
int3
xchg
xchg
fsubs
adc
iret
repz
mov
repz
mov
sbb
loope
psrlw
call
or
lds
jae
adc
pop
test
cwtl
dec
xchg
xchg
stos
in
pop
ret
mov
push
and
fisubrl
dec
xor
test
je
dec
js
adc
xchg
pop
div
mov
inc
and
xchg
inc
in
leave
test
js
mov
jo
roll
ljmp
jno
insb
mov
sub
fstpt
ret
pop
int3
mov
loopne
test
fidivl
mov
mov
inc
sahf
push
mov
inc
scas
stos
xor
in
test
push
es
push
sbb
sub
or
push
sti
pandn
ret
jp
jge
lea
pop
cmp
ljmp
jge
in
mov
je
xchg
repnz
iret
jb
inc
mov
mov
test
sub
pop
push
lcall
adc
dec
shlb
add
mov
mov
jns
rclb
jecxz
pop
add
dec
jp
loop
mov
or
adc
jge
pushf
or
mov
xchg
stos
inc
dec
test
movsb
int3
leave
into
adc
jo
ss
lret
xor
inc
jl
or
push
mov
jg
hlt
sbbb
mov
lock
or
shrb
mov
addb
lock
sbb
or
in
or
lret
fistl
or
or
scas
mov
jmp
add
dec
outsl
roll
sub
xchg
js
inc
sub
mov
jns
repz
inc
push
or
es
xor
cli
loop
or
push
sub
addr16
in
push
out
iret
movsb
mov
in
insb
jne
sbb
lcall
jge
mov
out
in
in
pop
mov
adc
xorb
add
in
mov
adc
hlt
popa
hlt
fisubl
cli
jae
into
mov
sub
or
notb
and
bound
stc
aad
push
jno
inc
xchg
lahf
in
rorb
out
mov
mov
decb
cmpsb
mov
test
jecxz
cmp
ss
idivb
in
xlat
mov
push
jp
push
sahf
out
cmp
and
pop
lock
ljmp
neg
or
fnstenv
push
mov
sub
cmp
xchg
add
lods
add
dec
adc
mov
sbb
mov
mov
out
repnz
xor
cltd
imul
je
iret
shrl
pop
movl
js
cmp
add
add
sub
add
test
xchg
mov
fmuls
and
xchg
adc
sub
cmp
sub
xor
mov
cltd
repz
shufps
loopne
cmpsl
add
sub
iret
loope
inc
shrb
jbe
push
sub
hlt
stos
clc
mov
decl
jne
push
andb
push
into
hlt
hlt
popa
or
pushf
and
mov
addr16
rcr
mov
mov
lahf
or
mov
sub
cmp
mov
call
and
pop
push
loop
xchg
in
dec
add
xchg
icebp
mov
or
fnstsw
jmp
loop
mov
pop
and
ror
aam
inc
mov
loope
pop
ljmp
adc
rolb
mov
rcll
push
push
mov
mov
call
stos
or
jp
outsb
sbb
jle
shrb
outsb
mov
rcr
jmp
loop
jge
mov
aam
add
dec
add
fmull
sbb
int3
adc
sub
add
fsubrs
cmc
dec
pop
jg
loop
sarb
mov
sub
pop
sarb
out
pop
sbb
aas
in
hlt
lahf
lret
mov
icebp
xchg
add
faddl
sahf
cmp
and
adc
sbb
mov
enter
adc
mov
push
xchg
sbb
add
ljmp
shll
stos
ficomps
jmp
testb
les
dec
xor
pminub
in
jae
rorl
adc
xlat
dec
sbb
jecxz
shlb
push
les
je
add
sahf
mov
leave
add
cmpsb
int3
test
sbb
xchg
nop
movsb
cld
in
mov
lds
lods
aam
push
pop
clc
das
xor
sarb
hlt
dec
rcr
pop
testl
idivl
clc
ds
and
neg
sub
pop
xchg
imul
xor
inc
sbb
out
cwtl
aaa
test
out
jp
or
add
jns
repz
fdiv
pop
or
shlb
dec
or
pop
ds
sbb
aam
ljmp
add
sbbl
hlt
lret
pusha
mov
push
repz
addr16
pop
add
pop
in
mov
in
cmp
fidivs
pop
fadd
add
add
pop
and
mov
mov
push
sbb
pop
out
je
fcmove
fs
ret
adcb
scas
repz
stos
cmp
and
fidivs
push
mov
fsubr
mov
outsl
push
and
in
add
jg
into
mov
push
inc
sub
js
adcl
add
xchg
xor
mov
adc
dec
mov
loopne
mov
ret
lret
subb
inc
and
insb
cmp
aam
cmp
mov
add
xchg
leave
ja
mov
sub
and
lret
popf
repz
aad
and
inc
les
fs
mov
cmpsb
mov
test
lahf
cmp
mov
adc
xchg
pop
subb
mov
inc
mov
test
incl
add
lods
es
sub
rolb
xchg
jmp
loope
jmp
int3
push
out
ret
jmp
outsl
jp
enter
pop
dec
jle
test
movsb
lret
mov
lret
fadds
repz
fcoml
adc
or
mov
push
mov
jbe
xor
int3
mov
mov
sbb
push
add
pop
adc
lods
sub
jmp
popf
or
inc
push
test
xchg
in
clc
push
or
mov
xorps
mov
xor
add
jle
xor
pop
mov
lods
adc
jne
mov
pop
arpl
stos
pop
int3
or
movb
mov
lret
push
push
ret
out
pop
bound
push
mov
lahf
and
mov
cmpsl
stos
aam
ret
sbb
es
int
insl
ret
test
shlb
int3
test
lods
clc
stc
xlat
js
ds
mov
filds
mov
sarl
rolb
decb
jmp
movsb
je
shlb
cmp
cmc
jmp
iret
adc
push
mov
xor
xlat
fnstcw
pop
movsb
int
int3
mov
aaa
stos
or
shrl
out
lea
mov
sub
aad
pop
and
out
subl
clc
mov
lret
out
mov
sub
push
sahf
push
lock
orb
mov
iret
shl
fs
pop
dec
push
inc
dec
out
adc
shl
sbb
dec
lcall
mov
out
dec
sbb
inc
stos
and
pop
adc
sub
scas
and
out
imul
xchg
adc
add
sub
stos
in
cmpl
mov
mul
mov
and
int3
stc
es
xchg
leave
adc
and
popf
xchg
adc
sub
adc
sub
sbb
mov
movsl
mov
sti
fdivrl
and
mov
les
mov
es
mov
adcl
imul
adc
test
push
sti
faddp
mov
cltd
hlt
jle
sbb
add
cmpsl
sbb
mov
clc
lock
ffree
out
dec
sbb
bound
repz
inc
mov
pop
lods
jl
xor
or
xor
repz
movsl
incl
insl
insw
in
les
pop
and
fisttpll
scas
cld
and
ret
leave
and
inc
jmp
sti
adc
imul
je
pop
sub
test
shlb
pop
fimuls
es
or
fidivrs
dec
std
sbb
cmp
push
fnsave
clc
adc
sbb
hlt
jne
out
cmp
ror
adc
les
mov
rclb
jns
clc
rcl
call
or
mov
shrl
pop
mov
imul
js
fdivs
pop
or
pop
xlat
dec
leave
call
xchg
dec
xor
sbb
or
hlt
pop
sbb
cmpb
or
sub
jns
out
sub
bnd
negl
out
daa
mov
jmp
shlb
out
sub
pop
add
dec
pop
aam
ja
sti
stc
dec
inc
or
inc
stc
jne
xor
test
sub
cmpl
sahf
add
fs
add
push
cwtl
sub
mov
call
test
push
push
aad
mov
add
adc
scas
fs
fmulp
ret
in
pop
mov
xchg
mov
adc
adc
dec
aas
mov
int3
out
mov
cmp
jns
add
mov
sub
into
cli
ds
add
clc
add
mov
movsl
inc
in
pop
sub
jno
or
mov
xchg
call
mov
cld
jnp
call
dec
lahf
negb
int
mov
or
push
xchg
jl
lahf
add
mov
pop
sub
ljmp
sti
cmpsb
aam
stc
iret
adc
jns
clc
mov
leave
jl
inc
rolb
or
or
sub
fisubrs
faddl
jb
mov
xchg
fwait
adcb
stos
pop
or
stos
mov
add
adc
lods
out
roll
hlt
es
scas
dec
cmp
lods
decl
adc
sbb
xor
mov
mov
dec
jno
out
pop
adc
pop
out
add
add
or
dec
or
mov
or
adc
cmp
test
test
mov
icebp
pop
jb
mov
enter
mov
icebp
lahf
dec
xor
enter
adc
pop
nop
in
or
mov
jbe
adc
jnp
jecxz
add
mov
pushf
lcall
mov
mov
or
push
shrb
pop
outsb
xor
inc
mov
jb
inc
push
sahf
jno
or
jg
xchg
add
std
mov
adc
mov
sub
lret
lds
mov
imul
push
sub
in
ror
icebp
mov
mov
adc
mov
xor
aam
notl
ds
add
int
jne
sbb
arpl
rcll
lahf
shlb
jne
int3
call
ss
stos
test
cmp
xchg
and
mov
xchg
scas
lret
rcl
rclb
and
or
cltd
pop
jnp
mov
in
in
into
test
clc
adc
stos
sub
push
xchg
fistps
pop
cld
jno
dec
push
sbb
mov
cmp
cld
ret
xchg
xor
cmpsl
push
adc
adc
cli
repnz
mov
aas
add
dec
add
sub
mov
mov
scas
repz
and
call
fstps
into
add
add
ljmp
ror
mov
mov
fdivl
loopne
int3
cwtl
jne
add
cwtl
pop
mov
xchg
mov
inc
push
push
add
jae
outsl
xlat
das
jnp
fs
lret
movl
ret
pop
mov
add
and
push
mov
adc
ret
ss
les
xchg
mov
iret
push
inc
adc
lahf
dec
push
es
call
movsb
repnz
xor
lods
jb
or
jmp
pop
jle
in
cmpsb
fldt
inc
aad
pop
cmpl
or
mov
mov
out
int3
test
jp
or
shl
push
xchg
push
sbb
ds
jne
mov
cmp
cmp
jae
pop
jae
adc
inc
mov
movsb
or
data16
adc
or
ljmp
adc
push
lahf
add
or
push
sti
adc
ss
stos
add
sub
add
and
or
outsl
into
rorb
mov
jns
xchg
stc
mov
rorb
jbe
sbb
orl
sbb
test
ficomps
mov
testb
out
adc
mov
leave
mov
adc
push
enter
mov
aas
test
xchg
adc
mov
push
fwait
jb
dec
repnz
push
test
add
mov
int3
cld
mov
int3
lahf
lsl
push
xchg
icebp
lcall
es
dec
rclb
ss
mov
mov
arpl
ret
mov
mov
mov
jo
ja
jnp
int3
sub
lea
mov
pop
les
aaa
lahf
lret
add
popf
fs
cmp
jg
or
xchg
out
add
jge
mov
push
jmp
cmp
jns
or
mov
push
nop
inc
ja
div
jle
mov
les
cmp
mov
sub
inc
and
test
or
mov
ss
cmpsl
aad
lods
aam
repz
test
ret
jecxz
icebp
cmpsb
mov
icebp
inc
ja
or
jb
mov
or
out
shrd
mov
insb
adc
adc
mov
mov
xor
mov
int3
push
add
adc
push
pop
fsubrp
mov
inc
xor
sub
adc
inc
ja
js
add
test
test
add
stc
rcll
in
or
js
adc
cs
test
mov
fcmovne
cmpsl
sbb
ficomps
add
inc
pop
repnz
gs
test
iret
ret
rcll
mov
jnp
nop
repnz
xchg
int3
or
imul
pop
ror
pop
add
add
adc
mov
cs
hlt
ret
int3
add
dec
adc
sub
nop
pop
fdivs
test
mov
in
jbe
push
call
xchg
fdivs
test
gs
mov
mov
adc
sti
mov
jne
out
sbb
aaa
adc
sub
xor
sahf
sbb
stos
push
rcll
cmp
leave
and
mov
sbb
stc
push
shrb
and
jmp
fisubs
xchg
inc
in
jmp
iret
jns
scas
and
hlt
push
ret
call
mov
or
int3
aam
mov
lods
sub
dec
leave
pop
fsubr
mov
orb
xor
and
shll
dec
stos
in
ljmp
aam
stc
add
lahf
add
mov
fidivs
cmpsb
out
push
add
mov
add
inc
pause
insb
mov
cmp
fadds
outsl
jbe
addr16
cmpsb
je
pop
lock
repnz
shr
lret
sbb
cmc
pop
hlt
xchg
ds
loop
inc
mov
gs
fcoml
ss
push
lds
mov
mov
xchg
mov
es
adc
lods
adc
into
imul
jbe
lret
dec
lahf
mov
mov
xchg
sti
adc
push
addb
mull
subb
push
adc
icebp
data16
lahf
mov
add
sub
pop
xchg
movsb
nop
in
sub
mov
fdivr
and
stc
loop
idivb
rcrl
adcl
stos
icebp
enter
push
and
cmp
dec
mov
fwait
xlat
mov
stos
fsubs
or
and
call
push
sahf
aad
adc
shll
ficomps
mov
pop
inc
fisubrl
xor
add
scas
rolb
rol
test
test
pop
xchg
decb
scas
scas
or
adc
stos
pop
sub
sub
fnstcw
xor
adc
pop
call
fldl
xchg
add
or
mov
sub
iret
or
push
jl
jmp
mov
call
hlt
icebp
push
mov
cs
aaa
je
fs
adc
mov
sbb
into
in
cwtl
mov
stc
in
lahf
mov
sbb
mov
cmp
or
jns
mov
jnp
out
pop
add
xchg
outsb
mov
sbb
xchg
cmp
jl
xlat
jmp
aam
fstp
inc
incb
add
mov
push
dec
adc
stos
mov
dec
mov
adcl
push
out
imul
mov
jecxz
lcall
lds
int
popf
or
xchg
mov
pop
scas
pusha
adc
mov
pop
cmc
sub
jl
push
or
mov
push
xlat
dec
adc
xchg
stc
pusha
sbb
sbb
mov
jb
mov
bound
jns
test
scas
xor
loopne
mov
mov
push
mov
shlb
xchg
loop
arpl
xor
mov
sub
mov
push
sbb
in
cmc
xor
add
jae
mul
adc
icebp
rorb
xor
push
out
add
ja
or
jge
xchg
adc
pusha
popa
mov
mov
mov
nop
ljmp
mov
popf
push
sti
dec
ret
aam
js
inc
out
mov
sub
sbb
popf
push
sbb
loopne
in
enter
out
cmpsl
sbb
mov
xchg
xchg
sbb
cli
cmp
cmpsb
adc
sub
out
or
adc
mov
jp
inc
aam
adc
dec
xchg
adc
xor
cld
repnz
add
sub
push
hlt
gs
aas
dec
stos
dec
jno
mov
fsubrl
and
rorl
xor
push
cld
ret
sub
dec
and
call
jg
sbb
lods
cli
jp
mov
sub
test
adc
enter
test
mov
shll
push
lds
jae
or
imul
adc
in
cld
sub
fimull
rorb
daa
dec
cli
sbb
es
cmp
xor
icebp
inc
or
xchg
add
stc
cmp
xchg
jle
dec
in
mov
jp
pusha
or
pop
and
dec
jns
ds
outsb
out
lret
push
cmp
mov
loope
pop
inc
sub
shrb
pop
xchg
dec
sbb
mov
insb
cmpsl
lret
sbb
jmp
push
rol
repnz
sub
mov
je
test
in
lret
jp
cli
add
jnp
in
mov
hlt
add
in
fnsave
movsb
repz
arpl
xchg
call
push
imul
xor
lsl
in
sbb
sahf
shr
adc
nop
inc
rcrl
out
dec
aad
into
dec
mov
movsl
or
add
cwtl
test
js
xor
imul
fstp
pop
mov
insb
mov
lock
stc
dec
xchg
mov
adc
push
ror
add
xchg
push
jecxz
adc
test
imul
or
add
pop
sbb
adc
xchg
jmp
sbb
xchg
push
repz
int
out
push
jo
mov
loope
aas
jp
cmpl
adc
mov
adc
ljmp
or
sti
into
adc
and
js
mov
cs
addl
inc
ljmp
fildl
mov
fnstsw
xchg
rolb
scas
in
scas
lods
fcom
jmp
rcll
mov
cwtl
push
cwtl
jno
lds
inc
aaa
aam
lock
xchg
adc
mov
test
addr16
xchg
ss
int
dec
push
dec
xchg
pop
out
adc
mov
dec
adc
scas
cmp
cmp
pop
mov
mov
dec
aad
and
jno
jmp
gs
inc
jg
jl
xor
popf
out
mov
movsb
out
cltd
call
mov
mov
mov
jbe
dec
sub
fbld
sti
rolb
cld
add
add
sarl
xchg
test
xor
fistpl
sbb
call
and
fwait
sar
cmp
bnd
adc
ret
into
xchg
jne
mov
cmp
adc
ret
sarb
hlt
aas
push
add
dec
loop
fildll
fucomp
adc
xchg
and
push
inc
mov
cmpsb
enter
rol
mov
lcall
inc
ret
xlat
ss
jno
adc
push
inc
es
loope
cmp
decl
push
adc
scas
shlb
xor
jl
add
pop
rclb
or
popa
xchg
mov
movsl
or
or
lds
add
or
add
adc
jmp
subb
cld
mov
mov
mov
push
sbb
adc
lret
fsubl
addl
or
dec
add
add
enter
xor
mov
mov
pop
leave
clc
je
dec
loop
clc
sahf
repz
mov
push
ret
or
test
xchg
mov
enter
test
add
cmp
jbe
or
mov
test
dec
or
daa
movsb
adc
mov
jle
je
repnz
lock
push
imull
cwtl
fwait
sub
mov
out
jbe
popa
das
inc
sahf
mov
out
jmp
call
xchg
mov
movsl
or
int3
xor
xchg
shr
repnz
mov
pop
fs
sbb
xchg
fnsave
cmp
mov
add
fbstp
fwait
cmp
pop
add
adc
js
out
xor
adc
adc
jne
pusha
mov
mov
dec
inc
cmp
push
imul
adc
adc
cmp
mov
je
cwtl
inc
push
divb
insl
scas
push
jne
adc
dec
xchg
dec
es
lods
dec
jbe
aad
cmp
adc
rolb
mov
adc
out
int
jno
push
push
dec
test
mov
push
inc
outsb
cld
cmp
jg
aad
pop
divb
or
pop
lret
pop
add
hlt
stc
inc
jecxz
mov
fst
enter
or
xchg
and
cltd
hlt
adc
add
aad
imul
je
pushf
test
inc
mov
and
movsb
inc
or
sbb
jo
pop
je
pop
je
mov
sahf
cmpb
and
lret
repz
jge
adc
xor
push
jnp
jmp
std
repz
cmp
fiaddl
sub
adc
inc
hlt
test
xor
cld
push
rcrl
mov
int
dec
adc
and
cmp
inc
and
mov
in
fwait
adc
adc
int3
pushf
insl
mov
in
dec
cld
lahf
xchg
cli
dec
nop
outsl
lret
jo
cli
xchg
cmp
fiadds
push
adc
shr
rcr
inc
add
lock
cmc
jecxz
cmpsb
xor
ljmp
out
cs
arpl
roll
lahf
pop
out
loopne
mov
jb
ljmp
cmp
add
fdivs
lret
mov
xchg
ja
stc
mov
cmp
mov
dec
stc
les
push
aaa
hlt
dec
popf
cld
push
sbb
shrb
dec
filds
xchg
jecxz
inc
test
adc
cmp
loopne
repz
xchg
loope
cmp
movsb
jne
push
arpl
mov
jmp
mov
dec
xor
iret
loopne
mov
lock
dec
jecxz
push
dec
mov
arpl
jmp
pusha
cmpsl
mov
nop
fsubs
add
xor
out
cld
mov
cli
sbb
adc
add
icebp
mov
lret
inc
outsb
and
fwait
rolb
fidivs
push
xor
adc
cmp
subl
dec
fwait
dec
in
cmp
lcall
mov
adc
dec
mov
inc
shl
inc
aad
mov
or
mov
lods
inc
mov
xlat
and
jg
mov
add
lds
scas
add
out
rcl
sbb
aas
pop
add
testb
pop
les
push
pop
testl
jl
mov
pusha
decb
out
xor
sbb
adc
jp
adc
mov
int3
hlt
sbb
data16
adc
addl
shl
jmp
movsl
sub
hlt
out
mov
std
das
ret
mov
repnz
sub
xor
andb
decb
add
or
aad
jae
xchg
inc
jmp
xchg
add
aam
test
adc
or
test
jmp
test
cwtl
dec
add
mov
scas
int
inc
mov
prefetch
loope
loopne
wbinvd
xchg
inc
xor
jne
sub
mov
cmp
bound
mov
adc
ja
jbe
das
and
adc
mov
fsts
mov
mov
or
icebp
aas
loopne
jnp
push
push
push
jno
or
and
fwait
add
sub
sahf
mov
jmp
aad
pop
movsl
in
mov
lret
mov
hlt
rclb
das
out
mov
or
sub
lret
cmp
jl
out
icebp
sti
sub
or
mov
xlat
popf
aad
mov
fs
fcmovu
push
and
adc
adc
ret
and
test
xor
js
and
scas
out
pop
cltd
mov
dec
mov
mov
loop
or
mov
movsb
push
jecxz
inc
leave
jmp
loop
sbb
fcmove
out
sbb
add
loop
pop
or
mov
push
les
mov
inc
jecxz
add
pop
sub
push
push
filds
pop
fwait
or
mov
out
pop
cmp
ret
pop
mov
cmp
mov
jnp
jmp
ret
test
fs
int3
out
pop
sub
call
and
repnz
add
lret
in
in
ret
sbb
ret
enter
sbb
adc
lret
push
addr16
sub
xorb
xchg
mov
je
add
fnstsw
jmp
or
jecxz
jne
jns
aad
sbb
mov
mov
mov
push
or
mov
aad
ja
cmpl
stos
mov
imul
xor
bound
or
aad
push
cwtl
sbb
push
and
ror
adc
add
shlb
aas
mov
dec
movsb
and
fcomps
pop
dec
or
mov
negb
push
lock
aaa
adc
ja
in
fisubrs
les
repz
adc
cmp
jecxz
cmp
insl
ds
mov
dec
inc
aad
shll
sbb
adc
repz
iret
in
add
into
leave
iret
in
repnz
jg
jbe
dec
jg
xor
sub
sub
mov
xlat
enter
or
xor
cmpsl
or
inc
cmp
sub
pusha
xchg
fcomps
cmp
movsl
sub
adc
ret
loope
xchg
jno
dec
push
hlt
pop
daa
lret
pop
pop
dec
mov
add
adcl
mov
inc
mov
push
sub
imul
cmp
pop
xchg
dec
push
cmp
or
jg
ss
push
hlt
sarb
sub
shr
adc
popf
mov
xchg
sub
enter
data16
fsubrl
lret
rolb
xor
pop
sbb
fdivp
adc
sti
out
ljmp
or
out
notb
out
pop
addb
lcall
sbb
and
mov
lock
test
inc
xchg
test
cmp
add
pop
lret
mov
lahf
fwait
jno
mov
insl
mov
insb
xlat
cmpb
pop
loopne
int
mov
sub
out
fisubl
hlt
mov
dec
bound
fwait
jecxz
cli
jl
mov
sub
test
scas
add
and
jne
fidivs
push
test
cmp
sahf
and
lock
enter
call
inc
ret
pushf
std
mov
repz
sub
loop
jne
push
test
movsb
sub
push
adc
adc
insb
xchg
mov
call
sub
push
dec
cltd
dec
mov
loopne
mov
jb
loop
push
icebp
test
movsb
add
xchg
lea
popf
into
imul
mov
rcll
ret
into
in
xor
sub
repnz
ss
rcr
inc
mov
scas
sbb
cmc
push
std
lock
xchg
jmp
ja
jbe
pushf
adc
sti
sar
ret
pop
cmc
int3
or
cmp
mov
cmp
clc
lds
sbb
jo
mov
data16
mov
xchg
xor
push
cld
es
adc
mov
ret
or
scas
nop
sub
stc
mov
out
sub
push
sbb
cwtl
push
stos
stos
stos
cmp
mov
adc
orl
jmp
mov
clc
in
mov
repnz
and
rcrb
mov
test
inc
cmp
and
adc
mov
xchg
in
inc
jo
enter
add
cmpsb
icebp
out
adc
mov
cmp
test
int
shll
adc
movl
scas
inc
jg
adc
cmp
popf
fsubrs
xor
sbb
mov
adc
pop
or
inc
fs
gs
sub
js
int
cmc
loopne
sub
push
jl
int
ss
popa
gs
mov
out
aam
or
mov
push
xor
xchg
and
push
sub
out
push
dec
adc
or
and
lahf
and
jl
ret
in
push
inc
aaa
and
hlt
dec
pop
xor
adc
daa
call
pop
in
and
adc
sub
pop
pop
jns
or
outsl
add
or
sub
lahf
add
cmpsb
jns
adc
cltd
jno
lock
sub
aad
mov
or
jge
fidivl
sub
xorb
fadds
gs
sub
arpl
iret
and
stos
clc
fstpl
in
lcall
pop
outsb
aam
sbbl
rcr
loope
hlt
stc
les
sub
fisttpll
add
insl
pop
cmp
jecxz
mov
popf
cmp
or
push
push
test
mov
mov
lods
jae
sub
lcall
mov
xchg
clc
cli
cmp
or
dec
std
add
filds
ss
bound
dec
shlb
xchg
adc
insl
insb
icebp
je
push
sub
or
cmpsb
xlat
out
bound
and
sbb
xchg
jb
pusha
and
lods
xchg
pop
jg
dec
fcmovu
imul
int3
pop
push
or
test
rcl
jg
or
jmp
sbb
and
arpl
sbb
add
or
fucomp
ss
imul
and
sbb
ljmp
xchg
scas
js
fnsave
mov
in
sbb
ds
fdivl
fiadds
dec
lret
or
loope
dec
or
or
hlt
leave
xchg
in
or
dec
mov
in
xorl
xchg
cmp
mov
jmp
or
out
or
push
popa
inc
in
addl
aad
sub
popf
fmul
int3
or
mov
icebp
or
fwait
or
cmc
js
jo
aad
jg
fnop
loop
mov
add
clc
fdivs
fcoml
insl
push
fnsave
mov
jno
mov
add
or
pop
mov
lret
into
adc
scas
sub
mov
or
and
inc
xor
adc
rcll
adc
test
mov
push
in
adc
imul
popf
adc
pop
mov
sub
test
pushf
inc
shl
aas
cmpsb
cmp
test
aam
sub
xor
push
fstp
inc
adc
jp
pop
push
or
adc
mov
dec
jecxz
sti
mov
cmp
or
adc
repz
xor
aam
adc
add
hlt
les
aam
pop
movsb
jns
pop
clc
ret
mov
fiadds
cwtl
data16
sarl
leave
repz
or
jg
fimull
stc
addr16
in
out
mov
lock
imul
movsl
adc
jecxz
aad
lods
fldcw
cmp
test
ret
adc
loop
lock
loop
fcomps
out
sarb
or
mov
shl
push
fisttpll
testl
into
sbb
cmp
out
in
sbb
loopne
or
or
add
aad
mov
les
scas
hlt
pop
inc
lret
call
sahf
inc
cmp
sub
mov
mov
add
mov
sub
ret
push
int
call
pop
int3
adc
add
inc
and
mov
dec
adc
mov
sbb
xchg
xor
mov
loope
fnstsw
cvtdq2ps
call
aad
faddp
add
xor
aaa
cwtl
cld
sbb
add
ss
pop
sub
cmp
mov
pop
adc
sahf
clc
sbb
in
rol
and
add
xor
pusha
jns
in
sbb
sub
nop
inc
dec
sahf
xor
enter
jnp
shrl
test
fsts
xor
push
inc
or
hlt
or
add
jecxz
mov
push
shr
mov
mov
inc
pop
arpl
sub
sbb
mov
adc
xchg
repz
lods
or
sbb
pop
outsl
sbb
mov
mov
xchg
leave
nop
lods
into
push
add
test
sahf
xchg
mov
cmc
insl
cltd
mov
mov
arpl
xorl
lods
dec
adc
pop
imul
jmp
or
ret
xor
into
fs
test
inc
cmpsl
or
stos
jno
jmp
cli
bound
adcb
fldenv
call
xchg
cli
jbe
and
jno
imul
pop
inc
sbb
or
or
adc
sub
outsb
jl
aam
imul
fldl
popa
adc
mov
das
lahf
push
jae
rol
lock
ret
xlat
fisubrs
pushl
sbb
or
cmpsb
mov
rcr
jno
xlat
dec
ficoms
shr
repz
ret
xchg
lock
in
add
pop
push
dec
movsb
jmp
arpl
inc
nop
sbb
sbbb
fwait
lods
sub
in
and
cmp
lret
push
ret
cmpsl
or
imul
or
pushf
test
sub
in
jmp
lahf
xor
pop
xchg
mov
repz
out
and
mov
sbb
roll
sub
sub
cmpsb
sbb
cmpsl
cs
out
fcmovnbe
sti
in
enter
frstor
and
adc
shlb
lahf
or
std
add
dec
push
mov
je
lods
sbb
dec
inc
call
shl
les
enter
call
clc
les
fsubrp
jle
push
adc
add
adc
add
cli
mov
js
scas
bnd
stos
sti
add
mov
stc
ss
jecxz
adc
outsl
pop
inc
or
adcl
lock
add
insb
xchg
jno
xchg
add
sbb
in
jae
iret
jge
inc
dec
or
and
ret
cli
jns
inc
adc
xchg
xchg
or
sti
lahf
jg
or
sub
jmp
aaa
rcll
scas
shrl
jno
or
js
mov
sub
mov
add
loopne
insb
rcr
outsl
js
int3
out
mov
lea
inc
adc
xchg
lock
add
push
in
mov
pop
push
dec
xchg
mov
clc
and
push
loope
mov
test
add
lcall
jne
into
adc
xor
and
xchg
enter
or
shrb
lds
jecxz
lret
loope
mov
stc
dec
mov
lods
jb
push
and
add
cli
iret
xchg
and
adc
rcl
into
sbb
add
inc
int
cmp
repnz
popa
in
cmpsb
rclb
mov
push
push
bound
cmp
pop
adc
or
lret
lret
add
or
or
ret
push
cmc
and
ds
or
hlt
pop
dec
xchg
add
sbb
adc
gs
dec
movzwl
add
pop
repz
add
into
jecxz
dec
xor
inc
push
mov
mov
arpl
jmp
rclb
sbb
je
sub
in
sub
jmp
sti
push
icebp
aam
mov
ficoms
lret
or
sub
in
aaa
mov
inc
aam
popa
ret
ret
popa
jmp
fisttpll
pop
dec
in
push
jbe
sub
int
lock
repnz
cmp
insl
add
or
nop
add
mov
stc
mov
add
aad
fcomp
push
pop
xchg
in
adc
sti
es
cld
ficoms
xor
mov
rcrl
mov
aam
mov
lahf
push
push
lret
mov
jl
xchg
roll
dec
leave
fs
jns
or
push
in
in
sti
fcoml
rcl
or
adc
ljmp
xor
sbb
lahf
out
lret
jecxz
or
into
and
xor
cld
and
mov
dec
cmp
fucomp
enter
add
mov
loope
or
cld
adc
mov
scas
or
sbb
adc
add
pop
or
push
xchg
cltd
stos
mov
mov
adc
or
or
movnti
leave
xchg
push
dec
jecxz
or
jecxz
xchg
das
xchg
in
ret
inc
sbb
lods
leave
xlat
das
or
push
jl
fsubr
outsl
jo
adc
mov
mov
ret
or
ret
sbb
push
dec
or
mov
adc
xlat
ss
test
out
xor
out
int3
cmp
mov
mov
aas
outsl
mov
cmc
push
fldenv
or
adc
xor
cs
push
scas
ficoms
inc
pop
out
mov
in
push
cmp
idiv
mov
cmpsb
lds
inc
jae
adc
mov
mov
inc
sbb
das
adc
inc
mov
push
lahf
or
pop
adc
int3
mov
adc
sub
test
adc
push
stc
or
mov
aaa
jb
inc
fimuls
dec
ja
push
mov
stc
sbb
pop
push
push
mov
fildll
cmc
mov
inc
mov
notb
sarl
push
addr16
cmp
inc
sahf
cmp
pop
push
and
sbbl
mov
jp
repnz
bound
xor
mov
add
adc
out
pop
test
testl
add
add
es
and
or
push
mov
ds
jmp
or
mov
sub
push
and
sarb
adc
loope
jle
xor
jl
xor
jne
aaa
pushf
or
jl
mov
xor
loope
loopne
shl
popa
push
nop
cld
loope
dec
jecxz
rorl
mov
or
pop
or
push
adcl
imul
xlat
or
dec
xchg
add
or
in
add
or
xor
inc
ret
adc
xchg
mov
add
fisubrs
sbb
in
test
arpl
sbb
cmp
or
fwait
inc
adc
inc
xchg
mov
test
popf
xchg
xchg
jo
xchg
cltd
xor
mov
push
inc
out
push
sti
push
pop
mov
jmp
mov
sbb
mov
test
cmp
or
test
popf
jb
mov
ret
aam
add
adc
insl
cmp
jnp
cmp
push
xor
jmp
ret
jl
sub
lsl
mov
shrb
test
xchg
jecxz
adc
in
jb
xor
xor
inc
adc
jp
adc
cli
inc
lds
and
shrb
xor
mov
out
add
lock
dec
mov
cmp
lahf
shlb
sti
ljmp
cld
adc
and
mov
ret
cmp
int3
dec
add
imul
cmpl
jb
aam
aam
inc
addb
andb
addb
xor
icebp
in
into
lret
and
in
cmp
enter
cmp
mov
add
je
cmpb
pop
movsl
or
les
xchg
and
xor
frstor
cs
and
and
clc
mov
loopne
mov
jp
out
mov
jno
test
mov
jb
pushf
cmp
jg
in
sub
add
aad
test
jge
add
dec
in
inc
push
adc
shlb
jmp
xchg
sbb
aaa
stc
dec
mov
push
push
xor
jp
jle
and
mov
mov
pop
sbb
push
adc
push
adc
pushf
jl
and
adc
cmp
xor
push
xor
popa
pop
loop
push
inc
mov
jp
xchg
mov
push
lods
pop
test
dec
mov
aas
and
fcoms
sub
and
imul
jg
jo
rcrl
jnp
lds
test
shll
dec
lods
sbb
test
setg
adc
push
sbb
leave
aas
rolb
cld
or
nop
lret
scas
push
loopne
mov
or
pop
ret
rclb
jecxz
or
stc
inc
sarl
icebp
add
pop
cwtl
bound
inc
loopne
lods
imul
pop
inc
mov
jp
lret
mov
int3
enter
inc
stos
mov
ret
int
jg
jle
cmpl
pop
sub
outsb
add
mov
jecxz
cmp
jnp
push
cmp
repnz
and
daa
lock
push
or
jns
jp
rcrb
jmp
divb
jo
fimuls
ja
movsb
fmull
hlt
cmpsb
mov
cmpsb
inc
mov
or
shrl
in
add
add
sbb
rcrb
addr16
fadd
stos
repz
push
add
jmp
sahf
pop
int3
xor
push
xchg
ds
push
or
stos
mov
int3
sub
ljmp
add
push
jo
mov
cmp
push
or
fildl
sub
adc
jbe
mov
sub
lds
adc
out
lock
mov
shrd
jae
push
mov
aam
decb
or
or
dec
push
jmp
adc
shl
je
add
sub
cmp
mov
inc
sub
shrl
fs
enter
mov
or
and
test
stos
fldl
insl
hlt
scas
jge
leave
adc
mov
jne
sub
jge
cmc
or
mov
outsb
jbe
loopne
or
orl
mov
movsb
add
and
bound
cmpsl
mov
sbb
movsb
repnz
mull
adc
or
push
fisubs
ror
mov
jae
ljmp
sbb
adc
push
rcll
call
pop
in
loope
xor
jne
xchg
ljmp
lock
loopne
or
frstor
mov
lahf
jae
push
mov
mov
aad
popa
adcb
push
popl
xor
adc
test
fisttps
test
fcom
sub
clc
testb
add
lds
dec
xchg
jns
xchg
test
cld
stc
add
jne
push
jle
add
rcll
fsubrs
outsb
call
clc
jnp
add
scas
fidivrs
mov
fnstsw
adc
pop
sub
sti
lods
in
stc
aas
inc
in
push
jae
pop
adc
and
jae
cmp
and
adc
mov
in
in
in
sub
xor
ss
mov
dec
push
lret
lds
xchg
cltd
leave
adc
scas
into
lea
mov
pop
mov
ror
fisubs
scas
es
xchg
outsl
jne
jne
movb
in
sbb
unpckhps
mov
mov
repz
jne
test
mov
jno
mov
fdivrl
xor
mov
dec
fdivrs
in
mov
push
int3
int
out
je
divl
mov
mov
les
push
mov
enter
adc
add
clc
jmp
cli
mov
clc
cmp
push
jae
add
pop
es
inc
es
sub
jbe,pt
add
ljmp
mov
jmp
popf
js
jg
mov
xchg
adc
testb
mov
testl
sub
cmc
jns
int3
outsb
push
lret
nop
mov
aam
int
enter
mov
mov
out
adc
dec
jmp
jnp
xor
xor
sbb
or
cmp
cmp
into
movsb
ss
lahf
xor
jne
mov
flds
mov
push
mov
and
daa
mov
lods
or
or
icebp
sub
cmp
iret
stc
and
cmp
xchg
and
inc
add
int3
fnstsw
pushl
push
out
mov
lret
dec
cmp
mov
xchg
dec
mov
in
mov
lret
xchg
dec
icebp
repz
pop
sar
add
mov
fadds
das
gs
adc
adc
pop
fwait
leave
into
cmp
int3
add
mov
daa
xchg
test
sub
dec
test
in
int
mov
adc
fxch
cmp
out
mov
aaa
leave
sub
mov
inc
fadds
hlt
dec
lock
or
xchg
add
add
dec
cs
add
or
xor
sub
iret
pop
pop
adc
fnsave
shr
stc
inc
mov
sbb
dec
jmp
cmp
mov
cmp
pop
out
add
sbb
out
or
mov
nop
pop
mov
cmp
push
jg
xchg
sbb
leave
dec
scas
cmp
mov
call
lock
minps
mov
movsl
push
push
mov
mov
stc
dec
test
rcll
xor
xor
rcll
mov
pop
sbb
sbb
cmp
int
mov
cmp
jae
insl
or
inc
mov
in
xchg
jp
mov
fistpl
or
cmp
inc
cmpsb
or
mov
adc
xchg
nop
test
aaa
mov
out
push
pop
out
or
jge
push
push
cmpsl
out
or
lret
test
aaa
test
in
aam
add
mov
mov
test
fdivs
mov
shr
adc
jecxz
mov
popa
mov
sbb
sub
fsts
dec
inc
int3
shrb
dec
adc
jb
es
push
jge
cmp
and
mov
xchg
test
cmp
pop
leave
mov
sub
adc
push
add
sub
fiaddl
dec
dec
sub
pop
pop
adc
pushf
test
clc
shrl
xor
push
add
add
call
repnz
sbb
iret
roll
leave
cmp
sahf
jb
pop
cmp
xchg
xchg
push
js
jecxz
sub
mov
push
fisubrl
out
mov
sbb
lock
adc
xor
dec
hlt
loopne
mov
mov
cld
psubb
bound
add
bswap
mov
push
imul
frstor
repnz
popf
lret
je
xor
andb
inc
push
xlat
sub
lods
xchg
movsb
mov
incl
test
pop
gs
int
cli
jp
sbb
jecxz
rolb
std
pop
mov
or
jecxz
mov
pushf
mov
cmp
mov
ficoms
mov
sbb
fnstcw
ret
fstpt
adc
mov
cld
mov
popf
stos
mov
pop
fldl
sti
or
sbb
lahf
xlat
gs
and
faddl
int3
in
add
leave
out
fcomi
sbb
rep
inc
imulb
xor
jae
sub
xor
jl
mov
sbb
push
xchg
cli
je
xchg
add
fmull
inc
movl
test
sbb
and
sbb
mov
or
loope
fistl
xchg
add
mov
jne
jge
les
adc
xchg
popf
cld
xchg
and
xlat
fidivrl
addr16
pop
xor
shrl
icebp
or
les
lock
jmp
jl
push
ljmp
stc
inc
mov
sarb
stos
add
xor
rol
adc
adc
stc
pop
mov
sub
cli
fld
sbb
inc
loope
xor
jmp
pop
push
mov
cmc
hlt
andl
mov
dec
lock
ret
sbb
rorl
rolb
push
in
sarb
xchg
adc
loope
fcmovb
xor
inc
fiadds
loopne
or
out
cmp
xchg
mov
sbb
xchg
inc
sub
sub
lret
aad
jb
adc
ss
lds
jb
movsb
sahf
xchg
aaa
lock
test
lret
in
ret
dec
push
dec
push
mov
sbb
sahf
lret
sbb
repz
mov
mov
nop
les
loope
adc
dec
jae
adc
mov
or
pusha
inc
jp
add
jmp
ljmp
icebp
mov
hlt
lret
ret
lds
movsl
repnz
push
or
cmp
je
xlat
pop
cli
mov
in
enter
mov
mov
mov
sbb
cmp
lock
inc
les
fwait
sub
mov
cld
xor
sbbb
mov
add
lds
jne
ja
repz
xchg
popa
call
in
sbb
mov
stc
stos
addb
imul
and
imul
push
fstps
dec
nop
fbstp
icebp
or
sahf
add
ja
pushf
imull
cld
cmp
stos
sub
lock
cli
jnp
or
sub
cmpsb
ficoms
loopne
or
push
pushl
mov
icebp
adc
xorb
repnz
pop
dec
jae
shlb
mov
xchg
xchg
dec
mov
loopne
push
inc
stos
xchg
out
xlat
movb
pushf
mov
test
mov
fs
test
outsl
notb
ja
ret
aad
popf
pushf
in
push
or
mov
sahf
mov
aam
lahf
dec
jnp
ja
fisttpll
out
cmp
sarl
sbb
sbb
sbb
adc
mov
daa
adc
mov
mov
ret
out
adc
in
fwait
iret
xchg
dec
pushf
sub
sub
pusha
mov
in
pop
add
push
inc
xlat
xor
movsb
mov
adc
mov
inc
cs
in
scas
rclb
pmuludq
pop
cmp
stos
mov
add
xor
sub
xchg
fistpll
sub
pop
jl
lcall
loopne
and
leave
leave
mov
sti
or
mov
outsl
add
mov
xchg
gs
fsts
mov
stos
pop
flds
filds
xchg
cwtl
mov
shlb
or
ret
adc
in
xchg
sahf
enter
or
mov
ret
mov
mov
xor
pushf
daa
and
fcmovnu
stos
xor
or
mov
sbb
inc
mov
fs
ds
repz
xchg
repz
jae
mov
leave
sahf
lock
ret
jbe
xlat
int
mov
pusha
pop
or
out
gs
icebp
cmpb
or
adc
sub
sbb
mov
cli
loop
ljmp
add
mov
dec
push
push
adc
jl
cltd
nop
inc
sbb
add
add
hlt
cmp
cli
pop
cmpl
adc
cmp
adc
movq
or
stc
lea
pop
repz
inc
jmp
nop
andl
mov
pop
lahf
mov
nop
dec
inc
in
mov
adc
xchg
lds
clc
je
push
or
sub
add
sahf
ret
ficoms
dec
dec
ljmp
ja
jle
pop
or
pop
dec
mov
and
cmp
adc
xchg
mov
inc
jnp
faddl
inc
and
lea
fldl
fiaddl
js
mov
test
lock
frstor
mov
pop
loop
mov
lods
and
stc
int3
push
jge
cmp
push
repnz
jne
in
dec
xchg
push
mov
repz
in
cmp
in
mov
int
or
dec
jg
inc
je
mov
sbb
in
cmpsb
sub
hlt
push
test
xchg
sbb
adc
imul
jns
inc
and
in
mov
pmovmskb
or
mov
xchg
sub
test
and
cli
mov
nop
push
pop
out
rolb
lahf
in
gs
inc
add
mov
lods
fmulp
dec
std
into
rcrb
or
data16
add
bound
adc
mov
add
stos
ja
pop
or
es
nop
inc
stc
inc
add
sbb
mov
push
cs
or
jno
lahf
push
dec
ljmp
mov
movsb
hlt
inc
and
mov
jl
sbb
dec
jo
adc
lahf
inc
adc
mov
cmpsl
enter
or
dec
xor
sbb
mov
repz
outsb
pushf
inc
xchg
cmc
dec
iret
leave
cmp
jmp
sti
fdivrp
pop
push
decb
fs
jmp
mov
aam
in
loop
mov
mov
je
push
cmp
push
cmp
adc
jecxz
int3
rorl
or
inc
mov
adc
and
xlat
mov
jmp
jp
sti
mov
rcll
inc
out
movsl
adc
cmp
mov
mov
scas
or
aad
je
jno
dec
push
test
fdivl
cltd
sub
mov
cwtl
xchg
push
shrl
push
and
divb
and
leave
stos
xchg
mov
xchg
cld
xchg
ja
sti
mov
mov
sub
sbb
inc
int
test
mov
push
mov
in
dec
mov
out
loopne
sub
call
rclb
pmulhuw
js
mov
mov
imulb
xchg
sub
xchg
sub
xchg
sar
dec
fnsave
mov
xor
arpl
shrb
mov
xchg
mov
rolb
das
jo
sbb
jnp
lahf
mov
jp
fldenv
mov
lods
test
test
xor
out
mov
scas
xchg
rol
push
xchg
enter
lret
xor
sbb
inc
icebp
jbe
push
pop
mov
dec
jl
or
in
adc
adc
push
mov
sbb
push
xchg
leave
fsub
ret
mov
adc
inc
adc
pop
add
das
cld
cld
imul
and
push
mov
out
divl
jmp
mov
mov
jne
movsl
adc
ja
dec
movsl
mov
vmwrite
push
jmp
pop
mov
test
bound
or
nop
jne
dec
sbb
aas
imul
arpl
lock
adc
cmp
std
cmp
ljmp
in
inc
sahf
lret
ret
or
mov
int3
mov
mov
popf
shlb
leave
leave
pop
rorb
or
ds
sub
in
aaa
or
push
shrl
mov
mov
push
pushf
clc
cmpsb
lahf
out
fadd
stos
mov
iret
pop
or
push
nop
call
adc
test
push
add
lahf
in
loopne
loop
repz
add
inc
push
mov
jge
xor
nop
jmp
add
dec
push
dec
fnstsw
mov
shrl
icebp
push
outsl
aas
inc
mov
adc
adc
pushf
imul
and
idivb
popa
mov
loop
adc
aam
les
or
push
out
repnz
out
cld
jb
push
push
icebp
loopne
aad
ret
dec
jae
arpl
cs
sarb
lahf
enter
sub
pop
lret
lds
lret
rol
cmp
sbb
mov
in
and
cmp
lahf
sbb
mov
or
adc
jecxz
adc
mov
aad
xor
xor
sbb
inc
xchg
push
mov
repnz
mov
jo
sbb
stos
movsb
mov
loop
mov
pop
mov
mov
mov
dec
or
lock
in
push
stos
arpl
inc
enter
sub
sub
stc
lods
jae
dec
cld
repnz
popa
or
adc
addr16
scas
sub
adc
ss
into
mov
cmpsb
xor
inc
jne
push
fbld
out
and
jge
call
shlb
cmp
push
or
repz
xchg
cs
rcr
fcompl
mov
or
pop
cmp
sub
outsl
push
cwtl
movsb
cmp
bound
fadd
out
mov
dec
mov
int
rorl
dec
scas
cld
push
xchg
call
or
mov
lods
push
shrb
movsl
xor
jbe
adc
push
xchg
xchg
adcb
scas
and
lock
add
xchg
bound
adc
cmp
and
mov
sub
mov
jbe
push
add
in
out
sub
or
push
aas
stc
pusha
lock
jecxz
movsb
sbb
cld
out
cmp
gs
dec
popf
arpl
mov
lret
movsb
repz
rclb
and
xchg
popf
sbb
pop
ljmp
call
arpl
hlt
cli
lds
out
jmp
aas
push
xchg
mov
xor
push
cmpsl
dec
jb
jmp
aad
stc
sub
mov
adc
inc
sub
jmp
in
nop
aad
and
call
movsl
adc
stos
adc
insl
scas
shlb
les
jmp
fwait
inc
and
cmp
fldcw
cld
xchg
je
xchg
mov
pop
xor
sbb
pop
xchg
adc
add
xor
fsub
pop
stc
dec
cmp
add
out
jg
outsl
xchg
pop
push
adc
mov
scas
into
cmp
lds
stos
push
xor
push
ret
test
sub
into
insl
xchg
pop
xor
inc
fwait
add
pop
mov
sbbl
adc
xchg
jb
sbb
cmc
lds
push
push
shlb
in
movsb
imul
mov
or
inc
adc
shlb
xchg
in
inc
ljmp
sub
jnp
xchg
jo
add
cmp
pop
loopne
sar
or
popl
jne
rorl
and
sbb
lahf
es
inc
movsb
mov
decb
insl
push
mov
xchg
popa
adc
das
adc
sbbb
push
adc
add
addr16
adcb
push
fdivs
mov
ljmp
jp
daa
sub
mov
fwait
mov
jbe
lret
adc
push
xor
inc
sbb
shll
xchg
adc
cmc
cmp
adc
loopne
sub
mov
mov
hlt
lcall
int
stc
dec
jae
adc
stc
inc
decl
repnz
or
push
mov
inc
jnp
adcl
adc
in
inc
loope
mov
movsl
jle
add
inc
dec
dec
add
jg
or
outsb
sti
jae
xchg
push
test
mov
mov
pushf
lret
lret
or
or
push
jp
xor
rorb
adc
inc
les
lret
push
mov
fstpl
enter
in
sub
xor
imul
mov
pop
push
cmc
or
push
pop
stos
jg
xor
aad
mov
sti
jge
enter
aad
inc
fisttpll
fwait
pushf
sbb
adc
loop
je
loopne
imul
xor
sti
mov
mov
orb
rol
sbb
cli
imul
cmp
mov
or
lds
stc
inc
int3
aad
mov
addb
pop
stos
push
lock
cmp
rcrb
jmp
rcrb
pop
jnp
es
pop
outsl
cmpsb
inc
sub
add
xor
mov
enter
or
mov
push
push
shl
mov
lods
icebp
shrl
mov
mov
nop
push
ret
into
sbb
mov
jl
jb
mov
lods
loope
jmp
mov
xor
pop
pop
mov
enter
add
sub
sub
xor
into
scas
add
ja
or
out
in
inc
mov
dec
dec
out
cli
push
sub
sub
cmc
sarb
xor
push
movsb
jno
sub
jo
push
test
out
mov
loop
popf
mov
ljmp
mov
or
jle
mov
idiv
jo
popf
pop
sbb
mov
cmp
orb
dec
roll
mov
xor
scas
cmp
ljmp
roll
fiadds
jnp
loopne
mov
data16
ret
ja
hlt
jmp
adc
jle
lret
lcall
lcall
fists
xchg
lcall
pop
pop
lahf
in
test
xchg
adc
ljmp
push
je
inc
sbb
test
int
adc
mov
xor
dec
out
sbb
into
lretw
add
repz
mov
out
adc
ja
push
or
sbb
les
cmpsl
ud1
mov
incl
mov
xchg
sbb
xchg
sub
mov
xchg
inc
icebp
adc
fsubrp
sub
je
xchg
jg
rcrb
aam
ret
lods
mov
scas
xchg
pop
sub
aad
push
xchg
data16
seta
jg
into
stc
dec
aad
popf
movsl
pop
mov
xor
ret
testl
sub
movsl
xchg
or
cwtl
jg
add
shlb
je
sbb
sbb
repz
and
testb
inc
jns
or
push
mov
sub
test
fldlg2
sub
in
mov
jne
push
movsb
leave
xlat
cmp
push
fstpl
iret
push
inc
dec
cmp
add
inc
jecxz
lock
jae
sub
inc
adc
js
test
jb
dec
pop
aad
dec
fs
sub
jb
aad
imul
mov
adc
pop
les
dec
and
fcomps
push
adcb
adcb
mov
lock
js
in
sub
or
xor
add
add
cmp
and
clc
or
shlb
xchg
jmp
jmp
repz
xlat
negb
sub
add
or
sbb
rcrl
in
jnp
scas
inc
pop
and
cmp
cwtl
sub
js
push
push
repz
sbb
stos
adc
mov
aad
add
xchg
lock
adc
push
movsb
adc
cltd
ljmp
mov
add
push
sahf
mov
int3
inc
mov
shll
out
in
mov
mov
fsubrs
sbb
cld
sub
enter
adcl
xchg
stos
fcmovb
adc
ljmp
std
aam
sarl
sti
aad
lahf
add
mov
mov
or
adc
xlat
int
jge
mov
and
or
mov
and
lds
subb
mov
rcrb
inc
sbb
mov
cmp
int
dec
jnp
adc
add
cmp
mov
loopne
sbb
sbb
inc
xchg
sbb
xor
cltd
cmp
adc
inc
cmp
and
lret
fs
jno
cs
pop
es
int3
aas
fisttpl
ljmp
fiaddl
faddl
and
adc
sbb
call
stc
push
xor
adc
call
push
movsl
jl
dec
loope
out
mov
icebp
mov
adc
ljmp
adc
call
js
decl
mov
lock
sub
test
inc
add
subl
or
pop
mov
imul
sti
nop
cld
xlat
mov
adc
jae
movsb
dec
loopne
xchg
mov
ja
ljmp
hlt
call
ror
mov
repz
jmp
jl
out
pop
gs
loope
push
cli
sub
and
cmp
out
mov
insb
push
add
push
lret
sbb
dec
push
or
jl
jp
je
mov
cmp
xor
int3
sbb
and
xchg
je
ljmp
adc
mov
rorb
lds
ret
and
mov
in
ret
push
add
jl
sbb
or
loope
dec
push
inc
adc
pop
or
or
shrb
mov
js
jnp
popl
xchg
pop
stos
push
jecxz
sub
pusha
jnp
mov
push
add
lea
gs
lock
add
aas
sarb
add
mov
push
or
data16
adc
or
sub
mov
aam
adc
add
stos
mov
stos
or
mov
sbb
add
pushf
in
and
jns
lahf
adc
adc
inc
jg
xchg
xchg
sbb
outsb
andb
xchg
sbb
js
or
sub
aad
test
in
orl
shrb
mov
add
lock
dec
push
aam
or
cmp
pop
mov
jo
lahf
or
stos
sbb
adc
mov
xchg
ljmp
adc
inc
sbb
andnps
and
cmpsb
pinsrw
out
enter
or
mov
lahf
call
mov
cmpl
test
sbbb
ret
dec
pop
and
sbb
icebp
or
lea
outsb
adc
sub
mull
in
adc
popf
pop
mov
test
sbb
jnp
push
sub
and
add
push
cmp
lret
sub
cmp
sub
and
mov
xchg
adc
ret
mov
add
jle
adc
or
sbb
cmp
out
and
push
xor
movb
dec
lret
and
jno
xchg
mov
outsl
insb
fildl
out
data16
xchg
xor
mov
clc
subb
daa
popf
pop
or
aas
test
es
out
xor
sub
aad
and
jnp
test
dec
inc
test
repz
and
add
push
mov
add
stc
and
mov
cmp
ss
hlt
jo
in
add
pop
mov
jmp
push
fwait
outsl
add
lds
jp
popa
shrb
inc
fstl
fscale
or
loope
pop
aas
dec
sbb
bound
or
pmuludq
push
inc
sahf
add
clc
les
add
faddl
sarl
push
xorb
pop
adc
pop
adc
pop
or
add
sub
lret
add
mov
sti
insl
adc
shlb
aam
xchg
rclb
push
inc
test
sub
ss
xchg
jae
cmp
xchg
shl
xor
add
mov
addr16
mov
bound
add
aaa
ljmp
int3
add
mov
cmp
dec
shlb
sbb
bound
into
fsubl
adc
aad
fisubs
jl
outsl
push
in
sub
fcompl
or
jno
xlat
nop
les
gs
dec
faddl
add
out
les
pop
stc
cmp
mov
out
pop
pusha
aam
pop
sbb
mov
xchg
icebp
pop
inc
test
lea
or
mov
mov
sub
sbb
mov
jnp
rorl
mov
adc
pop
int
xor
push
add
mov
imul
popf
cmp
add
test
push
cmpsb
insb
and
xor
add
sbb
repz
ret
xlat
or
xlat
add
xor
fldenv
sub
out
popf
ja
out
or
rcr
adc
ja
mov
loopne
xor
jle
mov
fidivrl
add
cmp
scas
mov
lods
enter
and
rcl
imul
adc
movsl
fcoms
xchg
jnp
aaa
and
test
dec
pop
scas
js
sahf
in
push
aaa
das
cli
sub
sub
inc
mov
aad
loope
mov
mov
sub
lods
in
jg
addb
dec
das
arpl
ljmp
xlat
mov
scas
aaa
pop
nop
out
jbe
cmp
push
lds
addb
sub
xor
shll
pop
andl
add
nop
fst
les
xchg
imul
fsubrl
cltd
fcom
cmp
lahf
sbb
imul
les
lret
xor
or
insl
add
add
in
loopne
mov
fsts
lods
aaa
rol
lock
and
mov
fwait
mov
xor
sahf
imul
inc
test
mov
cli
add
mov
jns
out
pop
fldenv
ret
cmp
adc
sahf
out
les
addl
xchg
dec
fs
dec
push
adc
cmc
popf
aas
jb
not
adcb
stos
xchg
mov
rol
sbb
push
ja
stos
test
aad
xor
adc
add
outsb
jo
mov
sub
xchg
pop
add
imul
into
xchg
mov
sbb
adc
or
sbb
mov
hlt
sub
pop
xchg
int3
xchg
sbb
inc
dec
sbb
pop
cwtl
and
dec
push
pop
push
mov
cli
adc
aas
mov
icebp
iret
jmp
out
movups
les
or
and
aad
arpl
cwtl
jg
pop
sub
mov
sub
xor
jl
cwtl
jne
pusha
and
mov
ja
sub
fmuls
shrb
ret
push
xor
mov
es
dec
push
nop
mov
xchg
ret
adc
fiaddl
pop
out
jbe
push
mov
and
lock
xor
add
adc
test
int
xorl
push
mov
cwtl
and
sbb
add
mov
es
cmpsl
sub
in
jg
xor
das
imul
pop
popf
add
sahf
repz
mov
test
pop
mov
pop
fcoml
sbb
sahf
imul
popf
lahf
sbb
adc
fxch
fdivs
xor
xor
cmp
in
sti
sub
xchg
test
mov
jecxz
sarb
scas
out
les
pop
inc
sub
mov
xor
push
xchg
mov
iret
xor
xchg
jns
pop
adc
add
add
fucom
xchg
fcomp
stos
mov
adc
sub
or
nop
fnsave
or
adc
sti
xchg
lret
leave
cmp
nop
or
mov
stos
hlt
int3
sbb
sub
pop
adc
dec
push
adc
jmp
in
test
sbb
sub
mov
lds
add
stc
adc
jae
sub
sbb
sub
mov
sbb
mov
adc
add
insb
add
push
sub
int3
adc
jae
sub
sbb
sub
shll
adc
int3
cltd
mov
xchg
or
arpl
or
inc
xor
and
adc
les
or
mov
dec
xor
sub
in
lds
cmpsb
scas
sub
repnz
sbb
adc
and
add
les
sub
push
lods
cwtl
pop
adc
adc
adc
lock
or
lods
push
jo
icebp
adc
hlt
mov
pop
adc
imul
out
sbb
xchg
mov
inc
jp
or
mov
loopne
loop
jecxz
hlt
jecxz
pop
pop
hlt
in
pusha
stos
hlt
in
xchg
stos
hlt
out
sbb
lods
hlt
call
hlt
jmp
hlt
ljmp
sub
stos
hlt
in
sub
stos
shr
sub
stos
add
out
sub
lods
add
out
sub
lods
add
or
fdiv
cld
out
lods
or
repnz
clc
or
cwtl
lods
jg
unpcklps
ret
sub
sub
lods
scas
loopne
push
sub
lods
hlt
pop
sub
scas
hlt
sbb
sub
scas
hlt
sbb
sub
scas
push
or
and
jo
mov
mov
or
push
in
sbb
popa
filds
je
call
out
mov
adc
out
sub
inc
stos
add
fs
movsb
or
xchg
ret
xchg
movl
mov
jmp
adc
add
add
cmpsb
or
sbb
rclb
scas
xor
jo
add
add
push
jo
call
jb
and
loop
fidivs
add
add
mov
ret
lcall
std
add
ljmp
push
xor
rol
lret
add
int3
add
jae
in
xchg
mov
sahf
or
stos
add
jecxz
mov
and
sbb
jg
test
inc
xchg
fmul
push
fs
lods
mov
jl
xchg
jns
das
rep
es
ds
mov
ja
in
pop
add
or
test
in
or
mov
mov
sbb
sub
adc
loopne
jg
and
ret
in
rcll
int3
repz
pop
dec
leave
arpl
ja
cmp
add
fisttpll
les
jae
and
xor
xchg
adc
xchg
lock
adc
sbb
cwtl
in
dec
scas
sahf
adc
adc
mov
add
rorl
and
cmp
mov
push
icebp
std
or
popf
leave
push
nop
mov
pushf
repz
orb
jne
fimuls
jb
or
or
cmp
fildl
test
lea
nop
mov
mov
out
lahf
fdivrs
jecxz
stos
ljmp
pop
add
inc
jecxz
movsl
xlat
jge
insb
pop
push
popf
mov
push
movsl
sub
stos
jg
add
in
subb
inc
xchg
add
ljmp
rdpmc
sub
pop
jp
mov
or
and
or
rcrl
bound
lret
stc
pop
mov
ljmp
pop
inc
imul
cli
adc
ret
push
jb
mov
out
or
xor
inc
adc
push
sub
loope
incl
ficoms
loope
push
leave
fidivs
lahf
movsl
jo
or
ss
or
mov
shll
sub
mov
or
data16
out
test
je
add
inc
aaa
push
rorl
and
test
sub
pop
lods
in
shll
push
jbe
shr
push
adc
in
or
mov
or
out
out
test
sbb
push
test
add
idivb
sbb
inc
or
and
std
xorl
push
lcall
lret
add
sub
stos
push
mov
mov
inc
mov
and
movups
add
aaa
add
add
lods
test
pushf
fldl
scas
sub
or
pop
or
and
addr16
out
in
push
aad
inc
sub
pop
cmpl
cmc
mov
cmp
nop
adc
jae
mov
or
push
mov
xchg
cmp
ss
sbb
fucomp
stos
mov
arpl
hlt
add
jnp
jne
fstp
cmpsb
mov
or
inc
dec
dec
test
inc
pop
push
int
push
sub
xchg
or
mov
adc
loopne
movsb
mov
mov
sub
jecxz
or
int3
ret
aas
inc
scas
cmp
jae
add
nop
inc
ret
pop
mov
aad
and
lret
shlb
jmp
cld
jae
sub
dec
fsubrl
mov
sbb
and
out
push
dec
fadd
sbb
mov
fcmove
fwait
sahf
into
inc
fcmovne
sbb
in
dec
popf
lret
jp
xchg
and
mov
sub
jmp
jne
xchg
add
stc
inc
push
mov
sub
add
bswap
fdivr
or
add
adc
add
or
cld
sub
lret
test
in
sbb
jae
inc
jmp
pop
dec
xchg
lret
or
inc
in
mov
cmpsl
cmp
xchg
add
in
lret
addr16
lahf
adc
dec
int3
push
dec
cs
cmp
or
inc
mov
popf
mov
ret
ret
lahf
stc
mov
cmp
faddl
mov
in
mov
clc
das
in
and
xchg
push
jl
ret
push
sub
mov
test
adc
fcoml
mov
loope
lret
adc
adc
sbb
nop
mov
push
stos
jmp
insb
jne
test
xor
ja
xchg
xor
pop
lahf
out
mov
negl
enter
mov
dec
xor
inc
jne
add
adc
push
push
in
push
stc
outsb
repz
js
std
fcmovne
cld
add
pop
mov
dec
stc
pop
mov
hlt
fiaddl
or
movsl
cmp
pop
rclb
sub
push
add
dec
lods
stos
push
adc
lret
loop
or
sub
xchg
cmpsl
in
add
test
mov
aam
movsb
iret
lods
mov
pop
add
fcoml
cmp
or
or
add
push
sbb
call
xchg
cld
dec
stos
or
fdivs
mov
shl
inc
pop
aad
xor
pop
xor
xchg
mov
shl
push
add
xor
sub
into
pop
fidivs
icebp
int3
fisubl
adc
cs
xor
and
mov
sub
in
jg
add
xchg
and
iret
je
in
dec
cmpsb
mov
mov
mov
sub
adc
gs
movsl
sub
cmp
lret
mov
mov
mov
lahf
sbb
or
xor
fisubrs
cmp
mov
movl
push
xor
sbb
pop
pop
stos
enter
add
imul
sub
mov
mov
jl
popf
pop
adc
in
push
pop
pop
dec
inc
dec
aas
outsl
inc
xor
adc
sub
out
lahf
sbb
dec
pop
mov
mov
cs
push
lahf
sbb
outsb
adc
mov
lret
adc
and
stos
and
inc
and
xchg
stos
pop
adc
iret
int3
cmpsl
dec
ficomps
push
pop
xchg
leave
sti
jp
addr16
sbb
stos
push
shll
sahf
and
addr16
and
sbb
dec
fwait
inc
rcll
xlat
and
sahf
popa
adc
mov
and
psubd
jl
cmp
shlb
mov
loope
das
ret
push
ss
fisttpll
mov
std
iret
ror
adc
add
adc
pop
xor
inc
popa
xor
pop
xchg
jg
mov
push
push
mov
imul
xchg
insl
mov
lret
fwait
xchg
sbbl
adc
pop
or
cs
adc
or
ficoms
jle
das
jp
adc
pop
mov
dec
or
pop
mov
clc
dec
lock
shl
loopne
int3
cld
rcrb
hlt
and
imul
fdivl
into
fdivr
push
fldcw
insb
mov
repz
xor
mov
mov
pinsrw
out
mov
fistps
pop
and
and
mov
cmp
lds
in
cmp
imul
xor
ret
pop
inc
or
out
les
inc
out
mov
fidivs
fnstsw
into
push
int
movsl
inc
and
xchg
lock
jno
xchg
xchg
cmpsl
imul
repz
or
shl
movsb
adc
adc
sbb
mov
mov
mov
jmp
and
adc
lret
mov
scas
inc
push
aaa
mov
add
pop
xchg
push
repz
in
hlt
lret
xlat
add
hlt
test
jnp
ljmp
sub
popf
mov
dec
hlt
inc
sub
scas
cld
call
or
loope
inc
xchg
cld
push
jp
xor
shll
pushf
jg
in
lret
add
inc
inc
ds
cld
or
movsb
push
mov
push
shrl
int3
adc
xchg
inc
adc
jmp
out
lock
gs
mov
push
ds
mov
push
adc
jae
add
ljmp
ret
adc
add
xchg
or
jbe
jp
aad
in
fbld
push
add
inc
jbe
mov
or
call
sbb
cmp
mov
sub
dec
xchg
add
adc
mov
mov
or
lahf
lods
sti
cld
sub
cld
cmp
mov
cmp
add
sub
lea
or
in
les
loop
cli
xchg
sbb
icebp
inc
adc
sub
pop
mov
cmc
psubq
gs
xor
cmp
ret
pop
lahf
mov
inc
mov
cmpsb
add
adc
leave
mov
ret
stos
ljmp
cmp
push
je
adc
cwtl
and
repnz
roll
sub
roll
sub
inc
and
dec
fs
cmp
sarb
dec
add
push
test
lods
xchg
lds
xchg
lods
mov
pushf
leave
data16
push
dec
ss
dec
ret
pushf
dec
lods
add
sbb
xor
in
jbe
hlt
pop
or
into
add
lea
icebp
int3
or
push
fmuls
test
dec
repz
into
adc
jne
jmp
or
loopne
imul
iret
push
mov
adc
out
mov
je
shr
jno
xchg
inc
rcll
out
adc
or
add
out
xor
sbb
and
jo
or
fimuls
mov
sub
shr
sbb
add
dec
cld
jo
in
push
xchg
stos
xor
or
inc
pop
jnp
mov
es
fldl
add
enter
ja
push
dec
jmp
shr
ljmp
cmpsb
icebp
fidivs
push
leave
lock
in
jo
ja
pop
push
xor
sahf
sub
loope
scas
sub
rcr
fisubrl
mov
pop
into
in
in
inc
cmpb
stc
inc
push
loop
dec
shll
repnz
add
dec
std
adc
mov
lret
jecxz
lcall
rcl
loopne
and
or
sub
iret
sti
sub
jmp
push
xor
add
shrl
icebp
inc
or
pusha
gs
out
or
mov
xor
and
arpl
cmp
cmc
lret
add
mov
hlt
aam
fwait
int
add
rcll
stos
icebp
aad
ror
out
nop
sub
mov
xchg
add
andl
dec
jl
imul
xchg
cmp
add
fucom
push
push
push
pop
inc
sub
cmpsb
mov
mov
xchg
or
lds
shll
ljmp
ljmp
fidivrs
lahf
or
jmp
aam
cmc
arpl
les
sarl
sbb
stc
jae
fadds
outsb
sbb
lods
ljmp
lahf
cmp
inc
test
outsb
dec
out
lods
fdivrs
xorl
fidivrl
sbb
out
or
lahf
lret
mov
je
jae
sbb
push
or
lahf
add
jg
pusha
test
outsb
jge
out
fwait
iret
lods
mov
jne
rcll
orl
iret
stc
push
inc
jmp
add
or
adc
dec
imul
or
sarl
les
lds
je
mov
std
cli
fmuls
jbe
xlat
scas
pusha
add
dec
std
pushf
shl
lds
dec
pop
sahf
xchg
jg
fld
mov
insb
sbb
int
lods
imulb
clc
stc
leave
and
and
xchg
loope
inc
int
push
shr
or
add
or
out
pop
inc
shlw
imul
sarb
add
cmp
mov
jg
add
xor
rorb
popf
or
add
notb
popf
push
xchg
adc
mov
test
ds
es
dec
rcrb
jecxz
mov
jne
lahf
pop
mov
push
shrl
or
aad
mov
or
add
enter
shrb
daa
push
jo
cmp
daa
ss
sbb
inc
sub
aad
xor
cmp
sub
addb
fnstenv
outsb
ret
insl
adc
adc
jecxz
aaa
adc
scas
jno
dec
push
push
popf
std
xor
push
dec
add
add
mov
in
xor
mov
adc
popf
ror
mov
loope
pop
adc
test
and
adc
or
ror
inc
xlat
mov
adc
add
int3
mov
xchg
pop
sbb
jecxz
fadd
insl
mull
jge
xor
cmp
ret
jmp
dec
cmp
sbb
push
fildll
add
cmp
push
mov
movsb
adc
shl
dec
mov
push
les
loope
or
fisttps
loope
cld
rclb
adc
pop
or
into
rclb
lods
jnp
in
push
lret
inc
xchg
or
popf
rcrb
xchg
sub
aam
inc
mov
rclb
mov
inc
cmp
loope
xchg
inc
mov
push
or
mov
inc
cmp
loope
jno
repnz
dec
les
adcl
inc
inc
movsl
mov
pop
das
push
iret
andb
ret
scas
les
dec
in
sti
adc
shlb
or
and
fnstsw
mov
cli
lret
mov
hlt
fidivrs
push
sub
loop
or
xor
jmp
es
mov
mov
sub
jecxz
xchg
adc
pop
fucomip
sub
imul
xchg
mov
sbb
sub
cld
lahf
aaa
sub
les
rcll
leave
ds
adcl
in
mov
jecxz
mov
jo
arpl
or
rclb
add
test
sub
rclb
jb
add
ret
mov
in
and
add
movsb
int3
inc
sti
sbb
jecxz
or
xor
mov
lret
cmp
fdivrp
mov
jmp
and
frstor
mov
cmp
mov
ds
aad
adc
ret
addr16
xchg
mov
mov
ret
sub
mov
xchg
popf
mov
cltd
rclb
or
or
subb
fldcw
cmp
push
and
inc
pop
leave
fnsave
shrb
aad
and
mov
insb
mulb
xchg
push
repnz
push
movsl
cmp
mov
mov
jp
xor
jbe
jmp
jns
push
clc
iret
add
insb
shlb
pmaxub
cmp
mov
adc
out
cmp
fimuls
push
jmp
sbb
adc
ficomps
sub
push
pop
pushf
or
sbb
sub
movsl
adc
jae
or
inc
mov
dec
mov
mov
xor
adc
push
call
mov
vinsertf128
jmp
bound
mov
fcom
ret
xor
pop
frstpm(287
inc
sub
push
dec
mov
lods
pushf
inc
out
in
lds
incl
int3
sbb
stos
test
mov
jmp
pushf
lcall
dec
rcrb
insl
add
jmp
and
scas
repnz
enter
sub
add
shl
nop
adc
push
and
stos
aaa
lock
mov
cmp
push
iret
aam
add
lahf
adc
notb
cld
out
and
push
shll
fneni(8087
sub
xor
aad
pop
shr
call
es
repz
push
loopne
lock
insb
mov
aas
jmp
push
mov
mov
jmp
fnstsw
test
shlb
mov
adc
sbb
aaa
mov
test
dec
je
xchg
cltd
adc
mov
push
add
icebp
cmp
push
out
push
mov
add
push
push
inc
nop
or
mov
xor
lock
add
sti
das
pop
mov
adc
arpl
pop
push
pop
inc
add
pop
cmp
cmpl
mov
test
push
mov
mov
sub
out
mov
mov
mov
nop
adc
or
iret
popa
lret
mov
add
xchg
into
sub
xchg
push
icebp
stc
addl
pusha
inc
pusha
scas
incl
roll
add
das
xor
push
push
jp
push
and
or
nop
scas
ret
add
adc
mov
das
and
adc
sub
scas
mov
adc
inc
add
push
rep
dec
mov
int3
je
stos
adc
sub
sub
mov
jne
js
pop
mov
push
out
test
jge
fdiv
add
mov
nop
imul
sub
andb
rorb
repnz
in
lret
inc
mov
rcrb
push
bnd
sub
mov
loopne
cld
mov
add
adc
addl
fcoml
jns
sub
outsb
sbb
add
ret
dec
or
mov
xchg
cwtl
mov
cltd
pusha
mov
shl
mov
mov
or
sub
add
add
sub
aaa
add
int3
out
loopne
and
mov
je
xchg
bound
out
cmp
call
jae
mov
pushf
sbb
xor
imul
adc
mov
add
mov
call
fcomi
orl
mov
ret
mov
adc
xchg
mov
sub
jo
push
xorb
xchg
filds
in
mov
or
mov
fwait
iret
in
bnd
add
sbb
add
ja
sbb
push
fsts
jns
lcall
xor
adc
cltd
add
adc
lods
dec
add
lcall
adc
ret
in
test
fildl
dec
rcrl
mov
sub
ret
stos
call
inc
stos
es
mov
add
mov
iret
xchg
or
hlt
sbb
repz
adc
ljmp
lret
xor
fbstp
push
adcl
sub
test
aad
sbb
cmp
mov
or
clc
mov
adc
sbbb
inc
das
sbb
mov
or
sbb
stos
and
jo
push
add
imul
mov
les
test
sub
xor
rcll
add
or
ret
mov
movsb
pop
or
adcb
xchg
mov
sbb
repnz
sarb
sub
jl
shll
mov
ret
jecxz
scas
pop
jmp
pop
add
mov
sbb
push
pop
sub
out
cs
loopne
add
jns
dec
push
xchg
xor
push
or
adc
rcrb
sub
push
fwait
stc
lds
loop
int3
cmp
test
fisubl
fld
aaa
mov
jmp
add
push
lcall
jmp
mov
stos
push
ja
mov
ss
mov
mov
jne
jle
test
test
fwait
shll
mov
adc
sbb
es
sub
pop
outsl
and
mov
daa
mov
lds
sbb
add
rcl
hlt
out
cmp
pop
into
outsb
inc
addr16
sbb
in
mov
popf
rorb
icebp
scas
call
hlt
or
and
int3
scas
push
call
dec
push
in
jge
js
int3
or
into
lret
rol
test
dec
adc
mov
fcmovb
add
aas
icebp
out
fsubs
pusha
or
pop
mov
fcmovb
ss
mov
inc
pop
ret
sbb
insb
inc
jne
out
frstor
inc
pushf
and
mov
in
pop
subl
pop
call
stc
cmp
push
outsb
fmulp
jecxz
adc
call
test
cld
adc
sbb
or
cmp
cmp
fldt
ret
dec
and
push
and
aas
fwait
shl
in
fisttpl
inc
shlb
popf
dec
mov
inc
ret
jmp
push
dec
push
pop
jo
iret
pop
jecxz
add
cmpb
in
ret
cmp
push
aad
cmp
out
nop
and
dec
xchg
hlt
mov
gs
mov
nop
loopne
sti
pop
push
jne
add
lret
repnz
lcall
or
ret
les
inc
ret
or
lods
add
lock
jg
es
xor
mov
int3
jae
cld
sub
outsl
and
inc
ret
leave
xchg
fnsave
dec
clc
or
pushf
cld
adc
fiaddl
add
shr
mov
xor
rcr
rclb
stos
negb
cld
popf
and
ret
xchg
mov
mov
sbb
bound
sar
mov
xor
mov
clc
mov
push
out
cmp
pusha
or
xchg
es
enter
mov
jmp
fnop
std
daa
pop
jmp
xor
int
or
les
mov
jmp
scas
sbb
test
loopne
or
pop
cld
pop
jl
int3
imull
sbb
xlat
arpl
in
mov
sub
pop
in
leave
dec
fistpll
out
lret
rol
roll
push
pop
ret
loopne
or
ret
rorl
pop
in
push
xor
loopne
je
mov
xchg
mov
shll
rcr
inc
adc
jp
out
jecxz
addr16
hlt
jmp
nop
add
adc
psllq
or
push
cmp
scas
xchg
add
adc
cltd
neg
adc
iret
or
pop
push
inc
lret
mov
xor
cmp
rcrb
pop
sbb
dec
mov
mov
mov
ja
sub
mov
sbb
and
cwtl
mov
sub
dec
sti
jbe
test
dec
pop
push
cli
icebp
push
ret
ljmp
sahf
testl
icebp
sub
ret
leave
into
jnp
inc
sub
hlt
je
push
repnz
ljmp
sar
xchg
cld
in
in
cwtl
ljmp
loope
ljmp
lock
les
ja
push
test
imul
test
push
mov
push
mov
shrl
int3
or
lods
les
xor
cmp
jmp
dec
and
sahf
mov
lret
fdivrl
nop
sub
pusha
push
lods
push
inc
push
xchg
inc
clc
inc
cwtl
shrb
gs
lea
insb
jbe
mov
sub
add
ret
push
push
sub
stos
add
add
sti
stos
test
pop
or
jb
sahf
jmp
insl
jge
xchg
jnp
aaa
pop
loopne
clc
pop
mov
bound
cmp
insl
stos
andb
add
pop
add
xchg
repz
rclb
lock
or
add
int
mov
ret
dec
mov
icebp
or
inc
xlat
insl
and
call
pop
mov
add
pop
xor
lea
les
xlat
int3
cmc
push
cmpsb
je
decl
into
popa
push
or
int3
jle
and
outsl
loop
push
xchg
test
jmp
pop
push
mov
loope
stos
mov
dec
cwtl
mov
lahf
sub
das
lret
nop
aad
mov
shll
dec
cmp
mov
adc
cwtl
mov
and
sub
test
pushf
lret
jne
sub
dec
jmp
mov
or
lret
call
in
or
push
cmp
sahf
sbb
in
and
cwtl
mov
ret
sub
adc
aam
sub
dec
mov
std
ds
add
cmp
push
fcoms
adc
stos
xchg
ret
stc
or
or
icebp
xchg
gs
push
mov
and
xlat
push
loopne
out
jp
dec
cmc
pusha
cs
and
pushl
pop
aam
inc
pop
xchg
xor
nop
mov
jp
test
push
mov
cs
stos
addr16
or
or
mov
pusha
repz
inc
jb
add
pop
add
or
movl
inc
lds
out
push
xlat
fisubrs
negb
lods
scas
dec
cmp
dec
gs
in
test
dec
mov
and
xchg
mov
call
je
nop
adcb
push
and
repz
cmp
pop
cmp
mov
clc
shrb
sub
xor
bnd
add
test
mov
mov
sbb
dec
hlt
les
addb
call
rclb
rcrl
cmp
aam
je
cli
push
cwtl
gs
fsts
push
xchg
inc
lahf
xor
adc
enter
int3
dec
or
or
adc
les
into
test
nop
fwait
cmp
jecxz
popf
stos
adc
xchg
sbb
ret
ljmp
out
push
sub
dec
adc
mov
inc
and
sub
cmp
adc
cltd
fiadds
rcrb
test
mov
sti
push
movsb
loopne
test
mov
addb
jmp
or
ror
dec
fnop
in
aam
outsb
loop
mov
hlt
push
cmpps
and
ret
daa
xlat
orb
jb
in
mov
cmc
adc
dec
fs
loopne
jnp
adc
xchg
mov
call
xor
cmp
add
rcrb
push
cmpsl
cmpsb
mov
or
mov
add
sarb
mov
xchg
and
pop
add
stc
dec
xor
and
in
mov
jecxz
fsin
mov
jl
pop
cmp
add
int
mov
ret
clc
or
fidivs
pop
bound
sub
adc
clc
jmp
or
pop
fwait
pop
mov
jl
leave
push
and
shrl
and
xrelease
sub
sbb
adc
or
pop
nop
sbb
loopne
lea
add
mov
loope
cld
push
sub
sbb
popf
push
or
insb
jg
sbb
xor
sbb
jge
aam
add
rclb
mov
fstpt
lods
sbb
sbb
cld
sbb
mov
mov
push
mov
xor
into
hlt
xchg
filds
ja
mov
les
lea
inc
shrb
subb
fstp
push
cld
pop
xor
sub
jbe
cs
jo
ja
pop
pop
push
mov
out
mov
lahf
pop
add
imul
je
cmp
cmpb
sbb
ds
add
ret
mov
mov
fldlg2
sub
aas
jg
mov
fnstsw
loope
popl
pop
mov
sbbl
add
arpl
dec
lret
ljmp
mov
cld
outsl
in
sbb
lret
pop
and
and
xchg
ja
in
xlat
mov
xor
lds
dec
xchg
xchg
lahf
sbb
cmp
dec
fnstenv
enter
or
fwait
movsb
sahf
cmp
jecxz
dec
sbb
int
repz
xchg
aad
jno
jge
xor
les
push
sbb
mov
repnz
rol
inc
jbe
adc
das
lods
fists
xor
lods
repnz
pop
repnz
scas
popf
dec
fdivp
neg
sub
add
push
dec
jecxz
fadd
js
fmull
dec
push
dec
sub
hlt
lcall
popf
cmpb
mov
pushf
xor
push
inc
out
adc
ss
arpl
pop
pop
add
fsubs
inc
in
int3
xor
mov
xchg
mov
aaa
and
pushf
iret
in
xchg
call
mov
or
or
cli
lods
popl
add
xor
mov
movb
shr
shl
push
jne
xor
nop
sub
pop
cmp
fwait
les
jge
mov
int3
daa
rol
or
stos
mov
rorb
push
nop
ds
in
sbb
ret
mov
lahf
lret
pop
les
jo
ss
lret
cs
mov
push
iret
divb
jae
sub
pushl
cltd
adc
sar
adc
mov
add
mov
fwait
mov
in
push
sub
or
ffree
rclb
mov
mov
xchg
je
jmp
cmp
ret
mov
ret
loopne
add
out
push
jl
add
es
and
adc
xlat
in
addr16
arpl
mov
pop
xchg
dec
test
jg
adc
stos
mov
pop
pusha
xchg
icebp
inc
test
jb
mov
rcr
push
stos
mov
lock
jae
fcomps
mov
movsb
pusha
jle
sbb
pop
iret
jp,pt
imul
mov
pop
rorb
aam
push
xchg
fldl2e
or
pop
mov
inc
fs
lret
lcall
push
jl
xchg
add
cmp
enter
pop
fnstenv
repnz
fcom
fwait
loopne
loop
int3
mov
aad
cmp
inc
stos
call
adc
cmc
aad
lock
xor
xchg
push
loop
adc
in
fwait
cltd
loopne
popf
int3
sub
add
daa
lret
aaa
xorl
add
push
scas
xor
mov
xchg
popa
add
psubw
or
rolb
mov
int3
xchg
add
xchg
hlt
sub
and
add
test
mov
push
fcom
or
adc
cmc
sbb
fdiv
movsb
loop
mov
imulb
sbb
sbb
push
lcall
jnp
cli
dec
xchg
push
pop
sbb
ficoms
cmpsb
push
nop
repnz
fldenv
add
mov
jmp
scas
shr
loopne
int3
xor
xorb
lahf
and
xchg
clc
stc
push
mov
sbb
cld
movsl
cmp
inc
pop
sti
or
fidivs
adc
xchg
jp
add
int3
xchg
cmpsl
pop
ja
pop
scas
adc
push
insb
gs
pop
push
dec
lahf
stc
or
inc
out
insl
aas
dec
mov
jne
dec
mov
clc
data16
xchg
pop
sti
cmpsb
les
insb
rolb
nop
orb
aam
movsl
add
pop
adc
pop
cmp
fbstp
sbb
not
xchg
dec
add
lret
fwait
mov
out
xchg
jg
add
add
out
loop
faddl
int3
std
fisubs
pop
cmp
out
mov
mov
add
inc
leave
sub
dec
push
out
in
dec
mov
in
testl
jnp
fisubrl
insb
adc
push
les
mov
jne
popf
lock
and
out
clc
es
pop
xchg
cmp
mov
jle
mov
jg
add
enter
add
or
jnp
pushf
stos
loopne
mov
mov
push
jne
push
add
fs
xchg
dec
in
mov
rorb
lea
inc
or
movl
inc
lret
movsb
test
dec
add
add
shl
shl
cmp
cs
repz
sbb
cmp
rcrb
add
sbb
sti
add
les
xchg
sub
or
inc
hlt
sbb
adc
cmpsl
mov
fnstenv
stc
fisubrl
adcl
push
in
jae
sbbl
dec
mov
stos
les
add
pop
sbb
or
movsb
ljmp
das
enter
out
push
pop
inc
xchg
push
leave
or
lret
sbb
pop
xchg
aad
les
stos
movsl
hlt
inc
dec
sub
xor
jae
adc
insl
pop
ret
or
ror
inc
gs
mov
jb
mov
ds
ret
adc
inc
mov
dec
mov
jge
dec
lds
xor
lds
dec
xchg
outsb
cld
cld
sbb
cs
adc
lret
arpl
mov
or
fwait
jmp
in
mov
out
rolb
pop
mov
or
mov
into
inc
mov
or
add
add
xchg
mov
rorb
in
sub
std
out
lds
pop
cs
xchg
call
pop
jecxz
call
mov
repz
aas
cli
mov
and
roll
in
aaa
jge
jo
dec
mov
int
ljmp
and
dec
cmpsl
or
dec
inc
xchg
leave
xor
pop
mov
add
jmp
pop
shufps
popf
and
or
lods
adc
lcall
cld
aam
in
mov
sbb
or
icebp
xchg
add
adc
arpl
dec
adc
inc
lods
call
dec
hlt
sahf
fs
or
idivl
push
shl
xlat
addb
call
sti
jp
jecxz
add
call
popf
cmpsl
dec
adc
jl
xor
lea
adc
xor
inc
jl
push
adc
jg
out
ret
xchg
cld
fists
push
cmp
cmp
orl
mov
mov
or
jecxz
lea
adc
jb
adc
push
inc
cmp
stc
push
int
out
sar
or
inc
fwait
shl
push
iret
push
push
xchg
fdivrl
lock
sbb
jbe
int
in
mov
pop
pop
sarb
into
or
shrb
dec
adc
pop
dec
pop
adc
sub
enter
faddl
push
inc
pop
or
mov
jmp
packsswb
rcll
pop
ret
cmpsb
pop
fwait
xchg
adcl
cmp
imul
add
leave
and
push
pushf
mov
mov
in
shl
orb
cmp
outsb
out
cmp
jmp
cmp
and
inc
mov
push
cltd
or
xorb
jmp
sub
sbb
loop
sub
ljmp
icebp
sbb
push
inc
lods
repnz
shlb
inc
mov
int3
hlt
mov
dec
mov
das
in
adc
xchg
add
hlt
cmp
cmp
push
pop
xchg
xor
sarb
xor
push
mov
xchg
push
adc
pop
jmp
subb
pop
xor
rclb
push
mov
js
inc
mov
add
mov
jl
jae
pop
insb
mov
add
mov
or
test
sahf
adc
pop
mov
pushf
adc
rolb
jae
mov
add
mov
popf
push
xchg
ret
pop
cmp
inc
ja
nop
cmpsl
inc
sub
jae
dec
dec
sub
and
sub
jg
je
mov
and
into
into
inc
cmc
in
jbe
roll
stc
hlt
enter
pop
push
sub
mov
rorl
inc
pushf
or
roll
loopne
cld
mov
scas
cld
dec
aas
jnp
jmp
dec
inc
mov
mov
jne
movsl
adc
dec
scas
in
push
or
in
add
iret
push
cmpsl
jnp
mov
lods
clc
inc
sub
adc
stc
stc
sub
fadds
andl
les
add
ficompl
enter
in
adc
pusha
nop
add
and
sub
hlt
add
xchg
fcompl
leave
pop
adc
and
in
xchg
push
fidivrs
std
out
cmpsl
out
adcl
in
fcom
mov
sbbl
pop
loopne
adc
xchg
push
mov
insl
and
mov
int3
enter
rorb
movsb
add
int
or
adc
push
ljmp
sbb
inc
or
mov
sub
pop
and
hlt
js
cmpsb
sbb
pop
xor
adc
or
pop
idivb
dec
lahf
or
mov
sbb
pop
adc
leave
rorl
sahf
adc
xchg
test
xchg
adc
ret
cli
aam
sbb
adc
in
pop
icebp
inc
popf
in
das
mov
cltd
cmp
push
adc
movsb
repnz
mov
movups
cmp
nop
bound
lret
or
sub
ja
add
fstpl
inc
cli
fnstsw
aad
test
or
jns
pusha
insb
sub
leave
dec
or
fistl
call
push
sub
aaa
jno
push
mov
pop
sbb
scas
cmp
in
bound
pop
test
lret
or
push
mov
ficompl
aas
add
ret
xor
push
add
cmp
lahf
sbb
arpl
pop
outsl
xor
inc
jbe
jl
std
mov
cmpsb
pusha
fdiv
outsl
or
xchg
xchg
lret
loop
out
in
lods
push
jp
cmp
pop
mov
push
sub
push
ljmp
stos
xchg
hlt
in
xchg
sbb
iret
push
push
sub
push
mov
or
shlb
in
loopne
pop
fnstsw
sub
and
lods
fimuls
stos
movsb
iret
insl
pop
mov
push
sbb
lahf
push
xor
int3
test
adc
xor
jnp
jo
int3
nop
repz
mov
mov
rorl
xor
hlt
orb
mov
dec
xchg
mov
xchg
sbbl
adc
xor
jg
sbb
lret
jnp
push
cmpsb
frstpm(287
cld
xor
fdivl
fsubl
pop
daa
mov
sbb
adc
push
imul
ds
mov
jbe
xor
dec
std
pop
jmp
nop
or
mov
or
ret
cmp
fwait
push
les
jg
lret
adc
lret
mov
incb
enter
pop
popf
adc
xor
jnp
push
aad
shrl
inc
icebp
sub
js
adc
lods
sub
or
ja
adc
ret
clc
adc
loope
sub
aas
add
inc
int3
loopne
add
adc
repnz
add
mov
mov
scas
inc
lahf
adc
les
cwtl
inc
int3
mov
sub
mov
enter
dec
push
inc
mov
mov
jg
adc
dec
dec
sub
inc
dec
xlat
in
imul
subb
pop
bound
sarb
lahf
shr
adc
sub
jae
sbb
repnz
xor
push
into
addl
lods
push
dec
imul
xor
adc
pop
clc
popf
and
int
or
mov
adc
sbb
inc
int3
call
adc
addps
or
or
ja
repz
mov
fcoms
adc
icebp
or
in
adc
adc
or
sub
out
enter
into
push
or
cmp
jmp
inc
les
add
hlt
data16
fmull
out
inc
adc
mov
imulb
dec
fucom
cld
push
nop
jg
fiaddl
push
mov
ffree
fwait
das
lods
insb
dec
xorb
mov
xlat
xorb
paddq
jo
pop
cmpsl
loope
or
subl
jg
sub
or
aas
mov
loope
nop
sub
or
adc
ret
or
jg
lret
ja
mov
sbbl
loopne
and
pop
adc
adc
shl
mov
mov
lahf
movsb
push
pusha
ja
jae
sahf
add
pusha
idivl
iret
cmpsl
popf
lock
push
rolb
push
mov
icebp
mov
adc
mov
xor
lods
pushf
iret
or
fdiv
sub
test
lahf
cmp
je
in
or
pop
fwait
mov
movsb
jl
mov
fisubrs
rclb
jb
in
call
fiaddl
cld
jmp
cmp
and
fistpll
in
lahf
mov
stos
mov
jo
mov
jp
or
ljmp
les
or
xchg
push
adc
adc
push
jmp
push
or
sub
ret
movsb
fistl
inc
mov
int3
cwtl
lds
rclb
jmp
mov
ja
adc
or
push
in
mov
inc
jle
push
sbb
leave
int3
popa
mov
sbb
push
jnp
inc
xchg
mov
mov
push
ja
add
ss
movsl
movsb
rcrb
sbb
sub
repnz
mov
repz
hlt
and
adc
cmp
cmpsl
mov
lods
mov
jne
addr16
repnz
mov
sbb
rorb
or
fmuls
jle
fwait
inc
cli
jae
adc
cli
cmp
cmpl
jl
loope
in
aad
dec
add
sub
ret
loopne
and
in
push
addr16
xchg
jmp
adc
dec
dec
rorl
clc
leave
stc
push
xchg
add
sub
int3
notl
mov
mov
add
outsb
xor
and
lods
sbb
push
adc
cmp
rcll
push
imul
push
jmp
stc
fmuls
or
out
sub
ja
mov
addl
sub
inc
push
dec
sub
mov
lahf
jmp
lds
jmp
popf
movl
or
fldt
dec
mov
push
adc
push
mov
mov
call
scas
push
inc
adc
fsubl
push
jnp
inc
push
mov
mov
inc
push
jp
jns
sub
fst
add
adc
mov
clc
inc
xchg
lahf
fcomp
rclb
mov
in
ficoms
sbb
rolb
fdivrl
sbb
dec
stc
sbb
adc
sub
sub
sar
mov
jp
adc
dec
or
aas
mov
pop
aaa
cmp
ficoml
add
out
mov
and
mov
adc
stc
rol
out
push
dec
add
or
xor
icebp
sbb
jb
mov
or
cwtl
mov
lods
push
mov
hlt
loope
and
stos
aad
dec
mov
add
shl
cmp
sbb
scas
cmp
xlat
sbb
roll
imul
call
push
xor
mov
or
aad
or
orl
mov
out
test
jbe
cmp
dec
fmuls
icebp
mov
add
add
mul
faddl
test
into
adc
mov
aad
add
jecxz
mov
or
mov
add
clc
pop
push
inc
and
pop
dec
rcl
pop
loop
sar
mov
addr16
clc
test
ret
in
insb
sbb
mov
in
shr
xor
sbb
fwait
inc
sbb
mov
arpl
cmp
bnd
adc
sub
jmp
in
mov
call
dec
movsb
in
scas
test
mov
and
add
mov
orb
std
sbbb
frstor
sbb
lcall
push
pop
mov
xor
add
xchg
jmp
or
je
xor
out
in
add
mov
mov
fcoml
popa
in
or
sahf
push
repz
mov
dec
mov
lods
xchg
cmpsb
dec
sbb
popa
push
js
pop
out
fwait
loope
sub
pop
sub
mov
and
sub
je
xchg
stos
xchg
lahf
ds
js
dec
push
inc
dec
rorl
push
enter
or
sub
ret
mov
pushf
cmp
ret
push
sub
inc
add
add
lahf
push
add
mov
add
add
lock
in
cmpsl
push
xor
sarb
ret
mov
push
in
adc
cld
mov
call
and
into
lcall
adc
lret
xchg
inc
cmp
sti
adc
stos
mov
push
or
pusha
fs
aad
push
pop
js
xchg
sbbb
add
out
dec
hlt
fisttps
pop
and
lret
xchg
hlt
and
sarl
xor
adc
and
insb
mov
roll
xchg
and
dec
orl
sahf
in
into
fsts
and
lock
xchg
test
dec
in
int
add
arpl
lods
jae
int
cmpb
setnp
or
add
xor
adcb
or
sbb
sbb
jne,pt
sub
or
out
mov
or
int3
cld
xor
ja
dec
push
xchg
cmp
out
jecxz
add
pop
ret
fstpt
push
in
push
nop
stos
repnz
repnz
cmpb
add
mov
lods
cmp
push
or
jg
icebp
mov
aad
outsb
mov
rcll
add
in
dec
cmp
insb
scas
dec
rcrb
adc
call
mov
test
aad
push
ret
sub
je
sbb
clc
pop
dec
xor
popf
jno
jmp
lret
adc
rcrl
jae
inc
dec
add
out
inc
add
sub
insl
iret
jne
ja
dec
mov
cs
iret
add
pop
shll
push
into
jo
out
hlt
inc
and
clc
ret
aad
dec
xor
push
mov
cli
je
sub
jge
lods
fidivrl
in
add
insb
mov
out
or
mov
fsubs
sub
mov
pop
subl
xchg
jne
adc
movsl
mov
push
pop
sti
lock
loope
dec
in
add
pop
movsb
lret
sarb
push
hlt
ljmp
add
out
xor
in
fidivrs
in
ss
mov
aaa
into
adc
cmp
push
adc
clc
push
repnz
psrlw
jne
sub
fisubrs
out
rcr
icebp
sbb
repz
jge
adc
mov
out
mov
sbbl
andb
lods
leave
outsl
repz
or
outsb
add
enter
int3
mov
sub
nop
or
nop
xor
aad
insb
shr
sub
fmull
fstpl
dec
cmp
negl
filds
lea
daa
loop
mov
fwait
xchg
adc
xchg
fdivs
fildll
mov
call
gs
icebp
mov
in
mov
add
xor
fstpl
pop
dec
lahf
add
ret
ret
sbb
mov
adc
sub
rcrl
xor
push
icebp
adc
movb
adc
adc
lret
mov
jg
add
ret
in
or
repz
vpmacsdqh
mov
add
add
sub
sbb
sbb
sub
add
cld
xchg
rcll
stos
into
fnstcw
hlt
xchg
je
push
dec
in
pop
cwtl
icebp
out
icebp
repnz
rcr
or
call
enter
cld
adc
add
movsb
aam
lahf
add
jmp
into
enter
cmp
mov
les
inc
add
inc
dec
int3
xor
pop
cltd
out
icebp
cmpb
rorb
int
js
loopne
lock
std
mov
insb
mov
adc
repnz
sarb
mov
add
fistps
lret
push
imul
mov
push
or
mov
scas
or
inc
and
hlt
mov
popf
sarb
xlat
adc
add
clc
sbb
leave
loopne
mov
cld
loop
lret
roll
ja
dec
adc
arpl
mov
xlat
cmp
insb
adc
iret
ret
add
add
push
xchg
adc
or
sbb
aaa
pop
mov
xor
adc
ret
and
sub
mov
out
pop
mov
xchg
test
das
mov
xchg
jmp
cli
sahf
mov
les
push
xor
pushf
sub
xchg
mov
inc
fimuls
in
cld
fsubs
loopne
out
push
push
mov
xchg
adc
pop
dec
ss
bound
sub
fdivl
loope
out
inc
cwtl
cli
mov
mov
mov
mov
clc
sub
nop
xchg
jnp
incb
jae
dec
push
mov
lock
push
bound
add
or
icebp
jno
add
adc
nop
cmp
mov
int3
into
mov
faddp
in
xor
pushf
cwtl
out
add
je
iret
int3
and
cld
jae
sub
jl
jae
in
arpl
or
sahf
ret
lock
add
push
cltd
sbbl
les
push
dec
mov
jmp
lret
xchg
pushf
and
jmp
in
enter
or
icebp
ret
push
repz
mov
or
inc
push
lret
repnz
pusha
xor
pop
stos
sarl
fcomi
pop
repnz
dec
push
jb
xlat
lret
int3
enter
inc
adc
dec
mov
ds
adc
sub
mov
xor
xchg
out
add
enter
jno
or
xlat
cmpsb
mov
add
sub
jmp
sahf
pop
aad
jg
dec
jg
cld
cmp
or
xchg
jbe
mov
bound
add
dec
sbb
mov
imul
ds
inc
xchg
push
sbb
arpl
das
mov
pop
sbbb
add
addb
aas
jae
outsl
adc
test
sbb
int3
mov
addr16
addr16
outsb
aad
jle
js
xchg
sbb
xor
push
int3
push
mov
pushf
add
aad
cld
sub
ficomps
ja
mov
adc
frstor
aam
sub
dec
leave
enter
dec
jge
pop
add
and
add
outsl
fmulp
dec
add
int
or
out
xor
jns
sub
in
adc
bound
adc
shlb
fwait
iret
in
loopne
gs
mov
movsl
pop
add
push
add
jecxz
mov
stc
push
pop
dec
jmp
into
jg
out
add
pop
push
push
mov
push
xchg
mov
les
cld
pop
or
decl
or
lods
mov
ficomps
adc
xchg
js
jae
xchg
outsb
pop
sbb
push
mov
in
lods
int
cmp
in
sub
add
add
fwait
push
ret
pushf
or
and
push
test
aaa
pop
hlt
repnz
enter
sub
dec
aad
and
fdivs
rcll
arpl
dec
in
test
movsb
mov
mov
popf
movsb
inc
add
xlat
bound
in
push
jmp
ret
sbb
and
mov
push
lods
dec
sbb
push
in
imul
add
loop
loopne
cmc
dec
xor
sti
mov
sti
sti
inc
or
adc
or
mov
mov
ja
pushf
sbb
ret
or
pushf
or
decl
loope
rcrl
and
dec
xchg
in
loopne
jge
pop
and
insb
mov
fidivl
fsts
ja
sub
gs
mov
aam
cs
pop
sub
push
jae
mov
sub
lods
iret
xchg
out
add
cmp
cmp
dec
adc
mov
sbb
arpl
filds
rolb
mov
push
adc
push
push
aad
jns
cwtl
rcll
xchg
jns
or
mov
sbb
test
nop
mov
xchg
xlat
push
ret
jmp
popf
arpl
movsb
loop
inc
mov
cwtl
xor
dec
mov
fnstsw
xor
pop
mov
jmp
jnp
or
fisttpl
add
dec
dec
orl
xchg
and
test
into
or
or
lea
add
cmp
xor
repz
pop
adc
idivb
clc
flds
loopne
and
push
fmulp
adc
fadd
add
jae
cwtl
test
sarb
int3
mov
push
mov
mov
leave
lock
leave
repnz
xor
incl
lods
stos
fstpt
and
call
adc
rorb
rol
enter
in
mov
mov
adc
sbb
add
nop
stos
aas
cmp
mov
clc
popa
inc
mov
repz
cld
aas
mov
mov
dec
mov
add
sbb
out
sub
jle
inc
jecxz
daa
cld
sub
xchg
push
hlt
lahf
jg
je
mov
popa
test
pop
rcrb
xor
cmpsb
call
jle
sarl
push
xchg
dec
stos
jg
mov
add
pop
cli
stc
adc
outsb
push
xor
xor
pop
mov
sahf
jl
inc
inc
lods
add
dec
icebp
cltd
leave
add
add
rcrb
push
sbb
add
les
pop
jb
adcl
fidivrl
test
cs
into
in
lret
cltd
or
pop
adc
test
pop
js
pop
adc
ret
stos
mov
xor
ret
add
bnd
ds
lret
hlt
inc
mov
popf
sbb
cwtl
xor
bound
dec
pop
dec
or
test
mov
aas
inc
or
aaa
sub
cmp
xor
test
std
int3
sbb
imull
out
insl
ret
push
inc
cmp
hlt
push
sub
mov
sbb
xchg
sub
bound
jne
lods
dec
mov
loopne
clc
pushf
lods
mov
xchg
mov
ss
mov
adc
push
mov
sub
fimull
ficomps
xchg
fiaddl
adc
lea
sahf
popa
cld
dec
or
jo
bound
cmp
lret
in
adc
mov
lock
fmuls
and
mov
popf
jns
sub
stos
rcr
push
mov
pusha
push
adc
les
iret
cmp
jnp
cmp
out
insl
push
or
lods
mov
lret
out
call
imul
in
inc
out
les
je
lret
icebp
adc
cmp
mov
sub
out
or
ss
scas
jle
loope
test
mov
fs
inc
lods
sbb
fildll
sbb
sub
in
lds
sarl
xchg
push
sub
inc
test
mov
ret
sbb
sarl
push
sub
push
ret
fwait
call
mov
push
push
addl
sbb
sbb
xchg
xorb
les
insl
xchg
inc
mov
mov
mov
out
ja
adc
mulb
cmp
sub
inc
frstor
lock
adc
rcrb
out
fimuls
repnz
aad
outsb
add
pop
dec
inc
jmp
leave
or
pop
adc
sbb
loopne
push
in
ret
aas
lret
sti
fidivl
out
cmpsb
push
jbe
jl
jns
outsl
cmp
push
push
mov
push
xlat
andl
dec
adc
gs
mov
pop
ds
or
sub
push
mov
cmp
rcl
xchg
arpl
add
add
mov
stos
cli
sbb
jo
outsb
fsin
mov
sbb
jg
mov
adc
mov
sti
ljmp
insb
xchg
add
roll
aad
stc
and
js
push
mov
test
insl
xchg
lcall
rorl
daa
es
mov
cmc
push
scas
cwtl
sbb
mov
ljmp
nop
ljmp
jmp
clc
adc
xorb
mov
scas
lods
adc
cs
test
and
add
pop
hlt
mov
xor
int
stc
cmp
jg
push
mov
sub
cltd
aad
pop
fsubr
jne
sarb
lods
in
pop
gs
pop
inc
sub
cs
out
mov
iret
faddl
addb
pop
xchg
add
mov
imul
pop
sub
movb
fmull
cmp
pop
cmp
or
aad
sbb
movsb
jne
dec
fdiv
ds
clc
jmp
cmp
and
in
stos
call
aad
data16
ljmp
ret
imul
xchg
and
ds
mov
push
push
mov
lahf
sbb
sbb
or
gs
loopne
or
mov
xor
sbb
adc
add
out
lods
pop
fnstcw
out
sbb
repz
sub
push
add
or
mov
jmp
daa
push
xchg
sub
orl
pop
aaa
xchg
jae
hlt
out
cmp
inc
xlat
pop
enter
inc
mov
jge
cmc
xor
mov
dec
add
loope
mov
ds
je
xlat
push
out
mull
iret
repnz
rcrb
pop
mov
push
jge
xchg
repz
stos
cmp
lahf
mov
into
and
sbb
loope
sbb
pusha
push
mov
or
into
cmp
xor
or
shrl
push
clc
ret
xchg
popf
mov
fs
jne
xchg
and
loope
dec
or
xchg
sar
loopne
add
or
lahf
mov
lods
outsl
fsubrl
cmpsb
mov
nop
jo
cmp
mov
xor
nop
ds
jo
test
inc
xlat
fldt
mov
ffree
sbb
icebp
and
loop
inc
add
mov
cmp
jmp
pop
loope
and
adc
or
fisubrs
mov
out
lret
inc
je
fists
imul
mov
lds
sbb
repnz
pop
cmp
mov
adc
in
pusha
jne
add
rcr
xor
and
sbb
stos
xor
fisubrs
es
fcomi
or
insl
cmp
pop
loopne
xor
repnz
dec
mov
es
inc
pusha
inc
popa
xchg
mov
adc
lods
push
out
lock
bound
stos
cmp
mov
xchg
out
adc
dec
cli
rclb
push
lcall
add
add
cmc
pop
fwait
jbe
push
adc
inc
jo
xchg
mov
pop
inc
ljmp
mov
enter
stos
push
push
ret
pop
std
je
or
popf
lock
ror
dec
test
adc
leave
in
jecxz
mov
lret
mov
add
cmp
punpckhwd
clc
sub
movsb
cmp
mov
jnp
push
mull
mov
jl
inc
xor
sahf
stos
jl
lods
adc
fnsave
xorb
addl
out
mov
and
sub
stc
ss
insl
sbb
out
fcoms
mov
and
hlt
jle
jecxz
shrb
jo
in
sub
ret
jae
pop
push
push
pop
mov
imul
pop
add
mov
subl
sbb
arpl
lods
jbe
mov
pushf
xchg
pop
inc
add
mov
add
icebp
jle
mov
inc
mov
adc
xor
push
bound
mov
sub
inc
sub
test
inc
lods
adc
push
adc
adc
push
sub
jg
add
ds
aad
pop
enter
shll
out
fisubrs
movsl
bound
hlt
pop
insl
ljmp
loopne
xor
adc
pop
inc
mov
out
jmp
mov
stos
add
hlt
dec
dec
test
test
imul
mov
lretw
mov
popa
xchg
push
sub
jo
adc
xlat
add
mov
pop
xor
les
cmp
cmp
fmull
enter
mov
arpl
jb
add
fldenv
mov
iret
jo
add
dec
add
adc
in
addr16
test
xchg
push
or
jg
jp
pop
decl
enter
lds
aad
insl
ss
xor
xchg
cmp
in
imul
inc
xor
jo
add
in
jl
mov
sub
mov
inc
gs
adc
sub
lds
pushl
shlb
cmp
dec
scas
in
and
mov
int3
movsb
xor
mov
stc
push
adc
push
adc
add
sub
xor
sub
add
xchg
and
inc
cmp
add
or
mov
add
lret
adc
or
dec
in
cmp
jmp
cmp
or
in
sub
in
ret
push
xor
pop
mov
ds
lock
fmuls
in
les
jb
aaa
mov
or
sub
aas
dec
pop
out
cmp
sbb
sub
outsl
cld
out
lock
push
stos
cmp
fcomps
dec
add
dec
gs
iret
mov
dec
jne
cli
dec
sbb
and
aad
imul
leave
adc
jmp
into
or
fprem
and
movsl
ficoms
lahf
mov
jbe
daa
ss
mov
jg
dec
mov
and
mov
cmp
mov
clc
lods
repz
ret
test
pop
inc
ret
add
jnp
std
in
push
pop
or
pop
rcrb
aam
fstl
dec
out
stos
jb
int3
les
imul
int3
rcl
in
jmp
cmpb
into
add
js
xor
cld
xor
adc
popf
jne
cmp
pop
popf
cltd
clc
xor
loopne
xor
dec
inc
push
adc
dec
sbb
mov
push
sub
inc
mov
fimuls
pop
jne
out
lret
xor
int3
sub
inc
push
add
lcall
sbb
pop
sub
xchg
imul
sti
mov
in
ljmp
dec
or
sti
or
and
out
mov
jno
outsl
repz
lret
out
popa
addb
mov
js
sbb
sbb
or
mov
lods
repnz
adc
dec
inc
clc
into
inc
sti
leave
in
sub
int3
jmp
xchg
sbb
outsl
orb
shll
pop
mov
xor
xchg
mov
adc
out
repz
mov
dec
aad
les
mov
push
fsts
mov
imul
lahf
fsubs
cmp
out
mov
out
add
testb
sbb
dec
repnz
adc
mov
cmc
cmp
add
or
lret
rcr
adc
sub
das
loopne
sti
jb
push
popf
mov
sub
and
fstpl
mov
mov
push
push
jecxz
or
pushf
into
mov
loop
jmp
test
testb
cmc
loopne
data16
jl
call
mov
or
mul
iret
sbb
movl
inc
push
loopne
xchg
fadds
js
stos
add
pop
rorb
adc
cmp
adc
cmp
push
jp
repnz
into
ds
pop
repnz
and
or
and
or
and
sub
jnp
mov
and
sub
and
xchg
repnz
adc
mov
cmovl
mov
cld
push
inc
xor
aad
xchg
xchg
into
jmp
pushf
mov
test
or
icebp
add
pop
add
jbe
pop
aad
xchg
pop
insl
repnz
cmpsb
pop
cwtl
outsl
add
mov
or
int
jae
sub
jno
dec
sub
jns
je
inc
ss
xor
xchg
int3
push
jmp
mov
decl
jnp
push
aas
push
inc
or
pop
jae
mov
jbe
mov
std
repnz
cmp
xchg
jae
add
adc
add
iret
or
dec
push
and
popa
fiaddl
sbb
shl
fs
ret
aam
gs
adc
out
mov
popf
sahf
aam
mov
xor
lret
leave
iret
rcl
or
fsts
ret
je
push
test
xchg
or
hlt
mov
ftst
sub
mov
mov
loope
xor
or
mov
lahf
inc
xor
jae
es
lods
test
lock
pop
or
hlt
lds
lds
or
or
and
call
jp
mov
nop
int3
push
xchg
inc
clc
xchg
dec
stc
dec
push
mov
sub
mov
lahf
mov
sub
movsl
cmpb
add
in
in
mov
out
ret
les
push
or
mov
jmp
jae
adc
sub
movsb
mov
sub
repnz
shll
adc
lahf
jecxz
stc
jno
sbb
sbb
push
sbb
mov
icebp
idivb
sub
ret
out
push
add
mov
dec
out
push
mov
rclb
pop
sub
xor
mov
mov
in
out
lahf
dec
inc
mov
aam
mov
xchg
jae
jb
in
lahf
out
dec
popf
xchg
sbb
rolb
jmp
and
xchg
jne
push
push
lahf
sub
xchg
mov
mov
dec
gs
lock
adcb
mov
xor
icebp
subl
out
roll
icebp
xchg
adc
push
ret
pop
andb
jne
add
in
cmpsl
add
and
lods
xchg
add
mov
ss
call
inc
and
mov
push
scas
and
sub
mov
adcl
xchg
inc
mov
pop
or
aas
or
or
lds
int3
notb
mov
cmp
mov
push
sbb
xor
xchg
mov
aam
clc
sub
jl
mov
cmc
ret
dec
add
rcrl
adc
or
test
mov
jl
jl
xchg
fstpl
into
pop
mov
push
and
arpl
sbb
dec
jl
or
rorl
add
test
das
les
or
pop
shrb
mov
and
test
jl
rorl
je
or
adc
imul
xchg
imul
aaa
enter
leave
xchg
mov
sbb
js
mov
pop
push
movsl
bound
adc
mov
adc
subl
dec
aam
frstor
push
fldl
call
add
jns
cmc
in
in
add
shll
mov
test
in
mov
jmp
mov
out
repz
mov
dec
das
gs
or
mov
in
lds
daa
jb
aaa
mov
mov
pop
mov
push
mov
aad
sbb
sub
nop
xchg
scas
leave
dec
lret
lods
push
xchg
addl
adc
jns
test
orl
stc
aaa
lock
ds
shlb
call
jl
rcr
dec
xchg
add
jnp
or
adc
ljmp
and
outsb
gs
mov
push
xchg
in
inc
add
dec
xchg
aas
dec
adc
rolb
mov
xor
add
or
sub
rcrl
mov
mov
ss
adc
jge
mov
mov
test
adc
cmp
adc
push
jl
jns
test
mov
pop
and
in
add
dec
xchg
xor
nop
lock
xor
lcall
stos
dec
or
rorl
dec
ror
mov
xor
out
fsubrp
in
xchg
mov
and
mov
sub
stc
in
lahf
in
dec
dec
mov
dec
rcr
loopne
xor
inc
jae
or
push
or
mov
mov
or
add
push
inc
xchg
hlt
mov
sbb
mov
stos
ss
addr16
cld
xchg
cld
push
lahf
adc
ss
push
cmp
or
ret
faddp
sub
cmp
adc
in
or
iret
mov
add
fmull
or
mov
mov
xchg
aad
jg
aaa
pop
add
xor
lods
adcb
add
fsubrs
cmp
or
mov
sbb
push
dec
shll
xchg
lret
mov
daa
jnp
out
xchg
add
stc
or
and
sbb
inc
sbb
push
xor
out
and
clc
pushf
std
iret
dec
sub
pop
pushf
xorb
cmp
aaa
xchg
jmp
pusha
in
sarl
adc
repnz
jae
or
and
push
dec
inc
cmp
push
div
sbb
jg
decl
sbb
sbb
fcom
in
imul
add
roll
push
wbinvd
stc
add
add
jecxz
pop
shlb
add
stos
out
push
inc
imul
mov
ficoms
adc
ficomps
stc
mov
mov
stc
dec
lahf
punpckhdq
rcl
sbb
leave
inc
in
fadds
mov
loopne
mov
xchg
ret
and
jmp
test
imul
outsb
mov
iret
dec
mov
in
cld
lods
sbb
inc
cmpsl
pop
push
or
out
sbb
test
imul
fsts
mov
pop
imul
repz
dec
inc
or
sub
cmp
stc
dec
lock
jne
sbb
int3
stos
mov
xchg
xor
scas
addr16
mov
addb
push
add
mov
or
pop
adc
stc
dec
nop
test
xor
mov
fs
push
sbb
clc
lret
mov
jmp
fnstsw
loopne
divl
shrb
fisubrs
xor
adc
pop
jne
cld
xchg
leave
adc
xchg
or
out
lret
mov
add
push
bound
xorl
cmc
imul
in
mov
dec
mov
fstl
xchg
mov
std
scas
lret
jmp
sub
ret
jae
pushf
sub
and
push
in
sub
add
call
inc
testl
pushf
push
sub
ficoml
or
addl
mov
iret
jae
ljmp
ret
jge
mov
aaa
stos
jp
out
mov
mov
adc
jecxz
mov
jnp
iret
fcompl
sti
sbb
inc
adc
fnstsw
jo
xchg
mov
adc
xor
adc
cmp
xchg
repnz
add
andb
jbe
shl
imul
lret
and
sub
xchg
daa
in
pop
out
mov
pop
enter
pushf
xchg
lcall
sbb
lds
movsl
cmp
aas
sub
sbb
push
mov
mov
xor
xchg
cmp
add
cmp
fisttps
fcomps
fmull
out
cmp
fs
ja
push
xchg
jns
xlat
mov
xor
mov
cli
insb
in
in
fisubrs
sbb
pop
mov
push
fimull
in
sbb
inc
ret
lret
ljmp
int
in
sub
cld
clc
stos
clc
in
sahf
clc
subb
adc
stos
push
inc
cli
aad
or
test
xchg
jg
lret
sbb
or
xchg
out
mov
xchg
mov
dec
xor
adc
sbb
pop
out
in
xor
pop
sub
add
xchg
std
or
dec
or
pop
lret
add
hlt
push
or
cmpl
push
xchg
pop
shlb
adc
lret
iret
ljmp
sahf
in
stos
jo
mov
pop
lret
or
and
and
pop
sbb
xor
adc
sub
faddp
movb
popf
mov
inc
daa
xlat
test
stos
call
push
pop
stc
repz
scas
mov
jl
sub
mov
pop
push
mov
push
sbb
das
mov
adc
mov
jl
aad
movsl
icebp
mov
repnz
sub
sti
or
xchg
cmp
or
cld
gs
add
sub
outsb
mov
rcr
aam
xchg
rorl
in
insb
xor
mov
mov
adc
imul
adc
mov
movsb
or
dec
dec
pop
mov
push
add
fs
sub
int3
or
jl
pushf
in
xor
mov
cmp
xor
mov
dec
in
ret
repz
mov
cmp
int3
in
adc
out
hlt
lret
loopne
cmpsb
jbe
jl
dec
rcrb
add
jno
lahf
ljmp
loop
call
cld
mov
aam
sbb
or
ja
add
jle
enter
sub
xchg
or
lret
enter
sub
leave
lret
movsb
ffree
and
ss
cmp
xchg
mov
cld
hlt
std
pop
cs
push
leave
leave
sub
enter
bound
das
cli
ja
add
rol
jg
push
movsl
push
cmpsl
xchg
sbbb
fidivs
xchg
xchg
iret
sub
pop
and
and
jecxz
stc
faddl
repnz
mov
sub
push
mov
sub
aaa
xlat
sbb
ret
mov
in
fbld
mov
shr
sub
push
xor
xchg
and
js
fstl
mov
int3
imul
inc
orl
shr
push
inc
lds
fcoms
lret
fs
mov
psubsw
jb
mov
out
add
adc
adc
cmp
pop
sub
mov
xchg
iret
fisttpll
out
les
dec
loop
push
xor
mov
mov
inc
lds
rcl
mov
sub
iret
ret
pop
jg
nop
add
mov
call
out
add
fsubp
push
push
fwait
jae
sub
sub
adc
clc
jbe
dec
sub
stos
ljmp
sub
xor
mov
popf
pop
outsb
add
jo
and
out
or
add
stos
xor
daa
popf
jnp
sti
in
add
add
jmp
push
std
xchg
cmp
inc
xor
xor
std
addr16
mov
ret
orb
fcmovnb
fnstsw
repnz
or
push
and
fadd
arpl
ret
sbb
xchg
jno
or
cmpsl
leave
fs
sub
inc
les
push
mov
notl
je
push
sub
push
movsb
mov
push
leave
add
xor
iret
xor
and
fmulp
aad
or
mov
repnz
lahf
mov
lods
mov
lock
pop
outsl
sub
nop
shl
loop
lock
loop
lcall
lds
jno
mov
cltd
mov
lret
mov
mov
inc
sub
stos
out
lock
adc
scas
adc
rclb
add
mov
popa
mov
sub
ds
popa
in
notb
jl
shll
js
or
nop
repz
or
fnstsw
aad
into
adc
into
popf
ljmp
sub
pop
add
pop
jmp
add
insb
sahf
adc
out
das
out
inc
jecxz
jb
daa
cwtl
arpl
jne
movsb
fsubrs
leave
jl
fwait
adc
or
mov
lret
lds
adc
add
rcl
or
mov
xor
dec
mov
iret
bound
mov
xchg
rorb
fmulp
repnz
mov
pop
pop
mov
loop
xor
in
mov
or
add
hlt
fwait
mov
sub
and
mov
jp
inc
and
or
scas
flds
filds
lods
je
int3
sbb
scas
add
or
xchg
sbb
repnz
je
inc
lret
jne
lret
xor
cmp
cmc
xchg
lock
sar
pop
mov
roll
cli
jae
out
mov
xchg
aam
or
into
sub
push
push
scas
mov
stc
sysret
jecxz
cld
test
xchg
leave
dec
jns
pop
sub
or
push
clc
adc
les
or
xchg
fwait
sub
or
clc
push
in
pop
icebp
shl
mov
dec
icebp
fsubr
mov
mov
sti
es
dec
sub
adc
pop
pop
mov
nop
cmp
push
and
mov
pusha
push
push
jmp
inc
push
bound
repz
lock
in
mov
outsl
and
pop
push
sbb
xchg
sub
sub
pop
dec
popa
rclb
mov
and
fstl
adc
adc
or
in
sub
add
jmp
enter
je
sbb
pop
mov
dec
ret
sbb
mov
cmp
and
jmp
xor
repz
push
outsb
bound
in
xlat
or
or
jl
jl
arpl
pop
mov
cmp
repz
popa
addl
repnz
fnstcw
hlt
jo
ret
rcl
sbb
add
push
adc
adc
mov
lods
faddl
mov
mov
out
adc
add
cmp
sub
test
add
push
lea
and
out
cmc
rorb
mov
packuswb
mov
addr16
repnz
add
into
rcll
push
out
aaa
add
int
adc
add
or
jmp
aam
mov
shll
in
pop
addl
add
add
shlb
insb
sahf
cmp
jbe
sbb
pop
lods
es
pop
xchg
in
and
jns
sub
xchg
leave
dec
rorl
in
mov
in
or
stc
hlt
in
xor
jae
mov
es
stc
mov
lahf
or
fdivl
inc
xbegin
clc
shll
movups
mov
loop
xor
mov
pop
mov
loop
dec
out
sbbb
in
pop
clc
mov
xchg
imul
push
in
ret
mov
scas
repnz
enter
test
lock
lret
jae
adc
mov
out
adc
sbb
cs
nop
pop
pusha
dec
mov
bswap
outsb
pushl
xor
ds
mov
add
push
jg
mov
add
xchg
mov
rcrb
adc
sub
bound
shlb
loope
mov
inc
sar
dec
insl
jmp
and
lcall
xor
mov
repnz
sbb
mov
clc
cs
ljmp
iret
push
call
aad
pop
xor
int3
cltd
out
les
aas
jle
insb
mov
xlat
ret
xor
lret
movsl
ret
test
shl
xchg
pushf
cmp
shlb
in
add
repnz
mov
es
int3
or
cmp
dec
xor
pop
in
inc
xor
cld
imul
loope
jne
and
or
lahf
jecxz
repnz
jp
sbb
jne
adc
xchg
orb
fdivrp
push
aas
subl
xor
inc
sub
dec
and
push
add
mov
fwait
imul
fstl
sbb
jge
ret
inc
add
test
inc
imulb
cmp
jg
hlt
cmp
lahf
add
nop
lahf
or
ret
inc
cmp
loopne
cmc
mov
and
xor
ds
pop
test
ret
xchg
and
add
xor
inc
sub
gs
cmp
sub
orl
insl
lret
fstps
leave
pop
push
in
call
mov
sbb
fsubr
sub
js
and
add
insb
inc
cmp
cwtl
in
in
xchg
and
jge
adc
push
nop
mov
hlt
dec
inc
sub
mov
mov
out
jne
test
jl
add
xor
sti
sbb
add
adc
or
or
add
pop
les
add
adc
adc
aad
mov
xor
adc
outsb
mov
mov
sti
jo
leave
cld
out
ror
cmp
mov
hlt
add
aam
cld
mov
orl
cld
sub
fstl
scas
aaa
xor
push
mov
xor
lahf
int3
out
mov
aaa
imul
pushf
fisttpll
shl
push
push
mov
inc
mov
iret
mov
cld
or
in
mov
lret
mov
int3
mov
jge
out
sbb
mov
pop
std
lock
out
mov
dec
xchg
popf
iret
fcompl
iret
and
shll
in
inc
pop
nop
dec
int3
lret
dec
aas
sbb
add
add
out
xorl
rorl
cmp
hlt
stos
jmp
mov
hlt
xchg
inc
push
and
je
les
hlt
clc
mov
or
mov
inc
mov
or
sti
hlt
xorb
dec
rorb
scas
dec
mov
rcll
test
es
cltd
xchg
jp
ljmp
jle
dec
inc
mov
pop
iret
mov
hlt
jno
xor
mov
idivb
shrb
hlt
mov
mov
or
subb
jle
dec
enter
loop
repnz
into
mov
jb
adc
in
gs
sub
lahf
add
data16
cld
mov
popf
mov
int3
cmpsb
aad
popa
cmp
in
into
fldenv
cli
call
ret
jnp
addb
scas
sbb
pop
iret
adc
lret
int
bound
roll
sub
inc
repz
jmp
add
imul
or
in
sub
roll
add
add
fisttpl
push
ljmp
and
add
call
mov
jbe
mov
xchg
ret
hlt
sub
sahf
aaa
ljmp
sub
pop
dec
adc
mov
enter
sub
jg
lret
mov
scas
ret
xor
add
dec
dec
leave
bound
mov
out
sbb
add
jne
add
lret
and
sbb
or
dec
xchg
pop
imul
jne
cld
call
mov
sub
cli
push
popf
pop
cwtl
aaa
test
jp
out
cmp
loope
fidivrs
mov
lret
add
sti
nop
xchg
imul
dec
fidivrs
dec
cld
jmp
jmp
mov
leave
in
call
leave
enter
popa
scas
lahf
dec
sub
iret
ret
ret
sub
pop
das
es
lods
test
loop
repz
sub
cmp
and
mov
jg
les
fwait
xchg
mov
jno
xchg
jl
or
xor
mov
in
mov
jns
xor
inc
mov
lds
add
sahf
sbb
call
push
push
or
xlat
xchg
or
adc
movsb
iret
cmp
push
add
mov
movsl
cs
in
in
pop
xor
imul
xor
stc
repz
cmp
xchg
fmul
xchg
jb
jb
mov
or
fdivrp
pop
sub
fimuls
les
add
arpl
and
addl
insb
xor
mov
lret
mov
and
mov
adc
and
pop
mov
add
test
xchg
shrb
cwtl
jmp
test
xchg
out
cs
imul
iret
dec
mov
stc
sub
mov
sub
push
add
subl
mov
lret
shlb
push
dec
sub
mov
loop
rcrb
push
scas
adc
add
mov
or
and
mov
ljmp
or
outsb
sbb
es
mov
in
push
daa
mov
jmp
or
xchg
outsb
cmc
fimull
aad
fiaddl
xchg
adc
add
repnz
aad
jl
dec
add
or
push
imul
cltd
xchg
imul
arpl
les
rolb
sub
xor
cmp
rolb
push
dec
ja
lahf
ret
sub
adc
inc
sub
mov
shlb
mov
rolb
and
sar
inc
in
gs
outsl
ret
add
std
stc
mov
repnz
pop
jle
dec
jb
int3
mov
jecxz
mov
out
hlt
outsl
dec
mov
stc
lock
mov
add
dec
or
shrb
cmp
adc
sub
xor
adc
loopne
in
icebp
mov
mov
add
lock
fstpl
push
sub
xor
pop
rcrl
xor
loopne
lds
jns
jg
mov
insb
jecxz
sarb
mov
lahf
inc
xor
addb
pop
int3
add
vunpcklps
pop
cmp
xchg
inc
xchg
push
into
fidivs
lock
pop
ror
dec
popa
push
mov
dec
popa
add
xchg
adc
mov
insb
in
rcrb
sub
mov
fisttpll
or
imul
xchg
pusha
es
int3
sarl
in
cmp
out
mov
mov
lock
push
sbbb
jp
mov
xchg
xchg
les
pop
lds
in
ffree
jg
jbe
fcmovb
out
imul
sbb
xorl
cmp
into
das
add
lahf
idivb
fdiv
sub
push
mov
clc
jg
dec
fs
mov
lock
les
inc
fwait
xchg
mov
aaa
cmp
sub
add
int3
mov
jo
sahf
ljmp
call
test
sub
and
push
out
and
jo
scas
sub
sahf
stc
dec
jb
dec
mov
mov
sbb
mov
leave
jp
xor
xor
pop
mull
cwtl
nop
repnz
mov
fisubrs
and
ljmp
fmul
or
outsb
push
jle
push
bound
push
sub
fwait
out
test
sbb
push
clc
rorb
sbb
int
dec
or
mov
popa
int3
jns
adc
pop
adc
mov
or
aas
lock
inc
xchg
push
and
movsl
add
adc
inc
lret
xchg
adc
add
ret
shlb
lahf
adc
add
push
fdivl
fwait
dec
cmp
leave
insb
pop
aam
scas
xor
xchg
xchg
mov
or
or
adcb
iret
mov
je
stc
repnz
cmp
ret
iret
test
pop
aad
stos
add
icebp
adc
jmp
sahf
lds
or
xor
xor
sti
aaa
aad
mov
bound
sti
mov
mov
fildl
call
mov
in
push
les
push
into
lret
jne
pop
xchg
jno
mov
cmp
imul
test
push
call
jbe
mov
mov
lcall
and
les
push
loopne
shrb
mov
leave
lock
push
lret
push
ljmp
adcl
push
es
mov
lods
outsb
js
nop
popf
std
fists
es
stos
mov
xchg
out
mov
jbe
xchg
xchg
adc
loopne
fmull
xchg
orb
adc
dec
ficoms
jne
fbld
sub
aad
pusha
stos
jo
bound
jp
imul
aam
and
adc
lahf
stc
in
lock
mov
cld
push
jne
xor
ret
scas
add
stos
in
inc
int3
iret
add
xchg
and
add
in
or
rorb
lret
pop
leave
sbbl
dec
adc
mov
clc
xchg
hlt
cld
pop
push
clc
jno
in
lret
rcrb
les
lock
jbe
cmp
lret
push
mov
iret
stos
pushf
mov
push
xchg
into
cmpsb
sub
jg
xlat
mov
ret
adc
inc
and
add
jecxz
push
out
or
hlt
testb
jb
sub
inc
push
inc
fcmovb
imul
cmp
cmovge
inc
popf
imul
fldt
loop
in
and
clc
dec
mov
xor
out
mov
lock
mov
out
add
dec
or
imul
push
nop
mov
jge
adc
jmp
adc
das
xor
in
fnstsw
mov
sub
adc
add
mov
push
cmp
int
mov
cmp
push
mov
cmp
inc
dec
cli
lahf
das
ljmp
cmp
aad
fldt
dec
sbb
repz
add
sub
mov
adc
fdivl
popa
sti
call
outsb
add
rcr
adc
fidivrs
in
xor
xlat
sbb
add
xor
aad
cwtl
cld
shrb
pop
xchg
repz
xchg
jmp
jnp
lret
shr
loopne
or
leave
fstpt
loop
call
out
stos
mov
adc
mov
or
adc
xorl
bound
or
test
push
popf
js
dec
addr16
adc
add
xchg
pusha
cli
jo
int3
cmp
int3
ret
add
pop
xchg
jno
rcl
sbb
mov
xchg
std
repz
adc
hlt
pop
sub
fstp
js
pushf
jp
dec
adc
adc
xchg
xchg
mov
hlt
loop
mov
sub
jnp
dec
lret
push
inc
xchg
loop
adc
sahf
int3
dec
imul
dec
lret
cmp
aam
add
jo
mov
mov
nop
mov
push
scas
xor
add
mov
out
out
loopne
sbb
scas
aad
sbb
jp
dec
in
and
jmp
jae
sub
popf
push
int3
loop
mov
sbb
pop
mov
add
cwtl
repnz
push
mov
shrl
xor
pop
mul
mull
or
int
jecxz
adc
popa
call
loopne
repz
mov
dec
adc
call
stc
repz
les
jnp
sbb
jb
fdivs
int3
jno
call
xchg
fisubrs
adcb
push
lahf
movsl
rol
out
cld
mov
cmpb
dec
scas
mov
inc
xor
lahf
mov
pop
add
or
push
lret
xchg
sbb
adc
inc
gs
orl
dec
rolb
nop
les
into
pop
cld
xchg
rcl
popf
sbb
notb
and
jmp
xchg
sub
out
add
jb
xor
or
mov
mov
jae
in
out
nop
seto
rolb
jns
movsb
mov
lahf
movl
insb
xchg
mov
int3
rcrl
push
stos
stos
mov
cs
gs
lds
lcall
scas
sbb
and
call
jp
aam
shl
in
cld
es
dec
repnz
xor
add
lret
pop
or
adc
pop
xlat
mov
or
push
jecxz
or
incl
fsubrs
loop
cltd
sub
iret
loop
pop
inc
adc
test
je
pop
mov
mov
fiaddl
push
fsubrs
data16
cmp
xchg
jl
push
xorb
mov
in
loope
popf
add
loop
loope
add
mov
mov
and
insb
cmc
lahf
es
fwait
mov
cmp
es
mov
shrl
into
inc
jg
adc
int3
loop
das
mov
push
or
lcall
add
mov
adc
dec
cmp
sbb
mov
mov
cmp
cmp
sub
fisttpll
incl
lock
mov
sbb
add
cmpsl
addl
xchg
negb
jecxz
xchg
movsb
cld
data16
push
stos
cmp
xchg
mov
inc
xlat
dec
xor
xchg
int
scas
call
pop
loop
inc
push
or
into
add
cmp
es
xchg
sub
enter
or
xchg
out
push
cmpsb
int3
stc
arpl
ss
repz
push
lret
in
and
mov
and
in
cltd
stc
jmp
jb
push
xor
pop
mov
call
mov
xchg
cli
sub
mov
sub
nop
and
jb
or
adc
stos
pop
dec
fadds
shl
and
nop
imul
aad
xor
add
adc
jle
mov
and
inc
and
inc
adc
ljmp
dec
adc
cmp
adc
ljmp
or
icebp
aam
xchg
xchg
cmp
add
les
shrb
cld
and
call
test
stos
mov
push
repnz
cltd
push
mov
repnz
xchg
mov
stos
or
and
icebp
sbb
clc
in
mov
scas
in
and
in
ss
out
aam
mov
fs
mov
xchg
fisttps
jns
sub
in
inc
push
ja
add
push
add
mov
and
addl
or
bound
subb
mulb
loopne
pop
lret
ds
cmp
les
dec
mov
adc
aad
js
mov
pop
mov
scas
mov
fisttps
adc
mov
jmp
js
add
sahf
loop
and
add
add
push
mov
in
dec
pop
dec
and
cwtl
mov
mov
movb
in
loope
pop
out
mov
loop
adc
scas
or
loopne
and
cmp
cmp
dec
popf
push
clc
lret
xchg
aam
adc
adc
out
stos
add
ds
nop
cs
loop
pusha
adc
dec
dec
inc
mov
inc
in
rorl
int
in
addb
jge
out
push
rclb
cli
and
dec
ret
test
pop
cwtl
call
adc
sub
nop
stos
sbb
sub
fadds
and
outsb
jg
sti
adc
in
in
push
jg
sub
call
data16
pusha
leave
cmp
cmp
bnd
sbb
bswap
mov
and
fstpl
xor
or
imul
out
lock
add
repz
out
xchg
movsb
outsb
sbb
adc
mov
xchg
lahf
in
iret
sbb
out
push
push
add
insl
mov
int3
mov
xchg
shrb
sbb
pop
add
mov
inc
stc
movsb
and
pop
lahf
testb
fdiv
stos
or
jle
nopl
and
mov
cmc
adc
jns
insb
jle
out
fcomps
sti
into
mov
push
mov
or
pusha
cmp
es
hlt
or
cli
repnz
jmp
int3
test
fidivs
scas
xor
lock
sbb
shrd
ds
xchg
adc
add
lds
stos
push
shl
push
adc
addr16
imulb
mov
stos
add
je
lods
mov
fmuls
hlt
dec
dec
enter
pop
loope
repnz
xlat
xorl
jne
mov
add
sbb
cmp
lcallw
or
mov
dec
outsb
or
adc
dec
fildll
fldl
or
jae
fmuls
stos
lods
sub
mov
jns
rcr
cli
xor
es
sub
lods
arpl
jnp
xor
push
or
jl
nop
jg
pop
xchg
jmp
test
dec
and
jne
xor
sti
or
cmp
in
mov
lds
xchg
jno
xor
mov
fldl
adc
lcall
andl
jge
sbb
iret
sub
or
fs
icebp
pop
adc
cld
in
mov
stc
mov
mov
xchg
incb
xlat
aad
xlat
cmpsl
lcall
sbb
cmp
pushf
mull
fidivl
dec
lock
ret
sub
stc
push
popf
sub
std
jbe
je
movsl
mov
ds
in
lcall
frstor
lock
rorl
lods
or
std
das
sbb
pop
or
daa
mov
out
dec
jo
out
and
dec
scas
adc
adc
mov
inc
in
sbb
into
ret
add
std
dec
adc
jmp
jns
or
mov
lods
sub
loop
xlat
sbb
in
addb
jg
fs
rcrl
jmp
adc
cmp
sti
and
popf
stc
hlt
repnz
add
ret
mov
fsubrl
shrb
jne
test
mov
ret
popa
imul
imul
je
mov
adc
rclb
das
out
aas
adcb
xchg
inc
clc
mov
or
rol
imul
fsub
add
movsl
fsubrl
cmc
les
leave
sub
inc
mov
dec
xor
sti
xchg
das
adc
inc
jae
adc
dec
cs
inc
pop
movq
xlat
xchg
push
stos
adc
ret
out
sub
mov
addr16
push
mov
mov
xchg
mov
mov
fucomp
out
leave
out
cmp
nop
fstp
shl
pop
fldcw
push
adc
out
pop
in
jecxz
xor
int
testl
in
push
mov
addl
cmp
add
xor
popa
repnz
out
call
adc
ret
icebp
pop
push
push
jne,pn
inc
arpl
inc
movsl
mov
rcl
xchg
pop
ja
xchg
sbb
jl
sbb
sub
sbb
stos
inc
cmp
cmc
cwtl
inc
lds
addb
xor
sbb
mov
pop
dec
testl
aaa
stos
push
insl
insb
out
add
mov
push
xchg
add
out
and
jge
pop
fcomps
xlat
negb
add
sub
sbb
cmc
jmp
xchg
in
add
es
int3
icebp
mov
pop
add
mov
or
dec
xor
xchg
cli
adc
mov
adc
sub
adc
jne
push
inc
xchg
jmp
out
dec
sub
cmp
push
stos
adc
movsb
xchg
mov
stc
arpl
add
fdivp
lock
push
ret
ret
or
testl
push
lods
in
adc
ss
ret
leave
in
cmp
sbb
into
int3
xchg
sub
pop
int3
pop
push
iret
in
test
adc
jmp
pop
mov
sub
or
in
mov
or
pop
sbb
mov
jns
movsl
or
pop
addr16
psrld
sub
mov
pop
ret
and
enter
sub
test
ljmp
test
sub
xchg
sub
int
xchg
sub
pop
push
adcb
push
xchg
fbstp
mov
jmp
jg
dec
pop
dec
adc
ret
xor
xchg
sarl
mov
fs
ljmp
push
cmp
xor
mov
stc
inc
mov
es
push
icebp
data16
mov
pop
or
adc
lahf
inc
and
je
in
repnz
adc
fs
or
fiaddl
pop
out
lods
adc
fsubrp
or
out
pop
ss
fsts
dec
sub
xchg
fs
push
popl
mov
or
jecxz
ljmp
stc
rcrl
adc
xchg
lods
stos
xor
push
mov
sbb
adc
pop
insb
dec
mov
mov
mov
lock
xchg
outsb
inc
jb
mov
mov
or
jo
cld
jne
movsl
dec
add
iret
xchg
xchg
and
push
mov
ds
push
mov
sub
iret
mov
and
dec
js
in
xor
push
jbe
or
jne
nop
sbb
loope
sbb
hlt
js
push
or
mov
sbb
outsw
ret
iret
adc
test
hlt
inc
lahf
data16
call
subl
les
add
and
adc
inc
jnp
fcoml
inc
mov
xchg
sbb
shrb
in
adc
dec
fisttps
aam
push
dec
push
add
adc
cli
mov
and
in
adc
sub
or
fisttpll
loop
jge
fldcw
stc
sar
inc
mov
test
clc
add
out
xlat
sub
jo
adc
out
mov
int3
lds
fwait
jmp
or
iret
fs
dec
add
into
xchg
cmpsb
sub
fsubs
cmp
or
dec
in
cli
divl
pop
cld
rclb
sbb
push
sbb
mov
out
into
push
xorb
ror
nop
xchg
jmp
ja
jg
jle
xchg
sub
jmp
icebp
mov
sub
orl
js
je
bswap
mov
push
lock
mov
cmc
adc
sub
xor
sub
test
in
jle
rclb
les
out
ss
hlt
xor
dec
pop
and
sarb
or
jns
int3
fmuls
insb
addr16
dec
loopne
fcomip
push
iret
inc
fs
pop
adc
lods
sub
leave
push
repnz
jb
push
add
out
test
xchg
cmp
repz
fdivrs
test
out
orb
inc
dec
insb
mov
adc
mov
ljmp
mov
jle
shl
je
or
dec
push
add
jbe
push
nop
in
mov
jnp
jl
pusha
pop
insl
fimuls
inc
in
inc
jecxz
jge
push
mov
addl
push
inc
jp
push
fldcw
addr16
fstpt
mov
fldl
adc
fsts
decl
adc
sbbl
cs
add
or
repnz
inc
pop
cmp
cld
add
xchg
sbb
dec
jp
icebp
call
lret
out
mov
pop
icebp
dec
cs
scas
es
int
rcrb
mov
or
jmp
mov
mov
movb
or
pop
and
fdiv
push
sbb
push
les
jg
fcoms
mov
jno
adc
xchg
in
cmp
rolb
or
insl
push
adc
call
adc
and
popf
xor
xchg
add
dec
push
shll
add
pop
add
mov
enter
sbb
sahf
inc
out
or
push
in
inc
dec
sarb
loop
aas
ret
aam
mov
in
iret
adc
adc
fdivrp
push
mov
aam
les
mov
aaa
mov
dec
pop
adc
cmpsl
subl
jne
flds
add
ljmp
sti
jbe
clc
sbb
mov
jl
mov
adc
jnp
pusha
popf
sub
add
cld
shll
ss
mov
aam
es
lcall
addr16
data16
movsb
ret
add
jg
lea
add
repnz
ja
ss
je
nop
rorb
jmp
push
dec
mov
mov
icebp
sub
adc
jnp
in
push
int3
mov
pop
sbb
shll
push
push
adc
je
mov
ret
fnstsw
in
inc
inc
jb
push
loop
mov
sahf
mov
cmc
lret
ljmp
mov
jge
insl
pop
fwait
cs
sbb
out
in
aad
add
lret
shl
in
add
popf
inc
cmpsb
sub
popa
mov
add
add
cmpl
shl
lods
inc
iret
into
loop
or
shlb
mov
add
movsl
movsb
adc
xchg
jnp
xlat
xor
mov
lds
mov
mov
adc
stc
and
fsubl
loop
sbbb
cmc
addr16
xchg
lods
push
mov
push
adc
out
mov
pushf
fcmovu
mov
lret
push
repnz
icebp
dec
imul
pop
jl
xchg
stos
orl
test
mov
jno
fidivrl
push
repnz
or
jnp
sbb
cli
adc
popa
pop
stos
fdivl
pop
lret
mov
mov
dec
add
int3
xlat
and
sbb
cwtl
push
jo
stos
ss
xor
or
repz
rol
outsb
insl
add
pop
mov
xchg
sbb
les
mov
mov
dec
ljmp
mov
nop
mov
inc
in
mov
mov
cld
jmp
mov
jnp
jnp
repz
inc
add
mov
adc
jmp
sbb
mov
fbld
pop
push
adc
sub
fwait
cmp
addl
jmp
pop
imul
xchg
dec
dec
ret
bound
int3
push
adc
iret
nop
ret
push
cmpsb
jns
enter
ret
rol
movb
insb
sbb
imul
inc
lret
fsubrl
enter
in
sub
cmpsb
or
iret
mov
mov
jecxz
adc
cmc
repnz
pop
jp
in
nop
jne
sub
adc
xchg
movsb
fucom
or
stc
xchg
cmp
fdiv
xor
lcall
shrl
dec
inc
aam
mov
add
test
xchg
in
xchg
adc
fs
cmp
loop
mov
lods
xor
enter
sahf
xabort
add
pop
icebp
push
xorl
fistpl
and
test
jno
scas
icebp
mov
mov
push
cmp
cmp
loopne
mov
rclb
add
mov
fwait
jg
rolb
call
dec
or
fdivl
or
add
mov
pop
fcmovu
or
jg
enter
xor
sub
cmp
ljmp
or
mov
mov
adc
fimuls
mov
cmp
repnz
rolb
sub
push
loop
insb
inc
cmc
xor
xlat
push
add
mov
dec
jmp
push
jl
out
mov
popf
test
imul
push
and
aam
mov
fs
les
shrb
rol
es
mov
fxch
jl
and
mov
mov
lods
mov
cmp
xorb
loopne
mov
add
sbb
or
adc
in
testl
dec
scas
ret
test
shlb
push
jge
pop
mov
lea
mov
xchg
mov
aad
and
sub
xchg
xchg
mov
ret
testb
sbb
or
fdivs
sarb
or
mov
call
in
leave
cmp
pop
sbb
sub
mov
sbb
aaa
lret
xchg
mov
sti
adc
gs
mov
les
inc
adc
cmp
push
xchg
jmp
aam
adc
repnz
or
adc
mov
jnp
gs
push
pop
hlt
out
or
bound
sbbb
mov
and
add
xchg
mov
add
lret
adc
adc
adc
mov
mov
adc
sti
lahf
mov
ljmp
jg
adc
iret
pcmpeqb
xchg
andl
or
jmp
movsb
pop
cmp
jae,pt
mov
mov
push
repz
push
bnd
mov
rcll
adc
mov
and
ret
or
sbb
mov
idivb
add
inc
sub
pusha
inc
xchg
lahf
or
test
sbb
test
or
adc
add
hlt
jmp
les
stc
mov
leave
mov
pusha
ret
and
sbb
sub
imul
sbb
mov
test
enter
push
dec
xchg
out
mov
mov
lret
rcrl
jp
call
dec
repnz
lret
pusha
stc
lods
inc
mov
push
push
xchg
mov
cmpl
adc
popa
dec
sbbl
rolb
pop
rol
adc
sub
push
or
shl
je
stc
push
fstpl
in
stos
mov
push
icebp
xchg
andb
mov
enter
push
add
mov
mov
das
addb
call
xorb
loop
nop
jecxz
add
xor
sbb
xor
iret
push
adc
test
fisttps
dec
adc
adc
sub
cwtl
inc
mov
cli
push
mov
or
cmp
inc
mov
inc
icebp
icebp
out
xor
xor
sbb
and
sbb
dec
out
pop
add
in
sbb
adc
cli
inc
mov
or
xor
mov
stos
mov
pushf
jp
jge
mov
fstl
or
in
orl
fldt
sbb
scas
iret
add
loopne
add
and
out
or
push
add
adc
push
sub
shrb
or
push
mov
jecxz
xchg
or
out
adc
ds
jbe
xor
ss
pop
mov
testb
jmp
xor
adc
mov
or
cmp
nop
js
adc
adc
push
mov
dec
ficoms
pop
insl
mov
fcoms
daa
lock
or
sbb
lahf
cmpsb
fiaddl
imul
pop
mov
xchg
or
and
test
or
arpl
jbe
xor
mov
les
shl
adc
out
stos
ret
je
sub
mov
adc
orb
mov
rclb
and
push
jmp
mov
dec
clc
mov
stc
adc
and
es
dec
add
jmp
pop
mov
mov
sbb
mov
jge
fs
xchg
adc
mov
loop
jns
out
sbb
sarb
inc
cmp
push
and
mov
mov
sub
in
int3
dec
sbb
or
add
pop
inc
stos
in
ljmp
or
rorb
daa
fiadds
loop
sub
push
sub
jmp
push
lret
ja
adc
push
push
sub
sbb
stos
or
dec
aam
out
out
aas
adc
jg
out
aas
cmpsl
repnz
sbb
adc
jge
cmp
jns
push
add
je
popf
scas
icebp
push
out
pusha
inc
xor
push
adc
enter
or
outsb
das
push
dec
xchg
push
adc
jl
fcmovbe
cmp
outsl
repz
bnd
in
fdivr
jmp
nop
movsb
jae
adc
lcall
xchg
pop
imul
ror
cmp
js
pushl
rorb
inc
xor
je
aam
adc
fst
sbb
lods
xor
jge
je
xor
stc
push
lahf
add
sbb
aad
pop
adcb
test
sbb
add
mov
in
sub
fistl
je
loope
ds
pop
mov
ret
ret
jge
and
lahf
pop
call
icebp
push
jne
xor
cmp
xor
rcrl
out
mov
scas
lds
pop
outsb
out
xchg
lret
adc
mov
int
or
jecxz
push
scas
addr16
repnz
pop
clc
lods
push
mov
ret
sub
cmp
lock
xlat
add
outsb
inc
outsl
xor
outsb
adc
adc
call
pushf
es
add
in
fldl
and
clts
mov
dec
jge
out
sbb
mov
lods
xchg
add
sub
cmp
adc
inc
push
stos
push
xlat
pushf
insl
jne
pop
loope
daa
ret
add
mov
cld
gs
mov
nop
jg
arpl
daa
xchg
jp
std
lods
cld
fistpl
aaa
cmp
inc
ds
aad
mov
sub
shl
nop
jmp
or
mov
xchg
adc
or
sbb
mov
cmp
daa
mov
out
cmp
adc
sub
jnp
clc
lds
loopne
cs
mov
outsb
notb
add
pop
cmpb
bound
popa
mov
leave
aas
enter
push
imul
popf
mov
mov
or
mov
cmp
fwait
in
add
ljmp
in
in
adc
dec
mov
fimuls
push
mov
add
in
in
jns
repnz
adcl
les
and
cltd
jbe
scas
in
inc
jne
clc
enter
repnz
and
lock
dec
repz
daa
and
jmp
add
push
jmp
cmp
xchg
xor
add
lret
mov
or
or
jg
add
push
xchg
fmul
sbb
cmp
adc
mov
xchg
mov
add
add
push
jae
bound
sbb
xchg
push
and
lahf
sub
sbbl
sbb
mov
add
sti
jnp
ljmp
std
or
iret
xchg
rorl
cli
fmuls
bnd
xchg
and
pop
fiadds
adc
outsl
loope
imul
sahf
jp
and
out
jecxz
jmp
enter
subb
mov
mov
mov
shll
sub
lock
imul
shlb
stc
and
or
movsl
aaa
aad
faddl
in
pop
adc
icebp
or
jge
push
rcrb
in
sbb
div
loop
inc
out
in
addr16
ret
movsb
stos
outsl
jmp
bnd
inc
iret
in
ljmp
loope
and
xchg
mov
push
loope
pop
test
call
mov
inc
xchg
out
mov
mov
into
sbbb
pushf
or
adc
jae
adc
pop
and
add
iret
aam
adc
xchg
add
or
jmp
mov
jl
push
sub
movsb
lods
mov
push
pop
out
std
shr
rcl
mov
adc
add
push
push
movsb
aas
and
fidivs
cmp
xchg
xor
xor
lds
aas
repnz
add
adc
hlt
fwait
cmp
sub
fisttpll
dec
or
xor
movsb
dec
int
imul
mov
cmp
or
stos
cmp
add
lds
in
outsb
push
sbb
mov
xor
jno
inc
andl
cmp
cmp
mov
jae
repnz
or
pop
test
mov
cmp
sbb
or
add
hlt
loop
jmp
repnz
cmp
in
out
push
sbbl
add
push
or
jle
pop
push
roll
push
mov
mov
adc
sub
sub
jae
jo
adc
xor
mov
pcmpeqb
test
nop
cmc
test
lret
nop
jno
loope
jl
jg
cltd
jne
jnp
jo
fs
fisttpl
sbb
mov
add
iret
adc
adc
ret
adc
in
ret
push
or
in
in
mov
xor
jno
mov
divl
inc
iret
jg
pusha
sbb
mov
ja
nop
sub
sbb
test
or
mov
or
or
sub
movnti
inc
clc
adc
add
inc
mov
leave
gs
out
pop
add
mov
pusha
lock
ret
xchg
adc
sbb
enter
xchg
ss
in
loope
repnz
mov
aas
in
lahf
movsl
stc
arpl
into
mov
jg
cltd
mov
scas
loop
lret
lahf
and
xlat
push
hlt
scas
rorl
mov
mov
btr
push
xchg
jnp
xlat
dec
decl
lcall
or
mov
mov
loop
in
mov
movsl
shrb
sub
mov
outsl
add
testb
out
insb
addr16
int3
outsb
xchg
lods
pusha
sbb
mov
sbb
xchg
in
or
xchg
shl
jg
cmp
mov
hlt
int
add
pushf
in
sub
test
mov
mov
sbb
int
hlt
jle
test
cltd
lods
adc
adc
into
mov
jno
sbb
test
jmp
add
add
inc
push
push
push
mov
add
sbb
adc
pop
lea
jno
dec
lods
mov
int3
loopne
add
or
cmc
nop
ret
iret
loopne
xor
inc
insl
xchg
outsl
jbe
xchg
outsb
inc
inc
add
pushf
xor
sub
mov
add
add
sub
xchg
jmp
hlt
sbb
leave
loopne
or
push
jno
movsb
adc
xor
das
adc
dec
int3
es
push
sbb
adc
loope
and
inc
lcall
scas
repnz
sub
xchg
push
mov
xchg
xchg
lock
dec
push
mov
push
mov
sbb
mov
leave
mov
mov
or
aas
ficoms
hlt
cmp
or
xchg
xor
mov
fs
mov
push
je
lods
in
fcomi
cmpsl
add
stc
and
in
add
ja
pop
adc
xchg
add
mov
loop
nop
adc
negl
push
mov
jne
xor
cmp
hlt
xchg
dec
or
je
mov
push
ljmp
in
adc
pushf
lock
clc
loop
pop
adc
mov
sti
mov
sbb
in
fnsave
mov
push
push
adc
sub
mov
out
adc
les
adcl
mov
psrlw
xchg
rcr
fistpl
add
or
inc
mov
push
rclb
jae
adc
out
mov
in
xchg
mov
sarl
cld
xor
cmp
dec
sbb
xchg
inc
ds
add
xchg
sbb
cld
push
fdivrl
lock
or
and
into
mov
add
imul
jo
or
sbb
push
fdivp
mov
sub
imul
cld
pushl
pop
fimuls
paddusb
mov
add
mov
and
enter
cmpsl
or
dec
lods
mov
add
lahf
push
pop
or
fdivr
fwait
hlt
jne
mov
mov
bound
pop
mov
xor
arpl
pop
push
push
jb
repz
rclb
sub
inc
iret
cmp
jbe
lods
add
or
test
sar
push
call
int3
xchg
dec
sub
lea
pop
js
gs
or
jl
popf
cmp
lods
jns
jl
and
add
push
hlt
mov
sub
insl
insb
scas
cmpsb
out
fxtract
pop
xlat
jo
mov
or
sub
mov
xor
push
or
movsb
in
xchg
test
ret
mov
mov
rcrb
iret
in
mov
into
or
push
addr16
aam
adc
fsts
in
rcll
addl
repz
or
ss
cmp
dec
xchg
adc
or
mov
out
cmp
dec
jo
decl
push
stc
inc
mov
fisttpl
sub
sarb
push
sub
mov
xor
lods
pop
xor
fwait
stos
fdivr
jnp
fidivl
adc
iret
xor
mov
xor
push
das
in
and
adc
xchg
stos
pop
jne
mov
ss
dec
adc
add
inc
dec
and
dec
sub
or
fidivrs
adc
fwait
xor
shlb
mov
inc
std
icebp
pop
ret
leave
in
adc
sub
movsb
adc
ja
mov
add
push
adc
lret
pop
cmp
push
stc
call
es
ja
and
lods
sub
or
ret
jecxz
or
cmp
jmp
in
aaa
nop
fdiv
sub
push
mov
and
add
cmp
icebp
ret
dec
push
dec
dec
dec
loopne
shlb
dec
int
add
xchg
xchg
pusha
ret
cld
or
in
insb
adc
icebp
xchg
push
test
shlb
add
into
aaa
jmp
xchg
js
ret
pop
push
rcl
scas
xchg
rol
xchg
ljmp
js
pop
pushf
mov
pop
pop
shlb
or
adc
lds
jae
cmp
or
push
ret
repz
jb
dec
sbb
xor
add
mov
cwtl
sub
pop
lock
xchg
test
pop
pop
dec
fsub
xchg
jmp
inc
xchg
cltd
in
faddp
mov
and
add
test
rolb
mov
or
data16
andl
mov
cli
cmp
lock
sub
adc
test
jae
sarl
add
lock
lcall
jae
repnz
mov
xchg
adc
mulb
xor
daa
dec
out
inc
adc
jae
es
mov
pop
ds
fs
and
mov
and
sub
icebp
ja
popa
xorb
or
rolb
xchg
mov
inc
jnp
enter
ret
fcmovbe
out
or
add
sarb
sub
repz
push
jle
add
and
jae
rcll
jns
iret
cli
cwtl
push
xlat
add
or
push
insb
or
mov
dec
and
push
call
aad
int3
fucomip
scas
fdivr
aam
add
adc
inc
inc
adc
mov
cmp
mov
repnz
add
jo
hlt
add
cltd
mov
pop
dec
js
push
dec
cmp
sub
xor
and
inc
mov
push
rclb
lahf
adc
adc
cmc
and
pop
loopne
mov
pop
neg
dec
movsl
cmp
addb
rclb
push
repz
inc
addb
sub
outsb
hlt
inc
lea
or
and
add
mov
rcrb
push
sbb
add
iret
pop
push
lret
outsb
add
in
arpl
sbb
sub
imul
pop
int
outsb
push
inc
loope
ljmp
jae
jno
cmp
adc
cmp
nop
test
int
hlt
inc
pop
add
movsl
lods
add
add
rorl
ljmp
enter
fcoms
loopne
lret
call
xor
mov
or
sti
cmp
shlb
dec
push
xor
pop
dec
mov
iret
enter
mov
xchg
add
jno
inc
loope
lds
icebp
pop
fcoml
negb
repnz
nop
add
xchg
je
cmp
rcrb
outsb
icebp
and
imul
inc
inc
hlt
inc
adc
hlt
xor
int3
push
movsb
dec
in
cmpsb
shrb
jbe
subl
rcll
dec
rclb
push
fmul
enter
xor
ljmp
ret
hlt
out
aam
leave
jns
add
pop
ljmp
pop
add
add
jbe
jo
push
rorb
sbbb
cld
dec
add
mov
add
push
add
in
ljmp
and
das
xor
pop
push
aas
je
add
add
js
aaa
add
pop
push
sub
mov
mov
outsb
hlt
mov
xor
les
sti
inc
inc
pop
enter
xchg
sub
movb
fdiv
push
das
fwait
pop
int3
cs
mov
add
test
lcall
jecxz
adc
sub
push
cmc
push
lods
sti
sbb
stos
add
in
lock
push
xchg
fsubrl
cmpl
loope
push
inc
popf
adc
add
sbb
dec
bswap
adc
movb
sub
cli
movl
or
loop
aam
jb
gs
jmp
xchg
insl
icebp
subb
add
push
or
cmpb
popa
in
fisttpll
call
leave
and
lods
push
or
fldcw
adc
js
mov
and
call
test
jge
nop
imul
dec
sbb
enter
cmp
lods
mov
and
outsb
push
xchg
aas
xchg
xor
and
lods
inc
xlat
nop
adc
push
lahf
pop
mov
loop
jecxz
jmp
lds
mov
adc
sbb
add
jo
les
call
cmp
cwtl
sub
adc
imul
enter
lahf
fcmovb
es
xor
adc
loop
les
loope
cld
push
rcrb
cwtl
xchg
mov
sarl
sbb
push
sbb
jne
and
cli
ja
cwtl
lahf
add
test
mov
pop
ljmp
call
jge
stos
xor
addl
xchg
push
lahf
fs
in
mov
scas
into
jmp
enter
xor
or
and
fs
mov
in
or
jmp
cmp
sub
stos
stos
jb
fcompl
inc
or
sarl
loope
mov
add
sub
jnp
adc
inc
inc
sbb
sbb
ficoms
push
mov
fnstcw
rorl
aam
mov
hlt
andb
mov
int3
inc
push
mov
xor
iret
lods
xchg
pop
shrb
and
jp
mov
mov
push
aad
inc
repz
negb
mov
mov
adc
jmp
add
mov
iret
mov
cmp
or
xor
sbb
jmp
pop
mov
cmovb
add
jnp
fidivl
sub
jg
jo
push
pop
cmp
call
push
cmc
cltd
cmp
mov
adc
dec
ret
lods
xor
arpl
movsl
bnd
fidivs
in
ret
into
fsubrs
test
les
mov
pop
sub
or
jne
cltd
sub
ljmp
jmp
add
enter
aas
mov
les
cld
test
jle
push
cmp
dec
dec
lahf
addr16
mov
hlt
popa
add
jo
test
mov
pop
or
and
loopne
push
fldt
rcrb
xchg
sub
pop
fisttpll
xor
or
inc
ja
pop
cvtpi2ps
jmp
inc
mov
mov
xchg
sub
out
sbb
xchg
jne
jecxz
cmp
mov
out
cmc
push
mov
stc
pop
mov
dec
push
lock
fcompl
xchg
cltd
dec
inc
add
mov
test
lock
adc
sub
or
pcmpgtb
push
and
inc
xchg
fs
xorb
ja
jns
fiadds
fstp
stos
mov
cmp
aam
mov
xchg
push
dec
sub
in
outsb
push
mov
cmp
mov
out
ret
sub
das
fcmovnb
push
in
mov
addl
or
mov
fst
pop
adc
insb
cmpsb
imul
jo
sbb
sub
jmp
add
lahf
sbb
mov
inc
xchg
sub
cmpsb
or
adc
cmp
jmp
stos
std
loopne
mov
adc
and
in
repnz
inc
mov
add
xchg
sbb
jle
adc
add
int3
fidivl
jecxz
push
sbb
push
jmp
xchg
je
rcr
cld
pop
insl
ret
fsubr
adc
add
cmp
jae
les
adc
sub
dec
push
bound
mov
out
mov
enter
shll
mov
add
mov
jno
fdivl
fildl
lds
sub
insb
lahf
push
add
push
les
inc
fadd
adc
sub
xchg
cli
rorb
mov
daa
ljmp
mov
jbe
push
lds
pop
shl
sub
mov
pop
or
ja
push
mov
or
rorl
mov
add
les
in
mov
adc
ret
jl
les
push
inc
stos
nop
pop
pop
icebp
xchg
es
push
sub
xor
push
mov
cwtl
in
mov
in
sbb
mov
bnd
outsb
mov
and
in
pushf
lahf
jmp
lcall
loopne
adc
and
cmp
sbb
push
mov
mov
push
inc
fildll
dec
daa
cwtl
and
in
shll
cmp
push
add
xchg
test
addr16
bound
xorb
pop
sub
in
mov
xor
pop
push
jmp
fdiv
dec
sbb
jno
test
add
jmp
ds
lods
adc
mov
xchg
and
pop
mov
xor
add
adc
repz
roll
in
jecxz
push
sbb
cmp
cmc
or
push
add
sub
mov
ror
stos
adc
add
sbb
les
scas
pop
in
push
test
out
or
in
cmp
mov
pop
clc
cli
jae
or
dec
rolb
loopne
psrlq
in
push
lahf
pop
jl
sbb
mov
call
mov
sbb
xchg
lds
and
popa
pop
add
sbb
push
xlat
rcrb
or
pop
adc
mov
leave
pop
inc
cwtl
and
test
push
xchg
mov
mov
pop
inc
adc
mov
pop
mov
add
and
fidivs
inc
add
dec
mov
enter
adc
mov
test
rorl
xchg
dec
adc
mov
mov
mov
push
xor
js
js
bound
add
add
sub
sub
cmp
inc
mov
imul
push
xchg
sub
xor
add
jl
imul
mov
mov
sbb
mov
imull
mov
xor
inc
ds
adc
or
out
out
pop
or
lds
ret
arpl
pop
mov
cmp
push
insb
adc
xchg
sbb
mov
test
adc
outsl
jecxz
ds
or
pop
and
js
add
call
adc
lea
lret
lea
push
pop
out
or
shl
in
sub
sub
mov
and
xor
xchg
push
adc
and
sub
pop
pushf
cli
jl
mov
sbb
mov
ss
sbb
or
mov
push
hlt
adc
lahf
mov
sub
dec
pusha
dec
and
adc
pop
stos
ret
dec
sub
and
xor
jg
cmp
dec
xor
ret
xor
sub
pop
in
or
dec
or
iret
arpl
mov
nop
out
pop
test
in
out
or
scas
call
ja
pushf
into
add
insb
mov
imul
mov
xor
xor
pop
mov
in
jmp
mov
subb
mov
repz
mov
or
and
adc
xchg
jl
dec
add
jecxz
movsl
dec
inc
xor
int3
fnsave
xor
or
adc
fwait
sbb
and
sub
jl
icebp
adc
push
push
mov
in
icebp
clc
orl
mov
pusha
xchg
or
or
mov
inc
call
lods
and
int
repnz
sar
dec
push
xor
int3
push
mov
add
rcr
repnz
and
sbb
inc
in
inc
xor
lret
fmull
adc
int
repnz
test
test
nop
sbb
push
xchg
sub
sub
adc
sbb
icebp
add
jl
or
inc
push
leave
and
push
mov
fs
lods
pop
adc
xchg
fsub
xchg
inc
in
sub
int3
jbe
lods
ret
add
or
lods
test
or
mov
test
nop
enter
jo
sub
mov
test
sar
push
adc
test
dec
dec
cmpsb
or
popa
sbb
or
add
pusha
loop
sbb
or
ror
adc
mov
adc
sub
mov
add
divb
adc
test
dec
push
scas
ror
add
xchg
sbb
repz
add
mov
add
test
inc
or
mov
fimuls
loop
sbb
fcomi
jge
mov
adc
out
lods
aad
add
leave
sub
and
stos
xchg
cli
popa
je
mov
sbb
and
or
int
imul
add
xor
xchg
ret
cli
sub
or
inc
lcall
faddp
ret
jo
cld
mov
add
fisubrs
adc
sub
jg
sub
mov
shlb
xlat
push
loopne
leave
push
mov
mov
leave
and
gs
fcoml
std
pop
sbb
push
cmp
cld
mov
test
ljmp
lahf
pop
mov
pop
or
cmp
pop
sub
pop
cmp
stos
adc
call
in
lret
xlat
fmull
mov
out
call
pop
into
lea
sbb
sbb
es
js
adc
inc
mov
lret
out
sbb
dec
pop
rcrl
les
sub
pop
push
xchg
mov
ret
sub
mov
adc
add
push
jbe
push
cmp
ss
mov
xchg
repz
jge
lods
sbb
add
cwtl
fs
sub
inc
in
xor
push
mov
xor
cwtl
fcoms
btsl
pushf
push
adc
pop
and
insb
addb
aam
arpl
xor
xlat
pop
out
or
sub
jmp
jmp
sbb
gs
add
sbb
or
sub
pop
or
cmp
inc
outsl
xor
sbb
sub
sbb
jb
inc
xor
rcll
dec
xchg
repz
data16
adc
push
movl
xchg
iret
fisubrs
ret
jae
rolb
dec
mov
hlt
cmp
stos
xchg
testb
adc
pop
adc
frstor
in
dec
rcl
test
jae
adc
repz
pop
sbb
rolb
shr
mov
mov
aas
push
add
push
nop
out
aad
pop
sbb
and
mov
jp
mov
cmpsb
ret
loopne
push
or
inc
mov
mov
ss
sub
adc
jo
pop
shll
out
pushf
arpl
xchg
add
in
lods
sbb
sub
sub
cld
add
or
pop
aaa
mov
and
in
icebp
push
xor
mov
int3
or
adc
xor
stos
jp
fstpl
add
cmp
loopne
inc
push
and
sub
dec
dec
push
bound
lret
or
xlat
mov
stos
std
aad
mov
dec
sbb
xchg
fcomi
mov
sub
nop
out
lods
mov
mov
mov
sub
adc
mov
mov
mov
xor
jg
xchg
scas
leave
pop
jae
xchg
sub
sub
xlat
inc
adc
sbb
cld
adc
mov
dec
add
xchg
mov
ljmp
mov
xchg
sbb
mov
leave
into
adc
mov
fsubl
mov
mov
fsubr
lahf
lret
jno
mov
adc
jns
push
mov
or
adc
outsb
fdivrs
jg
add
adc
rol
adcb
rol
out
xor
mov
inc
fcomps
sub
jae
sub
scas
push
out
lahf
or
adc
push
hlt
add
ret
adc
enter
adc
jg
ret
data16
sub
mov
icebp
add
add
daa
adc
adc
mov
dec
dec
call
sahf
inc
fcmovb
mov
xchg
jno
ret
xacquire
sbb
sbb
xchg
call
push
dec
in
nop
arpl
testb
fxrstor
and
out
negb
dec
aas
sub
dec
out
mov
pop
jmp
lahf
add
cld
cmp
add
out
push
ret
scas
sti
jbe
mov
fisttpll
mov
mov
and
div
mov
xchg
push
sbb
adc
sub
ret
mov
jmp
dec
lea
sub
add
and
repnz
dec
ret
push
shr
ficomps
js
sub
inc
lods
and
add
stos
pushf
aad
out
mov
jl
mov
ljmp
add
in
and
push
push
out
push
int3
outsl
stos
xor
xor
adc
dec
xchg
sub
jb
movsb
gs
xor
cwtl
rep
movsl
lock
mov
and
fwait
inc
mov
xchg
jae
fs
lret
cmc
lcall
mov
stc
imul
cli
lods
cmp
cmp
sbb
xlat
cmpsb
rcrb
dec
ret
iret
rolb
fnsave
dec
retw
mov
mov
dec
xchg
cmp
lds
or
sbb
out
push
test
fnsave
icebp
rorb
cmp
push
mov
push
lret
mov
sarl
enter
mov
lods
ror
cmpsl
movsb
nop
int3
hlt
popf
push
nop
adc
push
fwait
xchg
aam
hlt
mov
les
fstpl
scas
adc
sub
jnp
or
lock
aaa
test
in
out
cmp
in
fnsave
ja
fs
rcl
andb
movsl
cmp
mov
push
fs
cmp
mov
add
cld
inc
mov
pusha
jne
je
xchg
dec
je
pop
or
aad
inc
jnp
out
sbb
add
inc
dec
adc
or
add
pop
in
fcompl
shr
or
jns
jg
fimuls
xor
popf
cmp
loopne
aas
daa
ficoms
inc
dec
lods
repz
mov
ficoms
mov
orb
int
add
aaa
sub
test
sbb
addb
and
fimuls
lods
ret
outsb
and
aam
bound
sub
insl
mov
enter
pop
int3
xor
pop
dec
jge
mov
in
sbb
adc
mov
mov
mov
add
pop
loope
fldcw
test
xchg
test
pop
ja
ss
fidivrs
sub
sahf
sbb
std
inc
ret
bound
xchg
adc
call
lahf
test
into
shrb
out
push
lods
push
mov
dec
cmpsl
jno
into
or
cwtl
bnd
adcb
sub
jmp
fimuls
icebp
testl
xor
mov
inc
sub
sub
jb
sbb
call
pop
lahf
xor
dec
fcomi
cmp
xchg
and
sti
je
sti
movsb
cmc
xorb
das
mov
shll
aam
sub
jo
cmp
mov
sbb
push
mov
in
add
test
call
mov
add
mov
jno
add
sub
loop
bound
jg
in
sub
es
or
and
mov
lahf
sub
dec
dec
clc
or
xchg
ret
push
inc
ljmp
jae
mov
jb
cmp
enter
out
push
jl
add
xchg
cmpsl
in
fdiv
jmp
push
in
mul
cmc
pop
push
jo
cs
sub
jecxz
mov
push
lret
xchg
cmp
pop
testb
mov
repnz
pop
iret
in
adc
push
hlt
mov
into
cld
mov
repz
je
ror
nop
loop
pop
adc
aad
in
lods
adc
ret
add
loopne
sbb
rorl
mov
insl
or
cmp
loopne
out
loopne
and
sub
push
adc
aaa
inc
ljmp
jno
jl
dec
dec
or
xorl
and
fwait
sbb
ljmp
mov
mov
outsb
or
ja
mov
sbb
ds
test
notl
fsubl
arpl
fisubrl
lds
add
xlat
adc
in
inc
testb
movsl
in
sbb
pop
mov
inc
sbb
adc
rcrb
sbb
mov
enter
ljmp
sbb
inc
pop
pop
lahf
sbb
adc
adc
cmc
inc
ret
pop
cltd
and
lods
out
sub
mov
flds
aaa
test
push
pop
jae
loopne
out
jno
enter
add
call
ret
ror
xor
ret
sub
leave
lock
add
mov
xlat
mov
shlb
dec
push
shl
les
mov
or
ds
sub
cmp
add
sub
jp
jb
arpl
sbb
lahf
in
pop
pop
pop
jmp
lret
push
lock
inc
loope
add
aad
in
paddb
sbb
mov
out
das
aad
dec
lahf
inc
or
xor
fcmovnb
add
xor
mov
xchg
mov
mov
hlt
sti
and
cmp
mov
adc
bound
and
in
adc
pop
stos
les
add
enter
push
xor
xor
les
or
test
ffree
dec
xchg
jmp
out
adc
mov
mov
push
and
mov
cmp
in
lcall
ret
imul
add
and
jnp
sti
inc
in
aaa
cli
ror
add
cs
repnz
loopne
mov
push
les
lds
add
out
add
dec
mov
rclb
out
mov
adc
push
push
xorb
sahf
lods
aaa
push
ficoms
add
mov
les
popl
push
sub
add
push
pop
movsl
mov
lds
cmp
cmpsb
add
inc
shrb
lret
push
cmp
cli
mov
test
sahf
prefetch
push
adc
sub
pop
sahf
and
repz
repnz
aaa
int3
in
adc
repnz
fwait
cld
std
xchg
repz
in
inc
mov
ficoms
sbb
mov
mov
shrb
sub
shl
outsb
mov
xchg
or
add
pop
sub
outsl
and
sbb
add
cmp
stc
jno
jmp
in
xor
ss
mov
scas
xor
in
testb
nop
in
nop
ds
ljmp
test
pop
lret
push
adc
fdivl
fldcw
jae
jge
sub
pushf
inc
nop
sub
jns
lods
pushf
sbb
dec
xchg
sbb
in
call
pop
adc
add
mov
nop
lock
imul
in
jne
or
insb
mov
xchg
sub
cmc
adc
pop
dec
add
xor
hlt
data16
jp
xor
inc
and
sub
mov
sub
xor
push
push
sbb
inc
and
iret
hlt
xchg
fldcw
fsts
xchg
fimuls
inc
sub
or
add
clc
hlt
pop
fcoml
lds
jno
push
xabort
aad
aaa
mov
out
loopne
inc
test
pop
ficoml
sub
xor
nop
jmp
adc
aad
push
or
outsb
rcll
lret
cmp
pop
gs
push
xor
jae
sub
in
nop
cmp
dec
push
mov
in
xchg
es
and
sub
add
aad
mov
lahf
out
inc
xor
rorb
loopne
or
lcall
mov
aad
ret
paddq
adc
fidivs
mov
movsl
fsubl
sbb
enter
mov
pop
jge
loopne
fnstenv
adc
movsb
data16
roll
push
cmc
push
xchg
test
dec
xchg
push
enter
fsts
fmull
pop
mov
test
hlt
aas
add
sbb
push
push
jmp
push
lock
mov
add
call
pop
mov
adc
sub
adc
daa
push
dec
sbb
inc
add
mov
mov
inc
mov
ret
cmp
movsb
and
pusha
xchg
cld
jb
ficompl
mov
or
stos
sbb
xor
lahf
add
mov
fnstsw
fs
stos
or
fiaddl
lret
inc
in
mov
subb
add
xchg
notl
dec
sbb
mov
mov
das
pop
cmpsb
adc
inc
mul
out
pop
mov
jg
or
jb
leave
es
push
push
out
adc
movsb
cld
push
add
enter
adc
jae
mov
jl
lret
mov
add
ljmp
rcr
loope
sub
ljmp
imul
fstpt
mov
movsb
ljmp
lods
mov
movsb
ja
mov
icebp
adc
add
mov
jmp
fcoml
fdivrl
mov
add
sbb
xor
negb
cmp
aaa
mov
pop
add
mov
cmp
inc
and
xchg
es
sub
and
leave
push
mov
jne
sub
adc
jbe
decl
push
mov
inc
mov
and
fs
and
pop
ds
into
incl
xchg
sub
dec
add
in
sbb
pop
adc
aaa
push
repnz
dec
and
push
in
mov
lret
loop
sub
insl
sbb
outsb
adc
gs
loope
inc
fcomi
or
rcl
scas
xchg
lret
or
mov
test
dec
icebp
adc
inc
xlat
sti
push
cli
lea
jae
je
incl
sbb
sbb
adc
out
dec
or
nop
rclb
pop
mov
mov
xor
and
jg
repz
jnp
rorb
adc
aam
loop
cmp
inc
insl
sbb
imul
out
call
or
stc
cmp
sbb
mov
mov
out
arpl
scas
pop
add
xor
mov
repnz
fwait
xchg
push
xchg
jl
in
sub
sub
lock
ja
incl
sub
shrl
adc
push
inc
dec
sub
or
fdivs
call
xchg
pop
daa
add
cmp
adc
outsb
mov
fcoml
shll
js
or
cmp
int3
sub
mov
mov
cmp
nop
dec
out
push
mov
sbb
lcall
or
jnp
adc
sbb
stos
push
iret
mov
hlt
sbb
movsb
push
cmc
lcall
xchg
jmp
push
mov
or
movsb
and
mov
cmp
test
cld
xchg
jecxz
pop
push
in
out
divl
mov
jge
inc
mov
mov
not
fimuls
mov
pop
popf
mov
inc
bnd
xchg
lds
aad
in
rolb
add
nop
ret
inc
popf
cmp
mov
adc
xchg
out
shl
push
and
out
jns
push
push
faddl
test
add
repz
adc
jns
ljmp
add
dec
sbb
aad
xchg
in
test
fsubs
mov
faddl
adc
adc
mov
mov
mov
mov
jmp
cs
insb
or
call
push
xor
ret
mov
push
pop
icebp
data16
test
fisttpl
out
push
adc
pop
adc
fidivrs
loope
jmp
clc
sub
cmc
adc
jo
out
ret
sbb
jb
sti
out
div
adc
jb
out
xor
inc
data16
mov
inc
rorb
cmp
fistpl
mov
xchg
addb
insb
enter
sbb
mov
sub
dec
pusha
daa
fiaddl
mov
mulb
andl
jb
inc
jo
inc
cli
xorb
lahf
cmp
int
pushf
jge
xchg
cmp
cltd
ret
insl
add
leave
sub
in
inc
aas
pop
adc
cmp
loop
lods
inc
or
xor
mov
shlb
sub
int3
loope
add
loopne
rcrl
addr16
sbb
mov
out
addb
xor
test
mov
outsl
or
int
inc
adc
push
int3
add
sub
xchg
mov
jns
ljmp
rorl
mov
or
cli
and
push
loopne
sbb
fists
xlat
mov
xchg
xchg
jmp
or
dec
testb
pop
mov
cld
nop
loope
and
jne
ret
fimull
decb
fsub
cmp
shlb
or
mov
test
sbb
and
or
inc
stos
jne
rolb
mulb
xor
aam
inc
andl
pop
dec
mov
and
fnstenv
jl
inc
stos
mov
lock
sub
in
ret
mov
ss
loopne
in
in
fnsave
add
fwait
and
in
cmc
jnp
jg
mov
arpl
fisubrs
jnp
xor
pop
jmp
les
jne
mov
inc
jo
mov
dec
jbe
mov
xchg
jg
sub
inc
xor
lcall
xor
jge
and
xor
test
loop
rorb
cld
add
mov
js
or
xchg
cmp
push
lahf
mov
xor
sub
mov
or
pop
sub
sbb
or
imul
nop
xor
mov
mov
roll
lock
lret
add
out
push
mov
aam
jmp
adc
sbbl
add
je
les
mov
mov
sbb
jne
jg
add
in
fdivrp
out
pop
aad
push
lock
mov
add
or
rcrb
in
daa
xor
sbb
shll
jecxz
fucomp
sub
test
or
shl
pop
int
lods
add
test
call
lods
mov
mov
ret
push
loop
lock
fstpl
or
jno
pop
sbb
repnz
hlt
pop
pop
add
stc
dec
ja
out
sahf
sbb
xchg
sub
in
mov
inc
imul
imul
push
enter
add
push
mov
xor
adc
sub
inc
add
mov
jae
lods
mov
adc
or
nop
inc
mov
lahf
adc
ds
cmp
adc
repz
rorl
stc
inc
out
push
mov
or
insb
sub
pop
iret
mov
and
ja
outsl
pushl
xchg
push
pop
jmp
cmp
add
ja
mov
scas
push
dec
clc
adc
inc
or
lcall
mov
xchg
je
push
jp
rclb
adc
sub
pop
adc
cmp
neg
mov
lahf
enter
adc
add
fldenv
nop
addr16
mov
mov
out
dec
jo
hlt
das
ror
into
jp
mov
in
jmp
xor
push
pushf
je
icebp
ljmp
pop
pop
sbb
rolb
inc
mov
shr
jae
call
pushf
inc
sub
cld
dec
adc
adc
shl
pop
je
mov
stos
scas
mov
insl
push
dec
movsl
push
adc
adc
adc
add
mov
fmull
dec
les
mov
into
adc
scas
ds
add
pmaxub
adc
repnz
add
jge
fs
xlat
cmpsb
push
pop
push
or
adc
sub
sub
lret
mov
lahf
fnstenv
fs
test
pusha
js
xchg
mov
jecxz
ja
jge
adc
jb
in
mov
packssdw
movsb
daa
pushf
outsl
adcb
pop
hlt
pusha
push
gs
or
jge
js
adc
sbb
pushf
aad
lahf
or
out
push
mov
mov
jbe
enter
ret
les
rclb
pop
push
aad
inc
add
inc
adc
pop
push
das
inc
xchg
aam
push
jp
push
call
and
push
ret
scas
mov
or
jno
hlt
adc
or
push
js
pop
mov
push
std
in
cmpsb
jno
mov
fnsave
pop
gs
in
insb
sbb
enter
or
lock
xchg
into
xor
into
insl
sub
adc
shlb
jle
jl
xchg
fs
mov
cmp
fnstenv
or
loope
mov
dec
dec
jnp
xorl
adc
dec
daa
fimuls
lods
shld
ret
pop
leave
fsubrs
jmp
leave
jp
ret
cmpsb
xor
nop
cmp
mov
inc
add
lods
push
push
xchg
dec
sbb
xor
and
sub
inc
imulb
pop
cli
inc
or
sbb
repz
xlat
or
lds
lods
mov
cmp
loope
dec
ja
mov
jl
shll
push
sti
lods
mov
push
jecxz
mov
aam
push
leave
mov
lds
sub
imul
in
adc
out
adc
loop
bnd
sub
xchg
pop
sub
lods
mov
aam
out
jnp
mov
pop
leave
xchg
pop
jnp
dec
lret
inc
jo
cmp
sbb
outsl
std
mov
out
and
sub
jns
mov
ret
jmp
xchg
rolb
xchg
xor
jecxz
xchg
xchg
push
inc
push
sub
push
orb
xor
jmp
iret
subb
loope
je
clc
lahf
cmp
popf
hlt
lahf
loope
inc
ss
jns
fistl
loopne
sub
in
mov
add
dec
insb
xchg
inc
mov
pop
fimuls
xchg
es
or
mov
ret
andl
mov
mov
adc
sbbb
sub
inc
popf
sti
arpl
or
or
jmp
sbb
das
dec
cltd
cmp
cmp
in
mov
or
add
les
adc
or
out
ret
xchg
pop
leave
ret
push
lcall
in
cld
fsubl
cld
xor
out
lods
shrl
enter
sub
gs
xor
pop
arpl
addl
sbb
popf
hlt
insb
jl
jo
fbld
xchg
dec
jo
arpl
out
xor
cmp
xchg
idivl
lret
test
repnz
mov
popf
mov
jmp
ret
mov
xchg
cmp
fiaddl
sub
ret
fwait
js
dec
adc
popf
sbb
jo
jl
int3
jno
adc
ljmp
push
gs
stos
inc
scas
sbb
popf
andl
mov
inc
fs
xchg
cltd
cltd
xor
cld
hlt
ret
xor
popa
scas
xchg
mov
dec
shl
lods
lret
loopne
leave
sbb
xchg
movsl
adc
daa
in
sbb
mov
pop
ljmp
out
xchg
add
add
aad
jecxz
mov
xchg
dec
mov
push
push
nop
je
ret
mov
or
mov
aaa
sarl
xchg
mov
fcmovnu
sahf
subb
xchg
rcrb
aaa
imul
xchg
cltd
push
xor
inc
mov
jb
fisubs
jb
add
mov
cmp
das
mov
cld
inc
adc
orl
idiv
inc
mov
out
mov
clc
negb
lret
rolb
xchg
shl
stc
cmp
faddl
cmp
xchg
fwait
or
out
xchg
sub
call
pop
xchg
push
fdivr
cmp
loopne
sqrtps
sub
xchg
jmp
call
xchg
test
cli
xchg
imull
xchg
lods
sub
cli
ss
loop
call
pop
lock
repz
sub
aad
inc
jo
sub
lcall
aam
daa
mov
add
xchg
cmpsb
or
jo
and
mov
mov
sbb
fs
out
popa
or
and
les
loop
clc
pop
and
aaa
rclb
cmp
pusha
loop
clc
rorl
sub
lods
jg
sahf
or
push
jl
ja
xchg
push
rcrb
test
adc
cld
roll
cmp
mov
xchg
cld
outsb
std
mov
call
lahf
xchg
push
addr16
or
ret
pop
test
cltd
sbb
testl
icebp
out
rcrb
push
or
testb
cltd
ret
push
out
push
jno
jmp
push
xchg
adc
cs
push
push
call
add
shlb
roll
pusha
xor
in
in
or
mov
mov
mov
push
or
xlat
dec
or
push
sub
push
in
lock
adc
loope
sub
hlt
pop
add
movsb
push
dec
fistl
push
sbb
lea
xchg
add
sub
adc
std
xchg
or
les
mov
pop
and
sbb
int3
shrl
adcb
xor
cwtl
repnz
adc
insb
lods
dec
dec
sbb
push
mov
dec
test
sub
pop
jae
jo
add
and
sub
fsub
loop
adc
pop
xor
adc
sahf
and
or
xchg
fildl
or
mov
cld
push
inc
sub
or
fistps
ret
and
xchg
push
jne
rcrl
sub
adc
jmp
xor
out
into
clc
adc
cmpl
add
jg
xchg
mov
adc
mov
mov
push
adc
into
sub
cmpsb
inc
fadds
xchg
cmp
add
pop
ss
or
push
mov
sbb
cli
mov
int3
imul
lods
rolb
stos
jmp
andl
sub
cwtl
push
movsb
push
adc
inc
mov
sbbb
rolb
mov
clc
scas
xchg
jmp
cmp
and
pusha
mov
pop
mov
jnp
loop
mov
add
inc
cmp
ret
cmp
stos
cmp
sbb
fsub
pusha
and
loop
push
leave
or
rclb
and
push
fcmovb
arpl
out
les
daa
jbe
adc
dec
stc
scas
adc
dec
xchg
pop
sbb
mov
jno
xchg
mov
jae
int
sbb
dec
jnp
leave
dec
jae
sbb
sub
or
inc
lods
decl
repnz
jg
out
cmp
cmp
fmul
pusha
imull
sbb
xor
jbe
scas
add
idiv
pop
push
mov
pop
adc
mov
cmp
lret
lods
dec
int
loop
push
test
loop
pusha
jae
sub
push
dec
inc
call
add
mov
pop
pop
aas
dec
ficompl
frstor
adc
test
and
cmp
je
in
ja
mov
into
imul
or
or
adc
xchg
pop
insb
or
mov
nop
dec
insb
dec
push
or
or
add
cmovb
xchg
ljmp
mov
jmp
push
dec
cwtl
cmp
and
jbe
inc
aas
pop
mov
fdiv
call
sti
cld
aad
jnp
inc
adc
int3
sbb
out
leave
test
rolb
fists
fcomps
sub
rcl
stos
jae
sbb
fists
pop
cmp
add
and
dec
pop
shrb
sbb
shlb
push
std
and
and
jno
fists
out
pop
and
les
aaa
push
nop
fadd
xchg
mov
insb
sub
fstp
jecxz
testl
dec
sbb
fisttps
mov
xchg
jle
jne
ljmp
xchg
popf
inc
fdivl
mov
cmp
shl
lea
out
lahf
mov
dec
bswap
imulb
psubb
lret
stc
jge
and
and
les
jo
xchg
stc
mov
mov
lods
rcll
fnsave
nop
cld
or
lahf
sarb
sub
lods
add
sub
push
pop
mov
push
aas
push
adc
mov
movsl
pusha
cmc
or
push
popl
adc
fmul
stos
cmp
incl
and
push
iret
jo
mov
cmp
fldenv
add
repz
sub
movsb
inc
jae
and
ret
sub
sub
sarb
out
hlt
dec
call
test
or
sub
fadd
or
sbb
xchg
lret
repnz
adc
fstpl
rcr
pop
pushf
pop
movsb
adc
jnp
mov
push
rorb
sbb
dec
lods
mov
xchg
sbb
or
or
mov
push
adc
aad
lods
sub
sub
jp
lahf
rcl
adc
nop
ret
inc
ss
fs
fimull
into
aas
in
std
add
jmp
clc
fucom
sub
mov
ss
push
leave
push
push
jne
mov
ss
sbb
mov
push
sub
mov
pop
adc
in
sbb
out
aaa
sbb
movsb
or
scas
add
movsb
push
inc
das
roll
xor
xlat
sub
xchg
repnz
inc
enter
sbb
xorl
aam
jne
fdivl
enter
sub
stc
into
movsb
icebp
rol
aaa
xchg
loope
cmpsb
pop
cmpsb
or
pushf
sbb
cmp
out
push
mov
fbld
out
rcl
add
repz
les
rcpps
dec
arpl
add
xchg
lret
dec
push
fs
dec
mov
push
inc
xchg
mul
push
hlt
jb
xchg
jbe
lahf
lret
xor
sub
repz
mov
mov
rorb
xlat
scas
cmp
mov
ret
adc
mov
xor
inc
or
fcmovne
loope
icebp
adc
mov
rol
sbb
fldl
repnz
in
xor
pop
daa
ret
scas
divb
sbb
roll
push
inc
mov
sbb
mov
shl
push
and
or
mull
mov
clc
adc
jp
push
xchg
mov
daa
xchg
loop
dec
add
fwait
xchg
shlb
lock
test
push
insb
rorl
hlt
repz
test
inc
pushf
jne
test
jb
push
add
or
mov
push
ret
loope
xchg
test
inc
jecxz
dec
and
mov
mov
add
int
pop
lret
cmp
sti
push
mulb
or
dec
and
mov
dec
sbb
jmp
dec
xlat
inc
les
xchg
cmp
xchg
jae
mov
jecxz
mov
es
test
sub
sbb
sbb
out
adc
xchg
add
sub
dec
push
xchg
push
fnstsw
mov
pop
lahf
xor
inc
and
sub
inc
add
jae
ljmp
out
enter
mov
rclb
push
imul
inc
jge
pop
enter
les
adc
dec
testb
add
aam
loope
sbb
cmp
bound
push
lcall
in
fcompl
jne
je
sbb
hlt
lahf
faddl
rcll
test
xchg
sub
out
in
fmul
ret
dec
add
inc
rclb
mov
dec
xor
push
mov
add
cmp
mov
jmp
hlt
jae
repnz
stc
add
adc
add
lret
mov
rolb
fs
xor
adcb
adc
adc
sub
hlt
pop
test
sbb
jl
dec
lret
sbbb
dec
into
hlt
push
imul
mov
mov
rolb
jnp
inc
cmp
push
xor
or
inc
lock
hlt
cmp
arpl
inc
push
push
mov
loop
aas
add
cmpsb
adc
inc
sub
pop
fisttpll
sahf
push
mov
stc
pop
mov
jae
adc
mov
lock
push
je
aad
push
xchg
cmpsb
movsb
je
jmp
pop
adc
dec
xor
sbb
movsb
icebp
test
ficoms
iret
xor
or
stc
movswl
push
mov
or
in
and
inc
jg
add
push
movsl
or
xchg
aam
and
shl
add
aas
imul
inc
sbb
int
mov
fisubrs
jae
push
sti
mov
rolb
dec
xor
mov
sub
sub
pop
cmp
cmpsb
jne
dec
rolb
push
cmp
dec
jp
movsl
and
cmp
mov
dec
mov
mov
inc
sbb
pop
shr
add
xchg
and
pushf
mov
ja
daa
mov
mov
jge
jb
adc
inc
push
xchg
adc
lret
mov
into
mov
or
sarl
and
fnstsw
stc
shrb
mov
adc
test
adc
pop
mov
xchg
push
or
fnstcw
jmp
ljmp
or
sub
cmp
call
fs
adc
jne
les
out
or
adc
add
dec
in
fisubrl
xor
pop
iret
mov
sbb
inc
es
mov
lds
cmp
sahf
or
add
dec
mov
jo
fucomip
lods
adc
sub
push
or
sub
jb
or
lahf
adc
jl
pop
sub
push
stos
mov
scas
sbb
xor
cltd
nop
lea
sub
cmp
xlat
test
or
cmp
or
xor
sub
pop
adc
fidivs
xchg
xor
stos
xchg
mov
fisttpll
push
test
jmp
cmp
mov
mov
bound
loopne
rorl
testb
mov
imul
push
fsubr
iret
les
adcb
test
mov
dec
xor
xchg
ljmp
push
inc
test
mov
jae
test
lock
push
nop
scas
inc
jns
sbb
add
out
add
adcb
add
add
lret
cmpsb
and
fnsave
mov
aam
std
jb
mov
fwait
adc
push
push
adc
movsl
or
add
movsb
push
xor
scas
shl
mov
push
push
push
jmp
ret
repz
pop
cld
cmpsl
scas
loopne
stos
mov
jne
fstpl
icebp
insl
cld
iret
rcl
sti
loope
je
mov
movsb
into
rcrb
add
xor
mov
sub
and
push
jmp
push
in
cmp
or
mov
ret
mov
sar
sbb
add
roll
fiaddl
mov
movb
cmp
lcall
into
mov
call
cmp
mov
adc
lods
out
fnsave
sub
sub
rclb
fs
add
movsb
sub
enter
imul
aas
xchg
loope
rclb
or
adc
sbb
sub
cmp
mov
jmp
mov
mov
sti
pop
push
ret
or
outsb
cwtl
outsl
int
push
sub
stos
jp
imul
nop
inc
jecxz
outsb
in
mov
inc
movsb
and
push
pop
pop
jmp
fsub
cmp
pop
aad
dec
push
into
aas
jno
push
adc
cld
or
sub
jb
or
mov
xchg
and
sub
mov
dec
fcoml
dec
in
lds
lea
and
pop
jp,pn
call
push
push
int
mov
into
mov
ror
out
pusha
xlat
movl
sub
mov
pop
sub
enter
push
xchg
enter
jae
fisubrs
lret
push
ret
mov
xchg
repnz
std
xor
sub
pop
or
mov
clc
ret
rcll
out
pop
insb
bnd
loope
out
stos
mov
ret
test
bound
cwtl
push
rorl
pushf
movsl
loopne
sub
mov
je
sti
shll
or
pop
push
lods
adc
mov
aam
sub
sub
lret
push
outsl
mov
repz
aad
xlat
push
adc
int
movsl
add
or
lds
lock
adc
add
mov
push
outsl
ljmp
xchg
mov
mov
xor
or
jae
sbb
or
sbb
or
mov
int3
cmp
icebp
xor
pop
dec
in
test
sbb
dec
adc
cs
nop
in
in
add
mov
fldl
xchg
and
sub
mov
pop
clc
jb
xrelease
lret
pusha
mov
repz
fwait
adc
dec
roll
mov
stos
xchg
add
into
xor
movsl
out
hlt
cmp
or
in
std
gs
movsb
gs
sbb
mov
pop
pop
shlb
cmpl
cwtl
mov
xlat
repnz
adc
lret
sub
leave
cmp
push
scas
fisttpl
and
adc
ja
mov
adc
push
cmpsb
inc
xor
adc
sbb
aad
or
xchg
jbe
fiaddl
and
mov
and
sub
mov
cmp
fimull
push
ljmp
sub
stc
and
xor
or
pop
xchg
cmp
mov
adc
or
xor
jb
inc
iret
xor
out
fnstsw
lret
pop
out
fidivs
in
cmc
mov
or
repz
loope
xchg
or
mov
sbbl
repnz
aad
fsubl
sbb
adc
repnz
les
or
lret
aaa
test
jecxz
mov
popf
lods
mov
add
push
das
mov
fisttps
mov
pusha
out
mov
xchg
cld
pop
jae
sarb
pushf
push
adc
mov
sbb
dec
adc
or
movsb
rcl
loop
push
mov
ret
add
pop
les
mov
outsl
insl
jmp
faddl
rorb
xchg
pop
add
in
dec
test
sbb
and
push
or
fcomps
xor
mov
adc
sub
and
les
push
cmp
and
inc
or
in
sub
or
push
jne
adc
mov
std
mov
icebp
cwtl
sbb
repz
xor
lock
or
mov
xchg
mov
stos
mov
push
pop
in
adc
sub
call
mov
fbld
scas
out
bnd
add
mov
mov
subl
jmp
push
fsubrp
sub
cmp
pop
sbb
push
sahf
ror
add
roll
incl
or
call
bndldx
xor
or
xor
leave
lcall
test
fdivl
loop
fadds
aam
mov
adc
sahf
push
and
dec
inc
int
mov
stos
hlt
in
dec
addr16
test
mov
cld
loopne
xchg
out
sbb
adc
sub
test
add
mov
fs
int3
add
gs
add
dec
xor
jge
sub
mov
lahf
dec
out
std
leave
imul
mov
loopne
dec
push
fsub
cmp
mov
hlt
int3
les
dec
xor
mov
sbb
into
adc
or
add
or
sub
lret
sbb
dec
cmp
cmp
fwait
or
adc
inc
sub
lahf
mov
pop
inc
stc
inc
mov
clc
jmp
push
mov
fimuls
call
movsb
dec
jns
int3
jp
add
cmpl
or
sti
sub
out
movsl
shrb
dec
in
jecxz
mov
orl
push
push
push
add
fiadds
into
rolb
xor
sahf
push
pop
sar
fisttps
call
outsb
ret
dec
movsb
out
push
lods
push
cmp
push
dec
push
popa
or
adc
loop
andl
jg
adc
movnti
aas
daa
out
fs
inc
js
lret
inc
xor
dec
mov
hlt
stos
pushf
lods
js
int3
sub
add
je
les
in
rcrl
outsb
dec
sahf
imul
inc
jg
dec
iret
hlt
test
mov
adc
inc
push
mov
cmp
xchg
xlat
add
cmpsb
sbb
jne
pmuludq
dec
hlt
push
or
pop
push
pushf
mov
fs
push
pop
or
test
stos
sbb
ss
rsm
xchg
lahf
and
push
dec
mov
cli
loopne
icebp
test
lds
ret
lahf
lret
icebp
mov
lock
in
add
pop
sbb
lret
sbb
dec
adc
xor
daa
std
mov
jmp
ret
xchg
add
mov
xorb
adc
mov
in
xchg
cli
stc
and
add
jmp
pop
popa
cmp
dec
pop
lock
addr16
mov
mov
jns
out
or
inc
hlt
ret
mov
sub
push
xchg
adc
mov
lods
psllq
push
test
dec
adc
add
mov
nop
sub
ljmp
movsb
cmp
lret
decl
arpl
stc
pop
add
orb
int3
insl
mov
cmp
repz
pop
getsec
test
pop
adc
inc
mov
nop
sub
std
sbb
mov
pushf
sub
test
dec
mov
fcoms
dec
cmp
mov
jne
adc
mov
pop
push
mov
cltd
in
sbb
dec
and
and
int3
push
jmp
mov
ret
mov
adc
cwtl
dec
or
or
mov
out
insb
mov
or
and
incb
stc
dec
jp
out
jno
inc
and
mov
lret
jl
stos
sbb
popf
adc
enter
aas
adcb
les
jecxz
or
inc
das
or
rorl
enter
add
mov
mov
in
dec
or
mov
jl
movsb
adc
das
xor
mov
xchg
lret
or
add
rcr
int3
ror
push
test
dec
mov
sbb
fs
fs
hlt
xchg
add
jno
loopne
paddb
clc
divb
xchg
ret
int3
ss
ret
add
mov
out
and
mov
lea
adc
hlt
or
jae
lret
and
out
sbb
ss
jns
enter
cmp
mov
xchg
mov
pushf
mov
scas
data16
arpl
adc
add
or
lea
pop
dec
xchg
shl
mov
stos
or
push
cmp
lods
loopne
push
movsl
pusha
jle
popa
orl
rclb
cmp
push
pusha
inc
or
adc
bound
fs
inc
leave
shlb
lock
aam
xchg
pop
add
andb
sub
sarb
rorb
mov
sub
cmp
jae
push
mov
loopne
xlat
cmp
mov
jmp
pop
and
xchg
xor
mov
xchg
addb
xlat
add
jmp
iret
push
push
loopne
sarb
xor
adc
movsb
jo
adc
shll
nop
dec
jmp
xor
mov
fsub
mov
or
outsl
mov
push
sarb
xchg
dec
add
aad
ret
shrl
shlb
mov
adc
xlat
jg
out
xchg
mov
push
fwait
out
int
out
ss
dec
lds
sahf
jmp
mov
out
lahf
mov
pop
cmp
or
xchg
pusha
fimuls
sbb
cmp
push
push
push
fldln2
jns
call
repz
mov
sub
dec
dec
stos
push
insb
ret
push
adc
in
mov
push
dec
nop
lcall
sbb
pop
je
jl
jl
adc
into
sbb
mov
pop
daa
fiadds
mov
xchg
insl
lods
das
rorl
ret
pop
cwtl
repnz
stos
or
ja
cmp
fiadds
xchg
jo
cmp
mov
fisubrl
faddl
xchg
xchg
mov
or
mov
add
into
adc
or
pop
mov
mov
or
mov
sbb
sub
pop
or
fidivs
or
lcall
and
mov
loop
sbb
mov
mov
packuswb
loopne
adc
mov
fnsave
loope
repnz
orl
jo
xor
mov
mov
loop
pusha
pop
je
xchg
aas
clc
sbb
fldenv
mov
push
sub
and
sub
cs
and
dec
stos
loopne
push
xor
jns
mov
and
insl
push
xchg
xchg
push
loop
adc
mov
cs
test
pop
cwtl
mov
pop
clc
pushf
jg
popa
mov
mov
jne
js
dec
pop
inc
mov
mov
adc
push
and
stc
and
adc
or
mov
push
push
adc
push
and
jp
ss
xor
arpl
ljmp
invd
out
popf
add
andb
fs
mov
xor
cmp
xlat
pop
je
push
mov
stc
mov
mov
lahf
inc
inc
out
or
sbb
push
int
divl
sbb
lahf
pop
or
shlb
std
jmp
lahf
inc
aas
mov
in
push
cli
divl
pop
push
daa
lahf
in
pop
jne
sub
jae
imul
nop
test
lret
add
adc
adc
data16
test
xchg
add
and
fcom
or
mov
ljmp
aam
int3
mov
repz
ljmp
or
in
scas
add
rcrb
rorb
hlt
hlt
or
sbb
in
je
add
and
mov
dec
test
test
movsb
int3
movsb
hlt
add
add
xor
fdivr
or
add
outsb
lahf
or
mov
or
ret
inc
or
call
int
test
push
daa
outsl
std
push
push
push
movb
jae
and
adc
cmpl
lock
mov
mov
pop
mov
popl
int
adc
xchg
lret
and
lock
xchg
or
pop
clc
lret
jg
add
mov
cli
dec
sbbl
push
mov
mov
lret
incl
cld
fcompl
add
in
sbb
jo
add
mov
jns
in
sub
jmp
push
std
add
adc
int3
rol
mov
sbb
dec
sbb
insl
test
or
xchg
in
repnz
fmuls
mov
icebp
cmc
xor
adc
xchg
sbb
adcl
or
push
pop
adc
mov
bound
out
and
hlt
inc
and
fcoml
cmp
out
xor
push
in
add
pushf
mov
sub
imul
or
mov
insl
mov
ja
add
jg
xchg
fistpl
hlt
sub
jo
in
xor
stc
xchg
mov
mov
enter
out
ljmp
inc
add
adc
or
or
pop
or
daa
fdivrp
pop
sbb
xor
or
dec
sarl
inc
xchg
int3
clc
repz
lahf
int
add
jmp
mov
stc
cmc
sbb
add
mov
mov
subl
cmp
sub
inc
ret
add
les
mov
add
pop
xor
adc
outsl
ljmp
add
push
xor
je
jmp
fdivs
xlat
repnz
out
lds
stos
dec
add
pop
adc
push
add
in
adc
sbb
fidivl
mov
ror
iret
add
jg
les
pop
cmp
js
fmull
loope
sti
jbe
test
xor
cmp
push
push
loop
mov
out
mov
mov
xor
fdivs
mov
aaa
inc
push
out
stc
push
add
call
sbb
ljmp
dec
femms
jnp
or
adc
adc
adc
or
repnz
mov
cwtl
ret
mov
testb
jb
jb
mov
popl
push
lea
out
sbb
push
xorb
xchg
lock
add
sbb
mov
adc
nop
mov
sbb
and
outsb
ret
ret
mov
add
sti
in
lret
sbb
xchg
fadd
pop
ret
stos
cmc
mov
js
xchg
xor
addr16
cmp
arpl
out
or
mov
add
or
jmp
repnz
sarb
mov
add
xor
and
pop
inc
add
mov
push
push
enter
or
or
or
fiadds
xor
jb
pop
xor
imul
add
push
sti
fistpl
mov
in
fdivr
mov
jmp
fsubl
jl
daa
aam
hlt
stc
xchg
pop
imul
mov
in
shr
sbb
pop
or
mov
adc
in
test
inc
les
ljmp
lea
fisubs
pop
daa
ss
sahf
inc
mov
out
cmp
test
add
flds
mov
push
adc
dec
jmp
not
cli
pop
sbb
pushf
push
or
inc
mov
sbb
movsb
mov
sbb
dec
xchg
cmpsb
shl
add
sbb
dec
sbb
ret
jge
mov
push
or
out
pop
mov
rcll
mov
pop
jecxz
shl
or
mov
pop
mov
hlt
push
adc
or
jne
xchg
popf
mov
loope
pop
jbe
scas
lock
adc
outsl
push
adc
hlt
pop
jbe
les
jb
pop
mov
ret
ss
mov
jecxz
bound
sub
cmpsb
sub
outsl
lahf
sbb
pop
cld
imul
shll
dec
mov
cmp
push
push
jae
push
enter
repz
and
cwtl
in
mov
add
mov
pop
shr
mov
popf
sbbb
add
mov
into
jns
mov
movb
nop
stos
jno
xor
popa
jns
mov
xchg
dec
mov
inc
add
notb
in
movsl
mov
dec
lahf
scas
jne
mov
pop
nop
or
lock
sar
mov
in
repnz
sbb
ffreep
pop
adc
scas
repz
cmp
sub
sarl
jp
xor
stc
inc
lahf
in
leave
xor
stc
pop
lods
cs
shlb
dec
mov
mov
cmpl
jmp
nop
movsl
xor
mov
xor
test
arpl
adc
sahf
ficoms
shll
movsl
popf
nop
dec
add
mov
repz
or
mov
andl
and
xor
sbb
sbb
push
cmp
dec
in
int
test
push
jl
fwait
rolb
mov
add
addr16
cli
xchg
rorb
mov
dec
cmp
out
xchg
sti
push
mov
hlt
fmull
mov
shr
mov
push
and
cwtl
cmpsb
out
push
stc
jae
add
stc
hlt
sub
pop
sub
jle
jp
loope
lcall
pushl
repz
int3
sbb
sub
and
aaa
or
cmp
push
out
or
adc
into
mov
or
rorb
xchg
dec
fbld
insb
popf
test
stos
mov
push
call
mov
xchg
ror
dec
sti
sbb
int
aaa
adc
inc
pop
outsl
xor
or
cwtl
in
test
mov
pop
jae
cmp
mov
sbb
mov
lahf
add
and
add
push
test
shlb
add
or
jns
rcrl
xor
shll
lock
call
aad
jb
pop
pop
in
sub
aad
leave
mov
aad
mov
rolb
xchg
in
iret
jg
cmp
loope
sar
sub
dec
pop
clc
jno
mov
jmp
loopne
iret
xchg
xchg
loope
fdivp
cmpsl
in
fcmovu
lock
mov
jbe
push
xchg
hlt
sbb
or
hlt
cltd
cmp
pushf
sahf
mov
inc
mov
enter
adc
xchg
adc
xchg
ss
sbbb
mov
jp
ds
cmc
rcl
fsubl
outsb
add
aam
xchg
pop
popf
cmpsb
or
loop
xchg
mov
sbb
mov
mov
lds
jbe
rdtsc
sbb
flds
mov
out
cld
iret
fsubp
rcrl
mov
adc
xchg
and
xchg
add
adc
sbb
call
mov
ret
sub
mov
xchg
cmc
or
repz
mov
xchg
fs
sbb
cmc
add
je
add
hlt
dec
and
cmc
sbb
xor
aad
mov
add
xchg
lret
mov
hlt
mov
mov
inc
add
sahf
xchg
fsubl
mov
or
mov
into
cmc
sbb
lcall
dec
pushf
mov
pop
mov
fadds
xor
loopne
pop
ret
rcr
mov
push
pop
lds
push
push
into
jae
lods
cmp
je
les
or
out
or
cmp
fildl
sbb
bound
les
push
push
in
stos
pop
xchg
nop
fwait
jb
mov
dec
add
adc
push
mov
mov
iret
test
jne
inc
push
add
adc
data16
inc
adc
adc
jle
rorb
inc
and
into
dec
xchg
ret
mov
idivl
cmp
or
push
mov
lods
adc
int3
xchg
pop
in
ds
aam
leave
lahf
es
cmp
jne
sub
mov
jb
repz
cmc
insb
push
push
and
test
cmp
push
inc
fsubp
fidivrl
and
or
dec
insb
nop
jg
and
sbb
sarl
push
or
shrl
cwtl
mov
jle
dec
fdivrl
int
pusha
popa
jne
rol
mov
dec
pop
mov
jge
xor
add
popl
into
or
sub
mov
mov
mov
dec
xor
and
pushf
dec
fistpl
mov
in
imul
jle
mov
adc
pop
sahf
int
je
faddl
inc
lahf
lret
leave
adc
dec
mov
mov
jle
jge
push
xor
mov
mov
movb
xlat
push
cmpsl
cmp
iret
in
and
or
sbb
sbb
in
mov
or
fcoms
out
adcb
add
fcomip
filds
stc
push
and
push
or
enter
out
cmpsb
xor
into
adc
in
repz
or
movsb
in
adc
mov
sbb
movsb
jmp
or
add
test
mov
call
jnp
arpl
cmp
int
sub
cmp
jb
adc
dec
cli
mov
rcr
push
nop
daa
imul
sub
les
jb
lods
stc
mov
xchg
xchg
imul
lret
mov
adc
mov
call
push
pop
sub
hlt
inc
iret
adc
jno
in
mov
mov
mov
jl
mov
pop
pop
or
mov
push
mov
ss
fwait
enter
pop
popf
or
xor
sti
mov
push
adc
test
orl
stos
loopne
mov
test
movsb
add
and
cmp
dec
stc
mov
xchg
notb
inc
lock
icebp
inc
es
inc
loop
or
adc
inc
loop
ret
fs
mov
jmp
cmp
stc
sbb
mov
lret
jne
ds
adc
mov
in
adc
adc
mov
adc
mov
popf
test
xor
push
fldenv
inc
movb
ror
lahf
loopne
mov
in
hlt
mov
jl
cmp
or
xchg
jmp
mov
mov
int
les
dec
inc
adc
lahf
push
lock
cvttps2pi
xchg
fnsave
lods
mov
sub
jmp
in
push
scas
mov
add
mov
push
je
sahf
mov
pop
and
jg
mov
ret
xor
adc
cmpsb
mov
cwtl
ljmp
cmp
in
loope
bound
mov
shlb
or
gs
adc
arpl
add
xor
mov
xchg
jae
pop
push
lret
ds
aaa
mov
xchg
roll
mov
adc
int3
mov
add
push
xchg
lahf
insb
bound
adc
push
adc
pop
fs
bound
and
fidivrl
push
in
mov
loop
in
or
ss
dec
in
or
in
icebp
add
push
jnp
sbb
call
orl
or
or
sti
loope
mov
iret
inc
nop
push
xor
bound
aad
dec
inc
push
in
adc
adc
fisttps
hlt
call
rcl
out
nop
rcrb
or
push
jmp
push
sbb
adc
xor
and
pop
xor
faddp
sub
pop
jg
sbbl
push
jne
dec
lcall
popf
cmp
push
inc
lahf
xchg
adc
mov
rcll
push
mov
cmp
cmp
out
mov
cmp
pop
xchg
sub
out
jl
add
or
scas
ret
ret
fwait
add
cmp
and
or
enter
add
cmp
pop
fistps
call
subl
push
adc
scas
cmp
into
sub
xchg
enter
es
adc
ficoms
orb
fimuls
dec
hlt
iret
add
xor
in
movsb
std
mov
rclb
mov
stos
jbe
add
sub
pop
mov
sbb
and
mov
adc
push
lret
mov
jno
int
sub
jmp
adc
cmpsb
sbb
or
sti
mov
stos
push
sbb
mov
mov
stc
cmp
mov
pop
push
add
mov
xchg
test
bound
adc
and
imul
mov
call
jp
ret
mov
dec
in
mov
xchg
sahf
pmulhuw
in
mov
std
adc
lock
subb
jecxz
popa
fcmovnbe
xchg
stc
sbb
arpl
add
inc
and
mov
dec
ljmp
fdiv
mov
add
mov
cmpsl
pushl
jmp
mov
adc
sbb
mov
mov
divb
sbb
dec
or
icebp
xchg
xor
test
roll
jnp
outsb
leave
out
mov
lea
mov
mov
mov
insb
adc
cmpsb
add
pop
in
sub
nop
sub
dec
test
shrl
fmuls
lock
mov
sub
popf
fistpll
repz
aaa
add
dec
pop
mov
mov
int
pop
outsb
std
add
gs
add
pop
sbb
imul
adc
dec
lret
das
pop
mov
adc
in
fistpl
and
out
add
repz
sbb
aad
ljmp
push
push
hlt
cld
xor
mov
xchg
lahf
cs
push
inc
call
ret
in
lret
lock
adc
or
fwait
push
jbe
xchg
add
je
sub
xor
sub
pop
push
dec
dec
add
xchg
lahf
xchg
movsl
inc
lock
ljmp
sub
lret
shlb
loopne
or
xchg
cwtl
les
xchg
mov
inc
cmp
cld
mov
dec
movsb
es
into
adc
or
dec
push
mov
imul
test
stc
dec
movsl
push
cmp
push
mov
imul
dec
cmp
pop
int3
cs
lret
popl
mov
push
dec
or
add
jmp
aad
or
shr
and
into
call
mov
xchg
dec
mov
or
mov
cmp
or
xchg
mov
mov
gs
pop
jb
sub
loop
add
adc
lcall
sub
or
out
cmp
or
pop
les
sbb
fidivrs
jb
add
fldl
push
insl
test
mov
push
js
repz
sub
jbe
sbb
cmp
pop
inc
xor
push
mov
xchg
je
xchg
loopne
push
sub
cvtps2pd
stc
sub
sarl
add
sahf
rcl
mov
sub
outsb
fucomip
pop
aam
leave
xchg
dec
mov
fnsave
rclb
jmp
mov
mov
adc
js
sbb
in
subb
rcl
adc
add
or
sub
aad
jb
push
push
push
pop
add
loop
je
cmpsb
mov
lahf
iret
adc
push
test
adc
cmp
xor
je
lahf
adc
cmc
int3
add
sub
mov
ret
push
int3
test
daa
loop
int3
pop
lock
push
lret
or
xchg
leave
jmp
ljmp
sub
mov
fwait
cmp
ret
fs
fcoml
ret
mov
pop
xchg
mov
repz
shl
and
sti
xchg
faddp
js
out
or
mov
in
div
aam
repnz
pusha
add
fwait
push
mov
or
ret
inc
mov
mov
add
xor
data16
dec
mov
cmc
mov
mov
std
enter
aaa
stos
imul
fisttpll
xchg
xchg
cli
sub
xor
inc
adc
push
loope
mov
out
popf
shll
add
lret
aad
mov
adc
je
lahf
or
mov
test
lock
mov
sub
addb
mov
sub
or
pop
push
or
cltd
adc
mov
cmp
mov
test
xor
lods
sbb
ffreep
sbb
xchg
add
jg
or
iret
sbb
insl
cmc
and
cld
scas
test
into
test
out
loopne
or
add
loop
aas
sbb
into
pop
and
sub
jl
inc
lret
sub
lock
sub
mov
scas
push
fldl
sti
mov
jo
adc
repz
shlb
mov
push
xchg
sbb
test
inc
mov
rcrb
mov
sub
in
mov
out
dec
fcmovu
insb
je
into
pop
xchg
mov
in
icebp
pop
aam
jg
xchg
int3
and
add
and
cs
int3
nop
out
cmpsb
lock
xchg
adc
jp
pop
mov
imul
enter
mov
mov
repz
jb
add
repz
mov
divb
and
inc
notb
shl
xchg
rol
push
shlb
addb
push
xor
stos
jae
sbb
adc
mov
mov
sbb
dec
dec
push
add
mov
enter
mov
or
leave
shlb
aad
mov
decl
add
testb
pop
andb
je
nop
call
or
or
dec
orb
jne
xchg
dec
jno
dec
xchg
iret
cmc
fldenv
lahf
dec
ret
cmc
sbb
lods
jecxz
out
dec
adc
jl
shlb
hlt
icebp
cltd
push
negb
sbbb
ret
fldcw
ljmp
lret
xchg
add
jmp
xchg
add
pop
lret
sahf
add
fildl
mov
push
xor
xor
xchg
in
imul
sub
push
jmp
sub
add
lds
xlat
loopne
adc
mov
or
xorl
pop
in
repz
sub
insb
mov
lcall
jo
pusha
cmp
cmp
push
ljmp
test
pushf
mov
dec
or
xchg
les
sub
adc
push
add
fildl
inc
or
outsb
mov
push
test
jl
out
stos
cli
rolb
add
jo
push
dec
adc
in
rcrb
xor
adc
mov
arpl
mov
out
mov
loope
sbb
adc
lret
mov
or
xor
jne
or
fldl
addr16
mov
mov
orl
dec
loop
lods
cmp
xchg
arpl
or
dec
adc
rolb
sub
dec
inc
subb
movsb
mov
sbb
push
mov
mov
dec
loopne
sub
int
push
sbb
outsb
xchg
pop
adc
popf
xlat
xchg
dec
jp
insb
sbb
xchg
je
mov
ret
movb
aaa
shll
int3
xchg
add
sbb
shl
mov
sbb
sbb
cmp
lret
scas
clc
bnd
repz
adc
ficoms
pop
adc
fs
mov
sbb
iret
pop
loopne
xor
stos
add
mov
or
clc
or
in
into
dec
int3
mov
movsl
adc
inc
lds
adc
call
subl
mov
mov
adc
push
adc
xchg
sbb
xchg
jnp
repz
fisttpll
sub
repz
loopne
test
adc
sbb
push
fbstp
lcall
xchg
push
mov
dec
and
sbbl
sbb
ret
mov
sbb
call
push
flds
lods
movb
ljmp
and
in
push
jae
inc
xchg
arpl
cli
popf
shl
inc
clc
adc
call
adc
cmpsb
cmp
mov
lahf
sub
dec
push
lea
loope
dec
rorb
mov
jmp
adc
imul
xor
iret
fsub
adc
sub
int3
cmp
mov
aad
fldcw
out
adc
pop
jp
jge
dec
in
dec
or
int3
cmpsl
xchg
or
ret
fnsave
or
mov
mov
jge
push
clc
out
popf
in
sarb
jecxz
sbb
mov
movsl
or
adc
xlat
mov
sub
mov
je
cmp
push
shll
mov
ret
jbe
add
fsubr
mov
mov
xchg
sub
pop
ret
mov
push
arpl
in
movsb
lcall
int3
ret
hlt
fdivl
enter
jb
les
outsl
inc
push
xchg
frstor
fidivl
mov
xchg
add
cwtl
pop
loopne
and
mov
stos
lahf
or
sub
mov
test
dec
add
shrl
aas
mov
lcall
in
or
push
inc
in
mov
inc
out
adc
add
dec
gs
jae,pt
int
data16
add
or
outsl
out
jne
cmp
jecxz
out
jne
fidivrs
sbb
lds
ret
jp
dec
add
shr
jnp
xchg
rcrb
clc
jbe
fcompl
inc
jmp
loope
rolb
dec
xchg
popf
cli
add
lds
sbb
add
aad
psubb
sbb
adc
aas
pop
dec
push
int3
stos
adc
adc
sbb
lahf
rorl
dec
ja
mov
lahf
pop
mov
fadds
aas
outsl
or
lock
xchg
sub
repnz
add
ret
pop
mov
enter
or
pop
jp
lods
xchg
leave
cmp
or
mov
xchg
rcr
daa
xchg
aad
push
cmp
and
into
lea
add
sub
push
hlt
mov
test
adc
cmc
insb
mov
and
fs
aas
adc
lret
mov
fcomps
hlt
insb
stos
call
jo
rcrl
mov
mov
mov
fisubrl
xchg
mov
mov
sahf
and
add
insb
mov
gs
sahf
adc
rcrl
mov
xchg
add
movsb
fwait
lock
mov
xlat
or
mov
mov
les
adc
adc
ret
push
adcl
pop
sub
fnstsw
bound
popf
movsb
and
icebp
pop
lds
mov
inc
shl
arpl
test
pop
ret
outsb
subb
xchg
fildll
adc
test
leave
cmp
adc
pop
out
lods
call
cmp
adc
pop
outsl
sahf
adc
ja
clc
and
add
xchg
inc
movsl
push
xchg
or
dec
mov
and
and
je
out
jp
xchg
fsubl
xchg
xorb
and
jno
xor
out
es
ss
les
sbb
add
add
in
in
iret
movsb
adc
sub
lret
add
dec
int
add
cwtl
mov
in
in
cmp
jns
fadd
ret
mov
jns
lret
shrl
add
and
pushf
adc
cld
nop
jle
dec
into
add
out
movsl
add
add
push
adc
push
push
lock
sarb
xorl
int3
fidivrs
pop
mov
mov
sbb
cltd
xor
or
mov
outsl
add
in
fs
adc
clc
repz
sub
loope
hlt
xchg
js
js
test
push
stc
sub
cmpsl
hlt
mov
in
pop
sub
push
leave
mov
cmpl
adc
aas
mov
aam
call
imul
mov
clc
sti
mov
ja
jle
stc
fmulp
mov
pushf
push
in
into
mov
dec
dec
cld
jno
push
xchg
mov
fnstsw
push
add
xchg
lock
aas
lcall
push
bound
fdivrs
loopne
aam
mov
test
andb
add
in
nop
es
jp
cwtl
flds
cmp
lock
std
iret
mov
or
cld
adc
pushf
xchg
loopne
je
pop
pop
std
push
mov
push
cmp
adc
inc
xor
dec
and
add
dec
push
pushf
mov
out
jns
dec
sbb
mov
movsl
das
xchg
jmp
push
ficomps
out
push
fnstcw
in
push
hlt
ss
push
cmp
aad
inc
in
fsubs
out
mov
xor
jg
xchg
adc
and
or
hlt
rol
sub
sub
int3
fxam
adc
and
inc
rcr
fiaddl
adc
stc
pop
and
dec
int3
xchg
in
sbb
push
add
cwtl
inc
xchg
cmp
cmp
cmc
xchg
and
pop
insb
stos
in
xchg
jmp
and
xor
andb
mov
jae
dec
out
in
fucomi
pushf
addr16
adc
scas
test
iret
push
mov
loope
jae
push
jbe
mov
btc
rcll
fst
out
daa
mov
sti
test
outsl
hlt
push
cltd
cmp
mov
jo
jns
rol
adc
xor
xchg
mov
jne
and
sahf
xchg
mov
int
out
shrb
daa
out
loopne
cmp
stos
cmp
rcrb
addb
jne
sahf
adc
mov
add
mov
fnsetpm(287
out
sub
in
test
mov
mov
xchg
dec
xlat
out
xchg
test
pushf
repz
test
orb
ljmp
cltd
mov
sbb
dec
add
or
popa
mov
lahf
sbb
sti
xchg
inc
cs
or
dec
jbe
jp
test
sbb
stos
lret
push
dec
or
shrl
iret
pop
ret
jbe
lahf
dec
and
sub
repz
out
mov
fiaddl
sub
pusha
inc
into
jg
fs
and
inc
xchg
sub
in
std
adc
or
inc
add
mov
fists
xor
push
cld
mov
frstor
sub
inc
push
ja
sbb
adc
lea
mov
mov
add
cld
mov
and
add
inc
jno
stos
stc
sub
sub
xchg
sub
mov
test
mov
pop
lds
int
or
jmp
mov
mov
dec
sbb
je
clc
mov
fldcw
pop
dec
mov
mov
je
fisubs
pop
add
push
leave
xlat
mov
daa
sbb
sti
xchg
xchg
or
inc
mov
cltd
lock
lret
lds
insb
jnp
ljmp
repz
dec
push
fcomps
mov
enter
mov
jmp
subl
dec
push
mov
adc
cmp
int3
adc
stos
mov
dec
dec
xchg
sti
push
mov
xchg
xchg
sub
in
sbb
pushf
out
fsubrs
sub
lcall
pop
lea
xor
in
rol
pop
sti
inc
leave
out
loop
mov
not
testb
mov
mov
mov
popa
push
hlt
test
mov
scas
pop
ss
xor
mov
mulps
lock
test
hlt
inc
pop
push
and
push
or
dec
mov
lods
pop
adc
adc
jecxz
mov
mov
data16
lret
add
repz
cmc
lds
mov
adc
jl
inc
incl
pop
jecxz
movsb
cmpsb
jle
enter
dec
in
jge
inc
jle
or
and
xchg
cltd
jae
cli
aam
shl
adc
xchg
mov
jp
pop
inc
out
lahf
lsl
loopne
repnz
ds
xor
jmp
adc
fnsave
fidivrs
xorb
daa
rclb
or
enter
lcall
enter
jg
arpl
lret
js
repz
pop
test
lret
push
xchg
iret
pop
scas
rorb
add
adc
mov
inc
add
jne
lahf
or
mov
mov
xchg
xchg
fsub
clc
adc
data16
stos
push
or
rorb
xlat
or
sbb
fstpt
mov
stc
into
out
rcpps
enter
fldt
or
ljmp
push
jne
pusha
mov
add
nop
lret
mov
iret
jnp
fsubr
insb
hlt
or
adc
push
mov
ds
sub
fwait
and
call
pushf
jne
cld
or
sub
cmp
gs
dec
aam
mov
in
pop
repz
pusha
or
bound
hlt
dec
jle
ja
fsubl
lcall
fsubr
outsb
loopne
outsl
cmpsb
sbb
enter
mov
push
mov
cmp
in
in
inc
xor
xor
xor
sbb
adc
scas
rcr
jmp
int3
or
insb
in
push
pushf
dec
adc
mov
xor
mov
lret
or
and
in
mov
pop
add
pop
mov
and
cmpb
mov
add
jmp
push
or
dec
cmpl
cmp
hlt
sub
lods
xchg
fidivs
pop
xor
mov
push
push
dec
mov
fmull
cwtl
mov
loopne
mov
call
bound
ret
les
pop
mov
cmp
sub
pop
clc
and
jecxz
repnz
mov
push
scas
test
mov
mov
mov
out
clc
iret
mulb
dec
add
call
subl
mov
iret
cmpl
dec
in
add
aaa
mov
mov
mov
jns
std
ljmp
lds
lods
push
bound
dec
mov
inc
jb
test
iret
cmp
cltd
cmp
cwtl
fdivs
jp
xor
inc
ret
aad
jge
in
lods
inc
pop
dec
aaa
jg
pop
pusha
mov
testb
in
fdivrl
push
xchg
inc
jmp
adcb
push
push
and
xchg
lock
in
sub
cmp
test
scas
or
clc
push
mov
push
jg
dec
into
push
rclb
jne
mov
aam
inc
nop
inc
push
jbe
and
ljmp
nop
mov
adc
adc
pushf
repz
mov
inc
push
into
je
lahf
aas
loope
jnp
xchg
xchg
int3
mov
sbb
push
testb
adc
push
roll
sbb
and
lock
ja
loop
adc
push
mov
aaa
out
scas
repnz
lret
xor
jne
dec
inc
dec
jle
sub
ja
pop
push
or
and
cmp
push
xchg
push
jl
inc
xor
adc
rcll
fs
pop
mov
out
and
in
and
or
mov
scas
mov
mov
mov
or
mov
and
sti
add
into
nop
imul
int
stc
and
cs
iret
lret
cwtl
sbb
fst
xchg
and
adc
in
cmp
add
adc
xchg
popa
out
dec
sub
test
clc
pushf
imull
ficoms
test
icebp
fsubp
and
setb
ffree
stos
mov
mov
mov
xchg
mov
jl
sbb
ljmp
roll
push
add
insb
faddp
out
and
adc
lcall
xor
pusha
cmp
xchg
mov
xor
ret
imulb
cli
push
shlb
dec
sub
sbbb
fists
cmpsl
dec
mov
mov
mov
sub
mov
test
inc
cmpsb
ss
add
push
xor
add
inc
ss
inc
inc
das
bnd
pop
jnp
rol
icebp
pop
sub
hlt
inc
cs
js
push
enter
xchg
or
mov
or
mov
or
pop
repz
xlat
hlt
and
sarl
sub
mov
jmp
or
inc
and
int3
fsubp
mov
sar
pop
cltd
add
mov
std
mov
loop
outsl
cmc
and
int3
shll
dec
jl
cmp
fistl
fs
add
bound
int3
cmc
in
xor
xchg
jmp
fwait
scas
push
mov
bound
hlt
xor
xchg
add
lds
push
or
daa
pushl
sbb
mov
or
dec
xchg
add
sarl
fisubl
out
repnz
and
or
inc
aad
stc
adc
pusha
leave
push
adc
cmp
xchg
rcrb
in
xchg
ja
pop
repz
add
rclb
repnz
jge
imul
mov
rolb
jbe
or
fiaddl
aam
cmp
prefetchw
add
cmp
adcl
inc
sub
mov
rclb
cs
xchg
lds
pop
pop
and
outsb
std
push
cmp
jp
pop
pop
into
rcl
push
stos
xor
popf
add
leave
or
add
clc
mov
les
mov
pop
imul
add
push
call
push
mov
cmp
dec
cmpsl
adc
rcr
xchg
or
sbb
xchg
or
cs
sbb
push
loope
mov
add
cmp
out
data16
adc
dec
pop
or
cs
int3
pop
push
out
mov
add
xchg
nop
mov
cmp
inc
xor
add
jmp
loop
pop
mov
enter
or
outsb
bound
aam
lods
pusha
sub
jle
add
outsl
ret
rcl
mov
mov
adc
mov
inc
hlt
cli
push
fisubl
push
inc
fdivl
aad
mov
jl
out
lret
stc
inc
insl
in
cs
or
and
adc
ja
xor
xor
nop
fbstp
shlb
push
rorb
shl
mov
scas
lcall
into
sbb
int
daa
mov
pusha
or
cmp
cmpl
inc
aaa
xor
push
sub
xor
push
mov
add
mov
in
addr16
add
push
xor
loopne
sub
push
push
add
dec
scas
mov
add
test
cmp
cld
sub
add
sarb
push
sbb
in
lret
add
test
sahf
in
or
or
outsl
inc
jo
scas
test
loopne
pop
aad
loope
sub
repz
xchg
add
push
rcr
xchg
inc
inc
out
and
mov
mov
push
push
xor
cwtl
fmuls
cmp
jp
mov
loopne
xlat
sbb
fmul
rorb
leave
sbb
call
andb
loopne
jbe
jns
push
and
or
fwait
and
and
ret
sbb
jae
cmp
inc
inc
mov
inc
stos
es
cmp
pushf
fsts
mov
mov
push
push
xchg
add
mov
jae
push
mov
mov
xchg
and
pop
sbb
enter
mov
xchg
je
popf
or
adc
or
xchg
mov
mov
in
add
lret
jg
sub
adc
fnstsw
jbe
sub
and
sub
jno,pn
or
sub
into
hlt
sbb
jmp
adcb
push
out
mov
or
sti
pushw
sub
sbb
or
mov
xchg
cmp
lahf
mov
jbe
imul
mov
gs
sub
daa
inc
es
in
adc
inc
mulb
rorb
test
fwait
lds
pmulhw
out
pop
push
aam
lds
sbb
aam
push
dec
sar
stos
fidivl
cld
sbb
mov
xchg
clc
xchg
outsl
push
aad
and
loopne
mov
std
jmp
or
mov
sub
xchg
mov
xchg
xchg
dec
add
addb
call
sbb
aam
cltd
sbb
mov
enter
rorl
mov
clc
push
iret
inc
jg
sbb
jns
sub
push
mov
fldt
add
xchg
lahf
adc
call
inc
shrl
shl
mov
iret
rcl
stc
rcll
fdivrs
lock
mov
add
mov
clc
xor
pop
bound
sbbl
std
mov
cmp
test
in
mov
or
in
shl
and
inc
xor
or
dec
xchg
popl
xor
pop
mov
xor
sbb
sub
adc
sub
iret
iret
xor
mov
insl
mov
push
xchg
inc
pusha
xchg
movsl
push
add
fidivl
lret
jnp
adc
mov
ficompl
dec
stc
faddl
cmp
or
xor
adc
lret
sub
mov
into
nop
hlt
rol
ret
and
ret
sub
fmuls
mov
jb
repnz
dec
jnp
lods
ss
push
rcll
and
inc
outsl
in
outsl
incl
adc
addl
fsub
popf
repz
cs
add
loop
jmp
les
ja
pop
jg
mov
divl
add
mov
dec
mov
or
clc
andb
imul
dec
jae
cmp
jg
add
fcoms
xchg
sub
iret
dec
pushw
push
xchg
inc
ja
adc
shr
pushf
cmpsb
mov
mov
cli
push
stos
gs
sbb
pop
incl
adc
leave
or
cli
sbb
or
lret
sub
subl
jmp
test
arpl
lret
movsl
test
adc
mov
sti
add
push
test
call
jmp
sub
jl
test
xor
and
fisubrl
mov
gs
push
jae
xor
ret
add
inc
add
push
adcl
les
cld
and
push
aaa
or
xor
lcall
or
cmp
jl
cmc
xor
push
pop
insb
sbb
stc
fisttps
push
xchg
adc
lods
push
leave
shlb
pop
mov
mov
mov
add
call
dec
mov
push
push
pop
xchg
popf
cmp
icebp
pop
push
adc
movl
fnstsw
sbb
fiadds
and
mov
ljmp
jae
jmp
insl
or
dec
insl
hlt
push
aad
pushf
pop
test
inc
sbb
je
adc
sbb
inc
push
mov
je
int
mov
dec
cmp
in
and
cmp
lcall
fcomp
bnd
arpl
cld
insl
out
test
cmp
mov
sbb
pushf
add
and
pop
push
inc
gs
jmp
adc
ds
mov
enter
add
add
dec
aam
mov
mov
inc
inc
sbb
mov
sbb
xchg
mov
int3
mov
dec
inc
inc
sub
enter
aam
test
adc
mov
or
movsl
out
or
lods
sub
lea
add
mov
jb
mov
in
xchg
mov
xchg
inc
ljmp
mov
xlat
xchg
jbe
adc
leave
push
cmp
ljmp
test
jge
into
xchg
add
outsl
mov
loopne
test
dec
stos
fcoms
fcoml
and
hlt
rol
push
daa
dec
in
mov
adc
mov
lcall
jbe
inc
iret
out
pushf
ja
popl
fdivr
ja
sub
xor
es
fsubl
aam
cs
pop
push
jae
daa
inc
iret
adc
scas
inc
sarb
aaa
mov
mov
xor
mov
sahf
outsb
sahf
jmp
addr16
call
fs
adcl
xorl
jg
jle
inc
ja
std
enter
rclb
insb
adc
and
incl
pop
mov
xor
int
into
dec
or
mov
sub
xor
sahf
out
call
push
jbe
inc
popl
pop
cmp
fidivrs
lret
add
in
or
inc
adcl
mulb
hlt
imul
mov
loopne
jns
jmp
push
mov
out
sti
mov
call
in
inc
cmp
repz
mov
adc
shl
in
sub
dec
or
push
sub
sbb
mov
adc
imul
mov
das
push
enter
sbb
xor
mov
test
mov
jno
addr16
out
jae
cld
and
or
push
xchg
jae
adc
jp
mov
out
sbb
mov
xchg
fistpl
rolb
mov
adc
pusha
aaa
mov
mov
cmp
std
add
xor
jb
xchg
fdivr
addr16
or
test
jge
inc
add
xchg
sub
mov
mov
mov
adc
mov
jae
cmp
jb
xlat
icebp
fwait
scas
dec
jno
add
lahf
daa
imul
enter
jbe
push
sar
mov
jge
mov
int3
int3
aas
or
mov
lods
sub
mov
repnz
sti
gs
xchg
mov
imul
push
rorb
bnd
mov
or
dec
aad
les
flds
pop
frstor
aas
adc
mov
or
jp
mov
cmp
mov
inc
mov
cmp
push
lea
sbb
filds
pop
pop
stos
js
add
mov
sti
mov
xchg
rorl
prefetcht0
push
push
jne
dec
into
ds
shrl
jmp
in
das
sbb
sbb
jb
pop
and
pop
rclb
push
sti
mov
add
inc
rol
cmp
lret
adc
dec
or
call
call
or
push
sub
pop
jbe
fildl
dec
xchg
dec
adc
push
xor
mov
aad
mov
push
negl
cmp
pop
pop
ficompl
cmp
mov
pop
add
insb
inc
sahf
sub
sbb
jl
xchg
fucompp
inc
mov
fsub
lcall
xchg
hlt
dec
push
mov
push
xor
or
cmp
cmpsl
loopne
int3
loopne
clc
add
loop
daa
outsb
jecxz
rcll
mov
xlat
testb
inc
add
add
aad
add
mov
and
fcoml
mov
or
lods
adc
fimuls
stos
fstps
and
mov
mov
repz
push
hlt
stos
rcrb
out
add
cmpl
adc
mov
out
xchg
sarb
fstp
clc
movl
or
bound
scas
pushf
xlat
das
shll
inc
xchg
pop
sti
ret
pop
cmpl
fcoml
shlb
repz
push
sbb
xor
sbb
xchg
or
adc
add
xchg
test
cli
iret
adc
jmp
sbb
std
fimull
cltd
rcll
sbb
out
adc
jle
out
ret
mov
das
test
cmp
mov
mov
jnp
sbb
out
jmp
adc
xor
in
mov
iret
les
jb
sub
cltd
mov
in
or
push
add
sbb
and
pop
test
xor
mov
sti
rcr
arpl
cli
xchg
mov
ja
jmp
stos
dec
test
lea
in
nop
xor
pop
nop
fstl
mov
dec
popf
sahf
lret
jmp
add
or
xchg
mov
test
sbbb
mov
popf
cld
in
xchg
add
or
dec
xlat
mov
jl
inc
mov
lcall
jne
ffree
inc
ret
hlt
jns
addr16
mov
rorl
in
jmp
lock
lret
cmp
mov
cmp
pop
push
dec
pop
adcl
xor
int3
inc
iret
push
ret
xor
mov
addr16
push
xor
add
test
arpl
pop
js
sub
sub
lods
xchg
add
aas
add
je
mov
xchg
adc
mov
mov
arpl
dec
call
jmp
mov
enter
mov
pop
test
in
or
mov
cs
cmp
pop
ljmp
aad
sahf
cmp
in
loopne
and
xor
int3
ret
jbe
stos
pop
bound
insl
fcompl
pop
lds
dec
test
leave
ds
or
or
lret
cli
hlt
inc
cmp
push
sub
xchg
push
add
xor
cmp
xchg
insb
or
hlt
shlb
les
insl
imul
push
pop
inc
jmp
dec
sbb
add
scas
add
cmp
nop
xor
sub
std
pop
fs
gs
fs
stc
dec
movl
rep
or
stos
repz
in
push
inc
enter
sahf
popa
sub
loopne
and
add
and
dec
jge
scas
enter
ror
pop
repnz
fdivrs
cltd
dec
jmp
xchg
push
mov
sarb
test
fs
mov
jne
stc
hlt
mov
fadd
fcmovnu
enter
out
test
mov
test
add
int
or
mov
int3
push
xchg
fmulp
faddl
test
add
ret
ss
xchg
cmp
loope
lds
jl
repnz
sahf
and
stos
mov
dec
jge
imul
jmp
pop
pop
add
jmp
inc
jno
test
fstp
bndstx
mov
pop
xchg
add
dec
add
push
fsubr
pop
aad
mov
xlat
lret
pop
sbb
stc
pop
fnstcw
xor
in
mov
inc
xor
jne
or
in
pushf
stc
jecxz
xchg
mov
lret
pusha
cmp
mov
loope
fisttpll
imul
inc
sbb
outsb
cmp
lods
and
in
mov
push
add
test
mov
adc
stc
pop
mov
repz
out
call
inc
inc
mov
fsubr
ss
mov
lret
lds
call
es
add
mov
adc
lret
ja
xchg
cmp
push
dec
jne
add
rolb
lods
mov
push
addb
ret
cmpsl
adc
dec
in
push
jp
popa
cli
insl
fs
jbe
add
cmp
adc
pop
ljmp
or
xchg
xorb
mov
into
enter
push
sbb
push
sbb
pop
nop
jle
aam
sahf
in
shl
ds
lods
adc
fisttpll
adc
outsl
mov
push
push
int
clc
xchg
xor
and
sub
dec
aas
bound
mov
addb
xchg
or
or
out
imul
cmp
fnstsw
fwait
enter
and
jnp
xchg
jmp
out
divb
inc
cli
and
add
repz
rcll
xchg
sbb
sti
jae
xor
hlt
imul
sub
out
fldt
lret
loopne
add
ss
loop
lods
lcall
hlt
sbb
xchg
lahf
pop
rcl
in
shl
xor
outsb
enter
cmp
or
loope
adc
ja
popf
mov
mov
inc
movsb
fiaddl
out
mov
or
clc
xchg
push
out
adc
push
add
and
mov
sbb
rcrb
xorl
jge
lahf
cmpsb
psubb
cmp
bound
or
je
into
mov
cmp
cltd
sub
and
les
push
xor
int
add
mov
out
in
dec
sub
mov
or
decl
in
lea
mov
in
push
xchg
pop
xchg
sub
mov
mov
adc
push
notb
sbb
or
dec
mov
mov
mov
leave
pop
mov
dec
lcall
rorb
sbb
xchg
rolb
xchg
inc
cmp
stos
add
xor
mov
xchg
nop
fstpt
adc
add
add
add
mov
hlt
ss
jge
js
add
adc
je
jo
les
psrad
lock
and
xchg
lahf
adc
sbb
adc
fistl
popa
sbb
ds
lds
repnz
mov
in
dec
movb
icebp
jnp
mov
and
sbb
stc
lock
adc
sub
sahf
and
and
mov
mov
xlat
popa
scas
out
adc
outsl
cmc
sti
fs
cmp
je
sub
sbb
lahf
or
test
jnp
adc
pop
lahf
add
jb
sub
or
mov
fidivrs
in
jnp
cmp
xchg
mov
aad
cwtl
pop
sub
fidivs
jae
pop
in
jnp
test
pop
mov
add
cli
jg
push
sub
or
xchg
lea
mov
add
xor
mov
jle
and
jns
cmpb
and
xchg
or
into
cmp
aaa
fistpl
and
push
addb
addb
mov
mov
fsts
xor
data16
xchg
or
xchg
pop
jecxz
cmp
in
incl
sub
adc
lods
dec
out
add
jle
adc
sub
stos
mov
xor
enter
mov
dec
enter
mov
mov
push
ljmp
add
stos
or
hlt
add
mov
data16
in
aad
jle
out
insb
push
loopne
xchg
je
xorb
jmp
xchg
push
call
lret
lahf
mov
add
outsb
jg
or
cmp
out
ja
pop
cld
push
mov
xchg
jno
jmp
push
clc
jmp
aad
fistpll
fidivrs
jl
and
jg
inc
or
out
mov
and
adc
add
mov
aaa
xor
inc
pop
jp
adc
mov
mov
leave
jmp
ss
fwait
popa
cltd
ljmp
lahf
lcall
mov
cmp
fbstp
push
ret
jecxz
cwtl
les
push
mov
rclb
int3
pop
cmpsl
test
adc
movsl
dec
and
loopne
je
inc
mov
jg
js
push
lock
or
adc
xor
sbb
mov
ds
pop
and
inc
xorb
xorb
mov
in
lahf
imul
mov
jno
int3
test
add
icebp
pop
stos
inc
jecxz
xor
stos
pop
in
sbb
fbld
or
lret
pop
arpl
shll
repnz
hlt
cmp
ret
int3
cld
popf
int3
and
mov
jno
dec
pop
fstpl
and
sarb
cld
in
jp
jge
popa
pop
cmp
push
hlt
xor
xor
cld
in
into
cmp
jne
pusha
jg
jecxz
enter
add
jmp
pop
out
lret
or
push
scas
enter
sbb
sub
lock
call
pop
sbb
fdivs
loope
push
hlt
mov
jmp
fmuls
pop
out
cld
sbb
mov
or
pop
out
xchg
int3
mov
sub
xor
cmp
pop
add
sbb
xor
jge
cld
add
movsb
repz
push
gs
mov
in
xchg
in
lock
lahf
out
xchg
outsl
fadds
iret
pop
movsb
or
mov
test
cmpl
test
cmp
xor
in
pushf
fst
mov
rclb
mov
cwtl
mov
jl
xchg
add
sbb
sub
repz
add
hlt
movlps
lret
jne
fucomi
call
push
xorb
fs
je
int
xor
ret
jb
lds
test
adc
sub
js
in
sub
sub
fsubr
xchg
add
mov
repnz
adc
iret
cmp
sbb
ss
pop
mov
sbb
mov
cmp
lret
mov
push
mov
dec
push
xor
cmp
add
pop
mov
jg
call
and
add
dec
add
lock
and
mov
pop
test
sub
mov
in
sbb
or
xchg
repz
mov
push
jmp
xchg
dec
xor
je
xchg
mov
add
add
or
mov
push
xchg
sub
test
loopne
sbb
xor
mov
sub
out
jno
fcoml
imul
iret
add
mov
adc
cmp
sahf
repz
and
jp
mov
and
lea
add
bound
in
push
jae
add
pop
mov
cmp
sbb
cmp
jmp
cmp
out
pop
loop
aaa
adc
add
xchg
add
mov
mov
lret
nop
test
ds
or
pushl
mov
xchg
ja
enter
sbb
addl
xorb
sbb
xor
adc
cli
jnp
cmpsb
mov
test
xchg
sbb
ret
or
jl
cmp
es
lret
pop
lods
pop
add
push
aam
xchg
mov
jns
cs
les
inc
or
mov
shll
adcb
mov
mov
mov
jmp
andl
sub
cltd
sbb
movsl
iret
jge
mov
lcall
add
pusha
les
mov
outsl
or
pop
out
inc
jmp
or
add
jmp
popl
mov
adc
push
adc
fwait
out
orb
sahf
stos
fidivl
mov
lods
add
mov
imul
ds
sub
xlat
jmp
loopne
mov
out
jecxz
lcall
mov
xchg
mov
cmp
outsb
inc
mov
or
or
insl
lret
xor
pop
sub
xchg
ja
adc
into
sbb
push
cs
icebp
call
mov
insb
fildl
inc
orl
shr
leave
cmp
sahf
dec
xchg
mov
ja
sbb
add
hlt
int
sub
outsl
sub
rolb
lds
movb
mov
ljmp
push
cwtl
repnz
popf
inc
sbb
std
je
aam
cmp
pop
rcr
and
jno
adc
lods
and
aad
jp
out
jbe
mov
ss
sub
fcompl
jg
xchg
mov
mov
pop
movsl
push
in
adc
enter
mov
mov
push
cmp
adcb
pop
adc
pop
ja
imul
inc
in
adc
add
and
lods
fdivrs
dec
mov
push
aaa
and
lahf
and
xchg
pop
or
cmp
pop
ja
cli
inc
pushf
xor
rcll
dec
cmp
mul
mov
arpl
fwait
ja
ja
xchg
clc
psubsw
andl
push
fimuls
fwait
out
cmpsl
xchg
inc
jle
shll
push
lock
cmp
out
push
fstpl
push
sbb
out
xchg
xor
mov
jbe
fcompl
push
ljmp
xchg
nop
nop
icebp
cmp
out
xlat
fwait
add
into
lret
ds
inc
scas
xor
lahf
rorb
adc
aad
adc
pop
pop
cmp
pop
mov
mov
call
push
lods
pushf
repnz
add
adc
ffreep
sub
popa
pop
in
lret
or
sub
inc
not
data16
aad
sarb
lds
outsb
mov
test
hlt
or
test
xor
repz
dec
rdmsr
adc
in
xor
scas
xor
cmp
testb
lret
push
xchg
or
lahf
dec
imul
mov
bound
mov
les
fidivs
ds
imul
repz
cltd
jns
cld
adc
jmp
in
and
cmp
mov
xchg
je
jge
cmpps
out
imul
xchg
jno
sub
mov
jb
hlt
dec
sub
ljmp
mov
sub
incb
mov
push
push
ss
mov
adc
imul
in
mov
push
pop
pop
and
or
adc
clc
push
xchg
rcrl
and
js
mov
bswap
aaa
paddusb
xlat
sub
mov
xchg
xor
jae
adc
popa
lods
cs
lret
ret
inc
adc
fstp
les
mov
in
cli
cmp
fs
jo
xor
adcl
xchg
add
jae
push
push
repz
pop
mov
pop
mov
cmp
adc
add
mov
or
jne
aam
inc
jbe
add
sub
lea
rcr
jmp
or
xor
and
testl
out
nop
fcomi
stos
adc
jno
cmp
loop
or
dec
int
nop
or
mov
in
sbb
or
fcomp
sbb
in
rolb
cmp
ret
hlt
es
mov
add
pop
pop
test
stc
jl
jmp
ja
mov
jecxz
clc
xchg
jmp
jcxz
adc
hlt
mov
pop
out
sub
push
cli
out
loopne
inc
adc
sbb
jae
incb
jmp
in
gs
pop
mov
jmp
push
insb
fisttps
pop
inc
push
out
xor
inc
mov
mov
jmp
daa
push
adc
inc
int3
sub
dec
or
push
mov
stc
dec
mov
cmp
inc
mov
test
mov
or
out
adc
das
mov
cwtl
push
jae
dec
mov
jg
and
mov
test
adc
stc
cmp
or
mov
sub
xchg
std
mov
cltd
stos
loop
dec
aad
test
mov
add
cmp
movsl
sub
adc
add
imul
cmp
xlat
push
cmpsb
scas
mov
adc
mov
pop
les
pop
add
and
hlt
repz
mov
dec
lahf
jle
test
jnp
dec
jl
sub
dec
xchg
cld
adc
fwait
push
or
loop,pn
int3
add
das
adcl
pop
ret
jl
mov
lock
arpl
or
test
mov
add
clc
mov
daa
mov
call
inc
push
mov
cmovge
cmp
pop
xchg
test
add
sbbl
sahf
movl
adc
loope
in
push
mov
sub
jl
sbb
outsl
or
mov
lcall
mov
push
ja
fcmovbe
sbb
lret
into
iret
sbb
lahf
movsl
ja
mov
cmp
xchg
adc
test
xchg
aaa
sti
dec
xchg
cwtl
sbb
fcomip
mov
mov
adc
ret
fcomp
cwtl
mov
scas
test
popa
into
out
add
lret
aaa
andb
push
clc
sub
movsb
popa
sbb
std
insl
call
jge
jns
subl
mov
nop
mov
jg
lcall
jmp
adc
xchg
pop
jo
fidivrl
mull
sbb
dec
sbb
mov
jg
sbb
push
loope
push
cmp
movsb
dec
adc
push
xchg
lea
in
std
adc
or
leave
sbb
add
stc
out
js
lcall
sar
fdivp
mov
jne
adc
das
loop
lock
fwait
mov
xchg
mov
sbb
jecxz
out
sub
in
add
cmpsl
in
dec
fmull
lock
test
cmp
jmp
push
ss
ret
out
adc
or
adc
fdivs
dec
shrl
mov
xrelease
nop
cmp
cmc
adc
xlat
test
mov
dec
rclb
outsb
cmc
out
rcrb
fs
lock
mov
inc
scas
cmp
mov
push
sbb
jmp
aam
cmp
xchg
adc
pop
add
xor
or
sub
cltd
sbb
aas
inc
shl
xor
inc
dec
shr
pop
or
in
or
test
mov
dec
adc
pop
inc
bound
sub
pop
push
mov
add
in
or
stos
call
sbb
inc
int3
stc
movsb
outsb
push
or
mov
clc
insl
in
sahf
mov
scas
out
loope
clc
lods
jl
or
mov
mov
icebp
xlat
test
mov
fadd
push
aaa
xor
mov
rcrl
dec
aaa
sbb
mov
xlat
dec
lea
lods
in
inc
sub
jg
leave
xchg
inc
ret
inc
lret
mov
push
fstp
ds
jae
into
aam
push
mov
mov
les
out
mov
sub
mov
mov
mov
stc
push
lahf
mov
outsl
out
mov
push
pop
push
test
movsb
rclb
roll
sbb
sbb
jae
xchg
inc
lods
xchg
mov
add
call
mov
leave
mov
jne
xchg
dec
dec
mov
push
stos
inc
addl
inc
jo
adc
adc
add
mov
clc
dec
mov
fsubp
sti
inc
in
fcomps
fs
subb
xchg
push
sbb
jle
out
xor
and
call
bound
je
mov
enter
cld
inc
sbb
in
inc
lock
mov
xchg
lods
pop
sbb
fs
aas
xchg
push
loope
int
aam
call
mov
mov
push
inc
loop
lock
sbb
repnz
mov
jmp
pop
inc
lretw
xchg
adc
mov
std
pop
jne
dec
lock
sbb
adc
int3
out
adc
xorl
xchg
lahf
or
pusha
aad
pop
int
jbe
mov
inc
mov
cmp
je
imul
outsl
outsl
mov
lods
or
or
divb
cmp
popf
or
in
jae
or
pop
int3
loopne
jmp
jl
mov
iret
inc
or
mov
mov
imul
jmp
lcall
pop
inc
inc
das
mov
imull
jecxz
push
and
lahf
in
in
repz
hlt
lea
nop
mov
dec
or
mov
outsl
mov
add
out
stos
jnp
push
mov
adc
mov
and
rclb
add
mov
int3
stos
pop
mov
hlt
fmuls
xchg
inc
mov
stc
add
js
and
divb
push
gs
push
and
xchg
and
and
dec
dec
lods
xor
in
loope
inc
dec
movsb
xchg
jne
mov
cmp
enter
or
inc
out
mov
pushf
or
add
lret
pop
cmp
int
inc
leave
lock
xchg
xor
inc
mov
lret
lahf
and
subb
int3
out
cmp
push
adc
jbe
lahf
xchg
cmp
mov
mov
stos
lahf
jne
xor
mov
imul
or
cmp
cmp
cmc
aaa
pop
fwait
xchg
add
xchg
mov
mov
stc
inc
ret
mov
sub
inc
sarl
inc
mov
and
iret
push
xchg
and
cmp
pop
mov
addr16
in
add
outsl
pop
mov
pop
ficoms
enter
ljmp
roll
mov
or
fwait
add
faddl
fiadds
adc
stc
dec
mov
ret
xchg
pop
or
ja
mov
loop
jnp
lcall
add
dec
jg
addl
call
ds
sub
mov
add
ret
push
sub
loop
pop
outsb
jmp
arpl
adc
add
ret
aam
lcall
mov
jg
test
ret
imul
jbe
cwtl
mov
sbb
mov
fcmovnu
cmp
pop
hlt
pop
repz
sub
aad
shlb
mov
mov
and
sbb
cld
call
int3
pushf
int3
sbb
call
or
aad
icebp
pop
les
sub
cmpb
and
or
dec
xchg
cmp
or
rep
fcmovnb
insl
call
stc
and
outsb
mov
call
jmp
adc
sbb
sub
xchg
ljmp
or
shll
mov
call
push
icebp
cld
mov
les
js
push
adc
addr16
push
adc
pop
add
dec
sbb
push
jo
dec
std
sbb
sub
or
lahf
arpl
add
or
mov
lahf
mov
clc
iret
jle
ds
in
call
repz
cmp
or
sub
mul
cmp
jae
add
adcb
mov
loopne
lahf
or
adc
repz
daa
add
or
xchg
jo
loop
dec
repnz
repz
and
faddl
push
mov
fimuls
movsb
in
mov
int3
cmp
mov
sbb
gs
insb
inc
mov
aam
xor
push
or
pop
insl
ljmp
aad
xor
and
mov
movsl
adc
sbb
hlt
stos
mov
sub
xchg
jg
fiadds
rcll
shl
lods
cli
mov
leave
add
push
or
cli
pop
ss
addr16
into
aaa
cmp
or
cs
loopne
iret
push
or
inc
mov
mov
stc
pop
dec
inc
mov
adc
ds
sub
stc
int3
inc
mov
ljmp
or
inc
or
push
mov
imul
das
and
insb
in
leave
sahf
arpl
cmc
mov
add
sub
cmp
sub
jmp
push
mov
pop
and
sub
push
add
addr16
test
dec
mov
movsl
add
cmp
cs
xchg
int3
sub
push
mov
xchg
xor
lahf
movsl
cmp
xchg
sub
xchg
cmp
fnstenv
inc
jecxz
mov
xchg
lea
fcoms
pop
and
fisubrl
lret
push
push
gs
and
cmpsb
scas
cmp
mov
xchg
mov
clc
sub
jmp
jecxz
clc
fs
dec
loopne
xchg
lds
loope
inc
gs
out
in
push
arpl
cmp
in
mov
aad
jp
sbb
jg
xchg
mov
add
jb
hlt
jl
jae
cs
iret
xchg
adc
push
inc
cmp
adc
out
push
push
fsubrl
sbb
pop
xchg
pusha
sbb
jne
not
subb
cmp
xchg
aaa
ja
inc
and
jb
aad
in
mov
lret
out
pop
add
pop
or
dec
aaa
sbb
xchg
inc
mov
inc
fcomps
add
mov
or
cs
jae
pop
in
adc
leave
push
cmp
push
push
lods
mov
and
or
fwait
int3
pop
aad
and
sar
les
mov
out
mov
mov
jl,pn
sub
ss
mov
cltd
lods
gs
xchg
mov
sub
xor
call
xchg
mov
push
push
push
mov
jl
push
adc
xchg
jb
nop
ret
xchg
cmc
adc
das
cmpsb
cs
xlat
cs
movsb
cmp
xchg
stc
pusha
repnz
mov
and
rolb
int
push
repz
cmp
lahf
addr16
xor
daa
pop
jno
andl
add
push
mov
push
add
fistl
mov
xorb
int
jecxz
inc
push
enter
xchg
mov
fmull
mov
add
test
movsb
icebp
mov
xchg
into
iret
mov
lret
pop
jno
shrb
icebp
inc
cwtl
mov
outsb
in
adc
movsl
loopne
in
dec
sbb
fidivs
add
lcall
lds
xor
subl
stc
cwtl
xchg
negb
fldl
sub
mov
mov
add
or
repz
rorb
insb
je
sbb
xchg
into
dec
icebp
and
mov
test
les
mov
jne
sub
cld
sub
pop
mov
pop
sub
pop
mov
lret
push
sti
push
jl
lock
cmp
dec
jg
sbb
pushf
paddusb
shll
mov
mov
xor
add
or
and
add
test
jmp
xlat
lcall
mov
lret
in
enter
mov
push
aad
insb
xor
adc
dec
into
lds
xlat
mov
in
sub
cmp
xchg
inc
and
int3
cmp
xor
out
jmp
addb
adc
mov
hlt
jp
pop
xchg
mov
inc
loop
mov
je
shr
popf
push
push
aaa
enter
mov
mov
or
add
hlt
cmp
leave
inc
mov
dec
ljmp
dec
test
adc
mov
pop
inc
dec
mov
popaw
iret
fxch
and
pop
cmp
adc
adc
dec
jge
into
clc
in
mov
jne
sbb
es
jl
and
aad
gs
cwtl
mov
mov
mov
mov
push
ret
mov
orl
int
jmp
out
out
clc
lcall
fistpll
cmp
sbb
cmp
sti
adc
ss
sbb
mov
test
lock
jns
sbb
and
cld
mov
shl
add
push
repz
push
lret
lahf
pop
ror
aaa
into
fwait
add
clc
mov
ret
in
sbb
leave
dec
rclb
pop
cwtl
enter
stos
loop
popa
xchg
add
adc
into
in
lret
movsb
xchg
or
sub
outsl
in
das
add
xchg
xchg
sbb
push
fstpl
in
loop
clc
aas
enter
iret
clc
loope
mov
jmp
aam
mov
movlps
cmpb
mov
andl
cli
mov
lds
xchg
sbb
jmp
loop
add
or
adc
test
notb
xlat
sbb
sahf
sbb
andl
dec
rcl
mov
lret
lret
mov
lods
fs
stos
ljmp
push
and
mov
lahf
test
iret
sti
cli
std
mov
lock
shl
pushf
jecxz
movsb
mov
lods
pop
dec
aas
addl
push
xor
loop
mov
ss
inc
stos
mov
add
fistl
xchg
lcall
dec
out
sbb
rcl
leave
les
sub
mov
pop
cmpsl
jne
dec
mov
inc
cmp
pop
push
cmp
aas
inc
cmp
test
xchg
add
mov
sbb
adc
push
add
inc
shrl
add
cld
outsb
add
sbb
je
cltd
clc
aam
sbb
scas
clc
aaa
mov
mov
pop
xchg
xchg
outsl
out
sub
loopne
jae
adc
out
ljmp
je
inc
test
or
add
lea
and
mov
ja
loope
out
stos
out
or
mov
loopne
repz
cld
cmp
addr16
add
in
loope
mov
push
mov
sub
rol
addb
cmp
decl
adc
pop
int
ljmp
cld
dec
repnz
clc
cmpsb
fstpl
jle
repnz
ss
test
xchg
pop
insb
in
sbb
jns
pop
outsl
pop
test
mov
add
ret
hlt
or
lock
in
out
adc
int3
loopne
ss
jo
movaps
aam
loope
cmc
aam
push
xlat
lcall
or
adc
pop
adc
aad
mov
hlt
mov
adc
out
mov
xchg
jo
je
push
jmp
pop
mov
scas
mov
stos
mov
push
push
repnz
repnz
sub
adc
sbb
fdiv
push
jle
jmp
rsm
call
sub
hlt
and
sbb
les
adc
es
clc
mov
pushf
enter
jmp
or
fiadds
and
addr16
push
jmp
insb
or
xchg
and
idivb
adcl
pushf
jp
popa
leave
mov
repnz
bound
pop
cmp
add
push
loopne
or
sbb
mov
stc
or
fcmovbe
aam
add
sbb
push
fstpt
add
test
add
adc
stos
pop
lcall
add
or
ret
je
xor
mov
push
fs
push
push
popa
adc
adc
or
sub
xor
adc
xor
popa
movsb
repz
scas
fists
ror
inc
add
xchg
mov
stos
imul
ljmp
sahf
inc
jl
cltd
cmp
movsl
mov
addr16
in
xchg
push
jge
mov
sbb
out
add
lds
flds
mov
pop
xlat
push
pop
test
sbb
adc
add
or
cmc
clc
pop
aaa
jg
jmp
inc
adc
add
cwtl
pop
mov
mov
lret
dec
adc
mov
hlt
ret
loope
push
jg
xchg
xchg
ret
sbb
mov
xor
fwait
mov
loop
mov
cmp
or
clc
arpl
testb
or
into
decb
adc
and
fisubrs
and
adc
sbb
or
aad
rcl
sbb
or
je
lds
in
pushl
push
mov
mov
ljmp
adc
xchg
cmp
push
sub
mov
dec
dec
add
in
cmpsl
test
int
jl
or
sub
psraw
out
pop
es
xor
cmp
andl
popa
xchg
dec
add
iret
add
pop
shrb
addb
mov
mov
sub
jo
sub
outsb
sbb
push
jno
adcb
lret
xor
lret
or
loop
movb
popa
repz
pop
hlt
out
or
loop
imul
hlt
mov
pusha
dec
dec
mov
lods
stc
lds
leave
and
mov
mov
lods
add
mov
push
mov
inc
adc
mov
jmp
sbb
add
push
xchg
stc
mov
imul
or
shlb
sub
addb
cmp
mov
stos
cwtl
loop
add
in
add
and
cltd
cld
add
fucomi
aad
adc
sbb
or
ss
cs
fs
ret
mov
sub
loopne
test
and
mov
xor
adc
in
aam
loopne
cld
mov
xor
sarl
les
shll
in
aam
pushf
cld
test
jp
push
pop
and
aam
mov
mov
sbb
xchg
or
add
add
add
add
scas
sbb
iret
add
aam
or
or
sub
push
push
je
adc
inc
hlt
outsb
rdmsr
add
unpcklps
cmp
mov
ss
mov
adc
fwait
add
fwait
sbb
add
push
in
push
call
loope
and
pop
jle
ljmp
inc
cs
adc
imul
shlb
mov
dec
xchg
loopne
ret
adc
sbb
mov
leave
mov
arpl
push
jno
lret
sbb
aaa
push
bound
xchg
notb
xor
jmp
cmp
add
pop
test
stos
or
cmp
rorl
aas
ret
mov
adc
fdivs
xor
or
out
push
loopne
fnstcw
sub
lcall
push
sub
test
mov
jb
lods
mov
scas
call
mov
out
je
subb
mov
faddl
ljmp
add
mov
addl
xlat
lds
int3
or
iret
jmp
in
adc
mov
mov
fadd
loope
sbb
or
stos
sbb
lock
add
dec
xchg
add
mov
sub
sidtl
lahf
ljmp
loop
aas
mov
movlps
femms
fldcw
repnz
sub
dec
push
mov
jbe
cmp
or
test
out
inc
push
jae
adc
fs
lret
dec
out
sbb
in
ja
dec
icebp
fistps
add
sbb
loopne
insb
in
sub
inc
pusha
cmp
push
cli
push
mov
aas
in
dec
jae
xchg
imul
lret
mov
cmp
add
xor
sbb
in
inc
xor
xor
fstps
orl
dec
push
push
jl
loope
outsl
push
cmp
in
into
sub
or
push
jbe
test
xchg
pop
rcl
inc
jns
fmull
jb
pop
int3
cmp
dec
cmp
mov
xchg
cmp
pop
ljmp
dec
dec
sbb
jo
ds
cmp
ret
fmul
xchg
inc
jb
out
addr16
lcall
jnp
popf
jno
leave
or
sahf
insb
cmp
sub
pop
xchg
fs
sbb
in
subb
push
out
xchg
subb
dec
adc
orl
movsb
imul
ret
push
dec
cmpl
cltd
pop
mov
and
dec
pmuludq
aam
test
mov
xchg
loop
add
mov
out
jecxz
adc
add
in
push
dec
pop
push
add
xor
sbb
push
jle
adc
into
mov
sbb
in
jbe
inc
loope
or
leave
std
in
add
push
test
loopne
sarb
ret
insl
loop
dec
jae
mov
add
repz
mov
repz
inc
xchg
or
ds
lcall
add
aad
or
mov
add
cmpsl
fisttpl
ljmp
or
sub
lret
call
dec
add
dec
lods
sub
or
sahf
mov
sbb
and
mov
mov
adc
loopne
lahf
and
xchg
int3
add
mov
pop
pop
sti
push
xchg
cmp
sti
nop
inc
sub
test
sarb
mov
dec
in
jns
mov
cmp
mov
scas
or
mov
mov
add
aaa
outsb
pusha
call
jge
mov
addl
add
arpl
loop
or
nop
fdecstp
cmp
addr16
pop
jbe
aas
fidivl
into
rcrb
jae
ret
add
inc
mov
mov
movsb
lret
ficoms
dec
fcmovnb
imul
jmp
sbb
mov
sub
stc
pop
add
mov
cld
mov
sub
insl
sub
adc
cvttps2pi
aas
xor
jae
sub
lret
pop
and
adc
sub
aas
aad
jmp
outsb
movsb
cmp
ret
sub
adc
mov
push
lods
jo
scas
insb
push
leave
rcrl
sub
les
pop
aam
aas
jp
sbb
push
les
sub
mov
cmp
sbb
nop
gs
xchg
sub
je
cmc
shlb
add
sbb
inc
out
aas
or
sbb
sbb
push
jl
add
mov
mov
push
incb
rcll
int3
lcall
cmp
xchg
lret
pop
push
sahf
mov
add
add
sbb
or
xor
xor
adc
int3
movsl
loopne
push
pop
jmp
jge
fs
jne
mov
lods
dec
mov
imul
aam
dec
or
ret
dec
cmp
ret
and
mov
sub
inc
stos
daa
lea
inc
sbb
pop
mov
adc
nopl
sbb
shrb
es
sbb
je
shrd
out
sub
cmp
loop
aas
shl
adc
js
out
or
or
dec
jns
nop
movsb
add
cmp
mov
push
andb
and
sbb
adc
cmp
adc
lahf
sub
adc
add
lcall
push
in
push
test
out
ss
leave
je
shl
leave
cmc
ret
shl
adc
dec
cmc
push
outsl
cmp
out
sbb
or
add
inc
fcom
adc
or
mov
cmp
and
in
lcall
pop
notb
ret
inc
pop
inc
or
out
scas
mov
mov
add
jg
jmp
or
jg
aas
dec
int3
adc
test
inc
add
mov
test
push
inc
mov
in
jne
in
xor
xor
lret
adc
out
jmp
add
call
push
push
repnz
jb
mov
insl
les
mov
fdiv
push
mov
adcb
sub
stos
adc
in
cmp
cltd
loope
push
mov
cmc
pop
and
jmp
mov
pop
outsl
jmp
mov
xchg
scas
cmp
dec
or
out
ret
or
insb
xlat
popf
pop
add
add
adc
sahf
shll
xchg
into
push
fcoms
xchg
or
mov
sub
les
sarb
mov
jl
and
fstl
fmull
hlt
fcomps
in
cmp
fst
cmpsl
dec
add
add
dec
enter
nop
lods
frstor
int
int3
pop
xor
or
aaa
dec
add
hlt
xor
sub
xor
imul
adc
push
ss
sub
inc
pmaxub
push
push
xorl
aas
rcr
inc
cld
lock
sub
incb
imul
ja
add
push
mov
call
in
pop
push
adc
lret
add
sbb
arpl
or
pusha
adc
jmp
adc
or
xchg
or
inc
cs
push
sbb
faddl
leave
lret
adc
pop
andl
xchg
cmpsl
call
adc
cmp
pop
fistl
andb
ljmp
adc
sub
les
stos
add
clc
sub
push
sub
xor
xchg
add
cmp
addb
sub
les
push
pop
mov
pop
cmpl
loopne
push
dec
mov
cmp
jmp
testl
leave
lcall
lds
adc
jmp
jnp
xor
insb
mov
in
or
fs
xchg
hlt
pop
loop
mov
dec
adc
nop
xor
mov
or
shl
popf
push
sar
rcr
ss
and
stc
shll
out
lahf
xchg
les
dec
cmpb
rcll
aad
idivb
fs
adc
les
mov
mov
stc
cmp
sbb
in
mov
mov
test
out
repnz
test
add
add
add
or
adc
and
mov
and
sahf
leave
push
sub
inc
icebp
sub
in
or
ret
ljmp
sub
es
icebp
out
hlt
les
decb
sub
out
or
les
icebp
push
dec
xchg
cmp
cmpsl
dec
inc
pop
mov
mov
imul
cmp
xor
mov
or
jns
jbe
xchg
pop
repnz
push
pushf
xchg
mov
stc
mov
cwtl
xor
ss
repz
mov
lock
dec
xor
push
test
or
push
add
mov
icebp
ret
inc
rcrl
jns
add
jle
int3
add
xor
sub
out
mov
test
fstl
sub
insl
repnz
adc
in
lock
dec
or
stos
pop
mov
fs
stc
dec
mov
into
repnz
mov
push
or
lods
pop
sbb
inc
pop
sbb
dec
jno
sbb
adc
dec
adc
or
xchg
push
jecxz
enter
rcl
aad
roll
hlt
pop
ljmp
shrb
pop
sub
jg
into
jg
mov
psllq
std
xchg
inc
sbb
addb
sbb
cld
mov
loopne
sbb
adc
pop
or
adc
enter
adc
xchg
add
add
adc
xorb
cs
pop
pushf
fiadds
mov
addb
jo
stos
cmp
sub
xchg
aas
xchg
sbb
test
jbe
cwtl
adc
xchg
or
inc
adc
dec
pop
sbb
sar
fnstsw
insl
pusha
cwtl
xor
add
aam
cmp
clc
jne
sbb
xor
xor
inc
lcall
cmc
dec
add
rclb
add
rcl
lock
leave
in
xchg
or
jae
mov
cmc
rclb
sbb
and
sbb
lea
bound
shlb
sbb
xchg
dec
inc
and
sbb
or
popa
sub
incl
add
or
nop
iret
ja
and
mov
inc
or
repz
mov
movsl
in
add
in
into
popf
clc
xchg
popf
mov
in
loopne
cmp
add
adc
mov
mov
cmp
sbb
jecxz
sahf
lock
ror
psrlw
mov
mov
cltd
dec
shr
dec
adc
xor
icebp
int
mov
ds
push
push
aaa
pop
ficomps
push
mull
inc
pop
leave
fs
adc
lds
subb
adc
vpor
scas
shrl
stc
jae
ljmp
lea
out
sub
sub
popl
cmp
push
sahf
stc
out
test
stos
xor
dec
lea
mov
mov
ret
sarl
mov
rcrl
les
lods
rcll
add
mov
mov
push
gs
jmp
dec
push
repnz
les
test
cmpsb
add
movsl
push
iret
mov
xchg
movsl
ljmp
arpl
and
testb
sbb
lea
mov
inc
fwait
scas
ret
mov
in
out
shll
pushf
movsb
mov
lods
push
mov
mov
push
repnz
mov
sub
jbe
shlb
push
in
add
loope
jg
call
ja
je
fimull
lods
sbb
inc
dec
insl
mov
filds
or
sub
mov
outsb
push
xchg
add
js
in
push
pop
sbb
fldenv
cld
mov
push
sub
and
or
lods
xlat
addl
add
lods
push
std
cwtl
shlb
les
pusha
nop
sti
adc
orl
mov
push
test
test
inc
cmpsb
jbe
push
push
jg
mov
lds
inc
adc
lock
jns
add
dec
shll
sub
add
rcr
mov
pop
mov
test
addl
call
shll
int3
shlb
mov
or
sub
mov
xor
popa
jl
mov
mov
insl
xchg
push
pusha
iret
shrl
clc
cmpsb
push
cmp
loop
jecxz
add
sub
xchg
add
repz
lret
sbb
or
add
cmp
enter
stos
test
ret
jmp
hlt
test
int3
cmp
mov
cwtl
xchg
popa
mov
jp
iret
daa
mov
mov
fistpll
or
andb
pushf
mov
loop
iret
inc
adc
xchg
cmc
ret
pop
ret
sbb
sbb
and
mov
cli
jp
into
les
addr16
test
mov
test
rol
mov
xchg
arpl
jo
push
inc
pushf
outsl
add
fwait
stc
mov
movsl
cmpsb
notb
adc
lods
or
pop
jb,pt
or
rcll
shrl
mov
inc
adc
cmpsb
in
ss
adc
lea
pop
les
in
add
mov
sub
mov
jg
mov
nop
cmpsl
inc
cmp
xor
mov
lock
add
cmpsb
iret
mov
jl
stos
dec
nop
xlat
pop
sbb
sbb
add
push
movsl
cmp
fs
or
subl
rolb
mov
rorl
or
sbb
or
xor
xchg
inc
adc
adc
and
fnsave
and
push
and
and
out
push
aas
outsl
inc
add
mov
adc
and
test
adc
ja
out
dec
rcr
out
loop
or
mov
pushl
cmp
or
pop
cs
fmul
lahf
cwtl
mul
or
movsl
sti
repnz
in
in
les
iret
xchg
cmpsb
mov
xor
call
or
in
push
fwait
mov
nop
fucom
fwait
sub
aaa
adc
loop
ljmp
repnz
or
in
lahf
andl
pop
cmc
loope
xchg
int3
lods
sbb
xchg
xor
aas
inc
add
xchg
mov
jge
ret
clc
ss
loopne
clc
jecxz
xor
jbe
call
sub
mov
adc
xchg
filds
lret
push
lahf
push
mov
shlb
ret
fildl
lahf
xchg
or
incb
fdiv
sahf
sbb
mov
and
mov
sub
mov
test
std
dec
mov
and
cmp
or
or
lea
mov
pushf
dec
or
scas
mov
mov
insb
cwtl
add
jp
push
cmp
mov
inc
ljmp
pop
dec
sub
ds
dec
push
mov
sub
ret
push
mov
cmp
in
mov
gs
and
lahf
cltd
addr16
fsubrp
pop
push
cwtl
sarb
mov
fs
or
sbb
xchg
adc
pop
xchg
repnz
inc
movsb
movsl
mov
out
in
mov
repnz
lret
aas
xor
aad
or
mov
add
xor
xor
enter
add
shrl
lds
in
xchg
add
or
ret
push
adc
adc
clc
lret
sbb
sub
cmpsb
rcrl
inc
fisttpll
mov
sub
filds
or
push
or
rorb
xchg
stc
push
add
dec
cmp
lret
add
sub
out
or
adc
hlt
stos
mov
ret
aam
enter
fcmovu
cmp
sahf
sub
fistpl
call
pushf
orb
mov
mov
pop
rorb
clc
mov
xchg
sub
aad
or
mov
xor
into
leave
push
mov
inc
lds
int3
xchg
rolb
or
aad
lea
les
pusha
adc
adc
sbb
lods
and
mov
mov
rolb
mov
int
dec
push
jo
push
mov
mov
push
adc
pop
mov
sbb
cmp
hlt
repnz
addr16
andl
js
cmp
cmp
dec
mov
mov
lods
int3
xchg
andl
pop
add
ror
xchg
sbbl
hlt
dec
cmc
mov
push
dec
lods
cmpl
fcoml
xchg
adc
mov
add
outsl
push
test
shll
rcr
push
fld1
movsl
inc
adc
push
cmp
sub
push
int3
xor
movl
xor
addl
adc
sub
ja
jl
mov
jecxz
adc
jmp
je
adc
adc
mov
mov
sub
iret
sub
or
add
out
fldenv
sub
push
outsl
cmp
push
js
and
or
clc
xlat
pop
lret
fiadds
xor
fidivs
shlb
or
sbb
xchg
dec
add
mov
movsb
repnz
sub
js
sub
add
je
or
js
sub
mov
and
push
sub
repnz
xchg
pusha
stc
lret
ss
sub
or
sbb
and
push
mov
add
shl
jecxz
sub
repnz
pop
inc
ja
mov
mov
shrb
rorl
dec
push
or
xorl
dec
int
push
in
adc
rorb
jmp
cli
mov
xchg
rol
mov
imul
shrb
adc
add
add
mov
cld
add
ljmp
jmp
mov
mov
xor
cmp
mov
icebp
les
shlb
dec
xchg
unpckhps
dec
repnz
je
push
lods
inc
or
lret
mov
sbb
pop
push
aas
in
hlt
bound
mov
cmp
sub
leave
mov
pop
ret
iret
sub
orb
mov
sbb
lcall
jmp
jae,pt
push
imul
testb
xchg
into
mov
psubw
insl
xorb
cvttps2pi
mov
subb
xchg
jne
aaa
lea
lea
adc
sbb
js
aaa
pop
gs
fbld
jecxz
lea
or
or
add
dec
shll
or
sub
in
adc
icebp
lcall
sub
jnp
adc
or
mov
mov
jnp
mov
sarb
mov
or
mov
add
xchg
fisttpl
cwtl
xor
shl
or
aaa
inc
add
adcl
scas
xchg
xchg
mov
leave
mov
inc
fisubrs
ret
int3
push
in
dec
sbb
adc
sub
sub
adc
call
xor
les
iret
sahf
add
xor
add
call
xchg
inc
or
cmp
outsb
addr16
dec
inc
inc
andl
inc
adc
insl
pop
fistps
pop
xor
nop
lds
ret
pop
dec
loopne
mov
inc
adc
jg
add
or
sarl
inc
push
fists
decl
mov
popa
add
icebp
adc
push
fmuls
out
mov
push
rclb
add
ret
xchg
sbb
jmp
leave
in
shl
mov
pop
mov
jmp
adc
jp
je
sarl
cmp
adc
repz
out
fsubrs
add
sbb
push
dec
in
sbb
fdivrs
gs
and
loope
ret
pop
mov
mov
or
mov
inc
lea
out
stos
xor
pop
les
or
data16
mov
adc
sub
into
adc
add
out
inc
mov
test
sbb
in
sbb
loopne
sub
xor
imul
inc
dec
incl
mov
mov
lahf
out
add
arpl
add
ss
inc
sbb
in
add
icebp
gs
in
pop
mov
sbb
int
repnz
sarb
mov
inc
xor
aad
inc
cmp
movsb
mov
rclb
imul
jmp
in
fidivl
ret
into
adc
lea
sbb
leave
mov
xorl
add
inc
xchg
mov
xor
and
xchg
jmp
fidivrs
add
or
inc
adc
cmp
sbb
icebp
imul
inc
mov
pop
dec
mov
popf
and
cmp
out
clc
loop
jae
loopne
subl
jae,pt
sub
das
sub
jb
jg
mov
push
push
lock
mov
imul
sub
mov
loopne
ret
rorb
sub
es
scas
xacquire
call
add
dec
jb
int3
loop
out
stos
push
stos
ljmp
jae
pusha
stos
mov
cltd
add
clc
fdivr
dec
nop
cmp
data16
in
leave
idivb
icebp
mov
mov
mov
pop
adc
sbb
mov
insl
mov
jecxz
xchg
jo
sbb
fldt
movsb
inc
push
xor
je
sub
sub
les
sbb
and
mov
popf
lods
in
cmp
inc
fst
mov
repnz
int3
stc
dec
dec
inc
mov
lret
mov
dec
adc
cltd
pop
xchg
xchg
ret
push
jmp
call
cmp
call
sub
mov
int
popf
adc
cmp
mov
scas
sbb
out
cmp
fists
imul
mov
and
ljmp
dec
cld
or
ret
mov
lods
xchg
out
sbb
sub
mov
adc
add
push
xchg
sub
jg
xor
xor
inc
mov
dec
jne
mov
or
test
mov
movsb
daa
mov
sub
mov
shrb
loopne
stc
dec
pop
rcr
dec
and
mov
add
aad
pop
fcoml
enter
into
mov
std
mov
jne
push
mov
lahf
pop
adcl
adc
sahf
xchg
popa
dec
sbb
mov
addb
push
push
fcomip
data16
popf
pushf
in
add
mov
in
loopne
js
or
jmp
cmp
mov
rcr
dec
sbb
push
pop
mov
leave
ja
hlt
or
mov
pop
in
push
jl
dec
sbb
test
add
testb
in
add
pop
add
outsb
lret
stos
inc
adc
fs
xor
imul
mov
cltd
in
mov
mov
jge
mov
rcll
cmp
push
hlt
or
stos
add
adc
bound
repnz
sub
push
repnz
xchg
hlt
cmp
fistpl
inc
adc
dec
sbb
sub
xor
xlat
mov
cmp
sub
jb
test
cld
mov
dec
hlt
adc
add
mov
dec
js
fidivrl
push
loop
fs
cmp
cld
jne
push
jo
push
scas
cmp
push
push
mov
sub
ret
in
sbb
or
add
push
rorl
sbb
js
stos
pusha
sub
mov
gs
ret
shr
and
jne
jp
out
std
cmp
mov
adc
cmp
out
arpl
mov
jecxz
adc
push
adc
lock
mov
cmp
xchg
in
lahf
pop
jg
shrb
xlat
dec
aaa
adc
dec
mov
mov
cmp
cmpb
jg
rcl
hlt
jmp
shl
sbbl
xor
imul
test
inc
or
into
fcmove
cld
in
ss
lock
adc
out
lock
loop
push
mov
jmp
add
cmp
loop
aam
mov
inc
out
push
lods
xor
mov
add
dec
gs
mov
in
push
gs
sbb
jl
ds
adc
enter
fwait
repnz
jnp
hlt
xchg
repnz
cli
int3
or
mov
xor
or
sbb
mov
xor
mov
divb
idivb
and
mov
mov
in
xor
mov
xor
push
mulb
out
xor
int
adc
cmp
mov
xchg
inc
popa
mov
int3
cli
lahf
mov
fcomi
pop
inc
in
out
cmp
out
xor
negl
cmp
sti
pop
add
jns
rorl
pop
nop
inc
rol
pop
call
dec
sub
int
shll
shrl
subb
cmp
aaa
xchg
adc
jbe
jg
dec
sub
fdivr
jle
fstps
mov
fnsave
in
cvtpi2ps
mov
jp
lds
insl
fisttpl
mov
and
pop
or
fstps
mov
dec
into
pop
sbbl
fimuls
ret
rorb
lds
adc
mov
cmp
addl
or
out
adc
adc
js
xchg
rcr
insb
sub
imul
out
mov
rorb
cmp
lgs
cmc
cmc
push
scas
add
in
leave
xchg
enter
mov
fimuls
movsb
inc
pop
stos
cmp
sbb
mov
ficomps
cmp
daa
ret
cmova
outsl
dec
pop
add
in
mov
pop
jmp
xor
or
mov
pop
fdivr
stc
sti
mov
pop
inc
xlat
out
stos
mov
jae
bound
pop
pushf
push
hlt
leave
jo
jno
mov
dec
hlt
cmp
stc
repz
mov
inc
jge
add
lcall
cs
ljmp
dec
sarb
mov
sbb
adc
push
call
mov
mov
and
bound
scas
nop
fcmovnu
cmp
pop
fldl
stos
cli
jns
mov
call
out
inc
mov
sbb
addr16
addl
xor
add
mov
mov
sahf
out
or
lret
rclb
adc
hlt
xchg
mov
aas
scas
ss
add
addr16
sub
mov
cwtl
xchg
out
sub
lahf
adc
sub
imul
in
jmp
pushf
adc
adc
out
aam
into
pushf
aas
daa
fnsave
les
call
mov
sbb
inc
rcr
or
add
testl
jns
xchg
cs
sub
testb
arpl
inc
jp
pop
push
call
movsl
xchg
movsb
sbb
jne
test
sbb
les
adc
frstor
mov
cmpsb
sbb
pop
adc
xor
lahf
or
les
xchg
sbb
inc
cmp
mov
rolb
mov
lods
xchg
pop
fnstsw
stos
fsub
scas
pop
sub
pop
ss
sub
out
repnz
popf
fnsave
adc
ret
jg
loope
fiaddl
push
xchg
xchg
jle
icebp
das
jmp
fcoml
in
je
mov
add
ret
int
loop
int3
lds
stc
in
push
push
sbb
dec
cmp
push
adc
push
subb
sbb
mov
mov
sub
leave
outsl
jae
xchg
xchg
ret
push
cmp
sbb
dec
insb
sti
dec
icebp
outsb
and
mov
sub
outsl
mov
jl
dec
sub
sbb
pushf
lahf
scas
dec
push
adc
movl
mov
rol
or
mov
add
pop
call
sbb
outsb
sbb
mov
add
out
push
sbb
insl
push
pusha
leave
rorb
sub
inc
xor
loopne
mov
mov
push
rcrl
shr
cmp
in
cmp
movsl
push
mov
inc
out
std
mov
shll
roll
lahf
or
iret
xor
sbb
lds
int3
mov
in
fsubs
ret
iretw
add
mov
push
jge
sub
aad
jo
or
jno
mov
cmp
add
hlt
adc
jecxz
shlb
fstl
enter
xor
lahf
bnd
enter
xchg
insl
sub
test
xchg
pop
test
out
testl
mov
mov
mov
movsb
test
data16
lahf
test
fcoml
mov
sarb
add
inc
loop
sbb
cli
cmp
mov
lahf
and
mov
stc
inc
xchg
jge
xchg
add
enter
int
jno
lahf
sar
imul
xor
sti
jg
or
push
add
mov
adc
fcomi
or
repnz
push
popl
xchg
jmp
xchg
cmpsb
jg
or
mov
mov
xchg
add
inc
arpl
jno
inc
and
ss
cmp
cmp
add
add
sbb
fstps
imul
imul
mov
sub
jae,pt
sbb
fs
add
adc
add
out
inc
xor
aad
jp
adc
dec
aad
fdivrs
or
mov
xor
or
les
or
leave
or
push
lods
pop
mov
fidivrl
popa
out
inc
jne
stos
fwait
out
add
dec
out
sti
push
lock
sub
addl
mov
adc
mov
jle
jmp
pop
lock
sbb
adc
in
mov
stos
lds
pop
mov
or
adc
rorb
jmp
orb
jno
ret
adcl
imull
push
jno
lret
add
out
or
sbb
imul
bnd
hlt
movsl
icebp
mov
adcl
dec
and
and
sahf
push
in
addr16
mov
inc
out
shr
es
sbb
mov
mov
int
stc
jmp
or
mov
lahf
loope
mov
jmp
lock
inc
xor
loope
and
xor
adc
mov
lcall
inc
data16
mov
out
outsl
and
xchg
ja
adc
into
push
dec
repz
pop
repnz
std
jo
adc
call
sub
int
adc
add
inc
fimull
or
sahf
or
push
or
push
data16
mov
dec
cmp
test
mov
call
in
in
xchg
mov
xlat
movl
pusha
inc
adc
xor
out
inc
sub
out
xlat
subl
jmp
mov
mov
sub
pop
movsb
repnz
xchg
inc
and
cmp
popf
insb
fmull
jae
aaa
inc
lock
sbb
jg
push
mov
adc
fs
gs
lret
and
cwtl
push
nop
arpl
mov
pop
mov
int
pop
xlat
adcl
pusha
outsl
add
dec
push
cwtl
call
pop
mov
mov
shrb
inc
or
inc
cltd
pop
jp
lods
jns
xor
scas
sub
mov
divb
rolb
jbe
pushf
adc
cmc
pop
mov
mov
adc
lods
lock
dec
mov
xchg
mov
test
sbb
out
mov
iret
pushf
add
mov
push
mov
movsb
decb
je
enter
es
decl
sub
mov
sub
sar
jnp
push
xchg
adcl
pop
popf
jns
mov
enter
lahf
sbb
movsb
jg
sub
les
les
mov
sbb
adc
daa
fidivrl
fdivrs
mov
inc
xor
sbb
mov
fdivr
sub
subb
sbb
out
lahf
lcall
pop
addr16
jne
es
daa
and
jle
adc
cmp
jmp
xor
test
inc
mov
add
lahf
push
inc
and
sbb
push
ss
int
jae
adc
lods
rcrl
jg
int
sarl
fwait
andb
pop
and
sbb
mov
or
repnz
dec
inc
in
test
mov
mov
orb
lahf
shll
dec
daa
pop
and
nop
pop
and
jg
adc
aaa
movsb
cmpsb
jg
cmp
jae
sbb
add
xchg
movl
push
rol
aas
pop
mov
in
enter
pop
insb
xchg
std
test
mov
cld
outsl
sub
xor
adc
xchg
xchg
andl
pop
into
stc
pop
mov
jp
int
cmp
mov
push
cs
mov
hlt
xchg
fimuls
lods
mov
mov
out
push
shlb
xlat
dec
gs
in
inc
loope
jecxz
or
add
xorb
adc
pop
clc
add
mov
mov
inc
imul
fwait
loopne
mov
jno
hlt
mov
test
js
push
mov
je
pop
sub
stos
outsb
int3
js
stos
mov
lods
sub
sbb
mov
clc
or
xchg
or
xor
xchg
push
loop
cmc
pop
or
cli
mov
arpl
dec
cmpsb
lods
and
imul
ret
leave
bound
jb
jbe
movsb
adc
adc
mov
push
add
mov
dec
jg
cmp
cmp
xchg
ret
lods
shlb
fsubrs
dec
test
or
cmc
jno
out
cld
inc
stc
mov
stc
sbb
inc
mov
clc
imul
movsb
push
jno
xchg
mov
push
imul
leave
aam
fucomip
pop
cwtl
push
shrl
movsb
adc
sub
mov
insb
cmp
mov
fldenv
in
aad
cmp
fisubs
in
leave
jnp
ret
jge
or
dec
jmp
les
stc
push
call
test
and
adc
int
sub
or
test
sbb
add
inc
mov
mov
cld
mov
lods
adc
hlt
pop
dec
int3
ljmp
adc
sbb
dec
xor
cmpsb
pop
mov
mov
stos
sbb
xor
fadd
into
xor
add
cmp
ds
jg
jns
or
out
fcmovnu
stc
xor
lods
jg
es
cmp
aas
mov
mov
or
sbb
es
mov
in
push
pusha
sbb
nop
add
enter
stos
add
scas
pushf
insl
repnz
and
daa
mov
adc
and
xchg
add
mov
jecxz
add
adc
sbb
scas
stos
outsb
out
movsb
dec
jb
test
push
subl
popf
lds
mov
pushf
sub
popf
jbe
int
dec
shll
adc
dec
lds
call
sti
jb
mov
sub
cmp
fisubl
sbb
rcrb
lret
dec
rcrb
adc
xor
stc
cmp
xchg
mov
or
or
mov
cmp
pop
in
or
pop
je
ss
lahf
out
push
xor
pop
jp
push
add
push
pop
pop
sbb
fdivs
or
dec
jmp
jns
mov
sub
or
loop
popa
inc
gs
inc
inc
int3
cli
mov
pop
push
pop
xlat
xlat
jge,pt
repz
add
ror
push
leave
int3
sub
cmpsl
test
jb
icebp
in
mov
adc
pop
aam
sbb
imul
stos
call
fsubrs
add
sub
leave
or
pop
enter
fdivrp
mov
scas
pop
cmpsb
jp
sbb
ss
fiadds
repz
adc
push
sbb
mov
lahf
pop
adc
dec
addb
pop
mov
out
push
loope
sbb
je
xor
or
aas
test
outsl
outsl
sarl
push
sbb
idivl
sti
loopne
in
mov
test
push
repnz
mov
sub
loop
repz
icebp
and
mov
vminsd
iret
dec
daa
or
shrb
or
inc
cs
and
testb
push
loope
sbb
xor
int
clc
mov
sahf
into
insl
pop
mov
leave
int3
cmp
or
int
test
mov
test
add
xorl
sbb
mov
pop
inc
fcmovne
fxch
xchg
gs
dec
in
mov
dec
out
mov
dec
jecxz
mov
sbb
mov
incb
adc
sbbb
pop
idivb
pop
mov
mov
lret
adc
fs
xchg
jg
test
inc
int3
insl
arpl
sbb
insb
mov
push
lcall
test
lret
sbb
fldt
mov
call
fdivrl
ss
jge
movl
and
enter
mov
cmp
pop
shl
icebp
rcl
arpl
rolb
inc
shrb
gs
aad
test
or
sub
lods
clc
xchg
dec
test
cs
mov
mov
xor
popf
cmovl
cmp
push
add
jg
add
ficoml
lahf
or
push
int3
xor
movlps
adc
xchg
sub
xchg
xor
idivl
mov
fstl
stc
sbb
mov
jg
cmp
add
ljmp
sbb
xor
push
iret
cli
jmp
in
adc
gs
orb
mov
mov
sahf
hlt
mov
jl
sbb
sarl
sbb
jmp
sbb
cld
cmc
fs
and
xor
mov
loope
repz
xchg
outsl
jg
adc
mov
xor
mov
mov
fnsave
sub
in
mov
outsl
inc
test
cmp
lahf
incl
pop
push
push
xrelease
jmp
hlt
adc
mov
cmp
and
or
xor
lea
dec
mov
dec
arpl
out
nop
ja
cld
lds
xchg
mov
scas
int
push
push
jg
rep
pop
xor
dec
mov
pop
mov
and
fnstcw
mov
call
sub
shl
xchg
add
add
jns
decl
xor
sarb
test
inc
mov
push
adc
test
pop
sbb
cmc
adc
insl
jae
bound
hlt
inc
aas
push
jg
pop
pop
xchg
xor
hlt
cmp
fsubrp
pop
pop
stos
fs
mov
and
and
xchg
xchg
and
push
int3
addr16
xlat
outsl
push
in
xchg
cld
aad
or
mov
dec
inc
lock
dec
or
inc
movsl
in
popf
or
leave
sub
mov
add
out
mov
clc
sti
inc
aaa
out
cmp
int3
jne
add
popf
cmp
and
cltd
dec
mov
ret
cmpl
sarl
lock
ljmp
iret
ss
xor
mov
mov
adc
and
mov
push
jne
lahf
lret
mov
ror
clc
jo
jae
icebp
jae
enter
cmpb
mov
out
xchg
add
rol
scas
xchg
xor
mov
cli
pop
je
sub
jae
jl
jae
add
jecxz
nop
pushf
or
loope
xchg
push
dec
lsl
mov
test
adc
jae
push
push
mov
pop
adc
sub
loop,pt
adc
inc
sbb
sub
test
loope
adc
ljmp
int3
movl
leave
loope
mov
aad
pop
and
into
xchg
xor
dec
adc
sub
out
adc
lods
add
out
test
and
scas
shl
test
lret
sbb
adc
push
sub
push
mov
push
sarl
aam
add
sbb
add
out
std
gs
leave
or
or
cwtl
test
jl
js
xchg
dec
repnz
test
rcll
jno
test
adc
test
pop
mov
cmp
gs
add
inc
cld
pop
jno
lea
movsb
ret
sub
xor
xchg
pop
icebp
mov
cmp
inc
sub
inc
enter
mov
mov
jmp
push
add
cmp
push
and
dec
aam
rcrl
jo
in
dec
sbb
mov
cld
lret
fwait
xchg
jge
and
lret
jg
jmp
mov
xor
adc
hlt
popf
fnsave
mov
fwait
call
mov
xchg
pusha
dec
out
test
mov
decb
pop
jb
or
mov
push
popf
adc
stc
dec
lahf
sti
jns
mov
jecxz
mov
adc
vsqrtss
aaa
pop
jb
outsb
jg
mov
sub
cltd
popf
sarl
in
jne
aad
xor
mov
addr16
add
fimull
add
lahf
stos
jb
push
lds
sub
adc
adc
je
in
roll
data16
add
sti
out
ljmp
hlt
push
sub
inc
fadd
sub
dec
lds
stos
notl
out
mov
sub
sub
or
pop
sbb
xor
inc
xchg
sahf
int3
nop
stos
add
cli
call
outsb
sbbb
mov
or
pop
xor
mov
aaa
rcrl
ret
aas
or
dec
xor
fstl
adc
sbb
mov
mov
call
insl
adc
les
mov
lahf
fsubs
rclb
xor
cld
or
dec
lret
mov
and
push
fcomps
nop
add
imul
ss
aas
xor
jae
add
in
mov
lock
mov
add
js
sub
sbb
and
jbe
test
sbb
adc
adc
lds
repnz
scas
fnstsw
sbb
sbb
add
pop
lcall
cmp
or
pop
sbb
xlat
ss
adc
icebp
inc
nop
mov
popf
outsb
or
clc
dec
subl
js
mov
push
xchg
jae
inc
adc
mov
inc
fucomip
pop
aam
jg
ror
les
or
pop
cmc
add
leavew
popa
adc
les
sbb
mov
loope
ss
out
pushf
and
xchg
out
pop
sbb
in
push
stos
or
jg
and
in
xchg
sarb
popa
sbb
mov
loopne
in
xchg
jne
mov
les
push
add
int3
hlt
mov
sahf
mov
jmp
push
mov
mov
test
sub
mov
mov
or
pop
add
repnz
ljmp
test
sbb
push
dec
adc
jecxz
jbe
imul
loop
mov
gs
mov
ret
aas
cli
lret
aad
push
cld
int3
aad
or
pop
stos
adc
mov
pop
xchg
xchg
sub
mov
mov
mov
fsub
insb
xor
or
lea
enter
add
out
xchg
or
and
fiadds
push
sbb
nop
orb
outsl
and
cltd
lret
or
fidivs
sub
dec
stos
cmp
cmpsl
jge
mov
dec
add
jbe
or
xchg
add
jbe
insl
ret
push
stc
rolb
adc
inc
cmp
rolb
fsubrs
mov
pop
shll
loopne
bound
shlb
out
xchg
cmp
inc
jnp
repnz
das
fidivl
cwtl
mov
adc
mov
sub
inc
jl
jmp
push
pop
and
mov
outsl
pop
int
hlt
xchg
enter
fsubp
jbe
test
aam
ljmp
push
jo
mov
les
hlt
cltd
jp
ds
in
insb
push
or
test
cmp
nop
or
push
mov
int3
fcompl
sub
andl
repnz
ror
repnz
hlt
jno
mov
adc
or
subb
add
sbb
add
jo
xchg
iret
and
ljmp
jg
fs
pop
add
jo
into
jl
jp
js
je
int3
mov
push
enter
ret
icebp
dec
add
inc
lret
sbbl
pop
fwait
adc
pop
xor
or
push
sub
and
out
lock
sbb
ds
cmp
xlat
das
and
or
xchg
out
mov
pushaw
mov
jo
out
daa
lret
push
jle
cmp
or
xchg
test
xchg
adc
ret
lret
or
mov
pop
in
xchg
int3
je
sub
push
movsb
icebp
leave
lods
and
jbe
or
sbb
xor
rolb
adc
adc
pop
movsb
pop
stos
sbb
adc
mov
mov
fwait
xchg
or
and
leave
gs
push
xchg
imul
pop
xchg
in
mov
sub
xchg
fimuls
jo
es
and
sub
sub
ret
out
and
leave
inc
scas
fdiv
add
mov
mov
or
jmp
ljmp
dec
lods
add
push
mov
mov
xor
pop
loope
cmp
add
in
lds
outsl
xchg
in
dec
push
mov
mov
mov
mov
out
fisttps
es
ss
lret
or
and
lock
and
xchg
jmp
jns
sbb
scas
and
mov
hlt
adc
rcr
imul
gs
enter
lret
mov
dec
cli
rorl
fwait
cmp
cmp
lahf
fsubs
jae
xchg
gs
stos
sub
push
jnp
and
xor
fidivrs
pop
rorl
stc
push
fstp
mov
inc
cmc
imul
cwtl
daa
jno
outsl
adc
fstp
icebp
cs
jge
xchg
sbb
stc
and
hlt
mov
in
into
jmp
cmc
xor
mov
rcll
adc
pop
js
int3
insl
test
fucomi
push
lret
push
fmul
fadds
xchg
sbb
add
scas
mov
int3
cld
or
mov
into
dec
adc
sub
sub
loopne
add
pop
stc
test
mov
pusha
sub
insl
popa
lahf
sbb
dec
and
jmp
sub
aas
jmp
fcomps
daa
lret
inc
lret
enter
dec
mov
enter
sub
jecxz
mov
xor
ret
test
movsl
and
movntps
outsl
scas
loope
mov
push
in
sbb
in
or
mov
psrlq
gs
ret
imul
inc
push
or
adc
mov
and
repz
pushf
dec
mov
xor
sub
sub
and
xor
test
inc
in
ret
out
mov
ljmp
fistl
ja
cmc
adc
fdiv
cltd
int3
mov
aad
xchg
lahf
rcll
testb
dec
mov
aam
sub
fsubl
inc
ret
jle
subb
and
xorb
outsl
mov
add
pop
adc
fcmovb
mov
cmc
sub
repnz
inc
adc
loopne
lcall
ja
je
mov
ja
arpl
or
mov
addr16
in
mov
mov
stc
jmp
imul
pop
gs
mov
addr16
out
sbb
mov
inc
stos
jl
mov
shlb
rorl
sub
cmp
notb
mov
enter
sti
xchg
xchg
cmp
add
in
fidivs
shll
in
xor
inc
jmp
mov
sub
xchg
lret
or
inc
icebp
inc
testl
adc
and
stos
jl
mov
mov
lds
add
xchg
movsl
inc
out
loopne
jne
and
das
nop
mov
pop
xchg
lcall
iret
xchg
add
dec
or
jae
add
sarb
push
into
or
pop
add
cmp
mov
xchg
aam
adc
daa
lret
addl
mov
adc
sbbl
es
cmpsl
xchg
sub
jb
add
fisubrs
into
mov
sub
lret
iret
xor
jg
cmp
inc
loopne
add
xor
leave
mov
adc
jne
dec
and
sarb
in
or
or
hlt
and
inc
jl
stc
aad
inc
aaa
cwtl
dec
sbb
jg
push
iret
add
cmp
cld
jp
insb
sub
mov
xlat
in
or
sbb
lods
lock
sub
int
jge
dec
scas
lock
or
int
cmp
in
inc
pop
pop
jmp
inc
mov
incl
enter
jecxz
fistl
insb
push
fisubs
adc
andl
sub
pushf
inc
out
rcll
lahf
jnp
aad
dec
fldenv
sahf
in
es
rcl
mov
dec
add
shlb
lahf
push
aaa
mov
pop
add
fs
jp
mov
push
rcll
and
lcall
inc
int3
movb
loopne
addr16
mov
mov
mov
sbb
scas
or
pop
mov
out
mov
mov
or
push
shrb
and
sbb
jmp
clc
fnstsw
inc
mov
jbe
jo
out
flds
in
loopne
mov
jb
subl
mov
addr16
add
mov
dec
adc
aad
repz
std
lock
adc
and
xor
lods
adc
push
mov
mov
out
mov
mov
fisttpl
adc
jl
icebp
loop
inc
push
jmp
scas
out
in
cmp
inc
in
adc
dec
imul
jae
mov
add
ret
movsb
loope
rorl
fnstsw
int
cld
sub
fildll
add
arpl
inc
pop
mov
into
movsb
shlb
les
push
cmp
lcall
mov
xchg
cmp
adc
sbb
or
or
cmp
mov
not
ret
hlt
les
rolb
out
push
mov
mov
inc
add
ret
adc
fstpl
dec
sub
aad
les
mov
movsb
push
adc
and
int
dec
mov
sti
xor
jb
mov
jb
int
inc
imul
push
arpl
inc
je
sti
stc
jmp
mov
and
cmp
adc
pop
lret
lods
mov
mov
cmp
mov
mov
sbb
mov
or
rcrb
das
shrl
ds
push
push
in
ret
lret
ljmp
repz
mov
or
inc
or
push
or
inc
jl
add
xchg
push
mov
test
daa
adc
xor
push
ljmp
stos
or
mov
jno
mov
pushf
pop
mov
lock
in
push
ljmp
popa
jmp
insl
mov
mov
xor
pop
dec
in
sub
out
scas
jb
icebp
test
fs
sub
pop
testl
enter
adc
lahf
sbb
mov
punpcklwd
mov
sbb
pop
loop
loopne
add
push
add
jnp
push
adc
push
fcoml
je
or
add
or
sub
call
jl
nop
test
jae
xchg
lds
mov
int3
push
or
adc
adc
int3
repz
mov
clc
sub
mov
iret
ds
and
scas
hlt
int3
xor
lods
cmp
adc
mov
int
xchg
cwtl
addr16
or
jmp
xlat
mov
aas
mov
adc
out
add
icebp
cmp
or
or
clc
mov
rorb
loopne
insb
loop
or
dec
xlat
xchg
adc
push
add
jnp
test
adc
inc
pop
pop
mov
fisubrs
add
movsb
int
dec
sub
inc
or
cld
shl
loop
add
clc
or
pop
add
push
lock
adc
inc
cmp
cmpsl
shrl
fwait
pop
daa
loopne
add
mov
or
ljmp
cmp
int3
bnd
repz
adc
mov
mov
int3
pop
xchg
lods
and
xchg
jne
rorl
sarb
inc
xchg
mov
adc
test
push
sahf
jb
arpl
jno
lret
arpl
ljmp
cmp
fadds
xchg
andl
out
int3
mov
mov
pop
mov
sub
sbb
popf
ret
je
mov
test
or
imul
lret
lcall
inc
int3
cmp
cs
ror
in
les
jl
lock
dec
popf
jns
int3
lds
xchg
inc
jnp
mov
addr16
pop
mov
add
add
pop
cmp
or
mov
insl
out
adc
sbb
and
call
adc
adc
std
mov
loopne
sub
sbb
jmp
ss
and
adc
jp
add
sub
rorb
push
sub
add
adc
jbe
repz
adc
pop
lods
lds
add
call
insl
loopne
mov
shlb
cmc
loopne
xor
sti
into
lods
push
mov
popf
mov
xchg
mov
and
scas
rol
lahf
popa
sbb
and
dec
in
mov
dec
mov
repz
int3
filds
mov
jb
cld
mov
fld1
jmp
mov
sbb
call
pushf
push
loope
lds
push
mov
mov
jle
pop
jg
in
adc
sub
cmp
xor
ret
sub
inc
repnz
push
fwait
inc
in
cli
icebp
popf
sbb
iret
cli
out
or
xchg
inc
outsl
mov
lret
sbb
int
stos
addr16
dec
outsl
push
shll
ret
out
xlat
adc
cli
xor
mov
stos
out
sbb
rol
dec
add
push
adc
push
in
mov
filds
dec
rorl
aad
cli
and
mov
cwtl
imulb
in
push
and
xlat
sub
lret
outsl
std
push
mov
sbb
xor
sub
outsb
arpl
jl
popa
fstl
fldcw
mov
test
leave
les
stc
lea
in
sahf
adc
sub
and
push
mov
jo
hlt
movsl
pusha
stc
mov
pop
mov
lea
cmp
push
test
mov
adc
test
aaa
into
inc
ja
cmc
jmp
add
jge
jns
popf
rorb
or
jmp
or
nop
mov
push
jmp
jl
mov
cmp
push
lea
aad
pop
mov
test
in
out
dec
inc
ret
sbb
adc
dec
push
cmpsl
mov
jo
mov
push
mov
or
jne
pop
sub
pop
sub
pop
pop
add
loope
lock
test
shl
popf
add
pop
adc
sbb
xchg
cmpsb
lds
dec
std
or
adc
adc
cld
repnz
sbb
xor
mov
in
or
add
stos
add
add
rclb
fldenv
in
sarl
sub
leave
jb
pusha
push
movsl
jmp
lahf
rorb
popf
sub
shll
nop
addr16
icebp
pop
lds
test
pop
ja
addb
lret
mov
adc
add
pop
in
sub
or
into
clc
lahf
loope
add
or
and
and
or
or
inc
in
xchg
int3
adc
dec
adc
hlt
push
movsb
hlt
test
in
icebp
ret
pop
jns
xlat
call
add
lahf
not
jg
add
out
clc
pop
add
mov
jl,pn
xlat
add
enter
in
repnz
fstpl
fwait
adc
add
hlt
lret
xchg
adc
adc
xchg
fsubl
notb
fimuls
sahf
mov
fisttpll
pop
sbb
or
mov
push
xchg
cmp
ret
xchg
pop
sbb
mov
dec
mov
add
mov
sbb
pop
xchg
lret
imul
js
fwait
dec
call
add
add
fiaddl
cmp
add
dec
dec
adc
dec
or
sub
and
icebp
mov
push
pop
sahf
insl
decb
jne
pop
push
dec
in
in
in
sub
xchg
and
lret
adc
or
in
pop
mov
xchg
pop
mov
pop
mov
sub
dec
adc
mov
icebp
mov
repz
cmp
lds
sub
jnp
sbb
sbb
xchg
fwait
sub
or
add
mov
cwtl
lahf
push
ror
jge
mov
mov
pop
cmp
fsubrp
fsts
mov
xchg
add
outsl
aad
bound
inc
jmp
nop
filds
dec
fdivs
mov
dec
fsts
xlat
jmp
aaa
in
mov
pop
repnz
leave
sub
sub
xchg
into
aad
add
rclb
push
ror
push
or
int
lock
insb
stos
mov
lret
cli
in
pop
sub
adc
pop
ja
mov
lahf
adc
jae,pt
fnstcw
mov
lods
push
adc
mov
xchg
insl
addb
or
dec
ret
repz
outsl
notl
adc
lret
sbb
nop
mov
lods
sub
out
or
sbb
adc
int3
cmp
adc
sub
push
push
add
pop
inc
dec
pusha
sbb
cmp
mov
push
ffree
out
insb
push
sub
cwtl
pop
or
jno
out
or
xor
iret
add
dec
push
or
mov
push
sahf
mov
adc
fidivl
rcrl
fldenv
repnz
add
push
jb
wbinvd
pop
daa
fstl
mov
sti
pop
jae
xor
push
in
push
sbb
fwait
pop
cli
mov
popa
lcall
je
sbb
ret
je
pop
popf
movsb
xchg
aam
pop
scas
adc
mov
aam
sub
lods
xor
sub
mov
adc
lods
pop
push
dec
add
and
adc
jecxz
jns
sbb
dec
cld
cmp
idivb
pop
mov
dec
lock
push
arpl
add
xlat
pop
not
movsl
and
in
in
jmp
pop
loope
lret
xor
adc
mov
inc
lds
insl
mov
inc
xchg
or
ret
stos
or
test
es
movsb
push
and
loope
mov
call
sbb
mov
lret
test
dec
outsl
push
popa
mov
icebp
mov
mov
call
pop
add
push
or
mov
out
std
mov
aam
aad
inc
pushf
popa
loopne
add
fadd
leave
ss
and
sbb
or
adc
loope
enter
rolb
sub
cltd
jecxz
mov
stc
in
mov
out
xor
xor
sbb
mov
imul
inc
mov
clc
imul
int
faddl
push
sti
push
mov
xchg
inc
pushf
shr
lahf
cmc
dec
cli
adc
jae
call
sbb
scas
leave
cs
fs
dec
and
fldl
pop
fldlg2
loopne
cmp
sbb
out
mov
mov
push
insl
mov
push
push
das
xchg
shll
addl
enter
mov
rorl
jmp
fstpt
lcall
pushf
je
lods
imul
ja
pop
pop
and
adc
mov
loop
or
iret
xlat
andl
jbe
ret
scas
daa
loopne
bnd
fcmovnbe
pop
jno
popa
clc
jae
sbb
fsubr
or
popf
push
sub
or
cmp
push
adc
xlat
loopne
mov
adc
or
out
lea
ret
sub
and
jp
and
add
pop
jae
pop
ljmp
sti
add
or
xchg
cmpsb
xor
repnz
sbb
pop
scas
mov
cli
bound
pop
shrd
cld
or
das
add
xor
sbb
push
add
mov
in
ss
or
dec
sub
xchg
jge
hlt
pop
mov
lods
adc
or
push
sub
dec
jle
or
mov
push
cmp
xchg
movsl
cmp
push
leave
sub
push
mov
sbb
jb
lret
ret
fs
and
adc
setg
sbbl
cmc
loope
jne
ja
shl
int3
xchg
jmp
je
testb
in
dec
sub
mov
sti
mov
int
in
in
inc
push
stos
dec
aad
adc
push
test
and
add
sub
lds
das
test
sub
in
repz
ja
mov
ja
sbb
push
cwtl
push
call
or
sub
mov
sbb
in
xor
or
ds
sbb
dec
lret
lret
repnz
sbb
aad
mov
movsb
icebp
inc
lret
andl
inc
add
mov
adc
jecxz
push
cmp
call
or
dec
call
out
lahf
je
pop
mov
sub
cmp
or
loop
iret
clc
test
hlt
dec
shlb
mov
aam
rcr
adc
test
dec
les
fwait
les
jns
stos
or
cmp
xchg
cmp
sub
and
jnp
xchg
sbb
jmp
cld
inc
add
out
test
jl
adc
xchg
or
jae
fimuls
gs
call
push
adc
popa
cmp
leave
xor
scas
iret
outsl
test
test
fsubrs
inc
clc
je
repnz
pop
sub
or
sbb
fucomp
call
add
adc
or
add
aam
fs
test
test
or
negl
shll
fildl
fildl
sub
int
sub
add
mov
jecxz
inc
add
stos
in
and
push
xchg
out
ja
jnp
stc
inc
sbb
aam
push
fldt
cmpsl
test
hlt
inc
mov
in
lahf
mov
xchg
fisubrl
or
jmp
lds
sub
add
adc
or
xor
cmp
in
popf
hlt
out
les
sub
or
fdivr
lods
in
push
add
add
add
fisttpl
adc
lea
out
pop
ret
repz
mov
sahf
fisttps
xchg
dec
test
fldt
movsb
out
rolb
repnz
mov
enter
add
lahf
int3
adc
mov
xchg
cmp
js
rcr
sub
add
adc
repnz
shlb
mov
mov
lods
and
inc
loop
sub
aam
sbb
or
xchg
pusha
push
mov
adc
inc
addr16
out
pop
mov
pop
dec
or
mov
push
addr16
push
xor
fdivrp
mov
xchg
cmp
ds
cld
xchg
cli
cli
vpaddsw
jae
or
movsb
xor
into
stos
mov
fstl
push
out
hlt
cmp
mov
sub
or
mov
sub
movsb
out
xchg
and
rclb
mov
out
push
add
lahf
in
adc
sbb
and
mov
fisttpll
jecxz
inc
rorb
xchg
mov
popf
dec
test
into
test
clc
sub
inc
adc
or
or
mov
jp
xchg
jmp
test
stos
lret
sub
cli
movsb
adc
push
lcall
stc
gs
mov
add
iret
and
and
cld
xor
mov
ljmp
pop
push
das
fdivr
mov
mov
jmp
rcl
adc
mov
dec
sysexit
fs
movsb
and
jns
push
out
js
mov
dec
test
adc
pop
mov
mov
sub
fstpl
xchg
push
shrb
inc
enter
xchg
push
stos
icebp
mov
testb
inc
mov
fnsave
cmp
inc
inc
in
test
dec
cmpsl
out
xchg
cmpsb
and
mov
sbb
mov
xor
les
daa
mov
popf
fidivrl
xchg
lock
dec
test
adc
and
test
push
add
add
mov
mov
push
xchg
repnz
cmp
pop
popf
jbe
and
in
sub
icebp
jle
lret
xor
push
add
add
cmpsl
xchg
out
push
clc
dec
loop
push
ret
jno
sti
fisubs
mov
out
pop
dec
fisttps
push
cli
sbb
cld
sbb
push
add
sar
adcl
pop
loopne
lret
movsl
int3
sbb
lcall
xchg
mov
hlt
or
sub
add
andl
mov
ja
test
mov
adc
sub
rolb
and
and
or
cmpl
or
shll
adc
cmp
in
xchg
clc
bound
loopne
inc
insl
lods
mov
rol
and
adcb
sbb
mov
mov
mov
clc
fdivl
jae
into
hlt
cmp
insb
adc
cmp
dec
xor
ja
into
xor
shr
mov
jmp
sub
loope
pop
out
add
dec
ljmp
or
stos
mov
stc
in
add
or
jge
jo
xlat
pop
pop
adc
outsb
jne
sbb
cmp
sub
push
xlat
test
cmp
aaa
cmpsb
scas
les
fwait
ret
mov
rolb
inc
adc
fldt
push
cmpsb
fcmovne
pop
mov
in
dec
aad
aad
dec
mov
pop
insb
fldl
push
cs
dec
add
pop
jl
fbstp
and
sbb
sbb
cmp
push
pop
mov
sub
dec
stc
and
sahf
xchg
int3
mov
aaa
jg
outsl
fldenv
adc
xchg
scas
mov
jmp
sub
dec
inc
mov
mov
cmp
jg
adc
rcrb
aad
dec
pop
mov
push
addr16
cmp
or
adc
inc
test
fisubl
icebp
imul
lahf
jmp
mov
mov
push
rorl
leave
sbb
mov
add
cmp
stc
or
fiadds
les
sub
and
sub
into
dec
repz
in
es
std
in
insl
dec
adc
aam
push
mov
dec
inc
int
hlt
cltd
sub
sti
imul
push
shlb
push
sbb
insb
pop
idivb
pusha
cmp
inc
aam
call
lock
addb
jl
repnz
repnz
mov
push
pop
sbb
int
mov
test
or
fcomps
cmp
adc
mov
repnz
loopne
inc
ja
mov
loopne
xchg
add
les
sub
push
adc
loop
lods
dec
lcall
sub
jg
pop
dec
jbe
adc
or
roll
pop
into
loopne
xchg
pusha
rolb
sbb
add
adc
pop
les
ret
push
mov
adc
test
mov
ds
into
fcoms
add
sbb
xchg
in
jmp
ret
add
xor
cmpsl
adc
loop
fwait
xchg
mov
push
mov
mov
out
pop
push
push
lret
repz
loop
cs
jmp
sub
pop
fiaddl
fildl
adc
sti
lret
sbb
inc
das
clc
gs
add
lret
adc
sahf
push
popa
imul
iret
sub
adc
add
xor
pop
movsb
sbb
jne
mov
or
push
out
push
les
xor
adc
enter
and
je
insb
test
mov
xor
repz
icebp
push
notl
ss
outsb
pop
mov
jmp
pop
cmp
js
xor
pop
in
inc
movsb
push
mov
fsubr
mov
inc
push
stos
adc
dec
adc
jb
adc
sbb
div
mov
loopne
sub
sbb
jnp
test
xchg
loope
loopne
rclb
fidivs
jg
inc
inc
sub
dec
loopne
test
sbb
dec
es
stos
adcl
testl
inc
adc
daa
in
movsl
mov
sti
mov
sub
arpl
dec
jne
rcl
and
sti
push
push
lods
pop
adc
or
in
jno
fiadds
xchg
clc
lods
dec
xchg
mov
fbstp
cmpsb
mov
push
shll
lcall
lret
or
mov
shlb
mov
fwait
or
jmp
addr16
sbb
cmp
xchg
ljmp
mov
mov
lods
mov
es
fimuls
push
loope
call
fistps
lock
adc
pop
lods
fnstsw
sarb
mov
jns
pop
out
flds
adc
jp
int3
out
or
jmp
leave
es
psubusb
sub
lock
mov
movsb
cmp
jnp
loopne
dec
mov
dec
rcl
inc
or
cld
jae
fadd
pop
sub
sbb
in
add
xor
jno
rclb
add
mov
decb
andl
sbb
mov
inc
sahf
adc
xchg
sbb
testb
pop
outsb
jbe
add
adc
outsb
in
pmuludq
aam
shl
sbb
and
out
mov
adc
movsb
cli
test
sub
add
jae
mov
mov
and
sbb
and
add
mov
clc
pmuludq
xor
add
aad
loope
push
jne
movsb
add
xorl
dec
movsb
repz
dec
sbb
in
fmul
xor
jns
orb
adc
lods
rorl
xor
dec
add
jg
adc
outsb
fsubrp
xlat
es
test
repz
cmp
test
jl
rcrl
and
stos
and
pop
mov
adc
jp
mov
push
insb
adc
and
lods
stc
dec
lahf
push
push
mov
adc
fsubr
push
mov
shrl
fdivl
xchg
inc
adc
iret
xchg
jecxz
dec
push
cmpsb
bnd
jle
push
fnstcw
stos
adc
scas
lods
out
mov
push
push
ds
hlt
mov
mov
lret
adc
add
pop
xchg
xor
lods
dec
or
lods
cmpl
fwait
leave
arpl
insl
movsb
mov
mov
lcall
lea
mov
or
sub
jns
fldcw
int3
push
shl
cmpsl
dec
push
add
idivl
shll
mov
ds
inc
inc
jle
adc
sub
and
sbb
in
xchg
pop
pop
stos
lretw
out
test
and
in
pushf
lret
dec
mov
iret
je
inc
test
adc
push
adcl
outsl
shr
and
inc
adc
dec
out
cmp
aas
mov
leave
sbb
addb
pop
mov
les
pop
shll
add
sub
sti
dec
mov
adc
cmp
outsb
adc
push
scas
xchg
pop
pxor
mov
ss
fs
lds
push
lods
ljmp
mov
adc
sub
pop
jne
sub
icebp
out
mov
push
hlt
out
lahf
test
pop
xchg
mov
cmpsb
test
xchg
mov
dec
jle
jne
add
insb
in
ret
ds
pop
mov
pop
xor
repnz
popf
out
icebp
sahf
mov
and
leave
jge
popf
andb
adc
or
lods
arpl
shlb
dec
xor
js
fnstenv
mov
aam
repnz
movsb
sbb
fiadds
les
add
gs
dec
in
insl
adc
jae
rol
insb
cmpsb
popa
cli
ficoml
adc
roll
leave
and
xchg
aam
mov
fsubrl
mov
or
leave
faddl
cmp
push
sbb
fstp
andb
rcr
in
js
mov
aam
cmp
pushf
sbb
sbb
pop
dec
int
jns
in
outsl
shlb
inc
clc
push
mov
sub
sub
lcall
xlat
dec
jo
adc
aas
jno
loopne
int3
or
xchg
hlt
roll
in
or
aad
out
sub
nop
push
sbb
cltd
rorl
pop
test
subb
icebp
mov
push
and
adc
sub
jmp
shl
fyl2xp1
lods
or
lcall
stos
xchg
lcall
ja
sub
mov
pop
rolb
or
push
int3
ret
xchg
mov
sub
enter
jae
add
pop
cmp
cld
sub
fwait
cmp
pop
pop
sub
lahf
or
outsl
push
add
fs
push
add
xor
inc
ret
push
add
popa
mov
fnsave
movsl
mov
std
loopne
mov
jge
in
lahf
movsb
bound
in
xor
lock
icebp
push
mov
and
int3
clc
cld
sahf
cmp
lock
push
lret
inc
ret
int3
aaa
sahf
fwait
test
hlt
repz
imul
cmc
xchg
rolb
leave
mov
ret
pop
mov
mov
adc
ss
and
fstpl
pop
jae
fld
jmp
in
enter
fdiv
add
adc
or
jb
adc
or
mulb
aad
push
sub
push
mov
mov
pushf
jo
call
or
add
mov
and
rcll
movsb
or
subb
pop
les
push
adc
mov
xor
leave
decl
inc
int
fstp
and
ds
jo
xor
dec
stos
cmp
push
jg
out
ret
push
push
jle
in
ds
scas
sbb
loopne
ficompl
std
dec
rorl
dec
ret
push
lock
aaa
loop
iret
dec
inc
cmp
xchg
mov
aas
push
and
insb
and
or
in
pop
dec
jg
test
dec
adc
adc
stos
pop
les
fnsave
std
sub
repnz
jp
aad
push
dec
mov
or
add
lret
pop
hlt
ret
pop
repz
mov
out
lods
out
stc
push
push
add
mov
jecxz
pop
les
loopne
jns
adc
dec
fsts
mov
stc
stos
sbb
call
pop
popa
in
imul
mov
sub
ds
ljmp
dec
adc
or
mov
inc
sti
shrl
clc
int3
out
int3
adc
adc
aaa
sbb
sbb
and
mov
call
jl
add
add
ret
xchg
pusha
das
pop
jnp
inc
ss
push
fs
dec
dec
loopne
jae
cmp
jo
flds
push
xchg
test
imul
mov
xor
pop
fisttpl
or
test
sbb
adc
jmp
jl
xchg
rorb
sbb
mov
lret
sub
or
sbb
stc
sahf
clc
loope
testl
xlat
sub
cmpsl
into
jo
mov
dec
mov
enter
lock
adc
ja
shll
fs
pusha
std
fsubr
sub
outsb
mov
bound
into
adc
dec
jae
sahf
push
rcrb
add
ret
and
addr16
mov
js
sub
and
std
iret
loop
sbb
sbb
xchg
adc
addb
xchg
add
out
rorb
xor
pop
jae
and
or
xor
sbb
xor
add
cmp
pusha
enter
and
mov
insb
loop
cld
pop
sbb
ret
lret
subl
lret
je
lock
iret
stos
or
add
xor
nop
iret
rclb
int3
ret
mov
enter
sti
in
xchg
mov
mov
dec
or
stos
jb
add
les
sahf
rcr
ror
in
mov
lods
mov
imul
dec
sbb
out
jb
lret
out
and
je
popf
xchg
lret
mov
popa
push
loop
enter
and
cwtl
and
ja
pop
imul
icebp
adc
mov
or
repnz
hlt
ret
dec
xchg
dec
sahf
or
in
jne
cmp
push
sbb
push
cmp
mov
or
sbb
add
sub
mov
lret
adc
test
jne
push
imul
lock
jb
in
sub
test
cld
push
cmp
arpl
jns
jmp
push
out
lcall
test
adc
mov
dec
add
gs
pop
ds
test
pop
insb
leave
pop
nop
lret
push
aas
stos
add
das
sub
push
adc
shlb
mov
mov
add
pop
dec
lods
psrld
push
pop
les
lahf
cmp
test
xchg
pushf
pop
mov
lret
insl
adc
sbbb
jb
fidivrl
adc
pop
imul
sahf
fsub
cmp
and
sbb
les
in
mov
add
pop
mov
icebp
ret
push
hlt
in
out
movsb
mov
repnz
in
mov
adc
adc
in
cs
push
adc
pop
pop
out
push
pop
push
xorl
jmp
jne
dec
add
bound
add
pop
push
rorl
mov
xchg
scas
leave
pop
jg
addr16
dec
inc
lcall
cwtl
xor
mov
stos
sbb
sub
or
xchg
adc
ds
push
add
into
mov
ret
mov
mov
andl
lock
out
aam
mov
es
mov
mov
adc
pushf
push
jns
or
adc
adc
out
pop
repnz
sub
dec
adc
popf
cmp
repz
sub
in
pop
loopne
fnstsw
and
dec
push
mov
adc
xor
sahf
mov
stos
sub
sarb
dec
repz
adc
test
bswap
cmpsb
jmp
cmp
in
or
aad
pop
lret
sub
or
stos
lods
inc
test
sbb
sub
push
sbb
dec
in
loope
jae
inc
scas
rorb
cmp
movb
mov
out
mov
mov
adc
cld
bound
push
jb
adc
and
decl
out
fiadds
sub
push
lahf
neg
sub
out
inc
add
neg
pop
out
xchg
stos
pop
and
in
adc
push
nop
add
outsb
movsb
outsl
push
icebp
cld
jo
and
mov
cmpsl
lret
adc
rorl
in
and
mov
cwtl
cld
jae
mov
mov
xchg
and
push
test
in
jno
in
sahf
shll
fwait
pusha
mov
fnstenv
rolb
pusha
jl
fwait
inc
mov
add
mov
nop
fidivrl
and
cmp
jmp
insb
imul
fcmovnu
stc
jne
lock
lret
flds
inc
jbe
ss
mov
in
shlb
gs
sbb
sub
scas
outsb
jmp
push
pop
jb
or
pop
cs
dec
lea
out
push
mov
mov
addl
je
pop
cwtl
into
xchg
xchg
ljmp
outsb
xlat
mov
std
sub
jg
and
add
in
cmp
adc
shll
sub
sub
mov
xor
sbb
inc
inc
dec
sahf
or
cmpsb
mov
in
out
loopne
push
test
in
adc
dec
adc
mov
stos
add
push
add
jb
cmp
les
dec
xchg
or
insb
inc
ja
xchg
adc
jae
adc
lret
jns
push
adc
rcl
mov
xor
sbb
pop
hlt
xor
lods
push
adc
mov
xlat
outsl
bswap
outsl
mov
cltd
xor
call
int
clc
sub
sahf
fs
mov
fists
stos
or
xor
mov
xor
and
mov
pop
mov
add
pushf
cmc
jge
rorl
loope
mov
xorl
shrl
adc
notl
or
push
jmp
sbb
loop
lock
cmp
stc
mov
adc
push
inc
mov
ficompl
sub
jp
pop
mov
mov
jo
add
mov
adc
mov
mov
mov
mov
xchg
mov
and
inc
sbb
dec
or
out
xlat
sbb
or
xlat
in
fistl
xchg
imul
and
xchg
lea
hlt
js
lea
insl
test
int3
adc
hlt
adc
aas
mov
outsl
divps
pop
cli
movsb
frstor
in
add
cmp
sbb
or
enter
gs
xchg
movsb
xor
mov
xchg
stos
inc
sub
xlat
mov
or
and
push
mov
sbb
mov
mov
repnz
or
sti
dec
lds
aad
and
aam
orb
addr16
pushf
mov
out
xchg
xor
push
rdrand
cvtdq2ps
dec
xlat
lahf
or
dec
push
add
inc
cmp
inc
fnstsw
adc
pop
data16
ss
mov
jno
ror
mov
sub
push
xor
and
xchg
mov
je
pop
dec
mov
cmp
or
xchg
xor
mov
scas
cmp
push
test
fs
adc
rcr
lahf
xchg
jp
add
or
leave
jne
sub
xor
sub
mov
outsl
inc
mov
daa
data16
cli
bound
mov
lods
mov
aad
mov
xchg
xchg
in
ret
dec
adc
add
jmp
or
adc
add
mov
into
xchg
aas
push
lret
jae
jno
lret
rorb
or
adc
call
mov
aad
dec
xchg
sub
fwait
dec
call
cmp
or
shl
xchg
repz
xor
icebp
iret
push
add
pushf
nop
pop
pushf
or
rcll
inc
les
fsubs
aad
xlat
mov
adc
in
in
roll
in
mov
add
gs
jo
cmp
cmp
mov
rcll
fistps
add
or
cmpsl
lcall
popf
in
das
dec
arpl
mov
notl
ljmp
into
jbe
bound
adc
rorb
frstor
arpl
sub
sahf
vmaxpd
addr16
xor
adc
push
sub
xor
mulb
insb
dec
fisubrl
outsb
push
jl
jg
decb
cld
add
sub
pop
stos
fs
rcr
clc
jecxz
icebp
or
call
jns
pop
inc
push
sarb
push
adc
shrl
call
add
aaa
xchg
cmp
iret
pop
outsb
call
ret
or
leave
push
inc
orb
dec
adc
push
daa
jge
push
add
scas
mov
sub
push
jno
iret
mov
mov
les
fs
popa
adc
scas
clc
add
lret
add
psrlw
adc
subl
in
or
movsb
adc
sarb
mov
dec
into
std
inc
and
int3
mov
setl
stc
andb
xor
adc
in
test
lret
jmp
out
loope
fmuls
lret
xor
mov
mov
aam
mov
mov
int3
mov
xchg
inc
loop
push
inc
int
mov
mov
adc
loopne
ja
jmp
push
ljmp
dec
imul
xchg
cmp
add
in
out
ret
xor
ret
or
sbb
int3
lds
mov
fadd
in
leave
sbb
sbb
ficomps
sbb
cmp
mov
hlt
pop
or
rorb
add
adc
daa
scas
xchg
cmp
jg
push
jp
clc
sbb
dec
or
stos
mov
pop
out
push
inc
cmp
hlt
cmp
iret
adc
divl
mov
jbe
iret
sub
fidivrl
or
data16
mov
pop
or
mov
sbb
xchg
jae
mov
xchg
daa
xchg
and
sti
mov
mov
repz
pushf
xchg
movsb
ret
mov
mov
sbb
clc
roll
les
stos
cmpl
mov
xchg
mov
or
sbb
enter
bound
jo
adc
bound
int3
mov
out
sbb
pop
rcrb
mov
push
lock
push
cmp
into
insl
leave
add
hlt
into
sbb
ss
aad
pop
loope
hlt
aam
adc
adc
mov
push
lea
or
dec
ret
inc
outsl
mov
push
mov
mov
or
repz
lea
mov
rcrb
int
shlb
or
mov
call
movsb
rcll
sbb
repz
adc
or
adc
adc
cmp
xor
or
into
cli
fcoml
int
adc
fxch
add
push
out
out
sub
add
lret
rclb
add
mov
mov
jg
mov
hlt
add
fstps
push
repz
shr
pop
mov
inc
xchg
ja
inc
test
pop
hlt
cld
ret
mov
test
int3
js
xchg
push
inc
data16
stc
aad
dec
into
pop
xor
repnz
or
outsb
or
pop
xor
ret
rolb
cmc
adc
adc
fldenv
jne
stos
dec
loopne
loopne
adc
fwait
lret
cld
xchg
sub
inc
or
pop
pop
and
push
adc
pop
insb
mov
mov
sbb
movsl
pop
lcall
dec
or
jmp
pop
out
les
sub
jecxz
and
popf
dec
sub
in
mov
and
imulb
insb
xor
ficoms
add
cmp
in
flds
orl
xor
jb
scas
jae
or
lods
bound
cmp
in
das
xor
mov
add
fbld
outsl
add
int3
dec
test
xchg
mov
sbb
add
mov
cmp
repz
dec
mov
call
xor
push
cld
adc
sub
sbb
or
nop
cmp
jg
add
enter
sbb
shlb
test
data16
pop
ss
in
adc
cltd
cmpsb
lret
push
adc
adc
and
outsb
andb
mov
repnz
adcb
jmp
icebp
add
mov
cld
imul
shl
jae
sub
in
cmp
fs
sub
push
pop
jno
dec
sbb
out
dec
mov
and
clc
sahf
add
adc
sarb
or
cmpsl
cmpsl
cmpb
sahf
icebp
jno
aaa
incl
es
in
aad
sti
mov
lods
mov
pop
jg
dec
movsl
cmpsb
cmpl
xor
inc
cmp
scas
shrb
mov
sub
es
call
cmpsb
scas
stc
or
sbb
in
adc
lret
adc
stc
es
pop
cmc
jl
xorb
stc
dec
mov
xchg
jmp
ja
lret
add
push
jmp
pop
and
loop
pop
mov
fisttpl
repnz
lret
lea
leave
in
dec
or
mov
jmp
fnstcw
in
nop
add
pop
jae
add
push
push
inc
outsb
cmp
fcoms
xor
stos
faddp
cmp
add
jmp
push
add
ss
push
outsb
mov
mov
mov
mov
mov
or
lret
adc
sbb
sbb
cmpsl
icebp
call
mov
cmp
repz
inc
pop
int3
hlt
cmp
and
loopne
inc
outsl
add
cltd
inc
add
addr16
call
xchg
cmp
rolb
mulb
xchg
js
mov
out
adc
out
fwait
mov
enter
sbb
scas
or
clc
cmp
cmp
dec
mov
cmpsb
lods
out
pushf
mov
bound
or
lods
movsb
adc
cmc
inc
sahf
dec
movsb
sahf
not
xchg
mov
cwtl
mov
cltd
mov
smsw
xor
or
mov
rcrb
cmp
xor
add
push
popl
rorl
pop
pop
fwait
mov
clc
push
sbb
sbb
shr
adc
cmpsb
xor
call
aaa
sbb
in
fprem1
add
js
fwait
add
loopne
fsubrs
cmc
cmp
adc
adc
loopne
mov
call
fdivl
lahf
sub
fsubr
pop
jbe,pt
out
lret
imul
lods
lods
insb
in
les
mov
ret
aas
jnp
mov
inc
rcrb
mov
push
pop
inc
dec
aam
sbb
pop
jmp
lret
es
fwait
dec
lahf
rcll
cmp
mov
and
movsb
add
adc
sub
adc
or
jg
mov
xchg
mov
xchg
daa
adc
inc
mov
xlat
nop
xchg
push
cmp
cwtl
mov
xchg
add
jl
xchg
push
ss
jl
stc
inc
imul
sbb
or
or
sbb
call
mov
mov
cmp
cltd
nop
pmaxsw
popl
idivb
aam
sub
sbb
sarb
sbb
pushf
test
ds
jno
call
cwtl
mov
adc
pusha
aas
jo
mov
sbb
cld
xchg
movsb
cmc
insb
addr16
or
xlat
das
aas
push
add
mov
xchg
fsubrl
sarb
xchg
add
jmp
arpl
xor
mov
das
into
inc
stos
add
lgs
dec
jmp
sti
ss
cmp
sysexit
and
jmp
mov
movswl
adc
nop
mov
rorb
stc
xor
jmp
mov
test
in
mov
push
dec
jl
push
ljmp
dec
xlat
cs
das
aaa
inc
jo
jmp
outsl
shrb
xchg
insb
and
iret
cmp
push
xchg
addr16
ss
mov
int3
jle
adc
cmp
push
and
add
sbb
inc
out
sahf
pop
loop
inc
add
mov
out
cltd
in
lret
stos
and
mov
add
call
sub
imul
icebp
shlb
sar
cmp
jb
cmp
pop
mov
add
or
lret
jmp
add
adc
push
jle
inc
dec
loopne
lods
add
add
jl
icebp
sub
jbe
or
adc
inc
mov
das
push
xchg
sbb
cmp
push
cmp
das
mov
mov
jge
mov
xchg
sub
addb
mov
stos
popf
mov
push
or
sub
hlt
es
push
mov
cmp
inc
xlat
fadd
push
adc
cli
clc
repnz
pop
push
rcl
in
sbb
rorb
ds
fldenv
in
ret
mov
or
mov
iret
fldl
xchg
mov
popf
imul
int3
jnp
sbbb
push
mov
or
ss
insb
fcoms
push
pop
fmull
mov
insb
jae
sahf
outsl
js
xchg
mov
mov
mov
stc
push
fstpl
cmpsl
movsb
lock
xchg
sbb
mov
xlat
sbb
push
pop
cmp
rorb
dec
sbb
sti
jbe
mov
insb
int
sbb
lahf
inc
add
shrb
push
out
in
bound
mov
das
pop
repnz
out
test
and
les
aam
mov
rolb
sub
ljmp
movsb
adc
test
testl
sahf
or
dec
cld
adc
je
nop
rclb
sahf
mov
ret
ds
adc
scas
sub
adc
sahf
ror
mov
mov
sub
cmpsl
or
add
xchg
gs
cmpsb
push
sbb
ret
add
sbb
add
add
lret
popf
mov
popf
into
jns
call
push
aaa
add
shrb
push
out
aad
inc
xor
pop
nop
popf
mov
xchg
ret
add
movsb
repz
pop
pop
je
sub
and
sti
in
mov
sti
add
mov
nop
xor
add
mov
in
ret
xchg
enter
xor
in
mov
iret
fidivrs
btc
or
stc
and
mov
dec
sub
sbbl
add
int3
xchg
lods
add
adc
dec
sbb
nop
out
fistl
jg
or
push
push
in
pop
xchg
fsubrl
shlb
mov
xor
test
mov
jg
fcomp
jp
aas
aam
aaa
xlat
cmp
scas
aas
pop
or
cmp
sbb
test
mov
ror
cmc
loopne
xchg
cmc
dec
inc
repnz
and
add
outsl
jne
jecxz
add
jbe
les
mov
lret
mov
push
xchg
xor
rolb
jg
mov
rcrb
push
fisubrl
ret
adc
jae
pop
sti
or
outsb
mov
outsb
shlb
das
lret
push
mov
lcall
scas
fwait
sti
and
pop
popf
js
lods
in
sub
rcl
mov
jb
iret
mov
add
xchg
inc
es
xchg
or
or
cmpsb
jnp
ljmp
fdivrs
out
and
nop
pop
pop
test
test
mov
adc
xor
jecxz
jecxz
mov
xchg
pop
sub
loopne
add
xchg
imul
or
adc
xchg
mov
fdivl
int3
rcrb
mov
aam
mov
loop
lock
faddl
outsb
adc
lcall
add
out
mov
ss
lock
stc
push
mov
xlat
pop
adc
xor
dec
pop
int
jbe
out
outsb
sbb
jbe
shlb
dec
and
movsb
repz
in
push
cmp
shl
in
arpl
cwtl
mov
mov
fdivrs
in
push
ss
inc
out
aas
fcmovnb
in
push
fldl
or
fstps
xchg
fisubl
aam
js
out
or
lock
imul
mov
stc
mov
fimuls
or
repnz
mov
lret
lcall
dec
outsb
loop
push
pop
sub
into
out
movsl
jo
pop
push
inc
sub
add
or
jns
add
sbb
or
adc
sarb
jbe
cmp
pusha
shrl
out
jbe
ret
out
rorb
or
adc
ljmp
pop
sahf
adc
mov
sub
aas
insl
or
cwtl
mov
cmp
iret
mov
mov
rorb
inc
iret
int3
sbb
clc
or
shlb
insl
mov
out
in
add
cld
das
loopne
in
adc
fisubrs
mov
nop
jbe
mov
loope
xorb
xchg
pushl
or
push
call
jge
mov
int3
jmp
sbb
test
int3
mov
push
fs
dec
lahf
inc
xchg
in
xchg
inc
cmc
push
or
repnz
out
sub
pop
lcall
filds
add
cmp
sbb
jl
inc
dec
sti
lock
push
sarb
lret
lret
add
mov
mov
or
and
push
stos
mov
push
icebp
xchg
xlat
arpl
mov
adc
push
add
mov
sbb
adc
into
lret
fdivp
lds
bound
aam
sti
mov
les
fcoms
nop
fwait
or
jbe
jmp
mov
mov
nop
arpl
dec
adc
mov
and
mov
mov
push
mov
jne
cmp
mov
sbb
aam
xchg
xor
sbb
dec
and
sbb
dec
out
pop
add
in
sbb
adc
cli
inc
mov
xor
mov
stos
adc
rcrb
sub
test
mov
xlat
ds
dec
mov
pop
orl
add
loopne
add
lock
or
enter
in
xchg
mov
add
add
xor
aam
mov
loope
lods
or
or
inc
mov
xor
xor
cmp
rolb
adc
es
xor
mov
pusha
stc
leave
aas
mov
sbb
data16
iret
dec
lret
dec
loopne
mov
aam
mov
daa
push
jne
add
fadds
or
inc
into
shrb
adc
add
xchg
xor
fld
test
loop
ss
loop
scas
add
mov
or
cmp
in
hlt
adc
mov
fdivp
inc
lahf
sub
adc
adc
fiadds
cmp
push
pop
xor
imull
xchg
push
jae
jp
cmp
mov
repnz
lret
dec
push
in
mov
xchg
movsb
sub
in
movsb
pop
add
xchg
or
and
aad
test
add
adc
idivl
jae
stc
es
jg
sti
repz
push
sub
mov
mov
or
cs
mov
pop
xor
adc
hlt
cmp
enter
adc
cmp
addr16
fnsave
mov
mov
ret
enter
or
mov
les
stc
xor
add
mov
sbb
or
cmp
adc
iret
xor
repnz
lahf
jl
sub
jbe
cli
or
dec
mov
xor
xchg
movsl
adc
sub
stc
inc
mov
sub
int
pop
adc
or
scas
add
adc
add
pop
scas
push
aam
xor
lock
inc
sbb
or
sbb
cmp
or
dec
into
clc
push
lods
inc
fmulp
dec
or
push
enter
int3
repz
adc
inc
outsl
sbb
pop
adc
adc
xor
mov
popa
xor
inc
xor
adc
dec
imul
mov
inc
test
jne
ja
jae
ret
shlb
les
enter
inc
mov
enter
repnz
adcb
test
xchg
xor
scas
adc
icebp
mov
xor
mov
lret
mov
dec
xor
push
add
sub
cmp
or
lret
int3
sbb
xchg
sub
cltd
dec
das
add
push
jno
cltd
jmp
mov
push
or
dec
inc
lret
mov
lds
mov
dec
inc
loopne
sti
or
pop
cmpsl
mov
push
lock
sub
loope
in
leave
int3
dec
rolb
and
sub
das
insb
cs
ljmp
subb
jno,pt
jae
jmp
xor
and
inc
push
lahf
add
imul
add
adc
scas
add
hlt
inc
mov
sub
add
inc
add
dec
lods
cmpsl
pop
fcom
add
in
jne
movsl
sar
fmull
rorl
jecxz
add
sbb
add
mov
roll
sbb
xchg
cmp
cmpsb
out
push
or
xor
mov
inc
les
and
clc
cmc
mov
mov
out
mov
pushf
lret
or
dec
cld
adc
mov
mov
sub
in
add
sbb
lock
mov
dec
and
adc
mov
adc
mov
xor
inc
mov
adc
sti
sbb
out
xlat
and
or
cmc
pushl
int3
xorb
clc
addb
sub
int3
inc
push
dec
int
add
out
jae
in
pushf
hlt
push
adc
sub
mov
or
data16
or
rcrb
inc
jns
out
lods
lds
test
div
mov
mov
lea
jno
dec
movsb
sbb
dec
adc
sub
adc
ds
and
adc
ror
add
stos
jnp
cmp
in
or
sarl
in
push
mov
shll
mov
cli
pop
add
mov
gs
out
nop
scas
test
jae
xchg
imul
ja
mov
into
enter
gs
imul
add
jne
mov
mov
loop
lock
dec
enter
lods
pop
repz
loopne
pop
push
xchg
mov
jo
mov
push
mov
inc
mov
stos
adc
fiadds
sahf
adc
cmp
pushf
ret
mov
adc
pop
lret
repz
lods
add
mov
sahf
or
or
fimuls
pop
mov
xorb
iret
and
aaa
sub
loop
mov
add
push
arpl
mov
lret
rcrb
dec
out
out
loop
adc
sbb
iret
inc
pop
mov
sbb
dec
push
fimuls
in
faddl
cmp
into
std
pushf
stos
sub
addb
push
mov
ret
adc
hlt
adc
loopne
jp
je
repnz
lods
add
dec
notl
inc
mov
hlt
jg
sbb
lret
jmp
add
mov
movsl
xor
xchg
rcrb
pop
loopne
add
mov
push
rcrb
mov
ret
mov
scas
or
and
cmc
mov
xchg
arpl
inc
dec
mov
imul
mov
stos
add
or
mov
mov
sub
cwtl
test
jb
mov
pop
fld
out
and
sub
cli
sbb
stos
add
add
add
dec
call
sbb
pusha
mov
lahf
addb
ret
sbb
jmp
add
add
push
mov
adc
sub
cmpsb
les
insb
insl
shlb
imul
pop
lcall
imul
fwait
gs
lock
lock
push
ds
or
testl
loopne
xchg
dec
les
aad
adc
push
imul
sub
dec
adc
in
push
ret
test
nop
loope
imul
int
adc
ror
jo
xlat
inc
add
fs
out
mov
rol
pop
cmp
popf
das
sub
pop
imul
fdivl
mov
mov
mov
adc
pop
fstpt
mov
jne
std
mov
cwtl
orb
mov
mov
shlb
or
fstps
aam
mov
ficoms
push
add
ret
lods
call
sub
cmp
nop
pop
jge
enter
sub
dec
sarl
lahf
std
inc
mov
mov
sub
sbb
shlb
test
fcoml
sub
jge
or
imul
sbb
sub
clc
out
out
lahf
push
jmp
fnsave
cmpsb
js
push
jge
or
or
insb
mov
xchg
dec
popf
dec
call
inc
or
cmpsb
fnstsw
and
in
and
cmpsl
stc
and
push
adc
mov
jne
mov
enter
or
ret
add
and
cmpl
testb
pushl
mov
imul
std
mov
lods
into
loop
rol
dec
jae
mov
mov
cmp
and
mov
push
dec
push
jmp
ficoms
mov
add
mov
adc
out
jne
inc
out
ljmp
add
test
or
sarb
stc
and
dec
dec
xor
cmp
mov
mov
lret
and
xchg
cmp
loope
xchg
mov
xchg
sub
sbbl
mov
push
dec
clc
inc
aaa
sti
xchg
icebp
adc
sbb
lea
push
add
sbb
add
scas
push
sub
mov
jbe
mov
mov
mov
push
push
mov
cld
xchg
inc
fstps
mov
push
or
flds
xlat
jge
cmc
mov
fwait
mov
and
add
lret
add
xchg
mov
clc
adc
aam
test
inc
ret
aam
pusha
arpl
and
test
insl
outsb
in
hlt
test
add
dec
mov
or
add
roll
sub
push
jl
repz
and
stos
imul
adc
mov
xor
aam
mov
adcb
icebp
lods
ret
mov
decl
mov
jnp
mov
popl
mov
shlb
mov
adc
adc
or
cmp
movsb
push
bound
rolb
jmp
adc
adc
or
adc
lock
int3
into
adc
pop
in
iret
nop
mov
cmp
dec
and
mov
fdivr
ljmp
mov
and
adc
xor
cmp
out
in
jmp
pushf
mov
pusha
mov
mov
push
lret
mov
pop
in
es
int
jmp
sbb
dec
pop
sub
out
add
and
or
add
jle
sbb
push
inc
in
dec
roll
rorb
pop
jne
mov
and
loope
and
mov
jo
or
mov
cmp
cwtl
rorb
push
dec
or
sub
shlb
or
adc
adc
and
ss
dec
xor
xor
inc
movsl
jno
imul
pop
sub
xchg
ret
xchg
xor
and
mov
and
xlat
inc
adc
or
xchg
push
lahf
xchg
inc
enter
jns
mov
adc
repz
dec
int3
ljmp
and
cmpl
add
sbb
mov
adc
nop
jbe
outsl
stos
leave
clc
fisttps
hlt
mov
xor
scas
cltd
push
sbb
popf
push
push
movsb
adc
fsubl
and
fnstenv
das
pop
jbe
inc
ljmp
xchg
popf
js
in
lods
add
mov
daa
inc
shll
jbe
lock
pop
xchg
push
repnz
pop
mov
adc
mov
mov
jecxz
cs
add
repz
loopne
mov
dec
sub
sahf
adc
xchg
xor
lea
js
xor
push
mov
xor
loop
icebp
mov
xchg
xor
aam
sbb
sub
loope
adc
cmp
adc
hlt
mov
or
sub
sub
sbb
pop
sbb
mov
mov
sub
xor
call
or
adc
or
imul
pop
jecxz
sbb
subb
pop
repnz
adc
jl
iret
and
xchg
adc
ss
fistl
mov
add
jmp
or
rorb
jo
outsb
in
add
push
push
or
xchg
out
lock
shlb
lcall
sbb
or
fisubl
orl
fstpl
sbb
ss
dec
loope
pop
or
sbb
testb
mov
cmp
in
lock
sbb
int
jle
mov
dec
hlt
inc
jae
sbb
xchg
in
filds
cmp
cmp
mov
aas
cmp
lahf
jp
cld
or
adc
frstor
aas
pop
jle
xor
enter
push
nop
xor
or
mov
adc
push
mov
mov
dec
and
scas
mov
outsb
or
cmpsl
test
mov
sub
gs
dec
nop
add
jle
ds
cmp
inc
jmp
adc
hlt
shll
jg
arpl
mov
lahf
fidivrs
pop
scas
mov
leave
or
lcall
mov
jmp
dec
insb
divb
notb
mov
adc
loope
decl
or
sbb
mov
hlt
ljmp
xadd
adc
jmp
outsl
lock
stos
loope
adc
fwait
jecxz
pop
adc
iret
adc
nop
or
cmp
mov
push
pushf
mov
mov
jg
js
mov
sbb
cwtl
movsl
add
xor
dec
orl
and
daa
mov
loop
sbb
sub
nop
ja
enter
pop
insb
mov
lcall
rcl
fldenv
cmp
cs
lret
mov
push
jmp
add
aad
mov
das
mov
mov
add
daa
xlat
stc
adc
mov
fisttpll
mov
and
imulb
xchg
mov
mov
fisttps
into
pop
jmp
fisttpl
test
faddp
fnsave
nop
popa
aad
pop
rcr
ss
hlt
push
pusha
out
adc
or
dec
iret
sub
add
in
fisttpll
sbb
jns
mov
cmp
lret
jecxz
out
adc
nop
ljmp
mov
mov
add
or
aas
inc
sti
inc
clc
pop
data16
and
xor
inc
loopne
add
cld
popa
xor
int3
out
jo
mov
outsl
mov
ret
ret
xchg
and
adc
push
cmpsl
xchg
lahf
hlt
mov
iret
xor
faddp
and
ret
lods
fucomip
hlt
scas
in
sub
adc
repz
and
xor
dec
cltd
sub
pop
hlt
test
scas
daa
pop
sub
xlat
test
ja
fisubrs
orb
dec
push
inc
sahf
fnstcw
ret
cmp
mov
add
pop
cmp
push
mov
rcll
mov
xlat
fiadds
xchg
outsl
adc
dec
adc
jl
mul
lret
sahf
repnz
mov
add
jl
cld
mov
lock
pushf
push
daa
adc
jecxz
xor
push
add
repnz
orl
sbb
les
inc
adc
lods
test
or
xchg
clc
sbb
out
lret
pop
aad
test
call
xor
or
mov
cli
sub
mov
int3
lahf
mov
jmp
inc
in
jl
mov
sbbl
pop
in
enter
add
xor
pusha
adc
sahf
add
and
push
mov
loope
jmp
pushf
enter
fsubrs
fnstsw
test
inc
lods
mov
sbb
lahf
clc
pusha
sub
ljmp
inc
mov
cmp
adc
test
lret
adc
mov
pop
test
mov
rol
xor
or
stc
mov
faddl
je
out
imull
xor
pop
adc
dec
mov
push
mov
popa
out
or
mov
push
inc
data16
in
add
nop
xchg
jbe
push
or
mov
out
sub
adc
cmp
jmp
adc
mov
fcoms
mov
sbb
dec
push
ret
int3
mov
testl
ljmp
add
in
pop
mov
push
add
rclb
mov
lret
cmp
add
sbb
xchg
inc
or
xchg
or
mov
nop
inc
push
add
jb
mov
cli
jl
jmp
jo
mov
les
in
fsubrl
rorb
notl
int3
mov
aaa
repnz
jo
js
xor
push
shl
push
xor
mov
adc
mov
sub
push
lret
mov
fisttpl
divb
adc
sub
adcl
rcl
or
and
out
lret
inc
fwait
or
mov
inc
inc
cmp
dec
stc
out
mov
clc
fwait
lahf
movsb
loope
add
mov
mov
mov
test
rol
adc
lods
lret
pop
shlb
push
mov
or
jle
jle
jo
lret
cmc
push
sub
iret
or
add
add
adc
rolb
adc
xor
stos
shlb
xchg
cwtl
dec
ret
lret
mov
mov
push
adc
jge
adc
jbe
adc
adc
xchg
in
pop
sbb
inc
lds
push
mov
repnz
hlt
loopne
xor
or
cmpsb
sub
lcall
bnd
imul
sarb
mulb
mov
adc
xchg
sub
lahf
stos
sbb
sbb
dec
mov
pusha
and
popf
les
popf
mov
inc
mov
cltd
sbb
sub
rorb
and
shll
mov
mov
mov
or
inc
push
add
les
xchg
mov
mov
jmp
mov
adc
or
sub
or
es
mov
adc
push
mov
aas
bound
fdivrl
pop
mov
mov
leave
fwait
out
xchg
dec
sub
leave
aas
mov
jl
dec
pop
mov
add
jnp
mov
or
xchg
ja
adc
add
cmp
ljmp
pmulhuw
and
cmp
mov
xor
outsl
push
loopne
sbb
aaa
lahf
into
add
pop
lahf
push
cmp
add
es
pop
push
mov
xchg
jg
push
cli
mov
test
ret
adc
and
mov
notb
dec
cmp
in
xor
jb
sbb
xor
mov
sbb
sbb
sbb
mov
dec
dec
or
aas
dec
inc
movsb
mov
hlt
or
mov
add
mov
mov
lahf
out
add
rclb
rcrb
push
shll
jbe
mov
sahf
andl
js
movsb
jg
das
mov
fists
or
push
mov
cmpsb
loope
in
adc
stos
xchg
ss
ficomps
aad
gs
ret
or
test
rorb
out
mov
inc
xchg
in
addr16
and
in
xchg
or
jp
or
push
les
sbb
inc
inc
push
jecxz
or
mov
in
shr
stc
push
push
das
fs
enter
idivl
mov
xchg
fbstp
ret
push
inc
push
imul
and
cmpsb
mov
xchg
divl
dec
je
push
xor
inc
xor
mov
and
mov
lds
gs
js
pop
push
ret
aaa
and
in
je
fwait
inc
adc
test
ret
fstps
shl
aaa
sbb
fimuls
movb
test
sbb
jnp
gs
mov
mov
xchg
push
xor
rcrb
jno
dec
jbe
cmp
xchg
inc
push
jbe
notl
or
lcall
adc
sub
aaa
ja
add
lock
add
test
sub
cmp
loop
sub
pop
xchg
ret
rcrb
mov
mov
and
pop
or
push
adc
pop
popa
cmpsl
das
add
loopne
lret
adc
adc
out
adc
ret
cld
xlat
in
insl
sahf
adc
sbb
ret
mov
loopne
popf
mov
push
sub
or
push
xor
add
outsb
ror
cmp
stos
cltd
xor
sbb
shl
iret
cmp
sbb
js
mov
int3
or
xchg
imul
xor
sub
push
int
xchg
aas
inc
ret
int3
xchg
incl
pop
test
movsl
xchg
sahf
sub
adc
ljmp
test
shl
out
sbb
lahf
or
mov
call
test
jae
leave
ret
jo
dec
jmp
loope
sbb
mov
ljmp
rolb
xor
out
or
les
mov
pop
jecxz
clc
adc
das
add
daa
sbb
fdivs
mov
aaa
ret
xchg
lret
add
xor
sub
xlat
aaa
xor
or
adc
je
out
dec
pop
push
adc
movq
pusha
mov
add
push
mov
pop
jb
add
frstor
int3
movsb
sbb
inc
mov
mov
iret
push
std
mov
outsl
les
mov
repnz
aas
lret
mov
adc
pop
adc
ljmp
sbb
jmp
hlt
loop
lock
shr
ret
cld
ret
push
sub
mov
cmpsb
hlt
push
outsb
enter
rcll
or
leave
pop
icebp
xor
stc
scas
in
clc
cld
lret
rclb
push
sub
mov
mov
cmp
orl
adc
bound
push
add
fs
lret
bound
sbb
add
xor
out
mov
ljmp
sbb
mov
sbb
mov
and
int3
ss
pop
mov
inc
lahf
call
iret
adc
into
incb
sub
lds
inc
mov
and
ss
xchg
int3
popf
outsb
xor
jp
push
adc
stos
pop
jmp
mov
ss
sub
ret
ret
rcr
scas
add
xor
sbb
fwait
inc
push
push
bound
ljmp
or
imul
inc
gs
dec
lret
lret
int3
arpl
jo
inc
sub
jl
dec
lods
jge
mov
gs
adc
repz
jo
jg
push
pop
ljmp
adc
shrl
popa
out
push
mov
lret
inc
lock
mov
outsl
scas
mov
roll
mov
nop
ror
mov
adc
adc
hlt
sub
roll
inc
scas
sbb
push
or
dec
test
neg
and
mulb
repnz
mov
push
mov
lahf
in
jl
insb
push
scas
xor
enter
fistps
hlt
or
ret
arpl
or
adc
jl
or
push
add
xchg
xchg
movsb
jae
shll
pop
mov
push
fmulp
frstor
lock
jnp
and
inc
sbb
das
popf
add
or
in
icebp
add
or
repnz
es
fcoms
jmp
pop
dec
and
pop
lods
or
or
and
jge
jbe
or
adc
stos
xchg
pop
test
out
push
dec
pusha
mov
xor
xor
or
test
xor
inc
adc
repnz
mov
adcb
cli
push
nop
ret
cmpsl
int3
jmp
xor
sub
jo
iret
call
call
loopne
and
cmp
mov
cwtl
and
sub
add
pop
cmp
clc
rcrl
dec
les
aaa
imul
adc
faddl
mov
jb
ret
jmp
fiadds
int
mull
xchg
ret
jmp
jmp
push
das
mov
sub
mov
mov
push
dec
sbb
add
push
shlb
scas
jl
push
js
push
iret
je
sub
or
dec
push
or
iret
inc
sbb
pop
push
or
pop
rolb
add
jl
bound
movsb
js
xor
scas
adc
or
fildll
int3
scas
cmpsb
mov
mov
sarl
cwtl
lock
adc
or
add
add
rorb
pop
add
int3
or
pop
sbb
mov
push
xchg
mov
xchg
mov
out
xchg
push
in
std
mov
mov
add
mov
cmp
push
mov
je
and
call
cltd
xor
ss
mov
mov
add
jecxz
in
push
xor
xchg
mov
push
or
inc
repnz
inc
ds
adc
mov
fstl
and
es
sbb
push
outsb
rolb
push
sub
adc
mov
popf
insl
test
pop
shll
fldcw
sbb
push
push
add
insb
mov
repnz
pop
and
jae
adc
test
es
and
addr16
sub
sub
in
add
lahf
sbb
add
divl
loop
icebp
or
lea
adc
adc
push
hlt
and
aaa
sbbl
dec
mov
mov
cltd
add
or
sahf
push
add
adc
mov
mov
xor
jae
push
int3
loopne
cs
mov
arpl
rcll
cmp
iret
fnsave
xor
outsl
and
inc
mov
in
inc
test
cld
jb
stos
lock
scas
pop
sbb
stos
add
mov
mov
xchg
adc
shl
repz
test
rorb
add
mov
add
xor
adc
icebp
rorb
ret
out
dec
pop
lcall
lea
loop
enter
ret
outsl
lcall
xor
cmp
or
call
add
lret
pop
add
sti
dec
jne
scas
mov
xchg
cld
nop
sub
cmp
js
dec
add
pop
dec
pop
or
lret
adc
cs
nop
andb
test
adc
lret
ret
add
cmp
sbb
test
adc
cmpb
dec
shl
pop
gs
adc
ss
pushf
xor
hlt
lahf
push
loopne
ret
mov
mov
and
call
int
int
jns
mov
sub
inc
out
hlt
int3
lahf
push
pushf
fnstsw
icebp
loopne
and
cs
nop
adc
mov
mov
fnstsw
adc
adc
fucom
daa
ret
sub
mov
or
pop
sub
arpl
jns
shlb
add
sti
movsb
mov
push
sbbb
lds
roll
and
leave
pop
fisubrl
ds
es
rcr
inc
adc
sbb
add
or
es
decl
dec
adc
add
sbb
and
out
sbb
pop
xor
sbb
dec
les
fwait
jae
jne
lret
jno
push
lods
or
jae
fwait
insb
sbb
out
add
int3
insl
sub
sub
out
xchg
or
je
fisubrs
inc
xchg
mov
shlb
add
nop
push
sub
jbe
aas
rorb
std
and
xor
push
sahf
xchg
sub
mov
pop
mov
xchg
or
pop
ds
das
lret
sub
sub
add
sub
mov
mov
rolb
xlat
scas
sub
push
fmul
cmc
fdivrl
leave
push
nop
sarl
fsin
in
sti
sbb
push
push
addr16
lods
lock
les
add
sub
adc
outsl
cwtl
adc
loop
imul
lock
enter
sbb
sbb
mov
adc
sub
xchg
xor
in
aaa
mov
fwait
xchg
adc
ljmp
ficoml
insb
shr
dec
icebp
int3
adc
mov
dec
hlt
pusha
mul
jg
adc
push
jne
leave
scas
frstor
mov
pop
adc
std
repnz
mov
push
or
xchg
ret
push
hlt
inc
roll
xchg
xlat
ret
mov
aas
mov
shl
lret
inc
or
mov
adc
roll
add
ficomps
pop
xchg
out
out
call
ret
fdivrs
ret
hlt
add
add
lret
xorl
cmpsb
into
das
mov
sub
imul
cli
mov
hlt
loope
mov
or
sub
movsl
push
xor
add
sahf
leave
in
cmp
mov
in
mov
mov
ficomps
ror
sub
and
adc
mov
aad
clc
lret
fwait
int3
and
and
aad
in
lods
lds
sbb
mov
sub
sbb
xchg
fadd
dec
jnp
push
sbb
jp
sbb
negl
mov
add
adc
mov
andb
mov
mov
lret
mov
outsl
pop
imull
mov
adc
push
stos
in
pop
push
cld
mov
pop
imul
mov
loopne
push
push
and
mov
les
lods
cmp
rcr
gs
into
cltd
icebp
pop
xchg
or
lret
arpl
rcrb
sub
mov
adc
lods
pop
es
push
cvtdq2ps
sub
pop
shl
mov
cmp
adc
xor
ljmp
mov
repz
dec
call
out
popf
mov
mov
fisubs
lock
or
cmp
mov
push
or
push
iret
sbb
inc
and
aad
hlt
xlat
lods
cmp
fs
test
ret
rolb
mov
jae
movsl
iret
mov
hlt
mov
aad
jb
mov
sbb
cmp
push
adc
jge
out
lods
das
dec
and
das
ljmp
cld
cli
mov
into
add
ja
cs
jl
dec
bswap
sbb
sub
and
sub
out
xor
in
pop
in
push
jl
xor
repz
fsubl
insl
dec
mov
lret
das
ljmp
push
dec
mov
sub
inc
or
jg
mov
adc
pop
movsl
ret
xor
fsubrs
movsl
rolb
jecxz
cmpl
movsl
mov
andl
addl
inc
and
aam
shl
repnz
mov
fdivrs
mov
cmc
push
inc
out
movsl
push
pop
xor
int
inc
jne
mov
inc
pushf
cmp
test
loopne
jns,pn
push
push
add
and
ret
rolb
imul
decl
sbb
jo
push
in
in
jo
jno
sbb
notl
nop
or
xchg
xor
or
sub
inc
mov
mov
cltd
sub
xchg
mov
sbb
cmp
adc
cmp
xchg
jmp
or
dec
lret
adc
icebp
jae
scas
pop
sbb
shrl
lock
insl
lahf
cmpb
stos
sbb
adc
jns
jl
jne
jecxz
jle
mov
int3
insb
push
jns
dec
mov
jge
lahf
sahf
pop
mov
shl
enter
adc
sub
push
sbb
outsl
push
add
sbb
xchg
outsl
ret
mov
add
add
fsubrl
or
out
xor
fwait
push
push
cmp
iret
in
dec
icebp
aas
mov
inc
enter
sbb
loopne
mov
xchg
sti
push
or
jge
lds
mov
in
jns
push
mov
daa
or
add
out
adc
in
jmp
pushf
lock
push
test
in
jnp
movsb
call
and
shlb
scas
cwtl
lds
sub
xorb
inc
int
adc
inc
xchg
sbb
movsb
lahf
dec
iret
push
enter
fwait
mov
iret
or
scas
mov
aad
js
add
push
ss
out
int3
out
push
paddsw
clc
sub
pop
fucom
sub
sahf
pop
in
div
pop
mov
or
fidivrl
jae
jno
or
push
dec
ss
pop
roll
adc
pop
push
je
nop
pushf
idiv
dec
adc
mov
push
jae
mov
or
insb
test
and
aas
cmpb
cltd
leave
inc
cmp
idivb
leave
call
hlt
pusha
add
dec
loop
ds
xchg
sarb
xchg
stos
lcall
add
pop
dec
mov
insl
sbb
add
sbb
jb
fstp
es
add
inc
out
or
outsb
lock
pusha
lret
stos
nop
negb
push
pop
iret
pop
or
mov
or
loop
and
inc
cs
lea
push
outsb
incb
push
xor
les
add
or
std
dec
sbb
sub
imul
out
inc
xchg
push
adc
mov
jne
or
cmp
add
dec
xlat
rcl
adc
cmp
mov
inc
js
pop
fsubs
sbb
or
or
dec
ret
xor
mov
loop
pop
inc
in
jae
inc
dec
sarl
dec
enter
leave
lahf
jmp
ret
aas
add
jbe
dec
es
or
push
rcl
sub
aaa
or
imul
pop
stos
ja
and
mov
push
pop
loope
mov
xchg
mov
orb
hlt
nop
inc
lahf
leave
cmp
mov
and
jnp
loope
daa
int3
pop
xor
shl
mov
adc
push
push
jns
jl
arpl
mulb
leave
jp
imul
ja
add
sub
push
cmp
ret
test
mov
lret
aam
jl
sarb
mov
fisttps
sub
xrelease
in
or
lods
shlb
shl
adc
hlt
add
cmpsb
test
push
mov
in
clc
and
sub
mov
jo
fistpl
popa
push
ljmp
ret
lahf
lods
push
outsl
sbbl
cmpsl
imul
mov
in
repz
mov
repz
adc
push
in
add
lahf
in
jbe
add
jecxz
mov
sub
ret
arpl
gs
mov
sbb
into
lods
adc
mov
add
js
xchg
call
xor
adc
enter
add
outsl
into
fwait
iret
call
cld
ror
add
mov
pop
inc
jno
adc
sbbb
jns
adc
mov
jb
push
push
int
aad
mov
in
stos
jmp
mov
aaa
test
sar
dec
call
jmp
xchg
xchg
xchg
in
pop
out
pop
or
sub
cmp
xchg
adc
xchg
out
lahf
enter
inc
cmp
or
xchg
out
call
ljmp
push
mov
or
jge
pushf
jecxz
sahf
add
outsb
outsl
xor
incb
inc
repnz
add
adc
shrl
add
shlb
in
lds
mov
or
or
or
add
mov
mov
dec
xchg
ret
push
inc
loopne
insb
add
repz
cmc
mov
push
cli
add
lret
xchg
clc
pushf
sbb
repnz
jmp
shll
bound
leave
add
mov
cltd
out
int
adc
in
scas
aam
cmpsb
push
aaa
sarl
mov
and
xor
nop
testb
lcall
ret
outsl
lret
inc
mov
lahf
sub
mov
sbb
scas
jns
in
leave
xor
sub
mov
jne
lret
xor
cmpsl
lods
imul
out
add
and
out
insl
push
inc
adc
cmc
fisttpll
icebp
pop
pop
sbb
ror
lahf
enter
jns
add
push
inc
or
mov
jns
jo
mov
mov
mov
mov
outsl
ret
ljmp
dec
xor
stc
pop
mov
addl
popa
mov
dec
and
or
jb
jecxz
sbb
sbb
fdivr
adc
repz
arpl
imul
enter
rcrl
xchg
add
pop
add
fildll
movsb
jo
pop
arpl
hlt
add
adc
popf
sub
mov
sbb
aad
dec
mov
les
insl
rcrl
aad
adc
cmpsl
mov
out
nop
cmp
jmp
in
pop
inc
cmp
xchg
sub
or
or
pop
pop
push
daa
mov
pop
mov
mov
add
lret
jg
cli
dec
adc
cmp
sub
inc
cmp
pop
adc
inc
jb
sbb
stc
xchg
xor
xor
or
or
pop
test
rorb
aad
dec
inc
mov
dec
dec
adc
xchg
fisubs
sub
xor
xor
out
shr
test
repnz
repz
sub
dec
inc
out
ljmp
pop
sub
mov
lret
lahf
adc
ljmp
mov
out
repz
pop
mov
or
fisttpl
out
in
jae
adc
stc
inc
push
xchg
sarb
add
or
jmp
mov
cmp
cs
sahf
lret
push
lcall
mov
sub
or
insb
sub
bound
and
xchg
or
or
movb
std
push
clc
les
int3
scas
mov
mov
data16
push
aaa
mov
and
inc
std
sti
sbb
inc
jno
jno
out
inc
push
mov
sub
xchg
add
in
dec
ss
dec
adc
lods
ds
push
cmpsb
jmp
stos
xchg
hlt
ret
mov
adc
fmul
into
push
dec
sub
dec
dec
rorb
imul
pop
jge
fnsave
into
or
fiadds
mov
add
mov
lods
sbb
push
out
push
shlb
in
and
mov
ljmp
inc
push
cmp
mov
and
mov
push
lods
stc
repz
in
mov
mov
lea
inc
aaa
out
rcrl
cmp
ljmp
sbb
mov
sbb
mov
lds
enter
mov
cmp
pop
sbb
fisubrl
icebp
call
push
pop
insb
sub
xlat
ret
pop
inc
pop
add
mov
dec
sbb
nop
sub
gs
mov
sbb
pop
stc
rorb
sbb
inc
lret
pusha
dec
test
xchg
xchg
push
pop
sub
push
aaa
pop
pop
or
out
cmpsb
mov
or
push
mov
jp
fwait
jl
jmp
pop
jo
iret
out
out
js
xor
gs
les
sbb
incl
imul
mov
mov
int3
ljmp
pop
ret
jle
bound
rcr
fidivrs
imul
push
popa
xor
cld
into
es
fcoms
or
dec
int
imul
mov
xlat
outsb
mov
shlb
and
cmpsb
sub
add
mov
push
aas
mov
xor
call
dec
into
rolb
rorb
insb
adc
das
fwait
je
rolb
adc
fwait
push
repnz
or
pop
mov
in
sar
ret
stc
psraw
push
popf
mov
fcmove
out
leave
cli
stos
mov
mov
gs
movsb
xchg
call
sbb
movsb
add
mov
iret
cwtl
mov
nop
clc
or
mov
in
xchg
sub
call
loopne
cmp
test
jns
cmp
jl
test
data16
lods
sti
dec
adc
dec
pop
imul
jecxz
in
or
es
sub
inc
mov
xor
dec
cmc
arpl
cmc
in
mov
mov
jp
mov
sub
push
xchg
shlb
cmp
gs
mov
sbb
mov
mov
pushf
jmp
xchg
test
fxch
pop
lcall
sub
jne
test
rclb
jmp
or
jns
and
cmp
sub
xor
adcl
in
out
aam
sahf
jmp
mov
les
in
mov
fsubl
adc
movsb
adc
cmp
and
aam
or
or
loop
lfs
ds
cmp
pusha
sub
lret
cmc
or
out
xchg
cli
cmpsb
xlat
iret
pop
cmc
insl
dec
hlt
call
adc
gs
xchg
jbe
hlt
lahf
add
add
push
es
xor
movsb
jne
xor
enter
out
subl
push
adc
mov
or
lahf
sub
pop
test
mov
dec
mov
sbb
push
frstor
xor
xor
mov
xor
jno
jmp
adc
add
pop
push
iret
call
mov
or
int
ljmp
fimuls
jmp
std
dec
lds
mov
into
push
aam
sub
dec
inc
out
and
sub
pop
loopne
fstp
add
in
loopne
mov
lea
xor
fistl
mov
push
sbbl
fadds
push
jl
dec
xor
cwtl
imul
cmp
xchg
in
imul
fldt
sbb
ret
decb
and
fnstsw
insb
add
xchg
movsb
pusha
addl
push
ja
lcall
cwtl
popa
jne
sbb
and
cmc
push
lret
in
mov
sub
push
shrb
lods
inc
stos
mov
mov
popf
and
jg
cmp
lahf
push
sbb
int
or
mov
push
dec
roll
sbb
add
adc
pop
and
gs
loope
fstpl
jg
lds
test
pop
aam
dec
xchg
sarb
icebp
mov
jo
roll
add
fst
mov
push
cs
or
push
or
aas
scas
mov
or
xchg
mov
dec
fsts
shl
pop
repnz
lret
adc
inc
jne
mov
adc
xchg
jnp
aam
mov
sahf
mov
loopne
dec
std
or
xor
xlat
pushf
push
mov
out
xchg
mov
rorl
sub
add
and
jecxz
lds
mov
das
fnstenv
repz
sbb
inc
daa
out
in
pop
xor
jmp
jbe
in
cmp
cmc
mov
fwait
push
jb
add
mov
insl
adc
push
cmp
ret
loopne
int
jl
jle
mov
xchg
pop
je
mov
outsb
lcall
inc
jno
xor
xchg
int3
aad
adc
pop
mov
stos
nop
push
jne
cmc
cli
inc
mov
add
mov
data16
ret
adc
fidivs
rorb
pop
cmp
jecxz
sbb
loop
imul
loopne
ret
sbb
out
out
movsl
mov
leave
mov
dec
add
jbe
je
adc
data16
movsb
fildll
jecxz
adc
pop
xchg
inc
mov
add
add
push
outsb
imul
xor
pop
cmpb
popf
and
and
orl
loop
sub
jno
hlt
out
inc
stos
in
push
xor
bound
fldt
push
dec
sub
and
xchg
fisubrl
sub
addr16
mov
lods
and
or
sub
ret
and
insl
in
rcrl
aas
data16
repnz
jne
and
orb
sahf
lret
insb
lret
addr16
sub
jae
shlb
push
cmp
sbbl
xor
dec
loope
ret
scas
adcl
bound
mov
aad
pop
jns
sub
cld
dec
adc
jne
fdivs
scas
clc
sub
pushl
sbb
jns
lcall
jmp
rcrb
call
push
jo
adc
ss
cld
fidivrl
mov
lea
and
lea
xor
mov
fldenv
mov
aam
cmp
sarb
std
out
pushf
bound
xor
mov
add
les
sbb
pop
mov
daa
or
fiadds
adc
sub
lret
scas
sub
outsl
add
pop
repnz
insl
ja
or
and
hlt
movsl
test
cmp
push
rolb
jbe
aad
mov
and
dec
mov
mov
lods
adc
add
loopne
add
iret
hlt
mov
mov
jne
jmp
into
sbb
mov
rcr
adc
movsb
xchg
out
aam
js
in
mov
gs
push
insl
popf
aaa
add
sbb
imul
lahf
lret
hlt
or
mov
js
test
push
call
fistl
push
adcl
adc
inc
in
les
stc
je
je
jb
mov
push
scas
xor
or
clc
adc
popf
ss
push
lcall
movsl
sub
rol
push
mov
and
gs
inc
or
int3
ret
aaa
dec
mov
dec
sbb
aas
cwtl
repnz
ss
movsl
jb
fadds
adcl
or
mov
cmp
sahf
push
add
fwait
es
rorb
shlb
or
in
adc
ret
xchg
and
sbb
mov
push
add
jns
cmpsl
push
adc
xor
mov
push
enter
ljmp
sub
push
jp
leave
and
int3
push
mov
ds
fnsave
sub
adc
and
sbb
xchg
dec
add
mov
les
adc
and
sbb
adc
mov
and
dec
mov
inc
imul
xlat
pushf
fnstenv
in
insb
clc
ror
pinsrw
out
pop
scas
add
ss
fcompl
xchg
ret
adc
lret
js
add
lods
mov
adc
rol
pop
or
adc
lock
jmp
lock
dec
into
out
mov
jb
pusha
jns
add
add
fisttpll
push
push
mov
movsb
mov
xor
pushw
mov
call
outsl
add
pusha
mov
mulb
inc
jle
lret
inc
stc
xchg
pusha
call
cs
jns
lahf
into
xor
adc
mov
cmp
shrl
mov
jmp
or
ret
adc
jns
xchg
adc
jns
mov
dec
dec
jmp
test
loop
push
mov
insb
xchg
inc
sarb
test
dec
adc
mov
ror
call
in
push
cmp
pop
hlt
into
push
cmpb
sub
cmp
or
rcrb
aam
push
ja
jg
std
lods
nop
movsl
inc
iret
test
adc
xor
lret
xlat
dec
or
mov
arpl
and
hlt
cs
nop
or
mov
mov
cmp
adc
loop
or
mov
out
or
loopne
mov
xor
fidivrs
out
xor
imul
ret
sti
decl
mov
dec
mov
sub
push
nop
jbe
or
mov
dec
sub
add
fidivrs
in
mov
repnz
repnz
pushf
push
and
push
in
xor
inc
imul
iret
loope
iret
hlt
inc
loop
adc
fs
sti
inc
pop
or
cltd
adcb
data16
or
repnz
sub
bound
jg
cltd
sub
cmp
sub
xor
lods
sbb
add
push
jg
push
jle
sbb
sbb
clc
sub
or
xchg
lret
push
in
loope
repnz
das
movsb
jg
jae
ret
ret
jb
loopne
xchg
and
mov
mov
mov
ja
ret
mov
fcoml
push
mov
cmc
adc
addr16
or
lcall
out
lea
lds
sub
adc
xor
add
xor
or
mov
pop
clc
insl
mov
fimull
push
xchg
lret
add
ljmp
cmp
inc
call
jecxz
out
int3
insb
adc
test
fisttpll
sbb
xor
lods
jo
sbb
add
pusha
push
jle
dec
sbb
adc
dec
repz
jb
sub
inc
dec
inc
inc
jmp
enter
add
repz
push
popf
mov
adc
sub
push
sbb
es
mov
sbb
sub
ljmp
std
or
movsl
lcall
adc
or
mov
fdivrp
js
push
add
rolb
pop
or
mov
mov
in
les
filds
pop
adc
out
rcll
stc
insl
movsb
push
shlb
fdivs
test
loopne
xchg
das
fistpll
ret
add
push
xor
cli
pop
nop
xchg
inc
es
pop
lahf
mov
outsl
scas
mov
movsb
add
mov
mov
lahf
pop
fisubrl
aas
push
lock
jns
add
fdivl
dec
into
in
xchg
fnstcw
shlb
jnp
and
repnz
hlt
and
rclb
inc
mov
inc
xchg
push
jno
rorl
inc
fimull
jecxz
nop
and
mov
mov
rcll
inc
int3
loop
jge
xchg
arpl
mov
sbb
out
mov
or
jo
in
aad
jne
in
xchg
je
xlat
sub
and
lahf
mov
adc
notl
insl
sbb
ret
pop
js
sbb
add
es
dec
rorl
fucom
out
dec
sbb
jp
imull
inc
xchg
push
pusha
mov
mov
or
mov
xchg
adc
xchg
xlat
mov
mov
sahf
fxch
fs
incl
js
loopne
push
imul
fmul
pusha
lret
in
aam
fcmovnu
lods
mov
clc
jne
inc
and
test
xor
or
int3
fldl
aas
add
mov
lock
rorl
mov
aaa
xchg
test
testb
push
jmp
mov
pushf
cmpsb
adc
sub
stc
xor
sub
psraw
add
cmp
inc
in
stos
aad
inc
xchg
test
adcl
insb
push
in
lds
add
out
out
inc
jbe
jbe
mov
xchg
adc
xchg
inc
inc
and
xchg
jge
test
inc
cmp
and
fs
aad
movsb
arpl
sbb
mov
shl
sbb
add
or
fldl
or
test
fisubrl
jb
mov
pop
mov
mov
push
stos
mov
movsb
shl
mov
xchg
hlt
sub
inc
mov
cmp
aaa
imul
addr16
aad
sti
call
ss
cmpb
out
and
enter
stos
jl
fimuls
cmpsl
xor
icebp
shrb
fsubrl
mov
jmp
jp
les
stos
sub
sub
enter
ret
pop
pop
mov
rclb
in
sub
mov
hlt
scas
aam
js
outsl
inc
sbb
add
sub
xlat
mov
and
add
sbb
lods
rclb
or
add
adc
pop
or
es
sub
add
movsl
iret
rcrb
rclb
in
stos
loopne
add
xor
int3
cmp
ret
ret
mov
mov
lds
shlb
fldln2
mov
xor
aad
pop
ficoml
push
cmp
scas
mov
shl
lods
fucom
inc
in
sub
mulb
pop
xchg
mov
test
movsl
rcrb
decl
dec
xchg
popf
or
cmp
or
test
or
aas
inc
sarb
cltd
xchg
jg
repnz
dec
adc
pop
lea
dec
cmc
push
adc
sbb
mov
out
icebp
cmp
sub
mov
jmp
cmp
fadd
outsl
xchg
imul
cmp
inc
sub
movsb
shlb
xchg
sub
rclb
fdivp
bound
nop
sahf
pop
xor
mov
clc
mov
add
add
adc
cmp
out
cmp
add
sar
sub
xchg
cmc
addr16
add
shl
arpl
sbb
arpl
or
sub
repz
hlt
adc
sub
aam
push
xor
mov
popa
adc
movsb
sub
push
push
mov
xor
or
icebp
mov
xor
adc
mov
insb
xchg
cmp
pop
cmp
cmp
sbb
outsb
adc
cmc
mov
xchg
jp
or
cmp
enter
ret
or
in
adc
ss
repz
adc
cmc
xchg
jp
pop
scas
fiaddl
pop
mov
fidivl
aad
hlt
ss
dec
sbb
sbb
ss
adc
sbb
dec
cmp
lea
test
pushf
cld
dec
sub
mull
test
jge
out
sbb
scas
push
sbb
insb
cli
xchg
iret
scas
dec
xor
push
mov
in
ret
sbb
push
daa
inc
out
out
nop
push
mov
add
push
xor
inc
and
xchg
hlt
push
aaa
movsb
xor
or
inc
stc
or
mov
je
cli
dec
lahf
push
pop
cmpsb
mov
xlat
push
arpl
icebp
sbb
or
lahf
psllq
cld
out
xchg
rol
and
and
push
sbb
je
insb
pop
and
sub
inc
dec
push
lret
icebp
outsl
jg
push
js
add
repz
mov
add
scas
data16
mov
fists
hlt
in
pop
call
dec
push
adc
add
shl
sub
loopne
jb
cmc
xor
sbb
or
pop
add
xchg
sbb
fdivrs
call
sahf
cli
jo
or
ds
mov
add
xchg
out
out
gs
mov
mov
out
fisttpll
cmp
push
xchg
inc
jg
xchg
xor
push
cwtl
add
cld
pushl
mov
fimull
dec
out
into
xchg
mov
jbe
stc
or
jno
les
sub
aam
ljmp
jg
add
insb
xchg
jge
dec
into
clc
inc
popa
fidivs
aaa
test
xchg
cmp
mov
mov
push
or
lods
in
fs
fldenv
hlt
push
jbe
jns
sbb
dec
add
adc
and
movsb
lea
int
and
or
sub
pop
xor
inc
xchg
in
mov
or
mov
jb
add
sbb
xchg
nop
shrb
mov
mov
roll
xorl
sub
jno
in
add
mov
addr16
andb
aam
movsb
insb
sahf
xor
jecxz
insl
push
ja
in
lods
sub
lret
test
cmp
sub
loope
sarb
movsb
mov
loope
mov
jge
push
push
cmc
jle
push
stos
add
mov
cmp
out
xor
xor
fildll
adc
fs
sub
jl
cmpsl
iret
or
sarb
test
or
sub
scas
test
sbb
clc
ljmp
cld
je
lods
fcoml
aam
outsl
or
pop
fs
mov
push
out
sbb
push
add
jbe
es
lahf
or
stc
xchg
push
test
fstl
cmpsl
xchg
dec
sub
adc
sbb
shrb
faddl
fidivrs
out
sbbl
adc
add
out
nop
ret
mov
sbb
stc
inc
push
insb
es
add
jl
scas
ds
fdivs
clc
dec
imul
push
stos
fisttpl
mov
jmp
jo
je
andb
or
js
faddp
ret
push
inc
or
mov
es
sahf
enter
xchg
inc
out
lea
cltd
mov
sti
pop
fwait
xor
xor
inc
and
outsl
sbb
test
test
and
insl
mov
pop
jl
shll
xor
mov
clc
push
cmpb
in
sub
loope
ret
push
add
les
inc
cmpsl
adc
repz
lods
add
fldl
test
cmpsb
cwtl
xor
pop
sbbl
dec
xor
mov
push
hlt
mov
ret
loope
mov
stos
out
call
aam
stc
and
sbb
jmp
jno
sbb
ficomps
mov
adc
cltd
jae
cld
sub
add
movsb
lock
imul
cmp
mov
mulb
xchg
pop
push
rolb
mov
mov
adc
ffree
and
jo
int3
movsl
ret
and
adc
mov
sub
mov
lods
dec
hlt
adc
cltd
xor
jbe
push
leave
jne
rclb
mov
fnstsw
jp
jmp
or
jnp
lds
jmp
insl
imul
mov
adc
jmp
jl
dec
jne
xlat
fisubrl
push
test
sahf
scas
sub
pop
mov
adc
or
stc
in
xchg
cvttps2pi
mov
xor
push
xchg
xchg
in
ja
inc
inc
out
adc
pusha
xchg
inc
xchg
sub
aad
inc
int3
rclb
sub
push
inc
stos
add
pop
repnz
push
sub
ret
lret
mov
jae
jnp
icebp
xor
ror
adc
jmp
or
mov
aam
sbb
imul
jnp
out
adc
sar
mov
repz
fnstenv
sbb
into
inc
push
pop
push
xor
fwait
inc
lods
push
test
or
lea
mov
inc
adc
xchg
test
jb
inc
imul
std
mov
mov
pushf
or
addr16
adc
push
data16
and
or
stc
dec
test
and
xlat
cmp
mov
addl
xor
xlat
sahf
ret
inc
jle
or
adc
je
rcrl
dec
or
mov
push
mov
loope
sub
out
ret
test
decb
or
bound
sbb
testb
cmpsb
push
push
lret
xor
stc
inc
jbe
push
nop
dec
and
xor
loope
scas
add
or
sub
pop
stos
jnp
stc
shl
lods
push
loope
jg
ss
push
sbb
adc
and
shrb
in
push
roll
fimull
push
or
sahf
out
mov
push
adc
icebp
or
lods
adc
jecxz
pop
insl
cmp
adc
and
aam
int
and
inc
mulb
xchg
int
movsl
add
lea
xchg
int3
mov
and
insl
inc
push
adc
call
cmpsb
adc
add
sub
in
add
ljmp
ret
loopne
sti
in
cld
aad
mov
sub
fnstenv
sbb
mov
adc
cmp
xchg
rclb
ret
sub
cmp
cmp
fdivrp
sbb
add
sub
and
and
jbe
add
xor
ja
lret
ljmp
and
sbb
or
adc
cmpb
jne
repz
mov
or
mov
roll
or
sub
push
andl
or
dec
mov
sub
mov
sub
add
mov
decb
pop
scas
mov
add
ljmp
add
out
shl
cwtl
xor
mov
sub
pop
fs
sub
fmuls
shrl
sbb
push
aad
aad
dec
loopne
pushf
xchg
fstpl
mov
mov
clc
lock
xchg
dec
add
sub
inc
shll
pop
int
xchg
or
adc
mov
pushf
push
addr16
push
loop
movsb
add
repnz
add
test
bound
out
adc
call
sub
xor
bound
inc
lret
cmp
gs
ja
out
int3
repz
bound
cmc
dec
xor
and
add
into
shr
jl
lea
je
xchg
xor
jg
push
xor
hlt
in
jns
or
cmp
mov
adc
push
rsqrtps
adc
adc
lea
or
enter
flds
jne
adc
mov
ret
pusha
jmp
mov
and
sbb
addr16
add
loop
fisubrl
inc
in
inc
cmp
in
adc
adc
cmp
pop
jl
adc
sub
adc
push
hlt
push
call
in
xor
add
and
jle
les
subl
js
mov
adc
add
js
sbb
adc
data16
or
cli
push
inc
mov
sub
pop
testl
or
or
mov
cmp
cli
pop
aam
and
pop
imul
shll
jle
adc
imulb
add
cmp
nop
lods
gs
sub
pop
mov
repnz
adc
or
jns
fucomip
addr16
add
aas
add
or
lcall
imul
or
sbb
push
jns
push
das
or
xor
and
cmp
push
mov
sbb
and
add
fisubrs
sub
repnz
adc
lods
inc
dec
ret
daa
outsl
inc
ss
mov
sub
dec
xor
mov
movsl
lret
pop
leave
xorb
xchg
push
or
cmp
mov
jmp
mov
inc
pop
sub
ret
add
fidivrs
mov
mov
cmp
mov
incl
or
sub
and
js
imul
scas
in
and
imul
push
inc
movsb
mov
ds
mov
cmp
cmp
jg
rcll
lods
add
test
dec
push
cmp
icebp
dec
xor
mov
and
test
dec
pop
mov
mov
test
push
lahf
repz
push
lcall
adc
pop
push
mov
mov
fs
les
lret
mov
xlat
sahf
xchg
hlt
lea
jnp
push
bswap
cli
lret
dec
jo
inc
push
clc
jecxz
std
sbb
cmp
dec
push
inc
or
xor
pop
fsubrp
lahf
add
mov
mov
loope
in
es
xchg
aad
add
cmp
movsb
sahf
mov
rorl
mov
les
enter
roll
outsl
push
hlt
add
or
xchg
scas
xlat
add
and
test
orb
dec
lahf
sbb
or
cmp
or
sbb
sbb
sub
pop
int3
push
xor
in
cmpsb
or
testb
cwtl
into
or
fsubrp
roll
or
or
jmp
adc
clc
adc
inc
clc
int
stos
cltd
sbb
inc
inc
cmp
add
jl
outsb
ss
sub
push
cld
push
push
rclb
fdivr
stos
mov
push
or
mov
ret
scas
mov
popl
in
jp
inc
into
lea
loop
jbe
lcall
push
xchg
add
adc
mov
lahf
loop
jge
hlt
dec
stos
adc
enter
jnp
test
xor
les
mov
pop
in
adc
push
rorb
in
and
hlt
sti
aaa
sub
jo
mov
adc
clc
xchg
inc
add
mov
push
push
jmp
adc
jp
cltd
push
sarb
test
or
test
scas
mov
jns
mov
xchg
loop
adc
loopne
cmpsl
jmp
or
and
pushf
outsb
inc
test
push
or
mov
iret
add
clc
xchg
xor
int3
mov
imul
jnp
inc
xor
jg
jp
or
add
enter
push
sbb
adc
outsb
dec
push
sbb
push
or
in
aad
push
in
push
xchg
outsb
js
jb
int
add
in
dec
sahf
cmp
mov
mov
lods
out
sarl
add
into
xchg
pop
or
xchg
hlt
ret
xor
push
or
lock
xchg
repz
xchg
data16
negl
jl
inc
xchg
aam
mov
popa
mov
into
xor
arpl
xor
adc
mov
dec
or
mov
sbb
addb
xor
lds
push
xchg
cmp
add
and
mov
jbe
ret
adc
les
and
push
xchg
dec
lods
adc
popa
lock
jne
int
sahf
cmp
jecxz
shlb
mov
mov
sbb
inc
adc
in
adc
sbb
sti
mov
ss
pop
ds
xchg
adc
pop
or
mov
inc
dec
mov
jo
rclb
mov
push
push
jle
fs
pop
xor
push
sub
into
xchg
dec
jae
shl
cmc
jl
and
push
out
sbb
fwait
or
in
pop
add
andb
mov
in
prefetch
repnz
xchg
sub
xchg
fsub
add
out
or
sbb
call
push
lret
fcompl
push
les
xchg
test
stc
push
in
mov
cmp
mov
pop
add
or
or
imul
ds
scas
call
repnz
push
dec
fs
add
in
nop
mov
dec
xorl
push
adc
sub
movsl
adc
sub
data16
cmp
cmp
stos
add
in
and
ja
cmp
mov
mov
hlt
pop
les
mov
in
and
xchg
mov
or
gs
jmp
and
dec
add
adc
sub
xor
or
mov
imul
pop
aad
fsts
jmp
fnsave
pop
rorb
mov
inc
sbb
adc
and
push
sbb
or
ljmp
lea
ss
dec
xor
shl
dec
push
rorb
pop
sub
fstpl
fnsave
mov
in
stos
xor
daa
loope
and
ret
inc
or
or
add
and
test
out
outsb
lahf
cmp
jl
orb
xchg
addr16
dec
lds
out
stos
jmp
cmpb
add
xor
fistps
mov
adc
mov
jmp
mov
mov
nopl
or
xchg
push
xlat
push
sbb
inc
enter
test
ret
call
les
push
cwtl
pop
aam
sub
add
add
stos
push
xchg
ret
cmp
fsubrl
xchg
orb
movsb
mov
mov
cltd
cwtl
icebp
clc
add
push
gs
les
mov
jno
ja
sub
add
faddp
push
fisubrl
cli
jle
xchg
fs
jmp
gs
cli
lds
inc
fmuls
mov
rcr
xor
mov
cmp
into
add
mov
xchg
adc
adc
pop
jbe
sbb
pop
ljmp
sbb
xchg
or
fnstcw
bound
enter
push
adc
ss
jmp
aam
push
xchg
pop
push
out
mov
sbb
insb
jb
or
mov
xchg
lea
mov
mov
fisttpl
inc
out
popa
frndint
stos
sbb
dec
syscall
push
add
mov
addr16
or
adc
cmp
nop
and
adc
push
jnp
dec
insl
inc
push
jnp
mov
into
cmp
sarb
stos
xchg
adc
push
xor
sahf
cmpsb
data16
sub
cld
adc
add
daa
inc
out
orb
adc
out
jns
loope
mov
add
jmp
adc
push
jo
push
push
jne
jae
add
adc
add
fisttps
adc
sub
mov
iret
mov
repz
das
shl
adc
enter
scas
cld
inc
push
fwait
leave
stos
inc
mov
cwtl
data16
ret
loope
and
mov
loope
sti
sbb
paddusw
bnd
mov
lods
xor
movsb
mov
mov
cmp
ret
in
lret
xchg
cmp
inc
je
fnsave
jno
cmp
mov
add
and
sarb
cmp
mov
cmp
sbb
lahf
jo
test
sbb
cmp
cmp
xchg
cmp
adc
dec
adc
imul
sbb
pop
std
je
lahf
ljmp
cmp
mov
aad
cmpsb
and
mov
mov
lahf
outsl
popl
mov
add
popa
pop
xor
sub
ss
cmpsb
add
add
nop
push
adc
aad
fdiv
jecxz
xchg
aad
sbb
ret
push
movsb
pushf
inc
les
int3
mov
or
and
xchg
pop
setae
xchg
add
sub
bound
xchg
test
push
cmpsl
pop
add
je
stos
or
hlt
popf
push
mov
in
mov
les
stos
in
cli
jno
xchg
in
movsl
rcr
mov
sbb
push
or
cli
or
roll
dec
lahf
and
outsl
adc
ljmp
push
xchg
push
int3
in
jbe
daa
fdivs
lods
call
and
cmp
adc
mov
mov
popf
jne
sti
mov
inc
leave
adc
sub
push
in
push
jge
loop
or
sub
loop
push
add
sub
mov
int
cwtl
push
bound
shr
add
sub
xchg
adc
ret
mov
and
xor
dec
adc
mov
jae
push
sub
mov
bound
fadd
lds
push
ss
mov
mov
aam
ds
leave
lds
push
push
fisubrs
mov
or
mov
popf
add
push
or
sub
inc
xchg
or
jnp
bnd
and
lds
jo
jo
cmp
xchg
pop
pop
in
mov
xchg
adc
sbb
sbb
imul
fimuls
push
sbb
adc
loopne
or
in
enter
sub
and
cmp
into
push
mov
sub
and
jmp
mov
jae
out
mov
lock
call
ret
loop
pop
mov
in
cmp
test
fsubrp
inc
arpl
mov
inc
jecxz
xchg
in
xchg
and
xchg
dec
pop
lret
out
imul
lea
mov
je
push
popa
ja
add
mov
int
sub
jl
jp
xor
into
sub
cwtl
fldcw
push
mov
cmp
daa
sub
lock
lahf
in
mov
adcl
dec
js
or
mov
adc
lahf
dec
or
cmp
outsl
andb
push
sub
inc
pusha
sbb
je
nop
aam
mov
jecxz
push
addr16
or
or
xor
sahf
cmp
sbb
int3
jno
dec
into
enter
pop
les
stos
loopne
inc
aad
sbb
push
repz
xchg
fldl
into
call
aad
dec
hlt
xchg
lock
subb
out
xchg
jl
add
in
mov
pop
cmp
push
mov
loopne
push
imul
sub
cld
pop
mov
and
rcl
movb
adc
jle
jmp
shrb
loopne
push
sub
cmp
repnz
push
clc
add
pop
adc
push
lock
adc
add
jo
test
nop
outsb
cwtl
repnz
mov
enter
test
sub
test
mov
stc
add
xchg
mov
fwait
sub
cld
sub
mov
push
in
xor
jae
and
mov
or
sbb
jge
into
or
jge
push
rsm
iret
xor
sbb
add
xchg
adc
xor
mov
cmp
scas
and
inc
or
push
fcompl
mov
daa
adc
dec
andb
lahf
pop
mov
jne
pop
cmp
jl,pt
fwait
lock
fidivrs
xor
xchg
push
neg
xorl
into
aad
xchg
cmpb
shl
add
add
int3
sub
loope
shll
imull
add
adc
sbb
xchg
mov
idivb
test
push
xchg
fdivl
lret
jg
xor
cmp
jmp
hlt
lret
arpl
xor
out
pushf
push
dec
stos
movsb
adc
xabort
enter
or
ja
sbb
xor
shll
sub
sub
mov
or
mov
cmp
sarb
mov
push
test
ja
push
loopne
arpl
add
push
or
rclb
inc
add
movsb
test
sbbb
inc
mov
sub
fistpl
ret
xchg
outsl
lret
lea
or
sub
sub
lcall
xchg
sti
xchg
add
cld
adc
sub
dec
jmp
in
or
out
cld
inc
pusha
inc
xchg
lods
mov
jno
cmp
mov
cmpsl
call
add
jb
enter
add
cmp
hlt
add
mov
add
leave
pushf
or
or
mov
mov
aaa
hlt
cwtl
sub
inc
fcomp
inc
pushf
sbb
stc
xor
mov
lahf
fistps
aad
dec
adcb
or
sub
or
test
xchg
sub
icebp
mov
and
ret
int3
stos
pop
sbb
sbb
ljmp
sahf
xchg
push
sbb
sub
in
les
mov
pushf
xchg
inc
divl
or
mov
mov
sub
cmpsb
mov
test
push
jle
test
scas
dec
add
pop
rorb
dec
add
lret
mov
outsb
mov
mov
mov
aam
sub
push
mov
fidivrl
pop
adc
aam
cmp
les
call
stos
je
cmp
jl
xchg
dec
push
pop
xlat
bound
add
out
incl
xchg
push
jg
cmp
add
adc
adc
adc
aaa
repnz
mov
scas
outsl
test
mov
sbb
mov
enter
dec
dec
inc
sub
out
stos
or
dec
jmp
repz
adc
mov
or
call
push
cli
jmp
in
repz
jae
call
in
ret
cmp
push
lock
ss
hlt
les
popf
lret
and
xorb
xchg
rcrb
roll
fisttps
out
and
rolb
ret
inc
in
pop
das
and
nop
sub
add
movsb
mov
test
push
jg
jmp
mov
inc
push
loope
xchg
add
push
xorb
cmpsl
adc
mov
sub
jp
sahf
mov
mov
mov
nop
add
xchg
push
push
ja
mov
mov
insl
pop
stos
ret
lar
or
mov
sub
fucomi
jns
test
or
push
push
sbb
mov
push
jbe
out
lock
fld
pop
or
call
sub
frstpm(287
lds
pop
out
lret
bound
lahf
daa
mov
jmp
out
rcrb
nop
es
adc
aad
or
push
loopne
shll
cmpb
iret
aam
mov
mov
push
xor
jb
sub
push
stos
pop
push
enter
cvttps2pi
rolb
push
lret
and
nop
test
sub
inc
pop
xor
push
movsl
sarl
loope
hlt
jne
ret
sahf
aas
insb
or
test
int3
or
dec
sub
test
test
ret
jg
xorl
movb
and
int
lret
inc
jae
in
nop
dec
sbb
cltd
sbb
fs
xchg
mov
call
mull
adc
jge
subb
shrb
add
xchg
scas
daa
fwait
push
cwtl
xchg
or
jge
push
pusha
sub
pop
adc
mov
push
in
je
inc
xchg
adc
and
inc
push
icebp
adc
push
xchg
add
sti
jb
mov
add
jo
cmp
mov
push
xchg
push
psubq
sbb
or
push
hlt
fisttpll
inc
clc
pop
jl
hlt
or
nop
rcrb
inc
jo
dec
add
sahf
adc
sbb
add
mov
scas
outsl
xor
dec
in
mov
out
adc
ds
mov
lock
sbb
scas
push
lock
fstpt
push
xchg
pop
js
or
ficoml
push
insb
adc
add
pusha
xor
pop
mov
add
leave
add
mov
and
pop
jg
inc
xor
imul
add
stos
add
pop
push
push
jns
mov
pusha
test
lcall
sbbb
push
shl
inc
sti
mov
inc
or
stos
test
hlt
enter
sbb
mov
xor
xor
sub
cld
sub
lods
cltd
nop
lret
les
popf
sub
mov
sub
movsb
rclb
sub
lret
stos
sub
jg
sub
in
sahf
aad
lds
pusha
jnp
push
add
mov
or
dec
loopne
lahf
sbb
lcall
cmp
cli
adc
lds
enter
sub
rcrl
bound
mov
inc
test
push
mov
mov
out
out
add
fcomip
inc
int3
sbb
negl
jle
gs
imul
adc
mov
ficoml
xchg
sbbb
push
xor
xor
repz
adc
add
out
stos
adc
push
push
rcrb
mov
jae
sub
lret
out
and
add
push
lahf
ds
dec
xor
cmp
pop
rolb
xchg
les
mov
in
cmp
sarb
push
imul
or
mov
inc
sbb
jge
and
xor
adc
lahf
add
push
test
arpl
stos
dec
pop
jl
mov
nop
icebp
adcl
stos
rclb
dec
push
dec
js
out
int
stc
sub
push
lcall
rorb
rolb
fdivr
mov
clc
aad
jbe
stos
pop
nop
je
test
mov
push
add
pop
fcmove
mov
sbb
stos
shrb
enter
les
adc
lahf
adc
sub
mov
pop
adc
mov
mov
push
adc
add
dec
out
shrb
adc
loope
push
push
lret
push
scas
lock
cmp
add
and
pop
stos
sub
imul
imul
call
mov
dec
or
pop
and
mov
push
jge
testl
lahf
inc
cmpsb
mov
or
cld
loop
or
sbb
push
add
push
pop
or
imul
mov
lock
add
mov
outsl
add
jp
dec
nop
xchg
push
scas
or
popa
rorl
lret
mov
cld
or
stos
lock
loop
jmp
pop
sub
inc
jnp
add
push
das
push
adc
adc
insb
jge
xlat
and
in
mov
push
jl
outsb
adc
and
or
pop
arpl
jnp
jnp
add
mov
cmpl
mov
int3
insb
loop
add
inc
mov
int3
adc
fisttpll
fstps
xchg
sub
sub
cmpsb
sbb
sti
leave
leave
ficomps
in
cmp
xor
mov
cltd
adc
ficomps
lock
loopne
or
lret
adc
or
jb
sbb
scas
sti
push
push
push
ljmp
or
addr16
jnp
dec
adc
idivl
mov
pop
incl
mov
push
pop
mov
mov
adc
movsl
rclb
xchg
daa
xchg
adc
shlb
stos
adc
fsubrs
ja
adc
add
out
shrb
mov
dec
lret
mov
in
adc
in
add
pop
add
push
fwait
addb
call
xor
inc
loop
mov
sub
xor
mov
add
iret
cmp
les
adc
and
and
cs
sub
stos
mov
mov
inc
idiv
dec
out
or
pop
add
sub
rcrb
test
and
push
int
aaa
dec
in
adc
in
roll
xchg
xor
mov
jae
sub
mov
and
scas
fs
mov
loop
adc
dec
rcrl
xchg
bound
loop
shrl
xor
adc
fisttps
and
aad
dec
sub
std
push
xor
movsl
movsb
adc
mov
out
out
mov
mov
mov
and
adc
ret
inc
jno
shlb
sub
xchg
iret
rorb
leave
jl
fdivrl
iret
loopne
push
xor
add
mov
jae
add
fcmovu
jl
int3
loope,pt
add
std
or
jo
pop
into
je
shrb
push
add
add
sbb
push
mov
push
or
adc
ficomps
mov
xchg
les
popf
call
inc
pop
cmpsl
or
dec
xor
sahf
push
mov
push
jns
and
cmpsl
outsl
sbb
adc
mov
mov
push
fcoml
sbb
xlat
adc
ja
or
sub
out
sbb
in
wrmsr
add
or
mov
loope
test
adc
inc
xchg
and
pop
or
push
mov
push
cmpsl
aaa
notl
xchg
negb
sbb
mov
in
in
or
or
gs
pop
sub
lods
add
and
and
cmp
jmp
jecxz
pop
sub
mov
mov
loop
int3
inc
xchg
adc
add
lahf
pop
movaps
xchg
out
shl
sub
jae
jmp
adc
xor
pop
fs
les
idiv
or
sub
dec
xor
iret
sbb
dec
cmp
mov
shll
das
adc
adc
icebp
and
jbe
push
mov
sub
sub
add
popf
jmp
iret
lock
push
xor
mov
in
add
push
mov
divl
enter
xor
adc
loopne
jp
xchg
cld
mov
test
add
jno
add
rcll
lock
movsb
jae
test
shll
jmp
cli
fstps
jne
cwtl
sbb
sub
lods
xor
out
fstpt
mov
inc
or
or
call
mov
jno
clc
xchg
fsubl
fcoml
or
push
fld
in
cmpl
gs
out
pop
and
mov
test
lea
dec
adc
mov
xchg
andb
mov
mov
fstpt
scas
push
or
or
hlt
and
sub
push
mov
push
xorb
dec
or
pop
add
cli
sbb
loopne
cmp
mov
js
mov
ljmp
int
mov
mov
jl
hlt
lcall
das
and
mov
ds
lods
add
cmp
xchg
mov
lahf
jecxz
cmp
or
mov
fwait
insb
and
sub
incl
call
jge
rclb
push
mov
jb
jge
movlhps
lahf
and
sbb
mov
dec
jle
mov
je
jecxz
sub
mov
sub
xor
cltd
test
test
sbb
dec
sub
call
mov
add
pop
por
or
xor
in
xchg
loope
aad
mov
dec
loop
pinsrw
aad
lret
sbb
pop
mov
movsb
jbe
pop
or
mov
test
shll
mov
pshufw
mov
pop
flds
xorl
mov
inc
dec
dec
test
dec
test
or
stos
add
add
repnz
sarl
sarb
add
cmc
in
mov
mov
cmp
lods
sbb
repnz
mov
and
or
cmp
mov
sub
pop
jge
sub
shl
and
pop
jmp
sbb
shrb
cld
ljmp
push
jle
mul
out
sbb
inc
lock
push
mov
sbb
add
or
je
mov
adc
loopne
or
push
sub
lcall
out
sbb
stos
inc
xor
ljmp
mull
test
add
lods
outsl
dec
jnp
repz
gs
fucomp
push
jb
sub
fmull
orb
and
ljmp
xchg
mov
sbb
loopne
or
jmp
in
repnz
pop
xchg
and
insl
js
enter
sub
in
sub
mov
mov
xor
fsubp
add
pop
lods
into
in
mov
loopne
sbb
xchg
dec
mov
cld
mov
push
xchg
xor
fwait
mov
dec
pusha
int3
insb
clc
sarb
nop
add
jmp
hlt
push
dec
mov
rcrl
mov
movsb
sbb
add
inc
mov
cmp
xchg
jl
push
fisubs
dec
dec
sub
das
pushl
dec
and
push
pushf
push
mov
scas
cmc
push
test
add
dec
sub
dec
lret
inc
mov
xchg
inc
test
clc
dec
jns
clc
sub
pop
sub
push
adc
sub
mov
jge
adc
jge
stos
test
in
incb
mov
frstor
pop
mov
mov
mov
je
ds
add
mov
scas
push
and
iret
add
adc
mov
cmp
out
cmp
dec
jne
ja
sub
imul
adc
jmp
push
cmp
sub
add
stos
push
push
push
mov
mov
push
mov
fisubrs
lods
shl
inc
sub
cmp
fs
scas
xchg
mov
mov
shlb
or
aaa
mov
cld
rorb
or
and
sbb
sti
lahf
dec
int3
or
sub
pop
push
push
mov
sahf
mov
aam
sub
push
sub
cmovns
jb
das
push
jmp
jb
in
jp
inc
syscall
lds
or
dec
lock
dec
ds
pop
mov
or
arpl
outsb
test
inc
jae
fimuls
adc
outsb
pop
scas
or
mov
fsubs
xchg
in
add
out
dec
xchg
jae
xchg
fcoml
test
nop
gs
pop
ret
mov
lahf
cld
jecxz
add
mov
mov
lds
pop
dec
mov
push
inc
push
fistpl
shrb
jge
inc
push
or
std
and
icebp
sub
movsb
cmp
cld
or
sub
mov
or
cmp
ss
mov
sbb
fistl
mov
movsb
xor
int3
and
dec
cmp
pushf
dec
sbb
lods
pushf
ja
lcall
jmp
xor
xchg
adc
rep
mov
ret
das
loop
test
dec
loop
mov
nop
hlt
pop
or
mov
insb
mov
adc
inc
movsl
jg
xchg
stos
pushf
cmp
pop
fadds
inc
jne
cmp
fiaddl
push
cld
adc
or
pushf
jae
or
jle
mov
hlt
gs
test
popf
mov
jmp
test
shrl
nop
into
loopne
push
jne
sbb
cmc
leave
fisttps
mov
int3
sub
mov
adc
adc
in
or
fdivl
jb
enter
dec
push
ljmp
loop
inc
or
adc
mov
mov
gs
jmp
lret
and
mov
int
ja
add
sub
inc
shrb
shl
in
dec
mov
push
jo
jge
xchg
int3
add
adc
out
push
rorl
or
adc
rcrb
push
lahf
out
fxam
movsb
and
out
aaa
xor
ds
mov
in
mov
add
fmulp
imul
rcl
mov
lahf
sbb
mov
xor
mov
lods
jl
repnz
leave
dec
pusha
pop
adc
stc
gs
or
lds
std
loope
cmp
lahf
sub
stos
add
fisubrs
xchg
fnstenv
adc
lahf
stos
rcl
and
pop
sub
fidivs
adc
sarl
pusha
test
push
mov
stos
inc
cmp
and
loop
scas
pop
roll
sbb
jmp
adc
and
push
xchg
or
aam
aad
xchg
add
add
add
xchg
add
rcrb
push
push
push
outsl
adc
xorb
sbb
xor
push
sub
test
cld
cltd
in
lcall
fs
jno
adcb
nop
jno
sbb
incl
jbe
jecxz
in
jge
mov
sub
pop
mov
or
xor
fs
mov
arpl
clc
mov
inc
in
sub
sub
jb
sbb
std
dec
les
sub
or
lds
out
or
out
ds
clc
jb
shlb
ret
xchg
xor
or
leave
mov
pusha
push
xchg
adc
push
out
and
pextrw
test
rcrb
xor
out
sub
ljmp
sbb
mov
lret
out
ljmp
lock
nop
xor
push
movl
in
imul
inc
inc
jns
das
stc
test
mov
mov
lret
xor
and
or
add
js
std
andb
xlat
and
sbb
inc
jae
xlat
enter
dec
iret
cmp
addb
pop
bound
xor
in
and
imul
and
pop
xor
mov
mov
mov
jecxz
sbb
jo
jno
pushl
repnz
mov
rorl
jo
mov
outsl
lods
fnstsw
adc
cs
daa
lods
into
idiv
jae
sub
mov
lock
pop
xlat
stc
xlat
add
fsts
lods
sub
test
push
jmp
out
fldl
lret
scas
iret
pusha
jnp
imul
xchg
jecxz
mov
adc
and
dec
int3
add
scas
push
sti
mov
lock
xor
fidivs
lock
cmp
adc
pop
jge
in
push
mov
ljmp
fsts
lock
repz
in
cmp
sub
mov
ljmp
cmp
enter
aad
add
jb
iret
add
sub
mov
add
sub
xchg
es
xchg
ja
aas
add
test
mov
fldl
inc
mov
outsb
dec
push
scas
out
sahf
pop
stos
pop
shll
cmpsl
rclb
mov
fldl
fadd
jl
shll
cmp
pop
lock
es
mov
push
sbb
cmp
mov
mov
adc
mov
js
addr16
mov
adc
xchg
push
jle
jl
aaa
stc
mov
fldl
test
jae
sti
jae
mov
pop
pop
fstpl
sub
ret
sbb
aad
ljmp
into
mov
xor
mov
fwait
jp
sub
lods
xor
pop
js
mov
add
repz
ja
adc
fimull
ret
repnz
or
adc
roll
ret
movsl
js
xchg
mov
testb
scas
adc
mov
movsb
ljmp
jne
push
fldl
or
or
mov
out
mov
xchg
aam
adc
inc
jg
sbb
ss
cmpsb
dec
adc
mov
mov
int3
loopne
ss
repnz
orb
out
outsl
lahf
ljmp
inc
lods
fcomp
jnp
or
repnz
sub
movsl
mov
xchg
not
test
repnz
inc
cmp
lods
sbb
pop
mov
push
out
xor
repnz
or
ljmp
mov
mov
sub
or
pop
or
lret
mov
test
fiadds
jecxz
pop
iret
pop
xchg
ficomps
sbb
fisubs
adc
ret
xor
push
js
push
xor
mov
adc
aam
je
loop
adc
sbb
push
jl
sub
mov
bound
xor
xor
push
mov
xchg
insl
dec
out
mov
cmp
xlat
cmpb
dec
loope
and
xor
add
shrb
in
sub
leave
test
and
mov
lret
lret
cmp
and
clc
sbb
add
lock
xor
xor
xor
lcall
mov
fadd
les
ret
scas
mov
mov
mov
es
pop
lock
dec
cmpb
bound
cld
dec
lahf
rolb
dec
jo
or
scas
xchg
cmp
dec
inc
jl
in
pcmpgtw
outsl
shrb
lds
cmp
mov
fisubs
adc
test
mov
or
or
int3
cmp
sbb
inc
icebp
inc
ret
sahf
fiadds
mov
cmp
jo
jl
sbb
icebp
pop
out
cmp
pushf
std
mov
shl
repz
pushf
add
in
mov
out
ja
add
roll
cmp
jge
pop
pop
mov
xchg
cli
xchg
icebp
sbb
aaa
xchg
fiaddl
add
popa
lods
rorl
jo
jge
aad
jbe
lods
cmp
add
add
sbb
mov
mov
mov
mov
cmpb
and
or
shrb
mov
aad
lods
pusha
xchg
mov
add
out
out
xor
lret
subb
movsl
or
aaa
xor
jnp
js
and
test
mov
ret
inc
sbb
and
xchg
cmc
mov
js
add
lds
ret
in
push
js
int
pusha
arpl
sbb
sub
int
pcmpgtd
in
or
add
ret
jnp
add
out
sbb
mov
sbb
mov
pusha
xor
sub
insb
push
je
dec
jge
popa
dec
mov
xor
bound
mov
xchg
jmp
dec
or
dec
mov
sbb
jns
cmp
or
cmp
cmp
pop
and
xlat
inc
das
ds
movsb
jp
popf
jmp
cmp
adc
mov
pop
movsl
pop
mov
xchg
or
or
out
loope
xor
add
mov
inc
jge
cld
jmp
movd
or
jae
adc
cmc
and
incl
jnp
loop
pop
adc
add
xor
xchg
dec
adc
outsb
arpl
mov
sub
adc
out
pop
jne
int
lock
ret
xor
cld
ss
mov
and
repnz
mov
adc
mov
sub
stos
sub
mov
adc
ret
xchg
addl
loopne
out
lret
fnstsw
subb
lock
aam
adc
stc
add
lret
cmp
shlb
push
jnp
outsl
outsb
cmpsb
bndldx
dec
lret
iret
shrl
mov
xor
cld
mov
stos
mov
add
pop
out
fcmovnb
mov
sahf
mov
push
mov
aaa
mov
or
sub
adc
or
rolb
pop
in
or
sub
lret
sub
lret
mov
xlat
lea
leave
pop
ljmp
adc
push
test
fnsave
loope
out
into
lahf
dec
sub
cmp
sbb
or
mov
rorl
lds
test
dec
mov
loop
mov
pusha
push
push
jge
nop
sbb
pop
fmul
les
sbb
jb,pt
xchg
nop
out
movsl
mov
arpl
loope
pusha
out
xchg
lds
stos
mov
clc
lret
fdivs
or
stc
dec
and
loop
mov
pcmpeqw
lods
in
sub
rorb
repnz
or
movsb
xchg
add
or
movsl
jecxz
xlat
and
cmp
cmp
aad
insb
lds
es
hlt
cld
stc
xor
hlt
push
or
mov
sbb
lods
or
out
add
rcl
or
jne
lds
je
cwtl
int3
jo
jb
or
inc
loope
mov
es
lahf
test
mov
enter
jge
icebp
loope
sarl
mov
jmp
lret
push
in
or
sbb
aaa
mov
sub
repnz
or
lods
in
sub
les
or
jl
ret
rorl
mov
jb
and
push
cltd
lret
adc
mov
mov
mov
aam
lret
hlt
push
dec
sub
add
xor
jne
mov
test
int3
leave
rorl
daa
mov
ret
mov
popa
mov
in
sub
adc
lods
cld
repnz
or
hlt
mov
push
mov
sub
clc
pcmpeqw
stc
vminpd
dec
mov
adc
shll
sbb
aad
sub
lcall
out
or
aaa
pushf
repz
jg
aam
or
and
and
push
addb
jns
mov
pop
dec
fnsave
lret
or
push
into
jae
stos
lock
mov
aaa
ret
je
or
lret
bound
flds
push
movsl
nop
or
fs
popf
lret
sub
sub
jo
int3
repnz
js
push
jb
lock
cmp
in
mov
outsb
add
xchg
out
out
jb
push
sbb
or
push
orl
hlt
jg
testb
ds
adc
and
shrb
arpl
sub
pop
lods
and
dec
out
mov
aas
cmpb
cmpsb
jmp
rorb
lock
pop
pop
or
arpl
ja
outsl
sub
mov
roll
push
jae
mov
or
xchg
lock
pop
sub
jnp
ds
inc
push
mov
xor
dec
cld
add
jge
out
add
mov
frstor
inc
std
add
addr16
fstpl
xor
push
sub
les
lods
popf
xor
add
push
lods
adc
xor
adc
or
sbb
in
das
add
rcl
sbb
adc
mov
lret
test
addb
aaa
mov
hlt
adc
jne
hlt
lods
or
dec
sub
cmpsl
popf
popa
fldcw
pop
mov
fs
adc
adc
pushf
call
mov
inc
push
lret
cld
inc
lea
jge
data16
daa
or
sbb
lods
xchg
dec
and
pop
xchg
dec
adc
adc
push
mov
adc
pop
mov
dec
adc
bound
xchg
or
jo
xchg
sub
jnp
dec
jae
lods
fsubr
in
addr16
stos
adc
cmp
mov
push
and
jg
xor
dec
orb
sbb
push
jae
popf
sbb
fistl
ret
adc
pop
ror
mov
scas
inc
out
inc
sbb
roll
add
out
or
pop
mov
adc
fisubs
lahf
std
daa
arpl
or
pop
shlb
repz
stos
ret
jae
sbb
mov
cmp
cmp
and
or
adc
nop
jmp
mov
and
push
test
fidivs
loope
sbb
int3
test
mov
loop
les
inc
or
out
adc
arpl
addr16
mov
xlat
out
lret
push
aas
jp
orl
orb
push
adc
jmp
or
leave
adc
insl
xchg
je
lret
loop
push
jl
cmp
sbb
test
or
repnz
xor
add
xlat
out
paddsw
lcall
fistpl
out
cli
push
lock
adc
ret
fdivrl
sub
pop
test
iret
dec
js
inc
adc
pop
sub
mov
fsubl
sub
sbb
in
inc
fisttpll
lock
rcrl
xor
test
mov
pop
in
cs
fdiv
test
cld
mov
mov
adc
jnp
cmp
adc
sub
dec
mov
sub
repz
add
insl
dec
sub
sbb
add
insb
sub
and
lock
sbb
mov
faddp
fwait
mov
daa
sbb
enter
mov
or
dec
cwtl
das
inc
lahf
out
in
mov
stc
into
add
int
sub
enter
dec
popf
push
pop
in
inc
jae
loopne
rorb
repnz
xor
sub
mov
loop
mov
test
subb
cld
push
rclb
into
enter
mov
jle
stos
sbb
in
jb
sub
mov
lret
add
add
mov
and
cmp
mov
fdivr
mov
pop
mov
xor
mov
enter
lds
nop
loopne
pushf
dec
int
movsl
push
adc
cld
sub
pushf
cmc
xor
jecxz
test
xchg
stc
int3
lods
mov
ds
push
jecxz
out
nop
add
push
sub
fisubrl
scas
sub
inc
sti
push
cmpsl
or
out
sub
or
out
push
iret
xor
mov
xor
fldl
adc
sti
mulb
aaa
bound
loopne
push
adc
mov
aad
mov
push
or
cmp
mov
shrb
pop
pop
loopne
or
cmp
popa
fcmovne
lahf
push
dec
loopne
arpl
adc
int3
in
std
shlb
ds
notb
outsl
mov
fld
mov
ret
sub
lret
in
or
mov
bound
fdivs
mov
stc
pop
shr
inc
jg
rolb
jno
mov
inc
adc
pop
nop
ja
mov
pop
pop
es
pop
fucom
lods
inc
xor
loop
mov
fcoms
dec
and
repnz
jg
xor
sti
push
pop
lock
outsl
rcll
push
leave
lods
hlt
add
xor
test
rcll
movsl
adcl
or
sub
addr16
sbb
inc
mov
jmp
iret
add
sahf
lock
lahf
mov
lods
repz
cwtl
inc
adc
sahf
arpl
and
cmp
cmp
daa
test
sub
imul
cwtl
xchg
xor
lock
outsb
outsb
mov
inc
mov
les
rcrb
popf
jmp
in
mov
pop
shl
jge
lods
cmp
dec
mov
sahf
stc
inc
push
lods
in
in
daa
sti
adc
fisubs
jge
push
nop
scas
lods
adc
mov
mov
ljmp
ror
sti
add
or
nop
in
jb
xlat
cld
lods
cmp
xchg
subl
int3
push
sar
dec
adc
mov
sti
mov
mov
call
mov
pop
mov
and
lock
and
pop
mov
mov
dec
sub
adc
out
stc
arpl
cmpsb
jmp
rcll
adc
mov
and
ds
or
add
pop
shll
rcll
xchg
popf
movsb
outsb
push
or
hlt
les
cmp
push
adc
inc
sbb
les
push
adc
mov
loope
int
jmp
mov
scas
or
cmp
jo
pop
imul
inc
inc
clc
loope
jg
xchg
cmp
lret
call
xchg
xchg
mov
sbb
insb
push
mov
mov
aam
mov
xchg
out
mov
add
stos
ja
or
push
pextrw
stos
in
cld
ljmp
rclb
jg
aad
stos
adc
pop
pop
stc
push
mov
lahf
jl
push
sub
adc
lret
xchg
js
outsb
in
loope
rorl
xor
cmc
push
cmovl
pusha
pop
imul
imul
sbb
push
jecxz
outsl
enter
inc
mov
cmp
loopne
adc
aam
mov
sub
lock
fwait
xchg
and
inc
movsl
add
xor
aaa
mov
dec
shrb
in
or
mov
addr16
xor
inc
mov
mov
mov
jle
mov
fcoml
jb
les
call
in
movsb
or
sub
pop
mov
xchg
and
pop
adc
out
jne
inc
push
dec
inc
or
insl
push
push
lea
push
dec
and
sbb
xor
adc
mov
xor
sub
lock
dec
push
xor
push
inc
push
popf
and
or
cmp
in
mov
testb
xor
scas
aaa
or
xchg
ret
pop
mov
out
pop
mov
mov
setno
adc
mov
popf
popf
lcall
xchg
jmp
lret
push
sbb
mov
cmpsb
push
and
xchg
dec
insl
sbb
or
mov
ficoml
clc
or
add
cmp
dec
add
mov
xchg
inc
jecxz
aaa
loopne
xor
xor
mov
fldl
jp
cltd
jbe
dec
lea
add
xchg
xchg
sti
jo
mov
nop
jne
push
pop
lock
scas
mov
pop
sbbb
fs
jl
mov
mov
jb
xor
or
mov
sbb
lds
push
test
dec
pop
lahf
scas
inc
xor
mov
repnz
stos
nop
mov
subb
adc
mov
xor
cmp
roll
or
and
or
inc
nop
cld
mov
mov
or
sub
or
sbb
jb
test
dec
adc
aam
sub
out
stos
enter
imul
ja
and
fldcw
push
rcrl
push
test
jo
fcom
rolb
mov
mov
lea
or
mov
fildl
jle
push
inc
outsb
mov
adc
or
jecxz
mov
inc
mov
cmp
cmp
pushf
cmpsb
adc
push
icebp
outsl
loopne
mov
xlat
scas
dec
shrb
lds
mov
add
movsl
dec
mov
push
xchg
and
xor
ret
jno
dec
inc
xchg
mov
aas
xor
mov
ret
int3
push
js
lods
or
pop
cli
out
sbb
pop
xor
pop
clc
push
loopne
ss
mov
arpl
adc
push
jb
sub
sub
xchg
stc
dec
push
adc
movsb
outsl
push
adc
fwait
out
pop
add
pop
xchg
sub
arpl
mov
repz
sub
filds
sub
rcr
rol
js
mov
cli
xor
jp
mov
iret
jge
loope
std
popa
cmpsl
add
xchg
or
cmpsl
mov
cld
cmp
out
jl
arpl
pop
dec
pop
cmp
lds
cmc
inc
xor
imul
addl
enter
push
or
aaa
inc
xchg
insb
nop
mov
and
adc
sahf
in
sbb
mov
ja
dec
pop
add
hlt
fnstsw
push
mov
popf
push
shll
mov
xchg
dec
adc
and
lds
fistpl
popl
outsb
mov
dec
dec
xchg
sarl
repz
divb
movsb
adc
pop
fidivrl
push
cli
fdiv
out
sbb
mov
sbb
lock
push
or
fwait
add
clc
movsb
sbb
mov
scas
add
or
sub
lret
call
xchg
int3
sbb
mov
or
pop
ror
inc
pusha
cmp
fdiv
adc
pop
insb
hlt
sbb
sub
xor
inc
sub
dec
repz
sub
add
sub
mov
shl
adc
addr16
sbb
cltd
push
or
mul
cmc
fs
pop
rep
in
test
movsb
sti
xlat
jp
enter
inc
xchg
cmpb
push
mov
sub
shl
int
aam
cmp
sub
pop
aas
fwait
cmp
cmp
hlt
or
imul
mov
and
sar
lret
inc
mov
hlt
mov
repz
hlt
mov
sbb
sub
cmc
lret
nop
sbbb
mov
mov
xchg
pop
xchg
iret
sub
sbb
jb
in
adc
test
pop
mov
vcvttsd2si
out
fucomi
mov
in
mov
pop
sub
pop
iret
jbe
xchg
cmp
sub
mov
je
pop
mov
adc
mov
mov
jg
push
pop
out
push
into
pop
fadds
or
nop
movups
flds
push
sarl
or
xchg
mov
dec
xchg
dec
add
leave
pushf
mov
ds
jmp
sub
shll
enter
jno
or
sti
xor
stc
mov
sub
cli
mov
push
out
xor
sub
xchg
add
dec
adc
push
jmp
xor
mov
add
mov
outsl
rclb
sub
call
cld
adc
enter
andb
mov
and
leave
test
sub
xor
cwtl
js
sub
shll
rclb
fdivrp
mov
leave
add
addr16
dec
add
clc
jo
xor
mov
add
pop
out
fimuls
je
lock
or
fdivrp
lret
fs
pop
in
decb
cltd
add
mov
in
clc
jo
movb
xchg
pop
pushf
xchg
push
xor
mov
mov
sub
addr16
adc
jne
les
cmp
xlat
push
jnp
sar
sbb
xchg
mov
mov
mov
or
fimuls
shl
in
xor
mov
in
lahf
cmp
and
in
stc
lret
xor
pop
pop
clc
or
cld
fcmovbe
jb
mov
mov
add
lret
pop
mov
in
hlt
in
mov
leave
int
lods
loopne
fnstsw
scas
push
pop
push
add
dec
push
in
jb
or
mov
fnstcw
les
adc
inc
sti
ret
int3
cmp
adc
stc
dec
mov
mov
popa
cmp
cld
lahf
aad
ret
mull
hlt
out
subl
add
ret
pop
loop
cmp
jo
movsb
pop
sti
out
lods
pusha
mov
xor
adc
movsb
xchg
xchg
movsl
stos
aad
sarb
scas
push
mov
mov
insb
out
mov
rcr
scas
push
push
mov
lods
push
mov
adc
enter
dec
mov
sub
cmp
add
sar
mov
dec
jecxz
cs
adcb
jnp
out
in
aad
xchg
nop
adc
or
sti
sub
jae
int3
dec
add
jecxz
mov
inc
xor
mov
loopne
sbb
insb
mov
inc
add
cmp
mov
mov
mov
dec
cmpsl
xor
inc
inc
dec
sub
mov
inc
pop
in
arpl
addr16
dec
stos
xchg
pop
push
push
sti
mov
or
sub
adc
add
loop
push
iret
push
pusha
cmc
or
pushf
fmuls
sub
loop
in
sub
lods
sbb
add
adc
subl
lea
or
outsb
add
test
mov
push
cwtl
daa
and
movsl
jo
add
push
or
mov
push
in
sub
jne
test
mov
or
or
mov
aam
and
adc
xchg
mov
mov
adc
adc
jmp
stos
push
xchg
xor
or
sub
outsl
or
push
in
mov
adc
sub
popf
jl
aad
lea
ss
or
push
push
les
in
int
xor
add
mov
mov
pop
or
sub
aad
enter
xor
cmp
nop
ja
call
jo
inc
iret
mov
dec
or
or
add
mov
les
push
jecxz
icebp
ret
sbb
js
out
push
rorb
push
add
scas
jno
sub
out
adc
push
sahf
inc
push
arpl
in
hlt
mov
add
sub
rcll
xchg
push
cmp
mov
mov
fstps
pop
jl
movl
jecxz
mov
out
ret
sub
push
inc
imul
push
call
push
xchg
je
sub
jno
add
rorb
int3
ds
pushf
add
cmp
jns
or
xchg
push
push
xlat
dec
ret
adcl
pushf
ret
test
lods
test
sub
sti
popf
clc
iret
rolb
lea
add
mov
sub
fdivr
enter
or
push
popf
outsl
xchg
lea
loope
ficoms
add
sub
jle
xchg
jp
mov
mov
or
test
das
into
ds
aas
rorb
mov
jo
cmpsl
dec
mov
mov
nop
sub
pop
or
push
dec
repz
mov
dec
je
orps
pop
push
sbb
sub
xor
mov
jmp
je
sub
xchg
popl
mov
push
add
pop
je
sub
xchg
xchg
adc
mov
mov
stos
sbb
or
xchg
xor
aas
pop
xchg
fcoms
inc
cmp
pop
arpl
pop
inc
xchg
mov
pop
repnz
jne
pop
pop
xor
or
je
ficomps
repz
mov
movsb
mov
loope
sti
lds
lret
or
and
sub
push
xchg
sbb
cld
xchg
inc
mov
mov
pop
jae
shlb
xor
ret
push
call
sub
mov
inc
mov
je
ljmp
in
cs
push
push
and
push
shl
mov
loopne
call
hlt
les
loop
dec
cs
fistps
sbb
hlt
adc
sub
js
or
mov
jg
xchg
or
dec
mov
ret
dec
movsb
adc
fwait
pop
mov
xchg
hlt
xchg
cmp
insl
or
xchg
popf
jle
popa
mov
xchg
outsb
jb
movsb
push
movsb
mov
sbb
negb
test
pop
add
cmpb
aaa
js
hlt
jo
xchg
mov
mov
enter
jle
mov
or
ret
adc
mov
mov
nop
jb
push
popa
xchg
shlb
enter
jne
or
aam
sti
mov
sub
mov
xor
test
mov
push
movsb
push
movsb
in
push
xor
mov
push
push
insl
sarl
and
gs
std
mov
or
leave
xchg
in
ja
sub
xchg
mov
lahf
adc
rolb
xchg
aaa
int3
lahf
sub
ret
xchg
pusha
cmpsl
mov
shrb
or
mov
test
mov
leave
leave
and
test
fists
inc
js
and
dec
pop
addr16
repnz
movsl
lods
dec
mov
std
mov
in
and
or
mov
faddl
sub
dec
les
sahf
int3
mov
adc
hlt
add
add
rorb
or
shrl
in
aaa
out
fs
inc
sub
and
or
test
scas
add
mov
addr16
push
adc
int
stos
jnp
jg
mov
adc
ret
shl
add
pop
adc
lcall
addr16
push
subb
mov
and
or
jp
cmc
push
and
sub
sub
lods
iret
seto
cwtl
ret
sahf
or
mov
int3
push
pop
mov
sbb
test
mov
cmp
adc
test
rcr
bound
sti
push
or
adc
sbb
int3
adc
daa
cltd
add
dec
faddp
rclb
lea
out
push
mov
sahf
andl
fisttpll
pop
adc
subl
iret
add
fs
test
mov
and
push
jno
testl
mov
mov
mov
dec
mov
adc
lcall
xchg
lahf
inc
outsl
ja
cld
nop
mov
lds
ret
into
sbb
sub
xor
adc
add
repnz
mov
andl
sahf
rcrl
insb
mov
mov
mov
pop
adc
fisubrs
out
xchg
xor
pop
fmulp
push
sahf
out
sub
add
or
pushl
mov
pushf
fisttpll
outsl
add
insb
test
add
setge
hlt
rolb
or
pushf
sbb
sbbw
mov
ja
mov
xchg
xchg
inc
imul
jo
adc
ret
lahf
pushf
xorb
mov
mov
pop
test
dec
loope
sub
shr
dec
pushf
ljmp
js
pushf
fisubrl
mov
test
pop
out
frstor
out
in
jl
cltd
fdivrp
stos
xlat
fwait
scas
les
out
iret
inc
cmp
cmc
js
push
je
mov
sbb
push
in
stc
call
jmp
mov
xor
sub
sti
mov
lahf
add
or
xchg
jne
stc
dec
mov
mov
ficomps
das
dec
cld
xor
jb
lock
sarb
ret
xlat
shll
push
insl
xor
jae
cwtl
jne
mov
or
mov
lahf
xor
mov
sbb
out
add
ds
sub
rorl
insb
adc
ds
xchg
push
ljmp
mov
push
or
or
add
fstpl
scas
sti
cld
jl
lock
jns
or
aad
and
repz
cld
inc
add
jae
jecxz
jo
xor
cmp
pop
loope
test
mov
or
pop
mov
mov
xchg
fisttpll
pop
pushf
mov
aaa
repz
mov
or
pop
pop
leave
dec
repnz
adc
dec
shrl
jne
jae
mov
or
pop
daa
out
out
addb
mov
aas
inc
outsl
insl
mov
shll
add
lock
rorl
mov
mov
ss
fdiv
adc
xor
inc
ds
repnz
or
push
sbbb
stc
cmp
sbb
fucomp
test
xchg
fldcw
inc
sbb
pop
nop
repz
mov
in
or
scas
ret
cld
push
inc
mov
js,pn
xor
cli
push
mov
loopne
nop
das
jne
mov
or
sbb
mov
cmp
push
mov
sarl
mov
mov
cmpsb
xlat
pop
mov
iret
add
in
inc
sbb
sub
jae
test
sbb
xchg
std
clc
inc
sahf
and
jno
stos
test
or
pusha
sbb
inc
fdivrp
cmp
jmp
or
dec
sbb
nop
lret
dec
movsb
or
add
std
jp
mov
adc
ret
fisubrl
sub
and
jl
test
rorb
xchg
cmpl
push
jbe
out
adc
daa
cmp
mov
adc
mov
cmpsl
xchg
add
ja
push
sub
pop
dec
pop
shrb
mov
add
stos
jns
adc
loopne
add
and
jns
pop
scas
jge
add
inc
jp
dec
ja
test
add
push
in
sbb
xor
adc
repz
out
aad
stos
xchg
das
sbb
mov
leave
or
movsb
mov
stos
inc
inc
add
or
xchg
ja
movsl
ret
les
mov
js
and
pop
cmp
out
in
mov
or
jnp
xchg
les
xchg
add
ffree
mov
leavew
call
pop
shlb
or
and
je
cmp
xorb
ficoml
popa
test
add
push
andl
stc
es
sbb
orb
mov
sub
xchg
or
cmp
loopne
cmp
inc
in
fisubrl
and
push
inc
add
repnz
in
mov
sbb
movsb
add
push
mov
xchg
sti
rcl
sbb
imul
ljmp
lds
jb
loop
std
lahf
xor
ss
mov
insb
jmp
adc
mov
aam
lahf
or
xlat
rcr
add
rol
pusha
addb
stos
test
imul
fcoml
sub
lret
int
push
mov
mov
add
or
das
ds
xchg
mov
adc
push
stos
adc
mov
lock
mov
mov
fdivrl
push
xlat
add
pop
fisubrl
flds
push
or
dec
into
jl
sub
sahf
pop
cmpsb
fists
test
out
stos
dec
jg
movsb
push
orb
mov
scas
sbb
mov
rcrl
push
xchg
aad
je
xchg
sarl
adc
xchg
inc
jmp
or
xor
int3
outsl
mov
mov
cmpsb
into
stos
jo
inc
dec
push
sarb
mov
and
in
decl
xor
rcl
xor
test
cwtl
jo
in
je
dec
jmp
sub
push
jae
sub
inc
push
jecxz
in
cmp
stos
dec
dec
mov
and
xchg
imul
outsl
add
outsb
daa
pop
adc
out
adc
or
jne
push
adc
lods
xor
push
xorb
inc
pop
sub
push
mov
mov
lcall
jmp
repnz
sbb
and
test
fstps
add
or
jg
push
adc
flds
adcb
into
and
mov
cs
cmp
sbb
sub
push
in
adc
nop
movsl
psrld
push
into
in
jne
scas
adc
dec
push
xchg
sbb
dec
pop
xchg
pop
sahf
imul
mov
lcall
and
sub
js
add
syscall
or
int3
xor
sbb
sbb
mov
add
mov
mov
or
dec
fxch
inc
mov
mov
ret
repz
in
stc
pop
lahf
std
pop
sti
mov
adc
stc
push
daa
adc
add
or
or
pop
movl
or
incb
lcall
ja
ds
mov
pop
jmp
pop
lcall
and
sub
push
inc
xchg
mov
xchg
cld
ds
sub
in
test
shr
cmp
shlb
cmpsl
aas
roll
push
repz
cmp
jl
inc
pop
mov
mov
mov
add
adc
jmp
cmp
ret
mov
imul
cli
pop
repz
xor
and
ficoms
cmp
mov
adcb
movsb
in
push
pop
pop
xchg
int3
mov
dec
push
mov
adc
add
cli
or
and
xor
xchg
jb
sub
stos
lock
stc
and
mov
dec
nop
cmc
iret
add
xor
cmp
xor
lahf
or
or
in
sub
jno
push
jg
xor
sub
loope
enter
lock
jecxz
push
inc
xor
push
jo
sbb
paddd
or
mov
ljmp
xor
lea
or
sub
pinsrw
push
stc
cmp
inc
add
sbb
rorb
iret
sub
jns
ror
leave
jmp
lret
pop
pop
xchg
pop
int
pop
mov
adc
pop
mov
fcom
push
mov
rcrl
fidivrl
sahf
adc
mov
jl
jae
jmp
sub
or
mov
rdtsc
jecxz
ret
mov
inc
or
roll
jp
sti
or
out
add
repz
fisubrs
pop
pop
insb
mov
add
sbb
inc
sub
push
pop
fldt
jmp
dec
mov
dec
sbb
xchg
inc
xchg
inc
sbb
je
jl
mov
sub
jo
mov
cmp
jnp
int
lret
js
pusha
in
xchg
or
lock
pop
jbe
data16
fs
or
xlat
cmp
pushf
mov
stc
lea
mov
lahf
in
stos
and
fcoml
cmc
dec
mov
add
les
fdivrl
mov
mov
stc
setg
add
xor
cmp
dec
push
mov
adc
jns
push
lods
enter
mov
dec
mov
stos
pop
sub
push
dec
insb
roll
lods
les
mov
add
mov
jmp
sub
adc
aad
inc
pop
je
stos
and
jmp
out
dec
scas
je
or
hlt
lahf
jmp
mov
mov
cld
push
call
sub
repz
cmp
leave
jno
rcr
fnstsw
add
fisubl
jo
negl
insl
mov
daa
out
lahf
or
loop
fimuls
in
rorl
jae
lods
stc
pop
inc
mov
mov
mov
rcr
repnz
dec
rol
movsl
outsl
idivl
mov
push
outsb
push
loope
or
add
ret
xor
lahf
repnz
xor
mov
xor
ret
sbb
dec
imul
sub
jl
in
pop
sbb
lock
es
mov
aas
xor
lods
cmpb
imul
pop
mov
or
mov
inc
dec
adc
enter
pop
mov
call
icebp
sar
ficompl
add
clc
mov
xor
add
stos
mov
lcall
stos
sbbl
cmpsl
xlat
nop
adc
inc
add
sub
push
mov
test
push
or
add
mov
imul
scas
rcr
insb
jbe
mov
cmp
mov
into
pusha
bound
adc
sbb
ret
subb
inc
mov
test
pop
cmp
dec
adc
cmp
mov
stc
dec
sub
ljmp
jecxz
in
outsl
mov
sbb
add
sahf
or
dec
jmp
out
dec
iret
adc
fwait
mov
sub
xchg
movsb
push
mov
shrb
ja
fs
shrb
mov
pop
sar
inc
lock
mov
dec
sbb
inc
cmpsb
movsb
rcr
and
mov
sub
adc
fwait
jecxz
adc
out
xchg
int3
addr16
dec
test
sub
xor
sub
outsl
sbb
les
mov
jmp
in
xchg
scas
stc
gs
jge
imul
push
rcrb
cltd
cmp
shll
xlat
push
dec
mov
pop
out
adc
sub
sub
dec
ja
sub
lods
repnz
loopne
mov
fisubl
ficoms
sbb
xchg
mov
cmp
and
and
rclb
push
lahf
xor
stos
adc
stos
lds
in
cld
or
adc
pushf
pop
or
fdivp
popa
inc
mov
xchg
dec
mov
cmpsb
add
pop
rolb
mov
mov
aaa
cmp
hlt
adc
cmc
popf
shlb
jp,pt
push
mov
jae
add
rcll
push
jge
pop
lret
sub
add
or
xlat
jae
mov
mov
adc
jl
mov
jge
mov
jle
enter
xchg
lahf
addb
sbb
lahf
sbb
add
xor
test
jmp
cs
mov
roll
add
add
sub
ror
jmp
jp
loopne
cmp
inc
cmpsb
and
aad
flds
in
sarb
in
dec
repnz
lds
nop
hlt
adc
xlat
shl
or
push
jecxz
out
add
jl
jb
ret
loop
sbb
and
pop
lock
dec
ret
in
loopne
pusha
repnz
js
cwtl
and
push
enter
lock
adc
mov
cmp
mov
or
mov
push
xchg
fidivl
dec
sbb
lcall
cmp
in
ret
aad
dec
loop
shr
outsl
cmp
loop
shr
addl
lock
push
jns
sbb
add
pop
mov
mov
daa
jecxz
sbb
xor
adc
lahf
std
mov
cld
push
call
mov
or
or
or
ds
test
call
add
int3
int3
lods
scas
or
lret
jge
cmp
xor
lahf
xor
xorl
xor
in
sub
adc
lahf
test
push
add
add
xchg
or
sbb
cld
dec
push
das
adc
or
fcmovne
adc
xlat
in
sub
jo
outsb
jo
adc
mov
xchg
cmp
sub
stos
out
adc
or
in
aaa
cmp
jp
repnz
int
push
dec
add
xor
cmp
xchg
mov
mov
into
lret
pop
and
repz
jbe
roll
mov
cli
xchg
sub
ja
push
dec
fdivrl
add
xor
jnp
or
add
mov
dec
or
lcall
jnp
jb
add
sub
jns
adc
jno
clc
clc
sub
dec
ret
pop
repnz
icebp
mov
fimuls
ljmp
or
stos
and
lret
or
je
loope
dec
cwtl
jae
sahf
mov
insl
ds
gs
adc
fcomps
rclb
out
ss
int3
lods
adcb
mov
add
in
out
push
mov
and
dec
add
cmp
inc
scas
call
or
jae
incb
or
test
pop
scas
add
pop
push
and
mov
aaa
fmulp
xor
test
outsb
add
clc
mov
fistpl
xchg
add
stos
adc
lcall
stos
mov
stc
fdiv
out
sub
fs
sub
add
mov
adc
pop
xor
mov
les
insl
ret
mov
mov
les
lret
or
out
jo
dec
sub
mov
scas
in
mov
sub
shrb
push
jle
add
jno
adc
lcall
mov
sbb
add
sub
jge
pop
mov
mov
and
repnz
push
cwtl
test
lock
in
add
sub
clc
add
pop
mov
mov
hlt
sub
ds
scas
xor
pop
mov
clc
xchg
xor
dec
and
hlt
pusha
ljmp
jp
test
sbb
push
or
out
mov
ds
aas
sti
out
and
aam
inc
dec
or
out
push
and
dec
sub
in
jg
iret
adc
cmp
push
mov
sbb
push
push
std
jae
push
mov
pop
in
add
notl
cmp
cmp
pop
push
adc
lea
fiadds
jle
mov
jmp
out
pop
add
lock
in
mov
sub
mov
and
adc
stos
push
roll
cmp
aaa
cmp
das
adc
push
mov
push
xchg
mov
mov
lea
push
push
push
test
push
dec
aaa
xchg
dec
mov
and
sub
scas
xchg
push
in
pop
in
dec
bound
sbb
aam
cmc
adc
arpl
out
push
jmp
push
add
lods
cmp
cmpsl
push
push
lahf
add
or
jno
pop
fsts
pop
add
push
bnd
inc
hlt
xor
inc
xlat
or
add
aam
pop
lods
mov
inc
xchg
sbb
add
or
push
ret
subl
arpl
shr
or
and
mov
xchg
sbb
push
les
scas
or
insl
test
test
lods
int
outsl
cmp
or
mov
stos
jo
ret
or
nop
mov
lock
jne
adcb
lods
outsl
pop
and
sub
leave
add
in
push
cmp
cmp
scas
push
jmp
add
pop
dec
cwtl
sbb
xor
insl
and
fwait
hlt
mov
pop
loope
std
jle,pt
decl
lahf
adc
sub
jae
jl
mov
or
push
nop
fcomps
mov
jle
xchg
or
incb
orl
inc
out
jo
in
mov
adc
std
shll
test
mov
in
out
rcr
push
cltd
or
out
inc
fildl
add
mov
mov
inc
lds
rclb
dec
fsts
dec
jmp
mul
sub
mov
je
daa
push
cmp
enter
out
xchg
test
jl
enter
dec
es
je
gs
call
orb
pop
sub
xchg
sbb
push
mov
sub
jmp
nop
dec
sub
cmp
xchg
mov
sbb
pop
data16
push
push
xchg
lahf
or
pop
or
ss
call
add
cmpsb
das
fnsave
sub
inc
aad
jbe
int
pop
fisubs
sub
orl
out
int
shl
andl
xchg
add
adc
inc
insl
testb
iret
ljmp
lahf
push
mov
and
or
lahf
iret
jmp
shl
test
dec
fmull
call
push
hlt
into
cmp
pop
sub
aad
sbb
pop
adc
pop
aad
mov
rolb
lret
sub
xlat
jns
rolb
sub
ja
mov
sbb
sub
lret
lret
cld
inc
sbb
scas
jo
ret
mov
cmp
add
arpl
or
call
sarb
xor
mov
pop
sub
test
xchg
mov
lods
xor
jg
xchg
xor
inc
pop
pop
sub
cmp
cmc
adc
ss
and
into
enter
cli
int
mov
cmp
aad
das
cmp
subl
in
lock
jp
popf
pop
rolb
aas
lahf
or
sub
fdivr
mov
or
shl
or
mov
movsb
cs
xlat
lret
mov
aad
sarb
xchg
cmpsl
aad
les
dec
mov
mov
hlt
repnz
adc
cmc
cmp
sub
jge
ds
lret
xchg
in
test
ss
sbb
int
dec
or
pushf
push
mov
inc
or
out
pop
fwait
mov
sbb
loope
mov
mov
dec
adc
aaa
jnp
pop
int3
lcall
dec
lahf
call
fsts
fcmovne
cmp
mov
dec
cli
mov
out
cmp
mov
cli
jb
test
mov
lahf
loopne
cmp
leave
addr16
mov
lock
adc
add
out
lcall
ljmp
hlt
inc
decb
lds
xor
jmp
jae
sbb
stos
dec
mov
mov
sbb
pushf
jge
add
fisubrs
sahf
or
add
xchg
lret
sub
or
push
mov
in
psrlq
hlt
xor
scas
and
mov
movsl
int3
sbb
mov
pop
pop
sbb
lock
fildl
and
fists
cmp
mov
clc
cld
negl
ljmp
dec
adc
xchg
cld
xor
mov
mov
jg
je
mov
xchg
inc
mov
loop
mov
loop
jnp
push
jns
and
fisttpl
fisttps
mov
lret
xor
dec
xchg
je
in
mov
sub
popf
loop
cmp
pop
into
repnz
mov
push
sub
xchg
jl
std
inc
pop
sbb
dec
mov
or
rolb
pusha
and
sbb
lods
dec
xlat
das
adc
out
sub
push
lds
adc
popf
fisubrl
cmp
cwtl
inc
scas
scas
push
jb
sbb
mov
cli
cmp
jae
mov
and
jnp
imul
sahf
movsl
or
mov
pop
push
sti
push
pop
adc
aad
dec
or
sbb
orb
aad
and
cmpsb
mov
scas
cmpsl
cmp
xchg
pop
xchg
cwtl
out
rorb
loope
out
inc
ja
or
insl
add
repz
lods
addb
add
lock
jbe
pop
mov
ficompl
inc
out
dec
fisubs
sub
xchg
push
scas
jg
insb
inc
fs
dec
shl
int
sub
or
icebp
add
add
push
adc
mov
or
inc
xchg
sub
sub
fistps
arpl
pop
fwait
scas
xlat
std
test
js
mov
js
rcrb
or
adc
lea
add
sti
enter
pop
adc
push
int3
or
push
movl
adc
add
fisttps
xor
loope
mov
mov
jg
and
xchg
ret
mov
push
add
pop
andl
sti
pop
mov
lahf
lds
jne
gs
mov
in
and
sbb
mov
jne
mov
stos
loopne
sbb
aam
sbb
mov
pop
in
mov
out
mov
popa
out
mov
adc
out
add
cmp
mov
or
mov
adc
lock
in
dec
rorb
or
mov
inc
sti
pop
or
push
mov
loopne
adc
sub
or
and
leave
psubusb
adcl
jbe
cmp
adc
movsb
pop
pop
shlb
mov
jmp
push
mov
push
push
jmp
stos
and
into
push
dec
in
aas
decb
rorb
inc
bound
sbb
push
aam
inc
lahf
add
add
xor
push
call
jmp
push
ret
int
call
add
mov
imul
or
pop
rorb
rcll
xor
lahf
insb
repz
inc
jmp
dec
fmul
inc
xor
sub
aaa
mov
push
lahf
adc
f2xm1
fstpt
lds
stos
ret
popf
xor
gs
mov
cltd
adc
pop
jmp
jb
mov
or
and
push
call
dec
add
movsb
cmp
es
popa
shll
int3
jnp
xchg
popa
aas
sub
mov
add
jp
stos
ret
pop
data16
icebp
inc
push
add
into
arpl
ror
or
or
push
es
movsl
or
mov
add
or
push
negl
adc
xchg
pop
int3
and
mov
push
sbb
lods
scas
mov
fldt
loope
int
movsb
mov
ds
adc
mov
nop
je
cld
out
scas
or
cmp
mov
mov
into
in
or
int3
rcr
mov
ds
sti
mov
fs
xchg
jno
iret
inc
stc
popf
call
int3
jb
jmp
out
fstpt
call
popa
push
bound
sbb
in
jns
sub
stos
scas
and
jg
cmp
adc
rcll
mov
xchg
or
adc
lea
dec
test
js
rcll
lfs
sub
push
adc
imul
adc
aam
iret
aaa
jae
sbb
push
in
sub
push
cmc
mov
add
or
jl
push
sub
hlt
into
and
ds
aam
shll
rcr
shlb
nop
inc
mov
aad
rorl
into
lea
dec
jns
push
pop
lea
lret
adc
clc
or
les
cli
or
out
push
xchg
push
sub
loop
hlt
pop
mov
fstpt
xchg
push
dec
push
dec
fidivrs
mov
dec
loop
pop
push
push
repz
je
sub
adcb
xchg
out
add
mov
mov
in
sub
into
cmp
push
add
sub
rcrb
add
sbbl
pop
test
dec
repz
aas
sbb
adc
inc
mov
mov
fstpt
mov
or
pop
xchg
xor
ret
ds
gs
or
repnz
add
in
xor
in
enter
push
mov
aam
sbb
rol
lods
cli
and
mov
andl
data16
mov
jmp
pop
jne
rolb
aad
data16
fsubrs
movb
adc
inc
mov
xchg
mov
jo
lahf
or
jae
adc
dec
jmp
outsl
adc
and
dec
les
xchg
add
adc
pushf
push
in
les
cmc
fildl
ss
aam
mov
or
iret
icebp
inc
mov
mov
inc
sub
imul
add
rorb
xchg
jmp
push
out
lods
stc
repz
or
test
clc
das
iret
int
sbb
push
sbb
add
lock
cmp
add
faddl
outsb
add
sub
lock
repnz
and
lock
repnz
cmp
lock
or
rcrl
dec
cmp
or
or
add
ret
rorl
cmpl
add
fiadds
aas
or
call
inc
mov
test
push
or
shll
cmp
cmp
push
fbld
test
mov
jmp
inc
or
sbb
inc
add
or
pop
adc
stc
push
imul
sarl
pushf
cli
adc
mov
test
jle
insl
push
and
fcmovb
adc
jno
loop
mov
lock
int3
jo
push
ret
out
add
push
int3
addl
mov
mov
adcl
sbbl
rorb
addl
add
fidivrs
rorb
pushf
out
or
push
adc
out
cmp
xchg
clc
fnstsw
xchg
cmp
mov
fst
je
in
sbb
push
ds
lret
mov
call
and
or
cmp
loope
js
or
daa
std
lret
lods
xchg
popf
push
popf
cmp
stos
jmp
lods
stc
loope
sbb
add
push
or
fwait
mov
cmpsl
xchg
jno
inc
add
inc
add
data16
dec
movntq
out
cmp
cli
xchg
push
sub
adc
cmpsl
mov
bound
shrb
push
jecxz
inc
ret
sbb
xchg
test
mov
sub
es
popl
xor
xchg
pop
lea
out
shufps
pop
mov
or
jne
mov
add
or
hlt
mov
movlps
addr16
inc
sub
push
ss
mov
jl
mov
dec
paddsw
jle
add
push
popf
inc
cld
and
push
out
ret
jmp
inc
mov
add
and
ret
negl
scas
cmp
or
out
ljmp
iret
or
pop
cmp
out
pop
and
jns
insl
pusha
sbb
int
int3
inc
push
fisubl
mulb
iret
add
jns
cmp
movl
ljmp
mov
inc
add
sub
daa
add
sbb
push
or
int
dec
inc
sbb
out
sahf
mov
sbb
sub
fcmovbe
jmp
xchg
inc
paddusw
lahf
in
or
xchg
add
xlat
sub
movsl
sub
enter
int
dec
pop
mov
jmp
rcrl
ret
cmc
xchg
xor
mul
leave
out
lahf
and
rcl
push
mov
stc
enter
sub
es
test
test
fidivs
cmp
sbb
ss
movlps
sub
push
and
popf
lea
mov
push
nop
mov
or
pop
cmp
or
or
mov
stos
add
pop
push
sbb
sub
push
xchg
aam
cmp
arpl
xorb
cmpsb
shlb
ret
mov
in
scas
pop
cmp
and
mov
jl
dec
xchg
psrlw
call
stos
or
mov
mov
dec
cmpsb
inc
push
arpl
aas
jns
and
push
ja
in
bswap
jge
loop,pn
ret
scas
outsb
add
stos
xchg
loop
sbb
add
test
xchg
movsb
xor
les
mov
loop
pop
lock
sub
pop
add
mov
mov
pop
int
sbb
fcompl
pop
repz
sub
dec
adc
pushf
imul
sar
js
int
or
push
mov
sbb
in
jo
dec
sti
mov
mov
mov
push
loope
sti
in
dec
sbb
test
stc
fistps
push
lea
int3
fucompp
arpl
movsb
sbb
dec
or
imul
cmpsl
sub
cltd
lock
jp
mov
dec
cs
aad
add
jo
jae
mov
fistpl
repz
cmp
jae
les
loope
mov
in
lahf
out
out
mov
push
jmp
mov
push
lock
cli
fldcw
adc
xchg
fcomip
jmp
or
add
add
sub
push
pop
mov
in
jno,pn
mov
and
cld
movntps
adc
out
fimuls
rcrl
mov
sbb
push
jge
mov
dec
jl
jnp
in
add
in
mov
cmc
jg
mov
mull
mov
mov
mov
and
adc
pop
xchg
adc
les
mov
clc
js
cmp
push
adc
xor
mov
pushf
lea
neg
xor
sub
or
mov
stc
jae
push
in
inc
jae
add
add
add
test
popf
je
out
mov
sbb
rcll
mov
ret
sbb
jmp
icebp
ss
enter
push
ret
or
sbb
ret
aam
sub
aam
sbb
adc
cmp
mov
loopne
mov
pop
or
cs
push
xchg
push
jmp
mov
sub
mull
add
ds
jmp
xor
jae
adc
int3
std
sub
or
inc
hlt
sbb
sbb
mov
fisttpl
int3
push
lods
pop
repnz
sub
aad
pop
rcr
lahf
adc
stos
sbb
repnz
fmull
jno
enter
jecxz
jo
gs
int3
mov
push
or
push
inc
ss
mov
add
pop
inc
nop
mov
adc
xlat
push
jae
std
add
jne
cmp
dec
push
push
cmp
xor
xor
adc
lahf
sbb
jb
in
inc
push
xor
xchg
xchg
adc
cld
add
xchg
nop
and
push
xor
sub
add
pop
int3
jle
mov
ss
movsb
push
icebp
aaa
add
sbb
mov
outsl
inc
cmp
mov
mov
into
sub
clc
fidivs
push
push
xchg
loope
jl
sbb
fwait
jne
push
push
mov
add
mov
xor
vpxor
mov
xor
shrb
lret
dec
add
divl
xchg
shll
sub
mov
push
mov
mov
mov
sub
xchg
mov
or
mov
iret
xlat
mov
shrl
sbb
push
cmpsb
xchg
mov
add
mov
ror
xor
or
mov
sbb
or
or
gs
adc
or
adc
iret
dec
mov
ret
mov
mov
aaa
or
ljmp
ffree
fimuls
push
bound
pop
lds
cmp
push
into
cld
inc
icebp
xor
hlt
or
aad
xchg
add
and
sub
adc
adc
cld
push
lea
xor
outsb
scas
add
jae
inc
push
sub
aam
mov
sub
sub
adc
dec
or
fdivrs
add
dec
scas
mov
shrl
ret
mov
cs
rclb
and
add
adc
mov
pop
mov
test
pop
jb
pop
jmp
cli
dec
insb
mov
les
pop
hlt
sub
inc
or
fistpl
mov
xchg
shrl
inc
lahf
add
out
xlat
push
cmpsl
movsb
insl
mov
xchg
xor
xor
pop
lds
push
int
push
cmp
cmp
mov
daa
lods
out
add
add
je
fstl
movsb
cmpsb
jb
mov
lea
ljmp
mov
js
xor
in
jl
ret
adc
cltd
dec
and
jns
adc
loope
cmp
or
dec
outsb
or
push
inc
mov
repz
test
adc
sub
ljmp
hlt
out
mov
push
add
and
mov
jecxz
fdiv
inc
aam
adc
inc
xor
sbb
mov
insb
int3
les
adc
fnstenv
xor
adc
mov
fists
xor
and
shrb
sub
pop
fdivp
ficoms
faddl
popa
out
push
lahf
xchg
repnz
lea
int3
cwtl
dec
push
jmp
push
dec
test
clc
out
rcll
cmp
addl
loop
push
test
leave
out
mov
mov
jl
add
add
xchg
je
fmull
test
test
lahf
ds
mov
sahf
pop
filds
in
mov
fcomi
jno
pop
sbb
or
push
or
fcomps
fstps
adc
ljmp
mov
add
rolb
dec
in
in
shrl
pop
dec
inc
jge
mov
add
stc
ljmp
mov
nop
daa
push
cli
add
xchg
hlt
push
add
sub
out
add
jge
lods
gs
negl
mov
mov
sahf
and
sysret
jmp
and
add
xchg
mov
mov
call
adc
in
rcrl
loop
xchg
ficompl
sbb
or
jmp
lock
mov
and
sbb
mov
pop
mov
inc
push
divb
or
xchg
cli
pop
inc
pop
xor
lret
mov
leave
les
shll
or
fidivl
movsb
test
xor
xor
dec
fsubrl
or
xor
pop
lgs
jecxz
cmp
ss
shlb
aas
xor
cmp
loope
out
rorb
add
in
or
arpl
sbb
dec
sbb
lods
and
scas
repnz
fisubrs
jb
jns
nop
mov
sbb
and
inc
mov
out
xor
or
xchg
insb
or
mov
sub
test
popf
leave
or
dec
scas
shlb
lods
fdivr
sbb
popa
push
ret
mov
mov
mov
call
repz
ficoml
xchg
add
adc
je
stc
push
mov
jl
sbb
mov
xor
sub
push
fcoml
shl
dec
add
stos
adc
faddl
nop
fisubrl
out
frstor
adc
dec
popa
ret
outsl
daa
scas
pop
dec
lahf
cmp
iret
in
add
loope
repz
pop
mov
cld
sbb
adc
sub
aaa
test
lods
cmp
and
add
fldenv
ret
sbb
pop
push
cmp
and
lahf
add
scas
in
cmp
repz
stc
lret
dec
fs
push
mov
and
stos
push
pop
lock
pop
or
out
hlt
mov
cmp
mov
shll
xor
sbb
insb
ljmp
xchg
dec
les
lahf
leave
xchg
lret
aam
outsb
xchg
dec
ficoml
inc
test
sbb
sti
push
add
mov
repnz
jbe
jg
in
add
bound
lahf
repnz
push
ret
sub
mov
mov
in
or
testl
mov
push
aad
sbb
push
in
popa
fcomip
int
into
cmc
mov
or
int3
or
jb
in
jg
xor
inc
dec
xchg
push
sub
jg
js
cmp
inc
jns
lret
in
mov
jae
adc
lahf
inc
cmovl
sub
mov
iret
mov
push
mov
enter
ljmp
dec
adcl
rcrb
cmpsb
sbb
add
in
dec
jmp
jns
ret
hlt
call
sub
ret
icebp
repz
xchg
xchg
dec
out
imul
lahf
scas
in
mov
mov
lock
les
mov
mov
lret
rcrb
cltd
pop
ret
sub
fpatan
arpl
jno
dec
or
mov
and
out
xor
jbe
popa
dec
sbb
jp
movsb
push
adc
mov
dec
mov
test
nop
sti
imul
jb
xchg
loop
ret
cli
fisttpl
or
shl
arpl
cli
or
repnz
loop
xchg
push
lea
jb
aad
arpl
and
gs
jae
cmp
push
stos
or
sub
pop
mov
ljmp
sbb
mov
xchg
cmp
cmc
push
or
gs
cmp
add
out
inc
ss
stc
and
adc
sbb
int3
repz
dec
mov
lcall
cmp
jb
aam
xor
push
fimull
sti
mov
les
loopne
int3
sahf
sahf
into
fmul
mov
repz
arpl
sti
add
lret
or
test
out
add
xor
enter
cmpsl
out
pop
not
sbb
xchg
pushf
add
rcrl
mov
cmpsb
inc
repnz
ret
nop
inc
lret
in
inc
in
sbbl
sub
push
inc
imul
push
enter
fwait
jmp
add
and
or
hlt
scas
gs
cwtl
or
orb
mov
mov
adc
push
and
or
add
mov
push
adc
imul
fstps
nop
les
nop
les
test
dec
adc
or
sbbl
lock
loopne
int
js
data16
adc
dec
or
orl
cld
aam
les
imul
jecxz
xchg
push
jmp
hlt
add
les
adc
pop
addl
lret
pop
shrl
pop
das
ljmp
out
aas
movsb
dec
xor
or
lock
mov
inc
sbb
daa
dec
orl
out
sbb
or
loop
sbb
push
cwtl
fildl
sahf
cmp
out
les
test
int
or
imul
push
lret
jnp
cmp
inc
cmpsb
repz
cmp
adc
push
add
les
mov
imul
adc
adc
mov
in
movsl
mov
pop
lret
imul
push
movsb
loop
push
fcoml
repnz
cmp
add
hlt
push
xchg
lahf
and
hlt
or
jge
mov
jae
cmpsl
out
push
loop
xchg
mov
imul
add
pop
add
or
mov
add
call
inc
inc
repz
sarb
fucom
aam
mov
mov
dec
and
mov
xchg
jg
inc
adc
aas
xchg
filds
or
adc
sub
mov
or
pushf
xchg
mov
inc
fimuls
inc
dec
faddl
sub
cwtl
pop
dec
addr16
pop
test
test
or
sbb
sti
je
leave
adcb
std
or
or
mov
xor
pop
cli
push
lahf
ret
enter
pushl
cld
inc
sub
push
push
inc
fldl
add
jmp
movsl
stos
xor
jne
movl
insl
sub
cmp
test
add
out
cltd
sub
hlt
adc
out
jle
aad
pop
xor
gs
push
cld
dec
loope
sub
jns
in
pop
add
dec
xor
scas
xor
psubw
pop
in
fstpl
xor
or
sbb
mov
into
negl
mov
xor
xlat
sbb
sub
lret
je
leave
stc
fldl
add
mov
fistpl
lcall
ja
sub
sub
lock
cltd
xor
add
dec
dec
enter
jp
popl
mull
sbb
sbb
mov
ficoms
add
cmp
push
sub
in
fsubrp
rorb
dec
jp
mov
or
adc
pop
ret
mov
mov
sbb
into
mov
shrb
mov
or
add
add
adc
push
sub
xchg
jne
std
sbb
xor
xchg
inc
addl
cmp
push
pop
int
xchg
cmp
add
mov
adc
jno
into
les
mov
mov
repnz
xor
jb
out
arpl
data16
mov
push
cld
mul
mov
sub
loopne
sub
mov
maskmovq
divl
fcompl
mov
cmp
jmp
fsubrs
outsl
int3
jae
test
or
xor
xor
push
in
pop
ret
loopne
jns
mov
dec
pop
dec
xchg
xchg
and
jmp
in
inc
or
dec
into
adc
imul
fiadds
add
cs
repz
std
or
adc
fistpl
xor
xchg
jecxz
inc
or
ljmp
cltd
into
adc
loope
aad
ficoms
xchg
loopne
clc
add
repnz
sbb
into
sarl
popl
adc
fnsetpm(287
jecxz
rorl
mov
adc
sbb
jge
into
js
xor
into
or
aad
xor
xlat
push
mov
rclb
push
lret
hlt
vmwrite
push
xor
sbb
sbb
add
pop
jge
xchg
xor
pop
and
les
lret
icebp
mov
cmp
adc
shl
and
xchg
jl
xlat
push
fiaddl
xor
cmp
sub
push
outsl
inc
dec
push
movsb
nop
fsts
cmp
lds
sbb
nop
loopne
add
mov
mov
jae
aad
not
loop
filds
addl
data16
mov
in
ss
push
imull
int
sbb
or
clc
mov
repnz
cmp
and
add
das
aam
xchg
adc
daa
jmp
and
xchg
dec
mov
arpl
pop
fldenv
sbb
push
adcl
repz
jno
div
lds
mov
sar
mov
xchg
mov
adc
xor
sbb
adc
ss
mov
mov
push
push
imull
mov
in
sbb
push
ret
cltd
sbb
xor
sub
add
jl
adc
add
dec
add
push
mov
sbbb
mov
imul
enter
ret
pop
add
jecxz
sub
pop
mov
fisttpl
jae
mov
sbb
shll
adc
mov
ja
inc
xchg
jne
inc
subl
ljmp
sub
mov
lods
mov
sbb
inc
xor
out
aam
dec
mov
aas
mov
movsb
inc
sahf
mov
clc
lcall
dec
or
or
or
adc
std
cmp
mov
aad
dec
or
cmp
rcr
test
or
push
jle
les
fldl
inc
aad
xchg
adc
sub
nop
mov
mov
adc
fdivs
jb
flds
mov
cwtl
repnz
into
lret
lds
stos
jmp
sub
into
movaps
out
xor
xchg
outsb
add
cmp
inc
sbb
lcall
in
add
push
xchg
push
adc
lds
lock
mov
jae
in
or
popf
ret
ret
pmaddwd
mov
add
or
arpl
setg
jp
push
adc
outsl
push
xchg
add
xchg
jne
insl
imul
mov
and
dec
lcall
jbe
dec
loopne
in
in
sub
mov
fimuls
icebp
dec
adc
adc
dec
xor
mov
xchg
cmp
jecxz
pop
and
nop
mov
dec
mov
or
out
popf
adc
mov
jp
jp
and
testb
dec
fisubl
test
paddb
sub
sbb
mov
mov
testb
in
adc
call
sub
pop
icebp
ds
xor
repnz
sub
ds
jb
adc
jb
jge
mov
test
jne
mov
fwait
adc
cld
negb
jecxz
out
sbb
ret
sbb
pop
mov
rorb
pop
or
repnz
je
into
notl
and
add
adc
sub
mov
push
sbb
pop
js
mov
arpl
mov
out
xor
mov
mov
xchg
mov
add
popf
imul
xchg
pop
sbb
popf
mov
lret
jb
sub
faddp
mov
jl
jb
sti
sbb
sarb
cmp
inc
shrl
jo
stc
jg
out
out
imul
adc
imul
sub
mov
mov
add
and
inc
sbb
adc
repz
push
orb
lcall
data16
xchg
repz
push
xchg
sar
mov
stc
ja
in
call
jb
xor
stc
dec
mov
lock
sbb
or
in
mov
jo
inc
lcall
jl
mov
adc
push
imul
les
or
lcall
add
jno
inc
and
mov
xchg
mov
adc
jb
or
ret
add
add
in
xor
sub
or
add
adc
pop
fs
in
lahf
data16
ja
sub
mov
in
inc
ret
jnp
sub
movswl
out
xor
pushf
push
xchg
imul
imul
in
lock
sbb
int
sbb
push
xchg
loopne
rcrb
or
out
adc
bnd
jo
push
or
ja
jp
repz
push
jl
xchg
sub
imul
and
fldl
jae
adc
cs
inc
aad
and
and
adc
sub
ljmp
mov
cli
je
mov
and
popl
lret
in
rcr
xchg
pop
and
xor
js
repz
adc
add
add
out
test
stos
lahf
push
inc
aad
xchg
in
test
fstp
shrb
shlb
hlt
pop
fisubs
pop
int3
fildll
sub
jnp
push
inc
adc
jne
nop
dec
fsubrs
jb
je
add
or
xor
mov
test
out
add
jnp
add
mov
sbb
mov
iret
shlb
lock
ljmp
inc
lods
cmp
or
mov
dec
dec
xorl
push
loop
mov
mov
lahf
sub
sub
popf
jbe
jmp
mov
aaa
sub
push
fildl
stos
inc
insb
je
ret
cltd
pop
lds
jl
or
push
mov
ror
cmp
mov
add
fwait
or
mov
rcll
stos
or
jno
aas
fildl
loop
ss
add
add
or
rolb
rorb
in
jae
adc
adc
cmp
and
mov
hlt
xchg
or
jae
adc
adc
nop
in
adc
pusha
add
cli
je
or
sub
pop
es
stc
add
mov
jno
add
xchg
lds
mov
mov
push
fwait
mov
jbe
fstpt
lret
mov
int3
lret
je
movsb
and
sbb
insl
int3
jne
push
mov
push
cwtl
fcompl
lea
or
or
sub
push
jle
in
inc
mov
mov
push
xor
leave
and
dec
testl
mov
pop
arpl
repnz
sub
jge
popf
fildl
or
sbb
nop
jle
inc
or
lock
pusha
fbld
loope
sub
or
mov
fs
or
xchg
mov
fadd
rsm
lock
pop
xchg
cmc
mov
mov
jnp
aaa
out
and
cmp
push
mov
pop
in
cwtl
pop
inc
stos
inc
jae
mov
inc
into
xchg
mov
xor
and
cli
sbb
loop
push
add
jl
in
xor
or
cmpsb
in
mov
add
cmpsb
nop
sub
sbb
adc
adc
mov
adc
add
ret
sbb
sti
add
push
or
ds
int3
je
add
mov
rcrl
mov
adcb
jecxz
sbb
aam
test
and
fisubrl
cwtl
adc
clc
mov
rcll
mulb
out
enter
adc
dec
xchg
mov
push
je
dec
pushf
add
dec
xor
in
and
data16
dec
push
cmp
fdivs
xchg
imul
es
orb
into
inc
sub
add
scas
sub
dec
aad
pop
ret
lret
xchg
xor
out
xor
dec
push
nop
out
mov
dec
fstpl
cmp
sub
rcl
sub
aad
cmp
inc
sub
sbb
stos
iret
outsl
js
sbb
pop
or
inc
call
ret
cmp
mov
mov
rcrb
xor
adc
inc
mov
lret
cmpb
popf
push
or
into
enter
lods
rolb
orl
addl
testl
mov
rorb
mov
add
and
aad
cmp
idiv
add
rcl
sub
shll
rcr
out
mov
jle
test
loop
fcoml
or
xchg
fs
dec
mov
pop
jno
mov
mov
les
mov
and
les
mov
sar
pop
lods
inc
or
lahf
out
ret
add
rol
les
cs
in
mov
not
or
add
sbb
mov
adc
sub
add
jle
imul
sbb
testl
sub
lahf
mov
ja
pop
add
inc
inc
adc
and
stc
and
sar
and
ret
xchg
hlt
sar
or
mov
nop
lahf
mov
fistpl
repnz
stc
push
xchg
in
jo
add
fnsave
inc
nop
loop
push
push
dec
adc
adc
movsb
lahf
add
xor
imul
sbb
mov
dec
adc
enter
pop
mov
cmp
jbe
mov
rcrl
xchg
sbb
add
adc
les
cld
roll
xchg
lea
xchg
les
jne
push
pop
bnd
pop
ljmp
pop
test
push
gs
pop
les
int3
dec
jle
xchg
xchg
loopne
loopne
insb
sbb
xor
add
jecxz
lret
stc
pusha
fmull
mov
mov
lea
mov
aas
pop
mov
ljmp
mov
xor
cmpb
jne
inc
inc
jp
cs
fsubrl
add
pop
jb
into
hlt
jo
aas
jecxz
inc
ret
pop
test
xor
cli
sub
outsl
add
fistl
or
xchg
mov
xchg
outsb
loopne
sbb
adc
add
lahf
repz
inc
adc
pushf
bound
cld
scas
sbb
push
decl
in
adc
jbe
sbb
sub
push
orb
hlt
add
sub
or
or
mov
dec
mov
or
xor
clc
add
fs
or
sbb
sbb
or
inc
sub
pop
ror
mov
psubusb
fisubl
adc
mov
or
cli
js
mov
rcrl
mov
push
int
cltd
adc
lahf
adc
sub
ret
adc
dec
adc
xchg
in
addb
xlat
push
push
lret
in
int3
stos
loop
or
xchg
sbb
sti
cli
ds
imul
or
mov
rorb
mov
push
mov
in
sub
out
push
adc
cmp
subb
sbb
add
test
imul
loop
push
adc
sti
pop
shll
add
sbb
and
dec
ret
in
int
pop
out
inc
cmp
sbb
psrlw
leave
or
pop
decb
sub
inc
dec
loope
stos
inc
icebp
mov
mov
movl
lahf
rcr
inc
or
fdivs
push
xor
sbb
dec
jbe
sarl
xchg
fisubrs
bound
dec
pop
or
and
ds
cmp
inc
or
in
iret
or
xor
hlt
idivl
xchg
cmp
mov
xchg
xor
cwtl
mov
js
push
inc
imul
lret
mov
repnz
jl
sbb
sbb
xchg
mov
adc
inc
dec
into
add
or
pop
repz
jl
push
insb
pop
out
repz
sub
mov
sub
lret
or
cld
xchg
cmp
out
stc
sarl
jmp
mov
mov
mov
jbe
into
cltd
xor
jp
jmp
mov
shll
sbb
add
in
pop
mov
mov
push
inc
lea
mov
rorb
int3
loope
mov
push
in
es
pop
cld
mov
lock
xor
adc
sbb
jae
jo
inc
data16
cmp
mov
or
fisubrl
pushf
adc
das
push
nop
xor
sar
cmp
push
or
lock
jp
push
lahf
mov
dec
stos
ds
fsubrl
and
adc
mov
les
push
xchg
xor
out
cmpsb
mov
subl
push
cmpsb
or
or
mov
push
test
push
pop
xchg
sbb
pop
jl
ret
out
mov
xor
jno
push
add
shl
push
in
dec
sbb
adc
or
mov
mov
sbbb
je
mov
sarb
int3
add
das
jmp
mov
jb
int
jne
xor
sbbb
scas
test
cmc
cmpsl
push
rclb
out
sub
or
jle
test
in
imul
mov
pop
lretw
push
scas
pop
out
pushf
repnz
mov
dec
sub
shr
push
int3
cmp
cld
ficompl
clc
je
or
jae
mov
sbb
into
xor
jne
jl
add
or
xchg
add
lret
sub
pop
dec
push
xchg
ja
fildl
add
sub
mov
daa
repnz
lock
push
xor
fmul
fstl
mov
xchg
jb
aas
xor
xor
sarl
mov
call
cld
sbb
add
mov
shl
jnp
scas
lcall
lret
add
adc
shll
gs
xchg
xchg
add
or
ficoms
int3
lcall
mov
sbb
dec
in
sub
pop
cmc
mov
fsubrl
mov
clc
xchg
and
push
sub
aas
lret
jmp
dec
inc
ret
and
push
mov
lock
lcall
movq
idivl
lret
jnp
cmp
xchg
les
subl
add
mov
aaa
mov
jle
sub
push
xlat
fs
aad
pushf
ljmp
daa
and
loop
xchg
cwtl
cmp
lods
dec
or
fs
cmp
xchg
push
xchg
xlat
into
push
xchg
or
xlat
rcrb
cmp
dec
shlb
ss
xchg
int
mov
iret
neg
mov
rcrb
adc
mov
add
ja
mov
neg
dec
sbb
mov
dec
test
sub
jbe
clc
adc
push
mov
sub
and
aad
dec
add
in
loope
add
loop
xor
rcrb
cwtl
daa
mov
arpl
sbb
orb
scas
push
or
xchg
mov
jbe
in
rclb
imull
inc
idivb
sbb
cmp
addb
xchg
cmpsb
lods
das
cli
clc
push
fistpl
inc
cmp
jge
adc
dec
adc
add
mov
divl
cmp
adc
ret
sahf
sbb
in
push
mov
call
scas
js
mov
mov
repz
loop
pop
data16
call
add
sbb
add
jmp
ja
or
or
fisttpl
clc
mov
insl
outsb
in
cmp
stc
stos
adc
jno
dec
cli
fsubl
out
stos
lahf
lret
mov
ret
fidivrs
push
out
add
cmp
or
push
xor
mov
test
fwait
mov
add
sbb
sub
mov
xchg
jecxz
out
mov
sbb
and
push
sbb
mov
jle
sbbb
lock
sbb
insl
inc
mov
mov
pop
lahf
and
ss
pop
xor
pop
push
lret
push
call
pop
incl
orl
xchg
pushf
push
cmpsl
mov
inc
push
sub
jp
pop
mov
inc
add
scas
aam
call
test
loopne
aad
lret
sub
into
or
push
mov
jae,pt
and
xchg
or
cli
dec
clc
mov
mull
jge
push
pop
ljmp
loopne
iret
inc
out
sub
sbb
int3
inc
cld
in
cmp
mov
pop
push
push
mov
ds
cld
push
leave
sub
jb
mov
or
ret
cmpsl
bnd
lahf
rcll
sub
mov
mov
decl
fisttpll
sub
sbb
and
jnp
mov
pop
in
faddp
mov
jge
out
add
sbb
mov
mov
xor
dec
pop
out
lods
adc
out
pushf
xchg
jae
inc
dec
dec
adc
leave
test
ja
jl
sub
iret
mov
xor
mov
or
xlat
sbb
jo
mov
or
les
repnz
notb
dec
push
mov
mov
push
lcall
jae
stos
sub
int3
xchg
push
mov
mov
adc
add
iret
dec
xor
and
repz
into
mov
adc
or
out
arpl
cmp
popa
pop
sub
sbb
dec
pop
ss
dec
in
cmpsb
inc
pusha
sbb
add
xor
icebp
sub
sarl
cwtl
repnz
xor
mov
fstpl
mov
fidivrs
or
adc
and
push
push
sbb
imul
lahf
add
jecxz
dec
sarl
dec
mov
mov
add
add
int3
sbb
push
mov
fsubl
mov
jg
pop
in
xchg
int
adc
sub
in
lock
in
fldt
adc
push
ljmp
sbb
dec
or
adc
fidivrl
mov
in
dec
pop
dec
add
xchg
cmp
lea
in
hlt
mov
shl
mov
xor
movsb
xor
or
push
pop
mov
xchg
sbb
stc
and
cmp
pop
adc
mov
repnz
sbb
xlat
mov
dec
xor
ds
ret
jmp
pop
clc
mov
or
cmp
in
add
faddl
sarb
sbb
xor
add
add
adc
test
pop
fcomps
or
adc
mov
adc
lock
aad
adc
dec
movsb
mov
or
lahf
leave
pop
mov
or
push
dec
sub
gs
idivl
jae
shl
cmp
or
push
and
push
hlt
jns
divb
mov
bound
push
add
leave
xchg
mov
aas
jns
or
xchg
sub
notb
xchg
lahf
cs
iret
mov
mov
daa
lret
xor
xchg
sub
or
add
push
push
or
cmpsl
rcl
pushf
pop
xchg
loope
sbb
sub
sarl
jmp
push
rolb
hlt
sub
cmpsb
das
fsubrs
or
add
xchg
rorb
push
pop
leave
or
sub
dec
fadd
adc
outsl
ret
je
cmp
notl
pop
jno
jmp
cmp
adc
jns
mov
les
cmp
pop
sub
dec
sbb
cltd
mov
add
icebp
idivl
adc
out
stos
and
pop
insb
imul
adc
cmc
popa
scas
lock
sub
xchg
mov
xor
adc
fsubrs
sub
dec
sub
sub
scas
jns
add
les
jns
cmp
dec
cli
fs
adc
inc
push
cmpl
lock
pop
dec
jbe
mov
ja
adc
xchg
push
add
inc
jmp
in
ljmp
aaa
mov
push
testl
cld
sub
movsb
inc
xchg
pop
mov
jg
add
mov
adc
cmp
sub
pop
ja
jns
in
setae
add
nop
push
or
pop
adc
icebp
and
or
shll
out
lds
mov
in
mov
orl
mov
addb
ret
insl
xor
pop
aas
addl
sbb
push
push
mov
fidivrs
popa
add
pop
icebp
lds
aad
push
push
es
pop
mov
dec
xorl
notb
push
sub
pop
push
mov
push
pushf
push
push
push
lods
mov
lock
rorb
roll
cvtdq2ps
add
xor
dec
adc
repz
call
jp
cmp
and
mov
dec
push
ret
adc
adc
adc
sbb
push
xchg
push
push
jo
or
jae
and
or
call
shrb
xchg
rclb
add
inc
jnp
test
ficompl
ja
and
notl
pop
pop
xchg
push
adc
or
or
out
sub
or
loope
and
fisubrs
ss
or
mov
adc
add
sbb
mov
push
adc
sub
loop
in
adc
cmp
iretw
outsl
mov
sbb
sub
adc
adc
rclb
mov
sahf
mov
stc
and
push
fsubp
inc
cmpl
jmp
add
jnp
xor
lahf
loopne
mov
push
inc
test
pop
in
mov
or
rcrb
or
mov
dec
rolb
jp
sbb
outsb
or
mov
lods
das
outsl
jbe
test
mov
lods
mov
lahf
test
imul
jmp
cmc
dec
sub
adc
add
mov
add
les
cs
mov
lret
add
inc
inc
out
mov
pop
and
ret
dec
pop
insb
test
hlt
jp
cmp
call
mov
ljmp
icebp
sbb
stos
adc
int3
scas
dec
mov
lret
es
in
pushf
movsb
in
lahf
jmp
js
or
sub
rcrl
inc
lret
mov
adc
add
jae
jae
clc
pop
mov
sub
push
repnz
add
pushf
aas
fcompl
cmp
cmp
adc
sti
xchg
bnd
adc
loop
adc
pop
and
repz
adc
scas
popf
or
call
xchg
push
add
xor
sub
cltd
xchg
inc
dec
ljmp
xchg
mov
shl
adc
xor
ds
add
cmp
flds
or
in
or
notl
adc
in
pop
jo
iret
andl
sbbl
cmp
test
add
ret
xacquire
stc
in
mov
inc
icebp
dec
xchg
xor
or
pop
in
out
ljmp
incb
push
push
mov
cmp
icebp
inc
adc
add
push
out
sub
push
leave
nop
test
xchg
lret
or
add
aaa
ds
pop
adc
mov
push
or
push
outsb
adc
jno
dec
lea
mov
rcrl
pop
or
loope
int
sub
sub
inc
pop
inc
mov
or
insb
iret
cmp
sarb
adc
jbe
imul
adc
test
mov
xor
sbb
sub
rorl
mov
or
push
mov
xor
add
xor
or
xchg
in
mov
inc
and
stos
sbb
faddl
pusha
std
popa
mov
hlt
rolb
rorl
div
sub
jmp
rcll
sbb
repz
ds
inc
daa
jl
sbb
add
repnz
adc
cmp
nop
fsubrl
push
rep
jp
mov
sbb
xchg
inc
out
lret
cltd
stc
fmuls
sub
pop
push
das
cmp
inc
test
das
rorb
cmp
mov
adc
addr16
fucomi
push
push
loopne
add
jecxz
ljmp
int3
in
push
jo
mov
ficoml
test
push
sub
rclb
sbb
pusha
fldenv
lahf
out
push
rcr
xor
sub
jp
pop
jecxz,pt
jnp
ja
add
sbb
aaa
sbb
inc
inc
insb
add
dec
add
adcl
icebp
dec
dec
in
mov
imul
iret
test
outsb
dec
push
adc
es
lods
mov
and
adc
out
in
xor
out
cmp
sub
pop
xchg
movsb
shrb
sub
pushf
insb
adc
sbb
lret
lret
dec
enter
rorl
push
push
and
mov
out
stc
push
and
adc
fildl
adc
inc
cmp
scas
mov
jmp
mov
xor
inc
mov
cmp
in
mov
jl
cmp
jmp
jae
enter
push
cmp
mov
cmpsl
js
cmp
adc
and
out
xor
xchg
or
jb
sbb
loop
pop
imulb
pop
dec
aaa
aas
ret
add
in
or
stos
push
jmp
push
add
jg
adc
sub
sbb
mov
and
imul
in
fwait
scas
lods
in
or
inc
lahf
in
adc
shl
mov
jns
leave
dec
dec
xchg
pop
hlt
lock
or
sub
sub
fcmovnu
jnp
roll
frstpm(287
fwait
inc
cmc
into
hlt
mov
pop
adc
mov
sub
pop
popa
lahf
notb
rorl
adc
push
push
add
pusha
xchg
pop
and
icebp
mov
sbb
inc
add
mov
cltd
mov
ja
cmp
add
inc
enter
mov
push
dec
jle
stos
js
inc
mov
sub
add
jae
adc
mov
out
push
mov
pop
and
or
pushf
xorb
push
hlt
data16
or
dec
inc
incl
xor
jg
cmp
mov
add
dec
in
jae
push
fwait
jo
test
adc
inc
pop
add
int3
fcmove
sbb
fmulp
cmpsb
or
mov
sahf
mov
mov
ss
fstp
loope
fwait
cld
out
sbb
push
sbb
or
xor
or
mov
jae
repz
add
xor
mov
in
outsl
incl
loopne
sahf
xchg
pop
and
scas
out
hlt
jbe
jne
lock
out
lret
sbb
ret
mov
fbstp
pop
pushf
sbb
outsl
push
in
mov
add
fcmovnu
pop
push
pop
cwtl
mov
cmpsl
inc
mov
xchg
inc
jae,pt
xchg
or
pop
out
xor
cmc
dec
cltd
test
or
push
xchg
inc
sbb
fsubrs
pop
loopne
shrl
pop
sbb
sbb
inc
pushf
push
mov
aad
sub
mov
sub
mov
add
xchg
xchg
stc
adc
xchg
jns
pusha
mov
jb
mov
mov
sbb
jno
jno
jp
test
iret
sub
lock
sar
mul
roll
xor
pop
in
fadd
movsl
dec
test
int3
fldt
mov
dec
ja
adc
les
or
mov
adc
idiv
and
sbbb
pop
mov
mov
mov
fptan
dec
add
ljmp
sub
pushf
push
mov
sub
cmp
mov
sub
call
jge
nop
sub
shll
push
sbb
add
push
sbb
mov
adc
mov
int3
sbb
xchg
in
mov
jbe
mov
add
xchg
pop
mov
roll
scas
add
repz
mov
pop
imul
sbb
sbb
mov
pop
lock
and
lret
inc
jnp
push
and
scas
push
gs
pop
xlat
jl
lahf
pop
fs
dec
xor
daa
xor
bound
pop
or
pop
adc
pop
out
out
std
gs
xchg
iret
pop
sub
test
je
loope
mov
filds
or
imul
mov
je
sbb
in
push
jns
dec
test
mov
aam
sbb
or
adc
mov
adc
out
call
pop
or
ret
xchg
sbb
pop
rcrb
js
lcall
inc
and
jg
mov
add
lcall
mov
or
lds
int3
add
adcb
enter
mov
or
mov
loop
ret
pop
xlat
test
sub
inc
mov
cmp
push
add
push
cmp
add
or
clc
pop
add
dec
jno
sti
xchg
sbb
or
lods
pushf
mov
sub
xchg
std
or
lods
mov
sub
lcall
pop
insb
add
iret
pop
xchg
dec
test
sub
aaa
outsb
push
cmp
and
aaa
icebp
pushf
xchg
cmc
test
jo
mov
ficoms
ret
stos
or
addr16
dec
dec
leave
push
inc
movsb
incl
jo
in
cmc
in
lods
mov
cmp
xchg
dec
dec
ret
dec
rcrb
dec
fwait
jo
sbb
jg
push
xchg
push
daa
call
into
adc
lods
jo
add
lods
or
mov
shll
lahf
call
shl
adc
stc
jmp
loop
popa
push
pop
divl
into
push
pop
cmp
jo
cmc
notb
mov
fs
or
ficomps
mov
inc
nop
sub
jo
shr
aad
notl
clc
into
sar
inc
jo
in
cmc
cmp
mov
mov
sarl
dec
inc
ret
pop
rcrb
inc
fwait
jo
sbb
jg
push
xchg
push
daa
call
into
adc
lods
jo
add
jo
jmp
or
xchg
ficoms
cmp
in
add
les
shlb
push
sbb
jmp
or
mov
lcall
add
shll
jmp
or
push
pop
and
or
push
dec
enter
test
push
add
jle
mov
clc
and
cmp
sbb
adc
ss
mov
sub
adc
ss
mov
js
int
dec
mov
mov
pop
cli
add
aaa
and
dec
fmull
xor
ret
push
xchg
fisttps
push
push
imul
xor
or
aaa
js
nop
movsb
and
push
shlb
mov
out
pop
mov
call
decb
adc
add
sbbl
xor
or
pop
mov
sbb
push
mov
movl
sbb
loope
cld
xchg
inc
push
xchg
mov
cmpsb
in
or
enter
add
cmp
and
push
pop
sub
jb
push
jo
lahf
lds
sbb
mov
cld
push
xor
mov
dec
cmc
or
js
xor
xor
pop
mov
rcrl
lret
jo
or
arpl
sub
dec
pop
or
sub
lahf
xor
imull
in
out
sbb
cmp
in
imul
pop
xchg
pop
or
loop
cmp
test
loope
push
mov
add
je
or
pop
rcrl
shrb
sarl
xchg
xchg
loopne
mov
mov
xor
rolb
sbb
enter
ret
pushf
sbb
push
mov
mov
and
ficoml
fwait
adc
adc
add
out
mov
mov
sub
add
or
xchg
mov
mov
pusha
or
adc
repz
repnz
push
mov
mov
and
push
idivl
push
cmp
into
pop
cmp
jp
dec
jns
pop
jp
ret
cmp
xchg
loope
hlt
push
mov
mull
in
adc
cmpsb
dec
pop
add
adc
adc
xchg
clc
fisttps
lret
or
cmp
xor
cmp
jge
jne
xor
add
inc
ljmp
or
push
push
nop
lea
ss
pop
mov
sub
leave
pop
in
mov
imul
inc
sbb
adc
ja
mov
roll
les
cld
stc
sbb
movsl
mov
push
pop
or
scas
mov
ret
ficoms
mov
imul
pop
pop
adc
shll
jbe
in
mov
mov
rclb
idivb
push
in
pop
cmp
sub
mov
fcoms
lahf
jl
scas
push
pop
pop
push
xchg
pop
mov
push
stos
cmp
mov
or
mov
or
hlt
sti
out
pop
xor
adc
xor
adcb
shlb
sub
cltd
ss
jno
sbb
rorb
lds
or
loop
mov
stos
testb
sar
push
push
sbb
add
jg
jl
sti
adc
loopne
add
loope
jmp
in
jl
jmp
xchg
add
sub
mov
rcll
cmp
aam
loopne
xchg
sub
fcmovnbe
add
pop
adc
push
dec
sub
out
pop
lods
jae
cmp
jmpw
or
sub
ss
test
jge
loop
lahf
stos
mov
push
xchg
pop
mov
movsl
sbb
push
das
sarb
or
cmpsb
adc
arpl
inc
mov
add
mov
dec
jb
dec
into
out
xchg
and
nop
jo
dec
cmpsb
jmp
cmp
mov
hlt
cmp
inc
icebp
int3
pop
test
inc
add
mov
xchg
jo
fldl
mov
ret
les
cmp
cs
adc
xchg
pop
nop
lock
sbb
in
dec
inc
jmp
cmp
dec
popa
push
outsl
add
popf
mov
in
aad
aad
lret
sbb
mov
add
xor
ds
sub
orb
jge
cwtl
sub
push
xchg
addb
xchg
push
test
psubb
sub
nop
xor
leave
jns
jb
stos
sub
xlat
push
cmp
fnsave
mov
push
stc
jmp
sub
sbb
sub
inc
or
int3
or
loop
push
or
inc
es
mov
int
push
sub
aas
push
inc
mov
add
loope
shl
jno
push
in
aas
sub
into
add
mov
xchg
dec
int
mov
or
sbb
orl
sub
lea
scas
push
push
xchg
mov
stc
push
add
addb
cmp
inc
sub
adc
divb
mov
mov
cmpsl
push
mov
xchg
mov
sbb
lret
and
jle
mov
jmp
fildl
mov
cs
lock
fcoml
sbb
sbb
inc
outsl
hlt
aad
add
popf
and
push
loopne
pop
stc
repz
push
or
imul
push
pop
aam
leave
mov
add
pop
add
xlat
jb
jbe
or
movsb
test
out
jne
arpl
push
mov
hlt
xchg
sub
push
faddl
sub
sarl
imul
int
nop
rorl
mov
xchg
inc
inc
iret
jns
loopne
mov
ja
cmc
int
iret
fucom
and
cli
dec
cli
and
cmp
shl
divb
aad
fst
cmp
or
mov
cmp
loopne
adc
adc
cmp
xchg
mov
push
xor
cmp
repnz
divb
js
add
adcb
std
aad
loop
shrl
int
out
jge
insb
adc
mov
fldl
add
daa
ss
outsl
mov
add
push
cmp
jno
mov
mov
and
int
popa
or
aas
sub
rclb
adc
dec
inc
mov
push
das
sbb
pop
xchg
sbb
mov
sahf
fsubrp
push
adc
mov
mov
mov
aas
xchg
jmp
add
and
scas
lfs
xchg
aas
out
jb
jae
and
test
movsl
push
adc
sub
add
imul
int
mov
mov
and
jg
repnz
in
lahf
or
mov
jl
repnz
mov
aaa
aas
push
addr16
cwtl
or
loope
or
in
push
fstpt
outsl
mov
pop
cmpsl
hlt
inc
scas
sub
sub
mov
stc
repz
mov
sub
stos
rcl
scas
int
jmp
and
adc
lods
adc
dec
push
jne
fisubrl
sbb
push
cmp
insl
outsl
xchg
cwtl
sbb
orl
loopne
xchg
outsb
jp
fldl
gs
jl
pop
subb
sub
dec
and
sbb
sub
ret
adc
sti
mov
inc
fucomp
sbb
adcl
into
sub
cmp
jo
dec
cli
jo
fwait
movsl
sarb
adc
scas
in
adc
in
hlt
mov
pop
add
add
out
daa
push
imul
jg
adc
adc
sbb
sbbb
insl
into
ja
and
pop
sub
inc
das
hlt
lods
test
xor
loop
push
push
pusha
enter
fidivl
or
insl
or
movsb
jmp
popa
mov
je
and
inc
adc
iret
sub
cli
int
adc
add
or
arpl
cmp
xchg
mov
sub
dec
or
shlb
mov
mov
cmc
adc
jp
mov
sub
jnp
out
push
in
inc
imul
or
insb
mov
sahf
jns
and
pop
sahf
pop
pushw
sbb
loope
add
lcall
enter
ret
or
cli
addr16
repnz
cmpl
test
or
push
mov
and
and
call
movb
xor
pop
add
pop
iret
orb
push
push
add
in
sbb
repnz
adc
call
enter
or
xor
adc
scas
inc
out
inc
push
add
mov
out
mov
adc
jbe
loope
push
or
adc
loopne
adc
into
mov
lods
mov
loopne
mov
cmp
insb
aam
scas
test
fdivrp
fidivs
add
iret
dec
jns
jb
or
add
cltd
int
mov
mov
rcrl
adc
xor
jne
int
sub
pop
jnp
int3
sbb
lahf
add
sbb
lods
mov
addb
sub
adc
cld
iret
or
mov
insb
pop
test
rol
adc
dec
ljmp
loop
repnz
jae
aad
xchg
aad
aam
ret
push
and
call
lret
shlb
adc
sahf
sbb
push
xlat
jmp
sub
ficomps
adc
jo
jecxz
mov
xlat
fucomi
cmp
push
icebp
fsubl
aas
fisubl
sti
movsb
aam
push
lods
popa
sbb
icebp
rcrl
or
loope
arpl
hlt
add
movsb
push
test
or
aam
mov
mov
inc
sub
popf
ficoms
mov
fists
push
insl
cmp
rolb
enter
pop
adc
push
jae
or
imul
push
movsb
in
sub
pop
adc
notl
adc
ret
or
jne
aad
arpl
adc
sub
and
pushf
jae
popf
mov
or
mov
aad
das
call
sub
lds
movsb
stc
pop
push
push
fidivrl
adc
repz
dec
mov
jg
mov
shlb
xor
setbe
iret
fidivl
cmp
push
push
xchg
pusha
pop
mov
rorl
movsb
nop
mov
dec
std
shlb
pop
push
insb
iret
or
shrb
pop
lods
push
popf
shlb
stos
ds
add
cli
jl
out
dec
mov
out
popf
xor
jp
mov
sbb
add
mov
jnp
and
xor
sub
stc
push
hlt
sub
mov
rcrb
sub
mov
idiv
jb
insb
scas
lods
bound
add
loopne
sahf
or
mov
pop
test
adc
idivl
test
lahf
into
fs
or
shrl
test
lock
pop
and
or
sub
psrld
mov
mov
aam
repnz
fisttpl
cmp
fs
mov
add
xchg
arpl
pop
xchg
iret
pop
bnd
aaa
pop
xor
mov
insb
cwtl
push
in
push
jne
sti
rolb
inc
loop
out
pop
mov
out
inc
pushf
jne
add
push
or
aaa
fldt
mov
mov
xor
push
popf
rorb
adc
sub
cmp
mov
inc
and
inc
sub
scas
xchg
cmp
mov
rcr
inc
pop
loopne
and
sbb
or
mov
std
mov
pop
stc
cmp
iret
or
fcomps
or
stc
repz
mov
fistpl
loope
adc
fistps
int
inc
xchg
lahf
int
jge
add
jo
push
loop
pushl
pop
outsb
popa
jae
push
mov
xor
push
andl
test
pusha
lahf
adc
in
lods
adc
lock
rorb
je
ja
bound
sub
je
or
fiadds
cld
cld
hlt
hlt
add
loop
sbb
jae
jmp
push
jg
mov
sahf
jns
xchg
sbb
imul
fs
out
ja
jp
outsb
in
int
push
and
pop
call
dec
mov
mov
testl
cmp
mov
and
adc
adc
lds
add
or
and
in
es
push
js
nop
push
jl
or
in
adc
xchg
cwtl
out
mov
movsl
push
push
add
push
mov
pop
out
aaa
rep
or
lds
mov
jno
fmul
mov
mov
sarb
dec
sti
cmp
xchg
sti
mov
aad
insb
mov
sub
and
shl
in
inc
mov
sti
in
inc
mov
pop
iret
movsl
add
and
ljmp
mov
add
or
rolb
or
jns
out
cmp
popf
adc
pop
sbb
les
xor
cmp
xchg
out
dec
sbb
pop
inc
orb
jno
add
fs
pop
or
mov
repz
and
imul
sbb
imul
les
mov
loopne
add
inc
add
sub
aad
and
add
out
pop
fstl
dec
push
cmp
mov
and
stos
dec
adc
mov
cmp
pop
lret
cmp
scas
add
xchg
loopne
mov
pop
add
xchg
mov
mov
or
push
clc
ja
inc
adc
xchg
xchg
cmc
mov
fimull
or
adc
nop
mov
dec
mov
xchg
adc
adc
shlb
or
mov
sub
in
push
push
cld
push
cwtl
jl
push
adc
seto
fistl
or
iret
lods
sub
or
adc
and
or
xor
ret
jecxz
inc
mov
cmp
and
dec
cltd
jmp
fistpll
adc
jne
das
leave
stc
push
mov
test
inc
inc
mov
sbb
pop
out
insl
rcrl
mov
inc
add
mov
xchg
cmp
sbb
dec
adc
cmp
jp
adc
lahf
ret
out
adc
leave
push
insb
push
sbb
jl
repz
mov
pop
add
xor
inc
not
push
cmp
aaa
pusha
sub
xor
fisttpl
adc
scas
ret
movsb
cs
dec
or
pop
lahf
lock
adc
movl
mov
and
daa
or
icebp
cmpsb
mov
data16
jns
push
out
int3
add
fidivs
inc
nop
fwait
jnp
in
inc
les
xor
add
sahf
jp
sub
xchg
mov
bnd
jb
push
push
sbb
mov
jae
push
push
adc
or
xor
lods
sbb
or
repnz
fadds
or
or
pmuludq
mov
push
adc
int3
roll
mov
xchg
aam
ss
dec
ja
aaa
stos
cmc
cmpl
dec
add
sub
mov
or
mov
fwait
and
pushf
lea
enter
ret
in
add
jne
mov
sti
orb
add
adc
lock
add
iret
mov
subl
dec
add
mov
jecxz
inc
fisttpll
clc
xchg
out
xor
int3
push
xchg
push
push
jae
adc
xchg
adc
repz
lahf
dec
jne
sti
lds
or
push
push
adc
ds
sub
push
jae
xchg
shrb
mov
cmpsb
icebp
fdivrl
mov
and
cmp
mov
mov
in
add
bound
icebp
sub
mov
mov
sub
daa
sar
out
add
es
sub
mov
mov
mov
push
lods
fstpt
xor
xor
dec
jmp
ljmp
mov
test
pusha
mov
mov
movsb
lock
test
xchg
sbb
nop
inc
stc
push
jo
stc
mov
push
aad
sti
or
sub
jo
pushf
or
xor
ror
arpl
or
lods
stos
mov
dec
aad
je
adc
or
sub
cmp
outsb
dec
push
ss
cmc
mov
sub
or
cwtl
adc
xchg
xor
xor
inc
push
lret
mov
xor
icebp
fmuls
push
lahf
cld
ja
adc
sub
sub
lds
sahf
icebp
xchg
fisttpl
jb
sbb
mov
btrl
cmp
jnp
jbe
inc
sbb
sub
sarb
outsb
into
inc
mov
js
pop
xchg
call
repnz
mov
add
popf
cmp
pop
out
dec
jne
arpl
inc
and
test
mov
jmp
or
out
mov
js
data16
mov
mov
mov
cmp
loopne
xchg
lahf
and
inc
into
xor
add
cmp
xchg
inc
pop
mov
xchg
out
stc
sbb
lds
add
push
andb
rclb
sbb
adc
or
pushf
fadds
push
in
xlat
mov
jl
mov
add
cmp
rorb
dec
loopne
adc
lods
push
repz
imul
jecxz
aad
mov
repnz
sbb
lods
mov
add
xchg
mov
arpl
mov
faddl
les
sbb
jle
or
sub
dec
ficoml
or
adc
dec
imul
ss
movsl
push
out
jge
fs
add
push
ror
push
cld
imulb
nop
cmp
inc
xchg
mov
hlt
stos
or
or
push
cmp
push
mov
or
push
sub
hlt
sbb
cmpsb
jae
sub
adc
mov
int3
and
out
sub
pop
jne
mov
push
dec
hlt
bound
shll
and
adc
sub
mov
adc
fisttpll
jnp
adc
dec
mov
cmp
or
adc
mov
aad
cltd
repz
add
rorb
pop
mov
shrl
je
mov
adc
or
adc
lcall
shrl
or
insl
and
popf
cmp
lds
mov
sub
push
rorl
cmp
xlat
call
fadds
xchg
stc
cmp
and
pop
xlat
push
loop
iret
aaa
loope
mov
xacquire
mov
aad
xor
push
arpl
aam
xchg
xor
jmp
int
push
cwtl
test
insl
mov
or
fdivl
jmp
cmp
xchg
push
sahf
cmp
xor
jecxz
mov
hlt
aad
ss
cmp
dec
fldenv
add
mov
into
sbb
stc
pop
lahf
fdivs
push
adc
and
adc
push
mov
mov
scas
xchg
inc
sub
outsl
adc
push
loope
int3
mov
lds
int3
mov
shl
rcl
mov
push
loope
rcrb
cmp
mov
roll
push
xchg
inc
or
jo
leave
cmpsb
fsub
scas
outsl
ds
ret
loope
xchg
ja
pop
aas
xor
mov
cmp
lahf
ret
add
repnz
adc
lahf
int
adc
mov
pop
jb
dec
mov
es
hlt
mov
pushf
adc
cli
or
mov
or
in
pushf
cmp
jnp
stos
push
inc
sbb
test
hlt
sti
xorl
dec
cs
repnz
mov
test
mov
enter
xlat
xor
test
xor
adc
mov
sbb
sbb
je
mov
popf
mov
mov
xor
cs
mov
fsubrs
ljmp
jl
fsubrp
les
addr16
aas
stos
adc
les
sbb
pop
xor
shll
rcll
sub
add
mov
mov
or
xchg
test
into
add
lahf
leave
popf
das
je
daa
jnp
inc
out
push
dec
aaa
push
push
xchg
push
lret
inc
loop
mov
int3
xor
sub
or
sub
cltd
pop
cs
sub
push
stc
cmp
sbb
add
push
mov
dec
rcll
clc
sbb
pop
or
in
cltd
jbe
mov
xchg
pop
ss
out
push
ss
faddl
dec
call
mov
pop
dec
mov
and
sbb
cmp
jae
jno
rcrl
adc
orl
push
cmpsb
jns
add
xchg
sbb
into
sbbl
fldln2
xor
push
jbe
mov
lods
std
and
data16
jp
lahf
sti
xor
movl
les
cld
lcall
out
sarb
sub
push
sarl
or
lods
sub
mov
mov
test
mov
insl
adc
mov
adc
xchg
and
bound
js
lret
or
push
xchg
adc
or
add
cmp
and
cld
ret
sub
jp
or
or
mov
enter
in
dec
scas
add
test
dec
stc
repz
add
xor
std
sub
insb
push
lahf
enter
jp
xchg
mov
ja
xor
adc
pop
mov
adc
jmp
push
in
cmp
xchg
iret
test
int3
mov
cmp
and
pop
mov
add
add
cld
add
dec
hlt
adc
xor
scas
pxor
jo
bound
jp
fwait
outsb
fnstsw
js
xchg
or
or
out
add
mov
pop
mov
or
stc
cmp
and
cli
in
mov
test
dec
mov
adc
jnp
jmp
dec
cmp
inc
mov
cld
mov
into
inc
mov
out
enter
adc
mov
mov
lret
pop
jmp
fwait
mov
mov
mov
jmp
inc
into
push
jmp
xchg
mov
test
ret
or
push
xor
lods
stos
enter
shll
or
es
sub
aad
in
pop
mov
cmp
adc
or
stc
movl
aad
sub
inc
sahf
pop
in
xor
enter
outsb
add
cmp
loopne
add
dec
test
pop
out
mov
cmp
jnp
and
fdivl
pop
mov
and
cmc
imul
lods
cwtl
add
lret
repz
fstl
fsts
lahf
pop
jmp
testl
stc
dec
mov
adc
sub
sbb
adc
jae
in
add
jmp
adc
push
mov
out
mov
leave
pop
mov
cmp
jecxz
fnclex
rcrb
mov
jmp
repnz
les
jmp
and
jns
and
nop
lods
mov
sti
xchg
in
insb
or
dec
fcoml
sbb
push
mov
xor
popl
add
jp
in
inc
fsts
cmp
jl
xor
loopne
stc
and
nop
pop
lahf
in
clc
fmull
mov
stc
mov
ror
sub
xor
repnz
jge
sti
enter
xchg
fwait
pushf
test
sub
xchg
ljmp
ja
mov
mov
ljmp
out
hlt
cwtl
outsl
inc
fmull
pop
sbb
push
bound
jmp
fwait
insl
pushf
adc
mov
in
push
mov
stos
add
push
sbb
pop
insl
movsb
lcall
inc
decl
dec
push
pushf
mov
xorb
fimuls
icebp
ror
hlt
call
or
movl
sbb
sub
mov
xor
jae
aam
scas
xchg
jmp
mov
push
and
jp
jno
xchg
cli
mov
mov
jnp
mov
stos
mov
mov
mov
add
mov
hlt
mov
pusha
nop
aad
int
subl
pushf
or
jmp
ds
pop
test
inc
adc
inc
loopne
jb
aad
pop
aas
sub
enter
aam
loope
fnstsw
mov
or
cmc
cmove
push
adc
movb
sbb
sbb
rcll
mov
jmp
mov
mov
adc
mov
sub
mov
es
push
adc
push
data16
dec
push
xchg
pop
out
lea
je
in
push
int
jp
push
sbb
and
dec
adc
dec
repz
sub
lret
popf
je
adc
adc
out
or
inc
add
in
outsb
pop
cmc
mov
jo
mov
xor
repz
dec
xchg
addl
das
mov
lahf
icebp
cmp
std
pop
add
xchg
testb
cmp
ret
dec
sbb
sbb
jae
repz
sub
stos
pop
mov
pop
mov
adc
add
stc
mov
xor
cld
lret
mov
lods
jno
testl
mov
or
push
es
and
mov
dec
pop
orl
lahf
add
mov
xor
sbb
into
lods
dec
mov
sub
cld
scas
push
flds
mov
lods
fimull
aaa
repz
ljmp
dec
ret
call
mov
repnz
in
cmpsl
mov
fdivrl
dec
add
in
fdiv
sub
push
rorl
sub
add
ret
mov
jo
pop
adc
cmp
mov
push
outsl
repz
test
test
and
pop
add
adc
xchg
pop
or
in
sbb
or
push
xchg
add
pop
gs
pop
and
sbb
cs
jae
sub
mov
adc
inc
push
emms
pusha
aaa
inc
mov
inc
filds
cmp
int3
lret
jmp
int3
mov
adc
sub
mov
add
aaa
stc
mov
mov
mov
shlb
sub
jmp
fidivl
outsb
dec
int3
cmp
adc
jecxz
adc
sub
mov
and
nop
int3
push
mov
sub
rcl
sub
cmp
decb
sub
push
push
mov
inc
sub
xor
sub
arpl
inc
imull
mov
xchg
insb
rorb
inc
lcall
pop
ljmp
in
sub
cltd
clc
sahf
mov
xchg
pop
mov
cmp
jbe
out
lock
sub
mov
inc
mov
and
scas
sahf
jno
and
xor
orb
pusha
scas
hlt
or
mov
xchg
bound
sub
add
rep
and
mov
cmpsl
mov
icebp
fldl
mov
or
mov
out
sbb
addl
fildll
pop
add
int3
pop
sbbb
mov
dec
jmp
lock
popa
mov
xor
in
clc
mov
nop
sub
dec
sbb
insb
lock
mov
pop
push
insb
std
cmp
or
push
js
sbbb
mov
dec
push
sub
adc
in
mov
add
loop
or
mov
ljmp
out
or
mov
sbb
pop
add
dec
mov
stos
adc
sbb
mulb
scas
push
or
lock
fistpl
je
sub
xor
insl
or
stos
and
or
mov
loope
inc
sbb
in
mov
jge
jns
lds
push
or
add
punpcklbw
add
mov
or
jb
or
pop
lret
cmp
sti
iret
sub
or
nop
call
mov
popf
mov
je
or
cmc
add
cmp
enter
sub
lds
push
in
or
cmp
mov
bound
mov
sub
jmp
sahf
adc
pop
mov
and
mov
or
leave
hlt
adc
xor
inc
std
out
fdivl
xlat
cmp
push
pop
daa
out
insl
dec
xor
je
inc
adc
or
adc
out
xor
sbb
aaa
scas
mov
mov
dec
adc
ljmp
sub
cmp
mov
fsub
sub
cmp
popf
sar
scas
repz
sar
pop
inc
xor
pop
inc
sub
js
shrl
loop
outsb
mov
mov
adc
imul
add
frstpm(287
dec
push
and
sub
pop
in
mov
fsubl
in
or
push
push
xor
fildl
fiaddl
outsl
add
jp
mov
sbb
sbb
sbb
out
in
adc
in
lods
int3
cmp
popa
hlt
or
pop
incl
xchg
sub
xor
mov
push
sub
les
mov
in
aas
lcall
loope
sbb
or
sub
ret
dec
negb
push
insb
adc
xor
ss
leave
mov
sbb
paddusw
mov
cmp
std
test
cltd
les
jl
pop
sti
cmp
or
adcl
cmp
sbb
aad
jl
add
sub
fs
adc
add
sub
adc
adc
hlt
insb
inc
notb
xor
mov
jmp
jmp
std
int3
inc
je
adc
mov
sbb
add
sarl
or
pop
or
stc
fmuls
in
sub
movsb
xchg
or
rorl
mov
adc
ds
or
stos
push
ficompl
jae
fcmovnbe
push
je
repnz
rorl
pop
lahf
in
mov
adc
or
push
pop
jmp
add
add
cmc
push
sbb
out
insb
in
xor
xchg
jmp
cmp
mov
hlt
adc
pop
out
inc
aas
xchg
and
fisttps
add
ja
mov
mov
mov
add
les
test
std
cs
sbb
jae,pt
in
lret
sar
xchg
in
xor
sub
call
jne
leave
sbb
lahf
cmp
pop
fbstp
sahf
into
stc
insb
mov
mov
add
jmp
stc
daa
mov
xchg
push
nop
dec
fnstsw
hlt
push
jae
mov
icebp
sub
sbb
xor
test
sbb
in
es
jns
xor
push
mov
or
movsl
test
push
call
push
cmp
in
add
push
mov
pop
push
push
or
ja
test
or
sub
push
mov
mov
adc
add
rcpps
and
jne
add
dec
adc
popa
dec
call
int3
pop
pushf
jmp
test
dec
ret
sti
insb
or
jo
outsb
ss
les
dec
xchg
push
sub
lret
mov
jge
popa
jle
pop
pusha
out
or
repz
mov
sbb
int
sbb
mov
adc
outsb
cmp
rcrb
push
sbb
loope
add
xchg
adc
xchg
test
cmp
ljmp
pop
xor
call
fidivrs
push
xchg
or
push
push
mov
mov
ret
inc
cmp
mov
cwtl
xor
pop
or
push
and
mov
add
adc
imul
imul
jne
add
aas
xchg
data16
popa
and
je
push
leave
outsl
xchg
mov
shll
jb
sti
mov
push
inc
push
mov
sub
jecxz
adc
add
nop
je
dec
adc
sarb
jne
fstl
push
sbb
xor
add
fcoms
fldl
out
or
in
rorl
sbb
pop
dec
ficomps
xchg
andb
imul
aam
pop
or
or
int3
sub
sub
or
add
push
adc
dec
iret
and
loop
inc
mov
or
mov
cmp
fnstenv
add
xchg
jns
or
shll
sub
mov
mov
dec
movsb
dec
into
outsb
rorb
lret
hlt
or
adc
jae
daa
call
xchg
insl
sahf
icebp
mov
or
aas
xchg
and
in
cli
into
and
fisubrl
std
mov
test
mov
pop
mov
or
cmc
dec
adc
mov
stc
js
or
inc
outsb
sub
mov
clc
insb
mov
clc
rcrl
mov
daa
pop
xor
add
xchg
sbb
push
loope
in
add
or
xor
cmp
and
xchg
fdivrl
adc
pop
push
sbb
movsl
xor
lds
adc
xchg
add
push
adc
jecxz
stos
les
lods
mov
push
or
cltd
adc
js
cmpsb
enter
adc
or
sub
ds
mov
adc
cmpl
jl
out
pop
mov
notl
popf
out
jmp
cld
xchg
shrb
loopne
inc
adcl
push
sub
pop
in
fstl
leave
cmc
and
mov
iret
iret
or
xor
orl
aad
shr
call
lcall
test
movsb
sbb
jns
sbb
jmp
fdiv
cmp
mov
xchg
ljmp
rcll
pop
gs
jp
fsts
and
test
jle
jno
xchg
mov
std
dec
sbb
lahf
lahf
les
mov
sub
in
adc
push
sbb
mov
sbb
or
adcl
adc
movl
push
xchg
repnz
or
push
jbe
dec
adc
inc
int3
cmp
iret
lods
ljmp
lahf
or
lock
cmpb
outsb
sub
jne
mov
enter
jmp
mov
cs
xchg
and
add
cmp
push
add
stc
dec
insl
cmp
cmc
in
sub
loopne
adc
sub
mov
or
pop
and
lret
dec
out
xchg
or
repnz
outsb
lock
call
lods
adc
decb
repz
sbb
mov
lods
in
fadd
ljmp
xchg
cld
stos
movsl
add
sub
in
stc
cli
cld
inc
sar
xor
xor
iret
or
stos
mov
and
dec
sub
pop
and
iret
cwtl
sub
xchg
pusha
jle
sbb
mov
xlat
cli
or
jecxz
fisubrs
in
mov
mov
lea
mov
push
mov
adc
inc
mov
xchg
or
inc
mov
push
jmp
lock
jne
ja
xor
daa
sub
pop
loop
sub
rorb
mov
push
loopne
cltd
sub
repnz
adc
aas
ljmp
or
mov
rcll
shll
loopne
mov
es
adc
xor
dec
adc
sub
xor
sbb
adc
enter
loope
popl
aam
inc
or
xor
addl
iret
dec
push
jecxz
icebp
dec
or
xor
push
inc
out
bound
push
xchg
hlt
or
in
out
addr16
push
jg
mov
adc
push
addl
test
mov
pop
in
cs
les
dec
xor
lret
scas
xchg
adc
add
add
jp
and
sub
lahf
cmovle
mov
add
mov
test
xor
lahf
lds
gs
sub
or
out
dec
lock
dec
push
fisttpl
cmpsb
in
fyl2xp1
fisubl
dec
sar
adc
inc
inc
push
and
movsl
lahf
add
mov
les
call
sti
jl
or
pop
subps
aad
nop
aam
add
xchg
inc
fwait
xor
repz
das
adc
push
jnp
fdivs
int3
xor
adc
sub
nop
pop
jnp
cs
add
mov
sbb
push
add
push
bound
movsb
push
jle
adc
inc
inc
mov
test
sub
clc
clc
jne
mov
fwait
inc
pop
pop
data16
sub
xor
repnz
push
inc
push
and
xor
xor
adc
mov
mov
inc
out
ficoml
jmp
fidivrs
ret
and
fiaddl
call
mulb
inc
mov
and
shll
xchg
or
stc
xor
or
lret
or
fwait
sub
imul
push
cmp
or
push
sbb
in
pop
add
out
ljmp
push
dec
push
out
jbe
pop
mov
cmp
and
ljmp
adc
bound
push
pop
adc
sub
cmp
popa
out
sbb
out
ljmp
add
dec
ja
in
cld
push
jnp
ror
mov
pop
mov
fiaddl
fsts
std
sub
adc
es
mov
cmpsl
pop
test
lret
mov
or
sub
push
ret
stos
and
mov
xor
les
out
mov
sub
mov
and
iret
fyl2xp1
push
jp
and
idiv
mov
xor
cld
out
push
push
sbbb
negb
std
ds
push
push
xchg
js
popa
pop
and
aas
pop
ja
adc
outsl
in
xor
stc
dec
hlt
sbb
les
leave
loopne
loop
or
addr16
xor
push
adc
cs
jae
adc
out
into
stc
push
ds
mov
push
add
mov
cwtl
inc
xchg
push
insl
xchg
mov
xor
mov
or
imul
adc
and
sbb
fwait
lods
inc
int
or
scas
add
cli
sub
scas
cmp
daa
sub
sub
push
nop
jle
cmp
xchg
je
push
mov
push
fildll
mov
xchg
ret
sahf
cmpsl
mov
add
mov
mov
adc
mov
add
xchg
xor
aam
dec
shl
out
or
adcl
sbb
sbb
or
sar
loope
pop
or
stos
adc
inc
mov
mov
sahf
push
in
mov
movsb
mov
iret
lock
mov
lds
sub
xchg
xchg
jnp
mov
mov
dec
shrb
inc
sub
xor
xchg
aas
or
lock
pop
pop
in
add
jae
add
xchg
fimull
popa
mov
sbb
mov
or
mov
in
sub
push
sbb
mov
cld
orb
add
adc
dec
adc
sarl
cmpsl
fildl
pop
dec
xor
sub
std
cltd
icebp
lea
sbb
stc
add
int
inc
and
ljmp
mov
fcoms
in
test
shl
adc
jmp
cmc
xchg
test
push
lds
outsb
sub
stos
pushf
fwait
jp
iret
sbb
rolb
cld
insb
add
mov
hlt
insb
das
adc
lods
and
inc
stc
notb
repnz
add
lea
divl
pop
ret
jl
into
repnz
mov
or
out
add
enter
loop
jb
fisubl
ds
xchg
sbb
cmp
inc
sbb
popa
lock
xchg
faddl
test
gs
imul
hlt
imul
shlb
sbb
xor
lea
push
add
leave
pop
sbb
nop
mov
jmp
mov
add
or
pop
inc
pop
pop
in
mov
pop
adc
and
push
repnz
test
dec
xlat
mov
shrl
popf
cmp
add
pop
enter
or
lods
pop
mov
xchg
mov
lret
mov
arpl
mov
arpl
jns
movsb
jge
push
fwait
sub
push
cmp
and
sub
imul
jne
push
adc
mov
ss
adc
or
imul
loop
dec
fimuls
or
aam
aad
inc
dec
jg
jge
pushf
idivl
mov
xlat
andl
xor
lea
daa
out
pop
cltd
add
lea
lds
movsl
out
loop
xchg
or
sbb
or
in
cli
pop
imul
adc
and
push
js
push
aaa
mov
adc
iret
imul
jge
rol
sarl
mov
jb
add
mov
cmp
std
jmp
cmp
mov
cmp
dec
add
adc
hlt
shl
xor
xchg
ljmp
mov
clc
jmp
cmpb
sub
push
fbld
data16
dec
mov
fs
mov
jb
mov
mov
mov
mov
sub
int3
xchg
sbb
xchg
repz
jne
pop
pop
sbb
xchg
and
fld
cs
ficomps
fwait
mov
rcrb
and
cwtl
add
cmp
call
and
inc
subb
sub
imul
cld
sub
in
and
sbb
aad
push
ja
in
sub
in
into
pop
adc
repz
clc
xchg
or
adc
cmp
sub
bnd
sbb
push
aam
xchg
adc
rorb
fs
add
in
call
sub
cmp
adc
rclb
sbb
int3
adc
stos
movsl
mov
mov
fmul
cmp
pop
nop
inc
add
js
outsb
popa
dec
sbb
mov
pop
lahf
add
movsb
sub
sbb
inc
mov
or
mov
lahf
or
mov
shr
mov
cmp
popf
sbb
sub
and
jecxz
jl
aaa
int3
xchg
xchg
addb
es
in
xor
imul
je
add
cs
mov
adc
stc
inc
out
xor
int3
mov
xchg
jns
sbb
mov
das
sub
outsl
fldcw
movsl
mov
adc
push
in
cmp
pushf
stos
mov
pslld
mov
and
add
nop
aad
insb
cmpsl
jo
push
jne
cmpsb
aaa
xor
fidivrs
das
shl
sub
cmp
xor
rolb
imul
std
mov
adc
into
push
jno
mov
loop
leave
imul
sbb
imul
cwtl
lds
out
rorl
mov
sub
cmp
and
jg
movsl
dec
movsb
ss
xchg
mov
mov
or
mov
in
rcrb
shl
pop
xchg
shl
ds
cmp
arpl
adc
nop
fcoms
pop
int3
mov
sbb
ja
out
mov
loopne
int
pop
jge
or
jno
in
or
mov
jg
adc
pop
and
xchg
sub
xlat
sbb
out
nop
adc
sbb
mov
add
fcoml
into
and
pop
ret
fldl
mov
jne
jne
movb
pop
es
mov
mov
loopne
mov
add
fistps
in
xor
mov
hlt
movswl
mov
xchg
sub
dec
add
shrb
pop
lcall
or
data16
adc
adc
loop
inc
inc
jno
sbb
adc
sub
f2xm1
xor
or
lret
leave
cmp
inc
mov
mov
mov
or
xchg
dec
xchg
adc
push
enter
xor
mov
xchg
and
cmp
mov
add
inc
pop
loopne
imul
sbb
in
add
dec
cmp
adc
sbb
out
jne
mov
adc
xor
xchg
mov
adc
frstor
xor
je
inc
adc
cltd
bsf
ret
cmp
arpl
inc
out
dec
das
hlt
adc
aad
add
push
jg
sbb
sbb
sti
cwtl
add
mov
rorb
aad
pop
in
xchg
int3
sub
xchg
loopne
mov
push
mov
adc
adc
sub
lret
dec
xchg
divl
adc
sub
popa
mov
aam
lret
insb
addr16
cmpl
out
jno
xchg
add
pusha
or
mov
scas
sti
sbb
std
rcr
jno
mov
jb
push
pop
and
dec
add
xchg
mov
outsl
adc
add
jae
les
loop
jno
sub
or
or
and
lock
sbb
stos
cmc
jne
insb
sub
loopne
mov
sbb
repnz
fisubrl
jbe
nop
cmp
mov
cmc
addb
testb
sti
sarb
jl
lcall
xchg
movsb
repz
xchg
das
imul
sub
loopne
fimuls
fs
je
push
popf
mov
hlt
sbbb
push
adc
push
pop
test
test
jno
sbb
les
hlt
ficoms
add
inc
sbb
adc
fdivl
ss
push
dec
scas
adc
sub
insb
in
push
popa
in
push
dec
stos
dec
xor
out
hlt
aaa
or
and
in
adc
fwait
std
stos
inc
lahf
movb
adc
add
adc
or
adc
add
repnz
xchg
dec
fcomps
arpl
lret
sbb
jno
lret
mov
lds
sub
jne
loope
insb
inc
js
sub
repz
sbb
dec
test
addb
xor
mov
lcall
lcall
enter
sarl
out
stc
adc
or
ficoms
aam
sbb
in
cmpps
pop
rclb
cmpsb
add
pop
adc
lahf
sbb
cmp
fldl
pop
ss
sbb
cmp
add
mov
add
lods
pop
push
or
adc
repnz
jo
out
fs
data16
push
add
add
push
dec
outsb
leave
aaa
xor
nop
add
mov
jmp
adc
sub
adc
lret
and
pop
insl
or
inc
adc
int3
sarb
add
mov
stc
inc
mov
jb
push
inc
jne
xlat
mov
jge
std
dec
mov
push
mov
push
add
ds
xor
jmp
and
lea
sub
jecxz
lahf
push
clc
inc
sbb
mov
dec
xchg
jae
mov
icebp
cwtl
out
sbb
xor
iret
add
push
xchg
cmp
xchg
scas
adc
lahf
mov
out
or
or
dec
inc
push
fldcw
push
cmp
cmp
stos
push
adc
nop
cli
out
cwtl
adc
jmp
sbb
mov
xor
cmp
jp
mov
pop
shll
sub
mov
adc
syscall
dec
adc
push
xchg
sub
aas
sbb
add
mov
push
add
adc
je
mov
xor
mov
mov
lods
fidivrs
add
jno
cmp
sarb
popf
rcl
jmp
or
adc
out
jb
imul
adc
or
push
mov
les
into
fwait
pop
mov
das
inc
mov
clc
rolb
jle
mov
mov
sbb
jmp
jge
iret
cmpsb
pop
jb
icebp
mulb
dec
loop
jg
js
ss
add
rcl
lods
fs
jge
and
jno
int3
mov
jno
jl
sbb
mov
in
jnp
add
adc
add
mov
or
sbb
push
xchg
into
or
popf
adc
jp
dec
or
xchg
sbb
adc
mov
les
xchg
pop
adc
sub
aad
fidivrs
lds
lret
jmp
xor
cmp
or
push
lods
pop
dec
lods
inc
pop
cmpsl
mov
dec
jge
dec
insb
and
shrb
xorl
mov
mov
movlps
ret
pop
or
movsb
repnz
xor
in
xchg
cwtl
cli
decl
mov
pop
cmp
pop
ja
dec
push
push
pop
dec
loope
add
jo
add
lcall
xor
mov
xor
inc
cmc
mov
rolb
cmpsb
aad
or
dec
add
in
sbb
mov
mov
adc
int
cmp
xrelease
enter
jbe
sbb
test
or
fimull
cmp
or
or
adc
fisubl
xchg
mov
lahf
xor
mov
xchg
adc
sbb
aad
or
fstpt
and
push
add
push
jmp
inc
xor
inc
add
into
xchg
adc
and
dec
sahf
pop
sbb
icebp
mov
lods
ficoml
cwtl
rclb
mov
out
test
mov
fwait
adc
sub
add
loopne
sbb
orl
in
stc
xchg
and
sub
mov
popf
fstl
gs
aad
inc
add
fwait
pusha
dec
dec
push
sbb
mov
jo
jb
inc
add
and
in
mov
int3
call
jp
pop
add
insl
add
xor
out
mov
xchg
outsb
jnp
cs
movsb
add
cmp
stc
fidivl
jb
xor
xchg
pop
in
and
subb
mov
cld
adc
mov
xor
aaa
mov
in
imul
jl
jo
adc
repz
jg
lret
mov
push
fnstcw
lock
imul
dec
mov
inc
lahf
adcl
rcrb
push
jne
imul
pop
in
pop
je
dec
icebp
mov
sub
imulb
push
fisubrs
popf
and
jb
inc
fs
pop
pushf
and
cmp
sbb
imul
adc
sub
fmul
dec
mov
mov
sbb
int3
mov
pop
in
mov
or
orl
adc
sbb
add
mov
test
cmp
je
jmp
arpl
ds
mov
and
cmpsl
jmp
dec
ss
cmp
jmp
jae
outsl
mov
lret
leave
stc
cmpl
lahf
push
sbb
xor
cmp
cs
and
or
repnz
clc
stc
pop
mov
jmp
mov
add
and
leavew
mov
aaa
or
ljmp
mov
int
push
in
outsl
push
fmulp
jecxz
lahf
insb
push
add
mov
std
hlt
jb
ret
push
out
or
adc
sub
orl
mov
test
or
adc
in
and
push
cmp
cmp
cmp
js
rep
or
aad
jecxz
test
mov
xlat
in
pushf
popf
repnz
xchg
mov
xchg
inc
mov
insb
loopne
sub
cwtl
dec
aas
push
movsb
adc
pop
add
test
and
pop
cmpsb
cmp
je
mov
push
dec
pmulhuw
push
jp
push
loope
sub
jbe
repz
stos
in
mov
lahf
sub
mov
sti
fbld
push
xchg
pop
lea
ss
sbb
mov
scas
inc
outsl
sub
add
int3
fistps
inc
out
fidivs
fstp
xchg
int
adc
loope
pop
or
mov
push
add
cmp
adc
sub
push
aaa
push
cmc
test
push
iret
pop
mov
in
adc
push
out
pop
dec
mov
pop
cli
inc
mov
mov
jne
push
mov
dec
jl
mov
sub
inc
dec
sbb
loop
jbe
mov
fisubrl
mov
sub
push
out
in
jne
push
es
add
add
mov
or
mov
adc
scas
mov
xor
les
xchg
dec
data16
xor
decl
mov
adc
push
cmp
xor
lahf
sbb
pop
xor
sub
or
or
les
sub
aam
sub
or
inc
push
lcall
fbld
roll
fwait
ret
or
adc
int3
mov
jle
pusha
dec
add
hlt
sbb
xchg
pop
in
testb
lahf
cmpsb
stos
add
mov
push
mov
add
mov
mov
out
and
fnstcw
mov
ret
xchg
les
repz
sbb
lods
or
rorb
sbb
les
jo
mov
into
call
xlat
inc
xchg
pop
cmp
mov
into
inc
sbb
mov
outsb
pushf
out
neg
cld
popf
mov
or
push
add
sub
push
or
sahf
mov
jl
sub
dec
in
dec
scas
adc
lahf
hlt
fnstsw
les
push
jg
push
push
mov
add
adc
mov
and
scas
add
cwtl
in
xor
stos
add
mov
add
jnp
xlat
lods
push
add
loopne
sbb
jp
movsl
sub
addr16
adc
pop
xchg
rcr
jnp
jmp
sbb
fisubs
cld
adcb
jge
insl
jmp
and
xchg
mov
out
es
dec
mov
pushf
out
fsubrl
shr
mov
inc
xchg
cltd
and
repz
fistl
push
adc
sbb
xchg
insb
sbb
jb
je
push
adc
mov
xlat
mov
sbb
inc
inc
add
mov
adc
dec
mov
cmp
cs
jmp
jbe
jecxz
mov
sahf
rcrl
fstpt
sub
nop
stos
or
dec
in
sub
pop
xchg
inc
add
je
je
jecxz
outsb
lret
out
nop
mov
ret
pop
jb
add
insb
cwtl
notb
lock
pop
adc
fldl
bound
fistpll
mov
push
jmp
popf
mov
movsl
push
cmc
stos
and
add
mov
enter
xchg
out
xor
jae
dec
jmp
loop
pusha
add
mov
outsb
xchg
out
ljmp
fiaddl
leave
and
sbb
sbb
mov
add
sbb
mov
jo
enter
fidivrl
repnz
and
and
cmp
mov
inc
or
sub
add
mov
sbb
adc
adc
sub
and
mov
or
xor
or
mov
mov
sub
and
pop
adc
into
add
shr
pop
jp
fiaddl
and
inc
aas
adc
push
and
fsubrl
insl
jl
test
add
and
adc
ret
leave
jp
sub
dec
mov
or
sub
mov
sub
xor
push
xchg
mov
sbb
loop
sbb
mov
jne
fadd
and
and
or
enter
sbb
xchg
jo
push
jne
adc
sti
add
fisttpll
aam
adc
mov
push
sub
xchg
sub
mov
je
out
mov
mov
or
outsb
jne
pop
lret
cmp
mov
jge
dec
lods
adc
mov
pop
lahf
or
in
and
sbb
sbb
jnp
icebp
adc
loope
repnz
loopne
aas
and
ror
loope
and
lds
xchg
int3
mov
sar
dec
mov
mov
mov
sub
add
xchg
xchg
lods
out
stc
lcall
sub
jmp
pop
mov
lds
jl
aaa
lahf
jae
shrb
jae
xor
test
pop
pop
xor
add
xchg
jo
push
jl
lods
mov
or
lds
bnd
sub
mov
xchg
enter
xchg
int
inc
sbb
sti
jle
mov
ss
add
dec
ret
sahf
sbb
add
lret
sbb
das
push
jne
sahf
loop
and
cld
lahf
ret
jo
stos
sbb
mov
jns
mov
sub
int3
adc
sub
add
insl
pop
lcall
in
bnd
fdivp
loop
cwtl
mov
lcall
or
int3
sahf
add
add
jmp
push
mov
ja
sub
xlat
add
mov
jl
lds
mov
and
sub
xchg
sub
mull
sahf
mov
adc
xor
fiaddl
adc
xchg
dec
sbb
pop
mov
sahf
inc
imul
add
mov
push
ficompl
or
push
aad
mov
scas
pop
repz
sub
add
pop
enter
mov
or
rclb
or
cmp
pop
hlt
add
xor
mov
das
insb
add
mov
and
in
sub
mov
sbb
pop
mov
movsb
sbb
push
push
in
push
push
fbstp
and
inc
orl
sbb
ljmp
adc
sbb
add
pop
outsl
bsr
pushf
sbb
or
and
data16
ret
and
scas
cmp
stc
out
into
imul
sbb
inc
movsl
pop
cmp
pop
sub
lods
jne
ds
mov
sbb
push
mov
mov
clc
xchg
out
shll
dec
shrl
sub
push
hlt
jmp
leave
adc
or
jnp
in
add
mov
jo
mov
mov
in
push
ss
sub
inc
add
std
adc
cmp
adcl
sbb
shrb
or
xlat
sbb
iret
xor
and
je
inc
jg
js
ret
dec
les
sbb
xchg
add
loop
cld
xor
mov
fwait
sub
faddl
subb
repnz
xchg
popf
xchg
or
mov
push
add
push
aas
xchg
cld
add
out
mov
add
xlat
test
lds
dec
adc
pusha
sbb
pop
jnp
mov
dec
mov
pushf
cld
xor
sub
push
bound
cmpb
push
xchg
mov
movsl
aam
ljmp
mov
or
jae
bnd
xor
in
test
mov
lahf
xchg
dec
mov
inc
xchg
subl
sub
ss
cmc
mov
ficoml
hlt
mov
sub
scas
xor
fs
push
inc
push
adc
imul
fidivs
pop
call
mov
push
adc
mov
inc
rcr
adc
and
into
xor
xor
hlt
mov
mov
push
sbb
cld
sbb
jl
mov
or
lock
movsl
jg
mov
stc
enter
push
sbb
jae
xor
ljmp
mov
mov
push
xchg
fs
inc
or
stos
clc
and
mov
pop
mov
adc
mov
lods
jp
or
in
lret
cmp
pop
mov
mov
lods
aaa
or
ds
xor
fnstcw
add
or
rol
int
rcl
shrl
incl
loopne
lahf
ret
adc
je
sub
icebp
test
xchg
mov
int3
xchg
enter
xor
or
nopl
ret
shrb
insb
push
loop
push
xchg
or
push
mov
add
push
sbb
loop
stc
dec
mov
addr16
loope
and
or
repz
std
mov
insl
shr
nop
std
adc
sarb
arpl
add
insb
xchg
cmc
jp
mov
xchg
mov
out
icebp
jmp
in
mov
ds
in
popa
adc
jae
push
or
push
mulb
push
ss
mov
inc
and
or
sub
inc
mov
or
cmc
sub
inc
fdivp
sub
add
int3
lcall
adc
add
mov
or
and
cmp
lcall
adc
fiaddl
aas
addr16
lods
sbb
jbe
sar
adc
push
xor
lahf
sbb
insb
stos
sbb
sti
inc
push
adc
gs
shrl
mov
es
push
inc
inc
in
cs
shlb
sub
cmpsl
mov
scas
mov
sahf
iret
and
dec
shl
dec
scas
ja
dec
adc
sbb
dec
lods
js
dec
jbe
stc
xorl
ja
inc
iret
xor
subl
mov
add
lock
shlb
cmp
and
inc
xchg
push
scas
rcll
sbb
sub
or
inc
lahf
pop
gs
je
addb
in
sbb
or
in
ss
test
lods
jl
mov
dec
out
cmp
daa
cmp
aam
lods
lret
insl
sub
mov
push
jno
je
repz
lods
les
push
dec
lods
icebp
push
sbb
xchg
mov
jns
inc
adc
mov
sub
sbb
xor
jge
mov
ret
sub
sbb
enter
rep
scas
and
add
or
xor
mov
divb
dec
daa
js
add
popf
je
and
adc
cmp
sub
mov
adc
or
xor
xor
jo
lods
jmp
fistpl
jge,pt
mov
in
adc
push
mov
in
sub
stos
pop
mov
push
add
dec
pop
iret
aad
mov
cmc
or
sub
sbb
out
aaa
pusha
adc
fs
fisubl
mov
push
cmp
adc
mov
jo
cmc
mov
mov
push
scas
mov
lds
arpl
adc
mov
sub
mov
shlb
or
push
dec
mov
dec
jbe
xchg
dec
push
add
lea
inc
add
mov
cs
cmp
xchg
mov
movb
fisttpl
adc
sub
jo
mov
adc
je
push
mov
int3
dec
xchg
inc
sbb
outsb
shl
or
loop
adc
and
pop
pop
adc
adc
inc
addl
pushf
xchg
add
jl
lcall
dec
out
into
or
pop
loope
icebp
push
rorb
sub
div
xchg
mov
push
or
lds
jmp
cmp
jne
lea
inc
cmc
xor
add
cli
sbb
mov
lahf
sbb
fucomi
call
or
aam
sub
sub
rclb
shll
sti
rcll
add
movntps
lock
cmp
mov
adc
dec
mov
in
or
and
sti
sbb
sub
jae
cmp
jl
sub
fdivrs
inc
jb
lret
lret
inc
ficoms
lea
sub
dec
cltd
sbb
add
adc
loop
add
mov
dec
jl
or
mov
or
xor
sar
iret
pop
inc
jmp
jge
xor
mov
mov
aas
sub
ljmp
sub
sub
addb
dec
mov
arpl
or
mov
jno
inc
xor
std
into
push
or
mov
dec
mov
xor
dec
push
mov
insl
out
sbb
xchg
pop
pop
les
or
or
pop
rcrl
sbb
cmp
dec
leave
gs
pop
mov
dec
mov
mov
out
hlt
lods
mov
xchg
lods
add
sarl
pop
adc
sub
push
nop
mov
jns
push
cmp
pop
scas
push
addl
mov
in
jnp
push
in
mov
test
loopne
push
xchg
push
in
and
ret
ds
popf
rclb
movsl
dec
mov
push
mov
push
psubw
adc
lods
rcrl
mov
cld
mov
cmp
test
push
sbb
leave
das
cmp
neg
cltd
je
pop
push
dec
cltd
into
lret
ja
and
inc
jns
in
nop
sub
sub
and
dec
pop
add
mov
add
aaa
mov
add
sahf
push
or
mov
arpl
pushf
lea
sub
push
or
lods
push
ljmp
xchg
into
xlat
int
add
jle
call
lcall
ror
clc
into
cs
xchg
inc
test
sbb
xor
xorb
sarb
int
pop
push
mov
mov
add
inc
scas
loopne
lahf
adc
pop
sub
cmpb
in
adcb
mov
add
add
mov
xchg
nop
shl
add
fimull
sub
xchg
or
fstpl
pop
xadd
bound
je
sub
pop
incb
inc
push
repnz
cmp
xor
lock
or
push
ret
popl
adc
lds
mov
ljmp
xlat
mov
fisttps
mov
hlt
cmp
jmp
in
aaa
mov
mov
inc
adc
in
stos
lods
mov
and
sub
xchg
mov
iret
bnd
and
rcl
nop
dec
out
mov
sub
xchg
mov
and
aaa
push
add
out
bound
sahf
stos
jns
push
xor
lcall
add
sbb
jae
adcb
dec
call
js
nop
jmp
dec
add
cmp
bound
and
cmp
cmp
and
add
sub
pop
insl
mov
add
nop
dec
sbb
ds
je
add
out
icebp
fisubl
cmp
inc
ljmp
insl
aaa
add
mul
mov
in
insb
jno
testb
push
sti
lahf
xchg
mov
in
scas
ljmp
sbb
sub
insl
lds
iret
enter
push
mov
lahf
adc
iret
jle,pn
sbb
sar
in
frstor
inc
ljmp
loopne
popa
fnstcw
adc
stc
push
inc
mov
aad
jae
sub
mov
and
out
pop
mov
dec
jne
nop
outsb
loop
push
xchg
or
mov
push
into
repz
leave
adc
add
or
xor
cmp
jnp
outsl
jmp
jae
nop
push
nop
bound
es
imul
loopne
hlt
or
out
inc
xor
iret
testl
add
iret
int
decb
imul
in
ss
rolb
xchg
stc
out
push
xor
out
mov
add
mov
aas
and
add
lods
rolb
push
stos
adc
dec
call
loop
pmaxsw
pop
out
adc
es
adc
mov
mov
push
adc
push
enter
xchg
xchg
testb
sub
into
sub
jne
mov
cld
push
ret
cmp
push
xorps
test
lock
repnz
lods
call
add
imul
leave
mov
jbe
mov
stos
pop
ja
cmpsb
mov
loope
or
adc
mov
mov
sub
enter
dec
pop
xor
dec
mov
jns
dec
xchg
ret
cs
and
rclb
or
and
iret
test
jne
cmp
outsb
xlat
and
cmp
inc
lahf
lret
ja
xchg
xchg
rcll
inc
stos
mov
or
inc
out
xor
bound
fwait
xchg
push
scas
mov
into
add
or
or
or
arpl
push
fst
mov
sub
push
jne
sbb
js
pop
sub
loopne
push
fsubrs
fistpl
xlat
and
push
fcmovnu
dec
jle
sete
inc
roll
rorb
data16
mov
jge
rcl
cmp
cmp
data16
sbb
adc
push
out
enter
inc
dec
pop
movsb
mov
movsb
or
mov
sbb
jbe
lods
inc
jno
fs
add
arpl
clc
inc
mov
orb
sbb
or
cltd
hlt
mov
cmpb
sbb
adc
xor
mov
into
hlt
or
sti
sbb
in
std
mov
xchg
jmp
sbb
pop
adcb
sub
mov
dec
hlt
add
xchg
mov
mov
or
ret
lods
fisubs
in
sbb
fwait
clc
sbb
inc
bound
mov
sub
jae
rorl
xchg
cmp
push
mov
jmp
bound
les
sbb
xor
lahf
fidivs
adc
jns
pop
mov
jmp
cmp
sbb
push
cmc
adc
cmp
or
mov
and
mov
aam
mov
popf
out
sub
push
mov
pusha
pop
xchg
adc
aad
sti
push
or
mov
adc
adc
mov
popl
mov
cld
jbe
lret
jns
les
sub
mov
jno
adc
xor
lret
push
push
leave
pop
enter
push
push
fmul
sbb
mov
out
aas
repnz
lea
jl
test
xor
mov
stos
push
ret
arpl
cmpsb
xchg
stc
outsb
mov
and
and
or
sub
pushf
clc
dec
cld
jbe
xchg
xchg
add
push
and
adc
sbb
cmp
fsts
inc
push
mov
int3
fs
jecxz
add
xchg
movsb
sbb
repz
adc
sbb
enter
sbb
decb
cmp
dec
cmp
push
fs
mov
mov
mov
adc
out
gs
movsb
add
push
shlb
repnz
int
or
mov
pop
mov
stc
pop
clc
mov
fiaddl
push
div
filds
xor
and
sarb
mov
xor
add
xchg
mov
mov
aam
jb
or
mov
jne
outsl
test
dec
outsb
int
and
and
mov
pop
mov
stos
jo
rclb
add
pop
les
xchg
add
or
adc
lods
into
push
lahf
lock
mov
lock
rcll
add
dec
mov
dec
repnz
aad
or
lea
ret
push
cmp
push
dec
adc
in
out
and
in
push
aad
iret
loop
into
jns
in
jl
mov
or
pushf
lds
mov
add
mov
mov
popf
adc
inc
leave
test
or
pop
shl
sub
rorl
add
notl
lret
mov
loope
cld
adc
movsb
or
jnp
loopne
inc
inc
lret
add
aad
adc
jecxz
mov
sbb
fidivs
call
adc
mov
adc
mov
jmp
dec
sub
lods
les
jnp
cmp
dec
pop
je
push
or
add
cmp
sub
test
scas
sbb
add
mov
adc
andb
lret
int3
sti
mov
in
sarb
pop
stc
xor
lahf
mov
sub
dec
sbb
in
pop
bound
push
jno
ss
or
cmp
test
add
sbb
lods
dec
add
add
xchg
pusha
xor
push
push
in
inc
notl
jl
aad
push
in
sub
lods
add
add
mov
xchg
mov
test
int3
sahf
loope
leave
mov
mov
xchg
test
nop
push
pop
sahf
sbbl
mov
out
mov
inc
mov
out
nop
push
xchg
outsb
into
add
nop
negl
mov
nop
sub
add
fs
stos
pop
int
sbb
lret
les
data16
ja
jmp
fstpl
inc
pop
fwait
dec
mov
push
in
sbb
push
std
xchg
inc
sub
push
push
sbb
or
or
sbb
dec
mov
mov
jecxz
int3
fisttps
mov
cmp
leave
ds
dec
inc
cmp
adc
in
ret
pxor
xor
pop
stos
aam
mov
mov
sub
dec
add
ss
faddp
in
add
adc
or
adc
or
in
mov
fwait
xlat
mov
cmp
in
sbb
ret
mov
xorl
sbb
add
popf
les
insl
mov
sbb
sub
sub
mov
adc
je
loopne
sub
mov
imul
in
and
or
mov
les
loopne
mov
lahf
cmp
xchg
mov
lods
jl
jg
cmp
in
scas
inc
cmp
push
add
insb
hlt
mov
inc
subl
cmp
fnstcw
sahf
ds
cld
push
xchg
adc
popf
scas
repz
lods
out
and
xchg
gs
movb
mov
adc
test
aam
out
js
push
xor
push
in
out
inc
inc
mov
inc
adc
jmp
pushf
mov
adc
sbb
xlat
dec
bound
ja
lret
out
nop
or
int3
imul
adc
int3
adc
cmc
mov
call
rdpmc
lret
aad
pop
movsl
mov
sbb
orb
cmp
fcmovnu
xchg
push
fsubs
dec
subl
push
sub
pop
and
adc
sub
push
fcompp
sbb
addr16
xchg
dec
jbe
mov
in
cwtl
pop
repnz
mov
outsl
pop
imul
fisttpl
and
pop
cs
cmc
inc
pop
cld
push
fsubr
dec
or
xor
jle
iret
or
into
mov
sarb
jb
out
mov
pop
in
nop
add
sbbl
out
add
ret
icebp
or
mov
adc
andl
add
call
in
fmull
xor
adc
cli
fwait
pop
in
repnz
sarb
sub
mov
adc
je
xor
mov
clc
sahf
xchg
js
xchg
xlat
fs
rorb
sbb
cli
cmp
push
popa
sti
push
aad
cmp
fstpt
inc
mov
push
add
jge
enter
sbb
adc
ret
lret
test
bound
and
mov
adc
rol
lods
inc
push
sbb
addb
stos
xor
xchg
add
add
or
jp
lret
imul
inc
sbb
jmp
lock
dec
addl
or
hlt
jno
fsts
mov
add
stc
xor
sub
inc
xchg
aad
lcall
add
int3
mov
jb
ja
jb
xchg
imul
call
dec
aaa
sub
dec
mov
push
loopne
test
test
iret
inc
in
out
adc
add
or
or
jge
mov
stos
or
xchg
clc
xor
mov
sbb
add
fs
pop
mov
mov
xor
ds
ss
mov
fimuls
mov
or
cmp
dec
sub
xor
dec
mov
fdivrl
jne
push
sarb
push
cli
fwait
shrb
in
pop
das
mov
loopne
add
pop
repnz
rorl
inc
fdivr
and
fnstcw
stos
cmp
xor
fildl
pusha
xor
and
mov
in
jno
mov
lahf
sbb
pop
les
or
mov
cmp
test
repnz
adc
inc
ret
pop
push
adc
pop
or
xchg
aas
jp
or
sbb
xor
dec
std
into
sbb
fmulp
addr16
aas
aad
or
adc
sub
movsb
push
aad
cmp
mov
aad
ret
dec
adc
dec
mov
cmp
call
shl
mov
fbld
push
sbb
push
int3
out
push
fimuls
insl
shlb
xchg
jb
daa
mov
fsubp
mov
pusha
leave
les
sub
adcl
stos
mov
adc
mov
icebp
cmpb
orb
add
mov
adc
into
mov
add
adc
rorb
mov
inc
stos
in
xlat
aad
hlt
xor
cld
gs
outsb
sbb
stos
or
hlt
fnstcw
js
loope
nop
arpl
xor
or
into
mov
stos
sarl
int
mov
pop
cld
add
or
adc
repz
ljmp
dec
bound
rorl
sbb
repz
jl
lcall
mov
xor
adc
sub
popl
fldl
sub
sub
mov
jl
lahf
int
and
inc
outsb
sbb
cld
test
fcompl
sbb
fnsave
inc
fistpl
hlt
iret
je
in
add
sbb
or
ret
jmp
aas
and
mov
xchg
sbb
sbb
push
mov
stc
cmp
repz
sub
jo
mov
inc
xor
sbb
lret
push
add
or
mov
jne
int
or
mov
dec
sbbb
fs
imul
in
jae
jno
push
nop
and
shlb
outsb
mov
jbe
in
jnp
dec
fcoms
and
xchg
adc
fs
ficompl
cmp
fldcw
mov
xchg
cli
btr
push
sbbl
sbb
les
arpl
repnz
fst
adc
hlt
enter
aas
pop
adc
les
or
add
insl
cmp
dec
int3
leave
call
movsl
movsb
xor
push
lahf
and
test
mov
testb
jns
ljmp
lret
push
or
popf
push
cmovnp
or
pop
stc
dec
lahf
icebp
jl
nop
cmp
sub
int
jbe
push
fidivrl
mov
rcl
test
push
leave
jmp
jg
sub
pop
jmp
lods
pop
adc
pop
test
imul
adc
push
inc
xchg
add
jae
pop
aam
jg
les
push
adc
sub
sub
pop
fcoml
fadds
mov
sbb
das
pop
mov
shrl
mov
jmp
gs
rcll
sti
ret
xchg
jmp
jmp
fld
pop
cmc
xor
or
popa
inc
cmp
jmp
das
lret
out
das
pop
jmp
mov
scas
into
fidivl
imul
adc
xchg
fs
lret
mov
test
ffree
jecxz
imul
adc
das
jo
xchg
out
testl
cmp
loopne
lea
push
adc
inc
or
pop
lcall
mov
rcll
push
test
adc
pop
cmp
out
orb
or
xchg
push
xor
popf
pop
xchg
leave
jl
push
adc
mov
int
out
mov
int
add
jge
inc
mov
add
and
jo
lcall
shl
or
repnz
popf
call
rolb
sbb
xor
dec
and
stos
or
inc
out
xor
or
rcrl
push
scas
test
lock
popa
call
mov
outsb
xchg
stos
inc
lods
mov
jae
adc
mov
add
sub
mov
into
out
and
mov
push
adc
or
ljmp
cmp
dec
mov
rorl
mov
sbb
or
lock
rorb
fwait
loopne
or
or
lcall
dec
mov
sbb
lret
jmp
lock
call
pop
or
in
movsb
lea
or
pop
or
icebp
xchg
cmc
mov
mov
loope
nop
gs
cmp
shl
dec
repz
adc
dec
pop
mov
pop
xor
or
push
sbb
nop
add
inc
push
jecxz
or
sbb
mov
je
xchg
scas
or
icebp
cmp
adc
loope
push
icebp
push
fs
aas
push
fcoml
loopne
shlb
in
dec
sarl
nop
jecxz
cmc
pop
test
ja
push
fstpl
sub
push
sbb
into
push
icebp
daa
out
popf
call
movsb
adc
jnp
push
out
pop
jbe
and
fstps
mov
ret
aad
sbb
sbb
jmp
mov
test
push
popa
insl
add
push
or
pop
xchg
or
dec
bound
pop
test
addr16
mov
mov
add
cmp
lods
xor
addb
mov
fsubr
sahf
bound
pop
push
push
xor
cmc
lahf
in
aaa
div
jno
and
xor
pusha
inc
push
lret
loope
and
test
mov
dec
arpl
out
aad
mov
or
xchg
lcall
into
push
ds
out
mov
pop
mov
pop
sub
lret
pop
or
jne
das
inc
mov
enter
int3
repnz
repz
movsb
incb
mov
aas
jp
sub
dec
jl
xlat
cmp
dec
daa
js
push
ror
or
les
in
loop
out
or
in
imull
ret
iret
xchg
add
fldcw
xchg
out
dec
test
add
mov
int3
mov
and
push
imul
inc
popa
mov
jp
lock
nop
xor
ja
mov
in
sub
sbb
test
inc
mov
adc
jl
inc
inc
xchg
hlt
mov
cmc
lods
inc
into
adc
or
jge
js
pop
decb
sbb
add
repnz
jl
sahf
data16
sub
rol
lock
pop
push
popf
mov
inc
jae
inc
cmp
hlt
add
pop
sahf
subl
in
cmpsl
je
and
test
clc
ds
frstor
cmp
cli
out
sahf
mov
sub
sbb
ficoml
shrb
xchg
sub
hlt
jo
in
rorl
and
lret
fxch
jne
mov
mov
loope
movswl
push
cmp
or
inc
xlat
push
cmp
lret
mov
mov
pushf
fsub
jl
loop
cmp
inc
popl
xchg
in
sbb
ja
movl
mov
xorb
push
mulb
in
lret
pop
shrl
xor
inc
mov
xchg
shl
inc
mov
outsl
imul
scas
sub
push
aad
jg
adc
scas
or
imul
adc
xlat
add
pop
lods
aaa
mov
add
sti
in
in
clc
jmp
lret
aas
jp
push
adc
loope
sti
cmpsb
rcll
pop
pop
mov
mov
push
clc
pushf
stc
aaa
push
jae
lds
cmc
sub
sar
scas
mov
mov
xor
ja
and
or
sub
cmp
insb
mov
test
inc
or
in
les
xchg
xorl
scas
inc
cli
jecxz
push
nop
lret
cmp
pop
inc
jae
xor
pop
cmp
cmpsb
js
inc
lret
push
sbbl
mov
lods
cmp
mov
es
cmp
nop
inc
xchg
jns
push
cmp
or
into
sub
or
jecxz
add
mov
in
loopne
repz
push
lcall
mov
mov
pop
dec
dec
int
jp
lret
cmp
addr16
hlt
jns
pop
jmp
mov
ret
sub
leave
lods
vcmppd
sar
sti
int
adc
mov
mov
in
lret
adc
test
dec
lock
ficoms
mov
loopne
xchg
stos
push
or
xchg
push
inc
rol
movq
bound
hlt
push
dec
add
fidivrs
inc
fists
insl
adc
mov
lahf
xor
and
add
cmpsb
hlt
xchg
xor
xchg
mov
xor
jb
adc
test
add
in
andl
xchg
and
loop
push
icebp
stos
hlt
test
jnp
aad
jae
push
cwtl
hlt
dec
push
lods
gs
mov
pop
rclb
inc
in
mov
mov
test
push
jnp
loop
addb
jno
or
cwtl
push
mov
lea
mov
mov
fistl
add
add
or
nop
into
dec
adc
add
fldcw
add
out
or
je
sub
dec
add
inc
mov
push
jg
sub
jno
movsb
jne
xor
icebp
adc
lock
imul
movsl
mov
movsb
or
mov
in
dec
cmp
roll
inc
jbe
dec
repz
push
hlt
jg
xchg
cmpsb
push
imull
stos
and
add
lahf
pushf
lods
inc
sub
fbstp
push
ret
psadbw
adc
dec
ret
sub
sbb
inc
subb
mov
push
int3
sub
cmp
mov
add
sbb
xor
out
lods
sub
fwait
add
loop
adc
popf
sub
cmp
std
xor
sub
xor
cmp
repnz
std
and
jge
stc
popf
popa
pop
push
sbb
stc
adc
or
mov
pop
rorb
movsl
push
int3
sub
inc
sbb
push
add
fstps
pop
lods
pop
fstl
cmp
cmp
cmp
outsl
les
pop
stos
and
aam
roll
iret
add
orl
push
stos
fistl
xchg
lock
pop
sbb
mov
push
sbb
mov
fidivl
pop
rcrl
add
jae
push
mov
jno
pop
push
outsb
jmp
ret
xchg
or
sub
pop
xorb
jp
fnstsw
hlt
shlb
or
lahf
cld
test
cmp
shlb
push
aad
cld
inc
xlat
lods
xor
int
test
lock
outsl
aam
cmpsb
add
daa
xor
dec
mov
jle
push
xor
lahf
out
mov
xchg
add
and
xlat
in
jmp
mov
jg
fwait
adc
ss
xchg
sub
mov
in
jmp
nop
sub
rcrb
das
pop
ret
outsl
das
or
sub
jecxz
scas
lds
mov
sub
cmp
mov
sbb
rorl
test
push
sbbb
push
test
mov
scas
sub
xor
fsubrl
aad
push
ds
sbb
and
xor
stos
sbb
mov
xor
lret
in
jl
scas
shr
das
addr16
sub
or
sbb
mov
jmp
cmp
jg
les
cmp
rorl
sbb
dec
or
or
lods
xor
mov
jg
jb
fnstsw
dec
dec
inc
sahf
enter
faddl
ss
je
add
stc
les
ds
popf
mov
nop
adc
pop
lea
nop
inc
iret
pop
mov
stc
add
cmp
fwait
scas
add
int3
add
xorb
pop
mov
fidivl
xorb
mov
push
ret
pop
fisubrl
and
in
das
push
pop
pop
data16
adc
popf
clc
xchg
adc
sbb
ja
les
xchg
xor
xchg
jmp
js
rcrl
aad
jno
fs
ja
adc
fwait
mov
out
xlat
pop
mov
repz
subb
cltd
cmpb
inc
or
aaa
inc
push
jae
jle
popf
fcomp
or
pop
rolb
outsb
add
cltd
adc
sbb
arpl
sbb
stos
cmpsl
push
xor
sbb
data16
stc
push
mov
adc
loopne
insb
popa
mov
lret
rcll
inc
or
jg
subb
push
mov
jmp
ljmp
sbb
fildll
mov
push
sub
mov
in
dec
ffree
push
xchg
mov
xorl
aaa
out
movsl
icebp
xorl
cmp
shlb
mov
dec
xchg
lahf
pop
cmpsb
dec
adc
outsl
xlat
int3
hlt
sbb
inc
sbb
pusha
sahf
andb
pop
sub
dec
mov
in
push
fnstsw
sbb
aam
mov
or
popf
cmp
in
repz
into
add
inc
push
jnp
fnstcw
push
sub
enter
testl
ret
xchg
inc
test
add
pusha
xchg
pop
sub
jo
jmp
add
cwtl
shlb
jge
aad
push
add
imul
xchg
mov
and
cmp
stos
clc
out
rol
or
dec
lods
or
dec
aaa
in
inc
stos
sub
sub
xchg
or
scas
or
mov
jg
sti
and
lahf
sbb
imul
push
out
test
out
mov
in
push
scas
iret
mov
cmpsb
or
push
add
inc
xor
sbb
leave
pop
xchg
inc
mov
dec
mov
dec
add
cmp
loop
ret
ja
rorb
test
sbb
dec
repz
add
jmp
or
js
rorl
hlt
jp
add
xchg
int3
xorl
out
xchg
sbb
in
les
sub
adc
sub
pop
mov
lret
shrb
cmp
push
icebp
inc
fcoms
push
pop
jmp
lcall
mov
sub
mov
mov
ss
and
ret
ret
adc
pop
push
push
jae
mov
in
push
imul
sbb
or
sbb
ret
mov
popf
pop
jmp
dec
mov
in
cmp
shrb
repnz
mov
ss
mov
add
mov
cmp
jns
mov
add
pop
scas
enter
nop
or
and
jb
cmp
sbb
sbb
mov
or
mov
pop
jmp
and
xchg
mov
leave
push
out
add
jne
and
es
aas
sahf
mov
cwtl
pop
call
mov
mov
leave
and
sbb
xchg
movsb
arpl
jb
test
jg
sbb
dec
cmp
sbb
out
or
lret
push
stc
mov
into
jno
pop
hlt
mov
sbb
jo
enter
ret
dec
inc
pop
adc
dec
ret
cmp
orb
inc
testb
xchg
jle
sbb
pop
into
pop
pop
test
fstl
mov
iret
add
inc
test
sub
lds
ss
jmp
insb
push
or
pop
out
xor
shr
jae
ret
mov
or
pop
and
or
jae
jb
outsb
cwtl
jbe
xor
mov
repnz
fdivl
insl
pop
inc
rorb
pop
out
fisttpll
mov
daa
call
sbb
nop
loope
ret
mov
mov
mov
loop
mov
add
in
sub
in
lret
mov
subl
enter
xor
mov
rcll
jb
mov
or
lret
mov
adc
and
inc
sbb
imul
les
stos
icebp
xlat
push
divl
dec
cld
inc
dec
sub
inc
jmp
push
xchg
and
frstor
out
les
ja
mov
pop
or
lret
stos
int3
mov
sarl
lcall
adc
repnz
fcom
dec
inc
in
ret
mov
int3
xor
iret
add
adc
sub
pop
js
sbb
hlt
movsl
pop
outsl
mov
or
adc
sbb
mov
sbb
lock
ret
std
add
mov
jb
ficompl
call
or
sub
and
rep
xchg
sbb
push
in
cmp
stos
or
add
mov
in
scas
ret
push
dec
push
aas
cwtl
adc
and
cmp
ficomps
addr16
orl
out
mov
aas
repz
lods
add
mov
enter
ja
xor
xchg
pop
mov
mov
jmp
dec
ss
mov
or
cld
mov
cmpsl
mov
add
mov
push
mov
adc
lds
stos
and
std
xor
or
imul
stos
imul
jecxz
out
mov
in
call
add
push
xchg
loop
push
push
dec
cmp
stos
push
adc
sub
xchg
call
cmp
lret
sti
mov
ret
jecxz
imull
fsubrl
out
adc
ds
mov
lds
add
dec
jo
loop
add
cmp
aam
mov
imul
or
mov
xchg
pop
and
xor
mov
dec
lds
jns
test
ror
cmpsl
add
jns
int
dec
jl
or
stos
xchg
repz
frstor
scas
and
pop
orb
test
mov
hlt
cmp
jl
cld
ja
inc
mov
cvttps2pi
int3
in
lods
mov
adc
faddp
xchg
ja
addb
repnz
mov
arpl
pop
loop
xor
hlt
xor
mov
bound
or
sub
in
xor
mov
lock
ljmp
push
nop
enter
adc
pop
xor
stc
and
popa
imul
add
sub
add
enter
push
or
sahf
add
dec
cs
push
mov
ss
popf
xor
adc
and
add
jb
in
xchg
ds
push
xchg
jl
imul
jno
adc
xchg
call
xchg
push
fistpl
push
enter
sbb
lods
movsb
jg
stos
xchg
cmc
adc
lock
mov
and
rcll
dec
pop
xchg
sub
pop
xchg
ror
cmpb
mov
lods
mov
mov
ret
int
add
mov
sub
xadd
push
loop
aas
sbb
jo
adc
add
into
mov
mov
jae
daa
out
bound
mov
push
and
or
xor
ret
and
outsl
shll
shll
mov
pop
jl
outsb
adc
adc
sub
daa
add
push
repz
les
fsubrs
dec
xchg
push
out
imul
dec
inc
lahf
push
mov
test
or
in
movb
outsl
mov
imul
sub
out
stc
pop
les
popa
loop
mov
pop
or
imul
imul
stos
jo
rcl
xor
xor
in
rolb
out
imul
xor
int3
cmp
lret
rorb
mov
hlt
mov
pop
sub
into
jecxz
stos
adc
ljmp
adc
dec
pop
or
ffree
pop
rcrl
lahf
mov
aaa
addr16
jno
jge
insb
push
in
push
dec
or
and
pop
pop
xchg
sbb
add
lret
pusha
jbe
int
inc
int3
or
leave
mov
loope
mov
add
cltd
aad
cmp
add
ret
rcrl
stos
adc
jns
push
movsb
adc
jno
sub
mov
enter
out
popf
xor
jne
sbb
lock
dec
lcall
pop
and
fadd
int3
mov
pop
pop
sbb
adc
xchg
addr16
sub
sbb
sbb
loope
aad
pop
ss
rcll
movsb
stc
repnz
call
mov
lock
or
mov
xchg
loopne
mov
mov
in
cli
add
and
popf
lret
je
lea
inc
pushf
out
ret
nop
test
dec
jecxz
xchg
mov
push
and
sub
call
enter
mov
sti
fstpl
sub
add
jo
sbb
stos
mov
icebp
cltd
filds
push
test
ja
mov
xchg
add
or
adc
jb
jl
lret
jno
lret
in
add
jns
fstps
repnz
sbb
adc
sub
test
ss
jbe
shlb
inc
faddl
add
sbb
ljmp
pusha
int3
loopne
jbe
add
arpl
xchg
gs
jp
outsl
mov
or
leave
ficoms
pop
rorb
outsl
ss
jns
mov
out
push
pop
test
outsl
fstpt
xchg
jecxz
adc
loope
cmpsl
add
sub
shlb
adc
insl
adc
lret
and
sub
jecxz
adc
daa
jb
or
outsl
stos
pop
or
push
daa
ret
mov
inc
push
adc
bswap
js
adc
add
jmp
aam
fsubl
mov
lret
adc
cmp
test
inc
inc
add
mov
add
aam
cmp
lahf
push
sub
movsl
adc
in
push
mov
sub
fcom
in
mov
inc
mov
clc
push
in
xchg
mov
xor
mov
inc
add
xlat
insb
mov
test
in
push
adc
jne
sub
jne
mov
notl
jno
cmp
aam
fimull
nop
les
shll
ficoml
mov
adc
mov
sub
mulb
movsb
icebp
sub
nop
iret
lods
movsl
or
or
notb
in
jo
addr16
insl
lcall
divb
add
and
adc
test
mov
mov
in
sub
or
ret
loope
mov
and
dec
add
or
pop
stos
and
test
add
sub
dec
mov
mov
bound
out
add
jbe
jb
jo
dec
pusha
in
sub
test
cmp
or
cmc
ljmp
and
add
sbb
add
or
sti
ss
in
stos
stos
sbb
and
add
notb
sbb
inc
pop
inc
mov
mov
dec
jmp
mov
xchg
aad
sbb
pop
in
pop
sub
push
push
jb
pop
pop
fistpl
clc
cmp
and
cmc
pop
popl
stos
mov
int3
pop
inc
adc
out
out
pop
push
xlat
push
xor
jp
adc
fcomps
dec
das
in
lahf
scas
movsb
dec
out
mov
sbb
push
push
pop
add
mov
repz
ror
cmp
hlt
adc
mov
sub
ss
ret
out
out
and
mov
ss
or
xchg
mov
rorb
adc
mov
mov
jns
out
cmp
out
repz
adc
enter
int3
lock
mov
call
rorb
ret
xlat
mov
jl
jle,pt
cld
or
stos
call
sub
mov
arpl
pop
rcrl
je
shl
jle
pop
inc
xchg
std
and
outsl
inc
aas
jbe
pop
or
rcr
clc
pusha
jge
stos
cld
add
pop
pop
dec
std
cld
hlt
fcomps
mov
jbe
rolb
ss
jnp
pop
xor
ss
sbb
push
outsl
testl
jmp
jmp
mov
loopne
rcr
loop
sub
ret
push
movsb
cs
xlat
sub
lahf
dec
pop
insb
jmp
sbb
jb
in
insb
repz
or
xchg
je
in
and
ret
fidivrs
popl
ss
shlb
in
push
adc
jne
sub
fnstenv
scas
int3
ljmp
std
xor
mov
out
ljmp
test
popf
paddb
jl
repnz
jp
push
fwait
test
xor
jge
test
add
repnz
pushf
out
and
jge
test
nop
sub
jb
sub
pop
inc
lahf
xchg
push
lock
and
ljmp
aam
mov
outsl
std
movsl
sti
inc
loope
mov
cmp
ds
sbb
push
pop
dec
cmc
mul
push
cltd
ljmp
xorl
cmpsb
popf
rcrb
jecxz
stos
xchg
scas
es
xor
cld
loopne
sub
lock
loopne
repnz
aad
jb
push
sti
mov
cmp
mov
cmp
les
cmp
add
stc
add
inc
pop
jl
jno
lret
sub
repnz
sbb
hlt
jg
sbb
orl
adc
mov
pop
sub
nop
lret
addb
mov
mov
in
pusha
dec
mov
and
inc
or
fcompl
icebp
in
push
or
aad
ficomps
in
addr16
mov
pop
fldcw
enter
sahf
loopne
cwtl
add
popa
sbb
repz
loop
pop
sbb
cmc
cwtl
loope
mov
sbb
jecxz
push
xchg
loope
ljmp
jo
sbb
insb
or
mov
xchg
pop
mov
lcall
popf
mov
cmpsb
and
inc
test
jl
xor
je
fsts
add
ror
jns
mov
sub
xorb
je
int
cmp
pusha
pop
inc
cmp
add
fs
and
into
jl
int
xor
adc
mov
or
or
push
in
add
lret
lea
jge
push
sub
sbb
push
jmp
mov
aad
dec
js
pop
lahf
and
adc
adc
ret
xchg
inc
cmp
mov
or
adc
pop
jmp
add
sti
dec
hlt
mov
mov
xlat
cmp
sbb
inc
int
and
xor
roll
xchg
idivl
stos
cs
test
push
or
cmp
adc
add
in
cmp
enter
push
adc
stos
adc
cmp
in
xchg
leave
sbb
mov
lods
je
fiaddl
imul
popf
jb
or
mov
fnstsw
in
gs
pop
rcl
stos
sub
pop
testl
pusha
leave
push
test
movsl
adc
adc
lds
mov
nop
fisubl
loopne
jns
add
enter
sub
xchg
shll
xor
mov
push
cmp
into
pushf
sbb
adc
inc
lret
lret
inc
pop
sub
sub
lret
xchg
in
in
mov
lods
pop
stc
dec
lret
shrl
jmp
dec
sub
std
cld
mov
lods
or
mov
popf
fisubrs
es
pop
imul
sub
jns
sbb
jecxz
lahf
lock
add
or
sbb
sub
mov
xchg
pop
es
sti
stos
les
or
imul
jecxz
mov
xor
out
and
icebp
pop
or
in
scas
and
add
shr
int3
sar
mov
add
lahf
repnz
cmpsb
mov
or
sub
loopne
dec
into
call
mov
ss
lods
leave
fildl
mov
mov
xchg
add
xor
dec
push
nop
lahf
push
popa
lret
add
dec
in
dec
cmp
and
mov
lahf
inc
adc
jbe
in
sub
mov
mov
mov
inc
dec
sbb
in
or
fadds
cmp
adc
inc
mov
insb
sbb
fstpl
pop
data16
or
adc
hlt
or
mov
rcrb
hlt
enter
add
call
in
in
or
testb
sbb
push
mov
loop
nop
fstpl
add
dec
js
xor
fwait
push
inc
leave
and
popf
lods
ss
mov
push
ret
hlt
fisubs
inc
inc
jle
xchg
orl
or
mov
popf
xchg
mov
add
shl
adc
xchg
push
mov
jne
mov
into
cld
xor
lock
cli
xchg
aam
cwtl
add
xor
idiv
int
sub
inc
hlt
stos
push
shrl
pop
pusha
sbb
out
cmp
out
xchg
sti
mov
sub
shl
cld
faddl
sub
push
addb
testl
dec
jg
mov
sbb
adc
or
in
dec
xchg
cmp
cmp
push
fldcw
mov
mov
inc
jl
rcrl
testl
and
adc
mov
loopne
dec
psubusb
in
xor
mov
pop
push
push
push
sub
and
fsubl
pop
dec
aad
mov
add
sti
aad
test
les
push
mov
cmpsb
mov
adc
jmp
adc
mov
dec
aam
fists
sbb
in
in
rcr
lcall
pop
push
fnclex
add
pop
or
incl
adc
pop
xchg
test
or
sub
movsb
jg
clc
in
adc
and
mov
sub
movb
xchg
pop
mov
mov
fsts
jbe
ror
mov
add
in
out
inc
imul
mov
dec
in
push
mov
xor
ret
rcr
sub
lea
sbb
inc
scas
movsb
pop
sub
mov
xor
rcr
bound
mov
ja
mov
aaa
je
out
rcl
sbb
add
jl
xchg
fmull
imul
mov
mov
lock
push
repnz
ds
pushf
rcrb
push
mov
sbbb
ret
insb
mov
sub
sbb
cld
xor
adc
pop
nop
xchg
mov
fistl
push
cwtl
imull
lock
fidivrs
movsl
or
in
mov
jl
test
mov
mov
shl
pushf
mov
add
adc
jl
pusha
sbb
push
xor
inc
dec
mov
mov
movl
sub
xor
cmp
adc
or
inc
in
sbb
add
add
or
jb
loop
mov
sub
lock
fmull
mov
jno
push
cmpsb
movsb
fnstenv
cmp
enter
dec
jns
adc
add
mov
adc
mov
dec
sbb
addl
nop
mov
pop
int3
les
sub
mov
dec
fisubl
jle
mov
xchg
cmc
pop
xor
nop
pop
inc
cwtl
sub
or
lock
or
fmull
xchg
jl
adc
inc
aaa
ss
lret
dec
mov
syscall
ret
pop
jl
pop
movsl
cld
lret
jp
adc
scas
fstps
into
adc
pushl
sahf
ret
imul
dec
add
and
pop
out
rcrb
mov
pop
jb
dec
jp
test
pop
mov
call
jbe
dec
std
in
bound
pop
andb
ss
repz
dec
fsubrl
mov
xor
dec
fcmovu
sbb
mov
or
lods
pop
rolb
fmull
push
adc
sbb
ljmp
aad
loopne
jmp
sahf
hlt
and
call
ds
push
push
cmp
xchg
push
inc
add
js
loop
adc
ja
sbb
adc
mov
xchg
enter
clc
add
jne
mov
aam
and
mov
xchg
mov
loop
daa
ret
dec
jbe
scas
test
add
mov
jl
adc
loop
adc
fdivl
hlt
adc
and
pop
iret
or
add
and
inc
cmpb
aam
stos
repnz
mov
stos
push
add
or
repz
repnz
mov
imul
ds
stc
push
mov
lcall
rclb
xchg
xchg
jp
mov
xchg
sarb
xchg
mov
lods
push
and
inc
shrb
push
mov
lret
pop
ret
lcall
push
ja
cld
fwait
inc
divl
mov
xchg
mov
lahf
mov
or
sbb
adc
or
mov
sub
out
fwait
mov
fnstcw
dec
stos
inc
xchg
push
or
dec
repz
mov
std
add
decl
add
push
ret
xchg
add
fbld
mov
test
dec
cmp
shr
not
xor
mov
das
dec
in
lahf
les
les
sub
cmp
jge
pop
add
in
push
mov
ret
sub
mov
mov
into
sbb
in
das
lret
cmc
int3
pop
sbb
es
ljmp
in
les
lret
cli
mov
pop
cli
sbb
test
ret
popf
ret
add
pop
jl
xor
push
adc
pop
sub
xchg
gs
mov
out
stc
dec
or
push
test
lret
gs
lahf
call
mov
rorb
add
in
gs
popf
mov
sub
or
mov
mov
stc
dec
mov
ror
push
push
shlb
sub
cmpsb
cmpsl
out
sub
mov
fcompl
mov
mov
mov
inc
out
arpl
xchg
je
lods
jno
jmp
pop
scas
movsb
jb
xor
xchg
mov
cmp
add
cld
xchg
jne
gs
jmp
sbb
add
and
icebp
mov
xrelease
push
mov
jmp
je
and
inc
in
sub
push
lea
pushf
pop
mov
mov
sbb
sub
cld
ret
pop
push
and
cmpsb
dec
adc
sub
adc
sbb
lahf
mov
mov
jl
xchg
or
sub
imul
push
sub
and
int
loopne
leave
mov
js
int3
fcoml
pushf
adc
aad
xchg
mov
scas
push
inc
sahf
fsts
js
mov
dec
test
push
data16
pop
sub
xchg
mov
clc
mov
xchg
mov
or
mov
add
pop
xor
int3
xlat
add
in
push
dec
push
jge
lret
xor
sub
or
lods
dec
jmp
adc
jg
xacquire
jmp
push
mov
add
pop
cld
stc
jge
cmp
lret
in
cmp
bound
and
mov
aam
and
int3
pop
sub
pop
scas
ret
cmp
imul
xchg
fdivl
mov
xchg
sub
adc
or
inc
rol
push
adc
xchg
push
and
adc
sub
iret
adc
push
movsb
stos
inc
out
pop
jecxz
sbb
inc
out
lahf
cmp
mov
cs
sub
xlat
ret
fsubp
bound
aaa
aaa
stos
push
add
sub
push
outsl
jo
fistpl
out
or
movsl
jge
xor
fcoms
inc
out
test
mov
shl
lock
cld
mov
adc
or
xor
aaa
test
popa
dec
rcrl
orl
es
imul
dec
push
dec
or
mov
sbb
add
decl
or
int3
testb
mov
lock
int3
xor
iret
out
jle
fsubrs
xchg
enter
adc
nop
adc
sbb
sti
push
roll
lock
addl
xor
pop
je
jg
and
leave
inc
arpl
aad
mov
in
and
cmpsb
ljmp
sti
inc
std
fs
lret
lock
jae
inc
mov
roll
rol
cmc
adc
mov
stc
dec
aaa
enter
testb
mov
pusha
fucomp
gs
inc
clc
scas
push
add
gs
ja
xor
mov
inc
dec
push
inc
push
pop
dec
xchg
and
mov
lods
cmp
outsl
mov
cmp
lret
into
or
dec
movsl
jnp
int
xor
dec
lock
movsb
adc
xchg
dec
or
mov
push
lods
cwtl
inc
jbe
cmp
ret
gs
bound
sbb
xor
pop
test
cltd
sub
jmp
fists
cmp
dec
mov
out
sub
in
ret
aad
adc
test
cmc
push
mov
sub
stos
mov
pop
jnp
add
mov
mov
pop
outsb
stos
sub
jle
scas
adc
pop
pop
jae
cmpsl
and
test
shrb
lcall
mov
repnz
and
dec
or
mov
ds
in
sbb
jno
rclb
ret
mov
lds
jl
push
mov
push
sbb
or
mov
rclb
and
inc
mov
clc
jne
or
sub
sub
jecxz
mov
xchg
rcl
sti
sbb
into
xchg
or
stos
adc
pop
mov
pop
and
mov
rorb
cmpsb
cmp
mov
imul
fscale
das
cwtl
pusha
xorl
push
test
mov
fwait
mov
sbb
cmpsl
lods
fnstsw
ret
movq
push
add
outsb
push
mov
dec
in
stc
dec
sub
lock
jno
xor
repnz
sbb
sbb
mov
dec
ds
push
lret
stos
xchg
cmpsb
ret
sbb
les
pop
mov
xor
adc
fildl
add
push
nop
inc
sub
mov
test
scas
pop
add
sub
dec
mov
nop
mov
jb
jge
push
hlt
mov
xchg
push
jl
pop
or
and
clc
cmp
scas
or
mov
push
movsb
adc
stos
scas
enter
andb
mov
adc
sub
cmc
dec
cltd
sub
jl
adc
xor
add
leave
mov
mov
inc
xchg
rorl
jl
repz
outsb
lods
jle
pop
mov
imul
pop
lods
mov
mov
stc
jle
insl
cmp
xchg
cmp
nop
mov
ss
fldenv
mov
fldcw
es
clc
js
jle
addr16
or
rclb
xchg
sahf
add
adc
or
lahf
mov
and
ss
cmp
les
in
inc
push
jb
js
loop
incl
sub
clc
or
filds
ja
std
push
jb
iret
movsb
xor
stc
inc
fsubl
lods
xchg
pushf
sub
mov
mov
into
inc
js
mov
pop
and
jmp
notl
in
push
sahf
jmp
adc
js
mov
cmp
test
fnstenv
sbb
mov
stos
sti
std
in
lahf
sub
mov
mov
adc
sub
pop
dec
out
dec
call
out
mov
sub
out
cwtl
ds
jge
je
lahf
nop
push
sbb
mov
ror
mov
fxam
push
lods
jmp
cmp
in
fidivl
sub
sbb
cmp
repnz
das
ja
in
or
shll
or
inc
mov
mov
rolb
or
cmp
movsl
or
add
nop
mov
xor
jae
mov
mov
outsl
les
jl
mov
mov
mov
nop
scas
adc
xor
sbb
in
mov
inc
add
subl
fdivrp
cltd
ret
sbb
int3
mov
loope
aas
movsb
jp
jge
and
bnd
push
sbb
ss
and
xlat
lret
xchg
scas
sbb
out
add
dec
stos
adc
daa
xor
call
icebp
ret
add
ret
inc
js
jo
push
sub
insl
cs
addr16
dec
mov
outsb
shl
push
jb
in
stc
inc
ret
jns
cli
out
lret
mov
adc
out
pop
shr
jbe
or
lock
cmp
add
decl
sub
push
sbb
repz
and
xor
test
lcall
mov
loopne
xchg
les
pop
jb
jmp
sbb
stc
imull
repnz
out
adcb
mov
pop
jmp
inc
adc
jmp
or
rcll
mov
and
int3
and
jo
adc
xchg
mov
add
inc
insl
mov
or
add
jg
cmp
and
adc
enter
or
mov
les
clc
jmp
pop
je
lea
pop
leave
popf
sub
jge
movsb
repnz
mov
lret
add
nop
fidivl
mov
adc
repnz
ljmp
add
push
iret
pop
inc
xchg
pop
jmp
fidivrs
mov
addr16
mov
lea
and
pop
or
into
mov
sub
dec
dec
jae
dec
shrl
inc
rolb
mov
sbb
fldcw
enter
ret
mov
insb
lret
es
jge
bound
mov
sub
or
mov
mov
sub
cmp
dec
push
pop
sub
pop
add
inc
out
mov
out
lods
test
inc
ljmp
sbb
in
sahf
in
inc
int
push
sbb
and
or
sbb
push
push
cmp
ljmp
cli
sub
into
ss
negb
ret
mov
int
or
pop
adc
adc
cmc
or
pusha
lahf
ret
pop
jo
shrb
ret
fiadds
adc
inc
jnp
ljmp
nop
in
mov
cmp
dec
fxch
xchg
or
xchg
sbb
xchg
lcall
pop
clc
add
sbb
call
adc
aas
pop
cmp
xor
pop
and
mov
mov
dec
adc
push
add
enter
movsl
ss
mov
in
lahf
std
sub
inc
adc
xlat
hlt
adc
subb
mov
or
add
and
jmp
lods
stos
add
xor
movsb
cmp
dec
clc
or
fcoms
jns,pn
mov
pop
mov
xlat
aam
lods
jg
pop
movsb
jb
dec
xor
shrl
movsl
sbb
dec
sbb
aaa
pop
bswap
adc
cld
movsb
push
sbb
mov
cmp
fldcw
popf
leave
dec
sbb
call
jg
inc
repnz
mov
into
inc
sbb
or
xor
loopne
push
add
ds
lods
jl
inc
lahf
sbb
sbb
adc
sub
in
sbb
pop
xor
jp
orb
push
mov
rolb
mov
lahf
sbb
ficomps
out
and
fcompl
xorb
les
or
mov
aad
add
push
shrb
or
out
xorl
mov
mov
or
pop
mov
and
or
movsbl
cmpsl
sar
js
out
mov
and
in
call
fcomps
sbb
add
fwait
addr16
arpl
adc
inc
dec
negb
xchg
mov
scas
mov
lret
add
sbb
movsb
in
jge
xchg
dec
in
xchg
sbb
adc
rcl
mov
mov
add
imul
push
dec
sti
inc
jno
lahf
sub
sbb
or
and
xchg
sti
in
fwait
adc
push
in
mov
hlt
stos
adc
mov
push
mov
sub
pop
lods
mov
fsubs
shrb
add
push
lahf
push
push
clc
ljmp
mov
or
jno,pn
iret
xchg
or
repz
test
lret
push
sahf
int3
fstps
stos
xchg
xchg
insb
scas
lock
or
adc
repz
push
cs
int
jle
sbb
insb
test
cmp
push
sbb
sbb
shll
ret
jns
fstpl
mov
enter
or
and
add
cld
in
or
sbb
jge
sbb
jae
cmpsb
stos
in
test
mov
cmp
aad
cmpsl
shrl
out
cmp
loopne
mov
sbb
add
cmc
mov
adc
mov
xrelease
mov
inc
ret
outsb
cmp
mov
cmpsb
mov
push
cli
scas
mov
fnstenv
jne
cmp
ret
sub
fiaddl
cmp
or
nop
adcl
daa
adc
dec
fdivr
ss
fsubrs
popf
fimull
mov
inc
inc
sub
pop
mov
ds
pop
jae
pop
xchg
les
fstps
push
cmpsl
dec
in
or
sub
add
sub
fwait
adc
fwait
je
lods
adc
dec
mov
adc
repnz
cld
xchg
inc
rclb
stc
mov
pop
sub
call
adc
cwtl
mov
test
ss
ss
call
nop
js
or
lods
adc
mov
lock
jp
sti
out
adc
and
sbb
shr
in
mov
sub
shl
or
adc
int
mov
adc
hlt
fbstp
push
sbb
sbb
jl
into
rolb
push
shrb
jmp
adc
adc
adc
aaa
sbb
adc
jae
dec
sti
rcrl
xor
int3
mov
hlt
add
or
add
enter
test
push
mov
enter
push
iret
hlt
loopne
add
lds
inc
sub
fistpl
ds
xor
mov
add
jp
xchg
or
sbb
cmp
cmp
jmp
xchg
or
int3
adc
loopne
mov
or
shl
dec
mov
xchg
adc
adc
sbbl
outsl
test
sbb
pop
cmp
in
dec
cwtl
leave
roll
outsl
sti
fdiv
js
int
sbb
or
mov
mov
out
and
out
adc
std
jl
dec
int3
cltd
mov
push
xchg
in
js
xchg
mov
jnp
cmp
out
mov
xchg
push
or
mov
loopne
popf
xor
shlb
pop
hlt
or
enter
sbbb
fcmovne
or
cmp
xchg
sub
xor
push
add
movsb
rclb
sub
pop
pop
sub
mov
add
fsubrs
dec
jns
out
mov
jp
ret
dec
mov
mov
mov
push
add
jnp
add
xor
adc
dec
jno
fidivl
cld
in
cld
sbb
arpl
add
ficoms
lret
sub
mov
mov
sbb
loopne
cs
hlt
mov
stos
push
push
push
outsb
jno
mov
sbb
sbb
mov
jmp
fwait
movb
inc
insb
in
push
rol
mov
mov
int3
out
push
cwtl
into
ret
fs
jne
sub
pop
stos
bound
addl
imul
add
in
cs
adc
sub
lret
inc
jb
popf
sbb
sbb
cmpsl
mov
cmp
mov
out
stos
dec
repz
push
aam
repz
jle
in
lahf
cmpsb
jmp
xchg
adc
adc
icebp
cmpsl
rolb
xchg
xor
sub
cmc
cwtl
add
jb
loopne
or
dec
mov
call
sarb
orl
out
sub
xchg
aas
or
sbb
inc
es
lea
xor
jbe
xorb
sarb
adc
or
ret
imul
sub
inc
xchg
cmp
xchg
push
out
mov
cmp
jo
or
pusha
cmp
add
orb
inc
push
orb
lahf
fistl
adc
mov
sub
popa
lret
mov
int3
lock
or
mov
push
roll
dec
movsb
lock
sarl
sub
push
adc
mov
jns
inc
testb
inc
in
clc
fisubrl
pusha
jb
in
push
pop
les
jbe
and
shlb
sbb
mov
pop
pop
dec
repz
fstps
jmp
adc
jnp
lock
mov
ret
push
sbb
xchg
jne
ja
imul
lea
int3
mov
cld
dec
jno
ret
insb
add
fildl
adc
sbb
jo
stos
inc
ret
add
push
adc
xchg
add
lock
mov
adc
insb
xor
adcb
or
push
les
xchg
leave
pop
icebp
or
in
mov
popl
xor
push
lods
mov
mov
add
sbb
in
adc
mov
xchg
cmp
sarl
nop
fstpl
and
add
and
add
loopne
repnz
aad
push
xchg
orl
jl
push
sbb
push
imul
add
inc
dec
mov
jb
add
stos
cmp
std
jg
outsl
ret
xchg
mov
adc
mov
adc
mov
cmc
lds
lods
lods
rclb
je
mov
pop
lret
scas
mov
jne
cmpsb
sbbl
or
movsl
lods
clc
mov
lret
inc
les
mov
sbb
mov
lahf
or
or
pop
or
or
daa
or
sub
repz
ljmp
repz
add
imul
outsb
sbb
mov
lret
sbb
push
daa
ret
cmp
stc
orb
sub
and
xor
sysexit
push
mov
push
cwtl
and
cltd
sbb
rcr
push
xor
stc
dec
mov
imul
jne
dec
ds
jns
adc
adc
mov
repz
cmp
jbe
aad
jb
sub
pop
icebp
or
and
pushf
add
jmp
mov
push
dec
xchg
push
sbb
aas
add
adc
pusha
push
repnz
enter
sub
pop
dec
pop
xor
mov
jbe
in
lods
loope
pop
lret
pop
mov
jae
or
loope
pop
icebp
adc
or
sbb
inc
push
pop
mov
mov
sbbl
ret
add
stc
and
jb
or
fidivrl
xlat
xor
jb
in
sbb
pop
and
inc
sub
call
call
mov
lahf
stos
into
sbb
xor
in
mov
pop
popf
scas
mov
or
sub
add
jmp
in
adc
js
mov
sub
xchg
xchg
mov
jl
rcrl
cli
test
int3
push
addb
push
add
sub
sbb
cmp
pop
mov
mov
adc
ss
in
adc
test
out
mov
std
and
lods
les
push
mov
call
shll
call
jmp
faddl
fidivl
call
sar
mov
sti
push
xor
out
out
call
sbb
out
pop
mov
in
inc
sub
pop
data16
push
pop
xor
push
mov
or
dec
adc
arpl
push
mov
mov
jb
pop
dec
hlt
pop
in
adc
add
jns
lea
lret
sbb
or
inc
xchg
mov
pop
cmp
outsl
subb
sub
imul
or
rcll
aas
lods
arpl
fcmovb
dec
shlb
sub
push
push
sub
fwait
add
inc
rcr
adc
test
mov
aad
ds
adc
sub
mov
pop
inc
jg
pop
notb
in
pop
cmpsb
or
pop
iret
lock
mov
sbb
sbb
mov
stc
jb
out
imul
mov
aaa
adc
mov
adc
aas
stos
loope
in
jo
incb
insl
rcr
sub
pop
movsb
sbb
and
xor
or
movsl
test
jbe
not
sub
sub
jl
push
cld
sub
je
leave
cmp
cmp
push
sbb
dec
into
fcomps
leave
scas
jae
addl
iret
or
shrl
rolb
jge
ds
cmpsb
push
stos
pop
and
add
cmpsb
jle
jmp
fldcw
and
adc
sti
mov
push
pop
cltd
idivl
mov
mov
lahf
in
not
cmp
cmc
fimuls
ret
fisttps
rorb
push
xor
repz
jge
cli
scas
roll
pop
or
ret
jmp
push
and
scas
out
cmp
or
stc
stos
aad
loopne
dec
xchg
sub
xchg
jle
jecxz
in
addl
ds
fsubr
add
or
iret
clc
pop
pop
pop
es
mov
pushf
int3
ljmp
jne
sub
push
pop
orl
mov
in
out
les
and
lea
lods
push
repnz
adc
outsl
lock
ds
ret
pop
jge
movsb
mov
aad
xchg
data16
call
jae
mov
ja
and
xchg
inc
and
or
mov
sbb
rcr
in
pop
jmp
jmp
add
lret
fwait
sbb
loop
lods
aad
sahf
mov
mov
popf
inc
mov
push
icebp
add
push
push
sub
lahf
jmp
sarl
cmp
ret
mov
lahf
or
mov
mov
add
aam
rcl
repz
cmp
loope
push
adc
daa
fdivrp
test
pop
fldl
test
mov
mov
pop
or
aaa
push
add
pop
jp
mov
sbb
xor
push
fs
mov
fbld
lods
imul
or
movsb
xchg
cmp
mov
scas
push
stc
pop
es
sti
cmpsb
sbb
mov
fld
data16
mov
cmc
dec
dec
ret
and
mov
sub
jo
loope
sbb
dec
xchg
add
lods
mov
adc
scas
nop
inc
and
xchg
xchg
adc
test
int3
mov
pop
add
push
sbb
loop
cmp
shlb
add
or
repnz
mov
pop
xor
jb
or
mov
sbb
rcll
adc
dec
mov
dec
pop
pop
xchg
sub
int3
lahf
mov
xor
loopne
popa
test
jmp
orl
adc
insl
in
adc
xor
add
jg
fs
push
ss
inc
xchg
int3
cmc
add
push
hlt
clc
popf
test
cs
ljmp
lods
out
in
pop
std
xchg
xor
cs
push
and
jo
cmp
fildl
jl
mov
mov
sub
add
inc
dec
sbb
lea
jge
or
push
ja
mov
scas
fidivs
lret
lahf
mov
jbe
inc
fnstenv
mov
push
sub
cmp
mov
adc
adc
enter
outsb
cli
fsubl
adc
pushfw
sub
out
mov
inc
mov
std
xchg
dec
or
mov
aas
imul
xchg
mov
inc
jne
adc
push
in
or
pop
ret
add
inc
nop
xor
out
adc
cmp
in
mov
push
mov
or
xlat
adc
sub
jmp
dec
fdiv
adc
jg
lds
lahf
shll
push
sar
aad
jge
xor
out
scas
mov
enter
loop
call
xor
call
adc
ja
pop
sub
inc
dec
ljmp
lock
mov
mov
hlt
loope
shll
mov
xor
xorl
xlat
adc
shlb
fcoml
cmpsb
mov
mov
mov
or
pop
xchg
jns
inc
jl
xor
push
xchg
jno
movsb
fucom
and
je
fs
stos
sbb
push
add
or
jno
imul
or
inc
int
ja
push
repz
inc
leave
xchg
rcrl
lcall
xchg
xchg
out
jmp
and
jae
out
mov
loopne
and
or
adc
mov
pop
call
fidivs
jl
cmpsl
into
add
ror
mov
and
sbb
or
lods
je
add
adc
adc
and
lcall
mov
cmpsl
inc
rolb
fincstp
cmp
lret
clc
cmc
or
xor
cltd
push
sbb
lea
add
mov
repnz
push
cs
shlb
fidivrl
fnstcw
adc
lret
fnstenv
outsl
shlb
outsl
xchg
xor
aad
adc
test
or
sbb
insl
mov
xchg
adc
mov
rclb
cmp
xlat
lds
jle
mov
loope
mov
shlb
push
push
cmp
cmp
rolb
icebp
fisubrs
mov
jmp
or
xchg
fidivrl
popf
cmp
xor
into
outsl
gs
mov
cmp
enter
shlb
xor
das
adc
je
adc
jnp
xlat
xchg
ret
lea
add
filds
idiv
pop
xchg
rclb
mov
mov
pop
sbb
pop
push
adc
sub
negl
incl
push
cmc
adc
gs
push
nop
push
insl
or
mov
jecxz
mov
dec
testb
movsb
push
subl
hlt
adc
shlb
adc
lds
sub
xchg
je
dec
orb
test
sub
test
push
pop
push
mov
xor
loop
jecxz
aad
pop
inc
popf
stos
dec
pop
xor
loopne
sbb
jbe
test
pop
aam
and
or
sub
lret
adc
xchg
lahf
jge
xor
test
mov
gs
add
movsl
sarb
movaps
or
in
cmpsb
sub
movlps
sub
loopne
jle
mov
push
mov
ss
push
or
loop
mov
sub
pop
stos
or
push
push
out
icebp
mov
fsubrp
add
mov
std
and
and
cmp
adc
negb
jmp
push
add
add
push
mov
or
or
icebp
notb
sbb
push
lock
push
repnz
fsts
jmp
fdivrl
mov
jo
fsubrl
hlt
leave
inc
jb
aaa
sub
ss
push
sbbl
dec
fnstsw
lret
add
dec
or
lahf
or
pushf
add
pop
cwtl
fdivp
or
adc
push
and
sub
out
mov
or
or
mov
jecxz
lods
mov
insl
iret
out
mov
push
jne
jmp
push
lds
or
out
cmc
fdivs
into
add
sub
sub
inc
fcomi
cmpb
imulb
pop
fcompl
mov
repz
xchg
inc
push
jg
jb
jl
mov
ss
out
cmp
inc
loope
push
xchg
test
push
mov
pushl
sbb
adc
leave
xchg
push
ljmp
and
filds
mov
and
mov
and
mov
loop
loopne
add
js
mov
lahf
imul
sbb
xchg
icebp
sub
lock
or
push
jnp
hlt
mov
xor
dec
adc
dec
pop
hlt
iret
sub
mov
jb
cli
clc
jg
jecxz
sub
test
mov
inc
jno
ljmp
repnz
pushf
fmuls
jecxz
xchg
sub
push
mov
scas
ss
sub
jb
and
ss
scas
or
sbb
jnp
test
jle
in
gs
mov
or
add
xchg
adc
inc
adc
mov
hlt
shr
adc
iret
xchg
adc
bound
dec
jmp
jp
bound
jmp
push
inc
mov
mov
jmp
mov
jecxz
sub
cmp
sti
xchg
gs
rorl
mov
cmp
repz
sti
pop
or
mov
fmull
pop
add
aas
scas
jbe
fisubrs
test
mov
fimuls
push
test
jl
or
pusha
jnp
push
out
ljmp
and
insb
sahf
add
aaa
xor
shl
mov
imul
mov
in
push
lock
repz
adc
sub
and
add
mov
or
js
pushf
jl
into
das
and
mov
cmp
hlt
xchg
pusha
lds
mul
sbb
in
push
testl
xchg
es
add
lret
subb
lahf
inc
cmp
sub
stc
cmp
or
mov
lahf
sbb
pop
xchg
mov
add
les
push
test
lds
stos
inc
push
xchg
pop
je
les
fstps
cltd
setne
dec
cli
jno
movb
jg
jp
std
stos
push
cli
adc
adc
lods
cmp
ja
in
jae
cmp
xchg
push
xor
lcall
or
mov
jae
shrb
sub
sub
xchg
adc
rolb
mov
sbb
adc
or
or
dec
in
ficompl
jmp
mov
sub
sub
jmp
or
push
lahf
ds
and
cmpsb
mov
mov
xlat
in
sbb
leavew
hlt
or
jae
pusha
dec
or
fnstsw
xchg
int3
repz
sbb
adc
inc
ror
aaa
aad
sahf
jbe
int3
leave
mov
mov
bnd
cs
dec
add
jge
inc
jne
movsb
aaa
inc
xchg
inc
bound
add
orb
jno
sub
push
int
cmpsb
mov
lret
push
mov
cmp
out
and
jmp
hlt
aas
lcall
xchg
repz
mov
loope
lock
adc
loopne
lcall
in
dec
pushf
ret
pop
notl
ret
and
or
stos
xchg
loope
sahf
std
leave
les
pop
rcr
in
cmp
mov
test
jecxz
dec
xchg
dec
aas
rcl
pusha
test
push
stos
cwtl
lock
shl
adc
addl
inc
adc
into
inc
xchg
sti
mov
aas
mov
add
dec
or
adc
xchg
data16
loope
in
xchg
into
jg
sbb
inc
cmp
je
call
pop
loop
xchg
scas
xchg
int3
jne
mov
into
jp
mov
aad
mov
sub
rol
std
scas
or
adc
add
xor
pop
adc
adc
mov
fistps
mov
repz
inc
stc
push
shl
repz
jge
mov
leave
adc
or
adc
add
out
imul
aad
adcb
fs
sar
iret
fsubr
mov
fnstenv
mov
int3
xor
or
jbe
out
clc
shrl
inc
fwait
ret
sti
cmp
ss
mov
lret
jl
adc
stos
fimull
pop
pop
xchg
push
add
add
pop
pusha
jno
ds
xchg
pop
sub
xchg
out
scas
xor
hlt
sub
daa
stos
pop
notb
fnstsw
sbb
sub
pop
jnp
push
pushf
push
push
and
push
add
call
adc
les
cmp
jmp
cld
add
test
push
iret
and
imul
mov
adc
cmpsl
jge
addl
sub
mov
push
pop
lock
faddp
dec
xlat
or
add
fsubrl
repz
std
ret
jne
mov
fmuls
mov
xchg
fcoml
adc
fisttps
cld
rol
sbb
or
stc
push
stos
pop
inc
scas
lret
pop
mov
cs
lret
stc
nop
pushf
dec
inc
cmpsb
lret
mov
sub
or
rolb
ret
push
add
jge
or
sbb
xor
push
xchg
cltd
or
jl
es
sub
xchg
icebp
cltd
xchg
cmc
rcr
adc
pop
add
insb
in
xchg
xchg
cmpsl
jmpw
repnz
mov
fldl
dec
popf
out
mov
push
and
lods
pop
in
or
in
add
add
addr16
jae
push
xchg
repnz
sub
fildll
jge
xor
mov
jmp
rorb
push
repz
add
dec
aam
mov
adc
pop
inc
scas
mov
inc
cmp
insl
or
push
adcl
mov
xlat
das
adc
xchg
add
imul
ffreep
cmpsl
mov
out
shl
roll
lcall
ficoml
lock
out
push
jecxz
add
sbb
pop
cmp
mov
push
je
fsubs
jmp
test
and
fwait
rcr
cld
xor
or
rcll
fdivr
push
popf
inc
mov
fisttpll
inc
xchg
fstpl
int
filds
imul
les
mov
aaa
jp
sbb
mov
mov
cli
jo
ret
sub
jg
or
inc
out
cwtl
jl
test
es
inc
fs
jns
sbb
imul
into
push
int3
xlat
leave
xor
out
jp
xchg
sahf
lea
lret
fsubrs
or
subl
xchg
std
orl
loop
pop
fstpt
fidivrs
push
or
dec
loop
xchg
enter
aas
and
fmul
data16
or
add
test
adc
int3
roll
xchg
sub
xor
shrl
mov
or
out
jne
leave
popa
loope
xor
std
adc
ja
dec
or
popf
out
cmp
ret
nop
int
push
loop
aad
cmp
shlb
fcomp
test
or
sub
and
lcall
in
fcom
popf
or
std
aas
sahf
decb
mov
add
sahf
or
ds
test
pop
sti
jp
outsl
add
and
jbe
fisttpl
icebp
dec
or
cmp
adc
xchg
sbb
pop
adc
adc
xchg
ljmp
mov
imul
bound
or
xlat
shrb
in
pop
clc
pop
into
les
cmpsl
ja
mov
test
xorb
stos
aad
pop
sahf
mov
add
mov
mov
sbb
sub
insl
jb
mov
jnp
js
fisubl
or
fucomi
hlt
and
loop
pop
lret
and
in
sahf
inc
out
or
sub
icebp
lods
and
out
or
in
inc
arpl
xchg
outsl
xchg
or
mov
sahf
pop
sbb
add
jne
testl
imull
push
jl
orb
inc
mov
add
clc
xor
je
pop
push
jmp
lret
repnz
adc
movsb
add
cmp
adc
and
dec
xchg
mov
fistl
fnstcw
sbb
je
or
add
lret
push
in
lret
loopne
jmp
jl
rclb
inc
sub
sarl
sub
dec
pop
sbb
jle
mov
int3
adc
jge
add
jl
fstpt
lods
jg
push
das
push
pushaw
cs
rcr
adc
jge
adc
dec
cwtl
mov
ret
jo
add
xchg
xor
push
pop
xor
out
insb
test
movsb
nop
adc
jle
fs
sub
in
shlb
sbb
dec
dec
sahf
jno
xchg
inc
push
ret
mov
call
ljmp
inc
inc
nop
adc
mov
mov
inc
test
cmp
imul
hlt
and
push
out
popf
in
decb
out
jge
pop
nop
loop
pop
adc
and
in
and
adc
sar
xchg
cmc
sbb
icebp
insl
xlat
and
and
les
lods
rorb
fildl
push
adc
and
push
adc
jl
or
add
incb
cmp
stc
inc
mov
mov
or
or
sub
sbb
mov
push
repz
repnz
enter
push
dec
mov
ret
in
mov
mov
and
nop
jnp
in
decb
mov
pushf
or
push
lret
test
xchg
xchg
mov
pop
sbb
mov
adc
cmp
outsl
jp
cli
push
nop
mov
jo
mov
sbb
or
mov
out
xor
adc
push
jge
jmp
out
les
out
pop
addl
sbb
repnz
dec
adc
mov
js
test
cmpsb
lcall
sub
adc
mov
adc
pop
or
ret
jg
repz
or
enter
pop
sbb
lock
test
ret
pop
roll
je
xchg
mov
sbb
jae
mov
iret
popa
out
icebp
leave
adc
adc
daa
sbb
aas
ret
cmp
test
rcrb
xchg
cmp
xchg
testb
pavgb
cmpb
clc
add
hlt
subl
roll
pushf
scas
call
mov
in
aaa
add
mov
cld
sbb
inc
aad
rorb
lcall
inc
adc
mov
int3
cmp
push
mov
dec
xor
jecxz
sbb
pop
fimuls
jg
in
jl
out
mov
mov
dec
out
stos
dec
jl
adc
jae
loope
andl
mov
mov
inc
pop
sbb
push
lcall
push
jecxz
popa
xlat
repz
inc
mov
call
mov
cs
cld
stc
inc
sub
mov
add
adc
jnp
test
dec
scas
jne
fisubrl
sub
nop
and
mov
and
xchg
je
xor
jmp
mov
int3
add
js
xor
or
mov
cmp
push
inc
mov
sbb
jbe
inc
fildl
fisubrl
cld
stc
loopne
iret
mov
cmp
mov
aam
mov
mov
sti
and
aaa
push
mov
iret
in
xchg
adc
cmp
pop
mov
imul
mov
adc
cmpsb
adc
cmp
adc
sub
ja
and
rorb
repz
add
je
or
ret
inc
iret
dec
loopw,pn
dec
mov
jne
or
or
and
enter
dec
addr16
mov
test
xchg
sarb
xor
cld
ret
lret
lods
xchg
push
xor
rcll
pop
jnp
xor
cmp
and
dec
arpl
daa
in
mov
jecxz
jmp
sti
xor
mov
daa
adc
fsubrp
mov
or
push
ljmp
mov
xor
sub
idivb
jge
pop
lahf
ret
scas
pusha
ret
fwait
out
add
sbb
mov
jb
mov
xchg
or
cmp
dec
out
inc
shlb
fadds
mov
in
in
fstpl
mulb
lods
pusha
out
mov
push
sbb
add
adc
fisttps
dec
jmp
shrb
jecxz
mov
dec
mov
inc
sahf
push
sub
les
pop
shll
or
adc
ret
pop
in
mov
bound
dec
jmp
mov
push
test
adc
adc
add
shll
push
push
ss
push
dec
lret
pop
rol
inc
into
mov
clts
adc
pop
bound
sub
adc
enter
jl
push
inc
out
and
mov
adc
mov
xchg
jne
pop
mov
pop
or
adc
mov
imulb
push
pop
sahf
add
data16
scas
jae
fdivs
call
mov
es
mov
cltd
mov
mov
repz
lods
out
adc
push
dec
add
stos
jp
sub
adc
xchg
push
push
repz
cmc
mov
icebp
ja
lock
arpl
mov
es
xor
cld
inc
push
push
fisubrs
addr16
and
loop
ds
push
stos
pusha
out
insl
das
sbb
add
mov
sub
sbb
jmp
dec
push
lcall
sbb
jne
xor
scas
iret
push
mov
aad
shl
rcll
mov
mov
push
rcrb
aas
mov
dec
push
adc
in
fimuls
sub
dec
mov
hlt
ja
cmpsl
nop
out
es
outsb
jno
stc
stc
sahf
mov
xchg
sbb
in
test
mov
sbb
sbb
adc
xchg
xlat
aad
lret
dec
and
stos
andb
xchg
mov
mov
pushf
in
mov
cmp
daa
out
dec
rcrl
enter
push
movb
mov
mov
cmp
rolb
mov
cmc
pusha
push
sahf
loope
ret
out
je
arpl
xlat
scas
mov
sub
lock
xchg
and
add
inc
pop
imul
mov
int
cmp
jmp
in
je
adcb
ds
xchg
adc
aad
push
out
push
fdivs
imull
test
adc
pop
adc
sub
in
ret
jae
push
mov
out
sahf
ds
scas
cld
call
jae
or
add
addr16
rorl
lds
mov
xchg
jne
xchg
jl
or
fistl
push
rorl
dec
push
lock
js
pop
dec
sub
xchg
jae
rclb
xchg
loop
cmp
and
xchg
bnd
movsl
pop
mov
jae
dec
sbb
movsb
jnp
cmp
dec
andps
stos
scas
shl
in
loopne
lods
push
pop
ret
add
in
adc
inc
ljmp
fadds
std
add
addl
push
jmp
sbbb
jge
sub
sub
xor
cmp
lock
sbb
leave
xchg
das
ss
das
ja
jg
xchg
cwtl
push
sbb
mov
or
push
jae
pop
sub
outsl
les
push
jp
jo,pn
add
loop
gs
in
jecxz
es
push
mov
jg
cmc
sarl
cmp
mov
fwait
cmp
mov
enter
lret
loopne
jns
push
ret
jecxz
or
test
and
stc
repnz
mov
mov
add
jne
popf
mov
icebp
mov
mov
inc
aad
jb
inc
call
ficoms
mov
ffreep
fdivs
pop
nop
sub
or
mov
pop
nop
cmpsl
pushl
ret
cltd
test
push
pop
jmp
sti
jle
int3
in
sbb
lahf
adc
add
idivl
push
mov
cltd
sub
or
jne
jp
inc
adc
movsb
jne
or
cli
xor
pop
sub
fimuls
aas
and
fisttps
xor
dec
mov
or
cs
arpl
rcr
add
enter
cmpsl
mov
and
inc
jge
ficoms
xor
and
sub
jl
outsl
adc
cmp
xor
ljmp
test
mov
repz
leave
dec
xchg
pop
sbb
pop
adc
xchg
and
jmp
pop
insl
out
jmp
aad
jne
xor
add
testl
xchg
subb
roll
out
mov
outsb
mov
mov
mov
stc
push
mov
fwait
mov
pop
in
stc
test
mov
and
test
sbb
and
add
xor
addr16
repz
cmp
and
fcompl
loope
adc
sub
out
in
insb
pop
push
mov
sub
xchg
jne
mov
pop
sub
fstpl
call
and
push
fistps
jae
rclb
lahf
lods
dec
inc
mov
js
aad
add
ja
dec
mov
fsubrl
leave
sbb
dec
add
mov
pop
add
test
dec
das
mov
in
mov
jmp
cli
jg
dec
fisubrl
repnz
jg
push
dec
in
adc
loope
xchg
or
xchg
sbb
bnd
shr
inc
pushf
ljmp
cmp
lahf
scas
lock
imul
fisttps
enter
ja
mov
dec
inc
std
in
cmp
fcoml
stos
sub
xchg
aaa
lods
lds
push
rorl
std
in
pop
mov
in
ss
jmp
push
sub
xchg
adc
movsb
dec
mov
mov
loope
xchg
and
push
or
xchg
icebp
mov
mov
in
sbb
int
push
rcll
jge
pop
fists
out
test
xor
push
out
mov
mov
adc
test
sahf
sub
ret
and
mov
int
jle
add
xchg
pop
cld
and
scas
xchg
cmc
es
decl
aaa
or
insl
mov
sbb
imul
sbb
les
out
jecxz
lahf
mov
sbb
sub
das
or
incl
in
adc
push
push
fiadds
jnp
and
and
hlt
xchg
cmc
adc
pxor
fisttpll
xlat
add
lret
insl
inc
loope
push
ljmp
stc
loopne
arpl
clc
xchg
ret
iret
mov
mov
lahf
stc
fisubs
leave
imul
jle
lods
fdivl
adc
mulb
lds
out
mulb
push
cmpsb
mov
sti
jl
cmpsl
mov
nop
sub
std
add
shrl
loop
out
cmp
mov
sahf
adc
mov
mov
mov
pop
add
cmp
xchg
inc
testb
idivb
or
mov
arpl
sbb
lret
fnstenv
lds
ret
adc
fimuls
das
aas
in
adc
ss
pop
mov
out
stc
lahf
repz
xor
in
adc
sar
dec
push
push
loop
fidivl
push
jbe
xchg
aam
sub
insb
or
or
add
adc
sbb
xchg
add
jle
jne
sbbb
rol
xchg
dec
fdivr
add
andl
jg
cmp
in
mov
movsl
mov
hlt
jne
xor
mov
mov
int
fstl
int3
adc
xlat
add
and
int3
pushf
and
pop
xor
mov
or
sub
fdivr
xor
les
or
push
es
fcomip
fmul
nop
adc
xchg
push
push
add
xchg
rol
cld
sbb
pop
xchg
call
add
loopne
or
lcall
pop
mov
test
stos
rcr
fcmovnu
repz
fbstp
repnz
hlt
mov
movzbl
jecxz
lods
mov
sbb
fs
clc
lds
or
xchg
clc
imul
push
adc
push
test
addr16
sub
lret
dec
imul
decl
mov
cli
xchg
je
into
cmp
out
outsb
add
push
pop
sbb
ret
das
xchg
cld
jno
adc
xchg
loop
sarl
dec
push
les
xchg
cmp
xor
mov
lds
jl
nop
loopne
out
mov
pop
cmpsl
jg
cmpsb
cmp
call
add
pop
add
ss
sarb
ss
push
popl
sbb
out
in
and
shll
and
ret
xor
jne
repz
std
jge
push
add
out
and
xor
insl
cmp
dec
ret
lret
fwait
push
ret
push
sub
cld
popa
sbb
repnz
adc
mov
mov
push
in
jecxz
mov
inc
adc
fwait
in
xlat
leave
pop
lods
cmp
in
pop
stos
sub
int3
add
push
sbb
pop
xlat
mov
les
mov
jge
jmp
mov
js
aam
or
xchg
dec
pop
out
mov
adc
pop
xchg
mov
xchg
ror
repz
or
xchg
mov
nop
sub
pop
push
les
ja
mov
das
cmp
inc
sahf
sbb
mov
les
adc
inc
xlat
insb
and
cmp
in
sub
vpshufd
xabort
pop
in
in
jle
add
adc
cmp
or
int
dec
aad
outsl
mov
or
cmp
mov
adc
lods
pushf
sub
pop
push
scas
mov
adc
cld
ret
sub
int3
mov
test
jne
xchg
ret
subl
pop
inc
mov
js
out
sub
in
les
mov
mov
adc
rolb
push
lods
gs
dec
or
dec
cld
xchg
dec
push
js
out
cmp
add
mov
int3
xchg
shll
rol
les
in
xchg
add
mov
int
or
add
leave
shlb
ja
fcompl
pop
cltd
pop
sbb
sub
gs
xor
sbb
push
adcl
adc
movsb
xor
sub
cltd
sbbl
xlat
iret
mov
leave
jae
adc
outsb
add
mov
xor
fisubrs
jmp
std
adc
xchg
aaa
jge
lret
lock
push
out
sbb
into
adc
jae
scas
and
cmp
jo
lcall
imul
inc
fld
or
aad
pop
xchg
adc
jns
jbe
les
dec
jle
xchg
and
leave
mov
adc
fstl
sbbb
cmp
lret
mov
hlt
jnp
leave
pop
inc
clc
inc
pusha
add
mov
xor
sbb
mov
ret
mov
inc
lret
lea
jns
or
mov
adc
lret
mov
dec
shll
fdivs
adc
lahf
ss
enter
les
or
jmp
andl
jne
sti
std
and
add
sbb
testb
scas
in
ret
cmp
adc
push
addr16
daa
mov
add
repz
cltd
mov
xchg
dec
sbb
lret
dec
mov
jp
insb
or
jb
sub
mov
mov
push
addl
push
sbb
mov
or
es
jo
cmpsb
mov
imul
xchg
adc
ja
mov
les
les
test
xchg
cmpsb
sub
popa
mov
mov
insb
sub
sub
cmp
dec
pop
cmp
leave
hlt
jnp
int3
push
jae
and
add
aaa
in
outsl
adc
pop
loop
inc
mov
in
mov
push
adc
inc
sahf
dec
and
ret
sbb
gs
shr
xor
nop
inc
sarl
lcall
sub
lods
mov
xor
fs
dec
into
mov
sarb
rclb
lret
and
and
in
xchg
and
jg
divb
test
pop
cmp
mov
or
lods
test
push
sub
pop
scas
mov
jp
fildll
jmp
rcll
push
mov
in
jmp
rcl
mov
ds
loop
stos
pushf
out
sub
cs
mov
xchg
jge
sar
into
jb
leave
fimull
mov
add
or
andb
lods
mov
faddl
xchg
xorb
xor
push
add
and
adc
push
sar
mov
mov
outsl
mov
add
mov
cli
xor
jae
push
xor
lock
add
rcl
push
xor
sub
adc
push
dec
outsb
insb
enter
lock
lds
dec
jle
xchg
into
xchg
jmp
mov
lods
loope
jecxz
lods
add
adc
push
and
clc
sub
jb
std
push
jg
insb
lret
call
ret
lahf
hlt
sbb
or
mov
xchg
lock
sub
in
sub
lock
sbb
sti
pusha
fcompl
pop
repnz
fmull
sbb
aam
xchg
call
xchg
sarl
ds
or
mov
out
call
mov
sbb
icebp
mov
and
int
repnz
sarb
mov
sbb
int3
sub
test
pop
sahf
lds
mov
mov
es
in
not
enter
int
inc
mov
mov
mov
xor
rolb
scas
mov
hlt
notb
or
les
pushf
lds
lret
dec
mov
mov
xchg
or
rcr
gs
fcomip
addr16
lahf
enter
sub
nop
push
outsb
xor
xchg
add
mul
call
rcrl
or
pushf
jp
loope
push
jmp
lahf
push
and
pusha
add
test
cmp
outsb
leave
jne
push
cltd
rolb
inc
test
cmc
pop
mov
jmp
ret
cmp
outsl
inc
test
enter
sbb
xchg
sub
lock
inc
lods
imul
or
sbb
lret
xchg
lcall
pop
fcoml
popa
out
push
ljmp
dec
sub
jp
xor
add
or
xchg
dec
xlat
jo
in
add
sub
push
add
add
dec
sbb
dec
dec
adc
sub
sub
out
push
mov
nop
dec
cmp
in
gs
sub
and
inc
ljmp
xchg
or
int3
call
loopne
push
addr16
sbb
dec
push
loopne
les
iret
xchg
imul
repnz
sbb
xlat
mov
xor
fs
mov
scas
call
sahf
aaa
gs
push
int3
call
pop
insb
adc
ret
adc
nop
push
push
mov
xchg
jp
jo
icebp
icebp
ficomps
and
xchg
xchg
and
mov
dec
mov
idivl
lahf
rcrb
cld
adc
cmp
jo
jno
mov
push
js
rcl
pop
pop
out
sahf
pop
xlat
and
shrb
adc
xchg
push
adc
mov
sbb
int3
sub
sub
push
jl
int3
cld
dec
adc
or
or
adc
push
mov
loop
add
cmpsl
sub
or
jae
les
pop
iret
inc
mov
cmp
mov
pusha
jns
ljmp
shl
rcrl
fwait
sbb
or
and
fidivrs
mov
push
hlt
repnz
mov
sbb
or
loopne
jno
lds
in
sbb
inc
sbb
int
scas
insb
int3
lfs
inc
stos
int3
in
movsb
dec
popf
jmp
loop
in
add
inc
int3
pcmpgtb
fidivrs
pushf
push
jg
in
ss
lds
inc
adc
leave
add
jg
sbb
mov
filds
imul
movsb
adc
push
lar
ss
inc
jnp
test
ror
push
jl
sub
cs
test
scas
jnp
add
in
jl
push
daa
in
jae
add
and
repnz
sbb
mov
ds
push
mov
mov
sub
nop
hlt
jg
xchg
fs
clc
adc
rclb
aam
nop
jecxz
sbb
pop
inc
add
insb
cmp
jbe
hlt
js
in
dec
cld
sarb
fidivrs
jge
mov
stc
and
lds
out
mov
rclb
repnz
clc
jmp
pop
adc
nop
fwait
pop
sarb
jmp
or
in
sub
jl
push
sub
jno
and
add
mov
test
out
cmp
ss
jae
mov
add
add
xor
pushf
cmp
sbb
or
sub
push
lret
mov
mov
add
cmp
xor
sbb
xchg
adc
movsb
arpl
adcl
scas
inc
adc
pop
repnz
mov
aam
arpl
jmp
dec
inc
adc
pop
push
loopne
xchg
sub
pop
movsl
loop
add
sbb
push
mov
sub
enter
sbb
mov
call
add
inc
mov
dec
ss
xor
xor
push
lret
pop
push
fcoml
sbb
in
adc
mov
sbb
in
cmp
cmp
les
sub
iret
add
ret
or
mov
aaa
pop
add
sbb
pop
adc
sbb
cli
xchg
push
mov
stos
sbb
icebp
push
aaa
adc
sarb
divb
mov
jae
add
mov
sbb
ret
leave
jp
mov
add
sbb
push
lock
or
fistpl
or
outsb
inc
and
mov
or
int
pop
or
push
or
sar
inc
ror
xchg
xchg
lret
inc
mov
cmp
in
and
sbb
adc
cld
push
xchg
mov
sub
xlat
jb
iret
mov
lock
loop
sub
lret
in
mov
pop
dec
lods
or
and
add
sarb
or
adc
cmpsb
cmp
push
lods
sub
icebp
out
sub
scas
out
aas
xchg
stc
out
push
mov
push
ljmp
pop
cmp
mov
lahf
xor
jge
rol
shlb
xchg
fsubs
cmp
cmpl
fidivs
and
arpl
add
and
xlat
aaa
adc
mov
test
gs
or
sub
fstl
push
mov
push
mov
sar
jne
xlat
mov
lods
mov
sub
push
and
xchg
push
jecxz
fchs
push
add
inc
pusha
rcl
jbe
lahf
sbbl
repz
mov
sub
push
imul
clc
add
add
mov
in
aad
in
jnp
insl
add
ljmp
sub
hlt
rcrl
xchg
dec
adc
in
insb
push
aaa
xor
loop
or
mov
movsb
rcrl
push
mov
jnp
pop
movq
aad
lret
or
mov
jecxz
pushf
inc
jmp
jae
cmc
sarb
sbb
loopne
cmp
jmp
stc
fcoml
adc
push
mov
daa
outsb
dec
lret
dec
lahf
daa
xchg
inc
jle
stos
in
xchg
loopne
push
push
pop
mov
loop
add
movups
call
push
add
mov
sub
add
test
or
or
and
and
adc
stc
and
xchg
je
ds
xchg
addr16
mov
mov
mov
dec
adc
popf
and
fcoms
lods
adc
xor
sub
shll
add
jae
fidivrl
push
lods
into
push
xchg
in
push
out
add
mov
sub
movsl
sbb
fisubs
call
inc
pop
cmp
insl
outsl
divb
jne
push
xchg
pop
push
rcll
adc
push
jae
and
xor
add
stc
mov
mov
gs
je
mov
inc
or
xor
dec
pop
aaa
add
fisttpl
stos
mov
add
outsl
sub
xor
clc
call
xchg
test
icebp
stc
mov
xor
in
lock
je
mov
or
repnz
ss
sub
loop
imul
movsb
sbb
jg
xor
jbe
or
aad
lret
into
jmp
test
insb
sub
rorb
dec
xchg
call
xchg
outsl
pop
add
push
sub
cmpsl
outsb
jns
mov
dec
int3
fsubrp
out
notb
in
ds
xor
int3
dec
add
mov
test
subb
inc
adc
inc
mov
dec
inc
xchg
popf
cmp
int3
mov
adc
push
lock
pop
adc
mov
adc
cmpsb
inc
dec
stos
mov
sub
jmp
iret
sbb
dec
loop
sti
sub
pop
aad
or
shrb
push
mov
sti
sarb
adc
xchg
lods
clc
jl
adc
lods
mov
insb
mov
adc
xchg
mov
hlt
mov
sub
movsb
call
insl
dec
add
es
xor
push
inc
sbb
addl
xchg
or
dec
int
or
in
stos
leave
push
sbb
into
mov
sub
xchg
push
push
sub
inc
add
fwait
mov
aad
cmpsb
adc
out
cmp
addl
sub
jnp
call
or
sub
lret
mov
dec
rorb
sub
xchg
xchg
or
testb
mov
mov
or
movsb
aas
xchg
push
mov
xchg
loopne
push
ret
js
je
shl
lret
fst
mov
in
mov
push
mov
fiadds
loopne
repz
push
jl
fisubrl
out
pop
nop
inc
shrl
pop
cmpl
mov
hlt
mov
jno
add
adc
cmp
stos
out
push
outsb
push
stos
fimuls
popa
xchg
fldl
add
sti
jo
xor
sbb
or
jno
mov
xorl
push
sub
dec
mov
push
xchg
idiv
dec
ljmp
sub
and
jne
out
push
vhsubpd
add
dec
outsb
imul
shrl
jg
cld
xchg
sti
inc
addl
mov
add
outsl
pop
and
sub
mov
int
mov
movsl
rcr
mov
cli
adc
sub
sbb
in
movsb
xor
adc
imul
jbe
mov
mov
jg
add
mov
scas
pop
bound
or
jo
cmp
dec
pusha
mov
loop
adc
mov
aas
jnp
cmpsl
mov
and
mov
iret
inc
mov
xchg
jnp
lea
inc
mov
push
cmp
mov
xlat
add
or
movsl
out
or
je
xlat
bound
push
adc
jl
lret
mov
sbb
fmull
xchg
cli
imul
out
xor
xchg
lods
in
add
xchg
test
mov
mov
into
add
shlb
dec
dec
rclb
sarl
xor
add
mov
mov
pop
loope
int3
dec
out
jno
adc
insl
test
adc
adc
mov
mov
or
cmp
mov
jle
push
pop
xlat
jo
mov
ret
or
sub
aad
jae
in
mov
lcall
mov
pusha
pop
enter
lret
in
lahf
cmpsl
hlt
or
lods
and
push
mov
or
xchg
iret
push
push
push
sahf
xor
orl
ljmp
shll
adc
mov
iret
into
mov
shrb
adc
mov
cmp
sbb
dec
and
fists
pop
lods
jl
dec
jmp
jmp
lods
ds
or
mov
or
movsb
lret
mov
sub
or
mov
jl
in
push
in
pop
push
ror
ss
cmp
pop
pop
mov
stos
xor
xchg
push
mov
jae
adc
xor
jmp
push
rcrl
scas
dec
add
xchg
mov
add
rorl
andb
popf
pop
loop
cmp
in
inc
and
cmp
or
adc
sbb
mov
out
ret
inc
scas
push
jle
inc
push
sub
loope
dec
cmp
shlb
or
adc
sub
or
fmulp
cmp
movsb
sub
mov
mov
add
lret
sub
lods
xor
in
or
ljmp
pop
fsubr
dec
and
fmull
add
inc
xor
cmp
jo
cmpl
xchg
mov
sub
or
pop
fisttps
xor
aam
cmpxchg
jno
push
cmpsb
loop
fmull
sarb
fnstsw
popf
stos
js
and
jmp
pop
add
int
loopne
adc
in
test
roll
sub
or
insb
test
dec
and
inc
lea
mov
pop
sbb
or
xor
lods
mov
sbb
or
xchg
data16
inc
fwait
mov
in
sub
test
test
roll
adc
jmp
mov
jg
fxch
pop
icebp
sbb
test
movb
lock
int3
andps
mov
in
xor
mov
stos
shrb
mov
lods
add
sbb
clc
adc
add
mov
aas
test
adc
mov
pushf
push
ja
mov
repnz
aas
xchg
push
movsb
sub
pop
scas
or
mov
les
sub
and
mov
movsb
push
or
test
push
hlt
cmp
movsb
lods
cs
scas
test
add
push
pop
cmpsb
push
jns
scas
and
jle
or
pop
push
stos
xchg
push
or
sbb
adc
rol
je
into
lods
jns
adc
dec
or
les
aaa
mov
movsl
push
lea
or
or
out
and
cmpsl
xchg
daa
mov
aad
pop
fwait
cmp
cmp
mov
pop
enter
jno
sti
xchg
ret
lahf
add
jecxz
sub
add
sti
mov
cmp
add
mov
test
les
leave
lss
mov
add
xor
adc
push
fcompl
jbe
push
push
jo
adc
in
xchg
mov
lods
mov
mov
rclb
shr
mov
rclb
fld
mov
lahf
in
lcall
ds
push
pop
stc
test
clc
fdivs
sub
and
and
lock
or
add
add
rorl
and
pop
scas
js
or
mov
imul
imul
jo
out
addl
sbb
jae
and
mov
xor
inc
cmp
adcb
cwtl
les
pop
fdivrl
xchg
xchg
and
mov
enter
sbb
gs
fucomip
jge
adc
shlb
ljmp
into
inc
adc
sbb
rcl
or
jnp
or
lods
add
shr
outsl
loop
jmp
mov
out
faddp
sub
aad
push
mov
cwtl
pop
xchg
sbb
jno
adc
dec
loopne
mov
add
popf
and
in
xor
ret
in
sbb
xchg
lods
out
leave
repnz
gs
loope
xor
mov
jle
push
lfs
or
mov
xor
push
clc
adc
movsb
hlt
jae
jmp
fadds
aam
hlt
add
lods
mov
sbb
addr16
loope
hlt
in
lods
mov
test
rolb
cmp
shll
push
lods
adc
loop
sarl
clc
pop
mov
cmpsb
xchg
test
add
push
jg
filds
inc
fldenv
sbb
dec
adc
push
lret
aam
pop
pusha
inc
cltd
stc
in
or
pop
dec
in
sub
jp
or
in
adc
lahf
shl
enter
into
or
push
sbb
push
imul
jecxz
and
fisubl
out
jb
mov
in
push
je
xchg
or
iret
je
shlb
pop
in
lahf
fistpll
jae
in
les
and
jbe
mov
push
jns
or
dec
adc
pop
in
pop
jb
sbb
cmp
dec
mov
dec
repz
mov
xlat
imul
sub
push
mov
ja
out
cmc
adc
insb
sbb
loopne
test
fs
stos
inc
popa
jno
adc
popf
and
mov
jg
add
sbb
sbb
movb
cmc
cli
fdivp
adc
pop
mov
or
int3
pop
fsts
dec
mov
loop
addb
sahf
push
lret
mov
les
pushf
cld
add
pushf
add
aas
arpl
lret
cmpsb
xor
xor
mov
in
adc
and
mov
ror
shl
gs
xor
mov
out
iret
or
and
loope
xor
mov
aas
mov
push
add
or
jae
cli
cmpsb
jb
mov
mov
xor
gs
xor
mov
mov
inc
lock
repnz
fs
popf
cmp
push
sti
addb
ja
in
adc
sbb
and
data16
outsb
nop
xlat
add
inc
sbb
inc
cld
fidivrl
loop
out
lahf
rcl
fisubrs
lock
je
sbb
pushf
out
loopne
mov
pop
jnp
ss
or
movl
inc
lods
cmp
test
push
mov
test
push
mov
adc
roll
shll
shll
add
rorl
sbb
movsb
repnz
shl
call
cmp
jl
xchg
lods
jne
mov
pop
cli
jb
sbb
inc
pop
or
xchg
adc
or
sbb
xor
or
dec
mov
decb
mov
aad
stc
pushf
dec
adc
dec
into
shlb
insb
lahf
jecxz
hlt
push
faddp
ds
sub
aad
nop
push
cmc
bound
scas
push
in
or
int3
add
scas
adc
mov
sub
or
or
jbe
in
mov
and
add
out
aas
pop
int
test
subb
xchg
lahf
push
mov
es
push
pop
adcb
repz
andb
sub
aam
fs
mov
loop
mov
lahf
push
push
adcb
add
inc
dec
xlat
cmp
jmp
aam
sarb
mov
outsl
or
xor
scas
fcoml
fstpt
and
loop
loopne
fadds
in
in
hlt
push
cld
hlt
push
xchg
loop
call
in
or
enter
sub
test
hlt
fldl
fistl
scas
cs
push
xor
push
adcb
and
sub
xor
and
xor
not
mov
and
fldcw
jl
sbbl
add
aad
inc
loope
xor
add
lods
rorb
mov
adc
inc
insl
push
or
pop
mov
sub
cmp
xchg
clc
add
mov
add
pop
adc
movsb
outsl
hlt
or
test
add
sub
fistl
sarb
mov
jo
sbb
jnp
inc
adc
jmp
ds
lret
ss
mov
mov
or
lret
pop
lock
movsl
dec
push
xor
div
cwtl
push
push
enter
les
aam
outsb
ss
cmc
lret
inc
lahf
pop
arpl
rcl
xchg
push
fsubl
in
pop
lahf
mov
scas
shl
mov
imul
mov
adc
mov
or
add
add
add
ss
sti
add
movsl
pop
inc
in
adc
add
or
ja
idivl
adc
push
pushf
out
xor
lret
cmpb
or
jge
xor
mov
bound
inc
or
leave
js
xor
jns
iret
cmp
xchg
adc
das
insb
cmp
sub
xchg
call
jo
repz
ret
sub
jge
and
iret
sahf
fwait
je
adc
jnp
dec
xchg
mov
push
ret
mov
call
stos
mov
push
lods
adc
sbb
aaa
adc
out
ss
mov
pop
pop
in
in
inc
add
and
dec
and
cltd
rcl
dec
jl
add
lret
data16
fisubrl
jmp
add
sbbl
mov
jns
mov
mov
test
cmp
into
sub
fsub
jae
sub
jl
pop
sub
mov
repz
cld
in
mov
lods
adc
or
mov
ja
addl
push
data16
add
iret
adc
push
call
mov
or
xor
movsb
cmpsl
clc
int3
mov
nop
xchg
mov
mov
mov
adc
sub
fwait
aas
cmp
pusha
dec
scas
imul
cld
fmulp
jbe
jmp
dec
lock
loopne
push
cmp
inc
adc
xchg
or
imul
fdivrl
stc
sub
adc
dec
mov
sub
repnz
mov
pop
fisttpll
add
pop
inc
xorb
pop
mov
mov
dec
or
or
rolb
mov
adc
mov
int
jl
xchg
jg
xor
mov
adc
dec
pop
mov
and
push
clc
popf
dec
push
adc
andb
call
mov
xor
push
gs
jb
mov
stos
mov
loop
rorl
stc
sub
ret
hlt
add
outsb
xlat
add
inc
lahf
jmp
aaa
cltd
or
cld
pop
push
int
xchg
adc
push
fs
out
ret
inc
in
mov
sub
sub
dec
sub
jge
loope
sbb
call
adc
push
cmp
sbb
loopne
mov
xchg
and
aaa
gs
xlat
cmpsb
out
add
iret
pusha
test
xlat
imul
mov
and
adc
push
jge,pn
sub
mov
jl
cmc
mov
rcr
jmp
ret
test
mov
adc
aad
add
mov
mov
fnsave
mov
dec
add
mov
sar
hlt
add
out
push
jnp
ret
sbb
mov
jl
xchg
movsb
clc
sbb
sub
mov
lods
loop
dec
pop
cmp
mov
lods
fdivrs
jmp
dec
pop
mov
ds
adc
imul
push
in
dec
loopne
iret
sbb
cltd
lods
cmp
repnz
or
lods
je
in
push
js
mov
leave
out
sbb
mov
xchg
rcrl
inc
imul
mov
sbb
lret
lret
sbb
jo
repnz
xchg
xor
mov
cmp
cmp
adc
movups
mov
cli
dec
and
dec
sbb
lock
adc
les
js
fstps
data16
jge
rclb
push
clc
lahf
orl
sbb
sub
out
mov
aaa
pop
mov
mov
mov
add
adc
and
fwait
mov
add
inc
jecxz
sarb
jno
adc
jl,pt
icebp
push
lcall
pop
mov
ds
or
adc
ja
int3
or
js
adc
in
mov
clc
out
sub
dec
add
cmc
push
adc
sub
enter
shr
outsl
pop
test
mov
mov
into
cmp
xchg
int3
dec
cmpsb
add
or
cmp
dec
sbb
dec
fwait
out
fucomip
ljmp
mov
jg
addr16
push
adc
jbe
dec
rcr
ljmp
push
xor
lds
shlb
push
adc
jmp
xchg
sub
repz
mov
push
dec
paddsw
lea
jmp
std
mov
into
in
xor
dec
adc
mov
adc
cltd
ret
fadd
jno
outsl
sahf
repnz
or
push
mov
out
mov
adc
xchg
xor
dec
fmuls
lret
je
jns
pop
lods
movsl
or
pop
dec
hlt
jl
in
push
test
int
lcall
pop
xlat
adc
cmp
add
sbb
or
ret
repz
push
imul
rcr
sub
mov
daa
push
fists
fstl
jg
ss
arpl
rcrb
mov
mov
mov
mov
cltd
or
out
cmpsb
mov
icebp
add
cld
inc
mov
popa
scas
xchg
in
ja
in
cmp
mov
jl
add
sub
shrb
int
push
enter
out
scas
cmp
mov
mov
push
inc
dec
fadds
add
mov
cld
iret
dec
adc
aam
or
push
cmpsl
jp
pop
test
outsl
xorl
aam
xchg
fstl
call
nop
sti
rcrb
pop
out
pusha
mov
mov
push
insb
pop
jle
adc
js
pop
or
shr
aaa
mov
leave
jbe
cmc
aam
jl
int3
jg
adc
call
aam
loop
fidivs
sub
mov
add
lods
mov
add
scas
mov
sbb
cld
stos
adc
sub
fdivrl
adc
sbb
imul
hlt
bound
jne
in
mov
or
push
jge
jnp
sbb
sub
andl
andl
int
xchg
mov
mov
adc
adc
pcmpeqw
hlt
push
scas
ret
mov
out
xchg
inc
xchg
adc
inc
insl
mov
xor
pop
sub
add
or
mov
mov
pop
ja
push
xchg
cmpsb
sub
xorl
push
push
js
movsl
xchg
cmp
loopne
jbe
and
adc
pop
sbb
in
aad
outsl
std
xor
loop
push
xor
out
ljmp
iret
pop
stos
xor
in
sub
cld
or
mov
sub
nop
mov
popf
ja
loop
dec
insb
call
sub
fldt
ret
gs
or
mov
pop
das
outsl
jbe
sub
xor
sub
adc
jne
idivl
mov
lret
jno
lret
loopne
clc
push
cmp
cmp
adc
xor
es
imul
mov
pop
sub
lret
lret
push
loope
ds
jge
push
scas
sti
adc
adc
dec
call
scas
jne
cmp
push
gs
ret
orb
inc
mov
cmpsb
cld
lods
push
push
and
inc
stos
loope
jmp
push
punpcklbw
test
adc
sbb
stc
pop
push
sbb
push
or
sub
lahf
cs
testl
push
xchg
sub
push
les
les
xchg
xchg
xor
repz
xchg
lods
hlt
mov
mov
add
push
lea
ret
lret
xor
xchg
lret
and
in
loop
lods
pushf
inc
imull
lret
adc
xchg
adcb
pop
cwtl
int
fsubr
push
out
add
add
jo
lods
in
fadds
dec
jmp
xchg
popl
out
push
rorb
mov
adc
into
xchg
in
push
inc
mov
jmp
les
fsubrl
stc
and
adc
and
rorb
adc
out
push
mov
jae
add
sbb
sbb
push
add
inc
xchg
movsb
xchg
ja
pop
cmp
cmp
or
int3
push
sub
lock
add
je
push
xlat
fimull
sub
sub
xor
jmp
ror
and
mov
inc
xchg
dec
mov
xchg
add
or
dec
or
adc
lahf
mov
rorb
inc
outsb
adc
mov
inc
adc
outsl
or
add
adc
sbb
or
bnd
rcrl
out
cld
loop
das
in
mov
les
pop
pop
or
push
sub
in
xor
mov
push
mov
outsb
scas
fcmovb
mov
cmp
in
mov
fimull
and
adc
nop
adc
in
fidivs
les
jbe
pop
mov
push
pop
lret
push
jne
adc
ror
lahf
fstps
push
mov
mov
fs
fs
push
push
or
cs
mov
rorb
or
push
faddl
jb
int3
pop
inc
movsb
or
lds
adc
mov
mov
dec
jmp
inc
ja
aam
cmp
add
mov
js
jg
lret
push
and
in
or
jo
sbb
fdivrl
pop
or
testl
and
mov
pop
xchg
adc
rcrb
int3
inc
out
jae
add
or
in
lahf
cld
test
add
cwtl
mov
sbb
sub
push
imul
cmp
push
jmp
in
or
mov
mov
pop
ret
push
scas
add
daa
add
test
mov
or
xor
jne
and
add
jns
adc
popf
aas
arpl
stos
cmpsb
and
jecxz
push
adc
push
cmp
add
lret
add
sub
or
in
cmpsl
inc
or
leave
push
sbb
push
sbb
out
fistps
sub
mov
sarl
add
ss
lds
mov
jno
iret
bound
cs
movsb
negl
jns
mov
jl
hlt
push
dec
sbb
and
add
mov
mov
divl
jl
cmc
aad
xor
push
sbb
adc
xorb
cmpsl
add
adc
pop
hlt
add
fwait
or
xchg
loop
call
and
insb
pop
mov
dec
xor
seto
and
dec
mov
jae
roll
cmp
add
adc
add
pop
adc
ret
fpatan
sbb
idivl
mov
stos
pop
fdivl
lahf
adc
and
movsb
sub
cltd
adc
int3
cs
dec
leave
add
cmp
test
in
call
and
fsubrs
lahf
addr16
mov
and
adc
int3
mov
cmpsl
push
movsb
push
push
imul
adc
adc
loope
aad
lea
rclb
je
xlat
cmp
jne
inc
shll
jle
xor
pop
dec
out
imul
das
inc
lea
push
mov
sub
mov
stc
sub
addl
add
stc
mov
xchg
xor
mov
dec
out
dec
pop
sbb
mov
mov
add
in
insb
or
adc
cmp
pop
les
mov
cmpsb
js
inc
xlat
mov
movsb
setle
je
xchg
push
add
mov
sub
aam
jno
fsubrs
test
push
loop
add
push
or
xor
and
in
adc
xchg
cmp
sti
out
push
sub
popa
iret
adc
xor
dec
sahf
mov
push
or
cmp
scas
adc
les
imul
jmp
or
lds
add
jo
or
jp
outsb
or
or
jmp
jl
insb
sar
fdivrs
xchg
fcompl
fcmovu
mov
pop
add
dec
xor
push
ficompl
mov
shlb
sub
push
push
scas
mov
mov
push
xor
jmp
adc
mov
nop
adcl
add
lods
jmp
sbb
sbbl
mov
jbe
inc
pushf
pop
aaa
inc
mov
mov
mov
jp
pushf
ss
sbb
or
push
clc
cld
add
and
mov
inc
dec
hlt
jmp
push
add
sbb
out
cmp
sbb
in
in
xchg
adc
add
mov
or
mov
mov
icebp
les
ljmp
sbb
mov
shrl
lret
stos
sub
les
int
lret
pop
mov
shlb
sbb
mov
or
pop
sti
lahf
and
mov
push
inc
test
call
or
test
ret
cli
push
pop
lret
inc
mov
lahf
leave
sub
inc
subl
pop
pop
push
mov
out
daa
or
pushf
xchg
les
add
inc
out
xchg
mov
mov
jb
loopne
jmp
mov
int
adc
cmc
fstl
sbb
lcall
outsl
or
lds
cld
mov
outsl
out
xor
push
jl
jl
ja
in
fistl
out
cmp
stc
stc
outsl
out
xchg
xchg
xor
pop
insl
mov
jle
stc
gs
repz
je
pop
out
sbb
test
icebp
and
cmc
out
xor
mov
add
inc
int3
mov
ss
jb
cmp
sbb
mov
sub
jbe
inc
mov
or
push
pusha
iret
jg
in
subl
jp
adc
mov
fisubrl
adc
pop
or
mov
pop
fcompl
dec
pop
icebp
out
in
adc
push
mov
and
lret
seta
adc
mov
les
pusha
leave
pop
aas
notb
push
ja
push
adc
pop
outsb
iret
inc
pushf
xchg
push
jle
dec
ljmp
xchg
hlt
les
aam
add
cwtl
fstpt
push
jecxz
iret
or
cmp
xchg
sub
scas
repz
push
cmpsb
jg
sub
loop
cs
or
sbb
enter
xchg
mov
rclb
sub
inc
lcall
addr16
or
push
pusha
pop
or
sub
test
stos
insl
push
mov
out
mov
or
xchg
dec
loopne
push
fistps
in
das
repnz
or
xor
push
ds
push
mov
pop
lret
stc
xchg
test
xlat
sahf
iret
rolb
inc
fwait
insb
xchg
push
aas
into
scas
push
lock
mov
nop
stos
dec
leave
and
xchg
test
or
ds
loope
jle
mov
loop
adc
xchg
adc
adcl
call
in
push
xor
aam
sub
xor
cmp
jl
pop
fcoms
ss
arpl
loop
adc
adc
or
adc
add
sti
outsl
cmc
adc
and
inc
cmp
aam
jmp
add
mov
int3
pop
paddusb
outsl
add
test
xchg
mov
inc
or
out
jmp
xchg
sub
inc
push
pop
mov
cld
ja
leave
addb
xor
jb
int
shlb
in
imul
mov
push
rcrb
loop
adc
or
loopne
bnd
in
xchg
lods
je
xchg
xchg
adc
faddl
mov
js
rcrb
je,pt
lret
insb
add
adc
ljmp
xchg
sub
push
int3
dec
add
ds
push
push
je
in
in
add
push
out
lock
add
inc
sarl
jmp
add
hlt
cld
outsb
imul
add
mov
repz
icebp
rol
push
add
jl
in
jge
mov
rcll
lea
in
push
push
nop
add
call
inc
push
sarb
sbb
adc
aam
cmp
add
add
out
adc
shrb
adc
fsubrl
out
or
dec
mov
lods
or
push
jecxz
mov
test
int3
test
mov
sarb
out
mov
xchg
sbb
xor
adc
fmuls
mov
call
pop
stc
inc
add
adc
dec
lds
je
jp
jl
or
hlt
hlt
lcall
push
add
in
mov
test
icebp
cltd
add
or
test
shl
incl
lock
clc
inc
cmp
jecxz
push
insl
add
add
test
sbb
jmp
out
mov
adc
mov
stc
adc
add
rorb
cmp
mov
hlt
stos
mov
incl
add
or
repnz
add
or
rolb
xchg
add
pushf
aam
push
std
cld
scas
dec
lret
hlt
or
fdiv
test
addl
mov
mov
sbb
pushf
stc
jb
orl
sub
pushf
das
jb
add
sub
cmp
mov
add
hlt
ret
add
push
adc
test
mov
les
dec
xor
in
or
ljmp
pop
adc
adc
and
fcoml
sbb
mov
nop
shrb
and
mov
push
mov
inc
rolb
lods
jno
and
pushf
or
push
or
fstl
aas
enter
scas
and
adc
int3
movsb
pop
cmp
repnz
add
jmp
pop
in
pop
nop
push
or
or
mov
les
xor
adc
loopne
push
or
adc
add
inc
or
add
bound
adc
add
ja
outsl
jle
pop
icebp
lret
pop
mov
ret
cmp
test
cld
repnz
pop
adc
add
rorb
adc
add
out
or
add
or
adc
adc
adc
dec
sbb
jb
nop
pop
in
xchg
nop
jmp
in
test
push
pop
push
push
repnz
adc
and
jb
scas
les
mov
in
inc
scas
rcrb
cltd
les
pop
dec
jno
push
pop
adc
adc
add
push
or
or
bnd
adcl
dec
cs
pop
loopne
pop
or
add
js
adc
add
xchg
or
add
nop
or
or
pop
ljmp
sarb
enter
scas
divb
or
add
add
adc
add
xor
sti
cwtl
or
xchg
fmuls
loop
adc
test
adcl
shl
out
ljmp
rclb
lods
rolb
dec
imul
pushl
push
lods
or
mov
repz
push
and
fcoms
cmpsb
ret
add
into
lock
fsubrl
cmp
dec
sbb
add
ds
pop
pop
lahf
jno
or
sbb
or
push
xor
or
jno
add
insb
cld
jmp
les
sbb
les
ret
mov
push
push
adc
add
xchg
lods
rorb
xchg
sbb
int3
adc
icebp
inc
in
or
bound
sub
or
mov
push
adc
pop
fidivrs
lods
mov
lcall
fucom
je
dec
cmc
cmp
xor
add
mov
ds
fucomip
outsl
cmc
add
dec
ror
push
das
adc
out
out
cmp
out
out
sbb
xchg
aaa
push
sbb
and
pop
rclb
int3
add
lock
inc
or
clc
pop
gs
les
add
mov
lock
mov
std
lock
or
stos
popl
push
mov
mov
jb
roll
mov
das
sti
or
sti
xchg
inc
or
icebp
push
je
adc
adc
mov
add
adc
sub
mov
push
mov
xchg
icebp
mov
fisttpl
or
add
cld
shl
adc
sub
add
inc
movsl
mov
cmp
mov
pop
xchg
xlat
ret
push
xchg
jmp
roll
mov
mov
xchg
in
mov
repnz
adc
and
int3
sub
icebp
xchg
sbb
bnd
pop
hlt
jge
mov
adc
mov
repnz
push
les
loopne
roll
mov
outsl
incl
call
in
leave
cmpsl
rcl
adc
in
jb
lods
adc
fimuls
inc
adc
ds
cmp
and
rorl
add
cmp
cld
pop
push
jmp
jo
fdivrl
movsb
nop
repnz
bnd
pop
add
sbb
mov
mov
pop
stos
or
add
or
mov
and
idivb
jo
or
adc
adc
repnz
iret
add
movsl
push
dec
dec
shll
fwait
and
sbb
es
dec
les
testl
jne
mov
js
push
arpl
pop
repnz
jb
adc
loope
mov
pop
and
pushf
rclb
sub
adc
adc
sub
shr
adc
mov
pop
jnp
mov
jg
dec
adc
sbb
in
adc
xchg
int3
xor
js
hlt
pop
lret
pop
and
test
fdivs
imul
stc
aaa
adc
mov
push
inc
jg
pop
lods
or
xchg
mov
push
stc
outsl
insl
cmp
or
adc
push
or
lret
push
xchg
or
and
movsb
xchg
popa
out
add
sbb
out
dec
mov
or
test
movsb
mov
jb
sbb
add
fdiv
int3
or
out
xor
adc
pop
les
sub
mov
repz
repnz
add
fsubl
mov
xor
xchg
pushf
jb
or
aam
outsl
xor
fmul
outsb
pop
push
ret
jo
repnz
out
ror
xorb
les
movsb
sbb
call
out
push
lret
or
jp
fsqrt
les
xor
add
add
push
sub
mov
sbb
inc
xchg
xchg
movsb
shr
outsw
adc
shl
in
nop
adc
pop
rorb
dec
sub
je
lret
add
roll
lea
mov
cld
xchg
cmp
mov
cmp
mov
leave
js
aam
outsb
or
adc
sbb
and
mov
cld
in
test
in
movsb
pop
fs
pop
pop
repnz
adc
je
mov
add
xor
inc
cmc
aas
outsb
cmp
dec
push
test
push
int3
insb
add
inc
jmp
movsb
fdivl
sub
in
in
mov
jl
inc
mov
repnz
lret
scas
loop
sahf
jecxz
in
pop
repnz
adc
adc
pop
je
jp
add
sbb
in
in
pop
adc
mov
adc
bound
sub
mov
pmuludq
mov
pushf
rcrl
int3
hlt
fisubs
xlat
xor
jmp
je
cld
in
hlt
adc
pushf
aas
icebp
icebp
cmp
test
mov
test
mov
pop
sbb
outsl
mov
nop
rorb
jecxz
aaa
cmp
sbb
xchg
repz
add
cld
add
mov
outsb
in
shrb
add
les
or
or
mov
ljmp
ror
xor
pop
jg
hlt
mov
rcrl
jb
add
or
inc
xorb
pop
addr16
and
sahf
divl
pushf
add
lods
imul
adc
int3
fisubs
int3
pop
ret
loopne
or
shlb
mov
rcr
adc
test
repnz
jo
int3
nop
adc
cwtl
add
mov
loop
add
loope
xor
pushl
fs
adc
mov
aaa
test
mov
insl
loop
add
or
rcll
jbe
rol
adc
test
shlb
loope
cmp
fcmovbe
adc
adc
push
mov
mov
loopne
arpl
negl
inc
mov
call
cmp
sbb
inc
shld
call
addr16
inc
jb
popa
popf
pop
call
add
call
and
call
cmc
mov
xchg
repnz
mov
cmp
add
out
in
fs
lds
sub
jmp
add
ror
adc
rorb
nop
sarb
add
jmp
pop
jmp
mov
pusha
or
jmp
adc
or
add
testl
jbe
dec
fmul
jb
sbb
faddl
or
adc
inc
pushf
dec
nop
rcrb
je
fdiv
out
in
arpl
push
shrb
dec
aas
out
repnz
add
and
add
adc
inc
or
in
data16
cmp
loop
hlt
adc
outsl
daa
movsb
pushf
cli
dec
jl
xchg
adc
push
adc
mov
hlt
jecxz
adc
insb
add
mov
popa
pop
add
jl
out
repnz
jge
xor
add
ret
hlt
mov
rclb
testb
adc
add
imul
repnz
add
pop
dec
test
ss
ror
adc
add
rol
adc
mov
adc
mov
adc
bnd
repnz
dec
ljmp
mov
inc
dec
je
push
jecxz
ss
call
adc
or
lds
xchg
clc
xor
js
pop
incl
mov
rorl
leave
dec
xor
in
call
mov
mov
repz
sub
nop
mov
and
loopne
pushl
test
loopne
in
jns
inc
incl
addr16
sub
aaa
negl
sar
nop
mov
fstl
movsb
jns
mov
push
fs
cmp
jmp
or
dec
int3
sti
mov
loopne
lea
mov
iret
jl
or
push
andl
push
cld
test
dec
stc
adc
into
movsb
lock
add
in
fisttps
test
add
jo
adc
sahf
pop
lcall
and
andb
or
cld
into
roll
ljmp
inc
xchg
xchg
cmc
fdivr
rcll
jl
test
xchg
insb
in
and
xchg
or
in
jmp
ds
xchg
rcr
xlat
xor
adc
stos
jle
lret
xor
xchg
iret
ret
lods
or
hlt
or
push
mov
pushf
nop
into
sahf
dec
sub
dec
or
adc
add
jmp
imul
cmp
or
inc
aam
add
std
mov
pop
lods
xor
cli
cmp
inc
out
add
or
xchg
std
or
or
adc
sbb
push
cltd
jl
cmp
decl
xchg
mov
data16
stos
adc
and
in
movsb
out
mov
popf
cmpsl
push
out
xchg
lods
or
add
imul
test
fwait
add
xchg
repz
or
xchg
nop
sub
sbb
adc
inc
mov
mov
jge
mov
cmp
imul
addr16
sbb
or
les
jl
adc
add
test
xorb
mov
and
jno
xchg
cli
lock
out
call
mov
aam
cmp
mov
in
in
pop
adc
inc
and
mov
mov
sub
adc
outsb
pusha
or
xacquire
xchg
mov
mov
in
or
or
add
lods
not
or
add
rcr
adc
add
rcrb
nop
shlb
mov
out
pop
and
sub
jl
or
les
shl
xchg
xor
cmp
fs
out
xor
sbb
hlt
dec
mov
add
sbb
fcoml
rorb
notl
xor
movsb
call
push
sub
sti
inc
or
in
fildl
or
in
xor
inc
push
or
test
mov
mov
mov
int
cli
mov
adc
mov
loopne
push
and
mov
lods
mov
sbb
dec
and
decb
call
pushf
xchg
shl
es
movsb
jo
adc
lret
loop
repz
data16
adc
add
add
nop
in
in
sub
rclb
mov
repz
repz
jg
xchg
je
in
mov
adc
jae
xchg
push
or
dec
or
mov
icebp
dec
push
mull
nop
dec
adc
or
fnstenv
rorl
fdivs
push
dec
nop
jmp
push
test
mov
shlb
js
je
lret
insb
test
in
rolb
mov
jo
out
xchg
push
add
jg
test
jp
int
sub
pop
cmp
icebp
sti
mov
jmp
loopne
push
mov
sti
jl
and
loopne
das
xchg
pop
jno
dec
sub
jns
loopne
xchg
out
inc
dec
cmp
mov
xchg
mov
or
es
leave
xchg
repnz
sub
adc
aam
sbb
les
or
std
seto
insl
xor
add
aam
xchg
shl
aas
adc
lahf
xorl
jbe
in
shll
add
ja
xor
jne
aam
cmp
and
in
popl
add
or
dec
push
in
ret
stos
adc
sar
filds
add
loop
frstpm(287
shl
cmp
add
xor
mov
adc
hlt
adc
and
je
mov
mov
out
add
fidivrs
push
jge
jb
test
in
mov
xchg
add
mov
test
rclb
mov
mov
sbb
push
or
adc
inc
mov
dec
aam
rorb
repnz
inc
and
ljmp
cli
inc
add
add
adc
xchg
jmp
test
out
in
negb
ss
inc
fisubs
cmp
lods
or
add
pop
adc
jo
repnz
mov
test
mov
cltd
jge
test
incl
cmp
cmp
icebp
imul
es
jb
adc
mov
imul
pop
repnz
mov
sbb
mov
adc
out
xchg
and
push
adc
int
push
adc
call
add
xchg
adc
inc
nop
rclb
dec
repz
mov
adc
or
jnp
xchg
das
adc
icebp
stc
clc
fwait
xchg
or
sbb
pusha
adc
ds
sbb
sbb
xchg
iret
xor
mov
icebp
into
inc
leave
dec
xor
mov
add
or
and
lret
xchg
gs
and
test
dec
out
xchg
mov
pushl
xor
jae
adc
in
push
icebp
lock
int
rcl
repz
decb
xor
adc
add
rclb
testb
cltd
cld
push
repz
movsb
add
mov
test
push
je
or
pop
adc
adc
cmp
sbb
ja
xchg
lret
je
addr16
test
xchg
sbb
test
rcrl
add
mov
loop
adc
sub
xchg
mov
xchg
pop
fdivrl
xor
sbb
xchg
mov
xor
jmp
inc
sub
push
test
aaa
fsubrp
add
je
daa
mov
xchg
popf
lret
sub
call
pop
fidivl
dec
dec
test
dec
xchg
sbb
inc
cld
xchg
fcoml
gs
aas
hlt
dec
jl
pop
icebp
sbb
cmpsl
mov
bound
jo
movsl
fmuls
cmp
enter
cmp
adc
jbe
inc
in
adc
inc
andl
popf
xchg
or
add
inc
jl
divb
cmp
scas
addr16
adc
add
icebp
bound
loop
adc
add
test
test
les
popa
adc
movsb
in
hlt
jmp
inc
ret
adc
cli
rclb
mov
xchg
out
test
in
push
fnsave
add
mov
or
dec
int3
fisubrs
xchg
inc
mov
mov
popa
push
rorb
adc
or
adc
add
int3
add
movb
aaa
cli
fs
or
cmp
rclb
arpl
mov
dec
pop
repnz
sahf
add
xchg
mov
sti
add
add
jo
mov
mov
je
fdivl
jl
les
pop
mov
or
or
mov
cld
ljmp
insb
xchg
sbb
movsb
inc
cmp
ror
pop
xchg
push
int3
or
in
or
mov
test
add
and
pop
jno
push
jl
add
adc
fiaddl
add
adc
push
mov
shll
les
add
adc
jnp
inc
mov
les
icebp
icebp
or
add
ds
mov
xor
in
adc
cmp
iret
aaa
xchg
nop
in
jle
xor
sbb
int
iret
pushf
or
jmp
nop
rcrb
mov
dec
jae
add
jg
orl
fs
aaa
call
aam
pop
fdivrs
test
mov
cmp
add
cmp
fs
push
add
xor
fs
inc
pop
test
mov
sbb
lods
add
shll
adc
add
add
movsb
repz
cmp
and
cli
cmp
xor
add
mov
pop
or
xor
cmp
or
mov
mov
or
icebp
popl
popa
hlt
jb
sti
xchg
or
inc
adc
lods
sbb
jl
mov
movsl
stos
arpl
test
add
or
add
shl
mov
mov
ds
sbb
or
push
test
mov
ss
push
xor
ss
mov
in
dec
sub
rcr
icebp
insl
enter
mov
lock
fimuls
push
mov
push
sti
in
jbe
hlt
fiaddl
outsl
hlt
adc
xor
es
je
nop
daa
shll
movsb
je
repnz
hlt
cmp
pop
outsl
aam
cmp
hlt
fdivp
es
adc
sub
mov
add
cmpsl
dec
in
dec
ljmp
sarb
xchg
fisubl
rolb
popf
mov
repnz
dec
and
dec
xchg
les
inc
fldcw
or
lea
jmp
or
insb
nop
sub
cmp
or
rcll
out
popf
cltd
mov
jl
into
test
add
movsl
adc
add
xorb
lds
add
enter
sahf
cmp
adc
stc
add
jo
mov
loopne
add
loopne
loopne
sti
jmp
or
outsb
push
and
mov
jp
and
dec
fs
int3
add
push
or
mov
rolb
dec
call
popf
adc
add
je
jb
test
call
mov
cld
mov
and
sar
les
sub
cmp
fdivr
mov
add
popl
add
dec
repnz
fcom
adc
xchg
xchg
cmp
ss
cld
jmp
shll
sbb
and
mov
in
lock
loopne
pushf
cmp
mov
pushl
cmp
mull
lods
add
cmc
add
jmp
hlt
xchg
or
xchg
mov
int
enter
fdivl
fidivl
sub
std
adc
mov
ficomps
cmp
xorl
rcrb
nop
rcl
lret
sub
call
adc
adc
adc
adc
dec
repnz
les
add
test
rorb
and
jl
nop
add
lock
add
push
repnz
adc
add
orb
mov
test
sahf
push
add
mov
sub
cmp
std
mov
mov
aad
and
add
pop
jb
pushf
fs
push
push
enter
repnz
and
adc
in
enter
add
faddl
adc
adc
mov
repnz
movsb
add
aaa
je
out
push
and
or
cmpb
mov
jp
inc
and
adc
xchg
mov
mov
pushf
jmp
sarl
or
xor
xor
mov
and
or
lods
rolb
out
xchg
clc
fidivl
test
into
cld
push
jmp
insb
mov
and
or
adc
pop
and
insb
or
adc
jle
sarl
add
test
nop
add
hlt
add
cmp
nop
xchg
in
add
test
xchg
push
fld
sub
add
shll
hlt
lcall
sbb
xchg
sub
push
lret
scas
stos
icebp
inc
pop
sbb
mov
push
and
cmpl
add
insb
les
ret
or
iret
xchg
adcb
mov
mov
or
stos
add
in
es
insb
or
lods
mov
inc
mov
clc
das
mov
add
lret
nop
repnz
clc
ror
repnz
xchg
iret
sbb
adc
xchg
sbb
and
push
xor
test
add
sub
sub
push
fcoml
test
adc
add
jle
mov
shrl
movsl
adc
adc
fdivs
add
adc
sub
inc
xchg
adc
aam
and
or
insl
call
add
or
leave
mov
push
cli
andb
add
sub
add
testl
cmp
adc
iret
shlb
and
pop
and
mov
jl
or
je
lret
push
add
or
adc
mov
outsl
in
les
nop
pop
sub
rclb
les
add
sbb
repnz
imulb
cld
inc
add
sub
int3
jnp
mov
lods
dec
in
in
sbb
add
nop
add
lret
es
and
sub
in
test
dec
arpl
sbb
shl
pop
and
stos
ror
cmpsl
bnd
add
loopne
push
cwtl
push
or
or
shlb
xchg
or
add
movsl
adc
xchg
mov
inc
mov
mov
add
or
add
in
mov
decl
adc
add
cmp
movsb
add
sub
repnz
pusha
jle
sahf
push
dec
cwtl
or
or
adc
in
sub
sbb
dec
mov
shlb
pusha
orb
add
xchg
hlt
inc
nop
int
testl
mov
add
add
icebp
movb
push
cli
jo
les
popl
sbb
pop
adc
add
mov
dec
nop
push
xchg
ljmp
and
les
nop
or
xor
push
and
add
xlat
mov
aad
lret
add
leave
aas
insb
dec
fs
or
sub
pop
sub
sbb
add
mov
add
fs
or
movsb
nop
rclb
mov
inc
mov
add
add
cmpsl
ret
out
sbb
inc
push
pop
stos
insb
movsl
inc
daa
add
imul
shll
addr16
es
test
lcall
insl
fsts
jnp
jno
cmc
js
clc
sub
jge
ljmp
dec
test
mov
mov
mov
shr
cld
mov
int3
iret
hlt
vpunpcklqdq
cld
sbb
inc
dec
nop
cwtl
ja
lods
test
in
rolb
sbb
mov
les
pushl
inc
rcl
insb
adc
outsb
xor
loopne
inc
mov
or
pop
sbb
les
inc
xor
inc
add
nop
in
mov
repnz
jnp
jo
pop
xchg
add
add
mov
in
mov
lods
sbb
add
sbb
fsub
push
jecxz
xor
xor
lea
test
sub
add
sbb
call
jo
jmp
xor
jnp
jae
mov
movsl
fdivrl
filds
aam
fsubrp
and
andl
movsb
lds
imul
aam
jb
movb
aas
out
arpl
testl
mov
dec
cli
inc
sarb
aaa
shlb
mov
inc
mov
insb
xor
adc
test
fcomi
adc
lods
fs
fwait
xorb
stos
fmul
addr16
shr
add
adc
and
mov
mov
pusha
pushl
mov
pushf
pushf
push
pushf
pushl
ret
push
call
pop
inc
test
xchg
push
call
stos
inc
pop
insl
push
call
jns
push
call
or
jne
add
pop
push
call
sti
movsl
push
call
and
test
mov
push
aad
mov
ja
inc
cmpsb
dec
dec
aam
in
imul
out
arpl
je
outsl
inc
push
and
fs
inc
rcll
sub
call
inc
das
or
popa
pop
dec
pop
movsb
iret
jmp
push
mov
js
jbe
pop
inc
mov
and
out
mov
mov
push
arpl
fmul
out
ljmp
outsb
inc
or
mov
stos
ficoml
movsb
add
inc
push
dec
push
je
gs
insl
dec
outsb
outsw
inc
add
dec
xor
mov
sahf
fwait
ret
dec
xchg
jae
cmpb
in
adc
insl
push
pop
scas
pop
sub
iret
xchg
ljmp
cmp
xchg
jb
cli
cld
inc
jno
pop
cwtl
gs
jo
sarb
cli
or
or
cmp
testl
out
cmpsb
cmpl
push
shl
popf
fisubs
pop
xor
mov
cmp
stos
jno
movsl
loop
inc
pop
push
lea
pop
popa
sbb
fldt
push
call
pop
cmpsb
cmpsl
jb
push
call
push
imul
jg
xor
xlat
push
stos
cmp
mov
xchg
das
arpl
lret
push
ja
mov
das
dec
dec
jno
cmovg
inc
xor
shl
ja
daa
call
pop
and
dec
nop
adc
inc
push
xchg
movsb
xchg
dec
cmp
iret
icebp
jmp
int
fbstp
push
jnp
ret
loope
mov
dec
sti
jg
jle
adc
xchg
mov
ret
sbb
sub
pop
inc
rorb
jno
pop
sarb
jns
add
loope
cwtl
sbb
or
mov
andl
push
push
stc
addr16
mov
leave
or
nop
test
mov
or
shrb
mov
sub
mov
mov
xchg
test
and
xlat
leave
adc
shll
aas
int
ret
xor
das
push
test
cwtl
lea
fldt
pusha
mov
stc
cmp
jmp
push
call
inc
push
call
mov
add
vcvttsd2si
cmpsb
lods
stos
rolb
push
addr16
dec
jl
aad
popf
add
sub
or
cwtl
call
cmpsb
jge
ds
fadds
dec
inc
repz
addl
and
xor
aas
pop
inc
jnp
repz
leave
sub
js
fwait
pusha
sarl
add
int
adc
aam
lods
and
add
xchg
mov
adc
sbb
sahf
fldl
adc
jbe
jne
fldt
push
pusha
jmp
mov
lea
call
push
movb
lea
jae
push
cmp
xor
pusha
lea
call
pusha
push
lea
jae
test
call
push
call
stc
xchg
scas
push
call
repz
test
add
mov
push
dec
inc
dec
dec
xor
cs
insb
add
jne,pt
add
dec
sbb
xchg
notl
xor
mov
imul
scas
dec
adc
repz
leave
test
add
adc
insb
fidivrl
cmpsb
enter
and
inc
into
cmp
pop
lahf
lret
dec
popf
jge
xchg
jae
nop
mov
mov
jp
out
mov
cmp
sbb
fs
dec
lcall
mov
pop
clc
ds
lahf
jecxz
push
call
out
sahf
pop
nop
outsb
xor
sbb
in
fs
push
xor
sbb
mov
cmp
enter
xchg
sub
inc
inc
int
mov
xchg
jbe
xor
jmp
sbb
pusha
fs
dec
shl
mov
imul
pop
push
dec
fwait
and
fdivrl
jecxz
stos
lcall
call
aaa
add
mov
test
filds
add
popa
shrl
adc
add
loopne
fcmovbe
pop
mov
push
lea
jmp
push
call
inc
xor
ret
aas
adcb
mov
movq
popa
sbb
mov
add
pop
mov
inc
jo
ss
sbb
adc
push
jmp
sbb
int3
ret
adc
int3
fdivrl
notb
sbb
scas
sbb
bound
out
add
fistl
rclb
lods
jecxz
cld
mov
pop
cltd
cmp
inc
sarb
jae
ds
and
pusha
push
mov
out
test
jge
adc
push
pushl
ret
push
call
ds
pop
das
sbb
sub
mov
and
inc
popf
xchg
or
sub
js
icebp
dec
fbstp
jns
pop
incl
shll
pop
in
test
xor
push
xor
test
ds
std
adc
dec
stos
test
in
xor
repnz
add
jb
ret
cs
shll
adc
lods
adc
sahf
inc
pop
xchg
rclb
dec
lock
test
mov
inc
cmp
ret
mov
cmp
stos
loopne
lods
sub
jge
or
stos
pop
scas
adc
outsl
in
or
push
out
xor
rorb
lds
pop
jge
sub
jbe
imul
push
mov
dec
fmull
les
lcall
lods
pop
xor
daa
mov
jns
adc
jb
push
jnp
add
fisubrl
adc
movsl
push
adc
data16
pop
xchg
mov
fldt
push
call
mov
sub
xchg
lods
and
adc
push
xchg
push
mov
and
dec
jp
sbb
outsb
xor
insl
pop
cmc
add
fdivl
loopne
xor
sub
movsb
int3
gs
mov
das
insb
ret
push
sub
xor
mov
and
clc
pop
push
mov
iret
push
je
dec
cmp
pop
dec
int
push
fcmove
dec
insb
and
mov
dec
adc
leave
xor
jae
dec
dec
pop
je
mov
imul
jne
adc
mov
pop
daa
js
stc
dec
or
sbb
mov
mov
jecxz
rcr
das
ja
push
rcrb
mov
fldt
icebp
adc
jo
pushl
jb
and
and
jne
inc
mov
cmpsb
dec
dec
mov
loop
xlat
push
mov
sbb
imul
rcrb
and
sub
pusha
ds
pop
jge
and
jmp
xchg
xchg
enter
fldt
loop
sbb
fwait
fwait
and
pop
ss
and
cmp
and
jns
je
xchg
adc
ret
shlb
rol
cmpsl
imul
and
push
xchg
cmp
sbb
dec
aas
jb
inc
jecxz
int
popa
pop
cmp
test
jo
stos
loope
ja
push
call
xor
adcl
sub
test
add
add
mov
bsr
bt
sub
inc
stc
shr
bt
dec
clc
mov
xor
and
add
call
dec
and
int
mov
dec
mov
dec
ljmp
scas
jg
cmpb
pop
jo
les
sub
shl
outsl
rcll
xchg
out
xchg
mov
or
addr16
ds
gs
mov
mov
mov
lahf
jl
and
cs
dec
jp
sub
adc
daa
cmpsb
dec
push
es
xchg
mov
mov
push
and
shlb
stos
jecxz
pop
push
push
call
lds
dec
movsl
push
call
test
dec
mov
in
movsb
cld
adc
loopne
movsl
jge
add
jg
add
test
xorl
mov
enter
dec
test
sbb
in
push
in
dec
and
mov
add
cmpsl
and
pop
repnz
dec
data16
daa
mull
push
out
pop
fidivl
mov
repz
into
cmp
stos
dec
xlat
stos
mov
add
out
xchg
and
idivl
mov
dec
gs
popa
addr16
outsl
js
add
adc
test
xchg
roll
add
pop
rorb
call
lods
mov
int3
push
inc
mov
add
dec
testb
xchg
dec
and
mov
lret
and
insl
cltd
leave
icebp
loop
add
out
addr16
jno
pop
movsl
or
addb
push
sbb
int3
imul
enter
lods
mov
lcall
push
jp
js
add
mov
cmp
sub
jnp
jmp
adc
mov
movsb
sub
mov
cltd
andb
out
and
lock
fldt
je
ja
mov
in
fwait
stos
push
fbld
mov
lahf
adc
insb
rol
mov
pop
loopne
adc
out
int
leave
xchg
data16
pop
jl
sbb
test
cmpsb
inc
adc
xchg
xor
xor
cmp
mov
mov
push
out
add
sahf
in
xor
test
in
scas
adc
mov
and
bound
test
psubb
mov
ss
std
int
stos
sarb
iret
push
fldt
insl
mov
cld
xchg
or
les
adc
lret
pop
andl
rolb
xchg
jp
scas
pop
in
xor
adc
mov
add
or
aad
shlb
cmpsl
das
cld
mov
and
in
push
stos
mov
pop
les
push
data16
lods
popa
aaa
and
or
les
aaa
shrl
dec
mov
movsb
lods
lret
mov
push
jne
push
mov
fwait
lret
pushf
mov
sub
dec
pop
add
sahf
int
xchg
lea
pop
not
seta
pushf
mov
mov
lea
jne
pusha
pushf
mov
mov
pushf
mov
movb
pusha
pushf
pushl
ret
push
call
int
push
add
add
test
pop
inc
adc
mov
js
je
icebp
pop
popf
sub
xor
xor
out
mov
ds
les
dec
inc
and
jp
inc
iret
enter
jecxz
or
int3
inc
sbb
dec
roll
rcr
add
nop
adc
fnstcw
in
jns
aaa
pop
and
sti
mov
sub
dec
into
lahf
push
push
xor
sbb
fnstsw
push
xor
push
in
mov
or
stos
in
je
pushf
call
xchg
push
lret
int3
xlat
cmp
pop
or
fwait
fs
pushf
int
adc
pop
sub
push
inc
add
and
and
incb
xchg
push
mov
pusha
ss
sub
stc
fsubl
jno
lea
pop
push
pop
divl
std
inc
sbb
rclb
fsubrl
and
xchg
inc
jmp
pop
sbbb
push
xchg
stos
push
pop
mov
mov
jl
or
push
pop
fldt
push
call
sbb
lods
in
xchg
rep
test
xchg
popf
dec
sbb
jmp
jnp
mov
stos
sub
shrl
push
sahf
push
jg
mov
jne
aas
jnp
jae
in
sub
jns
test
jge
mov
daa
addr16
es
push
sbb
mov
sub
inc
mov
ds
aam
or
int
sbb
repz
fwait
mov
mov
sub
add
leave
cmp
iret
xchg
bound
sbb
out
lahf
filds
jne
mov
jo
or
rcll
or
jbe
fimull
or
int3
call
push
aas
fstl
daa
pop
lret
leave
stc
sub
jmp
insl
jae
pusha
nop
xor
stos
mov
or
enter
inc
mov
push
movsl
aaa
add
leave
stos
dec
jno
repnz
push
cwtl
fistpl
ja
mov
sbb
push
xor
movsb
pop
cmp
aaa
push
add
add
nop
in
rcrb
into
mov
stos
out
cmp
add
fdivrp
cmpsl
ds
and
movsl
pop
addr16
add
add
repnz
call
mov
in
sub
scas
pop
cmp
lret
xchg
call
insb
push
stos
mov
or
mov
int3
lock
popf
subl
stos
pop
js
push
in
jo
insl
cmp
sti
hlt
sub
cmp
jl
push
stos
imul
fldt
push
or
adc
mov
dec
mov
adc
dec
movsb
lret
arpl
ja
mov
daa
cmp
movsl
les
loop
sti
mov
loopne
insb
push
push
push
fdivs
leave
out
into
push
test
arpl
addr16
jmp
sbb
loop
push
test
add
sub
std
mov
aam
stos
pop
and
in
mov
inc
ja
push
repnz
xor
mov
mov
mov
stos
js
mov
clc
in
loope
adc
jae
mov
stos
jmp
movl
fs
je
test
cmp
call
push
call
mov
test
jecxz
cmp
sarb
pop
insl
hlt
rorb
jp
outsl
pop
mov
loopne
sbb
add
mov
or
lahf
jbe
push
pop
cli
and
and
jp
pop
dec
shll
add
push
xor
bound
dec
rolb
enter
mov
jmp
inc
inc
iret
lret
pop
sahf
frstor
movsb
test
pop
pusha
aad
cmpsb
lods
xlat
jns
out
les
xor
mov
les
jmp
mov
sbb
inc
stc
cmpsb
jecxz
daa
scas
lret
stc
in
sti
add
ficoms
sti
jp
fldt
push
call
adc
flds
int
dec
adcl
ja
aam
insb
and
inc
xchg
jecxz
push
mov
push
imul
rol
mov
or
mov
mov
arpl
add
sub
jge
sub
rcrl
jo
xor
mov
dec
sbb
test
inc
adc
xchg
stos
bound
jns
inc
lea
stos
ljmp
dec
insb
sarb
xchg
mulb
ds
inc
cs
test
sti
nop
arpl
dec
test
mov
or
dec
push
push
ljmp
js
adc
addl
add
push
call
or
xor
mov
pushf
pusha
lea
jmp
cmp
inc
iret
pop
popa
jl
adc
inc
cmc
fstpt
mov
inc
adc
js
decb
or
test
inc
popf
out
pop
and
inc
cli
xor
hlt
mov
jp
cmpsb
ljmp
xchg
loop
mov
mov
ret
test
push
inc
data16
sub
jo
mov
add
mov
data16
out
dec
sbb
pop
leave
stos
js
decl
outsb
out
mov
push
iret
icebp
jns
lods
pushf
andl
jmp
mov
fldt
sub
idivb
inc
push
add
ds
or
xchg
iret
out
pop
aaa
jge
jns
loope
call
push
add
cmpsb
add
xchg
dec
or
add
cmpl
xor
loopne
lock
insl
pop
or
outsb
dec
cwtl
mov
pop
mov
nop
pminsw
add
jp
lods
adc
scas
xor
outsl
push
rorb
dec
adc
and
stos
in
es
pusha
lea
jae
jmp
add
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
ret
sub
test
push
inc
loopne
mov
hlt
lea
in
aas
insb
incl
scas
shrl
push
and
call
es
out
cmpsb
sub
mov
sti
lcall
adc
in
pop
lods
mov
adc
repnz
mov
inc
ljmp
icebp
je
inc
push
mov
rcll
xchg
adc
xorl
or
jne
inc
loope
add
fldt
push
cmp
xchg
pop
mov
sbb
inc
mov
push
mov
mov
push
mov
mov
or
stc
mov
cld
push
jmp
xchg
xchg
hlt
sbb
inc
xor
scas
push
dec
nop
ljmp
xchg
pop
scas
mov
mov
cmp
mov
mov
out
inc
sti
test
mov
mov
xor
xchg
cmp
mov
das
adc
xor
ret
vsqrtss
or
in
mov
pop
jne
add
jnp
lret
inc
outsl
and
or
addr16
cmpsb
pushf
jp
cltd
gs
bound
jne
jne
jae
add
mov
cs
out
cmc
jg
outsl
sbb
dec
imul
cli
add
xchg
sbb
xchg
repz
jg
push
add
push
or
jecxz
push
adc
adc
int3
ret
jae
mov
jmp
addl
mov
and
jl
adc
push
cli
fldt
push
call
jmp
xlat
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
sbb
test
fcmovnbe
add
mov
mov
add
add
sbb
pop
and
xchg
addr16
je
das
scas
imul
inc
mov
idiv
mov
jge
cli
inc
mov
ror
dec
adc
fnstenv
test
cltd
mov
shlb
lcall
adc
and
arpl
add
and
hlt
adcl
aad
adc
dec
pop
jnp
or
scas
lods
imul
sahf
mov
dec
add
stc
xchg
jnp
mov
mov
stos
out
mov
popf
push
call
jg
pop
push
call
jle
push
call
xor
iret
cs
xchg
cmp
sbb
aas
jno
dec
push
sub
out
ds
out
idivl
push
std
repz
imul
sub
pop
cmpsb
divl
leave
mov
lret
cmp
mov
movsb
icebp
cmc
push
push
pop
or
je
jb
jnp
inc
dec
and
cmp
out
xchg
cmp
inc
test
notl
jbe
dec
fs
in
push
fsubl
test
in
push
cmp
xchg
ja
and
shrb
stos
lock
fs
call
std
dec
cltd
lret
xchg
jne
arpl
cltd
cmp
sbb
out
mov
mov
jns
xchg
pop
pop
mov
mov
add
adc
ljmp
pop
in
lds
fwait
insb
leave
lods
inc
cmovle
cmp
mov
mov
xchg
sub
cli
cmp
fdivr
fnstenv
rclb
outsb
shll
mov
sbb
pop
add
stos
lock
xlat
mov
mov
std
jecxz
stos
rcr
mov
adc
pop
out
ret
and
jo
shlb
idivb
xchg
xor
mov
push
nop
fsubr
sub
cmp
xor
xchg
loope
shrb
cmpsl
jnp
mov
jns
xlat
in
sbb
fldt
cmp
popf
out
rcr
jo
push
fs
leave
jge
pushl
frstor
sub
xchg
inc
aas
int3
in
xlat
push
push
cmp
pop
cmp
pop
jmp
fldt
dec
into
lea
imulb
jecxz
clc
xchg
sub
lea
adc
orb
mov
movsl
push
jmp
cmp
jne
adc
popf
or
lahf
rorb
xor
lcall
mov
outsb
dec
fwait
test
jg
ja
cmpsl
stos
lret
int3
inc
leave
imull
cmp
push
into
inc
xor
adc
cmpsl
js
xlat
mov
jae
add
push
add
int
and
nop
cmpsb
push
stos
enter
stos
icebp
mov
or
test
jg
sbb
dec
std
mov
in
push
push
xchg
push
test
inc
roll
call
jne
adc
dec
cltd
imul
dec
idivl
pushf
xor
js
inc
mov
mov
daa
test
sub
pop
lret
ret
cmp
jg
stc
sbb
lcall
lahf
push
pop
gs
push
sbb
sub
sbb
inc
ja
mov
or
pop
and
je
mov
stos
repnz
in
push
call
adc
pop
bswap
call
push
mov
psrld
cmp
imul
loope
mov
jb
in
adc
push
jmp
fwait
es
pushf
sub
push
pop
loopne
lds
jg
ds
push
pop
or
js
in
jg
aaa
sub
mov
and
es
lods
mov
dec
ret
dec
call
fwait
cltd
sahf
adc
loopne
add
call
sub
xchg
nop
fldt
push
call
jge
gs
jg
mov
loope
test
fiadds
test
pusha
cmc
ret
lahf
enter
std
lahf
or
mov
cmpsb
imul
mov
outsb
adcl
and
push
mov
loope
repz
popl
sbb
scas
scas
jle,pn
in
dec
hlt
mov
push
cmp
inc
jb
push
adc
out
cmp
je
fldt
mov
mov
adc
adc
add
push
xchg
pop
jl
push
clc
adc
lea
mov
xor
jl
inc
mov
jecxz
push
cwtl
loop
inc
cli
test
adc
or
test
sub
push
fcoms
mov
jmp
dec
adc
xor
cmpsl
and
insb
ret
dec
addr16
ljmp
jno
cmp
pop
pop
stos
aas
mov
fldt
mov
adc
jns
unpcklps
or
cltd
adc
pop
inc
xchg
out
sahf
aaa
out
cvtpi2ps
int
pop
pop
pop
aad
test
dec
cmp
aad
adcl
test
loop
es
mov
mov
out
xor
xor
push
lcall
mov
sub
ret
pop
xchg
adc
inc
enter
fwait
inc
mov
ret
push
loope
mov
xor
cltd
nop
stos
mov
sub
push
adc
dec
shr
xchg
cld
dec
cltd
xor
int3
cli
stc
call
hlt
lcall
test
mov
jmp
push
call
dec
std
adc
push
call
mov
push
in
cli
adc
sub
cltd
xchg
mov
mov
rcll
scas
push
sbb
cmp
jo
xchg
xchg
lds
in
and
add
das
ret
push
rorb
aaa
in
xor
fs
hlt
cmp
sub
pop
or
ja
xor
clc
mov
mov
xorl
scas
fstps
enter
test
inc
cs
mov
xor
pusha
pop
mov
shrb
popf
cwtl
loopne
into
dec
add
inc
dec
stos
ret
pop
into
jge
fldt
les
jp
xchg
mov
movsl
adc
int
push
xchg
call
xor
sub
pop
test
mov
loope
clc
jne
cltd
in
or
es
add
sbb
mov
sub
mov
add
jb
mov
pop
adc
loopne
push
sbb
loope
cmp
jbe
call
xor
pop
sub
xchg
testb
shll
ret
insb
das
cmp
dec
and
dec
push
sbb
sbb
sub
inc
ret
out
pop
sub
sbbl
out
in
cmp
mov
mov
mov
mov
repnz
test
test
or
fs
insb
push
inc
xchg
adc
mov
push
insl
fs
push
in
subl
psubsw
fdivl
sbb
push
xor
adc
sbb
stc
das
das
popf
lods
xlat
xchg
mov
dec
jo
pop
jnp
imul
in
insb
and
mov
adc
popa
xor
jecxz
pop
and
mov
testb
in
push
push
and
lea
mov
sbbb
push
add
inc
xor
and
jge
sbb
iret
mov
lret
adc
and
and
jnp
fldt
push
call
leave
push
int3
push
call
push
outsl
insb
gs
cs
insb
add
xchg
cmp
xchg
mov
jle
cmp
je
jo
out
sti
lods
sbb
push
sbb
js
test
int
repnz
rorb
imul
js
adc
sbb
lret
inc
imul
mov
fwait
lret
hlt
insl
xchg
xchg
add
aam
hlt
mov
fisubl
clc
jbe
out
sbb
movsl
sbbl
pop
mov
cltd
test
daa
inc
mov
fldt
call
lods
jb
loopne
cltd
and
stos
mov
inc
push
out
lahf
js
xlat
adc
shrl
test
add
bound
insb
cmp
movsl
repz
mov
icebp
mov
cmp
nop
arpl
decl
arpl
push
jne,pn
add
sub
into
dec
test
cmp
add
jge
mov
pop
and
mov
jp
adc
or
mov
nop
movsl
or
fcmove
lods
add
into
lds
stos
clc
cmpsl
std
pop
lea
mov
call
dec
dec
inc
inc
push
push
xor
cs
insb
add
fildl
shr
mov
jmp
in
jbe
jmp
orl
pop
sbb
jmp
pop
jo
xor
mov
mov
scas
lahf
aaa
daa
mov
js
test
cmp
pop
or
test
sub
in
cs
rcrb
mov
xchg
or
imul
cmp
jno
sub
sub
mov
mov
nop
push
jg
mov
sub
inc
jge
xor
addl
int
mov
repnz
sub
pop
dec
adc
jbe
fldt
jns
push
sbb
dec
inc
fisubrs
cltd
push
cmp
addr16
add
xchg
jno
repz
and
cmc
cmp
mov
ds
xor
mov
notl
in
dec
outsb
sbb
ret
mov
cmp
repnz
cs
mov
mov
cmpsl
mov
mov
xor
aaa
xor
or
dec
mov
mov
inc
inc
mov
adc
addr16
orb
je
stos
stc
jb
jecxz
push
stc
adc
add
xor
cld
pop
pop
adc
lcall
bound
xlat
or
cmp
lods
sub
xor
adc
iret
mov
jecxz
pusha
sub
test
mov
nop
fistpll
in
fldl
fwait
test
mul
call
loopne
cmc
jb
fwait
xor
stos
stc
ret
sbb
pushf
pop
sub
idivb
fs
mov
dec
imul
nop
dec
in
cld
sbb
and
inc
sti
cmp
xorb
push
dec
ss
add
inc
xor
lods
movsb
adc
jo
cltd
inc
aam
and
add
inc
push
mov
jb
xchg
adc
xlat
mov
add
cmp
aas
sbb
add
aam
push
mov
jge
icebp
mov
in
mov
jle
jl
sub
rcll
aas
mov
fimull
pop
xlat
cmp
cld
sub
jns
loop
jp
mov
popa
dec
and
pop
call
test
int3
repnz
stc
or
jmp
mov
cli
adc
icebp
xor
stc
mov
mov
lret
cwtl
sub
add
sti
and
push
orl
pop
dec
hlt
icebp
sahf
sub
stos
jecxz
aaa
push
mov
push
or
mov
xor
neg
stos
sti
mov
pop
push
call
push
push
jnp
push
call
xchg
rcll
cmp
cmp
xor
push
ljmp
push
mov
xchg
lcall
inc
cmpsl
cmp
mov
enter
cld
fsubs
pop
xchg
cmp
sti
enter
jmp
ror
aam
jg
mov
ficoml
imul
ret
jg
test
into
ret
mov
dec
dec
push
or
pushf
xchg
cld
cmpsb
cmp
pop
ret
mov
inc
dec
pop
lcall
test
sti
mov
and
jb
stc
test
cmpb
call
push
call
mov
ja
pushf
call
push
call
jae
push
stc
xchg
lock
testb
push
in
popl
nop
fsubrs
sbb
out
out
mov
inc
mov
xor
pop
mov
scas
sub
mov
sbb
or
jecxz
mov
lods
mov
or
imulb
aad
movsl
mov
cmp
cmp
jge
xchg
and
adc
xchg
sub
cwtl
mov
popf
lds
xchg
or
iret
push
jb
aad
dec
ljmp
xchg
fldt
push
call
cmp
push
call
lret
das
adc
add
add
or
repz
mov
insb
jno
lds
mov
sbbb
outsl
aaa
lea
ds
mov
jl
jae
inc
sub
inc
mov
push
jmp
xchg
js
fbld
mov
popa
cld
mov
jne
mov
pop
gs
sbb
lea
cmp
stos
or
lahf
es
inc
jp
lret
std
mov
mov
mov
cmpsb
popf
dec
testl
sub
pop
cmp
push
cmp
mov
xchg
cwtl
mov
pop
mov
sbb
lahf
in
in
add
add
leave
ja
outsl
and
fdivrs
aam
test
add
int
or
or
inc
lock
push
mov
pop
mulb
test
data16
xchg
aad
mov
jae
pop
add
outsl
or
arpl
fs
xor
cs
insb
add
cld
repz
push
outsl
jle,pn
mov
inc
lea
xor
push
popf
sbb
or
ljmp
or
xchg
arpl
mov
inc
dec
addr16
aas
dec
sub
mov
iret
and
lahf
bound
add
scas
cmpl
imul
mov
mov
add
int
mov
std
and
in
or
add
stos
xchg
xlat
icebp
xor
mov
test
sti
fidivrl
adcl
xor
ret
cmp
jp
cs
lcall
popa
xchg
testb
xor
sbb
inc
inc
popf
jo
out
shrb
or
in
mov
add
cs
xor
loop
and
jno
add
repz
mov
sub
jnp
loop
xchg
pop
add
fldt
mov
gs
shll
bnd
xchg
ror
adc
in
nop
stos
mov
rol
and
xor
sub
mov
adc
mov
cltd
xor
dec
iret
aad
repnz
mov
pop
cld
xchg
mov
pop
jbe
jp
xchg
cmp
adc
inc
mov
scas
fs
sbb
or
hlt
mov
inc
add
stos
fldcw
jnp
lods
add
pusha
adcl
iret
fidivs
cmp
mov
push
sub
xchg
lds
fldl
nop
jbe
cli
mov
pop
int3
arpl
shrb
imul
test
sbb
mov
shl
pop
adc
inc
in
inc
popf
int3
dec
dec
jmp
lock
pop
popa
insl
mov
sbb
and
negb
cld
dec
movsb
fwait
and
sti
mov
mov
push
in
sub
xchg
pop
mov
inc
or
js
lret
fldt
les
and
mov
jbe
cmp
or
inc
and
pop
mov
jge
mov
test
imul
out
dec
aad
push
push
rcrb
loop
lods
dec
push
lock
repz
pushl
enter
or
out
dec
jl
scas
hlt
fldt
and
jle
inc
cmp
or
mov
call
xlat
xor
xor
inc
dec
mov
add
cs
jle
mov
mov
sub
add
dec
add
test
push
fdivrs
inc
and
lahf
pusha
stos
insl
cwtl
xchg
push
rorl
ror
xchg
adc
push
adc
lods
add
out
icebp
or
icebp
inc
repz
mov
shrb
push
push
add
repnz
je
mov
repz
xchg
popf
jne
aas
jno
sbb
sub
xchg
jecxz
ret
sar
mov
int3
pushf
adc
and
jbe
insb
iret
or
aam
add
nop
xchg
jecxz
push
repz
in
rcll
in
add
ret
mov
aas
or
mov
insb
mov
or
iret
divb
fldt
sbb
jb
cmpsb
mov
fmull
add
lahf
iret
and
loop
dec
xlat
xor
nop
xchg
scas
clc
cmp
mov
mov
sahf
mov
inc
rolb
mov
mov
dec
lret
fucomip
xchg
sub
cmp
test
lods
sub
in
pop
push
stos
pop
rcll
outsb
cmp
loop
int
mov
test
test
push
mov
sbb
mov
int
mov
and
jp
mov
dec
adc
lods
add
adc
add
adc
sbb
cld
inc
sub
cmc
jo
cld
push
sub
jle
in
in
stos
adc
jae
sarb
lea
or
lods
cmp
xchg
fstpl
dec
cmp
xor
cmpsb
mov
cwtl
test
or
xorb
push
inc
push
and
mov
adc
dec
outsb
out
push
or
adc
xacquire
inc
repz
lret
aas
sarb
sub
jg
inc
xchg
movsl
aam
scas
and
cli
bswap
jbe
jge
push
add
lods
add
jbe
test
pop
mov
fistl
imul
jg
aam
mov
pop
test
and
mov
int3
or
pop
xor
and
cmp
movsl
jmp
jbe
outsl
xor
imul
add
dec
push
mov
jl
lods
lods
mov
mov
pop
or
test
sbb
mov
jg
or
jae
adc
das
shl
int3
adc
lahf
fs
daa
out
and
lods
add
scas
mov
in
sub
cwtl
aas
xchg
mov
xor
push
rcl
dec
ret
sub
icebp
mov
or
pop
rclb
mov
pop
imul
mov
loope
mov
mov
inc
test
out
loope
add
inc
pop
notl
dec
or
pushf
push
and
mull
dec
je
cmp
pop
inc
and
pop
stos
cltd
je
pop
push
mov
lods
add
xor
mov
adc
add
add
call
push
rolb
dec
out
xchg
xor
iret
push
inc
je
pop
mov
out
fistpll
test
sub
cmp
pop
jl
iret
xor
add
dec
dec
lret
add
xor
mov
push
addr16
clc
enter
clc
lds
movsl
dec
xchg
jl
sahf
add
ja
add
popf
dec
into
call
push
sahf
dec
or
call
xchg
insb
mov
adc
aam
dec
and
add
jnp
and
enter
ret
sbb
clc
out
insl
inc
sbb
mov
cs
adcb
call
and
outsl
lret
or
jl
cmpsl
push
dec
or
mov
test
inc
jmp
fnstenv
cmp
addb
pop
cmp
sbb
adcb
bound
sbb
stos
and
and
xor
mov
pop
inc
adc
inc
sahf
mov
repz
pop
jae
movsl
or
in
cmp
out
push
dec
dec
stc
dec
dec
and
xchg
xchg
xor
lret
or
add
pop
and
lods
add
sti
push
push
sub
outsl
jb
in
adc
scas
les
mov
test
push
sub
repz
xchg
and
push
aam
xchg
fucomp
cmp
sub
jo
repz
add
mov
lret
daa
cltd
enter
dec
xchg
fsqrt
fidivrl
pop
movsb
iret
inc
cs
aaa
dec
clc
ja
cmpsb
cmc
add
cltd
dec
mov
iret
pop
andl
dec
in
mov
fisttpll
sub
mov
mov
aaa
fxch
icebp
jno
aad
adc
scas
sahf
mov
sbb
lods
add
xchg
xor
dec
adc
add
cmp
test
cs
mov
scas
pushf
mov
in
adc
xchg
and
push
cmp
test
pop
std
dec
jns
cmpsl
mov
or
pop
std
inc
jbe
shl
push
xchg
ljmp
lods
aam
mov
push
js
cltd
es
sbb
ds
daa
cmc
stos
sub
les
fwait
sbb
xor
repz
jle
cmp
into
sbb
push
orl
lods
push
fisttps
xor
out
mov
dec
pop
push
xor
xor
lret
das
push
daa
or
pushf
std
shl
fistps
and
leave
test
xchg
mov
jns
adc
and
test
add
call
test
cmp
fwait
lcall
inc
xor
aam
dec
scas
and
idiv
or
gs
je
dec
fldt
and
test
mov
dec
sub
jbe
sub
inc
cmp
fiadds
mov
xorb
cmp
push
inc
adc
aas
das
cmp
into
pop
movsb
mov
lcall
jl
jno
pop
pusha
sub
ljmp
lret
lret
and
int3
dec
ret
ss
mov
and
or
into
pop
and
inc
adc
les
cs
and
sbb
pop
sub
pop
out
fldt
lock
cmpsl
sbb
add
xor
stos
clc
lea
addr16
mov
shrl
clc
enter
lods
repz
mov
pop
outsl
aaa
xor
and
adc
out
das
xchg
lock
and
xchg
lret
mov
inc
xor
push
jge
clc
jne
push
adc
jecxz
stc
cwtl
sarl
neg
jns
popa
ret
push
std
dec
mov
xor
ljmp
out
out
add
or
cmp
lods
or
stc
scas
mov
leave
push
imul
loop
loopne
sbb
jns
mov
loopne
add
mov
aad
sbb
bound
mov
mov
insb
aad
dec
jo
notb
mov
lods
sub
test
enter
arpl
mov
lahf
iret
ja
mov
inc
adc
cmp
pop
insb
cs
jae
or
ja
jl
imul
call
lods
or
fldt
xor
sub
out
xchg
cld
dec
mov
mov
clc
mov
dec
jo
in
or
sbb
hlt
lret
xor
pop
pop
xchg
ds
cmc
lock
out
cmp
xchg
and
mov
std
std
add
mov
pop
les
addr16
mov
xlat
int3
int3
imul
pusha
dec
pop
aaa
lock
and
pop
mov
fnstsw
or
cmp
into
add
mov
or
inc
push
cmp
mov
xchg
insb
and
mov
lret
sbbl
xchg
fdivrs
lods
sub
push
sub
call
mov
sub
popa
nop
push
insb
xchg
mov
sub
xchg
es
mov
repz
sbb
sbb
jne
add
xchg
jge
push
call
lds
xor
push
call
xchg
mull
fwait
inc
xchg
out
push
inc
cltd
xor
sub
int
in
adc
jmp
or
dec
test
xor
lcall
mov
adc
fidivl
pop
clc
jmp
and
pop
ficompl
sti
ret
sbb
sbb
pop
mov
cmc
xor
lcall
add
push
ss
fsubrl
popa
add
mov
lods
or
jne
push
call
adc
sub
or
out
adc
add
jnp
inc
push
sahf
orb
add
in
mov
mov
sub
mov
mov
imul
mov
cmpsb
je
in
pop
xchg
ljmp
cmc
inc
scas
lret
xchg
in
and
loope
lahf
in
popa
pusha
sub
sbb
aaa
jmp
inc
cmp
push
push
in
cmc
cli
shlb
mov
fistpl
mov
insb
xor
cs
insb
add
jmp
stos
add
cs
sahf
stc
insl
lret
and
cmp
int3
mov
dec
aam
nop
pop
notb
loop
pop
sub
loope
cmp
and
sti
movsl
leave
leave
jg
or
inc
mov
fdivs
push
add
jmp
subl
loop
pop
test
mov
jmp
rcl
lock
lods
or
push
jge
xor
mov
cltd
inc
les
adc
dec
cli
jle
lahf
xchg
divl
pop
sbb
lds
nop
xor
sub
xor
sub
in
inc
call
in
jp
pop
fcomip
jp
xor
push
aam
pop
pusha
sub
popa
movsb
sub
xlat
cmp
cmp
adc
negb
or
aas
test
mov
enter
fldt
dec
push
adc
add
bound
inc
test
pop
sub
mov
frstor
std
xchg
lcall
pop
cmp
sub
sub
int3
dec
mov
jle
pop
outsl
loope
ja
cmp
daa
outsl
sub
test
push
jo
ret
push
sub
scas
inc
insb
push
enter
mov
rorb
out
dec
stos
mov
add
mov
or
lcall
test
pop
es
iret
xchg
testb
fcoms
test
xor
add
and
hlt
test
jl
push
adc
xchg
stos
fldcw
imul
insb
stos
cltd
cmpsl
add
jp
mov
arpl
and
ljmp
mov
cli
fwait
xor
lret
pop
mov
cmpsb
xor
repnz
jnp
or
push
ret
and
xor
xor
mov
movl
out
mov
inc
fnstenv
mov
jnp
inc
iret
in
ret
neg
lods
or
enter
mov
test
movsb
mov
add
notl
sbb
and
add
lds
scas
jno
cwtl
push
cmc
dec
cmp
leave
mov
cmp
stc
rolb
mov
push
es
lea
jl
scas
mov
call
sbb
fwait
push
or
or
xchg
mov
loop
cmp
lcall
les
mov
in
into
mov
imul
fdivs
xchg
outsb
imul
test
lods
or
mov
pop
cmp
and
fwait
mov
push
xchg
les
sub
aam
push
pop
sbb
inc
hlt
outsb
loopne
rorl
cmp
push
lea
sti
dec
data16
lds
int
lea
int3
or
or
int
lret
das
addr16
mov
rolb
lret
jl
cs
mov
scas
inc
push
sbb
sub
jp
lods
push
out
test
adc
aam
mov
push
cmp
pop
push
cli
mov
or
test
jne
add
lods
push
dec
inc
ror
jmp
push
call
pop
lret
sbb
add
jno
cltd
push
rcrb
rolb
mov
and
sbb
out
ret
xchg
insl
sbb
in
pop
shll
out
sbb
loop
inc
aaa
inc
test
icebp
pop
ficomps
mov
sbb
out
mov
ds
mov
mov
xor
stos
jb
lcall
cmp
fidivs
xchg
popf
sti
jg
leave
bswap
mov
inc
sahf
inc
iret
sar
orb
bound
xlat
jle
mov
push
sbbb
jmp
sbb
push
jmp
xor
xchg
and
scas
cmp
rolb
inc
or
lods
cmpsl
stos
insl
sbb
lods
int
mov
xchg
sbb
jno
lods
xchg
dec
out
sub
js
sub
cmp
jl
jl
imul
and
pop
or
mov
pop
mov
dec
xor
iret
xchg
cmpsl
rorl
cwtl
cmp
pop
mov
fisttpl
daa
fs
addr16
push
out
loop
add
jbe
add
mov
mov
iret
es
lods
xstore-rng
cmpsl
inc
outsl
lea
je
clc
cmp
sub
stc
test
cmp
pushf
pushf
lea
ja
stc
pusha
imul
pusha
cmp
add
mov
push
push
movb
lea
jmp
test
pusha
sub
movb
pusha
push
movb
lea
call
jmp
push
call
testl
and
ljmp
xorl
cmp
fsubl
imul
fildl
or
jl
mov
jb
sbb
fldt
add
imul
jae
loopne
sub
jle
dec
leave
out
lahf
fadds
aad
repz
icebp
out
les
es
sbb
dec
inc
lret
fs
sti
push
xor
iret
repnz
ret
push
insb
add
add
jbe
add
ret
xchg
outsl
jg
adc
sbb
pop
loope
insl
stc
jle
hlt
dec
fidivs
insl
jo
lods
ficoml
nop
filds
stos
push
mov
aas
into
std
lods
in
sarb
movntq
int3
xchg
insl
mov
jae
jmp
adc
add
xlat
pop
pop
mov
outsb
pop
int3
lock
xchg
mov
fst
jo
push
fistpl
mov
mov
and
repnz
mov
adc
repz
mov
outsl
mov
jp
test
xchg
mov
adc
push
and
pop
mov
jno
xchg
pop
std
imul
and
into
inc
mov
in
lods
adc
pop
dec
setb
call
frstor
subl
and
in
xor
popa
push
push
sti
subl
cmpsb
push
sbb
pop
das
mov
pop
dec
jge,pt
mov
shrb
imul
loop
mov
aad
les
lret
lods
mov
in
fs
cmp
jecxz
add
pop
jb
xor
test
imul
in
je
xchg
sarl
test
mov
ror
test
aam
pop
cs
inc
sub
into
and
loop
push
cmp
sbb
jb
dec
ret
add
mov
loopw
add
imul
dec
fnstenv
arpl
je
push
lock
jmp
aad
enter
mov
mov
cld
loop
lds
mov
inc
aad
int
lahf
and
rclb
lahf
lret
mov
inc
ljmp
or
icebp
dec
pop
sub
cmp
mov
jecxz
lods
adc
leave
adc
add
push
call
and
add
mov
pusha
movzbw
pushf
bswap
mov
push
mov
movb
pushl
ret
hlt
xchg
inc
jo
cs
and
add
imul
jne
or
fucomi
mov
mov
fs
mov
outsl
mov
mov
inc
cmp
stos
out
cmpsl
or
lea
pushf
jae
test
addb
out
gs
sub
insl
movsb
fists
inc
int
mov
xchg
shl
fisubl
ret
inc
cmp
add
mov
jl
sbb
adc
fldt
cmpsl
cmp
jo
xor
mov
addr16
add
shr
push
lods
mov
inc
inc
test
mov
inc
mov
aad
mov
jno
xor
inc
adc
pop
push
sahf
imull
inc
dec
mov
sahf
loope
into
cltd
sub
xor
sbb
pushf
mov
adc
pop
push
rcll
or
scas
lds
icebp
outsb
insb
push
or
movl
cmp
xor
cmp
and
insl
mov
scas
call
dec
lret
orl
aaa
xchg
mov
not
pop
adc
jae
pop
out
xchg
cmc
testl
inc
mov
adc
jne
and
shr
pushf
fs
stos
push
or
std
push
add
xor
out
dec
adc
lock
dec
fldenv
push
adc
scas
mov
mov
pop
cmpsb
fildll
xchg
pop
shl
add
pop
test
dec
inc
out
sbb
and
inc
jb
adc
sar
jle
push
fstpl
jmp
or
adc
std
adcb
stc
adc
sbb
cs
enter
dec
aad
daa
mov
xchg
rcll
xchg
push
orl
outsl
pop
xchg
jnp
std
cs
push
mov
lret
jg
bnd
xor
xchg
sub
cmc
fldt
scas
or
add
pop
xchg
push
push
jecxz
aaa
cmp
jne
in
shll
jno
inc
jne
clc
and
popa
test
divb
cmp
icebp
cmp
pop
mov
cmp
xor
int3
fidivl
dec
into
lret
ret
test
notb
mov
call
jl
cmp
push
out
cld
xor
aas
mov
scas
shll
iret
push
xor
xchg
mov
mov
adc
jp
push
call
or
test
in
test
add
sub
pusha
or
and
rorl
fadd
test
mov
xchg
inc
jmp
sub
jo
test
lods
xor
or
loop
mov
jp
sub
es
push
cmpsl
lods
lcall
mov
push
outsb
mov
pop
dec
jecxz
mov
sub
mov
divb
neg
xchg
inc
popf
stos
cltd
sub
imul
outsb
in
lahf
mov
cmp
adc
fcompl
mov
mov
mov
sub
fldt
push
jbe
test
movsl
lahf
add
jl
mov
shlb
inc
call
sub
dec
jecxz
sbb
push
stc
add
nop
mov
jae
cmp
cld
or
mov
aaa
out
jb
push
push
sbb
jae
test
cmpsl
cmpsb
fucom
adc
enter
scas
inc
xchg
jo
xor
iret
xchg
mov
sbb
jbe
cmpl
lcall
cmovge
inc
ret
ss
aam
popa
or
into
lods
pushf
add
adc
push
or
fsubr
and
and
in
fldt
in
imul
icebp
es
jl
pop
iret
and
mov
push
pop
dec
ds
divb
movsb
mov
test
sub
xlat
aaa
mov
sbbl
sbb
and
xchg
jmp
push
scas
fs
pop
fidivs
cmp
bswap
pusha
xchg
cmp
enter
mov
into
pop
xor
push
or
mov
ds
scas
dec
push
jmp
test
rorb
jbe
mov
inc
arpl
call
sbb
push
decb
pop
pop
and
mov
loope
into
shll
ds
cld
imul
leave
and
mov
lods
scas
lea
mov
je
sub
xor
popf
test
push
hlt
insb
push
loopne
push
jo
shll
into
cmp
xchg
outsl
sbb
mov
pop
jbe
das
adc
ljmp
divb
and
outsb
jle
inc
sbb
add
xor
ljmp
sbb
test
mov
aam
inc
add
push
popa
bound
rclb
adc
mov
sbb
ret
out
mov
stos
sarl
mov
in
sub
mov
mov
enter
mov
mov
test
fneni(8087
sub
rclb
js
mov
jecxz
pop
rcll
loop
shlb
bound
mov
xlat
sar
add
addr16
fdivs
imul
shlb
lods
pop
mov
add
test
iret
mov
rclb
and
cmp
push
xchg
jp
add
orl
or
cmpsb
jae
push
or
cmp
fnsave
aad
sbb
enter
xor
xchg
test
rclb
stc
add
mov
in
add
cmp
mov
aam
repz
daa
icebp
jae
xchg
xchg
daa
test
add
jp
push
test
xchg
or
popa
aaa
dec
push
out
cli
fimull
xchg
mov
enter
icebp
loope
mov
stc
mov
pop
pop
aas
sbbl
orl
pop
and
inc
ficompl
std
xchg
and
sbb
dec
movsb
mov
cmp
pop
repz
xchg
popa
mov
mov
or
scas
xor
lock
lea
or
loop
xor
jmp
stos
jae
iret
ss
mov
xchg
and
test
cmp
pop
mov
xor
mov
push
sub
pushf
pushf
call
jae
push
mov
pushl
pushf
lea
jmp
clc
push
xor
jmp
in
add
stc
mov
mov
xor
jnp
mov
in
sbb
jne
pop
mov
in
das
aam
sub
mov
mov
aad
jbe
and
cwtl
xor
stos
shrb
push
insb
test
shl
shlb
mov
mov
xor
mov
mov
mov
xchg
mov
push
xchg
jp
push
mov
aam
mov
jl
lods
sbb
lods
adc
test
jmp
pushf
adc
mov
pusha
lea
jmp
jae
cmp
loopne
pusha
aas
mov
jl
ljmp
es
inc
mov
xor
cmp
xchg
pop
push
fstpl
mov
lock
imul
dec
add
or
shrl
lret
xchg
jbe
and
in
scas
pop
js
xor
shlb
cld
pop
inc
push
mov
sbb
ret
xchg
lret
fistpl
movsb
out
pusha
cmpsl
jecxz
call
fdivrs
add
in
fwait
inc
mov
lods
sbb
in
xor
adc
repnz
adc
movsb
int3
rorb
hlt
adc
hlt
call
hlt
push
ret
push
in
outsl
mov
or
repnz
in
xlat
in
xchg
mov
mov
les
xor
xor
je
pop
xchg
xor
xor
rcll
inc
xor
fdivr
or
add
icebp
cmp
sbb
pop
xchg
or
dec
into
push
in
icebp
or
or
sbb
clc
jno
xchg
popf
repnz
adc
jmp
or
loop
mov
jecxz
fwait
int3
adc
mov
cli
int
sbb
addb
movsb
or
movsb
or
movsb
movsb
xor
movsb
adc
iret
fs
jo
mov
int3
fcompl
les
or
pop
dec
insl
inc
and
or
hlt
stos
jae
xor
jle
dec
aaa
dec
push
push
inc
das
adc
dec
push
fs
jbe
rcrl
dec
push
lods
or
in
js
xchg
pop
dec
ss
hlt
inc
sub
dec
xor
lods
call
cmp
ds
aaa
jbe
pop
push
je
testb
bound
pop
cmp
push
and
hlt
out
lahf
or
adc
push
in
dec
aas
cld
dec
add
jge
in
push
sub
insb
push
fsts
xor
iret
mov
stos
sbb
adc
sbb
lahf
movsb
mov
mov
pusha
clc
in
into
add
inc
dec
inc
add
fisttpll
sub
sub
cmpsb
xor
inc
xchg
dec
xor
inc
inc
push
js
ss
ljmp
cmp
push
cwtl
insb
add
mov
or
or
insb
pop
and
inc
bound
cs
pop
fsubl
or
daa
or
or
hlt
sub
cwtl
add
push
sub
orl
adc
lods
xor
sub
xchg
add
aad
daa
js
cmp
mov
mov
cmpsl
es
push
add
ds
fstpt
lret
pop
cmp
adc
jmp
mov
fstl
ljmp
cmp
pusha
push
stos
dec
mov
add
in
cmpb
pop
adc
int3
mov
addb
adc
sbb
add
push
xorb
push
pop
in
sub
mov
dec
ljmp
addr16
push
outsl
xchg
or
and
push
jbe
pusha
pop
add
dec
jno
and
mov
mov
jo
mov
insb
sub
mov
cmp
or
jnp
mov
cmp
or
in
lds
aad
daa
mov
test
loop
int
cs
add
pop
pop
test
mov
jg
sub
and
mov
stos
or
mov
test
dec
push
xor
fdivs
lret
shlb
in
xchg
add
stos
mov
mov
fldcw
aam
sub
test
test
push
xchg
mov
cmp
lods
in
mov
mov
and
pop
mov
jg
adc
lods
aam
imul
in
sahf
mov
add
dec
cwtl
xor
add
xchg
and
ret
sub
pop
popf
andb
loopne
rolb
jnp
stc
inc
dec
pop
daa
sbb
inc
pop
xor
sub
pop
add
and
sbb
pop
inc
js
adc
xlat
add
add
sbb
adc
jo
les
pop
mov
popf
xchg
pop
cmp
jns
adc
push
inc
jge
mov
daa
jmp
iret
mov
or
inc
sub
jg
mov
mov
gs
popf
mov
jle
lret
aam
jg
mov
cmc
js
jne
inc
outsb
adc
adc
push
or
cld
ss
cmpl
daa
or
sarb
mov
psrlw
dec
rolb
adc
int
or
out
push
lock
or
mov
aaa
add
xchg
loope
scas
pop
cmp
dec
fstpt
jae
jae
jae
jae
jae
ja
scas
sbb
out
mov
adc
int3
or
xchg
jecxz
das
fwait
cmpsl
adc
mov
or
cmp
push
mov
and
add
dec
or
adc
cmp
xorb
pop
in
or
xchg
inc
pop
enter
mov
or
add
stos
dec
idivl
push
xchg
les
mov
aas
mov
add
mov
push
adc
and
pop
xchg
adc
mov
and
cld
daa
ljmp
jl
int3
add
or
sbb
adc
add
jns
adc
or
fwait
or
adc
or
mov
or
inc
scas
add
xor
movsl
xor
push
aad
clc
cwtl
add
and
adc
xor
aas
andb
out
movb
inc
fsubl
sub
push
mov
imul
mov
dec
add
cmp
mov
or
repnz
lahf
fistpll
inc
xlat
add
and
cmp
jg
mov
enter
lahf
inc
cmp
add
daa
xchg
pop
mov
aad
in
addl
in
cmp
in
icebp
ss
les
adc
or
scas
movsb
adc
or
in
rclb
add
jmp
sub
ret
shll
mov
cld
or
lock
clc
and
shrl
mov
or
movsb
mov
mov
add
or
dec
int
sbb
leave
lcall
dec
cmp
jnp
aaa
bnd
push
aaa
jmp
xor
jge
jp
inc
push
dec
and
xchg
fs
push
pop
jle
add
xor
cmp
into
in
sbb
ja
pop
xor
pop
inc
sub
inc
pop
push
jae
jns
push
arpl
sub
sbb
sbb
inc
dec
inc
and
jae
cmp
jmp
xchg
cld
pop
popa
push
xchg
jge
mov
ja
int3
lcall
jnp
push
fsubrl
or
and
dec
pusha
jge
pop
jns
loop
enter
or
inc
and
mov
jbe
lcall
or
push
jp
jge
inc
xor
jle
aas
jns
daa
inc
imul
outsl
dec
xor
sbb
inc
arpl
inc
push
jp
iret
adc
sbb
repz
jo
jbe
mov
inc
fdivrl
insb
sbb
in
dec
and
push
inc
inc
or
pop
jbe
xor
shlb
mov
jo
push
ror
rclb
mov
or
or
add
lcall
sbb
repnz
in
mov
movsb
popa
cmpsb
pop
mov
cmpsl
mov
jbe
pop
out
mov
or
mov
cld
movsb
aam
rol
repz
jae
push
inc
shl
vaddsubps
mov
mov
movsl
inc
add
int
arpl
movsl
cmpsb
dec
pop
mov
rorl
das
lods
push
addl
xchg
hlt
enter
in
inc
and
push
inc
pop
pop
insl
popa
loope
xor
sub
mov
jle
inc
push
clc
jge
mov
or
mov
shlb
jne
or
or
js
cmp
test
dec
ret
inc
test
dec
mov
dec
and
jle
repnz
dec
insl
insb
pop
lods
mov
aas
inc
test
xchg
hlt
addr16
mov
jle
jg
mov
mov
cmp
add
in
ljmp
adc
sbb
push
insb
mov
stc
mov
rorb
or
push
cltd
add
inc
dec
inc
scas
add
add
lock
scas
lods
out
or
jns
adc
ret
aam
ror
into
repz
enter
rol
push
icebp
add
nop
or
inc
cmp
or
out
ret
or
lea
das
or
xchg
hlt
sub
pop
cld
in
out
xor
cmp
pop
outsb
jl
sbb
sbb
jns
mov
out
jl
mov
cmpsl
movsl
xchg
jp
test
sarl
xor
lock
cmp
fs
cwtl
lods
aad
and
cmp
jb
xor
addr16
es
sub
loope
cmc
or
iret
adc
and
pusha
sbb
add
rcll
push
push
int3
ljmp
in
push
ljmp
jmp
aam
js
or
loopne
fcmovbe
mov
push
cld
jmp
sub
adc
addr16
fld
fwait
les
scas
add
or
in
or
inc
adc
mov
dec
enter
xchg
add
lret
push
xor
mov
pop
cli
ror
mov
mov
add
lret
lock
std
ljmp
adc
push
pop
dec
ret
call
aam
add
cmp
adc
sbb
add
popa
fmuls
outsl
mov
notb
jge
cld
out
mov
movsb
lock
lods
movsb
mull
adc
push
sbb
lcall
imul
pop
dec
pop
mov
dec
nop
sti
out
add
or
les
pop
mov
clc
cwtl
xor
push
fisubl
clc
stos
jle
test
add
cli
movlps
add
pushf
fisttpl
mov
rcrl
rorb
push
fdivs
cmpsl
adc
cmp
xchg
lock
jecxz
pop
out
cmpsb
cmpsl
adc
add
xchg
xorb
inc
aam
jl
cmpl
adc
adc
xor
aad
xor
rcl
loop
pop
mov
pop
nop
testb
cmc
mov
mov
xchg
fwait
loop
out
or
ret
notb
adc
prefetch
rclb
out
adc
adc
xchg
cmpnltps
xrelease
pusha
or
repnz
out
nop
testb
adc
sbb
pop
repz
xor
nop
jle
adc
cltd
in
cmpsl
add
cs
adc
lods
dec
imul
dec
adcb
mov
mov
icebp
mov
les
sbb
mov
push
mov
mov
hlt
add
pop
adc
push
sbb
or
add
adc
add
lock
mov
xchg
mov
int3
mov
lods
rorb
and
push
or
or
aas
cs
mov
adc
xlat
bound
lock
mov
adc
aam
adc
mov
add
lock
int3
rolb
enter
int3
lock
rolb
or
mov
add
lock
int3
loopne
add
call
lock
lock
adc
incl
sbb
jbe
add
lock
or
iret
sbb
sbb
cmp
or
push
shlb
adc
lock
repnz
shlb
lock
out
lock
int3
out
orl
rorb
push
add
lock
ljmp
call
lock
out
push
in
jo
jecxz
xchg
int3
loop
cwtl
repnz
pushf
loopne
addb
lock
incb
mov
nop
xor
mov
scas
lods
lods
stos
stos
xor
test
cmpsb
movsb
mov
lahf
mov
adc
push
or
adc
or
xor
or
add
or
push
add
shll
mov
or
movsb
popa
mov
adc
jmp
xor
sbb
call
loop
ljmp
out
loope
in
jp
int3
adc
mov
scas
mov
sbb
sbb
pop
push
adc
popf
ret
mov
sbb
sbb
adc
stc
ret
adc
sbb
pop
dec
sbb
adc
add
push
mov
dec
lea
or
adcl
sbb
decb
jno
mov
mov
int3
adc
cmp
push
adc
mov
adc
fcomi
pop
popl
mov
or
or
adc
adc
sbb
jno
adc
sbb
dec
sbb
adc
mov
or
add
sbb
sbb
in
fistl
outsl
or
in
add
jno
imul
pop
add
jnp
push
or
cmp
outsl
repnz
add
repnz
mov
in
adc
int3
or
adc
dec
ljmp
lock
adc
sbb
in
clc
add
adc
in
lea
ljmp
fucomip
mov
xchg
pop
xchg
adc
mov
jne
sbb
or
out
sbb
in
sbb
and
pmulhuw
rcrl
and
mov
psrad
xor
loopne
clc
add
in
adc
adc
out
in
xchg
std
mov
jg
or
adc
adc
jmp
pop
add
adc
ljmp
cmp
cmp
sub
push
lock
pop
psrld
add
xor
sahf
add
adc
adc
sbb
iret
jno
adc
sbb
push
pop
dec
sbb
jmp
std
int
ficoms
loopne
sbb
adc
xchg
or
sbb
lret
or
adc
rcrb
leave
mov
fdivp
adc
enter
movl
sbb
in
pop
dec
sbb
sar
push
les
mov
loop
sbb
and
arpl
ret
rorl
fistps
sti
pop
adc
sbb
mov
sbb
mov
fiadds
fcmovnbe
adc
push
outsb
adc
sbb
in
and
or
adc
std
fisttps
fdivs
adcb
or
jmp
mov
or
xchg
adc
xchg
add
fcomi
sbb
jmp
mov
shlb
mov
fstp
adc
mov
scas
out
adc
jge
sbb
adc
or
adc
adc
jo
int
int
dec
out
sbb
movsl
push
mov
jmp
jo
mov
mov
aaa
in
push
mov
mov
jmp
sbb
lods
in
ficoml
addl
cmp
mov
iret
mov
adc
in
mov
repnz
adc
or
jbe
sbb
xchg
mov
outsl
adc
or
icebp
loopne
mov
imul
push
jecxz
sbb
and
adc
std
test
popl
lock
loopne
mov
adc
adc
adc
mov
mov
or
adc
sbb
sbb
xchg
test
adc
or
decb
js
cmp
xchg
out
stc
icebp
jmp
dec
jnp
in
adc
lea
mov
adc
sbb
sar
push
popf
mov
das
movb
adc
xor
int3
loop
lcall
cltd
mov
sets
adc
sbb
add
sbb
das
sbb
adc
xchg
push
adc
test
jo
xor
push
adc
shrb
mov
movsb
imul
in
jecxz
in
mov
push
mov
imul
in
cmp
adc
adc
mov
gs
or
jne
sbb
sbb
sbb
xchg
adc
loope
adc
and
push
sbb
clc
call
or
call
cmp
push
icebp
out
in
mov
std
test
or
ljmp
icebp
adc
xchg
sbb
adc
adc
sbb
jnp
mov
sbb
jp
lods
sbb
jns
js
mov
adc
sbb
decb
or
enter
shl
jecxz
test
std
jbe
stos
adc
sbb
je
jae
mov
sar
xchg
push
mov
jg
or
dec
and
add
adc
dec
jmp
dec
idiv
adc
dec
mov
pushl
loope
adc
icebp
inc
mov
inc
or
inc
roll
pusha
loop
adcb
inc
mov
jmp
mov
mov
inc
and
adc
aas
add
adc
xchg
std
pop
push
nop
jmp
mov
mov
adc
adc
sbb
sbb
lock
in
sbb
shr
and
sbb
or
out
loop
pop
mov
filds
adc
sbb
pop
ds
sbb
adc
sbbl
icebp
pop
cld
sub
push
cmp
push
and
scas
adc
push
or
mov
jns
rcll
sbb
push
fcompl
int3
adc
inc
add
dec
icebp
mov
push
xchg
xor
repz
adc
cs
stc
sub
sub
adc
add
in
inc
sub
and
jg
cmp
sub
mov
xchg
daa
mov
jle
ret
jecxz
adc
and
sbb
lock
mov
hlt
fists
add
push
clc
int
and
adc
sbb
or
pop
dec
loop
fcomip
ds
or
or
sbb
cmp
or
cmp
mov
adc
in
add
cmp
adc
cmp
pop
lret
call
in
in
js
xchg
sub
out
cmp
and
arpl
cmp
adc
adc
sbb
sbb
mov
scas
sbb
lds
adc
inc
jmp
adc
sbb
adc
repnz
adc
sbb
paddb
adc
or
push
mov
in
or
add
loope
inc
into
adc
or
sbb
adc
pop
popl
mov
or
xchg
adc
adc
in
into
add
cmp
inc
or
sub
xor
ljmp
xchg
adc
out
std
jp
scas
adc
or
xor
jg
test
jno
jmp
sbb
adc
call
sbb
mov
or
adc
fmulp
sbb
push
push
sbb
ljmp
fstpl
adc
jecxz
adc
lods
insl
adc
dec
in
fsubr
repnz
sbbb
jns
std
ret
icebp
jne
ret
lock
jg
cld
xor
jg
or
mov
ficoms
adc
or
adc
push
nop
add
sbb
sbb
mov
jne
sbb
sbb
adc
cmpsb
call
cmp
cmp
out
sbb
xor
into
in
mov
adc
loop
and
adc
rcrb
jno
sbb
int
and
test
xchg
push
sub
adc
sar
jb
adcb
cld
rolb
jg
jmp
adc
test
stc
mov
sbb
clc
sbb
adc
orb
or
lock
lock
adc
loop
filds
hlt
mov
mov
mov
xchg
inc
cwtl
adc
roll
shlb
adc
bswap
lock
fcoms
ljmp
or
adc
fnsave
adc
std
push
push
xchg
or
or
call
in
and
mov
sbb
adc
adc
or
mov
mov
mov
or
pushf
pushf
movsb
int3
enter
cmpb
out
icebp
leave
pushf
xchg
adc
in
decb
repnz
loopne
loopne
insb
jp
aam
push
push
in
or
std
out
or
mov
jmp
jmp
pop
mov
sbb
test
or
xchg
mov
std
add
fimuls
aad
push
xor
dec
mov
ds
push
cmp
outsb
mov
jl
stc
or
jmp
or
aad
nop
mov
mov
jb
out
faddl
mov
sbb
call
or
push
or
ljmp
inc
sbb
add
xor
sbb
adc
call
jbe
or
or
jecxz,pn
add
jge
repz
inc
rorb
test
pusha
mov
dec
dec
xchg
adc
xor
nopl
sbb
pop
and
and
in
add
loopne
add
or
fs
sbb
inc
add
nop
stos
push
dec
or
fcoms
out
push
sub
add
loop
std
shr
xchg
push
or
cmp
add
mov
mov
mov
mov
xor
pslld
sbb
jb
sahf
hlt
push
loop
mov
fdiv
daa
jecxz
pusha
cwtl
xor
adc
ret
rcrl
jecxz
in
adc
adc
mov
shr
pop
sbb
sbb
sbb
in
sub
jb
adc
int3
std
jbe
add
loop
mov
xchg
sub
lret
data16
sub
push
ljmp
adc
xchg
or
adc
adc
bndldx
sbb
sti
or
in
sbb
or
insb
jno
and
jle
loopne
or
adc
fisubs
nop
incb
nop
fmuls
shll
mov
or
icebp
fdivl
loop
int3
in
int3
or
push
or
ret
mov
rcrb
lcall
clc
sbbl
pusha
call
xchg
add
or
lock
or
sbb
js
hlt
pcmpgtd
jecxz
scas
imul
hlt
sbb
repz
out
xor
in
pop
rcr
fcomps
xchg
xlat
dec
inc
lods
add
adc
xor
add
add
enter
out
xchg
out
cwtl
sarb
outsb
add
adc
les
shlb
or
add
leave
fisubl
adc
nop
mov
push
test
or
jmp
add
ljmp
mov
nop
inc
xchg
xchg
out
sar
mov
enter
push
mov
add
mov
pop
xor
sbb
adc
adc
loope
sbb
scas
subb
outsl
fnsave
mov
adc
xchg
pusha
ret
or
ret
test
pop
add
mov
addl
fs
bound
les
pop
cmpsl
rcll
repz
adc
jb
pop
push
hlt
nop
mov
xor
add
add
sub
xchg
int3
sbb
sbb
orl
cld
sbb
sbb
add
add
lock
sbb
sbb
pop
shlb
add
pushf
scas
aam
push
inc
test
jo
xchg
dec
enter
inc
jo
fs
ret
sbb
repz
mov
or
adc
inc
test
sbb
sbb
xor
test
push
out
or
pop
adc
movsl
addr16
add
add
sbb
neg
or
or
lea
or
xchg
or
inc
stos
mov
sbb
xor
insb
mov
out
inc
add
jmp
xchg
push
inc
add
bound
fldenv
loop
and
inc
adc
call
in
or
mov
or
xchg
push
xor
mov
lods
insb
ret
sbb
mov
mov
pop
pop
sahf
add
in
lahf
call
or
sbb
addr16
mov
pop
lret
push
adc
ljmp
mov
push
xor
pusha
nop
pop
nop
adc
mov
xor
mov
fistpll
icebp
repz
jmp
ljmp
or
call
out
push
loopne
dec
loopne
mov
out
mov
or
pop
in
dec
or
or
jb
mov
lret
mov
sarb
ss
cwtl
rcrb
repnz
and
loope
lret
push
adc
mov
jl
out
add
or
add
jp
sub
stc
add
mov
jle
sbb
rcrb
and
adc
xchg
dec
adc
inc
xchg
jo
mov
push
xchg
add
mov
arpl
sbb
inc
push
xchg
push
bsf
stos
enter
test
rorb
or
pop
jg
outsb
ret
lret
iret
ljmp
in
dec
mov
xor
pop
pushf
ljmp
ret
xor
mov
insb
add
cmp
shrl
sub
popf
sbb
insb
adc
mov
sbb
cmc
loope
add
inc
test
lock
xchg
xchg
nop
or
adc
fisttps
adc
push
dec
inc
jl
cmp
test
xchg
ret
jge
sub
imul
into
nop
or
mov
dec
sub
and
shlb
mov
fidivl
adc
outsb
insb
loop
jb
mov
wrmsr
push
push
adc
out
lock
rorb
pop
pop
daa
and
xor
cmp
push
mov
orb
repnz
movsb
sbb
inc
add
lock
mov
or
sbb
sbb
xor
sub
add
les
cmp
pop
adc
iret
sbb
inc
pop
filds
in
jno
loop
push
mov
mov
inc
rolb
clc
adc
sbb
mov
lret
in
mov
push
pop
out
mov
pinsrw
in
sahf
out
mov
pushf
cmp
out
loopne
cmp
out
in
fmull
in
xchg
adc
cwtl
mov
sahf
in
cld
sbb
test
jle
shl
outsb
out
xchg
out
outsb
or
out
sbb
int3
andl
ljmp
pop
cs
fsub
xchg
add
ret
aam
andb
mov
subl
add
in
fs
mov
movsb
pop
fsub
in
mov
in
mov
mov
inc
and
add
or
or
jg
or
sahf
mov
ss
jo
sti
movsb
scas
inc
repnz
mov
popf
adc
cld
cmp
push
pop
rorb
fcomp
fidivl
testb
shlb
call
pop
inc
add
insb
inc
mov
mov
mov
bound
dec
les
inc
out
mov
mov
call
or
flds
test
push
push
inc
sbb
and
cwtl
fsubr
stos
insb
lcallw
lcall
dec
jmp
test
xchg
in
imul
out
clc
loope
pop
lea
call
xchg
inc
lldt
add
enter
loope
sbb
sahf
cwtl
add
call
orb
clc
or
decb
lods
cmp
push
push
sbbl
dec
jg
cwtl
call
ffreep
fidivl
shlb
cwtl
stos
add
inc
adc
xor
mov
loop
or
sbb
lods
or
dec
in
in
fistpl
js
hlt
in
or
pushf
adc
or
push
xchg
or
xor
repnz
shrl
out
jl
pop
int3
pop
stos
xor
or
lea
mov
lret
sbb
flds
adc
in
cltd
and
pop
add
adc
and
je
pushf
xchg
faddl
loopne
in
je
loop
cwtl
push
pop
imul
adc
xchg
xchg
loopne
xor
or
stos
push
jmp
add
movsb
int3
loop
fidivs
xchg
subb
adc
sub
test
loope
add
jnp
int3
cli
scas
pop
out
enter
sbb
mov
mov
in
test
js
je
js
dec
outsl
add
jo
out
xchg
adc
sbb
or
adc
or
jb
mov
in
dec
pop
sbb
adc
sbb
adc
adc
adc
mov
fmul
lds
mov
or
adc
inc
dec
jb
mov
shrb
fidivl
shlb
mov
int3
clc
mov
add
or
jb
xchg
push
push
sub
loop
or
and
insb
mov
push
mov
add
nop
adc
push
in
or
xchg
bound
push
mov
or
pop
push
outsb
xchg
aam
adc
enter
lock
rsqrtps
jg
xchg
sbb
pop
add
mov
jbe
or
loopne
sahf
bound
xchg
fadds
ret
inc
int
cmpsl
cmp
xchg
dec
add
sbb
add
call
lcall
rolb
xor
data16
cwtl
sahf
cmpsb
in
inc
rorb
adc
shrb
nop
addr16
add
xor
jp
int3
call
sbbb
roll
sub
ret
mov
loop
push
ret
out
sub
repnz
jo
int3
add
test
add
sbb
sub
inc
and
xchg
bound
test
aas
pop
stos
cwtl
inc
jle
add
jmp
or
les
filds
jg
ret
rorb
and
sbb
adc
movsb
add
pop
mov
inc
push
outsb
push
pop
inc
inc
jl
aad
lret
dec
jne
adc
inc
push
push
and
in
mov
jns
ret
es
rolb
fiaddl
sbb
xchg
out
push
sbb
repnz
adc
icebp
inc
stos
add
or
adc
cmc
xlat
sub
mov
add
cmp
out
bound
icebp
sbb
adcb
stos
add
test
in
inc
repz
or
jecxz
xadd
inc
call
rclb
cmpsb
or
xchg
or
sbb
shrb
jle
or
xor
or
fisttps
loopne
fists
aad
or
add
call
cmp
das
and
mov
popa
mov
rclb
nop
les
adc
mov
lcall
test
mov
mov
into
out
push
lock
insl
mov
add
pop
pop
enter
shl
pusha
call
cld
test
call
xchg
lods
mov
sbb
mov
pusha
stos
sbb
lret
hlt
or
adc
jo
jb
jno
shr
lsl
jl
fidivrs
mov
or
popf
lods
rsqrtps
jnp
sbb
xchg
sub
shlb
movsb
lds
cmpsb
sahf
cwtl
aam
push
out
test
lock
lret
mov
push
sbb
loopne
or
sbb
js
movl
push
dec
adc
shlb
sbb
and
jo
lcall
mov
rolb
scas
jbe
in
adcb
adc
icebp
add
lods
nop
test
fmul
and
add
push
or
out
add
add
nopl
sbb
arpl
adc
outsb
xchg
loopne
lock
bound
or
dec
sub
mov
fsubp
add
pusha
data16
scas
idiv
sbb
sub
adc
cmp
and
loop
enter
or
jae
lods
xchg
or
or
sbb
pushf
out
sbb
mov
nop
rcrl
lock
pop
idivl
arpl
div
adc
cmovg
addb
je
js
add
jmp
out
mov
adc
cmp
mov
pop
fists
mov
xor
mov
jno
ret
int3
add
dec
popf
sub
lds
pop
lock
addr16
xchg
xorb
js
or
jbe
dec
dec
outsb
jg
and
mov
pushf
add
adc
and
dec
cwtl
adc
or
in
es
es
call
out
add
jmp
out
loop
jo
lock
jl
pushf
hlt
dec
enter
mov
test
rorb
shrl
or
lods
repz
push
enter
sarb
xchg
cli
in
add
mov
clc
movsb
pop
push
xchg
test
mov
mov
nop
aaa
and
jo
jbe
mov
push
addr16
sbb
loop
add
mov
dec
mov
pop
or
test
fbld
shlb
ss
add
cmp
test
loopne
repnz
dec
fnstenv
xor
push
cmp
sbb
fldenv
pop
lock
mov
leave
jmp
pop
pop
outsb
out
sub
push
mov
aam
icebp
dec
xchg
mov
mov
push
pop
ljmp
xchg
or
shl
bound
add
ret
fs
pop
sbb
enter
and
js
lcall
sbb
sbb
push
gs
stos
adc
test
out
mov
or
or
inc
shl
fldt
int3
mov
ds
jp
fmuls
cmp
jo
sbb
fs
sbb
inc
lcall
add
mov
and
pop
mov
repz
push
cmc
push
dec
inc
nop
adcb
add
jmp
mov
xor
or
cmp
in
jl
cmp
lock
sbb
adc
or
mov
and
mov
add
mov
shrb
mov
fmuls
push
in
fmuls
xbegin
lcall
ret
add
sbb
and
fwait
jo
xor
outsb
loope,pt
jl
ret
inc
mov
movsb
loopne
leave
aas
dec
sub
sahf
sbb
sbb
int3
fiaddl
cli
add
mov
push
incl
push
sub
sahf
or
pop
ss
pop
test
clc
mov
adc
pop
fists
mov
adc
mov
cmpsl
sbb
sbb
inc
adc
pop
fdivs
outsl
fs
mov
xor
ret
jo
mov
pushw
add
es
mov
pop
push
sub
insb
push
xor
gs
out
sub
stc
shlb
mov
sbb
in
add
outsb
fs
or
pushf
in
jmp
cmpb
jno
ljmp
in
leave
pop
ljmp
lock
push
out
pop
adc
leave
xchg
jo
call
mov
sbb
inc
and
sbb
sbb
stos
rolb
movsb
adc
jnp
mov
out
js
orb
rdmsr
mov
inc
sbb
mov
add
loopne
add
lock
out
fisttpl
stos
stos
push
push
rorb
repz
icebp
adcl
sbb
es
pop
mov
cli
add
push
hlt
or
or
add
pop
fistpll
popf
or
pop
in
or
mov
pop
stos
in
fdivr
xchg
repz
adcl
daa
adc
sub
mov
adc
pop
mov
adc
sub
jmp
enter
insl
mov
mov
or
mov
pop
dec
push
ror
out
loopne
fucomip
pop
jmp
jne
pop
mov
stos
or
dec
in
add
inc
add
push
add
inc
repnz
xchg
and
or
add
or
lods
filds
iret
xchg
pop
test
int3
jp
add
rcr
out
loopne
cmp
push
or
pushf
adc
or
or
leave
test
out
enter
xchg
mov
fsubl
jae
push
xor
push
sub
xor
push
int3
jo
mov
in
push
shll
rcl
jecxz
stc
sbb
or
in
or
movsb
mov
jp
push
addb
or
or
outsb
inc
adcb
jo
test
mov
shr
adc
or
mov
jp
jo
adc
in
fmuls
xor
or
cwtl
in
adc
inc
push
push
mov
or
js
jmp
or
outsl
push
es
insb
lock
cmp
mov
jecxz
fsubrl
hlt
sub
cs
loopne
sbb
xchg
pusha
xchg
mov
cli
add
mov
jbe
sbb
out
decb
stos
xor
adc
xchg
orb
sahf
push
mov
sbb
push
out
fstps
fsubl
insb
cmpsb
mov
mov
add
sbb
stos
js
pabsb
lret
inc
or
out
adc
cvttps2pi
ja
imul
rorb
sbb
add
pop
mov
decb
and
lea
and
mov
sbb
lock
movsl
add
or
sbb
push
addr16
or
imul
psrld
dec
add
sarl
imul
popl
lods
add
and
and
scas
or
or
inc
out
icebp
pop
imul
xchg
jg
cs
and
out
loop
pop
jmp
sbb
std
out
add
push
mov
shrd
popa
lret
or
or
jmp
ficomps
jp
outsb
jecxz
sbb
push
shl
sbb
in
mov
and
add
adc
pop
fmulp
pop
push
cmpsb
out
pop
jl
movsl
or
test
push
testl
mov
add
lock
cltd
or
mov
out
dec
out
adc
or
adc
and
xchg
or
jo
add
test
fucomip
and
icebp
lock
or
cmp
or
sahf
jne
jecxz
or
or
jmp
and
xchg
insb
decb
ret
or
adc
adc
adc
or
std
mov
out
sbb
add
cvtpi2ps
jge
loopne
out
fcoms
int3
psrld
filds
ffree
iret
add
dec
sbb
outsl
xor
setl
or
or
int3
iretw
or
mov
shl
mov
add
adc
sbb
or
sbb
mov
pop
lret
nop
or
stos
or
or
or
cmp
or
repnz
xchg
shll
out
std
mov
sbb
push
mov
in
paddusb
sub
repz
sbb
sbb
pusha
std
aaa
dec
adc
in
insl
mov
inc
call
lock
shl
insl
aaa
mov
adc
jae
or
mov
or
orl
std
sub
sbb
mov
enter
and
add
xor
adc
mov
sbb
mov
and
bnd
jbe
adc
lret
inc
scas
bound
bound
loopne
repnz
sub
pop
push
or
jae
iret
jmp
jmp
xchg
in
std
jecxz
cld
sbb
jmp
in
out
cmp
add
lock
add
movntss
xor
sahf
arpl
movlps
sbb
cli
insl
or
js
movups
mov
mov
sbb
add
idivb
push
fs
adc
test
inc
add
or
dec
sbb
ljmp
add
in
jns
shlb
or
mov
adc
push
sahf
out
or
scas
rorl
sbb
or
sahf
in
dec
sahf
and
mov
jp
adc
out
push
xchg
roll
sbb
add
add
or
lret
in
in
dec
cmpps
cld
fs
pop
dec
mov
add
out
xor
nopl
xor
adc
push
out
in
int3
das
mov
mov
adc
sar
cwtl
jecxz
pop
dec
mov
adc
xor
jmp
jle
wbinvd
cmp
jecxz
sbb
jl
cmpsl
or
aaa
fnstsw
ljmp
stos
or
sub
ljmp
repnz
add
and
inc
inc
jg
adc
lret
lock
repz
out
sbb
lds
pop
and
mov
push
sti
lret
nop
and
fucomip
pusha
and
int3
lar
add
nop
cwtl
push
or
out
in
loopne
and
mov
lock
mov
sar
or
or
adc
out
xchg
shl
nop
xchg
stos
inc
stos
add
xchg
ud0
enter
mov
mov
or
aam
mov
test
popf
mov
scas
inc
lcall
leave
lret
mov
out
stos
or
jmp
jge
xchg
jbe
add
pop
fstps
lret
or
out
imul
pop
lock
clc
pop
fmuls
test
mov
sub
movsb
cwtl
pop
or
pop
adc
push
repnz
adcb
loop
bound
mov
nop
ja
xchg
std
fstpt
sbb
lret
in
push
mov
ljmp
or
mov
inc
mov
lcall
mov
sbb
or
nop
addb
and
adc
or
cmpsb
inc
jge
mov
push
leave
xchg
in
or
push
add
pop
mull
inc
sbbb
cli
push
test
ds
adc
pop
or
xor
int3
xor
call
incl
in
xor
ljmp
popl
or
repnz
xchg
imul
psubsw
mov
push
adc
out
ret
dec
xchg
adc
std
pusha
scas
out
mov
pop
sbb
nop
mov
mov
in
icebp
in
out
int3
sbb
movsl
jecxz
call
jnp
in
lcall
aam
add
icebp
pusha
cmp
imul
ffree
outsl
loop
or
rorb
paddd
notl
pusha
rol
iret
dec
mov
pop
loopne
or
rolb
mov
das
jo
sbb
test
dec
xor
mov
mov
or
sarl
dec
pop
xor
mov
rorb
out
mov
mov
ret
jecxz
mov
int3
fbld
dec
in
lcall
pop
mov
and
pop
testl
or
mov
rcrl
out
cmpsb
add
add
dec
popa
cld
cmpsb
std
or
ret
xchg
repnz
lods
daa
rclb
sbb
adc
jl
cmpsb
gs
sbb
mov
jmp
fabs
lods
lea
loope
ret
mov
mov
mov
mov
int3
test
or
int3
mov
shlb
mov
mov
and
jl
mov
aad
jb
pop
xor
jno
cs
cld
pop
inc
xchg
push
mov
out
xchg
cmc
test
xlat
fisttpll
arpl
jbe
mov
outsb
in
addr16
sub
les
push
les
pop
js
lret
pop
adc
jbe
mov
sub
loop
inc
js
push
outsl
mov
inc
pusha
xlat
xor
add
jg
jae
inc
adc
and
mov
repz
mov
lret
ror
add
ficompl
sbb
das
fistpl
or
jb
fmull
arpl
sbb
push
insl
lea
lret
aas
cld
cmp
repz
pop
les
sar
in
in
add
orl
and
sub
push
int3
pop
addl
je
mov
lock
int3
pushf
addl
mov
int3
movsb
subl
mov
add
lock
int3
int3
jne
cld
mov
add
lock
repnz
push
mov
dec
lock
xorl
rorb
lods
lock
enter
call
cmp
pop
fwait
or
add
js
push
iret
sbbb
or
adc
rcl
iret
into
mov
add
lock
int3
lret
repnz
mov
add
lock
int3
ret
repnz
fimuls
fcmovne
cmpsb
mov
xchg
lahf
pop
mov
mov
movsb
or
lock
repnz
sarb
mov
adc
int3
js
and
cmpl
push
dec
jbe
and
or
repnz
dec
jbe
and
cmpl
push
dec
popa
adc
lock
loopne
shrb
push
lods
shll
lods
clc
stos
scas
mov
jmp
in
movsb
sti
test
and
test
dec
fistpll
loopne
icebp
loope
loop
jecxz
pop
jns
lds
insl
popa
jl
gs
jmp
add
or
notl
lds
roll
or
xor
cld
sti
outsb
or
cmp
fbstp
loopne
loope
loop
xchg
lods
xchg
aad
fstl
pop
int3
inc
int3
dec
int3
jbe
jle
data16
outsb
lds
or
sbb
fidivs
mov
sbb
xchg
ret
icebp
les
mov
lret
lret
icebp
int3
or
into
xor
mov
sar
repz
insb
inc
mov
xlat
inc
cmpb
stos
lret
int
dec
rol
jbe
and
iret
into
stc
xchg
fidivrs
mov
push
loopne
sti
add
push
pusha
fldt
push
mov
push
iret
call
arpl
cltd
imul
push
pop
dec
and
pop
jl
sub
in
sbb
out
sti
mov
cmpsb
movsl
in
scas
or
stos
mov
push
mov
adc
shl
mov
inc
add
enter
nop
mov
in
lahf
int3
orl
mov
push
aaa
xchg
pop
adc
popa
dec
push
insl
fadd
pushf
xor
movsb
ss
hlt
enter
add
lock
int3
cmp
jl
mov
lock
cmp
shrb
and
clc
int3
and
sbb
mov
add
cmp
adc
repnz
shlb
aam
sub
enter
cld
subl
adc
lret
test
sub
adc
das
ror
xor
loopne
xor
and
rclb
push
add
push
int3
cwtl
adcl
rcrb
mov
loopne
pop
int3
sbb
pop
and
int3
pop
mov
pop
lock
aas
addl
mov
inc
add
inc
sar
inc
mov
add
or
inc
mov
rorb
mov
mov
dec
int3
mov
dec
repnz
dec
fmull
dec
int3
lock
rclb
enter
push
add
repnz
loop
into
add
jne
pop
bnd
push
ja
add
cwtl
int3
jns
mov
jp
mov
jl
clc
int3
jge
or
iret
rcrb
mov
je
popa
int3
mov
arpl
mov
jmp
xchg
push
push
push
pop
out
sub
ret
push
jl
imulb
push
add
arpl
inc
ja
jne
xor
mull
inc
pusha
ss
sbb
repz
cli
pop
mov
jge
dec
dec
inc
inc
fs
arpl
push
call
shrl
jne
cmp
or
jecxz
adc
pop
ficompl
add
xor
imulb
cli
jno
enter
xor
subl
in
push
jnp
inc
inc
int3
sbb
loopne
push
pop
xchg
fs
mov
pop
jnp
jae
mov
mov
aas
inc
test
mov
add
fs
loop
in
pop
pop
jle
adc
loopne
xor
cmp
xlat
pop
xchg
and
jno
icebp
push
adc
pop
push
popa
mov
test
lods
mov
lock
jp
in
add
in
adc
rorb
or
or
xchg
mov
test
hlt
xlat
and
jmp
jmp
hlt
jl
pop
cmp
mov
mov
inc
es
in
inc
call
inc
jns
jl
add
rol
enter
inc
inc
imul
call
xor
adc
lods
out
out
mov
out
mov
cmpsl
fdivl
push
lret
ret
xor
je
nop
add
inc
dec
add
mov
out
add
into
add
fdiv
add
and
jne
js
bound
and
cmp
or
test
adc
jmp
loop
cmp
adc
int3
mov
jp
add
clc
sar
imul
lret
or
arpl
scas
loop
or
cmp
xchg
nop
mov
les
mov
or
jl
fsub
ret
add
adcl
int3
pop
or
rorb
adc
adc
xchg
sbb
sbb
pop
je
fisubrs
negb
loope
test
jo
sahf
decb
cwtl
inc
ja
bound
mov
sbb
mov
push
cmp
xchg
cmpb
lret
pop
dec
imul
insb
cld
jp
add
jmp
cmp
or
sbb
call
jo
xchg
sub
mov
add
dec
aaa
js
stos
pop
cmp
imul
and
pop
in
mov
jbe
pop
jl
dec
hlt
js
ret
test
xor
or
imul
jo
ret
dec
call
sti
jecxz
inc
clc
pop
mov
dec
dec
cmp
clc
adc
outsb
sbb
out
fcomi
inc
mov
test
sti
jnp
sub
or
push
arpl
dec
jmp
mov
das
jmp
jns
push
inc
iret
or
sub
inc
push
push
mov
lret
ret
mov
mov
inc
sbbb
mov
pop
cmp
ret
jp
lds
mov
or
jbe
in
scas
cmp
pop
push
mov
in
movsl
test
lahf
mov
test
mov
inc
aas
dec
imul
or
cmpsl
add
leave
push
mov
lret
into
dec
add
lret
sub
push
jno
das
jb
mov
mov
ljmp
in
jo
outsb
mov
xchg
dec
out
ss
mov
add
or
xchg
mov
add
or
pop
and
xlat
repnz
cld
inc
inc
mov
push
add
inc
cmp
adc
dec
mov
xor
sbb
adc
lcall
or
and
js
popa
pop
into
sbb
xor
loop
adc
xlat
adc
aad
aam
mov
sbb
or
cmp
and
sub
push
lock
int3
inc
orl
ljmp
or
dec
pop
fs
add
sbb
test
rorb
and
dec
loop
mov
enter
aas
aaa
add
pop
xorl
or
shrb
aam
lock
or
sbb
inc
sbb
stos
in
dec
jo
and
insb
andl
stc
loop
insb
imul
lret
or
add
pusha
adc
je
xchg
movsb
push
hlt
mov
pop
or
or
push
cld
ljmp
loop
cld
push
hlt
repnz
movsl
ret
adc
jno
ss
or
cwtl
add
mov
add
add
inc
arpl
movq
xchg
movsb
pop
or
add
ret
test
add
inc
adc
es
hlt
pop
ja
sub
popa
dec
adc
dec
adc
je
add
enter
jmp
add
dec
rcrb
push
ret
clc
jge
hlt
movsl
sbb
pop
hlt
int3
cld
hlt
or
hlt
lods
or
aam
stc
imul
or
add
movsb
sbb
inc
sbb
lods
pop
aam
pushf
icebp
hlt
icebp
mov
push
nop
hlt
jmp
imul
out
lods
lahf
lods
pop
cmpsl
scas
xchg
sarl
mov
lcall
dec
mov
cmp
pop
push
xchg
sbb
in
sahf
por
mov
test
flds
int
and
popa
sub
test
mov
enter
add
pop
mov
jb
call
mov
or
ret
xor
bound
fiadds
jns
inc
pop
cmp
adc
sarb
je
or
scas
adc
inc
nop
into
add
dec
adc
adc
add
in
dec
daa
xor
xor
mov
pusha
mov
and
repz
fwait
sbb
or
add
out
sbb
lock
orl
push
add
repnz
ror
repnz
shr
adc
les
sbb
jg
insb
add
sbbl
outsb
in
rcr
enter
mov
enter
sbb
or
mov
in
movsb
pushf
sbb
or
test
sbb
sbb
orl
in
loope
sbb
ljmp
or
test
dec
sbb
or
mov
fcoms
fmull
sbb
or
or
cmp
les
push
push
lods
int3
fadds
rcrb
cld
inc
dec
sbb
or
mov
pusha
scas
nop
sbb
or
lock
add
and
add
mov
add
fwait
clc
sbb
call
jl
add
loope
imul
sub
push
pusha
or
insb
mov
repnz
clc
xor
sub
scas
mov
or
fdivrs
outsb
add
rorb
sbb
mov
lea
fs
int3
fdivrl
clc
fwait
sbb
mov
mov
sub
dec
pop
sbb
dec
or
add
dec
adc
int3
scas
xor
loopne
bnd
push
je
out
lahf
pop
or
push
nop
call
popf
cld
fcoms
or
mov
and
xchg
jg
mov
or
lods
jl
dec
or
xchg
sub
or
xchg
mov
mov
sub
add
jno
loop
test
shr
add
scas
cld
sbb
or
adc
push
cmp
mov
add
pusha
lock
movsb
mov
add
lock
push
test
mov
or
leave
add
sbb
mov
icebp
or
or
shrl
loope
or
cli
adc
mov
or
in
jl
inc
fistl
scas
or
dec
or
xor
test
pop
pusha
fwait
inc
or
fdivrl
sahf
sub
shlb
dec
sbb
or
mov
enter
adc
mov
aam
jecxz
fs
sbb
or
add
popa
clc
jecxz
loopne
pusha
mov
lahf
cmp
insb
sbb
orl
in
loope
sbb
pop
or
mov
xor
fldl
sbb
and
ds
fwait
in
sbb
mov
mov
sbb
or
adc
sbb
add
mov
sbb
or
sahf
add
add
add
loope
sbb
repnz
dec
sbb
sbb
orl
es
add
cmp
adc
and
xchg
enter
or
add
mov
bound
dec
or
andb
dec
enter
or
lahf
in
mov
cltd
mov
enter
add
mov
or
loopne
and
mov
jmp
js
subl
sbb
add
ret
jo
in
mov
mov
add
mov
lea
fsubr
insb
mov
sbb
xor
or
hlt
icebp
hlt
or
mov
movsb
xchg
adc
fsubrp
mov
add
cmp
clc
jno
jmp
pusha
int3
mov
adc
jo
mov
repnz
in
xchg
add
outsl
mov
call
mov
xchg
add
or
cmp
mov
inc
pusha
les
add
jmp
stos
pop
push
dec
enter
hlt
scas
adc
stos
movsl
hlt
add
adc
or
lret
mov
int3
jl
mov
add
rorb
sbb
add
and
push
or
dec
loopne
and
mov
movsl
movsb
jne
add
popa
lret
adc
arpl
jae
inc
inc
repz
data16
pop
xor
mov
pop
imul
adc
test
out
int3
mov
adc
and
dec
and
pop
jge
push
roll
add
or
mov
xchg
xchg
push
dec
sub
sub
insb
jae
arpl
jbe
sbb
jno
xor
out
inc
leave
add
xchg
inc
cli
jmp
xchg
leave
fcoml
dec
cmp
sbb
decl
push
gs
xchg
add
pop
push
fcompl
ret
sub
push
pop
xor
ds
ret
hlt
push
ja
jns
add
jmp
dec
into
sbb
push
or
dec
cmp
adc
pop
add
adc
lods
sbb
in
loopne
add
or
inc
std
or
adc
sar
mov
dec
pop
jle
ja
and
or
push
inc
sbb
and
xlat
sbb
notl
jbe
or
dec
aas
fiadds
pop
inc
sbb
pop
adc
icebp
into
inc
sub
out
ficomps
push
jae
pop
ja
js
pusha
and
cmp
bound
insb
je
sti
adc
pop
imul
xchg
jge
pop
cmp
and
pop
push
loope
jo
sub
sbb
jae
int
and
or
js
adc
das
sbb
cmp
iret
jae
xchg
sbb
dec
dec
in
push
insb
jae
inc
push
loopne
dec
pop
or
xor
jl
pop
sbb
pop
jg
xchg
pushf
push
cmp
jp
in
jb
fcmove
add
ficomps
jb
in
call
dec
enter
loop
in
inc
push
jge
pusha
out
cmovno
loop
push
sar
push
rolb
pusha
dec
cs
sarb
aas
sbb
bound
jae
pop
sub
adc
mov
jl
pop
dec
jb
add
lcall
cli
jmp
notb
and
add
ret
jge
lcall
inc
sub
shlb
sbb
ret
lock
jecxz
inc
test
std
jo
nop
mov
scas
or
sahf
into
cld
ror
lahf
ret
inc
hlt
pop
mov
add
shll
push
bound
cmp
cmpsb
arpl
popa
mov
mov
popf
jl
outsl
mov
int3
in
sub
aas
mov
rcl
aas
mov
test
add
sbbl
xor
or
pop
and
inc
lods
ljmp
rorl
call
jecxz
ljmp
sbb
daa
push
pusha
dec
xor
inc
push
jns
fs
js
mov
sub
jne
jns
dec
cmp
nop
pop
in
arpl
xchg
call
inc
insb
bound
loopne
xor
outsb
inc
lock
sbb
pop
test
out
xor
lock
repz
daa
pop
mov
dec
arpl
add
sarl
dec
jne
test
pop
imul
rcr
pop
sbb
popf
popa
dec
push
das
ljmp
push
hlt
xchg
cwtl
dec
jmp
mov
addb
ficompl
jno
mov
je
mov
cmp
int
pop
loopne
sti
add
inc
cmp
inc
out
insb
in
xor
bound
out
outsl
mov
addb
ljmp
push
inc
xchg
ljmp
in
adc
mov
pop
inc
dec
in
aaa
mov
mov
jnp
sbb
into
pop
repz
loopne
dec
fs
cmpsb
repz
or
into
je
add
data16
jno
sbb
xor
in
xor
pop
mov
push
nop
scas
push
fdivs
cmp
ret
ret
in
cmp
or
cmp
mov
adc
int3
dec
test
loop
pushf
push
adc
or
test
sub
ds
bound
nop
pop
adc
push
mov
cmp
jne
dec
orb
pop
nop
orb
or
pop
mov
inc
adc
or
sbb
loop
leave
sarl
xchg
out
repz
sub
scas
jmp
adc
xchg
cmp
test
test
mov
dec
jl
push
jge
in
bnd
pop
loopne
js
ljmp
mov
cs
movl
push
es
lcall
inc
dec
lds
pop
pushf
unpckhps
mov
clc
into
add
call
add
shl
test
sub
sar
mov
mov
jl
push
cmp
dec
fs
bound
or
xor
hlt
in
sub
lcall
jle
adc
cmp
inc
and
push
and
movsb
push
inc
pushf
jecxz
rorl
mov
jge
out
jae
cmp
xchg
adc
int
leave
xchg
movsb
dec
imul
lea
hlt
popa
nop
out
xchg
loopne
inc
inc
ljmp
insb
lock
xchg
das
scas
adc
xor
ja
fidivrs
and
push
push
pop
stos
push
insb
lcall
pop
mov
pop
outsl
jb
jmp
leave
mov
fsubrs
sub
nop
pop
and
inc
ret
push
push
mov
arpl
clc
jo
jl
cmp
sbb
and
xchg
lahf
adc
inc
inc
push
jb
popa
divb
sub
fwait
in
jp
inc
or
addr16
stos
scas
sarb
icebp
pop
add
repz
add
dec
inc
jle
jb
loop
mov
or
cli
ret
pop
pop
ljmp
mov
push
jge
sub
lods
adc
js
stc
xorb
jns
rclb
xchg
fdivl
cmpsl
cmp
mov
ja
arpl
jmp
jbe
pop
or
out
call
sub
lods
add
scas
lods
scas
subb
icebp
into
jecxz
out
dec
or
in
popa
les
adc
inc
jbe
test
pop
test
mov
cmp
into
or
outsl
ljmp
pop
mov
adc
jb
mov
lcall
mov
pusha
outsb
dec
and
cs
cld
inc
jp
std
in
sub
cld
out
fidivl
jecxz
mov
adc
xchg
inc
or
loopne
ficoms
pop
cld
mov
leave
lcall
jo
nop
int3
cld
js
dec
out
xchg
and
inc
and
push
or
insb
jnp
lret
mov
xor
ret
scas
pop
sbb
inc
imul
sub
and
in
jne
adc
and
clc
insl
sbb
idiv
leave
loop
sbb
movsb
xchg
insb
adc
nop
insb
stc
pusha
test
test
test
add
sub
rorl
push
imul
cmpsb
dec
mov
jle
js
adc
js
jb
xchg
adc
enter
and
adc
enter
mov
fwait
pop
leave
add
outsb
inc
enter
mov
test
arpl
jno
jo
adc
dec
or
in
fdivrs
fistps
lret
inc
pusha
mov
cld
ljmp
dec
adc
inc
dec
outsl
repz
add
and
in
xor
push
adc
subl
movsb
pop
inc
or
jbe
clc
jo
nop
xchg
or
inc
in
aas
cmpsl
cmp
in
adc
pop
stos
fadds
and
mov
pop
fcmovb
cld
cmp
push
js
mov
test
jg
addl
out
inc
and
shl
mov
mov
aad
outsl
mov
xor
rcrl
cmpsb
je,pn
sbb
adc
lret
and
lret
cmp
aad
xchg
outsl
ja
daa
outsl
push
repnz
and
daa
jns
mov
jb
push
and
pop
shl
leave
lock
loopne
bound
inc
and
jb
loope
clc
rolb
inc
rorb
gs
push
js
mov
pushf
xchg
inc
ss
push
int3
inc
push
mov
push
cmpsb
out
aas
xorb
insb
fcom
dec
lret
pop
pusha
shlb
jb
or
out
in
pop
mov
mov
sub
dec
movb
and
scas
adc
mov
jb
popf
push
mov
scas
sti
shll
or
repz
fcoms
incl
add
pusha
cs
lret
lods
movl
outsb
int3
push
out
and
push
add
je
jp
push
imulb
xchg
pop
call
adc
mov
shlb
cmc
mov
push
sub
inc
or
xor
mulb
push
add
add
xor
cmpsb
leave
cli
add
sub
outsb
or
out
and
mov
shll
fisubl
adc
mov
ljmp
in
add
movsl
mov
lock
add
cmp
or
sub
dec
popa
test
push
mov
mov
sti
dec
aam
out
in
push
or
push
xor
dec
int3
mov
dec
inc
cwtl
sbb
inc
ja
mov
test
repz
lret
lock
in
out
mov
outsb
fwait
repz
out
mov
cmp
dec
insl
je
arpl
dec
int3
mov
incb
inc
lock
loopne
or
pusha
jecxz
fs
or
cwtl
jmp
inc
push
fldenv
sti
fdivs
inc
lds
and
jns
jmp
add
lret
sbb
cmp
pop
aas
pop
loopne
dec
cld
mov
lods
xchg
in
out
add
xchg
loopne
movsb
lods
inc
in
xchg
dec
loopne
jecxz
jae
ret
fwait
or
xchg
or
scas
add
mov
pop
mov
pause
notl
stos
lods
lods
mov
repz
lret
mov
fistpll
pop
cmp
repnz
adc
punpckhwd
jmp
cltd
jecxz
daa
shlb
pop
dec
roll
jns
inc
rclb
movsb
mov
lods
jo
inc
dec
add
fistpll
inc
mov
enter
inc
in
xchg
jno
shl
cmp
inc
addl
pop
jp
mov
popa
adc
push
mov
mov
sbbb
dec
stos
mul
and
fsts
movsl
repz
mov
lcall
ja
loope
jne
rolb
int
jl
and
popa
pop
push
mov
aad
or
jo
jmp
pop
mov
hlt
mov
les
sub
dec
jmp
or
in
dec
xchg
xorb
inc
jmp
cwtl
pop
test
jb
adc
bound
sbb
adcb
cmp
push
inc
xor
xchg
mov
aam
enter
out
mov
mov
cwtl
int3
fadd
add
cs
rcr
mov
mov
pop
xor
enter
dec
pop
int
jg
into
stos
into
sub
add
mov
inc
stos
ja
or
or
pushf
push
xchg
pop
popf
fsubs
add
or
xchg
push
dec
inc
jbe
loop
xor
push
shrb
add
adcb
cmpsb
hlt
cmpsl
adc
ljmp
pushl
call
in
sbb
ret
into
cld
mov
jp
bound
pop
dec
lret
dec
xor
dec
test
lret
aad
pop
test
push
sbb
inc
adc
loopne
cld
mov
in
pop
sbb
movsl
mov
sbb
mov
popf
jns
or
jo
js
and
jo
jle
add
sahf
xor
jns
pop
push
hlt
arpl
cmp
fsubs
jnp
jo
push
data16
cld
ret
pop
bnd
shlb
jae
stos
scas
dec
scas
clc
mov
stos
sbb
aam
pop
ja
repnz
sbb
lret
jo
or
outsb
mov
adc
jbe
mov
mov
pop
jg
sbb
xchg
les
sub
dec
aaa
addl
xor
sub
jmp
fldenv
mov
mov
fs
lret
test
xchg
fistpll
adc
in
adc
sub
enter
mov
dec
scas
orl
xlat
and
out
inc
ret
sub
jg
addl
push
xchg
or
loope
mov
es
and
pop
dec
shlb
stc
aaa
jb
xor
mov
mov
mov
fwait
sarl
ret
outsb
jne
fs
in
dec
outsl
int
ja
sub
fwait
pop
adc
jmp
cmp
fdivrp
dec
push
jnp
je
in
mov
outsb
dec
hlt
out
pop
or
add
add
enter
scas
shll
jo
hlt
clc
clc
sub
add
rol
inc
sbb
stos
cmpsb
daa
movsl
mov
hlt
ret
jmp
add
adc
lahf
pop
mov
push
popa
in
ror
int3
add
xor
sbb
inc
leave
or
popa
ds
dec
daa
movl
push
mov
adc
mov
mov
inc
lret
jg
jle
es
inc
dec
in
pop
adc
ret
into
jge
jl
jp
lcall
addl
cmp
fcomp
lock
scas
mov
clc
sbb
lret
pop
lret
push
pop
cmp
lahf
mov
pop
mov
dec
mov
lret
shlb
adc
mov
rcll
mov
mov
inc
lods
dec
pop
mov
inc
inc
mov
inc
push
dec
outsb
or
dec
lock
fldcw
sub
mov
sahf
jne
clc
jnp
movsb
push
inc
and
pop
xchg
push
incl
test
lcall
mov
xor
inc
or
jae
fisubrs
push
out
dec
or
in
jp
rcr
stos
hlt
out
fisttpl
in
aam
add
lea
add
add
jo
inc
ret
sub
mov
pop
jo
lret
fcoml
mov
jp
lods
ja
push
xchg
adc
into
mov
jmp
pop
clc
mov
inc
dec
aas
xchg
pop
mov
xchg
dec
cmp
xchg
mov
pusha
inc
push
mov
mov
xchg
aaa
xchg
div
clc
leave
adc
ret
or
stos
fimuls
xchg
rcr
cmp
stos
cli
cli
and
mov
sbb
jns
iret
sbb
rcl
sbb
faddl
in
insl
shlb
pusha
add
out
add
push
pop
push
ljmp
mov
add
pop
inc
leave
inc
mov
mov
inc
lcall
leave
loopne
jmp
xchg
lods
or
inc
xchg
push
add
clc
or
xor
fsubr
call
std
pushf
in
pop
scas
dec
pop
idivb
push
out
jb
loopne
out
addb
xor
pop
mov
sarl
insb
stc
mov
call
adc
pop
cmp
out
fs
movsb
scas
mov
xor
cwtl
rorb
mov
pop
sahf
test
and
loope
inc
ja
loopne
loop
inc
iret
jl
xchg
lods
mov
xchg
inc
ljmp
loopne
loop
xchg
shll
sbb
adc
inc
mov
rol
push
lock
jne
jo
inc
faddp
ja
movsb
outsb
insl
lcall
stos
aad
sbb
mov
test
pop
adc
daa
fdivrl
scas
add
add
cmp
shll
ja
mov
rclb
pop
push
adc
mov
push
in
adc
add
shrb
push
fmulp
cmp
dec
lods
stc
stos
loopne
fmulp
push
ret
adc
jnp
leave
or
mov
popf
imul
test
xor
dec
je
lods
scas
fimuls
hlt
movsl
mov
icebp
call
popa
mov
mov
mov
fs
mov
pop
xchg
mov
or
aaa
dec
mov
inc
dec
jb
call
sti
dec
icebp
adc
inc
push
cmp
cmp
les
aas
jg
push
dec
outsl
jne
shlb
sbb
sbb
popf
and
addb
fcoml
mov
jle
lret
and
in
int3
in
call
scas
in
scas
rorl
or
mov
test
jae
push
xchg
lret
repz
sub
cmpsb
push
pushf
and
push
fs
sub
sbb
stos
movsb
add
xor
into
repz
jge
popa
ds
loopne
cmp
lret
sar
shrl
mov
add
rol
sbb
jae
and
loopne
mov
nop
lds
dec
jbe
push
cs
shlb
add
mov
pop
js
cmp
push
aas
adc
inc
dec
mov
fldt
cmpsb
loopne
mov
lcall
bound
dec
into
ret
mov
mov
dec
push
test
dec
push
adc
sub
xchg
jl
jnp
push
jmp
lods
rol
fs
dec
fcom
mov
dec
psrld
cmpsb
arpl
loopne
rolb
les
adc
xor
pop
lahf
mov
rol
popl
xor
int3
cld
out
stos
lret
aad
fiaddl
jge
fs
fsubl
repz
test
mov
andb
test
repz
shl
or
ljmp
shll
sbb
test
shll
inc
icebp
scas
jno
adc
lret
mov
push
pop
outsl
xchg
les
jle
clc
shrb
lret
jno
icebp
out
lock
sub
repnz
sub
bound
out
sbb
imul
cmp
rcrl
lods
mov
lret
cmp
or
les
cmc
sub
inc
lock
and
or
sub
std
push
or
inc
xor
push
in
repz
inc
add
jns
test
movsb
cs
lret
adc
fidivl
fisubrl
mov
adcl
les
into
sbb
adc
rcr
mov
sbb
push
faddl
dec
inc
xchg
lcall
dec
sub
or
xchg
fcmovnb
test
pop
adc
push
pusha
sbb
pushf
mov
cmpsl
fwait
add
sbb
test
add
jns
sub
arpl
jnp
sbb
sub
fs
cmp
repz
jecxz
xchg
jl
test
lock
xchg
insl
es
imul
lret
pop
xchg
leave
cmc
adc
dec
hlt
or
call
pop
jle
loopne
sti
mov
sbb
repnz
sbbl
push
adc
mov
fimull
jne
scas
les
rcr
add
or
or
inc
add
xchg
add
andl
sub
daa
add
push
fldl
scas
cld
mov
scas
loop
and
ds
add
in
xchg
sbb
add
sbb
jmp
pop
hlt
mov
xchg
pop
into
add
aad
rcl
test
xor
fcmove
dec
iret
and
sub
mov
sti
adc
adc
shlb
jb
xabort
mov
sbb
das
pop
sbb
stos
inc
add
and
add
imul
enter
leave
sti
cld
adc
mov
sbb
push
in
xor
sahf
fdivrs
outsb
sahf
insb
imul
inc
jl
out
in
cwtl
icebp
out
and
jb
push
stc
neg
clc
jo
xchg
lods
jb
bswap
pop
leave
mov
popf
mov
ret
add
fmull
xchg
xchg
xchg
mov
fisubrs
cmpsb
jl
pop
out
bound
xchg
test
fisubl
movsb
pop
dec
loopne
sbb
fisubs
pop
jmp
jne
mov
orb
pop
out
jecxz
dec
xchg
les
lock
int3
adc
sub
pop
or
push
int
repnz
rolb
movsb
repnz
ror
hlt
mov
add
out
sbb
in
out
add
cmpsl
test
pop
or
cwtl
xor
into
rcr
loop
sbb
ficomps
mov
sarb
movsl
mov
add
fmull
push
enter
stos
mov
sti
movsl
mov
and
or
and
push
dec
mov
or
stos
dec
sarl
loopne
xor
push
cmpsl
cmp
mov
adc
adc
popa
out
cmp
js
mov
cmpsb
mov
dec
enter
enter
xorb
sti
fildll
xchg
out
sahf
call
les
jmp
jno
xor
rol
adc
mov
pop
je
mov
lock
push
or
sbb
xchg
pop
loop
dec
or
lock
int3
pushf
xorb
cmpsl
movsb
shll
mov
mov
cmp
adc
lcall
push
popf
fdivrl
xor
cmp
mov
ficoms
adcb
dec
test
sbb
mov
fistl
or
push
jg
sar
or
add
repnz
ret
push
sbb
in
loope
je
icebp
repz
xchg
std
add
mov
enter
int
icebp
sbb
repz
sti
mov
inc
ret
mov
lods
xchg
in
jmp
add
mov
mov
adc
mov
sub
mov
sti
or
mov
int
icebp
insb
jno
add
dec
rclb
or
outsb
adc
rcrl
xchg
clc
lock
xchg
xor
mov
jl
add
mov
mov
adc
xor
jno
icebp
dec
mov
sti
or
mov
int
icebp
jo
adc
shlb
sbb
addb
cli
dec
inc
xor
mov
pusha
xchg
or
mov
adc
je
jl
shl
mov
hlt
dec
xorl
out
mov
mov
ja
icebp
adcl
cwtl
xor
sbb
int
icebp
cmpsb
and
js
pop
mov
cmp
xor
mov
xchg
xor
mov
test
jb
xor
mov
repz
xor
sbb
xor
mov
and
xchg
lret
icebp
and
mov
rclb
xor
dec
xor
sbb
xchg
icebp
iret
subl
xlat
sti
sbb
lcall
pop
mov
icebp
jp
or
mov
movl
xor
mov
and
xchg
rcll
flds
xor
push
icebp
test
xor
mov
test
int
icebp
std
addl
sti
in
sbb
int
icebp
lea
aad
push
xchg
xchg
dec
mov
cmc
mov
icebp
in
jbe
push
xor
divl
icebp
jae
xchg
push
dec
push
ss
and
andl
test
dec
push
dec
imul
sub
fwait
cmc
sbbl
test
cmp
outsl
and
cmc
cmpl
test
pop
mov
pop
ss
and
andl
xchg
test
push
mov
ja
aaa
push
and
xorl
test
xorl
orl
test
sub
push
dec
jns
int
cmp
xor
icebp
sub
pop
ss
and
icebp
cmp
int
and
xorl
fisttpll
scas
in
flds
pop
int3
fcmovnbe
adc
xlat
add
hlt
mov
test
mov
add
repnz
fcoms
mov
or
cmp
out
dec
je
add
mov
or
sbb
jecxz
or
hlt
jmp
mov
adc
adc
rorb
mov
pop
push
mov
int
or
mov
push
enter
adc
mov
add
lock
int3
push
xor
mov
int3
hlt
clc
fsubl
loop
or
lock
or
push
rorb
mov
lock
mov
cwtl
lsl
cmp
dec
sbb
or
and
sub
shrl
xor
in
mov
dec
or
adc
nop
jb
adc
xor
xor
mov
jb
rorb
int3
addr16
or
cld
inc
pop
or
adc
sub
ja
and
mov
and
sub
jecxz
xchg
mov
or
fstpt
or
inc
adc
or
adc
fdivrl
and
fwait
mov
jno
rcrb
jbe
adc
fimull
mov
icebp
popa
xchg
jle
xchg
je
insl
rcrb
mov
fldcw
jg
lods
je
sti
jbe
int3
loopne
or
clc
adc
pop
rclb
in
inc
ljmp
dec
dec
pop
adc
bound
insb
pop
inc
jno
cmp
and
adc
ljmp
mov
cwtl
adc
in
sti
lods
in
adc
ja
adc
adc
jmp
adc
adc
pop
mov
test
aad
mov
sub
jle
icebp
add
movsb
mov
add
mov
mov
cli
inc
call
movl
inc
adc
rclb
movsb
inc
add
adc
cmp
mov
andb
fadds
fisubrs
pop
xor
add
bound
lcall
test
iret
mov
test
rcrb
adc
mov
enter
stos
xor
rcrb
pop
aaa
sbb
imul
xor
jnp
add
enter
or
jl
inc
jno
in
dec
sbb
cwtl
or
jmp
into
in
adc
push
jge
mov
rolb
shl
and
adc
pushf
inc
push
fsubrp
mov
adc
ficomps
mov
add
adc
and
nop
lret
aaa
decl
mov
or
sub
cmp
jg
sub
jge
sbbl
dec
mov
daa
xchg
pusha
push
jo
cwtl
dec
test
mov
or
jl
loope
add
repnz
in
sub
in
fwait
sbb
or
leave
add
pushf
rolb
lock
sbb
arpl
daa
ss
pop
pop
dec
sbb
or
outsl
add
js
add
inc
jge
dec
cmp
cli
pop
adc
sarl
or
ret
pop
cli
leave
push
pushf
dec
lahf
mov
sbb
inc
mov
int3
add
pop
inc
addr16
stc
les
test
mov
adc
xorl
sub
cmp
popa
push
jns,pn
mov
mov
scas
das
jne
rcrb
and
popa
dec
out
pop
inc
inc
lret
dec
ficoms
pop
dec
js
fmuls
mov
fdivs
shrl
jo
jbe
bound
mov
lock
repz
pusha
inc
jns
inc
cmp
lea
lds
sub
push
jb
xor
pop
es
xchg
sahf
aas
decb
cmp
pop
dec
add
pusha
jmp
sti
fadds
shlb
pop
jge
cmp
pop
cld
mov
mov
out
aad
pushf
mov
sbb
popf
ret
ret
inc
push
mov
lods
pop
jl
jo
out
pop
pop
hlt
mov
and
in
inc
fisubrs
inc
pop
mov
ss
movsb
call
bound
or
adc
mov
and
add
xchg
cld
rorb
inc
test
xchg
mov
out
lret
cmp
fbld
loopne
loopne
sub
push
dec
cmpsb
xchg
sti
es
addl
add
into
jo
cmpsb
cmp
scas
add
and
nop
adc
jg
enter
lcall
sbb
fimull
adc
int3
test
xchg
adc
out
fadds
cmpsb
pop
pop
inc
out
mov
aad
mov
mov
mov
cmp
insb
test
test
sbb
mov
sbb
pusha
and
mov
repz
push
gs
cmp
repz
jo
mov
sahf
jo
out
mov
fcmovnb
pop
dec
aas
cmp
ficomps
push
inc
in
jne
pusha
mov
into
xor
add
dec
call
lods
jne
push
repnz
sti
data16
mov
repz
fcmovnu
adc
jp
jo
call
sub
mov
cmp
or
xchg
out
scas
mov
push
jo
jge
adc
dec
cli
fistps
ds
jle
jp
sbb
xor
or
lret
pop
lret
push
outsb
xor
mov
ret
aad
in
filds
fsubp
testb
push
sbb
cmpb
sbb
inc
and
or
nop
adc
jp
hlt
push
push
adc
in
adc
inc
or
push
mov
fcmovnu
inc
mov
jns
fdivl
jne
fsubr
pusha
xor
lock
pop
jnp
add
enter
add
adc
mov
int3
xchg
or
int
pop
pop
adc
hlt
adc
dec
push
or
call
clc
popf
imul
add
cld
lret
ja
lods
aaa
loop
or
lock
decl
mov
fmul
in
mov
jns
in
sar
or
stos
cmpsl
movsb
leave
pop
pop
adc
rcll
xor
cmp
mov
jns
push
xor
stc
shl
sbb
mov
stc
push
sbb
inc
mov
push
in
pop
sbb
add
loopne
lods
sbb
sarl
inc
loopne
addr16
mov
or
add
test
cmp
ret
pop
push
movsb
mov
fstpl
and
int3
int3
fldl
cmpsl
mov
shll
jb
shrb
stos
shrl
les
int3
lret
in
mov
les
jo
test
leave
sarb
les
fsubrl
pop
enter
shll
iret
hlt
push
les
mov
xor
stos
mov
mov
jg
xlat
clc
int3
jg
adc
push
pushf
int3
iret
jecxz
enter
sti
cwtl
repnz
mov
cmpsl
shll
test
push
mov
stos
cmpsb
pop
mov
mov
pop
pop
pushf
push
ror
iret
cmp
xor
mov
iret
les
or
push
iret
pop
adc
cwtl
push
loope
int3
je
pop
fcomp
dec
ja
ja
ret
adc
lods
cli
xchg
sub
cmc
stc
dec
fisubl
push
hlt
mov
pop
xor
faddp
xchg
sahf
ljmp
jns
lock
je
mov
sub
das
rol
insb
mov
or
mov
mov
insb
sbb
lods
hlt
mov
lods
adc
scas
mov
dec
iret
xor
pop
mov
mov
cmpsb
lahf
in
push
je
sbb
adc
in
sar
aas
lcall
icebp
inc
ret
icebp
xchg
sub
movsl
enter
movsl
pop
jnp
insl
enter
mov
aaa
test
test
xor
inc
lahf
xor
lods
repnz
jb
stos
fs
inc
xchg
dec
pop
out
mov
inc
sbb
aad
insb
shlb
adc
lock
sti
xor
lock
mov
ret
cmp
ds
les
sbbl
shlb
fistl
ret
test
repz
pushf
out
iret
addl
adc
dec
lds
sbbb
inc
clc
int3
addr16
jo
xor
inc
sub
mov
mov
jl
or
mov
imul
lret
xchg
push
mov
call
sub
sti
mov
shl
sbb
stos
scas
mov
adc
insb
hlt
stos
aam
cmp
bnd
fcoms
les
rcl
iret
mov
les
adc
sub
lock
jmp
repnz
jmp
pop
jo
les
shlb
jmp
incl
out
int
test
addr16
in
dec
stos
loopne
cmp
imul
lock
in
inc
mov
push
cld
mov
int3
cmc
add
ja
xchg
adc
xor
mov
fucomip
cld
in
adc
mov
add
fldcw
addr16
pop
mov
mov
faddp
mov
sbb
fs
jl
aaa
dec
ljmp
sub
sbb
jg
icebp
adc
pop
mov
cmp
lahf
jmp
mov
iret
lds
push
pop
popa
into
and
rcrl
loop
mov
pop
lcall
movsb
dec
jmp
adc
scas
cmpsl
jmp
decl
mov
dec
or
jo
jecxz
push
add
adc
or
cmc
push
xchg
shll
stos
dec
stc
xor
scas
movsl
push
mov
jnp
xor
sti
ret
jo
and
xchg
iret
adc
adc
xor
cmc
sbb
int
or
in
enter
adc
hlt
sar
cld
mov
add
lock
movsb
mov
xor
sub
xor
pop
inc
mov
lock
int3
push
cmpl
shrb
in
pushf
test
mov
repnz
ror
cld
add
jmp
clc
adc
outsb
or
adc
or
bswap
or
push
repnz
or
sbb
inc
clc
adc
enter
add
adc
sbb
add
jmp
loopne
ret
rorl
fwait
mov
mov
lret
das
psrad
mov
pusha
mov
or
xchg
jmp
int3
addl
jmp
movsb
dec
insl
das
jge
xchg
inc
fwait
adc
push
or
push
bnd
xor
xchg
mov
add
or
mov
push
sarb
or
insb
rcrl
jae
pop
adcl
scas
pop
out
dec
repz
inc
jb
sbbl
push
xchg
test
xchg
or
mov
or
sahf
je
aad
stos
shl
push
inc
pop
push
adc
mov
jecxz
je
enter
sbb
xor
sbb
test
roll
push
leave
cmp
sub
sbb
adc
add
fsts
les
das
push
dec
sbb
shl
cwtl
add
xor
xor
sbb
add
adc
jl
sbb
test
sbb
faddl
sbb
xor
pop
int3
mov
sbb
add
in
adc
int3
int
adc
pop
mov
fnsave
insl
pop
jnp
scas
mov
push
enter
rorl
pushf
sbb
jg
cmc
movsb
xor
scas
mov
xor
push
mov
adc
outsb
bound
push
inc
cmp
fbstp
push
lods
adc
pop
push
dec
sub
jecxz
inc
xchg
pop
add
lcall
fldcw
mov
xor
push
mov
repnz
sarb
mov
adc
push
repnz
cwtl
push
mov
int3
adc
mov
mov
int3
or
lods
add
fmul
sbb
repnz
int3
sbb
lock
int3
push
and
repnz
icebp
mov
add
out
int
in
and
mov
in
add
in
in
lret
adc
repz
les
jo
xor
add
imul
les
mov
loopne
jl
cli
or
add
lock
sbb
fcom
mov
mov
int3
jp
dec
repnz
shlb
pop
hlt
sub
loop
ret
xorl
mov
pop
lock
sub
repnz
fstps
lock
dec
sbbl
shlb
mov
add
lock
int3
mov
xchg
bnd
ja
mov
add
icebp
pop
sub
int
shl
scas
rorb
icebp
xor
dec
adc
fs
mov
cli
int
mov
xor
xlat
adc
test
test
jge
fstpl
nop
sub
inc
mov
adc
mov
hlt
add
sub
dec
adc
xor
or
cwtl
pop
add
insl
or
xor
sbb
push
xor
adc
cmp
mov
shr
adc
out
xlat
add
jl
and
xor
test
and
xor
shrb
sub
les
call
fldcw
mov
imul
cli
sbb
mov
inc
add
lock
imulb
adc
add
lock
aad
adc
mov
mov
sbb
repnz
sub
dec
out
or
pushf
adc
adc
mov
xor
rcl
xor
adc
jl
dec
adc
dec
cwtl
or
or
lock
add
or
adc
adc
add
xchg
daa
dec
inc
sub
mov
xchg
pop
movsb
jmp
xchg
stos
xor
xlat
aaa
out
das
sbb
xchg
sbb
xchg
je
sahf
pop
jg
roll
adc
cmp
xchg
shlb
mov
test
clc
aas
outsb
cmovne
cmp
xor
push
mov
mov
int
xor
insb
repz
test
xchg
and
xchg
cmp
ret
xor
xchg
cs
xor
nop
mov
shr
add
shlw
dec
push
cmp
inc
cli
and
jg
iret
scas
xor
dec
addl
xchg
sbb
xor
or
cs
xor
xor
stc
fistpll
sarl
dec
cmp
xor
adc
mov
roll
mov
xlat
mov
pop
lods
push
jg
and
jne
dec
and
xor
enter
adc
aam
out
lahf
adc
inc
dec
xchg
adc
xor
cmc
mov
jno
adc
stc
push
lds
xchg
pop
xor
inc
call
fcompl
jge
and
icebp
nop
sti
int
push
push
hlt
outsb
jle
xor
mov
and
divl
sarb
pop
mov
mov
rcll
mov
fsts
push
jbe
push
jg
dec
pop
xorb
lahf
rolb
cmp
lods
jp
sti
iret
addr16
stc
arpl
push
lock
dec
xor
stc
jecxz
mov
arpl
mov
xor
es
pcmpeqd
ror
and
sub
cs
push
sub
push
mov
into
inc
push
mov
cmovs
sarb
divl
sbb
mov
xor
jecxz
push
push
cld
xchg
int
jl
aaa
pop
stc
pop
xor
fmull
mov
outsb
adc
nop
iret
rorb
jle
xor
std
pop
out
loope
sbb
inc
icebp
xor
es
test
sti
outsb
xor
outsl
xchg
push
jb
xor
xor
xor
fstpt
call
out
loopne
shll
test
adc
push
push
mov
xor
dec
pop
xchg
sub
cmp
les
leave
scas
mov
xor
gs
push
xchg
inc
inc
adc
outsb
pop
xor
or
shl
xchg
cmc
push
jg
jo
xchg
push
xchg
adc
clc
adc
add
leave
pop
add
adc
add
lds
sbb
faddl
clc
adc
add
rcrl
adc
add
adc
push
in
jecxz
cmpsb
mov
loop
push
pushf
je
mov
mov
in
mov
mov
icebp
nop
mov
vpmadcswd
add
cmp
sub
dec
xchg
or
pop
or
or
mov
mov
mov
cmp
sbb
mov
in
add
enter
xchg
add
cmp
ljmp
push
movsl
jae
jl
sbb
mov
sbb
jno
dec
out
incl
mov
mov
sbb
xchg
cli
repz
pop
std
in
sarl
cld
push
mov
sarb
adc
jno
adc
xchg
int
repnz
shlb
hlt
lock
sbb
test
enter
out
stc
cmp
in
mov
dec
xchg
in
dec
jmp
push
fcoms
repz
mov
mov
mov
and
adc
repz
cmc
inc
mov
stos
inc
test
cmpsb
jae
cmc
inc
cmp
cmpsl
jae
or
sahf
push
loope
mov
adc
nop
lahf
repnz
mov
lods
xor
stc
jg
or
test
notl
fldl
addl
repz
es
cmpsb
push
mov
popl
movsl
insl
repz
rolb
movsb
lret
leave
lods
adc
std
call
or
add
repz
mov
incb
xor
add
add
loop
xor
loope
mov
orb
dec
push
in
int
scas
mov
mov
mov
outsb
adc
xor
aam
push
call
dec
and
xchg
insb
pusha
rcrl
and
add
cltd
sub
pop
mov
or
sub
pop
jnp
aad
mov
inc
fisubs
gs
clc
ljmp
xchg
arpl
popa
mov
imul
cli
lret
cmp
dec
call
inc
sbb
mov
insb
jbe
sbbb
sub
sbb
pop
fsub
jmp
flds
lods
mov
mov
and
fs
jae
jmp
jmp
push
call
aas
push
call
dec
inc
lea
jo
ror
pushf
push
stc
test
add
pusha
stc
ror
pushl
dec
setle
dec
xor
rol
xor
add
neg
call
push
call
int
cmpsb
ds
jmp
call
xor
and
ljmp
or
adc
sar
mov
lea
lret
sub
mov
gs
push
xchg
nop
sbb
inc
test
pop
mov
stos
fwait
dec
jnp
or
lock
ret
cmp
sub
mov
inc
cld
xor
loopne
sarl
or
cmpsl
jo
fisubs
mov
arpl
inc
test
cmpsb
arpl
lods
mov
dec
cmp
les
cmp
loope
mov
jmp
jge
repnz
in
cmpb
inc
aas
dec
jg
push
jecxz
inc
or
lds
mov
inc
pushf
popa
test
pushl
inc
repnz
movsb
ja
mov
test
rcr
insl
fisubrl
sub
mov
xor
mov
xchg
mov
aam
ret
loopne
adc
mov
arpl
xchg
adc
fldt
and
jl
cmpsb
mov
push
or
push
icebp
bound
lcall
gs
das
nop
xor
jmp
xchg
sti
xchg
push
imul
pop
mov
sti
inc
inc
cmpb
sbb
shlb
jae
popa
mov
mov
cld
call
stc
inc
inc
mov
xor
rolb
pop
pop
leave
push
outsl
pop
loope
push
out
or
fldt
sbb
cld
jbe
mov
adc
cmpsl
lds
shlb
leave
xlat
scas
lock
push
cltd
pop
push
das
test
daa
mov
addr16
mov
cmpsl
and
jmp
dec
mov
cmp
cmpxchg
dec
mov
inc
lahf
dec
and
ljmp
adcl
jg
adc
aam
push
lods
xor
in
sub
fidivl
or
mov
mov
cltd
xor
fldt
stos
or
cmp
add
out
sbb
repnz
lret
lea
addr16
dec
pop
push
or
jp
sub
sub
cmp
mov
and
push
xchg
out
jbe
scas
or
jl
sahf
pop
fistl
inc
or
test
enter
out
jge
push
mov
clc
lahf
mov
adc
xor
pushf
push
pop
jae,pt
xchg
in
push
and
lret
lcall
pop
je
call
rorl
xor
insb
fldt
out
fsts
test
cmc
and
add
mov
dec
cmp
adc
mov
mov
mov
repz
addr16
lock
or
in
fadds
movsb
stos
pop
movsb
inc
ds
add
mov
mov
mov
pop
test
sbb
cmpsb
sbb
roll
mov
adcl
inc
lock
ljmp
popa
ds
push
xchg
mov
or
cs
mov
lret
push
lods
mov
dec
inc
push
call
add
sbb
test
insb
xor
mov
pop
lods
sub
nop
cs
jecxz
dec
cmp
mov
xchg
mov
aas
aad
xchg
cwtl
insb
pop
sub
push
xchg
push
gs
cli
shrl
movb
sub
or
faddl
xor
ljmp
flds
jge
dec
inc
fldt
xor
mov
pop
mov
jne
cmp
nop
data16
pop
pop
pop
jnp
jae
xor
cmc
insb
leave
jge
push
rorb
call
in
sub
xchg
fs
mov
frstor
leave
mov
xchg
fldt
xchg
cmc
sub
fists
arpl
in
dec
bound
daa
imul
push
jbe
pop
and
jge
in
fbstp
pop
cmp
jns
mov
or
and
sub
or
pop
cld
test
xchg
push
push
call
fnsave
popa
jns
xchg
sub
and
std
scas
imul
stc
dec
xchg
mov
sub
mov
lods
sbb
and
jmp
xor
movsl
dec
sub
mov
mov
fwait
sub
out
lret
pop
ret
xor
pop
int
cltd
rol
or
test
notb
pop
pushf
and
mov
in
rclb
popf
push
fists
or
out
xchg
mov
jle
xchg
dec
push
mov
add
pop
jns
insb
in
fldt
rcl
adc
add
cmp
push
cmp
loop
orl
mov
loopne
jl
push
jbe
jmp
xchg
or
xchg
push
and
js
call
cmp
out
pop
mov
in
sub
sbb
andl
jnp
sbb
icebp
aam
out
mov
xlat
subb
imul
nop
stos
cmpsb
jge
nop
sbb
mov
xchg
jne
repnz
jmp
lods
std
inc
imulb
sub
mov
loopne
dec
add
sub
lods
mov
add
mov
pop
rorb
mov
push
jge
imulb
adc
insl
mov
push
test
inc
push
sti
adc
xor
xlat
out
testl
jno
outsl
inc
add
add
loopne
std
or
pandn
xchg
xchg
out
movsb
and
lcall
or
sbb
lea
jae
mov
in
xor
jmp
pop
cmc
jb
js
adc
inc
pop
push
call
pop
lods
mov
add
orl
imul
or
test
mov
add
mulb
add
push
pushf
call
push
call
fistpll
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
mov
lea
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
ja
test
lock
add
xchg
push
push
call
mov
insb
or
test
jl
add
or
jge
mov
pusha
neg
rcr
mov
test
pusha
movb
bt
sub
push
movw
movb
rep
pushf
bswap
mov
movb
movl
movb
mov
lea
jmp
push
call
test
in
adc
add
adc
pushf
lea
jmp
sbb
jno
mov
test
stos
arpl
jo
popa
stos
cmpsl
ja
pushf
nop
call
ds
aam
dec
push
jne
mov
mov
sub
shrl
sub
aas
cmp
mov
popf
pop
addr16
testl
lods
jne
mov
testb
sub
jbe
movsb
js
push
push
adc
xchg
xor
dec
pop
adc
inc
fistpll
test
cmc
pop
add
popf
push
call
sub
fsubrp
mov
ljmp
outsl
add
call
ret
mov
adc
add
push
call
or
test
cli
xor
add
test
mov
push
jno
test
lret
xor
add
push
call
subb
adc
add
pushl
neg
lea
jbe
push
pusha
pushf
lea
call
test
jmp
loope
scas
xor
lods
nop
cmp
icebp
iret
ss
adc
pop
ret
mov
and
mov
loop
inc
dec
jg
push
mov
outsl
and
push
js
loopne
xchg
push
ss
jno
cmp
in
xor
or
jmp
xor
pop
lods
fstpl
dec
test
xchg
in
or
pop
mov
cmpsb
js
xor
shufps
push
inc
imull
shlb
into
and
mov
int3
mov
lods
xchg
pause
fisubrl
jg
test
inc
sub
add
dec
xchg
cwtl
adc
dec
adc
pop
jp
es
movsl
vpsubd
mov
pusha
pop
lcall
push
push
pop
push
mov
jg
or
jle
inc
pop
int3
push
pop
lea
test
inc
aam
or
std
xchg
mov
enter
adc
inc
int
xchg
ja
adc
test
sub
dec
push
loopne
mov
lods
xchg
push
pop
bound
pushf
lea
call
push
pusha
pushf
call
push
call
add
mov
aam
adc
cmp
stos
cmp
adc
inc
ret
roll
loop
mov
dec
shrb
pop
daa
jbe
int3
es
call
outsl
mov
xlat
leave
mov
xchg
cmp
dec
mov
xchg
aam
int3
mov
mov
push
mov
cmp
fwait
push
xor
andb
shll
adc
pop
repnz
jl
mov
inc
push
cmp
xchg
mov
in
push
call
mov
test
inc
std
cli
lahf
jl
add
xchg
mov
je
inc
sar
bound
pop
out
dec
es
shrl
inc
fsubrp
pop
inc
cld
in
test
jae
xor
sub
je
xchg
adc
pushf
popa
stc
jle
jp
popf
mov
pop
es
push
pop
ret
xchg
ret
bound
rorl
repnz
or
and
les
rorb
daa
xchg
out
adc
shll
pop
gs
mov
jp
daa
and
xor
leave
subl
stc
sub
ret
or
xchg
addr16
cmpsl
xchg
cmp
sti
sbb
test
movsl
pushf
push
out
add
js
dec
mov
rolb
jl
lcall
loop
cmp
xor
sub
lock
outsb
push
rcrb
or
adc
pushf
cmp
mov
add
pop
jge
sbb
dec
dec
adc
xor
stc
adc
add
push
cmp
ljmp
sahf
int
xor
or
in
filds
int3
out
xchg
cli
push
dec
test
outsl
movsl
lods
mov
cmpsl
mov
jmp
mov
decb
dec
outsb
scas
adc
xchg
loopne
xchg
or
adc
mov
dec
insb
in
cld
jae
aad
pop
jbe
add
sub
mov
pop
pushf
and
fcomps
mov
xchg
or
fists
push
cld
fldt
jecxz
add
call
cmc
or
pop
mov
stc
test
pushf
mov
sbb
adc
push
bsr
xchg
xadd
push
bts
pusha
ror
mov
adc
mov
or
dec
ror
xadd
mov
shr
sub
lea
jmp
push
call
inc
cmp
rcr
pop
or
cmp
pop
cs
pop
lret
sar
adc
dec
cmp
mov
in
or
das
mov
dec
dec
inc
lds
push
xchg
xchg
sub
rorl
add
das
inc
jl
mov
fnstenv
imul
clc
int
mov
repz
and
mov
mov
int3
jp
jle
sub
das
inc
jg
adc
lods
xchg
jb
fldl
add
add
dec
fisubl
jp
sub
in
mov
gs
pop
xchg
sbb
fnstcw
and
bound
repnz
push
lcall
and
mov
xchg
fsubs
mov
push
add
jo
push
mov
idivb
ret
mov
cmp
sbb
cs
adcl
sbb
gs
idivb
push
stc
out
clc
inc
sbb
mov
lods
fnstcw
xchg
xor
pop
cwtl
into
xchg
mov
inc
xor
lods
xchg
ret
pusha
adc
fcomps
call
mov
movb
mov
jmp
sub
lea
push
pusha
inc
lea
push
lea
call
push
pusha
pusha
pushf
adc
call
push
call
xor
test
xchg
cmpsl
mov
mov
cmpsl
push
push
jmp
pop
add
fcmove
add
mov
xor
sbb
adcl
xor
push
pop
ss
cli
xchg
mov
xor
pop
shlb
fsubs
jmp
and
clc
sbb
jge
cmp
add
cmp
movsb
and
das
xchg
cltd
js
pop
lods
jns
mov
add
xor
pop
and
clc
mov
sub
btc
mov
mov
call
push
call
mov
push
call
jg
jns
add
add
insl
rclb
inc
dec
xor
cs
insb
add
adc
sbb
add
jne
add
stc
test
add
add
pop
fildll
dec
adc
add
pop
addr16
call
iret
xchg
sub
pop
test
leave
or
mov
jle
stc
cwtl
dec
aam
push
fistl
hlt
in
dec
inc
nop
rcll
into
loop
sub
mov
insb
aaa
xor
xlat
test
or
ss
ljmp
xchg
or
fs
cmp
push
repz
in
into
data16
idiv
ja
into
lret
mov
outsb
mov
das
popf
stc
push
pop
mov
fildl
add
dec
clc
mov
pop
in
std
cmp
pusha
scas
int
fldt
mov
adc
add
addb
call
dec
sub
add
imul
dec
mov
xor
std
in
sbb
bnd
or
fisubl
sahf
mov
pusha
int
cwtl
dec
mov
mov
or
mov
add
cmp
data16
mov
xchg
cs
fbld
mov
xchg
test
jge
shlb
mov
fnstsw
dec
inc
mov
lret
mov
push
mov
imul
pop
imul
inc
dec
dec
inc
push
dec
xor
cs
insb
add
repnz
into
movsl
test
and
jo
les
sti
pusha
les
cltd
data16
movd
rorb
rorl
aaa
scas
xlat
mov
add
aas
push
dec
lds
mov
sbb
lods
lcall
adc
add
pop
add
call
adc
ljmp
add
jne
mov
push
ss
rep
cmc
outsb
cmp
mov
mov
in
scas
mov
in
sbb
fdiv
pop
fidivrs
ljmp
push
fcomip
push
pop
jo
imul
aas
sbb
and
lock
fwait
aas
out
mov
mov
dec
fwait
adc
popf
mov
das
dec
sbb
imul
sahf
int3
fwait
lret
iret
pop
mov
add
inc
arpl
insb
repnz
js
inc
lret
fldt
mov
pop
and
nopl
sub
xor
lahf
sub
jb
bound
pop
clc
dec
pop
mov
int
cmpsb
fiadds
scas
int3
adc
sbb
push
pusha
lret
pop
movsb
or
push
xchg
xchg
jp
clc
lods
repz
addl
xor
cmpb
mov
pop
out
inc
cwtl
add
jno
or
sub
sub
pop
xchg
jne
mov
cmp
fwait
lods
add
dec
sbb
adc
fldt
lea
clc
cmc
xchg
shl
shr
mov
test
add
mov
cmp
pushf
xchg
shr
and
shl
mov
pusha
sub
mov
pushl
rep
call
push
call
lret
aad
jb
gs
and
jecxz
js
lods
pop
scas
jle
dec
cmp
cmp
shl
sub
or
popf
movsl
into
jo
ret
or
insl
testb
movsb
mov
mov
sbbb
cmpsl
data16
lret
dec
sub
jnp
movsb
mov
int3
jne
sbb
bnd
std
push
inc
sub
or
jecxz
fldcw
xchg
pop
push
lret
mov
cmc
pop
mov
cwtl
mov
jl
jmp
je
aaa
cmc
xacquire
sub
lock
push
aad
test
fcomp
push
fildl
fldt
fs
call
call
push
call
sbb
nop
test
pop
pop
jecxz
xchg
test
mul
xchg
jp
fmul
scas
loopne
ret
stc
and
inc
xchg
push
in
mov
std
cld
rolb
decl
lods
sub
imul
sti
imul
jmp
cmpsl
adc
ret
lds
mov
fwait
xor
fisubl
imul
mov
inc
outsb
clc
mov
call
fsubl
mov
sbb
or
out
jb
fsts
test
int3
lahf
push
fwait
outsb
and
jno
loopne
dec
jl
xchg
lods
pushf
adc
jmp
test
clc
push
add
jo
sahf
adc
ficoms
add
sub
mov
stc
sub
mov
and
cmp
lods
push
add
add
lock
mov
int
ds
out
push
shll
mov
adc
inc
and
ret
lret
cwtl
loop
ja,pt
aad
jg
clc
rcrl
pop
and
test
jl
insb
adc
stos
push
loope
jae
loop
inc
jae
xchg
shlb
sbb
gs
daa
fcompl
shlb
pop
lods
jl
adc
lods
popf
movsb
inc
les
adc
ret
jmp
fdivrs
mov
test
stc
mov
addr16
jge
fldenv
xor
je
push
pushf
repnz
shrl
xor
adc
clc
mov
repz
xchg
cmp
push
test
jecxz
xor
mov
jmp
dec
dec
xchg
in
icebp
stc
cmp
cmpsb
pop
aas
sub
push
cltd
mov
push
fstpt
test
inc
into
push
insl
xlat
pop
popf
sub
or
lods
sbb
stos
or
aaa
cld
cmp
jle
xor
jae
lods
sahf
dec
call
in
sub
repz
mov
loope
es
xchg
xor
cmp
sbb
jns
ret
jne
ficoms
popa
imul
fsub
imul
std
lret
mov
jg
sbb
repz
add
xor
adc
xor
push
xor
nop
adc
push
loope
mov
loope
movsl
inc
shlb
mov
mov
pop
jmp
lcall
shlb
popf
ljmp
test
jg
add
xchg
jns
inc
mov
jo
test
arpl
add
mov
adc
add
fcompl
push
stos
pushf
lea
jmp
push
call
jp
imul
jmp
sbb
movsb
sub
mov
pushf
test
test
push
dec
mov
leave
enter
push
movsl
cmc
inc
dec
push
aad
lods
push
dec
pop
or
jge
js
xchg
sbb
jb
lds
repz
and
mov
repnz
mov
movsl
cltd
and
pop
sbb
cwtl
sbb
lcall
mov
jnp
stc
xor
scas
and
cmpsl
pop
adc
addb
push
fistl
and
xchg
das
jbe
xlat
fldt
add
add
xorl
cmp
jmp
push
call
mov
xchg
fldt
adc
test
or
add
jge
sub
sbb
lea
mov
or
push
mov
dec
dec
xchg
xor
ficoml
xchg
das
orl
xor
xchg
stos
pusha
ja
jmp
fldcw
lds
dec
dec
sub
push
mov
out
inc
stc
fisubrl
jbe
data16
sbb
std
repnz
iret
xchg
orb
stos
mov
xchg
lret
push
dec
fisubrs
fcomps
insl
loop
lods
imul
xor
shll
xchg
mov
fldt
fs
call
pushf
pushl
lea
jae
jmp
popf
push
jmp
in
mov
xchg
sub
mov
in
xorl
sub
mov
sbb
jae
cmp
add
inc
lods
ret
lret
hlt
xor
pop
stos
rcll
mov
stc
pusha
cmpb
inc
outsb
gs
stc
pop
jnp
leave
dec
dec
in
pop
int
fldenv
sub
mov
and
into
mov
shll
or
lods
mov
les
jb
shr
jmp
neg
mov
test
bt
test
jmp
lea
ja
xor
add
shr
shr
shl
shr
mov
pusha
pusha
ror
add
bts
cmc
jmp
push
call
daa
jmp
or
adc
add
mov
add
call
inc
push
call
popa
cs
clc
mov
popf
bt
mov
cmp
jmp
sbb
sbb
xchg
pusha
int
sbb
pop
xor
inc
pop
jo
outsb
bound
pushf
mov
aas
add
jno
sub
sbb
ljmp
xchg
jbe
dec
dec
mov
addl
push
lcall
jle
popf
push
mov
fisttpl
xchg
and
cmp
adc
sbb
push
pop
and
mov
adc
or
xchg
or
jle
scas
pushf
dec
push
jae
js
pushf
data16
sar
call
cmc
shr
call
bt
cmp
push
pushf
lea
ja
seta
inc
pushf
pusha
inc
inc
ror
neg
clc
pusha
xchg
or
mov
sbb
stc
shr
mov
test
mov
call
mov
rcll
and
rcr
sbb
sub
push
mov
mov
mov
xchg
cmpl
push
jb
imul
pop
cmp
cmp
sub
sub
xchg
enter
dec
popf
jne
cmp
push
pop
ljmp
xchg
mov
sbb
movsl
mov
stos
dec
subl
mov
and
lret
cwtl
push
adc
dec
lods
sub
pop
lods
mov
xchg
sub
fldt
sbbb
call
push
in
pop
jae
cmp
call
test
jmp
push
call
addr16
mov
test
and
pushf
jmp
loope
or
imul
cs
ret
rolb
or
out
call
sbb
roll
sub
mov
xchg
pop
test
adc
lret
loop
xor
push
xchg
int
inc
or
mov
jmp
imul
jno
xchg
das
fbld
outsl
lods
lret
insb
lods
or
addr16
in
sti
jp
cs
fwait
cmp
mov
fldt
fs
call
test
push
cmp
pusha
movb
lea
jae
pusha
jmp
push
call
inc
mov
jo
inc
push
jl
roll
push
xchg
push
xchg
pop
xchg
xor
pop
mov
iret
mov
ja
test
dec
ret
jmp
mov
iret
sub
push
movl
sub
push
push
push
adc
aad
lret
ret
mov
hlt
sub
daa
dec
push
inc
jle
movd
loopne
push
lret
jmp
jmp
fidivrs
pop
and
xor
test
jl
in
sbb
pop
out
or
xor
lods
cmp
outsb
sbb
je
pop
out
cmp
loop
int
nop
sub
push
sbb
sbb
adc
enter
or
cmp
pop
test
ror
popa
jne
iret
adc
and
mov
lods
movsl
pop
clc
inc
std
inc
push
outsb
sahf
rolb
sub
add
fcoms
mov
jae
arpl
insb
cmp
sbb
pusha
out
mov
and
add
cmp
add
and
xchg
cmpb
or
jmp
cmc
dec
add
dec
shrl
mov
aam
push
sbb
in
rorl
xor
test
add
movsl
sbb
fldt
enter
call
iret
inc
mov
clc
nop
orb
fwait
mov
jno
ficompl
push
sbb
fwait
test
cltd
push
jle
xchg
test
bound
mov
hlt
or
ss
ret
movsl
movsl
div
hlt
ret
ss
inc
and
inc
lea
cmp
scas
mov
outsl
loopne
sahf
sbb
daa
lea
icebp
neg
test
adc
xor
fcoml
int
fcomi
pop
scas
mov
scas
mov
inc
adc
pop
push
pushf
out
je
test
les
sub
out
fldt
jg
xchg
pop
jno
in
lcall
ret
dec
insl
push
sub
or
clc
out
jno
add
and
shrl
sbb
push
iret
les
sbb
int3
mov
sarl
inc
mov
inc
mov
jo
adcb
sahf
mov
sub
sbb
mov
cs
sbb
push
fistl
addr16
lcall
je
cwtl
jg
mov
cmpsb
add
adc
add
push
call
outsl
mov
mov
adc
add
sub
add
gs
push
call
inc
arpl
in
push
call
cmp
out
push
jne
mov
xchg
arpl
or
iret
jmp
outsl
call
daa
mull
push
ficomps
mov
lds
jnp
xor
push
add
push
pop
add
dec
mov
mov
xchg
insl
lret
mov
cmp
inc
popa
outsl
std
jp
mov
sbb
insl
inc
ret
cmp
mov
popa
push
cwtl
sbb
pop
jo
or
mov
sub
adc
jo
out
in
stc
ss
test
cmpsl
adc
repz
fldt
jmp
test
mov
rcl
sahf
dec
xor
ret
outsb
jle
push
mov
xchg
cmp
mov
out
cmp
fistpl
jo
aad
icebp
xchg
mov
je
jae
enterw
fildll
push
mov
jnp
jae
inc
aad
sahf
ss
jne
cmp
jmp
jmp
mov
mov
sahf
test
cmp
cmc
hlt
rorl
std
fs
fstl
mov
fldt
xor
add
mov
ja
dec
std
xchg
ds
xlat
dec
in
leave
mov
jge
dec
adc
cmp
mov
mov
push
inc
outsl
daa
mov
add
rol
cli
lock
cmp
or
movsl
bound
and
and
dec
imul
shlb
das
lcall
mov
jno
push
mov
mov
and
clc
cmp
push
mov
jl
push
mov
jmp
cmp
test
mov
add
ficompl
test
pushl
bt
add
pusha
add
pushl
pushf
call
pushf
popl
call
pushf
popl
jmp
call
push
mov
mov
lea
jmp
sub
mov
add
push
push
mov
pushf
pushl
lea
jmp
jmp
std
push
pusha
mov
movzbw
mov
jmp
add
call
adc
pusha
sub
mov
pushf
call
pusha
pushf
popl
jmp
test
cmp
clc
add
pushl
mov
pusha
pushl
lea
jmp
mov
pushf
mov
jmp
cmc
cmp
add
call
mov
push
mov
pushf
lea
jmp
xor
call
pushf
mov
mov
lea
jmp
call
add
pushf
mov
jmp
stc
xor
test
bt
clc
pushf
add
cmp
clc
xor
pusha
cmc
cmp
xor
cmc
stc
mov
cmp
cwtl
clc
sub
movb
movb
mov
mov
push
pushl
pushf
lea
jmp
xor
stc
cmc
pusha
add
stc
jmp
not
mov
pushf
movb
pushf
lea
jmp
pushl
rep
cld
bsr
xadd
mov
jmp
jae
mov
bswap
mov
movzbw
push
mov
movw
pushl
pusha
pushl
lea
jmp
pushl
popl
push
pushf
push
movb
lea
jmp
jmp
pushf
pushl
call
clc
test
shl
jmp
call
sub
movw
push
mov
call
bsf
bsr
or
mov
dec
mov
stc
pusha
call
lea
pusha
push
xchg
lea
std
jmp
call
movl
pushf
mov
call
inc
mov
push
mov
pushl
decl
mov
lea
jne
pusha
jmp
pusha
dec
pop
mov
ror
xor
cmp
setns
cmp
not
bsf
rcr
and
not
shl
mov
movb
jmp
sub
push
pushl
jmp
shr
test
movsbl
mov
pusha
sub
movb
mov
pushf
push
pushf
lea
jmp
mov
call
pusha
clc
bt
pushl
popl
bt
add
bt
stc
cmp
cmc
pushl
popf
pushl
pushf
pushf
lea
jmp
push
shld
movl
jmp
mov
jmp
call
pushf
pushf
popl
call
cmc
cmc
not
clc
and
pusha
push
pushl
jmp
or
mov
call
pushf
pushl
popl
pushf
lea
jmp
pushf
pusha
mov
pushl
pushf
pushl
lea
jmp
jmp
pushf
shr
test
jmp
push
mov
mov
pushf
pushl
movw
lea
jmp
pusha
pusha
mov
mov
call
mov
call
jge
bt
add
jbe
push
push
mov
pushf
push
movb
lea
jmp
dec
jmp
mov
mov
pusha
pusha
push
mov
pushf
jmp
mov
mov
jmp
add
notl
rcl
rol
mov
call
shrd
inc
add
mov
add
adc
mov
clc
cmp
pushf
cmc
sub
pusha
cmp
shl
pushf
mov
pushf
pushf
jmp
push
movl
pushf
popl
jmp
lea
mov
bt
pusha
add
pushl
pusha
pushf
jmp
pushf
mov
call
rdtsc
push
call
sbb
aas
mov
clc
or
push
mov
jmp
jmp
jmp
pushf
popl
jmp
push
pushf
popl
movb
pushf
pusha
pushl
popl
push
lea
jmp
sar
sar
setg
mov
push
cmc
sub
movw
bt
cmc
cmc
add
movl
pushf
popl
push
pushf
pushl
popl
push
push
lea
jmp
btr
clc
mov
pushf
call
mov
pushf
push
lea
jmp
pushf
mov
pusha
mov
jmp
pushl
popl
pushf
lea
jmp
pushf
popl
pushf
lea
jnp
pushf
mov
push
pushl
mov
call
mov
pushf
call
jmp
jmp
dec
rol
bts
call
mov
mov
pushf
popl
jmp
mov
mov
lea
jmp
pushf
popl
call
call
pushf
mov
mov
call
jmp
mov
cld
pushf
cmp
clc
pushl
popf
push
lea
jmp
test
cmc
add
pusha
lea
jmp
dec
mov
pushf
pusha
lea
jmp
shl
sar
or
mov
jmp
bt
clc
add
call
aad
call
mov
push
mov
push
movl
pushl
movw
lea
jmp
call
mov
call
pusha
mov
push
mov
jmp
pushf
lea
push
pushl
mov
push
pushl
ret
dec
mov
bt
test
pushf
cmp
add
pusha
call
call
pushf
mov
pushf
popl
movb
pushl
popl
push
pushf
push
lea
jmp
push
mov
pushf
call
pushf
call
and
push
mov
xor
mov
mov
pushf
stc
movb
sub
bt
shr
call
xor
push
bt
jmp
jmp
jmp
movw
mov
call
pushf
popl
mov
jmp
pushf
call
call
pushf
popl
movb
pusha
pushl
pushl
mov
movb
pushf
push
pushf
mov
push
pushf
movb
mov
pushf
push
lea
jmp
jmp
stc
pusha
cmp
sub
call
jmp
cmc
add
clc
mov
jmp
pusha
pushf
popl
pushf
pushl
pushl
popl
push
push
movl
lea
jmp
bt
sub
cmc
test
add
jae
clc
shl
pusha
mov
pushf
jmp
jmp
and
push
pushf
call
jmp
call
pushf
jmp
not
not
mov
movl
call
cwtl
mov
jmp
sub
shl
mov
bsr
dec
inc
btc
mov
call
std
mov
cld
jmp
call
movb
pushf
mov
pushf
pusha
lea
jmp
stc
stc
clc
not
clc
xor
cmp
mov
jmp
push
call
btc
add
mov
pusha
shr
add
movsbw
xor
add
sar
bsf
stc
mov
bt
shl
jnp
bt
pushf
test
shr
clc
or
cmp
jmp
mov
movl
pushl
lea
jmp
or
cmp
cmp
push
stc
xor
mov
inc
jmp
mov
pushf
popl
jmp
push
mov
mov
call
rdtsc
or
mov
btc
movzbw
jnp
pop
bswap
rcl
aaa
dec
pop
add
xadd
btc
mov
pop
lea
pop
push
rcl
btc
btr
mov
lea
lahf
mov
pushf
clc
xadd
mov
shl
movsbl
mov
movzbw
mov
movsbl
aam
cwtl
pushl
popf
push
movzbw
mov
pushl
push
movb
pushl
ret
push
push
push
mov
push
pushl
mov
push
mov
pusha
push
lea
jmp
test
shr
rdtsc
test
bt
sub
push
call
rol
clc
pushf
pushl
test
neg
call
jmp
push
call
call
rep
pushl
pusha
bts
movzbw
mov
clc
stc
std
mov
mov
call
dec
push
bt
ror
mov
stc
pushl
neg
push
push
test
jmp
pushl
push
mov
add
jmp
aas
movsbw
btr
mov
neg
daa
ror
mov
stc
pusha
test
pushf
sub
clc
stc
call
pushl
popl
movb
movb
mov
lea
jmp
pusha
call
call
mov
push
movb
lea
jmp
test
pushf
bt
sub
call
mov
call
pusha
mov
mov
mov
lea
jmp
cltd
mov
or
jmp
call
sub
mov
cmp
cmp
sub
cmp
pushl
cbtw
jmp
cmp
sub
pushf
movb
call
call
bt
test
neg
push
jmp
movb
call
mov
pushf
mov
lea
jmp
dec
lea
stc
btc
sar
not
shl
xor
neg
sbb
xor
shr
bsf
or
xadd
lea
shr
test
sub
jmp
neg
inc
push
mov
pusha
pushf
call
jmp
jmp
lea
cpuid
bt
jo
bt
sub
jmp
pushl
call
mov
mov
pushf
push
push
lea
jmp
push
sete
movzbw
mov
pushf
mov
jmp
jmp
pushf
mov
pushf
movl
pushf
call
pushf
popl
pushf
pushf
pushf
pushf
mov
jmp
rol
bts
sar
bswap
mov
sar
sar
rcr
mov
add
pusha
not
mov
pushf
pushf
mov
movw
push
mov
lea
jmp
pushl
mov
movb
pusha
push
pushf
lea
jmp
pushl
mov
movb
mov
call
stc
add
call
pushf
jmp
mov
push
call
mov
push
movl
call
rcr
aaa
ror
mov
pushf
shl
add
mov
bt
clc
cmc
sub
test
clc
bt
clc
shr
jmp
sar
sar
lea
pusha
cmc
bt
cmp
push
movw
pushl
movw
lea
ja
xadd
mov
cwtl
lea
neg
dec
sub
neg
shr
bt
shrd
lea
bsf
and
and
lea
shl
pusha
sub
lea
mov
mov
mov
jmp
mov
cmp
add
bt
shrd
pushl
pusha
push
mov
push
call
push
mov
pusha
lea
jmp
pushf
mov
mov
mov
mov
jmp
pusha
not
mov
jmp
movzbw
mov
jmp
bts
dec
daa
mov
cmp
bt
push
mov
jmp
clc
pushl
popf
mov
lea
jmp
neg
adc
sbb
mov
clc
mov
shl
mov
clc
jmp
shl
jmp
rcr
mov
rcr
setl
mov
sbb
call
cmp
negb
push
pop
cmc
out
pop
add
negb
iret
in
negb
xor
negb
xor
negb
pop
div
pop
test
negb
sbb
negb
iret
in
negb
inc
hlt
negb
sbb
negb
add
negb
arpl
negb
sbb
negb
mov
repnz
arpl
negb
test
negb
xor
negb
and
pop
or
negb
cltd
hlt
negb
sbb
negb
xchg
lock
clc
out
pop
movsl
out
negb
fsubp
negb
sbb
negb
into
fcomi
pop
add
negb
lods
fdiv
pop
sub
negb
je
negb
mov
call
negb
pop
div
pop
and
pop
and
pop
pop
into
fcomi
pop
mov
hlt
negb
arpl
negb
es
negb
add
negb
add
negb
xor
negb
push
pop
sbb
negb
pop
out
negb
pop
out
negb
pop
out
negb
pop
out
negb
movsl
out
negb
cmp
negb
test
negb
test
negb
cmp
negb
cmp
negb
cmp
negb
cmp
negb
lods
fdiv
pop
xor
negb
pop
div
pop
sbb
negb
sub
negb
cmc
out
pop
hlt
negb
push
pop
insb
fdivp
pop
movsl
out
negb
xor
negb
sub
negb
or
negb
out
pop
insb
fdivp
pop
push
call
negb
sbb
negb
mov
negb
add
negb
and
pop
fdivr
negb
iret
in
negb
sbb
negb
push
call
negb
je
negb
clc
out
pop
nop
out
negb
je
negb
cltd
hlt
negb
out
negb
inc
hlt
negb
test
negb
add
negb
sub
negb
lret
pop
pop
div
pop
test
negb
add
negb
movsl
out
negb
test
negb
add
negb
and
pop
clc
out
pop
fsubp
negb
iret
in
negb
lods
fdiv
pop
lret
pop
sbb
negb
pop
div
pop
cmp
negb
pop
out
negb
pop
out
negb
pop
out
negb
pop
out
negb
xor
negb
mov
jecxz
pop
cmp
negb
cmp
negb
cmp
negb
cmp
negb
push
stc
negb
cmp
negb
test
negb
arpl
negb
xchg
lock
cmp
negb
cmp
negb
lret
pop
and
pop
test
negb
xor
negb
sbb
negb
cmp
negb
sub
negb
sbb
negb
test
negb
xor
negb
into
fcomi
pop
add
negb
sbb
negb
insb
fdivp
pop
sbb
negb
xchg
lock
xor
negb
es
negb
and
pop
cmc
out
pop
or
negb
test
negb
je
negb
nop
out
negb
clc
out
pop
jo
negb
jo
negb
test
negb
add
negb
adc
negb
in
jecxz
pop
arpl
negb
cmp
negb
cmc
out
pop
push
pop
test
negb
jo
negb
inc
hlt
negb
fdivr
negb
adc
negb
test
negb
sbb
negb
cmp
negb
test
negb
pop
out
negb
pop
out
negb
pop
out
negb
pop
out
negb
xor
negb
nop
out
negb
add
negb
into
fcomi
pop
cmp
negb
cmp
negb
cmp
negb
cmp
negb
hlt
negb
test
negb
test
negb
in
jecxz
pop
out
negb
test
negb
xor
negb
push
pop
mov
fdivp
pop
sub
negb
hlt
negb
es
negb
pop
div
pop
insb
fdivp
pop
push
pop
sbb
negb
pop
div
pop
and
pop
add
negb
sbb
negb
xchg
lock
add
negb
sub
negb
mov
repnz
or
negb
fsubp
negb
test
negb
or
negb
out
pop
je
negb
es
negb
arpl
negb
or
negb
add
negb
xor
negb
xor
negb
je
negb
pop
or
negb
mov
icebp
negb
xchg
lock
xor
negb
pop
mov
out
pop
cmc
out
pop
cltd
hlt
negb
adc
negb
test
negb
pop
out
negb
pop
out
negb
pop
out
negb
pop
out
negb
sub
negb
xor
negb
sbb
negb
cmp
negb
cmp
negb
cmp
negb
call
push
pushf
mov
mov
call
movsbw
not
stc
bts
pushf
rol
inc
btr
shr
not
xor
xor
shr
xor
mov
mov
call
xor
call
movsbw
bswap
not
jmp
call
push
jmp
push
ror
add
jp
bts
sbb
ror
not
pushf
and
not
neg
mov
test
test
movb
sub
jmp
pusha
add
pushl
mov
pushf
pushl
pushl
push
lea
jmp
sbb
shl
rcr
movzww
cmc
call
push
pusha
call
mov
pushf
movw
lea
jmp
xor
bt
push
sub
clc
test
jmp
aas
or
pop
push
btc
mov
call
mov
pushf
pushl
movb
mov
divl
call
push
pushf
mov
movw
movb
movb
pushl
mov
pushf
movb
lea
jmp
shl
setge
shrd
setp
mov
push
pushf
add
call
mov
mov
lea
jmp
pushf
mov
pushf
popl
pushf
movl
pushf
mov
jmp
call
add
add
mov
pushf
pushf
pushf
push
lea
jmp
pushf
call
xor
mov
cmc
stc
jmp
ror
call
mov
pushf
push
lea
jmp
push
jmp
pushl
mov
call
jmp
mov
movb
movb
pushf
lea
jmp
call
and
pushf
inc
pushf
mov
test
stc
clc
sub
pusha
cmp
cmp
add
cmc
jmp
push
lea
jne
pushf
push
movw
pushl
mov
pushf
lea
jmp
pushf
movb
mov
pushf
pushf
popl
call
pushf
pushl
popl
push
push
movb
lea
jmp
lea
mov
shl
clc
mov
lea
not
mov
add
cmc
or
mov
cmp
sub
movsbw
neg
bswap
bsr
dec
movsbl
rol
lea
sub
shld
add
movzbl
clc
jmp
call
test
call
mov
pushl
jmp
xchg
clc
jmp
mov
pushf
pusha
pushf
popl
call
jmp
pushl
pushf
popl
pushf
mov
pushf
call
dec
pusha
aaa
pop
mov
pusha
pushf
push
add
call
xor
call
call
jmp
pushf
popl
pushf
push
mov
pushl
popl
push
push
pushl
pushf
lea
jmp
push
pushf
mov
call
cwtl
jmp
pusha
pusha
mov
movl
jmp
mov
mov
mov
movb
pushf
pushf
popl
pushf
pusha
push
movw
pushl
popl
push
push
pushf
lea
jmp
bt
sub
call
jmp
ror
push
clc
neg
movl
stc
clc
mov
lea
cmp
sub
clc
test
mov
cmc
sub
jmp
movb
mul
jmp
btr
aad
mov
mov
jmp
pushf
popl
mov
mov
jmp
bsr
neg
rcr
clc
mov
pushf
add
pusha
pusha
push
pushf
lea
jmp
mov
push
pushl
call
jmp
push
mov
mov
pushf
lea
jmp
pop
mov
setno
mov
mov
pusha
pushl
lea
jmp
jmp
jmp
clc
mov
mov
rcr
dec
mov
stc
cmp
call
not
jp
cwtl
mov
call
pushf
sub
movb
push
pushf
pushf
mov
mov
lea
jmp
cld
cld
call
pusha
push
call
call
shl
shl
neg
test
movzbl
cmp
sub
btc
bt
add
seto
mov
rol
sub
shr
cmp
pusha
neg
not
bsf
setbe
dec
stc
sub
push
dec
sub
btr
test
bswap
bsr
mov
cmc
add
jmp
movb
pushf
popl
pushf
movb
pushl
popl
push
mov
pushf
pusha
lea
jmp
mov
pusha
call
aam
shr
mov
jmp
pushf
cmc
sub
mov
push
mov
movb
pusha
lea
jmp
mov
bswap
movsbw
jmp
pushf
popl
pusha
mov
pushl
mov
pushf
movzbl
bsr
not
xchg
lea
lea
xchg
dec
movzbw
push
pusha
xchg
mov
bswap
bsf
mov
movzbw
mov
bsf
movsbw
dec
pushl
popl
jmp
mov
xadd
aas
sub
mov
dec
bswap
jmp
pop
mov
pusha
movzbw
mov
movb
push
push
lea
jmp
pushf
popl
jmp
call
not
mov
jmp
div
call
test
cmp
add
call
sub
jmp
pushf
pushf
mov
pushf
pushf
pushf
lea
jmp
rol
movzbw
xadd
rol
mov
bswap
cmp
pusha
mov
dec
sub
sub
sar
mov
jmp
pusha
mov
mov
pushf
jmp
call
push
mov
pushf
pusha
pushf
lea
jmp
pusha
sub
push
not
call
pushf
popl
call
pusha
push
pushf
mov
pushf
pushl
mov
lea
jmp
call
mov
pushf
pushl
lea
jmp
pushf
movw
pushl
popl
push
pushl
lea
jmp
not
aad
and
and
mov
cmp
bswap
jmp
pushf
call
call
sub
mov
push
mov
mov
mov
mov
mov
lea
jmp
call
pushf
pushf
pusha
dec
jmp
jmp
adc
sar
mov
shr
setle
mov
pusha
clc
add
pusha
push
pushf
call
xadd
shr
cmp
stc
mov
pusha
test
bt
mov
cmc
sub
stc
test
add
jns
stc
shr
call
pusha
jmp
seto
cmc
shr
mov
lea
or
btc
mov
call
cmp
mov
pushf
xchg
stc
push
jmp
sar
clc
mov
push
push
pusha
movw
add
push
call
mov
call
mov
mov
pushf
pushf
pushl
lea
jmp
mov
pushf
mov
pushf
pushf
lea
jmp
pushf
popl
pushf
jmp
mov
and
bswap
daa
sub
mov
rdtsc
mov
dec
pushf
cmp
mov
adc
setnp
bswap
sbb
mov
ror
setg
shl
pushl
popf
lahf
cwtl
lea
lea
mov
mov
movb
pushl
movw
pushl
ret
sub
call
bt
clc
sub
test
test
stc
test
and
pushf
mov
pushf
call
sub
mov
pushf
lea
je
push
dec
pushf
mov
mov
mov
push
push
pushf
lea
jmp
decl
jmp
jmp
jmp
mov
pushf
mov
movzbw
mov
jmp
mov
call
clc
stc
xor
clc
stc
pushf
not
jmp
bsr
push
movl
jmp
rol
jmp
jmp
mov
push
lea
jmp
rcl
jb
ror
mov
call
push
push
mov
pushf
mov
jmp
pushl
popl
movl
movb
mov
lea
jmp
pushf
push
pushl
xchg
movsbl
mov
lea
jle
lea
cld
jmp
mov
push
lea
jmp
clc
mov
movl
push
sub
call
call
call
bt
pusha
shr
pushf
jmp
pushf
pusha
lahf
mov
movb
pushf
mov
jmp
stc
not
rcr
and
lea
call
mov
lea
jbe
movsbw
pusha
mov
not
mov
jmp
mov
call
setne
push
push
call
pushl
popl
pusha
lea
jmp
pusha
mov
pushf
pushf
lea
jmp
call
push
not
push
push
pushf
push
not
jmp
movb
pushl
pushl
popl
push
lea
jmp
movb
dec
call
mov
jmp
pushf
mov
pusha
pushf
pushf
mov
pushl
push
call
mov
pushl
lea
jmp
jmp
movb
jmp
mov
push
not
call
cwtl
bts
clc
mov
add
setle
test
and
mov
jmp
mov
jmp
push
mov
pushf
pushf
popl
call
lea
mov
jmp
cmp
sub
bt
bt
jmp
mov
push
movb
lea
jmp
pusha
call
pushf
push
mov
pushl
mov
mov
pushf
pushf
pushf
mov
mov
push
pushf
lea
jmp
pusha
pusha
lea
jnp
mov
push
pusha
lea
jmp
call
mov
mov
pushf
push
pushf
lea
jmp
jmp
rol
add
cbtw
mov
bt
push
pushf
sub
bt
add
push
mov
pushf
popl
pushl
pushl
popl
pusha
movb
mov
lea
jmp
jmp
mov
jmp
push
pushf
popl
push
pushl
popl
pushl
movw
lea
jmp
push
pop
rcr
mov
mov
rcr
mov
test
cmc
stc
not
cmp
jmp
sub
mov
pushf
mov
push
mov
push
lea
jmp
pushl
popl
pushf
pushf
push
lea
jmp
dec
shl
mov
adc
push
dec
xor
rol
movb
call
jmp
and
sar
mov
call
