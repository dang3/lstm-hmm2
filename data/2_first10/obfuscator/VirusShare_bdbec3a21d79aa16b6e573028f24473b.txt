mov
push
pusha
fsubrs
and
andb
jns
fs
and
push
mov
ljmp
cmp
cs
ret
cmp
mov
or
data16
jmp
insb
pusha
push
sub
test
add
loope
das
sbb
das
or
add
lock
pop
jnp
xchg
jbe
outsl
lret
mov
scas
shr
stos
insl
push
ds
in
hlt
scas
cmpsl
repz
lods
insb
fsubp
jle
mov
ss
xlat
jne
push
mov
fcoms
jmp
or
xor
aad
cli
jg
sub
jnp
imul
xor
addr16
mov
stc
fadd
jl
rcl
xlat
sub
push
and
mov
shl
into
inc
outsl
inc
pop
adc
into
jbe
iret
inc
xor
xchg
pop
ss
push
mov
add
add
adc
jae
shlb
lret
aad
daa
arpl
inc
cmp
into
push
jmp
sarb
cwtl
xor
and
mov
shlb
out
addl
adc
sbb
fidivrs
movsl
mov
gs
pop
aaa
dec
pop
int
add
outsl
scas
into
les
or
mov
aaa
inc
pop
mov
cwtl
jne
lahf
push
test
mov
rcrl
inc
lcall
fs
jp
into
jge
lock
mov
imul
repnz
ss
loopne
neg
insl
shll
inc
nop
pop
mov
rcll
add
out
add
pop
bnd
les
cltd
icebp
pop
xor
leave
pop
stc
pop
cltd
or
in
pop
mov
pop
mov
adc
adc
outsl
lret
add
xchg
in
or
mov
jmp
mov
jns
in
or
call
negb
das
test
cmp
imul
mov
in
cmpsl
cmp
shrl
pop
add
repz
test
mov
in
in
inc
sub
lods
jno
outsb
imul
xchg
mov
xor
es
outsl
pop
rorb
add
fcoms
jnp
dec
gs
addb
cmpb
rcll
inc
add
test
push
mov
push
aam
add
jl
out
add
jmp
xchg
dec
imul
test
push
out
xor
jle
adc
aas
pop
xchg
mov
mov
add
sarl
lea
pop
add
mov
jp
push
push
cmpsb
push
sbb
sarb
xor
lock
movb
inc
jecxz
leave
adc
sbb
mov
ficoml
jl
mov
fisubrl
sbb
add
popl
hlt
cwtl
xor
fdivl
into
mov
xchg
xor
int3
fs
ljmp
jo
pop
cli
mov
mov
adc
mov
mov
cs
xor
mov
aas
sub
push
or
dec
sbb
or
jo
sub
adc
push
jl
ds
pop
dec
jmp
jno
pop
aad
push
aaa
ficoml
int3
lods
clc
movsb
inc
cmpsl
mov
sbb
sub
rclb
rolb
in
cmc
or
aam
ret
and
icebp
mov
mov
out
ds
lea
fcompl
and
andl
clc
mov
xchg
rorb
loop
data16
call
mov
adc
pop
fimull
lahf
mov
rorl
sahf
mov
sbb
sub
add
mov
test
jne
xchg
xor
inc
mov
in
and
loopne
sub
xlat
lahf
and
mov
out
ret
loop
arpl
arpl
push
pop
enter
into
pop
inc
fdivrs
mov
test
lret
subl
push
mov
xchg
lahf
jle
mov
mov
inc
addr16
cmpsl
jecxz
fadds
sub
push
in
pop
sub
jnp
dec
xchg
sbb
lock
clc
bound
mov
mov
test
pop
xor
cld
jl
add
arpl
rcrb
xor
mov
int3
cmp
in
hlt
inc
add
std
dec
stos
arpl
adc
inc
int
xchg
inc
mov
nop
dec
mov
mov
subl
stc
scas
mov
jne
rcll
loope
iret
fcomip
push
testb
lret
popf
imul
nop
add
out
loopne
pop
sbb
popa
mov
sub
adc
sti
sub
sbb
mov
jge
jbe
movsb
mov
xchg
push
add
mov
jle
jne
lods
out
outsl
int
call
loopne
int3
test
dec
pop
adc
fmull
mov
add
mov
icebp
mov
adc
jle
in
fs
dec
subb
inc
xadd
repnz
xchg
xchg
add
fiadds
sub
inc
lahf
dec
or
cwtl
and
pop
add
xchg
push
outsl
inc
jne
inc
cmp
std
lock
push
lds
xchg
fxch
orb
imul
test
pop
fisttpll
dec
popf
dec
and
dec
push
mov
je
daa
sbb
sti
lods
push
and
and
adc
fldpi
sub
lahf
sub
fisubrl
sub
mull
incb
xor
fwait
les
xchg
andl
sub
shlb
std
cmp
fninit
rclb
and
stc
js
sarb
shr
shll
aaa
and
popa
push
dec
dec
pushl
sbbb
mov
mov
mov
mov
in
sbb
dec
mov
jle
repnz
mov
inc
adc
leave
mov
xor
jg,pn
out
pop
mov
add
out
pop
loope
push
xchg
add
jbe
sbb
les
push
loopne
inc
mov
mov
pusha
repnz
mov
pop
push
pop
and
test
sti
loope
inc
xor
adc
mov
lods
shrl
subb
lcall
mov
bound
fisubrs
int3
pop
cmp
xor
ret
ljmp
inc
dec
ljmp
rcll
pusha
push
arpl
imul
imul
es
shll
sti
lock
and
adc
pop
pop
loope
jo
mov
aam
sbb
clc
dec
adc
jns
sarl
sub
in
insl
out
out
mov
or
and
pop
cld
roll
cmp
xor
rcrb
push
add
push
ja
add
pop
test
push
push
jbe
or
pop
pop
push
push
test
pop
pop
clc
push
push
push
push
lea
push
push
push
push
jne
push
and
pop
jle
push
mov
pop
push
add
shl
test
mov
push
test
pop
jns
push
push
add
pop
cld
jp
lea
push
jo
add
pop
or
stc
xor
cld
cmc
cld
mov
xchg
jns
push
jge
shl
pop
add
ja
push
push
neg
neg
pop
pop
sub
test
js
jb
js
or
jns
jns
sub
push
call
fidivrl
ljmp
shr
and
pushf
push
in
jne
outsl
imul
dec
add
pop
call
loop
jecxz
les
sahf
cmp
jo
pushf
pop
and
mov
fbstp
mov
push
inc
push
push
mov
pop
pop
test
cmc
pop
push
mov
pop
push
push
add
pop
pop
loop
jecxz
xchg
ret
jnp
jae
icebp
jmp
test
rclb
adc
popf
jb
adc
int
inc
push
pop
push
add
mov
pop
or
xchg
test
push
jg
xor
pop
inc
dec
mov
xchg
stc
push
movzbl
push
push
mov
pop
pop
add
and
push
sub
pop
cmc
test
push
push
add
pop
pop
or
test
loop
pop
jbe
test
test
xor
cmp
nop
add
jmp
pop
jmp
pop
jae
pop
sbb
dec
push
std
inc
int3
sub
and
adc
js
add
mov
or
dec
pop
shrb
in
xchg
xchg
jle
and
mov
jo
test
test
dec
inc
test
mov
shr
test
jne
jmp
ror
push
add
cmp
stc
nop
push
add
pop
jle
jne
test
xor
ja
jne
jne
mov
push
add
stc
cmc
mov
inc
inc
inc
inc
push
call
mov
pop
and
adc
stc
or
mov
in
stc
bound
cmp
gs
fisttpl
lret
mov
cmpl
jmp
xchg
movsb
add
out
call
jg
push
dec
pop
pop
pop
cmc
dec
jne
push
call
bts
xchg
fdivl
sahf
cmc
imull
pop
fwait
xchg
mov
lret
inc
mov
jno
adc
jnp
int
mov
jnp
inc
shrl
dec
xchg
outsb
mov
ljmp
mov
pop
push
add
pop
push
call
fnstenv
push
stos
mov
mov
cmp
push
into
bound
jb
lcall
aas
jl
lds
jb
mov
hlt
lds
outsb
sbb
push
fwait
dec
sub
das
push
ds
jge
outsb
cmp
jno
jne
cmpsl
lea
inc
movsl
popa
aaa
aad
cmp
mov
scas
imul
in
iret
push
push
mov
jns
pop
mov
fs
shufps
xchg
and
shlb
push
or
mov
imul
pop
aam
or
pop
imul
sbb
push
xchg
sbb
push
shr
int
jno
fs
xchg
push
xor
add
sbb
out
adc
push
mov
js
jle
movsb
scas
inc
inc
sbbl
sahf
lods
ljmp
adc
mov
dec
mov
and
testl
push
lcall
lods
cmp
push
scas
push
sub
pop
das
inc
rcrb
dec
stc
in
mov
mov
cmp
pop
push
lea
pop
add
adc
inc
sub
mov
test
data16
popl
push
jmp
pavgw
jbe
jbe
dec
mov
and
push
push
push
ror
pop
pop
pop
push
lea
pop
or
dec
inc
es
dec
adc
cmp
dec
mov
lods
adc
imul
jnp
test
mov
xchg
push
xlat
cmpsl
sbb
mov
push
xor
fsubrs
popf
jecxz
lret
cwtl
scas
into
leave
imul
xor
add
fistpll
ret
int
jo
add
xor
adc
or
lea
out
xchg
outsb
ret
shrl
or
popf
lods
in
cmp
movsb
dec
decb
push
xor
fistpl
fstpt
iret
flds
mov
mov
lock
int3
xlat
pop
xchg
jmp
sub
shlb
insb
sbb
loopne
in
imulb
sbb
pop
out
repz
jae
roll
inc
jnp
inc
jo
ljmp
push
lods
out
sub
mov
jnp
mov
push
sub
adc
fwait
out
push
inc
mov
or
and
xor
cmp
sbb
mov
in
xor
pop
mov
shll
jge
insl
jmp
enter
cmp
loopne
aam
cmpsl
mov
mov
or
adc
mov
xchg
jl
or
lahf
ja
mov
data16
add
fs
aaa
xor
adc
orl
pop
ljmp
cmp
xchg
into
xchg
aad
in
mov
xor
adc
pushf
ret
mov
test
iret
mov
mov
in
and
fiaddl
mov
sahf
mov
jl
jbe
arpl
mov
cltd
sub
stc
loopne
push
add
mov
sbbb
je
push
jl
jle
je
das
ljmp
cmp
shrb
cmp
xchg
orb
lret
inc
out
jmp
inc
mov
xchg
dec
addr16
loop
test
and
cmpsb
or
lahf
mov
mov
xchg
pop
and
lcall
push
xor
pop
or
jb
sub
loopne
or
mov
decb
mov
div
jle
push
stc
in
fidivl
incb
adc
inc
mov
and
add
add
pop
mov
fisttpl
pop
in
mov
cld
and
int
popl
mov
and
loope
loopne
test
push
test
add
daa
push
jo
dec
mov
sarl
into
add
mov
movsl
out
dec
push
aas
mov
or
xor
pop
int
xchg
add
loope
pop
outsl
sarl
jne
mov
mov
nop
cs
inc
inc
inc
push
dec
insl
iret
ret
xchg
ja
push
repnz
sbb
or
pop
popa
add
xor
inc
mov
inc
and
cmp
cmp
mov
sub
xchg
popa
arpl
mov
push
jle
jge
and
sti
leave
xchg
adcb
das
fsubs
adc
sbb
sub
fs
popa
mov
outsl
sbb
loop
inc
mov
mov
dec
jns
cmp
mov
cli
insb
daa
or
jno
out
pop
addr16
inc
es
cmp
testb
cld
xlat
stos
sub
ja
nopl
add
fnstenv
sub
test
mov
fsubr
or
in
cmp
call
iret
sbb
insl
in
sbb
add
pop
dec
xchg
enter
inc
jmp
mov
nop
jmp
lds
or
mov
inc
lods
xor
xor
in
adc
iret
mov
adc
mov
fdivrs
xor
mov
loop
sub
inc
adc
lahf
mov
xor
inc
mov
mov
nop
adc
fwait
cmp
pop
out
cltd
icebp
adc
cmp
dec
les
sbb
adc
arpl
push
pop
cmpsl
pop
push
out
ss
into
jno
adc
sahf
dec
mov
lcall
js
xor
fs
jbe
xchg
stos
int3
xchg
add
roll
loope
ja
insl
and
sarb
push
pop
and
and
enter
leave
push
lret
in
clc
xchg
push
sbb
add
clc
mov
shll
lret
lcall
ja
lods
adc
mov
test
jmp
xor
adc
mov
pop
pop
aad
or
loope
sbb
cmp
cmpsb
leave
pop
sbb
fists
inc
les
out
test
repnz
lcall
ss
mov
into
test
loopne
jg
and
sbb
xor
sbb
pop
rcrl
loope
cmpsl
das
mov
push
jno
and
pusha
sar
out
jg
fs
rcl
jae
lds
subb
jp
and
adc
jle
dec
pop
or
es
xchg
add
jne
and
stc
or
in
xchg
lret
sub
dec
and
fidivs
mov
sub
decl
cli
stc
pop
dec
jne
outsl
mov
or
push
ficoms
cmp
inc
pop
outsl
das
inc
je
imul
pop
daa
adc
jecxz
dec
leave
sbb
ds
lock
mov
fcomip
mov
lahf
sub
cmp
mov
mov
inc
pop
imul
inc
popa
iret
jmp
inc
pop
std
mov
in
popa
mov
repz
ret
inc
outsb
xchg
sti
push
push
pop
mov
jl
dec
iret
js
pop
lods
and
sub
push
lods
mov
sbb
pop
lods
mov
cmp
xor
sbbl
push
ljmp
bound
int
shll
pop
push
int
cld
daa
xchg
inc
sub
decb
mov
mov
dec
or
xor
jle
mov
cltd
pop
not
mov
out
push
daa
inc
xchg
and
call
xchg
inc
pop
mov
pop
adc
out
and
inc
jno
addr16
mov
cmp
in
and
pushf
adc
add
push
scas
sub
les
push
xor
mov
adc
aad
mov
gs
add
add
adc
iret
jns
hlt
push
scas
cmp
jnp
pop
mov
lock
out
sbb
adc
sub
pop
xor
add
fs
mov
lock
dec
aam
mov
xchg
out
movsl
dec
sbb
lds
add
jo
std
rcrl
push
xor
pop
or
std
xchg
icebp
xchg
notl
mov
in
mov
mov
enter
sub
add
ljmp
xchg
sahf
fidivs
cli
imul
push
pop
xchg
or
pop
pop
cmp
ffreep
cmp
inc
mov
cltd
out
xchg
sti
cmc
inc
es
jl
push
loopne
shll
scas
xchg
pop
sbb
ret
shll
push
aam
cmp
scas
bound
push
je
adc
xchg
pop
mov
out
inc
inc
daa
mov
popa
jmp
pop
fadds
iret
insl
nop
xchg
jnp
inc
lods
jb
jae
fcmovu
mov
and
add
jmp
imul
jbe
test
adc
lds
fcom
insb
testl
dec
dec
out
jle
push
and
lods
or
js
inc
push
xchg
andb
mov
cs
ret
mov
xor
aaa
pusha
lret
xchg
and
out
or
pop
add
push
push
cmc
adc
popf
movsb
jnp
enter
out
mull
int3
cmc
sbb
inc
sbb
jp
push
mov
add
jns
push
sti
ljmp
mov
and
mov
adc
pusha
cmp
loop
xchg
add
cmovp
jbe
cmp
mov
pop
lds
adc
ljmp
sbb
fwait
in
addr16
outsb
repz
mov
inc
push
mov
arpl
cmc
icebp
jmp
enter
ret
lahf
aaa
ja
mov
adc
sbb
push
out
jge
inc
div
enter
pop
mov
mov
xor
xor
xchg
shll
cwtl
stos
fcmovb
faddl
sbb
in
mov
repnz
ficompl
xor
rclb
push
mov
dec
pop
popf
cmp
xor
push
aad
bound
mov
and
ds
ss
arpl
mov
inc
mov
sub
call
adc
std
adc
jmp
xlat
out
sub
jmp
mov
jo
push
int
pop
lret
sub
addr16
jmp
mov
fisttpl
es
adc
dec
mov
mov
in
push
jb
addb
mov
xchg
mov
push
sbb
test
pop
enter
daa
test
lret
movsb
inc
cwtl
test
inc
inc
pop
int
jne
and
fnstsw
push
jne
push
xchg
imul
sub
rcrl
xor
stos
sti
fisubs
subb
cmp
aaa
jg
imul
cld
or
sbb
pop
mov
add
rol
adc
jl
addl
mov
xchg
movsb
add
mov
stc
mov
out
xor
push
and
out
shlb
adc
scas
out
mov
adc
xchg
jo
push
lds
int3
lcall
je
jle
push
jae
mov
and
mov
test
xchg
xchg
int
pushf
sub
out
test
dec
bound
cmp
idivb
cli
mov
push
sub
add
pop
push
jl
aas
scas
sahf
mov
cmpsb
cmpsb
movsb
std
mov
adcb
jle
sub
xchg
sbb
add
sbb
outsl
imul
ss
lods
int3
call
inc
sub
cmp
push
push
icebp
cmc
push
push
int
xlat
pop
test
out
clc
sbb
addr16
cmp
push
or
incl
pop
mov
xor
add
scas
in
gs
daa
insb
or
mov
ret
addr16
fildll
aam
sbb
cmpsl
jo
adc
outsb
divl
and
sbb
stos
adc
rcrl
imul
lret
or
test
pop
lods
xor
sahf
cli
cmp
adc
fs
mov
call
es
addb
repnz
movsb
fisttpl
push
or
cwtl
popa
add
xor
scas
leave
sub
cmpsl
in
xchg
loope
mov
xor
push
dec
jg
popa
and
sub
xchg
pop
mov
inc
and
sbb
mov
sub
es
xchg
in
sub
jl
popa
or
xchg
xchg
xchg
mov
jbe
cmp
inc
xchg
dec
int
insl
adc
rolb
and
or
std
loopne
aaa
or
cli
adc
dec
add
sbb
clc
sarl
fs
cmp
ljmp
mov
xor
cmp
shll
inc
pusha
pop
xor
loope
inc
sti
xlat
movsl
mov
mov
daa
fildl
jge
mov
push
ja
mov
add
inc
push
in
cli
jbe
or
lret
fisttpll
ret
bound
mov
in
pop
and
rorb
les
add
mov
das
ss
jns
dec
jmp
cmc
pop
cmp
inc
shr
fbld
fxch
aad
ret
jmp
dec
xchg
out
in
xchg
ljmp
or
sub
jnp
fsts
or
mov
inc
cmp
pop
jmp
fdivrp
shlb
loope
push
outsb
ds
ds
in
es
push
pop
nop
loopne
fmulp
sbb
loope
out
add
sarl
mov
mov
add
ficoml
add
ret
in
cltd
loope
std
mov
dec
adc
add
pop
adc
mov
lahf
leave
js
flds
xchg
mov
js
aas
rorl
popa
lods
pop
cltd
stos
loop
ds
sub
xorb
jne
enter
int
sbb
mov
pop
jecxz
js
push
jno,pn
or
xchg
cmp
pushf
xchg
and
adc
jne
jne
test
adc
test
dec
adc
in
inc
test
mov
daa
dec
jb
pop
adc
test
arpl
push
pop
rorl
inc
push
cwtl
mov
pop
pop
je
sub
fmul
adc
sbb
pop
test
mov
stos
jecxz
mov
xchg
mov
les
push
lret
enter
lcall
into
cmp
cs
pusha
stos
and
add
mov
call
xor
mov
dec
sbb
dec
xchg
sub
sbb
jecxz
pop
movb
adc
adc
scas
push
lcall
push
fisubl
rcrb
subb
dec
jmp
sbb
out
and
adc
addr16
pop
test
outsb
mov
fldt
pop
das
aad
jl
jns
push
popa
dec
mov
stc
std
ja
or
mov
fadds
sbb
mov
and
loop
pop
add
add
jmp
je
inc
add
nop
arpl
fimuls
gs
movsb
lock
add
cmp
pop
inc
mov
repnz
adc
dec
fcmove
sahf
and
fs
cmp
inc
dec
push
ds
xor
add
das
pop
pop
out
ret
xor
imull
mov
pop
xchg
jge
sbbl
aas
add
dec
add
popf
idivl
pop
or
jecxz
push
popa
mov
lds
push
and
or
cltd
pop
mov
adcl
xchg
vpmulhuw
sub
js
dec
fiaddl
es
lock
pop
xchg
lods
jno
push
jnp
jle
xchg
or
andl
into
add
xchg
adc
xchg
mov
fisubrl
lahf
scas
pop
jmp
inc
mov
mov
cwtl
mov
mov
daa
dec
orl
loope
add
mov
sub
in
push
adc
cmp
jno
inc
adc
out
sub
and
lea
ja
sbb
cmc
stos
fldcw
mov
add
pop
mov
cmp
push
fcmovu
jb
jno
cwtl
jo
jp
xor
mov
rcll
pop
cmpsl
shl
cs
imul
inc
stos
sub
les
pop
sbb
mov
lea
pop
inc
mov
lods
out
xchg
mov
jecxz
outsl
xchg
lock
addb
cld
nop
sub
pop
lahf
adc
mov
test
pop
movsb
ds
shr
push
fisttpll
int
mov
push
test
jmp
outsl
cmpsl
mov
sbb
mov
fwait
les
pop
out
sbb
int
mov
movsl
push
js
imul
stc
lods
cmpsl
jb
ds
jg
movsl
test
xor
jl
lds
enter
adc
sub
dec
std
cmp
add
sbb
dec
pop
cmp
lods
add
movsl
loopne
pop
sbbb
mov
jno
ret
sub
aad
mov
int
and
xor
shrb
aam
xchg
outsl
jnp
adcl
jmp
dec
push
sbb
adc
repnz
fildl
push
hlt
inc
inc
rorb
dec
or
cmp
cmp
enter
and
inc
call
or
pusha
fnstcw
jmp
lods
sub
dec
fdivr
push
pop
bound
outsl
int
dec
push
pusha
mov
sbb
sub
dec
std
sub
or
jb
pop
std
mov
adc
loop
pop
in
nop
cltd
dec
popf
adc
movsl
xchg
popl
lea
repz
gs
aad
sub
jmp
mov
xchg
pop
xchg
mov
cmp
lock
cmpsl
imul
xor
popa
mov
bnd
fldenv
push
ss
ds
sbb
out
adc
mov
mov
push
and
mov
in
cli
inc
push
leave
add
dec
mov
aam
out
and
mov
arpl
fsubl
decl
jns
mov
sti
add
jmp
js
xor
rclb
pop
mov
mov
xchg
push
sarb
sbb
push
into
jne
sbb
mov
aad
insl
inc
int3
mov
sub
and
push
sub
mov
movsb
add
cld
mov
ret
adc
aam
cmp
hlt
cmpsb
jns
aad
xchg
sbb
push
or
push
xor
sbb
dec
cld
ret
ljmp
xor
cld
sbb
cmp
or
in
add
dec
int3
or
pop
mov
jb
stc
in
sub
sbb
jle
sub
inc
scas
je
jnp
les
loopne
mov
cli
popf
and
dec
inc
mov
and
lods
and
push
jmp
aad
out
adc
rorb
pop
push
inc
movsb
push
ret
or
jge
lcall
test
fwait
jbe
mov
int3
popa
mov
cmpsl
hlt
and
and
or
cmp
jle
mov
das
pop
imul
pop
pop
add
mov
out
pop
imul
inc
and
loopne
lret
loop
sbb
mov
rcl
loope
nop
sbb
inc
push
push
pop
xor
dec
sbb
ret
sti
out
jge
mov
push
sbb
aad
das
movsb
xor
push
mov
aas
popa
or
push
sub
test
adc
jmp
movsl
cmp
xor
xchg
je
mov
movsl
jb
js
mov
xchg
out
inc
insl
pop
rclb
shrb
cmp
incb
aas
pop
fisubl
in
sti
mov
es
outsb
pop
mov
sbb
clc
out
lock
subl
fiadds
xchg
mov
mov
lds
jb
mul
adc
cli
insl
sbb
push
xchg
jne
outsb
lods
mov
cmp
sbb
adc
mov
mov
xchg
test
clc
movl
push
adc
adc
andl
orb
dec
pop
mov
in
adc
mov
ja
jae
cmpsb
xchg
jmp
cmp
jmp
fs
sbb
in
lock
sub
les
mov
inc
test
push
sub
daa
popf
std
aad
loope
in
fildll
sbb
mov
dec
cwtl
cwtl
sub
sbb
test
fimuls
mov
mov
push
jno
leave
xchg
shll
lds
rolb
mov
pop
fst
sbbb
enter
loop
and
mov
popa
xor
mov
clc
hlt
fwait
cmp
sbb
leave
xlat
push
or
xchg
mov
mov
dec
lods
sub
mov
addl
sbbl
sub
adc
sbb
mov
mov
mov
outsl
inc
cltd
fadds
stos
dec
scas
fisubs
cmc
xchg
and
inc
adc
or
in
fstl
push
push
fistl
mov
mov
arpl
ja
inc
or
cld
iret
faddl
cmc
sbb
cmc
sbb
lahf
frstor
test
jmp
push
sti
adc
bswap
mov
ficoms
mov
sub
insb
lcall
or
adc
inc
rcll
bound
out
insl
dec
jmp
ret
sub
mov
movsl
inc
mov
add
daa
jns
inc
mov
lods
sbb
and
bound
jns
inc
test
hlt
adc
scas
pop
jnp
adc
inc
xlat
or
ja
enter
mov
mov
lods
xchg
mov
xchg
imul
in
pop
repz
jg
sub
insb
repz
jge
popf
les
sbb
test
call
sarl
mov
out
inc
xor
jg
push
mov
sbb
cld
jmp
in
stc
jp
pop
add
lcall
mov
xchg
movl
or
lods
rcl
sbb
jb
es
or
cmpsb
ror
sub
mov
dec
loope
jmp
sarl
pop
sbb
das
lret
mov
nop
and
mov
ret
sbb
jle
cmp
mov
fstpl
xchg
int3
popa
mov
jo
and
cmp
out
sbb
push
mov
add
xchg
movsb
mov
test
pop
inc
fisttps
xchg
mov
sahf
pop
outsl
sub
xor
push
dec
mov
ffree
jb
paddsw
mov
mov
stos
cli
pop
inc
ja
pop
jnp
ljmp
jb
push
out
inc
cmp
jge
jno
inc
sbb
movsb
xchg
stc
mov
sbb
hlt
dec
cmpsb
lcall
outsl
mov
pop
mov
sub
or
and
daa
cmp
fistps
sti
lret
cs
pusha
pop
xchg
push
add
sbbl
lret
notl
and
fs
shlb
and
and
out
inc
test
jle
orl
aad
js
sbb
sbb
and
jmp
inc
lods
stc
dec
stc
cmpsl
inc
enter
inc
ljmp
adc
cld
push
dec
sahf
dec
hlt
mov
ffree
jae
sub
or
add
fs
xorb
mov
cmp
cmc
es
mov
push
mov
mov
mov
jb
stos
jg
dec
xchg
dec
imul
std
and
push
cld
mov
hlt
in
xchg
push
lock
aas
lcall
pop
jge
imul
dec
imul
lods
shlb
mov
inc
gs
jns
push
xor
je
and
inc
loope
sbb
push
repz
ds
movsb
jnp
andb
scas
or
out
out
pop
mov
or
mov
iret
insb
pop
jmp
mov
mov
out
ds
push
mov
out
dec
les
test
cwtl
pop
ss
dec
jecxz
mov
mov
cwtl
aas
jo
stc
scas
stos
xchg
pop
cmpsb
and
mov
pop
or
mov
sub
cmp
fisubl
cltd
push
sbb
adc
dec
test
xchg
fucompp
add
xchg
jnp
push
bound
jnp
sbb
cmp
xor
adc
stc
hlt
aaa
cltd
xchg
mov
test
test
mov
cmp
jb
or
andb
xor
jno
add
mov
or
push
xor
popf
imul
out
jbe
sbb
icebp
and
cmp
mov
aam
sbb
adc
cmpsl
insb
mov
shlb
dec
int
pop
dec
arpl
scas
push
mov
popf
cmpsl
fdivr
je
leave
cmp
rep
or
sub
pusha
mov
sbb
jbe
adc
inc
sbb
mov
push
pop
cmp
pop
ljmp
into
pop
dec
icebp
repz
xchg
into
jg
dec
pop
jbe
in
shlb
dec
sbb
mov
pop
sub
xchg
mov
push
andl
rorl
lret
mov
int3
out
jmp
sti
xor
insl
xlat
xchg
dec
fildl
jge
mov
je
inc
xor
sbb
cmp
adc
in
aad
xor
inc
xchg
sbb
push
cmp
mov
mov
jmp
mov
cmp
int
jge
xchg
or
xchg
addb
js
inc
or
xchg
out
rep
repz
cmpb
out
cmp
sbb
mov
fisubrs
mov
in
dec
push
aaa
xchg
sub
mov
push
mov
shlb
cld
cmp
jge
inc
xchg
xor
mov
daa
cmp
ss
sub
push
ss
adc
mov
dec
into
xor
sub
lock
fwait
cltd
add
aad
jmp
adc
icebp
xor
pop
repnz
addr16
pop
sbb
pop
xor
cmp
dec
or
imul
push
xchg
loope
mov
xor
add
movsl
cmpsb
movsb
imul
push
test
pop
pushf
dec
inc
cmpsb
data16
add
adc
rol
movsl
xchg
ja
arpl
push
scas
lea
and
test
pop
stc
jg
cld
cmc
bound
outsb
pushf
mov
mov
loope
mov
cmp
jle
lret
shl
mov
flds
lcall
jle
xor
mov
cmc
sti
fptan
push
stos
lret
jne
scas
movb
fmull
cmp
int3
sarl
mov
sub
pushf
mov
add
call
dec
cmp
mov
lods
dec
push
lea
stc
mov
aam
xchg
fsubl
jae
mov
ss
push
fmull
adc
cmp
js
push
rcrl
testl
and
jmp
fcompl
mulb
mov
push
jp
xchg
lcall
pop
sub
call
mov
mov
inc
into
pop
divb
aas
sbb
cld
imul
aad
notl
in
stos
and
jge
xchg
mov
dec
ret
call
in
ljmp
fbld
daa
bound
pop
cmpsl
es
jg
and
lea
lock
push
ljmp
mov
iret
popa
jae
clc
mov
setp
iret
fimuls
loope
xor
cmp
lahf
pushf
mov
pop
scas
xchg
sahf
mov
aaa
adc
add
xlat
loop
sub
mov
pop
xchg
cmp
insb
cmc
and
dec
std
mov
sub
cli
xor
pop
int3
ss
fidivrs
sbb
and
mov
movsl
and
dec
cs
mov
in
mov
lds
add
scas
pop
xchg
push
inc
pop
sbb
fs
test
mov
push
div
sbb
enter
filds
xor
js
lods
jne
negb
movb
cmc
cmp
sub
pop
imul
mov
push
popa
subb
xchg
add
idivl
das
and
das
cmp
jbe
mov
in
lds
inc
lahf
aaa
push
cmp
pop
mov
movsb
push
pop
ss
ficoml
enter
mov
cmp
dec
cmp
dec
cwtl
lret
aad
and
orps
jge
add
sbb
xchg
mov
adc
cmp
fwait
mov
in
mov
movb
fs
inc
outsb
xchg
adc
jmp
lods
aas
dec
inc
pop
and
test
pop
ja
sbb
test
loop
test
push
dec
inc
fstpl
addl
push
jg
imul
dec
mov
xchg
jbe
jl
jne
xchg
cwtl
scas
mov
dec
jmp
push
test
test
jae
sub
and
roll
mov
push
cli
fwait
cli
mov
dec
arpl
and
mov
jae
stos
das
sub
scas
push
or
cmp
jmp
xlat
sub
cmpsb
push
or
je
mov
push
cmp
push
dec
or
pusha
push
test
lcall
dec
cld
lods
iret
sbb
jb
jno
fwait
stos
mov
mov
and
shll
dec
inc
test
ret
cmpsl
sbb
xchg
cld
inc
shll
sbb
data16
adc
setl
dec
xor
jbe
cwtl
push
cmp
movd
clc
loop
aad
mov
xor
ljmp
dec
dec
dec
sti
fxch
sub
movsb
xchg
js
shl
inc
loope
jecxz
flds
pop
xchg
lds
cmp
iret
mov
hlt
jns
pop
adc
inc
out
sti
xchg
inc
negl
in
push
enter
sub
adc
inc
repz
imul
inc
aam
pop
add
mov
mov
mov
push
push
and
or
adc
and
mov
in
dec
sub
pop
loop
push
stc
and
sub
scas
pushf
dec
mov
xlat
shrb
int3
push
inc
push
scas
push
push
call
loope
pushf
mov
push
mov
and
mov
xchg
cltd
xchg
mov
out
pop
pop
dec
shlb
xor
adc
incl
mov
lcall
xchg
or
cmpsb
add
int3
sti
std
movsb
stc
xor
fwait
call
xchg
mov
icebp
cmp
scas
jg
ljmp
cmp
pop
inc
xchg
lods
pop
shrb
pop
fs
sti
ds
in
fsubrs
adc
sti
loop
mov
lods
test
push
mov
fldcw
enter
addr16
add
test
xorb
add
int
fwait
loope
pop
adc
xchg
repnz
subb
cmp
shrd
in
jecxz
add
popf
js
stc
cmpsb
int
js
shll
add
xor
mov
mov
pop
insl
movsb
pop
mov
shll
dec
in
adc
cmp
xor
ds
mov
or
fcmovb
out
inc
inc
test
popf
jnp
loopne
iret
xchg
ja
out
pop
inc
jmp
lret
xchg
sbbb
addr16
lods
test
insb
bound
fldt
adc
addr16
cmpsl
jl
subb
lret
lcall
mov
push
shll
cwtl
lds
xchg
cs
pop
mov
cmp
bswap
sti
leave
sbb
andb
les
xchg
aaa
cwtl
sub
subb
xor
inc
inc
cwtl
sub
imul
jg
xor
pop
in
cmp
or
cmp
sbb
fiaddl
xchg
push
xchg
loopne
xor
pushw
into
in
repnz
clc
or
xchg
mov
cmp
call
sbb
out
sub
pop
jno
lock
cmp
fcmovnb
cmc
mov
sub
inc
sub
jecxz
aad
push
jne
cs
pushf
popf
das
dec
lcall
lret
cmpsb
or
gs
sarb
mov
jg
fiaddl
push
je
push
and
mov
icebp
add
inc
mulb
mov
fs
and
add
out
outsl
idivb
cwtl
in
icebp
jb
push
test
ja
aas
sbb
push
and
shlb
cwtl
fcmovu
je
fstpl
xor
sub
ficomps
push
sub
cld
ds
into
addr16
stos
addr16
mov
std
mov
push
fdivs
test
sbb
sbb
fcmovu
push
ja
pop
imul
es
std
or
push
scas
jmp
loop
gs
or
push
fucom
xor
cwtl
sbb
cli
jp
adc
in
mov
xchg
mov
mov
dec
and
jb
cmp
mov
jns
jb
stos
push
push
add
loopne
hlt
sbb
leave
ljmp
negl
addr16
and
sub
jne
xchg
les
pop
addr16
idivb
insl
outsl
test
jne
xor
mov
pusha
cmpsb
mov
sub
and
pop
xchg
imul
sub
stos
mov
dec
and
daa
cmp
cs
stos
std
hlt
test
cmpsb
loope
cmc
inc
mov
cmpsl
pop
pop
and
lret
out
stos
sub
cmp
test
mov
inc
xor
enter
outsb
cmpsl
lock
frstor
push
cmpsb
inc
fmuls
cld
dec
xorl
les
xchg
dec
testl
sub
mov
insl
push
cwtl
outsl
cmp
jns
je
js
stos
inc
fcoms
xchg
or
cmp
loopne
fs
addr16
subb
cli
lcall
mov
xchg
add
jmp
enter
adc
sub
pop
loope
or
dec
or
dec
movsl
dec
out
pop
leave
mov
js
mov
jmp
aad
xorb
fldenv
xlat
movsb
ds
xchg
sub
xor
push
test
int3
shll
inc
pop
push
mov
enter
jbe
dec
jmp
bound
lret
dec
mov
or
jae
in
mov
jp
push
pop
pop
xchg
scas
enter
pop
xor
adc
fcoms
inc
es
mov
mov
sub
pop
clc
lods
push
int3
movl
and
into
and
inc
jo
out
aas
imul
push
xchg
andl
adc
push
insb
mov
push
js
in
pop
loopne
mov
fdivp
dec
cli
or
dec
xchg
fwait
ja
xorl
xor
shlb
cmp
sahf
dec
in
xchg
xchg
mov
sbb
fbld
sbb
stos
aam
mov
ds
mov
inc
xor
jg
pushf
push
xchg
cmp
pusha
fidivs
stos
fstpl
push
inc
mov
outsl
aad
shll
or
inc
pop
sti
dec
std
jg
cwtl
hlt
loope
pop
jl
scas
jne
into
sti
ficomps
and
push
cmpb
aad
mov
stc
sbb
jp
ljmp
lds
xchg
sbb
movsb
push
in
adc
mov
push
loope
jle
mov
lods
arpl
fucomi
xlat
cmpb
imul
aas
push
dec
xchg
or
test
mov
sti
stos
dec
daa
sub
cli
fnsave
push
xchg
mov
gs
pop
into
or
cmpsl
or
xor
testb
scas
and
add
pop
inc
iret
mov
fcmovu
sbb
sub
jge
add
jns
outsl
sbbb
ret
mov
ret
roll
or
scas
aaa
pop
add
sub
lea
cmpsb
aaa
iret
out
stc
inc
rcll
mov
dec
push
xchg
adc
aaa
sbb
in
mov
test
dec
rol
adc
mov
pop
in
sbb
push
inc
pusha
arpl
outsl
pop
jl
mov
test
dec
test
lods
jp
das
xchg
dec
and
jne
xor
arpl
in
aam
jnp
shlb
mov
adc
jno
inc
adc
lods
push
mov
andl
jae
adc
adc
xorl
sub
adc
sbb
or
push
xchg
dec
mov
cltd
push
in
les
and
dec
sbb
or
add
shlb
shll
pusha
arpl
int
or
adc
push
adc
cmp
sbb
into
daa
loope
push
jg
data16
mov
dec
fistpl
scas
pusha
shll
int
pop
les
fistl
xchg
mov
scas
cmova
and
rolb
out
out
int
jo
cmpsl
xor
mov
fimuls
in
cwtl
add
in
pop
rolb
test
insl
iret
mov
mov
push
ret
mov
xchg
bound
push
jp
push
sub
out
mov
fld
push
dec
push
jp
adc
dec
movsl
ljmp
fsub
inc
repz
xchg
cmp
int
pop
cs
gs
test
xchg
and
in
fcompl
aaa
mov
lahf
dec
popf
call
arpl
call
dec
aam
js
jae
jno
scas
sub
dec
add
sbb
add
sbb
xchg
sbb
xchg
pop
xchg
sub
dec
fldcw
jge
xchg
mov
xchg
imul
cmp
adc
sbb
jns,pn
rcl
or
jp
int
out
imul
mov
lcall
push
xchg
sub
rorl
ret
sub
cwtl
enter
inc
add
rorb
sti
push
sahf
jle
xchg
pusha
fdivrs
sub
push
les
push
mov
and
and
dec
pop
ljmp
mov
mov
pop
xchg
inc
imul
jbe
sub
outsb
mov
cs
mov
stos
test
and
or
ja
xchg
jp
dec
xor
fsubrl
test
lret
in
mov
shlb
loopne
test
pop
sub
xor
inc
faddl
jmp
fisubl
outsb
or
out
movsl
pop
dec
ljmp
inc
lret
push
jae
mov
inc
dec
push
imul
sub
insb
loop
cs
add
adc
push
add
xor
test
jle
out
push
fldt
pop
aad
mov
lods
or
ficoms
les
cmp
test
jb
in
and
mov
les
jno
or
and
repnz
push
nop
jb
mov
xchg
std
shl
gs
gs
mov
push
pop
jbe
lea
popa
in
add
stos
xorb
inc
jb
fsubr
push
or
cmp
popf
push
push
add
and
mov
jg
and
dec
xor
xor
rcrl
xor
sub
movsb
xorb
push
mov
les
mov
shrl
je
fsubrs
mov
stos
sbb
cmpsb
pop
or
movsb
push
xor
or
pop
andb
pop
das
sub
xor
and
cmpsb
fldt
xchg
in
sub
dec
or
loop
push
ret
sbb
hlt
shll
xor
loop
fnstcw
out
cli
cmpsb
xchg
nop
dec
adc
push
cmp
cmpb
outsl
xchg
mov
jno
insl
xchg
inc
cltd
popa
cmp
jmp
mov
out
cmp
xor
pop
popf
mov
push
or
arpl
fldcw
sbb
xchg
jae
cmc
jge
pop
and
xlat
dec
icebp
dec
in
or
push
es
or
daa
mov
sbb
fwait
pop
and
data16
cwtl
mov
cmp
inc
sarl
push
jmp
inc
movsl
inc
mull
fcoml
mov
fcoms
repnz
stos
and
test
push
adc
push
pop
loope
leave
mov
out
mov
int3
sbb
xor
cmp
fists
pop
mov
ret
test
mov
dec
pusha
sub
add
lcall
adc
cwtl
adc
mov
aam
gs
inc
xchg
data16
sbb
lock
int3
std
ljmp
icebp
push
jecxz
push
repz
add
and
aad
test
aaa
rolb
sbb
mov
dec
rep
xchg
insb
push
pusha
add
out
fmuls
cmpsl
psubb
mov
call
add
in
adc
and
int3
pop
push
cmpsl
popf
shlb
movsl
dec
dec
stos
repnz
je
loope
leave
sbb
daa
imul
jmp
dec
mov
add
jg
mov
or
imul
test
out
push
inc
shl
cmp
push
movsl
pop
rorl
test
sahf
clc
xchg
mov
xchg
cld
icebp
xchg
je
call
ds
int
xor
push
frstor
adc
mov
adcb
pushf
xlat
xchg
movl
push
lcall
test
cmp
cli
jmp
mov
jge
mov
ss
hlt
sub
dec
call
fnstcw
movsb
lock
lods
cmp
dec
cmp
jp
in
xor
enter
pushf
fdivs
or
inc
jbe
sub
in
cld
or
sbb
pop
dec
cmc
subb
les
jmp
mov
rorl
jp
lods
cltd
ljmp
sar
fs
rolb
je
mov
pop
push
xchg
and
cmpsl
mov
nop
out
cmp
loope
rep
push
sbb
fcomip
and
sub
xor
xlat
div
in
sti
mov
loop
xor
mov
mov
pop
jnp
inc
test
push
sti
jnp
insb
lods
pop
ljmp
icebp
loop
popa
or
and
fimuls
mov
aaa
cld
jo
flds
leave
nop
sub
cld
int
cmpsb
shlb
daa
in
pop
pop
sbb
mov
xchg
lcall
cmpsl
popf
jle
inc
insw
cmp
jg
and
jbe
add
inc
xchg
or
lock
add
cmc
lahf
inc
pop
call
push
add
mov
jae
cmp
movsb
rclb
mov
repnz
add
in
movsbl
lock
pop
inc
fnstcw
adc
loop
inc
ds
cltd
ja
mov
dec
cwtl
loope
push
inc
aad
aas
xor
jae
inc
in
adc
stos
in
push
fistl
dec
test
push
shll
insb
inc
das
loopne
out
mov
jnp
xchg
fadds
dec
dec
scas
add
sub
adc
mov
sbb
call
or
or
int3
xlat
and
dec
pop
mov
pop
xchg
xor
lcall
frstor
ljmp
imul
pop
stc
ljmp
and
inc
lcall
jo
cmp
sub
pop
ret
cmpsl
jmp
fwait
xchg
leave
lret
inc
cmp
cld
fs
stos
movsb
mov
or
push
dec
mov
decl
sub
stos
es
stos
inc
faddp
xor
cmpsb
outsl
dec
rcrl
hlt
pop
lds
pop
mov
and
adc
andb
dec
ss
pop
lret
repnz
shrb
popl
mov
jno
das
xlat
inc
gs
sbb
or
sti
pop
repnz
stc
fcmovbe
sbb
inc
mov
cmp
dec
mov
jne
jno
push
jno
mov
arpl
push
adc
loop
lret
scas
push
jmp
out
xor
inc
repnz
push
cmp
fwait
hlt
outsl
and
in
dec
adc
insb
xchg
ret
je
dec
and
jns
sub
ja
popa
arpl
jp
mov
inc
sbb
push
sti
xor
xchg
lea
out
jp
and
jno
cmpl
inc
outsl
rclb
xor
stos
test
gs
test
xchg
push
js
insb
or
jno
sub
inc
in
mov
ja
bnd
js
rcll
gs
aas
mov
fucomp
insb
pop
enterw
and
addr16
mov
sub
xor
cli
sbb
movsl
pop
or
lods
push
aaa
mov
sbb
jge
outsb
push
daa
imul
lret
xchg
les
cmc
or
stos
mov
jl
push
lret
scas
dec
sbb
jmp
add
mov
lcall
iret
lods
push
lock
ficoml
test
lods
mov
dec
les
jnp
mov
jle
sub
pop
and
out
shlb
sbb
scas
or
sbb
addr16
repnz
mov
or
adc
jns
lock
jns
jg
outsl
hlt
cs
cmc
sahf
cmp
or
mov
shll
fsubs
jo
mov
out
sbb
push
adc
jmp
lods
xchg
add
fistps
xor
cmc
cmp
lea
inc
jo
cmp
fnsave
jne
into
je
mov
icebp
sub
inc
pushf
mov
out
stc
int3
popa
adc
sbb
hlt
frstor
or
pop
sub
jne
out
cltd
mov
pop
jmp
jbe
ja
sarb
pop
andb
test
adc
loopne
cwtl
and
lds
bswap
std
xchg
stc
xor
mov
pop
lret
movsl
mov
xor
aas
jne
or
out
sahf
mov
cltd
aaa
push
popf
mov
sub
pop
sub
fidivl
lret
or
lock
jns
push
loopne
push
icebp
adc
fidivrl
imul
mov
sub
js
aad
and
lret
mov
mov
sarl
mov
xor
nop
cmpb
xor
sbb
adc
fiaddl
in
icebp
cmp
jo
sbb
scas
mov
fcomip
rclb
mov
out
std
xlat
fidivs
sub
push
mov
into
sahf
mov
push
popa
scas
adc
pop
imul
push
push
jg
sti
mov
jnp
mov
jbe
adc
mov
scas
or
movsb
lods
xchg
mov
inc
adc
xlat
popf
stc
lds
fnsave
ss
out
inc
pop
mov
fwait
push
loop
cmp
js
or
or
leave
jl
loop
decl
sbb
adc
inc
push
inc
out
mov
lahf
fisubrs
push
cmp
mov
popa
adc
mov
and
sbb
or
fidivrl
push
inc
into
inc
jecxz
std
mov
mov
inc
pop
sbbb
scas
movsb
loop
sahf
js
or
mov
sub
mov
xchg
pop
enter
fistpll
jbe
pop
jne
push
push
movsl
cwtl
lods
mov
push
mov
cld
sub
sbb
inc
mulb
inc
inc
xor
and
iret
mov
push
push
mov
ljmp
inc
add
cmp
pop
or
das
pop
data16
mov
xor
mov
push
sub
iret
or
cmp
in
shrl
gs
stos
mov
cwtl
dec
or
xor
fdivr
dec
pop
cmpb
xchg
stc
std
cmpsl
rcll
popf
mov
push
xchg
push
or
ret
shll
cmp
or
ret
pop
ljmp
xor
rorb
cmp
pop
mov
mov
xlat
and
imul
pusha
inc
inc
xchg
and
data16
cmp
repnz
shrl
pushf
sbb
cmpsb
arpl
mov
sub
fisubl
mov
bound
ret
inc
out
jmp
cli
cmpsl
scas
js
sub
inc
rclb
pushf
cld
cmc
inc
xchg
jbe
pop
push
fldenv
pop
aas
mov
popf
pop
imul
mov
sub
fs
sub
in
mov
jno
mov
test
daa
test
pop
cmp
jnp
test
jns
pusha
in
sahf
sbb
test
push
xor
sahf
loop
sub
mov
push
or
enter
cmp
add
inc
loop
sub
cmc
inc
cld
jle
jo
add
jge
lahf
xor
mov
add
or
push
mov
push
jo
rorb
subl
loopne
jns
add
xchg
fs
mov
push
jg
pop
push
inc
ret
dec
pushf
movswl
xchg
pop
jp
flds
js
fnsave
sbb
mov
es
pop
testl
fiaddl
and
jne
jg
lds
mov
mov
stos
loop
pause
mov
stc
push
adc
xor
jns
pushf
cmpsl
xorl
jbe
cmp
or
movb
jns
in
cmpsb
rorl
add
movsl
or
mov
xor
mov
mov
ror
insb
jo
add
adc
popa
movsb
pop
mov
enter
ja
mov
sbb
xchg
aas
dec
adc
pop
ret
xchg
mov
jns
lret
jmp
or
mov
aas
dec
adc
jg
dec
out
mov
mov
xor
and
negb
mov
sbb
push
pop
icebp
or
xchg
push
stos
mov
mov
orb
stc
stos
js
sti
sbb
push
mov
cmp
xchg
jge
or
nop
fwait
dec
pop
out
stos
lods
cltd
jle
ljmp
sub
pop
mov
lcall
sbb
mov
pop
lcall
sbb
scas
inc
popa
das
divl
out
jge
and
and
cltd
insb
mov
js
sbb
fdivrl
mov
inc
cs
test
in
loopne
cmc
add
dec
cmpsb
ficompl
pop
and
jns
in
push
and
lcall
mov
sub
popa
outsl
cmp
repz
add
push
arpl
sub
xor
movsl
lret
dec
sti
mov
mulb
aad
decl
dec
dec
lods
mov
xlat
les
cmpsl
mov
movnti
and
movsb
cmpsl
dec
outsb
dec
rolb
sti
adc
test
repnz
cmpsb
movb
nopl
pop
idivb
mov
jo,pn
xchg
test
cmp
popa
stos
xor
cmc
mov
mov
addb
fisubrl
sub
inc
lea
and
xchg
lock
xchg
cmp
in
pop
sbb
je
mov
and
les
cmp
cmp
cmp
mov
pop
push
out
inc
xchg
scas
aaa
inc
lock
pop
ss
sub
and
cmp
fadd
mov
data16
mov
mov
cmp
shrl
inc
loop
sbb
pop
fisubrl
push
cmpb
jbe
jb
ret
aad
inc
mov
hlt
mov
push
insb
ljmp
and
mov
jg
clc
adc
xor
jbe
jb
ja
nop
push
adc
fldt
push
bts
jge
into
cli
inc
mov
ljmp
pushf
loop
push
into
push
pop
je
out
cltd
addr16
das
mov
mov
add
xor
xchg
adc
int
roll
push
pop
pop
lock
mov
aaa
dec
lret
inc
inc
xchg
xchg
pop
fsubrs
notl
fcomp
ljmp
mov
push
out
pop
into
add
nop
pop
shl
jl
arpl
fs
sbb
in
cwtl
mov
jp
cmpb
jmp
pop
fucomi
loope
mov
mov
ja
sub
loopne
fisubrl
cmpsl
ds
lahf
xchg
mov
pop
add
mov
jl
aas
outsb
mov
cmc
xchg
dec
pop
sbb
dec
xor
mov
cmp
adc
pop
push
repz
cs
pusha
cmp
inc
adcb
jle
mov
or
mov
or
inc
push
pop
in
xchg
push
lahf
jno
mov
into
push
pop
push
jnp
fwait
ret
jno
xor
frstor
sbb
insb
cmp
fsub
addr16
xlat
or
push
outsb
mov
outsb
jo
in
and
fldenv
dec
aaa
xchg
add
jne
adc
hlt
inc
aad
mov
cmp
mov
mov
clc
out
test
xor
ficompl
jmp
and
lock
subl
pusha
mov
dec
jo
lldt
and
mov
test
nop
jns
lret
mov
fdivs
xor
in
sbb
testb
nop
rcr
mov
std
sub
fs
pop
mov
jbe
sahf
xchg
add
lret
flds
mov
mov
notl
sub
dec
mov
lret
sbb
lock
xchg
xor
adc
test
hlt
add
and
lods
repz
in
and
pop
jb
xchg
jmp
and
lock
aas
sbbb
imul
int
mov
stc
mov
xchg
jbe
sbb
aam
cld
outsb
fs
jmp
dec
rclb
in
lock
jo
push
lods
out
cmpsb
jg
adc
fwait
in
jg
aaa
bound
stos
aad
subl
movsl
mov
dec
pop
js
clc
pop
and
push
lea
and
mov
dec
jg
rcll
mov
jmp
mov
loopne
sub
pop
fwait
inc
xchg
dec
mov
pop
test
out
mov
mov
xchg
shlb
das
clc
pop
and
iret
inc
and
mov
push
and
imul
fwait
inc
xchg
enter
mov
push
jno
mov
xchg
addl
pop
ljmp
push
jmp
nop
fs
lds
inc
cmp
xchg
orl
jne
dec
xor
jbe
and
fs
sbb
add
mov
jg
mov
fs
pusha
mov
jecxz
and
daa
push
ds
out
pop
push
nop
cmp
mov
add
adc
sbb
outsb
pop
cmp
jno
mov
xchg
xor
repnz
push
cmp
loopne
or
xor
push
lods
jmp
popf
ljmp
loope
mov
call
jnp
shll
jle
bound
ljmp
or
xor
or
notl
loope
stos
in
and
loop
mov
and
orb
inc
sbb
pop
imul
push
pop
lret
jl
and
sti
push
jae
jne
lret
sti
aam
lea
andb
adc
jns
into
jp
psubsw
jp
dec
jne
movsb
sbb
test
in
jns
cmp
jb
xor
mov
cmp
cmp
or
mov
sbb
push
test
mov
cmp
push
pop
pop
and
xchg
addr16
inc
mov
insb
mov
and
push
mov
shrl
inc
arpl
cwtl
inc
or
fidivs
push
add
adc
call
ljmp
inc
loope
pop
aam
or
sbb
pusha
gs
or
inc
out
pop
pop
jle
loop
repz
jmp
inc
imul
xor
inc
add
jmp
leave
xor
fistl
dec
push
repz
pop
scas
push
sub
push
imul
mov
mov
jmp
insb
addr16
pop
adcb
popa
pop
inc
mov
dec
sbb
lahf
mov
mov
aas
sub
mov
push
mov
xchg
sbb
fidivs
adc
xchg
xchg
jl
inc
xor
fimuls
inc
inc
sarb
cmc
xchg
mov
cltd
repz
lea
ret
roll
sbb
push
imul
shl
adc
cmpb
add
or
mov
stos
mov
rcll
xor
imull
sub
cs
jo
jno
or
sub
inc
ret
loop
sub
mov
xor
jbe
stos
xchg
popl
adc
movsl
xor
mov
nop
pusha
stc
xchg
push
mov
loopne
jecxz
inc
fimuls
pop
jnp
mov
lods
test
enter
ret
pop
pop
fstps
mov
out
pop
jmp
xor
sbb
sbb
das
dec
ljmp
lahf
bnd
cmp
push
push
add
sub
pop
pop
not
xchg
sub
or
lods
pop
call
and
push
out
lahf
mov
sub
std
sbb
mov
mov
movsb
out
cmp
stc
cs
lods
fnstsw
das
loop
mov
orl
mov
push
add
or
les
inc
repz
cld
movsb
mov
mov
loope
mov
adcl
pop
xchg
bound
icebp
adc
xchg
filds
in
or
mov
cmpsl
loopne
adc
push
xchg
outsl
mov
in
add
stos
add
insb
inc
cmp
loope
and
lods
ds
sub
mov
inc
or
cmc
inc
inc
inc
add
adc
std
jge
shlb
xchg
in
mov
mov
negl
outsb
decl
cmpsb
adc
mov
add
sbb
mov
mov
mov
lods
or
sarl
cwtl
sbb
push
orb
mov
sbb
enter
add
rcr
xchg
cli
pop
cmpsl
inc
mov
pop
arpl
add
adc
imul
mov
mov
mov
sbb
outsl
rcll
into
sub
cmc
pushl
lret
sarl
jge
fistpll
outsl
adc
je
out
mov
insl
jns
and
sub
or
lcall
jno
in
popf
stos
push
and
pusha
jae
lcall
out
fwait
adc
aam
cwtl
iret
pop
xor
outsb
hlt
repz
or
les
cmpb
dec
jne
loop
cmp
subb
xor
inc
gs
jge
mov
inc
push
sbb
cmp
dec
popa
mov
mov
cmp
lcall
imul
into
cs
pop
push
popa
aaa
jle
scas
into
sbb
xchg
jb
mov
ret
lods
inc
mov
jno
out
mov
movsb
pop
aas
cmc
push
sti
mov
adc
sub
lods
imul
es
ljmp
cmpsb
icebp
sub
mov
xchg
cmpsb
push
jecxz
repnz
roll
int
insb
rcr
lea
cmpsl
dec
cmp
in
bound
inc
jae
test
adc
iret
cmp
adc
fcmovb
mov
push
push
movsl
jb
dec
xchg
push
sub
orl
xchg
jae
mov
sahf
cltd
repz
xchg
in
lods
scas
inc
or
mov
imull
pop
out
outsb
loop
cli
xorb
nop
and
pop
loope
in
and
push
movsl
decl
jo
lods
sbb
or
lods
lcall
adc
stos
shrl
in
divl
icebp
lahf
test
dec
std
mov
dec
adc
aam
push
push
sub
push
lods
test
ffree
iret
loope
xchg
aas
cmp
push
push
rcrb
sbb
cli
nop
mov
insl
call
jae
add
dec
push
add
push
test
dec
fildl
fadds
mov
push
in
cmp
rolb
mov
or
inc
mov
xchg
xchg
stos
das
mov
fimuls
scas
or
xor
mov
das
inc
push
push
jmp
cwtl
fwait
nop
mov
imul
inc
in
push
xor
inc
leave
fs
adc
xchg
push
outsb
in
in
lcall
movsb
imul
and
test
dec
sub
mov
sub
push
enter
jo
fimuls
jl
dec
jno
push
addr16
movsb
in
fwait
adc
div
or
lods
daa
xchg
sarb
mov
loop
sub
inc
mov
pop
fs
fwait
cltd
adc
ret
jl
add
push
xor
das
jno
and
loop
jmp
adc
add
sub
xchg
add
push
cwtl
in
xor
or
aaa
lahf
push
call
mov
sahf
jb
rcll
add
test
ret
test
mov
and
test
in
mov
outsb
les
imul
or
inc
xor
mov
sarb
out
push
sub
clc
lods
adc
hlt
mov
sub
xchg
or
sbb
or
lods
clc
test
mov
mov
out
push
push
out
fbld
xchg
xchg
xchg
mov
out
stos
fwait
iret
cmp
daa
xorb
dec
lahf
xchg
loope
loop
push
in
jb
add
les
outsl
out
dec
mov
push
fwait
pop
sub
lret
test
push
repz
pop
add
aad
clc
enter
into
and
sti
mov
data16
sub
scas
jmp
clc
scas
mov
pop
add
mov
movsb
addr16
mov
xchg
sarl
xlat
jnp
repnz
out
rclb
xchg
xchg
pop
mov
mov
push
fistps
ret
fimull
hlt
stos
ljmp
scas
popa
lret
adc
mov
mov
jnp
xor
cmp
cmp
ficompl
or
mov
cwtl
cmp
dec
enter
mov
mov
xchg
daa
fwait
push
maskmovq
notl
push
scas
iret
cmc
push
mov
or
push
dec
pop
xor
xor
mov
sub
and
xchg
bound
call
into
fstps
cmpsb
loop
jl
and
cmp
shl
sub
push
ret
jmp
lods
push
xor
daa
lea
push
mov
inc
sbb
fldcw
adc
xor
ret
lret
xchg
mov
stos
sbb
pop
mov
fsub
cmpsb
jnp
lahf
out
popa
adc
orb
movsb
push
rcr
cltd
lods
pop
xchg
sub
fisttpll
test
inc
mov
mov
sbb
and
ljmp
jb
hlt
outsl
loopne
xor
or
xchg
adcl
pop
lahf
cld
jmp
sti
or
repnz
pop
mov
rolb
xor
pop
push
out
pusha
pop
je,pn
jb
cmpsb
dec
inc
scas
pop
fsub
fcmovnb
shll
jne
aad
mov
pop
add
rol
push
xchg
cmp
and
jecxz
in
popf
jo
push
in
xchg
ret
or
es
ss
xor
and
movlps
and
stos
shrl
jecxz
sub
or
xchg
cs
jg
lret
mov
xlat
mov
push
loopne
repz
jecxz
divl
push
orb
inc
jle
and
or
xchg
pop
popf
dec
lods
faddp
jo
xchg
mov
scas
cmp
divb
or
stc
pop
fldl
or
addr16
jno
xchg
sub
iret
push
sbb
loop
lahf
xor
scas
jae
push
and
rcrb
ljmp
clc
cltd
subb
les
loope
push
and
daa
in
inc
and
push
into
pop
sbb
les
mov
aas
shr
jo
lret
cmc
in
xchg
in
and
mov
jno
mov
test
jge
xchg
jle
loopne
pushf
push
addl
sbb
scas
stc
daa
mov
pop
or
sbb
inc
loop
cmpsb
arpl
js
cmp
fwait
adc
add
scas
xlat
loope
addr16
test
arpl
lds
loop
xchg
test
pop
nop
sub
in
repnz
jmp
pop
push
es
fadd
jecxz
fidivl
lock
hlt
mov
or
cmp
dec
je
and
add
dec
test
out
adc
push
dec
xchg
fidivrs
push
rcl
add
lea
or
leave
mov
ret
adc
out
mov
mov
jb
push
add
enter
xchg
jo
mov
pop
les
cld
dec
push
xor
xchg
shll
xor
pop
adc
insb
adc
stos
cs
push
push
add
arpl
test
sarl
mulb
mov
testb
jmp
push
roll
ss
mov
jg
xor
sbb
or
out
push
add
das
xor
dec
cmovle
mov
outsl
xor
loop
int3
push
xchg
data16
sbb
push
das
aas
or
sahf
add
jo
scas
dec
in
gs
and
popa
cmp
jne
mov
inc
fnstsw
sbb
push
and
andb
adc
mov
inc
aad
jnp
mov
repnz
mov
in
cwtl
jae
out
in
xor
lret
jne
leave
mov
std
data16
mov
in
xor
push
jns
lahf
jle
pop
mov
push
in
pop
leave
cmpsl
ja
loop
in
jns
mov
loop
incb
mov
sub
xor
mov
scas
sub
js
test
adc
sti
lret
inc
mov
nop
cltd
insb
ljmp
jmp
pop
in
push
pushf
aas
imul
sti
fcmovnb
mov
sbb
ret
add
push
imulb
mov
ror
ret
cmp
jmp
inc
cmpsl
ss
in
int
pop
into
dec
jle
hlt
jge
ds
scas
sahf
test
repz
iret
mov
dec
fimuls
inc
cmp
enter
sahf
aaa
lret
cli
sahf
iret
in
cmp
out
mov
pop
push
fildl
sub
and
test
cmpsl
daa
or
mov
ret
mov
enter
sbb
xor
and
cltd
insb
mov
cmp
dec
ds
fistl
es
and
mov
adc
mov
lods
cmc
mov
lds
push
aad
xchg
push
js
iret
dec
adc
fsubs
pop
js
movsb
and
add
jns
movb
cmp
dec
push
dec
or
insb
cmp
push
sub
addb
scas
sbb
dec
subb
cli
cltd
es
cmc
mov
in
push
lcall
mov
insl
jge
xchg
rol
lea
notl
leave
push
mul
es
mov
insb
jae
mov
cmp
dec
and
insl
out
push
lcall
mov
repnz
add
jns
arpl
in
das
sti
cmp
es
mov
cmc
mov
imul
or
pop
sub
and
adc
inc
aaa
divl
outsb
jne
pushf
inc
pop
test
pop
pop
add
pop
outsl
add
outsb
push
cmp
jo
out
fcomp
pop
adc
icebp
sbb
mov
ds
pop
fwait
cs
stos
jne
imul
rcl
and
out
out
mov
repz
add
aas
push
cmp
aam
cmc
jo
xor
imul
or
lock
mov
jecxz
lret
jo
lods
lods
aad
call
push
aaa
int
push
lods
sbb
adc
lds
mov
fs
cwtl
cmp
push
dec
in
std
icebp
fsts
fldl
sub
out
cs
push
pop
add
leave
cmc
mov
cltd
lock
add
xchg
xlat
shrb
ret
sahf
stos
dec
std
jbe
cli
mov
test
cld
sub
iret
pop
add
jae
sbb
sub
pop
pop
imul
pop
mov
sub
cwtl
sbbl
jecxz
inc
scas
data16
ljmp
fucom
push
sbb
rorl
cmpsb
push
jge
insb
add
sub
test
xchg
mov
clc
xchg
xlat
mov
lcall
or
daa
add
ja
mov
lahf
ds
jo
or
inc
daa
addb
push
pop
jae
cmp
mov
mov
test
arpl
ret
xlat
sbb
jmp
mov
lods
fcoms
fildl
add
arpl
in
jb
test
sub
mov
sub
inc
lods
push
out
outsl
add
push
jo
shl
repz
and
add
cs
in
repz
lret
adc
cli
xor
xlat
push
mov
adc
sbbb
loope
sbb
bound
jmp
sub
or
push
xlat
mov
pop
roll
into
xchg
jg
cmpb
sarl
pusha
xlat
sarl
cwtl
int
xor
es
mov
stos
call
lret
mov
ja
cs
jecxz
cmpsl
add
inc
cmp
inc
dec
or
cmp
fisttpl
enter
fbld
mov
mov
out
xor
mov
loope
xchg
push
scas
mov
push
cmp
lds
repnz
not
repnz
xchg
xchg
jl
mov
adc
sbb
leave
mov
imul
lods
mov
push
paddusw
test
fildl
cmp
mov
xchg
ljmp
loop
add
sub
popa
cmp
push
add
push
pop
xlat
incb
push
enter
push
sbb
jg
and
xor
into
xchg
pop
push
pop
cmp
stc
push
lds
aad
fidivrl
sbb
das
std
aaa
je
movsb
push
outsb
fists
stos
std
fwait
addl
ds
push
cmc
shll
xlat
mov
imul
sar
imul
lds
push
mov
or
push
cmc
stos
xchg
mov
push
mov
ja
sahf
sbb
aam
jb
lahf
jbe
mov
mov
fmull
xchg
dec
shrb
nop
xlat
mov
and
dec
dec
inc
mov
mov
outsl
incb
lret
popf
scas
out
pusha
jns
test
cmp
daa
cmc
es
ja
jecxz
movsb
inc
cmp
jmp
or
cs
push
cmp
aad
pop
fcomip
add
mov
dec
inc
mov
sbb
or
std
inc
jbe
mov
jmp
jecxz
xor
int
repnz
sbb
mov
fildll
inc
mov
aaa
pop
int3
pop
and
pushf
lods
mov
mov
jno
or
mov
and
dec
bound
mov
inc
mov
cmp
ja
shrb
aas
and
lcall
ds
aaa
jae
mov
sub
imul
jnp
cli
mov
pop
dec
int3
adc
add
dec
int
int
cld
jno
pop
sub
outsl
mov
xor
mov
lcall
shlb
sbb
dec
nop
sub
push
dec
jmp
inc
cld
push
enter
mov
push
leave
xchg
jnp
mov
adc
mov
cmpsb
push
in
ja
xchg
sti
es
pop
pop
icebp
les
mov
mov
jle
int3
sbb
rolb
pop
sbb
push
push
dec
outsl
pop
lcall
pop
xchg
bound
movsb
pop
xor
jge
movb
dec
gs
test
inc
adc
gs
push
push
adc
out
out
out
je
outsl
popf
adc
aaa
scas
mov
adc
ja
or
mov
shrl
dec
sub
fnstsw
jp
test
inc
cmp
adc
outsb
sub
mov
push
inc
sahf
inc
dec
mov
in
loopne
pusha
shlb
ljmp
lahf
or
icebp
adc
clc
xchg
sti
fstl
fdivs
cmpsl
ret
js
xor
ljmp
xor
in
inc
inc
test
jge
xchg
push
mov
imul
push
jle
int
ds
xor
xchg
inc
adc
imul
cmp
or
cwtl
jge
adc
popf
push
xchg
rcll
mov
xchg
mov
dec
pop
mov
inc
rcrl
and
xor
push
jnp
mov
xchg
cwtl
repz
movsl
xchg
adc
data16
imul
xchg
or
mov
ret
pop
xchg
push
sbb
enter
inc
dec
jle
test
lahf
mov
xchg
out
add
xlat
or
inc
cwtl
inc
mov
push
int
outsl
sar
add
aas
xlat
push
mov
out
push
sti
popf
jl
in
ja
dec
sahf
mov
push
mov
scas
out
or
lods
sbb
lods
add
and
and
mov
std
test
daa
outsl
sbb
xchg
loop
xchg
or
adc
ja
and
pusha
subl
nop
mov
pop
push
mov
pop
cmp
xchg
dec
mov
jmp
mov
rclb
cld
jo
xchg
movsb
push
test
sbb
movsb
stos
rcrl
inc
scas
mov
lret
mov
cmp
iret
push
xor
out
cmpsb
cmpsl
pusha
push
cmpsl
dec
mov
sbb
mov
sbb
mov
stos
mov
fimull
adc
testb
aam
mov
add
fwait
popf
fildl
mov
imul
sahf
into
push
mov
test
cmp
mov
dec
stc
inc
push
add
pop
cmp
push
mov
mov
fcomps
movsb
cmp
into
xchg
repnz
cmp
or
fiaddl
pushf
or
mov
iret
xchg
jmp
aas
add
scas
dec
imulb
aam
xorb
icebp
mov
sub
push
xor
clc
mov
ud1
lods
pop
outsb
iret
cltd
mov
pop
lock
push
addr16
cmpsl
lcall
call
and
mov
mov
dec
lea
jns
mov
xor
inc
pop
nop
adc
pop
sbb
inc
lret
divps
add
mov
mov
call
xor
jns
ret
push
xchg
add
adc
dec
jb
xchg
jmp
clc
sub
scas
jne
lock
xorb
out
and
ljmp
inc
cwtl
insb
mov
add
out
xchg
adcb
sub
sub
pushf
cmp
mov
mov
xchg
jno
sub
outsb
mov
and
test
mov
repnz
dec
dec
mov
jge
jle
jmp
cmp
nop
pusha
insl
sub
cmpsb
mov
lock
lret
out
sub
add
inc
jns
xlat
jo
dec
jnp
ds
leave
dec
and
jne
xor
pop
jae
mov
sti
cmpsl
adc
pop
das
push
mov
pusha
dec
in
inc
cmp
or
sub
scas
mov
pop
test
iret
mov
dec
jns
jl
rcr
ss
dec
sbb
push
fadds
pop
dec
fdivrl
stos
les
inc
fists
nop
jl
push
loope
dec
inc
mov
enter
jae
or
aad
mov
sbb
in
mov
jbe
add
mov
fdivl
mov
cmpsl
cld
aam
xor
imul
insb
in
or
fnstsw
pushf
arpl
adc
jmp
xor
loop
sub
orb
jns
mov
lahf
adc
cmpsl
or
clc
loopne
xlat
mov
lcall
out
nop
xor
lret
sub
push
push
dec
jb
ja
or
mov
or
xor
push
push
aas
testb
ret
into
cmp
jmp
jmp
inc
in
popa
cmpl
rorb
mov
in
add
mov
out
inc
dec
xor
inc
in
fwait
out
mov
inc
mov
ficompl
ds
cmp
xchg
add
insl
pop
or
inc
cwtl
std
pop
aas
inc
into
mov
aad
pop
dec
dec
mov
dec
and
jno
shll
fs
leave
pop
xchg
jle
in
out
repnz
movsl
dec
mov
sbb
std
adc
ss
jmp
mov
jmp
xchg
mov
or
cs
sub
push
enter
push
xor
repz
pop
ret
inc
lcall
pop
ljmp
dec
in
incb
test
daa
xchg
push
xor
stos
arpl
lock
mov
cmp
outsb
add
mov
int3
movsl
jg
loop
nop
cltd
and
push
bound
mov
enter
push
pop
rorb
imul
sub
sti
shrl
inc
cmpsb
popa
cld
sub
add
fsubrs
mov
xor
sub
dec
imul
add
sbbb
push
daa
cmp
push
mov
push
out
xor
add
xor
out
sub
jle
push
cmp
cmpsl
imull
jno
movb
xchg
mov
imul
stos
lcall
out
cli
mov
into
inc
call
xchg
sbb
cmp
xor
cli
jo
divb
push
pop
shll
loope
sub
push
sbb
lea
popf
aaa
decl
lret
lods
mov
out
mov
fwait
inc
mov
jecxz
rorl
xchg
or
fdivs
jb
rorb
lret
fwait
ss
mov
and
adc
mov
pop
jmp
outsb
pop
stc
adc
mov
idivl
mov
dec
in
inc
xor
test
jge
ss
in
cwtl
jns
xchg
add
adc
punpckhbw
xorl
mov
ja
mov
fcmovbe
dec
xchg
lock
mov
jns
jl
mov
adc
inc
add
mov
jl
xchg
in
and
xor
adc
adc
fstl
stos
push
jbe
push
inc
sti
addl
daa
iret
push
out
jge
mov
cmp
pop
imul
mov
mov
ss
aad
repnz
bound
jb
pop
dec
imul
add
push
mov
sbbl
mov
dec
in
sub
adc
ljmp
stos
adc
in
sbb
jecxz
and
push
fpatan
into
push
mov
fistps
imul
loope
mov
fstpt
lods
inc
lods
out
xor
movsb
push
js
gs
std
dec
cmpsl
shrb
scas
andb
test
rolb
lahf
or
xchg
fadds
jg
cmc
push
or
popa
pop
sbb
loope
fisubrl
cmp
mov
loop
and
into
cmpsl
pop
xor
lret
cmpl
mov
call
xor
adc
aas
sbb
cmp
and
mov
iret
out
aad
mov
popa
xchg
inc
leave
outsb
imul
and
lret
sahf
inc
jecxz
sbb
mov
sarb
and
shrb
jne
mov
mov
fstl
sub
jg
sbb
add
sub
call
push
jle
jns
call
or
pop
mov
jg
dec
mov
stc
sbb
aad
sub
sbb
push
aas
xor
or
jecxz
int3
hlt
jcxz
inc
movsb
jl
fists
xlat
andl
push
rclb
mov
movsb
popl
xor
inc
push
sbb
je
sbb
stc
and
push
xlat
mov
cli
aam
xor
fmull
jo
aad
inc
aam
pmaxub
mulb
push
lret
outsb
jle
xchg
fisubs
stos
sub
mov
or
mov
out
in
popa
outsb
and
and
sbb
inc
shrl
inc
mov
mov
rolb
push
repz
lret
lods
cmp
jns
out
push
sub
pop
lahf
mov
mov
xor
cmp
mov
ljmp
outsb
push
cltd
jno
insl
xchg
inc
pop
jmp
jnp
imul
cmp
lret
adc
mov
shr
das
or
push
dec
adc
push
and
push
hlt
push
fdivrs
mov
mov
or
repnz
push
or
push
jns
push
pop
inc
dec
filds
push
mov
out
xchg
dec
fmuls
aas
lcall
cltd
mov
ret
add
out
outsb
xor
das
mov
das
mov
popa
sub
mov
jbe
stc
and
xchg
mov
or
call
inc
repz
call
int3
jge
sbbl
mov
lock
cmp
ds
mov
cli
cltd
incb
inc
pushf
cmp
leave
stos
bound
std
es
adc
aad
xchg
in
inc
inc
insb
cmp
in
popf
jl
pop
mov
and
and
shrl
and
in
cld
jno
push
pop
stc
dec
test
jae
inc
pop
in
and
mov
cld
rcrl
mov
js
sub
es
aad
add
stc
mov
outsl
push
cmp
and
mov
imul
movsb
push
and
mov
inc
jae
xchg
lods
push
jb
into
lcall
mov
into
pop
mov
jl
xorl
xchg
add
dec
lret
rolb
inc
inc
insb
push
jns
pop
sbb
mov
sbb
push
xor
aaa
jg
cmc
ljmp
inc
xchg
imul
lods
icebp
aas
or
or
fdivrl
mov
jp
add
xchg
lock
das
iret
icebp
insl
insb
cmpsb
popf
sbb
add
xchg
inc
push
je
mov
fildll
sti
sub
jle
jb
insb
fsubrs
inc
pusha
push
dec
das
mov
push
jmp
jl
gs
lods
rcl
in
mov
mov
jp
push
dec
mov
jnp
cvttps2pi
inc
out
inc
les
push
shll
popf
sbb
sub
and
hlt
add
xor
sub
jmp
push
pop
nop
or
icebp
sub
adcl
dec
rcr
cmp
fidivs
inc
mov
daa
stc
cs
fisubl
or
mov
add
pusha
adc
mov
subl
cmp
outsl
sbb
push
jbe
add
mov
jns
scas
enter
movsl
psubb
cmc
pop
imul
pop
fs
call
and
dec
bound
pop
mov
add
jmp
xor
mov
hlt
ficompl
iret
dec
jae
and
pop
out
leave
repnz
aad
lahf
sbb
call
dec
inc
stos
cli
push
cmc
inc
jbe
xlat
lcall
mov
adc
xchg
mov
scas
jnp
push
fistpl
ret
pop
das
pop
inc
mov
popa
or
orb
push
cmpsl
cmp
mov
mov
cmp
iret
fcoms
flds
and
mov
lods
adc
cmp
and
xchg
outsb
pop
in
cld
jo
sub
push
int
xchg
mov
pop
arpl
dec
jp
insl
test
mov
add
mov
mov
cltd
out
fisubrs
xor
push
inc
nop
and
in
cmp
pop
push
pop
or
ss
outsb
jne
mov
jbe
push
mov
push
fsubrs
pop
mov
je
popf
ret
sub
xor
push
sub
flds
mov
les
xchg
cmp
pusha
mov
flds
push
lds
add
inc
pop
popf
data16
sub
negb
dec
in
fdivl
xchg
scas
cli
jbe
repnz
and
lods
in
pop
test
lods
push
sbbl
pop
in
pop
popa
cmpsb
repz
adc
out
shr
push
clc
jecxz
aas
pop
repnz
push
and
ljmp
pop
dec
push
push
in
fst
mov
ret
decl
mov
shlb
pop
ret
hlt
cmp
and
inc
rolb
or
insl
pop
dec
sub
jmp
stos
dec
adc
rclb
xor
dec
pusha
push
fcmovnu
jbe
out
and
xchg
scas
es
scas
or
stos
jmp
push
and
push
mov
inc
adc
repnz
jmp
adc
push
sub
and
xchg
push
xchg
xchg
xor
pusha
jne
pop
push
aad
out
pusha
inc
or
imul
loopne
std
sahf
addr16
jg
mov
dec
pop
mov
push
sti
lret
mov
ds
xor
pop
add
jge
aad
or
push
ja
aaa
sbb
cmp
mov
adc
ja
in
hlt
xchg
addr16
addr16
ss
and
stos
cwtl
or
aas
cmp
mov
rol
pop
push
xchg
and
pushf
mov
sbb
sbb
enter
adc
push
cmp
jmp
xlat
cli
fbld
shrb
cs
icebp
jle
cwtl
mov
push
test
push
lea
mov
jb
loope
andb
inc
dec
fsubr
repz
test
xchg
cwtl
mov
notb
jl
jg
std
lahf
outsl
and
mov
mov
xlat
outsl
xrelease
out
jge
xor
add
cltd
xlat
sbb
or
mov
jbe
out
mov
xor
jmp
sub
dec
pop
mov
jl
in
pop
sahf
jae
and
adc
ret
xchg
imul
outsl
dec
in
add
adc
push
movsb
lahf
aam
daa
dec
ss
orb
and
and
mov
lret
pop
cltd
push
scas
add
lods
add
lcall
lcall
jne
shr
aas
push
aas
pop
cwtl
test
pop
xchg
mov
fcompl
and
pop
push
into
xlat
inc
jmp
xchg
mov
push
push
dec
lods
pop
outsb
bound
or
mov
jl
addb
or
outsl
pop
mov
dec
lods
and
movsl
outsl
clc
mov
subb
gs
adc
sbb
clc
sbb
jnp
jmp
lds
add
mov
jle
xchg
cmpb
xchg
xor
je
rol
stos
repnz
dec
aaa
and
adcl
xor
xlat
fbld
stos
je
inc
cmp
xor
cmp
sub
or
rol
ds
test
movswl
out
aas
cmp
sub
lret
clc
sbb
mov
dec
notl
cmp
sti
iret
leave
iret
xchg
dec
rcr
dec
sbb
mov
loope
cmp
mov
mov
js
push
icebp
pop
cmpsl
arpl
pop
shl
ss
add
insl
jno
cmpsl
jmp
insb
and
popa
sub
popa
outsl
dec
popa
dec
push
pop
test
sub
xchg
sbb
mov
in
adc
lods
icebp
fimuls
insl
rol
inc
mov
cld
bound
lret
pop
inc
push
lahf
mov
fucomp
movsl
add
mov
mov
cmp
addr16
iret
das
inc
sbb
fs
je
out
sbb
and
xor
and
lds
and
std
mov
inc
out
popf
clc
jge
sub
jne
jge
jae
mov
sarl
jne
xor
out
sarl
movaps
lea
lock
mov
aaa
pop
mov
pop
and
popf
push
imul
xchg
popf
or
mov
add
mov
dec
add
scas
aam
jmp
add
or
cmpb
lret
stos
mov
cmp
add
out
sub
outsl
jmp
ret
inc
add
test
cmc
sub
dec
pushf
cmc
pop
inc
or
cmp
mov
daa
dec
push
jb
dec
aam
xchg
or
adc
sub
shr
inc
adc
lock
adc
rcrl
mov
aas
in
inc
sbb
loope
mov
mov
bound
pop
ja
aaa
inc
xor
sbb
aas
and
cmp
mov
repnz
mov
sti
ret
and
lret
cmc
clc
cmpl
mov
decl
cmpps
xor
adc
mov
fwait
pop
mov
add
add
fldenv
sahf
dec
cmp
xlat
inc
jns
xor
test
xlat
es
sub
mov
and
pop
sbb
js
icebp
mov
gs
movsb
dec
cmp
pop
adc
jae
pop
xchg
add
jns
out
push
and
sub
and
repnz
jae
pusha
pop
scas
mov
aam
les
cld
fistl
scas
push
or
data16
fidivrs
setge
adcl
xor
jl
push
cmpsb
xchg
jne
sub
push
les
sbb
mov
repz
loop
test
aad
mov
jp
call
mov
cmc
xchg
cld
cmp
xor
fistpl
push
nop
test
out
cwtl
iret
mov
cld
movsb
je
jne
iret
clc
lret
test
dec
cmp
push
sub
cs
or
fcmovb
shll
and
mov
sbb
or
imul
pop
aad
std
mov
fisubs
mov
daa
add
popf
pop
call
pusha
mov
mov
dec
stos
and
out
hlt
cld
cltd
sbb
lods
pushf
in
mov
enter
leave
sti
mull
pop
push
cli
jnp
xchg
pushf
sub
cmpsl
stos
lock
imul
sbb
fwait
and
loopne
fsubr
adc
sub
cmp
fs
icebp
mov
imull
pop
mov
das
imul
cmp
add
or
lds
add
cmp
scas
jecxz
xchg
loope
mov
testl
inc
in
shl
xchg
xor
mov
cwtl
adc
pop
fmulp
xchg
lret
or
add
mov
mov
lret
jge
dec
mov
hlt
jo
jb
ds
daa
je
ljmp
fwait
xchg
ljmp
lret
pop
mov
jp
in
cli
xchg
dec
adc
add
clc
push
cmp
es
mov
hlt
push
jae
movsb
inc
inc
shr
aam
fnstcw
add
pop
aam
movd
ljmp
sub
insl
xor
or
das
out
dec
jl
xchg
mov
aaa
sub
add
jecxz
lahf
mov
sbb
pop
xor
sbb
int
pop
mov
adc
addr16
sub
cmp
int
inc
push
mov
push
mov
popf
imul
jno
cwtl
or
cmpsb
cltd
outsl
pop
repz
sub
hlt
stos
inc
cmp
dec
inc
adc
adc
in
ss
in
dec
repz
cmp
pop
mov
pop
movsb
fwait
inc
scas
and
mov
outsb
push
aad
mov
icebp
repnz
mov
cld
xor
xor
inc
sbb
enter
dec
add
js
in
shrl
xchg
cltd
cmp
call
inc
lds
mov
push
inc
andl
into
fwait
sbb
adc
sbb
sbb
in
out
mov
rclb
incb
push
mov
mull
sbb
stos
sbbb
push
mov
or
out
out
or
adc
mov
dec
into
xor
in
push
popf
fildl
mov
push
dec
and
lcall
aas
mov
fimuls
or
pop
std
cmp
sbb
sub
popf
std
jp
jmp
or
xchg
sub
dec
pusha
mov
push
cmovg
cmpl
mov
popa
or
mov
adc
pop
mov
push
out
pop
xor
fnstsw
mov
push
out
sbb
pop
fcmovnu
out
addr16
pop
inc
jge
cltd
and
jmp
mov
aam
sbb
jnp
ret
add
jne
jo
loopne
lods
push
incb
push
cld
push
mov
repz
aad
pop
mov
inc
es
out
in
cli
and
subb
fisttpl
stc
sub
sbb
xor
xorps
fidivrs
push
fsubr
cld
push
fwait
fdiv
push
lea
sbb
aas
inc
cld
into
dec
out
in
xchg
sbbb
in
push
int
loope
ficoms
stos
gs
arpl
int
xor
mov
popf
in
es
jb
and
push
in
in
pop
or
pop
fs
inc
mov
push
insb
test
mov
push
in
popf
mov
int
in
cmp
adc
inc
ret
out
icebp
jno
xchg
push
insl
repz
or
mov
xorl
in
and
push
in
sub
arpl
sbb
lret
fsubrs
mov
push
scas
movsb
popa
cs
jl
scas
sbb
inc
lret
lock
lock
fisubs
push
pop
mov
xchg
cmp
push
out
and
fs
aad
sub
mov
cmc
mov
mov
in
in
into
sahf
jg
jae
cmc
pop
dec
xor
js
mov
push
hlt
xchg
cs
out
lods
int
xor
mov
xchg
sti
stos
aaa
adc
aaa
push
imul
out
xchg
mov
mov
js
orb
out
pop
imul
imul
shrl
adc
push
pop
ja
jne
sub
jg
jne
cwtl
and
inc
aad
or
stos
rcrb
xlat
mov
mov
add
cwtl
popf
pop
jae
mov
mov
inc
mov
or
cmp
sub
jne
and
popf
aaa
int
test
movsb
jbe
push
dec
in
cltd
in
or
jne
push
nop
jae
cltd
jae
push
adc
cmp
shll
js
sbb
push
aam
lret
xor
inc
sub
inc
and
daa
cmpsl
and
ss
jnp
mov
adc
popf
lret
pop
add
outsb
sbb
mov
scas
sbb
int
sbb
and
mov
fiaddl
cmp
inc
jne
out
sti
xchg
mov
jl
stc
mov
rcr
test
pop
inc
rorl
mov
adc
movsl
or
push
and
mul
xchg
test
jg
and
pop
out
movsl
mov
adc
push
xor
jp
xor
mov
sti
push
pop
lahf
bsf
mov
daa
cmp
mov
jge
ja
cltd
xor
int
mov
imulb
cld
mov
xchg
lods
jae
inc
jecxz
mov
dec
and
int3
mov
in
mov
lds
pop
mov
mov
mov
test
imul
inc
stc
cwtl
mov
sbb
xor
ret
inc
lret
push
xor
fdivp
dec
xor
incl
cmp
fidivrl
sub
jge
and
xchg
cmpsb
sbb
mov
xchg
in
xorl
jb
and
inc
ss
mov
jnp
neg
xlat
arpl
das
test
mov
icebp
shll
cld
lds
in
mov
stos
mov
mov
pop
dec
fildl
sarl
insl
sub
jg
int
cmp
push
mov
xchg
lods
inc
lret
fxch
stc
mov
mov
push
push
sub
xlat
inc
push
lret
mov
test
ret
out
sub
mov
pop
push
sbb
mov
xchg
ss
loopne
push
pop
iret
insl
lret
data16
addr16
mov
add
cltd
pop
ja
and
dec
adc
mov
xor
or
inc
in
mov
sub
xchg
cmpsb
data16
je
pop
outsb
loop
sarb
sbb
rorb
ficoml
mov
xor
hlt
outsl
mov
mov
mov
aad
pop
pop
imul
pop
push
push
pop
cmp
call
jae
in
idivb
rcrl
xchg
sub
loope
add
out
xchg
dec
in
or
xor
dec
sbb
dec
and
pop
lock
mov
sub
imul
pop
iret
cs
lret
cmpsl
icebp
lods
push
cli
subl
sbb
js
fnsave
pop
jb
jmp
in
repnz
lods
sub
mov
adc
sbb
int3
lea
xor
mov
cltd
push
test
js
xchg
adc
mov
pop
adc
scas
sbb
out
lods
xor
mov
lret
mov
xor
icebp
mov
mov
popl
std
sub
push
sub
pop
enter
out
outsb
dec
cs
cmpsl
cmp
movsl
xchg
add
add
sbb
insl
arpl
jbe
mov
mov
mov
jp
cltd
xorl
inc
imul
leave
or
sbb
xchg
inc
out
sub
imull
pushf
out
outsl
adcb
push
or
repnz
mov
insl
ja
xchg
stos
mov
imul
or
fmul
and
cmpsb
es
sub
scas
or
pop
fsub
stos
sub
inc
pop
push
aas
push
mov
punpckhbw
ljmp
out
nop
dec
cmp
into
lods
test
jb
les
mov
xchg
sahf
cld
add
lods
adc
sahf
adc
mov
js
sub
xor
sbb
lock
mov
test
les
call
and
mov
pop
ffree
inc
sub
mov
ret
repz
lods
sub
rcrl
addr16
ret
jp
imul
divps
addr16
sbb
imulb
lcall
and
dec
dec
jns
and
je
mov
pop
pop
xchg
stos
test
sti
add
pusha
mov
imul
xchg
pushl
icebp
mov
mov
jp
sahf
xlat
xor
push
adc
push
test
shll
xchg
ja
out
dec
pop
imul
sbb
push
mov
ja
sarb
sbb
adc
push
xchg
out
xchg
int
mov
pop
imulb
pushf
stos
inc
enter
movsb
add
movb
add
xor
dec
jae
aam
sbb
sbb
inc
outsb
stos
fwait
shrl
xor
dec
test
push
into
or
sbbl
scas
lahf
jnp
jno
out
ret
cli
lock
test
int3
movb
mov
les
ret
arpl
jmp
jmp
jb
pop
ret
or
pushf
movsl
sbb
test
sub
mov
ljmp
mov
into
test
shl
mov
arpl
popa
sbb
popa
divl
jg
sub
dec
cmp
sbb
imul
inc
out
es
in
lods
cwtl
scas
adc
fnstcw
test
iret
jbe
jo
mov
cltd
inc
ret
sub
adc
in
dec
paddusb
pusha
mov
dec
or
jne
add
icebp
and
pop
in
iret
sahf
jge
dec
ret
data16
jp
xor
stc
cmp
xor
mov
mov
ret
push
jns
jmp
ljmp
add
stos
dec
fwait
out
pop
cmp
or
jle
in
pop
fdivl
int
jno
xchg
les
and
jle
mov
jmp
cmpsl
stos
pop
aaa
adcb
push
jecxz
repz
jmp
dec
shll
sub
push
add
add
xchg
into
imul
jl
dec
mov
rcr
push
fistpl
ds
aaa
mov
cmp
divl
push
jb
mov
repnz
movsl
add
sbb
pop
adc
nop
in
aam
adc
scas
jecxz
adc
push
enter
jb
dec
es
movsl
fwait
mov
xchg
popf
pop
std
shr
addr16
popl
cmp
dec
call
adc
and
jl
mov
sub
xor
push
cmp
in
adc
sub
adc
mov
push
data16
lock
pop
push
into
jp
mov
add
push
dec
insl
sahf
lea
push
fcompl
enter
popa
ja
fnstcw
lods
xor
sub
neg
push
loop
xchg
pushf
movsb
add
jl
xchg
cmp
lcall
mov
sub
pop
out
xor
aam
addr16
xor
mov
subps
out
mov
pop
loopne
lea
lods
lret
add
xchg
dec
enter
jmp
jb
ret
sub
push
xchg
sub
das
orb
cmp
jp
jmp
xchg
push
and
and
loope
xor
jg
out
popa
add
adc
out
jno
xchg
mov
cli
and
pop
lods
js
sbb
lods
ds
xchg
lea
pop
lcall
out
sbb
xchg
inc
lods
mov
lahf
mov
adc
mov
stos
xchg
das
xchg
ret
mov
shrl
mov
test
push
lods
test
mov
add
or
fistl
negb
cltd
fdivs
das
cmp
push
xor
lret
bound
jnp
insb
dec
mov
push
lock
fdivp
inc
xchg
mov
cmc
loope
ss
movb
stos
add
inc
andb
xchg
in
jp
and
jg
push
inc
stos
ds
jl
decl
dec
int3
outsb
lret
jg
subb
jp
or
ja
out
mov
xchg
pop
push
inc
andl
jle
jmp
mov
sub
xchg
jecxz
insl
data16
icebp
xchg
mov
xor
gs
dec
leave
pusha
mov
sbb
out
mov
cltd
xchg
inc
mov
xchg
in
loopne
ror
pop
lret
push
cmp
out
test
jmp
icebp
push
dec
dec
mov
shrl
out
inc
rcll
mov
push
jl
add
mov
jl
daa
jne
jge
mov
gs
scas
xchg
int
adc
and
bound
jne
push
ret
inc
jnp
gs
in
pop
xchg
fcmovu
mov
cmp
mov
inc
sub
add
icebp
or
or
divl
mov
lcall
dec
add
sbb
jae
sub
fmuls
cli
mov
pushf
pop
mov
and
outsb
add
nop
popa
or
cltd
sti
lahf
insb
jmp
mov
int3
jnp
xchg
stos
mov
xlat
lret
inc
or
add
movsb
add
in
daa
ds
repz
fcmovb
repz
or
push
cmp
lods
loopne
test
mov
dec
out
pop
aas
daa
push
sub
out
movsb
jb
jae
mov
mov
xchg
xchg
push
pop
iret
fidivrl
mov
xor
repnz
sbb
inc
sbb
movsb
andl
jl
pop
push
leave
lret
cmpsb
jne
jg
mov
in
inc
sti
adc
adc
adc
jo
pop
pop
adc
rolb
stos
sub
cmp
nop
lret
jecxz
je
push
popf
mov
in
or
add
cs
sub
in
push
lds
aaa
mov
movsl
shrl
shl
add
stos
movzbl
dec
mov
xchg
mov
sub
rcll
cwtl
xor
xor
mov
das
and
daa
jg
addb
outsl
add
add
xor
xchg
xchg
jb
adc
outsl
outsl
movsl
mov
sbb
cmp
adc
ret
jbe
xchg
pop
jp
add
lea
orb
and
idivb
cmp
xchg
js
test
dec
xor
pop
movzbl
dec
push
sub
mov
ljmp
shlb
lods
sub
stos
test
jecxz
jnp
mov
cmp
inc
pop
popa
je
mov
aaa
rcrl
lock
out
or
sti
std
mov
ss
mov
or
andl
mov
pop
nop
push
mov
mov
loope
adc
mov
stos
fisubl
inc
jne
cmc
movsb
sbb
jne
jle
push
aas
popa
cwtl
sbb
outsl
or
in
sbbb
or
stc
outsb
pop
cmpsl
dec
dec
into
cmc
rcll
test
jnp
dec
ss
bound
cmp
adc
adc
icebp
jmp
mov
out
or
nop
or
test
je
push
in
loopne
test
cmp
push
sub
sbb
inc
dec
adc
sbb
loope
sub
xor
cmp
andl
xor
pop
movsl
unpcklps
inc
sarb
scas
or
loopne
pop
imul
sbb
cmp
fwait
enter
cltd
sub
dec
arpl
dec
sub
stos
pushf
repnz
fcoml
pop
push
sub
push
mov
ljmp
test
daa
icebp
push
in
les
pop
pusha
lds
push
testb
dec
or
jge
hlt
scas
ljmp
cli
push
es
or
pop
jbe
cli
icebp
jp
mov
dec
cld
repz
insb
adc
mov
and
mov
inc
adc
jno
out
pop
or
outsl
shrl
sbb
mov
xchg
cmp
int
fsubrp
fnstenv
test
jge
testl
sub
leave
sbb
repz
jnp
and
xchg
jnp
sub
cs
adc
xchg
push
scas
cmp
xor
insb
arpl
cmp
xchg
or
cmp
and
mov
out
fwait
enter
cmp
bnd
pop
push
rclb
icebp
xchg
or
jne
lahf
sbb
push
fstl
in
movsl
mov
pop
mov
lods
adc
aaa
push
add
lock
insl
imul
fstl
xchg
pop
aaa
stc
dec
push
adc
lds
pop
cli
repnz
negl
inc
lcall
out
jno
out
daa
xor
pop
and
rcrb
jmp
sub
mov
jae
hlt
popa
insl
inc
test
test
incl
mov
pop
ds
ds
imul
add
dec
rcll
mov
xchg
mov
inc
push
push
call
dec
outsb
sbb
push
sub
ljmp
or
sbb
mov
mov
clc
xchg
loop
or
jmp
jle
idivb
cmovs
test
in
cmpxchg
add
xor
loopne
mov
sbb
cwtl
jmp
fcomps
gs
scas
lods
aad
jmp
insl
daa
lea
fcoml
ss
and
outsb
mov
in
add
and
stc
flds
xor
push
arpl
push
push
popa
push
in
sub
lods
fisubs
test
and
add
sahf
nop
cs
lock
jmp
push
xchg
scas
xor
mov
inc
js
inc
pmulhw
addr16
cwtl
inc
ret
scas
xchg
xchg
lret
mov
iret
mov
pop
add
mov
or
mov
dec
pop
mov
ljmp
lea
and
fidivrs
jns
or
jno
std
mov
and
pushf
pusha
jmp
in
dec
xchg
lahf
inc
div
cmpsb
cmp
sub
xlat
push
xchg
cmp
stos
es
hlt
xor
sbb
ljmp
jae
jbe
cli
jo
imul
mov
and
lock
adc
insl
pop
jbe
add
clc
lods
shll
sbbl
mov
mov
xlat
pop
mov
and
add
aas
nop
sub
cmpsb
out
cmp
fcompl
aaa
sbb
loopne
fnstcw
test
mov
mov
push
hlt
arpl
pop
das
add
adc
xchg
xchg
fwait
pusha
nop
hlt
add
pop
or
and
hlt
adc
dec
lock
mov
xchg
dec
fisubrl
push
int3
js
jbe
xchg
mov
jp
and
popa
cmpsb
pusha
and
repz
out
sbb
xchg
or
fildll
cli
and
sbb
xchg
aaa
lods
xorb
mov
sub
mov
pop
cltd
pop
push
pop
push
iret
sahf
mov
insb
cmc
jg
mov
fwait
loop
sub
bound
push
mov
stos
repz
out
xchg
lret
fmull
pop
dec
xor
cmp
dec
lret
cmovg
subl
jg
fsts
mov
in
xchg
call
movsb
test
sahf
out
fidivl
fnsetpm(287
out
inc
mov
dec
jns
mov
inc
cmp
gs
cmp
test
inc
and
mov
test
fs
stos
jbe
jecxz
xchg
gs
add
lea
imul
gs
cli
cmpsb
out
xor
out
pop
sub
sub
inc
call
cs
mov
dec
mov
or
cmp
ja
push
enter
sub
pop
and
ds
mov
pop
pop
dec
cmp
pushf
push
sti
testb
insb
or
fildl
enter
lods
ret
cmpsb
imul
adc
cmp
push
mov
mov
xchg
mov
aad
sti
dec
add
push
gs
int
testb
mov
or
out
and
int3
jg
arpl
cmpsl
mov
mov
xor
pop
push
test
repnz
sub
fisubs
filds
mov
dec
push
inc
sbb
sarl
fs
movsl
lods
shrb
jne
in
inc
enter
mov
mov
jns
invd
in
mov
jb
inc
mov
fsubrl
mov
cld
lock
mov
dec
mov
add
data16
sbb
sbb
pop
push
pop
sbb
mov
clc
jnp
aaa
in
jo
add
pop
xchg
xchg
fdivrl
stos
ss
and
cmp
movsb
int3
jae
jne
sbb
scas
cmpsl
inc
cmc
scas
inc
ss
iret
idivl
adc
icebp
and
and
enter
popf
sbb
mov
dec
ret
lret
movsl
dec
add
mul
subb
jae
mov
cwtl
andl
aas
test
and
xor
dec
in
jbe
dec
loop
imul
xor
mov
mov
jb
pop
mov
testl
sahf
jl
mov
xor
enter
or
adc
test
cmp
xchg
subb
adc
popa
jb
pop
add
push
inc
sbb
es
mov
imul
mov
lret
enter
inc
movsl
xchg
emms
inc
mov
and
cmpl
and
sub
xor
maxps
adcb
std
push
test
std
xor
mov
jo
inc
sbb
movb
add
jp
inc
dec
or
insl
mov
pop
outsl
mov
xchg
mov
xchg
ja
mov
dec
push
es
mov
ds
mov
sbb
ljmp
xor
xchg
stos
lahf
push
mov
in
leave
sbb
push
sarl
jl
ret
sbb
imul
sub
jns
and
imul
cs
or
fsubrs
jl
push
daa
leave
cmp
add
jnp
xchg
mov
push
inc
push
sbb
mov
scas
sahf
rorb
repz
sti
sub
int
sub
jecxz
xchg
int3
fwait
xor
push
jmp
aaa
mov
cmp
call
test
dec
aad
pusha
mov
push
and
mov
fwait
jb
js
pop
addl
cmpsl
inc
jb
imul
cli
in
fcompl
mov
push
xor
sbb
or
mov
pop
fldcw
iret
xchg
daa
test
imul
mov
inc
mov
add
fxch
insb
push
dec
sbb
out
sub
jl
jl
mov
pop
cltd
pop
outsb
insb
popf
cmp
nop
jns
sbb
mov
adc
repz
adc
pop
lret
scas
insl
clc
jg
out
push
push
lcall
add
sbb
push
mov
addr16
mov
das
mov
adc
cmp
sbb
and
pop
out
test
fsubl
and
dec
xchg
adc
pop
out
gs
sbb
sub
cld
pusha
jne
pop
aaa
jae
lods
sbb
icebp
cld
leave
pop
jno
lahf
xchg
sbb
xor
lods
adc
sbb
imul
inc
sarb
iret
cmc
scas
out
adc
mov
in
xor
data16
sub
xor
pop
mov
cli
popa
mov
pop
dec
imul
aas
arpl
pop
or
imul
addl
aam
sbb
jno
xchg
fcomp
adc
mov
jp
xor
aam
adc
fs
icebp
loopne
sbb
fs
fildl
xchg
dec
xchg
les
fsqrt
pop
mov
movsb
mov
inc
inc
xchg
insl
mov
push
xchg
iret
add
cmp
insl
push
inc
dec
jne
mov
cmpsl
add
lret
mov
push
xchg
pop
pop
and
int3
add
jecxz
pop
pop
addb
or
movsl
insb
jnp
or
mov
jae
push
aam
test
fs
jo
incb
pop
subl
cmc
and
add
pop
aam
add
nop
repnz
mov
roll
pop
push
andl
mov
jne
xchg
adc
divb
adc
and
jb
mov
out
inc
xchg
icebp
fcos
enter
inc
ret
sahf
cmp
iret
cmpsl
dec
mov
fisttps
jl
out
aas
add
idivb
add
push
pushf
repnz
pop
mov
add
lods
add
shll
add
out
testb
std
mov
test
lcall
or
or
mov
pushf
mull
cld
das
out
mov
scas
in
xchg
in
fwait
int3
shll
outsb
in
repnz
sub
leave
idivl
andl
pop
in
int3
popa
add
sub
sub
pop
test
cmpl
ds
cwtl
xor
pop
arpl
cmp
jnp
cmpsb
inc
pushf
ffree
push
sarb
fnstsw
lods
daa
pop
pushf
fbld
stc
dec
in
fcomps
jmp
fs
fwait
jne
push
dec
xchg
sahf
scas
jmp
mov
xchg
mov
cmp
pop
mov
in
xchg
movsb
xchg
pop
pop
or
mov
pop
lret
int3
and
jp
pop
dec
pop
stc
xchg
and
push
sub
mov
std
sbb
ret
xchg
movsl
lret
fimull
mov
inc
pop
dec
aas
adc
lahf
inc
jb
test
jmp
dec
mov
pop
sub
imul
xor
sbb
ss
into
test
or
add
fcmovnbe
push
lock
adcb
dec
orb
jp
aas
jle
dec
mov
and
adc
mov
je
fs
sub
jne
out
push
mov
test
lcall
pop
arpl
sahf
push
loope
pop
inc
shll
adcl
int
mov
jmp
jns
adc
int3
pop
ja
inc
aam
decl
mov
adc
mov
cmp
adc
ffree
xor
out
cmp
xor
test
sbb
push
sahf
jns
sub
test
sti
lcall
jecxz
xor
jl
sub
ja
loopne
call
dec
or
stc
pop
add
and
pop
into
pop
dec
std
xorl
mov
push
loopne
mov
in
sbbb
mov
dec
sbb
icebp
jns
clc
cmp
add
mov
in
xchg
subl
in
cmc
pop
sahf
cmpsb
es
scas
sti
popf
popa
pop
fildl
scas
mov
cmpsb
jle
jbe
aad
mov
jmp
dec
mov
ljmp
popf
and
stc
mov
iret
fnsave
push
rcrb
dec
sbb
xor
aad
jmp
mov
mov
cmp
jo
dec
sbb
test
push
out
adc
push
inc
sbb
es
pusha
inc
cmp
pop
leave
and
mov
pop
pushf
popa
mov
outsl
adc
dec
xchg
pop
repnz
jecxz
sbb
or
xor
inc
adc
sub
popa
rorl
sub
and
bound
iret
sbb
cmpl
dec
lods
stc
es
cmp
aad
pop
lea
sbb
jmp
mov
lea
dec
movsb
stc
or
cltd
xchg
cmp
clc
cmp
aam
xor
adc
mov
xlat
sbb
mov
cmp
add
xchg
push
jmp
push
pop
cmp
xchg
iret
arpl
cmp
dec
cmpsl
adc
sbb
add
cld
aad
clc
cmp
enter
push
pusha
jl
popa
pop
bswap
mov
insb
push
xchg
cltd
cld
cld
cwtl
push
xlat
test
mov
fldcw
jae
sbbb
rcll
pop
push
and
mov
adc
xchg
into
shll
jecxz
dec
aam
push
popa
pop
jecxz
jns
push
mov
dec
lcall
adc
sbb
gs
jle
mov
mov
cmc
push
das
fmuls
imul
pop
xor
divb
dec
shl
aaa
or
push
jae
xor
imull
insl
push
sti
mov
add
and
aam
mov
xlat
in
sub
insb
pop
adc
lahf
gs
mov
inc
fs
nop
gs
jmp
mov
adc
sbb
xchg
or
add
adc
mov
loop
stc
push
ds
cmp
push
push
sbb
in
pop
dec
mov
filds
jp
inc
cmp
mov
or
jo
jle
out
mov
nop
es
int
inc
pop
pushf
bound
mov
jb
loope
mov
arpl
pop
xchg
jmp
inc
and
adc
leave
push
add
jmp
inc
push
pop
cmpsb
iret
mov
xchg
sub
pop
fstl
pop
cmp
sub
inc
pop
in
jmp
mov
aas
lahf
add
nop
push
cmp
loope
pslld
inc
outsl
jmp
movsb
pop
xchg
sti
pop
xor
shrb
callw
jl
fiadds
fs
mov
mov
fdiv
xchg
insb
es
mov
pushf
mov
mov
cmp
arpl
lods
test
mov
sub
sub
dec
mov
cmpsb
aad
sbb
sti
sbb
mov
imul
fnstenv
adcl
xchg
jns
aas
fiaddl
xor
mull
rclb
sbb
dec
data16
daa
orl
push
cmp
sub
into
mov
mov
push
pop
mov
xchg
sub
mov
dec
icebp
xchg
mov
mov
and
int3
imul
xor
daa
jmp
sahf
dec
add
mov
imul
stc
insl
mov
or
mov
lcall
rcrl
je
out
push
adc
or
test
mov
call
scas
outsl
aaa
xor
dec
std
mov
mov
push
and
es
movb
in
dec
js
add
jno
xchg
lock
dec
shl
add
or
adc
dec
mov
pop
loope
sbb
push
lahf
es
add
and
jge
repz
movb
rclb
ds
and
mov
dec
xchg
call
cmp
xchg
stos
mov
sbb
stos
clc
adc
jo
jge
mov
ret
adc
inc
xchg
xchg
pushf
push
adcb
cwtl
push
shll
push
call
pop
cwtl
les
inc
test
movsb
add
xor
stos
sbb
shrb
xchg
push
ret
mov
fldt
cmpsb
cmp
push
cmp
pop
lret
add
xchg
xor
repz
ds
xor
push
jmp
and
rcr
adc
cmp
lcall
add
cmp
xabort
into
pop
dec
cmpsl
hlt
dec
fndisi(8087
mov
mov
inc
jmp
sub
inc
divb
mov
lahf
or
mov
icebp
cmp
or
clc
xor
jmp
mov
inc
mov
negl
lret
fcmovu
mov
das
rcrb
inc
and
pop
lds
pop
mov
sbb
inc
inc
or
mov
mov
xchg
shl
or
or
cmpsl
jbe
je
push
cmp
add
jl
js
movswl
outsb
xor
cmp
mov
adc
in
int
add
fdivrp
pop
push
les
lods
es
test
pop
std
mov
or
jge
dec
outsb
add
inc
das
icebp
stc
adc
cmp
cmpb
xor
pusha
mov
leave
pop
enter
sarb
addr16
pop
mov
mov
dec
adc
sub
jecxz
cmpsl
outsl
ljmp
mov
imul
mov
mov
insl
xchg
andl
sbb
iret
push
mov
mov
lret
inc
xchg
sbb
adc
fnsave
adc
inc
jne
xchg
add
sub
popf
aaa
icebp
mov
cmp
push
out
push
clc
cmpl
imul
addb
fisubl
popa
xor
dec
mov
inc
scas
out
push
dec
ds
pop
inc
fs
out
mov
or
xchg
in
and
xchg
aas
sbb
stc
movsl
xchg
fildll
sbb
cmp
sub
adc
and
inc
sahf
add
dec
mov
stos
push
lds
dec
sub
pop
or
test
jmp
mov
cmpsb
mov
push
lahf
xor
mov
gs
jge
icebp
sbb
mov
stos
sbb
sarl
shll
loopne
or
mov
cwtl
add
ss
cmp
insb
scas
pop
movsl
mov
xor
pop
ret
xlat
pop
test
push
xchg
jge
add
shll
push
imul
enter
test
test
add
stc
jp
pop
sahf
shlb
mov
icebp
sahf
jg
outsl
and
pop
mov
sti
push
xor
cld
popa
xchg
adc
fdivs
repnz
push
es
jge
pop
shll
aad
ret
popl
fwait
sbb
scas
fisubl
outsl
int
test
dec
imul
sbb
scas
lods
jne
xchg
mov
ret
push
xor
imul
cmp
lahf
mov
add
nop
mov
xchg
xchg
and
lock
mov
adcl
int3
int
fcmovnb
add
popf
fcmovnu
int3
pusha
add
les
adc
push
ficompl
sbb
faddl
int3
xor
sbb
sbb
pushl
rcrl
cmp
js
clc
sbb
sbb
popf
mov
pushf
push
icebp
mov
lods
fs
nop
pop
aad
daa
aam
jns
lcall
lret
cmp
pop
loop
xor
int
pop
movl
or
cmc
test
pop
rcr
cld
ret
inc
repz
xchg
pop
pop
xchg
lret
insl
pop
cltd
cmp
test
in
pop
xor
out
das
adcb
jg
jle
push
pop
ljmp
gs
in
or
or
dec
loopne
lret
cli
jge
inc
cmp
push
or
sbb
sbb
add
loopne
push
rol
sbb
ja
lods
xchg
mov
jno
testb
push
pop
inc
or
stos
or
push
loop
stos
mov
pop
fisttpll
xchg
gs
mov
xor
mov
addl
fwait
sti
jns
aas
cltd
add
jns
cmp
lret
pop
insl
lea
inc
jg
out
in
adc
adc
movsb
pop
jle
cmpsb
or
cmp
pusha
fidivs
cmp
pop
leave
xchg
sub
xchg
insl
popf
in
jl,pt
aam
mov
and
cwtl
sahf
lret
xor
or
fdivs
sbb
int
push
mov
sbb
cmp
sbb
mov
inc
scas
adc
repnz
mov
mov
pop
sbb
cmp
int
and
test
les
add
push
int3
xchg
and
cmpsb
mov
fisttpl
lahf
xor
push
pop
rclb
sub
or
jne
pop
mov
cld
insl
push
adc
ret
fwait
add
leave
out
out
sbb
ds
cwtl
xchg
rcll
pusha
jb
cltd
into
inc
adc
movl
add
xor
inc
or
aas
mov
sub
jns
cmp
inc
addb
sahf
mov
mov
hlt
jo
stc
push
fbstp
sub
jl
fmull
ret
rcrl
jecxz
mov
mov
js
andb
jge
adc
movsl
jge
cld
movsb
bnd
dec
lods
cs
cltd
mov
jo
aad
add
rcll
notb
inc
popf
or
pop
push
xlat
movb
orl
in
and
mov
inc
cli
sub
sub
test
xor
inc
inc
sbb
jg
dec
push
mov
xor
mov
dec
lea
pop
inc
mov
lds
push
inc
lds
orb
lret
inc
int
stc
cmc
xchg
jmp
adc
mov
push
sub
xchg
add
sbb
sub
loope
dec
inc
sbb
xchg
sub
mov
mov
mov
movsb
cwtl
loope
and
xor
lock
xor
adc
cltd
sti
mov
inc
ljmp
adc
cmp
dec
jecxz
push
int
inc
shrb
cli
cmp
and
mov
fldenv
lea
jns
pushf
scas
add
and
push
imul
inc
xchg
and
mov
push
or
pop
xchg
test
pop
stc
clc
fnstsw
ret
pop
mov
sbb
cs
sub
dec
adc
mov
imul
sub
test
stc
test
sub
inc
ja
add
mov
jb
pop
addb
inc
fdivs
inc
icebp
adc
dec
popf
jnp
and
xor
sar
jb
sarb
push
push
cmpsb
dec
or
sbbb
push
rorl
mov
outsl
sub
add
xchg
xchg
dec
mov
std
and
jmp
jno
mov
pop
and
sbb
je
or
inc
sub
sub
dec
adc
jmp
sbb
mov
jbe
rolb
or
orb
push
mov
or
mov
dec
imul
lret
jg
pop
test
lret
das
movsb
je
dec
loope
xchg
add
aam
push
jge
fwait
or
loop
jae
movsb
movsl
stos
in
ror
cmp
cmp
sbb
dec
push
lcall
xchg
fiaddl
dec
out
out
cmova
push
xchg
scas
push
push
add
push
jnp
mov
jmp
jne
or
xor
cmpsl
and
fisubrs
xchg
push
mov
js
xchg
js
push
push
jp
test
mov
pop
std
mov
jp
lods
jle
sbb
mov
push
fadd
movsb
shrb
in
adc
fcomps
inc
test
lea
pop
gs
mov
jecxz
fnstenv
into
lcall
pop
cmc
jp
xchg
or
sub
sbb
lea
into
jo
cmp
lock
rcr
add
cld
das
lods
lock
nop
mov
and
sub
bnd
push
hlt
loop
repz
jecxz
sbb
cli
push
jl
and
loope
push
inc
mov
pop
dec
ret
dec
cmpb
xchg
sbb
pop
mov
cmpsb
jmp
shl
cmpsb
test
shll
loop
cmp
cmp
lods
xor
mov
cmp
lahf
repnz
mov
or
adc
call
jns
mov
sarb
mov
pop
cmpsl
lods
mov
mov
mov
push
add
into
sub
insl
sbb
sub
and
xor
pop
mov
js
mov
lea
nopl
je
sbb
push
mov
cmp
icebp
push
sbb
fwait
nop
adc
inc
adc
xchg
mov
dec
push
jl
icebp
and
inc
inc
jle
ljmp
daa
pusha
rcrl
xor
mov
outsb
and
xor
pop
mulb
lcall
mov
push
inc
adcb
stos
or
jnp
out
rorl
jg
add
xor
cmpsb
mov
push
mov
nop
out
fnstenv
push
fldl
adc
sbb
inc
lods
pop
mov
mov
mov
test
les
jno
mov
jmp
dec
cmpsb
stc
fmul
cli
aaa
mul
mov
jno
imul
inc
inc
pop
push
pusha
lcall
xchg
ds
shlb
lods
cmpsb
arpl
sar
push
push
pop
add
and
mov
add
jp
test
mov
shll
or
stc
addb
cltd
fistl
dec
mov
pop
test
stc
idivl
std
lret
rorl
addl
sub
mov
mov
lcall
insb
std
out
dec
loope
andl
movsb
sub
lahf
into
ja
dec
imul
sub
add
jmp
mull
sub
stos
les
sbb
cmp
jle
cwtl
mov
push
pop
mov
in
xlat
loopne
sbb
cmpsb
cli
rcll
mov
imul
jmp
js
leave
inc
jg
jo
dec
add
xchg
mov
pushf
cmp
inc
xchg
sbb
test
mov
fcomps
push
pop
and
mov
push
push
popa
xchg
xor
push
mov
cmc
aaa
pop
and
test
ffree
out
cld
pop
sub
cltd
aaa
adc
lahf
jp
lods
aas
jo
imul
dec
dec
and
mov
fwait
sbb
xor
jecxz
inc
and
fdiv
mov
xor
xchg
inc
call
mov
add
adc
testl
mov
mov
call
mov
mov
out
sub
xor
pop
jae
data16
adc
into
jecxz
iret
scas
dec
lahf
xchg
mov
rorl
sbb
dec
lods
dec
and
push
out
sbbl
pop
mov
sub
cmp
in
and
in
sbb
add
mov
outsl
mov
sti
and
and
pop
addl
cld
nop
and
loopne
inc
xchg
cmpsb
jnp
sub
insb
pusha
sti
outsl
icebp
push
lods
testb
addb
jg
fisttps
loopne
jbe
jge
xchg
xor
andb
out
adc
addl
inc
cmp
movsl
pop
ret
pop
xchg
leave
stos
sbb
and
rorl
jp
sbb
or
lods
push
jbe
rclb
xor
cltd
xchg
xor
cld
jp
ret
or
stos
xor
or
and
ja
rcrl
push
cmc
sahf
and
aas
sti
and
test
jmp
fsubrp
cmp
cmc
orl
push
push
stc
cmc
and
ja
jne
add
ret
xchg
push
sub
jle
inc
aaa
cmpl
sbb
mov
shr
and
pop
sbb
in
add
cmpsb
outsb
add
inc
in
lret
fsubrl
push
movsl
mov
dec
dec
mov
cmp
cwtl
adcl
adc
mov
mov
pop
or
cli
out
ftst
adc
call
add
ret
dec
inc
test
cmp
ljmp
mov
push
sar
imul
or
cmpsb
leave
add
xchg
xchg
fsub
push
mov
and
in
test
loop
lods
hlt
and
or
cwtl
aaa
cwtl
sbb
bnd
or
and
mov
sbb
es
xor
loop
in
push
imul
js
scas
inc
mov
jns
test
jle
cmp
mov
jge
cmp
cwtl
aam
std
int3
sbb
scas
pop
and
sub
push
fs
inc
jns
into
fdivs
dec
adc
xchg
shl
fmul
mov
jle
and
adc
push
mov
mov
jge
jnp
push
cwtl
mov
cmp
pop
push
cmp
lock
sbb
sbb
loop
and
jb
mov
scas
mov
das
scas
cmp
lods
xor
cmp
cmpsb
xchg
xor
push
mov
fstpl
pushf
std
mov
lret
pop
pop
lods
mov
jp
lret
es
shll
cmpsl
mov
fadd
aas
aas
outsb
cmp
xchg
xor
lds
jbe
lock
roll
cld
mov
cmp
push
push
out
das
pop
cs
movsl
pushf
mov
sbb
repz
push
sbb
jne
scas
mov
int
iret
call
insl
andb
adc
int3
push
pop
or
dec
addl
sbb
dec
imul
cmp
push
aad
andb
mov
mov
dec
mov
dec
mov
stos
pop
test
jp
das
mov
iret
mov
fmull
in
lock
inc
push
sahf
jo
push
mov
ss
xchg
enter
push
sub
hlt
add
and
loop
push
clc
data16
or
cmpsl
jns
movsl
and
add
cmp
push
imul
inc
ret
lret
add
jmp
int3
and
sbb
bound
mov
imul
enter
push
insl
fmull
mov
push
dec
mov
loop
out
shl
xchg
addr16
sub
dec
movsb
adc
add
sti
mov
aas
or
mov
out
push
mov
stos
and
jp
sbb
addr16
mov
int3
mov
mov
push
mov
sarl
mov
ljmp
loop
and
fld
dec
ret
scas
int
stos
mov
adc
or
jo
add
mov
inc
add
out
pusha
scas
pop
mov
xor
mov
push
aaa
repz
dec
xor
mov
pop
imul
inc
addb
sub
fwait
add
or
sahf
push
pop
arpl
ficomps
ljmp
jne
cmp
stc
jle
int
outsb
or
jno
leave
test
stos
jmp
sub
xchg
leave
sbb
ljmp
dec
jmp
push
fdivrs
mov
sbb
jg
lahf
jl
pop
call
stc
jne
mov
xchg
lret
push
insb
pop
mov
and
repnz
jmp
jg
or
lcall
mov
nop
mov
adc
adc
hlt
es
inc
and
shl
dec
sbb
sbb
adc
inc
pusha
pop
inc
mov
mov
sub
leave
lods
add
ds
or
jmp
mov
xor
insb
cmp
adc
dec
roll
enter
and
mov
pop
fwait
shll
cmp
or
adc
out
sahf
scas
inc
push
mov
mov
xchg
lret
insl
cmp
lods
scas
ss
mov
mov
iret
pop
mov
mov
pop
jl
dec
push
jg
or
jl
push
xchg
gs
clc
int
imul
repz
or
mov
shrb
loopne
pop
das
scas
lods
fprem1
pop
xor
popf
xlat
cwtl
push
subl
adc
ret
aas
dec
sbb
sub
repnz
jmp
loopne
movsb
outsl
les
ds
sub
leave
xchg
lahf
jne
leave
fdivrs
mov
xchg
sbb
mov
call
lret
lret
xchg
push
pushf
or
jae
sahf
mov
push
pop
test
ret
addb
rcrl
mov
ficoms
jg
mov
jle
and
cmpsl
jge
and
mov
mov
sub
sub
add
out
mov
repz
movsl
pop
inc
jns
mov
jo
jo
in
jp
mov
shlb
mov
mov
xchg
sub
ficomps
sarl
xor
add
arpl
inc
scas
shlb
scas
xor
sahf
push
or
push
sbb
mov
mov
push
jmp
mov
inc
int
dec
add
xchg
and
fnstsw
std
mov
loopne
outsb
lods
and
scas
gs
fwait
jmp
into
and
push
ss
mov
mov
pop
int
sub
enter
push
inc
pop
mov
jl
popa
mov
dec
pushf
in
jbe
scas
adc
daa
sti
or
dec
and
bnd
mov
imul
addb
gs
xchg
cmpsl
jl
mov
fnstenv
xlat
sub
mov
arpl
mov
nop
insl
adc
dec
pop
or
jnp
nop
outsl
sti
inc
pop
movsb
jne
xor
cmp
add
adc
div
test
cmpl
inc
faddl
mov
mov
insl
inc
pop
inc
into
and
dec
leave
xchg
pop
push
lret
into
fs
sub
leave
dec
incl
inc
jp
popa
adc
dec
outsb
lods
or
inc
outsb
and
jb
scas
aam
outsl
jae
xchg
jne
in
imul
or
xlat
cmpsb
add
shll
mov
pop
mov
lret
in
arpl
outsl
or
sub
mov
adc
add
mov
pop
in
mov
and
adc
outsb
lahf
movsl
add
test
scas
rcrb
push
stc
push
pusha
xor
jg
imul
imul
jmp
iret
xlat
pop
dec
fistpll
sub
ss
fmull
and
fucompp
jns
xchg
test
add
sbb
jecxz
xchg
icebp
and
cs
stos
in
ljmp
dec
in
cmc
cmc
out
cmpsb
loopne
or
inc
cwtl
test
sub
pop
and
jg
loopne
les
repz
jp
aaa
scas
sbb
pop
jae
pop
inc
sbb
jg
push
fdivrp
inc
stos
and
mov
sub
test
in
pop
out
into
mov
dec
in
xchg
pop
nop
mov
sub
mov
out
andl
add
into
push
cs
faddl
ficomps
ljmp
je
dec
push
fucomi
inc
and
loope
movsl
lock
ss
mov
sbb
push
push
cmc
adc
fwait
push
cs
mov
test
or
add
mov
lods
cli
lds
or
out
mov
dec
out
cwtl
jbe
adc
lods
or
sub
ds
cmpsb
xchg
push
mov
pop
mul
pop
lea
jmp
and
push
xchg
dec
mov
fstpt
jb
xchg
in
jmp
imul
lret
in
stos
mov
fmul
pop
loope
dec
mov
jns
mov
inc
ret
adc
add
adc
fstp
fs
test
push
sub
sbb
fimull
pop
arpl
inc
pop
outsb
hlt
mov
xchg
insl
lcall
lods
fsubrs
mov
in
inc
sbb
pop
xor
ret
lock
je
jle
loope
xchg
stc
inc
xchg
sub
xchg
jbe
jl
sbb
xor
sbb
pop
dec
andb
jl
cmpsb
lds
data16
mov
mov
sbb
cmp
popa
cmpb
roll
int
or
adc
inc
rcrl
roll
mov
inc
add
xchg
xor
pusha
leave
cmp
js
jmp
fcomps
popf
adc
xchg
je
inc
mov
outsb
pop
push
push
xor
repz
fnstcw
popa
movsl
xor
aaa
add
xor
imul
jne
xor
in
pop
or
enter
mov
subb
mov
adc
pop
sbb
cmp
pop
repnz
scas
xor
xchg
out
negl
ljmp
outsl
adc
jb
cmpsb
in
mov
fcoml
jmp
in
outsb
mov
add
stos
orl
nop
jge
cmc
push
enter
or
mov
pop
lahf
inc
es
add
mov
ret
xor
mov
mov
add
push
adcl
adc
divl
andl
out
mov
out
lret
movsl
rdmsr
shl
add
mov
jns
in
xlat
add
or
xchg
rcrl
ljmp
clc
inc
push
fwait
inc
popf
aad
test
loopne
hlt
loope
jo
arpl
mov
add
sub
mov
stos
aaa
test
cmp
dec
lret
aad
in
stc
repz
rcl
daa
mov
xor
in
sub
out
decl
imul
test
push
stos
fst
cwtl
stos
add
sub
test
mov
shlb
loop
jp
cltd
pusha
xchg
imul
lcall
inc
adc
sbb
test
movsl
filds
inc
dec
fwait
xchg
xor
sbb
push
push
nop
je
les
xor
sahf
mov
xor
aad
push
int
add
add
sarb
int3
pushf
es
cwtl
dec
jbe
push
clc
outsl
je
lds
mov
adc
inc
hlt
mov
pop
es
pop
lds
xorl
add
xchg
inc
dec
clc
cmp
ljmp
add
cmpsb
enter
mov
les
popa
lods
or
outsb
pop
dec
fmul
or
stos
push
cld
push
into
fimull
add
popa
cmpsl
add
popf
cmp
sub
popf
mov
jecxz
pop
cmpsb
jl
stc
cmc
xlat
jae
loopne
insl
dec
mov
cld
xchg
push
dec
les
adc
xchg
sbb
insl
repnz
arpl
enter
adc
adc
jl
sub
and
imul
fistl
push
push
or
xchg
inc
mov
mov
imul
mov
xchg
inc
jbe
adc
lcall
outsl
mov
push
cmpb
ljmp
nop
mov
xor
ret
pop
sti
in
ret
repnz
mov
lcall
lods
push
and
inc
test
mov
inc
mov
jle
pusha
sbb
gs
inc
out
test
fnstsw
mov
mov
jle
pop
std
mov
test
outsl
ljmp
pushf
push
pop
dec
mov
out
sub
loopne
fdivs
fsincos
inc
xlat
movsb
loop
das
sarl
mov
lds
cmp
pushf
gs
dec
push
cmpsb
in
fiaddl
jbe
mov
iret
in
inc
popf
in
sub
inc
mov
outsb
lds
and
push
cmp
sub
pop
pop
mov
imul
jnp
pop
sub
adc
lcall
cli
fmull
int3
lcall
inc
push
dec
inc
lds
inc
out
addr16
ljmp
or
fmulp
mov
dec
ljmp
bound
mov
nop
sbb
popa
loopne
pushl
hlt
jne
mov
daa
out
xchg
xchg
outsb
jg
cltd
inc
addl
outsb
mov
xchg
mov
or
insb
loop
push
lods
shl
ret
dec
push
les
jmp
mov
add
cmp
mov
repz
idivb
jmp
xchg
pop
push
or
ds
into
stos
imul
pop
pop
rolb
mov
push
sub
and
adc
dec
mov
leave
jg
sub
adc
and
enter
mov
mov
inc
fidivs
hlt
add
cld
fdivrl
fbld
cwtl
dec
pop
mov
lds
jmp
push
lods
ljmp
daa
fisubl
imul
mov
dec
pop
dec
imulb
xchg
adc
or
faddl
push
or
sub
cmovo
stos
push
cltd
mov
movsl
int3
ret
fucomip
or
fucom
mov
pusha
lret
fcomi
test
jb
jno
aas
hlt
lcall
or
scas
dec
sbb
jnp
mov
jecxz
xor
cmp
nop
jmp
xchg
lcall
into
xchg
shll
lret
sbb
sbb
add
inc
sti
stc
and
xor
adc
push
or
jo
mov
dec
cmp
sub
jnp
mov
lret
and
mov
lods
das
popa
cmp
dec
add
popf
and
stc
xchg
jns
out
loopne
cmp
cld
inc
cmp
jl
in
in
adc
cli
sti
add
pushf
xchg
lahf
lcall
cmpsb
xor
cli
dec
iret
lea
lods
pusha
add
dec
je
adc
lock
ficompl
mov
push
imul
mov
sbb
cmc
pop
xchg
stos
cli
jno
cmp
add
mov
in
nop
test
pop
mov
stos
sbb
enter
adc
test
cs
sbb
push
mov
lea
hlt
test
mov
xchg
mov
sarl
xchg
sub
dec
push
xor
adc
popa
inc
and
cmpsb
bnd
outsb
xor
push
sbb
jno
out
sti
xchg
dec
mov
xchg
mov
pop
jo
aam
sub
mov
int
jns
into
sti
icebp
sub
push
mov
pop
into
sahf
adcl
loopne
sahf
cmp
xor
cmovb
dec
add
mov
mov
xor
dec
dec
pushf
test
xchg
out
dec
push
inc
test
xchg
adc
cwtl
adc
jle
sbbb
or
or
decb
xchg
aad
xor
add
iret
inc
fbld
dec
dec
in
in
pop
inc
cmpsl
movsl
in
std
inc
and
movl
dec
lods
add
xchg
and
repnz
fildll
dec
push
xchg
jecxz
push
xchg
aas
das
call
adc
adc
cmp
adc
lods
dec
mov
xchg
xlat
dec
sub
push
cmp
mov
orl
mov
sbb
sbb
loopne
sub
xchg
xchg
arpl
ret
dec
test
cwtl
pop
push
lcall
hlt
jl
mov
and
stos
shll
mov
add
pop
inc
mov
jl
test
mov
mov
push
lods
addr16
and
fdivrp
mov
js
push
sahf
xchg
scas
dec
lea
je
cld
arpl
pop
aaa
out
add
mov
cmp
pop
xchg
mov
jl
fcmove
push
inc
or
fisttpl
pop
xchg
das
mov
sbb
lret
loope
jmp
ret
test
leave
xchg
call
xor
push
dec
mov
jge
loopne
add
outsb
fldt
incb
dec
pop
mov
sbb
mul
xchg
mov
pop
inc
ret
bound
pop
push
insb
scas
lret
out
mov
lds
scas
clc
mov
mov
mov
sbb
mov
sbb
jo
addr16
test
jg
and
add
push
jl
push
ss
mov
inc
push
leave
addr16
je
xchg
mov
call
dec
and
mov
sbb
cld
push
test
mov
cli
cltd
shrb
adcl
sbb
in
cmpl
nop
ret
add
lcall
jg
popa
clc
add
lret
mov
adc
iret
push
sub
xchg
jbe
jnp
lcall
mov
ret
stc
pop
scas
jg
mov
sbb
ror
mov
jecxz
add
mov
xchg
or
ja
push
je
scas
jne
push
sub
addl
jns
mov
mov
pusha
lock
push
imul
push
sub
xor
js
das
or
lcall
cwtl
and
aam
inc
int3
xor
jecxz
outsl
pushf
loope
xchg
sub
cmp
cmpsl
push
stos
out
shlb
pop
xor
mov
stc
ja
push
jne
clc
sub
out
sub
ja
push
push
lods
sbb
movsl
pop
mov
jmp
pop
fwait
and
stos
loope
dec
mov
mov
jmp
in
xor
dec
lock
scas
adc
sbb
sbb
fistpll
push
xchg
push
int
sbb
idivb
outsl
jg
neg
xor
out
mov
outsb
in
cmp
lret
and
dec
mov
enter
mov
xor
push
and
pop
sbb
push
cmpsl
lods
xor
inc
lods
jle
push
mov
dec
xor
mov
xor
sti
rorl
ja
lcall
jmp
or
jmp
lret
dec
iret
jo
fs
test
insb
push
xor
lds
jge
mov
nop
es
movsl
stos
cli
cmpsl
adc
shrb
jg
sahf
js
ret
mov
aaa
mov
inc
mov
inc
mov
lea
push
shlb
inc
xor
lods
outsl
jno
mov
sbb
les
pop
jecxz
push
aas
adc
lods
in
xor
xchg
mov
lcall
jle
sbb
loopne
rcrl
push
jmp
jl
rcrl
mov
ss
fwait
das
ret
jecxz
std
push
cwtl
sub
add
test
xchg
push
mov
mov
ret
sti
pop
mov
sbb
pop
imul
nop
push
mov
jl
mov
adc
movsb
mov
or
insl
adc
mov
fimuls
imul
mov
jp
enter
mov
repz
mov
dec
mov
nop
dec
dec
cvtdq2ps
bound
and
xorb
into
lods
mov
inc
inc
lds
mov
test
sbb
xchg
xor
jl
out
popa
pop
out
into
mov
dec
in
or
fcompl
cmp
push
ror
xchg
pop
fs
dec
mov
xchg
aas
aas
and
or
in
mov
dec
into
in
imul
pop
sar
jg
loope
pushf
and
add
fs
push
inc
sbb
in
xor
les
pushf
cwtl
pop
call
xor
enter
cs
push
in
repz
push
push
mull
aam
or
xor
mov
in
and
xchg
flds
les
js
nop
mov
mov
xlat
pop
xchg
mov
dec
adc
icebp
pop
sahf
add
leave
ds
jmp
inc
in
sbb
cmp
insb
aam
push
push
inc
jmp
push
mov
int3
loop
cmp
pop
jne
sub
cmp
pop
cltd
or
mov
cld
pop
cmp
jg
fadds
or
push
push
pop
in
jns
mov
xchg
insl
or
fidivrs
cmp
je
cmpsb
mov
adc
cwtl
jo
cli
scas
std
loop
in
fs
popa
sbb
or
cwtl
sahf
outsl
sbb
pop
jl
and
lretw
sub
mov
mov
in
or
data16
data16
add
ds
add
xor
fs
xor
add
fnsave
jbe
pushf
icebp
int3
lea
enter
inc
push
stos
mov
xchg
lahf
xor
mov
dec
push
or
cmp
or
les
cmp
mov
sub
and
aam
repz
sbb
stos
fldl
mov
fwait
jne
addr16
push
adc
jge
push
or
adcb
lea
xor
orb
in
mov
add
push
sbb
jne
xor
repz
stos
push
pop
aam
loope
nop
mov
clc
cltd
sbb
jo
fnsave
lret
js
mov
cs
ret
mov
adc
mov
fidivs
in
sub
js
xadd
dec
jbe
incb
sbb
xchg
ret
shll
mov
jb
pop
mov
sbb
and
pop
es
sbb
out
inc
and
xor
inc
add
inc
adc
addr16
sub
pop
cld
addr16
rol
insl
cmc
lods
cmpsb
lea
iret
lcall
mov
dec
clc
pop
inc
arpl
cmpsl
mov
fstpt
test
in
subl
lret
lods
lahf
push
adc
mov
inc
xchg
mov
mov
mov
sub
push
test
fmuls
or
addr16
je
inc
pop
fmull
mov
fsubs
dec
lods
test
ffree
je
and
inc
dec
jmp
pusha
cwtl
adc
insl
inc
insb
push
push
mov
mov
xor
lods
xor
clc
test
sub
scas
imul
mov
and
push
add
xchg
cs
dec
push
pop
or
sbb
movsb
sar
push
ljmp
notl
mov
int3
fstps
xor
subb
adc
shrl
aad
mov
enter
dec
mov
icebp
cltd
ret
or
lods
stos
add
mov
daa
je
or
mov
rcrb
xlat
inc
outsl
mov
adc
das
mov
mov
imul
xor
or
or
ret
ja
push
dec
dec
addr16
cwtl
xlat
sbb
sbb
in
mov
inc
mov
mov
addr16
push
sub
ljmp
test
out
add
cli
mov
stc
pop
popf
scas
dec
in
shlb
outsb
inc
inc
cmc
sti
sbbb
out
mov
popa
ret
cld
lock
insl
test
mov
cli
sbb
add
push
popf
pushf
cltd
cltd
push
push
mov
inc
mov
xchg
pop
pop
loop
in
out
rcrl
mov
sub
xor
push
xor
mov
cmp
loope
repz
dec
dec
fs
inc
mov
jo
pop
and
pop
lea
insl
jmp
jne
cmpsb
out
lods
xchg
mov
cltd
mov
push
pop
insb
mov
insb
mov
pop
shll
pop
xlat
int3
lret
and
fistps
mov
je
pop
jge
movsl
test
sbb
jp
xlat
aam
and
lcall
xor
push
xor
arpl
mov
arpl
rol
adc
inc
insb
xchg
add
clc
sub
and
sti
fs
scas
fldenv
sahf
pop
in
rorb
stos
into
out
jg
nop
je
js
orl
scas
fdivl
pop
mov
shlb
stc
movsl
dec
clc
fnstcw
or
fiaddl
and
int3
pop
cltd
cmp
cmpsl
in
jno
cmp
mov
into
std
add
in
arpl
and
dec
sbbb
into
jne
xchg
mov
sbb
jo
adc
es
add
pop
inc
add
std
sti
shrb
xor
inc
mov
mov
lods
pop
fisubl
in
xchg
or
je
movsl
mov
stos
test
or
dec
lahf
mov
inc
inc
adc
cmpsl
leave
pusha
cwtl
emms
jbe
cmpsl
pop
shrl
jmp
and
or
or
inc
pop
add
inc
jb
mov
jge
fisttpl
xor
dec
pop
xchg
and
jmp
mov
jge
movsb
push
or
scas
faddl
imul
icebp
xor
and
push
jl
dec
sbb
mov
xchg
inc
sbb
cmpsl
pushf
cmpsb
pop
dec
imul
sbb
ret
adc
and
jle
ja
mov
adc
add
pushf
in
and
inc
imul
xlat
fidivl
leave
adc
dec
jne
insl
in
inc
sub
incl
mov
push
pop
cmc
fwait
lds
rorl
sbb
xor
call
out
adc
sbb
mov
xchg
icebp
fnstcw
leave
std
movsb
out
jb
adc
repz
dec
mov
or
jg
aad
adc
negb
inc
inc
inc
sub
repz
pop
jae
lahf
es
sub
out
es
mov
stos
pop
add
fs
fucomi
sbb
addr16
shlb
test
cltd
mov
mov
ds
repnz
pop
push
shl
rorl
pop
fbstp
call
das
push
fldcw
aas
in
inc
movb
jmp
mov
mov
stc
outsl
inc
sarl
dec
pop
inc
jns
push
fidivs
addr16
sbb
or
cmp
mov
inc
jb
pop
aas
lods
jmp
ret
cmp
inc
or
call
jmp
xchg
mov
in
shrl
add
movsl
outsl
in
xchg
aas
inc
lret
xchg
shrb
xor
or
addr16
cmpl
sbb
mov
inc
sbb
popa
movsl
testb
xor
dec
mov
cltd
or
adc
jne
hlt
test
jae
xchg
sti
cli
ljmp
adcl
stos
fs
je
pop
dec
mov
adc
xchg
push
pop
mov
push
push
and
scas
or
xchg
mov
add
cli
push
lret
mov
sub
inc
outsb
mov
les
arpl
nop
icebp
lcall
test
mov
pop
push
loopne
push
pop
orb
sub
sbb
lcall
leave
in
add
sub
push
in
mov
xorw
loopne
lcall
lods
pop
movsb
adc
sti
or
pushl
rcrb
dec
adc
int3
fidivrl
es
stc
xor
lahf
lret
mov
or
orl
add
xchg
js
shlb
mov
jecxz
fsubl
jno
or
mov
or
adc
orb
hlt
mov
dec
divl
push
or
jmp
nop
shr
jnp
int3
das
test
test
imul
xor
or
adc
inc
add
sbb
scas
lahf
jl
setge
cli
mov
aaa
imull
cmovnp
pop
jb
lock
fucomp
mov
and
icebp
fs
mov
idivl
add
mov
push
jbe
pop
adc
add
jge
movsb
push
std
dec
and
cmp
xchg
pop
xor
cmp
int3
fldcw
repz
push
xchg
add
dec
lods
mov
icebp
sub
rorb
sbb
jae
cs
in
pushf
jp
and
mov
pop
mov
repz
insl
cmpsb
jns
pop
aaa
lods
fildll
ret
stc
popf
mov
mov
add
ds
cmpsb
xchg
cmc
and
aaa
rcrl
jmp
cltd
repz
jne
out
jo
test
movsl
mov
jns
xchg
xchg
lods
xor
out
dec
dec
jl
push
xor
mov
adc
dec
mov
lods
aam
shlb
dec
and
loopne
or
mov
jl
shlb
adc
js
mov
aaa
rcl
out
or
cmp
icebp
push
or
dec
fldln2
mov
call
mov
jae
xchg
pushf
sbb
adc
sbb
and
nop
dec
mov
or
jl
lret
inc
xchg
test
enter
xchg
flds
js
std
repnz
addl
pop
pop
dec
jg
fstl
mov
xchg
and
fidivs
addr16
and
xor
jge
cmp
ret
sub
inc
sbb
mov
mov
ficompl
orb
xchg
dec
out
mov
loop
mov
add
int
adc
lahf
mov
add
mov
xor
cmp
jae
sti
das
lcall
gs
cltd
cmp
lods
cmp
or
cltd
es
dec
cmp
sbb
xchg
out
stos
decb
sub
into
inc
mov
xchg
imul
sub
rorl
or
push
pop
test
push
pop
sahf
js
pushf
add
add
dec
add
in
ja
or
mov
bound
mov
xor
mov
push
pop
scas
rcl
repz
push
and
insl
xchg
stos
adc
es
cmp
push
repz
daa
jb
sub
insb
lods
sbb
lcall
mov
xchg
loop
xor
test
push
sbb
and
or
loopne
int3
hlt
cmp
lods
jp
fcoml
sarl
mov
lcall
into
inc
jl
cmp
mov
mov
sar
sub
sahf
es
pop
xor
xchg
sbb
les
mov
repnz
mov
call
mov
push
sbb
inc
pop
xchg
sbb
dec
in
repz
add
inc
and
sarl
ret
scas
sbb
or
pop
push
mov
aaa
frstpm(287
mov
lods
fnstenv
movb
sbb
pop
std
mov
xchg
lret
mov
add
push
lahf
dec
outsl
ljmp
jg
lcall
ds
dec
jl
in
call
jecxz
ljmp
mov
sub
jle
in
shlb
scas
jl
jmp
outsb
sar
pop
xchg
mov
sub
repz
out
lcall
push
sbb
sub
insb
jp
inc
cmp
inc
aas
pop
jecxz
mov
movntq
mov
push
add
stos
roll
outsl
mov
out
mov
mov
mov
adc
sbb
fucom
jne
in
cltd
push
push
and
sub
adc
mov
dec
jecxz
cld
adc
xlat
in
movsb
jl
fdivs
fs
pop
lahf
stc
inc
or
andl
rolb
stos
sar
rcll
xor
jge
scas
push
inc
aaa
mov
or
add
and
leave
into
insl
push
or
jg
dec
bnd
xorl
lock
into
add
ret
push
mov
xchg
mov
push
popa
fbld
sbb
scas
xchg
sbb
sub
mov
inc
dec
push
sub
xchg
dec
jecxz
cpuid
mov
lret
dec
leave
jo
ret
js
enter
xchg
mov
fidivrs
mov
jne
dec
jecxz
fidivl
push
out
add
pushf
jb
mov
or
lahf
jb
push
mov
aam
adc
sbb
mov
or
dec
popf
dec
pop
pop
cwtl
popf
pop
xor
imul
fs
out
jne
cmc
sub
dec
std
nop
pop
stos
sub
and
mov
cld
repz
out
dec
push
mov
mov
jle
mov
addr16
fwait
inc
inc
sub
dec
out
sbb
shrl
mov
mov
in
mulb
mov
jle
test
cmc
pushf
or
dec
rorl
hlt
push
and
adc
mov
fcomip
in
or
les
lods
pop
loopne
gs
cltd
mov
jecxz
xchg
movb
jae
addr16
or
loop
loop
je
addb
movsl
in
jge
or
jg
imul
shlb
pop
jne
scas
push
mov
mov
dec
out
ja
lea
dec
cmp
sti
push
jnp
cmp
fs
addb
cmp
outsb
jp
pusha
add
fistps
xlat
js
icebp
lds
add
pop
lock
add
repz
rcl
xor
aaa
mov
sbb
mov
dec
jp
in
popf
call
inc
js
and
out
mov
and
loop
dec
bound
push
mov
pop
xchg
fldcw
movsb
test
dec
je
lds
fcmovne
xchg
js
sub
nop
jb
clc
or
sbb
gs
pop
cwtl
push
lods
sarl
xlat
gs
cld
sarb
mov
int
push
xchg
mov
ljmp
adc
loopne
xor
stos
mov
jne
mov
divb
orl
mov
fs
cld
jmp
mov
xchg
insl
jmp
rol
shl
xchg
lds
fsubrp
movsb
push
js
adc
arpl
xor
or
xchg
push
test
or
inc
js
jb
testb
loopne
outsl
xlat
shll
test
mov
push
jbe
test
add
cmp
sub
xor
push
insb
aad
sbb
inc
sub
lock
test
and
mov
jle
mov
and
adc
movsl
into
lods
cmp
ds
xor
imul
jbe
xlat
daa
cmp
imul
dec
adc
jno
push
ds
js,pn
mov
add
movsl
arpl
out
mov
lret
pop
mov
arpl
addb
add
push
and
scas
cli
add
adc
es
mov
sbb
mov
clc
mov
aam
jnp
jg
adc
mov
xchg
jl
daa
lahf
xchg
mov
ffreep
aas
repz
push
cwtl
mov
mov
sbb
mov
mov
mov
cwtl
cmc
or
test
dec
xor
dec
fdivrs
ljmp
adc
repz
sub
dec
xchg
xchg
sub
inc
dec
and
mov
mov
push
xlat
jmp
inc
xlat
out
dec
outsl
mov
jle
mov
enter
nop
dec
daa
ja
fistl
xchg
pop
imul
xor
jno
cli
inc
cs
sarl
mov
cmp
mov
cmp
icebp
out
dec
je
and
imul
daa
ja
imul
pop
jne
sub
in
arpl
dec
sbb
and
jecxz
pop
sti
insb
movsl
jle
push
repnz
mov
enter
dec
enter
dec
popa
outsl
orb
xor
mov
lods
mov
push
jg
push
sub
sbb
inc
jo
jle
imul
push
and
nop
call
lods
add
inc
enter
or
roll
ficomps
xchg
push
xor
stos
lahf
ja
lea
push
testb
insl
and
dec
add
push
adc
ror
loopne
mov
sbb
lcall
sbb
mov
pop
pop
and
xchg
jge
lahf
rclb
cmp
xchg
mov
scas
lahf
mov
iret
push
pushl
xchg
mov
adcl
insb
mov
mov
mov
inc
adc
fnstsw
jne
repnz
push
test
mov
adc
xchg
cmp
dec
lahf
push
xchg
pop
mov
dec
pop
xor
dec
mov
jmp
lods
std
std
je
mov
cmc
ja
and
xchg
mov
jb
test
pop
fs
testb
lret
push
ret
push
data16
push
sub
loopne
aam
cli
popl
insb
popl
sarl
and
loopne
pop
jl
or
sub
pop
mov
ds
imul
and
xchg
aaa
mov
ss
in
rol
dec
jo
in
xchg
in
outsl
jbe
shrl
lcall
mov
aas
je
jl
dec
rcr
pusha
test
inc
in
imul
mov
push
mov
mov
ret
dec
dec
andb
movsb
orb
addr16
fstl
mov
aam
jmp
sub
adc
mov
xchg
push
push
js
and
sub
push
movsb
xchg
negl
mov
and
xchg
outsb
filds
aad
lods
shrb
jns
cmc
cmp
sbb
out
dec
out
mov
in
scas
stos
cld
leave
pop
fwait
push
mov
andl
ss
stos
decb
fcoms
mov
inc
in
fs
jbe
jle
mov
scas
in
jmp
std
mull
push
mov
in
rolb
frstor
xorl
icebp
xchg
pushf
lods
movsb
rolb
ja
dec
loope
enter
jmp
shl
adc
dec
mov
mov
orl
fdiv
sbb
mov
xchg
les
filds
fisubrs
mov
sub
popa
jge
loop
mov
ljmp
outsb
xor
test
sub
sbb
pop
cs
cmpsl
xchg
clc
xchg
das
mov
out
popf
popa
pop
and
push
mov
insl
and
mov
mov
loope
jmp
pop
inc
sub
pop
inc
mov
cli
cwtl
cmp
pop
int
jne
dec
or
inc
aaa
inc
mov
aad
cmp
or
or
mov
push
ret
movsb
cmc
sub
idiv
sbb
pop
push
mov
into
clc
fmull
dec
fcom
cmpb
pop
mov
sbbl
cli
and
mov
ret
sub
xchg
jmp
lret
or
pop
cmpsl
mov
popf
xchg
sahf
pusha
flds
jge
ficompl
jl
iret
je
mov
jl
xchg
daa
push
mov
aaa
jp
mov
adc
or
fs
push
xor
xor
mov
push
mov
dec
mov
repnz
dec
stos
push
and
daa
jge
ret
dec
cmpb
cltd
enter
mov
push
pushf
ds
idivl
movsl
cmpb
pusha
and
lods
imul
adc
ja
pop
rcll
xor
fmul
sub
clc
addr16
nop
cs
sub
mov
test
add
mov
push
xchg
mov
ss
sub
push
jbe
ficoml
insb
cli
push
adc
mov
jns
dec
jmp
sbb
cmovo
jbe
bnd
std
cltd
cmp
cmc
and
out
std
xchg
mov
sub
add
call
xchg
xchg
mov
cmp
adc
jp
int3
jns
adc
lods
xorl
popf
call
ret
inc
iret
push
cmpsb
push
pop
dec
adc
jbe
in
jns
push
sbb
mov
xchg
inc
mov
loopne
inc
mov
sbb
scas
sarb
fistpl
leave
cmp
andb
mov
push
dec
add
and
sbb
aaa
pop
aam
in
sub
aam
push
daa
addl
add
fsubrs
scas
hlt
and
sub
fdivs
mov
xchg
faddl
adc
jns
aad
bound
xor
cld
lret
mov
fwait
das
jp
loop
mov
cld
icebp
scas
dec
sbb
rep
filds
repnz
xchg
addr16
cmpsl
cmc
pop
inc
push
addr16
cmp
idivl
sar
mov
out
xor
push
movsb
lock
dec
fcoml
fstpt
fnstsw
xchg
lcall
orl
adc
shlb
aad
fwait
aaa
xchg
movsl
sarl
xchg
pushf
inc
mov
mov
cmp
stos
lahf
lret
pop
sbb
xor
addb
cmp
int3
repnz
mov
xor
imul
inc
stc
jecxz
cmp
ss
stc
mov
test
ficomps
fdivs
fiaddl
call
push
mov
or
mov
test
inc
cmpl
mov
xor
push
lahf
sbb
ja
mov
cmp
xor
insl
jae
push
sbb
iret
and
jge
ffreep
sub
inc
jbe
jbe
scas
dec
xor
and
add
insl
jns
out
inc
cmp
xchg
je
call
das
fs
popa
nop
insl
sub
inc
dec
xchg
orb
das
pop
inc
push
jnp
mov
jmp
push
lea
xchg
fwait
mov
dec
std
sahf
js
jae
push
cmp
xchg
add
repz
nop
mov
lods
mov
mov
xlat
movsl
ds
dec
sbb
mov
out
int
add
mov
mov
or
xor
mov
xchg
jno
ret
sbb
sbbb
iret
jmp
cmpsl
jnp
mov
mov
ljmp
cmp
jns
outsl
cli
fistpll
mov
inc
dec
mov
cwtl
and
add
or
ret
lock
cmp
std
movsb
mov
inc
jge
push
outsl
sub
push
popf
nop
stc
fwait
pop
test
and
mov
ds
fisttps
lret
ss
test
leave
and
cli
sbb
out
dec
bound
mov
mov
mov
push
xchg
rcll
hlt
call
cs
cmp
pop
loope
xor
mov
lods
adc
iret
testb
testb
and
into
cmp
or
push
add
mov
fcomps
cmp
mov
fnstcw
push
ja
clc
int3
mov
bound
push
and
lcall
out
in
daa
cli
orl
xchg
mov
test
aad
xchg
dec
rorb
aaa
sbb
pop
add
stos
jl
ret
rorb
cmp
and
mov
inc
or
scas
cmc
adc
fstpt
inc
mov
scas
cltd
push
jl
pop
push
jae
sbb
pop
subl
mov
aaa
jne
push
push
cwtl
and
mov
addr16
push
sub
inc
mov
xor
insl
xchg
add
xor
jge
fistl
leave
mov
or
jg
addl
repnz
pop
sub
test
jo
sbb
mov
mov
xchg
mov
push
fdivl
mov
add
sub
rclb
sbb
xlat
loopne
mov
test
movsb
mov
cmp
add
call
push
outsb
sti
mov
push
rcrb
adc
xor
or
and
sbb
sti
or
les
xor
bound
bound
test
lods
xchg
pop
mov
cld
mov
adc
movsb
or
dec
dec
cmc
in
jp
popa
sub
jge
pop
leave
mov
and
daa
mov
fsts
in
cmp
sub
es
pop
jl
outsb
jecxz
into
mov
sbb
mov
dec
pop
out
addl
and
mov
in
cld
lret
and
sub
xchg
dec
or
and
clc
outsl
jns
sti
mov
add
imul
push
mov
add
jne
stos
cmp
dec
fcoms
pop
into
test
xchg
xchg
cli
lods
jp
lret
jae
decl
ficoms
je
cld
jge
shlb
into
mulb
in
dec
ss
imul
in
cmp
mov
inc
fnstcw
push
mov
mov
rcr
mov
sbb
pop
push
cmc
push
cmp
inc
mov
ror
inc
mov
imul
mov
mov
lahf
pop
cmovno
mov
hlt
in
adc
xorl
add
xchg
in
ds
sti
xchg
and
pop
mov
stos
fiaddl
pusha
mov
mulb
and
loopne
sub
stos
push
push
test
mov
inc
push
and
push
lea
ljmp
jnp
arpl
das
jbe
pop
das
jp
cmpsb
jbe
cmp
fwait
xlat
sub
out
outsb
jbe
sub
pop
roll
stos
add
in
js
jmp
mov
orb
ljmp
pop
cld
or
loope
or
fdivs
test
outsb
ja
test
ds
add
mov
xlat
cmp
insl
cmpl
xlat
fimull
loopne
adc
pushf
and
arpl
js
pop
xchg
jecxz
cmp
adc
outsl
fwait
lods
popf
push
and
std
sbb
bound
pop
adc
jecxz
add
dec
pop
cltd
or
mov
mov
mov
jae
test
sbb
cwtl
out
mov
lret
ficoms
shr
xor
insl
rcl
test
ss
adc
int3
in
enter
and
jo
or
push
jb
push
or
lods
inc
andb
xor
adc
sub
dec
jno
mov
push
fcmovnu
pop
mov
shll
add
dec
push
addl
xchg
xchg
bound
es
push
stc
mov
movsl
in
or
mov
dec
sbb
dec
mov
pusha
in
mov
movsl
out
cld
in
xor
add
cmpsb
imul
dec
call
int
lea
fnstsw
sbb
andb
or
arpl
add
xchg
cmpsb
inc
mov
and
xor
repz
sbb
push
scas
scas
inc
cmp
pop
push
inc
iret
int
test
sbb
gs
cmc
je
xor
lods
pop
xchg
mov
lea
divl
sbbb
sub
movsb
and
test
int3
mov
pop
adc
flds
pusha
mov
adcb
inc
mov
and
out
mov
leave
stos
ss
jle
test
lahf
mov
sub
and
bswap
jne
xor
jo
outsl
fcoms
dec
cmc
mov
divl
xor
out
sub
popa
push
aaa
js
loopne
test
sahf
data16
adc
adc
in
fmuls
push
jae
mov
mov
sbb
mov
sub
lret
rolb
dec
outsl
stc
mov
cltd
mov
cmp
mov
adc
add
addb
insb
push
push
mov
int
test
jae
testl
jp
lcall
fpatan
mov
enter
call
clc
ret
repz
push
cmc
jnp
sbb
nop
fisubs
xchg
rorl
push
bound
unpckhps
arpl
adc
sbb
data16
in
jnp
stc
jg
in
jmp
dec
fldenv
popl
xchg
les
jle
push
ljmp
in
imul
lock
sbb
int
pushf
cmp
stos
push
icebp
out
adc
out
pop
fsubrl
pop
xchg
dec
mov
and
mov
xchg
and
sub
out
push
shr
xchg
pop
mov
sbb
dec
mov
loop
mov
dec
out
lods
sbb
xor
cmp
les
xor
pop
dec
iret
lret
mov
adc
loopne
andnps
aad
shlb
xchg
xor
dec
aaa
sbb
loope
outsb
xchg
adc
imul
insl
cld
add
dec
sub
or
jp
add
mov
cld
cmc
fsts
sub
insb
mov
fdivl
or
enter
push
sti
mov
add
push
repz
mov
inc
pop
jp
mov
cmp
jmp
cmpsl
insl
inc
and
shl
add
stos
jp
and
lret
inc
lret
jge
cld
std
cmp
cli
fsubrl
jns
bsr
inc
fisttps
enter
mov
and
sbb
rcrb
push
xor
and
mov
adc
add
mov
jae
sub
inc
scas
ror
adc
lock
rcrl
out
imul
xchg
fmuls
pop
sub
jle
xchg
popa
in
jl
jecxz
mov
push
fwait
mov
iret
movsl
or
and
icebp
orb
mov
ror
mov
into
test
pop
das
push
mull
jle
adc
jg
sub
enter
mov
jmp
pop
aam
sub
mov
hlt
dec
repnz
sbb
xor
insb
arpl
mov
sarb
les
rcrb
and
mov
pop
ror
int3
dec
dec
fcos
mov
xor
into
xor
movb
movsb
addl
xchg
icebp
mov
loop
scas
sub
add
aas
pop
out
popf
lds
push
xor
imul
jge
cmp
jae
adc
sti
jae
pop
cs
roll
imulb
or
xchg
sti
mov
nop
mov
push
pop
sub
and
sbb
daa
out
push
mov
mov
packsswb
pusha
push
push
or
push
or
mov
cwtl
cld
pop
lahf
leave
in
test
cli
sub
loope
push
out
fsubs
rolb
arpl
or
mov
xor
dec
dec
jb
ror
cld
push
pop
test
cmp
add
lret
xchg
idivb
sbb
xchg
jecxz
fwait
xor
xchg
mov
cld
cmc
sbb
xchg
int
ret
jns
ss
outsb
sbb
cld
sahf
jb
fdivrl
in
test
xchg
decl
xchg
jne
aas
and
sahf
pushf
sti
ljmp
lahf
inc
daa
or
mov
add
mov
sub
or
add
and
loop
incl
adc
sbb
fadds
int
xchg
test
and
aas
loope
cltd
push
fstpl
lret
pop
xor
inc
sbb
jae
cmp
clc
push
mov
mov
fbld
insl
inc
jns
stc
cmp
push
adc
maxps
add
hlt
nop
ds
jnp
mov
ja
scas
inc
notl
cmp
addl
inc
ret
lcall
repnz
enter
jl
and
in
cmp
out
jecxz
adc
mov
xchg
js
lahf
cmpb
cmp
mov
pusha
lock
imul
cli
clc
xlat
xchg
loopne
outsl
ja
imul
int3
aad
loop
xor
lea
xor
shlb
hlt
inc
sub
jle
xor
test
and
hlt
adc
and
push
dec
or
fsubrl
testb
dec
pushf
mov
xchg
out
mov
popa
fs
cmpsl
repz
and
cmpsb
mov
pop
and
imul
lahf
test
dec
mov
fstl
pop
nop
in
sarb
ret
mov
and
push
mov
lret
sub
adc
dec
fs
or
adc
mov
jle
mov
or
xchg
xchg
sahf
inc
inc
cmc
and
insl
dec
jb
cli
mov
test
sbb
mov
or
sub
jbe
dec
loopne
loopne
int
fstp
out
shl
ja
adc
cmc
jp
mov
negb
loope
xchg
mov
cmp
xchg
lret
add
jnp
add
out
js
dec
xlat
and
movsb
xchg
inc
cld
sbb
xor
push
lret
sub
popf
push
push
jle
fists
mov
add
pusha
ficoms
push
fs
dec
stc
pop
push
add
decl
xchg
sbb
out
dec
out
jne
pusha
cli
test
outsl
xor
fildl
jg
mov
sub
ljmp
sub
sbb
mov
int
fdivr
sbb
push
int
das
mov
cmp
adc
cmc
mov
lcall
mov
mov
rorl
sbb
adc
in
jp
cld
and
stos
cmpsl
sbb
mov
sbb
fcomps
jmp
cmp
incb
enter
fdivrs
add
cmpsb
fisubl
pop
xchg
fisubs
daa
std
adc
rclb
ljmp
movb
sub
mov
mov
lea
push
push
sbb
arpl
test
popf
repz
cmpb
test
int
mov
jg
stos
and
je
xchg
aam
clc
stos
sub
subl
push
cmp
ret
mov
xchg
pop
jecxz
sub
iret
ret
in
xchg
test
lahf
push
xor
fsqrt
pusha
fnstsw
mov
daa
add
insl
faddp
add
pop
out
aam
out
or
xchg
addb
cmp
xchg
mov
sti
ds
popl
sub
dec
mull
and
push
insl
mov
sbb
sub
mov
mov
add
push
mov
fwait
add
sub
pop
outsb
mov
add
jmp
aad
sub
rcrb
ret
sub
lock
or
adc
cwtl
movsb
xor
lret
movb
call
lods
rcrb
mov
mov
sar
push
aad
mov
repz
dec
xchg
fadds
sbb
aad
ficomps
cld
cmpb
popf
rcl
add
sbb
movsl
add
hlt
xlat
xchg
out
in
or
or
in
scas
push
adc
and
push
or
push
ret
dec
and
das
mov
mov
addr16
inc
daa
int3
or
cmp
pop
mov
or
mov
sbb
inc
cld
test
push
test
inc
mov
xchg
push
jle
test
jns
adc
inc
jnp
xchg
mov
mov
sub
jmp
in
ret
pop
mov
dec
mov
ljmp
jae
xchg
imul
mov
mov
xchg
scas
into
loope
shl
sbb
lahf
lret
addr16
and
sbbb
sbb
mov
pop
popa
fdivrs
lock
xchg
sub
fildl
aaa
test
sti
adc
xor
pop
dec
adc
sbb
int
js
push
push
xor
mov
imul
dec
dec
push
xchg
pop
enter
cmp
inc
mov
ret
jmp
cmp
mov
inc
xchg
out
pop
jb
pusha
jnp
scas
lods
jno
test
jmp
cmpsb
cwtl
cmp
pop
mov
lods
or
je
test
shrb
cwtl
xor
dec
add
std
test
repnz
mov
cwtl
jae
push
sub
inc
lahf
or
insl
mov
les
call
test
pop
inc
aas
or
jnp
ret
add
mov
push
loopne
fucom
xchg
or
jb
jmp
xchg
or
mov
jge
aaa
mov
test
sub
shr
mov
push
repnz
and
inc
sarl
popa
cmc
or
add
imul
mov
jnp
out
push
cmp
sahf
pop
popf
xchg
sub
dec
mov
xchg
fnstcw
int3
sub
das
test
add
ror
adc
aas
and
mov
add
daa
fiaddl
sbb
sbb
sbb
inc
mov
lahf
orl
or
mov
cmpsl
pop
inc
push
sbb
xor
ss
rol
inc
imul
frstor
add
cwtl
mov
das
popl
jge
popf
add
add
mov
xlat
in
stos
incl
inc
insl
stc
mov
mov
sbb
cli
cmp
test
pop
rolb
loope
nop
inc
in
dec
jmp
mov
xor
adc
sub
inc
hlt
lahf
fwait
into
dec
subb
cltd
mov
jl
inc
sti
mov
test
cmp
sub
xchg
sbb
jecxz
adc
or
mov
xor
aas
sub
mov
pop
in
pop
sbbb
stc
popa
pop
shlb
mov
dec
enter
ja
outsb
jmp
pop
out
loopne
and
stos
insl
jno
jb
jmp
jl
push
xchg
jg
jecxz
push
mov
mov
mov
or
rep
hlt
stos
push
mov
loope
xchg
add
imull
orb
ret
les
add
testb
cltd
clc
push
fidivrl
aaa
or
jl
inc
xor
mov
xor
inc
sbb
pop
xor
add
nop
mov
xorl
loope
push
sub
mov
xchg
or
sub
call
jns
std
mov
cwtl
out
cmp
and
and
cmp
sub
xor
mov
xor
pop
pop
fsubp
stc
sbb
mov
std
popf
popf
movsb
mov
inc
leave
pop
adc
outsl
mov
sbb
loop
lock
int
and
jp
jo
sbb
jnp
push
xchg
jecxz
inc
pusha
mov
and
test
push
push
mov
cmpsb
movsb
icebp
sub
push
movl
loop
adc
or
xor
jo
leave
sbb
mov
and
int
in
cmpsb
nop
dec
mov
shrb
stos
sbb
scas
movsl
adc
mov
clc
loope
cli
iret
into
mov
ficoms
jmp
or
xlat
adc
ret
jp
int
js
push
bound
and
jecxz
cltd
mov
rorb
add
jo
jne
mov
call
xchg
nop
mov
in
jnp
lds
push
lea
mov
lcall
jno
enter
inc
daa
push
shrl
dec
push
mov
ja
adc
repnz
mov
movsb
sahf
mov
lea
ret
movsb
xchg
cmp
stos
into
pop
fimuls
xchg
mov
inc
or
xchg
xchg
mov
jg
push
aam
push
stos
icebp
fwait
repz
rcll
mov
push
mov
pushf
sbb
push
mov
adc
sub
pop
sbb
cmp
iret
mov
subl
mov
out
or
hlt
cwtl
mul
in
dec
scas
xchg
sbb
mov
ljmp
mov
jmp
sbb
std
sub
mov
fisubl
clc
add
push
fs
sbb
mov
bound
ret
inc
call
sbb
add
outsl
mov
dec
mov
pop
lods
repz
stos
mov
xchg
and
lods
jg
out
cld
ljmp
adc
cmpsb
call
pop
jmp
add
stos
sub
jle
push
add
loope
iret
das
dec
inc
fildll
aad
pusha
cmc
mov
shr
ror
repz
mov
sti
mov
cmp
icebp
add
test
sub
daa
cmpsl
xlat
fs
pop
fbstp
jle
scas
push
sahf
sub
dec
push
ss
and
mov
sbb
pop
rolb
flds
and
fcomi
popf
ret
mov
add
mov
mov
or
mov
push
out
cltd
cmc
sbb
adc
lea
adc
iret
imul
decl
jo
cmp
fsts
sub
cli
xchg
call
popf
adcl
imul
fisttps
in
popa
mov
and
loopne
adc
push
sub
dec
push
dec
imul
mov
lahf
mov
dec
scas
lret
push
mov
xchg
cli
dec
push
mov
aaa
xchg
inc
sub
xchg
lahf
lahf
shll
adc
ja
jl
and
sahf
jmp
dec
out
mov
ret
cld
or
stos
sti
jae
push
sti
mov
sub
jl
xor
stos
cmpsb
xor
fdiv
outsb
xchg
int3
jne
sahf
mov
mov
push
pop
mov
in
test
cmp
adc
leave
cmp
hlt
cmpsb
cs
aad
xor
push
push
or
rcrb
or
cmp
pop
sub
ja
mov
ds
fs
sar
sbb
pop
in
pop
inc
push
pop
repz
push
flds
shll
orl
popa
leave
shll
das
xor
cmpsb
or
insb
push
mov
inc
inc
cs
dec
cmp
xor
adc
push
mov
push
and
sbb
aas
pop
into
inc
into
adc
aaa
cs
lcall
xchg
jne
aaa
cmp
or
scas
mov
and
mov
scas
jno
and
mov
bound
daa
sbb
jbe
jne
mov
mov
inc
pushf
add
dec
adc
or
sbb
mov
xchg
xchg
xchg
cmp
jle
cmp
subl
jae
stos
mov
outsb
inc
popf
push
add
lods
ja
ret
jb
hlt
loope
mov
pop
push
push
dec
jo
in
pop
int3
out
pop
fsubp
and
pushf
inc
leave
pop
movsl
mov
jl
sbb
sbb
xchg
in
test
scas
incb
repz
mov
fmuls
adc
lcall
shrl
aam
add
pop
pop
mov
or
cmp
or
adc
xlat
lcall
xchg
jle
or
aas
aas
and
jecxz
dec
mov
add
or
lds
js
inc
shlb
inc
dec
in
out
or
xchg
push
push
das
pop
push
jne
sbb
xchg
jl
sbb
xchg
and
mov
add
pop
movsl
push
add
dec
mov
notl
mov
lds
xchg
inc
and
cmc
cli
call
mov
dec
or
mov
dec
add
sbb
adcl
push
ret
sbb
sahf
arpl
jb,pn
aad
adc
jecxz
aaa
arpl
arpl
fistpll
cmp
popf
jbe
popa
sarb
loope
mov
mov
dec
aas
inc
cmp
and
mov
int3
int
xchg
adc
rclb
cmp
stos
movsl
add
out
push
jne
push
mov
nop
rolb
pop
test
mov
cmpsl
xor
aas
sub
sub
pop
es
cmpb
adc
in
or
push
pop
pushf
gs
mov
fsubrl
pop
mov
push
incl
mov
push
jo
adcl
sub
into
add
mov
mov
jl
and
push
add
aad
cmp
inc
ret
dec
and
enter
loope
lahf
insb
mov
vpcmpeqb
pop
lcall
jle
xchg
adc
imul
jecxz
lods
add
push
mov
addr16
mov
lcall
cmpsl
pop
or
mov
xor
int
ja
adc
rorl
cmp
push
lods
or
fdivrs
mov
sbb
push
sahf
ja
pop
lahf
jns
mov
out
inc
pop
pop
inc
jge
cld
jge
lcall
repnz
repnz
mov
mov
flds
push
sbb
dec
sarb
pop
mov
inc
cmp
xchg
cli
outsl
pop
adc
add
test
ficomps
or
cld
test
fists
rorl
popa
cld
cli
lods
cmpsb
push
outsb
cwtl
add
stos
xlat
movsl
shlb
ja
in
mov
mov
sbb
sbb
cmp
es
leave
cmp
jno
sub
fidivl
mov
and
cwtl
shr
and
pop
sub
cmp
stc
or
mov
add
adc
cmp
movsb
fsubr
xchg
xor
xor
lods
pop
push
sahf
xor
mov
inc
pop
push
pop
out
mov
pop
das
sbb
fnstenv
pop
sbb
fcomip
xor
test
cwtl
in
xchg
cmp
test
mov
int
js
icebp
inc
shr
pop
icebp
jnp
sahf
sti
das
movsl
arpl
cmp
mov
fidivrs
add
pop
cwtl
add
and
fwait
sbb
cmp
cltd
jg
push
scas
in
nop
jns
pop
out
cmp
fbstp
inc
jno
add
aas
xor
out
cld
xor
push
or
cmpsb
mov
inc
xchg
adc
xor
es
data16
mov
bound
fcomps
jo
data16
or
lds
jnp
pop
jns
mov
add
aas
je
xchg
movl
mov
jae
ljmp
xchg
and
addr16
push
aad
rorl
dec
in
adc
movsl
outsl
imul
mov
dec
lea
push
sub
sti
mov
fisubs
lcall
das
cmp
ds
in
int3
cmp
add
mov
out
inc
cld
dec
cmpsl
xchg
cmc
push
xor
mov
xchg
je
inc
popf
popa
or
xchg
testl
rcrb
and
dec
bound
jnp
sbb
pushf
mov
bound
leave
test
add
es
xor
push
pop
dec
insl
fistl
out
xorb
les
movb
shrl
test
or
or
clc
xchg
push
icebp
push
xchg
sbbb
mov
sbb
fcoml
mov
push
inc
push
pop
stos
icebp
inc
call
stos
inc
mull
cmpsl
push
test
push
repz
xor
mov
cs
dec
inc
fisttpl
out
xor
sbb
inc
test
popf
das
dec
xchg
movsl
fiadds
test
push
sub
fidivs
fildll
dec
stos
xchg
insl
xchg
pushf
test
mulb
lods
andl
ja
pop
jbe
jmp
mov
sbb
mov
mov
scas
fld
and
movsb
repz
cltd
mov
mov
cmp
mov
mov
pop
fdivs
xchg
pop
mov
push
adc
mov
mov
and
jns
push
lahf
fsts
xchg
pusha
leave
pop
jmp
loope
loope
jl
loope
sbb
mov
push
fistps
jbe
push
hlt
lahf
test
pop
sub
das
push
cmp
imul
cmc
int3
jecxz
add
insb
movsl
mov
popf
mov
adc
push
xor
mov
adc
push
call
pop
insl
pushf
push
pop
and
test
mov
scas
imul
xchg
ret
rorb
dec
mov
rclb
push
add
loop
add
outsl
adcb
add
sbb
insb
rcrb
sub
bound
jns
and
sbb
jb
sub
sub
popl
or
mov
jno
push
popf
mov
movb
loop
outsb
adcb
mov
mov
in
leave
sub
out
mov
and
mov
cmove
hlt
jp
int3
jb
pop
andb
movsb
jbe
rep
inc
cmpsb
xchg
int3
adc
inc
dec
and
fwait
xchg
jp
sbb
test
xchg
or
and
out
sub
push
mov
and
out
cli
dec
mov
push
lahf
jmp
xchg
dec
or
into
sahf
lds
lret
aaa
push
rorl
or
pop
pusha
popa
pop
inc
mov
dec
andb
test
pop
xor
aaa
sub
xchg
mov
scas
es
insl
sbb
or
lahf
xor
incb
cmp
push
add
int
jae
mov
movsl
bswap
push
repnz
in
aam
cmpsl
mov
test
sub
dec
hlt
test
scas
call
add
mov
or
pop
or
mov
dec
sub
inc
ja
out
or
mov
xchg
scas
rclb
mov
pop
ja
mov
push
lea
enter
sub
aaa
pusha
jno
fwait
sub
int3
mov
add
jbe
dec
mov
cmpsb
add
pop
xchg
orl
inc
lds
in
aaa
inc
aam
mov
scas
ljmp
jp
mov
lahf
add
dec
mov
fs
push
ds
mov
xor
cli
mov
call
frstor
sti
jecxz
repnz
jmp
xlat
xor
outsl
add
mov
push
sub
mov
jne
add
jge
pop
scas
shll
sbb
xor
repz
mov
cmp
mov
in
sbb
call
scas
sar
leave
mov
and
lods
adc
pop
mov
sbb
mov
out
add
mov
add
push
mov
imul
and
push
push
pushf
mov
ljmp
cmpl
adc
mov
sbb
sub
stos
popf
pop
enter
lea
sub
mov
in
aaa
push
dec
clc
sub
pop
lea
and
rcll
pop
call
mov
leave
ficoml
push
adc
sbb
es
lcall
add
loopne,pn
jl
outsb
cmc
xchg
cmpsl
add
insb
cmpl
int
and
daa
lock
sbb
xchg
sti
jne
int
das
jo
jo
jecxz
or
xor
mov
jno
mov
clc
or
daa
xchg
mull
loope
scas
push
les
int
adc
pop
ljmp
or
mov
lahf
and
push
sbb
cwtl
dec
jp
repnz
jne
sbb
cli
fstpl
dec
test
cmp
imulb
lahf
repnz
in
adc
enter
enter
fstl
test
bound
add
add
inc
mov
xchg
iret
cli
notl
fwait
cmp
das
insb
pushf
movsl
mov
dec
jnp
bound
push
pop
adc
jbe
or
push
test
and
mov
sbb
shlb
out
jp
or
lock
pop
scas
stc
xchg
rcl
push
vptest
push
ret
and
fistpll
fnstenv
mov
in
notb
test
jecxz
fimuls
xor
pop
lcall
stos
aam
add
scas
push
jl
mov
push
inc
or
in
imul
pop
int3
out
or
loope
ss
pop
push
mov
iret
in
gs
ror
sub
xor
push
cmp
inc
dec
std
test
sbb
sub
and
sbb
fisttpl
inc
jb
jb
ret
mov
inc
push
icebp
push
adc
gs
xchg
aad
mov
push
test
or
sub
jbe
and
aaa
ja
push
xor
jo
push
lock
ljmp
dec
mov
mov
repnz
pop
fistpl
sbb
ret
mov
stc
sbb
rorb
mov
jecxz
int
dec
jecxz
mull
enter
pushf
loopne
mov
xchg
jle
mov
cmp
inc
ret
andb
sbb
js
test
cmp
arpl
dec
jl
jge
cmp
push
and
and
pop
xor
inc
pop
cltd
into
cmpsl
and
push
dec
lods
jbe
ret
jmp
add
ret
cmp
xchg
popf
mov
push
lret
sbb
call
pop
sbbb
pop
xchg
add
inc
pop
sub
loop
fwait
cli
cs
cmp
xchg
hlt
xor
add
test
xor
pop
or
mov
sbb
push
out
sub
dec
or
cld
popf
imul
xchg
movsl
pop
in
or
sbbb
movsb
cmp
pop
jno
mov
add
inc
repnz
call
jbe
add
cmp
sarl
stc
icebp
push
mov
mov
insb
in
xor
xor
cmpsl
ret
xor
sbb
je
fmull
sub
scas
mov
repnz
and
jns
addr16
shlb
push
pop
scas
outsb
movsl
daa
adc
xor
loope
jb
inc
adc
or
aam
dec
dec
decl
in
es
inc
ss
adcl
dec
xchg
sahf
cmpsb
push
testb
jo
adcb
rclb
sbb
dec
fnstenv
clc
jns
jo
mov
xchg
jle
sbb
and
mov
cmpsb
leave
lcall
icebp
inc
add
aaa
cltd
scas
xor
push
mov
xchg
add
jo
push
and
in
xchg
mov
mov
rclb
stos
repz
pushf
xchg
ds
xchg
imul
je
mov
or
loop
mov
ds
icebp
ret
movsb
pop
mov
dec
push
out
inc
push
dec
mov
mov
and
out
add
inc
adc
lods
xchg
iret
out
sub
push
sbb
je
ss
ja
and
cltd
jbe
imul
sbb
bound
mov
ds
ficoms
call
imul
xlat
scas
daa
or
test
xor
pop
sub
jp
push
jae
sub
sbb
push
xor
mov
fldcw
add
or
xchg
out
inc
insb
lret
notl
in
fwait
das
cltd
mov
push
out
cli
xchg
fnsave
jmp
jl
lea
xorl
int
push
mov
push
mov
inc
aaa
fcoms
sub
mov
fistpl
andb
in
sahf
mov
dec
adc
pop
cmp
xchg
sub
stos
jb
in
insl
jns
cmpsb
jo
xchg
and
test
pushl
lretw
dec
add
and
fucomp
js
adc
mov
movl
std
inc
mov
hlt
inc
jo
fcomps
and
inc
sbb
rcr
sti
mov
cmc
jae
and
lahf
xor
les
jnp
shl
jp
push
push
int3
push
mov
lcall
fmuls
insb
push
lods
mov
test
js
xchg
fmuls
mov
out
cmp
insl
or
ljmp
mov
sub
cmpsb
inc
push
or
lcall
pop
jl
pop
scas
pop
and
pop
inc
in
int3
mov
sbb
mov
xchg
mov
out
xchg
sub
xor
imull
data16
outsb
sarl
and
loop
nop
cmpb
cmp
pop
add
ret
cld
ret
sbbb
mov
mov
mov
aad
jb
sar
rcrl
bound
imul
sub
cmpsb
jecxz
mov
cs
pop
ret
inc
int3
pop
mov
sub
jo
loopne
inc
dec
pop
sbb
cmp
cmp
cmc
popf
fs
out
sbb
xchg
lret
repz
dec
sbb
movsb
mov
push
hlt
jns
mov
push
cli
subb
jae
ret
fcom
lods
enter
xchg
mov
xorb
stos
fisubl
ret
adc
sti
inc
inc
int
lret
or
xlat
aad
dec
push
mov
mov
jecxz
push
repnz
or
push
cmp
xchg
jge
jg
bound
pop
stos
cld
adc
adc
mov
pop
imull
call
adc
xor
push
xor
pop
jge
xlat
sub
out
mov
stos
jg
mov
imulb
fimuls
outsb
sbb
iret
push
out
push
cli
sbb
insl
sbb
jg
adc
jo
or
and
call
xor
scas
sbb
and
pushf
scas
aas
shll
push
addr16
sbb
mov
pop
xor
loop
pop
movsb
filds
jnp
rcll
lcall
push
aas
and
lret
dec
mov
cs
addr16
add
dec
fwait
cmp
or
lock
pop
imul
cmpl
loop
aaa
test
add
cmp
leave
mov
dec
add
add
push
xor
jmp
stc
in
adc
mov
inc
push
mov
mov
repnz
sub
daa
mov
inc
mov
aaa
out
dec
cld
mov
mov
les
leave
sub
push
mov
mov
std
push
and
or
xchg
jmp
stc
shrl
sbb
iret
and
shlb
fsubr
jmp
xor
and
cld
cld
mov
sbb
into
push
xor
repz
pop
ficoms
pop
adc
bound
push
test
sbb
pop
dec
jno
sbb
adc
fdivrl
fucomip
xchg
mov
cmp
pusha
rorl
jo
dec
test
add
jle
pop
ud2
fidivl
adc
xchg
ret
push
in
jb
pop
sub
stos
pusha
cwtl
mov
jp
and
pop
cmpb
and
aas
add
adc
inc
sub
jbe
mov
clc
pop
xchg
sbbl
shll
lret
cmp
ds
mov
pop
push
xor
dec
repz
mov
cmc
jbe
mov
or
mov
xchg
mov
das
data16
mov
loopne
xor
in
pushw
enter
pop
aas
cmp
inc
push
imul
push
cmp
mov
les
sbb
and
and
xor
ds
sbbl
mov
popa
icebp
aam
mov
je
and
push
das
dec
mov
add
and
xorw
pop
dec
inc
dec
in
or
cmp
popf
aaa
add
ret
lret
or
unpckhps
stos
push
std
mov
lret
cmp
rorb
mov
cmp
add
ja
mov
loop
por
decl
out
test
pop
pop
or
and
std
insb
push
inc
push
insb
mov
sub
push
mov
mov
sbb
dec
push
nop
pop
iret
xchg
sbb
scas
push
mov
adc
fwait
lods
mov
ret
lret
out
sbb
test
pop
mov
imul
ret
pop
add
cmpsl
dec
cmc
lcall
pop
movsl
test
int3
test
cmpsb
fcmovnu
pop
pop
data16
pusha
ficoms
cld
fwait
loopne
test
rcrl
shrb
dec
mov
jle
bound
inc
pop
cltd
push
mov
jns
test
shrb
cmc
icebp
xor
stc
test
call
int
out
fisubrl
push
outsb
js
add
mov
and
addl
jg
je
cmc
cmp
mov
xchg
xor
and
add
and
xchg
jecxz
arpl
and
mov
xchg
andb
gs
mov
lahf
idiv
lods
aas
out
jge
push
mov
xor
inc
xchg
mov
sub
inc
mov
icebp
cmp
sub
mov
in
bound
pushf
scas
std
lods
mov
loope
out
and
daa
jp
mov
aas
cmpb
push
push
jbe
cmp
mov
lcall
jnp
xchg
add
arpl
lods
imul
push
xlat
mov
or
daa
mov
push
mov
mull
xor
xor
cltd
aam
push
jmp
cmpl
add
adc
adc
lods
pop
inc
fidivrs
divb
push
jl
lock
jmp
test
cld
jb
aad
inc
in
mov
test
call
xchg
add
je
cwtl
sbb
scas
test
and
cmp
mov
aad
xor
fildl
daa
lahf
pop
les
cli
addb
sahf
mov
neg
jb
fwait
ja
adc
push
jge
mov
lods
sbb
lahf
fs
scas
in
dec
xchg
test
roll
test
orb
xor
iret
aad
jle
imul
shll
in
ljmp
push
jmp
dec
mov
lret
cld
dec
adc
mov
out
and
fmull
push
mov
cmp
in
mov
divb
in
arpl
mov
fnsave
fwait
loop
into
scas
push
and
in
push
adc
push
jb
add
rolb
mov
js
fadd
lds
mov
test
inc
dec
test
push
adc
jnp
hlt
xchg
rcl
adc
sbb
add
in
push
and
lods
pop
stc
xchg
stc
cmp
inc
rorl
stos
pop
js
sub
inc
mov
jecxz
nop
test
pop
sbb
and
cli
mov
ljmp
xchg
push
pop
xchg
jo
xchg
sub
pop
pop
outsb
add
outsl
dec
test
pop
cmp
jg
xchg
mov
aaa
pushf
mov
aam
ret
icebp
mov
mov
mov
sub
jmp
inc
lods
not
cmp
imul
iret
outsb
outsb
out
fwait
sbb
sub
xor
roll
cmpsb
pushf
adcl
pusha
aaa
das
fisttpll
cmp
push
mov
iret
xlat
dec
mov
test
outsb
dec
ds
pop
cmpsb
adc
shlb
aad
sar
mov
dec
cmp
int3
adc
out
out
pop
movsl
mov
fscale
cmp
sbb
or
xchg
or
push
loopne
sbb
sbb
inc
in
xchg
in
sbb
xor
mov
or
rcrl
or
inc
jo
dec
ds
fwait
cld
xchg
push
pop
call
mov
or
mov
pop
xchg
stc
adc
adcb
and
int
das
fwait
outsl
scas
int
mov
jp
fmul
cmc
push
mov
cltd
loope
insb
in
mov
cld
jle
mov
adc
out
pop
pop
mov
mov
inc
neg
sub
imul
mov
add
scas
xchg
push
aas
push
jp
test
add
fnstsw
fnstenv
clc
dec
mov
push
dec
repnz
mov
out
jmp
push
mov
lret
lods
mov
jmp
xchg
mov
add
lahf
and
notl
inc
cmpsl
dec
aad
xor
pop
jo
iret
pop
push
xchg
xor
ja
jns
cmc
jnp
insb
xor
repnz
xchg
fcmovnbe
push
mov
arpl
shlb
mov
mov
fwait
xchg
rcll
jl
cmp
xchg
pop
adc
sti
dec
pop
stos
or
movsl
mov
inc
pop
in
in
sub
cmc
pushf
xchg
push
pop
push
nop
sub
insl
or
je
nop
lcall
and
sar
xor
test
inc
mov
cmc
fdivrs
es
jmp
mov
or
sub
sbbb
mov
inc
int
xchg
and
push
test
scas
fisubrl
loope
sahf
lahf
mov
xlat
lcall
adcb
or
dec
dec
mov
data16
mov
mov
cmpsl
fxch
in
jne
xchg
jle
into
and
jns
ljmp
arpl
xchg
jle
pop
aaa
in
shl
sbb
popa
add
push
or
lock
sahf
add
add
shll
add
xchg
rorb
gs
mov
adc
shll
dec
mov
and
jecxz
dec
mov
shlb
fdivp
gs
fsubrl
outsb
push
cmpb
roll
lods
js
mov
in
cmp
xchg
sbb
sarl
jne
fmul
push
mov
mov
sahf
mov
mov
aaa
mov
imull
gs
push
inc
nopl
mov
adc
xchg
popa
add
mov
mov
cwtl
sbb
mov
add
ljmp
sbb
fiaddl
push
jmp
mov
mov
std
lods
ss
adc
add
inc
mov
push
mov
stos
push
pop
cmp
sbb
ss
sbb
sbb
push
in
xor
cmpsl
das
js
sahf
je
jp
lret
sub
out
shlb
fdivp
mov
out
in
push
in
fdivrl
notb
jne
lahf
mov
adc
out
jmp
xchg
cmp
imul
imul
outsb
loop
ljmp
sub
sub
cmp
daa
sub
push
lahf
sub
push
add
movb
scas
js
test
test
addr16
push
test
xor
out
and
add
inc
cmp
or
loopne
jno
test
dec
push
cld
out
in
adc
out
jmp
cmp
mov
clc
xor
loopne
je
or
or
iret
fsts
subl
inc
sbb
shl
xchg
inc
sbbb
xchg
cwtl
jp
jae
mov
lds
mov
fstl
inc
cmc
push
adc
outsb
nop
sub
push
push
and
ret
addr16
fwait
push
iret
push
inc
push
or
adc
outsb
test
dec
xor
pop
outsb
outsl
adcl
shlb
push
jmp
stos
pop
int3
hlt
loopne
mov
into
aas
and
add
ret
sar
push
dec
push
hlt
pop
pop
sahf
fidivrl
pushf
jo
popf
cwtl
idivb
push
sbb
movsl
sbb
into
addr16
in
push
popa
rcr
dec
add
mov
lods
inc
jns
dec
ds
and
dec
sub
fwait
inc
and
sbb
mov
outsl
test
outsb
mov
jmp
push
jg
mov
outsl
pop
insb
lods
sahf
mov
sbb
adc
xchg
xchg
imul
ljmp
pop
imul
push
push
push
pop
pushw
cmp
sbb
jnp
test
dec
or
cli
cld
fimuls
loope
dec
xor
xchg
jge
add
sbb
adc
gs
clc
mov
imul
leave
outsb
jno
outsl
imul
adc
sub
stos
test
fsubl
lret
fmul
fwait
pop
movsb
sub
outsb
icebp
and
xor
jmp
xor
scas
addr16
orl
push
pop
xchg
jle
mov
mov
add
hlt
inc
fcoml
or
adc
pop
pop
adc
and
ficompl
aas
subl
push
imul
icebp
pop
loope
xchg
inc
jge
pop
cmp
push
pop
push
loope
push
inc
jl
test
ds
hlt
cli
xchg
jg
sarb
out
mov
lcall
ja
mov
mov
xor
sarl
int
push
sub
mov
xchg
orl
mov
orb
add
push
and
lahf
inc
int3
out
rclb
mov
adc
adc
ficomps
add
mov
pop
add
lods
mov
outsb
push
mov
inc
cmp
add
mov
sub
arpl
xor
sqrtps
icebp
cld
mov
mov
rolb
int
mov
jge
push
stos
sbb
xchg
dec
enter
int3
test
es
rcrl
pusha
push
je
mov
enter
aas
jmp
iret
jo
dec
shlb
and
cmp
jbe
aad
adc
test
iret
xchg
xor
movsb
gs
enter
je
arpl
stc
out
loop
cmp
xchg
push
sbb
ljmp
stos
mulb
push
adc
push
inc
lahf
subl
mov
adc
and
xchg
cmp
pop
xor
int3
pop
icebp
cmpsb
push
sbb
loopne
orl
mov
xchg
mov
jge
push
ja
call
inc
iret
shll
cmpsl
adc
fucom
iret
and
xor
ret
ja
jg
mov
shrl
pushf
push
call
shlb
jo
cmp
inc
repz
nop
sub
sbb
jg
jae
mov
mov
jno
mov
ret
mov
push
adc
lret
leave
aas
fstpl
aad
mov
pop
and
mov
adc
or
pop
jp
mov
xchg
mov
sahf
inc
outsl
inc
sub
sbb
mov
iret
cmp
xor
pushf
push
mov
es
or
icebp
fldl
scas
fwait
ret
push
gs
fstpl
fmuls
pushf
mov
jle
popa
aas
fsts
mull
ret
bound
inc
mov
js
or
mov
mov
cmp
mov
add
daa
es
ljmp
xchg
into
loop
test
aas
xchg
insl
jo
popf
movsb
leave
addl
add
pop
push
das
mov
mov
pop
sub
or
sbb
cmp
jg
fwait
add
xor
ljmp
push
jl
fldl
sub
outsl
jb
or
jns
loopne
cmpb
lea
mov
sub
popa
lock
sbb
mov
cld
or
lock
sti
leave
or
inc
lods
mov
sbb
cmpsb
mov
mov
pop
daa
mov
out
out
cmp
mov
roll
sar
arpl
les
ret
lcall
inc
or
cmp
sbb
shrb
inc
push
cmp
mov
fcmove
addb
push
xlat
xor
jl
inc
sub
inc
inc
mov
xlat
sub
fmull
dec
or
imul
mov
and
or
dec
insb
mov
cmp
mov
leave
cmp
sbb
pop
lcall
or
imul
in
insb
dec
inc
and
jmp
fcmovb
pop
sub
xchg
fdivp
insb
loope
jae
jne
xchg
jns
jge
cmp
sub
lds
xchg
stos
daa
mov
cltd
arpl
mov
mov
sbb
fnstsw
fadds
xchg
dec
and
mov
test
add
adc
sbb
inc
lods
inc
adc
aad
sahf
jg
dec
lcall
jle,pt
jae
imul
insb
rcrl
bswap
push
mov
hlt
ss
rcl
das
ret
push
loope
aas
jbe
mov
jp
in
push
loope,pt
cmp
mov
mov
inc
add
aas
rclb
dec
push
cmp
hlt
mov
sahf
cli
or
fidivl
jge
ficompl
repnz
popf
mov
mov
ss
add
fdivrl
aaa
or
cwtl
scas
or
hlt
xchg
jp
xor
ret
cltd
pushl
lret
out
dec
push
shl
int3
jne
scas
rcrl
pop
psubd
iret
iret
pop
sbb
addr16
adc
in
std
js
pop
pushf
mov
pop
cs
sub
pop
lcall
mov
sbb
push
aas
mov
lea
aad
inc
inc
mov
dec
insl
sarl
push
ds
adc
les
rolb
outsl
dec
dec
jg
or
leave
adc
pop
push
inc
xor
xchg
je
pop
and
cld
or
incb
mov
fstps
dec
cmp
repnz
mov
pop
addb
add
or
pushf
or
xor
push
jo
mov
scas
inc
cmp
insl
ss
jne
xor
lods
and
test
into
inc
insl
cmp
fimull
inc
sbb
mov
outsl
cwtl
loopne
jbe
jl
xor
mov
inc
xchg
mov
mov
pushf
push
pop
sarb
jge
xor
enter
cld
mov
fnstcw
or
push
xor
lahf
ja
xchg
cmp
ljmp
mov
js
pop
popa
adc
xor
int
sbb
movsl
mov
popa
lret
or
fisubrs
adc
lods
jae
lods
stc
dec
sbb
push
mov
mov
rcrb
insl
mov
fisubs
out
repz
movlps
inc
mov
stc
pop
sub
push
cli
cmp
mov
insb
insb
inc
call
push
push
int3
mov
repnz
popf
xchg
shlb
mov
xchg
xchg
cmp
mov
pop
ja
rol
call
and
aam
insl
and
int3
dec
pop
insb
dec
jle
movsb
pop
in
cmpsb
ljmp
hlt
das
sbb
add
test
addr16
fdivs
adc
mov
jno
cmp
in
std
std
dec
iret
repnz
xor
ret
hlt
cmp
pop
shlb
sub
lock
push
xlat
mov
loopne
cmpsl
push
lock
inc
in
and
cwtl
into
orb
sub
sub
pop
es
dec
add
dec
ss
fistpll
ja
sub
push
xlat
and
aam
daa
push
loope
int
jmp
jg
jno
pop
pushf
mov
data16
mov
shll
inc
rcrl
or
push
nop
push
adc
cld
jecxz
pop
mov
add
cmp
or
dec
adc
mov
xchg
pushf
dec
xchg
mov
rolb
loopne
jg
xchg
mov
pop
xorb
jne
loope
addr16
push
adc
out
mov
and
push
rcr
mov
pusha
push
cmp
stc
and
mov
arpl
jo
fsubs
repnz
push
data16
mov
pop
mov
fucomp
das
in
sahf
mov
adc
loop
aaa
add
mov
loope
lret
push
aad
push
or
js
stos
mov
jne
out
lods
scas
aaa
ljmp
insl
add
mov
mov
subl
pop
push
stos
repz
aaa
stos
mov
aam
test
adc
in
shl
subl
mov
popa
fistl
lods
loop
dec
fsubs
push
fists
cmpsb
jmp
nopl
ficomps
jo
fmuls
xor
addr16
xor
or
xlat
jo
pop
mov
js
adc
sti
dec
jbe
test
das
mov
mov
imul
hlt
and
dec
das
test
lods
fsubrl
mov
xlat
mov
insb
mov
ret
push
cmp
out
push
aas
shrl
lods
pop
sub
push
or
int
jb
imul
and
mov
test
mov
fisttpl
clc
es
push
insl
adc
pusha
ficoms
cmc
fidivrs
fs
call
or
push
jnp
cmp
data16
stos
and
pop
cmp
or
lahf
pushf
stc
adc
rcll
pop
push
and
test
adc
sub
int
outsl
sbb
popa
push
enter
mov
dec
fsts
or
jo
cld
fcmovnb
jbe
cmp
pop
push
dec
or
in
dec
push
xor
adc
les
cli
shl
sbb
call
jmp
sahf
pop
in
outsb
enter
shlb
cmp
cmp
xchg
test
test
adc
iret
loopne
adc
jo
js
scas
push
inc
mov
in
xchg
inc
dec
std
mov
mov
ds
daa
jnp
leave
fdivrs
daa
sbb
int3
xor
setae
loop
pop
repnz
xchg
fs
xor
clc
mov
lcall
js
test
popf
jb
xchg
lea
addr16
fcompl
jge
mov
mov
ret
call
fisttps
outsl
pop
pop
xchg
adc
iret
cli
xchg
xor
out
movsb
cmp
inc
mov
dec
dec
adc
mov
call
xchg
lods
jle
inc
mov
or
popf
dec
ljmp
mov
into
repnz
ja
push
push
cmp
daa
adc
pop
xchg
xchg
outsb
icebp
arpl
hlt
dec
movsl
sahf
xchg
sbb
pop
cld
in
mov
pop
stc
cmp
es
sbb
in
mov
aad
addr16
inc
xor
push
inc
add
ret
test
pop
lods
xchg
sbb
cmp
into
jp
lods
pushf
std
sbb
popf
cmp
mov
add
xor
jmp
push
pop
cmp
imul
sbb
je
cltd
adc
mov
mov
add
mov
stc
repnz
fmulp
pop
mov
xor
out
call
inc
push
outsl
lock
or
xchg
sub
iret
stc
int3
scas
test
stos
or
ljmp
call
testl
pusha
push
outsb
ss
lret
sarl
mov
out
cmp
scas
adc
mov
add
test
scas
sub
adc
xchg
lcall
xlat
das
cli
es
push
loopne
jae
inc
lods
lcall
add
xchg
sub
lret
out
jl
or
pop
xlat
jne
add
popa
test
fisttpl
push
ja
addb
mov
inc
int
mov
mov
scas
test
lcall
sbb
shl
cmp
sbb
fildl
into
pushf
xchg
xchg
scas
dec
add
jns
or
testl
dec
jle
out
pop
insl
fdivl
shll
mov
rcll
xchg
shr
stc
mov
sahf
sub
cmp
and
add
cli
mov
test
scas
sub
mov
cs
fs
aas
xchg
push
or
fs
mov
mov
fnstenv
dec
aas
cmc
add
js
lret
mov
hlt
push
adcl
push
movsl
push
inc
and
add
cld
fmuls
shrb
pop
and
sbb
or
xor
lahf
jmp
pushf
fs
int3
xorps
or
pop
mov
out
push
sub
add
loope
push
mov
fwait
dec
pop
sbb
mov
and
jmp
xchg
iret
pop
js
mov
jp
jo
nop
out
es
jnp
adc
cmp
popa
out
mov
in
dec
cld
mov
pop
push
xchg
ret
lods
jne
pop
xor
pusha
mov
jg
fadds
dec
in
dec
pusha
mov
imul
cmp
ficompl
sti
pop
and
andb
pop
jno
in
arpl
shll
mov
loope
in
dec
pop
icebp
aad
jg
jno
pushf
gs
js
adc
pop
mov
jae
dec
add
push
mov
ljmp
sub
sarl
scas
mov
jl
adc
add
mov
jg
mov
aad
mov
sub
xchg
pop
ja
sbb
xor
movsb
outsb
movsl
jmp
or
fmull
mov
sbb
dec
aad
inc
adc
jp
repz
sbb
or
and
in
mov
ret
fcomip
lret
inc
mov
push
arpl
repz
lahf
pop
ja
hlt
addr16
adc
fucom
stos
jae
xchg
dec
call
cmp
add
aam
xchg
fadd
push
movsl
js
cmp
btrl
shll
js
xlat
dec
sub
lret
fildll
dec
lods
flds
xchg
or
jne
and
and
aaa
xchg
cli
xor
jb
inc
rcl
xor
lahf
ret
xlat
push
add
sbb
push
or
ds
js
je
jo,pt
cmp
ljmp
or
in
stos
cmc
jb
inc
fiaddl
push
pop
das
outsl
adcb
outsl
jb
shrl
sub
aad
stos
sbb
dec
sub
outsl
sbb
sub
or
cmc
jp
xor
imul
or
mov
test
lods
je
cli
adcl
das
pusha
sbb
outsl
mov
or
xor
adc
jne
push
mov
xchg
out
pop
cmp
ss
mulb
icebp
xchg
fwait
cld
test
mov
popa
cmp
ljmp
pop
mov
icebp
pusha
pushf
iret
lret
mov
or
sbb
into
inc
jnp
fstpt
aaa
scas
aad
mov
jne
pop
stos
add
and
pop
arpl
test
testw
data16
call
push
out
or
or
insl
pop
add
cmc
xor
movsb
inc
aam
sub
outsb
add
push
push
incl
jno
es
inc
push
dec
insl
and
jg
pop
adc
lahf
mov
mov
dec
mov
mov
add
xor
inc
jp
sahf
mov
mov
xchg
ret
push
jmp
test
insb
inc
adc
push
fldlg2
xchg
stc
lahf
push
repz
jae
mov
push
dec
ficompl
dec
jae
dec
pusha
fs
hlt
adc
cli
incb
jle
lods
jl
bt
dec
into
adc
adc
lea
push
int
jns
xchg
dec
mov
mov
adc
ljmp
addr16
xor
xchg
stos
lcall
repnz
and
mulb
mov
jo
shlb
mov
adc
outsl
into
dec
nop
fwait
push
jns
adc
mov
subl
jecxz
push
ljmp
or
cmp
push
mov
xchg
je
aaa
mov
repnz
push
aad
fs
jb
lods
mov
jle
arpl
dec
addr16
in
aas
mov
inc
dec
push
in
adc
pop
sub
inc
sbb
cwtl
addr16
add
xchg
mov
mov
lcall
fs
lea
inc
arpl
icebp
pop
sahf
les
and
xor
call
xor
mov
and
out
push
cmp
dec
stc
aaa
jno
in
sti
or
mov
mov
pop
repnz
xchg
fdivrl
int3
xchg
dec
xchg
arpl
popf
jae
push
loope
cmp
cld
aad
jmp
stos
sti
lret
inc
hlt
pop
push
lahf
mov
inc
push
lea
mov
jl
push
xchg
or
jecxz
lods
push
shl
lods
dec
inc
dec
push
bound
fs
push
cltd
mov
jnp
dec
loop
dec
push
mov
dec
mov
sub
nop
jmp
loope
data16
test
daa
pop
pop
push
mov
imul
xor
fistpl
icebp
hlt
cs
rcr
sbb
xor
es
cvttps2pi
xchg
or
and
xchg
ret
inc
mov
nop
xchg
test
popf
insl
inc
add
ljmp
sub
cmp
push
int
pop
sbb
push
movsb
jmp
jge
pop
adc
repz
mov
mov
jmp
jb
add
mov
sub
cmp
mov
lds
pop
pop
pop
decb
fldcw
cs
lahf
dec
push
inc
xor
push
lods
cwtl
dec
fs
sbbl
nop
jae
jecxz
xchg
out
bound
fdiv
ljmp
js
sub
gs
cmpsb
cmp
push
or
ss
icebp
xchg
les
dec
into
imul
pop
fsubrs
and
xor
lea
adc
adc
add
cltd
pop
fistl
mov
mov
stc
cmp
repz
push
or
mov
lock
inc
sbb
mov
aas
push
xchg
shll
xchg
xor
jns
mov
jge
sbb
repnz
ja
adc
filds
pop
dec
clc
add
or
mov
imulb
fucomp
ror
clc
mov
xchg
mov
mov
dec
mov
pop
push
in
lea
iret
lds
adc
sbb
addb
sub
lret
ret
out
adc
int3
imul
sbb
hlt
mov
jo
push
mov
cmpsb
cld
jmp
mov
or
pop
ss
fwait
inc
negb
xor
clc
test
sbb
sub
cmc
cli
inc
and
or
push
cmpsl
mov
out
dec
imul
jmp
insb
mov
mov
mov
rcrb
cs
and
sbb
sub
hlt
cmp
push
mov
lods
sbb
mov
das
dec
out
popa
shrd
pop
add
cmp
outsb
fisttpl
or
test
rcr
sbb
leave
fadd
fabs
sbb
scas
pop
iret
adc
inc
jbe
lods
stos
js
aad
cmp
incl
adc
inc
push
test
arpl
cmp
cs
jle
test
test
sti
in
add
clc
shl
xor
or
inc
rcll
mov
or
xchg
loop
cmp
adc
sahf
ljmp
jg
mov
xor
push
xchg
and
mov
cmp
adc
movsb
lea
int3
lcall
or
ja
sti
js
inc
push
inc
inc
jo
pop
inc
movsl
lea
add
enter
outsl
pop
mov
xor
jge
jmp
test
or
and
scas
xchg
aad
int
incb
xchg
scas
sub
jmp
inc
sub
and
pop
bound
stos
popf
or
xor
lods
xor
mov
daa
mov
loopne
rorb
int3
clc
les
mov
jo
test
push
fmul
sub
xor
insb
int3
stc
loope
leave
and
and
jne
inc
sahf
mov
push
adc
dec
mov
inc
daa
and
jns
push
rcrb
je
inc
pop
inc
sub
push
dec
cmpsb
mov
cmp
addr16
orl
sar
aad
inc
sbb
bound
dec
xlat
or
movsb
adc
fadds
inc
cwtl
and
dec
movsb
in
ja
icebp
clc
jns
addr16
das
repnz
loop,pn
cli
inc
pop
loope
rorb
mov
ret
mov
xchg
xchg
jge
push
mov
mov
movsb
cmp
push
jno
jbe
jmp
cmpsl
fsts
pop
in
fwait
push
jmp
stos
sbb
gs
das
bound
fistl
repnz
sbb
jmp
push
push
push
ret
cmp
xchg
movsl
shlb
in
enter
divb
xchg
xchg
push
fidivrl
scas
pop
testb
push
hlt
dec
and
inc
lds
sub
sbbb
xchg
flds
cmp
nop
lock
xor
pop
ffreep
pop
test
testw
in
xchg
push
jmp
int
pop
cmpb
inc
mov
and
push
cld
test
push
lea
insb
adc
mov
loopne
sbb
negb
adc
xchg
fiaddl
cmpsl
cs
mov
imul
sub
enter
cmp
iret
pop
fcomp
rorl
jnp
mov
sbb
mov
and
clc
mov
dec
das
in
push
fistps
cmp
fcmovu
sub
nop
dec
data16
pop
mov
dec
jo
in
and
lea
pop
jecxz
pop
lea
arpl
stos
cwtl
movsb
adc
xchg
mov
subl
xlat
stos
xlat
inc
xchg
and
push
and
inc
out
add
int
fiadds
mov
adc
mov
cmpl
jb
dec
int
sbb
lret
arpl
mov
and
cmpsb
cmp
sbbb
mov
xor
insl
in
xchg
xchg
in
popf
test
add
add
sub
adc
fnstenv
dec
fildl
lock
lea
and
pop
or
test
pop
xchg
aam
adc
xor
mov
scas
inc
jb
ss
inc
lods
imul
mov
push
fldl
inc
test
xchg
into
enter
mov
sbb
mov
lcall
lcall
mov
lret
jne
inc
sub
cmp
mov
mov
push
xchg
fwait
aam
push
push
stc
in
and
pop
mov
cmpsl
aaa
nop
mov
sti
pop
mov
bound
push
adc
inc
xor
add
inc
dec
stos
sahf
pop
jno
pop
lret
adc
or
scas
cmp
hlt
push
inc
dec
cmpl
sbb
cmp
or
adc
xor
fstp
or
lahf
pop
sub
add
lea
jne
iret
mov
pop
pushf
outsb
push
insl
fimuls
push
int
mov
in
movsb
mov
push
jae
xchg
scas
mov
jmp
xchg
faddl
test
xchg
lods
popa
imul
jecxz
cmc
mov
pop
inc
push
inc
jecxz
enter
push
nop
jge
mov
jns
lea
push
jl
lds
in
xchg
pushf
lds
xchg
and
sbb
cli
dec
xchg
xor
cmpsl
sub
popf
cmc
aam
fldl
jecxz
fisttpll
movsl
inc
in
notb
pop
mov
ret
cmp
lahf
sarl
xchg
jg
xchg
imul
loopne
sbb
aaa
mov
pop
es
dec
rol
jmp
push
popa
xorl
rorb
insl
inc
cs
and
sub
scas
push
mov
jle
ret
jge
cmpsb
dec
mov
jno
mov
sahf
mov
jbe
inc
pop
fldcw
arpl
mov
pop
xor
fdivl
ss
andl
sbb
mov
notl
jae
sub
pop
mov
sbb
jae
pop
and
enter
push
or
mov
data16
shl
xor
cmp
or
iret
pop
fbstp
ja
out
or
cwtl
stc
dec
repz
sub
lods
loopne
mov
in
sti
das
add
imul
pop
pop
pop
inc
into
out
inc
jle
lcall
mov
stos
cld
jmp
push
xor
xchg
pop
cmp
mov
loope
ret
jae
aaa
insb
mul
ret
addr16
sahf
pop
dec
pop
adc
cmp
xor
imul
adc
xchg
push
mov
jns
xor
inc
xchg
lcall
jne
push
je
mov
cld
in
sbb
pop
pop
or
mov
xchg
inc
cli
in
inc
ljmp
add
scas
stos
or
push
inc
or
pusha
or
divl
mov
sub
dec
rclb
sarl
mov
jns
xchg
bound
jne
dec
test
sbb
ja
testb
pop
insl
cmp
sub
std
inc
es
mov
ss
and
testb
adc
aas
cmpsl
xchg
mov
inc
stc
sub
add
movsl
cmp
aas
das
xor
xor
mov
mov
xchg
insw
mov
mov
xchg
xchg
mov
pop
aam
add
lahf
add
xchg
arpl
fadd
cwtl
lret
adc
ret
push
xchg
jge
mov
mov
stos
inc
addb
dec
pop
cmp
jmp
sbb
mov
icebp
aaa
test
iret
push
sbb
push
mov
push
lods
jle
fcoml
mov
jbe
cwtl
dec
iret
mov
rolb
cmp
jl
neg
dec
movsl
popa
pop
fiaddl
jle
jno
inc
les
in
loopne
jne
mov
in
mov
clc
inc
loop
inc
fdivs
mov
push
dec
xchg
data16
pop
or
or
out
scas
mov
sbbl
movsl
mov
inc
push
shlb
mov
add
mov
dec
pop
dec
dec
hlt
scas
mov
test
mov
leave
sbb
gs
xchg
dec
fnstenv
in
xchg
jno
lods
call
xor
push
lcall
xchg
lods
incl
mov
stc
jl
xor
jl
adc
ffree
mov
int
shrl
lods
stc
jg
daa
push
pop
pminub
lods
cltd
dec
and
inc
out
aam
leave
mov
inc
cmp
sbbl
sbb
mov
into
cmp
jge
xchg
cmp
add
out
mov
mov
adc
xchg
jb
insb
ffree
fnstenv
lahf
outsl
push
pusha
cmp
inc
stos
jecxz
jne
pop
bts
xor
adc
rcrb
jae
mov
jge
mov
divb
imul
das
sar
jg
iret
adc
inc
fwait
pop
adc
call
dec
sub
xor
ljmp
sub
or
ret
js
cmpsl
mov
push
mov
idivb
dec
jg
jle
mov
jp
or
jb
and
cmp
push
cmp
cmp
mov
jle
xchg
sub
fists
and
xchg
push
pop
sbb
lea
mov
or
fsubp
aaa
lret
int
xor
cmp
pop
push
lcall
mov
add
mov
lcall
mov
jb
inc
xchg
adc
in
lea
pop
xor
pop
fcoms
mov
pop
rcr
stc
fiaddl
jmp
xlat
leave
test
test
cmp
push
movsl
xchg
pushf
aad
fmull
fcoml
in
jg
adc
fisubrl
pushf
xor
and
vpaddsb
ljmp
fs
pop
xchg
stc
aam
mov
cmpsb
xchg
loop
test
fwait
or
fdivs
lods
mov
mov
inc
adc
inc
xor
pop
scas
out
scas
lods
xchg
stos
inc
aad
in
inc
mov
ja
jne
enter
mov
sub
adcl
mov
mov
test
cmp
out
xchg
inc
mov
inc
cwtl
sbb
sarb
cmp
push
sbb
sub
scas
icebp
idivl
add
mov
sar
jno
lods
pop
call
fisttps
outsb
mov
test
das
xchg
inc
insl
imul
dec
inc
cmp
dec
insb
or
add
adc
fwait
decb
js
pop
mov
ss
mov
and
lea
push
mov
jle
add
stos
sub
mov
xchg
insb
stos
jns
cmp
adcl
mov
mov
or
pop
and
xlat
test
xor
pushf
jge
pop
lcall
lds
and
mov
xor
imul
push
mov
ljmp
lds
lods
inc
outsl
and
sbbl
add
js
in
xchg
clc
rcpps
add
push
lsl
lea
dec
jbe
arpl
xlat
es
and
add
jnp
enter
jne
mov
pop
jae
xor
mov
scas
xchg
mov
mov
aad
stc
mov
jg
rcl
ficompl
hlt
imul
in
inc
lret
jne
jb
or
lahf
and
and
sbb
scas
stos
sub
int
mov
cmpsl
mov
xchg
test
mov
orb
xchg
and
sarl
mov
aas
adc
cmc
je
mov
mov
int
xchg
mov
daa
jb
cs
mov
dec
push
inc
add
jns
xchg
xbegin
lock
push
sbb
les
jecxz
fisttpl
addr16
add
push
mov
incl
cmc
repz
mov
add
push
test
loope
push
mov
add
cli
sub
dec
lock
iret
pop
jecxz
aam
lods
in
mov
sahf
sub
div
popf
inc
push
inc
pop
adc
dec
push
xlat
pop
dec
add
jo
mov
xchg
mov
icebp
push
xchg
pop
and
popa
ds
mov
cmp
js
fidivrs
mov
jge
gs
add
popf
push
and
insl
fstpt
push
mov
pushf
push
add
xchg
pop
adc
fistps
xchg
dec
ret
add
xor
inc
mov
out
out
and
sub
push
xchg
clc
lock
int
cmc
call
or
or
out
loope
xchg
jg
sbb
dec
cmp
push
jnp
arpl
inc
mov
lahf
push
fdivr
cmp
lret
popa
lock
mov
fstps
cmpsl
jnp
mov
mov
mov
ja
dec
mov
add
rclb
mov
call
cmp
fdivr
push
mov
adcb
cmp
mov
into
push
inc
shll
inc
sub
jg
xchg
add
mov
push
sbb
push
or
loope
mov
mov
xchg
dec
inc
daa
lcall
popa
pop
jnp
lcall
idivl
xor
cmpl
aam
mov
cmp
movsb
fidivl
test
mov
push
rcl
sbb
sarl
cmp
mov
lods
jns
dec
mov
insb
stc
lret
and
adc
mov
jecxz
outsl
xor
inc
add
out
into
int
mov
push
mul
push
int
std
mov
mov
inc
sarl
mov
sbb
and
divl
outsl
scas
xor
cmp
shll
sbb
inc
mov
cmp
lods
rolb
lds
lods
cli
scas
fsubrs
mov
jno
push
lds
sub
jge
push
fwait
mov
xchg
mov
das
insb
int
mov
mov
inc
cmp
cmpsl
sbb
and
pop
jp
add
push
and
mov
icebp
call
into
adc
and
xchg
mov
mov
inc
lock
out
dec
or
popa
mov
jnp
mov
lods
mov
stos
rep
jbe
jae
int3
push
lret
dec
sub
mov
xlat
jl
sub
mov
mov
cmp
sbb
mov
inc
pop
jp
xchg
ficomps
push
fcoml
dec
leave
test
ljmp
lahf
or
sub
pop
aas
aam
cltd
xchg
xchg
push
xorb
mov
adc
mov
jo
push
add
pop
imul
cmp
jae
pop
ljmp
push
and
sbb
mov
sbb
inc
mov
lock
sbb
xor
add
cltd
pop
icebp
aam
loopne
or
gs
and
mul
movsl
mov
mov
pop
outsb
jp
cmpsl
ret
imul
dec
xchg
cmp
cmpl
jge
insl
add
inc
inc
test
mov
inc
xchg
ds
inc
jge
mov
inc
stc
div
addr16
sbb
dec
lea
mov
shll
js
cli
and
cwtl
add
pop
cs
jns
lods
pop
cmp
dec
jo
scas
fnstenv
out
xor
fucomp
pushf
mov
push
js
mov
push
push
addr16
jecxz
int3
sub
pop
ja
push
mov
or
jle
push
inc
adc
add
xor
std
lods
lods
push
jae
cld
pop
jecxz
cmp
aad
adc
lret
insb
mov
jge
mov
push
pop
or
push
jp
divb
adc
mov
mov
xor
and
add
lds
jae
and
jmp
shll
and
pop
lock
rorb
pusha
add
mov
stc
cmp
gs
std
xchg
pop
fdivrl
jb
xor
jge
adc
scas
repz
push
fsubrs
mov
xor
popl
movsb
aaa
dec
inc
fs
xchg
push
jae
mov
adc
fdivrs
xor
int
inc
dec
out
or
popa
lret
mov
cli
stos
cwtl
add
mov
test
xor
out
jle
sub
lods
jg
sbb
mov
push
push
pusha
jae
enter
push
xor
mov
out
pop
test
mov
out
ja
mov
cmp
leave
pop
cmp
test
inc
std
or
jmp
imul
test
cwtl
lods
es
cld
fildl
pop
sub
cmc
addr16
hlt
pop
sbb
pop
inc
mov
sub
mov
std
and
jmp
xchg
pop
pushf
cmp
jl
jg
xor
mov
inc
add
in
stos
sbb
mov
bnd
into
iret
pop
jmp
mov
cs
in
std
or
clc
jmp
jp
out
mov
xchg
xor
cltd
fs
rcll
mov
ret
pushf
or
xchg
shrl
je
and
mov
xchg
cmpsl
pop
js
pop
movsl
ret
loop
stos
or
and
pop
int3
clc
enter
outsl
dec
fs
ss
jl
mov
es
push
mov
int3
sti
add
out
or
mov
add
jecxz
repz
pusha
dec
dec
fcoml
xor
and
mov
and
lahf
push
xchg
rorl
shll
repnz
test
cwtl
mov
ljmp
adc
jns
sbb
dec
fisubs
dec
lods
and
pop
cmc
in
push
stos
inc
cmp
aad
add
cmp
fwait
push
xor
aam
sub
ds
es
fildl
pop
xchg
in
push
dec
fwait
or
lea
mov
ror
pop
ja
sub
stc
mov
dec
add
inc
push
and
lret
mov
dec
add
mov
lahf
int3
hlt
movsb
sbb
bound
stos
insl
xchg
leave
mov
mov
push
js
ror
add
jno
dec
dec
xor
xor
clc
adc
mov
jl
push
cmpsl
add
inc
dec
test
jnp
push
rorb
rcll
testl
mov
sti
sub
int
sti
pop
mov
call
cs
aad
aas
sbb
mov
jge
test
inc
test
fmuls
icebp
lods
jle
sub
mov
mov
xchg
mov
mov
jno
cmc
popf
lahf
mov
je
pop
ljmp
push
dec
adc
pop
imul
add
cmpb
shll
imul
lret
divb
xchg
movsb
aam
sbb
jns
out
dec
int3
out
mov
cmovnp
or
pop
xchg
jp
push
push
lcall
dec
rcrb
jbe
lods
sub
loopne
xor
std
ja
jb
xchg
mov
jmp
pop
mov
jmp
sbb
add
jmp
cwtl
lea
loop
or
push
into
lahf
adc
xchg
or
push
shll
in
imul
dec
ljmp
adc
lcall
mov
loopne
aaa
dec
stc
push
cli
mov
adc
movsb
push
push
les
and
and
jns
or
mov
scas
adc
fs
pop
aaa
sbb
jnp
aad
pop
lds
dec
jns
dec
push
xchg
loope
sbb
jmpw
dec
imul
mov
lods
idivb
push
push
ret
clc
add
pusha
jmp
cwtl
into
ljmp
repz
add
ljmp
lods
subl
out
pop
rol
dec
adc
jae
mov
xor
xor
inc
popf
mov
jp
dec
pop
mov
inc
push
mov
mov
mov
in
pop
jge
and
sub
jecxz
push
mov
or
mov
jmp
jb
mov
sub
int3
mov
xchg
xor
fisubrl
sub
test
insl
rcrb
lcall
cmpsl
pop
mov
dec
cs
aas
or
push
jno
lret
bound
jbe
stos
inc
imul
inc
sahf
xchg
mov
aas
js
mov
sub
aad
add
pop
lcall
in
and
clts
sbb
and
and
push
repz
inc
sub
mov
pop
fwait
pop
jle
pop
outsb
hlt
jbe
jno,pt
cmp
repz
loopne
pop
push
test
gs
stc
xchg
dec
push
call
call
mov
aad
and
mov
dec
outsb
fstps
xor
jg
sarb
cmpsl
popw
cmp
imull
or
adc
bound
ret
jl
aaa
sahf
lds
outsl
mov
sub
pop
and
test
test
sbb
aas
scas
mov
push
andb
pop
dec
aas
jns
fldl
test
pushf
aad
fldenv
xor
dec
loope
mov
push
cmpsb
fwait
xor
xor
fistpl
shl
fiadds
sub
aas
lcall
mov
jne
cltd
mov
sahf
adc
into
cmp
out
jbe
xor
push
mov
pop
repz
test
popa
scas
mov
sbb
mov
fbld
mov
dec
in
in
js
sub
pop
cltd
idivb
aas
mov
or
fsts
fwait
cltd
sbbb
mov
cmpsb
idivl
rcrb
inc
enter
pop
push
push
popf
and
sbb
test
add
iret
dec
mov
or
gs
rcrb
jge
repnz
in
ja
mov
stos
sar
je
sbb
ret
or
movsl
sahf
cmpsb
cmc
sub
jnp
test
in
mov
mov
fcomps
jmp
fnsave
add
push
jb
jge
mov
fmull
orl
into
push
faddp
addl
add
mov
loopne
or
dec
mov
lret
inc
inc
adcl
lods
inc
dec
nop
push
jmp
add
mov
js
pop
pop
mov
mov
jl,pn
out
lahf
mov
mov
jecxz
stos
mov
add
push
xlat
jle
addr16
add
aaa
test
dec
pinsrw
and
push
push
leave
insl
push
cwtl
mov
push
dec
ds
movsb
inc
mov
xor
loop
in
mov
jne
dec
les
push
jle
inc
push
jae
in
imul
jle
jb
and
inc
pushf
jns
or
cltd
sti
push
jmp
sub
adc
dec
insl
bound
jl
cltd
pusha
pop
sarl
repz
stc
cmp
jp
adcb
testb
adc
mov
and
int3
xlat
jne
push
je
adc
xchg
and
push
cli
mov
jb
cmpsl
adc
jae
sub
and
pop
xchg
sub
stos
sbb
ffreep
push
repnz
pop
xchg
lcall
xchg
pop
mov
mov
clc
sub
imul
mov
inc
aas
inc
jmp
adc
iret
inc
mov
sti
cltd
pop
inc
sub
inc
dec
inc
inc
mov
pushf
push
rclb
push
mov
sbb
fldl
mov
mov
xchg
jb
inc
icebp
or
enter
outsl
jb
mov
lods
ds
roll
push
dec
repnz
push
mov
push
jecxz
lock
mov
arpl
jl
pusha
cwtl
or
jl
sbb
pop
cmp
push
fdivrp
and
dec
add
inc
bound
jmp
iret
or
add
cmc
sub
mov
or
cltd
mov
daa
cmc
insl
leave
pop
iret
jae
popa
and
dec
pop
mov
movl
adc
cmp
mov
or
jp
lret
cmp
loop
fwait
lret
fwait
test
add
inc
decl
mov
icebp
aad
scas
pop
xor
sbb
out
dec
cli
sti
mov
clc
loop
jns
jecxz
mov
cmp
jmp
lods
aad
mov
js
mov
mov
stc
xlat
dec
mov
push
rcr
outsl
lds
mov
inc
xchg
outsb
or
xchg
in
or
jecxz
daa
mov
push
sub
enter
imul
movsl
pop
roll
int
in
and
add
sbb
fldenv
roll
mov
xor
idivl
lock
mov
jo
mov
xor
inc
scas
mov
dec
xor
loope
shr
stos
sub
and
cmpsb
fcomps
jle
cmp
decb
es
loop
roll
lods
aam
jp
ficomps
push
sbb
inc
sub
into
idivl
sbb
jno
popa
fdivs
pop
jnp
sub
fsubs
rcrb
pop
jno
stos
pushl
cmp
xor
cs
fucomp
adc
sub
dec
sbb
outsb
cmp
jecxz
cltd
mul
sbb
xor
int
fwait
scas
js
mov
pop
push
jg,pn
push
xor
mov
sti
add
loopne
xchg
pusha
and
enterw
add
pop
addr16
push
in
lods
jo
push
pop
loopne
mov
mov
adcb
ror
xchg
test
call
lds
inc
cmp
dec
mov
xlat
mov
repnz
adc
pop
mov
std
jmp
sbb
sub
je
aam
pop
adc
test
mov
fcoml
xlat
cmpsl
clc
cmpsb
xor
aad
jecxz
movsl
add
loop
cmp
fwait
in
sbb
pop
sbb
addr16
jb
es
mov
inc
aaa
and
xchg
pusha
or
xchg
mov
push
insb
sbb
aaa
xor
cs
std
and
mov
andl
lock
dec
adc
inc
inc
mov
cmp
gs
dec
adc
add
rcrb
out
test
pop
xchg
fisubl
inc
inc
xlat
subb
mov
and
fwait
ret
lock
xchg
mov
pusha
xchg
into
or
pushaw
cmpsb
mov
stc
xchg
je
cwtl
js
loope
loopne
inc
js
and
sahf
sbb
test
and
sub
xorb
mov
test
pop
jne
es
lods
xor
jno
ds
push
xlat
xchg
pop
test
mov
stos
pop
js
adc
push
add
repnz
stc
cwtl
insb
xchg
mov
icebp
sub
dec
inc
push
lea
mov
jns
mov
adc
cmpsb
scas
es
push
dec
push
loope
fxam
fistpll
cmc
out
fwait
inc
xchg
imul
or
jge
add
fbstp
dec
fdivrl
ret
or
mov
aam
mov
and
lods
repnz
addb
inc
lret
push
add
movsb
sub
aad
add
orb
jno
stos
mov
push
sahf
dec
sub
or
push
shrl
test
mov
and
sbb
xor
insl
mov
outsl
ss
test
mov
sbb
es
jmp
fcmovbe
inc
mov
or
aaa
push
ret
repz
clc
jb
xchg
or
sub
int
ja
lds
jnp
outsb
ds
bound
inc
sub
fisttps
lods
aad
ret
xor
out
ljmp
insl
outsb
scas
push
pop
jns
or
aaa
cmp
lret
nop
xchg
mov
mov
add
mov
push
mov
or
inc
push
push
adc
aad
aam
jne
and
xor
jno
inc
cmpb
add
lds
test
mov
adc
adc
mov
add
add
aad
adc
fcmovne
in
push
sbb
mov
xchg
cmp
pop
repz
dec
dec
adc
fnsave
dec
dec
cmp
cmc
mov
repz
mov
jp
dec
and
call
push
dec
jmp
shlb
mov
outsl
and
pop
xor
je
dec
lret
sub
mulb
cmp
pop
add
imul
dec
mov
push
xorb
int
addr16
sti
and
xchg
jne
or
call
daa
jge
scas
mov
insl
sbb
mov
int3
dec
inc
sbb
std
jecxz
push
push
cmp
fsubl
imull
repz
jge
stos
or
mov
scas
sub
and
loopne
pop
inc
xchg
popf
cld
jmp
sbb
xchg
imul
pop
lcall
fcompl
das
sbbl
jnp
xchg
sbb
test
test
xor
call
cmp
scas
lods
sub
jg
stos
js
movntps
mov
sub
sbb
or
xor
adc
call
jge
icebp
jne
and
cmpsl
mov
jecxz
pop
sarl
mov
cs
lcall
add
and
sti
imul
inc
cmp
data16
out
aas
and
mov
or
mov
jns
add
lret
addr16
xchg
pop
shlb
mov
mov
pop
pop
sub
mov
mov
mov
cmp
push
xor
xlat
out
push
fcoml
push
inc
jle
into
sbb
or
ja
mov
loopne
dec
ret
adc
lds
ja
repnz
jnp
adc
pop
rorl
jnp
jge
les
xor
fstl
pop
outsb
push
or
adc
dec
sbb
dec
xchg
pop
pop
inc
jns
addl
popf
push
mov
aaa
jmp
popa
xlat
repz
xor
push
mov
ret
push
jno
push
pop
xchg
or
jl
out
xlat
sbb
call
sub
insl
into
mov
pop
dec
mov
mov
popa
fidivrs
std
pop
push
inc
xchg
aaa
cltd
ret
sub
inc
aam
test
js
mov
sbb
jle
mov
mov
int
shrb
add
pop
sbb
incb
lea
cmp
adc
pop
nop
cvttps2pi
jb
lahf
in
insb
jne
or
out
leave
scas
ret
adc
cltd
aam
ljmp
mov
repz
dec
inc
sbb
dec
mov
cmp
mov
addr16
inc
mov
sub
mov
xchg
insb
leave
popa
jno
pop
ret
daa
arpl
addr16
js
jecxz
adc
loope
repz
jb
xchg
push
xchg
rol
dec
sbb
out
and
repz
jg
adc
sub
push
jo
in
pushf
push
rcrb
sub
mov
mov
and
and
xor
les
mov
mov
mov
jl
aas
filds
scas
or
mov
mov
xor
sub
fcompl
cmp
mov
test
gs
cmp
push
sbb
cltd
cmp
jg
push
lcall
addr16
pop
cmpsl
ds
inc
and
push
movl
sbb
xor
adc
xchg
mov
arpl
push
cmp
cltd
mov
xor
push
ret
cmp
jp
hlt
dec
out
and
lahf
mov
pop
jl
sub
dec
roll
cmpl
aas
inc
mov
dec
pushf
mov
sbb
lahf
std
jns
lcall
lret
mov
xchg
fbstp
lcall
add
ljmp
xchg
loop
mov
mov
lahf
ss
repz
mov
cmp
stos
movsl
insl
push
stc
mov
sahf
in
xor
lfs
sub
hlt
lock
jle
add
add
popl
push
imull
in
add
mov
or
das
mov
int3
sub
mov
sub
pop
movsb
les
loop
leave
sbb
lret
std
add
jnp
lret
mov
inc
lahf
imul
lds
mov
je
shr
add
lock
loop
mov
jp
jmp
ljmp
mov
lea
sbb
add
lahf
test
mov
mov
push
push
and
icebp
dec
mov
cltd
out
ss
sub
sbb
rcrb
push
stos
loope
and
dec
sbb
roll
cmpsb
inc
mov
test
andb
xchg
js
mov
push
or
jge
and
sbb
adcb
sti
mov
cmp
lods
cmc
js
dec
mov
jno
sbb
mov
test
das
xorl
ja
and
mov
push
pop
lods
out
jge
push
mov
mov
xchg
mov
leave
rcl
pop
xchg
fwait
popa
adc
pop
add
les
and
shr
insl
sub
stc
sbb
cli
sbb
jne
lret
stc
out
fildl
jno
push
push
cmp
mov
sub
mov
scas
rorb
mov
jne
xorl
pop
out
icebp
push
sub
add
addl
sbb
sub
add
lcall
fsubr
mov
aad
xchg
rcll
cmp
lods
filds
jne
lahf
inc
jge
jecxz
addr16
loop
pusha
push
test
or
jnp
xchg
pop
je
out
xchg
cmp
movsl
inc
xchg
fnstenv
cmp
add
mov
cwtl
xor
cmp
iret
mov
push
mov
pop
cmp
xchg
pop
lds
int3
arpl
cltd
data16
push
aam
in
push
push
fistpl
mov
jg
push
xor
cmp
or
test
add
data16
pop
jecxz
aam
add
cld
jne
aas
sbb
xchg
gs
add
jg
cmp
or
or
popa
cltd
inc
dec
fildl
mov
cwtl
xorl
mov
cmp
dec
push
ja
pushf
cmpsb
leave
mov
sahf
sahf
mov
in
or
mov
testb
das
sbb
fisubrl
dec
ljmp
sbb
mov
dec
std
xor
cmp
add
repz
aam
push
lock
fsts
mov
pop
test
push
dec
cmp
mov
sbb
push
or
xchg
pop
lds
jb
cmpsl
imul
das
mov
hlt
je
pop
or
ds
sub
aas
jp
adc
sbb
fmuls
lahf
push
xchg
pop
sub
enter
inc
iret
fisttpl
icebp
repz
cli
in
sub
sub
and
movsb
js
jmp
leave
lods
xchg
mov
xor
jo
add
lock
add
cmc
pop
and
xchg
fisubs
out
scas
cmp
push
lret
adc
mov
aaa
mov
xchg
push
push
inc
sbb
cmpsb
xchg
jl
and
ss
fdivl
test
into
aam
adc
popa
popa
inc
inc
inc
fstpt
sbb
loop
xchg
mov
and
lcall
push
lock
gs
xor
lret
movsb
lock
push
jmp
push
pop
push
sbb
mov
inc
push
jno
aad
jp
and
inc
xchg
pop
nop
push
xchg
push
sub
popf
lds
loope
pop
fisubl
push
insb
xchg
push
push
adc
pop
push
bnd
mov
imul
inc
sbb
sbb
mov
sub
sub
push
and
shrl
shll
cmpl
outsb
sahf
adc
mull
xor
clc
fcoml
inc
dec
test
sub
stos
cmp
aas
nop
arpl
jge
pop
mov
pop
popf
dec
icebp
jmp
xchg
fimuls
and
adc
adc
pusha
cld
sbb
pop
pop
or
pop
inc
adc
mov
mov
dec
mov
inc
sub
outsl
mov
dec
popa
jle
or
adcl
jbe
stos
jnp
int
push
push
sbb
jle
int3
cltd
push
adc
xchg
or
movsl
mov
test
cmp
push
push
jge
inc
scas
or
aaa
jmp
test
inc
mov
jle
aaa
int
lret
inc
xchg
xor
pop
scas
adc
and
push
ja
in
and
stos
ljmp
mov
outsl
xor
sub
rorl
mov
mov
xlat
inc
rcl
fs
fldt
jo
jecxz
cmpsb
negb
scas
mov
stos
sbbb
lock
sub
pop
out
int3
sbb
mov
loope
lods
jg
xchg
lods
adc
push
icebp
js
sub
cli
jbe
mov
inc
hlt
and
arpl
pushf
xchg
or
dec
dec
sbb
xor
jmp
jg
mov
or
ss
push
or
fs
das
jp
and
pop
test
pop
push
cmp
or
pop
push
pop
inc
dec
jecxz
lock
mov
out
rcrb
fidivs
xchg
sub
je
and
fisubs
test
je
test
test
mov
aaa
lcall
dec
add
jecxz
xor
stos
or
and
cltd
dec
subb
int3
sbb
nop
pop
push
repnz
sbb
push
mov
cwtl
and
test
xchg
imul
xchg
mov
pop
mov
cmp
gs
and
xchg
jle
fdivr
stc
aad
pop
dec
cld
inc
and
cmp
xchg
loop
push
call
xchg
fists
add
push
add
add
cmpsl
jle
jle
repz
mov
pop
jmp
cmovns
aad
or
sub
jno
pop
out
dec
add
push
pop
lds
jo
sbb
test
shrl
repnz
pop
pop
and
call
dec
sbb
dec
dec
gs
aaa
outsl
movsb
dec
mov
adc
js
jle
xor
adc
pop
mov
push
xchg
pop
mov
lods
inc
sbb
imul
jne
xchg
ror
ss
xchg
push
clc
xor
daa
int3
fists
xchg
mov
jg
ret
sbb
xor
sub
ret
imul
gs
fcompl
and
lret
in
cmp
rolb
or
xor
das
sub
jl
iret
shlb
pop
mov
add
iret
stc
stos
enter
rcl
mov
push
mov
or
jb
rorb
ret
movsl
adc
xchg
cmp
mov
lea
mov
mov
jb
mov
and
jmp
pop
push
pusha
push
ret
rep
mov
test
loope
cmp
sbb
cmp
mov
mov
outsl
out
in
push
mov
cltd
mov
sbb
jb
bound
push
shlb
cltd
push
lds
sbb
jmp
mov
xor
mov
filds
mov
push
xchg
out
mov
fcomps
hlt
add
bound
mov
mov
outsl
loop
mov
adc
icebp
xchg
mov
je
adc
cmpsb
ret
push
call
ja
inc
lret
and
call
mov
sarl
in
ret
loope
dec
imul
cmpsb
inc
cmpsl
or
je
xor
dec
jp
mov
dec
mov
xchg
incb
lods
inc
insb
mov
xchg
mov
cltd
cmc
cltd
cmp
dec
mull
mov
rcll
fs
xchg
sahf
hlt
bound
popf
xchg
jecxz
or
ljmp
pop
call
jg
mov
pop
jne
nop
fidivl
xchg
test
test
dec
mov
mov
mov
push
push
jp
idivb
pop
roll
xor
shrb
jnp
outsl
and
stc
sbb
pop
fsubrl
cli
in
push
xchg
add
cmpsl
or
ficompl
mov
stc
add
mov
ds
xchg
push
cmp
cmpsl
jmp
test
ss
adc
jg
mov
sbb
insb
inc
sti
sub
xchg
mov
addr16
dec
mov
cmc
sbb
mov
cli
andb
fnstsw
mov
ljmp
inc
cmp
push
sahf
push
cmp
movsb
jmp
mov
ror
cld
scas
iret
into
test
loop
pop
pop
mov
out
dec
loop
shlb
mov
push
dec
jg
mov
das
out
sbb
sahf
ljmp
pop
xor
mov
xchg
ss
rolb
mov
insl
jne
pusha
cmp
xchg
loope
and
fwait
les
loop
pop
jmp
lods
lret
sbb
sbb
rclb
pop
out
inc
adc
out
out
mov
pushf
mov
mov
mov
sub
nop
xlat
mov
ror
push
mov
sbb
lock
aas
shrl
mov
sbb
add
dec
test
scas
rcr
popf
mov
sbb
data16
jbe
jge
push
fadd
ja
mov
or
mov
fcmovb
cld
and
in
out
stc
adc
xchg
in
adc
rcll
sti
jae
insb
mov
lods
xchg
call
popa
sbb
pushf
pushf
adc
push
cmp
jne
fadds
push
jge
jle
cmp
iret
shrb
rcrl
lock
out
sub
pop
arpl
sbb
cmpsb
push
mull
xchg
loope
mov
imul
dec
inc
ljmp
rcrl
mov
fcoms
mov
sbb
sahf
dec
and
gs
push
and
pop
mov
sub
pop
and
stos
lret
mov
dec
xchg
inc
mov
imul
mov
jb
inc
adc
repz
negl
add
or
sbbl
pop
sbb
sub
icebp
rclb
dec
xorl
ja
xchg
cmp
dec
ret
jg
push
push
and
adc
cmp
xchg
insb
xchg
add
pop
dec
leave
fistpl
xchg
or
in
or
pop
out
lods
shll
mov
add
mov
jae
jle
mov
rcll
mov
es
lret
lret
in
add
adc
add
pop
mov
cltd
jmp
dec
xchg
cmpsb
push
test
bound
int
call
sbb
outsb
cltd
decb
fildl
insb
movb
std
cmp
test
sti
aaa
scas
dec
adc
divb
pushf
jg
les
sub
movsb
jecxz
inc
fs
sbb
into
add
lret
out
push
xchg
dec
mov
and
push
pop
or
fcmovu
sub
xor
pop
ds
jo
dec
cwtl
sub
xor
cmpb
sub
sbb
jmp
insb
mov
and
clc
aas
loope
loope
pop
dec
inc
xor
inc
sbb
sbb
xor
movsb
repz
mov
loop
dec
inc
push
fsubs
add
and
scas
jne
pop
add
sub
pop
ds
test
or
mov
dec
lcall
dec
xchg
in
aad
dec
stos
loop
scas
xchg
mov
out
ret
push
dec
mov
sub
pop
jg
test
and
sub
lock
cmp
add
cmp
xchg
sbb
jg
push
fsubl
xor
xor
test
mov
xchg
xchg
cmp
or
and
lcall
imul
sahf
add
sub
lock
out
outsl
add
jmp
or
jns
ljmp
or
out
fs
fwait
mov
fisubl
mov
cmp
mov
negl
cmp
gs
rorl
pop
aam
push
add
xor
jg
push
or
test
pop
mov
insb
inc
data16
adc
jns
adcl
sub
cmp
inc
cmp
mov
mov
in
mov
sbb
lret
push
mov
sahf
rcrb
xor
mov
jno
mov
xchg
lock
fs
jmp
lret
jnp
lea
or
pop
jne
std
adc
shrl
filds
inc
in
xchg
scas
fimuls
add
fstps
mov
dec
jle
mov
lahf
xor
divb
xchg
xchg
sub
sti
or
cwtl
ret
xor
inc
ret
ret
sub
out
jl
test
lahf
or
jo
cli
aam
mov
notl
push
xchg
mov
mov
adc
loopne
sub
fldenv
loop
mov
movsb
mov
stc
das
fnstcw
scas
cmpsl
jne
sub
movsb
sub
sbb
mov
sbb
and
test
mov
sub
gs
pushl
pop
cltd
inc
cmp
movsb
inc
sbb
mov
lea
xor
jmp
mov
aam
cmp
cmc
je
mov
push
out
in
mov
inc
dec
xchg
mov
adc
stos
jnp
jle
mov
js
movsl
adc
dec
mov
rclb
inc
push
inc
inc
dec
ret
push
push
or
andb
ljmp
aad
aas
dec
inc
addr16
imul
test
jge
int
inc
adc
mov
sbb
push
out
cli
out
pushf
sbb
subb
lahf
cmp
stc
inc
mov
push
enter
rcrl
sbb
aam
pushf
xchg
scas
rclb
jns
stos
ret
imul
daa
jl
cmpsl
cmc
outsl
jle
adc
pop
push
xchg
ss
or
movsl
pop
sbb
popf
imul
dec
jne
mov
mov
ret
js
shll
xchg
fcomip
in
push
ja
clc
shrl
push
cmp
insb
sbb
mov
pop
aam
push
in
fsubs
jmp
iret
nopl
mov
push
jg
sbb
sti
inc
popf
and
pop
fwait
les
mov
int
leave
lea
jo
sbb
fwait
gs
mov
and
fstl
sbb
outsb
ss
shll
js
xchg
imul
or
xor
movsb
ret
mov
cmp
stos
movb
test
punpcklbw
mulb
int
bound
fs
lret
mov
jl
or
sbb
rcrl
cmp
mov
mov
aas
jle
adc
push
out
push
std
iret
scas
sub
xor
lods
push
je
bound
xchg
fimull
xor
inc
pop
pop
iret
xor
xorl
push
and
sbb
jb
test
ja
lea
xlat
xchg
cli
jecxz
ljmp
test
jo
adc
mov
mov
xchg
out
mov
pop
jle
dec
pop
push
stos
adc
dec
xor
cmp
sarb
mov
cmpsl
adcb
lea
adc
lea
mov
adcb
or
arpl
loopne
cmpsl
imul
ds
jecxz
pop
insl
mov
daa
jle
int
jl
icebp
adc
les
push
je
fistpl
fcmove
inc
dec
jns
cmpsb
pop
jb
fsub
xchg
jns
xor
ud2
mov
cmp
sbb
jl
cmp
mov
movsb
imul
into
sbb
es
lcall
jae
fldt
push
cmpsl
lret
add
cltd
adc
push
test
add
jbe
add
lods
jo
xchg
adc
add
bound
mov
jl
inc
add
scas
cli
ret
xor
imul
in
aas
repnz
in
mov
jg
jle
pop
xor
sbb
and
sbb
scas
fs
sub
pushf
aam
jae
cltd
cwtl
aaa
jne
cmpsb
call
mov
aad
icebp
data16
sub
mov
add
xlat
les
adc
jp
xchg
pop
mov
bound
xchg
bound
stos
push
dec
mov
and
and
mov
push
mov
aas
sbb
mov
lds
out
add
cltd
rclb
or
and
shlb
mov
lods
insb
mov
test
inc
sub
mov
sbb
sbb
mov
sub
mov
push
aam
cmpsb
mov
jge
lret
pusha
add
popf
sbbb
mov
jge
sub
sbb
xlat
data16
pop
stos
test
mov
rcr
out
lods
add
or
jecxz
mov
sub
addr16
jecxz
outsb
cmp
addr16
ret
ds
sub
sub
xchg
cmp
frstor
cmp
cmp
push
push
fcomps
sbbl
orb
int
adc
pop
xor
inc
push
mov
repz
sbb
push
inc
scas
inc
sub
in
out
std
add
rol
pop
xlat
sub
es
jae
jno
jle
xorb
push
jle
sub
jle
lds
out
stos
sub
popf
stc
subl
cmc
xchg
fcmovnbe
lcall
and
sarl
xor
nop
enter
xchg
pop
imul
add
xor
push
hlt
sbb
mov
lea
repz
add
pop
mov
cli
imul
cwtl
cs
push
and
rep
xor
jb
in
mov
or
cmp
mov
mov
mov
add
push
test
mov
xchg
fildl
pop
in
stc
pop
in
mov
ss
bound
sbb
pushl
mov
mov
cmc
lea
daa
sbb
adc
and
add
sbb
jge
lods
mov
sbb
mov
jbe
mov
or
or
add
fsubrs
jge
pusha
sub
add
cmpsb
pusha
xchg
mov
in
fwait
mov
xor
mov
mov
loopne
les
pop
inc
shrb
cli
cmp
jo
inc
push
xchg
add
xor
enter
scas
jmp
jle
cmp
das
arpl
sub
cltd
bound
daa
gs
loopne
pusha
sub
pop
mov
scas
lea
repz
dec
inc
cmc
add
adc
into
icebp
xchg
add
test
bound
addr16
decl
xor
fwait
mov
imul
mov
arpl
fdivl
loop
stos
test
lock
sar
and
push
clc
popf
jl
mov
arpl
cmc
pop
mov
lahf
jl
dec
in
incb
shlb
insb
jne
and
pop
jae
xor
insl
mov
or
mov
mov
out
das
push
cmp
mov
or
flds
lret
push
cmpsb
sbb
mov
or
xor
fcompl
repz
mov
pop
aas
sub
outsl
xchg
pusha
sbb
test
lock
repz
fdiv
fidivs
je
test
shr
inc
ljmp
and
or
je
hlt
mov
sub
addr16
xor
stos
lret
add
rcrl
lods
xor
and
ret
xor
sar
andl
test
pop
dec
rorb
js
or
and
xorb
add
pop
pop
aaa
sarl
test
outsl
xchg
and
dec
lock
inc
nop
andl
xchg
arpl
push
out
adc
fwait
insl
ss
sub
xchg
rcr
add
jmp
xchg
shll
mov
iret
popa
mov
mov
pop
test
icebp
add
repnz
lret
pusha
lcall
mov
and
inc
lods
imul
dec
insb
lcall
xchg
data16
cmp
shl
inc
ret
adc
inc
jge
cmp
and
cmp
cmp
lock
inc
out
mov
retw
out
mov
push
mov
cmp
int3
adc
out
mov
push
out
sbb
popf
push
shl
adc
enter
xchg
pop
out
jb
js
mov
jg
and
xchg
add
pop
jne
xchg
mov
ljmp
push
push
add
jnp
cmpsb
ja
ret
test
mov
loop
inc
mov
or
ds
mov
lret
cmp
cmp
add
xor
loope
lret
mull
insl
test
mov
stos
int
xor
in
leave
add
les
sub
int
bound
les
and
push
push
inc
icebp
mov
loope
stc
sbb
sub
jp
js
loopne
jmp
xchg
inc
popa
test
int
jns
push
and
jae
cli
cmp
inc
inc
icebp
jae
xchg
xchg
push
gs
outsb
rcll
pop
std
imul
inc
and
dec
mov
adc
dec
and
cmp
jle
inc
jae
insb
pop
cld
enter
dec
daa
xchg
ds
addr16
jmp
pop
pop
push
dec
pop
jae
mov
lahf
divb
and
push
test
push
jp
sahf
adc
mov
lcall
gs
imulb
or
add
popf
xor
push
sub
lock
je
push
std
cwtl
movsb
into
pusha
cmp
insl
sbb
sbb
inc
adc
enter
insb
pop
ljmp
int3
or
ja
imul
push
fucom
jae
fldt
arpl
iret
mov
pop
xchg
outsb
pop
nop
imul
add
enter
test
lahf
sbb
push
dec
jno
and
mov
xlat
es
mov
cwtl
sbb
sbb
add
adc
mov
jnp
rcll
and
ret
or
adc
dec
pop
stc
popl
pop
inc
rcrb
leave
mov
mov
iret
sbb
sub
adc
mov
mov
aaa
jmp
es
lret
inc
sub
test
test
imul
imul
in
cwtl
int
jne
lret
lods
nop
popa
or
mov
xchg
out
test
ljmp
retw
cs
jge
nop
xlat
ret
mov
mov
sub
aad
adc
mov
stc
jmp
jge
ljmp
rcrl
outsl
jb
cwtl
and
adc
scas
xchg
inc
dec
jae
je
jmp
jne
and
incb
sarl
pop
push
pop
in
insl
sub
loop
mov
bsr
fsubl
dec
xchg
adc
ss
das
pop
mov
out
leave
iret
fs
in
ret
int
jbe
mov
movsl
lcall
sub
cmp
jbe
outsb
add
test
lahf
scas
insb
data16
mov
jp
dec
mov
pop
add
out
movsl
cli
roll
dec
xor
mov
or
idivl
test
xor
es
push
stc
pop
roll
mov
lds
push
sub
jo
movsl
rorb
add
adc
repnz
test
push
sbb
in
sti
arpl
pop
std
inc
push
cmp
pop
mov
stos
or
arpl
repnz
cs
je
jb
mov
jo
or
popa
jl
inc
movsl
loop
mov
mov
dec
push
sub
iret
mov
sbb
popa
xchg
sarl
das
sarb
shll
ds
mov
xchg
mov
leave
jg
inc
mov
add
sbb
adc
mov
push
fsts
cmpsl
out
loope
fwait
imul
jge
mov
and
dec
loop
fisttpll
add
pop
lock
mov
cmp
stos
arpl
inc
adc
int
negl
sub
mov
rolb
jbe
jne
out
leave
pop
push
push
adc
lds
mov
jle
inc
add
out
push
aas
dec
sub
sub
int
pop
loop
in
movsb
pop
pop
sbb
pop
hlt
xlat
test
ret
mov
enter
cmc
cli
stos
les
cmp
sti
pop
or
pop
inc
loopne
shll
or
xchg
adc
cmpl
inc
and
sti
mov
cli
add
repnz
in
lods
js
sub
push
lcall
jns
pop
inc
sbb
and
pop
adc
cmp
xchg
add
ljmp
mov
out
leave
addl
inc
aam
popf
xchg
daa
repnz
nop
out
ja
xor
xor
test
fcoml
sub
xchg
into
mov
adc
xor
inc
xor
fistpl
adc
cmp
mov
ja
push
or
decl
jae
add
sbb
inc
jno
insb
je
in
mov
xlat
xchg
cmpsl
es
and
xchg
and
pop
adc
iret
aam
pop
xchg
cmp
pop
pusha
addr16
mov
push
pop
and
and
inc
in
test
cmpsl
int
cmp
mov
push
loop
push
dec
leave
inc
jo
jnp
mov
lcall
fisttpll
xchg
stos
loop
ds
sub
mov
dec
push
or
popa
adc
sbb
xchg
out
shlb
je
mov
xchg
dec
or
xchg
je
popa
dec
add
adc
push
test
fs
js
cmpsb
and
jo
int3
outsl
adc
cmpsb
aad
xchg
pop
outsb
lret
std
repz
aaa
cmp
js
iret
mov
shl
push
aaa
out
enter
mov
scas
je
movsl
mov
shll
pusha
movsl
push
jnp,pt
and
pop
jmp
sbb
jp
add
loop
sbb
sub
shll
pop
inc
icebp
add
into
and
push
je
inc
push
adc
jmp
and
adc
adcb
sub
icebp
pushl
mov
int
flds
stos
in
sub
mov
lret
mov
popa
in
daa
lock
dec
mov
idivl
iret
pop
leave
cmp
pop
or
lahf
test
push
ja
pop
push
repnz
dec
in
mov
sbb
push
sub
sysret
aam
dec
jmp
out
adc
mov
ss
and
ret
ret
out
jle
stc
jge
imul
add
adc
mov
xor
mov
add
and
cmpsb
pop
sbb
add
xchg
imul
jle
pop
cs
fwait
ljmp
and
into
shrb
loop
push
xchg
sub
xor
rol
nop
dec
pushf
loope
cli
cmp
and
cmpsb
fwait
in
or
or
dec
iret
cwtl
das
sahf
or
cmp
fldl
fildl
outsb
negl
cld
sbb
rorl
imul
mov
fidivrs
out
or
jmp
icebp
popf
in
dec
add
lods
fdivrl
cmp
or
popf
aas
push
test
out
jmp
and
pop
notl
insl
cmp
mov
mov
jbe
sub
cmp
sti
cmp
stos
mov
ret
xchg
in
mov
mov
sub
int
or
mov
cmp
pop
enter
ds
dec
inc
pop
push
lea
push
xor
pop
pop
cwtl
ja
cltd
add
xor
cwtl
test
xchg
add
dec
js
shll
or
mov
cld
dec
insl
arpl
cwtl
pop
push
js
popf
dec
ret
faddl
pop
inc
sbbl
dec
out
push
jns
loop
mov
out
popa
dec
jne
in
mov
jo
outsl
ljmp
xchg
fsubrp
inc
inc
push
cld
push
aad
call
sbb
scas
mov
ljmp
or
es
iret
push
sub
fistpll
dec
dec
aaa
cmp
ror
mov
push
cmp
fs
pop
fs
or
mov
out
cmp
jl
inc
hlt
stc
lds
cmc
xchg
dec
pop
push
fistl
xor
push
mov
fs
mov
xorl
mov
iret
cli
inc
dec
push
mov
mov
push
push
inc
fcmove
cmp
in
xor
leave
adc
mov
mov
mov
outsb
cmp
dec
jb
mov
cmp
mov
sub
cmp
sbb
cmpsb
add
scas
fadds
adc
movsl
jne
sbb
mov
outsb
cmc
inc
xchg
das
push
test
lods
leave
jae
into
mov
lods
mov
xchg
js
and
fmuls
xchg
insl
in
xor
push
and
mov
fsubl
decb
inc
insb
mov
scas
fcoml
leave
and
ss
or
cltd
pop
stc
cwtl
mulb
push
jmp
inc
imul
cmc
in
insl
mov
lock
sbb
push
insb
mov
pop
stos
arpl
push
imul
mov
inc
push
adc
xlat
cmp
mov
jns
loop
outsb
in
inc
jmp
test
stos
sub
jbe
cmpsb
aad
scas
dec
sbb
push
or
lods
sub
xor
jnp
rcl
fwait
aam
push
jl
pop
jbe
push
pop
pop
xchg
mov
sti
xor
imul
lds
ss
nop
inc
cwtl
inc
sbb
leave
inc
stos
xorl
mov
add
xchg
mov
xchg
xchg
insb
sbb
aas
in
cmp
faddp
icebp
mov
ret
icebp
adc
aas
cmp
mov
dec
inc
orl
in
ficoms
lock
mov
rcll
xchg
ljmp
sti
mov
jns
imul
inc
lret
dec
leave
adc
xor
fcom
add
das
or
inc
jl
ret
adc
cmp
mov
inc
push
pop
xor
xorl
popf
push
jb
test
or
pop
pop
dec
mov
sbb
xchg
or
roll
mov
shlb
test
lds
xchg
mov
xchg
loopne
mov
cld
or
push
add
jnp
xchg
sub
aad
add
mov
add
insb
and
jbe
out
outsb
ficoms
cli
mov
push
xchg
mov
lea
lods
mov
out
addl
scas
and
xchg
mov
clc
nop
arpl
dec
jo
scas
stc
push
in
pop
pop
push
sub
movl
stos
fxch
stos
loopne
push
jl
ds
pop
ret
push
out
cmp
ljmp
push
sub
rclb
pop
mov
ljmp
loopne
inc
pop
mov
push
gs
add
xchg
cmc
stc
inc
xor
pop
sar
jne
in
imul
rorl
xchg
icebp
pushf
dec
adc
lret
xchg
push
repnz
cmp
sbb
or
in
push
or
xchg
fsub
xchg
std
testb
cli
jnp
dec
stos
stc
jb
mov
stos
js
fidivrl
mov
aaa
je
pop
ret
inc
testb
or
test
mov
xor
scas
adc
mov
out
inc
movsb
sbb
aaa
jl
xchg
mov
aaa
push
jg
ds
sub
jo
inc
xorl
out
pop
test
adc
lret
mov
fdivl
cmpsl
jo
mulb
iret
inc
mov
je
and
jecxz
xchg
or
loopne
xchg
leavew
dec
out
sbb
mov
cld
int
insb
mov
adcl
es
xchg
lret
jp
es
sbb
loope
fs
loopne
fcompp
js
imul
cltd
push
clc
xchg
pop
xorb
les
xor
movsl
ja
aad
fldt
xor
or
pop
push
cli
sbb
sbb
sub
push
mov
adc
into
mov
mov
lcall
sub
add
xchg
cltd
pop
jl
fchs
ror
lcall
out
fstps
int3
mov
arpl
jecxz
test
xchg
call
movl
pxor
jl
cmpsl
sub
xorb
cltd
in
add
lods
jnp
sarb
mov
mov
das
mov
or
cmp
decl
mov
jle
dec
inc
gs
in
test
inc
shlb
in
or
icebp
and
add
mov
je
sarl
or
je
ljmp
inc
mov
and
hlt
shlb
xchg
mov
cwtl
ret
or
mov
xchg
xchg
push
mov
xchg
xchg
xchg
sub
xor
jle
ret
in
mov
add
xchg
xchg
ljmp
iret
mov
pop
aad
lcall
xchg
xor
and
or
rcr
jbe
mov
xorb
pop
fcompl
xor
jae
sbb
out
pop
xor
pop
insb
push
mov
push
adc
test
or
dec
xlat
push
nop
movaps
data16
sbb
mov
pcmpgtw
xlat
clc
call
mov
xchg
add
push
xchg
inc
mov
lock
lods
cmp
mov
outsl
or
test
or
cmpsb
cmp
sub
push
pop
push
cmp
les
sbb
and
adc
fidivs
leave
inc
cwtl
inc
pop
jae
jbe
fwait
fs
dec
and
lods
rclb
shlb
bound
xchg
cmpsl
adc
sbb
imul
adc
daa
mov
outsb
mov
jg,pn
mov
or
jmp
lret
lds
cmp
rcpps
adc
dec
inc
sahf
pushf
pop
jge
pop
sbb
movsb
adc
repnz
dec
xchg
pop
inc
sub
stc
or
out
call
outsb
mov
adc
ss
adc
or
xor
cmpsb
loop
fnstcw
xchg
sub
insb
or
fs
ret
pop
mov
push
addr16
push
cltd
sub
xor
inc
addr16
lods
cld
or
enter
pop
mov
lds
cmp
sbb
sub
xchg
aaa
adc
icebp
fisubs
push
and
xchg
jecxz
lods
addl
pusha
adc
adc
or
frstor
jb
add
mov
stc
gs
mov
push
loope
pop
addb
mov
mov
inc
notl
int3
lret
push
mov
loop
xchg
cmp
mov
add
and
stc
mov
mov
aas
push
mov
pop
pusha
sbb
or
stos
lcall
nop
jge
stos
rol
mov
and
jnp
push
add
sbb
or
rcrb
xor
clc
ret
xor
mov
sbb
fisubs
jbe
inc
mov
push
lea
shll
test
push
arpl
fimuls
loop
jecxz
lock
aas
mov
push
std
dec
adcl
adc
add
lea
sti
dec
icebp
testl
xchg
inc
sub
mov
subb
pop
xor
jnp
ljmp
add
mov
mov
push
mov
push
lock
daa
jae
in
dec
and
loope
mov
or
and
push
xchg
movsb
mulb
pop
fistl
int3
and
inc
jmp
lcall
sub
cltd
movsl
jo
ret
inc
dec
movsl
dec
fistps
out
das
xor
mov
pop
cs
dec
mov
fildl
lea
push
dec
jmp
push
pmulhuw
jmp
or
int
call
mov
les
mov
ljmp
pusha
in
in
push
imul
fwait
in
cwtl
rorb
push
inc
imul
mov
insl
mov
sub
orb
shll
mov
mov
addr16
out
iret
cmpsb
sub
mulb
lea
cmp
push
cmp
mov
inc
or
cld
pop
mov
test
add
sub
push
shll
sbb
fistps
jge
lods
xchg
and
jg
shlb
lods
test
daa
shr
ficoms
xchg
adc
sbb
pusha
jl
xor
cltd
fisttpl
ror
or
dec
xchg
xchg
in
pop
std
mov
xor
test
inc
fidivl
lock
xchg
mov
lock
push
push
cwtl
or
ljmp
iret
and
jnp
adcl
mov
xor
add
xlat
xchg
cltd
and
ss
lret
lret
mov
mov
popa
push
out
jmp
fisubrs
push
and
push
cmc
push
int
insb
es
pop
aad
jne
dec
or
fsts
ja
or
lds
mov
sbb
test
scas
mov
outsl
clc
sub
mov
jge
lods
or
inc
insb
movsb
push
or
hlt
adc
ljmp
addr16
inc
out
xlat
and
jns
icebp
orl
and
fistpl
cld
inc
push
sub
aas
adc
pop
lea
js
or
lret
lcall
fcmovu
test
les
popa
xor
xchg
mov
rcr
es
notb
sub
sub
movsl
xor
fs
jl
mov
int3
cmp
mov
aaa
add
fucom
hlt
in
test
mov
sub
inc
mov
testb
sbb
xor
daa
push
fmul
xchg
sti
out
push
loop
pop
iret
pop
out
xchg
and
lods
jb
fsubl
daa
xchg
and
lock
inc
decl
test
aam
cmpl
lea
pop
jecxz
cld
and
mov
adc
aaa
xor
dec
pop
cmp
push
fidivs
jbe
push
daa
std
xor
test
jo
mov
mov
inc
test
mov
mov
call
jns
mov
mov
lcall
mov
loope
jp
adc
cld
repnz
add
mov
shll
test
shlb
sbb
or
or
sbb
loop
iret
into
fisubl
xchg
out
and
pusha
je
jecxz
jmp
cmc
sbb
push
or
fidivrl
lea
mov
cld
jb
jp
iret
jae
jge
push
outsb
pop
xlat
mov
mov
arpl
xchg
push
es
mov
jmp
stos
mov
mov
jmp
mov
and
stc
iret
xchg
test
adc
outsb
push
push
push
push
test
adc
xor
icebp
loope
sub
xor
inc
jb
or
mov
addl
negb
xorb
movsl
mov
in
add
dec
or
test
mov
push
into
test
daa
mov
push
pop
ret
mov
xor
shrb
shrl
gs
jno
shr
mov
cmp
popf
sti
scas
mov
mov
fistps
rclb
mov
sbb
inc
js
xor
std
adc
cmp
mov
xor
mov
mov
cmc
jmp
fldenv
out
sub
jmp
ss
mov
mov
mov
mov
out
mov
xor
in
sub
fwait
xchg
mov
lret
sub
xchg
aam
std
xor
mov
cmp
sahf
or
lock
stc
js
mov
pop
sub
push
cs
push
stos
push
mov
in
ficompl
jno
push
mov
lcall
pop
sarl
loop
xchg
xlat
lds
mov
test
leave
cwtl
minps
je
inc
jle
ficomps
stos
imul
and
mov
ficoml
scas
sbb
out
lock
jne
add
ljmp
xchg
mov
lret
aaa
clc
mov
pop
icebp
js
movsl
sub
lcall
and
insl
xchg
inc
sub
or
xor
aad
jo
push
mov
jmp
notl
movb
sahf
std
gs
mov
in
adc
in
fwait
xor
mov
adc
pop
pop
test
push
or
and
xor
scas
inc
fstl
shrl
fs
sbb
add
fidivrl
out
hlt
mov
cld
lret
pop
dec
pushw
nop
sub
cmp
mov
cmpsb
or
push
lret
xchg
jb
sub
arpl
lods
sbb
jnp
sub
dec
cmp
sbbb
inc
stos
xorb
iret
push
std
push
add
lds
clc
dec
push
jp
shrb
loopne
insl
xor
xor
les
push
lds
jmp
pop
adc
iret
mov
lea
dec
sub
imul
repz
and
xchg
movsb
sub
ljmp
jmp
push
rcr
addr16
push
inc
clc
inc
gs
je
and
dec
mov
cmp
testb
mov
bound
mov
cltd
not
fcompl
mov
loopne
cmc
ja
jmp
ret
cmp
cs
arpl
mov
jl
jae
mov
fs
in
mov
pop
and
mov
cmp
xchg
insl
fildl
jecxz
sub
and
cli
call
xor
pop
pop
cltd
in
mov
or
out
lock
mov
cltd
iret
bound
jns
xor
sub
push
mov
xchg
jl
adc
cmp
inc
ss
gs
shlb
jmp
lea
push
or
cmc
test
leave
js
in
icebp
sahf
jp
pop
push
cmp
stos
out
sub
push
dec
stos
mov
dec
add
stc
bound
jge
xchg
jmp
mov
push
add
add
cmp
cmpl
cwtl
and
inc
dec
fisttpl
mov
push
gs
inc
dec
in
sub
sbb
scas
add
repnz
push
push
or
testb
out
loope
adc
adc
mov
icebp
iret
cltd
icebp
push
dec
jp
add
push
enter
popa
decl
jno
popa
shr
add
adc
cwtl
jns
out
or
dec
stos
inc
sbb
xlat
mov
pop
aam
sbb
hlt
push
outsl
popa
cmp
cmc
add
lods
sbb
sbb
imul
jle
in
adcb
jg
jbe
aam
fcoml
ljmp
fwait
rep
into
or
into
xor
pop
mov
test
mov
loopne
xor
cld
push
dec
mov
jp
xchg
test
dec
dec
dec
pop
jle
int
mov
jge
es
dec
mov
je
imul
nop
test
mov
ljmp
into
xchg
mov
das
pop
test
jmp
or
add
cs
inc
inc
loope
cltd
mov
pop
jns
jg
iret
mov
cmp
addr16
lret
insb
dec
push
out
pop
xlat
adc
ds
cmp
idivl
adc
fidivrs
mov
aaa
inc
mov
sahf
test
jb
scas
aam
lds
test
hlt
imul
mov
data16
ret
sub
aam
cmp
mov
ret
mov
std
cmp
hlt
dec
fsubr
gs
notl
and
ljmp
stos
out
ja
clc
insl
mov
pusha
stos
pop
or
cmpsl
fwait
imul
mov
fidivrl
leave
sub
and
inc
push
push
jp
push
aad
pop
int
jo
cmp
lods
adc
push
std
cwtl
pop
inc
pop
xchg
xor
into
lret
test
loope
es
stos
pushl
adc
xlat
es
shll
gs
pop
push
xchg
or
cmp
mov
xlat
stos
mov
cltd
fnstenv
sbb
dec
fucomp
cmp
add
inc
mov
or
jbe
scas
sub
pop
sti
sbb
jge
scas
push
insb
lock
fst
idivl
push
out
scas
in
repnz
enter
adc
shr
adc
lock
jmp
cmp
sub
and
or
and
jge
arpl
mov
rcll
repz
shll
push
ja
ds
push
pop
jmp
xor
mov
lea
mov
sbb
sbb
sarb
lahf
mov
and
xor
lds
cltd
mov
je
mov
push
xchg
or
lods
dec
loop
lock
test
loopne
mov
out
cmp
nop
fcomps
sbb
out
jl
gs
cmp
mov
roll
mov
jg
repz
sub
jae
ja
inc
and
add
movb
in
cwtl
and
lock
xor
cmp
push
test
movsl
pop
add
pushf
in
push
cmp
mov
cld
test
test
mov
sbb
es
cmpl
pop
add
xor
mov
std
je
sbbb
xor
and
or
fsubl
push
inc
js
shlb
xchg
test
enter
dec
fdivs
cmpsb
lret
outsl
daa
and
push
pop
and
movb
jns
fwait
dec
pop
ret
lahf
mov
aaa
cli
sub
test
mul
and
jp
popf
add
xchg
repnz
arpl
pop
ljmp
sub
dec
imul
in
imulb
or
xor
or
pop
sub
mov
mov
adc
xor
and
or
rclb
push
or
dec
fs
and
or
cmp
jb
cltd
pop
rcr
xor
or
pop
mov
mov
pop
aaa
mov
enter
xchg
dec
jge
mov
adc
or
ret
scas
out
push
std
pop
dec
mov
xchg
mov
es
dec
pop
stos
adcb
jns
mov
or
jae
mov
nopl
sbb
pop
pop
or
ljmp
inc
mov
pop
push
aam
jne
daa
mov
rcr
orl
adc
leave
jns
or
cmpsl
sub
jmp
scas
pop
out
mov
cmpsb
jmp
fisubs
mov
dec
mov
xchg
jmp
mov
js
fmuls
test
inc
stos
rolb
dec
inc
xchg
or
xor
pop
jle
iret
in
pop
test
popf
faddp
sbb
pusha
or
sub
jmp
loope
jmp
bound
or
jno
jmp
ror
fbstp
pop
sti
notl
js
cli
test
pop
adc
or
out
push
sub
in
das
bound
je
jne
jns
pop
mov
xor
inc
std
lahf
cmp
fcoms
into
aas
je
xor
loope
push
or
push
jo
fstl
jmp
inc
xchg
cltd
push
idivl
mov
or
inc
jg
ss
ja
add
ss
outsl
lret
or
gs
rorb
loopne
push
push
sbb
cwtl
inc
pop
sbb
mov
sbb
and
loopne
dec
inc
imul
mov
pop
or
daa
mov
pop
stos
sahf
fdivp
sbb
int3
and
rorl
roll
setns
sub
getsec
cmc
sbb
sub
xchg
insl
div
mov
lea
push
jge
xor
mov
mov
mov
fstl
clc
test
shlb
or
or
jmp
push
dec
leave
ret
aas
fstpl
inc
add
add
jbe
add
dec
sbb
test
jecxz
mov
jp
xchg
pop
clc
nop
in
inc
and
jb
mov
add
lds
mov
or
pop
add
and
add
ja
pusha
sub
and
jo
test
cmp
test
mov
mov
mov
or
es
into
cmp
jae
and
aaa
jge
pop
adc
jns
adc
fildll
mov
jns
adc
add
je
lret
xor
and
int
lahf
imul
stos
popa
sbb
into
push
nop
push
enter
mov
add
or
xlat
in
xor
add
sub
mov
push
cwtl
mov
fldcw
push
jo
cmp
inc
dec
lcall
pop
push
adc
rcll
cltd
loope
xchg
in
clc
push
inc
loope
fcom
mov
and
stc
mov
cld
aas
ljmp
or
and
outsl
mov
test
out
les
out
scas
jecxz
jmp
xchg
jecxz
xor
testb
xor
sahf
jbe
mov
test
cmp
iret
xorl
jb
sahf
jns
xlat
jns
sbb
jge
dec
stc
xchg
fsubrl
jb
test
lret
pop
fiadds
inc
ja
outsl
lds
flds
or
fcomps
shlb
add
xchg
lock
mov
fdivp
int3
fisubrl
aaa
bswap
xor
or
jnp
negl
sbb
pop
sbb
or
or
or
adc
popf
mov
das
cmp
xor
cmp
popf
cmp
or
cmpl
ret
out
pop
lods
shll
test
sbb
xchg
bound
jno
out
into
cmp
adcb
pop
fmuls
lcall
adc
jp
ja
pop
add
les
addr16
inc
rorl
je
inc
cmp
les
push
push
xchg
push
filds
mov
jo
mov
sti
mov
dec
pusha
mov
int
push
das
push
jge
dec
mov
pop
pop
mov
cmc
jmp
repz
xchg
dec
fs
inc
xchg
sub
loopne
mov
mov
xchg
std
pop
mov
cmpsl
int
xchg
mov
push
movsb
cld
xchg
jecxz,pn
sbb
imul
js
lock
rcl
sbb
cmp
jae
adc
mov
sub
cmp
adc
fildl
mov
int
aas
sbb
sub
sbb
sahf
pop
movsb
ljmp
in
jp
loop
mov
jb
fwait
mov
inc
ss
push
cmp
mov
pop
aad
fwait
les
sub
ret
sub
xor
sub
pop
or
adc
adc
push
aaa
or
addr16
cmp
push
nop
jbe
aas
adc
cwtl
imul
lds
cltd
loope
ljmp
cmp
aam
push
aam
ret
fcomp
sub
adc
lret
sbb
xor
aam
int3
lods
lea
and
or
loope
lods
pop
cmpsb
xchg
aas
and
add
mov
and
pushf
jno
rol
idivl
jno
int
aad
pop
or
xchg
pop
test
sub
out
mov
cli
cmpsb
add
xlat
sbbb
dec
adc
xchg
mov
pop
mov
xor
and
insb
filds
insl
push
popa
test
data16
inc
incl
jno
sub
and
push
or
jno
mov
popa
xorb
fiaddl
popf
gs
jb
arpl
rol
lret
test
mov
cwtl
dec
mov
mov
pop
sbb
outsb
cli
fisubl
mov
push
stc
fmull
loopne
cs
mov
repnz
push
cld
push
das
lret
pop
test
cmpsb
xchg
xchg
pushf
loop
cmpsl
xor
mov
cs
in
fcoml
inc
xor
leave
or
push
mov
pop
xor
scas
out
push
jle
in
jge
leave
mov
ss
push
or
sub
in
lret
fsts
scas
xchg
push
cltd
aas
push
lods
jl
push
or
add
mov
xchg
jle
outsb
lea
shlb
leave
jecxz
into
shll
xchg
pusha
jmp
imul
and
lahf
outsb
scas
in
rcl
pop
xor
and
sbb
enter
inc
jg
mov
jns
iret
xchg
orb
push
mov
sti
and
cmpb
lods
shrb
mov
out
daa
idivb
push
std
sbb
dec
pusha
mov
push
std
cmpl
pop
rcll
mov
or
dec
pop
pop
dec
xchg
pop
sbb
sub
xor
test
push
mov
mov
movsl
xchg
fidivl
and
adc
cwtl
out
and
rcrl
push
mov
xlat
mov
iret
repnz
add
outsl
mov
add
leave
sbb
inc
mov
outsb
and
movsl
imul
pop
imul
dec
mov
ljmp
frstor
jecxz
lods
aad
xor
in
cmpb
cs
call
add
or
inc
xchg
pushf
hlt
xchg
jno
push
arpl
inc
push
sub
out
dec
sub
mov
cmc
cmpsb
insl
rolb
movsb
lock
out
insb
mov
cwtl
js
int
orb
or
pop
and
xchg
test
dec
ds
sub
inc
in
shll
stc
ret
mov
and
adc
fidivl
or
add
jb
mov
and
jp
sbb
dec
std
out
jge
inc
jnp
push
out
and
mov
jb
and
inc
xchg
test
loope
adc
pop
mov
js
push
inc
rolb
sub
stos
jbe
xchg
dec
pop
andb
jbe
cmp
lods
decb
subl
mov
popa
enter
nop
push
xchg
out
sbb
aaa
sbb
hlt
les
mull
xorb
in
bound
and
pop
pushf
add
cmp
push
inc
js
popf
mov
fdivrl
pop
mov
jp
cmp
cmp
xchg
jge
and
jecxz
jns
or
into
fcoml
inc
inc
mov
mov
sub
dec
or
pop
in
scas
and
pusha
jno
fists
sbb
cmp
in
test
pop
cmp
or
test
cmp
pop
jbe
add
push
mov
in
cmp
in
jle
pop
daa
ds
sbb
out
add
sbb
movsb
aam
fmuls
xor
fdivrp
nop
aas
or
pop
lret
mov
ret
sub
out
shrl
nop
cwtl
push
scas
lret
mov
leave
jnp
inc
jg
insl
decb
inc
sub
arpl
push
cwtl
fwait
and
orl
orl
add
pop
xchg
mov
dec
lret
xor
and
int
jmp
dec
adc
pop
xlat
mov
push
dec
xor
jae
lock
sahf
pop
rcl
cmp
pop
scas
mov
xchg
cwtl
add
push
cmpsb
lock
cmp
jnp
lea
jne
mov
cmp
pop
dec
push
out
out
subl
mov
pop
cs
jg
fimuls
test
mov
cwtl
push
out
std
cltd
mov
or
xlat
inc
movsb
movsb
mov
xor
mov
daa
and
and
fldl
sub
or
jg
fwait
data16
pop
pop
clc
or
adc
mov
sub
xor
into
mov
mov
int3
aam
jmp
xchg
xchg
pop
clc
mov
add
mov
incb
dec
xor
test
mov
dec
outsb
stos
adc
and
jge
mov
insw
cmp
adc
enter
pop
adc
push
sarb
cmp
mov
xchg
dec
int3
mov
out
fnstcw
mov
ss
int
sbb
cltd
pop
pop
fidivs
mov
iret
stc
pop
mov
stc
cs
repnz
or
movsl
mov
popa
negb
mov
mov
inc
add
xor
xchg
adcl
icebp
pop
sub
lock
jae
push
add
xor
rorl
dec
cmp
shl
xchg
pop
cwtl
add
mov
cmpsl
xor
pop
stc
test
hlt
rcrb
mov
mov
push
adc
sub
shlb
movsb
imul
loop
repnz
outsb
shlb
xor
fsubrl
lahf
icebp
adc
adc
push
pushf
cltd
fidivl
aam
mov
insb
mov
and
push
test
adc
sub
mov
inc
sub
mov
jle
loopne
jle
setne
scas
ficoml
scas
inc
sahf
test
fwait
mov
jb
dec
std
cmp
xchg
cmpsl
movsl
push
daa
push
shlb
pusha
jmp
dec
pop
scas
je
jg
xor
sbb
add
inc
inc
xchg
call
xchg
lods
adc
mov
mov
stos
mov
ficompl
das
lcall
lods
push
fs
std
jecxz
fdivrl
mov
mov
jl
pop
inc
cmp
or
add
es
add
data16
inc
popa
repz
or
add
cwtl
sti
sahf
jmp
push
arpl
dec
movsb
mov
or
shrb
sbb
cmpsb
mov
addr16
pop
pop
js
addl
fiaddl
jle
lcall
inc
in
cli
mov
mov
jbe
in
insl
mov
into
lock
xor
test
mov
push
outsl
mov
imul
push
add
adc
cmp
call
cmp
mov
popf
mov
imul
jge
jb
jge
pop
ja
into
add
dec
mov
jmp
addb
mov
push
push
and
gs
jecxz
pop
scas
in
fstps
and
sbb
outsl
lcall
jle
scas
xchg
stc
cs
sbb
and
mov
pop
popf
dec
mov
decl
loop
das
sbb
in
xchg
test
pop
pop
adc
loop
fsubrs
orb
sbb
jmp
mov
inc
leave
ja
pop
or
stos
mov
jo
sarl
lds
push
pop
test
shld
xlat
mov
xchg
xchg
daa
stos
int3
outsl
jmp
pop
sub
cltd
imul
push
push
push
adc
enter
xor
or
sbb
dec
jle
mov
aaa
mov
enter
dec
or
or
push
xor
ret
daa
out
push
ficomps
rcrl
jae
jnp
mov
insb
cmc
aaa
pop
xlat
test
mov
sbb
pop
adc
test
or
fiadds
cmp
ret
loop
mov
mov
fisubs
mov
fs
jmp
mov
dec
mov
stos
int
mov
mov
les
movhps
hlt
repnz
dec
std
lock
sbb
popf
popa
jge
sbb
or
cmp
xor
mov
out
lret
in
pop
or
imul
sub
loop
out
mov
xor
imul
repz
mov
mov
xorb
repnz
fnstcw
mov
jmp
addl
lods
push
cmp
outsl
xchg
pop
pop
mov
and
inc
repnz
inc
xchg
imul
cmpsb
dec
in
mov
sbb
dec
mov
ja
pop
sub
jecxz
jmp
and
movsb
xlat
fstpl
nop
mov
scas
imul
ss
dec
adcb
pop
outsl
jl
mov
xchg
out
cwtl
scas
je
subl
add
repnz
filds
and
call
pop
hlt
cmp
mov
inc
cli
jo
mov
pop
stos
pusha
inc
mov
shlb
mov
add
mov
popf
mov
push
lods
fidivl
rol
push
leave
xchg
xor
dec
and
mov
call
or
lods
rolb
icebp
lea
add
mov
jno
ret
call
sbb
enter
xchg
push
int3
aam
imul
push
mov
dec
sbb
pop
movsl
mov
sti
int
push
shlb
adc
stos
insb
std
adc
push
loop
adc
mov
out
movsl
rorb
inc
jne
dec
mov
shrb
mov
xchg
jl
leave
jecxz
arpl
sbb
aaa
cmp
sbb
dec
xor
fs
pop
dec
push
mov
xlat
repz
dec
clc
pop
mov
pop
fsts
lret
aaa
mov
inc
ss
adcl
fs
fisttpll
dec
pop
and
xor
scas
dec
inc
cmpl
sbb
enter
lahf
xor
ffreep
dec
test
subb
xchg
data16
test
pop
sub
mov
ret
inc
push
aaa
mov
xchg
stos
dec
cwtl
sub
cmp
sbb
xor
repz
pop
outsl
push
lret
inc
in
nop
sbb
inc
lock
xor
and
push
lods
xor
cmpb
inc
mov
xchg
sbbl
popf
add
es
cs
pop
shrl
int3
pop
push
test
mov
les
movl
xchg
scas
dec
pop
xchg
mov
adc
lds
std
test
lea
in
jmp
ds
jae
test
in
add
stos
loopne
sbb
pop
sbb
cmpsb
xor
jg
xchg
or
or
aad
andl
mov
popa
cmc
daa
xor
ljmp
dec
xchg
call
aam
fwait
clc
inc
mov
xor
jns
stos
xchg
in
pop
repnz
push
jg
repz
add
ret
movsb
imul
ret
push
cltd
ret
cmpsl
div
bound
lret
rorl
add
int3
dec
cmp
or
mov
xor
mov
mov
mov
push
das
sti
bound
mov
sbb
sub
sbb
ds
mov
test
pop
hlt
pusha
repz
sub
loopne
or
jg
jns
mov
imul
or
mov
mov
adc
xor
jle
dec
jae
or
int
mov
inc
or
and
mov
or
loope
mov
xchg
test
int
mov
in
xor
inc
mov
cld
jnp
into
pop
outsl
push
fists
pop
add
arpl
xchg
adc
fs
xlat
add
movl
and
out
inc
loop
je
push
jno
fstpt
inc
out
fistl
jmp
stos
jnp
xchg
or
nop
inc
es
mov
lock
and
mov
ds
sbb
pop
mov
aam
sub
add
and
pop
xchg
pop
cmpsb
dec
iret
lds
xor
sbb
cmp
and
jb
nop
and
mov
xchg
mov
mov
xor
push
cs
int3
decb
jle
test
and
and
cmp
mov
fisubs
pop
fnsave
addb
inc
jb
xchg
push
adc
push
or
jle
xchg
popa
xor
popl
sbb
scas
addr16
xchg
stos
lods
lea
out
jbe
orb
cmp
test
fs
fsubs
pusha
or
cltd
sub
repz
sbb
fimuls
cli
clc
push
mov
int3
xchg
ret
es
jb
rclb
xchg
adc
mov
cltd
cmp
xchg
dec
sub
cmp
aam
in
mov
push
jae
and
movsl
inc
mov
aam
lods
inc
xchg
jge
cmpl
jno
mov
orl
mov
adc
mov
insb
test
and
leave
inc
xor
pop
push
xchg
jnp
arpl
push
sub
sub
mov
shl
mov
push
std
jle
rcl
mov
ret
xor
lahf
jno
rcrb
mov
sarb
into
lret
xchg
push
push
pusha
stos
hlt
push
divb
xor
lea
push
push
jmp
xchg
mov
out
fwait
sub
cmpsl
lcall
jnp
daa
xchg
mov
jg
clc
int3
mov
aad
roll
dec
data16
cmpb
sub
std
insb
jmp
cwtl
dec
push
jmp
dec
cltd
int3
push
adcl
scas
or
cmpsl
shrb
repz
std
out
sbb
pop
test
mov
je
cs
loope
ds
adc
mov
mov
in
add
jp
lahf
nop
stos
inc
xchg
clc
lds
jmp
arpl
int
hlt
mov
stos
cltd
inc
cltd
sub
jno
add
mov
adc
inc
in
stos
jno
push
outsb
push
mov
cld
pop
mov
stos
hlt
add
add
push
lods
jl
aad
aaa
or
jns
mov
cmp
push
fadds
loope
xor
sub
adc
xchg
sbb
aas
mov
stc
mov
push
inc
add
jnp
in
mov
pop
loopne
jmp
sbb
stos
ljmp
cmc
sarb
dec
addl
jne
clc
test
xorb
mov
push
inc
cmp
push
add
dec
and
out
stos
dec
jnp
mov
fisubrs
je
mov
dec
mov
fbld
out
or
in
call
push
pop
push
mov
cmp
and
lcall
or
repz
dec
sbb
add
repz
mov
dec
xor
mov
addr16
lret
das
jo
ds
stos
jp
inc
add
inc
mov
mov
ret
shll
testb
dec
pop
sub
adc
les
mov
push
out
pop
out
fisubl
aaa
stos
sbb
enter
outsb
push
std
in
repz
mov
cmp
adc
enter
sub
mov
nop
jecxz
rcrb
inc
jle
xchg
and
sahf
xor
mov
mulb
xor
mov
jo
mov
in
cmpsl
cmp
add
out
pop
sub
lea
pop
nop
in
push
sub
faddl
jne
push
xlat
push
sbb
rolb
and
add
decb
push
fildl
arpl
xorb
sub
mov
rorl
test
dec
sbb
pusha
fiadds
xchg
mov
in
sub
sub
xor
cs
xor
pop
cmp
jp
mov
cmp
pop
xor
stos
jle
mov
fstpl
imul
into
xor
test
jnp
lods
dec
filds
ss
in
and
inc
insl
inc
mov
ss
lods
cs
pop
data16
lods
or
adc
int
xor
and
lea
sti
cli
jne,pn
add
std
sub
stc
push
jne
push
and
mov
sub
mov
or
push
insb
imull
pop
inc
ret
lcall
and
mov
mov
iret
rclb
je
xchg
xchg
and
pushf
cmp
cmp
jl
mov
xor
dec
daa
dec
jb
int
xchg
and
mov
and
stos
test
sub
xor
faddl
or
lcall
cwtl
out
or
in
stos
or
jno
je
imul
jnp
mov
dec
call
dec
xchg
jecxz
pop
ja
sahf
subb
aas
jle
add
in
inc
mov
xlat
xor
push
push
lret
inc
pop
imul
js
lret
cmp
test
xchg
jns
rcll
movsl
shlb
cmpsl
ret
lcall
mov
sbb
aas
xor
lods
cmpsl
mov
sub
mov
int3
outsl
ret
sub
into
neg
arpl
and
cmpsl
mov
xchg
cmpsb
shll
and
cmp
jb
test
jb
daa
cwtl
xor
in
das
enter
in
aaa
and
es
jp
mov
add
pop
ja
out
mov
pop
cltd
dec
lods
daa
adc
addl
pushf
arpl
lahf
add
mov
push
inc
fstps
jmp
popf
adc
or
orw
inc
xchg
mov
sub
pushf
bound
out
jae
mov
out
jo
es
in
cmpsl
stc
push
xchg
psrad
shr
into
in
aaa
in
xorl
dec
cmpsl
mov
mov
inc
add
outsb
arpl
push
test
pop
addl
adc
sahf
push
or
push
mov
adc
jbe
cs
jns
dec
xchg
mov
cmc
mov
into
das
inc
mov
out
mov
fmull
mov
cltd
cmp
hlt
adc
cmp
das
lcall
lahf
mov
push
movsb
jbe
pop
xor
sbb
xor
inc
mov
enter
inc
movsl
xchg
daa
into
mov
icebp
dec
xchg
movsl
xchg
dec
and
push
or
adc
mov
inc
adc
lods
fwait
in
sub
or
add
sar
inc
sbb
mov
popf
ret
arpl
push
pop
lea
icebp
push
les
adc
adc
inc
push
out
push
adc
jne
pop
fsubrp
lea
dec
mov
jecxz
cmp
cld
cmpsb
push
dec
jecxz
jno
lods
mov
mov
push
sbb
nop
jl
cmp
psrld
out
rorb
ret
mov
jbe
cmp
pop
add
hlt
test
int
push
test
sarb
dec
push
testl
jmp
sarl
out
mov
test
imul
add
xor
pop
rclb
cmpsl
inc
fidivs
mov
gs
es
sar
adc
xchg
cli
fsubrl
adc
lds
loop
xchg
add
shll
cmp
enter
mov
adc
movsb
dec
rcl
shll
or
push
adc
dec
adc
insl
sbb
iret
int
mov
dec
add
test
nop
fwait
pushl
and
pusha
xchg
hlt
fdivs
cmpb
dec
rcll
mov
pop
les
out
inc
ror
cmp
pop
fcomp
adc
xor
push
call
jle
jo
and
adc
js
fwait
inc
aas
int3
adc
ja
outsb
inc
inc
in
test
push
lret
pusha
or
or
adc
rcl
in
addl
jns
mov
lahf
pop
adcl
lds
sarb
add
sub
rcl
dec
xchg
loope
stc
ljmp
call
in
imul
xchg
fidivl
andb
xchg
repnz
xor
pop
pop
dec
pop
mov
imul
add
aad
add
iret
mov
jmp
jle
add
jb
cli
fwait
add
push
in
rorl
jge
clc
outsl
jle
imul
outsl
cmp
adc
shrl
jne
fsubs
scas
mov
mov
jo
out
lock
fsubrp
dec
pop
mov
mov
push
in
xchg
and
jnp
addr16
xor
test
inc
mov
cmpsb
push
dec
dec
dec
dec
sub
ljmp
sub
adc
mov
cmc
aam
in
cmp
cmp
cld
adc
out
sahf
and
push
mov
sbb
ret
std
jns
jp
pop
int
fsubp
mov
out
pushf
mov
add
shll
jp
jne
in
dec
adc
adc
cmp
sti
xlat
inc
cltd
mov
cli
dec
jns
add
mov
cmc
inc
inc
jns
das
cmp
repnz
out
filds
xchg
aas
aam
loope
mov
jmp
push
and
daa
aad
iret
int
push
xchg
mov
xchg
jne
sub
mov
lock
inc
loopne
ds
pop
sbb
mov
cmp
ret
nop
lcall
xchg
insl
pushf
cmp
dec
pop
adc
push
jno
ss
pop
jmp
mov
cmp
outsb
je
aad
mov
out
jo
aad
outsb
jmp
jne
add
mov
dec
rcrb
push
ffree
popa
scas
je
decl
mov
push
push
mov
cmp
out
push
clc
cmp
pusha
push
sti
in
out
mov
jp
push
jecxz
scas
jp
sbb
push
add
mov
sbb
ljmp
lret
xor
movsl
xor
pop
push
adc
into
push
inc
stos
pop
xor
dec
pop
imul
ja
addr16
subl
rol
aaa
pop
mov
sti
icebp
sub
testl
pop
test
test
fbstp
xchg
fwait
mov
mov
mov
xchg
cmpsl
outsl
movsl
sub
cmc
sub
xchg
push
fldl
mov
pop
addr16
push
fiadds
repnz
and
add
xchg
jns
sub
jg
ljmp
adc
push
stos
sub
negb
cs
jo
in
jne
jno
neg
in
ret
jae
xlat
inc
mov
aas
cmp
es
mov
mov
jmp
adc
call
mov
pop
adc
jmp
imul
mov
movsl
xor
push
aam
push
int3
lret
pop
push
jo
jae
push
andl
jmp
shr
sbb
fcmovnb
inc
push
ds
pop
pop
push
inc
outsb
cmc
addl
cmp
jns
test
fs
jno
fnstsw
cli
push
push
push
leave
nop
mov
or
fstl
sbb
inc
outsl
stc
mov
adc
jns
outsb
icebp
shrl
adc
adc
add
andps
mov
sbb
mov
jge
cltd
insl
aas
sbb
or
xchg
addr16
pop
dec
lock
cmp
push
jg
jne
inc
out
jle
push
mov
shll
mov
cmp
fwait
add
je
xchg
test
pop
or
cld
lcall
and
or
xchg
pop
inc
dec
push
popf
sub
sti
xchg
lret
shrl
hlt
mov
push
fcomi
icebp
shrl
rcll
push
mov
loopne
orb
push
daa
nop
sbb
jns
je
adc
fwait
out
dec
push
loope
push
push
repnz
mov
mov
add
jnp
adc
mov
lret
test
and
jb
pop
mov
loope
ds
mov
fdivp
mov
out
ss
imul
xor
movsb
cmp
cld
dec
adc
or
mov
pop
fists
out
test
xchg
mov
push
jmp
push
xor
push
push
dec
xchg
cmpsb
bound
imul
cwtl
stc
icebp
mov
ja
ljmp
sub
enter
repz
sbb
sahf
cmp
clc
stc
xchg
int
dec
push
mov
das
std
and
jbe
in
cmpl
sub
sbb
insl
mov
mov
push
push
sbb
pop
jae
ljmp
hlt
dec
sahf
xlat
paddsb
or
data16
lods
and
xchg
std
pop
into
ljmp
dec
xchg
popf
push
and
cmpsb
jno
insb
lret
movsl
scas
mov
adc
sbb
dec
or
pop
push
lods
jle
rorl
test
mov
xor
cmpsb
push
loop
test
in
dec
cmp
dec
into
fwait
mov
cmpsl
dec
int3
out
push
adc
cmp
jle
and
imul
xchg
dec
push
adc
cmp
aam
lods
or
xchg
nop
push
aas
movsb
push
pop
mov
sbb
xrelease
test
fmuls
mov
sub
loope
jno
repz
scas
sar
sbb
mov
pop
mov
enter
lds
lcall
and
mov
scas
pop
add
enter
dec
imul
std
aam
xchg
sbb
push
or
movsl
cwtl
add
lea
sub
cmp
xchg
aas
test
xor
xchg
aaa
mov
xchg
xchg
add
jno
hlt
jp
push
dec
in
stos
adc
inc
pop
jmp
mov
mov
in
movsl
fidivrl
pop
fldcw
mov
arpl
scas
cmpsl
shlb
jmp
in
and
add
cmp
push
or
mov
insl
das
inc
sub
push
jae
inc
inc
incb
loopne
mov
inc
test
cmp
data16
aad
pop
xchg
ja
xchg
push
xor
mov
add
xor
add
jp
out
daa
scas
rol
adc
fxch
aas
outsb
inc
out
stc
dec
jl
aas
mov
bound
std
imul
xchg
mov
outsb
mov
xchg
fsub
out
jne
xor
mov
shlb
rcrl
pushf
iret
outsb
pop
outsb
icebp
scas
pop
xchg
setae
xor
jle
push
push
testb
sarb
adc
int3
mov
mov
out
arpl
in
dec
cmp
je
into
movsb
enter
jle
add
mov
xchg
push
cli
rcl
mov
std
lods
xchg
test
cmp
jns
and
mov
fbstp
fcom
push
push
out
test
rclb
cmp
jbe
push
adc
iret
pop
mov
fadds
nop
testl
pop
incl
mov
inc
pop
xchg
pop
push
je
xor
jle
jge
jg
cmovns
xor
mov
fnstcw
mov
outsb
and
decb
daa
shll
xor
pop
fsubr
push
into
push
xchg
test
sub
jp
repnz
sbb
movsb
push
adc
je
pop
pop
rclb
mov
xchg
cs
xchg
pop
and
or
sbb
andl
das
rcr
mov
jo
jb
or
shrl
mov
mov
jmp
mull
int
pop
jns
mov
jnp
notl
ret
jnp
shlb
push
inc
hlt
xchg
test
lret
jne
icebp
dec
mov
mov
xchg
ljmp
or
cli
xor
pop
test
es
std
shlb
outsl
mov
fs
aam
mov
pop
in
aam
sbb
jno
dec
dec
inc
imul
aas
mov
dec
ds
out
leave
push
pop
sub
jg,pt
gs
mov
jbe
inc
into
into
inc
scas
faddl
orl
mov
lret
add
cmp
shll
push
or
pop
fnstcw
push
sbb
and
adc
je
jmp
shll
mov
xchg
loop
pop
sub
loop
dec
mov
or
mov
cmpsl
roll
mov
xchg
stos
sbb
pusha
icebp
mov
cmp
push
xor
mov
pop
xchg
inc
sbb
dec
mov
jns
arpl
ret
negl
aaa
scas
cld
sbb
out
popa
sub
das
inc
sti
std
inc
adc
es
jo
fistl
jo
dec
dec
adc
jbe
aad
or
sub
testl
pop
test
sbb
xchg
push
aam
or
stos
cmp
mov
jp
pop
je
push
push
sbb
shr
das
lahf
test
cmp
pop
rcr
cmc
enter
cmpsl
sub
aaa
test
das
and
xor
mov
mov
and
lahf
pop
in
xchg
cld
ja
arpl
fadd
xchg
cmp
xchg
sub
mov
int3
nop
cmp
push
xchg
fcomps
test
add
dec
sub
jns
and
lds
rcrb
mov
fmuls
les
jb
mov
xchg
lods
push
and
or
xchg
mov
test
push
js
ljmp
lret
adc
in
ret
pop
inc
mov
cltd
aad
cmp
and
out
icebp
push
inc
cmc
mov
cmp
xchg
mov
cmp
pop
sub
fcoml
cli
mov
test
int3
and
ljmp
mov
cmpsl
leave
enter
scas
ret
mov
sarl
aaa
ss
jnp
fwait
jne
scas
lods
sub
test
faddl
roll
test
call
pushl
and
or
jecxz
sbb
dec
test
cmpsb
and
pop
fistpl
push
xor
in
roll
jp
int
sbb
int
adc
mov
dec
loopne
stos
test
mov
push
push
fisttpll
movsb
cmpsb
out
lods
enter
cmp
jno
dec
push
sti
roll
mov
pop
xchg
popa
jb
std
in
push
lods
rorb
or
pop
mov
adc
fists
scas
scas
cmpb
pop
fstps
jp
insl
dec
mov
xchg
cld
push
sbb
aas
pop
jmp
std
adc
jge
push
fwait
ret
test
aam
sub
pop
aad
mov
arpl
jns
sbbb
dec
push
jae
popl
scas
insl
in
sub
jno
aam
adc
lock
xchg
scas
cwtl
aas
sub
mov
push
adc
std
leave
dec
ss
in
in
pop
ds
les
xchg
xor
lock
jg
stos
hlt
scas
xchg
cmp
fstpt
adc
in
adc
and
pop
sub
adc
mov
or
cmp
test
mov
iret
cmp
mov
fisubrl
sub
in
inc
cmp
iret
int3
inc
mov
cmp
leave
rcrb
hlt
test
clc
or
das
mov
mov
pop
jle
inc
stos
sbb
add
jbe
cs
cmp
out
imul
rorb
dec
ja
clc
sbb
push
je
mov
icebp
jg
es
add
insb
mov
and
addr16
cmpsb
lock
mov
ja
gs
xor
fstl
and
sub
jno
cmp
xlat
jl
push
or
pop
inc
pop
jnp
dec
stos
sub
mov
jb
inc
push
add
in
dec
push
cvtps2pd
inc
push
icebp
das
in
cmp
incb
mov
rcrb
nop
sbb
fadds
and
mulb
jbe
push
push
enter
roll
add
or
sbb
or
sahf
jnp
jne
jns
mov
stc
or
test
mov
outsl
xchg
pop
pop
rcll
xorb
in
xchg
push
inc
jge
xor
dec
clc
cmp
cli
into
xchg
mov
sub
mov
insl
pop
in
cmc
or
pop
sub
xchg
mov
inc
push
add
inc
adc
fidivrl
mov
cmp
xor
sbbb
hlt
and
stc
lock
push
rorb
cmc
in
shrl
inc
cmp
xchg
cmp
jmp
and
mov
mov
mov
repnz
cmp
shlb
mov
jge
outsb
pop
lret
in
sbb
popf
push
rcrl
rcr
out
aad
cmp
fwait
and
in
push
push
cmp
lock
push
and
xchg
pop
or
push
jb
mov
push
cmp
arpl
jl
jmp
mov
mov
sbb
and
lods
sub
sbb
pop
cmp
loope
pop
aam
into
sarb
imul
xor
dec
stos
mov
xor
clc
lcall
lahf
jmp
inc
std
mov
mov
push
push
sbb
dec
lcall
jg
andb
and
movsl
cmc
push
out
les
add
mov
pop
fxch
lcall
in
not
call
das
inc
cmpsb
loopne
aas
jp
aas
lret
jns
mull
mov
insl
jmp
dec
jae
mov
pop
and
clc
mov
adc
inc
push
lret
cwtl
repnz
cmpsl
xchg
addr16
mov
pusha
push
jo
sahf
std
cmp
shl
pusha
inc
mov
xchg
out
mov
mov
or
and
in
lods
fs
cmp
adc
sub
jp
push
cmc
daa
cli
ljmp
or
hlt
cmpl
push
mov
mov
enter
addr16
lds
xchg
fcmovne
xchg
loop
jno
jno
out
mov
and
filds
out
mov
push
xchg
add
rcrl
hlt
dec
idivb
and
or
loopne
insl
lret
icebp
aaa
xchg
aad
mov
bound
push
aaa
mov
dec
xchg
mov
push
push
sbb
inc
xchg
inc
repnz
sub
pop
and
adc
mov
stos
cmp
addb
jno
inc
bound
lahf
mov
push
sub
fldcw
xchg
nop
or
in
fdivl
mov
call
pop
mov
cwtl
cs
xchg
or
rcr
cmpl
or
faddl
lock
pop
loop
mov
repz
scas
mov
sub
clc
mov
bound
adc
jb
rorl
in
pop
repnz
int3
in
enter
lock
aaa
imul
fwait
jmp
repz
test
dec
fistpl
ret
dec
push
add
adc
mov
push
xor
lods
int3
inc
cmpb
testb
mov
pushw
add
xor
loop
sub
addr16
pop
test
mov
xor
sbb
iret
repnz
mov
dec
xchg
es
out
imul
push
test
add
mov
stos
cli
jno
jno
shr
stc
insb
inc
aad
cmpsb
loope
not
test
cld
mov
loop
add
cwtl
repnz
aas
mov
push
insb
mov
pop
inc
outsl
mov
bound
cltd
jne
es
sbb
inc
push
inc
sahf
jb
cmp
notl
cmc
icebp
push
data16
or
arpl
xchg
pushf
lret
pushf
jo
mov
mov
push
sub
dec
mov
shl
popa
xchg
inc
mov
cmc
mov
ret
inc
inc
or
cmpsb
imul
fwait
push
sti
outsb
out
aaa
jg
sub
mov
pop
rclb
mov
inc
add
inc
mov
pop
inc
push
xchg
xchg
xchg
or
test
dec
out
outsb
les
iret
mov
dec
push
inc
imul
cwtl
aad
into
pop
lcall
jge
add
mov
and
xor
and
jbe
cmp
mov
mov
mul
mov
pop
aaa
push
cmp
sti
sbb
sahf
pop
push
inc
insb
or
out
cmp
inc
and
inc
jecxz
adc
and
or
xchg
and
fcmovu
les
adc
mov
aaa
xor
inc
test
ror
leave
sarb
inc
fcoms
xchg
scas
lods
gs
mov
movsb
jno
call
mov
icebp
adc
fcmovbe
xchg
pop
mov
push
ljmp
outsb
fsubl
nop
ucomiss
push
test
call
lods
ds
or
sarb
ret
dec
cltd
xchg
mov
outsl
mov
pop
pop
pop
sbb
repnz
repz
mov
pop
cmp
xchg
adc
out
push
adcb
jge
sbb
ds
in
xor
add
sti
xor
sbb
cmp
push
int
dec
sbb
pusha
inc
mov
xchg
jmp
or
jns
xchg
adc
jg
mov
out
sub
adc
lcall
cmp
jp
lret
mov
in
cmp
andl
mov
dec
je
rolb
out
sbb
test
sub
xchg
sub
leave
cmp
mov
insb
xor
out
arpl
mov
cmp
pushf
nop
pushf
or
mov
sub
cld
daa
sbb
xlat
out
cmp
mov
push
fidivrs
mov
push
push
imul
fdivl
in
jnp
pop
jae
mov
sbb
test
adc
shlb
mov
mov
jns
jl
imul
xchg
scas
mov
xor
into
pop
icebp
fisttpl
cmpb
dec
mov
insb
inc
push
inc
cmp
mov
pop
je
jg
sti
loop
mov
xchg
cwtl
hlt
orl
cmp
rcll
pop
mov
mov
push
inc
icebp
xlat
xchg
fs
int
xchg
lds
push
add
fdivr
sbb
arpl
test
pusha
movsb
cld
stc
sub
imul
jg
out
test
pop
stc
dec
popf
sub
adc
daa
xchg
js
mov
sar
xchg
cs
bound
test
je
adc
and
pop
cmp
mov
pop
ljmp
mov
sub
imul
mov
jae
lds
mov
loope
mov
xchg
into
es
ficoml
mov
loop
or
ret
push
add
lcall
and
stc
xchg
xor
repnz
mov
test
jb
fstpt
mov
test
test
push
imul
iret
inc
xor
stos
bound
rorb
jp
xor
sub
scas
movsl
gs
out
dec
mov
out
cmp
cld
push
add
mov
leave
stos
mov
pop
cltd
mov
dec
mov
je
xor
dec
loopne
test
pop
lret
jecxz
popf
aaa
mov
inc
adc
push
jg
sysexit
sbb
rorb
sbb
jg
jle
outsl
sbb
inc
jl
cs
dec
sub
clc
lds
fstpt
adc
dec
push
subb
scas
mov
es
fldenv
fwait
je
push
loope
in
int3
inc
jle
lods
or
rorl
cmpsb
add
idivb
push
sub
ljmp
sahf
bnd
inc
es
cmpl
test
dec
push
xchg
pusha
or
adc
lock
int3
add
ret
push
fstl
insl
push
pop
js
movsl
imul
xchg
lea
int
pusha
fwait
sbb
push
jbe
sbb
cmp
dec
out
mov
mov
pop
lret
dec
pop
insl
inc
or
xchg
in
fstpt
test
fnstcw
scas
je
shrw
fdivrs
push
cli
cli
repz
push
push
pushf
scas
ss
mov
jb
fbld
insl
test
sub
adc
jne
xchg
leave
xchg
xchg
adc
cmpsb
roll
out
jmp
sub
arpl
and
xchg
lods
movsl
sbbb
mov
js
roll
adc
mov
fwait
cmpl
movsl
sbb
pop
mov
mov
xor
cli
mov
push
out
sub
rcr
adc
into
mov
pushf
mov
fsubl
push
mov
sahf
push
test
inc
pop
jo
call
pop
push
add
sub
je
inc
jae
jne
loopne
mov
fcomps
test
cmpsb
add
lods
test
es
dec
jns
xlat
adc
push
cltd
gs
mov
fisttpl
dec
pushf
mov
mov
mov
push
cmc
test
mov
pushf
mov
repz
scas
fsubr
mov
pop
dec
into
pop
shll
bnd
nop
dec
sarl
cltd
jmp
lock
aad
lahf
clc
add
ret
shl
popf
pop
adc
push
loopne
xchg
push
add
or
mov
pusha
dec
adc
lods
xchg
int
lods
sbb
push
jns
and
mov
lcall
adc
rorl
ret
mov
dec
arpl
in
pop
lret
push
inc
cltd
push
ret
dec
pop
jo
cltd
mov
sub
sbb
rcll
imul
arpl
mov
xchg
xchg
dec
push
mov
push
ss
pop
xlat
mov
ror
fnstcw
stos
or
lahf
xor
getsec
sti
in
fnstcw
xchg
and
test
jbe
inc
ret
mov
fidivrs
and
sti
sarl
movsb
and
inc
pop
jae
xchg
mov
push
mov
xor
hlt
mov
xor
loope
adc
leave
fwait
pop
mov
das
out
jmp
ja
sub
aam
xchg
loope
aaa
or
jne
sbb
inc
cmpsl
cmc
fdivp
dec
rolb
outsl
add
sbb
pop
icebp
leave
ds
in
sbbb
inc
adc
push
sub
jmp
cmp
jnp
imul
xor
mov
fdivl
mov
lods
sarl
xlat
inc
xchg
scas
flds
cmp
dec
sbb
or
and
cmpsb
xor
pop
sub
sub
in
add
sbb
frndint
sbb
in
mov
into
mov
adc
aas
cmpb
push
pop
mov
cmc
xchg
or
adc
pop
enter
jns
or
lods
add
imul
loopne
or
loop
mov
fidivs
or
gs
cld
xchg
jo
clc
jno
mov
sahf
lahf
arpl
mov
sub
mov
sti
and
mov
aas
sbb
mov
pop
pusha
mov
xor
adc
lea
out
xchg
test
push
mov
int3
mov
out
lock
jno
pop
jne
fstl
adc
cli
sub
in
and
int3
inc
jecxz
or
adc
dec
outsb
fwait
insl
sar
imul
jo
enter
jb
pop
xlat
dec
fxch
leave
adc
xchg
jo
ds
mov
inc
and
xchg
mov
push
push
mov
scas
addl
jp
insb
test
out
es
jns
imul
mov
xchg
imul
xor
dec
mov
cmc
pop
das
pop
popf
jp
lods
loopne
ja
or
scas
mov
fnstenv
or
out
add
call
pop
aam
or
push
lock
adc
mov
dec
repz
sbb
xor
lods
push
dec
xchg
mov
rorb
enter
aas
loope
out
mov
int
push
push
sub
ret
out
and
mov
sahf
add
in
loopne
xchg
jbe
sub
decl
lods
pop
rcll
pusha
xor
sbb
sub
int
mov
int
or
xchg
mov
pusha
scas
add
pop
sub
ja
sub
out
scas
mov
int
lahf
mov
xchg
mov
lds
push
push
dec
mov
lock
push
fldenv
inc
jns
pop
sarb
clc
js
shlb
pop
mov
stc
mov
mov
jno
out
mov
inc
cmp
cmp
pop
into
sbb
insl
sub
std
data16
xor
cmpsl
ja
mov
mov
ret
dec
test
cmpsl
outsb
mov
cltd
ljmp
les
mul
or
push
push
ljmp
push
mov
cs
fisubrs
xor
dec
cmp
push
jo
dec
int
push
movsb
mov
sti
fsubrl
xlat
adc
ja
add
fsubs
xchg
jb
loopne
fcoml
int
sbb
sbb
sar
jno
inc
out
jp
fs
sahf
pop
inc
out
mov
leave
orl
jle
aam
add
pop
jmp
sub
push
adc
ss
jge
jecxz
sbb
push
add
scas
mov
loopne
and
cmc
sahf
in
pop
adc
out
mov
rorl
adc
cmc
cmpsl
ret
jp
jge
test
mov
xchg
mov
xchg
cmpsb
push
data16
push
dec
adcl
push
filds
mov
sbb
jbe
out
push
aaa
out
pusha
into
jno
ss
mov
or
subb
scas
push
aad
mov
mov
mov
mov
mov
mov
pop
jp
mov
popf
outsb
outsb
imul
and
loopne
cs
in
add
cltd
or
das
dec
sub
icebp
push
ror
and
enter
and
adc
stos
repz
std
movsl
loopne
test
daa
test
jmp
sbb
cmp
popa
mov
arpl
imul
shrb
enter
mov
jp
pop
dec
sbb
dec
frstor
xchg
test
movsb
orl
mov
ret
and
fidivrl
int
cmp
cmc
mov
testl
mov
lret
xchg
cmp
fistl
jae
in
pop
imul
inc
cmpsb
data16
and
sub
add
mov
adc
adcb
mov
push
mov
xor
fstl
cld
dec
orb
stos
insb
sub
pop
push
push
out
dec
jo
xchg
hlt
xchg
pop
or
xchg
xor
rorb
sbb
push
inc
cs
jbe
sbb
mov
nop
repz
cld
push
ss
fidivrs
movsb
fldcw
enter
iret
scas
mov
lock
pushl
xchg
xchg
lret
xor
popf
clc
aad
stc
into
push
pop
test
in
inc
xlat
nop
jecxz
iret
fnsave
dec
lea
shlb
push
stos
xor
mov
mov
xchg
xor
jo
cmpsb
mov
inc
mov
popf
xchg
ja
fs
cmp
test
insb
lea
pop
jle
cld
cmp
dec
lcallw
push
xchg
add
jmp
std
mov
ret
jmp
movsb
bnd
or
int
push
je
push
outsl
push
push
and
dec
mov
cmp
mov
sub
bound
jge
stos
out
mov
inc
lods
add
fwait
cltd
test
mov
pop
icebp
pop
xchg
mov
cmp
dec
shl
push
das
stc
sub
in
call
scas
xor
mov
pushf
sbbl
shl
push
jo
dec
addr16
push
push
xchg
push
and
shrl
mov
stos
aam
dec
std
xchg
xchg
push
daa
or
mov
and
sub
pop
jbe
adc
xchg
sub
mov
lcall
call
xor
jb
stos
fldl
jmp
cmp
ret
int
push
adc
lds
push
add
jmp
pop
jns
mov
fisubl
cmc
dec
push
jno
inc
sbb
lock
mov
cmpsl
or
push
push
test
and
sbb
call
aad
rol
push
add
add
cli
adc
arpl
fs
rorb
adc
mov
inc
push
lods
sbb
push
out
ret
push
gs
or
or
sbb
gs
sbb
sbb
icebp
sbb
mov
cmpsb
adc
mov
and
arpl
mov
mov
loopne
lret
sbb
outsb
or
aas
push
add
outsl
mov
clc
push
loop
sub
and
pop
lcall
dec
inc
into
test
std
lods
mov
mov
or
dec
sub
rclb
into
sub
mov
les
sbb
jnp
sub
lods
sahf
sub
add
mov
mov
inc
xchg
nop
rorb
cld
or
push
jbe
jae
sbb
sbb
out
adcl
cmp
mov
mov
gs
mov
add
mov
xor
pop
ljmp
sti
xchg
pop
jmp
and
adc
pop
fdiv
add
mov
jg
leave
xor
icebp
and
or
mov
add
test
xchg
fsubrp
paddsb
movsb
jbe
cmpsl
sub
movsb
or
add
adc
data16
sbbb
lret
push
fdivs
push
adc
jae
push
stc
in
push
jge
sbb
jmp
pusha
cwtl
cmp
mov
stc
push
pop
insb
pop
xchg
add
dec
adc
outsb
sbb
into
mov
jno
mov
cmp
dec
stc
ret
fnstenv
and
jle
add
push
cmp
mov
and
pop
mov
mov
pop
jge
enter
jbe
push
nop
sub
hlt
arpl
mov
jecxz
movsb
daa
arpl
rclb
xchg
xchg
inc
int
test
jns
push
pop
enter
ret
imulb
insl
push
dec
push
sub
scas
push
mov
sbb
repnz
or
dec
adc
xchg
loopne
daa
mov
adc
pushw
pop
sarl
in
les
push
jge
repz
rcrl
scas
or
aaa
push
push
lock
jmp
in
mov
pop
ret
lock
fsts
pop
add
imull
jae
out
repnz
sub
pushl
push
push
push
dec
rcl
test
stos
in
mov
xor
shlb
mov
inc
dec
aaa
and
inc
adc
pop
sbb
shlb
outsb
pushf
jb
js
test
push
jae
mov
add
pop
mov
in
movsl
lret
add
idivl
push
std
jno
jo
lcall
in
js
add
push
push
jno
mov
icebp
rcrl
jg
mov
xchg
sub
dec
cmpsb
out
out
imul
cmp
push
mov
sti
mov
mov
push
mov
out
cmpsb
in
mov
mov
mulb
and
cli
cs
mov
jae
or
pusha
fwait
movsl
mov
or
dec
call
aam
loope
inc
rcrb
fistps
adc
daa
xchg
leave
sahf
stos
sbb
add
sbbb
push
mov
mov
dec
mov
pusha
jae
adc
leave
mov
jmp
cs
aaa
repnz
and
fsubrl
push
std
jae
jmp
fsubs
ss
adc
and
cs
outsl
jl
cwtl
push
bound
movsb
cmp
std
sbb
mov
dec
es
fwait
and
and
fisttpl
call
jo
insl
in
aam
inc
cld
icebp
push
inc
shrb
push
fs
lcall
inc
xchg
inc
mov
cmpsb
pop
cmpsl
stc
or
mov
dec
mov
cmp
cmc
mov
cmp
push
jmp
hlt
dec
movsl
mov
dec
pop
push
imul
enter
sbb
es
arpl
sarb
or
jnp
pop
jo
mov
sti
icebp
pop
ret
addr16
jnp
lret
jge
repnz
xchg
mov
cmc
aad
scas
push
cs
cmp
inc
repz
ss
loop
into
lds
ret
cmp
fldt
push
ret
fnstsw
cmp
into
mov
addb
add
inc
idivl
ljmp
push
lret
rcll
lock
mov
cli
sbb
adcb
into
cwtl
aam
dec
pop
inc
adc
mov
or
push
inc
or
sbb
xchg
mov
mov
sub
fnsave
fcompl
fs
cmp
dec
sbb
loope
sti
and
push
divb
sbb
xchg
sub
and
enter
and
in
ds
xchg
nop
xchg
int3
je
inc
inc
dec
mov
mov
mov
mov
cltd
dec
ljmp
insb
pop
popa
adc
jno
lods
scas
fidivl
jg
out
or
jnp
push
dec
cmpsl
icebp
inc
lret
stc
stos
jae
jne
push
sbb
or
sahf
inc
mov
jl
jnp
mov
xchg
ss
outsl
adc
sub
dec
pop
pop
int
sarl
push
sbb
xor
sbb
aam
pop
sub
ret
push
sub
xchg
pop
mov
jecxz
mov
popa
addr16
xchg
inc
and
out
inc
or
add
mov
jmp
popa
sbb
pop
push
pop
mov
filds
adc
ret
dec
jl
cltd
sbb
and
inc
xor
imul
mov
notl
sub
lret
icebp
pop
ljmp
jno
inc
shrb
iret
pop
mov
sub
mov
std
pop
aam
xchg
mov
cld
mov
vcmpss
mull
aam
pushl
ss
aam
mov
mov
in
pushf
or
sahf
fstpl
pop
rcl
fcmove
mov
pop
testb
sbb
call
pushf
in
jbe
cmp
call
mov
enter
fsubrs
std
stc
mov
push
or
jle
mov
xor
xchg
sti
adc
dec
sub
fstp
repnz
mov
sub
arpl
loopne
mov
lock
and
repnz
icebp
aad
or
lods
pusha
scas
shlb
cltd
push
push
fsin
jno
push
cmp
mov
fnstenv
out
or
out
jnp
decb
lods
sbb
xchg
insl
pop
out
rolb
adc
sbb
dec
sub
clc
jmp
mov
fidivl
scas
jmp
js
mov
mov
out
and
xchg
push
in
dec
xchg
in
lock
sub
fucomi
mov
scas
push
repz
pushl
sbb
xchg
les
push
jo
stos
imul
je
loopne
mov
js
sub
lea
add
sub
add
sbb
stc
xchg
inc
or
out
xchg
pop
pop
aas
jo
jo
jns
out
mov
and
les
ljmp
pop
push
xor
adc
xor
push
xchg
outsb
pop
inc
push
mov
cmc
pop
mov
inc
cmpsl
dec
ret
mov
and
sbb
lock
pop
add
stos
dec
lahf
sbb
jnp
dec
push
cmpl
mov
sbb
fildl
jl
inc
inc
adc
mov
rorb
xor
mov
scas
dec
jbe
jecxz
jp,pt
out
sub
push
push
jnp
iret
fsubl
add
fildl
dec
sbb
mov
xor
cmpsb
or
pop
inc
clc
push
ja
int3
adc
push
stos
mov
adc
in
pop
xchg
mov
out
add
lods
stc
loop
or
inc
adc
test
dec
hlt
xchg
jns
pusha
pop
filds
addr16
push
cltd
fadds
sub
dec
or
fnstenv
jmp
push
and
leave
mov
lods
xor
jb
mov
sub
enter
push
sti
and
pop
int3
leave
xchg
loopne
mov
jge
scas
pop
popf
out
inc
mov
sub
enter
pop
cmp
jge
or
adc
sbb
je
das
jbe
into
inc
cs
and
aas
daa
inc
mov
adc
rcrl
mov
in
mov
pop
enter
xor
shlb
lods
mov
les
pushf
test
inc
adc
ret
notb
dec
lahf
or
mov
xchg
stos
roll
out
test
adc
or
pop
addr16
xchg
sbb
negl
adc
jae
rorl
jno
cmovae
and
mov
lods
pop
aad
push
pushf
nop
add
mov
mov
cmp
sbb
xchg
push
xchg
cmc
and
adc
repnz
or
iret
sahf
in
jp
mov
pop
push
pushf
inc
cmp
fldl
mov
push
or
push
icebp
mov
push
push
loop
or
sbb
pop
repnz
add
and
movsb
fninit
jo
insb
or
subb
xor
push
add
enter
dec
int
cmp
addr16
mov
sbb
xor
add
rcrb
outsl
stos
clc
in
push
cltd
mov
mov
es
push
jle
jmp
pop
jae
inc
repz
leave
xchg
push
mov
in
add
lock
lock
and
les
fwait
fs
jne
inc
addr16
lock
call
jmp
sub
sub
loop
insb
jne
sarb
fcmovbe
inc
jp
ret
into
cld
rcll
adc
aad
pop
stos
fadd
mov
repnz
mov
sbb
sub
jno
stc
mov
jge
push
lods
mov
xchg
sub
cmp
xchg
sbb
pop
mov
outsl
pop
cs
enter
cmp
dec
adc
cwtl
push
jb
rclb
xor
lret
fdivp
or
fadds
das
loope
cs
dec
adc
outsl
lret
mov
mov
inc
or
nop
xor
sbb
sbb
scas
icebp
cld
push
aaa
or
pop
imul
adc
mov
push
push
test
clc
add
xor
sbb
in
add
cmpsl
cltd
scas
xor
and
cld
es
dec
mov
pop
pop
testl
ljmp
jge
sahf
fidivrl
jb
or
mov
adc
add
stc
lds
sarl
test
test
lret
xor
inc
push
and
scas
push
fists
push
mov
into
inc
mov
inc
inc
and
pop
ror
rol
mov
jns
mov
adcb
aas
push
movsl
rolb
insl
push
dec
or
inc
call
pop
push
loop
lcall
xlat
into
lahf
push
test
inc
push
inc
sub
in
inc
loope
lock
xor
push
fstpt
sbb
xor
jg
or
add
adc
push
stos
lds
sbb
lods
rolb
mov
mov
adc
ret
push
cmpsb
or
add
jne
ds
ss
test
shrb
inc
iret
and
add
and
stos
and
cs
push
rol
push
js
sbb
bound
push
inc
jo
gs
fildl
mov
mov
inc
jbe
mov
adc
cs
cmp
xchg
jne
mov
jne
das
pop
pusha
sub
or
test
std
xor
ret
adc
int
inc
clc
popa
ret
mov
insb
xchg
cmc
shrl
push
jae
gs
cld
dec
hlt
fadd
nop
add
pop
ror
push
jae
fcmovnu
dec
iret
mov
xor
imul
adc
mov
imul
pop
adc
or
xchg
dec
push
daa
xor
adc
lds
adc
mov
mov
test
adc
xor
pop
pop
imul
leave
mov
arpl
jo
outsl
xor
data16
push
mov
sbb
inc
rcr
mov
in
stc
cmp
jge
mov
pop
sub
ljmp
movsl
jnp
or
pop
and
mov
pop
xor
jge
scas
jbe
dec
clc
mov
adc
mov
aas
fstpl
add
lret
pop
insb
hlt
lcall
dec
cmc
sub
divb
push
mov
ljmp
gs
add
xlat
pop
push
rorl
pop
cmc
scas
lock
cmc
jo
popa
xchg
js
cmp
jne
nop
testb
adc
movsb
stos
or
dec
pop
jne
cmc
rcl
mov
pusha
call
xchg
adc
add
and
inc
xor
adc
add
jns
into
fidivrs
std
clc
mov
testl
fwait
add
mov
sbb
sbb
cmp
and
movsl
mov
mov
pop
hlt
out
dec
add
jb
mov
xchg
out
addb
ret
sub
xchg
lcall
mov
xor
push
xorb
cmp
mov
push
pop
sti
lahf
lret
xchg
repnz
sbb
jl
or
pop
lock
test
sub
dec
push
mov
mov
call
push
test
sbb
push
nop
mov
add
repz
jnp
in
cmpl
pushf
cmp
hlt
mov
faddl
fisubrs
pop
dec
push
dec
xchg
add
cmp
in
test
das
mov
xorl
in
ljmp
cmp
nop
pop
xchg
push
in
shrb
ds
mov
and
jp
rcr
push
int
add
nop
bound
fwait
into
cltd
mov
xchg
cmc
mov
fstps
ljmp
loopne
fmull
stos
xchg
cmp
test
dec
int3
lcall
test
mov
ret
mov
popa
mov
xchg
or
lcall
or
sbb
fsts
cmp
mov
sbb
ror
nop
pop
sbb
mov
fsubs
push
mov
imul
inc
mov
mov
cmp
jl
and
les
outsb
inc
sub
and
jle
iret
inc
test
movsl
into
jl
ret
test
push
pop
outsl
push
popf
in
lret
push
cld
test
cmp
outsb
xchg
dec
jnp
sti
sub
push
jecxz
cli
les
out
lret
push
mov
and
jb
pop
push
mov
stc
jmp
dec
mov
nop
iret
mov
or
cmp
or
ret
js
sbb
push
sbb
stos
add
xchg
imul
or
test
pushf
iret
sbbl
and
pop
push
xchg
pop
sub
sbb
ret
pop
imul
inc
fsubr
push
mov
jnp
jmp
jmp
movsb
cmpsb
data16
int
out
add
mov
pushf
cli
stos
lds
jno
lds
or
pop
push
lods
sub
cld
outsb
call
jmp
arpl
mov
mov
leave
sbb
pop
inc
fbld
ret
push
push
test
push
or
xlat
sbb
add
xor
jo
nop
xor
test
or
rolb
insb
mov
fisttpll
push
stc
mov
neg
cltd
dec
lret
popf
insl
shrb
or
inc
adc
pusha
sarb
rorl
pop
add
imul
mov
adcl
pop
adc
or
add
leave
jb
movsl
adc
sbb
icebp
lods
add
loope
cli
xchg
xor
outsl
pop
or
add
cmc
in
jecxz
in
in
sub
push
cmp
sbb
xchg
inc
stc
out
xchg
fistpl
add
cmp
sub
out
lods
mov
mov
lock
push
adc
mov
movsl
js,pn
mov
sbb
mov
cmp
fistl
xchg
cmc
xchg
mov
mov
adc
addr16
in
in
sti
pop
call
dec
or
pop
les
in
pop
ljmp
testl
mov
sti
push
movsl
mov
fucomip
aam
out
lret
in
mov
xor
mov
aam
dec
sub
inc
xchg
lock
dec
dec
push
sahf
xor
in
pusha
cmp
js
push
pusha
iret
xor
mov
pop
and
push
loope
inc
clc
or
pop
dec
inc
mov
lret
rcll
int3
rcr
cmpsb
mov
daa
repz
cmova
mov
jg
pushf
xor
setbe
in
pop
inc
mov
ret
imul
pusha
mov
aaa
pop
movsb
push
rcr
or
fnstcw
and
sbb
iret
mov
out
cmp
aaa
cmp
loop
push
mov
divb
inc
dec
repz
xchg
shll
insl
jl
xor
mov
mov
mov
dec
inc
shll
int3
cmp
add
push
ffree
imul
pop
test
lret
dec
popa
in
insb
adc
and
xchg
cmp
stos
mov
out
ret
cmp
jo
rorb
inc
mov
sub
and
xchg
push
sub
idivl
divl
xor
or
pop
int
xchg
cwtl
jbe
aam
pop
or
lea
cwtl
mov
pop
push
jge
ds
iret
aam
shll
scas
push
aad
inc
xor
mov
mov
inc
pop
aad
adc
cwtl
cmp
jp
jbe
push
adc
xchg
aas
dec
out
jo
jge
popa
lcall
cmp
mov
xchg
leave
outsb
sbb
xor
adc
ja
push
lods
inc
fdivs
jb
leave
push
jl
pop
pop
lock
bound
inc
inc
jb
ss
jb
mov
and
sbb
daa
mov
out
jl
popa
lea
jb
rclb
jo
dec
pop
xchg
aad
fimuls
cmp
ja
ljmp
pushf
pushf
mov
lret
or
lods
adc
mov
jne
fdivrp
add
or
push
jno
xchg
jbe
adc
ret
inc
test
mov
add
and
or
adc
test
mov
xchg
dec
aas
push
scas
movsl
jb
inc
stc
pop
mov
cmpsb
inc
adc
pusha
int3
js
pop
rcr
movsl
mov
add
loope
nop
call
adc
cli
mov
mov
popl
mov
mov
and
repnz
cwtl
rcrl
xor
mov
inc
jle
mov
sub
cmc
mov
scas
add
in
xchg
mov
or
incl
mov
std
mov
sbb
fsubrp
or
test
xchg
fstpl
sbb
flds
xchg
addr16
cmp
fldcw
test
mov
pop
out
dec
stos
add
pusha
or
add
xor
popa
push
inc
add
jbe
xor
roll
dec
int3
push
cmp
lret
aad
cmc
or
subb
fmul
push
repz
ds
insl
daa
shl
repz
test
scas
icebp
stc
mov
mov
aas
push
stc
iret
sbb
shlb
dec
test
ljmp
cwtl
cmp
hlt
repz
leave
in
sti
mov
adc
sbb
mov
inc
pusha
push
clc
xor
fwait
sbb
jp
flds
or
mov
jmp
int
hlt
sub
daa
pusha
or
xchg
fildll
sub
sub
movsb
lahf
mov
adc
test
fwait
jl
out
sbb
add
sub
aam
cmp
inc
dec
mov
or
jbe
add
add
ds
sub
or
push
insl
dec
movsb
fs
pushf
sub
int
loope
xchg
push
pop
inc
adc
jae
imul
adc
sub
push
and
ja
fiadds
gs
cmp
dec
pop
mov
push
inc
cmp
adc
mov
fwait
cmp
and
pop
loopne
aaa
sarb
addr16
pop
add
xor
rcll
mov
stos
das
iret
test
inc
mov
int
popa
shrl
and
push
and
fmull
cmc
push
mov
sti
or
inc
pop
ffree
push
lea
sbb
mov
adc
xchg
and
or
jo
jmp
test
xor
jmp
xor
add
sbb
sbb
insb
pop
cmp
pop
xchg
push
loopne
filds
cli
fstpl
js
outsl
fimuls
dec
arpl
inc
sti
ss
cmpsl
fnstenv
sbb
jl
xor
mov
rcll
pop
das
and
inc
mov
add
sbb
and
insl
xchg
jle
dec
mov
mov
cli
adc
sub
inc
das
cmp
and
lea
lret
xor
int3
test
pop
mov
jns
xchg
test
stos
imul
dec
fwait
gs
scas
scas
mov
inc
in
cltd
mov
sarl
inc
cld
sbbb
mov
ret
sub
or
xchg
sub
lock
jbe
iret
push
enter
add
outsl
xor
cwtl
and
mov
jmp
jbe
out
dec
mov
sub
jmp
test
sbb
stos
mov
sbb
fisttps
xchg
mov
mov
push
aas
imul
pop
jae
mov
arpl
mov
sub
xor
dec
xchg
lea
xchg
fimull
int
pusha
inc
and
repz
push
js
xor
les
cs
xor
sbb
mov
addb
or
mov
notb
xchg
adc
gs
mov
dec
flds
sub
or
imul
jno
fidivl
xor
mov
push
cmpsb
popf
daa
or
bound
test
pop
js
mov
mov
sbb
ss
or
outsl
push
jnp
into
mov
mov
push
cmc
mov
or
mov
sub
jb
sub
xor
mov
sbb
pop
loopne
pop
test
pop
pop
dec
and
xor
or
pop
aad
dec
cmpsb
repnz
inc
sbb
and
std
dec
or
fdivrl
cltd
lcall
dec
push
mov
mov
movsl
inc
repz
pop
mov
test
in
jns
pop
adc
mull
aam
sub
or
and
xchg
int3
xchg
scas
movsl
inc
icebp
pop
int3
or
out
sub
inc
xor
add
dec
sbb
movsl
fists
mov
mov
xchg
ss
loopne
mov
cmp
test
push
xchg
or
test
dec
sub
or
add
into
sub
mov
dec
les
lock
mov
aam
xlat
call
in
push
lcall
mov
fisubrs
in
sbb
cmpsl
test
jmp
sub
cltd
enter
in
sbb
jnp
adc
cltd
shll
mov
lods
or
outsb
push
mov
stos
push
inc
movsl
mov
call
xor
stos
cmpsl
or
into
subb
fs
pop
pop
daa
adc
or
jb
xchg
jl
jle
loop
in
test
lahf
test
jg
mov
dec
das
pop
pusha
xor
mov
stc
inc
push
lcall
cmpl
push
pop
jbe
mov
mov
mov
mov
jp
add
mov
popa
mov
mov
push
mov
lea
je
inc
sbb
pushf
xor
mov
cmp
cwtl
or
push
je
loopne
idivb
clc
hlt
outsb
mov
sub
mov
cmpsb
les
mov
mov
je
cmp
xchg
pop
pop
add
es
jnp
jns
jl
in
xchg
and
sub
aaa
in
mov
xchg
mov
sub
hlt
add
out
sbb
js
inc
cld
cwtl
sub
jno
rcrl
lret
shlb
xor
pop
pop
insl
xchg
lret
mov
mov
cmp
js
inc
adc
fs
rcrl
and
cmpb
inc
push
mov
mov
mov
shlb
add
jecxz
addb
mov
ljmp
jge
and
jecxz
cld
popf
xlat
pushf
adc
sbb
imul
adc
pop
popf
push
mov
jg
bnd
cwtl
out
cs
adc
daa
sub
into
mov
and
cmpsl
inc
xchg
cmp
les
sub
pushl
pop
xchg
in
cmc
xchg
mov
imul
lret
inc
jle
mov
in
xlat
mov
inc
ret
add
push
sbb
fdivs
jecxz
sub
jge
addr16
dec
mov
test
insb
insb
mov
ficompl
xchg
inc
fcoml
into
in
ds
cli
adc
call
fcompl
sar
scas
repz
push
test
xchg
test
std
push
or
adc
repz
out
stos
push
fs
rcrl
popf
xchg
arpl
sbb
xchg
jbe
scas
rcrb
in
repnz
add
stos
cmp
xorl
inc
sub
out
das
xchg
ja
and
or
fbld
mov
pop
inc
pop
lea
mov
xor
in
mov
in
push
dec
lahf
sub
out
movsb
add
lea
xchg
insb
and
fnsave
dec
dec
mov
dec
ja
arpl
adc
and
jne
cs
test
fstl
ljmp
int3
pop
orb
inc
ret
icebp
hlt
aam
pop
fs
dec
mov
inc
pop
xchg
scas
sub
jno
jl
stos
adc
ret
ja
imul
orl
adc
xchg
jae
sbb
nop/reserved
and
pop
adc
or
ret
mov
cld
ja
mov
imul
adc
add
sub
arpl
ret
in
scas
pop
stos
or
pop
movsb
cmp
pop
sub
lods
xchg
xor
popf
jo
xor
jb
jmp
jae
clc
test
test
mov
xchg
arpl
mov
mov
rcr
push
sti
ljmp
jne
shrl
pushl
cmp
hlt
stos
add
sub
jecxz
outsl
ret
pop
push
scas
jle
pop
dec
shll
dec
scas
mov
cli
cmp
and
xchg
adc
aas
mov
movsl
test
or
xchg
lods
insl
or
mov
jae
test
jnp
jne
ljmp
and
sbb
stos
sbb
adc
ffreep
dec
push
push
sbb
mov
fsubrl
inc
lods
xor
push
lock
shl
es
cmp
cmp
cmp
jle
jnp
pusha
jmp
pop
cld
sub
shrb
cmp
dec
outsl
and
push
or
add
fmulp
popa
jno
in
dec
outsl
inc
imul
mov
jl
jns
sbb
out
mov
sub
outsl
stc
into
rcll
stos
or
rcrl
cmp
adc
mov
push
cmp
aaa
fiaddl
push
ja
aam
movsb
push
pop
int
loopne
mov
jo
hlt
ss
adcb
adc
fstp
and
call
pop
or
mov
jle
add
je
sub
cmpsb
sub
inc
mov
jbe
push
sub
push
ficompl
lea
lret
call
jg
out
cld
jl
cmp
add
inc
xchg
and
pop
mov
imul
dec
rol
in
daa
push
out
mov
lahf
xor
xchg
mov
into
lcall
xchg
push
add
mov
jae
add
imul
xor
stos
push
mov
inc
xlat
arpl
sub
in
xor
insl
outsb
test
ret
loope
push
cmpb
mov
xor
add
mov
enter
int3
inc
jb
push
in
adc
sbb
out
dec
push
pop
or
int
and
sahf
jmp
pop
lahf
jo
inc
scas
cli
ficoml
aad
sbb
bound
inc
insl
sbb
shlb
imulb
cmp
jae
and
sarb
fildl
cmp
mov
add
cmp
cmc
jne
std
data16
mov
sbb
test
cmp
insl
decl
xchg
cmpsb
js
xchg
repnz
stos
adc
or
or
adc
loopne
dec
add
mov
or
test
dec
lahf
and
sti
loope
rorb
and
in
mov
pusha
ffree
sub
addr16
or
push
or
push
add
adc
in
mov
bswap
push
out
mov
pop
aam
xchg
jo
add
jae
cltd
sahf
jnp
lock
outsb
std
fs
mov
fisttpl
icebp
cld
arpl
mov
out
xchg
pop
mov
add
pop
popf
adc
push
nop
jecxz
sbb
pmaxub
adc
es
sarb
or
fisubrs
andb
cltd
mov
movlhps
mov
xchg
mov
out
outsb
movsl
in
mulb
mov
loopne
sbb
mov
mov
movsb
stos
leave
sarl
gs
nop
jb
add
clc
inc
fwait
test
dec
push
and
sub
push
jae
mov
fs
in
out
daa
push
jns
or
jg
jae
xlat
pop
aaa
mov
cld
dec
xchg
sbb
pop
push
gs
jo
paddusb
jns
dec
cmp
movsl
jns
pop
jp
dec
gs
in
mov
mov
aam
dec
inc
push
pop
ret
push
fnstsw
iret
sbb
adc
lods
mov
and
jle
mov
pop
mov
sbb
outsb
jne
test
lcall
cmp
lods
divb
lahf
ret
loope
and
std
repnz
and
push
cmc
aad
stc
jle
or
js
mov
call
sarl
outsb
movsl
lods
mov
sub
addr16
push
stos
pop
imul
movsl
cmp
jno
push
int
mov
xchg
inc
fsubrs
clc
inc
mov
cmpsl
sub
jge
dec
out
popa
stc
xchg
sbb
rol
jl
aas
xor
and
dec
pop
sbb
dec
mov
mov
adc
cmc
cli
ja
inc
fnstcw
pop
adc
lcall
sub
pop
xchg
pop
pop
cmpl
sub
dec
call
xor
movsb
clc
sbb
fdivrp
jb
push
push
mov
jl
stc
sub
cmp
sub
mov
xchg
cmp
cmp
inc
adc
nop
cld
pop
dec
pop
rorl
or
pop
xor
mov
into
cmp
xor
cmc
gs
fsub
add
or
out
test
fwait
sub
mov
ss
imul
rcll
sti
inc
dec
ja
mov
addr16
insl
sub
das
jnp
sub
stos
jb
mov
adc
in
adc
add
je
fisttpl
es
jp
or
mov
dec
icebp
sbb
adc
adc
iret
push
ror
andl
test
stos
mov
ss
push
int
push
mov
and
out
fldcw
xchg
sbb
jb
adc
fcmove
jle
add
dec
bound
push
jge
and
add
xor
and
fsubrl
jne
movsb
adc
or
hlt
pop
or
sti
xchg
std
sub
shl
push
sbb
push
out
push
outsl
movq
sbb
mov
mov
lods
inc
aas
ret
leave
mov
scas
mov
sub
pop
in
sti
sub
lods
inc
lret
jmp
je
mov
loopne
dec
dec
jb
or
lea
inc
xor
cmpsl
sub
push
mov
jmp
inc
fdiv
addr16
xor
cltd
out
nop
mov
xchg
inc
add
inc
inc
mov
es
jae
pusha
jns
mov
scas
cmp
ljmp
inc
push
pop
add
insb
icebp
dec
icebp
xchg
out
pushf
cmpl
mov
xor
imul
jecxz
notl
sub
push
fstpt
jno
outsl
inc
cmp
nop
test
mov
jecxz
outsl
pop
xchg
lahf
clc
ljmp
and
sub
mov
arpl
aad
addl
test
test
dec
xlat
mov
xor
in
arpl
jnp
loope
push
in
jle,pn
adc
dec
cmp
cmp
fdivl
and
add
sbb
sub
jb
pop
imul
xchg
imul
dec
xchg
pop
ljmp
xor
fcoml
mov
repnz
inc
dec
adc
adc
cmc
fdivrs
les
sub
mov
in
push
pop
mov
clc
push
int
fadds
push
inc
inc
fs
push
loop
pop
inc
je
xor
and
add
popf
sbb
imul
cmp
fadds
lahf
jp
dec
lahf
mov
ja
stos
lcall
jmp
mov
lret
dec
or
push
popf
push
stos
cli
mov
outsb
push
fdivrl
add
xchg
loopne
push
sub
inc
stos
jno
mov
inc
and
xchg
das
jle
loop
pop
sub
push
mov
jbe
ljmp
lret
push
fsubrp
rcrl
or
add
outsl
clc
jae
aad
int
negb
adc
fs
in
jecxz
inc
or
ljmp
subb
mov
adc
or
mov
or
push
xor
or
xchg
xchg
xchg
incb
sub
jecxz
sbb
mov
lds
fmull
sub
mov
cmpb
movsb
cmp
cmp
fldt
cmp
add
mov
jecxz
imul
fcomp
dec
or
adc
pop
bound
cwtl
pop
and
pusha
psubusw
cmpsl
outsb
popf
dec
mov
fcoml
aam
lahf
pop
scas
ret
or
or
push
xor
push
mov
lds
call
scas
add
test
fucomip
subb
or
xchg
or
or
test
clc
jle
pop
stos
or
outsl
xchg
cmc
lret
xor
addl
push
fstpl
jg
call
sbb
hlt
sarb
and
rolb
cmp
sbb
ljmp
xor
icebp
sub
lock
mov
bound
int
push
lcall
in
and
sbb
out
adc
inc
cmp
ljmp
xor
es
xchg
das
stos
sbb
cmp
xchg
sti
jge
icebp
adc
data16
adcb
jmp
lds
inc
jle
mov
fs
test
jmp
sbb
jne
lret
jns
out
or
in
lds
mov
test
pop
xchg
loopne
pusha
icebp
sbb
ljmp
in
cmp
sbb
ret
insb
and
or
adc
push
dec
sub
rcrl
orb
loopne
std
and
shl
xor
mov
and
xlat
sub
outsl
ret
fistps
test
xlat
lret
clc
cmpsl
xchg
fwait
mov
dec
cmpsl
mov
mov
out
pusha
std
mov
jmp
jns
ljmp
fs
in
cwtl
lods
popa
jge
and
mov
pop
pop
cmp
inc
or
ss
enter
out
shll
mov
out
push
loop
dec
testb
fsub
ja
xchg
sti
lea
fmuls
sbb
jl
push
cmp
sbb
fisubrs
ret
cld
push
mov
into
sbb
shrb
ficoml
adc
inc
std
stos
jmp
adc
mov
mov
xor
mov
or
int
enter
mov
shlb
xchg
inc
or
bound
aad
hlt
xchg
lock
jge
cmp
mov
mov
xchg
or
mov
dec
bound
mov
dec
mov
sarb
stc
jge
jb
rcll
mov
and
mov
call
cmc
inc
jo
adc
bound
jbe
mov
lret
xchg
les
cmp
jle
mov
cltd
mov
out
or
xchg
mov
mov
mov
lret
and
or
jo
push
cmc
mov
lea
mov
push
out
cmp
addr16
lret
xor
lods
pavgb
dec
push
mov
mov
sbb
aad
lret
mov
push
jnp
icebp
iret
cltd
out
sub
imul
xchg
outsb
pop
psubw
xorl
cmp
mov
ret
shll
mov
ret
sub
outsb
cmc
pop
inc
jne
jae,pn
adc
sub
and
stos
sub
mov
cmp
push
jo
mov
sarl
shr
push
in
sbb
mulb
cmp
iret
sbb
outsb
cli
mov
in
inc
testb
pop
jb
mov
aas
ror
xchg
sahf
popf
ret
mov
xchg
xchg
popf
rol
mov
test
cmp
daa
push
lret
jb
enter
inc
lcall
test
push
aaa
push
aam
es
xchg
sbb
or
jne
lret
out
ret
lahf
cmp
leave
jno
sbb
jnp
xor
iret
orl
sbb
add
pop
mov
fmull
push
or
and
xlat
add
xchg
rorl
in
mov
std
movsl
out
das
dec
pop
mov
xchg
decb
pusha
push
cmpsl
insb
pop
jecxz
mov
cmp
outsb
inc
mov
pop
fidivrs
test
daa
fcoml
mov
jne
iret
push
test
inc
outsl
jno
and
or
fadds
adc
push
mov
in
in
inc
and
sub
or
mov
mov
int3
testb
pop
mov
push
xchg
xor
call
movsl
inc
ficoml
insb
loope
xchg
adc
dec
sbb
nop
lods
mov
sub
mov
pinsrw
mov
xchg
stos
inc
outsb
dec
cltd
data16
adc
fucomip
and
sbb
lea
xor
cmp
notb
adc
sub
mov
das
aaa
sub
dec
push
test
out
pop
fcoml
stos
push
jbe
pop
xor
inc
popa
lods
inc
jb
in
mov
sbb
jno
pop
std
or
out
scas
lock
aam
lock
pusha
xchg
jp
add
cli
jle
cmc
cmp
pop
push
pop
aad
pop
loope
shrl
sbb
pop
push
jnp
lods
dec
cmp
adcb
into
add
mov
and
jmp
push
fs
push
aam
and
adc
sbb
arpl
xor
idiv
push
lcall
popa
or
popa
add
push
adc
xor
stos
movsl
test
repz
dec
pusha
cs
xor
mov
xchg
lahf
mov
xchg
sahf
aad
gs
shrb
mov
inc
cs
cmpsl
daa
adc
xlat
inc
adc
jge
test
mov
pop
insl
jnp
jmp
rcll
bndstx
roll
cmp
jae
jg
pop
outsl
push
les
jg
popf
jae
loop
xor
shll
jo
test
bnd
je
stos
mov
outsl
and
pop
ficomps
xor
sub
out
in
cmp
cmp
ror
pop
aaa
mov
movsb
jp
add
adc
stc
fcoms
pop
xchg
sar
fildl
jno
dec
fcomps
dec
test
js
dec
mov
insl
sub
jns
cmp
dec
or
pop
jl
test
add
or
xchg
sbb
dec
ret
xchg
pop
int3
mov
ljmp
push
xor
cmp
lock
movsb
cli
pop
ret
mov
rclb
cmp
adc
cli
cwtl
js
dec
adc
aaa
jnp
or
arpl
cmpsl
pusha
stos
jnp
inc
and
mov
call
and
lea
push
or
out
in
or
in
mov
xchg
mov
pop
cld
int
push
add
add
or
mov
push
mov
pop
add
test
arpl
lea
lea
hlt
pushf
push
jle
aaa
cli
jge
jp
icebp
push
lock
mov
ds
stos
pop
add
cmp
push
aam
in
inc
ja
movsl
fsubl
test
jno
pusha
jp
aad
sahf
push
sub
jmp
sub
push
rclb
cmp
xchg
dec
jle
lods
mov
jl
adcl
pop
movsl
fimull
enter
loope
enter
gs
sahf
in
xorl
and
mov
nop
push
sbb
fnstcw
and
xchg
xchg
adc
cwtl
mov
sub
lea
test
push
push
mov
ds
push
and
jg
sbb
adc
pop
pushf
insl
adc
inc
cs
sub
movsb
mov
pop
and
inc
movsl
dec
pop
loop
rcrl
jge
and
inc
lods
pop
cmp
xchg
stos
sbb
sbb
lea
fcoms
daa
xor
sbb
addb
xor
enter
mov
notb
xchg
shrl
pop
dec
dec
xor
sbb
xor
movsl
in
aas
inc
sbb
clc
fists
sbb
mov
inc
rclb
sbb
adc
xchg
jp
cld
or
xor
dec
xchg
lahf
sub
sarb
jp
stc
xor
pushf
outsl
dec
lret
mov
or
movsb
inc
es
mov
stos
sbb
repnz
mov
in
ret
mov
cmpsl
sub
xor
add
pop
das
rolb
mov
pop
fimull
lret
stos
jo
and
xor
out
mov
shrl
pop
fadds
fsubr
xor
aad
movsb
jbe
inc
push
sahf
inc
iret
icebp
ja
ss
loope
jp
incl
mov
jae
repz
sahf
shr
sub
jno
and
xor
ds
dec
dec
push
lret
mov
jmp
cli
cmp
rclb
add
cmp
inc
jb
mov
jae
jg
pusha
inc
gs
or
sti
mov
mov
push
dec
dec
mov
pop
push
fcomp
stos
repnz
pusha
xor
call
stos
mov
or
shl
push
pusha
es
push
sbb
stc
jo
das
xor
shr
adc
lea
pop
pop
mov
ja
mov
mov
pop
ja
aas
pop
pop
adc
cmp
jae
xor
jo
mov
mov
add
mov
mov
mov
inc
out
mov
cmp
test
or
cmpsb
sub
pop
mov
cmp
ja
lock
push
cli
aaa
iret
inc
push
add
mov
xchg
std
cmp
or
or
push
xchg
insl
ffree
xor
jae
cmp
subb
sub
orl
out
mov
shl
xor
push
scas
cmp
or
push
clc
inc
xchg
mull
das
pop
lods
and
mov
ss
int3
mov
mov
test
jns
loope
mov
jmp
imul
lcall
dec
mov
and
mov
jmp
fidivs
sbb
iret
mov
jp
clc
sub
bound
jbe
mov
xchg
daa
ret
lods
adc
sbb
movb
jbe,pt
xor
notl
push
out
call
mov
mov
dec
gs
push
jmp
lahf
pushf
mov
cld
mov
js
pop
add
inc
push
and
push
push
sub
jge
and
mov
shll
mov
insb
jg
loopne
sub
mov
add
loop
xchg
sbb
test
xchg
mov
add
xor
inc
cmpsl
mov
ja
cwtl
or
pop
cmp
in
add
and
jl
add
xchg
daa
cs
mov
int
push
mov
fucomi
shr
pop
pop
mov
lret
fisubrl
test
fisubrl
push
push
leave
jae
test
cmp
js
nop
mov
jb
mov
adc
outsb
iret
pop
and
scas
mov
adc
sbbl
jecxz
pop
mov
data16
mov
pop
inc
xchg
test
pop
xor
sbb
cmpsb
adc
and
lahf
or
mov
xor
mov
inc
mov
test
lods
mov
xor
jae
iret
pop
pop
outsb
jle
int3
dec
add
push
popf
cli
icebp
out
ret
clc
adc
push
gs
dec
dec
sti
adc
and
ds
imul
mov
mov
and
lock
stos
into
adcl
jmp
in
and
push
les
push
mov
pop
lret
sub
add
jno
es
fs
aad
pop
adc
jp
inc
cmp
cmc
jmp
pop
mov
cmp
out
xchg
add
dec
mov
cmp
dec
dec
cmp
jns
inc
sub
shll
mov
push
mov
loop
cmp
out
or
hlt
and
mov
fucompp
jnp
lods
mov
test
pop
inc
mov
aaa
dec
dec
lock
fwait
jl
int3
loopne
mov
lea
mov
iret
cmpsb
inc
addr16
fcmovnbe
jp
jle
loop
mov
sbb
test
ljmp
stos
int3
xchg
xchg
inc
pop
movsb
iret
es
mov
testb
shrb
xchg
movl
rcrl
cwtl
jns
inc
jl
fs
pushf
int3
push
dec
enter
hlt
lahf
aad
mov
daa
xchg
dec
sbb
popa
and
add
mov
xchg
mov
add
xor
mov
lds
stos
xchg
popa
inc
sahf
movsb
int3
ds
pop
add
and
adc
jnp
fisubrl
into
inc
es
ret
in
stos
mov
cmpsb
ret
mov
bound
sahf
aaa
out
and
sbb
dec
pxor
sbb
mov
inc
pop
lcall
loopne
cmc
jbe
ja
mov
pushf
cli
cmp
fcmove
insb
ljmp
mov
js
and
push
or
mov
sti
mov
xchg
mov
shl
mov
push
pop
cmp
aam
mov
jnp
outsb
mov
inc
nop
jle
cs
mov
test
loope
pop
jnp
ret
xor
xchg
pusha
cmp
daa
jae
adc
cmp
imul
mov
push
int
notb
movsb
mov
test
dec
inc
cwtl
loope
sbb
cmc
cmpb
xchg
mov
add
push
ds
xlat
pusha
mov
xchg
lcall
and
pop
imul
or
inc
push
out
mov
jle
cs
iret
xchg
mov
loop
mov
movsl
cmpsl
dec
sbb
test
jle
xor
cs
lret
icebp
lcall
nop
cmp
movsb
dec
push
mov
inc
enter
or
add
push
incl
cli
shrl
xchg
fldcw
jo
btl
jno
fadds
add
pop
enter
jmp
pop
das
push
scas
ret
in
xchg
adc
imul
xchg
push
mov
sbb
stos
xchg
out
rcll
lcall
data16
jge
in
lret
loop
or
jg
pop
lods
mov
and
ret
shlb
or
lcall
movsl
sub
stc
loope
lret
es
out
iret
pop
push
popa
addr16
xlat
sahf
mov
dec
push
cmp
pushf
gs
je
repz
sysenter
mov
jbe
scas
outsb
int3
push
leave
and
pushf
mov
pop
mov
push
into
std
lods
cltd
pop
test
mov
cmpsl
pop
std
xor
mov
in
sbb
lods
or
fisubs
insl
pop
sbb
dec
push
xchg
shlb
loope
adc
cli
dec
jle
fdivr
lds
sub
jbe
xchg
lea
mov
mov
pop
pop
push
imul
icebp
adc
call
div
into
shlb
mov
fwait
rcll
fisttpll
insb
vdivss
icebp
add
imul
add
dec
jg
fwait
ds
imul
icebp
add
clc
enter
je
xor
in
cmpsl
enter
or
movb
lods
lret
cmc
pop
hlt
pop
inc
cmp
in
mov
mov
je
hlt
add
loop
push
mov
xchg
push
daa
insb
in
add
js
xchg
cmc
sar
mov
cs
or
outsb
decl
and
das
and
repz
xchg
movsb
out
jo
int
aam
aas
xchg
std
fidivrl
mov
insb
cmp
rcrl
xchg
test
sti
xor
pop
mov
add
movsb
out
dec
push
cmp
jbe
dec
test
mov
pop
shr
add
ret
mov
xchg
push
dec
out
add
push
arpl
fldenv
out
xorl
inc
jp
lahf
dec
mov
jnp
dec
push
bound
xor
and
add
sub
xchg
jmp
push
cmp
jl
iret
ficoml
jbe
jmp
xchg
adcl
mov
sahf
std
or
lea
mov
cmpsb
xchg
stos
and
lea
jne
jl
cltd
shlb
insl
sahf
ss
sarl
mov
xchg
outsl
cmpsb
fs
adc
lock
out
out
xchg
mov
push
and
movsl
inc
adcb
dec
into
jecxz
cmc
mov
movsb
rep
add
or
ficoms
push
adc
xor
xchg
scas
push
aam
cli
in
movsl
xor
mov
jge
ja
das
add
and
fmull
add
mov
out
add
mov
mov
arpl
insl
mov
inc
pop
push
out
jno
aad
leave
jecxz
test
and
or
ljmp
add
mov
dec
adc
std
push
les
ja
pop
pushf
add
outsl
aam
rcl
mov
jg
add
divl
pop
stos
insl
add
cwtl
paddb
mov
rol
or
jge
cmp
rcll
jge
jae
adcb
push
hlt
ljmp
sub
cmp
lcall
jmp
xor
mov
push
cmpl
inc
cmp
movsl
enter
out
push
in
test
inc
and
mov
fidivs
icebp
lods
inc
lock
sub
xchg
movsb
movsb
fcompl
xor
fmulp
mov
dec
sub
adc
or
fstpt
into
and
mov
jecxz
jns
add
mov
sbb
inc
fsubrs
mov
push
cmp
mov
clc
sahf
imul
sub
jno
mov
dec
out
ret
js
xor
nop
and
and
aam
dec
jecxz
test
cli
and
lea
les
pop
repnz
cmpsl
push
jle
sarl
push
ljmp
sti
sbb
scas
add
scas
xchg
jmp
jl
xchg
push
push
inc
and
xchg
int3
pop
dec
and
incb
fdivs
sbbl
in
test
jb
popa
mov
mov
mov
pop
ljmp
mov
orb
push
sbb
push
push
and
lcall
popf
sbb
xor
xchg
mov
dec
int
and
xor
outsl
loopne
jecxz
mov
adc
adc
ret
mov
jge
jae
jae
mov
inc
je
ds
sub
stos
repnz
xor
outsl
dec
shll
xchg
fsubp
loopne
pcmpgtd
test
out
pop
lret
test
cli
sub
test
jne
popa
mov
inc
fadds
lret
and
lds
pop
sbb
mov
js
repnz
xchg
push
dec
jg
int3
scas
repnz
jne
xchg
push
std
inc
lret
pop
mov
cltd
adc
mov
push
in
dec
andb
aad
pop
mov
int3
jb
shr
mov
push
cmpsl
sarl
pop
call
and
lcall
ret
sahf
movsb
add
mov
push
mov
enter
dec
or
cmp
js
lds
imul
rcrb
push
xchg
inc
or
jae
adc
stc
outsb
adc
cmp
out
mov
shll
pop
add
enter
bound
xchg
fs
cmpsb
and
dec
cmp
movsb
sbb
and
jp
arpl
mov
mov
mov
shrl
or
dec
data16
dec
ret
test
ljmp
xor
sub
and
dec
cmp
addr16
push
or
xor
sub
adc
jge
pop
cmp
or
loope
in
es
dec
xchg
aam
aas
in
dec
addl
push
xor
push
add
dec
cs
mov
popa
repz
ret
sub
jne,pn
pushf
scas
mov
aaa
stos
xchg
mov
outsb
mov
je
xor
mov
scas
cli
ficomps
aad
pop
movd
xor
ss
test
iret
mov
clc
out
pause
gs
push
data16
sub
negb
push
pop
mov
data16
rcl
cmp
gs
add
sub
add
sub
add
mov
cmpl
or
clc
insb
cmpsl
push
pop
pop
add
cli
js
cmp
fbld
xlat
sbb
add
and
cmpsb
mov
stos
inc
xchg
push
mov
hlt
dec
sub
add
mov
sbb
xchg
nop
dec
cmp
imul
lds
negl
dec
popa
jne
push
xor
rep
movsl
push
ret
mov
inc
or
push
dec
fdivr
or
mov
cmp
add
popa
or
and
mov
ljmp
fwait
pop
cltd
movsb
xchg
rcrw
lret
cli
xor
ret
or
mov
mov
icebp
out
dec
and
mov
test
jnp
xchg
sbb
outsl
imul
push
mov
fmul
pusha
nop
dec
sbb
mov
push
idivl
pop
filds
xchg
test
jns
or
shl
xchg
lds
mov
cmp
dec
fdivrl
push
xchg
xchg
stos
sub
push
aad
sbb
sti
jne
pop
es
cmp
sub
sub
xor
jnp
jno
stos
pop
pop
aam
aaa
and
sub
mov
jl
sarb
out
fwait
outsb
fsubrs
pop
xchg
mov
lahf
pop
mov
xchg
aad
in
inc
test
rcrl
and
aad
syscall
cmp
cmp
jnp
inc
int3
cmc
cltd
ficoml
in
icebp
jo
mov
push
jae
pop
pop
push
adc
xchg
and
lcall
pop
or
inc
mov
push
cmp
aaa
sbb
dec
arpl
jbe
cmp
lods
fcmovnb
lock
cmpsl
movsb
test
fcomi
loop
and
or
outsb
push
stos
push
mov
or
push
cld
push
leave
fcompl
imul
dec
dec
ljmp
jg
es
loopne
pusha
ja
mov
push
jp
js
xchg
inc
testl
mov
push
stos
fs
fcom
mov
or
mov
pop
push
sbb
sbb
xor
push
outsb
ljmp
push
hlt
pop
jp
push
mov
cwtl
mov
cmp
jmp
pushf
adc
jbe
orl
xorl
xchg
ret
sbb
rcll
js
inc
dec
dec
pop
lods
cmp
mov
or
std
ret
loope
jns
cmc
testb
jle
in
nop
sti
dec
push
pop
std
push
stc
aam
scas
and
adc
push
scas
xrelease
cmpsb
adc
bswap
push
mov
sub
fcomps
loope
in
add
xor
cld
mov
mov
mov
mov
out
cli
and
aad
cmp
popf
jle
push
push
mov
fsub
popa
cmc
ljmp
call
loope
mov
int
sbb
pop
cmp
xor
xchg
imull
or
loop
aaa
pop
jp
rolb
cmp
cmp
pop
or
or
cs
cmp
mov
divl
cmp
jle
add
addr16
push
movsl
mov
test
push
pop
pop
cli
push
jb
dec
pop
orl
arpl
and
test
mov
mov
inc
cmpsb
shr
icebp
loope
lock
std
or
lds
jne
dec
lea
in
outsl
xor
jecxz
data16
add
sub
lret
sub
lahf
icebp
pop
jmp
inc
mov
cmp
mov
fisttps
xchg
or
xor
xchg
and
mov
pop
xchg
pop
cmc
rcr
lcall
pop
aam
jmp
or
and
jle
xchg
xlat
enter
imulb
cwtd
add
pop
jle
call
dec
icebp
sahf
pushf
dec
jb
push
adc
insl
inc
test
into
mov
push
and
pop
mov
fld
pop
flds
je
cli
xor
pop
dec
sub
adc
sbb
xor
push
sub
ja
mov
pop
inc
loopne
cmpl
and
jns
jmp
lcall
fwait
mov
sub
imul
pusha
mov
xchg
sahf
sbb
mov
ret
daa
fnsave
loopne
mov
push
lcall
loopne
test
outsl
pop
push
dec
jns
mov
mov
nop
inc
insb
push
inc
mov
mov
pop
in
lea
sub
push
sub
or
mov
fiaddl
fsts
mov
sahf
pop
les
or
xchg
xor
sahf
inc
mov
aas
in
outsb
lahf
cltd
movsb
xchg
sbb
or
icebp
adc
pop
dec
adc
out
mov
dec
inc
mov
popa
leave
cs
pushf
jnp
jecxz
mov
andb
daa
stc
fcoms
outsb
aas
aad
repz
add
shlb
jb
fcomi
test
fxtract
cmp
es
out
data16
and
jge
cmp
in
mov
inc
or
orl
xlat
enter
rcr
aaa
lret
push
dec
stc
lods
pushf
pop
into
leave
mov
daa
mov
cli
roll
cmp
push
mov
xchg
pop
por
cmpsl
insl
push
push
js
pop
xor
push
sahf
shld
xor
aaa
cmpsb
add
adc
out
ret
push
test
sbb
mov
push
movb
movsl
jns
rorb
mov
repnz
cmp
adc
mov
shrl
xchg
out
test
pop
rcrl
cmpsl
sub
sub
jecxz
push
jle
fists
or
popf
shl
pop
cmpsb
aam
mov
sti
cmp
mov
popf
cmp
lock
lods
xchg
out
nop
lret
sbb
jno
outsb
clc
cmp
mov
jecxz
daa
xor
dec
xor
movsl
mov
movsb
xchg
rol
mov
loop
fidivs
std
popa
add
in
push
add
outsb
xchg
add
mov
xor
add
loope
pop
and
out
dec
mov
mov
les
inc
pop
ror
out
or
aas
clc
out
aad
pushf
xchg
or
or
cmp
mov
shlb
jae
pop
jbe
lahf
push
pop
std
roll
add
inc
pusha
jno
inc
pop
and
pop
cmpsl
fs
jno
sub
and
dec
scas
cltd
xchg
dec
adc
jb
push
xchg
dec
or
dec
stos
mov
jl
out
pop
push
xor
cmpsl
or
arpl
inc
test
cwtl
movsl
stos
and
in
xchg
popf
mov
ret
sti
cmp
xor
xchg
push
mov
filds
pop
and
aas
pop
pop
push
jae
or
xor
loopne
jl
jecxz
loope
fisubl
sbb
inc
jb
xor
push
jb
movsb
inc
out
leave
sti
rcrb
jge
test
popa
push
mov
ljmp
cmp
aam
mov
and
cmc
ss
dec
xchg
sahf
outsl
les
not
leave
dec
jne
xchg
nop
mov
jns
sub
and
add
clc
xchg
leave
mov
lret
cmpsb
mov
jo
inc
pop
xchg
xor
jecxz
aaa
push
ja
inc
shl
jb
fwait
add
test
push
fstpt
add
cmp
jmp
fs
scas
push
ficompl
lea
sbb
dec
and
jne
lods
in
push
add
or
fwait
mov
clc
dec
jge
inc
push
and
jp
xor
xchg
lds
inc
push
mov
pop
mov
arpl
enter
ss
pop
adc
int3
rcrb
cmpsl
aaa
push
sbb
xor
push
jne
mov
sbb
iret
xor
orl
stc
pop
ja
cmp
sub
js
imul
aaa
aam
ficompl
fadd
or
xlat
sub
push
pushf
inc
lahf
hlt
ja
repnz
inc
and
notl
push
into
cmp
push
push
int
pop
xor
jne
dec
punpcklwd
sub
add
inc
adc
add
add
dec
adc
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
