cmp
sub
inc
sbb
or
sar
leave
and
rcll
xorb
divl
push
fldl
sahf
or
dec
lds
mov
cmpb
xchg
loopne
mov
iret
dec
adc
fwait
imul
ret
mov
push
out
daa
cld
rorb
mov
lahf
xchg
or
sub
mov
cmovle
jp
outsb
movsl
sub
sbb
leave
cmc
xor
ss
popa
cmp
and
mov
mov
repz
xchg
cmp
into
cmp
out
lods
add
movsb
sarl
rcrl
inc
jmp
outsl
stos
push
cmp
lock
sbb
out
xchg
arpl
imulb
aaa
add
scas
pushf
stc
imul
enter
clc
out
xor
jl
pop
mulb
cmc
dec
jns
mov
sbb
in
test
ja
bswap
lea
lea
jmp
shl
sar
aam
mov
pusha
movw
pushl
cmp
shl
pusha
lea
je
pusha
mov
push
jmp
xchg
lret
in
mov
or
fnsave
sbb
jo
xor
ja
enter
addr16
xor
jno
xchg
jl
add
push
ficompl
mov
xchg
enter
cld
in
pop
nop
mov
sti
cmp
shlw
fcomps
xchg
jge
int
orb
sbb
int3
mov
outsl
stos
xor
inc
bnd
or
dec
xlat
mov
jp
ja
and
std
adc
mov
cmp
jmp
out
inc
mov
call
das
cmpb
jg
mov
xchg
mov
aad
fimull
stos
fcmove
sbb
push
aam
xchg
xchg
sbb
or
inc
mov
cmp
ljmp
add
fcoml
sbb
jae
mov
mov
xchg
in
in
es
mov
mov
xchg
call
in
jle
int3
in
inc
jne
sub
xchg
mov
ficoms
psrlq
push
js
int
cmpsb
pop
stos
pop
xor
mov
jg
xchg
dec
xchg
mov
cmpsb
aas
fdiv
add
out
xchg
mov
lea
je
pushf
push
lea
pushf
lea
pushf
lea
call
pushf
call
jmp
shl
pushf
pushf
clc
bt
mov
pushf
movw
cmc
cmp
push
lea
jae
bt
cmp
sub
lahf
movsbw
lea
pushf
lea
call
cmp
add
xor
inc
pop
cwtl
shl
pop
cmp
test
cmp
push
call
cmp
pushf
jmp
cmc
add
pusha
pushf
push
push
lea
jmp
xchg
push
pushf
movl
movb
pushl
jmp
stc
pusha
xor
test
test
pushf
mov
jmp
mov
ror
mov
clc
add
ror
inc
jmp
enter
jg
mov
sbb
fidivl
mov
sbb
inc
pop
fcmovnb
out
rol
in
push
imul
jmp
ret
pop
jcxz
lea
adc
shlb
pop
out
pop
ret
hlt
or
add
sub
xor
xorb
popf
lods
enter
dec
mov
or
adc
test
shrl
fmuls
aam
dec
cmp
popa
mov
mov
ds
pusha
jg
jne
lcall
sbb
add
cli
rol
mov
ret
jnp
movsl
cmp
sbb
pop
inc
cld
pop
das
fsubrl
xor
xchg
jl
dec
cmp
push
sti
sub
mov
xor
insw
mov
inc
addr16
adc
into
xor
sub
or
inc
pop
cld
in
xchg
push
cmp
insl
ror
xor
jae
sbb
in
ret
adc
cwtl
mov
sub
jecxz
xchg
std
ret
adcl
adc
les
mov
lods
jmp
push
jecxz
pop
add
loopne
incl
or
and
das
imul
mov
mov
addr16
fcoml
xchg
jle
sarb
outsb
pushf
jmp
es
je
sbb
xor
adc
pop
test
mov
dec
mov
rol
or
push
lock
xchg
or
or
xor
rep
sub
pushf
out
cmc
dec
fsts
mov
cltd
scas
cwtl
cmpsb
fadd
lcall
or
jo
mov
inc
ficompl
gs
jno
or
jo
adc
adcl
aad
dec
push
or
mov
nop
in
ljmp
shll
lock
or
mov
nop
int3
lret
cmp
insl
ret
loope
or
cmp
loope
sbb
sbb
sub
inc
mov
jmp
mov
mov
loope
call
pop
mov
repnz
mov
push
mov
xchg
into
addr16
outsl
fsubrs
or
and
or
scas
push
xor
sub
in
cmp
data16
adc
fwait
mov
and
xorl
stc
daa
lods
das
mov
pop
hlt
pop
push
scas
adc
push
pop
mov
iret
adc
rclb
lds
lret
pop
xor
or
rcrl
jg
mov
mov
or
xchg
or
cmp
andb
sahf
mov
out
xchg
stos
ljmp
loop
jmp
jg
sbb
push
lds
xchg
jge
lock
ficompl
dec
in
inc
pop
ss
andb
jbe
sub
scas
cmp
xor
scas
sbb
cmp
xchg
and
dec
stc
pop
outsb
cltd
scas
jo
rcrb
sbb
fucomip
or
int
or
sbb
jo
inc
and
rorb
test
inc
inc
jle
mov
jnp
jecxz
jl
in
jae
jnp
movsl
cmp
imul
lahf
cmp
add
pop
mov
imul
cmp
pusha
jmp
pushf
mov
jmp
push
jmp
lea
call
pushf
bt
mov
pusha
call
pop
scas
add
cwtl
aad
insb
mov
cmpsb
loope
xchg
lret
ret
enter
pop
shlb
repz
das
stc
sbb
in
sub
lea
xlat
fsubrl
push
or
cmovnp
lea
pop
stc
int
xor
jnp
in
push
clc
adc
call
jno
mov
scas
push
jp
and
lret
popf
pop
cmpsl
stos
mov
dec
fwait
mov
mov
mov
mov
mov
arpl
dec
leave
or
out
pop
sub
ret
inc
jle
leave
inc
add
ljmp
cld
xchg
jnp
dec
lods
cltd
fcoml
jmp
jg
ret
xor
mov
enter
lock
mov
xchg
sbb
cs
xchg
xchg
cmp
gs
push
mov
adc
and
push
data16
nop
scas
leave
push
jb
and
addr16
and
ret
push
mov
mov
xchg
xchg
int3
in
rorl
push
cmp
out
jno
out
or
es
mov
pushf
mov
in
pop
mov
or
xor
in
stos
mov
sub
jle
outsb
test
mov
push
sahf
sbb
sbb
icebp
cmp
aas
repz
jne
xchg
mov
inc
mov
fnsave
xor
and
jge,pt
std
or
cwtl
mov
rcr
jnp
jg
arpl
mov
mov
ljmp
les
data16
insb
push
push
movsl
mov
lcall
popf
or
add
and
popl
cmp
in
mov
shl
lods
lahf
cmpl
ss
adc
or
lcall
stos
sub
hlt
mov
cmp
pop
lock
and
iret
nop
imul
cmp
push
call
sbb
out
lahf
bound
xlat
ljmp
imul
mov
or
lret
xorb
lods
mov
jne
nop
mov
aam
xchg
or
add
divl
jbe
hlt
xchg
mov
pushf
pushl
lahf
and
fildl
inc
mov
xchg
mov
lea
jnp
mov
hlt
fiaddl
dec
divl
out
jecxz
xor
repz
mov
sarb
and
push
stos
scas
cmpsb
imul
icebp
stc
icebp
es
push
cmpsb
push
add
push
shrl
add
loop
ss
pop
jg
ret
mov
fistpl
sar
inc
or
sti
rcll
testl
leave
rcr
mov
lods
mov
fildll
mov
pusha
scas
out
xchg
lret
hlt
mov
fldcw
imul
sbb
fsts
dec
jns
icebp
ficoml
inc
sbb
dec
mov
sbb
scas
adc
test
mov
fistps
push
jl
shr
pop
popa
add
popa
push
cld
push
jecxz
pop
insl
or
jae
fdivl
push
pop
mov
jge
mov
mov
fstl
gs
inc
or
mov
sbb
xchg
push
xchg
dec
dec
movsb
lods
je
xchg
dec
xor
sbbb
pusha
outsl
scas
inc
sub
xor
or
or
pushf
repz
call
sub
iret
cli
stos
pusha
dec
cltd
inc
sub
andb
icebp
pop
push
call
jbe
out
add
lret
sbb
ds
in
lahf
cmp
and
dec
jne
out
dec
add
sahf
xchg
pop
add
ja
or
lar
mov
add
xlat
daa
and
mov
ljmp
and
xchg
pushf
daa
ja
std
cmp
mov
jge
jmp
mov
xor
pop
rolb
mov
ret
mov
loopne
imul
mov
pop
pop
into
mov
loope
dec
and
jle
mov
push
dec
pop
pop
stc
les
push
cld
cmp
sbb
inc
sbb
add
call
je
xchg
mov
js
pop
and
subl
aam
ljmp
fwait
pop
pop
mov
icebp
pop
out
fistl
mov
sub
pop
xchg
clc
adc
lret
adcb
jns
add
in
mov
ficoms
fidivs
add
icebp
daa
nop
insb
imul
pop
shll
loope
xor
outsl
xchg
xor
pop
fisubl
cmc
pop
out
inc
iret
sbbl
imul
or
add
inc
movsl
mov
push
lods
movsl
dec
out
popf
dec
cmp
mov
pop
cli
pop
je
rcl
loopne
movsb
cli
ffree
or
sub
or
inc
inc
in
gs
les
push
je
cltd
sar
pop
ret
mov
xchg
push
jp
fsubr
dec
xor
adc
sub
adc
xorl
push
and
pusha
call
mov
icebp
sarb
or
lret
mov
push
jbe
sbb
f2xm1
iret
dec
out
mov
ficoml
stc
mov
push
test
inc
adcl
rcr
fldcw
or
adc
lcall
dec
jb
xchg
mov
lods
cmp
cmp
push
jmp
ja
test
mov
pop
sbb
shll
add
js
mov
dec
cmp
cmpsl
clc
shlb
lock
scas
push
test
sub
push
cmp
jp
cmpsb
jg
xchg
insb
inc
fsubrl
mov
rorb
test
or
dec
ficomps
xor
sub
test
sti
aad
xor
and
pop
or
xor
mov
mov
and
stc
cmp
mov
int3
sar
lock
leave
mov
cmpsb
int
test
outsl
imul
addr16
mov
and
and
cld
idivl
and
insl
leave
add
mov
mov
jl
in
outsl
cmpsl
jle
dec
ret
sub
addb
pop
pop
and
sbb
adc
neg
add
mov
test
test
push
jb
sbb
pop
xor
mov
dec
mov
sbb
jp
or
adc
shr
jge
scas
add
or
shl
dec
cwtl
push
movsl
test
bound
add
or
dec
xor
inc
out
pop
pop
in
pop
mov
add
lds
mov
sub
das
sub
data16
mov
mov
add
jne
dec
and
push
out
mov
jne
rcll
stos
adc
push
cmp
rol
mov
and
jae
xchg
mov
and
inc
fwait
xchg
stc
clc
loopne
cmpl
xor
je
jp
pop
jecxz
mov
ret
ret
int
test
scas
jne
insl
push
and
movsb
adc
lea
pop
bound
or
mov
inc
xchg
and
mov
or
xchg
adc
lret
fimull
cmpsb
aaa
push
call
pop
movsl
or
gs
push
lds
mov
aas
popf
push
imul
popa
xlat
jb
rcrl
dec
push
pushf
cmc
xchg
push
and
mov
lods
cmp
lea
mov
or
insl
sbb
add
and
cmp
subb
lds
push
sbb
dec
or
outsl
or
inc
popa
ja
mov
mov
and
out
mov
and
xchg
dec
push
inc
adc
ss
sub
andl
push
and
cwtl
inc
sarl
rolb
sahf
cmc
mov
push
jecxz
out
sti
cmp
clc
and
pop
jnp
push
xchg
dec
or
push
imul
js
inc
std
lods
or
push
mov
ds
adc
test
xor
sub
in
loop
sbb
std
jp
ja
lock
mov
movsl
xchg
insb
test
aaa
dec
xor
dec
subl
sbb
inc
xor
pop
rcll
lds
mov
pushf
adc
jge
xchg
jecxz
pop
xchg
jnp
jp
or
pushf
or
repz
add
dec
dec
inc
lds
outsl
mov
mov
jb
mov
pop
lds
jae
dec
out
gs
add
fldt
inc
jo
shlb
shl
movsb
repz
fstpl
inc
jecxz
xor
jle
push
popa
inc
repnz
sbb
adc
mov
stc
pop
pop
xchg
lock
adc
aam
insb
scas
jge
sub
aas
addr16
add
push
cmp
rcrl
cmpsb
sub
ja
sbbb
bound
mov
andb
pop
in
lods
push
jmp
sbb
or
mov
mov
mov
ret
xchg
rol
fs
mov
add
and
adc
push
sahf
fcoms
sub
xchg
mov
iret
loop
movsl
aam
adc
inc
rorl
pop
mov
into
cmp
jo
aam
mov
push
cmp
sbb
adcb
fdivrl
test
sbb
test
mov
add
test
scas
fs
sub
adc
pop
lahf
imul
int
xor
mov
add
sbb
adc
add
test
mov
xchg
shr
les
ret
sbb
or
sub
xor
push
popf
iret
dec
mov
inc
mov
inc
cli
scas
mov
push
xchg
lea
insl
stos
xor
and
cmp
mov
scas
cmp
insl
dec
psllq
fnsave
aaa
jp
or
gs
dec
into
xchg
cld
mov
mov
push
int
pop
in
push
fists
xor
jmp
or
imul
ljmp
inc
mov
sbb
mov
add
orl
cltd
orb
das
movsl
fadds
add
pop
mov
inc
sahf
push
cmp
pop
xor
enter
mov
sbb
mov
insl
jbe
aaa
sti
insb
shrl
sahf
jle
xlat
rorb
mov
out
hlt
cltd
push
aam
lock
xchg
out
mov
xchg
out
std
data16
test
inc
or
gs
mov
push
jmp
mov
xchg
popa
push
shlb
pop
fidivs
mov
mov
mov
lahf
ret
fcomps
pusha
mov
ja
xchg
dec
dec
out
jl
sbb
lahf
pushf
xchg
in
leave
cmp
push
lahf
jmp
decl
cld
movsb
popa
rclb
out
pusha
xchg
in
xlat
inc
test
inc
dec
mov
pop
and
push
in
dec
adc
test
jb
insb
repnz
ds
dec
pop
inc
mov
xor
mov
popf
std
pushf
pusha
xor
cwtl
push
lea
jno
movsb
cmp
or
or
cmpl
aaa
add
or
xchg
mov
add
icebp
inc
movsl
inc
mov
pushf
data16
dec
pop
or
xor
aam
mov
jg
push
add
bound
and
and
repz
dec
xchg
or
sub
test
loope
push
test
jne
pushf
xchg
jo
sbb
ret
pop
push
addr16
outsb
dec
jecxz
push
addr16
cmp
movsl
jl
lret
add
or
mov
sar
imul
ds
adc
lds
mov
mov
xchg
imul
hlt
into
jno
and
cmpl
push
xchg
mov
mov
mov
iret
icebp
mov
adc
aaa
scas
push
shlb
adc
adc
dec
xchg
or
pop
cmp
sbb
repz
xcrypt-cbc
cmpsl
push
sti
loope
call
push
pop
pop
movsb
popf
popf
mov
mov
gs
inc
jnp
mulb
inc
inc
jno
lcall
mov
stos
lods
out
pop
mov
sbb
inc
jg
cwtl
fs
loopne
ficoms
lods
sahf
mov
ret
addr16
sub
jno
test
sbb
rorl
pushf
pushf
xor
aam
sahf
xchg
jbe
or
push
jg
add
es
aam
outsb
pop
mov
adc
jecxz
sbb
mov
lret
xchg
ds
mov
mov
stc
cmp
inc
dec
add
pop
push
mov
jnp
dec
inc
in
and
and
fwait
cmc
icebp
mov
mov
rclb
pop
sbb
pop
fisubs
push
and
jg
mov
adc
scas
ror
dec
xchg
jo,pn
jo
sub
ss
aaa
mov
test
shrl
or
and
das
cmpsl
mov
jge
cmp
push
or
push
into
pusha
roll
lods
push
mov
mov
dec
ljmp
cld
std
xchg
xchg
or
movsl
xlat
dec
add
rorb
xchg
mov
dec
cmp
adc
lahf
cmc
int3
xlat
and
jnp
daa
xchg
jle
jo
out
mov
xchg
test
cld
xchg
int3
lods
pop
xor
ss
cmp
pop
jno
cwtl
mov
jae
inc
xchg
sahf
mov
scas
push
mov
ret
push
insb
cwtl
pop
cmc
int
xchg
ja
inc
sub
lock
daa
xor
daa
inc
jle
push
ja
hlt
adcb
hlt
xor
xor
cltd
test
scas
ret
push
iret
pop
adc
daa
aad
rcrl
sahf
xor
bound
hlt
addb
movsb
jmp
push
mov
dec
and
mov
jp
pop
inc
adc
mov
add
adc
aas
fists
in
inc
mov
push
add
pop
sub
nop
mov
aas
test
insl
repnz
cmpsb
fdivrs
movsb
data16
stos
dec
pop
inc
mov
jge
xlat
xor
cmp
fwait
xchg
pop
es
inc
mov
test
sbb
xchg
stos
fdiv
addr16
out
fdivrp
adc
clc
loope
inc
test
fwait
xchg
mov
out
aam
sbb
push
mov
xchg
imul
xor
ret
xor
imulb
and
xchg
xchg
cmp
sbb
cli
enter
pop
aas
lods
sub
testb
mov
xchg
sub
add
lea
test
jmp
hlt
xorl
or
mov
subps
mov
xchg
test
fdivrs
lds
push
push
loop
xor
push
mov
enter
pop
ljmp
dec
pop
mov
stc
pop
and
pop
adc
jo
js
add
pop
push
ret
pushl
aaa
dec
and
out
pop
xor
push
fistpll
xchg
mov
scas
cmp
mov
aam
subb
cmpl
dec
aad
mov
or
mov
ret
inc
jp
fwait
popa
xlat
add
loope
xchg
push
xor
rorl
mov
xchg
sub
adc
and
cmp
inc
mov
inc
vmovhps
or
pop
push
lcall
in
jl
jno
mov
cmpsb
fsubs
and
in
and
fstl
jae
push
aaa
das
xchg
xchg
xor
pop
test
js
cmp
fcmove
ss
bound
and
mov
scas
pusha
mov
push
dec
shll
add
jl
mov
add
ret
out
imul
push
aas
ret
aad
es
test
mov
mov
adc
jl
jg
lahf
xor
or
stos
and
hlt
mov
aas
push
pop
shlb
and
bound
call
pop
nopl
out
call
push
test
inc
ljmp
and
or
fs
ret
in
iret
nop
out
mov
inc
fsubl
dec
sahf
lods
rcll
call
pop
mov
rcrb
mov
out
mov
pop
jp
enter
and
enter
scas
je
fsubs
mov
jmp
sub
dec
clc
outsl
mov
pop
dec
jne
xchg
dec
and
mov
add
add
and
fcmovnb
jmp
xchg
dec
adc
xchg
lock
jae
iret
je
orb
lahf
out
push
mov
and
sub
popa
orb
jp
loope
or
adc
push
sub
outsb
lea
cmc
mov
stc
xchg
stos
or
mov
push
ljmp
jge
stos
int
movsl
test
fsts
out
push
jg
into
or
notl
gs
mov
imul
in
repz
ret
insl
sub
or
jae
xor
xor
subb
dec
push
jecxz
insl
test
pop
cmp
lods
mov
inc
repnz
mov
dec
xchg
adc
push
and
andb
push
sbb
icebp
adc
lds
mov
das
pop
test
fs
imul
push
mov
push
out
cmpsl
loopne
add
mov
jne
nop
test
fs
mov
adc
and
lods
mov
push
hlt
xchg
add
pop
sub
clc
stc
adc
mov
xchg
ret
jp
sub
cld
mov
mov
or
ret
xor
stos
ss
insl
int3
mov
jg
das
je
ljmp
cli
fsubrs
pushf
je
mov
xchg
int3
jb
in
pop
inc
or
lods
movsb
cs
jp
pop
data16
das
cmp
icebp
pushf
pop
dec
cltd
xchg
mov
jmp
and
ljmp
ret
xchg
adc
jo
or
jae
sbb
outsl
stc
mov
fs
sub
xchg
jg
lods
add
jl
push
add
pop
mov
orb
xchg
fs
mov
dec
loop
lret
push
test
fs
inc
aas
ret
adcl
stos
push
int
xor
into
ret
jmp
aas
arpl
inc
cltd
push
sub
ret
leave
lret
rcll
loope
filds
stc
lock
fimuls
adc
shll
xlat
test
lcall
in
push
test
je
ja
mov
out
cmp
jb
mov
addr16
aad
sub
fdivr
fdivrl
jmp
mov
sbb
add
jecxz
into
jno
xchg
jge
dec
mov
jecxz
ss
jle
lahf
out
pop
shl
push
cwtl
pushf
das
xor
scas
dec
add
daa
test
mov
xchg
mov
cld
xchg
push
pop
sbb
xchg
fisubs
or
arpl
cs
es
js
xor
jmp
or
and
lods
pop
sbb
lods
inc
in
ja
ss
arpl
addr16
jo
sbb
jbe
xor
inc
mov
movsl
xchg
insb
sarl
push
leave
sbb
in
enter
pusha
cmc
stos
cld
pop
mov
divb
movl
mov
add
jp
sbbb
jp
idiv
and
scas
pop
cmpsb
incl
aad
mov
call
dec
xchg
xor
pusha
rcl
aaa
mov
mov
jns
lcall
loopne
jns
cs
jmp
fcomip
push
push
pop
lea
addr16
or
ja
mov
push
out
push
insl
popa
call
pop
sbb
pop
sbb
test
dec
insl
inc
adc
test
fnstsw
into
in
push
ja
adc
cmp
push
leave
loop
cmp
xchg
stc
cwtl
xchg
push
lcall
fimuls
xchg
xor
cmpb
mov
mov
fimull
aaa
cmp
pop
xor
adc
adc
jp
mov
add
mov
add
sti
dec
aas
xor
leave
pop
pusha
nop
mov
subb
movsl
fildll
mov
loope
sub
pushf
adc
shlb
xor
pop
jg
add
cmp
nop
mull
mov
adc
pop
cli
cwtl
andl
xchg
fwait
mov
and
cwtl
push
or
xor
mov
lcall
push
sub
sahf
test
sahf
in
pop
mov
jle
cs
inc
std
cmc
adc
cmp
mov
mov
xor
enter
outsb
ret
into
shl
das
inc
inc
mov
and
jne
xor
pop
lret
cmpsb
mov
popa
pop
adcl
repnz
bound
sub
out
popa
mov
in
and
test
call
fs
or
push
pop
cmp
mov
add
jae
ss
stos
adc
in
data16
xchg
outsb
xorl
testl
dec
jae
push
cmp
add
popa
sti
jle
je
fs
adc
jge
sbbl
rorb
popf
dec
fwait
sub
ljmp
xchg
fimuls
outsl
mov
cld
inc
and
imul
mov
rorb
mov
mov
jg
lahf
xor
sti
ljmp
push
orl
cmpsb
push
loope
or
pop
cmp
shll
ja
dec
lock
fists
insb
aad
inc
xor
and
repz
insl
stc
out
sahf
push
xor
mov
push
cwtl
sub
lods
xchg
sub
in
add
mov
dec
out
mov
lock
mov
sub
in
popa
std
cmp
inc
xlat
mull
mov
add
pop
nop
mov
and
inc
lahf
xchg
arpl
movsl
cmp
adc
dec
mov
cmp
xor
or
mov
jp
push
push
dec
push
aaa
or
iret
add
jo
and
adc
sahf
xor
out
dec
fwait
pop
jb
mov
arpl
and
push
adc
loopne
in
and
ds
dec
cmpsl
mov
sub
or
and
and
pop
addr16
lods
dec
dec
mov
sbb
xchg
bsr
popa
xchg
dec
stos
xor
xchg
sti
fidivs
int3
jecxz
adc
push
mov
mov
jmp
xor
rorb
cmpsl
fwait
pop
sub
daa
pop
andnps
lods
adc
cmp
and
cmpsb
jecxz
in
jo
and
mov
test
sbb
inc
loope
out
jbe
js
push
xchg
push
in
in
xor
cmp
inc
dec
sub
je
insl
test
jae
xor
sahf
xchg
fcmovu
fwait
popa
cmc
sub
jp
dec
jmp
adc
js
or
xchg
cli
movb
bound
lock
addr16
call
cmpsl
sbb
jle
nop
push
test
sub
add
scas
int3
icebp
adc
loop
cltd
ss
bound
xorb
mov
jl
ds
cmp
ja
mov
nop
cwtl
xchg
xor
push
add
cld
jnp
outsl
aam
mov
inc
movsb
lea
outsb
jnp
cs
subps
adcb
mov
test
dec
movsl
fldenv
mov
cli
ds
cmp
cli
sbb
lret
jae
or
test
out
ja
shlb
cmp
mov
jo
pop
inc
mov
ret
sbb
inc
jns
lods
mov
jne
ret
sbb
in
in
jp
out
cmpsl
mov
addb
lock
dec
jl
xor
aas
call
push
test
fcomi
mov
fldcw
inc
aas
outsb
pop
adc
mov
dec
sbb
in
mov
js
adc
popf
adc
clc
and
popf
xchg
insl
xchg
in
mov
cld
not
xchg
mov
popa
scas
cwtl
mov
dec
ljmp
pushf
in
fldenv
icebp
mov
enter
and
xchg
xlat
xchg
sbb
repz
pop
dec
jmp
mov
add
ret
imul
adc
sbb
cltd
ss
ja
inc
add
inc
ffreep
gs
int3
or
add
test
mov
or
je
dec
mov
lods
ror
idivl
mov
sbb
pop
jnp
jmp
out
ss
inc
mov
or
push
inc
sahf
icebp
shll
xchg
jmp
enter
cwtl
pop
push
lret
scas
int3
push
or
inc
mov
xor
dec
xchg
mov
add
mov
mov
in
jp
scas
jmp
inc
pusha
insb
lock
cmp
adc
fwait
jne
pop
push
int
dec
icebp
ljmp
and
movsl
inc
mov
imul
push
jmp
js
inc
pushw
push
incl
pop
gs
sub
inc
out
mov
lret
mov
inc
aam
push
sbb
stos
mov
mov
clc
nop
inc
out
fs
imulb
sub
push
scas
jns
ret
hlt
idivb
pop
movsl
sub
stos
outsl
adc
jmp
loope
jae
cltd
lcall
inc
sub
shl
and
adc
xor
int3
adc
lea
and
push
lcall
adc
sbb
ja
jle
rcrl
repz
cmpsl
cld
xchg
dec
adc
lods
popa
mov
cmp
je
lock
rcll
xor
add
mov
nop
clc
mov
add
mov
fadds
ss
mov
mov
iret
and
inc
sbb
inc
or
xor
mov
insb
push
insl
mov
sub
add
mov
lcall
sub
pop
out
jo
sahf
daa
mov
xchg
test
cmp
addr16
xchg
jmp
in
mov
icebp
leave
mov
xor
std
sbb
les
gs
imul
mov
lods
mov
loope
cmp
sbbb
into
cmp
cwtl
add
mov
fs
inc
int
inc
push
je
outsb
pop
stc
lds
sub
xor
std
ja
daa
xor
dec
gs
cli
ljmp
adc
inc
bound
insl
out
sub
cwtl
pop
mov
mov
mov
push
cmp
sbb
das
pop
imul
popa
push
push
mov
ret
in
and
shll
add
lods
mov
clc
aam
cmp
fwait
call
xor
lret
mov
out
jae
sbb
mov
mov
xorl
popf
out
sub
jbe
imulb
fs
sub
cmp
mov
and
cmp
aad
xchg
lahf
xor
scas
enter
mov
loop
popf
aas
lds
adc
sub
fcmovbe
aam
data16
test
or
pusha
add
mov
inc
roll
xchg
in
lret
rolb
movsl
push
ret
sti
push
push
pop
shlb
pop
scas
push
lods
ljmp
sar
dec
int3
icebp
fdivl
shll
sub
xor
out
ds
sub
jae
pushf
repz
xchg
add
adc
add
out
adc
out
sbb
mov
mov
test
sbb
or
sbb
pop
test
mov
lret
cld
rol
rorb
cmpsb
xchg
mov
lret
mov
filds
sub
aaa
cwtl
pop
into
in
shrl
lret
aam
stos
lret
clc
js
repnz
jno,pn
roll
cwtl
out
mov
leave
fwait
ret
into
rcrl
sub
cmovbe
int3
inc
adc
adc
fstl
mov
cmpsb
and
test
loope
dec
stc
ret
aad
jle
lret
jo
movsl
sub
clc
aas
icebp
mov
xchg
xlat
adc
add
sbb
mov
lock
add
mov
fdivrs
xchg
sub
xchg
ficompl
mov
jne
adc
rcrl
das
out
popf
mov
cltd
fldenv
addb
mov
stos
push
rol
fldl
push
in
mov
pop
jmp
shl
push
cmpsb
lahf
and
pop
lock
push
xchg
sub
stos
dec
mov
xchg
adc
mov
insl
das
enter
inc
lcall
das
lods
adc
or
int3
sbb
adcb
jbe
or
mov
fiaddl
aas
cmp
popf
sar
sti
pop
and
loop
pop
xchg
pushf
fisttpll
xchg
xlat
push
in
xchg
push
and
push
push
callw
pop
mov
push
insl
cltd
cmp
xor
mov
cmp
outsl
test
out
mov
push
stos
mov
inc
jne
push
or
cmp
xor
sti
std
out
push
adc
fcomps
cmpsl
pop
subl
int3
xor
scas
or
pop
ffree
sbb
xchg
cltd
add
cmpsb
sti
pop
gs
data16
lcall
insl
pop
cs
stc
xchg
push
ficoms
inc
pop
push
push
pop
mov
pop
dec
jae
fcomp
test
cli
push
enter
mov
sbb
leave
dec
js
sbbb
adc
cwtl
in
push
data16
fldenv
divl
lret
push
jg
enter
out
fisubl
out
add
adc
shll
insl
mov
call
pop
xor
mov
jnp
mov
add
fisubrl
cmpsl
test
iret
rol
popa
lret
lock
insl
sbb
or
mov
shlb
mov
and
xchg
stos
lods
mov
rcl
mov
loopne
xor
xor
rolb
sbb
lock
js
cld
dec
mov
push
or
jnp
push
cmp
mov
push
sti
cmp
aad
and
into
pop
mov
int
sahf
cmp
push
std
sarl
pop
jb
bound
repz
out
out
adc
out
or
test
insb
xchg
inc
jp
jo
mov
adc
xchg
ss
outsb
xchg
lret
sub
and
push
mov
mov
sbb
repz
out
in
cmp
mov
dec
jno
std
push
adc
call
call
lods
mov
cmp
rep
outsl
hlt
loopne
jmp
aaa
sbb
popa
and
push
adc
aaa
jbe
int3
xchg
sbb
jne
jecxz
iret
mov
cmp
in
lret
xor
popf
lds
xor
xor
shrb
in
pop
test
pusha
mov
repnz
lahf
add
insl
xchg
sub
and
mov
add
addr16
outsb
or
add
dec
nop
mov
fldt
pop
sub
mov
and
dec
daa
fucomip
add
pop
dec
jo
cmp
cld
jg
and
mov
add
mov
push
imul
xchg
or
dec
xchg
sbb
fcoms
pop
ljmp
arpl
xor
je
imul
imul
inc
stos
stos
dec
sahf
jl
jns
mov
pop
loop
xchg
xchg
pop
dec
jmp
jmp
dec
lcall
test
rcrb
movsl
cmp
cmpsl
sahf
fiadds
pop
aaa
xor
adc
into
in
mov
imul
outsb
pusha
push
iret
push
mov
mov
inc
or
sbb
mov
xor
data16
push
data16
xor
xchg
call
xchg
pop
pop
stos
dec
iret
mov
inc
movsb
xchg
and
jne
or
out
insb
or
push
test
fldt
sub
sbb
loopne
out
and
xor
jmp
lods
dec
shll
int
and
or
or
mov
mov
mov
andnps
inc
jbe
leave
cmp
mov
jge
icebp
iret
cld
pop
pop
xlat
les
mov
xchg
push
arpl
leave
sub
addb
fildl
push
ret
add
jmp
icebp
sub
jmp
mov
push
sub
adc
out
xor
fistps
push
or
pop
sahf
adc
ret
stos
aaa
xchg
sahf
push
leave
inc
push
push
jmp
fistps
inc
in
dec
jno
rorb
aas
jg
jmp
cld
mov
pop
sbb
jg
mov
dec
lret
addr16
fcoml
adc
sbb
outsb
test
xor
and
adc
inc
addr16
insb
lods
xchg
mov
mov
iret
push
pusha
scas
pop
xlat
in
fldl
popa
push
mov
inc
mov
das
add
popa
push
cwtl
lcall
push
push
mov
std
vsubpd
nop
in
push
pop
fwait
dec
add
gs
xchg
push
out
xchg
pop
sbb
aad
ret
mov
js
ja
jns
ljmp
sub
cmp
push
cwtl
inc
jno
sbb
lahf
aam
out
and
daa
negb
aas
inc
and
insl
repz
xchg
pop
arpl
dec
push
in
push
jns
inc
xor
mov
xchg
cmp
add
mov
cltd
mov
sub
pop
xor
cmp
movl
sbb
sub
xchg
jns
cmp
mov
cmp
xchg
mov
lods
pushf
test
mov
bound
imul
sbb
movsl
lock
nop
or
hlt
in
outsb
mov
dec
adc
jb
bound
in
sti
shr
ja
pop
dec
push
sbb
add
cmc
jg
das
add
xlat
cmpl
adc
fsubl
xor
fwait
out
pop
push
xchg
and
add
pop
xchg
and
jp
dec
out
les
xor
ljmp
inc
fucomi
push
fistps
xlat
mov
out
xchg
gs
loope
push
jge
jp
out
push
stos
call
lock
movsb
cmc
mov
add
aad
mov
jb
cmpsb
aam
loopne
imul
out
jns
xchg
sarl
loope
mov
mov
push
sbb
inc
mov
inc
jo,pt
decb
mov
and
jb
lds
push
movsb
outsl
sub
mov
rclb
xchg
gs
xchg
fldenv
add
out
dec
clc
pop
icebp
ds
adc
adc
push
lcall
push
cmc
mov
mov
pop
arpl
jecxz
push
cltd
adc
pop
mov
in
into
sbb
and
into
adc
lret
pop
enter
add
jno
sub
mov
out
dec
dec
xchg
xorb
jl
ds
orl
adc
clc
aad
push
aaa
mov
push
in
out
sub
imul
mov
inc
mov
call
mov
pop
andb
xchg
ret
sbb
lret
cld
test
fstpt
in
and
call
push
inc
push
pop
imulb
dec
notb
pop
subb
aam
cwtl
add
sahf
xchg
sub
xorl
push
jge
jl
aas
sbb
pop
sbb
into
adc
daa
xchg
sbb
fs
scas
jb
in
popa
fs
lretw
je
cmp
xchg
inc
jl
mov
aam
add
lret
dec
inc
fdivp
push
adc
xchg
pushf
pop
adc
dec
mov
pop
add
mov
fidivs
sbb
jne
sbb
add
cmp
loop
cmp
dec
in
add
cmp
mov
popa
fidivs
std
popf
fidivl
fiaddl
cli
jl
and
jns
sub
or
push
lcall
aam
sbb
xchg
movsb
insb
jp
imul
ret
mov
sbb
adc
and
adc
arpl
mov
sub
mov
shll
sbb
xchg
or
and
dec
fstl
fwait
ds
das
jp
cmp
je
stc
xchg
pop
clc
ljmp
pop
dec
adc
mov
insl
repnz
fs
sub
not
movsl
fisttpll
repz
cmp
push
or
and
pop
mov
sbb
int
test
cld
stos
mov
push
hlt
xchg
cld
testb
inc
leave
cmp
jo
popf
pusha
aas
out
push
jo
call
int3
lahf
int
mov
push
mov
cld
sub
pusha
daa
jb
xor
out
jno
add
add
out
sbb
mov
xor
mov
mov
pop
pop
lock
std
icebp
push
xchg
sub
sbb
xor
push
cmpsb
out
mov
mov
arpl
sarl
cmp
or
jl
bound
aas
add
push
or
shrb
test
cmpsb
inc
xchg
ljmp
push
and
dec
push
adc
sub
and
test
inc
mov
inc
stos
into
jmp
pop
cmp
ljmp
std
lret
inc
inc
mov
bound
and
fildll
mov
pusha
cmp
fisubrl
mov
leave
adc
adc
jp
cwtl
fnsave
lds
inc
pop
sub
out
dec
push
sbb
lahf
out
aas
dec
sbbb
mulb
jo
mov
jl
or
in
xor
mov
lret
and
mov
and
mov
jo
pop
mov
mov
sbb
or
inc
cmp
mov
enter
leave
in
mov
icebp
ljmp
or
scas
sbb
push
dec
int3
inc
cmp
dec
je
mov
mov
popa
insb
xchg
inc
ret
dec
loop
and
add
leave
sub
cmpsb
int
push
dec
mov
arpl
push
shlb
xor
int
or
hlt
ja
jno
rol
shr
sub
push
cmp
ret
cli
in
rorl
test
enter
mov
jmp
popf
cmpsb
in
mov
je
cltd
add
in
and
movsb
es
aad
out
dec
imul
pushf
and
push
mov
push
inc
add
bound
cmp
inc
sbb
icebp
jle
dec
dec
pop
fs
hlt
jg
jbe
lds
jecxz
outsb
daa
push
aam
rclb
ficomps
outsl
or
sub
push
cmp
bnd
dec
ja
aam
pop
cmp
and
in
cmp
inc
pushf
pop
xor
jle
scas
mov
sub
pushf
imul
mov
fidivrl
sub
movsb
outsl
and
nop
cmp
add
ljmp
cmp
push
outsl
mov
sbb
push
dec
inc
jle
cmp
inc
out
mov
arpl
jmp
xor
notb
mov
push
mov
xchg
push
fwait
ja
nop
jns
pop
xor
xor
iret
ds
loope
sbb
dec
xor
or
divl
cmp
in
and
xchg
pop
test
adc
arpl
mov
pusha
inc
pop
popl
xchg
mov
jmp
adc
mov
sub
dec
inc
loopne
mov
pop
stos
movsb
es
stos
jmp
cs
imul
mov
addr16
and
test
and
inc
push
test
lahf
inc
ljmp
adc
outsl
sbb
ds
lods
mov
mov
xchg
pop
in
dec
xor
fdivrl
gs
mov
pop
outsl
int3
xor
add
push
lea
int
fxtract
insl
loope
lods
rorb
aam
ret
outsb
gs
add
push
lds
jne
xchg
movb
add
mov
mov
sbb
mov
mov
mov
test
ret
daa
stos
jnp
add
ds
pop
pop
and
lahf
inc
pop
jne
ljmp
call
sub
mov
sbb
jecxz
orb
jbe
mov
js
test
test
and
inc
test
lds
sbb
aas
scas
sub
xorb
add
aam
loope
jno
add
into
pop
scas
stos
loope
flds
jo
dec
rclb
rcrb
idivl
outsb
mov
xchg
sbb
js
jb
push
outsb
cmp
pop
mov
dec
inc
cltd
mov
jae
xlat
mov
inc
jne
std
popa
push
and
and
dec
insl
add
testb
push
pop
imul
stos
scas
clc
lret
test
or
ss
scas
mov
jb
cltd
out
pop
test
xchg
sub
adc
ficomps
lods
jnp
movsl
adc
cltd
ljmp
jmp
dec
dec
scas
adc
sub
mov
sahf
mov
add
in
jle
sbb
xor
insb
xchg
jne
leave
xchg
and
jge
fstpt
out
shlb
rol
sbb
mov
in
and
shl
nop
sbb
insb
orl
das
pop
aas
stc
aad
jae
sub
push
shl
mov
lahf
pop
jo
xchg
into
cmp
mov
addr16
and
xchg
sbb
push
dec
call
daa
shl
pop
lods
out
std
adcl
xor
outsl
and
and
mov
negb
ret
sub
dec
mov
jmp
mov
mov
jmp
jb
jl
xchg
rcl
test
push
jae
xchg
or
mov
aaa
mov
xor
rolb
arpl
fbld
insb
sub
dec
jno
fimull
repz
xor
stos
sub
pop
insb
mov
leave
negb
arpl
rorb
adc
lcall
pusha
iret
mov
inc
jle
outsb
sti
mull
or
imul
fcom
je
cmp
testb
sub
outsl
xlat
xchg
xchg
stos
gs
cmp
push
push
ret
arpl
repz
in
insb
loop
xlat
jo
movsl
dec
cmp
lret
sub
xorb
into
mov
nop
aad
stos
xchg
cli
push
jae
and
fcoms
cmp
shlb
fimuls
aad
inc
sbb
test
dec
lret
pop
cmpsl
mov
xor
sub
or
push
mov
rcrl
sub
cmp
int
mov
ja
xlat
out
rcll
cltd
push
push
mov
and
lds
inc
lds
jmp
cltd
loop
or
sub
ret
int
inc
or
or
shrb
inc
lods
lret
sbb
push
mov
sar
add
out
jne
xchg
jb
je
aas
je
js
clc
ja
jae
jecxz
add
pop
or
cmp
faddl
inc
sahf
adc
pop
push
pushf
movsl
outsl
cli
sbb
and
fnsave
jecxz
xlat
dec
lahf
add
mov
lds
mov
repnz
aaa
sahf
jne
cltd
out
mov
iret
adc
mov
or
lret
rolb
sti
adc
insb
push
mov
inc
repz
in
ret
lods
adc
enter
js
ret
movhps
or
int
pop
dec
in
lret
mov
xchg
fs
cmp
loop
jne
nop
sbb
aad
out
xchg
icebp
pop
jbe
lods
mov
ja
insl
adc
or
adc
icebp
jle
fs
dec
push
out
sub
scas
xchg
inc
aaa
pop
sub
or
cmp
dec
movsl
dec
cmpsl
loope
or
sbb
inc
inc
mov
jecxz
and
xor
sub
cli
out
repz
loope
iret
fsubrs
sub
or
xorb
sar
and
sbb
jb
sbb
hlt
pop
icebp
subb
mov
jg
xor
testb
push
xor
sbb
loope
sub
or
leave
mov
adc
sarb
mov
push
scas
test
adc
test
ficompl
ja
mov
pushf
mov
lods
scas
jbe
imul
adc
xor
and
xlat
ficompl
cltd
out
or
mov
out
jne
cmp
and
rcrl
mov
lea
xchg
lahf
mov
jnp
mov
test
jns
mov
dec
pop
fnstcw
add
dec
or
fidivrs
mov
scas
dec
mov
mov
movsb
test
int
xchg
sbb
pop
jno
push
lea
ss
out
cltd
push
stc
sti
jg
test
sbb
mov
cli
dec
mov
decl
outsl
mov
into
sbb
rcrl
add
hlt
or
pushf
mov
sbb
popa
mov
loopne
outsb
ss
mov
repz
pop
inc
xchg
add
hlt
in
inc
outsl
icebp
dec
jns
addr16
cmp
sbb
push
stc
push
xlat
pop
adc
sub
movsb
imul
xchg
js
cmpsl
push
mov
fistpl
mov
ror
xchg
mov
xchg
sarb
rorb
cmp
jae
inc
inc
enter
fstl
cmp
mov
fsubl
pop
imul
jns
add
sub
xchg
or
insb
add
or
xor
jmp
test
sub
lahf
jo
mov
sbb
push
cmc
lret
sbb
jmp
nop
insl
aad
mov
ret
jb
dec
stos
cmp
jecxz
enter
sbb
adc
stos
push
cmpsb
movsb
mov
lahf
out
mov
jg
push
insl
stos
pop
jl
push
loopne
int
mov
push
inc
icebp
mov
jmp
mov
cld
inc
je
stos
pop
cmp
sar
movsb
ljmp
mov
mov
dec
cmp
insl
sbb
inc
hlt
xchg
test
mov
dec
lea
clc
add
dec
int
gs
inc
sarb
add
movsl
jge
adc
xchg
test
mov
call
testb
or
and
ds
popa
pop
enter
cli
and
test
xor
xchg
adc
inc
iret
adc
mov
pop
pop
hlt
mov
jg
rclb
sbbl
stc
ljmp
push
gs
sti
sbb
jmp
repz
bound
inc
popa
mov
fstl
adc
fidivrl
xchg
lods
xor
push
jae
mov
clc
lret
xchg
cmp
or
push
cmpsl
stc
pop
daa
lret
cli
mov
fwait
pop
push
mov
repnz
test
fwait
mov
cmp
mov
aas
scas
inc
or
sub
pop
and
ds
mov
divl
cmp
add
add
clc
push
movsb
push
les
or
adcb
mov
das
sub
sub
sbb
imul
test
adc
jne
jnp
out
pop
mov
jns
pop
or
lcall
pop
pop
push
mov
adc
mov
cmpl
or
adcb
xor
aaa
ficomps
xor
push
jmp
rolb
es
minps
inc
in
gs
cmp
mov
inc
adc
jno
push
dec
mov
pop
fwait
xchg
jne
jns
jbe
jbe
add
mov
fistps
cmp
push
sub
push
jmp
nop
adc
setg
lds
add
fldt
enter
xor
dec
sahf
ss
movsb
nop
add
mov
mov
and
dec
inc
cmpsl
jns
call
movsb
movsl
lods
arpl
aad
repz
dec
shll
cmpsb
bound
push
push
add
push
pop
mov
shll
ljmp
and
push
push
jecxz
mov
fisubrs
mov
push
xor
ljmp
lret
push
insl
adc
add
pop
dec
sbb
cmc
mov
outsb
sbb
adc
pusha
pusha
and
sub
adc
in
xchg
inc
js
mov
icebp
mov
xlat
cmpsl
in
mov
arpl
xchg
lds
add
inc
popa
sub
xor
cmpl
out
repnz
ret
dec
and
pop
push
test
js
jge
jge
imul
cwtl
sub
cmpsl
add
insl
cwtl
jnp
xchg
ret
mov
mov
bound
inc
stos
mov
mov
aam
and
test
in
dec
mov
lods
repnz
std
jp
push
dec
mov
mov
les
mov
or
lods
imul
adc
lds
cwtl
dec
enter
stos
inc
ds
jno
sahf
adc
ds
push
mov
inc
mulb
jo
dec
lahf
dec
insl
sub
js,pn
lds
ret
nop
mov
lret
jnp
inc
or
xchg
rcl
in
out
loope
push
or
je
arpl
stos
insl
loopne
xchg
jns
outsl
mov
popf
jne
lret
pop
shr
and
lds
inc
sarb
fs
mov
push
ret
jecxz
dec
sub
cmp
mov
lret
outsb
push
xor
fiaddl
jp
popa
or
add
mov
ficompl
cmpsb
jecxz
pop
inc
mov
push
stos
mov
loopne
cli
push
pop
neg
addr16
push
sbb
call
vpmacsdql
lahf
xchg
movl
dec
jmp
imul
or
ja
mov
sub
inc
fiadds
mov
inc
push
mov
fucomi
movsl
std
adcl
mov
jne
out
out
sub
sub
daa
rcl
out
das
xchg
mov
adc
inc
lods
insb
jb
jp
imul
jb
cmpsl
aas
xor
xchg
pop
loopne
push
add
xor
jmp
fs
add
lods
mul
or
sti
cmpl
jb
enter
enter
adc
clc
repz
sbb
enter
jg
mov
das
xchg
xor
test
push
in
into
adc
jmp
or
loop
fcoms
in
mov
adc
mov
mov
push
int
pusha
stc
into
lods
sbb
dec
pushf
aaa
in
cltd
rcll
xchg
xchg
stos
mov
leave
xor
xchg
mov
les
mov
shrb
fadd
dec
jl
mov
jmp
hlt
andb
popf
jae
movsb
out
jl
lret
cmp
sbbl
mov
cmp
sub
call
xchg
xlat
ja
and
xchg
pop
testl
push
pushl
sahf
adc
mov
ja
and
orl
jmp
test
mov
lret
pop
imul
inc
ret
addr16
cmp
xchg
mov
fwait
popa
jg
test
fisttpl
ljmp
cmp
adc
or
mov
sahf
push
nop
sub
stc
jp
icebp
scas
std
js
inc
push
js
cmc
popf
inc
out
add
pushf
push
aas
repz
rcrb
mov
notb
cwtl
mov
sub
loope
es
lea
mov
jge
xchg
or
mov
sahf
mov
ja
cmpsb
pop
push
out
and
sbb
shr
cmc
in
xor
inc
in
addr16
cli
mov
and
ret
sub
arpl
or
mov
or
adc
rcll
or
and
call
mov
inc
pop
push
addr16
or
ret
xchg
imul
je
arpl
leave
jle
es
xchg
mov
dec
loop
roll
cmp
sub
in
mov
cmp
insb
inc
inc
hlt
mov
xchg
xchg
inc
loopne
mov
sub
int3
xchg
mov
jb
mov
inc
lds
cmp
sbb
adc
sti
or
dec
in
lret
jp
inc
enter
mov
push
orb
inc
pop
and
mov
int3
movsl
lea
das
inc
jp
lret
stos
inc
or
cmp
pop
test
pop
dec
jb
pusha
out
imul
fcompl
ds
sub
les
leave
mov
clc
mov
jb
icebp
ret
sbb
je
cmpsb
scas
sbb
enter
ljmp
aas
cmp
inc
mov
insl
loope
ss
push
cs
push
into
loope
lahf
pop
in
inc
adc
roll
dec
pop
into
jnp
cmp
out
pop
lds
int
shrb
inc
push
js
push
jbe
ret
pop
xor
outsl
and
xchg
int
mov
lahf
in
adc
jns
sbb
out
inc
test
nop
and
mov
adc
sti
fwait
mov
fsubr
inc
xor
and
fildl
fcoml
sbbl
adc
cmpsb
mov
jp
lock
lret
nop
pushf
mov
push
stc
sti
cld
fstl
ss
lods
lcall
test
stos
fsubrl
pop
xchg
and
cmpl
ret
push
iret
adc
sbb
inc
rcrb
loopne
push
lea
lods
sbb
or
repz
aaa
and
adc
cmpsb
and
inc
sub
and
and
pop
adc
or
or
fstps
test
mov
xlat
add
loope
dec
idivb
rorb
int3
arpl
into
das
fs
and
mov
pop
or
movsl
ds
movb
and
dec
aam
cmpsb
xor
push
daa
push
mov
lret
push
outsl
aad
sbb
and
cwtl
mov
inc
mov
pop
or
add
adc
cmp
scas
jmp
add
mov
es
int
add
push
mov
xchg
dec
cmp
call
mov
rolb
jl
test
outsb
xchg
and
test
push
jns
push
sbbl
ret
popf
jo
and
xor
push
xchg
add
xor
mov
jo
mov
out
shl
mov
ds
ret
push
and
mov
ljmp
sub
mov
xor
and
lds
arpl
or
fidivl
adc
mov
int3
enter
and
add
inc
lock
inc
xchg
inc
scas
mov
mov
div
das
push
data16
lret
mov
leave
sub
andl
add
pop
clc
imul
push
sub
stos
jae
cs
sarb
or
rcl
xchg
cld
sbb
idivl
adc
push
ljmp
out
in
and
mov
sbb
aaa
orb
xchg
lock
jne
out
mov
loope
mov
cmp
arpl
out
aas
pusha
cmc
mov
stc
cmc
fsubs
clc
enter
add
push
test
dec
clc
lea
lcall
adc
in
pop
sub
sub
dec
inc
out
shl
jmp
fbstp
xor
pushf
jl
xor
lods
cmp
jle
sbb
push
stos
dec
in
mov
add
pop
fstpt
mov
push
pop
mov
adc
test
cmp
jae
std
shll
add
pop
repz
cli
cwtl
loop
cmp
xlat
cmc
sbb
push
lock
jg
xchg
mov
inc
bound
mov
cld
mov
outsb
pop
jae
fstpl
mov
xor
sbb
adc
cld
pop
pop
or
mov
aad
inc
sbb
or
adc
inc
mov
addr16
mov
push
mov
movsb
dec
movsl
mov
pop
cmpsb
mov
repnz
lret
out
push
ror
aas
xchg
jmp
cld
dec
daa
cmpsl
aaa
jb
loope
xor
iret
xor
sbb
jnp
fwait
push
inc
xor
ljmp
mov
int
push
lret
ss
jbe
dec
cmp
cld
sbb
push
jns
jcxz
adc
mov
das
punpckhwd
push
outsb
add
cmp
clc
ljmp
or
mov
rcrb
sbbl
hlt
outsl
mov
imul
int
addr16
mov
mov
xchg
into
push
ss
ljmp
mov
shrb
scas
ret
cmpsl
fstl
nop
jo
mov
cmpsb
clc
clc
push
inc
das
mov
dec
mov
xor
push
dec
cmpl
std
arpl
in
pop
xchg
mov
mov
cmp
add
sarl
stc
mov
sbb
ljmp
lods
xchg
ret
dec
xor
jmp
adc
inc
jge
neg
adc
jae
mov
imul
cmpsb
xchg
push
iret
push
xchg
xchg
push
and
jge
in
adc
xchg
rol
idivl
add
pop
addr16
mov
test
dec
fadd
push
push
jo
push
inc
std
or
or
xor
jb
les
mov
dec
push
push
popa
mov
cs
dec
mov
or
adc
lea
mov
xchg
push
daa
pop
sub
add
cs
mov
sub
icebp
cmp
inc
mov
xor
push
pop
sub
jg
push
stos
rcrb
sub
fisubl
loopne
shlb
jnp
xlat
sub
or
mov
jnp
inc
jae
pop
inc
jge
adc
icebp
mov
add
and
ret
shlb
fs
insl
mov
fwait
add
mov
fnstenv
sbb
out
jb
add
mov
inc
cs
fistpll
mov
loop
mov
push
mov
mov
xchg
je
in
mov
xchg
sub
mov
cmp
mov
dec
jmp
and
xorb
hlt
push
sbb
cld
test
xor
pop
or
pop
in
mov
inc
pop
aas
jg
mov
fstpl
aaa
movsb
fldenv
ja
dec
jl
or
fmull
fwait
lcall
shl
movl
stos
lcall
cmp
jbe
adc
dec
xchg
shll
out
movsl
and
loopne
mov
inc
sbb
in
dec
lock
jae
mov
jns
sbb
sbbb
cmp
stos
dec
mov
jae
in
mov
or
insl
andb
mov
mov
pop
or
shrb
ret
inc
inc
push
and
out
mov
mov
cs
repz
cwtl
pop
das
jno
cmp
cmp
pushf
push
xorb
sub
inc
jge
js
mov
dec
insb
push
movsb
fimuls
sbb
cs
push
int3
xlat
mov
add
movsb
push
sti
in
pushf
adc
je
ret
lds
cmp
and
lret
cltd
push
jg
push
int3
inc
push
enter
adc
movsl
inc
fs
or
ja
jp
adc
sub
adc
mov
loope
fnstsw
jo
imul
cli
push
and
cmp
sub
jp
icebp
ret
xchg
test
hlt
or
xchg
int3
inc
xchg
cltd
pop
repz
cmpsl
add
pop
ds
dec
clc
mov
add
push
and
dec
cmp
adc
xor
repz
cmp
xchg
adc
mov
push
add
or
sbb
aas
out
sbb
inc
mov
mov
inc
lods
jl
test
sbb
mov
mov
xchg
bound
and
sub
loope
daa
pusha
dec
pop
ljmp
jns
fisubs
mov
aad
jne
cltd
cmpsb
inc
movsl
adc
xor
call
mov
rcr
or
push
cs
pop
arpl
cltd
cmpsl
repnz
pop
leave
mov
pop
call
outsl
sub
scas
jb
xchg
cmp
xor
testb
outsl
xchg
push
repnz
negl
cli
mov
inc
test
aas
jg
xor
jmp
cwtl
adc
rorb
mov
sbb
int3
adc
in
gs
sarl
stos
and
loop
xchg
rcll
fdivrs
dec
xor
pop
idivb
jo
mov
or
cmp
filds
sbb
adc
xlat
in
jns
cmpsb
enter
lahf
pop
stc
sbb
ret
out
xor
jg
pop
sahf
mov
pop
jae
inc
sbb
cmpl
cs
adc
push
add
and
pusha
insl
cs
dec
stos
lcall
cld
hlt
aam
in
fdivs
or
test
xchg
mov
xchg
inc
stos
shl
insl
cmpl
jmp
mov
jp
lods
push
xchg
sbb
and
mov
xchg
push
scas
dec
in
jmp
out
nop
and
adc
xlat
dec
dec
ljmp
das
xchg
fadd
loope
out
cwtl
add
sbb
cwtl
loop
push
int
add
adc
std
aaa
imul
aas
push
jmp
inc
imul
inc
movsb
and
rolb
aad
int3
cmp
test
sti
arpl
mov
sub
add
sub
inc
cld
cmpsl
xchg
sahf
repnz
pushf
cmp
and
into
mov
mov
pop
imul
mov
pop
mov
hlt
fs
fcompl
push
pushf
in
fimuls
dec
insb
cmp
fistpll
rcrl
push
sbb
aaa
add
jp
xor
dec
int
or
cltd
fwait
mov
adcb
xchg
outsl
or
mov
mov
leave
mov
xchg
jecxz
pop
jbe
pop
hlt
incb
pushf
fisubs
out
pop
push
out
bound
cmc
xor
fwait
rorl
push
jmp
ss
mov
pop
mov
mov
adc
inc
add
aam
mov
mov
push
inc
pop
lahf
sti
and
mov
in
leave
add
call
mov
or
in
in
test
fsts
adc
inc
andb
xchg
xchg
popf
push
xor
data16
shll
mov
repnz
sbb
sahf
ror
or
push
scas
insl
push
fisttpll
out
orl
pop
dec
cld
outsl
incb
push
popa
cmpl
inc
pop
repz
jecxz
xchg
lds
or
fldl2e
packuswb
cmp
pop
pop
xor
jecxz
mov
adc
or
push
leave
ret
stos
mov
std
addr16
or
add
je
mov
and
mov
push
outsb
addl
fbstp
pop
stos
ss
ljmp
or
and
mov
gs
inc
adc
jge
es
div
mov
dec
dec
loop
xor
pop
fucomi
sbb
xchg
lret
cmpsb
adc
mov
popa
insb
pop
scas
cmp
mov
push
leave
aaa
bound
push
ja
stos
adc
addr16
cmp
daa
mov
sub
inc
stos
and
fisttpl
les
pop
jae
insb
lock
cmpsb
out
pop
outsb
jg
out
jg
cli
jp
mov
mov
jns
sbb
mov
ljmp
mov
fsts
movsb
push
es
stos
xchg
mov
push
mov
or
push
adc
lock
pop
add
test
outsb
mov
mov
aas
sub
nop
xchg
pop
inc
pop
filds
out
push
stc
and
dec
push
lret
das
out
mov
jge
jge
cmp
stos
jecxz
aam
out
pusha
repz
fstp
ret
popa
xchg
xor
adcl
test
sub
mov
sub
and
les
mov
subb
dec
cld
or
fstpt
and
js
insl
push
cmp
jne
cltd
pop
fisubrs
push
pop
inc
daa
enter
add
pop
mov
dec
ja
out
scas
sahf
xchg
pop
add
xor
push
aas
and
fisubl
xchg
fistps
push
xor
inc
lock
rclb
fildl
sbb
jecxz
clc
andl
add
shlb
fistps
inc
daa
xor
lea
adc
aad
xchg
jno
cmc
mov
lcall
push
aam
cmp
mov
and
adc
mov
pop
imul
jmp
pop
in
cmpsb
mov
mov
out
adc
stos
aam
lods
movsb
sub
and
rcrl
hlt
adc
or
sbb
cwtl
cli
addb
fucomp
aas
insl
pop
dec
fisttpll
in
push
fcmovbe
mov
pop
or
inc
andb
cs
sbb
int
rorb
mov
inc
cmp
xor
pop
pop
push
adc
mov
cltd
shrb
lahf
mov
cli
cmp
sbb
aaa
sbb
jmp
das
sar
and
les
xor
out
addr16
das
je
pop
testb
out
mov
cmc
or
lock
pop
xchg
loope
dec
scas
cmp
and
mov
dec
or
daa
out
lock
into
sub
mov
cmpsb
idivl
add
cmp
pop
mov
inc
cmp
loopne
mov
into
pushw
scas
adc
or
jae
ss
cmp
and
arpl
das
jp
jmp
adc
popw
lcall
sti
lods
loope
in
pusha
pop
add
inc
insl
jns
xchg
mov
pushf
rcl
nop
xor
std
ret
imul
xchg
pop
jae
stos
out
test
xchg
sbb
pop
movsl
lea
xchg
inc
and
xor
xor
lods
jg
leave
add
fs
movsb
xor
mov
fwait
jmp
jo
je
xchg
lcall
push
and
or
sub
jmp
shlb
add
aad
pop
sbb
and
jno
pop
shrb
jmp
imul
inc
aam
ret
mov
mov
add
xchg
adc
call
nop
ds
push
sbb
mov
sbb
fisttpll
sub
pushl
test
enter
inc
popf
push
jb
bound
lock
xor
xchg
lock
sbb
push
cmp
pop
clc
and
xchg
add
notl
xor
or
fisubrs
arpl
shrl
shrl
ret
loopne
xchg
pavgw
enter
inc
xchg
mov
jae
loopne
mov
in
push
inc
popf
stc
pop
jns
movsb
xchg
mov
lods
divl
jg
xor
lods
test
jnp
adc
add
pop
in
out
push
mov
mov
and
lahf
mov
sub
enter
dec
mov
push
lret
lock
jnp
lods
fcomi
and
jae
mov
adc
and
xchg
xor
pop
fidivl
outsl
mov
aad
rcrl
push
cld
lods
dec
pop
xchg
pop
sbb
test
test
inc
aaa
cmp
cmpsl
xchg
and
add
jae
push
std
or
data16
sub
mov
push
ret
inc
and
jp
fcoml
add
std
pop
dec
pushf
dec
cs
insb
loop
clc
xchg
push
out
ret
jne
xlat
inc
aas
jo
dec
mov
adc
scas
inc
xor
jae
test
inc
cmp
je
mov
sbb
out
out
fistpl
push
les
test
mov
dec
and
cmp
pop
jp
xchg
jecxz
jno
cmp
cs
mov
add
rcrl
pop
cmpsb
into
cld
fcoms
or
repnz
mov
pop
je
repnz
push
outsb
jmp
push
mov
cmpsl
mov
sbb
stos
jecxz
imul
fmuls
mov
in
cmp
adc
pop
rorb
loope
fadds
push
sub
das
pop
cmc
mov
sub
inc
jecxz
push
mov
call
imul
gs
dec
mov
jecxz
aad
fisubrl
dec
add
insb
sbb
dec
mov
pop
jmp
mov
repz
fwait
outsb
cs
inc
int3
lcall
idivl
and
lret
mov
loope
jp
ljmp
iret
mov
sbb
fnstcw
xor
lock
test
dec
xchg
or
mov
and
push
jns
adc
shll
push
inc
ret
cs
and
frstor
ljmp
pop
pop
jne
rcrl
popa
add
xchg
aam
jle
jne
insl
xchg
mov
cwtl
cmp
rorl
sub
ffree
jno
lret
xor
movsl
xor
and
cmp
ljmp
and
mov
cmp
mov
cmp
sub
lods
jmp
popf
andl
fsubp
test
stc
mov
test
cmp
push
xchg
jbe
notl
adc
mov
cli
fdivrs
ljmp
pop
pop
xor
xor
dec
call
les
ret
scas
dec
arpl
pop
inc
xchg
xor
lods
fnstsw
lret
stos
or
xor
mov
int
cld
jae
lcall
cli
mov
push
xlat
jbe
loop
xor
mov
fisttpl
out
mov
loopne
sub
or
pop
movsl
mov
orl
lods
push
cmp
cld
add
cmpsl
pop
pop
out
mov
test
test
xor
mov
loopne
fistl
ja
lcall
push
xorb
imul
mov
fisttps
movsb
adcl
leave
cmpsb
notl
jo
dec
clc
sbb
adc
xchg
ret
push
sub
popa
aas
aam
pusha
nop
mov
fwait
xchg
clc
push
in
je
pop
mov
push
xchg
push
add
loop
sub
add
pop
lahf
movsl
into
mov
jnp
jle
push
jno
inc
xor
pop
inc
sbb
or
cmp
push
imul
loop
ds
cmp
mov
or
mov
fisubl
mov
js
sub
and
dec
cltd
cmp
clc
xor
cwtl
incb
mov
mov
test
xchg
repz
lds
push
adc
mov
cltd
leave
push
int
push
iret
sub
xchg
pop
jp
xchg
sub
sub
call
lods
xor
dec
dec
stc
rdmsr
mov
mov
sub
lret
jo
jecxz
mov
sub
icebp
sub
inc
push
xchg
cmpsb
jp
and
inc
mov
adc
or
aaa
lds
lods
je
out
dec
xorl
adc
mov
xor
pop
mov
jp
xor
repnz
dec
in
ja
pop
shrb
jl
ficoml
shll
cmp
ret
fnsave
push
add
out
pop
and
leave
jnp
outsl
adc
stos
pushf
popa
push
ffreep
test
mov
mov
mov
add
fsubl
inc
lods
jecxz
cmp
in
aam
pop
xchg
lret
das
pop
lcall
fidivrs
jno
sarl
test
lods
mov
mov
push
fidivs
int3
mov
mulb
sbb
das
cmp
lods
in
test
xchg
aas
mov
xchg
imul
mov
decb
mov
adc
daa
std
ljmp
pop
or
enter
inc
rep
jmp
mov
jae,pt
inc
xor
icebp
ret
hlt
iret
jmp
ljmp
stos
dec
jbe
mov
mov
pop
push
or
jg
popf
loop
mov
cmp
dec
add
jne
lods
loope
inc
dec
jo
mov
xchg
push
xor
lahf
roll
mov
jo
cmp
clc
pmulhuw
imulb
sub
xchg
jle
adc
js
setbe
cmp
xchg
xor
bound
xchg
push
adc
jnp
or
or
mov
and
dec
aad
jmp
int3
aam
mov
pop
rcrl
xor
cmp
push
and
out
push
out
mov
cwtl
outsb
add
shll
popa
push
leave
in
ror
imul
out
aad
push
pop
xor
sbb
fsts
mov
je
jnp
inc
imul
or
mov
cld
dec
into
frstor
int
adc
sub
test
lea
sbb
fyl2xp1
xchg
mov
mov
add
push
rcrb
mov
pop
xchg
sbb
out
arpl
sahf
xchg
adc
gs
movsb
sub
mov
or
mov
sub
shlb
xor
push
lods
pop
cmp
sub
mov
pusha
add
jae
xlat
rol
fidivs
pop
in
enter
movsb
js
fnsave
les
shl
test
dec
clc
cmpsl
addr16
clc
into
stos
imul
xchg
ja
out
jmp
push
ds
scas
outsl
dec
loope
push
daa
lahf
sti
ja
arpl
stc
insl
lcall
cmp
adc
sub
sbb
pop
jne
out
jle
jns
fstps
mov
lock
adc
ds
ljmp
xchg
jno
sub
inc
xchg
fistps
mov
sbbl
insl
insl
inc
inc
adc
repnz
pop
les
std
xchg
lods
dec
or
aas
cltd
pop
pushf
cmp
adc
pop
movsb
int
mov
mov
pop
push
add
sete
lcall
and
and
in
pop
mov
push
push
call
mov
in
std
aas
js
lret
bound
cmp
aaa
jecxz
dec
add
dec
psubsb
push
clc
jp
iret
divb
aad
pop
pop
fstpl
shr
loop
shll
pop
and
jb
enter
nop
fldcw
dec
mov
mov
cli
cs
loopne
lcall
xor
and
test
mov
sub
fcom
sub
mov
repnz
insl
xchg
jecxz
mov
or
popf
add
mov
jb
nop
ja
je
xchg
sub
hlt
cmp
add
aas
jb
jmp
gs
scas
add
int
sbb
sahf
fs
xchg
in
xchg
inc
push
popa
cwtl
popa
das
and
ljmp
sbb
hlt
das
ds
jne
mov
loope
xchg
push
inc
scas
fadds
xchg
lret
and
outsl
xor
stos
outsb
scas
and
adc
pop
mov
scas
add
sbb
in
add
arpl
leave
lods
std
movsl
cmpsb
pop
xchg
data16
sub
loope
xor
or
mov
andl
mov
lods
adc
lea
cmpsl
stos
push
or
xor
dec
push
mov
das
in
jns
and
sbb
cli
mov
add
inc
push
pop
push
movsl
lods
int
jg
pop
push
xor
mov
fsubl
or
lds
repnz
sbb
fdivrl
and
sbb
mov
fsubrp
add
cmp
or
movsb
xchg
dec
in
push
cld
addr16
aad
or
push
xchg
pop
rcrb
push
inc
push
iret
lods
dec
or
add
out
rcll
fs
stc
jno
dec
xor
and
xor
sbb
das
nop
add
sbb
call
scas
sub
jecxz
and
cmp
lods
out
pushf
push
fsubr
mov
mov
inc
test
out
inc
mov
and
sti
out
test
adc
loopne
jno
lret
sbb
adc
nop
or
sbb
mov
push
imul
jg
pop
mov
lock
and
mov
cwtl
sbb
mov
lods
decl
mov
and
inc
fiadds
sub
loop
aas
das
cmpsl
sarb
rclb
fs
sbbb
aam
in
adc
cmp
jo
sbb
jno
mov
jo
cmc
out
and
or
cmp
popa
or
pop
es
lret
xchg
inc
mov
cmp
fbstp
les
fs
jnp
jae
jno
out
les
sbb
mov
cmp
xchg
push
or
xor
mov
fcmovne
scas
jecxz
in
fidivrl
out
adc
imul
mov
in
mov
mov
push
sbb
push
or
scas
dec
push
out
in
adc
dec
lock
and
int
push
mov
stc
or
jle
jae
dec
pop
fldl
mov
lock
adc
and
cmc
mov
mov
mov
inc
lock
mov
mov
adc
lcall
aas
clc
add
sti
fistpl
xchg
arpl
sub
out
lods
dec
sahf
lea
iret
icebp
or
jg
mov
filds
xchg
xor
pop
sub
in
adc
mov
pop
lods
roll
push
push
sbb
andb
pop
inc
jbe
outsb
decl
pop
std
sbb
out
lods
iret
lcall
call
xchg
cmc
xor
adc
mov
mov
scas
add
out
pop
inc
push
mov
mov
je
stc
bound
mov
and
out
loope
fstpt
outsb
push
gs
sbb
or
in
push
rcll
mov
mull
in
lret
lcall
fcomps
test
xor
and
fxch
lods
cli
je
shlb
stos
xor
jnp
inc
ret
inc
sarl
dec
test
sub
mov
rol
nop
cld
mov
inc
in
adc
lcall
movsl
dec
call
xlat
dec
adcb
in
test
adc
xor
movsb
pop
aam
sub
add
lcall
in
push
add
jbe
and
mov
cld
and
push
dec
roll
push
repz
lea
shlb
cld
pop
ja
push
cli
test
jmp
leave
adc
data16
mov
push
dec
insl
mov
jne
sbb
sarb
or
idivb
pop
jecxz
addl
lcall
push
cmp
dec
push
pushf
mov
jnp
xchg
fdivrl
sub
loopne
mov
shll
cld
jmp
bound
mov
std
mov
bound
jecxz
es
loopne
lods
out
and
fucompp
mov
fwait
les
sbb
push
xlat
in
fcmovnu
sbb
or
sbb
ja
mov
add
lcall
and
mov
inc
mov
push
fwait
test
jl
mov
inc
xor
andb
jp
sub
and
pop
sbb
in
xor
mov
ds
xchg
loope
repz
dec
loop
pop
sbb
xorb
stc
inc
call
lret
ljmp
jno
stos
adc
test
mov
dec
jno
cmp
jo
mov
mov
int3
mov
out
lods
fisubs
xchg
out
dec
adc
or
data16
js
jmp
rclb
sub
hlt
pop
les
clc
cmc
push
into
xchg
xchg
push
and
aam
test
lcall
mov
dec
gs
cmp
or
inc
dec
jl
sbb
jle
rorl
xchg
pop
outsl
mov
or
mov
test
sahf
out
into
jl
sbb
cwtl
lock
loop
rcrb
into
cmp
sbb
sub
imul
fiaddl
mov
clc
in
stos
sbb
pop
popa
lods
or
push
inc
pop
jle
sbb
lds
clc
jl
insb
push
or
add
movsl
test
push
call
xchg
ret
mov
int
mov
imul
adc
jb
and
adc
arpl
xor
xor
mov
mov
jne
jp
mov
dec
mov
cmc
adc
imul
jge
js
jp
lods
xchg
call
mov
adc
xchg
shll
and
push
in
popf
push
and
into
subl
xchg
icebp
jmp
std
dec
dec
jmp
out
rcll
nop
sbb
push
or
adc
shl
pop
add
inc
pop
pop
fwait
and
or
jg
xchg
mov
cmpsb
xchg
add
stos
in
or
xchg
lods
bound
dec
into
mov
movsb
add
cli
or
xchg
cs
xor
push
pop
jmp
ss
es
mov
js
ret
cmp
fmuls
repnz
jno
push
outsl
jbe
adc
lods
es
xor
pop
mov
jnp
pop
pop
mov
das
mov
ja
xor
cmp
testl
pop
push
or
cmpsb
nop
ret
mov
mov
mov
push
and
arpl
std
cwtl
pop
daa
imul
cwtl
jo
scas
stos
push
call
inc
in
pop
subb
lcall
push
inc
out
jne
ret
adc
pop
insl
dec
xlat
scas
pop
pop
push
in
mov
inc
mov
cld
data16
jns
xchg
push
stc
pop
lret
mov
mov
ja
out
nop
xchg
pop
xchg
dec
cmp
pop
in
sub
mov
adc
mov
daa
xor
inc
pop
fwait
mov
aam
jmp
add
mov
pop
dec
mov
cmp
jb
frstor
dec
push
ja
push
adcb
mov
xor
test
add
rcll
add
pop
mov
xchg
ret
pop
pushl
mov
push
lods
push
loope
push
inc
push
mov
and
or
dec
icebp
pop
add
ljmp
jecxz
fwait
mov
sub
test
inc
loop
xchg
and
das
aas
int
loopne
movsl
push
xchg
ret
int
or
dec
dec
and
imul
or
fchs
inc
xchg
mov
repnz
sbb
int
mov
jae
adcl
cltd
outsl
add
push
or
sahf
mov
sbb
dec
jecxz
xchg
sbb
dec
mov
outsb
cs
pop
mov
jg
xchg
popf
mov
add
sub
mov
lods
dec
dec
sub
or
gs
mov
jne
adc
out
pop
or
frstor
repnz
repz
dec
ljmp
adc
pop
or
inc
dec
sbbb
lods
mov
push
sub
enter
pop
mov
dec
cmc
stos
into
sbb
ds
aas
jae
out
scas
add
fwait
add
ss
fs
push
xchg
ret
xchg
sbb
push
sbb
mov
or
icebp
hlt
ficoml
jge
sbb
cld
imul
inc
loopne
xchg
xor
sar
jl
jno
es
loop
sub
aam
mov
ja
inc
lods
pop
dec
adc
pop
cmc
pushf
popa
dec
adc
rolb
ror
or
jb
jnp
lds
roll
xor
inc
nop
or
add
icebp
shl
xor
or
xchg
movsb
fnstcw
push
jb
gs
jle
push
insb
rcr
xchg
test
mov
and
std
cld
ss
nop
hlt
cvttps2pi
mov
mov
mov
out
and
test
into
jnp
lret
dec
ss
sar
xchg
push
or
sti
dec
lods
xlat
mov
cli
cmp
test
idivb
test
lds
repz
jno
pop
fbld
mov
and
je
scas
mov
mov
stos
cmp
sub
movsl
je
sub
cli
xchg
add
xchg
call
fistpll
cmp
xchg
cmc
and
mov
imul
mov
pop
sbb
repz
fsubrl
jns
xor
jle
mov
mov
sub
mov
and
pop
sbbb
popa
mov
addr16
xchg
and
pushf
scas
call
lods
int3
push
and
out
mov
popa
in
pop
stc
aad
push
inc
pop
inc
scas
cmp
add
adc
xor
jg
push
ljmp
jecxz
push
adc
mov
sahf
out
arpl
jle
dec
push
enter
adc
or
mov
mov
mov
mulb
jb
fs
cmp
ds
sbb
add
xchg
mov
sbb
mov
and
pop
mov
jmp
cmp
pop
adc
movsb
mov
mov
adc
enter
outsb
ljmp
nop
and
sarb
sbb
cmpl
jecxz
sbb
in
imul
pop
push
mov
push
mov
daa
fstpl
xchg
stos
test
popf
scas
pop
js
sub
inc
add
scas
sarb
push
std
inc
jge
add
outsb
mov
aaa
fdivs
fiaddl
ret
push
divl
pushf
inc
add
gs
mov
jno
sbb
mov
lret
test
push
fsubs
or
mov
dec
pop
pop
jl
clc
imul
cmp
cli
int3
xchg
adc
stc
push
std
mov
data16
mov
dec
insl
push
negl
cmp
in
xchg
imul
lods
push
adc
in
mov
pop
addr16
adc
js
sarl
sub
jg
es
add
test
daa
fyl2x
cmp
icebp
fstps
fisttps
inc
push
loopne
bound
sub
sbb
xor
jns
addl
js
lcall
aad
test
ss
xchg
aad
sbb
lods
mov
aam
mov
scas
and
push
jnp
pop
insb
cmpsl
push
in
xchg
jb
or
push
sbb
in
pop
adc
jecxz
cld
sahf
add
sub
push
xchg
in
xchg
rolb
sarb
xchg
mov
loopne
into
imul
add
dec
enter
sbb
sbb
xor
jae
jmp
xchg
and
pop
ds
imul
scas
cwtl
mov
call
jb
lret
jnp
xchg
aaa
add
cld
sbb
test
loope
jbe
mov
pop
leave
jge
js
pop
and
loope
xchg
mov
and
sub
lahf
ds
mov
jle
repz
push
adc
stos
push
stos
das
shlb
insl
scas
movsl
shll
mov
mov
xchg
fsubrp
pop
sbb
rorb
or
or
mov
fistpl
sub
cmpsl
mov
xchg
test
add
rcr
out
stc
sarl
lock
adc
inc
add
int3
lods
mov
test
std
or
shrl
lahf
int3
xchg
inc
daa
pushf
daa
test
push
mov
mov
jne
leave
add
cmp
sub
cmp
outsl
push
mov
idivl
xor
cmpsl
mov
dec
mov
mov
subb
test
push
notb
jo
imul
inc
cmc
adc
scas
mov
push
sub
cwtl
es
lea
add
test
cmp
in
addr16
cmp
cmp
or
cli
xchg
das
fdivrs
dec
fcomi
movsb
ja
shlb
mov
xor
fcomps
lds
pop
xor
mov
fwait
rolb
repnz
jmp
gs
jo
int
cltd
mov
arpl
out
lods
mov
push
bound
scas
fcmove
pop
mov
mov
xchg
rclb
add
add
rcr
mov
mov
mov
les
or
insl
pop
je
decb
mov
scas
mov
sbb
stos
cmp
jno
cmp
enter
inc
pop
jge
mov
shr
lods
shr
pop
outsl
inc
outsl
movsl
mov
mov
rcrl
imul
mov
cwtl
mov
in
adc
mov
js
push
les
sub
insb
js
movsb
dec
jp
ret
lds
ret
mov
cmpsb
add
aam
push
adc
sub
leave
repz
mov
std
fadd
enter
in
inc
outsb
insl
mov
lods
movsb
cli
das
mov
pop
push
adc
inc
mov
inc
xchg
in
push
fs
ss
clc
repz
insb
repz
popf
cmp
scas
mov
popa
dec
add
xlat
gs
insl
jle
push
xor
or
mov
jle
addr16
shrb
add
mov
adc
out
sub
dec
daa
subb
repz
mov
jae
jmp
jno
iret
cmc
arpl
inc
out
add
sub
cli
test
jl
mov
mov
int3
adc
or
add
into
adc
fidivl
fisubrs
adc
cmpsb
in
adc
aaa
pinsrw
jg
lock
call
xchg
dec
jge
sub
xor
adc
sbb
ds
cmp
cld
insl
sub
ds
mov
push
mov
js
std
popa
dec
jecxz
sub
addr16
stos
sahf
and
imul
mov
xor
sub
popa
jne
repz
insb
pop
addl
mov
inc
popf
sti
xor
cltd
pop
or
and
jge
imulb
aaa
lahf
dec
test
pop
lds
iret
lods
sbb
sub
push
js
push
inc
mov
xchg
xor
out
outsb
and
inc
dec
jne
cmp
cmc
jae
add
ss
add
cmp
imul
sbb
cli
jno
stos
movsb
or
popf
int3
sub
push
and
push
pop
push
mov
fildl
pop
jns
repz
inc
xchg
out
call
lds
and
sbb
in
aam
adc
pop
pop
sbb
ds
and
adc
jnp
cmc
jmp
push
add
mov
les
loop
jbe
mov
lahf
je
mov
dec
subb
mov
bswap
add
pop
daa
mov
mov
pop
jmp
pop
jbe
decl
insb
cmp
xchg
std
fdivrl
mov
clc
mov
push
push
int
inc
xor
jnp
stos
inc
into
and
lea
and
fidivs
inc
jo
xlat
mov
xor
repnz
dec
pop
mov
push
sbb
loop
sbb
pop
out
ret
ds
xchg
jno
cmp
push
outsb
xchg
jne
push
cmpsl
ret
sub
pushf
and
mov
cmp
cmp
daa
dec
jnp
arpl
js
inc
push
xor
dec
or
adc
or
sbb
fstpt
add
lods
aam
test
cmp
pop
push
inc
shll
cli
push
pop
sub
inc
lret
in
mov
pop
adc
popa
fmull
add
iret
or
shlb
test
stos
push
ret
jmp
xor
push
loope
outsl
mov
mov
mov
loop
cmovp
scas
cmp
or
push
in
xor
adc
adc
pushf
or
mov
ljmp
test
xchg
pop
xor
cltd
iret
cwtl
cmpl
push
lcall
ror
hlt
add
inc
adc
xchg
xor
scas
addl
repnz
shlb
and
push
push
jnp
lods
and
testb
sarb
push
dec
add
daa
mov
fwait
pop
push
push
jno
ja
lock
in
ja
mov
js
loope
mov
adc
sbbb
je
cld
aad
daa
inc
ret
inc
shl
imul
pop
or
jp
out
repz
jo
mov
out
cwtl
push
pop
test
jg
jmp
lcall
dec
mov
fwait
movsl
cmp
inc
dec
mov
aad
xchg
mov
out
iret
cmp
test
fisttpl
arpl
popf
imul
loope
dec
sbb
and
xlat
test
and
xor
push
adc
je
cmpsl
sti
xchg
je
jge
push
mov
clc
mov
test
or
scas
sub
inc
inc
into
shrl
out
mov
fnstenv
ja
andl
popa
cmp
fsts
or
mov
rol
mov
xchg
cmpsb
repz
sub
jnp
jnp
adc
psadbw
sahf
sub
adc
orl
jns
cmpsl
mov
sub
xchg
inc
jmp
js
lock
push
ds
add
xor
ja
or
cwtl
and
sti
movsb
addr16
and
jmp
push
mov
enter
jne
aas
dec
lahf
in
lds
mov
mov
or
cmpl
push
stos
mov
pushw
aas
addr16
cwtl
nop
pop
insl
lahf
rcll
js
stc
sub
push
inc
into
xchg
ljmp
mov
dec
pop
cli
icebp
mov
fisttps
push
pop
pop
cmpsl
aas
sub
imulb
cs
aaa
sub
xor
into
dec
pop
inc
leave
dec
push
ret
mov
sub
jnp
lcall
dec
inc
add
sbb
scas
and
or
fsubrs
push
movsb
decb
cmp
sbbb
mov
outsb
push
into
inc
inc
mov
sub
sbb
je
cmp
push
aaa
lea
mov
add
cltd
dec
lahf
and
jns
pop
xor
into
aad
out
lds
bound
mov
jo
sub
leave
and
push
or
xchg
mov
shrb
das
xchg
stc
lods
fs
mov
cli
mov
cmpsl
fwait
cmp
xchg
into
mov
ret
fstp
lcall
sbb
loopne
popf
inc
jnp
and
push
pop
and
sahf
pop
mov
nop
jno
movsb
mov
stc
ja
loop
es
cmp
iret
fistps
or
inc
clc
xor
int
dec
and
scas
inc
mov
fildll
push
mov
cmp
arpl
fwait
adc
shl
je
push
aaa
inc
imul
jno
cmc
popa
and
mov
mov
popa
pop
je
mov
xor
xor
call
mov
mov
gs
jge
outsl
aad
mov
push
push
push
push
lcall
or
adc
xchg
out
shlb
pop
jl
sub
mov
rol
or
cld
push
mov
mov
cmp
ret
mov
add
xor
jge
cltd
repnz
div
pop
ss
hlt
jge
xchg
inc
inc
push
stos
test
inc
xlat
xchg
pop
loopne
cmc
mov
jno
adc
rorl
test
mov
mov
inc
cmp
insb
ja
add
jg
adc
dec
out
jmp
fisubrs
mov
hlt
adc
or
push
jle
cmp
in
adc
mov
int3
clc
lods
lds
scas
loop
push
and
mov
clc
icebp
mov
iret
mov
or
nop
inc
jno,pt
lret
jns
jnp
outsl
inc
jbe
cmpxchg
cmp
mov
fisubl
push
cmc
loop
inc
pop
lcall
cmp
cmpsl
not
negb
or
sub
sti
aas
or
pusha
add
in
jp
pop
divl
mov
pop
cs
mov
adc
popf
mov
das
ret
and
movsb
cmpsb
dec
and
int3
test
push
test
dec
mov
or
lods
dec
or
dec
loope
gs
mov
cltd
adc
sbb
push
jle
lahf
mov
sub
or
icebp
mov
dec
lahf
or
xor
subl
mov
hlt
shl
vaddpd
out
push
aas
mov
mov
and
adc
mov
addl
sbb
and
aas
jnp
or
stos
pop
xor
shrl
mov
push
jnp
jb
jecxz
bound
cmp
xor
xchg
nop
xchg
inc
xchg
cmp
jle
push
cmp
cmc
popf
pop
dec
xorl
pop
stc
or
addr16
fst
loopne
ljmp
add
inc
jle
sub
inc
fwait
inc
sbb
cmp
fsts
fnstcw
jae
loopew
jge
and
fwait
xchg
test
add
fdivrp
js
dec
aas
push
mov
shl
frstor
mov
lods
loope
jnp
xchg
pop
lods
in
sbb
test
enter
mov
movsb
and
outsl
sub
cmp
push
dec
cmp
mov
sub
into
lahf
pop
adc
iret
and
das
lea
sub
loop
and
ja
inc
jns
xchg
fcompl
mov
icebp
dec
je
dec
jo
inc
pop
sub
push
scas
mov
cmp
pop
jmp
dec
and
mov
mov
jo
test
fcomps
sbb
ljmp
pop
inc
pusha
fwait
fwait
add
aaa
mov
fnstsw
outsl
xchg
clc
sbb
push
cmc
subb
and
and
cmp
mov
ljmp
outsl
add
stos
push
rep
dec
sarb
adc
xor
xlat
push
jb
cmp
dec
icebp
jmp
insl
mov
aam
mov
icebp
arpl
sub
pop
or
add
outsb
pop
movsl
movsb
mov
popf
and
pop
pop
icebp
xor
fisttps
xor
pop
bound
mov
jge
ret
pop
insl
mov
sub
ret
fdivrl
push
and
sub
inc
and
jg
push
int3
xchg
ucomiss
add
jmp
push
xor
mov
xchg
sbb
ret
bound
leave
lock
jmp
push
insb
dec
xchg
add
dec
add
lahf
jns
pusha
pop
leave
pop
loopw
int
mov
mov
mov
xor
in
add
popl
cmc
test
pushf
ss
dec
xor
mov
mov
cmp
jno
loopne
aas
cmpsl
xchg
push
add
cmp
mov
jle
lahf
data16
and
cmpsl
inc
sbb
sbb
andb
pop
loope
mov
mov
jae
and
fistl
or
and
xchg
out
out
pushf
adc
jnp
cs
mov
jae
inc
pop
hlt
mov
push
adc
mov
movsb
xchg
jle
roll
into
inc
sarl
sub
js
in
in
rcl
lret
dec
or
pop
sahf
pop
inc
xchg
push
dec
sub
pop
add
and
insl
add
mov
lcall
dec
subb
adc
lods
jne
xchg
in
sub
cwtl
mov
pop
sbb
push
jnp
es
mov
in
xchg
aad
cld
ds
ss
adc
pop
fsubrl
or
xor
sub
lahf
mov
mov
pop
fldcw
pop
pop
je
test
int3
push
adc
cld
cwtl
sbb
xorl
int
popf
or
cmp
imul
mov
hlt
mov
mov
loope
mov
cs
push
lods
fcomps
mov
pop
clc
push
mov
dec
aam
and
jo
and
das
adc
fldt
pop
jne
mov
out
or
rol
sbb
nop
sub
mov
in
push
mov
mov
add
and
mov
fnstenv
pop
clc
mov
out
shlb
neg
jge
dec
and
jge
jns
mov
mov
in
sub
enter
fadds
stc
test
lret
cli
and
mov
and
imul
xor
mov
dec
insb
test
jge
enter
mov
mov
lret
sub
jmp
jle
sbb
out
mov
addr16
or
xor
mov
fcmove
jl
push
and
bound
bound
jne
lods
pop
daa
xor
jl
gs
in
cmpsb
xchg
add
pop
fwait
mov
sub
push
xlat
push
notb
xchg
test
pop
fisubrs
jns
sbb
lds
lds
aas
adcb
movsl
adc
cs
rcr
dec
test
fmull
mov
xlat
sbb
scas
sahf
cs
xor
lods
jecxz
and
mov
push
insl
aam
int
in
or
push
ficoml
repnz
outsb
inc
adc
jns
ja
imul
imul
dec
mov
fisttpl
fld
adc
ds
mov
sub
shrb
mov
mov
test
dec
mov
ss
lock
ss
test
push
addl
decl
ror
adc
and
xor
sbb
inc
jo
je
ds
sub
jb
mov
insl
call
adc
push
cmpsl
gs
xorl
in
mov
and
adc
rolb
std
test
adc
lcall
xor
lock
jbe
jge
mov
sbb
jno
jmp
int3
fisubl
mov
and
icebp
mov
test
pop
mov
mov
lret
and
jae
dec
ret
cmp
xor
add
mov
mov
lods
push
sub
bound
or
int
mov
xor
and
dec
sti
mov
je
or
dec
aas
sub
xor
xchg
mov
fisubrl
lret
sti
jb
pop
inc
mov
add
cmp
enter
leave
sbb
js
sbb
shrb
in
fmull
sbbl
mov
mov
jo
test
jle
aam
lock
inc
jl
mov
mull
mov
pop
loop
pop
or
in
inc
adc
adc
addr16
sub
dec
sarb
ficomps
into
and
adc
mov
loop
in
cmpsb
out
mov
mov
in
fldt
add
and
xchg
adcl
data16
mov
and
into
mov
roll
cmp
pop
pop
imul
cmpsb
rorl
dec
cld
inc
lods
leave
loope
pop
fisubrl
add
shlb
test
scas
jb
xchg
sub
in
adc
daa
lds
ds
dec
fsub
push
scas
fisttpll
in
fxtract
adc
pushf
aaa
cmp
adc
xor
push
stos
push
stc
cmp
shrl
lret
pop
mov
dec
adc
pop
enter
add
inc
jae
punpcklbw
cmp
jecxz
xchg
scas
test
inc
sbb
std
pop
sti
jne
jg
roll
pushf
test
push
mov
lods
pusha
cmpsb
mov
fs
push
cwtl
roll
xchg
loope
iret
mov
jle
sbbb
std
jecxz
jle
xchg
mov
hlt
loopne
xlat
pop
dec
sub
jmp
leave
int3
inc
cs
loop
jp
push
pop
jno
mov
sub
xchg
add
in
repz
scas
and
ja
call
jmp
fwait
mov
xchg
imull
and
xchg
test
clc
aam
dec
lock
pop
insb
sti
mov
pushl
jae
or
in
ret
pop
adc
or
cmp
adc
mov
lcall
mov
add
stos
xchg
xlat
jmp
cmp
xchg
sbb
movsl
sbb
cmp
cmp
vmovdqa
movsl
inc
cld
stos
mov
jg
xchg
push
call
and
mov
fs
mov
xchg
lcall
cmp
push
and
jecxz
leave
add
test
inc
in
or
sbb
paddsw
push
xchg
inc
repnz
xor
cmp
test
mov
rcll
ss
xchg
movb
addb
mov
shrb
fsubrs
mov
ret
mov
cmc
or
lret
inc
lcall
sbb
iret
iret
std
jp
xor
push
clc
and
pop
dec
xor
xor
push
fsts
and
lret
nop
ret
shlb
leave
aam
faddl
jl
inc
out
and
mov
mov
xchg
lock
jno
bound
test
test
test
xlat
cmpsb
cmp
sti
sub
or
push
sbb
int3
test
fldt
xchg
xchg
loopne
ret
add
idivb
clc
fwait
stc
pop
repz
out
ret
jl
or
mov
addr16
jecxz
cmp
push
mov
sub
fmul
jecxz
sbb
pop
mov
jge
or
lret
and
xchg
sbbl
add
add
cwtl
xor
scas
mov
movsl
ds
sbb
loope
mov
popa
repz
xor
arpl
rolb
xchg
jecxz
mov
push
loopne
push
jp
cmp
lret
dec
out
iret
fdiv
cmpsb
fdivl
jns
aaa
out
mov
adc
fstps
popa
aad
jb
push
fildll
mov
aad
fstpl
in
xor
lods
adc
jb
stos
push
rol
je
xor
stos
cmc
mov
sub
daa
fnstsw
xchg
sti
inc
std
mov
push
movsb
mov
icebp
mov
adcb
dec
add
mov
jnp
jae
ds
pushf
cmpb
enter
push
clc
jns
push
xchg
lcall
push
jecxz
or
js
aaa
mov
adc
jb
push
loope
in
in
arpl
fwait
jb
push
sti
sub
add
rcll
mov
sbb
cltd
rcl
push
scas
imul
adcb
ficompl
dec
negb
fimuls
adc
cmp
jne
push
stos
adcb
fadd
ret
pop
adcl
push
movsl
jg
pop
push
push
jmp
and
insl
xor
cli
in
push
mov
clc
adc
test
es
stos
mov
adc
mov
fmuls
dec
aam
psllw
push
scas
xor
lahf
out
sub
mov
cmp
leave
dec
lret
xchg
adcb
fistps
pop
ljmp
cld
fwait
xchg
mov
fwait
xor
aam
cs
test
add
xchg
mov
lea
outsl
je
lods
es
mov
sub
sub
call
rcrl
outsb
push
lret
adc
ret
mov
sbb
repnz
stc
push
mov
dec
imul
fildl
repz
push
mov
scas
cld
add
mov
rorb
xor
inc
ds
fwait
inc
jg
inc
adc
imull
add
jo
inc
sbb
xor
dec
adc
cld
mov
mov
iret
mov
mov
cmpl
in
mov
or
nop
or
jno
sbb
cmc
xchg
lahf
push
pop
mov
js
adc
mov
outsb
mov
push
push
mov
mov
arpl
fcoml
xor
comiss
jne
push
cmpsb
fwait
pop
imul
fildl
xor
cmpsb
xlat
lds
adc
xchg
xlat
inc
fdivs
jmp
jmp
nop
icebp
es
fimull
stos
and
pop
or
sub
adc
sub
cmp
push
jp
pop
sub
insb
jne
xchg
lahf
or
or
daa
ss
jecxz
push
pop
xbegin
out
and
push
dec
mov
sbb
dec
pop
sbb
enter
paddusb
push
imul
out
imul
popa
mov
jg
leave
xchg
mov
or
xchg
cmp
jg
outsb
icebp
xor
and
mov
call
jge
xchg
xchg
add
add
pop
dec
mov
adc
jl
xchg
imul
insl
mov
ljmp
test
mov
and
and
popa
out
adc
roll
jo
or
add
sbb
insl
inc
mov
inc
add
popa
sbb
and
xchg
loopew
mov
push
mov
cmp
fstpl
sub
sbb
push
adc
sbb
jmp
sub
shlb
sbb
jmp
rcl
dec
or
je
gs
lcall
sti
xor
and
fidivs
jo
jecxz
push
xchg
dec
fisubrs
les
push
repnz
add
cmpsl
mov
push
pop
les
je
bound
aam
fsubr
inc
mov
rcrl
test
loope
xchg
into
inc
inc
or
iret
in
out
cltd
jge
leave
push
andl
mull
imul
xchg
inc
imul
enter
xchg
test
ljmp
mov
push
pushf
jmp
lahf
push
scas
je
push
fbstp
insb
or
loope
push
push
repz
mov
pop
sub
repnz
test
sub
lea
test
add
stc
cli
and
fidivrl
push
sahf
inc
mov
pop
int
add
jl
mov
mov
loop
int
or
add
packsswb
xlat
iret
xchg
inc
inc
inc
loope
ja
mov
test
sbb
lret
ss
push
enter
add
adc
xchg
adc
mov
cmp
adc
jo
notb
and
imul
rolb
test
xchg
sub
data16
xor
inc
xor
xor
mov
fs
inc
wbinvd
int3
xchg
dec
roll
and
lret
mov
sub
xchg
mov
push
mov
pop
dec
xor
sub
jo
jb
out
stc
xor
or
les
xchg
dec
insl
xchg
add
push
je
lcall
rorb
mov
jae
mov
stos
out
nop
pop
sub
loop
push
lods
pop
xchg
jno
or
mov
int
jnp
popa
xchg
rclb
pop
sbb
shll
in
mov
sub
fcmovne
imul
jle
je
and
mov
lods
adc
cmp
or
lret
mov
fists
push
icebp
loopne
lods
xchg
cwtl
fistl
and
addr16
mov
mov
out
stos
gs
sbb
loopne
shlb
mov
js
mov
inc
mov
repnz
dec
and
inc
mov
inc
mov
ljmp
dec
sbb
inc
fstpt
stos
mov
push
mov
add
push
mov
mov
dec
lcall
xor
jmp
gs
sbb
lock
addr16
inc
js
sub
cli
fistl
xchg
cmp
jl
cmp
jecxz
lods
inc
sub
out
adc
pop
cmp
fucom
icebp
popf
adc
jb
dec
pop
jo
aas
mov
sub
dec
cwtl
inc
mov
cmp
scas
jecxz
nop
xor
ret
movsl
test
or
xor
inc
cmp
ja
lods
adc
test
fsubrs
cld
out
mov
sbb
arpl
fistl
inc
aad
ljmp
and
mov
std
mov
call
pmaddwd
jae
push
sbb
les
outsb
loop
daa
test
mov
shl
stos
lea
jnp
push
mov
sbb
cmp
pop
mov
into
imul
mov
lahf
int
xor
mov
subl
add
sub
nop
loopne
mov
lahf
xchg
scas
add
pop
dec
xor
test
je
cmp
inc
sbb
push
stos
movsl
pushf
lret
fmuls
scas
adc
aas
fcoms
xlat
jecxz
mov
lcall
cmp
xor
mov
loop
pop
and
mov
ss
xchg
fst
mov
ds
xor
idivb
jae
out
negl
sahf
jg
dec
jb
push
ljmp
clc
sub
aam
mov
and
mov
movsb
jmp
outsb
sub
or
lret
jge
or
sub
test
lods
xchg
addr16
xor
xchg
pop
xor
or
loop
icebp
shll
in
xchg
sub
xchg
idivb
nop
cld
aaa
cli
push
rep
or
ret
adc
imul
lret
shrb
stos
pop
jae
pop
cmpsl
fbld
roll
in
insb
jecxz
xchg
loope
mov
lds
gs
ss
inc
dec
cmp
push
mov
adc
jne
inc
outsl
sbb
out
cwtl
mov
in
xchg
or
test
push
push
xchg
mov
or
mov
inc
outsb
fisttpll
shl
dec
dec
adc
cmpl
orl
jae
imul
xor
daa
out
add
sbb
dec
stc
mov
inc
push
mov
cmc
dec
in
xor
pushf
jp
jecxz
jge
popf
icebp
jp
popf
daa
mov
pop
mov
fadd
push
mov
mov
sub
push
mov
jecxz
push
xor
lea
movsb
adc
adc
mov
je
or
int
nop
orl
mov
cltd
or
ds
cs
add
add
call
xchg
jecxz
pusha
mov
repz
andl
lret
mov
test
adc
cmp
or
insb
jmp
dec
shll
imul
rcr
call
xor
and
mov
leave
leave
adc
test
cmp
ss
or
mov
daa
pop
aad
fadds
mov
ja
mov
push
loopne
or
push
pushf
mov
jnp
jnp
pop
add
out
sbb
je
lods
iret
mov
imul
and
rorl
inc
arpl
lock
mov
pop
sub
lock
aas
pusha
dec
daa
mov
jnp
clc
aam
fwait
add
jl
mov
fucomi
mov
or
outsl
imull
mov
repnz
xor
inc
lret
into
dec
sbb
mov
xchg
inc
out
subl
mov
adc
mov
xchg
mov
shrb
jmp
jge
sbb
or
pop
iret
in
cmp
inc
jp
inc
loope
push
xor
stos
mov
jp
add
shll
sarl
into
xchg
xor
fildl
mov
and
jns
fbstp
or
add
data16
mov
xor
inc
fnstenv
les
popf
popl
mov
sbb
std
test
mov
fcoms
xor
imul
pop
lock
cmpsl
cmp
stc
outsb
jbe
lahf
ljmp
scas
xchg
xchg
jp
inc
hlt
pop
inc
push
adc
cld
pop
pop
lock
insb
mov
hlt
daa
lea
rcrb
inc
sahf
dec
mov
pop
xchg
aaa
xchg
scas
cmc
xchg
or
repz
test
sub
loop
nop
arpl
mov
insb
or
jg
aas
sbb
out
hlt
mov
adc
negb
subb
xor
jge
outsb
mov
pop
cmp
push
hlt
dec
call
and
dec
and
jg
insl
lock
ret
inc
js
mov
inc
std
mov
stc
stc
js
inc
mov
and
or
sarl
imulb
test
xchg
cld
add
jecxz
pusha
mov
mov
insb
ret
pushf
cltd
es
push
inc
or
test
test
xchg
push
add
jb
sub
pop
pop
rorl
push
xchg
cmc
or
mov
lock
pop
pop
outsb
dec
imul
dec
adc
xor
fwait
lods
or
ds
push
fcomps
xlat
pop
xchg
jmp
add
pop
mov
nop
mov
aaa
rorl
jl
addl
mov
dec
xor
fsubrs
popa
jne
jo
call
mov
xor
dec
mov
fidivrl
out
sbb
repnz
jg
pop
bound
loopne
xchg
in
mov
jno
push
xchg
pushf
mov
fwait
rorb
add
adc
xchg
cmp
sub
pop
sub
pop
int3
nop
fsubp
sbb
xlat
and
out
mov
movsl
jecxz
push
xchg
call
and
push
push
push
jecxz
inc
sti
test
push
shr
push
lret
movsl
mov
cmp
inc
and
fcomps
adc
push
jmp
push
xchg
adc
inc
mov
add
sub
js
rolb
mov
mov
mov
cmp
cmpsl
idivl
and
pop
sbb
inc
and
sbb
out
nop
hlt
push
shrl
adc
mov
nop
mov
cs
ret
sbb
ret
adc
lret
aaa
popf
lods
jle
mov
adc
adc
add
cmp
jmp
inc
pop
xor
sahf
add
add
inc
int3
nop
adc
out
mov
push
aas
aaa
xor
add
push
insl
mov
lahf
mov
and
pop
sbb
in
test
cmp
clc
sub
pusha
nop
dec
pop
dec
inc
insl
dec
dec
out
imul
xchg
shll
pop
pop
or
gs
scas
xchg
push
mov
in
repnz
in
mov
jp
cmp
xchg
inc
or
push
inc
push
repz
out
leave
push
jge
stos
lds
flds
sub
jno
ljmp
js
dec
dec
movsl
xor
adc
pusha
mov
mov
mov
fdecstp
jge
mov
cmp
inc
in
popf
arpl
xchg
mov
call
xor
push
and
jnp
or
sub
scas
pop
xchg
adc
in
test
sub
call
icebp
test
rcr
test
jmp
dec
pop
fbstp
add
sahf
mov
jo
push
add
hlt
and
inc
push
fidivrl
imul
pop
mov
sahf
jl
movsb
jg
mov
daa
cmc
xchg
leave
or
mov
push
pop
jmp
sbb
aam
lret
cmp
in
repnz
daa
xchg
ds
je
in
daa
sar
sahf
xchg
scas
xlat
add
stc
pop
xchg
push
inc
push
pop
scas
jp
jnp
lahf
inc
inc
repnz
mov
push
rclb
xchg
adc
lahf
imul
push
push
xchg
rorb
mov
stc
std
mov
or
or
xchg
into
es
sbb
sub
cmp
js
cmp
push
sbb
setp
sub
ljmp
loop
insl
out
push
mov
cmp
sub
mov
mov
xchg
add
sti
test
call
mov
pushf
inc
push
mov
out
mov
mov
push
ja
int3
cli
sub
lea
mov
pop
cmp
mov
mov
pop
js
ficomps
daa
cmp
inc
pop
or
out
lea
dec
movsl
subl
and
lds
sti
pop
jmp
adc
xlat
nop
enter
pop
jg
je
sbb
mov
popf
inc
adc
adc
adc
dec
popa
fcomps
adc
adc
sbbl
jb
iret
pop
ljmp
dec
insb
fisubl
adc
lods
cs
ss
xchg
and
and
scas
cli
test
shr
lcall
jns
movsl
push
mov
call
cmp
pop
ret
add
xorl
sub
jmp
imul
or
pop
pushf
es
inc
repz
and
mov
icebp
and
test
push
fucomi
pop
xlat
jg
fwait
testb
mov
mov
mov
mov
mov
out
enter
sbb
in
sub
or
mov
push
mov
push
stc
int
ret
add
scas
or
fcompl
xor
cmpsb
mull
clc
fdivrp
sbb
data16
mov
jo
mov
push
iret
les
adc
mov
push
notl
push
fs
push
lret
sar
jl
into
add
inc
fs
and
pop
adc
out
or
dec
inc
xor
push
push
out
push
push
imul
cld
popa
push
mov
das
dec
push
adcl
push
fisubl
sbb
in
xlat
jl
jecxz
inc
cmp
cwtl
cmp
dec
push
rorl
scas
or
adc
mov
dec
and
jmp
xor
inc
cmp
xchg
xor
mov
mov
inc
pop
mov
adc
or
iret
lods
jmp
inc
sub
daa
fadd
inc
sub
mov
push
mov
inc
and
scas
cmp
sti
divb
dec
pop
loope
daa
cmp
sbbb
orb
shll
adc
adc
out
adc
outsl
mov
dec
jnp
inc
aad
mov
repz
push
add
hlt
pop
jmp
stos
sub
inc
dec
roll
and
imulb
sub
xor
lds
into
sub
adc
int
lock
jl
xchg
xchg
mov
cmpsb
mov
mov
mov
push
and
mov
adc
and
mov
mov
mov
mov
test
je
imul
notb
fildl
dec
stos
sbb
cmp
sub
xor
ret
or
in
mov
cmp
inc
jmp
mov
in
or
mov
sahf
jo
icebp
nop
test
dec
dec
mov
mov
in
pushf
jle
dec
add
repnz
push
mov
push
inc
lret
mov
mov
or
and
aaa
cmpsb
and
cmp
sub
dec
mov
jmp
das
rclb
jecxz
xchg
data16
push
jp
mov
jo
les
sbb
mov
sahf
cli
ficoms
xor
int
movsb
aad
dec
push
jb,pn
push
cmpsb
pop
dec
outsb
loope
adc
stos
insl
loope
rcr
adc
and
int
dec
jns
jp
jne
popf
dec
dec
add
mov
out
mov
fs
mov
sbb
cmp
jns
inc
divl
add
push
mov
mov
mov
push
fld
or
push
cmc
pop
leave
mov
mov
mov
lds
repz
rcrl
xor
or
hlt
into
inc
ficompl
adc
and
add
cld
cmc
cmpsl
inc
les
pop
loopne
gs
mov
push
adc
mov
pop
push
push
inc
pusha
lods
inc
ds
hlt
adc
sbbb
enter
inc
negb
mov
sbb
frstor
orb
icebp
fcmovnb
fdivl
jl
je
jbe
aad
and
sbb
scas
fs
sbb
push
mov
sbb
pop
xor
jmp
loopne
out
in
ret
test
popf
loope
mov
js
fnstenv
movb
in
cs
stos
adc
enter
lahf
mov
adc
cmp
mov
xlat
pop
push
pop
push
and
out
xor
adc
lds
call
mov
sbb
out
cmp
fisttps
lret
notl
clc
roll
aam
mov
adc
fstps
pop
incl
and
cwtl
fucomip
mov
xor
je
sbb
aaa
xor
sti
fisubrs
jae
stc
mov
or
je
subl
jbe
lahf
testb
int3
push
fcompl
jns
push
mov
stc
je
gs
sub
xor
and
push
mov
test
push
xor
data16
jmp
ja
pop
sub
add
xchg
xor
ds
sbb
xor
sub
pop
jmp
lahf
pop
adc
xchg
mov
mov
push
or
aas
jb
xchg
jle
mov
sbbb
jg
cli
jmp
mov
mov
mov
fbstp
sub
fsubrl
fdivl
pushf
lcall
cmp
cmpsl
dec
outsl
and
mov
push
xor
lea
das
mov
in
test
xor
mov
dec
je
xor
jecxz
xchg
data16
dec
jne
fs
push
xor
testl
movsl
mov
shlb
lods
loope
sbb
sub
sbb
sahf
les
jge
pop
cmpsb
xor
jns
xchg
sbb
mov
mov
je
lea
pusha
cmpsb
add
or
sbb
and
inc
push
cmp
cs
xor
inc
imul
mov
data16
mov
mov
cli
pop
cmc
inc
push
adc
jne
das
mov
arpl
std
add
aaa
xor
mov
es
insb
int3
xchg
gs
push
sub
and
enter
in
inc
sub
pushf
nop
rolb
shr
sub
ss
inc
push
xchg
jp
aas
pop
test
and
fisttpll
sbb
pop
mov
add
sub
js
mov
test
in
insl
dec
dec
jne
sub
xor
cmpsb
movsb
mov
mov
mov
outsl
std
xorl
mov
enter
and
repz
ja
or
lods
fwait
sbb
mov
inc
mov
scas
std
call
or
lds
cmp
addr16
or
inc
fidivrl
cmp
stc
aas
push
jns,pn
dec
add
out
stc
ret
outsl
leave
sahf
add
loope
decl
ret
lahf
adc
sub
adc
ljmp
and
and
push
jns
cmp
jae
mov
stc
sbb
jno
dec
shrb
push
jb
pop
and
ret
fwait
and
xchg
and
cmc
jnp
outsl
pop
fcomip
imul
jle
jne
dec
dec
insl
adc
and
jmp
cld
inc
out
sub
xor
out
andps
add
add
jmp
gs
cld
lahf
fucom
insl
pop
push
into
sub
or
xor
ret
sub
test
add
push
jmp
sti
inc
xchg
inc
xchg
scas
cmpsl
inc
ficoms
mov
outsb
mov
and
jmp
faddp
and
push
pop
arpl
mov
std
aaa
add
out
mov
jmp
mov
mov
inc
test
fwait
popa
movsb
push
cmp
nop
pop
test
add
inc
push
mov
pop
pop
imul
das
insb
insb
sub
lea
data16
mov
push
std
adc
adc
cmpsl
lods
jmp
mov
std
ss
loopne
push
sub
pop
lods
xorb
dec
outsb
test
xor
inc
jno
stc
mov
dec
lahf
or
mov
cmp
fsubl
sub
jb
adc
push
jb
clc
jecxz
dec
dec
addr16
mov
xchg
inc
fdivrs
cmp
pop
in
and
or
push
test
mov
stc
femms
adc
and
jp
or
test
call
imul
xchg
hlt
test
push
loop
jnp
mov
mov
data16
mov
mov
setnp
xchg
add
jmp
lret
jg
loopne
repnz
movsb
iret
aam
aaa
js
mov
push
fmull
mov
fdivrs
sahf
int3
es
cmpsb
test
jp
daa
daa
xor
es
fadds
stos
shl
dec
fists
gs
ss
rorl
pop
inc
and
mov
int
mov
push
mov
pop
cli
and
test
insb
pop
dec
in
or
movsl
imul
xchg
dec
inc
inc
mov
push
pusha
int3
add
cmp
fcomip
and
mov
jp
shr
nop
jae
hlt
dec
pop
fisttpl
jno
mov
pop
sbbb
add
jecxz
pop
cli
addr16
adc
dec
jae
fldl
pop
sbbb
sti
sub
add
cmp
out
push
push
shlb
inc
push
fbld
int3
test
outsb
mov
pop
aad
mov
out
std
dec
mov
shll
sbb
dec
push
bound
adc
sbb
insl
or
cli
imull
mov
pushl
or
lret
sbb
mov
add
js
sbb
jne
add
xchg
shr
and
aaa
adc
sub
push
mov
cwtl
mov
jb
jge
lock
dec
test
in
inc
mov
cmp
dec
hlt
or
jmp
fimuls
loopne
mov
test
mov
sbb
cwtl
mov
roll
push
loop
cmp
xchg
test
jmp
xchg
or
lods
js
dec
push
int
mov
or
xchg
addl
inc
jmp
ret
popa
out
lods
push
adc
jle
out
je
out
xchg
sub
xchg
lds
push
ljmp
dec
loope
mov
jbe
and
insb
call
cltd
out
aad
repz
pop
and
sysexit
mov
or
pop
adc
int
cmpl
mov
dec
or
xor
stos
mov
xchg
sbb
leave
daa
je
sbb
ret
ds
pusha
in
jecxz
cmp
push
fbstp
push
ret
mov
dec
mov
adc
mov
ret
aad
or
repnz
push
push
jle
rorb
mov
test
movsb
lret
push
or
loop
insb
test
xor
cmp
sub
loopne
xor
ds
fbstp
cltd
arpl
aaa
mov
arpl
sti
lods
pop
daa
nop
mov
dec
fadds
sbb
fs
cmp
jnp
sbb
cmp
push
add
jl
jmp
into
jne
jno
out
or
sub
arpl
add
push
out
cmp
push
sub
cmc
loopne
imul
hlt
scas
jl
jmp
imul
es
or
std
sub
out
and
cwtl
shll
cltd
jnp
pop
lods
aas
xchg
addr16
mov
ja
loopne
mov
mov
cmp
stos
mull
jb
cltd
loopne
xchg
ss
jp
mov
imul
shl
jp
adc
jg
and
mov
enter
fcoml
or
sub
out
mov
xor
cmp
jnp
jl
pop
or
and
and
mov
call
push
sub
pop
inc
in
cld
enter
mov
add
add
cmp
xchg
fisttpl
xacquire
rcrb
fcomps
push
pusha
sbb
mov
test
stc
in
mov
mov
mov
push
xlat
mov
adc
stc
loopne
jns
mov
and
jle
cmp
mov
aad
inc
lods
inc
inc
iret
mov
mov
mov
push
dec
xor
in
lahf
xchg
mov
push
pop
das
pop
mov
int3
sahf
fs
and
enter
adc
rorb
negb
es
pop
cmp
mov
dec
push
nop
fsts
test
sbb
xor
adc
aam
cmp
cmp
xor
xchg
pop
jge
out
popa
int
push
mov
jecxz
and
jbe
js
xchg
mov
rcrb
xor
xor
and
or
cmp
leave
jge
cwtl
xchg
add
lret
pop
pop
clc
mov
and
xor
add
cmp
stos
rcrb
sub
aas
push
fistpl
adc
fs
scas
iret
enter
xchg
pop
jno
mov
icebp
icebp
mov
cmpl
aas
jb
mov
rol
rcll
not
mov
mov
xor
cmc
fisttpl
inc
jp
fistps
push
xchg
les
cld
inc
fistps
mov
mov
pop
movb
movsb
inc
in
adc
scas
dec
adc
jle
imull
mov
insl
outsl
shrl
cmp
push
mov
repz
xchg
sub
test
mov
call
push
jno
mov
fcompl
adc
iret
and
add
push
sbb
pop
insl
test
pop
fstpt
jmp
jp
xor
jno
sub
ret
scas
out
lock
addl
mov
sbb
mov
test
repnz
outsl
adc
iret
pop
and
mov
jecxz
aas
lock
imulb
mov
fstpl
es
arpl
mov
dec
daa
fstps
divb
fsts
cld
sub
xor
iret
fs
jp
fucom
dec
inc
out
or
popa
mov
testb
mov
lret
hlt
xor
dec
xor
loope
je
xor
and
xor
fistpl
aas
icebp
pop
cmp
jne
imul
push
pop
sti
fcmovu
add
dec
cmp
in
mov
sbb
or
movl
das
fnstenv
sarb
addr16
cmp
movsb
fistpl
xchg
cmc
fwait
mov
cmpsb
imul
jb
test
dec
rorb
push
or
xor
and
mov
mov
push
sub
test
add
shll
clc
outsb
mov
test
aad
pop
movsl
pop
bound
jnp
or
testb
adc
inc
lea
dec
add
clc
add
xor
and
mov
test
adc
push
jp
popa
test
jge
or
lock
sarl
jo
insb
inc
out
inc
or
rorl
xor
adcl
xor
and
insb
fisttpll
std
sub
es
pop
test
sti
pushf
push
ret
adc
test
inc
mov
adc
int3
repz
ret
jo
rcll
std
lods
inc
add
jne
lcall
int
xchg
bound
jae
and
mov
loope,pt
sub
stos
aaa
mov
inc
outsl
pop
xor
dec
stc
mov
jne
in
cwtl
nop
pop
mov
xchg
dec
push
add
push
mov
adc
inc
jbe
push
ja
jb
mov
mov
mov
cwtl
in
sbb
int
pop
dec
inc
mov
scas
cmc
rorl
in
das
inc
and
jns
inc
cwtl
addl
pop
lret
cmp
shll
cmpsl
fsubrl
aaa
xchg
inc
fs
je
pop
inc
cmc
les
movsb
push
inc
ret
std
daa
pushf
lock
jno
int3
insb
inc
es
mov
je
adc
xlat
ror
test
fiaddl
clc
scas
jecxz
or
sbb
popa
or
pusha
mov
push
mov
cmpsl
inc
in
repz
dec
add
out
mov
lods
add
mov
dec
jmp
add
pop
aaa
fists
jle
mov
push
test
out
lcall
dec
push
add
jnp
lret
cs
push
jg
push
leave
jnp
ljmp
xor
push
cmp
imul
add
into
aas
icebp
divb
cmp
pop
add
mov
jge
mov
adc
pop
imul
pop
stos
sub
insb
inc
adc
stos
addr16
lds
push
cmpsb
outsb
or
dec
movsl
add
iret
jns
outsb
push
dec
sub
sub
push
inc
inc
jg
retw
adc
sahf
adc
out
jb
sub
add
and
rclb
notb
fs
not
pop
mov
pop
imul
xor
out
mov
cmpsl
mov
cli
jno
push
sub
adc
pop
loopne
mov
jae
repz
mov
nop
jnp
sahf
lds
and
mov
jmp
nop
in
push
mul
call
ret
mov
movsb
xchg
adc
lcall
int3
jmp
adc
xor
push
push
push
imul
std
int3
mov
push
mov
ljmp
mov
lret
roll
daa
pop
jnp
leave
and
xchg
or
bound
fadds
and
in
xor
scas
xor
mov
sbb
mov
incb
cmovae
decl
out
mov
xchg
incl
imul
test
test
shll
aaa
sub
adc
jo
outsl
push
stos
xorl
jl
pop
and
fs
cli
addr16
pop
cld
sub
jle
push
not
inc
cld
add
popa
add
mov
cmpl
add
push
repz
dec
sbb
out
popa
push
inc
lcall
jb
scas
dec
push
sbb
dec
out
rcll
mov
adc
xor
pop
rcll
imul
sbb
data16
jns
jle
imul
pop
pop
js
mov
pop
dec
imul
cmp
outsl
ffree
inc
jl
add
or
aam
test
lcall
add
faddp
sub
adc
pop
or
fidivrs
test
sub
gs
pop
mov
mov
mov
sbb
bound
add
pop
jne
inc
scas
clc
xlat
shrb
mov
and
or
jp
cmc
mulb
mov
out
mov
xchg
scas
ret
mov
cltd
pop
outsl
push
jne
adc
in
push
inc
xchg
cmpsl
popf
xchg
add
xor
jge
rorb
pop
push
mov
pop
xor
mov
and
out
add
out
push
pop
fnstcw
mov
ss
fsts
lods
and
cwtl
pusha
aam
jle
fistpll
fnsave
insb
mov
mov
dec
inc
scas
mov
dec
cmpl
push
popa
push
mov
xor
mov
je
jle
sub
aas
or
inc
hlt
out
inc
fstpt
fldcw
out
pslld
sbb
lock
test
or
stc
movsl
lods
in
fsubrp
dec
fldenv
add
mov
cli
mov
sbb
repnz
mov
mov
notb
dec
adc
cmp
dec
movsb
pop
adc
dec
loop
lock
lret
test
jae
push
mull
fidivrs
push
js
outsb
out
rep
mov
jae
insl
push
jns
cmp
sbb
mov
xchg
je
mov
mov
push
stos
jno
lds
mov
xlat
sub
mov
int3
pop
mov
push
mov
mov
push
outsl
ds
call
pop
jmp
data16
out
xor
push
add
call
inc
ret
pop
mov
jmp
lds
inc
lahf
pop
xor
popa
into
divb
mov
out
adc
nop
leave
fadd
push
call
leave
loop
movsl
jnp
cmp
fstps
lret
arpl
push
or
mov
adc
sbb
mov
push
sbb
rcl
dec
pusha
std
xorb
fwait
or
or
mov
fdivl
hlt
dec
js
pop
adc
xchg
test
fwait
in
in
popa
add
fcmovb
mov
xchg
xchg
out
imul
insl
lret
mov
add
dec
sbb
jae
mov
scas
not
psubw
mov
test
dec
aas
js
fiaddl
cmp
mov
mov
pop
xchg
int3
adc
push
jo
rorb
mov
add
fstl
push
jb
add
mov
mov
hlt
lcall
or
add
xchg
mov
dec
movsl
pop
popa
sbb
pop
rcr
mov
sub
jo
inc
in
addr16
iret
sub
jo
outsb
ja
aad
fldt
ljmp
popf
cli
inc
and
dec
call
movsl
in
and
in
xor
inc
lret
mov
sub
sbb
xchg
sub
push
subb
loopne
mov
out
or
jmp
and
adc
out
dec
fmuls
cmp
in
loopne
inc
into
stos
mov
xor
flds
fimull
aaa
test
outsl
in
cmc
scas
inc
sarl
fnstenv
sbb
sbb
inc
and
inc
cli
addr16
sub
mov
add
test
lcall
xchg
ficoml
sub
mov
jmp
mov
xchg
dec
jnp
xor
mov
mov
sbb
add
test
sub
inc
lds
enter
nop
jl
rcrl
pop
cmp
xor
dec
push
fwait
cmp
pushf
pop
pop
gs
hlt
inc
mov
dec
mov
in
movb
push
mov
or
outsl
pop
cmp
pop
fs
lret
mov
mov
pop
dec
stos
icebp
jne
cwtl
ljmp
ja
jecxz
movsl
ret
mov
inc
xor
sahf
mov
inc
mov
addr16
adc
mov
dec
fidivrl
pop
mov
push
test
insl
cmp
in
mov
xchg
add
outsl
pop
out
push
aam
jecxz
mov
test
adc
xacquire
popf
mov
and
jmp
sbb
xchg
into
and
bound
fmull
jne
mov
add
das
inc
movsb
mov
js
sub
mov
sbb
bnd
xchg
addr16
ss
sbb
xor
inc
jae
fucomip
je
enter
sub
mov
int3
lods
aam
leave
jae
push
das
out
jp
fdivrl
test
mov
fs
testb
shr
stos
mov
loopne
enter
lret
mov
pop
push
mov
test
fidivrs
test
aaa
aas
dec
jmp
mov
imul
loopne
fsubrl
jne
adc
xchg
inc
or
mov
jp
out
mov
stc
call
aam
insl
hlt
lea
shll
pop
jbe
adc
pop
idivl
xlat
inc
jecxz
ss
mov
cs
and
and
sub
mov
int3
push
dec
cli
movsb
jns
pop
add
push
fcmovu
xor
and
jne
xor
and
mov
mov
cmp
or
scas
mov
fldenv
add
inc
popf
jl
dec
scas
sub
pop
mov
sbb
lret
andl
cmpb
rcll
in
pop
push
scas
lret
adc
mov
adc
mov
add
xor
xlat
outsl
scas
lret
adc
mov
lods
int
mov
mov
add
ror
pop
adc
xor
pushw
xchg
fsts
int
mov
ds
cs
pop
sub
push
in
xor
scas
pop
loopne
xchg
jp
es
inc
dec
in
mov
push
mov
fdiv
test
andl
cmc
cmpsb
pop
dec
jmp
mov
or
pushf
jae
ja
and
in
int
push
enter
mov
js
xor
push
xor
aam
jb
xchg
adc
popf
dec
nop
das
push
ja
fs
cmp
inc
daa
jae
bound
cwtl
pop
or
in
fnstenv
dec
fdivl
daa
lcall
and
pop
cmp
pop
imul
loop
in
xor
andb
pop
push
cmpsl
leave
mov
ret
sbb
xchg
jns
adc
shlb
roll
shrb
pop
dec
dec
lock
in
dec
push
xor
adc
or
bound
cmp
sahf
enter
imul
xor
jnp
or
or
fsubl
rorl
xor
je
popf
jb
sbb
imul
adcb
cmp
imul
fcoml
sbb
sbb
les
test
cmc
cld
dec
les
jecxz
sub
cli
inc
push
push
mov
lock
xlat
js
repnz
into
ret
mulb
scas
pushf
or
cmp
push
out
mov
and
imul
insb
enter
cwtl
mov
sti
fists
out
jle
es
pushw
push
cmp
ljmp
xchg
insl
pop
arpl
arpl
mov
mov
pop
loope
fsubrs
je
mov
les
imul
into
cli
jmp
sbb
and
or
flds
out
cwtl
js
inc
fcompl
sbb
nop
push
and
and
cld
pop
mov
ret
data16
cmp
movsb
jne
imul
push
mov
mov
loope
xchg
stos
push
les
cmp
pop
aaa
xchg
xor
dec
mov
adc
jbe
adc
fcompl
scas
inc
rcrl
inc
int
pushl
call
imul
test
xchg
fsts
sbbl
mov
pop
adc
jo
xchg
pop
or
test
pop
in
jecxz
dec
cltd
je
adc
fidivrl
adcb
popf
xlat
jne
mov
push
cmpsl
and
test
jbe
mov
push
test
xor
pusha
mov
enter
and
or
sub
in
push
lret
cmp
xchg
imul
shrl
lret
sub
cs
sub
in
adc
mov
adcl
add
lock
testb
out
stc
inc
and
mov
jle
lds
or
sub
cltd
test
loopne
pusha
push
mov
sahf
fimull
mov
mov
pop
dec
jnp
cmc
add
pop
add
lahf
xchg
mov
addr16
xchg
mov
jg
arpl
dec
std
movsb
insb
aad
adc
cmc
enter
jo
and
lds
frstor
lret
test
lock
xor
adc
pushf
xchg
and
cmp
mov
sbb
lods
ss
xchg
lods
jmp
sub
fsubs
push
daa
lahf
pop
pop
iret
lods
icebp
xchg
into
add
aad
push
inc
mov
dec
or
pop
insb
pushf
imul
cmp
stos
int3
pushf
pop
mov
sbb
fs
test
out
cmp
enter
inc
push
adcl
sti
mov
adc
add
xchg
or
ret
fiadds
jle
lcall
aaa
jmp
add
lods
inc
lods
mov
rcll
and
mov
test
sahf
push
and
mov
pop
pusha
mov
sbb
fstl
and
outsl
orb
jp
cli
push
adcb
imul
dec
push
inc
ja
lods
adcl
lret
inc
xchg
or
jmp
scas
in
hlt
and
mov
stc
jl
fisubs
icebp
inc
fsubl
pop
leave
cmpsb
rclb
popa
jbe
mov
push
cmp
insb
sub
iret
rorb
push
push
inc
test
ljmp
int
lret
pop
rcll
or
pop
mov
jle
jb
outsb
and
cwtl
ret
pop
out
data16
fldenv
adcb
push
sub
lahf
cld
loop
push
and
and
es
aad
movsl
jl
push
push
daa
mov
cltd
iret
lods
cld
je
sub
push
fldt
push
aas
test
add
mov
xchg
shlb
in
cmpsb
iret
sbb
jp
movsb
and
shld
push
sahf
sbb
mov
mov
lret
mov
pop
in
jl
jmp
sbb
into
rsm
movsb
and
add
out
mulb
pop
add
ljmp
adc
xchg
ja
je
mov
xor
xor
xlat
icebp
pusha
fwait
cmp
sar
pop
ret
int
xchg
icebp
mov
sbb
fcomps
pop
ljmp
cmp
cltd
test
sub
mov
loope
push
mov
mov
hlt
mov
loopne
dec
loop
xor
sbb
inc
jbe
jbe
mov
cmpsb
push
and
hlt
xor
idivl
or
filds
nop
xor
jne
mov
stos
out
imul
xorb
negl
xlat
and
out
pop
sbb
mov
cld
push
les
arpl
jne
movsl
dec
fnstenv
iret
cmp
sbb
pop
mov
jecxz
mov
xchg
mov
mov
adc
add
pop
mov
movsb
adc
xor
jnp
push
xor
dec
enter
nop
sbbb
test
aaa
stc
fs
out
adcb
jecxz
xor
jp
in
rcr
test
stos
inc
mov
fbstp
icebp
cmp
or
mov
push
leave
cmpsb
sbb
xchg
xchg
lcall
push
xchg
fsub
sub
or
or
stos
iret
out
xchg
repz
mov
or
push
pop
loope
stos
push
jmp
in
add
inc
hlt
push
shlb
cmpsb
xor
sbb
pop
lock
adc
mov
jmp
cmpsb
daa
test
stos
dec
push
jb
in
mov
gs
test
mov
dec
add
mov
cmpl
adc
adc
stos
sarb
sub
inc
pushf
call
movsl
pop
popa
xchg
xchg
add
dec
icebp
mov
icebp
call
popf
jp
lcall
xchg
test
std
call
test
mov
mov
movsb
dec
and
out
pop
out
ret
popa
sub
test
sub
clc
stos
sbb
xchg
mov
push
xor
fs
adc
lcall
test
popf
pop
xor
test
inc
xorl
daa
push
imul
insb
int
cmp
daa
stos
out
insl
adc
mov
insl
jnp
pop
fucomp
into
repnz
jmp
push
in
and
std
add
push
dec
xor
adc
mov
mov
sbb
jmp
scas
sub
pop
loop
rclb
push
in
movsl
mov
sar
push
mov
adc
xchg
sub
std
imul
xchg
or
sbb
fwait
mov
fadd
adc
jns
xchg
repnz
outsb
jmp
inc
pushf
xlat
jo
mov
in
roll
into
fwait
sub
int3
adc
data16
cmp
cmpsb
or
lret
outsl
or
pop
mov
cmc
dec
or
lahf
and
cmp
sarb
pop
dec
movsb
ja
clc
add
mov
inc
jo
cmp
mov
mov
pop
sbb
adc
xchg
cmc
cs
cmc
pop
cltd
cmp
inc
xorl
rcrl
daa
mov
push
xor
sarl
push
aaa
adc
lds
cmpsb
lods
mov
insl
push
movsb
and
enter
cmp
stos
cltd
jge
rcrl
push
xor
imul
mov
and
mov
lea
xchg
ss
adcb
ds
iret
lods
adc
cmp
xor
repnz
mov
xor
mov
adc
sti
jne
push
sub
pop
or
inc
add
mov
pop
mov
rclb
mov
ds
rcll
xorl
in
mov
stos
shll
jns
dec
cmp
call
out
ret
cmp
xchg
repnz
lret
mov
mov
pushf
in
neg
pop
mov
pop
lret
sbb
inc
ret
push
mov
cltd
insb
popa
xlat
add
loopne
mov
pusha
push
or
dec
gs
mov
mov
inc
push
jp
fucomip
leave
in
push
sbb
mul
mov
dec
mov
in
jl
fcompl
add
add
out
adc
out
mov
mov
dec
push
inc
lcall
and
xchg
or
pop
fmul
roll
pop
jbe
xchg
sub
adc
push
adc
ret
ficompl
adc
idivl
jle
shlb
stos
cmp
dec
pop
push
sbb
xor
dec
adc
out
mov
pop
in
loope
out
inc
fwait
add
or
mov
stos
push
cmp
push
out
lods
pop
mov
pop
fstpt
addr16
xchg
cvtps2pi
fistpll
out
int
jmp
dec
sub
lret
mov
test
popf
pop
lahf
cld
adc
jb
mov
sub
in
imul
jl
sub
out
insb
or
sar
lea
push
mov
sbb
cwtl
mov
sti
and
add
shlb
cltd
shll
jns
pop
xchg
les
mov
test
repnz
jg
leave
cmpsb
aaa
push
xor
lea
leave
mov
cmp
cmpsl
testb
push
xor
movsl
lods
arpl
es
ror
mov
xor
xor
int3
jb
sti
or
cwtl
fs
lret
add
loope
ret
repnz
aad
sarb
xchg
adc
out
outsb
les
pushf
pop
mov
dec
mov
mov
fldcw
push
out
push
dec
push
adc
mov
repnz
cmp
es
mov
ret
in
inc
dec
arpl
mov
mov
in
sub
int3
out
enter
pop
fs
cmp
les
ret
mov
pop
ja
aam
lret
mov
jno
idivb
dec
add
pop
sahf
aaa
test
clc
pop
push
aam
xor
jb
sub
xor
into
ss
sub
add
add
lock
mov
mov
or
insb
stos
adc
stos
mov
dec
adc
scas
mov
xchg
inc
mov
sub
ret
inc
jg
cmp
dec
frstors
out
xor
push
scas
push
push
js
pop
movb
es
enter
jns
mov
or
pop
push
pop
or
mov
repnz
cmp
cmp
mov
in
out
fs
xchg
pusha
nop
add
jecxz
mov
xchg
jns
call
xor
push
lods
pop
aaa
ja
mov
xchg
in
insb
sub
xor
repnz
addr16
lret
mov
mov
lods
js
cltd
bound
iret
aaa
inc
lret
inc
scas
pushl
jge
xchg
cs
lods
xor
push
xor
rol
mov
aam
pop
xchg
push
cmp
dec
push
insl
pop
pop
test
lods
cwtl
and
add
sahf
xchg
pushf
push
outsb
mov
cmp
mov
shlb
add
in
add
testl
cltd
dec
mov
in
aad
dec
push
push
and
mov
pop
xchg
test
mov
fwait
adc
je
stos
push
jb
out
inc
xchg
divl
pushf
pop
rcrl
hlt
xchg
shlb
addl
mov
add
cltd
push
sbb
mov
andb
cld
stos
dec
popf
sbb
jecxz
cwtl
inc
and
cs
imul
ljmp
pop
movsb
mov
into
fxch
movsb
cwtl
adc
dec
mov
dec
mov
push
roll
popa
mov
xchg
jae
fcompl
lods
jnp
lret
mov
sbb
push
inc
hlt
ficoms
stc
adc
js
xchg
fistl
ret
cmp
fwait
leave
cltd
out
adc
push
ja
jl
push
xor
xor
push
adc
sbb
aas
mov
stc
and
jle
push
pop
or
push
jbe
xchg
out
cli
mov
out
aam
cmp
sbb
adcb
mov
or
sub
mov
jne
pop
imulb
pop
mov
push
or
add
xor
pop
call
enter
shlb
cmp
cmp
adc
and
jl
pop
xchg
pusha
push
or
fcomip
push
sahf
jmp
jmp
cmp
arpl
scas
shlb
inc
xor
xchg
cmp
xor
dec
rorl
es
pop
mov
xor
int3
aam
sbb
cli
xchg
jmp
es
cld
add
xchg
in
int
call
cmp
fwait
pusha
lea
sti
push
cld
jl
jns
addb
sbb
xchg
shld
adc
xchg
mov
pop
adc
sbb
xor
aaa
outsl
pop
sbb
out
shrl
fidivrl
movsb
movsb
pop
fsubs
testb
inc
dec
mov
mov
nop
shrb
leave
mov
jge
lahf
mov
jns
mov
adc
xor
bound
nop
xchg
lret
jge
addr16
lcall
subl
lods
scas
jecxz
repz
insb
adc
scas
sub
in
mov
clc
jnp
and
dec
inc
push
dec
icebp
lods
xchg
sub
xchg
push
inc
sub
jecxz
push
enter
dec
adcl
sbb
movsb
lcall
xchg
push
or
xor
scas
loop
adc
push
dec
add
imul
out
jecxz
fstpl
cs
rcrb
push
xorl
lods
int
inc
inc
mov
xchg
loop
jbe
filds
push
mov
cmp
scas
in
scas
sub
cmp
cmp
jnp
mov
xor
mov
push
daa
ja
sbb
mov
sahf
cmp
cmp
icebp
xchg
cmpsl
xor
cmp
gs
or
cmp
imul
fisubs
sbb
push
dec
sub
xchg
and
adc
dec
les
ret
mov
pop
das
data16
inc
mov
in
xchg
fnsave
es
jns
pop
dec
daa
notb
push
jmp
hlt
es
and
cmp
and
push
cmc
mov
push
repnz
adc
je
ds
cmc
icebp
test
jle
mov
mov
inc
shl
lods
mov
xchg
test
pushf
pusha
imul
icebp
adc
popa
cmc
sbb
movsb
gs
mov
mov
inc
sbb
sbb
xchg
pop
test
sub
cli
add
ja
roll
jg
sbbb
loop
sbb
push
push
jge
lret
xor
push
roll
jnp
push
sarb
mov
adc
das
xchg
icebp
xchg
inc
shll
sbb
sbb
imul
push
cmp
leave
mov
sub
dec
jbe
add
sbb
bound
cmc
ror
insb
pop
lds
jnp
xchg
out
nop
sbb
xchg
sub
jge
pop
inc
mov
int
incl
test
jmp
inc
out
arpl
test
loop
les
mov
cmpsb
loopne
add
xchg
xor
add
adc
shr
add
push
aam
sub
mov
and
loop
icebp
jne
loop
and
xor
orb
and
or
cld
or
inc
pop
cli
sbb
test
aam
fisubrl
adcb
push
lock
imul
mov
mov
dec
pop
mov
bound
jo
lea
mov
adc
rcrl
popf
jae
out
les
imul
or
test
rolb
insl
cli
fisttps
lcall
das
jns
jbe
jnp
scas
fiaddl
xchg
fiadds
cmp
scas
add
ror
xchg
ret
cwtl
cwtl
dec
in
arpl
mov
cmp
cmpsb
push
je
sbb
fisttps
mov
call
sbb
inc
scas
clc
mov
arpl
addr16
cmp
jnp
sub
jmp
int
lods
andl
in
jl
repz
into
push
cmpsl
sub
xchg
repz
lea
andl
sahf
jecxz
sbb
inc
fdivl
inc
into
dec
rorl
test
jmp
dec
fwait
pop
out
mov
aam
mov
mov
mov
sbb
js
insb
mov
mov
out
sahf
jbe
out
popa
cmp
sub
add
xlat
cli
push
xchg
xchg
lds
xor
outsb
xor
test
push
adc
sbb
jbe
xor
cwtl
cmpsb
adc
mov
mov
testl
push
out
lods
je
int
sub
fsubl
and
jno
jg
loop
jl
cmp
rcl
mov
fdivl
sub
pop
add
jne
pushf
add
add
imull
out
pop
mov
mov
repnz
jnp
fdiv
imul
test
mov
and
add
ret
push
push
cmp
lods
xchg
add
pushf
test
and
xchg
xchg
popa
ret
inc
pcmpeqd
in
sahf
inc
shlb
daa
inc
dec
aaa
push
ret
pop
add
jmp
adc
xchg
out
mov
sub
cmp
mov
sahf
lcall
and
dec
addr16
xchg
call
xchg
push
shl
fisubl
jnp
xchg
jb
and
rcl
sub
xchg
fdivl
addr16
ret
and
dec
popa
pushw
movsl
mov
mov
dec
sbb
xor
add
popf
and
add
xlat
vmovddup
popf
push
mov
daa
inc
xor
js
aad
and
inc
sub
cmp
mov
rcl
jecxz
ss
arpl
out
aaa
add
sub
add
lds
add
adc
fistps
push
test
insl
incl
xchg
insb
jg
sbb
mov
popf
sub
push
daa
mov
xor
and
dec
stos
aam
xor
mov
lret
faddl
outsb
inc
cmp
dec
inc
inc
bound
mov
cmpsl
cmp
xchg
cmp
add
adc
and
aam
cs
xor
call
xchg
dec
dec
movb
mov
clc
sub
xchg
mov
sub
mov
movsl
mov
je
push
leave
push
leave
icebp
pop
clc
jmp
inc
sbb
sbb
lea
xor
ss
and
aam
mov
int
arpl
mov
out
in
sbb
movsb
cmp
sarl
movzwl
test
pop
clc
nop
fwait
lahf
addl
insl
call
shl
jne
das
pop
jno
dec
das
lcall
xchg
dec
int3
push
mov
push
mov
mov
lds
fs
sub
mov
outsb
sahf
sbb
iret
add
push
loopne
lea
add
outsl
das
ljmp
test
out
mov
or
push
mov
cmpsl
gs
sbb
lret
jecxz
add
sub
fistl
mov
cmp
mov
add
imul
dec
divps
xchg
jmp
ficoms
ja
call
lahf
inc
mov
in
xor
mov
pushf
sbb
xor
loop
ret
adc
cs
or
incl
pop
cmpb
imul
adc
clc
das
mov
and
mov
cmp
aam
stos
push
incb
pop
test
cmpsl
jns
jo
pop
outsl
xchg
mov
inc
movsl
dec
ja
jo
jnp
into
sub
fldt
out
inc
rol
push
xchg
outsl
pop
daa
movsl
mov
test
lods
jbe
pop
pop
ror
jle
hlt
or
aad
pop
push
sub
jbe
outsl
lds
icebp
cwtl
or
mov
loope
out
std
mov
loope
ret
fsubrl
jecxz
push
daa
cwtl
sub
push
pushf
pop
ficomps
jae
call
ss
lahf
loop
clc
and
insb
test
dec
push
test
loop
lock
test
js
fs
repnz
add
and
shrl
sub
push
ds
fsubl
mov
pop
js
xchg
xchg
sbb
dec
ret
or
stos
add
xchg
hlt
xorl
aam
mov
sub
unpckhps
inc
mov
xor
out
xor
cmc
pop
sar
xor
jnp
leave
add
ss
je
es
out
movsl
mov
push
test
mov
movsb
xlat
push
pop
sbb
ds
cmpsl
cmp
or
xchg
imul
in
cmp
and
mov
loop
inc
mov
stos
xor
popf
lret
loopne
ret
int3
pop
sbb
sbb
ficompl
test
jb
ds
push
stos
clc
add
jl
repz
cmp
inc
or
xorl
out
mov
jecxz
dec
xchg
cmpsl
sbb
cli
mov
mov
xchg
or
scas
bound
fs
minps
stos
imul
pop
jmp
clc
rorl
mov
out
enter
daa
push
leave
push
cwtl
xchg
sbb
push
sti
clc
mov
push
cmp
fisubs
add
andb
mov
rclb
lods
inc
sti
pop
orb
dec
test
pop
adc
push
fwait
je
jnp
mov
ss
outsb
das
xor
cmc
in
push
cmp
adc
repnz
gs
add
mov
sbb
ds
dec
or
pop
mov
push
and
adc
pop
bound
jae
outsl
es
testb
cltd
scas
jnp
jns
test
lret
and
aaa
rcrl
movsb
mov
jo
fbstp
dec
loopne
aas
mov
and
mov
sar
arpl
and
fwait
xchg
outsb
test
push
shrl
in
dec
push
cmpb
and
cmp
out
xor
xchg
push
in
xchg
std
lods
leave
fbstp
xchg
xchg
lahf
sbb
inc
push
sbb
pslld
popf
out
ret
loopne
jmp
insb
xchg
push
aam
repz
sub
jg
imul
orl
int3
cmp
fwait
push
jp
movsb
xchg
pop
dec
push
imul
xchg
mov
inc
lods
xor
xchg
das
sub
mov
into
push
mov
int
in
mov
bound
xor
inc
mov
xchg
aaa
add
push
sbb
jle
jle
mov
xchg
hlt
in
imul
das
mov
in
aad
jo
mov
dec
scas
xchg
mov
cld
test
enter
mov
sbb
pop
lea
sub
xchg
jae
push
in
pop
popa
jns
and
repnz
dec
jbe
shll
jno
push
xchg
inc
movsb
or
sbb
stc
outsl
xor
jbe
xor
leave
mov
adc
pop
stc
dec
add
add
into
in
icebp
movsb
xchg
nop
das
arpl
sbb
punpcklbw
test
js
ljmp
iretw
sub
aas
jl
pop
je
mov
cmp
push
rorb
sbb
sub
popa
push
insb
aas
popf
push
fiaddl
mov
cmp
xlat
cmp
das
pusha
push
add
push
sub
or
loop
jp
scas
xchg
out
inc
outsl
pop
dec
imul
sub
mov
lret
xor
nop
push
xchg
pop
pop
lods
cmc
mov
dec
jo
inc
in
add
and
mov
into
mov
xchg
fisubs
loope
adcb
jle
fildl
mov
mov
aad
inc
cs
fchs
fcom
jno
repz
pop
adc
mov
xor
orl
xchg
outsb
subl
mov
inc
gs
mov
and
push
imul
enter
std
and
repz
and
call
mov
imul
jb
cld
and
push
mov
sbb
push
inc
andb
ds
push
inc
test
ja
lahf
nop
inc
icebp
and
in
push
adc
loopne
sub
cmc
stos
dec
or
pop
repz
xchg
enter
fisubrs
add
fstl
mov
sub
jle
mov
mov
dec
add
mov
fsub
iret
mov
mov
xchg
inc
mov
lods
mov
push
dec
jl
add
and
fisubrs
aam
call
iret
sub
cmpsb
push
dec
xchg
mov
cmp
push
dec
fnsave
mov
mov
shlb
mov
enter
pop
and
fs
xchg
insb
call
psubsw
cmp
xchg
xchg
rcr
jle
inc
mov
inc
sbb
or
or
test
cli
sbb
int
add
aam
aas
bound
dec
fistl
mov
sub
sahf
or
lock
cmp
aam
and
popf
inc
dec
add
and
pop
sub
enter
cmp
cmp
jno
sahf
jmp
cli
and
fists
sub
sub
jnp
fldenv
adc
pop
imul
shr
sub
shll
leave
adc
push
leave
fwait
ds
pop
lret
adc
int
adcl
in
pop
sub
mov
call
test
sub
jg
xor
dec
lcall
out
out
cs
popa
inc
lahf
and
add
mov
lret
lock
adc
push
push
lret
into
or
cmc
mov
in
movsb
bound
icebp
popf
outsb
sub
xor
jb
sub
cmp
les
xchg
jbe
push
jbe
mov
xor
das
mov
pop
ds
add
add
sbb
repnz
jbe
rorl
pop
and
dec
cmpsl
shlb
mov
pop
cmc
fstl
out
xor
popa
jg
lahf
pop
lock
push
adc
dec
in
push
lcall
fwait
xchg
das
push
mov
mov
mov
mov
or
xchg
or
lock
xchg
pusha
lods
std
or
movsb
das
int
push
scas
cltd
lods
fwait
push
inc
mov
sarl
lea
ds
push
add
jmp
cmp
xor
mov
dec
mov
push
or
mov
adc
sbb
outsb
xor
test
sbb
in
cld
sahf
or
cld
int3
icebp
enter
and
clc
inc
xchg
or
mov
sti
roll
sahf
jnp
or
inc
jnp
aaa
movsb
lret
aas
push
lods
jbe
in
test
lret
sub
inc
repnz
shrl
dec
xchg
mov
xchg
or
mov
orb
clc
aas
mov
add
mov
shrb
pop
xchg
cmp
jb
test
adc
int
xchg
nop
mov
dec
jbe
arpl
cmpsl
push
rol
icebp
fsubrs
xor
lds
scas
dec
jne
ret
inc
mov
in
mov
call
dec
inc
ret
test
gs
cmp
and
test
inc
testb
sub
jle
inc
or
out
orb
mov
xchg
push
in
xchg
xor
xor
insb
adc
and
dec
push
push
dec
or
repz
push
in
dec
dec
push
mov
mov
push
insb
xchg
pushfw
inc
xor
rcrl
out
or
or
cli
iret
mov
add
popl
xor
lods
and
das
imulb
adc
jb
int3
mov
dec
cmp
and
test
rcl
cld
dec
dec
out
xchg
xor
das
fsubrs
arpl
pop
xor
add
or
add
and
sti
nop
jmp
xchg
loop
and
orl
mov
iret
ret
and
dec
lahf
add
xchg
inc
xor
pushf
xchg
inc
inc
movsl
addr16
stos
adc
mov
push
or
stos
mov
mov
lds
pop
adc
add
sub
push
mov
cmp
push
mov
dec
popa
imul
add
pop
aas
mov
and
push
cmp
jns
or
add
pop
pop
ds
cmp
dec
jmp
sub
lcall
call
jne
push
fstps
xor
mov
xor
jbe
ljmp
jge
fisubrs
aam
repz
adcl
imul
loopne
aad
fcmovbe
hlt
pop
add
fs
adc
xchg
push
iret
inc
cmpsb
fstpl
jl
dec
adc
xchg
mov
mov
mov
std
jns
cmpb
mov
add
fidivl
sub
loopne
push
jmp
std
push
mov
cmp
mov
std
clc
icebp
enter
mov
add
sbb
jns
xor
movsb
pop
mov
inc
or
mov
and
lahf
pop
mov
sarb
mov
jmp
push
adc
fisubrs
adc
lret
sbb
in
dec
sbb
sub
mov
and
loopne
fstpt
lcall
pop
inc
ljmp
mov
call
mov
jmp
inc
mov
mov
mov
loop
mov
xor
dec
xor
add
mov
sub
mov
sub
lock
push
jne
pushf
out
jmp
pop
andl
xor
dec
xor
clc
jmp
inc
cli
mov
fsubrl
adcb
add
movsb
fisubrl
mov
leave
xchg
pop
lahf
and
dec
stc
xchg
pop
jg
mov
mov
lahf
pop
dec
push
jae
imulb
lea
and
les
cli
jae
insl
shll
cs
cmp
or
lea
xor
loop
pop
test
add
push
icebp
into
sbb
leave
vpsrlq
out
insl
fcomps
cmpsl
mov
and
shl
dec
and
xchg
jns
dec
jnp
xor
cmc
cmpl
sbb
rcrl
push
push
sbb
xchg
call
movsb
dec
add
das
mov
enter
and
ss
push
rcr
jo
mov
inc
mov
ss
shlb
or
mov
pop
mov
pop
in
push
inc
dec
fisubl
imul
adc
test
fcoml
xchg
mov
pop
or
cli
mov
jno
fsubrs
rcll
insl
push
movsl
pop
int
jmp
jge
pop
xor
daa
mov
hlt
push
flds
mov
int
ds
lret
ret
and
push
cltd
rcl
in
popf
ja
jecxz
mov
mull
fildll
push
add
enter
xchg
test
xor
inc
push
out
mov
xor
pop
jge
xor
aas
cli
xor
pop
pop
sti
xchg
cmpsl
ret
out
ret
je
and
sub
jp
das
push
lret
fisttpl
cmp
rcrl
mov
xorb
or
pop
xor
dec
stos
cwtl
add
dec
popf
add
popa
cmp
adc
popa
ret
inc
xor
or
dec
test
pop
xchg
mov
push
jnp
xchg
pop
add
push
inc
loop
add
rcrb
jnp
inc
and
jae
insb
je
je,pn
mov
js
jnp
push
stos
enter
or
out
dec
clc
xchg
std
gs
stc
pop
into
sub
loop
in
scas
sbb
test
sub
out
lcall
mov
add
test
out
fldl
fs
xchg
test
ficomps
sbb
fists
jb
out
aas
clc
mov
jb
jp
pop
out
es
cld
addl
push
das
lret
cwtl
jmp
adcl
add
jb
daa
mov
fists
stc
mov
lods
scas
adc
jp
out
fcompl
dec
stos
cmc
das
push
cmp
pop
xor
hlt
pushf
and
arpl
jle
and
add
cmp
sbb
push
mov
jnp
inc
sbb
insl
andb
shll
ficoms
mov
push
push
stos
dec
sbb
stos
inc
xchg
call
sti
imul
imul
mov
mov
lret
mov
outsb
jnp
aaa
pop
xor
xor
orl
mov
int
aas
add
movsl
inc
std
push
ljmp
daa
xor
inc
fsts
repz
test
push
mov
ret
add
mov
adc
or
push
popa
aas
andb
dec
mov
pop
dec
jnp
shrl
inc
pop
inc
xchg
leave
xchg
push
xchg
sahf
cmp
inc
test
jge
push
sbb
loopne
add
jle
push
movsb
stos
hlt
push
xchg
cwtl
mov
lds
jmp
fimuls
jle
mov
lret
pop
int3
popf
adc
pusha
loopne
enter
dec
jo
push
inc
mov
or
sub
daa
fnstcw
mov
int
mov
jmp
mov
das
pop
or
adc
sub
pop
in
imul
das
jl
dec
fucom
into
stc
daa
movsl
data16
inc
js
call
add
push
or
jns
shrb
ret
mov
out
pop
or
pop
fdivs
xor
add
jge
pop
adc
negl
pop
incb
jb
imull
push
pop
hlt
jle
push
adc
mov
bound
fldcw
pop
aas
stc
cmpl
or
xlat
arpl
stc
sbb
cs
pushf
cmp
adcb
xchg
clc
in
in
icebp
or
mov
insl
clc
xchg
mov
push
sbb
cli
mov
sbb
je
jg
lret
cmp
sbb
cltd
testl
adc
cmp
inc
mov
bnd
orb
mov
add
fxam
test
cltd
xor
and
daa
negl
pop
icebp
adc
aas
jge
pushl
daa
mov
test
xchg
sub
or
fwait
ljmp
or
fsts
ljmp
or
xor
loope
or
dec
cld
in
adc
cmp
int3
xchg
je
out
jbe
dec
stc
adc
xchg
jne
mov
js
xlat
fs
imul
pop
ret
jne
lods
cmpsl
pop
sbb
sbb
dec
jb
test
jno
push
push
outsl
mov
psrld
cltd
sbb
mov
xchg
std
cltd
xchg
inc
sub
out
mov
out
pop
mov
stos
cs
or
inc
movsb
std
test
mov
cmpsb
cmp
mov
ret
ja
ja
call
xchg
pop
inc
or
sub
xor
xchg
push
push
mov
push
adc
add
ret
ret
mov
iret
adc
pusha
dec
stos
xlat
call
pop
pop
or
lea
cwtl
enter
and
add
inc
and
sbb
xchg
inc
cwtl
lcall
icebp
xlat
or
jmp
jno
sub
aas
scas
arpl
arpl
xlat
lret
mov
leave
jge
jl
ret
or
mov
mov
jbe
icebp
es
cs
dec
outsb
lret
shlb
test
aad
xchg
ljmp
in
inc
in
fiadds
inc
in
ja
movsl
imull
out
xchg
pop
push
shlb
fstps
fildl
adc
push
xor
mov
aad
lea
mov
inc
xchg
lahf
stos
movsl
clc
dec
mov
lods
test
std
mov
arpl
mov
cwtl
call
and
fsubr
daa
sbb
icebp
jno
addr16
mov
mov
ret
xchg
pop
push
jl
inc
dec
mov
mov
mov
xchg
in
jb
fwait
cmp
out
add
push
mov
popf
xchg
or
sub
mov
mov
imul
sub
or
jmp
out
hlt
mov
sti
xchg
and
push
clc
andl
dec
or
mov
mov
sti
imul
js
mov
out
int3
mov
loope
sub
jns
inc
iret
aaa
mov
jbe
xchg
adc
aaa
roll
cld
sub
cmp
pop
repz
addr16
nop
mov
andl
in
xor
and
das
xor
cmp
out
or
or
jge
dec
je
or
mov
shl
sub
dec
mov
mov
imul
pop
cltd
call
lods
jnp
cmp
or
push
cmp
in
xor
push
lods
test
aad
out
cmp
add
dec
or
outsl
fistpll
inc
out
jnp
xchg
cs
dec
nop
dec
adc
xorb
mov
or
mov
stos
push
jmp
pop
lea
inc
push
imul
xor
cmp
lods
loope
ss
mov
xor
mov
jle
or
mov
repz
jae
in
bound
lds
xchg
test
inc
inc
icebp
lea
sbb
add
jae
sub
push
jno
sbb
mov
xor
icebp
sbb
test
pop
call
mov
das
sbb
push
push
add
inc
iret
adc
push
mov
xchg
rol
out
lcall
pop
sbb
push
sbb
xor
xchg
sbb
xchg
mov
xchg
and
dec
repnz
sarl
xchg
cmpsb
jge
pop
sbb
testb
push
sbb
pop
sub
rol
inc
incl
or
mov
das
pop
pop
lea
pop
outsl
push
test
lock
fadd
ret
insb
out
jge
sbb
fcmovb
subl
inc
pop
and
loop
negb
cltd
pop
and
mov
cmp
mov
xor
jo
outsb
pop
imul
sbb
pop
notb
fdivl
pop
mov
cs
adcb
fptan
or
mov
pop
pop
insl
shl
in
jmp
notl
xor
adc
movsb
ret
mov
sbb
jb
rcrb
outsb
and
jp
test
sbb
cmp
incb
aaa
push
es
inc
adc
mov
daa
pop
hlt
icebp
fistl
push
iret
pop
and
add
lock
add
dec
sbb
adcl
out
ljmp
pop
xor
mov
ljmp
int
xchg
test
cmp
xchg
push
mov
in
pop
insb
dec
dec
jns
outsl
jle
pushf
and
add
jp
call
nop
movsb
outsl
ljmp
or
sub
daa
sub
or
mov
movsb
and
xor
jno
add
xlat
xor
in
sahf
fdivr
xorb
outsb
fimuls
sub
enter
push
out
sbb
int
loope
rcrb
and
inc
push
repnz
xchg
subl
test
cmp
cmpsl
sbb
sub
sbb
jnp
aas
dec
or
sub
mov
pushf
xlat
or
daa
outsb
jbe
push
inc
fs
cld
aam
out
out
xchg
aas
in
adc
inc
lret
ljmp
imul
lret
jae,pn
mov
aam
ret
shl
out
sbb
adc
int
and
sbb
cmc
test
jno
repnz
ljmp
adcl
push
mov
stos
inc
push
sbb
dec
subl
repnz
xchg
inc
push
jmp
outsl
xchg
scas
push
sub
movsb
adc
leave
enter
out
ja
add
lods
jns
daa
ret
mov
inc
nop
lret
out
sub
push
inc
mov
stos
cmp
imul
and
mov
inc
jl
fsubrl
movsb
mov
imul
sbb
fs
add
mov
lds
pop
sti
jmp
outsb
insb
jne
adc
movsb
or
xor
sub
pop
das
fsubrs
inc
xchg
cmpl
sub
cld
cmp
icebp
inc
or
or
inc
and
ss
imul
push
loope
jmp
test
sub
lret
push
push
ja
push
rcll
stos
gs
lods
aas
adc
cli
xor
cmp
jbe
fldcw
add
and
xchg
clc
outsb
cmp
insb
or
movsb
pop
xchg
inc
xchg
dec
adc
lret
xchg
or
stos
push
hlt
jo
fmull
jb
repnz
mov
push
xchg
adc
es
mov
pop
dec
aam
jge
push
push
jl
rcl
aam
add
mov
ljmp
sbb
cmp
std
in
inc
xor
xor
cmp
push
lret
lret
or
outsb
lcall
push
iret
mov
movsb
mov
add
or
shrl
stos
inc
mov
pop
pop
adc
fcomp
ret
dec
add
pop
mov
aas
scas
mov
test
pusha
mov
imul
xchg
mov
xchg
and
inc
sbb
or
daa
lahf
jmp
push
mov
jne
dec
cmp
dec
out
ror
sub
fildll
mov
into
adc
xchg
jns
sbb
inc
lret
cltd
jbe
in
insl
cmp
orb
lods
adc
nop
fidivrs
out
divb
je
sarb
cmp
das
loopne
cltd
jmp
test
mov
xchg
lahf
rclb
cmpb
sbb
xchg
mov
ror
mov
out
std
adc
add
push
mov
push
in
jns
jg
cmpsl
stos
jb
imul
and
loop
aas
call
fisubs
into
outsb
and
in
mov
icebp
adc
popf
bound
aas
icebp
mov
sub
movsb
dec
enter
add
arpl
shlb
test
jo
repnz
inc
xor
dec
cmpsl
xor
cmpsb
push
jp
sarl
adc
inc
add
insb
cli
add
loopne
add
adc
adc
iret
dec
test
inc
cmp
push
jecxz
push
cmp
sti
push
mov
in
xor
pop
sti
jne
cmp
inc
mov
sbb
test
sub
xchg
out
mov
lds
scas
into
int3
mov
lret
scas
dec
popf
adc
xorl
cmp
inc
fsubl
aaa
les
subb
push
or
mov
jg
in
xchg
xor
cmp
mov
les
or
aaa
ficompl
sar
adc
test
dec
cmp
pop
xor
testb
mov
std
into
lods
jno
cmp
xor
je
in
stos
cmp
mov
or
and
pop
push
in
sbb
pop
push
xchg
pusha
mov
adc
adc
negb
in
nop
push
and
ret
arpl
pop
lock
cmp
mov
mov
and
push
adc
stc
sbb
adc
lds
adc
outsl
jl
xchg
imul
add
xor
cmp
mov
push
mov
outsl
idivl
mov
mov
mov
push
in
lods
cmpsb
fsubl
xchg
sbb
je
or
nop
push
jmp
jne
cltd
lcall
pop
inc
mov
std
in
shl
in
movsl
nop
sbb
test
push
enter
loop
sub
mov
js
mov
test
nop
mov
jge
lods
xchg
mov
pop
push
rolb
lock
jbe
imul
ljmp
xchg
pop
jnp
mov
add
js
sub
mov
clc
ljmp
xor
ret
test
jle
lcall
lds
pushf
mov
xchg
cli
mov
cmp
or
push
enter
xchg
cwtl
adc
das
mov
xorl
test
add
mov
cmpsb
push
subb
add
repz
xlat
pop
jp
jle
imul
lock
movb
dec
pop
or
aad
inc
push
sar
icebp
push
stos
inc
pop
xlat
cmp
mov
nop
das
add
imul
dec
orb
aad
repnz
cmpl
addr16
dec
sub
cmp
fmuls
std
test
xor
gs
dec
adc
xchg
js
loope
cmc
xchg
fimuls
pop
xor
mov
sub
gs
xor
lret
lret
std
add
test
sahf
xchg
inc
push
ds
test
xchg
out
aad
cld
mov
push
mov
xor
ss
dec
loope
xor
stc
inc
leave
sub
insb
cs
rcl
int
mov
data16
add
pop
lds
mov
int3
pop
lods
lock
mov
in
pushf
std
mov
in
dec
xorl
out
mov
bound
push
es
in
nop
xchg
xor
jle
sub
push
add
loopne
jb
adc
gs
cmpsb
es
mov
inc
sahf
mov
xchg
shlb
stos
pop
insb
jl
push
fwait
outsl
stos
or
adc
inc
adc
xchg
cltd
jle
fsts
and
xor
pop
lock
jnp
mov
aas
adc
es
xchg
pop
mov
clc
jp
fs
mov
jns
shr
testb
pushf
aaa
aas
jp
stc
js
neg
daa
divb
les
mov
ret
insl
lock
push
incl
mov
mov
cwtl
and
or
mov
shlb
das
sarb
pop
out
cmc
iret
scas
addr16
mov
incl
jp
mov
mov
jg
or
jnp
push
dec
xor
pop
pop
xor
mov
cmpsb
jb
fdiv
ffreep
mov
ret
cmc
mov
mov
out
lods
push
pop
lock
pop
fiadds
jo
jno
outsl
scas
cmpsl
iret
into
cmp
decl
lock
inc
push
xchg
xor
inc
cld
dec
mov
dec
stos
jbe
mov
smsw
insl
mov
popf
cmp
jge
mov
popf
xor
mov
sahf
dec
and
push
loope
push
scas
and
inc
pop
test
dec
push
mov
sub
or
inc
mov
addl
push
cmp
shrl
push
push
jecxz
dec
out
xchg
fcoml
mov
cli
jp
inc
push
fidivrs
push
and
cmp
dec
ja
fisubrs
iret
cmpsb
loopne
jp
pop
dec
lret
imul
test
sub
sti
lret
mov
fiaddl
loope
call
mov
stc
jge
xor
adc
mov
fsubl
movb
imulb
jb
pop
mov
sub
les
imul
mov
ret
xor
push
idivb
stos
mov
popf
mov
push
or
xchg
aas
inc
lahf
push
jo
roll
pop
xorb
fwait
push
je
int3
pop
sbb
repnz
rclb
fldcw
stc
xor
push
mov
lcall
or
sbb
loopne
test
int3
movsb
jb
into
rorl
jae
sub
das
sbb
fnstcw
fwait
vdivps
mov
aam
cwtl
sarb
in
fldl
mov
add
sbb
orb
test
pop
sub
gs
mov
or
and
xchg
jbe
divl
dec
xor
ret
cwtl
push
xor
mov
clc
fdivs
call
enter
stos
sbb
js
mov
xchg
jp
push
mov
data16
lds
and
cs
push
dec
and
fcoml
shrl
push
xor
insl
enter
jbe
or
adc
ss
imul
movswl
push
scas
push
sbb
push
cmp
sbb
xor
pop
aas
mov
repz
mov
xchg
xor
movl
push
sbbl
ret
push
lods
mov
pop
xor
inc
sub
cmp
popa
aas
xorl
adc
test
xor
sub
add
aam
xor
push
mov
test
ret
mov
ret
dec
stos
arpl
int3
jp
mov
mov
loop
lcall
enter
fadd
cs
inc
aam
mov
jg
pop
lods
clc
imul
jl
sub
dec
sub
call
popl
lods
outsl
mov
arpl
dec
out
sub
mov
mov
iret
scas
add
pop
lret
and
jb
shll
scas
xlat
inc
dec
jmp
pop
mov
lods
std
sub
cs
add
shll
fs
xor
push
cs
jno
or
push
in
aas
cli
pop
sub
test
cmp
sub
in
jns
adc
and
fsubl
mov
adc
or
sbb
popf
insb
data16
hlt
loopne
jg
mov
mov
xchg
jbe
arpl
inc
nop
rcrb
ljmp
jecxz
add
sub
push
decb
testl
mov
fdivrl
mov
cmp
mov
push
int
mov
mov
les
out
cmpsl
push
mov
inc
cmc
or
mov
lret
pop
jmp
sahf
outsl
repz
ja
call
ja
movsl
shll
xchg
clc
cltd
mov
inc
xchg
inc
and
push
lret
pop
outsb
shlb
lods
push
cld
test
mov
adc
jecxz
or
aaa
xor
out
and
clc
insl
add
adc
and
xchg
pusha
pop
inc
cmp
fwait
xor
in
mov
dec
int3
pushw
test
pop
lods
pop
fstl
pop
inc
dec
adc
push
mov
jnp
add
push
dec
in
mov
inc
pop
movsl
pop
cmp
mov
nop
popf
aas
hlt
and
inc
dec
xor
scas
mov
dec
dec
cmp
mov
sub
and
and
xchg
and
and
push
cmp
jge
add
aad
mov
mov
xchg
popa
pop
push
orl
gs
push
ss
fsts
mov
addr16
add
mov
mov
add
dec
sbb
cwtl
js
add
jge
jb
dec
jne
fldt
sbb
and
add
fldl
pop
mov
push
xor
sbbl
pop
mov
push
pop
mov
mov
xor
cmp
mov
mov
jmp
fcom
xchg
pop
inc
aas
jmp
xchg
xor
es
fwait
shll
cmpsb
adc
addr16
js
mov
or
dec
lret
cmpsb
sbb
jbe
push
cmpsb
or
sti
and
dec
inc
inc
pop
inc
xor
add
cwtl
mov
sub
jbe
mov
push
outsb
js
sbb
imul
mov
fwait
xor
lea
sbb
dec
mov
jge
inc
ss
test
cld
or
stos
nop
ret
inc
jo,pn
lods
xor
shl
inc
ficoml
movsl
insb
xor
sub
in
push
mov
sbb
jo
adc
loopne
mov
pop
scas
rclb
dec
dec
sbb
cmp
test
add
cmc
das
outsb
mov
imul
cmp
popa
ds
push
mov
inc
mov
mov
sub
lock
ret
popa
imul
insb
fimuls
sub
adc
sub
xchg
and
add
jmp
ret
lock
mov
orl
fwait
out
xchg
xlat
mov
repz
pop
rcrb
jg
call
adc
mov
sti
lds
mov
push
lds
fsubrl
scas
mov
repnz
dec
popa
pop
mov
into
inc
xor
das
movsl
add
in
shll
mov
xchg
sub
in
adc
icebp
je
aam
add
cld
sti
push
mov
add
push
loop
push
jnp
aas
and
and
int3
leave
and
dec
xor
nop
cld
test
int
cmp
and
out
add
enter
jmp
clc
hlt
mov
dec
pop
lods
lods
jle
pop
jno
sub
jge
hlt
push
mov
or
lock
popf
xor
aam
push
xlat
jl
lds
cmp
jb
hlt
xchg
mov
shrl
sahf
adc
xchg
add
notl
js
enter
shr
mov
cmp
and
xchg
dec
jbe
cmp
mov
lock
mov
mov
mov
ret
cmp
mov
xchg
iret
push
leave
in
out
movsl
adc
cli
dec
pop
inc
jp
sti
leave
mov
cmpb
mov
sbb
cmp
add
sahf
fwait
leave
mov
cmp
imul
add
adc
fs
xlat
les
aas
stos
cmp
daa
cmpsb
mull
popa
jecxz
cmp
out
hlt
pop
call
or
adc
shlb
jge
inc
pop
test
out
out
xor
lea
xor
inc
sbb
mov
cmp
sub
push
push
jmp
mov
push
nop
adc
add
dec
cld
fldz
data16
sbb
or
pushf
into
jmp
outsl
jecxz
xchg
jp
jg
mov
cmpsb
iret
loop
or
jecxz
fistps
xchg
and
fldcw
pusha
jecxz
daa
pop
movsb
test
push
mov
cli
cmpsl
pop
jnp
inc
pop
add
pop
pop
push
sbb
xchg
loope
mov
xor
pop
insb
cmpsl
xchg
jmp
test
loope
inc
aad
jb
dec
jp
nop
mov
in
ficompl
popf
mov
out
cmp
jne
push
sub
shrb
jns
fwait
pop
push
in
pusha
jp
repz
stos
jno
mov
pop
fstps
mov
mov
scas
xchg
rclb
dec
xor
push
lods
add
jg
xchg
ds
xchg
dec
inc
mov
lods
mov
jmp
mov
sahf
fildl
mov
fwait
les
adc
push
push
movsl
imul
and
in
daa
dec
cmp
jle
jb
mov
pop
movsb
mov
mov
inc
mov
in
call
xchg
xchg
fists
das
cmp
dec
out
add
dec
pusha
jne
or
mov
loop
into
mov
out
pop
arpl
push
in
dec
jecxz
sbb
leave
stc
xorl
xchg
test
cmp
rol
out
push
dec
xchg
add
pop
jns
cmp
pop
mov
sbb
lea
mov
rorl
pop
test
pop
or
xchg
in
addr16
cmpsl
mov
sarb
xor
imul
cmp
jno
mov
mov
ja
cmpsl
aaa
jg
test
and
sub
jns
fistpll
test
push
loope
ret
lahf
xor
jmp
dec
lods
and
push
mov
xlat
aaa
xchg
mov
jge,pt
or
xor
loop
add
shlb
pop
ja
std
out
in
sub
cmpsl
sub
pop
jge
jae
sbb
pop
icebp
dec
push
mov
mov
in
fisubrl
les
pushl
jp
rol
dec
in
rcpps
fbld
ret
addb
sub
test
adc
mul
fwait
pop
ret
lds
enter
pop
jns
mov
mov
mov
fsubr
aad
dec
pop
lods
sarb
sbb
lahf
sbb
xor
call
mov
or
push
outsb
ret
pop
sub
negl
addr16
ja
sbb
movsl
cmp
fcomps
jge
comiss
cmpsb
clc
fwait
mov
and
xchg
movsl
adc
aaa
push
inc
stos
push
jae
xor
xor
fdivl
out
jae
or
xchg
stos
push
mov
ret
and
mov
loope
add
inc
iret
dec
movsl
lea
cmpsb
aad
add
hlt
dec
loop
cmp
inc
into
je
jno
daa
nop
loopne
ljmp
or
cmpsl
rcrl
xchg
adc
pop
mov
sarl
cltd
adc
loopne
notb
push
insl
test
jecxz
push
jmp
and
loop
inc
out
cmp
psubusw
jl
imul
xchg
jo
xchg
sahf
addr16
mov
repnz
push
xchg
cmp
dec
xchg
xlat
sub
or
xchg
jle
jg
xor
call
mov
ret
outsl
sub
insl
rcll
push
pop
lock
pop
mov
push
and
or
pushf
setg
or
loop
mov
nop
pop
sbb
cli
ret
pop
add
fdivs
lret
mov
dec
ret
imul
or
push
cmc
jg
sbb
and
mov
cmp
jae
iret
push
cmp
icebp
sbb
inc
sub
sbb
mov
mov
inc
stos
mov
pmaddwd
shlb
inc
cmpsl
push
adc
sbb
xchg
int3
jnp
mov
mov
les
xor
clc
xor
lods
mov
mov
aaa
xorb
fs
xor
xor
jb
jge
inc
movsb
pop
lock
andl
inc
clc
dec
adcb
mov
pusha
cwtl
or
lea
or
jmp
test
pop
add
lret
cmp
je
ss
or
fidivrs
cmpsb
sub
mov
lea
adc
and
pop
sbb
mov
mov
enter
sahf
cmpsb
dec
inc
jns
idiv
fdivrs
addr16
mov
inc
mov
jmp
jge
stos
les
mov
int3
nop
out
xchg
inc
jno
cld
xchg
out
imul
jnp
adc
push
inc
inc
out
in
or
or
and
add
cwtl
inc
mov
mov
mov
fcoml
inc
loop
enter
mov
mov
pop
shlb
sub
scas
cbtw
adc
out
call
cli
and
cld
mov
jmp
fnstsw
cwtl
jle
and
pusha
cmpsl
jne
pushf
shl
mov
imul
push
insb
dec
mov
mov
jmp
xor
rol
pop
aaa
addr16
cmp
popf
jno
add
mov
adc
scas
push
inc
sub
imul
jnp
fwait
add
xchg
stos
inc
pop
push
adc
loope
pop
daa
adc
adc
clc
rep
cmp
je
outsl
mov
xor
scas
or
cmc
xchg
imul
add
gs
jae,pt
lock
movsb
lods
pop
mov
movzbl
and
and
add
or
test
lret
mov
add
mov
xor
add
test
jnp
mov
out
or
dec
mov
ljmp
push
xchg
popf
outsb
pop
jle
ja
xchg
jo
ss
adc
or
jg
and
mov
sahf
repnz
sarb
cld
push
mov
mov
mov
std
loope
jns
aam
inc
fldcw
jne
movsl
sbb
jge
adc
or
repz
mov
xor
pop
xor
and
inc
daa
jnp
sbb
fsincos
mov
decl
fsubs
sti
mov
popf
rclb
div
sti
dec
pop
popa
push
add
jnp
pop
popf
aam
out
mov
gs
push
lahf
dec
pop
stos
sub
xchg
aam
jle
loopne
mov
nop
bound
lahf
les
cwtl
xchg
imul
loope
fimull
xor
outsb
mov
addr16
sub
or
add
test
fstpt
adc
out
pushf
lcall
pop
shll
xor
adc
push
jno
pop
inc
mov
lahf
fimull
fbld
das
out
or
cltd
out
adc
in
cmpsl
xor
idivl
ret
sub
testb
push
insl
negl
lcall
sbb
test
mov
sbb
leave
sahf
cwtl
mov
mov
push
ud0
popf
sbb
adc
mov
aaa
xchg
add
jle
lcall
jle
mov
pop
sbb
and
inc
dec
cmp
aas
jne
lock
int
mov
sbb
out
dec
in
out
daa
push
jb
adc
xchg
ds
fnstsw
cmpsl
cmpsb
lret
loop
or
inc
sub
xchg
cld
inc
and
arpl
in
xorb
dec
aaa
xchg
pop
sbb
dec
mov
mov
mov
add
pop
stos
bound
cmp
push
push
mov
subl
xchg
test
mov
insl
leave
mov
imul
mov
add
sbb
push
repz
cmp
dec
mov
sahf
outsl
adc
cmpsb
or
mov
insl
mov
shl
lock
je
jl
hlt
cmp
imul
adc
out
stc
jnp
xchg
mov
aad
inc
aad
cmp
fnstcw
or
div
mov
test
pop
shl
add
sub
and
divl
in
add
jo
cmc
imul
cld
push
bound
mov
pusha
in
xchg
into
mov
push
mov
pusha
loopne
cmp
pop
ss
sbb
sub
fwait
sbb
imul
jbe
andb
push
lahf
pusha
das
inc
loopne
movsb
add
sbb
insb
mov
sbb
je
dec
fnsave
sbb
xchg
dec
sbb
jb
cmpsb
sbb
rol
popf
mov
iret
pusha
popf
push
mov
sbb
mov
in
test
mov
cltd
ffree
sub
orl
mov
jne
call
lret
data16
and
les
sbb
or
and
sbb
fdivrs
xor
xchg
in
mull
add
movsl
cli
xchg
les
stos
stos
mov
jns
dec
and
or
mov
out
pop
adc
ret
pop
popf
sbb
jae
mov
xor
xchg
pop
into
cmp
bound
lret
adcb
aaa
mov
pop
js
ret
fisubl
out
push
dec
out
adcb
in
filds
mov
sbb
das
imul
inc
jg
mov
pusha
sbb
cmp
stos
in
pop
jb
adc
fstps
mov
push
push
push
out
mov
jo
cld
in
call
insb
jp
fcmovnb
jnp
push
pop
jmp
and
insb
inc
ret
mov
in
push
dec
jp
mov
push
xor
sub
scas
mov
sbb
xor
add
sbb
decb
pop
loopne
lret
cmp
gs
jbe
ss
sub
lea
lret
sub
or
inc
movsb
mov
sub
pop
dec
pop
int3
pop
movsb
mov
inc
arpl
popa
jo
xor
mov
cmp
loope
xchg
addr16
push
outsb
sbb
jb
out
ret
sub
lret
pop
add
or
xchg
in
ret
cmc
out
inc
mov
jp
xchg
jno
adc
jmp
es
xchg
sbb
ret
pop
pusha
cltd
test
pop
mov
iret
cmp
in
in
cmp
loopne
ja
je
ud1
push
push
out
fdivs
mov
stos
push
pop
and
add
dec
test
enter
and
loope
fucomp
pop
or
mov
dec
movsb
pop
xchg
icebp
cmp
jmp
xor
push
inc
test
xchg
in
push
mov
enter
ss
lods
add
xchg
jl
pop
rclb
pop
loop
jbe
push
sub
xchg
jg
rorl
pop
fnstsw
aaa
jb
out
sbb
push
sbb
mov
leave
loopne
or
in
xor
dec
push
cmpl
fucom
mov
or
jmp
or
adc
xchg
cli
cs
rorb
testl
hlt
hlt
ja
icebp
sarb
jecxz
mov
cmpsb
fs
pop
or
test
popa
pop
inc
sbb
add
sahf
cli
sbb
or
lods
roll
pop
int
jge
mov
cltd
or
xchg
dec
loope
pop
icebp
mov
cld
inc
mov
add
lahf
push
jno
or
dec
pop
addr16
jae
ljmp
xlat
shrb
shlb
dec
pop
mov
cmc
or
push
lahf
je
sti
test
pop
push
sbb
pop
dec
or
ds
cld
imul
push
sub
lock
popf
fwait
mov
sub
xor
jp
fisubs
xchg
shr
testl
pop
clc
les
jg
mov
push
inc
out
lretw
test
sbb
push
arpl
hlt
ret
out
pop
dec
lcall
les
sub
adc
inc
xor
ss
dec
sub
popf
aas
aam
xor
xchg
sub
add
nop
or
aad
popa
adc
xchg
and
pop
stos
xchg
cmpsl
sbb
enter
loope
clc
cmp
pop
sti
mov
nop
jle
xor
xchg
push
les
or
or
mov
xchg
lods
rcrb
cmpsl
add
data16
cmpsb
pop
or
out
std
jno
fwait
sub
cld
xchg
sbb
ja
outsb
dec
inc
jecxz
xor
sub
push
addr16
dec
cmpsl
mov
add
jge
mov
sahf
cld
mov
or
jecxz
gs
fisttps
ret
add
xor
pushf
sar
mov
ja
cmpsl
test
pop
pop
dec
fs
in
push
xor
mov
push
loop
stos
arpl
cs
pop
mov
sub
lock
xor
fadds
clc
popa
xchg
mov
adc
test
cmpsl
movsb
mov
and
inc
pop
sub
ficompl
cmp
push
mov
add
xchg
pop
dec
xchg
jbe
subl
dec
and
fidivrs
repz
fcmovnu
and
les
xor
bound
lea
xchg
adc
and
das
inc
xchg
adcl
bound
jecxz,pt
push
cmc
jae
xlat
movb
mov
adc
in
jl
push
into
jle
sbb
mov
dec
jle
dec
jp
mov
mov
ret
lret
and
lret
fwait
or
fs
adc
push
push
push
jl
in
jl
xlat
mov
xchg
adc
and
sub
rcr
xchg
xchg
xchg
sub
jno
clc
and
in
push
cltd
fmulp
shll
sbb
pop
pop
pop
fidivs
pusha
pushf
xchg
aaa
in
sahf
xchg
sub
incb
mov
lahf
daa
pushf
push
mov
xchg
adc
cmpsb
push
inc
sub
xchg
sbb
adc
xchg
scas
cmp
cmc
pop
dec
lds
push
jecxz
in
loope
aaa
add
sbbl
jecxz
cltd
mov
enterw
sub
pop
pop
xchg
cmc
bound
mov
adc
dec
lock
testb
fistps
lods
daa
pop
mov
dec
das
mov
sbb
popa
mov
mov
sbb
addr16
aaa
lahf
cmp
xor
dec
mov
push
dec
sub
mulb
and
push
arpl
lahf
jl
xor
andb
popa
sub
mov
inc
leave
jno
mov
lcall
movsl
sub
pop
mov
pop
adc
es
shlb
push
stos
pop
mov
jno
in
scas
mov
call
jae
xchg
jne
jge
adc
scas
lock
aam
insb
aaa
jbe
and
bound
dec
add
push
sub
dec
mov
mov
fs
shrl
inc
pop
sub
jecxz
add
rcll
dec
rcr
in
dec
gs
xchg
xchg
xchg
paddq
repz
aaa
mov
add
add
jmp
stos
and
lea
scas
loope
adc
push
or
aas
cmp
jl
mov
xor
ds
mov
je
movsl
sub
repnz
sarb
test
add
and
orl
add
xor
cmp
push
pop
dec
lret
pop
mov
mov
mov
sub
and
enter
push
add
sahf
aas
call
lret
or
mov
adc
icebp
in
les
add
je,pt
sbb
loop
bound
jb
push
pop
scas
inc
xchg
stos
adc
lahf
mov
inc
lock
inc
cmc
push
push
xchg
lods
push
adc
push
xor
mov
outsb
push
lret
hlt
dec
mov
loop
adc
jmp
dec
sbb
shll
daa
jne
outsl
push
lock
or
adc
test
xchg
mov
stos
fucomp
repnz
data16
mov
add
sub
fcmovnb
mov
lds
xor
stos
loop
push
out
fcoms
imul
in
push
das
jmp
rcll
dec
shlb
push
push
adc
insl
outsl
outsb
in
xor
push
sub
sub
insl
or
das
push
cli
sub
les
jb
movsl
jne
sub
add
idiv
repnz
out
fstpl
popf
arpl
push
ljmp
roll
adc
out
test
and
jbe
aaa
mov
and
into
icebp
ljmp
iret
and
outsl
push
addr16
xor
icebp
test
cmp
pop
mov
lahf
xchg
or
dec
leave
or
mov
push
out
rcll
jmp
ljmp
popf
xchg
adc
clc
xor
or
inc
fs
loope
repz
xor
push
mov
mov
lock
sub
bound
mov
mov
movb
jb
push
dec
mov
jg
testb
jo
cmpsl
cmpl
xorps
rcrb
jnp
mov
stc
and
sarl
cltd
mov
int3
orl
xchg
inc
mov
inc
pop
mov
mov
ficompl
in
lock
push
xor
cs
pushf
mov
xor
test
mov
mov
loopne
fcmove
and
mov
rcrl
cwtl
scas
pop
push
movsb
sbb
fisubrs
dec
cmc
dec
int
out
loopne
sub
fwait
mov
notl
fnstenv
xor
in
mov
mov
xor
pop
or
jne
frstor
lret
repnz
insl
int3
mov
adc
faddl
enter
add
into
cmpsb
push
je
gs
cmp
ss
push
mov
or
jecxz
inc
ret
cmc
cli
sti
mov
icebp
mov
or
scas
jmp
cld
mov
aad
inc
jmp
cmp
cld
jb
and
jl
rcl
sahf
xchg
mov
in
lahf
add
sub
sub
lds
jecxz
bnd
dec
sbb
or
insl
pop
or
and
mov
loop
addr16
popa
adc
test
stos
lahf
mov
mov
lds
cmp
jecxz
adc
mov
dec
div
xor
addr16
daa
dec
cld
adc
gs
xor
and
add
dec
nop
mov
sti
mov
inc
xor
pusha
out
sub
icebp
jecxz
xchg
js
jl
xor
out
push
std
andb
lcall
push
cmp
add
pop
sahf
mov
das
daa
inc
push
pop
insl
inc
insl
in
mov
cld
nop
mov
call
stos
mov
xor
jo
hlt
push
pop
lock
scas
mov
jo
sub
jb
das
sub
mov
sub
sub
mov
cmp
push
imul
lods
add
dec
gs
orl
adc
out
xlat
xchg
push
std
shl
jb
mov
test
pop
cltd
push
scas
aas
adc
rcrl
sub
dec
in
mov
andb
mov
test
cmpsl
lds
sbb
aas
dec
pop
sbb
sbb
je
mov
or
aas
or
cmp
mov
ret
sahf
test
cmp
lds
inc
out
insb
jge
mov
xlat
pop
movsb
int
mov
ljmp
and
loope
add
jb
gs
sti
test
mov
ret
cmp
cmp
movsl
scas
or
dec
lret
out
inc
enter
pop
mov
notl
mov
subb
clc
subl
inc
push
test
mov
adc
aaa
sub
sbb
ret
aas
aaa
ret
jle
xchg
call
mov
jmp
insl
repnz
inc
dec
ds
cmp
sbb
adc
dec
xor
push
inc
or
or
mov
add
jno
push
enter
fmull
fxam
inc
push
out
rclb
scas
jecxz
xchg
mov
aam
in
in
sbb
mov
int3
fwait
adc
int3
mov
mov
mov
push
sarb
adc
stc
or
mov
sub
das
in
js
ret
jnp
mov
out
fisubl
leave
mov
sbb
dec
mov
daa
mov
out
movsb
mov
jo,pn
push
push
add
inc
adc
adc
rolb
inc
call
jo
cmpsb
mov
xchg
cmp
mov
jl
jp
int3
and
je
cmp
shrb
dec
mov
aad
adc
xor
lods
movsb
jg
cmp
adc
push
xor
sub
cmp
pop
jmp
fcmovbe
or
leave
jo
sbb
shll
jp
outsl
sbb
push
mov
push
push
dec
cmpsb
add
mov
adc
incl
arpl
pop
lea
adc
lret
push
in
mov
leave
js
add
cmp
push
stos
roll
xlat
pop
add
cltd
push
push
pop
outsl
les
mov
flds
lock
cltd
aam
jno
shrl
testl
enter
cmp
fildl
jns
and
jno
push
sbb
clc
daa
or
xor
movsl
dec
sbb
sbb
push
add
cs
mov
dec
lods
mov
cltd
loope
mov
cmp
in
xchg
sbb
stos
jns
cmp
inc
jecxz
loope
mov
xor
call
push
jg
repz
sbb
add
push
add
ret
push
mov
add
orl
outsl
imul
ret
pusha
xchg
jle
fucomip
mov
test
push
xor
movsb
cmpsb
jns
fbld
cmp
pmulhuw
adc
push
xor
mov
inc
mov
shrb
and
outsb
dec
jns
mov
cmpsb
push
add
add
ret
dec
mov
push
add
insl
pusha
mov
mov
or
in
push
add
sbb
add
mov
sbb
incb
jns
or
jecxz
pop
mov
dec
mov
mov
nop
scas
pusha
push
shlb
and
repnz
sub
std
mov
push
insl
subb
mov
nop
loope
sbb
shl
sbb
mov
movl
dec
ret
xchg
aaa
xchg
mov
mov
lret
hlt
jno
test
iret
jb
pop
mov
ja
mov
dec
jb
adc
dec
ret
in
mov
adc
negl
aad
xor
je
inc
jbe
fldt
cli
sub
jmp
out
ss
add
lods
xchg
mov
filds
std
call
insb
inc
bound
pusha
repnz
ljmp
mov
jns
xor
sub
mov
mov
mov
mov
sbb
lea
pop
loop
xchg
xchg
scas
xchg
pop
jnp
mov
xchg
adc
dec
cmp
stc
lahf
jp
mov
daa
sbb
sbb
out
or
mov
or
push
das
pop
cs
xor
das
adc
faddl
repz
fists
dec
push
test
inc
jle
stc
xchg
pop
and
sub
mov
pop
ror
xor
out
out
loop
cmp
mov
and
push
jb
sub
push
mov
rolb
push
lcall
xor
mov
dec
pusha
push
stc
or
loopne
xchg
imul
fidivl
push
mov
xlat
inc
cmp
mov
les
add
pop
aas
loop
int
fcmovu
sti
test
shll
cld
outsl
loope
xor
mov
icebp
in
adc
push
sbb
mov
dec
sbbl
lds
push
push
xlat
cmpsb
fnstenv
daa
inc
xchg
jbe
pop
aas
bound
icebp
call
or
xchg
insb
rcll
out
jge
arpl
pop
xchg
jne
fimuls
pop
push
mov
stc
cmp
jecxz
lock
add
jle
mov
aas
sub
lahf
stos
dec
jecxz
jnp
mov
outsb
and
xlat
push
fadds
mov
mov
std
xor
int3
push
data16
pop
or
and
push
mov
ja
sbb
xchg
xor
int
test
mov
dec
lret
loope
adc
jecxz
shrb
vmovupd
lds
and
popf
ror
jns
lods
ret
psubusb
out
pop
xor
loopne
or
xor
mov
stos
ljmp
pusha
pusha
std
loopne
movsl
xchg
test
es
jnp
cmpsb
xor
or
gs
lcall
mov
out
cmp
aam
ficoms
in
jne
jo
jle
jne
sbb
mov
inc
rcrl
jp
cwtl
mov
mov
mov
jne
dec
movsl
dec
or
jns
dec
xchg
call
mov
push
sub
gs
xchg
jp
mov
loop
xor
rclb
and
or
ret
js
cmp
or
push
imul
inc
clc
push
adc
and
add
jge
mov
arpl
push
sub
lock
lea
or
dec
cltd
faddl
stc
aad
and
dec
fstp
adc
dec
mov
xchg
aaa
lahf
ret
data16
frstor
leave
sti
or
sahf
xor
in
or
inc
punpcklbw
pop
lock
and
nop
push
out
jnp
mov
push
or
xchg
jo
stos
fwait
arpl
cld
cmp
stos
subl
lock
daa
mov
leave
jg
jne
pop
sahf
sbb
dec
and
fucomi
lea
or
in
jmp
scas
data16
hlt
ret
mov
aaa
fdiv
inc
pop
sub
add
testb
sbb
loopne
mov
fldcw
push
cmpsl
inc
xor
xor
xor
push
iret
stos
cmp
aas
xchg
fistpl
sti
mov
test
popf
xchg
jg
loopne
xchg
and
xchg
dec
fbld
inc
int3
mov
idiv
inc
ret
xor
cmp
insb
comiss
cmpsl
aad
pavgb
push
mov
bound
sbb
std
sbb
gs
dec
cmp
sub
in
xchg
jo
int
or
xchg
stc
repnz
pop
lods
loope
xchg
sbb
mov
pusha
and
xchg
mov
loopne
std
or
jl
mov
jle
xchg
daa
out
sbbb
inc
add
push
adc
in
mov
inc
sbb
mov
xchg
pop
lods
dec
bound
testl
insb
pushf
hlt
jmp
inc
out
test
push
into
mov
testl
dec
cs
xchg
outsb
or
sarb
or
mov
pop
rdmsr
insl
push
push
xchg
mov
pop
rorb
push
out
jb
call
inc
inc
jge
mov
fst
mov
mov
in
dec
stos
sub
mov
and
sti
inc
rcrb
mov
bnd
dec
in
inc
iret
std
nop
mov
jnp
cmp
ljmp
xchg
sti
jbe
sbb
inc
aas
mov
loopne
mov
xchg
bound
or
mov
jge
ss
or
xchg
dec
movsb
adc
sub
add
les
loope
ds
dec
leave
cld
mov
pop
or
jmp
dec
int3
int
rcrl
xchg
pop
mov
call
pop
mov
xchg
mov
mov
cmc
leave
divl
jae
add
aad
push
jae
rol
push
cli
add
inc
add
dec
inc
jge
imul
lahf
add
jmp
cmp
insl
pop
mov
inc
and
mov
adc
in
pop
cmp
mov
or
cmp
insl
add
test
mov
mov
mov
pushaw
adc
popf
aaa
inc
loop
add
inc
pop
out
frstor
push
ret
popf
add
icebp
pop
add
mov
test
add
pushf
repnz
cmp
mov
int3
mov
clc
cmp
sbb
arpl
cld
push
and
cmp
dec
xchg
fdiv
lahf
out
fs
dec
xor
and
lahf
dec
mov
mov
mov
fimull
leave
fucompp
inc
add
icebp
addb
inc
mov
inc
cmc
push
icebp
xchg
repz
push
ja
lahf
jae
inc
sub
sub
pop
outsb
xchg
sbb
inc
xchg
or
shlb
sarb
push
cmc
lock
test
icebp
push
or
scas
adc
lea
mov
into
or
pop
repnz
xchg
pushl
lods
mov
xchg
dec
or
mov
jnp
push
aam
cmc
sbb
or
cmc
cmp
jae
mov
arpl
jbe
clc
sarl
lret
stos
or
sub
cs
notb
repnz
jge
inc
mov
sbb
orl
pushf
and
test
sub
shll
iret
fs
sub
inc
jmp
fimull
popa
push
repnz
stos
repnz
and
mov
lcall
ljmp
or
jecxz
addr16
inc
mov
inc
dec
sub
in
stc
stos
push
pop
cmp
adc
xchg
lea
aas
jle
mov
push
shlb
push
cmc
in
mov
rcrl
push
mov
lret
and
nop
push
inc
into
lock
sbb
mov
std
lds
pop
push
lret
scas
jg
xchg
enter
xor
loopne
fildll
push
rcll
mov
addb
cmpsl
cmp
rep
outsb
mov
in
hlt
jne
jo
lods
les
sub
push
inc
fistps
xor
push
sahf
add
sbb
mov
outsl
xlat
and
insl
and
aam
imul
lock
pusha
xchg
dec
fldcw
insl
sbb
push
push
gs
adc
pop
ds
sub
lret
and
xlat
outsb
sbb
push
inc
xor
mov
pop
sbb
rcrl
push
fsubrp
xor
xchg
inc
fistps
test
xchg
pop
imul
scas
daa
mov
jns
test
enter
test
sarb
mov
push
pop
scas
lods
add
mov
outsb
push
mov
insl
cmc
pushf
lds
fucomp
jle
xchg
or
mov
dec
mov
push
mov
call
jge
mov
out
sbb
and
shrl
mov
movsb
adcb
inc
cmp
sbb
push
adc
inc
lods
or
mov
pop
cmpsb
jp
xlat
jbe
cmp
leave
gs
cmp
js
sbb
mov
jg
rcl
xor
mov
fisttpll
sub
pop
cmc
mov
popf
into
insb
aam
sbb
mov
int3
sahf
rolb
jecxz
pop
out
push
test
cmp
xchg
mov
mov
fcoms
cmp
add
pop
pop
in
adcb
iret
out
shrb
ret
xchg
ja
flds
sar
fs
jno
sub
enter
xchg
dec
das
mov
xchg
mov
out
dec
xor
push
and
lret
xor
arpl
add
pushf
decb
dec
shr
add
mov
inc
mov
push
pop
cmp
dec
jbe
cld
mov
sbb
insl
out
sbb
ja
leave
push
inc
inc
and
dec
mov
inc
mov
mov
mov
and
shll
pop
xor
out
stc
mov
sbb
imul
fisubrl
xlat
gs
pusha
rcll
lahf
movsl
cwtl
icebp
out
mov
mov
xchg
mov
xchg
outsl
and
fiadds
sub
sarb
pop
movsb
push
loope
dec
mov
cmpsl
sub
xchg
xor
iret
pushf
cmp
ror
test
mov
cltd
jno
sbb
dec
jae
scas
out
repz
shll
cltd
sbb
push
xlat
scas
push
add
push
sbb
push
cmp
and
sti
push
fwait
gs
movsl
xchg
mov
repz
lret
cmpsl
imul
loope
adc
ja
xchg
mov
gs
stc
or
sbb
mov
mov
into
mov
std
jecxz
cwtl
dec
loopne
push
stos
jne
add
outsb
packuswb
pop
add
adc
mov
in
cmovb
sbb
adc
outsl
daa
inc
xor
gs
add
jnp
fiaddl
jns
imull
xchg
scas
mov
push
mov
in
negb
push
jne
aam
mov
inc
test
insb
xchg
xor
cmpsl
pusha
je
inc
cld
imul
cmc
testb
add
das
shll
xchg
pop
inc
fidivrl
cld
mov
out
inc
add
push
aam
in
test
sub
push
xchg
int3
lea
test
dec
and
jo
and
jg
push
xor
mov
mov
ss
dec
test
jmp
push
imul
imull
or
mov
stc
mov
mov
adc
jp
cmpl
stc
arpl
or
clc
loopne
out
and
imul
mov
sub
xor
xor
cwtl
jns
fldt
out
push
jne
jg
call
movsb
sub
add
jns
jg
xchg
les
sahf
xor
inc
notl
dec
and
pop
mov
insb
lea
popa
adc
and
or
shrl
xchg
add
cmp
aam
mov
dec
fiaddl
int
hlt
add
adc
mov
std
out
pop
mov
cmpb
jecxz
rclb
xlat
jnp
sarl
call
dec
xchg
mov
js
lds
lcall
outsl
ja
ss
adc
and
lahf
inc
rorl
lret
je
cmpsb
jno
dec
push
fildl
cmp
and
or
lret
pop
adc
dec
fistpl
repz
sbb
scas
bound
mov
cs
xlat
xchg
rcrl
call
pushf
mov
add
cmpsl
rclb
sub
fsubr
pop
sub
mov
gs
inc
sbb
or
insb
mov
push
mov
mov
xor
std
xor
push
jecxz
mov
adcl
je
lahf
movsb
add
mov
cmpsl
clc
mov
inc
cwtl
negb
fimuls
dec
xor
sub
sbb
pop
add
mov
adc
mov
push
aad
mov
xor
cmp
inc
mulb
inc
orl
mov
adc
dec
xor
mull
outsb
sahf
pop
in
push
mov
les
stos
dec
daa
sarl
xchg
mov
adc
xor
lret
mov
in
lea
stos
inc
push
xor
mov
in
bnd
stc
lods
or
out
popa
out
or
and
sahf
cltd
imul
leave
scas
ss
shl
ret
and
sbb
fbstp
or
sti
imul
lods
ja
sub
enter
pop
in
daa
das
lret
or
pop
es
test
es
jb
xor
or
dec
mov
js
mov
mov
loope
js
lods
test
cwtl
xor
dec
push
mov
mov
fnstcw
xor
idivl
add
jle
jnp
mov
lret
adc
arpl
setle
xor
xor
add
push
add
bound
pop
adc
fiaddl
lcall
stos
jmp
push
push
ja
adc
mov
lahf
push
cmpsl
mov
mov
push
sbb
inc
sbb
ss
pusha
and
or
sbb
and
jb
mov
pop
in
pop
outsl
inc
add
cwtl
jmp
pop
pop
sahf
and
ret
leave
icebp
cmp
sbb
pop
adc
mov
jae
sbb
and
into
test
rclb
push
push
or
repz
push
mov
rorl
xchg
mov
adc
push
dec
or
lcall
sarb
xchg
pop
sbb
pushf
insb
and
int3
push
fs
mov
pushl
or
std
pop
lcall
push
outsl
outsb
cmpsl
add
xchg
leave
push
lods
mov
cwtl
inc
movsb
outsl
dec
ret
iret
mov
in
jmp
and
mov
js
cs
cwtl
and
out
lds
dec
test
lcall
hlt
jmp
cmp
pop
cmp
sbb
inc
daa
stos
jo
add
push
jo
ret
push
inc
clc
xor
js
adc
cmp
loopne
cmp
push
xor
sub
in
pop
mov
outsl
popa
xor
push
xchg
sbb
std
and
mov
cld
adc
or
fdivp
fdivl
mul
nop
test
lret
movsb
sti
pop
mov
insl
pop
mov
stos
or
jl
mov
js
cld
jae
out
shlb
fxtract
sub
sbb
xchg
xchg
add
inc
dec
rcll
inc
fcomp
dec
xchg
rorb
lea
pandn
in
mov
in
repnz
xchg
aad
and
and
pop
mov
add
lock
cmp
sub
cmp
int
add
adc
add
jp
or
fcoms
out
inc
jecxz
pusha
push
adc
sbb
sub
stos
ficoms
mov
sbb
lea
movsl
shrl
xor
out
cmp
int
pop
loope
mov
in
mov
xchg
outsb
jecxz
hlt
imul
or
icebp
enter
or
sbb
incb
dec
imul
xor
jno
inc
cmc
popf
insl
inc
pusha
out
sbb
mov
mov
push
movsb
fdivrs
sbb
mov
int3
in
pop
mov
in
popa
mov
push
cmc
call
pop
shl
fstl
adc
push
out
insl
mov
or
hlt
xchg
mov
jne
iret
sbbb
push
int
inc
test
iret
mov
out
aam
xchg
mov
cwtl
xor
sub
lods
mov
xchg
sarl
sub
inc
push
jne
rcrb
dec
sbb
mov
je
add
xchg
xchg
mov
lcall
push
sub
xchg
or
push
xchg
jno
stos
mov
cmp
mov
jno
push
mov
int
out
pop
sbb
in
or
mov
in
inc
mov
push
iret
cmpsl
mov
cmp
mov
cmp
rclb
mov
and
fwait
sub
or
loopne
into
dec
push
lock
xchg
xchg
ret
add
jecxz
js
dec
cmp
xor
mov
fst
fadds
mov
imul
lock
sbb
bound
adc
pop
test
xor
arpl
test
aad
sub
lods
ljmp
pop
xchg
mov
add
mov
sbb
cmp
cli
ret
inc
lcall
loopne
sbb
pop
das
mov
and
dec
push
xchg
lea
insl
cmpsl
fldcw
les
out
or
xorb
xor
idiv
scas
cmp
xor
scas
and
mov
or
jg
sub
roll
shrb
push
lock
mov
jg
xor
cld
setl
int
scas
adc
cmc
in
sbb
jo
subb
andl
mov
inc
shrl
xchg
testl
addr16
or
jns
loop
or
in
inc
sub
xchg
out
push
and
push
lahf
or
cmp
in
imul
or
stos
fldcw
test
and
outsl
imul
mov
mov
adc
int
pop
out
mov
mov
clc
adc
out
cli
or
sti
lea
xor
mov
push
dec
xor
xor
out
dec
ja
add
nop
sub
ret
mov
les
pop
mov
bound
mov
test
ss
xchg
scas
hlt
imul
adc
pushf
push
nop
push
out
mov
out
pop
ss
daa
push
mov
movsl
xor
mov
mov
cmp
ds
loop
stc
dec
insb
xchg
test
aam
pop
outsl
test
in
popf
stos
fists
jbe
and
mov
imull
fdivs
mov
test
jo
cmp
adc
xchg
ret
fwait
adc
sbb
sti
mov
mov
push
mov
sub
in
loop
push
iret
scas
push
stos
leave
cmp
sub
loopne
cmp
mov
pop
jnp
mov
jbe
sub
int3
cmp
sub
xor
or
cmp
jno
jns
test
or
dec
dec
pop
and
out
jp
jo
jne
mov
mov
ret
mov
iret
xorl
lock
xlat
sbb
jae
push
pop
mov
fistpl
loop
dec
cmp
stc
jo
jno
or
cmpsl
dec
or
add
mov
ret
inc
in
sbb
xor
and
and
test
sbb
or
push
addr16
in
inc
or
mov
push
mov
jge
fs
cmp
sub
dec
divl
out
ret
xor
std
pop
adc
movsl
push
imul
cwtl
push
or
arpl
dec
adc
outsb
int
stc
es
sub
pop
nop
push
dec
xchg
stc
testb
mov
ret
cltd
je
lds
dec
lea
inc
loopne
sub
cld
dec
loop
inc
inc
lds
mov
inc
movsl
scas
jge
popa
sub
sub
pop
ljmp
fists
push
inc
mov
and
adc
out
sbb
add
fildll
roll
mov
jbe
cwtl
rorl
jl
aad
xor
lds
mov
mov
push
lock
add
push
das
shlb
dec
sbb
out
pushf
jno
mov
push
push
hlt
mov
add
pop
sahf
and
cmpl
rcrl
mov
sub
negb
scas
and
fsts
addl
inc
cmc
xchg
lods
sub
arpl
ror
mov
cmp
int
scas
aam
jg
xor
cmpsl
mov
jae
test
mov
xchg
sbb
ss
mov
sub
imul
imul
in
sub
mov
cwtl
sub
inc
adc
adc
out
popa
inc
jns
push
pushf
push
inc
mov
add
and
xchg
add
dec
push
mov
adc
add
pusha
xlat
mov
mov
pop
mov
or
push
fnstcw
jmp
in
int
mov
and
in
mov
in
xor
push
cmpsb
jnp
sti
bound
cmp
inc
pop
fxch
inc
lret
dec
xchg
jno
dec
notb
fdivr
add
rorl
inc
and
out
cmpb
push
movsb
shll
icebp
xor
or
stc
and
push
pop
mov
inc
in
shlb
mov
sub
scas
pop
std
popa
out
sub
fldcw
sbb
iret
jo
xchg
adc
mov
out
dec
xchg
cmp
or
adc
add
gs
xchg
outsb
out
loope
or
ss
cmp
ret
lcall
and
ret
shlb
inc
jns
fnstsw
cli
aam
repz
mov
mov
lret
and
cmpsb
push
cmp
inc
lahf
outsl
dec
and
cmp
xor
lods
stos
std
xorb
mov
fiaddl
cs
cmp
loopne
push
sub
lahf
pop
popf
sbb
cmp
and
leave
out
jge
lds
test
cmp
mov
inc
sbb
cmp
addl
mov
mov
rcrl
xchg
push
js
les
mov
jne
hlt
cmpsb
insb
outsb
push
pop
jmp
jp
jge
pop
test
and
push
aas
dec
into
dec
popa
or
inc
mov
add
mov
int
mov
or
sarl
xor
pop
js
push
inc
inc
fwait
jle
stos
jns
or
pop
adc
adc
bound
leave
fwait
outsl
mov
sbb
inc
inc
jb
cli
pop
cli
movsl
shrb
and
sub
mov
push
xor
adc
dec
mov
mov
fildll
test
xchg
push
outsb
cmpsb
fisubs
xor
xchg
test
stos
xchg
adcb
inc
rolb
cmp
les
xor
lcall
out
xchg
lahf
rolb
in
or
addr16
shrl
movsb
addr16
outsl
je
adc
pop
cmpl
scas
push
pop
aaa
decl
push
dec
dec
pop
repnz
sbb
push
inc
aas
push
insl
dec
js
xchg
lahf
push
pop
xchg
ljmp
inc
out
push
mov
out
rcrl
insl
jmp
pop
push
lds
mov
push
dec
js
dec
mov
stos
adc
int
data16
or
adc
imul
shlb
jl
mov
cmc
lret
sub
xor
jne
sahf
cmp
or
incl
push
inc
fstp
call
cli
fmull
gs
cmp
xchg
out
pop
fdivp
xchg
mov
push
test
dec
je
sub
xchg
pop
fwait
xor
pop
adc
xor
xchg
lcall
movsb
fidivs
xor
mov
aaa
jo
je
fadds
jae
lahf
iret
inc
fbld
aad
addb
xchg
mov
into
sahf
fldenv
mov
sub
nop
lock
mov
mov
pushf
push
jne
cltd
xchg
fmull
xchg
xor
adc
xor
mov
aas
test
divl
ret
fstpt
jg
pop
repz
orb
cmpsb
jg
sarl
dec
ret
pop
data16
mov
pushf
hlt
mov
push
ret
mov
cmpsl
push
arpl
je
mov
push
mov
inc
lock
mov
out
xlat
mov
jmp
filds
dec
dec
inc
adc
ret
flds
movsl
stc
sub
cmpsl
lea
jbe
call
pop
add
xchg
out
adc
mov
sub
orb
mov
aaa
fdivrs
out
mov
jbe
sbb
sahf
call
or
sbb
xor
sahf
xchg
icebp
dec
xchg
sti
sub
mov
js
test
cmc
mov
mov
outsl
pop
shl
outsl
inc
pop
inc
arpl
in
mov
or
hlt
movsb
mov
icebp
cwtl
in
aam
cmpsb
jecxz
jl
add
fbstp
daa
pop
hlt
mov
and
and
jmp
aaa
xchg
xor
mov
lock
xchg
loopne
pop
sub
dec
add
sub
push
adc
aaa
enter
cmp
add
movsb
out
loope
add
icebp
xor
jmp
mov
arpl
lods
lcall
fisubs
mov
add
sbb
test
shll
mov
inc
dec
mov
out
jle
int3
cmpsl
sbb
fisubl
mov
xor
lahf
es
pop
pop
xchg
cmp
inc
testb
jae
pxor
adc
cmpsb
les
stos
dec
mov
test
scas
or
dec
test
pop
xchg
add
pop
js
xchg
push
cmp
mov
push
test
lret
jp
jae
cmp
dec
jl
jmp
cmp
sub
inc
or
enter
inc
rclb
mov
lret
mov
mov
pop
aaa
imul
jmp
pop
sahf
sub
mov
jp
xchg
add
sti
sub
pop
cli
push
and
xlat
std
mov
shl
cmp
and
int3
mov
push
call
int3
cmp
loopne
insl
xchg
xchg
mov
push
dec
test
xchg
pop
loope
lock
mov
inc
loopne
popa
mov
scas
arpl
mov
test
lods
aad
andb
sub
int3
push
sbb
and
testl
loopew
jns
out
lcall
ds
pop
outsl
mov
rcr
insb
addr16
into
pusha
add
cld
mov
mov
pop
icebp
mov
mov
nop
jnp
and
imul
loopne
adc
or
mov
stos
mov
dec
in
js
xchg
mov
sbb
mov
das
lret
xchg
repnz
jmp
lods
xor
mov
inc
pop
aad
push
lds
stos
movsl
es
iret
mov
fimuls
dec
dec
repnz
sbb
lock
fisubs
pop
pop
dec
push
or
leave
mov
cmp
mov
push
push
cli
stc
cmc
stos
mov
sti
lret
xlat
ja
add
cli
adc
mov
lahf
sub
out
mov
xor
cmp
test
push
aas
test
aaa
inc
pusha
mov
repnz
xchg
imul
mov
sbbb
cwtl
mov
orl
mov
lahf
int
lds
mov
nop
bndstx
stos
negl
cmpsb
pop
mov
mov
sub
adc
test
fbld
pop
mov
pop
add
in
mov
addl
and
dec
mov
dec
mov
movsl
outsb
mov
mov
jg
inc
fwait
dec
jp
push
xchg
mov
xchg
mov
cmc
subb
push
xor
es
inc
mov
jbe
stc
call
sub
adc
xor
rolb
loop
inc
inc
push
jl
inc
icebp
mov
lahf
mov
aad
fadds
push
dec
or
inc
xchg
lods
sbb
scas
js
mov
inc
push
xchg
icebp
lahf
adc
ret
jl
sbb
fidivrs
or
mov
or
adc
lea
jbe
and
ss
jae
lods
xor
out
inc
pop
repz
mov
stc
pusha
push
xchg
push
popa
sub
pop
push
out
sbb
and
pop
fnstenv
frstor
loopne
test
pop
pop
scas
loope
fistpll
add
mov
ja
inc
push
out
jmp
lods
pushf
xchg
cs
pusha
lods
pop
ret
ja
nop
out
sub
ljmp
pop
adc
outsl
fists
imul
jg
testl
pop
pop
js
adc
js
shll
and
inc
push
pop
mov
cwtl
stos
icebp
andb
pop
loop
testb
stos
push
data16
jecxz
in
mov
cmc
xor
mov
movsl
mov
push
dec
decl
js
lods
leave
add
out
les
ja
fldenv
cltd
mov
mov
imul
repz
fadd
out
sub
insl
test
insb
decb
and
add
mov
test
in
sbb
and
div
dec
push
push
loop
jne
js
xchg
jmp
rclb
mov
add
hlt
int3
push
jp
arpl
push
mov
adc
and
inc
andb
pop
push
mov
sub
pop
add
adc
xchg
mov
pusha
adc
add
cmp
mov
cmc
flds
sbb
jg
outsb
in
jg
in
int3
push
lret
repnz
pop
popf
cwtl
repnz
pushf
ja
fnstcw
sub
popa
stos
hlt
push
jno
imull
das
icebp
mov
ss
dec
mov
insb
sbb
jo
xor
imul
test
xor
outsb
and
cli
cmp
mov
and
sbb
or
cmc
xchg
adc
iret
sti
cmc
xor
cs
lock
fs
mov
outsb
mov
inc
pop
call
sub
das
and
decl
fs
insb
fdivrl
shll
les
cltd
pop
stc
insl
push
cltd
mov
int
mov
mov
fs
and
cs
sbb
rolb
aad
sub
movups
cmp
push
out
mov
lods
push
pop
push
ljmp
mov
add
test
sub
mov
pop
sahf
push
mov
sti
lcall
nop
iret
mov
imul
xchg
dec
xor
inc
lods
jne
adc
out
dec
push
lcall
and
loopne
outsb
cwtl
shr
sbb
repnz
inc
fldcw
add
or
rclb
and
repnz
xchg
or
adc
cltd
les
sub
add
jle
les
jb
pop
scas
cmc
sbb
push
mov
sbb
ret
rcrl
adc
movsl
sti
fbld
scas
jecxz
loopne
mov
jo
inc
or
leave
sbb
jne
fisttps
sub
imul
xchg
sarl
jle
jp
dec
cmc
mov
pop
fs
in
pop
lcall
aas
adc
push
jo
push
aaa
orl
popa
jg
adc
lret
sbb
jnp
in
xorl
mov
les
jne
sbb
fisubs
inc
scas
fidivrs
mov
iret
rorl
sbb
dec
xor
pop
arpl
mov
test
mov
iret
xchg
fistps
pop
sub
sbb
repnz
test
dec
cwtl
push
or
or
fdivrl
repz
xor
xchg
jge
adc
ss
rorl
xchg
cmp
adc
xchg
xchg
sbb
mov
adc
ret
inc
ja
insl
sti
sub
repz
fildl
pop
fnstenv
inc
mov
jbe
sub
push
mov
xchg
add
pop
inc
fwait
and
xchg
out
aaa
stos
add
jg
or
jge
or
adc
push
inc
shlb
push
pop
test
fnsave
pop
pop
ljmp
xchg
sbb
adc
sub
int
stos
and
cmc
jecxz
popa
sbb
xor
sbb
repnz
pusha
aas
or
repz
mov
daa
je
in
scas
fldcw
test
jo
xor
fxch
std
pop
xor
scas
or
ret
leave
test
pusha
inc
outsb
xchg
test
xor
out
enter
sub
ret
movb
in
mov
adc
mov
sbb
lret
popa
in
lahf
mov
xchg
or
lcall
in
mov
insl
maxps
lret
jg
xchg
loop
mov
jno
ret
pop
lret
jns
cmp
or
inc
incb
filds
movsl
inc
inc
jb
enter
gs
nop
loop
imul
lahf
pop
push
loop
lock
mov
jns
push
cmc
push
cltd
addr16
lahf
or
insb
shr
and
sahf
inc
faddl
das
jo
test
int
andl
sbb
out
xchg
sbbl
jmp
stc
mov
mov
jge
sbb
inc
cwtl
inc
xchg
jmp
adc
gs
fwait
xor
add
add
sub
and
jmp
and
xchg
jne
add
icebp
imul
and
loope
xor
aad
mov
jno
xchg
nop
and
or
fisttps
or
push
pop
shlb
rclb
int
jp
xchg
jb
cli
subl
stc
or
and
mov
test
es
std
push
mov
js
enter
shrb
cs
enter
adc
stc
fstpl
add
jns
fmull
mov
leave
sub
jmp
adc
addb
xchg
movsb
xchg
push
gs
sbb
xchg
test
addr16
push
dec
jge
add
out
push
popf
es
xor
les
jp
cmp
mov
jp
jno
test
xchg
imul
xor
dec
in
push
cmp
push
inc
or
imul
mov
repnz
aaa
into
sub
mov
aam
popa
addl
dec
xor
test
lahf
orl
adc
mov
push
fwait
leave
cmpsl
aad
mov
jl
sub
cli
and
push
jae
push
ss
or
push
mov
inc
pop
jnp
dec
inc
aas
stos
inc
sbb
xor
xor
sbb
mov
pushf
push
cs
enter
arpl
inc
ret
enter
push
cmp
xor
add
leave
ljmp
mov
cmp
pop
inc
mov
frstor
divl
je
cs
dec
lods
mov
aam
pop
es
adc
cmpl
test
test
inc
loopne
aaa
pop
aaa
aad
push
cmp
popa
pop
mov
ljmp
push
inc
test
call
or
inc
adc
shll
lret
and
push
mov
std
mov
mull
inc
jge
lret
and
dec
push
ljmp
jnp
subl
loopne
pmaddwd
repz
jbe
adc
gs
push
add
sbb
addr16
hlt
aam
sub
ud0
sbb
loope
test
mov
push
sub
xchg
stos
pop
push
iret
mov
mov
mull
sub
jnp
clc
in
xchg
lret
out
cmp
test
test
jg
or
fs
jb
mov
xor
sti
jno
or
stos
js
popf
add
aas
xchg
dec
cmp
arpl
loope
daa
cmp
ss
jnp
or
out
xchg
pop
aaa
cmp
push
in
notl
sbb
scas
push
test
mov
pop
pop
mov
scas
out
push
jle
adc
iret
inc
test
stos
aaa
fmuls
lods
add
out
mov
rolb
inc
fwait
adc
push
arpl
inc
cwtl
push
repz
lret
jle
std
mov
dec
out
leave
test
xor
ret
outsl
sbb
cmp
fwait
lods
dec
in
cmp
cmp
fimull
aas
ja
adc
xchg
inc
in
scas
pop
pop
mov
ret
test
push
pop
mov
rcrb
sahf
jae
fbld
lahf
mov
adc
shlb
push
mov
iret
pop
rolb
pusha
mov
mov
ljmp
lret
dec
or
mov
push
mov
fldcw
sti
std
sbb
call
stc
loop
xlat
pop
inc
mov
shll
sub
decb
mov
adc
mov
mov
test
pop
mov
dec
insl
jle
inc
aam
inc
imul
xor
pop
dec
scas
fildll
outsl
leave
aam
icebp
mov
dec
subl
lods
pusha
cmp
inc
ret
mov
add
mov
jecxz
mov
lcall
add
bound
sub
jle
rcr
xchg
out
aaa
sub
dec
loopne
hlt
jae
xor
out
decb
pop
int3
nop
or
push
ret
xchg
xchg
adc
jg
call
mov
xchg
int3
mov
cmc
xor
fimull
iret
lahf
mov
adc
cmpl
bound
imul
sbb
ret
rorb
cmpsl
lea
or
sub
jo
mov
mov
cwtl
fidivrs
cmp
and
inc
dec
pop
movsb
push
ret
mov
dec
test
push
lds
or
add
or
sbb
dec
push
leave
lods
cwtl
pop
xchg
mov
xor
pop
je
sbb
sub
mov
pop
mov
mov
mov
xchg
das
xor
dec
fstpt
or
std
lret
test
push
sbb
push
fdivrp
xchg
mov
popf
lock
mov
cmp
push
pop
fcoms
lahf
xchg
adc
mov
sahf
js
std
pusha
lock
int
gs
fmull
mov
xlat
out
out
jb
cmp
and
push
ds
hlt
fsin
cmp
out
xchg
pop
ret
pop
jno
call
xchg
cmpsl
cmc
dec
pop
out
jge
mov
add
xor
jecxz
push
jp
mov
adcb
negl
stos
movsb
loope
pusha
insl
push
add
dec
pusha
mov
pop
xor
clc
jecxz
scas
cltd
sub
cmp
jp
dec
insb
std
sar
cmp
dec
mov
pop
mov
pop
cmp
testb
lret
mov
xchg
inc
aas
or
xor
jns
sarb
cmp
add
or
xchg
push
insb
xorb
push
mov
or
and
shll
mov
push
mov
outsb
add
aaa
xor
sti
nop
fidivrl
lock
movsb
ja
cmpsl
aaa
inc
mov
adc
push
cmpsl
fwait
pusha
imul
pop
aas
push
pop
call
fstpl
fcomps
in
iret
pusha
push
movsb
aaa
mov
iret
jno
xor
fsubr
mov
push
or
xchg
das
mov
jae
mov
loope
jbe
in
or
pop
aaa
push
lds
imul
cmp
xchg
dec
iret
clc
push
in
dec
jns
add
data16
mov
lahf
insl
xchg
scas
and
pop
lock
inc
mov
adc
push
add
lahf
arpl
mov
push
cmp
or
dec
jp
fnsave
mov
daa
push
test
or
pop
fsubp
mulb
or
imul
mov
sarl
ret
jbe
cmc
jmp
xchg
out
xchg
cs
xor
sbb
mov
int3
jp
jbe
mov
mov
push
adc
sub
les
xchg
jns
sahf
out
out
and
pop
rcl
sbb
jae
push
pop
sbb
call
shrl
cmpsl
xlat
fnstenv
jmp
xorb
dec
mov
xlat
rclb
cmp
adc
fidivrl
xchg
xor
pop
scas
inc
mov
jp
inc
and
sub
adc
jns
repnz
out
repz
shr
aad
xchg
nop
pop
cmp
scas
dec
jns
xchg
mov
sub
aaa
xchg
jnp
pop
enter
xchg
sub
adc
cltd
aad
ss
sbb
adcl
push
push
xchg
pop
mov
cmpsb
xchg
xchg
jge
pop
movsl
add
add
xchg
imul
call
icebp
rclb
xor
dec
and
push
cli
cmpb
call
icebp
test
insl
add
mov
adc
sarb
and
dec
cmp
or
jns
jge
push
sbb
cmp
shll
or
ja
insl
or
sbb
adc
stos
adc
popa
in
and
lret
outsl
out
cli
cmp
addb
pop
cmpsl
stos
cmp
push
out
pop
sub
push
xor
or
push
xchg
mov
lea
jl
in
imul
cmpsl
arpl
cld
les
fdivs
lds
das
mov
gs
sub
dec
or
into
cmp
sub
push
fucom
inc
pop
xchg
movsb
ss
sub
scas
mov
push
xor
add
ficomps
mov
test
and
jo
clc
lret
cmp
add
lahf
std
icebp
dec
loopne
in
imul
cmp
dec
pop
xchg
dec
jbe
mov
cmp
xor
fldt
add
push
and
and
mov
jo
inc
roll
xor
cmpsb
add
sbb
sub
push
jl
in
or
pusha
adc
pop
cmp
adc
fisubrl
and
add
scas
int
push
lret
iret
or
sbb
xchg
test
or
push
xchg
fnstcw
xchg
out
xchg
leave
sub
icebp
sbb
mov
sbb
scas
fistpll
jmp
fsubl
fldenv
xor
imul
pusha
sbb
jbe
aaa
jp
into
jnp
add
inc
cmpsl
loop
inc
ja
out
in
pop
lret
adc
and
sub
sbb
cld
mov
mov
in
cmp
in
xor
pop
popf
jmp
dec
jg
mov
xor
lret
cwtl
repz
xchg
test
test
test
ljmpw
jno
add
fwait
xchg
pop
into
subb
loopne
insb
add
and
iret
lods
outsb
sub
sbb
in
je
mov
push
push
pushf
and
stos
inc
movsl
xchg
xor
xchg
imul
test
lock
pop
pop
fwait
stos
xchg
mov
fs
xchg
cmp
cmp
or
cmpl
add
dec
mov
loopne
clc
testl
push
add
je
inc
xor
jne
sahf
and
push
mov
xchg
push
icebp
aas
jns
sub
popf
cmp
ja
pop
outsb
mov
fiadds
out
mov
int
adc
scas
xorb
add
xlat
int3
add
sbb
jnp
es
js
sub
and
mov
cmp
loopne
cmp
sub
dec
mov
fildl
jbe
cs
push
test
data16
push
mov
xchg
pop
clc
into
mov
popf
dec
pop
pop
push
lea
mov
xchg
pop
xor
sbb
rcrl
insl
shll
inc
out
lahf
int
xchg
inc
mov
jno
jnp,pt
push
lock
jl
jo
jle
or
cmpl
sbb
ds
pop
mov
mov
insl
mov
adc
xchg
pop
lret
add
push
sahf
lahf
add
in
jnp
cld
inc
mov
rolb
cmpsb
and
mov
xchg
fistpll
sbb
sahf
cmpl
dec
pop
mov
or
out
pusha
in
mov
jle
fcoms
sti
in
nop
leave
and
les
lret
loope
pop
lret
xchg
test
push
adc
iret
aad
adc
inc
testb
cmpsb
xchg
lret
in
gs
jmp
movsb
and
mov
push
xlat
push
mov
repnz
and
test
stos
call
out
pop
nop
fldl
push
lods
sub
es
loopne
mov
ja
cmpsb
mov
daa
or
add
cmp
mov
pop
pushf
and
test
jbe
in
bound
push
inc
out
pushf
jns
out
push
xchg
stos
sub
mov
push
xlat
cmp
jp
aam
pop
and
sti
lret
jne
in
lcall
es
movsb
cmpl
push
out
push
ss
mov
test
inc
pop
pop
mov
or
flds
call
dec
jb
adc
nop
stos
loop
xorb
pushf
popf
ja
jnp
movsl
xchg
cs
dec
xchg
cli
ss
shll
incl
mov
leave
dec
insb
xor
jecxz
test
out
or
dec
inc
js
dec
xlat
jbe
push
fwait
rol
ss
xlat
out
dec
js
add
leave
sub
out
xchg
push
sub
sub
lock
pop
push
push
jmp
xor
sahf
psubsw
sbb
pop
jnp
mov
or
ss
fcomps
cmpl
inc
shlb
xor
or
and
inc
xchg
sti
insl
xchg
mov
sub
std
extrq
jns
inc
mov
jno
jne
mov
das
and
fsubl
sbb
jns
jp
cmp
out
test
adc
pop
pop
ret
mov
jnp
mov
add
out
lcall
fsubrl
jb
fildll
in
cmp
cmpb
cmpsl
sub
sub
sub
or
sahf
xor
xchg
mov
push
ds
push
into
jge
rcll
push
sbb
aad
std
push
in
xchg
adc
stos
test
gs
rolb
scas
fimuls
cmp
adcl
jecxz
xor
repz
fldt
cli
mov
mov
mov
scas
jp
sbb
pop
jnp
mov
sbb
ljmp
andl
es
out
and
addr16
add
pop
cmp
inc
dec
jbe
cltd
rcll
clc
lds
bswap
dec
aas
pop
jae
outsb
cmpsb
sub
stos
pusha
int3
rcrb
adc
movsb
fs
jmp
dec
add
je
popf
lea
mov
cmp
pop
adc
jns
xchg
int
mov
xor
xor
push
or
sbb
incb
insb
popf
pop
idiv
mov
loopne
popa
mov
xlat
imul
outsb
xchg
test
or
lcall
mov
mov
inc
sar
inc
loop
sub
or
outsb
cltd
aaa
add
sbb
lret
add
mov
les
xor
ret
xchg
imul
pop
cmp
popl
pop
fbld
pop
cwtl
dec
mov
mov
adc
les
insl
push
ss
cwtl
jecxz
sub
xchg
sub
jmp
xchg
push
in
in
jae
outsb
jb
test
popa
mov
push
xchg
cmp
lcall
icebp
sarl
sbb
sub
push
insl
hlt
push
inc
push
shr
xchg
stc
lcall
sti
sbb
sarb
pop
pop
mov
imul
jbe
addr16
sub
mov
stos
out
add
aaa
xchg
sarl
sbb
sub
sub
lock
mov
fldenv
jbe
mov
add
std
out
data16
outsl
dec
insl
loop
loopne
outsl
push
rorb
ljmp
xchg
pusha
fdivrs
imul
movsb
mov
mov
push
lret
movsl
cmp
inc
cs
push
jecxz
xchg
aaa
jns
mov
out
inc
push
xchg
push
mov
lahf
ret
je
sub
out
rcrb
sub
dec
and
testl
and
xchg
xchg
nop
leave
aaa
fisubs
cmpsl
movsb
xor
fs
ret
xchg
pop
mov
mov
sub
cltd
fbstp
scas
fs
int
outsb
test
inc
add
mov
xor
sarb
xor
std
adc
inc
lahf
ja
sbb
daa
cmp
jmp
mov
scas
mov
xchg
dec
fsubrs
and
sbbl
dec
xchg
mov
mov
fildll
push
cmp
sub
pop
lock
push
cmp
dec
xor
mov
xor
add
stc
stc
xor
fcompl
pop
scas
cmp
rcrb
shrl
push
mov
sub
mov
test
mov
movsb
push
dec
mov
in
or
jle
movsb
and
jae
push
stc
jl
push
jp
andb
popa
jg
inc
js
repz
enter
ja
inc
add
adc
bound
in
push
roll
xchg
cmp
mov
xchg
and
sbb
add
fimull
ss
aas
mov
and
sbb
into
scas
inc
fs
add
cmp
mov
mov
rcr
push
lcall
jae
nop
ja
jge
pop
sbbb
movsb
pop
je
subl
cwtl
fs
in
fildll
jle
xor
xchg
ret
fcoml
and
pop
cli
repnz
lods
jg
imul
cmpl
dec
stos
lds
out
fwait
rcrb
ljmp
push
push
lods
mov
repz
add
xor
push
icebp
cwtl
arpl
test
rcr
xchg
les
fs
into
xor
pop
xor
sbb
push
sub
enter
and
ss
ficompl
adc
xchg
mov
dec
xchg
or
push
imul
pop
gs
lret
add
xor
subl
fsts
adc
mov
pop
ds
je
fwait
xchg
pop
ds
scas
inc
fcmovbe
mov
test
filds
iret
lret
popa
shr
pop
add
pop
dec
loope
je
push
lea
mov
clc
pop
jmp
pop
jne
cmpsl
call
sub
mov
mov
rorl
movsl
xor
push
mov
or
into
pop
out
push
lds
cmp
leave
and
mov
jb
adc
pop
xchg
mov
mov
inc
jg
fstpt
out
aas
adc
push
cmp
push
push
outsl
xchg
lods
fwait
jge
mov
test
stc
sahf
out
icebp
in
or
sbb
sub
jo
pop
cmp
xchg
js
jmp
jbe
add
rolb
cli
fdiv
jge
std
in
frstor
movsb
sarb
dec
dec
adc
mov
and
push
shll
push
ss
sti
popa
aad
or
stc
in
imul
xchg
jno
cmp
push
mov
sbb
sub
leave
js
add
adcl
lea
jmp
imul
or
mov
sbb
xlat
mov
and
push
fistps
cmp
jns
inc
mov
or
jne
jmp
mov
roll
xor
enter
stc
xchg
out
sbb
xchg
rorl
loop
daa
sti
xchg
test
cmp
mov
mov
pop
ds
pop
sbb
std
dec
add
jg
rcr
or
pop
mov
jl
sub
pop
push
push
adc
cld
xchg
sub
cmp
pop
xor
in
mov
stos
xchg
cltd
les
xchg
fwait
push
mov
lahf
cmp
fsubrs
dec
add
dec
int3
sub
lods
jb
pop
mov
movsb
in
lcall
test
movsb
clc
ja
dec
loop
inc
push
sbb
insl
ret
jecxz
mov
or
imulb
sbb
test
pop
cld
push
push
jge
scas
mov
in
and
mov
sahf
sub
xchg
pop
xchg
xor
dec
out
mov
xor
fisttpl
mov
push
into
scas
popf
push
in
xchg
test
les
dec
mov
add
cli
nop
sarb
xchg
std
cltd
cmp
cltd
pop
xchg
pop
pop
aas
test
out
xchg
or
rolb
iret
mov
push
push
mov
jecxz
push
and
lea
pop
lcall
pop
cwtl
jns
es
mov
mov
stc
pop
frstor
fsubrp
leave
std
cmp
jne
pop
and
sub
xchg
push
rorb
push
mul
mov
popf
aas
cmpsl
xor
bound
mov
sbb
rcl
inc
mov
leave
inc
sbb
std
xchg
cmp
pop
shlb
jle
inc
sbb
stc
ds
bound
push
pop
cs
sub
cs
rcll
subb
insb
sub
dec
mov
shrl
adc
rclb
arpl
dec
cmpsl
mov
mov
adc
xchg
adc
lcall
jne
xor
inc
jno
outsb
clc
jecxz
push
out
fstps
mov
mov
xor
aaa
cmp
sbb
mov
fsubrs
jns
lret
xor
jmp
cmc
dec
fsubs
cmp
sub
clc
dec
call
xor
sub
cmpsl
aam
scas
push
or
jmp
mov
sti
mov
pushf
pop
push
add
jae
add
sbb
loope
aam
inc
mov
loopne
push
push
lahf
xor
xor
jae
pop
imul
arpl
popa
sbb
or
xchg
idivl
dec
jo
xchg
inc
aad
popf
test
mov
xorb
lods
aam
inc
jae
mov
in
ss
xchg
adc
js
testb
mov
ret
xor
fsubr
mov
lahf
cwtl
inc
in
inc
pop
loopne
and
test
sbb
inc
nop
sahf
dec
sub
sbb
outsl
dec
inc
or
mulb
outsb
sti
and
mov
adc
pcmpgtw
or
and
mov
mov
rcll
andb
cld
mov
or
add
ficompl
shlb
jg
das
pop
scas
jb
xchg
das
sub
add
into
lret
mov
inc
sub
mov
cmp
mov
es
and
mov
pop
movl
xchg
into
fidivs
stc
movsb
sub
jp
in
popf
ds
shlb
aam
inc
push
into
scas
shll
nop
sahf
lock
dec
insb
sbb
enter
push
sbb
int3
sub
ljmp
ja,pn
sbb
mov
arpl
sti
push
cmpsl
xor
xchg
push
add
lcall
clc
cvtpi2ps
sti
push
adc
loopne
xchg
jmp
add
fwait
push
or
inc
repnz
inc
ret
aad
aam
lds
inc
ljmp
mov
mov
roll
pop
shlb
jns
icebp
cli
xchg
mov
inc
dec
push
in
jge
adc
pop
and
sahf
mov
ljmp
call
jge
lds
aad
insb
call
outsl
fwait
test
ja
mov
mov
sub
jg
mov
repz
pop
and
pop
mov
mov
aam
jg
syscall
xor
insb
and
pop
pop
stc
push
sub
dec
test
jb
jmp
test
int
add
jp
clc
testl
leave
push
adc
jnp
imul
je
cmc
stc
js
out
sbb
and
inc
outsb
test
or
mov
add
or
adc
sbbl
and
and
adc
into
fcom
ret
leave
out
pushl
mov
shl
push
loop
orb
mov
cmp
or
iret
add
nop
push
xor
in
mov
insl
out
neg
fs
out
aad
in
loope
mov
popf
jno
dec
push
outsl
lods
jmp
mov
pusha
push
dec
popa
push
pop
xor
xlat
cmp
aaa
stc
xchg
icebp
rorb
xchg
enter
dec
dec
cld
jnp
hlt
push
jbe
mov
fistps
iret
push
es
jmp
push
outsb
into
fstps
mov
jl
adc
inc
ja
repz
shlb
shrb
das
push
in
int
test
adc
sub
pop
clc
push
out
push
popf
into
jns
jmp
mov
rorl
sub
mov
cmp
push
sar
mov
jg
pop
adc
mov
fcmove
mov
cltd
rolb
mov
pop
adc
push
mov
das
lcall
sbb
xor
push
cwtl
out
stos
xor
or
mov
nop
movsl
pop
ljmp
add
out
arpl
arpl
test
xor
cmp
daa
lods
mov
leave
int
fimull
mov
jp
sarl
mov
mov
rcrb
aaa
inc
mov
dec
pop
mov
pop
popf
aaa
mov
add
test
bound
sub
outsb
inc
adc
sub
in
clc
sbb
test
xor
sub
mov
inc
lcall
push
mov
mov
jb
pop
or
cmovae
in
insb
jmp
adc
jmp
sub
fisttpll
nop
test
out
shrb
jne
clc
inc
jno
mov
sub
xchg
cmc
xchg
push
mov
repz
out
ret
dec
jl
fwait
daa
adcb
sahf
arpl
mov
stos
stos
into
fsts
ret
out
bound
sub
icebp
dec
imul
pop
loope
negb
cmp
leave
cmpsb
enter
or
in
mov
imul
aad
adc
repnz
push
push
scas
or
sub
mov
pop
add
adc
movsl
lahf
dec
sbb
or
cmp
out
push
repz
lcall
fs
in
out
pushf
inc
push
add
inc
and
lods
jbe
rcr
sti
push
cli
xchg
sub
cli
ffreep
leave
or
cmp
popa
and
push
nop
call
cmpb
in
xlat
into
mov
xor
shlb
imul
out
cmp
sbb
imul
jnp
bound
mov
cmp
in
int3
sahf
and
xor
test
push
int3
mov
xchg
mov
mov
cmpsb
sub
jmp
enter
ds
sysret
repnz
push
lret
add
inc
dec
mov
int
frstor
stc
xchg
aam
aas
mov
out
mov
and
and
cmp
and
or
fdivs
mov
fmuls
xchg
xchg
or
jb
cmp
scas
andl
mov
or
mov
cld
outsl
xorl
xor
mov
inc
mov
stos
pop
push
push
lret
js
inc
movsl
lea
jbe
push
cmp
ljmp
faddp
mov
int3
stos
clc
fdivs
shl
sub
in
leave
push
cmpsb
cmpsl
mov
dec
push
or
divl
pop
push
xor
into
inc
inc
addb
cs
nop
fldl
stos
adc
adc
or
cmp
addr16
push
jae
insl
in
idivb
pop
jg
leave
jle
fcoms
out
roll
les
mov
test
dec
es
mov
pop
and
jge
dec
mov
insl
cld
push
iret
xchg
mov
stos
bound
or
inc
mov
pop
pusha
mov
ss
jae
jg
jne
sub
add
pop
adc
mov
cmc
dec
xor
xchg
aas
sub
xchg
imul
mov
mov
nop
pop
fwait
out
adc
push
mov
xlat
xor
jmp
pop
cmp
xchg
jne
xlat
xlat
jg
lods
xlat
js
xor
xchg
cmp
stos
sbb
scas
push
xor
decb
imul
stc
imul
lret
repnz
scas
push
mov
sbb
jne
lods
stc
push
rcll
leave
push
xchg
dec
mov
faddl
cli
and
ret
mov
popf
xchg
dec
mov
cmp
mov
into
daa
mov
arpl
mov
mov
scas
shrl
adc
daa
inc
mov
cmpsl
push
std
call
pop
sub
mov
xchg
sub
xor
xchg
or
push
ret
daa
jg
call
jmp
inc
out
pusha
add
mov
pop
cmc
loopne
jecxz
cli
pop
push
pop
gs
into
lcall
mov
ficoms
jns
fdivs
loop
test
ljmp
into
fcoms
or
inc
repnz
dec
aad
xor
popa
stos
inc
jmp
inc
adc
push
imul
xchg
lahf
jecxz
or
jle
push
adcl
rorb
int
call
movsb
cwtl
jae
mov
loope
xor
lret
and
push
cli
mov
mov
dec
adc
pusha
xchg
imul
out
cmp
mov
jne
push
mov
push
orl
lcall
adc
pop
mov
xchg
adc
jg
fwait
rcrl
xorb
mov
inc
das
push
add
inc
mov
adc
cmp
cmp
cmpsl
lods
ss
jnp
sarl
mov
xor
fs
add
jns
out
mov
out
sub
outsb
jnp
popf
loop
jns
mov
jb
jnp
insb
in
ret
sarl
outsb
xchg
xor
pop
aas
mov
mov
lea
and
jbe
rorl
pusha
fildll
add
and
insb
sbb
and
and
into
leave
aam
dec
int
idiv
rcr
insb
in
xor
cmp
jnp
push
lods
mov
inc
stos
inc
loopne
and
ret
bnd
push
mov
push
setae
in
push
out
fs
lea
jnp
lds
fsubrs
sbb
loop
addb
shr
dec
icebp
jno
cmpsb
mov
jbe
fstpl
mov
enter
je
pop
and
adc
lcall
pop
enter
xchg
lret
imul
inc
lcall
jno
pop
mov
shlb
ljmp
scas
fldl
in
jecxz
cmp
sbb
insl
dec
outsb
and
xchg
pushf
jae
add
int3
cmp
inc
je
lods
push
mov
insb
mov
cmpb
in
lret
cmp
adc
pop
insl
jle
cmp
ja
mov
hlt
insb
fadd
push
testb
inc
sub
push
dec
pop
cld
jo
mov
lcall
dec
cmpxchg
lahf
mov
les
mov
lock
mov
iret
add
scas
pop
xor
mov
mov
xor
movsb
xor
popf
xor
mov
stos
xor
xchg
jle,pt
testl
jecxz
stos
inc
loope
xchg
imul
or
xchg
lock
xchg
stc
in
mov
jp
or
lods
inc
xor
int3
add
mov
lea
stos
int
xor
pop
and
mov
xchg
xlat
fstl
dec
sbb
test
jge
sar
pop
jmp
push
outsb
push
push
sbbb
xor
and
add
pop
pop
mov
orb
xchg
sub
pop
cmp
in
lret
rcl
out
popf
in
cmp
mov
stos
push
sbb
dec
and
sub
and
inc
leave
cmp
data16
mov
rep
pop
cltd
xor
scas
subb
dec
fbld
xchg
jb
mov
je
bound
loopne
sbb
ljmp
mov
addb
xor
cli
hlt
add
movsl
repz
pusha
std
inc
les
daa
jne
mov
sub
rolb
mov
jnp
lods
or
mov
mov
add
mov
imul
arpl
js
mov
pop
adc
mov
and
nop
pop
jg
mov
add
mov
add
mov
mov
lcall
imul
mov
lahf
push
divb
subl
dec
popa
sbb
popf
add
ret
lods
and
sub
imul
cmp
sbb
int
mov
jge
pop
xchg
mov
insl
fimuls
xlat
adcb
mov
fdivs
jnp
jl
aam
sub
jo
xor
out
cmp
mov
mov
ret
cli
mov
shll
add
stc
dec
push
xor
fists
test
mov
xchg
add
push
nop
fbld
and
mov
movsl
xchg
dec
popf
and
sbb
fldlg2
xor
int3
pop
cld
cmp
sahf
hlt
shll
jge
pop
daa
mov
iret
sub
cmp
in
cltd
mov
pop
das
add
xor
inc
pop
lea
jmp
jbe
stos
rcll
lods
data16
out
sub
jp
or
das
inc
sbb
and
jns
pop
mov
mov
push
stc
sbb
cli
out
dec
lods
mov
fbstp
insb
dec
inc
lds
enter
push
stos
loopne
dec
loop
testb
pop
sbb
pop
sub
in
dec
repz
cmc
iret
xor
jge
inc
mov
dec
pop
cli
xor
inc
cli
jge
or
pop
push
mov
add
es
enter
pop
push
jmp
sub
pop
out
sub
hlt
push
lcall
clc
and
rorl
dec
lods
sub
int
test
jns
pcmpeqd
lret
rorl
sub
push
or
fwait
lods
jp
xor
pop
pop
push
mov
cmp
imul
lods
cmp
adc
adc
jb
mov
pop
sti
sub
xchg
data16
jno
sbb
in
push
inc
popa
mov
xor
out
shl
push
mov
fwait
rclb
in
xor
inc
xchg
scas
mov
pop
add
pop
cmp
mov
mov
inc
addl
das
loope
mov
arpl
loope
incb
push
lock
int
sub
imul
or
dec
or
sbb
out
nop
sbb
xor
roll
sbb
fbstp
es
xor
dec
data16
fistpl
dec
mov
or
sub
mov
fisubs
mov
je
fcomps
popf
xor
lret
int3
sub
xor
cmp
shrl
mov
subl
add
xor
xchg
lahf
or
cltd
loop
insb
into
sahf
ds
pop
sub
push
mov
imul
data16
in
fnstcw
mov
push
push
je
loopne
pop
add
test
pop
pop
mov
mov
outsb
jnp
xor
push
call
pop
ret
out
int
adc
mov
jle
cltd
outsb
mov
and
pop
icebp
ficoml
jbe
stos
scas
xchg
jo
test
into
jb
add
lahf
pop
push
dec
pusha
iret
jns
pop
fcom
add
cmpsl
xor
mov
or
lds
ja
pop
mov
imul
xchg
hlt
enter
stos
cmp
inc
fldl
pop
rcl
sti
xor
loope
arpl
cmp
shrb
jbe
repz
les
test
fdiv
adc
test
cmpsb
add
aam
mov
push
popa
mov
mov
shlb
out
mov
int3
pmaxsw
push
push
popf
sbb
insb
mov
rolb
repz
ficoms
test
and
add
adc
sub
add
xchg
xor
xor
jo
jl
push
jb
sub
fcom
dec
sarl
push
into
mov
cmpsb
clc
sbb
jne
shll
dec
mov
fimull
imul
popa
xor
add
popf
out
adc
fldt
jnp
pushf
mov
in
aaa
ret
adc
sbb
inc
stos
jb
test
loope
out
aad
cmp
fsubp
mov
cmpsl
jb
cwtl
cltd
inc
push
mull
mov
ss
in
jne
lret
mov
aas
or
cltd
jnp
xor
test
ret
cmp
cld
pop
and
cmp
mulb
adc
call
imul
xchg
jb
and
fisubrl
cmp
lcall
mov
out
and
mov
push
cmpsl
xchg
mov
je
sbb
ss
hlt
test
inc
xchg
mov
aam
xor
dec
xchg
nop
and
jb
jecxz
cmp
rcl
adc
in
mov
sub
imul
in
xor
cltd
inc
pop
fisubrs
dec
pop
push
mov
sbb
inc
pop
xchg
pop
outsb
insb
xchg
xor
test
cs
push
rorl
sub
call
xchg
aas
cmp
adc
inc
movd
call
test
das
add
lods
jmp
lods
lock
cld
push
mov
lds
out
into
popa
fmuls
shrb
outsb
mov
mov
jbe
xchg
out
int
inc
sub
inc
dec
sub
mov
hlt
jae
mov
and
ljmp
cmpsl
jmp
push
sbb
gs
cmp
popa
mov
mov
xchg
mov
jmp
dec
ds
test
or
add
push
std
dec
test
mov
xsha1
fs
in
jle
sub
dec
dec
mov
inc
inc
rolb
xchg
jmp
jge
in
adc
je
mov
add
ds
aaa
fldt
push
dec
jo
mov
arpl
aam
xor
and
pusha
dec
inc
movsl
jae
mov
xchg
and
adc
fdivrs
xchg
sub
mov
adc
in
xchg
xchg
xchg
sub
xchg
fistpl
roll
cmpsb
sbb
subb
mov
in
push
aam
into
sbb
jne
insl
lret
int
fdivrs
shll
mov
loopne
dec
sahf
aad
iret
repz
mov
stos
xor
mov
out
andl
pop
outsl
pop
pop
mov
out
mov
dec
cltd
idivl
pop
int
dec
movsl
dec
xchg
jmp
mov
in
mov
repnz
into
std
sbb
loop
xor
jmp
mov
in
je
mov
shlb
cmpsl
mov
ret
mov
mov
pop
mov
pop
mov
jmp
sahf
cmp
es
dec
jae
je
arpl
xor
jo
sar
rcll
sbb
lods
sbb
int3
inc
lret
arpl
jns
lret
xor
mov
cmp
stos
push
inc
ret
cltd
clc
out
iret
cmp
jo
adc
test
shll
pop
dec
ljmp
push
lock
rcrb
pop
pop
ja
mov
aas
in
sub
sbb
ja
fistl
mov
dec
daa
xlat
cs
cld
mov
mov
dec
fadd
stos
and
pop
adc
setns
jmp
int3
repnz
add
cs
jecxz
push
stos
mov
rolb
adc
inc
and
fcmovu
pop
lds
inc
or
out
sbb
xor
dec
pop
fstpl
and
out
dec
loopne
js
xor
dec
fidivs
mov
aas
and
jecxz
push
dec
adcl
add
inc
dec
ljmpw
push
adc
and
sub
sub
or
xor
add
push
cmpsb
mov
pop
scas
mov
add
mov
cmp
cs
mov
inc
scas
int
mov
adc
or
sbb
xor
arpl
add
aad
std
loopne
popa
shrb
cmpsb
push
lds
or
mov
mov
add
mov
push
dec
fdivs
cmp
addb
jo
add
data16
clc
shrl
mov
add
xor
dec
mov
xchg
sub
jmp
gs
stos
dec
movsb
pusha
lcall
bound
cmc
mov
aas
push
mov
mov
sbb
cmpsb
push
lock
sub
fcomp
aaa
sbbb
and
sub
mov
fstps
stos
xchg
fdivs
aaa
inc
loope
pop
mov
pop
ficoml
popa
mov
push
lds
add
cmpsl
call
imul
shr
and
push
mov
test
js
pop
mov
jnp
jae
pop
sub
movsb
pop
fmulp
sbb
and
lcall
xorb
jecxz
lcall
mov
lea
adcb
add
decl
in
and
sbb
cmp
mov
outsb
mov
sub
mov
jno
incb
arpl
sbb
mov
xor
sbb
dec
cld
in
or
dec
jne
jl
add
push
sbb
push
ss
lds
jb
sbb
push
cwtl
or
lret
dec
mov
rcll
add
mov
xchg
mov
dec
je
mov
cltd
or
jg
pop
into
into
into
nop
and
inc
jns
xor
mov
subb
shrl
sbb
dec
cmp
add
shl
adc
loop
cmpsl
repnz
and
push
lock
jno
mov
das
in
push
adc
bound
rcl
xor
lds
xchg
leave
mov
cmp
sbb
dec
or
stc
ds
cmpsb
stos
daa
imul
dec
mov
sbb
add
pushf
pop
enter
cld
nop
inc
adc
adc
fcmovne
inc
scas
sbb
or
inc
imul
dec
sbb
popa
sub
inc
sbb
pop
nop
mov
addr16
int3
imull
mov
jns
pop
loopne
adc
jmp
mov
cmp
and
test
and
mov
loope
arpl
or
cmovnp
xchg
jg
repnz
cmp
sub
repnz
js
and
imulb
sbb
dec
out
inc
xchg
xor
addl
frstor
xchg
jmp
dec
mov
or
jnp
addr16
decl
push
lods
mov
mov
movsl
push
sub
lahf
enter
dec
dec
add
call
js
xchg
stos
push
xor
aaa
ffree
sti
pop
mov
mov
mov
add
icebp
test
cmpsb
mov
lds
popl
mov
or
adc
out
sub
cmp
push
pushf
and
inc
mov
js
dec
aam
fwait
imul
xlat
and
adc
pusha
icebp
xor
mov
mov
out
jg
or
sti
xor
cmp
cmpsb
cmp
cwtl
dec
gs
leave
clc
xor
sub
add
les
mov
adc
jbe
repnz
mov
das
pop
outsl
fs
in
mov
push
sbbl
add
jne
push
cltd
cltd
jne
fldenv
and
cwtl
mov
or
push
nop
cmc
imul
int3
leave
imulb
test
je
call
test
xor
call
mov
fwait
push
hlt
test
pop
rclb
jmp
shrb
jb
sbb
pop
daa
out
dec
jle
dec
xchg
jno
pop
mov
dec
aaa
xchg
in
push
push
iret
push
ss
lds
pushl
jmp
xchg
ds
adc
add
pop
jbe
stc
pop
test
mov
pop
mov
out
sbb
pop
clc
inc
mov
imul
push
addr16
popa
insb
push
or
scas
xor
cmp
in
mov
adc
popa
lret
cli
nop
or
push
push
movsl
push
and
fsubrs
ds
test
mov
fisttpll
dec
jle
mov
loop
data16
xchg
inc
mov
adc
ficoml
enter
jg
mov
nop
sub
cmp
mov
adc
cmp
push
aas
add
lea
jbe
or
cmp
lea
dec
cmp
push
mov
ficomps
push
and
jp
lea
movl
in
aas
loop
jne
xchg
xchg
gs
fwait
ss
inc
insb
iret
xchg
adc
jg
addr16
fwait
add
insl
mov
mov
adc
push
pop
jmp
out
push
in
add
ret
inc
loope
out
cmp
jo
sahf
cltd
pop
fisubrs
jb
pop
dec
mov
pusha
jge
cmp
enter
and
insl
arpl
sbb
in
pop
or
test
hlt
aas
mov
cmp
mov
xchg
lret
cwtl
lea
in
jb
inc
pusha
sahf
int3
outsb
pop
fcompl
lahf
and
jmp
or
mov
mov
shll
push
lret
cs
lahf
loopne
mov
sub
scas
lea
rol
mov
imul
popa
push
dec
pop
pop
cmp
mov
out
inc
dec
notb
push
shll
call
adc
pop
cwtl
iret
bnd
nop
dec
mov
jge
fsubs
pop
rclb
push
or
mov
pop
jns
adc
mov
icebp
shlb
inc
mov
test
mov
mov
mov
pop
fistpl
mov
xor
mov
sbb
pop
ds
add
jecxz
ret
pop
cmpsl
or
cmp
repz
xchg
inc
push
fisttpl
loope
xchg
mov
adc
fstps
jge
mov
sub
fstps
sahf
xchg
xchg
cwtl
leave
ret
dec
lods
int3
std
push
and
ret
lahf
inc
pop
loopne
pusha
xchg
xchg
or
pop
in
sub
cwtl
movsb
jbe
push
mov
xchg
stos
sub
hlt
jno
insl
push
add
sub
sub
mov
dec
mov
xor
ret
scas
sti
test
testb
test
mov
lahf
mov
mov
outsb
mov
inc
imul
in
or
enter
test
sbb
push
fwait
pop
rcrl
jg
dec
mov
cmp
jo
dec
sub
pop
inc
mov
xor
mov
ror
push
loop
sbb
pop
ficoms
mov
adc
rolb
add
in
jg
insl
loop
adc
pop
pop
sub
aaa
rclb
cmpl
arpl
add
push
sbb
push
mov
xchg
or
mov
sbb
sub
inc
sbb
in
popf
adc
jle
aas
pop
popa
jmp
ret
jo
cmp
mov
xchg
stos
or
arpl
insl
cmp
or
sbbl
adc
rcll
jo
cmpb
cmp
pushw
mov
mov
sbb
js
cmpsl
xchg
je
mov
sub
cwtl
push
out
jmp
xchg
lret
rolb
cmp
xor
mov
adc
pop
cmp
mov
imul
dec
cld
jmp
sbb
popf
mov
xor
subl
setp
dec
rclb
cmp
pop
ret
leave
mov
mov
fimull
add
cmpsl
mov
loope
ds
out
mov
lcall
inc
int3
mov
scas
int3
mov
cmp
in
jecxz
aam
aas
inc
lret
aaa
fistps
insl
xor
outsl
lret
out
in
jo
jecxz
cltd
addb
mov
rcrl
lret
ficoms
stos
cmp
daa
es
leave
pop
adc
gs
adc
repz
rcrb
or
mov
jp
xor
xor
fisubl
adc
into
add
test
ficoml
xor
push
popa
roll
pusha
popa
xchg
sbb
mov
lods
mov
test
shll
pop
pop
movsl
shrl
sbb
pop
pop
cltd
and
mov
cmp
into
push
loop
mov
insb
pop
fsub
sub
fildll
lds
jns
sahf
lods
push
jns
sbb
test
push
lret
pop
shll
pop
mov
js
mov
sub
lods
mov
add
xchg
xor
fnstcw
fisubrl
or
sbb
lret
repz
or
in
lahf
push
es
or
xchg
int3
loop
adc
scas
mov
inc
mov
mov
push
push
add
fdivrl
cmp
fstpl
and
imul
or
hlt
rcll
pop
dec
mov
movsb
dec
inc
mov
dec
sbb
push
sub
adc
imul
shl
lods
pushf
jno,pt
jge
sti
test
pushf
bound
rcl
nop
push
jmp
mov
cmpsb
cmp
jecxz
je
test
inc
test
leave
cltd
movsl
shrl
loopne
movsb
pushl
fistl
xor
fwait
xor
and
xor
adcl
jo
inc
jp
adc
or
mov
pop
stos
push
int
in
mov
lret
fbstp
dec
mov
add
mov
xor
pop
jge
inc
mov
add
dec
push
adc
sbb
int3
mov
xchg
mulb
jp
push
repz
test
cld
push
hlt
repnz
jno
pop
shrb
or
mov
push
insl
xchg
not
mov
movsl
push
lret
shrb
push
sub
in
pop
outsl
ret
out
ficoml
repnz
mov
sar
stos
ds
test
movsb
sbb
mov
push
cld
cld
test
pop
scas
jne
fmuls
cwtl
push
enter
jecxz
idivb
fs
inc
dec
and
fcom
xchg
test
inc
es
aas
imul
insb
outsb
push
pusha
mov
mull
mov
mov
js
and
clc
mov
test
es
into
inc
lret
mov
cmp
ret
popa
and
sbb
inc
out
int3
fidivrs
and
mov
nop
lcall
das
ret
lods
scas
pop
inc
xor
xorb
sbb
push
dec
sub
push
mov
pop
insb
repnz
fldl
and
jb
in
es
push
xchg
fsubl
mov
fwait
pop
jne
outsl
pop
mov
test
jge
xlat
cmpsl
jl
mov
lret
inc
and
add
push
dec
movsl
xor
hlt
or
mov
andb
mov
jmp
mov
mov
sbb
cmpl
mov
in
mov
repz
mov
mov
xchg
fwait
int3
push
fwait
mov
fadd
orb
sbb
in
xor
pop
pusha
fistps
out
arpl
add
and
cmp
in
adc
and
dec
ja
sub
and
rorl
mov
mov
adc
inc
js
pushf
push
insb
mov
and
scas
inc
out
jp
gs
xor
adc
test
sub
cmpsb
sub
or
push
mov
scas
shlb
sbb
xchg
xchg
call
jecxz
flds
sbb
jle
test
popa
mov
icebp
pop
pop
out
es
pushf
sti
inc
test
jae
fsubrs
imul
mov
jle
test
push
outsb
ja
je
cltd
es
cmp
push
pop
inc
push
jmp
sbb
xor
lcall
xor
push
aas
inc
push
sbb
xchg
xchg
sub
add
push
or
int3
inc
nop
lcall
add
aas
and
stos
inc
inc
scas
add
aad
cmp
fadd
xchg
jl
dec
cld
mov
pushf
js
insb
mov
and
pop
iret
stos
dec
shl
adc
pop
scas
mov
aaa
mov
inc
xchg
incb
mov
sub
icebp
lcall
fistl
or
clc
xor
repz
jecxz
jnp
rorl
sub
or
dec
inc
sbb
adc
push
mov
mov
and
ds
out
inc
pop
mov
push
push
ds
outsl
pop
cli
mov
pop
lds
sub
mov
pop
int3
ds
add
cwtl
imul
mov
jmp
xchg
dec
cld
iret
cwtl
pop
sub
or
sub
scas
stc
dec
xor
sub
mov
fsin
mov
inc
cmp
push
mov
sub
popa
push
ret
pop
mov
or
xchg
xchg
sbb
popa
pop
jecxz
notb
and
cmp
add
push
add
jecxz
push
and
fcompl
xchg
mov
lcall
mov
mov
lods
ds
ret
inc
sahf
jge
cli
jns
mov
inc
addr16
pushl
inc
fwait
aam
loope
outsl
add
fwait
push
and
jb
xchg
je
pop
jecxz
das
pop
push
lcall
setp
mov
test
dec
subb
and
push
dec
sbb
notb
stos
popf
push
call
loop
pusha
lcall
mov
mov
xor
or
cmp
xor
shl
mov
push
jge
in
test
xor
cld
imul
jne
test
leave
adc
inc
pop
stc
inc
divl
push
sti
add
sti
ds
ds
lock
lahf
ss
pop
add
sbb
pop
and
ss
nop
cmp
push
inc
pop
mov
xor
mov
outsl
inc
roll
sub
std
xor
cmp
sbb
cmp
pop
inc
jb
test
popf
mov
mov
or
xor
push
jbe
int
std
dec
mov
mov
in
dec
mov
leave
sbb
mov
hlt
cmp
xchg
pop
inc
jl
in
push
sti
dec
scas
and
and
mov
es
adc
push
sub
dec
inc
sbbl
push
aaa
cmc
mov
and
sbb
les
mov
xchg
mov
xor
lcall
in
xchg
daa
adc
inc
inc
outsb
push
fildll
mov
leave
xchg
mov
sub
sub
inc
iret
pop
push
fisubl
fistpll
add
push
push
addr16
xor
add
jl
mov
sti
sbb
outsb
and
mov
repnz
int3
inc
arpl
mov
jne
adc
adc
push
push
xchg
fdivrs
clc
out
lea
roll
pop
cwtl
mov
ja
jle
mov
and
push
jb
inc
sarb
mov
adc
fnsave
shll
or
loope
loope
adc
outsl
push
jne
gs
lahf
xchg
xor
dec
add
or
pop
fbstp
lea
jb
mov
fmulp
sub
daa
xor
loop
xchg
inc
or
andb
and
out
inc
data16
stc
mov
xchg
xchg
pop
sbb
popa
in
xchg
mov
repz
mov
inc
jbe
stos
test
aad
dec
mov
pop
fcom
outsb
push
pop
cltd
mov
jmp
into
movsb
jo
or
cltd
or
dec
adc
sbb
jbe
lods
or
ljmp
adc
and
or
or
gs
inc
xchg
sbbb
mov
dec
lret
fsubs
ja
or
pop
rcrl
rcl
lret
loop
cmp
fwait
and
stos
mov
insl
aad
push
dec
mov
sub
dec
lret
dec
int
data16
fdivs
xor
inc
pusha
andl
mov
or
movsl
xchg
push
cwtl
jnp
mov
or
pop
cmpsl
aam
pop
scas
stc
shr
jo
mov
mov
inc
pop
je
cmpsl
hlt
fiaddl
mov
inc
sahf
ss
mov
je
call
push
call
and
cmp
lahf
data16
xchg
mov
es
add
pop
pop
loopne
mov
push
adc
inc
inc
loope
test
stos
sbb
jne
sbb
sub
gs
xor
xchg
push
bound
and
jno
xor
mov
add
inc
in
int
jmp
jae
cmp
xor
mov
and
mov
addr16
ja
out
out
pushf
andl
mov
mov
pop
sbb
ds
jle
mov
jmp
dec
lods
cmc
dec
repz
inc
les
sub
orl
adc
pusha
push
hlt
sahf
sbb
push
sub
pushf
je
bswap
jns
cmp
in
aad
cmpb
imul
lcall
daa
fs
and
es
cmp
push
pusha
jmp
xchg
add
mov
add
add
loop
sub
jp
pushf
cmp
and
sbb
push
sub
or
cmp
xor
pop
testb
aam
pop
or
or
ret
cmpsb
fwait
xor
xor
stc
push
jl
fwait
xchg
inc
in
je
test
arpl
xchg
push
jg
int3
imul
sub
mov
int
insl
dec
mov
mov
adc
push
rolb
or
ds
dec
lds
xorb
dec
ljmp
or
push
lea
xchg
cmp
out
shll
mov
adc
mov
cmp
ret
xchg
sub
movsb
inc
push
push
cltd
dec
sub
xor
popf
cmp
pop
xor
xor
cmovo
fildl
aad
es
push
add
das
pusha
pop
sbb
js
xor
pusha
lods
lods
sbb
lock
xchg
dec
sbb
jg
pop
xchg
jnp
xchg
adc
lret
jbe
jns
pop
mov
push
fbld
pop
call
xor
mov
sbb
dec
pusha
dec
cmp
mov
mov
inc
ss
mov
mov
xor
sti
lds
cmp
pop
scas
xor
sub
pushf
dec
xchg
cmpsb
test
jo
mov
add
int
cmp
repnz
js
icebp
push
les
add
dec
xor
rcll
inc
out
mov
cmp
fnstenv
cltd
dec
sub
fcomi
mov
test
mov
xchg
hlt
jae
cli
lds
push
pop
pop
and
mov
in
sarb
call
cmp
shlb
fnstenv
rolb
jb
into
jmp
mov
pushf
aaa
mov
sub
jnp
jbe
mov
in
out
cmp
loope
xchg
or
mov
push
jns
cwtl
sarb
pop
scas
incb
adc
adc
in
jge
push
or
mov
test
mov
aam
jecxz
mov
add
cmc
push
ds
adc
inc
cwtl
in
inc
int
dec
sub
xchg
outsb
scas
push
leave
xchg
mov
or
insl
mov
les
iret
pop
lds
ljmp
adc
sub
lea
or
subb
lahf
pop
cmp
sub
xor
jno
popa
sub
add
inc
mov
aaa
mov
inc
cli
dec
lea
sbb
ja
inc
movsl
jb
mov
jmp
mov
xorb
push
add
aad
cmp
popa
insb
inc
cwtl
sub
inc
adc
les
xor
xchg
insb
shlb
pop
jns
adc
pop
aaa
incb
arpl
hlt
adc
adc
jecxz
inc
push
fwait
add
test
std
std
push
and
lods
dec
jno
push
pop
xor
xchg
aas
push
jl
ret
fdivl
int3
mov
cmpl
jo
xchg
jg
es
xor
arpl
repz
iret
lcall
dec
push
orb
shr
ret
xchg
pop
mov
and
pop
mov
fdiv
dec
cmp
mov
insb
xchg
repz
or
jg
cltd
stos
or
mov
dec
xchg
jae
adc
inc
xor
mov
mov
dec
es
movsb
stc
inc
cmp
daa
test
pusha
outsl
adc
movsl
jnp
pop
outsb
roll
and
cltd
lea
lds
sbb
loopne
jl
xchg
inc
mov
mov
dec
jecxz
jno
ja
popf
test
enter
mov
vcvtsi2sdl
fs
sub
sbb
repnz
lret
cli
lods
sbb
gs
pop
xchg
push
and
cltd
jl,pt
test
push
ret
push
repz
inc
sahf
movsl
or
scas
mov
loop
push
jmp
lds
push
push
sbb
and
jnp
cmp
xchg
mov
fdivrs
xchg
loopne
rorb
mov
add
sti
sub
mov
push
jns
mov
mov
cli
pusha
inc
js
clc
xor
adcb
push
inc
dec
mov
repnz
scas
jae
dec
daa
int3
mov
inc
xor
fisttpl
fnstenv
test
jge
jp
shlb
jae
int
lahf
inc
lea
cmp
shll
fidivrs
dec
aam
mov
outsb
cmp
mov
icebp
or
cld
xchg
jno
test
std
aam
mov
xor
mov
ja
adc
or
lods
fs
je
dec
jge
rorl
mov
hlt
dec
jb
cmpsb
nop
mov
sti
ljmp
lret
pusha
add
jmp
scas
mov
loope
dec
int3
in
adc
and
shrl
xchg
add
dec
xor
xchg
mov
out
jmp
clc
add
pop
pop
dec
loop
fdiv
sub
cmp
shlb
shll
add
inc
ret
and
mov
sarb
xorl
scas
mov
mov
xor
rorl
stc
aad
dec
ret
push
sub
imul
pop
fidivrl
mov
xchg
mov
xchg
lds
es
addl
adcb
imul
xchg
push
jo
bound
add
lret
pushf
pop
test
inc
mull
popf
mov
cmp
rorb
or
xor
xor
cmp
pop
jnp
dec
nop
inc
ss
jge
js
xchg
cmp
rcll
aas
mov
stc
mov
inc
js
je
sarl
dec
adcb
imul
or
frstor
adc
cmp
dec
sbb
lock
test
fsubrs
sub
sbb
out
lea
movsb
cmp
call
xor
inc
push
inc
pop
ja
xlat
or
ret
pop
jae
pop
xchg
in
mov
test
jl
popa
xchg
adc
xor
xchg
cmp
shll
fdivl
sti
cmp
scas
push
xor
mov
xchg
es
adc
cmp
fwait
daa
rcr
out
bound
fisttps
dec
inc
subb
daa
sbb
movsbl
dec
xchg
adc
fwait
mov
sbb
jnp
push
sahf
les
push
std
or
out
mov
sub
sub
test
sbb
add
lods
and
lock
mov
pop
jo
test
cmp
les
pop
push
adc
hlt
sub
movsl
push
sarl
inc
mov
dec
ss
sbb
addb
xor
mov
mov
sbbl
mov
fstpl
arpl
and
and
cmp
aaa
bound
push
std
xor
jecxz
xchg
sub
into
insl
or
sub
xor
fadds
aaa
jne
pop
cld
xchg
aam
lret
jno
inc
test
or
sub
xchg
jmp
mov
push
sub
sub
aas
sub
jl
icebp
das
push
movb
out
dec
xchg
das
and
pop
lea
cmpsl
cmc
rol
push
mov
xor
sbb
push
bound
stc
imul
mov
or
jle
popf
mov
rorl
movsb
lea
ror
iret
pop
stos
mov
or
std
add
out
push
or
fs
ret
faddl
jge
or
mov
dec
dec
xor
and
fldenv
adc
repz
aam
in
and
inc
adc
insb
test
add
adc
hlt
dec
mulb
mov
lods
cmp
pusha
sub
fwait
inc
js
ds
push
adc
dec
cmpsl
and
sub
dec
sahf
jp
jmp
cltd
add
dec
rcrw
xchg
outsl
lea
nop
push
loopne
dec
repnz
popa
xchg
jo
movsl
jns
ss
xor
rorl
inc
sar
pop
lds
push
test
cmp
fmuls
inc
fistpll
insb
das
lods
inc
mov
sbb
je
inc
movb
lret
shrl
sbb
gs
out
or
mov
mov
xchg
in
pushf
sub
adc
jle
call
nop
mov
fs
push
out
gs
arpl
lahf
inc
xchg
jae
out
push
xchg
sbb
outsb
sbb
push
out
push
adcl
pop
add
xchg
inc
or
repnz
pop
clc
in
aaa
pop
lock
and
fsubr
mov
das
mov
loope
das
fs
ss
sbb
mov
add
add
aam
push
xchg
les
and
ret
xchg
dec
pop
jecxz
insl
mov
inc
in
stos
lcall
stos
jne
jnp
loop
into
pop
gs
xor
and
xchg
iret
or
inc
insb
mov
push
hlt
mov
xor
out
or
sbb
add
cld
push
ret
mov
mov
adc
push
aam
lret
bound
ret
lret
movsb
pushf
xchg
sub
or
mov
imul
sub
faddp
mov
loop
out
scas
out
mov
xchg
loope
push
lods
jno
sub
shlb
adc
test
jo
shl
lock
shll
enter
dec
mov
push
jns
mov
daa
mov
or
pop
out
push
cs
pop
or
mov
sub
aam
int
xor
dec
mov
cmp
dec
aas
inc
jno
arpl
fiadds
pushf
addr16
je
insl
push
xlat
add
mov
pop
mov
loope
fbstp
mov
xorl
mov
add
xor
add
imul
movsb
mov
repnz
push
mul
inc
sub
cmp
inc
sbb
arpl
pushf
mov
test
cltd
mov
gs
push
xchg
push
sbb
insb
std
mov
rorl
out
movsl
sti
in
popl
mov
xlat
in
xchg
cli
dec
jne
mov
push
imul
icebp
icebp
mov
shlb
fdivrs
fbstp
xchg
sbb
test
push
cltd
arpl
push
cmp
push
movsl
cwtl
movsl
stc
loope
jno
lock
in
pop
cmp
roll
stos
stc
int
mov
imul
fcmovb
jno
sub
or
push
or
stos
sti
imul
daa
and
xchg
xchg
stos
dec
lock
jmp
loop
movsl
jo
jb
popf
xchg
jns
inc
mov
paddq
xchg
fdivs
test
data16
fcmovb
xorb
idivb
fs
xchg
add
loope
stos
ljmp
lods
and
mov
scas
mov
xchg
cld
out
subb
pop
pop
das
mov
mov
ds
sarl
fs
ret
mov
shrl
cwtl
jg
leave
bound
data16
lcall
in
sarl
lahf
lock
aas
gs
lcall
addr16
outsb
mov
lret
shrl
mov
dec
andnps
adc
aaa
bound
or
or
xchg
xor
andb
mov
ljmp
insb
add
adc
pusha
mov
sbb
pop
shlb
stc
xor
arpl
not
inc
cmpsl
int
ret
adc
and
in
cmpsl
testl
mov
pop
jg
adc
repz
mov
addr16
mov
xchg
in
sbb
xor
fimuls
pop
rcrb
adc
mov
je
add
lods
sbb
aam
add
aaa
lret
cli
mov
hlt
out
ljmp
sub
sti
mov
imul
idivb
lds
jne
rcrl
and
in
xchg
mov
aaa
popf
add
in
inc
hlt
xor
in
xchg
pop
rcrb
jae
cmp
xor
jnp
mov
loop
aad
bnd
inc
cmc
xor
jne
arpl
push
xor
xor
and
ret
daa
fadds
sub
add
lock
adc
inc
mov
xor
pop
jae
push
rorb
insl
xchg
xchg
out
dec
les
insb
std
push
jp
testl
sahf
push
pop
fs
mov
mov
adc
leave
inc
inc
out
fldl
repnz
cmpsb
lds
jo
stc
shl
mov
cmp
cmpb
sub
into
cmpsb
in
cmp
jnp
cs
js
cmp
jns
pushf
pop
daa
bound
adc
test
sbb
leave
or
add
int3
dec
or
lcall
pop
sti
int3
xchg
push
lcall
popa
sbb
jnp
push
sub
jbe
adc
mov
pushf
clc
xchg
mov
or
fadd
ljmp
addb
push
pop
pop
cmp
mov
int
test
adc
jae
ret
jle
xor
fiaddl
into
xor
fdivrl
mov
mov
adc
lods
push
add
mov
push
lret
inc
jg
sub
icebp
jns
mov
xchg
mov
adc
pushf
loopne
outsl
ficompl
jns
fstl
mov
sub
push
add
pop
jns
sbbb
bound
add
je
cld
cmp
or
xor
push
add
in
ljmp
jo
repz
scas
pop
test
icebp
xchg
or
fsts
scas
sbb
mov
mov
loope
hlt
out
test
clc
sub
int
in
test
sub
add
aaa
mov
imul
aam
xor
subb
daa
jl
fcomi
or
inc
mov
pusha
jl
int
cmpsb
pop
loop
or
js
jecxz
in
push
jge
pop
lret
mov
cmp
mov
pop
clc
adc
outsb
push
xchg
loopne
mov
xorl
loopne
cs
pop
rol
cli
push
inc
das
cmp
test
xor
in
pushf
jle
outsl
xor
push
mov
ljmp
mov
stos
inc
out
pop
cmp
cmp
data16
scas
ret
xor
stos
rcrb
lods
pop
push
and
test
outsl
inc
mov
out
call
fsubs
xchg
xlat
or
aam
push
fwait
aaa
xchg
push
repz
out
jecxz
jge
sub
popf
rorb
sti
test
jne
paddusw
or
pushl
add
call
movsl
push
adc
inc
scas
sbb
add
add
push
jge
fisttpll
add
fadd
std
cmp
int3
outsb
pushf
int
push
aas
ret
lds
lcall
pushf
mov
sub
jb
jb
jmp
nop
out
jnp
push
pushf
clc
out
push
movsb
mov
aad
jmp
sahf
push
add
push
add
jno
jo
ror
jcxz
test
mov
lds
sub
daa
adc
mov
test
or
ret
into
sbb
lods
sbb
orl
adc
incb
mov
mov
mov
pusha
push
jae
cltd
mov
rcl
sub
addb
fadds
xor
dec
mov
pop
and
loop
test
in
ret
movsl
iret
cltd
loope
test
pop
xchg
sub
pushf
push
scas
sub
hlt
and
mov
and
xchg
andb
or
rorl
sahf
ss
jge
scas
aam
jne
or
cmpsb
cs
dec
jge
xor
in
push
jle
xchg
je
cmpl
clc
xchg
sub
push
stos
loope
das
stc
mov
shrl
dec
fbld
xor
sub
sbb
jp
and
call
cwtl
and
xchg
xor
push
xchg
sub
and
idiv
and
inc
inc
pop
xor
fidivrs
xor
xor
pushf
mov
xor
popf
xor
mov
sahf
jl
shlb
xor
mov
pop
cmp
sar
and
cmp
cmp
call
stc
in
je
sub
add
xchg
pop
cltd
lahf
mov
div
inc
jns
data16
daa
imul
pop
jb
and
cmp
gs
sub
and
gs
fs
mov
and
mov
mov
push
sbb
sbb
add
loop
std
pop
aas
icebp
dec
and
cmpsb
ficoms
mov
fnsave
xchg
cmpsl
jle
dec
inc
push
and
mov
loope
xor
movsb
loopne
xor
pusha
jnp
and
mov
aad
mov
mulb
inc
pop
inc
test
sub
filds
jp
and
or
mov
pop
lret
and
into
rcrl
cmpsl
xchg
or
out
xor
sbb
cltd
mov
or
out
xlat
pop
out
xor
shlb
lds
adc
push
aam
mov
push
cli
dec
jge
rcll
stos
dec
xchg
arpl
clc
pop
rcrl
adc
push
in
insl
cvtpi2ps
sbb
inc
adc
leave
std
jbe
nop
fiaddl
loopne
das
or
das
jmp
les
nop
mov
jmp
into
dec
xor
cmp
data16
jmp
bound
pusha
push
dec
mov
fs
push
mov
call
and
mov
fwait
push
in
or
loop
inc
cmpsl
xor
fcmovnbe
mov
mov
movsl
cmc
push
mov
in
es
push
cmp
cmp
ret
push
mov
jae
test
stos
mov
add
das
sub
xlat
jl
rol
movsl
into
xor
data16
cli
xor
mov
dec
or
sahf
js
jecxz
mov
jmp
aad
inc
mov
cmp
jmp
lret
mov
fidivl
int3
loopne
dec
ja
adc
andl
xlat
shrb
inc
fldl
dec
ss
dec
ret
push
fwait
test
aam
pop
leave
repnz
push
add
pusha
mov
dec
xor
ret
shl
and
in
jle
lea
mov
cmpsl
icebp
loop
out
cmp
pop
insl
adc
push
pop
dec
imul
mov
sub
mov
mov
sub
cmp
jg
popa
jne
cmp
pop
mov
pop
popf
inc
lret
and
push
inc
in
shrb
xchg
gs
cmc
pop
adc
outsb
roll
sbb
mov
mov
add
in
fstpt
inc
dec
jle
cli
mov
adcb
loopne
push
popf
outsl
push
push
and
or
jl
dec
push
lea
dec
pop
std
sub
aam
mov
mov
jbe
mov
and
rcl
in
or
pop
pop
sbb
stos
test
ficomps
pop
test
cmpsl
dec
mov
adc
jne
jmp
bound
daa
stos
and
jg
jno
aam
jp
lock
pop
jg
lods
inc
adc
push
xor
dec
lcall
jmp
imulb
movsl
lcall
xor
stos
loop
sahf
mov
jecxz
orl
dec
ficoms
fnstsw
es
test
iret
mov
xor
adc
dec
sbb
pop
pop
mov
sbb
and
shlb
lock
sub
cli
cs
adc
lods
lcall
jmp
and
in
jb
pop
cmp
push
in
out
movsl
mov
fsubs
lcall
and
rcll
rcrl
inc
stos
movsb
xor
divl
jg
mov
out
pop
ja
push
aam
hlt
imul
adc
xchg
and
xchg
arpl
mov
hlt
mov
xchg
cmpsl
inc
mov
jl
enter
or
popa
ret
or
push
mov
adc
push
call
in
dec
cltd
cltd
xor
pop
sbb
lods
jne
and
dec
insb
cmpsb
out
mov
gs
clc
dec
ret
push
loope
inc
mov
xor
cmp
shll
jle
fidivl
push
enter
rclb
cld
and
dec
push
test
jb
icebp
movsl
inc
std
cld
mov
xchg
fimull
mov
mov
std
pop
adc
lret
mov
ficompl
andb
fcomps
loope
movl
cmp
in
repnz
sub
pop
pop
jp
sub
or
cmp
iret
cs
test
mov
stos
test
fists
test
scas
fidivs
adc
aaa
mov
pop
lcall
pop
jle
mov
lahf
int
lods
pusha
pusha
xor
out
lods
orb
cmp
addr16
bound
xchg
pop
pushf
and
inc
arpl
sub
mov
pop
in
flds
in
das
and
sub
mov
cmp
test
stc
mov
cltd
mov
inc
inc
fucomp
scas
adc
and
lret
push
mulb
xchg
lock
pusha
lret
movsb
mov
scas
in
dec
sub
dec
stos
jg
popf
dec
mov
outsb
sub
out
mov
data16
call
sbb
jnp
imul
or
es
dec
cmp
std
sbb
gs
xchg
push
mov
into
and
out
add
scas
jmp
test
ja
inc
je
jbe,pt
mov
in
sbbb
cwtl
lods
pop
daa
iret
shrb
sarb
ljmp
jae
or
dec
addb
push
ret
mov
or
fmull
in
xor
fistpll
xchg
fcoms
mov
sub
sahf
mov
dec
cmpsb
inc
jp
and
xor
jb
rcll
ret
jnp
push
xorb
inc
cmpsl
arpl
xor
pop
sbb
mov
adc
sub
arpl
ret
and
fstpt
mov
insl
jae
test
sub
push
sbb
pushf
ja
std
push
inc
popf
outsl
xchg
jns
dec
icebp
fcompl
rolb
mov
mov
adc
cmpsb
cli
pop
cmp
inc
nop
fs
sub
std
cwtl
into
jmp
and
add
pop
push
push
jno
aam
push
jae
mov
pusha
idivb
push
jg,pn
loope
nop
pop
mov
outsl
movsl
repz
mov
mov
push
shr
jmp
fisttps
mov
ss
lret
add
jne
pop
test
or
jp
or
inc
cld
hlt
inc
movsl
xchg
pop
cld
mov
mov
aam
inc
cmpsl
dec
icebp
dec
jmp
pushf
jno
test
cmp
mov
cli
adc
gs
pushf
loopne
push
mov
cltd
xchg
int3
mov
sbb
adc
and
mov
mov
cmp
cwtl
mov
inc
scas
mov
cmp
notb
out
jge
dec
in
int3
stos
sti
fiadds
int
repz
es
push
push
push
mov
fcmovnu
mov
sbb
lret
rcrb
xchg
pop
or
cmp
or
or
mov
add
into
sbb
inc
add
push
mov
cmp
js
mov
fldl
sbb
cli
dec
popa
cmpsl
mov
ljmp
test
addl
lock
pop
sub
movsb
int
xchg
arpl
jg
imul
add
popa
sbb
push
mov
xor
jo
adc
stos
push
roll
cmp
mov
or
gs
dec
and
aad
lods
test
sbb
sub
dec
test
dec
call
sbbl
jp
sti
mull
push
out
lret
aad
mov
cmpsl
and
dec
iret
add
jl
jmp
mov
cmp
js
adc
js
mov
es
mov
mov
xchg
jbe
mov
scas
inc
dec
mov
imull
xchg
sbbl
lret
fldcw
push
shlb
aaa
mov
mov
mov
mov
lcall
je
or
or
jnp
aas
test
push
mov
inc
inc
xorl
adc
rcll
xchg
fstpt
mov
xor
imul
add
pop
addr16
mov
mov
shlb
cld
movsb
lods
in
fistps
and
push
popa
cmpsb
mov
push
mov
loope
gs
testl
push
mov
add
and
dec
lret
in
ljmp
inc
push
sbbb
xchg
xchg
dec
or
loop
mov
pop
data16
xlat
jge
jnp
push
in
lds
jl
sbb
push
cmc
in
in
les
jmp
fstl
shr
iret
mov
and
xchg
insl
ljmp
lahf
icebp
dec
mov
mov
jecxz
jb
sahf
fldenv
incl
inc
mov
ljmp
cwtl
xor
mov
cmp
loope
rolb
scas
push
push
loope
mov
pushf
cmp
or
shrb
and
mov
inc
lods
add
clc
pop
repz
sbb
and
dec
sbb
in
pop
clc
or
dec
test
xor
es
xchg
push
std
lods
lods
jns
lea
movsb
pop
jecxz
cli
dec
pusha
mov
cmpsb
int
xor
inc
inc
call
jbe
cld
adc
push
mov
jg
fidivl
jp
push
test
sub
cmp
push
xchg
sbb
pushf
adc
mov
lret
adc
pop
push
add
int
inc
xchg
das
or
aaa
das
ljmp
dec
test
jl
xlat
je
ljmp
and
lods
push
xor
leave
push
cmp
movsb
dec
push
repz
mov
add
push
sub
hlt
xchg
mov
cli
xchg
insl
in
pop
jne
out
and
mov
pop
fdivrl
push
mov
mov
cmp
xor
int3
sub
jg
adc
cmc
stc
sahf
xchg
test
jmp
jbe
dec
xlat
std
std
dec
cmp
jecxz
stc
ret
mov
mov
and
outsl
push
xchg
mov
loope
xchg
pop
sub
and
test
dec
cmp
lods
out
cli
cli
pushf
rolb
nop
mov
stc
nop
cmp
jmp
andl
out
les
test
xchg
sbb
push
pop
je
inc
xchg
in
scas
pop
mov
sbb
add
inc
sbb
push
jl
frstor
pop
ljmp
lret
test
cli
mov
xor
leave
pushf
dec
push
or
push
dec
xchg
test
dec
test
sbb
insl
aam
cmp
mov
jg
insl
push
cs
cmp
scas
repnz
popf
fildl
mov
clc
xchg
cld
add
pop
enter
mov
scas
xchg
cltd
pop
jle
in
xchg
outsb
out
popa
loope
jbe
aaa
fcomps
inc
ljmp
mov
or
imul
xor
popf
repz
icebp
pop
pushf
ja
fs
jne
xchg
subl
data16
scas
flds
lea
and
pop
lahf
push
adc
mov
movsb
jns
pop
mov
cmp
sbb
mov
cmp
mov
js
gs
movsl
push
clc
adc
or
xor
shrb
xchg
jnp
or
movsb
sub
xor
ret
jbe
xor
pop
cmp
std
stc
mov
cmp
fwait
icebp
add
mov
mov
xorb
andb
lret
jo
nop
int3
dec
movsl
insb
stos
insl
xor
into
rorl
xchg
sub
lods
fldcw
mov
inc
sbb
ja
stos
add
sbb
js
loopne
gs
jb
out
fbld
js
je
lock
stc
fists
ret
mov
push
jae
enter
addr16
adc
and
push
pusha
push
sbb
push
dec
fsubl
add
lods
clc
adc
orl
repnz
ret
jp
dec
pop
insl
mov
les
pop
sub
jmp
adcl
push
icebp
repnz
jnp
imul
in
inc
push
ret
pop
gs
fs
pusha
mov
dec
xor
std
cmp
dec
popa
and
sbb
pop
dec
les
xchg
or
pop
insb
xchg
bound
inc
loop
addr16
inc
into
mov
ds
or
inc
neg
testl
adc
movsl
jg
sub
fcmovu
repz
mov
inc
fisttpll
and
xor
ds
stc
cld
pop
add
push
cmp
xor
inc
pop
in
mov
adc
inc
push
pusha
outsb
aam
rcl
sti
pop
iret
sub
xor
jmp
pop
fs
lahf
or
and
add
mov
stos
fdivr
enter
xlat
mov
sub
daa
xchg
push
out
int3
sub
mov
mov
out
adc
pop
mov
dec
clc
in
daa
imul
or
dec
xor
mov
shl
in
adcb
cli
push
lahf
xchg
ret
and
test
jbe
out
fwait
xchg
dec
pop
gs
into
lock
pop
rolb
push
mov
mov
arpl
cmp
adc
std
add
cmp
bound
lcall
sahf
jmp
pop
pop
je
mov
pop
rcl
ret
ljmp
outsl
test
insl
jecxz
mov
xchg
or
xchg
addr16
pop
mov
mov
lock
xor
orl
sbb
in
push
and
dec
and
adcl
inc
rclb
ss
inc
mov
sar
and
cmp
test
xchg
xchg
jp
repnz
pop
pop
jb
rorb
shlb
movsb
mov
fs
jbe
cwtl
nop
pop
sbb
aad
or
xchg
adc
dec
sub
push
scas
cmp
push
push
movsb
sub
pop
test
jmp
int3
sub
xor
jns
fs
push
inc
inc
adc
push
pop
fisubrs
bound
ss
insl
in
xor
push
adc
push
jbe
and
lods
cmovle
mov
add
shr
fidivl
or
pop
mov
inc
sub
xor
sbb
lods
ljmp
mov
aas
loope
movsb
cld
loopne
cwtl
lods
std
mov
leave
sub
mov
jae
mov
fdivl
mov
jns
movsb
loope
cmp
movhlps
or
cltd
test
push
pop
scas
movsb
bound
test
filds
push
mov
scas
adc
or
inc
xchg
mov
enter
push
sbb
jmp
inc
sbb
rclb
fdivs
mov
call
fiaddl
xchg
out
cmp
dec
xchg
jns
lahf
into
addl
fdivrp
loope
jge
mov
and
in
sub
mov
outsl
lods
dec
jmp
test
dec
cmp
pop
fldt
lahf
shll
or
adc
push
outsl
femms
insb
inc
insb
clc
out
dec
fs
push
xchg
lods
mov
or
or
jns
sub
lahf
or
adc
xchg
test
fnstenv
xor
cmc
jns
fmull
sub
inc
arpl
pop
andb
fistl
decb
movsb
ja
cld
dec
mov
jl
adc
imul
leave
es
aaa
pop
xchg
imull
sbb
int
cs
inc
outsb
jg
adc
mov
popa
out
in
and
xchg
fisttps
clc
adc
sbb
in
aaa
xlat
mov
cmp
pop
cld
mov
sarl
jo
rcl
or
add
addl
lea
cwtl
aaa
ja
xchg
sub
sbb
xor
push
movsb
jg
nop
scas
xchg
dec
xchg
dec
dec
cld
sub
iret
mov
jns
out
aad
in
or
int3
or
jne
inc
xor
imul
test
aas
xchg
add
cmpsb
lods
sbb
or
pop
jl
or
jge
add
lods
sub
test
enter
xchg
aas
pop
dec
bnd
xchg
mov
pop
aas
mov
pop
clc
loope
pop
mov
lret
pop
cwtl
xchg
or
test
and
ret
rcrb
imul
call
jmp
mov
pop
xor
jbe
mov
popf
push
push
xor
jge
outsl
loope
mov
clc
ljmp
in
jle
in
test
and
arpl
lret
mov
cmp
xor
imul
add
dec
ret
js
inc
mov
test
call
mov
mov
imul
jecxz
push
imul
dec
inc
and
aam
shrl
clc
imul
xlat
push
and
mov
dec
or
sub
add
data16
in
fcmove
iret
jecxz
movsb
lock
adc
push
cmpsb
fstl
sbb
mov
xlat
xchg
xchg
ds
jmp
aad
xorb
mov
cli
sbb
xchg
rol
add
arpl
adc
loope
imul
rcrb
scas
jecxz
test
fwait
sub
and
dec
dec
sbb
in
mov
fdivrp
test
sbb
outsb
xchg
aas
test
jg
test
or
fsubp
cmp
ret
pop
into
jle
inc
test
jne
loopne
mov
fadd
dec
js
and
push
enter
adcl
int3
lea
addr16
push
shrl
out
sbbb
add
jp
add
dec
push
mov
dec
stos
repz
rorb
add
jl
clc
andb
mov
loop
mov
insb
jne
mov
les
movsb
and
mov
cmp
jmp
daa
or
outsl
imul
and
pop
and
and
jg
push
cmp
gs
ret
add
std
mov
mov
test
cmp
ret
push
lea
es
das
jl
mov
jnp
xchg
movsb
push
jg
push
je
call
movsl
or
pop
pop
test
out
inc
insl
cmpsl
pop
adc
xor
xchg
mov
inc
shrb
inc
pop
jns
in
int3
cltd
jecxz
bound
shlb
inc
cmp
movsl
xchg
fidivs
xchg
sahf
cmp
mov
insl
inc
mov
sbb
jbe
pop
imul
pop
dec
xor
add
stc
pop
jl
cmp
lret
jg
xor
shlb
sahf
ret
jne
jg
iret
pop
push
cmp
lahf
mov
int3
lods
pusha
pop
mov
bound
push
pop
shlb
sbb
mov
clc
call
or
push
out
push
xchg
xor
push
mov
xorl
cmp
push
cltd
xchg
pop
out
jmp
jns
jge,pt
or
xor
sbb
dec
pop
scas
inc
push
cmp
jns
mov
leave
lcall
into
test
mov
fs
jns
cld
adc
in
mov
fldl
iret
add
jg
dec
jge
jp
out
push
xchg
jns
xchg
and
mov
push
mov
aaa
leave
sub
jg
xchg
jb
jge
cli
xor
mov
add
and
int
sub
pop
inc
andl
push
stos
and
insl
xchg
lds
xchg
jmp
dec
leave
aad
xor
popf
outsl
push
or
insb
cs
repz
int3
push
rorl
xor
es
push
daa
lock
push
fnstcw
lock
cs
sbb
sbb
push
gs
add
movb
push
dec
loopne
xchg
sub
sbb
sahf
push
inc
gs
push
fldenv
xchg
xor
mov
add
push
lahf
jle
outsb
pop
enter
movsl
sub
xchg
sub
mov
cmp
inc
dec
jb
in
pop
jns
fcoml
cmp
or
sbb
clc
xchg
ss
xor
xchg
cmp
insb
fwait
mov
hlt
push
cmp
es
loopne
dec
lods
dec
cmp
test
neg
and
ds
sbb
sub
scas
psubb
cmp
sti
mov
sbb
pop
aas
adc
or
int3
mov
mov
mov
out
pop
mov
inc
sub
int3
jb
xor
pop
mov
mov
out
sub
out
mov
or
mov
imul
mov
stc
rclb
push
and
jmp
or
mov
inc
ret
and
lret
cld
mov
mov
mov
ljmp
in
xchg
sbb
cli
push
jnp
loop
sub
lahf
jo
into
cmc
xor
dec
jb
sahf
adc
arpl
inc
sbb
aad
push
es
movsl
sub
mov
pop
xchg
dec
jae
cli
int
pop
cmp
mov
add
in
mov
push
negl
sub
es
dec
ret
and
xchg
sub
push
js
cwtl
test
out
fwait
and
xchg
and
xlat
loop
inc
or
mov
fcompl
outsl
jg
cmovle
mov
scas
stc
repz
sbb
cmp
pop
mov
ss
mov
out
dec
cli
gs
push
jo
cmc
cmp
leave
lret
sub
shlb
mov
idivb
aas
dec
push
lea
xchg
pop
cmc
cmp
repnz
int
loopne
sbb
scas
jl
fnsave
fcomps
cmp
es
scas
jbe
aad
cmpsl
mov
sbb
xchg
rorb
out
ss
push
outsb
pop
mov
pop
mov
inc
test
push
jbe
ret
adc
shll
jl
addl
cmpsb
out
test
addr16
jmp
out
in
shl
inc
ljmp
xchg
pop
leave
inc
sbb
popa
add
mov
in
ret
mov
fimull
sub
shl
testl
add
popf
mov
xchg
sub
add
je
pop
inc
lock
stc
lds
lret
mov
fadd
sub
sub
addr16
fs
cld
push
sarl
mov
and
mov
or
sti
addr16
sahf
dec
shlb
subb
pop
xchg
call
push
push
jo
mull
into
out
aam
add
jmp
xchg
lods
das
stos
cmpsb
dec
in
mov
xlat
outsl
mov
std
fists
sbbb
into
jl
pop
into
ret
push
cmpsb
and
dec
mov
ss
mov
sysret
sub
jne
xor
lret
adc
mov
mov
pop
stc
dec
add
imul
ja
in
sub
out
out
xchg
or
jmp
pushf
add
jne
mov
sbb
movsl
mov
movsb
xorb
lock
push
and
xor
xor
and
cltd
fstpt
adc
jle
push
testb
xor
mov
adc
jmp
mov
jbe
popf
popa
dec
out
cmp
mov
xchg
fucomi
mov
jne
xchg
imul
sub
mov
push
pop
inc
rcr
adc
push
jae
inc
loope
fs
push
push
popa
jp
repz
cmp
xchg
xchg
dec
xchg
xchg
jl
sub
out
sub
xor
int3
fadd
mov
add
xchg
fsubrl
mulb
push
out
jbe
std
pop
sbb
aam
scas
negl
sbb
jno
mov
test
fldenv
sub
mov
test
fsts
out
cmp
and
jbe
outsl
sub
adc
cwtl
or
jns
lahf
jbe
scas
push
adc
iret
fwait
sub
dec
mov
inc
push
xor
mov
fdivrl
mov
in
cmp
mov
push
and
nop
gs
or
dec
mov
dec
sbb
push
and
mov
mov
shrl
iret
shll
push
loope
jge
mov
dec
aam
insb
bound
add
mov
cmpsl
dec
and
shrl
imul
aaa
jmp
test
stos
pop
pop
xchg
scas
dec
scas
outsl
mov
add
ja
dec
cmpsl
mov
mov
scas
pop
jecxz
lret
cmp
dec
scas
addr16
test
test
or
jmp
adc
xchg
dec
push
inc
mov
call
jb
jl
sti
add
jae
jle
stos
aaa
adc
xlat
mov
xchg
inc
push
cs
xchg
sub
int3
shlb
push
jecxz
sbb
in
sub
mov
sbb
fidivrs
mov
fwait
imul
loopne
js
arpl
pop
stc
out
jg
cld
std
subb
fwait
jo
inc
sbb
cmp
popf
mov
inc
ds
arpl
xchg
scas
dec
movb
scas
xor
push
sbb
stos
fiaddl
enter
in
add
mov
arpl
adc
cli
repz
push
mov
sub
jb
mov
popf
push
mov
xchg
sub
mov
mov
rol
scas
push
ret
aas
test
mov
push
addr16
loopne
mov
and
adc
insb
push
shlb
cmc
test
pop
mov
gs
rcrb
das
adc
inc
cmc
and
cmpsb
shlb
mov
mov
push
daa
int
cltd
pop
stos
lret
inc
mov
xor
popa
cwtl
icebp
cltd
xchg
mov
xchg
cld
enter
sub
outsb
mov
mov
test
pop
push
mov
pushf
jo
pop
mulb
test
pushf
lretw
out
inc
rcll
icebp
mov
in
bound
stos
sub
shrl
inc
or
into
test
mov
dec
adc
data16
sub
add
cld
xchg
jl
xor
cld
sbb
push
sahf
mulb
int3
out
mov
aas
rorl
movsb
add
stos
mov
pop
leave
pop
andb
icebp
sub
mov
std
push
cmc
push
div
add
inc
insl
xchg
scas
insl
and
mov
push
sbb
lret
test
jecxz
or
shll
add
dec
xchg
shll
pop
les
arpl
mov
mov
mov
mov
mov
dec
loopne
add
sub
sub
push
pop
mov
scas
adc
out
and
lahf
fwait
mov
shrl
repz
xchg
or
sbb
js
lret
inc
dec
in
out
and
and
jno
xchg
int
in
mov
xchg
dec
add
int
add
add
lret
and
sahf
nop
jmp
pop
xchg
ficoml
stos
ds
or
add
mov
lock
push
inc
ret
mov
jne
add
repz
sub
int3
repz
lock
fists
cli
in
shll
jle
xor
fbstp
loope
pop
ja
inc
mov
gs
dec
push
pop
cmp
inc
dec
mov
pop
sbb
sbb
mov
mov
push
rcrl
aas
mov
xchg
test
push
sbb
nop
jo
mov
pop
aam
xchg
outsb
dec
pop
hlt
inc
add
out
push
lea
aas
and
out
iret
popf
cmp
nop
daa
jbe
sbb
insb
pushf
std
jno
ljmp
push
cmp
xlat
pop
scas
arpl
pushf
mov
xor
fildll
sub
scas
dec
sbb
adc
and
xchg
cmp
cltd
mov
push
xor
adc
jne
sub
add
jne
mov
pop
dec
dec
or
mov
mov
xchg
adc
scas
jle
push
outsb
cltd
inc
cmc
cltd
xchg
sub
lock
sbb
push
mov
ss
mov
lahf
subb
mov
xchg
popa
sbb
xor
inc
mov
sbb
inc
or
ds
jae
pop
push
adc
jge
into
aas
out
jbe
inc
sub
sub
push
stos
cld
xchg
pop
enter
pop
js
mov
push
ljmp
nop
xchg
xor
adc
faddp
xchg
sub
mov
les
cmpl
push
inc
dec
dec
lret
mov
pop
pop
fidivrl
mov
xchg
jecxz
sub
int
out
add
xchg
lock
mov
repnz
jb
jbe
sub
pop
clc
leave
cmp
cltd
jmp
cmp
push
xchg
cmp
mov
adc
add
xor
push
and
jb
popf
pusha
inc
iret
xchg
pop
in
push
mov
dec
mov
xor
cwtl
int
popa
mov
mov
cs
cmc
clc
jo
les
add
lahf
add
clc
jmp
enter
out
test
hlt
and
dec
sti
jae
sahf
push
rorl
sbb
jns
daa
jle
js
pop
movsl
dec
in
sahf
mov
ds
bound
rcrb
fmull
push
stc
gs
jnp
popa
fwait
cs
push
sti
sbb
mov
into
stos
adc
mov
or
ds
push
movsb
mul
lret
mov
arpl
js
jp
test
mov
pop
fstl
pop
pop
das
lods
or
push
dec
pusha
adc
mov
inc
jae
repnz
and
inc
xlat
stos
loop
sbbb
jb
lods
loopne
push
clc
lds
rclb
rorl
or
sbb
jbe
xchg
scas
rclb
lock
dec
sub
xor
xchg
adc
mov
aam
push
rcrl
es
xchg
inc
loope
sbb
pusha
mov
inc
or
insb
inc
lock
jae
lahf
sub
not
cltd
movl
push
cmpsb
mov
add
jbe
insb
int3
push
and
call
mov
and
aad
out
or
flds
xor
cmc
insl
dec
dec
cwtl
mov
in
ja
popa
xchg
or
rcll
xlat
mov
push
add
sub
repz
aam
mov
test
pop
and
pop
and
js
ja
mov
xorl
pop
fisubrl
jo
jecxz
xchg
pop
push
mov
jne
stos
inc
repz
adc
cmp
or
xor
add
inc
cwtl
xchg
dec
ret
rcl
inc
stc
or
sub
sbbl
loop
push
pop
push
push
or
rcll
xlat
cs
scas
aaa
cmp
shll
aas
testb
push
inc
inc
sarl
pop
aas
pushf
jo
loope
mov
mov
fstpl
jp
ss
add
mov
sub
ss
clc
and
push
dec
dec
mov
stos
cwtl
mov
fnsave
mov
jmp
fisubrl
xchg
cmp
mov
pop
sub
jle
and
push
xor
push
rcll
mov
dec
pop
decl
mov
jno
lret
sub
pop
xchg
add
xchg
arpl
popa
fmul
movsb
sub
pop
imul
or
cwtl
or
cld
cmc
sbb
cmp
cld
paddsb
data16
clc
enter
xchg
xlat
idiv
mov
mov
mov
jg
imul
mov
insl
lahf
mov
loopne
mov
inc
sbb
push
out
jle
jl
adc
dec
scas
cli
push
mov
test
sarl
jmp
icebp
insl
scas
repnz
imul
jnp
sbb
mov
lods
mov
lds
xchg
inc
dec
cld
add
in
mov
mov
dec
bound
lds
pop
jb
or
jne
fdivl
dec
adc
pop
mov
pop
dec
scas
sub
adc
and
mov
and
and
mov
xchg
inc
mov
dec
sub
jb
dec
sub
repz
mov
xchg
push
mov
sbbl
int3
shr
sbb
xchg
push
gs
or
jp
addr16
sbb
xchg
test
cld
add
cld
push
push
fs
xchg
sar
mov
inc
mov
mov
add
pop
add
enter
add
jae
mov
lods
test
sbb
mov
cmp
out
out
outsb
pop
in
and
repz
sbb
inc
icebp
insl
xor
and
xor
fwait
add
push
sub
shrl
je
lock
pop
mov
or
sbb
das
outsl
int3
or
mov
gs
jp
xchg
sbbl
in
mov
pop
imul
sub
je
and
pop
inc
add
mov
inc
mov
jmp
outsl
jae
imul
les
mov
imul
stos
sahf
fs
jmp
cmp
sbb
fcompl
in
pop
filds
dec
dec
add
cmpb
cmp
mov
nop
in
leave
inc
pop
fwait
loope
clc
das
mov
and
imul
lret
and
mov
xchg
xchg
mov
mov
or
bound
mov
ds
mov
addr16
mov
dec
cmpsl
ss
std
push
iret
sub
sti
lods
pmulhw
sarl
scas
nop
lods
push
cmc
sahf
sbb
mov
or
aaa
xchg
std
jns
lcall
add
fmuls
lea
popfw
data16
push
mov
cmp
ret
stos
and
cwtl
mov
mov
enter
mov
jecxz,pn
mov
or
cmp
sbb
cltd
xchg
cmp
jne
jae
pop
mov
imul
in
pop
or
repnz
adc
lret
iret
inc
out
ret
or
test
fistpl
xchg
mov
cmpsl
test
xlat
add
jns
in
loope
frstor
ljmp
fwait
outsl
mov
fcompl
and
es
or
mov
xchg
jne
dec
jae
sbb
fcmovb
ljmp
pop
lret
jno
rorb
dec
roll
fcoms
shl
sub
push
nop
ret
popl
xchg
adc
lds
jne
mov
jne
jl
lret
and
out
sbb
jns
xchg
shll
add
ret
cmp
imul
sbb
jle
cld
outsb
xor
es
cld
ror
mov
test
insb
dec
stos
push
js
xchg
test
sub
push
pop
lods
cwtl
aam
into
or
pop
sarl
lods
cmp
decb
data16
jno
data16
jae
mov
rcrl
out
ret
xor
dec
push
jbe
nop
rcrl
aam
mov
mov
decb
xor
sub
jbe
outsb
adc
pop
or
sub
ljmp
pop
cmp
pop
mov
mov
jl
adc
and
orl
mov
inc
cwtl
ss
xor
pop
cmp
ja
inc
jns
ds
mov
fcomps
xor
mov
repnz
mov
pop
out
jmp
mov
xlat
push
sub
outsl
shll
loope
inc
push
leave
fwait
popa
rcl
inc
sub
in
pop
dec
adc
cmp
pop
fsubrl
sub
je
cmpsl
jbe
jne
jge
jbe
lcall
mov
sub
hlt
pop
cmp
inc
ss
or
mov
das
or
mov
and
jbe
xchg
inc
ja
lcall
fcomi
out
je
dec
cld
loope
fs
movsb
sub
mov
mov
lods
push
and
mov
fistps
test
int
add
dec
enter
push
sbb
pop
test
adc
pop
repz
adc
shl
push
sbb
imul
rcl
popf
stc
mov
jle
adc
jno
cmpl
fiadds
push
jo
cmp
sbb
sbb
ljmp
or
test
xchg
call
lret
push
pop
dec
arpl
xor
jg
sub
sub
int
test
push
mov
loopne
push
mov
mov
loope
aam
jbe
mov
repnz
jle
jo
cltd
js
xlat
pop
outsb
xchg
adc
pop
test
outsl
adc
bound
stc
inc
adc
or
dec
fidivrl
out
enter
imul
and
push
fistl
lods
xchg
jmp
ljmp
nop
cmp
test
and
shll
mov
js
xor
in
push
add
outsl
jo
sub
or
xchg
int3
mov
adc
cmp
mov
movsl
ret
jle
push
xchg
and
ret
push
aaa
outsb
ljmp
rcl
jmp
adc
push
dec
adc
xchg
cmp
ja
adc
out
inc
xchg
imul
xor
mov
mov
stc
int
test
dec
sti
out
jnp
dec
push
cmp
cltd
loope
lods
or
mov
icebp
mov
pop
jp
xchg
cs
andb
das
pop
icebp
jmp
jbe
inc
nop
incb
push
add
ja
push
cltd
sahf
jmp
push
movsb
sbb
dec
fcmovnb
daa
cmp
xor
add
mov
jg
and
xor
inc
rcll
cmp
lock
mov
pop
mov
repnz
popa
jle
sbb
aas
mov
aaa
jg
mov
adc
stos
dec
rcll
or
sbb
inc
orl
jg
push
jle
push
adcb
dec
push
and
sti
and
lods
pop
or
rcrl
cmp
push
jmp
jl
mov
xchg
data16
sbb
xor
scas
cmp
je
and
test
inc
iret
divb
loope
movsb
int3
push
mov
rcll
pop
jg
sbb
push
leave
and
into
mov
jge
sti
daa
pop
inc
scas
jo
cmc
jecxz
cld
add
sub
inc
add
mov
cmpl
lock
aaa
jns
dec
pushf
lcall
mov
call
add
add
lret
test
sub
pushf
push
enter
cmp
mov
push
sti
and
nop
and
test
test
mov
mov
xchg
xchg
mov
cmp
out
movsb
std
cmp
mov
lahf
test
js
mov
addl
pop
add
stc
lock
xchg
pop
xor
outsb
and
in
sti
rcrl
jbe
cmpsb
lret
or
xor
daa
xchg
fwait
mov
xchg
loope
xchg
mov
xchg
push
add
pop
jnp
mov
or
mov
lahf
in
xlat
js
out
je
loopne
inc
cmpsb
lea
cltd
dec
sbb
arpl
add
icebp
lods
mov
icebp
ds
lods
pusha
ss
fmul
test
sbb
lea
inc
cmp
mov
fidivrl
lock
dec
negb
and
push
fiadds
and
aaa
sti
adc
add
rorl
push
iret
cli
push
push
fwait
push
ret
cmpsb
mov
dec
movsb
cmp
pusha
jge
fists
imul
leave
pop
dec
add
fwait
enter
pushf
mov
in
sbb
ja
mov
sahf
daa
cmpsl
pop
in
xchg
mov
es
cmp
hlt
movb
leave
mov
cli
les
cmp
mov
sti
inc
add
mov
cmp
scas
imul
and
mov
outsl
dec
cmp
pop
add
stos
in
adc
inc
mov
fwait
icebp
push
out
inc
sbb
jno
int
sub
or
imul
loop
ret
es
arpl
xchg
mov
icebp
rcr
shll
lret
ret
cltd
cmpl
add
test
sbb
adc
rclb
or
mov
icebp
aaa
jnp
mov
pop
push
testb
add
inc
ja
cltd
cmpsb
shlb
and
call
mov
ror
and
das
fnsave
xchg
inc
xor
jne
in
test
mov
imul
pop
sbb
aaa
test
jne
mov
xchg
push
orb
mov
and
rorl
mov
mov
pop
movsl
int
roll
data16
adc
add
inc
jmp
faddl
xor
dec
xorb
jge
out
adc
ret
mov
lds
ss
sub
imul
fwait
repz
in
or
aaa
or
pop
xchg
push
jp
std
pop
mov
aam
sbb
add
xchg
scas
xlat
xor
leave
dec
lahf
mov
orb
jne
xor
lea
loop
push
clc
jo
test
adc
sbb
fwait
ds
jae
xor
xor
iret
sarb
pop
pop
sbb
pop
push
test
adc
pusha
sub
mov
mov
and
repz
pop
xchg
pop
dec
push
or
inc
jne
or
add
bswap
push
adc
test
push
fld
or
adc
pop
dec
push
jns
mov
inc
fldpi
mov
out
mov
leave
adc
lahf
add
pusha
push
and
into
mov
sub
add
and
test
mov
outsb
xchg
mov
nop
arpl
pop
mov
jg
rcl
mov
jg
dec
pushf
push
sub
call
cld
rclb
mov
jno
cmc
push
xor
out
xor
js
mov
clc
push
andl
popa
rorb
adc
andl
inc
sbb
xchg
sub
or
push
adc
mov
sub
add
add
lds
xor
mov
push
out
adc
fwait
es
int
mov
push
inc
aaa
inc
in
shr
in
and
ret
adc
test
test
cmp
jns
mov
sub
test
fwait
dec
xor
dec
jecxz
cmpsl
add
xchg
push
dec
fdiv
fimull
leave
dec
inc
push
sbb
xchg
jno
sahf
hlt
push
sub
jnp
lea
mov
cltd
sub
or
inc
mov
mov
cld
js
add
daa
cli
cmp
or
fisubl
adc
pop
aam
push
int3
out
cmpb
mov
jo
mov
jnp
adcl
nop
xlat
pop
dec
test
or
pusha
popa
aam
mov
mov
push
mov
popa
and
insb
shrl
sub
add
dec
aad
and
aaa
and
insb
lock
in
dec
daa
insb
mov
inc
add
lea
inc
in
arpl
push
clc
shll
mov
inc
inc
jg
out
fnsave
add
aam
shll
push
dec
xchg
pop
sbb
jb
hlt
mov
ficomps
loope
popa
or
pop
fst
xor
in
cmp
dec
and
ljmp
or
cmp
iret
mov
sti
into
push
fisttpll
mov
jecxz
pop
pop
sub
xlat
mov
sub
push
mov
repz
mov
in
inc
test
ds
icebp
loop
inc
adc
rol
or
xchg
xchg
push
imul
lahf
rcrl
sahf
pmulhw
pop
mov
inc
sbb
xchg
mov
out
mov
mov
outsb
inc
pcmpeqb
cmc
pop
mov
dec
mov
faddp
dec
mov
mov
xor
outsb
mov
pop
loope
test
xorl
fsub
ljmp
sub
push
out
das
addb
js
xchg
cmp
xchg
lret
xlat
mov
add
push
aad
or
pop
mov
sbb
ljmp
mov
xchg
push
daa
outsb
decb
adc
xchg
mov
adc
not
mov
sub
cmpsb
test
and
xlat
xor
push
icebp
mov
cmc
fdivrl
mov
lret
lock
cmovno
cmc
sbb
imul
aaa
dec
daa
test
repz
pop
jnp
arpl
movsl
pusha
lock
cmp
jl
ja
leave
pusha
sbb
mov
mov
jne
xor
aam
out
pop
and
shlb
mov
ss
ss
jl
out
inc
xor
jnp
lcall
pop
inc
xchg
adc
or
xor
lds
out
and
mov
jp
call
jp
cmp
cmp
jbe
add
pop
sbb
filds
out
pop
test
mov
lahf
in
sub
mov
xchg
cltd
xchg
hlt
sub
lea
pop
sbb
cld
and
sub
xchg
cmp
cvtps2pi
mov
bound
dec
sub
mov
mov
aam
inc
xchg
mov
test
sbb
rcll
ret
pushl
imul
jg
in
push
into
push
push
out
xchg
mov
jno
jge
test
int
cmp
das
loop
mov
mov
enter
jno
jl
daa
rcrl
inc
or
les
sub
gs
stc
xchg
fists
sub
pop
daa
mov
dec
xchg
sti
rol
and
push
adcl
out
inc
sub
push
adc
xor
sahf
push
mov
cmp
and
nop
or
mov
dec
add
mov
adc
incl
jo
xor
inc
xor
nop
xor
push
jg
lods
pusha
lock
add
lods
lods
add
bound
rorl
pusha
xchg
lret
sbb
sub
adc
jge
shll
mov
dec
rep
insl
clc
cmovs
sub
pop
cmp
dec
int
mov
pop
jne
pop
xchg
out
xchg
das
xor
mov
cmp
cmc
dec
and
sahf
in
mov
sbb
dec
cli
or
arpl
movsb
push
int3
cwtl
ret
hlt
in
hlt
dec
sub
add
inc
cmp
mov
fistpll
dec
dec
pop
mov
xor
fistpl
pop
adc
sbb
and
mov
bndstx
ljmp
mov
mov
push
adc
daa
bound
sub
jecxz,pn
ljmp
cmp
dec
lock
js
dec
cmpsb
sbb
iret
cmp
neg
adc
stos
mov
out
aaa
enter
fstpt
and
push
aad
adc
sub
jmp
lods
rorl
or
jo
xchg
mov
sub
test
test
mov
test
movsb
movsb
adc
pusha
sbb
sbb
fmuls
add
rorl
in
jp
orb
push
sti
xchg
jg
push
das
ficompl
dec
loope
or
stos
cwtl
mov
jmp
mov
push
mov
lahf
mov
inc
mov
mov
fsubrl
xor
xchg
push
sbb
add
lods
leave
test
cmc
cmc
dec
mov
inc
js
cs
daa
xchg
cmc
les
outsl
aam
pop
imul
testl
mov
mov
push
add
sub
jle
stos
loopne
sbb
adc
int3
std
mov
push
dec
aas
jae
addb
dec
cmc
sbb
or
mov
sub
in
add
popf
iret
inc
pusha
sub
xchg
lock
insb
dec
inc
inc
jg
subl
out
mov
arpl
cmc
mov
jl,pt
mov
adc
dec
out
mov
sub
or
mov
mov
pop
jo
shrl
xchg
lods
fisttps
lods
data16
aas
orl
and
dec
int
jnp
roll
sbb
addb
mov
imul
push
sub
sbb
sahf
sub
add
idivb
pop
cltd
sbb
repnz
sqrtps
push
enter
mov
add
ss
imul
adc
les
and
push
xchg
add
jle
in
pusha
xchg
xor
shrb
test
cmp
add
int
lock
xor
in
daa
lahf
out
icebp
pop
in
cmp
mov
pop
dec
repz
mov
dec
lock
mov
or
in
jl
mov
add
int3
loope
sahf
jecxz
in
fstpl
movsl
push
cmp
cmp
repz
add
scas
add
push
jnp
mov
ret
out
lret
iret
sti
pop
imul
cld
xor
stos
add
es
filds
push
push
gs
mov
insl
fmuls
lret
outsb
xor
nop
incl
jno
dec
imul
jns
push
xchg
jnp
sbb
add
inc
les
mov
adc
push
arpl
btr
mov
xchg
mov
inc
jne
shll
jo
sbb
sbb
mov
jg
loopne
inc
in
mov
hlt
jp
cmp
lret
jl
mov
out
mov
add
or
ret
les
pop
mov
xchg
jmp
push
mov
mov
cmp
lret
imul
mov
push
push
into
pop
loope
push
mov
jo
adc
test
sub
dec
mov
xchg
add
roll
pop
ja
push
repz
push
xchg
sub
mov
push
mov
mov
scas
mov
add
shlb
lcall
sub
ret
cld
push
iret
xchg
mov
inc
mov
cwtl
in
or
imul
xor
mov
inc
movsb
and
into
je
and
jae
and
xlat
or
scas
lods
xchg
inc
jg
aam
out
jle
jmp
fwait
xchg
jbe
jl
lret
xchg
sbbb
insl
xor
scas
aas
push
loop
shlb
xchg
jmp
stos
insb
push
dec
cmc
mov
fxch
add
pop
add
fisubs
nop
fmulp
jmp
pop
outsb
hlt
cmc
xor
rcll
shll
movsl
sub
pop
xor
dec
jnp
in
test
jne
adc
popa
pop
add
mov
mov
leave
scas
adc
push
les
fcmove
ret
mov
leave
dec
pop
rcrl
outsb
je
cmp
lock
mov
xchg
test
xchg
fsubs
or
mov
in
stc
lds
sub
arpl
addr16
xchg
lahf
lret
mov
in
lret
adc
mov
dec
jno
add
pop
mov
add
mov
cld
or
cmp
adc
sti
std
stos
out
pop
dec
or
loop
fdivrl
mov
ret
out
adc
sub
and
pop
movsl
movsb
int3
and
test
pop
ret
fbld
imul
xchg
adc
mov
adc
pop
in
dec
pop
rcl
inc
stos
fdivl
and
pop
mov
les
add
add
aam
pop
rol
push
mov
cmp
loopne
cmp
inc
or
and
out
lods
xchg
sahf
daa
cltd
cmpl
sbb
xchg
loope
iret
xchg
cld
push
test
das
push
movsl
dec
sub
jno
cmp
insl
ds
fidivl
fst
cmp
inc
sub
mov
pushf
push
cmc
mov
pop
pop
movsl
gs
or
inc
cmpb
leave
and
test
xor
xor
daa
or
test
test
dec
push
jnp
sahf
repnz
testb
test
outsl
int
jp
jl
cmc
pop
cmp
mov
je
mov
add
jecxz
in
loop
inc
adc
ljmp
xchg
inc
cmpsl
pop
leave
xor
pcmpeqd
lds
test
enter
sbb
out
or
sub
xchg
out
cmp
cmc
lea
inc
lods
xor
hlt
adc
rcrb
inc
in
pusha
jmp
cld
cld
mov
fwait
rcrb
and
repz
cs
test
aas
sbb
sub
add
int
add
mov
push
adc
jmp
sti
aad
roll
mov
adc
jmp
jns
dec
or
int
cld
dec
adc
mov
dec
or
pushf
daa
addr16
cmp
lahf
push
push
sub
leave
inc
add
ret
mov
mov
push
fadd
arpl
ret
div
cmp
pop
lret
jl
sub
rorb
jb
sub
imul
push
popl
nop
dec
ljmp
leave
je
arpl
mov
sbb
xrelease
call
lock
stos
outsb
out
pop
addr16
sub
scas
ljmp
in
xchg
cmc
add
imul
in
or
shlb
stos
mov
jmp
add
push
pop
pop
in
xchg
repnz
and
fdivl
pop
jle
aas
jge
pop
outsb
fcoms
inc
jae
mov
dec
icebp
lods
push
pop
out
xchg
push
xor
jle
clc
loopne
pop
adc
ljmp
or
xchg
and
ret
test
mov
sbb
cmpsl
xchg
mov
push
sarl
cmp
faddl
sarb
popa
int
push
xor
mov
xor
iret
out
lret
or
das
mov
xor
mov
jle
repz
jl
hlt
lds
rcll
jbe
addl
ret
loope
push
cli
pop
insb
pusha
hlt
shl
lods
inc
movsb
popf
inc
imul
lea
mov
ljmp
mov
jl
jg
mov
push
test
popa
push
repz
in
jle
idivl
adc
sbb
int
adc
jo
xor
rcr
or
push
lea
pop
sti
repz
jne
in
sub
push
fbld
roll
pop
gs
add
loop
or
bnd
xor
mov
int3
xchg
pop
hlt
mov
test
in
cwtl
sbb
adc
iret
sbb
mov
iret
addr16
cmp
push
aas
lcall
in
inc
inc
fwait
out
in
pop
mov
xor
je
loope
call
int3
and
pop
mov
fcompl
sbb
int3
nop
mov
sub
xchg
sbb
out
icebp
fdivl
jmp
lea
xor
mov
call
and
jne
shl
add
jg
je
inc
mov
data16
mov
mov
loop
stos
aad
or
sub
mov
add
add
orb
or
mov
dec
cs
rcl
bound
lea
xchg
jecxz
xchg
loop
mov
or
cmp
xchg
adc
loopne
mov
aas
inc
add
cltd
cli
sti
loopne
je
test
inc
sbb
or
push
das
and
aas
inc
pop
sub
sbb
pop
mov
arpl
bound
cli
xor
mov
pop
loopne
pop
cltd
pop
mov
ret
inc
data16
fcoms
adc
incb
jl
xchg
mov
sbb
std
pushl
push
xchg
mov
test
negl
add
mov
xchg
dec
out
cli
push
sub
mov
loop
std
mov
dec
out
outsl
jmp
cwtl
jle
jge
and
add
mulb
sbb
adc
sub
sub
jle
xor
xor
lret
stc
mov
adc
push
mov
dec
addr16
imul
rorl
mov
cmp
xlat
lea
ret
jge
mov
cwtl
out
or
jno
mov
push
adc
sub
inc
inc
mov
repz
sbb
dec
sub
push
sbb
xor
push
fs
shrb
xchg
push
dec
xchg
xchg
mov
cmp
mov
loope
ja
and
pop
adcb
test
xlat
inc
jp
insl
fisttpll
pop
mov
mov
fcmovnb
and
and
and
insb
call
cwtl
fidivrs
jle,pn
out
mov
pop
sahf
lods
nop
je
aad
xor
lds
cmp
fcoms
dec
push
cmp
or
cs
fs
fistl
leave
ljmp
cmp
cli
decb
sub
mov
aam
cli
jl
mov
mov
pop
jp
scas
xchg
ror
inc
and
and
daa
or
icebp
xchg
cs
mov
fistpll
or
jle
sub
lds
mov
jmp
mov
rcl
mov
sbb
xchg
fs
ja
jg
mov
fcmovne
mov
dec
jecxz
mov
dec
sub
or
mov
mov
pop
in
cmp
sub
inc
out
lret
inc
lods
jo
sbb
inc
mov
pop
imul
popf
test
add
sbb
dec
sbb
fsubl
add
lret
sbb
or
insl
es
dec
incb
cmp
sahf
aaa
lret
mov
sub
orl
ficomps
and
xor
decb
call
push
rcr
and
jo,pt
jnp
xchg
decb
stc
stos
jo
ljmp
out
xchg
push
lret
mov
or
adc
xor
test
lret
sub
insl
leave
popa
aam
jnp
push
xchg
out
mov
jg
loope
inc
xchg
xor
mov
outsl
aad
mov
or
mov
cs
je
out
cmp
out
mov
popa
jne
mov
xor
pusha
push
pop
lea
xlat
aam
xor
add
test
inc
fidivl
call
test
lods
push
and
dec
mov
sub
ret
dec
push
cmp
push
in
fisubrl
xchg
jbe
test
pop
outsl
div
jmp
repnz
js
mov
xchg
loopne
fcomi
adc
ds
fcmovnbe
lea
imul
pop
std
test
cmc
push
xorl
out
xor
andl
shrl
adc
scas
adc
into
or
or
jne
jno
scas
shlb
lea
dec
dec
repz
cmpsb
adc
inc
cli
inc
push
sarb
mov
mov
pop
sbb
repnz
adc
les
adc
dec
shlb
push
sti
xchg
push
sub
mov
mov
hlt
adc
dec
mov
rolb
cmp
out
and
rcrb
in
insl
sbb
mov
sub
testb
adcl
lahf
ds
test
mov
jmp
scas
call
out
jbe
stos
leave
stos
jecxz
mov
push
dec
out
cwtl
das
adc
cld
dec
push
inc
jnp
enter
enter
out
enter
das
jb
repnz
xchg
pusha
fmuls
fiaddl
cmovns
lds
sub
mov
test
cmc
mov
mov
out
jbe
add
ret
stc
cmp
les
inc
adc
jge
xchg
out
push
or
fisubrs
shrl
subb
jnp
mov
shll
fwait
sbb
orb
adc
ret
mov
mov
rcrl
ja
sub
lret
mov
lea
xor
add
jne,pn
cs
inc
inc
dec
loopne
in
adc
inc
cli
pop
xchg
lock
cmp
call
lret
push
pop
cmp
cwtl
call
pop
sbb
in
xchg
push
sbb
xchg
cmp
sbb
ret
or
and
std
test
cmp
inc
fildl
loopne
js
pop
pop
sbb
insb
aad
decl
cmp
adc
push
arpl
mov
cltd
fistpll
lea
sahf
add
fdivrl
cmp
mov
mov
mov
inc
test
lahf
pop
mov
or
mov
xor
nop
nop
js
push
inc
daa
push
notrack
dec
pop
stos
movsl
daa
jo
lret
or
xor
ss
cli
into
test
dec
out
sub
sbb
push
pop
dec
rep
mul
or
and
dec
pusha
or
lock
cmp
fstps
arpl
dec
xchg
cltd
mov
popa
mov
or
and
push
pop
jl
fbstp
pop
icebp
jno
mov
adc
add
arpl
test
xchg
adc
or
pusha
loope
lcall
pusha
pusha
psubw
popa
xchg
push
pop
cmpsl
test
xchg
test
clc
cmp
out
xchg
stos
jl
rdpmc
jge
leave
rolb
std
in
dec
mov
or
sub
cmp
pusha
lds
dec
push
push
push
cltd
insb
inc
testl
iret
add
into
in
inc
inc
ja
stos
rol
xor
jae
adc
sbb
jae
out
mov
fwait
mov
imul
xchg
sbb
push
mov
call
pop
xorl
aam
push
movsl
xor
sub
das
js
cmp
mov
pusha
adc
mov
xchg
incb
enter
xchg
push
jl
insl
seta
jle
pushf
pop
jp
dec
test
sbb
pop
ds
pop
or
jmp
xchg
dec
cwtl
je
fisubs
pop
inc
mov
insl
and
call
fmul
cwtl
subl
push
movsb
xchg
test
xchg
cwtl
scas
jb
call
jl
jle
sbb
push
inc
dec
rorl
and
mov
adc
cli
lods
pop
inc
loop
lahf
and
shlb
shrl
sbb
pop
push
jge
fwait
xor
inc
les
xchg
out
movsb
cmp
cmp
in
pop
lods
and
add
or
fnstsw
inc
fstpl
xor
jno
jp
je
aas
call
mov
jno
pop
jns
sub
cltd
sti
add
push
hlt
mov
popa
out
sarl
adc
jge
mov
mov
cmp
arpl
sub
stc
lds
in
xlat
pop
push
cmp
jo
in
dec
mov
pop
hlt
xor
fists
push
lret
pushf
shl
aaa
add
or
dec
lods
xor
testl
push
jb
jno
lea
rcrb
loop
sub
sbb
jp
test
jmp
sbbb
jecxz
iret
sbb
repnz
push
outsl
loopne
icebp
pusha
cmp
call
push
daa
enter
mov
pop
cmc
out
push
enter
mov
loop
movsl
and
sub
jae
inc
or
add
and
jnp
jecxz
mov
or
cmp
fisubrs
or
out
push
pop
mov
fldl
fsubrp
inc
in
jno
xchg
or
test
insb
cmpsl
xchg
stos
cmpsb
add
mov
je
and
cli
add
mov
iret
xor
popf
push
gs
ret
push
roll
xchg
test
inc
bound
sub
repz
stos
jecxz
adc
out
and
and
hlt
sbb
mov
mov
cltd
inc
or
daa
push
sub
insl
and
cmpsb
iret
push
jmp
fbstp
test
pushf
xor
sti
cmp
jecxz
pop
insb
lods
test
jns
out
outsl
add
jae
jp
lods
addr16
add
push
fldenv
aas
loop
popa
sahf
pop
pop
rcr
int3
icebp
xor
mov
lahf
dec
adc
add
sbbl
loope
jecxz
lret
test
addb
jecxz
xchg
dec
xchg
jge
inc
adc
fwait
push
sub
ss
cmp
mov
adc
sbb
cmpsb
jmp
sub
add
sub
jecxz
cmp
jno
inc
adc
jmp
xor
cld
int3
mov
xor
roll
mov
loop
sbb
int3
sbb
jno
xor
and
mov
pop
inc
pop
fiadds
pop
jmp
sti
and
push
sub
dec
in
sbb
push
test
push
dec
lahf
or
in
push
cwtl
mov
pminub
sub
dec
lds
pop
frstor
jmp
ss
pop
jecxz
adc
mov
fucomi
cwtl
testb
mull
repnz
mov
js
inc
leave
das
das
roll
sbb
andb
xchg
xchg
push
popf
cmp
fsts
pop
pop
jg
pop
sbb
arpl
sbb
xchg
in
pop
ret
aaa
lods
xchg
cmpl
and
pop
sub
inc
jp
push
out
andb
push
push
lods
lods
insb
les
sbb
jb
and
inc
jo
lea
adc
cmp
nop
enter
sub
mov
out
call
push
and
gs
rcrb
in
shll
jle
in
adc
xchg
notb
outsb
or
push
dec
scas
pop
sbbl
mov
hlt
jp
sbb
lods
jle
jno
push
mov
jns
loopne
pop
test
jp
mov
outsb
adc
and
push
test
fadds
xchg
inc
outsl
add
cmp
adc
or
cmp
push
stc
xchg
or
adc
aam
xchg
mov
sbb
outsb
popa
mov
stos
mov
cmp
test
aaa
cmpsb
xchg
repnz
popa
data16
repnz
out
out
cmpsb
icebp
mov
das
jnp
popa
jge
pushf
xchg
and
in
push
mov
ja
sub
and
dec
aam
in
or
xchg
stc
sahf
divb
iret
inc
enter
add
les
xorl
aas
fidivrs
and
in
mov
int
mov
cmp
adc
aad
test
mov
jp
sub
mov
repz
adc
dec
xlat
loope
call
push
addr16
jne
test
cs
test
add
call
mov
fsubp
decl
divb
dec
daa
aad
shll
lahf
std
fnstenv
cmc
lds
jp
aas
mov
mov
decl
lcall
and
pop
fiadds
xchg
mov
leave
ja
and
push
mov
in
jbe
loopne
sbb
lods
mov
test
decl
sahf
sbb
push
or
mov
add
repz
push
mov
repnz
testl
push
push
mov
and
pop
fcmove
mov
mov
popa
movl
pop
mov
dec
fwait
sti
gs
mov
sti
out
jge
cld
pop
out
je
cli
push
icebp
push
mov
sbb
jo
sub
insl
pop
data16
andl
sub
clc
jmp
in
sbb
stos
adc
dec
inc
sub
xor
mov
cltd
ss
or
mov
inc
xor
inc
out
mov
cmp
pop
aaa
mulb
add
leave
mov
aam
dec
push
in
pop
aam
fcmove
xchg
iret
pop
mov
lret
in
sahf
add
jnp
inc
das
inc
loope
repnz
mov
cmc
ja
or
jecxz
sar
dec
cmp
test
push
lods
cmp
cmp
inc
push
jno
and
jne
xor
shrl
ja
xchg
jbe
stos
notb
cmp
jae
push
or
addr16
xchg
jb
adc
xchg
cmp
cltd
stos
std
in
cltd
call
fdivrl
mov
iret
push
sbbl
jp
mov
pusha
dec
mov
sti
fiadds
leave
insl
mov
adc
aas
pop
or
push
frstor
pushf
loope
fcmovne
add
xchg
jg
mov
jnp
bound
xlat
stc
loopne
mov
mov
pop
sbb
sbb
xchg
sub
lods
push
shlb
pop
in
aaa
or
lahf
sub
mov
repz
pop
sbb
in
nop
pop
shll
cmpsb
gs
mov
ja
je
scas
cld
stc
pusha
xchg
mov
jns
xlat
mov
push
lcall
sbb
jecxz
daa
mov
jle,pn
fimuls
inc
arpl
xchg
jg
cmp
adc
adc
pop
pop
add
cs
push
add
mov
lahf
mov
es
sbb
and
sti
mov
lcall
mov
addr16
pop
ss
ljmp
xor
sbb
ljmp
inc
ret
fimull
dec
ja
jg
xorl
push
push
das
lcall
add
mov
fsubr
dec
jecxz
mov
arpl
sbb
pop
xchg
pop
in
pop
cld
ljmp
inc
dec
pop
lods
outsb
xchg
insl
xchg
adc
js
lods
or
movsb
lahf
sbb
dec
sub
xchg
cli
mov
cld
dec
inc
shll
lret
xor
push
or
pop
adc
fdivrl
xchg
gs
pop
mov
push
push
mov
mov
in
mov
sub
lret
test
es
jo
loop
enter
xchg
iret
cmp
pop
arpl
or
jp
jle
insb
insl
aad
popf
into
cmp
xor
jg
stos
mov
xchg
dec
sbb
insb
outsl
cmp
sbb
cli
cltd
mov
idivl
decl
add
or
daa
ficoml
testb
jo
repz
je
sbb
add
mov
jle
mov
out
inc
data16
fsubr
xchg
cs
push
incb
dec
fsubrs
mov
and
aad
iret
js,pt
out
cmpsb
ret
addr16
pop
fmul
and
and
sub
lock
jmp
sub
sbb
fwait
or
push
rol
xchg
mov
loope
inc
mov
mov
inc
push
lret
gs
or
mov
or
or
jmp
shll
xor
jno
shrb
adc
lock
stc
inc
and
sbb
sahf
cmpsb
and
mov
cltd
lock
jbe
pop
or
jge
dec
fsubrp
repnz
rorl
je
cs
jno
clc
ljmp
sarb
dec
mov
loope
out
inc
sub
repnz
mov
xor
fwait
sub
cld
mov
jmp
mov
cmp
cmc
icebp
inc
mov
mov
jl
add
inc
sub
nop
cmpsl
xor
bound
mov
testb
scas
or
test
pop
sub
pop
jmp
rorb
mov
cli
add
xchg
lods
jecxz
pop
loop
neg
lock
repnz
out
jmp
orl
inc
add
push
adc
ljmp
scas
iret
jl
mulb
addr16
mov
dec
jp
mov
add
pop
dec
lahf
fabs
and
push
dec
jl
jmp
sub
jecxz
sarb
xlat
push
inc
lret
lahf
imul
jns
push
adc
ret
popa
jno
subb
inc
add
jno
xchg
pcmpeqb
and
fucom
insl
out
daa
test
in
cmpb
hlt
sbb
sub
lret
dec
sbb
pop
pop
add
mov
lcall
ds
sbb
bound
jmp
add
ss
pop
fwait
inc
adc
push
mov
mov
xchg
popf
adc
jbe
push
mov
xchg
inc
mov
stos
jge
movsl
cmp
xor
jmp
popa
or
bound
jp
dec
pop
xor
adc
addr16
xchg
inc
sahf
shll
xchg
sbbl
loop
sub
xorl
movsl
in
add
lret
and
jge
jo
je
add
pop
and
jne
and
stos
rclb
lock
clc
push
xor
sti
pop
push
mov
sbb
xor
lcall
jbe
inc
mov
inc
ljmp
fsubs
hlt
test
adc
sti
insl
pop
mov
test
jbe
cmp
xchg
xlat
add
push
fwait
xchg
xchg
outsb
adc
dec
push
jnp
out
cmc
ljmp
loop
push
xor
xorl
and
clc
sarl
pushf
fldl
mov
inc
mov
scas
mov
jle
insb
cmc
mov
pop
cmp
cmc
jge
pop
dec
not
cld
lret
sbbb
push
pop
loop
push
add
jns
cmp
repz
or
out
push
mov
sbb
cmp
pop
or
mov
pop
and
jbe
into
inc
mov
lret
mov
subb
pop
push
push
xchg
scas
xchg
jle
fcoml
dec
or
out
sub
rcrl
jns
lds
adc
xchg
repz
das
cli
mov
out
jns
push
popa
lret
out
fcomip
and
push
pop
in
mov
mov
xchg
xchg
xchg
push
mov
jg
xchg
pusha
cmp
xor
jmp
xchg
dec
push
aas
das
pop
xor
inc
mov
lods
sbb
js
lret
fmuls
sub
ja
fsubrs
aam
repz
insl
push
jecxz
push
jle
push
lds
mov
mov
push
push
mov
mov
movsl
inc
imul
xlat
scas
dec
dec
test
fsubrl
sub
add
int
es
jl
leave
push
and
cli
je
test
push
aaa
xor
jne
ss
pop
xor
insl
push
cltd
push
js
pop
mov
or
sub
mov
arpl
push
push
mov
adc
add
bswap
addl
dec
mov
mov
sbb
sbb
mov
pop
or
dec
test
sub
fcmovbe
dec
cwtl
movsb
cmp
push
or
test
dec
out
pop
popf
sub
into
xchg
addr16
xor
cli
into
popf
pop
xchg
adc
or
dec
lods
jo
or
xor
mov
cmp
enter
and
add
bndstx
adc
popf
xor
cli
arpl
std
dec
movsl
outsl
mov
lea
out
sub
shll
adcl
pop
imul
out
or
or
push
clc
arpl
xor
jge
push
sbb
add
stos
ja
xchg
mov
in
pop
push
inc
pop
sbb
jbe
push
dec
pusha
imul
push
jns
shl
inc
mov
ret
dec
loope
sarl
into
out
call
ss
mov
inc
fnstenv
dec
jae
mov
ja
mull
clc
pop
or
xchg
fs
jns
in
fists
add
mov
sbb
jp
sbb
sbb
xchg
fsubs
lret
push
ja
cmp
adc
add
stc
push
les
xor
lea
push
lea
test
pushf
or
or
shll
das
add
mov
or
lret
push
push
xchg
fsubrs
in
test
shrl
imul
andl
or
pop
mov
call
inc
pop
jne
iret
mov
mov
sub
out
xchg
int
bswap
push
mov
lds
and
cmp
and
repz
lock
sahf
arpl
popa
and
and
inc
mov
inc
cs
xor
shrl
leave
jbe
pushf
xor
xor
dec
push
test
js
xchg
add
fstpt
or
pop
push
lcall
scas
adc
sar
cmpsl
inc
cmc
xor
nop
adc
ret
pop
adc
outsl
add
cmp
xchg
xchg
inc
mov
in
std
repz
jecxz
lods
test
dec
cmp
add
cmpsb
mov
cmp
in
lds
push
lret
push
cld
add
fldl
push
adc
pop
leave
repnz
addr16
mov
stc
movsl
bound
mov
aad
adc
and
cs
int3
jnp
xchg
cmp
or
and
dec
sbb
jp
mov
fiaddl
jbe
daa
std
leave
or
les
mov
mov
sbb
inc
lock
shll
mov
jecxz
das
jb
sub
scas
jmp
push
gs
lcall
cwtl
mov
sbb
jmp
loope
xchg
cmp
push
mov
shll
icebp
pop
jp
in
ljmp
rolb
mov
push
push
mov
push
jne
icebp
clc
and
clc
aam
jp
cmp
mov
add
movsb
adc
lock
lea
push
push
std
stos
mov
or
jbe
imul
fisubs
jns
test
xchg
fwait
movsb
cmp
jle
mov
test
in
jne
xchg
cmpsb
dec
lea
mov
cs
rcr
xorl
clc
leave
movsb
pop
jnp
xor
lret
pop
cs
xor
insl
jo
mov
push
aaa
mov
dec
inc
lret
mov
add
out
add
sub
arpl
lock
iret
aaa
mov
scas
aad
sub
add
subl
jns
jl
or
sti
mov
mov
pop
cmp
sbb
es
push
hlt
sub
bound
movsl
cmp
ficoms
sbb
in
rcrl
push
push
out
mov
xchg
mov
mov
xor
mov
sbb
cwtl
sub
xchg
sti
adc
push
dec
push
ss
aad
push
xor
fcompl
adc
psubsw
sbb
icebp
lret
shlb
mov
xchg
hlt
xchg
push
adc
mov
mov
rcrl
cmp
dec
mov
lods
aam
hlt
xor
push
cmp
outsb
popf
push
and
out
in
sub
fmull
push
mov
or
xor
cltd
add
inc
fistps
lcall
cmp
mov
xchg
or
add
mov
sbb
das
sbb
mov
insl
enter
int3
add
mov
inc
ficoml
icebp
mov
daa
mov
das
aas
dec
sub
pop
jmp
in
cli
pop
ja
add
lock
push
stc
cmp
jns
cmc
xchg
shl
out
in
ljmp
cmpsb
enter
add
sbb
out
cmp
in
jmp
mov
incb
and
aas
lock
ror
pop
push
pop
or
cltd
mov
xor
add
ret
aad
jle
push
lahf
jle
dec
aas
xchg
subl
hlt
enter
xor
pop
shrb
jnp
or
ret
mov
mov
adc
cmp
mov
sub
hlt
cmpsb
push
cmp
or
inc
das
pop
inc
pop
ds
fdivrl
ja
add
push
inc
test
inc
cmp
push
enter
or
pusha
das
jne
enter
jns
subb
repz
and
add
ficoms
cmpl
or
fcoml
movsb
int
ja
icebp
lock
ss
add
ss
dec
add
jmp
add
pop
clc
orl
dec
fisubs
pop
dec
cmp
rorb
inc
ljmp
into
pushf
mov
cmpsl
adc
push
push
shll
ficoml
decl
sub
mov
push
sbb
adc
in
scas
pop
mov
fs
addr16
shrl
mov
or
adc
or
inc
jle
xchg
loopne
rsm
jg
mov
xchg
xchg
cmpsb
xor
mov
rclb
jmp
xor
jns
fwait
xchg
sbb
pop
mov
test
popa
das
jle
mov
or
pop
fmuls
inc
sbb
sti
lahf
pop
mov
mov
mov
stos
inc
sbb
cmp
lahf
stos
xchg
sahf
cli
js
inc
loopne
sarb
jb
or
jl
or
pop
jge
dec
pop
jmp
popf
sahf
jg
jno
cmp
xchg
ja
mov
xlat
xor
dec
leave
pop
jle
movd
mov
add
mov
dec
pushw
inc
mov
icebp
dec
ret
and
scas
ss
add
xchg
cmp
adc
add
iret
inc
mov
icebp
pop
xor
pop
pop
jnp
fbstp
sahf
add
adc
dec
ss
pop
push
and
push
jns
add
inc
cmpsl
enter
mov
insb
lea
mov
in
jbe
cltd
loope
ret
addb
inc
jge
loopne
or
cmp
cmp
test
leave
mov
mov
in
insl
aam
in
cltd
dec
xchg
and
xorb
ds
adc
icebp
mov
shlb
jnp
psubusb
cld
lret
aas
or
mov
mov
mov
js
fwait
cmp
and
xchg
mov
push
sub
shl
push
lret
cld
test
mov
pop
add
cmpsl
cmp
dec
xlat
ja
lcall
mov
rol
cmp
mov
es
fnstcw
cmp
into
ds
pushf
cmpsl
mov
lds
fcomps
xor
out
mov
push
call
shrb
add
add
mov
pop
sub
shll
adcb
cmp
lcall
shrb
jb
popa
jae
cwtl
fsts
xor
mov
fs
ret
mov
aaa
mov
adc
xchg
mov
decb
or
scas
dec
mov
mov
mov
nop
and
add
pop
call
gs
jo
scas
mov
pop
movsl
fidivs
lret
xchg
adc
or
xor
cld
add
mov
mov
xor
push
mov
addr16
inc
dec
cmp
enter
movsb
popa
int3
mov
and
cld
sahf
jns
out
repz
fldenv
arpl
push
sub
insb
lret
mulb
mov
and
es
into
jmp
mov
mov
jge
inc
xor
adc
ja
dec
fmuls
adc
sbb
cmp
push
lahf
jg
dec
push
in
or
jle
pop
sbb
cmp
cmp
fildll
popf
sub
add
adc
push
shll
icebp
rclb
test
mov
out
pop
cltd
xor
xor
xlat
testb
jb
fistps
sbb
push
pop
stos
rcrb
orl
sahf
cmp
and
pop
xchg
call
daa
cltd
jl
pop
xchg
imull
in
clc
test
ffree
adc
mov
inc
sub
xchg
pusha
cmp
xchg
imul
cs
imul
iret
scas
jmp
cmp
test
sbb
mov
aad
jle
inc
jmp
sub
cwtl
stos
add
scas
cmp
and
xchg
push
aam
in
out
xor
mov
cmpb
jp
xchg
hlt
lret
or
sbb
xchg
fcmovnbe
dec
gs
sti
out
dec
sbb
into
jle
jl
insl
jnp
mov
mov
flds
frstor
cmpsl
and
imul
pop
inc
dec
xchg
and
and
into
add
int
punpckldq
sbb
inc
les
mov
jecxz
int
into
data16
mov
dec
xor
pop
pop
or
inc
rol
and
inc
stos
lods
or
rcl
sarb
mov
cmc
bound
call
mov
nop
outsb
adc
jge
or
push
sbb
sub
lock
dec
or
jecxz
and
lds
dec
cs
in
out
and
lods
mov
mov
lds
jbe
fsubr
imul
sti
adc
iret
dec
and
addr16
mov
inc
adc
sub
adc
out
pop
mov
ret
mov
pop
mov
mov
pop
or
mov
enter
xor
dec
mov
add
sbb
inc
andl
int3
movsl
addb
ja
or
dec
xchg
cmp
inc
inc
gs
jno
mov
leave
sbb
inc
scas
movsl
es
shr
mov
sub
or
les
xchg
mov
fcompl
sti
add
push
aaa
clc
lcall
xlat
sahf
xchg
mov
mov
leave
cs
jge
out
fidivrl
cmp
push
jmp
lods
loop
rolb
mov
pop
in
movl
aas
xor
mov
loopne
mov
cmp
xchg
aas
mov
clc
dec
repz
aaa
sub
push
fucomi
pop
jecxz
mov
inc
mov
jns
mov
sbb
mov
lret
out
iret
shl
mov
popa
cmp
jecxz
add
dec
jp
fisubrl
mov
push
cs
mov
adc
repnz
sti
adc
pop
add
dec
movsb
push
adc
les
sub
out
pop
adc
sahf
fisttpll
cmc
mov
fidivrl
out
xor
dec
inc
ret
push
xchg
loope
arpl
mov
loop
mov
mov
sub
pop
inc
cmp
test
mov
ficompl
push
cmp
dec
aas
jbe
cld
fistpll
push
out
sub
push
lahf
out
stos
mov
sbb
jns
in
lods
xor
mov
ja
push
das
fucomp
xchg
imul
nop
rclb
movsb
sub
lcall
add
push
ficomps
je
or
lcall
pop
lcall
aaa
xor
int
sub
repnz
jne
arpl
inc
int
cmp
mov
cs
cltd
in
imul
mull
push
jg
dec
sti
mov
adc
cld
or
dec
adc
xchg
fcompl
sub
push
sub
mov
jg
add
pop
sbb
xchg
aas
and
lret
into
repz
mov
xorl
mov
out
sar
fmuls
adc
test
jle
or
js
ret
push
adc
pop
jge
add
insb
jne
sub
out
sahf
adc
test
sub
push
push
in
adc
hlt
lds
rol
out
mov
push
mov
hlt
cmp
cmpsb
in
gs
pop
pop
and
jns
adcl
lods
std
icebp
add
mov
mov
inc
inc
in
outsl
jbe
pop
adc
aad
dec
imul
add
in
xor
inc
das
test
into
insb
rolb
sbb
jmp
std
xor
in
xlat
xchg
les
adc
jnp
mov
sbb
mov
dec
pop
pop
icebp
scas
xor
push
cmpsb
jno
xor
jnp
mov
mov
in
jne
push
aas
push
loopne
xor
mov
dec
outsb
cmp
fwait
push
pusha
cwtl
loope
repnz
pop
push
push
enter
push
xlat
or
shll
jge
daa
repz
dec
and
sub
add
orl
out
sbb
mov
out
in
jmp
aam
jp
cld
pop
jnp
lds
mov
into
movsb
push
sbb
rorb
and
scas
inc
jle
mov
mov
mulb
call
cmp
fwait
add
mov
jge
pop
xor
lock
push
sahf
push
addr16
sahf
mov
jbe
not
imul
mov
pop
sub
into
pusha
jbe
stc
sub
mov
je
xor
notb
repz
repnz
mov
pop
stos
dec
dec
dec
xor
ret
mov
mov
mov
in
push
push
popf
dec
repnz
aam
je
push
jb
add
je
sti
aad
inc
out
pushw
andb
cmp
cmpsb
iret
out
inc
int
mov
xor
mov
rorl
pop
jecxz
out
inc
test
xor
loop
loope
lcall
mov
xchg
sahf
sbb
lods
mov
xorl
xlat
jmp
leave
leave
dec
mov
cltd
mov
stc
inc
sahf
pop
xlat
or
insb
xor
movsb
test
stos
rcr
inc
mov
push
inc
stos
inc
push
lods
sbb
cltd
xchg
cmc
inc
mov
in
xchg
in
pop
fmull
fwait
add
jo
inc
mov
dec
mov
pop
fsts
push
inc
lahf
xor
cmp
sub
or
in
lret
push
sub
shll
mov
fldt
popa
cmovl
jmp
mov
stos
out
aaa
add
inc
mov
push
jl
data16
jge
lds
stc
xadd
pusha
pop
xchg
les
push
repnz
inc
mov
mov
bound
in
push
inc
out
movsb
push
das
and
idiv
inc
xchg
pop
cmp
cld
mov
add
and
xor
xchg
inc
xchg
std
aas
or
xchg
shll
cld
out
shl
inc
lods
mov
or
out
mov
sub
or
shrl
dec
loop
xor
jnp
js
aad
sbb
and
xchg
mov
in
pop
popa
in
pop
test
add
xor
test
sbb
enter
test
inc
mov
shl
mov
mov
add
mov
xchg
inc
mov
pop
hlt
inc
jg
mov
pop
mov
dec
mov
aaa
or
fisttpll
xchg
mov
js
jnp
aam
loop
mov
dec
pop
xchg
in
and
jb
outsb
call
add
jo
jp
sub
mov
insb
aas
daa
mov
lock
pop
cmp
pop
neg
mov
add
les
pop
pop
cwtl
xchg
push
xor
cmp
shll
fcoms
leave
daa
stos
ja
dec
jns
dec
jle
ret
mov
inc
xchg
loope
xor
add
cmpsl
arpl
ret
mov
or
cmp
sbb
pop
cltd
push
mov
jl
and
popf
ret
xchg
in
mov
sbb
push
in
mov
das
ret
cmp
shl
mov
mov
out
test
sahf
pop
dec
ds
xor
cli
jge
push
hlt
mov
cmpsb
xchg
cli
repz
pop
notl
mov
xchg
add
mov
ret
jmp
std
scas
push
mov
das
movsb
cs
or
aam
es
xor
mov
jge
jl
mov
cmp
xor
test
xchg
scas
mov
lods
stos
cmp
es
push
mov
and
clc
push
lds
scas
lahf
push
scas
push
jecxz
xchg
push
lds
repnz
inc
and
dec
fs
adc
inc
mov
mov
cmpsb
jo
scas
sbb
mov
pusha
push
js
gs
xor
imul
jmp
xor
rcrl
leave
por
in
cld
or
aad
ljmp
repz
lds
lcall
sti
inc
popa
shl
repz
sub
ja
leave
xchg
test
cmpsb
mov
push
imul
sub
nop
scas
adc
mov
sbb
sub
cmpsb
dec
cmp
shlb
xchg
pop
adc
aam
loope
scas
icebp
jne
mov
mov
ds
mov
sub
xor
cld
pop
stc
aad
lahf
mov
jp
test
dec
xchg
pop
push
cmpsb
push
cmp
int
pop
push
xchg
mov
lea
cmpsb
daa
jae
and
aaa
lea
pusha
push
sbb
and
cmp
push
sub
adc
inc
sbb
cltd
add
adc
adc
pop
les
adc
jecxz
cltd
and
xchg
cmp
pushf
fbld
adc
jbe
rcrb
cmp
jmp
or
xor
sub
push
fildl
in
or
mov
pusha
xor
sbb
xchg
out
rcll
and
sbb
jnp
lret
jb
stos
in
ret
mov
mov
aas
jl
idivl
mov
dec
inc
ficoml
ror
imul
add
adc
sahf
jnp
push
xor
mov
jle
mov
xchg
inc
inc
xlat
sub
bnd
test
je
out
and
stc
or
pop
pop
out
shlb
push
js
mov
jo
popf
test
jecxz
adc
imull
cmp
xchg
out
dec
mov
scas
push
inc
pop
xchg
cmp
arpl
push
push
xor
jbe
push
notl
repz
cltd
lock
adc
imul
inc
fisubrs
inc
add
cmc
stc
js
imul
jmp
sbb
pop
pop
xchg
call
pushf
mov
dec
or
adc
xor
lods
or
pop
lods
cmp
mov
push
xor
cs
xchg
xor
aas
cmp
rorb
push
lea
or
jae
cmp
fstpl
xor
aaa
add
jae
dec
shll
cli
imul
repz
adc
jp
mov
lods
fldl
sub
sbb
xchg
jle
jns
loopne
lods
popa
sub
enter
out
fildll
shlb
int
insl
jns
push
arpl
ss
imul
sub
fdivl
add
jl
mov
fsubrs
scas
repz
cld
daa
inc
fwait
dec
inc
pop
ficomps
shl
add
mov
loop
lret
mov
xchg
xor
push
out
sub
jg
repnz
jnp
lcall
jp
in
cmp
xchg
repz
cwtl
or
adc
pop
gs
and
pop
and
cwtl
test
subl
lds
sbb
imul
jle
pop
jmp
add
cmp
cmp
mov
popf
inc
and
dec
stos
fisttpll
pop
ja
fstpt
mov
mov
in
fldt
mov
cmc
add
dec
jmp
aaa
and
pop
ljmp
push
or
xor
sub
push
mov
ja
stos
xchg
pushf
jae
adc
pop
cli
push
xchg
outsb
aad
movsb
cwtl
out
inc
or
popa
cs
addr16
dec
xchg
or
mov
mov
add
cmpsb
stc
and
mov
jg
out
cmp
sbb
inc
repz
shlb
jnp
dec
ds
enter
fisttps
sub
enter
das
lock
push
mov
xor
aas
mov
inc
popa
xchg
lea
popf
dec
cmp
mov
pop
lods
addl
and
test
lods
into
testb
fldt
into
jmp
in
mov
sbb
je
dec
sahf
pop
adc
int
jnp
cmp
daa
jnp
push
hlt
out
sarb
or
mov
sbb
and
push
in
mov
fildl
mov
jo
xchg
or
jbe
js
ds
in
mov
cmp
daa
jmp
and
iret
ret
mov
jb
ja
dec
cmp
push
and
and
lret
je
int3
pop
mov
xor
filds
call
or
xchg
mov
scas
icebp
mov
adc
jmp
shlb
cmc
mov
or
lods
aaa
mov
cmp
add
loopne
enter
jb
aas
mov
in
add
add
and
shll
xor
iret
pop
and
es
cmp
insl
popw
lahf
cmp
insl
adc
jmp
ret
pop
pop
rol
stos
xchg
outsl
out
popa
lds
movsl
dec
daa
arpl
and
ja
inc
orl
dec
or
inc
loope
pop
pop
inc
pushf
mov
jne
rorl
icebp
xor
loope
cmpsb
loope
in
popf
sub
stc
outsl
mov
scas
xchg
pop
loopne
ljmp
push
mov
addr16
js
ss
mov
adc
out
addb
popf
jecxz
sbb
addr16
cmp
fisubs
push
inc
aad
adcl
call
int
movsb
jle
mov
add
test
dec
inc
iret
call
cli
sbb
cli
ss
jno
bound
xchg
push
pop
adc
or
cmp
xchg
jo
push
jmp
cmp
fsubrl
mov
and
ja
aaa
call
fstl
xor
out
divl
dec
lds
sbb
lret
add
pop
jge
push
mov
adc
gs
sbb
jb
int
in
movb
in
cmpsl
insl
inc
mov
lret
stos
imul
push
xchg
lea
jmp
inc
ret
repz
out
pusha
inc
ret
or
out
mov
dec
inc
jmp
push
jb
and
mov
dec
xchg
push
mov
pop
test
stos
xchg
test
lods
add
dec
ficompl
sbb
movb
push
sub
ljmp
fcmovu
mov
rcr
insl
inc
xor
loop
mov
inc
decb
pop
stos
pop
aad
pop
mov
les
push
sbb
fcoms
inc
outsb
lea
rorb
lods
shl
push
xchg
cmp
adc
out
or
mov
xor
and
xchg
scas
sub
mov
inc
dec
jmp
mov
dec
or
sbb
jecxz
or
push
xlat
push
xchg
sbb
pop
xor
enter
push
xor
pop
movsb
add
repz
xor
ret
mov
pop
mov
jmp
xor
fstl
dec
aad
test
inc
test
sbb
or
add
aam
adc
and
cmpsl
sub
pop
gs
or
in
jns
add
push
push
pop
pop
int
sti
cld
testl
add
xchg
and
iret
dec
xorb
adc
add
shlb
sti
in
add
and
les
insl
aaa
cs
call
ror
mov
xchg
xchg
movsl
dec
jns
inc
fcompl
fnsave
pop
dec
testb
xchg
pop
push
xor
lods
or
push
cmpsb
add
push
push
push
mov
and
cmp
in
call
push
aas
jp
push
sahf
pop
lock
xor
adc
and
add
dec
stos
mov
and
pop
push
inc
add
mov
pop
leave
jle
pusha
lods
jno
xchg
inc
push
fnstenv
mov
jge
xchg
inc
mov
aam
sbb
mov
outsl
insl
sub
adc
push
jns
push
adc
push
orl
fwait
jae
push
dec
mov
pusha
mov
dec
out
add
fwait
adc
testb
jo
enter
cli
xchg
cld
mov
xor
mov
cmp
or
cld
cmp
popa
mov
rorb
xchg
push
pop
mov
sbb
add
cwtl
in
sbb
push
ljmp
pop
xor
jle
mov
push
subl
mov
jg
jl
mov
insb
adc
xlat
gs
inc
sub
jecxz
ss
push
icebp
push
push
repz
bound
nop
jg
cs
sbb
fldt
adc
mov
pop
sub
leave
jo
push
int
movsb
xor
sub
popf
mov
leave
cwtl
mov
mov
push
add
pop
hlt
cmp
lock
fcomps
shlb
js
jg
adc
aam
cmc
and
cltd
rcrl
mov
sbb
dec
or
push
pop
add
push
push
inc
dec
pushf
ja
inc
sub
scas
or
test
daa
sub
shlb
pop
push
aaa
xchg
popa
pop
xor
jnp
icebp
inc
push
push
aas
push
testl
scas
ja
lret
sub
insb
adcb
xor
call
test
or
into
xchg
ja
pop
andl
xor
mov
xor
repnz
inc
bound
adcl
pop
out
xor
dec
push
sbb
jge
das
mov
adc
adc
movsl
and
add
bound
jne
push
je
fs
call
mov
insb
scas
cwtl
push
inc
lret
mov
ficoms
aam
notb
lods
add
pop
pop
adc
inc
jno
push
push
adc
gs
pop
outsb
pusha
dec
push
in
aas
and
dec
or
and
jo
sub
and
xor
mov
dec
sbb
mov
lds
jo
subl
xor
sti
mov
cmpsl
movsl
or
out
inc
pop
add
inc
dec
cwtl
mov
outsl
xchg
or
sbb
imul
pop
stos
jae
movsb
push
xor
inc
fisttpl
rclb
loope
mov
in
lods
xor
jns
cld
in
mov
dec
in
push
xor
js
adc
stos
cli
adc
and
xor
jbe
sbb
sub
mov
push
test
mov
xchg
std
cmpl
push
or
lret
aad
sub
rorb
xor
gs
pushf
mov
sbbb
cli
mov
mov
out
pop
inc
or
fildl
decl
cli
pop
imul
test
icebp
popf
jge
pusha
fcoms
adc
jnp
cli
adc
mov
or
lss
insb
cld
mov
shll
dec
notl
mov
sbb
xor
cmp
lods
in
test
aaa
push
pop
mov
loopne
out
push
sahf
pop
cmc
pop
mov
fwait
test
fwait
mov
xor
cmp
dec
xor
xor
int
add
xor
mov
add
xchg
add
cmpsl
repz
mov
push
ds
jg
adc
inc
ljmp
ds
popaw
sub
mov
adc
mov
test
inc
cmp
xchg
mov
pop
xchg
push
std
aas
add
xchg
pop
sbb
jge
mov
outsl
mov
dec
xchg
pop
push
in
push
mov
aas
sub
dec
inc
xlat
popf
ror
push
inc
jbe
hlt
fwait
pusha
dec
pop
sub
mov
fstps
jecxz
into
sub
hlt
stos
lods
cmpsl
faddl
out
clc
or
test
jne
sub
pop
sbb
nop
in
and
mov
fwait
and
sub
popf
inc
or
into
push
xchg
jbe
ljmp
inc
jl
push
out
adc
pop
mov
sbb
pop
in
movsl
adc
popa
subb
sub
stos
adc
adc
leave
dec
adc
int3
sub
leave
movb
stos
lahf
fstl
data16
lret
icebp
mov
fdivp
mov
dec
and
mov
add
jno
fsubl
ret
movb
stos
lcall
jns
dec
cwtl
xchg
scas
subl
and
mov
js
pop
nop
mov
jb
pop
mov
xchg
sub
sbb
popa
pop
popf
sahf
out
rorl
adc
mov
push
sbb
pop
sti
pop
in
daa
outsb
mov
test
xlat
sub
adc
aad
ret
dec
fstps
ja
mov
cs
insl
sbb
mov
cltd
scas
sub
mov
out
pop
push
sarb
and
inc
out
add
mov
push
call
popf
sub
paddsb
fcoms
out
and
insl
adc
jnp
loopne
enter
mov
xchg
clc
lea
or
push
sbb
outsl
pop
lds
or
push
shll
inc
imul
insl
inc
push
sbb
btr
sub
jmp
sarl
stos
outsl
fwait
push
push
adc
aaa
pop
xor
loopne
jno
or
add
rcrl
in
push
pop
inc
sub
aas
or
dec
xorl
rcrb
sub
movsb
imul
loope
insb
cmpb
fldl
enter
xor
adc
testl
lock
into
sbbl
in
imul
fidivrl
out
adc
cmpsb
call
xor
out
or
mov
and
sbbb
or
push
and
lcall
insl
jb
pop
in
fildll
pop
pop
xchg
lret
cmp
insl
jl
lods
into
mov
inc
fiadds
mov
or
push
test
push
xor
sub
inc
lea
cmp
add
add
add
cmp
xchg
xchg
aam
aaa
mov
rorl
data16
popa
xor
je
xlat
stos
inc
mov
jne
popf
iret
sub
adc
enter
rolb
adc
push
xor
lahf
out
shrb
cltd
sbb
pop
adc
or
hlt
adc
xchg
fistpll
or
xor
xchg
xchg
jae
adc
movsb
cmpsb
aad
or
push
or
mov
cmp
inc
shll
push
test
xor
fwait
add
xor
pop
mov
jo
xchg
sub
popa
stos
push
lret
jns
push
rclb
cmp
cmc
mov
test
mov
add
sar
and
push
mov
pop
and
mov
push
cld
inc
lods
push
fstpt
int
pop
cmp
cltd
pop
bound
fst
and
mov
aaa
jns
jg
test
ret
pop
adc
cmp
xor
or
push
test
gs
jne
in
mov
or
out
and
bound
and
cmp
cmp
loope
clc
int3
adc
push
or
xor
hlt
inc
sarb
js
dec
mov
addb
ds
mov
push
xor
stos
sarb
in
movsl
lods
test
cmp
push
cmp
sti
mov
icebp
aas
jge
out
dec
imul
lret
sub
and
out
push
daa
push
or
stos
idivl
mov
inc
xchg
in
sub
mov
dec
sbb
push
sub
cmp
jne
xchg
push
test
mov
aas
test
and
arpl
mov
movsl
loope
cmp
jo
dec
jp
jb
repnz
insb
xor
cmpsl
cmp
sbb
or
lea
dec
sbbb
repz
out
mov
xchg
rcrb
cltd
or
cld
imul
or
gs
fldl
nop
shll
movsl
ja
lret
cmpb
mov
aas
popa
insb
cmp
adc
mov
mov
iret
pop
aas
mov
cmp
inc
or
xchg
adc
or
cwtl
imul
loope
nop
lret
sub
jno
xchg
add
fwait
fs
mov
lret
test
push
rcll
rcr
mov
xchg
and
pop
aas
or
pushf
lods
cs
push
jl
xor
cs
stos
fists
stos
cltd
cwtl
cmpsb
rolb
mov
cmp
sub
mov
lea
cmp
scas
out
mov
push
sub
pop
notb
or
mov
daa
mov
dec
inc
dec
arpl
jp
mov
fwait
mov
mov
mov
cli
je
mov
shrb
cmp
fisttpl
xor
loop
xor
mov
dec
outsl
leave
and
mov
ss
inc
leave
fs
hlt
arpl
or
push
lahf
pop
and
pop
jo
ljmp
clc
mov
push
cwtl
stos
rcr
mov
xor
sbb
and
cmp
add
lret
inc
ljmp
outsb
push
mov
cltd
push
sub
jle
scas
fsubp
and
sub
mov
int3
cmp
add
popa
inc
popa
jne
ljmp
js
les
mov
lcall
push
or
and
imul
adc
outsb
fcoml
sub
xor
stos
lahf
jne
bound
pushf
cltd
loope
push
push
jge
imul
mov
mov
add
pushf
add
into
mov
out
lahf
push
insb
mov
out
cmpsl
in
jno
add
inc
xchg
and
jge
or
mov
aaa
jns,pn
mov
test
imul
pushf
and
bnd
mov
jl
cs
subl
scas
jae
orb
pop
lret
xor
adc
push
out
fwait
subl
and
sub
adc
in
shrb
mov
shll
fwait
xor
aad
pusha
imul
and
jns
mov
push
out
rclb
scas
pushl
lock
sub
or
subl
fwait
cli
int
fdivr
xchg
sub
addr16
ds
repnz
dec
fdivl
pushf
loopne
push
subb
dec
arpl
push
cmc
mov
xchg
loope
sbb
mov
in
dec
shr
bound
add
test
cmpsb
pop
inc
mov
pop
mov
dec
fisubrl
jno
mov
push
insl
ret
or
sbb
enter
cld
pusha
jbe
lcall
mov
les
mov
dec
fwait
cmp
test
cmc
nop
and
test
cmc
iret
loop
lret
fisubs
ljmp
mov
movsl
aad
gs
xchg
mov
push
jne
xchg
or
or
mov
rorb
xlat
popf
mov
stc
sbb
pusha
mov
ja
outsl
stc
pop
push
lret
add
sub
lahf
jmp
push
insl
cmpsl
xchg
leave
pop
rolb
test
int3
punpckldq
pusha
adc
ss
scas
fnstcw
adc
xor
ljmp
mov
loope
xchg
mov
or
ljmp
addr16
popf
scas
repz
aas
or
sbb
rorl
inc
cmp
xchg
inc
xchg
xchg
mov
cmp
std
or
ss
jle
sahf
cltd
and
data16
sarb
popa
mov
mov
and
jbe
dec
repnz
cld
test
mov
push
shlb
repz
arpl
and
repnz
sub
xchg
pop
xchg
or
inc
xchg
or
jae
out
mov
lea
enter
push
aas
lock
sub
into
pop
pusha
push
push
adc
add
or
ret
jg
pop
pop
not
insb
inc
push
stc
xchg
pushf
xchg
pushf
push
in
pop
lods
jmp
aad
fcoms
pop
push
int3
push
mov
sti
dec
movsl
jge
es
xlat
xor
mov
mov
mov
lahf
jp
mov
leave
aam
in
das
sti
cmp
aam
arpl
fs
iret
ffree
inc
ret
out
push
and
jno
insl
fsubl
addr16
mov
mov
mov
pop
xchg
addr16
jecxz
dec
shrb
fisttpll
insl
or
inc
in
rcll
mov
xchg
cwtl
shlb
xor
push
gs
cmpsb
adc
adc
push
arpl
dec
flds
push
dec
mov
jmp
mov
pop
out
ja
nop
push
outsl
emms
cmpsl
bound
shrb
sbb
push
push
outsb
or
js
jl
mov
mov
jne
xlat
push
stc
fwait
sbb
sbb
inc
cmp
mov
loopne
fdivl
or
fidivrl
jno
loop
lods
mov
and
fnstcw
lock
test
sbb
fwait
and
mov
pop
sbb
jmp
loopne
ja
mov
sub
jae
aas
xchg
dec
xchg
gs
loop
roll
dec
data16
push
mov
ret
fcomps
or
fisubrl
jle
icebp
imul
push
mov
daa
incb
js
sub
int3
adc
xchg
xchg
mov
xchg
test
fwait
outsl
inc
repz
iret
pushf
jg
ret
cmpsb
and
sub
lock
jno
cltd
pop
out
dec
sub
mov
das
lcall
lea
cmp
xor
mov
out
add
rcrb
xchg
pop
pop
push
scas
dec
add
cltd
jl
mov
sbb
pop
lds
sbb
dec
lds
jnp
cltd
lea
fadds
in
mov
data16
out
sub
mov
fsubr
cmc
das
fnstsw
mov
out
insl
daa
pop
lret
fadd
insl
mov
lods
mov
stc
cmpb
xchg
mov
add
and
lea
sbb
sub
out
sub
test
out
lds
mov
aaa
shlb
push
test
mov
sbb
add
fcoms
scas
rclb
sbb
jmp
xchg
daa
and
repz
cmpsl
int
mov
cmp
mov
movsb
adc
aaa
and
and
jnp
fs
cltd
jmp
nop
add
jo
pop
mov
and
daa
xchg
sarl
jge
mov
adc
mov
push
int3
pop
cltd
loop
dec
push
movsl
jle
adc
js
daa
in
in
push
push
and
lds
xor
and
inc
mov
jns
sub
or
insb
mov
mov
pcmpeqb
mov
cmpsb
in
cmp
or
in
mov
outsl
arpl
out
ja
jns
cmpsb
push
inc
cwtl
mov
and
xchg
lcall
in
out
push
push
std
sub
mov
ret
repnz
loope
repz
loope
push
test
jnp
jle
sbb
mov
in
addr16
addr16
out
dec
pop
test
mov
inc
pop
sub
add
inc
incl
fwait
lds
mov
cmp
inc
mov
shlb
dec
lea
and
aaa
push
push
ret
inc
cmp
rolb
adc
xchg
test
jle
dec
sbb
loopne
inc
jbe
mov
mov
add
xchg
sahf
mov
imulb
repnz
in
hlt
cmp
xlat
pop
xor
and
in
push
jp
push
dec
push
or
sbb
roll
pop
jo
repz
lahf
dec
adc
ds
aaa
mov
cli
xchg
inc
in
vmovntps
and
push
push
ljmp
mov
fcmovnb
aam
push
arpl
ret
mov
cmp
and
push
pavgb
out
aas
ljmp
or
sbb
jmp
push
imul
xchg
adc
dec
sar
adc
xchg
or
int3
or
sub
arpl
dec
dec
test
aaa
sub
sub
sub
xchg
scas
mul
repz
orl
mov
mov
inc
leave
cmp
test
pop
leave
std
test
lea
cmc
repz
outsl
cmp
aad
add
aaa
bound
adc
jp
mov
fdivp
test
mov
jg
or
jle
xchg
les
sub
mov
and
das
or
cmp
cmpsl
popa
mov
sub
lods
out
jns
mov
ret
jnp
pop
cld
test
lds
adc
mov
test
xor
cmp
ror
cmp
xchg
shlb
fldl2t
movsb
cmpsb
xor
add
push
cmc
jno
cmpsb
out
outsl
shlb
int
mov
aad
fldenv
idivl
or
ret
andb
cmp
mov
cmc
mov
lods
dec
cld
stos
push
cmp
cmp
cmp
xor
hlt
mov
or
or
jae
sbb
test
xor
mov
in
aaa
cmpsb
aad
xor
ljmp
test
out
and
pop
mov
lods
out
push
loopne
in
std
flds
and
movsb
leave
scas
and
std
fsubrs
imul
jnp
xorb
test
scas
hlt
dec
adc
cmp
movsl
mov
bound
leave
mov
add
cmpsl
xchg
pushf
nop
adc
test
jae
std
movsb
add
rorl
or
mov
cmpb
pop
les
shr
dec
or
and
cmp
push
popa
lods
fsub
inc
push
pop
xchg
lcall
adc
das
jle
pushf
jmp
lahf
subl
and
and
mov
mov
mov
fsts
push
aad
addb
xchg
add
xchg
mov
sub
das
insb
dec
dec
sub
xchg
packsswb
sub
cmpsb
cmp
fnstsw
jg
mov
pusha
inc
arpl
push
jmp
inc
mov
insl
sti
jl
push
adc
add
jecxz
sti
repz
mov
push
mov
dec
outsb
push
cmp
sub
adc
pop
testl
inc
cld
xor
pop
jbe
sbb
lods
leave
addr16
cltd
nop
cs
hlt
dec
pusha
xchg
or
push
rol
dec
jg
clc
dec
sub
xor
lret
add
mov
mov
push
and
mov
out
jg
jo,pt
sub
loop
sti
mov
pop
cmp
mov
jne
jecxz
dec
or
pop
xor
dec
adc
lret
loope
mov
loopne
xor
hlt
aaa
fbstp
in
cmpsb
cmp
lea
cmpsb
outsl
fdivrp
lods
test
loope
or
sti
pop
lods
mov
popa
popa
fcoml
pop
test
cmpb
xchg
add
push
xor
loope
jl
leave
loopne
sub
pop
xchg
je,pt
mov
test
mov
adc
push
pop
and
xchg
stc
sti
xchg
push
mov
adc
daa
push
mov
std
cmpsl
sub
loope
mov
fisubs
shrb
es
popa
jle
leave
push
imul
dec
dec
loopne
jno
adc
xor
push
push
ds
pop
test
adc
imull
jo
sbb
cmp
pop
cmp
in
movsl
cld
jb
pop
shll
sti
cmp
repz
adc
push
fldz
xor
xlat
dec
add
inc
call
sub
sbb
xchg
shl
ss
divb
fmuls
inc
cmp
cwtl
fcmovbe
clc
std
outsl
leave
mov
movsb
dec
jns
lods
aas
mov
testb
popl
mov
fwait
aas
rcr
xor
or
cmp
mov
enter
mov
data16
pusha
dec
aad
xorb
push
xlat
push
cmpsl
repz
xchg
data16
pusha
mov
sub
scas
dec
mov
mov
adc
adc
fs
jb
push
pusha
cltd
ja
sbb
push
into
pop
sbb
sub
shrb
inc
imul
stos
add
jae
lods
or
jge
mov
imul
or
mov
out
push
jmp
pop
movsl
orl
adc
loop
pop
gs
cli
jnp
dec
cld
jnp
xchg
sbb
jmp
adc
dec
repnz
les
cmp
out
dec
rcll
or
push
mov
lods
lea
flds
push
push
xchg
imul
jne
xor
jb
movsl
push
fistl
cld
adc
mov
aaa
jge
jbe
mov
pop
cmpsb
sbb
add
push
shll
dec
push
adc
sub
jae
cmp
fmull
and
push
lahf
inc
addr16
pop
push
xor
data16
aam
js
sbb
mov
hlt
fbstp
in
loopne
push
iret
and
jb
xor
cmp
out
or
in
push
stos
es
or
push
int
sbb
fldt
mov
gs
test
fbstp
fldl
jg
cli
jbe
mov
ljmp
loopne
loopne
or
repnz
xchg
or
mov
xchg
push
xchg
mov
add
mov
rorb
je
call
or
insb
insl
sub
pop
test
xchg
mov
pop
cmp
dec
roll
filds
shrb
pusha
lret
repz
pop
into
sub
sbbb
das
mov
out
mov
cmc
mov
jae
fmull
int
outsl
or
loope
push
cmp
imul
lret
loopne
pop
loope
das
test
mov
orl
push
mov
fwait
in
cmp
push
loop
pop
popa
in
in
loop
loop
pop
xor
xor
xorl
inc
subl
adc
sti
mov
dec
adc
jecxz
mov
cmp
sbbb
ljmp
cmp
jmp
int
push
and
jg
daa
scas
into
sub
wrmsr
add
add
jl,pn
xor
arpl
dec
sbbb
pushl
sbb
sub
jge
dec
jne
test
push
shrl
ret
mov
ja
xchg
add
sbb
xor
enter
xchg
and
pop
lahf
adc
jmp
adc
xchg
mov
adc
pushf
fucomi
mov
mov
and
inc
cmp
js
shrl
pop
cld
fwait
add
cld
xor
jge
insl
loope
xchg
cwtl
jg
add
mov
and
xor
ljmp
mov
inc
sahf
aaa
and
dec
mov
cmp
fiadds
xchg
mov
mov
xchg
pop
in
pop
popa
push
lods
stos
fcoms
jae
movsb
repnz
inc
rolb
jo
fs
in
mov
lods
pop
pusha
pop
das
or
jmp
cmc
push
jns
fisubrl
std
and
cwtl
call
pop
jge
rolb
push
mov
jge
adc
push
sub
fsubr
pop
sub
sub
sbb
cmp
scas
mov
xor
clc
shr
and
inc
mov
sbb
mov
sbb
je
inc
gs
loopne
and
lock
inc
stos
sbbb
push
add
enter
mov
enter
or
push
jmp
push
into
cs
pop
outsb
mov
cmp
xor
xor
in
fisubs
frstor
dec
or
stos
pop
imul
add
clc
je
andb
fst
sub
push
clc
and
mov
std
aad
mov
ljmp
push
test
xor
add
mov
xor
sub
pushf
lock
xor
mov
adc
filds
sub
pop
mull
mov
sub
incl
jecxz
fstps
outsb
cmc
xchg
scas
mov
xor
ds
imul
cltd
pop
mov
mov
xchg
jo
out
dec
mov
std
cli
mov
dec
mov
loop
cmp
sahf
push
ficoml
dec
sub
sub
mov
test
rcr
cmc
test
sub
es
push
repnz
int
loopne
aam
mov
push
mov
in
je
jnp
sub
repz
fldt
lock
cmpsl
lret
xchg
add
cltd
aaa
mov
int3
pop
out
jne
and
fnstsw
mov
pop
mov
pop
shr
or
sub
push
fimuls
pop
inc
jle
pop
mov
cmp
ja
sbb
dec
pop
xor
xchg
loope
sbb
adc
and
shl
lods
mov
insl
insb
cwtl
xlat
mov
cmpsl
mov
add
outsb
aam
fiaddl
dec
insb
fisttps
jg
add
jno
popa
dec
xchg
adc
imul
in
jns
adc
xchg
and
dec
and
add
jmp
decl
clc
movsb
das
in
iret
iret
pop
adc
mov
les
outsl
negb
mov
sub
jnp
xchg
je
les
lods
fdivl
mov
movsb
push
jb
into
inc
pop
pop
aaa
andb
adc
mov
xchg
xor
outsb
pop
movsb
sahf
inc
leavew
stc
or
fisubrs
pop
xlat
sti
dec
scas
rorl
nop
or
das
and
repz
ret
rolb
repz
pusha
jmp
mov
popa
mov
adc
int3
pop
notb
push
or
jl
inc
mov
aam
pop
fwait
gs
xchg
popf
dec
sti
scas
lock
mov
adc
cmp
stos
add
push
lods
mov
cmp
out
js
frstor
pushf
dec
sbb
fisttps
jbe
jge
dec
cmp
mov
and
mov
mov
arpl
mov
dec
sbb
inc
fisttpll
in
scas
in
inc
ds
cmp
cmp
das
cmc
xorb
mov
pushf
es
cmp
and
adc
adcb
mov
xchg
mov
sbb
inc
dec
in
insl
movsb
push
imul
add
gs
or
jmp
jle
lods
adc
popf
arpl
or
sub
adc
or
lcallw
popa
fldz
adc
push
sub
add
adc
mov
and
bound
pop
inc
jno
popf
rclb
adcb
push
gs
jmp
sub
fdivr
pusha
cmc
fwait
jmp
mov
dec
push
fimuls
pop
dec
ss
insb
stc
gs
jb
test
mov
jg
iret
fidivl
sbb
nop
pop
pop
ret
mov
dec
jnp
lahf
xor
sub
cli
xchg
subb
xlat
outsl
push
es
imul
pushf
cmp
push
je
pop
dec
xor
xchg
mov
dec
sarl
lods
das
pop
inc
hlt
mov
lock
flds
sti
mov
mov
outsl
add
sti
xchg
in
stos
mov
sub
aam
rcpps
pop
dec
jmp
std
cs
lods
dec
insb
jle
daa
mov
ja
mov
add
mov
loope,pt
loop
lock
xchg
loop
loopne
cmp
adc
insl
testb
lods
mov
insb
pusha
movsl
pop
daa
iret
inc
add
mov
inc
push
xor
out
adc
push
test
mov
es
hlt
push
add
arpl
xchg
scas
outsb
sub
pop
mov
sub
mov
jp
lea
xchg
jne
cmc
push
sbb
and
aam
inc
pop
stos
sbb
pusha
mov
in
jge
sahf
mov
sub
adc
push
lahf
inc
pop
fs
mov
scas
inc
mov
mov
sub
mov
adc
sub
negb
adc
jo
lea
arpl
clc
adc
fs
lret
cld
cmp
fnstenv
sbb
jmp
jo
pop
into
aam
pop
out
daa
jno
scas
inc
sarl
adc
and
icebp
rclb
pop
xchg
shll
xor
pop
insb
movsl
mov
or
ja
xor
push
rclb
mov
jg
mov
into
and
sbb
or
sbb
leave
mov
outsb
ds
incl
fdivs
mov
push
ficoms
in
push
sti
loope
mov
push
xor
jecxz
pop
imul
xchg
lds
pop
lret
fwait
ret
dec
ljmp
push
add
or
repz
stos
sahf
cmpsb
stos
sub
pop
mov
enter
mov
nop
gs
jp
and
push
sub
fdivrl
fbld
and
movsb
data16
out
fidivl
mov
xchg
add
ljmp
adc
xchg
fdivp
cmp
sub
sub
add
iret
xchg
xchg
adc
pop
and
add
add
jb
push
xchg
fwait
and
sbb
fsubp
out
cmp
jns
adc
es
xchg
mov
jle
das
jae
ss
in
fucomi
pop
scas
out
mov
push
pop
cltd
mov
stos
jl
jne
dec
push
test
mov
pusha
jno
mov
stc
inc
xor
cmp
aam
dec
push
xchg
adcb
lods
cmp
and
xchg
mov
add
sbb
mov
pop
sbb
aas
lret
add
das
push
add
je
das
aaa
jbe
or
xchg
push
ret
stos
sbb
cs
jnp
in
ja
sub
aad
mov
fistl
dec
rorb
repnz
mov
call
fisubrl
push
sub
aam
or
popf
filds
lret
xor
xor
sbb
test
push
mov
decb
dec
jmp
orl
cmp
inc
push
jle
mov
pop
jl
jnp
es
inc
mov
rorb
cmp
dec
add
xchg
xor
idivb
mov
or
push
lods
pop
mov
and
xchg
xor
cmp
not
or
jo
jg
out
arpl
enter
std
lcall
jo
aam
jl
icebp
popf
insl
xchg
cmp
jo
call
sub
xor
in
cs
xchg
cmc
lcall
jmp
cltd
mov
ss
icebp
mov
cmp
neg
adc
les
or
icebp
fildll
jo
outsl
inc
xchg
dec
incl
or
inc
rcll
lahf
inc
add
popf
daa
mov
add
aas
cmpsl
dec
push
cs
lcall
push
xchg
xchg
push
repz
fwait
out
xchg
stc
adcl
cmpsl
scas
cs
mov
sbb
popa
mov
jae
sbb
and
cli
les
daa
gs
pop
xchg
jb
inc
push
rcr
das
daa
inc
inc
xchg
pop
inc
push
mov
fwait
inc
jp
and
sub
dec
mov
sbb
inc
ss
out
outsb
adc
frstor
call
push
mov
xchg
or
test
xchg
mov
mov
mov
fdivrl
mov
lods
mov
cld
aaa
xor
xor
adc
add
adc
xor
std
xor
pop
scas
ret
ror
add
cmc
pop
mov
jns
iret
and
adc
inc
cs
xlat
std
and
push
cld
mov
cltd
mov
sub
outsl
call
in
mov
and
stc
dec
sbb
and
xor
lds
stos
pop
jle
mov
ss
mov
push
cld
ja
cwtl
mov
sti
sbb
out
or
icebp
call
fincstp
ja
adc
fwait
jno
cmp
jnp
lods
filds
xor
and
popa
lds
jbe
rcrb
stos
es
mov
dec
sub
sub
jg
mov
addr16
push
jle
rolb
jle
neg
cld
pushw
test
inc
mov
and
cmp
or
push
iret
pop
and
jnp
mov
fiadds
je
sub
in
sub
add
add
addr16
mov
rcrb
and
in
sub
jb
fwait
push
inc
test
mov
jo
adc
jo
mov
sub
push
cmp
fsub
pushl
js
push
jne
in
cmpsb
cmp
iret
scas
inc
jp
or
jmp
push
repz
dec
xor
clc
add
or
jecxz
repnz
add
pop
adc
addr16
push
sbb
mov
cmp
mov
nop
sbb
mov
cmp
sbb
mov
addr16
xor
push
mov
int
xchg
pop
mov
pop
xor
sbb
pop
repz
fcomps
aaa
and
inc
xchg
xchg
repz
int
in
or
push
in
or
test
add
and
fcmovnbe
outsl
jecxz
es
jg
mov
in
xchg
mov
xor
subb
sub
rcl
nop
sub
stos
cmp
mov
or
and
jge
fistps
loop
jle
dec
pop
jbe
int
sbb
jne
and
loop
mov
inc
movsl
lea
into
scas
out
pop
sbb
insl
xchg
icebp
add
in
jnp
outsl
sub
repz
sbb
ret
insb
xor
sub
out
ret
mov
xchg
jle
and
xchg
or
mull
ret
pop
call
cmp
xor
cld
bound
jmp
xor
xchg
aad
ja
jno
cltd
sub
rorb
shlb
push
lcall
roll
mov
imul
in
jo
das
int
xchg
sbb
push
mov
pop
pushf
stos
stc
and
mov
je
mov
repnz
adc
fwait
aad
adc
mov
fwait
dec
and
icebp
cld
iret
adcb
sbb
out
adcb
mov
xchg
sbb
push
inc
nop
rolb
loope
repz
and
or
int3
std
adc
sub
jb
xchg
popa
js
test
push
addb
mov
add
jl
xchg
mov
pop
mov
push
arpl
lds
mov
movsb
jnp
sub
lahf
subb
iret
mov
aaa
nop
jl
popa
add
jl
ljmp
int3
adc
ds
popf
ret
cld
inc
sub
shrb
lods
mov
push
lret
ja
and
test
shll
dec
out
test
fisttps
fnstcw
std
in
inc
pushf
push
fisttpll
cltd
mov
push
push
in
sbb
fcomps
ret
in
push
fs
outsl
rcrb
ret
in
gs
rorl
outsl
add
jb
xor
outsb
xchg
pop
js
or
mov
mov
push
fwait
dec
jp
fcomps
and
movsb
jb
test
inc
loope
and
mov
imul
arpl
repz
mov
int3
movsl
mov
jmp
pop
sti
pusha
xor
pop
dec
mov
mov
xor
ret
jle
push
dec
cmpsb
into
cmp
popf
aas
movsb
jmp
xor
cmpsl
inc
ja
cs
aam
arpl
adc
lods
rclb
mov
hlt
rcll
jb
pop
out
in
mov
js
adc
or
shll
aaa
pop
sbb
mull
inc
or
xor
xorl
fsubl
call
push
mov
in
nop
mov
cmp
rclb
dec
mov
mov
cwtl
in
int3
mov
xchg
fsubrl
jmp
ret
lret
shll
push
cmp
jo
outsl
push
js
mov
pmaddwd
xchg
xchg
pop
mov
in
daa
test
scas
cmpl
fdivr
push
cmp
cmc
mov
pop
jmp
xchg
in
cmc
adc
ss
add
cmc
pop
jo
adc
idivb
inc
xchg
out
fcmovb
jmp
push
mov
sub
popa
sbb
jge
inc
in
sub
loope
out
adc
adc
aad
fnstsw
outsl
push
and
bound
pop
mov
std
or
faddl
push
int3
jno
stos
push
callw
xchg
xor
sbb
cmpsb
add
pop
xchg
lods
inc
and
aad
add
add
test
das
test
cmp
sbb
into
dec
cmp
and
rcrb
jecxz
sub
test
push
cs
in
xor
shll
push
test
add
in
pop
sub
imul
hlt
xor
lahf
or
cmpl
cld
lcall
cld
mov
xchg
jnp
sbb
mov
aad
stc
repnz
out
fildl
jno
mov
mov
aas
sbb
popf
mov
xor
mov
test
xor
cmpsl
aam
add
cmp
idivb
fidivrl
andl
pop
add
mov
inc
or
lods
and
test
test
test
jns
jg
jmp
test
push
insb
ljmp
xchg
dec
jo
xchg
mov
leave
jb
or
push
rclb
test
push
sbb
sahf
xchg
pop
jmp
sub
das
imul
push
inc
inc
dec
and
lock
or
mov
stc
daa
movsl
jb
sbb
mov
gs
pop
fwait
push
mov
pop
sub
xchg
mov
mov
mov
insb
sbb
mov
sbb
mov
jge
jp
es
push
je
fistpll
in
xchg
jmp
pop
sbb
push
cmc
add
xchg
mov
add
scas
lea
lcall
mov
sub
cmc
jmp
lea
xchg
das
or
inc
test
xor
cmp
mov
jno
push
cmpsb
gs
sub
cmp
loop
scas
outsl
push
fsubrl
cmp
or
pop
in
mov
push
pop
mov
mov
test
repz
xchg
outsl
fdiv
lods
xlat
inc
dec
fbstp
mov
imul
insb
movsl
insl
jnp
in
addr16
push
pushf
or
cld
js
xor
jmp
ja
shlb
sahf
or
jns
aaa
int
pop
jg
enter
rolb
enter
sub
push
test
loopne
push
pop
scas
sub
aam
add
mov
add
jnp
test
mov
sub
or
and
test
mov
into
mov
rclb
sahf
sub
push
test
fisubs
cwtl
dec
mov
dec
or
sbb
lds
stos
stos
dec
aaa
pop
lods
inc
jp
sbb
jne
or
andl
or
push
xor
dec
and
jg
inc
ds
push
mov
mov
push
dec
outsb
in
xor
fisubrs
cmp
jl,pn
pop
push
rolb
lods
lods
rclb
aaa
fdiv
bound
shrl
jnp
cmp
lcall
sbb
inc
ficoml
nop
icebp
inc
and
mov
insl
sub
call
or
dec
mov
das
in
jae
mov
sbb
mov
mov
dec
ret
pop
pop
pop
jnp
out
lret
neg
jecxz
adc
addr16
in
jp
dec
or
or
scas
inc
inc
dec
mov
push
fcoml
outsb
push
adc
push
mov
jl
xor
popa
jnp
inc
adc
out
or
mov
push
cmp
stos
jp
xchg
mov
in
fldcw
pop
fcomp
dec
sbb
and
inc
push
push
sti
xchg
test
inc
jle
dec
mov
ljmp
push
and
fildll
dec
cmp
mov
xchg
stos
mov
adc
sub
inc
stc
in
mov
xor
cwtl
adc
es
pop
add
dec
movsl
pushf
dec
fnstenv
sbb
cmpb
cmpb
shlb
push
adc
lcall
dec
mov
stc
iret
push
and
jno
loope
add
cwtl
add
mov
push
je
push
das
jecxz
xchg
and
cmpsl
int3
fiadds
xchg
mov
shl
jg
out
cmp
pop
jnp
cwtl
mov
sbb
sbb
inc
call
add
sub
push
lods
inc
xchg
das
push
inc
mov
arpl
xchg
mov
mov
cmpsl
je
push
daa
jnp
inc
cmp
repz
into
jge
mov
repz
leave
pop
jne
dec
rcll
cs
mov
adc
push
data16
sub
lcall
jle
inc
iret
loope
push
sahf
imul
cmpsb
mov
sbb
mov
add
xchg
add
jp
cs
scas
xchg
mov
add
and
mov
aas
adc
push
push
or
and
js
and
sbb
adc
fs
lds
sahf
fs
mov
out
out
mov
ss
add
sub
pop
inc
pop
adc
sahf
hlt
xchg
dec
xchg
mov
push
movsb
mov
or
xor
lods
adc
cmc
negl
ja
sub
jge
popa
xor
cmp
cmc
movl
outsb
jmp
ljmp
jmp
lds
xchg
test
xor
imul
std
xorb
mov
div
pop
dec
enter
mov
mov
out
adc
aam
bsf
scas
test
dec
inc
test
xor
fnstsw
pop
idiv
jp
test
addr16
cmpsl
sbb
mov
fcomp
call
cwtl
in
outsb
or
mov
xor
repz
and
in
mov
popa
std
push
dec
push
add
addb
inc
mov
jecxz
fisttpll
cs
int
xchg
mov
mov
aam
cltd
sarb
sti
pushf
movsl
push
push
mov
mov
loope
dec
and
xor
popa
cli
or
pop
adc
and
dec
rorl
rcrl
or
je
dec
mov
mov
push
pop
adc
jae
xor
sahf
repnz
aas
leave
outsl
ljmp
shlb
or
mov
out
cmc
xchg
cmpsb
mov
add
xchg
test
mov
std
ljmp
cmpb
inc
les
mov
fsubs
stos
repz
jge
data16
mov
dec
inc
sahf
outsb
ljmp
icebp
cmp
cli
push
stos
in
rcll
loope
mov
jne,pt
adc
cld
push
out
sbb
inc
lods
pop
jo
jno
fcomps
negl
xorb
mov
sub
adc
push
cli
ror
jg
mov
mov
dec
xchg
push
movsb
pop
add
add
pop
daa
leave
inc
scas
xchg
pop
xor
lods
and
push
cmp
jle
cmc
pop
inc
movsb
pop
jnp
sub
dec
add
cmp
call
movsl
mov
cmovbe
ljmp
jnp
xchg
inc
cmp
mov
mov
mov
jne
out
dec
pusha
mov
test
rcrl
loope
in
pop
pop
sub
vmaxsd
dec
cltd
movsl
jg
dec
movsb
mov
std
jg
mov
aaa
scas
das
orb
in
xchg
adc
popa
dec
into
xor
dec
jmp
iret
loop
iret
imul
push
loope
addr16
in
lock
push
scas
inc
loope
cmpb
fdivrs
mov
sbb
into
shrl
jg
inc
pop
or
mov
and
pushf
fadd
inc
cmc
jnp
xorb
rclb
int
dec
sbb
push
cld
rclb
dec
pop
gs
dec
and
sbbl
in
iret
push
adc
mov
or
aaa
mov
idivb
nop
fmulp
ds
fadds
sbb
psubsb
mov
xchg
inc
mov
lahf
cltd
xor
aaa
into
inc
sets
icebp
fwait
ja
cmpl
daa
add
rcll
mov
nopl
imul
inc
dec
cmp
add
test
sbb
loop
rcrb
pop
loope
jmp
mov
mov
push
fldt
enter
imul
test
addl
fwait
mov
push
xor
mov
cltd
test
mov
pop
test
push
push
bound
mov
aas
push
rep
or
lock
lret
lret
cltd
sub
sub
mul
jge
imul
movsl
dec
repz
sbb
pop
sub
inc
or
sbb
xchg
aam
out
lods
dec
sbb
js
cmp
or
mov
mov
dec
jne
loop
loopne
jl
sub
pusha
iret
mov
xor
mov
or
jae
push
adc
outsl
fnstsw
push
out
mov
xor
xchg
adc
jle
push
arpl
xchg
repz
xchg
inc
pushf
mov
mov
into
shlb
dec
pop
mov
and
lea
mov
mov
push
sahf
fsubr
mov
fidivrl
inc
add
add
sbb
inc
aaa
jl
push
ja
stos
fwait
sbb
imul
ret
rcrl
sbb
mov
movsl
inc
int
fidivrl
jp
mov
roll
adc
inc
daa
push
mov
enter
sbb
sti
mov
push
enter
stos
push
in
dec
and
dec
mov
add
inc
hlt
fdiv
inc
repnz
cld
in
push
adc
xor
aas
incb
mov
repnz
pusha
dec
cld
xchg
sub
dec
ja
sub
cmp
or
pusha
jno
test
ss
fsubrp
mov
add
stc
inc
sub
mov
jb
inc
cmp
xor
lahf
faddl
shlb
movsl
insb
mov
lea
ljmp
adc
xlat
sub
dec
lcall
test
xchg
jb
outsl
cmp
outsb
movsb
xor
test
je
scas
cld
pop
sbb
int3
push
cmc
jge
cmp
lret
outsb
jo
js
loop
std
data16
sbb
int
ljmp
outsl
lock
fildll
jecxz
xor
mov
lret
pop
sbb
movsl
push
test
xchg
add
hlt
or
hlt
fwait
cmp
push
scas
arpl
in
push
mov
jl
outsb
lcall
push
jp
lcall
adc
dec
repz
xchg
mulb
push
pop
cmc
cwtl
jl
popa
mov
fcoms
or
test
dec
les
sbb
ja
jns
dec
or
les
inc
dec
cmp
jae
sbb
movb
inc
cmpsl
aas
dec
cwtl
fidivl
es
mov
mov
jecxz
sub
sub
jecxz
notl
loope
jle
mov
pop
das
bnd
pop
cli
cmpsb
mov
push
je
push
int
add
jmp
test
jnp
jge
and
jne
popa
ret
ffree
pop
cmp
adc
sbb
push
ss
jmp
daa
fs
inc
xchg
out
xor
adc
fisttps
push
mov
idiv
mov
mov
sarb
inc
jne,pn
xchg
xchg
addr16
mov
daa
inc
mov
mull
mov
xor
popa
ret
in
inc
xchg
mov
or
mov
xchg
xchg
xchg
mov
popf
stc
scas
pop
cs
sub
aad
loop
clc
push
cmpsb
push
mov
jl
dec
enter
js
in
shll
bound
adc
test
mov
jmp
fcompl
or
notb
cmp
rorl
icebp
fisubrl
mov
mov
sub
dec
add
out
xchg
ds
icebp
cmc
push
push
mov
mov
or
scas
hlt
sbb
inc
pushl
cmp
repz
xchg
mov
outsl
int
jb
mov
sbb
xor
das
test
inc
or
leave
ret
iret
adc
loope
gs
inc
mov
add
mov
jecxz
mov
shrb
mov
scas
popa
repnz
jecxz
mov
mov
cs
outsb
mov
clc
mov
xlat
sbb
xchg
stc
aaa
dec
add
xchg
fxch
bound
imull
pop
cmpsl
mov
mov
dec
jae
mov
and
pushf
mov
cmp
mov
lret
xchg
adc
add
mov
push
shlb
dec
push
in
sbb
imul
dec
mov
or
fsts
or
cli
cmp
fsubs
stos
mov
and
push
adc
adc
fisubrl
fadds
mov
divl
push
cmpl
jmp
negl
mov
sub
fisubs
cmp
ss
pop
insb
aad
std
sahf
fcmovnu
and
mov
pusha
adc
mov
fwait
ret
fsubs
sarl
daa
jno
sub
daa
iret
jo
out
adc
cmpsl
cmc
push
std
add
sti
jp
pop
pop
jg
lcall
mov
dec
jp
mov
xorb
fidivrs
add
jp
das
or
cmp
add
jmp
cmp
sub
mov
inc
mov
or
jbe
imulb
loope
fiaddl
jge
dec
xchg
ss
sbb
add
data16
add
xlat
xchg
into
into
ja
sub
nop
insb
lea
push
imul
enter
mov
int
fwait
mov
fwait
aad
imul
push
jno
insb
push
outsl
xor
jge
or
neg
push
dec
into
push
cmp
lock
mov
sarb
push
scas
and
adc
lods
sub
ljmp
push
push
push
pop
roll
jns
ljmp
in
and
sahf
pop
dec
fiaddl
mov
hlt
xor
sbb
dec
iret
or
add
xor
int
mov
subb
sbb
lret
pop
cli
cwtl
jne
in
aam
fucomip
mov
or
bound
mov
cmc
lcall
mov
sub
xchg
or
shll
dec
cmc
jmp
xchg
xchg
dec
aam
mov
mov
addr16
cmpsb
mov
stc
push
mov
push
sub
mov
mov
mov
xchg
cli
jno
pop
mov
add
rclb
mov
roll
cmp
mov
out
push
xchg
out
mov
add
jp
cmp
or
popa
scas
inc
inc
iret
pop
mov
or
jp
shl
mov
cld
je
mov
stos
dec
mov
mov
sbb
int3
sub
stc
sub
and
or
xor
sbb
sbb
jmp
sbb
xor
cli
das
push
jle
and
les
scas
icebp
frstor
mov
sub
jb
jmp
mov
sub
mov
inc
lcall
les
loopne
and
in
xor
fnstsw
sti
adc
xchg
add
xor
pop
and
or
inc
sub
outsl
jge
dec
jmp
mov
call
lock
push
adc
popf
dec
ficompl
fs
fsub
int
inc
jo
rcrl
pop
push
aas
xchg
push
xlat
pop
lret
adc
lret
pop
xor
xchg
insb
fcmovbe
xchg
test
psadbw
sbb
pop
xchg
fcmovu
cwtl
inc
std
in
pop
lret
and
lea
stos
xor
cmp
inc
sub
cmp
xchg
ss
inc
ret
xor
xchg
jnp
lods
sub
cmc
adc
pop
jne
mov
mov
js
ljmp
lcall
out
add
pusha
mov
inc
push
or
add
cmp
sbb
adc
ja
scas
pop
lds
or
std
imul
inc
ret
aas
mov
or
fcompl
cmp
jnp
mov
mov
inc
pop
loop
push
lcall
xor
sbb
faddp
arpl
js
lret
into
xor
push
add
out
ja
mov
loope
out
imul
lods
popf
js
mov
sub
sub
ss
leave
lds
pusha
mov
pop
xchg
push
and
inc
test
jns
or
inc
cld
je
inc
std
cld
rcrb
in
cwtl
jge
mov
aas
xchg
test
xor
fbstp
mov
ss
jge
pushf
mov
jno
mov
jecxz
push
fildl
jmp
mov
mov
clc
arpl
test
jecxz
inc
xor
test
gs
leave
sbb
sub
ljmp
into
mov
sti
fdivs
mulps
int3
mov
cmc
mov
out
dec
mov
lods
mov
xlat
ss
push
inc
or
xor
fcmovu
lods
lea
insl
cmp
cli
push
add
xchg
sbb
hlt
push
icebp
out
xchg
loope
xchg
aas
cmp
xor
scas
adc
inc
or
and
xchg
aaa
dec
bound
aaa
insl
mov
repnz
sbb
pushf
sub
outsl
aam
mov
shlb
hlt
mov
cmp
mov
orl
je
lods
cmp
js
jp
mov
movsl
lods
scas
cltd
mov
mov
inc
and
jl
nop
lds
adc
lds
push
cmp
test
hlt
add
movsb
cltd
mov
adc
icebp
mov
fxch
add
stos
mov
pusha
mov
cmp
enter
fistl
adc
xchg
dec
lods
ret
stos
je
fisubrl
pop
pusha
pop
mov
jmp
movsl
ljmp
inc
ljmp
and
push
sarl
dec
sbb
rclb
sub
data16
pop
adc
sti
mov
stos
add
test
dec
push
sbb
pusha
pop
adc
addb
push
sbb
push
adc
xor
cmpsb
mov
mov
dec
test
pop
aaa
lahf
push
mov
daa
gs
dec
adc
aam
sbb
adc
cltd
xchg
jl
sub
adc
in
test
lds
sub
add
sub
mov
dec
mov
pop
bound
jns
repnz
dec
xor
dec
and
mov
mov
push
inc
sbb
sbb
add
xchg
aas
jae
pop
push
nop
leave
dec
fsubs
mov
pop
sbb
jecxz
mov
lret
or
shll
pop
jmp
and
iret
notb
bound
popf
out
test
addr16
test
repnz
stc
ljmp
mov
add
xchg
sub
inc
das
roll
mov
pop
mov
aas
fcmove
fcoms
fnstsw
sub
or
pop
mov
xchg
mov
inc
mov
mov
fwait
pop
lret
push
push
ret
push
xchg
xchg
mov
mov
mov
arpl
and
cmp
hlt
fldt
or
and
mov
inc
or
mov
lret
nop
dec
movsl
fwait
fwait
inc
xchg
pop
shll
push
out
inc
cs
fcmove
scas
push
insl
nopl
xchg
jmp
push
jg
push
mov
sbb
sub
jne
cmp
repnz
pushf
aam
fdivr
outsl
sub
out
push
or
mov
fs
inc
loop
adc
adc
jmp
mov
cmc
sbb
and
pop
stos
sbb
jge
push
mov
fdivs
add
lret
call
hlt
mov
nop
xor
and
frstor
das
ret
loop
stc
rcrb
push
cmp
add
movl
mov
mov
outsl
sbb
pop
ljmp
add
xchg
xchg
and
sub
mov
sbb
cmp
lods
and
aad
inc
mov
mov
mov
jnp
dec
imul
inc
mov
mov
sbb
and
jo
fisubrs
add
leave
jmp
sahf
mov
dec
pop
test
lret
jecxz
sub
pop
nop
aam
mov
hlt
rorl
cmp
sbb
loope
mov
add
xchg
cld
mov
lahf
iret
cwtl
push
fcoms
xor
imul
aam
xor
jae
dec
out
lock
sahf
insl
inc
push
ss
mov
cwtl
sti
lock
ret
lods
int3
inc
inc
push
mov
or
int3
jno
push
xlat
inc
cmp
sub
dec
sarb
inc
dec
fs
add
adc
filds
enter
cld
test
aas
nop
add
mov
push
aas
mov
jbe
popl
int3
mov
sub
mov
les
jne
mov
or
inc
enter
scas
add
enter
cwtl
cmpsb
shll
xor
rol
fucomip
jns
sbb
and
aaa
mov
dec
push
bound
addr16
mov
mov
pop
nop
mov
xchg
adc
or
cmp
dec
hlt
daa
repz
push
rorb
das
cld
mov
xchg
or
jmp
mov
pop
fucom
outsb
xor
mov
sbb
push
mov
movsb
pop
adc
or
rorb
aad
jmp
out
jp
cmp
pop
fsub
cs
int3
add
test
decb
cltd
or
pop
push
insl
int3
jmp
sub
jnp
cmp
daa
rcr
inc
adc
jecxz
jbe
xor
sub
sbb
outsl
lcall
jg
push
lcall
mov
jge
jb
dec
sti
cwtl
adc
mov
xor
push
sarb
jle
ja
xor
adc
cmpsb
mov
add
or
call
out
test
and
and
scas
lds
inc
clc
les
nop
mov
gs
je
out
dec
jecxz
in
pop
adc
mov
into
rorl
pop
lret
fidivrs
loopne
scas
mov
addb
ss
push
mov
mov
das
shll
xor
mov
dec
xor
das
ljmp
out
pop
fisttpll
test
lahf
sbb
mov
cmpl
stos
repnz
dec
vxorps
stc
mov
cld
mov
into
mov
iret
push
sti
lock
or
dec
addr16
in
dec
or
dec
aaa
cmpsl
mov
ret
imul
jg
xchg
or
in
sahf
mov
xchg
push
add
dec
xor
and
iret
call
and
cwtl
sahf
push
popf
pop
push
cs
enter
add
test
sbb
mov
jnp
sbb
sbb
adc
sbb
xor
add
outsb
scas
jg
sbb
inc
sbb
mov
dec
bound
iret
in
or
adcl
add
fnstenv
fwait
test
mov
or
mov
mov
xor
or
into
jmp
ss
xor
popa
popa
mov
ds
fnstenv
or
adc
lret
add
and
fincstp
or
and
xor
sub
push
mov
lret
pop
and
jo
aam
ficomps
out
jno
pop
sbb
or
sbb
int3
pop
cmpsl
jo
cs
shrb
js
dec
xchg
insl
mov
xor
into
xor
adc
mov
loopne
mov
and
dec
jp
and
aad
es
jne
roll
loopne
pop
dec
jno
push
ficoms
and
xacquire
ficoml
shlb
xchg
push
mov
ljmp
cmpsb
xor
adc
xlat
out
addr16
ret
jmp
jae
xchg
jns
sar
in
jg
pop
dec
push
push
scas
jbe
jg
ret
rcl
and
jg
dec
scas
xchg
adcb
aas
aaa
lret
shlb
call
adc
dec
dec
imul
stos
cld
jecxz
call
jne
test
pop
nop
fsts
sbb
add
and
adc
aaa
dec
jbe
sub
xchg
lock
cmp
mulb
push
sbb
das
mov
pop
mov
xchg
addr16
pop
std
or
dec
faddl
adc
mov
xchg
inc
dec
fs
aam
inc
adc
cmpsb
jbe
cmp
dec
pop
jmp
adc
jnp
addb
add
push
push
scas
xchg
pop
icebp
dec
dec
sahf
out
mov
push
pushf
or
testl
dec
add
or
jmp
dec
and
mov
test
mov
iret
and
sbb
and
pop
xchg
jae
cli
jmp
in
xorb
mov
and
cwtl
dec
stos
mov
popa
fisubrs
fstps
push
push
les
ret
pushf
cmpsl
dec
xchg
movsl
cmp
push
jae
pop
in
out
out
cs
bound
gs
cmpsl
insl
and
adcb
mov
rcl
movsl
jbe
cmpb
mov
jnp
push
dec
add
in
scas
push
rcrb
decb
fsubrs
xchg
icebp
mov
push
js
imul
imul
pop
xor
inc
jne
mov
inc
scas
dec
lock
inc
shl
jb
scas
lods
dec
mov
mov
pop
mov
cmp
icebp
ja
addr16
dec
jb
mov
outsl
imul
push
jg
mov
pop
dec
xchg
cmp
enter
ljmp
xchg
push
sar
xchg
xor
inc
pop
test
sbb
xor
rorl
in
push
je
iret
mov
xchg
test
push
mov
sti
mov
or
jp
mov
fdivr
shrl
shlb
loope
shr
push
dec
fidivs
sub
xor
push
clc
fisttpll
xlat
ret
lds
mov
flds
add
test
jle
dec
mov
out
or
push
inc
lods
adcl
daa
scas
add
jecxz
sti
mov
pop
lods
mov
rolb
or
es
data16
bound
sbb
push
cmp
ds
stos
mov
rcrb
test
inc
call
adc
in
sbb
pop
pop
stos
pop
cli
xchg
in
mov
hlt
or
imul
into
cld
xchg
dec
loopne
imul
mov
push
loope
push
out
pop
inc
add
cmp
cmp
popa
jno
pushf
or
outsl
aam
mov
cmp
popf
mov
or
or
cs
or
or
cmp
jmp
xor
push
notl
and
push
pop
out
mov
push
sub
int3
inc
jecxz
and
imul
fimuls
jnp
clc
sub
push
mov
lret
pop
ja
cmp
ficoml
test
out
ja
xchg
cmp
repnz
cld
cld
repz
jne
mov
or
mov
in
jle
lahf
mov
sbb
test
test
in
push
test
stos
shl
mov
loopne
in
shr
into
lock
and
jmp
sub
cmp
pop
loop
int3
aas
incl
pop
fidivrl
data16
incl
dec
mov
mov
popl
ficoml
scas
push
popa
push
arpl
xchg
push
and
mov
lods
add
push
mov
mov
fldl
js
rcl
dec
sbb
test
cmpsl
or
lcall
in
sti
dec
lods
push
mov
push
ljmp
adc
cmp
in
adc
pop
push
loop
imul
adc
cmp
jle
pop
cmp
les
or
ljmp
sub
fnstenv
and
repnz
fmuls
inc
lret
mov
into
lods
ret
push
ss
clc
adc
inc
scas
pop
lea
ljmp
std
aaa
das
test
xlat
dec
iret
add
bnd
xor
int3
jmp
sbb
fsubr
sahf
mov
negl
dec
inc
add
jnp
icebp
jmp
jp
mov
push
and
sub
sbb
adc
testw
and
mov
cld
xor
rcr
pop
xchg
pop
insl
in
and
gs
mov
xchg
clc
sbb
cmpsl
nop
cwtl
lock
gs
cltd
out
addr16
inc
mov
pop
lds
adc
add
js
xchg
adc
adc
xchg
jns
cwtl
clc
ja
jle
hlt
sub
add
jp
mov
subl
adc
fcompl
push
mov
sub
sbb
dec
repz
pop
cltd
cmp
in
mov
jne
xor
and
fbstp
addb
cmp
inc
add
in
cmp
inc
push
lcall
clc
sub
and
in
adc
cwtl
sbb
add
mov
sarb
xchg
jne
sbb
or
movsb
insb
mov
inc
jl
jo
orl
inc
push
lret
cmp
jmp
fidivrs
push
rcr
test
das
fwait
xchg
incb
sarl
loope
and
cmp
xchg
sarb
sahf
ja
stos
mov
xchg
dec
pop
cmc
cmpsb
xorb
cmp
xlat
adc
mov
inc
push
sahf
adcb
bound
add
pop
shrb
mov
rorl
cmpsb
in
movsl
bnd
and
sbb
xchg
sbb
loopne
and
hlt
xorl
popa
mov
add
daa
outsb
aas
pushl
std
popf
addr16
lcall
loop
je
outsl
mov
sar
cld
idivb
add
popa
stos
fdivrp
cmp
ffree
or
mov
and
xchg
sub
in
or
movsl
and
lea
clc
push
jo
or
or
jnp
jo
and
lret
mov
repnz
lds
mov
cmpsb
mov
loop
mov
add
adc
sbb
pop
in
mov
mov
movsl
stos
mov
add
inc
jo
or
rolb
adc
movsl
jbe
inc
cmc
int3
fst
pusha
popa
sahf
dec
and
jmp
mov
push
cmpsl
mov
jo
sub
stos
dec
push
xchg
push
mov
pop
out
mov
fnstsw
arpl
mov
sbb
add
loopne
and
in
mov
loope
lds
inc
mov
fwait
cld
sarl
inc
and
jg
imul
cmp
subl
pop
add
dec
addr16
jae
xor
and
jp
pusha
loopne
ds
cmp
mov
leave
fdivrl
int
ljmp
jle
pop
scas
and
iret
dec
mov
cwtl
dec
mov
push
mov
movsb
stos
xchg
inc
and
xchg
sub
mov
mov
out
sub
sbb
fistps
lret
fdivrp
or
sti
push
pop
test
inc
sahf
fiaddl
mov
outsb
jae
in
sub
jmp
imul
add
pop
ja
adc
cli
xchg
hlt
cli
int
out
in
sub
mov
add
dec
mov
enter
xchg
mov
subl
lret
aad
sub
shr
and
nop
jecxz
lcall
cmpb
mov
ret
mov
int3
sbb
loope
gs
pop
into
adc
and
fsubs
negl
test
xchg
inc
loope
fnstcw
sub
pop
mov
test
outsl
cld
cmp
jle
mov
jp
push
idivb
dec
out
xchg
negb
push
outsb
sti
fcom
push
and
jno
adc
pop
xchg
ljmp
test
inc
inc
adc
das
jb
add
fcom
inc
xchg
ror
dec
ds
xchg
scas
mov
int3
into
cwtl
mov
mov
data16
aaa
arpl
fwait
rorb
dec
push
inc
xchg
les
sbb
leave
pop
loope
jp
fcmove
jno
add
xchg
mov
dec
outsl
bts
push
cltd
fnsave
jmp
lods
xor
mov
pop
popf
loopne
sub
in
mov
popf
xor
inc
scas
pop
add
push
cmp
cmpsb
sub
rcll
sub
xchg
lahf
mov
test
sub
bound
test
xchg
test
sub
or
push
cmpsb
ret
push
pop
xor
std
jp
fisubs
sub
sub
mov
fucomip
ret
adc
or
xlat
inc
push
dec
jae
rcrl
stos
add
mov
jge
mov
repz
and
test
sets
sub
icebp
push
adc
sub
or
lods
jnp
xor
xor
adc
call
dec
js
les
mov
xchg
imull
mov
mov
push
ds
xor
or
sub
xor
add
sbb
cli
stos
outsb
adc
shll
fsubl
js
xorb
fiaddl
fstl
enter
fwait
xor
insl
dec
test
sbb
insl
jno
sub
mov
mov
pop
lods
push
fs
out
cwtl
pop
push
movsl
rcll
and
mov
lds
push
mov
push
jp
and
daa
addr16
jno
lock
mov
mov
xchg
addr16
arpl
pop
xlat
or
daa
dec
lea
push
mov
cmp
loope
fnstcw
sarb
fbstp
mov
push
hlt
std
xchg
clc
jnp
dec
arpl
mov
repz
cltd
fcomi
xchg
add
outsb
iret
or
and
and
int
ja
add
sarl
shl
std
add
or
call
stc
or
iret
lahf
loopne
push
xor
enter
xchg
or
and
xor
mov
or
nop
adc
loop
cmp
cmp
push
xchg
cmp
dec
adc
popf
repnz
xchg
sti
into
jmp
pop
addr16
enter
jmp
iret
sahf
icebp
jno
mov
ret
cltd
mov
out
repz
adc
std
jb
inc
stc
add
int
push
into
mov
inc
js
loopne
stos
sti
and
mov
jne
push
js
dec
and
inc
adc
lahf
mov
mov
cmpsb
fucomip
cmc
ljmp
loop
lret
push
movb
lcall
sbb
jle
or
sahf
push
fisttpll
cli
lret
jmp
push
xchg
mov
inc
shrl
cmp
sbb
sti
cwtl
rcl
out
lds
pop
sbb
flds
lahf
inc
pop
in
cld
mov
aam
xor
fsubs
and
add
in
mov
stc
pop
add
mov
je
adc
shlb
mov
aam
push
mov
or
add
enter
push
loop
jno
xor
push
add
xchg
push
imul
in
lods
xchg
loop
or
std
bound
lods
cmpsb
scas
stc
sub
sbb
das
call
nop
dec
lods
mov
mov
xor
fwait
and
shll
push
inc
setl
push
imul
or
push
xor
imul
xchg
push
mov
fistpl
lahf
test
clc
sub
pusha
jmp
aaa
insl
xchg
inc
jb
mov
out
mov
dec
std
xchg
imul
nop
jno
orl
ds
rcll
jp
jnp
das
dec
adc
lock
popa
loope
sbb
push
inc
add
shlb
data16
sub
or
adc
mov
mov
cs
out
test
pop
push
adc
aad
mov
fwait
movsb
fsubl
fsts
stc
sub
adc
and
adc
out
jns
sbb
fists
movsb
data16
jb
pushf
into
cltd
fucomp
cmc
pusha
add
pop
enter
dec
fwait
push
js
enter
insl
lahf
jl
addl
cmp
xchg
outsl
sub
fisubrs
ss
pop
movsb
stos
xor
cmp
or
jo
testb
push
int
xor
repz
pop
inc
jmp
daa
cli
out
inc
mov
xor
push
cmpsl
lds
pop
ljmp
xor
clc
test
shrb
mov
pop
or
dec
insb
hlt
stos
outsb
scas
xchg
adc
push
movzwl
int
ss
fs
sub
push
jnp
ds
sbb
and
sub
les
mov
xchg
test
mov
mov
xor
jecxz
stos
out
fdivp
fisttps
jnp
cmp
xchg
mov
lret
pop
mov
notb
mov
je
out
daa
mov
lret
sbb
adc
loop
inc
in
loop
push
jo
lcall
loopne
ret
dec
cmpl
pop
or
ret
scas
mov
push
mov
xchg
inc
dec
mov
mov
mov
dec
mov
and
repnz
push
pop
and
inc
sub
mov
sub
sub
in
nopl
xchg
sub
jecxz
insb
and
cmc
xchg
push
iret
orl
dec
add
pushf
mov
cs
cltd
std
cs
xchg
push
push
mov
ja
adc
enter
int3
ss
test
or
stos
orl
inc
ds
jg
cli
lods
sbb
pusha
shlb
loop
lret
mov
xchg
lret
dec
and
push
cmc
clc
mov
cmpsb
shll
sub
mov
int3
add
stc
pop
lcall
cmp
push
mov
or
cmp
jmp
push
adc
pop
cmpsl
inc
xor
push
hlt
adc
cmp
pop
ficoms
les
cmp
cmpsl
inc
test
scas
in
jbe
cmp
scas
adc
dec
xor
dec
insb
fst
popf
ficoms
lods
mov
inc
insl
jmp
push
test
jne
and
xchg
mov
and
mov
sbb
jecxz
pop
inc
sbb
sbb
in
mov
icebp
inc
xchg
push
repz
inc
add
sar
push
pop
out
movsb
push
repz
repnz
stos
out
add
inc
sub
pop
adc
mov
andb
addr16
jnp
js
cltd
dec
xor
dec
cwtl
sub
xchg
outsl
je
jo
mov
test
xor
mov
mov
ret
inc
mov
cmpsl
or
xchg
xor
mov
inc
xchg
adc
out
je
xchg
in
or
sub
shrl
inc
lret
or
cmp
inc
push
lcall
pop
test
dec
and
test
push
addl
jns
inc
mov
sub
cld
inc
or
and
mov
test
aaa
aam
outsl
pop
in
and
inc
cmp
xor
int
push
add
mov
cmp
and
dec
push
push
test
fadds
js
sub
aam
orl
adc
pop
test
rorl
in
loopne
arpl
out
pop
jp
jnp,pn
sahf
out
nop
inc
fiadds
cmp
cmpsb
addl
movb
lock
in
pop
mov
push
cmp
adc
call
js
repz
jmp
cmp
pushf
cld
in
xor
and
mov
aad
test
xlat
adc
mov
hlt
sub
pop
push
sub
ds
rcll
sub
movsl
and
mov
cmp
dec
jp
cs
decl
icebp
sbb
xor
dec
mov
sbb
xor
pop
xchg
xchg
push
je
das
mov
adc
xor
daa
pop
mov
xor
in
add
mov
ret
es
inc
call
shlb
push
sub
imul
and
mov
pop
ss
mov
icebp
cmc
cld
pop
ljmp
pop
nop
std
lahf
push
jnp
sub
ret
sbb
loop
sub
mov
or
push
mov
lock
lods
sbb
mov
test
cmc
xchg
lds
pop
adcl
mov
mov
pop
lea
pop
adc
sub
and
xor
and
mov
inc
sub
and
incl
add
loopne
push
xchg
sbb
push
xchg
mov
mov
push
cmp
bsr
fistpll
xor
mov
push
pop
push
les
mov
jb
mov
jecxz
test
jb
out
push
cmc
sbb
scas
and
jmp
inc
xchg
icebp
ret
inc
repnz
cltd
sub
lcall
cmp
lods
es
stos
ss
mov
test
imul
xor
xchg
cmp
inc
mov
dec
pop
cmp
in
ret
aas
mov
cmpsb
cmpsb
xor
les
mov
scas
in
mov
sbb
sti
add
and
pop
add
std
jmp
lcall
mov
test
cmp
cmp
or
pop
pop
mov
jnp
mov
roll
and
mov
push
cwtl
jae
das
push
xchg
mov
jno
jno
neg
add
mov
sbb
subl
adc
mov
push
cltd
push
mov
adc
test
pop
xchg
xor
and
lcall
out
aam
jp
mov
out
lods
pop
push
or
outsb
notl
pushf
pop
pop
ja
inc
or
and
es
ja
aaa
mov
int
push
sub
jb
js
add
int
dec
push
repz
jnp
add
repnz
mov
shll
inc
cmp
sbb
daa
lds
xchg
imul
int3
jae
cmpsl
mov
lcall
cld
loopne
int
mov
pop
pop
pushf
fs
sbb
std
daa
and
sbb
mov
cltd
mov
ds
adc
sub
sti
ljmp
push
cltd
insl
daa
test
or
cmp
arpl
ja
out
aas
out
jmp
pop
test
xchg
fwait
mov
xor
shll
jge
popf
decl
cs
nop
pop
jns
jb,pt
or
jge
cmp
sbbb
mov
inc
lock
ret
rcll
nop
dec
mov
jmp
out
inc
jbe
adc
repz
xor
fwait
adcb
inc
bound
xchg
stos
adc
bound
bound
sbb
sar
inc
cmp
mov
adc
in
jbe
testl
pop
cwtl
mov
aaa
jp
pop
pop
psadbw
mov
test
sbb
sub
dec
addl
sub
jmp
add
cmpsl
sub
lret
xchg
sbb
jae
dec
testl
pop
add
rcl
jae
mov
mov
cmp
test
add
repnz
or
cmp
push
xchg
mov
jle
lock
sbb
mov
gs
xchg
inc
inc
mov
sti
sub
orl
movsl
mov
add
xlat
mov
add
mov
jg
fdivrl
pop
mov
add
fs
add
jl
mov
push
dec
inc
in
mov
jnp
dec
fistpl
testl
xor
in
int
jecxz
mov
in
outsb
mov
pop
pusha
xchg
lds
mov
inc
and
push
pop
sbb
push
xchg
les
inc
and
sbb
jo
adc
jmp
sub
lret
cmp
and
jmp
inc
mov
data16
push
dec
mov
notb
das
sahf
dec
add
cmp
in
xor
mov
jge
mov
mov
xchg
add
in
icebp
daa
jmp
cmp
scas
das
lods
movsl
push
jle
xchg
mov
bound
pop
ret
push
std
dec
push
add
or
sub
adc
mov
ds
movsl
add
sub
sbb
sub
fnstsw
loope
in
or
push
sbbl
mov
xlat
repnz
xchg
cmp
hlt
add
testl
fsubl
mov
sbb
ret
fwait
push
jmp
mov
jnp
test
lret
js
lods
mov
mov
gs
in
sub
arpl
leave
xor
adc
stc
cmp
jb
int
scas
sbb
mov
leave
and
pop
rcrl
pop
xchg
in
scas
mov
jp
rolb
stc
fnsave
js
enter
rol
push
lds
lea
je
mov
mov
adc
je
or
inc
inc
repnz
xor
push
lods
insb
xchg
pop
xor
mov
push
jae
test
andl
jo
iret
dec
jbe
dec
mov
lods
jg
and
sbb
adc
mov
inc
popf
into
cmpb
xchg
imul
add
and
mov
out
mov
and
sar
or
pop
rol
scas
pop
mov
pop
mov
loope
jp
dec
push
dec
leave
sbb
outsb
fcoms
pop
test
xchg
rcll
pop
ret
in
movsb
pop
out
xlat
test
adcl
push
jl
jo
sub
pusha
push
mulb
std
icebp
lods
cmp
imull
out
and
aad
fmull
xchg
pop
jmp
lea
cmp
sarb
orb
in
int
jle
ret
jp
int3
add
xchg
mov
fdivrl
or
cltd
push
cmp
sti
push
xchg
fidivs
mov
outsb
imul
stos
imul
arpl
pushf
push
repz
inc
hlt
lcall
sarl
add
and
xor
les
jp
test
rcll
sbb
test
sbb
xor
stc
jl
push
jbe
loope
lods
lock
push
push
sbb
dec
adc
sbb
shl
cwtl
add
dec
sbb
xor
sub
or
mov
mov
std
int
xchg
negl
push
mov
inc
mov
sub
mov
xchg
loope
faddp
ja
sbb
xadd
dec
lds
ljmp
jne
subl
in
les
pop
mov
popf
and
out
scas
push
stos
sub
loopne
and
dec
inc
mov
cmp
push
xor
shlb
mov
insb
iret
inc
das
and
lods
pop
mov
mov
cld
movsb
inc
xor
dec
aaa
fnstcw
xchg
inc
and
xor
fwait
mov
mov
mov
adc
fildl
cld
nop
sub
cs
sub
das
lods
imul
scas
test
loopne
jae
mov
lods
scas
xchg
xchg
or
in
and
repnz
out
jecxz
test
push
lea
jle
andl
scas
xor
mov
sub
loope
fdivrs
xor
add
push
ret
lods
mov
add
dec
xchg
in
mov
lock
aaa
pavgw
testb
arpl
test
or
cmpsl
mov
sar
sarb
or
movsl
stc
div
and
cmp
loop
xchg
aas
stc
jge
es
sub
loop
ret
xchg
int3
sbb
jl
aad
pop
push
cmp
mov
mov
iret
sbb
sbb
adc
lds
pushf
xor
addr16
out
xrelease
pop
in
add
mov
mov
shrb
enter
push
test
push
push
add
cmpsl
daa
adc
add
push
int
sub
std
js
inc
out
xchg
jns
mov
push
push
push
push
in
gs
xor
jns
sbb
push
and
jb
pusha
jmp
cwtl
loop
adc
mov
popa
inc
ss
imul
jb
xor
lds
fs
mov
fs
popa
bound
xchg
fnstenv
xchg
fwait
rcll
sub
aas
negb
sbb
lahf
lret
push
inc
in
add
pop
jp
lock
lods
push
inc
lock
mov
test
xchg
sub
mov
stc
inc
addr16
es
cmp
jl
sub
cwtl
imul
mov
ja
cld
mov
rclb
jb
adcb
push
icebp
and
mov
gs
cmp
mov
add
ss
arpl
mov
mov
cmp
sarl
loop
fcoml
mov
lret
dec
push
push
mov
in
mov
mul
mov
addr16
xchg
call
test
push
mov
lahf
jnp
scas
pop
inc
adc
scas
ret
jns
jo
pop
xchg
daa
fldl
sbb
icebp
daa
mov
cld
imul
dec
scas
push
jae
stos
or
mov
xor
push
push
add
add
fsubrs
leave
lea
fs
pop
adc
jg
imul
push
adcb
and
sub
cmp
xor
mov
mov
gs
pop
sarb
sbb
or
negb
loope
xchg
inc
int3
test
mov
ficoms
popf
sub
out
cmc
jecxz
and
pop
xchg
pop
xor
jecxz
movsb
fldl
adc
inc
pushf
cld
add
out
mov
icebp
push
adc
movsb
test
imul
sti
cmp
btc
pop
sub
sub
pop
popa
fwait
push
sbb
add
fsts
cmp
and
sub
sbb
push
ret
div
lock
ret
mov
jecxz
insl
xor
xchg
adc
mov
sub
cmp
and
out
mov
dec
stos
test
lods
addr16
xchg
decl
cld
lahf
pop
cmp
in
outsl
sub
les
pop
inc
pop
daa
lods
jns
pop
xchg
out
out
push
cmp
inc
jmp
repz
add
and
and
cli
scas
aam
inc
test
movsb
cwtl
push
xor
nop
loop
fcmovne
xchg
into
cmpsb
test
insl
sub
jae
ret
test
sarl
jecxz
mov
dec
in
in
mov
jp
dec
mov
test
iret
test
aas
fwait
or
add
mov
sarb
jmp
xchg
dec
jo
xchg
mov
cmc
clc
xor
loop
mov
aaa
outsb
aam
ret
pop
orl
push
aas
mov
arpl
movsb
or
lahf
mov
insl
inc
or
aaa
or
jne
adc
stc
pusha
mov
fcmove
cmp
and
pop
fimuls
movsl
sbb
pop
cmp
testb
push
clc
rcrl
or
out
add
fisubrs
jnp
mov
push
pop
adc
mov
mov
xor
mov
mov
test
add
dec
shrb
push
mov
add
dec
mov
sub
or
dec
les
sti
loope
loope
pusha
in
aaa
std
push
mov
int
jmp
inc
int3
push
inc
hlt
ss
mov
jnp
xor
pop
push
pop
popf
fwait
lahf
inc
mov
imul
gs
jno
dec
into
sub
jl
fsubl
loop
add
movsb
leave
jae
add
sbb
icebp
pop
les
xchg
loopne
pushf
movsl
pop
dec
pop
jecxz
mov
divb
xor
iret
out
data16
std
xlat
clc
repnz
subl
insl
nop
dec
mov
and
adc
int3
pop
cmp
pop
jl
in
sbb
mov
mov
sbb
enter
inc
pop
mov
loop
movsl
out
mov
dec
add
cmp
out
push
ficoms
in
hlt
fdivrl
lods
rolb
push
lea
dec
int
xchg
popf
faddl
rcrl
jmp
in
rcl
inc
xor
lock
xorl
mov
pop
sbb
and
inc
pop
adc
fistpl
pop
test
ret
or
inc
sar
add
test
test
adc
insl
aas
rorl
mov
jo
push
enter
and
out
and
add
ret
mov
or
mov
adc
sbb
orb
mov
jle
mov
cmp
and
pusha
lds
lret
sub
fisubrs
xchg
sub
repz
dec
mov
repz
lock
insb
sub
pop
xacquire
mov
sub
push
out
mov
adc
push
pushf
mov
add
jecxz
aaa
cld
fs
mov
push
sbb
idivb
popf
pop
ret
insl
insb
lock
jnp
mov
lea
pop
jne
popf
subl
bound
adc
xorl
push
stc
sub
pop
fsts
mov
cmp
cltd
jp
sbb
ret
dec
mov
jp
jae
xchg
fmuls
xorb
cmp
or
xchg
sti
and
test
add
mov
in
inc
xchg
gs
gs
and
adc
lds
mov
lods
mov
or
inc
push
dec
push
repz
dec
mov
inc
sbb
xlat
vphadduwd
pop
lock
movsl
add
daa
inc
jl
mov
add
aaa
jnp
mul
or
add
mov
cs
jae
adc
ss
je
out
or
enter
push
test
fists
loope
orl
pop
mov
dec
xor
lcall
mov
es
pop
add
cmpsb
jge
mov
mov
daa
dec
ljmp
cmpb
sahf
mov
inc
sbb
bound
jecxz
add
xchg
adc
sub
cmp
push
sbb
jae
jg
shl
ja
or
fwait
nop
clc
adc
ret
xchg
jl
leave
loopne
cmc
pop
aad
arpl
lock
mov
sub
mov
cs
add
and
out
lret
adc
mov
push
sbb
loopne
sti
jecxz
inc
xchg
jl
push
inc
mov
mov
clc
or
mov
std
add
jb
loop
sbb
or
iret
fisttpll
fisttps
pop
ret
mov
cmpl
and
push
loop
ret
cmp
insl
enter
mov
dec
mov
and
mov
rorl
mov
insl
sbb
icebp
icebp
and
or
add
pop
jmp
sbb
pop
ret
int3
cmp
cmpb
aad
adcb
sub
mov
and
pop
mov
jb
xor
outsb
xlat
mov
cwtl
nop
je
or
ret
daa
pop
add
push
jnp
lahf
fidivrl
cmp
sub
ja
fnstcw
out
xchg
add
bound
or
mov
cmp
arpl
mulb
cmp
test
nop
mov
iret
out
xchg
dec
stc
pop
cmp
jb
inc
icebp
iret
outsb
das
ljmp
or
int3
and
rcrl
or
outsl
dec
test
xor
xchg
arpl
inc
stos
jne
movzbl
xor
scas
lods
stos
movsl
jle
and
adcb
ffreep
sub
mov
adc
sahf
jl
fwait
loopne
adc
outsb
push
or
dec
push
push
loopne
push
inc
ret
dec
jb
gs
push
mov
sbb
rcrb
stos
fisttps
add
push
test
unpcklps
xchg
mov
jp
lock
and
mov
jne
sbb
jge
xchg
and
or
pop
scas
imul
add
xor
mov
loop
add
xor
xor
cmp
pop
stos
jp
sub
pop
jecxz
mov
mov
ret
jns
loop
pushf
out
mov
cmp
adc
xchg
leave
fwait
inc
xchg
pop
and
lcall
push
movsb
mov
xchg
mov
mov
push
mov
cmpsl
xor
jb
mov
mov
push
stc
pop
aas
and
and
mov
icebp
sbb
mov
shlb
xchg
mov
lcall
push
lret
lods
loop
or
fnclex
loop
xchg
jnp
fisttps
jg
mov
pop
loope
mov
jno
std
or
ljmp
cwtl
jp
sahf
lret
push
mov
jle
jmp
std
add
les
leave
pop
inc
loope
pop
test
xor
shlb
and
mov
sar
and
mov
mov
cwtl
dec
stc
pusha
pop
jmp
decb
mov
cmp
add
mov
inc
jbe
andl
popf
xor
popa
int
xchg
xchg
push
inc
dec
pop
pop
push
dec
mov
gs
add
cs
sbb
adc
outsb
jno
sarl
je
ljmp
cmp
hlt
arpl
xchg
pushf
pop
xchg
loop
cmp
mov
call
stos
mov
push
jl
data16
xchg
mov
dec
pop
fiadds
movsl
fwait
mov
test
jns
jns
push
and
stos
mov
push
cmp
addr16
int3
or
pop
mov
test
jae
pop
loopne
inc
mov
js
fldl
dec
inc
adc
inc
mull
lods
fs
mov
fcompl
cs
mov
xchg
or
sub
fistpll
and
bound
jbe
push
pop
leave
cmp
add
lea
xchg
sub
pop
jae
push
outsl
inc
popa
mov
enter
jg
push
movsl
or
xor
shlb
adc
leave
stos
rcr
pushf
in
fdiv
sar
sub
jbe
addb
pop
pop
stc
mov
insl
repnz
rcrl
in
out
push
mov
in
pusha
mov
cmp
pop
jmp
lret
in
fcomi
int3
lret
and
or
xchg
dec
xor
adc
hlt
shll
sub
push
pop
cwtl
or
sub
adc
imul
xchg
sahf
mov
ret
adc
jae
loop
cmpsl
in
lods
mov
xchg
pop
xchg
xchg
xchg
inc
out
jns
jmp
cmp
xor
add
sbbl
fidivrl
sub
fnsave
lcall
cmp
cmc
jno
pop
cs
std
roll
cmp
or
movsl
nop
cmp
mov
iret
fiadds
cmpb
mov
sbb
cmpsl
add
add
add
or
data16
fdivs
xlat
xor
push
adc
stc
mov
adc
xor
push
stc
inc
inc
add
call
adc
inc
or
popa
sbb
add
cwtl
into
rcll
mov
lret
imul
ja
push
adc
rcll
aas
test
sbb
mov
pop
push
adc
cmp
pop
xor
cmp
mov
and
lret
pop
jno
jo
inc
push
cmp
pop
sub
push
mov
xor
xor
sub
jnp
rcll
fcmovu
push
inc
mov
add
imul
jne
nop
outsl
cmc
sbb
sbb
insb
xchg
dec
and
sahf
sbb
ja
nop
add
mov
adc
lea
jnp
pop
nop
aas
adc
xor
insb
dec
mulb
sub
adc
in
ljmp
mov
cmp
test
mov
mov
std
shll
xchg
jle
cmp
shl
xchg
push
dec
cmpsb
aas
jae
dec
rcl
dec
fsubl
cmpsb
mov
inc
lahf
push
xor
push
int
pop
sub
sbb
xor
mov
insb
and
xchg
dec
les
push
mov
ds
lcall
mulb
movsb
inc
mov
sub
hlt
mov
cmp
xor
addr16
mov
outsl
dec
sarl
xchg
repnz
ss
mov
in
ja
push
in
inc
push
cmp
jbe
test
pop
mov
hlt
sub
insb
cli
lret
scas
cld
push
cli
pop
loop
or
mov
test
insb
lcall
int3
mov
lret
out
stos
or
fimuls
dec
in
add
and
or
orb
cmpb
lods
repnz
sub
arpl
hlt
aaa
inc
cwtl
call
mov
nop
jl
jle
in
in
dec
outsl
jne
pop
inc
scas
add
cmp
xor
imul
adc
test
lahf
out
jns
push
push
pop
cmc
scas
dec
mov
clc
inc
pop
lea
rcrb
adc
or
and
imul
dec
call
ret
sarl
add
cmpsb
jae
xchg
orb
xor
loop
aas
pop
pop
add
pop
fwait
dec
jno
fldt
notl
jno
xor
inc
cmp
data16
clc
andb
loop
jp
inc
adc
inc
xchg
xchg
jl
outsl
nop
jp
mov
js
ret
stos
js
in
xchg
nop
cli
jp
loop
imul
in
sub
push
or
or
repnz
pop
and
arpl
xor
and
push
jg
js
imul
iret
sahf
ret
mov
push
ja
mov
mov
lahf
inc
ret
inc
and
mov
ljmp
and
cmp
cmp
mov
mov
xor
mov
mov
jae
add
in
pop
ret
push
sbb
icebp
or
xchg
in
fdivs
js
fldenv
gs
sahf
mov
lea
enter
xlat
mov
in
push
into
stc
ljmp
cltd
pop
xlat
stos
lcall
int
jno
aaa
fwait
mov
add
decl
mov
nop
mov
push
fwait
js
in
clc
aas
xchg
push
leave
and
lret
sbbb
repnz
das
adc
fwait
or
inc
test
xor
je
repnz
mov
mov
or
imul
scas
sub
sub
pop
movsl
cld
xchg
pushl
push
lods
cmp
ss
fistpl
sbb
cmovp
hlt
mov
xchg
rcll
sub
pushf
pop
push
add
imul
inc
fisubrs
pop
hlt
cmp
lret
or
mov
gs
and
js
scas
cmp
fisttps
je
xlat
lea
dec
scas
inc
addr16
das
in
cvttps2pi
mov
push
mov
mov
popa
int3
popf
fstps
jns
imul
add
push
subb
jmp
mov
fsubs
ret
xchg
mov
dec
das
jecxz
lods
add
jo
mov
mov
les
push
jmp
lds
scas
adcl
outsb
xchg
push
jmp
push
mov
test
cmp
or
cmpsl
bound
lea
mov
es
cmp
int
mov
xchg
pop
or
jne
hlt
inc
icebp
mov
pop
pop
jns
push
fwait
xchg
stc
dec
ror
int3
inc
mov
imul
fistpl
int3
mov
pop
and
mov
jecxz
cld
mov
iret
pop
dec
add
xor
mov
pop
clc
arpl
add
sti
scas
dec
mov
scas
es
sub
and
repz
loop
mov
in
cmp
ljmp
orl
push
jle
add
and
lcall
sbb
adc
xlat
mov
and
pushl
cld
mov
add
dec
mov
xor
inc
je
xor
insb
sbb
push
imul
or
aaa
test
cwtl
loope
aaa
xlat
dec
mov
push
sbb
xchg
hlt
wbinvd
stc
dec
out
cmp
adc
pop
cli
insb
and
jae
jne
xor
outsb
mov
fbld
ljmp
push
orl
aas
bound
and
xchg
xlat
ror
sbb
outsl
sbbb
pop
addr16
mov
mov
insb
or
push
ror
aaa
inc
mov
fnstcw
or
rcl
pop
out
adc
inc
xor
ja
jg
adc
fst
lods
mov
lock
jo
mov
cmp
xor
adc
popf
bound
sahf
adc
fsubs
push
rorl
push
push
aaa
jo
loop
in
dec
inc
in
lods
in
and
repz
loopne
mov
sub
sbb
mov
xchg
push
mov
xor
or
inc
jo
mov
push
cmpsl
call
mov
inc
fidivrl
sub
shufps
notb
sub
dec
jno
dec
dec
icebp
sbb
push
jle
aas
push
mov
out
pop
xchg
ljmp
mov
jae
jae
jmp
push
or
and
and
not
adc
pop
sub
cmpsl
mov
sbb
xor
ss
daa
mov
pop
bound
sub
or
test
push
imul
cltd
pop
comiss
fistpl
inc
pop
jb
xchg
or
pop
mov
dec
cmpsl
pop
das
pop
rcrb
and
movl
push
and
fistps
cs
lcall
outsb
addl
aad
sbb
rcrl
int
dec
adc
xchg
outsl
and
repz
in
cmp
mull
dec
and
in
sbb
clc
out
insb
jo
popf
xchg
loope
mov
mov
add
mov
add
je
jbe
xchg
leave
adc
fisubrl
mov
push
cmc
and
mov
das
or
das
push
out
sub
mov
pop
lahf
jl
mov
cmpsl
stos
sar
popf
add
loopne
bound
push
fisttpl
stc
std
aaa
inc
push
fnstenv
fildl
icebp
div
push
sub
mov
mov
rcrb
addr16
or
lret
dec
cmp
and
inc
iret
outsl
int3
sub
sub
jg
pop
pop
push
lcall
and
dec
ljmp
popf
mov
sub
or
mov
daa
cmpl
inc
test
mov
sbb
jp
rorb
in
repz
inc
insb
fidivl
ret
sbb
imul
das
daa
cmp
xor
add
subb
outsb
push
lods
pop
mov
sarl
mov
iret
push
shl
sbb
lods
in
arpl
sub
inc
jnp
aam
stos
popa
repnz
inc
xchg
sahf
or
fwait
dec
cwtl
mov
adc
iret
es
mov
or
fs
jecxz
test
sbb
test
xor
roll
adc
pop
dec
sbb
cmp
mov
dec
rcrb
leave
loopne
aas
outsl
das
out
jmp
pop
stos
sti
mov
push
cltd
test
mov
or
in
jl
hlt
inc
in
pop
mov
ljmp
sbb
int
jno
and
jl
inc
mov
xchg
dec
icebp
pusha
add
daa
add
popf
inc
pop
leave
bound
out
dec
sbb
cmp
or
pop
test
lret
inc
jp
pop
mov
call
xor
hlt
ljmp
xor
dec
add
test
push
push
test
sbb
xor
leave
pushf
cmc
movsl
iret
into
push
popa
ja
xchg
loope
push
push
jno
insb
pop
push
pushf
sbb
mov
adc
movsl
and
inc
pop
ret
cmp
sub
sub
and
cltd
fdivl
cmp
cmp
push
jbe
mov
pop
sbb
adc
push
pop
lret
sub
xchg
dec
fstl
jle
mov
mov
mov
test
or
test
ja,pt
mov
xor
add
dec
add
push
jp
and
std
cmp
shll
or
jge
or
insb
xor
daa
and
cmpsl
fsubr
lahf
fsubrp
jo
mov
out
inc
insb
fstpt
cmp
movsl
jecxz
outsb
xchg
mov
test
out
cmp
pushf
nop
sbb
fisttps
pop
popa
mov
int
jae
outsb
lods
outsl
dec
sub
push
outsl
cmp
cmp
xchg
lds
adc
push
mov
inc
je
jnp
out
mov
add
aaa
cmp
mov
push
cmp
fistps
and
mov
inc
mov
jno
xlat
popf
scas
cwtl
jp
popf
pop
repz
pop
mov
cmp
jmp
add
inc
cmp
nop
cmp
inc
iret
push
rcrb
add
sahf
repnz
scas
fwait
mov
xorl
loopne
fwait
mov
xlat
jno
testb
cmc
leave
call
aaa
pusha
enter
and
leave
addr16
mov
fisttpll
add
test
mov
adc
popa
rcrl
mov
and
push
or
insl
push
fcoms
jp
mov
add
imul
negl
fidivl
ret
dec
mov
les
cmc
mov
add
jae
adc
cmpsl
fcoml
push
pop
fimull
icebp
lods
xchg
bound
test
cmpsl
cmc
cmp
jb
mov
jmp
mov
inc
jbe
sbb
dec
stc
cmc
jbe
mov
nop
mov
jmp
arpl
pop
iret
enter
leave
ret
cmp
out
add
orl
pushf
lret
sbb
dec
push
or
std
lret
jbe
sub
lds
popf
jge
dec
xchg
jno
dec
test
and
push
add
sub
lret
in
adc
rorl
push
push
add
adc
insl
popa
xchg
in
jge
frstor
mov
rol
dec
adc
lcall
jno
dec
mov
inc
xor
int3
ja
xchg
mov
or
scas
mov
dec
sbb
adc
int3
pop
mov
cmc
mov
or
jns
add
in
mov
out
adc
sub
nop
cmp
mov
iret
push
insl
cmp
cmp
mov
dec
insl
pusha
xor
or
sbb
call
jl
xchg
pop
or
adcb
inc
or
movsb
cmp
dec
test
mov
aad
leave
ljmp
sbb
pop
clc
mov
shlb
jge
xchg
jle
xor
lods
lods
ret
cmp
stos
fwait
sbb
into
fdivs
outsl
fwait
pop
mov
and
rolb
xchg
pop
or
sbb
aas
fdiv
add
adc
outsb
imul
scas
aad
and
xor
dec
aad
add
cwtl
mov
out
xchg
clc
lfs
rclb
add
mov
out
fidivrs
ret
stos
std
out
imul
outsl
add
cmpsl
jmp
imul
mov
repz
mov
scas
jb
ret
iret
cld
xor
and
jecxz
rorb
adc
xchg
inc
enter
stos
mov
xor
aaa
aas
sbb
mov
loope
xchg
jge
ss
jbe
adc
mov
pop
lods
dec
and
cmpsb
xorb
xor
mov
jg
aas
popa
icebp
shl
fadds
jmp
mov
xchg
arpl
repnz
xchg
jmp
cmc
jnp
and
shll
rcr
icebp
mov
test
loope
add
mov
adcl
das
scas
sub
lahf
jmp
and
xlat
adc
sarb
or
sub
inc
dec
push
cld
mov
fldt
aaa
dec
hlt
inc
push
scas
sti
lahf
inc
push
or
push
push
nop
rcrl
aaa
xchg
xchg
pop
xchg
adcl
jae
jnp
dec
mov
push
lea
arpl
loop
cmpl
shrl
int
in
inc
or
xchg
stos
inc
add
ffree
dec
or
xchg
mov
adcb
cmp
daa
repnz
jno
dec
jae
dec
in
adc
lods
and
or
push
cmove
aad
adc
mov
mov
faddl
int3
jne
test
pop
inc
push
jmp
fisubs
pop
stos
lods
mov
into
ljmp
ds
and
call
leave
divb
or
icebp
push
inc
insb
imull
out
out
out
addr16
sarl
outsl
repnz
ficomps
bswap
imul
cli
push
mov
push
mov
shlb
mov
aad
adc
fcomi
loop
int3
push
adc
jbe
jge
into
xor
sahf
add
mull
xor
jg
add
mov
sbb
lahf
xor
jmp
lds
fs
mov
pop
mov
stos
add
test
inc
pusha
xor
push
mov
pop
sbb
out
pop
int3
pop
hlt
dec
sbb
or
mov
call
add
dec
mov
push
push
cld
xchg
sti
movsl
jmp
into
adc
and
mov
add
popf
lock
loop
cmp
imul
in
cmpsl
outsl
or
scas
xorb
xor
outsb
jp
rol
arpl
shrl
mov
leave
cli
je
mov
loope
fdivrl
icebp
loope
xlat
cmp
add
xor
jl
fldenv
add
outsl
fcmovnbe
fsubr
push
push
lods
ficoms
cmpsl
pop
sub
in
and
leave
dec
lods
out
sub
xor
adc
sbb
ss
outsb
stc
test
mov
add
jb
mov
sbb
lock
add
mov
popf
rcrb
inc
push
clc
loope
js
inc
jecxz
inc
and
and
xchg
mov
adcb
jbe
dec
fldt
out
xchg
and
push
push
hlt
inc
out
sbb
jne
dec
scas
lret
push
xchg
inc
mov
loope
sub
push
out
inc
sub
adc
cmp
and
jns,pn
pop
sbb
das
ror
mov
mov
jmp
mov
jo
shll
addb
xor
xor
push
mov
mov
stc
fstp
in
rorl
jle
push
mov
ljmp
pop
setge
scas
jns
stos
data16
in
adc
test
dec
push
jle
mov
jnp
loopne
jno
xchg
add
add
adc
sub
dec
shr
cs
cld
jno
mov
lods
mov
sahf
test
xor
adc
adc
clc
and
testb
sbb
cmp
test
add
aaa
mov
xchg
sbb
arpl
test
lds
std
lcall
pop
push
std
sbb
pop
add
and
or
inc
jo
pop
fisttpll
mov
or
adc
jo
push
jne
repnz
or
imul
lods
mov
pop
xor
es
mov
iret
ret
hlt
jl
fwait
popa
mov
sbb
pushf
cmpsl
lahf
cmp
shll
shll
les
inc
push
je
sub
lahf
mov
xchg
push
xor
push
int
cmp
test
jmp
je
add
mov
and
mov
add
mov
mov
movsb
inc
pushf
cmp
insl
shll
in
xor
repz
out
jo
dec
cs
jae
repz
imul
pop
dec
js
stos
fstpt
ret
sbb
aam
js
cs
dec
dec
xor
fs
testl
pusha
fwait
cmpb
adc
in
icebp
mov
xor
andb
mov
jle
jp
mov
jecxz
in
jecxz
jecxz
jl
arpl
lret
rclb
repz
stc
gs
andl
mov
in
fstpt
cmpsl
aaa
cmp
lock
sarl
dec
jnp
dec
pop
gs
aad
popa
add
inc
movsb
rcrb
lds
jbe
push
mov
add
push
insb
shl
xorl
mov
and
lahf
imul
xchg
fs
int3
je
int
mov
mov
adc
in
xchg
xor
outsl
sub
outsl
mov
nop
loope
fists
cmpsb
adc
push
out
les
insl
jns
icebp
fldcw
adc
cmc
mov
mov
cwtl
sub
xlat
fwait
push
in
sub
push
and
inc
inc
mov
inc
out
cmp
loopne
pop
sub
scas
add
xchg
std
jmp
or
outsl
or
pop
scas
push
fs
cltd
and
xor
pop
mov
cmp
jae
fdiv
xchg
addb
lods
idivb
xor
aam
mov
sub
clc
idivb
test
pop
mov
rolb
insl
cmpb
es
dec
push
nop
sbb
jb
cmp
sub
pop
je
and
rclb
adc
push
sahf
xor
out
mov
add
cltd
sbbb
cltd
lahf
add
fnstcw
dec
pusha
lods
fwait
mov
cmp
jae
hlt
jns
xchg
imul
ja
xchg
lret
jge
div
mov
mov
int
mov
mov
cli
lret
and
sahf
sbb
adc
mov
clc
push
xchg
add
xchg
adc
sub
fadd
mov
push
sub
cmc
or
test
dec
in
sti
jg
fdivl
jae
and
into
push
out
call
loopne
jae
mov
lods
movsb
js
dec
enter
lods
popa
sbb
and
cmp
sbb
fbld
cld
jl
js
idivb
adc
fwait
sbb
lret
std
sub
loope
js
int3
repnz
arpl
xor
xchg
idivl
xlat
out
mov
hlt
adc
imul
sbb
push
mov
push
divb
add
pop
out
incl
mov
imul
pop
orl
sarl
out
pop
mov
jg
das
jb
dec
push
das
orb
mov
filds
mov
dec
lock
mov
roll
movsl
in
sub
push
or
mov
lds
push
ljmp
inc
sub
push
outsl
jae
and
sti
cmp
push
sahf
sahf
push
aam
or
js
mov
mov
loop
movb
fsts
jae
dec
mov
loopne
xchg
dec
adc
pusha
add
or
push
mov
adc
sub
sarl
mov
insl
ret
lcall
ja
push
andl
fucomp
test
addr16
cs
cmpsl
push
mov
sbb
popf
sbb
popf
cmc
add
jb
loope
inc
mov
andb
inc
inc
mov
mull
sub
inc
pop
adc
dec
adc
push
outsb
loope
adc
pop
mov
in
cltd
fidivrl
hlt
adc
xor
out
mov
aas
das
add
outsb
xor
into
inc
icebp
push
outsb
jl
xchg
jae
mov
nop
lret
xchg
adc
aam
jo
repnz
push
mov
out
cmp
mov
mov
inc
movsb
adc
fs
out
inc
sub
xchg
daa
dec
stc
lret
mov
repnz
imul
pop
pushf
inc
enter
cltd
loop
mov
mov
sarb
dec
push
inc
sahf
imul
dec
les
mov
jge
loope
je
xchg
into
push
das
clc
imul
and
mov
scas
call
fldenv
int
je
lret
mov
xor
sbb
dec
rorb
mov
sbb
push
mov
sbb
arpl
pop
aas
sbb
mov
das
lcall
mov
push
into
call
push
jns
and
cli
push
xchg
ret
push
cmc
or
adc
mov
jg
in
jmp
mov
inc
sub
dec
stos
pop
xor
movsl
adc
aad
pop
sbb
mov
sahf
jmp
ja
push
cmpsb
bound
aad
xchg
cmpsl
mov
jo
inc
pop
sbbb
leave
xchg
add
int
mov
pushf
jno
stc
ljmp
jecxz
inc
stos
jo
mov
dec
sub
lea
push
mov
jge
adc
inc
inc
xchg
lea
cmp
movzbl
push
jg
xchg
leave
sub
cmp
daa
xchg
push
xorb
adc
pop
data16
aad
daa
mov
roll
mov
xor
adc
and
ljmp
dec
js
cli
jnp
xor
inc
test
loope
xchg
idivl
cmp
mov
and
or
aam
dec
mov
jmp
sbb
or
es
scas
mov
insb
nop
cld
add
pop
add
inc
sbb
imul
jmp
dec
or
ficomps
jno
cmp
loopne
or
adc
inc
mov
pop
mov
fwait
xchg
add
mov
inc
in
adc
sti
outsl
mov
cmpsb
xor
mov
sahf
in
sbb
les
xor
cld
fsubr
jns
outsl
fstpt
fwait
shlb
test
jmp
pop
mov
mov
mov
sub
mov
xlat
jnp
andl
inc
mov
rcrl
jns
cmc
fmuls
out
aad
mov
hlt
mov
pop
pop
je
sbb
adcl
dec
decb
xor
sarb
push
cmp
mov
cmp
cmc
imul
enter
mov
mov
adc
mov
push
aad
stos
pop
sbb
push
jno
cmp
test
enter
pop
mov
xor
outsb
fsubs
lods
mov
lock
pusha
adc
push
push
ss
cmp
push
jge
repnz
mov
jb
jp
xchg
push
pop
add
or
cmp
gs
xchg
pop
lcall
sbb
leave
aaa
inc
sub
ja
push
mov
adc
cli
sbb
loopne
loop
xchg
call
mov
cmp
push
pop
cwtl
inc
lret
in
insl
movsl
ss
adc
mov
cmp
fistpl
stos
imul
ja
xchg
scas
imul
mov
insl
push
mov
test
mov
pop
cwtl
mov
pop
xchg
hlt
jb
sarl
leave
sahf
pop
cmp
jp
popa
jle
mov
jb
enter
in
jae
and
out
sub
mov
pusha
repz
dec
int
outsl
fisubrl
xchg
fisttps
or
pop
mov
sub
int3
mov
and
sbb
adc
into
loope
jb
lods
and
rcrl
in
or
adc
pop
mov
iret
sbb
outsl
aad
bound
xor
sbb
pop
push
ja
xchg
cmp
sub
jbe
nop
or
addr16
enter
test
add
jle
cs
cmc
mov
hlt
fcmovnu
fdivrs
jmp
rclb
std
sub
jp
xlat
or
sub
fstpt
or
dec
inc
das
xchg
jg
pop
sub
or
jg
inc
iret
into
out
sub
popf
cli
mov
icebp
pusha
lahf
push
filds
lds
mov
push
cmp
insb
arpl
repnz
nop
cmp
fisttpll
cltd
xor
inc
mov
cmc
adc
pusha
and
add
iret
js
dec
or
int3
mov
outsb
xchg
mov
or
dec
add
and
loope
inc
inc
pop
out
add
jle
add
sbb
inc
nop
mov
incb
lods
sbbb
pusha
adc
test
inc
arpl
cld
xor
pop
fidivrl
imul
mov
sub
int3
inc
fdivs
jno
mov
jno
nop
hlt
ret
dec
adc
xor
mov
loop
int
in
aas
mov
fcmovnu
stos
bnd
push
inc
mov
jecxz
test
call
pusha
mov
pop
hlt
pop
je
cmp
xchg
enter
mov
lret
cs
xlat
jle
sarl
adcl
fwait
pop
xchg
out
xchg
push
and
adc
mov
stos
push
xor
mov
int3
or
sti
mov
sbb
insl
stos
adc
cmpb
xor
inc
in
push
std
mov
xchg
rcrl
dec
and
shll
pop
push
pushf
mov
sahf
push
jo
dec
pop
inc
inc
popf
mov
int3
test
inc
subb
mov
repnz
pusha
bound
dec
adc
sbb
sahf
inc
cld
test
rcrl
imul
push
mov
xor
daa
mov
insb
enter
jbe
sahf
jbe
icebp
or
adc
sub
dec
daa
mov
sbb
push
iret
adcl
insl
fsts
pop
mov
mov
push
jmp
cmp
inc
mov
jne
fisttps
push
jmp
dec
mov
ljmp
mov
jmp
cmpsl
inc
add
push
movsl
jo
les
xchg
pop
je
shll
lea
push
aad
cmc
or
and
in
aaa
and
jecxz
imul
fiadds
shrl
xlat
pop
rcll
cltd
aaa
iret
ret
or
fdivrs
inc
fwait
mov
fbstp
outsb
push
aam
push
jae
and
testb
pop
mov
iret
ja,pn
je
stos
insl
mov
lcall
xchg
mov
call
repnz
add
sub
fdivs
sbb
scas
jbe
je
loop
addr16
adc
xchg
insb
stc
imul
sbb
or
xchg
inc
adc
inc
jp
aaa
icebp
xchg
sbb
cmc
ja
mov
ret
lods
add
push
or
sbb
push
adc
jl
cmp
xchg
loope
add
sub
jp
out
adc
in
pop
add
daa
sub
jno
jl
mov
icebp
lahf
aaa
mov
and
sahf
mov
cmpb
in
jne
call
and
pushf
out
gs
test
sbb
std
sub
aad
in
mov
mul
push
out
iret
jmp
cmp
test
pop
js
jae
pop
out
jle
ja
inc
jbe
sub
mov
xor
xchg
lret
aas
jle
add
fcmovbe
inc
ss
sub
cmp
ljmp
and
aad
jmp
adcb
mov
fildl
dec
loopne
mov
icebp
cli
insw
mov
add
addr16
mov
push
sbb
rcrb
jbe
cmpsb
mov
xchg
cmp
inc
add
mov
jle
inc
mov
mov
call
cmp
jge
test
in
xchg
adc
xchg
stc
movsb
pushf
and
ret
mov
aaa
insl
push
jg
scas
mov
cmp
and
js
das
xor
ljmp
push
xor
mov
repz
xor
xor
mov
cmp
push
shll
sarl
loope
push
add
mov
jge
lods
xor
les
and
or
xor
jno
and
jle
pop
dec
pop
outsb
xor
jne
xor
hlt
outsb
les
test
js
jp
add
gs
cmpsb
inc
inc
xor
out
repz
call
in
mov
dec
popa
sbb
sbb
cmp
push
inc
push
dec
mov
push
cltd
sahf
test
add
pop
fcompl
lcall
repz
push
std
fmull
movsb
scas
dec
jg
loopne
or
stc
adc
push
xor
imul
dec
dec
stc
out
popf
addr16
int
add
mov
push
movsl
insb
in
sub
mov
lahf
xor
in
add
movsb
jle
in
int3
mov
lret
mov
fsubrl
enter
sub
cmp
in
push
push
roll
jo
xchg
clc
jae
in
aam
and
movsl
pop
fsub
int
das
scas
insb
push
pop
xor
repz
push
addl
imul
rorl
and
and
sbb
outsb
ds
and
scas
insl
hlt
in
jb
inc
das
xchg
xor
pop
fidivl
push
push
jg
mov
sbb
mov
sub
ds
popa
imull
lahf
mov
mov
inc
push
hlt
imulb
jb
xor
imul
out
fst
jmp
loop
jbe
jnp,pn
aam
mov
fistpl
sub
xchg
insb
and
sbb
clc
pop
idivb
sub
sbb
aad
dec
sbb
ljmp
popa
xchg
fwait
mov
adc
mov
scas
aaa
cmpsl
daa
outsl
cmp
or
add
sbb
popa
lock
inc
leave
movsl
dec
pop
cs
jle
jnp
mov
mov
sub
loopne
adc
stos
mov
xorb
in
mov
jmp
ret
dec
popf
push
xlat
dec
push
xchg
push
int3
mov
pusha
aaa
cmp
adc
pop
cmp
mov
push
lret
sbb
call
fistpl
inc
xchg
pusha
mov
inc
shl
or
fimuls
shlb
lock
sbb
sbb
sub
rolb
cld
cmpsl
cmp
rcrb
test
rcrb
in
arpl
mov
and
ljmp
aam
push
xchg
mov
xchg
ss
jg
sti
loop
and
and
enter
xchg
lods
js
aam
push
cltd
pop
fs
fsubrs
mov
cmp
cmp
int
sbb
or
cmp
aad
dec
cmc
out
mov
movsb
cmp
add
jno
nop
xchg
xadd
std
cmpsb
movsl
subb
iret
cmp
fmuls
pop
cs
push
xchg
push
add
xchg
push
mov
xor
in
push
mov
lods
dec
push
mov
in
cmc
cwtl
mov
stos
jae
dec
adcb
push
jg
lret
fsubrl
sbb
push
cmovo
sti
or
lahf
xor
add
push
jle
mov
fmull
rclb
shl
xor
mov
das
in
shll
adc
adc
xchg
dec
pushf
fists
xor
pop
inc
les
int
adc
push
xchg
push
sub
cmpsl
xchg
arpl
loope
adc
pusha
pop
jl
out
push
stos
je
fdiv
js
xor
mov
add
bound
push
rorl
mov
insb
loopne
or
push
xchg
loope
inc
mov
jp
jnp
stc
insb
icebp
pop
lcall
mov
sbb
push
cmpsl
xor
out
shll
xlat
push
dec
outsb
cld
lcall
or
fildll
push
and
inc
ffree
out
cmp
jno
add
sbb
leave
lahf
daa
lods
or
mov
popa
mov
inc
cwtl
stos
sub
ljmp
bound
push
push
cwtl
adcl
add
sub
lcall
cmpsb
cltd
jno
outsl
pop
stos
mov
in
adc
jnp
jnp
test
lea
bound
notl
sub
adc
lods
in
mov
or
mov
xchg
ds
nop
jb
add
mov
out
fsub
cmpsl
repz
jo
test
mov
lcall
push
test
push
loop
cmp
xorb
ja
sub
jmp
sub
aas
jge
mov
pop
lret
xchg
mov
jmp
xchg
sub
das
mov
adc
cmp
mov
mov
mov
insb
xor
cmp
push
cmpsb
test
pop
cld
xchg
mov
add
addr16
mov
aas
sti
decb
shrb
enter
push
mov
pop
cmp
sub
pop
add
rorl
in
cmp
imul
lcall
test
popa
and
xor
xorb
mulb
inc
icebp
push
xlat
sub
inc
cmpsb
test
mov
dec
mov
popa
mov
int
loopne
push
sbb
movsl
shlb
dec
jecxz
inc
int3
sahf
pop
adc
jbe
test
xchg
jne
xchg
popa
mov
inc
adc
shrl
mov
pop
inc
pushf
lahf
mov
sub
ja
inc
je
frstor
imul
mov
sbb
sbb
pop
popa
pop
mov
mov
inc
movsl
imul
jb
jmp
sbbl
mov
lea
jb
pop
inc
add
in
popf
sbb
repz
popf
arpl
mov
xor
sbbb
popf
sahf
xchg
adc
pop
js
push
xor
jnp
pop
enter
jbe
inc
pop
lods
ret
push
adc
jecxz
out
inc
xchg
push
mov
inc
jae
mov
popl
in
or
sub
das
loope
fisubl
fisubl
cmp
cwtl
add
or
call
das
sbb
pop
ljmp
cmp
jl
lods
scas
adc
mul
mov
xchg
xor
cmp
lcall
data16
xchg
mov
jmp
pop
jne
test
add
dec
sub
push
jge
or
adc
lahf
cmp
sbb
cmc
push
dec
and
into
xor
mov
jge
dec
stc
hlt
mov
ret
xchg
inc
in
test
push
call
hlt
cmp
fs
int3
dec
cmpsb
adc
and
sarb
inc
xchg
sbbl
dec
lock
stc
and
cli
fdivr
cmpsb
mov
jae
mov
popa
mov
pop
fstp
rolb
js
movsl
mov
sbb
fldt
sar
xchg
std
sbb
pop
and
aam
pop
dec
push
ror
cmp
push
and
pop
stos
sub
out
jb
out
es
gs
cmc
push
ret
bound
es
pop
out
mov
cld
dec
sub
xchg
push
or
dec
sub
xor
popf
push
pop
mov
loopne
mov
jmp
es
stc
sbb
mov
mov
mov
sbb
xor
cld
sbb
test
mov
and
push
inc
push
stos
mov
mov
arpl
sbb
lcall
push
xchg
mov
decl
cmp
pop
mov
xchg
enter
clc
repnz
jno
sbb
stc
and
test
imul
movsl
jg
insb
sbb
mov
adc
mov
mov
push
icebp
inc
cmp
in
or
arpl
push
pop
aas
int3
mov
inc
cmp
daa
dec
sub
add
lods
jne
adc
xchg
loopne
lcall
jae,pt
mov
in
fimuls
test
add
ror
popf
and
jne
mov
out
lret
ret
clc
mov
push
mov
loope
pop
xchg
and
mov
leave
jecxz
cs
insb
mov
mov
xchg
pop
jmp
xchg
out
addr16
ret
lods
fiaddl
sub
or
fidivl
fcomp
or
push
xchg
cmpsl
push
scas
xor
icebp
inc
push
mov
mov
adc
test
gs
sti
or
insb
mov
jnp
push
mov
add
loope
or
jg
push
xor
jmp
inc
das
stos
xor
adc
inc
in
xor
push
cmpsb
xchg
mov
ljmp
and
fisubs
mov
test
scas
stc
and
inc
imul
cmpsl
mov
shll
and
mov
mov
sarl
sbb
push
dec
ljmp
inc
mov
xor
cwtl
lock
rolb
push
mov
sbb
mov
adc
test
fwait
test
repnz
sbb
outsb
jne
shl
shlb
icebp
ljmp
shll
push
cmc
and
xchg
fldcw
repz
and
xchg
mov
inc
inc
push
mov
imul
loope
and
sbb
mov
cmpl
mov
pushf
and
sub
ss
jecxz
ja
sti
mov
inc
ds
dec
and
shlb
test
cmp
loope
mov
cmp
jmp
push
dec
or
push
and
fstpl
mov
jle
add
fwait
mov
pop
iret
fldt
loopne
sub
inc
xchg
ret
jge
iret
lds
sbb
cmpsl
daa
cmp
lret
jbe
je
ror
lea
mov
mov
cld
ret
popa
mov
shlb
xor
jne
cs
mov
popf
add
jb
test
xchg
data16
mov
enter
addr16
fstp
lret
out
mov
rolb
push
aam
jmp
andl
sbb
daa
xabort
push
pop
adc
xor
ret
mov
sub
jecxz
or
js
jge
popf
enter
insl
repnz
sub
sahf
pop
into
inc
inc
adc
cld
dec
aaa
sub
jmp
mov
pushf
adcb
std
imul
arpl
sbb
or
mov
sub
jg
xor
insb
mov
inc
add
lret
mov
jae
mov
fdiv
mov
cmc
cmp
xchg
adc
pop
mov
cmc
lret
xchg
jnp
cmp
lret
mov
les
jne
stos
jb
xchg
aam
pop
adc
aas
push
pusha
dec
mov
jecxz
adc
out
mov
add
fwait
push
in
mov
repnz
faddp
sub
cmp
sub
cmpsb
add
lea
mov
dec
icebp
jb
mov
xchg
clc
pushf
outsb
sub
inc
jns
sbb
mov
or
nop
add
pop
sub
out
xchg
movsb
popa
mov
cld
roll
lret
xlat
jbe
and
icebp
out
test
call
cmp
aaa
std
inc
arpl
sbb
ljmp
add
jns
mov
fisubl
in
add
js
mov
lahf
lret
mov
mov
push
loope
inc
inc
and
sub
mov
or
sub
js
add
es
mov
rcll
dec
in
push
stos
arpl
imul
pop
dec
loopne
jmp
pusha
loop
imul
mov
dec
lcall
cld
adc
out
jp
ficoml
mov
lret
lcall
or
aad
xchg
or
xor
test
dec
enter
jns
cmp
test
dec
mov
dec
sbb
jne
js
inc
lret
dec
jne
arpl
or
ljmp
xor
mov
insl
add
movsl
ss
lea
mov
icebp
aam
repnz
cmp
je
inc
adc
mov
clc
iret
adc
xchg
popa
dec
push
outsb
jp
inc
and
lock
les
sbb
lret
insb
pop
lret
out
shlb
pop
push
ret
and
sub
mov
sub
testb
stc
and
cmp
push
data16
mov
adc
cmp
int
ror
xchg
shlb
cmpsl
int3
push
adc
cmp
sub
enter
inc
icebp
sbb
test
xchg
lahf
scas
or
aam
inc
icebp
or
sbb
sub
mov
fwait
jo
mov
cmc
xchg
loopne,pn
int
jns
lods
lahf
inc
in
lock
dec
mov
into
insl
mov
in
neg
lcall
aaa
push
xchg
mov
aad
xlat
fucom
rcr
mov
mov
xchg
push
mov
sub
shl
cs
adc
aaa
sub
clc
dec
mov
ja
cmp
mov
iret
mov
jae
das
out
pusha
push
mov
push
sbb
cmpsl
imul
pop
int3
bound
adc
js
in
pop
push
test
enter
imul
or
in
fwait
push
cmp
dec
add
add
inc
pop
shlb
cld
adc
fistl
mov
push
fwait
inc
dec
mov
mov
and
jl
fldcw
lahf
aas
in
mov
mov
icebp
shll
add
aaa
mov
add
repnz
xor
rcl
cmp
pop
rolb
icebp
inc
push
and
mov
ljmp
insl
enter
ja
or
inc
sbb
loopne
dec
inc
pop
jle
inc
daa
or
imul
xchg
out
xchg
cmp
outsl
hlt
scas
mov
adc
je
jnp
loope
pop
mov
outsb
xchg
mov
or
mov
pop
in
test
rorl
shll
add
pusha
add
push
mov
ficomps
xor
std
inc
add
push
call
inc
lods
outsb
lods
sbb
leave
fadds
andl
adc
add
aad
push
mov
xchg
push
xchg
dec
pop
add
mov
int
imul
lret
adcb
or
fwait
and
jp
xor
lret
push
insl
cmp
pop
push
insl
add
jecxz
setbe
cwtl
and
xor
push
adc
xchg
scas
sub
repz
xor
popf
xchg
loope
fwait
lret
xchg
mov
jg
fwait
xchg
movsb
adc
pop
rcll
out
sub
xor
pop
enter
ljmp
lds
rclb
arpl
ficompl
pop
pop
imul
aas
stos
sbbl
in
push
mov
iret
scas
sti
stos
fwait
jge
pop
jle
mov
or
jbe
mov
mov
xchg
sub
sbb
ljmp
cli
sub
in
jecxz
dec
lret
orb
dec
pop
adcb
cwtl
jmp
xor
les
sarb
inc
mov
push
inc
dec
mov
ret
push
in
jns
lods
push
inc
fsubrs
ror
add
fnstsw
dec
loopne
pop
xlat
addl
icebp
ret
adc
rolb
subb
in
shll
and
and
mov
and
push
pop
jg
ss
inc
jecxz
inc
mov
ss
pop
lcall
inc
xchg
sub
dec
das
mov
shlb
nop
in
mov
pop
shrb
jl
repz
lret
adc
in
sub
xor
pop
outsb
mov
mov
jmp
add
ret
fs
mov
xor
add
xor
jne
leave
sub
xor
mov
inc
inc
pop
mov
and
paddw
or
xorl
icebp
xor
add
xor
xchg
xor
mov
in
fildl
sbb
insl
rcll
add
cwtl
mov
push
ljmp
fldcw
cli
imul
icebp
xor
jp
jmp
aas
pop
mov
cmc
xor
mov
push
xchg
stos
mov
or
xchg
int
adc
js
insb
insb
into
pop
imul
xchg
push
inc
mov
imul
out
sub
cmp
lods
es
mov
pop
mov
outsl
gs
adc
or
and
fistpl
aam
idivl
push
jo
push
std
sub
adc
popf
pop
mov
inc
jle
xchg
psubsb
movsl
mov
out
pop
and
notl
mov
xor
jp
cmp
stos
mov
aas
int
inc
xor
and
pop
test
mov
mov
lods
or
cmpsl
sbbl
cmpsl
cs
lock
inc
cwtl
je
xchg
lock
test
xchg
dec
repz
jle
push
mov
inc
icebp
out
out
popa
lock
popf
dec
fs
clc
fmuls
xchg
jmp
test
scas
cltd
lods
push
mov
ljmp
test
jo
stos
test
jmp
push
lret
jb
shl
sub
lcall
icebp
rcr
and
enter
ja
insl
lock
push
in
imul
or
inc
xchg
push
xchg
push
fistps
data16
xchg
jae
sbb
fxch
enter
ss
ss
pop
jg
sub
jne
imul
pop
mov
jno
out
and
lahf
xchg
cmc
fxch
jns
ret
movsb
aaa
lcall
imul
sub
cmpsl
ds
sbb
add
jge
addb
inc
push
fsts
xchg
sub
xor
pop
dec
decl
mov
xchg
into
mov
bound
cmp
mov
fildl
mov
int3
and
adcl
xchg
dec
xchg
fwait
push
cwtl
mov
dec
pop
and
bound
cmpsl
loop
js
testl
mov
jbe
pop
dec
iret
in
movsl
xor
ja
cmp
xchg
out
xchg
pop
mov
inc
out
lcall
fmull
pop
sub
aad
fisttpl
fs
movsb
repnz
mov
cli
jge
arpl
daa
mov
or
les
jle
mov
add
loope
push
daa
dec
das
out
js
inc
sbb
imul
lock
outsl
jge
repnz
xchg
adc
push
inc
pop
or
adcb
mov
inc
fisttpl
rcr
push
jnp
out
dec
pop
pop
test
dec
or
jns
jne
pushw
or
scas
ss
insb
fiadds
outsb
ja
sti
mov
lds
sarl
xor
xchg
mov
fcomps
je
stos
cs
push
inc
mov
xor
adc
inc
adc
add
jne
lahf
cmp
jo
les
and
int3
inc
cwtl
imul
jmp
dec
xlat
cmp
mov
cli
cmp
out
imul
call
inc
dec
cmc
int
mov
inc
pop
mov
mov
popf
out
xchg
cld
inc
jg
repnz
je
push
adc
scas
leave
arpl
jno
push
mov
in
and
xor
popf
movsl
push
and
push
inc
es
test
out
loop
cli
xor
or
fidivl
jge
sbb
mov
hlt
mov
das
mov
mov
call
loop
pop
cmp
add
sub
int3
test
stos
loopne
pushf
sbb
mov
mov
adc
mov
icebp
mov
scas
add
enter
lret
pop
repnz
fisttpl
jmp
sarl
xchg
jecxz
cmp
xchg
and
add
inc
adc
add
sub
pop
in
jecxz
fwait
pop
fwait
xchg
cmc
insb
bound
mov
movsb
cld
pop
fs
push
enter
push
push
push
cld
mov
aaa
pop
push
fdivp
pop
inc
xor
cmp
add
jbe
jmp
rcrl
or
shll
mov
pop
pusha
arpl
test
mov
popf
lea
cmp
ret
mov
gs
push
fldcw
loopne
enter
sbb
sbb
call
popa
mov
jbe
or
jmp
js
xchg
xor
call
test
xchg
loope
cltd
leave
dec
jecxz
cmpl
out
cmp
fwait
pop
outsl
int3
out
mov
dec
add
xor
lahf
aas
xor
inc
lret
arpl
add
inc
mov
push
adc
dec
xor
inc
or
das
add
pop
arpl
mov
ret
insb
adc
push
push
std
sub
push
out
xor
sbb
cmp
inc
orl
or
dec
xlat
rorb
inc
rorl
dec
xor
loopne
outsl
stos
into
xchg
ret
lock
testl
mov
add
leave
movsb
xchg
push
imul
jecxz
movsl
sub
lea
not
call
jbe
mov
xor
sbb
push
icebp
cmp
adc
insl
rcl
repz
xor
out
cmc
roll
pop
test
jmp
fwait
dec
dec
sbb
loop
int
inc
aaa
cmc
int
add
mov
xchg
sbb
dec
daa
adc
loop
jo
mov
testb
in
push
push
bound
iret
xchg
mov
cmp
push
lods
sbb
fs
mov
out
sub
fldenv
fs
cmp
test
in
jae
mov
add
mov
dec
shl
xor
add
xor
jns
cs
xor
jp
dec
ljmp
lock
pop
xor
sub
addr16
repnz
adc
xchg
add
mov
or
movsl
mov
out
jecxz
fimull
xchg
out
pusha
and
cmp
cmp
pop
and
repnz
sbb
pop
stos
or
cmpsb
sbb
stos
lds
jge
jbe
or
shrb
sbb
dec
dec
ret
inc
rclb
pop
jp
ret
out
scas
adc
adc
mov
movsb
fbld
xor
lahf
mov
aam
nop
mov
ret
cltd
rcrb
int
jle
push
jle
rcrb
addr16
xor
sub
nop
aas
lock
push
xor
lcall
sbbl
addl
dec
cmpsl
icebp
add
stos
adc
add
popa
fidivrl
cmp
add
dec
mov
pusha
imul
movsl
push
std
std
adc
jecxz
das
xchg
push
in
push
in
outsb
and
enter
test
xchg
dec
popa
add
sti
in
fsts
std
fwait
lcall
shlb
cmp
and
iret
daa
dec
mov
push
pop
xchg
lret
repnz
nop
loopne
std
mov
cmpsl
xor
arpl
adc
xchg
sarl
cwtl
mov
les
clc
loopne
out
jecxz
cmp
aaa
dec
sysenter
cltd
xchg
mov
inc
fldt
xor
pop
mov
andl
add
push
outsb
sub
stc
mov
inc
and
lret
xor
jecxz
dec
mov
sbb
dec
cltd
xchg
insb
test
mull
rcrl
bound
dec
ds
push
pslld
add
aaa
inc
adc
jb
jecxz
add
lcall
ja
xchg
inc
mov
jg
or
xor
movsb
movsb
cmp
shlb
pop
xchg
ret
mov
mov
mov
sarb
subl
sub
dec
stos
int3
pop
jmp
cmp
dec
push
cmp
sbb
gs
jnp
lret
inc
push
xchg
sub
push
sbb
mov
cmp
push
and
jp
ljmp
stc
seta
shll
jne
lea
es
data16
les
sarb
stos
lahf
call
addr16
or
sahf
out
leave
shrb
pop
bound
pop
adc
push
pop
sbb
xchg
daa
pusha
add
nop
dec
sub
xor
popa
xor
sub
cwtl
lret
ret
popf
pop
mov
cmp
cs
fdivrl
sub
lahf
sbb
add
pop
push
cld
rorl
clc
pop
mov
lcall
dec
fwait
mov
lahf
fsubrl
cmpsl
mul
scas
or
mov
push
pop
out
scas
xchg
mov
leave
or
and
scas
in
ds
inc
cmc
push
mov
cmp
pusha
xchg
int3
iret
insl
sbb
inc
out
into
mov
int
mov
xor
inc
int3
pop
sbbb
stc
mov
into
les
cmp
push
xor
jp
int3
cmp
repz
or
mov
fsubr
mov
cs
sub
or
xchg
adc
xor
add
lahf
cmp
cmp
mov
or
push
cmc
test
nop
cmp
shrl
pop
dec
mov
jb
or
outsb
sahf
mov
loop
lock
ret
dec
cmp
sbb
lds
mov
lret
sarl
xchg
pushf
jmp
push
jnp
and
or
or
adcl
mov
and
xchg
pop
int
add
mov
enter
add
adc
sbb
and
sbb
xor
rol
stc
cmp
sub
pop
dec
push
jb
or
pusha
and
cmp
mov
call
sub
jbe
mov
aas
cmp
loop
call
call
mov
jp
aam
stos
pop
mov
push
pop
push
les
mov
inc
mov
stc
stos
aas
das
punpckhwd
cli
adc
adc
cltd
or
mov
dec
nop
popf
fstps
add
mov
inc
js
dec
shrb
sub
mov
sbb
popa
jmp
pop
lahf
mov
xchg
rol
lock
fildll
jecxz
in
push
cmpsl
in
hlt
lahf
mov
in
in
xchg
xor
xor
out
push
out
mov
inc
int
mov
cld
cli
data16
popf
stc
shlb
add
addl
fcmove
adc
inc
xchg
daa
cmc
push
scas
mov
mov
in
push
push
cmpsl
push
cmc
in
mov
xor
or
xchg
push
xchg
mov
xlat
adc
enter
jo
pop
or
jl
int
mov
dec
loopne
mov
xchg
xchg
dec
cmp
dec
sbb
mov
inc
decb
adc
xchg
lds
ret
and
cmp
lret
dec
loope
sahf
adc
jecxz
xchg
test
or
mov
mov
rorl
rcl
inc
push
xchg
xor
add
or
pushf
lds
loope
mov
mov
jae
adc
dec
fs
daa
call
jp
push
stos
sbb
inc
mov
aad
mov
adc
xor
mov
mov
loop
rcrl
test
popa
add
fwait
pop
cltd
popa
outsl
inc
jge
js
sbb
mov
fstpl
std
shll
call
pop
push
jb
mov
out
mov
xor
shl
int3
add
inc
add
testl
dec
mov
scas
int
jmp
out
or
push
mov
stc
fwait
inc
mov
dec
rorl
pop
sub
clc
push
cmc
sub
push
and
push
mov
mov
push
mov
push
outsb
jecxz
pop
fcomi
xchg
iret
sbb
jb
out
arpl
rorl
mov
mov
dec
hlt
add
mov
push
movsb
and
psubusb
nop
insl
fidivs
mull
mov
mov
mov
movsb
sbb
add
scas
sub
iret
xchg
jge
enter
xchg
scas
clc
pop
adc
lret
fwait
dec
pop
int
outsl
xchg
inc
inc
cmp
insb
or
cmp
sub
mov
loopne
ret
lret
xchg
lds
rcrl
jecxz
jb
sti
enter
fldcw
dec
mov
jmp
xchg
rcr
bound
mov
repnz
fiaddl
push
les
popf
repz
mov
in
dec
inc
jb
ds
push
out
fiadds
inc
mov
outsb
push
push
arpl
and
mov
stos
push
pop
jb
dec
sub
pop
adc
inc
mov
push
faddl
nop
aad
imul
lock
sbb
push
sub
mov
cli
daa
mov
into
pop
cmpsl
data16
jne
roll
adc
sub
leave
or
mov
cmpsl
ror
xor
and
and
and
xor
in
lahf
pusha
push
outsb
mov
jbe
jne
and
jne
mov
pop
mov
jl
loop
adc
leave
xchg
repz
jae
stos
mov
jl
and
out
xorb
jae
add
push
cmp
test
pushf
loop
dec
push
ljmp
scas
aas
and
mov
cld
jg
mov
pop
fisttps
mov
pushf
lods
lods
add
and
fwait
add
push
cmp
sbb
jne
xchg
dec
imul
push
or
push
and
sbb
jne
lods
inc
into
lods
push
xor
int
push
jae,pn
mov
jns
stc
sub
faddl
or
xchg
sub
lret
mov
test
rcll
fsubs
lahf
sbbl
aam
imul
sub
aas
adc
leave
in
pop
fildl
adc
shll
call
mov
jbe
lods
mov
sbb
insb
jle
test
hlt
cwtl
bound
xchg
mov
inc
sbb
sbb
sbb
add
or
jo
loopne
mov
xchg
push
out
clc
addr16
jecxz
mov
mov
fnstenv
test
adc
jne
pop
or
cmpl
es
mov
xor
stc
push
mov
mov
fistps
jge
ret
inc
out
dec
mov
out
mov
out
icebp
sbb
aam
shlb
shlb
insl
xchg
je
fwait
pop
enter
jno
jl
insb
ds
arpl
sbb
jnp
mull
fadds
ss
dec
loope
adc
out
lret
leave
pop
mov
push
pop
psubsb
add
aad
mov
jae
mov
or
cwtl
negl
push
pushf
outsl
xor
xchg
xchg
lret
pusha
sahf
mov
loop
and
add
in
or
fcompl
xchg
pushf
sub
dec
add
insb
repz
cmpsb
push
inc
movsl
pop
stc
bound
push
jmp
pop
out
fldt
add
mov
dec
sbb
inc
push
mov
mov
adc
sub
ljmp
inc
jl
and
sbb
jecxz
mov
inc
jno
dec
xor
fidivl
mov
xor
add
enter
xor
or
cli
sbbl
mov
jecxz
mov
push
xor
lock
out
add
int3
dec
mov
lock
daa
xchg
loop
fimull
adc
repz
mov
negl
lods
int3
sbb
add
and
lds
add
cmp
inc
fsub
repz
xorb
pop
fbld
fdivl
stc
test
jo
mov
popf
dec
ror
xchg
jne
mov
add
push
xor
shl
mov
mov
cmp
aad
scas
cmc
idivb
ror
es
cwtl
aaa
adc
sub
ss
into
scas
jmp
cwtl
xchg
or
jbe
enter
dec
insb
fimull
sbb
inc
adc
mov
bound
loopne
loopne
out
xor
mov
xchg
repnz
or
sbb
xchg
pop
sub
nop
daa
sbb
cli
xchg
in
mov
cli
loope
inc
test
dec
testl
scas
jp
xchg
and
ss
dec
push
arpl
xor
jge
es
and
cld
mov
jbe
push
add
movsl
sub
xchg
pop
andl
pop
or
ret
or
arpl
inc
pushf
addr16
jae
xor
enter
pushf
or
scas
add
insl
cmp
aaa
test
dec
add
int
hlt
xchg
cmpsl
insb
faddp
adc
pop
fmull
adc
cmp
or
pop
dec
dec
hlt
xor
sbb
mov
cld
fcomps
xor
movb
ljmp
fldcw
sub
repz
add
dec
mov
arpl
xor
sbb
out
sbb
push
sub
das
ss
leave
or
int3
adc
insl
xchg
jno
les
xchg
inc
out
or
dec
je
clc
cwtl
sbb
ss
movsl
adc
jno
push
pop
xchg
sbb
lea
imul
cmpsb
pop
jl
andb
add
cwtl
fsts
mov
sbb
hlt
jecxz
cmpsb
add
pop
scas
cmpsl
imul
lods
enter
gs
lcall
insb
push
sbb
mov
cmpl
inc
xor
in
cwtl
lock
jno
jle
mov
mov
out
push
sub
loope
jns
jne
xor
or
xorl
jp
cmpsb
cli
shlb
fdivrl
cmpsl
and
push
mov
clc
lret
fs
std
xor
mov
pop
lret
jo
iret
push
cmp
push
ret
out
pop
add
dec
outsl
mov
in
fwait
sbb
daa
leave
mov
lods
leave
xchg
data16
test
add
mov
pop
mov
jge
ret
popa
add
stos
push
cmp
in
into
lahf
jl
add
inc
sti
clc
mov
dec
xchg
push
mov
dec
pop
hlt
adc
insl
mov
into
stos
and
inc
pop
mov
ljmp
adc
ficomps
lea
sti
andl
mov
outsb
ret
jnp
popl
mov
dec
push
jmp
jo
rclb
mull
ja
xor
inc
mov
into
push
pop
cmp
shll
push
shlb
int3
pop
cmc
movsb
mov
jae
add
insb
rolb
push
sub
dec
sbb
lods
leave
pop
mov
jb
orl
jbe
add
mov
daa
cmp
fistps
push
dec
inc
xchg
outsl
outsl
hlt
sub
jle
fstl
repnz
fdivl
packssdw
testb
in
xchg
das
mov
fsub
mov
or
insl
lret
dec
orl
jns
ja
push
gs
sub
push
cmp
push
lods
subl
pop
test
loop
in
mov
pop
test
or
add
out
cltd
add
loope
pop
jmp
lods
movsb
lods
mov
arpl
cmp
inc
cwtl
dec
mov
add
stos
jne
xchg
cmp
sub
and
sbb
or
in
or
movsb
mov
and
xlat
sbb
ljmp
int
stos
push
sub
fcmovne
xor
inc
es
jno
lds
xchg
pusha
pop
rorl
mov
mov
jmp
test
jb
dec
sbb
mov
aad
mov
ljmp
sub
test
sarb
sub
cld
jg
lds
repz
fwait
int
sbb
xor
vmovhpd
cmovs
addr16
add
out
div
jb
jp
sub
xor
add
rorl
xor
dec
je
and
mov
push
and
sub
and
inc
arpl
adc
aaa
sbb
push
jae
fnstenv
mov
aas
fidivrl
inc
jge
jae
sub
inc
cmp
xchg
push
jbe
mov
dec
loope
negl
inc
and
repnz
cmpb
pushf
mov
in
jnp
sbb
imul
and
xchg
pop
subl
push
jne
pusha
push
pop
mov
mov
repnz
loop
mov
stc
or
rcr
addl
mov
jae
repz
gs
sbb
cwtl
adc
adc
mov
inc
out
test
sbb
insl
mov
pop
add
push
pop
sub
pop
inc
test
mov
aad
xchg
jne
jae
push
cmp
ja
xor
xor
outsl
lods
xchg
pop
push
add
pop
sahf
or
inc
push
or
ja
loopne
jp
add
jge
popf
movsl
popa
mov
inc
aaa
xor
or
mov
or
lahf
sub
pop
push
aam
lret
call
iret
cwtl
das
adc
sbb
sbb
mov
pop
lcall
mov
fisubl
rcll
cmpsl
movsl
fldcw
xchg
fbstp
mulb
hlt
out
dec
lea
cmp
sub
xor
sbb
ljmp
test
fsubp
in
ss
sar
imul
arpl
pop
int
mov
or
out
jmp
lock
inc
sbbl
cs
nop
outsb
loopne
push
fisttps
ret
and
loope
jae
call
fadds
xor
nop
js
xchg
das
xor
popl
pop
xlat
xor
arpl
enter
ret
std
loopne
cmp
sbb
fdivs
inc
out
inc
inc
test
test
fldcw
popa
jg
sbb
mov
pop
insl
clc
push
stos
int
sbb
je
pop
pop
hlt
addb
pop
mov
lret
pusha
sbb
xchg
jb
mov
out
inc
push
mov
orb
leave
mov
push
push
scas
mov
stos
xchg
test
cmpsb
stos
and
jo
cmp
push
add
or
stos
pop
rcrl
movsl
pop
xlat
push
mov
in
ds
popa
arpl
add
loop
inc
gs
adc
in
add
cld
adc
xor
ret
ljmp
nop
insb
cmp
adc
in
loope
jp
rcrl
mov
call
jo
lock
adc
in
popa
push
xor
shrl
and
push
sbb
xlat
jne
test
inc
or
xchg
cmp
mov
pop
pop
add
repnz
mov
adc
lods
xadd
mov
imul
mov
mov
stos
cli
frstor
cmp
xor
aas
mov
cs
xchg
xchg
cmpsb
aad
andl
shr
bound
inc
xchg
lret
stos
xor
mov
push
inc
pop
bswap
cmp
in
repz
jbe
les
pop
push
js
sub
jbe,pn
ror
mov
insl
or
dec
add
rcr
mov
aad
inc
pushf
push
mov
mov
add
mov
mov
in
cmp
inc
insl
pop
in
adc
inc
pop
jo
mov
add
cmp
iret
movsb
push
or
ret
push
jns
mov
movsl
dec
jp
pop
aad
inc
xor
enter
or
ret
mov
cmp
icebp
aaa
fcoms
fstl
sub
xor
lds
sbb
push
mov
inc
rcl
shlb
sub
rclb
jg
fldcw
inc
in
mov
dec
push
push
push
je
sti
cmpsb
cmp
xchg
test
daa
adc
movsl
cmp
popf
js
out
movsb
mov
pop
jo
bound
fs
mov
jecxz
mov
out
into
cmpsb
test
push
push
movsl
mov
imul
outsb
daa
insl
movsl
sbb
jbe
lods
out
sbb
dec
add
sub
pop
adc
mov
jne
or
ret
mov
dec
popf
jmp
lcall
stc
lcall
in
sti
xlat
jne
divb
lret
ja
jge
jecxz
mov
mov
shr
and
aaa
push
clc
or
repnz
xor
add
jmp
xor
in
jns
xor
das
pop
pop
hlt
in
inc
test
cli
stos
pusha
into
push
enter
xor
pop
mov
arpl
sbb
das
scas
mov
jbe
inc
pop
cs
push
push
jae
ljmp
and
mov
rol
lock
push
xlat
ficoml
and
repz
dec
cmp
mov
add
pslld
xchg
jnp
into
sub
mov
jp
jmp
xchg
lea
push
rsqrtps
adc
add
push
in
test
inc
add
add
icebp
push
or
scas
jl
jmp
xor
dec
cmp
jae
test
ret
dec
imul
mov
xchg
fstpl
pop
rorl
dec
pop
cmp
inc
iret
push
xchg
push
jmp
mov
aas
cmpsb
gs
call
mov
aaa
out
into
mov
pop
inc
jne
aad
hlt
outsb
mov
lahf
gs
dec
sub
imul
sar
jb
fidivrs
cmp
insl
js
jmp
adc
repz
clc
aad
inc
cltd
in
arpl
sbb
add
and
test
loope
js
xchg
jmp
stos
loop
jge
sbb
push
xor
mov
insb
mov
dec
fdivl
inc
addr16
sub
fistpl
pop
pop
femms
fmuls
repnz
daa
pop
push
ja
dec
cmp
push
cmpsl
push
daa
or
jno
test
clc
leave
sub
jp
sub
aaa
cmp
jne
push
aam
mov
aas
and
dec
outsb
sbb
add
cmp
adc
xchg
pop
loop
jl
jns
gs
test
xchg
xchg
pop
jge
sub
insl
jns
sub
mov
cs
pop
or
mov
push
ss
sub
cmpsl
jno
int
or
adc
ljmp
fisubl
pop
stc
xorps
lahf
adcl
cmp
and
push
pop
pop
xor
push
xchg
xchg
imul
sbb
scas
int
inc
mov
adc
mov
aaa
dec
pop
fcomps
scas
cmp
aas
mov
inc
inc
sub
out
mov
icebp
push
jne
lds
int
push
adc
push
xchg
and
adc
lcall
ret
or
or
push
addr16
lods
dec
mov
insb
mov
xchg
push
daa
imul
sub
sub
dec
ffreep
loop
and
and
mov
push
add
cld
ss
or
inc
fbld
adc
add
xchg
push
sub
inc
lret
adc
les
repnz
nop
add
popa
pop
lea
hlt
xor
int
or
xchg
add
mov
add
or
xchg
loope
loope
sbb
ds
outsl
xor
in
ss
loope
outsb
mov
jne
jne
push
sbb
or
xor
xchg
ss
icebp
call
cmp
movsb
cmp
lock
test
xchg
pop
and
xchg
rcrb
andb
repnz
test
insb
adc
and
inc
cmpsl
nop
movsl
bound
repnz
sbb
cmp
cmp
je
add
mov
push
lods
jae
inc
xchg
sbb
cpuid
sahf
mov
enter
dec
movsl
hlt
jecxz
mov
in
cmpsl
cmp
lahf
push
dec
mov
jbe
add
shl
jmp
and
sbb
out
xchg
mov
add
jp
lea
mov
mov
sbb
scas
imull
mov
fstpl
sarb
add
sbb
lea
xchg
inc
add
dec
sub
daa
push
pop
xor
adc
mov
lea
addr16
sub
jl
fnsave
stc
adc
inc
sar
xor
mov
jnp
cmpsl
mov
repz
sub
in
je
addl
jo
push
mov
ss
cli
lea
mov
pop
or
daa
push
pop
test
movsb
jp
enter
push
ja
inc
add
insb
data16
fiaddl
les
andb
jbe
dec
lea
fdivs
nop
filds
dec
mov
jp
jle
pushf
xchg
std
sbb
sbb
rorl
and
pop
jl
or
mov
cmp
sbb
xchg
idivl
xchg
lods
push
popa
mov
leave
ja
dec
insb
adc
imul
repnz
dec
and
mov
jle
pop
cmc
and
mov
shr
sbb
ljmp
dec
jl
push
cmp
adc
repnz
cmc
or
sbb
into
ret
arpl
enter
adc
xchg
dec
clc
sbb
pusha
aam
jne
mov
or
inc
adc
icebp
les
sbb
test
in
je
inc
in
stc
leave
lods
adc
mov
out
push
mov
or
mov
pop
les
imulb
push
jmp
jb
mov
sub
xor
mov
fnstsw
xchg
fwait
pop
subl
cmpsl
mov
jge
icebp
outsl
cmp
push
sub
and
xor
pop
rcl
shll
mov
outsl
std
imul
ja
shr
adc
mov
push
cmp
and
sub
cmp
xchg
jle
addr16
ret
out
push
mov
cmp
cmp
fmuls
mov
jne
int3
mov
andb
stc
orb
shlb
mov
out
sbb
or
imul
cmp
adc
pop
xor
test
dec
stc
dec
repnz
mov
stos
lahf
lret
das
cmp
cmp
cmp
out
bound
push
inc
or
popa
push
mov
mov
mov
push
sbb
imul
jb
cs
mov
sbb
dec
lret
adc
mov
je
or
repz
jmp
xchg
jge
lds
push
cmpsb
cltd
xlat
ds
cmpsb
push
popa
data16
ja
push
cs
not
bound
jl
pop
xor
mov
punpcklwd
es
mov
sbb
jl
sbb
mov
dec
stc
push
add
btl
mov
mov
dec
push
inc
cmp
and
iret
pop
pop
ret
ret
in
sbb
mov
xor
mov
ljmp
icebp
into
out
sbb
lods
fstps
jle
add
movsl
test
mov
fdivl
xor
fiaddl
mov
fsubr
cmc
fmull
pusha
into
add
or
loop
mov
fisttpll
pop
or
aad
fistpll
gs
jb
pop
out
add
sar
jae
outsl
dec
push
loop
sub
mov
lea
sub
inc
movsb
push
lea
inc
jp
adc
leave
sbb
bnd
mov
lcall
xor
mov
popf
rclb
sbb
add
push
or
cs
fsubl
jnp
inc
mov
mov
jnp
mov
loope
or
mov
in
xchg
jb
jnp
add
repz
and
jae
inc
ja
lods
pop
jmp
jbe
add
cwtl
cmp
fdivrl
jb
stos
add
dec
push
rorb
mov
sbb
test
pop
push
fbstp
int
ret
insb
cld
push
lahf
ds
push
sub
sbb
jne
mov
jno
jl
push
loopne
shlb
or
lods
jl
jp
lods
mov
lahf
outsb
sbb
repz
inc
popa
jne
int
adc
hlt
je
jecxz
pop
sub
scas
dec
ret
mov
push
push
or
dec
and
inc
add
notl
mov
xchg
jnp
fdivrp
pop
and
pop
dec
and
sub
jbe
and
xor
mov
xor
xor
mov
fsubs
or
sbb
mov
aam
inc
enter
mov
push
or
sbb
push
shll
in
xchg
addr16
in
xchg
sbb
ret
std
cmpsb
jae
loop
std
das
out
fwait
dec
jnp
push
push
cmpb
aas
ljmp
pop
div
into
mov
pop
cld
fs
fcompl
movl
or
xchg
adc
inc
jle
adc
xlat
push
and
jecxz
pushf
mov
xor
sub
lods
mov
popa
es
mov
or
nop
aam
inc
xor
and
aaa
or
pop
xchg
xor
jnp
test
repnz
lret
negl
aas
dec
mov
aad
hlt
scas
ljmp
outsb
sti
in
push
stos
popl
js
sub
repz
cmp
mov
cmp
jle
das
fsubrl
iret
fmuls
dec
mov
jmp
pop
lock
pop
stos
push
les
adc
aas
dec
mov
icebp
jnp
mov
dec
into
jne
xchg
mov
mov
xlat
fsubs
add
test
xlat
push
repnz
jle
xchg
repnz
mov
mov
mov
xor
jnp
xor
fnsave
jb
inc
dec
jb
and
inc
xlat
lds
insl
shrb
jg
hlt
xlat
xchg
repnz
mov
stc
lret
movsb
les
cli
jno
push
inc
fidivrl
lret
fs
nop
adc
daa
dec
lods
aaa
stos
mov
cltd
xor
cmp
daa
out
stos
push
add
stos
and
push
out
jp
sub
scas
and
popa
test
mov
dec
mov
aas
addl
fmul
mov
fcmovne
shll
in
or
cmp
jnp
test
ss
add
and
das
int
mov
xchg
pop
or
sbb
lea
test
add
cld
popa
es
mov
inc
cmp
popf
rcr
test
cli
and
pusha
adc
je
xchg
cmp
or
test
and
mov
cmp
lret
mov
mov
popa
mov
and
push
xor
outsl
pop
xchg
push
dec
xchg
mov
add
or
or
dec
hlt
inc
popa
stos
into
icebp
ja
jo
inc
sub
inc
cli
jne
sbb
mov
aas
mov
dec
cmp
sub
lahf
je
xor
fistpl
xor
and
pop
leave
and
cltd
add
dec
mov
rcll
shll
or
sub
out
not
push
dec
xlat
dec
lods
insl
adc
gs
test
cs
int
sbb
leave
mov
and
push
jo
sub
mov
adc
insb
dec
mov
pop
std
pop
and
xchg
pop
outsb
fcoml
rcll
xchg
rcrl
push
push
inc
add
leave
mov
lret
dec
insb
xchg
jnp
movsl
addr16
inc
ljmp
aaa
mov
xchg
add
sti
inc
mov
jae
and
int
push
imul
xlat
inc
mov
mov
mov
fldt
push
push
inc
lcall
int
lods
mov
inc
mov
sbb
jne
mov
cmpsb
inc
outsb
dec
push
push
fwait
enter
jo
enter
jbe
fstpl
insb
sarl
and
iret
shlb
mov
xchg
dec
std
lea
sub
rclb
fwait
jge
imulb
std
inc
int
mov
cld
or
pop
or
lods
mov
leave
pushf
sbb
jecxz
test
mov
sub
pop
cmpsl
add
hlt
inc
cmp
dec
andb
xchg
or
mov
add
out
out
sbb
mov
adc
lods
loop
mov
inc
loop
cwtl
jbe
add
ja
mov
mov
cmpsb
jmp
inc
fcompl
test
andl
es
dec
jno
push
mov
pop
sbb
jne
push
aam
rol
ja
lods
fwait
popf
loop
inc
push
xchg
jl
xchg
pusha
daa
jecxz
std
mov
sbb
xchg
jmp
dec
scas
lds
je
stos
mov
xchg
lock
js
adcb
dec
repnz
movsl
mov
dec
divb
aad
js
cwtl
mov
push
scas
addr16
xlat
movl
daa
js
sbb
divb
cltd
outsb
pop
xchg
push
rorl
out
mov
cmp
push
xchg
ficompl
fistps
jo
lods
xor
jecxz
insl
sub
fs
or
mov
stc
dec
repz
gs
dec
xor
stc
mov
jbe
fisttpll
dec
out
les
loop
addb
adc
movsl
fwait
jns
adc
pop
outsb
pop
scas
jno
rorl
sbb
lods
je
adc
cld
dec
xchg
cwtl
fistpll
lods
insl
push
push
xlat
pop
push
sarl
sub
add
cmp
movsl
push
sarb
mov
scas
mov
icebp
inc
test
ret
mov
xchg
adc
out
sar
cmp
in
hlt
popa
mov
mov
dec
adc
cmp
mov
lods
bound
pushf
repnz
adc
push
push
jmp
xor
loop
sbb
mov
dec
xchg
pop
es
push
gs
jmp
xor
adc
repz
jle
or
dec
pop
dec
or
jmp
sarl
ja
insb
js
sub
mov
xor
outsb
in
jge
stos
or
xchg
push
mov
sti
pusha
std
dec
lret
icebp
pop
jge
sahf
xchg
mov
rcrb
orb
adc
inc
pop
cmpsl
jge
cltd
or
stc
cwtl
and
rcl
js
push
adc
push
mov
test
adc
mov
jp
ret
ret
ficompl
inc
outsl
cwtl
inc
out
stos
fisubl
xlat
mov
notb
push
push
imul
int
dec
add
xchg
inc
xor
add
or
neg
jmp
in
gs
lret
in
cmp
push
fwait
mov
cmp
movl
mov
push
and
add
data16
sub
sub
test
ja
push
sbb
leave
stos
mov
cs
pop
out
adc
adc
enter
test
jl
inc
jno
das
iret
pop
xchg
push
mov
ss
sti
jae
cli
add
es
test
js
add
cmp
mov
adc
addr16
or
jbe
mov
dec
jno
mov
aad
loope
fldenv
pop
lahf
rolb
mov
nop
xchg
dec
adc
jg
fdivrl
pushf
in
jl
mov
cld
cltd
leave
mov
jnp
cs
mov
mov
adc
lea
inc
mov
inc
mov
sub
adc
repz
fld
mov
cmp
int
xor
fwait
jo
notb
push
ror
fstpt
pop
js
into
sbb
cmc
cli
sbb
scas
adc
hlt
jmp
call
stos
adc
daa
data16
jle
add
cmpsl
movsb
pop
xor
lahf
mov
push
mov
movsb
inc
jbe
scas
subl
scas
aaa
lds
dec
pusha
xlat
or
nop
in
xchg
xchg
xchg
push
xor
movsl
out
jno
hlt
sarb
sbb
push
dec
xor
jl
enter
lds
shrb
outsl
xchg
pushf
add
cltd
and
or
mov
jno
mov
incl
mov
sbb
inc
inc
cmpsl
lea
outsb
xor
xchg
xchg
testb
loopne
andb
sub
fisubrl
fwait
aas
test
jp
xor
daa
cmc
xchg
dec
gs
cmp
daa
jne
rclb
aad
sbb
sub
xchg
jp
add
mov
mov
dec
fs
mov
push
mov
xchg
fs
call
outsl
xor
movsl
mov
lds
ja
mov
rolb
repz
pop
mov
cmp
adc
sbb
pop
popa
pop
and
lea
inc
stc
ja
sbb
adc
es
and
mov
shl
dec
insl
jbe
sbb
mov
sbb
in
adc
mov
insb
aas
int
dec
push
ljmp
fidivs
repz
std
jle
loopne
mov
jmp
in
mov
mov
add
ja
mov
adc
add
cmp
inc
ds
repnz
xor
mov
cmp
inc
adc
ret
in
out
push
fwait
xor
push
jge
adcb
movsl
sub
adc
in
dec
or
enter
mov
adc
dec
xchg
mov
xchg
and
test
mov
mov
pop
hlt
xchg
jmp
test
mov
pop
insb
scas
in
movsl
fadd
sub
cmp
mov
inc
xchg
and
data16
sub
pop
adc
clc
adc
rclb
dec
fistl
aam
sarb
lock
rcll
les
loope
fwait
das
les
and
test
ret
mov
das
mov
not
sub
aad
sbb
test
cwtl
les
cmp
sub
add
subl
jmp
or
movsb
aas
push
dec
es
jb
cmc
fwait
cli
loop
call
mov
push
pusha
adc
out
in
or
sub
jle
adc
sbb
out
outsl
cld
jg
das
sub
stc
scas
je
andb
inc
mov
and
scas
pop
cwtl
jne
ja
jb
fs
and
outsl
popf
int
mov
push
ja
lcall
pop
xor
cli
push
and
push
aaa
jl
movl
xchg
jo
or
scas
sar
lret
mov
sbb
clc
mov
ljmp
ss
mov
xchg
aas
or
repz
loope
or
sbb
and
sbbb
pop
inc
stc
add
cmp
push
scas
pop
dec
dec
dec
cmp
pshufw
jb
nop
je
arpl
and
jb
out
xchg
mov
enter
adc
mov
js
mov
shr
fwait
and
mov
pop
jo
xchg
dec
xchg
into
daa
notl
push
aaa
mov
jge
cmp
pop
jecxz
jns
imul
pop
into
test
mov
mov
clc
xor
stc
or
gs
add
jns
cltd
mov
leave
cwtl
in
loope
fmul
xchg
aas
xchg
jmp
insl
lock
decb
in
inc
push
adc
addl
inc
cmpsl
mov
dec
repz
es
sbb
outsb
mov
gs
adc
mov
add
push
sub
pop
inc
jp
sub
push
mov
enter
loop
xor
fs
and
xchg
fsubl
pop
popa
cs
dec
mov
push
int
mov
cmp
bound
inc
dec
movsb
fistl
sti
cltd
mov
adc
dec
pushf
mov
pop
and
mov
cmp
and
test
or
pop
ja
call
and
mov
jmp
imul
fdivl
sbb
and
leave
xor
xchg
mov
pushf
pusha
cmp
loop
repz
shl
data16
mov
insb
movsl
shrb
sti
xor
scas
jbe
mov
sub
dec
xchg
dec
mov
insb
fistps
xchg
jne
lock
test
sti
loop
push
enter
cmp
xor
call
loop
jge
adc
scas
push
arpl
adc
loop
adc
ss
subb
pusha
arpl
inc
mov
std
hlt
xor
fwait
scas
jbe
fstl
iret
adc
xor
jecxz
aam
aam
dec
sub
push
popa
sti
lock
cmp
fmull
cmp
xor
cs
movsl
jg
fidivrl
rclb
rcll
adc
push
mov
push
lods
stos
pop
outsl
mov
and
mov
pop
cmpsb
cmpsl
add
dec
add
pop
jl
movsb
test
dec
mulb
adc
faddl
rolb
jmp
imul
xor
sbb
or
xor
movsb
xlat
push
test
popa
jns
lahf
addr16
mov
sub
aas
jmp
mov
add
sbb
or
sub
pop
mov
ffreep
push
cli
jp
pushl
fmul
push
mov
insb
repnz
dec
leave
leave
push
rcrl
fmull
pop
dec
stos
cmpsb
mov
mov
test
mov
mov
ja
dec
push
test
rcl
hlt
sub
imul
push
adc
xor
or
cmp
jecxz
dec
mov
inc
and
out
pop
dec
xor
arpl
pop
cli
stos
fwait
dec
adc
push
mov
imul
mov
pop
sub
mov
testl
and
fs
sbb
fsubrl
inc
cmp
jne
mov
cmp
mov
jecxz
jno
faddp
jns
and
mov
xchg
rcr
sub
mov
call
xor
mov
xchg
mov
iret
cld
xchg
mov
lea
add
sbb
xor
shll
movsb
mov
stc
outsb
and
or
dec
adcl
cmp
and
xchg
fdivrs
xorl
outsl
xchg
sub
popa
sub
cltd
pop
cld
push
test
pop
sbb
push
in
daa
mov
push
mov
outsl
inc
mov
jle
sub
jnp
mov
subl
inc
add
xchg
lret
imul
outsl
mov
iret
repnz
mulb
cmp
jle
sbb
or
fs
loop
mov
push
lods
pop
mov
mov
rclb
sub
inc
int3
sbb
xlat
nop
or
push
xlat
lret
mov
mov
sub
and
mov
push
hlt
ret
xor
aam
sbb
xchg
lds
xchg
cmp
andl
pop
add
jo
gs
and
ljmp
mov
fs
fsts
inc
gs
xchg
loop
cmp
test
dec
inc
clc
mov
aam
push
xchg
jmp
add
add
ret
xchg
std
out
cld
jae
pop
jae
inc
addr16
and
movsl
leave
sub
les
mov
jge
mov
in
xchg
dec
and
pop
gs
sahf
inc
inc
sbb
inc
jge
setb
mov
add
stc
mov
repz
loope
inc
out
sub
add
sub
lods
arpl
hlt
in
addr16
add
mov
push
movsl
into
imul
adc
shrl
mov
xor
push
jl
cs
loop
loopne
data16
adc
mov
jecxz
mov
and
sub
out
xor
push
or
inc
dec
inc
repnz
nop
lods
adc
nop
adc
jne
xchg
adc
movsl
push
out
dec
arpl
push
aam
mov
sub
jge
sub
repnz
mov
push
adc
add
jnp
add
adc
das
cmp
je
rorl
add
adcb
push
pop
adc
cmp
sub
jbe
mov
lods
mov
pop
jns
mov
cmp
mov
mov
xor
and
lods
movsl
clc
adc
test
popf
mov
jmp
jecxz
push
jbe
mov
jmp
shrb
fsubp
outsl
push
in
pop
movsl
adcb
push
dec
mov
cs
jo
call
jg
arpl
mov
adc
mov
cwtl
xor
in
notb
cmp
enterw
mov
inc
in
je
xchg
or
mov
into
fsubrs
push
iret
push
leave
sbb
les
xor
mov
outsl
dec
lods
in
je
pushf
pop
mov
jmp
cmc
popa
in
jne
mov
imul
inc
jmp
lret
cmc
pushf
pusha
rcll
push
js
jg
ja
loopne
mov
push
insb
push
adc
loop
mov
jecxz
push
pop
mov
pop
bound
push
push
aaa
jbe
mov
mov
test
inc
add
repnz
lds
fcmovne
jmp
movsb
test
call
iret
add
adc
cmp
mov
jne
cmp
fisubrl
dec
loop
xchg
out
ss
inc
pusha
arpl
xlat
pop
in
aaa
inc
leave
movsl
push
mov
arpl
dec
out
sub
pop
mov
adc
push
xchg
mov
push
pop
addr16
clc
fs
or
hlt
insl
lahf
xorl
frstor
mov
xor
repnz
psubd
jp
repz
dec
pop
iret
nop
add
scas
insl
in
cmp
hlt
loopne
sbb
or
pop
je
mov
jle
or
jecxz
repz
bound
out
aad
pop
scas
lret
jmp
jg
iret
imul
dec
iret
jge
pushf
push
inc
cld
adc
out
push
xchg
xor
and
fists
mov
jnp
xor
lods
invd
sbb
aaa
rcrb
int
inc
dec
mov
stc
mov
sahf
sub
jmp
es
push
jmp
ret
mov
scas
popa
jmp
testb
dec
jo
mov
push
ret
push
test
cmpsl
push
pusha
negb
adc
sbbb
lods
xchg
mov
pop
and
mov
out
pop
push
repz
cmp
lods
test
mov
scas
test
cmc
stc
fcmovne
adc
fbstp
inc
aaa
leave
fs
mov
dec
push
rcrb
jp
cltd
xchg
jl
or
cltd
cld
je
pop
inc
pop
lahf
aas
fwait
stc
push
cmpsl
pop
bound
pusha
xchg
mov
insb
fs
dec
stos
jg
shr
popl
in
fstps
xchg
imul
mov
mov
cwtl
push
fcmovu
mov
aad
jle
dec
insb
add
inc
push
mov
lods
xor
aad
mov
fisubs
testl
decb
cmpsb
ljmp
rcll
mov
xor
pushf
fs
cmp
or
cmp
fsubrl
dec
push
aas
sahf
pop
bound
pop
sbb
pop
div
out
addl
ss
sub
xorb
mov
ja
lods
enter
xchg
idivl
sub
inc
mov
dec
xorb
mov
xor
jp
ds
pop
inc
pop
jmp
sbb
jb
scas
pushf
sub
xchg
daa
sub
scas
dec
cmpsb
xchg
cmc
sub
shrl
push
adcb
stos
fiaddl
rolb
cmc
subb
mov
out
icebp
test
adc
mov
pop
xchg
inc
push
dec
dec
aad
in
push
fsubrp
aas
mov
xchg
dec
jae
mov
fisttps
pop
sub
mov
cwtl
shlb
xor
jle
insl
mov
mov
push
xlat
xor
outsl
dec
daa
mov
or
shlb
pop
xchg
push
sbb
xor
data16
and
ljmp
sub
and
cmp
scas
pusha
dec
test
add
inc
jmp
lods
cmpsb
into
lahf
shrl
fimuls
ds
nop
or
imul
push
icebp
and
push
or
jns
data16
sbb
jmp
lods
dec
cs
and
mov
rcll
dec
addb
xchg
scas
cmp
sahf
inc
leave
fsubl
sar
xchg
jo
jne
xor
xchg
sbb
arpl
gs
mov
adc
sub
rorb
cwtl
sub
jecxz
mov
xor
mov
dec
push
sbb
rcrb
xchg
ss
push
and
adc
imulb
dec
xor
pop
ja
jg
out
into
xchg
or
add
jge
movsb
mov
xchg
jmp
lret
cmp
push
call
loop
sub
mov
dec
sub
in
repz
jl
mov
inc
lds
mov
xor
adc
dec
and
addr16
sbb
int3
xchg
jb
stc
mov
shlb
push
popf
cmc
push
sti
pop
pop
add
leave
cwtl
sbb
imul
dec
fistps
jp
frstor
repz
outsb
loop
fsubrl
call
mov
divl
dec
xorb
pushf
ds
dec
lret
shrl
sub
pushl
mov
insl
dec
xorb
pop
mov
push
pushf
cmc
xchg
mov
mov
jge
addr16
ja
sbb
mov
add
inc
out
mov
call
sbb
push
dec
jg
outsl
addr16
jne
dec
stos
sbb
mov
xchg
inc
cmpsb
test
imul
out
and
pop
jae
idiv
pop
jl
ja
jle
ds
sarb
andb
inc
xor
pop
icebp
rclb
jmp
cld
push
mov
jle
mov
push
fsubs
test
xchg
mov
mov
leave
repnz
adc
sbb
inc
and
push
out
imul
arpl
in
and
iret
insb
mov
mov
xor
adc
stc
andl
push
mov
xlat
enter
mov
push
mov
out
fistpl
fildl
and
fadds
or
das
or
cmp
stos
push
pusha
jo
movsb
jg
cmpsl
push
scas
sbb
mov
call
insb
jmp
out
loope
xor
mov
jno
insb
mov
out
mov
fcoms
or
or
and
or
test
xchg
daa
in
jns
sbb
jbe
stos
outsl
sarb
int3
scas
in
jo
push
cltd
out
out
push
sub
loop
imul
fnstcw
add
or
xor
sub
sbb
xchg
or
cmp
xchg
loope
fisubs
jae
push
push
pop
lret
pop
jo
add
sar
cs
out
sarl
mov
adc
push
icebp
fbstp
gs
xor
dec
push
xchg
int
mov
jnp
jp
jmp
or
repnz
into
aaa
sbb
sub
lcall
and
cmp
cld
test
fs
jmp
pop
dec
roll
mov
mov
out
mull
ljmp
dec
xor
add
pop
je
adc
and
gs
mov
and
mov
sub
cmpsb
mov
fstl
pusha
scas
enter
pusha
mov
xlat
jge
imul
xor
inc
push
fsubrs
ret
stos
in
pop
add
jo
mov
movl
jo
adc
out
loopne
cltd
add
out
pop
push
pop
mov
push
sub
push
mov
mov
movsb
push
out
jo
enter
das
ds
xchg
std
js
fs
sti
and
sbb
popf
clc
xchg
push
jecxz
mov
xchg
xor
nop
mov
hlt
add
repz
aad
in
xlat
xchg
xchg
add
mov
mov
pop
add
jbe
jnp
or
mov
lea
aas
mov
add
xchg
xchg
adcb
imul
jno
jle
jo
jae
adc
stc
gs
lcall
cmp
inc
xor
out
repnz
fs
adc
inc
sub
xor
pop
mov
call
push
adc
xor
xchg
xchg
cmp
push
movsl
out
pushf
in
pop
in
movsb
mov
xor
and
notl
pop
insl
popa
mov
mov
xchg
xor
test
jge
or
pop
orb
popa
fwait
mov
pop
xor
stc
sahf
ret
rcll
es
sti
push
adc
push
sub
aad
xor
sub
xchg
add
xchg
jo
mov
or
aam
or
aad
orb
mov
jp
push
mov
sub
fwait
jo
pop
lea
jmp
sahf
push
testl
sub
dec
jb
mov
sbb
push
insl
imul
cmp
out
js
mov
dec
lods
and
push
daa
mov
pop
in
push
mov
cld
std
cltd
cmp
loope
jbe
ret
and
cmp
rolb
in
push
clc
pop
ret
aam
jge
sub
inc
xchg
push
mov
mov
mov
test
jle
movsb
repnz
out
cmp
sbb
imul
into
sarl
cmp
adc
stos
lahf
lea
into
nop
test
ret
test
and
jmp
mov
ss
cli
add
repnz
fs
rcl
push
mov
cli
stos
push
lcall
pusha
pop
paddusw
jle
mov
mov
mov
push
dec
pop
push
or
inc
sub
mov
les
orl
imul
insl
nop
lret
add
cs
push
xchg
mov
adc
cmc
push
stos
xchg
dec
addr16
fbstp
jns
push
shrb
dec
push
ret
jle
dec
arpl
mov
movsl
cltd
fisubrs
cmp
push
sub
shll
add
inc
xchg
int3
rorl
and
ds
fnstsw
xchg
mov
add
mov
repnz
mov
mov
ss
jmp
and
dec
mov
lret
shrb
fwait
add
push
add
lock
cmp
push
cmp
mov
push
pop
les
test
outsl
lcall
pop
push
inc
pop
out
add
movsb
test
sbb
mov
bound
icebp
push
dec
xlat
mov
lret
in
cwtl
xor
push
push
push
inc
jmp
iret
je
jmp
ss
add
lahf
and
sub
sbb
adc
ret
jp
lds
imul
lcall
cltd
popf
sub
test
mov
divl
mov
cmp
sub
cmp
fwait
into
or
cmpl
xchg
cmp
adc
mov
popf
int
or
cmpsb
xchg
in
mov
xor
or
popf
sti
mov
push
cmc
testb
stos
imul
aam
mov
add
dec
int
mov
push
jbe
scas
out
push
in
scas
loop
xchg
mov
mov
adc
pusha
out
jg
out
lret
repz
mov
cld
jbe
mov
sbb
adc
sarl
loopne
mov
xor
aad
in
in
sbb
sub
jge
inc
outsb
lcall
pop
mov
vcvtdq2ps
dec
jae
daa
push
sahf
lock
out
adc
add
mov
lcall
icebp
pushf
push
mov
pop
sub
sub
scas
in
jo
push
out
es
sub
sbb
icebp
ja,pt
dec
ds
inc
adc
and
push
in
aas
jmp
add
jbe
testl
and
inc
mov
lea
enter
pushf
cltd
lret
fildl
pusha
ss
and
pushl
push
out
xor
cld
cmp
inc
jg
mov
sbb
add
mov
enter
std
aad
sbb
xchg
inc
icebp
cmpsl
dec
and
mov
roll
jle
xor
cmp
arpl
and
into
into
faddl
lods
dec
xchg
or
and
cmp
lds
insb
je
or
ret
out
xor
inc
into
sbb
cmpsb
jae
mov
pop
icebp
nop
test
ljmp
xor
pop
mov
push
adc
cmp
push
setle
sub
xor
sbb
fcompl
sti
in
subb
pop
jge
pop
jecxz
jnp
enter
sub
push
cmp
or
test
movsb
dec
xor
insl
jo
adc
ds
push
push
aaa
call
nop
stos
xchg
mov
ret
in
xor
inc
mov
jbe
cli
jno
mov
mov
cmpsl
mov
ja
mov
xchg
inc
pop
xor
fnsave
push
mov
mov
shll
pushf
pop
sub
bound
mov
sbb
mov
out
mov
xchg
loop
es
lret
cmpsb
adc
and
pop
fwait
call
cld
pop
push
movsb
cmc
mov
clc
mov
js
cwtl
sub
and
out
add
push
aaa
cltd
lret
int3
inc
mov
sbb
aas
inc
je
in
ret
stos
scas
cmp
shll
rolb
inc
jg
sub
test
icebp
test
pop
xor
in
xor
jmp
dec
hlt
pop
lcall
fwait
or
mov
mov
in
sub
mov
xor
or
xchg
faddl
xor
test
outsb
in
pop
lds
mov
addr16
mov
dec
stos
pusha
lds
sarb
push
dec
xor
test
mov
sbb
lea
pushf
orb
xchg
and
adc
les
inc
pop
in
cmp
popa
ljmp
mov
les
test
and
leave
pop
pop
jge
or
subl
adc
insl
jmp
loope
ss
pop
lcall
xchg
pop
icebp
xchg
add
jge
outsb
pop
aaa
jg
or
movsl
mov
lods
push
shl
inc
xchg
mov
pusha
mov
mov
ucomiss
fwait
lret
out
popa
mov
jl
or
and
mov
loopne
or
sub
incb
ljmp
add
pusha
add
xchg
dec
call
xchg
dec
leave
call
jb
pop
movsb
mov
push
or
pop
ror
xchg
gs
test
dec
int3
add
push
and
cmpsb
mov
shll
mov
je
adc
push
gs
mov
leave
and
xor
loope
add
add
das
or
push
xor
outsb
mov
movl
lahf
sub
and
scas
in
lock
pop
or
ljmp
daa
std
xor
add
mov
es
sub
mov
ja
jnp
insb
out
mov
mov
mov
fsts
xchg
int
lods
movsl
cld
pop
icebp
add
lds
add
ja
inc
xor
sahf
adc
adc
xchg
fwait
stos
test
jge
xchg
push
lea
lea
cltd
xchg
mov
rcrb
test
pop
dec
sbb
std
add
sbb
sub
mov
add
js
hlt
or
cli
addl
adc
adcb
stos
in
in
xchg
and
inc
fnsave
jae
dec
test
jb
inc
push
xchg
daa
popa
push
faddl
xchg
stc
and
add
lcall
inc
cmp
inc
sub
in
fidivrs
out
repz
cmpsl
cmp
test
sub
arpl
dec
mov
das
mov
aaa
cmp
xor
out
mov
mov
add
dec
outsb
jp
movsb
enter
sub
add
dec
lret
ljmp
fistps
filds
test
mov
popf
push
scas
and
push
add
add
push
fiaddl
xor
mov
or
xor
xlat
bound
repz
sbb
aam
sub
pop
call
xor
sbb
fiaddl
and
loop
into
adc
sub
ss
aad
stos
rcll
jmp
fldenv
lret
mov
and
mulb
xor
jmp
xchg
and
xchg
mov
inc
inc
fcomip
lds
cmc
out
jp
lahf
sbb
push
popf
xor
cmpsl
push
fldcw
test
movsb
xchg
inc
ret
jbe
cmp
cmp
testl
push
mov
ret
push
aad
sub
out
sub
out
dec
int
mov
stos
adc
mov
sbb
pusha
insb
sbb
mov
mov
insl
aad
inc
xchg
es
or
orb
inc
jl
jns
mov
xchg
mov
mov
push
xor
divl
adc
push
mov
mov
pop
mov
sub
dec
rorb
movsb
dec
test
xchg
cmp
push
rcr
ds
pop
adc
inc
adc
hlt
hlt
pop
push
cmc
jns
in
pusha
dec
movsl
repz
cmpsl
jle
lea
push
cmc
fisttps
out
dec
cmpb
mov
ds
pop
pop
and
sbb
pop
inc
hlt
mov
hlt
mov
imul
lret
push
push
in
lahf
dec
shr
iret
lret
stos
frstor
cmp
add
push
inc
jge
outsl
jb
and
jnp
test
mov
out
add
pop
sbb
jp
and
pop
out
mov
ss
jmp
cmp
in
mov
test
in
mov
mov
incl
test
mov
pop
pop
adc
iret
fwait
into
dec
popa
pushf
shrl
mov
daa
push
leave
stos
in
std
js
cmp
add
out
jmp
in
or
jns
and
leave
mov
fwait
sbb
sbb
mov
repnz
movsl
or
ficomps
test
pop
mov
in
jg
shr
loope
pop
sbb
dec
popf
mov
pop
lcall
xor
into
cmp
cmpsl
adc
stos
dec
pop
add
xlat
sar
scas
in
mov
dec
mov
notb
pop
out
lret
fimuls
in
dec
inc
popf
popa
lret
js
inc
jns
js
jmp
mov
inc
pop
pop
ss
or
mov
jecxz
sub
mov
dec
mov
dec
sub
or
test
js
repnz
add
push
and
mov
add
aaa
xchg
imul
sbb
repnz
pop
iret
jo
jnp
sbb
lods
xchg
xlat
js
outsl
stos
shrl
jl
inc
xchg
fwait
adc
rolb
leave
dec
sbb
loopne
test
mov
xor
or
push
test
iret
ss
push
out
mov
adc
imul
lods
pop
push
sub
ss
xchg
lret
out
adc
aam
shrl
sub
cmc
mov
adc
hlt
mov
test
shll
jmp
sbb
scas
pusha
sbbb
add
ds
add
sub
std
inc
sarb
sub
mov
mov
jae
or
in
jecxz
clc
div
shrb
mov
pusha
pop
sbb
lahf
hlt
test
clc
loope
pop
das
repz
sbb
and
push
jo
fs
jno
mov
fsts
rcrb
loop
mov
jl
adcb
sbb
mov
or
inc
adcl
lret
rcrl
das
fiadds
orl
adc
test
xchg
mov
movhps
xchg
push
add
add
sbb
repz
jne
dec
test
test
inc
jp
or
out
cmpl
imulb
addr16
movsb
sti
jb
les
xchg
or
repnz
idiv
out
int3
adc
lods
addb
pop
outsb
adc
mov
inc
pop
ret
mov
mov
xor
jne
jle
or
pop
sub
mov
push
push
jge
sti
aas
ficompl
inc
popa
add
movsl
xor
insl
and
inc
adcb
leave
loopne
lods
xor
cmpsl
mov
xor
xor
roll
pop
or
or
imul
or
shr
jg
cltd
xchg
adc
es
mov
push
mov
xchg
and
or
rcll
aas
mov
push
and
push
mov
sqrtps
int3
addr16
clc
adcb
jg
loope
dec
inc
or
popf
adc
xor
jp
cmp
sti
mov
data16
pop
mov
ja
xor
add
arpl
sub
shl
dec
jecxz
jecxz
push
rclb
aas
mov
push
push
and
mov
test
and
jnp
jo
or
mov
or
mov
xchg
cwtl
popa
test
pandn
add
hlt
test
out
and
fimuls
enter
and
jo
fcmovne
xchg
fbstp
sbb
push
adc
out
insl
or
int3
repnz
pop
push
sub
js
outsl
mov
adc
mov
push
jne
bnd
pop
in
pop
pop
inc
fwait
pop
lahf
xor
test
mov
mov
xchg
test
sbb
xchg
sbb
sbb
repz
jl
mov
cmpsl
dec
das
cmp
stc
lahf
out
scas
aas
push
jecxz
pop
inc
jns
fstl
mov
jg
dec
xchg
cmc
out
mov
icebp
cmp
cs
pushf
je
ret
mov
cld
inc
ret
loope
xor
jge
lea
jge
add
enter
mov
jge
mov
mov
or
xchg
push
adc
pop
fnstenv
jnp
call
test
cmpsl
jb
mov
loop
int3
fs
outsl
popf
jle
ss
or
aam
push
ficoms
jns
mov
inc
mov
and
and
in
xchg
cmp
jae
add
les
mov
push
push
jbe
pop
mov
subb
mov
sti
mov
push
scas
pop
lahf
cmp
rclb
jecxz
fbstp
icebp
xchg
xor
cwtl
dec
or
jo
mov
cmp
shll
xchg
js
dec
adc
pop
xor
cli
mov
in
test
popa
cmp
scas
leave
cmpsl
push
mov
jp
fcomps
lcall
or
iret
lcall
popa
insl
cmpsb
lock
mov
dec
mov
cltd
sbb
xor
dec
dec
mov
or
je
adc
mov
orb
rolb
and
xor
sarb
sub
aam
data16
in
adc
inc
jb
xor
xor
xor
test
mov
insl
inc
outsl
and
and
jnp
xchg
mov
add
leave
jb
adc
adc
xchg
push
pause
or
sbb
and
movsb
test
mov
in
push
shr
ss
popf
and
adc
xchg
mov
negb
xor
ss
jns
fst
fildll
in
gs
cmp
dec
dec
arpl
orb
mov
sbb
mov
or
or
stos
fdivrl
and
sarb
adc
xchg
pop
orb
cmc
hlt
je
lcall
test
andb
lods
sahf
cmp
dec
loop
pop
fs
add
sahf
aam
movsl
outsb
xchg
inc
sub
fisttpl
mov
outsb
sub
cmp
bound
ret
jmp
popa
add
pop
mov
adc
sbb
adc
imul
out
xor
dec
mov
jae
xchg
ret
inc
movaps
sbb
imul
fwait
jno
hlt
add
in
cmp
mov
inc
insb
pushf
push
jnp
sub
or
inc
xchg
test
sbb
pop
dec
std
inc
jb
in
mov
repz
cmp
das
cmp
into
das
fbstp
in
insl
pop
stos
lcall
icebp
push
clc
int3
negl
in
call
rcl
pop
mov
rorb
or
add
xor
fnstsw
or
push
pusha
mov
cltd
in
popf
xor
xlat
in
xchg
and
mov
xchg
cs
sbb
cmp
pop
es
dec
cmp
push
xor
and
lods
mov
lret
nop
lods
ret
iret
stos
stos
sbb
popf
test
mov
mov
in
pop
add
aad
into
push
xor
or
mov
mov
fimuls
inc
test
int
inc
jl
lret
adc
scas
out
ret
iret
xchg
mov
je
fcoms
in
ja
dec
pop
xor
dec
and
xchg
jno
pop
or
inc
scas
add
jl
ja
test
push
or
xor
mov
pop
inc
bound
pop
aad
dec
xchg
mov
out
push
dec
and
push
push
push
sub
sar
pop
rcrl
jmp
push
mov
fucomp
lahf
ss
cli
out
cmp
insl
pop
cmp
rorb
mov
aaa
inc
es
cltd
inc
cltd
and
lock
mov
fisubrl
std
jle
ss
test
sbb
lods
dec
mov
fldl
scas
mov
sub
jb
sarl
mov
aad
pushf
int3
jbe
call
fcompl
faddl
and
mov
jnp
aam
pop
out
lret
jmp
lcall
mov
movsl
push
imul
dec
xchg
fldt
jb
xor
xchg
subb
frstor
or
divl
stos
mov
jmp
int
imul
scas
inc
lock
pop
mov
faddl
das
ret
pop
push
mov
inc
sub
sahf
adc
ret
push
popf
inc
into
inc
push
js
cmpsb
mov
fwait
nop
movsl
subl
cmp
jno
popa
enter
mov
xchg
gs
xlat
inc
shl
scas
add
add
or
psubd
scas
or
xchg
xchg
inc
push
orb
gs
in
fs
cmpsb
inc
xchg
sbb
xchg
push
enter
mov
shl
inc
push
mov
repz
test
inc
test
mov
sub
or
test
fildl
push
jo
ficomps
mov
testl
push
xchg
and
loope
sahf
jle
outsb
outsb
cmp
mov
push
stc
sbb
mov
inc
add
fdivl
mov
arpl
stos
test
popa
mov
dec
pop
enter
xchg
mov
aad
jbe
sbb
pop
mov
outsl
cmpsb
xlat
lea
loope
jne
xor
cli
aaa
cmc
sbbl
js
repz
es
stos
adc
shrl
jns
add
and
xchg
in
pop
fisubrs
int3
push
pop
pop
mov
xor
loop
add
out
repnz
xchg
mov
push
cmp
cmc
shlb
adc
xchg
jg
js
cmp
jp
cmpsl
adc
sub
mov
inc
pushl
into
adc
out
popf
scas
push
mov
fcoml
hlt
jno
cmp
sub
or
loop
lahf
sub
or
cmp
push
mov
outsl
loope
lahf
jecxz
xchg
adc
fwait
mov
mov
rcll
pop
fnstenv
ds
push
sbb
adc
out
pop
sbb
bound
mov
and
and
mov
scas
popf
inc
jge
out
ljmp
mov
cmp
es
scas
pop
fwait
out
sub
mov
rcrl
popf
repnz
repnz
sbb
fidivs
jbe,pt
outsl
out
fsubr
pop
jae
jp
mov
pop
out
pop
pop
pop
in
je
ror
std
mov
out
roll
into
xor
cmpsb
je
loopne
insb
out
push
sti
outsl
adc
sar
mov
sub
dec
pop
add
sbb
sti
add
clc
icebp
aaa
push
xchg
mov
dec
shr
bound
in
cwtl
or
hlt
jae
jnp
out
ljmp
fists
notb
fwait
bound
nop
jnp
std
cmp
ja
mov
roll
adc
out
cs
cmp
sub
ret
test
mov
mov
stc
adc
aam
ja
add
adc
rcl
call
icebp
shlb
jbe
xchg
scas
add
in
lds
add
fcmovbe
repnz
mov
mov
js
insl
and
insl
lods
sbb
mov
pop
rorl
adc
popf
insb
adc
cs
jae
cmp
and
or
lds
pop
fs
add
test
daa
in
sub
xchg
dec
out
into
stc
cmp
call
jns
sbb
imul
jae
out
movsb
cmpb
cwtl
insb
cltd
pushf
jno
dec
stos
or
mov
add
ret
add
enter
pop
clc
mov
dec
adc
cmp
mov
jnp
lods
fs
ffree
out
daa
aaa
xor
inc
sub
shrl
adc
scas
xchg
mov
sbb
cmp
sbb
xchg
jecxz
shr
bound
movsl
dec
jg
and
mov
cmpsl
mov
xchg
test
leave
shlb
xchg
add
fbstp
fstpt
movsb
enter
pushf
fidivl
fcmovnb
js
enter
popa
lcall
xchg
loop
insb
mov
insl
or
xor
mov
jno
cwtl
or
fsubs
push
popf
and
jg
mov
mov
xlat
push
xchg
mov
clc
ret
stc
add
jne
push
adc
pop
int
mov
repz
add
adc
fstp
adc
pop
iret
mov
pusha
or
adc
out
lret
jg
sub
inc
popf
std
jl
aam
add
in
xor
aas
add
cmpsb
lret
and
jnp
scas
add
pop
fsubp
lcall
adc
mov
mov
pusha
stos
sahf
adc
jnp
jp
mov
mov
mov
mov
xchg
add
mov
ret
mov
arpl
adc
or
rcl
xor
or
lock
inc
xchg
dec
jge
jecxz
and
addr16
xor
add
mov
cli
insb
in
inc
or
pop
fnstenv
xchg
add
adc
addl
ds
mov
push
mov
dec
dec
lds
pop
ficomps
mov
stc
dec
jmp
insb
push
dec
pop
lods
mov
push
out
in
scas
out
sti
int
push
adc
add
stc
or
dec
xor
nop
mov
mov
in
xchg
sbb
adc
repz
xor
inc
repnz
jo
or
sti
scas
mov
jns
jae
popa
clc
ret
addb
outsl
push
mov
add
sub
xchg
daa
jne
push
shl
mov
int
lds
cwtl
mov
into
lock
pop
xlat
nop
dec
popa
inc
mov
jmp
aad
push
popa
mov
xlat
icebp
test
sbb
mov
pop
push
fbld
mov
jl
cli
mov
cltd
movsb
jle
insb
adc
add
roll
les
mov
xor
mov
dec
mov
out
bound
sbb
mov
nop
adc
mov
ret
aaa
add
xchg
xchg
enter
mov
xlat
xor
fmull
sub
rorl
sub
cs
inc
mov
push
push
mov
cs
bound
inc
fldcw
push
in
int
fists
loop
lcall
int3
add
jns
mov
jno
dec
jl
bound
mov
xchg
call
mov
sbb
int
scas
lret
insl
leave
lret
int3
ja
or
arpl
pop
push
mov
mov
and
lcall
andb
jmp
fucomip
jl
sub
push
push
scas
loope
mov
mov
push
jb
sbb
fcoms
ret
lea
fisubrs
leave
sub
shll
scas
das
iret
rcrl
mov
mov
jno
loopne
outsl
std
mov
inc
fisubrl
in
lock
out
mov
push
mov
ss
fistpl
jns
lahf
sub
xchg
mov
lahf
mov
scas
and
sti
fs
pop
shrb
mov
ret
sbb
cli
bound
arpl
mov
dec
xchg
xchg
inc
pusha
pop
std
pusha
adc
mov
pop
cmp
js
pop
dec
inc
test
call
sbb
cmp
int3
ja
daa
push
js
xor
inc
loop
sub
inc
insb
adcl
sub
outsl
aaa
sbb
mov
or
inc
sub
sbb
or
mov
cmp
fcmovbe
rcll
int3
xor
movsl
sbb
inc
sarl
bound
xor
sub
xchg
push
dec
mov
jp
popa
int3
sub
xchg
lds
ds
js
pop
lea
mov
mov
cmp
and
jbe
mov
pop
xchg
mov
jecxz
cmp
mov
adc
fcmovbe
mov
stos
sub
repnz
xlat
pop
mov
out
ret
fbstp
or
lret
add
aaa
adc
xor
insb
fnsave
adc
add
scas
add
jecxz
rolb
or
imul
sbb
imul
sarb
or
icebp
sbb
wrmsr
jg
push
xor
gs
mov
or
das
vpshab
mov
jmp
hlt
insl
pop
or
and
inc
leave
shlb
inc
xchg
in
imul
sub
adc
sub
in
mov
dec
xchg
ret
add
jle
test
fcmovnbe
mov
scas
sti
insb
in
mov
sbbl
mov
xor
xor
lea
insl
mov
movsb
sbb
sti
jne
cmpsl
test
rcrb
in
mov
mov
fidivs
mov
pusha
mov
jae
call
call
addr16
jno
xor
sbb
or
xchg
push
out
push
cmp
pushf
xchg
stos
loopne
cmp
dec
stos
ret
int
shlb
pusha
cmp
jecxz
call
xchg
inc
clc
push
cmp
clc
push
push
scas
cmp
cld
pop
push
mov
and
dec
call
into
fnstcw
push
aam
pop
leave
dec
mov
das
adc
add
fistpll
stos
inc
test
jmp
push
sbb
dec
jge
hlt
lea
push
repz
je
aad
jb
andb
imul
mov
adc
ret
inc
scas
and
mov
add
adc
or
jnp
or
clc
xchg
fadds
push
cltd
cmp
ds
test
dec
movsl
dec
daa
aaa
stos
pop
push
mov
sbb
sti
jmp
or
shll
xchg
jg
std
loopne
mov
shll
repz
xor
push
pop
les
mov
mov
insl
call
cmp
rolb
dec
leave
popf
popf
call
cmpsl
mov
cmovne
stos
mov
xchg
xchg
subb
sub
movsb
test
sub
int
or
popa
outsb
xor
sahf
fists
sahf
mov
sbb
pop
jno
and
and
dec
xor
pop
idiv
dec
or
pop
push
loop
jb
inc
add
insb
jge
imulb
mov
mov
mov
dec
int
fistpl
jno
in
mov
fisubs
xor
inc
pusha
adc
add
jmp
imul
std
scas
lret
sbb
out
sbb
cmp
adc
or
jmp
adc
adcl
scas
cmc
in
call
and
dec
into
imul
sub
pop
mov
or
sbb
outsb
lahf
test
xor
aam
sbb
fimull
inc
orl
test
fdivs
inc
pop
sub
jecxz
mov
adc
mov
or
push
jp
push
adc
data16
mov
mov
insl
mov
in
dec
sbb
js
xchg
arpl
cld
and
mov
jecxz
cmp
xchg
loop
push
popf
mov
or
push
mov
and
xchg
mov
shl
adc
cs
mov
mov
rolb
hlt
jae
or
inc
pushw
adc
push
in
leave
out
xorl
aas
push
cltd
movsl
xchg
sub
nop
sti
out
repnz
ret
leave
pop
jl
ljmp
notl
insb
filds
shlb
mov
in
jnp
sub
stos
jno
std
pop
sub
adc
cwtl
push
lret
faddl
in
mov
sahf
jg
mov
inc
incb
pop
mov
rcl
sbb
leave
mov
adc
out
jmp
clc
mov
dec
lret
pop
mov
lcall
je
jo
lret
jbe
mov
sub
sbbb
cmpsl
mov
loop
sub
cmp
jns
pop
out
xor
adcb
sbb
mov
movsb
sbb
xchg
pop
ja
data16
into
or
test
jge
lret
add
fsubp
adc
sub
mov
push
jge
test
xchg
and
jmp
mov
mov
xchg
adc
fwait
mov
adc
mov
pop
loope
and
or
xchg
jle
sbb
rclb
xchg
pop
insl
jge
mov
push
pop
pop
push
jno
xchg
mov
add
aam
test
out
rolb
mov
call
mov
pop
mov
pop
mov
lods
adc
sahf
sbb
subl
test
mov
add
out
adc
pop
cmp
pop
sbb
dec
popa
mov
pop
out
and
add
movsb
add
dec
lahf
iret
inc
movsl
arpl
icebp
mov
mov
or
and
lods
pop
scas
mov
mov
inc
enter
lods
js
xchg
sbb
or
xchg
sub
lea
inc
xor
pop
push
mov
xchg
out
jle
or
pop
mov
sbb
imul
into
je
rcrl
sub
xorl
shll
lds
lds
or
cmp
or
fidivrs
push
mov
rclb
aad
sbb
adc
mov
jge
xor
push
insl
ljmp
mov
pop
jb
arpl
xchg
movsl
movsb
roll
xor
fisubrs
lods
int
loopne
rorb
push
push
sub
push
imul
or
mov
pop
cs
jns
pop
or
pop
mov
fndisi(8087
idiv
dec
lret
movsb
jmp
push
test
push
cli
xchg
mov
mov
adc
and
pop
out
sub
jb
ja
mov
addr16
jmp
mov
lahf
movl
mov
mov
lcall
inc
mov
mov
xchg
xor
stc
out
mov
cltd
pushf
xor
sbb
lods
sub
std
sub
adc
jo
pop
mov
push
inc
sbb
sbb
add
push
inc
mov
cmpsb
aam
out
int
out
sub
int3
mov
ret
test
iret
mov
stos
jo
mov
sub
cmp
push
fsts
mov
pushf
lea
lock
add
inc
fxch
fcmovbe
outsl
shll
cmc
xor
add
add
xor
push
pop
cmp
mov
dec
or
pop
stos
popa
sahf
std
movsl
out
fs
gs
adc
or
cld
pop
stos
ja
sarb
in
pop
pusha
stos
push
out
sbbb
aaa
ljmp
out
out
or
popf
mov
xor
loop
sbb
jmp
or
lds
out
sbb
lcall
je
loopne
dec
daa
xor
inc
mov
push
push
pop
fbstp
mov
ret
mov
push
ja
sbb
ljmp
sahf
add
roll
or
mov
adc
sbb
push
fwait
pop
data16
push
inc
sbb
or
cltd
dec
fimull
push
push
cmp
dec
fs
pop
xchg
in
andl
pop
jmp
mov
add
rcrl
add
or
mov
lock
xchg
push
sbb
mov
cmp
push
or
xchg
mov
cmpsb
icebp
mov
push
scas
fnstcw
jbe
adc
icebp
popa
push
cmpsb
and
add
xlat
jge
lods
idivb
fstp
add
mov
xor
hlt
in
sbb
imulb
mov
jns
xor
push
stos
mov
dec
xlat
sub
push
jmp
out
shlb
jecxz
addr16
xchg
adc
shll
out
mov
ljmp
or
mov
add
mov
xor
mov
hlt
lods
lcall
mov
out
movl
imul
push
dec
xchg
mov
scas
in
aad
stc
clc
push
lahf
inc
in
in
std
ficoms
add
inc
mov
fisubrs
xchg
jg
mov
iret
fstpl
cmp
aad
cmpsb
dec
arpl
mov
cmc
mov
cli
imulb
enter
sti
pusha
lods
cmpsb
loopne
sti
fiaddl
stc
ljmp
stos
xorl
cltd
inc
push
dec
out
mov
gs
push
pop
int3
fistps
in
jmp
mov
xor
push
and
sub
xlat
add
lcall
xchg
add
in
cli
xor
and
sbb
or
test
sbb
aas
mov
aaa
movsl
cmpsl
outsb
lret
pop
and
sub
inc
add
add
dec
sti
push
mov
sbb
jmp
push
jb
hlt
pmulhw
in
cmp
int3
xor
scas
sbb
shrl
rorl
jb
or
cmp
fnsave
pop
or
js
jb
xchg
push
add
aas
xchg
rorb
mov
fdivrp
mov
mov
mov
sbb
insl
loopne
mov
fcmovbe
mov
and
dec
mov
add
ss
cmp
add
ljmp
jg
push
sbb
dec
mov
adc
push
ficoms
push
loop
or
lret
jmp
jge
add
adc
lods
mov
je
inc
mov
stc
in
mov
dec
in
into
or
cmpl
push
mov
mov
push
push
clc
sub
loop
cltd
divb
ja
pop
mov
cmovnp
shlb
imul
add
lahf
jbe
loopne
add
mov
aam
mov
sahf
jl
pusha
int3
lcall
add
out
fisttpll
aad
jg
sti
xchg
popf
and
test
xor
lret
adc
and
mov
push
mov
cmc
cltd
mov
push
mov
in
dec
out
jp
and
mov
jo
dec
repnz
cmp
xor
call
inc
inc
pop
sub
je
sub
in
std
das
dec
out
sbb
or
xchg
popa
pop
mov
sbbl
popf
xor
push
subl
push
test
imul
fistpl
cmc
stos
pop
cmp
cmp
bound
jg
xchg
mov
adc
sbb
leave
xor
mov
and
repz
push
sti
lods
jmp
int
cmp
xor
cmp
push
push
cli
cwtl
adc
bound
popa
xchg
push
mov
cmp
sbb
cmc
xchg
je
jbe,pn
xlat
lods
and
dec
sub
aas
cmp
lret
jle
cmpsl
loop
push
cmp
out
icebp
inc
xchg
ds
cmp
cmc
fists
cmp
pop
lds
lock
mov
ds
or
jecxz
xor
pop
sub
loop
sbb
repnz
mov
jae
mov
or
stos
inc
lcall
pop
mov
or
scas
pop
dec
mov
mov
lcall
int
fistps
shufps
jns
clc
inc
xchg
inc
cltd
sbb
inc
inc
push
xor
jo
xchg
lods
inc
jo
cmp
jp
or
test
test
mov
add
xchg
fildll
pusha
sub
add
add
stos
push
jl
jae
sbb
xor
or
out
js
xchg
add
jmp
pushf
test
mov
push
out
sbb
and
fimull
lahf
mov
mov
mov
mov
inc
addl
stos
push
inc
imul
lods
cmp
mov
lock
lahf
push
xor
fisubl
rcrb
sub
push
jnp
sbb
imul
push
sahf
mov
fcmove
out
xor
or
lods
jns
mov
push
scas
xor
jbe
iret
in
cmp
out
pop
sub
orb
aam
loop
je
sbb
sbb
rclb
and
stos
lcall
add
mov
jmp
push
les
outsl
pop
mov
inc
xor
in
mov
or
mov
xlat
aad
xchg
or
pop
cmp
fs
sub
sub
idivb
mov
xor
pop
xor
push
cmp
lock
adc
xchg
lret
mov
mov
jns
mov
and
outsb
pushf
dec
jo
hlt
lcall
fnstsw
sub
cltd
int
add
loop
jle
mov
xor
jl
clc
push
inc
jo
and
jg
sub
loopne
xchg
xorb
sbbl
xor
push
cmp
jmp
cmp
jne
inc
fnstenv
stc
mov
hlt
lret
xacquire
pop
cltd
movsl
cli
movsb
mov
cmp
sub
jecxz
cmp
xchg
xor
rorl
jns
negb
mov
les
dec
insl
push
mov
pop
pop
lahf
or
pushf
into
jge
not
xor
jmp
jb
xor
add
sub
mov
adc
mov
das
jecxz
in
xchg
sahf
inc
adc
xlat
mov
lcall
lahf
stc
sub
mov
xchg
and
insl
dec
dec
cmp
sbb
pusha
xchg
jne
cmp
fsubl
xor
pop
sbb
stos
shlb
into
lock
or
cwtl
insl
and
xor
sub
push
mov
jge
int3
addr16
orb
mov
fbstp
pop
fstl
cmp
out
jle
xchg
mov
jecxz
scas
mov
cmp
je
sbb
into
jg
pop
jl
mov
inc
daa
sub
xchg
in
out
pop
jns
pop
xchg
or
dec
xor
xor
pop
aam
pop
rorl
pusha
mov
nop
xchg
push
jg
mov
xchg
push
inc
xchg
ror
lea
sub
push
in
cmpl
and
ja
ja
push
flds
std
inc
lret
cmp
test
push
daa
or
daa
adc
or
xor
add
mov
pusha
scas
push
push
xor
gs
cmc
scas
lods
lods
xchg
push
rorb
lods
imul
pushf
jge
and
popa
shrl
icebp
sbb
icebp
pop
pop
adc
and
xchg
lds
sti
cmc
sub
cli
movlps
mov
push
aad
add
pop
jl
je
add
sarb
pop
dec
xlat
aad
jp,pt
push
pusha
aas
and
addr16
dec
inc
push
loope
loop
out
jno
clc
incb
sub
inc
test
cmpsb
out
or
dec
mov
cmova
pushf
xor
sub
cmp
push
adc
popa
roll
js
outsb
cmc
popa
cmp
enter
or
add
inc
cwtl
stos
push
cmp
xlat
jb
cld
xchg
mov
cmp
loop
out
popf
add
push
cs
test
movsb
adc
inc
in
mov
xchg
lods
mov
out
mov
aaa
pop
rcrb
jb
std
test
out
in
or
pop
mov
in
dec
iret
lahf
jl
sahf
stos
aaa
popf
jecxz
or
jo
ss
sub
adcb
repz
adc
loop
jno
ds
psubw
inc
jl
cwtl
adc
cwtl
mov
clc
cmp
xor
lcall
cld
ret
inc
sbb
mov
leave
repnz
inc
int3
push
scas
inc
sbb
pop
fisubs
push
xorl
bound
inc
jl
mov
jb
push
test
jmp
ds
ret
pusha
cwtl
mov
dec
sub
sti
insl
test
xlat
bound
pop
inc
inc
cmp
loope
xor
dec
test
xor
mov
xchg
mov
ret
mov
imul
or
pop
sub
ss
and
xor
filds
or
jb
push
jbe
pop
mov
idivb
sbb
sub
push
or
xchg
cmp
or
sysret
or
add
imul
dec
insb
pop
daa
stos
sbb
mov
and
mov
popa
pushf
pushl
clc
xchg
sar
movw
bt
inc
lea
test
sub
pushf
movw
movb
xchg
pushf
mov
jmp
pusha
jmp
rcr
and
mov
bt
stc
and
call
outsb
mov
outsb
push
or
xchg
add
add
std
sub
scas
pop
cli
rclb
ja
cld
add
cmp
mov
popf
mov
icebp
mov
add
dec
dec
add
fimull
dec
jns
mov
sub
pop
das
outsl
popf
xchg
mov
ljmp
adc
out
fdiv
adcb
add
jbe
xlat
jmp
xchg
jle
inc
jp
inc
pop
insb
pop
cmp
ljmp
push
inc
ret
xchg
and
ret
lcall
push
in
push
leave
push
mov
sbb
imul
inc
jl
out
mov
cs
sti
mov
in
cmp
in
js
shlb
mov
adc
cmc
inc
rcrb
imul
xchg
out
cli
xor
mov
cmpsb
loopne
lods
ds
aad
mov
mov
gs
aad
jp
repz
shll
cmpsb
les
hlt
bound
xchg
push
adc
push
cmp
mov
in
lds
mov
nop
int
sub
jnp
jl
mov
fdivp
pop
xchg
xor
fpatan
add
mov
das
leave
mov
jecxz
sldt
pusha
bt
cmp
add
pusha
push
lea
jmp
pusha
lea
jae
neg
add
not
shl
pop
clc
sar
pop
not
and
mov
bsf
bsr
cmp
movzbw
pusha
call
or
mov
pop
sar
jg
push
repz
icebp
or
pop
out
std
sub
js
push
push
sbbb
add
inc
dec
sbb
stc
pop
pop
jl
std
pop
push
xor
cmpsl
add
sbb
in
fistl
inc
push
and
pop
mov
cmc
in
jl
push
jbe
in
lds
adc
dec
movswl
xor
sbb
sbb
xchg
loop
fwait
aas
mov
sbb
dec
jp
imul
iret
data16
lods
cmp
adcb
leave
in
push
bt
cmc
lea
add
call
leave
sbb
ss
cmp
ja
fwait
mov
jb
jae
ret
mov
adc
aam
ret
sbb
sbb
repnz
add
out
sub
popf
fdivrp
outsb
xor
aam
insb
jae
fistl
in
push
lods
fistpll
xchg
sbb
jb
call
mov
insl
push
es
xchg
lret
xchg
sbb
and
add
and
aas
inc
leave
out
fstl
pop
int3
inc
lret
inc
divb
out
pop
test
lods
shlb
aad
dec
fstpt
movsb
rcll
mov
jp
pop
popf
mov
pop
push
and
stos
js
lret
in
imul
es
sbb
aad
pusha
push
lock
mov
sub
cmp
test
jmp
sub
adc
sbb
xchg
lcall
popf
jns
pop
cli
leave
xchg
cmp
push
es
inc
add
push
jnp
jb
pop
lahf
push
ret
cmpsl
into
adc
aas
push
ljmp
bound
lea
mov
pusha
ja
and
daa
mov
push
mov
jmp
lea
jb
movsbw
rcl
mov
pushf
cmp
movsbl
test
mov
jmp
and
shrb
lret
das
scas
fs
call
cmp
es
or
ds
cmp
xchg
xchg
push
cmpl
push
mov
fs
mov
inc
mov
mov
sbb
testb
sarb
loope
adc
mov
lea
mov
xchg
lock
inc
mov
mov
cld
jbe
sub
sbb
sub
outsb
loope
or
mov
daa
mov
test
popf
pop
pop
pop
insl
test
movsbl
and
dec
lea
pusha
cmp
sub
jmp
call
pushf
call
fstl
add
inc
cmpsb
cmpsb
loopne
sti
xchg
mov
push
scas
les
mov
push
add
pop
js
xchg
aad
mov
push
enter
int3
mov
out
call
mov
jecxz
jmp
adc
loope
hlt
sti
sbb
decb
dec
push
push
sub
add
jecxz
loope
test
add
xor
pop
sub
pushf
sub
xchg
jmp
cmp
mov
jmp
imul
cmc
add
push
pushf
lea
jmp
cmp
push
pusha
cmp
pushl
call
lea
mov
js
sub
enter
and
shl
mov
fdivr
in
sti
mov
adc
inc
adc
leave
jmp
and
add
add
push
mov
mov
ret
scas
jg
mov
jnp
push
xchg
xlat
push
or
fstl
sbb
out
daa
mov
clc
xchg
insl
pop
jns
in
mov
fsubrs
sbb
sbb
fisttpll
testl
add
js
add
sub
lahf
movzbw
jmp
cmc
cmp
sub
jmp
cmp
mov
xchg
lods
dec
mov
imul
mov
mov
mov
xchg
mov
add
cmp
aaa
in
loop
push
movsl
mov
mov
pop
ja
and
jno
jbe
and
inc
and
lea
je
mov
lea
pushf
pusha
lea
call
pusha
adc
push
jmp
mov
pushl
jmp
js
mov
ss
mov
mov
mov
popl
xchg
push
lea
jle
je
cs
arpl
lahf
orl
rcr
mov
pop
out
dec
cld
xor
push
pop
jb
stc
mov
out
jbe
sbb
or
das
aad
push
sbb
popa
cmc
or
aaa
aad
jle
mov
roll
sub
into
repz
mov
lea
add
aas
mov
stos
cmp
inc
data16
cmpl
scas
push
call
testl
cld
mov
sbb
ficomps
xchg
push
fisubrs
enter
std
dec
jle
int3
mov
adc
pop
dec
inc
outsl
fisubs
xor
inc
rcll
mov
enter
fs
inc
shr
sub
mov
roll
xchg
das
and
imulb
scas
in
pop
pushf
cmp
pop
jbe
push
xor
pop
and
ret
xchg
push
or
in
loopne
js
and
in
cltd
xor
adc
xchg
xchg
aad
jo
addr16
ret
pop
xchg
and
mov
outsl
imul
notl
aad
mov
fwait
mov
cltd
aas
push
test
test
or
sbb
mov
xchg
jne
xor
test
xorl
dec
xchg
jmp
in
cmp
add
pop
push
ret
popa
outsb
lea
adc
es
addr16
jbe
loope
js
and
jno
sub
cmp
cmp
sbb
or
push
xchg
add
fnstsw
sbb
sbb
sarb
sub
push
in
sub
call
add
xlat
imul
lret
or
add
push
add
mov
sahf
les
push
sarl
inc
test
xchg
and
fadds
dec
gs
aam
js
ret
mov
inc
pop
ljmp
or
fs
enter
jecxz
mov
clc
stc
cmp
jmp
mov
movw
cmc
mov
cmc
add
stc
cmp
mov
jmp
ds
sub
cli
jecxz
jl
mov
leave
mov
jne
pushf
insl
xorb
xor
sbb
xchg
jl
ljmp
iret
jg
cmc
das
imul
je
cmpsl
cmp
cld
or
aad
test
insb
lods
js
mov
cs
movsl
pop
das
adc
adc
push
pop
loopne
xchg
or
mov
cmp
mov
out
xor
adc
lods
push
lods
add
dec
ret
in
mov
inc
mov
sub
adc
or
fcoml
mov
dec
dec
inc
mov
int
adc
aad
sub
daa
push
mov
jne
or
sbb
mov
lods
push
stc
xchg
jp
adc
ret
sbbl
dec
pop
cmp
lret
pop
pop
sub
and
add
inc
and
out
mov
mov
pushf
movb
pushf
push
lea
jmp
mov
pusha
jmp
push
mov
sbbb
xor
sub
add
sbb
test
xchg
cld
aam
mov
mov
xchg
rol
pop
out
dec
lret
push
fucomp
mov
xor
xchg
mov
xchg
push
mov
or
xor
in
cmp
aas
sub
sub
cmc
pop
cmpsl
cld
jns
pushl
xchg
xchg
mov
lods
or
int3
loope
inc
jne
mov
xor
icebp
mov
adc
pop
ss
int
jns
sbb
inc
and
lea
jae
cmc
call
lret
mov
xchg
arpl
aaa
pop
aas
jns
push
ss
repnz
roll
cmc
pusha
rcll
jo
leave
adc
pop
mov
stos
cs
dec
pop
das
lcall
or
cmp
xor
push
mov
std
mov
ud0
inc
pop
das
flds
repz
xchg
in
out
adc
xor
rcrl
pusha
pop
and
cmpsb
xchg
in
data16
pusha
stos
push
fsubrs
lahf
xor
outsb
mov
leave
mov
pop
mov
clc
adc
js
insb
jb
mov
out
les
xor
cmp
inc
out
cmp
push
adc
mov
pushf
mov
pop
mov
in
jbe
call
dec
cmp
js
jae
in
jl
push
xchg
fucomi
rcrl
cs
lods
sti
add
icebp
lret
jmp
popl
xchg
cli
fidivrs
jg
shl
mov
rorb
mov
xchg
dec
ret
je
mov
xor
or
out
mov
cs
arpl
mov
enter
xchg
les
push
stos
add
add
inc
js
je
jb
arpl
jae
mov
pusha
push
stos
push
pushf
lea
jmp
jmp
movb
xchg
bswap
bswap
push
movl
pusha
pop
push
movsbw
lea
call
lea
jb
cmp
btc
shl
mov
setne
mov
lea
mov
jmp
pushl
mov
pushl
lea
jmp
call
pushl
jmp
push
jmp
jb
adc
ror
shrd
aas
mov
cmp
clc
bt
bt
sub
mov
mov
mov
pushf
pusha
stos
movb
movb
pushf
lea
jmp
pop
movsbw
mov
pusha
jmp
push
push
mov
mov
mov
shl
lea
call
adc
sub
jne
mov
sub
pop
pop
ret
adc
call
mov
call
mov
jmp
cmp
jmp
dec
mov
and
add
lahf
mov
out
adc
mov
xor
loope
ror
lcall
pop
jbe
std
xor
push
dec
fwait
sub
and
cli
dec
inc
xchg
sti
cmp
test
sarb
dec
mov
enter
jno
inc
cwtl
repnz
or
mov
or
rcr
mov
ja
stos
sbb
scas
shrb
jno
mov
nop
test
pop
pop
out
cmp
out
insb
xor
cs
insb
add
cmpsb
mov
stc
sbb
jo
xchg
fmul
dec
pushl
leave
or
push
mov
rolb
push
or
lret
pusha
dec
enter
push
lods
jp
jb
outsb
lods
sbb
dec
inc
aam
sbb
cmp
cs
test
mov
and
inc
jge
icebp
sub
jno
inc
pop
or
pop
fmull
cli
and
mov
jg
ret
push
cs
add
pop
sbb
cmpsl
pop
jns
imul
shlb
xorl
insb
pop
mov
sbb
push
mov
cli
std
lods
pop
push
lods
mov
fldcw
xor
and
jl
mov
pop
xchg
mov
lock
mov
hlt
fisttps
jmp
xor
mov
pushf
movb
mov
pusha
pushl
ret
pushf
push
movl
pushf
movb
call
sbb
xlat
cmpsb
js
iret
mov
mov
inc
imul
inc
push
jns
stos
movsl
mov
ficoml
outsl
repz
lret
test
xlat
je
out
or
scas
jle
dec
xchg
std
xor
mov
jecxz
mov
lahf
xchg
add
out
mov
or
ret
add
add
stos
jb
mov
mov
pushf
lea
je
push
cmp
stc
bt
add
pusha
pusha
cmc
cmp
call
pusha
pushl
movl
pushf
lea
jmp
cmpb
jne
shll
shll
push
lods
add
rol
sub
neg
mov
pop
ret
lea
ja
jmp
hlt
cli
pop
cmpsl
js
inc
pop
cmc
xchg
xor
iret
jno
jae
sub
repnz
int
mov
leave
mov
sahf
push
jnp
hlt
cmp
icebp
sub
jb
push
nop
inc
or
shll
push
and
gs
adc
inc
repz
test
cmp
in
test
xor
add
pop
test
pop
ja
and
and
jle
jg
or
scas
push
call
jae
add
call
jb
mov
shl
lea
call
add
pop
ret
pushf
adc
pushf
mov
pushf
jmp
scas
xor
aaa
ds
jne
in
outsb
int
cs
xor
ss
mov
cmp
fiadds
sbb
fucomp
popf
in
popf
loope
dec
xchg
push
mov
lock
js
fsubr
or
sub
pop
jno
ret
jns
cmp
jo
xchg
jae
jecxz
mov
cmpsb
daa
push
jae
ljmp
mov
inc
movsb
mov
xor
cmp
mov
sti
pushl
push
mov
push
inc
pop
jge
movsl
xor
or
dec
mov
imul
mov
push
scas
ds
mov
cwtl
mov
xlat
in
es
mov
ss
std
add
xor
pop
or
subl
mov
inc
jae
dec
addr16
ret
xchg
push
or
std
xchg
out
int3
jge
mov
imul
push
lahf
jg
push
cmp
dec
imul
out
xchg
push
outsl
daa
repnz
push
xchg
jne
cwtl
dec
cs
dec
xor
push
push
stos
in
cld
ret
and
imul
adc
pusha
cltd
mov
mov
pop
inc
inc
push
inc
inc
scas
out
cmpsb
fstl
add
lret
pop
outsl
mov
mov
loopne
bts
insl
in
and
mov
add
mov
stc
pusha
cmpb
movb
call
adc
adc
cld
jg
add
xor
insl
fs
cmp
or
inc
pop
rcrb
dec
xor
enter
scas
pop
pop
jmp
scas
ffree
push
dec
or
mov
cltd
stos
popa
jns
and
fcom
cmpsl
js
test
and
sarb
sbb
mov
and
repnz
faddl
mov
and
das
cmpsb
scas
push
add
imul
rcl
mov
mov
xchg
xor
outsb
push
add
adc
and
aas
hlt
loop
sbb
xlat
push
pop
shll
sbb
sub
cmpl
and
xorb
cwtl
sbb
inc
in
test
imul
stos
xchg
bswap
movzwl
call
out
pop
sarb
adc
push
jae
cs
xchg
lret
push
shlb
scas
mov
dec
xor
sbbl
outsl
or
or
pop
ja
push
inc
push
orl
scas
bound
fcmovnb
xchg
sar
aad
stos
pop
mov
mov
pusha
int
fistl
aam
sub
cmc
scas
out
aam
call
xchg
mov
push
xor
xchg
mov
mov
mov
xchg
mov
movsbw
call
mov
mov
js
push
push
repz
or
call
arpl
xor
lods
push
imul
inc
sbb
outsl
dec
add
in
push
mov
cli
cld
xor
leave
pop
jnp
mov
int3
or
pop
jb
mov
or
rcrl
inc
adc
lahf
or
ds
repnz
cmp
push
xchg
stos
sbb
push
dec
es
dec
jmp
cmp
incb
mov
fidivl
movsl
aaa
dec
out
xchg
aam
adc
jne
in
js
adc
inc
and
imul
lea
jne
pushf
mov
add
pusha
sub
shl
pusha
test
lea
cmc
mov
sub
bt
pushl
popl
bt
cmp
mov
push
pushf
call
pusha
movl
movb
movb
pushl
popl
push
pushf
push
pushl
ret
call
rep
call
sub
pusha
pushf
repnz
push
jmp
not
movw
pushl
call
add
mov
adc
push
sub
inc
lahf
divl
xor
je
rcl
xor
daa
xchg
mov
jecxz
xchg
test
sbb
rolb
popa
add
pop
xchg
jmp
jns
pop
fnsave
adc
jecxz
mov
lea
adc
mov
or
pop
inc
jle
mov
das
jnp
dec
mov
jmp
dec
or
pop
stos
sahf
adc
scas
xchg
int
shl
or
sub
out
add
std
insl
negl
ss
enter
push
imul
mov
hlt
out
sbb
stos
js
loope
insb
pusha
lahf
mov
xlat
jb
cmpsb
mov
in
js
mov
xchg
dec
mov
dec
addr16
clc
adc
js
cmp
and
mov
cli
lds
popf
mov
and
mov
and
in
xchg
stos
les
lcall
loope
pop
cmp
or
lock
jmp
dec
fidivrs
mov
mov
sahf
jg
ja
mov
cmp
scas
jns
dec
fwait
jg
sbb
cmp
test
call
jg
cmp
pop
jmp
pop
fisubrl
mov
shl
mov
push
sbb
hlt
dec
cmpb
cltd
lods
jo
pop
dec
push
es
cmpsl
loopne
push
mov
divb
aas
push
mov
adc
les
add
and
sti
or
sub
xchg
out
jmp
setae
bswap
mov
push
xchg
mov
call
call
bswap
pop
mov
movb
lea
jb
rcr
clc
das
cmp
pushf
movsbw
mov
mov
pusha
pushf
call
pushf
movl
jmp
or
push
mov
out
mov
push
icebp
mov
lea
push
daa
push
and
shlb
mov
cwtl
sti
out
or
push
cmpl
jmp
mov
xor
dec
sub
adc
out
adc
sbb
ds
je
mov
xchg
jns
ret
xor
testb
lea
cmp
cli
mov
pop
xor
ret
add
bt
mov
sets
mov
call
pushf
sub
pusha
lea
call
inc
mov
pusha
clc
stc
bt
shl
test
push
pusha
add
not
lea
jmp
test
not
mov
pushf
pusha
pusha
lea
je
lea
lea
push
lea
call
jmp
push
test
mov
ja
leave
ljmp
xchg
sub
inc
mov
js
xchg
mov
push
leave
dec
popf
mov
js
cmc
xchg
icebp
push
shl
call
jne
and
dec
aaa
mov
cmc
in
sub
inc
cmpsl
mov
scas
stos
pop
xchg
aad
sub
and
cmp
mov
enter
movsl
rcl
call
aas
push
or
sbb
pop
push
pushf
push
pushl
ret
movl
pusha
push
movb
mov
lea
jmp
call
lea
jne
mov
lahf
movb
cwtl
push
bswap
pushf
lea
push
push
movl
jmp
pushf
movb
mov
pushf
call
or
shl
xchg
xor
mov
xchg
and
popa
cli
adc
xor
adc
aas
mov
pop
and
dec
daa
jle
sbb
cmp
jb
call
fisubrl
push
cmp
and
cmp
pop
push
sbb
pop
and
insl
pop
xor
dec
pop
cmpsb
call
mov
stos
lcall
xchg
ljmp
jnp
cmp
pushf
jmp
jg,pt
mov
cmpsb
cmp
repnz
push
sbb
or
pushf
jmp
lea
jne
ror
sub
bsf
mov
mov
add
shl
not
mov
clc
bt
pushf
test
jmp
lret
mov
cmovne
and
pusha
and
sub
or
cmp
cltd
pop
test
xchg
bound
clc
cwtl
lock
and
nop
sub
xchg
add
pop
jne
aaa
and
sbb
push
push
sbb
push
xchg
imul
xlat
insl
add
aaa
enter
mov
insl
repz
cmpsl
fiadds
pushf
movb
movl
pushl
ret
dec
xchg
dec
imul
scas
js
or
lret
xchg
xchg
and
mov
lods
imul
adc
fistl
jp
cmp
pop
sub
push
in
ja
fs
test
out
jp
out
fmulp
test
sbbb
sub
push
mov
outsb
aaa
or
mov
fmuls
sarb
push
scas
nop
jbe
outsl
jns
into
das
sub
js
mov
aam
jge
mov
push
call
inc
je
pop
pop
test
lds
xchg
mov
lods
or
adc
mov
aad
rcrb
addr16
cs
push
xchg
shr
jnp
mov
sbb
daa
jns
in
adc
aas
and
jmp
pop
insl
or
xor
mov
lock
lea
je
sbb
sub
rcr
mov
sbb
mov
add
test
shr
adc
inc
mov
pushf
stc
bt
or
pusha
push
push
call
movb
pushf
jmp
setg
pushf
mov
mov
pusha
pushf
jmp
push
lock
std
std
mov
inc
ret
jl
xchg
push
iret
leave
fildll
addr16
mov
pop
push
ss
aaa
int
jl
in
cmp
cmpsl
and
aam
pop
leave
add
jecxz
and
pop
test
mov
add
adc
in
xchg
push
push
mov
cmp
iret
js
jb
adc
jmp
adc
inc
pushf
xor
cmp
test
cmp
test
test
pusha
pushf
not
mov
call
mov
btc
mov
shld
rcl
add
jle
mov
pushf
mov
pushf
movb
pushl
ret
dec
push
sub
add
push
add
sub
lods
js
insb
and
lods
xchg
xchg
js
lret
int
sub
push
mov
cwtl
insb
add
mov
xchg
data16
push
call
pop
popl
les
leave
mov
mov
pop
xchg
xor
sub
cmp
fucomip
mov
xrelease
or
push
cmp
push
sub
fidivl
xchg
mov
fldt
mov
sub
shlb
scas
mov
dec
out
mov
out
sub
outsb
pop
push
lcall
out
iret
adc
xchg
out
lock
scas
sub
ljmp
sti
xor
test
in
in
mov
jecxz
stos
mov
sub
inc
loop
cwtl
adc
jge
call
dec
and
mov
stos
std
sbb
sbb
int
jb
fs
adc
lods
repz
adc
js
mov
sbb
dec
icebp
push
mov
sub
sarl
rcl
gs
gs
pop
and
mov
popf
imul
cmp
and
or
psubd
loopne
adcl
inc
cld
xchg
imul
jnp
imul
mov
cmp
jg
and
sub
add
dec
cmp
int
fsubr
stos
mov
sub
dec
insl
sti
xchg
in
mov
loop
fcomi
call
stos
add
lock
cs
lods
insb
int
sub
loope
or
popf
fisubrs
aaa
cwtl
lods
popf
dec
fs
or
mov
sub
enter
dec
push
inc
jno
ljmp
rclb
cwtl
and
or
pop
pop
js
jns
add
stc
or
cmp
push
sub
jp
pushl
pushl
call
adc
lea
jne
pushf
lea
jb
push
cmp
call
jge
jmp
js
sbb
mov
jns
aaa
fidivl
imul
sbb
cmovs
mov
push
lods
jp
pop
sti
sarl
fnstsw
in
pop
das
mov
push
mov
jmp
shrl
lcall
push
daa
cmp
incb
adcb
add
movsbw
shld
aas
xadd
mov
mov
not
dec
shld
mov
push
test
cmp
shl
movw
lea
call
lea
call
pushf
pusha
xchg
pusha
lea
jae
lea
xchg
lea
movsbw
movsbl
mov
pushf
pushf
cltd
mov
lea
pusha
not
lea
pushf
lea
call
pusha
bt
pusha
stc
cmp
jmp
movzbl
mov
call
cmp
addl
data16
popf
mov
sbb
aaa
stos
xor
mov
aam
cwtl
testl
jo
add
and
mov
and
or
push
cmp
cmp
mov
lret
test
adc
mov
xor
pop
push
mov
lods
stc
dec
jecxz
js
sti
adc
xchg
lret
jmp
lret
jge
pushf
mov
push
jae
xchg
imull
aaa
scas
xlat
in
or
xchg
cmp
je
cmpb
pop
stos
mov
bound
jecxz
cli
sub
inc
dec
sbb
xchg
jg
movb
sub
add
roll
mov
xor
lea
cmp
pop
jne
cltd
xor
aad
fdivrs
lcall
mov
sbb
push
hlt
pop
xlat
adc
mov
stos
ret
arpl
mov
fmul
ss
push
cmp
stos
fcoml
dec
jle
ror
stos
push
xor
mov
sub
ficoml
insl
std
pop
lcall
decb
lods
pop
dec
sahf
aad
rcl
jl
xor
xlat
jmp
and
lret
adc
mov
fs
je
call
ja
push
sub
jmp
adc
pop
mov
mov
ja
sbb
stos
inc
gs
mov
xchg
test
dec
call
jnp
sbb
faddl
cld
stos
ret
ja
add
inc
push
xchg
push
test
and
jmp
xor
decb
xor
bound
jnp
or
xor
cld
dec
jle
aaa
es
pop
int
aas
aad
dec
xor
imul
push
mov
sahf
fildll
xchg
sub
push
imul
test
pusha
jo
or
dec
add
mov
cltd
add
fstps
inc
ds
aam
inc
xor
outsl
xchg
aad
fildll
shll
fcomip
xchg
jne
divl
icebp
sbb
mov
icebp
or
out
sbb
push
out
add
mov
sbb
adc
cmp
mov
mov
cld
mov
fwait
call
xor
pmuludq
ss
cltd
inc
pop
jns
lods
cmp
ret
cmpsb
push
mov
pop
jb
mov
clc
sbb
std
pop
cli
mov
sub
xchg
mov
loop
testb
pop
mov
or
add
sbb
fwait
mov
inc
push
aam
dec
test
add
fwait
mov
sbb
cs
aad
jl
lods
cmp
xor
outsl
adc
shll
inc
push
push
push
inc
push
dec
cs
insb
add
inc
and
mov
cmc
cmp
out
incl
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
movl
pushf
call
neg
sub
aad
shrd
push
dec
xadd
mov
movsbw
sub
rcr
das
shrd
push
neg
xor
btr
push
test
sub
push
not
daa
mov
rcl
push
rcr
aam
mov
stc
jmp
add
add
movw
movw
stos
mov
call
dec
andl
xlat
xchg
das
xchg
shrb
xchg
dec
data16
cmp
hlt
lcall
in
call
outsb
sub
mov
rol
dec
xchg
add
adc
rep
jmp
cli
xrelease
jo
adc
daa
das
or
in
add
aas
push
fs
sub
fnsave
sbb
iret
and
gs
mov
dec
fistpll
mov
xchg
xor
imul
push
pop
xchg
mov
xlat
in
fstps
push
lret
cmp
leave
aaa
stc
mov
or
cmp
cwtl
sbb
fnstsw
jno
shlb
stos
sarl
adc
xor
fstpl
adc
in
bound
fwait
mov
xor
decl
adc
xlat
lret
and
or
pop
sub
adc
mov
push
in
jns
test
pop
out
add
cs
sbb
jnp
sub
cmp
cmp
push
jmp
jb
sbb
btr
xchg
jmp
jp
jp
js
mov
xchg
mov
jmp
adc
je
popf
xchg
loopne
ss
xchg
fsubrl
fwait
mov
jmp
add
lret
xor
mov
pop
lea
jno
cmp
ret
cmp
iret
inc
dec
int
adc
mov
sbb
fsubrs
fldenv
fdivl
ds
cmc
nop
sbb
iret
jecxz
adc
mov
rcrb
lahf
out
stc
adcl
decl
xchg
rcrb
xchg
or
rcrb
lea
cwtl
mov
lea
jmp
cmp
xor
js
fsub
inc
enter
pop
mov
fs
js
rorl
stc
hlt
xchg
xchg
or
adc
lcall
mov
mov
pop
lock
std
test
movsb
aaa
cmpsb
movsl
ret
addr16
sbb
add
add
jae
push
add
add
add
adc
add
and
add
add
add
data16
add
add
and
add
xchg
add
addb
add
push
js
add
add
add
sbb
add
add
adc
add
adc
add
cmp
add
lret
add
add
sbb
pushf
lea
pushf
movb
pusha
pushl
lea
jmp
decb
mov
sub
iret
xor
test
pop
mov
jg
fcomp
inc
out
push
and
dec
cmp
in
test
adc
shrl
xorl
test
test
cmpsb
xchg
ret
fstpl
mov
cs
jae
lods
mov
mov
test
add
pop
adc
cmp
or
lods
bnd
mov
lret
xor
je
sbb
dec
fs
xchg
and
jecxz
mov
jbe
cmp
jmp
lea
je
cmc
sub
jmp
mov
pusha
rep
bswap
mov
movzbw
mov
call
jne
fisttps
stc
pop
mov
mov
stc
into
dec
mov
insl
adc
xchg
mov
xor
mov
push
lea
inc
dec
jbe
pushf
pop
push
sbb
cltd
pop
movsb
lahf
mov
jl
jl
push
popf
mov
dec
int3
jg
shr
inc
pop
mov
leave
xchg
fdivl
outsb
jg
das
add
repnz
jae
mov
xchg
outsb
inc
ret
sub
jnp
in
fcoms
pop
dec
sti
in
pushf
xor
fbstp
aas
pop
jmp
pop
xorb
shr
ja
add
mov
mov
lea
je
stc
cmp
call
mov
bt
cmp
pushf
pushl
mov
push
lea
jbe
rcr
shld
sbb
mov
mov
shl
jmp
cmpsb
sub
sub
andb
negb
aaa
shlb
cmp
mov
mov
je
cmc
adc
cmp
in
shll
insl
mov
inc
sarl
fnstcw
jl
xlat
or
cmp
pop
push
sub
pop
cmp
rcr
hlt
jb
dec
test
jne
stos
add
push
lds
sbb
ret
add
mov
inc
test
cmp
call
lea
je
setnp
lea
call
pusha
pushl
lea
jb
cmp
pusha
pusha
jmp
popa
arpl
mov
std
ficoms
xchg
xchg
dec
out
mov
xchg
xlat
adc
jl
int
pop
test
jp
pop
addb
adc
jle
fnstsw
sub
push
mov
in
in
sbb
sbb
data16
daa
in
loope
xchg
roll
add
mov
push
pusha
pushf
lea
jmp
push
setnp
movzbw
mov
pusha
pushf
xchg
pushf
pushl
lea
jp
pusha
xchg
call
mov
pusha
cmpb
pushf
lea
jne
xor
movzbl
sub
clc
aaa
mov
ror
bt
add
clc
rcl
ror
cmc
mov
clc
stc
stc
test
pusha
call
repnz
mov
imul
lret
ljmp
cwtl
mov
xchg
or
mov
push
loop
mov
adc
jnp
jne
inc
aas
dec
or
outsl
popa
xor
jmp
cmc
ret
lret
adc
dec
mov
sti
imulb
cli
sbb
jae
inc
mov
add
pusha
js
mov
adc
mov
cs
test
dec
out
js
daa
sub
jmp
daa
mov
mov
xchg
fldl
xchg
data16
inc
in
xor
mov
sbb
push
pop
xchg
bound
stos
mov
adc
iret
sbb
lods
js
cli
push
dec
mov
imul
xor
mov
pop
push
stos
dec
pop
stos
rcll
sahf
ss
and
fists
inc
movlhps
xlat
lea
idiv
xchg
mov
jmp
push
xchg
mov
in
mov
push
ret
sbb
add
enter
jmp
adc
ljmp
pop
jno
scas
int3
ljmp
xchg
fdivrs
mov
loopne
add
push
callw
jo
and
nop
insl
imul
mov
cmp
imul
js
stos
cmp
arpl
iret
xlat
cmp
shlb
lret
call
lahf
and
and
mov
insl
xchg
dec
push
lret
pop
add
add
ret
notl
dec
lods
add
push
fildll
inc
xor
shrl
mov
insl
pop
xor
dec
push
test
pop
xchg
or
movsb
ret
test
mov
leave
roll
adc
pusha
lods
call
add
f2xm1
pop
cmp
lods
fidivs
movsb
fistps
jp
cmpsb
cmp
jge
repz
mov
push
loopne
enter
push
add
or
jecxz
cwtl
cmp
mov
dec
imul
pop
mov
int
dec
data16
pushf
cs
jne
push
xor
push
test
sbb
mov
adc
sbb
push
sub
cltd
jnp
inc
fwait
xchg
and
xchg
sub
popf
nop
adc
in
adc
stos
jp
cmc
test
or
adc
inc
aam
inc
add
stos
jg
push
push
mov
mov
xor
lea
call
lahf
adc
sahf
rcr
sub
jne
mov
pop
rol
pop
pop
ret
movw
mov
sete
cwtl
lahf
lea
push
pushf
mov
pusha
lahf
lea
not
movl
lea
pop
mov
movzbw
lea
pusha
push
movl
pushf
pushl
popl
push
pushl
ret
add
inc
jecxz
add
adc
add
adc
add
add
add
add
add
jecxz
add
sbb
test
sbb
pop
jecxz
add
fwait
sbb
mov
sbb
popa
jecxz
add
lret
adc
add
adc
add
add
add
push
sbb
rcrb
add
sbb
enter
jns
adc
add
add
add
sbb
and
add
add
add
sub
add
lahf
sbb
mov
adc
add
add
add
add
add
lahf
sbb
add
dec
mov
adc
jae
call
cmp
test
cmpsb
cmp
loope
push
lahf
fists
or
sub
xor
dec
mov
pcmpgtb
cld
sbb
sub
add
leave
pop
ljmp
jmp
jg
cltd
add
testb
insb
addr16
fsts
scas
mov
xor
sub
mov
insl
test
or
js
jg
stc
and
mov
aas
jecxz
pop
jg
icebp
pop
dec
push
pop
stos
js
cmp
jns
popa
cltd
xchg
and
cmp
and
js
pop
testl
shlb
jne
xchg
jl
push
cmp
popl
mov
aaa
cmpsb
sbb
imul
mov
js
push
and
popa
jno
iret
mov
mov
rcrl
lcall
sub
shl
inc
enter
xor
lret
imulb
gs
adc
adc
mov
dec
lcall
xor
loop
popf
lret
data16
cmp
xchg
aaa
push
jo
rcrb
bnd
fcomi
or
add
adc
add
fs
inc
sub
jbe
mov
mov
dec
std
xchg
pop
mov
out
dec
out
xchg
daa
ret
push
xchg
mov
push
idiv
cmpsl
pop
les
xor
jns
jmp
pusha
movsbw
call
mov
mov
pusha
lea
jae
lahf
movzbl
pop
xadd
rol
xadd
neg
pop
xor
sar
movzbl
movsbw
mov
aaa
pusha
cmp
cwtl
pushf
cwtl
mov
pusha
pushf
movw
jmp
lea
jmp
sbb
mov
ret
mov
jb
push
nop
mov
outsl
add
mov
loop
xor
mov
stos
es
fcompl
aas
js
ret
sbb
es
xchg
gs
xor
sti
xor
add
stc
or
add
sub
sbb
sbb
call
fsubs
lock
add
push
nop
adc
mov
push
dec
lds
pop
inc
sub
movsb
jecxz
or
mov
es
testb
movsb
call
push
pushf
mov
pusha
pushf
lea
je
jmp
pushl
dec
mov
mov
lea
jne
sbb
movsbw
mov
pusha
test
cmp
call
std
shlb
mov
scas
dec
out
imul
inc
jecxz
add
mov
xor
je
adcl
and
adc
outsl
pusha
sub
xor
roll
or
jo
cmp
push
jnp
mov
push
pop
cmp
movsl
pop
leave
jns
mov
mov
mov
ds
xlat
add
lret
xor
mov
enter
xchg
mov
pop
sti
lods
mov
inc
das
fstpt
add
mov
jno
xchg
mov
jb
sub
popa
sti
in
xchg
stos
pop
xchg
inc
outsl
push
push
arpl
and
mov
inc
mov
insl
pop
mov
cli
loop
out
into
in
pop
leave
mov
idiv
pop
adc
mov
xchg
ror
pop
xlat
aam
or
jle
jnp
addr16
dec
lret
movsl
cmp
jnp
pop
inc
aam
fs
repz
jo
mov
fsubrp
clc
mov
test
loop
movl
adc
mov
sub
aad
inc
adc
mov
scas
mov
jbe
mov
push
push
lret
hlt
lds
lea
in
jbe,pt
dec
inc
add
out
lds
gs
cli
adc
ds
repnz
pop
lcall
pop
mov
lea
pusha
pusha
not
sete
mov
lea
jle
pusha
pushf
pusha
mov
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
fwait
in
inc
test
pop
inc
ret
jg
cmp
xlat
lea
dec
pop
jo
cli
xchg
inc
dec
xor
out
mov
mov
jno
cmpl
es
lret
pusha
xlat
cmp
cmp
addl
imul
nop
push
mov
fdiv
mov
sahf
hlt
mov
cwtl
mov
sbb
pushf
sub
pushf
cmp
cmp
mov
jmp
sub
sub
mov
shr
sub
call
stc
pop
ret
pop
push
not
pusha
lea
mov
movzbw
mov
movsbw
not
pushl
bswap
mov
movb
mov
mov
pushf
call
mov
add
push
mov
pushf
pusha
lea
jmp
lea
jb
shld
sar
or
mov
bt
push
stc
pusha
sub
mov
movb
jmp
jno
dec
lcall
push
jmp
and
add
nop
dec
stos
fsub
pop
mov
jbe
xor
nop
pop
cld
out
cli
mov
or
test
arpl
sbb
add
inc
dec
xchg
xor
push
push
cltd
shll
push
sbb
adc
cltd
insl
lret
mov
sbb
enter
mov
mov
and
mov
or
push
ret
addl
dec
repz
pushl
mov
lea
mov
lods
add
cmp
jnp
scas
rol
mov
push
enter
xchg
dec
sbb
dec
sbb
or
push
or
dec
cmp
xor
and
div
push
mov
xchg
lods
add
push
jbe
jl
inc
add
pop
stos
arpl
mov
xor
icebp
mov
mov
cmp
mov
repz
mov
out
sub
mov
pop
pusha
mov
sahf
and
xor
cmpsb
out
movsb
mov
test
nop
dec
pop
pusha
xchg
mov
aaa
movsl
lock
repz
mov
pop
jb
popf
mov
ljmp
push
repz
test
add
jmp
pushf
cmp
stc
add
mov
lea
je
jmp
sub
mov
js
push
pop
jl
sti
xor
or
repnz
sahf
test
int3
jnp
mov
outsl
cmc
lret
inc
repnz
and
je
enter
mov
sbb
and
ffreep
pop
sti
in
sbb
fadds
fsubl
jle
xchg
mov
push
lock
adc
xor
jne
pop
sub
xchg
out
adc
mov
jbe
imul
mov
push
loope
dec
fmull
jl
cli
add
lret
jmp
xchg
cmpsb
ret
pop
testl
and
push
mov
shlb
stos
das
cwtl
js
mov
jbe
stos
or
ret
in
test
add
call
dec
bound
lret
and
mov
pop
xchg
fsubrs
adc
add
cmpsb
mov
pop
cwtl
js
inc
pusha
jnp
cmp
and
xchg
cs
mov
outsl
aam
lods
mov
movb
jp
out
out
insl
ret
or
or
add
adc
cmp
gs
adc
sub
daa
mov
shlb
fwait
add
sbb
movw
lea
push
lea
jmp
pushf
pusha
call
mov
bt
shr
mov
clc
test
test
cmp
pushf
lea
je
push
push
cmp
call
test
ss
js
movsb
pop
lcall
enter
push
adc
sub
xor
sahf
outsl
dec
xchg
add
mov
adc
dec
pop
jbe
sbb
repnz
mov
cmpsb
mov
daa
lock
push
cltd
js
dec
imul
mov
adc
sub
xchg
and
mov
in
mov
adc
push
mov
xchg
jp
mov
daa
and
jle
ret
xor
adc
sub
xchg
sbb
shl
sub
pop
jns
adc
xchg
mov
es
cmp
xchg
insb
ljmp
mov
gs
std
insl
add
jle
fistpl
les
shll
ss
push
ljmp
mov
cmp
enter
and
push
sub
sahf
js
mov
ds
jp
cli
mov
pop
movsb
fwait
cmpsb
push
outsb
shlb
ret
dec
mov
pop
lds
or
sbb
adc
cmp
adc
shr
add
setnp
jno
stos
mov
lea
jmp
add
pusha
pushf
mov
mov
pushl
shr
pushf
adc
cmc
pushf
mov
test
sub
bt
mov
jmp
stos
pushf
lea
jmp
xor
mov
push
mov
int
dec
test
clc
pushf
scas
add
outsl
fwait
std
lret
push
push
jnp
movsb
ljmp
leave
rclb
jecxz
fisubl
cmpsb
ret
jne
push
or
iret
rolb
fisttpl
cs
add
xlat
sahf
push
sbb
cmp
lods
xor
jno
and
dec
add
lods
mov
and
add
shl
sar
shld
mov
cmc
cmc
stc
jmp
leave
or
pop
movsb
mov
lcall
dec
xchg
mov
mov
mov
in
push
ret
in
jge
xor
mov
pop
pop
iret
fucom
sbb
inc
push
cmp
sub
pop
lods
cmp
inc
pop
add
sub
xchg
or
lds
enter
inc
shrl
cmpsb
add
push
aaa
mov
insl
xchg
imulb
push
aas
js
clc
pusha
or
or
shrb
pop
sub
fucom
jo
lea
in
mov
pushf
lea
jmp
or
or
add
and
mov
movw
pusha
cmc
clc
test
pushl
call
pushf
call
lahf
mov
push
lea
jb
bsr
mov
cmp
sub
pushf
not
mov
pusha
stos
pusha
push
pushf
pushf
lea
jmp
stos
pushf
pushl
pushl
pushf
lea
jmp
in
cmp
out
add
pop
jnp
and
xchg
cmpl
mov
xchg
mov
hlt
or
dec
in
xchg
test
ja
stc
mov
mov
add
sbb
loope
mov
outsb
cmp
popa
add
xchg
or
jae
je
or
adc
insb
mov
sbb
xchg
pop
pop
scas
call
out
lds
aad
js
mov
inc
fsubs
sahf
das
aas
pop
insl
add
xor
pop
addr16
add
ja
jo
imul
sub
not
call
bt
mov
cmp
add
jmp
jne
fistps
xchg
sti
xor
insl
push
out
cmpsb
in
or
mov
and
jle
push
push
xchg
std
and
enter
je
pop
ljmp
dec
xchg
mov
orb
sbb
iret
cmp
xor
popf
mov
dec
add
adc
jmp
inc
cwtl
xlat
sbb
cmp
pop
fdivl
push
dec
and
les
or
xchg
fstps
addb
mov
popf
sarl
inc
xchg
das
xchg
js
mov
aam
out
adc
dec
sub
jge
xchg
mov
bound
xchg
packsswb
outsb
xchg
shrb
xor
pushf
adc
inc
dec
jp
push
jmp
and
dec
mov
mulb
mov
lret
loop
push
stc
adc
mov
add
push
nopl
push
jb
fwait
mov
sbb
in
cmp
movsb
mov
xchg
cmc
jne
loop
mov
dec
sbb
cs
or
sbb
push
hlt
adc
xchg
push
popf
pop
in
cmp
mov
jno
cmp
xchg
cmp
subl
lea
mov
insl
dec
dec
jp
inc
sub
mov
push
pop
push
test
mov
stos
movsl
mov
mov
enter
sub
fnsave
cmpsb
mov
popa
icebp
pop
and
repz
imul
mov
xchg
adc
and
aaa
cmpsb
and
shlb
js
xchg
mov
jo
outsl
xor
out
inc
pop
mov
imul
je
movsb
sti
and
loope
pop
mov
sbb
stos
mov
scas
test
xor
and
and
push
mov
pop
jno
cmp
out
or
fsubp
or
jbe
xor
in
andl
or
fbstp
in
pushf
je
adc
dec
push
pop
in
pushf
repnz
les
dec
sub
js
lret
paddb
jmp
dec
sahf
int3
lock
or
add
xor
icebp
add
shll
or
gs
add
cmp
mov
or
scas
pop
or
or
das
sub
pop
jg
icebp
or
outsl
or
gs
add
in
stc
out
fisttpl
repnz
or
sahf
pop
and
or
sbb
outsl
aaa
or
gs
add
aas
jbe
dec
inc
cmpsl
or
gs
add
lahf
jg
or
mov
popl
adc
xor
inc
pushf
or
gs
or
inc
outsl
dec
or
out
mov
aas
or
inc
push
push
cmc
jmp
scas
or
gs
add
mov
xchg
mov
icebp
add
xor
fsubrl
or
pop
and
push
or
add
pushf
fsts
lock
add
cmp
cmp
cld
gs
or
arpl
push
dec
outsl
outsl
pslld
add
rorl
adc
gs
cmpb
push
mov
or
mulb
pop
and
adc
outsl
dec
or
gs
add
mov
xchg
push
cld
gs
add
shlb
or
add
xor
add
xchg
or
gs
add
movsb
xlat
jnp
repnz
add
in
dec
out
jae
repnz
add
push
cwtl
jb
out
or
push
ret
dec
outsl
mov
add
mov
gs
je
push
or
gs
add
jnp
fsubl
addr16
or
gs
or
xchg
test
fsubrs
or
gs
add
cmp
outsl
out
or
pop
cmp
pusha
leave
pop
outsl
or
gs
push
pop
insl
pop
push
inc
pushf
push
clc
gs
add
int
mov
cli
gs
or
gs
push
daa
aas
or
gs
add
jb
mov
test
add
cmpsl
fs
outsl
xchg
gs
add
xor
xchg
lods
outsl
inc
pmaxsw
add
fcoml
or
sarl
addr16
daa
or
gs
push
cmp
xchg
or
gs
add
or
mov
add
mov
mov
lea
jmp
sub
daa
xchg
js
mov
dec
insb
mov
mov
jmp
scas
inc
aam
sbb
cmpsl
stos
adc
xor
jl
jbe,pt
fsubrs
cwtl
or
sbb
or
fs
xchg
pop
lcall
inc
jbe
cmp
mov
pop
std
into
fwait
imul
xchg
add
scas
or
mov
mov
xchg
sahf
mov
mov
imul
dec
adc
cmp
xor
jb
and
xchg
xchg
les
popf
pop
loopne
jne
sbb
dec
jecxz
js
and
lret
test
lcall
mov
mov
lock
sbb
lods
dec
and
aam
push
rclb
xchg
or
sub
sub
inc
shlb
repz
sbb
pop
inc
out
xor
bound
call
mov
imul
mov
aaa
inc
mov
mov
in
movsb
dec
test
and
clc
jbe
xchg
cmp
jno
sbb
mov
enter
nop
pop
xchg
mov
jbe
push
in
push
js
lahf
lods
in
jno
sub
addr16
xchg
dec
pop
pop
js
xchg
in
sub
in
mov
push
imul
mov
and
and
inc
popa
andl
inc
jno
clc
sub
aam
bound
addr16
movb
dec
test
pop
test
xchg
xor
or
stos
xchg
pusha
pushf
jmp
sar
loope
mov
movsb
mov
add
mov
scas
movsl
or
mov
xor
rcr
cmpsb
testb
or
cmp
push
xor
pop
sar
pop
add
rorl
pop
insb
lret
cwtl
jno
dec
sahf
rcr
dec
cmpb
stos
cmp
leave
push
repz
aad
in
or
jnp
mov
xchg
jbe
or
add
mov
orb
test
insl
aad
inc
cmp
iret
ds
outsb
mov
adc
lret
xchg
jne
shll
dec
ret
ja
out
push
pop
dec
in
aas
inc
call
out
test
cmp
pop
jge
sub
nop
popl
decl
add
movb
push
lea
jae
bt
cmc
sub
mov
lea
call
movl
call
lea
ja
jmp
push
mov
mov
mov
movb
push
pushl
ret
adc
repz
sarb
mov
out
xchg
and
add
pop
movsl
and
dec
sub
fdiv
fistpll
pop
sbb
ret
test
aaa
pushf
dec
test
pop
ror
pmulhw
test
pop
xchg
dec
lcall
scas
inc
fdivl
and
dec
or
mov
xchg
js
jmp
arpl
test
inc
pop
repnz
cmpsl
movsb
lea
jns
add
cmpsb
les
lds
stos
and
cmp
icebp
loop
cmp
sub
fimuls
clc
jmp
push
out
shll
or
mov
and
shrl
pop
fldt
jl
xchg
lods
leave
arpl
or
add
sbb
mov
push
sbb
xchg
js
push
or
lret
mov
pop
test
xchg
pushf
ljmp
jbe
xchg
dec
andb
jle
mov
jb
hlt
enter
leave
pop
cld
mov
pop
scas
test
mov
mov
inc
mov
cwtl
mov
sub
adc
sub
or
xor
xor
add
inc
fsubr
jle
stos
mov
xor
push
enter
dec
in
movsb
cmpsb
push
mov
pop
sti
adc
pop
push
in
mov
dec
call
xor
dec
sub
loope
dec
mov
sbb
insl
dec
cmp
push
fimull
cmpsb
xchg
mov
xor
repz
scas
popa
imul
dec
push
jno
cmp
and
add
fisubs
outsl
mov
sarl
loope
dec
dec
sub
add
cmp
jo
call
jge
jno
sahf
lret
cmp
sahf
xor
loopne
sub
shlb
adc
mov
or
push
dec
inc
dec
xor
cs
insb
add
je
or
sbb
lcall
mov
xchg
lea
call
rol
bsf
add
lea
bt
pop
mov
bts
add
shl
pop
jmp
pushf
lea
jb
bts
xor
xor
mov
sbb
not
dec
shl
mov
clc
sub
shl
stc
add
not
setb
lea
call
pushf
mov
movl
pusha
movl
pusha
push
pushl
lea
jmp
out
shlb
cwtl
sbb
and
jno
xchg
rcrl
aad
mov
gs
imulb
test
or
push
out
push
adc
lret
sub
xchg
bound
in
sahf
lahf
int
mov
lcall
test
and
rolb
shll
cmc
into
push
ret
mov
incb
or
scas
or
xor
popa
fcmovnb
ljmp
bound
xor
ljmp
add
mov
push
imul
mov
or
lock
dec
loopne
xchg
test
and
enter
cmp
pushf
cmp
cmp
call
pusha
pushl
lea
je
clc
bt
cmp
pushf
pushl
ret
lret
rorb
jnp
ror
mov
inc
jecxz
push
add
fisubrl
cltd
outsl
stos
sti
cld
test
rorl
mov
mov
scas
inc
xchg
arpl
mov
addr16
push
hlt
cmp
jnp
jl
sti
xchg
inc
cmc
inc
cmp
xor
pop
ja
and
push
loop
push
test
fmuls
aad
adc
xchg
dec
adc
mov
cld
jg
add
outsb
data16
call
mov
push
pop
gs
sbb
enter
fsubr
mov
or
mov
test
and
pop
rcll
dec
js
test
inc
push
add
mov
mov
mov
outsl
adc
rcrb
fsubs
imul
sbb
lret
push
xlat
movsl
std
lods
cmp
dec
push
cltd
aam
outsb
push
dec
ficoms
sub
daa
xchg
add
cmp
out
pop
clc
fistl
cs
pop
push
notl
outsl
dec
addl
xor
je
xor
sbb
bound
adc
push
sub
lea
movsbw
jmp
fcmove
bound
mov
jno
adc
xor
add
pushf
mov
add
test
bnd
cltd
scas
jg
repz
push
cmp
pop
divb
mov
lods
adc
popa
imul
cmpsl
mov
mov
mov
mov
mov
and
fisttpll
aaa
sbb
enter
pushf
xor
or
enter
outsb
loop
mov
mov
xor
in
cmp
sub
fs
jae
movsbl
shr
lahf
pop
call
bt
clc
bt
shl
call
jmp
jmp
lea
add
sbb
sub
bsr
rol
mov
or
adc
mov
bt
mov
pusha
test
movb
repnz
push
mov
pusha
call
pushf
pushf
lea
mov
pushf
push
lea
jmp
jg,pn
outsb
jnp
inc
add
mov
stc
std
mov
in
jl
sub
and
adc
popa
bnd
loope
mov
cli
mov
cs
hlt
sti
adc
std
scas
js
stos
in
pop
adc
push
ss
das
gs
test
mov
enter
es
aad
inc
adc
outsb
push
pop
jae
bound
sub
sbb
and
mov
xchg
popf
mov
out
jp
and
mov
dec
repz
lods
outsl
jnp
cmp
push
imulb
sbb
mov
push
icebp
or
test
sbb
mov
nop
stos
lds
in
pushf
popf
mov
sbb
in
adc
addr16
ja
add
xlat
push
jns
inc
mov
leave
loope
in
dec
dec
inc
xchg
js
push
push
lcall
xor
dec
push
add
cld
adc
xchg
pushf
pushf
lock
enter
cmp
cmp
jnp
scas
mov
int
fisttpll
insl
mov
and
je
clc
cmp
jmp
jmp
add
dec
outsl
popa
fs
imul
add
test
pushl
popl
stc
mov
cmp
jmp
lahf
mov
loop
addr16
push
add
loopne
adc
push
icebp
sbbb
fcoml
push
pop
jns
mov
jae
leave
mov
mov
mov
mov
repnz
fdiv
xor
mov
out
into
xor
jae
imul
int
mov
cmc
xchg
and
fisubl
ss
rcrl
outsl
xchg
into
inc
loope
test
cmp
icebp
setnp
in
insl
cmpsb
cmp
popa
inc
insb
jnp
xchg
sub
xchg
in
jne
jg
in
aas
inc
sub
addr16
add
push
mov
leave
add
push
or
mov
mov
mov
sbb
cmp
rcl
xchg
lea
or
push
pop
cltd
popl
cwtl
or
lock
dec
aad
insb
xor
sub
pusha
clc
dec
cwtl
push
cmpsb
add
mov
rcr
jp
sub
loopne
lea
ds
xchg
imul
int3
pop
mov
ret
call
jnp
shrl
enter
sbb
outsl
cmp
or
dec
mov
les
in
and
ss
scas
out
mov
pop
imul
fmull
adc
aas
xchg
loopne
cmc
xchg
adc
xor
push
jecxz
or
inc
or
push
xchg
pusha
dec
stos
pop
inc
jp
iret
cmpsl
push
mov
sahf
push
outsb
lea
cwtl
in
out
ja,pt
pop
push
test
mov
xchg
lret
enter
xor
jae
pushf
xorb
ljmp
xchg
cmpsl
sbbb
inc
and
mov
dec
dec
loop
inc
outsb
push
push
xchg
sbb
mov
mov
sbb
fsubl
push
xchg
inc
pushf
add
mov
rcrb
das
fistl
test
cmp
in
or
or
dec
sub
andb
lea
dec
and
inc
pusha
js
pusha
mov
jbe
push
push
push
adc
add
rorb
sub
sbbb
sub
cmp
jne
jno
imul
push
push
xchg
ja
rolb
adc
in
add
dec
sti
push
cmovle
jecxz
jp
lds
fimuls
jmp
mov
fs
aad
imull
mov
xor
outsb
mov
add
xchg
shlb
mov
add
dec
imull
lret
cmpsl
loop
push
or
pop
int
add
in
call
hlt
dec
cltd
test
out
or
cmpsb
out
and
pop
mov
inc
pop
ret
sarb
pushl
jns
mov
aad
fbstp
mov
popa
cs
mov
sub
icebp
dec
scas
shll
rorb
aas
add
stos
adc
popa
dec
push
pop
aas
pop
mov
or
pop
push
mov
cmp
dec
daa
int
and
mov
into
pop
xchg
xchg
xchg
dec
sub
sbbb
shlb
rcrb
xchg
jp
dec
fcompl
mov
mov
fcom
sbb
xchg
sub
ret
out
xchg
push
out
add
or
inc
pop
mov
mov
push
inc
and
xor
jp
mov
jbe
xchg
mov
inc
push
xor
or
das
xchg
xorb
push
ja
lods
add
sbb
mov
stos
push
and
xchg
loope
cmpsl
cmp
mov
inc
arpl
xor
pop
push
psrad
shrb
out
sub
xchg
out
test
lods
aaa
iret
xchg
lret
dec
fcompl
jae
popf
sbb
out
aas
sbb
sub
dec
add
inc
xchg
xchg
pop
pop
mov
fldcw
cmp
mov
or
int
xor
pop
lret
dec
or
shl
add
jl
int3
sub
out
les
movsb
aam
je
fsubr
nop
lahf
mov
pop
mov
inc
and
call
shr
dec
popf
mov
pop
push
push
in
adc
out
or
call
jmp
mov
iret
out
inc
rcrb
xchg
dec
scas
add
adc
fnstenv
aad
fsubs
jnp
mov
ret
cltd
pop
jae
sbb
ds
mov
out
ss
lret
movsb
cwtl
in
mov
pusha
arpl
lods
ss
aam
xor
jle
mov
sbb
sbb
xor
jle
sbb
in
cmpsl
int
adc
sub
hlt
xchg
das
bound
push
stc
enter
push
inc
dec
scas
and
fs
mov
dec
std
fsubl
jo
push
addb
sub
lahf
stos
xadd
mov
shll
dec
mov
dec
aad
in
testl
pop
fistps
lods
loop
jno
into
subb
and
xchg
insl
les
out
lock
sub
scas
jb
iret
ja
cmpb
mov
out
mov
jb
and
or
test
aad
in
jb
and
lcall
xchg
xchg
or
std
hlt
jge
pop
shl
fistpll
pop
scas
add
lcall
adc
xchg
test
shll
pop
push
cmpsb
pop
or
cmp
push
arpl
insb
mov
xor
scas
xchg
xchg
ret
orb
and
or
dec
imul
popf
add
sbb
xchg
xchg
xlat
cltd
icebp
adcl
push
rorb
xchg
xchg
adc
xchg
mov
inc
add
mov
sbb
cs
inc
js
shlb
fucomip
add
sbb
in
xchg
in
in
push
mov
icebp
ret
sub
fdivr
mulb
pop
test
je
mov
imul
add
add
dec
push
ret
push
sub
rcr
hlt
jg
imul
fistpl
mov
mov
shlb
jp
cwtl
out
hlt
inc
adc
pop
je
jmp
pop
loop
scas
push
sub
mov
push
jle
or
cmp
fwait
cwtl
in
mov
test
and
push
lock
nop
sbb
loope,pn
and
insl
cmp
mov
sti
ljmp
mov
mov
outsl
pop
sti
dec
scas
jl
out
inc
push
imul
mov
cmp
jmp
popf
fcoml
or
shll
xchg
insb
sbb
or
cmp
xlat
cmpsl
out
insl
mov
lahf
cmpsl
xor
loop
fistpll
ds
es
popa
inc
xchg
data16
xlat
jp
lahf
mov
pop
icebp
loope
xor
addr16
fistps
out
mov
sti
ds
push
push
lock
orb
pushf
add
popa
adc
sub
daa
imull
sahf
js
xchg
mov
hlt
fs
jno
cmp
push
rclb
pop
call
or
push
lods
outsl
outsb
mov
pop
mov
dec
jge
out
push
fbld
mov
mov
xchg
call
jle
push
mov
stc
push
stc
sub
sub
jne
sub
sarl
nop
out
or
daa
divl
pop
mov
jl
sbb
mov
push
seta
fnstsw
mov
cmp
dec
pop
ret
xor
inc
cmp
sub
sahf
ss
mov
xchg
jae
dec
in
sbb
jbe
into
shrb
das
sbb
push
sub
mov
push
adc
iret
imul
xchg
push
jbe
mov
push
fcmovnb
fmull
adc
xchg
fs
mov
insb
pop
jmp
das
insb
jnp
sbb
or
mov
enter
movsl
jge
lret
add
push
scas
mov
pop
and
sbb
fucomip
scas
and
xlat
in
cmp
nop
pushf
mov
lret
pop
into
out
xor
into
js
mov
dec
jp
lds
imul
fldenv
aam
or
std
xchg
stos
dec
fbstp
pop
out
subb
lret
dec
cmpsl
inc
pop
pop
jns
call
pop
dec
pop
pop
dec
and
cmp
mov
xor
dec
jnp
adc
inc
dec
cli
aaa
js
pop
mov
jp
fs
push
scas
stos
ja
pop
ficomps
out
jo
int
mov
mov
dec
mov
inc
sub
rorb
pop
clc
inc
push
dec
or
loopne
out
jno
clc
imul
sbb
movsl
add
pop
aas
std
lea
mov
push
ss
push
mov
mov
shlb
lock
cmpsb
cld
and
mov
stos
in
and
inc
data16
sub
jg
push
xor
mov
fwait
insb
outsb
or
fwait
stos
pop
cmpsb
mov
jbe
cltd
sbb
cmp
mov
sub
inc
add
lret
incl
mov
or
divps
jnp
lds
fwait
repnz
pop
cmc
sbb
stos
rol
add
sub
cmp
andl
test
rol
pop
sbb
dec
inc
dec
jnp
lret
xchg
xchg
ja
popf
std
iret
sbb
mov
dec
and
or
arpl
cmp
and
mov
cli
jecxz
push
loop
cmp
push
sbb
mov
xchg
add
cmp
push
dec
daa
cmpsb
es
lahf
sub
mov
xchg
xchg
cmp
into
or
les
jno
xor
xorb
stc
add
cmp
or
and
rep
inc
lea
int
out
hlt
dec
xchg
call
int
cmp
xor
repz
rcll
xchg
in
in
add
stos
sarb
movb
dec
loopne
mov
xor
xchg
rorl
sub
fstps
mov
jns
push
cmp
lods
mov
adc
mov
fsubrs
lret
and
cmp
imul
push
mov
mov
xor
stos
pushf
je
dec
out
jg
enter
mov
insb
lods
not
mov
push
movsl
and
xor
mov
aas
xchg
arpl
add
into
dec
shll
mov
shll
scas
add
push
test
lahf
rcr
sub
add
or
jmp
mov
ds
stc
ret
sbb
pop
pop
test
repz
movsl
mov
in
push
mov
loop
mov
dec
nop
shll
push
xor
lret
push
add
cld
jns
dec
std
mov
gs
insb
es
into
or
fstpl
push
pop
adc
pop
lock
cmp
dec
lcall
jle
push
sbbl
push
mov
sub
rcr
out
mov
cmpsb
push
mov
pop
xor
cmp
xchg
mov
adc
stos
mov
sub
inc
movsl
pop
daa
aaa
mov
iret
add
out
pop
popa
lock
jo
stos
and
mov
shl
dec
dec
xor
ror
popa
cmp
sbb
pop
mov
les
and
int
or
ljmp
cld
rcll
mov
ret
push
and
js
cmp
hlt
xor
push
ja
in
clc
sahf
fucomi
mov
fisubrl
mov
ror
stos
clc
es
shr
lock
mov
fimull
lret
jmp
adc
adc
mov
jae
std
arpl
aad
xor
fnstenv
xchg
aam
adc
idivl
pushf
in
fisubl
cwtl
gs
or
test
movsl
pop
sbb
sbb
les
push
and
ret
xchg
shrl
xchg
dec
jb
and
rcl
mov
out
xchg
mov
out
pop
mov
pop
shlb
push
mov
sbb
clc
sbbl
outsl
dec
out
lahf
insb
cmp
repz
scas
xchg
dec
scas
shll
shr
mov
stos
and
mov
cmp
jle
ja
aam
jbe
nop
pusha
sbb
aas
sbb
scas
neg
or
cmpsl
insl
ljmp
iret
dec
push
imul
cmp
pop
mov
rcll
cmpsb
jbe
mov
adc
repz
icebp
arpl
xlat
sub
addr16
xor
push
aas
sbb
test
jnp
arpl
add
push
push
jne
lret
pop
pop
loop
push
cmp
jecxz
mov
arpl
sbb
dec
jp
leave
pop
insl
js
fnstsw
push
or
mov
imul
sarb
push
adc
and
insb
icebp
test
lret
dec
jle
push
lea
and
cmp
sti
fistps
dec
push
and
test
cmp
into
sub
nop
rorb
shl
mov
cs
mov
sbb
add
jecxz
xchg
loope
mov
pop
jle
mov
lods
jl
lret
cmpsb
lahf
insl
add
sub
shlb
adc
dec
xor
stos
inc
xchg
add
out
psubb
xor
cmp
popf
insb
outsb
mov
mov
mov
js
rcr
fstpl
inc
insb
pushf
mov
imul
push
fidivrs
mov
insl
lock
in
rclb
xchg
push
mov
movsb
fistpll
pop
mov
testl
lret
cwtl
pop
or
dec
hlt
mov
cmpsl
and
pushf
push
stos
sub
mov
pop
test
outsl
js
notl
test
outsb
add
mov
adc
add
add
pop
in
stc
sub
pusha
lcall
xchg
push
ret
cmp
or
sub
push
movl
test
je
mov
lret
pop
lcall
cmp
sub
mov
in
mov
popa
mov
aaa
dec
daa
lds
adc
les
shl
push
sub
pop
jnp
rorb
add
movb
pop
sbb
cs
mov
mov
test
adc
ss
inc
sub
sub
inc
dec
pop
js
cmp
ficomps
daa
sub
cmpsb
imulb
add
aam
mov
mov
and
push
std
cwtl
out
lock
call
in
fldt
jp
mov
mov
loope
into
jmp
int3
sahf
push
mov
pop
out
orb
cmp
jo
push
sbbb
cmpsl
add
ror
dec
dec
jbe
inc
insl
lea
inc
sub
mov
mov
add
cmp
push
and
xchg
fcmovnu
inc
mov
test
clc
dec
sbb
mov
stos
dec
sahf
stos
mov
cmpb
xchg
cwtl
lret
sub
jp
fisubrl
rcll
sahf
decb
fwait
jmp
push
or
into
and
adc
jp
popf
into
lea
clc
mov
cmp
imul
fcomp
sub
xchg
mov
pop
je
xchg
sub
mov
pusha
rclb
cmc
outsb
fs
addl
sti
xchg
mov
out
movsb
xor
inc
pusha
nop
iret
push
mov
mov
jle
leave
sub
dec
pop
xchg
cmpsl
jno
pmullw
jle
cmpsl
mov
push
mov
and
mov
enter
cld
int3
sbb
sbb
ss
jmp
push
fnstsw
fwait
pop
fwait
or
pusha
fcomps
mov
cmp
xor
cmc
pop
mov
sub
sar
fnstsw
cmp
stos
add
xchg
imul
lock
es
dec
sti
pop
sbb
int
fisubrl
mov
xor
xchg
ja
cmp
js
pushf
test
jae
fwait
insl
cmpl
dec
bound
imul
pusha
mov
add
mov
lcall
shll
icebp
scas
aas
enter
push
stos
in
cmp
rcrl
mov
in
or
loope
push
in
adc
pop
push
jne
cltd
out
rorl
sahf
dec
outsb
in
xor
push
aad
fidivrs
mov
iret
push
xchg
pop
jle
pop
aas
mov
shlb
xchg
mov
ja
fdivrs
aad
mov
xchg
loope
jb
adc
xchg
or
scas
aas
jne
cmp
jle
xor
xchg
jecxz
movsl
ds
lsl
add
or
jge
enter
inc
inc
test
mov
push
sbb
mov
dec
pop
out
mov
test
sbb
dec
mov
jg
push
fcoms
inc
bound
xchg
dec
xor
inc
sbb
cmpsb
xchg
mov
leave
lock
mov
cmpsb
fsubrs
inc
cltd
movsl
aad
faddl
lret
stc
fstp
push
fidivrs
mov
clc
stos
add
push
push
movsl
inc
jge
mov
mov
push
and
iret
and
mov
add
mov
out
ret
aam
add
icebp
push
mov
push
sbb
or
loope
std
je
pushw
not
adcb
sbb
std
cs
or
mov
jae
cwtl
or
jbe
clc
loop
xchg
movsl
addr16
ljmp
xchg
insl
fwait
mov
icebp
test
out
jno
push
mov
iret
sub
push
xchg
es
bound
popa
pop
inc
push
cmpsb
insl
outsl
movsb
jecxz
pop
call
stc
push
fldenv
cld
in
mov
lret
pop
subb
mov
push
xor
mov
lret
push
cmp
fcomp
mov
mov
dec
fs
xchg
adc
xor
sar
sbb
sbb
jle
in
scas
inc
adc
and
fsubrs
gs
lcall
scas
push
repz
imul
cld
jg
or
shr
sbb
out
sbb
push
and
lods
mov
icebp
jb
insb
std
and
mov
stos
cmp
and
lcall
mov
fdivl
cmp
jb
dec
cmp
lea
push
ss
mov
and
lea
mov
jg
and
jmp
push
sub
adc
or
int
inc
test
rcrl
pop
mov
cmpsb
mov
adc
push
xchg
idivb
adc
sub
push
daa
leave
testl
jne
mov
scas
mov
adc
lahf
int3
xchg
aad
pop
mov
ds
push
or
dec
pop
and
cmp
mov
mov
call
pop
cmp
mov
loopne
mov
xchg
call
mov
cld
lret
add
clc
lcall
pusha
je
movb
push
rcll
mov
pop
aad
xchg
dec
inc
lret
ljmp
loop
mov
loopne
jg
mov
xor
inc
test
std
movsl
sbb
popf
fmulp
cmp
jmp
out
jns
pop
pop
inc
int3
xor
jne
sub
sarb
gs
add
or
xchg
mov
das
and
fsubl
hlt
fdivrl
lock
sbb
ret
insl
pop
xor
xorb
pop
aas
hlt
dec
lret
mov
push
stc
adc
pop
clc
jp
and
mov
gs
insl
stc
mov
mov
cld
in
inc
adc
dec
add
inc
push
sti
mov
stc
xchg
adc
push
or
ficompl
mov
mov
jp
fnstenv
out
in
in
notb
mov
mov
lods
mov
xchg
into
mov
inc
daa
pop
imul
jp
or
ret
mov
jmp
pop
sahf
lcall
cmp
in
bound
rcl
sub
inc
xor
out
pop
inc
ret
cmc
pop
leave
xchg
lret
dec
leave
xor
push
cld
loopne
jno
cli
pop
insb
mov
popf
test
mov
rclb
sbb
test
bound
aam
repnz
push
icebp
jne
subb
jbe
adc
loop
dec
test
mov
cmpsb
lds
lds
jl
aaa
in
xor
aad
inc
xchg
sub
xchg
aad
fldl
mov
lret
enter
xchg
sbb
fs
fsubs
pop
js
cltd
idiv
fwait
sub
cli
fcmovnb
js
add
shll
bound
cs
push
cmp
out
and
pushf
stc
dec
sbb
das
test
jecxz
push
mov
cltd
cli
sub
xor
jecxz
lcall
call
lahf
outsb
push
es
mov
mov
insl
mov
push
aad
mov
inc
shr
pop
jp
adcl
out
jns
std
mov
or
es
scas
xchg
loopne
pop
aaa
pop
pusha
xor
mov
jg
outsl
fildl
inc
daa
sub
inc
test
imul
in
popf
std
add
mov
pop
mov
sbb
out
sahf
subl
push
mov
arpl
testb
dec
dec
xor
and
mov
push
insl
or
fstpl
test
movsl
inc
lods
js
rorl
mov
or
ficoml
ret
jns
jno
scas
stc
outsb
pop
push
sahf
imul
movsb
xchg
and
sar
loopne
int3
aad
xchg
insb
cmp
cli
xchg
mov
xchg
push
scas
push
stc
dec
sbb
jo
xchg
or
pop
out
cmc
xchg
cmp
push
bound
aam
push
mov
jle
stos
shl
pop
add
pop
jp
add
mov
dec
push
lahf
rorl
xor
lret
xor
mov
in
das
ret
cmp
jle
pop
mov
dec
lea
xor
sahf
pop
pop
adc
inc
movsl
sub
test
cmp
ret
jne
mov
mov
addr16
icebp
mov
mov
andl
jle
push
clc
and
pushf
jns
cld
push
pop
fnstenv
mov
int3
out
mov
sub
jle
loopne
or
int3
hlt
pop
mov
xchg
sbb
ficoms
test
inc
lods
pop
out
xor
ljmp
and
jmp
add
mov
sbb
repz
adc
cli
pop
lods
adc
sbb
rorb
popa
lea
inc
jb
test
test
mov
push
shlb
movsl
int3
lods
or
gs
in
xor
pop
jmp
hlt
sarb
jnp
push
bound
aam
fdivl
mov
jle
fadd
dec
imul
mov
out
xor
or
push
or
mov
movsb
icebp
sti
lret
push
push
mov
push
fildl
fiadds
lcall
jmp
das
inc
and
mov
dec
je
push
push
sub
addr16
xor
dec
xchg
shll
dec
push
lcall
stos
inc
aam
jle
sub
and
mov
jmp
call
lea
call
push
jmp
adcl
dec
divl
jg
pop
push
or
leave
jnp
sub
movsl
rorb
imul
push
ss
or
jmp
repnz
or
add
inc
gs
jne
jb
outsb
je
push
dec
add
mov
test
mov
clc
push
bt
test
movb
call
jecxz
mov
mov
adc
dec
arpl
pop
jnp
dec
inc
xor
mov
addl
mov
jns
dec
push
loope
aas
jg
mov
xor
or
cs
hlt
lea
lret
jbe
mov
icebp
push
ljmp
js
imul
ja
out
shl
outsb
mov
lods
mov
jb
call
sub
pop
lock
and
iret
pusha
std
sbb
fcmovne
pop
lret
xlat
pop
stc
jp
pop
rorb
mov
call
jne
jbe
dec
jb
and
sub
push
jp
fbstp
cs
sbb
cmp
fisttpl
and
loopne
adc
aaa
stc
push
xchg
mov
jecxz
xchg
cs
pop
push
sbb
jno
bound
or
arpl
inc
jb
gs
mov
jno
sub
jg
mov
data16
scas
sbbl
sahf
jbe
sbb
cmpb
les
mov
cmpsb
repnz
ficompl
in
pop
mov
mov
push
mov
push
and
divb
sar
daa
inc
into
or
adc
mov
mov
mov
mov
xchg
jecxz
fwait
push
lods
push
fcmovu
sbb
repz
jg
ljmp
jnp
movsb
xor
sub
xchg
jg
push
and
xor
je
adc
cmpb
add
shlb
ret
enter
push
add
add
shl
pushf
mov
push
push
pushf
jmp
call
call
rcll
jnp
in
or
enter
sub
mov
cmp
sbb
imul
in
es
clc
mov
insb
mov
repnz
iret
pop
pop
hlt
pop
push
cld
scas
cmp
push
xchg
sub
pop
ljmp
gs
insb
inc
js
arpl
gs
js
add
addb
add
mov
and
jg
add
add
pop
mov
pushf
lea
jne
btr
pushf
bt
inc
mov
clc
cmp
call
or
shl
mov
stc
not
not
add
jmp
call
jge
gs
jnp
sbbl
shrb
sub
sbb
pop
fnstenv
xor
test
xchg
cld
or
aas
cmc
mov
mov
inc
or
mov
sbb
jb
lock
cmc
or
adc
fildl
dec
aaa
pop
lock
rsm
inc
push
pop
add
stc
rcrl
mov
and
jne
btr
xor
bt
mov
xor
clc
neg
test
add
not
pusha
mov
bt
jmp
sbb
fmuls
mov
fcomi
cwtl
mov
cmc
push
pop
adc
shr
sarb
gs
sub
mov
insb
and
fcomps
lret
mov
mov
xchg
in
in
je
fwait
xor
and
test
test
stos
aam
test
arpl
movsl
and
leave
arpl
mov
pop
xchg
cmp
mov
gs
and
aam
xor
cmc
fdivl
push
pop
out
push
sbb
inc
test
dec
test
test
lret
jo
in
sub
mov
mov
mov
stos
mov
outsb
or
jge
push
adc
icebp
push
lock
test
lods
ret
shlb
shld
insb
or
and
jl
pusha
push
pushf
adc
mov
movb
sub
push
push
jmp
loopne
in
jnp
sub
aad
mov
in
inc
shll
in
dec
pusha
dec
or
test
sub
mov
mov
fsubrl
addr16
ja
pop
arpl
sti
lret
daa
and
sub
add
and
imul
ja
mov
fnsave
movsl
mov
pop
aaa
xlat
push
or
adc
jmp
pop
add
cli
or
xor
inc
pop
repnz
into
rorl
mov
in
add
adcl
pop
in
test
xor
in
sbb
lods
xchg
cwtl
rorb
mov
or
outsb
xchg
imul
ljmp
xor
add
lret
je
iret
or
out
mov
mov
adc
pop
or
out
aas
inc
sbb
fs
stos
sub
nop
push
pop
aas
ret
sbb
adcl
or
sbb
add
mov
xchg
lock
pop
cld
movsb
les
clc
lea
jae
pushf
seto
lea
pusha
jmp
push
pop
stc
dec
jnp
in
pop
cmp
fistpll
jle
push
out
or
dec
or
bound
outsb
push
mov
push
cmpsl
js
jns
mov
shl
inc
dec
data16
pop
std
js
jp
adc
cmp
fcmove
and
roll
inc
orl
test
or
push
into
push
aad
pop
xchg
mov
pusha
clc
adc
mov
outsl
cmp
jle
mov
stc
push
bsf
sar
mov
cmp
inc
push
stc
push
sub
pusha
btr
rcl
mov
btr
dec
bsf
movzbw
mov
bsf
xchg
cmc
xadd
and
sbb
mov
ror
shrd
call
call
sub
mov
jnp
das
adc
jmp
daa
sub
pop
aas
push
fistps
lret
ret
out
jmp
test
sub
pop
add
fisttps
aaa
movsl
pusha
dec
leave
adcb
push
es
int3
stos
mov
testl
and
jmp
bsr
rol
shr
bts
mov
push
and
cmc
test
call
pusha
push
lea
jae
pushf
lea
jmp
push
lea
jb
call
call
mov
push
push
pushf
lea
jmp
lea
call
clc
stc
cmc
mov
pushf
bt
cmp
jmp
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
fs
jb
ror
cwtl
neg
rcr
mov
call
add
add
bsr
not
daa
push
bswap
daa
cmc
mov
bswap
bt
bts
sub
cwtl
bsr
push
or
push
shl
movzbw
push
lea
bsf
xor
pusha
lea
jmp
jmp
test
sub
fdivrs
outsb
lahf
ldmxcsr
out
les
pop
test
leave
xchg
pop
cld
sahf
xor
ds
push
xor
cmpsl
cmp
rcrb
and
jg
int3
in
cld
adc
and
cli
int3
sub
insl
out
lret
loop
popf
or
pop
xlat
imul
shrl
mov
and
lds
cli
mov
insb
test
or
lock
in
ss
push
jo
daa
aad
pop
adc
shl
test
setno
pop
movsbl
or
sub
or
pop
shl
aad
pop
call
imul
imul
jne
xor
mov
fdivl
jns
aam
pop
outsb
sub
call
iret
addr16
xlat
xchg
sahf
leave
icebp
inc
mov
lcall
enter
and
mov
dec
arpl
dec
inc
pop
in
mov
or
inc
xchg
shll
pusha
daa
inc
add
movsb
fbld
cmp
popa
jno
push
cmp
negl
stos
ds
in
lods
mov
stc
adc
cmp
pushf
lea
ja
push
pushf
pushf
mov
lea
jmp
cmp
call
or
mov
aad
xchg
mov
push
outsl
sbb
repz
fildl
aam
cwtl
imul
repz
test
sub
pop
xorb
and
sbb
jp
inc
dec
xchg
xchg
scas
dec
shrb
jle
push
repnz
push
jecxz
or
ret
jne
pop
inc
xor
jno
lods
pop
repz
mov
jmp
repz
dec
push
call
mov
push
lock
adc
lret
in
and
out
into
pop
sub
xchg
xor
mov
outsl
test
cmp
pop
push
shlb
scas
push
mov
and
bound
dec
repz
adc
sub
sti
stc
js
ret
xor
popa
mov
inc
add
rorl
push
icebp
mov
xchg
in
mov
loop
push
jae
inc
and
mov
ljmp
leave
or
xor
push
pusha
test
fwait
in
test
inc
popa
mov
push
ljmp
movsb
jge
xchg
addr16
stos
inc
aad
or
lds
ret
adc
stos
mov
sbb
add
sbb
xor
cmp
mov
pop
inc
jnp
jno
xchg
scas
push
xchg
dec
into
sub
xor
stos
mov
insl
addb
test
loope
out
push
outsb
xchg
imul
rcll
adc
mov
xchg
and
adc
inc
cld
daa
dec
popf
out
jecxz
jo
ljmp
xor
mov
ror
xchg
imul
or
scas
lds
push
pop
mov
cmpsb
jmp
xor
mov
jbe
jnp
jg
push
ljmp
sbb
rorl
push
push
mov
outsl
cmpb
lock
pusha
cmpsl
loope
lcall
dec
cmp
sti
out
inc
dec
std
ss
popf
outsl
mov
or
or
stos
mov
je
shl
lcall
cli
dec
fidivl
add
arpl
push
sti
shl
ds
sbb
xchg
mov
push
jo
mov
xchg
fs
data16
sti
nop
pop
ret
movl
cli
cmp
out
or
dec
xor
ror
cmp
pushf
and
scas
test
pop
outsl
pop
je
aam
pop
mov
cli
jmp
aaa
insl
pop
xor
jne
movsb
push
mov
pusha
mov
mov
push
movb
mov
mov
xchg
xor
incl
sub
xlat
icebp
or
mov
bound
sbb
loope
inc
xchg
sub
fdiv
adc
stc
std
mov
in
or
add
jle
jp
out
rol
addr16
shrb
mov
mov
loopne
adc
aaa
popa
mov
cmp
push
push
mov
mov
out
test
mov
lcall
push
ss
mov
xor
jmp
sub
in
adc
jle
push
xor
mov
cmp
sbb
in
in
add
xor
icebp
loope
aas
movsl
mov
fldcw
xor
out
loop
scas
sahf
jbe
xchg
test
pop
push
roll
xchg
xor
shl
shll
xchg
cmpsb
es
lahf
mov
add
jg
inc
pop
pushf
xrelease
lea
test
das
fisubrl
neg
pop
pushf
sub
ror
xadd
mov
sub
xadd
not
shr
mov
add
mov
btr
inc
pushl
rol
mov
xor
cwtl
bsr
mov
rol
pushl
stc
rol
add
movsbw
movsbw
pop
pusha
push
pushl
ret
push
sub
inc
jnp
xchg
mov
in
or
dec
out
call
addr16
lret
mov
mov
jae
jb
sub
inc
movsl
push
dec
adc
add
add
add
andb
in
jl
inc
lahf
nop
out
arpl
fwait
jbe
lock
loopne
jecxz
xchg
xor
xchg
in
adc
lcall
push
hlt
sbbl
jb
lret
pusha
je
call
pusha
lea
jne
bswap
shr
xor
btc
mov
cmp
add
add
mov
cmc
pusha
test
pushf
push
lea
je
bt
sub
stc
jmp
or
movsb
jecxz
fwait
ss
cmp
stc
scas
dec
imul
ror
push
jle
xchg
repnz
and
leave
sub
leave
in
aad
push
cld
mov
sbb
cmp
dec
xchg
and
or
movsl
aad
ljmp
mov
jo
push
mov
mov
es
sbb
outsl
test
xor
fstpt
cmpsl
ret
fisubrs
mov
mov
lea
and
call
call
pushf
or
insb
add
and
sbb
je
or
mov
sbb
cmp
fisubrs
sysexit
and
sahf
cmpsb
fwait
push
cmp
push
mov
sbb
push
add
pop
lret
pusha
jnp
andb
adc
sbb
inc
lds
stc
adc
loop
enter
push
scas
enter
xchg
xor
decb
mov
inc
pop
ljmp
mov
les
cmp
popa
negl
xor
in
dec
push
lea
push
outsl
sub
push
jns
sti
dec
dec
mov
sbb
mov
paddd
into
mov
sti
mov
mov
cmpb
xchg
pop
jo
testl
data16
mov
lds
mov
mov
std
rcll
movl
xor
bnd
mov
int
push
out
or
xor
push
imul
test
sbb
adc
pop
xchg
cltd
scas
jb
push
push
cmp
cmp
fwait
xchg
out
jp
stos
sub
in
or
cmp
into
and
dec
in
xchg
cltd
xor
pop
dec
and
scas
mov
jnp
cmp
shr
xor
ljmp
push
and
add
js
cmpsb
stc
pop
pop
and
fdivp
jmp
cli
aaa
xchg
jp
push
and
mov
mov
loopne
lea
fwait
movb
scas
mov
pop
jnp
ret
loope
mov
stos
push
mov
push
jns
sbb
pop
sub
int
mov
jl
mov
cmp
cld
jmp
in
fisttps
sub
xor
gs
xchg
ljmp
ret
add
std
mov
ja
push
sti
orl
cmp
stos
pop
jae
adc
pop
mov
jb
sarb
mov
adc
mov
xchg
int
or
xor
or
mov
pop
add
hlt
xchg
cli
mov
jno
sbb
in
jge
inc
and
ljmp
add
popf
inc
cwtl
jl
cltd
scas
jb
inc
mov
xchg
rcr
ret
call
mov
stc
sti
xor
popf
jb
addr16
jmp
aas
jl
jge
addr16
aam
inc
call
cwtl
mov
jns
pop
jmp
das
inc
loopne
nop
and
jno
sbb
dec
cs
orb
into
xchg
ljmp
mov
add
fs
jmp
call
mov
adc
mov
mov
dec
jae
scas
inc
imul
fcom
mov
mov
push
andb
repnz
push
out
adc
sbb
jbe
je
sbb
outsb
js
xor
mov
mov
pusha
cmp
jmp
rcll
scas
cmpsl
data16
xchg
jge
cmp
push
pop
mov
popa
out
add
fisubl
clc
insl
cmpsb
jecxz
clc
push
adc
xchg
sub
mov
shll
pop
ret
cld
loop
cmp
dec
fidivrs
mov
mov
pop
add
jne
mov
cmp
test
cs
and
mov
sub
bound
mov
imul
mov
cltd
scas
fdivl
add
lock
and
in
std
adc
lahf
xor
lahf
jmp
popa
cmpsb
repz
mov
xor
or
leave
xchg
inc
push
enter
cmpsb
mov
add
jge
outsl
call
cmp
out
push
inc
push
pop
int
gs
push
sub
outsb
pop
xor
jnp
pop
sub
into
lods
or
int3
shll
jnp
mov
jae
es
xchg
and
loope
inc
adc
mov
fldcw
xchg
es
pop
outsb
or
or
cmp
xchg
lods
inc
xlat
pop
jmp
lea
jne
pusha
pushl
mov
pusha
mov
jmp
push
sub
ss
shrl
jne
stos
inc
jmp
jne
clc
das
clc
arpl
fdivrl
pop
gs
lret
mov
xor
insl
pushf
movsl
outsl
mov
sti
daa
test
fdiv
xor
daa
test
mov
cmpsb
and
pop
inc
lea
loope
jge
adc
mov
push
jns
inc
adc
add
stos
mov
test
repnz
xchg
mov
jl
xor
sbb
popa
inc
dec
cmp
sub
xchg
fsubl
jno
inc
pop
add
sub
mov
in
int
xchg
pop
std
aad
aaa
jle
test
mov
jb
mov
or
mov
push
aas
enter
out
dec
and
pusha
mov
lea
movb
call
push
pushf
call
cmp
movsl
pop
jnp
inc
pop
popa
fs
fnstsw
sbb
dec
out
add
cs
in
out
pop
mov
pop
dec
or
ret
stos
push
dec
ja
scas
popf
sub
cmp
insb
mov
nop
call
js
test
push
testb
push
pop
in
mov
jae
ss
pop
sub
xchg
out
sbb
fisubrl
adc
out
cmp
push
mov
cltd
mov
xorl
mov
andl
jge
sbb
jmp
push
jo
pop
sub
pop
jne
cltd
outsl
xchg
arpl
call
xor
stc
pushf
test
call
std
into
pop
jnp
cmpsb
scas
dec
scas
fs
test
pop
ja
cmp
scas
jecxz
sub
push
loop
or
addr16
rorb
movsb
dec
cld
imul
mov
or
dec
repz
ffreep
cld
push
inc
je
int3
mov
or
mov
js
cmpsl
jbe
lret
lock
inc
add
adc
dec
jns
dec
xor
sbb
xchg
sub
aad
mov
lods
fidivl
bound
stc
out
mov
mov
adc
call
pusha
call
pushf
and
aad
shld
shl
shrd
mov
pusha
pushf
shl
cmc
stc
call
lea
jb
add
mov
shl
cmp
lea
movsbl
cwtl
mov
jmp
pusha
bt
bt
sub
lea
cmc
cmc
push
or
push
pushl
pushf
pusha
lea
je
lea
pusha
mov
bswap
mov
setae
pusha
mov
lahf
lahf
lea
pushf
movl
push
jmp
ds
aas
pop
jnp
cmpsl
shl
jge
ss
negl
jnp
xor
pop
jb
or
aad
test
ja
lock
pop
leave
cmpb
or
stos
sbb
es
jae
push
xor
adc
mov
mov
repnz
sbb
loop
jne
imul
and
lods
inc
pop
fwait
fnop
adc
cmp
jnp
inc
pop
jnp
pop
cmp
dec
out
mov
fadds
dec
cmpl
xchg
pusha
in
jp
mov
mov
fidivrs
scas
and
or
es
mov
push
pop
ja
cmpsl
mov
xor
fdivl
in
push
popf
sub
call
pushf
lea
call
call
lea
jmp
es
sub
mov
filds
and
ss
lock
push
sahf
inc
ffree
xchg
lcall
jecxz
dec
mov
enter
out
fsts
inc
pandn
hlt
movsl
test
push
inc
push
in
enter
sbb
jecxz
sub
pop
pop
push
arpl
xor
movsb
ror
lcall
jbe
lcall
cltd
and
pop
jbe
arpl
or
sub
es
cmp
lea
mov
jns
push
jnp
es
fs
cld
arpl
outsl
push
jnp
jno
pop
lcall
mov
jecxz
out
mov
popf
lock
test
ficompl
cwtl
sahf
das
stc
clc
mov
aam
imull
jl
push
cmp
into
pop
xlat
testl
ror
jmp
repnz
mov
sti
lods
xchg
mov
into
mov
in
push
jne
add
push
test
lods
pop
lock
jp
jmp
sub
in
or
add
and
mov
mov
shl
setbe
mov
clc
repnz
push
lea
jne
lahf
call
mov
push
jnp
lret
call
inc
pop
notb
std
xor
jo
insb
call
pop
popa
jle
stos
inc
js
sbb
xchg
rolb
out
mov
rolb
or
jle
loopne
push
orb
add
sbb
cmp
pop
dec
jle
mov
in
cmp
sar
adc
leave
sahf
in
mov
out
jmp
movaps
dec
jecxz
mov
popa
and
loope
test
jnp
jg
cmp
mov
leave
das
addr16
or
push
mov
data16
leave
enter
loop
and
jnp
out
popa
cmp
insb
int3
push
xor
add
inc
movsb
lcall
or
enter
out
push
pop
xchg
xorb
pop
ljmp
jecxz
icebp
jne
mov
xchg
fistpl
imul
enter
cmpsb
pop
icebp
cld
cmpsb
rorb
inc
sub
aaa
gs
mov
push
jnp
test
jns
stos
push
mov
jnp
ds
and
dec
test
dec
mov
jne
adc
mov
xchg
lock
mov
cmp
repz
shlb
repnz
out
adc
adc
jnp
jnp
push
inc
cwtl
das
enter
push
cmp
lods
inc
dec
jae
lret
pop
xchg
xchg
test
pop
lahf
adc
rol
bsr
pop
push
test
cmp
pusha
pushl
jmp
pusha
push
call
pop
jae
push
jnp
aad
mov
xchg
adc
jo
jae
out
xchg
test
mov
add
adc
dec
popf
cmp
out
nop
lret
int3
cmp
xor
or
dec
mov
add
leave
or
mov
sbbl
add
inc
cmp
cli
addr16
das
lods
sbb
test
imul
xor
jmp
arpl
sbb
int3
pop
mov
inc
inc
push
call
add
pushf
push
lea
jle
jb
dec
inc
mov
jmp
or
movw
pusha
lea
je
stc
pusha
cmp
pushf
lea
jne
call
jmp
mov
int3
dec
iret
mov
pop
jnp
shll
in
loopne
faddl
ljmp
dec
js
js
push
popa
cmp
ljmp
scas
test
sbb
ja
int
push
and
test
or
les
movsl
aam
cmpsl
dec
mov
popf
out
dec
or
push
mov
adc
hlt
inc
jecxz
cltd
in
aaa
aaa
push
adc
adc
js
push
jmp
jp
cmpsl
xor
xlat
push
jnp
iret
in
add
mov
add
cmp
testl
imul
xchg
cmpl
into
sbb
stos
aas
mov
clc
stos
clc
in
sub
inc
pop
stos
es
aas
loop
call
sbb
les
outsl
sub
test
movsb
je
xchg
or
mov
mov
out
jle
or
jb
adc
icebp
dec
xor
adc
lods
inc
pop
outsb
orl
sub
dec
push
rol
je
jnp
cwtl
sbb
fadds
mov
mov
jge
iret
in
loopne
or
leave
repz
mov
loope
popf
jno
nop
shlb
jne
lcall
dec
dec
jo
pushf
mov
shll
fst
and
pushf
push
mov
mov
shrl
and
fwait
and
mov
int
cltd
daa
mov
fidivrl
icebp
push
sbb
xchg
xor
add
sub
or
add
jp
xor
xchg
test
sbb
call
mov
inc
clc
mov
stc
rol
test
stc
call
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
in
push
jnp
and
xchg
ss
insb
push
xlat
nop
mov
push
dec
not
int3
rcll
adc
mov
dec
fisttps
test
mov
lahf
xchg
pop
imul
or
lahf
lcall
aas
std
dec
dec
xorl
mov
adc
mov
out
stos
cmpl
cli
mov
cmp
xchg
xor
inc
pop
jo
push
movw
lea
pushf
push
lea
call
pusha
pushf
push
lea
jb
shl
cltd
jmp
mov
mov
int3
data16
push
lret
jmp
rcr
xchg
test
mov
dec
add
idiv
call
pop
mov
and
sub
loope
loope
push
nop
mov
mov
add
cmp
mov
int
jge
sub
movsb
mov
pushf
lea
je
bt
cmp
test
clc
add
cmp
stc
cmp
test
cmp
pusha
lea
jb
pusha
pushf
pushf
cmp
call
sub
pushl
call
bound
push
jnp
sbb
inc
pop
add
lock
mov
jnp
int
testb
test
lcall
and
std
sbb
xchg
xchg
enter
dec
xchg
xchg
xchg
test
stos
jo
stos
cmpsl
lods
xchg
xor
insl
xor
pop
aaa
pop
not
loopne
jno
loopne
mov
sub
xor
andb
lret
jne
mov
xor
cmp
adc
inc
ret
jne
lahf
mov
cmpsb
inc
rcll
sbb
fstp
not
lods
clc
cmp
cmp
call
call
pushl
lea
jae
sbb
shrd
mov
dec
mov
jmp
xor
cmpsb
mov
mov
in
or
lret
mov
repz
outsl
cltd
mov
cmovae
sub
jle
pop
dec
lds
jl
pop
mov
das
push
jbe
lcall
and
js
cmpsb
mov
sub
mov
adc
and
call
movsbw
not
mov
jmp
setnp
mov
mov
push
lea
je
jmp
sbb
pushl
pusha
lea
movb
lea
jmp
bswap
pusha
not
mov
mov
bt
bt
stc
jmp
lea
jae
je
rcr
mov
sbb
add
adc
mov
shrd
shrd
mov
pusha
pusha
pushf
stc
xor
cmp
movl
repnz
jmp
mov
call
push
xchg
sbb
add
out
mov
jle
push
jl
mov
mov
ljmp
fistps
enter
add
mov
cmp
int3
pop
fmulp
xlat
shll
ret
aad
add
int3
jg
dec
fmuls
fmull
push
inc
in
jmp
cmp
add
mov
jmp
or
pusha
adc
sub
dec
int
adc
push
push
sub
and
shll
pop
sbb
inc
mov
int
jns
adc
xor
xorb
add
mov
add
ljmp
and
mov
jmp
jle
sub
mov
or
jg
jb
insl
jmp
xchg
and
ja
repz
fs
inc
out
mov
pop
add
js
add
into
cmpsb
mov
mov
pushf
lods
and
loope
mov
bound
les
imul
xor
nop
cmp
mov
cmp
aas
and
fs
and
stos
cli
and
aad
lea
leave
insl
inc
popa
js
movsb
ljmp
dec
xchg
xchg
sub
jecxz
fs
out
nop
into
rorl
js
xor
cltd
icebp
jb
dec
xor
jg
dec
push
aas
out
mov
mov
dec
ljmp
dec
hlt
into
xchg
movsb
in
mov
lret
lcall
in
push
inc
sbb
mull
mov
pop
mov
or
lock
movb
mov
ja
repnz
out
movsb
jno
jp
inc
xor
mov
mov
ss
jmp
pop
push
inc
cmc
jns
ret
jmp
aaa
pop
add
push
push
push
push
pop
pop
lock
or
push
call
push
adc
test
sbb
pushf
pop
and
imul
push
and
dec
inc
cli
loop
into
xchg
mov
lock
enter
xchg
mov
dec
xchg
aaa
hlt
test
push
fsubs
imul
add
add
cmc
xor
mov
jne
in
mov
loope
jp
repz
fisttps
sub
test
sahf
fcompl
shlb
sub
inc
sub
cmpsl
dec
popf
mov
push
loopne
fisttpll
sub
add
cmp
cmc
jnp
aad
pop
outsl
xchg
aad
xor
leave
inc
enter
dec
sub
xchg
adc
rcll
pop
xor
je
lods
jnp
addl
cld
mov
ja
mov
push
std
outsb
and
insl
mov
stc
mov
sub
pop
push
addr16
push
dec
stos
pop
movsl
leave
lods
je
xchg
jb
pop
add
or
and
push
enter
mov
pushf
push
pusha
inc
and
out
movsb
jge
int
xor
das
push
in
mov
cmc
sbb
frstor
sarb
into
xchg
hlt
xchg
xor
outsl
or
or
inc
aaa
xchg
fwait
rcrl
jns
ret
in
orb
push
inc
addr16
ss
mov
xchg
daa
sbb
adc
pop
in
test
cltd
cs
call
sub
pop
in
inc
out
enter
push
and
movsb
inc
push
mov
mov
lcall
out
xchg
pusha
add
push
in
nop
ja
push
popa
jo
fcmove
cmc
stc
in
out
out
mov
and
mov
fwait
ret
les
jecxz
jne
mov
aam
jb
insb
sub
mov
dec
cmc
ds
js
jb
nop
sub
das
pushf
mov
mov
loopne
cwtl
sub
pop
sti
test
mov
incl
in
inc
or
ret
std
xchg
mov
jg
jle
addb
mov
iret
push
cwtl
push
in
shlb
mov
scas
add
ret
in
or
nop
pop
bound
fnsave
sub
in
cmp
shll
rcr
inc
add
sub
push
test
call
imul
pop
mov
pop
pop
nop
xor
add
pop
cmp
push
or
clc
dec
lret
jecxz
call
mov
aaa
repnz
divb
bound
push
xorb
add
lret
mov
lcall
insl
fistl
push
push
shr
repz
add
cs
arpl
xor
lock
pop
fnstsw
mov
inc
push
pusha
loopne
fsubl
aas
jo
xchg
fldt
add
stos
andl
in
sub
adc
jae
sbb
sbb
mov
mov
mov
call
lea
mov
push
shll
jmp
or
in
sub
mov
adc
popl
loop
mov
jl
test
inc
adc
jge
add
fbstp
push
dec
push
cli
fdivl
and
movsl
sub
mov
data16
outsl
fldl
icebp
cwtl
jnp
inc
sarl
push
or
cmp
dec
and
mov
inc
mov
jp
aas
jo
out
adc
lret
mov
dec
inc
xor
xchg
nop
and
dec
sbb
xchg
in
cs
inc
rorl
adc
jne
dec
aad
sub
xor
xlat
adc
add
ds
out
mov
scas
test
jp
ret
mov
inc
jno
and
push
out
enter
repz
push
sbb
sbbl
or
adc
lahf
jo
dec
push
xchg
rolb
lods
pop
sbb
pop
mov
adc
sbb
es
jle
in
insb
mov
nop
or
jns
inc
dec
jmp
imul
test
xor
pusha
call
mov
sub
cmp
scas
sub
add
cmc
jno
push
mov
aam
rorl
add
adc
add
test
mov
andl
shr
adc
outsb
sbb
cmc
jne
push
cmp
mov
gs
hlt
shll
add
mov
xchg
push
fistpll
mov
lods
mov
cmc
mov
cmc
ds
in
test
and
nop
push
add
mov
xlat
sbb
cli
and
xchg
mov
sbb
adc
out
pop
sbb
test
out
lock
pop
sbb
cwtl
jo
jmp
and
ja
neg
adc
pop
mov
pop
xor
fcomps
cmc
jo
xchg
jmp
pop
imul
xchg
flds
jno
stos
xor
dec
sub
loop
lahf
sub
jg
or
rolb
out
xlat
xchg
or
xchg
popf
pop
inc
in
push
mov
dec
js
fsubrs
rorl
jb
arpl
stos
xor
add
ljmp
inc
loopne
mov
mov
stc
push
mov
or
pusha
shlb
inc
sub
outsl
mov
xchg
sbb
ret
mov
mov
dec
idivb
orl
orl
sbb
cmp
sti
fiadds
insl
js
data16
cmpsb
mov
inc
inc
inc
fwait
jns
mov
mov
jl
ficoml
xchg
sti
or
subb
pusha
imul
dec
xor
push
inc
ret
mov
js
inc
xchg
test
mov
out
test
xchg
sub
cwtl
pushf
leave
stos
jge
xor
push
mov
push
jb
lret
xor
je
test
mov
loop
sahf
push
inc
popa
lock
adc
cld
add
sarb
sti
jne
clc
movsb
dec
xlat
xchg
adc
loope
pop
mov
or
mov
mov
es
pop
rorb
outsb
pop
pop
jae
in
inc
adc
xchg
std
ljmp
dec
popa
jmp
sbb
inc
mov
push
sub
movhps
in
cs
popf
cmp
adc
fsubrl
sarl
sub
xchg
jns
sarb
jmp
ljmp
sti
stos
les
imulb
jg
cmp
fistpll
nop
pop
daa
cwtl
dec
loopne
or
es
inc
dec
mov
les
add
lahf
and
mov
pop
dec
adc
cmp
jmp
fst
sub
clc
sbbb
gs
sti
adc
sbb
push
jmp
addr16
xlat
lods
popa
or
repz
add
cmpsb
lcall
gs
cmc
jne
push
jmp
shll
orb
pop
test
pushf
adc
rcll
xchg
mov
je
loope
jmp
popa
push
in
imul
xchg
push
push
mov
in
aad
sub
out
jle
test
xchg
pusha
xor
or
sub
add
in
jnp
js
sbb
jge
and
sub
push
int3
mov
xchg
fimuls
cmp
adc
inc
ja
sbb
mov
fldln2
cs
xchg
out
ss
and
jns
xchg
cs
sbb
push
lahf
loopne
faddl
push
mov
ret
sarb
cmp
cmp
cwtl
fstpt
cmc
mov
and
add
iret
loopne
cmp
adc
inc
dec
xchg
ret
ret
mov
and
pop
pop
mov
aaa
mov
in
jae
repz
and
cmpsl
mov
push
dec
cmpsl
jmp
int
push
sub
jno
movsb
mov
sbb
sbb
dec
andl
mov
jno
jo
sub
jno
xorl
cmp
xorb
xchg
mov
inc
inc
push
lcall
out
push
or
sti
dec
jns
subl
cmp
sub
out
mov
int
mov
sarl
cmp
or
dec
ret
or
movsb
push
mov
inc
int3
sub
xchg
jnp
xchg
xor
mov
and
or
mov
push
outsb
cmp
add
mov
sbb
ljmp
push
loopne
lods
icebp
push
pop
fsubrl
xchg
sub
movsb
cmpsb
lds
mov
shr
mov
push
sbbl
lds
cmpsl
xor
add
inc
out
lds
stc
int
push
cmc
and
int3
sub
out
mov
popf
mov
mov
mov
out
mov
jns
mov
jnp
out
fwait
pop
dec
arpl
ret
jp
sub
test
idivb
xor
sahf
dec
int
outsl
xchg
int3
hlt
and
sbb
pop
sbb
nop
mov
shlb
lods
mov
loop
adc
data16
movsb
add
stc
adc
lahf
inc
mov
sarl
pop
dec
addr16
dec
mov
int3
hlt
arpl
cmp
imul
cltd
xchg
jge
fisubs
rcrl
icebp
loope
push
push
imull
pop
push
gs
mov
insb
fs
dec
adc
cwtl
dec
jmp
sbb
adc
je
mov
jmp
and
xor
fisubrs
sahf
xor
or
mov
arpl
mov
daa
jne
inc
push
sbb
cmp
outsb
jle
fcmovne
and
mov
xchg
rorb
mov
movsb
aas
addr16
pop
sahf
insl
cmp
jmp
ret
repnz
xor
lds
mov
js
sub
ds
push
push
jl
mov
adc
mov
pushf
pop
mov
scas
lea
pop
in
xchg
cmpsb
mov
test
sub
roll
sub
ret
sarb
jmp
mov
pop
sub
hlt
loopne
je
testl
mov
and
xlat
mov
fwait
mov
push
pop
lea
xor
dec
and
repnz
rorb
insb
xor
cwtl
loopne
push
push
loope
dec
pop
xchg
xorl
pop
mov
pop
dec
push
push
dec
pop
push
jo
pop
mov
pop
push
es
cmp
sbb
lahf
xor
bound
outsl
mov
sub
xor
mov
shlb
adc
rep
pop
pop
shlb
jecxz
jo
sbb
leave
inc
mov
sub
cltd
mov
mov
mov
sarl
mov
xchg
mov
push
data16
pop
pop
insb
mov
push
adc
cmp
out
pop
mov
mov
push
dec
jae
std
ds
loop
push
ljmp
jnp
or
xlat
pop
xor
hlt
outsl
lea
roll
int
popf
xor
lret
aas
and
push
gs
xchg
pop
addb
mov
scas
xlat
jnp
mov
add
test
mov
roll
in
lock
in
fldl
jecxz
push
push
ja
jne
sub
pop
dec
mov
call
mov
test
jns
lret
in
and
and
mov
jmp
pop
jmp
or
mov
jnp
stc
jns
push
ret
sub
fistl
or
divb
lahf
ss
and
cmp
sbb
mov
fsubrs
mov
imulb
sub
sub
cmp
push
jo
test
sahf
icebp
mov
xor
pop
inc
xor
sub
in
push
decl
push
mov
dec
test
mov
mov
pop
xor
mov
stos
sbb
sti
stos
mov
sub
inc
jb
inc
adc
push
lcall
sbb
xor
test
mov
mov
das
jns
inc
jb
xchg
pop
xor
pop
mov
into
add
mov
mov
jo
test
mov
ret
inc
and
ss
jl
lds
inc
adc
jp
out
loop
movsb
sar
sahf
popf
jecxz
ret
shlb
lret
imul
mov
adc
cmc
jp
or
ret
sub
shrl
lret
aam
insl
ret
cmp
sbb
in
shl
add
inc
inc
in
xor
mov
cs
xchg
test
mov
rcl
pop
lods
scas
xchg
inc
aaa
icebp
inc
bound
mov
push
insb
mov
repz
xor
mov
stc
push
jp
ljmp
addr16
stos
xchg
jno
mov
xor
mov
pop
sbb
push
gs
mov
pop
fstl
inc
or
xchg
notl
pop
pop
insl
xchg
aam
pop
mov
push
add
and
jl
scas
idivl
les
popf
sub
rclb
jecxz
and
pop
xchg
test
cmp
sbb
inc
jp
daa
sbb
daa
stos
ds
xor
ds
sub
ljmp
bound
mov
cwtl
in
out
bound
out
mov
pop
sub
pop
mov
movsl
dec
sbb
lret
xlat
mov
stos
add
fistpl
xor
paddw
dec
sbb
jne
popa
pop
inc
sbb
mov
and
xchg
stos
push
mov
cmp
addps
icebp
rolb
inc
ja
and
cmc
push
sub
dec
nop
push
jmp
shll
xchg
add
dec
xor
pushf
inc
fldl
les
mov
imul
pop
repnz
push
jbe
popa
mov
jb
ficomps
and
test
xlat
xchg
iret
stos
int3
fs
mov
and
xlat
mov
notl
imul
les
dec
add
xchg
jne
mov
mov
pop
dec
loope
xchg
jb
enter
jno
xorb
xor
cmpsb
push
jl
mov
jo
push
mov
shll
mov
xchg
js
mov
sub
lods
aas
xchg
sti
adc
jnp
aas
sbb
test
pop
je
xlat
mov
pop
das
aam
std
or
adc
lret
in
cmp
lahf
xor
xchg
arpl
dec
popf
mov
pop
or
ficomps
cmpsb
movsl
negl
pushf
ljmp
adc
sub
daa
mov
jbe
inc
ror
imul
dec
xlat
clc
rcrl
sbb
and
sahf
aad
pop
add
ja
aaa
scas
notl
or
xchg
lahf
or
sbb
sbbl
or
ja
pop
xchg
cmp
xor
dec
inc
xor
clc
jo
shlb
out
mov
xor
outsl
cmp
inc
xchg
push
mov
and
loopne
lea
stos
cmp
std
mov
js
rol
invd
inc
push
xlat
xchg
stos
scas
push
ljmp
inc
movsb
nop
cld
sub
outsb
dec
lcall
imul
inc
mov
sub
ljmp
xchg
inc
and
cs
imul
xor
mov
das
push
movsb
clc
pushf
jg
shl
leave
pushf
mov
jno
es
inc
loope
fsts
hlt
cmp
in
popf
xchg
jbe
xchg
sbb
mov
ret
jae
jo
es
movsl
push
mov
adc
pop
lock
out
xchg
mov
movsb
movsl
and
repz
sub
sub
mov
std
xlat
std
lods
sbb
gs
data16
in
add
leave
out
add
mov
cwtl
idivl
cmp
loopne
mov
mov
push
outsb
xchg
cld
fcomps
je
add
mov
es
mov
add
mov
out
add
cmpsl
fdivr
mov
inc
icebp
jns
cltd
outsb
jecxz
in
outsl
mov
rcrl
inc
pushf
sarl
add
inc
insb
cmpsl
mov
test
outsl
xchg
mov
and
pop
jnp
adc
iret
push
xlat
fildll
jp
pop
xchg
pop
inc
mov
in
insl
js
cmpsb
sarb
rcl
jmp
cmp
out
inc
dec
mov
sub
sbb
shrb
mov
daa
and
inc
inc
popa
adc
out
loope
adcl
shlb
insb
cwtl
sti
adc
cltd
scas
enter
push
adc
fidivl
inc
mov
lods
movsl
lret
ja
lcall
mov
push
mov
movsb
jmp
jno
add
adc
in
lret
lret
popf
push
fsubrl
mov
out
dec
scas
sub
addr16
out
mov
inc
cld
shrb
xor
mov
adc
arpl
ret
add
test
inc
mov
lea
sub
jmp
pop
loop
adc
in
xchg
leave
push
jno
sbb
sub
adc
rcll
cmp
xchg
std
mov
jnp
lret
lods
sarl
sub
in
gs
scas
push
insb
adc
loope
pop
jns
aas
mull
or
or
adc
int
dec
pop
aaa
sub
adc
cmp
inc
and
hlt
js
cltd
add
jns
lods
mov
jo
subb
pop
sub
dec
cmp
inc
repnz
aad
cld
stos
push
mov
xor
mov
pmaxub
arpl
ret
repnz
cli
repz
int3
ret
pop
push
into
push
imul
int
sub
mov
xor
adc
int3
and
fmuls
add
push
cmp
hlt
sub
clc
mov
push
sbb
or
xchg
jp
outsb
sbb
xchg
lret
test
add
ja
sti
inc
inc
or
mov
cmp
fld
repz
sub
stos
stos
push
lcall
xor
xor
daa
das
jnp
into
andb
inc
push
ret
lds
mov
sub
and
out
cs
dec
cs
cltd
mov
shlb
loope
dec
call
mov
sbb
mov
sti
fiadds
cwtl
sub
inc
in
add
insl
xchg
xor
sub
and
xor
sub
push
mov
jne
addr16
sub
enter
sbb
clc
pop
stc
lcall
and
call
rclb
in
xchg
pop
and
decb
cmp
xchg
and
jg
jns
sbb
mov
inc
pop
push
and
push
mov
inc
rcrl
add
stos
out
mov
jno
inc
jp,pn
push
dec
call
mov
push
psubusb
inc
aaa
cwtl
or
inc
stc
es
scas
std
push
shll
and
mov
mov
int
pop
jbe
jns
xor
out
fsubr
enter
stos
cmp
ss
cmc
adc
adc
imul
lea
repnz
add
into
negl
sti
push
fnstsw
cmp
outsl
mov
push
adc
rclb
test
jns
jb
lea
adc
addr16
insb
arpl
and
imul
sub
fistps
pop
dec
sahf
add
movsb
xchg
aaa
dec
out
inc
cmp
jl
jno
xchg
fldenv
roll
inc
jne
cmp
push
jns
in
gs
mov
inc
push
dec
pop
jnp
jle
mov
outsl
arpl
add
push
cmc
bound
pop
pop
subb
lds
xor
pop
jge
sbb
repnz
jge
fisttpl
mov
shrl
cwtl
sbb
cli
xchg
pop
xor
fildll
mov
cld
dec
gs
addr16
add
call
stc
mov
shrl
int3
mov
cld
xlat
inc
cltd
stc
icebp
sub
inc
pop
mov
jae
fildl
xor
push
xor
add
int
sbb
xchg
pop
nop
pop
or
dec
lcall
fcmovu
mull
push
rolb
cmpsl
ret
stos
mov
test
cmp
inc
movsb
scas
adc
pop
jp
pop
pop
mov
lahf
sbb
sbb
cmpb
xor
mov
inc
scas
cmpb
popf
mov
cmp
pop
mov
sbb
and
pop
xchg
enter
clc
add
jo
dec
xor
mov
aas
fildll
test
out
popf
fwait
jg
push
cmp
jbe
push
mov
or
mov
leave
pop
push
cmc
fdivr
outsb
push
adc
sub
and
push
mov
inc
pop
or
xchg
jp
jbe
dec
jmp
push
adc
les
mov
test
in
dec
lds
mov
jo
aad
shll
outsl
mov
lods
shlb
nop
sti
add
rclb
testb
js
mov
pop
outsb
xchg
divb
add
rcl
pop
sub
test
mov
imul
adc
jae
test
sbb
xor
and
add
mov
push
pop
and
mov
or
inc
test
js
gs
icebp
jnp
sbb
or
int
pop
mov
ljmp
push
repnz
dec
dec
and
ret
push
mov
fs
leave
xor
xchg
sbb
dec
pop
clc
int3
in
sti
pop
jne
je
movsb
xor
or
loop
xchg
jg
enter
mov
mov
lret
icebp
mov
add
leave
movsl
repnz
push
xchg
add
or
fsubrs
icebp
dec
sub
mov
int
popa
test
mov
pop
cmpsl
jne
addr16
cmc
cmp
arpl
adc
dec
xor
pop
adc
inc
sub
mov
jo
out
imul
ds
cmp
adc
cmp
ds
jecxz
jecxz
arpl
or
xchg
fimuls
pushf
xchg
addl
ja
mov
mov
outsl
cmpsl
jbe
mov
or
adc
pop
popf
std
mov
push
cmp
xor
inc
cmp
aad
frstor
add
jo
in
scas
cwtl
push
in
scas
or
orl
sub
add
pop
pop
mov
add
ja
push
into
mov
xchg
gs
outsl
test
cltd
push
enter
cmp
test
mov
jg
mov
ja
inc
mov
iret
jb
fwait
fwait
in
jle
push
rclb
push
xor
pusha
add
push
jae
jae
pusha
mov
inc
mov
loopne
mov
dec
lds
xor
jne
cs
dec
jp
add
lcall
data16
sbb
imulb
or
cli
push
jb
and
les
mov
fwait
xchg
xor
or
lahf
popa
xor
mov
lret
sub
mov
sahf
cmc
pop
aam
in
mov
inc
mov
or
sti
push
shll
sbb
pushf
xor
push
or
and
pop
jecxz
and
mov
out
cwtl
rcrl
dec
data16
mov
jae
test
scas
mov
lcall
ja
test
mov
pop
enter
popa
scas
enter
and
clc
pop
sub
jecxz
sub
xchg
xor
cmp
push
dec
xchg
or
jp
movsb
stos
dec
sub
push
add
pop
insb
cmp
push
xchg
inc
je
adc
ret
lahf
jno
mov
add
adc
mov
xchg
lret
inc
lds
ja
mov
xchg
push
jle
mov
or
sub
sub
test
arpl
dec
add
subb
mov
mov
das
test
inc
xor
insb
fiadds
repz
test
jge
fisubrs
sti
fs
xchg
mov
repz
xchg
mov
popf
loopne
lret
mov
push
inc
adc
gs
adc
xchg
xor
sbb
decb
mov
inc
dec
cmp
pusha
mov
lahf
sub
mov
cmp
xchg
mov
mov
ja
xchg
push
fsubrs
pop
fisttps
sahf
adc
or
inc
xchg
inc
int
sar
leave
aam
inc
inc
lahf
pop
js
jmp
insl
and
jnp
gs
sbb
in
out
jbe
sahf
adc
mov
pop
aad
mov
flds
or
ds
xlat
cmp
push
and
sbb
jns
pop
inc
push
adc
fidivrs
dec
fsubrs
jns
call
push
sub
test
mov
rcrb
ja
and
sub
stos
pop
xchg
fidivrs
xchg
stos
das
dec
shrl
push
fs
insb
test
in
adc
enter
decb
in
test
jb
mov
dec
scas
xor
xor
test
lods
test
dec
rolb
aad
add
add
jmp
and
stos
roll
mov
xor
hlt
arpl
cmp
lds
dec
cmp
add
movsl
push
jns
cli
shl
mov
lret
adc
cmp
call
or
ret
pop
out
gs
lcall
in
add
sbb
cmc
loopne
insl
jo
or
das
pop
dec
or
sub
ss
push
shrl
pop
sub
dec
cld
or
xor
push
jne
lret
push
xor
lods
fs
lods
jns
test
stos
mov
insb
bound
add
into
stos
or
lahf
hlt
jge
pop
xchg
in
xchg
push
push
daa
cld
negl
sbb
shll
mov
xor
mov
imul
popf
aas
pushf
fldl
std
sub
mov
lds
mov
sbb
aaa
xchg
js
inc
popa
jle
jb
pushl
jb
or
popa
int3
inc
push
call
sbb
popf
xchg
cmpsb
inc
sbb
into
adcl
mov
cmp
mov
inc
mov
xchg
not
mov
cli
cmp
inc
push
clc
dec
mov
xor
add
ja
sbb
loopne
popf
mov
call
lret
hlt
lods
jmp
xchg
xchg
xchg
arpl
mov
pop
out
sbb
inc
dec
roll
and
das
movsbl
mov
enter
mov
dec
insb
das
xchg
cmp
jns
cmp
es
adc
testl
mov
hlt
xchg
push
sbb
aam
repnz
cmp
push
push
push
jb
aas
jne
sti
dec
test
cmc
push
adc
mov
lods
mov
jle
sar
pushl
popa
xor
pushf
aam
xchg
mov
dec
test
push
pushf
xchg
rcrl
gs
ret
shl
xchg
mov
test
mov
lcall
cld
jmp
sub
adc
popa
in
pop
xchg
sahf
leave
jne
xchg
cmp
les
data16
push
imul
jecxz
push
adc
fisubrs
or
call
push
test
icebp
mov
add
test
xchg
push
ror
enter
adc
cli
jmp
mulb
repz
adc
loop
xchg
pusha
mov
cwtl
outsl
mov
or
mov
pop
sti
jbe
loop
dec
cmc
cmpsb
dec
push
fidivrl
jle
pop
icebp
lock
mov
sub
movsl
fisubrs
popf
ret
xchg
jne
and
rorl
pushf
xchg
sub
add
push
xchg
fwait
cmp
adc
cld
cmp
clc
mov
push
lcall
repnz
sub
call
push
cmp
pop
or
es
aaa
xor
scas
fwait
cld
cli
mov
add
rcr
adc
lea
xchg
orl
insb
or
inc
push
push
sbb
push
loop
shlb
xchg
mov
mov
jl
mov
mov
fnstcw
call
flds
cmp
add
sbb
sbb
fldenv
nop
push
ret
mov
and
or
shll
jno
pop
jae
popa
fadds
mov
cwtl
testl
adc
inc
mov
lods
stos
mov
mov
insl
cmpsb
insl
aas
inc
clc
ficoms
movsl
jne
jmp
fildll
arpl
or
ss
stos
adc
add
jb
sub
inc
outsb
lods
adc
add
insl
jb
jbe
in
push
fidivs
cmpsl
test
mov
jo
mov
pop
das
or
xorb
in
xor
mov
sbb
pop
xchg
roll
test
sti
sbb
cmovne
and
jae
stos
mov
xchg
or
push
decl
or
add
pop
pop
shlb
sbb
xchg
mov
pop
setnp
mov
lahf
and
jmp
test
cmp
loop
jmp
movsl
dec
push
idivl
mov
mov
mov
adc
cmp
jns
lock
iret
nop
cmp
mov
adc
fwait
imul
xchg
xchg
push
xchg
xorl
jne
mov
mov
fucom
insl
xchg
insl
cli
mov
or
dec
test
inc
pushf
and
cltd
xor
push
inc
lret
cmp
mov
adc
sbb
divb
mov
lock
xchg
lea
jmp
jp
cmp
or
mov
fwait
add
xchg
fcoms
and
jge
in
pcmpeqw
icebp
xchg
fs
pop
in
jmp
mov
jns
jae
pop
pop
dec
out
or
lcall
inc
lods
mov
pushf
jmp
xor
je
sub
sbb
rorb
aam
push
js
inc
cmp
mov
xchg
insl
sbb
cmp
pushf
push
adc
cli
push
ja
sub
out
cmp
pop
mov
jnp
inc
outsl
sub
int3
push
mov
mov
push
scas
daa
jle
mov
jb
arpl
ret
imul
aaa
mov
jge
inc
mov
or
adc
push
clc
sub
mov
xor
mov
mov
and
cld
mov
test
mov
mov
dec
add
out
lea
cmpsl
xlat
ja,pt
aad
xchg
cmpsl
mov
cs
test
sub
daa
fnstcw
sbb
cli
sub
negb
xchg
inc
sub
and
cld
daa
dec
ja
mov
shll
jg
mov
shrb
mov
jl
add
or
repnz
push
push
movsl
jne
cli
dec
lret
cmpsb
xor
les
scas
loope
lret
mov
aaa
lds
fmull
fisttpll
aas
xchg
lock
imul
push
mov
lea
add
xchg
pop
mov
dec
adc
push
arpl
es
sahf
mov
std
adc
loop
mov
std
setno
test
out
sub
xlat
aam
add
popf
adc
or
or
or
das
fstpt
fisttpll
mov
and
mov
shrb
or
ljmp
sbb
and
sbb
jbe
mov
in
mov
xorb
push
mov
or
dec
hlt
jp
inc
inc
mov
mov
shl
mov
add
dec
cmp
stc
mov
lock
jmp
xlat
and
push
insl
mov
mov
cmp
xor
adcb
outsl
pushf
and
repnz
fidivrl
mov
sbb
pop
ficompl
rorl
je
cmpsl
add
pop
sbb
xchg
jo
subl
shl
fldenv
jno
ret
ljmp
mov
adcb
and
inc
repnz
mov
repnz
setae
sub
outsb
dec
into
pop
push
or
inc
int3
push
pop
shll
pusha
imul
ja
ret
cmpl
rcll
xlat
cwtl
hlt
sbb
mov
sub
cltd
inc
dec
inc
cmp
stos
push
pop
mov
mov
jb
push
in
pop
pop
sarb
or
and
add
jmp
jo
sbb
push
xchg
sub
jle
repnz
cltd
call
sub
and
or
push
push
xor
lahf
shrl
mov
bound
adc
or
outsl
les
add
insl
push
dec
ret
shlb
mov
lods
cmc
dec
jecxz
sahf
or
loopne
in
cmpsl
jg
mov
int
pop
icebp
inc
mov
jecxz
fstpl
push
jae
sbb
push
xor
lea
sbb
jb
push
add
or
mov
xor
mov
inc
cwtl
dec
inc
push
push
mov
sbb
out
and
enter
mov
ss
je
fstl
mov
cmpsb
mov
mov
adc
jl
out
scas
je
das
and
aaa
adcl
shrl
mov
mov
insb
loop
fstpt
enter
lgs
leave
stc
mov
push
lods
jo
dec
invd
enter
fildl
lret
loopne
dec
sahf
jle
out
pop
jo
insb
fs
ljmp
test
leave
xchg
mov
mov
subb
into
sbb
cmpsb
mov
jge
out
or
enter
mov
pop
xor
and
ret
mov
fdivrl
xchg
xchg
mov
or
fisubs
sub
and
nop
cmp
pusha
and
loope,pt
filds
clc
inc
sbb
mov
lea
xor
rcl
add
xchg
movl
popf
shrb
test
js
xor
pop
mov
mov
pop
or
jno
outsl
dec
adc
sbb
shll
adc
in
aam
cmp
adcb
add
insb
jns
mul
loop
call
xchg
fwait
xor
xor
ficomps
sub
cs
push
jb
xlat
mov
xchg
lahf
pop
push
in
add
cmc
lods
lret
mov
dec
cmp
add
add
cli
mov
xor
rcrb
mov
push
rolb
addr16
subb
ljmp
loopne
mov
and
ljmp
fidivl
sbb
pop
shll
ret
ljmp
mov
inc
fildll
inc
xchg
sbb
or
sahf
push
adc
aas
ja
or
push
dec
mov
xchg
divl
lret
sbb
mov
add
sbb
lahf
cmpsl
cmpsb
loope
daa
jg
aas
in
jle
jbe
fistl
ja
and
repz
fbld
outsb
push
pop
test
dec
sub
adc
int3
sub
mov
mov
movsb
pop
sub
movsl
pop
loope
call
jae
nop
outsb
lcall
and
jmp
aad
jp
and
repnz
or
jb
sub
xchg
std
ret
sub
xchg
lea
mov
mov
sti
push
lret
out
cli
jge
inc
xor
rcll
pop
lds
fildl
or
inc
dec
hlt
and
cmp
les
daa
stos
sub
dec
mov
xchg
call
push
adc
rorb
dec
mov
push
and
stc
sub
or
dec
sub
sbb
dec
cld
fdivl
orb
in
or
es
shlb
lret
in
mov
adc
cwtl
jne
jmp
mov
push
out
scas
jno,pt
cmp
fisubl
add
and
adc
add
test
sti
lahf
jp
insl
sbbb
pop
pop
jb
fisubrs
fldenv
fcoms
pushf
rcll
xchg
and
icebp
push
dec
cwtl
jbe
test
push
sub
mull
fidivl
pop
push
sbb
and
sub
out
xor
in
mov
jns
aad
addr16
ret
cltd
mov
sbb
jecxz
or
cmp
mov
jne
aaa
xchg
cmp
sbb
mov
je
or
aas
or
or
mov
mov
aas
pop
es
push
add
xor
filds
dec
mov
out
mov
or
xchg
and
sub
push
popa
je
mov
xchg
je
jo
mov
or
inc
push
mov
pushf
fadd
lods
dec
xchg
scas
sub
or
xchg
push
ljmp
leave
xchg
push
xchg
nop
ljmp
movl
arpl
enter
inc
mov
push
sub
cwtl
test
cmpb
dec
dec
sti
or
lahf
mov
icebp
gs
or
in
pop
pop
lcall
jno
mov
or
gs
inc
cmc
in
adc
sub
add
into
cltd
jno
shrb
push
adc
push
js
pop
mov
imul
mov
int3
adc
bound
aad
cli
fldenv
ds
cs
push
clc
in
pusha
jbe
repnz
lea
mov
mov
sbb
sbb
mov
dec
inc
mov
and
insb
aam
cmp
and
mov
mov
gs
fwait
lods
lods
jae
push
pop
subl
push
add
dec
loop
dec
lret
loope
mulb
dec
cmp
mov
inc
and
jmp
jns
clc
pusha
push
sbb
inc
xor
xchg
sti
js
pop
vdivsd
or
int3
cmp
scas
xor
jns
add
sub
adc
dec
out
and
cmp
sbb
mov
in
push
shl
mov
sbb
adc
into
fwait
cs
mov
movsl
sbb
scas
jle
push
push
ret
test
in
cmc
xchg
cmp
test
or
rcrb
dec
pop
leave
and
enter
adc
stos
or
mov
or
stc
sbb
mov
js
imul
fisttpll
test
mov
xchg
insl
lods
xacquire
sub
lret
push
lret
andl
aam
outsl
out
inc
std
dec
sub
push
or
cli
mov
cmp
insb
push
pop
pusha
xor
push
lock
pop
fisubl
dec
ljmp
mov
cmpsl
call
xchg
nop
xor
sbb
fs
pop
pop
mov
sti
adc
add
test
scas
or
mov
mov
or
pop
adc
jbe
popa
dec
jecxz
sti
out
test
popa
sub
cltd
subl
mov
and
aaa
hlt
std
out
inc
fmull
mov
subl
adc
mov
out
rclb
mov
dec
imul
repnz
jbe
jge
ljmp
rcl
pusha
out
cmpsl
dec
or
cld
lcall
or
scas
mov
sbb
jge
jb
xchg
mov
add
adc
cmp
es
fidivrl
mov
out
lret
cs
nop
sbb
pop
sub
sti
xor
xchg
pop
dec
cmp
in
push
cmp
inc
add
negb
inc
das
popa
pusha
mov
popa
xor
fstps
mov
imul
int
dec
lea
xor
ljmp
xchg
gs
aas
das
bound
jle
xchg
xlat
ljmp
dec
gs
popf
imul
push
rcrb
lcall
aam
xchg
test
mov
xchg
negl
ud0
sub
and
lds
xor
jmp
test
mov
lcall
cmp
adc
mov
cmc
pop
push
mov
addr16
pop
pusha
test
add
and
pop
and
mov
mov
lahf
lock
jg
ret
cmpsl
imul
aam
arpl
add
test
cmp
cmp
mov
mov
sarb
mov
jle
pop
daa
pop
imull
std
push
mov
les
ss
in
cld
jecxz
mov
mov
cmp
lret
movsl
dec
sbb
rorl
sbb
test
cmpsb
test
pop
hlt
lock
inc
xchg
pop
repnz
fcoml
scas
and
cmpl
ret
xchg
xor
fadd
xor
mov
aam
in
dec
push
cs
test
aad
fnstenv
add
sub
sbb
mov
sbb
ficomps
out
rolb
mov
lret
outsb
adc
xchg
add
add
xchg
jecxz
pop
and
xchg
push
add
cmc
aad
clc
add
xchg
outsb
mov
cmc
sbb
test
aas
fcomp
fnstcw
stos
ja
stos
sbb
repz
pop
dec
popf
pop
mov
in
sbb
dec
add
repnz
imul
pop
jb
push
ss
mov
out
add
insb
in
hlt
and
or
aas
ret
mov
icebp
cs
cli
test
dec
push
mov
push
aaa
jecxz
jae
jmp
xlat
fwait
adc
nop
fstpt
mov
sub
inc
cld
and
xchg
ds
aaa
pusha
and
in
cmpsb
cmp
and
mov
cmpsl
scas
sbb
jb
push
inc
xor
push
sub
pop
lahf
mov
add
cmp
jnp
or
mov
inc
and
cmc
and
mov
xchg
and
pushl
pusha
nop
jb
jge
xorb
insb
pop
adc
aad
es
gs
fwait
jne
shll
test
cmp
mov
jecxz
jne
jp
cld
orb
sub
dec
addb
inc
in
mov
mov
pop
lea
cmpsl
add
lcall
je
pop
lock
mov
push
mov
insb
rcrb
or
mov
and
bound
testb
dec
test
rolb
mov
clc
push
cwtl
stc
push
pinsrw
out
dec
mov
js
outsb
mov
cld
test
bnd
fistl
pop
dec
mov
mov
jo
and
or
jecxz
add
and
cmp
mov
or
or
ja
jecxz
push
ss
in
dec
push
and
outsl
popa
call
push
xchg
mov
cmp
cwtl
and
stos
bnd
inc
push
std
sahf
xor
imul
testb
shll
mov
pop
pop
adc
pop
xor
cwtl
inc
push
fstl
and
lret
pop
xchg
loopne
jmp
and
cltd
in
xorl
cmp
mov
scas
dec
fldcw
add
push
cli
pushf
xchg
jbe
push
repnz
popa
jp
fnstenv
cmp
add
dec
dec
pop
int3
sbb
pop
pop
jg
fcoml
push
xchg
mov
cmpsl
popf
sub
clc
jno
lahf
inc
call
xor
mov
inc
aaa
lret
popf
mov
int3
sbb
nop
sbb
std
mov
xor
cmp
and
stc
into
adc
in
and
pop
outsb
enter
cmc
push
fmulp
pusha
test
push
cmpsb
add
jmp
ljmp
push
add
sahf
mov
add
push
shll
ja
out
mov
adc
mov
xor
push
test
mov
je
test
pusha
mov
mov
rorl
js
loop
cmp
xchg
es
add
add
sbb
lods
movsl
cmp
std
sbb
cmp
xlat
ja
imul
mov
movsb
and
cmc
push
loope
xor
mov
jge
stc
jmp
xor
aaa
movsb
jl
and
sarl
inc
sbb
xchg
cld
mov
inc
pusha
mov
cmpsb
sbb
fsubrs
nop
mov
lcall
xchg
xchg
inc
mov
cli
sbb
jmp
imul
sub
lret
std
les
fdivrs
outsb
xchg
repnz
xchg
sub
pushf
jge
test
iret
addr16
sub
and
sbb
mov
ret
bound
js
pushf
jge
jg
and
and
and
xchg
ljmp
cmpb
push
repz
gs
jecxz
add
jle
mov
mov
pop
lods
ret
mov
ljmp
cld
jl
repz
clc
adc
pop
cmpsb
jno
cmc
movsb
push
insl
xchg
cwtl
dec
jb
pop
and
js
mov
lods
jnp
stc
outsl
sub
lds
in
jp
repz
jmp
out
or
and
and
dec
add
bound
out
ror
cmp
iret
pop
test
lods
xchg
arpl
add
orb
xor
adc
cmp
negb
fwait
adc
test
test
fisubs
fstpt
jmp
les
mov
push
popf
insb
bound
push
int
sub
stos
jae
fdivl
or
leave
cmp
adc
out
lea
jbe
loopne
add
setle
add
xchg
jnp
push
inc
push
ja
ret
or
cmp
aad
mov
mov
lock
mov
add
rorb
fistl
push
lea
fwait
jecxz
sbb
ljmp
mov
loop
or
add
and
rcrl
es
dec
sbb
dec
and
cmp
mov
xchg
xlat
rcrb
shr
in
jmp
adc
mov
xchg
addl
popa
andb
in
jle
and
sbb
enter
xchg
sub
adc
push
add
xchg
vdivpd
test
mov
stos
xchg
cmp
mov
ss
les
cmpsl
inc
push
stc
mov
clc
push
mov
mov
fsubl
xchg
fwait
repz
add
test
sbb
cmp
rcl
out
cltd
cmp
sub
loop
jnp
mov
mov
data16
sbb
inc
mov
ja
addl
mov
arpl
fsts
inc
mov
ja
xchg
das
xchg
int
mov
and
inc
adc
adc
cli
mov
addr16
test
data16
iret
pop
adc
jno
inc
fisttpll
xchg
test
jge
and
sbb
repz
mov
fistpll
fwait
add
or
sub
hlt
lds
or
addr16
lock
sbb
push
out
sbb
rcll
jb
sbb
bound
mov
cmp
xlat
mov
and
mov
adc
cltd
insb
sbb
add
adc
fcmovne
inc
jmp
push
xor
test
sti
or
std
or
sub
mov
pusha
or
notl
xchg
push
xor
mov
fildll
imul
xchg
fistpl
xchg
pop
int
outsl
cmp
lahf
inc
add
and
inc
ret
lods
lock
or
pusha
mov
test
mov
xchg
fdivrs
or
loopne
xorl
gs
imul
fstpt
inc
out
outsb
mov
or
xchg
sub
inc
lret
jbe
aam
pusha
dec
lret
dec
push
inc
xor
outsl
lods
icebp
cmp
insb
jge
daa
pop
add
inc
std
mov
js
leave
mov
ss
adc
or
ja
fcompl
test
xchg
in
shlb
mov
push
stos
ss
repnz
xor
xchg
jno,pt
bound
adcb
scas
insb
nop
or
or
orl
or
lods
push
xchg
sbb
push
add
lea
dec
mov
lret
stos
xchg
sbb
mov
inc
loopne
lret
cmpsb
psrld
mov
lahf
out
sub
shlb
pop
mov
mov
lods
lods
mov
xlat
aaa
nop
enter
lahf
ds
sub
mov
inc
pop
scas
scas
fwait
shr
jnp
jne
pusha
pop
out
test
and
inc
add
test
mov
mov
xor
ljmp
lds
movsb
aaa
xchg
pop
gs
xorb
scas
lods
cmc
fisttpl
fdivl
aad
mov
add
fnop
jle
jne
scas
dec
lahf
dec
ret
sub
mov
jo
in
sbb
mov
xchg
cmpsl
ljmp
mov
mov
dec
sbb
cmp
push
fists
push
push
jl
adc
cmp
shrb
adc
in
dec
dec
nop
jg
or
fwait
movsl
dec
mov
xor
data16
sub
mov
xchg
es
pop
add
sarb
xor
push
cmp
shlb
cmpsb
in
pop
test
cwtl
sub
insb
cmp
call
jg
jns
push
cmp
fldcw
clc
and
jmp
and
mov
outsl
dec
test
out
scas
js
dec
subl
int3
in
mov
in
xor
insb
sub
mov
and
out
inc
pop
pop
iret
push
cmpsb
xchg
js
fdiv
cltd
mov
xchg
jecxz
jno
pusha
lock
push
adcl
movsl
xchg
pop
inc
test
je
hlt
sub
dec
gs
fldl
push
int3
pop
out
lret
lret
scas
dec
outsb
mov
int3
int3
std
mov
cmp
scas
push
dec
aas
data16
dec
cwtl
xor
pop
cmpsb
insb
pop
xchg
push
daa
ror
lret
and
xchg
inc
mov
lret
int3
push
mov
dec
sbb
inc
or
cmp
lret
adc
mov
out
fadd
leave
in
movsb
push
push
into
icebp
dec
inc
adc
push
or
sbb
inc
sub
ja
dec
sbb
sub
sbb
mov
aas
mov
lock
insl
arpl
idiv
repnz
aam
testl
inc
lcall
mov
das
aam
hlt
rclb
sub
ss
mov
rolb
test
pop
xabort
orb
adc
stc
test
xchg
incb
push
push
cs
lcall
pop
dec
orb
xor
adc
test
dec
ret
dec
mov
cs
fsubrp
sbb
lret
jmp
pop
popf
pop
insl
push
jg,pn
pop
pop
cmpsl
test
cmp
subb
push
inc
and
loopne
jecxz
es
out
push
inc
out
cmp
movsl
pop
cmp
inc
loop
lds
jae
sarb
in
out
mov
out
outsl
fldl
adc
xchg
mov
out
arpl
xor
fnstsw
or
lcall
fistpl
cmpsb
test
adc
and
pop
movsb
or
mov
xchg
mov
in
mov
fmull
sub
add
and
js
mov
popf
ja
mov
add
icebp
sahf
ds
int
mov
sbb
jo
andb
cmp
aam
add
movsl
mov
mov
test
xlat
cmp
mov
mov
das
js
shl
cmp
push
aam
push
and
mov
mov
lret
dec
mov
inc
icebp
sub
push
jmp
lahf
ljmp
enter
insl
jno
lock
cwtl
jmp
subl
in
cmc
ret
shlb
cmp
arpl
and
rclb
push
inc
adc
mov
nop
cmp
call
ret
or
insl
add
insb
call
jbe
fstl
enter
ss
jmp
mov
xor
shr
and
aaa
mov
pusha
dec
repz
jmp
mov
mov
jae
mov
dec
pop
sbb
fiadds
or
cli
adc
jo
jg
xchg
divl
lods
bnd
jge
test
cmp
push
cmp
sub
nop
cmpsb
add
je
cmp
mov
leave
xor
aad
test
rcl
and
mov
repnz
inc
mov
enter
and
or
adc
std
adc
xor
push
or
jno
cmp
rcrl
fstl
arpl
into
push
jns
fidivs
popf
inc
adc
lds
fwait
jg
mov
shrl
sti
mov
mov
scas
sbb
andb
xor
clc
orb
xchg
shll
cld
or
cmpsb
pop
bound
sbb
popf
adc
add
mov
sbb
dec
adc
sbb
jo
adc
or
push
fcoml
lret
ja
stos
insb
mov
adc
adc
and
popf
mov
jns
sbb
mov
sub
outsb
sub
jmp
out
mov
ficoml
and
shlb
adc
adcl
push
or
jno
pusha
xchg
daa
lar
sbb
and
adc
push
jns
xchg
test
movsl
shrb
fdivl
xchg
mulb
sub
imul
jae
in
testl
rcll
fs
adc
dec
clc
cmp
ret
sbbb
push
enter
ds
adc
aam
xchg
scas
movsl
adc
ret
js
jns
sbb
pop
cld
dec
test
test
mov
adc
xchg
sti
fstp
inc
jge
and
adc
cmp
mov
pop
leave
ss
rcl
fs
ficoml
mov
mov
inc
push
fstpl
in
cltd
cmp
fisttpll
fisubl
or
test
movsl
inc
decl
pop
sbb
or
jbe
out
movsl
ret
cmp
mov
sub
adc
das
insb
mov
neg
mov
add
loopne
lock
test
pop
imul
push
imul
mov
je
lret
and
jmp
xchg
adc
aas
andl
push
rorb
popa
pop
and
icebp
cli
jmp
call
mov
cwtl
pop
pop
test
sbb
inc
out
call
cwtl
sbb
xchg
outsb
and
sarb
or
mov
dec
jecxz
lea
out
fadd
lock
pop
imul
cmpsl
push
inc
addr16
add
xor
orl
mov
inc
mov
out
pop
jle
pop
clc
into
xor
cwtl
pop
push
mov
in
sub
and
ret
insl
jno
aad
cmc
sti
stos
jecxz
sub
adc
mov
rcll
sbb
push
pop
jge
inc
pop
dec
and
jnp
sub
mov
jl
lret
insb
enter
rcrl
cwtl
lds
pop
and
adc
or
pop
adc
jge
mov
shrb
popf
inc
scas
jb
mov
repnz
int3
fsubs
mov
mull
rcrb
int
rolb
push
inc
movsb
xor
ds
mov
cli
es
pop
add
mov
ret
xor
popf
push
int3
sub
xchg
das
insl
inc
lock
mov
sahf
inc
pushf
xor
outsb
stos
and
sbb
popf
ss
in
test
imulb
jo
sbb
nop
or
mov
into
inc
fs
sub
dec
cmpl
shlb
mov
test
lcall
inc
jle
scas
xchg
mov
loopne
push
mov
rcl
dec
xor
adc
lcall
std
sub
cmpsl
sbb
scas
ret
push
sbb
pop
push
pop
xor
in
ljmp
hlt
icebp
inc
and
loop
jp
pusha
imul
or
mov
mov
and
adc
pop
int3
jnp
sbb
outsb
add
das
xchg
out
cmp
insb
fmuls
divb
lods
sub
cmc
push
aad
cwtl
jno
jno
push
stos
cld
mov
mov
shll
and
leave
lea
loopne
icebp
ljmp
pop
scas
xorl
jnp
xor
addb
movl
into
out
fstl
adc
notl
imul
dec
js
dec
lds
sbb
ljmp
mov
icebp
les
xchg
mov
jnp
jmp
cmpsb
add
pop
das
xchg
aad
pop
outsl
cmc
iret
mov
jno
out
push
or
jmp
jg
vmovntps
je
fstps
jmp
mov
inc
ds
js
sbb
cmp
jne
aam
push
pop
lret
jbe
dec
fsubrs
pop
rcrb
js
mov
iret
jg
in
jnp
cmp
mov
sbb
sub
cmp
xchg
repnz
std
xor
mov
call
sarb
xchg
loope
lret
rolb
mov
mov
inc
repnz
sbb
bndldx
scas
scas
mov
pop
lret
jg
ljmp
sarb
mov
fsub
jl
hlt
cld
jge
leave
shrb
je
mov
test
pusha
push
sbb
jg
mov
fstl
icebp
xchg
xchg
or
in
dec
into
mov
cmp
jne
pusha
and
les
lcall
repz
popa
push
test
push
ss
popa
and
xchg
mov
ret
add
and
out
cmp
lcall
addr16
pushf
jnp
loop
mov
icebp
mov
mov
or
adc
xchg
mov
jl
pushl
xchg
stc
cmp
jge
mov
push
rcrb
dec
mov
and
adc
xchg
xor
lods
jne
dec
cmp
and
insb
cmp
insb
out
outsl
test
or
push
cmp
ret
ss
fadds
out
add
in
push
out
sub
cwtl
sub
cmp
jp
rolb
ds
pusha
enter
mov
stc
or
mov
mov
sub
sub
mov
in
inc
sub
test
fnstsw
pop
inc
and
pop
dec
std
add
clc
add
pop
mov
imul
or
dec
push
test
adc
push
in
inc
xchg
mov
fistpll
pusha
iret
dec
jnp
addr16
movsl
test
int3
in
movsb
pop
push
and
jne
cmc
push
loopne
jmp
inc
test
stos
lret
ror
mov
call
inc
xchg
rcll
lock
jge
mov
xchg
xor
int3
sbb
jmp
jne
in
sub
add
arpl
sub
orl
ds
add
sbb
push
shl
and
test
push
or
xchg
repz
test
pushf
inc
lret
scas
js
cmp
pusha
int
out
jb
jecxz
mov
stos
add
pop
push
add
xor
outsl
lds
jp
add
cli
sub
adc
sbb
jmp
bound
xchg
fidivrl
mov
pushf
andl
xor
pusha
mov
les
std
and
in
xchg
xlat
add
sub
aam
mov
int
std
ljmp
mov
mov
outsb
scas
lods
fsub
bound
and
or
inc
pop
and
and
jo
mov
sarl
dec
mov
test
pusha
push
rcrb
push
xchg
adcb
in
dec
lret
cmpsl
mov
adc
sub
sbb
push
push
jle
sbb
pop
push
cltd
dec
mov
xchg
dec
cmp
jmp
xor
enter
out
jbe
or
jmp
xor
mov
lea
stos
add
lds
xor
jmp
pop
test
and
xor
lcall
mov
leave
mov
dec
mov
push
add
jmp
jo
pop
mov
aaa
fwait
or
adc
or
mov
pushf
pop
add
loope
xchg
mov
imul
mov
push
and
test
scas
push
adc
pop
rclb
or
popf
aad
inc
or
sbb
fistps
lea
adc
xor
xchg
sbb
jae
inc
sub
sbb
dec
adc
popf
movsl
std
inc
pop
data16
pop
mov
pop
add
sub
pop
mov
movsb
std
push
out
fstpl
mov
sub
fimuls
fninit
in
loope
jno
mov
ds
lds
jbe
push
test
xor
ss
mov
push
mov
lcall
xorb
fcmovnu
inc
gs
xchg
test
and
call
outsb
dec
aam
ja
inc
dec
add
gs
xor
inc
jecxz
add
pop
jmp
in
adc
jg
fxch
dec
in
imul
mov
iret
std
jl
dec
pop
nop
push
adc
xor
ret
xor
xlat
cli
xchg
call
sahf
lret
xchg
js
dec
push
or
imul
add
outsl
jle
push
jo
push
mov
mov
fs
xchg
aad
xor
push
sub
jge
mov
mov
rep
xor
add
sahf
jno
sub
cmp
ret
jnp
rcrl
outsb
ljmp
inc
mov
cmp
fs
mov
sub
sub
mov
sub
imul
das
cwtl
jmp
push
sbb
adc
shl
inc
aam
jecxz
push
dec
dec
fidivrs
xchg
jb
repnz
es
mov
andl
icebp
mov
imul
arpl
and
pop
push
jns
incl
add
add
repnz
or
test
ljmp
push
rcll
and
sbb
lock
mov
outsb
push
mov
pop
push
scas
outsl
xor
mov
push
xchg
into
aas
sbb
or
cmp
mov
cmp
fcmovnb
cwtl
add
cltd
mov
loop
and
cld
mov
mov
cmc
enter
into
bound
push
mov
jns
mov
mov
stc
rcl
cmp
push
adc
lcall
mov
icebp
out
mov
test
pop
outsl
xchg
int
mov
dec
gs
in
in
xchg
fsubrs
sbb
stc
in
push
jbe
inc
pop
xchg
mov
addb
push
in
cmp
flds
loope
jo
mov
xchg
rorb
xor
into
xor
inc
loopne
out
cmp
ja
cmp
les
fldcw
xor
or
mov
lods
cmp
daa
jge
jge
outsl
inc
or
jno
mov
jl
jns
and
insb
fiadds
jo
or
mov
fs
insb
divb
insl
ljmp
fnstsw
adc
dec
jl
mov
add
add
or
sahf
enter
add
test
push
jp
aaa
std
fdivrl
andnps
pop
outsl
shlb
leave
mov
mov
and
daa
cwtl
movsb
cmpsl
sub
loopne
dec
sbb
stc
rclb
mov
or
jp
sbb
arpl
cmp
gs
mov
add
lcall
pop
loopne
sbb
inc
and
add
nop
fsubrs
sub
push
cs
subb
hlt
mov
dec
cmp
data16
aas
scas
mov
popf
in
xchg
jge
pop
xor
dec
cmpsb
pop
push
jge
or
pop
negb
pop
push
stos
cmp
ja
pop
inc
lcall
shlb
and
and
jns
stos
add
icebp
mov
call
mov
sub
push
clc
push
int3
mov
mov
mov
outsb
cmp
adc
pop
fidivs
ror
inc
xchg
and
repz
push
xchg
clc
insl
addr16
pop
addl
push
jecxz
mov
ds
mov
testb
ljmp
loopne
out
jb
ror
mov
sub
scas
sahf
xor
daa
imul
mov
jecxz
lds
pop
inc
test
xchg
addr16
xor
mov
aaa
xchg
or
jp
sbb
flds
call
loope
mov
shl
xor
in
aam
jmp
cmp
rcr
xchg
pop
inc
mov
test
sbb
pusha
or
cmp
jle
mov
popl
and
popf
int
cmpsb
and
andl
data16
inc
sub
add
fidivrl
jbe
jns
stos
inc
cs
push
adc
and
lret
push
adc
cmp
xor
ds
call
fcmovu
jb
nop
shl
pop
add
pop
jb
dec
setb
dec
daa
enter
test
or
or
push
das
add
cli
into
shrb
cmp
lods
cmp
cmp
cmpsl
push
pop
enter
fistpl
push
mov
or
sub
fistl
xor
dec
push
adc
pop
sbb
jmp
sub
movsl
mov
mov
lods
in
lods
into
leave
stc
mov
cmp
add
cs
jae
stos
emms
and
sub
arpl
ss
pop
enter
xchg
and
jae
imul
cmc
jb
mov
notb
cmp
xchg
es
and
pop
test
xchg
pop
mov
pop
add
pop
or
cld
jnp
clc
aam
xor
andl
dec
push
jmp
rorl
jne
hlt
mov
arpl
pop
in
leave
lock
insb
sub
pushl
xor
adc
sub
jl
leave
ljmp
aad
xchg
insl
jb
pop
dec
pop
push
aad
aad
repz
arpl
pop
add
cld
fs
jnp
in
push
dec
mov
push
pusha
mov
add
xchg
xor
xor
dec
lods
bound
or
test
cmp
shrl
lds
iret
lahf
cmpsb
xchg
or
shll
and
sbb
cmp
addb
fwait
int3
pop
arpl
push
ret
lock
cmp
sbbb
out
imul
push
fistl
test
xor
xor
ss
mov
jle
cmp
push
mov
pop
push
or
xor
cmp
mov
notl
aam
push
inc
ds
xchg
add
adc
iret
sub
repz
xchg
push
hlt
fcoms
pop
leave
sahf
sub
out
mov
xlat
xchg
push
ljmp
outsb
pop
sbb
inc
jno
mov
adc
mov
xchg
mov
xchg
test
sub
push
orl
out
inc
sahf
jmp
loop
mov
lret
adc
std
in
scas
ja
xchg
jecxz
arpl
jp
inc
fs
xor
sbb
mov
in
imul
push
out
shll
mov
jle
mov
cmp
push
cs
lock
xor
pop
sub
mov
add
lods
test
sub
in
arpl
adc
push
loopne
fsubrl
sar
popf
mov
mov
insb
int
add
pop
out
jnp
je
repnz
orw
dec
lret
mov
xchg
and
fimull
roll
lock
pop
mov
in
das
mov
scas
dec
jno
mov
fstps
inc
or
repnz
es
jmp
xchg
iret
mov
dec
cmp
test
fs
lcall
les
dec
pop
ja
mov
js
push
call
push
shl
lret
push
imul
xchg
mov
cmp
mov
loop
jb
sub
adc
into
inc
mov
xchg
pop
mov
mov
fucomp
xor
mov
mov
insb
jp
hlt
shll
fadds
mov
sub
sahf
out
leave
andl
mov
cmp
add
pop
fwait
shr
adc
pop
ret
out
in
aam
aam
jp
lret
insb
repnz
insl
mov
xchg
mov
aad
adc
sub
popa
sub
inc
outsl
mov
das
lea
cltd
outsb
adc
insb
loop
cmc
in
or
das
rol
inc
hlt
dec
inc
cmpsb
mov
xchg
outsl
loopne
push
jmp
jae
xchg
jmp
xorb
jne
bound
repz
arpl
push
loop
jo
push
mov
dec
pop
lods
adc
fidivrs
aam
fistl
xchg
in
and
jnp
out
inc
cmpsb
mov
jne
dec
insb
inc
xchg
divl
dec
or
xor
jbe
fdiv
clc
jno
dec
andl
xchg
orl
jecxz
sub
lret
push
dec
mov
sub
inc
repz
icebp
je
das
sub
arpl
cmpsl
xchg
dec
dec
daa
jne
mov
push
iret
in
aam
add
mov
movsb
movsl
jge
jno
lock
inc
add
mov
cmpsl
iret
lock
sub
mov
ss
mov
ljmp
mov
pop
notb
and
cld
mov
push
movsl
and
xor
test
dec
push
add
push
pusha
mov
adc
aaa
enter
mov
sub
mov
xchg
xchg
aaa
cmpl
cmpsb
mov
stos
xor
mov
sbb
movsb
push
les
icebp
or
adc
jecxz
movsb
adc
scas
jne
test
ja
sub
cmp
movsb
sbb
loope
cwtl
dec
and
in
sahf
xchg
outsb
mov
push
movsl
push
js
and
push
iret
inc
flds
adc
daa
sub
xchg
aam
test
sub
insl
or
mov
or
ds
mov
cmp
and
pop
pop
push
push
es
iret
mov
jecxz
iret
sbb
sub
or
mov
loopne
xchg
cmp
xchg
adc
icebp
jmp
dec
sbb
call
fwait
sbb
or
sbb
fwait
and
mov
subb
jmp
cmp
mov
repz
adc
push
pop
xchg
call
and
icebp
push
adc
mov
dec
push
fcoml
aam
mov
repnz
cmp
bound
dec
fcomps
cli
ret
loop,pn
mov
xchg
lret
sbb
ja
cli
mov
mov
out
mov
push
icebp
sub
insb
stos
push
pop
stos
inc
pop
add
push
bound
cltd
mov
aam
xchg
popf
inc
pop
jbe
add
sarl
test
rcrl
fldcw
idivb
sahf
rep
and
loope
fdivs
and
xor
pop
xor
imull
mov
into
sbb
jmp
inc
pushf
je
pop
adc
aas
and
fsubrs
inc
mov
or
in
jno
cld
cmpsl
add
inc
mov
push
mov
sbb
es
testb
jg
lret
add
jbe
enter
jle
in
fistps
orl
add
push
jle
in
mov
mov
cmp
jnp
mov
or
mov
sbb
iret
pop
jnp
lret
push
or
and
or
xchg
push
mov
or
fwait
sub
pop
das
mov
pop
or
arpl
adc
xchg
xchg
push
insl
int
ss
or
fstpt
addr16
sti
mov
icebp
flds
test
mov
jae
pop
inc
int
push
and
mov
cwtl
mov
xchg
xor
lods
les
shrl
lcall
std
mov
out
push
ss
inc
bound
in
xchg
add
inc
fimull
lock
cld
lods
pop
push
jmp
inc
arpl
test
in
add
lcall
popf
mov
stos
jnp
push
iret
dec
shl
lods
and
jle
xor
ss
iret
dec
das
int3
xchg
dec
jno
pop
xchg
imul
pcmpgtd
mov
stos
push
lock
xlat
js
xlat
es
inc
sub
dec
cltd
mov
int
lcall
mov
add
mov
push
cmp
test
inc
stos
cmp
pop
fwait
inc
outsl
addr16
sbb
push
and
data16
into
pop
push
shlb
pop
mov
inc
es
popf
pusha
inc
mov
dec
cmpsb
in
enter
icebp
xchg
movsb
add
sbb
aaa
pop
int3
in
and
in
inc
je
push
cmp
stos
mov
pop
xchg
lret
test
push
sub
in
xchg
or
pop
push
mov
or
cmp
mov
fnsave
loope
in
jo
xchg
lret
pop
sbb
jns
jmp
or
pusha
sahf
shr
dec
push
stos
adc
mov
cmp
or
adc
jge
repz
inc
icebp
cmpsl
cmpsl
cmpsl
sbb
inc
xchg
mulb
es
pop
adc
repz
in
out
inc
shl
xor
add
lcall
cld
cmp
dec
or
or
jne
mov
xchg
xchg
lods
mov
fwait
testl
push
fsubl
icebp
adc
jns
test
sbb
jecxz
mov
in
test
jb
jbe
mov
sbb
insb
fwait
push
xor
cld
shll
push
add
ja
push
test
inc
mov
lea
push
call
adc
mov
mov
pop
mov
or
ss
shlb
xchg
das
push
popa
subb
and
and
mov
shll
or
inc
mov
pop
aas
mov
lods
sbb
push
sbb
je
mov
pushf
test
jg
add
cmp
pop
mov
sbb
gs
dec
inc
sbb
jbe
lea
sbb
push
push
xor
cltd
jmp
mov
pusha
call
cmc
hlt
pop
sub
or
mov
lods
or
lret
jno
adc
jns
inc
push
or
ret
xchg
push
push
mov
mov
out
aam
jl
test
jge,pn
mov
loopne
in
jmp
pop
mov
mov
movsl
jle
sub
lret
addb
ljmp
fisttpl
out
pop
call
repz
in
sub
and
push
push
imul
cld
sbb
add
cld
lods
dec
mov
cmp
fwait
gs
outsl
sti
xor
pop
pop
mov
dec
ss
fidivrs
mov
dec
inc
push
scas
push
dec
adc
int3
andl
dec
cmp
out
sub
stos
mov
cmpsl
mov
inc
sbb
and
icebp
test
dec
mov
dec
dec
test
mov
pop
or
adc
push
dec
in
mov
lods
jo
inc
aam
xchg
mov
movsl
fdivrl
adc
mov
jnp
mov
jp
push
push
mov
ljmp
push
ss
fsubl
mov
test
dec
push
sub
bound
add
and
lock
push
xchg
jmp
outsl
dec
xchg
cmpsl
push
pushl
cmc
cltd
pop
movsl
mov
push
into
sahf
or
pop
scas
xchg
les
xchg
lods
or
sub
movsl
fdiv
and
inc
xor
cld
lret
pusha
inc
dec
fisubrl
pop
xchg
xchg
or
jno
add
loopne
and
popf
bound
movsl
mov
rorl
mov
lods
inc
inc
sbb
adc
xor
fists
dec
jl
rol
getsec
pushf
dec
dec
daa
push
ficomps
icebp
jg
dec
mov
lret
xchg
mov
adc
sub
or
mov
or
int3
loopne
scas
cwtl
xchg
or
xor
or
mov
jecxz
outsl
mov
lcall
data16
sbb
jno
adc
ss
test
mov
mov
fst
stos
inc
pusha
mov
cs
adc
stos
fadds
mov
cli
adc
sub
jle
test
inc
jg
xor
or
dec
movsb
inc
mov
insl
jno
pop
sub
ret
pop
fwait
movsb
nop
sbb
mov
nop
fisttps
ljmp
push
out
and
dec
jae
mov
push
popa
int3
sbb
ret
xchg
jecxz
add
lahf
mov
mov
loopne
js
into
arpl
xor
sub
lret
inc
in
sarb
push
push
cmpsl
and
loop
cmp
lock
xor
pop
xchg
sbb
ret
fistpl
push
adc
sahf
int
inc
mov
jge
mov
cmc
and
aaa
mov
inc
arpl
mov
mov
insl
jg
inc
inc
pop
loop
bound
sub
dec
push
jp
fstps
and
les
repz
adc
jmp
popa
xchg
and
ret
pop
out
dec
or
cmp
andl
dec
xchg
add
cmp
jmp
loopne
lahf
sub
or
pop
xchg
mov
sbb
mov
shrb
in
repnz
dec
cmp
push
lea
sub
sbb
sub
rol
cwtl
or
cld
das
mov
repz
mov
inc
push
hlt
ss
stc
test
xor
sbb
cs
in
and
cmp
sbb
cmp
push
cwtl
nop
mov
inc
int3
inc
leave
mov
ret
into
int3
push
int
fsubrl
outsl
sahf
pop
ror
jl
or
fnsave
in
push
cmp
insl
pop
inc
and
cld
mov
movsl
cmp
out
mov
mov
pop
sub
arpl
xchg
add
xor
shrl
pusha
in
sub
xor
sub
push
dec
jne
push
pop
mov
insb
mov
mov
fimuls
sub
and
mov
test
test
pop
push
inc
sbb
jns
cmp
cmp
in
lahf
aas
sbb
jl
sbb
aam
ds
icebp
inc
fimuls
mov
fnstsw
pushf
repnz
mov
push
cmp
fs
sub
push
jg
cmp
sbb
mov
jecxz
xchg
inc
mov
xor
push
mov
add
mov
popf
aaa
cld
fcompl
outsb
inc
in
dec
iret
in
cwtl
dec
sub
in
mov
push
dec
dec
loop
and
adc
clc
jp
adc
dec
outsl
lret
jecxz
xor
push
cmc
add
add
xor
lock
ljmp
icebp
cld
cmp
mov
leave
addl
xchg
stos
push
adc
in
mov
enter
lahf
inc
pop
jp
adcb
push
or
sub
shl
mov
or
fwait
jecxz
notl
inc
pop
mov
mov
mov
sarb
push
pop
test
dec
mov
mov
imul
popa
fwait
outsl
adc
pop
stc
pushw
inc
adc
arpl
xchg
mov
jecxz
adc
lret
xchg
lods
ja
fnsave
xchg
je
pop
in
dec
inc
pop
fcoml
xor
sbb
xor
inc
mov
scas
out
in
sub
mov
xor
popf
imul
bound
lea
xlat
mov
sbb
hlt
jae
mov
les
loope
push
sub
in
imul
stos
hlt
fsubr
mov
test
mov
in
ds
adc
xchg
subl
and
sbb
xor
pusha
dec
ret
mov
neg
jne
cmp
repnz
fstps
dec
lahf
cmp
int
xchg
inc
push
std
mov
inc
popa
mov
sub
loope
aas
mov
arpl
adc
or
pusha
cld
test
flds
adc
adc
mov
or
test
xchg
xor
out
mov
ljmp
cs
cmp
test
outsb
xchg
dec
lcall
lret
add
cmp
xor
fs
cs
lea
pop
push
call
mov
mov
fcomps
icebp
fwait
push
sbb
popa
lret
leave
xchg
mov
popf
fwait
rcll
popf
lods
fs
sub
sbb
inc
dec
dec
lret
stos
jge
fildl
dec
mov
inc
cmp
jle
mov
add
rcrl
icebp
mov
popa
loopne
pop
push
push
data16
lret
push
cmpsl
pop
ljmp
rcrl
stc
or
in
ds
orl
xor
lret
shll
jl
cmc
andb
xor
push
push
icebp
outsl
std
sbb
stc
mov
and
xor
rcrb
fwait
jns
and
test
push
adc
adc
mov
push
mov
popa
pushf
pop
outsl
dec
pusha
nop
sahf
into
adc
mov
mov
mov
idiv
mov
pop
pop
test
lds
shlb
add
cld
cmp
lcall
adc
outsl
out
push
mov
movsb
test
or
inc
in
jnp
ds
inc
lods
into
sbb
xlat
js
lds
mov
nop
mov
mov
mov
rorl
inc
sbb
jg
adc
mov
mov
sahf
decb
dec
or
lret
dec
outsl
dec
mov
add
push
rclb
jl
int
sbb
fisubs
pop
popa
mov
cmpb
rorb
movsb
xchg
push
adc
lret
and
aas
and
dec
sub
stos
xchg
or
scas
jecxz
cwtl
test
xorl
cli
pop
in
fs
sahf
mov
jmp
outsb
push
lods
adc
pop
or
sbb
jg
inc
loop
lret
fstpl
mov
rcrb
dec
mov
and
xor
mov
mov
xchg
xchg
adc
cltd
jne
fisubs
mov
je
cmp
in
lea
outsb
dec
pop
adc
imul
mov
dec
or
mov
aas
xchg
push
outsl
popf
jecxz
stos
jle
in
mov
jae
pop
test
sub
xlat
scas
gs
dec
imul
sahf
and
mov
sarl
je
push
sbb
and
je
xlat
mov
add
scas
mov
mov
add
xchg
or
mov
popa
imul
stos
imul
sub
std
aas
cwtl
xchg
cmpsb
jg
mov
jle
nop
jp
add
in
and
shlb
nop
imul
in
stos
push
inc
imul
loope
les
mov
iret
movsb
imul
les
mov
dec
cli
mov
cs
mov
out
sahf
in
xor
pop
jno
pop
sbb
jo
je
cmp
dec
les
sti
mov
pop
push
aaa
adc
jle
mov
out
in
das
in
xor
ja
push
push
dec
sbb
test
cwtl
daa
popa
andb
cmp
pop
call
mov
jmp
sub
sbb
stos
imul
nop
cmp
adc
int3
or
insl
jb
sbb
jl
out
push
adc
mov
xchg
add
in
repnz
int3
push
add
push
mov
xchg
sub
fsubs
adcl
xchg
mov
test
test
std
das
test
inc
popa
xor
js
jae
subb
stos
mov
xchg
rorl
pusha
notl
fwait
lds
in
sets
rol
and
xchg
xor
mov
ficoms
mov
iret
push
mov
sbb
outsl
out
outsl
fldl
je
add
sub
inc
jae
in
adc
loope
add
jo
jne
push
mov
and
mov
fs
out
push
fwait
jnp
jmp
inc
shrb
xchg
sti
sub
outsb
out
enter
fisttps
push
jns
ja
cltd
adc
cltd
fdivrs
es
push
movsb
xchg
fisubl
sub
iret
scas
pop
sub
cli
fsubrl
sbb
jmp
sub
jae
out
cs
pop
std
xor
outsb
sub
or
cmp
xor
sub
sub
add
jae
xor
iret
add
in
int
lcall
mov
lods
or
inc
movsb
dec
jnp
je
pop
sti
js
adc
lret
xchg
adc
repz
push
addb
cmp
stos
cwtl
std
add
mov
sbb
insl
xor
bound
retw
mov
out
scas
xchg
xor
push
inc
in
mov
popa
cmpsb
mov
sbb
xchg
outsb
add
fwait
sti
push
out
mov
aad
stos
dec
pushf
push
enter
sub
mov
jl
inc
sbb
cmpl
shll
imul
repz
sbbb
mov
add
cli
adcl
mov
ja
mov
push
sbb
inc
std
sub
xor
inc
repz
cmc
push
aas
push
sub
inc
insb
jl
das
test
sub
test
jp
enter
add
arpl
data16
cmpsw
cmp
sbbl
push
not
repz
sbb
or
inc
dec
xchg
fs
repnz
add
fsubl
mov
call
sbb
movsb
or
call
jp
mov
mov
jo
cmpsl
jnp
aaa
pop
sbb
ret
fs
movsl
xchg
aas
pcmpeqd
icebp
jg
push
mov
fisubl
jb
out
jle
fistl
inc
mov
daa
xor
roll
ja
sub
imul
adc
aam
adc
es
icebp
mov
adc
push
pop
dec
roll
faddl
mov
imulb
filds
bound
mov
inc
xchg
test
fcomi
and
mov
add
adc
push
add
addr16
and
int
jnp
pop
sub
into
lcall
and
out
sbb
gs
push
jl
or
inc
cs
test
movb
in
add
or
icebp
enter
dec
int
mov
test
je
mov
test
push
ljmp
xchg
mov
stc
sbb
loop
mov
cli
add
inc
aas
iret
repnz
jl
dec
cltd
out
test
cmc
sub
pop
jmp
out
sub
sbb
push
std
test
inc
sti
xchg
xchg
fstps
add
add
movsl
push
fs
imul
mov
stos
lret
daa
add
fwait
ret
fsub
out
dec
and
mov
cmpsb
jnp
mov
lahf
dec
stos
popa
jmp
add
jg
cltd
dec
out
cs
adc
int
sub
jae
adc
insb
and
ficomps
jbe
cmp
outsb
fsubrs
out
in
fldenv
xchg
test
scas
lds
outsb
orb
orb
cld
lret
test
xchg
adc
fwait
push
cld
gs
pop
scas
sub
loopne
push
adc
inc
xchg
adc
fs
ja
mov
scas
aas
mov
or
push
rcrl
cmc
jno
repnz
stos
loope
adc
in
jle
inc
and
test
lods
fnsave
jecxz
out
mov
sbb
cltd
pop
arpl
test
ljmp
jb
sbb
mov
sti
mov
popa
or
inc
mov
jecxz
add
mov
enter
rep
in
daa
stc
xor
int3
cmp
pop
pop
lods
sub
pop
inc
xor
outsl
xorb
cmp
sbb
add
enter
lahf
and
loopne
mov
test
or
inc
or
out
cmp
xor
jnp
out
adcl
aam
out
cmpsb
icebp
mov
xchg
mov
xchg
pop
mov
xor
test
sub
xor
add
jl
inc
sub
mov
dec
sbb
mov
mov
inc
popf
sub
test
aas
les
cmpsb
test
aam
lods
sub
sbb
cmp
lret
xor
mov
cwtl
xor
jmp
mov
ficomps
jno
xlat
pop
sbb
mov
movsb
clc
orb
mov
push
push
push
mov
dec
dec
sbb
mov
jbe
cmpsb
jno
cs
xchg
in
iret
push
or
jg
loopne
shrb
pop
pop
out
mov
shl
pop
sub
jno
js
mov
filds
jnp
mov
xchg
and
mov
shlb
ja
push
push
lahf
loop
in
push
ss
mov
stos
in
sti
lods
pusha
sub
mov
mov
mov
xor
xor
mov
int
fstpt
loope
outsb
rorl
into
les
leave
pop
lods
mov
repz
repnz
jne
and
movsb
repz
jmp
cmp
stos
sub
add
sbb
roll
mov
aad
lcall
mov
mov
xchg
test
popf
loop
popa
js
push
lahf
mov
into
fcmovbe
int
data16
fdivrp
shll
push
sbb
xchg
int3
jns
sbb
fsts
lret
pop
pop
sahf
add
iret
mov
and
cld
jecxz
jle
or
pop
es
add
test
push
shl
lret
mov
roll
imul
jg
jge
int
push
loopne
or
sbb
shl
in
adc
mov
jo
xchg
into
mov
lock
dec
pusha
jl
inc
stos
cmpsl
je
in
aas
xchg
mov
mov
cwtl
sub
scas
inc
sti
das
mov
push
cltd
incb
mov
dec
jge
fwait
jne
xchg
mov
inc
inc
pop
jnp
jecxz
xchg
mov
sbb
xor
notl
cli
xor
cmpsl
sbb
push
inc
sbb
rcr
pop
inc
xor
mov
jl
xchg
negb
or
ds
cmp
dec
dec
sbb
test
and
sub
lock
imul
dec
inc
xchg
repz
jbe
ljmp
das
mov
push
add
add
lock
icebp
aam
xor
incl
and
push
cmpsb
ret
cmp
fcoml
xchg
outsl
mov
lret
cmp
xchg
or
dec
mov
pop
sbb
mov
mov
dec
inc
rcr
leave
sbb
xchg
movsb
insl
cmp
jo
std
int3
mov
loop
pop
pop
int
jo
or
mov
mov
pop
into
mov
jo
mov
xchg
xlat
mov
icebp
jno
pop
es
fsubl
or
jecxz
out
in
dec
xchg
and
daa
popf
push
outsb
sbb
pop
out
dec
leave
mov
imul
adc
dec
fwait
arpl
leave
pop
adc
mov
movsb
mov
outsb
mov
gs
out
outsl
imul
aas
sbb
mov
daa
cmp
ret
jmp
ja
sbb
jb
dec
addr16
fadd
jge
fyl2x
dec
test
outsb
shl
outsl
mov
repnz
jge
out
mov
jbe
jo
int3
push
cmp
daa
cwtl
jecxz
test
pop
jp
cli
jb
into
icebp
aad
aaa
popa
push
xorl
push
repnz
dec
stos
sbb
imul
and
int
jae
or
addr16
loopne
mov
leave
movsb
and
or
insb
and
cmp
jge
ret
lods
xor
int
rolb
inc
push
ja
pop
imul
xchg
cmp
pop
cmpl
xor
pop
in
pusha
lret
pop
mov
pop
and
mov
icebp
mov
das
into
repnz
addr16
xor
cmpsl
or
clc
psubd
pop
int3
push
pushf
in
insl
fwait
aaa
in
lock
xchg
movups
mov
add
push
ret
lods
push
call
inc
repz
xchg
in
insl
add
andl
ret
pushf
add
push
xchg
xor
or
leave
cs
lret
pop
cmp
notb
mov
in
lret
daa
dec
cli
xchg
test
add
push
mov
mov
add
and
stos
lds
mov
popf
xor
push
add
mov
sbb
push
inc
push
jp
leave
xor
popa
pop
mov
mov
mov
sahf
jle
gs
or
das
xor
lahf
pushf
mov
test
popf
inc
pop
mov
xor
ds
insb
xchg
push
xchg
fwait
aam
push
lods
xor
subb
outsb
loopne
das
imul
jle
movsl
sbb
insb
pop
inc
pop
or
pop
ljmp
push
lods
fsubl
hlt
andb
paddd
jge
jae
push
or
mov
pushf
mov
sub
jae
jmp
aad
sbb
loope
lret
rorb
lock
out
pop
mov
pop
mov
mov
jb
xor
popf
mov
cmp
jecxz
xor
scas
fwait
cmp
pop
jecxz
js
push
rorl
icebp
fsubs
inc
gs
scas
mov
sbb
push
jg
xchg
jge
pop
scas
sub
mov
fisttpll
cltd
mov
cmpsb
test
fwait
leave
xor
out
jnp
movsl
dec
orl
fcmovb
sub
mov
inc
outsl
cmp
lods
jecxz
rcrb
or
ljmp
sbb
psubq
into
pushf
jecxz
or
fistpl
xor
addb
repz
pop
dec
xchg
stos
out
imul
pushf
dec
bound
ljmp
sbb
cmpl
push
or
cmpsb
das
cmp
xchg
xchg
out
mov
les
adc
roll
jmp
loope
mov
jge
daa
xor
xor
push
insl
push
mov
pcmpgtd
or
xlat
xor
xlat
stos
xor
and
jbe
xchg
imul
dec
xor
test
sub
movsl
push
mov
push
adc
shll
pop
aaa
ret
ds
sub
jg
xor
popa
mov
sub
lods
mov
or
push
sbb
in
push
fwait
cli
sub
sahf
mov
jo
add
popf
pushf
push
jb
mov
mov
bound
imul
pop
cmp
icebp
push
stc
cwtl
loope
std
mov
mov
adc
dec
mov
mov
pop
les
jg
lock
and
out
leave
das
js
or
jg
push
cwtl
addr16
cs
push
std
xchg
jns
jp
test
mov
fcmovu
rol
dec
lret
jl
push
mov
dec
xorb
pushf
fwait
mov
test
pusha
mov
mov
dec
push
jo
enter
ret
aas
lock
std
pop
test
or
ds
mov
jp
jmp
lcall
mov
inc
into
bound
pop
xor
mov
enter
xor
push
call
lret
xlat
insb
push
adc
sbb
inc
dec
ljmp
aas
push
movsl
dec
xchg
nop
sbb
imul
call
movsb
add
test
sti
xchg
mov
sbb
sti
mov
aas
mov
lret
xchg
sti
dec
xor
inc
and
push
jb
into
int
push
dec
pop
lock
push
popf
push
adc
sub
dec
cld
sbb
xchg
adc
and
test
jne
add
imul
xchg
cli
imul
int3
adc
lods
jbe
and
leave
roll
fsubs
lret
dec
add
stos
mov
int3
cmpsl
cmp
xlat
inc
jnp
je
aam
stc
cwtl
sbb
in
test
je
mov
sbb
pop
jno
rcr
xor
hlt
cmp
pop
push
or
in
jnp
bound
cwtl
add
and
push
jg
adc
and
add
fldt
aaa
in
jp
jnp
mov
and
movsl
push
ss
lds
out
arpl
jmp
outsl
fnstcw
and
xor
inc
mov
mov
test
pusha
testl
jb
dec
ret
movsb
push
adc
fisttps
idivb
add
push
clc
popa
stc
xchg
xor
xchg
and
aad
push
xchg
lea
adc
outsl
daa
jb
push
mov
jns
in
pop
push
mov
movsl
xchg
lods
mov
leave
mov
mov
sub
inc
cmc
pushf
stc
mov
rcll
or
ret
adcl
popl
shlb
lcall
push
fldt
mov
jbe
jno
sub
imul
stos
mov
xor
int3
jae
pusha
popl
mov
sahf
into
xor
sti
mov
pushl
out
mov
aaa
or
stc
mov
mov
frstor
push
jo
inc
sub
dec
cltd
mov
bound
adc
push
mov
lahf
or
push
mov
rclb
mov
fiadds
pushf
dec
and
fnstsw
inc
pop
sub
lret
sbb
cmp
cs
xor
repz
mov
sbb
cs
inc
pop
xor
lret
sbb
fdivrp
mulb
rol
and
std
sbb
push
mov
xchg
mov
test
and
mov
jp
test
sbb
dec
add
push
dec
jae
xchg
push
xchg
xchg
test
xor
in
dec
into
jle
hlt
pop
fwait
push
fbstp
fstpt
and
push
ljmp
xchg
pop
add
scas
pop
jmp
std
and
xchg
push
sbb
out
sub
ja
iret
ror
insb
aaa
add
into
inc
xchg
mov
inc
insl
cmpsl
sbb
xchg
das
into
add
push
xor
lcall
push
ds
test
std
pop
int
icebp
andb
push
adc
das
fistps
lahf
das
clc
movsb
lock
cmp
xchg
pop
fcompl
fs
test
add
icebp
movsl
cli
adc
push
ja
xchg
inc
sub
testb
and
pop
push
movsl
mov
adc
xor
jecxz
cltd
adc
lods
jbe
add
jmp
stos
sbb
push
dec
dec
xchg
and
lcall
jns
inc
inc
push
jno
mov
test
loop
popa
shl
jo
loop
add
sbbl
movl
mov
fildll
mov
das
sarl
pusha
mov
and
xchg
in
roll
and
xchg
mov
push
mov
dec
mov
pusha
nop
push
dec
and
mov
adc
cmp
push
aam
sbb
mov
cld
add
or
jp
negb
push
rcrl
lcall
lock
xchg
lock
and
push
jecxz
ljmp
fstl
mov
jne
cwtl
mov
sbb
lret
inc
sub
xchg
xlat
les
scas
push
data16
fsubrl
jmp
dec
xchg
inc
stos
sahf
stc
outsl
lea
fisubrl
push
sub
mov
jb
fildll
mov
adc
loop
add
inc
or
out
test
pop
dec
mov
movsl
out
lods
mov
aad
sahf
dec
jne
lock
outsl
stos
out
push
push
repz
dec
xchg
and
push
rcr
movsb
gs
sbb
jno
lods
orl
arpl
sbb
jno
inc
ret
pop
sub
insl
jo
andl
std
repz
cmp
inc
mov
mov
sub
add
data16
je
lock
add
out
outsb
and
je
mov
shll
rolb
cmp
sahf
sti
mov
xchg
push
pop
pop
test
cmp
push
popf
adcb
pop
shll
xlat
jns
das
or
lods
mov
int3
add
ja
sahf
por
mov
jecxz
adc
stc
movsl
int3
push
mov
cmpsl
push
push
imul
outsb
int3
icebp
xchg
pushaw
out
cmp
sbb
lret
sbb
sbb
in
ja
scas
repz
fistpl
ja
jmp
adc
mov
dec
mov
pushf
inc
lret
inc
cmp
leave
pop
inc
cs
or
sbb
jnp
xchg
fwait
stos
repz
pop
jo
roll
in
cltd
addb
and
sub
mov
scas
xchg
xchg
dec
adc
push
cltd
dec
add
pop
out
test
dec
and
cmpsb
or
insb
aad
rol
icebp
xor
cmpsl
sub
adc
add
cwtl
mov
xor
hlt
push
decl
inc
inc
inc
hlt
jae
lods
cwtl
pop
sbb
adc
imul
push
imul
inc
and
movb
jnp
dec
add
movsb
inc
dec
cltd
out
cwtl
fnsave
xor
loop
jns
jecxz
push
or
mov
add
nop
sbb
mov
xchg
nop
cmpsl
cli
inc
xlat
sti
sti
jle
inc
lret
addr16
cmp
mov
inc
and
dec
lds
mov
clc
leave
loopne
cmp
test
pop
ds
dec
cmp
mov
xchg
pop
xor
xor
arpl
cli
ja
mov
and
out
and
int
mov
add
and
leave
sbb
cwtl
lea
leave
or
xor
or
sbb
push
sub
mov
je
inc
sti
pop
xor
inc
out
jbe
and
stos
xor
test
cmpsb
gs
dec
gs
adc
jns
add
cli
outsb
ret
or
or
incl
sub
std
jle
das
adc
pop
sbb
or
dec
and
repz
jo
pop
mov
push
lret
loopne
xor
push
jecxz
pop
fidivl
and
repz
es
fcomps
jbe
inc
dec
mov
subl
cmpsb
loop
inc
inc
and
cld
leave
shll
loopne
into
sub
fistl
shlb
mov
jmp
mov
leave
sbb
mov
push
stos
jo
fcomps
pop
xchg
mov
shrl
xchg
aaa
jl
out
xor
out
pop
mov
push
push
aas
leave
fidivrl
addr16
mov
insb
push
cld
dec
xchg
xor
push
mov
jecxz
sub
cs
popa
clc
or
lds
adc
push
mov
xor
sahf
rclb
stos
js
sbb
add
xor
push
es
cltd
jns
pop
out
cmpsb
psubsw
iret
jo
cltd
rorb
pop
popf
xlat
loope
js
mov
xchg
pop
scas
mov
pushf
jne
push
aaa
dec
mov
pop
daa
cltd
imul
inc
nop
popa
inc
push
imul
pop
or
inc
outsb
xchg
and
xor
dec
mov
sbb
out
pusha
xchg
sbb
jecxz
sub
sbb
insl
and
pop
push
pop
bound
sub
mov
sub
jmp
mov
jl
je
push
xor
js
dec
neg
or
jb
add
in
sub
mov
xchg
and
push
push
lods
out
fdivrl
rorb
xor
sbb
test
push
repnz
mov
in
or
dec
imul
dec
inc
pop
xor
aad
fdivrl
cld
icebp
add
repz
out
stos
outsb
ret
add
mov
cmp
clc
in
jo
push
xchg
mov
adc
lea
mov
je
mov
xchg
mov
in
cmp
fdivl
inc
popa
jne
nop
ret
pop
jmp
negl
dec
lds
dec
mov
testl
cmp
test
xchg
jmp
icebp
and
aam
cmpsb
das
into
insb
pop
arpl
insl
mov
or
cmpsl
mov
and
mov
xor
add
test
stc
ljmp
hlt
cmp
imulb
sbbl
adc
test
push
out
adc
filds
popa
daa
scas
mov
mov
mov
insl
faddl
stos
mov
repz
mov
ja
or
pop
mov
pushf
je
lcall
or
cs
stos
lods
xchg
test
pop
pushf
dec
or
es
cmc
mov
rorl
sub
mov
dec
ja
scas
popf
push
in
push
jmp
mov
xchg
pop
or
lahf
ja
sbb
aaa
xchg
jecxz
mov
shll
loop
mov
notb
fisubl
and
lahf
dec
xchg
out
rcrl
notl
jp
jl
pusha
clc
inc
push
cwtl
xor
lret
fisubl
fdivrp
popa
jbe
xchg
sti
je
setle
int
ja
and
out
cmp
clc
sbbl
or
sbbb
arpl
adc
lods
lea
jbe
mov
or
mov
or
xchg
inc
xor
add
popa
jl
movsb
jp
adc
add
incb
ret
in
jle
idivl
push
sub
jg
pop
xchg
cltd
jg
movsl
xor
sti
movsb
imul
xchg
inc
cwtl
sub
xchg
cmp
xchg
sub
mov
dec
and
sti
xorl
and
xor
pushf
js
pushf
mov
fisubs
mov
test
fcompl
inc
and
xchg
in
loope
push
and
mov
imul
insb
aaa
cmpsl
ljmp
pop
insb
adc
sbb
clc
mov
shlb
lea
mov
loope
or
xorl
repz
loop
pop
jb
xlat
lcall
jecxz
fldenv
add
cmp
int3
fildl
pusha
jmp
mov
inc
sti
out
adc
loope
jg
mov
push
push
das
jl
sub
leave
inc
bound
fstps
push
push
insl
rolb
jnp
fcmovbe
mov
mov
push
icebp
lcall
or
jge
adc
mov
push
mov
xchg
xlat
mov
cmpsb
ss
repnz
fmull
out
leave
mov
sub
dec
dec
push
jmp
dec
out
jecxz
xchg
pop
cmp
pop
lock
adc
lret
mov
add
fisttps
ja
push
arpl
jno
pop
imul
test
cmp
jae
popa
scas
rol
bound
mov
les
cmp
xchg
not
dec
scas
cmpl
in
jmp
mov
repz
bound
or
stos
mov
in
movsl
cmp
pop
push
dec
cmp
ficoms
rclb
xor
imul
mov
dec
test
outsl
inc
call
adc
add
push
cmpb
lds
mov
in
xchg
push
mov
loop
adc
sbb
fucomi
imul
jl
aad
mov
jmp
mov
incl
push
adc
cmp
jmp
fdivl
rorl
or
push
sub
or
out
mov
sti
rol
xor
add
push
mov
push
push
out
dec
cmpsl
les
fisttps
repnz
insl
pop
xor
loope
ret
mov
mov
jge
lea
cmp
or
in
mov
lcall
mov
cmp
into
mov
xchg
jmp
je
sub
sub
ljmp
int
in
into
inc
fimull
add
sahf
and
mov
jns
in
dec
push
hlt
sahf
inc
add
cmp
out
push
dec
arpl
lahf
js
ja
or
mov
lea
pop
jbe
ja
sbb
idivl
sbb
jmp
addr16
out
test
pusha
hlt
mov
sbb
neg
mov
lods
int3
mov
mov
mov
jge
icebp
push
stos
mov
adc
jle
sti
repnz
inc
and
rcr
out
in
leave
pop
leave
aas
nop
mov
or
mov
cmp
jge
ja
fidivrs
repnz
pop
xor
jnp
push
inc
mov
hlt
add
ret
mov
sub
clc
stos
ja
sbb
cmp
mov
pop
mov
adc
dec
cmp
mov
mov
mov
lahf
call
dec
xor
push
popf
or
cmp
lods
mov
cmp
in
or
nop
jnp
xchg
jl
int
jbe
dec
xchg
inc
arpl
ret
gs
dec
ret
out
shrl
aas
stos
fwait
stc
daa
cli
lds
in
clc
mov
movsb
and
ficompl
pop
push
filds
imull
sub
sbb
jp
sub
sub
shll
lea
push
enter
jle
push
sbb
inc
mov
das
jmp
ss
insb
jmp
mov
scas
inc
mov
int3
xchg
insb
fcoms
mov
pop
fcmovnbe
call
sti
xchg
sbb
ljmp
mov
fisttpl
inc
cmc
sub
rcl
pop
inc
push
mov
mov
pop
pop
fiadds
push
mov
loopne
lods
jnp
dec
aam
pop
push
or
mov
or
roll
sbb
mov
or
xchg
test
shlb
push
push
and
sbb
mov
fldl
repnz
mov
sti
mov
lds
inc
stos
shll
xor
dec
mov
cmp
jmp
mov
enter
push
push
loope
aad
jne
xchg
xchg
mov
insb
cmp
inc
hlt
daa
stos
lods
jno
or
push
cmpsb
jmp
push
sbb
mov
das
sarl
push
cmp
add
pop
pop
rep
lret
jb
mov
insl
scas
gs
pop
ds
iret
ljmp
jns
cmpsl
mov
in
ja
fdivrs
pop
outsb
dec
out
mov
cmpsl
cmp
pop
aad
pand
sbb
stos
lahf
mov
pop
stos
lret
pop
mov
mov
dec
mov
xchg
je
add
dec
mov
jno
aam
out
and
cmp
lock
js
mov
push
inc
imul
sar
cmc
es
roll
mov
lret
pop
jns
xchg
in
ds
pop
or
and
js
mov
es
push
into
push
xor
inc
mov
jecxz
bound
inc
movsl
adc
sbb
loop
jno
invd
inc
or
mov
pushf
or
icebp
inc
sub
cs
sub
mov
mov
push
rorl
movsl
pop
mov
inc
mov
pop
cmp
sbb
out
jo
cmp
sbb
cmp
mov
adcb
sub
jg
pop
fwait
mov
push
lds
pop
and
cmc
mov
sbbl
fstl
nop
aas
insl
mov
fcmovne
lods
adc
mov
and
xchg
push
test
push
ret
mov
and
in
test
mov
lods
cmp
shll
imull
jne,pn
imul
pop
stc
cmp
jmp
cs
jns
dec
inc
mov
lahf
xchg
std
fwait
pop
adc
inc
ljmp
sbb
mov
mov
into
ficomps
sbb
insl
mov
push
push
cli
xchg
cwtl
cmp
movsb
add
es
xor
push
call
inc
sti
shlb
mov
inc
or
pusha
pop
xchg
mov
and
dec
pop
popf
leave
or
es
push
lock
outsb
aad
in
sbb
daa
sub
cmp
imulb
adc
pop
test
mov
mov
clc
cmp
sub
cmp
mov
push
lcall
jb
dec
pusha
inc
xlat
or
sbb
in
cli
in
jl
orl
int3
ja
or
call
pop
aas
lret
out
test
imul
outsb
je
ret
leave
mov
ret
sub
cmp
fwait
and
mov
pop
packsswb
fsubrp
icebp
iret
cmp
dec
mov
jge
fcomps
add
aas
or
bound
inc
jne
clc
loope
dec
push
popa
lock
scas
fstpl
jo
xlat
fadds
orb
pop
add
or
push
in
sahf
mov
jecxz
lret
dec
dec
lret
imul
mov
pop
aam
cli
adc
outsb
cltd
mov
mov
fcmovnbe
das
push
fs
or
sbb
sbb
jle
aam
gs
cmc
lret
test
mov
lcall
or
imul
outsl
pushf
mov
aas
scas
cmp
jbe
out
das
ret
testb
lds
dec
lods
sbb
ljmp
test
cli
lods
add
rolb
stos
jnp
lahf
out
cli
pop
adc
xchg
pop
cwtl
out
mov
shll
test
in
clc
imul
sub
push
adc
adc
mov
pop
mov
mov
mov
sbb
adc
dec
repnz
xor
inc
shrb
stos
mov
xchg
inc
sub
imul
jg
xchg
inc
push
outsb
dec
in
mov
push
out
pop
sbb
fisubrs
or
jae
xor
xlat
pop
jns
bound
lret
out
dec
xlat
dec
test
std
int3
jg
xor
rcrl
stc
inc
and
xchg
mov
fidivl
sbb
in
xor
cmpb
push
stos
jnp
or
and
mov
dec
inc
test
adc
loope
mov
cmp
adc
punpckhdq
es
rcrb
daa
pop
hlt
sbb
inc
jecxz
cmp
mov
xchg
jp
mov
in
mov
repnz
or
xor
stc
jno
fs
add
stos
in
inc
jo
pop
cmc
inc
jl
lods
femms
ds
xlat
repz
mov
cmp
cmpsb
in
jp
stc
cwtl
fs
and
nop
imul
xor
push
int
pop
sub
icebp
xor
and
ret
loopne,pt
mov
cli
or
sbb
mov
add
add
in
push
std
xor
out
mov
mov
adc
and
xchg
daa
add
inc
mov
pop
lock
lods
and
cmp
shlb
jnp
jne
xor
dec
test
mov
lahf
dec
or
xchg
pop
les
adc
xchg
js
or
mov
fldl
in
xlat
mov
faddl
out
jecxz
ds
xchg
imul
and
decb
push
lcall
in
movsb
dec
fnstsw
and
adc
mov
pop
es
cmp
pop
cmc
mov
outsl
sarb
or
jecxz
mov
std
fldt
add
repnz
xlat
adc
out
dec
mov
stos
scas
cmpsb
push
int
adc
movsl
mov
xchg
shrb
int
mov
fxch
out
mov
pop
xchg
sbb
les
inc
sbb
mov
mov
lods
pop
pop
xor
pop
jecxz
insl
outsl
and
stc
aas
test
popf
outsb
lret
mov
ss
and
pop
pop
xor
push
xor
popf
xchg
mov
lret
out
rcl
jecxz
sbb
ds
pop
push
inc
add
xchg
mov
and
ljmp
cltd
mov
add
mov
pushf
lret
push
inc
mov
hlt
loopne
notb
sub
adc
pop
cmp
pop
or
push
loopne
lods
sbb
ljmp
inc
mov
in
ret
cmp
out
shll
xor
lret
imul
mov
mov
adcl
jo
pop
das
test
sbb
lock
test
inc
popf
wbinvd
mov
les
xchg
lcall
loop
inc
sub
jo
or
ja
adc
bound
inc
dec
push
lret
sbb
outsb
mov
ret
lods
mov
add
push
xchg
repz
jb
scas
jne
mov
xchg
icebp
fmulp
into
faddl
or
inc
les
jns
clc
lcall
insb
sbb
jecxz
mov
adcb
pusha
fcomip
lcall
fstpt
add
or
insb
xor
add
bt
and
fs
ret
sub
cltd
and
add
inc
dec
jmp
jecxz
xchg
mov
and
jae
push
test
sahf
inc
mov
mov
dec
lahf
lods
outsb
push
insb
or
scas
and
pop
or
or
or
cltd
les
cmp
jle
or
stos
mov
scas
and
outsb
jecxz
mov
scas
imul
inc
insl
sub
or
into
adcb
dec
push
leave
pop
dec
jg
pop
inc
sub
insb
mov
je
dec
arpl
xchg
je
add
ret
mov
call
cmp
push
icebp
loop
push
cmp
push
adc
roll
mov
rdmsr
mov
fwait
shrb
jmp
adc
xchg
pop
and
bound
cmp
pop
data16
fsubr
movsb
pop
fwait
dec
inc
in
lods
push
fwait
das
push
call
pop
inc
xchg
in
insb
in
scas
and
inc
lcall
je
adc
xlat
sbb
pusha
movsb
add
cld
int
test
sbb
cmpsb
or
mov
xor
hlt
and
lods
int3
push
cmpsl
js
addr16
test
and
mov
xchg
mov
cmpsl
aaa
sub
pop
sub
syscall
add
insl
movsl
pop
pop
rcll
jl
push
ss
jb
pop
addr16
popa
add
pop
xchg
mov
jmp
add
jl
mov
mov
ficoms
dec
sub
sub
sub
call
aad
push
mov
push
stos
movsb
jbe
xlat
mov
div
or
sub
add
insb
push
cld
test
jo
lcall
jge
or
stc
dec
adc
lcall
add
ret
mov
push
stos
xchg
pop
gs
adc
xchg
in
shll
pop
adcl
sarb
sub
in
mov
push
ja
dec
or
cli
js
mov
mov
cli
adcb
or
repnz
imul
imul
push
or
xor
mov
imul
push
imul
pop
push
loopne
cltd
cmp
inc
mov
cmp
insb
movq
test
push
dec
push
jns
loop
jmp
jae
int3
outsl
xor
fcomps
jp
lcall
sbb
into
sbb
lock
cmp
jo
jns
rcll
outsb
aam
xchg
fnstenv
sub
and
add
leave
lock
xchg
xor
mov
iret
xchg
xchg
xor
jae
adc
sub
xchg
jnp
icebp
cmpl
mov
adc
insb
xchg
xchg
or
movsb
in
or
jp
lahf
push
sub
ljmp
jbe
mov
dec
js
mov
sbb
jbe
sbb
mov
lods
mov
and
stos
xor
mov
push
jb
cmp
xorb
pop
popa
addb
daa
cltd
xor
lods
pop
push
flds
je
mov
xlat
push
and
inc
adc
cltd
out
outsb
mov
aam
sti
cmp
and
jp
xlat
jae
add
mov
lret
lcall
jl
cltd
mov
push
pushf
insl
popf
sbb
sti
sbb
stos
rclb
loopne
shll
sub
pop
mov
ja
jns
ret
out
fadd
jmp
mov
or
xchg
adc
pop
jmp
scas
shrl
mov
dec
cltd
mov
dec
sub
or
cli
pop
in
jno
bnd
insl
xor
insb
clc
imul
cs
sub
loop
daa
add
sbb
sbb
inc
mov
and
jmp
scas
movsb
mov
xchg
ficompl
jnp
pop
addr16
sbb
xor
xchg
xor
jo
lcall
cs
cld
lret
dec
push
lods
lods
xchg
fiadds
mov
xlat
jns
jp
jno
inc
inc
test
and
das
ss
ret
popa
into
mov
xchg
pusha
mov
popf
gs
adc
dec
cmpsb
jns
cmp
mov
les
dec
inc
sub
mov
mov
xchg
rcll
aaa
add
rcll
pop
adc
xchg
lret
bound
sti
ss
xchg
sbb
xchg
repz
or
add
mov
roll
enter
dec
out
sbb
mov
jmp
lea
xor
sarb
fcmovb
pushf
push
cmp
and
xor
rorb
addr16
or
push
and
sub
mov
pusha
or
dec
shlb
jo
pop
adc
call
repnz
or
mov
pop
pushf
push
lahf
ja
add
clc
outsb
dec
sub
push
jnp
leave
cmp
sub
pop
sbb
xchg
leave
jg
bound
lret
xor
and
iret
adc
adc
jbe
mov
adcb
sbb
push
pop
cmp
pop
js
out
addr16
aas
and
inc
rcrl
mov
xor
roll
gs
jnp
rcrl
mov
lods
add
stos
sti
sbb
jg
scas
adc
pop
dec
imul
xchg
cmc
and
imul
das
xor
lods
adc
scas
shlb
jbe
jne
inc
cld
loop
mov
xchg
fistpl
jbe
fcomi
push
mov
jne
xor
stos
mov
push
and
das
pop
jnp
fdivs
out
adcl
ljmp
mov
jecxz
ds
js
adc
mov
mov
add
add
push
incl
in
pusha
and
cmp
stos
data16
mov
jbe
ja
test
mov
push
enter
jae
int3
mov
mov
pop
sbb
stc
popa
andl
fs
in
rcll
repz
push
jo
push
mov
mov
jbe
dec
je
mov
ljmp
sbb
mov
enter
rcrl
pop
add
sub
or
xorb
pop
jns
mov
sbb
or
pop
aas
push
rolb
aas
pop
push
out
faddp
cmp
arpl
add
mov
out
enter
xchg
sub
add
adc
data16
in
and
loope
cltd
push
sbb
js
bound
sbb
mov
xchg
push
add
stc
fldl
je
mov
add
int3
mov
push
cwtl
add
add
cs
cs
jmp
arpl
pop
adc
xor
adc
aam
pop
in
in
out
pop
push
ss
iret
ljmp
daa
test
repz
imul
xor
mov
lahf
push
sbb
gs
dec
stos
aam
push
cmc
xor
fidivl
jno
outsb
sbb
stos
xchg
dec
mulb
out
pop
mov
dec
leave
int3
cmpsl
in
ljmp
pop
ja
adc
mov
mov
lds
cli
cs
xchg
sbb
adc
inc
sbb
xor
jns
jge
popa
fcmovnb
jo,pn
cmpsl
cld
loop
and
dec
push
test
frstor
mov
or
sbb
mov
int
inc
xchg
sbb
mov
and
call
push
insl
mov
add
mov
outsb
inc
divl
nop
mov
jnp
and
mov
cmp
pusha
incb
pusha
add
lcall
mov
xor
in
mov
fwait
push
into
cmp
xchg
or
jg
iret
inc
scas
loope
mov
stos
test
fwait
add
mov
std
jnp
dec
aas
je
cmc
cmp
in
adc
loop
push
pop
lock
arpl
aam
outsl
dec
mov
sub
lret
cvtps2pd
cmp
fisttpll
clc
sarl
push
or
cmpsb
pop
dec
inc
mov
cmp
or
adc
lcall
push
xchg
loop
xor
mov
sub
cmp
dec
test
sbb
scas
icebp
lea
or
mov
out
insl
inc
mov
je
lea
sub
mov
mov
push
inc
sub
sbbb
sbb
ficomps
inc
or
int3
fadd
dec
out
lret
xchg
mov
out
xchg
ret
xchg
cmp
call
je
xor
loope
aam
jp
xor
cmpsl
mov
pushl
jo
das
add
xchg
ret
hlt
aas
cmp
mov
es
mov
in
add
adc
jle
mov
stos
pusha
mov
adc
dec
dec
pop
jl
mov
testl
sub
sti
inc
jno
mov
sub
inc
jo
mov
and
add
mov
lahf
mov
and
int3
dec
mov
mov
xchg
mov
das
xor
test
loopne
popl
push
in
test
inc
inc
add
cmp
dec
fs
aam
push
cmp
inc
inc
jp
aam
out
lock
push
push
lods
lahf
imul
dec
mov
fadds
inc
pop
std
stos
jns
mov
outsl
insl
aas
inc
clc
jle
popa
mov
dec
shlb
outsl
stos
pop
cmp
or
int
into
fidivs
mov
sbb
leave
sub
mov
or
stos
into
or
push
jo
mov
cld
mov
pop
stos
inc
pop
adc
movsl
xchg
cmc
mov
cmp
xchg
inc
test
sarb
repnz
cmp
dec
cltd
sbb
outsl
dec
and
jle
rclb
sbb
imul
mov
test
lcall
sbb
mov
inc
and
ret
imul
aad
fs
cmp
mov
push
stos
out
sbb
sbb
add
rcll
insb
sbbb
mov
sub
sub
xor
inc
add
xchg
aam
mov
ret
mull
pop
inc
mov
jg
pop
out
add
sub
stos
leave
aad
cltd
adc
cwtl
pop
jo
jo
aas
mov
inc
shrb
pop
sub
pushf
pop
test
int3
sub
shlb
xchg
mov
cmp
mov
js
pop
pop
test
pop
aaa
dec
or
iret
fwait
aad
movsl
mov
inc
out
inc
jl
mov
xchg
cwtl
or
push
scas
add
test
jnp
sub
imul
xor
arpl
subb
xor
lret
lods
insl
push
rclb
mov
mov
clc
pop
or
xlat
icebp
cmp
jo
pop
mov
inc
cmp
ret
mov
repz
repz
ret
icebp
push
xchg
notl
mov
xor
mov
into
xchg
pop
addr16
lock
jp
call
cmp
mov
mov
jp
mov
cmc
and
cld
adc
push
popf
clc
lock
shll
in
mov
jl
pushf
inc
dec
test
and
dec
insl
popf
andb
nop
pop
insl
ljmp
loope
out
packssdw
fcmove
mov
rcrl
imul
jae
cmc
int
ss
test
add
out
mov
fxam
cmp
jl
insb
loop
lret
sub
pop
das
lea
push
mov
dec
test
jnp
dec
fdivrs
sub
jp
ja
add
out
mov
cwtl
push
movl
insl
dec
xor
ja
fsubrs
and
cmpsl
pop
idivl
inc
add
and
js
push
mov
adc
sbb
pop
xchg
push
adc
dec
adc
sahf
inc
sub
jge
mov
xor
insl
mov
es
jbe
dec
fisubrs
bnd
imul
insb
lcall
das
into
mov
push
stos
shlb
in
jnp
push
pusha
mov
mov
xchg
inc
leave
shr
data16
lahf
les
adc
push
xchg
add
or
fwait
sbb
pop
sbb
dec
push
mul
xor
movsl
pop
out
inc
xchg
lcall
orl
push
push
sbb
ficoml
dec
xor
xchg
test
jne
inc
mov
js
mov
xchg
jb
icebp
mov
sbb
sub
push
test
test
adc
jmp
jb
test
divl
das
cmp
imul
or
lods
out
aam
int3
negl
pop
js
or
mov
ficompl
testl
nop
stos
cmpsl
cmc
ljmp
sbb
mov
dec
sub
mov
pop
cltd
mov
lods
fidivrl
pop
dec
pop
sarb
dec
icebp
shrb
jle
lret
mov
pushf
int3
repz
mov
repnz
sbbl
or
shlb
into
out
movsb
add
das
jl
dec
ds
outsl
pop
sub
adc
orb
jae
movsb
jl
mov
jmp
mov
out
sarl
mov
lock
jle
inc
sar
rcl
mov
adc
aam
test
add
rol
stos
xlat
rcll
push
je
shrl
sti
adc
mov
mov
scas
sahf
xor
cmc
mov
adc
xor
inc
xchg
mov
push
mov
cmp
xlat
mov
add
icebp
cmp
ror
sbb
push
jecxz
aas
outsb
or
mov
or
inc
push
mov
mov
push
mov
orl
sub
or
ret
xlat
cli
js
imul
outsb
sbb
insb
dec
fiaddl
aad
mov
gs
sarb
push
int3
add
xor
mov
mov
mov
dec
xchg
pop
outsb
inc
cld
popa
xchg
sbb
mov
loope
mov
mov
pop
ss
fisubrs
cmp
xchg
dec
push
mov
enter
icebp
cmp
fidivrs
mov
jmp
inc
or
pop
xchg
push
ficoms
pushf
dec
loop
and
mov
test
in
pop
testb
dec
arpl
xchg
inc
repz
pop
xchg
outsb
and
sub
xor
ja
inc
jg
icebp
or
in
cmp
mov
or
popf
lcall
jns
jae
sbb
js
jle
iret
mov
ljmp
pop
cmp
shrl
out
arpl
mov
or
clc
aad
push
aam
xlat
mov
jo
imul
dec
xlat
inc
fdivr
clc
out
clc
aas
mov
inc
lret
cmpsb
jmp
inc
mov
pop
mov
enter
inc
pop
fildll
loopne
std
and
cli
add
stos
xlat
mov
fildll
add
pop
xchg
ret
nop
stc
dec
lea
push
add
insl
loope
or
sti
mov
lret
xchg
add
in
push
aaa
aam
divl
cltd
aam
repz
jo
js
js
scas
outsb
mov
lods
push
jp
leave
xor
sbb
faddl
xor
sbb
fisttpll
ljmp
inc
inc
xchg
sub
jns
call
lret
das
cwtl
sub
sub
pop
mov
inc
popa
mov
fiadds
push
cmpsb
sub
mov
test
lods
in
arpl
loop
setb
jns
shl
cltd
shrl
mov
or
punpckldq
push
lock
pop
int3
xor
pop
pop
xor
adc
daa
enter
and
mov
pop
pop
add
push
xor
push
pushf
js
push
xchg
sahf
ljmp
rol
cltd
inc
leave
dec
outsb
aas
lret
and
jle
imul
push
mov
fidivl
std
outsl
add
xchg
push
push
or
repz
jge
sbb
xor
test
lret
adc
or
lds
jns
jecxz
and
shlb
movsl
out
push
inc
mul
repnz
outsb
popa
jecxz
push
lock
mov
stos
sbb
inc
and
jle
inc
lret
mov
mov
cli
leave
and
mov
lock
add
jecxz
cmp
aad
daa
fcmovnb
outsl
inc
sbb
out
inc
jne
lds
pop
sti
cmp
clc
fs
std
adc
jg
inc
mov
jo
ljmp
or
mov
jge
pop
loopne
lds
mov
jne
leave
add
movl
leave
adc
sbb
adc
lea
push
repz
bnd
inc
adc
mov
xchg
sub
mov
fsubrl
cli
jl
jno
mov
pop
mov
sbb
lea
mov
jns
dec
xchg
mov
popa
push
sahf
cli
leave
mov
scas
add
dec
inc
pusha
pusha
int3
mov
test
cmpsl
pop
out
outsb
pop
in
inc
cmp
cltd
and
dec
fwait
in
push
pop
mov
or
imul
and
in
xchg
sti
je
jp
dec
aad
mov
rcl
sbb
popf
pop
test
leave
dec
rorl
rcrl
lock
shrb
dec
loope
ret
lahf
scas
xchg
pushf
leave
bound
sahf
sub
test
mov
push
pop
mov
ds
mov
push
push
iret
insl
jne
xor
mov
inc
lret
insl
inc
dec
jmp
jg
cld
stc
add
mov
sub
or
out
arpl
dec
pop
int
dec
mov
sub
fistpl
fsts
int
xchg
jno
popf
inc
push
imul
mov
je
ret
inc
pop
lahf
and
adc
pop
or
xchg
js
iret
jl
mov
stos
xchg
mov
scas
dec
mov
addr16
lods
movsb
push
mov
dec
int3
fucomp
and
fdivr
stos
jecxz
popa
adc
jecxz
insl
pusha
stos
imulb
movsb
pop
test
sub
aaa
mov
rcll
mov
cmp
int3
in
orb
scas
or
int3
adc
aad
call
clc
stc
sub
and
scas
icebp
rol
xchg
out
fistl
enter
jmp
push
dec
outsb
push
aam
pop
mov
stc
cmc
test
or
loope
mov
inc
ss
cmp
sbb
fimull
ss
in
test
sbb
leave
insb
mov
imul
mov
jb
jge
mov
mov
xor
cmp
mov
add
xchg
lods
jae
and
fcmove
mov
mov
aam
xchg
inc
pcmpeqb
xchg
ret
cmp
add
call
inc
cmp
int
imul
cmpsb
mov
xor
push
sbb
adc
fimull
mov
pop
addr16
lds
adc
push
cmp
in
xchg
andl
fsub
in
add
cmpsb
test
xchg
ret
push
loopne
popf
les
icebp
push
enter
mov
mov
add
bound
jbe
mov
push
lret
in
dec
xchg
out
bound
icebp
mov
mov
xor
mov
push
ficoml
mov
dec
gs
dec
sub
sbb
mov
ret
cmp
arpl
push
cli
mov
sub
jae
cmp
sub
xor
jge
fwait
mov
jo
dec
out
out
adc
cmp
sar
mov
mov
jne
cwtl
pushf
into
ret
mov
std
jge
xchg
xchg
shll
fildl
jg
sbb
adc
movsb
and
mov
testl
push
mov
repz
es
aas
scas
stos
xchg
aaa
fmul
inc
mov
fmuls
out
xchg
adc
pushl
sti
sti
mov
fldenv
push
les
fs
add
mov
or
dec
adc
adc
add
insb
push
fldcw
sbb
lea
imul
daa
stc
mov
call
or
nop
sahf
lahf
add
outsl
xchg
movaps
movsl
insb
mov
popf
dec
cmc
insl
push
xor
dec
lret
push
out
ds
stos
jle
fcoml
inc
xor
cltd
jo
rolb
and
bound
arpl
cmpsb
rclb
or
mov
icebp
mov
xor
mov
mov
xchg
adc
test
jecxz
fwait
jp
inc
inc
sbb
in
mov
addr16
inc
push
les
mov
cwtl
or
pop
sti
inc
out
lds
mov
in
sbb
jne
movsl
adc
loope
nop
cmp
jo
mov
jge
cmp
mov
mov
cmp
jo
adc
inc
scas
addr16
sbb
xor
and
int3
cmp
loope
bound
sub
scas
add
and
push
dec
lahf
lock
dec
mov
cmp
lret
add
cmpb
test
xchg
shrb
popa
push
cmp
xchg
mov
pop
sub
aam
hlt
movsb
rol
insb
lock
xchg
and
std
scas
sbb
rol
jno
inc
sbb
fsubl
shlb
adc
cmp
and
sbb
sub
je
mov
adc
push
icebp
adc
in
sub
pusha
cmp
dec
dec
mov
aas
adc
dec
sub
dec
loope
and
lods
enter
inc
int3
xchg
stos
loop
cs
shrl
mov
shll
mov
testb
fbld
adc
xchg
mov
fistps
mov
pop
jbe
xor
add
imulb
and
std
jne
aad
mov
pushf
push
cmpsb
mov
cmp
sbbl
inc
fucomp
mov
push
xor
ja
mov
data16
dec
push
or
cmp
into
sti
mov
ret
and
or
repz
push
or
jmp
cwtl
bound
add
sub
pop
lahf
mov
daa
mov
cmc
leave
cmp
mov
int
lcall
jg
sarl
nop
ds
out
push
jo
lods
or
loopne
cwtl
notl
jo
push
std
jp
mov
insb
aam
aad
or
xchg
cmp
add
add
jecxz
inc
adc
or
or
xchg
sbb
sub
push
leave
pop
inc
xchg
adc
mov
jle
cwtl
jb
gs
sub
clc
sbb
add
in
dec
jl
into
add
mov
imul
or
int3
icebp
sbb
ret
aad
xlat
insb
mov
xchg
dec
rcr
pop
jmp
push
xor
ds
xor
xor
test
fidivrs
into
out
mov
mov
scas
fldenv
dec
lcall
test
jl
test
dec
mov
and
in
rcrl
push
xchg
orl
pmulhw
daa
add
das
call
cli
out
icebp
mov
sbbl
pop
push
into
sbb
daa
jp
fucomp
dec
adc
push
xchg
out
pop
out
mov
cmp
loopne
jl
mov
xor
xor
imul
bound
dec
inc
lods
or
sub
adc
pop
fldl
stos
or
fcoml
jmp
or
xor
sub
and
jmp
pushf
xchg
std
sub
adc
push
jbe
fildl
pop
shrl
loopne
lret
push
pop
mov
call
xchg
mov
cmc
cmc
js
gs
xchg
stos
cmp
sbb
mov
mov
mov
jge
jmp
fstps
and
or
aas
popa
push
imul
sub
movsb
test
push
lods
jmp
out
jp
insl
xor
sbbl
and
adc
push
mov
xor
jl
enter
pop
or
das
xor
pop
aaa
and
aaa
or
pop
sbb
test
out
addb
jecxz
mov
mov
fbld
push
fs
xchg
inc
sub
fistl
mov
push
test
fldl
mov
outsb
jecxz
jb
dec
mov
mov
insl
imul
je
mov
inc
mov
push
cmc
push
lea
cmpsl
jmp
mov
push
clc
xor
dec
cli
mov
js
subb
cmp
int
repnz
sub
or
repz
es
popf
add
outsl
fimuls
movsl
add
insb
ret
inc
jmp
test
inc
call
xor
cltd
push
pop
adc
jp
mov
and
stos
mov
mov
stc
stos
add
jb
ret
adc
cmp
fchs
jp
xchg
mov
pop
or
cmc
ja
push
add
push
popf
movsb
aam
ret
xchg
pop
int
mov
pushf
mov
fmull
ds
es
add
cmp
fs
sbb
incl
sti
clc
in
dec
add
movsb
jb
ficoms
in
fsubs
popa
daa
cmp
push
mov
pop
add
ret
pop
lret
jg
stos
cmpsl
sub
aad
cmc
xlat
mov
fcomps
pop
lret
ss
sbb
mov
mov
repnz
sbb
jae
jno
pop
pop
dec
sar
lods
jle
sbb
ficoms
test
push
scas
mov
iret
jne,pn
cmpsb
andl
ret
jb
test
or
out
in
mov
pop
sub
mov
push
les
lock
xor
lods
lahf
jbe
xor
push
cmpsl
xor
arpl
sbb
scas
add
inc
nop
xor
int3
hlt
mov
pop
aaa
out
and
das
adc
jne
test
mov
pop
mov
push
jno
or
xchg
and
mov
data16
lods
mov
cwtl
sub
call
fs
ret
pop
xchg
cmpsb
fs
insb
repnz
nop
push
push
push
lret
dec
mov
jg
lea
inc
pop
mov
sbb
sti
dec
ljmp
out
outsl
xchg
es
arpl
pop
mov
ljmp
bound
mov
mov
insl
xlat
sub
push
test
cwtl
and
rcll
dec
ljmp
addr16
movsl
aam
jb
xor
in
sbb
loope
movsb
sub
loop
push
push
mov
popf
insb
sbb
cmp
popf
mov
lods
jo
sub
sub
aad
enter
outsb
adc
mov
mov
jne
icebp
lahf
addr16
fstpt
test
aam
and
clc
jl
aaa
jne
popa
sub
cs
daa
lret
lret
jg
lcall
outsb
adc
movsb
sub
dec
aas
cmp
push
sti
xor
mov
inc
loop
lock
shr
sbb
pop
add
mov
add
sbb
sub
ja
cs
mov
sbb
and
pop
xchg
roll
and
outsl
sbb
out
scas
adc
adc
sti
movsl
add
inc
stc
xchg
pop
mov
in
xchg
jecxz
repz
in
push
push
inc
and
pop
mov
pushf
adc
sub
shrl
xlat
and
pop
clc
inc
or
ret
jbe
popa
inc
sahf
adc
xchg
or
stos
jge
es
ss
and
cmp
inc
addl
sub
movsb
bound
subb
mov
mov
mov
jmp
push
pop
dec
mov
pop
pop
fisubrl
jo
xor
add
add
xor
insl
push
inc
dec
clc
mov
or
popa
dec
not
les
in
fsubs
pop
test
in
mov
lahf
dec
or
fdivs
movsl
xor
loopne
in
in
xor
jp
jl
mov
sbb
insl
shlb
movsl
add
clc
out
cmp
inc
bound
mov
in
and
cmpsb
repnz
gs
cmpsl
scas
sbb
pop
cli
movsb
add
cmp
cmp
js
push
inc
in
pop
leave
mov
sbb
loope
push
mov
lret
call
aas
pop
jns
cmp
int
xchg
shrb
cmp
popa
outsl
jmp
jbe
dec
xchg
shll
mov
pop
repnz
lea
push
sbb
xchg
mov
jb
jg
pop
outsb
jae
sub
in
lret
int
shrb
daa
std
int3
sahf
shlb
nop
xor
jmp
mov
mov
fbstp
fdivrl
loopne
insb
in
adc
sub
inc
stos
inc
fildll
sbb
faddp
cmpsl
popa
sub
sbb
inc
jae
iret
push
jle
loop
mov
or
pop
push
and
sub
xchg
xchg
fld
mov
test
pop
mov
out
imul
fsubl
push
les
scas
sub
movsb
outsb
push
add
stos
lret
dec
mov
jne
xchg
add
js
sbb
loope
dec
add
fcomip
inc
test
or
add
pop
pop
ss
outsl
fwait
and
sub
adc
and
jle
mov
mov
push
mov
test
pop
pop
movsb
ja
lcall
mov
aas
mov
int
cli
jge
jnp
scas
push
iret
pop
ror
pop
and
aam
push
sti
loop
xor
or
testb
das
push
jge
daa
or
dec
push
int
cmp
mov
flds
add
xor
mov
ficomps
scas
call
sbb
cmp
jae
cs
mov
cmp
pop
mov
test
mov
adc
jo
cs
popa
xlat
clc
xor
sbb
xchg
int
mov
stc
xor
xchg
sbb
out
gs
push
sub
and
out
mov
mov
pop
enter
std
and
imul
sub
fadds
pop
lret
xor
fisttpl
inc
and
fdivrl
cmpsl
cmp
shll
push
adc
mov
mov
loopne
dec
into
sarl
lock
push
shl
adc
call
ljmp
fdivs
ficoml
push
mov
fnstsw
push
cli
ja
mov
andl
inc
or
xor
ret
cmp
test
js
inc
aam
lods
mov
mov
mov
push
leave
in
sub
mov
adcl
jmp
jge
popa
sbbb
adc
sarb
leave
xor
jmp
cmp
xor
or
mov
sub
inc
lcall
gs
xchg
sti
cmp
mov
outsb
sbbl
or
dec
inc
sbb
dec
popf
adc
insl
cltd
stos
cmpsl
xchg
cltd
scas
mov
add
mov
fmull
cwtl
arpl
lcall
pop
pop
xor
movsb
shlb
sarb
and
popa
adc
movsb
xor
jae
sub
mov
icebp
in
iret
add
mov
lahf
daa
or
sarb
add
pushf
adc
test
gs
mov
mov
cs
hlt
inc
xor
imull
out
mov
into
lock
cmpl
mov
push
mov
cld
jle
lcall
popa
jl
test
add
aad
adc
es
mov
xor
add
sub
xchg
sbb
imul
inc
inc
push
je
xchg
fnstenv
jno
fadds
inc
mov
mov
je
xor
jb,pn
push
int
xacquire
popf
sbb
adc
dec
fistpll
fdivrp
push
and
arpl
add
fiadds
stos
push
popf
xchg
movsb
icebp
std
jne
mov
aaa
mov
mov
inc
adc
pop
dec
scas
js
pop
or
arpl
dec
sub
inc
sarb
sub
dec
and
push
jge
pushf
negb
cltd
inc
nop
adc
iret
test
subl
add
sbb
stc
cwtl
mov
loop
add
loop
stos
xchg
lds
int3
sub
push
inc
nop
gs
jne
imulb
mull
add
mov
jo
jle
sub
movsb
pop
adc
repz
push
inc
cs
mov
sub
pop
sub
loopne
cld
sbb
test
mov
pusha
xchg
rclb
xchg
jmp
pop
fsubrl
add
add
or
aam
and
loope
outsb
repnz
and
lock
nop
cmpsl
sbb
add
sbb
outsb
push
jae
add
fidivs
adcl
inc
push
cmp
cmpsl
jg
push
mov
or
pushf
mov
in
xchg
dec
cmpsl
sub
push
pandn
lods
sahf
pop
push
jb
adc
mov
inc
sub
sub
sbb
lret
jl
rol
jno
rorb
mov
arpl
movsb
xchg
pop
lahf
stc
mov
int
outsl
add
lcall
xor
nop
adc
jae
out
or
pop
data16
pop
xor
ret
dec
mov
cwtl
jnp
adc
stc
or
ljmp
mov
push
xchg
push
adc
loope
loope
sub
cmpsw
dec
adc
faddl
mov
cs
fwait
adc
add
ret
push
pop
mov
fisttpll
inc
mov
pop
jp
push
int3
mov
push
call
and
jmp
adc
sub
add
mov
push
je
jp
dec
cmp
sub
pop
xchg
jns
das
xor
xor
mov
xchg
dec
sahf
xchg
test
push
lahf
es
pop
inc
inc
lahf
aaa
add
xor
sahf
dec
popf
inc
sub
mov
cltd
outsb
inc
fidivrs
mov
fidivs
push
xchg
and
pop
dec
push
xchg
cli
jno
dec
popa
sbbl
mov
sbb
pop
mov
out
repnz
sub
jmp
loop
mov
pop
lahf
push
mov
dec
mov
in
loope
lds
sub
jg
scas
sbb
mov
mov
je
aaa
lret
imul
shll
movsb
mov
sub
adc
and
push
imul
adc
push
xor
nop
xchg
je
repnz
or
inc
dec
cli
cs
xor
out
outsb
pop
inc
jle
shll
outsb
fistl
and
mov
push
mov
mov
movl
dec
xchg
xlat
mov
or
dec
int
in
sub
stos
popa
int3
mov
add
push
pop
andb
lds
stos
cmp
inc
lods
jl
inc
lods
loopne
mov
sbb
jg
pop
and
sbb
pop
hlt
or
adc
es
test
lcall
inc
in
pop
sub
pop
jg
lret
iret
push
and
adc
hlt
mov
lods
pusha
repnz
in
aad
sub
xorb
es
pop
pop
fstps
xchg
aaa
imul
scas
pop
lods
xchg
push
rcll
mov
sub
adc
and
loop
lret
add
lret
inc
rclb
loop
sub
loop
icebp
loopne
mov
fdivrl
mov
xchg
div
or
aad
mov
out
add
push
dec
shrl
cwtl
or
cmp
adc
int3
sub
into
test
mov
repz
fildll
jle
ja
cmpsl
add
subb
xlat
orb
imul
adc
out
jnp
rcrl
and
stos
scas
arpl
fst
aam
es
pop
iret
stc
fldt
push
fisubrs
and
enter
lea
mov
movsl
sbb
and
xchg
call
push
in
cmp
add
push
xor
gs
or
sub
mov
pop
xchg
imul
mov
pop
sbb
sub
xchg
jb
mov
pop
xchg
pusha
scas
sbb
hlt
iret
popa
ret
lcall
adc
movsb
popf
jg
dec
aad
mov
dec
cmp
fcmovnbe
fwait
push
adc
inc
scas
test
sbb
cwtl
addr16
cwtl
into
xchg
addr16
jo
jo
cmp
ficompl
out
xor
lahf
loope
push
xchg
inc
cmp
imul
mov
xchg
and
push
lds
inc
or
push
das
xchg
xchg
lods
jno
xor
push
push
jb
sti
imul
xchg
xor
leave
sub
or
clc
sahf
dec
mov
imul
cmp
stc
outsl
inc
cmp
xchg
jg
jb
dec
mov
sbb
and
adc
push
cwtl
cmc
add
xor
loope
pusha
movsb
push
and
adc
test
push
cmp
fisubrl
aas
mov
sbb
ja
pop
in
jp
and
mov
sbb
dec
inc
xchg
or
add
les
cmp
ja
daa
loopne
into
bound
std
push
fcoml
and
mov
fists
mov
or
addb
xor
xchg
jns
push
js
adc
xor
nop
rclb
inc
mov
mov
inc
fbld
add
dec
pop
data16
or
jmp
ffreep
lods
int
xor
mov
sbb
pop
sub
test
push
or
call
aas
xor
in
lods
xor
xor
fwait
jge
jb
jnp
test
mov
mov
jns
repnz
adc
icebp
loope
hlt
or
jl
xor
and
roll
lret
aas
test
inc
lods
dec
lret
inc
jns
jge
push
aam
loop
jne
cmpl
push
and
push
jo
and
dec
ja
inc
pop
sbb
clc
mov
scas
scas
inc
ret
lcall
dec
and
sti
mov
jnp
ja
xchg
push
xor
sub
push
int3
aas
mov
arpl
push
in
subb
stos
addb
pop
das
dec
xor
mov
cmp
and
mov
lds
ds
jb,pt
mov
sbb
shrb
test
mov
mov
rclb
pop
aaa
dec
loopne
xchg
es
jns
sbbl
sti
insb
mov
jne
in
lret
lea
loopne
cmpl
sub
popf
cmp
xchg
inc
test
pusha
addr16
pop
call
test
ljmp
orl
ret
inc
or
stc
jnp
cs
icebp
test
mov
loope
cmpsl
dec
lahf
pop
sbb
loop
jb
ljmp
les
pop
pop
movsl
cmp
add
add
in
xor
addr16
add
sub
adc
cli
ja
inc
rcrl
notb
jne
arpl
fwait
and
jl
lods
sub
inc
jp
xlat
adc
ret
int
mov
stos
sub
adc
pop
lods
shll
lea
jecxz
dec
je
mov
adc
inc
add
popa
add
fs
ret
pop
stos
or
mov
pop
mov
out
cmp
psllq
roll
sbb
imul
or
jmp
sub
inc
mov
std
stos
rcll
lret
inc
sub
mov
add
aam
dec
fwait
or
mov
dec
inc
std
and
je
insb
inc
jp
cmp
jb
cmp
mov
sub
fists
add
inc
test
dec
hlt
xor
mov
add
subb
push
hlt
inc
test
addr16
and
mov
xor
das
xor
mov
cmpl
pusha
sahf
inc
int3
stc
pop
jmp
and
iret
test
sub
insb
mov
out
and
out
or
subb
push
rcr
pusha
pop
dec
jecxz
jge
cli
push
add
push
xchg
ret
xor
jle
xchg
clc
or
data16
pop
shrb
out
and
stc
stc
jns
xlat
cmp
sbb
sbb
inc
add
mov
leave
ret
pop
in
sbb
fnstcw
dec
ret
lea
ds
jbe
inc
test
daa
xor
test
xor
jae
xchg
mov
out
xlat
pop
loope
pop
jl
fdivrs
cltd
clc
call
popa
dec
sti
adc
insb
shll
xchg
jns
lret
stos
sti
or
xrelease
hlt
pop
sub
mov
test
sbb
mov
lcall
and
or
fsubrl
jg
mov
jge
cmp
push
jbe
hlt
adc
jmp
mov
pop
into
and
mov
call
jnp
adc
nop
xchg
dec
lahf
loopne
mov
mov
and
or
push
mov
test
or
lcall
and
ret
dec
test
mov
aad
pop
inc
dec
outsb
cltd
fldt
jl
and
lods
xor
aas
dec
mov
dec
shlb
push
imul
sbb
and
ljmp
cs
mov
xor
je
fstp
loop
andl
popa
mov
scas
lcall
push
inc
fdivrl
mov
lods
push
fiaddl
shll
mov
cmpl
mov
pushf
xchg
int3
shl
cmpsl
loopne
ljmp
adc
pop
and
pop
int
scas
pop
loope
sub
sahf
adc
sub
push
xor
and
sbb
movsb
lods
push
mov
dec
ljmp
loop
jp
popf
adc
and
bound
jo
push
cmpb
stc
arpl
mov
mov
mov
mov
and
xchg
aam
jne
loope
in
mov
adc
shrl
xchg
push
pop
jae
mov
inc
push
cmp
push
adc
xor
mov
scas
adc
or
cmp
jge
bound
test
inc
mov
imul
add
mov
adc
add
movsl
add
pop
sahf
dec
inc
mov
push
test
pop
mov
outsb
adc
movsb
shl
xchg
mov
cmp
std
xchg
and
jne
xorl
aas
imul
sti
mov
or
add
not
jl
xor
ja
sbb
stc
push
xor
popa
adc
cwtl
fwait
test
sbb
clc
xchg
jno
int
fisubrs
hlt
mov
jecxz
jmp
pushf
ret
pop
inc
mov
xchg
fmul
or
dec
cmp
call
push
mov
cmp
and
lcall
mov
xor
loop
sub
loope
jmp
add
pop
cwtl
in
inc
pop
add
in
jo
sub
or
or
iret
js
scas
xchg
jb
add
scas
bound
data16
pop
mov
adc
adc
mov
hlt
out
mov
pushf
aad
insb
cmp
shll
leave
push
mov
push
xchg
lds
iret
sbbl
inc
push
inc
jmp
add
rorl
sbbl
test
and
sbb
mov
in
jne
out
pusha
pop
sub
xor
mov
loop,pt
out
sbb
cwtl
jmp
mov
jecxz
stos
adc
cmp
cmp
das
test
cmp
jle
jl
jne
mov
push
pop
insl
mov
dec
xor
ror
sub
cmp
dec
sub
pop
out
add
and
pop
shrb
pusha
popa
in
and
pop
pxor
inc
std
mov
pop
cld
ss
xor
xlat
je
adc
loope
enter
inc
lock
jae
jp
sub
and
and
pop
sti
cmp
inc
jns
test
mov
repnz
jno
scas
sbb
cmc
sub
sar
cmc
daa
iret
adc
mov
adcb
xchg
loopne
or
les
out
lods
or
jg
fistps
jno
mov
push
sub
aaa
inc
cmp
sbb
mov
cmpsl
enter
jle
adc
pop
sbb
loope
aad
out
stc
jnp
ja
and
inc
popf
imul
int
mov
inc
jnp
mov
adc
push
pushf
fidivrs
lods
fcompl
jl
push
or
xlat
push
fcoms
movsl
dec
je
cmpsw
into
shlb
loope
arpl
sbb
int
mov
dec
rcrl
call
jb
clc
push
stos
or
mov
jbe
jbe
ret
or
push
push
xchg
in
sbb
lea
mov
outsl
inc
dec
inc
lods
rcll
cmovnp
imul
fdivl
push
mov
inc
testb
into
hlt
pmuludq
das
lahf
pop
xlat
aas
xchg
mov
aam
ja
ret
out
daa
das
mov
and
push
and
je
fs
ficoms
sub
jmp
add
xlat
cs
pop
stos
fsubr
lock
sbb
dec
ja
sbb
and
jno
xor
mov
std
push
sbb
loopne
sarb
mov
adc
mov
dec
shrd
imull
and
xchg
and
das
cmp
lods
adc
inc
inc
iret
sub
insb
sti
clc
sbb
rolb
xchg
xor
push
cld
xchg
mov
adc
mov
jge
in
out
dec
cmp
inc
inc
cmp
cmpsl
pop
mov
inc
mull
sbb
or
stc
data16
add
cwtl
rorl
call
lahf
pop
lock
push
bound
fnstsw
and
popa
in
xchg
mov
fsubrl
and
inc
adc
idiv
in
jno
mov
mov
dec
mov
aad
and
out
ljmp
negl
ja
movsb
shl
mov
inc
pop
cmp
pop
cmp
mov
adc
adc
jecxz
iret
arpl
xor
cmp
hlt
mov
test
testl
push
inc
movsl
adc
mov
push
loop
bound
lods
insb
cwtl
hlt
inc
xchg
mov
sbb
cli
and
mov
je
mov
ret
jge
dec
push
stc
push
mov
aam
in
ljmp
adc
ret
addb
aam
xchg
pop
test
sub
popa
add
aam
jmp
das
fdivrs
xor
movsl
aad
mov
out
out
in
xor
mov
pop
dec
push
add
cmp
jp
add
mov
xchg
lea
addr16
lds
outsl
push
push
mov
mov
mov
inc
insb
arpl
sbb
mov
sahf
xchg
icebp
cmpsb
cmc
xchg
pusha
fbld
ja
pushf
repz
in
mov
cmp
sti
or
jo
leave
pop
mov
stos
xor
add
pop
jae
je
icebp
dec
jge
adc
out
outsl
pop
call
test
nop
mov
push
mov
stos
out
push
mov
in
cli
nop
in
dec
pop
mov
hlt
cmpsl
imul
js
mov
lods
incb
ret
lds
push
mov
cli
pop
stos
mov
loopne
xchg
mov
clc
int3
cmp
jmp
mov
mov
or
cmp
idivl
dec
push
xlat
sub
das
sub
xor
in
aam
sub
outsb
fdivrs
xor
mov
mov
shr
push
or
lds
mov
out
or
push
cmpsl
aam
test
adc
test
repz
loopne
mov
cs
push
xchg
add
inc
out
and
rcrl
jno
push
cs
jbe
mov
mov
imul
push
iret
inc
data16
movsl
push
lea
adc
insl
ficomps
xchg
adc
sbb
decb
lds
int
pop
or
call
scas
jmp
fstpt
add
pop
jmp
imul
lret
xor
mov
cs
scas
mov
andl
ret
leave
or
nop
pop
jbe
mov
or
cmc
jno
push
pop
repz
sahf
cmp
pop
cmpl
loopne
jnp
cmpsb
sbb
fisubl
mov
pop
in
add
outsl
xor
scas
dec
pop
jno
pop
ds
inc
daa
pop
nop
sub
popf
pushf
mov
xchg
in
push
push
repnz
or
mov
movb
andb
inc
jg
and
roll
xchg
lret
and
sub
sub
mov
jns
pop
shl
aas
sbb
push
adc
mov
cli
xor
mov
int3
push
arpl
dec
int
pop
mov
movsb
repz
jbe
sbb
jg
add
int
sbb
pop
mov
pop
pusha
lret
in
mov
xchg
mov
or
popl
cwtl
mov
push
mov
test
xor
jl
push
add
nop
stos
sub
mov
mov
test
push
aam
and
test
mov
xor
lods
mov
in
fists
popf
sbb
fs
int3
inc
mov
xor
imul
outsb
std
idivb
lds
fimull
cmp
in
hlt
inc
popa
mov
inc
lcall
mov
xchg
xchg
scas
inc
mov
and
enter
stos
in
iret
dec
xchg
add
mov
stos
ret
cmp
and
jmp
or
repnz
sub
pop
mov
je
loop
jne
mov
fwait
cltd
fcmovnb
add
shlb
in
inc
mov
cmp
lods
cwtl
ret
push
pop
mov
mov
arpl
rcrl
mov
bound
or
xchg
jns
popa
cmc
jl
jb
loopne
shll
and
mov
sbb
ficoms
add
fmull
xchg
and
mov
adc
aas
xor
xchg
inc
xchg
jp
sti
xor
outsb
es
sub
sub
mov
jge
mov
call
inc
pop
add
xchg
mov
and
dec
pop
daa
xchg
aas
fistl
inc
jg
dec
cmp
sbbb
test
in
mov
test
pop
jl
cmp
dec
popf
roll
daa
ss
test
lock
stos
jne
sub
sbb
aad
pusha
xchg
ret
fstpl
mov
fstps
mov
mov
mov
or
jge
enter
inc
mov
cmp
inc
xor
dec
mov
pusha
jo
inc
dec
js
inc
jns
cmp
fsubr
ftst
jb
pop
jmp
jo
rcrl
dec
rcr
sbb
dec
xchg
repnz
sbb
lods
mov
fs
int3
into
xchg
xchg
mov
jns
inc
adc
xor
stos
jae
sub
mov
xchg
cltd
xor
mov
imul
addr16
in
test
dec
jg
pop
decl
xor
and
fidivl
andb
cmpsb
in
fldenv
jg
mov
repz
mov
pop
mov
lahf
cmp
lods
jecxz
xchg
test
lods
lods
lea
aaa
cmp
sub
icebp
insl
and
dec
mov
das
mov
cmp
sqrtps
push
xlat
dec
push
jmp
xor
pop
cli
jp
sbb
pop
sbb
movsb
and
out
mov
fistpll
pop
cmpsb
stos
test
cmpsl
inc
jae
cmpsb
scas
cld
xor
in
jl
add
std
mov
mov
imull
into
fbld
jne
clc
sbb
insb
sahf
movsb
in
mov
fs
stc
jecxz
insb
push
fnstenv
or
into
ljmp
pop
loop
or
mov
inc
dec
xor
jle
loop
push
adc
out
pop
mov
pop
and
jae
push
pop
aas
push
mov
sbb
sub
adc
push
dec
les
or
mov
pushaw
ja
inc
push
lea
push
iret
ds
rcrb
jmp
and
cmc
add
sub
mov
out
cld
rorl
popf
pushf
push
push
add
scas
pop
jne
jo
xorl
jbe
shll
fucom
xchg
cld
repnz
shrb
pusha
dec
jns
mov
inc
sti
and
aad
roll
xchg
jg
and
push
jp
or
js
call
lret
xchg
push
add
sbb
jae
mov
push
scas
pmulhuw
xor
sub
jns
lret
dec
mov
push
add
dec
inc
scas
and
xchg
add
mov
sarb
ss
xchg
jne
in
xor
rcl
jp
and
inc
sub
fnsave
push
aas
scas
inc
mov
jecxz
mov
stos
mov
mov
bound
imul
push
mov
bound
lea
mov
dec
cmpb
and
mov
outsb
mov
out
fs
into
repz
mov
rolb
xchg
nop
aad
ss
adcl
xlat
xchg
insl
cmp
lret
lahf
outsl
and
imul
cmp
push
jge
daa
arpl
shr
ds
dec
adc
pop
aad
sbb
add
mov
sbb
mov
push
dec
mov
xchg
mov
adc
xor
stos
dec
inc
push
sbb
xor
lahf
daa
in
and
sbbl
mov
bound
iret
mull
xchg
pop
mov
fiadds
insl
and
sub
jno
adc
jb
sub
mov
pop
jb
mov
mov
mov
loop
loopne
imul
push
sub
and
jg
scas
inc
adc
push
cmp
sbb
cmp
popa
popa
jns
cs
call
movsb
push
insl
data16
adc
stos
orl
repnz
pop
mov
shlb
nop
push
dec
roll
mov
cmp
test
push
adc
push
scas
pop
push
add
cmp
pop
mov
inc
xchg
sbb
stos
add
sbb
nop
pop
xor
outsb
ds
mov
and
aaa
ljmp
jns
jmp
cmp
or
or
sub
adc
mov
test
sub
movsb
mov
mov
xchg
test
mov
iret
pop
aad
ljmp
push
in
sahf
loop
sub
and
pop
sbb
mov
lret
std
mov
test
sbb
adc
xor
aas
stos
mov
push
pop
cmp
jmp
pop
daa
pop
in
cmp
mov
jg
insl
iret
jmp
mov
add
ret
jb
daa
lea
imul
lods
mov
mov
inc
out
jb
mov
mov
adc
lea
sbb
scas
and
and
mov
mov
sarb
dec
mov
imul
cmpsl
jne
je
mov
imul
dec
sub
test
dec
mov
test
add
ret
call
shll
xor
cmc
mov
mov
loope
adc
push
negb
cld
jae,pn
fiadds
stc
filds
out
jp
aas
ret
pop
or
sub
das
lcall
pop
or
xor
lahf
jbe
mov
mov
jns
mov
stos
ret
imul
cmp
insl
test
xor
in
pop
testb
fwait
push
inc
add
jnp
cmp
add
push
mov
mov
sbbb
push
into
sub
xchg
rcr
ljmp
das
sub
jg
enter
je
pop
cwtl
in
outsb
ficomps
cld
and
mov
mov
push
push
mov
dec
ret
stc
ss
dec
push
fcmove
adc
cld
xchg
mov
fwait
dec
scas
mov
xchg
xchg
sbb
nop
sub
in
jp
mov
sbb
mov
mov
out
incl
inc
mov
mov
testb
int3
repz
into
pop
inc
fiadds
mov
add
aam
sub
out
in
lods
jne
lods
sbb
xchg
cmp
jle
movsl
aaa
sub
in
lret
int
dec
pop
std
dec
outsb
int
push
in
cltd
pushf
pop
sahf
lcall
pop
rol
mov
shrl
dec
mov
mov
pop
xchg
test
jp
sub
and
cmp
lods
fwait
ss
dec
dec
mov
push
jg
push
in
pop
add
popf
repz
jbe
mov
sbb
dec
pop
cmpsb
xor
mov
cwtl
mov
fs
or
mulb
out
lock
inc
or
cmp
pop
xchg
lret
dec
sub
inc
xchg
out
sub
iret
pop
xchg
jns
or
mov
in
mov
imul
out
cmp
xor
xlat
mov
cmp
enter
scas
aas
lds
dec
xchg
and
call
je
in
mov
andb
in
stc
mov
aad
add
mov
mov
dec
adc
test
add
sub
leave
pop
imul
clc
mov
iret
xor
mov
loope
sub
push
mov
add
jb
stos
outsl
test
jo
leave
inc
or
push
sbb
sahf
mov
ljmp
jns
mov
leave
mov
sub
lods
scas
js
shr
inc
mov
sbb
imul
sbb
mov
fcomps
push
jne
shll
inc
icebp
and
aaa
fnstsw
testb
pop
outsb
repnz
mov
int3
adc
mov
mov
aaa
cmpsb
lcall
aas
cmp
ja
shrb
inc
sbb
iret
jo
xor
mov
xchg
add
push
sbb
iret
add
outsl
push
push
xchg
jp
sub
pop
jg
rcrl
aam
insl
outsb
mov
push
pop
cmp
sti
cwtl
movsb
adc
gs
or
lcall
loop
or
orl
addl
mov
loope
stos
or
les
scas
inc
xchg
pop
aam
dec
insb
sub
inc
jl
inc
mov
lock
push
push
ret
fsts
xor
adc
sub
fisubrs
jne
mov
push
in
or
inc
dec
add
inc
jp
dec
sbb
es
les
inc
rol
xchg
pop
jp
jle
jae
xchg
or
xchg
xchg
jge
jbe
out
xor
jb
sbb
sub
cmp
mulb
ja
das
lea
push
xchg
or
or
fmull
fdivl
cmc
mov
inc
jg
sbb
sbb
adc
inc
pusha
icebp
jmp
lcall
pushf
add
in
idivl
adc
fstps
rcl
xchg
and
xor
and
mov
pusha
mov
jmp
outsl
sub
lret
jecxz
mov
rcr
scas
fcmove
loop
stos
xor
out
jge
jp
jg
jnp
sub
loope
out
ret
sub
xchg
roll
xor
cld
imul
insb
inc
cmp
ffreep
jg
cmp
lahf
in
push
jne
frstor
xor
mov
xor
mov
fwait
mov
scas
das
mov
cmp
scas
adc
jg
mov
test
les
jns,pn
fimuls
clc
aad
jbe
xchg
ret
xchg
jns
adc
mov
ficoml
mov
or
enter
ret
xor
idivb
push
arpl
mov
scas
and
out
movsb
jg
scas
xor
loopne
or
fisttpll
fisubrs
ss
inc
jo
daa
sub
fsubrl
adc
mov
mov
xor
dec
test
data16
faddp
loopne
cmp
shr
adc
call
popf
popa
out
repz
ret
addl
pop
dec
pop
mov
in
fldz
stos
cli
nop
test
orb
leave
add
or
pop
xchg
sbb
cmp
sbb
cltd
inc
xor
jnp
adc
fsubs
int
add
ret
fstpt
xchg
lods
xor
mov
xor
ljmp
outsl
sub
arpl
ja
insl
in
cmp
in
js
inc
pushf
add
xchg
mov
add
mov
sbb
in
fistpll
cmpsl
jo
lret
inc
xchg
sub
sbb
mov
out
enter
xorb
jecxz
pop
xchg
int
adc
mov
xor
inc
je
ret
out
dec
jge
inc
push
cltd
jae
lods
mov
dec
jl
and
sarb
shlb
lds
sti
loope
dec
xchg
and
imul
pop
mov
movsl
bound
cli
daa
push
dec
ret
jbe
sti
pop
jae
imul
cmp
icebp
dec
cmpsb
push
fdivrs
iret
popa
xchg
xchg
and
cs
int
xor
mov
popa
xor
out
aas
mov
cmp
lea
add
mov
xchg
sub
addb
cld
test
jo
sbb
lea
sti
jae
and
ss
push
lea
dec
mov
xchg
mov
xor
insb
mov
lret
adc
sub
roll
movsb
popa
mov
aam
jns
and
pop
in
arpl
scas
mov
out
test
mov
lods
inc
test
dec
sub
pusha
mov
dec
push
add
cmp
add
cmp
cmp
hlt
push
negl
lea
pop
insb
add
inc
stos
andl
xchg
dec
mov
pushf
lahf
ret
cmp
mov
mov
jmp
dec
rol
xor
xor
insl
ret
mov
ret
sbb
ljmp
cmp
mov
dec
mov
mov
fucom
mov
adc
dec
add
mov
dec
gs
jne
stos
cltd
or
pop
mov
pop
hlt
lcall
lods
mov
xor
mov
and
aaa
aad
arpl
pop
loopne
mov
rcrl
xor
shlb
mov
hlt
mov
mov
out
jmp
shl
in
and
push
je
mov
ret
loopne
xor
in
mov
jns
dec
pop
and
push
imulb
push
mov
negb
adc
aam
aaa
inc
imul
movsb
test
outsb
or
adc
mov
mov
cmp
sbb
mov
hlt
adc
faddl
jle
rcll
or
jg
and
dec
mov
jns
movsl
jb
cmp
dec
int3
and
aam
push
gs
call
leave
mov
test
sarb
inc
fmuls
mov
popf
cmpsl
lods
jl
sti
pop
pop
aam
insb
xchg
fs
pop
adc
mov
sbb
imul
in
mov
aam
ret
mov
jns
dec
dec
stc
add
mov
cmp
jnp
ret
fistpll
xchg
movd
xchg
std
dec
subb
adc
sub
jno
rcrb
xchg
icebp
out
push
enter
imul
pusha
push
pop
lods
pop
sub
sbb
jb
lods
adc
enter
dec
mov
inc
cmp
xorb
wbinvd
pop
les
adc
ret
rclb
sbb
push
mov
sbb
es
lea
insb
jle
test
sub
and
int
popa
cmp
clc
test
imul
adc
mov
jb
imul
jo
xchg
cld
aam
cmpsl
inc
dec
mov
cli
and
lret
gs
and
sbb
add
or
or
repz
pop
cld
jmp
negl
out
jp
ljmp
fsubrs
fidivs
ja
orb
pop
daa
sub
les
add
aaa
xorl
aas
push
mov
inc
ret
xor
fsubrl
repz
jo
cmp
in
push
and
pop
fldcw
iret
out
xchg
call
repz
mov
lcall
xor
scas
gs
push
ja
xchg
push
notl
enter
pop
cmpl
push
lock
mov
push
push
or
and
or
test
insb
pushl
dec
sub
cld
call
out
cli
in
cmp
sbb
imul
cld
ret
add
movsb
popf
xchg
shr
mov
popa
mov
mov
ljmp
add
fidivs
dec
iret
outsl
sbb
jo
insl
and
sbb
cmp
test
addr16
lods
add
je
out
mov
pusha
cli
adc
sbb
dec
sti
cltd
pop
push
es
bound
loop
mov
je
mov
dec
xor
fidivrs
dec
and
xor
mov
stc
mov
pop
mov
lds
push
xchg
jnp
push
mov
mov
jne
test
mov
ljmp
jbe
ljmp
fimull
push
lods
nop
neg
push
pushf
jp
shrl
jp
clc
in
adc
xchg
cmpsb
push
sbb
mov
inc
dec
and
cmp
imul
dec
in
das
xchg
push
and
mov
push
push
ret
fs
mov
stc
jo
roll
sbbb
jmp
inc
scas
jl
or
mov
popa
cmp
sub
mov
fimuls
dec
gs
into
sub
testb
test
cmp
cltd
add
es
mov
mov
dec
fidivs
xor
loope
sub
sti
popl
inc
push
mov
inc
fldt
xchg
sbb
testb
sub
jbe
dec
mov
stos
sahf
fadd
mov
push
cltd
cli
rorb
call
push
in
cmc
pop
out
test
mov
popa
pop
sbbl
jae
mov
sub
jo
repz
push
mov
mov
and
cwtl
sbb
cmpsb
idivl
ja
lahf
js
cs
cld
jg
push
shlb
jns
or
adc
cmpl
insl
or
lret
xchg
mov
dec
nop
mov
and
and
adc
and
jecxz
scas
mov
push
xchg
clc
in
mov
pop
lea
jmp
adc
mov
std
scas
add
div
pop
scas
sbb
and
int
dec
loopne
push
loopne
xchg
xchg
xor
push
mov
sub
je
psubb
sub
loop
les
aas
pusha
dec
lods
scas
cmp
cmpsb
repz
out
cs
cmpsl
in
sub
mov
xchg
mov
and
add
adc
push
addr16
or
dec
insl
clc
dec
inc
pop
mov
fstpt
insb
cli
mov
add
cld
imul
sbb
jne
mov
shll
aas
xor
jge,pn
in
fadds
sahf
imulb
mov
cmpsl
inc
xor
fldenv
aam
int
adc
inc
clc
or
clc
mov
jecxz
jle
xchg
lods
mov
push
xor
dec
jno
out
fists
dec
mov
loopne
lahf
sub
sub
sub
test
int
jno
aaa
pop
sub
or
xchg
insb
call
pop
sbb
mov
fucomip
or
rorb
mov
mov
testb
add
mov
data16
arpl
repnz
fs
std
sbb
in
xor
sub
or
jo
sub
stos
cmp
mov
lahf
inc
dec
outsl
xchg
ljmp
mov
inc
ret
fcompl
mov
sbb
enter
xchg
sti
xchg
mov
test
or
mull
jns
jnp
mov
jbe
loope
insl
or
ja
xchg
mov
jo
mov
aaa
in
pop
addb
mov
ret
mov
mov
test
sub
jo
push
bound
pop
push
jb
movsb
pushf
inc
sub
fsubs
fbstp
insl
lcall
and
dec
insb
inc
pop
push
sub
xor
add
mov
adc
sbb
mov
js
andb
pop
mov
aaa
mov
pop
hlt
jo
fcoms
sbb
jo
sbb
les
adc
xchg
pushf
int
lods
jae
sbb
scas
sbb
rcrl
mov
ljmp
iret
sbb
je
sub
mov
sbb
xchg
insl
jg
dec
pop
mov
popf
mov
roll
loopne
faddl
rclb
fdiv
outsb
in
add
dec
xor
test
and
pop
insl
test
sahf
mov
icebp
dec
scas
int
in
movsb
out
jecxz,pn
and
movsl
mov
fwait
inc
mov
test
add
pop
shrb
imul
and
ljmp
mov
imul
stc
cmp
out
dec
xor
lods
xor
dec
nop
int
push
mov
xchg
jno
icebp
xchg
repnz
shlb
push
jo
hlt
add
insb
xchg
pop
cs
xor
jne
jae
bound
mov
cmp
adc
test
pop
mov
inc
mov
ds
lock
mov
call
cmp
or
neg
push
push
cli
xor
push
jecxz
loope
inc
push
int
je
push
sbb
shlb
sub
rolb
or
cmp
lret
bound
xchg
imull
inc
ds
ja
sub
stos
xor
xor
icebp
adc
jp
and
iret
fidivrs
xchg
lods
xchg
jo
inc
jl
xor
push
and
dec
test
mov
cmp
out
out
cmp
cwtl
push
add
out
pop
loopne
cmc
mov
pop
mov
dec
out
stos
rcrb
sub
pop
pop
loope
adc
xchg
call
fcmovnb
clc
lds
leave
xchg
dec
pop
pusha
inc
dec
es
fsubl
mov
in
movsl
or
adc
cmp
test
xchg
jnp
ljmp
out
mov
push
arpl
cli
cwtl
mov
xor
jbe
xchg
addr16
adcb
push
movsb
mov
lret
addb
mov
sub
fcos
outsb
mov
jmp
pop
sarb
push
loope
push
xchg
mov
pop
lret
negl
sti
xchg
jne
lahf
add
adc
mov
inc
pop
or
mov
adc
insb
mov
pop
ret
fisttps
ret
jns
jno
mov
jnp
adc
dec
sti
out
mov
add
adc
push
push
loopne
cmpsb
mov
dec
xchg
aas
add
fstl
mov
mov
test
adc
out
jecxz
sbb
rcll
jne
push
cmp
lcall
sub
sbbb
pushf
pop
dec
jbe
cmp
and
inc
ljmp
ss
xor
loop
adc
pop
test
xchg
or
cmp
cmp
das
xor
cltd
adc
xchg
jmp
cmp
ret
test
inc
fdivs
jp
imul
das
mov
pusha
popf
adc
xor
mov
pop
pusha
lahf
shlb
mov
adc
gs
int
mov
mov
mov
lret
adc
push
push
lea
sub
xchg
mov
adc
mov
xor
inc
jl
idivl
push
push
jns
pop
enter
mov
cmp
mov
aas
lock
cmp
sub
adc
cs
fadd
mov
in
testb
je
scas
ja
jnp
lea
jl
sahf
jle
test
jo
js
gs
xor
shll
xchg
sub
pusha
pop
cld
pop
add
sbb
scas
or
mov
ret
dec
es
repz
fldenv
jle
lcall
lcall
or
xchg
lods
xor
mov
lcall
jno
sbb
daa
sarl
cli
xchg
popa
add
mov
push
xchg
push
push
divl
push
cmp
dec
pop
aad
idivl
dec
fisttpll
in
xchg
mov
lods
sub
mov
inc
rclb
js
push
fistpll
testl
je
inc
loopne
and
out
mov
cmp
flds
add
dec
aam
cmp
jns
jno
lock
cmp
jb
and
orb
aad
and
cmc
or
pop
inc
cmp
lahf
bswap
add
jno
int
sbb
xchg
ja
stos
fwait
mov
push
shrb
push
shrb
fsubl
xor
cmp
aaa
arpl
jmp
or
testb
mov
mov
jmp
jl
cmp
iret
in
or
das
out
push
mov
lcall
das
mov
jae
lock
pop
or
fmuls
mov
sbb
aam
mov
rorb
gs
popf
repnz
adc
xor
incl
call
or
sbb
int3
inc
loop
sbb
xchg
enter
push
ja
je
imul
repnz
inc
cltd
aad
dec
mov
or
insb
xchg
mov
lods
jbe
mov
push
dec
pop
out
rorl
clc
fcomp
mov
adc
sahf
adc
ljmp
sub
push
and
bnd
adc
mov
mov
cld
xchg
mov
pusha
dec
hlt
mov
bnd
call
lea
adc
mov
and
lea
push
pop
or
insb
nop
inc
outsl
fwait
xor
stos
cld
loopne
dec
mov
js
movsb
rcl
and
sub
adc
inc
aad
mov
sbb
int3
in
sbb
and
enter
pop
das
aas
int3
data16
jmp
cs
insl
cmpsb
cmc
or
cmpsl
cltd
aas
mov
aam
icebp
jle
fldt
or
pop
popa
movsl
cli
icebp
adc
lret
pop
rcrb
imul
sahf
cltd
mull
stos
jb
loop
shr
stc
xorb
andb
cwtl
pop
mov
mov
icebp
fnstsw
xchg
and
and
lea
jecxz
sbb
cmp
inc
cltd
fldt
xor
and
inc
daa
inc
stos
xchg
sbb
nop
pusha
popa
adc
arpl
sub
lcall
pop
push
mov
inc
fwait
int3
pop
cwtl
stc
shlb
call
jno
das
cmp
gs
movb
push
aad
adc
inc
pop
push
mov
mov
and
fiadds
fstps
mov
inc
out
pop
mov
sbb
inc
jne
mov
adc
scas
cmpb
jmp
pop
cmp
cltd
call
jp
js
movsl
add
pop
xor
stos
aas
icebp
je
mov
fs
xchg
pop
lcall
push
push
inc
test
sbb
cltd
xor
test
shr
dec
dec
pop
test
or
loopne
mov
push
lock
hlt
and
subb
stos
sub
sub
and
ret
inc
shll
lret
movsl
mov
dec
jge
in
pop
xlat
push
lahf
mov
xor
mov
cld
loopne
or
in
loopne
daa
mov
test
ficoms
jmp
dec
xor
and
or
jge
aaa
sub
insb
test
sub
push
nop
pop
xor
mov
push
faddl
ror
pop
pop
shr
mov
pop
jl
shl
sbb
mov
repnz
icebp
mov
dec
xor
or
fsubrl
les
inc
arpl
adc
test
arpl
in
aaa
jbe
xlat
sbb
addr16
dec
xchg
lret
loop
in
push
xchg
movsl
mov
dec
fs
sub
mov
mov
ret
lret
outsb
lcall
and
lcall
stos
jb
mov
push
push
inc
dec
gs
inc
decb
shlb
add
adc
jnp
lock
fidivrs
mov
mov
shrb
push
add
stos
ret
scas
pop
mov
aas
aas
fsubrs
mov
xchg
jmp
xchg
lcall
jg
jno
adc
inc
cmp
pop
cwtl
les
xor
ror
and
pusha
cmp
xchg
in
mov
push
push
mov
cltd
mov
scas
push
stos
aaa
adc
imulb
xchg
xor
scas
xchg
roll
cmp
lds
out
je
mov
jmp
mov
movsl
cmp
mov
mov
jo
js
ds
pop
xchg
fistps
lea
aas
dec
xchg
dec
insb
insl
add
js
and
lcall
add
ja
jp
mov
testl
xor
cmpsb
jno
sub
lahf
push
adcb
out
mov
int
cmc
leave
in
sub
mov
jge
add
and
punpckhdq
out
pusha
adc
test
dec
sti
leave
lcall
mov
xor
cmp
inc
sub
cmp
xor
sub
dec
aas
pop
fwait
mov
fsubrs
push
inc
mov
xchg
test
loope
lods
push
xchg
mov
sahf
daa
lcall
jmp
aam
cmp
ljmp
sbb
xor
xchg
mov
xchg
sbb
xor
mov
xchg
rolb
fidivl
fistpll
xor
ds
shrl
aas
loop
mov
imul
sbb
cltd
pop
jl
push
out
jl
mov
xchg
and
in
lock
sbb
or
push
cld
lds
out
ja
or
ss
test
int
mov
adc
adc
pusha
xor
das
hlt
dec
test
inc
cmp
mov
dec
mov
pop
lret
sub
mov
es
and
std
inc
movsb
dec
aad
aad
pop
push
mov
xchg
inc
ud2
push
std
insl
xchg
std
clc
add
popa
je
stos
cmp
lahf
push
cld
jp
jmp
jl
xor
jp
push
adc
je
dec
ret
int3
leave
stos
push
out
int3
mov
test
push
arpl
mov
xor
andl
ljmp
add
imul
dec
aad
jne
ljmp
lea
data16
cmpsb
addr16
sbb
sbb
pop
icebp
out
into
mov
adc
dec
daa
shrl
sbbl
outsb
mov
push
pop
lret
clc
subl
cltd
test
arpl
idivl
push
jnp
out
lea
nop
cmc
aad
loopne
push
mov
scas
mov
js
stc
push
gs
jmp
addr16
lret
sub
rcll
mov
xchg
imul
jbe
jle
cmp
cmp
and
dec
ds
cmp
sti
mov
fnstcw
loope
stos
cltd
mov
xchg
and
xor
mov
leave
mov
imul
mov
stos
fs
pop
pop
pusha
in
dec
cmp
jg
idiv
imul
xor
pop
add
shr
sbb
cmp
xor
enter
cli
hlt
inc
cwtl
add
dec
repnz
imul
pusha
ds
fdivs
push
cmpsb
lock
jb
das
jmp
leave
imul
fldt
leave
fistpl
pop
aam
scas
stos
sbb
leave
rcl
test
inc
out
dec
cltd
mov
adc
xchg
push
pop
push
inc
scas
mov
and
in
adc
sub
add
in
lret
lcall
xchg
popf
xchg
or
mov
cmpb
and
sti
mov
jl
cmp
add
lds
jg
inc
int3
stos
mov
popf
jge
aam
pop
cmp
fwait
add
daa
clc
inc
sbb
mov
adc
xor
jns
rcl
xchg
leave
xchg
inc
lock
hlt
stos
addl
dec
adc
stos
pop
push
adc
incl
aas
test
push
shr
xor
pop
jne
mov
sub
scas
mov
jp
or
ret
mov
push
mov
in
mov
xchg
jbe
pop
mov
pop
aad
sbb
hlt
jmp
mov
add
inc
inc
outsb
sbb
mov
sub
mov
rcrb
test
add
mov
test
in
push
inc
call
push
and
sbb
test
jae
dec
arpl
roll
sub
sti
lock
jo
dec
gs
imul
pop
stos
inc
outsl
mov
inc
std
in
fcompl
or
sub
dec
in
es
leave
xchg
inc
mov
aaa
push
imul
loop
push
mov
mov
arpl
mov
adc
fs
shlb
and
imulb
and
push
insb
shrl
sbb
ja
js
pop
in
xor
lret
ret
inc
or
and
hlt
fbld
fsubrs
xor
es
pop
cmp
stos
and
ss
mov
dec
xchg
pop
mov
dec
sbb
add
jge
scas
xor
jbe
das
mov
ret
mov
int3
cld
hlt
inc
femms
outsb
mov
inc
cmc
pop
hlt
adc
push
xchg
xlat
loop
test
jb
cmp
or
or
ds
sti
hlt
iret
ret
mov
daa
xor
pusha
add
sahf
or
loopne
arpl
sahf
mov
push
iret
shlb
lret
cld
dec
lahf
js
xor
mov
lods
in
xchg
cmp
pusha
adc
movsl
imul
jle
dec
rcll
call
cli
dec
int
xchg
test
pop
ret
pop
xchg
es
pop
insb
ret
imul
mov
call
xor
and
jge
mov
shlb
rcrb
rolb
and
push
cmp
adcl
enter
lret
sub
fildll
dec
adc
out
push
add
cmp
push
dec
add
mov
pop
dec
ja
je
lds
or
inc
jg
mov
mov
int
movsl
lahf
inc
dec
pop
jb
icebp
insb
jp
pop
push
pop
jecxz
adc
push
jmp
inc
in
adc
add
les
js
and
jbe
data16
aad
cmp
js
push
sbb
xor
add
daa
sbb
mov
jle
lods
dec
dec
push
jnp
xor
pop
xor
inc
not
icebp
stos
cld
les
loop
test
push
mov
jae
mov
aas
jmp
sbb
jne
mov
mov
cmc
push
cmp
loopne
jecxz
fwait
stos
sar
pop
stos
xchg
lret
ret
enter
xchg
inc
sbb
or
fidivl
pop
sbb
fcomps
rolb
jl
lret
jge
mov
jp
mov
idivb
xor
add
int3
ret
or
sub
mov
mov
pusha
cld
mov
popf
rorl
pop
or
adc
fildll
sbb
mov
dec
jg
dec
lods
dec
jns
add
lock
mov
test
fiadds
jne
xor
dec
sbb
aad
inc
lods
push
pop
je
adc
pop
pop
mov
les
dec
lret
dec
daa
lahf
pop
mov
jns
cmp
shrl
scas
arpl
pop
daa
and
stos
pop
xchg
pop
call
out
add
pop
fisubrl
sar
mov
fdivs
aaa
sbb
hlt
pop
mov
cld
push
icebp
in
mov
aam
or
orl
mov
enter
fldt
inc
insl
pop
adc
cmp
pop
outsl
cmpsl
in
mov
jge
cmp
into
inc
pop
lods
pusha
jae
mov
test
inc
inc
in
popf
lock
adc
mov
cmp
int
call
push
sub
test
or
sbb
inc
outsb
jae
xchg
add
and
cld
push
inc
inc
xlat
sti
lfs
shll
jmp
outsb
or
or
jl
sbb
dec
insb
push
push
push
fnstsw
xor
mov
iret
rcll
or
rcrb
in
jg
sub
hlt
and
sub
cs
xchg
int
jp,pt
sbb
fistps
lock
lock
jbe
and
sti
jmp
mov
mov
push
pop
push
mov
loope
mov
add
cmp
lock
sbbl
add
or
lods
mov
bound
mov
inc
pop
cmp
fstpt
dec
inc
xchg
sti
mov
cmp
jae
inc
loope
pop
scas
or
sub
outsb
mov
xor
fwait
xchg
jg
sahf
jle
popa
sbb
lea
dec
or
pushl
rorb
mov
push
cmpsl
test
cmp
daa
nop
mov
xchg
rcrb
inc
dec
mov
cli
push
ret
adc
adc
inc
fistpl
dec
cmp
insb
pop
es
mov
outsb
mov
push
or
test
test
cmpb
cltd
jo
daa
adc
mov
repnz
jmp
or
mov
out
xchg
xchg
inc
repnz
js
test
add
flds
xor
pop
push
ss
xchg
cmp
and
js
mov
insb
sub
inc
push
add
cmovns
jo
lods
dec
std
push
jp
jp
jns
rcrl
sbb
inc
mov
push
or
dec
int3
arpl
sbb
bnd
pop
scas
and
fnstenv
call
add
es
loopne
stos
jl
xor
das
jle
mov
cld
repnz
lret
push
sti
jmp
mov
scas
jmp
jge
pop
dec
pop
lret
fidivrs
in
in
push
inc
xor
add
mov
jecxz
xor
jp
call
push
outsb
repnz
cltd
jle
out
repnz
and
push
xadd
add
je
loope
int
adc
sbb
xchg
and
add
sub
negl
scas
jne
aad
and
adc
jle
loope
icebp
inc
fnstcw
push
mov
push
add
adc
cmp
in
mov
dec
pop
push
mov
daa
jmp
sbb
or
jae
js
jo
mov
ja
ss
mov
sbb
into
lods
push
clc
jmp
push
hlt
rcrb
mov
cmc
dec
pop
cmp
loopne
mov
inc
nop
xor
movsb
daa
ds
rorb
fisubs
sar
stc
in
insb
mov
pop
lret
xchg
rcrl
adc
mov
jo
mov
idiv
add
xchg
sbb
fs
push
push
inc
js
jnp
or
and
ds
daa
mov
inc
push
decl
cmp
sbb
es
jbe
andl
pop
icebp
bsf
xor
or
outsb
sbb
aaa
add
pop
cmp
adcb
fsubl
sti
sbb
sub
ja
mov
jmp
cmp
xorl
sub
xchg
out
aad
gs
sub
mov
or
xchg
ret
repz
jge
lock
mov
and
mov
in
loopne
ljmp
lods
dec
test
pop
lret
lret
test
pop
cs
inc
js
fimull
mov
and
xor
adc
mulb
mov
sbb
lods
imul
mov
int3
lret
test
or
in
and
mov
sbb
sti
ljmp
adc
xor
mov
sbb
out
add
dec
movsl
sti
int
lret
aam
pop
or
dec
nop
sbb
dec
cmpsl
int
cs
mov
lret
scas
cmp
addb
negl
stos
fsts
lock
hlt
popa
or
scas
push
outsl
repz
ret
lret
cmp
and
push
mov
push
and
push
setl
jmp
or
mov
pop
mov
add
mov
repnz
outsb
out
dec
in
in
sti
sub
bnd
pushf
in
imul
and
xchg
shrl
and
inc
jns
js
rcrb
dec
push
imull
sub
in
xor
outsl
in
test
cmpb
hlt
inc
cs
sub
jne
mov
jbe
pop
xor
mov
test
stc
aaa
sbb
or
add
out
rcrl
push
cmp
xchg
mov
and
pop
push
mov
loope
or
call
mov
movsb
fists
orl
ja
frstor
inc
clc
stos
pop
mov
gs
callw
mov
fsubrs
jmp
jns
jge
pop
lods
or
inc
icebp
sub
out
hlt
sti
bound
cli
ljmp
int3
movsb
lret
jp
ret
sub
mov
adc
nop
inc
adc
ret
movsl
call
mov
test
push
mov
loope
inc
nop
inc
pop
int
mov
and
out
fs
adc
out
cmovo
addr16
lea
add
enter
insl
xchg
lahf
scas
stos
outsl
xor
nop
ds
loop
cwtl
jne
mov
lea
rcrb
sarb
bound
inc
sub
mov
in
mov
pop
mov
push
push
in
and
and
int3
dec
sub
aas
push
cmp
pusha
jns
inc
add
into
pop
in
xor
adc
into
int3
xor
and
adc
cmpsl
fdivs
in
leave
jle
jnp
xchg
xchg
jno
cmpsl
mov
fst
clc
sti
mov
sarl
mov
mov
xor
or
mov
sub
sbb
jle
push
jnp
mov
jne
xor
cltd
jbe
mov
ljmp
stos
cltd
test
adc
or
sahf
cli
cmc
divb
pop
mov
hlt
pop
mov
movsl
xor
jmp
test
jno
lods
int
lahf
xchg
xlat
out
pop
dec
sbb
cld
jmp
jp
aaa
std
xor
iret
mov
outsl
or
bound
cmp
and
scas
sub
fsub
mov
hlt
icebp
stos
mov
push
gs
in
lock
sub
fadds
sbb
adc
pop
icebp
jbe
dec
out
push
jbe
xchg
mov
and
push
xor
out
inc
dec
adc
push
mov
mov
adc
test
sbb
xchg
stc
push
and
stc
test
cmp
aam
fsts
push
mov
push
lds
mov
and
mov
sub
popa
stos
pop
dec
xlat
aas
cmc
add
lea
cmp
push
push
in
sub
std
xor
add
jae
jg,pn
cld
xor
xchg
das
fwait
cltd
movsb
adc
dec
loopne
add
aas
repz
mov
test
ds
dec
xor
lahf
pop
andb
sbb
out
roll
sbb
jmp
mov
sub
sub
sahf
or
jne
sti
jbe
push
ds
js
xchg
addr16
pop
stos
jnp
fcompl
inc
mov
dec
sarl
or
notb
pushf
js
cmp
sahf
mov
push
mov
iret
jmp
ficomps
pop
jae
int3
aad
jmp
and
sub
and
jle,pt
jecxz
cwtl
clc
push
mov
insl
jl
gs
add
rorl
jg
pop
fsubrs
lock
iret
or
pop
or
xor
test
loop
inc
lret
xchg
loope
ljmp
push
addr16
dec
les
imul
sub
lods
dec
cmp
scas
inc
leave
stos
mulb
jne
adc
shll
mov
inc
and
sbb
loop
add
adc
jl
cmp
or
pop
jae
sub
mov
inc
jle
mov
jb
add
mov
aas
jae
mov
push
xor
leave
add
dec
call
stos
mov
jmp
xchg
add
clc
mov
add
mov
mov
adc
add
adc
mov
sub
add
popf
mov
pop
fdivs
mov
dec
ss
sub
push
jns
xchg
ret
cltd
loope
dec
int
mov
je
sbb
add
fiadds
mov
shll
xor
loopne
mov
popf
push
xor
inc
shl
cmp
or
sbb
iret
rorl
call
sub
add
adc
jge
ret
xchg
movsb
mov
sbb
mov
daa
cmpsl
xlat
dec
xchg
lock
adc
in
push
test
inc
ss
loop
add
dec
add
stc
jae
stos
dec
loop
push
stos
pushf
ret
adc
push
mov
mov
jae
test
sub
sub
insb
jle
sub
jne
cwtl
sbb
add
cld
imul
ds
sbb
je
and
fcmovnu
scas
es
pushf
jge
cmp
negl
popa
jmp
or
mov
fistl
jae
inc
cmp
push
mov
repnz
data16
lods
icebp
test
fs
adc
ficomps
jmp
add
stc
dec
leave
add
push
aas
hlt
aam
cld
js
sar
je
cli
cmc
les
movsb
adc
mov
leave
shlb
ret
fprem
out
ret
sbb
or
or
stc
jp
cmp
adc
fidivl
pop
enter
jno
xor
fsubs
cwtl
sbb
rolb
cs
lock
dec
inc
mov
sahf
repnz
shlb
push
push
or
pop
ss
pop
inc
stc
ret
mov
xchg
add
les
fmull
jns
jns
mov
mov
jl
mov
jno
and
imul
xor
push
int3
shlb
or
fisubl
inc
jmp
xor
jb
scas
dec
stos
mov
data16
xor
sub
push
xor
push
outsl
jns
scas
mov
out
aam
and
lret
inc
inc
pushf
jae
daa
jge
loop
inc
mov
pop
sub
stc
or
cmp
sbb
lret
pop
jae
icebp
xchg
fbld
int
imul
shl
lods
lcall
test
sbb
lcall
adc
jl
dec
movsb
gs
cmp
push
jns
pop
cs
mov
sbb
lock
and
adc
add
inc
mov
insl
cld
js
adc
xchg
loop
jno
ss
push
repnz
rorl
out
push
adc
mov
pop
push
push
push
nop
jl
pop
push
mov
test
jp
in
sub
bound
adc
insl
dec
andl
lret
sbb
das
sbb
sbb
sub
add
push
rorl
movsb
imulb
lds
aam
jo
test
mov
lds
cmc
inc
sub
jae
das
xor
or
rcrb
dec
sub
push
sub
mov
sbb
mov
add
cli
aaa
jl
mov
mov
pushf
inc
dec
lcall
mov
fdivrl
cmovg
mov
movsl
popa
jbe
xor
xor
sbb
loope,pt
sbb
pop
lahf
pusha
cmpsl
nop
pop
mov
cmp
fs
inc
call
cmp
data16
pop
cwtl
add
sbb
push
pop
add
in
stos
pushf
movlps
in
data16
cmp
test
test
lods
stos
push
in
xchg
mov
inc
adc
ret
cwtl
xchg
jp
sarb
roll
sub
push
leave
xchg
idivb
and
push
mov
and
fcmove
dec
sbb
imul
mov
pop
rclb
fsub
test
into
repnz
mov
add
fistpll
movsl
iret
fs
scas
or
add
push
adc
dec
xchg
testb
pop
aaa
pop
iret
jecxz
pusha
inc
jecxz
cmp
repz
jne
adc
lds
sbb
pop
scas
pop
lods
push
pop
enter
mov
pop
inc
js
sbb
jmp
jne
add
inc
cmpsb
add
gs
add
cmp
jmp
pusha
aaa
pop
loop
push
scas
addr16
mov
pop
xor
jp
and
push
jnp
cltd
or
inc
xchg
sbb
leave
push
adc
lahf
push
ss
in
popa
inc
rorb
push
loopne
mov
mov
cmpl
and
scas
lods
cwtl
lock
cmpsb
or
dec
mov
mov
sbbb
inc
cmp
mov
jge
cmp
xchg
aad
fldenv
loope
pushf
and
addr16
or
fwait
aad
mov
movsl
in
mov
xchg
push
jne
adc
rcrl
pop
sbb
xor
je
mov
jl
xchg
cmp
ret
xorl
jge
nop
out
sub
sub
in
pop
inc
xlat
jb
or
mov
scas
inc
inc
pop
xor
cmc
xchg
dec
mov
sbb
lock
ljmp
hlt
repz
daa
inc
ror
adcl
lcall
sub
adc
daa
daa
mov
call
data16
or
in
std
insb
iret
push
mov
test
pop
fidivrs
js
or
lods
pop
imul
sbb
mov
int
push
mov
adc
inc
repnz
cli
fldenv
inc
jge
imul
rol
je
pop
mov
mov
sbb
cmp
loopne
sub
mov
test
loope
dec
stos
out
xor
repz
aam
xchg
filds
int
inc
sbb
insb
dec
and
stos
cmpsb
shll
xor
stos
cmp
dec
push
push
aad
pop
out
add
ds
xor
shr
andb
sub
fstpt
jo
or
lods
mov
and
fldcw
jno
pop
ret
and
idiv
inc
ret
jae
or
cmpsl
dec
sub
xlat
rorl
jmp
sub
xchg
in
jp
jb
into
or
addr16
mov
popa
inc
iret
jns
cmp
mov
icebp
cmc
push
scas
jge
sbb
pushf
or
inc
jp
dec
aas
je
clc
cli
cwtl
and
call
dec
or
pop
arpl
or
bound
loopne
int
and
xor
sub
mov
lock
movsb
test
xor
pop
aaa
adcb
int3
es
push
sub
and
push
dec
xor
cmp
lret
les
inc
scas
cmpsl
fldt
sbb
in
or
out
pop
push
dec
jns
sub
mov
inc
xchg
pop
mov
lcall
push
mov
xlat
xor
adc
outsl
lret
daa
out
nop
cmp
in
and
aaa
cmp
rolb
fwait
std
dec
jl
jae
pusha
jns
pushf
insl
add
ds
sub
test
lea
mov
fs
fdivl
ljmp
xor
push
and
sahf
mov
std
cwtl
das
fwait
xchg
sub
mov
addr16
mov
mov
in
add
sbb
fbstp
jbe
iret
mov
test
jmp
and
cmpsb
lods
lock
jmp
mov
add
stc
xor
faddl
mov
adc
xchg
dec
mov
add
lret
mov
aam
fcom
shrl
mov
push
in
add
jnp
addr16
in
inc
adc
ljmp
andl
xor
je
xlat
add
roll
jne
jecxz
inc
sti
aaa
scas
pop
testb
jne
mov
mov
push
mov
mov
sahf
jl
pusha
adc
mov
jp
jns
ds
shl
inc
and
movsl
mov
mov
mov
int3
jae
mov
sti
sbbl
fsubr
addr16
adc
stos
lret
out
loopne
scas
into
rcrb
es
inc
insb
std
push
dec
lods
fistl
or
popa
sbb
xor
push
sbb
add
sbb
bound
sbb
push
iret
nop
cmp
cld
out
or
sahf
and
gs
inc
mov
jnp
add
mov
mov
dec
fxtract
push
je
ret
xor
cmp
add
repnz
movsl
es
imul
and
mov
rclb
fldl
push
jle
dec
xchg
mov
loop
jecxz
ret
frstor
ljmp
pop
sub
sahf
daa
mov
sti
ljmp
pop
sbb
xor
mov
push
sub
sub
xor
cmpsl
cmpsb
jecxz
add
shlb
cs
and
dec
test
add
cmp
inc
enter
and
shll
pop
in
pop
sti
shll
push
mov
je
and
xchg
inc
mov
ret
xchg
or
gs
hlt
stos
jnp
xor
aam
mov
pop
ret
xlat
xchg
push
jb
pop
test
ds
jmp
dec
or
or
jl
stos
dec
cwtl
mov
jle
insl
gs
outsb
out
dec
rcll
aaa
es
loopne
adc
adc
in
pop
xchg
inc
jne
pop
les
add
jle
sub
sub
xchg
lock
call
loop
pushf
inc
and
lods
inc
lea
outsl
scas
xchg
int3
mov
es
sbbl
icebp
cmp
dec
xor
adc
jmp
lea
adcb
sub
cmp
jno
lods
cwtl
repnz
ljmp
xchg
mov
mov
clc
das
adc
xchg
inc
into
mov
pop
mov
push
pop
aad
mov
das
and
and
and
mov
pop
dec
pop
into
dec
sub
push
cld
push
dec
sbb
fsts
into
rcl
xor
cmp
lock
cwtl
test
fimull
sub
xchg
js
daa
ficoms
ja
sahf
cld
add
aas
pop
mov
movw
push
xor
call
dec
bound
mov
scas
xlat
add
fisttpll
test
add
dec
add
pusha
ljmp
outsb
cmc
mov
xchg
adc
pop
int3
dec
pop
dec
test
int3
fcmovnu
or
pop
bound
xor
mov
adc
inc
fistps
lahf
iret
out
lock
mov
leave
pop
sbb
aaa
dec
inc
xlat
movaps
dec
clc
mov
js
stos
xor
sbbl
xor
inc
fdiv
and
repnz
xchg
push
sub
inc
lods
mov
fcmovnbe
push
pop
xor
enter
out
pop
fst
pushf
repnz
int3
mov
sbb
sbb
fldenv
and
pop
mov
sbb
mov
ficomps
pop
test
mov
ret
adcb
out
test
std
mov
ja
add
sub
test
jecxz
inc
pop
ret
loop
xchg
sbb
inc
push
cmc
aas
and
add
or
xchg
sub
sar
push
stos
jne
int
mov
fs
xlat
cmp
insl
mov
movsl
jmp
daa
xlat
lods
sbb
sub
jecxz
fdivr
xchg
or
int
movsb
jge
mov
in
jne
clc
mov
push
ljmp
pop
push
xchg
fs
xor
data16
fwait
loop
pop
cmp
call
push
sarb
pop
mov
jno
repnz
dec
dec
mov
sub
insl
lcall
xchg
xchg
mov
add
shrl
sub
out
xlat
mov
into
cmpsb
jae
loopne
xor
mov
out
stos
mov
xor
jp
outsl
add
jo
hlt
repnz
xchg
mov
cmp
mov
mov
inc
aam
pop
addr16
icebp
test
mov
xchg
pop
shrd
or
and
mov
loopne
idiv
pusha
int
out
cwtl
sub
xchg
ret
shlb
aas
es
iret
call
nop
enter
sub
adc
push
pop
fisubl
add
ljmp
test
mov
das
or
ss
dec
sub
cmp
mov
rcrl
dec
testb
outsb
imul
or
or
mov
and
lock
sahf
dec
or
xchg
xchg
aam
out
pop
dec
ljmp
cmc
test
or
addr16
mov
shrl
shll
xchg
nop
popf
aad
cmpsb
jnp
inc
push
es
push
cli
leave
jp
dec
aad
jb
stos
inc
sub
cmp
popa
negb
aas
jmp
iret
pop
or
jl
push
push
int3
in
ja
push
hlt
into
dec
lock
mov
out
je
aaa
cmp
lret
ja
lods
inc
jl
pop
out
xor
insb
push
call
xchg
pop
add
or
in
popf
adc
loop
jge
pop
lods
jnp
mov
dec
subb
xor
pop
mov
insl
xchg
ljmp
jp
sbb
pop
pop
xchg
jne
test
dec
cmpsl
in
push
push
lret
pop
lret
gs
test
nop
fwait
sahf
outsl
loopne
loopne
arpl
sarb
pop
mov
icebp
daa
dec
fldenv
add
fs
sub
pop
in
jno
push
pop
andb
inc
dec
mov
in
adc
call
aaa
ljmp
xchg
pop
inc
or
imul
mov
scas
or
mov
add
test
xchg
insl
or
loope
jno
imul
pop
cwtl
sbb
sbb
scas
repz
js
pop
mov
test
adc
adc
cmpl
push
inc
fisttpl
and
push
in
in
or
nop
les
jno
and
push
faddl
inc
cli
sbb
incl
xor
divb
popa
mov
imul
jno
rcll
fsubrs
inc
or
push
setne
push
mov
add
cmp
ret
dec
loope
xor
repnz
int
js
in
gs
cwtl
fnstenv
jo
mov
out
ficoml
stos
sub
pushf
mov
and
mov
ljmp
cmp
aam
sub
jl
push
adc
lds
pusha
data16
ljmp
inc
sub
icebp
popf
lods
and
dec
in
mov
ret
arpl
dec
gs
mov
cmpsb
sbb
adc
push
sahf
sarb
mov
divl
cmp
mov
shlb
pushl
sahf
fwait
sbb
xor
mov
imull
das
jbe
cwtl
rclb
notl
loope
mov
adc
into
xor
pop
ja
add
lds
sti
mov
imul
mov
jnp
fdivs
or
pop
inc
aaa
mov
lea
add
stos
mov
lret
fbstp
xlat
sbb
fcoml
fildl
into
xor
lret
mov
mov
inc
jne
push
xchg
lret
popf
pop
outsl
jb
inc
inc
mov
push
sub
stos
sub
adc
test
rcrl
and
aam
fmuls
stc
fstpl
pop
out
jle
mov
pop
cmp
popa
jbe
out
sub
add
xchg
loope
push
cmp
push
mov
and
in
sarb
jp
or
mov
mov
fimuls
or
sbb
jg
xchg
push
mov
neg
sbb
popf
imul
mov
sub
adc
xchg
jnp
insb
pop
lret
and
dec
adc
inc
or
arpl
xorl
push
push
lret
pop
das
mov
xchg
or
push
fsubrs
add
in
js
mov
cmp
dec
mov
adc
add
cltd
mov
ss
rcrl
xchg
icebp
cmp
into
inc
mov
sarb
push
add
sbb
scas
movsl
add
pusha
fbstp
insb
cmp
or
pop
add
dec
rcr
es
mov
or
inc
pop
adc
js
dec
adc
sbb
das
mov
sbbl
and
in
mov
loope
push
loop
and
mov
jb
in
push
mov
and
xor
lahf
movsb
cwtl
stos
repnz
jl
loope
inc
hlt
int
jns
fstps
xchg
inc
cmpsl
inc
cli
insb
mov
xor
cmp
inc
lods
mov
push
shl
xor
dec
fmull
lret
mov
and
test
push
sbb
ss
ret
in
sub
loope
cmp
jle
fistpll
subl
sub
push
iret
xchg
lret
lahf
mov
mov
mov
push
add
je
or
fcmovnbe
addr16
call
sbb
xchg
lods
inc
mov
lock
add
lcall
xor
jl
test
adc
iret
scas
out
lahf
jne
mov
in
mov
loop
imul
xlat
test
sub
roll
dec
rcrb
mov
leave
jo
pop
fstpl
push
mov
sub
mov
jno
dec
dec
mov
lcall
lret
std
push
cld
jns
insl
daa
inc
adc
mov
cmpsb
cmpsb
aad
dec
test
std
mov
aad
mov
push
dec
push
test
lret
cs
adc
arpl
push
xor
mov
xchg
orl
xchg
pop
sub
fsubrp
iret
cmp
add
mov
xlat
sub
mov
jae
cmp
mov
insb
push
add
mov
cwtl
xor
in
sbb
jl
push
cmp
negl
jmp
call
movsl
out
fists
push
pop
inc
mov
and
in
xchg
lds
lock
inc
movsl
xor
mov
push
sub
test
push
jo
jns
mov
and
jne
jge
sahf
repz
jb
inc
rcll
mov
into
mov
inc
xchg
movsl
mov
cmp
enter
ret
cmpsl
push
fwait
xchg
xchg
cmp
mov
lock
aam
add
dec
lods
or
insl
out
cltd
inc
divl
push
in
and
and
jne
push
mov
cmp
cmp
fimull
pop
push
mov
add
imul
cmp
lds
rol
in
scas
stos
xchg
jae
pop
mov
js
jmp
popf
mov
xchg
lahf
mov
cld
inc
fistps
js
out
pop
mov
inc
clc
inc
mov
xchg
push
aam
je
das
lea
arpl
dec
lahf
nop
sbb
aas
and
sbb
cld
loop
push
add
lcall
dec
push
jno
xor
or
xchg
xchg
into
loope
cwtl
dec
sti
mov
int3
sub
xor
add
inc
lahf
test
in
mov
lea
lock
or
pop
xor
cmp
cmc
rorl
std
jne
test
loop
hlt
js
xchg
or
add
arpl
mov
dec
cmpsb
inc
imul
jns
mov
in
cmp
rclb
xor
push
addr16
mov
outsl
out
ds
push
add
imul
orl
jmp
jg
in
push
pop
jmp
inc
cmp
push
shlb
sub
xchg
push
inc
mov
adc
imul
out
ret
mov
push
mov
pop
xchg
test
jns
out
and
sub
pushf
fnsetpm(287
sbb
repz
push
mov
push
push
mov
mov
cmc
mov
mov
test
aaa
xchg
or
pop
mov
adc
cmp
dec
stc
push
add
pop
mov
lock
int3
mov
jp
dec
add
xor
dec
push
andnps
adc
xchg
push
pop
fimuls
arpl
ret
adc
test
adc
lods
pushf
add
pushf
xlat
rorl
and
repnz
popa
dec
cld
adc
push
leave
out
imul
repz
sbb
out
pushf
adcl
ja
notl
sbb
pop
push
adc
inc
frstor
dec
mov
insl
movsl
cmp
orl
push
dec
mov
cmp
mov
fisubrs
mov
or
fs
xor
sbb
insb
sbb
dec
js
loopne
lods
jo
sub
aad
dec
pushf
mov
dec
pop
pop
xor
add
cmp
dec
jnp
push
xchg
mov
les
dec
mov
nop
mov
sti
add
and
test
repz
dec
xchg
aaa
and
mov
mov
inc
cmp
jbe
nop
add
stos
shll
in
int3
aad
inc
cmp
dec
int3
and
stc
les
fdivl
xchg
cmp
das
mov
mov
shr
mov
mov
xlat
aam
insb
jle
push
loope
fucomi
add
loopne
inc
pop
pop
sub
push
sbb
ret
push
jle
stos
aam
pop
sbb
and
gs
ret
ret
mov
into
cmp
dec
sub
push
pop
test
xchg
imul
dec
les
push
jnp
mov
pop
inc
cli
jns
jbe
faddl
out
adc
sbb
idivl
lret
add
push
mov
xor
out
pop
jp
insb
daa
lods
sub
sub
sbb
pop
insb
scas
xorl
fdivrs
arpl
shll
or
test
arpl
push
ljmp
clc
outsb
push
in
push
js
pop
and
jnp
inc
jle
dec
inc
in
sahf
cld
and
aad
xor
mov
push
mov
dec
jmp
out
mov
pop
push
hlt
sbb
out
pop
repz
or
shlb
call
out
mov
in
arpl
movsb
jbe
adc
jmp
push
into
pop
outsb
inc
sbbl
push
pop
data16
cltd
repz
push
lahf
sub
ds
jb
mov
pop
xchg
lods
push
push
jp
es
xchg
mov
into
xchg
xchg
icebp
insl
test
xchg
fisttpll
int3
xchg
outsl
vorps
sub
es
jecxz
ja
or
ds
push
mov
mov
push
xor
or
je
lahf
imul
repz
pop
jns
mov
cmp
cmp
pushf
nop
push
push
push
pop
fdivrs
lods
push
jnp
lcall
sub
xlat
insl
cmp
orb
pop
adc
cmp
loop
dec
fldcw
inc
loope
xchg
lock
inc
mov
inc
pop
aaa
ljmp
mov
adc
loope
push
push
cmc
mov
jb
pop
fsubs
popf
in
lret
xchg
sbb
or
mov
mov
and
roll
shlb
dec
dec
jno
adc
xor
in
lcall
ljmp
rcrl
popa
pop
sbb
add
cs
xorl
fsts
inc
cmp
pop
or
pop
scas
add
push
cltd
xchg
mov
add
out
mov
pushw
sti
and
enter
push
fildl
rcrl
push
jg
test
jne
mov
test
roll
and
outsb
rcrl
push
cmp
pop
loope
ss
mov
or
mov
jns
xchg
xor
cltd
lcall
jno
xor
jge
xchg
sti
fwait
sbb
mov
inc
sti
cmp
xchg
gs
jp
jne
lcall
push
sahf
inc
sub
imul
cltd
add
mov
xchg
int
aaa
cmpsl
sub
inc
testl
adc
movsl
aad
loop
xchg
andl
mov
xchg
pusha
cwtl
xor
icebp
and
testb
inc
mov
adc
dec
inc
mov
sbb
shr
mov
imul
sbb
inc
cmpsl
pusha
or
push
xchg
lcall
in
stos
stos
pop
lock
out
hlt
pop
mov
fadd
dec
das
xchg
xchg
mov
nop
bound
jle
inc
xchg
repnz
xchg
addr16
mov
or
dec
pop
xor
cmp
cmp
in
lods
jae
bound
cltd
fisttpl
ljmp
outsb
rcll
xor
outsl
jns
mov
aad
in
or
sub
shrb
dec
ss
insb
pop
pop
hlt
xor
xor
sbb
mov
sub
and
incl
jle
ljmp
dec
int3
sti
push
jnp
jge
sub
hlt
pop
test
sub
adc
sub
out
int3
enter
out
dec
sub
test
push
repnz
sti
js
xlat
xchg
cmc
push
inc
fiadds
nop
push
dec
inc
jge
mov
pop
adc
jnp
fldt
adc
mov
imul
lret
les
sub
addr16
sub
pop
in
mov
ret
divl
inc
sbb
out
int
scas
sub
je
add
popa
adc
not
or
fsubs
lods
addr16
add
iret
rorb
aam
add
and
std
iret
jp
mov
mov
shrb
jmp
and
cmp
dec
ljmp
add
repnz
xchg
sbb
dec
inc
mov
imul
mov
fwait
out
scas
jp
pop
roll
lock
or
pop
xor
out
jnp
add
mov
push
pop
stc
add
fdiv
aad
loop
mov
sbb
jne
stos
mov
jne
add
sbb
dec
repz
cli
xor
mov
push
sub
ja
imul
mov
lods
aaa
add
inc
sbb
loope
adc
fnstenv
add
mov
mov
cmpsb
addr16
jb
lods
and
or
repz
mov
jp
stos
sub
cwtl
xlat
in
mov
xchg
lea
lret
jbe
push
arpl
popf
sub
lahf
pop
dec
and
aad
mov
jno
dec
pusha
test
dec
js
loope
inc
cld
dec
add
call
mov
cld
sarl
int
and
shrl
lret
push
addr16
loop
sbb
sbb
daa
cld
fs
mov
fwait
pop
pop
xor
call
gs
jbe
sbb
shrl
in
pop
add
es
sub
and
not
insb
addb
add
xchg
popa
bound
popf
in
lahf
sbb
out
mov
icebp
stc
lret
je
scas
shld
add
mov
cmc
lock
int
stc
cmp
xchg
idiv
or
fwait
nop
dec
fstpl
ret
or
fildll
sbb
jo
test
stos
in
sbb
std
rolb
cmp
dec
adc
and
cmp
mov
pop
fisubs
pop
ret
inc
jmp
pop
call
mov
not
gs
inc
dec
rcrb
sbb
imul
ret
cmp
test
mov
popa
es
sub
push
dec
aam
lcall
jbe
xor
inc
gs
cmp
andb
adc
fimuls
jecxz
ja
fstpt
aad
jns
cmp
adc
mov
push
test
cli
leave
test
outsl
xchg
jbe
mov
xor
push
fcmovbe
pop
cmova
add
lock
mov
clc
lods
pop
ds
ljmp
mov
loope
ljmp
fs
jbe
push
adc
cmp
lods
jecxz
xchg
test
xor
xor
roll
test
cmp
cmp
mov
std
pop
cli
jne
push
push
xchg
int
and
jae
mov
push
das
xchg
icebp
mov
sbb
fs
adc
popa
jp
xor
push
push
iret
fdivl
mov
inc
psrld
push
lea
dec
rclb
and
and
add
dec
loopne
fdivr
sti
loopne
cmp
dec
inc
ret
insb
jmp
lahf
insl
pop
xor
push
scas
dec
loop
push
ds
jae
incb
fcompl
sbb
outsb
jp
inc
jge
pushf
lds
xchg
or
imul
sub
dec
push
sbb
jo
test
insl
icebp
popf
mov
jbe
pop
dec
xor
xorl
sub
out
gs
dec
stos
sarl
mov
lods
cmpb
inc
sarl
rolb
xor
ret
mov
in
int
clc
mov
mov
lcall
add
out
pop
cmp
push
jo
fldl
sub
adc
push
jecxz
xorl
or
xchg
insl
sub
sbb
aas
pop
sarb
jge
inc
into
fimull
jle
bound
repz
push
ja
lock
in
mov
cmpsl
stos
repnz
mov
std
in
aaa
mov
fmull
pop
xchg
cmp
adc
dec
and
das
insl
fnstcw
or
push
or
pushf
push
movsl
push
and
les
or
mov
clc
insb
mov
xor
cld
lret
pusha
pusha
mov
bound
jns
insb
icebp
cmpsb
repnz
insb
push
idivl
pusha
pop
loope
sub
xlat
aam
jecxz
inc
test
cld
fyl2x
adc
mov
aaa
cltd
mov
ja
ds
out
or
aam
ljmp
int3
mov
lods
aam
pop
inc
dec
insb
cs
pushf
popa
pop
das
cli
pop
imul
stos
sub
bound
test
mov
mov
inc
pop
lods
pop
or
ja
stos
sub
xor
add
jnp
sub
mov
call
std
je
in
xchg
aas
repnz
jge
aad
adc
dec
mov
into
insl
push
mov
aad
dec
stos
pusha
xlat
call
in
call
in
add
or
sub
andb
fwait
dec
loopne
into
xlat
fnsave
sbb
xor
push
movsb
xchg
inc
push
mov
xor
mov
mov
rcrl
xor
sti
inc
xor
das
xor
sti
xlat
inc
or
or
push
stos
lock
testb
inc
cmp
or
fnstcw
cmp
fadd
and
mov
push
jecxz
pop
pop
fnsave
and
mov
pop
jb
xor
gs
mov
xchg
pop
repnz
ret
inc
pop
jge
and
xchg
insl
sbb
cltd
repnz
add
jbe
mov
popf
stos
push
hlt
les
xchg
add
adc
test
aaa
mov
mov
fbstp
push
call
sbb
sarl
cld
dec
out
mov
inc
enter
mov
mov
push
cmp
xchg
push
cmpsl
cmp
jp
fdiv
add
frstor
push
pop
and
les
mov
dec
adc
int
aad
lret
std
jg
cmp
sbb
ret
mov
pop
in
fcmovnu
mov
aad
add
stos
aad
and
adc
pop
sub
mov
xchg
inc
dec
cmpsb
shrl
fistl
imul
jmp
loop
lods
mov
aaa
and
xchg
lock
and
sub
mov
dec
cmp
jecxz
leave
ja
mov
lock
adc
icebp
sahf
push
mov
mov
push
mov
mov
lret
push
das
xchg
jo
in
pop
xchg
dec
inc
lahf
push
and
jb
das
inc
leave
xor
in
sbb
mov
adc
sti
lret
mov
cmp
fdivr
or
adc
into
ret
hlt
cmc
jmp
jge
xor
xor
dec
add
push
es
lods
pop
push
je
sbb
leave
sbb
push
jp
iret
out
xorb
push
addr16
stos
insl
adc
push
flds
xor
mov
dec
xchg
movsb
push
jno
cmp
ja
ret
jbe
mov
cmpsb
add
sarl
xor
in
je
xchg
mov
lea
pop
push
pop
push
add
mov
cmpsb
push
mov
test
push
mov
add
in
outsb
adc
out
loope
mov
or
xchg
dec
ret
adc
jp
push
adc
adc
sub
das
mov
insl
idivl
jle
xchg
lret
add
arpl
es
xchg
mov
mov
icebp
sub
xchg
ja,pn
dec
fidivrl
add
mov
addr16
pop
cli
mov
mov
xchg
scas
daa
pop
stos
mov
fcomi
outsl
scas
cmp
inc
or
xchg
mov
and
jae
bswap
lret
sbb
je
mov
xor
rcl
inc
add
into
or
jg
add
mov
mov
std
sbb
jne
shr
orl
mov
xchg
sub
fs
icebp
push
dec
aam
ss
cmpsl
and
push
jnp
pop
mov
out
adc
jg
lahf
out
repz
and
add
ja
xchg
push
pop
sbb
arpl
pop
mov
mov
addr16
ljmp
jb
xchg
xor
cli
cld
xchg
sub
inc
push
or
outsl
inc
loopne
popf
jecxz
pusha
dec
or
mov
mov
add
sbb
pop
popf
mov
inc
js
ret
mov
jp
sti
cmp
ror
lds
and
in
jns
incl
outsl
call
xsaves
in
or
xlat
addr16
in
and
pop
and
cmp
mov
into
pop
sbb
cmp
cs
or
andl
xchg
mov
in
repz
jecxz
mov
insb
lds
and
add
mov
mov
test
pop
mov
xor
popf
leave
sbb
out
fisttpl
dec
push
stc
push
dec
mov
xor
xor
popa
popa
inc
pop
pop
jmp
sbb
mov
push
test
inc
mov
push
add
adc
aas
les
in
lods
cmpb
sarl
mov
shll
mov
pop
mov
jge
xchg
xor
nop
pop
outsb
mov
leave
in
jl
aam
rclb
inc
jmp
sbb
int3
push
pop
test
jle
sub
pop
pop
ss
push
in
xchg
ret
push
inc
adc
jg
out
je
outsb
lods
pop
lock
shll
cmp
bound
jo
scas
pop
xor
jbe
fdivl
mov
xchg
jg
cmp
adcl
aas
addr16
add
mov
fs
jne
sarl
cs
shr
call
mov
mov
or
jmp
shlb
and
xor
jne
pop
out
sub
jle
jbe
aad
lock
scas
xchg
out
leave
sub
ds
pop
add
mov
adc
jns
pop
pop
mov
cld
ja
out
add
mov
pop
and
mov
pusha
jbe
jge
aam
cmp
cmp
pop
sbb
push
adc
mov
lea
aaa
sbb
sub
jne
adc
cmp
and
enter
adc
bound
shlb
pop
int3
daa
mov
pop
mov
inc
xchg
mov
add
and
shl
test
pop
fistpll
adc
iret
push
dec
data16
std
adc
adc
or
shrl
mov
jae
pusha
mulb
adc
add
pop
sub
and
icebp
clc
and
in
leave
mov
xchg
dec
xchg
shrl
inc
push
cld
aam
mov
stos
inc
cmp
add
cwtl
stos
pusha
jbe
inc
sarb
cs
and
and
ljmp
sbb
push
xchg
push
jbe
jge
pop
push
test
push
jae
cltd
sub
inc
jo
jmp
mov
adc
test
cmpsl
scas
jae
lock
and
lret
dec
into
inc
jge
sbb
je
lock
sub
mov
dec
jle
cltd
cs
mov
popa
int
test
shlb
and
push
stos
out
mov
fsubrl
jb
sbb
in
fildll
add
ljmp
adc
mov
pop
adc
sbb
xchg
dec
cmpsl
call
pop
pop
cltd
pop
jmp
pop
pop
mov
popa
cld
ret
mov
cltd
mov
xor
mov
lea
mov
push
lcall
push
sbb
lock
mov
xchg
xchg
push
shll
xchg
xchg
fs
xchg
ds
rolb
jno
ja
push
cmp
xchg
ljmp
ja
dec
xchg
rolb
cmpsb
pop
stos
test
mov
push
mov
iret
ljmp
popl
sbb
jmp
out
push
imul
push
test
cmp
mov
cmp
add
jle
jecxz
in
and
aam
lods
sub
or
insl
aad
xchg
js
and
push
popf
mov
lods
cmp
mov
arpl
dec
sub
mov
call
sub
cmp
push
loope
mov
fstpt
mov
cld
addr16
in
jo
in
dec
je
xor
jnp
stc
mov
daa
shlb
pop
sbb
xchg
and
bnd
int3
orl
imul
fcompl
cmp
sar
lock
jbe
pop
nop
pop
push
or
dec
aas
or
lods
mov
push
xlat
inc
sub
fiaddl
mov
addr16
bnd
rclb
lahf
iret
insb
cmpsl
jle
mov
xorl
in
pop
dec
xchg
into
jbe
test
or
jo
mov
adc
cwtl
in
sahf
mov
in
pop
fidivrs
mov
xchg
and
sbb
stos
cmc
jmp
and
das
dec
add
mov
xor
xchg
aas
shrb
daa
inc
orl
andb
pop
mov
sbb
popf
xlat
sub
jb
idivb
add
lock
adcl
dec
repz
pop
inc
out
xchg
sbbb
inc
int3
out
and
pop
in
adc
rol
mov
sar
divb
ljmp
adc
sub
xchg
fsts
xchg
push
cmc
std
inc
sbb
push
cwtl
pop
or
push
outsl
lods
and
vcvttps2dq
frstor
inc
jge
das
jp
stc
adc
sub
js
push
mov
push
lds
mov
enter
sbb
les
cmp
gs
push
je
push
leave
inc
addb
dec
dec
outsl
pop
push
push
repz
sub
inc
jb
das
aad
stos
stc
sub
xchg
nop
ss
repnz
test
jo
and
inc
cmovnp
and
icebp
test
repnz
mov
dec
sub
cltd
mov
lea
push
addr16
xor
dec
ja
xorb
bswap
and
jbe
call
jp
or
std
adc
iret
fadds
stos
xchg
push
and
in
lret
div
xchg
xor
mov
and
sarl
shlb
sub
jecxz
sub
scas
movsl
je
and
pop
jmp
push
sbb
cltd
push
or
jecxz
pop
mov
jae
push
imull
es
pop
out
push
dec
insl
inc
mov
add
mov
adc
push
mov
mov
sbb
cmc
pop
mov
or
ljmp
and
pushf
fstl
leave
mov
fdivrl
subb
out
push
lea
insb
aam
insb
mov
movsb
jbe
outsb
sub
mov
call
icebp
neg
jmp
and
pop
push
push
out
jb
dec
sbb
out
addr16
and
ja
jns
mov
addr16
fistps
dec
mov
xchg
push
icebp
sbb
sbb
adc
loop
jno
pop
ret
add
dec
fbstp
mov
or
nop
mov
out
lods
jle
add
mov
fcmovnbe
adc
test
mov
pop
fsubr
subl
or
mov
xor
jp
adc
dec
sub
fs
cmc
aad
push
xorps
jae
jp
xlat
cmp
movsl
data16
ffreep
xor
push
fists
imul
xchg
fwait
ja
loope
jns
sbb
mov
shll
and
dec
jb
leave
fidivrs
xor
dec
aam
push
jnp
jmp
int3
sti
shr
jo
adc
adc
test
pop
rcr
mov
fsubs
ss
jae
out
movsl
xor
pushf
cmp
xlat
shlb
outsl
js
dec
lret
inc
cmp
xor
mov
lcall
into
xchg
mov
xchg
lret
push
or
push
pop
fsubs
lahf
push
aas
popf
mov
xor
mov
jbe
xchg
jae
add
dec
add
pop
loopne
jbe
mov
push
and
cmpsb
rorl
ljmp
inc
jb
pop
sub
inc
add
test
or
cmp
cld
inc
sub
sbb
imul
mov
out
or
fcoml
jecxz
hlt
jmp
testb
loopne
jg
int3
jg
arpl
lods
shll
mov
sbb
cmpl
pop
sub
dec
or
xchg
dec
dec
ds
push
mov
cmpsb
cmc
mov
loope
insl
push
lds
push
mov
add
lret
aad
cmp
cmpsb
jb
out
arpl
fs
pop
mov
xor
mov
mov
sub
sub
lahf
dec
lret
adc
test
decb
or
pop
ficoml
cmp
jmp
sub
iret
pop
repnz
xchg
jne
sub
xchg
in
data16
dec
xor
sti
insl
xor
lds
hlt
dec
jae
xchg
stc
arpl
xor
icebp
in
xchg
cli
mov
repnz
mov
adc
aas
push
pop
mov
stos
mov
mov
outsl
je
push
mov
stos
cmpsb
dec
jae
mov
movsb
adc
jge,pn
inc
imul
sbb
xchg
sbb
je
ds
sbb
mov
lea
pop
mov
dec
xlat
or
push
lds
clc
addl
cwtl
add
bound
sbb
xchg
sub
and
push
out
dec
add
push
xor
jo
inc
jp
in
stos
nop
xor
sbb
js
push
adc
std
pop
sbb
xchg
mov
jae
pop
inc
xchg
jmp
push
xor
aad
dec
mov
inc
cs
or
or
mov
je,pn
adc
and
loop
dec
cmp
xchg
inc
jle
int3
in
mov
cmpsl
fstps
hlt
cmpsb
pop
and
pop
jle
xor
pop
sbb
enter
adc
xor
stos
sarb
inc
dec
cmp
push
push
sbb
shll
cmpsb
lods
andps
les
and
sub
andl
pop
add
test
pop
xchg
dec
jl
push
in
ja
pushf
sub
or
mov
loop
or
outsb
ja
ja
push
adc
cmp
test
jnp
push
dec
xor
xchg
xchg
sbb
inc
xor
andl
inc
imul
dec
repz
xor
out
bswap
idivb
and
xchg
sbb
push
imul
cmp
subl
stc
mov
cmp
or
adc
cmpsb
xchg
mov
leave
pop
ror
push
iret
and
filds
je
inc
movsb
cmp
ret
mov
jmp
stos
and
arpl
test
lods
in
cmp
mov
loop
inc
outsl
les
mov
pusha
call
push
or
push
out
movq
dec
out
jo
inc
mov
or
or
imul
scas
and
cli
pop
mov
les
xchg
and
iret
pop
out
pop
lock
ljmp
xchg
dec
mov
lcall
popf
adc
movb
mov
pop
fists
fldenv
inc
out
addr16
ss
test
cmpsl
adc
push
sub
cld
ss
push
dec
pop
sub
fwait
xor
divl
lods
and
jo
dec
push
insb
ret
or
push
push
jle
pop
aas
pop
roll
mov
jo
mov
cld
mov
and
add
inc
mov
mov
cmp
sbb
test
and
xorl
sbb
mov
mov
mov
jne
xchg
sbb
cli
mov
sub
push
mov
pop
aas
lret
das
inc
sbb
mov
and
mov
aad
shl
cwtl
xchg
dec
stos
adc
std
mov
rol
jns
outsl
or
daa
mov
lods
aas
or
rcll
bound
mov
movb
pop
lds
movsb
mov
jp
mov
aas
in
je
into
push
adc
fsubr
insb
divl
sub
push
xchg
fwait
or
mov
lods
stos
lods
push
adc
out
popf
nop
cmpsb
cmp
out
xor
shl
dec
push
loopne
lahf
in
lret
and
xchg
mov
out
pop
iret
inc
mov
mov
mov
inc
adc
push
fwait
dec
pop
mov
decl
pmaxsw
mov
mov
or
fstpt
push
mov
mov
fwait
insb
loop
push
addl
xchg
scas
lret
xor
pop
out
inc
sahf
xchg
jae
sahf
jno
inc
mov
mov
test
adc
sbb
xor
dec
je
push
mov
mov
imul
pop
cmp
call
outsl
imul
mov
fs
and
int3
xor
inc
movsl
inc
lahf
mov
pop
xchg
pushf
jp
fisttpl
push
cs
ss
mov
lea
inc
jno
jge
xor
sbb
sbb
push
int
lea
or
mov
aas
mov
jb
stos
aad
shr
in
dec
xchg
subb
jp
outsb
mov
adc
jb
jbe
jbe
fs
xchg
push
arpl
inc
jp
js
jecxz
xlat
jg
cli
sarl
fcmovu
pop
dec
rolb
addr16
dec
arpl
xchg
loop
into
dec
mov
lret
add
add
jp
jne
arpl
mov
in
or
jge
or
dec
aad
jae
or
xor
aad
subb
fldenv
mov
jnp
arpl
and
out
or
sbb
jp
mov
pop
jns
fidivrs
stos
rcll
push
or
aad
rcll
dec
ficoml
sbb
push
mov
push
cmp
clc
or
inc
cmp
aas
repnz
pop
mov
push
loopne
or
fstpl
jo
jmp
jg
xlat
dec
lret
xchg
movntq
faddl
mov
mov
cmp
push
push
scas
xchg
fdivl
addl
in
inc
mov
insl
cmp
movsb
pusha
leave
and
or
les
mov
cmc
jmp
ds
out
mov
out
adc
dec
push
out
int
mov
mov
pop
xlat
aam
mov
aas
icebp
inc
imul
push
loope
or
xchg
test
fcom
gs
lock
sbb
inc
cltd
int
mov
pop
push
pop
mov
push
pop
pop
sbb
test
inc
mov
xchg
addr16
dec
pushw
addr16
dec
loopne
cmp
or
ljmp
mov
cmp
mov
adc
movsb
jnp
ret
sti
scas
pop
lds
out
xchg
cmp
add
mov
adc
out
jg
ja
ljmp
sarl
xor
adc
cmp
pop
adc
mov
push
lcall
enter
pop
push
roll
push
ds
lcall
jp
aam
xor
in
mov
mov
pop
sbb
xor
cmp
and
jge
fbld
cli
push
mov
call
cmp
xor
jbe
sub
mov
aaa
pop
dec
aad
add
int3
ss
fstl
adc
push
sti
adc
imul
add
push
push
lret
imul
pop
mov
in
and
es
test
pop
mov
inc
clc
shrb
push
cmp
cwtl
imul
push
mov
pop
test
pop
lock
dec
or
out
jno
add
stos
push
enter
rolb
divl
popa
mov
lods
shlb
lock
xchg
ss
mov
lods
aad
stc
js
fwait
mov
xchg
mov
pop
lcall
icebp
movsl
push
push
hlt
and
es
jmp
jbe
push
dec
and
mov
mov
aam
and
lahf
mov
jp
fbstp
sub
pushf
or
dec
sahf
add
xchg
push
fs
sub
xchg
mov
sbb
mov
cwtl
rcrl
mov
xchg
sbb
cs
dec
sahf
jge
out
repz
fbld
ds
stc
pop
sti
fldenv
dec
rclb
sahf
xor
push
xchg
mov
sub
sti
sub
lods
mov
stos
enter
repz
subb
xchg
mov
dec
adc
mulb
or
popa
test
outsb
repz
cmp
push
inc
mov
cmp
insb
pop
mov
push
cmp
data16
daa
dec
xor
adc
pop
rclb
fists
repz
mov
jle
or
xor
xorl
push
imul
data16
loop
xchg
jp
repnz
mov
outsl
nop
push
ret
jle
push
sti
pop
frstor
pop
shlb
mov
mov
lret
or
movsl
test
jne
pop
mov
push
sbb
sbb
rclb
iret
stos
stc
push
rcrb
pop
xchg
add
lock
das
into
xor
test
rcrb
sub
cmp
aas
cmp
push
imul
scas
pop
imul
repz
movsb
subl
ljmp
das
sbb
bound
xor
fs
adc
lea
jle
mov
mov
add
xchg
pop
xchg
sahf
jne
mov
ficoms
jmp
je
insb
mov
test
cmpsb
sti
lret
cld
iret
xchg
outsb
pop
jo
cmp
add
ret
jbe
mov
sbb
push
mov
js
addr16
fbstp
imul
mov
pop
dec
mov
pop
pop
repnz
add
mov
sbb
ljmp
stos
mov
mov
xchg
xchg
cs
inc
cmc
sarl
jp
sub
imul
cmpsl
jle,pt
pop
pop
add
add
mov
ds
andl
divl
lret
xchg
sub
add
cmp
push
mov
mov
mov
gs
mov
stos
ljmp
stc
ljmp
ja
sti
mov
fidivrl
or
jnp
pop
add
ja
xor
or
push
inc
std
sbb
mov
daa
lods
and
adc
sbb
sub
push
ret
les
mov
out
cmp
arpl
mov
js
incb
movsb
mov
repnz
sub
jg
insb
cltd
and
loope
push
and
mov
ret
rcrb
jae
iret
ds
mov
xchg
stc
pop
lahf
sahf
bound
xor
aaa
inc
adc
cmp
rol
mov
push
mov
xchg
adcb
jae
insb
sbb
jo
loope
xchg
rcl
jle
insb
int3
push
add
les
pop
aas
push
adc
hlt
jno
outsb
inc
das
adc
dec
sahf
xchg
inc
inc
pop
mov
test
or
ja,pt
popa
mov
repz
insl
pop
inc
call
xchg
cmp
ljmp
rcrb
mov
jo
arpl
test
sbb
movsl
inc
daa
loop
cli
push
or
mov
daa
cmc
into
subb
mov
lahf
aas
dec
sub
lret
xchg
cmpsl
pop
mov
jo
ds
mov
mov
add
xchg
fmull
mov
xor
jbe
imul
gs
jp
ja
cmp
push
or
jl
sti
inc
fs
cwtl
xchg
jae
lret
gs
sbb
repnz
dec
ror
enter
or
dec
xchg
pop
jl
mov
mov
pop
dec
or
jb
fistl
sbb
stos
push
loope
mov
inc
mov
repnz
add
mov
push
inc
and
mov
sub
push
clc
fldl
test
lret
mov
inc
mov
ficoms
push
stc
jl
mov
and
outsb
outsl
rorb
push
fadd
jbe
les
les
xor
enter
cmp
push
mov
test
scas
daa
dec
rcl
pop
inc
mov
ja
imul
pop
fiadds
mov
aam
test
sbbl
outsl
aam
jne
sbb
fidivrl
es
mov
mov
adcb
mov
imul
movsl
xchg
and
dec
hlt
cmp
adc
rorl
mov
sub
test
lods
in
sub
test
pushf
out
sub
add
sti
or
mov
mov
sbb
sti
les
jns
sub
ret
or
out
les
stc
mov
push
jo
mov
arpl
pushf
movsb
xchg
dec
icebp
xchg
lret
jno
enter
lds
jo
jo
mov
push
leave
cltd
cmpsb
mov
in
mov
dec
jecxz
int
mov
adc
push
stos
divl
and
lock
arpl
popf
cmp
and
aam
cmp
inc
scas
fnstenv
addr16
shlb
xchg
in
add
imul
les
and
dec
iret
ficoms
jae
shll
in
std
and
add
mov
pushf
lods
pushf
addr16
mov
sahf
loop
jo
xchg
cmpsl
jmp
cltd
xchg
push
pop
clc
test
or
push
jg
lret
jl
subl
inc
testb
push
dec
loope
jnp
push
adc
jae
stc
or
xchg
mov
pusha
scas
or
sbb
in
stc
xor
push
in
inc
pop
insb
scas
push
xchg
idivl
cs
stos
lock
movsl
push
cwtl
push
jo
or
ret
push
jl
or
mov
add
ljmp
sub
mov
mov
aas
jle
mov
jp
lret
push
sub
aad
sbb
cld
mov
sub
xor
add
stc
mov
xchg
pushf
js
test
fwait
pop
nop
sbb
fs
and
xchg
lds
or
cmc
mov
or
int
push
adc
movntps
xchg
jl
push
dec
jnp
popa
daa
mov
adc
add
push
hlt
popa
and
dec
inc
addr16
add
cwtl
mov
fdivrl
pop
jb
test
ret
dec
mov
lods
xlat
xchg
enter
adc
xor
pusha
hlt
andl
inc
mov
mov
shrb
pop
in
ret
mov
sbb
push
mov
adc
lock
fcmovnu
xchg
adcl
int
jne
xor
lea
dec
rorb
jns
clc
sbb
dec
mov
fisttpl
jo
inc
rclb
or
pusha
cwtl
add
sub
push
movb
sarb
iret
xor
jle
mov
sbb
jge
repz
xor
adc
push
fdivr
mov
add
pusha
or
mov
lret
adc
push
icebp
call
ficomps
out
pop
push
das
std
or
or
push
cmp
outsb
add
xor
mov
cmp
rcrl
pusha
loopne
bound
fs
lret
mov
sbbl
xchg
xchg
outsb
jg
sbb
out
sub
aaa
popa
neg
dec
inc
adc
enter
push
fwait
push
scas
out
sub
popa
in
lock
lods
mov
jg
or
cmp
jae
and
xor
add
lock
or
frstor
xchg
not
clc
jp
pop
add
rclb
mov
mov
or
mov
ret
mov
xlat
js
jns
das
adc
jle
dec
aas
sub
sti
or
sbb
xchg
cwtl
inc
jne
sti
stos
iret
out
push
xor
xchg
mov
or
in
jmp
cmp
imul
and
inc
cmp
stos
cmp
xchg
or
into
cmp
sbb
and
repnz
jbe
xchg
mov
cmp
and
lret
xchg
pushf
cmp
dec
mov
in
in
loope
inc
xor
mov
les
jne
out
out
popa
mov
es
inc
outsl
insl
aaa
cmp
out
dec
xchg
movsb
sbb
sbb
lret
jg
mov
lret
sbb
mov
int
cmp
enter
clc
test
into
push
loope
fdivrl
loop
cmp
in
push
lret
mov
cmpsl
inc
and
push
test
int
and
inc
and
test
mov
lret
pop
cmp
mov
repnz
jmp
add
iret
aam
jp
inc
testb
lcall
and
push
push
pop
mov
mov
insl
inc
icebp
lahf
sub
incl
mov
cmpsl
sub
shlb
adc
mov
jle
mov
jmp
inc
mov
aad
dec
mov
add
sbb
ljmp
aaa
mov
dec
es
jecxz
lret
sbb
movsb
out
decl
or
xor
mov
fucomp
push
and
push
pop
sub
xlat
hlt
xchg
add
data16
jbe
shlb
dec
cmpsb
inc
xor
aas
loopne
xorl
loop,pn
add
add
add
xor
or
xor
cmc
test
negl
mov
add
xchg
filds
pop
addr16
and
subl
lahf
loop
push
js
xchg
xor
lods
mov
jp
sub
clc
ljmp
xchg
fs
rclb
push
sub
mov
int3
cld
aas
lods
push
mov
and
pop
fnsave
adc
pop
and
cmp
movsb
jecxz
inc
or
dec
out
sti
ficompl
in
xchg
jb
js,pn
in
lret
cmpsb
push
sub
or
pop
loopne
add
inc
push
cwtl
in
pop
or
aaa
add
and
push
or
outsl
out
shll
push
or
jmp
out
das
push
outsl
out
add
push
or
pop
sub
test
je
mov
inc
push
cmp
imul
pop
mov
xchg
repnz
sti
dec
lds
das
xor
push
xor
repnz
bnd
jno
jl
or
aad
aaa
pusha
pop
mov
rcr
ss
sbb
aad
pushf
xchg
add
pop
lods
adc
xlat
test
int
jl
push
jne
xchg
jne
pop
mov
or
mov
pop
push
repnz
and
sti
push
js
inc
sub
mov
sbb
sub
mul
aam
cltd
int
enter
jg
lret
pusha
mov
adc
sbb
loop
jmp
pop
hlt
mov
cmp
stos
mov
incl
mov
imul
add
push
pop
jg
lahf
xor
mov
and
int3
in
js
dec
push
imul
jmp
sarb
sbb
daa
stc
xor
cltd
pop
js
mov
call
mov
xor
ljmp
or
or
sub
push
dec
cltd
mov
outsb
add
repnz
pop
orb
pop
sahf
repnz
mov
dec
mov
clc
push
clc
inc
shlb
cmpsl
ljmp
fisubrs
jp
dec
dec
sub
mov
jns
ror
add
mov
mov
les
mov
push
int
movsl
xchg
int
pop
nop
sti
rcl
inc
xlat
or
dec
add
mov
pusha
sbb
adc
pop
movsl
mov
aas
stc
jbe
outsb
fnsave
adc
lret
testl
inc
stos
movsl
fcoms
lret
fsubp
loope
repnz
dec
sbbl
push
into
fidivs
jle
push
es
nop
sub
outsl
push
xchg
icebp
push
lret
add
xchg
push
inc
push
hlt
out
int
push
cmp
adcb
xor
les
add
outsb
cld
roll
dec
clc
jecxz
lods
fnstsw
sub
test
ss
mov
int3
int
jecxz,pt
ret
adc
mov
in
cmp
xor
ja
and
popa
mov
xchg
mov
fadds
sbb
leave
jns
lret
mov
out
rorl
ljmp
rcrb
shlb
in
push
push
mov
loope
sub
mov
ljmp
xlat
xchg
jmp
xor
pop
mov
add
inc
sti
into
mov
xchg
push
and
cmc
daa
pop
out
sti
and
jp
push
and
xchg
push
dec
lds
roll
adc
movsb
add
scas
nop
orb
stos
aad
push
sub
fs
dec
pushw
mov
fwait
push
mov
hlt
adc
movsb
repz
and
test
and
sbb
inc
sbb
jbe
mov
mov
jno
add
jae
cmp
sbb
push
and
out
movsl
inc
jg
push
outsl
push
push
sahf
repnz
cmp
add
sub
pop
test
mov
xchg
addr16
cmp
arpl
lret
test
push
dec
outsl
shl
xor
inc
and
add
scas
orb
cs
mov
ds
adc
cmp
cmp
pop
adc
subb
xchg
mov
ret
xchg
je
cmp
aaa
dec
shrl
jo
push
rcll
out
hlt
jecxz
push
dec
es
es
into
std
jno
fstpt
xor
mov
inc
jmp
xchg
call
out
dec
mov
pushf
xchg
xor
sub
das
pop
mov
and
movsl
test
pushf
jg
fucom
rcrb
cmpsl
jecxz
in
mov
imul
fmull
xor
mov
cltd
dec
push
xchg
out
add
lret
mov
loop
or
test
ret
lea
test
mov
mov
push
dec
clc
outsl
je
mov
out
dec
inc
mov
push
jmp
jle
sub
test
push
aaa
mov
and
movsl
xchg
loop
add
call
push
xchg
das
fnsave
pop
inc
add
xor
mov
test
insb
outsb
adc
mov
test
mov
or
cs
movsb
popf
inc
stc
xchg
frstpm(287
outsl
sub
mov
add
or
lret
mov
jo
push
xor
and
fbld
out
imul
jl
out
test
pop
mov
sub
int
jp
stc
xor
movsl
lods
sbb
jae
inc
in
mov
movsb
inc
xchg
inc
xchg
pushf
jb
push
cmpsb
mov
repz
dec
push
push
mov
mov
shl
inc
adc
cmpsb
push
push
les
test
in
add
cltd
add
sbb
std
aaa
jae
xchg
cmpb
cmp
ljmp
xchg
das
pushf
aam
push
cmpsl
mov
lods
dec
sub
cmpsl
sti
jge
enter
push
xor
sbb
pop
push
mov
mov
sbb
mov
iret
cmpsb
sti
xor
sbb
jns
and
sbb
std
lret
mov
addb
aas
lahf
aam
mov
out
and
jne
inc
pop
add
dec
fdiv
cltd
subl
shl
push
imul
inc
out
shl
out
fmull
mov
jl
mov
or
or
sbb
stc
cs
outsl
test
pusha
jp
mov
xchg
in
dec
jbe
loopne
inc
cs
ftst
adc
idiv
fwait
loope
insl
push
push
and
shrl
imul
lods
insb
pop
and
xor
sarb
push
lock
pop
and
insb
incl
mov
cmp
and
xchg
sahf
or
cmc
or
xor
sbbb
in
mov
roll
dec
cli
stos
dec
push
faddp
mov
sbb
or
mov
sbb
xchg
push
stc
cmp
cli
and
dec
cwtl
outsl
push
jg
rcll
dec
xor
dec
xchg
mov
out
addb
xor
fsubs
sahf
xor
lcall
clc
aam
xor
fwait
or
test
sub
cmpsb
aad
mov
popa
sub
pop
arpl
sub
out
ret
adc
push
lock
movsl
scas
call
call
cltd
mov
fidivrl
add
lock
into
imul
jno
add
popa
jp
cmp
mov
popf
shrl
int3
and
push
adc
loope
pusha
loop
jle
aas
outsb
fstps
jno
ficomps
xor
stos
lahf
jecxz
leave
scas
outsl
lock
out
cld
xchg
cli
rorb
sub
popf
xlat
push
mov
push
mov
push
push
shll
dec
dec
dec
xchg
not
jecxz
xlat
arpl
rol
or
or
mov
jmp
in
arpl
sub
mov
data16
sub
ljmp
in
aam
or
push
mov
andl
lods
imul
std
daa
lods
es
out
inc
in
mov
mov
add
and
xchg
add
lcall
push
push
pusha
pushf
pop
push
shl
pop
sub
shr
stos
mov
negl
std
xchg
aaa
and
jecxz
lods
mov
ficompl
or
cmp
jge
mov
les
lea
inc
mov
mov
dec
inc
xchg
insb
test
mov
lea
aaa
pop
lret
jnp
push
int
rol
adc
mov
sbb
addr16
push
rorb
adcl
mov
out
test
insl
repz
test
rorl
jb
or
mov
adc
loope
jecxz
push
mov
adc
cltd
jge
negb
mov
pusha
fcompl
lds
mov
cld
sub
je
fisttpl
fistps
push
nop
jl
dec
mov
adc
gs
mov
sbbl
dec
lock
sub
push
lret
mov
xchg
loopne
imul
push
sub
inc
popa
rolb
jg
out
addr16
push
add
in
ds
inc
lea
jb
jp
aam
jecxz
xchg
sbb
pop
inc
ret
out
gs
aam
aad
adc
jp
sbb
inc
aas
mov
push
lods
mov
sbb
dec
mov
rclb
lret
mov
xor
jge
jo
mov
push
pusha
jns
inc
enter
fs
adc
sbb
or
lret
jl
loope
push
subl
dec
adcb
movntq
jg
stc
mov
cli
mov
dec
mov
std
ja
mov
daa
scas
ljmp
push
sarl
mov
push
jno
xlat
mov
add
sti
cmc
jno
and
sbb
stos
sbb
xchg
sub
jl
or
stos
gs
jp
dec
mov
sbb
push
mov
in
pop
adcb
test
add
mov
cmovb
or
sbb
adc
mov
lret
push
push
in
mov
mov
or
mov
mov
add
jno
inc
imul
cli
je
rep
jp
outsb
in
out
xchg
repnz
pop
dec
int3
ja
cli
add
jge
cmp
adc
inc
jle
jmp
repz
push
push
fwait
daa
ljmp
pop
sbb
out
xchg
cmp
lods
repz
test
jnp
test
fimull
mov
xor
adc
cmp
loop
push
call
sbb
rol
lea
loope
test
add
dec
pop
mov
sbb
push
inc
pop
inc
or
out
popa
mov
or
pop
pop
lds
stos
arpl
addr16
sbb
or
inc
dec
fadds
icebp
xchg
mov
xor
and
inc
in
cmpl
xchg
mov
nop
jbe
daa
inc
mov
sbb
or
xchg
nop
sahf
cs
cmpsl
stos
push
and
dec
mov
jne
nop
movsl
sbb
xorb
in
adc
test
dec
bound
push
cmp
and
rorl
mov
push
lds
fsubrs
fnstsw
aaa
rcr
lcall
push
and
clc
pop
cmp
jl
insl
jo
add
inc
into
iret
sbb
push
mov
jb
pop
cmp
jae
dec
jge
dec
ror
add
arpl
sbb
dec
cmpl
imul
mov
cltd
mov
das
fisttpl
sub
inc
mov
ljmp
test
mov
es
jo
push
jnp
jp
pop
inc
pop
out
movb
pop
in
fcomps
aas
xchg
data16
adc
stos
xor
sub
inc
roll
add
push
shll
jg
xor
fwait
sub
push
enter
push
mov
lock
or
pushw
test
fnstsw
out
ljmp
pop
iret
xor
sub
cwtl
xchg
ret
pop
xor
cmc
jmp
sub
push
stc
push
inc
dec
scas
rclb
dec
adcl
add
imul
xchg
push
dec
push
out
aas
cwtl
mov
or
aas
or
imul
enter
inc
in
outsl
pop
pop
mov
dec
add
mov
loopne
mov
push
cmp
inc
jbe
xchg
rolb
sub
sub
dec
testl
cwtl
lret
aam
aas
sahf
mov
fidivl
je
push
mov
cmp
sbb
sub
mov
sub
and
jmp
dec
push
lods
ret
jle
dec
jl
dec
mov
idivb
or
lret
mov
mov
push
jge
test
jmp
lret
push
in
jne
loopne
ret
in
arpl
inc
cmc
xchg
and
adc
add
jno
ja
js
lret
pop
rcll
jne
movsl
push
pusha
in
pcmpgtb
xlat
test
pop
test
rcll
jns
cmp
inc
lds
imull
sbb
xchg
xchg
push
stos
adc
xor
das
inc
lock
mov
sbb
adc
ds
jecxz
mov
xor
popf
sbb
add
push
es
xchg
mov
in
rcr
pusha
clc
test
add
inc
outsb
cmp
jno
fbld
adc
mov
mov
mov
xchg
inc
add
out
fdivl
ret
push
hlt
gs
imul
lods
stc
jno
cltd
jns
and
faddl
lds
mov
jle
fnstcw
mov
out
inc
adc
out
lcall
adc
add
pop
cmp
ret
pop
inc
leave
leave
mov
cli
call
or
xchg
xor
dec
jnp
imul
pop
mov
mov
mov
aam
nop
repnz
adcl
push
pop
hlt
iret
mov
pop
leave
pop
sbb
dec
and
rcrb
movsl
jae
pop
pop
leave
movsb
aas
and
sbb
arpl
jp
mov
stc
xchg
stos
repz
pop
fdivrl
negb
or
adc
jo
loope
mov
pop
adc
xor
movsl
pop
sarb
loop
inc
push
jp
dec
dec
inc
inc
mov
sub
dec
adc
bound
and
xchg
or
mov
pop
inc
scas
out
push
call
popf
inc
dec
sub
cmp
roll
push
or
and
mov
pop
ja
test
push
jb
rolb
inc
je
sbb
popa
iret
cs
fs
les
popl
jecxz
aas
push
in
mov
mov
jne
icebp
aas
jg
leave
pusha
call
imul
mov
ja
scas
mov
xor
loope
shr
ds
inc
pop
pop
and
cmpsl
add
push
in
lock
jbe
inc
test
push
cmp
push
xchg
mov
call
call
ja
adc
fwait
ret
lds
mov
aam
or
mov
dec
ja
mov
mov
pushf
inc
mov
add
mov
cmp
push
int
inc
push
popa
dec
mov
aad
mov
mov
roll
scas
push
push
pop
sbb
ret
cmc
xchg
mov
jb
xlat
xor
hlt
lea
dec
cmp
in
jecxz
outsb
aaa
fsubrs
push
mov
pop
push
fucomi
xchg
pop
xchg
cltd
mov
cmpsl
sub
mov
mov
nop
cmc
cld
icebp
es
mov
iret
cmp
jmp
enter
popa
insb
add
jne
rep
push
divb
mov
imul
js
xchg
cli
pop
or
test
xchg
enter
fs
mov
sahf
clc
lock
aad
sbb
int
in
push
icebp
into
mov
mov
imul
push
adc
sub
test
pop
lahf
rcr
sub
add
out
sub
push
or
cld
sub
bound
add
pushf
xor
fidivrl
ret
inc
pop
rorb
add
mov
xchg
cmp
xorb
out
xchg
clc
adc
out
insb
fildll
arpl
xlat
fidivrl
mov
pushf
fdivl
push
push
addl
cld
fistps
mov
iret
mov
sarb
dec
sahf
mov
or
fiaddl
inc
nop
or
test
iret
add
jae
dec
out
or
dec
cmovns
mov
lea
jmp
nop
rcl
mov
jg
sub
pop
and
lcall
lods
mov
mov
lcall
leave
rolb
inc
or
pop
push
fisubl
mov
add
ret
sub
ss
arpl
enter
scas
aam
xlat
sub
and
test
outsb
push
in
adc
fbstp
add
sti
mov
daa
addb
out
sahf
sub
mov
or
push
xchg
adc
adc
adc
mov
mov
xor
inc
mov
dec
dec
sahf
out
and
xchg
xor
push
add
out
lods
lret
imul
and
fcompl
scas
sbb
sub
imul
xchg
and
pop
loope
int
inc
add
adc
enter
fstpt
loop
sub
add
or
cmpsb
lea
push
jg
fisttpl
jmp
ja
loopne
mov
cmc
mov
jno
fwait
idivl
sahf
xchg
stos
or
dec
mov
bound
lcall
jle
ss
das
xchg
cmp
jae
stos
cmc
dec
roll
mov
mov
inc
jle
pop
xor
xchg
jne
arpl
add
out
pusha
fmuls
or
sbbl
jl
dec
fldt
and
sbb
into
fwait
pop
bswap
mov
sbb
testb
fiaddl
dec
pop
fcmovu
pop
leave
pop
and
bound
lret
sub
pusha
jge
xor
xchg
mov
outsl
or
das
push
es
adc
and
sbb
jl
dec
inc
mov
jg
dec
sub
xchg
xchg
mov
les
nop
cmc
rorb
aad
xchg
push
pop
inc
or
test
shll
out
pop
divl
popf
in
sub
pushf
and
add
insb
loop,pn
jl
imul
fwait
push
and
mov
repz
mov
push
iret
adcb
jne
dec
arpl
hlt
out
sub
movsl
addr16
addb
jmp
sub
std
sub
fidivs
xchg
lcall
fisubs
xchg
lods
jne
mov
mov
cmpsl
xor
dec
cmp
mov
repz
lcall
pop
mov
inc
adc
adc
dec
int
lcall
cmp
mov
pop
pushf
into
lcall
mov
fldcw
ds
stos
pop
lods
push
and
jbe
loope
lret
xor
mov
aas
xor
push
aam
outsl
jg
sub
stos
pop
movb
adc
lcall
lret
cltd
pop
in
inc
cltd
loopne
mov
jo
adc
cmp
fsubl
mov
add
adc
dec
sbb
es
dec
xor
mov
cmp
xchg
dec
es
ljmp
mov
cld
jnp
data16
sarb
sub
push
inc
xchg
or
jmp
clc
xchg
xor
push
jg
xchg
adc
pop
insb
add
jnp
pop
test
icebp
adcl
and
cwtl
cmp
arpl
enter
rorl
sti
in
imull
mov
lahf
mov
fcompl
ljmp
mov
mov
ret
cmp
mov
ds
div
cmpsl
mov
jecxz
test
icebp
and
roll
push
clc
shll
jmp
in
movsb
and
vpxor
push
pop
or
pop
data16
ljmp
xchg
mull
pusha
mov
cmp
ja
cmp
mov
mov
inc
lahf
mov
notb
sbb
shlb
ret
add
pushf
cmp
std
sbb
dec
fwait
repnz
sbb
nop
xchg
stos
pop
fistps
dec
mov
xchg
xchg
jno
lcall
ljmp
fwait
mov
aad
dec
fwait
cmp
scas
mov
pop
pop
stos
pop
sahf
jnp
jmp
adc
and
test
jnp
mov
mov
xchg
jb
add
js
shll
jno
movsb
lods
into
or
hlt
cld
call
adc
rcr
out
cwtl
inc
lret
or
fnstenv
sub
ret
out
pop
call
mov
xor
fwait
icebp
insl
orl
cmp
loop
dec
fsubrs
mov
into
inc
mov
fsubs
adc
scas
xor
or
and
out
repnz
std
jns
xor
xchg
jmp
jle
pop
xor
aam
movsb
dec
adc
xchg
je
dec
inc
and
dec
sbb
inc
and
into
aad
push
and
adc
pusha
rolb
mov
js
test
xchg
sbb
sbb
out
pop
lret
sub
lods
mov
cmpsb
sar
mov
push
jns
mov
insl
mov
rcl
jbe
in
mov
mov
inc
stc
cmp
xor
pop
push
shrl
jae
insb
cwtl
jne
lods
popa
push
push
sbb
imul
mov
lahf
dec
mov
ljmp
mov
add
in
mov
idiv
ds
imul
push
jno
loope
cmp
test
or
stos
sub
mov
adc
add
or
inc
rclb
cli
jmp
inc
sbb
mov
inc
faddl
lods
jp
jl
ret
jmp
sbb
xor
ds
aaa
pop
add
outsl
cmp
jg
bound
lods
lods
fdivl
mov
andl
and
cli
aam
sti
or
fs
fstl
popf
add
push
xor
sbb
push
sub
lods
lods
pop
roll
dec
popa
in
jl
pusha
cwtl
lret
test
rorl
sti
inc
xchg
add
or
test
inc
xor
add
lods
add
lret
push
jb
pop
xor
xor
xchg
out
ret
cli
or
push
xchg
sahf
xor
inc
das
aad
sti
sub
pop
add
xchg
daa
push
in
repnz
mov
jno
shrl
mov
push
outsl
in
dec
add
stos
sub
gs
push
test
cmp
mov
loop
mul
jnp
add
jne
loope
cmc
sbb
and
lds
arpl
jns
pusha
push
out
lock
mov
push
mov
addb
mov
lds
xchg
pop
mov
lret
xchg
div
inc
xchg
lods
int3
insb
adc
cltd
pop
pop
cmpl
cmp
or
and
inc
sarl
out
adc
jnp
mov
jge
jle
sub
xor
out
mov
jmp
popa
or
repz
mov
out
into
dec
out
xchg
push
arpl
arpl
mov
mov
xchg
dec
and
or
xor
fdivl
in
push
fstpl
dec
push
adc
ret
mov
sarl
stos
pop
and
sub
cmc
xchg
push
sub
test
aad
stc
xchg
mov
xchg
test
push
adc
mov
jnp
adc
xor
shrb
jg
cmpsb
in
int3
sbbl
cld
ret
jns
insl
enter
adc
xchg
lea
dec
test
das
jle
subb
cmpsb
dec
and
sbb
jno
adcb
xor
pusha
fs
jbe
pushf
cmc
jo
mov
and
adc
call
mov
sbb
cmp
xchg
aam
xor
call
popf
xchg
mov
dec
xchg
shrb
mov
mov
movsb
cmpsb
inc
cmovb
sub
dec
pop
js
dec
cmp
inc
mov
lret
shl
sbbl
cmpsb
mov
pop
xlat
inc
ljmp
rorl
and
insl
in
or
sub
hlt
add
into
sbb
mov
andb
in
xchg
js
add
push
add
sti
push
add
jge
inc
lcall
mov
dec
bswap
cmp
std
in
sub
mov
mov
insl
sub
in
adc
pop
jmp
shlb
jg
adc
mov
cmc
mov
or
sub
pop
bound
idivl
pusha
ds
in
push
leave
aaa
push
imul
dec
aam
xor
lcall
add
sahf
out
or
lret
sub
out
xchg
jp
and
jmp
mov
adc
push
jns
xlat
fwait
lcall
cmpsl
call
adc
cmp
das
aam
lds
xor
clc
or
xchg
fildll
xor
mov
mov
cltd
cmpsb
push
pop
dec
xchg
jge
pusha
add
jb
roll
mov
in
addr16
iret
push
pop
jmp
mov
into
sbb
adc
js
aaa
sub
sub
enter
sbb
loope
call
out
nop
enter
jbe
cld
mov
push
fmull
mov
aaa
test
jl
xchg
ret
or
xchg
mov
or
jae
jp
cmc
cmp
sbb
fmuls
roll
scas
inc
push
mov
movaps
xchg
pop
fsubs
mov
cmp
lods
mov
xchg
push
fsubrs
cmp
call
cmpsl
push
insb
mov
xchg
adc
add
cmp
hlt
hlt
aaa
mov
and
fwait
jns
ds
leave
ss
push
or
icebp
add
cmpsb
cld
and
mov
int
ficoml
xchg
jb
out
jns
xchg
rclb
push
lods
adc
dec
jne
test
enter
xor
pop
xchg
push
leave
mov
in
test
dec
sub
stos
or
test
or
ja
jb
cld
or
mov
mov
jae
adc
and
xchg
adc
xor
movsb
sbb
mov
push
mov
mov
pop
add
cmp
je
pop
loope
sbb
xchg
test
inc
mov
loop
sbb
adc
ja
cmp
test
out
cli
mov
mov
dec
clc
cli
cmp
jbe
das
or
sub
adc
jp
shll
movsb
ret
inc
or
in
inc
aas
lock
mov
in
mov
outsb
outsb
test
fwait
dec
cmp
stc
pop
fcmovnb
cmp
and
stos
int
test
outsl
andl
dec
and
pop
popf
add
jge
scas
stos
int
jae
pushf
or
xchg
pop
xor
ja
pop
outsl
push
jecxz
jb
xor
cmp
test
cs
test
push
xchg
outsb
out
cmp
or
mov
xchg
inc
scas
lds
sbb
shrl
or
cltd
aam
mov
adcl
sarl
lcall
mov
dec
rolb
stc
shrb
or
or
xor
push
xorl
xor
cmp
jbe
pusha
hlt
mov
lahf
mov
jbe
jae
dec
movsl
in
xchg
inc
xor
adc
fdivs
aad
dec
jne
adc
sbb
adc
pop
pop
jge,pt
fs
in
fists
push
pushf
in
sub
dec
in
dec
add
sub
aas
and
fldz
inc
xor
xchg
push
mov
mov
insb
movsl
sbb
mov
enter
sbb
fbstp
xchg
jne
fsubs
inc
xchg
sti
mov
mov
cmp
adc
aaa
jbe
mov
imul
or
cs
mov
add
rorb
sub
xchg
imul
inc
mov
lcall
icebp
lods
cwtl
enter
ret
sub
ljmp
test
add
mov
pusha
je
ret
ljmp
mov
jne
idivl
jno
mov
daa
mov
mov
cmpsb
ret
mov
adc
subl
dec
cmp
leave
add
cmp
push
xchg
pop
pushf
pop
in
decb
mov
xchg
add
movsb
cwtl
incb
xchg
and
jnp
aad
xchg
sbb
inc
or
inc
and
adc
faddl
rclb
iret
xchg
dec
outsl
sbb
das
fdivr
test
sub
flds
loope
add
loop
data16
mov
jge
add
movsb
mov
repz
mov
imul
xor
push
je
cmp
test
jmp
mov
outsb
mov
push
cld
in
mov
mov
in
mov
jle
int3
adc
pop
push
lods
ret
ficoms
mov
call
mov
es
pop
mov
sub
dec
mov
sbb
int3
fisubl
mov
xchg
mov
pop
or
fisubl
cmp
loopne
imul
sbb
xor
mov
lods
insl
pop
cmp
cmc
adc
dec
ret
mov
fisttpll
mov
bound
jmp
incl
jmp
call
int3
repnz
or
mov
add
movsb
xor
pop
shrb
mov
insb
lret
jo
mov
out
loope
repz
nop
cmp
dec
push
fadds
cs
push
faddl
dec
lock
int
xchg
adc
jno
in
sub
xchg
pop
or
data16
push
xchg
fsubs
jns
fwait
in
jecxz
lcall
push
in
sub
jbe
or
mov
leave
sub
mov
flds
rcll
adc
push
in
jp
das
inc
cmp
push
test
aad
fstpt
adc
cwtl
mov
cmp
jecxz
sbb
movsl
stc
loope
cmp
or
xchg
jle
cmp
or
cmpsl
mov
rcrl
jnp
and
pop
mov
popf
push
sbb
mov
mov
and
pop
mov
mov
popa
hlt
push
push
mov
out
gs
push
mov
xchg
ja
inc
sub
sub
sbb
mov
inc
data16
jl
in
cwtl
test
xchg
cmpsb
xchg
mov
xchg
mov
push
mov
pop
imul
sub
mov
inc
cmc
and
test
mov
imul
mov
and
pusha
pop
xor
pop
lds
xor
inc
mov
adc
ljmp
in
mov
add
mov
lds
pop
lods
add
mov
fs
sbbw
jmp
mov
test
mov
adc
lods
jno
xchg
or
adc
out
and
xchg
xchg
mov
out
mov
sbb
pusha
dec
cwtl
adc
mov
xchg
test
jo
aas
loopne
std
mov
sub
push
enter
les
es
dec
into
sub
out
mov
shr
test
pop
xchg
mov
mov
pop
xor
push
shrl
xchg
xchg
ret
adc
add
xor
push
inc
adc
movsb
jp
clc
leave
jmp
outsl
lods
and
jge
rcrl
pop
adc
inc
jno
aas
movsl
daa
adc
jno
or
cmp
lcall
stos
loop
inc
mov
add
roll
lret
je
fwait
in
popa
mov
mov
adc
fstp
cmp
jecxz
mov
lock
cmp
fisttpl
in
sub
ss
test
data16
addr16
pop
mov
js
mov
out
push
jnp
inc
lret
cmp
mov
insb
cmpsl
insl
imul
inc
mov
inc
jl
push
mov
lcall
dec
mov
push
push
int
lods
push
add
movsb
sub
aaa
pop
fsubrl
outsl
fisttps
push
push
and
mov
dec
mov
ficoms
js
jnp
shl
xchg
ficoms
cmpsb
adc
mov
mov
mov
sub
aam
out
pushf
fldenv
or
or
or
leave
cmpsl
cmpl
xor
xchg
cld
dec
jbe
lret
xor
mov
jns
mov
aam
imul
dec
jg
inc
loope
outsl
or
scas
push
inc
enter
ljmp
xor
pop
and
pop
push
das
cmp
inc
mov
repnz
sbb
mov
insb
loopne
and
jno
imul
cmp
stc
pop
xadd
shl
or
pop
xchg
inc
push
push
adc
xchg
xchg
pushf
ret
lods
outsb
frstor
lahf
data16
jns
inc
rcll
icebp
inc
cmp
add
sbb
aaa
aaa
and
daa
dec
adc
aaa
movsb
and
adc
cmp
lds
faddl
cmpsl
loope
pop
out
pop
mov
push
dec
popa
movsb
pop
xchg
sbb
jl
repz
and
add
out
mov
int3
cwtl
push
rcll
cmp
mov
mov
sbb
ja
mov
repnz
dec
inc
adc
xchg
ja
mov
out
xchg
push
mov
xor
aam
inc
adc
nop
dec
lods
gs
outsl
call
sbb
sbb
and
mov
pop
jns
or
mov
sub
or
inc
icebp
sub
bound
mov
rcl
imul
stos
pop
mov
out
pop
shr
shll
fwait
push
outsb
or
inc
test
test
push
mov
push
nop
add
add
cmpsl
mull
xchg
push
repnz
popf
ficoml
mov
or
les
cmpsl
cwtl
push
fcmovnbe
ss
insb
inc
mov
fnsave
mov
sbb
or
add
fldt
movsb
jle
sbbl
push
into
insl
jne
fistpll
adc
loope
or
mov
lods
repnz
dec
les
imul
lahf
push
sub
lcall
sbb
mov
xor
mov
and
repnz
dec
outsl
outsb
mov
and
sbb
inc
iret
and
shrb
inc
xchg
cs
cmc
mov
ljmp
pop
push
mov
dec
test
adc
shl
lock
mov
je
icebp
xchg
push
insb
clc
mov
add
fs
inc
pop
adcb
mov
insl
loop
sahf
gs
cmp
jge
mov
sub
mov
orb
xor
adc
aaa
insl
cli
adc
push
mov
inc
lods
push
push
and
mov
cltd
stos
out
xchg
push
jge
cmp
in
negl
cmpsl
or
inc
and
inc
rcrb
lret
scas
ffree
or
in
cltd
icebp
adc
sarl
jecxz
push
push
nop
mov
inc
fcomps
push
cmove
push
and
loopne
mov
ficompl
mov
idiv
dec
adc
xor
dec
test
lods
add
sbb
fidivrs
sbb
xor
ja
xor
pusha
stos
negl
add
pop
xchg
pop
sub
into
sub
push
cmc
sbb
cmp
jmp
fcmovu
cmpsb
cli
pop
jae
sarl
inc
sub
incb
add
addb
push
out
in
ret
int3
imulb
out
mov
cmpsb
pop
xorl
cltd
jo
stc
xor
jb
dec
fimull
xchg
out
mov
imul
lret
push
in
sbb
mov
fstl
xor
aad
fadd
pop
fsubl
scas
bnd
icebp
repz
lea
popa
in
adc
cmpsb
jo
xchg
push
and
mov
cs
and
lea
jo
adc
into
adc
mov
sbb
and
sahf
jmp
sbb
or
inc
aam
in
lock
scas
adc
loope
mov
pop
inc
mov
jnp
inc
cmp
jg
mov
pop
out
cli
test
cwtl
arpl
push
xor
xchg
jle
sub
loopne
mov
ret
icebp
lods
jge
dec
xlat
sub
or
mov
in
aad
adc
add
cltd
ds
adcb
push
cltd
call
xor
add
ljmp
cmpsl
jecxz
cmp
pop
test
enter
inc
push
mov
inc
jno
iret
xchg
xacquire
arpl
mov
inc
ljmp
push
mov
mov
inc
fs
repz
mov
out
inc
cmp
and
out
mov
push
lret
rcl
imul
push
add
jmp
cmp
fisubrl
and
call
pop
test
or
loope
xchg
adc
pop
jecxz
cltd
inc
sub
filds
fmul
hlt
ds
ja
jnp
cwtl
test
mov
sar
mov
out
or
or
loope
popl
fldenv
negb
inc
les
pop
out
fcomp
jp
sahf
scas
xor
int3
sub
push
adc
cmp
cmp
mov
mov
stos
inc
mov
xchg
push
addb
fstl
ret
sub
xchg
dec
mov
mov
pop
mov
mov
cmp
inc
icebp
and
hlt
inc
or
stos
repnz
mov
sbb
jb
push
imul
xor
iret
jno
xchg
mov
or
mov
addb
xchg
shll
inc
sets
xor
mov
aad
xchg
int
cwtl
adc
add
adc
and
subb
fwait
cmp
out
inc
popa
mov
jb
xchg
cmp
cltd
inc
std
mov
and
mulb
xchg
pop
ret
popa
mov
xor
stc
or
push
sub
adc
mov
shll
mov
repnz
repnz
fcmovnb
mov
decl
mov
jmp
subb
mov
add
adc
push
repz
push
inc
imul
lret
cmc
out
sub
and
jae
dec
stc
push
sbb
dec
les
xor
dec
neg
and
mov
iret
bound
out
icebp
imul
dec
outsb
inc
popl
pop
sti
ret
xor
jg
xchg
nop
je
jmp
sti
aas
movsb
ss
lock
and
stc
shll
mov
pop
jl
shrb
ja
sbb
xchg
pushf
or
lea
and
in
inc
rorb
fst
jbe
dec
inc
xchg
fwait
insb
jnp
shlb
clc
popa
push
dec
js
xchg
dec
mov
pop
shlb
xor
jle
xlat
xchg
mov
mov
dec
out
cs
out
lret
push
mov
pop
cmpsl
and
sarb
stc
push
sbb
add
bsf
dec
xchg
js
arpl
cmp
push
or
rcll
inc
addb
lds
out
or
movsl
adc
dec
in
jle
les
je
bound
mov
and
outsb
xor
pop
fdiv
test
js
mov
dec
or
jecxz,pt
xor
push
mov
or
inc
jecxz
mov
shrd
jb
adc
in
imul
jmp
xchg
jno
loope
cmp
mov
leave
sti
adc
pop
mov
scas
cld
push
scas
adcl
xchg
ffree
ret
jno
in
pop
movsw
ljmp
ret
js
push
xor
popf
in
adc
lds
imul
les
dec
mov
in
out
or
mov
push
sbb
dec
sbb
mov
cmp
lods
ret
push
or
add
and
mov
pop
icebp
das
cmpsl
push
xchg
cmp
mov
roll
cltd
cltd
add
inc
mov
dec
sub
jnp
test
repz
or
pop
dec
rcrb
out
push
cmpb
negb
cmp
iret
into
mov
push
mov
lock
out
call
mov
mov
add
std
fldcw
jecxz
je
shlb
cmp
jbe
jbe
dec
enter
aad
inc
push
xor
lcall
and
aas
test
pop
add
dec
test
sahf
mov
mov
sub
test
loopne
xchg
mov
out
or
ret
cmp
push
ljmp
popa
mov
or
inc
dec
mov
movsw
lcall
out
ljmp
mov
jns
inc
inc
adc
sbb
leave
out
cmpsb
pop
mov
xlat
sbb
or
sbb
push
pop
shlb
call
xchg
push
pusha
cli
les
xchg
xlat
jl
xor
ret
mov
mov
cmc
jmp
cwtl
mov
imul
push
pop
ret
xor
outsb
outsl
xchg
insl
incb
lods
cmp
loop
mov
js
jne
imul
mov
imul
aaa
xchg
push
sub
loop
xchg
add
ljmp
pop
ds
aam
jbe
add
lods
cmp
adc
or
xcrypt-ctr
cmpsl
pop
or
mov
das
int3
insl
mov
js
dec
xor
xchg
mov
jmp
mov
mov
pop
insl
fstpt
sub
pop
imul
mov
lds
ss
xor
cmpps
mov
fs
cmp
or
mov
xor
sbb
lahf
ret
xchg
cld
iret
xor
dec
loopne
adc
aad
lods
mov
mov
sar
pop
xchg
push
lock
in
mov
push
sbb
sahf
sbb
jo
pop
mov
lret
nop
cs
dec
repz
or
sarl
jp
lret
into
sub
jle
es
mov
movsb
add
sbb
pop
fldl
mov
adc
jnp
jl
push
sub
flds
push
jno
sti
jns
or
fmuls
mov
je
shlb
mov
jne
mov
sub
popa
movsl
loop
cld
mov
imul
mov
and
sbb
jmp
pop
cmp
loop
and
decl
outsb
cli
adc
jl
add
dec
mov
out
mov
lcall
loopne
pop
jge
pop
int3
adc
lea
mov
imul
push
mov
add
shrb
mov
xor
ret
lahf
sub
popf
imul
pushf
call
arpl
sbb
repz
fsub
sahf
sbb
inc
mov
leave
dec
xor
push
pop
out
movsb
inc
pusha
jne
jle
adc
aas
shll
ret
int
and
jmp
out
xor
in
and
mov
push
xor
dec
fucom
in
mov
rcr
xor
test
sbb
in
mov
out
xchg
pusha
sbb
xchg
fistpll
loopne
mov
stos
pop
mov
mov
xchg
sti
inc
adc
sub
cmpsl
and
mov
stc
pop
enter
icebp
xchg
clc
or
lds
push
scas
xor
jne
das
push
cli
mov
mov
mov
cs
sbb
sbb
sbb
cs
xchg
rcrb
mov
mov
add
inc
je
cs
adc
das
pop
stos
iret
dec
fnsave
popa
cld
jecxz
add
xlat
mov
incb
mov
mov
js
das
cmp
fisttpl
and
sub
test
cmc
lahf
push
pushw
gs
jmp
ds
verw
shl
dec
mov
xchg
inc
je
mov
dec
xchg
mov
dec
fldl
sar
decl
xchg
pop
pop
or
or
dec
xchg
setg
push
repnz
xchg
cmpsb
jge
cltd
enter
out
cmp
mov
push
push
aaa
pop
test
data16
repz
adc
mov
jge
loop
inc
sti
add
xor
cltd
fwait
adc
jmp
sti
mov
leave
lods
inc
inc
scas
aas
sub
arpl
rclb
arpl
call
pop
mov
push
or
and
xor
xchg
aaa
test
fidivl
mov
cmp
orb
mov
jle
lret
push
test
pop
adc
test
fscale
subb
addr16
xchg
shll
cmp
int
inc
pop
lcall
enter
add
add
adc
incb
enter
mov
xor
leave
cmp
hlt
sarl
and
mov
xchg
pop
sbb
mov
sub
es
mov
mov
cmp
adc
push
mov
es
stos
not
insb
div
cmp
popf
popf
shl
mov
sub
fldenv
push
and
inc
sub
ret
xor
out
xor
or
push
and
mov
pop
dec
pop
cltd
mov
pop
in
xchg
in
in
dec
outsb
inc
xlat
cmp
pusha
adc
pop
push
loope,pn
rol
mov
xor
fcomps
enter
xor
test
test
loope
repnz
outsl
pop
inc
add
xchg
dec
cmpsl
ljmp
xor
mov
mov
lds
pop
fistps
pop
int3
push
xchg
outsb
or
ffreep
adc
in
and
fidivrl
daa
pushf
lea
gs
pop
sub
jmp
inc
in
dec
mov
adc
sti
push
mov
and
xchg
mov
pop
pop
arpl
fwait
xor
or
cwtl
test
ja
adc
imul
pop
mov
pop
adc
inc
aas
fucomip
aas
mov
push
fisubrs
addr16
push
mov
sub
xchg
stc
in
dec
jecxz
jbe
cld
sbb
push
push
push
inc
mov
mov
leave
lds
fstl
rcl
fcoms
cld
out
dec
jae
pop
push
in
and
pusha
icebp
adc
dec
enter
jp
mov
push
mov
and
xchg
cmpsl
sub
sub
xchg
clc
fsubrl
in
mov
arpl
dec
lea
testb
xchg
cltd
call
inc
leave
pop
push
push
pop
in
cld
lcall
pushf
imul
popa
add
cmp
add
cmpsl
scas
pop
mov
jecxz
xchg
jmp
mov
das
call
push
sub
stos
cwtl
cmp
into
jne
out
dec
jae
scas
adc
cli
test
gs
cmp
xor
and
pop
subb
fildl
popf
mov
in
fisttps
shrb
dec
in
rcrl
popa
ret
push
or
or
aam
insl
in
lcall
or
test
add
movsb
cmc
cltd
add
arpl
and
and
shll
cmp
and
cmp
inc
mov
mov
adc
xchg
mov
inc
in
mov
and
fnstcw
xor
inc
into
push
testl
shll
push
repz
push
adc
lods
pop
add
jno
ret
and
cmp
sub
pop
jb
rol
xor
out
cwtl
aas
push
ret
cmp
dec
cwtl
shll
push
cwtl
adc
fbld
pusha
je
xchg
and
push
push
sbb
sub
or
xchg
jne
jp
adc
hlt
iret
mov
add
pop
inc
fcmovne
jns
xor
pop
dec
enter
xchg
or
cltd
jge
dec
movsl
jle
xchg
xor
mov
lret
dec
pusha
movsb
rclb
mov
stos
mov
int3
cs
or
arpl
mov
js
loop
xchg
xor
sbb
or
sub
lea
repnz
sbb
add
xchg
jnp
movsb
cmp
fsts
inc
xor
jmp
iret
daa
sub
jecxz
adc
test
cli
sub
aad
out
mov
insl
movsl
subb
fcomp
icebp
fistpl
adc
cld
hlt
xchg
pushf
addr16
cmpsb
and
es
pop
popf
or
sub
jg
lods
imul
dec
cmp
sarl
in
xchg
pop
mov
test
xor
aam
push
sbbl
arpl
pop
or
inc
sbb
push
lret
add
xor
push
and
popf
pop
lahf
and
out
xchg
xor
inc
or
aaa
fisubl
test
pop
xor
mov
jp
jmp
out
sbb
mov
lock
dec
xchg
iret
inc
xchg
test
xchg
inc
sbb
jge
xor
jnp
xchg
cmp
into
aad
inc
dec
sub
aas
jl
jno
sub
popf
pop
imul
fdivr
mov
xor
sbb
scas
xor
jecxz
adc
mov
negl
repz
jb
xchg
aas
and
mov
or
pushf
jo
dec
jp
cltd
sub
enter
sbb
inc
mov
dec
push
in
fsubrl
xor
dec
dec
pop
test
fcomi
test
dec
jl,pn
jg
mov
mov
repz
jmp
div
mov
jno
inc
jns
pop
fdivrl
sub
or
cli
lret
mov
push
push
js
in
xchg
mov
pop
sub
inc
push
dec
mov
xchg
jmpw
push
push
les
adc
mov
mov
mov
mov
pushf
int3
mov
icebp
rol
xor
pop
sti
jle
push
pop
and
aaa
dec
icebp
push
in
jp,pt
sub
stos
pop
clc
add
fwait
lret
and
sbb
aaa
add
dec
or
lds
jecxz
in
mov
xchg
cli
outsb
mulb
stos
movsl
push
shll
stos
les
fisubl
outsl
push
xchg
dec
xor
jbe
imul
pop
pop
and
ss
mov
and
dec
mov
bound
or
pop
movsl
mov
inc
jp
int
fcoml
pushf
mov
mov
fs
cmp
scas
lret
es
xchg
push
jbe
add
push
xchg
push
mov
mov
mov
or
and
lods
movsb
lods
and
testb
inc
cmp
mov
movsl
pop
or
fcmove
loop
ljmp
movsb
mov
add
or
ficomps
and
adc
std
add
and
or
call
pop
jo
es
cmp
jmp
dec
pop
and
xchg
cli
dec
out
dec
inc
xchg
xor
movsb
imul
or
pop
pop
int
mov
cmc
sahf
pop
cmp
and
cmc
pushf
lods
xchg
stc
pop
adc
sbb
xor
fldt
repz
sbb
jecxz
or
cmp
movsl
in
mov
cmp
imull
insb
dec
add
test
lret
pmullw
inc
loopne
cmp
push
divl
aad
dec
xchg
imul
mov
lahf
pop
lods
xor
xchg
lret
jge
aaa
and
test
adc
test
adc
cmc
mov
int3
cwtl
xchg
lods
movsb
subb
pop
adcl
push
in
adc
cmp
sbb
iret
adc
push
jmp
gs
lds
cmpsb
jmp
add
mov
pop
shlb
lock
loope
mov
out
fisubrl
push
cltd
lret
dec
mov
cmp
stos
sub
add
negb
mov
mov
pop
int
inc
adc
inc
adc
cmpsl
sti
xor
mov
mov
out
pop
out
daa
je
push
les
repnz
ficompl
sbb
xor
jp
scas
pop
cmc
mov
or
clc
pushf
cmp
jns
and
mov
and
cli
popf
sbb
jnp
jle
mov
mov
sbb
or
repz
jns
fbstp
fucomip
pop
adc
aad
inc
cmp
mov
cli
insl
xor
sbb
pop
stos
outsb
cltd
int3
sub
add
pop
mov
or
popa
imul
imul
pop
jo
xchg
push
cld
mov
aas
pop
rcrl
cwtl
xor
imul
inc
mov
cld
dec
push
movsl
sub
xchg
add
push
das
xchg
dec
pop
push
pop
xchg
das
jo
fadd
stc
adc
repz
cmp
pop
or
pop
push
or
jg
out
imul
out
mov
sbb
fnstenv
jmp
scas
inc
sbb
es
das
push
loop
mov
int
out
mov
or
inc
mov
sbb
dec
add
dec
mov
push
push
mov
mov
mov
lcall
push
pop
and
inc
and
hlt
aam
sbb
lock
fidivrs
pop
lahf
sbb
pop
dec
cmp
jae
gs
and
test
ja
shlb
in
xor
adc
or
imul
test
pop
jg
inc
sbb
mov
add
pop
jecxz
and
pop
push
pop
pop
xor
add
push
cltd
fnstcw
adc
mov
stc
cmp
xor
roll
rcr
ret
icebp
inc
mov
ret
mov
sti
ja
divb
repz
cmc
xchg
cmp
mov
pop
xor
repz
pop
cmpsb
lret
pushf
stc
push
inc
insb
fcompl
addr16
cltd
inc
pop
ret
jecxz
mov
rorl
je
icebp
fwait
cmc
and
mov
lods
dec
push
push
loopne
lfs
insb
mov
sbb
scas
sbb
xchg
pop
arpl
push
scas
popf
mov
mov
inc
mov
xchg
fnstcw
lods
jge
jecxz
xchg
ret
mov
cs
into
xchg
lea
mov
or
mov
adc
sub
fildll
out
lock
xor
pop
sbb
subb
cld
fidivrl
cmp
add
sub
nop
cmpsl
rcl
out
jmp
lret
inc
mov
stc
mov
mov
push
and
repz
cli
sbb
cltd
mov
and
push
imul
mov
out
mov
ret
in
rorb
jb
and
cwtl
xor
pop
popf
imul
fistl
test
ret
aam
fwait
aaa
aaa
loope
or
int
aam
leave
xor
sbb
push
fnstenv
add
push
push
icebp
in
call
test
mov
stos
jb
dec
push
push
xchg
cmpsb
loope
hlt
adc
push
add
ret
sbb
into
enter
cmpsb
mov
mov
mov
lds
xlat
push
jb
pop
xchg
out
sub
imul
in
xchg
fildl
and
sub
pop
nop
mov
xchg
inc
sbb
js
mov
sub
out
add
push
sbb
cmp
xchg
push
and
cli
insb
loopne
mov
stc
popf
push
jmp
cmpsl
fistpl
push
add
cmp
test
andl
mov
cmc
mov
jno
dec
mov
je
pop
ret
mov
mov
add
xorl
sti
add
pop
dec
notl
mov
loop
cmpl
push
rcrl
and
or
test
movsb
call
xchg
inc
pop
xchg
movsl
leave
push
stc
imul
cmc
stc
push
mov
rcr
jnp
jb
shlb
push
fwait
bound
inc
or
sub
sbb
sub
fcmovnbe
and
rorl
pop
mov
and
lods
mov
mov
xchg
pop
imul
lds
xlat
sbb
xor
mov
pusha
call
xlat
out
adc
fmull
adc
ret
das
mov
bound
notl
dec
mov
or
pushf
shl
sbb
inc
mov
xchg
hlt
push
ss
inc
pop
and
in
dec
shr
inc
jg
enter
cmpsl
dec
jecxz
dec
jns
fmull
ljmp
addr16
shll
rol
mov
cli
lcall
push
fsubrs
fwait
and
inc
sbbl
mov
mov
nop
xorl
push
ljmp
inc
pop
xchg
mov
xorl
ss
imul
xchg
cmp
pop
jne
jo
adc
loope
adc
ds
stos
xchg
cld
movb
movsb
sbb
into
lcall
inc
repz
popa
jb
rol
and
lea
pop
sarb
cmpsb
cwtl
aam
movsb
fnstcw
sbb
push
adc
imul
mov
jl
outsb
test
dec
std
push
jecxz
dec
xchg
mov
mov
dec
push
mov
or
mov
mov
ds
push
insb
ficoms
in
or
jle
mov
mov
xchg
sbb
fisttps
cmp
icebp
into
in
nop
push
scas
roll
xchg
xor
ss
push
pop
das
xor
into
mov
lret
and
popf
fbld
add
mov
pop
test
and
pop
or
filds
loop
dec
xor
and
jmp
adc
iret
ss
test
nop
popl
add
sbb
sbbl
mov
adc
jl
cld
adc
add
out
aam
jp
dec
mov
or
sub
lahf
adcb
arpl
lock
pop
icebp
jne
insb
cmpsl
stos
inc
mov
or
mov
mov
rclb
inc
enter
fildll
ret
inc
adc
cmpsb
sbb
xor
movsl
dec
add
sub
iret
jne
jle
loop
test
fstpt
pop
push
arpl
les
sub
inc
pop
or
dec
xor
in
icebp
add
fcmove
enter
std
aad
inc
cs
sbb
xor
push
pop
popf
cmp
adc
repz
xor
push
mov
xchg
sub
out
cmc
fsubrl
pop
rclb
cbtw
repnz
cmp
in
or
and
fmull
das
in
mov
leave
pop
inc
add
lret
sub
dec
adc
jb
cmpsl
adc
pop
imul
pop
lods
mov
rorl
mov
add
push
adc
cmp
and
movsb
out
rclb
repz
inc
inc
cld
inc
insl
inc
sbb
popf
cmp
rol
shl
pop
jg
not
adc
js
xlat
hlt
cmc
mulb
js
lea
sbb
gs
call
or
data16
add
push
lock
stos
mov
jmp
mov
cmp
cmpsb
pop
or
ret
sbb
pusha
icebp
sbb
ret
sub
pop
sub
mov
sub
sub
dec
xchg
or
pop
aas
faddp
inc
jmp
pop
adc
in
imul
ljmp
dec
clc
sti
mov
push
xor
lds
cli
xchg
xlat
push
jle
aam
xlat
call
roll
and
outsl
popf
add
pop
jne
adc
outsb
adc
pop
or
int3
mov
jmp
arpl
pop
mov
ss
xchg
or
sbb
das
mov
or
movsb
xchg
pusha
or
js
fstenv
inc
das
fldcw
mov
ss
in
int
cltd
ss
lods
int3
dec
gs
pusha
fcomp
sbb
outsb
lret
test
int3
dec
push
or
dec
lea
dec
cltd
cmp
lds
push
xchg
and
jmp
inc
or
shr
xchg
xchg
mov
loope
xchg
insb
or
test
jecxz
repz
loope
popf
cmc
push
cmp
mov
sub
repnz
hlt
pop
test
lahf
fcmovb
cmpsb
cmpb
dec
popf
in
aad
ljmp
inc
inc
cmc
repz
nop
cltd
xchg
jle
inc
xor
mov
jo
and
ret
fdiv
in
push
cmp
xchg
mov
loopne
out
and
xchg
cmp
rclb
sub
dec
sbb
jmp
mov
adc
pop
sbb
jp
test
scas
mov
jae
and
loop
push
pop
push
mov
pop
lods
mov
jo
in
cmp
push
imull
dec
movsb
jns
bound
or
je
jecxz
testl
outsb
jb
rcll
adc
enter
push
and
outsb
fcmovbe
in
in
xchg
mov
jg
xor
and
push
push
cmp
or
xchg
into
pop
xor
jnp
in
pop
cld
dec
jmp
push
xor
clc
insl
jnp
repz
je
scas
fs
test
js
dec
sbb
das
and
mov
mov
mov
cmp
js
pop
lcall
xchg
es
paddusb
jge
ljmp
shl
rcl
loope
push
xor
adc
add
jne
outsw
in
jo
mov
mov
cli
aaa
in
repnz
out
adc
jno
mov
outsl
xchg
push
and
xchg
hlt
jns
add
mov
leave
test
sti
cli
push
mov
mov
shrl
ljmp
and
add
mov
movsl
lock
sub
xchg
dec
inc
pusha
push
mov
inc
xchg
pop
es
xchg
jge
push
sub
push
cs
xchg
scas
jmp
inc
jecxz
xlat
sbb
addr16
or
imul
mov
xor
fwait
ljmp
fsubs
add
rorl
cmpsl
daa
je
pop
es
mov
xchg
cs
testl
nop
push
pop
ja
int3
test
jbe
mov
jge
sub
mov
call
mov
daa
aam
out
or
pop
or
enter
inc
pop
push
out
pusha
cld
pop
adc
das
int
push
mov
pop
loopne
into
addr16
pop
or
cli
cmp
inc
pop
add
lret
faddl
imul
lock
sbb
jbe
mov
test
add
inc
das
push
jl
sbb
dec
mov
es
jg
jmp
jnp
testl
mov
sti
pop
add
mov
xor
out
insb
jno
mov
cmp
aaa
call
cmc
cs
pop
dec
mov
sbb
xchg
and
lahf
jne
or
add
xor
mov
add
sti
pop
push
mov
rcrb
iret
aas
fsubp
scas
push
das
cmp
xor
or
inc
ja
sbb
mov
sbb
push
adc
pop
push
popf
scas
stos
pop
add
aam
dec
arpl
pusha
dec
aas
and
dec
repz
and
ret
sahf
xchg
fdivs
pop
mov
sub
xor
cmpb
dec
insl
fnstcw
xchg
dec
push
dec
mov
pop
cmp
mov
mov
sub
sub
pusha
clc
push
or
jge
dec
push
jns
xchg
les
pop
inc
lea
das
dec
jge
jns
mov
or
in
jl
add
xor
lret
test
test
and
test
cmc
sub
jge
into
xor
push
xchg
subb
scas
mov
imulb
mov
std
movsb
adc
and
lock
mov
push
and
sbb
mov
dec
mov
inc
loopne
jo
push
mov
aas
pop
adcl
fwait
mov
push
or
sbb
shlb
data16
test
xor
xorl
mov
sbb
lahf
and
dec
sub
inc
out
in
out
fmull
clc
jne
testb
jbe
mov
mov
leavew
and
mov
push
xchg
cmp
push
insb
mov
negb
push
aas
shl
iret
pop
sarl
ss
xchg
inc
inc
lcall
roll
pop
lahf
popf
lods
mov
fwait
xor
ja
cltd
add
aas
jmp
cwtl
movsb
aad
sub
push
stos
das
mov
sub
loope
jmp
adc
mov
cli
ret
jmp
add
cmpsl
sbb
jno
ret
dec
mov
push
adc
or
int3
xchg
mov
out
das
test
ret
js
add
das
add
and
add
lods
mov
cmp
pop
mov
pop
lea
movsb
std
popf
repnz
clc
iret
int3
dec
sbb
fmuls
pop
pushf
sbb
rol
pusha
test
add
or
ss
sbb
adc
daa
or
xor
or
push
xchg
fnstsw
lret
xor
cmpsl
mov
xor
push
sti
lret
pop
int
ficoml
lods
outsl
ret
and
xchg
fs
or
push
push
sub
push
cmpsl
cmc
dec
inc
mov
pop
adc
sbb
sub
push
xor
push
pop
cmp
pop
mov
adc
je
data16
lahf
mov
in
stc
jp
xchg
push
push
cltd
cmp
outsl
movsb
ret
pop
sub
test
cmp
call
popf
dec
shll
cmp
addr16
mov
aad
inc
mov
ret
aad
popa
pop
in
mov
rcrb
dec
mov
push
or
orl
dec
imul
xadd
mov
dec
rorl
or
lret
cmc
divb
mov
mov
sbb
mov
mov
pop
std
cltd
sbb
clc
arpl
adc
xor
cwtl
pop
sbb
loope
inc
popf
mov
addb
lods
leave
rcrl
sub
loope
roll
fs
lea
insl
sub
jecxz
xchg
and
into
xor
sbb
jbe
gs
daa
push
pushf
fadds
sbb
fistl
inc
mov
mov
and
mov
inc
cmp
xlat
jl
idiv
cmpsb
mov
in
repnz
push
xchg
xchg
add
jle
dec
inc
shl
aaa
lods
adc
pop
lods
push
mov
push
loopne
push
sbb
stc
fildll
sub
xor
or
lahf
pop
mov
mov
push
or
adc
mov
xorl
daa
inc
stc
or
sbb
mov
aad
test
out
mov
imul
call
cmpsl
mov
or
jmp
sbb
jmp
aam
bound
fldl
jecxz
loopne
adcb
test
imul
jo
fdivs
pop
mov
std
cltd
jno
shrb
std
aad
push
cs
adc
inc
or
mov
icebp
jp
fidivrs
adc
enter
sub
fsubrl
mov
iret
in
xlat
add
aas
fwait
mov
sar
aaa
xor
jg
sbb
mov
pop
xor
mov
std
aad
aam
fdivr
cmp
sbb
inc
cmp
adc
inc
push
mov
fcomip
sahf
dec
movsl
movsl
orl
lret
shr
fwait
push
sbb
jg
jbe
fstpt
fsubl
rcr
pop
dec
mov
mov
xor
inc
jle
mov
test
lods
scas
pop
fldln2
out
mov
rol
or
lods
cmpsb
sahf
fstpl
sbb
fs
xor
in
lods
adc
shlb
iret
ret
jmp
xor
mov
lret
xor
inc
inc
inc
lcall
adc
and
rcrl
iret
cwtl
std
stc
adc
lcall
push
cmp
lock
addb
test
rorb
loop
and
pop
pop
pop
les
push
xchg
pop
mov
inc
and
push
and
dec
or
xchg
xor
test
cmpsb
jbe
mov
sub
dec
adc
add
mov
lcall
jl
stos
inc
xchg
dec
or
lods
rcrl
mov
mov
jle
dec
xorb
sub
mov
or
je
aad
and
ljmp
jg
cmp
mov
pop
sbb
out
mov
mov
mov
mov
pop
fwait
cmp
int3
mov
lcall
inc
nop
mov
adcl
add
roll
sub
xor
das
or
dec
push
nop
inc
pop
fldenv
add
andl
lret
adc
leave
mov
pop
fcoml
lret
js
push
pop
in
cltd
xor
jns
and
push
cmc
stos
or
cmpsl
popa
leave
pop
pop
rolb
sub
pop
in
cltd
push
xchg
addr16
sar
aaa
cmp
mov
xchg
cmpsl
clc
dec
xchg
inc
lcall
xchg
out
cs
in
arpl
push
xchg
mov
shll
dec
je
xor
sbb
icebp
push
cmpsl
and
or
or
sub
rclb
mov
jle
cs
fs
fs
decb
adc
adc
mov
mov
pop
xchg
popa
lods
jns
add
insl
adc
dec
add
in
mov
fcoms
mov
sti
xchg
outsb
lcall
and
mov
inc
cmp
std
cli
loope
cltd
ss
xchg
jb
adc
mov
lret
stos
mov
adc
jne
cmp
cli
test
cli
xor
mov
fwait
cmp
js
xchg
ret
aam
rolb
js
jle
push
aaa
pop
jmp
stos
loopne
jmp
sbb
movsl
lock
lods
push
outsl
mov
hlt
pop
loopne
test
shl
add
and
add
rolb
test
xchg
jb
push
pop
xchg
fistps
adc
mov
out
inc
cmpsl
sub
int
arpl
and
xor
push
xchg
cli
ja
pop
loope
mov
stc
add
sbbb
inc
ret
sub
dec
mov
dec
out
arpl
loopne
inc
and
jo
ficompl
dec
push
insb
test
cld
pop
mov
imul
pop
scas
push
jl
sub
mov
test
pop
jnp
xchg
and
sbb
push
ret
outsb
sub
mov
lea
jle
jp
and
sub
mov
push
mov
dec
mov
stc
sbbb
aam
jmp
cmp
mov
fs
stos
dec
pop
push
sub
mov
push
sub
adc
inc
lret
cmp
stc
aas
mov
loop
and
test
je
xchg
xchg
pop
dec
add
pop
daa
inc
repnz
subb
sarl
aad
xchg
inc
in
jge
add
or
lea
jbe
pop
pop
mov
repz
orl
mov
cmpb
bound
aam
and
call
shl
cmp
sti
out
ja
nop
xor
or
cmpsl
es
imulb
repz
movsb
mov
addr16
xchg
push
mov
mov
loopne
dec
sub
inc
lea
push
out
popa
gs
testb
test
lret
dec
fidivrl
and
out
inc
cmc
or
mov
pop
fwait
mov
mov
push
adc
sbb
loop
gs
test
iret
pop
int3
movb
and
and
mov
mov
fwait
loop
mov
insb
mov
or
lahf
pop
add
adc
xchg
repz
shll
int
inc
mov
icebp
clc
jle
xor
cwtl
jg
aas
in
jecxz
pusha
push
cmp
adc
or
xchg
mov
subl
inc
jnp
sub
mov
aad
add
sbb
xchg
fldlg2
arpl
inc
jp
inc
pop
fisubrl
xchg
arpl
lock
push
pop
pop
sbb
inc
mov
call
xchg
insl
ficompl
loop
ss
mov
pushf
ljmp
sbb
stc
pop
subl
push
mov
ljmp
jg
iret
cmpl
inc
mov
xchg
sbb
inc
pop
push
mov
xor
out
fadd
and
pop
fbld
and
sbb
pusha
popf
cltd
loop
lock
dec
pop
pop
int
xor
mov
fstps
add
idivl
add
mov
cmp
ret
divl
shrb
les
pop
push
pop
das
sub
out
jne
sbb
jbe
xor
daa
jg
in
jp
test
sahf
mov
enter
xor
xlat
sub
fstpt
fdivrs
xchg
inc
mov
fisttps
mov
shlb
pop
stos
aaa
mov
or
lds
out
mov
in
mov
lds
aas
lcall
push
sbb
mov
fwait
lahf
xor
cmp
ss
adc
mov
dec
std
gs
mov
scas
xor
int3
repz
stos
jb
dec
cwtl
xor
iret
ret
xor
mov
mov
push
in
daa
scas
int3
and
sbb
or
leave
jle
pop
mov
je
push
shll
jmp
pop
or
adc
xchg
pop
icebp
lahf
and
enter
pop
loope
cmpsl
xrstors
and
in
sbb
adc
xorl
or
negb
cmp
adc
mov
ja
mov
xor
loope
add
repnz
mov
and
add
daa
cmp
dec
jbe
repz
in
jp
and
sbb
iret
adc
mov
mov
dec
imul
dec
mov
fsts
jmp
sub
mov
mov
xchg
lret
xchg
mov
mov
cs
loope
out
jae
movsb
fadds
sub
inc
es
es
lahf
jnp
sbb
mov
test
push
pop
xchg
sub
scas
fistl
jnp
cmpsl
subb
mov
mov
in
add
push
push
mov
jmp
xchg
fdivrp
shlb
dec
idivb
in
and
out
jbe
cli
bound
int
aas
mov
loope
in
sub
xor
xchg
sbb
push
imulb
xchg
int3
movsb
loopne
adc
daa
lea
pop
in
xor
enter
imul
dec
dec
loop
lds
lret
sub
cs
shr
movsl
lret
jo
dec
out
aam
xlat
inc
add
xchg
push
sub
or
lods
loop
mov
rcr
sub
lods
cli
loope
or
jmp
cwtl
pop
inc
push
pop
leave
imul
in
movl
xorl
adc
xor
test
inc
stc
and
sub
shrl
adc
pop
pop
jae
sbb
mov
adc
insl
or
jle
mov
dec
clc
xchg
sbb
popa
dec
arpl
imul
stos
and
mov
gs
repnz
nop
outsl
test
dec
insb
pop
call
cmp
repnz
in
xor
inc
push
fcomi
xor
imul
fistpll
data16
aam
xchg
and
les
testb
roll
jae
push
inc
jmp
push
cwtl
jmp
bsf
mov
sahf
nopl
mov
add
inc
das
dec
xor
sub
ror
cld
test
jns
xlat
scas
cmp
shlb
fninit
sub
add
hlt
adc
or
jns
mov
inc
in
cmp
mov
loopne
movsl
push
daa
inc
inc
es
cmp
pop
xor
sbb
mov
movb
sahf
cmp
xchg
sbb
sub
lret
cmovbe
fildl
pop
sbb
sti
or
cwtl
ret
and
jnp
sbb
lods
mov
mov
lret
mov
cmp
sbb
xor
incl
out
lret
aas
and
inc
stos
mov
pusha
pop
push
fdiv
jmp
addr16
mov
jmp
pop
xchg
mov
cmp
subl
imul
mov
pop
test
mov
mov
sbb
mov
xchg
addb
jl
add
sub
dec
in
imul
xchg
jecxz
xchg
fists
mov
jns
imul
movsb
lea
nop
xchg
xor
jns
mov
dec
shrl
cmp
mov
enter
rorl
pop
leave
ret
jns
iret
dec
push
sbb
jbe
out
inc
pop
loope
mov
loop
ja
fisubrl
pop
inc
inc
jo
pop
movsb
ret
inc
lret
push
xor
adc
pop
addb
sub
adc
fnstcw
mov
js
xor
push
std
sarl
fcoms
xchg
lahf
clc
pusha
loop
mov
stos
movsl
inc
ss
loop
stc
jbe
xor
mov
ds
jle
lahf
xchg
shrl
fs
js
sbbb
and
xor
int
xchg
inc
xchg
pop
xchg
lcall
sub
mov
jne
stos
lret
loop
add
sbb
xchg
loop
in
mov
xor
xchg
adc
inc
cmp
stos
dec
xchg
ss
jno
jl
aam
push
inc
fs
and
jg
sbb
push
call
lahf
iret
cwtl
xor
xchg
pop
mov
add
push
add
sub
or
inc
scas
flds
xchg
rclb
fmull
push
clc
stos
cmpsl
popf
and
push
inc
xor
icebp
xchg
jge
cmpsb
pop
fs
ds
lock
leave
rcrb
inc
adc
jnp
cli
mov
mov
xchg
jne
enter
dec
outsl
pminsw
test
lods
arpl
fldenv
mov
adc
leave
int3
into
stc
outsb
add
cmpsl
or
mov
movsl
cwtl
mov
mov
jp
fisttpl
xchg
ljmp
xchg
inc
mov
mov
repnz
mov
cmp
sete
inc
adc
and
jno
sub
add
mov
and
xchg
adc
out
mov
sub
push
push
push
fstps
xor
sbb
das
enter
scas
mov
in
xor
mov
xor
sub
inc
fsubr
mov
pop
or
imul
dec
sbb
jb
insb
xchg
jnp
jl
fcompl
insl
xchg
xor
out
dec
repz
lock
js
jp
lock
fsubl
test
gs
mov
sbb
xor
xchg
xchg
sbb
nop
mov
mov
sub
cmp
xor
ljmp
hlt
jge
pop
lds
or
add
cli
fsts
stc
shll
ret
jg
sub
cmp
mov
inc
dec
cmp
xchg
out
dec
hlt
ja
dec
jb
lea
pop
sub
ret
mov
push
cwtl
mov
cmp
sbb
sub
mov
xor
cmc
arpl
xchg
adcb
pushf
push
mov
push
and
jl
scas
push
sbb
dec
lret
lret
sub
pop
clc
adc
mov
mov
addl
push
mov
cwtl
xor
ret
iret
shll
les
movsl
inc
dec
sahf
lods
out
ljmp
add
addr16
xchg
mov
xchg
imul
aam
adc
es
xchg
test
ss
dec
push
mov
mov
fwait
mov
xor
jle
xor
jecxz
xchg
mov
push
rolb
fbstp
pusha
rcll
add
pop
jle
mov
xor
push
or
loope
lea
pop
iret
je
xor
fdivl
or
pusha
rcrb
mov
pop
jae
cltd
sar
mov
and
xchg
mov
in
jo
jno
lock
mov
movsl
shll
ja
nop
xchg
cmpsb
lods
ret
xchg
das
jne
mov
mov
lods
cld
push
gs
sbb
sahf
and
enter
data16
faddl
dec
push
sub
mov
jl
js
ffree
push
mov
mov
mov
inc
xor
jns
dec
popf
xchg
xor
shl
testb
push
dec
jmp
jl,pn
cli
stos
cmpsl
add
mov
sbb
jo
pushf
mov
in
cmp
inc
ljmp
fidivrs
mov
stos
std
mov
mov
jns
inc
pop
les
dec
cmpb
cltd
xor
and
imul
sbb
inc
dec
jecxz
hlt
xchg
lret
xchg
cli
popl
xchg
ja
lds
shlb
fsubr
add
push
pop
aas
enter
or
pushl
xlat
push
test
andl
adc
xchg
xor
hlt
lods
dec
mov
lds
mov
ljmp
jl
lret
cmp
cltd
and
imul
lcall
add
sti
nop
or
aaa
mov
mov
pushf
ds
daa
negl
add
out
int
xchg
jl
roll
mov
or
sub
leave
jmp
xor
sbb
jnp
inc
outsl
nop
jle
push
adc
ficompl
push
ret
xchg
je
insl
xor
lahf
out
xor
lods
hlt
xchg
jecxz
sub
in
push
mov
shlb
sbb
sahf
mov
mov
lods
jg
out
movsb
pop
loope
lock
cltd
inc
lret
mov
pop
xchg
cmp
in
sbb
cmp
test
jo
jmp
fcomps
test
aaa
xchg
fdivl
cvtps2pi
mov
add
inc
in
imul
les
push
cli
lds
sti
dec
xchg
mov
enter
mov
push
gs
or
jne
fninit
outsb
repz
xor
cmp
fwait
xchg
sub
cmc
and
push
loopne
push
ss
sti
test
and
jb
pop
pop
mov
rcrb
or
adc
lret
dec
hlt
sbb
fwait
inc
jmp
ficoml
xchg
mov
test
jnp
sti
stc
add
nop
cmp
pusha
push
testl
dec
in
pop
push
jbe
jg
push
xchg
mov
loope
iret
xchg
mov
leave
ret
roll
and
jmp
jno
mov
fsubs
push
push
xchg
xlat
cmp
jl
mov
push
fbld
xor
das
mov
cmpsb
add
mov
jge
sbb
test
mov
fnstcw
jne
push
lods
cmpsb
mov
mov
adc
ljmp
dec
test
xchg
jnp
in
adc
rclb
stos
mov
sbb
adc
ja
mov
dec
popf
adc
rcrb
xchg
ret
shlb
cld
mov
rcrb
mov
dec
cs
inc
xchg
int3
mov
mov
adc
push
fdivrl
fistps
lea
cmp
das
addr16
or
leave
sub
mov
sbb
cmp
cld
movb
lahf
into
sbb
or
mov
out
sbbb
clc
dec
push
mov
dec
loop
adc
jno
mov
icebp
push
sub
test
lods
mov
mov
push
insb
test
sahf
fsts
mov
ss
mull
shrl
mov
or
sub
iret
sbb
pop
xor
lock
pop
fists
xor
push
pop
into
mov
cmpsl
cmp
out
sbb
aad
cwtl
mov
sub
leave
or
sahf
idiv
add
push
and
outsl
shll
aas
sbb
int
mull
pusha
xor
cmp
jbe
xor
mov
in
and
sub
xchg
push
sub
mov
int
ja
ja
push
enter
inc
mov
sahf
inc
or
arpl
andnps
xadd
dec
xor
pushf
ljmp
sub
cltd
and
add
cmp
pop
std
cmpsb
shl
mov
pop
jle
fsubp
dec
sub
inc
sbb
popf
std
cmc
add
mov
adc
lea
xchg
mov
jmp
hlt
cmp
cli
out
adc
pop
clc
xor
and
jmp
in
dec
cmp
and
stos
cmp
sub
enter
pusha
inc
pop
push
jecxz
add
cmp
mov
inc
add
fisubrl
dec
cs
mov
adc
cmp
jecxz
cmp
push
sbb
xor
inc
cmovg
imul
adc
push
jp
lds
sub
sbb
jp
mov
stos
in
stc
push
ret
push
pop
loopne
mov
sub
movsb
inc
sub
add
scas
mov
aad
cmp
lret
fadds
pop
mov
pop
ljmp
insl
xor
scas
ror
xchg
add
es
sti
xor
stos
mov
pushf
or
repz
pop
add
call
test
mov
shr
sbb
mov
ja
jo
rcrb
leave
pusha
cmpsl
ret
and
aam
sahf
pop
adc
mov
rcr
add
fcoms
cmp
repnz
inc
int3
mov
roll
dec
mov
xchg
and
cld
out
popa
sub
pushf
sbb
imul
imul
sub
jg
xor
lcall
sbb
pop
inc
setne
inc
sub
mov
jp
into
pushf
pop
icebp
iret
mov
mov
iret
cmp
aad
rcll
ds
mov
xchg
jbe
lret
pop
adc
add
mov
mov
divl
jne
jb
test
in
stos
cli
iret
mov
jmp
or
repz
mov
iret
sbb
dec
cmp
ds
lea
push
cmp
pop
cmp
xor
das
mov
xchg
ds
or
or
jns
mov
mov
pop
pop
stos
or
std
sbb
jmp
arpl
or
add
cltd
xor
xchg
jo
push
push
outsl
in
jl
bnd
xchg
jl
mov
cmp
xor
dec
rcr
cld
inc
xchg
mov
jp
lea
adc
inc
xlat
ja
rolb
xchg
mov
mov
inc
mov
test
sahf
mov
divb
mov
in
adc
leave
pop
ss
cs
out
call
jnp
bound
push
cmpsl
mov
pop
xchg
repz
xorb
push
js
addl
dec
lret
add
push
or
loope
test
inc
sbb
out
inc
jle
push
popa
adc
aad
punpckhdq
inc
daa
or
sbb
clc
ja
imul
xor
outsb
lret
int3
add
lret
in
pusha
push
leave
sahf
pop
insb
sub
lcall
sar
outsl
xor
popf
shlb
aad
sbb
adc
pop
dec
inc
inc
or
sbb
inc
mov
jae
ja
mov
ja
xchg
bound
cmpb
pop
sbb
dec
out
mov
mov
jle
jle
jmp
call
push
pushl
adc
imul
jo
das
ja
jmp
fisttps
mov
push
bound
mov
addr16
lods
icebp
ljmp
push
lds
adc
movb
jge
jmp
jle
pop
and
inc
out
sbb
sbb
pop
pop
add
lcall
jne
fsubr
cmp
adc
fcmovnbe
cmc
inc
loop
mov
mov
outsb
cli
xchg
sbb
gs
sti
jnp
mov
gs
shr
out
or
adc
test
adc
mov
mov
xchg
adc
mov
mov
mov
jl
in
mov
pop
test
aas
cltd
cmp
lods
dec
and
adc
dec
gs
dec
outsl
pop
lock
mov
mov
mov
mov
popa
aam
jge
out
pop
aam
sub
les
jmp
leave
lret
jg
cmp
jmp
cwtl
jae
jge
or
fisubs
inc
out
lods
sub
pop
sub
mov
mov
mov
dec
cmp
jae
sub
xchg
push
cmp
lods
inc
sbb
jle
pop
mov
sub
pop
rcrb
out
mov
insl
and
movsb
ljmp
inc
arpl
and
jmp
push
mov
test
mov
mov
and
les
mov
mov
scas
hlt
cwtl
mov
nop
aas
lods
fcmovbe
cltd
mov
pop
mov
pop
mov
cltd
out
ret
and
jmp
pop
mov
scas
fnsave
xchg
mov
popa
fnstenv
inc
sub
xchg
stos
sbb
out
add
jno
xchg
pop
jecxz
pop
bound
clc
stos
inc
xlat
out
xor
imul
sub
add
pusha
xor
cwtl
repz
gs
jle
ret
xlat
and
testb
faddl
jae
push
inc
loope
or
and
add
lea
cli
mov
jno
jg
fcoms
pop
arpl
daa
add
lea
rcrl
push
xor
sbb
mov
add
out
insl
flds
repnz
lods
iret
pop
add
dec
push
inc
enter
in
sarl
mov
andl
or
scas
push
push
repz
or
xchg
movsb
adc
data16
add
push
jmp
movb
std
movsb
xor
mov
outsb
mov
jns
fidivrs
sub
imull
jb
add
adc
pushf
mov
jnp
leave
jno
addr16
aas
dec
pushf
aaa
popf
inc
or
jg
mov
pause
xchg
and
lds
mov
jo
mov
push
adc
cmp
dec
xchg
orb
lret
addr16
jb
cmp
sub
fbstp
scas
scas
aaa
and
notl
dec
addb
sbb
jne
arpl
push
insl
sbb
fisubrl
imul
mov
fistl
cmp
cmp
cwtl
add
jge
pop
cmp
cmp
hlt
pushf
push
adc
mov
and
gs
add
adc
mov
and
loopne
fidivs
lods
inc
imul
loopne
test
je
and
sti
dec
pop
out
mov
and
out
mov
jle
int3
cmp
xchg
xor
roll
add
das
stc
faddp
dec
or
inc
push
test
mov
fisttpl
cmc
xchg
out
js
xchg
or
repz
sub
sarb
sti
test
cmp
push
xchg
add
lock
cmp
inc
mov
inc
or
and
xchg
cld
leave
pop
lods
pop
call
mov
fisubrs
xchg
pusha
pop
enter
js
lahf
mov
or
loope
cmp
add
xchg
call
rclb
incl
in
or
or
inc
ljmp
jno
mov
mov
dec
cltd
sahf
pop
dec
xor
sbb
and
lcall
push
dec
lret
mov
sub
movsl
imul
and
dec
scas
and
dec
scas
pushf
subl
das
test
jbe
int
cmp
lds
nop
lea
lahf
loopne
xor
fisubl
movsl
mov
mov
lret
bound
pop
mov
pop
into
jmp
mov
xorb
enter
cmp
repz
test
loopne
push
add
lahf
xor
pop
stos
dec
sbb
push
mov
xchg
push
pushf
push
push
xor
int3
mov
pusha
pop
xor
scas
fisubl
fistl
iret
in
call
mov
cltd
mov
repnz
push
pop
sub
stos
xor
repz
add
mov
sbb
int
pop
jbe
inc
adc
inc
inc
adc
mov
je
loopne
fcompl
or
pop
out
int3
aad
arpl
cltd
mov
pushf
inc
mov
sub
jecxz
add
rclb
faddl
repnz
fadd
icebp
je
ss
xchg
inc
mov
and
mov
fwait
push
or
out
int
pop
les
sub
add
mov
scas
and
dec
mov
int3
jp
lcall
inc
lahf
fidivl
xchg
sahf
test
icebp
fmuls
daa
fcomps
sub
inc
mov
mov
xor
andl
adc
es
sbb
xor
cmp
sar
inc
std
imul
insb
pop
test
daa
mov
push
dec
dec
mov
popa
hlt
int3
fnsave
in
mov
notl
std
outsb
jbe
adc
dec
icebp
stos
sbb
sbb
push
mov
pusha
hlt
mov
jecxz
das
flds
aam
cmc
out
inc
ss
and
or
jge
add
push
enter
js
cmp
movl
outsb
int
mov
mov
lahf
add
dec
mov
out
pop
xor
inc
test
add
jmp
and
pop
in
aad
push
adc
in
pop
jae
push
mov
push
mov
xor
mov
cmpsb
fucom
push
cld
pop
sub
sbb
pop
and
jl
fisubrs
xor
leave
bound
lret
cld
testl
xchg
mov
mov
add
inc
movl
stos
cli
mov
cmp
jge
inc
clc
ret
movsb
mov
mov
lahf
jg
dec
ret
mov
dec
ljmp
or
stos
adc
cmp
xor
stc
insb
mov
in
and
cs
ja
add
dec
cwtl
cld
cli
jecxz
lods
cmp
inc
in
outsb
jmp
cmp
fisubl
xchg
add
sarl
fiaddl
or
push
xchg
out
pop
aaa
mov
sar
mov
les
test
stc
mov
movsl
xchg
inc
or
stos
popf
xlat
pop
les
xchg
xchg
or
js
imul
add
nop
jbe
xchg
mov
aam
pop
pop
dec
mov
or
cmp
mov
and
jg
cmp
pop
xor
and
mov
xor
scas
pop
and
dec
or
into
pop
cmp
mov
in
pop
out
mov
mov
aas
in
mov
bound
cmp
aam
test
push
es
imul
aas
add
imul
dec
dec
mov
jg
loopne
adc
or
inc
mov
mov
mov
mov
lahf
dec
int3
insb
inc
xor
sbb
enter
jg
and
loopne
repnz
mov
outsl
jge
push
das
jae
pop
sub
jp
push
jmp
std
inc
nop
sbb
test
xchg
dec
std
or
xchg
mov
sti
movsb
loopne
ljmp
iret
in
xlat
fwait
addl
ja
clc
gs
out
outsb
divl
jb
in
cmp
insl
mov
cmpsb
arpl
std
out
cmc
cwtl
sub
inc
push
inc
je
rorl
or
in
jne
add
pop
ljmp
push
dec
cmp
cmpsb
xchg
mov
je
jo
cmpsb
jp
dec
xchg
add
rcll
mov
mov
je
mov
rol
insl
pop
push
inc
push
push
in
sub
lret
or
iret
or
jb
and
pusha
stos
mov
adc
int
jnp
inc
dec
jmp
lds
add
pop
mov
and
int3
sarb
cmpsl
int
jg
shrb
in
mov
das
xchg
cli
pop
adc
pop
cmpsl
shrl
inc
or
addl
scas
lret
loopne
aad
xor
and
mov
xor
lcall
dec
inc
imul
pusha
jns
or
mov
inc
jmp
hlt
pop
sub
push
fiaddl
add
out
mov
mov
mov
scas
daa
and
mov
push
inc
add
cmc
test
std
pop
add
ljmp
repz
les
ds
test
outsb
push
mov
and
pop
dec
sbb
int
inc
or
jg
sbb
inc
push
push
test
popa
or
movsl
jmp
imul
mov
push
cmpb
stos
dec
rcll
je
pushf
test
lods
out
cmp
xor
das
bound
inc
push
dec
in
sti
pop
add
mov
mov
jle
cmc
sbb
into
adc
insl
push
mulb
push
pop
mov
mov
incl
shll
test
jo
fmull
data16
push
out
dec
jns
xchg
inc
add
mov
add
and
jmp
add
and
les
shrb
mov
out
in
xor
mov
lret
sub
jbe
add
mov
inc
js
xchg
sbb
ret
imul
popf
xchg
je
sti
push
hlt
push
aam
je
addr16
dec
add
mov
test
sub
mov
test
stos
mov
out
ds
int3
dec
cs
mov
fcmovbe
test
out
imul
lahf
insb
dec
lret
loopne
addr16
fidivl
enter
push
adc
fdivr
stos
inc
aaa
xor
jl
xchg
adc
cmp
jl
pop
cmp
dec
cmc
push
sub
cmc
push
xlat
inc
orb
push
or
icebp
negl
cmp
adc
cmp
dec
push
out
cld
pop
mov
out
inc
inc
add
mov
mov
xchg
mov
outsb
scas
jmp
pop
jb
pop
mov
dec
mov
or
sbb
xor
in
and
bound
mov
mov
cmp
mov
cmp
xchg
add
scas
les
and
ret
fwait
loopne
rolb
dec
dec
outsl
mov
jle
xchg
adc
xchg
mov
leave
in
sbb
divl
popf
mov
cmp
adc
int
rolb
aas
push
or
fisttpl
mov
jmp
pop
push
aas
jb
jb
mov
xchg
cmpl
cltd
stos
fcomps
xor
jno
sbb
cmpsb
aad
ds
loopne
mov
sbb
mov
out
in
push
and
cmp
in
lea
lock
pop
out
lea
mov
enter
adc
lret
jns
call
xchg
adc
add
fcom
xor
xchg
xor
push
jecxz
mov
dec
lds
pop
add
fmull
test
lods
pushf
push
adc
mov
loop
add
cmp
pop
sub
push
inc
jecxz
mov
in
xorb
stc
mov
dec
sub
in
mov
xchg
lret
mov
iret
xor
pop
call
inc
inc
pop
inc
rcl
clc
mov
dec
cmc
in
mov
or
jp
fldl2e
or
xor
test
mov
xchg
shrb
push
mov
addb
mov
pop
jle
dec
or
lret
adc
aam
push
test
xlat
sbb
in
std
icebp
cltd
fs
test
out
in
cmp
aad
dec
mov
out
outsb
or
cmc
add
fdivp
mov
push
out
or
xchg
mov
xor
mov
push
mov
push
push
mov
pop
mov
movsb
data16
movsb
or
jb
jbe
fistps
inc
jecxz
xchg
adc
jbe
aaa
push
lret
inc
and
dec
lcall
imul
outsl
hlt
and
fnstcw
adc
add
pushf
and
cld
ja
sbb
jge
cmp
sbb
mul
dec
jnp
iret
sub
ficoms
cmp
popa
cmp
out
pop
xor
fmull
clc
cmp
fimull
loop
or
xchg
arpl
jo
das
jne
fdivrs
fisttpll
xchg
mov
pop
cmp
mov
ljmp
test
xor
shrl
stc
enter
cmpsb
or
cmp
insb
cmp
lahf
inc
call
sbb
out
ljmp
out
ds
xor
mov
ja
pushf
out
push
out
mov
sub
icebp
hlt
cltd
mov
ljmp
pop
addr16
add
mov
andb
lret
mov
outsb
xchg
notl
xchg
xor
aas
add
les
sbb
adc
flds
stos
push
popf
scas
outsb
repnz
push
dec
ja
cmp
addr16
push
inc
and
pop
push
and
bsr
add
jns
or
sub
inc
cmc
cmp
sbb
jnp
push
cmpsb
pop
mov
std
insb
les
xchg
test
dec
add
push
dec
add
lods
cmp
pushf
sbb
push
xor
daa
jns
mov
lahf
mov
xchg
aam
lods
jbe
add
xchg
imul
int
or
aaa
pop
mov
sub
leave
dec
insb
sub
add
repnz
cmp
fst
cs
mulb
sub
pop
aad
fmulp
xlat
lahf
das
sahf
push
lret
lods
das
loop
lahf
imul
js
stos
dec
gs
sub
jo
pop
sbb
rolb
xchg
das
outsb
mov
mov
fwait
mov
jp
jo
push
and
data16
sub
jb
sbb
outsl
jmp
daa
lods
jne
ljmp
jl
and
cmp
sbb
sbb
stc
pusha
test
lcall
rcrl
mov
pop
dec
loop
mov
dec
jmp
cmp
test
xchg
adcb
pop
int
pop
sahf
xchg
cmpb
cmp
mov
adc
stc
int3
daa
das
add
or
cmpsl
inc
adc
push
xor
enter
dec
push
inc
imul
into
mov
push
sbb
les
jl
dec
push
sub
popf
dec
mov
mov
and
js
inc
fildll
movsl
cs
icebp
mov
rclb
mov
call
inc
in
and
fsubr
outsb
arpl
inc
ficompl
adc
int
inc
jnp,pn
xchg
mov
jbe
inc
and
in
mov
mov
mov
icebp
and
fcomps
mov
stc
cmp
in
mov
mov
dec
cmpsl
inc
jge
pop
sbb
outsl
mov
cltd
adc
xchg
or
test
push
inc
and
or
pushf
jns
xbegin
std
insl
or
push
push
pop
mov
and
call
jl
xchg
test
or
jg
not
std
fstpt
push
pop
cmp
andb
add
mov
cmp
push
adc
fadd
jl
sbbb
and
jno
iret
mov
aam
adc
mov
std
mov
push
test
cmp
mov
out
sub
in
notb
jnp
lcall
lock
arpl
jp
push
dec
daa
sbb
jns
out
mov
mov
sub
mov
and
stos
daa
lahf
mov
cmpsb
jo
inc
cmpsb
jns
or
jb
sbb
jbe
xchg
out
scas
dec
mov
inc
cmp
inc
popf
pop
mov
std
pop
cmpb
lods
xlat
arpl
pop
pushf
lods
push
push
cs
shrb
scas
jg
cmp
and
mov
icebp
imul
int3
push
xchg
stos
test
loop
mov
inc
lods
in
mov
scas
in
jns
sbb
sahf
or
push
das
cltd
shll
push
bound
cld
popa
inc
add
enter
and
mov
enter
int
jl
js
ret
aam
insb
sub
xor
add
outsl
and
outsl
mov
leave
cmp
rclb
setle
xor
js
jmp
test
and
sub
outsb
test
mov
sbbb
lahf
cmpl
leave
sbb
mov
lods
push
cmc
stos
adc
mov
push
cs
sbb
adc
and
rcr
repz
pop
sbb
scas
pop
jnp
sub
dec
pop
dec
sub
pop
int
xchg
fwait
bound
jo
mov
dec
add
add
decb
sahf
mov
jmp
push
stc
leave
lds
xlat
push
add
aam
jge
add
xchg
push
inc
add
sbb
inc
push
mov
ja
std
adc
mov
pushf
add
xor
fildll
aad
or
shll
mov
add
mov
adc
scas
sahf
jne
or
push
fnstenv
or
leave
iret
je
xchg
dec
clc
dec
movsl
popf
adc
inc
adc
mov
xlat
push
adc
andl
imul
xor
push
lret
inc
add
imull
movsl
addr16
push
les
aaa
movsl
push
out
fwait
mov
lcall
rclb
mov
scas
cwtl
adc
pusha
or
adc
jo
add
dec
mov
mov
xlat
ja
mov
fidivs
xchg
xchg
pop
push
mov
rcll
popa
push
testl
test
mov
repz
cmc
lea
sahf
mov
add
cmp
add
fsubs
xchg
in
and
sahf
arpl
js
mov
fisttps
sub
frstor
push
xchg
pop
jge
inc
cmp
push
cmp
add
push
cmp
jl
lcall
test
mov
rclb
xor
push
mov
xchg
shlb
jecxz
add
xor
sahf
adc
sbb
push
xchg
xchg
xorb
outsb
repnz
lret
xchg
cwtl
imul
lds
and
dec
fwait
rol
mov
fisubl
pop
push
nop
add
and
mov
add
xchg
int3
push
xchg
adc
inc
js
sbb
ficomps
mov
out
mov
mov
xchg
mov
mov
jp
push
ss
jp
fs
fidivs
dec
std
xchg
dec
cmp
clc
sub
outsl
add
cmpsl
loope
pop
out
scas
aad
pushl
imul
and
jae
hlt
push
hlt
test
cld
lds
xchg
mov
std
fistl
not
iret
push
mov
jnp
sbb
popa
test
in
mov
xlat
cmp
test
add
shl
mov
mov
sbb
subb
fs
arpl
rorb
jns
dec
sub
sbb
sbbl
repz
cld
xchg
mov
nop
loope
xchg
idivl
ss
sub
push
fdivl
inc
loopne
ficomps
mov
mov
ja
xchg
popf
xchg
adc
pop
inc
je
pop
sbb
sub
and
call
xchg
push
iret
fiadds
cmpsb
jae
mov
ss
repnz
fdivs
cld
cmp
pop
mov
sti
insl
sub
add
sbb
js
stos
adc
lret
lahf
jge
clc
mov
imul
or
mov
aam
insl
add
xchg
fists
sti
lret
mov
mov
push
cmp
jmp
or
stos
push
ficoml
xor
and
fs
dec
jno
cs
inc
das
test
mov
ret
out
and
cmp
ret
xchg
cmp
into
and
in
add
cmp
shll
dec
gs
test
fdivs
inc
test
rol
dec
rcrl
incl
push
icebp
out
in
add
mov
jno
lahf
loopne
pop
cmpsb
jecxz
clc
xor
pushf
inc
scas
es
xchg
ds
imul
lock
jcxz
jge
push
lcall
fwait
mov
imul
fsubr
arpl
dec
adc
mull
xchg
lods
inc
mov
jae
pop
insl
fnstsw
mov
pop
mov
add
scas
add
stos
mov
das
insb
das
adc
test
adc
iret
xchg
in
data16
sahf
lea
movsb
and
inc
xorb
sub
mov
mov
pushf
cmp
jmp
push
mov
fiaddl
bnd
adcl
lret
aam
dec
add
daa
pop
nop
adc
enter
push
jp
mov
mov
push
push
in
push
cwtl
mov
mov
and
inc
insb
pop
push
sub
scas
jb
ret
rorl
inc
jge
lods
dec
lahf
idivb
add
and
repnz
cmp
loopne
mov
push
test
pop
push
sbb
rorl
mov
xor
loopne
jge
cmp
or
test
test
inc
mov
mov
roll
add
sbb
sub
dec
test
sbb
push
adcb
add
add
cwtl
dec
pushf
mov
mov
ja
inc
cli
imul
cs
or
cmp
push
mov
test
or
jo
repz
cmp
push
dec
es
jp
cmpsl
call
dec
cld
imul
dec
je
mov
idivl
out
mov
push
mov
shrb
fbld
test
inc
jp
data16
xchg
xor
sahf
xor
ficoml
dec
xchg
mov
and
jbe
cmpsb
jo
cmp
ret
adc
cmpsl
fs
adc
insb
pop
cwtl
mov
mov
cli
mov
rcrl
icebp
jg
ja
shlb
lock
jae
adc
fisubl
mov
sbb
ss
or
dec
test
out
xor
mov
test
popa
in
pushf
xor
jl
icebp
dec
ret
mov
mov
sub
push
ljmp
test
cltd
xlat
rcl
iret
mov
les
movsb
fsubl
shll
int3
add
adc
jp
repnz
jmp
rcrb
lds
mov
jle
mov
fldcw
fmuls
cltd
adc
repz
mov
cmp
iret
cmpsb
or
inc
aad
loope
mov
inc
push
stc
mov
inc
dec
xor
es
mov
cli
pop
shll
jbe
out
leave
pop
lock
mov
jg
jp
push
in
jp
xor
mov
rcl
mov
sub
sbb
out
pop
pusha
loopne
insb
fcoms
arpl
xor
dec
and
aad
lods
jns
mov
dec
push
ret
adc
imul
xchg
sbb
or
or
in
test
insb
fisubs
add
mov
or
pop
adc
cmpsb
lret
sbb
popa
sbb
mov
fnstenv
pop
inc
idivl
lods
and
lock
lods
or
mov
addr16
subb
insl
fmul
in
cs
iret
jmp
sbb
imul
fucomip
xor
scas
popf
out
xchg
push
subb
jp
lock
out
cld
sub
jbe
shll
dec
inc
push
js
int
ja
xor
pop
lods
jae
pop
shrb
sub
or
mov
cld
and
ja
shrl
and
repz
rorl
dec
push
fistps
lds
inc
lea
push
aam
and
jge
ret
lahf
sti
and
mov
inc
jo
sbb
dec
xchg
adc
xlat
ret
dec
imulb
adc
das
xchg
icebp
jmp
mov
mov
pusha
std
gs
pop
ss
hlt
enter
cmp
cmpsb
mov
and
cmp
jg
pop
adc
xor
cmpsl
sbb
data16
jmp
jbe
and
adc
and
dec
imul
aad
std
mov
cmc
mov
or
xchg
orl
fnstsw
pop
js
outsb
mov
loope
add
fs
movsb
test
fisttpl
js
cmpsb
mov
fucompp
fstp
xlat
scas
lret
jl
lahf
aaa
fs
test
out
push
jo
add
mov
faddl
fs
shl
repnz
cltd
pop
xor
test
stos
lods
arpl
jb
cmpsb
mov
rcl
dec
pop
mov
inc
inc
add
fldl
sub
pop
add
add
mov
sub
ficoms
ja
repnz
ret
js
mov
and
call
push
cmp
sub
sbb
ret
stc
fnstsw
adc
outsb
mov
insl
add
cli
outsb
stc
mov
sbb
loop
adc
jae
push
pop
or
sub
test
les
stc
ret
inc
outsl
sub
xchg
pop
clc
pusha
dec
and
clc
orb
fistl
jl
scas
std
filds
jnp
out
pushf
inc
ret
adcb
cltd
lret
and
lods
and
inc
cmp
sub
les
dec
sti
and
xor
rclb
or
dec
and
mov
jne
push
leave
add
and
mov
repz
cmp
ret
out
aam
adc
push
mov
sti
or
xchg
xchg
xor
stc
cmpsb
cmpsb
arpl
jle
insl
cmp
dec
icebp
dec
stos
pop
mov
mov
or
je
sub
outsb
push
imul
mov
and
lock
inc
dec
jmp
ljmp
inc
popf
cmp
pop
push
mov
jno
sbb
jg
jge
enter
inc
cmp
dec
out
bound
jg
push
js
mov
stos
mov
adc
loop
cmp
test
dec
into
mov
sub
int
ret
push
fistpl
std
dec
imull
sub
adc
daa
mov
insl
and
stos
ds
inc
or
xchg
adcb
dec
aad
div
clc
mov
jle
in
add
rcrb
xchg
cmc
cmp
int3
cmc
push
shl
negl
pop
pop
or
cmc
push
mov
mov
iret
loop
cwtl
lock
ja
adc
sbb
add
je,pn
loopne
pop
test
push
lds
adc
out
sbb
ds
jl
fcomp
add
mov
jmp
cmpsb
xchg
nop
out
mov
sub
cmpsb
pushf
ret
sbbb
imul
or
cmp
stc
jg,pt
mov
mov
jne
add
aam
call
add
imul
jbe
loop
leave
inc
popf
and
add
jno
pop
pop
daa
adc
jmp
push
movsb
outsb
call
loopne
rcr
push
jecxz
push
ret
pop
aas
ret
pop
imul
sub
mov
test
pop
mov
stos
stos
dec
daa
push
mov
test
and
xor
ljmp
jmp
testb
dec
jmp
aaa
sbb
outsb
shll
cltd
nop
sub
fsubs
and
jno
popa
enter
lahf
push
imul
fmull
imul
in
jno,pn
mov
popa
dec
cmp
inc
xchg
and
test
pop
sub
mov
pusha
fidivl
outsb
loop
int3
cmp
out
adc
test
push
test
cmpsl
out
sub
mov
or
add
ds
mov
out
xchg
push
or
sub
lea
mov
out
adcb
mov
mov
mov
adc
jne
fs
mov
int3
or
jns
jae
pop
push
rclb
push
or
mov
aas
mov
push
arpl
dec
out
mov
push
push
lds
sar
fstl
dec
fistpll
or
jp
loopne
push
push
int
imul
xor
mov
inc
jge
mov
mov
clc
and
sub
arpl
pop
addl
fadd
cmpsb
jmp
mov
arpl
and
pop
sub
adc
mov
or
dec
stc
mov
push
stc
jl
push
add
fcmovnu
push
sub
daa
fwait
inc
daa
mov
rcrl
jmp
mov
push
sbb
mov
or
ficoms
jecxz
movsb
xchg
outsb
ds
mov
and
std
mov
jmp
dec
mov
mov
scas
xchg
lret
test
sub
rcll
sbb
ret
fs
inc
dec
sbb
idivl
mov
loopne
xlat
fnstsw
push
pop
push
mov
lock
xchg
sub
js
jo
add
lock
xchg
jne
imul
loop
pushf
mov
nop
jbe
sbb
hlt
mov
fisubl
add
hlt
out
enter
cmpb
mov
repnz
cmp
fidivl
test
inc
cmp
sub
cs
stos
es
pusha
testb
mov
mov
sub
xor
pop
xor
clc
jns
out
xchg
jmp
push
test
cmp
mov
sbb
sub
sti
adcb
add
xchg
out
push
ss
jmp
shll
enter
lods
pop
lcall
mov
imul
sbb
call
aaa
adc
mov
adc
inc
imul
cli
mov
negl
jge
nop
shll
cltd
add
aam
sbb
mov
mov
sub
mov
nop
mov
es
pusha
aaa
xchg
inc
xor
or
test
cmp
adc
mov
push
jne
dec
xchg
das
pop
xor
xchg
rcll
das
cmp
movb
adc
inc
outsl
inc
sbbl
fldt
ljmp
cmp
mov
mov
mov
loope
jo
addr16
ljmp
mov
adc
xor
cmpsb
cmpsl
mov
and
push
rolb
inc
cmp
pop
sbb
lods
ja
test
xor
addb
sub
std
jae
xchg
stos
sbb
xor
ss
xorb
xchg
cli
sub
xchg
inc
notl
in
xor
sbb
icebp
jg
leave
test
loop
clc
repz
mov
add
mull
pop
scas
in
orl
les
add
addl
scas
and
inc
shrb
mov
stc
stc
aam
push
cmpsb
ss
nop
roll
in
jne
pop
push
dec
push
movsb
dec
cmp
jle
stos
lea
fwait
lds
scas
cld
in
jle
rcr
push
stos
xchg
add
notl
idiv
xor
pop
xchg
fistps
leave
subb
cmp
fistl
or
into
mov
test
adc
jle
add
aad
lock
int
les
roll
and
add
in
xchg
scas
insl
mov
cmp
xchg
jae
insb
mov
in
jb
lret
sub
jne
pop
rcrb
or
sbb
push
push
shrb
stc
pusha
mov
mov
mov
mov
hlt
adc
mov
and
cli
mov
jnp
das
or
cmp
in
enter
shr
lock
cwtl
mov
rolb
mov
in
mov
mov
jo
test
sarb
ljmp
imul
push
fisubl
lods
mov
mov
or
or
push
leave
mov
push
xchg
cmp
leave
lret
mov
or
adc
push
rolb
jp
mov
imul
mov
js
pop
cli
mov
cmp
or
cwtl
addr16
add
cmpl
lods
fwait
xor
jp
sahf
sbb
out
std
popa
iret
stc
in
mov
fidivs
loopne
xchg
hlt
leave
jmp
fadd
sub
fnstcw
jmp
mov
gs
push
ret
sub
cmp
inc
ror
pop
or
ror
inc
xor
mov
adc
push
add
push
and
pop
mov
js
adc
or
int3
pop
pushl
scas
les
lcall
push
adc
aas
push
fabs
cwtl
shrb
xlat
mov
jge
mov
mov
in
sub
sub
fisubrs
stos
inc
or
push
in
inc
push
cs
aam
mov
pop
xchg
mov
jmp
adc
rcrb
inc
lock
vzeroall
cld
jb
sysret
push
sbb
fwait
test
xchg
inc
je
lcall
and
inc
push
sub
pop
cmp
js
and
stos
jae
inc
pop
aaa
sub
scas
push
mov
addr16
jmp
aas
roll
dec
mov
nop
jle
icebp
cli
xor
icebp
aaa
cmp
xor
mov
mov
dec
jp
xchg
fidivrs
imul
mov
shl
cmp
mov
dec
inc
fwait
neg
adcl
fisubrs
inc
les
cli
jg
cmp
jp
mov
mov
adc
repnz
adc
imul
add
cld
adc
ljmpw
dec
inc
fldl
test
xchg
mov
push
mov
fstl
decb
push
sbb
inc
jge
test
imul
nop
dec
cmpsb
push
inc
pop
sahf
shrb
push
movsb
or
mov
add
adc
fadd
imul
add
in
jne
lcall
xlat
jmp
xchg
pause
fwait
cmp
sbb
test
frstor
push
pop
mov
push
mov
and
pop
pusha
jl
pushf
les
mov
push
outsb
insb
adc
sbbb
movsb
test
xor
xchg
cwtl
mov
aaa
adc
es
or
jb
push
add
loopne
fidivl
std
inc
mov
lods
mov
push
test
insl
xor
aam
stos
and
subl
je
movsb
call
push
in
outsb
mov
mov
mov
adc
outsl
cld
idiv
push
lret
cmpb
les
xchg
repnz
mov
jne
push
cltd
pop
dec
dec
xchg
movsl
lahf
inc
test
sub
xor
test
sub
mov
lret
xor
push
movsl
adc
xor
jge
xchg
movsl
fidivrl
ds
subl
jb
imul
testl
lret
jp
xchg
push
xchg
repnz
xchg
inc
and
jne
cld
inc
test
jns
cmc
mov
sub
ljmp
dec
push
imull
repnz
das
negl
push
les
inc
cmp
jmp
cld
sbb
or
dec
stc
cmp
sbb
cmc
sbb
or
add
shrl
mov
scas
lea
sbb
xchg
adc
int3
lock
cmp
outsl
mov
andl
scas
cmp
enter
es
fisubrs
mov
mov
sub
and
pusha
inc
lock
cmp
add
mov
push
aam
jle
imul
dec
adc
pop
test
xor
pop
test
xchg
dec
inc
movsb
push
icebp
push
jmp
sub
xchg
sbb
test
iret
in
xchg
imul
pop
push
mov
xchg
mov
jns
out
mov
inc
mov
mov
sti
arpl
pop
aaa
ret
outsb
add
cmp
ret
loope
push
xchg
fs
rolb
into
into
das
ret
adc
or
mov
dec
cmp
out
inc
and
xor
xchg
fimuls
lods
jo
mov
fsts
xchg
dec
popf
nop
inc
fimull
data16
xchg
mov
jno
mov
or
test
bound
xchg
dec
or
xchg
call
xor
scas
sbb
adc
add
js
loop
cmp
movsb
xchg
lds
int3
cld
dec
les
pop
inc
adc
sbb
push
fildl
cmp
sub
aam
adc
xor
push
mov
incl
movsl
xor
out
xor
lret
jecxz
sarl
sti
cmpsb
enter
js
mov
xadd
or
xor
popf
sub
insb
hlt
pop
repz
push
pop
or
fs
popf
xor
ror
test
lcall
jb
push
sbb
add
pop
or
das
jmp
daa
push
je
mov
adc
sti
sbb
cmp
pop
add
pop
push
jmp
adc
fcoml
push
dec
lcall
dec
push
out
dec
vphsubbw
fdivl
jo
adc
or
mov
ja
mov
mov
jmp
lds
and
out
in
lods
ret
push
ficomps
xchg
jbe
push
dec
jbe
loope
roll
subl
aas
in
lret
pushf
es
fdivs
je
mov
in
mov
add
and
push
negb
leave
or
out
mov
push
adc
repz
jl
pop
into
push
insl
mov
mov
mov
int
jg
xchg
sub
aaa
jno
adc
xor
je,pn
dec
pushf
jae
cmp
rcrb
xor
dec
and
clc
mov
jno
push
cmp
sub
add
fistps
mov
add
icebp
jmp
fiadds
mov
cmp
push
or
cmp
outsb
out
in
dec
mov
or
push
push
leave
mov
jecxz
pushf
in
xchg
and
mov
sbb
jge
jp
push
inc
cmpsl
aam
jno
ljmp
arpl
movsb
icebp
jno
jp
xchg
dec
sub
ret
inc
pop
xchg
call
adc
ficompl
sub
inc
push
lods
test
mov
and
xchg
sarl
push
sub
dec
xchg
pop
rolb
pop
test
shlb
into
loop
mov
inc
outsb
dec
mov
push
js
sbb
in
cwtl
mov
dec
lea
bswap
outsb
cs
out
aas
stc
movsl
dec
outsl
sbb
add
addb
push
rol
sbbl
in
xchg
pop
adc
stos
pushf
aas
dec
xor
sbb
pop
xlat
mov
into
push
dec
imul
xchg
and
mov
mov
int
outsb
lcall
mov
jb
shl
jne
aas
inc
mov
mov
mov
lea
inc
dec
sbb
aaa
jno
repz
fldt
movsb
or
sbb
test
dec
dec
sahf
fistpll
lret
push
or
and
inc
and
sub
jmp
loop
lret
mov
icebp
jbe
fwait
stc
fisttps
outsl
mov
arpl
jmp
in
leave
jb
jo
dec
push
rolb
out
dec
rclb
orl
xlat
dec
scas
cltd
in
scas
lea
test
sub
sti
xchg
cwtl
jmp
jbe
pop
sbb
mov
cmp
mov
mov
mov
pusha
jl
push
jle
mov
or
sub
dec
push
and
dec
dec
mov
push
mov
or
add
sub
sbb
out
xor
enter
outsl
add
js
fsubl
push
nop
imul
ficompl
aam
mov
test
int3
loop
xchg
ret
push
lret
inc
inc
jae
mov
ja
xchg
cs
mov
sub
nop
dec
mov
ds
cmp
cmpsb
ret
je
mov
insl
fbstp
add
and
cmp
mov
mov
xor
add
dec
and
pop
mov
cltd
lock
test
xchg
rcrl
sbb
jmp
notb
jmp
pop
icebp
cmpsl
dec
lahf
cs
sarb
shlb
mov
arpl
mov
addb
sbb
notb
sub
or
fisubl
mov
mov
inc
jo
mov
mov
sbb
inc
mov
in
cmp
popa
xor
mov
pusha
and
pop
ret
adc
xchg
outsb
addr16
mov
sbbb
and
imul
fs
dec
into
stos
les
mov
ljmp
ljmp
fstps
xchg
cmp
jae
leave
add
push
pop
fwait
psubw
pushf
test
and
sbb
or
psubsb
ss
enter
std
jo
fstpl
inc
jge
cmp
hlt
lret
dec
xchg
pop
push
push
icebp
in
test
mov
cmp
movl
pop
add
cmp
out
inc
and
ret
mov
movsb
fs
sub
mov
jae
pop
inc
pop
pop
leave
jne
push
jo
or
dec
cmp
das
push
pcmpeqd
mov
das
insl
fdiv
sbb
push
cs
mov
out
inc
mov
fcompl
adc
in
out
push
imul
dec
and
repz
xor
gs
lahf
repnz
jg
and
andb
lock
int
movsl
fidivrl
scas
pop
mov
add
fisttpll
add
xor
and
rorb
pushf
push
sbbl
and
adc
dec
push
add
int
gs
or
mov
lcall
mov
add
jmp
ja
popf
inc
push
arpl
pop
inc
jge
dec
mov
inc
push
add
jns
sbb
cmpsl
sub
rorl
jge
add
scas
pop
push
loop
jb
fwait
lea
mov
nop
stos
xor
inc
stc
xchg
ljmp
jne
roll
and
out
repnz
js
inc
push
repnz
js
xor
es
dec
outsb
in
inc
mov
aaa
add
fdivrp
pop
fistpl
leave
out
add
cmp
insl
mov
pushf
jae
daa
add
fsts
in
in
movaps
xor
fcomp
cltd
cmp
mov
shrl
in
das
pop
push
lret
xor
inc
jns
jbe
mov
mov
lret
rcll
mov
pop
insb
xlat
or
or
gs
cmp
pop
fs
and
aad
pop
add
shl
xor
jmp
rorl
je
or
push
into
xor
mov
pop
cmp
add
mov
add
push
xor
mov
iret
mov
int
mov
into
hlt
mov
ljmp
vsqrtss
sub
icebp
icebp
mov
lcall
jl
fstl
xor
mov
lds
cli
pusha
int
insl
sbb
jbe
mov
pop
iret
jae
adc
pusha
aas
jl
ficoml
cwtl
out
out
pop
jle
sbb
pop
pcmpgtd
fdivrl
notb
add
push
or
movsb
adc
je
jne
push
es
sbb
clc
inc
mov
and
lods
mov
pop
mov
das
mov
cmpsb
out
pop
insb
lret
jne
subl
insl
fstps
pushf
mov
mov
cmp
shrl
int
xlat
loope
adc
jno
dec
loope
jo
inc
lods
popa
mov
xorl
dec
cmc
andb
test
and
jbe
add
shrb
int3
jmp
je
pop
mov
cmp
adc
add
mov
jp
pop
popa
cwtl
fucomi
hlt
jg
ss
call
orl
lret
jns
xchg
fcompl
popf
cs
mov
xor
cmp
iret
jg
inc
lcall
adc
jle
js
sbb
mov
ljmp
pop
insl
push
movsb
or
insl
inc
push
dec
and
adc
loope
sub
mov
pop
mov
inc
xchg
pop
dec
add
leave
cld
jl
mov
in
nop
xlat
jne
cmpsb
jmp
aas
and
mov
mov
ficoms
push
inc
pop
shrl
mov
mov
sbb
mov
push
pop
lret
jae
pop
pop
imul
imul
mov
imul
push
mov
xchg
cmpsb
fnstcw
jnp
fidivrl
pop
mov
and
lret
sbb
add
shll
mov
cld
and
mov
nop
jecxz
out
gs
std
pop
adcl
inc
inc
and
test
pop
jmp
adc
xchg
scas
inc
ret
xor
mov
sbb
push
jp
xor
arpl
mov
cmc
add
sti
into
sbb
add
hlt
in
lock
sbb
stos
and
faddl
inc
lcall
insb
inc
push
sub
mov
pusha
clc
aam
mov
in
xor
dec
ljmp
pop
into
push
cmpsl
push
std
fwait
adc
popa
inc
or
dec
dec
leave
jp
das
loop
inc
xchg
fcoms
mov
jbe
mov
jg
fs
and
cmp
mov
jno
lods
mov
adc
sti
fcoml
sbb
insl
pop
push
push
decb
mov
xlat
add
mov
fistpl
sub
ljmp
sahf
sti
aas
in
and
jl
inc
and
test
daa
mov
jmp
insb
test
mov
pop
xorl
leave
fs
push
jae
fs
xchg
sti
imul
scas
inc
sub
cmp
cmpsl
lds
push
and
es
dec
lods
xor
push
inc
lahf
cmc
rol
mov
jmp
xor
cmp
int
and
xchg
jne
inc
mov
cmp
repz
xchg
sub
xor
es
cmp
adc
rolb
ds
push
mov
sbb
faddl
mov
xchg
add
fisttps
jnp
cmp
pop
test
push
sub
je
adc
loopne
insb
xor
dec
adc
pop
add
cmp
imul
inc
mov
jbe
sub
sbb
mov
xchg
mov
xchg
mov
sub
aas
stos
mov
hlt
and
push
cmp
mov
and
mov
cmc
jbe
out
fistps
inc
out
dec
outsb
push
push
mov
outsb
sbb
repz
lock
dec
xor
cmp
daa
add
idiv
cmova
mov
aas
push
xchg
jl
in
filds
xchg
mov
add
push
shrl
clc
mov
jmp
mov
mov
mov
mov
xchg
es
lods
cwtl
pop
popa
push
inc
lods
mov
aam
cmp
pusha
shl
or
outsb
lods
rsqrtps
inc
in
pop
adc
sub
sbb
jno
daa
mov
fdivl
hlt
mov
xchg
pop
movsb
jae
pusha
xchg
jae
dec
xchg
psubsb
xrelease
das
popf
lcall
hlt
arpl
frstor
iret
mov
mov
mov
mov
aas
popa
repz
xchg
negl
clc
xor
sub
ljmp
xchg
mov
movd
and
cmp
mov
daa
cmp
dec
mov
int3
ret
jmp
sbb
xchg
les
sti
fdivl
aad
mov
lods
jg
mov
in
dec
popa
cmpsl
test
xorl
xchg
hlt
xor
and
push
rcrl
push
xor
mov
fwait
outsb
sbb
cmp
xlat
outsl
cmp
pop
push
pusha
push
outsb
lods
gs
out
jns
je
sbb
movsb
xor
xor
cmpb
push
or
pop
pop
lahf
loop
int3
mov
jbe
xchg
sahf
aas
jle
xor
and
mov
add
test
pop
mov
shl
in
in
ret
jns
test
push
lcall
jnp
aas
in
fistpll
subl
push
es
mov
cltd
jae
rcll
mov
rcrb
dec
nop
and
int3
push
xchg
or
pop
mov
xchg
sub
inc
inc
push
out
inc
mov
outsl
aam
lret
sti
mov
loope
dec
xor
ljmp
xor
push
push
insb
adc
and
sbbl
addr16
int3
and
mov
add
or
fsts
incl
mov
add
out
or
loope
loopne
push
push
fiaddl
jnp
sub
jge
push
in
push
pop
sarl
xlat
xorb
xchg
mov
xchg
xor
scas
jl
jae
lret
out
sub
fwait
stos
add
sub
xchg
mov
cmpsl
or
aad
dec
daa
pushf
jecxz
push
andb
inc
dec
in
ja
rolb
push
lock
pop
cld
jnp
push
bound
sub
push
ss
je
mov
les
insb
jnp
mov
enter
mov
js
les
call
jp
sarb
insl
jo
repz
xchg
imul
in
pushf
sub
fwait
repz
pop
pushf
jmp
and
xchg
cmc
sbb
xlat
mov
aas
bound
jo
roll
movsb
pop
hlt
dec
loop
pop
pop
lahf
add
or
lcall
call
add
inc
cmp
mov
adc
test
pop
jae
inc
xchg
inc
sub
push
pop
adc
rolb
push
adc
xor
xchg
pop
aaa
sbb
sub
cmp
pop
and
push
sarl
adc
aas
aaa
out
scas
fiadds
cmpsl
push
fldenv
into
xor
adc
sbb
gs
adc
shrb
jl
mov
dec
ret
lods
or
inc
sub
cs
fdivr
add
add
jb
or
rcl
ret
cmp
enter
jns
mov
lods
adc
jl
add
dec
icebp
adc
jmp
dec
jge
mov
push
xor
cmp
cmp
les
add
fstl
insb
cmpsb
jmp
jns
cmc
jge
cli
or
aad
aad
cmp
adc
and
jo
lret
dec
jne,pn
xchg
pop
mov
jmp
rorb
fiadds
inc
pusha
scas
xorb
xorb
popa
xor
jecxz
add
lahf
test
ret
lock
loope
dec
insl
adc
cmpsl
ret
mov
lret
mov
out
jo
popa
xorl
xchg
loop
lret
dec
mov
push
out
adc
push
mov
mov
mov
jp
popa
scas
pop
pop
repnz
xchg
jno
push
scas
push
cld
cmpsl
adc
mov
cmp
or
or
mov
mov
xor
jbe
loopne
pop
dec
sub
test
xor
scas
fs
jne
in
xor
ficoms
sbb
mov
add
jnp
iret
push
pop
imul
sub
stc
outsl
adc
ret
mov
fisubrl
sbb
sbb
dec
xor
sub
jo
dec
into
adc
in
outsb
aad
fcomps
mov
push
jae
mov
jecxz
es
test
jecxz
nop
jmp
inc
mov
xchg
in
mov
xor
stos
xor
xor
xchg
xor
add
pushf
and
inc
in
sub
lret
fidivs
in
movsl
jno
jle
sub
sahf
loope
mov
and
mov
shlb
lret
jmp
pop
push
mov
push
aad
cmp
hlt
addb
cmp
add
pop
repnz
jmp
cwtl
sahf
clc
lret
jl
mov
push
dec
add
fmull
or
jns
aaa
daa
jecxz
ss
xor
aaa
ds
test
adc
xchg
dec
pop
push
jge
push
and
dec
inc
lret
and
cs
iret
cltd
cs
mov
cmp
and
cmp
adc
dec
add
hlt
js
or
xor
out
fidivrs
movsl
push
leave
fdivs
std
mov
jle
and
push
cs
bound
pop
pop
xchg
xchg
daa
imul
pushf
adcl
cmp
sub
int3
std
xor
fidivs
sub
sbb
xchg
push
xor
jb
dec
out
je
adc
call
inc
adc
mov
mov
mov
int
sub
leave
fstpt
jns
xchg
jns
lods
into
ret
sbb
mov
jae
mov
and
xor
ds
lret
lret
push
js
cltd
sub
mov
sub
mov
mov
add
cmpsl
sub
adc
inc
std
add
andl
jo
adc
lods
andl
mov
or
xchg
sbb
mov
mov
scas
fwait
fs
fnstsw
mov
jae
push
jg
mov
sbb
mov
jmp
out
es
jno
repz
inc
push
xchg
add
shlb
sbb
xchg
int
lret
cmp
pop
out
fidivrl
sub
xchg
pop
outsb
ffree
jge
xlat
inc
jmp
addr16
jecxz
cmc
or
jge
dec
in
jmp
lods
mov
and
aaa
mov
add
mov
lods
sub
xor
lods
test
adc
scas
jge
push
sbb
stos
mov
adc
lcall
je
lahf
stos
rcr
je
xor
popf
leave
aas
imul
xor
idivl
ljmp
push
daa
adcl
cmp
jo
insl
cmpsl
adc
popl
test
cltd
sub
test
iret
push
sub
xor
leave
dec
mov
shlb
fists
mov
std
mov
push
add
mov
movsb
fmuls
add
idivb
xchg
stc
andb
or
lods
test
pop
in
jo
or
scas
dec
add
add
xchg
imul
adc
pop
cwtl
fnsave
lahf
jecxz
push
icebp
imul
daa
out
mov
add
xchg
adc
mov
adc
push
dec
std
mov
adc
fwait
rcll
ficoms
inc
in
sbbb
mov
push
xchg
das
mov
mov
jle
pop
xor
andb
jb
pop
add
lea
hlt
int
test
sbb
push
cmpsl
adc
push
ljmp
sahf
mov
sbb
jl
mov
mov
int3
mov
cmpsl
fmulp
stc
mov
push
cmp
mov
push
int
sbb
jbe
ret
incl
es
dec
dec
out
in
adc
mov
cmp
popa
cwtl
dec
cmp
push
jbe,pn
mull
or
sub
mov
dec
ret
jns
jae
sbb
jge
pop
ficoml
and
push
push
push
mov
fs
jmp
cltd
ret
jp
or
ret
xchg
std
in
cmp
jecxz
push
push
mov
xchg
push
add
shll
int
inc
or
out
add
lock
jnp
cmc
adc
bound
int
sub
sti
adc
inc
in
mov
mov
jno
dec
dec
push
mov
addl
cltd
ret
iret
mov
push
mov
scas
lret
int
aam
negl
or
xor
or
cmpl
test
inc
mov
pop
push
mov
and
dec
jmp
repz
sbb
int
adc
divb
adc
leave
outsl
ja
sub
mov
call
imul
lahf
dec
mov
pop
scas
inc
or
fcoml
fsubrs
push
les
stos
jl
xchg
inc
andl
int3
mov
sub
mov
jmp
adc
imull
sti
lret
mov
ja
xor
fsts
lret
adc
jle
sbb
jne
pop
push
bound
mov
insb
xor
sub
ret
lcall
add
mov
push
pop
or
shll
adc
aas
int
mov
mov
leave
clc
aaa
lods
es
imul
adc
std
sbb
sete
pop
int3
mov
jno
ljmp
xchg
inc
les
jnp
mov
ret
out
cmp
icebp
pop
cmp
int3
dec
pop
jmp
mov
push
sar
in
shrb
sbb
bound
dec
push
data16
mov
std
sbb
orb
sbb
mov
mov
lcall
and
mov
cmp
push
mov
sub
add
sbb
fistpl
insl
mov
and
add
mov
push
sbbb
je
pop
addr16
mov
repnz
pop
cmp
clc
dec
xor
je
ds
xchg
xchg
xor
jg
inc
int3
shll
pop
add
aas
push
sbb
xchg
sub
vpcmpeqd
push
mov
or
les
or
fs
dec
enter
cmpsb
ss
test
dec
cmpsb
lock
or
test
mov
jb
mov
je
inc
sub
xchg
mov
sbb
fidivl
pushf
add
mov
je
iret
cmc
and
adc
xorl
jbe
scas
lret
jmp
jnp
push
inc
jae
das
jle
add
hlt
loope
or
jnp
push
nop
xchg
das
mov
test
xlat
mov
ss
popl
loope
scas
pop
jno
or
xchg
mov
mov
imul
icebp
adc
pushf
xor
add
sti
mov
cmc
sub
stos
mov
decb
lret
pop
xor
arpl
add
dec
cmpsb
out
movsb
dec
sub
outsb
dec
mov
xchg
add
in
push
imul
cmp
jbe
lods
sbb
les
fnsave
jae
incl
add
fldenv
filds
fucom
arpl
sub
insb
popf
test
rcll
sub
sbb
pop
loop
jp
outsl
xchg
mov
into
jno
mov
movsb
lock
sub
adc
ljmp
int
mov
daa
mov
xchg
or
lret
shll
mov
int3
push
jb
mov
xchg
leave
dec
idivl
or
lcall
add
xchg
dec
push
cwtl
icebp
dec
push
mov
int3
adc
mov
les
loope
push
jmp
nop
fildl
pushf
inc
shll
insb
addb
dec
mov
or
and
das
pop
xor
shll
lahf
das
movsb
call
dec
int
mov
aad
sub
pop
rcr
sub
pusha
stos
popa
icebp
and
pop
xlat
and
test
pop
js
xchg
movsb
hlt
jnp
cwtl
into
outsl
dec
cs
cld
popa
jl
xchg
jmp
js
push
ja
xorl
jle
xor
mov
call
pop
sub
test
mov
dec
repnz
add
cs
push
addr16
ljmp
cwtl
addr16
mov
adc
ficompl
sbb
loope
call
jg
aad
cmp
push
imul
mov
mov
ss
xchg
nop
jge
push
lods
shlb
call
fwait
js
mov
out
enter
pop
cmp
lret
xchg
outsl
xor
fdiv
jb
rolb
call
mov
mov
in
fwait
pop
mov
sar
cmp
test
scas
pop
sub
mov
xor
mov
stos
mov
es
nop
jmp
test
inc
sub
push
push
inc
and
xor
jge
jle
mov
push
imul
pushf
push
int
shll
sbb
mov
int
mov
mov
mov
jnp
or
and
addl
or
and
sub
mov
lss
or
in
lods
popa
or
sbb
or
in
das
out
popa
mov
push
mov
aaa
adc
xorb
dec
rorl
mov
sarl
das
stc
pop
push
or
jmp
pop
xor
test
add
mov
sbb
sub
lret
js
xchg
aas
adc
pop
jno
jge
push
pop
mov
test
cmpsb
pop
in
sub
dec
xchg
adc
add
test
not
leave
loop
daa
lods
pop
and
and
mov
jnp
xchg
inc
pop
sub
cs
mov
mov
subb
push
xchg
lcall
jp
enter
loop
dec
lret
test
sbb
lahf
stos
imul
cmpsl
cmp
cmp
and
bound
shlb
sbb
lock
sbb
sahf
and
lods
or
movb
icebp
jecxz
cs
in
push
fwait
inc
add
lea
fdivp
rol
enter
cld
xchg
sub
js
cmpsb
rcll
push
cltd
es
inc
sub
pop
lds
fstpl
xor
mov
mov
adc
sub
sub
ret
and
nop
jmp
ss
mov
inc
loop
sub
pop
cltd
xor
cmp
test
sti
rcrl
pop
pop
and
shrl
jo
fdiv
pop
mov
aas
or
inc
push
fnstcw
mov
fmulp
jle
pop
xor
les
push
test
jo
lcall
arpl
stos
cmp
outsb
leave
xor
push
or
and
outsb
lcall
jb
insl
je
cmpsb
lahf
push
loopne
xchg
lds
mov
inc
testb
loop
or
adc
roll
lahf
sahf
call
scas
lret
cwtl
inc
cwtl
ljmp
cs
js
and
xor
mov
outsb
jno
and
pop
dec
sbb
les
std
sub
fstl
out
or
aas
mov
push
jb
pop
xor
icebp
sbb
cmc
shr
in
xchg
cmpsb
sub
je
mov
mov
jb
sub
jae
sub
mov
pop
and
out
lret
dec
sbb
cmc
jmp
and
pand
push
jmp
sbb
insb
xchg
lret
pop
out
aam
push
cmp
xchg
cmp
pushf
inc
je
inc
ljmp
xor
es
les
dec
xor
fldenv
mov
xor
push
mov
outsb
inc
jp
jmp
les
and
inc
repz
jae
lcall
stos
push
mov
lea
mov
mov
pusha
imul
mov
outsb
cmpsb
or
inc
stos
ds
push
inc
or
pop
mov
mov
pop
inc
add
jae
repz
repnz
mov
xchg
lahf
xchg
cld
stos
mov
scas
sbb
add
pop
in
inc
pop
xor
xchg
push
jno
lret
xor
jecxz
push
cmpb
int
sbb
outsl
dec
stos
cmp
imul
ljmp
or
sbb
pop
lods
xchg
adc
xchg
dec
or
adc
popa
mov
jns
mov
push
cmp
cmpsb
popa
or
cmp
dec
clc
fidivs
pop
sub
stos
ficompl
adc
xor
dec
int
sahf
inc
lods
or
and
icebp
xchg
add
push
icebp
pop
xchg
and
inc
inc
add
pop
dec
pop
mov
out
in
dec
xchg
into
aam
xor
shrb
adc
jecxz
lret
adc
push
cmp
push
fcomps
xchg
pop
scas
xchg
flds
ljmp
jmp
push
xor
pop
idiv
pusha
push
push
loope
pop
pop
fwait
leave
es
xchg
jo
int3
scas
hlt
push
sbb
push
sahf
push
ror
addr16
into
or
push
movsl
cmp
push
inc
movsl
or
aas
dec
dec
lret
pushf
rcl
adc
mov
or
arpl
sbb
scas
ss
or
pop
mov
push
jno
pusha
xor
out
and
cmc
repnz
cli
jns
sub
stos
pop
cmc
mov
or
cmp
inc
pop
mov
sbb
sbb
pop
mov
jle
das
sarl
cmp
pop
pop
or
sub
lret
out
sbb
push
hlt
cs
adcb
cltd
cmp
fs
dec
xor
div
push
call
iret
push
adc
mov
pusha
mov
and
scas
xor
test
lock
mov
shrl
pop
jo
cmp
dec
test
jb
mov
push
dec
mov
mov
insl
push
xchg
imul
cmpsb
call
aaa
inc
cmp
lock
push
loop
lods
repz
mov
test
test
ret
enter
test
pushf
xor
cmp
mov
aas
jmp
jo
jbe
pop
jp
dec
jns
push
daa
dec
sbb
push
xchg
popf
lret
in
stos
lock
push
xor
pushf
pop
mov
lcall
push
push
testl
ret
mov
mov
cmp
pop
sub
jbe
cmp
cwtl
scas
xor
icebp
push
cld
and
popf
lahf
or
fstl
cmp
test
cli
pushf
cmp
addr16
divb
mov
xor
es
lahf
cld
sbb
pop
pop
mov
es
shl
cmpsl
in
dec
xchg
enter
xchg
in
lret
filds
pop
xchg
xchg
dec
cmp
popf
jnp
mov
xor
push
pop
cmp
clc
lea
out
test
fcom
in
xchg
in
jg
mov
cs
ficoml
ja
pop
cltd
cld
loopne
cmp
xor
fidivs
cli
dec
leave
popf
add
push
orl
mov
dec
and
mov
fucomip
dec
jne
or
outsb
mov
aas
lods
leave
mov
inc
mov
pop
fidivs
mov
pop
pushf
dec
xchg
push
lret
cmp
sti
xchg
xchg
pusha
sbb
sub
outsl
std
lds
push
and
test
xor
insb
insb
add
mov
dec
lds
xchg
push
jns
test
xor
ss
cli
xchg
and
das
cld
mov
aam
int3
test
inc
mov
das
cmpsb
call
lret
paddsb
mov
stos
jmp
pop
mov
xchg
jle
mov
or
popf
cli
mov
dec
push
ljmp
fimuls
hlt
add
cld
push
sbb
jnp
push
mov
jle
xor
andb
pushf
inc
fadd
mov
push
in
add
and
pop
xlat
roll
pop
pop
dec
ret
out
lret
cmp
xor
mov
sahf
in
dec
cmp
popl
add
or
add
movsb
cli
mov
movsl
sub
sti
pop
push
je
mov
and
cmp
push
cmp
or
lea
ret
adc
leave
xchg
sbb
mov
sbb
or
mov
loope
adc
stos
stos
lcall
je
int
enter
mov
cli
rorb
pop
mov
test
push
ret
xchg
push
jge
stos
mov
xor
addr16
icebp
add
xor
or
fwait
stc
cli
fcoms
jnp
pop
ss
hlt
mov
or
xor
insb
and
addr16
ficompl
lds
dec
out
aad
scas
or
xchg
push
jle
mov
xchg
xchg
xor
jns
mov
test
les
ret
xchg
jae
popf
or
daa
nop
nop
icebp
and
and
add
and
pop
cmp
imul
aam
dec
or
inc
mov
jne
fsubrs
call
shl
hlt
cmp
jae
fwait
stos
fiadds
popa
dec
mov
icebp
mov
lods
cs
lcall
and
cmp
loopne
in
lret
inc
add
xor
notb
into
add
or
mov
loop
aad
lods
mov
cmp
mov
xor
pop
push
pop
out
mov
mov
sub
out
xchg
cmpsl
into
xor
sbb
mov
out
lahf
mov
mov
jno
jns
sub
push
adc
xchg
popf
mov
fistpll
bnd
inc
push
lahf
cwtl
and
loop
aas
adc
jle
add
aaa
xor
outsl
fstl
mov
xchg
xor
xor
sub
push
insb
lahf
stc
mov
mov
fcompl
sbb
inc
inc
xchg
adc
mov
push
jmp
pop
sahf
or
je
push
jb
sti
jmp
repz
xor
push
lock
shlb
sar
jbe
rol
ret
int
xor
dec
imul
mov
lea
xchg
inc
daa
pop
jle
pshufw
addr16
dec
mov
outsl
push
js
in
or
add
and
xchg
stos
mov
movsb
xchg
and
addr16
jp
repz
cmp
mov
testb
cwtl
cmp
hlt
jno
sbb
in
jne
inc
lods
add
ds
popa
lods
cli
sub
sub
sbb
xchg
sbbl
mov
mov
std
ficoml
scas
push
test
mov
sti
ljmp
xor
jl
cmp
xor
imul
pusha
stc
inc
mov
xor
mov
mov
imul
cld
pop
rorb
push
daa
mov
xchg
das
xchg
mov
loopne
lods
sbb
sub
jbe
mov
xchg
cmp
jmp
jae
lods
cmp
pop
sub
lret
sub
lret
cld
ja
and
mov
je
js
jae
cltd
rcl
jl
sar
ljmp
lret
es
fcoml
xor
or
nop
dec
mov
push
loope
fisubrs
lock
lods
or
fimuls
push
mov
mov
jl
xchg
push
adcb
aas
mov
xchg
pop
cltd
outsb
pushf
loopne
daa
jmp
inc
sub
into
filds
es
adc
ror
inc
cmp
mov
push
dec
dec
aas
mov
push
or
in
pop
xchg
and
lods
fadd
push
addr16
cmp
call
mov
and
pop
xchg
mov
sbb
test
mov
adc
sti
sbb
cmc
loop
cmpsl
stos
sub
add
mov
xchg
add
or
mull
icebp
cmp
push
jb
cs
jecxz
je
outsl
aam
in
xor
pusha
sbb
sarb
xchg
stos
mov
sbb
rcl
int3
inc
pop
cltd
shrb
cmp
hlt
je
test
addr16
dec
xchg
sbb
adc
shl
and
sub
add
negl
out
jb
clc
lcall
mov
lcall
push
mov
xor
jg
add
sub
fldt
and
shll
push
enter
pop
sbb
daa
aad
jnp
hlt
xchg
jbe
sar
insb
xor
imul
or
mov
and
inc
dec
cmpsb
cmp
loope
lret
adc
scas
push
sub
jno
int
lock
test
repz
jp
test
jle
jg
sti
dec
push
std
jecxz
notl
xchg
popa
xor
mov
cli
jno
es
add
cmovb
pop
in
cmp
movsl
or
stc
jg
lcall
ficoms
out
jnp
sbbl
adcl
in
out
movsb
jnp
mov
or
pop
mov
pop
xchg
test
push
cmpsl
fldt
dec
and
cmpsl
test
daa
sub
push
cmp
movsl
push
test
mov
sub
std
pop
add
lret
enter
adc
stos
jecxz
aam
inc
cmp
fcompl
pop
fwait
jmp
aam
xlat
mov
aas
insb
add
cli
jl
sub
push
mov
push
test
in
aam
lahf
std
gs
stos
sub
enter
adc
decb
sbb
and
jb
jae
insb
pusha
lea
xchg
ret
mov
aad
jle
nop
ds
ficoml
xchg
jb
xchg
mov
sub
mov
les
std
testb
mov
jl
movsb
and
adc
lock
mov
div
imul
insl
out
dec
push
add
and
roll
dec
sahf
daa
aam
mov
cmc
outsb
and
inc
sahf
push
jnp
mov
cmc
outsb
sti
cmpsb
xor
cmpsl
jbe
stc
fildl
stc
add
xor
js
test
cmp
xorb
push
ja
sbb
stos
addl
ss
int3
lcall
xor
sub
in
std
or
xchg
xor
inc
jb
shl
lgs
pop
sbb
das
adc
int
mov
and
inc
xor
pushf
mov
jmp
bnd
xchg
mov
scas
mov
and
adc
in
and
mov
sbb
ret
sbbl
loope
test
in
xorb
hlt
orb
cmp
pop
cmpsl
stc
push
mov
out
iret
es
loop
sbb
push
fisubrs
cmpl
fisttpl
jmp
sbb
xor
mov
inc
cmp
fldl
nop
std
into
pop
inc
aas
cli
push
push
sbb
push
dec
xchg
adc
adc
insl
sub
xchg
scas
add
sbb
sub
or
pop
pop
cmp
nop
xchg
cmpsl
loopne
loopne
sbb
lahf
data16
fldl
repnz
call
ss
dec
fnstsw
dec
int
dec
pop
push
movsl
stos
or
mov
js,pn
or
icebp
std
fisubs
mov
or
inc
jno
aas
inc
adc
js
jge
xorl
lret
jne
adc
test
pop
jne
inc
mov
mov
mov
test
xor
ljmp
nop
dec
mov
push
loop
ja
aaa
icebp
test
cltd
mov
outsb
adc
fs
lret
dec
sahf
xor
sahf
mov
mov
xchg
jecxz
cld
test
pop
mov
push
neg
push
movsb
xor
push
mov
mov
mov
add
int
push
cmpsl
out
jge
or
imul
aaa
rorl
mov
in
adc
sub
insb
pushf
sub
jmp
mov
rol
int
adc
loop
outsb
pop
push
or
jge
add
or
fadds
xchg
lods
sti
sbb
xchg
push
scas
jg
sub
inc
in
inc
test
pushf
adc
mov
pop
sub
jecxz
stos
popf
push
and
aaa
incl
insl
lcall
inc
or
push
push
sti
push
sub
leave
push
into
loope
jmp
add
cmp
imull
es
fwait
mov
add
ficompl
in
xor
sub
out
vmovhps
loopne
cmp
mov
dec
push
iret
pop
push
inc
inc
addr16
mov
jmp
mov
aad
adc
xrelease
adc
fstps
pop
xor
test
xchg
push
cmpsl
mov
mov
or
inc
dec
jns
fildll
lds
adc
insl
adc
movsb
push
jge
adc
ja
cmp
mov
das
xchg
pop
adcl
fcmovb
sub
stc
mov
mov
push
popl
into
jecxz
jae
xchg
mov
sub
into
adc
enter
popa
rcl
mov
test
pop
rclb
ss
jb
add
adc
sub
aaa
sub
sbb
mov
xchg
insl
shll
push
inc
in
jbe
push
cmpl
fsubl
adc
sbb
xor
inc
and
sub
mov
or
div
push
jne
aam
inc
and
cmp
stos
jbe
test
stos
sbb
mov
roll
pop
aad
mov
orb
jne
stos
test
mov
js
sub
mov
movsb
icebp
lds
mov
int3
cld
jo
or
inc
xchg
test
adc
adcl
jbe
mov
stos
sbb
lods
add
xchg
stos
push
sub
stos
jecxz
cmpsb
fsubr
xor
int3
jns
outsl
inc
add
aaa
sub
mov
xchg
xor
dec
sub
insb
mov
pop
xor
dec
dec
mov
insb
lcall
rcrl
in
mov
sahf
mov
mov
and
popa
repnz
into
add
and
pop
adc
iret
push
and
out
jo
push
and
jmp
testb
imul
adc
lock
lods
and
cmpsb
jp
cmpsl
add
sub
pop
into
movl
lds
repz
push
push
add
sbb
fstpt
cmpsb
mov
cmp
push
jno
leave
test
aaa
mov
cmp
xchg
xchg
fwait
lods
xchg
mov
sti
into
pop
out
ss
sub
mov
js
xchg
dec
adc
scas
pop
movsl
mov
rclb
fdivrs
mov
xor
aas
cmp
and
inc
mov
mov
int
test
pop
in
jne
mov
movsb
push
in
andb
daa
inc
mov
mov
and
fidivrl
inc
stos
loopne
imul
jae
iret
js
popa
bound
xchg
dec
sub
sti
fcoml
lock
addr16
mov
test
mov
sbb
xchg
jmp
xchg
mov
sub
and
mov
fmulp
jbe
stc
lock
sbb
scas
push
arpl
cmpsl
test
cwtl
loopne
repnz
mov
jp
fwait
jne
and
xchg
cs
dec
aad
xchg
pop
mov
arpl
cmc
mov
fwait
scas
sub
dec
call
jge
movsw
push
pop
mov
xchg
jg
clc
or
push
mov
push
not
scas
and
jmp
xchg
lea
sub
adc
test
lea
sti
xor
popf
xchg
add
dec
mov
pop
fwait
fwait
shll
mov
lcall
or
sub
jne
cmpsl
sub
jg
adc
and
mov
lds
pop
pop
sub
data16
pop
pop
shll
sarl
push
xlat
mov
push
insb
inc
pop
mov
cld
dec
xchg
jp
ja
bound
inc
adc
and
pusha
out
mov
adc
cld
push
in
shl
pop
stos
mov
push
shrb
test
dec
std
ljmp
ret
xor
push
xchg
adc
adc
insb
jnp
fdivs
lret
jle
shrl
mov
sbb
in
pop
xchg
push
adc
add
push
dec
xchg
das
mov
call
pop
add
fsubrs
movsl
mov
jecxz
xor
popa
enter
adc
jb
jp
jmp
lds
aam
cmp
xlat
out
in
sti
pop
loopne
sub
or
adc
shr
stos
aam
cwtl
imul
rcr
dec
dec
and
xlat
sbb
addr16
jmp
dec
pop
sbb
std
rclb
cltd
cmpsl
sarb
push
sub
jg
push
jge
cld
push
mov
sbb
push
fucomp
sbb
xor
scas
cld
push
data16
ljmp
xchg
lret
movsl
ss
pop
popa
lret
mov
sbb
adc
push
cmp
push
dec
jmp
mov
push
xor
cmp
cmp
js
imul
adc
xchg
pop
jge
mov
xchg
pop
push
lcall
xchg
leave
add
mov
lods
and
cmc
mov
push
sbb
jbe
outsb
sub
adcl
mov
scas
mov
dec
sub
fildll
mov
pop
sub
ffree
jb
test
sbb
inc
loopne,pn
negb
mov
test
sub
lahf
adc
test
ret
clc
in
stos
ljmp
mov
aaa
add
std
test
xor
push
pop
mov
lock
fcmovnbe
movsl
pause
sti
mov
fstps
cs
mov
jp
mov
fs
mov
subb
cwtl
pop
xor
call
cmc
adcb
in
sub
cltd
inc
inc
jo
mov
push
icebp
sbb
inc
sbb
addr16
push
and
lret
fsubr
adc
test
loop
sub
in
push
jecxz
fsubs
in
jle
cmpsb
les
add
in
push
mov
push
ljmp
or
test
jo
mov
fcmovne
xlat
sbb
mov
sbbl
cltd
inc
add
orl
xchg
mov
ljmp
push
iret
imul
jl
pop
rcrb
lcall
aas
sahf
cmpsl
pushf
leave
xor
push
pushf
in
out
jne
cmpsl
jns
mov
add
inc
cmp
aas
mov
pop
pop
outsl
pop
enter
lret
xorb
push
and
pop
icebp
lahf
jnp
neg
xchg
ljmpw
push
adc
loop
dec
hlt
mov
rcrb
jmp
popf
mov
adc
sub
push
pop
add
pop
mov
xchg
fwait
jns
rol
inc
sbb
xchg
out
push
out
jge
xchg
cmpsl
pop
push
pusha
mov
imul
sub
push
jp
xchg
adc
xor
sbb
sbb
insb
loope
cmp
ficompl
mov
ret
xchg
mov
fs
popa
add
rcl
iret
mov
and
add
xchg
jnp
or
push
sbb
faddl
lret
xor
adc
lcall
xorl
out
dec
pop
mov
lea
sbb
repnz
leave
cmp
push
ljmp
mov
add
fcom
xor
sub
sub
int
mov
js
xlat
lods
push
enter
int
fmuls
shrb
aam
add
call
xchg
dec
lds
push
xchg
fcompl
or
pop
jno
ds
lods
or
icebp
leave
insl
popa
sub
cmpsb
adc
xchg
sbb
mov
pop
fisubrs
jns
xor
mov
insb
add
mov
sbbb
dec
in
cmp
dec
push
mov
xchg
call
aam
sub
push
enter
mov
mov
lret
arpl
push
adc
mov
lods
mov
dec
cmpb
or
xor
xchg
adc
out
jl
push
sbb
jns
test
push
dec
outsl
imul
sbbb
fildl
fs
test
lret
cmp
jmp
mov
bound
or
push
mov
and
push
adc
adc
jnp
lea
mov
cltd
fldlg2
movl
out
xchg
sbb
dec
inc
push
cmp
cmp
xchg
xor
iret
outsb
dec
daa
das
les
cmp
leave
outsb
hlt
inc
mov
ljmp
sbb
mov
outsb
xor
or
addr16
inc
mov
lock
jo
filds
dec
inc
xor
js
fwait
sahf
push
pusha
into
leave
adcb
xchg
sahf
in
dec
call
lock
loop
lds
testl
push
lods
je
and
ljmp
push
imul
lods
xchg
sub
add
sub
addr16
jmp
fs
lret
jns
aaa
mov
xchg
cmpsb
ret
cmp
leave
lret
insl
jnp
hlt
push
push
fisttpll
or
adcl
rol
test
dec
cmp
mov
in
loopne
mov
testb
shlb
stos
add
cmpsb
mov
insb
add
sahf
ds
push
jle
sbb
lret
jo
movsl
pop
stos
lods
jnp
xchg
add
out
pop
or
sub
add
sbb
iret
pop
loop
cltd
aam
clc
in
shll
cmc
addl
and
sub
xchg
rcll
add
das
outsl
cmp
adc
jo
dec
adc
push
jbe
jecxz
int3
jl
stc
mov
cld
or
jo
out
push
sbb
sub
je
clc
jl
aaa
nop
mov
in
sbb
inc
and
mov
or
icebp
mov
pop
adc
jp
shrb
fucomp
sbb
push
xor
mov
pop
add
lea
sub
rolb
test
or
sub
jb
imul
jge
dec
inc
mov
inc
or
mov
mov
sahf
mov
shr
daa
mov
int3
jbe
mov
pop
pushf
scas
inc
add
jns
test
adc
rorl
outsl
push
cld
lock
mov
insl
inc
ss
arpl
dec
lcall
aad
shlb
loopne
xchg
pusha
adc
lods
nop
out
mov
add
dec
je
icebp
ret
jb
dec
test
add
lea
add
sti
mov
sub
mov
scas
inc
push
lods
inc
fwait
lock
push
or
and
rcr
mov
ret
cmp
mov
clc
leave
sahf
icebp
in
subl
pop
sub
cli
mov
cwtl
jge
inc
cs
sub
jl
sub
xchg
or
push
fcmovb
ret
dec
inc
cwtl
dec
adc
add
mov
es
lods
rcrl
cmc
shl
push
data16
jge
fs
dec
ds
jge
aam
dec
out
mov
test
xchg
xor
pop
fildl
jp
mov
adcb
adc
stos
aam
lret
in
addl
addb
mov
push
sbb
mov
jno
xor
fbld
test
das
fcoms
outsl
aad
lds
rcrb
in
add
insl
emms
dec
xchg
dec
inc
das
popf
and
test
clc
shrb
cmpsb
xchg
xor
jle
add
into
inc
push
jb
scas
mov
mov
and
mov
cmp
and
jns
fisubl
popa
mov
jle
out
idiv
cli
add
mov
mov
imul
ret
jl
pop
sbb
ds
icebp
dec
push
cmp
in
cmpb
pop
adc
fwait
bound
stos
loop
dec
sub
and
ret
jge
cmpsl
xor
inc
cmp
mov
cmpsb
movsl
cs
add
fidivrs
mov
dec
icebp
dec
mov
cmc
and
orl
invd
cmpsb
out
ret
push
in
add
out
mov
push
pop
xlat
movsl
and
pop
cmovne
pop
xlat
dec
dec
movsl
xlat
cmp
mov
jo
movsb
xchg
xchg
jmp
incl
stos
aam
int3
mov
cmp
in
sarl
jp
jb
and
sbb
loop
pop
orb
sahf
or
je
and
dec
mov
jge
fcomip
dec
pop
push
pop
mov
clc
into
popf
fmull
loope
pop
mov
jbe
jnp
and
xchg
cs
fsubl
jns
cmp
jns
or
mov
inc
add
sub
test
sbb
dec
adc
andb
insl
lds
sub
pop
lods
jp
mov
jo
and
cmp
leave
inc
outsl
mov
inc
pop
sub
mov
jle
sub
xchg
push
mov
divb
lret
push
sbb
fimull
xor
ret
movsl
popa
mov
clc
scas
cmp
and
xor
mov
or
shrl
addr16
ret
clc
lahf
out
lahf
mov
cmp
inc
add
popf
pop
and
add
cmp
pop
fnstsw
loopne
aas
mov
pop
adc
mov
fdivl
ds
dec
dec
sbb
or
lock
and
dec
xchg
inc
dec
mov
xor
jmp
mov
lods
cmp
mov
fcmovbe
sti
adcb
pop
jo
inc
movsl
jb
pusha
insl
add
jle
out
fnstcw
pushf
mov
pop
ss
mov
jp
fidivrs
cmpsl
movsb
shlb
dec
test
incl
jae
pop
loop
xchg
arpl
addb
pushf
fsubl
and
insl
jl
xor
fisubrl
mov
and
mov
stos
imul
xor
lds
push
xor
cmp
inc
movsl
push
mov
fiadds
fisttpll
pop
sahf
cmp
in
xor
repnz
cmp
sub
insl
cmp
mov
adc
shll
loopne
add
arpl
out
inc
adc
fcoms
xchg
decb
xor
or
add
ret
repnz
popa
jo
negb
or
adc
dec
std
pop
icebp
addr16
hlt
andb
cltd
leave
ret
inc
inc
mov
repnz
mov
scas
mov
int3
loop
mov
lods
jmp
push
cltd
xor
addr16
push
sbb
mov
mov
repz
mov
sub
dec
cmp
popa
and
fstl
packuswb
dec
arpl
je
cli
insb
faddp
lahf
xchg
dec
add
les
aaa
xchg
fdivrp
imul
ljmp
cltd
jns
popf
sti
mov
cltd
cltd
xchg
push
and
push
rol
aas
adc
stc
subl
gs
fcomps
mov
adc
mov
lret
lods
sbb
xor
jecxz
adc
js
jmp
sbb
dec
mov
es
shll
mov
xchg
fcmove
adc
xchg
inc
mov
pop
cvttps2pi
cmp
scas
jmp
nop
hlt
int
bound
push
push
sar
in
mov
iret
imul
addl
fiaddl
mov
addr16
cmp
sub
imul
fildl
in
idivl
and
push
push
out
dec
nop
test
in
or
mov
mov
mul
xchg
fcompl
xor
popa
stc
mov
lahf
in
and
push
lods
out
push
inc
andb
cmpl
loop
repz
jecxz
cmp
mov
mov
sbb
aas
mov
mov
mov
jb
andl
mov
cmp
fneni(8087
xor
adc
mov
pushf
pop
ljmp
fcoml
test
pushf
jge
jne
mov
xchg
inc
sub
out
insb
mov
jno
push
lea
test
and
lea
cli
pop
divb
pop
xchg
popa
cmp
pop
jo
aaa
pop
ss
inc
test
loope
mov
aam
pop
mov
adcl
inc
arpl
jmp
cmpsb
jns
dec
stos
das
push
jg
aam
cltd
pop
int3
xor
int
and
lret
test
sub
loopne
jae
fmuls
adc
cmp
test
jno
sbb
pusha
adc
rcrb
mov
in
das
sarb
pop
mov
aaa
push
shlb
out
out
push
lret
or
addr16
inc
and
dec
test
ret
test
es
add
je
dec
fildll
lods
divl
fdivrl
stos
fimuls
fisubs
fdivrl
jecxz
into
lea
scas
mov
and
scas
sarl
add
sarl
pop
sbb
or
das
dec
repnz
mov
mov
dec
cld
cs
mov
dec
pop
imul
dec
pop
int
sub
in
mov
pusha
inc
lea
fisubl
inc
xchg
add
or
cmp
jb
mov
shrl
es
loopne
push
fildll
pmuludq
mov
sub
mov
lock
xor
cmp
dec
mov
pop
mov
les
fincstp
mov
fwait
icebp
cvtps2pd
pop
push
divb
pop
nop
pop
jb
shrb
sbb
inc
imul
mov
outsb
mov
out
lahf
add
je
mov
jae
sub
aas
fnstsw
cmp
adc
or
sub
call
xchg
jnp
movq
fcompl
adc
lds
xor
fidivrs
adc
dec
divb
sarb
mov
mov
daa
mov
lret
repz
jmp
mov
sbb
pusha
cmp
jb
ja
lods
add
inc
jle
into
mov
inc
push
add
daa
adc
or
push
hlt
adc
add
jecxz
dec
xchg
inc
lds
jge
shll
jo
es
pop
add
dec
sub
xlat
mov
hlt
dec
jecxz
xor
int3
shlb
xor
test
mov
jp
sbb
dec
arpl
xchg
dec
dec
popa
sbb
mov
inc
xorl
pop
rclb
fst
cmp
jecxz
into
jae
mov
cmp
lcall
loopne
fwait
lock
inc
xor
out
mov
fcmovnb
iret
test
dec
lcall
mov
shlb
add
in
js
fwait
sub
ficoml
aas
pusha
in
sub
incb
ret
cld
test
cs
dec
lods
ja
jo
adc
jle
jg
and
mov
mov
into
pop
jmp
inc
xor
inc
call
out
aad
out
int3
inc
aas
mov
negb
sub
dec
cmpsb
jmp
add
pop
fwait
inc
aas
or
aam
adc
jp
adc
in
cwtl
int
sbb
jmp
mov
lahf
jae
mov
cmp
das
push
jae
cmp
jle
mov
loop
jae
leave
mov
arpl
xchg
rorl
jmp
outsb
into
inc
ljmp
jae
bound
mov
gs
jg
fisubrs
test
jecxz
cmp
cmpl
rcrb
push
cmp
pushf
sarl
out
pop
fsubrs
xor
pop
ret
xor
inc
ja
inc
repnz
out
stc
sub
dec
cmp
loope
dec
fmul
fistl
test
xor
inc
aad
push
xchg
sub
mov
outsb
dec
and
xorl
adc
nop
movsb
jne
cmp
lea
adcl
repz
shrl
jle
pushf
cs
test
pop
mov
sub
cmp
adc
jmp
sbb
inc
orb
ret
cli
repz
mov
repz
pop
and
mov
jge
in
out
int
dec
jnp
popa
dec
bound
outsl
aad
xor
pop
mov
sub
and
sbb
pause
outsl
imul
sbb
jp
xchg
pop
scas
sbb
push
mov
cmpsb
and
mov
mov
xchg
ss
pop
mov
outsl
add
fldcw
jg
or
dec
jo
add
cwtl
add
push
test
addr16
inc
pop
inc
test
xchg
mov
jl
cmp
movsl
jo
pusha
out
lds
mov
nop
push
xchg
fdiv
into
sahf
mov
aas
repz
inc
sbb
inc
filds
add
addb
leave
adc
out
fst
pushf
and
mov
jle
cmc
pop
movsl
dec
nop
loop
mov
mov
sub
sub
dec
out
fdivrl
rorb
cmp
cld
ret
movsl
cmp
mov
sbb
jg
loopne
push
sub
mov
pop
adc
sbb
dec
mull
xor
iret
mov
jb
pop
sahf
mov
sub
and
push
test
outsb
mov
orl
jo
xlat
fcompp
loope
push
ja
imul
push
cwtl
les
mov
sbb
xchg
insb
addr16
aam
out
push
pop
mov
out
cmp
aad
jno
pop
xchg
aaa
arpl
xchg
data16
mov
adc
testl
bound
add
adc
push
push
hlt
or
out
add
sub
cmp
xchg
ss
mov
sub
inc
rcrl
into
lock
int3
das
jmp
inc
ficoml
jnp
or
cmp
or
sbb
out
push
adc
adc
dec
pcmpgtb
out
jmp
mov
insb
loopne
mov
lret
rcrb
dec
cmp
aas
xchg
ret
push
stc
mov
jns
repz
std
rcl
mov
ret
jnp
popf
jecxz
repnz
fcmovbe
mov
mov
inc
push
fdivrs
jnp,pt
out
ret
es
cmp
testb
outsl
add
ljmp
loop
inc
adc
incl
lods
mov
outsb
cmp
pop
pop
call
cmp
pop
sti
icebp
sti
out
andl
shrb
xor
dec
mov
lock
adc
or
out
stos
ficomps
and
pop
out
or
sbb
ficoml
push
jns
sbb
xor
lret
leave
pop
fld
outsb
mov
jnp
sti
xlat
nop
lds
int
add
xchg
cmp
pop
cmp
cld
fmuls
add
jecxz
dec
es
pop
test
loope
data16
mov
jne
sub
in
and
mov
adc
out
cmp
movsb
mov
es
mov
mov
stos
xchg
sbbb
push
mul
pushf
sub
xor
sbb
mov
mov
mov
scas
rcrl
xchg
mov
push
cmp
push
sub
push
jg
fistps
mov
fsubrp
out
inc
aam
lea
fbld
sbb
mov
fidivl
push
cwtl
pushf
jnp
sub
std
mov
loope
jns
nop
adcl
ja
mov
call
cmp
shll
add
fstpl
mov
push
cmp
sub
cmp
dec
lods
adc
cld
adc
ss
enter
xchg
notl
pop
or
subl
fbld
test
into
lret
cmpsl
mov
ret
jmp
jge
sbb
or
jge
fisttps
lret
jp
mov
pop
dec
and
cmc
push
add
ret
push
fstps
test
cmp
movsl
adc
pop
and
in
and
lea
lret
or
adc
cmpsb
push
ja
fwait
dec
scas
jp
lahf
lods
inc
ss
cmpl
movsl
add
arpl
mov
outsl
sub
fsubrs
mov
or
aas
mov
or
repnz
and
mov
std
and
add
aad
xchg
sbb
pop
inc
faddl
xchg
sub
loopne
adc
inc
adc
mov
out
pop
loop
mov
gs
adc
mov
jp
add
cli
jne
pop
xchg
push
sub
in
sub
rcll
add
test
add
mov
and
adc
push
aaa
repz
jnp
dec
mov
sbb
adcb
aad
sub
inc
adc
mov
test
hlt
fisubs
in
push
lret
popa
inc
xchg
xlat
push
mov
cli
dec
aas
dec
rcrb
in
adc
outsb
xor
into
pop
jo
dec
jmp
pop
xchg
mov
dec
mov
stos
pop
jne
sub
jp
jle
sub
cmpsb
shll
popf
cltd
inc
push
mov
insl
inc
test
repz
dec
outsb
mov
xchg
call
ds
and
jmp
inc
imul
das
add
in
mov
xor
incb
mov
clc
das
xchg
cwtl
jge
inc
outsl
lcall
mov
lea
fldt
rorb
data16
dec
jge
fistpl
pop
inc
inc
xlat
adc
scas
lods
mov
xchg
dec
lods
shlb
outsb
js
clc
xor
testl
loope
lret
repnz
mov
add
loop
dec
fstpt
repz
mov
bound
pop
and
movsl
loopne
push
add
adc
push
cld
stos
fcomps
fmuls
sbb
in
pushf
jae
mov
push
mov
xchg
jecxz
ss
mov
aaa
push
cmpsb
pop
lods
mov
andl
xor
cmp
aaa
movsb
repz
gs
aaa
dec
adc
jmp
lcall
and
pop
and
jae
jb
iret
xor
inc
cli
out
xchg
pop
js
js
adc
sarb
movsl
sub
mov
das
dec
lods
sbb
test
testl
cmp
inc
add
cmp
mov
push
cmp
aad
mov
fisttpl
jg
pop
clc
jnp
xchg
gs
jmp
dec
or
sbb
fnstcw
push
mov
and
stos
ficompl
add
push
ja
adc
and
mov
mov
bound
rolb
notl
or
lds
push
insl
xchg
sub
xor
mov
rcrb
sbb
lret
inc
xorl
outsl
jns
add
cmp
repz
js
insl
inc
xchg
lahf
fadd
xor
and
mov
sub
jecxz
subl
inc
push
dec
mov
add
lcall
inc
mov
inc
hlt
stos
inc
movsl
jge
jecxz
and
inc
aam
add
movsl
xor
pop
xor
and
sub
adc
adc
jae
mov
mov
xor
movsl
in
testl
xor
addr16
add
daa
xchg
xchg
dec
add
jmp
cmpsl
imul
pop
call
jp
add
mov
sub
sbb
xchg
pop
or
lods
les
cmp
cld
xchg
push
stc
sub
pop
pop
test
paddq
lods
gs
add
and
dec
stc
test
pop
jmp
fldcw
fdivs
jecxz
flds
cmp
lods
int3
into
pop
inc
pop
cli
jb
push
lahf
xlat
pop
dec
pop
orl
mov
test
bound
test
pop
cmp
repz
jae
mov
icebp
xor
sub
fisubrs
cmc
cltd
mov
mov
and
mov
jmp
or
in
lahf
cld
xchg
dec
dec
mov
movsb
std
add
dec
pop
lea
inc
out
jle
jae
scas
sub
ja
mov
lock
push
fimull
pop
pop
lds
adc
inc
scas
out
jle
inc
fmull
pop
and
je
dec
leave
sub
add
scas
in
dec
loop
fsub
sub
adc
pop
or
cld
add
jg
push
aaa
mov
push
add
ss
in
xchg
inc
mov
stos
mov
fistpl
ret
lods
xchg
es
pop
mov
mov
push
data16
out
jp
mov
add
aad
push
iret
insl
mov
das
inc
xor
inc
out
pop
sub
enter
sahf
out
lods
out
or
aam
js
cwtl
push
cmpsl
cmp
roll
mov
jae
mov
xor
outsl
scas
pop
push
xchg
outsl
fcom
mov
sub
roll
cmp
imulb
ja
jno
and
xchg
and
xchg
fidivrs
sub
push
xchg
lea
pop
dec
shrl
xchg
out
scas
pusha
in
mov
cwtl
mov
sub
cmp
or
cs
incb
orl
mov
jae
icebp
jae
pop
fldenv
sub
xchg
fisubs
cli
pop
rcr
add
sub
arpl
or
into
gs
dec
lods
mov
xchg
into
pushl
adc
pushf
test
into
std
insb
adcb
or
fnsave
cmp
xlat
ja
xor
mov
stos
fdivl
xchg
insl
mov
inc
cmpsl
fists
jl
cmpsl
dec
dec
cmpsb
sbb
cmp
lods
cmp
mov
adc
ja
pop
shll
rolb
mov
xchg
cmpb
dec
dec
mov
sub
and
sub
add
jg
mov
bnd
int
pop
popa
jb
movsl
mov
aam
mov
xchg
cmpsl
sahf
test
cmp
sbbl
add
shlb
sub
mov
inc
xchg
clc
outsl
shll
ss
movsl
dec
shrl
hlt
imul
cwtl
fwait
cmp
insl
es
and
data16
flds
jg
pop
gs
pop
iret
aad
lds
gs
popf
push
loope
pop
dec
int3
test
bound
lahf
xor
sahf
pop
xor
add
call
popf
andb
hlt
pop
daa
or
jne
int
gs
mov
int
push
mov
xchg
mov
adc
adc
rol
faddl
inc
mov
fwait
fwait
dec
mov
out
dec
es
sti
push
xchg
mov
outsl
xchg
dec
jae
fucomi
dec
add
jle
in
cmpsl
hlt
lcall
sbb
sahf
in
pslld
mov
cmp
pop
jg
xor
adc
inc
lods
push
mov
adc
mov
imul
push
or
dec
xor
mov
cmp
lea
and
imul
push
lods
negb
adc
fxch
jge
sbbl
mov
test
cmp
jle
les
xlat
call
push
push
jg
push
fwait
mov
in
roll
in
jno
pusha
wrmsr
stos
popa
cwtl
mov
add
cmp
test
daa
jns
push
xchg
pop
jle
jno
lods
cmp
xchg
or
xor
mov
dec
loopne
xchg
arpl
ficoml
adc
mov
call
repnz
dec
addl
jp
xor
out
and
in
insl
lock
pop
xchg
dec
or
test
fsubs
sub
xchg
fcmovbe
or
test
int3
jg
xor
xchg
push
dec
andb
dec
test
cmp
xchg
xor
inc
add
mov
loope
mov
xchg
scas
ret
xchg
test
cmpb
mov
into
and
pusha
shll
cmpsb
and
insb
cmpsl
mov
mov
or
decb
jns
cmp
xchg
mov
dec
mov
movsb
int
pop
mov
xchg
or
outsl
xor
dec
lret
test
sub
and
jnp
fisttpll
xchg
sbb
xchg
stc
std
add
push
int
or
dec
out
push
and
xchg
mov
pop
inc
push
jbe
jecxz
jne
cld
fistps
lret
inc
sub
add
jg
repz
sub
aas
sbb
jb
mov
lods
mov
and
ds
shlb
fimull
inc
int3
cmp
scas
sub
jecxz
in
adc
cmpb
cld
push
mov
push
imul
jl
bound
inc
cltd
push
scas
xor
iret
pop
out
push
incl
add
f2xm1
jb
xchg
movsb
test
or
lods
fs
mov
mov
inc
ret
or
aas
push
mov
jnp
movsb
repnz
filds
mov
lret
xor
push
fmuls
xchg
inc
clc
repz
loope
xchg
enter
inc
gs
arpl
sbb
sbb
rclb
jg
adc
sbb
mov
iret
ret
imul
negl
cld
inc
mov
pop
in
cmp
jecxz
inc
cmp
jle
loopne
sbb
push
pop
jle
xchg
sub
inc
popa
les
sbb
hlt
dec
xor
and
cmpsl
bound
jp
out
clc
daa
mov
mov
adc
add
sbbb
add
mov
and
sub
jo
or
cmp
rorl
adc
sub
mov
rorl
dec
movsb
test
leave
push
cmpb
pop
xchg
stos
push
pop
xchg
shlb
mov
cmpsl
test
sbb
cmp
aas
mov
lods
les
stos
push
enter
enter
arpl
inc
stos
jb
sub
mov
in
mov
add
insb
and
lea
sarl
dec
add
jg
dec
jne
in
aas
cmp
lods
mov
lods
dec
loop
mov
pop
add
push
and
bound
add
das
lock
nop
arpl
cmc
and
lods
insl
sub
inc
push
popl
mov
fildl
jae
push
sub
pusha
mov
out
data16
sti
ret
movsl
ret
test
fcoml
int3
fcomps
dec
mov
movsb
ffreep
xchg
cli
int
pop
rcrl
jl
mov
sub
stos
and
gs
push
das
cmc
rcrb
aad
mov
ljmp
mov
les
mov
xchg
cli
mov
imulb
adc
or
add
lods
adc
jnp
psllw
outsb
stos
xchg
shll
in
mov
xchg
sbb
and
aad
sbb
call
pop
or
clc
mov
pop
jecxz
hlt
pop
or
out
sbb
sub
and
mov
movsl
test
mov
push
jb
mov
adc
mov
mov
sub
cmpsb
jmp
mov
fs
pop
cwtl
xlat
or
mov
and
leave
push
mov
mov
mov
lods
jne
pop
mov
or
les
stc
loope
jmp
dec
loope
aam
xor
enter
lods
popa
jno
or
insl
and
lret
clc
cmp
cli
ss
push
sub
pop
add
push
fcompl
xchg
push
add
lods
jle
adc
shl
cmp
aam
sahf
mov
add
push
lahf
in
pushf
push
push
loop
into
iret
data16
inc
mov
or
xor
xchg
jno
fs
subps
push
fsts
insl
add
adc
dec
bound
push
push
dec
jno
and
loopne
ja
cmpsl
out
test
daa
cmpsl
jb
adc
stos
aas
or
and
add
prefetchwt1
jb
lcall
hlt
xor
add
outsb
lods
inc
cmp
or
inc
mov
mov
mov
inc
mov
ror
fisttpll
and
ja
inc
jbe
std
out
scas
lds
push
inc
shrl
xor
mov
mov
in
push
dec
sbb
mov
rolb
insl
addb
jg
iret
rcrb
bswap
jl
enter
push
stc
ret
and
cmp
or
dec
push
arpl
push
jb
jecxz
lods
std
lock
mov
xchg
gs
mov
mov
xor
mov
jl
nop
adc
or
and
les
xchg
jno
roll
lcall
push
cmp
movsl
jns
and
fsubs
das
in
xor
jb
faddl
insl
mov
movsb
cmp
clc
je
pop
add
lods
sub
stos
push
jg
or
dec
push
outsb
cmpsb
xchg
pop
in
lock
outsb
adc
repnz
jmp
sub
popa
or
or
push
call
data16
mov
shlb
jno
jmp
fistpl
push
xchg
pop
add
jbe
into
push
add
test
cmp
xchg
mov
jb
xchg
push
imul
test
cmp
add
cmc
pop
es
in
stc
popf
dec
sbb
fildll
arpl
jg
xchg
push
aam
dec
cwtl
jl
jmp
jle
adc
xor
sub
cmpl
mov
cli
lds
shrb
mov
cmp
push
andb
daa
pop
add
push
mov
jo
jne
sarb
ljmp
dec
and
dec
pop
ss
xorl
aam
ret
or
test
mov
jnp
xchg
imul
dec
cmp
fisttpl
inc
movl
inc
mov
jbe
sub
dec
jmp
fstp
mov
ret
je,pn
sbb
lahf
stc
push
or
mov
arpl
movsl
arpl
scas
adc
arpl
adc
loope
cmc
cmp
or
push
jg
cmpsb
push
pusha
mov
push
int
xor
mov
xchg
fcomps
ja
stc
int
aaa
jnp
jo
outsb
and
and
push
inc
imul
sub
push
sub
clc
pop
testl
sub
cld
pop
add
jp
or
or
mov
jne
ret
in
cmc
xchg
xchg
sub
scas
cmp
add
dec
push
lds
sar
pop
fsubrl
pop
or
xchg
inc
jno
lret
fldenv
jo
mov
jo
fucomip
xor
leave
jmp
push
mov
lcall
lcall
inc
push
neg
andl
out
cld
out
or
and
inc
sbb
add
push
mov
xchg
testl
add
or
rcrb
rcr
jnp
notb
xchg
lcall
inc
cmpsl
test
mov
xor
adc
subb
mov
inc
popa
pop
lock
mov
dec
jecxz
and
or
cli
rcr
mov
push
xchg
dec
cld
fwait
es
lret
push
lret
icebp
cmpl
loope
out
inc
out
add
inc
in
sbb
scas
cmp
jne
test
adc
stos
push
js
test
rcr
neg
jg
mov
sub
loopne
cltd
fmull
add
cmc
js
jo
cli
jnp
sbb
and
mov
cmp
imul
scas
pop
loope
push
dec
mov
mov
adc
es
rcrl
pop
enter
out
xor
jg
inc
xor
lcall
sbb
cs
imull
cmc
push
push
aad
clc
mov
cmc
fsubrp
add
pop
dec
out
sub
sbb
push
adc
adc
xor
addr16
mov
dec
xor
int
jle
adc
dec
lds
ljmp
xchg
and
jle
cmc
push
mov
mov
jl
push
shll
shrb
test
jmp
dec
clc
repnz
add
test
inc
pop
test
or
sbb
xchg
lea
or
jecxz
jo
jl
mov
and
ds
sti
push
push
iret
mov
mov
lret
push
dec
jl
call
sbb
inc
inc
dec
psrlq
lret
pop
pop
dec
cmp
test
mov
adc
lret
imul
mov
adc
bnd
dec
jne
aam
push
pop
addr16
mov
fdivrs
imul
and
sahf
movsb
cmp
mov
inc
xchg
imul
fldcw
jecxz
repz
fmuls
mov
cmp
xchg
clc
pushf
dec
sub
into
nop
xchg
mov
sub
inc
loopne
push
shll
cmc
jge
movb
popf
pushf
lds
sbb
adc
inc
icebp
arpl
leave
dec
xchg
or
mov
aad
jnp
add
scas
loope
adc
sub
and
and
jbe
rcr
ss
stc
mov
mov
mov
arpl
xor
sub
sbbb
jmp
push
call
mov
test
outsb
and
jo
jns
mov
popf
fsts
xor
pop
sub
mov
movaps
loope
pop
les
or
jb
aam
jge
aam
dec
roll
cltd
out
jnp
aas
mov
mov
inc
push
lretw
shl
xor
mov
dec
in
aas
insl
sub
inc
inc
push
jno
std
out
dec
mov
push
adc
aad
int3
dec
cmp
xchg
cmp
inc
stos
cmpsb
leave
mov
add
jmp
push
pop
mov
jecxz
ljmp
loop
daa
adcb
test
hlt
inc
jo
repnz
pop
stos
mov
dec
cmp
xor
es
or
in
and
sub
into
mov
inc
adc
pop
add
lret
cli
test
jg
push
jno
fimuls
sbb
fcompl
jl
push
addr16
pop
pop
mov
test
sti
movsb
and
negl
aaa
into
push
loope
jnp
or
aas
adc
insl
pop
cmp
mov
inc
adc
inc
push
leave
jl
loopne
pop
mov
mov
adc
mov
out
lds
or
push
jle
subb
bound
fdivrl
push
push
mov
adcl
outsl
dec
movsb
mov
jge
mov
in
xor
cmc
in
iret
hlt
mov
lret
cmp
mov
bound
dec
mov
stc
cmpsb
shll
rorl
imul
les
add
in
shr
mov
in
xchg
popa
xchg
fisubrl
lods
roll
in
adc
dec
lahf
stos
fs
ss
mov
aad
inc
negb
dec
repnz
fdivl
fldl
sarl
cmp
push
mov
in
sbb
sub
jmp
mov
pop
sub
mov
push
mov
fwait
incb
in
fisubs
cmp
push
cmpsl
fs
aam
jg
dec
push
js
mov
pop
xchg
inc
sbb
lret
cmp
and
mov
push
cmpsl
pop
mov
mov
jmp
sub
mov
cmpsl
flds
mov
cmp
inc
mov
jnp
mov
xorl
mov
daa
fdivrs
xlat
loopne
xor
fwait
mov
cmpsl
dec
lods
js
adc
xchg
inc
leave
dec
loopne
xchg
lret
idivl
es
inc
cmp
sbb
cmpsb
sub
push
mov
xor
or
push
test
sbb
sete
sti
scas
push
pop
mov
mov
push
repz
decb
repz
lods
leave
mov
movl
and
repnz
cmp
mov
lcall
lret
sbb
sbb
xor
add
inc
push
fnstenv
mov
sarl
mov
xlat
addr16
xchg
lods
or
or
dec
push
or
movsl
out
addr16
mov
pop
push
int3
adc
cmp
mov
mov
aad
sub
es
or
adc
cwtl
addr16
cmp
xchg
iret
js
outsb
aaa
push
xorl
or
add
rorb
rolb
cmpsl
mov
rclb
jle
inc
push
pextrw
dec
sbb
mov
cmc
cmpsb
movsl
arpl
repnz
push
dec
notl
push
enter
mov
outsl
mov
jl
inc
iret
imul
sbb
xor
testl
jmp
and
sbb
or
das
dec
les
int
push
lahf
inc
je
and
add
pop
push
sti
push
inc
xchg
notb
mov
cmp
and
xchg
xchg
sub
pop
dec
dec
mov
mov
xchg
jne
scas
inc
sub
jo
cmc
ds
icebp
jno
loop
jnp
jp
jg
call
sub
adcb
push
les
in
ja
jg
cmp
dec
xor
adc
ret
sub
mov
xor
add
rclb
mov
pop
cmc
and
push
call
mov
fdivrl
push
jns
rclb
xchg
jb
xchg
push
push
xor
mov
out
cld
enter
mov
into
xlat
or
dec
and
orb
adc
push
pushf
leave
pop
out
scas
out
mov
pop
scas
cmpsb
ds
repz
bound
cwtl
divl
and
fistl
or
inc
sbb
inc
mov
xor
cmp
cmpsl
mov
sub
call
sub
xor
xchg
imul
loopne
and
imul
jnp
in
or
cld
mov
adc
push
inc
imul
subb
popf
sub
mov
cmp
inc
jle
cmp
in
js
scas
mul
scas
or
in
jl
cmp
enter
aad
test
xchg
add
adc
fistpl
mov
repnz
and
mov
stos
sti
inc
adc
and
popf
and
pop
mov
mov
or
sarb
cs
int
dec
call
lods
jns
dec
jl
xor
jmp
sub
mov
ret
mov
ret
or
mov
movsl
idivl
ljmp
ja
mov
nop
inc
add
outsl
pop
or
cmpsb
mov
bound
push
pop
push
insb
pop
loop
fwait
das
cli
add
outsb
or
test
test
cmp
xchg
mov
std
shlb
sarb
out
xor
pusha
xchg
and
fsubrl
and
mov
fwait
jae
mov
out
orb
push
push
mov
cmpsb
add
mov
negl
imul
dec
js
xor
idivl
jae
mov
xor
scas
dec
xchg
mov
sub
div
sub
mov
ret
int3
sub
sub
pop
pop
pop
and
mov
ds
ds
pop
movsl
ficoml
enter
mov
mov
into
fstl
out
push
mov
out
scas
nop
rcll
mov
sub
jo
das
xchg
or
dec
mov
sbb
xor
sub
out
pop
aad
push
sub
in
fwait
push
lea
popf
in
in
pop
bnd
ja
icebp
aaa
and
mov
or
dec
test
sub
loopne
mov
mov
mov
add
mov
pushf
jl
inc
addr16
movsb
sbb
jp
loope
mov
enter
cld
or
lock
loopne
ss
mov
inc
aad
jp
outsb
lods
pop
pop
ret
sbb
cmp
xchg
pop
xchg
mov
mov
inc
imul
pop
out
cmp
adc
jbe
jbe
pushf
adc
push
ljmp
movsb
inc
sti
and
movsb
test
aad
in
add
xlat
mov
test
sbbb
lahf
repnz
lahf
pop
xor
push
push
inc
inc
ja
cltd
ficoms
dec
cmp
lret
jno
mov
cmpsl
jns
dec
adcb
bound
mov
orb
stc
aas
in
or
lret
sbb
nop
inc
inc
jmp
mov
mov
or
and
insb
enter
outsl
pop
roll
cmpsl
int3
fistpl
rol
call
xchg
mov
out
push
fnsave
adcl
movb
pop
enter
pop
test
aaa
cmp
pop
jne
and
ljmp
std
and
cmp
push
lock
push
outsl
daa
lret
mov
outsb
cmp
push
xchg
mov
pop
sbb
mov
mov
cmp
in
pop
push
ljmp
shlb
cltd
mov
sbb
push
mov
adc
sub
aaa
push
push
xor
mov
cld
pop
fisubrl
lock
sub
aad
jns
inc
jl
stos
pop
push
mov
pushf
fisttpll
inc
or
stos
loope
push
mov
mov
sub
test
push
xchg
mov
jns
enter
jl
loopne
test
mov
ret
or
sub
das
push
jae
ret
push
xor
xor
fisttpl
in
das
pop
cmc
je
out
jbe
cmp
lods
stos
pop
insl
sub
jnp
sub
stos
xchg
push
add
fistl
jbe
dec
pop
in
push
insb
xor
jne
nop
dec
pop
daa
sub
and
push
xchg
mov
loopne
sarb
lret
pushf
iret
sub
mov
jne
or
inc
test
cmp
cwtl
inc
xchg
mov
sbb
lods
cmp
jb
jae
outsb
in
ds
mov
popf
ja
and
sbb
nop
test
dec
xchg
mov
imul
hlt
lahf
pop
lods
fsubr
push
sub
cmp
dec
jg
lret
mov
std
lods
sub
adc
fcompl
inc
jp
shlb
addr16
add
jge
ss
iret
idivb
jge
js
out
push
fwait
mov
pushf
ljmp
pop
popf
mov
movsl
and
push
dec
mov
add
sub
cli
pushf
out
xchg
int3
sub
into
pop
int
jmp
out
add
dec
jns
add
jmp
notl
xchg
loop
inc
loop
add
inc
xchg
sbb
adcl
and
sbb
lcall
in
sti
pop
mov
jae
pusha
clc
loope
dec
add
and
inc
sbb
pop
push
or
jmp
jb
jecxz
fimull
adc
pop
cwtl
mov
jmp
fsub
xchg
sub
test
test
addb
push
sti
and
data16
mov
and
xlat
and
scas
enter
pop
push
jg
jmp
aas
sub
icebp
inc
inc
scas
subb
mov
pop
rcrb
fcompl
push
stc
aad
lods
inc
mov
jnp
fs
push
loope
adc
pop
rorl
das
push
sbb
pop
jbe
jae
gs
sbb
and
rorb
pop
push
sarb
mov
pop
int
and
shl
call
out
out
jp
mov
sub
sub
subb
push
stos
cmp
sub
mov
in
xor
aas
xlat
out
jae
lock
fcmove
leave
test
jge
aam
xor
inc
pop
mov
jl
sbb
jecxz
bound
push
popa
push
or
test
and
imul
popf
rorl
in
flds
ljmp
in
jo
ficomps
pushf
sbb
and
rol
cwtl
or
adc
sub
or
adc
aas
pop
and
xchg
pop
fbld
pop
mov
or
pop
bound
mov
repz
dec
jae
sub
out
iret
dec
xchg
out
shll
xchg
sahf
sti
jle
and
push
xchg
addr16
jp
fsubr
imul
fwait
adc
sub
jae
cmp
push
les
inc
ret
jb
mov
lds
cwtl
dec
or
and
decb
shl
insb
xchg
xchg
mov
cmp
pop
pop
inc
jns
out
mov
mov
cmp
fnstcw
adc
repnz
jl
add
mov
add
jmp
adc
jp
dec
cmp
call
jbe
ret
or
jle
divb
mov
inc
inc
mov
shlb
mov
mov
daa
mov
jl
jnp
and
xor
sbb
test
push
xor
shll
mov
sti
pusha
popf
pop
lds
je
or
inc
vpsrlq
sahf
sti
sbb
xchg
icebp
cmp
icebp
xchg
or
pop
push
pusha
jae
adc
or
imul
stc
xor
clc
or
ret
adcb
pop
add
dec
movsb
imul
pop
push
movsl
and
or
sub
cmpsl
lods
leave
push
push
sbb
mov
inc
gs
push
and
test
pop
mov
arpl
cmp
sbb
test
fistpl
cmp
add
adc
push
aaa
pusha
jne
lods
cmc
jne
mov
shlb
out
pop
daa
fisubrs
lret
mov
dec
into
incb
sub
jo
shl
pop
sbb
cld
shlb
popa
lret
es
js
xchg
add
mov
xor
sbb
mov
jae
stc
pop
fwait
mov
iret
popf
jmp
cmpsl
adc
movsl
and
iret
mov
or
sub
mov
adc
and
lret
sbb
adc
out
clc
outsl
insl
dec
jl
imul
add
adc
or
mov
bound
pop
cmp
stos
mov
inc
cs
sahf
xor
add
push
fs
xor
out
add
xchg
dec
enter
outsb
dec
popa
stc
out
jmp
fwait
movb
mov
and
loopne
decb
xor
imul
add
mov
leave
xchg
xlat
repnz
dec
pusha
leave
in
jge
adcb
mov
add
ss
jge
cwtl
push
shlb
inc
leave
inc
jle
pop
ret
inc
call
test
sbb
test
xchg
or
sbb
jbe
jb
add
std
inc
cmp
dec
notl
inc
jle
inc
rcl
jo
sahf
lret
dec
ds
inc
adc
and
addr16
cmpl
or
ljmp
out
mov
mov
mov
inc
js
mov
lock
cmpsl
jno
mov
sbb
aad
repz
sbb
stos
xchg
pop
dec
movsb
mov
sarb
push
add
inc
ljmp
cmp
dec
dec
and
decb
jmp
movsl
xor
arpl
push
sub
adc
or
daa
mov
xchg
sub
mov
aad
adc
aaa
jmp
jl
sub
ds
fsubrs
xlat
xor
jo
jno
je
jnp
out
popf
sti
fnstsw
push
push
nop
sbb
inc
vandpd
js
cmp
out
mov
addl
decl
test
pop
loop
lock
fisubrs
sbb
sub
pop
xor
lret
xor
and
js
pop
push
rclb
mov
xchg
sbb
mov
movsb
movsl
add
addr16
push
pop
adcb
dec
js
jge
movsl
movsb
cmp
xlat
jno
inc
push
test
out
pop
rcr
cld
repz
push
mov
mov
fimull
cltd
or
mov
out
and
insl
sbb
xchg
stc
fdivs
mov
mov
adc
push
sbb
mov
and
push
push
jnp
call
pushf
pushf
pushf
jge
pop
pop
push
arpl
adc
andl
and
aas
cmp
call
xor
sahf
push
push
cmpsw
sti
pop
push
pop
xor
push
xchg
xchg
sbb
mov
fisubs
inc
out
les
cmc
push
mov
aam
mov
loop
test
pop
xor
rcrl
or
out
lcall
push
sbb
sbb
adc
cmp
cwtl
dec
mov
pop
insb
cmp
nop
cwtl
outsb
mov
cmp
xchg
and
in
pusha
mov
add
mov
jno
call
jecxz
aas
clc
fisttps
dec
mov
loopne
out
pop
lret
hlt
mov
fucomi
ds
mov
jno
pop
cmp
jne
push
daa
inc
mov
ljmp
push
jp
nop
rcrb
inc
int
inc
xor
insb
or
dec
jp
loopne
jle
shlb
dec
lea
cs
std
outsb
mov
jmp
icebp
jl
cmc
mov
fs
stc
mov
push
or
dec
aaa
sahf
inc
mov
fisttpll
test
das
mov
fs
sub
aam
mov
jecxz
mov
sbb
in
ret
std
cwtl
cwtl
sbb
out
push
xchg
ss
mov
test
mov
inc
cmp
fbstp
inc
into
and
popf
adc
mov
dec
and
sub
inc
das
or
cli
sub
pop
popf
fldenv
xchg
nop
push
sub
popf
int
pop
push
test
sarl
bound
fisubrs
movsl
mov
mov
jo
inc
cmp
out
push
sub
in
int
cmpl
mov
and
mov
arpl
std
add
push
cmpl
ljmp
out
into
pop
adc
clc
lret
fsubs
jle
xlat
jmp
jp
pusha
lahf
out
jno
push
lahf
push
jns
cwtl
xor
fdivl
xor
pop
lcall
rorb
mov
adc
fmulp
and
mov
sbb
sbb
inc
jle
cmp
filds
pop
or
imul
imulb
loopne
and
jp
cmpsb
push
cmp
aas
loope
adc
xor
ror
outsl
inc
imul
jp
jmp
jg
test
dec
imul
dec
lret
or
xor
lds
mov
ss
dec
lods
out
xor
scas
jp
and
adc
xchg
ljmp
gs
push
cmp
jecxz
popf
pop
fmuls
pop
adc
aam
int3
jmp
mov
pop
or
and
jno
cmpsb
xchg
data16
into
ss
jle
dec
pushf
pop
lret
std
mov
in
lret
jae
lret
push
ljmp
dec
ss
psubusw
sub
add
xchg
enter
xor
subl
fsubl
mov
cmpsb
pusha
int
mov
jmp
out
jns
ljmp
sti
dec
je
ficomps
insb
xlat
aam
pop
add
imul
adc
or
shr
lret
outsb
jmp
pop
test
mov
mov
repz
inc
insb
mov
jo
cmp
sbb
in
and
pop
ret
xchg
push
data16
je
mov
shr
xchg
rcrl
notb
leave
les
in
push
pop
sbbl
iret
ja
adc
test
cmc
lret
push
andb
mov
or
sti
sti
push
xor
loopne
shr
cmp
push
jl
iret
iret
loop
inc
adc
jbe
repnz
mov
fnstenv
inc
jmp
stos
aas
push
insl
push
sub
clc
in
and
fsubrl
jns
and
lret
and
stc
pop
jg
and
cmp
jmp
insb
push
push
jb
decl
nop
movsl
jae
jne
or
popa
mov
insb
js
jo
fldl
adc
sub
sbb
lcall
add
mov
loope
pushf
mov
pop
orl
aad
add
into
pusha
aam
pushf
mov
ja
cmp
in
dec
mov
mov
dec
imul
sub
addr16
and
mov
and
inc
jb
pop
ret
loopne
test
adc
pop
adc
cmp
subl
jae
clc
std
mov
stos
sti
fstpl
das
push
adc
add
xchg
pop
scas
cs
jne
pop
scas
mov
add
movsl
sahf
mov
lret
xchg
lea
sbb
test
stc
push
push
and
xor
pop
push
or
pushl
inc
dec
adcb
shll
dec
mov
pop
dec
push
inc
cwtl
repz
add
ds
pop
cmc
cmpl
repz
cmp
mov
pop
out
push
subl
mov
fidivs
push
rcl
mov
sub
and
fstpt
rcl
leave
inc
aad
dec
mov
pop
fdivs
jno
add
sarl
and
xchg
icebp
imul
fisubl
lahf
xchg
jmp
test
pop
mov
imul
fistpl
xlat
inc
mov
in
sbb
sbb
lcall
aas
and
cmpsb
cmpsl
fistl
das
xchg
and
incb
and
pop
dec
jg
js
xor
lock
paddd
mov
rorl
xor
stos
dec
mov
sbbb
xchg
lods
pop
mov
hlt
cmpb
imul
sub
mov
outsl
jne
pop
push
jns
mov
outsb
push
or
jo
std
lds
icebp
jnp
pop
push
pop
popf
push
jmp
imul
ret
xor
pop
ss
out
outsl
movsl
sub
and
aam
cwtl
out
lds
mov
movsb
jecxz
aad
add
in
sbb
jge
int
pop
insb
das
aas
add
inc
fistl
outsl
sub
sbb
pop
aas
cmp
pop
push
rorb
add
mov
mov
push
test
hlt
xor
add
cltd
push
xlat
cs
lret
jmp
push
ja
jbe
orb
add
mov
imul
sbb
imul
push
leave
mov
test
test
xchg
cmpsb
aaa
int
cltd
scas
inc
push
fcomps
mov
or
push
fsts
scas
movsb
mov
xor
out
repz
adc
repz
sub
or
and
fwait
adc
scas
or
lcall
outsb
movb
jbe
and
push
xchg
sub
mov
xchg
iret
mov
ljmp
mov
jg
in
imul
adc
outsb
inc
mov
data16
orb
pop
popa
and
jl
add
or
aas
mov
cs
repnz
sete
cltd
ljmp
rcrl
or
mov
xor
mov
mov
into
mov
sbb
fidivrl
lcall
mov
movsl
les
outsl
ss
filds
and
sarb
packsswb
mov
mov
cmp
movsl
or
pop
mov
mov
inc
jnp
loopne
or
lods
and
fldenv
in
jb
xor
loop
cwtl
fnstcw
aas
push
mov
movsb
dec
out
cmp
xor
mov
mov
inc
xor
popa
les
push
lahf
mov
cld
mov
int
sbbb
pop
xor
add
nop
imul
div
lods
add
sbb
std
sbb
in
bound
push
idivl
mov
add
leave
cs
pop
subl
sbb
jbe
dec
xchg
or
out
std
inc
jp
sahf
int3
mov
jmp
mov
das
mov
test
dec
cmc
mov
mov
add
fwait
icebp
xor
add
mov
pop
hlt
mov
std
mov
repnz
mov
lds
cmpsb
mov
sbb
fs
dec
fimull
mov
fdivs
and
mov
jmp
sub
pop
push
cmp
test
pusha
inc
int
xchg
and
into
testb
out
pop
xchg
cmp
sti
cmp
push
ds
jmp
repnz
xchg
push
mov
cmp
ret
adc
cmp
jne
ret
push
xor
lcall
jmp
push
ljmp
sbb
pop
push
enter
test
push
sbb
fistl
mov
pop
jle
lock
aam
jne
pop
lods
scas
leave
push
xor
out
sub
push
pop
adc
clc
mov
xor
jb
fcomip
negb
cld
les
jno
xchg
fistpll
mov
loop
inc
arpl
cmp
or
pop
repz
ror
add
imul
lods
inc
cmp
cmp
gs
or
mov
push
xor
add
in
fstpt
jl
rolb
push
and
shrl
jmp
scas
inc
out
fbstp
test
pusha
aaa
xchg
sub
icebp
imulb
pop
add
jno
insl
test
cmp
adc
cmpsl
inc
lock
sbb
es
inc
dec
and
data16
push
xor
jecxz
xorb
fbstp
cmp
dec
adc
cwtl
lock
sbb
std
mov
push
movsl
push
xor
ds
xor
and
cmp
xchg
push
dec
mov
adc
aam
fdiv
fidivs
add
scas
mov
es
dec
loope
inc
add
xrelease
add
add
or
ficoml
aam
call
imul
cwtl
rep
jne
inc
xchg
in
lds
pop
inc
xor
subb
repnz
xor
jl
jne
sahf
dec
sub
movsb
or
dec
test
cmp
dec
cld
in
out
rorl
pop
mov
inc
mov
sub
push
loope
pushfw
sbb
push
testb
outsb
loope
add
mov
ss
cli
dec
mov
sysexit
jae
push
jnp
rdtsc
inc
ljmp
into
dec
sub
cmp
cmp
jb
out
mov
inc
mov
add
movsb
push
lcall
aas
outsl
lods
adc
inc
cmc
dec
jns
mov
lret
sub
hlt
daa
out
rcrl
adc
in
mov
cmp
cmpsb
push
inc
fists
ja
lods
rorb
addb
xchg
shrb
jo
push
stos
mov
rclb
ret
mov
dec
push
hlt
add
lock
cmp
pop
test
gs
daa
inc
out
push
insb
test
and
inc
leave
mov
bound
mov
xor
mov
xchg
das
sbb
notb
filds
int
inc
repnz
test
adc
shlb
scas
test
adc
push
cmp
pop
pop
fdivs
icebp
dec
cli
loope
rcrl
icebp
dec
dec
ljmp
sbb
mov
in
aam
sbb
movsb
push
leave
cmp
stc
popf
mov
mov
adc
jp
pushf
or
and
test
jmp
push
jl
imul
in
loop
test
mov
sti
ret
jp
mov
out
int
jg
in
sub
pushf
bound
jmp
bound
adc
ljmp
cmp
loop
mov
push
cmc
pop
loopne
dec
in
test
and
loopne
sahf
jno
pop
ret
cmpsb
xor
pop
sahf
dec
orl
mov
and
scas
ja
lret
aaa
pop
in
pusha
pop
arpl
cmp
fwait
add
aaa
lahf
cmpsl
fcompl
mov
and
push
loope
cmp
add
stos
aas
xchg
faddl
cmp
xchg
cmp
cmpsl
pop
je
daa
inc
jg
add
lahf
jno
outsl
mov
jne
xchg
pop
xor
xchg
in
jne
pop
xchg
mov
push
push
add
aaa
mov
scas
add
push
sbb
inc
xchg
pop
sarl
cs
filds
inc
jmp
pushf
push
add
xor
mov
ss
movsl
in
adc
push
jae
out
mov
mov
or
mov
out
pop
jl
inc
push
icebp
test
rorb
push
jl
dec
mov
mov
nop
lret
ror
add
jle
js
fdiv
adc
cwtl
es
ja
mov
sbb
xchg
mov
es
imulb
shlb
insb
xor
int3
inc
lea
loop
xor
out
sbb
out
cmp
mov
int
into
movsb
mov
popa
rcll
pop
arpl
pop
xchg
or
and
add
push
mov
mov
rclb
sub
mov
das
mov
pushfw
inc
aam
add
fmuls
imul
pop
fpatan
sub
jo
xor
jns
jnp
fnstenv
push
push
and
lcall
cli
js
mov
lret
jl
and
fst
scas
notl
mov
sbb
je
stos
push
popa
lcall
and
inc
inc
jbe
repz
clc
fwait
sarl
in
cltd
sub
nop
sbb
inc
fst
mov
pop
mov
pop
xchg
mov
outsb
mov
jmp
cmp
jnp
gs
mov
mov
jmp
sti
fimull
xchg
bound
imul
dec
inc
pusha
mov
loope
rclb
jecxz
mov
mov
insb
jns
loopne
jmp
test
inc
inc
xchg
insb
mov
mov
insb
pushf
sub
out
jb
adc
daa
test
test
xor
jo
mov
mov
fcompl
push
jp
data16
cmpsl
pop
call
sbbl
xchg
inc
fisubs
mov
pop
pop
mov
xor
mov
mov
xchg
cmp
orb
sar
stos
fsts
repz
or
push
cmp
int3
scas
shr
jmp
sbb
xlat
lds
xchg
lret
ret
shl
jmp
add
mov
push
dec
stos
addl
in
lds
fimull
stos
insl
xchg
mov
sub
enter
mov
fldl
aaa
outsb
subb
rorb
out
sbb
insb
repz
push
shl
std
dec
ret
pop
lds
mov
jl
hlt
push
movnti
adc
icebp
out
xchg
push
mov
ficompl
jle
and
inc
jne
mov
mov
jb
mov
inc
or
push
jnp
or
mov
subb
or
cli
in
pop
cmp
sbb
pop
push
rcrl
inc
enter
inc
jae
sti
repz
mov
pop
sti
push
jge
inc
shll
jecxz
loopne
jmp
lock
push
and
stc
loope
sub
incl
xorb
mov
inc
stos
in
cmpsl
pop
roll
lds
add
adc
mov
sbb
inc
and
xor
ret
fwait
pop
jnp
push
into
stos
jle
fisubrs
leave
jge
adc
xchg
inc
push
pop
aas
jo
push
fdivp
hlt
scas
push
xor
xlat
aaa
add
xlat
adc
sbb
test
add
lods
aaa
movsl
addb
hlt
pushf
arpl
scas
cmp
inc
dec
sbb
xor
or
add
sbb
or
ja
fsubrl
push
jmp
icebp
ja
push
shlb
popa
mov
add
mov
jno
push
fwait
jbe
or
or
nop
mul
add
dec
sub
mov
cmp
mov
jno
mov
pop
pop
xor
scas
faddp
pop
and
jbe
mov
test
fs
inc
mov
lock
mov
test
insl
repnz
cmp
jbe
movsl
cmp
cmp
sub
inc
xchg
popa
dec
cmc
push
rcll
hlt
push
sbb
rcr
cmp
pop
jmp
xchg
mov
adc
leave
xchg
pop
lds
aam
mov
push
test
scas
ret
sbb
inc
add
out
mov
ficoml
jbe
pop
les
movsl
fbld
cmc
test
dec
fisttps
lods
ss
pushf
aaa
or
add
int
xor
lcall
addb
lret
arpl
sbb
sbb
xchg
pop
cmc
mull
fistpl
jnp
push
adc
jns
rorl
sbb
jmp
mov
jne
fwait
addr16
push
cltd
das
stos
mov
sbb
repnz
bound
ret
icebp
lret
mov
sub
xchg
ss
loop
jecxz,pt
push
lock
fidivl
mov
or
mov
adc
lods
dec
add
mov
push
cld
stos
cmp
test
sbb
sub
jmp
sub
daa
add
cs
mov
div
or
push
mov
popa
jnp
sarl
cld
sbb
fadds
push
cmp
mov
dec
lds
or
add
dec
fwait
adc
and
pop
test
ficoms
jl
and
test
stos
js
psraw
xchg
insl
push
loop
pop
xchg
mov
mov
inc
jge
push
add
pop
lock
inc
mov
mov
icebp
sbb
clc
pop
cmc
inc
and
movsl
adcb
fstl
mov
popf
call
aas
push
push
pop
js
ss
sbb
pop
in
outsb
test
rcl
fwait
inc
cmp
jp
in
mov
lret
push
mov
xchg
popa
lahf
stos
inc
push
mov
jns
pop
or
pop
repz
push
popf
xorl
pop
leave
sub
cmpsl
in
xor
push
rcl
lods
fnsave
inc
adc
jno
mov
ljmp
inc
out
xlat
lea
push
leave
push
xor
cmpsl
mov
or
subl
out
sub
mov
mov
cmp
data16
faddl
mov
fisttpll
mov
and
mov
push
test
fldt
add
sbb
pop
lret
outsl
xchg
ss
fstps
test
mov
add
scas
fcomps
sub
mov
test
loop
popa
rclb
adc
mov
shlb
cmp
cmp
sub
je
sub
mov
xchg
and
mov
ds
pop
int3
push
fs
arpl
fwait
popf
fisubrs
aam
outsl
push
inc
pusha
out
mov
push
addr16
faddp
cltd
mov
cld
in
scas
orb
fldl
int
or
outsl
stos
das
popa
imul
mov
add
jg
inc
leave
adc
sbb
pop
mov
cmpsl
sbb
test
or
rcr
int
cld
in
xchg
xor
or
enter
es
or
loope
sub
out
cmpsb
daa
xchg
xor
xchg
call
data16
daa
dec
dec
or
mov
jnp
aam
movsb
and
es
std
dec
adc
test
imul
shr
ds
lret
add
mov
adc
mov
mov
repnz
stos
jae
lahf
cmp
xchg
sub
hlt
mov
dec
and
cmpsl
insb
iret
mov
add
add
mov
in
and
pusha
or
adc
or
repnz
scas
or
sbb
or
sbb
push
or
movsl
rcll
gs
sbb
out
and
shlb
and
mov
sbb
cmp
mov
mov
xor
repnz
fidivrl
jns
in
cmp
sbb
lds
sub
gs
adc
sbb
pop
mov
and
sub
pop
sub
test
inc
push
push
mov
mov
fdivl
inc
int
inc
sub
divb
and
jl
adc
lahf
aad
test
add
mov
sub
or
push
dec
je
push
andl
adc
loope
inc
sahf
push
lret
fdivs
outsb
xor
xchg
test
sub
mov
ja
sub
test
inc
enter
iret
add
jbe
in
iret
xor
push
and
mov
stos
sbb
push
add
outsb
pusha
aam
fs
jmp
int
mov
mov
pusha
or
shl
lea
cmp
fldt
imul
lcall
xchg
jo
sahf
jae
pushl
sarb
or
and
mov
sub
in
loope
ja
out
bound
gs
push
cmp
movb
cwtl
jecxz
hlt
mov
dec
lret
jge
mov
iret
xchg
add
arpl
repz
int
in
lea
pop
inc
mov
fadd
push
inc
in
mov
xlat
push
mov
repnz
inc
jae
adc
inc
mov
xchg
sub
shll
cltd
add
scas
push
pop
sti
in
ja
ret
test
mov
jnp
ret
mov
pop
test
sub
mov
dec
pop
mov
fmuls
xor
fisttpll
test
aas
insl
lds
mov
shll
jbe
stos
add
mov
sbb
sar
popf
xchg
pop
jle
pop
cmpsb
mov
xchg
test
add
aam
call
dec
out
fbld
pop
js
xorl
gs
sbb
sbb
pop
fdivp
pop
add
sub
aad
jb
sbb
sbb
pushl
cli
aam
aaa
sub
push
aam
stos
push
mov
cs
mov
fisubrl
test
ss
dec
xchg
lods
popa
mov
ffreep
jg
fdivl
pop
std
test
mov
aas
sub
cmp
or
cltd
cmc
jo
sub
gs
in
movsb
xchg
jl
lods
lea
adc
ret
mov
xor
adc
add
dec
dec
xchg
sub
jae
ds
xchg
cmp
pop
inc
das
cwtl
and
jns
dec
and
or
adc
pop
pop
pushf
aaa
subb
inc
out
iret
mov
test
jecxz
mov
mov
xchg
xchg
cld
sub
adc
xlat
sbbl
aad
js
aaa
aam
mov
sti
cwtl
ljmp
sbb
mov
stc
arpl
sti
mov
aaa
nop
lret
add
and
pop
xor
cmpsb
hlt
ljmp
inc
mov
out
adc
pop
lea
xor
fxch
mov
sbb
sub
push
jns
fistps
jle
or
dec
pusha
add
pop
jno
push
popl
mov
mov
sbb
jmp
xchg
rorl
es
repz
mov
sti
jnp
enter
icebp
add
or
dec
xlat
sbb
jnp
lock
sub
int
mov
rcll
addl
test
jno
fdivl
or
mov
inc
ja
jl
pop
push
das
mov
jecxz
add
rorl
sbbl
sbb
ret
cmpsb
xor
and
out
in
in
jmp
addr16
subb
xchg
test
in
push
test
das
ret
pop
mov
sub
std
cmp
sub
jl
cmp
lods
ficoml
push
pop
and
pop
mov
xchg
fildll
out
push
icebp
xor
outsl
lods
add
pop
popf
pop
mov
adc
ja
xchg
jmp
fcom
notl
jne
sbb
push
mov
dec
push
clc
adc
xor
setg
in
daa
xchg
loope
adc
lds
popl
push
inc
out
inc
jne
leave
xchg
in
xor
arpl
inc
lea
mov
push
dec
fidivl
les
mov
cmc
xlat
bound
or
and
mulb
mov
shll
into
out
or
adcb
out
xchg
bound
xor
lea
push
push
mov
inc
sbb
inc
adc
scas
mov
in
sbb
aam
mov
call
fs
pop
adc
mov
shll
xchg
add
sbb
lea
pop
sarb
fstps
int3
loopne
vmovdqu
aam
iret
jo
call
inc
sti
dec
add
xor
add
int3
lods
adc
inc
push
mov
add
add
shll
add
push
pop
push
loop
in
fidivl
sbb
pop
mov
roll
popf
xor
mov
popa
jne
xor
aaa
mov
mov
ret
repnz
insl
adc
ljmp
sub
and
bound
ja
mov
push
sti
mov
inc
fcompl
adc
popa
xor
jne
mov
sbb
call
jb
sbb
or
popa
rorb
add
das
add
mov
jne
mov
in
in
push
cmc
mov
mov
and
xchg
shl
imul
gs
sub
xchg
xchg
push
xlat
adc
mov
scas
les
mov
das
add
pop
push
in
out
ror
stos
and
loope
mov
repz
mov
mov
sarl
shl
push
movsl
daa
sub
leave
pop
lahf
jl
repz
or
popa
pushf
push
adc
enter
xchg
push
dec
mov
sbb
dec
adc
enter
in
pop
fwait
cmpsb
xchg
mov
pusha
cwtl
jns
icebp
sub
pop
sbb
xchg
push
jge
loopne
mov
adc
mov
push
xor
cmp
or
xor
mov
lock
bound
fs
xor
xlat
push
add
jecxz
fwait
xor
xlat
xchg
negl
xchg
out
shlb
mov
sbb
mov
mov
inc
repnz
fcmovnu
sbb
inc
cmpl
fnstsw
mov
lcall
mov
std
jl
test
mov
dec
lods
cltd
add
movsb
clc
ss
mov
pushf
adc
inc
dec
aad
shlb
ficoms
leave
popl
push
pop
int3
jge
orb
out
or
cli
jne
push
lock
mov
lock
bound
ret
es
mov
jmp
out
nop
inc
repnz
dec
std
es
lahf
and
and
bound
sbb
call
ret
xchg
testl
lahf
in
pushf
mov
imul
jnp
in
stos
or
xchg
loopne
andl
fsub
clc
mov
xor
mov
pop
pop
pop
std
or
stos
int3
lds
subl
sarl
pop
or
popa
adc
sub
inc
movsb
int3
daa
sbb
xchg
inc
lret
ss
cmp
lea
adc
aas
ds
loop
js
inc
adc
pop
mov
xchg
jnp
jnp
repnz
mov
test
mov
mov
pop
push
or
daa
push
fdivl
or
rcrl
xor
roll
fidivs
ss
inc
andl
fs
imul
add
shll
cmc
mov
inc
jo
pop
cmp
mov
fisttpll
jmp
sbb
push
loope
ds
push
and
or
fwait
pop
mov
pop
cmp
sub
int3
mov
shrb
push
xchg
jnp
xchg
idivb
gs
mov
pop
add
cmpsl
ljmp
sub
lods
fdivrl
sbbl
mov
pop
repz
adc
ds
mov
nop
jne
jl
add
shl
mov
je
xor
jmp
loopne
stos
mov
lds
mov
mov
mov
ds
pop
fadds
push
cmpsb
cmpsb
test
testb
mov
add
arpl
push
out
cmc
out
test
fs
mov
cmpsl
jp
mov
xchg
subl
push
inc
popa
dec
iret
pushf
mov
pop
mov
mov
inc
push
mov
push
dec
xor
loope
dec
jbe
mov
in
push
mov
sbb
lahf
repz
mov
push
xor
subl
pop
cmp
mov
sub
js
lcall
sbb
xor
clc
cmpsl
xchg
jno
rcrl
lahf
addw
loopne
fbld
sub
into
adc
and
jae
repnz
sub
jno
xchg
cmpsb
dec
jns
cmp
mov
imul
aam
dec
xchg
add
clc
push
cmp
push
hlt
pusha
lods
shlb
or
jno
cmp
mov
sbb
mov
decb
sahf
cwtl
sahf
cmpsl
sbb
clc
xchg
mov
mov
mov
pop
pop
fmuls
fmull
jnp
mov
popf
inc
ds
fldt
jmp
sub
adc
rcrl
push
jb
imul
push
adc
outsl
xor
out
mov
add
mov
lret
push
ficoml
add
push
fmuls
inc
xchg
fs
mov
aaa
rclb
ret
sub
and
adc
shrl
in
daa
pop
mov
lds
aas
orb
shrb
in
or
pop
ret
cmp
push
or
mov
imul
or
mov
ds
inc
sub
adc
sbb
pop
test
lods
lahf
lret
scas
pop
push
js
repnz
outsl
cmpsl
xchg
or
adc
or
cmpsb
mov
mov
mov
sub
add
leave
xchg
mov
inc
cmpsb
ficoms
lods
popa
lahf
dec
inc
mov
icebp
divb
mov
sub
clc
outsl
push
in
or
mov
dec
pop
xchg
and
push
jp
dec
lds
inc
xor
out
mov
pop
enter
jno
adc
pusha
stos
inc
push
cmp
cmp
cmp
and
and
sbb
outsl
add
cmpsl
xchg
push
aaa
pop
movsb
sbb
sub
xlat
jb
xor
sbb
dec
outsl
push
jns
in
fsubrl
and
sbb
mov
data16
jb
cmp
fs
int3
cwtl
pop
pop
addl
loopne
mov
je
cmp
inc
imul
sub
sbb
mov
push
repz
pop
inc
pop
ljmp
scas
ljmp
scas
sbb
insl
mov
push
mov
push
xchg
cwtl
and
push
fnstcw
sti
aas
fstpl
cmpsl
fcomip
les
mov
push
xor
jmp
idivl
test
mov
mov
mov
test
sbb
pop
add
test
stos
mov
adc
ss
xchg
leave
mov
bound
clc
fs
mov
add
or
pop
jg
test
jbe
dec
push
push
pop
dec
fisubrl
dec
into
mov
leave
inc
jbe
mov
imul
adc
or
out
pop
dec
jo
std
mov
pop
add
sti
mov
xchg
xor
cltd
or
jge
movsl
mov
mov
ds
sar
popf
cmpsl
out
sbb
mov
jne
mov
jne
nop
pop
jo
rclb
push
push
gs
cmpsb
push
inc
jge
mov
ljmp
les
jns
mov
int
fs
mov
icebp
xlat
aas
ljmp
or
jl
in
xchg
bound
jb
xor
ja
mov
push
test
or
out
lcall
mov
cmp
lahf
sub
sti
orl
in
mov
subl
int
ja
fsts
jnp
push
in
or
ja
test
or
scas
shl
pusha
sub
imul
or
push
test
sbb
out
in
aam
push
gs
jbe
pop
negl
lock
sbb
decl
push
fs
rolb
fstpl
mov
push
adc
sbb
dec
xchg
idivl
out
jg
pop
push
and
insl
nop
xchg
sbb
cli
out
push
inc
adc
adc
fcmovbe
movsl
imul
mov
pop
das
ret
jnp
loopne
lahf
lock
test
xchg
fbld
mov
fcomps
stos
out
xor
mov
jnp
lea
push
adc
push
lcall
cmp
in
mov
lods
cmp
shr
icebp
movsl
cwtl
xor
cmpb
add
mov
xor
jnp
fistps
dec
push
stos
cwtl
sbb
inc
ret
shrl
xor
jns
mov
or
negl
push
lds
rorl
icebp
inc
inc
push
dec
pop
movsl
aam
inc
in
in
mov
dec
aaa
mov
push
pop
cmp
aam
int3
mov
xchg
mov
cmpsl
mov
lock
idivl
pushf
push
stc
xorb
mov
mov
pop
insl
out
loop
rolb
ss
add
fisubrs
and
or
call
jbe
sub
rorb
adc
xor
js
fdivrl
cmpl
adcl
mov
and
and
cs
aaa
jp
sti
mov
ret
xchg
test
out
pop
and
mov
dec
mov
cvtdq2ps
cmp
ds
jl
call
and
mov
insl
push
fwait
jnp
addl
sbb
pop
and
xchg
dec
mov
fidivrl
xor
mov
das
ret
sarl
shrl
push
decl
outsl
aaa
jecxz
mov
xchg
subl
or
sbb
iret
inc
aas
lcall
sti
ja
or
mov
jmp
or
or
fisttpl
cwtl
jne
ret
das
mov
pop
dec
adc
clc
sbb
xor
cwtl
pop
jge
stos
and
call
cmp
ret
adc
dec
pop
cmp
push
inc
imulb
push
lahf
lods
outsb
addr16
mov
inc
lea
and
push
outsb
xor
jle
pop
dec
mov
pop
es
mov
push
cld
cmp
cmpsl
call
loop
mov
xchg
pop
or
lods
xor
lcall
mov
mov
mov
gs
jo
ja
sbb
cli
or
cld
xchg
iret
pop
adc
stos
fsubl
jne
idivb
data16
or
xlat
sti
mov
pop
movups
xchg
push
mov
push
adc
mov
push
mov
inc
pop
ljmp
jmp
ficoms
cs
incl
mov
jmp
mov
pop
push
dec
pop
sahf
mov
aas
ss
out
ds
sbb
sti
adc
push
cmp
inc
loop
dec
aas
add
add
sub
pop
mov
test
ds
rcl
mov
addr16
push
rorl
aam
and
fsubrp
je
das
jecxz
push
xchg
jns
or
cmpb
sub
xor
xor
pop
jo
cmp
jbe
lea
pop
movsb
movsl
loope
sub
mov
test
adc
pusha
gs
je
lds
shlb
push
jbe
pop
add
imul
stos
cli
jecxz
or
add
movsl
jno
ja
adc
mov
mov
outsl
loopne
xchg
sbb
aas
sarl
dec
out
xor
dec
inc
aaa
sub
leave
mov
fbstp
mov
test
and
push
and
int3
scas
jae
add
sub
repnz
mov
lock
inc
push
cmp
sti
fcompl
push
xor
cmp
xchg
fucomip
mov
test
dec
fmuls
lahf
orb
cld
sub
cmp
sub
es
xchg
lock
xor
jbe
add
dec
pop
mov
and
mov
loop
fsubrp
sbb
aad
mov
mov
jmp
divl
ja
nop
sub
insb
mov
mulb
cwtl
adc
loope
leave
aas
repz
cmp
inc
cmp
dec
pop
mov
or
andb
aam
ljmp
daa
or
shr
fists
lret
in
inc
stos
lods
clc
xchg
maskmovq
divl
sub
int
nop
inc
imul
repz
sub
adc
jbe
je
pop
ljmp
jmp
or
in
mov
mov
xchg
or
push
adc
dec
adc
add
mov
ljmp
test
and
lret
and
jnp
add
in
mov
gs
lahf
mov
sub
cs
int3
dec
sbbl
jb
mov
cwtl
je
icebp
sbb
popa
sbb
mov
aas
scas
cltd
aas
mov
dec
add
sbb
js
xor
pop
add
adc
jnp
sub
insb
addr16
push
lcall
mov
test
jg
and
mov
outsb
fwait
mov
push
and
and
add
arpl
dec
push
call
push
push
cmc
add
pusha
cld
inc
inc
pushf
jnp
gs
cmpsb
aad
cmpsl
push
call
rclb
sahf
rep
out
sbb
inc
fdivl
inc
xchg
jg
mov
adc
adc
mov
js
xor
add
cmp
xchg
add
inc
test
pusha
fisubs
jbe
dec
iret
mov
push
xor
lret
imul
roll
test
outsb
scas
dec
ret
popa
imul
dec
push
fdivrs
adc
adc
fsubrl
mov
cmp
xchg
push
rorb
jo
lahf
lea
stos
cs
cld
scas
lea
cmp
aas
dec
mov
xlat
out
pop
aaa
sbb
inc
gs
rcrl
ss
push
out
data16
jge
fdivl
push
inc
add
movsl
in
sbb
in
pop
mov
negl
jnp
add
sbb
test
test
push
test
sahf
aas
add
aaa
cmp
lcall
pop
cmpsb
and
addr16
mov
mov
pop
popf
test
pusha
outsl
sbb
inc
cmp
push
aas
and
pop
cs
cmp
adc
cmpsl
xchg
lods
adc
jnp
pop
xor
jbe
fildl
mov
xor
jmp
data16
lods
push
xchg
mov
pop
lret
and
jge
xchg
dec
pop
dec
iret
sub
mov
fldenv
mov
mov
xchg
stc
out
daa
test
shll
xor
gs
lret
xchg
cwtl
inc
jo
in
pop
ror
and
cmpsb
adc
pusha
push
push
int
testb
push
stc
test
sub
push
adc
mov
xlat
add
fcom
push
mov
and
push
pop
mov
mov
es
cmp
cli
dec
lods
stc
lcall
cmpsl
jnp
sbb
in
xor
sarb
push
ss
aad
loop
sub
mov
outsb
idiv
push
lret
jl
test
push
pop
xchg
sbb
dec
clc
mov
arpl
out
jp
sub
fwait
adc
adc
pusha
xchg
cmc
int
test
lret
add
jp
push
stc
mov
test
mov
lcall
enter
jmp
repnz
jecxz
aad
cmp
add
out
inc
stc
push
jo
and
and
test
or
in
jne
cmp
push
les
inc
call
fcoms
mov
jle
subb
jmp
mov
rol
mulb
rol
cli
adc
jge
clc
lds
outsb
jmp
push
jmp
cmp
push
or
mov
loope
js
shrb
imul
and
ret
xor
stc
xorb
idivl
sub
int3
imul
repnz
adc
shl
sub
or
pop
outsb
sub
jnp
pop
scas
xlat
sbb
into
jbe
push
lret
jae
in
lods
jo
addr16
mov
mov
outsl
nop
or
xor
fwait
ss
repnz
xchg
cmp
leave
mov
cmc
inc
mov
push
sub
cmp
cmc
mov
mov
push
jecxz
mov
push
inc
add
scas
scas
push
inc
cwtl
fwait
add
and
or
xchg
and
mov
gs
and
fwait
mov
mov
std
cmp
outsl
enter
add
aas
jb
push
push
loopne
les
loopne
jae
bound
mov
aas
inc
cltd
outsl
out
add
sub
lcall
stc
pop
lds
pop
loope
mov
aam
and
aaa
adc
pop
mov
pushf
xchg
arpl
and
testl
clc
cmc
xor
mov
sub
mov
xchg
in
cwtl
ss
in
cmc
cmp
pop
cmp
rsqrtps
inc
inc
arpl
cwtl
out
cmpsl
hlt
mov
pop
je
std
jb
icebp
mov
and
mulb
sbb
int3
jp
and
aaa
sbb
mov
daa
js
xchg
popf
data16
mov
xor
out
ret
stos
ss
ret
ss
mov
outsl
xorl
xchg
cmp
fs
in
push
mov
mov
add
inc
or
lods
pushf
aam
add
push
out
pusha
subl
mov
and
xlat
leave
dec
cmp
js
test
or
sbb
cmp
dec
dec
popf
cltd
fidivrs
sub
inc
andl
std
clc
fwait
sub
inc
and
fucomi
fbstp
fwait
add
jge
jne
bound
int
mov
adc
adc
xchg
or
lahf
mov
xor
test
in
sbb
aad
mov
pop
dec
cmpsb
pop
cmp
dec
cli
or
movsl
and
jo
cli
mov
mov
cmpsb
cld
mov
pop
lcall
adc
in
int
mov
sub
test
fwait
cmp
hlt
xchg
jle
outsb
out
popa
mov
jae
sarl
lds
jbe
notb
call
jnp
or
jne
das
fs
icebp
inc
mov
pop
call
aad
sbb
int
or
js
jb
sbbl
int
jle
pop
and
cli
xchg
add
imulb
jecxz
enter
leave
int
mov
pop
repnz
push
dec
je
fdiv
mov
inc
outsl
xchg
push
cltd
xor
imul
cmp
mov
fbld
loopne
xchg
pop
mov
adc
push
roll
hlt
shll
lahf
fldenv
inc
ja
jmp
test
bound
fbstp
xchg
daa
int3
fcoml
mov
lret
jg
or
push
test
fidivl
xor
xor
push
jae
or
sub
das
cmp
cmp
adc
dec
xlat
rclb
and
imul
mov
pop
mov
cld
jbe
dec
dec
hlt
cmp
aam
cltd
cmpsb
mov
mov
mov
sub
stos
sbb
sbb
adc
std
push
nop
icebp
addr16
sti
lods
sbb
xchg
lds
or
gs
test
lret
shrl
jae
mov
pop
push
xchg
out
jne
icebp
xor
sub
push
push
leave
fldl
insl
pop
xor
mov
mov
repnz
ja
push
mov
push
lret
and
repnz
cmp
add
aad
adc
or
sub
sbbl
test
cmp
popf
sbb
cltd
sub
and
ss
push
faddl
jb
mov
pcmpeqd
jl
fildll
add
ds
repz
ret
jg
cmp
das
xorb
and
andb
das
cmpl
add
das
inc
into
and
mov
mov
sbb
xor
jae
cmp
call
fwait
add
sbb
scas
movsb
xchg
push
inc
pushl
mov
pop
cmpl
xchg
mov
dec
xchg
mov
mov
xchg
inc
es
cmp
or
or
frstor
lock
push
into
cmpsl
dec
and
cld
mov
sarb
loopne
outsb
fwait
mov
aas
cmc
stc
lahf
lret
mov
pop
inc
mov
rcll
sub
loop
and
jmp
mov
sbb
push
push
inc
movsb
mov
add
ret
xor
imul
sbb
add
push
cmp
les
jecxz
mov
stos
sbb
pop
dec
mov
pop
inc
out
fnstsw
and
out
push
movsl
int3
test
xor
movsl
mov
add
fbld
stos
sbb
xor
xchg
imull
dec
outsb
aad
cmp
punpckhdq
cmp
call
jns
frstpm(287
and
and
rcll
test
aam
or
mov
inc
cmp
add
iret
mov
jge
cltd
jno
cmp
mov
mov
into
les
lock
outsl
mov
icebp
mov
pop
dec
setb
push
push
xchg
stc
test
in
mov
out
shrb
sub
mov
sub
add
sub
and
ret
push
out
push
outsb
jne
aas
cmc
aam
jmp
jb
imul
insb
movsb
xor
gs
sub
cli
pop
aad
and
mov
jnp
stos
mov
iret
sub
and
data16
fisttps
pop
jg
jle
xchg
xor
pop
fsts
in
jmp
lods
ss
in
shrl
int
push
mov
and
sbb
fisubs
lret
imul
dec
mov
mov
dec
mov
lret
shll
sbb
cld
fs
sbb
notl
cmpsl
dec
pushf
addb
lds
mov
loop
and
out
mov
mov
push
sub
adc
mov
and
or
in
out
xchg
scas
loope
or
aas
lahf
xor
mov
not
repz
pop
pusha
hlt
jg
mov
inc
mov
xchg
lcall
push
jae
imul
sti
mov
jmp
lods
sbb
or
mov
cmp
mov
imul
sti
jge
test
insl
movsb
aam
aaa
add
jp
das
sub
xchg
into
adc
xor
pop
sub
mov
outsb
dec
jmp
dec
fsubl
rcrb
push
idiv
insl
sti
mov
jne
cltd
movsl
mov
aam
mov
insb
out
icebp
pop
cld
lods
rclb
fnstcw
mov
push
cmc
push
mov
jp
inc
jns
push
insl
test
or
mov
mov
cmpl
repnz
aaa
out
pop
xchg
sbb
insb
sub
push
sub
xchg
xchg
fisubrs
sbb
mov
sbb
data16
int
xor
repz
and
push
push
xchg
push
jle
aas
pop
dec
push
sbb
clc
push
lahf
pop
lret
call
dec
mov
add
pop
xor
in
inc
or
data16
std
int3
jmp
inc
popa
mov
lds
jmp
rcrb
adc
clc
add
outsl
mov
iret
jle
shrl
imul
xor
and
xchg
cltd
jl
dec
sbb
xor
dec
inc
adc
adc
aad
in
push
adc
cs
push
pusha
mov
shrb
mov
adc
movsb
sbb
enter
sub
test
xchg
outsl
lock
add
xchg
jge
arpl
aad
dec
push
testl
adc
cltd
sbb
popf
mov
test
fisubrs
arpl
or
push
mov
mov
mov
jns
push
push
hlt
mov
insb
cmp
xchg
insl
cmpb
cmpsb
imul
push
pop
imul
pop
xor
rclb
in
fistl
int3
xchg
mov
loopne
outsb
popf
push
cld
push
push
sbb
push
push
nop
add
into
mov
sbb
cmp
clc
testb
sar
adc
xchg
lods
fidivs
lods
pushf
enter
inc
cmp
jb
and
jno
shl
ror
repz
bound
lcall
mov
sahf
xchg
pop
sbb
lods
fisubl
push
clc
loopne
loopne
sbb
adc
push
inc
pushf
sbb
xchg
sti
cli
pop
es
xchg
lahf
push
xchg
cld
js
sub
cmp
or
test
shlb
xlat
out
cld
jecxz
imul
mov
pop
jecxz
dec
lea
rorl
xor
adc
ljmp
jb
push
sbb
popaw
jo
and
mov
sub
repz
push
push
cld
adc
or
or
iret
in
cmpsl
jae
ret
xor
fdivp
or
push
push
add
out
jns
pushf
inc
shrb
pop
shrl
pop
subb
lock
ret
cmpl
popf
mov
pop
add
jp
in
repnz
jae
pop
fabs
int3
cmp
shrl
mov
divb
sbb
jae
cmp
mov
test
outsb
lds
pop
pusha
push
lock
add
rcrb
shr
aas
xchg
or
scas
in
jae
test
adc
fbld
cs
and
lods
push
out
lret
and
cmp
adc
push
scas
xchg
inc
pop
mov
daa
add
jle
scas
cltd
rol
subb
sub
push
frstor
xor
pushf
ds
leave
jns
or
mov
dec
dec
xlat
outsb
call
sub
jmp
ret
insb
jecxz
fstpt
push
add
call
data16
ror
test
adc
movsb
and
js
mov
lret
scas
sbb
std
cmp
cltd
rorl
xor
push
jmp
sub
addr16
fs
les
ficoml
dec
shr
fwait
xchg
icebp
call
inc
xlat
inc
fiaddl
push
aaa
es
push
repnz
jbe
push
mov
ret
addr16
std
jle
dec
mov
mul
cmp
js
insb
into
dec
mov
fsub
fcoms
loope
dec
sbb
movsl
inc
mov
ss
pushf
insb
cmp
dec
js
das
test
mov
jnp
or
insb
int
push
and
call
cmpl
outsb
dec
lds
jp
xor
lods
dec
test
ja
scas
mov
push
je
and
stc
popf
or
int
sub
jg
push
inc
dec
scas
aad
jbe
and
addb
out
mov
sub
sbb
lahf
addl
push
dec
mov
jge
cmp
sarb
rclb
mov
lret
or
aaa
xchg
pop
mov
lock
icebp
addr16
xchg
testb
pop
aam
jge
outsb
xchg
ds
or
xchg
inc
int
cmc
int
test
pusha
mov
insl
and
push
rorl
push
insb
test
mov
in
xchg
bsr
xor
popa
cvtps2pd
adc
mov
xchg
out
push
sbb
xor
test
daa
mov
sub
xchg
jl
and
sub
sbbb
cmp
ss
addr16
fwait
je
or
sbb
das
sbbl
cmp
push
mov
jns,pt
dec
fs
ja
push
psrad
das
aad
mov
sub
shlb
cld
jne
ret
outsl
bound
jne
fwait
jno
sbb
push
outsb
mov
fimuls
repnz
mov
jmp
and
adc
adcb
push
xsha1
cmpsb
or
add
xchg
mov
lret
scas
dec
and
adc
mov
aam
mov
insb
xor
mov
dec
out
mov
jl
xchg
cld
push
push
movsb
cmp
push
jge
mov
fmulp
or
jae
cmp
fists
cmp
lcall
xlat
pop
fsub
xchg
inc
adc
lods
stos
shll
lret
jbe
inc
and
pop
dec
sub
mov
enter
push
mov
adc
popl
ret
outsb
pop
push
cld
add
sbb
push
notb
pop
in
lods
bound
xchg
adc
or
push
insl
pop
mov
adc
test
sub
inc
push
mov
mov
or
aam
dec
pushf
mov
and
push
ja
js
mov
dec
imul
lods
in
or
xchg
xor
jl
addr16
in
push
jle
cmp
xor
pop
std
int
call
out
sub
popf
mov
pop
sub
inc
adc
dec
or
inc
xor
cmp
loope
dec
sub
lds
addl
mov
xchg
aaa
cmpsb
int
push
rclb
mov
sahf
cld
ret
push
aad
or
pop
add
inc
jbe
dec
add
arpl
scas
cmp
pop
scas
fwait
xchg
mov
hlt
iret
ret
pop
sub
push
aas
iret
cmova
hlt
frstor
dec
lea
push
xor
pop
dec
push
xor
jb
nop
inc
in
jne
inc
cmpl
leave
push
sbb
cmp
subl
clc
pop
fsubs
fdivl
mov
insb
ret
arpl
push
pop
xorl
out
push
add
sti
loopne
adc
add
hlt
cs
mov
pop
push
outsl
decb
test
pop
fcompl
insl
pop
push
push
adc
sub
xor
mov
sub
mov
add
insl
divb
cld
cmp
sub
mov
in
cld
sbb
inc
xchg
jle
and
rorl
mov
mov
xchg
inc
fs
scas
push
jbe
je
test
inc
movl
cld
lahf
cltd
sbb
mov
pop
aad
xchg
test
leave
sahf
lods
sub
mov
xorb
ja
push
push
and
hlt
sbbl
loope
sub
fmull
dec
mov
int
fwait
scas
insb
out
xchg
xorl
or
nop
pop
mov
clc
mov
xchg
sbb
sbb
push
ss
aad
mov
cld
jmp
aad
aam
pop
mov
inc
jno
lods
xlat
and
xor
sub
out
loop
lock
imul
sub
ljmp
shl
mov
outsl
clc
cltd
mov
pop
sbb
and
xor
sbb
adc
lds
ret
jle
lods
jae
clc
inc
popf
jns
fmull
out
out
cmp
mov
mov
fisubrl
imul
aas
xchg
lock
fcomps
loop
inc
shll
inc
cs
push
xor
lret
pop
ds
je
js
xchg
insl
ss
addr16
xchg
and
sub
inc
repz
cld
xchg
arpl
xor
jb
repnz
jmp
cmp
movsb
mov
lods
adc
push
jns
mov
xor
jo
push
imul
test
pop
mov
inc
fwait
or
loope
mov
add
stos
pop
incb
hlt
es
and
bound
cmp
mov
sbbb
rcrb
hlt
aad
jbe
int
lock
addr16
sbb
sbb
outsl
stos
leave
add
aas
fcomps
sub
mov
cmp
dec
inc
and
cld
push
sbbb
inc
pop
xchg
scas
sbb
in
mov
ds
mov
mov
sahf
dec
insb
sahf
ss
test
push
out
cltd
cmp
push
repnz
pop
jl
mov
pop
or
aam
testb
aam
fsubl
jb
arpl
nop
stos
scas
add
fsts
jns
scas
pop
xchg
add
push
pop
pop
scas
xlat
sub
jo
jge
push
adc
dec
je
aaa
test
pop
cmp
out
ljmp
pusha
push
lret
ret
cltd
inc
sbb
test
fcmovne
inc
inc
out
mov
aam
pusha
xor
xchg
and
std
add
sub
inc
fmul
mov
xor
jge
clc
cmp
aaa
sbb
xor
mov
dec
fdivrp
es
fwait
push
cmp
pop
pusha
ret
scas
or
pop
inc
sahf
push
mov
setg
js
imul
fs
or
xlat
lods
sbb
push
fistps
rorb
aaa
lahf
mov
xor
dec
stos
scas
and
jmp
repz
fsubs
lods
jo
popf
add
sbb
push
cmp
out
hlt
cmp
movsb
pushf
jge
adc
cli
xlat
bound
sub
and
lods
andb
fmul
andb
and
and
sahf
mov
mov
xchg
inc
maskmovq
dec
and
xchg
push
mov
sbb
dec
cmp
inc
mov
leave
test
pop
add
cmp
test
aaa
test
sub
xchg
dec
sub
or
int3
or
fcmovnb
mov
add
mov
xchg
icebp
cmc
roll
call
inc
or
jbe
pop
std
arpl
jge
mul
mov
push
leave
stos
out
add
insl
out
mov
int
lret
lods
jmp
stc
sbb
jo
inc
or
movsl
push
push
dec
pop
inc
push
push
push
pop
movsb
js
xchg
mov
jbe
pop
sub
mov
test
or
ss
xor
xlat
xor
mov
adc
or
dec
push
sahf
dec
or
jg
fisubrl
frstor
mov
movsb
add
int
sub
or
scas
pop
fwait
xchg
xchg
rcr
inc
dec
rcll
xchg
and
dec
and
insl
xchg
out
int
dec
cmp
sub
or
inc
enter
push
add
fwait
lods
test
je
xchg
arpl
es
xor
or
push
test
les
shrl
mov
imul
loope
adc
cli
adc
sub
pop
sbb
push
cmp
leave
shll
add
fs
in
push
xchg
movsl
jmp
idivb
or
and
sbbb
imul
shrb
jns
adc
adc
data16
ja
mulb
push
test
mov
das
dec
mov
mov
ds
mov
sbb
push
push
lret
fs
pop
ret
insb
sub
push
popa
dec
pop
sub
lock
fs
push
ret
or
rcr
push
and
inc
and
outsb
test
in
jp
adc
pop
in
push
mov
sub
sbb
cmc
fnsave
sbb
pop
xchg
xchg
push
dec
cltd
lds
push
js
fstp
icebp
cmp
mov
pop
jo
lahf
xchg
push
fucomip
loope
fists
or
mov
sub
mov
dec
aaa
or
mov
pop
adc
gs
clc
pop
dec
mov
daa
mov
dec
sbb
out
fs
dec
mov
jae
push
mov
mov
xor
xlat
imul
sub
cmc
xchg
jmp
loope
movsl
and
fadds
fistpll
mov
xor
jae
mov
in
shrb
adc
xchg
out
xor
jns
push
loop
pop
or
add
in
mov
or
mov
adc
addr16
es
fmull
stos
leave
mov
hlt
add
ljmp
jb
sar
pop
xchg
pop
pop
and
insl
vhsubpd
das
lock
pusha
push
shlb
jo
movsb
call
jecxz
data16
mov
loopne
push
push
adc
mov
or
adc
push
stos
test
sarb
in
lret
aad
pop
fbstp
xchg
mov
and
mov
and
add
jl
in
xor
cvtps2pi
movsl
lods
push
adc
cwtl
sbb
orb
mov
mov
mov
in
add
dec
push
mov
incl
mov
push
sti
insb
mov
jno
sbb
jg,pn
mov
mov
xchg
sub
push
mov
mov
jbe
lock
adc
inc
lret
lcall
and
adc
xorb
out
decl
testl
incl
inc
push
cmp
or
xor
call
es
addr16
mov
add
sub
idivb
nop
dec
movsb
mov
insl
insb
cld
xorl
inc
push
mov
clc
xor
jno
sbb
dec
dec
mov
rcrb
push
out
dec
push
sub
mov
and
pop
inc
mov
xlat
push
fisubl
xor
out
pop
jg
mov
test
data16
outsl
orb
je
sbb
icebp
aaa
xor
cwtl
int3
mov
test
push
pusha
mov
in
rclb
ds
inc
stc
sbb
xchg
cltd
enter
xchg
adc
dec
jno
popa
cmp
dec
in
imul
mov
dec
mov
ss
lcall
sub
ljmp
pop
cli
inc
dec
jo
mov
in
adc
adc
cmc
mov
jo
jo
jo
out
aad
aaa
jmp
fldlg2
nop
sub
clc
testl
das
icebp
sub
mov
and
aas
out
mov
push
sar
mov
sbb
enter
push
mov
push
addb
cs
or
mov
mov
adc
jno
lcall
sbb
mov
insb
sub
addr16
sub
or
adc
addl
insb
add
lods
lock
aad
das
or
xor
je
shr
daa
fdivrl
cs
add
rcrb
adc
xor
ss
test
jecxz
je
andb
add
inc
push
ljmp
test
mov
push
jb
fimull
scas
repnz
ja
cli
std
inc
ja
mov
add
inc
je
push
cmp
mov
cmp
cvtps2pd
out
inc
popf
xchg
movsl
sub
sub
jmp
xor
or
cmp
mov
jns
lret
fs
dec
push
jne
push
adc
or
adc
push
pop
mov
ds
inc
xor
adc
unpckhps
inc
jmp
or
sub
loopnew
pop
or
cmp
fisttps
mulb
jns
stc
repz
mov
je
sub
sbb
sbb
xchg
jl
popa
add
cmp
data16
sub
xchg
sbb
jl
insb
out
int
jecxz
lods
jmp
mov
clc
lods
jb
popa
sahf
mov
cmp
pop
xor
dec
mov
xchg
mov
fmulp
add
xchg
aas
mov
xor
jg
mov
mov
fnstsw
aam
dec
sbb
xchg
mov
test
and
xchg
adc
pop
sbbb
ret
pop
cmp
js,pt
xor
pusha
sub
mov
filds
cld
add
bound
jp
xlat
je
jbe
scas
push
fwait
nop
out
xor
lcall
dec
adcl
push
fwait
jecxz
or
addr16
sub
imull
or
add
mov
xor
push
push
or
sub
fnstsw
loope
mov
lea
into
push
inc
xor
pop
adc
sub
push
bound
push
cld
jae
mov
loopne
in
sahf
mov
outsb
sbb
cmp
cmpsl
jl
cmpsb
jl
ja
adc
adc
repnz
push
jl
mov
mov
cmp
loope
push
push
mov
jns
lcall
cmpsb
maskmovq
imull
lcall
xchg
pop
lods
aad
dec
jle
test
add
mov
ja
xchg
cmp
xchg
pop
movsl
sbbb
mov
dec
mov
cmp
adc
into
fnstenv
out
neg
push
xchg
jge
add
lcall
lea
scas
test
hlt
pop
int3
pop
cmp
iret
push
jb
iret
push
jmp
mov
mov
fistps
lret
xchg
loopne
lods
xor
xor
scas
jbe
clc
lcall
hlt
cmc
loop
mov
sub
or
pop
sub
popa
cmpsb
push
call
jecxz
add
xor
repz
iret
movswl
dec
dec
mov
stc
jp
mov
inc
sub
jnp
lcall
fistpl
pop
outsb
cld
jge
fstl
andb
sbb
cmc
adc
bound
dec
fistpl
sahf
or
jo
cwtl
call
and
xlat
xchg
pop
sbb
push
push
jg
rolb
hlt
lret
xor
imul
ja
xor
xlat
aaa
dec
std
mov
ret
jns
sbb
jb
clc
push
dec
push
cwtl
fldcw
in
xor
divb
data16
mov
ds
loopne
mov
pop
outsl
lret
loopne
inc
push
pop
ja
push
or
xchg
pop
std
xchg
jbe
addr16
aas
or
xchg
es
cmpsb
mov
hlt
mov
shlb
and
movsb
adc
inc
out
xchg
lcall
lds
lcall
and
js
push
imul
sbb
inc
jle
pushf
and
xchg
lea
xor
jne
dec
jnp
add
xchg
and
mov
cmp
mov
and
xchg
vmovmskpd
movsl
cwtl
lahf
xor
in
sahf
outsb
add
ds
clc
add
loop
mov
cld
orb
and
hlt
mov
loopne
jb
dec
loope
clc
mov
clc
pop
in
int3
cwtl
subl
iret
jmp
repz
mov
icebp
and
lods
inc
sbb
pop
dec
push
in
fdivr
and
repnz
mov
pop
sar
fwait
mov
stos
sbb
lret
out
cmp
mov
loop
aad
jae
aad
dec
adc
lds
adc
pushf
mov
inc
xor
movsl
cltd
stos
sub
scas
cmp
nop
xor
mov
sbb
outsl
fcompl
mov
ja
repnz
inc
iret
mov
add
stos
insl
test
xor
xor
xchg
xor
or
and
and
std
addr16
ror
push
jno
es
fsubp
dec
xchg
in
push
repz
outsl
xchg
loope
aad
jl
sbb
xchg
lret
repz
add
loope
xchg
push
cli
cmp
xchg
push
xchg
pop
xchg
ficomps
push
dec
fdiv
pop
xor
xchg
repz
pop
push
push
jle
dec
push
mov
fs
push
stc
daa
lods
jecxz
repnz
sbb
inc
pop
inc
push
sub
lds
pusha
jbe
mov
int
jo
in
xchg
lods
jno
das
rclb
lret
xchg
add
fisubrl
pop
pop
pop
popf
ret
mov
inc
push
mov
pop
add
and
scas
jmp
jne
xor
sarl
inc
cmc
sbb
sub
xlat
push
jmp
repnz
repz
inc
jmp
mov
push
adc
cmp
push
clc
mov
rcrl
jge
mov
xor
aaa
es
movl
imul
ss
inc
mov
int
mov
enter
push
test
out
mov
fildl
addr16
stos
repz
or
mov
test
sub
sbb
bound
pop
push
inc
cwtl
add
push
inc
or
pop
aam
xor
jl
popf
cmp
in
jle
stos
pop
shlb
in
int
inc
adc
mov
fisubrs
out
xchg
add
in
push
sub
pop
ret
xor
jg
xor
mov
mov
sbb
out
xor
decl
out
aam
or
mov
lret
jno
outsl
sbb
jle
cmpsb
scas
jp
jne
xchg
mov
push
add
mov
pusha
push
testl
das
sub
push
pop
mov
jmp
jl
leave
adc
xorl
mov
and
imul
pusha
and
stc
sub
mov
call
cs
rol
or
loop
add
std
mov
pusha
popf
aas
sahf
mov
inc
xor
pop
inc
divl
sbb
jae
cmp
add
push
mov
dec
fisubrs
lea
mov
dec
sti
sub
mov
pop
cmp
mov
and
insb
xor
and
insb
mov
xorl
xchg
mov
stos
std
inc
lret
pop
incb
pop
add
outsb
movsl
cmp
sbb
ljmp
insb
dec
xchg
cli
pop
cmp
add
lret
dec
push
mov
push
add
adc
mov
stos
mov
sbb
nop
push
dec
mov
les
lock
add
sub
adc
ficompl
cmpl
xor
imul
test
push
cmp
pusha
lods
add
movsb
rcrb
loop
push
mov
push
dec
add
sub
cmp
out
mov
pusha
cwtl
dec
or
pop
jmp
jbe
inc
pop
scas
js
shl
orl
cmp
shl
sub
popf
mov
scas
fnstsw
orl
nop
or
jl
popf
xor
and
add
inc
bnd
pusha
mov
call
push
aad
jns
sub
fdivr
fbld
dec
jg
lock
xlat
jns
fnstsw
or
add
jg
pop
jmp
or
sub
aad
pop
xor
dec
outsl
xchg
mov
mov
shr
dec
mov
or
lret
dec
cld
jge
test
xor
xor
shlb
cmp
je
int
push
or
sub
dec
lret
xchg
lods
in
rcrl
mov
jmp
ja
mov
data16
scas
imul
and
mov
testl
and
inc
test
jg
jecxz
jno
push
scas
push
or
cmp
lret
bound
fsubrp
mov
aad
call
or
or
cmc
jmp
lret
mov
add
mov
and
jb
rcr
pop
or
pop
cmp
daa
aam
jl
sahf
mov
cmp
dec
jecxz
imul
aaa
xor
je
push
inc
std
frstor
inc
or
jmp
jb
ret
das
mov
mov
lods
popa
xchg
lahf
mov
inc
inc
outsb
rclb
sub
imul
and
mov
cmp
test
push
or
cwtl
jb
sbb
data16
pop
testl
dec
xchg
out
pop
lcall
pop
sbb
nop
sub
out
enter
scas
pop
loope
in
xor
lcall
mov
cmpsl
daa
aad
push
jge
fmuls
dec
xor
xlat
mov
push
inc
inc
sub
and
pop
pop
xor
jmp
or
je
inc
push
mov
mov
cld
rcrb
xchg
aaa
iret
fsub
int3
sti
mov
mov
pushf
mov
jo
jb
aad
dec
lahf
popf
sbb
andb
cwtl
outsb
lods
in
push
inc
mov
jmp
sti
mov
add
rcr
int
add
iret
dec
mov
aam
mov
je
xor
sub
xchg
jge
lcall
stos
mov
frstor
dec
sub
mov
mov
xor
push
pop
test
sub
mov
lret
fsubrl
jmp
lods
cmpsb
xchg
mov
xchg
movsl
fmuls
stc
inc
dec
sub
push
xchg
adc
mov
ds
out
mov
test
and
cs
xchg
mov
mov
cs
lds
out
repnz
lea
mov
cmp
inc
adc
ret
cmp
mov
mov
daa
pop
dec
jnp
ljmp
lock
sub
add
in
out
push
out
rolb
push
xor
add
repnz
arpl
js
sub
xchg
mov
xchg
pop
xor
cmc
imul
mov
cmp
mov
pop
pusha
mov
into
adc
dec
pushf
fcoms
pop
mov
popf
rol
and
test
add
inc
call
cmpsl
dec
lcall
and
je
repz
jp
in
mov
test
pop
sub
mov
leave
into
jno
jge
pop
sahf
mov
addr16
push
loope
pusha
push
daa
sub
or
iret
arpl
lds
cltd
and
rcr
inc
inc
cs
rcrl
movsl
cwtl
imulb
js
pop
jae
cmpb
add
xlat
inc
xlat
int
jae
lcall
or
imul
outsl
scas
jbe
enter
and
out
lahf
pop
ljmp
lret
aas
fbstp
mov
jmp
xchg
fdivrl
or
jne
mov
ds
jg
xor
jle
dec
cmp
xchg
cmp
repz
repnz
gs
xor
rcl
outsb
push
rorb
dec
imul
dec
cmp
in
div
sub
mov
insb
dec
stos
lahf
jg
in
sbb
sub
int
jl
out
bound
test
loop
cltd
cli
adc
xor
mov
jno
out
adc
push
adc
subb
imul
out
aad
add
stos
sbb
cmpl
push
jno
sub
shrl
icebp
jns
push
cltd
loope
insl
sub
int3
jge
xchg
out
pop
insb
adc
inc
nop
nop
cmpl
mov
sub
mov
inc
pop
adc
push
and
push
lods
and
push
rolb
add
push
mov
imul
pushf
leave
xor
je
inc
aam
mov
cmp
popf
lcall
shlb
mov
xlat
popa
and
xchg
inc
or
pop
push
adc
or
iret
jmp
jg
rcll
mov
push
push
jl
ret
jbe
inc
and
xchg
sub
fnsave
inc
mov
test
and
xor
xor
lret
sbb
or
jge
sahf
sbb
pop
popa
jno
int
imul
mov
pop
lds
xchg
xor
aaa
and
mov
or
mov
int3
sub
int
dec
ret
lds
js
sbb
dec
test
jo
imul
xchg
lods
shrl
dec
pop
xchg
or
int
iret
pop
bound
es
xor
inc
shlb
mov
push
leave
or
add
inc
int3
push
cs
rorb
xlat
mov
xlat
in
and
xor
or
mov
mov
cli
mov
add
sbb
push
or
dec
jp
pop
mov
mov
adc
call
js
inc
bound
mov
ja
mov
int3
std
dec
push
ror
jno
push
mov
cmp
int3
loop
sbb
cmp
outsl
repnz
xchg
outsl
popf
movsb
push
sbb
aas
shl
and
dec
icebp
sub
loopne
and
fbld
cmpsl
enter
shlb
push
sub
test
popf
sub
outsb
add
jmp
cmp
cmp
inc
or
loope
sub
gs
xor
movsb
insb
mov
loope
cmp
out
push
in
dec
aas
data16
push
dec
repz
loop
adc
fdivl
add
and
outsl
outsb
sbbl
int3
outsb
mov
adc
jecxz
adc
fwait
stc
jb
pop
in
ret
sub
test
lcall
pop
inc
rep
loop
dec
loopne
dec
pop
pop
into
push
stc
ljmp
cwtl
push
jl
ficoms
xchg
inc
mov
mov
xlat
add
lret
mov
outsl
cs
pop
ljmp
inc
dec
jl
es
cmp
jne
mov
in
or
cmpsl
mov
mov
mov
pop
push
repz
xchg
repz
repz
hlt
jmp
cmpsb
sarl
lahf
mov
in
jl
les
repnz
fucomp
mov
pushf
adc
add
test
or
movsl
adc
add
add
mov
leave
loop
dec
cld
inc
stos
rcrl
test
stc
pop
mov
push
es
sbb
xor
xor
or
mov
pop
mov
js
mov
xorb
out
or
cmp
jb
or
cmp
lcall
inc
int3
cmp
addb
jnp
and
jno
fsubr
mov
daa
push
xorb
push
shrl
mov
xchg
and
pop
dec
adc
fsubl
test
dec
xchg
sub
ljmp
andl
adc
dec
mov
push
cmp
add
push
jecxz
or
sbb
jmp
xchg
test
out
dec
dec
pop
and
inc
lock
rcl
xor
outsl
mov
sbb
dec
scas
and
sub
sub
push
call
inc
outsb
or
mov
mov
stos
jge
out
adc
test
or
fcoml
push
daa
cwtl
or
xor
inc
xchg
icebp
daa
icebp
sbb
mov
xor
or
add
ljmp
mov
xchg
inc
test
inc
lret
imul
std
jl
pop
pop
pop
out
mov
cwtl
je
cwtl
sub
test
dec
pop
mov
cmp
nop
inc
mov
xor
dec
jle
stos
paddusw
es
sub
and
pop
inc
loopne
add
adc
cmp
jl
mov
cmpsb
enter
mov
xchg
aas
mov
xor
mov
les
xchg
ljmp
push
test
aad
pop
cmp
jecxz
imul
inc
and
xor
inc
cmpl
adc
fcmove
ret
push
adc
je
push
std
sbb
jle
jno
daa
xchg
xchg
and
jmp
cltd
in
mov
in
stos
pusha
mov
pop
pop
pop
dec
in
fs
pop
bound
int
inc
mov
cli
movsb
xchg
xor
test
push
loop
es
sbb
leave
mov
dec
in
outsb
iret
xor
mov
mov
xchg
pop
fidivrl
and
fbstp
lods
lea
lods
fdivl
jnp
xor
insb
imul
sub
jle
push
sub
out
mov
out
sarl
add
or
mov
ljmp
inc
cli
addl
or
inc
xchg
imul
xchg
and
and
xchg
mov
add
ficompl
pop
adcb
testl
in
cli
sbb
or
jno
ja
daa
lea
and
inc
sar
or
or
mov
mov
adc
and
xlat
popf
nop
sub
insb
sub
xor
stc
cmpsl
inc
sbb
xchg
cmc
aad
mov
push
dec
mov
lahf
jo
jbe
xchg
fs
cmc
dec
in
ljmp
in
mov
rcll
mov
sbb
or
jp
xchg
jg
std
orb
add
inc
jmp
adc
and
fsubl
mov
mov
arpl
adc
test
in
out
mov
xchg
mov
jne
je
mov
sti
push
jl
inc
rcrb
xorl
lcall
popa
rcr
push
or
arpl
add
xchg
repz
cld
shlb
pop
add
sbb
repz
test
cmp
iret
ror
cmc
pop
out
rcrl
add
outsb
iret
inc
xchg
jg
jge
loopne
or
jne
inc
mov
in
mov
scas
sub
cmpl
mov
cmp
in
sbb
in
mov
mov
lahf
cmp
mov
popf
push
xor
dec
mov
int
in
push
fs
fisttpl
inc
mov
data16
mov
pusha
push
lock
dec
mov
push
jno
xchg
pop
jmp
xchg
cmpsb
mov
and
test
inc
imul
or
test
into
cltd
ja
jno
out
xchg
mov
mov
ss
out
mov
push
mov
bound
pop
cwtl
adc
pop
adc
xlat
jmp
sbb
std
cltd
cmp
mov
outsb
cltd
mov
stos
xorb
enter
in
adc
idivl
dec
sbb
xor
cmpsl
sarl
scas
popa
xchg
adc
mov
xchg
or
inc
inc
and
mov
pusha
vhaddps
fcmovb
fmulp
shl
faddl
pop
inc
inc
mov
pop
push
inc
add
insb
xor
idivl
cmpsb
jnp
jge
adc
push
test
push
xor
ljmp
add
fnstenv
xor
cli
lcall
sbb
test
push
xor
in
js
cs
dec
mov
adc
in
loop
les
jne
xor
jae
xchg
idivb
cmp
je
push
or
orb
jmp
inc
xchg
js
movsb
push
xor
vunpcklps
add
jns
cmp
adcl
or
mov
dec
push
enter
std
push
add
and
add
imul
add
in
adc
cmp
outsb
dec
fsts
adc
cmc
or
loop
or
cld
hlt
fiaddl
in
clc
int3
dec
or
nop
lds
add
mov
mov
out
adc
in
outsb
or
jae
cld
int3
xchg
and
xchg
pop
pop
in
xor
in
in
push
mov
push
xor
aad
les
imul
add
and
aaa
jg
sub
pop
insl
cmp
roll
insb
push
xchg
ss
in
dec
mov
scas
jb
pusha
dec
sub
icebp
jno
sti
lahf
dec
fimuls
or
jno
clc
or
sbb
push
add
jge
jge
mov
movsb
mov
adc
fwait
push
mov
ja
divl
leave
arpl
cmpsb
lock
imul
imul
mov
inc
mov
and
pop
xorl
insl
inc
dec
mov
add
repz
shll
add
sub
es
push
leave
dec
outsl
bound
jle
add
push
pop
or
int
insl
mov
in
repz
outsl
pop
and
jne
ljmp
dec
push
enter
add
xchg
sti
movsl
xor
loopne
fisubs
xchg
lcall
xor
loope
into
inc
pop
xchg
test
jo
xorb
and
xchg
out
jp
addr16
lcall
fsubr
sbb
daa
stos
adc
imul
xchg
stos
outsb
push
dec
cmp
pop
mov
mov
sbb
xor
dec
mov
jmp
movsl
pop
push
dec
sbbb
cmpsb
cmp
jmp
mov
jae
cwtl
shrb
mov
mov
sub
add
add
and
push
das
imul
arpl
xor
mov
out
in
ret
xchg
pop
loopne
mov
mul
fdivrl
inc
add
and
xor
in
loop
xchg
xor
sub
jp
jge
cmp
push
pusha
and
adc
adc
mov
scas
popa
xor
lds
inc
add
pushf
sub
mov
xchg
jno
dec
add
cld
rclb
pop
ret
mov
stos
push
cltd
xor
mov
insl
xor
stc
pushf
scas
in
lock
subb
mov
fcoms
xor
out
cmp
or
mov
or
jg
out
push
adc
sbbb
fnstsw
pop
pushf
outsb
xchg
sbb
dec
inc
jg
nopl
subl
ss
push
mov
xchg
imul
inc
or
mov
sbb
out
jns
adc
dec
jne
mov
arpl
mov
test
inc
out
mov
ret
call
sub
xchg
shll
es
je
push
xchg
push
call
mov
mov
add
and
test
dec
push
std
mov
mov
xchg
adc
adc
xchg
addb
cwtl
jp
sbb
jl
cmpl
es
or
and
jo
repz
sbb
xchg
bound
shrl
std
push
pop
jb
inc
pop
cwtl
enter
test
push
adc
sub
push
jecxz
pop
mov
andb
fistpll
mov
cmp
popa
mov
mov
pop
cs
push
lods
imul
xchg
test
lock
cltd
cmp
mov
push
push
loop
or
jne
mov
imul
sbb
sahf
in
inc
fnstsw
push
sbb
push
xchg
add
cvtps2pd
mov
cmp
out
insb
js
loopne
mov
sub
pop
xor
mov
loopne
sub
push
push
loop
lock
fistpl
and
pop
orb
and
cmpsb
cmp
xchg
add
outsl
add
fbstp
mov
push
int
pop
clc
cmp
mov
sub
std
push
into
loopne
rcrb
jg
mov
pop
mov
out
inc
pop
shl
shrb
push
cmpsl
imul
imul
adc
in
bound
iret
mov
repz
das
push
scas
xor
fbld
dec
sub
xor
mov
ss
jnp
or
ret
lods
jo
or
xchg
adc
es
mov
jbe
mov
fs
test
adc
mov
fcmovnbe
mov
xlat
clc
jne
clc
xchg
and
test
lcallw
lahf
jne
fsubr
xor
sbb
mov
mov
clc
dec
pop
hlt
sbb
mov
push
cmp
loop
xor
or
jnp
or
repnz
dec
xchg
mov
or
mov
or
insl
loopne
add
je
sar
in
xchg
xchg
sub
sbb
movsl
popa
inc
popf
sbbb
jle
jecxz
pusha
stos
ja
xchg
movb
or
mov
paddw
leave
mov
sub
mov
dec
push
jb
mov
pop
adc
scas
fisubl
sbb
test
lods
mov
add
mov
jns
out
cmc
loop
pop
xor
push
mov
sub
xchg
in
call
lret
cmp
jle
cmp
sarl
addr16
arpl
dec
insb
add
cmpsb
jg
sbb
fdivrs
mov
mov
pop
inc
stc
xchg
test
jno
mov
movsb
cli
or
jae
or
sbbb
sbb
andb
jo
scas
push
dec
jge
cmp
fistpl
dec
testb
insb
mov
sahf
sbb
mov
push
rorl
sahf
mov
pop
bound
mov
in
out
or
mov
ljmp
mov
push
icebp
cmp
adc
dec
sbb
inc
arpl
sub
xlat
inc
outsb
jnp
ljmp
cmpsl
mov
sbb
fcmovnu
or
xor
dec
push
push
push
les
or
adc
and
push
rcr
repnz
sub
mov
lret
imul
jb
sub
sbb
jae
mov
daa
sbb
ss
jecxz
lahf
mov
mov
subb
lahf
imul
mov
dec
cwtl
test
add
je
in
mov
je
dec
mov
xchg
jbe
and
icebp
sbb
addb
cmpsl
mov
orb
out
cmpb
mov
aaa
jbe
mov
adc
mov
and
or
xor
test
in
cmp
int3
cwtl
std
lret
cmp
dec
lret
out
pop
mov
jo
xchg
aad
je
shlb
out
jle
mov
xor
dec
add
xor
fimull
filds
push
aas
xchg
lcall
aas
sub
sub
cmp
sub
sub
and
mov
lock
xchg
jo
test
and
pushf
aas
lods
push
or
add
mov
xchg
es
icebp
aaa
pop
dec
xor
jb
xlat
enter
pop
cld
sub
inc
ds
add
popf
inc
sub
dec
loop
stc
cmp
inc
popf
cmpsl
push
or
push
dec
xchg
out
pop
sahf
data16
inc
mov
mov
push
imull
pop
xorb
call
cmp
lahf
and
xor
mov
push
fwait
cltd
ss
or
lods
ljmp
xor
push
enter
xor
inc
dec
repnz
xchg
rcr
cmp
mull
popf
out
gs
daa
mov
fsubl
inc
jb
xchg
aaa
add
mov
mov
mov
rcll
test
sub
push
outsl
xchg
jnp
pop
cmp
pop
cld
mov
and
inc
lock
jnp
lret
sub
movsb
jns
cwtl
cmp
xor
filds
gs
push
xchg
js
mov
pop
pop
cmpsl
icebp
jle
loop
xor
pop
rorl
sbb
mov
out
xchg
into
dec
mov
inc
jle
out
push
cmp
adc
push
int3
inc
or
pop
mov
jne,pn
lock
in
or
sbb
movsb
out
scas
inc
aam
sbb
xor
int
pop
push
jg
mov
aam
ja
nop
repz
adc
ss
mov
push
inc
aas
rorl
cmc
jbe
push
sub
cmc
sub
add
cmc
pop
rorl
push
xor
sub
in
jno
rcl
cmp
je
sarb
popl
leave
mov
movsl
jg
adc
push
scas
jbe
fucom
mov
add
loop
subl
repz
repnz
test
fs
jbe
adc
addr16
insb
cmc
push
mov
lea
mov
push
fs
lock
xchg
mov
xchg
pop
jp
cld
push
and
xchg
xor
push
test
cmp
repz
arpl
fisubs
xchg
cltd
inc
jl
lea
cmc
cwtl
aad
pop
adc
xorb
sbb
mov
cli
xchg
xor
in
outsb
stos
dec
scas
adc
cmc
xchg
mov
xchg
and
add
mov
cmp
fwait
mov
mov
clc
sbb
cmp
xchg
fisubrl
cwtl
mov
incb
ror
jl
mov
pop
bound
mov
lods
push
sub
out
lea
sbb
out
and
push
sbb
mov
mov
pushf
inc
outsl
test
test
xor
sbb
mov
sbb
mov
in
pop
push
in
imull
adc
test
dec
in
and
dec
or
cli
cmpsb
insl
sarb
out
mov
fistpll
into
int
inc
fcmovne
lock
and
mov
gs
es
or
jg
dec
add
push
mov
mov
inc
inc
movsl
adc
repnz
push
jp
dec
push
xor
mov
pop
xchg
dec
insb
jecxz
fsubrl
dec
push
cmpsb
and
fucomp
lret
mov
mull
xchg
fistpl
lret
nop
xchg
xor
jg
lea
or
or
sub
loop
loope
jecxz
ds
mov
aam
mov
gs
lods
into
fs
sub
push
int
insl
std
jge
idivb
aaa
inc
lahf
sub
in
gs
sbb
adc
push
or
mov
dec
pusha
jg
xor
and
push
push
fst
outsl
jno
jp
mov
jg
gs
xor
mov
mov
xlat
add
call
pop
sub
jle
rcrl
mulb
hlt
dec
outsb
aaa
mov
pop
mov
sahf
out
xor
loop
rolb
mov
jp
daa
divl
xor
sub
lcall
or
jp
in
or
jp
clc
repz
add
enter
push
out
cwtl
subl
ret
ja
pusha
cmpl
xchg
pushf
xchg
or
loop
pop
out
pop
test
mov
lods
aas
cvtdq2ps
or
or
repnz
mov
dec
test
jo
xchg
lret
cmp
lods
pusha
dec
or
pop
in
jmp
push
outsb
adc
mov
push
xor
mov
ds
in
jg
pop
ljmp
std
mov
push
aam
out
jnp
mov
fwait
gs
bound
xchg
cmp
xchg
lea
push
pop
xor
cli
xchg
pop
shll
lcall
nop
in
or
decl
lds
imul
and
adc
dec
fistps
sub
xor
fmulp
dec
loopne
add
fildl
seto
push
push
scas
add
mov
mov
test
ficoml
xchg
mov
ret
adc
es
or
stos
sub
lahf
pop
sub
xor
pusha
dec
sbb
shl
mov
lcall
lret
mov
lods
icebp
sbb
pop
mov
xchg
xor
jne
data16
cs
cwtl
and
jg
push
aad
fcomip
mov
add
aad
sbb
outsb
std
xor
das
cmp
icebp
loopne
fwait
cmp
and
cmp
sbb
insl
push
push
mov
pop
cmpsb
ja
sbb
incb
jg
test
mov
xor
jmp
jbe
rol
pushf
inc
inc
xchg
add
sbb
and
lret
sub
inc
adc
lahf
scas
cltd
and
adc
jbe
inc
cmp
push
cmpsl
inc
addr16
mov
call
jbe
add
out
lcall
add
jns
pop
mov
js
test
out
cmp
pop
into
inc
out
dec
sub
outsl
push
push
mov
test
cmp
shll
jb
jl
inc
imul
xor
mov
cmpb
movsl
or
outsb
or
lock
lahf
mov
mov
rcll
pop
fbld
ret
sub
imul
cltd
mov
dec
flds
and
pop
movsb
mov
adc
lods
ficoms
rorb
pop
fdivrp
std
cmp
jecxz
inc
stc
jno
xchg
pop
pop
repnz
imul
mull
mov
cmp
and
addl
aaa
enter
dec
fwait
daa
xor
cltd
add
adc
ret
outsl
cmp
popf
push
cmp
push
xchg
inc
cmpsl
cli
repnz
pop
xchg
int
push
push
lea
test
fmul
stos
xor
pushf
js
repz
fldcw
mov
aam
xor
or
jle
push
lahf
pop
xchg
fildl
outsb
mov
jecxz
inc
imul
and
aam
outsb
dec
ret
mov
test
repz
hlt
jb
xor
adc
imul
movl
mov
sub
in
ljmp
push
jmp
dec
or
aad
add
jp
mov
mov
inc
cli
cmp
fwait
or
sbb
rcll
or
push
mov
rolb
inc
or
icebp
jae
cmpsl
shl
test
add
sub
jne
xor
rcl
xchg
xchg
sbb
mov
dec
outsb
jp
js
push
cltd
loopne
push
iret
sub
push
inc
push
test
push
cltd
test
mov
sub
aaa
jle
jmp
and
cmp
mov
mov
sbb
mov
ljmp
adc
mov
clc
lds
cld
jne
dec
ja
pop
test
bound
call
sub
inc
and
and
mov
scas
frstor
jmp
out
outsl
dec
inc
inc
loope
mov
stc
icebp
jl
lcall
mov
push
das
dec
cwtl
pop
mov
mov
mov
inc
scas
ss
leave
aad
cmp
xor
icebp
mov
add
out
jns
mov
xor
aam
dec
mov
aam
pop
pop
xchg
jge
imul
pop
iret
cltd
lds
mov
or
je
mov
pusha
push
lock
jge
mov
push
push
mov
repz
adc
test
cmpb
lret
xor
sub
inc
addr16
flds
xchg
and
jge
fcmove
xchg
aam
or
or
dec
push
out
or
ja
xor
sbb
idivb
dec
add
mov
mov
aad
test
mov
enter
test
aaa
in
into
push
dec
mov
and
xchg
xchg
xlat
cmp
stos
inc
sbb
movsl
jns
in
loope
nop
pop
or
push
call
fcmovb
mov
je
jge
in
adc
cld
repz
out
into
cmpsb
stos
jae
or
mov
and
dec
xchg
inc
insb
fimull
mov
adc
and
mov
aas
clc
sbb
in
jbe
sbb
ss
pushf
loopne
pop
jge
inc
adc
jp
hlt
or
sbbb
xchg
dec
xrelease
push
sbb
aad
sarl
mov
lea
out
lret
fidivrs
es
lds
orl
jl
push
loop
out
mov
outsl
pop
outsb
xchg
xchg
ds
sbb
cmp
in
mov
mov
std
inc
or
call
and
sar
xchg
push
xor
jl
fstp
cmp
dec
testb
cmc
pop
ja
out
in
add
inc
and
aad
imul
mov
js
testb
mov
ret
out
push
sbb
sbb
pop
dec
xlat
inc
orb
sbb
cmpsb
lock
sbb
stc
pushf
cmpsb
ffreep
push
sarb
cs
testl
xor
stos
push
call
je
sbb
or
jne
mov
jle
inc
or
cmp
sub
push
adc
jno
mov
repz
mov
jne
faddl
aaa
mov
xor
mov
arpl
fistpll
inc
xlat
rorl
aaa
sbb
add
call
mov
fwait
std
xchg
lret
aas
pop
aaa
or
ss
or
popa
push
mov
pop
cmpsb
stos
mov
outsb
inc
mov
add
pop
dec
aad
sbb
js
imul
int3
popf
shlb
imul
fistl
sub
or
lret
sbb
jl
sub
mov
loop
das
add
incb
jp
cli
fimuls
mov
ficoml
out
ljmp
xchg
ljmp
jno,pt
out
test
xchg
scas
call
das
cmp
xchg
repz
cli
pop
scas
mov
dec
push
in
pushl
sbbb
and
mov
adc
lds
gs
mov
rclb
sub
lcall
repz
cmp
mov
js
mov
jmp
jp
fwait
jmp
rcrl
mov
pop
mov
add
pop
lahf
pop
outsl
and
cwtl
scas
push
push
outsb
fnstcw
and
mov
and
int3
std
sbb
push
xchg
scas
in
loopne
outsb
pop
out
cs
std
add
sub
loopne
mov
aas
int
hlt
mov
or
js
xlat
orb
add
jg
popf
fdivrl
mov
mov
and
adc
rorl
js
sti
andl
lret
adc
fbld
flds
cmp
lcall
xchg
add
insb
inc
pop
xchg
mov
cwtl
jbe
lahf
outsl
push
repnz
decl
push
aam
mov
sti
add
and
int3
or
mov
std
hlt
pop
das
fisttpl
pop
movsb
push
xor
or
push
in
pop
cmc
push
mov
mov
bound
mov
dec
dec
mov
or
or
imul
sub
inc
bound
movsb
icebp
popf
cmpsb
push
push
xchg
daa
sub
sti
jb
lea
mov
mov
push
push
nop
pop
sub
imul
mov
jecxz
push
daa
fimull
shrl
cs
sti
sahf
xor
pop
jb
adc
push
adcb
lcall
movsl
ret
ljmp
sub
mov
adc
flds
mov
daa
inc
sti
mov
jmp
pop
jns
mov
mov
call
fidivl
xchg
mov
push
out
push
aad
and
push
mov
test
sahf
rolb
sbb
inc
mov
xchg
mov
xchg
movsb
push
pop
cmc
popf
aas
out
dec
fwait
sbb
in
push
mov
adc
cmpl
jnp
inc
movb
mov
icebp
mov
shlb
clc
into
in
cltd
mov
add
lcall
enter
push
xor
fnstsw
lock
inc
jecxz
sub
lret
out
cmc
inc
jge
jecxz
es
stos
mov
pop
cltd
cmc
into
test
sbb
cmpsb
ret
movsl
shrl
mov
push
add
adc
insb
and
push
xchg
pop
enter
iret
movsl
repz
add
xor
rorl
es
jecxz
cwtl
jae
and
stos
stos
mov
shl
iret
sub
pop
and
push
xchg
les
stos
inc
out
jo
std
aaa
inc
jl
or
pop
xchg
sbbb
outsb
push
lods
inc
mov
push
dec
cmp
mov
lret
jno
stos
mov
and
dec
std
pop
std
adc
push
xchg
mov
mov
filds
psrad
mov
xor
mov
das
idiv
int3
xor
int
clc
sti
adc
daa
imul
sub
xlat
xor
and
and
pop
adc
mov
push
dec
cmp
cmp
mov
dec
data16
xchg
into
xor
ja
insl
push
sbb
rclb
jae
mov
fnstcw
xchg
sbb
lahf
rol
dec
call
data16
xchg
scas
sub
testb
flds
mov
shrb
lcall
xor
loopne
push
test
push
and
sub
loopne
loopne
xchg
repz
dec
cmp
ret
adc
sbb
adc
xor
lahf
or
cmpsl
scas
xor
cmpsl
xor
mov
emms
ret
xchg
mov
pop
loopne
or
mov
sti
sahf
sub
cld
xlat
lods
insl
in
jmp
jge
jl
popf
out
fldcw
mov
leave
in
aaa
sbb
xchg
shr
sub
cmp
adc
adc
lcall
hlt
adc
xlat
and
ret
std
sarb
lods
mov
xor
push
fsubrl
mov
lock
or
or
sub
test
cmp
jle
test
pop
movsb
xchg
push
push
lret
add
or
or
jl
lahf
sub
mov
mov
cmpsb
insb
and
jae
mov
clc
out
or
cmp
jge
xchg
mov
ror
and
jne
hlt
cli
jne
xchg
pop
repz
pushf
xor
popf
shl
int
push
inc
mov
dec
mov
aam
dec
daa
cmp
cmpsb
cmp
into
inc
inc
test
test
loop
loope
dec
int
jp
jge
fcoml
leave
dec
imul
mov
add
cmp
jg
jle
push
push
fwait
pop
lcall
mov
and
cld
pop
cmp
xchg
jnp
xlat
loope
dec
imul
lods
lcall
loopne
mov
jmp
fmul
inc
mov
lahf
out
js
out
sbb
and
lods
test
dec
movb
pop
aas
out
mulb
ficomps
aas
cmp
sbb
jbe
or
fmulp
sbb
mov
lock
int
sub
shll
mov
test
repnz
mov
fsubs
add
jbe
outsl
fstps
das
insb
push
stos
or
add
xchg
pushl
xchg
push
aas
dec
icebp
push
jae
or
mov
adc
sbb
jp
jmp
adc
nop
or
xchg
lods
mov
sar
mov
cmp
shr
insl
dec
je
fs
fidivl
jb
fimull
push
xchg
mov
std
pop
in
incl
cmc
mov
test
xchg
daa
inc
mov
sbb
gs
mov
jo
jg
adcl
cmc
xchg
inc
mov
data16
fnstsw
addl
cmp
dec
push
rolb
negl
mov
outsl
out
mov
push
std
out
les
ss
mov
enter
lods
int
xchg
ljmp
or
cmc
cmp
push
and
mov
jge
ljmp
dec
jmp
imul
stos
in
movsl
inc
jne
aam
dec
cmp
mov
dec
sub
jae
sbb
xor
cmp
pop
sub
fsubl
push
in
popa
fs
cmpsl
mov
xchg
mov
jl
add
mov
out
aas
jmp
stos
test
adcb
cmpb
jo
sub
movl
enter
lret
pop
mov
inc
jp
ffreep
inc
xor
mov
stc
loope
or
mov
roll
adc
lds
sahf
iret
xor
mov
idivl
stos
add
lds
mov
dec
push
clc
mov
je
stos
cmpsl
scas
scas
ja
mov
out
sub
cmp
je
hlt
in
gs
mov
jle
inc
fnstsw
jbe
dec
mov
and
or
inc
mov
jno
add
lcall
outsb
outsb
push
add
jecxz
sbb
icebp
pop
cmp
bound
lods
daa
mov
add
xor
jmp
sarb
and
test
and
mov
fistl
sub
jnp
loopne
ret
jne
adcb
lret
xor
cmpsl
pop
je
or
sub
jg
frstor
sarb
mov
popa
ret
mov
out
jecxz
mov
xchg
or
push
icebp
push
cmp
test
insl
adc
leave
cmpsl
xlat
sbb
mov
cltd
mov
mov
aaa
sub
adc
sub
sub
inc
in
mov
xchg
in
xor
out
and
rorl
cvtdq2ps
xchg
and
leave
insb
cmpl
ss
movsl
jnp
scas
imul
insb
sub
movsb
mov
pushf
mov
shll
push
rcll
cmp
std
rorl
lock
sub
mov
lret
jp
xlat
mov
and
mov
mov
cltd
andb
icebp
mov
push
imul
jmp
fcompl
gs
sub
aam
js
and
daa
lahf
push
cs
lret
aad
out
jns
mov
dec
stc
xchg
mulb
loopne
xchg
mov
xchg
xchg
rcrb
lods
xchg
jno
adc
xlat
adc
mov
adc
adc
frstor
dec
xor
test
ljmp
jle
xor
and
das
xchg
les
scas
mov
mov
inc
scas
push
adc
jecxz
mov
call
or
aam
scas
fimuls
adc
and
stos
iret
popf
push
test
aas
outsb
push
pop
rcl
int
lret
js
xor
mov
mov
jnp
testl
mov
cwtl
pop
or
int
or
dec
xchg
pop
dec
and
aam
mov
pop
test
aad
inc
inc
push
mov
lods
pop
push
scas
into
subb
and
push
div
and
sbb
jl
push
dec
iret
jecxz
jle
pushf
sub
enter
sbb
inc
mov
leave
mov
addr16
imul
cmp
jg
cmp
rclb
jp
popf
loopne
jnp
xlat
dec
je
aaa
sub
or
adc
pop
mov
mov
mov
clc
filds
lds
push
fwait
arpl
test
push
cmp
jg
roll
xchg
cli
mov
jae
sub
test
aam
add
mov
out
add
lea
int
add
add
or
adc
and
mov
outsl
shll
or
stc
adcb
cmp
fiadds
xor
pop
sub
fldl
pushf
shl
xchg
xor
lds
push
in
dec
sarl
mov
mov
sub
push
cmp
insb
les
mov
movl
insw
cmpsb
fidivrl
hlt
xor
pop
int
add
ds
inc
lahf
nop
stos
xchg
jp
adc
cld
out
sbb
or
int
loop
and
lods
inc
dec
sbb
aaa
sbb
add
ficomps
stc
xchg
cs
lcall
fdivl
lods
dec
es
in
iret
mov
daa
mov
mov
or
push
js
scas
loop
int
leave
imul
sub
push
data16
pop
gs
cmp
pop
xchg
pcmpeqb
cmp
nop
xor
push
xchg
push
ror
push
ret
dec
and
pop
imul
dec
sub
test
fsts
xor
xchg
out
aas
and
lcall
into
adc
ret
insb
jp
xor
cmc
clc
sti
add
insl
test
lret
mov
aaa
rorb
jo
cmp
cmc
sbb
imul
push
xchg
xchg
mov
xor
sarl
inc
lahf
pusha
xchg
call
in
cmp
sahf
and
addr16
enter
aaa
cmp
js
div
int3
sahf
call
add
xchg
js
add
cwtl
jb
aaa
test
inc
inc
fidivrl
adc
mov
and
jne
mov
fsubr
mov
pop
mov
ret
cmp
xchg
cmp
sub
sbb
xorl
xchg
pop
push
movsb
pop
out
adc
sub
xor
sbb
insl
mov
push
cwtl
push
adc
cmp
popa
test
aad
loope
adc
dec
mov
cmp
inc
sub
pop
xchg
mov
and
in
mov
adc
cmpsb
cmp
sub
pushf
mov
sub
sub
and
ret
mov
clc
or
das
sub
ret
inc
and
addl
clc
pop
cmpl
fdivrs
pop
and
sub
jns
ljmp
fistpl
dec
mov
call
jle
mov
adc
imul
addr16
icebp
jo
popa
popa
lret
cs
push
xchg
and
jp
insl
int
or
mov
jmp
or
inc
movsb
adc
repnz
push
dec
cmp
loop
and
add
ljmp
imul
mov
dec
cld
xor
jl
idivl
xor
push
rcrl
add
fldenv
mov
jnp
xor
cli
mov
in
shlb
pop
mov
shlb
mov
adc
push
scas
test
jo
scas
jne
popa
jp
mov
lret
jns
out
fnstcw
sub
sbb
sub
inc
xor
fwait
and
pop
push
fistpl
push
pop
mov
xchg
inc
mov
jae
rorl
lret
and
mov
daa
mov
js
int
pop
xchg
push
loopne
adc
sub
add
or
xor
inc
xor
adc
mov
addl
adc
mov
jns
xor
out
push
int
arpl
or
mov
fwait
scas
mov
in
insb
or
push
sub
mov
add
sti
pop
fwait
add
lret
hlt
loop
cld
insl
sbb
or
daa
xchg
cmp
stc
dec
push
stc
icebp
sbb
loope
fimull
xchg
shll
adc
cmc
mov
fcmovbe
lea
inc
jae
scas
dec
mov
dec
sub
push
ljmp
lret
repnz
aaa
in
xchg
divl
cmp
nop
mov
push
test
outsl
adc
negb
mov
sti
dec
mov
pop
cmpsb
fstps
loope
nop
push
fwait
inc
mov
subl
dec
xchg
sub
fstpl
cmp
scas
rorb
cmp
mov
ss
scas
rcll
push
cltd
mov
stc
push
jne
jge
mov
std
out
push
test
mov
int
stos
data16
sub
cli
mov
es
arpl
mov
in
fisubrs
cs
scas
push
xchg
pop
insb
and
out
jp
push
pop
fstpt
cmpsb
mov
add
mov
cmp
mov
lock
insl
xor
pop
mov
inc
imul
push
pop
dec
into
in
add
clc
les
adc
lea
popf
mov
jo
jb
popf
fwait
adc
scas
mov
push
jmp
jl
pop
dec
jnp
cmp
push
add
add
stos
inc
icebp
daa
rep
iret
add
dec
sub
insl
and
rolb
dec
rcrb
mull
or
or
jg
cmpsb
lea
mov
pop
sbb
inc
mov
fisubrl
push
test
jb
fdivs
jl
xor
test
sbb
mov
mov
and
sar
push
or
mov
lret
insb
and
push
cmp
cmp
lods
lcall
and
xor
roll
jbe
pusha
popa
test
iret
test
jge
pop
mov
mov
xor
mov
dec
pop
in
adcb
js
sub
inc
dec
dec
mov
aad
dec
pop
in
mov
and
push
xchg
mov
mov
dec
movsl
push
loop
dec
xchg
add
cmp
ds
iret
mov
xchg
mov
ljmp
lock
lds
cltd
out
mov
or
arpl
jecxz
pop
adc
push
jno
dec
fucomip
ret
lcall
fmuls
pop
fidivs
je
in
mov
mov
test
xchg
insb
addr16
stos
nop
scas
arpl
enter
mov
mov
jmp
add
in
xchg
inc
pop
insl
cwtl
sub
jmp
sahf
ss
rclb
inc
xchg
xchg
jae
dec
adc
popf
add
xchg
cli
cmp
dec
jae
jl
fidivrl
dec
cli
sbb
dec
popl
enter
shll
outsb
inc
out
dec
repz
fmull
sub
scas
sbb
push
add
push
sahf
sti
std
xchg
test
mov
mov
lods
cmp
mov
cmp
sbb
xor
je
stos
ret
nop
scas
push
dec
xchg
imul
or
jno
lret
push
sti
sahf
jecxz
cmp
out
cmp
aad
sahf
outsb
leave
inc
insl
fadd
jnp
mov
cmp
lret
or
fcoms
sub
jns
xor
test
xchg
insb
cmp
ds
js
xchg
lods
mov
push
popa
test
adc
shlb
inc
mov
es
dec
dec
sub
xchg
dec
add
imul
pushf
cltd
xor
xchg
icebp
lcall
fimull
scas
and
cmpsl
sbb
adc
in
das
lret
adc
jns
lock
add
popa
cmp
cmp
inc
outsl
mov
test
jmp
push
or
orl
es
push
aad
xchg
jge
mov
dec
mov
js
ret
mov
sbb
sbb
mov
adc
and
dec
push
cmp
push
cltd
ret
xor
mov
jmp
or
frstor
xor
mov
in
cld
fwait
ljmp
daa
xorb
push
mov
arpl
push
dec
out
rcl
das
popf
inc
in
aad
into
adc
push
repnz
in
and
fidivrs
dec
sbb
xchg
jae
xor
pop
and
test
ja
sbb
jnp
mov
add
xor
cmc
nop
fcomps
test
pop
mov
stos
mov
jge
lcall
pop
cwtl
scas
xchg
mov
mov
std
pop
and
scas
mov
add
jl
sbb
or
fwait
enter
les
xchg
cwtl
test
xchg
int
adc
test
inc
cmpsb
inc
mov
je
dec
xchg
xchg
mov
int
loopne
pop
mov
fwait
mov
outsl
cmc
lods
sbb
adcb
inc
cli
xor
mov
andb
call
pusha
push
sbb
popa
lods
nop
mov
dec
jp
pop
inc
fdivr
push
inc
add
jecxz
rorb
lret
sub
xchg
cmp
mov
je
cmp
cmp
inc
sbb
fcmovb
mov
sub
test
ret
lcall
ret
dec
mov
ds
shlb
push
outsl
cltd
repz
pop
push
xor
dec
cmp
xchg
fstpl
ljmp
imul
and
mov
mov
jle
cmp
push
sub
xor
sub
cmp
add
and
sbb
adc
repz
cmp
mov
sbb
push
jl
decb
dec
fisttpl
enter
ss
cltd
stc
mov
cmp
jecxz
xor
clc
inc
adc
iret
lret
scas
xor
cli
jnp
cld
loopne
out
or
sub
inc
sbb
sub
aad
sahf
movb
xchg
jmp
pusha
std
mov
or
ja
fwait
or
and
fists
push
pop
fcom
push
adc
mov
andb
movsb
ss
xchg
lret
mov
outsb
mov
test
and
mov
push
sbb
dec
or
xor
andl
test
imul
mov
in
mov
and
sub
mov
test
rolb
xchg
mov
pop
fstps
adc
lcall
cmp
pop
jl
push
aad
xchg
cmpsb
xor
imul
pop
pusha
bound
iret
inc
sahf
push
jno
jb
push
fwait
enter
push
in
inc
adc
mov
lcall
add
popa
adc
and
ja
mov
call
push
push
mov
imul
popa
enter
imul
add
pop
or
dec
and
cmpsb
xor
jp
mov
ret
lds
das
add
pop
mov
add
cmpsb
or
mov
mov
cmp
in
pop
mov
cmpsl
cmp
inc
jge
mov
xorb
loope
sub
lods
jnp
xor
movsl
xchg
in
sbb
sbb
push
cmp
sub
cltd
push
ja
sub
into
jmp
cmp
sub
xor
test
inc
adc
xor
xchg
xor
inc
mov
and
pop
push
std
jnp
xlat
push
mov
loop
inc
cmpsb
jo
scas
lock
repnz
rorl
aad
mov
leave
negl
pop
mul
lret
xchg
stc
cmc
cmp
loopne
and
int
add
dec
mov
dec
hlt
lock
sbb
sar
bound
test
mov
ret
push
pcmpgtd
xchg
jg
xor
lea
out
daa
xor
test
jle
lcall
rorl
int3
loope
shl
mov
jbe
mov
ljmp
aaa
mov
xor
lods
mov
or
push
xchg
mov
in
mov
push
xchg
dec
xchg
rcr
mov
sbb
hlt
mov
cmpsb
leave
out
lcall
mov
adc
scas
insl
out
push
dec
xchg
es
stos
mov
adc
xor
pop
mov
cmc
fisubrl
and
cli
cmpsb
sub
loop
loopne
sub
lods
cmp
push
or
xchg
jle
insl
out
cpuid
call
test
mov
push
pop
adc
lret
jmp
push
and
es
mov
cmp
push
or
push
jg
pop
lds
cwtl
enter
adc
sub
push
xchg
mov
fdivl
cmpsb
add
sub
xor
ja
pop
xlat
push
rcl
rcrl
fwait
testb
nop
or
fucomi
pop
xlat
bound
mov
jge
rolb
add
add
jnp
dec
jl
incb
add
xchg
test
mov
rorb
inc
pop
cltd
mov
xchg
mov
arpl
les
mov
sub
add
jg
push
test
mov
xchg
mov
or
xor
stc
ljmp
push
xlat
in
sub
ja
gs
cmp
das
call
test
fwait
add
in
mov
ljmp
lock
fs
out
ret
xchg
adc
je
add
add
test
or
jecxz
fs
int
sbb
mov
add
push
fwait
xor
and
mov
ljmp
jl
jno
or
mov
lods
fs
lret
std
adcb
dec
icebp
push
lret
pushl
pop
dec
stos
int3
inc
ja
jmp
sahf
pop
push
jns
lds
cmp
adc
pop
daa
shrw
out
adc
xchg
daa
sub
dec
push
push
iret
xchg
iret
sahf
inc
mov
sbb
ja
inc
mov
dec
test
sbb
sub
mov
sub
pop
test
sub
insb
les
lods
rcl
sub
cmc
fs
mov
pushf
and
adc
jno
in
rcr
je
push
out
push
aaa
push
dec
in
cmp
test
sub
and
das
test
ret
gs
sub
aam
rol
sub
xchg
mov
in
repnz
dec
xchg
cmpsb
lods
fwait
ja
insb
and
insl
ficompl
sub
negl
mov
filds
test
cmpsl
mov
aad
ror
lahf
jne
pop
jp
xor
cltd
addr16
stos
push
shl
pop
fwait
scas
jp
ret
jle
jge
pop
fs
mov
cli
mov
mov
in
add
add
call
outsl
popf
xlat
and
faddl
cmp
out
out
clc
and
jmp
cmp
mov
mov
mov
mov
fdivrl
pop
inc
add
add
call
lea
sub
mov
add
int
adc
comiss
pop
inc
push
jmp
rorb
shll
sub
dec
cmpsl
movsb
dec
push
daa
sbb
dec
fs
inc
pop
gs
icebp
js
ljmp
iret
and
cmp
or
stos
adc
jge
fidivs
inc
mov
mov
push
sti
or
xor
test
repz
sbb
push
movsl
rorb
int3
iret
sbb
notb
sarb
xchg
lock
sub
and
dec
and
pop
test
push
clc
arpl
jp
js
clc
add
or
rcrl
mov
pop
cmpsb
cmp
sbb
incl
es
adc
pop
jle
movsb
jmp
xchg
sub
mov
outsb
jno
or
mov
fisubs
pop
fwait
pushf
jp
jns
sub
adc
dec
lea
adc
je
test
sub
test
js
ja
popf
and
movd
call
jae
xor
sub
fabs
cmc
jle
les
lods
xchg
push
cmpsb
or
or
sub
lret
adc
jmp
jg
cmp
in
sbb
mov
mov
fimull
sbb
xchg
or
insl
insl
subl
xchg
fimuls
cmp
or
cmpsl
push
call
jl
call
repnz
mov
inc
insb
in
add
ja
aam
mov
int
xor
cld
sbb
test
jle
scas
jno
jmp
xor
fadd
xor
jae
call
nop
ret
movsb
rcrl
mov
lods
cmp
daa
mov
xor
xchg
and
xor
xor
push
jno
inc
test
sub
pop
inc
test
sub
shll
shll
inc
stc
push
clc
jmp
and
lea
shlb
nop
cmc
cmp
sarb
cmpsb
ss
fidivl
and
jmp
sub
test
hlt
cmp
nop
push
scas
mov
in
fwait
sbb
pop
das
mov
das
jecxz
mov
stos
nop
jno
mov
shlb
or
xchg
dec
cwtl
add
and
inc
mov
int
mov
out
decb
call
notl
call
fnstenv
cmp
scas
mov
jbe
jbe
stos
jge
or
jl
lods
pop
mov
divl
js
sti
ljmp
ss
mov
mov
lahf
flds
sub
in
pop
ja
lods
mov
orl
dec
repz
testb
adc
std
adcb
fbld
mov
sub
leave
icebp
sub
adc
dec
mov
add
aam
orl
stos
scas
negl
sti
push
adc
fs
pop
lods
cltd
aam
cmp
and
or
nop
arpl
out
lcall
pop
sub
ffreep
fdivs
popf
lret
xchg
jp
jmp
add
cmpsb
sahf
popa
inc
cmp
jle
mov
jge
cmp
inc
adc
lods
fcoml
lods
and
jo
and
sbb
adc
clc
and
sbb
movsb
cmp
cmpsb
push
push
add
test
gs
sti
xchg
scas
lahf
fcompl
pop
cmc
in
call
lea
repz
ficomps
jno
int
pop
pop
sub
lds
jbe
dec
movsb
and
pop
mov
lea
inc
sub
pop
sbb
dec
adc
mov
sub
jo
cmpsb
out
dec
scas
mull
mov
xlat
mov
in
mov
add
inc
pop
jno
mov
int3
jmp
add
mov
pop
push
lea
je
cs
jg
stc
add
push
mov
pop
xchg
push
test
jge
scas
rorb
aam
mov
xchg
rcr
bound
xchg
mov
clc
je,pt
push
jbe
and
stc
lahf
bound
aam
jmp
imul
sub
out
push
jg
out
jno
sti
sub
and
mov
orb
inc
addl
sub
add
sti
cwtl
sbb
test
push
pop
adc
and
adc
xchg
ficoml
jmp
adc
jmp
insl
cmp
ret
popf
sbb
mov
cmp
bound
scas
in
enter
sub
mov
add
lods
pop
psllq
lds
push
mull
mov
test
icebp
test
pop
aaa
mov
mov
mov
aaa
insl
out
and
jl
fidivl
push
stos
and
int3
aaa
jno
mov
and
loope
jmp
inc
lods
mov
cmpsb
adc
cmpl
cltd
pop
xlat
mov
dec
out
mov
dec
sarb
sub
repnz
mov
xchg
ret
notb
inc
mov
push
clc
cmp
dec
stos
lods
sub
mov
mov
negl
xchg
in
push
mov
sub
out
pop
mov
ljmp
inc
insl
ret
sarl
fmull
inc
ret
fprem
xlat
int3
iret
faddl
push
sbb
pushf
pop
or
stc
and
in
dec
mov
inc
push
and
imul
imulb
cli
xor
lcall
hlt
cwtl
scas
dec
add
call
addb
repnz
adc
sub
outsl
jae
push
jae
dec
loope
xchg
mov
add
and
inc
rcr
outsl
mov
or
nop
and
mov
xor
enter
ss
leave
mov
sub
nop
and
dec
inc
daa
push
mov
lods
xchg
cmpsb
pop
mov
insl
std
mov
mov
jno
rcrb
lock
push
push
sub
inc
sbb
pop
add
ja
sbb
ljmp
dec
sbbb
push
cmpsl
aam
push
lcall
cs
inc
jg
ja
test
sar
stos
or
lret
pop
push
stc
data16
adc
mov
sub
cmpl
xor
out
ja
fsubs
jmp
inc
cmp
test
dec
mov
mov
jle
sub
mov
or
mov
repz
xchg
rol
pop
pusha
inc
fwait
xor
int
das
mov
je
or
mov
icebp
mov
int3
test
adc
and
pop
and
inc
addr16
pop
lods
xor
stos
ss
in
es
push
daa
loop
test
xchg
mov
jmp
push
aas
xchg
aam
push
sub
mov
xor
jl
pop
bound
sbb
and
movsl
mov
pop
je
inc
frstor
cli
imul
jp
lods
lds
std
add
dec
or
xlat
lret
imul
push
les
jo
and
nop
mov
popf
loope
jns
sub
int
std
es
sub
jne
icebp
mov
test
add
xchg
dec
xchg
mov
loope
adc
in
cwtl
in
mov
scas
adc
stos
js
jl
flds
popa
lretw
nop
rolb
lret
inc
ja
mov
cli
fs
or
test
cmc
sub
rcrl
mov
inc
push
push
push
nop
add
or
jnp
push
std
or
cmpsb
fcmovnb
push
addr16
dec
aaa
jns
ret
dec
pop
and
pop
adc
lods
fstps
jl
dec
mov
jo
fs
lret
push
or
pushf
gs
arpl
mov
shll
mov
xor
inc
xor
inc
in
xchg
in
jne
and
popf
add
inc
xchg
push
push
jge
pop
mov
call
xchg
in
test
xchg
lret
scas
fs
push
lds
sahf
push
ffreep
nop
push
test
adc
fnstenv
testb
cmp
shrb
hlt
popa
inc
mov
lods
push
mov
sbbb
add
inc
jae
and
repz
fcomps
add
pop
sahf
incb
xor
jo
inc
sub
fistpll
sbb
add
scas
mov
fcompl
aam
test
outsl
jnp
inc
ds
lods
cmp
mov
push
and
fstpt
or
aas
pop
mov
fsqrt
lods
xlat
test
xor
inc
lock
fldl
lods
add
mov
mov
jge
ret
and
test
out
popa
fildl
aas
std
add
add
add
dec
xor
adc
je
shlb
iret
rol
push
or
movsl
adc
fadds
xor
movsl
mov
rolb
scas
and
fdivl
xor
sarl
mov
mov
push
fnstenv
enter
mov
mov
adc
jecxz
pusha
insl
jmp
hlt
icebp
shrb
imul
dec
sti
pop
imul
mov
xchg
in
jae
mov
les
cmp
cli
in
daa
jnp
lret
push
inc
outsb
lea
test
adc
pop
mov
jb
stc
int3
popa
push
idivb
loop
jb
mov
mov
leave
lods
rorb
push
jb
fs
scas
push
int3
pop
inc
movsb
ja
adc
cld
sbb
inc
shrl
xor
in
loop
sub
mov
cmpsl
scas
jp
push
lea
jge
pop
sarb
pop
cltd
adc
xlat
add
fdivrs
mov
rorb
ja
loop
or
dec
out
cmpsl
stos
inc
movsb
cli
or
push
nop
dec
test
inc
fistpl
sar
clc
pop
mov
arpl
enter
xor
incl
jecxz
lea
or
ja
jb
mov
xchg
and
and
movsl
push
sbb
outsb
cmp
pop
or
sbb
cmpsl
dec
sti
lock
pop
ret
iret
cmpsl
sahf
pop
cld
jbe
push
ljmp
cmpsl
xor
ret
and
pop
cwtl
cmp
mov
lods
idivb
push
aas
mov
adc
adc
mov
ljmp
push
add
or
pop
and
inc
pop
pop
jns
mov
cmp
jnp
pop
xchg
mov
lret
fadd
xchg
xor
mov
popa
mov
xor
sbb
out
xchg
in
jg
into
or
ret
fisubl
mov
push
into
sub
lds
or
out
retw
pop
stos
pop
ljmp
daa
cmp
and
test
test
xchg
sub
mov
push
int
jle
mov
jmp
xchg
popf
push
popa
les
adc
loope
fdivrp
cld
add
movsl
or
js
jle
das
and
shlb
jbe
ret
jo
xor
outsl
stos
dec
cli
dec
jp
cmp
aad
jle
scas
fimuls
pop
out
aaa
cmpsb
inc
pop
xchg
mov
outsb
fldcw
popa
mov
lret
push
dec
cld
call
out
push
ret
jns
ret
les
sar
inc
or
outsb
insb
jle
jne
push
dec
aad
mov
cmpsb
scas
rcrl
adc
xchg
pop
sarb
mov
bound
xlat
jae
push
call
dec
jne
sbb
xlat
pop
sbb
mov
jl
xchg
hlt
inc
xlat
xor
or
pop
dec
sbb
stc
or
xchg
repz
xchg
cli
cli
movsl
lea
mov
inc
push
add
sub
or
call
push
stos
paddb
sub
dec
or
fdivrl
sub
push
add
test
lods
add
pop
cmp
xchg
jmp
push
adc
push
cltd
ficompl
mov
es
jne
pop
rcrb
cmc
push
or
test
rorl
pop
outsb
loope
fidivs
push
cmpsb
aaa
cmp
mov
test
push
mov
mov
cld
lods
fadd
inc
mov
ret
xor
adc
mov
sbb
pop
add
push
mov
pop
gs
sti
pop
jp
fisttpl
lret
stos
push
adc
xor
and
ret
leave
imulb
push
mov
repz
or
mov
adc
mov
mov
das
cli
mov
movsl
sub
or
fdivrs
and
adc
xchg
sub
ficomps
enter
fmul
pushf
lahf
lods
push
add
pop
loop
mov
or
inc
mov
les
imul
movsb
int3
rclb
daa
pop
or
jl
scas
mov
pop
enter
ret
adc
pop
rcrb
out
xchg
push
cli
js
mov
pop
loope
int3
pop
rorb
enter
inc
or
sub
jmp
sbb
mov
pop
jae
sub
xor
enter
scas
inc
subb
orb
pop
inc
sti
sbb
andl
out
xchg
hlt
das
or
ret
pop
xor
and
jno
jnp
test
mov
xor
fdivrs
out
aam
mov
movsl
inc
loope
lods
push
adc
dec
int3
movsl
inc
fiadds
or
int3
dec
xor
mov
out
fmul
dec
adc
sar
cmp
add
and
js
imulb
subb
insb
nop
pop
pop
add
mov
call
ss
sub
icebp
mov
push
push
pop
pop
mov
mov
or
out
stc
repnz
in
outsb
inc
lods
lcall
das
les
daa
cmp
dec
enter
jb
jge
cmpsb
push
push
push
sbb
daa
cmp
inc
inc
repnz
gs
rcl
mov
cmpsb
mov
iret
lds
loop
insl
cld
inc
fldt
ds
xchg
in
data16
aas
int3
jl
push
dec
test
outsl
sub
mov
inc
jne
movsl
insl
mov
push
add
aaa
adc
lahf
and
ret
ljmp
bound
pop
mov
inc
add
adc
cltd
inc
inc
outsb
dec
and
dec
cld
jge
mov
das
push
test
or
mov
sbb
out
or
ficomps
or
lcall
lock
out
and
test
xchg
cmp
lea
and
mov
mov
mov
cmpsl
or
inc
mov
ds
pop
or
xor
push
or
and
and
jbe
test
arpl
mov
and
jne
mov
sbb
cmp
repz
xchg
or
push
jecxz
push
es
cmp
mov
aad
jle
dec
pop
pop
andl
jae
fidivrl
cwtl
jns
sub
fsubr
xchg
jno
int
xchg
pop
pop
lock
and
push
push
and
cmpsb
push
cmp
fstl
push
sbb
inc
xor
pop
xlat
ds
mov
mov
mov
adc
or
lods
arpl
jge
dec
dec
mov
loopne
int
inc
loope
leave
pop
xor
pop
scas
lahf
scas
cmp
adc
xchg
sub
fidivl
ja
sbb
stc
cmp
imul
adc
jge
pmaddwd
mov
jbe
in
movsl
cmp
push
shlb
int3
sbb
jo
aad
mov
adc
fdivrl
mov
mov
insl
sbb
or
xchg
outsl
or
inc
fwait
dec
jp
sub
xor
add
or
jns
dec
enter
stos
or
inc
xchg
cmp
xor
inc
int3
imul
xchg
outsb
pop
jp
loop
insl
mov
or
pushw
bound
jle
push
push
fsubrl
or
les
xchg
mov
data16
push
jg
in
add
in
xchg
mov
adc
icebp
stos
ret
xchg
or
dec
push
mov
sub
pop
or
insb
js
iret
sub
inc
cmp
shl
jle
mov
pop
repz
and
mov
cmp
mov
cmp
popl
mov
and
loop
sub
ret
mov
or
lock
cmpsb
test
mov
insb
adc
pop
jp
leave
jmp
adc
ja,pn
test
pop
sbbb
xor
cmp
dec
data16
push
sub
xor
xchg
addr16
adc
mov
bound
cli
jmp
outsl
lahf
inc
je
sbb
lahf
adc
pushf
and
lock
jbe
divl
jnp
in
insb
cmp
dec
sbb
mov
pop
data16
sahf
lock
fcomps
mov
rcll
push
and
and
in
addr16
cmp
lock
sbb
pop
jmp
es
and
pop
inc
scas
aas
lods
es
orl
lock
fistl
cmpl
pop
and
lret
push
cmpsb
rcrb
shll
cli
xchg
mov
and
sub
or
loop
imul
ss
mov
adc
push
movsb
sbb
int
arpl
jbe,pn
mov
jecxz
mov
jnp
aaa
sbb
jmp
scas
jecxz
lods
cmp
sub
bound
fdivrl
daa
mov
lret
or
xorb
or
ljmp
mov
loope
jb
lret
aaa
sbb
rcll
sti
xchg
mov
or
fcmovu
mov
push
lock
pop
mov
sub
mov
ret
cs
mov
dec
mov
or
xchg
jnp
inc
push
call
int
mov
out
jne
push
cmp
aaa
icebp
pop
rorl
pop
mov
push
lcall
pop
data16
and
lret
imul
fsubp
or
jge
pop
scas
mov
mov
push
fwait
and
cli
int
add
push
inc
push
rcll
push
and
fldenv
shl
push
sub
and
cmp
mov
stos
dec
mov
and
add
or
sbb
mov
sbb
xchg
out
inc
int
push
insb
xor
lds
mov
sbb
mov
push
bound
pop
xchg
loop
xchg
cmp
shr
out
cld
sub
fldt
dec
dec
addr16
pop
bound
mov
xchg
mov
pop
pop
pop
mov
subl
mov
cmovne
or
ss
xchg
repnz
push
fsubrl
push
push
rclb
adc
lret
pusha
push
stos
sub
ret
mov
jnp
scas
test
imul
and
cmp
iret
pop
mov
cmpb
sbb
pop
mov
aam
stos
mov
and
cmp
dec
lahf
or
xor
jae
cmp
mov
cmpsl
xchg
aaa
bndldx
leave
rorl
xchg
push
dec
or
push
add
cli
pop
lock
xchg
or
std
in
adc
push
lods
test
imul
cmpsb
xchg
mov
lret
lods
pusha
mov
daa
xorl
fs
ljmp
xchg
mov
and
push
pop
je
jo
pop
mov
dec
icebp
lock
add
and
std
cltd
or
add
inc
jmp
mov
cld
repz
push
outsb
inc
arpl
shll
aas
push
xor
loop
rcl
fnstsw
loopne
or
cmp
int
push
push
jmp
cli
fsincos
inc
movsb
adc
jnp
jno
mov
cmp
dec
dec
call
and
subl
adc
das
inc
lea
call
jnp
outsb
xor
push
ds
add
imull
cli
lea
imul
outsl
or
leave
or
jnp
jae
jge
xor
pop
mov
out
cmpsb
daa
repz
pop
stos
pusha
jns
popa
jle
jg
hlt
arpl
call
and
movsl
mov
daa
out
or
into
mov
mov
and
push
pop
leave
out
roll
in
cmpsl
inc
push
mov
cmp
xor
lahf
cmpsl
into
xor
push
movb
cmpsl
sub
pop
clc
jmp
lret
add
mov
fs
lret
adc
mov
xlat
cwtl
jnp
jne
out
pop
add
sbb
mov
mov
test
aaa
xor
pop
push
movsb
inc
outsb
dec
xchg
cmp
dec
aad
mov
sub
sbb
pop
xor
sub
mov
and
sbb
mov
mov
inc
xchg
jb
call
pushf
jl
dec
push
inc
js
mov
mov
push
lods
leave
or
stc
xlat
add
xor
xchg
xor
mov
push
jl
stos
cs
xchg
cld
sub
fimull
jnp
stc
inc
popf
xchg
jge
cmp
push
or
popa
mov
xchg
movsl
mov
or
jmp
add
jle
pop
enter
push
popa
jmp
xor
push
mov
movsb
ret
fdivr
add
sub
inc
lods
lahf
les
cmp
xor
add
xor
cmpsl
rcl
cmp
repz
ret
or
xchg
pushf
outsl
add
or
js
mov
mov
dec
out
sti
popa
sbb
popw
stc
negl
inc
xchg
push
aaa
imul
dec
leave
idiv
and
daa
pop
pop
fidivrs
or
fcmovne
cmpsl
orb
xchg
fcoml
pop
cmp
sbb
shl
aas
inc
dec
fwait
ret
in
sbb
pop
cltd
sahf
sbb
cmp
int
sub
sbb
sbb
mov
mov
orl
dec
jecxz
xlat
int
sarl
mov
jmp
mov
cmc
inc
dec
cltd
push
xor
or
popf
or
push
test
sbb
pop
xchg
nop
dec
mov
pop
repnz
mov
adc
sub
xor
cmp
adc
mov
mov
jecxz
jg
adc
xor
imul
cmp
das
xchg
scas
arpl
push
fs
mov
add
ss
mov
inc
mov
std
mov
ret
sub
insl
cs
mov
pop
stos
inc
jle
xchg
mov
inc
xchg
or
push
call
or
addr16
imul
mov
arpl
mov
sub
adc
jecxz
jecxz
insl
jne
mov
test
lock
and
mov
out
dec
jno
mov
mov
or
jnp
cmpl
mov
xchg
call
sbb
into
stos
fs
xor
in
sbb
frstor
or
outsb
push
cltd
test
jle
xor
or
sbb
pop
cmp
pop
xchg
loope
ret
cs
sub
lret
cmpb
xchg
bound
cmp
aas
dec
imul
mov
mov
sbb
lods
jno
mov
pop
adc
xor
les
mov
inc
pop
pop
pop
cmp
ja
mov
push
xchg
mov
sbb
gs
dec
int
xchg
icebp
mov
into
scas
sub
testb
sbb
movb
int3
test
inc
test
jp
mov
mov
fdivl
aas
rcl
out
iret
mov
mov
out
dec
cmpsl
or
pushf
int
leave
cmpsb
in
aad
cld
nop/reserved
or
pop
push
or
cli
push
in
jns
cmp
iret
jmp
mov
xorl
xchg
pop
push
xchg
adc
lret
bound
cmp
iret
int
push
lcall
or
out
aas
add
and
ds
pop
sbb
mov
ds
sub
and
sub
mov
pop
jg
cld
mov
push
outsl
xchg
jge
push
pop
lahf
dec
stos
mov
push
jae
rcrl
pusha
pop
sub
dec
iret
rep
cld
sub
push
pop
ja
bound
in
testb
icebp
int3
adcb
mov
inc
push
sbb
aaa
pop
insl
mov
xchg
xor
bnd
push
jo
dec
xchg
jnp
jmp
pop
jge
cs
cmpsb
pop
out
clc
mov
push
mov
mov
inc
andb
mov
stos
xor
pusha
bswap
cld
mov
mov
je
dec
push
dec
xchg
mov
lea
out
test
xchg
stc
adc
popa
jl
and
xorb
xor
mov
jge
sahf
lret
stos
xchg
lods
adc
or
fists
stos
adc
cmp
imul
xchg
arpl
jmp
je
cmp
cmp
cld
hlt
xchg
pop
adc
aas
xorl
mov
imul
cmpsl
pusha
ds
dec
iret
cltd
insb
cs
andl
outsl
bound
insl
add
js
pusha
jmp
xchg
daa
dec
sbb
or
dec
add
outsb
fsubr
fdivs
repz
mov
fs
rclb
and
fwait
in
idivb
jle
jmp
popa
xchg
fdivrl
and
or
cld
pop
out
jmp
pop
jge
shll
sbb
adc
dec
xchg
pop
cmp
mov
mov
call
scas
and
mov
pop
or
and
gs
lods
mov
mov
fwait
mov
aam
sbb
jbe
mov
fcomps
sub
nop
jecxz
cmp
adc
push
mov
stc
scas
pushf
fsubr
xchg
add
or
clc
scas
push
xor
mov
sbb
andb
xchg
or
mov
cmp
test
call
movsl
or
aam
mov
sti
jbe
cld
call
and
ja
mov
ss
dec
std
je
test
fs
pandn
ret
scas
fdivs
fwait
xor
hlt
xor
mov
inc
das
out
cwtl
imul
push
push
in
mov
add
imul
std
pop
xchg
lods
lea
andl
or
mov
scas
outsb
dec
and
push
insb
or
mov
dec
cmp
inc
pop
iret
adc
es
mov
inc
dec
dec
mov
xchg
jmp
sub
fs
mov
push
jge
sbbl
lea
rcrb
imul
ds
sbb
dec
mov
repnz
mov
stos
sub
addb
mov
lcall
cmpsb
sub
fsub
lea
fcompl
jae
xor
mov
shlb
cmp
fistpll
sti
fsub
repz
inc
sahf
sub
fbld
adc
jge
sahf
pop
dec
cmp
add
jmp
insl
js
push
dec
call
pop
imul
sahf
mov
out
cs
insb
outsl
stos
jmp
ss
pushf
enter
sub
push
sub
out
leave
aas
fwait
jmp
fiaddl
xchg
mov
or
sahf
pop
out
or
mov
xchg
ljmp
pop
or
add
jge
das
jo
mov
mov
xchg
test
sub
cmp
mov
mov
push
sahf
push
testl
push
data16
js
inc
jle
jne
sub
add
mov
rorb
ja
mov
mov
mov
je
ss
mov
cmpsl
cmp
xchg
add
fidivrl
pop
or
or
mov
mov
mov
jmp
pop
xor
mov
sub
sahf
cmp
ja
ss
add
ss
xchg
mov
inc
jnp
push
lods
into
pop
std
dec
jnp
ss
dec
mov
mov
jne
rcrb
dec
movsl
cmc
xchg
mov
in
xchg
xchg
repz
loope
stos
jecxz
sbb
cmp
mov
inc
out
andb
jnp
arpl
push
mov
imul
jl
rorl
jnp
and
mov
jae
scas
jb
add
push
or
int3
sub
dec
pop
jg
stc
imul
mov
jge
out
ds
out
int
dec
aas
in
mov
dec
mov
out
or
or
shll
mov
pop
jb
cmp
filds
and
push
ja
mov
fistpl
lods
push
mov
xor
out
mov
bound
xor
mov
aad
filds
mov
jle
sub
cmp
aad
adc
je
mov
or
add
xchg
into
data16
pushf
aam
stos
cmp
inc
dec
test
cli
jge
rol
bnd
push
or
dec
pushf
iret
flds
js
inc
fisubl
cmpsb
jbe
mov
jg
rcll
pop
jns
mov
push
lret
test
xchg
sub
push
aam
and
xchg
lods
pusha
dec
adc
mov
test
fisubrs
icebp
pop
bound
icebp
sbb
test
xchg
dec
ficomps
test
fsts
add
or
rorl
jbe
cld
mov
mov
sub
xor
movsl
jmp
xor
or
sti
jb
mov
mov
fwait
negb
incl
xchg
aaa
sti
push
mov
das
mov
enter
push
push
call
push
add
cmp
push
das
outsl
ds
xor
or
cmc
fadd
adc
ret
fstpl
and
shll
cli
adc
roll
inc
daa
movsb
mov
pushf
insb
insl
loope
outsl
inc
out
xor
pushf
mov
sbb
push
sti
dec
cltd
aas
pop
xchg
stos
mov
jb
std
inc
inc
inc
cmc
pop
pop
mov
dec
mov
movsb
repnz
add
jg
add
pushf
push
mov
mov
xor
mov
mov
dec
insb
xor
or
jecxz
sahf
mov
and
mov
xor
lock
pusha
es
adc
cs
sar
pusha
and
int
push
jl
mov
mov
pop
push
xchg
pop
mov
test
fidivs
pushf
test
gs
imul
stos
push
test
xchg
cmp
and
or
leave
mov
lret
shlb
adc
test
sbb
adc
jecxz
aam
fadd
sbb
and
repnz
clc
adc
test
mov
bound
pop
fs
pop
ja
and
inc
xor
pushf
jle
xchg
scas
mov
mov
inc
inc
mov
repnz
out
ret
pop
adc
mov
insl
jg
stos
fucomp
dec
addl
cmp
fwait
cmp
pop
adc
repnz
sub
sbb
pop
push
lret
ret
inc
scas
subb
sbb
das
sub
mov
push
ret
fnstcw
cmp
and
mov
xor
outsb
or
push
test
xor
mov
jo
in
jp
rol
out
add
aad
movsl
sbb
dec
xor
jnp
repz
adc
cmp
movsl
jbe
adc
inc
cmpsb
dec
lret
xor
enter
cmp
incb
test
sbb
cmp
ret
cmp
cmp
xor
inc
cltd
out
daa
xchg
xchg
mov
xchg
push
loope
cmp
cmpsb
into
mov
push
inc
hlt
cmp
pop
or
adc
push
sub
lret
mov
imul
jo
loop
imul
or
xor
pop
aaa
arpl
test
ljmp
mov
enter
mov
mov
stos
aad
or
mov
and
out
inc
cmp
add
mov
and
mov
test
nop
adc
cltd
daa
xor
hlt
pop
out
lock
jecxz
pop
shrb
adc
loopne
sub
loopne
scas
mulb
lahf
inc
inc
sarb
lock
pop
out
xchg
sub
inc
imul
popa
pop
add
lds
les
lods
movl
mov
imul
or
divb
scas
sub
cwtl
mov
pushf
mov
xchg
sarb
dec
dec
mov
cmp
ret
inc
inc
xchg
lret
lret
dec
mov
and
icebp
loope
test
xchg
filds
movsb
or
xor
xchg
mov
mov
in
mov
lods
mov
xor
clc
cmp
imul
loop
push
mov
pop
adc
jns
out
testb
pop
shll
mov
mov
out
or
jmp
lcall
jmp
pop
dec
in
jae
imul
or
or
xlat
push
xchg
cmp
sbb
pop
pop
cmovb
aam
in
fnsave
cmp
mov
insl
adc
fldenv
or
movsl
inc
mov
call
cmp
or
pop
pop
out
xor
addr16
shrb
sub
mov
lret
jns
pop
inc
popa
lret
scas
lea
outsl
mov
fimuls
lret
xchg
or
adc
sub
clc
dec
pushl
jl
dec
mov
push
mov
inc
push
in
mov
add
xchg
xchg
jb
out
pop
popf
push
movsl
xchg
mov
ret
fs
jns
or
jno
sysenter
inc
cld
jbe
dec
shlb
lea
jae
push
sub
fwait
cmp
leave
inc
mov
dec
inc
push
pop
shlb
lahf
hlt
sub
fldl2e
rorb
nop
jl
pop
data16
xchg
mov
push
mov
inc
mov
pop
ljmp
in
mov
imul
cld
xlat
push
out
xlat
mov
push
daa
je
push
notb
in
test
das
shll
jge
mov
sahf
adc
jbe
icebp
inc
mov
cltd
mov
fwait
dec
xchg
mov
les
mov
push
and
out
mov
push
enter
cwtl
cltd
cltd
stc
mov
leave
jb
pop
xor
cli
ljmp
lcall
stos
out
sub
cli
fstp
loop
fisttpll
sub
int
shrl
inc
pop
adc
mov
sub
es
push
shl
fnstcw
cmpsl
popf
out
xchg
inc
popf
jecxz
lretw
scas
pop
jecxz
pop
repz
pop
add
std
in
xor
aas
sbb
adc
cmp
arpl
inc
jle
push
cmpsl
and
xor
jnp
clc
mov
jp
pop
and
popf
pushl
imulb
fnstcw
data16
xchg
jo
iret
std
pusha
out
lret
cmp
cmp
mov
push
mov
pop
inc
clc
or
imul
addr16
mov
repz
pop
xorl
jns
fwait
cmc
test
sti
pop
push
mov
icebp
jp
imull
pop
test
pop
xor
inc
and
fucom
cmpsl
jb
or
sub
add
push
mov
xorb
xchg
sub
in
ret
int
and
scas
aas
mov
mov
je
outsl
mov
int
pop
imul
or
loope
jne
mov
cmp
es
jge
pop
ds
aam
sub
push
cs
sbb
sbb
cmpsl
repz
or
jle
xchg
cmp
inc
or
cwtl
enter
and
sarl
popf
jecxz
leave
iret
jo
mov
icebp
std
daa
jne
jmp
sarl
es
repnz
jns
test
xlat
push
inc
cmp
push
pop
or
jb
repz
pop
clc
pushf
push
addr16
pop
imul
or
sbb
dec
scas
xchg
in
pusha
cwtl
repz
dec
cmp
xchg
out
in
out
loope
xor
std
adc
dec
add
xor
dec
mov
push
pop
inc
jp
sbb
test
pop
inc
test
jb
pop
cmpsb
ret
ljmp
xor
and
jge
outsl
sarl
fstpt
pop
xchg
fisubrl
xchg
mov
js
jbe
and
lock
push
nop
inc
jbe
adc
mov
cmpsl
mov
mov
xchg
imul
xchg
sub
push
mov
shrl
out
cmpsb
adc
mov
sahf
xor
dec
xchg
sahf
lods
add
out
mov
fdivrs
and
and
into
lea
rolb
icebp
jmp
jb
cltd
cmpsb
sbb
imul
addb
adc
xor
push
lea
lods
cmp
push
sbb
test
roll
jmp
lods
shr
push
in
sub
repz
mov
xchg
jmp
std
repnz
mov
sub
nop
mov
jg
pop
pop
inc
add
mov
pop
fsubr
inc
pop
repnz
push
jp
jp
sahf
cmpsb
movsb
outsb
inc
push
or
pop
stc
and
mov
fsubr
xchg
fwait
data16
inc
adc
adc
sub
jns
sub
adc
xchg
aad
mov
leave
push
mov
sub
movsb
jbe
iret
insb
mov
pop
call
stos
cwtl
pusha
xor
popa
xchg
daa
push
sbb
pop
nop
xchg
cmp
lock
pop
mov
pop
jns
mov
stos
push
mov
xor
scas
sub
movsl
jo
daa
sub
bound
sbb
dec
dec
pop
xor
mov
mov
and
jl
scas
and
out
fdivp
sub
notl
lret
cmp
mov
cmpsl
pop
outsl
sbb
sbb
jp
and
mov
lock
push
les
cmc
pop
dec
inc
mov
sahf
fbld
xchg
push
and
fldenv
fidivrs
jge
mov
adc
daa
xchg
mov
psllw
nop
pushf
scas
clc
and
push
cmc
push
es
xchg
les
push
adc
push
xchg
push
and
mov
out
xchg
inc
adc
ficoms
cmc
xchg
mov
inc
inc
test
cmpsb
push
push
xor
insb
fisttpll
std
jno
test
jle
and
sti
popf
leave
insl
sub
cwtl
into
pop
add
xor
or
es
jmp
stc
push
popa
mov
stos
and
xlat
sbbl
jnp
lods
addb
push
sti
pop
and
add
xor
jne
out
xor
xchg
inc
and
jb
mov
mov
out
stos
cmpb
xchg
jmp
test
rclb
and
ret
cmp
mov
cld
xchg
inc
leave
ss
pop
mov
adc
divl
cs
inc
idiv
sbb
fst
mov
xor
mov
jne
pop
add
cmp
mov
stos
mov
or
jg
sub
push
shlb
xlat
lret
addr16
test
adc
add
popf
and
and
xchg
inc
mov
subb
cmp
ret
fnsetpm(287
sub
ficompl
push
sbb
outsb
jmp
push
adc
xchg
outsb
or
iret
ror
rorb
xchg
shrb
call
and
xor
leave
pushl
jnp
pusha
cli
xchg
out
ds
mov
sbb
jns
sarl
or
repz
das
push
xchg
iret
adc
xchg
pusha
dec
mov
mov
sub
orb
sahf
sub
cmp
jne
sbb
pop
js
js
pusha
js
insl
insl
jecxz
inc
push
mov
fldcw
sub
jle
in
sbb
mov
aad
inc
arpl
loopne
mov
and
jg
mov
imul
or
xchg
dec
fcompl
cltd
pop
jge
pop
int
dec
cmp
arpl
adcb
and
push
mov
mov
inc
je
pusha
repz
xor
mov
xor
scas
lds
std
add
or
jg
pushf
mov
jno
lea
cmp
fwait
enter
mov
das
pop
movsl
cmc
aaa
sbb
mov
push
loopne
gs
in
mov
cld
fdivp
push
notb
cmp
mov
out
rorl
jg
dec
fdiv
pop
add
jns
xchg
add
xor
test
rolb
xchg
lods
xchg
or
and
xchg
lds
sahf
xchg
pop
or
push
lret
xlat
mov
adc
push
fsubl
sub
sbb
jb
dec
mov
loopne
push
inc
pop
fistps
and
cmp
fdivrs
cmpsb
mov
jl
mov
mov
stos
mov
lods
lcall
xor
andb
ret
leave
gs
lcall
xchg
int
aam
cmc
add
cmp
adc
repnz
hlt
adc
add
mov
out
add
dec
inc
lock
sub
sub
mov
sbb
cmpsb
mov
mov
mov
and
leave
xchg
call
dec
add
mov
cltd
inc
pop
cld
push
pop
out
xchg
es
cmp
in
shlb
pop
scas
ds
jnp
xor
adc
insl
movsl
into
push
test
mov
lcall
xlat
xchg
sbb
adc
pop
mov
scas
nop
clc
test
daa
aad
lods
sbb
lret
or
lret
mov
mov
sti
mov
testb
test
addr16
add
or
clc
mov
orl
aaa
or
aad
pop
pushf
nop
aaa
inc
push
repz
push
mov
cmpsb
clc
inc
sub
xchg
mov
aad
mov
xor
xchg
xchg
sub
adc
fwait
idivb
xchg
fs
outsb
jns
cmp
cmp
aam
fsubl
xchg
mov
xchg
jo
lret
movsl
dec
adc
stc
fiaddl
mov
add
pop
mov
or
push
or
outsl
jbe
adc
mov
jae
dec
xchg
and
add
and
mov
mov
jmp
xchg
mov
push
insl
mov
gs
movsb
scas
cmp
out
ss
mov
out
sub
cmpsb
not
popa
mov
inc
or
xchg
repz
out
push
and
les
cmovle
jecxz
sahf
ljmp
scas
pop
fldl2t
jnp
sahf
nop
aam
and
mov
jns
mov
mov
dec
pop
enter
and
imull
in
xchg
and
fs
adc
inc
pop
addr16
mov
rcll
mov
jl
aas
jl
dec
icebp
mov
subl
cmpsb
jnp
jge
mov
in
sub
popf
ret
data16
popf
imul
add
add
imul
mov
push
fcoms
mov
push
gs
movsl
mov
jno
add
rol
xchg
in
int3
push
xchg
sbb
fcomps
mov
std
ret
iret
int3
or
lcall
add
out
mov
push
inc
cmp
loope
dec
jp
push
jecxz
adc
sub
pop
in
icebp
fwait
pop
mov
out
sbb
and
lahf
jnp
sbb
dec
into
and
fidivl
mov
ljmp
test
dec
cmpsl
xchg
int
in
fsubrs
sub
pop
fdivl
lock
mov
rolb
lcall
inc
testb
dec
fidivs
mov
daa
mov
jg
das
add
xor
mov
sbb
js
xchg
pop
pop
flds
aaa
xchg
sub
jne
nop
test
inc
outsb
sti
hlt
xor
out
lods
sub
sbb
icebp
leave
push
fstpl
pop
ret
shlb
ljmp
push
xor
mov
std
inc
gs
ret
test
das
cmc
ret
jo
or
fcoms
das
jb
stos
imul
mov
jae
insl
pusha
int3
or
nop
stos
sbb
call
enter
pop
mov
jb
pop
sti
cmp
ret
jo
fwait
and
out
jo
out
lods
popa
loope
mov
into
cli
xchg
mov
adc
adc
xor
mov
in
xchg
insl
lahf
imul
cmp
cmp
mov
adc
aaa
mov
dec
outsb
inc
lds
icebp
clc
dec
loope
jecxz
mov
and
jmp
lock
ficomps
xor
inc
mov
jecxz
mov
cmp
cld
cwtl
mov
sub
pop
clc
movsl
xchg
in
bound
push
mov
inc
adc
cmp
out
add
js
nop
cmpsb
clc
cmp
idivb
insl
inc
dec
jno
lds
fs
ret
push
and
outsl
cmpsb
jp
sub
in
mov
enter
xchg
push
adc
sahf
cmpsl
cmp
dec
mov
call
mov
cli
fwait
imul
shll
cltd
lods
inc
and
inc
sub
jle
mov
je
push
cmc
leave
inc
in
shr
out
les
ret
stos
push
cli
out
bound
loopne,pn
fisttps
leave
call
outsl
jae
test
mov
jl
neg
lock
mov
or
or
cltd
mov
jbe
inc
gs
xchg
pop
xchg
scas
mov
jecxz
insb
pop
roll
xchg
sbbb
imul
mov
movsl
pop
pop
add
shrl
ret
xchg
push
inc
fldt
mov
test
mov
mov
jo
rcll
das
rcll
add
stos
or
ds
int
aad
add
scas
xchg
ror
pusha
in
iret
popa
scas
test
and
fwait
lock
xor
adc
xchg
pop
ss
cmp
lods
in
xchg
lret
mov
movsb
adc
out
xchg
movl
sub
sbb
xlat
xchg
cltd
into
stos
aaa
daa
mov
outsb
mov
jmp
jae
test
pusha
mov
mulb
push
fildll
dec
sbb
fwait
out
bound
push
sarl
jae
jne
lcall
inc
jle
jbe
cltd
cmc
shrl
pusha
test
fisttps
sub
test
xor
das
sub
lock
out
inc
frstor
sahf
mov
jo
xor
cs
test
notb
xchg
jb
jnp
clc
adc
cwtl
std
test
cwtl
push
pushf
int3
ret
inc
xchg
add
or
push
in
sbb
stc
mov
imulb
mov
loope
in
test
push
or
sub
call
push
mov
or
mov
cli
scas
xor
mov
and
repnz
mov
dec
test
lock
arpl
sub
mov
or
insl
inc
insl
sbb
out
push
hlt
cmp
jae
das
fwait
pusha
sti
ficoml
in
int3
aad
int
lcall
push
push
dec
xchg
aad
mov
lea
xor
sub
pop
into
xor
cli
push
sbb
sbb
pop
repz
popa
test
and
mov
loopne
and
je
loope
std
ss
lea
es
dec
imul
mov
nop
dec
push
jno
dec
or
push
mov
push
pop
inc
pop
shl
rcl
leave
fdiv
std
jne
data16
or
inc
gs
repz
mov
shlb
out
int
xlat
cmp
cmc
outsl
sub
and
adc
stos
or
sarl
hlt
dec
or
int3
loope
cmp
cs
pop
pop
inc
cmp
add
test
mov
js
or
insb
das
xchg
fimuls
push
or
push
xor
inc
xor
fimuls
repz
iret
loope
mov
dec
in
sbb
ficoms
out
shrb
adc
test
jmp
cmp
outsb
lahf
xlat
cwtl
mov
mov
mov
lods
popa
popa
sub
lea
sub
sbb
xor
fwait
outsb
jl
pop
ret
push
test
cmp
adc
cmp
fwait
add
fs
lcall
shlb
dec
push
mov
mov
add
inc
cmp
ja
scas
nop
mov
inc
dec
push
jg
inc
lret
xor
xchg
in
sar
popl
stos
jb
jecxz
jg
insb
mov
adc
lods
insl
or
out
xchg
imul
daa
aas
pop
sub
pop
pop
mov
fisttpl
inc
cli
je
lods
or
rol
loop
and
mov
pop
daa
lcall
dec
or
pop
addr16
cltd
jle
dec
scas
xchg
lcall
mov
aad
jle
cmpl
and
push
mov
sbb
jp,pt
leave
js
lcall
imul
pop
mov
xorb
inc
fbld
mov
cld
push
loopne
mov
arpl
js
scas
fstps
fistpl
mov
scas
jbe
shlb
shl
cltd
imul
fdivl
outsb
push
lcall
xchg
add
mov
imul
pop
dec
xchg
mov
mov
inc
repz
jne
das
pop
mov
adc
aas
lods
imul
insb
sbb
dec
repz
insb
imul
adc
sub
pop
push
and
mov
data16
push
mov
iret
add
test
push
sbb
arpl
test
inc
cmp
dec
stos
dec
fmul
pusha
int3
push
mov
sbb
jmp
mov
shlb
inc
aas
daa
out
and
arpl
outsb
ret
dec
jge
lock
sbb
mov
and
sti
add
jp
mov
sbb
scas
scas
inc
testb
pusha
ja
lock
je
mov
push
xchg
xor
repnz
in
push
notl
sub
enter
cld
inc
xor
int3
shlb
mov
pop
mov
aad
or
dec
mov
push
outsl
ja
xchg
lock
repz
ja
and
push
mov
ljmp
psubsb
lahf
shll
jl
lods
cmp
test
mov
cmpsb
cltd
stc
mov
push
and
dec
xchg
clc
xchg
dec
inc
cld
arpl
mov
fwait
adc
push
cltd
sbb
clc
arpl
pop
pushl
jae
rorl
lret
test
pop
push
add
sbbb
push
mov
scas
pusha
out
stos
orl
mov
adc
mov
mov
lods
xchg
cmc
or
andl
pop
into
gs
jmp
lods
jo
stos
cltd
adc
int
ds
rorb
inc
mov
jmp
mov
pop
sub
lods
push
clc
jno
imul
mov
out
and
outsl
fcompl
shrl
adc
testl
mov
adc
sbb
mov
bound
mov
and
ja
scas
lcall
jns
mov
std
rcr
cli
jp
xor
movsb
push
lods
pop
int3
xchg
add
outsl
jno
into
sub
push
dec
pop
stos
enter
outsl
inc
out
aam
fwait
pop
aad
cmovo
cmpb
dec
inc
xor
dec
xchg
jp
aad
iret
lahf
mov
inc
mov
orb
xchg
pop
xchg
pop
adc
lcall
out
inc
jbe
and
mov
int3
nop
fcmovbe
insl
leave
dec
das
mov
lret
and
jne
dec
jle
stc
js
pop
sbb
dec
cmp
xchg
fldt
inc
insl
xchg
cmpsl
out
loop
ljmp
int3
xorl
sub
fistps
and
add
lahf
mov
sbb
dec
rol
mov
cmp
jo
mov
push
imul
inc
add
pushf
mov
lahf
mov
inc
xlat
lds
add
sahf
mov
leave
sub
cs
in
xor
pop
and
cmpsb
sbb
and
inc
add
lock
dec
clc
push
cmp
test
xchg
xchg
call
rclb
fmull
add
mov
mov
push
les
outsb
add
adc
cli
or
pop
dec
xchg
jb
ss
lds
lahf
push
ljmp
pushf
cmp
js
punpckhbw
mov
add
testb
in
paddb
cmpsl
aad
icebp
cltd
addr16
dec
inc
daa
fstpt
in
rcrb
int3
or
adc
adc
cmpsb
cmpsl
inc
imul
mov
shll
cmc
adc
push
into
fadd
daa
mov
lea
lock
lods
ss
adc
sti
adc
pop
es
pop
pop
aas
scas
out
xor
fldt
out
push
sarb
scas
or
jle
idivb
ja
mov
add
fistpl
jbe
sub
push
pop
insb
out
xchg
shll
ret
xchg
cmp
outsl
cwtl
xor
mov
push
pop
int
pop
cmp
cmp
dec
xchg
loope
add
fmull
aam
jo
mov
lahf
orb
jmp
mov
mov
dec
call
jnp
pop
push
sbb
ret
xor
mov
or
push
mov
adcl
pop
addr16
outsb
cwtl
and
or
xlat
outsb
fildll
fstpl
movsb
mov
pop
jno
aas
ljmp
xor
push
pop
fcoml
loop
mov
mov
mov
cmp
mov
adc
adc
sahf
addl
nop
faddl
push
fcmovnb
mov
mov
mov
cmp
sahf
in
loop
dec
loopne
inc
inc
mov
jo
sbb
mov
cmp
inc
inc
mov
cld
cli
mov
sub
div
pop
cmpsb
shl
addr16
daa
inc
mov
in
fsts
mov
jmp
and
xor
xlat
mov
movsl
aam
insl
fsubr
jp
jns
loop
stc
push
cwtl
sbb
sbb
mov
rclb
mov
testb
jg
pop
inc
int3
ja
inc
jne
data16
dec
sbb
addb
mov
dec
and
jnp
mov
test
sti
adc
fnstenv
scas
sub
adc
js
imul
clc
or
sub
call
data16
jle
sarb
cmp
mov
popf
jo
iret
outsb
shrb
add
push
sbb
bsf
aad
jne
sub
insl
fwait
pop
and
or
call
mov
xor
mov
jo
dec
add
xchg
xor
ret
enter
cmp
fstps
pop
pushf
stc
outsl
imulb
pop
adcl
jge
shll
mov
jle
leave
aas
pusha
sub
pop
cs
pop
int3
jmp
pop
jg
pop
or
loope
icebp
loop
mov
lods
mov
cmpsb
or
jnp
jle
shrd
out
mov
sti
or
or
ret
lret
lods
add
mov
arpl
arpl
mov
lods
out
xor
in
inc
inc
cmpsb
pop
inc
and
mov
in
pop
mov
xchg
scas
sub
ds
push
rorl
mov
push
push
adc
pop
js
sbb
xor
gs
jbe
in
test
adc
dec
cltd
jns
or
xchg
push
cmp
or
pop
jle
cmp
lock
push
into
scas
scas
loop
inc
cmpsl
shlb
push
std
test
xlat
cmp
mov
popa
push
or
mov
and
add
or
mov
cmpsl
out
addr16
ljmp
adc
cltd
ja
push
fidivl
dec
cmpsl
sti
lret
idivl
ret
ljmp
stos
xchg
ret
ds
sub
jbe
add
and
pop
sahf
scas
xlat
and
push
fimuls
fnsave
cmpl
aas
push
xchg
jns
pop
cmpsl
sub
dec
pusha
cli
jno
imul
jecxz
jae
arpl
mov
jp
mov
mov
jecxz
cwtl
leave
clc
jne
pop
pop
cmp
dec
dec
mov
inc
jmp
xchg
xchg
push
jns
pushf
cltd
outsb
mov
xchg
rorl
fldt
ret
lahf
and
loope
loope
aam
mov
int3
mov
repnz
andb
push
ds
mov
cli
and
sub
int
pop
aas
sub
in
inc
stos
xor
xor
xor
aaa
popf
hlt
ffree
mov
jbe
clc
ja
arpl
push
test
icebp
cs
push
dec
xor
jne
and
cld
cmp
je
mov
fistl
ret
mov
roll
fistpll
imul
mov
adc
adc
lahf
fisubs
repz
lcall
mov
out
mov
int3
sub
std
movsl
cmp
aam
lret
or
lock
popa
stos
mov
xchg
sbb
das
dec
movsl
addb
lret
test
stos
xchg
sbb
dec
cs
shll
xchg
insl
sbb
mov
mov
je
lock
xchg
nop
or
stos
dec
lea
mov
into
add
push
sbb
inc
daa
je
insb
repz
dec
jns
int3
mov
jo
jne
mov
and
push
or
ss
add
push
insl
cmp
movsl
push
aas
jnp
lods
cmp
cmp
out
ds
dec
jmp
pusha
or
dec
nop
sub
es
cltd
push
aad
mov
js
insb
adc
xor
push
xchg
pop
mov
xchg
mov
lods
mov
out
adc
sarl
mov
and
aad
clc
roll
sub
jle
icebp
hlt
in
test
je
jnp
mov
les
or
insl
filds
sbb
fisubrs
rol
sbb
sarl
push
ret
cmp
mov
mov
and
xchg
stos
and
outsl
int
insl
lcall
sub
pop
sub
repz
mov
jns
popf
push
pop
fs
repz
cmp
inc
addr16
inc
insl
loope
adc
fisttpll
inc
sub
fmul
lcall
jg
jo
push
xchg
dec
inc
jnp
xchg
fucom
inc
ss
mov
pop
inc
xor
sub
std
xor
rep
lahf
daa
stos
lock
ret
cld
sbb
dec
outsb
push
wbinvd
nop
fisubl
mov
cmpsl
aas
imul
push
ljmp
enter
imull
fwait
cmpsl
pop
add
jecxz
in
fistpl
add
lret
push
lea
add
in
xor
lods
jns
or
jae
push
xor
xor
inc
bound
mov
jecxz
notb
and
pop
pushf
push
notb
jo
popa
jo
sbbb
ret
pop
mov
dec
sub
jmp
xchg
xorb
inc
mov
or
mov
mov
shrl
cmpsb
push
push
cmp
dec
out
test
jne
pop
and
or
js
push
lods
arpl
xchg
fstps
sbb
push
or
or
cmp
fadd
mov
jp
ret
lcall
outsl
fwait
iret
int3
mov
lret
or
sub
dec
and
cwtl
jbe
pop
sti
jle
leave
push
scas
mov
cli
mov
inc
and
or
mov
dec
and
arpl
xchg
fsubr
inc
jb
shll
imul
leave
pop
mov
fstl
aaa
push
xor
call
fwait
push
repnz
pushf
fisubrl
inc
push
push
sbb
jno
sahf
add
push
mov
pusha
popf
stos
lods
hlt
dec
repz
mov
ds
aaa
in
call
loop
pop
pop
adc
xchg
stos
jne
das
cmp
sub
fisttpll
stos
pusha
cmp
xchg
in
mov
jnp
ret
pop
jmp
xchg
sbb
pop
mov
test
leave
in
mov
stc
lock
pop
xor
and
mov
push
and
pop
int3
in
mov
mov
jb
lods
mov
std
dec
or
cli
sub
rorb
popf
mov
xor
cltd
or
and
cmp
mov
jmp
fldcw
sbb
fbstp
inc
jle
mov
cvtdq2ps
sub
push
dec
push
test
push
shlb
or
xchg
adc
clc
inc
pop
je
cmp
inc
xchg
sub
pand
cwtl
lcall
inc
mov
ja
adc
add
xchg
stos
or
leave
inc
and
inc
bnd
and
sti
nop
mov
dec
stos
adc
jecxz
stos
push
loop
push
aad
mov
mov
inc
daa
cmp
xor
imul
lret
cld
loopne
cmpsl
imul
dec
in
jnp
pop
iret
mov
aas
pop
jge
lret
cmpl
stc
ljmp
mov
jmp
fucomip
es
mov
fldenv
stos
test
mov
jne
mov
movsl
adc
and
and
out
rcr
stos
je
shrb
aam
xchg
inc
lahf
cmp
adc
dec
add
jl
mov
fisubl
mov
rol
bound
mov
stos
fsubr
loopne
sbb
in
inc
mov
adc
pop
ja
in
dec
int3
rorb
xchg
out
mov
push
jmp
mov
mov
xchg
icebp
push
add
xlat
test
push
ja
popa
add
mov
aas
shll
mov
orl
dec
aam
or
push
lods
pop
enter
pushf
arpl
mov
dec
popf
sbbl
shl
fwait
jmp
inc
mov
inc
test
cmp
imul
lret
add
and
iret
addr16
dec
push
or
mov
mull
fldcw
shr
mov
jbe
imul
in
jl
mov
int3
hlt
fwait
leave
xchg
cmp
sub
push
sub
fbld
hlt
outsb
test
mov
mov
aaa
push
jle
or
mov
xor
repnz
outsb
sbb
xchg
test
dec
xchg
jo
cmpsb
addb
xchg
push
mov
dec
ucomiss
cmp
cmp
lahf
shr
mov
xchg
rclb
add
popf
out
fisttpl
sub
push
in
push
sbb
mull
std
dec
fcmovne
filds
insl
pop
ss
xchg
inc
sub
jns
mov
and
or
scas
rep
push
cld
jo
xlat
and
movsb
iret
je
xor
dec
mov
stos
stos
std
out
push
jg
mov
fdivr
mov
insb
xor
arpl
pusha
mov
mov
xor
add
repz
adc
dec
test
cmp
pushf
mov
xchg
cwtl
dec
jo
sub
fildl
jns
jo
addr16
divb
daa
dec
cwtl
sub
shrb
into
and
ss
mov
push
push
mov
jbe
lea
aaa
mov
push
adc
inc
stos
adcl
dec
mov
cmp
inc
sbb
pop
lret
iret
stos
mov
cmp
dec
sub
movsl
push
addr16
bound
jo
mov
fwait
sub
push
adc
in
ret
andb
inc
outsb
test
mov
mov
jle
adc
mov
out
mov
insb
pop
insl
mov
inc
pop
mov
fsubl
lods
cmp
sub
adc
stc
clc
or
fsubs
imul
rcll
shrb
pop
fmull
shl
lds
inc
dec
pop
out
mov
pop
dec
scas
lret
xchg
push
xchg
add
xorb
jae
add
xchg
orb
ds
pop
aas
adc
mov
flds
xchg
cs
jle
jmp
mov
out
fisubs
mov
cmpsl
xor
mov
daa
lds
pusha
fstpt
xchg
popa
jmp
push
dec
call
cmc
fcoms
add
rclb
jmp
pop
lfs
ficoms
jb
mov
popa
mov
into
loopne
push
push
daa
xchg
add
mov
fmul
mov
xor
jecxz
inc
leave
lods
pop
lock
lret
lret
insb
cmc
pop
cmp
imul
dec
imul
and
stos
aad
add
nop
xsha1
cmpsb
setno
lret
je
call
jp
xor
and
int
jmp
jmp
ja
xchg
ljmp
aas
mov
ret
dec
and
or
sbb
push
dec
jmp
imul
xor
jno
loope
lcall
mov
push
ja
cmp
int3
mov
mov
dec
les
jge
js
mov
cmp
rdmsr
adc
xchg
mov
inc
mov
xor
xchg
mov
mov
lods
dec
fldcw
mov
dec
pop
push
jmp
addr16
ds
jmp
sbb
je
test
jno
and
popa
lock
pop
outsb
in
mov
inc
loop
in
and
inc
sub
mov
mov
xchg
lods
sub
mov
decl
jp
sbb
dec
test
xchg
fistpl
add
mov
mov
int
sti
and
rclb
fwait
pop
or
sbb
dec
adc
gs
jle
mov
and
and
movsl
test
ljmp
xchg
shrl
hlt
ljmp
rol
or
sbb
jmp
stc
dec
leave
jo
dec
mov
mov
addr16
inc
test
jno
int
ret
outsb
mov
imul
rorl
mov
cmp
insb
dec
jno
inc
mov
pop
mov
insl
bound
xchg
fbstp
jb
sbb
int3
push
jl
jns
xchg
into
xor
daa
fwait
les
jge
mov
mov
daa
lock
out
inc
push
and
inc
push
roll
push
icebp
testl
cwtl
dec
push
mov
jmp
sbb
jg
mov
xchg
xchg
cs
lret
data16
cld
incl
pop
mov
ljmp
leave
imul
fisubl
push
mov
jmp
mov
outsl
xchg
mov
rcrb
mov
push
lahf
lock
std
iret
cltd
inc
inc
in
and
jae
mov
sbb
cmpsl
test
or
stos
jl
push
pop
sbb
test
aaa
int
bnd
aaa
or
stos
fcompl
and
sub
fs
filds
cmpps
lahf
sahf
add
sbb
mov
xchg
xchg
sarb
and
sbb
cli
cli
or
enter
shrb
inc
dec
ror
imul
stos
prefetcht1
popa
mov
cmp
or
push
jns
inc
xor
push
inc
in
lcall
mov
loop
pop
and
fdivrl
cmp
push
dec
insb
push
push
fyl2xp1
shrb
cmp
pop
cmp
enter
sub
pop
mov
repnz
mov
or
lcall
lret
or
sbbb
bound
in
xchg
jmp
and
jo
fdivl
jp
push
adc
rolb
sbb
lods
ret
arpl
mov
aaa
xor
sub
lock
push
imul
aas
imul
rolb
movsl
sarb
push
inc
cli
rcrl
mov
into
xchg
hlt
mov
fists
mov
scas
lock
inc
fcmovnu
push
popf
imul
pop
jb
cli
lds
push
xchg
xor
daa
push
cmp
pop
dec
push
and
test
sbb
insb
test
xlat
inc
sbb
inc
shl
jo
pop
and
sbb
fdivs
push
inc
add
and
insb
std
cmp
pop
loope
inc
or
push
inc
add
mov
insl
cli
call
data16
sbbl
pop
xor
dec
pop
xor
jecxz
stos
add
sub
jl
dec
fdivr
mov
inc
xchg
je
inc
in
jmp
mov
push
bnd
xchg
push
sahf
fcoms
xchg
xlat
out
cmp
es
jno
push
and
cltd
cmp
inc
jg
cmpsl
js,pn
outsb
push
inc
icebp
shl
leave
dec
fcomps
and
call
inc
arpl
fidivs
cmp
push
mov
ja
push
cmc
sbb
shl
ljmp
call
jmp
inc
mov
cmp
in
push
mov
loope
scas
jp
mov
shl
pop
in
jp
mov
sub
sub
cmp
mov
fdiv
inc
or
jo
shl
push
nop
out
or
adc
das
xchg
jge
mov
mov
scas
stos
out
add
movsl
stos
jp
sub
popf
imul
push
sarb
push
int
hlt
lret
push
fistpll
icebp
xlat
xchg
les
mov
mov
repz
pop
inc
fidivrs
int3
icebp
inc
pop
testl
pop
and
cmp
jno
aas
and
push
jb
dec
pop
cmp
lods
in
add
mov
sub
movsl
test
pop
sbb
lods
add
adc
inc
aad
pop
jno
into
and
andl
sbb
xor
adc
jecxz
add
push
xchg
outsb
jae
pushf
jecxz
push
imul
sub
sbb
ss
and
loopne
and
adc
enter
xchg
jl
sti
mov
sahf
mov
xor
test
sbb
push
pmaddwd
cltd
out
out
xor
sbb
sbb
xchg
sti
jecxz
push
nop
mov
mov
xchg
jnp
aas
mov
repz
sub
or
out
iret
mov
sub
repz
xor
sarb
les
mov
mov
inc
mov
xchg
data16
jno
arpl
cmpb
xor
cs
std
xchg
out
aaa
arpl
pop
cmp
pushf
sbb
imul
shrb
aad
push
fsubs
fidivrl
repnz
cmp
cmp
mov
popl
jne
jg
cwtl
push
xchg
jns
push
push
cmp
or
push
push
clc
loop
pop
xchg
mov
xchg
push
jl
enter
jbe
out
push
in
adc
jmp
pop
in
jbe
jno
idivb
mov
cwtl
out
or
lea
out
add
xor
into
push
cmp
cli
outsb
push
pop
or
je
pop
test
sbb
sbbl
cli
or
and
inc
or
mov
gs
mov
pop
adc
xor
adc
mov
jb
scas
cmp
or
mov
stc
lret
mov
xchg
and
ljmp
add
outsb
std
cmp
inc
aaa
nop
or
mov
inc
nop
inc
adc
movsl
aas
cmp
bound
mov
dec
les
push
xor
in
orl
clc
add
imul
outsb
cwtl
xor
jg
les
sub
mov
loopne
and
push
test
or
cmp
hlt
fildl
out
ss
lret
sarl
stos
aaa
outsb
nop
enter
push
inc
pop
ljmp
ficoml
xchg
test
or
add
aad
sbb
xchg
loopne
jecxz
shl
clc
cmp
add
inc
jmp
rol
insb
add
je
jg
sbb
inc
mov
xchg
and
jle
imul
sti
pop
lods
mov
mov
addr16
rolb
mov
pushf
cmc
pop
xor
sub
lods
test
je
cmpsl
addr16
xor
inc
popa
pop
bound
adc
pop
loope
inc
mov
push
cld
into
popa
loopne
sbb
or
outsb
jge
out
push
xorl
out
jg
xchg
cwtl
lret
and
mov
in
cmc
outsb
aaa
inc
loope
jae
xorb
sbb
inc
gs
daa
lods
xchg
stos
aaa
dec
mov
insb
cltd
adc
test
push
lret
insl
mov
xorl
dec
orl
loope
das
repnz
imul
mov
mov
jp
paddsb
xor
xchg
icebp
ljmp
mov
sti
call
int3
in
gs
dec
out
stc
sti
in
xchg
les
out
inc
mov
stos
mov
xchg
adc
xor
js
push
dec
mov
jmp
pushf
icebp
mov
sbb
cmp
xchg
xchg
xchg
fwait
pop
mov
xor
ret
mov
sub
sbb
call
cmpsb
mov
pop
lods
cs
push
inc
or
push
jbe
jg
mov
add
je
fadd
xor
outsl
cmpsb
jns
cmp
or
out
cmpsl
dec
mov
pop
lods
xchg
fadds
inc
bound
or
ficompl
add
inc
xchg
mov
cmpsl
pop
int3
cmp
and
inc
mov
xchg
mov
mov
dec
ds
mov
aad
push
daa
adc
sbb
inc
inc
add
or
xlat
cli
ret
jne
jo
jne
filds
test
scas
add
xchg
mov
cmp
dec
rcll
arpl
shrb
push
fdivrl
jbe
jge
cmp
or
push
cmp
ret
sub
mov
xchg
test
pop
fcmovnb
dec
test
add
jl
pop
rcr
pop
arpl
cmp
je
pushf
cltd
mov
mov
jbe
mov
imul
sbb
cmp
outsb
movsl
push
popf
loope
adcb
and
lret
adc
in
fmull
mov
push
outsl
insb
ljmp
mov
inc
sub
aam
out
inc
pop
add
and
inc
adc
push
cld
jg
xchg
stc
movl
adc
imul
adc
add
sub
test
xor
scas
ret
push
inc
sub
or
movsb
repz
movl
and
rol
stos
push
lcall
xor
icebp
add
xchg
mov
mov
xchg
rorl
movsl
idivb
gs
fisubs
out
loope
and
insl
and
pushf
lret
hlt
es
inc
mov
xlat
mov
fcomps
jb
sub
pop
ljmp
sbb
jge
jl
inc
loop
mov
push
mov
jne
or
scas
jle
popl
xor
sbbb
jo
std
xor
mov
mov
ljmp
pop
add
pop
lods
pop
pop
mov
and
push
fwait
loopne
sbb
xor
and
add
jmp
in
xor
pushf
ja
pop
shrb
into
mov
outsl
mov
addr16
daa
sub
mov
fs
xor
jns
idiv
xor
addl
sub
pop
cmpsl
xor
test
loope
and
ja
and
mov
or
adc
jl
lea
jecxz
and
arpl
adc
mov
cltd
out
mov
pop
cmp
fidivrs
inc
or
xchg
push
ljmp
adc
mov
mov
xorl
adc
or
pop
in
pop
adc
mov
je
inc
insl
sub
cmpl
addr16
push
mov
dec
mov
das
rorb
mov
or
xchg
xorl
jle
test
push
fnstenv
push
mov
add
lock
dec
test
call
aaa
push
pop
dec
or
and
lods
push
dec
mov
xchg
adcb
bound
loopne
inc
sub
inc
jno
cmp
insl
cltd
pop
adc
inc
pop
dec
mov
cmp
mov
or
out
sub
jg
repnz
xorl
xor
pop
mov
aas
xchg
popf
jg
jmp
out
adc
repnz
movsb
fldcw
pushf
inc
imul
test
or
jo
inc
inc
inc
in
pop
cmpsb
or
popa
aad
je
pop
notl
or
loope
fwait
aad
inc
lods
xchg
ljmp
sar
out
lods
out
mov
stc
pusha
lock
pop
pop
or
es
in
gs
inc
push
scas
sub
dec
sbb
push
mov
das
das
sub
scas
les
jb
ss
xchg
out
es
mov
movl
movsb
jle
adc
push
test
lods
clc
cmp
jns
add
ljmp
cmp
xchg
cli
sbb
inc
popa
outsl
mov
loope
icebp
pop
and
ret
in
jle
mov
test
je
push
mov
pop
mov
inc
mov
pop
inc
mov
and
std
mov
sub
xor
mov
in
xor
clc
shrb
jmp
push
enter
call
cmp
aaa
xchg
or
sbb
cmp
mov
or
mov
jp
mov
inc
mov
and
ljmp
jmp
imul
ffreep
xchg
aas
jns
jle
dec
mov
adc
xlat
xchg
cmpsl
xor
loopne
iret
clc
popa
in
jae
jne
push
call
ss
repnz
fists
xor
jge
inc
js
fwait
xlat
xchg
jle
and
aaa
mov
fcoml
xchg
push
js
mov
cwtl
xor
mov
fsubp
push
push
pop
adc
inc
fisttpll
jge
jmp
add
jmp
mov
inc
push
loope
xor
jge
lret
push
push
mov
mov
push
jno
jge
insl
mov
pop
cmp
mov
cld
mov
in
dec
or
jns
mov
out
jmp
mov
sbb
dec
pop
lahf
push
enter
xlat
jbe
sbb
in
jmp
lret
add
dec
jmp
popf
out
mov
mov
and
sub
test
dec
pushf
out
or
inc
or
and
mov
repnz
inc
pop
add
orl
sahf
in
dec
je
pop
xchg
fs
mov
mov
pop
cmp
cmp
mov
mov
sub
ret
call
mov
in
pop
mov
adc
jle
je
pop
or
loope
xor
mov
sub
je
insl
and
sarb
cmp
sbb
add
insl
mov
mov
mov
mov
rcrb
inc
sub
lods
xlat
ljmp
cltd
or
fld
xchg
mov
imul
testb
in
outsb
clc
jno
data16
lds
jb
jecxz
rcl
sub
lahf
xchg
sub
pop
ljmp
jae
in
mov
pop
cmpsb
jecxz
cmpb
jo
cmp
pop
dec
popfw
mov
and
sbb
inc
xchg
mov
ds
add
adc
adc
jnp
mov
scas
cld
js
pop
lret
cmp
dec
movsb
mov
adc
dec
lock
push
imul
sbb
pop
and
ja
inc
and
popa
xor
cmpsb
mov
dec
mov
inc
repz
xchg
pop
outsb
adc
imul
repnz
jmp
adc
pop
sbb
jle
jne
push
xor
add
mov
dec
shlb
aas
adc
xchg
pop
shrl
hlt
jno
insb
push
aas
nop
sbb
dec
mov
mov
or
das
lcall
jecxz
call
dec
lods
lcall
mov
das
repnz
jne
int
cs
or
sbb
inc
ds
xchg
mov
adc
inc
daa
jo
inc
cmp
or
mov
leave
mov
xor
add
jp
cmp
add
mov
test
shrb
arpl
jb
fldt
and
xlat
jbe
outsl
lods
cs
jne
xchg
out
icebp
outsl
cmc
lret
jecxz
push
jge,pn
and
adc
sbb
sub
jmp
xchg
aad
cmpsb
jecxz
js
add
lret
or
loopne
push
insb
inc
ror
pop
xchg
sub
xchg
rcll
in
repz
out
ds
test
mov
mov
cld
nop
and
adc
jne
sub
sar
je
inc
add
mov
dec
xor
add
fldt
pop
popf
mov
dec
lret
xlat
mov
test
movsl
clc
jnp
lock
aas
xor
xor
lar
inc
cmp
pop
pushf
xor
ljmp
in
push
cmp
pop
cld
sub
mov
add
out
inc
and
adc
add
jbe
pop
fwait
out
int3
mov
cmp
adc
out
shll
sub
loope
testl
enter
pop
push
jbe
cs
cmpsl
pop
inc
test
call
fisttpll
rcrl
js
lods
xorl
mov
pop
jg
pop
xor
sub
add
push
int
cmp
sub
aaa
xchg
dec
fidivrl
xchg
mov
cmp
rorb
mov
loope
cmp
aaa
lods
test
lahf
idivb
cmp
scas
imul
js
nop
notl
aas
push
aas
imul
xchg
loop
ret
or
push
sub
inc
std
push
pop
cmovge
xchg
xchg
adc
in
clc
es
mov
addl
sub
adc
xchg
and
jo
sbb
pop
xchg
inc
nop
xor
jbe
mov
sahf
js
mov
lea
mov
inc
jo
xchg
ss
jne
sub
negb
std
push
out
push
mov
sbb
jno
daa
loope
mov
insb
fwait
xor
inc
inc
cld
inc
xchg
pmaxub
cmp
loope
out
insb
std
jnp
mov
inc
add
mov
imul
add
add
aaa
std
lret
outsb
adc
nop
ret
out
pusha
insb
lods
ret
lods
cmp
jb
lock
mov
and
xchg
mov
out
sbb
push
ss
sbb
add
enter
ljmp
mov
adc
mov
je
dec
sbbb
idiv
mov
sub
sub
pop
call
mov
ja
add
inc
xchg
into
adc
daa
jge
xor
arpl
mov
dec
sbb
lods
cmpsb
mov
sbbb
iret
sub
or
mov
iret
pop
inc
insl
pcmpeqd
lds
gs
push
jecxz
sub
adcb
scas
mov
aas
xchg
cmp
in
and
iret
sub
cltd
int
outsl
in
popa
test
insl
je
dec
inc
test
mov
or
in
lret
outsl
cs
stos
pop
xchg
fisttpl
addb
jle
cmp
cmp
leave
pusha
enter
mov
sub
std
push
clc
iret
cmp
mov
jb
add
out
mov
lahf
js
inc
loop
xor
arpl
or
stos
mov
ja
and
test
add
lds
sub
ror
int
xchg
fidivs
repz
cltd
pop
add
test
mov
add
mov
lahf
xor
test
rcl
or
mov
sbb
lds
add
lods
ljmp
lods
shll
nop
cld
push
or
scas
xor
fwait
minps
inc
inc
dec
add
xor
les
ljmp
fisubrl
xchg
mov
loop
mov
xchg
and
test
loope
lret
jmp
push
lcall
iret
adc
pop
popa
push
rcl
push
xor
mov
push
test
sti
dec
pushf
and
fptan
sti
repnz
inc
push
xor
or
adc
in
sbb
dec
outsb
push
out
lret
or
xor
dec
xor
mov
add
das
xor
xchg
mov
in
and
fcompl
inc
popa
mov
jne
fstpl
inc
mov
push
inc
pop
inc
xor
or
and
out
aaa
ljmp
lret
inc
test
sti
mov
cltd
aas
mov
dec
jmp
xchg
cmc
js
fists
dec
jnp
dec
lods
sbb
rclb
mov
je
test
div
ss
dec
test
sbb
xchg
pushf
dec
jnp
stos
add
ja
adc
xor
out
push
xor
xchg
std
arpl
mov
movsb
mov
xchg
cli
push
andb
xchg
push
sbb
ljmp
add
and
push
sub
mov
xchg
xor
or
pop
sbb
mov
sbb
and
mov
add
divl
adc
xor
cwtl
aad
lods
stos
dec
outsb
mov
lret
mov
push
sbb
pop
popa
sbb
out
das
mov
xchg
je
cwtl
push
fisubs
pop
fcomps
lret
sbbb
inc
mov
ljmp
sub
jbe
out
int
cmp
pop
push
jns
pusha
xchg
sbb
cmpsl
sbb
push
and
inc
jl
cmp
and
ret
fdivrs
dec
aas
sbb
dec
mov
divl
aam
cmp
stos
cmp
push
jo
ret
in
jg
cmp
outsl
cli
pop
mov
mov
jle
fstl
stos
xchg
adc
mov
aas
dec
dec
sbb
das
not
cs
push
cs
clc
xor
add
sti
fidivs
lea
fst
cmpl
mov
inc
es
test
jae
jl
cmp
testl
or
ss
popf
mov
movsl
or
adc
add
add
jns
xchg
push
push
cmpsb
and
inc
xchg
jge
rorl
std
mov
mov
pop
outsb
mov
sub
lahf
add
jnp
and
dec
and
mov
inc
or
leave
sub
sbb
cmpsl
xchg
ljmp
or
and
mov
lock
adc
pushf
das
xlat
loope
dec
lahf
v4fnmaddps
loop
lods
stos
in
cli
js
cwtl
adc
cli
out
and
dec
mov
push
or
mov
jp
repnz
or
xor
dec
xor
stos
dec
inc
test
hlt
sbb
adc
shl
loopne
xlat
inc
adc
jnp
xor
sarb
jge
dec
jb
cmp
cltd
sbb
rcrb
xchg
test
scas
push
out
in
sbb
cs
int3
mov
enter
lret
insb
add
xchg
repz
out
push
ja
or
jbe
add
pop
sbb
jno
jbe
call
inc
jl
lret
or
enter
dec
das
jge
repnz
lret
xor
insl
jmp
imull
xlat
sub
adc
sahf
cld
xor
dec
roll
mov
and
add
iret
cwtl
stc
push
xor
addr16
xchg
mov
mov
ss
pop
testb
nop
testl
sub
push
add
pop
sub
in
mov
xor
fisttps
dec
cld
inc
push
fisubs
ja
inc
subl
repnz
cltd
and
movsb
mov
jl
repz
mov
mov
data16
mov
and
or
pop
mov
or
sti
ja
xor
roll
lcall
jge
xor
loopne
mov
sbb
sbb
ja
cld
pop
outsb
std
mov
push
push
outsl
pop
xchg
add
mov
xor
pop
pop
es
stos
rol
add
pop
adc
xor
scas
push
adc
and
pop
sub
fdivrl
sti
xchg
jge
cmp
cmpsb
xor
mov
lcall
jo
dec
or
scas
roll
data16
and
mov
in
xchg
and
cmp
sub
adc
into
outsl
cmp
fsubrs
mov
and
or
pop
mov
xor
push
out
cli
sahf
mov
mov
adc
sub
les
mov
add
cs
xlat
mov
dec
les
mov
lods
dec
cmc
or
add
push
arpl
pop
or
cmc
push
adc
test
mov
enter
fldt
popf
push
stc
jg
shlb
outsb
mov
add
outsb
lcall
add
or
rcrl
mov
fucomi
in
sub
outsl
mov
enter
outsb
cmp
push
adc
lcall
je
loop
rcr
loope
adcb
jno
enter
movsb
ljmp
cmp
sub
push
mov
sub
lahf
pop
mov
orl
mov
pop
int3
jbe
adc
scas
notl
lret
pop
arpl
mov
repz
push
in
pop
xor
sbb
fmull
call
aaa
pop
inc
cmp
and
mov
cmp
pop
repnz
out
jecxz
cmp
ret
push
sbb
jge
jmp
stos
cwtl
adc
cwtl
test
roll
addr16
or
mov
pop
insl
dec
cmpsl
add
dec
sbb
mov
andb
gs
add
mov
add
dec
insb
add
jmp
in
lea
enter
fidivrl
mov
add
arpl
jbe
mov
push
lret
out
stc
fldt
xchg
sub
loopne
cmp
adc
shl
and
pop
sbb
enter
int3
jb
sbb
popl
fnsave
jecxz
add
stc
dec
or
popf
and
jge
cmp
xchg
jmp
inc
popf
js
in
add
jle
dec
or
pop
mov
iret
gs
jmp
jmp
lds
daa
repz
jp
mov
orb
rolb
mov
out
mov
pop
inc
sbb
mov
ficompl
xor
jo
and
fistps
add
mov
roll
sub
nop
in
arpl
rcrl
cld
aas
scas
test
or
add
mov
stos
mov
int
mov
shr
jge
xlat
ja
push
movsb
pop
inc
jns
cltd
sbb
push
xchg
dec
jecxz
cmp
int3
bndldx
cmp
xchg
push
inc
pop
loopne
pop
push
sbb
sub
lahf
mov
fwait
lret
push
and
cmp
xlat
enter
cmpsl
dec
xlat
fsub
dec
xchg
cmp
cld
cmc
out
addr16
outsb
jns
mov
adc
test
xor
inc
pop
sub
outsl
sarb
mov
xor
pop
addb
pop
push
pop
xchg
imul
jl
jb
adc
sub
pop
sub
adc
xchg
out
xor
cmp
shlb
push
adc
iret
mov
mov
fistpl
mov
jmp
xor
jl
int
lods
inc
xchg
or
adc
mov
push
lret
stc
push
xlat
addr16
mov
jecxz
out
mov
mov
test
repnz
push
jg
push
scas
fs
movsb
mov
xor
adc
shlb
inc
divl
in
mov
aas
mov
mov
mov
inc
mov
aam
call
lea
movsl
fdivrl
push
sub
jge
pop
lcall
cmpsl
cmp
clc
loope
push
xchg
and
mov
idivl
repz
jno
pop
xor
fcmovnb
stos
sub
pushf
mov
add
js,pt
push
imul
cmp
pop
dec
pop
fxch
fimuls
aam
cmp
sbb
jle
xchg
addr16
int
aad
add
jbe
xchg
mov
xchg
mov
sbb
mov
fcoml
mov
inc
rcrb
arpl
test
gs
xchg
iret
ljmp
jne
aas
in
push
add
fsubrl
xlat
loopne
fidivrl
mov
push
or
xor
pop
jo
test
pop
sub
lahf
mov
push
addl
push
dec
push
mov
mov
xchg
mov
inc
adc
leave
rol
jbe
scas
icebp
out
out
adc
mov
out
rclb
xchg
dec
stos
xor
fisubrl
push
dec
dec
mov
mov
inc
push
popa
mov
and
outsb
lods
mov
rorb
push
xchg
test
stos
pop
es
push
lret
in
repz
mov
divl
mov
mov
mov
adc
imul
sti
sub
popf
push
pop
cs
loope
xchg
dec
scas
xchg
jo
repz
fnstenv
sti
or
and
xchg
push
insl
mov
fsubrl
rolb
cwtl
dec
xchg
inc
inc
mull
icebp
aas
and
adc
js
call
sub
and
cmp
cmpsb
sbb
mov
push
xor
or
jbe
pop
push
jns
mov
sbb
cli
or
les
jns
inc
gs
stc
sub
aad
and
cmpsb
mov
data16
mov
pushf
sub
cs
into
adc
and
fcompl
iret
sbb
xchg
das
xor
mov
lock
inc
jne
cmpsb
pop
fs
cmc
mov
popf
mov
xchg
inc
ljmp
negl
or
inc
cltd
dec
adc
lds
fldcw
xor
negl
jb
leave
shlb
repz
push
aam
xor
orl
popa
sbb
xor
lcall
mov
mov
loopne
xchg
xlat
xchg
pop
rcr
add
sahf
cmpsb
sub
fildl
xor
xor
fs
jle
mov
or
testb
in
mov
add
daa
mov
jecxz
pop
loopne,pt
in
xor
or
xor
push
out
mov
dec
lods
adc
mov
sbb
addr16
subb
sub
fisttps
jne
adc
movsb
scas
ficoml
sub
daa
mov
jl
movsb
push
testl
cmp
repz
mov
cmp
std
mov
cmp
loop
dec
bound
adc
into
and
outsb
dec
aam
sti
cltd
push
hlt
inc
leave
xchg
fwait
out
insb
jns
cmp
cmp
dec
cmp
daa
repz
rcll
fidivrs
pop
mov
clc
xor
inc
cli
push
push
lods
mov
out
mov
inc
insb
sub
pusha
jg
pop
int
xchg
ret
push
mov
or
std
cmp
mov
push
mull
push
cmpb
xchg
pop
mov
cltd
shr
mov
cmpsb
sbb
xor
mov
bound
jnp
out
ret
sbb
jecxz
fbstp
push
or
inc
lods
lods
inc
xchg
clc
pop
mov
cld
repz
sub
in
mov
js
js
iret
dec
add
pop
shlb
sub
mov
cmpsl
jne
mov
daa
repnz
mov
cltd
lea
mov
incb
sbb
mov
mov
test
ret
rorb
popf
clc
dec
sub
lock
js
sha1rnds4
adc
xchg
or
jbe
leave
or
ds
jl
outsb
pop
loope
mov
dec
jns
int3
mov
jo
sbb
sub
add
sub
cmp
in
xchg
rcr
test
sbb
fdivs
orb
cld
movsl
mov
or
sub
leave
icebp
and
mov
mov
insl
into
es
loopne
jo
enter
pop
cmc
movsl
ds
jb
rcr
and
icebp
hlt
mov
jns
lods
sbb
pop
sbb
enter
mov
mov
pop
fs
fcomi
pop
jnp
jb
jo
iret
in
xchg
mov
mov
lods
jp
repnz
ds
rclb
pop
sahf
xor
pop
cli
ret
jns
push
jmp
fisttps
sbb
insb
bnd
and
repnz
loope
je
inc
mov
xchg
sbb
fisubs
shl
cmp
sub
push
in
fcoms
clc
movsb
adcl
sub
in
ja
sub
mov
push
out
xchg
icebp
pop
and
dec
adc
ja
fimull
dec
mov
das
xchg
shrb
inc
mov
aas
stc
ret
popf
pop
inc
cmp
cltd
fisubl
dec
inc
insb
in
fsts
icebp
call
ljmp
loope
out
in
mov
cld
lods
adc
lock
mov
jl
dec
sub
mov
mov
or
push
call
repnz
hlt
mov
cmp
push
fisubl
mov
cmp
lcall
iret
jae
dec
or
outsl
or
push
in
sub
fimuls
fs
jmp
daa
push
inc
out
jb
push
mov
mov
mov
ja
or
divl
pop
shrb
jne
mov
dec
inc
movsl
mov
dec
pushf
dec
scas
inc
fists
roll
test
sti
daa
mov
lods
inc
cwtl
fdivs
sbb
adc
adc
push
pop
sti
mov
push
repz
mov
push
or
mov
sub
fadds
add
dec
sbb
int3
pop
rcll
cmc
sub
sbb
and
inc
addr16
fucomip
pusha
push
jmp
test
push
inc
xchg
aas
xor
movsl
mov
dec
add
adc
jle
mov
push
sti
adc
out
xchg
dec
ds
bound
push
jle
cmp
mov
mov
cmp
pop
fisubrl
fs
aaa
scas
jno
mov
fwait
and
push
mov
scas
aam
in
pop
xor
xchg
cmp
xor
rcrb
movsb
xchg
push
mov
fsubrl
enter
imul
push
mov
mov
test
mov
add
sahf
imul
pop
sub
shrl
xchg
dec
sub
cld
dec
or
jo
jns
pop
jnp
dec
xor
lret
divl
inc
xor
adc
mov
xchg
das
adc
sti
or
fmull
lock
and
jb
jae
push
xchg
lock
pop
movsl
adc
scas
pop
add
sub
and
jecxz
jge
daa
or
or
in
out
push
and
sub
push
sub
pop
repz
adc
adc
and
inc
xor
lret
dec
xor
outsl
mov
push
push
rolb
mov
lret
sbb
push
add
stos
add
test
jge
in
nop
hlt
xor
push
push
scas
cmc
adc
lods
cli
arpl
aam
cmpsl
repnz
push
das
imul
inc
imul
and
dec
js
lret
dec
push
lcall
or
cltd
nop
xor
sbb
jno
pop
aad
and
nop
mov
inc
sbb
es
sub
jo
sbb
cld
int3
xchg
pop
test
data16
test
mov
pop
sub
xchg
cmpsb
cmpsl
or
pushf
jb
push
mov
subb
pop
ss
or
sub
out
sub
fnsave
push
bound
popf
adc
es
sarb
icebp
mov
arpl
imul
jae
jl
ja
xchg
pop
dec
push
outsl
idiv
jae
mov
ss
mov
xor
jle
lretw
push
gs
xchg
jle
push
gs
mov
jo
jge
xchg
pop
loope
mov
mov
mov
inc
inc
cli
jecxz
sub
add
inc
inc
or
enter
mov
jb
fsubp
enter
mov
jp
and
mov
out
dec
mov
test
mov
and
imul
push
iret
mov
aaa
jbe
push
and
inc
jb
arpl
push
or
jle
inc
lahf
sub
sub
in
adc
jmp
mov
call
sbb
sbb
js
mov
mov
lds
inc
jne
jb
cmp
aaa
sbb
xlat
bound
lcall
fcompl
lods
in
mov
es
hlt
mov
mul
jg
cli
cmp
int
xchg
adc
leave
lods
lahf
stos
sbb
and
mov
aam
sbb
pop
xchg
loope
pop
mov
jbe
mov
mov
mov
dec
rol
cmp
cli
lea
data16
cmp
push
je
fsubs
stc
dec
iret
adc
int
mov
push
unpcklps
popf
sub
sub
jns
or
xlat
shlb
sbb
out
popa
xchg
dec
je
ud2
jp
mov
sbb
add
inc
and
mov
pop
dec
popf
and
adc
sub
rorl
adc
adc
push
xchg
punpckhdq
stos
fwait
jae
bound
outsl
add
push
ret
fisttpll
insb
inc
jb
test
add
aam
dec
jl
sub
ret
mov
push
test
imul
stos
scas
dec
push
xlat
cld
lods
inc
and
aam
and
sub
push
jbe
inc
xlat
dec
or
dec
mov
in
fcmove
jmp
scas
or
popf
loope
js
unpckhps
icebp
lcall
sub
pop
dec
lahf
inc
notl
jp
pop
mov
xlat
push
adc
test
in
inc
xchg
sub
fdiv
sbb
or
pop
cmp
jnp
negl
dec
jnp
dec
xchg
pop
movsb
shlb
jmp
daa
xchg
lea
mov
cmp
xchg
out
sub
pop
xchg
cmp
xor
inc
jno
or
jns
add
mov
rcl
push
pop
shll
loopne
dec
in
or
mov
mov
cmc
add
pop
sahf
inc
aas
ret
fnstcw
push
out
es
add
mov
push
pop
movsb
cmp
adc
test
gs
push
inc
jp
push
pushf
gs
xchg
insb
sti
xchg
mov
cmp
add
push
push
dec
push
shlb
loopne
scas
push
xchg
ja
lods
xchg
dec
and
hlt
negl
loope
sub
jecxz
pushf
popa
xlat
mov
divb
stos
rcll
jns
test
es
and
mov
mov
jecxz
inc
xorb
or
jg
popa
pop
mov
test
ss
sbb
insb
dec
ret
mov
xor
cmp
push
gs
xor
sbb
lret
lahf
xor
push
push
loop
cmp
mov
cmp
ret
or
in
movsl
xor
test
sbb
add
cmp
jae
lret
rorl
or
cmp
pop
or
aaa
push
inc
add
out
and
and
mov
outsl
outsl
sub
cltd
pop
or
inc
stos
add
mov
inc
cmp
bts
jno
test
sbb
or
pop
clc
sub
mov
pop
dec
test
mov
loopne
pop
pop
sub
pop
pusha
out
je
add
mov
andl
adc
orl
mov
add
mov
cld
hlt
pop
sti
sbb
or
bnd
insl
ret
push
mov
cmp
xchg
xchg
dec
mov
cmp
mov
movsb
jae
mov
scas
xchg
daa
add
shlb
dec
out
movsl
inc
stos
sub
inc
push
out
clc
cmc
inc
dec
jns
xor
lret
movsb
dec
inc
imul
add
cmc
das
mov
pusha
lock
in
stos
pop
adc
xor
sbb
aas
cmp
add
adc
js
mov
in
cmp
pop
xchg
or
sub
fwait
imul
push
mov
test
sbb
jbe
lock
fwait
xor
lret
inc
mov
push
aam
sbb
push
mov
cmpsl
sbb
lret
or
popf
cmp
stc
push
or
inc
fwait
popa
gs
jmp
jg
dec
nop
int3
ficomps
xor
jmp
or
cmpsl
je
mov
lret
out
xor
sbb
add
adc
je
in
dec
repz
dec
gs
inc
loop
jns
jne
mov
movsl
add
repnz
xchg
imul
test
jmp
stos
jb
leave
inc
fcoml
adc
adc
cmp
ljmp
ds
pop
add
xor
push
inc
jl
notb
fwait
inc
fcompl
shlb
push
add
inc
daa
mov
jns
xchg
xor
fimuls
sub
mov
sti
sub
push
adc
out
sbb
xor
adc
jg
sbb
xchg
imul
xchg
jbe
push
xchg
sbb
xor
ja
aaa
cmp
mov
jb
add
mov
xor
or
shrb
popa
jge
lret
in
xchg
sub
adc
rorb
sbbl
push
adc
adc
add
xchg
push
enter
lea
jbe
dec
mov
imul
cld
popa
jne
gs
xor
mov
enter
movsl
add
mov
add
daa
cmp
adcb
std
lods
sub
add
lcall
push
stos
sbb
jnp
out
sbb
xchg
imul
or
add
in
cs
mov
je
and
mov
jl
sub
call
clc
adc
fsubs
xor
insl
mov
sbb
mov
sub
stos
mov
cmp
scas
xor
pusha
xchg
mov
pop
mov
es
out
inc
or
and
or
test
dec
xchg
jecxz
call
or
xorps
xchg
or
movsl
inc
int3
fsubs
in
sbb
cmp
subl
jns
lods
and
mov
test
stc
add
mov
mov
mov
outsb
push
les
insb
int3
nop
cs
xor
sub
je
and
rcrb
mov
add
cmp
out
scas
adc
or
cmp
popa
add
repnz
lods
xor
outsl
clc
xchg
jp
pop
hlt
sbb
adc
cltd
sbb
loope
in
dec
outsl
xlat
mov
popa
arpl
jnp
sbb
fwait
jb
lret
push
iret
movsl
daa
mov
mov
test
and
std
mov
ss
xchg
and
outsb
push
inc
fs
arpl
jns
lcall
cmpsl
js
loopne
enter
cld
imul
push
shrb
dec
lret
sbbb
inc
dec
jne
bound
pusha
mov
and
jne
nop
sub
and
inc
mov
xor
into
dec
hlt
cmpsb
xlat
sahf
js
sbb
jle
mov
ds
insb
ljmp
jle
sarb
jns
in
mov
and
enterw
jl
aad
push
cmpsb
into
pushl
data16
pop
test
inc
cs
pusha
or
adc
jo
sahf
sub
out
popf
imul
loop
pop
and
cld
and
xchg
mov
push
xor
loope
cli
adc
sbb
loopne
add
add
cmc
pop
or
pusha
rol
add
es
pop
push
cmpsb
mov
pop
pop
lret
add
jae
leave
sbb
mov
jp
xchg
mov
aas
pop
mov
clc
mov
insb
push
jno
sbb
call
cli
mov
into
imul
sub
pop
mov
pusha
add
mov
test
dec
sbb
test
sar
stos
mov
lods
inc
push
bound
push
fldt
out
or
cmc
adc
ss
xor
mov
out
mov
jl
inc
sahf
fistps
dec
mov
push
or
or
jne
and
mov
clc
xor
xor
xchg
mov
xor
fs
pushf
lret
dec
outsb
pop
shll
sahf
push
inc
loope
into
outsb
inc
push
rcll
fisubrs
cmpsb
aas
push
xorl
pop
popa
push
sub
loop
dec
mov
push
mov
fdivrl
popf
and
push
ljmp
jno
das
jp
cmc
ret
mov
dec
jnp
add
fsubs
xchg
xchg
lret
or
mov
icebp
repnz
mov
ret
and
inc
mov
ss
and
loope
sub
into
fstpt
out
mov
xor
adc
jmp
out
xchg
outsb
sti
inc
mov
ret
scas
or
xor
rcl
xchg
cld
es
cmp
cmp
scas
fistpll
sbb
stos
sbb
popf
and
in
out
inc
in
imull
aam
inc
jnp
fsubs
mov
scas
lods
cmp
xor
mov
mov
pop
xor
lahf
sub
roll
cmp
sbb
lcall
int3
push
jmp
cwtl
aam
cmp
cmpl
test
xor
adc
out
les
lret
add
xor
mov
sub
nopl
xchg
sti
in
xor
rclb
imul
ljmp
js
xlat
push
test
mov
add
add
mov
mov
fcos
jle
rcrb
push
inc
push
xor
leave
push
mov
dec
lods
fmul
pop
inc
cld
jne
mov
nop
dec
pop
out
fs
fwait
lret
xor
rcrl
sbb
pop
mull
jo
mov
mov
mov
lods
js
in
jmp
sbb
cmp
dec
jns
ret
xor
push
sub
lea
ficoms
lret
and
cld
dec
mov
push
xor
dec
fld
sbb
mov
pop
pusha
xor
negb
xchg
int
shrl
xor
orl
xorl
icebp
xchg
push
mov
dec
cmp
cmpl
jmp
dec
mov
lods
cs
ss
xchg
mov
scas
sub
xchg
movsl
and
pop
xchg
mov
fnstcw
jecxz
jge
sbb
sub
or
sbb
addr16
mov
test
add
jmp
sub
push
cmpsb
lock
jno
fidivrl
into
out
push
fwait
jnp
push
jo
and
imul
add
xor
push
push
enter
sbb
shlb
and
mov
popf
lret
add
out
and
lret
push
xchg
add
stos
lret
sub
xchg
xor
cmpsl
adc
inc
fildl
outsb
jg
pop
pop
jns
fwait
inc
inc
cmp
enter
pop
xor
repnz
push
inc
mov
dec
test
scas
jp
or
mov
xorl
or
leave
dec
sbb
add
push
mov
dec
orl
mov
dec
movsb
xor
inc
xor
sbbb
and
rcr
pop
pop
lret
mov
and
das
xchg
orl
mov
loope
je
aas
bound
xor
mov
sbb
mov
ret
push
xchg
lock
jmp
je
mov
adc
inc
fistpl
inc
mov
stos
dec
cmc
ret
popf
push
pop
sub
cmpsl
add
pop
xchg
ja
dec
jae
mov
push
mov
mov
ret
jp
jnp
cld
test
push
cmp
dec
mov
shrb
data16
push
sub
popa
sub
fwait
jne
ret
mov
mov
imul
fistpl
out
pop
mov
aas
dec
iret
sar
mov
lods
add
push
repnz
or
imul
mov
mov
ret
addb
or
sbb
push
aas
out
mov
mov
and
mov
mov
shlb
popf
into
push
sbb
rclb
jb
xchg
jae
popf
xor
sub
scas
hlt
add
jne
fisttps
jecxz
stc
inc
lock
scas
inc
negl
fcoml
mov
rcll
or
movsb
xchg
dec
and
jo
xor
fidivl
in
shlb
fs
call
inc
clc
and
rol
outsb
push
xchg
ret
adc
jle
sbb
in
push
adc
nop
jg
addr16
jns
ret
push
das
pop
adc
movsl
fidivs
jbe
pop
sub
and
mov
pop
inc
pop
rep
adc
xor
fcomi
or
lods
out
data16
jle
inc
dec
lcall
popf
mov
ret
jle
or
iret
ret
movsb
outsb
add
aad
mov
lock
ja
enter
xchg
jns
dec
movb
fstl
mov
dec
popf
cwtl
fwait
push
fbld
pop
test
sahf
push
imul
xor
call
out
jne
lods
or
mov
inc
mov
loope
jp
outsl
lods
add
sub
xchg
mov
push
sahf
sbb
js
mov
movsl
fidivrl
scas
cld
pop
je
pop
push
push
or
std
ss
shl
lods
popf
and
hlt
sbb
inc
dec
add
push
adc
mov
fistpll
mov
jns
mov
movl
jge
or
scas
and
inc
xor
call
push
adc
pusha
call
imul
add
int
inc
sahf
push
mov
mov
xor
or
pop
cmp
sub
ficompl
hlt
adc
movsl
movsb
and
xlat
dec
xor
addl
cmp
or
sbb
pop
mov
ds
fldenv
data16
mov
mov
or
cmpsl
or
mov
mov
adcb
and
decl
sbb
test
push
cmp
adc
xor
and
in
imul
dec
and
mov
push
test
sarb
ret
ss
mov
repz
cmp
sub
push
rorb
movsb
loope
push
iret
xchg
imul
sub
jns
jae
lock
int
je
cld
xchg
mov
or
push
dec
iret
movsl
dec
cwtl
sti
out
jg
repz
sbb
sahf
pop
and
sub
or
and
jae
and
sub
or
pop
out
loope
jnp
cs
xor
jb
mov
in
mov
cmc
cmp
push
fnsave
pop
hlt
xor
out
pop
push
push
iret
cmpsl
push
cmp
test
in
sahf
mov
sub
and
ss
imul
mov
cs
rcl
decl
xor
ss
lea
roll
sbb
outsb
xchg
mov
inc
in
cmp
fdivs
cmp
out
xchg
mov
imulb
cwtl
jmp
sbb
arpl
push
and
or
mov
aas
insl
dec
sbb
dec
jg
mov
cli
jae
mov
push
xchg
and
cmpsl
shrb
dec
pop
mov
xchg
push
pop
lds
inc
or
stos
dec
int
inc
mov
pop
push
cmp
cmpsb
jp
add
xchg
mov
xchg
dec
and
outsl
stos
cltd
in
mov
mov
push
mov
push
lock
cld
mov
outsl
xor
lahf
sub
dec
jo
xchg
aaa
cmp
ss
xchg
ret
sbb
mov
jnp
pusha
repz
pop
out
xor
jnp
adc
inc
push
stos
mov
fwait
cmp
lock
xor
shlb
sbb
adc
mov
and
jnp
cmp
sub
pop
cmp
add
inc
fnsave
mov
int3
adc
dec
mov
pop
mov
and
repnz
adc
lds
and
fisubrs
adc
mov
sbb
test
mov
and
sti
cltd
sbb
dec
lahf
gs
jp
cmp
add
mov
testb
hlt
sbb
mov
ret
pop
scas
or
idivb
popa
out
sub
inc
push
movsb
fcmovnu
in
jecxz
dec
leave
adc
adc
ficomps
sub
sub
cltd
xchg
lods
push
add
jmp
and
pusha
mov
and
cmp
pushf
sub
shlb
ret
mov
pop
loope
cs
lea
scas
cmp
inc
scas
aad
int
mov
mov
pop
cs
adc
jmp
loope
pop
jno
pop
scas
in
lret
push
sub
subb
cmpsb
adc
stc
xor
mov
pusha
push
sub
sub
fbstp
cltd
lock
xchg
shrb
mov
stos
into
mov
pusha
cmp
push
stos
nop
cmovle
lret
dec
cmp
jle
cmpsb
mov
mov
and
pop
in
les
pop
jmp
xor
jecxz
push
inc
repz
nop
sub
add
std
inc
pop
fldcw
mov
das
jmp
push
hlt
imul
mov
push
and
mov
movsl
push
or
inc
jb
cmp
mov
dec
cld
mov
push
mov
or
stos
sbb
and
xlat
je
jl
sub
lret
jg
mov
xor
mov
dec
seto
cmp
dec
jp
xchg
add
nop
sbb
lcall
sub
pop
and
bound
dec
jmp
test
int
popw
ret
jne
sar
dec
daa
lcall
pop
mov
adc
xor
lods
sub
cmpsl
decb
popa
lods
sahf
mov
movsl
fstps
les
mov
jle
xchg
xor
fmull
dec
out
les
in
jl
lods
mov
out
push
imulb
push
aam
push
scas
and
add
test
inc
xchg
ret
push
xchg
aas
test
inc
cwtl
mov
adc
insb
dec
mov
mov
ret
add
xor
in
xchg
jo
fst
scas
stc
dec
rclb
push
mov
mov
data16
jns
dec
add
scas
dec
es
fsub
jnp
sbb
mov
test
jo
pop
xchg
pop
shlb
pop
jnp
ss
pop
test
aam
rorl
mov
stos
xor
and
sub
push
repz
pop
xchg
push
into
push
mov
icebp
divb
pop
das
mov
xor
inc
or
into
cmp
or
cld
orb
sub
daa
sub
jb
js
fsubrl
adc
xlat
xchg
or
movsb
fyl2x
jg
stos
mov
test
ss
mov
insb
leave
push
cmpsb
sub
jne
shrb
mov
mov
mov
loope
shr
rolb
mov
bound
jnp
jno
in
clc
mov
add
push
jno
enter
push
mov
lret
cld
fists
sbb
loop
or
xchg
test
mov
fisubs
sahf
idiv
fs
repz
repz
jno
dec
pop
sbb
pop
mov
popa
mov
and
xchg
xchg
mov
or
mov
loopne
pop
call
mov
lods
fisttps
adc
ja
xor
xchg
cmp
sub
int3
ss
pop
mov
sub
cmp
shll
pop
push
fs
pop
aaa
pop
cmp
push
mov
rcl
je
dec
imul
gs
jp
xchg
in
push
in
mov
xchg
test
stos
mov
push
or
push
int3
sahf
sub
test
mov
scas
cli
repnz
mov
push
jg
xor
dec
adc
mov
jb
mov
inc
shll
inc
sub
inc
outsb
cmpl
and
outsb
sub
inc
push
lods
add
movsl
xchg
out
pop
jg
out
and
gs
adc
and
test
faddp
rcll
mov
addr16
aas
das
andl
test
pop
icebp
mov
aam
push
xor
jnp
jno
loope
lahf
or
icebp
cmpsb
out
leave
pop
pop
push
sti
jae
js
lret
dec
out
adc
call
rclb
rcl
mov
mov
call
push
nop
insb
mov
sub
mov
das
xchg
insb
xor
xchg
je
add
daa
arpl
cld
inc
mov
scas
or
cmpsl
call
out
into
and
sbb
add
aaa
mov
push
or
stos
loop
xor
inc
mov
pop
rorl
sbb
xorl
fldl
pop
lcall
inc
xor
xchg
jno
ds
and
mov
loopne
mov
push
xor
gs
imul
lds
shll
pop
popf
dec
addr16
xchg
xor
pusha
add
pop
jmp
roll
and
hlt
in
in
pusha
fldcw
add
pop
inc
add
dec
stos
cmp
in
mov
cwtl
mov
std
call
cmp
fcoms
iret
aam
sub
or
cmc
mov
mov
sub
pop
dec
sub
mov
ljmp
loop
int3
lret
mov
or
sub
dec
fcompl
push
mov
jbe
aam
cli
out
cltd
lock
lret
mov
xor
xchg
hlt
sub
adc
sub
dec
das
cmpsl
dec
repz
sub
insb
arpl
cld
fildl
xchg
jg
jg
and
inc
jge
inc
jmp
imull
or
dec
mov
inc
and
jecxz
lea
imul
outsb
repz
stc
sbb
push
sbb
ret
jae
cmp
xchg
add
fmuls
jns
push
sub
mov
xor
loop
icebp
cmp
adc
mov
cmp
xor
adc
dec
sub
lods
mov
out
xor
add
xor
pop
jbe
lock
jb
push
xchg
cld
lock
xorb
outsb
aas
ror
sub
stc
sbbb
fdivl
push
fndisi(8087
bt
mov
xor
leave
push
test
mov
in
xchg
ja
mov
mov
xor
jmp
imul
fmull
mov
ljmp
cltd
sub
sub
mov
pop
arpl
push
ret
cmpsl
mov
test
aad
fisubrs
and
loop
lcall
repz
add
aas
push
adc
test
add
jmp
inc
add
fdivrl
lret
test
out
cmpsb
bound
mov
frstor
mov
mov
adc
pop
inc
fsubl
pop
xor
or
in
dec
push
xor
adc
sbb
cld
jmp
adc
mov
repz
into
or
jl
std
xor
popf
inc
nop
lock
cmp
sbb
inc
dec
shlb
and
loopne
aas
sbb
rolb
xor
dec
pop
push
adc
repz
int3
inc
outsb
mov
cmp
je
fsubs
pop
pop
jp
je
mov
insl
ret
leave
push
push
xor
scas
pop
aad
notb
pop
push
in
mov
out
pop
jecxz
jle
mov
inc
in
es
ja
out
repz
pushf
cmpsb
dec
cmp
sub
xor
cltd
mov
test
mov
scas
jb
push
mov
jg
push
sub
movsl
push
or
or
cmc
insb
lods
sbb
aas
test
mov
xor
mov
pop
test
imul
jg
mov
in
les
cmpl
cmp
xchg
push
jge
add
inc
xor
push
push
push
mov
xor
mov
mov
jl
inc
aaa
js
je
lods
push
xchg
loopne
push
aad
pop
iret
mov
adc
xlat
push
les
or
stos
jbe
mov
push
jb
iret
cmp
mov
outsb
scas
subb
push
xchg
bound
js
je
nop
sbb
and
sub
or
jo
cmpsb
call
lds
in
pop
out
mov
dec
xchg
cwtl
outsb
jecxz
or
push
iret
jge
sub
sub
ljmp
hlt
pushw
leave
jmp
mov
mov
nop
mov
add
pushf
adc
jecxz
cwtl
inc
gs
in
mov
inc
mov
jne
mov
xchg
movsl
dec
pop
push
lret
fwait
pop
push
test
pusha
mov
cmpsl
inc
leave
out
les
aas
sbb
stos
push
sub
push
scas
mov
cmc
mov
add
imul
xchg
sub
aas
cmp
cld
sub
inc
or
cmpsb
adc
lahf
pop
sub
loope
aam
bound
mov
cmp
jo
test
js
dec
sbb
jnp
and
aam
dec
mov
mov
std
xchg
push
sub
lods
or
push
jne
sbb
outsb
mov
movsl
pop
dec
push
cs
mov
lret
jl
int
stos
cmc
mov
cld
mov
add
xchg
filds
es
xor
and
daa
mov
outsl
push
jno
xchg
mov
orb
cmpsl
or
jge
data16
addr16
ljmp
test
mov
pop
mov
jo
fsts
pop
jae
rcrl
jne
lock
cld
xlat
cmp
xchg
xor
push
add
mov
mov
mov
push
inc
pop
lock
sbb
jnp
and
or
mov
notb
sti
rorl
jno
xor
push
mov
scas
push
stos
or
mov
add
or
xchg
dec
dec
xor
sub
out
xchg
imul
sarl
clc
test
test
mov
test
clc
xor
mov
aad
pop
xor
ret
push
loop
pop
inc
add
fucomip
outsb
or
lds
les
stos
stc
das
repz
int
xchg
adc
roll
mov
xchg
xorl
pop
push
pop
cld
xchg
stos
sub
pop
ret
cld
ja
sbb
pop
push
push
lret
rolb
sub
inc
leave
cs
mov
pop
pop
jo
dec
jl
cmpsl
push
mov
jnp
das
mov
push
mov
insb
sub
imul
mov
push
and
cs
xchg
test
cld
sub
gs
mov
aam
scas
mov
mov
cltd
stos
jl
cmp
mov
mov
arpl
cld
decl
es
repz
xchg
ret
pop
push
sbbl
sbb
fnsave
dec
jae
sbb
xchg
jmp
cltd
mov
movsl
btrl
sahf
cli
xor
push
add
mov
pop
and
fmul
dec
jo
cwtl
ret
lret
push
pushf
mov
and
iret
sbb
dec
shlb
lahf
inc
and
jge
mov
out
jge
test
fidivrl
mov
daa
cmpsb
push
inc
sahf
int3
xor
pop
imul
mov
mov
pop
cmp
jbe
mov
pop
stc
mov
out
pop
test
sbb
leave
roll
fcomps
icebp
test
jb
dec
jge
repz
mov
jnp
jmp
xchg
sbb
cmp
mov
cmp
out
out
fildll
mov
xor
cwtl
fbstp
cld
inc
jne
xchg
fucom
mov
pop
push
lcall
pop
pushf
or
into
sbb
test
mov
popf
rclb
outsl
fcmove
sar
lea
xchg
cmp
push
xchg
push
in
inc
insb
xor
mov
pop
pushf
push
sub
ja
jbe
lcall
into
aaa
mov
push
inc
daa
addr16
and
adc
cs
cmp
sarl
jo
ljmp
leave
mov
add
mov
test
pop
dec
jno
mov
popa
in
inc
shlb
in
pop
pop
rolb
rcl
outsb
dec
int
add
mov
mov
mov
adc
dec
popf
cmp
jb
dec
inc
and
into
dec
stc
xchg
int
jns
xchg
or
xchg
inc
mov
addl
fidivs
dec
cmpsb
inc
jbe
mov
iret
mov
pop
mov
stos
sub
jl
sbb
jecxz
mov
ret
and
mov
dec
lret
pushf
popa
xor
pop
xchg
cwtl
icebp
and
xorb
inc
hlt
int3
mov
icebp
mov
cmp
xor
mov
icebp
lret
leave
jbe
hlt
xchg
mov
sub
add
add
movsl
mov
inc
jg
jno
adc
out
dec
adc
rolb
and
sbb
mov
lea
stos
push
test
fistpl
fidivs
xchg
daa
mov
ret
leave
enter
pop
outsb
ds
aaa
in
andb
rcrb
cmc
push
mov
adc
lahf
int
cmp
out
sub
outsl
scas
cmpsl
inc
add
jnp
mov
flds
add
xor
out
repnz
mov
test
scas
jae
mov
ja
sar
lahf
ret
pop
movsl
adc
mov
mov
imul
in
xchg
add
enter
adc
and
jbe
mov
and
xchg
lea
sub
sub
and
adc
ljmp
mov
mov
xchg
pop
lea
inc
push
inc
aam
in
cwtl
or
lds
ret
lods
mov
xor
andb
dec
fs
or
ljmp
push
xor
and
pop
clc
lahf
cmpsl
andl
mov
xchg
cli
fs
and
fcomip
or
cmpb
xchg
push
pop
popa
scas
outsl
mov
adc
dec
dec
inc
sub
cmp
jp
cltd
dec
sbb
dec
jb
stos
adc
je
xchg
mov
push
mov
fcomps
mov
popf
mov
inc
std
imul
push
sub
adc
xchg
std
pop
je
shl
push
std
dec
pop
push
cltd
mov
hlt
fwait
lods
jnp
jecxz
xorl
filds
imulb
sub
js
hlt
ret
mov
cmp
add
pop
test
cvtdq2ps
inc
push
stc
and
sbb
lcall
ljmp
and
pop
subb
jmp
lahf
xlat
dec
mov
and
mov
lahf
mov
sub
in
and
nop
ljmp
cltd
mov
sbb
stos
cmpsb
mov
mov
inc
push
or
js
ror
adcb
testb
jns
jl
sbb
lds
jb
pop
sub
hlt
out
cwtl
xchg
mov
mov
movsl
out
jbe
dec
cmp
add
call
sub
aad
push
and
int
subl
nop
cmpb
push
addr16
xor
fwait
xchg
push
xchg
dec
or
mov
mov
daa
sub
jno
adc
pop
pop
cwtl
jb
test
mov
xchg
scas
mov
fsincos
xchg
imul
dec
dec
push
fadds
enter
icebp
push
mov
cmp
xchg
clc
mov
lcall
jecxz
testb
ljmp
shll
das
rcrb
inc
inc
add
bound
and
push
stos
sarb
cwtl
inc
xor
jg
dec
and
loopne
sub
loopne
add
mov
rcrb
xor
movsl
jecxz
pop
rcrb
in
dec
addr16
out
and
sbb
xor
lret
dec
sahf
iret
jae
repz
enter
adc
loop
xor
jo
mov
jle
mov
sbb
push
dec
popa
repz
xchg
hlt
push
je
inc
push
xlat
arpl
inc
pop
test
dec
dec
fistpl
jo
dec
icebp
loop
mov
or
pop
lahf
sub
jae
jecxz
sub
imul
or
or
pop
mov
and
adc
jl
fdivrs
ja
aam
ds
roll
lret
xchg
mov
pop
sbb
fs
and
iret
mov
jp
xor
sub
sub
test
mov
cmp
cmp
cmpb
call
xchg
mov
iret
repz
in
andl
push
jb
xchg
mov
or
dec
repz
sub
outsl
orb
xor
or
inc
ja
sbb
cmp
mov
dec
les
ds
lret
les
dec
pusha
test
int3
xchg
arpl
mov
imul
mov
arpl
mov
jno
sar
filds
and
dec
dec
or
cmp
push
xor
decl
test
repz
bt
jmp
jg
jge
je
xchg
pusha
sahf
cmpl
jb
nop
imull
dec
jmp
jmp
gs
ret
loope
cmp
jnp
fcomi
dec
mov
jns
gs
mov
sub
adc
mul
sub
mov
inc
cmp
movb
jecxz
xor
popf
adc
or
sbb
push
pop
les
xchg
shr
mov
insb
sti
xor
xor
xchg
sub
or
and
jnp
xor
cmp
insb
xchg
cs
insb
or
aaa
push
out
mov
scas
adc
mov
mov
add
stc
sbb
xlat
stc
xchg
xor
jo
mov
and
leave
call
jns
adc
ds
jne
fst
cli
jmp
dec
sbb
mov
jecxz
dec
sbb
xchg
loop
clc
dec
adc
cmpb
add
sbb
push
loop
imul
pop
xchg
addr16
jmp
mov
xchg
jmp
pop
je
push
cld
jge
fdiv
mov
sub
out
sbb
push
scas
mov
adc
xor
pusha
xchg
push
sub
mov
imulb
xor
rcll
dec
jnp
adc
or
push
jne
cmp
pop
loop
cmc
shll
sbb
pushf
in
shlb
call
mov
ret
push
mov
xor
adc
mov
or
mov
jae,pn
repnz
outsb
stos
add
cmp
jmp
stc
sub
pusha
call
mov
pushf
xchg
lea
mov
movsbw
rep
bswap
mov
movsbl
xchg
lods
add
bswap
sar
bt
add
not
rol
call
jne
loop
je
cli
adc
sub
loop
add
mov
leave
insl
jl
mov
inc
adc
and
outsl
out
movsl
adc
in
hlt
fsubs
pop
je
jbe
out
into
std
pushl
mov
add
and
sub
xlat
ret
icebp
pop
adc
mov
mov
cmp
movsl
jns
sarb
pop
xor
add
adcl
fdivr
dec
loope
je
and
lock
xor
jnp
mov
or
cmpb
cmpsb
call
inc
pop
clc
loopne
cmp
ja
adc
filds
insl
ficomps
shll
or
or
lahf
mov
leave
sbb
and
push
cld
notl
sbb
adcb
mov
push
inc
jg
xor
out
outsl
repz
in
mov
andb
clc
das
pop
dec
in
push
xchg
lods
vpmaxsw
fdivrs
out
mov
push
cmp
outsl
cmp
sub
or
pop
xchg
pushf
pop
push
xchg
dec
cmp
sarl
loop
andl
fidivl
test
jnp,pt
in
add
rcll
shll
iret
and
lods
jecxz
aad
jnp
stos
cmp
mov
pusha
cmp
mov
pop
in
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
call
clc
pop
ret
pushf
jmp
push
call
mul
pop
in
mov
jb
jne
add
jnp
jl
add
push
mov
cmp
fdivrl
xchg
scas
push
imul
sub
divl
cmp
incb
sete
xor
movsb
mov
lea
jnp
sarl
sahf
xchg
in
ds
loopne
cli
leave
lret
out
ds
push
mov
into
sub
enter
cmc
and
pusha
mov
es
nop
imul
push
push
lcall
repnz
scas
es
lock
jbe
push
dec
mov
lret
cmp
jns
add
vandpd
push
imul
nop
or
jmp
jmp
js
jmp
out
dec
lock
inc
cwtl
mov
scas
rol
rcrb
or
addr16
jnp
ss
test
push
sbb
daa
lcall
insl
rcll
and
xchg
jo
adc
sbb
shlb
insl
sahf
mov
jnp
faddl
jg
mov
mov
lret
outsb
mov
adc
dec
gs
push
in
daa
push
outsb
sub
pop
stos
in
or
popa
push
xchg
ljmp
jg
mov
ljmp
leave
subl
mov
cltd
mov
pusha
jae
and
dec
push
shlb
xor
dec
pusha
cld
jmp
pushf
lea
jne
bswap
xor
aas
neg
bsr
mov
push
jmp
lea
jne
bt
bsr
mov
jmp
jmp
push
movl
adc
pusha
lea
jae
bsr
daa
bswap
lea
pop
bts
xor
pop
shr
mov
shld
aam
rcr
cmp
lea
push
mov
movw
lea
jb
neg
and
cwtl
cmp
bswap
mov
lahf
movzbw
mov
call
cmc
mov
stc
cmp
pushf
lea
jae
pushf
sub
lahf
lea
pushf
pushf
lea
call
neg
ror
or
add
rol
or
pop
adc
push
mov
mov
bt
cmp
movw
push
call
call
adc
push
lea
jae
rcl
jmp
clc
mov
clc
je
loop
cli
fwait
xor
test
xchg
push
lock
loope
pop
and
outsl
xchg
or
dec
scas
push
bound
ficoms
xchg
pop
xchg
push
mov
push
rclb
inc
cld
repz
mov
shl
push
sub
outsb
rcrb
or
test
adc
xlat
inc
cmp
test
cmpsb
leave
out
bound
xchg
out
outsl
xchg
movl
imul
shr
add
jno
and
dec
xlat
mov
xchg
pop
cmp
loopne
call
lea
call
jmp
lea
jne
rol
sbb
ror
bsr
mov
sbb
rcr
rcl
stc
sub
jmp
movzbw
lea
call
pushf
bt
imul
test
call
xchg
bswap
pushf
setge
not
pushl
popl
lea
mov
not
movl
cwtl
lea
jmp
das
add
stc
je
dec
dec
outsb
xchg
cs
mov
pop
out
daa
mov
rorb
pop
dec
std
ljmp
sbb
leave
cmovne
sahf
pop
or
popa
pop
add
push
aas
lea
outsb
or
mov
mov
ja
mov
sarl
add
scas
loopne
inc
loope
stos
negl
and
sbb
push
push
sbb
mov
divb
pop
data16
movsl
sub
bound
xchg
cmp
push
outsb
pop
pushl
andl
cmp
add
outsl
mov
push
xorb
pop
pop
pusha
jl
popf
enter
rclb
rclb
or
and
aas
cmpl
int
ljmp
data16
aad
sbb
sti
outsb
rclb
jns
mov
dec
lcall
mov
insb
cli
xchg
daa
inc
pop
jae
movsb
mov
es
jb
test
pushf
sahf
pusha
or
push
push
jmp
lea
je
clc
bsf
add
jmp
call
outsl
mov
cltd
lahf
push
ret
sti
adc
movsl
mov
push
push
cmp
dec
xor
pop
lock
loope
mov
mov
jecxz
mov
xchg
pop
nop
xchg
cld
out
sbb
in
mov
xchg
in
jno,pt
sbb
lods
test
test
xchg
add
test
daa
sbb
dec
xor
fcomps
xor
and
cmpsb
loopne
rcl
and
xor
and
sbb
pop
sbb
jmp
out
jl
inc
push
test
jmp
add
in
pushl
sub
out
movsl
xor
lods
loop
jne
in
push
cld
loop
scas
scas
das
aas
mov
insl
iret
or
out
add
jg
cmp
xor
jg
jbe
lea
push
push
rolb
fldt
movsb
fildll
push
add
je
xchg
ds
xor
das
in
ja
adc
sbb
mov
adc
sbb
cmp
in
pop
xchg
in
xchg
movsl
inc
fnsave
sbb
les
leave
popf
sbb
fisubrl
shlb
mov
xchg
mov
mov
lahf
or
ljmp
cli
mov
lss
or
cld
ds
push
xor
pop
and
or
enter
adc
jmp
mov
hlt
inc
mull
jno
mov
xor
fs
lahf
mov
ljmp
xor
decb
adc
add
mov
ss
fs
call
clc
mov
bt
cmc
pusha
pusha
cmp
movb
call
xor
mov
imul
mov
mov
mov
shrl
or
in
outsl
inc
or
push
mov
ljmp
imul
bound
incb
inc
ds
sub
sbb
gs
push
jns
movsb
add
imul
or
jae
loope
pop
xchg
scas
inc
jp
ret
add
movsb
sub
push
out
fs
outsb
xchg
rcl
shr
bsr
cmp
not
mov
bt
add
lea
mov
pusha
pusha
mov
jmp
test
mov
iret
icebp
adc
ljmp
mov
cmpl
add
pop
jo
jne
imul
dec
cmp
mov
out
testl
aaa
pushw
int3
mov
std
xor
sub
mov
mov
inc
xorb
sbb
aas
or
jne
sahf
xor
je
popf
mov
pushf
pop
mov
mov
shlb
mov
je
ds
add
xchg
xor
push
out
jns
aam
shl
xchg
jns
testl
ja
xlat
and
jmp
sub
and
or
add
fbld
inc
lods
aas
sbb
divb
inc
or
lock
rclb
cli
xor
hlt
pop
aas
lea
lods
je
dec
popa
jecxz
and
sbb
push
pusha
stc
jle
fmulp
cmc
test
pushl
popl
pushf
pushl
pushl
ret
movb
lea
je
or
add
inc
mov
cmp
add
push
mov
rcr
call
pushf
pushl
lods
pushf
add
pusha
rol
clc
sub
pushf
pushf
clc
cmc
neg
clc
cmc
pushf
shl
movb
bt
test
add
cmc
call
dec
into
push
repz
xchg
mov
out
rorl
insl
mov
les
or
icebp
addr16
ss
repnz
lret
in
sbbb
add
cmp
pushl
jecxz
cmp
in
cmpl
pop
out
or
sbb
loope
adc
das
add
test
inc
sbb
and
mov
mov
cmp
rcrl
mov
mov
push
xchg
lret
or
scas
fnstenv
sahf
mov
lret
pop
sti
adc
ret
mov
je
sbb
cs
mov
or
inc
test
dec
popa
sti
dec
jl
shll
popa
pusha
out
and
outsl
xchg
jb
arpl
mov
paddusb
push
mul
repz
dec
sub
aas
inc
xor
xchg
jbe
xlat
fists
add
call
in
xor
pop
add
pop
sub
je
movsl
push
dec
std
jne
les
mov
dec
mov
popl
cmc
push
aas
cli
mov
mov
pop
js
lahf
mov
shlb
pop
test
out
pop
adc
pop
call
movsb
cmp
xlat
lock
idiv
sbb
notb
stc
cs
dec
jo
mov
popa
add
ja
and
ror
xor
cmpl
jmp
xor
loopne
jle
lret
rol
imul
nop
push
mov
outsb
lds
sub
insl
xchg
or
decb
fdivrs
inc
stc
in
adcb
in
lods
inc
pop
je
and
and
or
pop
call
jo
cli
lcall
sub
lods
sub
scas
shrb
mov
xchg
mov
mov
fdivl
stos
aas
push
jecxz
cmpsb
shr
or
xor
test
shll
xor
aaa
hlt
insl
mov
fimuls
and
and
or
stc
hlt
sbb
adc
or
jecxz
maskmovq
notl
pushf
call
pop
je
sbb
jmp
pop
inc
jg
mov
lea
jns
pushf
lea
jne
not
push
pop
pushf
mov
pop
mov
jmp
test
pusha
lea
je
pusha
pusha
xadd
bsf
mov
clc
add
pushl
mov
bt
test
pushf
jmp
mov
push
push
push
lea
jmp
movzbw
bts
bts
mov
cmp
xor
bt
pushf
repnz
pushf
lea
jne
xchg
dec
and
clc
mov
bsr
and
sub
stc
shld
sub
cmp
mov
stc
bt
sub
pushf
clc
pushl
popl
clc
cmc
clc
cmp
jmp
pusha
pushf
adc
call
cmp
divb
rolb
in
add
mov
aam
in
out
sahf
movsl
movb
xchg
leave
dec
mov
or
imul
repnz
insl
insb
mov
add
dec
mov
data16
push
jb
cld
inc
mov
jbe
test
testb
jl
sahf
push
sub
popf
or
scas
das
jl
or
gs
push
idivl
dec
loopne
adc
cmp
gs
xchg
test
movsl
aad
sbb
pusha
movl
mov
lea
jmp
pop
pop
shl
je
cmc
add
xchg
mov
xor
popa
cwtl
mov
jns
call
mov
lods
ja
sub
fs
jns
imul
sbb
mov
call
push
xchg
shr
pop
sub
jnp
cmp
pop
inc
lahf
roll
stos
divb
ss
inc
jae
pusha
cwtl
add
shr
stc
xchg
mov
pop
je
and
into
jecxz
or
rorb
stos
shll
mov
jmp
nop
loop
divl
and
xchg
cmp
out
push
push
cmc
xor
data16
lods
jns
dec
lds
ret
sub
imull
or
cs
enter
mov
cli
lods
mov
jnp
aaa
pop
daa
stc
fld
mov
or
pop
cmpsb
ljmp
es
mov
mov
mov
cmpsl
test
xorb
inc
int
add
xorl
stc
xchg
mov
push
jmp
stos
popl
jns
outsl
fwait
mov
test
stos
mov
ja
pop
loopne
push
or
mov
cmp
sub
xchg
and
shll
std
repnz
dec
std
ret
dec
arpl
subl
mov
mov
or
inc
scas
fs
movsb
das
je
jnp
jmp
inc
gs
cmp
inc
xchg
ja
mov
push
push
stos
rcl
jge
lods
scas
aad
sbb
and
mov
mov
pop
lret
xchg
adc
pop
fs
fwait
addb
push
mov
insb
imull
jne
sub
mov
popf
leave
and
addr16
cmp
push
sub
test
jl
xor
jno
aaa
out
clc
xor
lcall
sub
push
lock
lods
nop
mov
sahf
add
testl
add
cmp
push
jno
xor
dec
bound
int
lock
fdiv
pop
lds
or
ljmp
xor
dec
mov
out
std
sub
out
int
int
mov
push
fimuls
mov
in
iret
imul
sub
cmp
inc
sbb
rorl
adc
cwtl
das
dec
mov
sub
mov
call
mov
mov
pushf
pushf
pushf
mov
bswap
pop
pusha
pushl
ret
mov
push
cmc
je
push
mov
mov
add
lcall
ds
add
loopne,pn
adc
ljmp
arpl
dec
push
sbb
dec
cs
mov
idivl
je
jle
pop
mov
sub
sub
fnstsw
sub
nop
test
jb
mov
and
not
pushf
mov
pushf
call
call
adc
shl
je
cmc
ret
inc
inc
sbbl
pop
jbe
mov
xor
je
push
cs
mov
xlat
jo
scas
xchg
mov
xchg
xchg
inc
stos
mov
jo
icebp
in
and
je
scas
push
mov
xchg
sbb
adc
mov
xchg
xor
mov
and
jo
and
cmp
xchg
ret
xor
mov
pushw
pop
stos
fstpt
sbb
push
sub
das
orb
jg
and
cwtl
rcl
lret
stc
add
sbb
into
insb
push
or
adc
leave
sub
imul
push
mov
scas
in
push
lcall
aaa
les
adc
sub
xchg
out
aad
inc
push
jecxz
out
cmc
test
jecxz
jo
stos
sbb
arpl
cmpsb
cwtl
push
sarl
cmpsb
decb
add
inc
mov
mov
xchg
and
in
adc
xchg
mov
jmp
lahf
and
je
mov
shrb
mov
ret
pop
jnp
and
pop
push
cld
add
mov
push
jmp
stc
mov
pushf
incl
ljmp
push
call
lret
mov
mov
outsl
faddl
mov
into
jge
xchg
push
jge
adc
xorl
pop
jb
popf
cmp
js
daa
cmp
arpl
add
cmp
out
leave
mov
mov
jmp
test
adc
sbb
ljmp
and
outsb
fidivrl
mov
outsl
add
js
push
inc
ds
dec
lods
movsl
cmpsb
lods
testl
xchg
popf
xchg
fwait
jo
repz
dec
xorl
pop
push
imulb
sbb
cmp
gs
push
loopne
sbb
pop
movsb
mov
add
adc
cmpsl
icebp
and
xor
jmp
cmp
push
imul
sub
jno
and
js
in
fstp
stc
aad
xor
rol
sub
pop
ret
cmp
enter
arpl
push
bnd
lahf
int3
shl
cli
pusha
push
daa
cs
jecxz
dec
sub
sbb
adc
pop
cmp
add
sarb
xor
daa
and
cltd
push
bound
jl
sbb
xor
aad
sbb
or
jl,pn
lahf
decb
outsb
fs
jmp
or
xchg
loope
cmp
out
insb
push
pop
stc
pop
sbb
xchg
xchg
xor
mov
or
or
or
movsl
ss
sub
dec
shr
dec
jmp
sbb
shr
push
sub
fnstcw
gs
jp
dec
fldcw
cmp
orb
push
inc
cmp
mov
and
sub
xor
pushf
pusha
pushl
ret
sbb
mov
jns
iret
jmp
std
test
push
ss
jns
xor
or
add
cs
adc
jns
cmp
or
arpl
jno
dec
ret
xchg
dec
or
fdiv
shlb
loopne
les
movlhps
arpl
shll
in
xchg
rcrb
cmp
test
xchg
sarl
stc
jle
nop
jp
rorb
loope
stc
inc
add
into
popa
stc
or
xor
lea
push
movsb
aaa
or
or
xor
cmp
add
pusha
movb
add
call
pop
push
pusha
mov
jmp
movl
pushf
movl
push
lea
jmp
lea
jb
pusha
jmp
movb
adc
movb
jmp
cmp
pushl
popl
cmc
test
call
jmp
pusha
mov
push
push
lea
jb
inc
rcl
movsbl
bsr
mov
bt
cmc
clc
clc
sub
setbe
mov
pusha
call
jmp
jno
outsl
into
je
lahf
cmpsl
inc
loop
sahf
mov
lods
xchg
aam
ja
dec
int3
fwait
mov
fucomp
dec
mov
fwait
rcr
pop
pushf
jae
sti
xor
sub
test
sbb
cmp
add
jp
out
scas
or
pop
xchg
add
xor
bound
jp
pop
cmp
mov
out
out
xchg
mov
sbb
sbb
outsb
in
pop
stos
inc
fildll
and
sbb
adc
pushl
out
xor
je
lods
mov
insl
push
push
or
inc
data16
sbb
lds
adc
mov
testl
ja
add
push
loopne
jae
pusha
inc
xor
jns
test
sub
inc
pusha
scas
adc
rolb
xor
les
xor
push
xor
inc
jp
sub
push
imull
sub
pop
xchg
sbbb
stos
mov
pop
add
sub
xlat
jo
sahf
sub
pop
jne
add
mov
nop
and
je
call
popa
leave
add
movsl
rcr
push
xor
pop
test
or
in
ja
lock
and
sub
mov
and
inc
lods
or
dec
push
fcmovbe
jns
sub
int3
int
stc
test
mov
mov
pop
aam
nop
aam
push
and
pushf
sub
jne
cmpsl
rcll
adc
scas
xchg
aaa
dec
pop
test
pushf
pusha
jmp
lea
call
stc
cmc
push
movb
add
cmc
stc
clc
cmpl
call
stos
movb
lea
jmp
lea
jb
lea
mov
sbb
shr
mov
pushf
pusha
shl
pushf
lea
pushf
call
test
mov
adc
scas
lret
sub
movsl
xor
cmp
xchg
test
add
aam
inc
fldl
gs
cmp
cmp
xchg
push
nop
das
cltd
mov
jge
dec
sbb
sbb
push
push
in
jnp
push
fwait
scas
jmp
mov
cmp
stos
shrl
push
rorb
dec
gs
ret
and
cmp
mov
jb
into
or
jo
add
fsubs
mov
xor
popa
ss
fpatan
enter
iret
sarl
xchg
sarl
es
insb
outsl
pop
cmpsl
stos
leave
lock
fidivrs
adc
cltd
jne
jmp
xchg
int3
cwtl
not
mov
cmp
jbe
sub
lock
daa
pop
push
sub
fdivr
or
sbb
imul
fs
jmp
mov
imul
cmc
test
cmc
add
push
mov
mov
pusha
lea
jmp
bt
sub
pusha
pushf
call
xchg
cmpl
test
les
popa
pop
mov
pop
insb
rclb
scas
sub
pop
xchg
add
inc
pop
les
loope
rolb
xchg
popf
out
test
push
lcall
mov
dec
bound
shlb
mov
lret
jmp
mov
popf
xor
fnstenv
pop
add
jmp
pop
pushf
pushf
call
cmp
scas
jnp
mov
cs
in
sub
xlat
push
mov
repnz
imul
mov
js
addr16
rorb
in
mov
xchg
jecxz
push
sahf
sub
aaa
xchg
iret
imul
fwait
mov
in
adc
ds
push
mov
ror
jmp
xchg
out
ret
dec
imul
pop
cld
pop
xchg
mov
idiv
cwtl
xchg
inc
test
icebp
shll
stos
shll
and
shll
inc
and
fnstenv
push
or
loope
xchg
jo
mov
cmp
or
lock
test
cmp
xchg
mov
cmpb
mov
in
je
leave
icebp
pop
push
in
lock
sbb
ret
push
jno
sbb
inc
popa
lock
and
in
hlt
xchg
adc
mov
lea
call
pusha
pushl
pushf
mov
test
mov
pusha
cmc
cmc
test
cmp
mov
lea
jb
shld
btr
shr
shld
mov
pusha
mov
bt
shl
mov
jmp
xchg
insl
ret
je
jns
jl
sbb
in
mov
pop
sub
adc
xlat
sub
jo
sub
dec
xchg
lock
adc
mov
out
das
xor
pop
aas
inc
pusha
xchg
fwait
popf
cmpsl
mov
mov
sub
mov
ljmp
or
add
mov
ror
testl
add
mov
pop
loope
rolb
xchg
mov
lea
call
rol
jnp
je
arpl
je
xchg
jns
push
in
or
mov
dec
lods
std
or
lds
das
push
jo
mov
xchg
dec
leavew
add
ds
shlb
xorb
xor
push
pinsrw
pop
mov
mov
jne
lcall
pop
pop
mov
out
inc
sarb
or
xor
std
jno
cli
push
daa
mov
out
xchg
das
inc
xlat
imul
sub
mov
repnz
and
fcomip
inc
pushf
jmp
movb
pushf
call
stos
mov
je
push
popa
inc
inc
jl
rcll
jns
lret
cld
mov
pop
or
and
nop
pushl
xchg
leave
bound
or
inc
adc
jmp
call
jl
ljmp
adc
sub
fdivs
fsubrs
add
bound
cli
fcoms
int
mov
test
push
addr16
xor
pop
icebp
nop
test
in
jg
inc
and
mov
int3
sub
fcmovu
add
call
ja
cmp
push
add
pop
pop
js
subb
xchg
loop
fidivrs
cmc
sarl
movsl
test
enter
and
lcall
outsl
mov
jne
arpl
negb
test
jmp
iret
out
pop
push
sub
mov
push
xor
insb
lock
lea
je
jmp
cmp
mov
call
mov
inc
pusha
pushf
pushf
inc
pushf
mov
lea
jmp
movb
call
movl
pusha
mov
push
lea
jmp
loop
shll
pusha
test
cmp
jecxz
mov
dec
or
lret
lods
stos
out
ja
jecxz,pn
mov
jo
dec
jae
xchg
mov
in
stos
rclb
push
pop
adc
cmp
inc
push
arpl
fnstenv
imul
clc
push
mov
mov
lahf
push
cmpsl
adc
adc
jo
fldenv
xchg
into
pop
mov
sub
push
mov
and
and
das
push
sub
je
fucom
add
mov
ss
cmp
and
or
daa
sub
jb
loope
pop
shrl
adc
dec
jnp
mov
jmp
cmp
push
jp
add
xchg
jno
movsb
data16
std
push
orl
and
mov
psubq
fmull
cmpsl
and
in
jns
pushf
jge
rorl
jns
cmpsl
and
mov
and
das
dec
pop
je
lcall
mov
sbb
in
ja
or
je
jge
pop
inc
filds
jecxz
cmp
cmp
push
insb
mov
xlat
jge
in
mov
mov
mov
mov
sahf
xor
push
dec
dec
xor
shll
aaa
call
xchg
iret
fimuls
push
inc
in
add
andb
das
mov
sbb
sub
adc
cmp
hlt
sub
out
adc
es
and
mov
mov
and
jo
mov
inc
inc
pop
loope
call
xchg
in
je
insb
js
mov
out
dec
push
pop
mov
xchg
ret
fdivrl
and
mov
mov
test
daa
cmp
cli
adc
xor
cmp
xchg
shlb
mov
andl
xchg
addl
dec
adc
mov
lcall
out
mov
jae
push
mov
xor
cld
sbb
jae
sbb
addr16
scas
call
mov
add
cmp
jg
adc
jae
gs
je
xor
ficomps
test
mov
add
pop
insb
mov
and
mov
jns
cs
mov
out
fimuls
or
and
xchg
xchg
and
or
aad
pop
inc
xchg
ficoms
vmovhpd
sbb
les
scas
shlb
test
cmpsl
enter
add
dec
and
iret
cmp
push
aad
dec
dec
repnz
inc
cld
jmp
mov
jmp
xor
shl
xchg
xorl
pop
dec
popf
insl
mov
popf
je
dec
mov
jle
flds
loope
push
adc
insb
push
pop
mov
pop
cwtl
test
xor
repz
adc
decb
out
gs
adc
cmpsl
cmp
sub
call
aas
cmc
les
adc
sub
push
inc
add
mov
push
inc
rcll
jg
pop
or
stos
in
mov
ret
popa
jle
add
sbb
pop
add
shlb
xchg
xor
popa
aaa
fsub
push
or
nop
add
pop
stos
orl
sub
test
xchg
mov
push
jno
loopne
jno
xchg
jae
adc
lds
mov
bound
popa
cmpsl
pop
pop
ja
cmp
sar
ret
xchg
mov
lret
cwtl
mov
cmp
jo
mov
xchg
dec
repnz
push
loopne,pn
jnp
les
fwait
push
lds
mov
movsl
test
xchg
cmc
insl
stos
sahf
jp
fldcw
mov
xor
or
loop
pushf
stos
adc
pop
push
pop
sti
pusha
xor
decl
cs
inc
add
push
loope,pt
pop
sub
sub
ljmp
dec
jmp
lds
pop
inc
cld
pop
sbb
cli
cmp
fwait
jle
or
xchg
ja
jmp
repz
xor
mov
mov
adc
mov
mov
je
mov
fwait
mov
cli
and
or
sbb
test
movl
push
into
loop
imul
addr16
xchg
adc
outsl
dec
mov
add
sahf
clc
mov
test
clc
cmp
call
mov
mov
jg
mov
lock
jns
clc
repz
and
sahf
jmp
inc
dec
fcoml
inc
sbb
push
jbe
cld
sbb
sbb
and
mov
jle
adc
mov
fstl
mov
movsl
icebp
ljmp
ja
or
add
inc
mov
dec
ljmp
add
adc
repz
push
loopne
bt
jmp
sbb
jmp
lea
call
pusha
pushf
pushf
pushf
mov
pushf
lea
jmp
movl
mov
movb
pushf
pushf
mov
pushf
push
movw
mov
pushl
ret
cmp
sub
jb
pushf
mov
btc
lea
sar
movsbw
push
ror
dec
bswap
btc
lea
not
jmp
call
movw
lea
call
pushf
pusha
call
mov
shl
lea
call
pop
ret
mov
mov
dec
jo
icebp
bnd
enter
rcrl
pop
xchg
aas
pop
fdivs
push
in
jae
repz
hlt
xchg
adc
hlt
inc
inc
shll
cmp
jle
xchg
mov
daa
xchg
je
lods
lret
push
ficoml
aas
int
sub
xorb
and
scas
mov
pushl
jg
add
sbb
cmp
cmc
enter
xchg
in
lret
push
xchg
jbe
cmpsl
mov
mov
cwtl
test
push
out
add
and
out
sti
mov
mov
setl
push
mov
push
pushf
bswap
mov
lea
jl
movsbw
pop
push
lea
je
mov
pushf
push
movsbw
bswap
mov
pusha
pushl
movb
pushl
ret
sub
bt
jmp
mov
mov
push
cmp
outsb
add
ret
fldl
or
push
mov
mov
leave
pop
xchg
orl
or
js
push
mov
pop
push
push
outsb
and
pop
aam
cmc
pop
mov
sbb
mov
mov
mov
icebp
in
jns
dec
outsb
arpl
pop
pop
rcrl
insb
jg
push
mov
ja
xor
repz
icebp
xchg
mov
es
pushf
bswap
mov
cwtl
movzbw
push
lahf
call
pushf
lea
call
test
test
push
pusha
mov
test
pushl
cmp
jmp
adc
fnstenv
mov
sti
lcall
and
mov
mov
cli
adc
push
call
fists
aad
add
mov
insb
sti
push
or
mov
std
jl
push
sub
fistpl
enter
dec
push
mov
lods
cmp
pop
xor
out
cmp
aad
sbb
rcll
jno
cmc
jns
mov
mov
stc
sahf
add
mov
jns
test
shl
add
xor
gs
jb
test
packsswb
fnstenv
in
sbb
pop
pop
mov
aad
jp
repz
xchg
rcr
mov
fsubrl
sbb
outsl
pop
pop
mov
pushf
loopne
aaa
in
in
aad
lods
fidivs
sbb
inc
arpl
and
mov
lret
jb
fwait
pusha
pushf
lea
ja
or
or
push
sub
cmc
lea
add
sar
mov
shl
mov
bt
repnz
call
lea
push
push
pusha
call
movsb
mov
out
or
mov
bound
inc
out
jle
push
pop
orl
dec
insb
ds
test
mov
iret
pushf
cli
cmp
push
or
jb
out
sub
lret
sub
pop
notb
inc
cld
pop
xor
add
cmp
xchg
frstor
jmp
push
mov
and
push
loopne
xchg
and
xor
insb
mov
je
int
test
jp
loopne
popf
mov
pop
or
rcll
push
mov
pop
adc
jnp
in
mov
push
jecxz
push
movsb
sbb
xchg
xor
push
dec
dec
push
bound
xchg
sbb
push
dec
push
int
fisubrs
dec
xchg
dec
sahf
js
dec
mov
xchg
push
mov
arpl
push
cmp
mov
rclb
pushw
outsb
mov
sub
test
cli
xchg
pop
fwait
inc
pop
cmc
xchg
cmp
cmp
movb
jmp
leave
lcall
push
jbe
aaa
shrl
or
xchg
pop
enter
imul
jae
cmc
mov
ja
pop
xchg
pushf
adc
pop
push
cmp
test
fsubr
sbb
in
or
je
sbb
lods
jb
mov
add
xor
jle
out
dec
mov
sbb
sbb
mov
or
mov
outsl
adc
call
ds
mov
and
or
inc
loop
lcall
jae
sbb
xchg
dec
xor
push
sbb
or
mov
and
dec
xor
arpl
shl
fnstsw
xchg
fistpl
inc
insl
fsubl
movsl
cwtl
ja
lock
or
pusha
mov
out
add
lods
push
xchg
imul
sbbb
cmpsl
aas
push
adc
push
stc
gs
or
ror
lea
ret
incl
out
ljmp
fs
cld
call
and
mov
lea
jmp
std
dec
in
je
add
cmp
jbe
push
dec
shll
mov
scas
mov
xor
ss
stos
dec
xor
fisubs
xchg
jns
aam
xchg
inc
loope
insl
into
xchg
arpl
xchg
xchg
dec
mov
notl
outsb
mov
out
pop
sbb
mov
xor
mov
or
add
or
xchg
das
inc
or
pop
mov
enter
jmp
xchg
push
enter
mov
das
leave
xor
fs
mov
inc
dec
mov
mov
or
mov
inc
movsl
and
outsl
mov
mov
int3
cbtw
nop
pusha
sub
stos
mov
minps
popf
jnp
mov
add
sub
fnstcw
addr16
inc
xlat
cmovl
mov
sub
outsb
add
mov
in
jecxz
daa
mov
movl
pusha
jmp
cmpsb
sub
je
fneni(8087
sti
sbb
jg
mov
ss
imul
jbe
aas
ficoml
sbb
out
jle
or
sahf
push
inc
imul
pop
mov
pusha
out
cmp
lea
sub
clc
dec
dec
test
loopne
add
add
shll
scas
adc
pop
hlt
lea
mov
xor
arpl
aam
xchg
lahf
inc
ds
and
push
iret
or
inc
cmpsb
cmpsl
fs
cmp
jge
mov
jmp
push
ss
mov
add
scas
jg
pop
nop
sbb
pop
fwait
xchg
mov
arpl
push
cld
dec
stc
sbb
adc
mov
sub
jno
ds
shlb
popa
adc
popf
sahf
push
notb
mov
sbb
repz
xchg
bound
sub
jo
pusha
jbe
es
push
adc
mov
pop
ds
testl
popa
pop
mov
into
adc
and
das
xor
je
loop
lds
std
dec
push
lea
jbe
movsl
adc
daa
mov
popa
scas
and
adcl
scas
cmp
in
mov
pop
rcl
je
hlt
add
xor
pop
icebp
xchg
divl
icebp
add
xor
pop
aam
cmp
mov
jo
or
sub
adc
outsl
test
pop
lcall
dec
xchg
inc
xchg
or
push
cli
xchg
mov
mov
and
sbbb
mov
jge
add
repnz
xchg
xor
fistps
fs
xchg
mov
and
jb
clc
call
or
jmp
adc
dec
xor
inc
mov
adc
in
test
fnstcw
sbb
cwtl
adc
jmp
fcmovnbe
jbe
add
xchg
cmp
xchg
adc
inc
xor
add
stc
aas
aam
stos
movsb
das
seto
clc
loopne
xor
popf
push
sub
int
lahf
pushf
mov
test
push
lret
popf
nop
adc
bound
in
stos
fs
mov
sbb
mov
push
fsubr
scas
cmpb
je
lret
add
popf
push
lcall
mov
cmp
int
scas
lcall
cmp
outsb
lea
xor
and
dec
jmp
jae
push
call
shlb
mov
xchg
xor
rcll
daa
mov
test
lods
test
xchg
mov
pop
int3
insb
out
sarb
mov
xchg
push
clc
or
shrl
mov
int3
pushf
jg
test
ja
inc
mov
cs
pop
outsb
or
mov
dec
sub
into
pop
push
movsb
sbb
je
lods
mov
cmp
cs
outsb
mov
sarl
xchg
insl
push
sbb
mov
inc
dec
xlat
xchg
in
push
sbb
xor
pop
cmp
mov
inc
add
js
lahf
xor
sub
iret
in
test
and
inc
inc
pushf
lea
je
jmp
mov
neg
not
cmc
mov
test
cmp
bt
stc
shr
push
movb
pushf
lea
jae
adc
cmc
sub
pusha
bt
lea
jnp
cmp
shl
bt
jnp
pusha
cmp
mov
pushf
cmp
push
jmp
cmp
pushf
jmp
and
mov
lds
sahf
mov
adc
xchg
sub
rorb
push
add
xchg
enter
mov
jns
xor
dec
xor
movsb
aad
jp
mov
xchg
cltd
int3
mov
xchg
insl
pop
mov
pop
dec
jne
fsubp
add
out
or
push
pop
push
dec
stos
aaa
js
sub
xor
xor
dec
arpl
jecxz
sbb
inc
call
out
pop
cltd
jecxz
inc
int
jbe
mov
andb
aad
repz
test
xor
or
jp
out
inc
cmovp
pop
xchg
xchg
stos
adc
sub
pop
cltd
mov
into
inc
adc
sbb
ja
loop
lret
ss
cmp
adc
das
cld
out
mov
mov
xor
arpl
pop
leave
stos
jo
xchg
sub
shr
or
lds
stos
loope
mov
hlt
ja
mov
mov
jnp
or
outsl
jg
fwait
rcl
mov
call
pop
adc
xlat
je
mov
cld
ss
mov
pop
repz
movsl
add
popf
fldcw
popa
or
outsl
push
mov
jo
mov
out
mov
fldt
or
in
cmp
and
xor
dec
xchg
imul
sub
outsb
sar
xor
leave
inc
mov
add
xchg
es
mov
sub
out
sti
int3
rorb
je
cwtl
mov
outsl
push
or
mov
cli
pop
sbb
add
xor
loop
cs
push
jmp
inc
and
jb
ss
into
scas
cmpsl
iret
out
cmp
inc
jne
pop
fs
pushf
and
mov
into
sbb
pop
imul
aad
lock
or
lods
sbb
popa
das
fprem
mov
add
pusha
cmp
pushf
pushl
lea
ja
push
add
add
inc
xor
mov
push
pusha
call
push
push
dec
leave
popa
xor
sub
xor
mov
jecxz
or
mov
mov
mov
cmp
enter
out
jge
hlt
ss
dec
push
iret
cmp
adc
leave
aam
mov
fwait
rclb
popa
js
jle
test
xchg
cld
mov
cmpsl
rcrb
dec
mov
stos
xor
icebp
les
shrb
aaa
jbe
std
loopne
inc
fcomps
xchg
cmpsb
icebp
inc
mov
dec
cmpl
mov
dec
gs
ljmp
dec
out
push
bnd
out
gs
incb
xchg
or
xchg
icebp
cld
in
jmp
pop
jbe
jle
dec
lock
arpl
push
inc
sbb
xchg
mov
cmp
testl
pop
test
je
mov
sbb
ret
xchg
or
jg
stc
mov
jbe
push
sbb
test
fisubs
cli
lret
or
fstpt
mov
clc
pop
pop
pop
int
adc
mov
xor
push
mov
cli
test
cmp
sub
xchg
and
sbb
hlt
mov
or
ds
jp
push
and
xorl
pop
cmpsl
inc
mov
clc
jecxz
lock
fwait
jnp
and
test
pop
add
loopne
repnz
sub
jmp
into
adc
rcrl
test
lock
jecxz
inc
imul
ljmp
in
mov
adc
mov
cmp
dec
cli
lods
je
outsb
mov
sub
cmp
lea
pop
popf
push
inc
lods
sbb
xchg
cmp
pop
lods
inc
mov
xchg
enter
loope
lods
mov
sub
mov
mov
aaa
sbb
xchg
insb
jns
dec
aas
shrb
js
fisttps
and
ret
cmc
push
pop
sbb
pop
mov
lds
xor
pop
push
mov
out
loopne
dec
dec
pop
mov
mov
sar
xchg
in
add
rol
xchg
mov
aas
mov
pop
ja
push
lods
xor
divl
imul
stos
pusha
xor
pop
pop
mov
sub
pop
sbbl
lahf
decb
cmpsb
mov
or
enter
or
mov
ret
data16
add
add
sbb
mov
fstpl
pop
imul
pop
jl
sbb
out
adc
jnp
sub
xchg
and
addl
mov
push
sub
sub
pop
xor
out
and
push
or
aad
or
adc
mov
enter
push
nop
and
data16
sub
pusha
ficoms
xchg
jl
xor
arpl
gs
push
push
sub
mov
mov
inc
pop
mov
andl
aam
in
or
sub
in
push
jo
js
cmp
cmp
aad
dec
or
call
and
fadds
inc
imul
rcrl
js
mov
inc
dec
xor
mov
das
fistl
arpl
pop
push
sbb
jnp
add
stos
sbb
ss
adc
sub
and
mov
sub
mov
fsubs
enter
mov
dec
sbb
shll
and
insl
pop
daa
mov
cmp
jg
mov
cmp
sahf
push
sti
mov
dec
pop
sub
or
idivb
or
lea
stc
lods
push
jae
and
add
mov
inc
xor
imul
xor
or
pop
sub
les
mov
syscall
xchg
mov
out
adc
std
cwtl
scas
cli
mov
clc
loope
lods
ja
sbb
jmp
or
pop
out
daa
xor
mov
cli
sbb
ds
pop
in
lcall
test
cmp
cmp
push
loope
fcomps
aam
push
xchg
lcall
mov
xor
add
test
frstor
jo
fiadds
xor
inc
testl
std
test
jl
and
imul
mov
push
insb
in
mov
add
adc
mull
dec
cmp
scas
jne
aaa
outsl
mov
jbe
pop
call
test
lret
lods
dec
fildll
cmpsb
cmp
movsl
mov
xchg
adcl
sbb
dec
and
loope
sbb
cmp
clc
sbb
fs
das
test
xlat
mov
repz
cli
mov
xchg
fistl
sbb
ret
inc
mov
test
fs
test
add
lret
mov
inc
pop
cmp
movsb
loope
loopne
mov
stos
and
cwtl
xchg
mov
test
cmp
aam
or
pop
push
pushf
jnp
pop
cmp
hlt
jb
xlat
jge
data16
sub
mov
xchg
add
add
fdivrs
jo
arpl
orb
out
jbe
bndstx
js
stc
scas
xchg
cld
icebp
xor
inc
fnstenv
jecxz
or
xor
pop
cmp
leave
ljmp
fwait
aas
into
arpl
xor
dec
ja
jle
shrl
stos
sti
jnp
cwtl
xor
adc
into
xor
sbb
jb
lret
adc
adc
push
loope
sub
pop
cltd
or
dec
imul
or
ljmp
in
and
testb
aad
dec
nop
ret
push
rclb
dec
lret
fldl
in
lret
faddl
idiv
mov
xor
stos
push
xchg
adc
daa
subb
xchg
inc
jns
int3
rorl
pop
mov
or
sub
push
lock
cld
xchg
sbb
xchg
sahf
movsl
aas
push
std
outsl
jno
and
xor
aas
movsb
aaa
movsb
nop
or
push
icebp
sahf
outsl
fistpll
mov
mov
cwtl
mov
cmpsl
add
sub
insb
popf
out
sti
mov
mov
test
test
fstps
xchg
jl
adc
lods
xchg
cmp
sub
or
nop
mov
mov
mov
out
xchg
movsb
push
testb
pop
stos
and
insb
aam
pop
retw
inc
fwait
dec
add
popf
xchg
xchg
outsb
push
adc
mov
aas
sub
popa
adc
lods
mov
jmp
jns
mov
dec
add
aam
jo
inc
mov
adcb
sti
add
pop
xchg
and
arpl
cmp
add
sub
lret
sbb
dec
jmp
dec
xchg
cmp
hlt
out
mov
orl
cs
cmp
lret
lock
jg
icebp
pop
nop
rorb
or
in
mov
fs
pop
add
dec
pushf
js
fwait
adc
mov
push
lea
mov
pop
mulb
mov
rorl
lret
popf
push
ds
inc
mov
repnz
pop
cmp
or
mov
roll
aad
pop
das
ret
paddq
dec
lahf
cmp
call
ljmp
pusha
sub
push
std
test
push
ret
add
inc
cmp
gs
ficoms
push
jo
ror
scas
ds
cwtl
leave
fwait
imul
xchg
jle
add
cmp
xor
and
pop
sti
mov
sti
mov
dec
or
mov
ja
jbe
mov
lcall
nop
or
sub
xor
sahf
inc
push
inc
adc
stos
mov
sbb
pop
cwtl
push
cmp
fs
test
nop
sbb
mov
sbb
sbb
or
add
cmp
out
and
cmpsb
mov
cld
or
lods
mov
lock
mov
cli
jbe
gs
add
insl
fildll
xchg
jnp
pop
xchg
fldcw
jecxz
cmc
mov
push
mov
xor
mov
and
fldenv
in
inc
xchg
xchg
add
jae
aas
push
jnp
cmpsl
xlat
mov
push
push
inc
mov
or
fnsave
mov
mov
lea
shll
and
aas
mov
les
in
mov
cli
and
pop
pop
movsl
push
out
dec
imul
cmc
leave
xchg
loop
push
mov
mov
jnp
aaa
mov
mov
scas
add
xchg
xchg
stc
mov
push
leave
adc
mov
cmp
jae
sbb
and
xor
sti
std
loopne
jo
xlat
imul
pop
out
cltd
or
cmpsb
insl
icebp
jo
mov
or
adc
cmp
fstps
imul
lods
clc
test
shll
add
mov
test
push
inc
sbb
adc
or
xchg
call
push
cmpsb
sbb
bound
in
sbb
sub
dec
loopne
call
jecxz,pt
arpl
scas
jge
scas
add
les
stc
stos
lock
lahf
jp
rcll
daa
movsl
pop
add
push
iret
pop
jno
popa
subb
and
or
jg
mov
shll
test
pop
adc
or
mov
cmp
shrl
je
pop
xor
arpl
jns
fdivrl
xor
js
out
xor
push
je
in
push
ret
ja
adc
push
jmp
pop
arpl
inc
jge
xchg
inc
test
mov
push
dec
fdivrl
pop
pop
out
push
js
sbb
sbb
xor
insb
add
fxch
js
pmaxub
mov
and
xchg
std
cs
cld
inc
push
fsubp
arpl
mov
sub
sbb
outsl
out
mov
and
mov
out
lods
or
js
sub
dec
test
xchg
into
jbe
arpl
dec
int
push
test
inc
roll
sub
sbb
repz
adc
sbb
loope
pop
aam
adc
lock
repnz
rcll
ret
mov
add
popa
mov
scas
out
dec
insb
or
and
iret
subl
xor
mov
lret
and
into
pop
in
out
lret
xchg
sbb
adc
int3
mov
rcrl
add
mov
sti
test
out
mov
xor
push
out
sbb
mov
mov
pop
mov
cwtl
mov
cmpsb
stos
inc
push
int
js
jge
mov
mov
notb
subl
stc
and
pusha
pop
in
pushf
das
shll
fcom
or
daa
inc
add
icebp
andl
ds
pop
cmpsb
mov
clc
dec
cli
popf
jp
mov
and
ret
addr16
test
or
bound
jl
and
rcr
aad
pop
enter
and
mov
fwait
jg
jle
fmull
sub
icebp
push
outsb
inc
in
je
fists
push
arpl
sbb
mov
push
mov
sti
dec
mov
adc
stos
lahf
and
jge
cwtl
inc
pop
repz
dec
outsl
call
test
push
leave
sahf
jnp
lret
mov
mov
rcr
fcoms
push
xchg
icebp
jg
inc
aas
popa
add
pop
stos
dec
cmpsb
stc
pop
out
cmp
mov
jg
mul
and
stc
cmp
popf
into
nop
mov
inc
sub
jbe
fldcw
sub
add
iret
addb
into
adcb
sub
jbe
push
and
mov
jb
cmp
out
jle
aad
jbe
mov
shll
insb
scas
mov
jmp
mov
ds
aam
and
inc
mov
outsl
enter
mov
mov
push
push
sub
fildll
in
push
bound
in
cli
rcll
fmull
lock
mov
mov
jg
jne
out
shrl
test
data16
push
scas
test
mov
push
sub
fsubrs
fildll
sbb
inc
lock
mov
int3
push
sub
scas
mov
xchg
jnp
pop
sub
jp
sub
mov
push
int3
pop
push
mov
incl
jmp
pop
int
jbe
add
mov
sub
lcall
jge
lret
pushf
in
bound
push
jbe
aam
dec
cmp
push
cmpxchg
popf
push
add
push
rclb
rcrb
sbbl
xlat
bound
inc
fwait
in
jns
add
sbb
cmc
bound
mov
sub
jmp
ja
jo
pop
mov
clc
xchg
pop
subl
push
lods
inc
jbe
ljmp
sub
andb
push
xor
push
stc
mov
aas
gs
in
call
fcoml
mov
xor
push
mov
dec
xchg
shll
mov
aaa
jae
fists
mov
inc
jo
movsb
fcmovnb
loop
cltd
xor
mov
push
mov
mov
out
or
sub
push
inc
jp
into
test
sbb
in
mov
cmp
sub
jnp
fistpll
pop
pop
sbb
mov
jne
ja
cmp
in
addr16
pushl
flds
cmp
cmp
pop
clc
aas
inc
movsb
cmc
das
adc
icebp
inc
dec
ja
addr16
fists
sub
ljmp
lcall
imul
cmp
mulb
mov
pushf
and
add
dec
jg
mov
aaa
jno
pop
inc
ret
jno
cmp
and
cmp
cmpsb
arpl
lret
fsts
cli
ss
ret
pusha
in
and
cmp
into
imul
pop
scas
dec
xchg
add
and
lods
mov
adc
dec
mov
std
ds
cmpsb
scas
pushf
inc
in
add
pop
int3
mov
add
cmpl
jmp
sbb
push
push
lea
sti
push
out
or
sarb
enter
icebp
lret
jmp
xor
push
pusha
mov
xchg
mov
shll
mov
jo
mov
cmp
mov
cmp
cmp
and
and
inc
mov
loope
idivl
bound
inc
scas
push
das
fnstsw
inc
outsl
sar
jne
or
cmpsl
cmp
lock
cmc
sbb
pop
sub
mov
add
out
aaa
jnp
daa
adcl
adc
outsl
push
jmp
sti
xor
inc
sub
nop
adc
imulb
jp
xchg
mov
outsb
xchg
icebp
inc
data16
shll
cmp
roll
push
mov
fwait
inc
mov
push
inc
pop
cmp
mov
inc
pop
push
sbb
mov
scas
cmc
sbb
or
arpl
insb
pop
fsts
fldt
and
and
out
lret
pop
popf
iret
sbb
mov
outsb
cmp
int
xor
sbb
mov
mov
inc
pop
std
sbb
test
sub
scas
pop
inc
mov
mov
jl
rolb
fcomps
lret
pop
inc
loopne
ss
jle
fistpl
sbb
and
shl
ljmp
gs
fdivrs
cld
dec
mov
pop
xchg
and
dec
popf
mov
clc
adc
mov
push
pop
sub
mov
dec
int3
rcll
dec
out
cmc
lea
in
call
pushf
leave
stos
xor
sbb
aas
cltd
mov
movsb
and
or
mov
pop
jle
int3
xor
jnp
popa
lods
and
mov
inc
mov
call
out
xchg
mov
jnp
mov
roll
popa
lcall
push
sub
imul
lret
loopne
inc
sub
in
daa
jle
sub
call
inc
movsb
push
movsb
pop
xchg
lret
sub
mov
in
mov
xchg
stc
mov
or
push
aad
xor
jmp
jbe
cmp
push
fs
push
mov
xchg
mov
or
cld
cmp
xchg
xor
or
andb
shll
lods
inc
sar
mov
adc
mov
xchg
out
punpckldq
push
cmp
push
push
push
and
adc
pop
je
test
bound
adc
cli
nop
pop
enter
lea
sahf
mov
mov
pushf
fiaddl
dec
jge
adc
lock
aas
ret
stos
fnstenv
mov
dec
repnz
push
pop
sahf
shll
jb
cmpsl
jbe
fstpt
dec
adc
sarl
push
int
aad
int
jp
stos
lods
pop
inc
sub
pop
ss
lcall
jg
fsubrl
dec
and
iret
push
bsr
in
mov
aam
mov
jg
mov
adc
mov
roll
xchg
out
mov
pop
mov
mov
xchg
int3
pop
fwait
movsb
popf
icebp
fsubrs
stos
jbe
cs
repnz
jl
xor
mov
xor
lock
cmp
xor
imul
dec
ret
add
lods
ja
repz
and
xchg
call
scas
outsl
ficomps
push
cmp
cmpsb
xor
in
mov
pop
ljmp
mov
jae
stos
xor
rclb
and
cmp
and
int3
cli
int
shlb
push
pop
repnz
adc
rclb
fdivrl
xchg
outsl
mov
cld
add
mov
mov
aad
mov
xchg
fildll
cli
mov
cmc
repnz
data16
cmpsb
pop
jmp
pop
cmpsl
int3
mov
es
jle
pop
sbb
inc
jno
mov
lcall
loop
or
and
xor
std
mov
sahf
sbb
imul
or
xchg
mov
or
push
xor
jecxz
mov
out
shll
mov
mov
adc
cs
shll
xchg
xchg
dec
push
and
lock
popf
push
enter
or
push
mov
repnz
mov
mov
je
enter
push
loopne
fists
pand
lods
cli
loope
cmp
cmp
in
or
push
and
iret
scas
imull
pop
lds
push
sbb
dec
fbld
nop
pop
push
jg
sub
mov
pop
xor
mov
cwtl
mov
fsubs
pop
sub
cld
add
shr
lahf
push
ret
les
push
push
filds
push
sbb
mov
pop
cmpsb
js
sub
sti
test
pop
std
inc
jecxz
adc
cmp
sar
mov
mov
mov
dec
imul
je
jns
mov
nop
push
mov
lods
push
add
mov
pop
jp
dec
call
loop
adc
mov
or
pop
lock
inc
sbb
mov
push
hlt
scas
sbb
cmpsl
jnp
xor
jnp
and
xchg
cmpsb
mov
mov
add
xchg
daa
jge
clc
loop
scas
adc
pop
loopne
dec
push
in
mov
mov
lcall
out
fldenv
in
mov
movsbl
pusha
lea
jmp
push
adc
mov
inc
arpl
aad
jnp
and
je
leave
aas
adc
mov
sbb
hlt
pop
pop
sbb
data16
xchg
insb
sub
push
popa
js
ds
mov
or
pop
adc
js
loopne
mov
out
mov
hlt
and
mov
mov
adc
xchg
cmc
pop
or
leave
pop
icebp
popa
sbb
test
ret
jnp
out
in
jmp
sbb
daa
ret
sti
nop
insb
ds
inc
into
fxam
idivl
add
mov
call
mov
jmp
stc
adc
push
add
cmpl
cwtl
incl
iret
mov
ja
mov
addr16
pop
jbe
xor
js
adc
jne
lcall
sub
inc
pop
ljmp
sbb
add
shlb
mov
add
pop
es
jo
adc
inc
jb
neg
not
cmp
pusha
lahf
push
mov
jmp
push
nop
add
adc
repz
cmp
inc
fsubrs
inc
adc
add
cmp
pop
dec
and
fldenv
jns
data16
into
int
sbbb
xchg
jb
sub
aaa
xchg
clc
mov
add
pop
jle
mov
cs
pop
mov
divl
push
add
and
jae
add
loop
pop
movb
fs
and
js
push
xchg
or
arpl
mov
imul
or
sbb
jae
jl
sarl
aad
mov
imul
cs
repz
inc
inc
cs
gs
js
insb
jecxz
in
xor
mov
popf
push
pop
inc
xor
cltd
or
adc
mov
repnz
aam
fdivs
lcall
das
mov
inc
adc
stc
jbe
ss
adc
lahf
mov
out
mov
movsb
dec
in
xorl
pop
mov
rcr
nop
push
sbb
xchg
icebp
add
repnz
mov
je
and
stos
mov
sub
jmp
outsb
cwtl
imul
sbb
push
adc
add
mov
push
mov
add
stos
in
pop
inc
out
ljmp
xor
fiadds
pop
js
inc
loop
fistpll
insb
xadd
cwtl
adc
outsb
iret
int
aam
data16
fsubrs
add
dec
add
loopne
jl
addr16
cmp
popa
sub
ds
mov
fstps
adc
push
bound
rorl
pusha
jg
js
and
mov
mov
popa
shlb
xchg
js
sti
mov
sub
lock
repz
mov
push
sub
sub
mov
mov
jecxz
dec
jae
mov
addr16
dec
dec
mov
cmp
lock
and
inc
inc
push
push
jmp
loopne
mov
and
mov
mov
aaa
add
xchg
in
inc
addr16
sahf
lods
daa
mov
call
xchg
sahf
cwtl
push
cmp
adc
mov
mov
outsb
in
in
lret
movsb
imulb
sti
sub
jno
mov
xor
xlat
daa
adc
loope
inc
xor
into
mov
sub
inc
mov
repnz
xchg
sbbb
add
mov
in
and
js
jg
aam
add
sub
sti
les
or
mov
stc
xlat
add
pop
mov
push
ficoms
or
sbb
push
inc
and
stc
inc
adc
ss
int3
xchg
dec
call
fisttpl
cmc
addb
pusha
inc
ffreep
sar
xor
mov
shlb
or
mov
mov
daa
push
mov
ds
pop
ror
mov
popa
mov
inc
out
jp
sbb
in
jecxz
pop
inc
mov
xchg
adc
cwtl
push
insb
das
cwtl
pop
or
fidivrs
pushf
mov
pop
das
mov
rorl
mov
cmp
xlat
jg
leave
rcrb
pop
pop
cwtl
jp
push
pop
adc
and
cmp
es
mov
decl
jns
sub
in
sbb
xchg
dec
je
push
ljmp
outsb
jnp
xchg
dec
jns
jmp
or
arpl
int
cmp
xchg
iret
jno
push
add
inc
sahf
fdivrs
out
test
mov
add
ja
pop
hlt
es
repz
lret
rorb
pop
xor
mov
cmp
xacquire
jle
scas
out
movsb
adc
in
push
enter
xchg
and
out
mov
push
and
mov
jno
outsl
popf
dec
adc
loopne
pop
mov
cltd
mov
xchg
push
inc
sbb
movsl
je
xchg
test
adc
out
ss
bound
sub
or
xor
sub
les
jg
sti
andl
inc
add
int3
cmp
push
inc
shll
sub
nop
push
shrl
aaa
xchg
xchg
jle
inc
pop
cmp
ret
shll
out
or
jns
cmpsb
push
mov
xchg
cltd
push
xchg
cmc
xchg
in
ficomps
lret
enter
sbb
mov
icebp
stos
sub
data16
xchg
mov
repz
pushf
jle
pushf
cmp
flds
push
push
ljmp
cmp
shll
push
push
dec
jb
insl
lock
adc
stc
inc
and
jnp
cs
out
shl
sbb
imul
es
popf
sbb
adc
push
pop
inc
mov
mov
add
add
dec
sub
das
fnstsw
loop
pop
and
dec
jmp
xor
add
sahf
cs
cmp
jge
lret
push
jp
or
stos
popa
sbb
jg
add
test
loopne
lea
jne
mov
leave
and
jb
adc
push
movsb
pop
mov
hlt
xor
sbb
mov
or
lahf
dec
push
jge
mov
jp
xchg
cmpsl
mov
dec
arpl
js
cmp
popf
add
rcrl
inc
add
mov
fisttps
movsl
adc
shlb
inc
jnp
iret
mov
mov
xchg
rcrl
cs
stc
out
cmp
mov
subl
adc
or
fnsave
das
bound
clc
lret
add
mov
mov
adc
sbbb
bswap
jbe
cmp
ss
inc
movb
aad
mov
or
in
xor
ja
ret
inc
in
cld
in
mov
inc
xchg
lods
mov
mov
js
lock
daa
mov
sti
xchg
adc
sti
adc
sub
stc
xchg
daa
lea
test
mov
popf
add
mov
cs
scas
and
xchg
comiss
test
mov
nop
popa
inc
lods
jle
cmp
and
outsl
fwait
add
lret
mov
out
je
popf
dec
pusha
pusha
mov
add
sub
jg
jg
and
pop
or
push
lds
sub
subb
sbb
sub
sub
or
add
aad
lahf
dec
sbb
mov
call
jp
push
test
andl
daa
movsl
aad
lret
adc
test
popl
xchg
lds
call
into
mov
add
movsl
xchg
adc
mov
cld
cld
push
lcall
addr16
dec
xor
jl
sbb
pop
sti
scas
mov
push
outsb
dec
jecxz
cli
rep
fwait
ds
mov
sbb
jns
into
cwtl
std
and
dec
aad
ja
push
adc
cmp
cmp
pop
dec
inc
or
call
mov
mov
movsb
fcoms
inc
leave
or
arpl
lds
loopne
push
in
pop
cwtl
xchg
lahf
push
add
out
fiadds
push
daa
add
out
fbld
jbe
xchg
out
stc
adc
das
and
mov
in
popl
scas
mov
cmp
jns
dec
lret
adc
ss
add
jae
bound
xchg
mov
andl
dec
jp
out
fistpll
mov
call
or
pop
and
sbbb
dec
lcall
jge
sbb
inc
xlat
into
adc
mov
xor
testb
mov
fistl
clc
lea
mov
pop
jle
aaa
pusha
push
mov
and
mov
imul
imul
mov
mov
push
fucomip
scas
or
ss
mov
pusha
lods
xor
mov
in
mov
imull
stos
mov
in
push
push
dec
push
orl
fldenv
sbb
lock
popf
fsubs
adc
ss
lcall
mov
je
push
push
mov
xor
push
lcall
stos
jecxz
xor
jp
push
mov
sub
pop
sbb
fisttpll
mov
in
into
pop
sbb
pop
xor
pushf
jle
loop
iret
cmp
and
xor
push
dec
test
mov
repz
jmp
mov
dec
lret
fcmovnbe
adc
push
inc
repz
daa
popf
int
add
cmpsb
and
sub
in
mov
insl
sbb
mov
aas
jo
jno
cmp
test
mov
jb
je
mov
xor
adc
push
les
dec
adc
push
outsb
adc
inc
pop
fs
mov
mov
cltd
jle
lds
sub
call
je
daa
push
prefetchwt1
or
repnz
or
gs
dec
dec
mov
pusha
mov
aad
cmc
scas
std
cmp
xor
stos
dec
or
outsb
mov
sbbb
xchg
rcr
jae
out
inc
pop
aaa
add
push
fcoms
stc
fbstp
pop
sbbb
out
stos
stc
insb
inc
mov
mov
sub
jl,pt
cs
xchg
in
fs
jl
xchg
mov
and
xchg
cmp
ja
and
jnp
cmp
adc
push
testb
in
inc
mov
sbb
adc
mov
sub
fisubl
ret
jmp
aas
and
push
movsl
push
or
shrb
mov
inc
popf
or
mov
imul
cli
dec
mov
lahf
int
pop
xor
rolb
jmp
or
jne
pop
push
push
jge
rcrl
mov
push
clc
mov
nop
cltd
test
dec
pushf
popf
cwtl
aad
push
in
out
in
mov
jb
imul
test
fdivs
sub
aaa
lock
cld
pop
mov
popa
lds
xchg
outsl
xor
int3
push
xchg
scas
jbe
xchg
faddl
cmp
dec
es
mov
icebp
std
ja
or
cmp
jo
dec
xchg
and
mov
sub
popa
aad
xchg
cmc
jb
inc
test
xchg
aad
stos
mov
loope
jae
sub
jne
pusha
popa
pop
push
pop
add
lahf
cmpsb
ljmp
ljmp
adc
xor
popf
mov
jecxz
daa
cld
negl
pop
cmpsb
push
jmp
stos
sub
int
jmp
mov
test
xor
push
jns
loop
stos
dec
mov
addr16
inc
sub
lds
rolb
sub
mov
pop
test
xor
sti
mov
imul
mov
xor
dec
rcr
mov
push
lea
sub
nop
add
xor
add
imul
adc
cwtl
sub
xor
jle
test
aaa
adc
adc
dec
enter
repnz
cmp
out
pop
xchg
insl
add
xlat
jbe
or
inc
bound
xchg
pop
add
xchg
jne
inc
xchg
shll
cmp
pusha
push
jno
lods
arpl
pop
das
dec
adc
inc
mov
pop
ret
cltd
les
lret
push
push
imul
lds
or
adc
pop
jp,pt
les
leave
cld
sub
dec
ret
inc
in
dec
stos
repnz
or
dec
mov
xor
out
xor
jnp
lea
add
and
ss
repz
and
mov
inc
scas
cmp
dec
adc
push
pop
xchg
mov
cs
cmpsb
sar
vmmcall
or
inc
xchg
pop
jb
push
jecxz
std
dec
imull
dec
pop
xor
movsb
loop
outsl
add
sbb
push
push
mov
sar
stos
leave
jne
pushf
int3
cmpl
mov
pop
add
sub
cmp
leave
fucom
xchg
out
or
adc
cmp
test
fcmove
rorb
sub
push
sbb
dec
scas
insb
mov
and
mov
mov
call
out
aam
out
xor
pop
mov
sub
mov
out
adc
and
in
mov
repnz
imul
pop
push
and
mov
jo
aad
mov
aaa
popf
test
je
inc
or
scas
test
add
sti
xlat
pusha
pop
popf
outsl
add
xchg
xchg
sahf
cld
lret
out
mov
imulb
cmp
xchg
xchg
jbe
out
stos
push
mov
daa
xorl
in
into
stos
lock
push
loop
add
mov
insl
cmc
and
dec
or
cli
mov
xchg
js
dec
mov
add
jl
pusha
push
aad
cmc
out
sub
sbb
in
daa
and
cltd
std
inc
sbb
ja
add
insl
push
jecxz
inc
mov
dec
dec
cmp
dec
loopne
mov
daa
popa
rcrl
gs
pop
xor
inc
cmpsb
mov
stos
leave
mov
mov
inc
mov
push
mov
stc
inc
lock
add
pop
sub
mov
push
add
xlat
sub
es
cmp
jnp
lret
fldl
rcrl
shll
mov
pop
aaa
insb
and
outsl
mov
sbb
push
adc
xchg
test
aam
mov
mov
sbb
sarl
imul
scas
add
ja
out
call
out
xchg
jae
inc
sbb
hlt
insl
xor
outsl
out
mov
pop
mov
into
cmc
in
mov
pop
repnz
es
in
addr16
mov
and
gs
mov
icebp
xor
out
lret
mov
lock
mov
andl
sti
stc
mov
and
mov
push
mov
push
mov
cmp
push
call
add
cwtl
call
insl
out
pop
cmpsl
dec
bound
mov
sub
sub
sbbb
adc
dec
pop
pop
cmp
mov
add
data16
adc
push
jp
or
pop
pop
pop
cmp
iret
sub
andb
mov
adc
inc
add
jno
dec
in
mov
sbb
cld
push
mov
leave
push
dec
mov
outsb
adc
test
cwtl
and
push
cmpsb
and
cmp
pop
in
jnp
je
mov
lret
jne
rclb
or
mov
adc
mov
sbb
movsl
lock
shl
push
push
push
out
and
pop
int
or
imul
les
ja
dec
cli
and
imul
jbe
shl
sbb
push
xchg
sarb
sbb
sbb
orl
iret
dec
iret
cs
pop
in
dec
imull
xor
sub
dec
subb
inc
adc
mov
shl
daa
jo
pop
push
pop
mov
xorb
xchg
dec
lods
push
sbb
sbb
pop
cmpsl
push
push
sbb
out
loopne
mov
mov
mov
push
push
jle
cmp
shrb
cmpsb
xlat
xor
ret
mov
cmp
push
xor
fsubs
xor
lock
outsl
mov
pushf
pop
mov
push
mov
push
xchg
int
shl
pop
testb
mov
int
xor
insl
jae
sti
lret
dec
stos
pop
dec
les
add
fidivs
mov
add
adc
cs
mov
frstor
mov
cmc
pop
call
ljmp
push
lahf
add
in
cwtl
push
or
mov
les
inc
faddl
filds
sub
inc
adc
push
daa
mov
enter
push
mov
mov
movsl
ds
sti
fildl
push
les
nop
mov
pop
jp
and
hlt
inc
jb
sub
bound
repnz
rcr
sub
inc
jmp
imul
fildll
mov
add
rcrb
addr16
das
js
jmp
mov
or
sub
inc
mov
inc
divl
inc
cmpb
outsl
cli
push
subb
lods
imul
push
mov
cmp
inc
test
lret
dec
xchg
cmp
inc
cmp
mov
and
push
bnd
adc
jnp
popf
ret
pop
iret
jb
popf
shll
loope
pop
int3
cmp
call
cmp
inc
aas
xor
or
stos
push
bound
sub
pop
pop
xchg
pop
fwait
dec
sub
ret
inc
sub
and
je
fnstenv
das
mov
nop
ret
xchg
arpl
xor
scas
mov
mov
loop
and
add
sar
lock
push
icebp
sub
aam
insb
jle
je
std
pop
mov
xor
cli
insl
nop
and
or
mov
mov
stc
lret
add
xchg
outsb
inc
cmpsb
in
and
xor
dec
enter
adc
jne
push
dec
or
mov
sti
xchg
sbb
xor
mov
pop
or
outsb
pop
lcall
adc
subb
out
jmp
push
xor
adc
push
movb
les
test
pusha
dec
mov
pop
dec
outsb
push
cmpsl
pop
mov
es
sbb
ficompl
or
ret
cltd
inc
mov
xor
or
cmp
jle
mov
sub
imul
mov
xor
sbb
ss
lds
rcll
ds
jp
mov
sbb
add
mov
lods
sub
cld
mov
pop
or
xchg
das
sarl
lcall
adc
negb
sbb
jle
test
mov
es
push
jne
cmp
mov
and
jecxz
push
sbb
mov
addr16
sbbl
pop
adc
jmp
lahf
in
or
sub
jl
scas
hlt
cmp
sti
push
push
sti
cld
fwait
lds
or
fbld
pop
xchg
pushf
mov
push
xchg
sub
ret
data16
ja
imul
xchg
sub
cmp
pop
shrl
test
in
outsl
addr16
gs
and
insl
inc
ficomps
fnclex
gs
shlb
xchg
dec
dec
rcrl
je
push
xor
icebp
enter
jb
pushl
loopne
dec
ret
iret
in
fcmovb
adc
loopne
cwtl
lahf
push
shlb
mov
inc
mov
jecxz
mov
sahf
xor
xchg
in
lret
jns
xor
xor
clc
ficoml
push
xor
jbe
jae
aam
adc
or
xchg
imul
cmpsb
or
mov
xor
jge
and
loope
and
or
stos
loopne
dec
and
call
bound
call
fdivrp
add
cmp
int3
mov
mov
adc
inc
pop
pop
and
xor
hlt
pop
mov
jmp
push
call
arpl
sub
std
call
push
movsl
adc
gs
jge
std
mov
and
data16
xchg
jle
xchg
fs
test
mov
push
cmpsl
notb
fstl
out
or
adc
pop
mov
jmp
dec
mov
fadds
or
rcrb
add
mov
inc
jnp
cli
jo
mov
out
fistl
cmp
inc
out
aad
inc
mov
sbb
push
xchg
jp
gs
or
pop
enter
ds
enter
insb
les
push
test
shlb
clc
gs
nop
out
addr16
or
sbb
je
aad
or
adc
sub
mov
mov
ljmp
outsl
or
pop
add
push
cmc
push
test
mov
inc
test
pusha
push
data16
add
mov
push
inc
in
inc
push
jnp
sbb
cmp
pop
ja
popf
sub
add
add
sahf
int
bound
fidivl
fidivs
push
sbb
into
fidivrs
xchg
outsb
test
and
sbb
inc
aam
repnz
cmp
jecxz
and
dec
clc
repnz
cwtl
movsb
scas
in
mov
fildll
aam
jbe
xor
xor
sub
in
sbb
pop
inc
mov
shr
sbb
cmc
retw
push
cld
or
xlat
jne
sbb
out
shll
mov
pushf
inc
sti
cmp
pop
add
lods
dec
movsb
push
data16
and
andl
mov
adc
out
cmp
aaa
gs
xor
pop
mov
cmp
xchg
sub
xor
sub
xchg
inc
mov
lret
mov
xchg
sbb
std
or
cli
mov
cltd
dec
iret
in
aas
sbb
shlb
push
dec
mov
push
and
por
mov
into
shll
adc
movsb
rcll
mov
cltd
call
addb
dec
loopne
ret
loope
in
pusha
add
in
and
out
lahf
and
add
korw
repnz
mov
cwtl
iret
stc
ljmp
fisttpll
xor
loopne
leave
mov
pop
outsb
mov
jg
jne
loope
cmp
adc
jmp
ficoml
mov
fisubs
jnp
cs
sub
jo
dec
xchg
add
sti
add
add
imul
gs
sub
mov
xor
add
test
insb
inc
fcompl
xor
ficompl
ss
ret
sbbb
fldt
xor
cmc
mov
mov
repnz
inc
jle
fisubl
nop
adc
xchg
mov
xchg
add
paddq
xor
cwtl
daa
jg
ljmp
lret
pop
inc
and
inc
cmp
mov
sub
je
cmp
ja
icebp
jl
lret
pop
dec
shlb
ret
call
stc
pop
mov
and
scas
cltd
sub
loopne
mov
xor
insb
adc
lcall
or
pop
add
cmp
pop
sbb
mov
add
push
pop
lret
mov
xor
inc
das
rcl
push
push
pop
xor
aad
mov
sbb
movsb
mov
out
add
adc
mov
test
xchg
cli
int3
jecxz
std
jl
test
ss
sarl
adc
mov
push
fnstsw
int
cmp
test
fmul
cmc
adc
mov
stos
leave
xchg
fdivs
push
nop
mov
sar
inc
and
xor
fnstsw
jecxz
lock
or
hlt
aad
cmpsb
mov
pusha
push
aam
jl
or
clc
or
mov
neg
lret
leave
fmuls
aaa
jle
fdiv
ljmp
lods
loope
lret
movsl
or
stc
jle
std
jge
add
xor
jecxz
int
lret
mov
push
push
add
cmpsl
lods
sub
movsb
js
cmpsl
cmc
jmp
adc
add
xchg
sbb
mov
sub
adcl
sub
loop
hlt
lret
data16
inc
mov
clc
mov
push
test
loopne
mov
insb
and
movsb
mov
das
into
mov
dec
es
fldl
mov
or
test
hlt
cmc
aam
aas
popa
adc
cmp
mov
addr16
test
sbb
int
lods
xchg
decl
mov
andl
test
sbb
xchg
jne
inc
inc
cmpsb
sarb
sti
dec
sub
fwait
in
jge
inc
push
adcb
pushf
xor
xlat
fisubrs
cvttps2pi
lock
das
loop
js
push
xor
das
js
daa
std
or
mov
jp
mov
fcmovne
scas
xchg
lock
aaa
std
dec
leave
comiss
sahf
rcrl
lock
dec
push
loopne
clc
fdiv
inc
jecxz
out
andb
mov
clc
out
int
xchg
pop
pushl
iret
std
stos
mov
sti
movsl
call
pop
fisubrl
cmp
cmp
insl
loope
loope
addr16
add
add
cmp
popf
push
xor
mov
jge
outsl
lahf
out
mov
cmpl
lcall
ficompl
push
ret
aas
jge
dec
mov
cmpsl
xor
fs
cmp
add
aas
test
sub
sub
add
jl
or
repz
stos
or
pushl
ret
mov
mov
out
adc
dec
push
das
outsl
mov
pushf
shlb
push
jg
popa
andb
and
mov
ret
xchg
nop
je
inc
icebp
and
test
enter
sub
push
or
push
cs
jns
jno
mov
iret
sbb
dec
and
mov
mov
mov
pop
mov
lds
add
les
test
pushf
pop
dec
gs
shlb
lret
icebp
and
rorl
mov
iret
nop
aam
sub
xchg
lret
adc
movsb
js
scas
icebp
push
lods
xchg
xchg
push
adc
pop
and
or
loope
jbe
ret
pop
push
fucom
sub
push
add
push
xor
and
loope
or
adc
xor
mov
decb
xlat
repz
lds
repnz
and
shlb
inc
mov
mov
xchg
pop
or
mov
mov
mov
jmp
ret
nop
dec
out
sbb
faddl
and
sahf
or
pop
stc
jns
dec
push
add
inc
xor
pop
cs
insb
sbb
lret
xchg
push
call
stc
mov
mull
mov
ljmp
out
mov
nop
mov
mov
in
mov
stc
cmp
mov
gs
insl
push
fld
sub
jae
test
add
fnstenv
cltd
push
repnz
stos
ss
sahf
repnz
cmp
das
out
sbb
icebp
scas
sbb
sub
mov
cmp
cmp
or
xlat
out
das
push
push
sub
push
in
or
pop
stc
mov
scas
xchg
jmp
sti
and
xlat
mov
popa
push
aad
rolb
mov
dec
inc
mov
test
iret
shrb
mov
out
arpl
cmp
jne
adc
xchg
adc
stc
ret
ficompl
add
sub
adc
jp
sbb
push
cmp
pop
push
dec
push
xchg
mov
jno
inc
int3
or
sub
xor
cli
sub
stc
cmpsl
or
jnp
inc
test
mov
xorb
jne
xchg
pop
dec
out
rcrl
or
movsb
dec
fsubrs
dec
lea
cli
cmp
cld
push
lock
jns
fwait
jmp
and
cld
inc
jns
out
sub
pop
inc
imul
sbb
lock
mov
dec
fwait
inc
jnp
push
jbe
xor
clc
cmpsb
sbb
cmpsl
cs
adc
or
mov
mov
orb
pop
push
stos
inc
sbb
imul
out
cltd
cmp
rcll
es
sbbl
inc
pop
or
stc
push
mov
lods
jmp
fsts
decb
cld
mov
mov
and
rclb
daa
pop
sbb
and
and
dec
sub
xor
xchg
pop
mov
enter
jge
call
les
pop
jb
push
mov
in
pop
daa
mov
out
scas
nop
xchg
pop
sbb
ljmp
movsb
mov
jno
fwait
ja
pusha
pop
cmpsl
rcrb
inc
sub
jnp
cmp
dec
addr16
cmp
and
mov
in
ljmp
jnp
test
mov
std
mov
scas
bound
and
in
nop
rcrl
hlt
arpl
sti
in
aad
push
dec
mov
mov
insl
rcl
add
mov
insb
mov
in
stos
mov
cwtl
cmp
imul
flds
jmp
lods
jmp
pop
in
mov
mov
mov
cwtl
cltd
mov
leave
into
inc
les
cli
cmp
ljmp
or
cs
dec
imul
xor
xchg
jmp
push
xor
pushf
sub
cld
mov
aaa
ljmp
and
pusha
mov
repz
mov
insl
stc
inc
sub
incb
mov
mov
adc
loopne
push
pop
lret
out
mov
mov
dec
inc
mov
inc
sub
arpl
jp
xchg
in
pop
or
bound
decl
jle
ja
mov
xchg
push
and
les
mov
cltd
jno
pushf
lods
xchg
push
sbbl
iret
add
push
mov
inc
add
mov
sbb
push
xchg
lds
adc
lock
sub
testb
dec
sbb
xchg
xchg
mov
or
lods
pop
inc
or
ss
lret
inc
and
pop
leave
addr16
imul
add
mov
sub
pop
add
test
mov
js
bnd
shrb
sub
ljmp
jo
xchg
xchg
frstor
xor
adc
pop
adc
ds
stc
and
lock
xchg
dec
aaa
popf
pop
popf
clc
scas
hlt
pop
cmc
mov
inc
lods
lcall
stc
sahf
or
repz
daa
sub
mov
vmovsd
icebp
push
mov
jle
cwtl
fsubrs
adc
cmp
or
dec
add
push
xchg
cmp
aad
out
sub
mov
jmp
iret
cmp
loopne
std
loope
mov
push
loope
dec
pusha
push
xor
xor
mov
xchg
mov
sub
bound
scas
mov
fimull
inc
in
fldl
sbb
test
stc
and
fdivl
fldl
fdivrs
sarl
mov
rclb
cmp
jb
leave
jne
jne
sub
ftst
cmp
daa
jge
xchg
inc
sbb
push
cmp
out
lret
leave
push
mov
mov
dec
and
mov
shrl
test
mov
mov
pop
fstps
jne
mov
lds
fiadds
inc
mov
sti
jo
dec
mov
sbb
sub
cmpsl
xchg
cmp
mov
inc
je
jno
mov
mov
mov
mov
push
add
test
addl
push
pop
insb
xlat
addr16
fidivs
sbbb
add
cmp
in
add
adc
das
bound
outsl
mov
pop
daa
jg
push
or
cld
fldt
ljmp
movsb
pop
push
repz
sbb
inc
fwait
arpl
mov
shrb
or
push
add
shll
movb
int3
sahf
jno
icebp
xchg
mov
mov
cmpsl
xor
ret
push
inc
adc
pop
add
xchg
add
add
or
clc
movsb
cmp
xchg
loope
xchg
xlat
or
in
xchg
adc
push
fwait
cmp
imul
cld
mov
jae
xchg
sti
scas
or
filds
and
push
rorl
rolb
jmp
mov
xchg
int
or
xchg
sar
addr16
adcb
jecxz
les
int3
jle
in
pop
in
pop
pop
bound
lods
sarb
and
adc
xor
dec
bound
mov
push
ficoms
sub
daa
fiadds
mov
movb
fstpl
and
in
xchg
nop
cltd
sbb
outsb
xchg
lock
imul
sbb
insl
mov
fdivrs
add
stos
sarb
stc
in
pop
insl
movsb
lea
sub
int
insb
mov
pop
jbe
pop
xlat
cmpsl
adc
lds
jecxz
xchg
inc
ds
adc
xor
mov
xchg
pop
leave
sub
mov
pop
and
jmp
mov
scas
mov
mul
jl
dec
pop
jl
repnz
cmp
and
dec
imul
push
push
enter
inc
rcrb
dec
xchg
stos
mov
jg
pop
cmp
call
loope
push
js
push
jg
jbe
cmpb
icebp
scas
mov
ljmp
add
sub
jecxz
shll
int3
ljmp
push
rolb
out
aad
scas
jmp
in
notb
aad
inc
mov
int
push
xchg
and
rcrl
pop
mov
pop
mov
adc
movsl
jae
mov
adc
jecxz
add
das
insl
mov
push
test
and
popf
movsb
je
xchg
sub
dec
jg
pop
cmp
imul
ret
lcall
fdivl
add
aas
lret
mov
out
adc
pushf
in
inc
sbb
dec
dec
arpl
sub
xchg
stc
xchg
add
cmpl
sbb
das
int
imul
cmp
add
add
pop
mov
dec
stos
and
iret
mov
leave
xchg
inc
adc
popf
mov
lret
pop
movsl
dec
mull
shll
nop
in
aam
mov
mov
repnz
mov
cli
mov
dec
inc
in
xchg
pop
jmp
call
roll
mov
pop
out
aam
fnstenv
adc
cmp
and
mov
jnp
push
cli
cmp
mov
ror
sbb
cli
in
aad
jge
out
loope
and
xor
sti
add
daa
decl
lods
sbb
xchg
mov
xor
xor
lea
rolb
cmp
icebp
les
imul
mov
and
nop
adc
add
sbb
inc
push
arpl
mov
sti
cmpsl
sub
js
sub
xchg
cmp
xchg
out
xchg
rcr
lcall
in
xchg
lahf
cmp
push
push
inc
xorl
enter
mov
add
cmp
dec
push
fnstsw
inc
mov
adc
inc
mov
lods
cmp
mov
test
sub
dec
inc
jo
lods
inc
add
pop
inc
mov
rorb
hlt
imul
hlt
inc
add
and
ljmp
repz
pusha
xor
hlt
std
sbb
mov
iret
lret
cs
jnp
mov
cmp
jnp
in
mov
jp
lods
dec
int3
push
adc
dec
xor
xchg
iret
dec
shlb
roll
jnp
ljmp
add
jae
mov
outsl
adc
nop
imul
mov
es
inc
xor
arpl
ljmp
cwtl
mov
out
sbb
push
aad
mov
mov
pushf
push
fildll
xor
mov
fiadds
pop
add
or
out
mov
lods
inc
orl
xchg
test
enter
jle
inc
or
push
lock
push
xchg
cmp
inc
out
shrl
insb
cli
mov
jp
inc
imul
das
mov
fidivl
std
dec
mov
xchg
and
xchg
in
xrelease
sub
adc
stos
and
adc
jno
push
dec
dec
subl
inc
stc
push
in
ret
bound
sub
mov
jbe
xor
push
add
add
xor
xlat
mov
das
shlb
mov
jmp
xor
push
adc
leave
jnp
nop
rcll
lea
mov
andb
cmp
xchg
scas
sub
pop
test
mov
into
sub
xchg
cmp
and
cmp
test
fsub
stos
dec
mov
push
adc
inc
xchg
les
inc
int3
dec
inc
jno
dec
jbe
jns
cs
add
arpl
ret
mov
xor
std
ficoml
jbe
inc
rorl
icebp
ret
xor
fsubs
xor
inc
pop
or
or
in
push
mov
sub
hlt
adc
and
fsubs
in
adc
jb
xor
inc
add
lds
js
jo
mov
mov
fimuls
mov
mov
jns
stos
push
jne
xor
cmp
jmp
xchg
outsb
addl
mov
cmp
imul
jle
sbb
shl
popf
aam
lcall
std
mov
push
in
dec
enter
call
fs
out
popl
or
std
adc
ja
xor
pop
mov
loop
shll
and
jp
repz
js
aaa
bound
fildl
adc
roll
xor
inc
daa
push
insb
outsb
pop
nop
out
sbb
add
popl
and
xchg
jl
sbb
adc
lahf
sbbb
pusha
push
push
or
sbb
xor
pop
sub
ja
ret
xchg
sahf
add
imul
pop
and
iret
inc
adc
cmpb
and
add
mov
dec
aas
cmp
leave
outsl
faddl
pushf
dec
or
hlt
idiv
jge
fidivl
pushf
les
add
dec
xor
rclb
cli
nop
sarl
pop
out
jle
rcrl
jmp
hlt
dec
and
out
add
sub
in
sysenter
xchg
sbb
push
gs
lret
lods
xchg
jmp
cmpsb
pusha
scas
lcall
sub
jmp
test
push
xchg
ret
jns
iret
xor
scas
mov
push
jmp
adcb
mov
enter
sub
out
inc
mov
xchg
cmp
pop
xchg
hlt
mov
push
sub
mov
dec
jl
lret
insl
push
pop
sbb
fiadds
pop
jbe
call
arpl
jmp
xor
fmuls
jl
mov
mov
mov
mov
push
mov
js
pop
adc
inc
mov
jns
add
fldl
repz
dec
add
scas
pop
pop
cltd
add
xchg
push
dec
xchg
sub
mov
pushf
outsb
or
scas
out
test
inc
mov
xchg
scas
jl
hlt
aaa
push
mov
sbb
mov
mov
jge
push
cmc
enter
pop
movsb
scas
out
int3
sahf
popa
push
cmpsb
mov
in
and
aas
mov
mov
call
or
and
cli
mov
cmp
jnp
mov
push
jne
loopne
adc
cs
xlat
lods
out
ja
pusha
movsl
jnp
lret
cmp
into
aaa
mov
xor
ror
push
cmp
jnp
orb
outsb
add
fistl
xchg
mov
nop
cmp
clc
mov
xchg
cwtl
jle
ljmp
imul
rolb
imul
in
and
movsb
cmp
insl
pushf
inc
test
mov
fs
loopne
push
movsl
or
insl
and
dec
fldl
fildl
adc
repz
mov
mov
mov
mov
sbb
dec
cmc
hlt
movsb
cmpsl
es
sbb
jae
inc
or
or
mov
pop
inc
fbstp
insl
mov
sub
aad
icebp
push
xchg
mov
jg
jmp
ja
inc
fwait
pop
push
inc
les
sub
push
pop
mov
add
mov
int3
in
add
mov
jo
dec
or
xor
in
and
mov
xchg
mov
in
jo
or
push
leave
sahf
jb
sbb
add
negb
outsb
iret
cli
ljmp
xchg
sbb
and
cld
repnz
ret
lcall
jp
ljmp
push
xor
roll
rcrb
fisubrl
adc
shrb
in
dec
cld
jl
lods
add
lret
in
sbb
mov
mov
jle
in
and
jno
mov
or
call
in
push
loope
jmp
mov
push
jge
mov
das
pop
popa
xor
test
pop
push
fidivrl
daa
arpl
inc
mov
pusha
cwtl
aad
stc
lahf
or
in
fisttpll
movsl
mov
mov
cmp
dec
dec
mov
mov
jecxz
jmp
shl
xchg
mov
nop
stc
cmp
xor
mov
es
add
cmp
push
lds
mov
pushf
insl
sbb
jne
inc
mov
cmpsl
push
movsb
int
orl
lods
loop
mov
in
xchg
dec
jbe
fnstsw
and
lods
cmc
sbb
pop
leave
cli
push
rol
movsb
js
jb
add
imul
xor
jnp
cmp
insl
push
xchg
test
inc
mov
fwait
dec
xchg
sbb
or
lods
mov
ja
jae
pop
cli
jae
mov
sbb
dec
inc
xor
scas
out
pop
sbb
aad
shll
pusha
div
fists
mov
dec
xlat
ljmp
js
mov
push
sub
leave
das
clc
dec
cmp
lock
test
nop
addb
jae
sbb
pushf
dec
pop
sahf
popa
xor
mov
mov
js
dec
lods
adc
sbb
xchg
rorl
sbb
or
add
mov
movsl
lods
lock
jbe
sbb
pushf
mov
mov
addr16
or
inc
sarb
es
cltd
loope
fildl
sub
out
pop
inc
dec
mov
subb
out
icebp
mov
popa
aas
push
ljmp
lds
or
mov
lcall
mov
popa
mov
pop
mov
aam
addr16
gs
testb
adcb
cltd
cmp
loope
ss
push
push
pusha
insb
lods
mov
xchg
cli
ja
pusha
cmp
pop
or
filds
negb
fldl
pop
dec
jecxz
rcrl
mov
mov
imul
or
fimull
test
mov
icebp
nop
loope
mov
jle
pop
adc
popa
fistpl
cwtl
sbb
mov
adcl
mov
in
dec
cmp
call
scas
add
jne
push
pop
rcrb
cmpsl
mov
out
dec
inc
cmp
xchg
hlt
mov
push
mov
sbb
cmc
clc
enter
mov
sub
jl
xchg
test
mov
mov
xor
lock
repz
cmc
mov
aam
repnz
cli
xchg
test
adc
xor
insb
cmp
imul
dec
xchg
packuswb
push
adc
sub
enter
adc
shll
pop
das
xchg
xchg
sbb
das
sbb
push
sahf
sub
add
aad
mov
sub
inc
enter
or
push
cmp
xor
stos
jmp
jb
cmc
dec
fadd
fst
jae
aaa
lods
jl
inc
mov
loope
orl
enter
or
bound
mov
cmp
outsl
test
es
adc
pop
iret
fsts
rcr
inc
add
popf
pop
mov
int3
arpl
sub
cld
lods
repnz
push
adc
xor
mov
loope
mov
push
popa
in
popa
test
stc
fisubl
incl
sub
aad
iret
xor
das
data16
mov
push
xchg
xchg
loop
xchg
ja
cwtl
pop
mov
insb
test
mov
iret
imull
push
lcall
pop
jmp
or
je
cltd
aam
test
pop
scas
lds
cli
adc
jo
xorb
cmp
negl
mov
xchg
cmpsb
xorb
insl
fisubs
loop
sub
mov
movsl
ja
in
sbb
outsb
sahf
mov
xorl
inc
xor
lods
lea
mov
mov
adc
xchg
imul
xchg
xorb
mov
cmp
in
mov
xorl
cmp
sahf
fistl
ret
iret
into
jne
jmp
jecxz
lahf
lods
or
push
mov
xor
xchg
lock
lret
lods
jp
and
jns
pusha
scas
enter
jbe
jg
lahf
pop
sbb
imul
mov
cs
lret
outsb
or
ss
inc
nop
or
jmp
push
iret
fcmovu
or
mov
or
dec
ljmp
scas
cmp
pop
sbb
adc
and
pushf
sub
cmp
imul
gs
ret
push
loop
sub
loopne
lret
push
jbe
jp
xchg
into
shl
jl
mov
std
jne
jecxz
xchg
out
add
popa
inc
pop
rclb
test
adc
sti
filds
sub
sbb
popf
xchg
into
jne
pop
mov
push
jmp
gs
aas
movb
inc
repz
sbb
xor
jno
fwait
xor
push
fldenv
push
cltd
test
call
xor
adc
push
cmp
cmp
lea
or
push
push
addr16
dec
sub
pop
scas
xlat
mov
popa
xor
jb
push
pop
out
or
lods
hlt
ja
cmc
xchg
jmp
in
cwtl
fwait
or
js
pop
jmp
cmpsb
or
imul
inc
cmp
fimuls
pop
sub
mov
std
push
leave
les
rolb
in
mov
int3
out
insl
loope
add
dec
mov
data16
pop
stc
roll
repnz
movsl
push
jbe
test
dec
xchg
cwtl
mov
cltd
xchg
push
sub
adc
sti
xor
cmp
add
mov
lods
push
jmp
icebp
push
fwait
mov
dec
rorl
jge
mov
fldt
stc
aam
or
outsl
or
mov
loop
psadbw
inc
pop
xchg
fs
adc
pushf
dec
in
mov
fnstenv
popa
dec
je
mov
sarl
jb
cs
xorb
sbb
fimuls
sbb
jle
in
mov
mov
outsl
push
jne
inc
mov
inc
inc
stos
adc
std
ds
insb
bound
mov
or
or
aad
popf
sbb
in
inc
out
fsubrl
mov
rol
mov
cld
dec
fstpl
mov
ret
mov
popa
mov
sbbl
mov
mov
sbb
sub
cli
jecxz
mov
mov
fs
jne
fdivrl
popf
dec
mov
mov
mov
out
fisttpl
sub
xchg
fmulp
mov
int
in
inc
cmp
sbb
fucomp
repnz
and
outsl
and
sbb
push
mov
cmpb
cltd
push
push
fisttps
cs
mov
add
cmp
xor
ret
pop
inc
pop
xchg
cwtl
fcompl
or
pop
sbb
dec
and
stc
pop
int3
or
xchg
cmp
inc
cltd
mov
nop
adcl
mov
lahf
inc
sahf
hlt
xchg
in
push
loope
faddl
cli
enter
js
sahf
jmp
cs
test
xchg
jmp
xor
cmp
sti
jbe
cmp
jge
sarl
pop
in
or
add
shl
pop
xor
nop
and
push
xor
mov
loope
arpl
dec
pop
bound
cmpsb
cli
nop
or
or
dec
lock
rclb
and
stc
aad
xor
push
rorb
add
mov
iret
sub
sbb
jp
mov
fldenv
sbb
nop
cmpsl
into
add
xor
rorl
jg
or
sub
inc
cmc
fstpt
nop
outsl
cli
repz
call
lret
push
sub
dec
ja
loop
mov
cltd
jnp
in
mov
pop
mov
into
adc
lcall
test
jnp
and
cmp
std
test
rcll
shll
pop
enter
mov
push
cmp
test
dec
inc
jge
push
adc
push
addl
xchg
and
sbb
scas
add
mov
loopne
mov
adc
add
lods
jnp
mov
aas
sub
sbb
add
cs
out
sbb
fs
push
pop
arpl
pushf
mov
xor
or
out
gs
mov
das
push
jne
or
jmp
inc
sarl
jle
add
scas
in
popa
push
xor
lret
pop
js
cmpl
dec
fcmovnu
shrb
jae
call
pusha
je
stos
pop
adc
push
xchg
lods
stos
xor
outsb
gs
add
stos
and
arpl
xchg
sbb
mov
jns
faddp
push
mov
push
mov
cmp
pop
cmp
sbb
lret
jg
sub
in
pop
fdivr
arpl
je
dec
push
fdivl
dec
mov
sbb
pusha
das
test
push
cmp
shll
sti
inc
loop
mov
imul
mov
test
dec
pop
mov
pop
popa
fidivs
push
sub
shr
flds
adc
mov
sub
icebp
or
lahf
adc
or
pop
outsl
dec
push
enter
xchg
jae
fistpl
cs
jb
push
cmc
pop
lods
cmp
sbb
and
mov
scas
hlt
or
mov
cld
fisttpll
adc
cmp
mov
shll
pop
and
test
xor
arpl
mov
adc
jno
jb
cmp
dec
int3
xchg
pusha
nop
adc
xchg
or
cli
or
cmpsb
fstl
mov
pop
and
loope
mov
xor
scas
into
dec
xor
lcall
xchg
sti
cmc
sahf
cs
jecxz
inc
cmpsl
push
sub
fs
cmpsb
scas
mov
adc
sub
addr16
pop
psubusb
fs
mov
or
dec
lods
add
rcr
mov
cld
fs
pop
movsl
lds
iret
ljmp
fcmovne
pop
and
jne,pt
out
ret
in
xchg
push
ljmp
push
imul
lock
jge
push
aaa
movsb
inc
gs
lret
sbb
in
push
clc
mov
cmp
fadd
imulb
inc
jl
mov
mov
mov
icebp
pop
imul
pop
movsb
xchg
adc
jl
sub
dec
movsl
ss
cmc
mov
add
sarb
mov
mov
jo
out
add
sbb
or
xchg
push
jmp
outsb
pop
std
into
int
popa
mov
lods
or
pushf
scas
xor
loopne
jg
cmp
pop
lods
xchg
cmpxchg
or
pop
inc
out
aam
cmp
fcoml
push
mov
cltd
jnp
xchg
lcall
xchg
outsb
in
cld
jb
in
movsb
outsb
jno
sbb
in
xchg
cmc
mov
jnp
popf
std
mov
int3
data16
rcrl
leave
test
icebp
sbb
movsl
sbb
test
jp
iret
adc
pop
jo
sbb
into
mov
push
jp
sahf
jmp
inc
mov
mov
mov
pop
jl
jmp
loope
push
loopne
inc
cmc
add
xchg
je
pushf
aam
cltd
push
xor
mov
dec
push
in
iret
jne
sti
jl
inc
pop
repz
filds
outsl
jo
dec
cwtl
outsb
sti
cwtl
or
sbbl
jae
jno
out
cmp
push
stos
push
sub
add
mov
xor
or
cltd
or
jmp
inc
add
pop
push
adc
push
sbbb
push
add
jecxz
sahf
hlt
pop
jbe
cmpsl
jo
xchg
in
sub
push
nop
or
jecxz
and
andl
aas
fwait
divl
lret
inc
sbb
dec
push
pop
push
inc
lret
or
cld
xor
xlat
int
xchg
mov
sti
jl
clc
test
dec
testb
push
rcr
fists
mov
or
or
inc
sti
jo
scas
out
or
rcr
push
lret
cld
inc
push
add
pop
int3
cltd
xchg
repz
add
mov
xchg
xor
adc
sbb
nop
add
pop
das
subb
mov
sbb
inc
cld
xchg
int
xor
shrb
mov
ret
loopne
dec
rclb
jle
orb
sub
pop
inc
daa
pop
into
call
jmp
aam
test
ss
test
push
mov
outsb
addb
inc
sub
cmp
and
in
in
dec
xchg
test
xor
scas
ja
jo
xor
dec
addl
mov
add
data16
push
ret
ror
sub
es
push
jmp
std
test
push
cmp
enter
out
and
jle
pop
or
aas
cli
fldenv
pop
mov
push
add
push
cltd
pop
add
std
mov
outsb
out
jns
sbb
jbe
clc
ret
punpcklbw
aam
cmp
xchg
xchg
andb
test
mov
scas
icebp
dec
xchg
mov
stc
mov
inc
dec
mov
clc
xchg
in
test
iret
jle
inc
fs
xor
inc
push
sub
cmpl
lods
pop
mov
and
shll
xchg
movsl
inc
aam
adc
adc
insl
int
fdivl
jns
out
ja
popf
xchg
or
xor
jge
out
loope
leave
in
jns
push
jecxz
push
fcomps
sub
mov
lret
lods
pushf
aad
sub
xlat
or
mov
ds
popa
xchg
fstpl
out
sub
pop
iret
shrl
push
mov
ss
leave
int3
fwait
nop
xor
and
repnz
ret
aad
mov
cmp
dec
ds
idiv
rcrb
xor
subb
mov
loope
daa
jge
mov
sub
dec
push
mov
call
add
loopne
adc
aas
sub
cs
es
xor
push
out
int
lds
mov
add
jae
mov
mov
xchg
mov
xchg
add
icebp
mov
jns
lahf
scas
jecxz
push
mov
sbb
in
dec
jo
xor
movsl
repz
lock
xchg
inc
call
xchg
cmp
push
xchg
push
ja
pop
jns
sbb
mov
jnp
sbb
cltd
subl
lret
addl
pop
lcall
lea
add
xor
shrl
outsl
popa
inc
sbb
push
int3
or
into
shll
mov
stos
and
lahf
sbb
or
sub
inc
xor
inc
andb
fcoms
cmpsl
push
test
xchg
xor
push
bound
pop
out
jo
pop
not
movb
dec
aas
sti
imul
scas
leave
adc
dec
mov
or
sarb
sub
dec
cltd
mov
jbe
adc
pop
ds
fsubp
pusha
shlb
fsubp
imul
pop
int3
cwtl
push
lea
xchg
lea
in
and
fstpt
pop
mov
cmp
testl
xchg
jl
iret
cmp
aas
push
pop
cmp
into
cmc
jno
jg
shrb
add
fnop
and
xor
clc
dec
in
fildll
mov
lret
in
in
push
or
fstpl
xlat
push
arpl
mov
mov
mov
and
in
das
mov
mov
push
push
popf
jne
fidivrs
jo
jge
dec
mov
sbb
pop
mov
into
aas
cmc
push
jge
lret
ffreep
aam
dec
dec
gs
cwtl
push
xlat
mov
subb
adc
jl
dec
jne
shll
or
not
and
sbbw
ss
je
and
cs
pop
push
mov
push
loopne
push
lcall
mov
push
push
cltd
jno
sbb
andb
jge
insl
mov
mov
jl
fdivrl
sbb
repz
pop
nop
sub
testl
add
xor
jp
mov
ljmp
imul
scas
mov
sbbl
loop
inc
dec
sub
lcall
push
dec
push
test
mov
and
popa
rcrl
loope
movsl
inc
es
xchg
cli
inc
iret
insl
jnp
test
cltd
imul
rclb
xor
in
adc
or
push
std
jns
test
fs
inc
fldl2e
imul
movsb
ficoms
mov
cmp
and
adc
nop
xchg
sahf
ret
push
mov
lds
inc
insl
add
js
cmc
mov
stos
xor
mov
jp
mov
repz
lods
dec
add
loope
adc
sahf
js
adc
daa
or
inc
popf
jb
loopne
lahf
xchg
mov
ret
xchg
add
mov
cmpsb
enter
adc
sub
rolb
lds
cltd
cmp
dec
inc
xor
mov
icebp
test
nop
push
inc
xchg
xor
cld
xchg
or
iret
jo
bound
cmp
xchg
dec
pushl
fmuls
pop
nop
mov
pop
pop
lock
test
mov
xor
push
and
sub
xchg
ds
mov
and
jl
fstpt
aaa
or
xor
std
mov
aad
arpl
leave
dec
sbb
xor
lds
addb
mov
out
jb
jne
std
pop
arpl
sbb
shlb
lahf
pushf
out
adcl
mov
mov
adc
push
cmp
mov
inc
jge
into
out
imul
testb
sarb
dec
outsl
insb
jnp
adc
repnz
push
inc
jbe
sub
mov
push
rclb
jle
or
cwtl
cltd
jo
ffreep
xchg
mov
jg
std
xchg
xchg
mov
inc
cmp
out
cmp
pop
adc
out
mov
jecxz
inc
jmp
add
mov
int
cmp
aam
aad
pop
ret
rol
cmc
aaa
gs
ljmp
sub
dec
pop
cmp
sbb
movsl
fwait
mov
test
mov
shll
fdivl
xchg
dec
jns
bound
outsb
sbb
mov
dec
pop
and
popf
int
mov
arpl
fwait
je
imul
sbbb
mov
clc
mov
rol
sub
xor
lds
inc
or
mov
mov
and
or
arpl
or
mov
mov
mov
mov
push
rcr
dec
xor
je
mov
shlb
repz
lcall
shrl
mov
mov
outsl
repz
mov
pop
ss
fsub
movsl
notl
adc
imul
imul
fcoms
negl
aam
sub
pop
hlt
adc
mov
insb
ss
lea
data16
lahf
mov
xor
mov
inc
fstps
sahf
cltd
push
add
fldcw
and
rcrl
push
mov
push
mov
mov
sbb
jne
jb
rcl
xor
mov
sub
dec
jae
ljmp
ffreep
filds
xchg
loopne
cmp
pop
arpl
in
jb
push
test
in
inc
xchg
xor
mov
pop
stos
mov
jge
pop
xchg
sti
loopne
cmp
ja
jmp
push
leave
movsl
pop
push
sbb
ss
int3
aad
into
test
add
pop
inc
test
or
jge
xor
jp
enter
xor
mov
mov
sub
sub
mov
push
mov
adc
das
pop
sub
ret
faddl
popa
mov
mov
push
xor
adc
fwait
dec
aam
mov
lods
push
cmc
fstpt
sahf
pop
jnp
loopne
inc
pop
vcvtsi2sdl
jne
jmp
mov
syscall
aad
and
cmp
xor
adc
adc
add
or
dec
cmp
push
pusha
inc
mov
ret
in
lahf
mov
lods
idivb
sbb
es
stos
dec
orl
push
je
aam
push
xchg
outsl
dec
pop
int3
push
pop
push
adc
out
adc
repz
adc
out
ret
sti
dec
xchg
inc
ds
sbb
xchg
bound
andb
out
in
or
pop
mov
push
mov
sbb
inc
push
xor
enter
shrl
xor
sub
xchg
call
xchg
jg
repnz
sbb
mov
or
into
mov
or
xlat
dec
notb
icebp
push
pop
or
xlat
inc
mov
sub
jl
pop
sub
nop
pop
pusha
int
xchg
mov
xchg
nop
mov
test
xlat
dec
jae
mov
cmp
dec
popa
lret
xchg
data16
xor
sbb
and
pop
aas
ja
repz
add
repnz
sbb
out
decb
jle
arpl
cmp
imul
decb
inc
and
jbe
and
cmp
std
adc
and
and
test
fistpll
sahf
mov
or
or
jne
mov
xor
pop
add
scas
jne
imul
rcrb
enter
or
add
xchg
mov
lods
bound
mov
loopne
hlt
sbb
lcall
inc
jge
ret
or
clc
das
lods
bound
inc
cmp
sub
cltd
and
pusha
inc
push
insl
iret
cmp
outsl
or
int3
cmc
icebp
jmp
sub
aad
mull
popf
inc
lock
decb
or
sub
in
jle
pop
aas
lahf
sbbl
jnp
fdivl
nop
and
pop
addb
mov
mov
sbb
xor
mov
adc
in
loope
lahf
jb
fs
inc
pop
mov
push
inc
int
mov
jo
sub
dec
cmc
les
shll
pop
jo
insb
push
push
sub
jl
xbegin
pushf
or
out
in
popf
je
and
std
movsl
sub
mov
stos
inc
pop
xchg
dec
pop
inc
es
dec
ljmp
insl
xchg
pusha
cmp
xchg
sub
adc
sbb
pop
std
into
inc
popa
cli
mov
mov
xchg
movsb
xor
mov
movsb
lods
mov
sbb
push
pop
cmp
lea
jbe
fucomp
js
and
pop
cmp
xlat
mov
and
cmpsb
std
mov
push
bound
dec
in
flds
imul
inc
xchg
mov
mov
push
lcall
mov
js
xor
sarb
push
ffreep
pop
pop
pushf
jne
mov
adc
jbe
or
je
add
mov
movsl
inc
subb
pusha
cltd
repnz
insb
push
movsl
scas
enter
ret
ret
iret
xchg
push
roll
lcall
jle
push
fs
sub
movsl
or
repnz
decb
hlt
inc
fiaddl
and
or
or
mov
movsb
mov
lahf
decb
roll
mov
dec
cmc
mov
sub
dec
dec
movsb
in
lods
clc
rorb
mov
in
std
sbb
push
es
inc
xor
pop
pop
add
jle
mov
mov
pop
fnstcw
cs
std
pop
ja
inc
push
arpl
push
int
inc
sub
pop
push
xchg
scas
inc
dec
inc
cmc
mov
icebp
cltd
and
cmp
xor
sbb
incb
pop
jp
mov
sarb
lods
push
sub
sub
cmpsb
daa
outsb
inc
adc
daa
addr16
test
inc
xchg
fstpl
mov
fcoms
add
xchg
mov
shlb
movsb
fcmovnu
lret
leave
and
rcrl
notl
lahf
test
es
pop
insb
adc
cmpsb
fstl
nop
fs
loope
out
outsl
lock
xor
pop
pop
fndisi(8087
jp
add
add
mov
arpl
loop
adc
scas
out
icebp
push
inc
loope,pt
int3
or
xor
stos
push
pop
push
idivl
jge
or
dec
in
outsl
or
inc
mov
mov
xor
pop
mov
mov
and
in
inc
cmp
cwtl
mov
rorb
mov
out
xchg
xchg
mov
add
ret
xchg
jae
xchg
cmpsb
mov
ret
xor
mov
rorb
pop
aam
add
mov
mov
inc
jl
mov
test
lret
in
push
xor
sbb
into
xor
sub
push
pop
ss
stc
sbb
or
imul
adc
fstp
mov
out
mov
jg
jg
scas
adc
stos
pop
push
pop
jle
cmp
ret
repz
vshufps
and
js
jb
scas
test
fstpl
jmp
adc
or
cmc
jge
mov
addr16
in
sub
jno
scas
push
cld
mov
popf
mov
outsl
dec
test
movsl
jge
and
add
sbb
ja
cmpsl
fs
int
inc
clc
mov
lcall
mulb
lcall
fs
mov
in
fsubl
shrb
push
fsubp
jns
adc
xchg
jecxz
imul
push
mov
xor
aas
adc
pcmpgtw
dec
inc
lret
mov
mov
or
loope
xchg
sbb
icebp
mov
aam
ret
daa
xor
mov
mov
xchg
and
inc
inc
scas
mov
mov
mov
sub
push
sahf
jbe
aaa
mov
arpl
sub
push
and
cmp
jmp
mov
sbb
and
test
shll
mov
stc
cmp
negl
rorb
pop
or
pop
push
sbb
je
int
fsubrs
dec
int
incb
jb
pop
lods
lds
lods
inc
or
xor
repz
int3
rcrb
int3
adc
fidivl
add
cmp
ds
imul
push
test
pusha
mov
xor
ret
jns
mov
cmp
popf
adc
or
adc
jmp
pop
and
movb
jae
mov
push
inc
stc
cltd
fadd
sub
cld
lcall
mov
sahf
cmp
jmp
pop
imul
jp
xchg
mov
pop
jg
sub
std
adc
stc
mov
push
arpl
dec
mov
mov
pop
call
mov
loopne
outsl
xchg
xchg
clc
mov
shr
insl
pop
xchg
sti
push
jnp
icebp
or
dec
mov
test
jne
push
sub
cmp
out
mov
jo
push
jae
test
cltd
leave
lods
add
mov
mov
loope
ficoms
jne
addl
sti
xchg
call
adc
out
cmp
cmp
adcl
cmc
add
pop
dec
pop
push
cmpsl
cmp
sbb
std
mov
mov
lcall
jle
aas
mov
fs
and
jne
mov
add
pop
mov
rorl
call
mov
add
enter
or
int3
shl
test
sub
xor
pop
pop
push
and
fs
jecxz
pop
shlb
push
jnp
test
cmpsl
decl
iret
sbb
je
sbb
lahf
sbb
rol
add
addl
movsb
add
decb
push
sti
dec
lea
mov
cld
cmp
out
pop
xchg
icebp
add
shll
mov
push
push
fmull
jmp
rolb
pop
movsl
dec
pop
mov
shrl
mov
shrl
ljmp
sub
daa
leave
out
adc
rclb
mov
arpl
iret
dec
out
dec
bound
jmp
push
outsb
ret
pop
stos
xchg
in
push
int
pop
and
js
es
jo
sub
ror
pop
mull
and
stc
fcomps
dec
faddl
jae
mov
adcb
mov
bound
jae
insl
xchg
and
stos
jno
nop
mov
adc
lret
push
cmp
insb
ret
cmpsb
aam
xor
pop
push
sub
lret
jo
rclb
xchg
outsb
lods
lret
sub
ret
or
jmp
imul
daa
add
rcr
jno
iret
sbb
add
inc
pusha
sub
or
xchg
push
cmp
or
cld
inc
inc
es
add
pop
jmp
xor
out
ds
inc
xor
push
dec
imulb
std
daa
faddl
das
fistpl
jb
arpl
mov
ljmp
adc
pusha
js
lcall
test
inc
cmpsb
push
test
adc
inc
leave
sub
xor
mov
scas
pop
adc
mov
sti
pop
repz
stos
add
popf
shll
cmp
fmull
xor
mov
testl
std
adc
add
sahf
mov
ja
cwtl
cmp
sub
lea
lock
inc
fdivs
je
movsl
add
scas
jne
ljmp
shlb
mov
jl
es
hlt
clc
rcll
dec
cltd
pop
push
pop
dec
jns
mov
stc
fsubrs
sbbl
mov
and
pop
cli
daa
cmp
xor
jne
adcl
sub
push
fnstcw
mov
int
or
cmc
push
addl
xor
idiv
xchg
stos
pop
in
fnstcw
fmuls
inc
hlt
jne
push
sub
nop
inc
call
fwait
shr
or
fistps
cmp
push
clc
push
loopne
js
fidivrl
sarb
cltd
mov
and
xchg
fistpl
int
cmp
jns
or
push
mov
iret
adc
xchg
hlt
mov
mov
loope
incl
insb
out
ret
mov
pop
sub
cmp
nop
push
lds
dec
inc
pop
mov
pusha
cmp
inc
lcall
icebp
sub
xor
sbb
sbb
or
mov
loope
jne
cmp
jbe
mov
cmc
cmpsl
inc
jae
xchg
jnp
nop
jb
cli
jno
movsb
movsb
pop
push
push
es
dec
lahf
dec
int3
movl
or
inc
das
sti
xor
test
jge
aad
mov
xchg
fcmovnbe
mov
mov
mov
add
dec
fcoml
das
pop
push
push
fidivl
mov
pusha
cmp
mov
mov
jo
fsubrs
lods
cmp
lds
hlt
mov
add
adc
inc
hlt
repz
jp
imul
nop
popa
push
leave
ret
xor
hlt
adc
push
andb
in
xchg
ud1
dec
or
cmc
pop
lods
inc
aam
xor
push
sbb
bound
arpl
inc
jns
outsl
pop
or
cmpsl
pop
arpl
pop
mov
push
push
mov
and
sub
test
add
lret
mov
out
cmp
pop
add
cs
add
push
mov
push
outsl
fldlg2
sub
adc
xchg
mov
and
pop
and
mov
cmp
xor
mov
sub
jno
xchg
dec
neg
dec
lods
pop
aad
and
push
cmp
cmp
and
mov
inc
xchg
cs
adc
fidivs
inc
xor
lret
outsb
push
sbb
shrb
mov
call
fs
vmovntdq
dec
movsl
dec
lar
int
dec
or
mov
repnz
push
or
clc
imul
and
cmp
add
stc
test
dec
push
push
xlat
gs
add
mov
jae
stos
loope
mov
ja
cmp
aaa
dec
and
out
xor
lret
imull
cs
mov
or
push
adc
jle
mov
ret
movsb
dec
dec
and
push
pop
aaa
ss
mov
sub
or
inc
je
cmp
cmp
cmp
data16
or
out
mov
sbb
cmp
xchg
and
cmpsb
fimull
pop
inc
dec
mov
fcmovbe
sub
popf
ret
or
gs
and
pushf
orb
sub
loop
dec
dec
cmpl
push
aad
stos
inc
add
xlat
fmulp
inc
stos
or
push
in
inc
jnp
jne
adc
mov
pop
sarl
add
push
call
sub
dec
inc
xchg
cmp
fistps
jp
jg
push
jno
push
add
push
aam
mov
mov
insb
dec
mov
xor
movups
out
scas
pop
in
scas
das
out
pop
pop
pop
or
pop
inc
mov
cmp
push
ja
aas
ljmp
lahf
lock
jecxz
mov
add
xchg
mov
xchg
push
je
in
loope
call
mov
hlt
nop
or
hlt
xor
leave
shrl
adc
fcomps
pop
fsubrs
jl
adc
addb
mov
aam
push
dec
leave
adc
xchg
xor
sti
imul
dec
xchg
scas
lods
mov
sub
and
test
cmc
fwait
sbb
adc
and
cmp
out
loopne
xor
sub
mov
sbb
push
int3
push
out
js
jge
add
and
or
cld
fucomp
push
pusha
ror
lret
xchg
or
hlt
pusha
cld
into
sbb
sarb
xor
call
adc
or
fmul
dec
stos
push
jle
js
adc
lcall
fwait
mov
and
sub
jp
pop
jg
aaa
xlat
stos
mov
dec
stos
xchg
iret
int3
add
push
cmp
stos
das
xchg
adcl
xchg
sub
mov
fcmovnb
idivl
lret
xor
jno
mov
lock
mov
in
and
jge
or
clc
pusha
pop
jl
stos
stos
in
jb
lahf
test
loopne
push
xchg
imul
test
not
sarb
invd
fldenv
std
add
shrb
insb
mov
jbe
js
inc
or
dec
lea
jno
out
rclb
iret
push
mov
add
icebp
in
es
jecxz
and
clc
xchg
icebp
jo
call
inc
stos
xchg
mov
sub
mov
in
jbe
sahf
push
fsubs
outsb
inc
les
adc
mov
and
aaa
adc
enter
adcl
pop
aas
cld
cmp
sbbb
ret
fisubs
push
jne
push
inc
loope
dec
pusha
xor
ss
ja
xor
into
mov
jnp
imul
insb
aam
mov
inc
stos
xor
push
sub
lods
or
or
ds
in
jno
adc
pop
and
mov
insb
pop
xchg
push
sub
mov
cmc
into
xchg
test
dec
mov
mov
rclb
ja
sarb
aas
mov
stos
je
dec
clc
pop
aas
mov
arpl
out
outsl
pop
std
mov
les
aas
mov
push
xor
cltd
push
aam
xor
push
dec
insb
lock
adc
sahf
jecxz
and
test
rcll
mov
mov
sub
sub
add
xor
stos
pop
in
mov
out
roll
jne
jle
das
rclb
sbb
jae
lret
xchg
pushf
push
jmp
clc
sub
xor
ret
jge
adc
add
stc
pop
sbb
insl
stc
mov
in
mov
push
mov
fcomps
fistpll
mov
cmp
out
aas
jne
adc
sbb
inc
in
jb
xchg
mov
push
loope
lret
aas
lahf
mov
sbb
es
imul
push
test
xor
es
cld
push
jecxz
pop
and
ret
sub
aaa
jne
add
inc
ja
xchg
pop
shr
xor
in
fnstenv
inc
sub
push
ret
sub
xchg
cmpsl
in
test
push
out
fidivl
jb
add
lahf
add
push
mov
rcr
stos
inc
or
xchg
jl
fnsaves
es
jle
add
mov
cwtl
xchg
leave
adc
mov
aam
hlt
cmp
cmp
xchg
in
fdivrl
popa
mov
add
out
bound
push
or
in
cmp
pop
adc
fldcw
jno
into
inc
jg
sub
in
pop
mov
cli
mov
and
arpl
int3
xor
adc
sbb
inc
mov
iret
mov
push
pop
mov
cli
mov
ljmp
repnz
mov
push
sub
inc
sbbb
mov
jle
push
dec
clc
sahf
aam
filds
sub
dec
or
push
and
cwtl
rcl
das
push
jb
pop
shll
mov
aam
and
mov
cmp
jg
ret
dec
inc
rcrl
push
sbb
loope
push
or
mov
stc
xchg
mov
imul
jne
inc
ret
lods
fsubs
jge
fidivrs
add
jl
pop
shlb
aad
sti
jnp
pop
lea
mov
gs
or
or
inc
ret
mov
and
xorb
outsb
push
iret
push
pop
and
cld
bound
fnclex
xor
mov
push
cmp
sbb
push
popf
push
sub
fildll
cwtl
sbb
xor
xor
xor
mov
scas
sub
pop
sub
enter
mov
xchg
fiadds
or
xor
jbe
lods
dec
insl
dec
mov
ds
and
in
push
aaa
loopne
es
jge
fsubs
jl
mov
cmpsl
int
cmp
mov
fwait
orb
inc
pushl
fistl
add
adc
push
cld
and
ret
es
sbb
add
rorl
adc
bound
pop
push
repz
xchg
dec
xchg
insl
test
ficoml
sbbb
aas
add
ret
das
add
sahf
lahf
cld
jle
pop
lds
es
or
mov
ja
sub
loopne
sub
ret
jg
lock
call
add
sbb
add
cmp
out
adc
mov
mov
or
xor
jne
and
and
jg
xchg
inc
push
push
cs
jo
sub
push
and
test
arpl
or
test
add
jecxz
pusha
cmpsl
movsl
lods
xchg
jp
insl
mov
stc
sbb
fnstenv
push
push
mov
subl
cmp
stc
dec
ljmp
and
add
and
stc
pop
les
mov
mov
stos
jne
rorb
iret
cmp
test
mov
jecxz
jecxz
mov
sahf
jmp
inc
adc
aam
xor
aas
lods
sub
jge
push
lret
cli
hlt
add
sub
pop
popa
lahf
add
and
out
call
xor
cmp
cmc
xchg
cmpsl
js
stos
dec
insl
xor
sbb
repnz
adcb
inc
or
lret
lret
adc
jecxz
push
push
cwtl
imul
sbb
add
outsb
jb
add
fisubl
std
push
adc
addl
cld
fildl
sbb
pop
inc
xchg
jecxz
adc
cmp
gs
inc
jo
add
push
xor
sti
ljmp
je
push
jno
sbb
and
out
push
adc
mov
std
popa
movsl
in
mov
jp
lock
in
cmp
cwtl
mov
jae
inc
and
fiaddl
loopne
jmp
push
outsb
test
add
inc
es
scas
movsb
cmp
lea
adc
ja
popf
xor
outsl
cmp
jb
daa
loopne
aad
movsb
les
and
adc
or
jbe,pn
enter
lret
mov
and
jo
cmpsl
lret
jae
xor
adc
adc
xor
mov
sbb
lds
repnz
dec
arpl
arpl
out
xchg
mov
test
mov
imul
dec
cmpsb
mov
ret
pushf
dec
movsb
pop
mov
dec
mov
insb
les
mov
fistl
sub
popf
xor
mov
pop
je
scas
cltd
push
mov
scas
cltd
movsb
fwait
sub
hlt
leave
jmp
jbe
cmc
scas
add
inc
ret
iret
add
cmp
dec
mov
push
repz
lcall
push
jne
adc
dec
in
push
mov
sub
push
adc
inc
or
lock
shlb
in
add
movsl
aas
xchg
mov
mov
rcll
cmp
mov
xor
popf
pusha
cmp
xor
push
out
aaa
lods
jge
jg
push
testl
dec
mov
js
orl
sub
mov
sbb
test
inc
fsubrp
stc
imul
int3
repz
mov
cmp
repnz
aam
inc
popf
mov
push
shr
insl
sbb
pop
cli
scas
scas
xchg
inc
mov
add
ficoml
sbb
ljmp
imul
pop
mov
xchg
jnp
imul
pop
movsb
dec
jl
pop
adc
ds
xchg
aam
ret
sbb
push
mov
xlat
add
inc
push
shl
mov
cmp
sub
sub
fstpl
push
inc
rolb
arpl
xchg
iret
sbb
out
outsb
andb
adc
mov
xor
and
sub
rcll
jge
adc
or
cmpsb
loop
adc
aad
jnp
add
inc
shll
mov
sub
sub
cmc
and
shll
xor
iret
dec
lcall
dec
les
and
xor
out
movsl
sti
stc
mov
popf
dec
pop
arpl
pop
or
sub
fsubrp
nop
leave
or
mov
jp
cmpsl
fs
or
rolb
push
in
pushf
das
int
out
xor
popl
dec
add
jl
jle
daa
add
cmp
out
pop
mov
push
ljmp
mov
fnstcw
mov
mov
pop
push
inc
mov
mov
ljmp
inc
je
cwtl
mov
xchg
cltd
jecxz
ds
push
sub
and
cmp
push
and
jmp
lcall
sti
clc
loope
mov
dec
add
sbb
loop
jecxz
in
mov
sub
rclb
out
cwtl
sbb
out
sub
and
jmp
and
dec
xchg
stos
inc
xchg
push
and
lock
mov
js
rorb
int3
iret
rorb
or
adc
sarb
lods
cs
sub
popa
and
popf
push
stos
out
scas
daa
addb
rclb
pop
pop
ljmp
aam
xor
loopne
sub
jb
aaa
inc
dec
icebp
jns
leave
or
hlt
or
mov
loop
mov
repz
cmpsl
ficompl
push
pop
cld
or
shll
jmp
fimuls
pop
sbb
cwtl
loopne
loope
push
fsubrs
inc
orl
sub
lahf
ret
sub
leave
into
sub
call
lods
inc
sub
push
insl
adc
adc
sbb
add
or
insb
pop
and
dec
ret
das
jle
mov
add
iret
push
push
xor
insb
cmp
out
push
sbb
cmc
sahf
ljmp
aam
xchg
scas
out
imull
jg
in
xchg
ret
and
cltd
lods
shrl
adc
pop
xor
aad
xchg
adc
int3
ret
mov
mov
sub
xor
jmp
pop
mov
movsb
arpl
and
xlat
inc
xchg
das
in
cld
inc
xchg
add
pop
popf
mov
loop
jae
int3
rcr
cld
lret
and
sub
push
xchg
testl
sub
enter
and
jb
inc
xor
js
mov
outsl
loop
add
cltd
add
outsl
or
cmp
sbb
jg
adc
lods
sub
xor
fsubs
js
aas
push
cmc
sub
dec
sub
pop
rcrb
ror
stos
mov
pop
bound
sub
fs
ljmp
cli
add
mov
pop
pop
leave
jb
mov
jno
jge
lea
sbb
test
inc
pop
arpl
iret
push
lods
xor
shrb
insl
pop
and
aam
mov
lds
jl
aam
fisubrs
ds
call
jge
xor
nop
repnz
mov
xchg
cmp
out
shlb
cmp
mov
dec
xchg
cwtl
push
imul
fwait
inc
and
add
mov
or
jno
insl
aad
sahf
pop
daa
cmpsb
mov
fstl
inc
or
and
ljmp
loope
inc
iret
and
cmpl
jl
and
pop
test
sub
cmp
ljmp
push
mov
rcrb
push
or
add
pop
jge
ud0
xor
sub
add
sub
or
cwtl
arpl
call
xor
out
jg
pop
sarb
adc
jnp
sbb
in
dec
iret
xchg
scas
jne
sub
insl
fs
mov
movsb
shrb
sbb
adc
pusha
arpl
imul
mov
icebp
pop
xchg
xor
leave
xchg
pusha
xlat
repz
xchg
test
xor
mov
xchg
xchg
insb
jge
or
sbb
and
lods
or
pushf
ret
sbb
insb
lods
cwtl
subl
aad
addr16
test
rolb
popl
and
inc
push
es
cli
add
shll
push
mov
push
les
mov
sarb
dec
cmp
pop
cmp
and
pop
or
add
gs
sbb
cmp
sbb
sub
cmpsb
adc
es
mov
ror
xchg
cltd
fnstcw
scas
mov
jno
out
mov
cld
stos
pop
sub
sti
testb
mov
aaa
mov
bound
cltd
mov
pop
clc
and
notl
inc
pushf
adc
mov
add
popf
push
insb
in
out
mov
enter
mov
add
mov
stos
dec
data16
xchg
testl
outsb
scas
cmpsl
mov
sub
stos
pop
xchg
sub
push
jnp
into
movsb
clc
sbb
jns
cmp
inc
in
aad
inc
xchg
mov
lds
xor
sbb
ja
int3
jns
sarb
stos
jl
pop
xchg
cmc
inc
pop
cs
test
jo
xchg
ret
aam
data16
dec
inc
pusha
mov
cwtl
xor
aam
mov
and
in
sbb
sahf
stos
mov
mov
pop
jnp
idivb
mov
adc
ljmp
sub
icebp
call
jno
out
iret
fmul
out
es
xchg
mov
outsb
lahf
mov
loopne
aas
sahf
aam
add
ja
push
mov
pop
in
mov
xchg
cltd
in
and
mov
imul
push
or
adcl
lcall
mov
jne
insb
mov
loope
pop
dec
loopne
ja
and
les
sbb
fincstp
adc
mov
ljmp
lahf
dec
popa
jle
adc
jge
mov
into
xor
dec
arpl
sbb
push
xchg
sarb
pop
ljmp
sub
movsb
and
cltd
inc
adc
imul
aas
hlt
adcb
and
lret
xchg
test
mulb
rol
je
ja
cwtl
pushf
xlat
js
mov
jb
push
or
push
testl
in
ds
xchg
sub
imul
mov
inc
dec
sbb
add
and
and
mov
in
pop
loop
cld
aam
mov
mov
dec
mov
xchg
push
pop
mov
in
cmpsb
das
inc
mov
pusha
outsl
mov
xor
dec
and
cs
lahf
cmc
mov
cmp
aam
mov
stos
mov
and
imul
filds
mov
cs
cli
ret
icebp
loope
jo
cmp
std
lahf
jns
pop
mov
imul
fwait
sahf
add
idiv
insb
sbb
pop
mov
cmp
dec
out
mov
loop
sub
push
mov
push
nop
mov
jmp
iret
into
sub
add
call
in
ror
int3
sub
sahf
mov
sbb
repz
xor
push
icebp
dec
inc
mov
mov
fnclex
sub
lea
pop
out
xchg
fcompl
std
dec
in
ds
data16
jnp
movsb
cltd
dec
insl
in
adc
rclb
movsb
jmp
cmp
out
lds
or
cltd
rcrb
lret
jp
mov
add
mov
pop
jns
mov
xchg
inc
pusha
push
sub
pushf
call
mov
mov
mov
push
push
test
add
pop
clc
mov
push
fisttpl
and
inc
jne
adcb
add
or
mov
push
mov
add
insl
and
cltd
mov
dec
call
jp
push
and
nop
sub
mov
popf
mov
test
fcompl
push
mov
cwtl
mov
fistpll
xchg
mov
mov
push
push
loop
sar
and
push
dec
cmp
clc
call
pushf
push
mov
mov
pushf
pushf
pushl
ret
add
inc
gs
outsl
fs
gs
imul
add
mov
bswap
movzbw
setbe
bswap
lea
jmp
clc
call
not
pop
jmp
push
ret
ja
bound
jecxz
cmp
ds
jne
aas
dec
daa
fimull
scas
mov
popa
sbbb
scas
dec
push
mov
shr
cmp
sbb
pop
ljmp
sub
sbb
xchg
xor
mov
or
sub
fsubrp
adc
mov
out
push
mov
or
lret
adc
jge
cli
jmp
insb
or
and
adc
and
jnp
fwait
sub
in
pushf
call
sub
mov
ja
push
pop
xchg
mov
repz
lret
mov
fscale
loopne
lcall
adc
sub
ss
mov
ds
mov
jl
aaa
or
jge
or
adc
inc
fdiv
or
add
test
ja
clc
clc
imul
clc
pusha
add
push
pushf
pushf
pushf
lea
jmp
insl
inc
fs
ja
test
mov
mov
negl
xchg
loope
mov
ja
rcll
clc
or
sub
loope
mov
pop
adc
scas
mov
dec
push
pop
jno
aas
loop
insb
rorl
xor
fwait
movsl
mov
and
dec
imul
fdivl
mov
xchg
popf
sbb
push
sti
xchg
lahf
xchg
and
mov
cld
gs
inc
shlb
jno
mov
je
or
or
int3
or
pop
adc
int
jb
and
test
je
sahf
test
push
or
fwait
adc
mov
test
mov
mov
jl
mov
lcall
push
jnp
cmpsb
dec
leave
addr16
je
rcrb
loopne
pop
incb
sbb
aaa
and
jns
popf
mov
sbb
into
push
jno
movsb
mov
push
pop
push
ja
inc
daa
gs
adc
hlt
test
push
mov
fisttpll
or
lahf
cmp
cli
pop
xchg
xor
arpl
or
shl
in
push
mov
ret
xor
xor
into
dec
shll
testb
cltd
ds
dec
and
mov
ds
les
add
out
arpl
push
xor
add
lea
xchg
scas
cmp
scas
test
imul
bswap
movzbw
lea
pusha
movw
pushf
lea
call
pusha
pushl
lea
jae
pusha
lea
pushl
lea
call
push
call
jmp
mov
not
jmp
lea
ja
clc
test
add
jmp
pushl
repnz
mov
lea
jne
cwtl
not
movsbw
mov
movb
push
pusha
movsbw
mov
lea
movsbl
cwtl
lea
pusha
movb
movl
jmp
jmp
mov
arpl
repz
mov
test
xor
pushf
sti
repz
pusha
push
inc
sbb
stos
pop
js
jg
sahf
aad
xchg
xor
ljmp
push
ss
and
dec
and
mov
push
xor
ja
inc
jp
cmp
lret
sub
dec
xor
inc
and
lea
repnz
jne
cmp
push
fdivs
mov
mov
dec
sbbb
sub
dec
inc
mov
hlt
push
ficomps
adc
shlb
ja
insb
lcall
add
xor
sub
shrl
lea
jb
clc
aaa
mov
stc
shl
pusha
movb
cmp
add
jmp
sbb
jmp
bts
dec
mov
jmp
int3
pop
xchg
push
ja
adc
dec
sub
int
sbb
cmp
inc
iret
scas
xor
or
cli
inc
jecxz
lahf
mov
add
aam
ja
ret
pop
jo
xchg
addb
dec
pop
scas
sub
ret
lods
test
pop
mov
xchg
adc
shl
addb
out
cli
test
mov
jecxz
sbb
repnz
movsl
dec
mov
cmp
lods
test
pop
mov
imul
testl
xchg
dec
mov
push
or
outsl
insl
ja
pop
outsl
or
enter
mov
aaa
inc
mov
testb
stos
push
add
js
push
jns
cmpsb
xchg
cmp
leave
push
ja
aad
repz
sub
test
xor
inc
mov
jbe
dec
mov
mov
mov
mov
pop
outsb
out
pop
in
or
push
inc
mov
test
hlt
scas
inc
fsubr
ficomps
fidivrs
xorl
sbb
outsb
dec
aaa
add
mov
addb
popf
jecxz
testb
adc
xor
dec
je
push
push
mov
mov
sub
and
mov
popf
cmp
jae
popa
mov
mov
int3
push
rorb
int3
ja
sbb
pop
sbb
adc
push
and
xor
pop
popf
outsl
addw
cmp
sti
push
cmp
jbe
dec
push
pusha
lea
ja
call
xor
mov
xor
add
daa
inc
data16
mov
xchg
ja
int3
scas
imul
push
into
ljmp
andb
decl
cltd
movsb
push
pop
sbb
xor
into
sbb
ficompl
pop
jae
push
fcoml
inc
xchg
daa
fbstp
lock
jg
les
iret
and
push
out
jl
and
in
add
aam
int3
stc
adc
rorb
mov
call
clc
pop
fwait
cmpb
mov
test
mov
or
add
xchg
leave
or
stos
mov
scas
scas
repz
outsb
xchg
scas
jno
xchg
ret
and
ret
comiss
fisubrs
repnz
xchg
fistpl
aam
and
sbb
shll
and
sub
adc
dec
lea
test
rclb
jne
push
jae
cltd
das
dec
data16
movsb
mov
out
mov
cmp
push
sti
incl
js
cs
lods
inc
test
sub
mov
fists
movb
cltd
mov
clc
mov
stc
jge
adc
mov
movsl
push
ret
shrl
stc
ret
xor
cmpsl
sub
jge
jecxz
test
dec
fidivrl
shlb
pop
mov
stos
test
mov
inc
ficoml
data16
adc
aas
push
and
cmpsl
sarb
jo
inc
cwtl
ljmp
inc
push
sbb
inc
decl
cmp
push
stos
push
insl
xchg
lods
iret
or
inc
iret
pop
fimuls
popf
pushf
pushf
call
cmp
loop
in
or
mov
ds
add
sbb
jb
cltd
pop
mov
fs
or
cs
aaa
ja
push
xchg
pusha
pop
test
and
lock
arpl
sahf
push
jb
and
and
pop
stos
sub
popa
fcomps
sbb
imul
and
xchg
sub
jge
xor
das
cmp
ljmp
aad
inc
pushf
push
pushf
lea
jmp
or
pusha
lea
je
call
rcl
jno
ja
insl
mov
lds
and
jg
xor
sti
std
sbb
cmp
lret
dec
or
mov
shrb
push
arpl
test
test
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
push
ja
jb
sub
pop
mov
xchg
lods
cmp
mov
cmp
mov
les
jecxz
cmp
pop
or
fxch
add
xor
pushfw
lret
lcall
sub
sbb
pop
adc
inc
add
lea
dec
cmp
daa
dec
jnp
sbb
shlb
lret
pop
out
pop
and
push
loope
xchg
pop
jl
inc
stc
and
adc
call
pop
jmp
cmp
add
sub
cmp
pusha
add
pushf
mov
jmp
clc
xor
pushf
call
adc
fdivrs
mov
or
ja
shll
rorb
pop
sub
add
sbb
movsb
pop
ja
xor
and
or
add
jp
jbe
sbb
push
xor
jl
mov
xchg
jnp
stc
push
xchg
dec
mov
roll
jbe
adc
push
jl
or
scas
ret
xchg
setge
cmp
in
jecxz
fidivs
add
mov
call
add
pop
ret
movw
sbb
pushf
movw
mov
lea
mov
push
pusha
pushf
lea
jmp
leave
test
data16
sbb
lcall
add
shr
nop
aad
dec
popf
lahf
aas
inc
sarl
outsl
popf
dec
adcl
and
inc
clc
add
dec
cmp
mov
dec
sub
inc
fs
popf
pop
cmp
sub
adc
dec
jle
sbb
xchg
and
push
icebp
cwtl
xor
mov
and
es
mov
cmpsb
fidivs
ror
push
lcall
push
out
sbbl
sub
les
jmp
stos
lods
pop
sbb
movsb
mov
gs
and
js
imul
pop
scas
or
es
pop
rcr
xlat
sub
inc
shlb
loopne
jae
out
test
aaa
dec
loop
or
ror
jne
icebp
xchg
jge
out
or
jae
dec
das
ja
addl
ds
jle
outsb
and
pop
outsl
xchg
pop
mov
push
addl
mov
or
inc
or
add
and
push
lods
inc
pop
cmp
add
mov
inc
jge
shlb
or
xchg
scas
jl
adc
cmpsb
cmp
and
push
call
insb
int3
mov
sub
push
adc
cmpsl
pusha
scas
dec
pop
jb
sahf
mov
push
xchg
roll
nop
sub
sub
mov
test
enter
sbb
xor
add
ja
das
inc
in
mov
xor
clc
nop
mov
ljmp
popf
ljmp
in
inc
adc
xor
insl
out
and
push
lret
gs
mov
incl
pop
pop
push
xchg
mov
xor
aad
insb
cmp
push
icebp
pop
insl
arpl
jmp
sub
inc
insb
in
les
ret
fdivl
rol
rorl
pop
push
lods
jp,pn
fnstenv
mov
xchg
cltd
mov
cmp
inc
jle
xchg
mov
inc
out
or
jbe
and
jne
mov
aas
fdivl
dec
adc
loop
mov
les
ljmp
clc
ret
repz
mov
int3
jb
in
rcll
nop
jno
and
xor
mov
and
xchg
mov
adc
inc
pop
mov
add
cmpsb
out
or
sub
xchg
ret
out
call
cmp
jecxz
and
cmp
movsl
cmp
arpl
inc
add
jge
lret
mov
outsl
or
sti
add
pop
cmp
sub
push
daa
cmc
cs
jno
add
inc
and
aam
ret
lock
cs
adc
ja
adc
lret
es
push
jno
lahf
scas
les
pop
pop
pop
int
stc
add
xchg
sub
jecxz
pop
mov
xor
imul
shll
push
js
gs
std
mov
sub
ss
insb
nop
fwait
out
and
fistl
pop
test
fwait
xchg
mov
and
notb
mov
adc
mov
push
mov
mov
insl
movsl
inc
xor
insb
adc
pop
jle
aam
aam
and
sub
inc
cmp
into
lock
aad
and
xor
lea
aaa
lret
nop
test
pop
jo
jg
sbb
test
cmp
btc
rcr
movsbw
mov
stc
bt
push
or
pushf
jmp
jmp
adc
inc
popa
movl
xor
sub
dec
icebp
imul
cld
fdivl
xchg
inc
int3
push
sti
dec
dec
test
or
inc
pop
nop
push
cmc
scas
sub
mov
sub
insl
sahf
cmp
test
xor
dec
aad
xchg
cmp
addr16
fcomi
adc
aas
push
insl
adcb
dec
xchg
jb
ss
pop
xchg
push
or
ljmp
lea
add
pop
pop
lds
xchg
mov
or
sub
xor
push
mov
push
cld
fldl
cmc
int3
jl
mov
loop
cmp
testb
xor
jns
cmpsl
add
jl
repz
sbb
call
clc
add
clc
pop
ror
pop
push
pushf
stc
test
cmp
call
add
inc
gs
fs
jo
gs
dec
outsb
outsw
add
mov
ja
cs
xchg
lret
jo
lret
in
or
aad
pop
lret
in
xor
lret
in
aas
and
je
stos
jecxz
or
xchg
addr16
and
or
jo
xor
out
cmp
push
mov
test
inc
ficoml
cmpsb
rcrb
ds
int3
shll
inc
cmp
enter
dec
mov
cld
inc
jecxz
out
lods
sbb
ret
sbbl
or
sbb
jb
lea
sbb
sub
in
inc
inc
lcall
cld
faddl
stos
sub
lret
mov
sbbl
xchg
shll
insb
or
loop
popw
push
mov
rcrb
rcl
call
jb
clc
jmp
mov
not
mov
lea
lea
jge
pusha
pushf
lea
call
pushf
pushf
mov
cmc
lea
jge
push
jmp
insb
fistl
ja
jne
sbb
ds
nop
sub
cs
add
outsb
jo
add
mov
jno
mov
xor
ljmp
sbb
jne
int
mov
test
stos
movq
xchg
fstpt
xchg
test
pop
sub
shr
and
xchg
add
fiadds
sub
dec
js
mov
mov
fmuls
outsl
xor
jno
jb
test
cmp
aaa
jecxz
sbb
jmp
sub
dec
data16
inc
popa
cmp
push
mov
mov
add
jmp
push
mov
lods
scas
push
shrl
lods
nop
iret
cs
mov
popfw
mov
cmpxchg
addr16
cmp
and
out
add
out
push
sub
push
fstpt
add
stos
repnz
lods
mov
jg
push
adc
ljmp
xchg
mov
repz
or
dec
or
pop
sbb
mov
mov
xor
and
dec
fs
adc
mov
inc
mov
sbb
call
fnstenv
cmp
popa
inc
pop
sbb
or
push
inc
insb
and
inc
jae
xchg
dec
xchg
out
mov
je
pop
jge
std
cmp
les
adc
dec
bound
dec
mov
pusha
fwait
shld
push
or
test
jno
fcompl
std
pusha
add
imul
push
push
jbe
adc
cli
lods
mov
iret
fidivrl
pop
ret
and
and
cmpl
sbb
cld
mov
cmp
insb
out
mov
add
and
mov
sub
push
mov
sbb
enter
mov
mov
add
scas
xlat
notb
out
sub
cmp
adc
mov
cmp
stc
add
xchg
insl
gs
xor
and
jno
push
adc
fstpl
adc
dec
mov
dec
or
inc
cmp
loopne
dec
out
xchg
loop
jle
imul
mov
pop
outsl
add
pop
mov
cld
addl
loop
rol
cmp
add
cmc
call
call
mov
pop
pop
fists
aaa
shrl
add
imul
test
in
imul
fs
or
fwait
pop
push
int
mov
hlt
cli
pop
xchg
out
into
in
iret
cmc
or
xor
pushf
mov
aad
jecxz
sti
clc
cmp
loop
add
sbb
je
push
xchg
aas
mov
xchg
mov
xchg
pop
adc
xchg
cmpsl
push
inc
jle
dec
mov
mov
push
into
out
mov
inc
repz
insl
mov
xchg
fstpl
mov
inc
shr
pop
xchg
xor
out
sbb
push
or
sub
inc
and
pushl
mov
mov
pushl
ret
shld
sub
and
shr
btc
mov
inc
ror
mov
add
pushf
bswap
add
lea
xor
sub
jmp
push
movl
push
pusha
lea
jmp
mov
jmp
stc
bt
cmp
sub
push
shl
test
cmc
cmc
test
mov
bt
cmp
call
test
call
inc
sbb
and
mov
mov
add
cmpxchg
pop
jo
daa
mov
mov
imul
jb
mov
mov
mov
roll
in
daa
adc
mov
push
jns
popf
dec
push
inc
push
pop
mov
mov
dec
js
lcall
push
movsl
pop
xor
xor
pop
adc
or
lcall
mov
and
pusha
ja
lods
cmp
insb
test
adc
cmp
adc
inc
and
mov
inc
negb
mov
sub
out
cmp
cli
add
jbe
mov
mov
and
aaa
and
jl
vpmovsxdq
mov
addr16
lret
rclb
inc
sbb
and
movl
mov
scas
aam
mov
or
enter
shlb
mov
ds
sti
or
sahf
or
mov
and
xacquire
push
imul
int3
push
lret
mov
insb
cmp
add
ja
push
pop
jbe
xchg
mov
jne
test
pop
mov
adc
pop
push
test
xor
je
stos
aaa
shrb
pushf
mov
push
sub
int
scas
loope
and
pop
pop
mov
adc
jecxz
xchg
sbb
jns
popf
jne
and
lea
pop
aad
das
cmc
ds
gs
xchg
call
scas
add
sub
icebp
sub
or
cmp
in
insl
data16
dec
jo
mov
nop
nop
out
pop
stos
jp
in
push
mov
xlat
in
adc
arpl
mov
and
out
dec
bound
push
jg
ficoml
dec
dec
and
sahf
push
bound
push
lds
fsubr
mov
xchg
sub
xor
rcrb
pop
add
cmp
mov
pop
cwtl
mov
jno
das
dec
pop
div
mov
mov
ljmp
addr16
cli
pop
xchg
rorl
mov
loope
jmp
cmp
in
aaa
or
aas
fsubrl
sbb
dec
fisubrl
pop
push
jno
sbb
inc
pop
ljmp
movsbw
push
call
push
lea
jb
push
movb
cmp
lea
jns
pushf
pushf
lea
ja
cmp
stc
stc
push
add
lea
call
sbb
push
call
push
bswap
mov
pushf
pushf
pushl
ret
pop
loope
cmp
jnp
scas
leave
insl
xchg
mov
notl
repz
mov
fstl
sti
je
jle
mov
rcr
ret
lret
test
xchg
je
out
dec
test
jp
pushaw
mov
or
xor
mov
and
stos
pop
data16
bound
out
mov
notb
pop
out
test
mov
add
adcb
in
add
std
test
addb
arpl
ja
mov
lret
test
loope
cmpsl
cmp
aas
dec
dec
lret
jne
test
sub
mov
xchg
loopne
test
loopne
or
sbb
inc
mov
mov
mov
daa
mov
push
mov
in
sbb
mov
lea
lahf
call
and
mov
int
pop
sub
add
pop
addr16
addb
jmp
sahf
std
and
addr16
arpl
mov
mov
mov
hlt
lret
xchg
pop
xor
sti
dec
in
movntps
push
pop
and
and
jno
js
sub
and
mov
xor
pushl
pushl
ret
lea
je
bt
cmc
cmp
jmp
call
in
mov
ja
inc
dec
loope
mov
loop
mov
push
xchg
and
ficomps
cli
and
mov
mov
jo
enter
dec
jge
sbb
xchg
call
jns
xlat
fwait
testl
cmp
jno
movb
aaa
lret
test
or
call
mov
sbb
jbe
orb
mov
push
mov
sti
movsl
sub
push
frstor
adc
sub
xlat
in
lcall
mov
pop
in
pop
mov
ja
hlt
ret
mov
xor
dec
imul
dec
xor
mov
rcl
aaa
adc
loope
arpl
xchg
loopnew
xor
stos
mov
push
repz
mov
cli
sub
xchg
stos
rcrl
push
sbb
and
push
pop
lock
icebp
scas
aad
pushf
ss
clc
inc
pop
sbb
out
out
mov
push
sahf
cmc
jb
pop
loopne
pushf
mov
fdivl
test
lret
loope
adc
loope
jg
push
imul
test
sub
inc
shrl
mov
mov
sbb
ds
mov
loope
sarl
add
cld
repnz
mov
dec
sbb
adc
outsl
lods
sbb
mov
mov
fcomps
roll
sbb
sbbl
es
mov
add
cli
mov
xchg
dec
push
ja,pt
jne
sahf
add
xlat
ds
adc
ss
xchg
mov
xchg
rcpps
inc
push
jmp
in
scas
and
adc
test
adc
mov
jo
mov
or
lret
scas
mov
sub
and
add
xchg
pmulhuw
sbb
mov
sub
in
or
mov
xor
mov
push
pushf
lea
call
push
movl
pushl
pushf
lea
jne
bswap
cwtl
cwtl
mov
pusha
mov
lea
jmp
push
lea
jb
btr
shr
mov
jmp
bound
gs
jo
fs
insb
add
sub
dec
insl
roll
pop
aaa
pop
jb
adcb
je
cmpsb
movsl
movsb
lret
ljmp
mov
mov
sbb
xchg
dec
and
cmp
lods
in
add
ss
fidivl
sbb
leave
out
lea
jno
outsl
mov
sub
and
je
push
mov
pushf
push
lea
jmp
mov
jmp
jmp
or
ja
mov
cmp
stc
mov
xchg
inc
sbb
sbb
les
clc
je
inc
or
jg
into
xchg
ja
push
bound
popf
xor
ror
das
js
mov
leave
and
ret
fldt
pop
dec
cmp
or
xchg
in
shll
jl
jno
dec
mov
inc
add
sub
fwait
nop
add
push
and
lock
movsb
mov
add
loop
setns
mov
push
dec
xor
cs
insb
add
mov
pushf
mov
pop
jnp
jp
dec
out
mov
xor
mov
mulb
cmp
notb
push
xor
jg
jo
jmp
mov
pop
loope
movsl
lods
mov
shlb
lods
std
add
fmull
mov
push
fldcw
shll
pop
imul
pushf
mov
fdivs
xchg
and
push
sbb
jnp
sub
xchg
js
cmp
aad
cmp
mov
xchg
stc
mov
out
add
or
dec
add
nop
pushf
andb
cs
je
int
movaps
xchg
rol
dec
jno
je
and
dec
notl
inc
ss
and
dec
dec
xor
ffreep
sarl
iret
sbb
int
mov
testb
mov
ljmp
scas
jge
xchg
lods
cmp
mov
pusha
pushl
pushf
xchg
lea
movsbw
mov
pop
mov
lea
lea
movzbl
lea
jmp
not
adc
clc
jp
mov
cmc
cmc
cmpb
call
jmp
rorb
aaa
push
outsb
adc
dec
andl
daa
popa
jns
insl
inc
repnz
dec
scas
loope
mov
fnstenv
add
test
fmul
and
pop
outsb
sti
stc
int
repz
add
cmc
and
divb
sbb
mov
xor
pushf
inc
stos
ret
movl
xor
xchg
lods
cmp
testb
rcrb
sub
jmp
fwait
inc
sub
in
aaa
inc
int3
or
ja
xchg
lods
in
iret
mov
andl
jae
faddl
loope
lea
and
test
xor
in
loopne
js
gs
cmpsb
xor
add
fldln2
add
jo
flds
jo
pop
jmp
lea
je
pushf
stc
or
call
jmp
sub
jnp
cmc
xor
cmc
call
rorb
sub
ja
loopne
add
loope,pt
lds
sbb
and
cmp
sub
mov
cwtl
out
mov
je
push
mov
jmp
adc
stos
in
test
outsb
inc
daa
and
sti
cmp
movsb
add
cmpsl
orl
push
aam
mov
inc
mov
xchg
mov
xchg
xchg
ja
adc
mov
mov
add
lea
cmp
mov
pop
ja
nop
iret
jl
and
add
movsbw
lea
jmp
sub
lods
xor
pusha
popa
jg
rcr
sbb
dec
cmp
sbb
cmp
lods
cmp
int
in
push
mov
outsb
bound
pop
outsb
rcr
hlt
es
jno
and
fs
jae
cs
xchg
pop
js
cmpsl
xchg
xchg
imul
pop
insl
jmp
ficoms
rcr
xchg
je
mov
lods
rcl
or
mov
jns
xor
shrb
lods
mov
imul
call
jmp
repnz
cli
xor
or
mov
mov
fisttps
and
aas
add
lahf
jno
in
sub
pusha
add
and
xchg
into
movl
lods
shlb
pop
cmp
outsb
ds
xchg
jne
scas
lds
arpl
ss
inc
je
leave
inc
jno
jecxz
sbb
or
test
push
mov
seta
lret
add
sbb
fldcw
xchg
sub
in
push
sub
inc
int
fidivrs
xchg
xchg
lea
not
push
xchg
call
mov
push
xor
ja
xchg
mov
aaa
xor
bound
std
gs
movl
mov
jns
sub
shll
sbb
shrb
sbb
cmpsb
xchg
loope
jle
call
jmp
fisubrl
xor
inc
dec
imul
enter
pop
mov
mov
push
push
int
cmp
mov
loop
addb
cwtl
sti
sub
fsubrl
js
lret
inc
push
dec
add
rcrb
repz
xor
add
fcoml
mov
das
dec
fnstenv
popf
mov
adc
xchg
mov
push
pusha
mov
adc
push
clc
sub
call
repz
pusha
movl
jmp
imul
sbb
jg
aaa
shrl
popf
mov
cmp
adc
fsubl
cmp
rolb
mov
xor
nop
shl
std
mov
outsl
push
popf
not
and
pop
mov
add
xchg
repnz
jle
lret
cmpsl
aas
loop
out
icebp
ja
call
pop
push
es
popa
jne
xorb
adcl
cmp
xor
xchg
shr
jo
ja
insb
sbbb
mov
loopne
out
faddl
fiaddl
fistpll
notb
pop
mov
test
sbb
jp
fsubs
dec
decb
dec
in
add
mov
dec
jno
push
lret
push
movb
sbb
push
push
lea
push
mov
pushf
lea
jmp
mov
mov
lea
cmp
cwtl
shr
xadd
add
push
call
sub
stc
add
rol
push
btc
rcr
mov
jmp
clc
stc
bt
sub
test
movb
cmp
pusha
mov
lea
ja
clc
bt
jmp
push
pusha
xchg
mov
mov
jmp
int3
int3
or
xchg
inc
jmp
fdiv
cwtl
mov
add
sbb
xchg
push
mov
je
outsl
test
adc
xor
dec
mov
or
jecxz
sbb
in
stos
mov
pop
enter
rcl
cs
std
in
mov
cli
out
or
test
add
jecxz
popf
ret
lret
xor
cs
add
xchg
sub
xchg
xlat
lods
cmp
push
pop
imul
lods
xlat
sbb
jo
pushf
lea
std
or
add
lods
enter
fmull
aad
lret
lods
add
ja
pushf
jge
into
ljmp
test
inc
pop
lock
repz
adc
push
and
bound
test
inc
jge
push
mov
imul
outsb
push
lea
lcall
sub
mov
fsubrs
mov
stos
adcl
or
shrb
cmp
notb
sub
pushf
xor
sbb
int
inc
cli
push
lods
aas
shl
jae
ja
imul
pop
cmp
jl
adc
jb
fldt
push
xor
fimuls
fsubs
push
inc
push
out
cmp
out
inc
int
jb
push
xor
add
lahf
pop
cmp
inc
push
outsl
orl
xor
xor
push
xor
ja
cmp
mov
add
xchg
arpl
sbbb
in
push
fidivrs
call
adc
jne
sbb
mov
adc
mov
mov
mov
and
hlt
dec
cltd
lods
test
mov
aas
mov
popf
mov
push
cmp
jmp
xchg
cld
mov
mov
or
mov
test
int
jno
xor
les
les
mov
mov
fadd
sbbl
cmpsb
or
test
hlt
jb
xor
mov
lds
stc
stos
out
outsb
and
jge
adc
hlt
aas
mov
adc
jmp
jns
cmp
xor
cmp
mov
inc
sar
addr16
cmp
sbb
mov
in
cmc
inc
shr
stos
sti
repz
lahf
jmp
xchg
test
push
mov
icebp
mov
test
icebp
out
xchg
xor
fisubrl
sbb
adc
jne
ficoml
divl
mov
inc
cmp
cltd
mov
mov
push
pop
and
or
dec
inc
pop
int
lock
scas
clc
pop
lret
mov
aas
in
loopne
jl
daa
cmp
repnz
arpl
mov
faddp
xchg
das
xor
jecxz
imul
arpl
cmp
fidivs
xor
and
pusha
lods
sbb
cmc
das
pop
bound
clc
adcl
or
or
push
inc
jno
fmull
jmp
cltd
jl
ret
dec
loope
cmp
pusha
push
xchg
xor
sub
outsb
sbbb
dec
pop
out
nopl
shrb
jge
xor
jae
cmp
adc
dec
ljmp
fstpt
inc
stc
test
insb
push
ljmp
das
sub
test
rorl
mov
adc
aas
cmp
aaa
cmovnp
xchg
and
out
push
mov
or
mov
mov
rcl
mov
push
lea
call
add
add
cmp
sar
pop
test
sub
or
shl
pop
cmp
cmp
call
bt
add
pushf
movb
mov
lea
jmp
in
push
or
xchg
js
xor
xor
push
push
adc
xor
cmp
lret
push
or
shll
and
mov
jl
sarb
jmp
mov
mov
pop
scas
fldenv
aam
popa
sbb
sub
sub
xor
xor
cmc
adc
test
jle
mov
jno
xor
pushf
lea
jne
test
mov
stc
mov
movzbl
movzbw
add
mov
xor
bsf
stc
mov
sar
mov
test
clc
mov
shrd
sbb
rol
mov
bsf
cmp
mov
bsr
mov
adc
sub
rcl
cmc
or
mov
shld
shr
mov
cmc
push
sub
jmp
shlb
mov
cmp
testb
lret
or
les
dec
pop
movsb
push
cmp
in
mov
popf
xchg
mov
ja
cmp
ds
xchg
not
or
daa
mov
mov
mov
sub
adc
add
xorl
add
mov
inc
fsubs
cmp
insb
out
and
divb
adcl
xchg
xor
shr
xchg
fstpt
gs
mov
pusha
pushf
pushf
pushf
pushl
ret
pushf
pusha
movl
pushf
push
mov
movb
movl
movb
mov
lea
jmp
jmp
pusha
movb
adc
pusha
pushf
lea
jae
btr
rcr
pop
not
aaa
daa
clc
pop
btc
daa
btc
mov
lea
cmp
sets
mov
pusha
call
jmp
jecxz
push
ja
jb
mov
or
in
dec
add
vmwrite
pop
icebp
push
mov
push
cs
pop
or
dec
inc
adc
mov
or
ljmp
xchg
lock
ret
imul
mov
lcall
mov
jle
or
mov
xorb
xor
mov
xor
xchg
int
mov
stos
mov
mov
loope
jp
sbb
jne
cld
or
call
movsb
pusha
jns
cmp
mov
pop
adc
shl
push
andl
loopne
shll
jecxz
pop
lret
jno
sub
push
cs
pop
dec
lahf
movsl
fsub
jns
cmpsl
out
dec
cmp
xchg
and
push
mov
jmp
scas
lahf
sbb
pop
sbb
pop
adc
mov
pop
out
jle
mov
xlat
jbe
cmpsl
xor
ljmp
fistps
fs
ja
ror
sub
lea
jmp
dec
cmp
mov
cmp
clc
push
push
cmpb
mov
lea
jne
movzbw
cwtl
shrd
xor
mov
add
mov
mov
clc
push
pusha
stc
add
and
rcr
mov
mov
test
stc
test
movb
pushf
call
jb
jp
ja
mov
push
pop
cli
adc
cmp
adc
inc
es
add
push
push
mov
sbb
push
xchg
scas
sub
std
sub
jbe
stc
das
push
jae
stos
fisubrs
sti
cli
push
shll
mov
mov
jg
lds
test
out
xchg
aaa
dec
jecxz
xchg
popf
shll
cmpsb
jb
mov
push
ja
mov
add
mov
lret
das
in
xchg
loope
jns
imul
mov
inc
je
fwait
and
ja
ja
stos
ret
fmuls
lods
add
in
xor
imul
sarl
out
sbb
iret
notl
push
inc
cltd
adc
ja
mov
fstpt
mov
dec
inc
ds
lds
mov
mov
sbb
mov
adc
mov
test
call
test
mov
sbbb
jnp
pop
sub
sub
jge
mov
xchg
lret
pop
fstpt
test
push
sbb
js
cmp
and
dec
pusha
jnp
and
dec
ljmp
xchg
mov
pusha
jmp
pushf
mov
emms
mov
sahf
push
testl
out
add
xor
push
or
jae
cmpl
adc
outsl
loope
inc
sbb
and
jmp
fwait
add
pop
sub
mov
mov
addb
in
popf
movsb
popa
test
and
adc
into
cwtl
jno
mov
rol
in
jl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
pop
xor
inc
sub
out
sbb
sbb
fwait
xor
fcompl
mov
push
xchg
loop
in
mov
and
jmp
mov
pop
push
mov
jbe
push
sub
push
insb
lcall
loope
jb
sub
fwait
sub
sti
je
and
ret
push
add
daa
jnp
and
sbb
adc
jmp
dec
xchg
cmp
andl
shl
lcall
sbb
mov
push
inc
push
popa
leave
ja
insb
add
ja
and
add
xchg
shlb
add
mov
repz
cmp
sub
or
mov
filds
cwtl
movsb
cltd
push
mov
or
movaps
mov
cmp
jl,pt
xor
pop
adc
pop
dec
sub
out
lods
pop
mov
jne
jle
push
jb
das
in
jg
sahf
xor
into
fnstenv
test
adc
imul
hlt
pop
jmp
cmc
lret
out
in
xor
dec
cld
gs
sub
js
push
pop
sar
and
xor
dec
xor
or
sub
pop
mov
les
out
loop,pt
inc
jnp
jle
pop
or
mov
f2xm1
fcomp
xor
sub
mov
in
push
imul
test
out
inc
nop
mov
mov
outsl
cltd
add
and
stc
into
and
adc
cmpsb
or
shll
lods
mov
dec
add
inc
scas
jmp
testl
pop
push
clc
sbb
orb
movl
pushf
call
dec
lret
ja
mov
cmpl
jmp
mov
xchg
jl
fimuls
xor
rclb
jo
subb
mov
adc
xlat
movsb
add
cmpb
adc
fldt
fsubrl
sub
lea
rolb
xchg
dec
xchg
stos
cmp
loop
or
cmpsb
cmp
in
icebp
dec
adc
push
fmull
popf
pop
gs
sub
in
jl
daa
cmp
push
xor
rorl
stc
add
loopne
lea
jne
pusha
movl
jmp
lea
call
ror
movzbw
neg
add
inc
sub
pop
not
aam
rol
rol
pop
cmp
pushf
pusha
cmp
pushf
call
sub
pushf
pushl
lea
pushf
pushl
call
push
pusha
movl
mov
pusha
push
movl
mov
push
mov
lea
jmp
call
movl
pusha
pusha
lea
jp
push
push
lea
jmp
call
fwait
push
mov
dec
push
sub
mov
mov
xor
fs
roll
jg
rcrb
out
cmp
jne
mov
lods
shrl
add
cmpsl
cmp
je
pop
lods
cmp
idivl
into
int3
test
jnp
imul
jl
ret
xchg
sbb
adc
adc
jnp
add
cmp
fsubr
jg
lahf
clc
addl
mov
push
js
jae
int3
mov
leave
out
cmp
in
or
daa
enter
clc
or
add
daa
or
loop
jg
cmp
pop
clc
pop
xchg
xor
adc
daa
mov
sub
fs
rclb
testl
jge
adc
ljmp
add
mov
mov
ds
test
lret
insl
movl
and
in
add
add
test
sbb
nop
test
ror
inc
lret
pop
les
shr
xor
pushl
popl
pushf
pushf
pushf
pushl
pushl
ret
and
ja
in
mov
je
xchg
dec
sbbl
arpl
cmpsb
shr
mov
aas
jp
mov
sbb
cmp
and
aas
mov
clc
fmul
pushf
sahf
rorl
imul
ror
jnp
decl
mov
pop
pop
and
test
xchg
xchg
repz
popa
into
pusha
cmp
adc
outsb
out
sub
push
in
adc
movaps
xor
clc
adc
mov
lea
jae
neg
xchg
sbb
call
push
mov
andl
xorb
push
aaa
or
jnp
cmp
jns
lods
jb
pushf
jo
stos
in
cli
jle
out
add
fcomps
pop
aaa
daa
shl
mov
xor
adc
lret
add
and
adc
jecxz
xor
fidivs
jle
in
shlb
fwait
mov
insb
cli
mov
xchg
mov
add
add
cmp
xchg
scas
shlb
daa
lea
imul
or
push
ficomps
movsbl
je
imul
pop
xor
das
adc
mov
cmp
push
loopne
mov
push
mov
inc
imul
rol
shl
xchg
jae
pop
mov
loop
inc
test
jns
test
iret
addr16
scas
enter
loop
stos
xor
sbb
push
mov
push
mov
cmp
je
xor
or
xchg
scas
sbb
cmpsb
mov
mov
xor
cmpsb
fwait
mov
and
inc
jb
inc
test
lahf
jg
ret
repnz
pop
arpl
dec
or
loope
sbb
add
in
dec
jne
sti
pop
aad
ds
mov
adcl
jge
sbb
push
iret
inc
icebp
or
test
icebp
sub
push
ja
mov
imul
in
jle
pop
ss
xchg
ret
jo
hlt
sub
adc
and
into
addr16
xor
repz
out
lock
out
rcrb
outsl
xor
dec
add
arpl
stos
mov
xor
pusha
jae
add
xorl
inc
les
mov
cmp
sbb
mov
in
sbb
adc
lods
inc
out
out
insl
lods
inc
sbb
jl
int3
cli
clc
mov
test
adc
mov
scas
push
add
sarb
in
add
pop
or
sub
xchg
mov
rcrb
cli
jecxz
mov
mov
in
mov
mov
mov
push
mov
andb
inc
pop
insl
enter
pop
pop
in
mov
ja
or
cmp
flds
ficoms
jno
lods
cmp
imul
cmp
jae
in
sub
addr16
lcall
loopne
ret
push
xchg
aaa
sub
mov
adc
pop
pushf
mov
adc
clc
mov
xchg
cltd
pop
ja
add
out
fcomps
scas
iret
push
sub
add
fildll
movsb
push
adc
sub
xor
jbe
mov
subl
mov
ljmp
jl
push
cwtl
or
dec
xchg
adc
fcompl
cmpsl
lock
jecxz
idiv
jmp
push
minps
sbb
cmpsb
cmp
fistpll
cmovle
data16
loop
cmp
clc
mov
bt
bt
mov
pushf
cmp
mov
call
movl
lea
js
pushf
pusha
movl
push
lea
jmp
call
test
add
call
clc
jmp
or
mov
movsb
fs
mov
adc
inc
pop
sub
subb
pop
or
jl
push
xchg
leave
aad
cmpsb
hlt
xchg
jp
cmpsl
loope
movsl
mov
mull
mov
enter
cmp
cs
incb
and
push
push
dec
out
mov
mov
dec
movsl
in
aam
addl
push
dec
jge
push
xchg
sbb
mov
repnz
or
dec
ljmp
test
jmp
call
mov
pushf
movb
stos
pushl
push
pushl
lea
jmp
mov
mov
in
rorb
sub
jnp
pop
mov
pop
xchg
push
lea
int3
mov
jecxz
push
ds
cmp
test
xlat
adc
sahf
call
mov
mov
repz
daa
adc
nop
lods
sub
mov
inc
and
call
sbb
lret
mov
je
lcall
jne
push
popa
cmp
out
test
shlb
mov
arpl
ljmp
sti
xchg
into
cmc
shlb
xor
jge
cwtl
or
fcmovnu
dec
mov
addr16
ret
int
imul
xlat
stc
mov
insb
jbe
lods
or
std
int
les
int
std
xor
js
repnz
in
or
nop
and
in
inc
add
sbbb
leave
pop
ljmp
xchg
xor
ja
fsubs
mov
xchg
dec
lock
mov
call
sti
pop
sub
addr16
cli
xchg
mov
shl
jg
loopne
mov
aaa
cmp
jo
xor
xor
fdivs
loop
xor
xor
movsl
icebp
sub
bsf
pusha
rcr
neg
not
shld
stc
sub
pop
mov
call
pusha
sub
jmp
call
pushl
adc
jmp
push
in
sbb
sti
add
xchg
mov
outsb
or
ds
push
sub
adc
clc
int3
lcall
movntq
sbb
loopne
sbb
ficoml
in
test
ret
repnz
pop
add
cmc
pushl
add
test
pop
cmc
inc
or
inc
mov
mov
sub
fsubp
inc
xchg
pop
je
pushf
pusha
pusha
pushf
mov
jmp
pushf
lea
jae
jmp
mov
mov
movsl
fnstsw
mov
adc
clc
and
call
push
jb
xor
je
xchg
ficomps
fdivr
xchg
addr16
cmpsb
shl
and
clc
repz
add
sbb
test
xor
ret
std
in
lds
mov
sub
mov
sbb
inc
sbb
and
xor
lret
nop
xor
add
es
out
in
mov
outsw
test
lods
pop
cmc
mov
jmp
js
jbe
ja
outsb
mov
mov
jl
cmp
xchg
sub
pop
jne
lret
pop
pop
xor
mov
movl
xor
inc
cmpsl
fisttpll
inc
dec
lret
and
xchg
subb
cmc
inc
mulb
out
and
js
cmp
lock
cmp
insl
mov
ficoms
or
int
es
es
sti
aas
decb
xlat
cmc
add
sub
data16
mov
cmp
push
lret
mov
dec
popa
lock
pusha
call
cmovp
ja
jns
cltd
xor
jne
jmp
fcomip
frstor
cmp
pop
jb
ds
mov
mov
push
push
roll
imul
dec
cmp
pop
cmp
mov
sarl
stos
inc
cmp
add
push
aad
aaa
hlt
adc
cmp
aaa
push
data16
cltd
scas
ret
loop
mov
movsb
bound
fnsave
jmp
movsl
push
or
xchg
lret
in
sbb
and
inc
jmpw
and
lds
and
xor
jecxz
jmp
inc
mov
xchg
in
dec
test
fadd
jnp
call
fstps
xchg
hlt
xor
push
movsl
in
push
push
sub
cmpsb
shll
out
mov
mov
cld
adc
mov
push
xor
mov
mov
mov
mov
mov
xchg
xor
pusha
cmp
call
fsubrl
ljmp
fidivrs
xor
mov
fmull
and
pop
cmp
sub
mov
call
xchg
mov
and
scas
mov
mov
xor
cmpsb
sbbl
and
popa
movb
cmp
movsl
es
movsl
xchg
aam
mov
jno
adc
push
inc
push
jle
xchg
jecxz
rclb
mov
xchg
rcrl
loope
lcall
xor
dec
add
fnstenv
adc
cmpsl
fidivrs
mov
test
push
mov
mov
icebp
vphsubdq
dec
xchg
fwait
mov
add
lods
mov
mov
jecxz
jmp
fdivl
cmpsb
xor
arpl
sbb
ds
outsl
dec
sbb
lahf
sub
or
add
jmp
cmp
mov
movb
pusha
lea
ja
stc
call
jmp
pushf
pushf
lea
call
pusha
pushf
pusha
lea
jb
mov
setb
cwtl
cmp
bswap
bswap
jmp
inc
inc
sbbb
mov
dec
xor
add
test
cmp
pop
insb
sbb
xor
sbb
jle
pop
and
cmp
inc
lds
mov
mov
push
mov
pop
cmp
or
adc
pop
leave
int
jnp
and
dec
push
xchg
imul
and
ja
call
lea
call
js
pusha
pushf
mov
pushf
pusha
lea
jmp
lret
pop
ja
mov
mov
das
dec
xor
cmp
add
sbb
outsb
xchg
mov
mov
lret
dec
daa
testl
pop
shr
xchg
test
test
imull
xchg
loopne
xor
arpl
fs
rol
addr16
inc
repnz
test
arpl
out
loope
cmp
or
cmp
addr16
adc
fucomi
xchg
ss
mov
sbb
aas
out
jbe
push
jmp
btr
das
mov
clc
btr
shrd
bsf
mov
clc
shl
mov
cmc
xor
test
cmp
call
jmp
xchg
pushf
call
jmp
lea
jmp
mov
movzbl
movl
lahf
pushf
pop
movsbw
lea
jmp
lret
test
adc
lea
cmpsb
cmp
bound
and
outsb
sbb
shll
mov
ficompl
jg
xchg
or
in
sbb
roll
movsl
inc
mov
clc
cs
hlt
aaa
mov
fcomip
dec
push
push
mov
insl
sar
push
sbb
cmp
and
jecxz
jl
pop
xchg
clc
mov
and
cmp
sub
test
pop
icebp
add
enter
xor
jmp
aad
repnz
sub
hlt
std
lea
call
stc
mov
cmc
cmp
jmp
not
stc
test
test
cmp
lea
lea
lea
jle
bswap
pusha
mov
pusha
push
call
lea
jb
pusha
pushl
cmpb
pusha
movl
jmp
inc
setb
seta
mov
stc
clc
push
stc
repnz
pushf
pusha
lea
jne
setnp
lahf
movb
cwtl
cwtl
bswap
push
mov
bswap
movzbw
lea
jmp
add
insl
sbb
xor
fmuls
xor
push
fmull
sti
repz
jecxz
aam
mov
gs
and
add
notl
inc
jo
fstpl
push
ret
jg
adc
xor
sbbb
inc
pop
jae
add
dec
imul
push
jb
je
inc
jne
jo
bt
pushl
cmc
movzwl
pusha
mov
pushf
movw
add
push
mov
test
test
mov
test
call
jmp
push
pusha
lea
jno
jb
bt
setp
clc
setb
mov
call
movl
pusha
lea
jmp
push
lock
std
std
mov
xchg
bound
mov
dec
inc
cmpsb
into
int
pop
and
mov
pop
sub
xor
xlat
aas
int3
fnstsw
dec
in
js
inc
fsubs
aam
pop
into
add
loope
and
test
loope
cmpsl
add
aam
in
xchg
push
xchg
mov
ja
mov
fdivr
xor
enter
fisttpll
jle
adc
cmp
xor
cmpsl
xchg
inc
lods
ljmp
cmpsl
or
xchg
jmp
inc
lahf
mov
dec
pushf
enter
xchg
inc
dec
push
mov
aad
inc
shrb
out
pusha
mov
pop
aad
sti
imulb
push
lcall
iret
and
mov
push
pushf
push
insl
mov
xchg
and
pusha
out
sbbl
mov
mov
clc
jmp
lea
call
sub
sub
sbb
pusha
add
sbb
mov
aad
btc
mov
test
cmp
mov
call
lea
jb
daa
adc
daa
mov
jmp
push
lea
je
cmc
bt
call
mov
lea
pusha
movw
movb
lea
jmp
call
sbb
loop
andb
pop
js
adc
movsb
shll
add
daa
popa
jge
mov
cmp
cmp
cmp
pushf
push
in
add
adc
sub
ds
adc
repnz
mov
xor
stos
fdivrp
loop
sub
pushf
lea
jg
jae
clc
bswap
sub
movzbw
mov
shl
shr
mov
movsbw
cmc
bswap
mov
test
test
cmc
jmp
pushf
mov
lea
jne
cwtl
not
xchg
pop
movzbw
seto
pop
lahf
push
not
lea
call
dec
outsb
imul
je
outsl
outsb
and
jb
jb
and
sbb
push
fcomi
xchg
mov
in
add
orl
cmp
pop
jno
out
out
and
in
imul
in
lret
mov
in
lods
out
or
push
arpl
push
push
js
push
ret
dec
mov
stos
pop
shl
and
push
jmp
cltd
lret
loope
mov
mov
inc
ljmp
mov
cmp
adc
adc
fcmovu
mov
dec
adc
pop
js
stos
xchg
iret
lock
sub
sub
test
and
sti
gs
mov
jb
and
xchg
pop
ljmp
xchg
decl
test
sub
fbstp
adc
adcl
and
mov
out
aaa
cmpsl
aam
scas
cmp
sbb
or
movsb
enter
sarb
lock
andb
js
fwait
inc
pusha
outsl
xchg
cmp
cmpsb
push
ja
ds
notl
jns
push
repnz
mov
fldt
stc
ja
sarb
adc
push
xlat
lea
dec
addr16
push
dec
and
movsb
mov
mov
scas
sub
and
nop
push
divl
pushf
mov
jne
stos
inc
shrb
and
xchg
xor
test
icebp
adc
add
adc
sub
add
icebp
pop
sti
pushl
mov
cmp
pushf
mov
outsl
adc
sub
or
hlt
dec
dec
fisubrs
sub
cld
cwtl
push
insl
jb
adc
mov
inc
fldcw
lcall
pusha
icebp
inc
cli
push
ja
loop
dec
xchg
lea
inc
xchg
adc
adc
mov
pop
pop
stos
push
int3
insb
xchg
jnp
scas
mov
in
mov
cltd
call
xlat
out
test
jnp
nop
xlat
xor
sbb
outsb
cltd
test
addr16
fwait
xchg
in
dec
mov
out
dec
stos
stc
xchg
adc
push
sti
cmp
nop
mov
test
insl
fs
push
iret
lock
lret
out
es
sub
mov
add
push
out
dec
push
push
xchg
mov
rcr
add
popa
out
pop
jo
or
int
insl
mov
pop
ja
std
add
sahf
add
mov
pause
negb
sub
push
cld
loopne
rcrb
iret
fiadds
insb
xor
dec
rcl
arpl
xor
adc
or
push
mov
movsb
mov
xchg
lods
jo
pop
loopne
enter
and
imul
inc
insl
pushf
sahf
rcr
sbb
inc
jno
cli
add
roll
cmpsb
pop
xchg
outsl
negl
out
jmp
lret
inc
ss
lods
sbb
push
lds
mov
sub
outsb
add
lds
gs
adc
pop
xor
cmp
test
movb
not
mov
jmp
sub
add
mov
push
push
out
lock
mov
fcomps
push
scas
faddp
shl
jno
sub
loope
je
loop
mov
or
movsl
mov
cwtl
inc
jne
imul
pop
repnz
dec
dec
sub
in
mov
pop
test
inc
pop
sbbb
add
ljmp
out
pusha
jg
jmp
and
mov
lods
mov
pop
add
sti
ja
shrb
mov
inc
and
adc
cmc
cmp
sbb
pushf
mov
movl
pushl
pushf
mov
pushf
lea
jmp
jmp
adc
adc
mov
je
cs
dec
in
rcll
mov
das
sub
xchg
nop
aas
inc
sub
cmp
jnp
stos
xchg
inc
sbb
mov
mov
xor
sub
outsl
dec
inc
adc
mov
or
into
cmp
cmp
and
adc
xchg
outsb
scas
cmpsl
stc
lret
loope
push
fists
loopne
sub
pop
cmpsl
inc
shr
add
adcl
jns
imul
adcl
dec
bswap
movsbw
mov
call
add
mov
add
add
add
add
add
add
add
sbb
test
sbb
add
add
add
scas
jg
add
push
cmpsl
insb
push
test
cli
push
in
clc
stos
lret
negb
pop
adc
daa
xchg
ficoms
adc
aas
clc
pop
dec
push
in
pop
pushf
jecxz
xchg
jl
cmp
xchg
std
jmp
ljmp
cmc
xor
sbb
andl
mov
int
push
cs
aaa
mov
mov
inc
scas
dec
pusha
idiv
cmpsl
add
pop
inc
or
xchg
lahf
dec
mov
fistps
or
sub
dec
fadd
cmp
sbb
sbb
clc
mov
jne
push
gs
hlt
les
cli
les
cmpsl
insl
into
aam
sahf
mov
push
mov
cld
or
repnz
xchg
xor
or
fnstenv
dec
int3
xchg
inc
imul
lahf
rolb
and
xor
dec
adc
push
ds
inc
gs
jge
cmp
cmp
ljmp
inc
rol
jmp
xchg
les
fdivl
push
xchg
jge
cmpsl
pop
inc
adc
mov
cmpsb
xchg
sbb
jae
test
adc
xor
je
sbb
adc
push
fiaddl
mov
mov
push
lods
push
sub
aam
arpl
in
dec
daa
and
mov
jl
or
cwtl
insl
lods
xor
mov
rorb
imul
imul
dec
mov
aaa
daa
gs
dec
inc
loop
adc
rorb
jno
fcoms
jns
xchg
xchg
nop
outsl
bnd
xchg
es
out
rcl
cmc
insl
mov
adc
cmpsb
xor
jno
push
lods
cs
adc
daa
fadds
pop
mov
pushl
cltd
sub
loop
imul
repz
ds
aad
loop
sub
xchg
jge
mov
lock
test
sbb
loop
xchg
jle
mov
xor
test
mov
jae
lcall
mov
xchg
dec
fwait
mov
pop
fucom
call
shll
les
pop
aas
and
push
fists
shrl
pop
icebp
and
push
jp
hlt
lods
inc
jge,pt
hlt
dec
sub
push
cmc
sub
sbb
aas
xchg
push
mov
cmp
addr16
shlb
sbb
scas
loope
stos
nop
lahf
imul
std
push
insb
push
adc
jmp
pop
sub
add
push
out
lods
mov
movsb
lock
adc
fwait
lahf
adc
shlb
aam
or
js
fldenv
push
dec
cmpsb
pop
je
mov
leave
or
xchg
gs
pop
das
jg
mov
aaa
mov
test
fwait
xorb
xor
add
bound
push
xor
popa
fnsave
mov
jmp
xchg
sahf
je
push
or
push
aas
cwtl
or
mov
sub
push
cmpsb
in
das
sbb
negl
idivb
mov
mov
sbb
test
pop
or
sti
and
movsl
stc
loope
mulb
stos
iret
mov
xor
pop
mov
and
mov
iret
sbb
cli
add
mov
jo
sarl
dec
inc
mov
pop
xchg
repnz
sbb
mov
xchg
fidivrl
repnz
jmp
es
xor
out
lret
out
jmp
ss
and
out
test
aaa
sub
jg
mov
popf
aad
and
fcmovne
cmp
and
pop
inc
dec
es
mov
cltd
rolb
mov
mov
dec
sbb
xchg
cmp
mov
sar
inc
cmc
xchg
or
xchg
lods
jle
jae
ret
loopne
adc
sbb
push
fwait
fs
fnstcw
outsb
lea
mov
scas
subb
leave
fimuls
aam
dec
loope
idiv
inc
pop
sub
jle
fldcw
push
fs
fidivrl
frstor
ljmp
jge
in
pop
adc
cmpsb
int
mov
lret
scas
test
push
mov
mov
push
and
mov
jnp
aas
mov
xchg
or
xlat
faddp
lods
push
clc
enter
inc
xchg
xor
push
lcall
incl
stc
mov
lahf
mov
cli
cli
xor
mov
sbb
and
sbbl
sbb
loopne
mov
dec
mov
and
lcall
and
inc
sub
mov
mov
push
lea
es
inc
and
aam
or
pop
pop
inc
adc
jbe
out
clc
cmp
jg
sub
xchg
nop
insl
mov
jl
or
imul
in
pop
arpl
sbb
in
out
jno
out
add
jle
xor
cld
fsts
test
je
cwtl
in
and
cmpsb
pusha
lret
pop
sub
insb
mov
shl
xlat
jo
xchg
mov
outsl
int3
sti
jle
leave
dec
dec
repnz
std
jae
inc
mov
jno
dec
scas
mov
out
mov
pop
push
pop
call
push
sbb
icebp
jp
jmp
push
mov
adc
lods
fcompl
sbbl
cmp
cld
iret
andb
rdpmc
ss
xlat
test
out
ret
xchg
push
mulb
insl
push
lods
sub
mov
mov
jge
mov
sub
cli
sbb
jge
push
push
sbb
push
lea
fidivl
jo
xchg
rolb
addr16
push
add
nop
lahf
bnd
cwtl
dec
fisttpl
adc
and
add
ret
sub
dec
icebp
mov
push
inc
pop
jmp
xor
xchg
repnz
mov
lock
scas
outsl
xchg
mov
adc
mov
out
jb
jmp
out
dec
mov
aaa
xor
shrl
cmpl
or
fidivrs
fs
dec
inc
xchg
pop
push
loopne
push
cmp
inc
sbb
add
push
jnp
fldcw
jle
int3
aas
orl
pop
daa
mov
dec
sbbl
icebp
inc
fwait
sbb
adc
shrw
xchg
xchg
add
pop
cmpsl
cltd
xchg
push
and
lods
sbb
icebp
ret
clc
dec
clc
test
xchg
jbe
ds
xor
mov
es
filds
adc
lock
push
lods
xchg
xor
repnz
mov
mov
movsl
push
jb
add
stc
hlt
push
imul
fisttps
icebp
shl
int
fidivrs
dec
sbb
movsb
xchg
mov
fwait
and
sub
data16
loop
xor
xlat
dec
dec
shlb
fucom
lods
imul
pop
push
jecxz
movl
insl
test
lahf
fnstcw
push
scas
repnz
inc
das
cmp
xchg
rep
xchg
fldcw
xabort
mov
testl
jae
subb
es
jo
lods
cmp
psubw
cmpsb
and
jno
hlt
sub
or
out
js
push
aas
cld
pop
addr16
inc
adc
push
and
jle
sub
fildl
mov
lahf
add
inc
adc
int
inc
sbbb
out
pop
fldl
pushf
cltd
mov
test
push
jge
dec
subb
mov
mov
mov
lds
mov
mov
fldl
loop
std
fistps
xor
pop
outsl
enter
pop
inc
dec
adc
pop
js
add
mov
push
inc
mov
into
aas
pop
imul
sbb
mov
xchg
daa
push
popa
push
mov
lock
bound
inc
mov
sub
jns
push
adc
cli
lods
rcll
jmp
shrb
aam
movsb
jle
mov
pushw
cltd
and
lock
dec
xor
es
mov
sub
sbb
ret
fs
mov
jp
inc
pop
add
cld
fucomp
inc
inc
pusha
sti
and
nop
or
daa
jnp
mov
push
mov
jmp
addb
mov
sub
sub
and
mov
jp
and
imul
xor
mov
loop
jge
sub
add
dec
ds
in
mov
push
vandpd
fldt
jge
lods
in
jmp
push
mov
xor
inc
mov
sub
push
mov
out
adc
out
testl
outsl
cmp
jmp
fmull
push
cmp
out
jp
mov
lret
pop
icebp
add
mov
pop
outsl
push
mov
shll
aas
stos
movsb
sbb
bsf
imul
in
insl
and
sub
gs
jae
sub
insl
cmpsb
in
jnp
divl
xchg
sub
jge
or
pop
stc
stc
jae
dec
aas
insl
adc
dec
dec
outsb
pop
adc
std
push
idiv
sahf
hlt
and
lret
inc
repz
and
push
imul
and
mov
out
pop
push
or
jne
gs
ret
clc
into
insl
cmp
cmpb
push
push
inc
dec
aaa
xchg
scas
stos
fldt
retw
enter
xchg
push
push
pop
or
add
mov
fisubrs
repz
fdiv
pop
pop
sahf
inc
das
inc
mov
subl
add
int
neg
jbe
bound
add
and
dec
dec
mov
jl
or
inc
sub
clc
adc
mov
rcr
notb
jbe
or
insl
mov
shrb
popf
pop
hlt
cmp
inc
popa
mov
and
in
lret
ds
or
xchg
call
out
sub
mov
lds
lret
mov
push
push
mov
mov
xor
sbb
scas
push
repz
add
enter
and
dec
mov
xchg
in
push
ret
leave
push
loopne
inc
xor
fpatan
add
and
mov
add
stc
imul
addb
sub
xor
or
xor
test
lods
lock
aas
push
iret
andb
adc
sbb
inc
or
push
mov
sbb
out
pop
lret
outsb
sub
or
jbe
mov
icebp
cld
mov
mov
cmc
mov
fs
xor
fstps
adc
iret
xor
xchg
mov
sti
inc
lock
sub
adc
inc
mov
pop
dec
cs
cmpb
rcrl
cmovs
xchg
dec
adc
test
push
stos
outsl
sbb
push
push
jne
pop
faddl
nop
mov
lahf
push
sub
inc
sarb
pop
jp
pop
sbbl
and
test
jns
in
push
test
or
in
rolb
add
add
sbbb
decl
stos
rcl
mov
mov
and
mov
clc
push
shr
call
pusha
mov
lea
ja
adc
pushf
clc
sub
not
sub
add
inc
bts
shl
mov
rcl
xor
mov
call
push
movl
call
shr
call
push
push
inc
push
xor
cs
insb
add
mov
inc
inc
jp
ss
in
xchg
pop
in
or
dec
mov
mov
je
add
pusha
xchg
ja
mov
rcrl
ret
sahf
sub
mull
cmp
imul
mov
lcall
cmp
addl
xlat
mov
cmp
xor
in
inc
jae
dec
hlt
pop
xchg
jge
xor
cmp
scas
lods
movsb
mov
sub
clc
adc
jae
and
inc
sahf
jle
jae
ds
jno
leave
loop
call
xlat
stos
repnz
fcoms
cltd
lods
inc
loopne
nop
cmpsl
ret
jb
fnstcw
mov
inc
loope
mov
lea
jae
pushf
sub
movb
cwtl
jmp
lea
jb
daa
push
xor
cmp
pop
call
jo
out
mov
cli
xor
je
shll
mov
movzbl
aaa
mov
fxch
and
je
stos
arpl
push
xchg
into
xchg
and
or
mov
rorl
sahf
mov
mov
push
xor
dec
or
shlb
mov
popf
lock
testb
pop
in
dec
xor
call
getsec
fs
ljmp
inc
fprem1
or
mov
adc
mov
mov
jns
into
outsb
push
push
adc
lret
jecxz
and
imul
pusha
out
popf
repnz
jno
mov
xchg
and
out
push
orb
in
jbe
mov
enter
and
aaa
sbb
mov
mov
pop
dec
pushf
sbb
mov
xor
mov
push
in
cs
aam
adcl
xchg
push
mov
and
stos
add
insb
and
pusha
xchg
addr16
outsl
xor
mov
mov
nop
leave
mov
jecxz
and
cmpsl
cmp
dec
test
sub
lods
inc
pop
cmc
adc
ret
push
and
cmp
pusha
jmp
mov
in
mov
fiaddl
sbb
push
mov
fs
pushf
pop
jp
lcall
je
ror
pop
pop
inc
js
test
sub
stos
in
shrl
xor
xor
repz
loope
mov
dec
js
inc
cltd
rcll
mov
inc
pop
or
ss
pop
repz
push
adc
aaa
cmpsb
adcl
jge
pushf
bt
mov
pushf
cmp
call
inc
xchg
cs
mov
out
and
cmpsb
pusha
jnp
mov
pop
clc
jb
fildll
mov
mov
mov
outsb
outsl
cld
pop
mov
inc
mov
xor
adc
inc
dec
insb
int3
rolb
xchg
sub
dec
cwtl
xchg
movsb
xchg
cs
mov
and
add
adc
subb
pop
je
sub
cs
sbb
aas
fnstcw
sahf
mov
rolb
ja
popf
jle
in
js
cmpsb
sti
leave
adc
jmp
mov
xchg
pop
cltd
jge
cmpl
ja
pop
and
jne
fwait
mov
outsl
mov
mov
sub
or
int
js
mov
push
xchg
in
push
imul
repnz
pop
addb
inc
add
ljmp
in
fidivrs
mov
push
fabs
rcl
out
mov
mov
xchg
iret
and
inc
pop
mov
sahf
repnz
sbb
xchg
sbbb
in
arpl
xor
xchg
mov
push
icebp
cs
push
testl
sbb
cmp
mov
mov
push
cmp
xorl
es
je
pop
cmpl
cmp
inc
or
pop
inc
aas
and
lahf
xor
inc
fiaddl
cmpsb
out
push
shl
mov
xor
ja
pop
push
fdiv
mov
jne
mov
mov
arpl
push
shll
aam
jbe
jae
add
aas
ss
inc
addb
jmp
jo
inc
cmp
fs
add
and
test
mov
test
mov
dec
or
push
inc
xchg
and
mov
fdiv
shl
int
xchg
sbb
dec
jae
cltd
pop
test
ret
cmp
dec
jo
dec
adc
lods
mov
insb
stc
mov
mov
stos
cmp
out
cmpl
loopne
jl
mov
pop
btr
mov
movzbw
bsr
mov
ror
cmp
pushf
pushf
movzbl
mov
pushf
pushf
mov
jmp
scas
cmpl
xchg
pop
xchg
mov
push
hlt
adc
pusha
insb
int3
jno
pop
or
imul
or
cmp
or
adc
jnp
aas
pop
loope
into
scas
jecxz
int
hlt
aas
mov
push
out
imul
add
jg
push
cmp
loop
xor
adc
ficoms
out
or
pop
mov
adc
int3
rol
xor
inc
popa
jmp
fs
jae
pushf
lea
call
pusha
jmp
push
sub
cmp
repnz
mov
dec
in
push
pop
in
test
jge
orb
pop
pop
xchg
aam
mov
rep
aaa
shrl
out
rcr
mov
ret
popf
xlat
lds
mov
mov
add
and
jno
in
lret
pmaxub
mov
push
xchg
and
std
insb
or
rcl
pop
mov
adc
sub
push
aaa
cmc
clc
addr16
ja
adc
mov
pusha
xchg
lahf
fsubs
ds
dec
jge
rorb
iret
mov
out
and
movsl
xchg
roll
popa
xchg
jns
push
aam
mov
adc
dec
cmp
xorb
inc
adc
inc
pop
mov
xchg
icebp
add
mov
mov
stos
aaa
xchg
xchg
mov
arpl
dec
stc
fsubrl
lahf
mov
and
dec
lods
ficoms
and
inc
adc
rcl
cmp
imul
lahf
lea
sbb
jae
movsl
mov
mov
pushf
xchg
inc
and
aas
dec
xchg
lds
hlt
push
xchg
push
fadd
sub
scas
adc
push
stc
sub
pop
mov
in
sbbl
fwait
jb
js
and
shr
add
lods
dec
fcomi
sbbb
sub
jmp
les
stc
ja
cmp
fimull
icebp
push
mov
vmovss
lea
pop
sub
xlat
mov
rcrl
mov
cmp
push
sub
xchg
mov
xchg
lret
cli
std
inc
push
inc
cmpsb
fadds
push
fdivl
xchg
mov
imul
push
into
movsb
test
int
repz
mov
call
push
xor
sti
xchg
stos
cmp
out
and
inc
pop
outsb
xchg
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
ja
fwait
mov
aad
mov
scas
push
inc
dec
jecxz
jne
cmp
pop
jecxz
scas
aaa
jae
sti
push
jmp
pop
in
sub
outsb
jns
cmp
shl
clc
pop
xlat
sbb
mov
jg
lahf
lahf
dec
add
jp
mov
jns
movsb
mov
mov
mov
decl
mov
lcall
cmp
sbb
sarb
rorb
outsl
mov
push
cmpsb
inc
jp
sbb
and
fs
nop
out
and
push
or
mov
push
and
dec
mov
push
icebp
adc
push
loope
ljmp
pop
sti
cltd
shrl
dec
adc
cld
dec
scas
shl
mov
pop
das
aas
sbb
mov
iret
pop
xor
iret
scas
dec
andl
repz
lret
call
fadds
mov
in
inc
call
cld
outsb
inc
nop
inc
sub
dec
push
leave
movsb
cwtl
ret
mov
mov
push
xor
jg
in
sbb
cmpsb
push
and
subl
sbb
test
sub
enter
je
mov
sub
aad
adc
enter
andb
pop
out
mov
sbb
out
and
mov
sbbl
clc
add
je
add
lods
xor
repz
inc
adc
inc
rcl
jnp
mov
mov
pushl
cmp
pop
scas
xor
pop
mov
push
fwait
gs
in
jnp
adc
xchg
jbe
sbb
mov
xor
jmp
stc
inc
add
adcb
shll
mov
loopne
dec
sbb
pop
mov
subb
rolb
pusha
sbb
rcl
mov
lea
rol
movsbl
cmc
add
pushf
bt
cmp
movl
stc
mov
add
cmp
test
stc
test
cmp
pusha
lea
jbe
bsr
bt
rcr
xadd
sub
jmp
fwait
push
pop
cld
ja
inc
pop
jl
sbb
xchg
push
sbb
arpl
sti
test
aam
push
pop
repz
js
outsl
call
push
push
jmp
cmpsb
les
pusha
addr16
inc
dec
mov
dec
jg
cmpsb
movsl
xchg
or
cwtl
sti
stc
sub
ja
add
push
into
cmp
mov
sbb
mov
lret
pop
jbe
fwait
cmp
out
test
aas
mov
lea
push
shll
movzbl
bsr
shr
lea
bt
imul
bsr
mov
stc
bswap
lea
bsf
bt
push
rcl
push
stc
shl
mov
bsr
not
mov
shld
ror
ror
mov
clc
test
jne
pusha
cmp
pusha
lea
jge
push
pusha
lea
jb
cmc
movzbw
btr
push
mov
setnp
not
call
mov
and
ja
mov
pop
cmpsl
lea
lret
mov
or
mov
lds
aaa
adc
lods
dec
jmp
jo
inc
call
movsb
scas
ret
inc
mov
mov
fistps
adcl
outsl
js
jl
ret
mov
mov
das
inc
push
pop
jl
ror
ljmp
ret
je
inc
cmp
or
inc
xchg
inc
jp
inc
mov
enter
jbe
dec
push
arpl
xchg
xor
lcall
das
jge
mov
orl
idivb
xor
or
leave
dec
imull
push
test
mov
mov
pop
outsl
mov
ss
addr16
xchg
and
sbbb
lahf
insl
jo
xchg
xchg
pushf
movl
pushf
movw
pushf
lea
jmp
pushf
call
mov
mov
ss
hlt
nop
jbe
dec
dec
push
and
sub
es
jb
repz
mov
fs
xor
imul
test
fndisi(8087
xchg
in
pop
stc
movsb
hlt
mov
in
or
stos
jp
push
rol
js
sahf
rclb
inc
mov
addr16
mov
fnstsw
mov
vpaddusw
push
scas
leave
fnstcw
lahf
mov
loop
aam
cmp
into
xchg
add
add
push
add
push
add
rclb
cltd
pop
add
pop
add
add
add
shl
test
jmp
pushf
call
and
repz
inc
adc
insb
roll
xchg
ljmp
inc
mov
in
push
outsl
push
or
cmc
ljmp
into
push
sub
jl
cmp
aad
cmp
push
punpcklwd
cmp
or
repnz
cs
subb
pop
mov
es
pop
add
and
stos
add
push
lods
mov
push
js
push
test
push
jnp
outsb
ficoms
loopne
mov
adc
lret
pop
xor
sub
ja
jnp
mov
jmp
test
out
ja
xchg
out
dec
mov
and
ljmp
mov
sub
mov
stos
loop
add
add
insb
int
xor
lahf
adc
pop
aas
sub
pop
repnz
or
jbe
adc
mov
add
jg
mov
dec
dec
sbb
enter
mov
cmp
inc
jecxz
dec
out
or
test
jmp
jle
jge
insb
roll
dec
add
sub
push
mov
jbe
cmpsb
ss
ljmp
jp
xor
icebp
testb
sub
aas
fwait
sti
call
dec
inc
dec
xor
cs
insb
add
mov
repnz
xchg
inc
filds
out
cmpsb
sbb
sbb
out
pusha
mov
je
fdivs
stos
or
jge
neg
jne
inc
dec
dec
add
or
adc
add
sub
ret
repnz
sub
push
or
add
push
hlt
std
scas
sahf
cmp
xchg
inc
push
repz
xchg
stc
adc
sbb
dec
out
xor
aam
and
adc
hlt
add
xchg
sub
daa
les
add
enter
fwait
dec
pop
insl
push
dec
inc
dec
dec
xor
cs
insb
add
test
sti
lcall
inc
incl
pusha
push
bswap
pushf
mov
mov
pushl
movsbl
movzbw
lea
call
pushf
pusha
mov
lea
call
push
jmp
mov
lea
jne
pushf
call
lea
lea
jmp
pushf
jmp
call
jmp
sahf
or
aas
push
cmp
sbb
ds
sub
outsb
or
test
jecxz
testl
test
enter
stos
push
cmp
or
ds
pop
xchg
lcall
cmp
xchg
lahf
stos
and
cld
outsl
mov
sbb
out
test
mov
push
inc
push
mov
fdiv
xchg
test
cmpsl
fldt
mov
mov
or
cs
ja
or
mov
mov
aad
loope
cld
mov
sahf
movsl
mov
clc
xor
cmpsl
pop
cli
xlat
cs
jmp
adc
add
cmc
push
inc
pop
and
ja
ds
mov
pop
dec
in
push
push
cmp
ficomps
dec
enter
decl
jl
pop
ss
dec
call
cmp
ja
es
int
fildl
mov
ret
jmp
jmp
test
jmp
pushf
call
jmp
not
lea
mov
jmp
mov
call
fadds
divb
jmp
jge
xor
jno
mov
mov
cmp
fstpl
xchg
stc
cld
mov
mov
js
xor
mov
repnz
pop
xchg
js
and
mov
daa
bound
sbb
xchg
cs
pop
sbb
fs
aas
dec
lea
call
adc
add
jmp
xor
shrl
add
mov
sub
jb
mov
add
call
sub
jne
ret
js
ja
icebp
clc
pop
jnp
mov
jo
xchg
mov
outsl
mov
xchg
emms
stos
out
push
dec
adc
mov
outsl
test
leave
subl
jmp
arpl
adc
pop
jl
push
test
repnz
insb
fcmove
sbb
mov
sbb
enter
bound
xchg
lahf
push
mov
popf
scas
leave
fnstenv
and
xchg
shrl
mov
arpl
sub
jmp
xchg
movzbw
setne
pop
lea
jmp
dec
sbb
add
mov
jae
lock
test
add
jae
pusha
adc
and
clc
jo
loop
push
paddd
dec
out
sbb
mov
addr16
subb
push
test
loope
nop
add
sbb
in
sahf
inc
sbb
pushf
cltd
cmp
lock
inc
lea
stos
icebp
jo
mov
dec
fnsave
pop
cmp
pusha
jb
stos
inc
sbbl
or
dec
hlt
ja
pop
jne
xor
movsl
shll
mov
jae
mov
loop
pusha
cwtl
insb
inc
sub
popl
jbe
xor
shll
and
mov
lock
ds
lods
ds
mov
stos
xchg
les
ds
mov
lods
loope
cmp
testb
mov
inc
jg
out
cmp
adc
and
pop
ss
into
data16
movsb
mov
aas
in
xchg
or
or
iret
mov
btc
test
movzbw
xchg
sete
bt
shl
lea
shr
cmc
mov
movb
bt
dec
sar
not
sub
not
add
call
shr
shr
pushf
not
pusha
adc
mov
dec
sub
cmc
add
xchg
jmp
pusha
pushf
jmp
pusha
jmp
add
add
test
add
jae
push
add
add
add
adc
add
and
add
add
add
data16
add
add
and
add
xchg
add
addb
add
push
js
add
add
add
sbb
add
add
adc
add
adc
add
cmp
add
lret
add
add
pusha
movl
mov
lea
jmp
dec
or
lret
fildll
cmp
popf
sahf
push
fs
jmp
xor
iret
outsb
fimull
adc
mov
jne
dec
push
fs
pop
jo
loope
pushl
mov
les
sbb
popf
cld
cmp
sbb
aad
jne
cwtl
dec
or
jle
adc
hlt
inc
mov
or
xchg
lods
dec
aam
loope
pop
std
adc
sub
ja
loopne
add
fwait
sub
ljmp
add
jmp
shrb
xchg
dec
add
scas
push
or
pop
cmc
adcb
push
jae
inc
xchg
imul
js
lret
mov
mov
pop
sub
cmp
sub
ja
lods
lret
pop
xchg
adc
mov
sub
dec
and
cmp
push
sti
mov
out
mov
push
mov
aas
mov
jb
dec
bound
push
pushf
xor
pop
sbb
std
jne
pop
insb
xor
std
insb
dec
pop
push
mov
insl
ja
dec
inc
dec
and
inc
test
fidivs
cltd
sub
mov
int
push
lret
cmp
jne
je
push
test
xor
repnz
mov
adc
rclb
les
pop
popa
jae
xchg
sbb
lea
lea
setae
call
jle
ja
sbbw
dec
pushf
test
ja
leave
loope
out
mov
jle
cmp
pusha
loope
xchg
mov
push
dec
dec
movsb
in
push
aas
shrb
pop
jg
gs
sub
std
testb
add
je
xchg
jne
jae
cmpsl
and
jbe
and
jecxz
test
sahf
cmc
inc
inc
scas
sub
jb
aad
inc
add
add
and
ja
cmpsb
cltd
dec
push
push
jne
adc
or
add
pop
sub
lock
call
xchg
not
lea
mov
lea
push
jmp
sub
inc
inc
btr
mov
clc
mov
sbb
rol
mov
pushf
pushf
sub
movb
cmc
repnz
pushl
lea
jne
shrd
mov
shr
test
call
movb
lea
jb
and
shld
bsf
cmp
movsbw
pusha
not
setle
mov
jmp
fidivl
out
or
mov
or
pop
sub
and
inc
cli
dec
dec
dec
xchg
outsl
ds
dec
push
lret
mov
stos
mov
icebp
pop
push
call
cmpsl
scas
mov
sti
cmpsl
dec
ds
test
dec
jge
je
test
xor
inc
lock
xorl
shlb
dec
inc
mov
mov
mov
movsl
mov
xchg
imul
cs
push
cwtl
insl
leave
ja
pop
or
xchg
cs
insl
sub
stos
and
loopne
lcall
shll
xchg
sub
inc
adc
sub
jnp
cli
mov
adcb
mov
aas
push
in
scas
pmulhw
cmpsb
subb
ret
leave
ja
dec
push
out
nop
daa
inc
pop
push
lea
mov
add
jg
add
imul
loope
hlt
icebp
pop
mov
push
icebp
inc
popl
inc
xor
cmpsl
dec
into
mov
cmp
inc
push
pop
fs
sub
push
loop
test
pop
in
mov
jge
or
cmp
mov
mov
add
add
sahf
mov
inc
inc
add
repnz
ret
jl
pop
lods
shr
or
push
xorl
dec
xchg
cmpsb
xchg
cmpsb
xchg
or
repz
xchg
pop
adc
push
js
cmp
fs
test
fs
and
test
sbbl
mov
mov
faddl
arpl
outsb
jb
call
inc
pusha
jmp
repz
decl
leave
cs
push
sub
xor
sub
std
popf
and
data16
test
pusha
sub
pop
popf
dec
pop
ja
aad
inc
and
lea
jb
bt
test
jae
xor
cmp
jmp
sub
pusha
jmp
pop
mov
rcl
shr
pushl
mov
pusha
pushf
or
push
mov
call
leave
iret
ja
aad
or
cmp
fidivrs
test
int
call
into
dec
aad
or
or
shrl
jl
pop
mov
pop
sub
test
out
lret
aas
cs
pop
push
pop
popw
push
adc
dec
add
sbb
add
rclb
sub
mov
lcall
mov
arpl
sbb
cwtl
mov
js
jns
xorl
add
mov
mov
pop
jo
lahf
mov
sub
loopne
jo
mov
add
addb
bound
decl
sbbb
push
movl
call
add
insb
iret
ja
mov
jnp
popa
sahf
mov
sub
pop
xor
mov
repnz
addr16
es
pushf
mov
mov
jnp
cli
xorb
sbbb
inc
dec
outsb
sbbb
push
out
xchg
outsb
cmp
jno
aaa
push
pop
jb
aad
aas
mov
pushf
mov
setno
lahf
push
jmp
call
jne
arpl
ja
jnp
mov
aad
push
pop
fcoms
xor
jno
and
int
stos
jns
cwtl
mov
fisubs
outsl
mov
hlt
loop
push
cmpsb
out
fchs
cli
mov
outsb
lods
mov
jge
pusha
lods
into
sub
lea
aad
fnsave
out
ret
jns
ja
cmp
push
sahf
aad
aaa
cli
dec
add
xchg
xchg
rcrb
sbb
gs
insl
sbb
inc
fisubrl
add
movb
movzwl
lea
or
mov
jge
clc
test
add
stc
mov
pusha
test
push
pushf
push
pushl
lea
je
push
pusha
clc
add
test
test
cmp
movl
movb
lea
jb
clc
cmp
jmp
test
add
pushf
push
lea
jmp
cmpl
sbb
jge
mov
dec
imul
dec
mov
and
cmp
or
add
mov
insb
bound
test
out
cld
sahf
iret
fbstp
push
jno
and
mov
dec
sub
adc
aaa
test
cmp
sub
cmp
out
adc
push
push
pop
imul
aam
xchg
and
ja
shlb
pop
sbbl
push
xor
jecxz,pt
int3
and
sub
je
pop
xchg
subl
scas
adc
sti
add
imul
js
out
in
rcrl
pop
lea
dec
imul
xchg
push
or
lock
fst
fisubrl
pop
and
pop
stos
cmpsl
movsb
stos
loopne
sub
inc
aam
add
test
repnz
out
sar
lcall
mov
outsl
or
sub
dec
andl
stos
dec
mov
jne
cmp
sbb
divb
xchg
push
pop
out
xor
arpl
mov
pop
adc
movsl
cli
xor
jbe
mov
cmpsb
push
inc
out
daa
sbb
jbe
push
sbb
mov
mov
mov
sbb
inc
xor
fidivs
sbbl
mov
insb
inc
sub
mov
fs
je
pusha
pop
pusha
lea
pushf
pushf
movb
lea
call
pusha
jmp
mov
pushf
pushf
push
movb
pushl
ret
aaa
mov
andb
cmp
adc
jno
jae
mov
inc
push
test
testb
sub
and
inc
ds
call
mov
mov
cmp
xor
ret
add
jnp
cltd
lds
jno
je
sbb
ret
ja
idiv
pop
pushf
cmp
mov
mov
insl
cmpb
cld
mov
add
xchg
xchg
dec
adcb
shl
sub
mov
dec
cmp
mov
js
sbb
xlat
or
sub
jl
mov
loop
adc
mov
popf
sub
dec
mov
ficomps
shll
gs
mov
ret
push
xchg
bound
clc
xchg
sarb
test
gs
jo
imul
inc
gs
arpl
outsb
outsw
dec
imul
ret
ja
ss
jne
js
int
dec
test
mov
ljmp
pop
mov
pushf
sub
sti
pop
cmc
push
jmp
ret
xchg
rcrb
arpl
into
cmp
dec
sub
mov
lods
pop
test
inc
push
mov
and
popf
mov
cltd
push
stos
aas
fidivl
adc
mov
cmpsl
mov
lods
mov
mov
hlt
push
fsts
sub
and
in
mov
es
pop
sub
loopne
push
or
mov
add
sarb
pushw
jo
mov
or
push
jae
xchg
xor
pop
jbe
sbb
mov
and
pop
clc
dec
jecxz
ja
and
inc
sub
test
xorb
mov
mov
inc
sub
outsl
hlt
sub
adc
jo
sbb
repnz
mov
push
into
mov
pop
cmpsb
add
jno
xchg
sbbb
sbb
mov
fdivs
push
cwtl
push
xchg
jmp
push
shlb
add
mov
sahf
sub
pop
push
sbb
push
loope
push
jns
setle
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
call
aad
daa
inc
test
mov
cmpsl
pop
cmc
or
inc
xor
adc
sbb
int3
call
lcall
in
fbstp
cmp
cmc
test
jle
pushf
mov
cmp
lods
cmp
inc
adc
jbe
scas
xor
adc
popa
jne
sub
mov
push
xchg
loope
mov
xchg
sub
daa
add
test
shrb
ja
jb
das
dec
add
std
loop
mov
push
inc
mov
inc
mov
sub
add
mov
add
mov
adcb
lods
leave
sti
cs
fwait
jle
mov
or
lods
sbb
in
adc
xchg
sub
or
sbb
and
subl
jns
fbstp
or
cmp
out
std
push
das
inc
fucomip
sbb
inc
fistpll
pop
xor
aaa
movl
push
lea
jmp
adc
mov
roll
das
into
xor
gs
dec
jo
add
push
ja
cld
sbb
lds
shrb
stos
in
add
jno
xor
scas
jne
or
sub
sbb
and
jno
xchg
sti
push
inc
ret
inc
mov
jae
jae
or
add
hlt
dec
into
stc
mov
mov
or
icebp
mov
in
in
or
xor
fisubrs
and
jae
add
loope
or
je
add
repnz
pushf
pushl
push
lea
jne
mov
rcr
bsr
mov
sub
not
sub
rcr
mov
push
test
cmp
cmc
sub
call
lea
jb
btr
jmp
call
setp
mov
setae
not
lea
setb
lea
push
pusha
call
jmp
call
push
mov
jmp
xchg
jmp
lea
jg
push
pusha
movb
push
movb
mov
call
mov
push
pushf
pushf
lea
jmp
pushf
call
movb
pushf
popl
push
lea
jmp
movzbw
pushf
popl
pushf
not
pop
call
rol
bt
clc
call
bt
pushf
pushl
popl
clc
push
pusha
add
pushf
cmp
pushl
popf
mov
lea
jmp
clc
shr
jmp
push
pushf
pushf
popl
jmp
pushl
popl
pushl
lea
jmp
or
bt
call
pushf
pushf
popl
lea
jge
push
pushl
popl
mov
lea
jmp
mov
push
lea
jmp
rdtsc
lea
shl
mov
movzbw
aad
pop
das
pushf
movzbw
mov
dec
shld
adc
bsr
mov
bswap
shl
aas
inc
mov
stc
mov
call
mov
mov
pushf
popl
jmp
cmp
push
add
cmc
jmp
push
mov
call
push
pusha
push
call
lea
cpuid
call
clc
add
test
bt
jmp
call
inc
dec
rol
stc
ror
sbb
movzbw
sar
sub
dec
pusha
rcr
sub
inc
mov
call
mov
jmp
aaa
shrd
movzbw
cmc
mov
cmp
bt
xor
pusha
lea
jg
clc
cmc
rol
test
sub
push
bswap
jmp
setp
movzbw
mov
call
cbtw
mov
or
cmc
rol
and
mov
clc
stc
pushf
pushf
sub
movb
cmc
call
pushl
popl
pushf
mov
pushf
lea
jmp
mov
mov
mov
mov
lea
jmp
ror
bts
and
mov
mov
pusha
sub
movb
push
lea
jl
mov
pusha
pushf
pushf
pushf
lea
jmp
jmp
pusha
movzbl
pushl
dec
sub
pushf
dec
bsr
shld
xor
btr
add
btc
dec
sub
sub
not
sub
not
rcr
adc
sub
jne
movzbl
push
call
jmp
push
pushl
popl
movb
lea
jmp
clc
cmp
clc
add
bt
add
jmp
pushf
push
mov
mov
movb
pushf
lea
jmp
not
pusha
pushf
push
cmc
sub
clc
and
movl
call
pushl
popl
push
pushf
movb
lea
jmp
call
cmc
mov
jmp
shl
mov
cmc
mov
pushf
call
cmc
sub
cmc
pushf
pusha
shr
call
jmp
push
pusha
clc
ror
lea
cmp
rol
not
btc
bsf
rcl
cmc
sub
shl
stc
and
jmp
mov
call
jmp
movzbw
sbb
add
mov
stc
xor
add
mov
jmp
mov
pushf
movl
movw
call
push
pushf
jmp
push
movl
call
movsbl
bswap
lahf
mov
pusha
pusha
push
mov
jmp
sub
call
mov
movzbl
movsbw
mov
jmp
shl
pushf
pushf
call
push
pushf
mov
jmp
mov
pushf
popl
pusha
jmp
pushf
pushl
pushf
popl
movb
pushf
movw
mov
lea
jmp
call
decl
call
pushf
mov
call
ror
mov
clc
stc
pusha
call
call
rep
adc
xadd
cld
mov
jmp
mov
pushf
movb
pushf
pushf
popl
push
lea
jl
pusha
pushl
popl
pusha
mov
pushl
push
lea
jmp
setge
pusha
pushf
mov
pusha
mov
jmp
movsbw
bt
stc
shl
mov
test
mov
test
cmp
test
add
call
pushl
popl
pushf
pushf
push
push
lea
jmp
call
mov
pushf
push
pushf
pushf
lea
jmp
mov
call
mov
mov
movzbl
lea
jmp
jmp
mov
call
mov
call
push
mov
pushf
push
pusha
push
lea
jmp
mov
pushf
lea
jb
mov
call
test
mov
call
push
clc
push
clc
sub
movb
pusha
pushl
push
lea
jne
call
pushl
test
not
jmp
push
call
mov
lea
je
jmp
push
pusha
mov
stc
sub
movb
call
sub
clc
pushl
push
pushf
cmpl
pushf
mov
jmp
test
add
pushf
pusha
mov
mov
movl
lea
jmp
mov
push
jmp
pusha
mov
mov
movw
pushf
movb
lea
jmp
call
mov
call
push
jmp
cmp
cmc
sub
bt
call
call
pusha
call
lea
jge
pusha
pushf
popl
pushf
pushl
popl
mov
lea
jmp
neg
shr
pushf
xchg
mov
sar
mov
pusha
cmc
sub
mov
pusha
jmp
pusha
mov
pusha
call
aam
mov
test
pusha
pushf
push
add
lea
jl
pushf
movw
pushf
popl
push
jmp
pushf
pusha
mov
mov
pushl
lea
jmp
mov
pushf
push
pushl
lea
jmp
pushf
pushf
jmp
pushl
pusha
mov
bt
or
pushf
movw
pushl
lea
je
cmc
cmc
cmc
xor
stc
pusha
xchg
call
call
call
mov
lea
jnp
push
mov
push
pusha
lea
jmp
sub
mov
mov
pushf
pusha
lea
jmp
jg
push
pushf
push
pushf
mov
jmp
call
pushl
popl
pushl
pushf
pushf
lea
jmp
stc
cmp
xor
jmp
mov
movsbl
lea
movsbw
jmp
push
test
xor
pushf
clc
xor
stc
clc
cmc
sub
pushf
call
pushf
pushf
popl
pushf
pushf
call
pusha
mov
pushf
pushf
lea
jmp
inc
bt
pusha
clc
rol
movb
xor
clc
sub
jmp
jmp
push
stc
movb
xor
push
pushl
xchg
push
jmp
clc
cmp
cmc
add
movw
pusha
mov
pushf
lea
jmp
call
call
lea
jne
rcr
mov
cmc
jge
and
push
cmc
jmp
push
xchg
test
mov
clc
sub
ja
cmp
test
sub
jmp
stc
pushf
shr
pusha
jmp
bts
sub
bsr
neg
mov
shld
shr
add
sbb
or
xor
movsbw
movzbw
bt
ror
mov
push
call
jmp
pushf
pushf
mov
call
pushf
popl
pushl
pushf
push
lea
jmp
mov
pushf
pushf
mov
call
cmc
test
bt
sub
call
sub
bt
cmc
bswap
call
bsr
pushf
mov
btr
sub
mov
stc
call
pushl
popl
pushf
movl
lea
jmp
mov
call
mov
jmp
push
push
pushf
pushf
popl
pushl
movb
pushf
lea
jmp
bswap
call
jmp
stc
mov
das
lahf
and
mov
clc
jmp
bt
pushf
sbb
xor
mov
cmc
cmp
sub
pusha
pusha
push
dec
lea
jne
cmp
xor
clc
add
push
bt
add
jmp
pushl
cmc
sub
jmp
pushf
popl
mov
lea
jbe
pusha
push
pushl
popl
push
movb
movb
pushl
lea
jmp
pushf
popl
pushl
mov
lea
jmp
pushf
movb
pushf
popl
jmp
jmp
inc
push
pushf
movl
lea
jmp
push
xor
clc
pusha
cmp
add
je
add
push
clc
cmc
add
mov
lea
jb
sub
cmc
pushf
cmc
cmc
cbtw
pusha
cwtl
cmc
jmp
pushf
pushf
mov
jmp
mov
pushl
pusha
movb
pushf
lea
jmp
mov
push
mov
lea
jmp
call
test
pushf
xor
call
add
call
movw
push
jmp
call
call
jmp
adc
mov
pusha
mov
pushl
add
push
call
pushl
popl
movl
push
mov
pushf
lea
jmp
pushf
pushf
pushf
popl
call
cmp
lea
jg
jne
shl
xorb
movzbw
push
push
pusha
mov
push
lea
jmp
mov
push
pushf
pushl
lea
jmp
lea
ja
cmp
pusha
lea
ror
setb
pushf
sbb
lea
shrd
stc
aas
sub
bts
aam
lea
lea
and
sar
sub
sub
movzbw
pusha
movzbl
call
jmp
mov
jmp
not
neg
xchg
lea
rol
jmp
pushf
mov
cmc
shr
push
jmp
add
clc
mov
test
sub
call
push
mov
stc
sub
pushf
pushl
pushf
lea
jne
call
movw
mov
pusha
pusha
movb
mov
lea
jmp
mov
push
mov
movb
lea
jmp
mov
pusha
lea
jmp
and
shr
add
adc
movzbl
bt
mov
cmc
push
pushf
or
call
pushf
shl
jmp
lea
mov
push
jmp
bt
cbtw
cmc
pusha
pushf
cmc
cwtl
movb
sub
pushl
push
mov
mov
movw
movb
lea
jmp
movw
pusha
mov
movb
movb
push
call
dec
bt
add
pushf
movb
mov
pushf
pushl
ret
pushf
mov
movb
movw
pusha
pushf
popl
movb
mov
pushl
jmp
jmp
mov
call
jmp
shr
call
stc
adc
mov
shr
btc
sub
cmc
mov
stc
cmp
add
call
pushl
popl
push
push
lea
jmp
push
mov
jmp
jmp
pushf
push
inc
pushf
call
mov
pushf
pushf
movb
pushl
lea
jmp
mov
pusha
pushl
ret
pusha
stc
mov
rcr
dec
pushf
xor
mov
clc
add
pusha
mov
pushf
pushf
lea
jmp
add
rcl
mov
jmp
pushf
pusha
pushf
popl
call
pushf
lea
jg
pushf
pusha
pushl
popl
movb
movb
lea
jmp
pushf
pushf
mov
movb
pushf
pushf
pushf
popl
pushf
lea
jl
pushf
pusha
pushl
popl
pushl
pushf
movw
lea
jmp
push
pushl
mov
mov
pusha
push
movb
lea
jmp
call
mov
mov
movb
pushf
popl
pushf
pushf
pusha
movb
lea
jmp
pop
movzbl
pushf
inc
lea
inc
mov
mov
pushf
dec
cmc
bt
add
push
movw
call
aad
mov
shrd
mov
call
xadd
rol
sub
and
mov
stc
sar
mov
call
mov
jmp
xor
mov
rcl
stc
lea
mov
cmc
test
add
jmp
shrd
lahf
btc
mov
cld
movsbl
mov
bsr
pushl
popf
pusha
movsbw
mov
pushf
mov
call
rcr
shl
xadd
mov
bt
cmp
dec
shl
mov
jmp
jmp
push
movw
pusha
mov
pushl
lea
jmp
pusha
call
sbb
and
bt
btr
mov
bt
add
pushf
jmp
bsf
btr
rdtsc
pusha
sub
mov
jmp
pushf
popl
call
jmp
pusha
mov
pusha
movb
mov
pushf
mov
movb
pushf
pushf
push
pushf
popl
pushl
movl
push
lea
jmp
movw
mov
jmp
push
mov
cld
movzbl
push
mov
mov
pusha
movb
pusha
cld
push
call
stc
and
jmp
btr
clc
mov
rcl
sar
add
mov
mov
push
mov
pushl
push
pusha
mov
lea
jmp
clc
stc
and
pushf
cmp
movb
lea
jne
adc
shl
ror
xorb
setle
pop
push
mov
movw
pushf
lea
jmp
stc
sbb
mov
pusha
sub
call
jmp
neg
neg
shld
mov
clc
sub
setg
pushf
call
sub
mov
clc
shl
call
mov
call
pushl
clc
rol
stc
movb
jmp
pusha
jmp
push
call
jmp
pusha
pushf
mov
pushf
push
mov
push
jmp
pushf
popl
pushf
mov
lea
jmp
not
mov
movw
bt
push
bt
add
pushf
pushf
pushf
push
lea
jmp
shl
lea
cmc
cmp
jmp
mov
call
bt
bsr
or
inc
mov
test
clc
add
pushf
mov
pushf
jmp
call
call
add
add
jmp
adc
aam
and
mov
cmp
sub
call
movzbl
mov
call
mov
pusha
mov
pushl
ret
add
pushf
sub
push
pushl
call
stc
sub
call
call
movb
mov
pushf
mov
pushf
lea
jmp
jmp
push
pushf
jmp
call
mov
mov
mov
push
mov
pushl
lea
jmp
pushf
jmp
call
pushf
pushl
popl
movb
pushf
lea
jmp
jmp
call
movb
call
cmc
sub
bt
stc
cbtw
cmp
pusha
clc
cwtl
jmp
jmp
clc
push
call
sub
pusha
add
call
xchg
pusha
pushf
movsbw
mov
jmp
call
lea
jnp
pusha
pushl
popl
push
lea
jmp
mov
jmp
call
bt
mov
pushl
popf
movb
mov
movb
mov
lea
jmp
pusha
push
jmp
lea
jne
push
pusha
pusha
jmp
call
jnp
mov
pusha
lea
jmp
pushl
popl
movw
mov
mov
mov
lea
jmp
mov
jmp
pushl
popl
pushf
lea
jmp
pushf
movb
mov
call
push
mov
mov
mov
mov
lea
jmp
bswap
pushf
mov
jmp
call
pusha
movb
mov
movb
pushf
popl
jmp
bt
rol
push
bt
xor
pushf
clc
sub
clc
lea
bt
mov
clc
jmp
movb
mov
push
pushf
call
mov
movl
mov
movb
lea
jmp
bt
mov
setge
cmc
dec
call
call
dec
cmc
xor
cmc
call
pushf
mov
jmp
pushf
jmp
bt
not
pusha
test
test
clc
not
bt
call
pushf
push
jmp
call
pushf
movb
mov
call
pushf
mov
lea
jne
push
xorb
call
pusha
mov
call
shl
pushf
stc
pusha
shr
movl
cmp
call
clc
pushf
sub
cmc
mul
pushf
push
mov
pushl
pushf
mov
pushf
pushf
popl
movb
pushf
pushf
mov
pushl
popl
push
lea
jmp
add
jmp
mov
movl
pushl
mov
lea
jmp
movzbl
pusha
pushl
mov
call
bt
xchg
call
lea
lea
jne
pusha
mov
pusha
movb
lea
jmp
call
pushf
das
adc
notl
ror
shld
bsr
mov
pushf
push
pushf
sub
test
cmp
clc
and
mov
pushf
popl
jmp
mov
sub
pusha
pushf
dec
clc
mov
ror
stc
mov
sub
clc
sub
test
test
jmp
rdtsc
push
mov
pusha
bswap
pusha
cwtl
mov
movb
pushf
pushf
pushf
divl
jmp
jmp
shld
bsr
inc
lea
shld
and
sub
stc
add
mov
cmc
adc
mov
pushf
add
add
btc
push
call
and
cbtw
mov
push
push
stc
sub
clc
clc
sub
push
pushl
jmp
call
movb
jmp
pushl
pusha
mov
call
pushf
popl
call
stc
cmc
add
jmp
lea
je
pushf
pusha
pushl
popl
movb
pusha
pushf
movw
lea
jmp
pushf
pushf
call
jmp
cmc
movl
add
pushf
mov
movb
pushf
pushf
lea
jmp
shl
mov
rcr
inc
mov
pushf
call
call
jne
pushf
sub
pushf
mov
pushf
xchg
pusha
movl
movl
pushl
movb
mov
mov
pushf
pushf
pushf
pushl
ret
jmp
pushf
pusha
jmp
pushf
popl
pushf
lea
jmp
sub
push
jmp
pusha
pushl
call
movb
lea
call
push
jmp
pushf
movb
push
pusha
mov
pushl
push
pushf
lea
jmp
inc
movzbw
sar
shl
rol
add
bt
bswap
movsbw
rol
clc
sub
rcr
bswap
mov
rol
dec
call
test
shrd
pushf
push
push
jmp
call
sub
bt
test
test
test
mov
test
sub
pushf
push
movw
mov
pushf
push
pushf
push
lea
jmp
pushf
jmp
jmp
add
push
pushf
pushf
pushl
lea
jmp
cmc
ror
movsbw
inc
sbb
or
not
rcr
and
cmc
xor
sub
sar
movsbw
clc
cmc
and
btr
stc
mov
test
add
pusha
movw
movb
mov
push
pushf
movb
mov
lea
jmp
bt
sub
jmp
jmp
pushl
popl
push
pushf
pusha
push
lea
jmp
pushf
pushf
popl
pushf
pushl
push
lea
jmp
pushl
popl
pushf
pushf
pushl
lea
jmp
call
inc
mov
push
sub
pushf
push
jmp
mov
mov
lea
jmp
adc
push
mov
mov
jmp
mov
push
mov
jmp
bswap
neg
rcr
movsbw
mov
or
neg
mov
pushf
cmp
push
jmp
lea
mov
pushf
mov
pushf
lea
jmp
pusha
jmp
pushl
popl
pushl
lea
jmp
mov
pushf
mov
call
jmp
pushl
popl
mov
pushf
pushf
pushf
lea
jmp
pusha
push
call
mov
mov
mov
pusha
lea
jmp
btc
cmp
pushf
mov
btr
mov
shl
inc
pusha
dec
mov
test
test
call
mov
pusha
mov
push
mov
movb
pushf
popl
pushf
pushf
push
pushf
lea
jmp
adc
mov
bsf
movb
stc
shl
sub
seto
dec
mov
lea
jbe
inc
shld
push
sub
movl
neg
ror
setne
rol
rcr
test
bsr
sub
call
pushf
mov
pushf
popl
lea
shrd
shrd
bsr
xor
push
mov
mov
bsf
neg
push
rcr
bsf
push
lea
push
pushf
mov
adc
sbb
movsbw
sub
xchg
rcl
pushl
shr
neg
push
shrd
mov
xchg
clc
rol
bswap
and
call
mov
push
mov
movb
lea
jmp
cmc
bt
mov
cbtw
pushf
pushf
stc
cwtl
jmp
mov
movw
movb
mov
mov
pushf
popl
movb
mov
movb
pushl
popl
mov
mov
lea
jmp
mov
jmp
push
push
movb
div
jmp
test
pusha
rcl
sub
mov
movb
cmc
sub
cmp
add
push
jmp
sar
rol
movzbl
call
push
call
sub
jmp
jmp
pusha
jmp
or
mov
cmc
mov
test
stc
stc
add
call
jmp
pusha
push
pushf
xchg
push
pushl
pushf
movl
pushf
pushf
mov
pushf
pushl
ret
pushf
push
mov
pushf
call
pushf
popl
pushl
push
pushf
jmp
call
pushl
cwtl
bt
call
not
push
mov
cwtl
mov
seta
setge
bswap
mov
pushf
jmp
neg
mov
movzbw
bsf
lahf
mov
pusha
shl
pushf
mov
cmc
jmp
xor
cmc
sub
pushf
pushf
pusha
lea
jo
mov
push
pusha
lea
jmp
sub
push
movw
push
movb
mov
pushf
lea
jmp
not
movsbw
bswap
mov
mov
movb
mov
pushl
ret
movzbl
movb
mov
pushf
lea
jmp
neg
mov
neg
mov
cmc
bt
sub
jo
stc
test
clc
shr
jmp
neg
neg
dec
mov
clc
push
add
cmp
shld
push
call
push
jmp
call
adc
pop
add
lret
mov
pop
add
pop
add
pop
add
lret
pop
add
mov
add
scas
pop
add
mov
pop
add
mov
add
mov
add
mov
add
mov
pop
add
pop
add
pop
add
mov
add
mov
add
mov
add
lret
cmpl
dec
rcrb
mov
pop
add
pop
add
lret
pop
add
pop
add
mov
add
pop
add
mov
add
les
jnp
pop
add
pop
add
mov
add
pop
add
lret
jl
pop
add
mov
add
lds
mov
les
js
pop
add
mov
pop
add
pop
add
pop
add
mov
add
lds
test
pop
add
pop
add
pop
add
lret
pop
add
mov
add
enter
mov
pop
add
lds
pop
scas
pop
add
pop
add
pop
add
pop
add
mov
add
pop
add
mov
add
pop
add
pop
add
pop
add
mov
pop
add
lret
pop
add
les
or
pop
add
pop
add
pop
add
pop
add
pop
add
lret
out
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
add
pop
add
mov
pop
add
pop
add
pop
add
mov
pop
add
lret
mov
pop
add
pop
add
pop
add
mov
pop
add
mov
pop
add
pop
add
mov
add
mov
add
mov
add
pop
add
mov
pop
add
pop
add
lds
xchg
mov
pop
add
pop
add
scas
pop
add
pop
add
mov
add
mov
add
mov
add
pop
add
pop
add
pop
add
lds
mov
pop
add
enter
pop
add
pop
add
pop
add
pop
add
scas
pop
add
lds
push
pop
add
mov
add
pop
add
mov
pop
add
pop
add
mov
add
pop
add
pop
add
scas
pop
add
les
pop
lret
pop
add
les
pop
scas
pop
add
pop
add
mov
pop
add
lret
mov
pop
add
pop
add
pop
add
scas
pop
add
rcrl
rcrl
rcrb
inc
mov
add
rcrb
xor
pop
add
pop
add
mov
pop
add
pop
add
pop
add
scas
pop
add
pop
add
lret
mov
pop
add
mov
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
mov
add
mov
add
mov
add
mov
add
lret
loopne
pop
add
mov
add
scas
pop
add
mov
add
pop
add
pop
add
scas
pop
add
pop
add
mov
add
pop
add
mov
pop
add
lret
out
pop
add
pop
add
repnz
jmp
lret
or
neg
btr
cmc
rol
movsbw
cmc
sub
pusha
push
push
movzbl
call
mov
pusha
pushf
popl
pushf
lea
jmp
pusha
pushl
popl
pushf
movb
pushf
lea
jmp
pushl
push
push
rol
stc
bt
sub
pusha
call
shld
and
movzww
cmp
pushf
stc
sub
mov
inc
pusha
pusha
call
sub
call
pushl
popl
movl
pushf
pushf
pushf
lea
jmp
jmp
test
movzbl
call
call
jmp
push
jmp
