mov
adcl
lods
in
hlt
xchg
sub
sbb
and
stos
loope
mov
and
out
dec
dec
mov
sbb
xor
xor
outsb
daa
arpl
push
into
mov
in
pop
mov
lds
xor
popa
imul
jp
pop
ss
pop
insl
mov
scas
push
add
or
pushf
fwait
add
andb
inc
or
int
and
rolb
clc
cmp
adc
les
cmc
xlat
jl
sbb
add
add
sbb
mov
cltd
and
jb
sbb
jmp
adcl
daa
je
push
jno
ja
push
jnp
out
jmp
xchg
shll
jmp
push
sbb
lret
gs
and
ds
aaa
in
int
bt
test
push
movb
lea
je
test
jmp
pushf
adc
movw
lea
jae
jmp
movb
adc
lea
pushf
pushl
ret
call
add
dec
gs
popa
addr16
outsl
js
add
pop
stos
add
call
jmp
jmp
push
pusha
adc
push
lea
jae
push
call
out
push
fwait
mov
lret
cmp
iret
add
xor
data16
enter
xchg
sarb
adc
sub
push
or
push
and
fdivrl
mov
dec
mov
shrb
loopne
and
bound
jno
jno
xchg
imul
mov
stos
xchg
push
sub
lds
loope
or
dec
fs
jae
lock
gs
push
lcall
sti
and
jmp
fdivrs
xchg
sahf
jecxz
imul
les
call
mov
ror
mov
push
setl
call
add
ja
jo
imul
fs
je
movzbl
btc
or
bsr
add
pusha
rcl
mov
jmp
pushf
movb
jmp
add
inc
gs
jb
arpl
fs
jae
add
wbinvd
jg
and
and
jg
sbb
and
jg
sbb
mov
pop
pop
jg
sbb
jg
sbb
pop
jg
sbb
wbinvd
jg
xor
add
adc
adc
and
and
jg
and
and
fs
jmp
pushl
mov
pusha
push
pushf
pushl
lea
jmp
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
test
cmc
shr
movb
pusha
pushf
lea
je
push
adc
pusha
lea
jmp
pushl
pushf
lea
jne
call
pushl
pusha
lea
jne
jmp
xchg
add
cs
adc
mov
hlt
sbb
aas
outsb
jnp
or
idivb
enter
lods
xchg
imul
inc
pop
fwait
xchg
sbb
lods
movsl
sub
fcomp
scas
sbb
push
loop
push
dec
xchg
out
shrb
pop
push
je
lret
adc
mov
stos
rcrb
test
gs
sub
mov
out
in
psrld
scas
cmpb
test
cli
mov
cltd
imul
loope
and
stos
popa
jne
jno
nop
xchg
int
cmpl
lahf
xor
jg
jo
push
cmpsl
repz
adc
stc
push
mov
js
sbb
vmovntpd
mov
jns
aam
cwtl
sbbb
dec
repnz
push
mov
repnz
je
jge
idivb
cmp
mov
addl
push
lret
sbbb
jb
add
test
jne
loope
ja
jge
subl
jb
fwait
mov
dec
cwtl
jbe
sub
xchg
shr
cmc
fsts
sbb
ret
sbb
and
cmpsl
addb
xchg
mov
leave
hlt
sar
lock
in
jle
pop
xchg
push
mov
mov
xchg
inc
jle
dec
jnp
mov
xor
mov
loopne
xchg
cmpsl
sub
pushf
mov
test
test
mov
lock
sub
jno
test
xchg
lds
jo
scas
mov
in
sub
loop
adc
dec
in
loopne
nop
ret
sub
and
push
shll
sbb
fdivrs
xor
push
lods
jns
and
je
dec
xchg
mov
mov
ret
xchg
ret
bound
sbb
subb
cwtl
clc
mov
outsb
bound
add
fildl
xchg
mov
and
sub
mov
jb
icebp
adc
mov
jae
and
dec
inc
push
clc
mov
mov
adc
cmp
sbb
addr16
xor
sub
sub
movsl
inc
mov
mov
mov
cmc
and
ret
mov
xchg
adc
insl
mov
insl
adc
xchg
inc
jne
sub
xchg
adc
inc
xchg
mov
mov
or
adc
adcl
adc
ret
insl
and
pop
and
jns
aam
mov
pop
add
mov
mov
test
cmpsl
dec
popa
jne
add
pop
mov
add
sub
insb
xchg
dec
jl
or
popa
push
je
jge
mov
or
mov
xor
cwtl
xchg
mov
xchg
sbb
shll
xlat
xchg
adc
pop
mov
ljmp
enter
in
push
dec
jmp
gs
lods
test
jb
dec
mov
adc
lea
mov
jno
cmpsl
arpl
testl
xor
lods
adc
xchg
int3
test
jge
pop
cmpsl
bound
mov
add
sbb
and
repnz
rol
mov
jge
adc
mov
mov
fstpl
mov
aad
and
push
repnz
jmp
orb
xchg
pop
ss
leave
imul
lea
xorb
out
push
imul
lcall
fstpt
mov
sbb
inc
mov
mov
cmp
repz
mov
adc
push
mov
jbe
push
xor
stc
lret
xchg
xchg
sbb
mov
jb
xchg
lcall
cmpsl
or
pop
and
xor
mov
or
ja
push
or
mov
shlb
cmpl
outsl
jo
mov
shll
jg
and
mov
push
shl
not
xchg
and
out
je
jge
pop
add
xor
sar
js
xchg
mov
jle
jmp
out
lods
xor
jbe
jo
inc
test
adc
loope
mov
addb
test
xor
inc
pop
rorb
xchg
mov
jns
mov
mov
leave
dec
cltd
mov
jl
mov
shlb
cmp
cmp
add
repnz
mov
sbb
pop
pop
mov
lods
or
push
mov
stos
pop
xchg
loop
pop
bound
inc
sbbl
push
fnstcw
mov
cmp
ret
sbb
movsl
mov
cmc
mov
leave
cmp
push
test
xor
add
mov
inc
sbb
mov
inc
xchg
and
dec
or
jge
ja
dec
lahf
dec
fnstsw
mov
mov
iret
jns
xchg
bnd
pop
cld
mov
or
xchg
mov
xor
mov
xchg
push
push
mov
int
mov
adc
mov
movsl
rcrl
mov
lea
lea
les
mov
xchg
repnz
jbe
lods
lahf
jg
test
roll
rcll
push
adc
push
fcoml
pop
mov
dec
mov
xchg
and
ja
push
mov
lods
ja
mov
ja
or
iret
mov
push
adc
mov
outsw
cli
repz
movsb
lea
and
mov
cmc
bound
xchg
cmp
mov
cmc
jecxz
repz
add
adc
and
xor
cmc
arpl
xchg
cmp
jle
cmc
hlt
mov
xchg
adc
xor
jne
sbb
add
inc
gs
outsl
fs
gs
imul
add
repz
pushf
movb
lea
je
push
pusha
lea
jmp
mov
out
dec
xor
inc
pop
pop
into
repnz
ret
aas
icebp
jno
xor
shr
add
and
lea
lds
lcall
out
adc
aas
dec
mov
sub
test
cmpb
out
stos
mov
mov
cltd
imul
roll
pushf
call
cmp
neg
clc
push
bt
pushf
rol
pusha
mov
lea
call
pushf
cmp
pusha
pushf
lea
jae
cmc
cmp
call
lea
jbe
sbb
sub
btr
shrd
and
cmc
mov
clc
jg
sub
or
mov
or
sbb
and
rcr
add
movzbw
sar
shr
xadd
mov
movsbw
test
rol
add
movzbl
mov
push
mov
jmp
rcl
shl
xchg
add
shl
cmp
movzbw
mov
adc
clc
mov
mov
pusha
xchg
shr
mov
clc
pushf
push
sub
pusha
push
pushf
pushf
rep
movsbw
pop
call
xchg
movw
dec
stc
bt
call
pusha
mov
pushf
movsbw
movsbw
movsbl
mov
push
pushf
pushf
mov
pushl
ret
mov
clc
test
movb
pushf
jmp
xchg
es
inc
aad
cli
jg
ja
or
subb
or
xchg
sbb
and
sahf
push
mov
lock
mov
mov
xchg
inc
rol
mov
jg
inc
mov
hlt
dec
les
scas
or
rcll
pop
movsb
push
mov
jg
daa
dec
jb
cmpsl
jns
fsubs
mov
jp
adc
lret
xor
mov
js
mov
loopne
repnz
mov
and
outsl
jb
dec
jae
aas
mov
jo
ljmp
js
mov
sbb
cli
out
mov
fs
adc
data16
scas
adc
outsb
test
bound
imul
pop
in
jl
loopne
pop
mov
mov
std
cltd
imul
loope
sub
test
add
bt
test
dec
add
btr
movsbl
pushf
lea
sub
rcr
rol
neg
shr
not
movzbw
movzbw
bswap
mov
not
movzbw
setae
ror
add
or
rcr
adc
shr
add
add
neg
mov
pushf
clc
pusha
cmp
shr
mov
movl
cmp
stc
cmp
pusha
push
push
lea
je
call
not
pushf
mov
rcr
push
lea
ror
sub
aam
pushf
shrd
das
mov
rcl
shl
aaa
btr
push
pushf
lea
and
mov
and
test
push
shl
mov
bt
pusha
bt
clc
test
pushl
mov
lea
je
test
movzbw
mov
btr
bts
add
not
pusha
mov
pusha
test
pushf
mov
pushf
call
sub
clc
bsf
not
lea
lea
bt
cmc
sub
push
cmc
bt
test
pushl
popl
jmp
add
push
imul
jb
je
arpl
rol
jmp
mov
pusha
lea
call
pusha
movb
adc
jmp
lea
call
push
adc
pusha
pushf
call
dec
jmp
push
test
gs
sbb
fldcw
lods
ret
fildl
sbb
xchg
and
aad
aaa
dec
inc
test
out
dec
jne
mov
daa
mov
int3
or
push
imul
inc
aaa
mov
pop
jae
sub
jge
je
cmp
mov
ss
rcll
add
adc
loopne
xlat
roll
cli
cmp
rolb
push
dec
dec
call
dec
pop
jg
sub
and
data16
sbb
in
fdivp
sub
fcomps
lret
pop
jl
out
adc
hlt
popf
xor
shrl
es
repz
popa
fistl
pusha
movsb
mov
cs
fs
sub
daa
in
or
sub
rcrl
push
fsubrs
jbe
dec
dec
mov
fnstcw
stos
fildll
enter
test
insl
cltd
imul
and
jae
push
lea
jne
call
call
push
inc
roll
xchg
mov
dec
mov
sbb
cld
dec
fcmovbe
in
imul
idivl
pop
cld
hlt
or
or
inc
xor
or
das
call
addr16
sbb
jmp
push
jae
adc
xchg
and
pop
mov
outsb
lret
push
inc
mov
movsb
mov
inc
lahf
std
pop
inc
es
inc
cwtl
cld
bound
inc
xchg
test
pop
outsb
jb
test
aad
lods
cltd
imul
dec
xchg
adc
insl
jecxz
jne
mov
jae
sub
aad
lock
xor
pop
dec
out
jnp
sbb
mov
mov
test
dec
sub
cmp
cmp
jmp
negl
jge
mov
push
testb
xor
out
imul
movsb
jle
cmpsl
insb
js
mov
iret
push
jbe
or
sub
push
lea
jae
not
mov
setne
pusha
setno
inc
pusha
mov
call
sub
push
je
repz
fwait
sub
adc
fldcw
add
rcll
das
pop
mov
xor
xchg
in
stc
out
ja
scas
mov
rcll
push
push
dec
xor
jle
xchg
xor
sub
adc
loopne
pextrw
cmpl
jno
fsubrl
inc
dec
xchg
mov
mov
jmp
pushf
call
lea
jne
sbb
mov
cmc
add
pushf
pushf
movzwl
lea
rcr
shld
bsf
movsbl
mov
pusha
stc
add
movb
clc
bt
call
pusha
stos
push
push
pushf
lea
jmp
pushl
jmp
jo
dec
fimull
scas
cmc
xchg
dec
pop
pop
inc
shr
adc
inc
loope
or
sub
jns
rcl
inc
repnz
shll
stos
or
imul
pop
pushf
fnsave
js
mov
jbe
movsb
scas
dec
mov
add
cltd
imul
dec
cli
mov
sub
test
cltd
cmp
adc
jb
lods
mov
push
loope
jns
push
and
xor
jp
jmp
data16
inc
push
bound
fcmovu
xchg
sub
cltd
movsl
mov
fisttps
sub
sub
loopne
scas
out
inc
jmp
mov
xchg
ds
mov
imul
jne
insb
inc
insb
insb
outsl
arpl
add
pusha
call
stc
cmc
add
push
jmp
jmp
lea
jne
pushf
lea
jmp
lea
je
push
sbb
cmc
sub
ror
stc
shr
shl
mov
pop
btr
mov
shrd
or
clc
shr
bts
movzbw
bsf
test
mov
jmp
dec
mov
in
aad
xchg
icebp
dec
ds
adc
jae,pn
and
bnd
inc
jae
cli
jae
sbb
out
add
icebp
icebp
jae
in
push
das
xorl
xchg
mov
push
rcll
sbbl
add
jae
lds
push
adcl
xchg
xchg
shll
es
mov
jae
sar
nop
sub
mov
aad
jbe
ret
mov
add
loop
lret
out
div
inc
inc
xchg
loope
xchg
sub
fmull
test
popa
xchg
add
cld
xchg
mov
jp
or
mov
ret
addb
add
loope
mov
xor
adc
mov
hlt
cltd
ret
xchg
adc
xchg
shlb
mov
jp
adc
ret
std
aam
mov
jp
and
sub
test
aas
mov
adc
jmp
ja
push
cmp
push
sbb
add
push
push
pushf
push
std
mov
roll
ret
outsl
fs
xor
mov
aam
arpl
ficoml
inc
mov
sub
lcall
inc
add
add
adc
xchg
bound
adc
push
mov
fcmovnbe
roll
hlt
cmp
mov
jp
jbe
xchg
xor
mov
mov
jb
adc
rcrl
adc
inc
xchg
add
add
xchg
mov
xchg
adc
in
push
std
ret
fistl
mov
jae
mov
push
adc
popa
cmc
xchg
inc
push
xlat
ret
test
or
mov
repz
test
cld
fwait
movb
mul
sbb
roll
xchg
int3
xor
fdivl
adc
pop
jne
mov
sub
mov
lods
adc
cmp
adc
insb
push
jp
pause
addl
add
movsl
je
les
pushf
mov
jecxz
mov
xor
outsl
mov
jo
data16
sbb
inc
pop
insb
addb
outsb
ja
in
mov
push
gs
cld
stc
pop
loopne
mov
bnd
jns
xchg
rcll
repnz
sbbb
jge
or
jmp
lcall
and
lods
lahf
dec
int3
mov
out
pop
stos
cmpsl
std
xchg
subl
in
aam
xchg
push
js
test
test
pushf
sbb
adc
fiadds
cmp
cmp
je
sbb
dec
fs
add
pop
jg
sub
adc
insb
js
mov
jno
cmp
or
pop
jo
mov
mov
push
pop
cmpsl
andl
pop
xchg
loope
fadds
repz
fwait
shll
xchg
aaa
adc
cmp
shl
lahf
jge
repnz
cmp
pusha
fdivl
ja
lock
jno
jo
dec
lods
pop
or
repz
sbbl
orl
jbe
cmpsb
sbb
sbb
test
xchg
bound
inc
scas
or
pop
xchg
sbb
data16
test
je
xchg
mov
insb
xlat
insl
mov
mulb
shrl
insb
jae
cmpsb
jns
gs
adc
vmovsldup
xchg
xchg
lock
mov
xchg
shl
mov
in
test
cmc
inc
sbb
jl
mov
addr16
icebp
or
cwtl
xor
outsb
sbb
jnp
addr16
adc
rcl
mov
ret
mov
or
adc
inc
mov
stc
lret
adc
jp
lods
xchg
push
mov
rol
xchg
mov
mov
cmp
loop
test
cmpb
and
add
cmp
cmp
dec
push
xor
fimuls
icebp
mov
dec
out
add
jb
cmp
idivl
shl
scas
scas
jno
mov
jecxz
xchg
mov
lahf
es
lods
jecxz
xchg
mov
mov
adc
push
mov
lods
dec
mov
mov
cwtl
adc
mov
jecxz
cmp
fcomi
jae
loope
xor
loope
xchg
add
xchg
pop
pop
loopne
mov
mov
mov
mov
adc
pusha
xchg
aam
dec
test
jae
popf
adc
sahf
adc
push
mov
inc
lret
xchg
mov
out
xchg
and
mov
sarl
xchg
pop
lods
adcl
pop
xchg
mov
sbb
xchg
repnz
cmc
mov
js
add
pop
sbb
fs
into
adc
repz
adc
dec
aad
call
xchg
inc
or
sbb
idivb
shll
pushf
mov
ja
jge
xchg
jecxz
jae
loope
lods
cmpsl
push
mov
push
cmp
jns
cs
adc
and
test
or
orb
test
test
mov
imul
mov
je
and
roll
repnz
fistl
test
cmp
mov
je
jge
push
enter
mov
or
test
mov
mov
add
sbb
xorl
sbb
movsl
mov
xchg
imul
jecxz
adc
stos
or
repnz
xor
fs
in
orl
sbb
out
xchg
xor
lea
cli
fcomps
add
divb
xor
sbb
mov
insb
xchg
xchg
push
cltd
jno
jne
cmp
lods
mov
pusha
into
scas
ljmp
jmp
jo
mov
sbb
sbb
adc
sub
xchg
sahf
lea
cmp
icebp
add
xor
ret
jl
sbb
xchg
pop
mov
mov
insb
leave
stos
or
stc
je
xchg
lods
dec
nop
bound
outsb
pop
mov
xor
xor
sub
lock
and
sbb
jbe
xchg
ret
sub
daa
andb
sbb
aad
push
xor
xchg
fisttpl
xchg
cli
notb
rcrb
mov
movsl
loope
divb
scas
xchg
jno
cmpsl
cmpl
loope
daa
or
in
jbe
xor
inc
ret
mov
shlb
cmpsl
adc
add
out
aam
xchg
stc
xchg
cmp
inc
orb
hlt
jb
or
pop
nop
adc
fs
test
add
xchg
jno
push
sbb
int
mov
dec
int3
mov
fisttpl
sbb
fwait
mov
jle
jl
and
adc
pop
jl
dec
xchg
mov
pop
mov
jne
fadds
in
pop
nop
add
lahf
adc
stc
add
outsb
mov
loop
cld
pop
jbe
mov
xchg
repnz
mov
sub
popa
or
adc
mov
shll
ret
lret
fisttpl
std
bound
aaa
mov
dec
test
rcrl
addps
aam
jae
repnz
and
loope
and
mov
cltd
jnp
xchg
hlt
add
mov
test
mov
or
jne
pop
enter
dec
aam
jp
lcall
and
cwtl
ja
fstpt
push
repnz
mov
add
dec
mov
xor
lods
xchg
pop
add
xchg
mov
xor
fldenv
push
test
push
icebp
xchg
mov
xchg
aam
push
popf
sbbb
adc
sbb
sbb
dec
mov
mov
push
pop
pop
adc
dec
jne
hlt
repnz
mov
dec
or
or
mov
daa
ret
push
jnp
add
rcr
sub
ss
mov
test
into
mov
pushf
pop
mov
or
adc
xchg
xchg
gs
add
iret
jne
arpl
pusha
xchg
and
pop
xchg
xchg
jl
adc
shlb
shlb
sbb
pusha
out
adc
sbb
push
adcl
fwait
aad
repnz
dec
mov
cmpsl
cltd
push
pop
mov
fildll
clc
jg
out
call
mov
dec
cli
lods
pop
push
rorb
fs
popf
add
push
adc
bound
xchg
cmp
or
mov
test
addr16
jl
orb
jp
xor
mov
jmp
cmpb
in
repnz
insl
add
xor
movsb
xor
or
cmpsb
push
js
lea
xchg
cmp
push
icebp
icebp
mov
mov
jnp
mov
pusha
dec
pop
pop
cmp
adc
and
adc
mov
mov
insb
push
jne
or
mov
cmp
outsl
adc
pop
in
in
testb
addr16
cmp
xchg
push
popf
xchg
jecxz
xor
dec
jnp
bnd
or
jl
push
lahf
rcll
or
mov
lret
int3
movsb
push
ret
sbb
mov
repnz
sbb
test
jbe
inc
mulb
mov
jne
dec
pop
out
out
cmp
lods
stc
xor
inc
push
jecxz
or
xor
int3
push
sbb
xchg
and
pusha
movsl
adc
push
arpl
adc
pop
popa
rclb
stos
mov
aad
fcmovnb
jns
mov
lods
rorb
ja
inc
test
mov
cltd
scas
xchg
cmp
ret
je
in
cmp
dec
mov
xor
mov
leave
jne
mov
dec
popa
ja
xchg
sbb
inc
das
repnz
adcl
cltd
or
jb
pop
adc
movsb
out
adc
dec
rorl
in
xchg
mov
gs
cmp
pop
add
jne
movsl
cld
or
adc
push
adc
inc
adc
out
xchg
test
jb
mov
inc
mov
jecxz
js
xchg
mov
mov
mov
test
hlt
frstor
push
push
cmp
xchg
adc
test
adc
xchg
mov
mov
aaa
fistpl
pop
adc
imul
adc
sbb
into
rcr
daa
pop
cld
mov
xchg
stc
mov
decl
rcr
mov
mov
adc
dec
jecxz
or
bnd
shlb
xchg
pop
iret
lret
inc
repz
cmp
fs
out
orb
inc
mov
out
mov
mov
mov
ret
push
xor
sbb
sbb
add
add
and
adc
pop
stc
fimuls
aam
xor
repnz
add
test
jb
cmpsb
pop
xlat
pop
mov
jb
push
popa
ret
icebp
xchg
into
xor
pop
xor
jl
jns
mov
or
or
dec
leavew
jne
int
add
gs
add
jecxz
out
mov
aam
push
fsts
sub
les
insl
clc
xor
pop
cmp
pop
jle
cmp
repnz
aam
gs
jno
std
ret
int
jg
rorl
rorl
lret
out
dec
in
adc
add
push
mov
sub
or
enter
rorl
stc
sbb
or
lea
shll
iret
dec
sub
idivb
and
xor
jecxz
outsl
xor
icebp
jp
xchg
push
icebp
xchg
pop
mov
lock
add
out
inc
mov
lea
fs
mov
add
push
xor
ficoms
xchg
sar
shl
iret
addr16
enter
imul
in
cmpsl
jno
add
data16
shr
jo
add
scas
adc
mov
mov
ret
pop
orb
mov
notb
shrl
fcomp
xchg
sbb
test
or
dec
mov
mov
add
sbb
xchg
xchg
test
icebp
pop
cmp
lea
neg
mov
aaa
and
jge
adc
bnd
cmc
inc
xchg
stc
mov
icebp
ret
cwtl
xchg
loope
roll
push
repnz
and
xor
in
hlt
add
sahf
js
jns
orl
lcall
jae
test
test
xor
and
nop
add
mov
aad
jl
sub
insb
push
xchg
test
add
xor
xchg
push
ja
ljmp
enter
test
jae
insb
sbb
pop
lock
fldt
mov
cmc
sub
push
cmp
ret
xorl
hlt
shrl
pop
jle
mov
mov
xor
ret
mov
rorl
inc
lds
or
pop
dec
fcom
pop
pop
pushf
inc
dec
mov
rolb
xor
adc
enter
ja
out
and
push
fnsave
sub
stc
cmp
dec
or
push
xchg
and
cmp
aas
jl
adc
sahf
popa
pop
int3
dec
data16
jle
mov
fwait
pop
sbb
lahf
popa
lock
and
daa
add
lcall
push
or
push
sub
aam
je
jge
mov
je
dec
add
test
or
add
adc
dec
into
inc
xor
cwtl
xchg
jne
scas
notl
lahf
add
mov
out
test
sbb
mov
push
jns
sbb
test
or
shrb
rclb
and
cmpsl
xchg
imul
pop
rcr
adc
mov
lret
mov
cmpb
daa
mov
mov
lea
xchg
call
movsl
or
sbb
cli
lahf
in
nop
dec
or
std
leave
dec
outsl
mov
outsb
push
sbb
xor
fists
sbb
mov
push
dec
xor
jge
push
xor
insb
subb
jnp
pop
jle
cmp
aad
test
imul
jbe
cmp
imul
adc
adc
push
dec
rcrl
jg
cmpl
add
pop
sar
push
xchg
fisttpl
movsb
inc
pop
icebp
dec
cmp
sub
mov
or
in
lods
fistpll
dec
stos
add
subl
mov
lds
cmp
aad
mov
imul
sahf
or
rcll
aas
test
cmp
jmp
cld
sbb
hlt
jl
dec
jl
adc
mov
insb
mov
mov
sub
pop
mulb
mov
fcomps
repz
adc
mov
cli
or
ret
gs
jle
add
cld
xchg
inc
fildl
ja
xchg
call
xchg
lea
mov
jne
push
aas
xchg
fadds
sub
push
call
enter
jmp
mov
xchg
or
push
je
jns
loope
and
sub
mov
cwtl
xchg
adc
or
movl
pushf
cwtl
xchg
push
repnz
mov
sbb
jmp
mov
push
push
mov
mov
cmp
mov
frstor
icebp
pop
jne
jo
repnz
loope
shll
cmc
into
add
lock
out
inc
fidivs
fsubl
ds
push
aaa
cmp
mov
test
outsl
or
sbb
sahf
xor
xor
repnz
test
sbb
sub
sbbl
ljmp
or
mov
dec
mov
cmpsb
lahf
pushf
adc
mov
inc
pusha
pusha
cmp
inc
jae
xchg
sbb
jmp
rcr
test
mov
mov
lahf
xchg
sbb
xchg
sbb
xchg
xchg
dec
les
mov
mov
rcrl
push
dec
dec
aad
ret
and
fbstp
sbb
out
jmp
jle
and
loope
mov
jne
insb
test
xchg
call
leave
mov
cmp
inc
icebp
js
je
incb
ret
xchg
repnz
daa
leave
jns
adc
mov
rcll
outsb
sbb
inc
pop
mov
in
gs
inc
mov
adc
adcl
sbb
push
stc
and
aas
add
jns
jecxz
arpl
das
sbb
dec
out
push
cmp
inc
out
push
repz
jecxz
jns
jae
std
sahf
add
xor
add
pushf
mov
sbb
test
sbb
cmpsl
xchg
jg
and
pushf
add
xor
sbb
ror
xor
mull
sbb
cmp
int3
inc
cmpsl
rclb
cmpsl
mov
int3
push
add
sbbb
iret
adc
cmc
mov
xor
sub
jo
pop
fsubs
mov
pop
push
sub
inc
cmpsl
andl
dec
clc
test
push
adc
adc
xorb
mov
push
cmp
or
stos
dec
loopne
jl
pop
mov
add
mov
jg
subb
cmpsl
lret
mov
jle
out
xchg
ficoml
push
movsl
sbb
xchg
adc
imul
out
loop
cmp
fistpl
inc
sbb
xor
js
repnz
mov
push
mov
in
lods
fwait
jnp
mov
and
icebp
jl
stc
cltd
add
push
or
jae
lds
sbb
addb
or
js
aaa
xor
out
adc
jnp
out
stos
dec
mov
push
inc
sub
adc
ret
dec
mov
pop
sbb
in
sub
inc
popa
xchg
arpl
add
mov
lcall
cmp
sbb
pushf
sbb
clc
cltd
loop
movsb
fwait
xor
cs
adc
ret
int
sbb
sbb
and
mov
frstor
lds
mov
jne
in
adc
ret
xor
shr
adc
push
and
in
lods
add
mov
cli
push
mov
cmc
pop
sub
lahf
jne
je
mov
dec
dec
cmc
jle
xchg
jecxz
mov
cmp
jne
pusha
mov
pop
popa
gs
mov
pushf
out
pop
xlat
adc
push
add
mov
cli
aad
jecxz
and
insb
lods
add
sarl
inc
mov
xchg
int3
mov
or
rclb
adc
mov
and
rcrb
popf
sti
adc
cmp
xlat
iret
dec
sub
mov
xchg
xchg
imul
lds
fs
sbb
notb
inc
div
icebp
push
mov
jge
bound
rcrl
lahf
enter
adc
fs
mov
mov
or
mov
push
test
aas
addl
repnz
scas
sbb
xlat
aaa
movl
in
les
push
rorl
inc
xor
xor
cmpsb
xchg
iret
mov
inc
cmpsl
jae
mov
xchg
cld
enter
pop
jp
push
dec
cmpsl
scas
jb
xor
mov
xchg
dec
divl
push
jns
xor
cmp
push
repnz
dec
adcb
lcall
push
lea
test
xchg
insl
test
mov
fsubr
push
adc
xlat
sbb
xchg
xchg
mov
dec
add
or
jne,pt
xor
aam
push
mov
mov
sar
inc
cs
jnp
sub
pop
scas
sbb
mov
push
mov
adc
inc
mov
js
mov
adc
xlat
mov
fwait
pop
cli
add
push
dec
jae
and
mov
jno
repnz
jmp
mov
gs
mov
jb
and
mov
sbb
mov
shl
or
pop
push
int
sarl
dec
xchg
insl
push
shlb
cltd
aad
jns
stc
add
dec
adc
jb
aad
pop
popa
sbb
xor
mov
add
cmp
mov
mov
shl
adc
push
mov
push
mov
inc
movsl
stos
mov
push
sti
addr16
mov
mov
cwtl
imul
jo
cmc
or
add
inc
sbb
dec
dec
dec
sti
cs
dec
xchg
fildl
or
push
pop
push
insb
adc
lods
mov
jb
jg
movsb
xchg
aad
xor
add
fs
mov
inc
aad
push
imul
mov
jmp
fstl
or
inc
aam
mov
dec
jmp
mov
shll
int
jae
je
push
dec
mov
sti
pop
cmp
mov
xchg
data16
movsl
stc
and
or
lock
loope
mov
ret
jp
jne
js
pusha
rdmsr
and
popa
add
fs
mov
jp
ret
dec
xchg
jmp
aam
in
jno
pop
fs
inc
out
push
fstpt
mov
cmpsl
jge
xchg
push
aaa
push
xor
sub
fldenv
mov
mov
sbb
sti
jmp
push
shrl
jecxz
stos
jne
mov
push
out
xchg
scas
lret
into
cmp
jmp
pusha
popa
jecxz
jno
scas
sbb
push
mov
mov
lock
jno
int3
ljmp
or
or
mov
ret
or
jno
int3
in
stc
ret
jno
repz
dec
jno
jl
lea
orb
idivb
rolb
and
cltd
ds
adc
test
repz
int3
call
bnd
imul
jno
movsb
ds
rcr
cmpsb
jno
push
shll
lds
test
mov
sbb
fcomip
punpckhdq
fistl
cmp
sbb
stos
pop
fcomps
mov
add
jno
nop
sub
lds
popf
inc
mov
jne
mulb
shr
mov
rclb
push
mov
sti
xorl
pop
mov
jno
or
pop
movsb
jno
sbb
js
mov
mov
mov
cmc
lock
pushf
ljmp
insl
sub
shl
xchg
jno
shl
ljmp
lock
sub
mov
repnz
sti
xchg
sub
pop
jno
jb
or
data16
gs
std
mov
dec
add
mov
and
movl
jne
adc
pusha
sbb
ja
gs
std
sbb
cwtl
jb
mov
jno
repz
xchg
loopne
jmp
mov
bound
xor
cmpl
fbstp
sub
jmp
push
test
lcall
mov
jg
push
test
xchg
xchg
adc
mov
ficoms
lods
inc
xchg
add
xchg
jbe
jno
cmp
stos
adcb
inc
arpl
dec
stc
in
lea
iret
and
stos
mov
shll
pop
imul
je
sbb
jbe
test
test
leave
scas
orl
cltd
jno
sti
jmp
add
pmulhuw
jno
jae
out
xchg
divb
iret
out
pop
sahf
or
inc
sbb
jb
int3
mov
mov
fisubrl
xorl
add
dec
jge
dec
nop
inc
mov
mov
push
jno
cld
xor
int
test
jno
int3
sub
lods
aam
xchg
cmp
jle
mov
xchg
jno
jo
imul
or
jnp
ja
in
sbb
cwtl
daa
int
enter
sub
push
lea
mov
mov
inc
cmp
pop
daa
push
ds
xchg
pop
and
leave
clc
mov
cmp
iret
and
fcompl
test
je
gs
xor
clc
rcrl
push
push
adc
xchg
into
jo
dec
jno
mov
dec
mov
push
jbe
adc
out
loope
cli
push
dec
aas
mov
adc
pushf
pop
andl
out
es
xchg
stos
shr
jno
dec
add
push
pop
sti
into
jno
enter
or
xchg
mov
jnp
jno
add
jno
imul
jno
mov
ret
in
jne
and
and
xorb
mov
xorl
xor
movsb
cmp
jno
inc
sbbb
lods
mov
lds
dec
or
mov
cs
inc
mov
xchg
or
jns
fs
pop
dec
bnd
inc
jno
jle
and
mov
test
stc
dec
jno
roll
cwtl
pop
mov
dec
cmp
push
lss
jno
outsb
mov
xchg
insl
fwait
jge
fcmovnu
fdivrl
out
fs
mov
cmp
jle
mov
mov
mov
xlat
push
inc
shlb
jno
rcl
test
mov
stos
inc
lds
jno
movsl
es
addr16
xor
scas
mov
lahf
mov
out
jno
lret
icebp
addb
int
je
jno
xor
sar
jno
and
push
lock
jno
imul
xchg
rolb
jnp
iret
insb
xor
add
adc
xchg
orl
jae
xor
stos
jno
lahf
jp
popa
leave
shl
jno
mov
push
jns
mov
pop
in
fidivl
jo
add
jno
mov
into
inc
mov
cmpsb
jbe
rolb
or
shl
mov
push
into
jg
pop
ret
lea
jae
ljmp
mov
sub
mov
divb
lret
stos
inc
imul
les
jno
mov
push
cmc
inc
mov
or
ds
les
movsb
daa
data16
rcll
insb
shlb
add
leave
add
or
add
roll
aaa
fsub
out
jae
adc
aam
dec
test
repz
jno
test
jnp
stos
jge
adc
and
andl
sahf
mov
aam
mov
jno
ficoms
lahf
mov
jno
and
dec
jno
test
notl
out
cltd
fidivl
or
push
ss
and
int
jg
xlat
mov
aas
sti
repnz
sbb
and
mov
xchg
mov
xchg
test
xorl
cli
xlat
and
stc
rcrl
xchg
pushf
pop
insb
imull
push
jno
out
mov
insl
inc
jns
popa
test
inc
mov
je
js
lret
hlt
fistpl
fs
pop
jae
jne
adc
xor
and
int
mov
jb
xchg
mov
movb
jne
shlb
xchg
shll
jno
test
out
int3
mov
sub
xchg
inc
add
jge
mov
inc
aas
jno
dec
clc
push
push
add
and
jno
rorl
daa
jno
push
push
mov
lret
mov
jno
mov
lds
pop
clc
imul
andl
sub
shl
test
jno
cltd
push
push
fmuls
ds
push
inc
jo
jno
or
cmp
add
shlb
enter
leave
cmp
mov
xor
push
pop
divl
addb
adc
add
rorb
jne
divb
adc
clc
icebp
fcom
jno
mov
out
push
pop
lea
or
sbb
lods
shrb
mov
inc
jno
ret
xchg
movsb
arpl
pop
sbb
nop
adc
pop
aad
mov
aaa
rorb
je
mov
jb
cmp
je
push
out
jno
fistps
cmp
jno
js
sbb
jge
cmp
xchg
mov
cmp
fdivrp
out
dec
lods
addr16
hlt
jb
repz
jno
shrb
and
insb
movsb
fstpt
jecxz
jno
imul
mov
ljmp
shll
push
and
jno
js
and
call
test
jbe
xor
mov
xchg
test
and
jb
fidivrs
fs
in
imull
pop
jbe
xchg
jno
std
add
shrb
or
jae
jecxz
sti
int3
jge
push
in
or
pop
adc
sbb
cli
in
ret
sub
loope
cs
mov
sub
jl
shlb
int
test
mov
jnp
xor
xlat
xor
xor
test
int3
adc
jecxz
sarb
cmp
addl
mov
sub
mov
jp
inc
jae
sbb
lcall
sbb
scas
stc
jno,pt
jo
pop
cmpsb
inc
push
lret
add
xchg
cmp
aad
jno
dec
out
lds
jne
adc
cli
push
rcll
jno
dec
xor
gs
cmp
inc
loopne
rcrb
and
add
ljmp
xor
and
xchg
test
dec
cmp
jno
and
and
jl
out
insb
sbb
sti
lods
cld
iret
jno
repz
dec
or
jno
jnp
add
mov
inc
inc
stos
jno
lea
xor
ljmp
insb
jns
mov
dec
add
jnp
mov
xor
xchg
mov
in
lret
and
jbe
push
mov
adc
dec
jnp
or
xchg
test
mov
mov
popf
jo
int3
xchg
xor
push
ss
mov
fisubrl
je
xor
aas
adc
arpl
jne
push
pop
cmpps
negb
push
into
jno
xor
nop
or
dec
push
or
pop
fnstsw
out
fbstp
jmp
loope
pop
push
xchg
gs
jge
and
adc
dec
sub
jae
fldenv
push
fidivrl
jno
test
sub
adc
mov
fs
gs
movsl
inc
stos
mov
adcb
jno
jns
sub
cli
or
jno
push
jp
jnp
lahf
push
jno
or
adc
lea
jl
in
cmp
jo
dec
mov
nop
incb
mov
push
xchg
jb
test
inc
xchg
or
iret
out
push
lock
fs
dec
xor
jno
inc
ret
imul
mov
jno
inc
add
icebp
mov
jg
sbb
mov
or
insb
mov
jno
repz
mov
jno
push
sbb
mov
cmpsb
les
mov
and
inc
push
jno
scas
stos
push
sbb
add
xor
dec
pop
jae
scas
es
sbb
sub
mov
xor
dec
leave
cmp
adc
popa
mov
dec
push
stos
lcall
daa
aas
dec
jno
lock
jno
push
push
or
push
dec
outsl
sub
or
cmpsl
je
or
jno
or
popa
mov
jno
add
jns
xor
rolb
jno
push
dec
mov
add
jno
mov
mov
jne
insl
and
adc
jno
xchg
fwait
lahf
xchg
jno
xchg
xchg
push
in
fiaddl
push
add
in
push
out
ds
xchg
jbe
adc
adcl
cmp
xchg
incb
mov
mov
pop
sub
and
lret
sbb
or
push
sub
cs
cli
icebp
fwait
iret
add
push
jno
out
adc
movsl
jne
jno
notb
mov
ret
and
mov
push
jg
xor
fcomip
cs
in
pop
mov
je
mov
jae
lock
cmp
add
into
in
cld
add
daa
jno
xchg
xchg
push
scas
or
jg
mov
add
dec
cli
sub
jno
xor
mov
pop
inc
mov
xchg
sti
inc
cmc
sub
popf
call
imul
clc
jno
scas
aam
je
mov
aas
mov
in
jno
fstl
shrl
xadd
hlt
mov
insl
test
add
mov
cs
jno
aaa
scas
out
aad
inc
jno
repz
jne
push
sarb
xchg
jg
cmpsl
imul
loop
ja
jno
mov
test
repnz
pushf
fistpll
pop
xor
mov
subb
je
out
mov
mov
les
sub
out
jno
popa
sbb
mov
jno
cltd
pop
add
mov
arpl
sbbl
dec
scas
dec
xor
push
jno
mov
mov
lock
xor
lahf
mov
int3
pop
icebp
xor
jno
out
xchg
push
ja
pop
jge
jp
xchg
ljmp
stc
imul
insl
lcall
stos
sub
add
sub
jno
fwait
mov
push
stc
cmp
popf
jecxz
enter
gs
xchg
arpl
lret
push
outsl
jns
bound
ret
push
jne
seta
sbb
inc
cli
fidivl
push
imull
cmp
sbb
or
jecxz
dec
xor
push
xchg
jno
cmp
negl
aas
shrl
in
lods
inc
sbb
jno
and
inc
jno
mov
add
out
jp
sub
mov
mov
jno
fdivl
xchg
loopne
xchg
mov
clc
and
lods
jno
pop
dec
in
lea
jmp
sbb
jmp
cld
cmp
mov
les
call
out
dec
xchg
arpl
pop
cmp
subb
divb
jae
insb
sub
xor
and
lahf
jbe
inc
out
lea
mov
push
xor
je
or
icebp
test
pop
jno
pop
or
jl
push
ljmp
jno
mov
js
inc
cmpl
imul
jno
das
mov
movsb
mov
popf
shlb
sub
jno
mov
inc
cmp
jecxz
sbb
xchg
mov
add
jno
movsb
push
cmp
in
fimuls
sarl
outsb
idivb
xor
jae
push
and
sub
cmp
fdivs
shl
mov
jp
jno
inc
jne
or
int
jno
repz
xlat
add
lds
inc
dec
xor
cs
mov
push
cmp
inc
or
call
mov
push
int3
push
hlt
icebp
adc
nop
jno
or
ljmp
outsl
das
rcr
xor
mov
imul
lret
call
stc
jb
inc
bound
jo
mov
mov
je
ret
insl
mov
xor
pop
fistpll
dec
jge
push
mov
jae
xor
rcrl
jnp
mov
jno
pop
push
out
mov
jecxz
gs
jae
mov
dec
xchg
mov
mov
pop
push
pop
jno
pop
lret
popa
in
mov
mov
aam
adc
test
rol
mov
test
dec
dec
cmp
fildl
adc
adc
jbe
flds
leave
mov
fucom
jle
or
push
ror
and
jno
loopne
pop
cmpsl
inc
sbb
jb
test
pop
mov
jno
js
arpl
xchg
jmp
xor
jno
add
mov
and
dec
ret
repnz
mov
push
leave
mov
push
mov
inc
fldcw
xor
push
add
enter
or
fwait
sub
push
stos
sub
jns
nop
lods
adc
sbb
xchg
sbbb
pop
push
jl
call
xlat
cs
jne
cmc
adc
stos
jne
mov
jns
or
icebp
repz
lods
scas
int
jne
adcb
dec
pop
fiaddl
imul
lcall
clc
mov
xor
sbb
mov
lods
dec
ja
mov
je
adc
mov
mov
mov
pushf
mov
mov
aam
outsl
mov
out
insw
xor
ss
inc
cmp
ret
dec
test
fcomps
movsl
push
ds
push
or
push
enter
xor
xchg
loop
add
roll
xchg
cwtl
aam
jbe
jecxz
addl
popa
mov
lret
cmp
pmuludq
or
inc
jae
jecxz
adc
fildll
xchg
dec
ja
lods
es
pop
cmc
fs
jno
jb
jno
mov
and
xor
stos
push
or
outsl
aam
jae
movsb
ret
fldenv
fisubrl
jae
inc
fdivrs
loopne
aaa
scas
mov
ds
das
jae
ret
pop
and
cs
jno
jge
lea
sub
aad
sbb
sti
xchg
jge
addb
enter
mov
test
or
lock
pop
inc
jno
mov
sti
dec
add
psrld
dec
sub
mov
mov
je
push
leave
pop
jno
or
push
xor
pop
loop
pop
xlat
push
imul
jno
inc
sbb
jno
mov
je
jno
jecxz
mov
bound
push
cmp
pop
xor
jno
push
mov
mov
es
push
outsb
jno
adc
daa
inc
enter
ret
mov
jae
inc
rcrl
jno
loope
push
cmp
shl
mov
das
jae
lods
stos
out
mov
lds
push
int3
xorb
jmp
sub
jge
mov
shrl
insb
inc
jno
mov
xchg
jmp
ja
imul
dec
sarl
test
cmc
sti
jmp
std
pop
fdivp
je
add
jbe
or
mov
flds
lret
sysenter
jno
in
in
add
mov
xor
lods
mov
addr16
push
test
xor
inc
adc
jl
jmp
sahf
or
add
push
sub
push
jb
sub
ds
pop
adc
inc
mov
stos
jo
push
jne
dec
bound
push
inc
stc
rolb
mov
out
sub
sub
xor
mov
lock
fidivs
cmp
test
jb
and
pop
dec
dec
outsb
clc
rcll
enter
sbb
sub
dec
or
jecxz
dec
jno
cld
pusha
fidivl
add
jno
mov
ds
xchg
inc
into
clc
shlb
jno
mov
push
bnd
or
lcall
jno
repz
ret
or
inc
jne
jno
fldl
ret
repnz
cmp
jno
pop
inc
jl
xor
rcll
jno
adcb
sbb
jg
sbb
shrb
jne
xor
rcr
js
in
mov
xor
enter
push
mov
mov
ret
lahf
jno
and
inc
xorb
mov
pusha
jno
jmp
imul
hlt
cli
test
jne
pushw
pop
test
inc
jno
stos
pop
sub
and
mov
lds
or
pop
mov
insl
mov
movl
cmpsb
pop
lock
or
push
sub
lods
mov
cmpl
js
push
cmp
jno
sbb
lods
rcrb
jae
popf
mov
popa
fnsave
fdivs
lret
stos
sbb
fdivp
mov
or
cmp
jmp
jno
push
fwait
dec
adc
int
ja
xchg
lods
jb
into
sahf
adc
jne
clc
xchg
pop
aam
lds
jno
ss
sub
pop
nop
jmp
mov
jno
xchg
sbb
in
cmp
jge
test
fs
int3
ss
xor
xchg
jno
lods
iret
insb
std
mov
dec
jno
fisttps
and
lods
jno
pusha
movsl
sbb
dec
and
push
and
dec
mov
mov
addr16
sub
inc
pop
mov
jno
or
xchg
aad
loope
sbb
sbb
pop
jne
inc
pop
or
ljmp
outsl
jno
push
jo
lods
hlt
ret
jecxz
mov
adc
mov
and
xor
push
add
ss
adc
push
xor
add
xchg
stc
jno
push
adc
leave
or
sbb
mov
iret
stos
pop
mov
loope
dec
push
lea
addb
sbbl
ret
jge
int
mov
popa
ja
add
cli
aad
mov
push
popa
xor
imul
mov
jns
push
sbb
leave
mov
rolb
inc
insl
cwtl
stos
je
mov
mov
mov
fists
dec
dec
jb
mov
shll
fwait
mov
jbe
repnz
enter
dec
hlt
gs
cs
jno
inc
push
lret
mov
out
xchg
sbb
jno
mov
pop
xchg
sub
pop
pop
aaa
in
mov
insb
fcompl
loop
mov
adc
inc
jge
add
das
mov
repz
std
jno
rorb
add
aam
cmp
in
out
adc
aaa
in
jae
and
jno
inc
inc
push
fidivrl
pop
jae
ficoms
xor
bnd
xor
hlt
sahf
out
adc
jno
or
loop
test
rcl
mov
aam
jp
sub
enter
pop
stos
in
cvtss2sd
jo
push
jne
jno
scas
xchg
xor
cmp
notl
jne
adc
cmpsb
add
aam
int
pmaxsw
dec
pop
lea
jne
repnz
mov
ja
lods
mov
xchg
fstp
nop
sub
mov
test
sti
leave
or
lahf
stc
push
mov
jae
das
jp
call
jecxz
dec
arpl
cli
sahf
jno
imul
jle
fists
push
adc
rcrl
or
adcb
xchg
lds
mov
call
loopne
sub
sbb
jno
sbb
into
test
shl
sti
adc
imul
stos
xlat
out
cli
jns
sahf
adc
mov
clc
push
jb
and
mov
stos
js
in
popa
cmp
outsl
ss
xorb
orl
scas
sub
jae
cli
aaa
mov
mov
movsb
mov
hlt
or
mov
sarl
in
push
icebp
mov
mov
mov
inc
loope
dec
dec
into
mov
icebp
pop
js
cmpsl
je
repz
ret
test
inc
and
dec
inc
mov
cmp
fisttpl
ja
ror
push
jne
jno
mov
xchg
imul
rcrl
jnp
push
jno
mov
push
jno
outsb
xor
jb
leave
fisubs
imul
push
pop
outsb
stos
jno
mov
mov
gs
jecxz
repz
fsubl
out
mov
dec
mov
jb
idivb
daa
imul
repnz
cmpsb
in
cmc
push
inc
jge
testl
les
jno
inc
stc
pop
and
mov
jno
pop
and
jno
sbb
jb
or
push
les
cmpsl
fisttpll
ss
jno
hlt
mov
dec
jno
or
lea
mov
jno
out
out
xor
mov
adc
jecxz
insb
or
cmp
hlt
jbe
xchg
or
and
fistpll
adc
scas
push
in
jo
jae
inc
xlat
aam
sarb
inc
or
inc
jno
mov
adcl
outsl
jno
fs
stc
xorb
sub
int
in
adc
cltd
outsl
xor
test
xor
jno
mov
inc
mov
out
repz
and
fdivrl
enter
ljmp
dec
jae
rol
mov
mov
icebp
push
outsb
sbb
hlt
pop
das
pop
jno
mov
cmp
dec
mov
int
xchg
add
inc
or
xor
hlt
test
inc
jns
movsb
dec
jno
ljmp
in
cwtl
fdivl
cmp
test
lret
aas
sub
jno
mov
adc
or
enter
fistpl
test
mov
popa
jno
xchg
push
hlt
cmp
movsl
push
jp
dec
hlt
sti
sub
pop
sub
add
imul
jno
lret
pop
mov
data16
push
mov
and
adc
mov
jno
popa
in
adc
mov
mov
mov
inc
push
lods
jb
lods
repnz
mov
jb
sub
pop
and
jno
in
loop
mov
imul
mov
rorb
test
fwait
jno
andb
jno
cltd
pop
stos
out
cmpsl
pop
insl
pusha
xchg
imul
cmp
push
push
mov
insl
mov
sarb
lods
test
mov
dec
cmp
jno
mov
cwtl
jno
cmp
mov
dec
lret
jno
jne
pushf
mov
js
cmp
mov
inc
repz
repnz
movsb
jno
jmp
sti
fcomps
mov
jno
jp
jae
cmp
add
pop
mov
pop
mov
mov
ret
cld
push
xchg
and
nop
jns
or
push
js
test
sbb
adc
jne
dec
push
das
mov
pop
aam
sbb
hlt
fldcw
or
mov
sbb
mov
pop
push
pop
xchg
and
xor
jae
add
jno
lea
iret
jmp
hlt
sbb
mov
jno
push
pop
pop
pop
mov
jb
dec
jae
fwait
lret
mov
clc
repz
je
dec
cwtl
jno
lods
repnz
add
rolb
mov
je
dec
iret
ja
mov
les
add
sbb
sti
jno
sub
insl
pusha
xor
xchg
out
jne
dec
data16
bound
fxch
mov
std
pop
jmp
int
dec
jne
pop
in
ss
jb
test
xchg
dec
add
adc
sahf
push
pop
pop
ds
jno
inc
test
or
lret
jo
push
lss
aam
dec
popf
and
fdivl
jns
jne
leave
jbe
jno
cmp
jle
out
xor
jno
pop
push
hlt
dec
inc
dec
pop
lods
daa
lea
mov
pop
sti
loope
jno
xchg
xor
or
xor
mov
xor
ja
shll
jne
imul
mov
fdiv
jae
mov
sub
pop
sub
rorl
iret
stos
mov
sub
nop
jno
lods
roll
enter
lds
rcrl
jnp
inc
inc
xor
aaa
hlt
cli
jp
mov
jno
mov
xchg
jno
imul
adc
jae
mov
outsb
mov
xchg
inc
je
cmp
es
mov
pop
jb
ljmp
push
cmp
pusha
mov
outsb
inc
stos
repz
cltd
fnsave
push
lahf
sbb
test
xor
pop
xchg
cmc
std
div
stc
aam
fdivs
dec
sbb
in
xchg
aam
mov
or
hlt
mov
loop
push
adc
call
arpl
pop
aaa
pop
add
xlat
mov
xchg
adc
outsl
rorl
mov
xchg
add
aam
pop
insb
cmp
xchg
arpl
leave
fs
jno
enter
xor
jne
jecxz
jg
jmp
and
cwtl
jb
mov
orb
sbb
inc
and
mov
jno
lock
imul
fcomip
inc
lds
cwtl
xor
out
sub
jge
call
xchg
addr16
xlat
add
lea
icebp
jno
bnd
jbe
push
ljmp
sub
je
in
pop
fidivs
adc
mov
in
and
pop
cld
xchg
icebp
adc
dec
push
out
inc
and
adc
push
in
xor
fs
sub
fwait
pop
arpl
je
enter
aam
inc
sbb
sub
subl
rorb
add
hlt
push
arpl
mov
push
mov
icebp
test
in
and
jg
mov
pop
fidivl
jg
cld
cmpsb
ds
push
pop
mov
loope
and
jb
movsb
addr16
loope
mov
push
hlt
test
shll
cmpsl
jne
xor
das
or
xor
jnp
notb
lahf
call
mov
jno
sub
jno
jmp
out
shlb
rcrl
outsb
jno
scas
mov
jne
cli
pop
lret
jmp
add
sub
push
jbe
push
inc
inc
jns
xchg
in
je
test
jg
push
jno
and
pop
jno
mov
dec
cmp
cmp
jmp
push
mov
jecxz
and
fidivrl
popa
push
jno
dec
lods
or
cmp
outsl
inc
adc
popa
pop
jbe
dec
addb
cmp
or
int
shlb
test
in
mov
jg
lods
jae
push
or
scas
sub
lea
ljmp
mov
jle
int3
jno
fidivrl
xor
out
std
sbb
rcll
mov
jno
dec
ljmp
sbb
and
pop
mov
mov
rclb
inc
pop
mov
mov
mov
hlt
jno
xchg
lds
xor
lret
movb
test
mov
jae
ljmp
dec
movsb
test
std
inc
sub
push
sti
repz
mov
xor
adc
jno
stos
add
fnstcw
movsb
inc
test
push
add
xor
mov
jnp
adc
in
pop
mov
cmp
repnz
mov
das
test
jge
jno
cld
pop
sbb
xchg
pop
push
cmc
push
mov
sti
adc
mov
mov
xchg
es
mov
xchg
in
pop
jno
mov
push
dec
mov
jno
in
popf
xor
and
enter
cltd
jno
fdivp
rol
dec
test
mov
aaa
rcrl
mov
arpl
dec
dec
mov
inc
xchg
jne
sbb
das
enter
jnp
pusha
mov
or
mov
and
add
jno
ret
sbb
mov
and
jecxz
rclb
jb
repnz
test
das
bound
jno
xchg
mov
or
jecxz
test
mov
sbb
xchg
adc
pop
and
mov
jb
pop
jb
cld
leave
in
dec
jno
sub
movsl
xchg
popf
mov
adc
sub
mov
xorl
push
jno
lret
fcompl
pop
sub
out
mov
jno
cs
mov
jno
cwtl
fmulp
adc
movsl
in
push
jge
cmpsb
orl
mov
sbb
outsb
js
add
push
int
cli
xchg
jno
cwtl
push
pop
sbbb
dec
pop
push
icebp
in
fisttpll
jb
pop
adc
jl
add
repz
xchg
push
lret
pop
cmp
push
pusha
push
jno
xchg
sbb
dec
movl
and
test
mov
fbstp
mov
jno
mov
mov
sarl
into
arpl
jb
inc
jnp
jecxz
push
mov
sbb
jno,pt
cs
push
lret
add
sbb
lods
or
out
enter
and
subl
mov
sbb
das
aad
test
lock
stos
and
lahf
jb
ljmp
mov
mov
pop
lods
jno
xchg
mov
sbb
mov
sbb
scas
popa
jmp
jecxz
jae
ret
test
lret
out
aas
stos
js
jno
pushf
sbb
sub
or
jge
mov
push
inc
mov
jno
mulb
fisubs
enter
dec
jno
ja
in
int
jno
add
jp
jge
sub
test
pop
adc
and
jg
fnstenv
roll
dec
mov
inc
lcall
in
cmpsl
mov
jno
mov
ljmp
lret
repnz
mov
addb
scas
in
lods
adcl
test
movsb
jno
cmp
daa
pushf
inc
jb
push
dec
cmpsl
pop
and
xor
pop
rcrl
mov
ficoml
lds
xchg
xorl
ljmp
fbstp
inc
pusha
xchg
outsb
mov
jno
inc
inc
cmp
leave
add
and
or
push
insl
call
mov
pop
push
jb
jae
dec
in
xor
ret
jp
push
sub
pusha
shll
sbb
dec
data16
es
jg
in
dec
jno
test
mulb
into
dec
push
jno
and
and
mov
test
je
pop
ds
jno
mov
mov
jne
pop
xor
mov
xchg
xchg
fs
icebp
stc
fldt
mov
jae
out
insl
jno
mov
movhps
push
jge
mov
cli
pop
mov
imul
stos
inc
jno
movsb
andl
add
jno
shll
jno
pop
xchg
mov
jno
jae
jbe
dec
aas
fwait
jno
mov
xchg
or
dec
daa
stc
inc
test
and
mov
div
or
lea
ret
cmp
push
cmp
sbb
imul
pop
sub
add
imul
push
xor
or
ds
les
pop
inc
jge
pop
sarl
mov
imul
mov
mov
stc
jge
and
mov
ss
jmp
and
jno
cli
ja
cmp
mov
adc
jno
xchg
sbb
dec
jge
xchg
ja
inc
jno
enter
sub
std
pop
jmp
into
xor
int
sbb
jno
ja
mov
sbb
mov
testb
sub
ret
psubb
jo
jno
mov
in
subl
jno
fstp
pop
popf
mov
jne
je
enter
aam
addr16
subl
jno
idivb
rolb
je
pop
test
jae
pop
or
jno
aas
add
jno
lods
insl
mov
fists
xor
cmpsb
imul
js
inc
jmp
aas
lea
push
xchg
jl
dec
jno
dec
pop
pusha
enter
push
add
add
shl
stos
jno
adc
ret
adc
nop
mov
js
mov
dec
push
les
mov
xchg
push
add
jno
lods
dec
loop
xchg
xchg
popa
jno
add
jmp
fnstcw
ret
sub
or
test
mov
ljmp
add
push
sbb
jb
mov
push
and
imul
adc
jno
in
pop
jle
int
pushf
fs
lea
add
inc
jno
adc
pop
mov
xlat
ret
jnp
inc
pop
jbe
xor
inc
stos
aam
xchg
mov
cmp
sar
jle
mov
jno
into
cmp
sahf
adc
or
mov
jno
xchg
push
roll
sbb
mov
pushf
mov
mov
jae
mov
les
cmp
lods
bnd
or
lret
in
pop
jno
aaa
sbb
jae
add
push
xchg
cwtl
push
xor
jae
rcr
sbb
pop
cmpl
inc
jo
xor
jae
fs
test
mov
jnp
pop
adc
inc
jno
scas
mov
jne
data16
loop
add
iret
ds
sub
mov
jno
or
subl
sbb
pop
icebp
mov
dec
aam
cmpsl
mov
jae
mov
pusha
mov
sub
nop
jne
mov
shll
mov
xchg
pusha
into
jecxz
test
bound
xor
jno
xchg
outsb
push
mov
xor
sarl
fbld
jno
xor
cmp
out
dec
cmp
mov
add
test
dec
iret
lods
pop
inc
jne
mov
test
mov
arpl
pop
in
lea
dec
adc
repz
pushf
xor
jno
cmp
ss
je
ret
nop
mov
and
sbb
mov
jbe
testl
dec
clc
push
lcall
or
add
icebp
pop
cmp
push
sbb
jge
xchg
divl
inc
and
mov
inc
xchg
pop
idiv
pop
out
jno
stc
addr16
push
or
dec
lea
jno
pop
push
in
jno
jp
add
jno
sbb
bound
and
adc
punpckhdq
jno
adc
dec
sub
xor
adc
push
jno
add
pusha
xchg
jo
lock
rorl
sub
mov
lret
fcoml
mov
loopne
sbb
jno
pop
rcrb
sub
dec
data16
jno
in
mov
enter
popf
mov
das
orl
test
adc
jle
loope
add
out
jl
ja
adc
mov
clc
pushf
sbb
insb
jno
sarb
icebp
mov
push
xchg
mov
add
into
jae
mov
mov
je
mov
loopne
and
out
cmpsb
jle
test
xchg
xchg
xchg
mul
stos
and
jbe
bnd
dec
in
inc
jno
sbb
adc
lea
jge
je
scas
pop
mov
jno
fs
pop
cmp
in
lcall
lods
jno
dec
nopl
pop
scas
out
test
mov
je
and
imul
mov
mov
jnp
in
movsl
shll
in
jg
loop
pop
mov
sarb
cmp
jae
test
popf
inc
sub
repz
lea
outsb
sub
pop
dec
jno
xchg
dec
mov
das
test
aas
lret
cwtl
ljmp
add
dec
mov
inc
xor
mov
stos
adc
pop
rcll
jno
cmp
jg
push
popf
fmulp
imul
jno
fisubrl
cmp
jmp
push
mov
sahf
push
inc
scas
pop
lahf
hlt
out
test
je
xor
and
jno
sub
cltd
add
filds
jno,pn
int
and
push
rolb
rorl
jno
add
test
or
repnz
add
fmul
loope
jno
fmuls
pop
inc
insl
jno
push
mov
jno
subb
jge
aam
push
inc
inc
mov
inc
cld
push
jno
xor
mov
hlt
dec
xorl
or
jno
fimuls
mov
scas
push
vphsubdq
out
pop
emms
mov
cmpl
mov
dec
xlat
fistpll
inc
xchg
pop
dec
daa
sub
inc
shll
test
cmpsl
inc
lret
sub
ljmp
lock
rcrl
mov
jno
inc
adc
ret
leave
push
in
mov
gs
sbb
pop
dec
mov
jge
or
sbb
jno
lret
mov
xchg
movsb
rcrl
jno
xchg
cli
ja
push
dec
cwtl
jmp
add
xchg
mov
hlt
jno
adc
movb
mov
je
mov
sub
jno
dec
into
dec
les
push
jno
stos
scas
sbb
es
jne
cmp
mov
jno
fistpll
js
sub
dec
cs
fcmovnb
sarb
jno
dec
rol
cli
lcall
scas
mov
xchg
sub
push
jl
jno
jns
outsb
cmpb
out
sbb
rcrl
js
mov
cmp
and
cmp
jno
lods
sbb
mov
pop
nop
xchg
xor
add
jno
inc
in
das
mov
cmp
in
pop
insb
xchg
cld
out
adc
mov
adc
xchg
pop
jno
xchg
es
hlt
inc
add
inc
dec
add
sub
loope
mov
mov
cmp
mov
cmp
ret
mov
adc
add
adc
jno
mov
push
dec
lods
sub
negl
push
out
jno
add
daa
inc
mov
sbb
call
xorb
out
jae
out
jb
fnstenv
jno
adc
xor
push
lcall
xchg
mov
jp
in
and
into
repz
jae
mov
pushl
rcr
aas
push
mov
fnstenv
lock
je
xor
inc
mov
fs
insb
lods
cli
pop
aaa
cmp
mov
jno
adc
or
mov
adc
cmp
jno
mov
jae
or
lahf
mov
sub
cld
sahf
push
mov
fisubs
mov
xor
mov
dec
lods
pop
and
jae
shrl
mov
sarb
push
jno
xchg
clc
mov
jno
lcall
jno
push
aas
mov
mov
jno
push
adc
pop
mov
mov
lcall
push
call
out
jecxz
xlat
inc
notl
adc
sub
cld
insl
aaa
mov
stc
jl
pop
clc
cs
test
repz
and
mov
lret
and
xorb
cmp
sub
jno
imul
icebp
das
mov
mov
in
insl
push
jae
in
pop
arpl
mov
jo
push
jb
mov
xlat
jae
xor
filds
and
ja
sbb
xor
xor
jg
push
jl
sbb
inc
jge
andl
pop
push
jno
sbb
push
idivb
call
ljmp
lret
iret
jno
test
xchg
mov
mov
pop
pop
dec
inc
xchg
shl
sub
push
js
stos
cwtl
push
add
pop
cld
int3
jno
mov
adc
add
jno
push
lret
test
jno
jne
xor
stos
push
push
jno
loopne
inc
pusha
sbb
jno
jle
lock
sub
jno
scas
cwtl
paddusb
jp
adc
jne
xchg
jg
out
sub
int
inc
jne
cmpsb
jb
test
jo
stc
call
mov
fcoml
jmp
and
push
jb
mov
dec
or
cmc
mov
insb
pop
loope
xor
pop
mov
add
mov
cltd
movsl
jno
cld
mov
pop
jno
dec
push
dec
cmp
push
lahf
sub
loopne
jno
lock
lea
and
iret
push
xor
and
xorb
xlat
jno
lea
out
sbb
js
sahf
das
jno
add
ss
mov
fs
out
int
dec
sbb
hlt
or
push
int3
jge
pop
xchg
jae
pop
dec
sbb
shlb
sub
xor
sbb
imul
mov
fwait
push
cltd
daa
repnz
imul
jg
pop
xlat
pop
arpl
sub
bound
jno
call
and
lea
sar
mov
test
fidivrs
push
jno
inc
cmp
jno
push
xor
jae
pop
jno
cwtl
or
shll
repz
popf
dec
gs
jl
mov
out
add
hlt
mov
or
rolb
mov
sub
clc
lea
mov
fidivrl
imulb
dec
adc
jne
sbbl
lcall
xchg
faddl
je
hlt
xor
jno
mov
jge
scas
mov
sbb
int3
mov
push
or
mov
jno
addr16
bnd
or
dec
fs
or
call
jno
dec
inc
mov
mov
jno
scas
out
loop
out
jge
or
push
outsb
lea
push
mov
aam
cli
push
jp
mov
jl
pop
jo
push
cmp
cs
lock
jno
gs
lds
xchg
jno
cmpsb
dec
int3
adc
and
adc
cmp
roll
pop
lods
xchg
jp
repnz
repz
hlt
cmp
repnz
ss
mov
sub
jb
mov
xchg
jae
repnz
aad
sbb
scas
cmp
pop
pop
add
xchg
jge
lahf
icebp
adc
rolb
jno
push
lret
es
jge
ss
mov
mov
jno
adc
aam
sub
fcos
je
daa
cld
adc
jno
lods
sahf
in
shrb
fwait
pmaxub
sub
jno
lea
repnz
sbb
add
add
loopne
xchg
stos
pop
xchg
imul
sbb
xchg
out
jns
cmp
scas
cmp
jno
repz
sbb
sbb
cld
std
sbb
pusha
ljmp
shll
bound
in
mov
in
es
jb
dec
gs
sbb
pop
in
jne
mov
je
movsb
adc
mov
cltd
push
add
shll
fdivrs
jno
jnp
lret
sahf
stos
jne
pop
inc
xchg
dec
lods
hlt
rcr
jno
cmp
pop
int3
xchg
out
aas
jge
loopne
push
sbb
pop
mov
jae
addl
or
das
sub
fsubl
negl
cmp
push
into
or
insl
jae
pushf
jb
inc
jge
jge
les
jl
pop
adc
lods
jp
mov
jmp
jno
into
mov
sti
adc
cmp
arpl
hlt
add
inc
or
cltd
lea
dec
fadd
push
jno
sarb
pop
movsl
jno
mov
js
push
mov
or
jb
mov
jno
xchg
push
inc
mov
pop
test
xor
inc
out
dec
xchg
xor
or
adc
fcmovu
popa
fidivs
jns
cmp
xor
cmc
lea
ret
sahf
and
xchg
jecxz
and
add
inc
stc
cmp
adc
add
xor
pop
sbb
and
pop
imul
adc
jle
or
jge
fwait
xchg
jae
jb
push
icebp
mov
mov
xor
out
out
cmpsb
push
test
ret
mov
mov
adc
jl
mov
jnp
jne
in
call
jae
sbb
insb
xchg
insl
mov
jmp
inc
pop
jb
adc
out
insl
jecxz
jns
aad
sub
lock
or
pop
movl
jne
cmp
jae
mov
mov
scas
mov
push
jns
insb
push
popa
xor
daa
cmp
cmp
adc
es
or
lea
jecxz
out
add
add
mov
test
add
imul
ret
sub
and
outsl
js
xchg
icebp
or
xchg
je
cmp
pop
xchg
jmp
lods
xor
out
xor
movsb
lods
mov
or
mov
imul
xchg
jecxz
insb
mov
sub
icebp
ss
add
adc
popf
pop
hlt
pop
sbb
jp
out
dec
mov
in
jl
inc
adc
cmp
fwait
in
pop
ret
jae
xlat
test
in
shlb
stc
xchg
popf
jb
cmp
mov
jle
inc
jno
push
inc
adc
dec
jnp
jecxz
mov
aam
pop
fbld
push
push
insb
mov
leave
outsb
push
test
jecxz
pushf
popf
mov
mov
lea
mov
xchg
adc
mov
outsl
das
stc
or
xchg
cmp
mov
addr16
repz
adc
adc
xor
sbb
fcmovu
popa
fidivs
jno
xchg
mov
shll
test
sahf
out
pop
jne,pn
xchg
sub
xor
cmp
mov
jne
inc
pop
mov
jae
mov
adc
mov
or
jae
xchg
scas
push
xchg
pop
es
add
pusha
adc
inc
pop
sbb
scas
sub
jae
rep
arpl
outsl
add
cld
rcrb
in
in
fidivl
fwait
add
mov
shrl
fsubr
test
dec
jne
roll
mov
mov
mov
scas
fs
repnz
pop
ds
cmp
or
sbbb
bsr
xor
jno
cwtl
test
or
int3
mov
jae
divl
out
pop
xchg
leave
or
jge
cmp
and
push
imul
sub
mov
div
sahf
mov
fwait
les
lret
and
and
fiaddl
dec
aaa
outsl
xchg
ds
or
mov
pop
jmp
jno
test
push
sahf
jno
or
repz
mov
jo
cmp
mov
arpl
repz
loope
test
enter
jp
out
je
in
lea
jae
test
fidivrs
insb
jno
mov
test
push
cmp
inc
hlt
dec
aam
and
ss
jno
xchg
adc
cmp
scas
mov
outsl
jg
out
outsl
fdivs
push
sbb
pop
push
arpl
testl
roll
jns
repz
aad
ss
mov
addb
mov
popa
int
xor
mov
fnsave
mov
add
das
jo
cltd
stos
sub
lea
inc
in
std
mov
loop
enter
jae
in
inc
xchg
cmpsl
adc
pop
loop
iretw
outsb
jno
fiadds
push
test
ret
das
sbb
lock
shll
in
clc
xchg
jne
xchg
cmp
jo
lret
test
mov
pop
xor
scas
push
jno
dec
mov
pop
adc
divb
sub
pop
hlt
test
jno
gs
cmp
inc
adc
test
rolb
jmp
inc
jle
gs
movsb
nop
inc
hlt
inc
fbstp
mov
repz
decb
xor
adc
lods
test
and
xchg
mov
lea
flds
or
mov
out
xchg
dec
pop
and
sub
jae
pop
dec
in
xchg
or
or
mov
jno
fldt
cltd
jl
scas
adc
aaa
jno
or
mov
hlt
pop
addr16
sub
xchg
push
sbb
mov
pop
mov
add
xchg
icebp
lcall
test
clc
int
mov
repz
pop
loop
iret
xlat
cwtl
jno
scas
out
aad
mov
ret
and
mov
jmp
bound
mov
not
jno
cmpsb
mov
lds
jno
xor
mov
and
push
fdivp
in
sub
jl
inc
and
lret
lahf
imul
jno
mov
xchg
fdivs
sbb
test
out
sti
out
in
xor
cmp
push
imul
inc
outsl
icebp
sbb
xchg
jge
adc
test
pop
ret
and
xchg
jno
push
test
stc
adc
xchg
cmp
xchg
jno
insb
push
fdivr
aad
sub
cwtl
or
adc
inc
and
pop
sbbl
sub
mov
cmp
xchg
loope
xor
pop
loop
jno
dec
mov
xlat
mov
leave
shlb
jle
in
inc
fnsave
in
popf
and
ja
inc
mov
lahf
jge
push
sbb
cmc
add
jge
aaa
in
js
jne
sbbl
jne
or
xor
push
stos
jnp
jge
cmc
notb
or
inc
add
cmp
add
js
into
adc
or
xchg
dec
jae
jp
jno
arpl
call
jb
pop
and
in
test
jne
ljmp
imul
xchg
das
push
push
movsl
in
jne
mov
lret
fs
cmp
scas
xor
or
and
adc
das
in
dec
icebp
imul
jno
int
mov
add
xchg
xor
std
pop
inc
xlat
adc
mov
ss
test
pushf
jae
popl
fistpll
jnp
ljmp
arpl
adc
lea
sub
cld
sub
or
sbb
insl
scas
fwait
shll
movsb
test
icebp
inc
addr16
call
ljmp
es
and
fistps
mov
sub
in
test
mov
adc
xor
clc
push
ss
pop
xor
xchg
mov
jno
add
mov
cld
ja
sub
push
adc
js
aas
lock
int3
aam
or
mov
pop
pop
sarb
mov
pushf
jno
or
jno
pusha
loope
cwtl
sbb
lods
outsb
outsb
test
stc
cmp
ss
jae
mov
popa
shrl
dec
push
add
mov
sahf
loop
outsl
xor
xchg
into
addr16
ss
rcrl
bound
mov
inc
popa
jno
inc
adc
mov
loope
xor
dec
stos
inc
jnp
ss
jno
push
push
add
jno
bnd
stos
push
adc
jno
adc
pop
fs
jp
cld
jae
mov
mov
xor
jno
daa
push
out
fsts
mov
insb
inc
mov
mov
fs
jno
adc
mov
adc
test
cld
cmp
jb,pt
jmp
jno
add
cs
push
mov
xchg
or
jmp
jno
push
xor
lea
into
push
mov
iret
mov
popa
pushf
cmp
roll
and
adc
jno
dec
inc
xchg
lcall
jns
outsl
jae
lods
inc
test
xchg
popf
pusha
jno
call
imul
stc
xchg
mov
jae
xchg
xchg
imul
adc
aas
shll
out
call
cwtl
mov
jecxz
jp
lret
inc
push
jb
negb
jae
xlat
sub
cmc
cmp
pop
dec
pop
jge
pop
mov
jp
outsb
imul
mov
sub
xor
nop
sbb
or
outsb
jae
stc
int
mov
icebp
daa
cmp
scas
or
mov
fs
mov
xchg
fbstp
cmp
loope
adc
fcoms
mov
nop
ficoms
out
jg
or
push
test
test
mov
or
xchg
jae
adc
sahf
jge
and
sarl
push
jne
mov
popa
dec
cwtl
ss
lods
icebp
ds
loope
jno
or
scas
mov
xor
insb
mov
gs
es
aas
out
ror
fidivs
jb
in
faddl
rcrl
rcrb
mov
imul
out
into
jge
add
mov
mov
cld
movsl
jno
cmpsl
xchg
pop
push
insl
jae
jno
add
dec
jb,pt
and
outsl
push
aam
in
xchg
fists
mov
jae
lods
stos
mov
mov
mov
push
sub
jno
gs
aas
push
roll
jno
addr16
xchg
pop
adc
in
xor
pop
inc
mov
jge
lea
enter
mov
bound
adc
in
jne
push
cmp
in
shll
subb
xchg
idivb
xor
jne,pn
mov
outsl
xor
jae
pop
outsb
shl
in
enter
xchg
push
dec
jno
xor
jbe
jno
push
andb
jle
jno
pop
pop
call
jne
test
mov
imul
jo
cmpsl
mov
iret
das
rep
aas
xchg
call
dec
ret
or
cltd
jno
inc
sahf
ljmp
sub
xlat
cs
adc
das
pop
sub
jno
lcall
mov
jne
scas
dec
rorb
and
jno
jb
push
stos
adc
inc
jno
ret
push
inc
lds
data16
mov
test
jg
and
dec
shrl
push
fwait
pusha
jge
inc
stc
pop
sub
fsubrs
orb
sub
bound
push
imul
gs
inc
jecxz
push
jno
xor
cwtl
cmc
es
jae
mov
rol
jo
lea
rcll
inc
jno
hlt
adc
lret
test
jae
mov
inc
pop
or
out
mov
dec
mov
out
lahf
int
mov
lea
xchg
sbb
jne
sbb
ss
cmpsb
je
pop
shlb
ljmp
nop
mov
inc
in
add
cli
jno
xchg
sti
test
out
jno
fstpl
popa
jo
pop
dec
jno
cmp
cmpl
test
sub
xchg
push
jno
add
dec
scas
pop
mov
mov
loopne
mov
jne
adc
mov
adc
sahf
add
mov
cmp
std
sub
dec
insl
leave
aas
lea
adc
outsl
add
or
jl
mov
jge
adc
dec
inc
xor
jno
lock
loopne
cmp
jne
mov
repz
push
fnsave
lahf
lods
xchg
mov
inc
lret
push
and
ja
xchg
repnz
in
lea
xor
jle
mov
out
dec
lea
aas
mov
data16
inc
notl
add
mov
xor
inc
jno
mov
pop
sarl
and
insb
push
jno
mov
and
xor
lods
mov
shll
js
jne
mov
and
test
jb
jp
leave
add
fcmovbe
xor
into
notb
ret
mov
push
push
mov
pusha
adcb
inc
loopne
mov
into
sahf
je
imul
aam
ss
mov
jno
stos
pop
daa
fs
and
jno
loop
mov
jno
push
sarl
subl
add
int
mov
pop
xchg
mov
jne
mov
aad
cmc
pushf
push
xchg
insb
test
push
clc
repz
shl
das
mov
andb
enter
les
stc
or
jno
pushf
xchg
call
jne
out
pop
iret
dec
jno
push
pop
adcb
mov
lea
xor
aam
test
frstor
mov
rorl
or
mov
xor
ficoms
in
mov
notl
or
shl
xchg
dec
xorb
aam
dec
jb
inc
xor
icebp
lahf
pop
mov
push
insb
jno
mov
mov
test
add
jne
push
mov
enter
shll
fldenv
add
push
iret
jb
push
pop
rorl
cs
testb
mov
xchg
pop
lret
fdivl
scas
or
sub
sub
cmp
push
jae
test
int3
cltd
lret
xchg
and
mov
pusha
push
and
and
jno
pop
mov
jno
mov
mov
mov
and
jbe
jge
popa
mov
push
mov
imul
repz
sub
jno
pop
retw
dec
loopne
xchg
lods
scas
aas
cmp
je
mov
mov
jns
adc
jno
jge
aad
rcrb
popa
inc
stos
sbb
push
aam
scas
jns
pop
movsb
lods
or
hlt
aaa
xlat
mov
inc
mov
xor
and
cmp
cmp
sub
pop
cmp
or
stos
mov
push
xchg
jno
add
ds
cmpsl
add
sbb
lret
mov
jno
jmp
jno
sub
ss
sub
lock
dec
or
xor
cmpsl
in
mov
add
pop
pop
out
les
sbb
mov
push
xlat
imul
jno
dec
or
je
movsb
adc
pop
cmp
dec
pop
iret
int3
mov
and
sub
gs
xor
lcall
dec
fisttpl
popa
xchg
aas
in
fcoml
lds
push
in
sbbl
sbb
cmp
or
add
int3
mulb
inc
jno
jo
push
jnp
and
xlat
jno
push
fisttpll
lock
jg
loopne
inc
shrl
jbe
adcb
lods
xchg
ljmp
cmp
jno
sbb
sbb
jae
inc
jno
ja
cmp
fs
cwtl
shl
mov
iret
jno
mov
scas
inc
pop
or
cmpsl
push
push
mov
lret
pusha
cltd
test
xchg
lock
jno
sahf
xchg
dec
test
outsb
rclb
in
push
movsb
jl
imul
sub
jle
scas
clc
and
les
push
call
cmp
xor
imul
ja
lret
xor
jno
mov
inc
cltd
jno
loop
inc
jmp
push
imul
mov
push
and
mov
jno
loopnew
mov
fnstcw
mov
push
lahf
sub
mov
jno
mov
and
pop
gs
es
dec
std
mov
sbb
ljmp
lret
in
dec
je
push
sub
add
fbstp
push
scas
lods
fwait
imulb
lods
repnz
cmp
xor
cmp
inc
movsb
dec
jmp
xchg
ljmp
cmp
dec
hlt
mov
jno
jp
scas
mov
faddl
add
dec
or
jno
push
lcall
aad
mov
daa
jecxz
jno
sub
in
lret
mov
pop
dec
imul
xchg
jno
jnp
dec
shrb
push
push
movsb
dec
notl
jno
and
pop
or
lcall
out
inc
or
int3
xor
mov
in
adc
int3
cld
add
xchg
jl
push
jno
shrd
cmpl
push
xlat
push
xchg
sub
dec
shlb
cmc
jge
clc
test
push
cmp
jno
and
aaa
pop
mov
adc
es
adc
mov
pop
je
outsl
push
jno
dec
jg
mov
and
xor
jno
movsb
loopne
jmp
lret
adc
addr16
loope
jg
jb
jbe
roll
int
lret
js
jnp
jno
lock
jno
sti
sbb
dec
jb
push
cmp
add
mov
xchg
je
cmp
push
xchg
test
xor
cli
into
dec
mov
jne
xchg
adc
cmp
adc
leave
dec
inc
mov
cmp
push
xor
shlb
cmp
dec
pop
jno
sub
fiaddl
xchg
mov
adc
xor
or
jno
bound
out
in
add
cli
mov
push
dec
pop
ret
mov
ja
sbb
sbb
jae
call
or
cli
popf
pop
pushl
pop
mov
rol
cmpsb
enter
movsb
int
rorb
jno
test
adc
jne
rorb
outsl
or
xchg
enter
jp
jne
jo
aaa
inc
xor
sub
dec
sub
mov
sahf
and
jne
dec
and
push
mov
pop
jae
pop
xchg
or
mov
cs
inc
sbb
push
in
enter
xchg
or
sub
in
jb
outsb
ja
inc
test
fsubrl
jno
jmp
gs
out
adc
cmp
push
clc
adc
push
iret
jnp
scas
imul
pop
sub
das
jmp
sbb
jae
cld
push
fnstsw
xchg
jp
push
stos
loope
hlt
repz
in
scas
jno
push
stos
inc
lcall
lods
jns
sub
mov
xor
jb
repnz
adc
sbb
jno
rcr
fwait
mov
sahf
data16
insl
and
cmpb
popa
loope
jae
pop
je
daa
aad
jno
add
pop
jno
mov
push
imul
stc
adc
inc
mov
jne
xchg
mov
push
popf
sbb
std
lret
jbe
jo
adc
xchg
xchg
xor
aaa
or
adc
jb
jno
ror
jno
mov
adc
jne
or
icebp
push
pop
push
into
jae
lahf
or
lret
test
jecxz
popf
mov
enter
stc
hlt
inc
in
in
xor
mov
inc
mov
int
test
add
ss
xor
cld
insl
jae
sbb
cmpsb
pop
lcall
lds
test
or
xor
or
jge
or
jno
mov
loopne
jno
mov
jne
sbb
jb
fisubl
xorl
ss
dec
push
pushf
das
push
jno
mov
mov
sarl
fwait
cli
xor
adc
sub
jmp
xchg
cmpb
rol
jae
cli
dec
xchg
inc
stos
cld
and
shlb
pop
push
mov
or
mov
jbe
rdtsc
jne
movsb
push
mov
inc
js
xchg
fidivs
scas
loope
and
mov
jno
jbe
and
cmp
pop
jno
frstor
and
push
cwtl
pushl
out
mov
lahf
mov
cmc
in
call
jge
xchg
lods
xchg
nop
shlb
xor
and
sbb
adc
sbb
fs
lods
movsb
and
mov
and
mov
push
pop
cmp
ja
jno
adc
and
pushf
iret
mov
dec
inc
jo
inc
mov
adc
xor
xor
pop
insl
cld
sti
imul
inc
or
lods
sub
test
out
cmp
int
jmp
jno
xor
lret
sbb
clc
mov
pop
bound
mov
cmp
icebp
flds
int3
jno
arpl
push
not
jg
addr16
hlt
nop
sbb
cltd
loopne
ret
in
pop
push
push
inc
inc
mov
adc
jno
inc
out
pop
jg
jl
inc
aaa
test
or
aam
hlt
cmp
sarl
scas
out
jno
and
sub
cmpb
adc
mov
or
jbe
pop
stos
les
dec
jp
jno
in
mov
loopne
stos
int3
lea
pop
pop
movsb
sub
lods
loop
mov
pop
pusha
or
dec
jge
pop
adc
arpl
cmp
sahf
lods
mov
jnp
loop
iret
jmp
dec
xchg
xor
mov
lcall
movsb
jno
and
test
jge
inc
xchg
dec
jb
adc
int3
xchg
jno
sub
sub
in
jne
in
repnz
pop
sbb
shrl
repz
cld
cmp
cmp
or
push
aas
imul
roll
repnz
lods
rcll
jno
icebp
xchg
int3
hlt
pop
xchg
jno
fsubl
std
cmp
inc
jno
jg
dec
dec
sub
jno
mov
stos
lods
lret
cwtl
daa
hlt
mov
xchg
cld
test
aad
and
push
jecxz
xor
arpl
in
jmp
mov
xchg
sub
adc
aaa
mov
jno
mov
pop
lcall
push
push
xchg
pop
pop
mov
sub
jecxz
push
test
jl
push
mov
test
repz
jnp
and
ret
jg
lret
or
imul
jl
subl
jae
imul
iret
in
jb
push
pop
cmp
scas
test
testl
jl
jae
dec
test
jae
test
lahf
test
dec
pop
push
sbb
cltd
jle
gs
mov
and
jecxz,pt
es
call
mov
in
lcall
push
push
mov
jle
mov
jp
in
jno
test
daa
add
jno
jecxz
or
inc
jno
mov
add
fisttpll
jno
push
adc
jp
cmpl
mov
mov
imull
mov
xchg
mov
lahf
sbb
fnsave
dec
xchg
mov
mov
jno
inc
je
xor
xchg
mov
rcll
repnz
in
mov
lcall
test
aas
cmp
enter
movsb
inc
rcrb
sub
in
and
iret
pop
and
jno
sarl
sbb
xchg
imul
xchg
sub
mov
sbb
sahf
mov
jge
scas
mov
xchg
dec
adc
pop
ja
cltd
mov
xor
out
pushf
popa
cmp
add
mov
mov
test
js
jno
in
mov
push
sub
rclb
cltd
or
push
xor
jb
jge
enter
inc
jge
inc
popf
adc
mov
cmp
mov
sti
pop
sub
inc
jne
jo
sbb
shl
xor
or
ret
repnz
inc
test
mov
add
jecxz
addl
or
dec
mov
fmulp
lods
cmp
ljmp
push
aad
addr16
xchg
cli
sub
test
inc
jno
xchg
fsts
shl
mov
xlat
jae
cmp
jns
and
cltd
lahf
pop
mov
lret
cmp
aam
out
jp
xchg
inc
test
loopne
jmp
aaa
aaa
fdivrl
repz
pusha
frstor
or
mov
push
fsubr
jns
adc
mov
mov
rolb
jno
int3
test
jge
scas
loope
xchg
xchg
mov
enter
dec
daa
clc
add
adc
lret
or
jno
out
mov
fmul
lea
je
lock
out
pop
add
xchg
lcall
out
pusha
aam
fimull
sbb
xchg
jle
sub
shr
loopne
and
fildl
mov
ret
jb
sbb
xchg
cmp
test
hlt
pop
jp
push
aam
sub
xor
lods
pop
data16
xlat
nop
xchg
cld
pop
dec
jns
les
aam
push
arpl
xor
mov
imul
fs
negl
push
jnp
cltd
push
popf
std
mov
mov
push
into
push
jno
and
sbb
xchg
sub
xor
or
jbe
std
pop
jno
adc
data16
lcall
jmp
addr16
dec
packsswb
aam
sub
sub
fwait
cmpsl
mov
adc
fadds
sub
cmpsb
xor
es
and
mov
jg
push
xor
imull
imul
mov
ljmp
fsubp
jno
leave
fiaddl
and
nop
jno
hlt
xchg
inc
and
jge
pop
daa
pop
pop
jmp
loopne
inc
push
xchg
mov
inc
test
push
pop
jge
or
iret
fs
and
cmp
int3
sub
jno
imul
das
je
cld
jno
xchg
jge
pop
fs
popf
pop
jno
fcompl
idivb
fidivrl
add
push
jmp
mov
or
sub
jge
insb
jl
ljmp
add
lea
pusha
mov
push
fnsave
pop
dec
xor
xchg
jno
dec
pop
jecxz
sub
mov
sub
lret
out
jmp
xchg
dec
insl
mov
add
fdivl
add
movsl
inc
es
mov
xchg
aas
add
ja
jne
dec
jg
mov
or
xchg
mov
jo
jae
pop
mov
sub
cmpsl
aam
sti
lods
daa
add
addr16
jno
mov
popa
pop
ret
inc
js
push
cs
mov
adc
adc
and
jecxz
pop
fbld
pop
push
mov
aam
mov
fistpl
data16
imul
sbb
push
jbe
fsubl
adc
int3
cmc
gs
stos
orl
jb
cli
xchg
lahf
ret
mov
mov
push
jnp
xor
es
jno
push
push
sub
jae
push
in
xor
add
adc
and
or
xor
cmpsl
outsb
push
iret
sbb
xor
icebp
clc
mov
pusha
inc
xorl
push
jg
jno
push
nop
mov
xlat
cs
cmp
sbb
push
push
dec
pop
pop
or
cmp
ds
xor
jb
pop
sahf
test
jecxz
push
rclb
in
and
sar
mov
repnz
sbb
jb
xchg
or
cmp
push
mov
pop
or
xchg
xchg
jecxz
adc
adc
adc
add
sbb
shld
push
scas
or
jae,pt
repnz
movsb
jno
dec
mov
adc
adc
pop
xor
adc
pusha
push
jne
mov
stc
jae
jg
sub
adc
xchg
mov
cmp
test
adc
dec
loopne
in
cli
xchg
push
cmp
push
inc
imul
cmp
bound
popa
loope
add
rol
xor
and
xchg
jno
cld
test
in
mov
fdivrs
adc
xchg
mov
imul
jno
xchg
fninit
dec
adc
xchg
jno
fldenv
adc
sahf
mov
adc
sbb
or
je
mov
clc
ds
fsubrl
lock
imul
xchg
jae
or
sub
or
push
leave
testl
sbb
and
pushf
iret
jno
shlb
mov
and
int
xchg
jnp
out
cld
dec
push
mov
jo
cmpsb
cmc
repnz
mov
push
rcl
add
call
sub
jno
popf
test
aam
xchg
cld
movsb
xchg
mov
jb
lea
xchg
pop
dec
xlat
repnz
mov
dec
inc
push
mov
jno
sbb
and
pminsw
jno
inc
sub
inc
iret
divb
xor
mov
std
aad
decl
push
jno
mov
inc
addr16
sub
aaa
push
dec
xor
mov
sbb
add
push
jg
ss
jae
testl
dec
nop
jae
add
aas
and
ret
mov
mov
pop
in
xchg
cvtps2pi
and
iret
jae
xchg
fldenv
bound
push
popa
in
xchg
lea
les
idiv
sub
das
movl
xchg
jbe
and
add
jmp
fcomip
scas
outsl
jno
rolb
adc
fsubs
rorl
push
pop
es
xor
or
dec
les
mov
mov
call
loop
push
push
pop
jno
cld
inc
jo
arpl
jno
aas
xchg
mov
aaa
lret
in
jno
xchg
mov
push
jl
pop
inc
add
mov
inc
cmp
sub
xchg
dec
insl
jno
jp
mov
es
jl
pop
mov
pop
leave
mov
lods
pop
int3
jle
js
addl
or
in
lea
daa
jb
je
and
cld
sarb
add
ss
pop
jno
rcrl
sbb
popa
mov
or
rcll
rorl
inc
adc
dec
push
add
jno
jmp
mov
jno
aas
insb
mov
xor
sub
dec
jno
loop
orl
cmp
ja
jp
push
je
fidivl
sbb
movsb
repz
dec
decl
fwait
mov
push
push
dec
pop
mul
jno
mov
insl
mov
stc
xlat
jno
lods
push
mov
ss
jno
or
cmpl
lret
mov
sbb
mov
jno
mov
jmp
inc
sub
jno
or
xchg
mov
and
dec
bnd
stc
inc
add
mov
mov
dec
je
xchg
jl
lahf
mov
push
ret
std
xor
xchg
scas
or
jno
pop
and
cwtl
loop
inc
lret
sub
stc
test
cmc
mov
aaa
arpl
jno
cmp
cmp
jno
or
cmc
mov
sti
pop
push
jno
insb
movaps
push
in
pop
ljmp
xchg
mov
mov
xor
pop
cld
stos
sti
add
loop,pn
dec
shl
jno
pop
inc
adc
xchg
sub
xor
xchg
xchg
mov
dec
test
jae
jne
ljmp
or
out
dec
adc
adc
mov
jno
mov
add
int
sbb
popa
sub
xchg
mov
cmp
mov
and
cmc
vmread
adc
aad
xchg
test
sub
mov
jae
insb
out
notl
icebp
cmpsb
call
jno
push
jmp
int3
rcrl
xchg
les
jb
or
xor
add
cltd
jno
push
xchg
loopne
mov
mov
rol
outsl
jae
stos
sub
xor
xchg
jmp
lds
in
jmp
xchg
inc
xorb
cmp
jmp
test
shlb
cli
daa
adc
sbb
jno
lock
fwait
push
lahf
or
hlt
mov
icebp
daa
jno
jne
loopne
gs
jno
add
inc
shlb
and
fs
aaa
jp
sub
inc
mov
ret
hlt
mov
jno
jl
lock
movsb
test
data16
cwtl
push
sub
call
fdivs
pop
pusha
stos
inc
in
sbb
sti
adcl
fs
cmpsb
sub
pop
push
sub
push
or
in
and
jae
cmc
mov
jbe
inc
push
adc
add
mov
sub
jl
test
push
jge
ret
pop
aam
incb
xchg
jg
sub
jle
jecxz
lods
and
xchg
mov
jno
pushf
dec
repz
push
mov
cmpsl
sub
xlat
push
lea
xor
xor
ja
pop
movsl
or
pop
mov
jge
fistps
jne
adc
outsl
les
flds
decb
jno
stos
movb
shrl
lcall
je
call
mov
jne
cli
loop
fs
jno
mov
add
jb
xor
iret
jnp
xchg
xchg
and
or
call
aam
js
jno
mov
ljmp
or
dec
pop
xchg
mov
xor
jno
ss
xchg
jae
pop
movsl
adc
xor
out
rcll
push
sbb
cmp
lret
mov
xor
lcall
push
jae
adc
lret
jno
adc
sub
or
jne
shl
sub
lock
push
stc
adc
in
lods
inc
push
outsl
jg
outsb
mov
lahf
out
inc
push
dec
inc
ljmp
call
mov
adc
push
std
jno
cmc
sbb
nop
cs
sub
test
lds
or
mov
nop
in
divb
jne
add
in
mov
add
push
test
data16
cmp
inc
pop
mov
ja
xchg
mov
dec
test
pop
jmp
pop
ljmp
jno
inc
mov
lock
cmp
jno
push
sti
mov
out
ja
testb
mov
dec
sarb
test
ss
fdivs
jno
jp
into
push
lcall
or
mov
cld
addr16
or
push
mov
fs
pop
lock
and
add
adc
movsb
inc
adc
sub
xor
std
cli
mov
add
mov
test
je
insl
sub
in
imul
adc
bnd
add
and
jge
lret
adc
adcl
push
das
jb
or
push
cmp
push
mov
rcr
pop
test
pop
ja
repnz
xchg
pop
pop
or
out
cld
jno
in
inc
insl
add
xor
js
pusha
sub
cmp
and
push
cmp
outsb
or
jno
and
mov
xorl
sbbb
dec
jno
mov
jl
jno
aas
mov
les
outsb
jno
cmpsb
jmp
cmp
je
jecxz
out
jno
add
and
sbb
xchg
aad
cwtl
xchg
out
jae
test
in
lock
jns
sti
stc
jno
push
pop
inc
cmp
adc
ror
push
sbb
mov
sbb
aad
lock
jno
cmp
pop
sahf
scas
insb
data16
iret
icebp
pop
mov
add
lahf
jne
pusha
ror
sbb
jno
lods
fcoms
test
pop
repz
mov
adc
sbb
shr
sub
dec
lods
jecxz
je
loope
xchg
les
jns
xlat
mov
push
push
int
mov
push
mov
sub
ss
icebp
out
push
out
mov
jae
outsl
inc
repz
lods
lret
xchg
shlb
cmp
push
leave
adc
push
sub
ja
scas
and
and
add
sbb
add
add
jno
sub
in
in
test
sbb
dec
xchg
jno
dec
in
sbb
les
jno
pop
fisttpl
push
rorb
xor
dec
movsb
jno
xor
xor
jno
sbb
adc
sbb
xchg
nop
popf
mov
mov
push
sbb
xlat
repnz
or
add
jno
push
daa
lret
mov
fnstenv
jno
leave
jecxz
and
adc
clc
pop
hlt
jmp
and
pop
filds
movsb
divps
cmp
or
xor
aam
imul
jno
cmp
sbb
dec
push
cld
cmp
or
jno
in
add
popf
divb
rcl
pop
jle
jmp
lods
clc
sbb
daa
icebp
or
testb
adc
enter
and
xor
je
das
cmp
mov
mov
jmp
mov
dec
xchg
jno
addr16
adc
cmpsb
mov
out
xlat
jge
jecxz
jmp
dec
mov
pop
jno
shl
jns
out
jno
int3
jecxz
rol
jg
jno
fwait
imul
gs
mov
mov
inc
dec
push
les
test
ja
adc
lods
dec
js
xchg
jmp
adc
mov
pop
std
popf
dec
inc
neg
push
or
loop
jno
dec
push
in
sbb
adc
and
push
and
jnp
mov
pop
jno
cmp
popf
jb
imul
and
divl
adc
addl
sbb
clc
mov
sub
xchg
sbb
or
push
jno
mov
fdivrl
mov
gs
jecxz
xchg
faddp
cmp
cs
and
or
jno
sbb
mov
call
sbb
imul
jne
jmp
lcall
hlt
mov
sub
jne
ljmp
or
mov
dec
mov
cmp
pop
jne
cmp
sahf
or
repnz
or
arpl
scas
mov
pop
jno
insb
fadds
jno
jmp
adc
jo
xor
lea
adc
je
call
jg
rcrb
andb
mov
pop
push
imul
dec
mov
das
cmp
mov
mov
sbb
adc
fsubp
inc
arpl
mov
jno
fildll
push
lods
mov
jb
push
add
jne
hlt
push
inc
aam
jle
stos
into
inc
jne
adc
loopne
in
xchg
test
fsubs
aas
and
into
fwait
xor
dec
mov
ffree
sbb
pop
pushf
and
mov
lret
and
clc
jbe
nop
add
stos
pop
xchg
mov
fucomi
subl
fnstenv
jno
lock
jne
mov
test
push
sub
fcmove
lea
cwtl
mov
add
pop
push
mov
pop
pop
in
inc
cmp
leave
add
push
push
sbb
jno
jbe
xorl
mov
mov
dec
push
insl
into
jb
pop
mov
inc
gs
jae
mov
out
xchg
imul
movsl
sti
or
jno
sub
dec
xor
pop
jg
ret
lods
mov
ret
push
imull
js
pop
pop
cmp
sbb
mov
jnp
mov
fcomps
ret
jno
icebp
out
mov
push
cmp
jno,pn
dec
movsl
sbb
jne
pushf
sub
xor
mov
jno
icebp
add
divl
jp
jno
fistpl
adc
mov
jmp
mov
lea
aam
inc
scas
jno
clc
loope
adc
jno
xchg
lahf
lods
test
jno
mov
dec
ljmp
pop
jb
jb
and
jno
cs
lods
dec
jae
push
inc
sbb
adc
mov
int
jno
xchg
test
jbe
ficoms
fs
mov
cmp
xor
jno
and
mov
imul
and
dec
mov
jno
fmuls
mov
cmc
inc
xchg
inc
sub
lea
lahf
xor
lret
shrl
push
hlt
ret
fsubrs
es
insl
xchg
dec
pop
xor
sbb
leave
jge
mov
push
adc
aas
cmp
aam
sub
jb
push
pop
jmp
jge
sarl
scas
cld
jno
and
es
jge
adc
cltd
clc
call
cmpsl
hlt
mov
xlat
jno
int3
in
das
scas
out
jno
stos
sub
jno
and
push
or
cmp
test
loope
pop
add
scas
pop
jno
stc
pop
jnp,pn
notb
pusha
xchg
popl
jno
adc
repnz
dec
jns
popa
mov
icebp
jge
mov
std
jno
add
xchg
jb
push
lret
cmp
pop
jae
sbb
pop
jno
cmpsl
jno
lcall
popa
jg
jae
dec
cmp
mov
aaa
lods
lock
and
jg
fidivrl
das
mov
test
sti
xor
pop
repz
cltd
jl
push
jge
pop
xchg
das
bound
mov
dec
mov
inc
pop
into
mov
sti
mov
jl
lock
mov
pop
dec
adc
mov
add
xchg
sub
pop
idiv
out
jb
mov
popf
movsb
add
jae
jno
push
xchg
pushf
outsb
subb
cs
add
divb
data16
xchg
xor
jno
cmp
mov
dec
gs
sub
jbe
stc
andl
lock
loopne
mov
jno
out
mov
jno
sbb
jp
stos
daa
push
jno
ja
test
popl
jne
add
mov
fs
jno
into
setae
dec
lea
in
pop
movsl
mov
shlb
dec
aas
jno
filds
js
cltd
push
adc
sbb
jno
bound
xor
cmp
lock
adc
xor
loope
fnstenv
scas
mov
push
lea
pop
mov
jno
sub
pop
pop
andb
cmp
xor
jnp
cmc
xor
mov
add
xor
cltd
hlt
pusha
dec
mov
mov
cmp
xor
jge
test
pushf
je
loop
jno
stos
pop
jg
add
inc
test
push
insl
xchg
sbb
mov
mull
imul
aam
js
mov
stos
jno
lahf
subb
and
mov
jmp
xor
push
pop
mov
xor
ret
imul
push
ljmp
jbe
lret
jno
or
adc
jno
cmp
mov
call
aam
cltd
adc
insl
clc
xor
xlat
ja,pn
xor
xchg
dec
adc
dec
bound
jno
je
push
and
inc
mov
popa
ret
push
jmp
lret
xchg
mov
icebp
mov
xor
sbb
jne
pop
jge
js
xchg
dec
or
dec
mov
sti
enter
mov
or
adc
xchg
jecxz
shlb
cmp
sub
pop
sahf
cmpsl
push
mov
xchg
je
adc
and
jae
inc
arpl
imul
jl
fstl
vucomisd
jbe
mov
div
rcrl
andl
mov
fsubl
inc
jno
rcrl
xchg
sbb
pop
imul
shll
and
push
out
mov
shlb
xor
cmp
inc
iret
mov
or
jns
mov
insl
jno
xchg
xchg
jae
sub
movsb
clc
cmp
mov
or
out
jo
dec
xor
cs
loopne
and
jno
jo
in
mov
dec
pop
sbb
movsl
xchg
jno,pn
xchg
cmp
leave
in
sub
jno
mov
jno
jnp
dec
mov
adcb
pop
orl
push
cs
lods
cmp
cmp
call
dec
jno
ja
pop
fldcw
fs
inc
mov
or
testl
jno
sbb
sbb
dec
inc
mov
jno
push
mov
or
lods
aaa
pop
stc
enter
mov
jno
iret
and
test
sti
repnz
fstl
roll
add
jno
das
cli
mov
dec
out
or
shlb
je
mov
xchg
sbb
cmp
xchg
call
dec
std
mov
je
mov
mov
mov
bnd
mov
lcall
mov
pop
mov
ss
xor
jns
mov
jb
xor
jno
dec
sub
std
iret
jne
sub
xchg
jno
orl
jle
lea
test
sbb
shlb
loopne
cli
aas
pushf
xchg
jno
jnp
imul
insl
mov
adc
lahf
call
pop
sti
ds
add
repnz
mov
add
data16
jb
scas
clc
jno
sbb
mov
into
pop
mov
xchg
lea
call
mov
test
leave
jno
lock
sti
mov
cmpsl
in
mov
jno
out
fcomps
sub
fimull
pop
xchg
stos
inc
and
in
jno
cmp
sbb
xchg
arpl
adc
add
cwtl
and
rcr
sarl
dec
cmpb
divl
sub
mov
sub
push
sbb
cmpsl
int3
cwtl
push
mov
pop
sahf
or
push
fisubrs
push
push
repnz
mov
jno
lahf
jo
test
xchg
jge
sbb
pause
leave
add
es
mov
push
xor
push
jb
jne
push
lret
mov
add
fcoms
leave
xor
repz
lret
jge
mov
jecxz
fisubrs
jae
jp
icebp
pop
pop
lods
jno
pusha
mov
out
sbb
sti
jb
xchg
test
faddl
rol
xor
and
jno
daa
pushf
xchg
mov
mov
xor
int
fistpll
loope
outsb
fdivs
cld
scas
or
fs
in
les
popa
ud2
xor
xor
jne
push
lcall
jno
dec
loopne
enter
jno
and
icebp
inc
out
jne
rol
roll
hlt
ja
inc
repnz
aas
jb
xorl
adc
enter
xchg
cmp
mov
push
shll
jno
movsb
jo
test
das
inc
jle
jbe
clc
cmpl
mov
cmp
pop
cmc
mov
jno
pop
xchg
inc
cmp
fwait
int
clc
xchg
push
xor
sbb
inc
adc
pop
jb
les
push
jae
in
push
sbb
stos
inc
xor
add
leave
jns
mov
cwtl
repnz
mov
into
sub
jg
mov
adc
imul
ljmp
inc
mov
xor
testb
mov
jle
movsl
fs
jno
or
aaa
jns
sub
icebp
or
xor
cld
rol
divb
mov
sbb
adc
stc
fwait
jno
ljmp
jno
and
adc
xor
and
shll
add
xchg
jno
mov
fidivl
adc
jne
push
dec
mov
jno
stos
xchg
jmp
jg
ret
nop
decb
movl
cmpsl
jne
fldcw
jno
xor
adc
addr16
pusha
shr
add
in
pop
jae
add
jno
mov
mov
dec
xchg
sarl
aam
jno
pop
mov
mov
jno
mov
adc
sub
jl
in
ljmp
je
aam
mov
stos
jl
adc
jp
sar
dec
ja
cmp
add
movsb
loope
hlt
mov
pop
mov
cmp
hlt
inc
arpl
adc
add
shlb
andb
loope
jmp
insl
repnz
sbb
jae
cmp
add
mov
cmpsl
jno
shl
mov
rcl
add
enter
pop
xchg
sbb
je
jl
inc
add
cmpsl
adc
insl
push
mov
ljmp
fmuls
dec
pop
lock
in
mov
cltd
pop
sub
lea
pop
test
add
mov
imul
out
loope
cmp
push
xor
pop
or
adcb
sub
fwait
xor
pusha
xchg
les
inc
jne
jmp
push
addr16
push
xchg
jno
push
xor
sbb
inc
jne
repnz
mov
inc
and
add
not
daa
jg
cwtl
lods
add
dec
je
mov
push
jno
xor
and
mov
and
push
test
or
adc
jno
jnp
mov
popa
aad
ja
psubb
dec
jb
jecxz
xor
daa
jecxz
mov
add
ret
je
or
mov
mov
pop
nop
dec
mov
jp
adc
and
dec
mov
jno
push
dec
hlt
inc
testl
mov
dec
jno
fcoml
jg
jbe
jge
outsl
repz
xchg
jae
jecxz
jno
fmull
jae
xor
cmpsl
fwait
aam
out
jno
mov
addr16
rclb
adc
or
rcrl
fs
sub
mov
iret
and
ja
pop
push
decb
aaa
mov
jge
xchg
jg
lahf
repnz
push
adc
in
lret
cmp
je
in
js
push
jl
je
fldt
lcall
dec
test
lret
cmpsl
insl
mov
or
pop
jmp
fcmovnbe
push
jo
sub
leave
aas
lods
mov
leave
push
aas
mov
pop
sbb
js
cmp
shlb
pushf
adc
repnz
xor
inc
or
jns
add
jno
mov
popf
std
dec
mov
test
jae
in
inc
shl
stc
mov
stos
pop
int
test
cmp
je
cmp
mov
or
add
inc
xchg
hlt
test
cwtl
jno
add
sub
popa
movsb
xor
scas
int3
test
jno
add
lret
xor
addr16
repnz
lea
call
jp
rolb
pop
pop
jno
mov
js
inc
pop
pop
jno
outsl
cmp
xlat
outsb
arpl
adc
adc
push
and
cmp
cmp
loop
stos
jb
repz
xor
insl
mov
mov
lret
insl
icebp
pop
adc
shr
cmp
inc
repnz
cmpsl
and
pusha
pop
add
mov
mov
sbb
jne
push
pushf
stos
jg
aam
inc
and
and
adc
nop
cmp
mov
imul
movsl
push
xchg
cmpl
shr
jb
pop
xchg
push
sub
xor
test
ljmp
repz
mov
push
jno
mov
push
cmp
and
xchg
xchg
loop
and
imul
adc
js
xor
jno
cli
or
stos
pop
mov
shlb
mov
xor
jb
test
jne
js
adc
ret
xlat
orb
pop
and
xor
fistpl
in
jbe
cmpsb
jno
jmp
mov
jle
pop
and
and
test
repz
xchg
daa
cld
negb
or
notb
ret
pop
jno
push
and
shlb
jno
fnstenv
xlat
jno
repnz
sub
sub
cli
jno
inc
fiaddl
push
adcl
idivb
cmp
fbstp
fisubrs
xchg
mov
or
xchg
testl
add
je
cmpsb
mov
call
mov
mov
repz
je
add
jno
xchg
sub
ret
js
out
into
inc
adc
ss
ljmp
out
imul
jne
lock
lea
nop
push
jo
insl
enter
ret
sti
cld
lret
hlt
pop
jno
cmp
inc
test
mov
push
enter
or
xor
arpl
xor
jno
rorl
sbb
add
jno
lahf
cmp
jno
xchg
cmpsl
jno
inc
repz
push
loopne
je
dec
fdivr
fbstp
addr16
xchg
icebp
adc
repnz
jno
sbb
push
movsb
movsbl
dec
jo
mov
pop
hlt
jne
loop
xor
nop
dec
xor
outsl
ds
jno
lcall
jge
inc
loope
or
xchg
das
lds
jmp
in
inc
pop
outsl
jb
aad
cld
lods
fs
jno
xchg
or
dec
aaa
sbb
out
cmp
sub
je
jno
gs
nop
jmp
pop
mov
mov
sub
adc
ja
clc
sbbb
scas
movsb
adc
mov
fsubp
cmp
inc
xor
jmp
mov
pop
jno
mov
sahf
cmp
dec
out
imul
mov
and
loopne
xchg
cmp
mov
mov
daa
jno
cmp
mov
mov
or
iret
jno
jecxz
dec
in
xor
loop
ficompl
imul
sub
fsubrl
mov
hlt
arpl
dec
ljmp
stc
xchg
sbbb
push
lods
adc
cli
icebp
lea
add
lea
pop
add
mov
test
pcmpgtd
std
cmpsl
jno
outsb
mov
pop
jno
jge
lcall
cwtl
roll
jbe
push
sub
cmp
jno
out
or
in
fstpt
jb
psubsb
lods
jb
dec
bound
inc
mov
out
add
shlb
jno
sub
aas
pop
jno
aad
add
js
inc
clc
add
cmp
mov
popa
add
outsl
jno
inc
jne
ret
aaa
jge
fsubrl
out
aas
xor
lods
and
into
in
mov
incl
jae,pn
sti
push
jno
out
lea
bound
jae
leave
andl
mov
mov
sbb
xchg
jge
xor
sub
push
adc
loopne
insb
or
je
xchg
sbbl
sar
ret
dec
lcall
xchg
jae
mov
and
mov
push
je
cmp
sbb
pop
rsm
flds
fidivl
jmp
mov
jno
popa
gs
dec
jo
pop
jno
push
push
mov
lods
xchg
mov
lret
add
in
out
pushf
iret
scas
fidivrl
scas
jecxz
call
gs
outsl
jno
mov
popa
aad
sbb
push
mov
cltd
jno
dec
mov
movsl
pop
and
aam
loop
fbld
loopne
lock
jle
jae
inc
outsl
adc
adc
fcomi
push
lcall
jp
cmp
jno
sbb
mov
mov
test
inc
ljmp
sub
scas
jmp
lods
jle
jb
jp
sub
jno
or
rorb
es
jle
call
repz
insl
je
gs
mov
pop
icebp
rcrb
test
icebp
test
push
or
push
push
dec
jae
pop
mov
jge
pop
ror
lahf
jno
shlb
add
fdivrl
jo
imul
jno
movsb
fldl
mov
jae
inc
jno
xor
out
sub
iret
repnz
les
loop
fdivp
repnz
cltd
repz
insl
inc
mov
rol
lea
lcall
int
repz
cmp
jo
repz
dec
inc
jno
inc
outsb
pop
push
adc
pushl
sbb
setne
out
pushf
test
mov
jne
jbe
or
xchg
outsl
push
sub
scas
pop
ds
out
sub
push
jae
push
xchg
insl
mov
push
or
aaa
out
push
int3
lods
xchg
cltd
sbb
shrd
sub
movsb
mov
call
sub
xchg
add
sub
clc
rcll
mov
pop
ljmp
push
mov
jne
pop
test
sbb
or
xor
jae
cs
mov
xor
subl
sbb
ud2
cmp
jno
mov
xor
jno
xchg
test
xchg
ret
pop
jecxz
push
or
lcall
inc
nop
mov
add
mov
adc
mov
rcr
out
les
lods
fwait
mov
xchg
push
pusha
ds
mov
in
addr16
sub
icebp
loope
jno
add
out
lea
subl
xchg
add
shl
insb
jno
push
sub
movsl
ret
push
dec
jno
sub
fdiv
clc
sbb
mov
xor
push
jno
inc
inc
mov
insl
or
loop
adc
dec
push
push
outsb
inc
jae
repz
jno
out
sbbl
bound
jno
dec
fwait
mov
ds
into
js
gs
xchg
add
cmp
mov
iret
cld
mov
adc
in
jno
inc
mov
cmp
fsubl
push
xor
mov
fisubl
xlat
cltd
push
das
jno
ss
add
jno
leave
repz
xchg
or
arpl
and
cmp
jns
push
fisubl
scas
aam
dec
test
cmc
and
adc
jno
pop
sub
jno
xchg
xchg
dec
xor
jno
lea
and
repnz
mov
lcall
jo
pop
stos
mov
and
adc
fdivrs
mov
cld
std
fidivl
mov
or
jae
xor
inc
out
push
jno
shll
push
pop
insb
push
adc
leave
push
push
or
jno
inc
dec
dec
fs
in
adc
in
push
test
pop
cltd
adc
pop
inc
in
mov
xor
fdivrl
inc
mov
or
push
call
dec
popa
cmp
jbe
push
pop
jp
mov
pop
pop
rcrl
out
jge
cmp
jno
adc
popf
orl
lret
jno
push
mov
lea
pop
adc
add
jno
es
jmp
jle
add
int3
testb
add
int
and
test
mov
shrl
into
xchg
in
sbb
aas
enter
int
jns
inc
loopne
iret
xor
push
ss
int3
mov
jl
repz
lods
ja
jno
pop
enter
jo,pt
xchg
rolb
inc
nop
sub
lea
aaa
loop
pop
icebp
xchg
xchg
call
xor
popa
scas
lea
mov
repnz
jne
hlt
or
fs
and
lcall
jp
add
and
pop
pop
enter
or
inc
lahf
js
scas
xor
out
mov
dec
and
xorb
pop
pop
out
popf
xchg
jno
rcll
call
popa
imul
or
dec
push
mov
sub
and
mov
mov
push
lret
dec
aad
xor
xor
repz
jno
pop
lret
push
int
jno
fdivs
sub
adc
lods
pop
ficomps
lret
movsb
dec
test
push
and
popf
jno
sbb
xchg
js
aad
call
jg
jno
push
fnstcw
inc
mov
add
bound
mov
adc
jbe
test
fdivl
push
fnsave
aad
jno
push
sbb
mov
mov
or
jae
imul
repnz
out
je
adc
jno
icebp
jb
gs
adc
cld
ret
cmp
jge
push
lcall
jg
ds
nop
shlb
xchg
jno
push
dec
adc
cmp
loope
cmp
int3
sbb
jae
mov
in
shll
repz
mov
xor
and
mov
aas
addr16
int
std
fidivrs
cmc
inc
jno
pop
pop
rorl
mov
ror
imul
inc
dec
arpl
aad
push
scas
jae
lds
mov
bound
sbb
lea
icebp
mov
jno
adc
and
dec
push
std
cmpsl
xor
iret
jno
jo
mov
fists
lea
mov
incb
add
stos
jge
jae
or
lret
pop
dec
int3
push
jae
dec
jo
dec
mov
cmpl
out
adc
add
push
mov
push
sub
das
sbb
and
inc
xor
jns
shl
lahf
shlb
test
js
leave
mov
shll
xchg
inc
xor
jmp
mov
scas
mov
call
fs
push
xchg
push
pop
inc
jno
mov
std
lret
pop
call
inc
adc
inc
or
push
enter
adc
repnz
mov
inc
adc
rorb
xor
xchg
lods
mov
mov
xor
fstpl
xlat
cs
popf
or
repnz
jb
add
lea
test
jne
lret
clc
mov
inc
push
or
imulb
aaa
xchg
hlt
loopne
adc
and
test
pop
jb
push
xchg
scas
xchg
jecxz
inc
jl
das
sbb
inc
sub
adc
mov
ljmp
lds
dec
sub
pop
cmp
mov
es
push
loope
xchg
sbb
cli
iret
loopne
ljmp
mov
jg
push
mov
mov
rcrl
pop
aad
mov
icebp
mov
lahf
inc
repnz
sub
imul
stos
sahf
sbb
pop
sub
aaa
hlt
pop
rcll
dec
sbb
adc
xchg
push
and
sbb
divl
xor
out
inc
divb
dec
mov
imul
sub
jno
dec
xchg
jbe
adc
imul
jb
ss
and
jno
outsl
imul
or
adc
ss
fbstp
dec
adc
repz
fsubrs
cmp
ret
hlt
outsl
xchg
jno
lds
popf
jne
dec
or
rcl
movsb
cmp
pop
std
hlt
rolb
pusha
jne
dec
xor
pusha
adc
or
mov
repnz
out
iret
jb
push
xor
arpl
dec
lret
addr16
jno
pop
fdivl
or
cli
div
jecxz
cmpsl
xchg
insl
mov
arpl
and
stc
and
cld
mov
pop
shrb
jae
sbb
rcl
jno
xorl
jno
pop
jecxz
repnz
fsub
mov
adc
jno
add
dec
ficompl
std
cmc
jno
testl
inc
jge
jae
and
pop
aam
push
sbb
mov
xchg
data16
cmp
jns
filds
and
push
lods
push
jl
push
mov
hlt
mov
xor
pop
je
mov
cmp
jae
ret
shr
lahf
sub
ror
lea
test
stos
and
sbb
jnp
mov
push
jmp
sbb
cmp
jno
cmp
pusha
mov
mov
jge
addr16
and
push
mov
dec
jno
das
jae
fstps
dec
test
stos
nop
dec
mov
ficompl
outsb
jno
int3
mov
aam
cmp
rolb
adc
mov
je
lret
adc
cmp
sub
jp
lret
jmp
jb
popa
mov
rcrl
arpl
sbb
sub
push
int
aad
repnz
and
xor
sbb
xlat
je
xor
call
jno
cwtl
mov
adc
xorl
jp
mov
mov
jno
jge
add
pop
in
jno
adc
dec
imul
jno
hlt
in
mov
test
repnz
jno
mov
inc
mov
xchg
push
adc
mov
adc
pop
or
pop
sbb
inc
leave
in
imul
inc
lret
or
lcall
or
fsubl
mov
outsb
dec
aam
mov
inc
das
pop
sarl
pop
inc
iret
jo
sub
jne
sbb
mov
xchg
jp
shll
push
adc
or
cld
je
jne
sub
and
add
shrl
fildl
pop
call
lock
inc
movsl
dec
xor
push
and
adc
jno
in
sbb
xor
jg
mov
xor
jae
out
xchg
pop
stos
jno
inc
ret
pop
jp
inc
cmp
mov
shl
lret
icebp
jno
xor
lods
sub
lock
adc
jno
popf
xchg
loopne
les
test
mov
pop
mov
fstpt
xor
test
jae
shrb
jge
add
stos
cmc
dec
pop
cmpsb
dec
sub
stc
sbb
mov
nop
lea
hlt
fsubrl
dec
push
mov
sar
lcall
lods
or
cmp
hlt
sub
imul
adc
add
xchg
cltd
jns
jge
movsb
insl
jno
and
or
adc
xchg
mov
sub
jno
xchg
divb
insl
mov
adc
jb
ss
xchg
fucomi
xor
mov
mov
hlt
das
adc
lea
jno
cmc
xchg
push
sti
jecxz
xor
sub
and
stos
cmp
jp
and
out
bound
loop
mov
cmp
pushf
jne
jno
dec
and
test
nop
jge
arpl
adc
adc
imul
push
sub
cltd
adc
jno
int
sub
pop
push
jno
xor
xchg
aad
pop
and
pusha
xchg
in
pop
inc
xor
cmp
jno
and
mov
popf
adc
enter
xor
cld
and
mov
dec
jge
std
fidivl
lods
sub
jno
mov
sahf
adc
jno
xchg
movsb
jo
or
xor
lret
leave
or
cmp
xchg
mov
sbb
pop
sub
fwait
movl
sbb
iret
jmp
dec
inc
jno
popf
xor
jno
subl
jge
ss
cltd
fcoms
fdivl
sti
fstpl
fisubs
xor
ret
dec
int
jno
xor
shlb
jecxz
adc
dec
sbb
bound
jno
push
fcompl
sub
int
inc
insl
jae
add
push
ja
fstpt
sub
aas
repnz
jno
lahf
mov
sahf
or
negl
jno
pop
xor
ret
std
sbb
inc
mov
and
cwtl
in
lea
cmpl
xor
ret
jge
inc
pop
jmp
inc
ljmp
das
pop
push
popa
or
iret
loop
jno
pusha
repz
and
adc
jno
mov
pop
leave
jno
test
gs
xor
jbe
mov
jno
imul
pop
or
outsl
bnd
es
jno
sub
sbb
sub
leave
lahf
scas
xor
mov
test
inc
jns
and
jno
xor
aam
add
iret
jno
lcall
jno
adc
jb
or
dec
lea
mov
das
pop
pop
not
and
loop
les
xchg
int
out
jns
lock
push
scas
insb
jbe
add
popf
jno
adc
dec
jle
lods
pop
jnp
lea
or
jno
mov
push
xchg
sub
jbe
fcoms
fstpl
lea
mov
sbb
fs
repnz
dec
xchg
jne
jl
inc
sbb
add
sahf
pop
push
dec
icebp
mov
loopne
imul
lods
jno
sub
out
jp
sbb
jl
mov
or
push
stos
lea
jno
popf
loop
pop
mov
aad
mov
daa
dec
push
jno
int3
pop
sarb
sbb
cmc
lea
mov
xchg
xchg
popf
add
xchg
xor
sarb
adc
sbb
in
aad
out
push
xor
sub
jbe
mov
adc
jno
and
int3
xor
pop
bound
addr16
jns
pop
sub
or
jmp
jno
or
shrb
movsl
jo
sub
ficomps
add
xchg
je
push
addb
sbb
pop
lahf
xor
pop
jno
mov
add
inc
dec
dec
cmpsb
sub
fadd
leave
mov
jb
pop
or
dec
insb
adcb
sub
or
cmp
cli
rcrb
push
jmp
sbb
xor
xorl
lahf
dec
or
cmp
aad
out
mov
pop
fwait
push
shll
dec
cltd
or
popa
mov
arpl
mov
or
mov
clc
adc
inc
je
dec
rcll
mov
inc
gs
loopne
jno
ficoml
cld
adc
jl
mov
sub
popf
cltd
in
mov
dec
mov
xor
sahf
mov
xor
dec
mov
cmp
jno
sbb
add
push
fs
mov
ss
in
cmp
adc
cmpsl
jle
cmpsb
mov
mov
loopne
outsb
pushl
mov
lss
cmp
sbb
adc
jno
inc
pushf
push
gs
jg
mov
fildll
mov
nop
aas
ret
js
rcl
push
xchg
int3
rcrl
and
rdtsc
jo
adc
dec
sub
jb
jecxz
dec
xor
jns
pushf
imul
fbstp
xor
lmsw
hlt
push
mov
test
cmp
sbb
or
xchg
rorl
mull
rorb
pushf
xchg
push
jmp
test
shrd
lret
pop
aad
imul
jle
in
stos
shrb
pop
daa
das
cmp
repnz
jmp
jb
and
movsb
xor
popf
rcll
sbbl
out
jae
mov
outsb
sbb
jb
cmpsl
jo
stos
call
fwait
daa
in
in
andl
mov
cmp
mov
mov
add
mov
jno
dec
mov
inc
repz
pop
sbb
popa
xor
dec
int
fsubl
jne
sti
inc
xchg
pop
sub
jno
lahf
lock
pop
xor
jno
hlt
arpl
jecxz
push
andb
xchg
jmp
jb
xor
jg
inc
pop
inc
cli
jae
repnz
push
adc
test
xor
sahf
cwtl
push
cmpl
lea
jno
test
jg
test
jl
scas
add
jbe
rcl
push
jno
push
clc
das
add
sbb
pusha
mov
xor
out
movb
inc
mov
or
clc
or
fisubrs
fcompl
hlt
push
mov
in
test
mov
sub
sbb
loopne
inc
adc
repnz
push
loope
cli
jno
lret
das
test
cwtl
jmp
cmc
and
movsb
data16
fs
xlat
call
xor
loope
jne
pusha
adc
cwtl
xchg
xor
lds
hlt
lahf
xor
loope
hlt
dec
jge
or
testl
and
push
push
int
lds
or
lahf
imul
jecxz
into
jne
leave
nop
jmp
add
and
pop
aam
cmc
jno
xchg
cmp
clc
scas
add
push
jno
sbb
push
add
jl
dec
jnp
ja
mov
adc
je
xor
jae
popa
inc
or
xor
push
jno
ljmp
push
imul
pop
inc
arpl
movl
out
out
les
cmp
adc
xchg
jg
shrl
mov
jno
in
xchg
or
or
call
out
sub
xor
or
je
mov
out
add
lods
dec
sub
sbb
andb
jae
mov
inc
dec
jne
jno
jle
bswap
jg
push
jno
and
clc
jge
mov
or
inc
aas
jecxz
adc
push
repnz
push
xor
fisttpl
push
dec
adc
addr16
out
push
mov
or
adc
xor
xor
push
or
aas
xchg
inc
dec
push
jno
mov
adc
lds
jno
in
sub
push
in
pop
jno
sarl
lahf
imul
iret
clc
int
rep
roll
repnz
inc
loop
pop
add
jp
out
daa
mov
sub
mov
pop
mov
mov
mov
ljmp
jno
push
scas
dec
cmpsb
outsl
jno
add
add
popf
mov
jbe
jno
and
lahf
jo
mov
lea
adc
mov
hlt
jns
sub
cltd
insb
sub
clc
testb
lods
shll
jge
adc
cmp
cli
out
sarb
aad
mov
jl
push
jae
shll
addb
jbe
inc
push
dec
pop
stos
loop
int3
loopne
dec
or
or
jno
mov
jge
les
loopne
mov
pop
dec
in
jbe
jb
xchg
fmull
loop
cltd
stos
pusha
jnp
rcll
xor
jno
xchg
dec
jno
mov
lret
mov
adc
xor
xlat
cmp
ret
pop
repnz
mov
xor
icebp
cmp
addl
jns
fidivl
test
and
jmp
push
push
dec
in
jno
pop
pslld
mov
mov
mov
jbe
in
sbb
or
stos
mov
push
mov
jno
mov
test
test
ljmp
jbe
sbb
ss
outsl
mov
jmp
pushf
jno
leave
in
xorb
mov
pop
sbb
jno
sbb
in
repz
xchg
test
je
push
adc
shlb
inc
push
mov
out
sub
mov
cwtl
cmp
lea
bound
jmp
lock
jno
adc
xchg
fbstp
rolb
mov
into
test
sahf
fiaddl
bound
mov
loop
jnp
imul
jno
imul
mov
xor
xchg
xor
inc
loopne
stos
pop
jmp
dec
push
sub
pop
mov
jne
outsl
jmp
jno
cmpsb
adc
sbb
mov
pop
rolb
repz
mov
add
jno
in
aad
fidivrl
sub
mull
jno
es
in
sub
xor
aad
popa
shll
push
insl
lret
pop
jge
ljmp
push
push
inc
xor
out
jmp
mov
loop
ret
cmpb
je
pop
jl
mov
push
mov
mov
xchg
rcrl
imul
pushf
in
jge
aaa
jg
mov
imul
mov
cmp
adc
lahf
push
cmp
add
xor
xchg
outsb
cmp
jle
fidivs
call
mov
add
fmuls
repz
movsl
loope
and
je
hlt
jmp
mov
bound
pusha
aad
dec
jne
dec
stc
loope
test
icebp
jae
jno
in
fdivrs
les
out
jno
pop
pop
and
dec
fsts
outsl
hlt
hlt
jno
sahf
cmp
loopne
loop
add
lea
fcompl
xor
in
jns
out
mov
mov
in
pop
mov
push
scas
jae
js
xchg
nop
pop
dec
je
push
hlt
stos
jns
jno
insb
xor
jecxz
addr16
jno
outsb
pop
pop
and
dec
idivb
repnz
xor
mov
mov
or
js
lods
mov
mov
repnz
or
insl
mov
je
fisubrs
lahf
jno
cld
add
lea
mov
jg
pop
jno
and
test
mov
dec
out
jno
sub
xchg
jno
sbb
aas
hlt
jae
mov
cmp
out
cmp
jno
xchg
adc
test
es
ja
and
ljmp
out
jno
je
sar
dec
cmp
jne
mov
jmp
nop
jno
pop
or
mov
dec
lret
pop
push
xchg
sub
jno
hlt
xor
fsts
cld
jns
lahf
and
pop
shll
loop
dec
mov
sub
into
or
test
sub
cmc
jno
mov
cmp
call
pop
pop
int
mov
jno
out
jmp
lods
sub
je
sub
adc
xchg
jno
and
out
icebp
or
jg
xor
aam
xorl
lock
pop
push
fmuls
mov
xor
mov
sti
fsubl
and
dec
add
inc
imul
mov
pop
add
cli
pusha
cld
into
int3
or
jns
or
mov
jno
inc
int3
cmp
fldt
ja
sub
js
mov
jl
jo
and
stos
shl
or
ret
lods
ljmp
jge
mov
inc
mov
dec
xchg
sti
jno
mov
gs
jo
imul
sbb
repz
jns
push
sbb
jb
jge
jno
sub
stos
sbb
jno
xlat
in
aam
gs
dec
js
mov
mov
xchg
adc
fs
push
out
mov
and
into
outsb
movsl
mov
lcall
sbb
int3
jno
adc
push
pop
js
pop
fistpll
mov
cld
jno
and
fimull
out
ja
jno
dec
sub
scas
jno
add
mov
pop
das
jno
inc
dec
sbb
jo
mov
adc
es
nop
int
jnp
mov
dec
and
mov
jae
mov
sub
mov
jno
dec
adc
mov
jo
mov
push
jno
inc
pop
inc
cmp
repz
or
jno
xor
or
adc
fildll
leave
lock
dec
fs
pop
iret
cmpsl
pop
xor
andl
jno
fstp
xor
dec
adc
mov
xchg
jl
push
insl
clc
push
jno
pusha
inc
testb
fstl
aam
xchg
in
call
jae
std
pop
jne
pop
jno
dec
inc
popl
gs
daa
fwait
jbe
mov
xorb
lea
mov
movsl
insb
in
sub
sub
xor
jno
inc
adc
cmpsb
fistpl
pop
loope
jno
rol
and
dec
push
dec
jae
mov
out
into
push
jne
xchg
icebp
fbld
sbb
pusha
jmp
js
inc
or
cmpsl
sub
adc
fnstcw
pop
pop
jo
icebp
into
popa
jns
pusha
pop
dec
jno
popf
push
imul
shlb
and
xchg
mov
jb
jne
loop
add
push
hlt
scas
int3
xor
jno
filds
aad
inc
test
cs
sbb
inc
fidivs
and
jl
out
stos
xchg
cwtl
mov
mov
jecxz
cmp
iret
in
cmp
ja
fldl
daa
stc
jmp
cwtl
dec
dec
jae
dec
gs
jp
xchg
das
mov
mov
adcl
cmpb
idiv
push
xchg
jae
adc
in
sbb
lea
push
add
imul
adc
xchg
sbb
cmpl
or
dec
cmp
movb
sbb
jno
dec
js
ja
loop
dec
loope
decb
mov
add
sbb
sahf
je
rorb
mov
xchg
arpl
and
outsb
push
test
and
jne
test
cmp
pop
out
adc
insl
mov
ja
inc
mov
lds
out
addb
sbb
setns
pushf
leave
or
push
adc
bnd
ds
mov
inc
ljmp
divb
inc
push
fsubrs
sbb
lcall
lods
lds
sbb
in
dec
out
jno
repz
jg
inc
unpcklps
mov
jno
js
push
mov
lea
push
sbb
xchg
and
dec
stc
repnz
xor
xchg
loope
outsb
push
ss
inc
sbb
gs
adc
or
push
jno
jae
lea
mov
fwait
jno
cmc
int
jecxz
in
jno
cmpsl
jmp
or
or
addl
call
add
ret
popf
stos
xor
jno
fs
cmp
jg
or
pop
cmpsb
cmc
stos
mov
pop
fistpll
addr16
adc
mov
data16
mov
sar
stos
in
and
jno
sub
dec
movsb
pop
jno
call
pop
int3
inc
sub
loope
or
mov
int
jno
pop
inc
cmp
or
rorb
pop
lea
jns
jge
jmp
jge
sub
cli
dec
xchg
aam
or
jno
push
sbb
repz
jle
pushf
push
ds
ss
jl
jne
outsb
das
xchg
hlt
pop
jbe
dec
mov
pusha
and
inc
mov
jnp
xchg
jl
outsl
fnstsw
add
push
mov
inc
push
jb
ret
jno
aad
xlat
add
jo
ror
frstor
mov
cmpsb
das
xorl
push
arpl
push
jl
je
shrb
push
cmp
mov
jno
leave
xor
stos
fs
aas
jno
adc
shll
mov
test
icebp
or
into
mov
jns
test
jno
sbb
xchg
rclb
jne
movzwl
mov
clc
or
xchg
movsb
and
cli
lods
jno
adc
jno
fdivr
dec
decl
fsubrp
add
cmpsb
push
test
mov
adc
jno
js
pop
fs
mov
test
arpl
mov
mov
jno
sbb
pop
leave
lcall
setno
nop
push
in
sub
push
sub
sub
push
lock
jno
divl
cld
jae
jo
jp
mov
rol
jno
jge
sbb
ds
xor
push
js
scas
ret
loopne
xchg
fwait
lods
out
ror
jg
jmp
cmp
fdivrs
stos
adc
sub
es
mov
jge
call
jg
fdivr
sub
xor
mov
inc
data16
mov
fwait
ds
int3
jno
lea
fidivl
test
fwait
push
sbb
jns
mov
imul
pop
repz
in
insb
mov
lock
iret
hlt
or
fisttpl
jno
ds
push
aas
sub
icebp
add
inc
pop
add
into
push
dec
ret
test
cwtl
lcall
sub
jge
mov
lock
cmpsl
mov
jge
jno
insl
dec
ret
icebp
outsl
test
mov
lods
push
mov
jo
jne
or
push
inc
xchg
inc
dec
adc
icebp
fisttpll
sbb
int3
popf
test
sahf
and
adc
sub
jns
loope
push
jl
add
pop
xchg
xor
fcompl
lea
and
fistps
and
inc
cmp
push
insb
mov
xchg
das
mov
dec
and
inc
add
xchg
inc
and
jbe
cmp
pop
or
lret
or
mov
rolb
jle
clc
jmp
call
mov
sbb
push
mov
jno
adc
filds
xor
jno
and
shlb
lock
jno
jne
or
xchg
xchg
jno
rclb
or
mov
mov
sbb
mov
loope
insb
sub
mov
adc
shl
jne
xor
enter
nop
add
inc
mov
das
je
scas
notb
lret
xor
lea
std
xchg
mov
cltd
mov
inc
imul
in
je
lcall
out
adc
inc
enter
hlt
std
in
mov
or
add
test
scas
ja
ret
lock
js
sahf
in
addr16
sub
and
push
aas
movsl
orb
mov
xchg
sbb
jno
mov
lret
es
sub
xchg
sub
pop
je
sbb
pop
shll
or
dec
xor
xchg
paddd
je
imul
js
xchg
push
cmpsb
hlt
outsl
push
jecxz
jae
and
call
clc
pop
mov
jno
bound
pop
out
ds
cmpsl
sub
es
insb
xor
add
jns
mov
js
pop
lock
popa
mov
adc
inc
xchg
shlb
jno
jge
out
mov
imul
sti
mov
push
das
test
adc
popa
xchg
ljmp
mov
sbb
xor
push
test
push
shlb
sub
das
pop
pop
push
adc
jae
scas
jno,pn
xchg
mov
jno
das
ja
mov
push
pop
in
push
mov
scas
jnp
data16
jno
gs
mov
ret
jne
xor
andb
lock
ret
jno
cmp
mov
and
jno
or
mov
addr16
int3
inc
sbb
jno
cwtl
fucomp
pop
dec
adc
pop
pop
fimull
xchg
or
and
jo
sti
sub
adc
mov
jno
scas
pushl
movsl
dec
jns
inc
add
jno
shrb
int3
jge
sub
in
and
lock
sahf
jno
insb
inc
aas
or
push
jle
popf
lea
clc
arpl
loop
pop
sbb
std
ret
jp
in
pop
jno
lea
hlt
mov
out
add
jno
cmpsl
sub
xor
loop
mov
mov
insb
jno
and
inc
lea
loopne
in
dec
mov
sub
add
shl
mov
add
outsl
insb
adc
sub
mov
jno
int3
push
ret
and
inc
mov
jno
push
dec
std
pushf
fmulp
stos
loope
jns
je
rcrb
rolb
addr16
sbb
jno
jmp
loope
mov
pop
test
and
or
or
mov
mov
xchg
outsb
push
xor
movsb
jne
jno
rorb
fwait
cwtl
sub
jno
adc
sub
dec
imul
push
imul
mov
push
mov
inc
mov
xor
fdiv
adc
jno
lea
xchg
test
adc
push
rcrl
aas
hlt
jo
adc
mov
mov
rcl
jno
jle
mov
jno
js
arpl
into
push
cmp
imul
add
mov
dec
add
lret
out
sbb
dec
test
icebp
les
adc
sti
cmp
jno
push
out
ja
jmp
movsl
loope
mov
sbb
mov
rcll
imul
xchg
lahf
dec
jnp
cmovne
rcl
jmp
jno
shlb
int3
cli
xor
jno
xor
popf
lods
mov
mov
or
inc
test
adc
cmp
sub
xchg
mov
and
inc
adc
dec
push
fwait
push
sub
pop
jno
fidivs
popf
or
jno
inc
rcr
ret
push
gs
jge
jecxz
push
outsb
int
out
fldl2e
jno
push
repz
xor
and
sbb
jb
jne
jno
mov
adc
lock
mov
sbb
loope
lret
clc
jno
decl
shlb
repnz
cmp
push
cld
fists
xorl
xchg
enter
or
fldl
gs
lcall
dec
jno
mov
lods
shlb
dec
aad
pop
xor
jno
xchg
jno
sub
loop
add
jne
dec
jbe
and
shlb
fwait
gs
in
shlb
cmp
jno
test
mov
push
jno
mov
dec
sub
jae
lods
daa
pop
jg
lods
mov
mov
jae
insb
jp
xor
movsb
jno
adc
add
mov
jne
imul
ret
dec
pop
aaa
enter
jne
push
adc
gs
xor
pusha
mov
outsl
mov
and
lea
adc
jl
sub
jae
jno
jmp
rorb
sub
outsl
jno
pop
pop
dec
cwtl
jecxz
jno
inc
ja
jle
out
jmp
stc
mov
or
jl
dec
test
inc
pusha
jno
mov
cmp
jno
int3
cltd
out
clc
call
into
mov
sbbb
cmpb
jno
sbb
mov
xchg
lods
imul
loopne
mov
outsb
jno
dec
push
ret
sbb
ss
jno
outsl
cltd
out
mov
icebp
jno
mov
cmc
lods
jno
xchg
stos
mov
fwait
mov
jno
ja
std
mov
pop
xlat
dec
aaa
add
xchg
insl
jl
jno
dec
mov
mov
jecxz
adc
repnz
inc
jae
idivb
jno
icebp
aas
mov
int
test
lods
je
sub
and
les
icebp
mov
jno
in
out
xchg
and
add
mov
imul
test
hlt
mov
jno
inc
test
pushf
mov
lret
jne
mov
and
add
ss
stos
je
pushf
std
jno
push
inc
jns
dec
jecxz
jno
or
fs
lods
jo
add
jae
int
movsl
mov
sbbl
test
pcmpeqb
mov
xchg
cmpsl
xor
push
out
cli
adc
hlt
shll
pop
in
add
dec
cmc
or
in
jno
daa
add
shlb
clc
sub
rclb
lret
jno
test
mov
popa
lock
inc
jno
mov
mov
jno
loop
mov
mov
sarl
jno
push
dec
loopne
pop
jno
cltd
dec
sbb
mov
outsb
inc
jno
pop
cwtl
std
addr16
sub
xchg
push
sbb
or
imul
xor
jno
or
pop
add
and
mov
pop
xchg
jae
push
scas
into
push
add
popa
adc
push
or
into
mov
fimull
out
mov
pop
or
jno
aad
leave
and
lea
push
mov
cmp
or
xchg
test
sub
inc
jg
loopne
push
clc
xor
rcrb
cmpsb
int
outsl
push
jno
pop
adc
inc
xor
repz
test
mov
jae
xlat
outsl
jne
jo
int
xor
xor
out
jno
xchg
fimuls
adc
in
divl
aas
jnp
xchg
jno
xor
mov
lods
lret
pop
hlt
xchg
or
fidivs
sub
ss
mov
ret
aad
lahf
add
jge
dec
ror
mov
push
mov
jge
xor
sub
mov
insb
mov
or
xor
cmp
jno
shrb
mov
jno
adc
sarl
mov
leave
in
sub
hlt
mov
ficompl
jne
mov
sub
fs
mov
cmp
insb
jno
daa
decl
fiaddl
inc
cli
mov
iret
lahf
ret
dec
jno
test
sub
mov
jno
nop
pop
push
jno
cltd
lods
fcmovb
inc
add
add
ljmp
add
pop
dec
addr16
outsl
sub
sub
pop
jge
mov
rorl
lock
and
loopne
into
push
mov
or
jae
mov
dec
cmp
xor
mov
sbb
test
es
jge
mov
lods
jo
leave
movsl
hlt
mov
sub
insl
xor
cmpsl
mov
idiv
mov
pop
add
jb
daa
pop
jo
movsl
leave
enter
jno
and
cli
jle
push
adc
jno
jecxz
jmp
imul
notb
cld
insb
nop
push
pop
and
and
add
jno
mov
movsl
fadds
lea
push
and
push
lds
stc
mov
jmp
cmpsl
dec
fnsave
hlt
int3
push
jno
xor
das
aad
push
xorb
punpckhbw
shrl
mov
sbb
jbe
mov
ljmp
mov
int
add
jae
movsl
data16
pop
aas
lods
popa
stos
and
add
inc
and
xorb
jno
aad
fiadds
and
ret
jne
and
dec
mov
stos
add
add
jno
rcl
mov
push
test
cmp
xchg
pop
mov
fsubrl
push
ljmp
jle
xchg
or
movsl
fldenv
jno
fisubs
push
test
cmp
lea
jae
cmc
daa
dec
jne
or
push
adc
insb
push
dec
pusha
pop
pop
sbb
lahf
jne
adc
iret
xchg
loopne
icebp
cmpsl
hlt
inc
mov
push
icebp
mov
mov
mov
outsb
mov
push
cmc
mov
aam
jb
push
jge
cmpsl
mov
jne
sbb
inc
xor
mov
and
enter
mov
push
jmp
jecxz
inc
aad
mov
js
xor
jno
mov
xchg
sbb
jno
dec
adc
jne
cmp
mov
mov
jno
in
rolb
loop
pushf
popf
ds
jns
mov
jb
cmpsl
pop
jns
lret
sub
adc
inc
insl
jno
shll
xchg
jl
pop
imul
jno
popf
fldcw
fists
repz
ret
enter
stos
hlt
testb
inc
test
mov
sub
mov
xchg
jge
shl
jle
inc
lea
xor
sub
into
fwait
imul
pop
mov
addl
in
sbb
jns
xorb
mov
fcoml
xor
repnz
cmpl
pusha
inc
addb
dec
popa
push
push
and
pop
fdivrl
push
push
scas
sbb
lods
xchg
lock
push
xorl
adc
mov
xor
jno
mov
js
jno
xor
pop
cmp
xchg
lds
jae
icebp
adc
jno
lods
xchg
or
in
addr16
mov
fsub
add
sahf
sub
pop
popa
repz
lea
mov
mov
lock
jne
insb
lock
add
mov
loopne
test
std
jne
mov
push
hlt
scas
punpckhwd
sbb
inc
fisttpll
push
jno
popa
jns
jae
out
pop
pop
jo
das
js
mov
and
pop
dec
shlb
xor
shll
clts
out
jmp
cmpsb
mov
xlat
jmp
jno
movsb
xchg
mov
fsubrs
incl
or
sbb
shrb
pusha
xlat
cmc
in
in
iret
jecxz
jle
adc
jne
mov
cwtl
outsl
cmp
test
aam
loopne
and
mov
lret
push
push
xchg
inc
jno
adc
xchg
in
aam
jno
cmp
push
cmp
or
jno
jp
mov
addl
mov
jno
lahf
movsb
sbb
and
out
or
push
adc
fsubl
xchg
scas
xchg
jno
sub
addr16
rcrb
jne
lcall
out
lea
push
cmp
or
xchg
push
or
cs
adc
cmp
jnp
test
xchg
gs
jae
neg
aam
mov
mov
jg
aaa
dec
shlb
hlt
loop
fldcw
adc
jno
fmull
mov
gs
addr16
jno
inc
dec
sub
pop
inc
test
add
ret
inc
mov
fwait
pop
inc
dec
push
divb
inc
std
add
test
repz
popf
dec
repnz
orl
stc
cmp
les
lret
shll
sub
xor
inc
test
jl
jne
jbe
dec
jecxz
jb
mov
cwtl
jno
cmp
mov
jmp
lea
arpl
pushf
add
push
ljmp
dec
or
mov
add
sbb
add
pop
jno
or
fnstenv
xor
pop
fnstsw
xor
jno
scas
jae
stos
sbb
jno
lock
leave
js
andb
jae
out
mov
push
adc
sti
cmp
sub
loope
ret
mov
jne
mov
add
pop
clc
mulb
pop
aaa
jne
ret
adc
dec
icebp
pushf
jnp
leave
adc
rolb
mov
pop
jb
push
mov
ret
test
in
int3
aam
je
shlb
mov
sub
enter
test
mov
movsl
popf
popa
jno
xor
ja
out
loop
dec
jge
xor
cmpsl
les
jno
outsl
mov
inc
je
jmp
das
test
add
scas
mov
xchg
je
flds
aad
lahf
scas
stc
cmc
xor
dec
jns
int3
mov
mov
popa
and
call
xchg
and
jp
into
sub
lods
cmpsl
test
sti
adc
or
shlb
mov
add
mov
inc
xchg
sub
pushf
jae
mov
adc
aaa
lods
test
pop
dec
sub
jno
mov
pushf
jnp
sub
push
in
mov
xor
out
out
bound
jp
inc
insb
cmp
mov
push
insl
in
ja
jge
jg
cs
fs
test
cmpsb
andl
xor
jno
pusha
scas
mov
jno
pop
lret
fcom
pushf
sbb
out
jge
cmp
imul
sbb
mov
lcall
insl
into
stos
xchg
pop
in
sahf
mov
pushf
es
sub
jno
jl
adc
mov
imul
xchg
int
jno
inc
or
nop
sub
and
dec
sub
inc
cmp
mov
push
movsb
movsb
imul
mov
movsl
sbb
stos
pusha
mov
cmp
cmpsl
inc
nop
jno
dec
push
aaa
jno
sbb
and
mov
stc
jno
xchg
dec
pop
loop
jae
jno
xchg
pop
ljmp
xor
push
rolb
jno
stos
mov
jne
jne
dec
mov
inc
add
mov
pop
jno
es
hlt
adc
jno
cmp
mov
add
jno
jl
cs
pusha
data16
imul
movsl
fbld
mov
sbb
mov
out
loope
ds
jg
pop
mov
xor
jno
sub
lret
and
mov
push
fwait
movsb
inc
mov
lret
test
sub
fs
stos
jb
stc
sbb
ja
xor
jns
inc
subb
add
pop
xorl
fidivrl
cmp
insl
sbb
pop
inc
arpl
fs
loop
jne
repnz
inc
jno
lock
pop
loope
sti
sbbl
clc
jno
pop
jae
push
cmp
jno
outsl
lret
das
int
out
roll
mov
shr
jecxz
fwait
jo
push
push
jne
mov
les
cwtl
das
lea
iret
int
in
jo
jno
daa
aas
jns
lret
popa
and
cmp
dec
fsubrs
mov
dec
jno
outsb
fs
inc
scas
jno
inc
mov
int
and
mov
arpl
lea
mov
sub
jecxz
std
push
jae
into
xchg
scas
addr16
rorl
dec
test
jns
mov
xchg
xorb
sub
jg
dec
jno
shl
jle
out
aaa
aas
jns
mov
push
repnz
adc
pop
add
dec
mov
mov
outsl
xorb
lods
xor
jno
ret
fmul
in
pop
jno
dec
mov
cmpsb
pop
push
shr
cld
inc
je
adc
mov
dec
rolb
xchg
dec
rcr
ret
inc
mov
pop
xorl
xor
pop
jno
mov
jne
sbb
loop
xchg
call
jmp
icebp
push
je
jp
sub
and
outsb
jae
int
or
jno
mov
jecxz
jno
cwtl
mov
sub
jne
imul
test
xor
xchg
push
data16
pop
outsl
loope
jno
lds
xor
ret
pop
dec
pop
and
or
jne
xchg
push
sti
enter
jb
jmp
in
jle
jno
in
js
mov
sahf
sub
jno
repz
popa
or
sub
je
leave
scas
or
outsl
sahf
adc
jno
jp
pop
pop
dec
mov
sar
lock
sbb
sub
aaa
je
fucom
loop
dec
je
lds
jnp
or
hlt
ss
divl
fs
cmpsb
test
lret
ljmp
or
js
fdivl
add
push
mov
inc
jno
sbb
aam
leave
cmp
pop
push
inc
dec
js
jno
ret
jp
pop
loope
pop
pop
jae
xchg
std
in
test
mov
inc
test
pop
sbb
inc
in
or
int3
mov
push
inc
and
push
push
mov
lods
or
dec
hlt
xchg
xor
jns
repnz
and
out
je
mov
jno
rorb
rcrl
jne
adc
arpl
insb
fdiv
jno
push
push
adc
insl
stc
aam
mov
push
cmp
lea
jbe
inc
mov
lahf
jns
out
cmpsl
mov
jno
arpl
or
mov
pop
ret
jne
sub
out
sub
pushf
test
aad
inc
imul
fmuls
mov
imul
pop
jno
ss
mov
jns
notb
lods
je,pn
pop
sub
push
dec
das
dec
je
pop
or
adc
sbb
sub
icebp
mov
adc
int
insl
scas
or
hlt
mov
push
xchg
cmp
or
adc
pop
sub
and
cmp
arpl
loope
jno
aas
cmc
sub
hlt
lahf
nop
jno
lds
and
xchg
push
out
pop
jle
int
and
jne
cltd
out
sub
test
jns
aad
ret
mov
hlt
xchg
mov
mov
pop
sbb
mov
push
pop
repz
pop
cwtl
jno
add
std
fwait
or
push
sub
shl
loope
test
jno
dec
jb
mov
ds
cltd
sub
fnstsw
pop
sti
jne
pop
ret
test
adc
xchg
mov
push
lods
pushf
rcrl
dec
mov
push
sbb
ficoms
loopne
les
popf
mov
pop
bnd
xchg
adcl
inc
mov
in
and
jae
stc
cmc
ljmp
scas
fcmove
in
pop
mov
jl
or
inc
cltd
inc
in
aaa
jno
sbb
xchg
shlb
xchg
dec
fs
pop
in
jno
adc
fildll
xor
rcrb
inc
add
sub
insb
rcpps
inc
xchg
inc
out
xor
cli
and
push
jne
or
pop
inc
xor
cmpsw
stos
adc
push
or
sbb
jp
lods
sbb
ljmp
repnz
mov
inc
push
je
jne
inc
lods
mov
mov
cli
xchg
or
or
inc
js
mov
fsts
and
push
test
cmp
imul
push
xlat
jge
movsl
add
imul
push
loope
jmp
add
mov
jg
fsubrs
sub
out
enter
push
xchg
push
or
fdivrl
cmpsb
movsb
shrb
jno
outsl
push
mov
or
js
aas
xor
jno
clc
adc
aaa
cs
lods
add
pop
mov
mov
int3
out
inc
pop
mov
xchg
add
aas
jno
imull
pop
jae
jno
mov
lret
add
scas
insl
push
push
cmp
jno
aaa
xchg
lret
loopne
loope
xor
push
pop
shll
jo
jbe
ss
ja
xchg
add
jge
je
imul
movsl
mov
mov
add
jns
push
dec
mov
xor
add
stc
loop
xchg
push
in
jmp
and
mov
mov
shl
jnp
popa
jno
les
rclb
jno
inc
mov
clc
xor
jno
or
pop
ds
sub
je
add
jge
mov
jo
lock
cmp
gs
sub
rcrb
sub
jne
aas
je
rolb
in
adc
lods
cmp
xchg
dec
stos
push
outsb
mov
push
ljmp
dec
ret
mov
adc
jnp
je
das
sbb
inc
pop
sbb
dec
ficoms
sub
mov
imul
push
mov
xchg
pop
mov
cmp
xchg
aam
ffree
jl
rcrb
mov
hlt
loopne
adc
dec
fs
mov
ret
pop
icebp
int3
lcall
adc
aad
add
mov
testl
mov
push
xor
adc
jno
jns
out
test
jno
ljmp
loop
xchg
jno
xchg
out
enter
pop
mov
jb
mov
push
jl
jno
arpl
dec
jo
cmp
jnp
push
push
mov
jno
sub
xlat
loope
sub
jp
cli
jb
mov
cltd
and
into
inc
mov
jae
ss
fnsave
dec
sarl
mov
add
xchg
and
ficoms
mov
add
sub
mov
and
xchg
jns
cmp
add
stos
js
insb
and
dec
and
dec
jb
out
add
sarl
inc
lret
ror
push
shlb
xchg
je
adc
cmp
jno
dec
rcrb
mov
lds
or
ss
jne
and
xchg
jno
out
leave
test
jo
dec
dec
imul
lods
enter
movsl
mov
push
jno
add
pop
in
aad
fisubs
inc
movsb
jno
xor
rcrb
das
or
inc
les
ss
jg
jno
jle
pop
test
jns
lods
xlat
jge
jb
iret
sbb
dec
adc
dec
push
cmpsb
jno
in
mov
adc
xor
loopne
inc
lods
sub
mov
mov
push
inc
inc
cmp
xor
xor
js
pop
mov
stos
clc
insl
mov
mov
ljmp
in
in
jno
pop
popa
dec
stos
xchg
loope
jno
mov
pop
sub
into
push
jge
pop
loopne
in
push
xchg
ret
das
add
je
in
jmp
adc
jns
pop
or
jno
or
push
loopne
leave
jno
inc
add
in
fs
mov
push
mov
jmp
xchg
jecxz
dec
cwtl
or
mov
jno
popa
ljmp
rol
pop
jno
es
add
cltd
fnsave
repz
jge
pop
int3
jno
adc
and
xor
jb
sbb
pop
adc
sub
add
pop
jge,pn
jmp
ret
mov
xor
adc
sub
jno
inc
sub
scas
jno
mov
test
add
int
mov
push
jne
or
pop
sbb
pop
fnstcw
bnd
add
sarl
roll
push
jns
mov
dec
jecxz
xor
mov
sub
dec
jmp
jo
in
mov
mov
pushf
mov
pop
dec
mov
add
jno
and
pop
in
pop
jnp
push
je
inc
add
xor
shll
ja
jmp
fwait
cmc
cltd
push
xor
stos
test
jb
jmp
decl
notb
int
xor
cmp
std
cmp
mov
jno
inc
inc
lea
or
jno
lods
mov
mov
push
leave
popf
adc
pusha
inc
aam
pop
sub
mov
or
insb
jno
fnsave
movsb
arpl
jae
jns
pop
lret
roll
aad
pop
mov
push
dec
pusha
in
out
ss
jno
iret
lret
mov
cld
inc
mov
jmp
mov
stc
inc
jmp
ret
add
movsb
push
lahf
xor
mov
fimuls
cs
cmp
sbb
repnz
mov
jno
in
add
xorl
stos
push
lahf
lods
mov
push
jns
daa
mov
arpl
in
and
cs
repnz
sub
stos
jno
je
lods
inc
rcrb
jae
inc
mov
push
fiaddl
dec
dec
lea
inc
data16
fwait
mov
lock
pop
mov
mov
mov
or
cmp
sbb
sbb
mov
hlt
jb
sub
mov
sbb
repnz
mov
mov
and
popf
addr16
dec
in
ljmp
sbb
mov
mov
mov
mov
or
adc
jno
push
xchg
jno
mov
insl
dec
or
icebp
lds
cmpsl
jno
into
imul
jns
dec
xchg
and
lods
hlt
push
mov
jno
lcall
gs
jno
cmp
xor
xchg
inc
adc
pop
jno,pn
int3
paddsw
fisttpl
jg
pushaw
dec
pop
dec
xor
shlb
push
outsb
jne
xorl
clc
add
daa
pop
in
add
decl
jno
push
ret
rolb
sub
jp
push
lods
jns
ss
data16
bound
sbb
sbb
sbb
aad
push
pop
imul
ret
or
adc
mov
aas
mov
rcr
push
inc
and
cmp
and
sub
lcall
je
mov
fnstsw
dec
xor
and
sbbl
lods
sahf
sbb
movsl
out
jns
loopne
cmp
jb
stc
inc
test
jae
sbbb
and
jno
push
or
mov
out
and
pop
lods
inc
push
mul
std
sbb
or
jno
mov
in
popa
pop
jno
mov
cmp
les
sbb
lock
jno
js
xchg
mov
mov
in
shll
cmp
data16
and
pushf
movsl
in
xchg
push
sub
jae
adc
in
mov
push
jae
sub
and
inc
sub
mov
cld
xor
pop
sbb
stc
popa
fnstenv
mov
mov
loop
mov
and
gs
adc
in
enter
xor
or
jno
sub
repz
lods
inc
mov
xchg
mov
jno
mov
fistpll
das
sahf
push
je
addr16
cld
subl
dec
dec
mov
jl
push
jne
add
aam
fcmovnu
xor
add
adc
jno
jne
mov
mov
jne
mov
push
lock
mov
sub
insb
int
xor
inc
ret
lods
and
cmp
repnz
loopne
fstps
and
jnp
test
cmp
inc
pop
popa
aaa
fistps
fdivl
inc
fidivs
or
mov
jl
xchg
subl
adc
or
movsl
lods
jno
add
lea
jge
mov
xchg
insb
dec
inc
jb
push
in
jno
lock
pop
push
stc
jno
push
dec
rcrl
add
test
int
jno
loopne
or
roll
adc
fs
sbb
shlb
cwtl
xor
out
xorl
cltd
scas
or
aas
adcl
ljmp
jl
out
aam
and
jb
int
flds
push
dec
cld
cmp
jns
jmp
jno
mov
bound
in
test
imull
jl
pop
inc
leave
imul
xchg
les
sarb
sbb
out
jge
inc
das
jne
push
xor
shl
call
or
dec
xorl
add
test
lret
jae
les
dec
jle
push
repnz
dec
jl
dec
push
lea
jae
push
and
mov
jae
push
mov
jno
cmp
test
ja
pop
addb
lods
mull
mov
dec
pop
mov
inc
and
mov
xor
pop
fidivs
pop
pop
arpl
and
in
ret
jno
test
or
mov
push
fwait
scas
dec
lret
jno
loop
mov
sbb
rcrb
mov
cmc
push
ljmp
pop
nop
mov
jmp
dec
dec
fistpl
je
test
mov
jae
das
pop
or
and
or
jne
aad
lock
cs
repnz
gs
ja
jae
jl
xor
fsubrl
stos
inc
mov
jb
sbb
push
or
pop
sbbb
and
inc
int
adc
inc
fiadds
ret
clc
jno
pop
ss
jb
sbb
mov
cmp
loop
add
xchg
pop
pop
adc
adc
sub
dec
in
jp
add
std
jno
or
mov
les
jno
sub
dec
in
dec
mov
mov
push
jno
data16
cmpb
pop
lahf
jne
jns
push
int3
loop
movsb
sahf
jno
stc
jae
jmp
out
and
sub
repnz
pop
je
mov
push
bound
ret
fcmove
jno
or
xor
pop
push
jae
orb
jmp
cltd
push
or
push
pop
xor
push
imul
aaa
sahf
addr16
adcb
notb
and
repnz
out
inc
jns
inc
ss
ficoms
out
ljmp
in
jae
push
push
dec
ds
and
jno
add
fwait
add
dec
test
hlt
sbb
mov
cmpsb
divw
fstl
inc
stos
shl
sub
in
aam
sbb
jbe
lods
cwtl
dec
lods
cli
jb
cltd
inc
mov
dec
mov
or
add
or
imull
les
rclb
shlb
popf
dec
jmp
outsl
and
ds
imul
jno
jnp
push
shll
xlat
lret
push
xor
adc
mov
pop
xchg
movsl
jge
test
shufps
mov
adc
aad
xchg
jbe
or
push
jno
jmp
mov
fwait
insl
ja
dec
cmp
pop
jno
mov
cmpsb
out
cmp
mov
je
xor
cwtl
mov
call
inc
mov
mov
and
into
loope
push
filds
adc
das
faddl
jno
mull
test
jno
enter
in
sub
lret
fmuls
pop
mov
inc
mov
jno
maskmovq
idivl
dec
data16
lods
test
or
jg
in
jno
adc
pop
push
pop
paddusw
adc
push
and
test
in
repz
sub
call
jae
frstor
repz
or
xchg
loope
push
xchg
cmp
mov
scas
fdivrl
push
dec
jae
pop
in
dec
pusha
mov
jne
pushl
aam
out
push
or
dec
add
lods
bound
jmp
and
mov
sbb
xor
xchg
sub
jno
loope
mov
hlt
jno
sub
out
fcompl
jno
negb
lea
jno
in
sub
test
cmc
pusha
outsb
xor
jae
lahf
in
in
out
adc
pop
dec
out
add
stc
notl
and
sbb
push
push
in
xchg
std
jae
xor
sahf
mull
imul
jne
mov
shrb
in
hlt
xchg
lods
jg
ja
pusha
pop
test
lret
in
jno
ds
mov
jno
push
fdivs
and
fcmovnu
xor
je
jne
lds
push
out
das
fmul
icebp
nop
nop
push
fisttps
inc
call
dec
jb
aas
ficompl
jno
push
mov
jno
ja
lods
fistl
mov
inc
pop
out
hlt
imul
sub
data16
xchg
xor
enter
jp
add
xor
dec
add
jno
or
cmpsl
adc
dec
fisttps
bound
jle
mov
das
jns
push
mov
sbb
outsb
subb
sbb
insl
dec
xor
jno
push
loopne
imul
in
jnp
xor
rcrb
stos
mov
loope
test
je
xor
and
push
dec
hlt
jp
je
jb
dec
int3
xchg
mov
jno
adc
xchg
popf
mov
or
jge,pn
jno
lds
xor
sub
nop
cmc
outsb
hlt
push
pop
jno
and
addr16
or
pop
adc
jns
call
out
mov
add
in
mov
je
mov
sub
cmpsl
lea
push
cmp
ss
jno
insl
add
cmpsb
fisubrs
or
ror
notb
loop
addb
xor
xor
out
je
clc
mov
mov
int3
das
push
repnz
or
and
incb
jne
out
icebp
orl
fdivl
inc
testl
jno
call
enter
mov
lret
mov
nop
cmp
lea
xor
lods
mov
data16
test
mov
and
or
add
test
pop
loope
lock
or
sub
insb
pop
aam
jno
shlb
push
inc
je
jno
pop
fisttpll
mov
ret
icebp
pop
mov
xor
sbb
adc
out
in
aad
xchg
or
xchg
cmp
mov
mov
inc
xchg
mov
push
mov
enter
jno
lahf
adc
jg
push
dec
scas
out
jnp
addr16
xchg
add
jae
lcall
lret
je
mov
loop
aam
inc
sub
es
mov
sti
jno
inc
mov
cmp
pop
add
jg
rcl
dec
notb
pop
jnp
add
jmp
push
jno
pop
psubd
xor
and
call
cwtl
xchg
stos
mov
adc
jno
sub
repz
push
push
jno
mov
inc
inc
inc
mov
ret
shr
aam
fwait
stc
adc
cmpsb
imul
push
iret
in
enter
loop
lret
cmp
ja
sti
add
out
add
ret
je
call
mov
mov
cwtl
sbb
push
lods
jg
mov
push
sti
loop
shrl
iret
jae
mov
lret
fwait
fs
pop
sbb
es
je
or
cmc
outsb
jno
mov
pop
dec
gs
jno
addr16
test
icebp
adc
adc
test
in
cli
xchg
jne
cmpsb
les
das
mov
jno
or
insb
cmp
lock
and
jno
xor
fwait
mov
cmp
adc
sub
push
inc
enter
call
ja
push
jno
sub
cs
adc
push
sbb
xorl
xlat
int
dec
inc
mov
stos
jno
insb
jne
pop
pop
mov
cltd
test
inc
pop
mov
add
ret
icebp
lea
xor
out
cmpsl
jb
mov
or
sub
popa
mov
js
sub
jne
cltd
in
stc
imul
sahf
xor
lea
movsl
xchg
mov
outsb
inc
mov
es
shll
and
test
jae
fwait
insb
push
or
arpl
push
dec
cmpl
sub
stc
add
push
cmc
sar
and
sbb
call
sub
jno
mov
cmpsb
cmp
ljmp
shlb
mov
and
fmuls
in
test
mov
mov
les
jns
lds
fs
movsl
push
clc
add
and
dec
fimull
fsubrs
and
xchg
xor
jge
std
dec
cmpl
inc
sbb
inc
clc
sub
mulb
xchg
and
ja
jae
adc
mov
inc
ss
and
mov
xchg
sbb
pop
int
xor
out
jp
movsb
pop
jo
subb
ret
sarl
call
sti
jge
xchg
rcrl
jno
inc
push
push
leave
aam
or
sub
cmc
sub
outsl
cmp
out
mov
jle
sub
jno
xor
hlt
js
out
out
test
stc
push
mov
xor
cmp
add
in
sbb
jno
xor
lods
jno
aas
adc
cwtl
sub
mov
test
std
aad
enter
adc
popa
xor
mov
cmpl
enter
cwtl
hlt
popf
and
xlat
inc
pcmpgtd
lods
daa
jo
fdivp
ja
in
sti
movsb
jno
cltd
adc
mov
enter
lds
icebp
adc
dec
mov
fwait
lahf
jne
movsb
idivl
dec
mov
dec
pop
ficoms
sbb
sbb
adc
jne
lret
jp
jno
sbb
lods
xchg
xor
xor
lss
jbe
lods
lahf
lods
pushf
jno
loop
sahf
xchg
adcl
or
es
clc
xchg
pop
out
xor
adcl
in
jno
jl
fisttpl
jno
or
jg
pop
popa
inc
sub
sahf
pop
fs
jno
imul
pop
aad
add
mov
xchg
jno
add
sahf
icebp
scas
pop
jno
push
in
jnp
jno
arpl
cs
mov
rcrb
jle
jne
aad
xor
xchg
xchg
add
cmp
adc
sarb
jno
fmul
sub
mov
jno
add
enter
jae
cmpsb
in
mov
aam
lcall
sahf
loop
pushf
jge
cmp
mov
ss
popf
test
xor
mov
push
daa
scas
das
out
push
jbe
ret
adc
dec
sbb
lcall
xchg
xchg
inc
xchg
jno
mov
dec
mov
xchg
xor
stos
xchg
ss
mov
arpl
les
or
pop
inc
adc
sbb
pop
shlb
shll
es
xchg
push
xor
insl
jl
jno
stos
sahf
lea
xchg
je
pop
jbe
je
out
push
or
mov
jno
scas
push
xor
test
sbb
std
jg
dec
gs
aam
cs
jno
stc
mov
inc
jno
les
inc
sub
dec
mov
mov
xchg
faddp
jno
in
fmul
ret
add
dec
jecxz
xor
fwait
stos
je
test
sarl
jle
jno
jo
loopne
bound
ret
push
inc
jno
mov
mov
sbb
push
mov
sub
push
orb
jno
or
sub
mov
test
jae
cmp
jno
loop
mov
lods
mov
lret
scas
adc
push
jg
fldcw
mov
jno
add
lret
sbb
add
jg
inc
push
sbb
jno
xor
jmp
jp
jne
jno
test
mov
jne
fstp
adc
cmpsb
lret
lea
sbb
ret
add
scas
jmp
fwait
pop
xor
cmpsl
sbb
jecxz
loope
jno
xor
mov
gs
mov
mov
inc
je
jno
dec
or
sub
fmull
add
imul
je
mov
jno
push
push
clc
leave
sbb
jb
cmpb
imul
lcall
insl
je
or
and
in
xchg
ljmp
popa
int
ss
or
out
adc
mov
mov
pop
pop
mov
pusha
jno
mov
gs
aaa
and
jge
jo
mov
jno
xor
sub
in
sbb
dec
jb
xlat
jbe
mov
rcrl
mov
xchg
xchg
dec
jl
xor
jno
hlt
mov
pushf
or
fistpl
divb
adc
hlt
cmc
scas
mov
add
cmp
mov
ss
jmp
es
loope
xor
adc
and
outsb
jno
fdivrs
and
and
das
jmp
rorb
je
ja
fists
fimull
testl
jno
push
adcl
pushf
out
cmp
imul
mov
dec
jno
clc
jg
or
out
out
xor
shrb
xchg
push
jnp
aam
aam
jno
dec
inc
ret
lods
arpl
inc
adc
mov
sbb
inc
sbbl
and
push
mov
mov
ljmp
imul
shlb
jmp
pop
mov
jl
popf
ret
xchg
xchg
lret
stc
cwtl
mov
pushf
sbb
jno
je
out
add
mov
popf
shlb
jno
bnd
das
data16
jne
cs
adc
insl
xchg
fstl
or
les
rorl
push
test
jle
in
decb
repz
scas
in
jp
pop
jb
shrb
int3
mov
shr
jno
std
pop
scas
loop
inc
push
popf
movsb
lds
jno
mov
in
dec
jno
mov
ficoml
gs
pusha
push
add
andl
fadds
repnz
jno
jge
hlt
std
in
inc
jno
adcb
addb
add
push
adc
or
inc
cmpsb
nop
jp
push
pushf
push
inc
xor
mov
test
jno
cmp
repnz
mov
mov
movsb
push
push
adc
sbb
mov
mov
bnd
cli
push
jno
xchg
cwtl
mov
inc
out
push
test
in
xor
clc
lcall
jno
stc
outsb
mov
sbb
mov
push
or
adc
je
xorb
lcall
cld
sbb
jge
cmc
call
xor
rol
and
pop
jno
ja
push
inc
iret
lret
es
jge
push
cmp
fistl
hlt
pop
and
xor
push
pop
gs
pop
test
xchg
leave
insb
shll
jno
insl
les
sarb
leave
jg
sub
daa
pusha
loope
mov
repz
lds
sahf
or
sbb
push
jmp
or
in
sbb
push
sbb
jns
add
stc
fidivrs
jno
fisubrl
mov
adc
scas
sar
iret
xor
dec
leave
inc
imul
lret
sbb
mov
jge
push
xor
in
jno
or
xchg
mov
lods
jb
or
jne
loop
xor
inc
loopne
sar
ss
dec
andl
push
repnz
pop
out
sub
lret
inc
dec
cwtl
mov
and
sbb
jae
dec
rclb
out
jae
pop
xchg
lods
mov
jno
pop
in
sbb
push
add
jg
es
xor
cwtl
cmpsl
pushl
sbb
jno
mov
adc
mov
sub
xor
jg
mov
cmc
in
pop
or
loopne
xchg
jle
jge
jns
jo
hlt
ret
stc
arpl
addl
test
stos
jno
in
lret
or
jno
je
lahf
and
out
popf
sbb
sbb
stc
mov
jno
aas
fdivrs
jne
adc
xor
push
or
imul
jno,pn
sti
adc
fnsave
sub
xlat
mov
mov
movsl
pop
jbe
xor
js
arpl
test
int
push
movsb
je
push
xorl
pusha
ljmp
inc
aas
xlat
fmuls
shll
inc
rcrb
fucomi
fs
mov
xor
test
inc
sub
pop
xchg
addr16
push
push
lods
test
adcl
sbb
sbb
outsb
jle
stc
movsb
jno
out
repnz
test
pop
movsl
fstpt
daa
jae
ja
out
lcall
push
xchg
mov
aaa
inc
bound
jns
xlat
or
push
mov
cmp
jbe
cmc
repnz
mov
push
cmpsb
or
add
imulb
jae
mov
or
testl
fsubr
add
jo
jg
dec
mov
dec
stos
fbstp
inc
in
out
mov
jno
aaa
xchg
sbb
repnz
test
jae
xchg
aam
push
jno
loopne
xchg
adc
aad
sbb
in
xchg
fcompl
jl
inc
repnz
xor
push
popa
jae
dec
adc
out
jb
xorb
je
jg
inc
into
add
out
cwtl
xor
ret
lods
icebp
mov
xorb
in
aam
mov
dec
cmpsb
fcoml
push
mov
sub
out
in
not
scas
adc
int
pop
stos
dec
notb
push
push
aam
jb
jge
push
push
dec
lea
jno
cmpsl
xor
jno
jns
js
and
push
ret
addr16
xor
loop
xor
jae
enter
inc
mov
mov
dec
add
cmp
pusha
lea
sub
add
repz
cli
xor
cs
mov
mov
push
je
cld
mov
sbb
das
fmull
or
push
add
dec
jecxz
xchg
aas
jae
dec
or
jne
add
int
add
das
fldz
jl
ja
ljmp
jle
mov
xchg
push
icebp
mov
bound
daa
in
mov
movzwl
test
imul
xlat
js
sbb
jno
or
pop
cmp
loope
shl
pop
add
pop
out
jecxz
scas
jno
mov
xor
pop
cld
stc
jno
scas
test
fsts
mov
test
rorb
cmp
fldl
push
mov
fidivs
pushf
rcrl
idivb
cwtl
inc
imul
sub
xchg
mov
jno
int3
lea
rolb
mov
and
hlt
int
cltd
or
vandps
outsb
mov
outsl
jno
loopne
les
push
mov
dec
fwait
ja
lahf
jno
and
xchg
jno
mov
insb
mov
in
push
mov
pop
jb
sub
add
xor
pop
and
hlt
int
mov
lock
aaa
test
pushf
cmc
inc
test
jecxz
xor
xor
inc
movsb
pop
inc
xchg
je
das
xor
mul
jle
pop
xchg
arpl
jno
cs
mov
xor
leave
jno
mov
fidivs
dec
adc
shll
in
shll
jno
mov
shlb
iret
fisubrl
repnz
leave
daa
fisubs
mov
jno
add
cmp
daa
data16
scas
pusha
cmp
adc
xor
jno
mov
mov
lods
push
add
into
repnz
pop
push
out
jne
loope
or
sbb
mov
xchg
xchg
arpl
adc
jae
je
or
mov
push
insb
fsubrs
jno
cwtl
xor
in
cmp
jno
and
inc
loopne
jno
or
sbb
mov
lea
je
add
int3
push
imul
loope
xchg
jno
shr
cld
adc
and
xor
ret
lods
xchg
mov
pop
mov
dec
and
mov
pop
adc
mov
cmpsl
and
dec
jne
jp
lahf
lods
inc
pusha
test
sub
xchg
cs
ret
jmp
fdivr
leave
ljmp
cmc
not
push
icebp
scas
add
jno
adc
in
xchg
popf
jno
popl
lods
jns
cs
into
repz
or
sub
ret
out
cmc
xor
cli
dec
cmp
jno
xchg
lahf
frstor
lds
pop
push
cmp
and
push
sti
cmp
pop
jno
push
adc
xor
ret
cltd
dec
jno
ljmp
jno
jle
push
push
arpl
jno
and
mov
jno
pop
sub
fwait
int
cli
mov
jecxz
jl
xor
dec
ror
jno
add
ss
ja
jge
movsb
inc
and
jo
clc
jmp
outsl
hlt
fidivrl
insl
lea
mov
aad
or
mov
fdivl
fisttpl
bound
cld
xor
decb
iret
addr16
inc
pop
stc
push
dec
jge
adc
rolb
push
ror
sub
insl
mov
push
push
xchg
test
jae
mov
push
popa
jp
inc
and
push
push
in
jns
mov
jo
xchg
imul
mov
pop
sub
loopne
pop
jno
dec
mov
sti
pop
mov
jno
stos
int
push
imul
mov
xor
xor
jle
adc
pop
out
mov
jno
and
mov
mov
dec
push
hlt
adc
inc
push
lods
xchg
xchg
push
hlt
idivb
cmp
fnstenv
cmp
aaa
outsb
popf
rcll
cmpl
ds
jge
mov
push
arpl
jno
push
add
xor
jno
cmp
out
shl
ja
jno
mov
fdivr
jle
out
sbb
mov
jp
xchg
outsl
aad
jo
das
dec
push
repnz
add
cmp
mov
out
jno
push
sub
pop
sbb
outsb
jno
arpl
add
xor
stos
imul
aaa
lret
jbe
popf
les
mov
in
jg
out
add
push
xchg
adc
lds
fs
jge
mov
xchg
jno
jnp
mov
xorl
lcall
jne
pop
test
and
mov
push
xor
imul
sub
ss
dec
es
popa
int
jmp
jae
std
cmc
push
cmpsl
add
jno
fmuls
adc
sbb
movsl
inc
pop
cmp
add
repnz
xor
add
out
aas
and
sub
pop
push
in
insl
add
lock
adc
sbb
add
sbb
lret
xchg
mov
imul
incb
fldt
icebp
lret
andl
adc
dec
fmul
leave
sarl
hlt
cs
jno
test
sbb
int3
jno
lock
or
pop
jl
xchg
scas
addr16
adc
lea
xor
pop
mov
mov
xchg
jae
popa
ja
dec
dec
mov
stos
jp
jno
arpl
dec
pop
or
in
or
jno
cmp
stos
lret
fdivl
xor
loop
dec
jno
cmp
push
adcb
jns
push
fwait
dec
les
scas
mov
cs
xor
mov
pop
cmc
lods
in
aas
test
bound
adc
pop
pop
stc
jno
adc
loop
jno
adc
idivl
dec
mov
sub
mov
push
imul
xchg
pushf
mov
out
sbb
pop
mov
mull
mov
pop
lds
sbbl
jb
pop
scas
dec
jno
sub
sub
aam
jno
cmpsl
pop
sahf
mov
in
pop
inc
leave
cmp
jno
jns
and
roll
adc
jno
in
iret
out
cmp
mov
mov
adc
shll
dec
sbb
test
adc
fcompl
dec
push
pop
jns
jl
jbe
xor
mov
xor
jno
mov
int3
mov
lret
lcall
lds
fdivr
sub
sub
jno
ss
cs
add
adc
call
and
adc
and
jmp
nop
enter
jge
cld
shlb
fadds
aam
push
loop
inc
test
sbb
adc
aaa
inc
push
popf
inc
shl
out
mov
pop
aad
popa
mov
xchg
insb
xchg
cmp
mov
dec
mov
xchg
pop
je
dec
adc
pop
pop
outsb
jmp
cmp
popa
jmp
jo
lods
repnz
xchg
je
xorl
xlat
pop
sbb
lret
mov
lods
xchg
add
icebp
mov
jbe
add
mov
sti
adc
mov
mov
xchg
icebp
jecxz
jbe
jmp
movups
push
hlt
mov
and
xchg
loop
push
clc
ja
sub
or
jae
inc
jns
insb
and
pop
push
jae
pop
fbstp
imul
mov
rol
cwtl
icebp
dec
es
icebp
adcb
mov
cmp
xchg
xchg
jge
cli
sub
ret
dec
lahf
xor
and
inc
aad
inc
repnz
xor
imul
test
xor
mov
xchg
loope
sti
xchg
stos
into
pop
inc
jo
leave
ret
xchg
pushf
jecxz
in
mov
mov
lret
bnd
inc
movsl
repz
adc
out
testb
aas
mov
add
fidivl
push
js
jg
jg
rcrl
jae
std
outsl
movsb
imul
jae
or
mov
sbbl
mov
test
or
sub
xchg
das
ret
cwtl
paddb
jno
sub
mov
lea
xor
dec
cmpsl
jno
sbb
insl
cmp
or
es
mov
sarb
not
or
cmp
xchg
dec
mov
push
in
insb
jno
add
jae
mov
mov
or
cld
add
jbe
fsub
movb
jae
imul
cmp
adc
repz
negb
mov
rolb
push
fs
jno
stc
out
test
jns
pop
dec
in
je
add
jno
dec
dec
dec
je
mov
mov
xlat
add
jno
inc
sub
adc
mov
shrb
enter
insl
inc
jno
imul
rcll
jb
out
push
inc
dec
xor
sbb
push
fidivs
jo
mov
loopne
mov
jne
gs
jno,pn
mov
int3
or
dec
xchg
fbld
es
jno
inc
xor
or
into
inc
fdivs
jae
mov
jno
subl
jb
jg
jmp
xlat
mov
mov
lea
in
jno
inc
mov
jo
mov
movsb
out
stos
movsl
shrl
jno
std
lahf
mov
addr16
jne
jl
imul
into
cs
jno
jmp
and
leave
flds
nop
cmpl
es
push
pop
jmp
add
mov
sbb
stos
ss
lds
nop
fcompl
icebp
cmp
dec
jne
adc
adc
enter
and
sub
dec
sti
pop
or
xor
adc
xchg
test
lock
jae
in
aaa
lahf
jge
push
subb
xor
mov
out
jb
dec
jno
push
push
lret
test
jno
push
fildl
loopne
cmpsl
jne
je
push
jmp
mov
mov
jno
rcr
lcall
out
jnp
mov
sbb
inc
jno
stc
xchg
insl
cltd
xorl
jbe
clc
jno
push
sbb
adc
pop
jb
push
mov
test
incb
arpl
push
int3
inc
stos
xlat
hlt
sbb
dec
and
inc
movsb
jns
js
pop
add
je
out
adc
jno
sbb
pop
gs
stos
jae
pop
movsl
pop
imull
mov
stc
mov
lret
mov
daa
mov
mov
push
pop
imul
rcr
adc
pop
and
outsb
lret
pop
cmpsb
xor
je,pt
fstpl
xor
lcall
cmpsb
popa
add
jae
cmp
push
es
jno
sbb
lahf
add
int3
adc
loopne
jge
sub
sub
into
ret
outsb
pop
inc
inc
cmp
xlat
xchg
adc
jno
or
xor
leave
sub
rcrb
push
test
push
add
imul
cmp
mov
insb
stc
pop
push
enter
setno
icebp
fwait
and
idivb
jb
hlt
dec
jno
push
movsl
cld
and
imul
jle
sbb
jae
sbb
in
xor
insl
cmpb
scas
sub
mov
leave
in
jno
in
or
lea
ljmp
repnz
leave
imul
jns
mov
out
sub
loope
adc
jno
or
divl
mov
movlps
bnd
mov
add
sbb
test
mov
mov
sarb
out
scas
sbb
add
mov
and
jne
scas
cld
adc
mov
xchg
addl
xchg
jle
cs
mov
fnsave
sbb
fidivl
sub
into
or
adc
jbe
sub
mov
inc
xor
mov
jp
fdivp
sbb
movsb
and
cld
in
push
sahf
jb
xor
clc
xor
lret
jno
cmp
imul
pusha
mov
add
inc
xchg
xchg
and
scas
pop
mov
inc
cli
jno
sbb
jb
and
jge
push
jg
outsl
or
pop
and
iret
dec
ds
out
fwait
orb
pop
jno
hlt
lret
inc
nop
ret
jno
imul
cli
xchg
out
xchg
inc
in
sbb
push
gs
and
int
mov
jb
in
jecxz
jne
leave
pop
xchg
sti
fnstenv
dec
les
cmpsb
sub
pusha
jno
xor
push
sti
jno
pop
cld
inc
outsb
shl
jne
and
out
fs
jno
call
and
mov
mov
or
mov
lret
inc
hlt
shlb
inc
fs
and
sub
jno
and
ds
cmpsl
cmp
mov
mov
dec
mov
pop
lods
in
js
or
or
jno
ss
xchg
scas
adc
jno
fwait
adc
mov
test
int
dec
pop
and
hlt
add
scas
jno
mov
leave
jno
adc
jae
das
repnz
inc
call
aaa
sub
push
adc
pop
sarb
es
push
xchg
loop
cmp
test
icebp
imul
pop
adc
shl
ficomps
cmp
orl
jp
in
rclb
lods
pop
shrl
fwait
mov
cmp
xchg
das
sbb
jno
or
popa
pop
pop
adc
jae
mov
into
pop
repnz
dec
mov
sbb
jns
fcmovne
xor
mov
push
sub
lods
xchg
lret
ja
nop
call
dec
in
aaa
into
jno
mul
push
loopne
movb
in
fs
ja
divl
mov
js
xor
dec
pop
xor
insl
or
jno
je
int3
lods
dec
xchg
jno
jmp
mov
fidivl
inc
push
push
test
sub
icebp
adc
lea
jb
fidivrs
pop
rorb
xor
sub
in
lea
pop
pop
iret
and
jno
outsb
mov
cld
stc
mov
cwtl
in
fmul
pcmpeqd
addl
xor
jno
std
dec
loope
arpl
scas
jle
mov
jne
sbb
outsl
fs
or
add
pop
xorl
xchg
xlat
int3
stos
xor
jge
xchg
movsb
dec
xor
push
jmp
dec
sarb
scas
push
fbld
push
sbb
mov
jne
and
int
xchg
inc
dec
mov
pop
orb
xorl
push
js
xor
push
gs
out
mov
jno
data16
stos
lret
jno
sbb
jmp
jo
xchg
sub
aas
ljmp
adc
jno
sbb
pushf
jno
popf
dec
cmp
lds
xlat
xor
pop
xchg
sub
cs
cmp
xor
jno
jp
imul
std
enter
int
adc
pop
out
cmp
paddusb
pop
jno
jg
and
xchg
shrl
and
hlt
or
inc
loope
shll
shl
gs
xor
jno
out
xchg
jecxz
daa
jno
insl
xchg
aaa
jbe
out
jno
test
jmp
push
push
mov
jno
sub
sti
xchg
push
das
jno
sbb
xchg
scas
cwtl
aaa
mov
popf
mov
rolb
out
out
fiadds
xchg
adc
xchg
jo
cltd
clc
push
inc
arpl
aad
or
jno
loop
cmp
lret
jno
scas
call
jge
mov
jae
repz
mov
push
mov
rcll
sbb
leave
mov
scas
jno
int
hlt
dec
cmp
adc
pop
imul
sub
jno
ja
cld
test
xchg
adc
loope
inc
sbbl
jge
ss
add
fdivrs
jno
push
and
aad
pop
movsl
jno
repnz
and
pushl
cmp
in
fdivl
pushf
jno
lcall
jno
mov
pop
incb
cmp
mov
loop
sbb
gs
xchg
cli
mov
arpl
dec
sub
dec
push
dec
cmp
mov
push
xchg
lea
jae
add
nop
adc
xor
mov
jle
je
and
mov
pop
out
push
jno
ja
aas
std
cwtl
mov
jmp
arpl
dec
fnsave
dec
mov
pop
jge
ljmp
sub
push
xchg
mov
xchg
out
fildl
jno
push
inc
lahf
out
shrb
cmp
mov
sbb
js
xchg
pop
jns
fcmovnu
inc
dec
cmp
jle
push
or
jno
jecxz
nop
lds
cmpb
inc
adc
out
jne
lcall
lock
pushf
fs
cmc
sbb
movsl
dec
jae
pop
sbb
jb
mov
and
in
test
fdivrl
push
jne
cmpsb
jb
cltd
xor
jb
xchg
mov
jge
rcrl
push
jecxz
xor
aad
inc
shr
andl
in
pop
pushl
mov
or
jecxz
inc
sbb
cmp
notl
xlat
jno
dec
xor
movsl
push
jmp
mov
xor
xlat
mov
mov
jno
push
xchg
push
jp
bound
sahf
movsb
rorb
xchg
dec
mov
cmp
cmc
subb
push
add
pop
repnz
jne
sti
jmp
mov
jmp
mov
pop
pop
add
adc
les
or
add
es
push
push
mov
add
stos
mov
lea
and
ja
xchg
jae
mov
mov
je
iret
mov
add
jno
int3
or
push
mov
jo
mov
adc
jne
fidivrl
pop
jae
jge
push
loope
in
adc
cli
adc
jno
out
repnz
mov
insl
jmp
fldt
push
inc
mov
sub
jl
pop
xlat
jne
push
adc
call
fsubrl
lods
push
in
clc
jecxz
pop
jno
arpl
fs
je
les
jae
mov
cmp
push
int3
mov
lods
call
adc
push
jno
shll
xchg
lahf
shr
push
push
cmpsb
jne
adc
aaa
adc
xchg
jb
shlb
jp
push
jno
fnstcw
jne
push
dec
faddl
lea
sub
ljmp
dec
lods
faddl
aaa
dec
jno
adc
push
into
mov
aad
push
inc
sbb
cmp
pop
enter
sbb
jno
bound
mov
xor
jno
mov
add
ret
adc
std
pop
shll
cli
xchg
mov
or
sbb
inc
ss
mov
inc
daa
jle
and
dec
push
dec
in
test
iret
jno
mov
sbb
push
pop
mov
sub
cmpsb
setl
inc
in
insb
push
push
mov
hlt
jae
adc
push
add
shlb
jle
or
inc
cmpsl
and
xor
jl
stc
rol
jno
mov
adc
or
aam
xchg
jge
repz
xchg
and
sub
jno
loope
pusha
inc
jno
xchg
mov
xchg
jmp
sbb
jno
out
dec
mov
outsl
add
push
and
jae
loop
mov
xchg
lods
sbb
add
or
add
cmp
jno
pop
js
daa
bound
push
jno
fidivrl
mov
push
dec
stos
out
mov
jno
push
test
test
dec
into
cs
jmp
stc
mov
sub
out
aas
cmpsl
sbb
outsb
test
xchg
rolb
or
jae
imul
repnz
xorl
push
jne
mov
xor
jns
push
and
jge
add
mov
lea
sub
fstps
lcall
adc
adc
loope
push
pop
jae
mov
mov
xchg
jno
xchg
clc
lds
xor
add
sbb
fisubrl
xor
test
loopne
jno
cli
mov
pop
cld
and
pop
fs
and
inc
inc
test
sub
add
lock
pop
jp
push
mov
shll
push
and
sub
xor
and
aad
dec
jno
push
push
cmp
jp
jb
sub
cltd
aas
and
imul
push
xchg
mov
pop
xor
and
fidivs
or
cld
out
cli
jno
or
mov
pushf
test
sarl
inc
fists
ret
jno
jo
dec
dec
stos
adc
jno
adc
inc
popf
loope
test
stos
ficoml
out
cmp
test
xor
jb
scas
mov
or
in
or
subps
lret
cmp
repz
pop
stos
jb
or
daa
xorb
jno
les
push
test
test
push
ss
fistpll
add
cmpsl
dec
add
fidivl
aas
scas
jno
push
aad
in
gs
jno
sub
cltd
or
loop
jae
into
das
cmc
lret
shlb
aas
sbb
dec
jno
mov
ds
dec
jge
dec
xlat
mov
xor
jno
nop
mov
jno
pop
test
imul
jae
jg
jbe
mov
jno
inc
xor
mov
cmp
cmpsl
push
nop
xchg
inc
jno
adc
jl
in
dec
jne
push
jo
xchg
loope
xor
jns
scas
movsb
cltd
inc
inc
jb
mov
jno
jns
jmp
dec
xor
dec
inc
test
sbb
ret
stos
and
aas
jno
cmc
int
xor
cmp
push
shlb
xor
mov
sti
xchg
mov
test
jns
mov
cld
jno
fcomps
pushl
jbe
xor
aaa
adc
insl
adc
cmp
lods
dec
or
mov
mov
ds
cmp
jbe
pushf
scas
push
ss
test
pushl
insb
jno
das
dec
jns
lods
or
std
adcb
jns
add
mov
mul
imul
ja
pop
jno
mov
dec
inc
and
mov
push
jno
mov
cmp
xchg
cmpsb
cmp
imul
lods
movsl
imul
sub
adc
sbb
movsl
scas
ret
js
jno
jge
aas
mov
push
imul
and
lds
je
pop
stos
cmp
div
xchg
add
cld
fwait
int3
or
imul
jl
or
divl
cmpsl
subb
ss
dec
hlt
sbb
or
jae
and
adc
jno
es
xchg
jo
mov
jb
insb
ss
pop
jno
adc
push
fcoml
insb
sbb
scas
jae
iret
mov
add
in
std
adc
pop
out
dec
ficoml
shrl
xor
sbb
fs
in
dec
xchg
jns
test
cmc
pop
lods
jb
cwtl
xchg
mov
sub
add
sub
dec
cli
jmp
push
mov
mov
inc
js
lods
xor
jno
mov
leave
jmp
test
jne
xor
pop
mov
ret
xor
jno
mov
jecxz
jno
mov
movsl
jns
ds
test
jae
imulb
inc
jmp
sbb
add
mov
in
jo
inc
repnz
fmull
jb
insb
mov
mov
xchg
xchg
xchg
das
test
jb
les
jg
jno
cmp
sub
sbb
call
jno
aad
shlb
xor
dec
popf
lock
cmpb
adc
inc
mov
inc
dec
mov
xchg
lahf
xor
call
mov
shll
shr
test
mov
cmp
dec
push
push
jmp
cmpsl
test
push
xor
cld
jae
jns
rorl
xchg
push
sbb
lret
mov
adc
lods
scas
std
jne
jno
stc
int
sahf
fwait
arpl
jno
push
outsb
adc
jno
cmp
gs
lods
mov
fwait
lock
or
mov
jbe
enter
and
mov
cmp
jae
clc
push
cmp
sbb
xor
ftst
int3
pop
sub
aad
mov
push
test
call
fimull
inc
into
cli
jno
sbb
xor
jno
sbb
outsb
mov
jns
test
sbb
ret
lret
cli
jno
adcl
sbb
rep
jge,pn
cmpl
inc
out
out
popa
jno
fbld
cwtl
mov
clc
jno
jns
nop
xor
or
jg
pop
jle
cmp
cwtl
add
push
gs
mov
insl
and
loop
in
jno
pushf
push
adc
gs
mov
loope
orl
je
es
in
sbb
test
dec
fnstenv
enter
ds
sub
dec
pop
xor
push
jno
loop
dec
jns
repnz
sbb
inc
imul
jne
or
pop
shrl
ljmp
icebp
dec
decb
and
test
int3
jno
outsl
mov
jno,pn
mov
stos
jno
mov
jmp
js
fisubl
mov
or
lea
popf
xor
out
fs
pusha
pushf
cmpsb
outsl
ds
pop
mov
cmp
in
shrb
and
pop
pop
mov
add
js
mov
xchg
cld
sub
scas
pushf
aas
cld
shl
inc
xchg
mov
mov
mov
add
push
and
aas
icebp
cmpsl
jno
shlb
push
push
pop
push
jne
xor
imul
fwait
iret
scas
jge
xor
dec
xchg
adc
pop
jne
xor
cmp
lret
in
out
cmc
icebp
jmp
push
or
jb
push
lret
mov
mov
pop
sub
je
movsb
sbb
pop
xchg
push
xlat
in
cmpsl
jb
fwait
jmp
nop
mov
pushw
mov
les
cmc
mov
mov
aam
rcrl
sub
jno
mov
mov
das
lcall
mov
adc
aaa
mov
jno
test
mov
pop
out
mov
dec
mov
rcrl
popf
xchg
pop
jge
jg
pop
mov
je
sbb
loope
or
jae
mov
jno
inc
inc
pop
xchg
bound
in
jl
pop
push
jae
jns
xchg
andl
ja
sub
movsb
call
push
inc
ljmp
inc
cmpsl
pop
xchg
adc
lahf
ret
push
rcrl
xor
fs
rep
push
subl
sbb
dec
imul
mov
push
dec
pop
scas
dec
nop
scas
jb
mov
aad
rcrl
call
inc
jb
mov
dec
sbb
cmp
push
jb
mov
repnz
shl
jb
dec
aad
and
mov
jecxz
jnp
sbb
inc
jno
sub
sub
repnz
sbb
cld
bound
mov
mov
and
jne
insb
push
loop
sti
jns
adc
sub
cmp
inc
jns
inc
mov
fisttpl
leave
sbb
repnz
je
sub
cli
xorl
inc
jp
cld
inc
adc
adc
stos
or
xor
gs
cmp
xchg
push
push
mov
ret
in
out
cmp
nop
xchg
pop
jbe
out
sub
xchg
arpl
pop
cltd
xchg
popa
iret
sti
inc
cmpl
dec
rcll
xor
jmp
jno
ds
arpl
ficomps
add
pop
xor
fs
test
inc
jno
dec
je
sbb
jno
fwait
cmp
cltd
scas
xor
and
lcall
repz
push
adc
mov
insl
xor
dec
xor
add
in
jno
stos
xchg
sub
ljmp
mov
and
aad
into
pop
xor
pusha
xchg
fimull
jae
mov
cmp
sub
push
mov
ret
cmp
js
jg
cwtl
movsb
insb
out
rorb
lea
ret
add
into
jae
adcb
fisttpl
test
ds
add
jno
int
repz
pop
mov
insl
iret
and
jnp
insb
je
fnstsw
jno
pop
repnz
stc
stos
ss
popf
sub
into
jae
and
addb
jae
cmp
and
cmp
cmp
ret
lea
mov
push
or
sub
jecxz
pop
lahf
add
mov
fldenv
imull
xchg
daa
sbb
repz
pop
jno
sub
jno
adc
add
fidivl
aaa
mov
push
loop
cmpsl
mov
xor
fidivl
mov
and
or
mov
out
lret
mov
es
jl
lret
jne
fsubl
xchg
lods
jno
in
clc
adc
jae
or
les
arpl
jge
pop
pop
int3
cmpsb
ficoml
xchg
shll
decl
popa
filds
xlat
lea
push
add
das
mov
push
adcl
jge
test
sbb
gs
mov
sbbb
jno
sbb
outsl
jge
repz
push
aaa
jne
xchg
dec
test
test
and
pushf
loop
jne
push
push
mov
jo
test
mov
xor
js
push
xchg
jno
jmp
inc
add
jno
lcall
sbb
cmp
lods
clc
adc
stc
hlt
push
shlb
push
mov
adc
sbb
dec
cmp
jecxz
lods
int
icebp
imulb
xor
jno
pop
pop
sub
mov
mov
jns
inc
stos
hlt
es
imul
popl
dec
daa
jno
hlt
ja
push
ret
push
and
cmpl
inc
lahf
into
jae
mov
int3
lea
fildl
ds
add
jno
out
push
or
pop
and
add
bound
repz
faddl
cwtl
lods
ja
rcrb
mov
lods
call
gs
push
mov
inc
imul
jae
pop
mov
xchg
push
jle
repz
fdivp
sub
jno
movsb
lods
lds
test
jo
pop
js
das
jno
cld
repz
out
mov
imul
cmp
scas
mov
nop
cmpsl
xchg
popf
pop
int
pushf
scas
or
jno
leave
out
mov
stos
pop
jno
insb
inc
sahf
out
add
je
dec
das
test
jle
jno
cmp
cmp
sti
add
cmpsb
ljmp
cmp
push
adc
lods
jbe
xor
in
jge
jle
ret
jg
clc
xor
xor
sahf
mov
sub
andb
shrl
mov
ja
test
inc
inc
movsl
dec
clc
shll
mov
push
dec
jno
ss
adc
pop
xchg
push
test
sub
fbld
fchs
jp
jle
outsl
arpl
jno
add
sbb
testl
mov
data16
cli
ret
lret
movsb
popf
cmp
sahf
mov
jne
adc
inc
xchg
sub
dec
jg
lods
cmc
push
cld
lods
ds
sti
popa
inc
pop
and
dec
sub
sbb
adc
cmp
fs
jno
test
mov
fdivrs
loopne
pop
dec
inc
jno
rorl
lods
xor
aaa
add
repz
int
mov
iret
js
jae
push
xchg
scas
popf
jno
fists
jno
lods
sti
cmp
cmc
bnd
in
mov
sbb
adc
cwtl
inc
jge
fbld
push
jno
ljmp
jno
and
cmp
xlat
mov
ror
mov
fistl
inc
movsb
and
lret
js
outsl
and
lcall
in
dec
lret
pushf
jno
insb
inc
fbld
iret
in
jne
and
mov
pop
les
jno
and
sbb
scas
bound
mov
add
mov
cli
divl
cmp
and
inc
jbe
adc
sub
sbb
stos
push
js
and
mov
jno
inc
out
int3
push
lret
jno
test
and
lods
jp
jno
sti
sbb
sub
and
pop
xorb
stos
pop
gs
add
in
cmc
jno
mov
mov
out
stos
roll
cs
jno
lcall
jno
mov
out
aam
cmp
mov
pusha
push
jmp
cs
jbe
ficoml
lock
insb
dec
dec
loope
xchg
mov
mov
testl
xchg
leave
xor
sub
fs
sbb
jns
lods
lahf
push
mov
adc
mov
mov
inc
jge
jl
jno
cmp
in
xchg
pop
mov
add
xor
fsubrs
adcl
fnsave
sbb
in
push
aam
out
out
xchg
pop
sub
and
or
nop
ficompl
add
and
cmp
jno,pt
pop
mov
sbb
test
jg
clc
xor
mov
in
jbe
loopne
xchg
push
fidivrs
inc
jno
ja,pn
jg
shrl
jo
or
mov
pop
js
and
imul
xchg
insb
dec
push
out
mov
jno
in
in
sub
mov
ret
pop
sbb
mov
sbb
xlat
add
jns
jno
cli
inc
bound
lods
ficoms
jg
inc
shll
lahf
aad
popa
ficoms
xor
pop
jb
cmp
cmp
je
xlat
pop
lea
and
shll
fisttpll
call
pop
xor
jno
outsb
pop
ja
into
dec
jno
push
out
stos
pushf
lea
lcall
psrlq
aad
cmp
fbstp
mov
add
out
and
dec
js
inc
fbld
repnz
mov
cmp
sbb
fidivs
cmp
in
inc
decb
add
dec
dec
pop
and
popf
insl
in
jno
out
or
push
mov
mov
jbe
adc
add
imull
jno
fldenv
xchg
add
out
jmp
mov
out
sbb
cmp
or
mov
jno
pop
fists
mov
repz
sbb
adc
dec
aas
push
or
icebp
shlb
sbb
jl
inc
outsl
jle
jecxz
push
xchg
mov
test
push
frstor
cmpsl
pop
sbb
lods
xchg
adc
sbb
pop
and
add
fucomi
jb
mov
jno
fidivl
mov
mov
fcomps
test
repz
sbb
mov
xchg
es
xchg
insl
xor
insb
xor
jno
cld
dec
inc
addl
mov
jg
jno
lahf
loope
and
fbstp
aaa
lods
adc
bound
insl
movsb
idivl
jno
je
mov
lea
jno
lods
xchg
jb
or
lea
pusha
jnp
push
stos
repnz
aad
xlat
ret
je
cmp
pop
cs
jae
scas
pushl
ret
jmp
test
jno
out
xchg
pop
xchg
mov
mov
sbb
xchg
jmp
inc
test
bnd
jbe
cmp
jge
cld
pop
adc
lcall
repnz
sbb
push
lret
mov
fdivl
lcall
insb
sbb
int3
jmp
addl
rcrl
clc
add
out
ficompl
mov
jae
in
inc
mov
pop
insb
jno
push
scas
cli
adc
push
jmp
and
inc
pop
jg
inc
out
fsubl
aaa
mov
arpl
lds
push
cs
xor
out
or
push
mov
jb
in
add
sbb
dec
lock
movaps
lret
in
pusha
jbe
rclb
xor
xorl
mov
fldcw
jb
loope
ja
dec
push
in
jno
rorl
cmp
stos
repz
lds
push
push
sbb
push
pop
push
xchg
test
cmpsb
dec
js
arpl
outsb
fistl
jb
jb
dec
nop
jnp
pop
add
sbb
rorb
jmp
xlat
out
pop
scas
add
repz
ret
add
jno
inc
into
add
sbbl
jno
push
mov
arpl
jno
jb
mov
jmp
jg
in
mov
jae
dec
lods
cmp
mov
pop
scas
mov
lret
shl
mov
sub
orl
imul
push
jno
stos
xor
xor
shll
sbb
push
inc
dec
aad
adc
faddl
aam
push
push
jb
pop
repnz
lds
mov
cmp
and
cld
mov
out
mov
out
data16
lret
add
icebp
mov
jge
out
push
adc
jno
and
movsl
sub
stos
push
sti
push
jno
faddl
cmp
sbb
sub
mov
jno
lock
cwtl
nop
sti
in
xchg
inc
ret
ds
dec
mov
insb
data16
jno
stc
xchg
or
push
mov
xor
sbb
out
add
xorb
mov
jge
lea
dec
jbe
xor
sarb
jb
mov
sbb
dec
out
cmpl
aaa
pop
sub
dec
nop
in
pop
jns
add
stc
hlt
xor
outsb
dec
jno
push
call
andl
pop
aas
jns
test
jno
xchg
mov
adc
xorl
rorl
popf
or
scas
adc
scas
mov
sbb
iret
je
sub
in
jno
ja
outsb
sbb
mov
mov
pushl
lods
or
popa
pop
inc
ja
insb
addr16
aaa
pop
int3
xchg
push
out
jbe
xchg
mov
push
into
loop
sub
jno
mov
daa
popf
gs
jno
notb
cltd
les
jle
inc
jbe,pt
mov
and
icebp
push
jno
lret
xor
or
test
add
dec
leave
xchg
in
mov
add
lds
fsubrl
dec
lret
incl
add
mov
jno
cltd
push
jbe
out
xor
cli
es
in
push
jo
push
xchg
hlt
push
leave
lods
sbb
addr16
imul
adc
cltd
clc
lea
adc
add
shlb
movsl
push
xchg
loopne
test
cmp
dec
jne
sarb
sbb
cmpsl
je
imul
sub
loopne
jno
push
dec
xorl
jno
in
cwtl
xchg
sub
cld
inc
jno
sti
aas
cld
push
cli
xor
xor
jbe
ja
jno
fisttpll
lar
div
inc
add
jle
into
int
jp
sub
xor
push
cmp
dec
add
jno
inc
xchg
mov
cmpsb
mov
mov
adc
outsl
repz
hlt
and
push
test
jge
in
pop
pop
dec
shll
sahf
lea
mov
arpl
pop
jno
fmuls
pop
mov
push
enter
test
andl
sti
fnsave
mov
lods
popa
xchg
sub
lret
jmp
sub
xchg
test
sub
and
push
ss
rcrb
add
aam
inc
lds
sub
xor
push
mov
sti
fs
jno
call
jno
in
lahf
jg
cs
fnstenv
sub
mov
ljmp
je
sub
stc
movsb
leave
pop
xchg
jae
dec
push
jle
cmp
sbb
jae
outsl
aad
jno
mov
mov
sbb
jno
nop
rcl
lds
pop
dec
jno
ret
pop
out
loop
jns
lret
aas
xor
pop
dec
mov
adc
cltd
addl
pop
je
subb
and
or
lcall
popa
mov
in
push
fidivs
mov
dec
cli
das
fldl
lea
ds
cwtl
repz
fs
fisubrs
jb
sub
jno
push
xchg
idivb
andl
popf
jno
or
add
test
aaa
xor
jbe
into
cmp
jno
enter
ficoml
jno
mov
or
lds
add
mov
popf
negl
jno
mov
mov
sbb
jg
jge
and
repnz
xchg
mov
xchg
lea
test
sub
mov
jno
sbb
mov
sti
stos
cli
add
xchg
jno
loope
scas
xchg
mov
push
jmp
jns
sbb
js
imul
call
mov
mov
push
mov
adc
jl
rorb
mov
js
xchg
push
je
pop
ja
jno
scas
cwtl
dec
sbb
inc
dec
jno
rorl
push
js
mov
imul
jno
cmp
fdivp
cmpsl
xorl
mov
ret
gs
pop
sbb
lods
cwtl
sub
stos
and
push
jne
xor
jno
cmp
in
test
in
in
push
dec
dec
jae
cmp
cli
xlat
cmp
jno
dec
lock
imul
pop
rcrl
lret
pop
push
and
fdivs
pop
mov
mov
loop
je
sbb
xor
loopne
mov
inc
incb
dec
stos
test
inc
jb
lcall
out
cmp
adc
dec
mov
subb
jno
test
insb
addr16
or
xchg
insb
xchg
insl
in
sub
mov
adc
mov
iret
xor
inc
and
loop
popf
sbb
pop
jo
sub
inc
lods
push
sbb
repnz
jecxz
push
jge
add
ljmp
cmc
push
mov
jno
sbbl
jno
xor
xchg
jb
jge
push
adc
cltd
push
mov
out
add
rol
fndisi(8087
xchg
in
lcall
dec
lods
ret
mov
xchg
bound
icebp
insb
jno
dec
xchg
and
popl
push
lea
push
mov
icebp
mov
push
imul
ljmp
inc
sbb
lods
jne
std
je
pop
jno
jmp
xchg
cmp
pushf
test
sbb
mov
maxps
pop
mov
dec
jno
fs
push
add
xorb
fists
jno
xor
mov
sub
jno
cmp
add
cli
fisttps
xor
dec
or
mov
test
mov
testl
and
es
lods
pop
sub
je
pop
pause
inc
push
lods
leave
jne
mov
sub
mov
lea
jno
insl
clc
xchg
jae
jno
pop
data16
xchg
jno
roll
fcoml
lcall
lds
aam
lea
andb
iret
sbb
xor
jno
aam
mov
pop
es
jge
xchg
out
nop
repz
fnsave
add
mov
xchg
outsl
jo
xchg
roll
sbb
adc
cmp
inc
into
mov
mov
pop
adcb
popf
ds
outsb
imul
out
mov
cmpsb
mov
imul
bnd
data16
repz
jmp
jbe
adc
xchg
mov
push
dec
out
testl
xchg
movsb
movsb
das
test
out
stc
je
fldcw
xchg
jno
mov
pop
add
push
pop
stos
sti
and
inc
jno
jp
sub
into
and
je
push
ja
mov
popf
cmp
addl
hlt
fnsetpm(287
scas
or
repnz
out
push
sub
mov
mov
fs
dec
cltd
hlt
adc
inc
leave
xchg
xlat
sbb
stos
push
mov
rclb
dec
insl
mov
cmp
lock
xchg
roll
fidivl
aaa
adc
stos
add
mov
dec
jl
fimull
sub
je
insl
sub
push
jecxz
or
mov
mov
sbb
push
lock
cmp
jb
rolb
fidivl
lds
pop
jno
add
imul
roll
cli
sahf
ljmp
cmp
test
pop
push
mov
mov
sbb
jb
sub
popa
jno
ss
xchg
jge
fwait
sarl
outsl
addr16
fidivrl
and
repnz
enter
cs
movsb
cmp
dec
addr16
pop
rcll
pop
xchg
add
adc
fsubp
fcmovnbe
mov
in
test
add
xor
pop
out
dec
xor
sti
mov
icebp
jae
fcmovu
lea
jno
sbb
bnd
and
cmpsl
je
push
aas
jg
push
jno
sub
loope
jno
iret
mov
pop
loopne
jb
sbb
sub
test
adc
jno
mov
dec
int3
test
je
leave
xor
push
shll
jno
or
dec
xor
jne
clc
xchg
hlt
int
movsb
js
jno
mov
jno
mov
rolb
cmp
js
inc
inc
sub
push
jb
mov
ficompl
xorl
push
push
pop
fwait
push
xchg
jno
inc
into
shrb
lret
bound
mov
mov
adc
xchg
pop
inc
notb
jae
insb
push
stos
jb
int
jno
adc
insl
jno
dec
or
fnstsw
inc
lea
sub
mov
or
test
xchg
jno
testb
lcall
ljmp
mov
cmp
cld
sahf
mov
jae
aam
cs
xor
in
xchg
mov
xchg
shrl
test
jno
pushf
add
in
pop
lahf
jno
call
jle
jno
les
jno
insl
hlt
mov
repz
fs
in
jp
jns
shrl
cmpsl
add
cmp
sbb
rcll
dec
adc
push
cmc
ret
jno
shll
je
and
jae
lret
stos
cld
xchg
jno
fwait
inc
cmp
pop
adc
movsl
pop
push
inc
cmp
mov
cmpsl
mov
dec
iret
je
jb
div
out
sub
mov
mov
shlb
out
scas
and
lret
test
out
mov
je
daa
sub
in
rcl
mov
lods
mov
lods
cmpsb
iret
jb
mov
or
int
sbb
xchg
cld
xor
xor
in
movsb
xchg
push
sbb
in
jle
inc
adc
mov
or
movsl
inc
jb
lea
stos
push
mov
sub
inc
mov
negl
mov
inc
icebp
shll
stos
ja
lea
repnz
jno
repnz
ss
xchg
jge
js
addl
test
pushl
repnz
or
imul
mov
lds
push
in
iret
repnz
cmp
cmp
jno
out
mov
push
or
bound
outsl
add
jno
sbb
dec
rclb
and
jno
mov
cli
ja
mov
rclb
fcomi
xchg
mov
popf
lret
jne
js
xor
pop
fyl2xp1
aad
adc
xchg
jge
in
add
mov
or
out
btr
jne
mov
pop
jno
jnp
push
pop
clc
call
idivl
popf
outsl
mov
sub
cmpsl
sbb
and
ret
leave
es
jae
jbe
xchg
jns
jae
xor
hlt
imul
push
xchg
add
fldl
xchg
xorl
call
mov
bound
decl
jno
xor
fs
jo
je
loopne
outsb
ficoms
or
jno
jbe
test
mov
jmp
push
sbb
fs
lds
mov
dec
jno
pop
js
push
xrelease
lds
ret
adc
xchg
pop
pop
lock
jno
pop
add
ja
cmp
sbb
sti
mov
mov
xchg
pop
pop
jns
sbb
movsb
lea
in
xor
icebp
xor
out
add
popf
adc
sbb
sbb
inc
inc
inc
jno
jbe
or
xchg
xor
jno
lretw
jnp
bound
int
out
hlt
lock
imul
sbb
adc
jnp
in
idivb
int3
adc
je
add
in
gs
out
and
xchg
icebp
pop
in
pushl
inc
clc
testb
mov
mov
jno
inc
cs
push
cmp
flds
stc
jno
and
inc
movsb
mov
sti
movsl
or
cmp
fisttpll
jne
call
in
mov
cmc
pop
out
cmp
xor
insb
cld
jno
fs
fmull
push
outsl
jno
aam
mov
add
jno
scas
add
push
dec
ja
mov
jmp
jno
in
movl
jnp
and
dec
inc
xchg
pop
les
jno
sub
or
mov
popf
and
jnp
cmp
aad
pop
add
js
sahf
xchg
dec
xchg
mov
lods
mov
daa
add
cmp
movsb
xchg
pop
jno
mov
icebp
cmpsb
push
or
add
aad
imul
xchg
mov
addl
shr
xor
imul
jg
loope
mov
dec
adc
adc
ret
arpl
cld
jno
or
subl
jno
inc
loop
int3
shlb
sbb
adc
and
mov
repz
fwait
jecxz
aas
add
loop,pn
or
popf
fidivl
in
sahf
adc
stos
jne
inc
or
test
mov
jle
lods
pop
sar
lods
dec
push
cli
dec
jno
out
pop
mov
jno
push
cmc
iret
xchg
push
add
xchg
inc
ret
and
out
shrb
jl
jno
fidivs
cmpsl
pop
jae
popa
mov
jb
les
jne
adc
mov
mov
dec
or
mov
pushf
inc
ficoml
pop
fimuls
xchg
mulb
xchg
jno
add
jno
inc
or
jb
adc
jge
pop
in
repnz
sub
cmp
int
divl
cmpsl
aas
cmp
xchg
lock
push
test
lods
aam
dec
lea
fistps
xlat
popa
inc
and
sbb
loope
mov
loop
or
cmp
clc
mov
xchg
xor
cmc
aas
mov
test
pushf
jne
lret
add
or
mov
ret
repnz
pop
xor
repz
lds
out
outsb
fists
jno
pop
mov
fsts
fwait
ljmp
into
popf
xchg
enter
dec
jae
jno
pop
xlat
outsb
sub
dec
xor
jno
das
movsb
jge
xchg
cmpsb
pushf
leave
jb
mov
push
pusha
out
jno
fldt
adc
dec
fs
test
pop
jno
and
lahf
mov
xchg
xchg
xchg
ret
or
loope
jae
ror
idivl
jno
dec
cmp
mov
jno
and
pushw
sahf
xchg
jno
icebp
xor
pusha
jno
arpl
push
lea
mov
or
insl
jae
shl
test
jg
cmp
lds
mov
fmul
jg
and
inc
jae
dec
test
gs
jb
in
das
pop
test
mov
loop
add
dec
lods
jno
sbb
jecxz
and
or
dec
cmpb
leave
js
cltd
jno
hlt
push
push
cmpsl
xchg
and
sub
sub
jno
bound
mov
fmulp
xor
fwait
pop
aaa
jne
push
je
xorl
jbe
jb
fsts
pop
aaa
xor
fistpl
adc
adc
xchg
fisubrl
xor
inc
pop
std
addr16
cld
sub
sti
jno
or
in
popf
xchg
mov
dec
sub
jno
lock
int
add
aam
jne
loopne
popf
loope
fmuls
xchg
loope
inc
fidivs
pop
adc
lods
mov
cmp
adc
popf
mov
nop
fidivs
cmp
lahf
xchg
out
mov
sahf
adc
lods
out
pusha
jno
or
loop
adc
xchg
cmp
addr16
sub
pop
ljmp
push
lods
adc
push
xchg
jp
xchg
outsl
pop
ljmp
stos
adc
mov
lea
jl
lods
imul
push
insb
inc
sub
mov
xchg
outsl
ficomps
lods
dec
sbb
sarb
bnd
mov
push
mov
aad
push
fldt
push
je
sbb
jbe
fisubrl
jo
and
jno
fildl
dec
sub
movsb
data16
daa
bnd
mov
stc
lret
or
popf
inc
cld
mov
and
mov
jp
sub
popf
pushf
xor
xor
mov
js
and
scas
xor
popf
sub
pop
pushf
lret
rclb
in
jl
cltd
jns
std
dec
inc
gs
repz
ss
mov
cmpsl
jns
jbe
push
mov
lea
inc
cmp
jb
mov
cld
mov
dec
jno
ror
adc
repnz
out
out
jecxz
arpl
iret
mov
icebp
jae
fs
loope
sub
hlt
adc
clc
xchg
cltd
xchg
cwtl
in
sbb
mov
fistpl
ss
loope
je
mov
mov
adc
dec
and
cmp
sbbb
add
int3
jo
cmpsb
push
andb
adc
and
adc
aaa
pushf
addr16
outsb
jmp
adc
dec
adc
fiaddl
jmp
push
sbb
lea
lock
sbb
jae
lea
jae
sbb
jge
ljmp
mov
lea
inc
divl
cld
mov
jno
mov
iret
pop
movsl
push
adc
adc
adc
dec
and
jecxz
sbb
jno
rorb
and
mov
xchg
pop
repz
xor
xchg
add
insb
dec
int
cmpsb
std
clc
pop
push
outsb
jbe
xchg
pop
jmp
mov
mov
repz
jbe
push
xchg
daa
xor
lret
out
or
or
pop
cld
cmpsb
pop
fcmovu
inc
xchg
jno
test
mov
pushf
pop
sbb
sahf
in
out
sub
sbb
inc
pop
lock
in
out
pushl
lods
sbb
jno
call
jb
push
mov
push
jg
lcallw
add
mov
je
add
push
rol
out
cltd
test
int
dec
fs
stos
jo
in
je
mov
jp
and
stos
cli
inc
rcll
rcrl
mulb
stos
frstpm(287
pop
dec
mov
daa
or
xchg
leave
fsubrl
xor
push
inc
fists
nop
cld
cmova
fs
in
sub
lahf
push
insl
stc
aaa
jae
ljmp
int
lret
pushf
jne
les
pop
push
jo
out
or
jns
xchg
in
ret
hlt
fdivl
and
scas
jl
sti
cmc
ficompl
inc
adc
mov
xor
das
xchg
daa
sarb
sub
mov
repz
sbb
pop
inc
mov
cli
test
or
repnz
ret
inc
das
out
xchg
xor
popf
mov
lahf
dec
jae
xor
xor
xchg
pop
imul
xor
sub
jno
outsb
bound
cltd
jae
jno
xchg
lcall
stos
jno
cwtl
fs
icebp
adc
pop
jg
cmp
xor
lahf
mov
pop
pushf
call
mov
jle
or
insl
jno
xor
adc
in
test
aam
std
and
dec
lods
ljmp
jno
enter
push
jns
xchg
inc
js
je
or
push
out
sub
in
stc
jno
ja
add
jge
push
xor
or
sub
in
addr16
jno
mov
cmovae
lahf
xor
push
sbb
repz
or
scas
outsb
mov
imulb
repz
stos
and
popfw
jno
or
icebp
and
shlb
add
aas
test
add
mov
mov
add
pop
les
jns
cmp
sbb
inc
sub
out
or
lods
stos
jge
das
mov
ss
jno
ja
push
push
jno
out
aas
repnz
pop
loope
xor
jne
dec
lds
rolb
mov
xor
jg
cmpl
or
stos
jo
xchg
out
dec
jno
in
ljmp
popa
rcrb
ja
mov
repnz
icebp
frstor
xor
xorl
jp
add
add
inc
jno
pop
js
nop
or
cmp
loopne
leave
push
stos
addr16
mov
fiadds
jno
add
in
incl
sarb
insl
mov
mov
jno
push
cmp
xchg
adc
pop
mov
ds
fidivl
cmp
sbb
movsb
xchg
insl
pop
sub
scas
jp
cwtl
mov
lahf
pop
adc
xor
adc
jno
cmp
aad
sbb
xchg
stos
mov
pop
jp
push
pop
loope
nop
pop
cmp
repz
hlt
push
jae
lock
data16
loope
and
jo
ja
fwait
int
js
pop
sar
arpl
out
jno
es
in
jno
scas
push
lds
jne
add
and
push
fdivp
jl
test
arpl
lcall
or
cli
xlat
sub
pop
xchg
repnz
push
or
push
je
lea
pop
sbb
and
sub
jbe,pt
ss
enter
addb
mov
and
jge
sbb
mov
fcoms
roll
bnd
jno
mov
lock
fldcw
add
or
inc
insl
enter
cli
xchg
pop
idivb
dec
xor
fadds
lea
mov
popf
mov
sub
cmp
sbb
jne
clc
pop
jno
stc
sti
aas
and
hlt
mov
or
cs
jno
ss
xchg
mov
nop
xorl
in
xor
push
mov
push
inc
jno
fdivr
and
sub
daa
jno
mov
subb
cltd
addr16
mov
in
imul
pop
ljmp
push
jno
call
push
add
icebp
cld
int
fsubs
scas
repnz
imul
scas
fisttps
lret
jae
inc
cmp
sub
sub
push
dec
pop
inc
hlt
test
repz
pop
sti
stos
xor
push
xor
or
jno
fdivl
leave
das
sahf
popa
xor
divb
jb
rcr
jno
mov
int3
in
inc
into
inc
fimull
addl
aad
mov
xchg
push
mov
mov
pop
loopne
pop
mov
bnd
add
clc
adc
jmp
int
je
sahf
popf
lds
fcoms
add
add
enter
or
fidivl
mov
sub
xor
shlb
mov
xor
cmp
sbb
inc
jno
jns
add
sub
ficoml
jae
xor
lds
mov
or
xlat
push
stc
xor
jno
adc
cmpsl
xor
imul
push
test
das
in
insl
jb
push
and
cli
jno
lods
cmp
movsl
nop
addr16
jmp
cmpl
das
ja
xor
mov
jno
cld
mov
repz
outsl
xorl
je
inc
xchg
aam
lds
das
je
mov
dec
pop
shl
xchg
sti
jg
insb
lea
dec
sahf
cmp
or
push
inc
jns
test
jg
stos
jbe
cwtl
xchg
xor
jnp
movsl
jae
shrl
jo
push
bound
mov
cs
or
xchg
pushf
imul
dec
inc
jno
mov
rcrl
jp,pn
arpl
addr16
loopne
push
rcrb
jge
jns
inc
xor
and
jne
xor
mov
jge
outsl
jbe
lret
jle
daa
outsb
dec
xchg
sub
inc
jge
loope
arpl
mov
xor
addb
jno
les
cli
cmp
pop
mov
dec
jno
aas
adc
inc
xlat
mov
mov
and
mov
lahf
data16
test
jne
push
or
repnz
dec
jo
pop
addr16
cmpsl
cmpsb
dec
mov
je
imul
xor
add
jno
jle
xor
aaa
push
inc
mov
push
scas
jno
pushf
mov
xchg
push
insl
or
xor
mov
js
leave
jno
jg
sahf
out
mov
push
stos
mov
lds
insb
mov
sbb
add
ret
jmp
mov
jae
int3
sti
cltd
cmp
jne
xor
mov
pushf
iret
jno
outsl
pop
xchg
imul
dec
ja
cld
pop
sbb
inc
push
mov
fsubl
pushf
lea
xchg
stos
loope
lahf
jae
xor
orl
dec
cmc
or
jno
push
ja
adcl
jno
adc
popf
adc
jno
jns
std
or
inc
xor
inc
jno
sahf
pop
adc
mov
dec
loope
dec
add
jno
dec
int3
fwait
xor
push
xor
lds
adc
xor
jbe
xchg
mov
jb
cmp
lods
movsb
sbb
test
jecxz
je
mov
sub
jno
xchg
adc
push
mov
jno
push
cmc
popf
sbb
jge
rcrl
xor
sarb
nop
mov
in
jl
in
je
pusha
and
adc
aad
push
hlt
adc
mov
jno
mov
jecxz
jno
xchg
jo
cmc
cmp
ficoms
je
push
ffreep
jno
cmp
test
sbb
jno
jp
ljmp
cmp
and
fidivs
push
pop
out
mov
xor
jno
leave
int3
cmpsl
subb
jl
popa
jno
ret
jae
es
jno,pn
mov
cmp
and
jg
loop
jae
mov
rclb
or
js
mov
or
fstpt
push
mov
mov
and
out
xchg
add
jno
jle
cld
mov
cmpsl
sub
lock
jge
adc
shll
inc
imul
push
jns
sbb
pcmpeqw
lods
dec
or
add
jno
fwait
scas
mov
jno
pop
ja
inc
jns
adc
pop
imul
in
ficoml
mov
lret
mov
test
mov
mov
nop
mov
sbbb
in
insl
jae
enter
ljmp
jl
into
sub
out
bound
push
aam
outsl
dec
ljmp
jle
mov
pop
jno
add
andb
lea
icebp
mov
add
das
xor
cltd
push
test
and
ja
pop
push
cmpsb
lods
and
mov
fdivs
lods
out
popf
lret
mov
cltd
add
enter
adc
add
jae
xlat
xor
jno
pop
sti
sbb
jmp
jno
ljmp
jno
subb
lods
jge
loop
je
mov
mov
push
pop
filds
pop
xor
xorb
rcr
push
gs
adc
adc
jno
cltd
push
add
jno
outsb
rorl
mov
jmp
xchg
cmp
push
dec
dec
in
iret
in
lahf
test
jge
mov
push
xor
neg
xor
add
add
sbb
jno
into
mov
stos
jno
es
xor
fnstenv
icebp
mov
xor
int
adc
xorps
fwait
out
leave
clc
cltd
fwait
jno
and
pop
adc
sbb
adc
pop
or
mov
push
mov
scas
mov
popf
andb
pop
cmpb
inc
mov
fstps
push
into
rclb
pop
bound
ss
xchg
and
sbb
sub
shll
fmull
insl
xchg
cmp
insb
sbb
jp
aam
or
mov
repz
sub
ret
or
popf
cli
inc
mov
push
jbe
push
test
and
mov
mov
call
xchg
jno
fbld
clc
jo
lcall
xorb
in
les
jb
inc
rolb
iret
jno
div
mov
dec
nopl
std
jno
push
or
scas
fstpt
jno
in
sti
cltd
cmp
mov
jmp
add
and
out
jno
pop
aad
insl
sbb
add
mov
jno
cmp
jnp
mov
inc
jno
lods
imul
clc
popf
repz
xor
stos
test
les
xchg
or
xchg
jp
sbb
jno
sbb
inc
int3
jecxz
mov
in
inc
jle
push
inc
push
mov
or
dec
add
pushf
jno
push
int3
lods
jo
out
xorl
jnp
sub
pop
xor
in
cmp
cmpsb
add
jno
arpl
dec
pop
adcl
mov
cmp
mov
les
mov
or
pop
add
test
enter
jle
pop
movb
or
dec
dec
push
cmp
inc
dec
push
fwait
jno
das
jle
mov
xchg
push
mov
xor
lods
jg
jle
jno
icebp
mov
push
dec
xor
jno
adc
enter
jno
adc
pusha
push
or
ljmp
or
jle
jne
mov
mov
jno
inc
mov
mov
jno
cmpsb
rcll
xchg
cs
or
out
fs
or
sub
sub
xor
stos
cld
push
jno
data16
mov
cmp
mov
push
mov
fisttpll
aam
jo
into
cmp
int
xchg
negl
sbb
or
into
cwtl
in
xlat
and
xchg
lods
jg
mov
repz
lock
jno
push
inc
loop
inc
push
or
push
lahf
inc
arpl
jnp
dec
std
stos
sub
in
sub
les
xor
xor
sti
mov
dec
imul
and
cltd
dec
xor
xorl
push
jl
jno
and
jmp
jecxz
pop
test
sbb
or
ja,pn
repz
mov
or
adc
sub
jge
add
sbb
xor
xor
outsl
mov
mov
stc
fistps
ja
out
dec
or
pop
jb
dec
pop
jmp
test
push
lock
imul
and
mov
imul
cltd
jecxz
imul
xchg
imul
aas
decb
mov
push
inc
mov
adc
jno
inc
mov
hlt
shrl
ljmp
inc
or
pop
cmp
xor
sbbb
call
test
push
jecxz
aam
sti
cmp
ja
pusha
adc
clc
movb
filds
movsl
xor
lods
in
inc
movsb
lea
pusha
pop
cwtl
ret
sbb
cmp
add
sub
test
jb
xlat
push
nop
inc
hlt
add
push
and
stos
lods
aam
jns
jno
test
xchg
rorl
mov
stos
je
insb
xor
mov
hlt
cs
adc
or
pop
fcmovnu
jge
icebp
mov
mov
fnstenv
push
and
decb
js
lock
lods
dec
or
sub
mov
and
jno
repnz
ljmp
leave
imul
adc
lret
push
inc
sub
pop
xchg
leave
in
ret
jno
dec
fldenv
jno
mov
adc
and
jno
repz
pop
mov
rorl
out
dec
jne
mov
dec
lds
mov
push
dec
lahf
loopne
notl
rcr
jno
mov
out
sbb
cmp
xchg
loopne
nop
ds
lods
jno
jg
mov
int3
jno
mov
outsl
mov
or
jae
dec
mov
fsubrl
lods
pop
into
jb
mov
push
mov
pushf
dec
pop
out
shll
xchg
xchg
pop
pop
sahf
jb
fwait
mov
or
sbb
shlb
mov
push
sbb
push
cmp
call
pop
push
dec
shlb
mov
or
sub
int
cmp
xchg
je
or
jae
or
or
mov
jne
mov
mov
xor
jb
pop
das
cltd
adc
jge
mov
xor
jge
jns
or
xchg
fcomi
je
mov
add
stc
test
jno
sbb
adc
fistpl
dec
jno
jp
mov
dec
xor
jno
cmp
imul
add
sahf
sbb
and
sub
jno
in
xor
jno
mov
and
push
es
dec
jb
xchg
aaa
hlt
lods
jno
add
and
jno
lods
xchg
in
dec
fnstsw
jno
xor
pop
dec
xor
test
mov
repz
xor
icebp
mov
sar
pop
test
scas
aad
jmp
mov
jo
fistpll
in
inc
mov
jno
bnd
vzeroupper
mov
cmp
dec
jae
pop
jno
mov
push
xchg
movntq
push
stc
sub
push
jno
loope
lods
gs
mov
jl
imul
sbb
out
and
mov
fucomp
imul
jno
add
jno
aad
sahf
pop
lahf
fadds
fidivl
jecxz
int
stc
lcall
repz
std
sbb
jno
es
enter
jne
add
mov
loopne
jno
test
jle
stos
xchg
ret
arpl
jno
mov
sub
jbe
jnp
dec
daa
sbb
adc
bound
mov
add
push
jno
ljmp
jno
pop
repz
jb
shlb
mov
sti
iret
cmpsl
mov
movsl
push
xor
jno
jbe
jne
adc
sub
jno
movsl
pop
popf
loopne
jae
jno
fs
inc
dec
imul
repz
fidivrl
jnp
and
movsl
loopne
add
mov
lock
pop
shlb
adc
inc
jno
add
loop
jb
mov
mov
jno
jo
test
aaa
int
scas
mov
push
call
pop
mov
lods
sbb
pop
jno
mov
jnp
shll
imul
push
jl
imul
pop
lea
inc
or
or
lods
test
daa
notl
mov
mov
pop
sbb
inc
out
push
mov
jno
das
lods
pop
gs
and
or
xchg
repz
push
cwtl
mov
mov
adc
ljmp
sarl
add
add
popa
jno
insb
dec
mov
lret
fimuls
in
xchg
cmpl
sub
enter
and
jnp
jecxz
addr16
mov
push
mov
mov
jae
or
jno
dec
aas
cwtl
fs
repnz
lea
push
dec
sarb
mov
xchg
fsub
adc
add
jno
pop
das
inc
pusha
mov
lret
stc
stos
in
fdivr
sub
or
push
out
push
push
in
pop
movsb
pusha
jae
in
push
int3
xchg
sti
imull
psraw
jno
adc
and
in
jmp
and
scas
adc
popa
les
jno
add
mov
in
lahf
dec
cmp
subl
test
negb
lock
mov
aaa
inc
sbb
cmp
jne
mov
cmpsl
inc
in
sbb
imul
fs
sarb
cmp
jge
ds
movl
jae
mov
and
sahf
jbe
mov
jp
jno
jnp
inc
je
out
in
or
cli
jmp
loope
mov
stos
mov
lret
adc
dec
int
cmpl
outsb
popw
add
call
mov
push
jmp
jne
and
aas
stos
adc
cwtl
adc
inc
xlat
push
pop
xor
dec
pop
jnp
cmp
scas
outsl
mov
pop
fcompl
pop
movsb
lods
sub
aas
int
mov
hlt
andl
lahf
push
gs
in
lods
test
cmc
jecxz
lock
mov
adc
imul
hlt
enter
imul
fnstenv
cmc
jno
popl
pop
lods
jne
dec
mov
fmulp
arpl
jno
jl
xchg
add
test
push
xor
push
cmpsb
jne
push
cmpl
jb
adc
lods
pop
sbb
mov
xor
mov
ss
pusha
in
push
mov
lahf
je
dec
and
int
lea
jae
mov
rclb
out
repnz
test
sub
hlt
test
or
je
rcr
inc
sub
xlat
fwait
cltd
push
mov
arpl
mov
jno
jns
cmp
filds
stc
mov
xchg
xor
jno
cmpsb
mov
jmp
pusha
push
rolb
jno
pushf
jmp
fidivl
inc
test
mov
add
sub
popl
jnp
dec
jae
inc
hlt
mov
jno
sub
lahf
sbb
jnp
jbe
mov
lock
pop
stos
sub
jno
xor
rcll
add
adc
sub
cmp
je
out
mov
je
jno
mov
pop
stc
sti
es
jno
mov
addr16
shrl
scas
pop
repz
sbb
loope
pop
xchg
jo
inc
shll
lods
dec
rol
xorl
inc
int
nop
in
jno
test
fstps
jns
test
cwtl
into
jno
cmp
pop
call
sbb
xor
mov
push
in
sbbb
icebp
mov
xor
jno
sbb
push
call
jge
fnstcw
mov
add
and
push
jge
scas
mov
fcomps
daa
mov
or
xor
mov
leave
jno
push
jg
movsl
pop
fiadds
movsl
or
aaa
stos
icebp
mov
cs
testb
es
inc
adc
add
mov
or
jb
int
sbb
lea
popf
lea
mov
cmpb
popf
sub
mov
and
cld
test
jge
cltd
pop
lret
mov
adc
arpl
sbb
mov
shll
cmp
aam
lret
jno
imul
jecxz
adc
test
mov
mov
push
sub
jno
pop
pop
aaa
ficomps
iret
inc
into
sub
sub
adc
mov
ljmp
jnp
jle
jno
stos
rcrl
jmp
jno
fcom
ss
imul
test
insb
adc
mov
je
cmc
cmp
dec
pop
pop
adcl
mov
out
inc
xor
lea
fildll
sub
mov
jg
jno
clc
mov
pop
in
inc
fdivl
je
popf
dec
inc
push
jo
sub
popa
jp
out
iret
pop
lods
and
add
sbb
andb
rcrl
xchg
pop
jno
add
cld
fwait
cmpsl
inc
mov
mov
repnz
les
clc
jge
adc
aaa
lods
jae
ds
out
lea
xor
xlat
sub
mov
fwait
mov
cwtl
sbb
outsb
repnz
insb
pop
xchg
rcr
adc
dec
inc
mov
inc
mov
push
or
movsl
sbb
jmp
aaa
xor
rorb
loope
pop
int
data16
aad
sub
test
mov
push
cli
movsl
stc
jge
mov
push
jbe
and
sbb
push
push
ja
mov
out
cmpsb
sbb
icebp
jb
lods
scas
inc
iret
repnz
loop
or
ret
leave
and
rcll
cmp
fadds
imul
les
imul
mov
jno
sbb
push
push
mov
aas
add
cwtl
fabs
cmpb
lret
lcall
jne
cmp
inc
nop
repnz
push
out
rcrb
mov
mov
pop
in
flds
test
repz
les
data16
cltd
lcall
lahf
lret
xchg
or
mov
ficomps
shll
fdivrs
jno
xor
stos
lret
add
mov
inc
jb
sub
insl
test
inc
jae
xchg
inc
lods
push
jno
push
dec
fidivrl
repz
dec
jno
push
jne
into
push
jnp
test
pop
lods
loope
shr
mov
inc
in
test
jno
lcall
xor
mov
jno
stc
adc
inc
pusha
aad
insl
ljmp
pop
and
sti
jb
add
fiadds
clc
enter
xchg
jno
adc
sbb
mov
addr16
lea
push
or
jl
jp
jno
jbe,pn
and
test
jne
scas
mov
xor
jmp
add
jb
lock
in
cltd
push
xor
sbb
jno
je
pop
push
mov
jle
imul
dec
xor
xlat
iret
or
push
pop
sub
imul
cmp
aad
xor
dec
sub
sub
scas
pop
mov
bound
jno
inc
iret
outsl
adc
rcr
jns
and
ficoml
push
push
movsl
adc
popa
imul
inc
das
mov
ljmp
xchg
sti
in
cld
mov
sub
out
into
insl
xchg
jo
inc
add
and
jno
fs
xchg
xchg
jno
std
add
sbb
ficomps
push
jmp
push
adc
shrl
pop
jge
popf
push
mov
xorb
repz
std
or
stos
pusha
dec
in
sub
scas
test
mov
xchg
sbb
ret
xor
lea
adc
daa
mov
adc
pusha
lea
sub
data16
jno
cmp
push
jno
cld
call
push
pop
jne
and
sub
ds
inc
inc
dec
in
add
test
sbb
loope
pop
test
and
shll
dec
movsb
jae
mov
jge
out
fcom
data16
xlat
xchg
dec
hlt
inc
ja
lcall
hlt
xor
xchg
mov
sbb
jnp
mov
hlt
mov
and
xor
inc
jno
fldt
jb
repz
or
ret
cmpb
insl
cmp
jno
aaa
inc
gs
lods
jno
mov
push
mov
or
test
jno
add
popa
jno
cli
loop
mov
sub
mov
mov
into
push
push
in
sub
aas
cmp
adc
sub
jno
stos
xchg
ljmp
and
cmp
loop
mov
adc
gs
pop
fisttpl
pop
push
jno
aas
mov
push
icebp
add
push
cmpsb
push
xchg
jo
es
jmp
xchg
lcall
mov
push
mov
jb
jb
loop
lods
mov
xor
test
jae
mov
add
das
jle
out
jge
or
test
pop
xchg
mov
xor
sbb
fldt
cmc
cmp
xor
mov
add
hlt
and
mov
lahf
outsb
loopne
mov
pop
fnstenv
push
dec
rcrl
pop
popf
es
adc
jae
test
cltd
add
mov
fimuls
out
xor
mov
cmpsl
cs
leave
jno
and
dec
pop
fsubs
cmpsb
push
xorl
movsb
out
sar
cltd
xchg
adc
test
mov
test
inc
jno
scas
and
add
cli
popf
jns
movl
jb
jno
lds
lea
sarb
aas
or
mov
dec
ljmp
xchg
popa
cmp
pop
mov
mov
stos
cmpsl
add
pop
xor
push
or
xchg
jno
jp
xchg
nop
add
divb
inc
popa
push
push
pop
decl
mov
push
lea
jecxz
jno
cmp
out
xchg
xchg
fidivl
mov
and
jmp
mov
into
pop
repnz
adc
jne
xchg
pushf
dec
xor
shr
jecxz
mov
jno
lea
enter
cld
push
jbe
into
cmpsb
jno
int3
mov
mov
mov
sti
add
fsubl
movsb
mov
aas
jno
push
data16
lcall
pop
iret
inc
dec
jno
sub
push
mov
mov
jno
and
jne
push
test
mov
jo
daa
nop
cmp
and
dec
fwait
jno
sbb
mov
mov
push
or
sahf
jno
mov
roll
dec
sbb
pop
jno
outsb
gs
pop
cmc
xchg
xchg
and
xor
daa
negl
jno
dec
aaa
xorl
jns
add
or
jmp
aad
dec
pop
mov
pop
or
pop
shl
and
inc
push
mov
rolb
cs
sbb
mov
pop
jno
mov
jp
data16
iret
mov
pop
je
aad
jno
jmp
lret
xchg
jno
jl
out
cs
jno
outsb
mov
xchg
jno
jge
push
pop
and
sbb
mov
jno
dec
push
inc
inc
sub
mov
push
popa
sbb
lret
jae
inc
jne
loop
jl
inc
pop
push
xlat
xchg
jno
fdivrp
push
adc
pop
jae
push
pop
outsb
xlat
mov
aad
pop
or
icebp
inc
pop
cmp
aaa
test
clc
call
cld
bnd
and
jb
xchg
mov
hlt
scas
sub
jne
roll
loopne
ss
pop
lods
inc
mov
jg
pusha
sbb
jae
mov
push
inc
sbb
mov
mov
jno
lcall
cmpsb
dec
leave
and
ja
inc
dec
ja
xchg
jg
test
aam
mov
jno
push
addl
jp
jmp
mov
or
lret
mov
mov
push
dec
jno
xor
adc
mov
lods
dec
cmp
scas
push
std
jno
int
clc
jecxz
and
icebp
add
and
or
loop
shll
dec
xlat
scas
daa
inc
cmc
fisubrl
xchg
mov
out
hlt
jb
sbb
jne
lcall
mov
mov
xchg
sti
cli
dec
mov
stos
shlb
push
shrb
jno
or
add
mov
sbb
jae
ret
fdivp
cmpsl
je
mov
test
je
mov
push
jno
fistpll
jno
stos
push
outsl
roll
push
clc
fisubs
icebp
mov
jno
lock
es
add
or
aaa
and
in
mov
fadd
in
jno
sub
jno
add
test
je
xor
mov
mov
jno
js
and
jne
and
les
jno
pop
int3
jne
sbb
sub
shrl
adc
xchg
stc
in
xor
lcall
les
push
hlt
rclb
jae
jno
stos
lods
maskmovq
fnstsw
mov
js
mov
hlt
xor
sbb
jno
dec
mov
scas
loop
mov
mov
popf
adc
mov
jns
imul
je
es
jno
ljmp
cmp
js
jno
lret
pop
jp
mov
add
cli
jno
inc
add
mov
inc
lea
xchg
loopne
je
out
clc
test
icebp
cmp
das
arpl
jno
pop
cld
fwait
in
fstl
sub
add
popf
cmpsb
add
sbb
mov
andl
test
mov
mov
cmp
mov
loopne
lods
lea
add
jnp
ret
xchg
shl
out
ljmp
repz
xor
mov
xchg
or
sbbb
sbb
lahf
call
mov
jge
or
in
fldt
jb
xchg
je
push
fidivl
cmp
hlt
jno
pop
inc
popa
add
pop
jno
fistpll
fdivrs
lods
dec
and
inc
cmc
push
movsl
xchg
std
xor
je
sub
leave
sub
divl
sarb
jnp
sub
jno
sbb
leave
bound
dec
xchg
std
clc
je
aam
adc
xchg
adc
jno
ljmp
outsb
xchg
adc
leave
test
sbb
or
xchg
sbb
push
jno
jo
pop
push
dec
adc
idiv
popf
icebp
mov
xlat
in
idivb
jno
add
neg
adc
jno
test
adc
xchg
sbb
out
dec
fists
ds
ret
jge
or
push
jne
or
or
repz
stos
push
jmp
fsubrl
xchg
rcrb
mov
dec
movsb
dec
mov
mov
xchg
push
push
xchg
dec
mov
orl
je
rorl
jge
add
mov
pop
popf
adc
insb
js
xchg
and
iret
jge
mov
push
test
into
repz
aam
hlt
decl
pop
xchg
pop
hlt
lret
jno
xchg
inc
out
jg
jno
xchg
rcl
sahf
scas
lret
fs
jb,pn
dec
mov
std
in
jmp
cmp
lods
jno
lods
xor
mov
adc
and
in
and
leave
xor
in
pop
dec
jno
addl
push
or
cmpsb
gs
mov
pop
out
mov
or
jno
mov
fiaddl
imul
cld
push
mov
ljmp
or
stos
adc
xor
push
cmpb
xchg
jmp
pop
xlat
test
repnz
rclb
jae
or
scas
out
shll
test
mov
mov
cmc
jno
jns
adc
lods
sub
pop
push
add
shll
jno
sub
into
sub
xchg
jno
daa
mov
mov
sbb
and
jno
jnp
insb
cmp
mov
mov
sub
or
jno
iret
and
sti
cmpsb
divl
cmp
je
outsl
jb
in
sbbl
daa
xchg
jno
shll
cmp
rcrb
andl
shlb
mov
add
inc
mov
mov
out
jmp
sub
lea
inc
mov
jno
repnz
rol
jne
orl
mov
mov
cmp
loop
jmp
rclb
xchg
jo
les
push
gs
js
pop
mov
aaa
test
fwait
sbb
jno
cs
push
xor
scas
repz
rcl
and
insl
xor
sbb
push
add
xor
test
repnz
std
mov
push
addr16
stos
fsubrs
mov
repz
push
notb
je
jno,pt
cld
inc
stos
or
xor
xchg
jg
cmpsb
ss
sbb
sar
test
mov
xchg
jno
xchg
sti
jge
into
stos
jge
stos
out
clc
insl
and
xor
xchg
lds
pop
push
ret
jae
and
imulb
jno
insl
lock
cmp
xor
xor
sbb
sar
jno
or
shrb
pop
cmp
jae
sbbb
cld
mov
repz
push
call
sub
add
sbb
push
sub
dec
inc
jno
fimull
add
test
imul
and
movsl
popa
cmp
int3
mov
push
imul
gs
in
push
shll
mov
xor
pop
xor
shr
gs
stos
dec
or
imul
dec
scas
and
xor
dec
jno
outsl
or
subl
das
sub
add
and
out
je
pushf
movsl
jge
xchg
out
outsb
push
pop
pop
pushl
inc
add
nop
rcrb
push
xchg
jno
and
sub
pop
les
mov
int3
jno
movsb
popf
stc
and
js
sbb
and
popa
lock
das
in
inc
add
movsb
inc
xor
sbb
mov
cmp
adc
rcrb
rcrl
scas
or
or
push
aaa
lea
gs
cmp
dec
test
inc
mov
ss
mov
fsubr
push
subl
cmp
jecxz
jno
pop
popa
sub
adc
push
test
lea
or
push
fs
jno
mov
fldt
xor
test
repz
cwtl
outsl
add
lods
dec
sahf
jnp
jno
es
pop
mov
mov
jl
mov
jne
mov
leave
mov
jge
int3
dec
push
lret
fmul
jecxz
dec
popa
gs
adc
lods
test
pop
cmp
roll
sub
sub
fidivrs
sahf
inc
jno
add
aad
mov
mov
dec
mov
push
push
jno
scas
in
push
mov
push
push
jno
xchg
inc
iret
imul
xchg
jmp
cmp
outsb
in
call
jle
ja,pn
dec
inc
nop
xorb
js
pop
or
pop
and
repnz
mov
es
incb
mov
hlt
push
fidivs
gs
pop
pop
jle
sbb
jno
les
leave
jno
sbb
cld
jno
mov
adc
enter
loop
inc
std
sbb
lock
jno
into
sub
leave
sub
mov
out
or
jno
xchg
xchg
rol
pop
lcall
movsb
sbb
lea
fildl
push
dec
jno
aas
xor
sub
scas
jno
mov
sbb
fmuls
or
add
out
loop
mov
shrl
jno
aas
dec
out
xor
mov
add
xchg
jae
ljmp
or
loope
cltd
loope
pushf
into
je
stos
arpl
sbb
das
andl
hlt
dec
int3
bnd
push
jns
std
in
xor
dec
jno
pop
ss
out
shrb
adc
lods
pop
xor
jae
inc
inc
sbb
pop
push
jne
lret
push
pop
sarb
and
stc
cld
jne
mov
mov
push
repnz
out
xor
jno
or
mov
sub
loop
xorl
arpl
xor
ss
jp
xchg
pop
mov
mov
int3
sahf
insb
jecxz
popf
hlt
out
jno
or
mov
jno
push
shl
mov
fidivs
cmc
shrb
jno
inc
push
jp
jmp
cmp
xorl
jno
dec
in
inc
enter
jno
inc
xor
sub
adc
decb
mov
xor
ss
inc
shlb
iret
inc
or
nop
and
jno
xchg
xchg
adcb
jae,pn
xor
addl
jae
jno
xchg
loope
fidivs
imulb
xchg
imul
jae
dec
jnp
cmp
clc
xchg
push
cmp
nop
notb
in
jge
xchg
lods
fnstenv
pusha
inc
les
mov
mov
in
dec
ja,pn
sub
jno
lods
mov
jp
shr
leave
sbb
fbld
push
jp
mov
mov
or
or
icebp
outsb
arpl
insb
dec
push
loopne
mov
shlb
sahf
dec
inc
mov
jnp
xlat
pop
mov
push
pop
add
dec
js
add
or
cltd
das
lods
inc
or
jno
enter
sbb
repz
push
out
outsb
scas
inc
jno
mov
into
cmpsb
mov
pop
or
movsl
xchg
repz
dec
sarb
mull
in
pop
iret
ja
add
sub
sahf
clc
icebp
sar
fcomi
jno
xchg
or
dec
lret
mov
jno
jb
pop
xor
push
sbb
stc
fcompl
jne
in
lods
jmp
aad
cmc
test
leave
xor
dec
sbb
jbe
pop
push
inc
push
pop
jge
ja
and
loopne
aam
adc
jno
xchg
aam
dec
pusha
push
adc
ds
and
cmp
fucomi
icebp
je
sub
push
in
filds
jae
sti
shr
ss
push
or
in
jae
xor
mov
jge
cmp
pop
xchg
jno
cs
mov
outsb
roll
pop
inc
sub
imul
xchg
cmp
mov
es
xor
lock
ret
sub
jmp
jne
xchg
gs
jge
iret
rcr
repnz
sub
les
sbb
dec
in
pop
inc
repz
out
sub
jno
cmc
inc
pop
or
mov
bound
sbb
mov
icebp
rcl
inc
orb
inc
dec
or
loopne
pop
ljmp
xchg
repnz
xchg
mov
mov
int
movsl
lcall
add
jno
or
lea
jbe
js
jle
daa
inc
and
out
mov
les
dec
and
jno
sub
mov
data16
and
testl
sbb
icebp
xor
push
dec
cmpsb
jge
cwtl
test
nop
jbe
cmp
inc
jno
or
loope
jno
popf
pusha
cmp
sub
xchg
cmpsl
jge
stc
shl
jno
xchg
inc
xchg
mov
inc
pop
loopne
loop
in
repz
xchg
jge
data16
pop
movsb
push
jp
jbe
aam
jno
gs
mov
sub
lahf
mov
xorb
sbb
pushf
mull
mulb
sub
shll
sbb
test
xchg
orl
sbb
bnd
or
jnp
popf
mov
outsl
jno
mov
cwtl
imull
adcb
dec
ret
jg
cmpsl
aad
test
inc
xor
xchg
jno
xor
lds
xchg
cmp
xlat
repz
jns
and
jbe
mov
rcrl
jecxz
mov
jns
jmp
mov
dec
dec
pop
icebp
dec
in
out
push
and
push
pop
push
fs
cmp
or
in
inc
popf
jns
out
into
jae
dec
pop
fwait
sbb
les
int3
fdivs
jno
leave
cltd
xchg
adc
and
sbb
add
push
ljmp
jne
insl
sbb
movsl
add
xchg
xor
adc
jge
xor
mov
imul
in
out
push
push
pop
insb
xchg
xor
inc
fst
mov
sbb
xchg
shlb
jp
add
out
xchg
lds
pop
push
pop
in
jl
adc
jl
cli
push
mov
xchg
loop
mov
add
jno
mov
jb
adc
ja
popf
pop
jg
push
and
mov
mov
enter
sub
mov
inc
dec
out
dec
daa
add
and
xchg
imul
into
xchg
rcll
lock
mov
add
jno
scas
popf
adc
pop
test
aad
pusha
xchg
pop
hlt
jno
mov
imul
sub
adc
pop
dec
sbb
sbb
jae
sarl
inc
aam
push
les
roll
in
mov
out
adc
divl
jg
jno
jo
lcall
je
lds
inc
or
test
mov
hlt
inc
pop
rolb
in
push
sbb
jno
or
mov
fidivrl
push
mov
insb
mov
pusha
xchg
sub
sahf
push
xor
leave
push
outsb
push
jno
movsb
or
cltd
jl
jae
xor
push
jno
xor
xchg
and
movsl
stc
icebp
pop
mov
int3
std
mov
arpl
sub
out
adc
popa
jno
or
mov
and
int
cmp
sbbl
lea
aad
xor
cmpsl
xchg
js,pn
outsb
and
icebp
pop
ror
mov
das
xchg
out
xchg
dec
xchg
mov
add
jno
cmp
jne
jp
mov
xor
push
int
bound
mov
ret
jns
adc
cs
dec
add
xor
test
jge
inc
push
aam
aaa
and
push
jno
or
jbe
fs
roll
shlb
xchg
mov
pop
jnp
leave
idivb
in
stos
jno
and
test
jno
add
jmp
lcall
jno
imul
mov
int
lea
jno
out
sbb
pop
adcb
mov
jge
xchg
lods
jmp
hlt
hlt
and
jno
call
cmp
and
sbb
push
insb
mov
pop
aas
cmpl
jno
pop
stc
stos
ja
jns
movsl
mov
lret
cmp
add
inc
out
push
mov
into
cmp
push
jecxz
jno
adc
mov
cmpb
outsl
adc
inc
mov
in
cmp
fwait
sbb
fcoml
xor
pop
push
incl
jno
xchg
into
lods
je
dec
lea
xor
lret
add
pusha
mov
cmp
jno
pinsrw
ja
jno
cltd
cmp
push
inc
add
xchg
out
jl
jno
lcall
sahf
fdivs
inc
jbe
xor
popa
xchg
out
in
rcrb
mov
nop
push
ja
mov
rcl
jg
mov
jno
stos
inc
ror
push
sub
jno
leave
bound
ljmp
repnz
sub
js
sub
or
out
mov
je
or
out
hlt
sub
cmp
shll
mov
mov
js
push
cmp
sti
jno
xor
sub
jne
jno
add
dec
divw
mov
and
loope
ss
popa
inc
jno
xchg
cmpsl
test
sbb
popf
orb
repz
dec
xor
cvtps2pd
lock
pushf
cwtl
hlt
arpl
mov
cmp
pop
and
xchg
je
push
add
fdivs
pop
mov
push
mov
in
jp
std
jne
cmpsl
mov
mov
popa
stos
shll
pop
sbb
jle
mov
rcl
xchg
enter
stc
xlat
jmp
aam
sub
pop
dec
jge
mov
jae
mov
add
xor
adc
repz
push
pop
fidivs
dec
into
jp
adc
cmp
insl
lea
xor
push
hlt
push
test
fldl
mov
pop
xchg
push
test
push
popa
lock
cmpsl
jno
pop
adc
loop
js
repz
shrb
jno
mov
pop
fldcw
mov
aam
scas
push
jno
mov
jmp
movsb
sahf
mov
orb
push
stc
lea
jno
fwait
aad
out
addr16
jl
xor
mov
ret
jno
add
push
call
jo
mov
sbb
lods
repz
stos
outsl
jae
cmpsb
xor
lcall
hlt
outsb
dec
dec
xchg
and
mov
jno
xchg
rcrb
iret
dec
lcall
mov
xorb
push
call
jne
pop
shr
inc
jno
fldl
add
and
iret
lahf
fdivrl
insl
aas
mov
xor
popa
test
aaa
and
enter
xor
sahf
imul
aam
or
out
shll
loop
and
gs
xchg
mov
jno
fidivrs
out
scas
xchg
push
leave
arpl
int3
jb
aaa
mov
std
mov
xchg
dec
notl
iret
aas
jno
xchg
repz
test
hlt
cli
push
leave
cmpl
inc
mov
sub
aad
ja
int
ljmp
daa
or
jge
fxch
imul
call
cmp
das
jns
ljmp
mov
mov
cmp
and
mov
movsl
mov
jno
dec
jle
cltd
inc
out
jno
sub
mov
push
adc
cld
sbb
mov
and
adc
ds
in
fidivl
cmp
jno
xlat
mov
jge
jne
jbe
and
jg
add
ds
les
jno
imul
add
jno
mov
rclb
dec
inc
jno
cmpsb
loopne
insb
add
dec
inc
ljmp
xchg
mov
jno
xor
mov
rclb
call
xchg
mov
ss
in
xchg
push
shlb
lds
mov
cmp
cmpsb
nop
aam
dec
sub
inc
dec
push
je
pop
push
lea
sub
cwtl
xor
xchg
ja
jno
sub
push
insl
inc
or
jno
mov
shll
add
jno
data16
in
pusha
jno
or
xchg
sbb
ret
iret
push
cltd
stc
jmp
adcl
sub
jne
pop
jnp
pop
shrl
mov
and
popa
mov
or
mov
arpl
sbb
cltd
or
outsl
pop
mov
jno
dec
cmp
pop
sub
add
cltd
int
out
jae
jno
pusha
xor
mov
lock
jno
loop
rorl
mov
jno
mov
shl
push
add
and
dec
hlt
adc
jnp
iret
xor
movsl
les
fs
fldt
push
loope
loop
pop
pop
incl
mov
adc
jno
or
repnz
loope
jno
inc
pushf
inc
call
mov
push
shll
fcomps
jbe
jno
ja
sbb
lods
in
out
faddl
xchg
or
cmp
lea
pop
test
dec
jno
fucomip
mov
fldenv
jmp
mov
pop
loope
mov
mov
push
leave
cli
stc
jmp
jno
test
loopne
adc
xchg
jae
cld
int
and
aas
cld
mov
mov
sub
inc
jno
or
jl
or
test
pop
xchg
or
pop
lea
icebp
aas
jbe
lea
xchg
movsl
adc
sub
imul
push
lea
loope
sbb
jno
jnp
push
clc
cs
mov
fidivl
push
or
lea
mov
fsts
jno
jns
inc
push
loopne
sahf
jno
inc
push
sub
rolb
jno
jo
mov
mov
mov
data16
dec
in
leave
iret
aam
pop
or
out
outsl
mul
mov
push
divb
rcll
aam
cmp
push
std
outsb
loope
push
jno
push
les
mov
cmc
ficoms
jmp
loop
pusha
jae
cld
xlat
sub
mov
psubsw
mov
sbb
das
mov
xor
ret
mov
xor
ja
test
mov
jns
cwtl
jno
and
or
jge
hlt
push
jno
pop
fnsave
jbe
jno
push
jle
jno
subl
sbb
sahf
inc
outsb
lahf
popf
adc
out
and
add
scas
jno
sbb
insb
inc
jmp
jecxz
mov
xor
std
pop
arpl
add
ficoml
enter
inc
aaa
jno
mov
jno
mov
pop
dec
les
aaa
jae
repnz
jmp
push
dec
shlb
pushf
and
and
cli
inc
leave
sti
mov
out
jns
push
or
js
bound
inc
cmp
push
push
jno
shl
push
fnstsw
dec
sub
enter
jnp
jno
jp
lret
ficompl
jg
push
push
xor
xlat
aaa
jg
add
lcall
or
in
gs
lods
pop
movsb
enter
mov
cmp
sbb
lea
pop
ret
divb
ja
lret
adc
adc
jne
sub
hlt
pop
jl
push
jmp
movsb
xor
inc
xchg
lods
jne
in
insl
push
and
sbb
pop
adc
ss
flds
test
sub
aaa
sbb
mov
outsb
addl
jno
mov
test
icebp
jmp
repnz
stc
aaa
adc
jo
push
sbb
cmp
jge
xchg
jno
sub
jo
jge
and
lock
inc
shrl
inc
mov
in
xor
push
mov
mov
push
stc
jno
lock
enter
scas
je
loop
std
jl
fnstenv
jae
dec
sub
repnz
icebp
out
mov
pop
jle
jae
and
fnsave
mov
ret
dec
je
xor
imul
lods
setbe
in
push
pop
adc
scas
imul
jno
mov
adc
ss
mov
jmp
cmc
jno
loopne
pop
jne
mov
jno
mov
mov
jl
in
push
cmpsl
testb
jno
or
mov
dec
jmp
ret
repz
or
mov
jo
jno
aam
enter
lock
mov
sub
sub
repnz
pop
mov
es
xorl
pop
jno
xchg
add
mov
sub
xor
repnz
inc
cmpsl
mov
jmp
orl
jno
mov
pop
mov
and
aam
dec
repnz
and
fnsave
jns
cmpsb
cmc
fidivrl
push
jmp
and
dec
adc
mov
xor
add
addr16
pop
xorb
out
mov
jno
mov
pusha
mov
insb
pop
jno
cmc
js
inc
or
sub
mov
sti
adc
xchg
outsl
jnp
test
jae
adc
cmpsb
enter
jno
insl
inc
xor
push
xor
or
loope
pop
bound
jno
fcom
add
mov
push
push
mov
hlt
stos
lea
mov
push
jno
sbb
jno
jmp
repz
jp
call
xor
sbb
ss
inc
jle
inc
lahf
adc
push
cmp
fstpl
imul
cld
lds
sub
push
pop
gs
lock
or
lea
add
out
fs
insl
cld
aam
inc
cwtl
je
pusha
sub
mov
out
fwait
adc
cmp
arpl
jle
push
inc
xorb
sbb
lea
rorb
cmp
adc
pop
jno
mov
in
add
lahf
sub
out
addr16
nop
push
js
jae
sbb
loop
jae
iret
int3
inc
mov
in
and
xchg
pop
pop
dec
movsl
dec
jnp
psadbw
adc
repz
lahf
push
push
cmp
jg
sbb
jae
xor
pop
xor
mov
push
adc
add
jno
push
dec
lcall
stos
int3
and
orb
lea
ljmp
jmp
enter
xor
mov
ficoms
jns
test
pushl
cmp
sub
popa
jb
ss
adc
loop
fistps
jmp
add
lds
pop
stos
pushf
clc
xor
jge
mov
pop
sub
cli
mov
mov
cmp
cmc
les
jo
inc
ret
out
pop
inc
cmp
xor
jno
push
jp
ds
sahf
js
push
sbb
pop
pop
in
int
mov
jno
sub
sbb
lea
popa
repz
inc
scas
pop
xor
add
out
test
les
cmp
push
jne
std
cmp
inc
into
mov
in
cmp
xor
sbb
daa
cmc
mov
clc
jecxz
and
jmp
adc
aam
iret
addr16
sub
cmp
jno
dec
or
iret
push
ja
repnz
sbb
lea
ficompl
adc
out
pusha
cmp
jno
add
daa
push
jno
add
lds
mov
leave
insl
in
jge
decl
push
jne
test
jns
imul
inc
scas
mov
mov
mov
jne
bsr
or
mov
in
push
addr16
fisttpll
mov
in
pop
lcall
aam
popf
adc
mov
jae
lahf
lock
js
xor
dec
push
inc
aad
xchg
pop
xor
addl
inc
or
or
aad
adc
jnp
add
jno
dec
out
push
jno
mov
xchg
inc
push
or
aad
movsl
jno
lcall
orl
push
sbb
outsl
xlat
out
mov
pop
jg
jno
stc
out
dec
inc
data16
xchg
fnstenv
mov
push
stos
hlt
in
or
jno
add
xchg
dec
andb
sar
sbb
xor
xorl
lods
enter
test
xchg
mov
in
mov
pop
jno
sbb
mov
mov
fcmovu
arpl
jae
imul
inc
jno
pop
aad
out
cmp
jno
xchg
cmpsl
mov
shrb
jecxz
sar
fcompl
sbb
mov
xchg
xor
cmp
fnstsw
inc
out
sbb
jno
popa
testb
outsb
dec
jno
daa
or
adc
cmp
orb
les
mov
push
cs
sti
shll
jmp
stos
rorb
shll
out
dec
mov
int
les
jbe
cld
pusha
jb
je
jge,pn
popa
call
sub
add
aaa
inc
mov
cmpsl
out
hlt
xchg
mov
push
jno
cmpb
es
stos
inc
sarb
dec
jmp
fiadds
jno
outsb
cmp
ret
inc
daa
sub
jo
jno
out
mov
inc
jl
jae
cmp
fs
int3
in
aad
dec
testl
loope
loopne
jb
mov
dec
and
push
lahf
daa
push
nop
fadd
insl
pop
arpl
xlat
mov
jno
test
xchg
in
or
jnp
mov
aad
jmp
or
pop
popf
jge
inc
push
out
cltd
push
sub
das
dec
andb
sub
jb
mov
out
in
sub
addr16
out
cld
push
jb
bound
jge
pop
add
push
shlb
push
in
adc
subb
jb
cmpb
xor
xchg
xchg
shlb
push
and
lods
sbb
jb
imul
mov
adc
mov
out
pop
movsb
daa
mov
and
cmp
lret
xchg
jae
arpl
sub
push
pop
xchg
add
mov
push
inc
jno
mov
leave
jnp
dec
jno
scas
mov
cmp
pop
lret
in
adc
aas
in
xchg
je
dec
outsb
je
pop
mov
in
add
mov
or
xlat
mov
aad
jno
shlb
adc
jne
out
sbb
mov
lea
clc
bound
xchg
or
xlat
popf
xchg
test
out
lret
mov
inc
dec
sbb
ret
push
repnz
leave
xchg
js
sub
popf
jae
jmp
loopne
shll
xchg
cltd
or
adc
sub
int3
xchg
jge
in
pop
jge
cli
aas
lock
inc
repz
test
or
mov
inc
jb
pop
push
jno
imul
shll
dec
sub
loopne
hlt
and
jno
mov
jbe
subb
or
scas
sbb
sahf
aas
scas
and
push
cli
adc
pusha
inc
xor
in
fisttps
mov
pushf
and
ljmp
mov
arpl
lcall
jno
frstor
xchg
xor
mov
pop
mov
mov
xchg
addl
mov
jle
inc
imul
or
push
jecxz
shlb
jno
js
add
mov
or
push
cmp
mov
xchg
adc
fbld
das
jno
xor
mov
mov
adc
inc
or
inc
ret
rclb
in
add
jbe
inc
mov
push
xlat
jne
pop
lret
sbb
push
add
hlt
mov
xor
push
in
jno
and
icebp
inc
dec
loope
push
ds
jecxz
fldenv
jns
test
aas
cmp
je
or
jno
or
aam
lds
mov
xorb
and
fs
imul
ret
fstps
cmp
fstpl
outsl
xchg
and
inc
cmp
jno
ret
xchg
xchg
or
hlt
imul
and
out
fnstenv
cmp
sbb
popf
mov
out
pop
jns
sarb
or
xchg
xor
repnz
mov
inc
push
fisttpll
je
es
add
jno
shrl
shlb
cmovnp
movsb
repnz
into
jno
hlt
movb
ficoml
dec
sahf
lods
jns
hlt
xor
or
push
jbe
fsts
andl
mov
pop
xor
rorl
jp
shlb
jae
popa
jno
mov
jno
daa
sub
xchg
jno
movapd
inc
adc
fistpl
jno
cmp
popf
lret
mov
xchg
or
cli
arpl
mov
pop
sahf
dec
or
jno
dec
pushf
popf
shrl
ret
and
lcall
dec
jno
sbbl
jno
ja
jmp
mov
and
test
lret
and
jno
jbe
pop
inc
pusha
jge
fs
push
xor
pop
gs
sbb
dec
jno
jns
imul
lea
push
mov
movsb
sahf
xchg
hlt
jno
mov
mov
dec
adc
adc
jno
leave
fstl
aad
cmp
sbb
jne
mov
mov
ror
jge
fsubl
mov
and
test
test
jle
xor
cmc
adc
jno
fisttpll
call
and
ss
push
lods
inc
and
jge
jl
scas
xchg
jno
add
hlt
jl
jne
loop
cwtl
jae
out
sbb
inc
mov
jno
cmpsl
daa
cmp
in
stos
test
insl
xchg
push
fnstsw
dec
sbb
ljmp
cmp
in
in
sub
idivl
cld
jno
or
dec
in
adc
jae
pop
mov
push
pop
jno
jl
pop
mov
pop
lret
mov
push
out
or
or
je
lea
bswap
cmp
dec
inc
ret
outsb
repnz
jno
xlat
out
jnp
jb
push
xchg
jae
push
mov
jno
or
icebp
lock
ret
jno
xchg
mov
cmp
imul
inc
xchg
bound
jae
mov
iret
bound
or
sbb
in
dec
lods
adc
mov
rcll
xchg
xchg
daa
scas
out
cmp
les
xor
ret
jge
mov
out
xor
lcall
pop
popf
mov
pop
pop
in
hlt
test
pop
jno
xor
pop
jp
jne
das
mov
xor
inc
jno
arpl
js
mov
inc
sbb
and
loope
pop
jno
jle
mov
ja,pn
adc
mov
jb
hlt
sub
mov
xchg
xor
push
adc
int
jb
jmp
arpl
jns
lds
repnz
pop
xchg
inc
cmpsb
inc
mov
sbb
pop
mov
ds
sub
push
nop
rolb
daa
mov
or
jne
cmpl
add
xor
mov
inc
mov
imul
mov
inc
les
dec
pop
fwait
lods
jne
cmp
fadd
mov
leave
xor
and
jnp
shll
mov
sbb
loope
mov
xor
imul
int
shrl
pop
add
mov
inc
pop
dec
imul
jno
mov
lds
xchg
outsl
mov
test
stc
loope
sub
jnp
daa
sbb
ret
xchg
push
push
mov
scas
in
lahf
or
inc
loope
fildll
leave
cmp
sbb
in
mov
jno
frstor
inc
pop
adcb
dec
insl
into
jbe
xchg
clc
push
sar
imul
sub
sbb
popa
je
lea
ficoms
aam
jno
xor
jno,pt
pop
mov
test
jno
adc
or
sub
rcl
jno
push
out
push
roll
jno
into
jecxz
jl
movsb
jb
and
xchg
pop
jne
jns
mov
stos
jno
test
adc
loope
jp
popf
mov
or
lea
aaa
inc
mov
lods
scas
cmpl
sub
cvtps2pd
push
test
mov
fcmovb
inc
nop
jae
ss
push
pop
test
sti
adc
mov
mov
out
jns
fdivl
imul
in
movsb
inc
cmp
test
pusha
mov
mov
push
cmp
add
and
pop
jno
cmp
jno
xor
fimuls
fsub
cltd
mov
and
and
adc
rcrl
jno
inc
jge
add
into
mov
sub
or
aad
or
xlat
mov
pop
pop
jge
outsb
lcall
out
xchg
jae
jo
bswap
pop
jno
scas
lods
and
hlt
xor
mov
testb
in
push
push
adc
repz
xchg
and
jne
cmpsl
ret
xchg
cmp
cld
pop
adc
or
jae
mov
sub
jno
cmp
mov
xchg
mov
dec
mov
jo
sbb
mov
xor
mov
dec
xor
xor
cli
jge
imul
rolb
mov
adc
sub
arpl
pop
jae
jno
push
aas
mov
cmc
ret
gs
in
mov
iret
adc
fucomip
jno
inc
repz
fiaddl
test
jno
xchg
aam
sti
inc
jg
jno
addr16
inc
adc
mov
and
mov
shll
scas
cmp
jno
outsb
cmp
and
popa
jno
push
fsubl
pop
xorb
pop
loopne
call
mov
sbb
dec
xchg
xchg
insl
out
or
lods
movb
lret
sbb
cwtl
mov
and
js
lea
fwait
pusha
mov
jg
daa
fldt
bound
mov
lcall
gs
or
push
leave
enter
pop
lods
lods
xlat
lahf
fisubrs
xchg
adc
inc
dec
movsl
hlt
jns
stos
insb
push
push
jo
repnz
push
cmc
jno
leave
test
mov
lcall
rol
pop
jno
mov
test
xchg
add
xchg
inc
cmc
sbb
jge
push
push
outsb
sbb
xor
pop
cmp
js
jne
add
test
adc
or
jno
xchg
popf
jae
insl
mov
cmpb
sbb
push
jb
sub
mov
sub
scas
out
and
aas
aaa
mov
faddl
repz
in
xor
pusha
xor
cwtl
mov
sub
or
add
jno
imul
or
addr16
hlt
add
aaa
subb
jb
sbb
icebp
pop
mov
mov
in
negl
sub
cs
mov
aaa
int
xchg
jle
mov
or
aad
fsubrs
sub
jno
jl
stc
fbstp
add
mov
sub
ret
mov
cmp
roll
daa
jno
loopne
jo
mov
jno
or
mov
sub
and
jns
jno
lret
mov
cmp
jge
jno
popf
mov
out
je
jno
dec
mov
mov
popf
jae
add
addr16
lea
pop
jae
push
sbb
cmp
shlb
out
jae
fidivl
push
fcoms
jno
popf
aam
or
hlt
jno
mov
dec
pop
enter
popa
jns
pusha
fstps
or
mov
into
repnz
jno
js
mov
ljmp
push
pushf
repnz
fmull
and
jne
mov
xchg
jno
adc
jns
popf
repz
xor
add
fnstenv
iret
xlat
xchg
jne
push
pop
jge
adc
adc
xchg
data16
hlt
pop
sbb
pop
jno
add
mov
xor
int
mov
jnp
sbb
fldcw
or
mov
in
cmp
in
pop
xchg
inc
mov
rcll
leave
sti
jb
pop
shll
and
push
arpl
movsb
cmpsb
jno
gs
scas
dec
and
push
jo
xor
push
jno
xchg
ss
repz
repnz
cmp
xorb
std
fidivrs
dec
and
jno
addr16
lods
push
adc
jno
and
insl
mov
std
jno
shlb
push
fnstcw
dec
or
mov
testb
lahf
jg
cwtl
jae
inc
inc
sbb
cmp
jns
mov
and
sub
sbb
xchg
jno
icebp
cmp
rcrb
jno
mull
out
imul
push
jecxz
and
adc
enter
jmp
dec
and
scas
jg
sbb
sbbl
cwtl
insb
jno
or
lods
jno
push
add
xchg
mov
inc
add
mov
xchg
leave
push
lea
sbb
jno
stc
fs
xchg
pop
inc
jno
dec
cmp
jno
sub
mov
jno
ret
add
cmp
and
cmp
inc
and
ficomps
mov
adc
pop
or
adc
jno
imul
fidivs
push
in
lahf
or
into
stos
popf
push
mov
hlt
ror
jns
jne
lret
push
neg
icebp
scas
repnz
xchg
jno
jge
mov
jno
push
xchg
cld
push
push
inc
out
xchg
mov
stc
mov
mov
in
jno
or
jno
popf
lcall
pop
test
jno
add
mov
leave
rorl
jno
lret
cltd
fs
pop
out
clc
adc
jno
mov
hlt
int3
jmp
jmp
pop
push
jnp
fdivl
jno
test
aad
fstpt
jge,pt
or
mov
add
inc
cltd
mov
xchg
fs
jno
push
pushf
stos
mov
dec
mov
aam
mov
ss
mov
gs
ficompl
divb
pushf
jns
int
dec
imul
dec
sbb
jge
das
sub
adc
xor
cmp
insb
mov
mov
mov
sahf
out
adc
inc
dec
xor
test
mov
or
xlat
jo
cmp
leave
push
aam
lea
xor
cmp
and
push
loop
lods
lods
xor
mov
mov
jecxz
das
out
int3
sahf
pop
popa
movsb
hlt
xchg
pop
xlat
lret
jno
mov
xchg
sbb
xchg
gs
add
repnz
mov
ds
aaa
jne
lods
pushf
cmp
push
jnp
flds
call
inc
ret
jno
mov
fiaddl
jg
jno
and
das
xchg
mov
mov
pop
cld
lahf
mov
leave
lcall
in
arpl
push
jno
nop
imul
dec
push
loopne
jne
and
and
shlb
in
rclb
repz
xlat
dec
sub
enter
rolb
je
lea
shlb
jne
adc
rorl
adc
insl
and
jbe
jg
dec
cwtl
lods
cmp
mov
and
cmp
mov
mov
jns
and
or
call
jb
in
jno
rcrb
mov
lahf
lods
jno
cmp
push
jno
mov
loopne
pusha
rcrb
jg
ret
sub
jno
in
out
jp
lds
push
iret
bound
ljmp
push
xor
js
cmp
pop
aad
add
data16
push
mov
fimuls
je
scas
cmp
jl
jno
sub
rolb
cld
pop
ss
dec
cli
pop
jp
iret
out
adc
cld
subb
fwait
jmp
sub
je
xor
dec
push
push
push
mov
std
lds
or
pop
jno
xchg
jno
data16
lods
jge
pop
adc
inc
movsl
inc
daa
xor
loop
mov
fwait
iret
je
sbbl
in
jns
mov
rolb
je
fwait
jbe
sub
scas
fadd
mov
out
jno
mov
xchg
andl
sub
outsb
mov
dec
sub
insl
xchg
sub
jl
stos
mov
xor
xor
adc
add
mov
icebp
jno
push
mov
ljmp
jno
mov
jo
sbb
insb
jecxz
scas
lock
pusha
mov
xlat
sub
int3
bound
mov
mov
sahf
or
xadd
ljmp
sub
xor
jno
jo
mov
or
jns
push
lcall
aam
hlt
cwtl
loop
jno
int3
repnz
xchg
push
shll
jp
jae
mov
jno
fidivl
xorl
cmp
loope
hlt
out
jnp
jno
ret
jecxz
add
outsb
xchg
int
dec
out
jno
cmp
jbe
mov
xor
push
sub
inc
dec
lcall
jns
sbb
pop
cmp
outsb
jae
xchg
out
int3
cwtl
pusha
jno
mov
fbld
pop
lcall
lret
les
or
es
leave
or
andl
inc
popa
or
jmp
jno
mov
flds
push
lret
mov
roll
std
mov
lock
test
mov
add
sbb
hlt
mov
imul
aas
out
lret
scas
push
mov
mov
int
sub
fcmovnb
cmp
jne
out
sub
inc
jno
rolb
idivb
push
and
js
gs
sub
dec
pop
xchg
push
fstpl
xlat
not
xchg
cmp
add
and
inc
mov
pop
sub
repnz
repz
dec
dec
flds
push
sbb
sbb
nop
mov
jno
pop
sbb
and
add
jno
sti
dec
cmp
test
icebp
xor
div
addl
shll
inc
mov
jno
push
mov
fcompl
aas
jmp
adc
jno
xor
pop
mov
imul
jge
aaa
or
mov
pop
jno
add
sub
incb
jno
cmp
lcall
jae
push
notl
push
add
jne
cmpsb
jno
iret
push
data16
sahf
fbstp
je
xor
push
bound
test
out
inc
ss
or
and
mov
xchg
lcall
das
mov
ffree
js
mov
stos
mov
leave
negb
popl
jb
xchg
arpl
dec
mov
sbb
aaa
aad
adc
jno
mov
push
das
jno
xor
pusha
mov
pop
jno
push
mov
imul
lahf
adc
mov
es
loopne
sub
jno
dec
int
xor
clc
out
xchg
xor
mov
bnd
es
push
jp
dec
test
clc
mov
jbe
cmp
popa
sti
cltd
mov
mov
push
mov
xchg
leave
daa
push
jle
push
into
mov
jb
stos
shl
xlat
cmp
sub
xchg
cmpsl
leave
icebp
loopne
jne
enter
mov
xchg
dec
mov
scas
add
mov
dec
jne
ret
or
dec
xor
ss
jae
mov
xchg
dec
mov
inc
std
shlb
lea
mov
ja
sbb
movsb
add
shlb
pop
test
rorb
and
scas
bnd
adc
jo
repz
pop
xchg
adc
cmp
sarl
jae
push
push
imul
lret
mov
ret
jns
stos
mov
aaa
je
out
mov
jno
xchg
cwtl
add
movsl
out
dec
jno
test
mov
jno
xor
mov
ret
nop
int
jno
repz
shrb
popa
or
and
pop
bound
out
jno
shlb
pop
scas
sti
mov
repz
arpl
cmp
pushf
mov
clc
lea
clc
and
sub
sbb
push
cli
std
leave
inc
inc
aam
mov
jge
xchg
mov
xchg
dec
outsl
popf
inc
loope
jo
hlt
je
adc
in
mov
jno
iret
mov
mov
xor
les
adcb
push
sub
mov
aam
cltd
int
arpl
mov
pusha
jno
test
mov
leave
or
xor
or
daa
add
cmp
xchg
bound
into
ret
inc
sub
in
mov
jne
xlat
lods
dec
jp
push
call
jns
xor
lret
adc
sti
les
shl
jae
lods
inc
call
sub
xor
cltd
cmp
lea
cmpl
stos
mov
out
push
mov
je
sarb
xchg
mov
bound
pop
arpl
jae
xor
push
sbb
out
xor
fwait
cmp
lcall
mov
push
mov
clc
pop
rclb
mov
pusha
jns
xor
aas
int3
popf
xlat
jae
sub
jbe
mov
aad
dec
jno
pop
in
xor
clc
mov
inc
pop
je
mov
cmpsl
loope
mov
jecxz
xchg
lea
loop
pusha
bnd
xor
jno
inc
gs
in
cmp
xor
cmp
cli
aaa
shl
mov
daa
ljmp
jg
inc
inc
jp
lods
enter
pause
arpl
jge
mov
xor
inc
jno
lcall
lods
fnstenv
repnz
das
icebp
lret
aad
test
mov
sub
cld
out
adc
enter
mov
sub
jns
dec
stos
mov
aaa
jno
fs
cmp
fistpl
out
rclb
sahf
adc
loope
and
in
cld
lods
pop
pop
je
ret
push
mov
jno
aad
iret
add
lcall
lret
jb
dec
pushf
adc
xor
bound
lods
je
pop
sbb
test
je
xchg
mov
or
jno
orl
jno
jle
adc
xor
cwtl
test
repz
or
push
js
pop
adc
dec
test
mov
adc
jno
movsl
nop
faddl
les
mov
xor
or
outsb
push
jno
and
jne
loopne
mov
jl
push
sbb
js
dec
jge
inc
pop
clc
divl
push
in
jno
fildll
daa
add
jno
mov
ljmp
add
and
jge
mov
add
arpl
fisttpl
jnp
mov
je
scas
ja
sbb
push
mov
jb
cmp
add
jno
sti
insl
pop
push
sbb
jge
es
xchg
leave
frstor
dec
cmp
in
scas
stc
test
repnz
or
xorl
xchg
push
rcl
push
outsl
jge
cmp
mov
repz
push
fs
jns
imul
ljmp
dec
movsb
mov
lea
testb
frstor
xor
jl
rorb
xchg
jmp
in
dec
jno
pop
sbb
dec
inc
leave
mov
push
andl
arpl
adc
fisubl
mov
dec
xchg
sub
inc
adc
pusha
sub
xchg
xor
aas
fs
lahf
cmp
lea
fstpl
lock
and
loop
push
jno
pop
movsl
add
jno
or
dec
call
xor
insl
stos
out
jnp
jp
ret
gs
fsubl
in
outsb
int3
xchg
sahf
jb
jno
add
pop
push
push
or
cmp
sbb
pop
sub
mov
addl
int
dec
sub
aad
fs
idivb
push
xor
shr
test
push
push
cwtl
mov
xor
mov
push
imul
or
mov
mov
fisttpl
lea
repz
cmp
mov
ficompl
jno
cmc
shrl
adc
out
sub
jno
inc
movsb
popf
jmp
jnp
jno
add
pop
cmc
test
aas
mov
test
or
mov
sbb
sbb
xchg
pop
mov
shr
push
jno
cltd
xchg
je
lret
jmp
jno
push
jae
push
andl
ljmp
in
sbb
cld
jno
dec
jle
or
jno
loope
sbb
js
call
and
lods
cmp
jg
jno
aas
es
fs
sub
xchg
shlb
scas
call
cmp
fwait
mov
jno
mov
sti
movsl
enter
cmp
ja
and
das
add
or
add
lahf
cmp
pop
call
adcb
or
js
pop
jno
cmp
ret
mov
jno
cmp
fiadds
mov
mov
xchg
flds
mov
les
dec
iret
inc
pop
bnd
jno
rclb
pop
inc
inc
cli
jns
pushf
loope
xchg
stos
loop
jno
inc
adc
xchg
in
int3
fwait
ja
lcall
pop
jns
adc
fdivs
repz
sub
or
daa
jno
sub
mov
xchg
xchg
int
je
aad
mov
push
inc
imul
push
jno
sbb
jb
sub
or
insb
xor
sub
out
mov
jno
cmp
ficomps
inc
add
push
aam
jle
jno
add
jmp
lea
push
sub
jo
aad
mov
shrb
mov
jno
or
insb
ljmp
cmp
xor
dec
mov
fadds
dec
xchg
or
mov
xor
ljmp
push
jno
mov
clc
xchg
xchg
lods
jno
inc
loopne
mov
cltd
adc
jne
rorl
pop
cmp
hlt
adc
dec
cmp
jnp
push
cli
mov
loope
or
je
ret
dec
test
aad
bound
pop
pusha
jge
cmc
jge
add
loopne
leave
push
lahf
divb
movsl
mov
leave
or
test
jno
and
mov
xchg
jge
push
jne
lods
jo
test
jmp
adc
sarb
in
xchg
test
je
loopne
xor
cmp
dec
gs
and
in
std
and
sub
cmp
jne
scas
daa
repnz
out
add
stos
jno
out
add
ret
insb
xchg
pop
xchg
imul
mov
jno
dec
xchg
and
test
and
pop
cltd
ss
jno
sbb
rcrb
lods
pop
jno
mov
inc
cld
lea
leave
push
outsl
cmc
int
loope
dec
int3
mov
into
out
jmp
jno
xor
mov
inc
jno
and
aaa
jecxz
jbe
jno
stc
movl
or
jno
rcrb
out
stos
jno
outsb
xchg
mov
or
adc
hlt
adc
sbb
scas
push
mov
loopne
sarl
test
xchg
adc
push
xor
daa
les
cmp
test
xchg
repz
jns
inc
dec
in
xchg
or
xchg
xchg
jns
out
jne
sti
add
cs
pop
out
sbb
hlt
fildll
mov
cmp
jno
pop
mov
jecxz
jmp
xchg
into
xor
shl
imul
int
xor
out
wbinvd
mov
xor
mov
lds
loope
xor
or
adc
add
gs
test
stos
mov
int3
lods
and
jno
jle
rclb
outsb
xorl
lods
bound
inc
sub
jnp
fimuls
arpl
pop
mov
mov
dec
inc
call
scas
jne
fistpll
xor
shr
mov
test
je
inc
das
jno
sub
movsl
push
shr
nop
in
mov
loop
sbb
shrb
and
jno
mov
cmp
shrl
xor
pop
arpl
push
lret
or
lret
xor
push
notb
jne
fcmovb
push
imulb
jno
mov
dec
test
sub
push
cmp
jnp
iret
xchg
mov
shrl
jl
test
mov
repz
inc
jns
mov
or
mov
pop
xchg
mov
and
and
incl
cmpsl
jnp
add
dec
mov
push
jno
inc
or
outsl
int3
xor
lock
xor
testb
lods
fsubrl
jno
mov
xlat
sub
push
lret
daa
out
imul
cltd
jecxz
outsb
cmc
in
push
pop
jmp
mov
jno
leave
mov
jo
mov
shlb
das
push
mov
xchg
mov
and
jnp
cmp
dec
fisubrl
mov
xchg
or
inc
cwtl
jmp
cmp
xor
orb
push
mov
mov
ret
pop
jecxz
jge
xchg
mov
jns
pop
dec
enter
mov
mov
or
ficompl
mov
pop
lds
pop
lahf
rorb
push
jge
lea
sub
aas
cmp
std
mov
sub
mov
out
lcall
xor
adc
sbb
adc
aaa
sbb
pop
push
adc
inc
xchg
arpl
mov
cmpsl
popa
jg
aaa
and
nop
repnz
repnz
jmp
loope
mov
mov
xchg
dec
jg
inc
sar
and
mov
sub
cltd
leave
jbe
xorb
dec
bound
ds
jae
test
and
stos
aad
mov
pop
and
jge
lds
aas
jmp
mov
lahf
xchg
fwait
aam
xchg
cmpsl
cmpsb
out
mov
shl
loope
adc
data16
pusha
inc
mov
jno
aaa
jl
or
rclb
and
adc
push
xchg
jno
out
loopne
cmpsb
mov
jne
je
add
orb
dec
xorb
lret
test
pushf
loope
shll
and
xor
or
cmpb
mov
and
push
sbb
cmpsb
inc
pop
in
pop
sbb
enter
sahf
ficoml
scas
jno
jb
cli
and
push
pop
icebp
je
idivb
or
popl
jb
mov
imul
xor
into
cmpsl
push
test
mov
jno
mov
enter
and
shrb
ds
jno
pop
fimull
lock
sbb
push
pop
xlat
jno
mov
lods
int3
jno
mov
or
mov
adc
ss
ror
iret
int3
ss
push
outsl
pop
je
mov
mov
cmpsb
xor
jge
es
loope
add
xor
pop
jno
insl
stos
fisubs
dec
jns
dec
icebp
mov
sub
insb
jno
jge
adcb
cmpsb
rorl
jno
call
inc
in
fdivl
jne
mov
insl
xchg
mov
popf
jge
pusha
movsl
iret
mov
jno
and
leave
repz
scas
xchg
jp
xor
les
jno
jne
test
push
adc
sar
stos
jno
iret
outsb
test
mov
mov
sbb
xor
fwait
add
jno
cmpsb
dec
incl
cmp
jnp,pt
subl
jge
jecxz
or
int
jmp
adc
aad
popa
sahf
inc
pop
inc
test
scas
xor
xor
aas
xlat
jb
cltd
mov
popa
shrl
pushl
jno
jle
les
xchg
mov
mov
jbe
out
adc
jmp
jp
add
lock
das
popf
push
jno
jg
or
jge
lock
pop
rclb
xor
jno
jne
xor
jae
xchg
iret
mov
aas
int3
adc
jmp
mov
in
jno
jmp
fcmovbe
jno
clc
std
jp
repz
scas
aaa
test
xor
add
push
jns
enter
jbe
push
ret
into
call
dec
jge
inc
inc
inc
in
cld
shrb
jno
sbb
and
push
shr
fnsave
mov
and
in
xor
test
or
or
or
in
in
out
lods
cmp
pop
jae
dec
add
pop
jno
sbb
dec
adc
push
pop
and
mov
pushf
fwait
addr16
mov
sahf
xor
add
lea
xchg
cmc
into
shlb
scas
xlat
insb
popf
jno
pop
inc
and
sbb
jno
cltd
add
jp
xor
sub
push
jno
push
pop
ja
push
inc
or
insb
jae
fwait
push
adc
popl
in
cmp
sub
cmpsb
bound
mov
test
or
add
popa
es
jno,pt
in
and
leave
fucomip
ja
ja
lods
xor
push
popf
mov
jns
pop
push
fwait
test
cmpsl
adc
push
addr16
aaa
insl
movsb
pusha
test
ljmp
adc
push
jno
js
pop
pop
dec
pop
ret
pusha
cmpsl
push
loopne
sub
cmp
mov
popf
jno
push
int
inc
mov
push
jnp
lea
lahf
in
cs
icebp
inc
rclb
jno
xchg
cltd
cmpsb
les
lods
test
mov
jb
nop
popf
sti
into
pop
scas
icebp
popf
cli
mov
loop
fnsave
sbb
aas
lea
xor
pushf
jbe
jno
push
hlt
pop
shrb
mov
into
rcr
cmp
je
jb
incb
jno
fstps
ret
mov
mov
jno
jb
rcl
xchg
xorb
sbbb
lret
mov
inc
jbe
jno
inc
lret
jns
imul
ret
push
inc
in
inc
mov
add
mov
jno
jge
push
push
fwait
and
jno
movsl
xchg
mov
fnstenv
jnp
mov
xor
or
mov
in
mov
out
adc
jno
cmp
jo
lret
nop
js
idivb
test
arpl
xor
inc
daa
insl
xor
std
imul
dec
cld
ja
adc
xor
jnp
mov
dec
xlat
fdivs
and
cmp
jmp
pop
push
sub
dec
xchg
mov
mov
xchg
lock
xchg
or
or
rcr
sbb
lea
in
fistl
mov
adc
dec
repz
outsl
out
jno
aad
repz
mov
push
mov
jno
test
inc
xchg
jno
add
pusha
inc
fcmovnb
imul
gs
jno
pop
push
cld
xor
mov
jno
push
push
cmp
scas
pop
mov
sub
loop
je
mov
and
xchg
jno
push
cmpsl
out
lods
cli
pop
xor
mov
enter
sbb
jmp
mov
pushf
cli
or
dec
repnz
inc
out
mov
jno
inc
hlt
into
jae
sbb
jno
cwtl
dec
mov
leave
fscale
dec
stc
push
pushl
push
fisttps
xchg
sarb
dec
push
insl
sub
jno
popf
movsl
shl
test
mov
jnp
xorb
jb
jge
cmp
ds
call
rorb
enter
imul
ja
xor
adc
xchg
and
sti
mov
fildll
jno
je
jne
mov
and
gs
addr16
dec
dec
add
jmp
add
jno
xor
mov
pop
dec
jle
and
aas
inc
clc
les
jo
jge
pop
mov
sbb
fwait
xorl
sbb
jno
cli
fiaddl
sbb
shrl
sbb
test
jb
cltd
mov
cmp
adc
push
addr16
jno
sub
jg
mov
jno
pushf
mov
jns
cmp
jmp
in
mov
mov
test
call
idivb
sbb
inc
ljmp
mov
jbe
sub
lcall
jae
lds
jnp
orl
pushf
push
sub
push
and
xchg
imul
iret
test
sahf
cmp
cmp
pop
mov
sbb
adc
cld
inc
in
jno
mov
mov
jae
fcompl
inc
das
in
mov
sbb
leave
dec
in
xlat
xchg
outsb
adc
imul
pusha
imul
xchg
jno
or
in
xor
dec
push
bnd
add
push
jno
cmpsl
jmp
xor
aaa
mov
dec
jg
jb
cmp
push
sub
lahf
sti
stc
pushf
mov
push
ds
jl
xlat
sub
fwait
daa
jbe
xor
lock
add
mov
pop
mov
insl
pop
jno
mov
inc
cmpsl
mov
sbb
dec
js
insl
repnz
push
pop
mov
adc
push
cli
pushf
jae
test
inc
push
jecxz
push
and
pop
ljmp
dec
jno
push
mov
hlt
out
in
add
out
pop
mov
jb
out
ja
push
cmpl
push
jno
cmp
push
jnp
clc
gs
fisubs
jne
xchg
stos
fsts
jno
mov
push
xorb
cwtl
mov
sahf
lfs
xor
inc
or
filds
and
ja
adc
repz
push
jno
jne
je
push
jnp
jno
shlb
jno
sub
bound
mov
jno
xchg
inc
pop
pop
out
pop
fwait
cmp
notl
inc
addr16
sbb
jno
pushl
testl
dec
imul
shrb
jecxz
aas
mov
test
bnd
jno
dec
loopne
push
jg
ret
push
out
movsl
mov
xor
pop
neg
push
and
jno
dec
out
add
pushf
push
test
jb
addl
xor
xchg
jecxz
popf
mov
std
mov
push
mov
inc
cmp
and
push
outsb
int3
ljmp
repnz
and
xchg
cs
push
dec
jno
lods
pop
sub
mov
jno
lea
fmuls
repnz
xchg
pop
daa
movsl
mov
jno
enter
leave
jne
ljmp
cmpb
js
adc
xor
push
and
test
jno
sub
inc
add
lea
in
int
mov
jle
jns
icebp
sub
xor
jno
xor
push
xor
fisttps
in
mov
test
icebp
jg
cmpsl
inc
mov
mov
xor
mov
in
sub
dec
jae
jecxz
cwtl
nop
cli
jno
test
out
in
dec
lea
mov
in
jno
sub
push
leave
cld
and
je
mov
loop
lea
je
jmp
fidivl
or
push
mov
inc
mov
jne
jge
mov
mov
mov
rol
sbb
mov
sbb
int
lret
xchg
mov
pop
orb
sbb
lods
pop
enter
loope
adc
xchg
and
jno
fsubs
jno
jge
dec
inc
sahf
fwait
inc
jno
negl
mov
dec
loop
and
add
scas
dec
xchg
jge
or
pop
stos
mov
sub
jno
mov
insb
mov
mov
or
mov
jecxz
aaa
or
scas
in
mov
cmpsl
jl
stc
xchg
loope
push
pop
jno
scas
stos
dec
mov
add
aaa
mov
mov
pop
jns
inc
xchg
mov
out
jp
jge
loop
cli
insl
mov
jl
fwait
inc
test
rorb
push
xlat
jge
or
shrl
xchg
push
jecxz
fstp
jbe
pop
pop
imul
adc
out
es
push
mov
sbb
jno
aaa
test
push
dec
xor
jno
outsb
pushf
test
std
pop
pusha
xor
lea
mov
leave
sahf
xchg
aad
fucom
fcoms
xor
pop
cltd
insl
jno
cmp
cmpsb
sub
jo
rorl
repnz
int3
jb
aam
jno
repz
dec
sbb
mov
test
je
mov
xor
movsl
ds
imul
mov
sbb
in
adcl
lahf
in
aam
je
sbb
xchg
xchg
and
xor
stos
int
jne
cwtl
inc
jb
jae
jno
cld
in
call
hlt
sub
lods
cld
rolb
mov
imul
jb
mov
test
xor
xchg
sbb
stos
sub
iret
adc
fidivrs
mov
rorb
push
mov
pop
test
loopne
pop
jae
jbe
or
jns
mov
jb
push
ret
test
aad
pop
hlt
mov
xchg
jle
push
stos
mov
mov
inc
jns
jno
cwtl
xchg
jecxz
loopne
outsl
test
icebp
ficomps
and
dec
add
cld
jbe
mov
mov
movsb
mov
jle
sbb
jb
cmpsb
sub
add
jno
into
ret
in
outsb
dec
aad
dec
cwtl
inc
jne
xchg
jle
hlt
test
jno
adc
xorb
ds
shl
loop
sub
sbb
shrb
movl
fdivrp
inc
mov
sbb
sarl
sub
xor
mov
mov
or
xor
imul
jno
mov
in
add
rorl
jno
sbb
mov
xchg
sub
hlt
fs
das
je
mov
jno
xchg
mov
and
xchg
aaa
jle
movsb
mov
jae
sarl
push
jo
rcrl
int
adc
aaa
mov
mov
stc
orl
pop
adc
out
je
mov
mov
jno
mov
jno
dec
cli
iret
cwtl
jle
mov
aam
out
or
add
movsl
gs
mov
mov
hlt
push
adc
popa
xor
in
jno,pn
xor
or
pop
jne
sahf
cli
dec
out
ja
pop
pop
popa
pop
xor
aaa
jno
inc
out
fcmovnb
xchg
or
xor
fists
fiaddl
pop
data16
jb
cmpsl
test
movsb
jae
add
xchg
jbe
enter
pop
lods
cltd
in
push
stc
jno
insb
jb
xchg
xor
fidivs
leave
xor
loopne
sub
fidivs
sub
and
icebp
hlt
shll
fildll
sub
outsb
adc
and
aam
pusha
sti
movsb
jp
shlb
sub
js
mov
scas
out
lcall
in
lds
push
loope
jno
cmc
inc
inc
xchg
jnp
divl
or
clc
cli
test
jno
jo
inc
jno
and
popa
ljmp
filds
lods
enter
push
and
sub
shlb
inc
or
jno
stos
mov
shrb
aad
stc
ret
iret
ljmp
data16
mov
cmpsl
fs
gs
aaa
jnp
rol
push
push
push
lret
and
push
sbb
daa
mov
fwait
loope
jno
cmp
xor
xor
call
jo
jecxz
lods
dec
gs
xchg
repz
movsl
mov
mov
sbb
mov
cs
shll
lret
in
aad
xor
int
and
adc
popa
cltd
iret
dec
dec
fbstp
sub
xchg
jno
and
mov
shrl
mov
movsb
in
rcrl
inc
adc
mov
and
mov
jno
xor
xor
dec
pop
out
cmp
jno
cmc
cld
inc
mov
dec
divl
jns
dec
pop
mov
xor
sub
jmp
jmp
mov
jnp
sbb
jl
jno
inc
in
or
loop
or
popf
cmc
sub
sahf
jns
sub
mov
call
and
test
add
in
jb
enter
sbb
mov
jge
repnz
test
mov
sub
sahf
xchg
pop
bound
cmp
ja
arpl
jg
jecxz
stos
sbb
shl
fnstsw
fdivl
mov
insb
jo
test
lods
inc
inc
outsl
or
xchg
mov
add
mov
add
imul
popf
jns
scas
movsl
dec
test
dec
pop
sub
mov
loop
rcll
fidivrl
in
test
jne
pop
gs
mov
imul
xor
lahf
mov
leave
and
ret
adc
or
xchg
loop
adc
lods
jle
repnz
adc
xchg
rorl
inc
cli
sbb
mov
test
cmp
scas
push
shll
repnz
sub
das
mov
rcll
mov
xchg
mov
mov
lea
mov
imul
xchg
mov
xchg
cmp
add
xor
add
pop
dec
icebp
nop
xchg
xchg
mov
inc
test
pop
imul
shll
xor
popf
movsl
call
sub
cmc
mov
loope
mov
sbbb
mov
sbb
xor
daa
lea
xor
lock
icebp
jnp
add
jno
and
outsb
xchg
jnp
stc
popf
push
xchg
lds
dec
mov
pop
mov
test
dec
jno
lds
lcall
mov
jae
call
sub
sti
jno
in
mov
test
jae
aaa
roll
insl
inc
xor
mov
sbb
lock
scas
push
xor
mov
push
sahf
pop
loop
cmp
inc
or
fstp
into
shlb
fs
daa
jmp
clc
mov
mov
adc
mov
mov
cli
push
sahf
pushf
fs
jno
mov
clc
sbbb
sub
add
jae
cmp
sub
in
test
jno
ja
mov
sbb
lret
call
xor
cmp
sub
js
imul
addl
xchg
mov
xchg
jno
iret
mov
jecxz
pop
mov
shrl
jg
jnp
orl
dec
jno
lea
out
inc
sub
pushf
loopne
adc
jne
fidivrs
imul
adc
or
mov
xchg
std
mov
fcoml
gs
into
sub
mov
and
jno
mov
push
jno
filds
pop
and
sarb
pop
je
or
out
dec
pop
add
jno
daa
lret
mov
sub
test
jno
fstps
pop
jge
gs
cmc
mov
push
push
add
mov
clc
jno
insb
jne
mov
mov
dec
jne
nop
dec
cmp
or
je
pusha
sub
sub
call
xchg
rorb
in
dec
xchg
ret
cmp
jns
rcr
and
movsb
sbb
xlat
jno
cmc
out
loop
pop
jmp
push
add
data16
shl
jae
icebp
adc
pushf
lea
mov
hlt
jmp
sarl
xchg
out
scas
lea
mov
pushf
lret
into
mov
jle
mov
test
int3
inc
cmc
jno
sub
sub
jge
mov
xchg
sub
cmp
ds
sbb
jae
push
xorl
sub
repnz
and
ret
sahf
and
jno
mov
rcrb
stc
test
cli
aaa
mov
divb
aam
rcll
movsb
cmp
xlat
hlt
pop
sub
popa
pop
fnstenv
or
lods
inc
jmp
das
call
or
xor
mov
jno
xor
pop
jnp
mov
jno
test
cwtl
imul
lea
push
and
pop
xor
mov
jno
imul
and
scas
jno
pop
jae
mov
xchg
or
das
imul
dec
pop
loop
jno
pop
or
or
stos
jno
mov
cmp
cmp
cld
addl
stc
sbb
bound
xchg
dec
mov
aaa
dec
jno
repz
jb
das
adc
jno
pop
dec
xor
cwtl
inc
or
dec
jae
inc
ret
mov
ss
bound
ja
in
sub
adc
sub
add
jno
jne
aam
jbe
out
pusha
push
lds
sbb
shlb
mov
jno
jmp
and
sub
mov
popa
jno
sub
daa
or
jae
cld
add
jno
dec
and
jmp
inc
jno
loopne
ss
aam
inc
jne
xchg
mov
xor
clc
mov
sahf
jno
push
icebp
push
cmp
jbe
arpl
scas
adc
imull
jno
xchg
fwait
mov
xchg
mov
xchg
xor
hlt
movsb
adc
jno
mov
in
shlb
stos
mov
and
inc
jnp
adc
sbb
add
lcall
ss
repnz
pop
jno
sti
cli
out
fucom
lret
push
add
mov
imul
push
in
test
jae
inc
iret
mov
int3
fcom
jnp
mov
adc
scas
mov
sub
jb
jg
jno
ret
movsl
test
or
xor
rolb
clc
mov
ds
je
into
test
int
scas
fsubrp
mov
gs
mov
bnd
jae
xchg
out
loopne
sub
loope
cmp
loop
jne
sbb
xor
mov
push
inc
pop
cmc
jae
ja
dec
pop
call
xchg
mov
jne
mov
adc
notl
jno
mov
add
dec
leave
scas
jno
sub
iret
add
imul
cmp
in
jns
repnz
dec
je
xchg
lcall
and
or
test
jno
movsl
sbb
shlb
in
pop
into
sub
xlat
push
cmp
jno
xchg
jmp
sbb
jo
dec
or
iret
jno
pusha
stc
jne
pop
nop
dec
dec
jno
aam
out
bound
repz
js
jno
and
and
jmp
cmp
mov
xchg
xchg
mov
jno,pt
fdivr
adc
push
fldenv
push
cli
mov
enter
mov
sarb
dec
inc
inc
and
lds
add
pop
hlt
jo
mov
and
mov
and
sahf
pushf
fildll
or
sarb
dec
lock
cmp
jae
push
gs
inc
lcall
cmpsl
ror
out
lods
jno
and
lds
xchg
ja
arpl
mov
mov
mov
and
dec
sub
stos
hlt
hlt
mov
jno
in
aas
or
out
sub
dec
scas
dec
hlt
test
addl
lret
cmp
inc
sub
push
mov
lods
jno
xlat
mov
cwtl
inc
out
jno
add
xchg
repz
mov
cmpl
pop
adc
negb
dec
xchg
mov
es
loopne
je
jno
cltd
pop
dec
xor
push
jb
push
mov
scas
mov
xchg
jmp
or
or
xchg
or
mov
add
ret
jns
sub
jno
movb
xchg
insl
jbe
inc
outsl
pop
xchg
inc
pop
hlt
xlat
subl
dec
cltd
pop
add
xor
bound
xchg
jno
fldl
or
mov
and
inc
jno
xor
or
clc
in
sub
jne
pop
mov
mov
or
xchg
aad
test
into
jge
mov
pusha
hlt
dec
enter
bnd
in
xor
xor
outsl
xor
data16
dec
imul
lods
scas
mov
test
sti
sbb
cli
jno
loop
push
pusha
fwait
mov
cltd
push
je
or
mov
inc
shr
mov
mov
xchg
pusha
push
dec
xor
hlt
pop
in
and
or
jbe
or
jl
shl
add
jmp
mov
les
jge
mov
mov
xchg
mov
jmp
jns
hlt
int3
cmp
xchg
shr
std
leave
jge
xor
mov
data16
fbld
fnstsw
xor
das
mov
cltd
sub
xor
test
push
insb
inc
jno
cmpsl
push
xchg
sbb
in
jno
mulps
jne
fimuls
inc
jecxz
lea
in
pop
xlat
jb
mov
jne
mov
out
add
movsb
lea
int3
jns
jl
repnz
data16
push
arpl
pop
sub
mov
sahf
shll
mov
pusha
inc
push
jno
lods
scas
jb
sub
sub
cmpl
mov
out
jno
mov
push
or
mov
jge
repnz
lea
sbbb
xchg
mov
push
mov
call
popf
aad
dec
mov
lods
inc
jno
xchg
dec
mov
pop
out
addb
je
dec
dec
sbb
mov
push
xor
jno
mov
out
jno
in
and
push
ja
push
adc
cwtl
jno
inc
stc
xlat
sub
adc
ss
add
add
lods
jno
inc
cmp
xchg
mov
push
jl
or
mov
iret
jns
xchg
outsl
pop
jo
leave
jne
push
mov
jae
add
imul
into
hlt
or
and
mov
jmp
adc
xor
xor
sahf
js
mov
ret
rolb
pop
rolb
stos
fisttpll
daa
pop
jo
out
adc
jae
popa
adc
outsb
scas
or
pop
divl
fs
int
jnp
hlt
ret
jb
shl
mov
xchg
stos
inc
fs
jecxz
sub
xchg
jno
dec
pop
push
jp
jno
mov
jg
into
jns
jno
rorl
lret
dec
filds
pop
jae
fldcw
add
pushf
jno
adc
clc
pop
dec
jno
dec
pop
push
hlt
flds
adc
mov
daa
lret
push
in
scas
inc
jecxz
pop
push
stos
je
fildll
into
mov
inc
std
test
xchg
dec
pop
dec
dec
xor
out
and
jno
lahf
xlat
out
mov
dec
push
incb
cli
cmp
jns
fisttpl
jno
jnp
rcrb
and
mov
call
lcall
shll
lea
aaa
daa
pop
mov
adc
inc
jno
lods
aas
and
mov
in
and
je
mov
jno
push
jno
daa
lods
outsb
xor
cltd
jp
lock
xchg
dec
bound
mov
fs
dec
imul
popa
jp
lods
cmp
jae
cmp
jnp
push
stc
jae
pop
sbb
je
addr16
repnz
pop
jae
test
rcrl
jno
push
lea
pop
and
inc
jno
repz
loopne
add
pushf
jno
jp
xchg
hlt
sub
cmp
lock
outsb
xchg
rcrb
test
je
or
mov
mov
inc
and
mov
mov
dec
mov
push
inc
js
adc
xor
mov
mov
mov
pushf
mov
cs
or
jb
int
pop
adc
imul
and
jno
xchg
fisubrl
into
pop
ljmp
and
xchg
jno
push
add
mov
scas
cs
adc
lock
jno
rcrb
mov
sub
jmp
loop
jno
pusha
jae
fldt
int
jno
and
and
cmp
cmp
mov
add
lahf
hlt
sub
xor
aad
inc
jno
divl
lods
addr16
stc
pop
in
or
lods
cmp
out
jp
test
es
das
jno
or
popf
test
je
repnz
aam
lcall
or
or
cld
into
in
sbb
sub
out
sahf
ret
jecxz
add
jae
inc
or
xchg
pop
into
jno
or
mov
in
mov
ss
jbe
mov
mov
aaa
dec
xor
lds
jmp
mov
and
pop
jno
mov
jno
andb
mov
and
sbb
fisubs
jne
loope
xchg
jne
jae
js
iret
and
dec
jne
fisubs
inc
inc
mov
push
jo
stos
js
into
add
push
jno
jnp
pop
and
push
pop
lea
sbb
xchg
push
addl
mov
push
les
stos
xchg
jne
xchg
ljmp
fs
shrl
int
inc
fwait
jno
out
mov
popf
lock
aad
jno
cmpsl
rolb
jns
adc
mov
xchg
or
jno
movsl
cmp
xchg
sahf
push
roll
push
stc
out
push
je
xor
sub
stc
clc
pop
push
adc
cwtl
cmpxchg
jno
adc
sbb
ja
test
repnz
xchg
out
imul
jg
jb
mov
and
repz
dec
mov
notl
mov
push
dec
divl
pop
int3
jno
adc
or
cli
push
sub
push
cmp
or
ja
repz
xchg
popa
cmp
loop
add
iret
cmpsb
cmp
sub
movb
insb
repnz
insb
dec
sbb
data16
fnstsw
sub
jno
lar
jno
mov
jmp
out
lret
cmc
mov
repz
pop
js
jne
pushf
scas
aad
mov
sbb
add
inc
mov
xor
stos
bound
out
dec
inc
xchg
push
repnz
jno
fwait
nop
cmp
std
test
je
hlt
mov
pop
insl
cmpsl
jno
pop
fildll
push
or
sbb
cmp
sbb
cwtl
cmpsb
inc
jno
ljmp
rorl
adc
lods
cmpb
in
popa
mov
hlt
pop
jecxz
xchg
notb
stc
test
data16
fwait
jge
xlat
cli
mov
jbe
mov
jno
sub
lahf
add
mov
and
or
dec
pop
mov
addl
jno
push
or
jno
pop
fbld
stc
das
loope
push
shll
in
fucomip
push
or
ds
pop
jno
lahf
or
aas
insl
and
xlat
mov
je
rclb
imul
add
and
loopne
push
cmp
push
ss
cmp
test
sub
les
xor
inc
or
pop
and
test
and
out
jae
ljmp
push
dec
aam
jno
xchg
shlb
sbb
cmpsb
jno
sub
mov
jbe
notb
cmp
inc
fcmovnbe
int
cmpl
sbb
adc
fbld
popf
sub
cwtl
std
sbb
or
mov
jno
fnop
xor
mov
add
cmp
bound
sub
clc
adc
ja
lret
jno
inc
dec
dec
test
sub
mov
dec
cltd
push
test
ja
test
xor
mov
js
mov
add
jno
mov
push
cltd
jno
test
enter
jno
add
gs
xchg
inc
add
pop
cmp
loopne
test
or
dec
mov
adc
sbb
popa
xchg
push
jno
adc
pop
in
fnstsw
adc
jae
jno
lock
inc
fstpl
sub
cmp
mov
scas
int
movsb
jno
cli
popa
ret
mov
jno
cltd
iret
xchg
inc
loope
jno
push
xor
pop
hlt
stc
jae
fildll
jno
sti
enter
dec
pop
jne
ja
dec
pop
jl
sub
repz
dec
dec
pop
push
cmpsl
mov
repz
int
sub
lods
scas
test
jne
jno
stos
or
iret
jbe
imul
in
adc
jge
mov
xchg
jns
ds
mov
push
jb
dec
sbb
lret
push
loop
and
or
pop
jno
hlt
es
push
mov
pop
in
pushf
clc
adc
adc
xchg
or
pop
and
push
jge
test
or
or
cwtl
add
bound
repz
jno
and
sbb
mov
jno
and
movsl
inc
jne
out
inc
into
or
push
push
adc
aad
icebp
jno
mov
out
jno
inc
sbb
jae
cwtl
push
rclb
jae
fstpt
pusha
and
mov
adc
stos
dec
lods
xor
jno
jnp
call
jno
scas
aas
adc
jno
stos
add
mov
adc
jnp
or
pop
jno
and
and
xorb
out
jecxz
and
les
std
xor
fsub
add
out
mov
shl
je
push
dec
mov
cmp
std
nop
fwait
xchg
add
mov
jno
js
fidivl
dec
xchg
and
cmp
cmc
dec
add
pushl
pop
sbb
mov
je
pop
jno
dec
mov
dec
and
xchg
push
cld
inc
dec
repz
mov
js
push
jno
add
jne
cwtl
sbb
push
je
ss
leave
or
or
jne
loopne
sbb
daa
xorl
in
fsubr
jns
loopne
inc
push
sub
je
stc
and
xor
das
hlt
scas
lcall
and
out
lods
outsl
jle
adc
mov
sbb
pop
sti
xchg
and
shrl
jnp
test
sub
je
arpl
aas
push
jmp
jae
mov
ret
test
fnsave
fistl
lea
repz
jne
mov
mov
cmpsl
imul
negl
mov
xor
or
jno
xlat
sbb
movb
leave
push
iret
cld
cs
lods
lret
out
mov
mov
pushf
int3
fbld
gs
or
mov
leave
cmp
inc
out
mov
mov
adc
loop
imul
jmp
or
xor
pop
lea
in
jge
mov
xor
adc
fistpl
and
pop
fxch
popf
lret
jno
js
adc
jno
adc
sub
mov
repz
jno
or
pop
xchg
adc
data16
sbb
jmp
jae
jmp
popa
mov
popf
pop
cmpb
mov
pusha
and
movsb
int3
lods
pop
enter
jno
test
xor
xor
fwait
std
cmp
je
sarb
test
cmc
xchg
repz
pop
divb
cltd
jns
and
push
movsb
jno
pop
jne
jmp
xor
jno
cs
mov
mov
push
fdivs
or
lock
mov
sub
or
mov
cmp
and
xchg
mulb
jno
and
aad
jo
add
pop
cmp
jg
nop
dec
add
pop
rclb
jae
inc
sub
or
data16
jg
inc
inc
jno
std
inc
sarb
inc
inc
hlt
popf
jno
movsl
repz
out
mov
sbb
outsb
jno
adc
pop
jno
sbb
dec
push
mov
jne
sbb
in
ffree
imul
sbb
ret
cmpsl
imul
jno
loope
adc
call
loopne
iret
xchg
sbb
out
aaa
xchg
add
jb
pop
dec
dec
push
mov
xor
psubb
pop
cmpb
jl
hlt
shlb
jb
subb
pop
or
or
adc
aam
sub
jno
mov
loop
ja
jno
stc
data16
lret
aam
push
and
repz
fidivl
push
or
inc
sub
push
xor
jno
mov
jecxz
cli
out
push
popf
dec
mov
jns
pop
stos
sub
xlat
mov
jge
ja
add
add
sub
xchg
inc
jno
jge
cmp
jno
jbe
cwtl
cld
dec
outsl
call
jno
popa
inc
hlt
or
sub
jno
or
andl
sbb
jne
and
aam
xchg
js
push
jno
repnz
and
sti
roll
jno
loope
inc
std
aaa
mov
add
pop
xchg
push
xor
xor
inc
adc
daa
bnd
jmp
inc
xchg
push
push
in
cmp
sub
jno
inc
jecxz
push
test
ljmp
cmp
subl
sahf
sbb
mov
mov
adc
pop
xchg
mov
inc
add
jg
in
loop
sbb
adc
popf
mov
push
and
loope
icebp
sub
push
mov
inc
lret
aad
xlat
xchg
cmp
lods
jbe
notb
mov
xchg
fdiv
and
cmp
xor
xchg
fwait
leave
jp
stc
sti
das
xorl
mov
fdivs
popf
pop
fidivrl
lods
iret
jbe
imul
jo
xor
pop
cmp
daa
dec
loope
out
pushl
cld
mov
mov
in
repz
cmc
lahf
stos
jnp
jbe
cmpsl
mov
aad
jno
cld
jb
add
cltd
dec
jno
dec
cmp
xchg
insl
fcompl
imul
mov
leave
repz
stos
push
sub
jno
cmp
push
adc
clc
jno
push
xchg
lods
adc
jl
jno
pop
cmp
dec
jno
insb
sahf
imul
ret
xchg
sub
add
imul
jae,pt
popf
ja
add
jae
clc
int
or
aam
cli
jno
push
aad
push
mov
outsb
jns
xchg
pop
sub
jno
pusha
and
jno
xchg
sub
cltd
ss
jg
lret
and
and
or
adc
jbe
mov
add
in
mov
jb
cmp
ljmp
mov
pop
fld
jno
gs
pop
xchg
rcrl
jno
jns
jmp
jno
push
arpl
lret
and
pop
jne
call
xor
sbb
jno
fisttps
movsl
or
in
int
gs
sub
pop
cmp
je
adc
int
in
xor
sbb
dec
push
inc
sbb
jne
sub
lods
pop
scas
nop
icebp
shlb
inc
mov
lods
push
clc
jle
and
test
add
push
push
push
into
in
jae
jno
shrb
add
sub
popf
inc
dec
mov
rorb
and
shlb
inc
notb
mov
push
sbb
aad
push
pop
lea
rcrb
mov
repnz
jno
or
mov
pop
mov
sbb
fdivl
mov
stos
cwtl
sahf
addb
xchg
jno
subl
popf
fs
hlt
jge
sub
jge
mov
sarb
adc
lods
jae
pop
mov
hlt
cld
ljmp
jo
pop
or
jno
test
jns
fmulp
sbb
cmpsb
icebp
hlt
fcomps
pop
outsl
sbb
or
jns
cli
or
push
xchg
je
add
jno
cmpsl
scas
ret
push
jno
rcl
mov
jno
sbb
sub
les
mov
mov
pop
cli
jmp
mov
xor
pop
sub
lahf
cmp
rorb
push
lea
mov
mov
sbb
in
jg
out
lret
inc
add
and
aas
fdivr
adc
pop
mov
xchg
pushf
mov
inc
and
mov
jp
xor
dec
jno
or
or
jno
adcl
mov
out
out
xor
mov
shll
stc
jnp
jno
mov
jo
pop
ss
adc
das
mov
mov
sub
outsl
dec
or
mov
test
test
insl
ss
repnz
xor
push
sti
inc
push
stos
jno
xor
or
xchg
adc
enter
stos
std
loope
test
mov
ret
loop
or
add
push
xor
nop
insb
jae
inc
xchg
ljmp
int
movb
iret
pop
jno
inc
jp
xchg
in
pusha
jne
data16
lock
mov
mov
mov
dec
and
in
jno
jge
testb
jae
mov
les
mov
jae
dec
pushf
cmpsb
jno
add
shr
paddb
imul
jae
mov
jns
popa
inc
stos
mov
dec
jmp
mov
inc
jno
jle
fistps
dec
or
jo
dec
xchg
jno
jb
fidivrs
add
sub
lahf
pop
popa
inc
repz
inc
jbe
mov
jno
inc
push
mov
jno
xorl
jecxz
ljmp
mov
xchg
mov
sbb
and
jno
add
je
jno
xor
out
push
fwait
andl
dec
jae
lcall
pop
pop
pop
jno
shrl
jno
push
fs
jno
outsl
popa
lret
icebp
je
nop
jno
xchg
mov
inc
fs
out
jno
xchg
cmpsl
lea
dec
nop
jb
ds
popl
testl
jns
xchg
pop
jno
out
mov
xchg
jno
inc
adc
rolb
cmpsl
jg
mov
outsb
or
leave
lods
jp
cmc
pop
ds
jno
pop
fiaddl
sub
pop
jno
jo
pop
arpl
jecxz
push
repz
fsub
pop
and
jno
xlat
enter
loop
jno
imul
ss
sub
inc
jno
mov
adc
cmc
pop
jge
mov
mov
xor
adc
jle
daa
jo
push
push
jne
xor
inc
loopne
cltd
or
jno
jge
test
and
gs
mov
cltd
jno
aaa
inc
xchg
mov
shrl
dec
sbb
mov
jne
mov
add
jno
dec
mov
push
outsb
sbb
xchg
js
cmpsb
lret
mov
jno
pop
adc
xchg
xorb
xlat
dec
sar
call
fsubrp
nop
jo
repnz
icebp
jge
sub
and
dec
jae
idivb
pop
insb
and
jne
xchg
outsb
lds
jo
mov
icebp
lods
gs
pop
or
fldl
xchg
mov
mov
gs
cmp
cmp
call
jno
pushf
pop
cmpsl
adc
add
jno
loope
sub
dec
shll
cwtl
or
pop
xchg
jno
mov
ljmp
push
in
in
and
and
dec
pop
jns
jns
dec
inc
push
int3
jae
dec
pop
or
loop
stc
lahf
imul
aam
repz
cmc
pop
dec
mov
jb
or
call
jecxz
mov
cltd
lea
dec
and
mov
or
lea
push
pop
addb
fimull
sbb
lods
or
xchg
sub
shl
scas
push
push
jno
out
sbbl
inc
jmp
popf
inc
xchg
mov
sub
ja
clc
cs
inc
dec
cwtl
fs
push
into
jno
jp
xchg
movsb
pop
fwait
mov
mov
ficomps
mov
out
addb
cmpsl
xchg
outsb
enter
push
or
jno
repz
jg
fwait
test
jo
out
lods
cmp
mov
push
shll
and
test
fs
push
fdivs
mov
das
pushf
fcompl
stos
cmp
adc
pop
jne
jge
in
pop
sbb
inc
and
out
pop
lahf
test
jae
push
out
int3
sub
push
outsl
jno
sub
add
sub
add
jns
add
jne
add
hlt
test
adc
adc
fdivs
popf
or
xor
loop
jno
jle
js
push
jno
adc
movl
inc
add
iret
mov
in
dec
fdivl
jl
adcl
mov
stos
in
movsl
and
jl
cmpsb
test
xacquire
ja
imul
ss
mov
pop
push
mov
xacquire
sbb
mov
jge
int3
dec
push
cmpsb
bound
xor
je
lea
ret
out
mov
fcmovne
jno
and
mov
sub
cld
in
jbe
repz
and
and
push
jge
ja
push
add
jae
aad
call
push
hlt
sub
sub
daa
bound
stc
in
fstps
test
je
xor
and
jne
dec
stos
jle
in
push
inc
cmp
test
data16
jae
or
mov
ret
or
xchg
pop
movsl
int
mov
jb
in
rcll
sbb
push
movsb
js
mov
movb
jae
pop
pop
add
dec
jno
xor
push
ret
jno
js
filds
dec
cmp
pop
push
mov
pusha
xor
add
jno
int
stc
lods
inc
adc
pop
cmp
cmc
push
xchg
jne
dec
and
sub
test
pop
cli
jno
mov
adc
loope
imul
dec
jno
add
clc
or
jno
cmpb
pop
stc
cmp
lret
loop
outsb
insb
shlb
stos
mov
in
sbb
repnz
cmp
jns
call
pop
sub
sbb
jne
cmp
and
mov
dec
jns
mov
das
mov
fdivs
xor
stos
inc
outsb
sbb
sarl
hlt
lret
and
and
scas
adc
mov
mov
push
addr16
jno
call
in
jno
into
add
out
sub
adc
call
int
popf
ds
movsl
es
sub
pusha
jae
inc
into
shufps
ds
pop
inc
icebp
push
and
sarl
cmpl
std
push
push
sbbl
xor
push
pushf
mov
jne
daa
lret
xchg
dec
in
push
je
insl
mov
xchg
jne
cmc
adc
icebp
pop
jno
stos
stos
sbb
pop
repz
add
push
repnz
ja
cmp
rcll
jno
movsb
cs
loop
mov
aad
ljmp
jge
jb
rcr
sti
andb
icebp
sbb
dec
jo
pop
insb
dec
jno
jo
popa
or
cmpb
jno
std
mov
pop
and
pop
cmp
adc
mov
ds
xlat
ret
cwtl
adc
testl
push
lods
mov
inc
mov
jl
add
mov
test
leave
ljmp
rclb
xor
inc
lds
aaa
insb
cltd
add
xor
push
pop
insl
cmp
outsb
inc
sbb
lods
xor
or
je
mov
fiaddl
jae
bound
jno
repz
jns
sub
icebp
notb
lods
xor
or
cltd
sub
jl
cmpsb
in
jmp
rcrb
popf
sub
cmp
jp
outsl
and
add
inc
jno
rcrl
ds
jmp
shrb
out
jnp
add
and
addb
or
fnstenv
or
mov
test
popa
push
shlb
xchg
or
cld
mov
mov
push
test
xchg
fidivs
shrb
sub
jne
rcrb
lds
mov
cmp
and
mov
add
dec
xchg
and
scas
jno
sub
add
aad
mov
sub
cmp
sub
es
mov
xor
lahf
sti
pushf
pop
jno
filds
scas
fwait
or
jno
mov
dec
sub
addl
jge
lods
push
xor
jmp
jno
jnp
cmp
fistpl
int
mov
add
lret
pushf
and
popa
xchg
sti
mov
add
jno
loop
and
mov
movsl
sbb
push
arpl
sahf
push
xor
sub
jno
ja
mov
mov
movsl
jb
jl
fidivl
mov
jno
push
fldcw
lods
ret
sbb
add
dec
cmp
int
push
jno
mov
jge
and
add
jae
dec
insb
mov
stos
hlt
and
iret
bound
dec
lea
inc
int
cmp
call
rcrb
push
xchg
cmp
inc
sub
into
loope
aam
lods
mov
je
cmp
xchg
or
andl
pop
sub
shll
stos
fidivrs
xchg
int
repz
mov
movsl
xchg
inc
sub
daa
mov
inc
jb
add
pop
icebp
imul
ret
jo
lahf
cmp
in
mov
xchg
clc
xchg
fs
jae
insb
sbb
pop
jae
ds
cmpl
push
pop
mov
mov
int3
rcrb
xchg
mov
jno
inc
jl
int
add
aad
push
push
jb
in
pop
mov
hlt
addr16
jno
dec
dec
nop
in
call
or
stos
jno
or
xor
xchg
imul
sti
rcrb
addl
je
inc
jl
out
imul
push
jno
xor
jle
sti
adc
inc
lret
cwtl
jno
shrb
jns
hlt
mov
cmp
addr16
mov
cwtl
inc
les
int
mov
movsl
cmp
lea
scas
jnp
icebp
push
das
bound
popa
dec
and
jg
mov
ja
and
adc
and
test
mov
jno
call
movsb
mov
in
xchg
les
jne
mov
jno
jo
pushl
movsb
cmp
sbb
cmc
jo
mov
and
jno
jmp
outsb
dec
out
jno
xor
loopne
xchg
jnp
lea
jle
stos
xor
xor
je
rorl
adc
sbb
fbstp
pop
mov
jge
dec
push
lock
mov
or
in
mov
pop
bound
pushl
sbb
ss
ljmp
xor
int
adc
pop
jo
jno
sbbl
loop
scas
sar
pop
jno
mov
stos
xchg
and
out
movsb
xorb
push
pop
sbb
sbbl
xor
imul
test
jno
xor
sarl
mov
out
xor
je
shll
push
mov
fs
cmp
adc
or
dec
jno
jg
aaa
popf
mov
jno
jecxz
and
cld
notb
jno
add
dec
ret
in
xchg
or
jne
cmpsl
iret
cmp
test
fisttps
test
fmull
ljmp
ja
popa
cmp
and
shl
shrl
jno
filds
adc
lods
leave
lret
jno
and
popf
cltd
out
arpl
pusha
call
cmp
push
lods
popa
mov
mov
and
inc
jne
outsb
scas
xchg
ret
xor
sbb
sbb
out
test
adc
iret
jno
shll
pop
push
out
sbb
fsub
imul
rcrl
xchg
test
ret
das
je
pushf
xchg
test
loop
mov
not
shll
rcrl
sarb
jae
sub
scas
dec
xchg
inc
insb
and
sub
jno
imul
ret
inc
and
xchg
mov
inc
add
stos
and
sahf
rorb
push
imul
addb
add
arpl
call
test
push
or
mov
add
add
aam
fisubrl
call
jae
sub
insl
in
and
sub
xor
sub
rorb
divb
push
dec
push
roll
sub
int3
gs
daa
jbe
xchg
imul
jno
clc
lea
jno
cmc
movsb
sub
xor
jmp
pop
mov
cmp
adc
xlat
sub
inc
xchg
xor
shll
loope
xor
mov
lods
aam
pop
fistpll
shlb
xchg
xor
sbb
xchg
xor
pop
dec
hlt
fidivrl
and
lcall
fwait
mov
push
mov
enter
ret
xor
xor
xchg
sbb
pop
popa
adc
ljmp
jecxz
jne
mov
dec
test
push
pop
dec
in
xchg
imul
out
sbb
enter
jae
pusha
ja,pn
pop
pop
icebp
fs
repnz
jl
rolb
xor
push
xor
repnz
cmp
imul
loope
inc
loope
mov
push
or
mov
cmp
mov
mov
jp
xor
xlat
lock
dec
stos
sbb
pop
call
adc
xchg
jbe
xchg
xchg
or
push
add
lret
mov
inc
pop
xor
shrl
test
cmp
adc
sbb
mov
pop
and
push
bnd
cmp
in
lcall
jb
inc
mov
xchg
int3
push
ret
clc
ljmp
xchg
push
mov
gs
sbb
mov
adc
ds
and
mov
add
cld
popf
out
dec
mov
xchg
cmp
mov
popa
insl
inc
repnz
mov
inc
fnstsw
in
sub
mov
ret
jmp
add
pop
inc
rcll
dec
ror
lcall
push
test
pushf
adc
xorb
ffree
out
shll
sub
rcr
into
repnz
je
mov
push
out
lret
adc
aam
sti
imul
mov
and
shlb
dec
sub
loope
pop
sbb
pop
cmp
sbb
and
stos
jecxz
sahf
fwait
aam
popa
dec
scas
xor
push
stc
subl
decb
bound
pop
jb
sbb
xchg
jnp
ret
repz
push
xchg
lods
arpl
data16
movsl
test
jno
adc
xchg
dec
jbe
push
fadd
dec
cltd
repz
xorl
mov
outsb
sbbb
jl
xchg
dec
lods
jne
imul
into
stos
adc
mov
out
xchg
js
push
jns
dec
test
nop
add
xor
adc
lock
popl
mov
fstl
fs
xchg
mov
sbb
mov
icebp
out
ljmp
lret
xlat
dec
fdivp
sbb
subw
es
adc
mov
inc
mov
test
mov
xor
jns
or
adc
jp
xlat
push
sub
xchg
jl
jo
pop
adc
mov
pop
mov
rcl
repnz
cli
sub
loope
jo
iret
andb
jb
nop
idivb
fwait
sub
xor
lahf
mov
adc
hlt
push
mov
pop
jno
out
sarl
mov
fisubs
jno
push
mov
mov
push
inc
int3
repnz
gs
iret
or
pop
mov
inc
ljmp
test
jb
xor
inc
pusha
popf
orb
add
stos
jno
or
mov
out
jno
test
push
xor
push
ss
lea
in
pop
test
je
into
test
daa
jno
lret
xchg
repz
sbb
fbstp
or
test
sub
test
mov
mov
repz
loopne
insl
out
mov
int
jno,pn
lods
das
xor
jno
mov
roll
mov
or
dec
push
dec
jno
mov
shlb
out
out
jno
add
loopne
pop
jl
movsl
scas
gs
into
push
rcr
add
stos
mov
adc
scas
cmp
test
lods
mov
xchg
in
sub
sub
jno
xchg
sahf
fidivrs
popf
push
dec
xchg
jno
add
inc
and
fiaddl
je
sahf
ret
stos
pop
jno
add
bound
xchg
subb
push
pop
repnz
in
mov
movsl
jns
sbb
lcall
jecxz
cmpsl
addr16
adc
shr
mov
mov
sub
jne
add
lret
jae
fildll
dec
jno
lret
es
test
jno
hlt
and
xchg
jb
imul
ds
jne
mov
cltd
jne
cmp
jg
ja
xor
aas
jno
xchg
pop
push
std
nop
add
scas
jno
sub
ret
adcl
movsl
jno
fmull
adc
sti
aas
dec
sti
jae
or
xlat
jno
mov
sbb
cmp
jge
call
mov
jecxz
rcrb
ret
xchg
les
fs
adc
adc
push
push
sbb
lret
xchg
repz
gs
jno
in
xor
lret
sub
sbb
popa
sub
mov
push
daa
lret
mov
push
xchg
je
mov
mul
xchg
imul
jne
xor
jno
sbb
sti
mov
mov
jno
mov
or
ror
xchg
lds
cmp
inc
xor
adc
fmuls
mov
pop
xlat
into
mov
add
jno
int3
mov
xchg
lea
jae
mov
mov
jno
xorl
dec
jae
push
int
lahf
popa
fistpll
pop
sahf
jae
pop
scas
dec
xchg
jno
mov
jge
fwait
add
or
pop
inc
xor
mov
jae
rol
mov
imul
jle
dec
aam
or
cmc
scas
pop
jo
in
sub
lret
mov
lahf
out
mov
sbb
dec
ret
add
and
cli
dec
push
and
outsl
fidivs
mov
stos
fstpl
jno
push
adc
hlt
pop
jno
adc
lret
add
xchg
lods
push
std
stc
jae
dec
icebp
rol
in
sbb
jecxz
adc
xor
cwtl
jmp
lods
pop
dec
push
mov
hlt
xchg
sbb
mov
je
adc
jne
jle
cs
lds
shlb
sti
and
jl
lret
incl
sbb
xor
jae
cltd
int3
adc
jnp
jno
cmpsl
je
scas
test
fwait
xchg
bound
loopne
dec
xor
push
sahf
test
push
shl
aaa
fs
pop
and
outsl
inc
add
cmp
mov
jno
ror
mov
jno
iret
pop
sub
inc
dec
jne
daa
subb
loop
pop
push
jno
or
lahf
and
lds
inc
in
bound
lods
jae
sub
arpl
mov
lcall
outsb
dec
sbb
lds
outsl
sub
mov
jno
idivl
fs
sahf
or
mov
sbb
shl
sbbl
je
jge
xchg
mov
shl
in
adc
pop
push
dec
loop
stos
scas
dec
lods
cmp
ljmp
push
push
jno
cmp
xchg
jne
pusha
test
xchg
pop
std
or
test
add
pop
jno
lods
xchg
sbb
sub
pop
xor
jno
adc
inc
scas
lea
loope
les
dec
lods
jno
je
imul
dec
and
dec
inc
adc
fdivs
cld
sub
push
jno
mov
or
dec
inc
lods
in
inc
stos
cmp
shlb
repz
mov
sarb
sub
sub
jno
xchg
add
mov
inc
fldcw
jg
mov
xor
mov
mov
xlat
fsubrs
out
inc
or
cmp
popa
jne
pop
idivb
cwtl
and
in
insb
rorl
jle
jae,pn
xor
inc
popa
jno
inc
jge
mov
or
jg
test
push
jne
negb
int
jae
mov
cmp
iret
xor
jle
inc
pop
repz
cmpl
xchg
mov
or
jns
out
test
in
mov
xlat
mov
jae
pop
jne
sub
rolb
push
cmp
arpl
jno
mov
jno
xchg
push
test
xor
jno
es
xor
jno
mov
sbb
cmp
jno
push
neg
cli
jno
leave
fdivrs
std
mov
loopne
pop
or
mov
lret
push
jno
sub
mov
inc
adc
ror
mov
pop
faddl
jno
mov
xor
or
fstps
pop
pop
mov
jge
pop
or
jno
nop
je
adc
add
jno
mov
cmp
jno
aaa
and
jl
ds
push
mov
jno
iret
sbb
daa
out
and
in
movsl
stos
jno
aas
fs
dec
inc
scas
inc
and
jno
sub
out
repnz
pop
icebp
jmp
or
lret
insl
bound
fmull
xlat
gs
subl
push
dec
test
std
insb
sahf
xchg
fildl
in
jae
adc
icebp
mov
mov
stos
sbb
cli
xchg
repz
loope
push
aam
adc
lds
sbb
cmpsl
lods
mov
popf
sbb
mov
jo
sbbb
push
mov
cs
filds
mov
mov
arpl
roll
lock
xchg
popf
jae
cmp
push
dec
jge
mov
xchg
testb
jno
adc
test
movsl
imul
icebp
out
dec
inc
or
fldenv
adc
lea
aad
or
mov
out
push
push
fnstenv
and
lea
push
leave
test
loope
jb
cmp
xorb
fiaddl
repz
rclb
jno
jae
xchg
mov
pop
pop
push
fs
dec
sbb
jno
jge
or
shlw
jmp
cmc
mulb
icebp
stos
cmpsb
jno
std
lea
jp
je
mov
in
xchg
adc
outsl
add
ret
xor
in
and
int
sub
call
cmp
jns
repz
xchg
mov
jecxz
in
adc
lret
push
mov
lret
dec
inc
and
push
dec
es
mov
push
mov
push
push
adc
and
fisubrs
aam
add
shlb
jmp
test
imul
dec
pop
out
xchg
cmp
push
rol
out
imul
in
mov
call
adc
outsb
subl
add
aas
out
jp
in
sti
mov
scas
push
inc
icebp
mov
out
and
and
je
mov
outsl
mov
leave
jae,pn
std
repnz
scas
jb
xor
dec
jecxz
xor
ficoml
aaa
xorl
cltd
xor
jae
outsb
dec
sub
adc
mov
jb
fnstsw
lods
je
inc
adc
rcrb
adc
add
jg
cmp
adc
je
movsl
loope
cmp
jmp
cmc
and
adc
xor
jns
jno
adc
icebp
jno
push
pop
xor
in
mov
jno
inc
negl
jno
call
fimull
mov
in
hlt
pop
loope
adc
add
mov
ljmp
adc
lea
int3
mov
sub
adc
jae
pop
jge
add
aas
int
outsl
sti
cmp
jns
push
inc
xchg
sub
jno
test
and
in
es
outsb
inc
inc
jno
pop
dec
cwtl
mov
cmp
ret
mov
imul
cmc
pand
push
sbb
pushl
call
enter
jl
fnstsw
in
shlb
icebp
je
std
pop
jno
popw
jge
pop
loopne
popf
inc
lret
xchg
sub
and
jno
cmp
add
mov
pushf
lea
hlt
cmp
push
jmp
sub
mov
ja
je
xchg
jno
inc
cld
cmpsb
pop
xor
das
negb
push
or
adc
aad
or
sub
lret
push
rorb
dec
insl
repnz
sub
test
adc
push
aam
jnp
add
rcrl
push
lds
pushf
or
jae
outsl
xor
sti
popf
xlat
mov
in
repz
scas
mov
lds
jge
pop
mov
shrl
test
jecxz
test
fs
shl
jae
pop
repnz
mov
in
xor
dec
or
addr16
push
mov
sbb
imul
movsb
mov
and
fwait
jecxz
cmc
and
jmp
mov
mov
and
adc
dec
loopne
loope
jno
xor
pop
add
jmp
hlt
xor
in
sbb
nop
mov
cmp
fdivl
sub
cmp
lods
faddp
pusha
adc
dec
xchg
jno
cmc
repnz
shll
les
jno
add
adc
jmp
or
pop
testb
or
jno
mov
scas
filds
push
jno
clc
call
jecxz
jb
pusha
cltd
into
adc
mov
pop
mov
outsl
out
clc
push
xchg
xor
sbb
out
xchg
ljmp
out
mov
stc
pop
iret
fwait
rcrb
add
je
inc
mov
jne
ja
mov
dec
pop
jnp
xor
es
mov
nop
cmp
xchg
repz
xor
sub
add
push
fdivrl
pusha
fmul
jne
icebp
mull
daa
sbb
lock
popl
out
push
dec
fimuls
rolb
add
jmp
das
xor
nop
cwtl
bnd
lods
sub
xchg
loopne
mov
or
mov
xchg
in
repnz
jno
scas
dec
mov
mov
mov
jmp
jl
movsl
lds
lods
sbb
or
jne
push
jmp
test
jne
les
pusha
je
nop
adc
mov
lods
rolb
jno
push
test
repnz
testb
stc
or
jns
cld
test
out
fs
cmp
sub
test
xchg
jbe
jecxz
jns
sahf
mov
lods
cmp
pop
mov
adc
jno
mov
cmp
jno
fs
lock
inc
popf
xchg
jno
mov
dec
jb
neg
jno
outsb
add
push
xchg
mov
inc
psubsb
test
push
add
jno
mov
sbb
pop
xor
jno
sub
paddsb
push
jno
arpl
inc
shlb
pusha
and
xchg
jno
xor
inc
imul
jno
xchg
push
jg
ret
aaa
jns
xor
stos
adc
mov
xor
jno
inc
in
mov
ss
mov
jmp
inc
cli
or
xor
scas
add
xchg
fsubrs
jno
in
push
repz
jno
jnp
cs
and
lock
xchg
insb
push
sub
imul
pop
fldt
jno
rol
xchg
mov
mov
and
jno
aad
flds
inc
mov
movsl
mov
pop
ficoml
xchg
sub
push
int3
mov
push
lock
push
in
int
fs
jg
xchg
xor
jno
jae
jo
in
outsb
dec
jno
stos
xchg
xor
jno
jg
cmp
jno
dec
xchg
cmpsl
dec
fistps
inc
sti
je
mov
lahf
lds
or
and
jmp
and
mov
shrb
je
gs
lea
in
icebp
std
fwait
rol
or
mov
je,pn
in
mov
and
mov
scas
jno
lret
and
mov
and
mov
pop
xor
xor
jno
scas
mov
pop
popf
int
sahf
mov
adc
xchg
in
fidivs
or
pop
gs
inc
add
lods
popl
je
xchg
push
popf
sub
jnp
addr16
pop
jno
loopne
movsb
imul
xchg
lds
push
lcall
mov
rclb
cmc
jae
mov
shll
or
fcompl
fstps
pop
push
add
insl
repz
dec
fsubl
in
jno
aad
xor
adc
jno
rorb
cld
add
aam
mov
in
cwtl
jno
pop
ds
jb
out
jno
test
jnp
jno
mov
fs
repz
sbb
add
ret
dec
pop
arpl
leave
jno
inc
jns
push
das
mov
sahf
pop
jae
imul
call
jp
push
test
cltd
xchg
xor
xchg
insb
mov
rcrb
scas
xchg
push
mov
xchg
mov
push
pop
push
jno
add
jno
mov
jle
cmpsb
pop
hlt
and
mov
scas
jno
enter
test
dec
push
imul
lea
jno
lret
jno
test
pop
sti
push
int
jge
scas
pop
jnp
pop
push
push
mov
lahf
mov
imul
jo
nop
mov
and
test
xchg
or
rcr
in
jno
xchg
lds
jno
out
push
movsb
test
fwait
sbb
cmc
or
add
mov
jae
je
pushf
sub
pop
jl
clc
test
sbbl
pop
daa
pushf
test
jl
push
int3
push
mov
incb
inc
mov
in
or
jno
pusha
shll
sarb
jge
cmpsl
sub
adc
and
dec
xor
xchg
xchg
sub
jno
add
sub
jno
and
test
aam
adc
imul
xor
and
aam
or
popa
jle
and
inc
xor
mov
cwtl
js
xchg
cmp
nop
mov
xchg
not
insl
popa
mov
xor
in
stos
jne
add
or
or
popa
mov
xacquire
xor
jmp
scas
adc
jno
imul
dec
add
dec
jno
and
test
adc
lea
mov
outsb
add
jno
sbb
out
movsb
mov
aad
loope
or
jno
push
jg
sbb
lods
push
jno
push
dec
jmp
lea
insl
jle
jne
aad
cmp
xlat
sub
repz
clc
pop
inc
xchg
cmp
aad
push
inc
icebp
daa
cmp
mov
popa
leave
je
shlb
mov
out
insb
sub
std
pop
stos
out
jne
stos
pusha
push
lret
mov
movsl
jne
cmp
gs
stos
jns
clc
push
insl
inc
lods
mov
or
mov
adc
out
sub
and
mov
cmp
adcl
inc
inc
cld
nop
xchg
into
push
push
dec
mov
jle
adc
mov
sti
stos
mov
cli
inc
xor
outsl
mov
mov
push
popf
jmp
lods
in
or
mov
ds
leave
hlt
imul
sti
xchg
jge
movb
sbb
aad
out
mov
mov
cs
movsb
stos
lods
xchg
pop
in
jo
push
imul
shrb
mov
sbb
lret
xor
jno
and
adc
jno
movl
pop
xchg
stos
sbb
jno
js
popf
mov
lahf
int
lea
mov
adc
nop
adc
xchg
push
jno
fdivr
idiv
test
inc
shrb
mov
and
insl
xorl
je
and
jno
mov
add
adc
push
jnp
sub
cmp
lea
loop
xor
movsb
jb
jno
jmp
int
hlt
cwtl
mov
jno
rclb
adc
lock
scas
push
jb
mov
ja
jne
cmpsl
or
daa
in
in
jno
xchg
repz
aas
add
sti
add
insl
stos
jmp
mov
ficomps
jno
and
mov
lods
sub
jmp
adcb
nop
dec
fidivrl
push
dec
les
cmp
pop
dec
sub
jne
int
popf
std
sub
push
inc
push
jae
sbbl
pop
sbbb
adc
fcompl
jne
gs
or
hlt
icebp
and
lods
xchg
mov
or
or
sbb
daa
pop
jmp
leave
mov
mov
or
cmp
jno
mov
addr16
outsb
arpl
push
inc
push
xchg
dec
shrl
jne
fdivrl
mov
sahf
jnp
subb
push
pop
sub
jno
out
push
jg
negb
jno
rcrl
mov
out
test
nop
push
outsl
jno
or
sbb
pop
aaa
sbb
lea
jb
sbb
jno
pop
ret
jg
push
addl
arpl
iret
xor
dec
loopne
jne
lret
push
ja
call
add
cltd
cs
dec
inc
fs
test
xacquire
ds
aad
sbb
mov
xor
lret
vpaddusb
in
addr16
push
jno
mov
loopne
cmp
mov
and
inc
call
push
in
cmp
out
or
test
jno
cmp
cli
or
fwait
push
inc
hlt
loop
jno
mov
push
jle
adc
mov
fnsave
imul
jno
inc
das
dec
sub
push
mov
scas
push
bound
jno
add
sub
and
jno
lock
or
lea
xchg
inc
arpl
jno
cmc
adc
mov
add
adc
in
jno
inc
cmp
jnp
push
jno
add
subb
jno
loope
icebp
mov
fdivrs
daa
sbb
fildll
mov
leave
ss
dec
dec
push
push
cwtl
xor
xor
jbe
mov
cmp
add
scas
lock
pop
data16
inc
jp
test
jae
aas
push
lods
jno
adc
repz
inc
shll
pusha
add
lock
mov
inc
cmp
ja
lcall
jge
adc
loopne
inc
cmp
sbb
jno
insb
mov
adc
xorb
mov
mov
es
pop
int
jno
dec
fdivs
jno
xor
pop
cmpsl
xchg
xchg
and
dec
insl
dec
push
dec
inc
push
push
jo
adc
aad
les
jnp
jno
mov
or
inc
dec
aam
xchg
dec
jge
xchg
popa
jl
fcomip
xor
push
push
daa
dec
pop
loope
cmpsl
mov
push
loopne
pop
leave
and
in
addl
mov
mov
pop
sub
ret
idivl
rclb
jno
pop
loope
sub
jno
add
daa
std
mov
inc
lods
jbe
mov
jno
aam
fistpl
popf
test
jb
aas
outsl
sub
push
xchg
test
jno
mov
add
inc
push
int
dec
or
mov
dec
into
jb
pop
lods
jno
cmc
xchg
xchg
push
testl
loop
aad
push
cli
sub
lea
xlat
lods
test
cwtl
jb
out
jno
push
sbb
push
popa
orl
out
fwait
adc
pop
jns
mov
pushf
adc
call
sbb
push
mov
jno
das
jg
leave
mov
mov
cli
test
je
lds
jno
mov
clc
mov
cmc
inc
jno
push
lahf
inc
out
int
out
mov
push
and
aaa
inc
into
push
das
mov
jno
xchg
lret
jno
push
xor
std
subps
jge
sub
jmp
outsl
fstp
jno
mov
sbb
sbb
jne
pop
pop
push
loopne
lret
out
add
lcall
pusha
js
push
jae
pop
je
loop
mov
xchg
mov
lea
mov
dec
and
clc
leave
push
cmp
jne
das
shrd
ss
sub
jno
popa
jo
leave
jmp
and
jne
adc
or
sub
shl
pop
cmp
jno
int3
popf
mov
xchg
mov
aam
arpl
mov
cltd
xor
ret
jno
adc
ss
loope
fisubs
ret
lcall
mov
cmp
gs
and
xchg
cmp
ss
imul
mov
test
in
xchg
pop
jno
push
aaa
cmc
inc
in
mov
adc
ljmp
dec
das
xor
out
or
add
pop
pop
outsl
inc
jae
jae
cmp
adc
daa
out
jbe
xchg
push
ret
test
xchg
fldcw
xor
dec
xchg
mov
pusha
jno
mov
ss
imul
jge
ret
sti
pop
repz
inc
adc
mov
jno
loop
je
les
stos
jno
outsl
lahf
out
xor
aas
mov
pop
inc
pop
and
loope
mov
iret
sbb
mov
dec
jno
pusha
or
rclb
cmp
jno
ja
adc
jno
cmpsl
mov
mov
sub
es
divb
xchg
pop
in
mov
sbb
xor
jecxz
shll
sbb
push
mov
aas
mov
jge
xor
hlt
fisubs
or
jmp
and
iret
push
lds
pop
push
test
gs
push
sub
icebp
sbbl
je
xchg
add
sub
cltd
add
mov
sub
jno
cmpsl
xchg
fwait
cld
xchg
push
test
jb
scas
sbb
les
mov
pop
pop
adc
add
lods
es
pop
push
hlt
xor
daa
adc
fwait
pop
pop
rcrl
pop
loop
add
loope
xor
jle
jno
fwait
mov
jno
cmp
sbb
outsl
rorb
jno
mov
mov
xor
outsb
jp
aam
or
aas
jns
es
icebp
sbb
jno
daa
add
add
add
or
stos
fidivs
in
loop
sbb
gs
stos
je
sahf
bound
push
shll
jno
insl
mov
mov
daa
adc
cld
pop
inc
addr16
adc
sahf
fdiv
lods
out
cli
imul
jp
jno
cmpsb
rcl
stos
out
inc
test
pop
sub
push
or
sub
or
out
or
push
fidivs
xchg
ja
out
insb
mov
cs
scas
jno
test
inc
mov
int
hlt
inc
pusha
jne
or
hlt
push
mov
pop
int
imul
or
mov
lods
out
scas
int
pop
dec
jae
stc
dec
inc
sbb
pop
std
lcall
push
ds
loope
jmp
mov
xor
jl
jb
pop
sti
pop
int
xchg
mov
mov
shrl
test
inc
add
lock
sahf
jns
js
pop
or
out
add
dec
and
lock
add
les
mov
imul
jno
sarb
cmp
add
pop
cmp
sub
inc
inc
sub
int3
aam
jno
sbb
mov
pop
xchg
lock
sarl
rclb
adc
repnz
jg
test
mov
daa
jno
mov
or
rcr
inc
or
mov
aad
mov
xchg
sbb
adc
mov
mov
xor
push
pop
jp
push
rcll
xor
xchg
shrl
sbb
testb
test
push
jl
mov
or
test
hlt
std
ja
mov
test
and
outsb
out
jbe
sub
sbb
mov
inc
pop
add
cld
out
adc
xor
aas
jae
shll
xor
lods
xchg
scas
ja
aam
xchg
xor
xor
into
mov
jecxz
test
push
inc
jno
pop
cmp
mov
inc
jne
in
jmp
or
xchg
stc
mov
mov
lds
mov
jecxz
push
lods
jno
adc
fdivl
nop
lods
ret
loopne
scas
repnz
loope
jae
jno
mov
mov
enter
xlat
je
mov
aas
push
loopne
gs
sbb
cmp
lcall
xchg
xor
mov
sub
negb
clc
insb
pop
loopne
js
je
fstpt
add
push
inc
je
inc
les
pop
cmpsl
lods
fidivl
jecxz
lea
fldt
aam
lcall
je
push
xor
add
nop
in
repnz
cmp
mov
cld
pop
out
pop
call
xor
mov
jmp
sahf
adc
test
test
imul
push
dec
ret
push
jno
xor
mov
jno
adc
fs
repnz
and
add
arpl
jp
js
insl
ljmp
das
xchg
sub
jno
enter
cmp
or
mov
jno
mov
neg
enter
nop
shr
andb
in
into
test
test
ja
xor
loop
jno
cs
je
lds
xchg
fs
push
cmc
mov
outsb
xor
mov
add
test
jg
inc
mov
jns
push
inc
mov
out
jno
cld
enter
imul
push
push
pop
xor
jno
pop
sti
jae
jle
xchg
jno
fstpl
xorb
fdivl
mov
and
mov
jb
flds
jbe
jno
adc
sbb
lock
gs
and
pop
cmp
cmp
je
add
or
out
jge
rcl
enter
movsb
ficomps
jno
cmp
mov
outsb
mov
jno
clc
jbe
dec
push
mov
cmp
mov
aaa
stos
inc
in
push
inc
xor
imul
jno
cmp
rcrb
insl
xchg
push
mov
and
jno
into
adc
mov
mov
fstpt
mov
scas
aad
jge
xlat
aam
popa
repnz
push
mov
or
mov
addr16
jge
aaa
inc
push
sahf
jno
jns
in
sbb
xchg
jne
jae
testb
push
data16
xor
xchg
pop
inc
repnz
cli
cmpsl
xor
icebp
jno
jmp
mov
pop
add
in
lods
ljmp
leave
clc
sti
adc
and
arpl
outsb
bound
jne
xchg
repnz
lods
dec
adc
or
cmpsb
mov
daa
in
jno
mov
in
sbb
jno
add
popf
or
jno
pop
mov
jecxz
add
out
lret
pop
pusha
frstor
jno
mov
or
aaa
or
clc
arpl
jno
and
iret
fcomps
outsl
add
outsb
call
push
movsb
movb
jno
divb
push
jno
call
mov
xor
loop
adc
jno
pop
or
shl
insl
xchg
jl
xchg
int
xor
jns
jno
mov
mov
inc
xor
xlat
lret
jno
sbb
aaa
jmp
dec
out
fwait
cmp
repz
push
jno
out
hlt
add
leave
mov
aam
decb
inc
aad
pop
pop
addb
xor
add
mov
or
adc
cmp
es
xor
ss
lea
sbb
pop
jb
loope
xor
adc
xchg
dec
ja
mov
mov
loope
and
aad
sbb
push
stos
dec
push
adc
dec
jno
scas
sub
xor
lea
adc
xchg
xlat
sub
lock
lcall
or
jge
cmp
lods
dec
cmp
test
pop
mov
mov
cld
jno
jp,pt
mov
sbb
test
in
jno
mov
popa
xor
xchg
xor
scas
and
cmp
add
fnstsw
stos
mov
pop
roll
pop
jge
sbb
pushf
inc
dec
jno
add
lret
inc
sub
xchg
adc
cmc
adc
dec
out
mov
cltd
push
flds
push
push
pusha
incl
je
sti
dec
repnz
lcall
jno
jns
or
incb
xor
scas
nop
add
mov
dec
jg
push
int
pop
test
jne
xor
insb
in
mov
ja
xor
cltd
jg
inc
pusha
shll
mov
ret
imul
jno
inc
pop
cld
lcall
pop
ss
jno
pop
push
daa
testl
int
xor
push
add
shll
test
jg
dec
sub
fdivl
in
xchg
fmuls
mov
test
loopne
sbb
add
sub
pusha
jno
xor
ss
stos
dec
cmpsb
jno
pushf
xor
bound
adc
jno
cmpsb
enter
jge
jno
jecxz
xor
jne
push
mov
ds
adc
test
lea
cmp
and
jbe
xchg
push
mov
test
mov
jno
stos
insl
stos
dec
shl
enter
lods
jo
loopne
jmp
jae
cmp
stc
jno
js
sub
pop
into
mov
cmp
mov
add
jno
testb
pop
jg
adc
mov
jno
push
push
dec
jle
cwtl
test
hlt
js
lcall
jne
jg
icebp
mov
lods
jno
mov
lods
popa
mov
js
sub
subl
sbb
inc
scas
dec
mov
rolb
mov
sbb
test
add
xor
adc
addl
pop
int
fs
pop
shr
ds
push
pop
jno
dec
repz
mov
cmp
xor
arpl
int
les
push
fwait
adc
in
cmpsl
jno
je
pusha
js
mov
mov
jno
pop
out
sbb
jge
sbb
faddp
inc
mov
jns
je
mov
jno
pop
sub
ljmp
inc
mov
subl
mov
icebp
andb
pop
test
mov
cmp
aad
sub
and
jno
inc
pop
out
jmp
mov
mov
xorl
jge
xor
hlt
push
pop
push
fsubl
mov
test
int3
pop
xchg
sub
push
pop
push
pusha
out
repnz
lds
jle
stos
push
adc
xor
pop
push
in
jno
sbbl
imul
lods
cmp
call
imul
and
jecxz
mov
lds
shl
cltd
mov
cmpsb
addr16
test
or
daa
sbb
lea
repz
sahf
jne
sbb
jmp
sub
mov
lods
iret
jae
push
aad
mov
cmp
insl
push
fistpl
std
push
push
fldenv
ds
mov
test
push
cwtl
mov
sarl
jae
repnz
fidivrs
cmp
insb
mov
mov
jno
fisubs
xchg
push
mov
jno
push
mov
enter
in
mov
loop
jp
jno
fldl
ds
mov
jno
and
cmpsb
daa
call
push
sbb
lea
popf
rorl
bound
pop
lea
mov
fdivr
stos
pop
popf
inc
js
repnz
mov
fs
jno
in
jg
aad
lods
mov
sbb
sub
jno
sub
ss
lret
mov
repnz
jge
ja
mov
jno
pop
ret
mov
popa
pushf
mov
lea
mov
xchg
inc
ret
loop
ds
daa
shll
sub
push
push
and
out
sbb
and
jno
jle
push
or
into
jne
cwtl
inc
cmp
mov
repz
push
out
outsl
pop
push
divl
test
sbb
inc
inc
sahf
jno
out
pop
outsl
cmp
lods
fistl
ljmp
jne
cs
cmpsb
inc
adc
sbb
push
cmp
add
jns
mov
test
pusha
jno
mov
xorb
shll
and
repz
jne
pop
jno
mov
mov
repz
jno
push
push
dec
inc
mov
jno
pop
fsts
push
sbb
jae
sbb
test
repz
xor
xorb
dec
sub
inc
and
std
loope
pop
outsb
xchg
ret
movsb
dec
enter
in
mov
xor
push
incl
mov
scas
std
inc
mov
cmc
frstor
outsb
jno
sbb
cmc
pop
sub
jno
flds
jne
push
aam
dec
dec
inc
test
push
jno
scas
sub
cmpsb
addl
or
js
jae
outsb
cmp
xchg
sahf
addr16
cltd
and
cmp
jnp
mov
out
lock
dec
enter
add
iret
xlat
jl
imul
pop
loopne
jno
lock
in
mov
dec
xchg
mov
sub
shlb
push
in
out
cmpsl
je
mov
jno
pop
push
add
mov
xchg
jmp
out
fyl2x
shll
jno
lahf
clc
sti
xchg
fsub
cld
movsb
lea
out
mov
movsl
and
sub
pop
sbb
repnz
jno
test
jecxz
dec
sbb
jno
and
adc
push
bound
pop
cs
push
xor
adc
ret
pusha
jae
int
mov
call
shrb
mov
not
xchg
je
sbbw
push
lcall
loope
mov
bound
jno
icebp
jle
cltd
loopne
fcoml
jno
pop
loop
fidivl
test
inc
add
jne
inc
mov
jmp
jle
icebp
mov
gs
xchg
lods
pop
rorb
cmpsl
add
inc
jno
jmp
pop
sbb
hlt
xchg
sub
xchg
xlat
les
lret
pop
xchg
ret
cld
jns
fsubrs
insl
add
inc
lahf
add
xchg
mov
dec
push
repnz
jae
mov
pop
xchg
outsb
dec
leave
mov
mov
jno
popa
adcb
inc
adc
es
arpl
test
pushf
lds
and
clc
mov
inc
mov
loope
les
shll
out
int3
popa
es
sbbl
enter
icebp
ret
nop
imul
dec
xchg
popf
cmc
xchg
jae
bound
subl
xchg
pop
xor
xchg
mov
pop
mov
dec
mov
and
hlt
push
push
cmp
inc
jno
xor
xor
leave
sub
xor
adc
pop
adc
xor
and
mov
jae
lods
jno
xor
mov
add
jno
adc
loope
lds
ja
adc
sub
loope
into
js
xor
xor
jae
std
daa
jle
lods
movsb
mov
shrl
mov
repnz
pop
dec
sbbl
jno
or
pop
sbb
test
aad
paddd
test
sar
xchg
stos
cmc
pusha
nop
insb
xor
pop
xor
jne
mov
xchg
xor
incl
jae
nop
test
adc
test
shl
hlt
jno
inc
push
dec
aaa
bound
les
cmp
out
cmp
mov
mov
rclb
mov
cltd
lods
cmpsl
or
enter
push
xor
mov
lea
fstpt
xor
xor
mov
dec
scas
inc
xchg
cmp
je
jno
xor
leave
pop
insb
push
jne
jnp
sbb
sub
pop
aad
clc
je
xchg
int3
cltd
test
jne
lea
and
dec
jno
push
outsl
cs
jns
push
out
lcall
pop
hlt
push
in
mov
in
jb
pop
mov
xor
xor
mov
repnz
and
enter
std
and
sbb
mov
stos
pop
jns
roll
cltd
push
push
and
jno
sbb
loop
dec
mov
inc
cltd
or
sub
icebp
jmp
xor
jno
je
sub
xchg
jno,pt
adc
shlb
shlb
mov
fwait
pop
dec
xor
mov
xchg
sub
jb
sub
cld
cltd
jno
test
sbb
xor
sbb
dec
stc
jl
jno
dec
popa
sub
jno
pop
das
imulb
fidivrl
rorl
pop
lods
aam
pop
push
cmpsb
jno
popf
cmp
push
mov
ret
pop
js
mov
rcll
mov
das
jno
leave
inc
jle
stos
mov
push
test
aas
insl
sbb
mov
js
lock
lods
jp
int
mov
jnp
lea
pop
cwtl
xchg
xlat
in
jno
inc
pop
jb
repz
imul
jne
sub
and
call
icebp
sbb
sub
test
sbb
jge
shlb
jae
repz
pushf
ja
mov
icebp
jp
jno
repz
fisubl
xchg
adc
ret
ss
add
pusha
mov
mov
idivb
and
add
push
jno
bound
jmp
ds
push
pop
int3
out
jno
inc
push
outsl
sub
xchg
jno
or
and
movsl
sbb
sub
ja
outsl
out
addb
je
aad
movsb
sbb
repnz
mov
dec
xchg
rcrl
lret
xchg
mov
scas
je
push
inc
sub
or
pop
sub
jmp
ss
test
leave
aad
es
mov
pop
sbb
mov
clc
fnstenv
imul
call
cmp
xor
and
into
loope
or
repz
stos
jae
repnz
cltd
or
lea
mov
sbb
or
mov
add
jno
stos
jp
cmpsl
pushf
sub
pop
jl
lret
lea
or
jno
pmuludq
or
push
xor
cmpsl
dec
in
xor
rcrl
pop
fbstp
pop
inc
inc
push
lods
les
push
call
fcomps
jge
mov
dec
outsl
aam
loop
add
dec
push
cltd
add
repz
jle
cmp
push
mov
and
sahf
sub
push
shl
test
orb
dec
and
loopne
cld
adc
shr
pushf
imul
popa
loope
push
and
daa
scas
cltd
jae
add
in
sub
inc
adc
dec
inc
adc
dec
hlt
stos
insl
jae
mov
pushf
shrb
enter
pop
jmp
loop,pn
shll
mov
fwait
mov
lods
jno
xchg
adc
dec
daa
dec
xor
push
repz
pop
inc
mov
testb
push
jno
pop
in
lods
jl
xor
jge
imul
hlt
cmp
jnp
jns
dec
mov
movsb
cmp
mov
out
jno
mov
cli
cmpb
rcrb
dec
aaa
xchg
rcl
jno
insl
push
sub
lea
jmp
enter
sub
test
lods
jp
loope
jb
push
or
mov
jno
es
repnz
inc
sub
xor
jno
add
arpl
pop
jno
xchg
loope
add
xor
fcmovbe
adc
mov
je
or
in
push
cmp
mov
jmp
les
cmpsb
stos
mov
in
iret
lcall
dec
cmp
icebp
shlb
pop
xchg
cs
insb
pushf
jae
call
cmc
sbb
divl
add
and
stos
jno
ret
nop
xor
dec
mov
jno
inc
pop
jg
or
jno
outsb
inc
pop
push
add
mov
into
xor
sbb
add
and
pop
xor
dec
or
jb
dec
into
and
push
jne
in
ljmp
out
sarb
jno
aaa
push
mov
push
pushf
leave
jno
xchg
or
sub
cmp
icebp
cltd
xchg
shrb
lds
cmp
rcll
add
xor
pop
pop
cld
jae
fadds
jne
xchg
and
adc
loop
test
xor
jne
out
xchg
data16
inc
jno
sahf
cmp
or
fnsave
xor
push
pushf
jge
std
cmp
sbb
sub
jno
dec
sub
pop
pop
xchg
adc
lea
daa
dec
pop
jge
fldl
cli
shrl
xchg
mov
jno
jle
inc
shlb
mull
inc
aam
jbe
leave
out
cmp
sub
sub
and
es
sbb
imul
xchg
jno
or
lea
aas
add
xlat
push
cmp
xor
pop
mov
bound
pop
movsl
jno
sarb
testb
addr16
or
xchg
jmp
cltd
jno
xchg
fwait
inc
lods
subb
mov
xchg
aad
jno
jbe
sub
push
es
and
jne
dec
pop
jno
mov
or
xor
mov
cmpb
aam
pop
sub
push
in
adc
pop
cli
dec
pop
xchg
jno
fsubrl
cmp
in
jno
sbb
outsb
nop
insl
pop
adc
repz
jmp
stos
jno
sub
pop
xchg
int
jg
rol
nop
sbb
outsb
shr
test
jno
inc
xor
pusha
loop
mov
dec
push
push
shlb
arpl
or
jno
pop
lds
js
mov
in
mov
push
jge
pop
pop
in
add
jae
pusha
push
jno
mov
pop
add
cltd
fidivs
test
into
mov
xor
adc
vmulps
pop
scas
pusha
jge
push
and
mov
dec
movsb
hlt
or
mov
pop
popf
lea
dec
xchg
scas
es
ret
push
mov
sub
mov
pop
aad
jge
out
jae
add
les
stos
mov
imul
jo
sbb
jne
mov
subb
je
sar
in
adcl
jno
push
iret
add
ss
jno
dec
fcoml
jge
int
lret
std
fwait
cwtl
or
jo
sub
ret
out
loopne
push
cmp
fcmovb
pop
lahf
mov
ss
mov
mov
stc
jb
test
fs
mov
adc
fidivl
out
or
mov
sub
jne
aad
lcall
scas
lea
jns
in
mov
repnz
insl
iret
jno
sub
sti
jno
std
fmuls
push
sub
fs
jp
push
and
pusha
adc
out
xchg
subl
fnstcw
mov
lds
movsb
sbb
mov
test
lcall
ja
in
xchg
jno
pop
lods
popa
sar
xor
jno
cs
sahf
mov
mov
ret
int3
repz
outsl
xchg
cltd
cmc
test
mov
scas
in
add
pushf
push
cmp
hlt
mov
fisubrl
cmpsb
xor
mov
xchg
add
lods
repz
clc
cmp
sub
pop
outsl
repz
mov
mov
cmp
add
jae
ret
inc
inc
jne
loop
mov
add
and
loop
mov
mov
cmp
fcomip
xor
in
pop
jne
cmpsb
hlt
scas
sub
xchg
jne
pushf
cmp
push
add
ss
jmp
push
dec
jno
pop
sub
lea
xchg
mov
jne
mov
pop
jno
push
xor
aaa
jno
adc
rorl
fdivp
lret
movsb
scas
or
sbb
cltd
xchg
fwait
mov
push
pop
dec
repnz
sbb
inc
push
repz
inc
mov
and
jge
pushf
fcmovbe
fsubs
xchg
rorl
adc
cmp
xor
ds
jl
cmpsl
mov
dec
daa
fcompl
loope
push
daa
jno
mov
jge
jge
andb
fwait
jmp
or
sbb
pop
stos
mov
add
pop
cs
lods
add
fists
ds
xor
jo
stc
cmc
fcomps
jno
xchg
iret
mov
scas
popa
pop
fiaddl
add
outsl
mov
cmp
cld
adc
add
cmovne
sarb
xchg
popf
fwait
mov
pop
push
addl
jb
mov
repnz
fstl
cltd
jo
mov
inc
icebp
loope
loop
jno
xchg
lods
sbb
sarl
xchg
jl
push
sbb
jno
inc
loopne
xor
gs
repz
fsubr
add
dec
insl
testl
mov
icebp
adc
mov
mov
add
xchg
jno
loope
enter
out
jno
mov
add
nop
pop
and
xchg
jmp
test
or
and
bound
int3
adc
jno
filds
mov
out
fistl
mov
fdivrl
push
les
sbb
jno
lret
adc
call
js
mov
push
fsubs
xchg
in
ss
adc
pushf
mov
push
jno
stos
mov
ret
jno
loope
xchg
inc
add
cmc
jno
lock
stos
mov
movsb
popf
leave
cmp
xor
inc
mov
loopne
repz
or
addl
or
push
jno
xor
bound
push
mov
lea
es
imul
loop
ja
in
mov
mov
orl
jnp
jno
inc
insb
xchg
fisubl
cmp
dec
pushf
cmp
xor
lea
into
stc
jae
add
dec
inc
jno
add
out
fwait
push
xorl
addr16
shrl
jno
lods
loope
push
or
ret
sbb
sub
lods
js
push
mov
loop
dec
inc
jno
dec
mov
push
sub
es
jle
mov
jnp
sahf
test
adc
jae,pt
outsl
shl
pop
push
xchg
jo
aaa
cmp
imul
adc
jns
sub
hlt
push
jnp
inc
lahf
mov
movsb
pop
cmp
mov
aad
stos
lds
sahf
fwait
jne
push
cli
fs
xchg
adc
je
inc
or
fs
popf
ds
pop
sub
adc
pop
sub
les
sbb
mov
mov
dec
fildl
mov
dec
jno
data16
movl
je
add
lret
and
adc
aaa
pop
hlt
mov
add
push
lea
mov
push
push
jno
in
js
sbb
ds
jb
popa
cs
or
mov
inc
jl
xor
mov
mov
jp
pop
jno
mov
fildl
cli
mov
jno
mov
je
xchg
cmp
aaa
dec
jno
fwait
loopne
jecxz
jge
jae
fcoml
sub
loope
push
loop
scas
xor
insl
icebp
mov
pop
sti
lds
add
cmpsb
sbb
in
cltd
dec
cmp
mov
cld
jno,pn
add
cwtl
jno
lret
mov
test
in
sbb
jg
jmp
addb
mov
jno
push
rolb
fisttps
jo
cmp
rorb
jge
cli
xlat
sub
sub
sbb
mov
jno
mov
push
ret
push
and
cmp
cmp
and
mov
xor
inc
xchg
jno
sub
mov
jno
jnp
dec
aaa
addr16
testl
push
insb
jno
ret
mov
rolb
and
cmp
dec
jb
jp
jno
add
addr16
jmp
dec
xor
push
push
push
lock
mov
lds
adc
enter
js
xchg
push
mov
shrl
icebp
mov
call
or
mov
pop
jae
mov
fwait
push
jns
cli
dec
push
in
sub
dec
movsb
jg
in
jae
mov
mov
push
push
mov
mov
lods
pop
push
push
ficompl
pop
nop
push
mov
inc
int3
jno
cs
xor
popa
jno
jae
aad
and
rcll
cld
js
xchg
mov
insl
sti
mov
or
fnstsw
jno
xor
js
jno
add
dec
subb
lret
addr16
js
jno
sbb
dec
lea
and
pop
outsl
fs
scas
jmp
aad
cmp
ficoms
in
daa
pop
and
jge
jge
addr16
outsb
arpl
xlat
or
fsubrl
push
movsb
jecxz
sbb
jno
aam
popf
jne
nop
jno
push
cli
dec
imul
jae
push
lock
sbb
jecxz,pt
xor
cwtl
test
cmp
ficoml
sbb
adc
into
jno
inc
jns
insb
das
inc
add
and
je
mov
push
rorl
xor
adc
leave
fs
subl
fdivs
int
xor
aam
xchg
push
es
ret
int
mov
xchg
dec
mov
insb
mov
pusha
neg
bnd
sbb
inc
jae
sbb
mov
gs
test
lret
outsb
ret
test
icebp
cmpsb
mov
outsl
test
fdivp
xorb
imul
xor
lods
lods
mov
hlt
mov
mov
outsl
ljmp
jno
dec
mov
arpl
push
popa
frstor
or
dec
cmp
or
aam
mov
ret
adc
outsl
inc
lret
loope
xchg
ja
xchg
cmpsl
sub
pop
stc
pop
adc
push
jno
push
or
ds
xchg
lret
jno
mov
add
cmp
jno
loop
mov
jno
cmc
pop
pop
shlb
or
outsb
outsl
adc
shll
dec
mov
leave
jae
add
sub
sarl
int
push
aaa
ds
fcom
je
jge
into
add
xor
jb
dec
in
push
inc
mov
enter
pop
les
pop
jp
mov
mov
mov
lods
mov
lea
imul
jno
rcr
jo
cmp
shl
sbb
stos
jge
inc
xlat
sbb
mov
xchg
outsb
jl
mov
jmp
xor
jno
xchg
sub
js
adc
mov
sahf
jne
push
cmp
jnp
out
jg
lods
dec
and
daa
jno
mov
push
rcrl
jno
cltd
push
pop
cld
and
xor
lret
iret
test
add
sbb
mov
jno
daa
out
mov
cmc
addl
aad
into
mov
pop
xor
add
add
js
mov
jno
cmp
data16
push
mov
push
imul
jae
inc
hlt
inc
pop
jno
xor
dec
in
pop
push
jmp
pop
repnz
leave
xchg
insb
xchg
cli
fiadds
arpl
adc
loope
dec
dec
sub
les
test
test
jno
data16
rcll
test
jae
sub
push
jno,pt
mov
adc
jge
xor
outsb
sub
inc
fs
or
loope
test
pop
sahf
adc
cmp
push
and
lea
cmpb
dec
cmc
adc
jno
ja
inc
test
rorb
jno
mov
into
shll
and
mov
cmpsb
mov
in
inc
sub
subl
cmc
mov
mov
enter
cmp
lea
inc
pop
in
repnz
cmp
xchg
popa
cmp
leave
popa
pusha
sub
pop
pop
jno
nop
or
into
lods
cmp
mov
jno
or
jno
or
jle
lahf
ja
cmp
or
in
add
push
jae
or
mov
icebp
test
int
movsb
stos
movl
outsl
idiv
mov
jo
inc
lods
pop
out
in
mov
xor
bnd
sub
dec
lock
jno
jo
xchg
js
sbb
pop
sub
lahf
pusha
and
hlt
jno
sahf
xor
sbb
inc
gs
xor
adc
popf
pusha
sbb
push
rclb
mov
xor
clc
js
mov
imul
adc
sahf
add
repz
std
or
pop
jno
and
mov
outsl
jno
popf
mov
push
cmpsb
jno
sahf
mov
adc
cmp
push
xor
jl
leave
mov
mov
jno
arpl
fwait
cwtl
and
mov
fisubrl
lods
pop
jecxz
movsb
fs
incb
je
imul
out
pop
das
jno
divl
jno,pn
clc
fs
imul
lods
dec
in
jb
aaa
and
cmp
or
xor
mov
jmp
add
lret
loopne
test
mov
lea
cmp
pop
push
xchg
cltd
int
jl
clc
xor
push
or
test
mov
jae
into
sahf
test
mov
das
dec
add
push
mov
jno
or
push
fwait
xchg
xor
test
mov
fisubrs
repnz
rcrl
push
pop
dec
enter
lods
fstps
push
jb
lods
lahf
add
mov
jge
pop
jae
addr16
adc
pop
push
jno
test
jle
mov
lret
sbb
pop
push
loope
out
cli
dec
std
mov
jmp
fxch
movl
push
mov
ja,pn
jb
pop
test
mov
jl
sub
fnstenv
shll
xchg
mov
and
mov
pop
loope
mov
xchg
ljmp
loope
test
jae
pop
and
outsl
cld
sbbb
adc
pop
cmc
mov
jno
lret
jae
or
jecxz
lea
leave
in
loop
xor
cs
jno
sub
sarb
lea
xor
push
inc
xor
or
jno
rorl
movsb
lret
jnp
popf
pop
mov
mov
cld
jno
gs
mov
add
mov
and
mov
out
jmp
push
fidivs
cs
jno
xchg
jns
and
inc
imul
jno
add
aam
mov
shll
xchg
enter
and
pop
cmp
adc
cmp
lea
jne
mov
add
imulb
inc
add
push
dec
jae
pop
dec
rcrl
enter
stc
fnstenv
idivb
jno
ss
scas
pop
adc
mov
adc
in
clc
std
movsb
sub
loopne
pop
add
jno
notb
insb
jno
lds
mov
ljmp
loope
jno
xor
jmp
test
hlt
rclb
sub
jno
mov
mov
data16
xor
add
jg
lahf
sahf
xchg
mov
add
xchg
jbe
stc
push
out
pop
dec
cmpsb
mov
addr16
out
mov
and
gs
in
mov
xchg
dec
loop
cmp
sbb
sub
dec
jno
mov
movl
jno,pt
pop
and
or
fidivs
xor
adc
shrl
push
lahf
repz
idivl
imul
xchg
outsl
jno
and
push
jle
arpl
jno
jns
jbe
out
pushf
pop
jne
xchg
and
mov
es
cld
fstps
xchg
repz
subb
pop
adc
movsl
jl
push
outsl
fcmovnbe
jno
dec
dec
les
jmp
adc
jno
outsl
pop
iret
sbb
leave
flds
int
dec
rep
js
int
dec
int
pushf
inc
jno
mov
jno
pop
fiaddl
sub
loopne
sub
test
add
cmp
mov
hlt
push
sbbl
in
addr16
jae
sub
add
xlat
jns
fistps
xorl
les
jae
mov
jno
sti
ss
pop
lods
push
aad
pop
and
add
neg
out
jp
adc
shrb
lea
or
aaa
jl
cmp
inc
dec
jno
shlb
loope
push
scas
nop
pop
lods
pushf
std
mov
adc
mov
jno
int
push
std
xchg
mov
sub
mov
mov
insb
dec
jne
lahf
test
adc
mov
dec
add
push
cmp
xor
dec
jno
ds
in
and
sbb
rorl
xor
jno
imul
sub
dec
jo
pop
xor
jno
jns
rcll
rorb
lahf
jno
xchg
scas
mov
pop
sbb
jne
xchg
mov
dec
shll
and
jge
push
les
mov
or
insl
sbb
stos
jno
incb
sbb
popf
sub
sub
push
mov
sub
test
les
and
leave
mov
bound
je
ret
jne
nop
ja
cltd
jmp
xor
scas
or
mov
arpl
sbb
cmp
sbb
push
xchg
push
cmpsb
jge
adc
adc
in
pop
in
jb
sbb
fdivr
insb
jns
hlt
fs
call
push
inc
add
or
movsl
jno
and
shll
sahf
in
out
daa
pop
cmp
sub
or
jno
cli
das
adc
push
inc
cmp
test
mov
push
insb
jno
add
arpl
lret
mov
adc
jmp
ror
filds
push
jge
push
xor
shl
adc
fdivs
test
jno
mov
test
loope
cmp
lods
sbb
or
mov
sahf
ret
add
pop
jb
fs
xchg
repnz
sbb
stos
push
cmp
imul
jmp
test
push
inc
outsl
jne
js
jb
and
jge
or
ret
jno
in
dec
faddl
push
and
mov
out
popa
dec
cmp
arpl
jno
ret
loopne
cmp
jle
je
cmp
jno
dec
mov
inc
jno
xor
ror
jl
jae
lea
and
je
dec
sbb
push
sbb
xchg
xchg
les
shl
inc
xchg
jno
sub
push
or
xchg
xchg
cmp
hlt
jg
jle
xchg
inc
roll
or
cmpsb
out
xlat
in
push
sbb
jno
daa
and
lea
popf
fidivrs
push
xorl
lcall
jl
dec
lea
test
lods
fwait
jno
fldt
lods
pop
xlat
mov
sub
movsb
sub
mov
stc
clc
lret
mov
mov
rclb
cmp
stc
jno
mov
sub
sub
jb
rcr
gs
jno
cltd
clc
cmp
imul
enter
adc
cmp
jno
mov
xchg
fldcw
or
lock
mov
xor
mov
push
jno
jmp
es
divb
pop
pop
jno
enter
pushl
orl
push
jae
push
popa
jbe
cs
sub
mov
testb
repz
mov
push
imul
fidivrl
jno
mov
leave
xchg
loop
into
cmp
aam
jno
ja
xchg
dec
pop
lret
mov
push
cmp
jno
cmp
sub
fs
daa
imul
enter
inc
test
mov
aaa
test
pop
fcomps
leave
inc
mov
cltd
jne
push
mov
ljmp
and
cmc
lret
jno
aad
loopne
jnp
add
jmp
pop
jge
seto
mov
pop
mov
jnp
xor
in
mov
sbbb
iret
jecxz
cmpsb
adc
jno
add
mov
jno
jbe
jb
out
mov
jae
mov
fs
hlt
arpl
jno
pop
out
lret
add
sub
or
or
popa
sbb
adc
icebp
jae
hlt
adc
adcl
imul
mov
adc
add
pop
jno
fists
inc
jno
scas
gs
cld
clc
push
sub
bound
jno
imul
mov
push
pop
jle
jno
or
and
jno
iret
pop
outsb
adc
adc
cli
out
cmp
imul
jae
jge
push
and
std
push
lea
jno
lds
movsl
mov
cli
lods
adc
daa
mov
in
es
xchg
rorl
jp
jnp
inc
ja
pusha
movsb
lcall
incl
jle
jno
inc
ret
inc
jno
jnp
lahf
jae
cltd
nop
jno
or
mov
xchg
sbb
inc
hlt
adc
dec
jno
or
rcr
or
and
int3
icebp
add
in
mov
lods
jg
shrl
inc
loope
adc
fstpl
or
ljmp
scas
mov
adc
pop
sub
lds
add
jno
push
xor
inc
sub
ja
pop
outsl
pop
ss
mov
out
sub
jge
pcmpeqw
movsb
dec
jne
mov
mov
addl
cmp
xchg
mov
mov
push
jno
jle
xchg
mov
add
dec
mov
mov
jns
pop
stos
adc
cmp
cmpsl
jge
or
or
cmp
jno
xor
mov
je
ret
pop
sub
inc
xchg
and
pop
test
sbb
or
lret
les
adc
call
pop
jmp
pop
or
dec
and
mov
jno
add
enter
out
or
inc
and
pop
ds
mov
push
push
sbb
ss
repz
or
mov
hlt
adc
hlt
push
dec
or
mov
adc
jmp
loop
add
stos
lret
jecxz
bound
mov
jno
fcomi
imull
movl
std
mov
addr16
scas
jno
incl
pop
roll
inc
mov
mov
leave
scas
ret
xor
jno
notl
and
push
test
repnz
mov
jmp
sbb
popa
les
jno
inc
ret
sub
or
fcmovnb
jne
sti
sarb
lahf
and
cmp
jbe
xor
and
in
push
movd
pop
fistps
in
sbb
lahf
xchg
or
pop
jno
push
sub
imul
mov
jae
add
cltd
movsb
sub
jmp
lods
xor
or
xchg
sahf
test
dec
icebp
jg
pushf
test
hlt
cwtl
movsb
pop
jno
iret
popa
arpl
push
inc
test
fstps
add
fdivs
insb
les
lahf
test
jecxz
jno
xor
inc
xchg
jns
dec
lods
stc
mov
and
dec
loope
jo
nop
lret
add
dec
jne
in
xor
cli
inc
xchg
dec
mov
lods
mov
pop
or
jne
cli
mov
xchg
xchg
popf
jne
cmc
out
repz
les
jno
bound
push
jno
xor
cmpsl
mov
mov
jecxz
outsl
mov
cmp
dec
xchg
pop
mov
or
pop
pop
mov
pop
lret
adc
in
cli
push
rcrb
pusha
dec
jne
lds
int
and
push
sbb
cmp
arpl
or
jge
jno
out
dec
call
push
loopne
xor
jno
mov
jecxz
test
repnz
fsts
or
andb
jno
xchg
or
cmpsl
jecxz
cmp
pop
xor
aad
in
scas
inc
cmp
incl
xor
or
loopne
fidivl
or
pop
push
cltd
movsl
sti
dec
jno
push
and
jno
mov
jmp
stos
push
sub
add
imul
add
jno
xlat
push
stos
xchg
inc
hlt
add
jno
cltd
scas
push
or
xchg
jns
lods
mov
fsubrl
jb
jno
and
test
int3
jns
adc
popf
or
je
jp
inc
push
xchg
jns
cmp
push
aaa
jno
xchg
lods
sbbb
jb
jae
or
jno
cmp
pop
addr16
mov
les
aad
cmc
mov
dec
xchg
jno
fwait
mov
mov
pop
sbb
xchg
jno
push
mov
jo,pn
jmp
sbb
add
jae
jecxz
scas
outsl
add
loopne
sbb
sahf
pop
iret
fcmovne
jno
or
jns
jp
ds
sar
adc
mov
sahf
insl
mov
mov
push
lret
push
aaa
cmpsl
jae
in
arpl
xchg
sub
xor
mov
stc
mov
nop
cmpsb
lods
cld
pop
aaa
push
nop
scas
call
call
xchg
mov
stos
insl
pop
outsb
or
pop
je
dec
mov
sbb
cmp
enter
push
in
mov
push
imul
hlt
pop
pop
test
jg
idivl
in
bnd
pop
cmp
ja
icebp
push
sub
js
sar
mov
lods
push
push
add
add
popa
and
lods
adc
pop
push
xor
ds
jae
cld
leave
movsb
mov
xor
lea
mov
insb
push
int
hlt
dec
pop
push
clc
lahf
jns
and
lods
cmp
xchg
add
movsb
test
or
xchg
enter
dec
dec
push
lea
cmpsb
add
addl
hlt
push
pop
push
pop
inc
sub
jno
adc
mov
push
or
mov
jl
sbb
and
jb
adc
xchg
fsubs
push
cmp
js
mov
pop
pushf
dec
jns
cwtl
pop
push
cmp
hlt
sbb
pop
lods
inc
insb
ss
inc
or
jb
mov
jb
cmpsl
jp
dec
movsb
jno
in
nop
test
imul
jae
scas
ss
sbb
jno
jne
dec
ror
orb
and
mov
add
std
cli
mov
shll
sub
add
jno
mov
cmovne
test
jae
pop
into
data16
jno
mov
adc
jl
lock
clc
mov
lods
insb
mov
ss
jno
ror
int
or
pop
mov
or
and
inc
fwait
xchg
dec
mov
push
inc
jp
lcall
in
jae
mov
stos
fwait
and
or
jne
sub
push
cli
jmp
out
daa
aad
xchg
cmp
jno
sub
dec
lods
stos
leave
test
mov
jp
je
add
dec
jae
jp
mov
pop
fs
int3
jmp
or
cmp
das
inc
xchg
scas
inc
jno
sti
and
and
mov
shrb
xor
fisubrl
imul
jno
xor
ret
addr16
or
adc
bound
lret
mov
jge
adc
cmp
mov
leave
pusha
inc
pop
hlt
push
jno
test
adc
test
sti
bnd
loopne
push
jno
js
adc
adcb
popa
cmp
enter
int3
scas
leave
loope
sbb
add
add
mov
out
pop
jno
sub
popa
push
jl
jno
push
jne
aaa
out
test
icebp
mov
lds
enter
mov
jno
movsl
mov
mov
jge
test
sbb
add
sti
jno
out
lret
jno
or
mulps
add
sahf
mov
and
jae
hlt
mov
mov
cltd
and
dec
mov
or
sub
xchg
jno
jl
lahf
xchg
insl
mov
sahf
push
jo
and
sub
jno
xlat
in
rorb
fcmovne
jno
sub
sub
loop
adc
popl
sbb
rorb
and
jmp
jno
sub
shll
xorb
pop
test
int
jb
mov
jo
mov
popa
imul
scas
pusha
js
jno
or
push
xor
std
out
out
jno
push
mov
pop
mov
ss
xor
push
cld
repnz
hlt
into
push
adc
or
scas
roll
aas
jno
iret
js
and
jno
fucomi
cld
lods
mov
das
in
fdivs
push
pop
xchg
scas
mov
push
inc
fisubl
jp
pop
xor
int
cmp
jno
or
je
sbb
mov
mov
add
mov
xor
mov
inc
jp
jne
xchg
loop
jnp
add
jno
pop
rclb
mov
not
add
out
cld
xchg
adc
lret
mov
and
out
xchg
idivb
push
inc
rol
movsb
pop
jno
sbb
rcll
fstpl
inc
dec
in
outsb
sbb
sub
cmpsl
jbe
mov
xor
pop
mov
sub
out
scas
loope
sbb
push
loopne
icebp
rcll
jl
mov
in
jl
jae
jp
jle
cmp
in
addl
je
pop
mov
jno
cld
add
push
sub
and
jno
nop
sub
lock
jno
mov
mov
add
addb
ficompl
xchg
leave
jno
add
sbb
push
and
lods
sub
lret
sub
fsubrl
xor
gs
or
inc
ss
ja
xchg
ljmp
in
xchg
xchg
xor
dec
mov
jno
xchg
or
jne
add
add
stc
push
aam
or
test
outsb
mov
dec
sbb
mov
xor
mov
inc
lock
lret
into
jne
addr16
pop
stc
inc
adc
jno
lea
jne
pop
dec
adc
mov
push
xor
jno
out
jle
cli
in
imulb
into
icebp
ljmp
ja
or
jno
loop
out
lahf
subb
cmp
daa
pushl
mov
push
xchg
jecxz
jp
or
repnz
les
xchg
in
ljmp
push
add
jp
mov
and
xlat
sarl
xchg
push
ds
mov
cmp
or
arpl
inc
jbe
mov
mov
incb
dec
lea
xor
jecxz
shlb
mov
push
out
fistps
out
xor
in
int
adc
cld
jno
dec
add
test
je
repz
bound
mov
jg
jge
cltd
inc
dec
pop
or
add
jge
push
mov
jp
mov
ja
pushf
jo
add
xchg
sbb
push
push
repz
jge
adc
repz
cmp
repnz
cmpsb
sub
loope
lret
loopne
bnd
lcall
nop
mov
stc
lret
cld
jbe
test
rcr
push
adc
push
push
std
push
pop
jnp
xchg
jbe
test
xchg
mov
fwait
stos
icebp
sbb
lods
lock
rcrl
pop
outsl
xorl
push
pushf
jno
add
lock
in
movsl
or
test
fnsave
pop
xlat
push
pusha
mov
jmp
aad
ficompl
xor
jno,pt
inc
out
rcr
mov
push
cmpsl
sbb
jno
xor
rolb
outsb
imull
xor
sbb
jno
lods
lock
shlb
and
repz
add
rclb
xlat
lcall
mov
lea
cmp
divl
ds
pushl
pop
out
scas
shl
xchg
jno
into
arpl
jne
popa
sbb
test
sbb
inc
sub
test
mov
mov
lods
jns
and
mov
lods
inc
into
xchg
js
jno
push
adc
insl
pop
stc
jno
rcr
out
cs
and
ret
jbe
mov
inc
rcrl
mov
cli
insb
in
popf
in
je
mov
leave
arpl
sub
fisttpl
jp
jns
inc
insl
mov
jne
cli
cmp
xlat
sub
in
enter
adcb
or
push
cmp
fwait
xchg
enter
xor
push
push
jno
mov
push
fs
stc
in
jge
ds
fldenv
jno
pop
mov
fwait
scas
adc
jno
arpl
jno
pop
enter
mov
mov
mov
cwtl
bound
pushf
mov
loope
loop
jmp
aad
mov
sub
mov
shlb
kmovb
pop
push
xor
movsl
jno
out
imul
test
bnd
lods
fsub
jno
mov
ja
push
push
sbb
stos
jne
mov
bound
jno
int3
inc
mov
jns
movsb
push
or
hlt
mov
inc
inc
pop
sbb
dec
add
aam
je
cmp
or
dec
mov
sbb
fistl
aas
daa
jb
jmp
adc
mov
pop
mov
repnz
adc
divl
call
outsl
insb
jno
cld
sub
mov
loop
fwait
adc
ss
int
mov
adc
out
jne
push
pop
imul
icebp
adc
jno
gs
aad
sub
cmp
nop
inc
xchg
scas
dec
jns
loop
jmp
cmp
push
and
mov
mov
call
and
cmp
rolb
xchg
jge
add
jnp
jno
inc
mov
push
leave
dec
mov
jne
dec
pop
push
data16
xchg
dec
and
mov
mov
xchg
adc
jl
cmp
cmc
xorl
mov
sbb
test
mov
inc
in
aam
jno
mov
lea
or
push
mov
xor
das
jne
and
add
mov
bound
jno,pt
sub
insb
xorb
mov
orl
imul
add
lret
sub
adc
jno
idivl
dec
test
cmp
addr16
jno
call
mov
jae
fcmovnbe
aam
push
lods
data16
fisttpll
cmc
test
or
and
inc
jno
or
xchg
cmpsl
push
mov
insl
jp
mov
dec
lods
jno
sbb
pop
push
mov
jle
mov
sub
jae
mov
cmp
pop
or
and
or
cwtl
dec
adcl
push
xchg
and
loop
dec
stos
xor
fwait
jne
jne
mov
cmpsl
shll
shlb
cwtl
jecxz
xor
push
jae
push
fsts
shll
or
shll
popa
in
push
aaa
jns
and
push
std
jae
mov
insb
or
add
and
xchg
dec
stos
sub
imul
dec
gs
mov
jne
pop
cld
adc
scas
call
lods
pusha
push
out
jae
insb
test
int3
ret
xor
mov
fimuls
jl
subb
mov
push
cmpsl
and
lea
mov
mov
xorl
fdivs
pop
mov
jno
ljmp
jno
inc
or
add
rcr
xchg
repz
mov
and
and
inc
cli
shr
xor
adc
pop
jle
ss
xchg
jecxz
nop
fidivl
jno
xchg
inc
ja
loopne
jno
out
mov
jge
sbb
call
hlt
in
pop
adc
pop
pushf
jb
push
pop
lea
outsl
pop
adc
outsb
mov
and
jb
mov
push
sbb
stos
negl
pop
mov
mulb
sbb
clc
add
dec
inc
mov
xor
push
ja
lcall
mov
pushf
inc
je
test
scas
push
js
gs
icebp
dec
mov
mov
lods
aam
ficoms
or
outsb
fdiv
mov
out
shll
fs
in
in
lods
ja
adc
sbb
insb
mov
mov
sbb
add
mov
xor
jae
test
out
lea
inc
outsl
pusha
push
ret
mov
je
lret
xor
test
int3
push
fs
jno
fcomps
jno
sub
test
sbb
jno
push
movsb
cmp
jno
lock
popf
push
movsl
jno
xchg
movsb
gs
outsl
jo
mov
mov
loope
mov
jae
cmpsb
cmp
sbb
out
pusha
cmp
popf
sahf
sub
or
jno
ret
icebp
xor
pop
mov
jno
and
imull
js
and
insb
xor
lea
scas
and
in
dec
cmp
sub
jmp
mov
dec
imull
cmp
loope
push
push
lea
xchg
xchg
xor
mov
shl
iret
add
js
fstpl
xchg
stos
sbb
dec
repnz
mov
cmp
loop
mov
sub
adc
movsl
repz
int3
jno
dec
mov
pop
jno
push
lcall
jns
stos
push
data16
pop
test
bound
add
jns
test
orl
mov
cld
mov
fstps
mov
test
jno
or
xor
mov
cmp
dec
pop
hlt
fwait
jp
jbe
arpl
push
jne
mov
repz
sbb
dec
je
cmp
lock
jno
push
jne
loop
lods
fs
xor
les
mov
mov
jnp
mov
push
dec
jno
add
int
jno
iret
sbb
jno
cmpsb
and
mov
push
jne
cmc
jg
push
enter
jb
sbb
lret
imul
and
xlat
test
incl
int
jno
int3
push
es
test
jno
sbb
add
fwait
aaa
dec
mov
fucomi
lea
out
mov
pop
add
cld
popa
stos
cmpsl
cltd
jge
gs
xchg
out
mov
lret
in
adc
jno
add
cltd
sub
repnz
jno
scas
rorb
inc
add
nop
pop
xor
inc
aas
or
inc
xorl
decb
xor
mov
push
jae
int3
imull
sti
xor
add
push
mov
aas
daa
lea
xor
jle
jp
popf
loope
ret
add
in
jno
hlt
push
in
push
jnp
divb
insl
xchg
or
push
ds
and
repnz
jno
adc
lock
ret
lcall
mov
cmpsb
popa
pop
jno
cmp
jne
out
aas
jg
jp
stos
sbbl
iret
les
rorl
add
jno
sub
div
clc
test
cwtl
sub
add
jno
mov
mov
dec
dec
hlt
les
jno
sbb
jg
pop
push
jmp
call
push
sub
pop
fs
mov
cwtl
icebp
xor
jno
fldpi
int3
push
dec
sub
mov
jne
out
clc
popf
mov
aas
imul
fstl
iret
in
pusha
ret
addr16
ljmp
add
imul
inc
jns
jle
imul
ss
js
leave
cli
out
je
push
lods
pop
shll
imul
cmp
mov
sub
subl
mov
sub
orb
inc
add
sbb
mov
outsl
pop
jno
jle
inc
pusha
repnz
mov
pop
mov
or
test
cmp
mov
push
xorb
iret
lea
mov
and
test
imul
push
ret
push
mov
cli
data16
outsb
push
jge
sub
mov
hlt
pop
jmp
mov
inc
xchg
inc
iret
out
test
mov
lahf
mov
shlb
mov
inc
lods
jns
sbb
ss
or
fisttps
pop
jno
pop
scas
push
shll
std
inc
mov
imul
das
jno
and
pop
lods
jno
testb
add
popf
mov
push
and
sti
ret
insb
push
push
inc
std
jne
cmp
add
xchg
jno
scas
lret
out
fdivl
xlat
fwait
mov
dec
xchg
pop
jno
fstpt
lods
push
lret
ja
cmp
sti
orl
cltd
cmc
repnz
and
jno
cmp
push
sub
cmpsb
sar
fcompp
push
cmp
adc
add
jno
roll
sub
pop
inc
lock
jb
popa
adc
jns
add
repnz
mov
pusha
sub
and
dec
add
loope
mov
das
lods
adc
clc
andl
pop
jb
mov
scas
stos
repz
and
nop
les
xor
arpl
push
mov
cmp
pushf
data16
or
xor
add
push
mov
jno
mov
dec
mov
jno
bswap
and
cmp
mov
call
xchg
leave
into
data16
and
les
stos
or
popa
cwtl
repz
ja
pop
mov
mov
lea
ja
xchg
mov
loop
pop
jno
mov
jno
fwait
nop
out
hlt
addr16
jno
outsl
mov
in
cli
call
pop
data16
jne
dec
xchg
shlb
dec
push
jno
mov
jge
loope
scas
stc
imul
inc
movsl
out
push
arpl
or
aam
cmpsb
pop
lods
mov
xchg
mov
mov
dec
jnp
repnz
push
and
push
pop
xorl
mov
ljmp
jno
xchg
adc
jle
pop
pop
mov
inc
fimull
jb
loopne
mov
test
pop
jge
and
or
sub
jne
cmpsb
stos
pop
fildl
outsl
push
jo
xchg
mov
pop
cs
lods
sub
jno
pop
scas
fdivrs
xchg
cmp
pop
add
hlt
mov
cltd
nop
pop
fcoms
xlat
lods
jno
roll
cli
mov
mov
jno
pop
jae
pusha
inc
or
jno
jo
repz
aaa
mov
lock
push
pop
add
and
jno
test
add
lods
xor
data16
popf
fadd
mov
jle
outsl
inc
mov
shlb
sbb
jp
pop
sbbl
std
aas
pop
in
iret
shl
je
mov
jmp
arpl
cmp
dec
mov
xchg
aas
rep
jno
cmpsb
push
scas
rcll
jl
push
push
adc
jno
mov
int3
test
scas
lock
leave
sub
outsl
jno
nop
dec
sti
cmc
xlat
cltd
mov
jno
aam
push
inc
dec
addr16
sbb
jno
mov
imul
sar
test
add
jae
cmp
xchg
jp
aad
xor
ficompl
aam
push
lods
xor
fs
cmp
subb
cli
add
jae
or
mov
es
mov
data16
pop
cmove
push
jne
int
insl
je
xor
lahf
ja
xor
stos
mov
insb
mov
xchg
xchg
xor
pop
adc
dec
sti
lods
add
jmp
jecxz
or
aad
mov
inc
icebp
sub
adcl
xchg
cltd
popf
sbb
out
call
in
jno
dec
lea
gs
cwtl
mov
icebp
lea
cmpsl
adc
dec
jns
cmpb
xlat
jae
movsb
test
sarl
int
jno
inc
mov
inc
lahf
cmp
jb
shrb
jmp
jecxz
fadds
mov
arpl
jo
and
shll
add
push
fdivrs
lret
jns
mov
test
sarl
jno
mov
aaa
scas
mov
push
leave
hlt
sbb
push
movsb
jle
cmp
jge
jo
mov
in
in
adc
sbb
jmp
aas
sahf
xorl
push
mov
jb
jo
sbb
mov
sub
pcmpgtb
dec
in
in
xchg
jno
pop
push
test
inc
adc
sub
jae
push
andl
cmp
adc
je
nop
loop
dec
mov
adc
jns
jle
icebp
or
je
out
jge
stc
jo
mov
xor
imul
fidivrs
dec
jno
xchg
pushw
ret
push
jge
inc
addb
lret
pop
xchg
xor
lea
xor
push
adc
xor
fcoms
or
pop
icebp
fsubrp
ret
and
lods
jno
fs
cld
jno
fincstp
jmp
shrl
aas
test
sti
shr
xchg
hlt
mov
out
jno
int3
into
aam
mov
test
lods
scas
cli
test
clc
xchg
in
dec
jb
and
and
jno
inc
or
daa
and
jno
add
or
out
xor
add
mov
xor
imul
test
push
mov
sbb
shll
mull
icebp
popa
insl
movsb
lods
orl
pop
pop
repnz
repnz
mov
arpl
jne
push
jns
jecxz
repz
loop
sub
jge
iret
minps
fistpll
mov
stos
cld
cmp
orb
sbb
sbb
loop
pop
jno
sub
add
cmp
mov
jno
scas
cmp
add
push
jno
enter
xorb
sbb
dec
cmc
lea
aaa
mov
sbb
out
or
push
jno
xlat
je
dec
dec
xchg
xor
inc
pop
sbb
dec
push
and
les
sub
or
repz
xchg
pop
mov
sbb
insl
push
cmp
out
dec
add
loope
out
aad
ljmp
hlt
test
repnz
addr16
jo
jno
les
fs
push
add
test
mov
sub
push
mov
daa
lds
or
addr16
pop
ja
lahf
xor
inc
xor
push
pop
test
pop
aaa
inc
lods
mov
clc
ds
mov
lahf
addl
jns
push
sbb
sub
gs
xchg
xor
ljmp
sub
bnd
mov
jp
jno
pop
fisttpl
aam
sbb
dec
inc
insb
dec
out
jno
popa
jecxz
xchg
sysexit
icebp
jno
scas
jbe
sbbb
lcall
enter
xlat
or
leave
sub
repnz
sub
dec
jo
pop
push
push
xlat
or
gs
cmp
mov
or
add
and
adc
das
mov
dec
loope
jmp
addr16
mov
push
rorb
xor
xchg
dec
js
pop
data16
inc
sbb
jl
out
mov
jno
outsb
popf
dec
nop
cld
xchg
mov
dec
inc
lock
call
inc
adc
xchg
shrb
mov
add
adc
mov
ja
ficompl
jne
dec
imul
out
stos
call
adc
jb
add
push
test
rcrb
rcrl
test
icebp
andb
mov
sbb
imul
stos
insb
xchg
inc
loopne
xchg
test
sbb
xchg
cmp
lcall
shlb
aam
add
inc
cld
jnp
pop
jo
imul
imul
je
push
loope
cmp
in
jnp
iret
jp
mov
sub
push
decb
adc
insb
jno
push
mov
sbb
adc
xor
pop
pop
repnz
cltd
jns
call
xor
inc
das
xlat
mov
xor
icebp
add
xor
xchg
call
les
pop
mov
jle
push
fimull
jne
dec
aas
into
in
add
call
dec
pop
jne
fnstsw
test
jno
mov
icebp
ret
jno
ljmp
pop
out
loop
mov
cmc
dec
jno
pop
les
push
push
es
aad
andb
ja
mov
add
fdivr
pop
mov
dec
iret
ret
jno
jae
aad
xchg
jns
jno
push
inc
les
or
jne
ja
test
xor
xchg
mov
jne
popf
lods
xchg
or
xacquire
outsb
jno
adc
pop
mov
in
cmc
movsl
je
lds
and
loope
mov
imul
cmp
ds
lods
xor
push
sbb
mov
push
jno
cmp
jecxz
mov
jmp
sub
cmp
lcall
sub
stos
jno
push
and
movsl
rcl
xor
jae
pop
cmp
jb
xchg
aam
sub
jb
loopne
jno
jns
jbe
outsl
pop
pop
lods
in
aas
icebp
push
nop
xchg
in
sbb
jno
arpl
mov
cmp
pop
outsb
jl
sbb
mov
xchg
adc
mov
add
loope
jb
and
push
test
sub
nop
mov
and
je
gs
lahf
repnz
icebp
jnp
movl
mov
jg
mov
in
mov
sub
jno
imul
xchg
jno
jo
in
out
jne
inc
lds
adc
add
lahf
fdivrl
jb
mov
hlt
inc
mov
shll
or
inc
jns
jp
adc
sub
mov
pop
cs
xchg
pusha
xor
jno
repz
movsl
rclb
pop
inc
dec
sbb
in
roll
fnstcw
imul
stc
sub
push
jne
lods
inc
popa
in
test
dec
repz
into
inc
cld
addr16
inc
xor
pop
adc
jle
outsb
mov
dec
and
cmpsl
xor
daa
or
xorl
into
cmpsb
push
xor
jns
ds
jg
je
jmp
or
lret
jno
pop
mov
stc
mov
into
js
sub
dec
jno
push
popf
fwait
sub
adc
adc
jno
fcomi
inc
das
pop
fidivs
in
inc
ret
test
xchg
stc
mov
push
xor
pop
or
xor
inc
mov
inc
addr16
pop
jno
mov
push
int3
mov
daa
sbb
xor
and
repz
testl
fiadds
and
sbb
jmp
pop
sbb
jno
mov
inc
movsb
shll
jno
mov
into
cmp
and
loope
jno
stos
mov
pushl
jno
call
xorl
push
mov
fdivl
cltd
inc
and
les
jno
cli
stos
mov
scas
xchg
gs
arpl
mov
outsb
in
or
jno
adc
call
in
jmp
xchg
or
insb
xlat
subl
pop
jno
inc
jb
mov
pop
inc
lods
mov
scas
rclb
xor
mov
incl
inc
cmp
jno
testw
cltd
push
je
add
xor
js
adc
xor
fs
push
loope
adc
pop
mov
mov
ja
lret
das
jno
cwtl
sbb
and
or
inc
test
jae
inc
imul
mov
xlat
xor
jno
dec
adc
data16
aas
lea
cmp
jno
cmp
adc
stos
cli
iret
data16
push
fprem1
js
jno
movsl
jecxz
mov
into
mov
adc
sub
lcall
jge
loopne
pushf
mov
inc
jns
push
adc
test
jo
mov
shlb
adc
mov
jno
push
pop
lock
insl
bound
ljmp
lods
jno
icebp
mov
int
sub
jno
xchg
test
jno
mov
sub
push
sbb
jno
repnz
mov
mov
sarl
ret
or
lret
in
adc
cmpsl
mov
xchg
cmp
or
mov
jnp
pop
mov
dec
or
or
xchg
lock
mov
aas
adc
iret
lods
sarl
jno
sub
imull
inc
jno
push
insl
sub
arpl
jno
mov
jmp
subb
loop
push
mov
jno
insl
test
cmc
popf
call
test
hlt
fdivrs
sete
movsl
and
jno
clc
scas
xchg
and
jno
xlat
xor
hlt
mov
jg
push
in
sar
jno
fwait
aaa
mov
enter
xor
jmp
scas
fnstenv
mov
mov
std
ds
clc
aad
jno
cmp
jmp
in
adc
add
inc
sbb
jne
lods
imul
inc
sbbl
pop
xor
dec
insl
adc
movsl
dec
fnstcw
mov
aam
in
lock
scas
push
xchg
into
fimull
jnp
mov
cli
gs
sub
jb
cmp
jne
mov
mov
jne
xor
jbe
and
jno
out
cld
imul
icebp
or
adc
xorb
sarb
icebp
insb
add
mov
jno
and
stos
sti
push
sub
lret
and
adc
movsl
sbb
sbb
mov
jno
mov
idivb
jae
stos
mov
mov
push
sbb
pop
jge
fwait
push
push
bound
fnstenv
stos
pusha
sbb
lret
lret
mov
jmp
xlat
sub
mov
rorl
jno
mov
fwait
out
ja
jno
repnz
jmp
out
hlt
insb
jno
push
push
mov
fs
jp
xor
xlat
jno
lretw
lods
mov
rorl
ds
enter
cmp
out
mov
sub
mov
jno
mov
ret
lret
mov
lahf
pop
popf
test
repz
sub
and
push
add
jge
lds
pop
cmpl
pop
mov
jno
pop
or
outsl
inc
insb
jno
cli
and
mov
mov
iret
add
sbbb
jmp
loopne
xchg
and
lea
ret
mov
mov
xchg
cwtl
test
aam
arpl
andl
outsl
test
push
mov
sbb
xorl
cmpsl
data16
xchg
cmpsb
jno
enter
nop
gs
cmp
xor
jno
loop
lret
add
push
imul
sbbl
jno
ret
nop
sahf
inc
aas
jno
push
sub
xchg
pop
std
jle
mov
dec
jno
push
test
sarw
pop
push
sbb
push
jb
cld
fbstp
pop
test
jo
int
jno
mov
shr
loop
xchg
push
sbb
xchg
pushf
cs
add
jmp
inc
nop
or
jecxz
inc
jno
jo
xchg
cwtl
xor
jno
push
lret
jne
jmp
stc
int
sbb
arpl
xor
jne
inc
push
mov
imul
push
loop
xor
outsb
add
fimuls
movsl
mov
imul
push
sub
jno
cmp
popf
sahf
adc
daa
inc
rcrl
enter
add
out
sti
sbbl
lret
mov
addr16
sbb
fstps
das
xor
jecxz
adc
mov
arpl
mov
repz
into
repnz
xor
mov
pop
cmc
adc
ljmp
mov
jno
sub
and
mov
shlb
mov
xchg
fldenv
jne
jmp
pop
xor
lea
hlt
imul
jne
lods
rcr
out
inc
adc
sub
pop
jmp
pop
xor
xchg
rclb
jge
loop
sub
or
jno
dec
xchg
push
mov
xor
imul
gs
pop
push
lods
jnp
sbb
movsl
in
xor
cmp
mov
in
test
and
pop
fsub
subb
jb,pt
mov
sbb
push
popa
jno
jnp
push
mov
inc
xor
cmc
arpl
stc
subl
or
gs
cmp
lcall
mov
loopne
sbb
add
mov
jae
pop
cli
mov
insb
pop
daa
sarl
jae
js
xchg
jno
mov
or
sbb
xchg
pop
jae
stos
decb
adc
adcl
pop
jno
lcall
enter
mov
push
adc
push
jno
leave
inc
cmc
aas
jnp
outsb
lods
retw
iret
mov
addr16
push
inc
sub
outsb
and
push
jno
cltd
pop
arpl
ret
sti
jno
or
dec
jno
cmpsl
je
aam
mov
lea
jnp
rcrl
jno
rcl
sbb
dec
jno
movsl
std
ret
mov
mov
jno
sti
cmpsl
push
add
sbb
pushf
shlb
cwtl
xor
jno
push
or
mov
xchg
test
mov
dec
mov
jae
call
setbe
jecxz
jno
jne
or
fs
jno
pop
xchg
push
insl
xor
pushl
subl
and
bound
mov
inc
pop
dec
addl
jno
fsubrs
jno
push
adc
in
pushf
jecxz
jne
ret
popf
outsl
and
jno
bndstx
test
sub
jae
mov
shlb
cmp
xor
xchg
dec
ljmp
ror
lds
rcl
dec
hlt
ja
xor
jno
int3
movsl
jge
fwait
scas
mov
js
xor
mov
cmp
sbb
dec
jno
inc
dec
push
fdivs
mov
pushl
es
std
sarb
popf
bound
push
cltd
jo
call
mov
mov
hlt
jge
jne
cli
inc
cmp
cmp
xor
jge
jo
and
loop
addl
and
mov
dec
sub
jl
jge
ror
mov
xchg
jno
pop
and
daa
test
aaa
icebp
dec
cmp
pushl
or
sbb
jno
cltd
imul
pop
outsb
pop
fdivs
daa
inc
in
pop
xor
jb
xchg
mov
pop
mov
fnstsw
mov
jle
in
push
xor
lea
orl
add
mov
push
inc
inc
inc
xchg
jo
push
pop
or
cmpsb
test
xchg
test
movsb
and
jno
dec
mov
xor
and
cmp
dec
stos
ss
sbbb
xchg
cmp
mov
mov
movsl
push
jae
mov
test
data16
dec
out
hlt
xor
dec
jno
xor
push
fidivl
xor
and
bound
repz
mov
inc
jns
xchg
jo
inc
jecxz
scas
int
dec
mov
mov
mov
jno
sub
jecxz
lds
push
jno
dec
cmpb
mov
scas
ret
imul
push
hlt
test
jmp
stc
xchg
stos
mov
shl
jno
dec
jmp
inc
test
add
sub
cmp
push
xchg
out
adc
add
jge
pop
mov
push
jnp
fnstsw
jno
pop
fnstcw
add
shll
clc
xchg
push
rcrl
push
jno
imul
fnsave
inc
test
stc
es
or
and
fildll
inc
pop
xor
jno
lahf
sbb
push
jecxz,pt
jl
mov
jg
inc
pop
pop
mov
in
jno
loop
pop
frstor
pop
jno
pop
lahf
cmpsl
lret
pop
in
mov
bound
mov
cmp
fcmovne
cs
jno
jne
ja
pop
sahf
push
aam
lock
cmpsb
ror
or
add
jns
jmp
dec
pusha
sub
cmpsl
test
call
pop
enter
and
sub
decl
xchg
jns
les
adc
xor
mov
int
jp
jge
outsb
push
jo
fdivl
je
xchg
xorl
sbb
jae
into
lret
lret
mov
leave
insb
push
jno
sub
xchg
fwait
int3
push
xorl
jno
and
ret
fldt
aaa
adc
test
jo
pop
pop
pop
hlt
enter
xor
scas
repz
rcrl
cld
cmp
pop
sub
jns,pt
mov
and
pop
ss
jno
jbe
lret
dec
cmp
jge
pushf
jno
inc
push
sbb
fs
neg
lea
cld
jno
pop
je
xchg
jmp
dec
mov
in
dec
hlt
rorl
sub
mov
mov
jno
sub
mov
mov
in
inc
loop
rol
sbb
in
sbb
xchg
push
sarb
fsubrp
je
mov
aam
jge
mov
lods
clc
gs
jns
ds
fiadds
cmp
jno
adc
cmp
mov
nop
and
jbe
outsl
mov
sbb
push
dec
jno
pop
gs
in
out
jno
and
dec
cmp
mov
dec
sub
xchg
inc
mov
mov
pop
imull
jno
es
cwtl
iret
ss
jns
push
xchg
sub
mov
add
incl
jno
and
leave
dec
jge
in
sub
sub
jno
adc
push
out
arpl
jno
pop
sbb
insb
lds
jno
push
inc
xor
xor
jns
aaa
xchg
popa
push
xchg
jl
je
test
jno
and
jecxz
inc
xchg
jne
sar
pop
and
pop
xor
insb
mov
scas
test
jp
mov
pop
in
add
inc
jae
push
insl
or
and
icebp
sub
scas
repz
shlb
sti
lea
jno
in
xchg
addr16
clc
xchg
cmpsb
mov
jne
ljmp
dec
mov
jns
push
cwtl
insb
sub
sub
notl
mov
xor
ss
jecxz
lret
push
lahf
jno
xor
scas
in
mov
inc
out
xor
enter
xor
lea
jmp
ret
ljmp
sarl
lahf
dec
or
fidivl
jb
rol
or
lods
sti
jge
js
jae
xchg
andl
das
add
mov
movsl
aad
push
imulb
mov
inc
inc
inc
push
adc
jno
ja
in
jl
mov
add
jne
xchg
sbb
int
out
in
std
shlb
mov
jno
daa
imul
repz
jno
adc
popa
aam
sbb
mov
xor
lods
push
fstpl
hlt
lods
xlat
push
int
jno
mov
bound
mov
loope
push
jo
iret
fdivs
jb
sbb
and
inc
sub
shrl
arpl
sahf
js
inc
loope
mov
mov
out
hlt
mov
cmc
jmp
jno
or
and
adc
test
sub
lods
jno
push
and
jno
mov
lods
popf
divb
mov
dec
outsb
push
mov
insl
fadd
mov
rcl
sub
mov
mov
jle
outsb
jno
popa
inc
test
jno
lods
cltd
mov
jno
mov
mov
js
jmp
data16
pop
push
jno
out
push
pop
jno
jp
mov
push
pop
sbb
jo
test
mov
push
jno
ds
sub
fimuls
scas
jno
subl
jno
xchg
and
mov
clc
push
jno
mov
in
jns
call
jg
xchg
cwtl
inc
add
jno
push
lock
add
mov
or
inc
inc
jno
std
scas
into
sbb
scas
aad
push
rcll
cmp
jle
xchg
iret
jg
jno
outsl
xor
mov
dec
pop
je
cmp
in
fisttps
ja
sbbl
fisttpl
test
in
es
jno
xor
and
cltd
xchg
dec
fcmovbe
sub
jnp
jno
sub
jno
les
pop
rorl
xor
addr16
sar
jno
lock
mov
std
cmp
mov
mul
add
or
fwait
and
movsb
imul
push
push
jl
xchg
jno
pushf
add
sub
lea
xor
shll
jne
mov
cmp
sub
sbbl
or
jno
movsl
pop
lret
pop
mov
mov
add
pop
ja
xchg
stc
and
mov
out
je
sub
leave
notb
cld
cmp
int
sbb
jno
or
jno
sahf
lcall
idiv
xchg
decb
imul
lods
jbe
sbb
inc
fidivs
jno
repnz
add
jno
xor
movsb
stos
ret
leave
jp
sub
pusha
decl
rol
fistps
mov
ficoml
pop
std
pop
pop
insl
sub
pop
mov
cmp
sbb
movsb
movsl
ja
jne
cmp
aad
dec
cmc
fdivs
inc
xchg
mov
inc
jb
int3
push
mov
jne
dec
stc
jbe
add
inc
jno
and
cmp
or
lea
push
popa
cmp
xor
jno
scas
shlb
dec
jge
mov
bound
loope
and
inc
pop
hlt
jge
adc
mov
mov
push
pop
lods
dec
dec
push
scas
jno
sbb
cmp
sub
pop
in
aad
test
pop
cmp
fidivl
loope
xchg
xchg
pop
pop
mov
or
xor
xor
jno
inc
divl
jno
sub
dec
pop
add
pop
xor
pop
jb
push
lods
cli
fwait
lcall
mov
push
jno
adc
or
rolb
xchg
push
dec
push
jge
pop
str
shll
lods
int3
movsl
xchg
pop
imulb
imul
jno
inc
mov
sub
xchg
jne
shl
addr16
xlat
xor
sub
sub
and
lods
lds
xchg
out
push
mov
jae
data16
mov
int
jno
adc
movsl
push
in
call
fmulp
into
lock
jno
or
push
adc
lcall
xchg
push
xchg
test
in
aaa
mov
loope
leave
add
lea
sub
pop
js
cltd
mov
inc
xlat
rcl
pop
jno
sub
out
push
push
lret
scas
int
fadd
inc
sub
cmp
adc
stc
mov
jmp
xor
jle
xorb
pop
push
xchg
pop
vandnpd
push
xchg
jno
adc
lcall
repnz
sar
jno
sarb
mov
pcmpeqw
push
inc
mov
xorb
loopne
mov
mov
pushl
fidivl
push
sti
shrl
in
lds
and
inc
ljmp
xchg
push
add
xor
mov
int
push
movsb
cmp
xchg
int3
stc
imul
or
jno
jmp
fiaddl
jne
ljmp
cmp
adcl
mov
into
jle
jge
dec
and
add
jbe
lcall
ljmp
scas
lods
sub
dec
daa
je
std
mov
xor
jo
orb
push
mov
jae
fwait
xor
test
jno
cmc
sbb
jno
mov
cmp
sbb
in
lock
loop
jno
push
notb
cwtl
xor
jno
mov
push
jne
in
add
inc
sti
aam
cmpb
cmp
jne
xchg
pop
fsts
or
push
mov
cmpsl
out
ret
out
imul
pop
xor
ds
sbb
inc
xlat
sbb
jno
and
fs
add
inc
adc
jbe
xchg
jne
icebp
inc
fisubrs
push
enter
jno
std
mov
lods
jge
cmp
mov
jno
push
mov
jno
ret
jl
sub
jno
mov
adc
js
jno
lods
mov
add
out
push
shlb
and
aaa
jno
scas
shlb
in
or
aam
ret
stos
xchg
sub
stc
and
sbb
mov
jno
mov
lods
xchg
jno
mov
inc
mov
fst
mov
inc
jns
out
pop
mov
iret
repnz
inc
fcmovnb
lret
jmp
leave
dec
jbe
out
out
pop
les
cli
aas
call
xor
push
jp
jne
pop
mov
cs
dec
add
xchg
fwait
jmp
push
cld
mov
mov
mov
nop
mov
xchg
aad
loopne
mov
xchg
dec
jae
rcr
push
xchg
mov
ds
adc
push
jns
test
into
push
jno
roll
mov
sti
or
fs
ds
jne
fcompl
notl
lea
push
inc
lds
inc
inc
movsb
clc
insb
jge
inc
nop
jns
rcl
dec
dec
jno
pop
mov
aad
xchg
jno
mov
push
shrb
add
or
out
jno
xor
ret
jae
cmpsl
fisttpl
push
je
ja
das
and
and
jge
mov
jmp
clc
jno
dec
inc
ret
call
das
mov
sbb
pusha
push
popa
mov
jo
pop
jno
cld
movsb
divb
mov
jno
inc
push
jnp
or
add
dec
dec
inc
and
jp
jno
in
add
and
mov
sub
in
sbb
popf
push
in
mov
imul
sbb
ret
cmc
lds
rcll
aam
jno
and
jl
mov
idivl
test
loopne
adc
jae
push
adc
js
ret
xchg
ficompl
mov
xor
les
bnd
inc
arpl
stos
fnsave
addb
xchg
test
movsb
outsb
mov
bound
jno
fwait
aaa
lods
lcall
push
data16
push
outsb
lea
fistps
repnz
and
mov
jg
in
xchg
jge
and
sti
sbb
xchg
or
outsb
mov
xlat
push
in
out
stc
cwtl
jno
dec
popf
adc
arpl
cld
dec
jb
jae
js
mov
sbb
sub
and
mov
repz
adc
stc
jbe
aaa
hlt
pushf
pop
jno
jge
ds
push
push
fsub
aam
xor
adc
in
jno
push
js
andl
rorb
mov
jno
rcl
lock
inc
fwait
mov
adc
cmp
sbb
es
jno
push
loope
cmp
movsl
orl
xor
fcompl
dec
hlt
add
aas
movb
lcall
nop
ds
hlt
push
mov
dec
mov
cmpsb
loop
outsb
popf
stos
mov
push
in
icebp
xchg
cmp
and
jno
push
adc
jecxz
inc
int
jb
xor
stc
mov
leave
subl
jno
dec
test
subl
sub
lods
inc
call
js
popa
test
pop
roll
lea
xor
dec
inc
jno
rorl
jns
cmp
xorb
ret
pop
aam
jno
movsb
push
addr16
sbb
mov
fs
mov
jno
into
add
popf
mov
popa
call
fwait
push
xchg
xorb
jne
lods
cmp
push
push
in
add
inc
notl
xchg
fisubs
pop
sti
mov
outsl
jae
xchg
push
adc
ret
inc
cld
xchg
push
jne
push
and
inc
ret
dec
dec
or
lods
mov
add
jmp
int
in
addl
ds
jae
pop
xor
ss
mov
and
pop
add
inc
aam
in
mov
jbe
lahf
stos
imul
sbb
mov
ss
jns
pusha
inc
adc
je
pmaddwd
mov
or
jno
cmp
mov
ljmp
jno
jmp
mov
leave
cmp
add
push
hlt
addr16
mov
jno
aad
imul
or
movsl
cmp
test
jb
adc
lock
fs
pop
xor
dec
nop
popa
lods
mov
mov
jb
jecxz
and
inc
sbb
movsl
jge
push
mov
cmpsb
enter
ds
add
jno
xor
jp
aas
jno
divb
push
incl
push
lcall
ja
loope
xor
scas
xchg
jno
jmp
lret
inc
cmp
lcall
cmp
sbb
cmpsl
int
push
jno
mov
je
hlt
outsb
mov
sub
ljmp
shll
mov
jb
clc
pop
test
jno
xchg
cmp
dec
push
jmp
jnp
mov
xor
jno
or
stos
test
jno
shlb
xlat
jp
push
aad
inc
cmp
add
mov
push
jno
scas
insl
pop
sub
adc
sub
jl
xchg
sbb
mov
cli
cmp
jb
add
data16
jno
es
aaa
adcb
xchg
sti
into
decl
mov
and
jp
and
mov
lea
cmp
mov
push
sbb
leave
push
mov
mov
stc
adc
cmp
mov
mov
inc
jno
test
and
dec
sbb
iret
xorb
loope
fdecstp
out
jle
jbe
dec
out
lea
pop
test
xor
jne
jno
scas
rep
or
je
and
lock
scas
fwait
in
in
jno
mov
push
jbe
mov
bnd
push
out
and
and
mov
pop
mov
pusha
push
or
popf
and
mov
inc
jae
sub
xchg
xchg
es
pop
rolb
jge
jno
repnz
dec
cmp
insl
in
push
jno
outsl
ss
sub
jge
out
popa
or
iret
iret
xor
lea
jmp
idivb
lcall
aam
dec
movsl
jno
insl
cwtl
push
pop
out
and
loopne
jnp
aas
cmc
dec
pusha
push
and
cmp
and
int3
xor
mov
loop
adc
icebp
fs
scas
add
adc
xchg
outsl
test
aam
jno
xchg
and
bt
mov
int
outsb
js
movsl
cs
xchg
cmp
jno
xchg
cmp
rcr
gs
jecxz
adc
dec
jne
pop
sbb
jo
insb
or
lret
je
mov
jno
mov
aas
or
push
lods
mull
push
repz
jae
push
stos
data16
inc
jmp
adc
int
dec
aam
dec
jno
cmp
add
mulb
xor
ror
sub
mov
pop
enter
or
add
bnd
mov
dec
xchg
dec
jae
xor
js
jns
add
mov
add
pop
loop
jae
in
sbb
sahf
cs
mov
aam
sarb
in
xchg
cmp
inc
lret
mov
or
and
fs
jno
out
mov
cmpsb
jno
rcl
xor
pop
mov
cmp
xlat
pop
xchg
push
out
jnp
addr16
ja
pop
mov
icebp
pop
mov
lea
pop
and
jne
rclb
xchg
xor
fsubrl
jno
insl
aas
in
push
push
popa
test
hlt
push
clc
push
adc
test
pushf
loopne
jno
and
cmp
imul
mov
jge
sbb
shlb
jno
pop
cmp
cmc
push
xchg
lock
mov
fdivp
mov
mov
or
mov
jb
iret
jno
xchg
hlt
icebp
xor
jno
xlat
fsubrl
imul
rcr
dec
jo
mov
and
mov
stos
sbb
push
iret
test
je
int3
sub
adc
jno
fmull
js
lock
das
mov
shll
mov
xlat
insl
hlt
pop
xor
dec
repz
ja
sarl
cmp
push
cltd
jno
jge
xchg
add
addr16
xchg
cltd
stc
jno
inc
sbb
mov
lea
dec
jno
out
cmp
jp
call
mov
jno
and
cs
inc
jne
jbe
movl
xor
jne
push
cmp
xlat
shl
cmpsl
and
push
jno
sbb
lods
sbbb
mov
inc
cmc
cli
outsl
fwait
jne
xchg
adc
jb
cmpsl
int3
das
jno
dec
jcxz
pop
fs
icebp
popf
inc
insb
dec
shlb
xor
stos
push
add
mov
fs
or
dec
dec
jmp
jno
dec
push
test
inc
cmp
push
in
pop
or
and
jo
repnz
mov
fwait
adc
push
fisttps
xor
sti
jno
jle
sub
dec
out
xorl
hlt
in
jno
push
dec
cmpsb
aad
and
mov
scas
jmp
jecxz
fiadds
dec
jno
aaa
sahf
xor
jno
or
push
mull
xchg
jno
jne
dec
int3
pop
sub
cmpsb
xchg
mov
push
or
sbb
imull
jmp
fiaddl
fcomps
es
dec
lods
jno
push
shlb
cmpsl
add
jl
jno
xor
pop
mov
aad
jno
shrl
jge
clc
jle
inc
arpl
test
scas
stos
xor
daa
cmp
jno
cs
dec
les
jl
add
jno
mov
shl
jno
cmc
mov
pop
jno
fs
add
adc
pop
push
mov
gs
sbb
cwtl
cltd
leave
lahf
pop
dec
fidivl
addb
jno
sbb
jecxz
xchg
cmp
repnz
push
add
popf
jne
dec
inc
hlt
enter
add
repnz
pop
inc
jno
test
in
jno
rcrb
jno
ret
std
mov
jns
hlt
cmp
icebp
jno
insl
push
pop
lock
xchg
sbb
jno
rorb
push
or
jo
fcmovnb
sub
ds
pop
pusha
lret
scas
fwait
iret
sbb
cmc
jl
mov
sub
movsl
and
inc
fbstp
daa
loop
pop
hlt
stos
push
jb
mov
and
hlt
leave
xor
xchg
out
jecxz
cmp
lods
push
xor
mov
jae
clc
inc
dec
popf
jl
adc
jae
dec
mov
xor
outsb
addr16
pop
out
push
nop
repnz
sub
push
dec
aas
out
pop
cmp
inc
pop
aam
sub
mov
data16
test
cmp
ja
add
and
aaa
out
inc
cmpsl
repz
decl
pop
push
out
je
fidivl
jmp
cltd
in
jae
jns
add
and
adc
sbb
push
lea
sbb
lret
add
jge
scas
adc
pop
xchg
sbb
je
sti
pop
call
outsl
aaa
jl
jae
test
xchg
mov
test
jbe
roll
pop
sub
sbb
insb
ret
mov
jno
inc
inc
mov
inc
ja
jno
xchg
xchg
dec
mov
call
inc
lods
aaa
lahf
imul
loop
lret
mov
jno
or
shr
test
popf
outsb
adc
out
jno
roll
movsl
jno
mov
aas
subl
mov
or
testl
fnstenv
mov
cld
xorl
mov
mov
dec
dec
cwtl
or
flds
xchg
jbe
inc
mov
sahf
jae
enter
xorb
xor
push
jno
in
sbb
mov
sbb
dec
leave
imul
add
add
js
push
mov
lea
lcall
aaa
ljmp
jno
lret
pop
or
lahf
mov
insl
sahf
test
jae
lock
mov
shlb
xlat
iret
sub
test
jno
mov
enter
add
push
jae
dec
lods
pop
add
lods
mulb
mov
push
mov
imul
xchg
enter
mov
or
jno
test
jp
popa
outsb
pop
jno
test
sbb
jno
int3
cwtl
add
jns
daa
in
dec
addr16
adc
mov
push
xchg
jge,pt
pop
js
lods
push
ret
jb
xchg
das
xchg
xorb
jae
mov
out
fcmovne
insl
xchg
test
push
jno
fiaddl
out
push
or
cmc
and
pushf
je
das
and
inc
jae
inc
mov
inc
add
xor
sbb
jno
xchg
sarb
test
mov
test
icebp
fdivs
xorb
pop
sub
xchg
mov
xor
movsb
jne
fimuls
jb
aad
push
jno
fiaddl
and
add
add
dec
jmp
xchg
rcrl
adc
jge
test
xor
mov
jno
ja
xor
in
cmp
loop
arpl
sub
cli
daa
imul
jmp
lcall
mov
dec
push
jno
in
out
cmp
jno
jge
stos
push
movsb
dec
push
scas
xchg
je
or
sbb
adc
inc
xor
stc
js
les
lret
dec
push
push
jno
shr
jge
mov
clc
mov
jno
mov
scas
divl
lcall
fmull
or
cli
jno
sub
xchg
pop
loop
ja
push
gs
cmpsb
dec
jbe
imul
icebp
cmp
cltd
rolb
mov
add
inc
or
and
sbb
fsubr
fidivs
adc
and
jbe
pop
push
lds
push
in
adc
xlat
push
std
jno
out
dec
adc
mov
stc
pop
repz
lds
cmpsb
test
adc
mov
iret
je
lods
xor
clc
stos
push
xchg
je
add
stc
xchg
jne
ja
sahf
loopne
fld1
push
pop
ljmp
cltd
outsl
xchg
mov
loope
out
imul
out
idivb
pop
subl
or
clc
cld
jno
jmp
bound
mov
push
arpl
fs
mov
test
pop
jge
filds
cmp
lcall
add
inc
ret
jecxz
repnz
fbld
mov
push
test
insb
fcmovu
xchg
mov
jle
dec
xor
pop
and
and
iret
hlt
jecxz
inc
mov
fwait
xchg
sbb
repz
mov
pop
shll
stos
jno
es
movsl
mov
pop
test
hlt
jb
xor
jne
jne
mov
jge
insl
xchg
loope
push
mov
mov
lcall
fldenv
jo
sub
push
jne
aad
aas
pop
inc
cmp
hlt
lods
test
mov
popa
int
xor
xor
dec
jno
or
inc
dec
mov
mov
mov
jno
mov
mov
mov
loope
add
scas
xlat
insb
jle
mov
int
pop
mov
sti
jge
fimuls
xchg
jno
sbb
fcoms
dec
add
rolb
and
jno
or
int3
fwait
jmp
ss
outsb
jae
enter
jmp
cwtl
sbb
xor
mov
and
adc
cmp
mov
arpl
push
test
pop
pop
pop
jno
xchg
pop
es
movsb
push
jno
adc
pusha
fidivl
data16
les
xchg
xorl
lods
jno
andb
mov
cld
movsb
mov
mov
xor
adc
sbb
pop
pop
rcl
arpl
add
test
leave
je
mov
cmpsb
fnstenv
fdivs
sub
xor
jno
rorb
iret
dec
mov
sub
sbb
pushf
pusha
jno
cmpsl
pop
int
fisttpl
xchg
in
out
lea
dec
ss
and
leave
scas
inc
outsl
push
pop
push
inc
jno
jne
push
xor
mov
arpl
mov
sub
cmp
pop
lea
jb
xchg
add
jno
fwait
xchg
rclb
imul
jbe
mov
int3
pop
sbb
bnd
lea
jl
jno
in
cltd
popf
mov
cli
xchg
rep
sti
lahf
push
xorb
inc
xor
mov
or
cmpsb
lea
clc
outsl
lcall
loopne
movsb
ja
mov
jb
data16
lods
xor
jne
push
push
cmp
mov
xchg
test
ss
aad
xchg
rclb
out
push
xchg
or
cli
add
cmpsl
clc
popa
icebp
jno
sub
nop
shll
cmp
daa
inc
inc
xchg
cmc
lods
rorl
pop
ja
push
das
mov
jno
xchg
imul
test
add
jno
hlt
std
sbbl
out
ljmp
sub
dec
pusha
push
stos
shlb
int
cmp
shl
jbe
jno
or
push
bound
jno
mov
pop
dec
dec
mov
sti
shl
test
pop
jno
ds
and
repnz
or
test
xor
jno
adc
xchg
dec
sbb
push
inc
push
int
or
jno
or
repnz
pop
data16
je
std
js
and
push
sub
xchg
mov
outsb
jno
mov
jge
jbe
or
addb
mov
and
sub
mov
test
pop
cmp
daa
jno
repnz
std
aad
jmp
das
fnstcw
or
adc
imul
hlt
jge
das
mov
and
adc
mov
imul
add
xor
fsubrs
jae
call
shrl
ja
xor
fdivs
add
cmp
jno
or
dec
popf
and
sub
inc
jno
xor
jb
mov
xchg
ss
aas
jge
imul
repz
das
xlat
sub
pop
push
jno
mov
sub
shrd
shrl
mov
aaa
jae
inc
add
pop
pushf
add
pop
xchg
addr16
loop
in
mov
scas
pop
test
mov
andl
sub
mov
je
mov
inc
jecxz
imul
test
loop
loope
aaa
test
inc
sub
or
pop
push
cli
out
std
dec
xor
cmc
jno
stos
sub
leave
jecxz
and
nop
inc
dec
sti
sub
mov
scas
mov
jno
jmp
lahf
ret
popa
cmp
cmc
andl
addl
mov
loope
jle
pop
in
imul
out
adc
xchg
in
dec
push
insl
das
cwtl
movsb
rcl
decl
or
dec
push
sbb
test
cmpl
stos
iret
xchg
jno
jge
imul
rclb
xchg
fcom
popl
push
cmp
add
adc
dec
loope
jb
mov
test
cmpb
loop,pn
pushf
adc
and
imul
jae
cmp
in
jno
loope
add
filds
push
sub
paddb
mov
pop
xchg
jae
pop
jge
mov
cmp
pop
cmc
xor
mov
push
arpl
sbb
test
jecxz
jecxz
sub
xor
dec
or
mov
hlt
and
jno
sbb
inc
xchg
jle
clc
jno
add
and
sub
inc
into
sbb
jno
mov
mov
pop
stos
push
pop
insb
test
sbb
mov
inc
test
jb
roll
insl
jmp
or
jno
and
loopne
jge
inc
jmp
in
adc
rcr
gs
inc
mov
cli
adc
loop
jo
jno
lret
pop
stos
and
jns
fisubs
xchg
imul
add
call
sbb
test
jmp
insl
insb
mov
mov
sub
outsl
test
leave
jno
cmpsl
cmpb
outsl
add
leave
shrb
jno
rorb
cmp
add
les
es
movsb
cwtl
ljmp
lds
jp
lret
lods
push
pop
jecxz
jnp
insl
add
out
int
jno
aad
xchg
ret
std
popa
or
jb
lock
ss
add
jns
popf
jg
out
jo
xlat
jno
pop
daa
adc
enter
inc
out
sbb
pop
inc
lea
bound
mov
and
les
in
sub
dec
sub
adc
lods
mov
sub
fnstcw
or
fisttpll
jno
mov
push
adc
movsb
push
stos
cmpsl
add
mov
fimull
push
lds
jno
pop
cmpsl
imul
pop
xlat
mov
mov
lods
mov
ds
fldenv
cld
sbb
je
and
push
das
sub
mov
jno
sub
in
roll
push
jno
dec
mov
leave
fmuls
jno
sbb
jno
mov
sbb
test
push
lds
inc
nop
ja
jl
repnz
test
adc
lcall
das
stc
jb
icebp
frstor
ret
cmp
add
in
push
jge
bound
pop
cmp
loope
push
jae
inc
cmp
xor
jno
inc
js
mov
pop
push
push
fsubs
outsb
lret
leave
jno
xchg
adc
mov
into
mov
push
sbb
rolb
sarl
outsl
dec
sbb
jo
out
in
sarl
jno
cmp
arpl
jb
lahf
cmpl
pusha
or
sbb
jno
xchg
lods
mov
orl
adc
or
and
dec
jle
mov
cmp
gs
aam
mov
mov
cmpsb
sahf
jno
into
lods
andl
pop
notl
xchg
and
clc
jno
insb
xchg
fiadds
jno
in
call
js
jo
push
gs
xor
pop
fadd
jno
or
cli
xchg
stos
push
out
jno
lods
cltd
mov
popf
scas
push
jno
js
sub
outsl
sti
and
bound
jno
fs
dec
jno
cmp
or
lahf
subb
adc
xor
jno
jb
lret
or
gs
cmp
popf
clc
cli
sub
jae
mov
xor
mov
pcmpeqb
repz
in
std
arpl
inc
loop
jno
arpl
mov
or
test
icebp
shlb
jno
push
mov
loop
push
shlb
mov
pop
pop
or
cmpsl
pusha
out
imul
mov
rcrl
cmp
jno
call
mov
fs
and
je
int3
icebp
cmp
movsl
dec
out
hlt
jno
add
dec
push
push
daa
jno
lea
mov
out
mov
push
push
or
push
pop
aam
xor
inc
jne
les
adc
mov
shrb
push
mov
stos
jae
cmp
into
loope
push
lcall
jg
iret
pop
or
push
hlt
stos
jno
xchg
psubsw
dec
icebp
stc
jno
push
pop
in
cmp
dec
lds
jns
or
in
jo
push
repz
jne
and
jae
pusha
test
mov
push
jno
inc
cmp
clc
pop
outsl
jno
stc
cwtl
mov
cltd
jno
je
or
adc
add
or
loope
jno
sub
test
iret
inc
jno
pop
and
jno
shl
mov
popf
nop
sbb
out
adc
jno
daa
mov
lds
lret
mov
incb
add
jne
jge
sbb
push
lock
daa
ja
int
in
sti
stos
jmp
ss
xchg
stos
mov
gs
test
movsb
dec
add
jno,pt
jae
movsl
lock
and
in
pop
dec
stc
push
inc
insb
jno
in
add
or
jno
mov
fsubr
jno
aas
jp
icebp
sbb
jno
call
dec
xchg
jno
lcall
jno
add
fsts
cmp
xor
ret
test
jecxz
aas
rcl
scas
xor
or
test
mov
or
xchg
insl
shrb
icebp
in
cmpl
rolb
jbe
pop
outsb
arpl
icebp
imul
outsl
and
lea
dec
ss
push
lods
mov
cli
xor
stc
pop
pop
pop
loop
or
and
add
shl
test
or
fwait
and
or
jno
mov
add
testb
mull
test
and
push
in
xor
push
jnp
jno
mov
sub
adc
sub
jne
pop
inc
sbb
mov
insl
in
or
jno
inc
fsts
jno
test
enter
jno
roll
in
cmovno
inc
sub
push
jecxz
lret
outsb
int3
jno
push
xchg
dec
dec
jno
push
lods
mov
fimull
mov
push
inc
adc
cmp
jno
push
mov
ss
mov
arpl
icebp
and
jno
push
ja
jge
xchg
stc
xor
aam
pop
lods
pop
push
in
je
fistl
lret
inc
pop
lock
mov
cmpb
inc
push
mov
int
dec
movsb
enter
mov
repz
loop
test
sti
inc
adc
jns
fcmovnbe
xchg
bound
aaa
add
enter
arpl
pop
stos
pop
mov
fcomip
xchg
xorl
notb
leave
mov
or
sbb
or
mov
scas
fwait
sub
sbb
jne
push
lahf
jae
xor
add
jno
sbb
or
xchg
jno
out
jns
stos
shrb
in
loope
xor
loop
mov
cs
xor
mov
cmp
jno
sbb
imul
inc
shl
jno
push
mov
in
and
mov
push
imul
xchg
and
lock
popa
lods
mov
idiv
int3
cmp
push
cmp
test
mov
inc
lahf
fsubp
adc
jno
sub
mov
xchg
test
jge
mov
hlt
adcl
lods
aad
int3
int
test
jle
add
mov
clc
jno
test
mov
movsl
lret
xor
mov
inc
je
lcall
dec
jne
mov
ja
jno
pop
pusha
cmc
cmp
loope
test
call
ret
xor
pop
or
rcll
sub
jle
jo
incl
dec
pop
dec
ret
jno
mov
dec
loop
rcr
mov
lea
imul
jbe
jns
push
repnz
mov
rclb
cltd
jno
jge
mov
jno
iret
out
fsubs
stos
pop
cmpb
fnstsw
ljmp
fucom
std
fcmovne
int
test
inc
jno
ja
sbbb
mov
jb
xor
cli
xchg
leave
push
ja
jno
jo
cmp
hlt
sub
nop
repnz
lds
xor
push
in
xchg
jno
gs
fnstcw
sub
or
test
add
mov
fstpt
mov
in
sub
testb
pop
sub
pop
aaa
inc
xor
mov
lret
dec
jno
shl
jg
aam
cmc
jno
fcmovbe
jmp
pop
scas
ss
inc
lds
jne
call
fisubrl
idivl
mov
inc
pop
jno
adc
int3
xchg
insb
mov
jg
mov
je
popa
test
lods
out
hlt
sbb
mov
or
into
cmpsb
jae
xorl
faddp
jno
hlt
pop
repnz
arpl
and
hlt
lods
js
pop
sub
xor
es
mov
mov
mov
jno
or
lret
push
repz
add
xchg
les
jno
insl
inc
sarl
aad
out
jae
inc
scas
or
mov
in
pop
icebp
mov
cli
cmpl
sub
stos
adc
sbb
loop
pop
or
push
xorl
movsb
mov
mov
cmp
call
mov
push
ljmp
dec
inc
pop
jae
and
push
aas
mov
push
jno
pop
or
mov
jg
daa
lahf
pop
dec
outsl
imul
fwait
test
pop
cld
xchg
jne
int3
jmp
in
inc
xor
xchg
and
cmp
mov
jmp
inc
cmp
xor
xor
push
out
mov
jno
stc
shrb
ret
adc
dec
in
push
xor
pop
jns
fidivl
out
hlt
cmp
lock
sbb
test
pop
push
jge
pop
jecxz
dec
jns
int
call
pop
fstl
ret
lret
leave
pop
mov
jno
fs
push
cmp
loope
jbe
cs
stos
pop
sub
fisubrl
add
adc
xchg
xchg
fnstsw
icebp
pop
repnz
lcall
stc
sbb
jno
xchg
push
cmpsb
add
jno
cs
stos
xchg
popf
jno
sub
ss
adc
ret
add
jp
mov
mov
ljmp
in
call
mov
mov
clc
xor
xchg
fiadds
aam
push
cmc
inc
cmpsl
adc
push
jno
lds
jp
mov
test
push
jno
aas
cld
adc
es
adcl
imul
cmc
dec
stc
jno
ds
mov
sub
gs
and
cmp
enter
scas
mov
mov
jg
pop
icebp
inc
inc
xor
in
rcl
cmc
jns
outsl
xchg
jno
mov
dec
or
outsb
cmp
jb
jno
loope
js
jo
jno
add
test
mov
sbb
jp
mov
mov
jo
jno
jbe
ret
subb
ja
pop
outsl
mov
cwtl
repz
les
int3
add
pop
sub
jno
push
gs
daa
cmp
data16
pop
xchg
mov
popa
pop
nop
push
shlb
js
xchg
shr
gs
arpl
insl
incl
lret
adc
jns
xor
repnz
xchg
ret
mov
addr16
xorl
push
inc
scas
jno
mov
jbe
mov
inc
inc
jge
jae
sahf
js
adc
jl
aad
pop
imul
mov
adc
sti
jg
dec
push
ljmp
aad
gs
lret
fnstcw
xchg
jle
scas
jae
les
int
es
adc
and
add
sarl
rorl
jecxz
outsl
and
mov
lea
jb
scas
dec
sub
cmp
mov
jo
add
mov
add
add
lea
sub
cmp
xor
sbb
add
dec
push
jns
xchg
lea
repnz
pop
aaa
xor
cmp
sbb
push
ja
push
xor
jno
into
rorb
jno
repnz
lahf
mov
xchg
sbb
xlat
mov
cmp
add
test
insl
xlat
fldcw
adc
jge
push
push
xchg
push
mov
push
mov
jno
int3
adc
mov
and
mov
roll
fnstsw
out
jg
add
outsl
dec
fstpt
movsl
fistps
push
jne
bound
mov
jno
gs
sub
idivl
popa
adc
add
sub
enter
into
out
mov
cwtl
iret
test
jge
xchg
mov
xchg
push
sti
or
mov
jno
cltd
mov
mov
mov
sub
and
lods
push
adc
lods
cmp
rcrb
xchg
or
mov
and
pop
popa
adc
popl
and
cmp
xor
insl
daa
lcall
fwait
mov
lahf
out
mov
push
add
sti
mov
in
xchg
repnz
lret
aam
sub
cmp
jne
push
fwait
push
popf
out
jmp
xchg
mov
jb
seto
lea
xor
jb
std
loope
call
jae
loope
jg
jno
dec
stc
pop
pop
jno
dec
xlat
mov
or
loope
enter
je
negl
out
pop
pop
push
inc
push
mov
ja
cmp
jp
push
jmp
cmp
jno
xchg
fbld
aad
fidivs
jecxz
es
cmpsl
bound
cmp
xor
jbe
mov
loope
jae
cld
inc
push
into
dec
jno
sub
inc
jge
gs
jae
aaa
hlt
sub
shr
jne
sub
adc
outsb
xor
mov
out
call
xchg
test
xchg
ret
jge
xor
push
lea
jno
mov
mov
lock
int
jmp
cli
inc
inc
xor
pusha
jno
inc
fdivp
gs
cmp
arpl
les
test
movsb
outsl
push
jno
push
in
sub
jno
sub
xchg
aad
aas
sbb
sbb
icebp
mov
and
loope
test
les
jno
mov
fstpt
test
loop
ljmp
push
gs
bound
mov
fsubrs
xchg
repnz
icebp
popa
sub
and
or
sub
out
inc
inc
and
rclb
push
pop
fcompl
repz
add
jno
adc
dec
sahf
stc
int3
jno
cwtl
ss
aam
jl
jno
adc
or
fs
and
pop
cmp
or
or
mov
insl
push
mov
jno
push
ljmp
cmp
xor
out
aam
push
dec
xor
and
imul
mov
out
test
out
jnp
jno
shll
aaa
jno
lcall
jno
push
push
scas
push
inc
mov
jl
inc
cld
ret
xchg
cld
sub
cli
cmp
jae
sub
xchg
in
xor
aas
lock
and
fimull
jo
mov
and
mov
fstl
or
inc
cs
add
jns
xchg
mov
dec
add
pusha
roll
out
cli
cmpsb
jne
push
mov
aaa
mov
jno
stc
cmp
fisubs
xor
lods
mov
lea
icebp
adc
push
xchg
jno
lds
scas
subl
or
mov
push
cli
jno
inc
fs
shlb
push
popf
scas
stos
out
mov
mov
mov
mov
pop
call
mov
inc
push
and
in
or
in
sbb
ljmp
adc
jb
xchg
insl
mov
in
fists
scas
push
cmp
mov
sbb
lds
mov
test
fists
popf
push
xorb
cli
ds
insl
pop
loope
push
and
mov
shr
jp
mov
push
mov
dec
inc
sub
cmp
movsl
mov
adc
or
mov
lods
xchg
out
js
or
push
enter
dec
stos
dec
sub
jno
lcall
jno
mov
pop
shll
in
addr16
in
mov
loop
enter
test
push
pop
data16
jo
ljmp
add
push
cmp
lret
jmp
and
jno
lods
and
cmp
pop
mov
lds
dec
out
or
rolb
adc
ss
jne
cmp
out
and
hlt
cltd
xchg
jno
jge
ret
lea
cmp
push
mov
shlb
test
and
pop
je
sbb
repnz
push
aam
and
jno
and
pop
std
lods
push
dec
push
or
out
mov
stos
jno
inc
pop
and
lahf
inc
popf
adc
jno
out
les
dec
fnsave
or
subb
sub
jns
idiv
orl
jno
call
pop
sbb
xchg
mov
nop
push
push
fs
loope
add
xor
loopne
imul
jecxz
bound
sub
inc
insl
mov
jno
fnstenv
push
pushf
pop
adc
stc
jb
xor
mov
mov
fidivs
cmpsb
mov
or
rolb
xchg
int3
push
and
lods
xor
sbb
mov
out
aaa
adc
jl
lea
jno
mov
inc
les
test
cs
push
jno
push
pusha
jns
adc
mov
ljmp
icebp
sbb
sub
jge
mov
or
lock
inc
jne
cmp
sub
xchg
jno
nop
sahf
outsl
mov
mov
jne
out
xor
add
and
jno
dec
mov
sub
jge
jae
je,pt
jno
jnp
xor
and
pop
add
daa
jae
add
lea
inc
adcl
xchg
add
iret
ja
rol
jno
xor
int3
negb
lock
sar
roll
lret
psrlq
push
inc
ret
lret
cmp
stos
push
mov
cmp
repz
jno
out
subb
test
jae
cld
stos
nop
ret
movsb
pop
out
loop
insb
mov
hlt
in
insl
push
cmc
and
dec
jno
push
fadds
jmp
adc
pusha
ffree
lea
jne
sub
test
jno
mov
sub
ret
jno
iret
and
mov
jno
xchg
sbb
inc
rcrl
jno
add
jge
cmp
xor
jno
sub
xchg
jle
imul
shl
add
and
pusha
into
add
push
adc
insl
jge
pop
mov
repnz
push
lret
or
in
popa
dec
out
and
jns
cmc
ja
push
je
mov
popf
jo
cmp
nop
jno
sub
fwait
mov
xor
xchg
cwtl
clc
xor
xchg
or
jne
out
movsb
sub
inc
test
adc
jne
lahf
pop
inc
inc
jmp
xor
or
dec
test
imul
push
test
pop
fmulp
je
fisttpll
stc
pop
cltd
jb
mov
in
or
scas
add
and
jno
inc
mov
inc
lea
dec
lea
jb
jecxz
cltd
jns
pop
outsl
ret
test
hlt
rclb
insb
add
push
cmp
mov
sub
pop
popa
jno
mov
adc
push
sub
inc
mov
shl
inc
sbbb
jno
jecxz
adc
jne
jae
loop
mulb
add
icebp
ss
je
lcall
inc
jno
enter
or
call
mov
push
mov
pop
repz
arpl
pop
jno
xor
jb
les
rorb
mov
loope
xor
stos
pushf
jge
repnz
lahf
mov
jmp
mov
sbb
test
jns
add
mov
push
cmp
jge
pop
hlt
sub
je
dec
pop
sub
lret
mov
xor
and
shrb
xor
lock
adc
xchg
or
dec
xor
pop
jno
fldenv
mov
jno
js
rorl
push
cmp
xchg
adc
pop
sbb
mov
repnz
xor
loop
adc
stc
add
cmp
jno
mov
push
jno
dec
adc
inc
push
xor
std
xchg
mov
jle
pusha
inc
mov
ficoml
fdivs
lods
icebp
dec
jmp
push
push
jno
cmpb
pop
in
subl
jae
jmp
cmp
dec
xlat
push
push
jle
inc
jns
test
dec
xchg
dec
outsb
jb
or
outsb
rcrb
push
rorl
dec
cmp
inc
jae
jecxz
mov
dec
push
and
add
mov
sub
jl
jno
pop
mov
jae
jg
addr16
std
jno
lret
mov
cli
and
ret
into
mov
xchg
xchg
inc
mov
sarb
mov
jno
into
clc
jmp
adc
jge
mov
push
and
xchg
fidivrl
sarb
push
out
xor
cmp
jno
ja
or
shll
data16
pushf
mov
and
lret
jno
fsts
cmpb
lret
repz
adc
adc
testb
mov
rcrb
repnz
add
icebp
rcrb
sbb
mov
jno
test
push
arpl
mov
loop
xor
pop
jge
sbb
xchg
js
xor
fmuls
popa
cmc
mov
push
cs
jo
sub
add
test
mov
imul
cmp
fidivrs
or
xor
loope
sahf
jne
rorb
jge
fisubrl
adcl
dec
les
cltd
stos
outsl
into
inc
repnz
ja
jg
or
jno
add
daa
in
lret
jno
pop
nop
cmpsb
ss
test
in
xor
jne
sarl
imul
jge
test
neg
repz
pop
fdivrs
and
mov
out
sbb
daa
jno
loopne
or
hlt
scas
jno
mov
dec
sbb
jno
push
test
add
jno
adc
dec
or
add
adc
arpl
out
pop
jns
fwait
xchg
mov
pop
fsub
sbb
mov
push
icebp
imul
into
fstpt
mov
lods
jge
inc
mov
test
icebp
xchg
xchg
enter
inc
out
fcomps
fdivr
jae
orb
out
jb
loope
in
sub
scas
sti
dec
rep
mov
lea
or
and
sub
and
aad
das
gs
mov
cmp
pop
in
jne
in
mov
pop
fwait
hlt
leave
adc
es
int3
iret
addb
sbb
sti
push
popa
xchg
push
out
in
dec
ja
dec
gs
lods
add
mov
fstps
in
lods
jno
retw
test
jno
out
dec
jns
push
jecxz
decl
mov
mov
jo
or
and
dec
cltd
inc
jno
ja
or
or
lds
or
lea
daa
mov
icebp
inc
mov
xchg
push
scas
mov
test
arpl
fstps
mov
jno
sbb
xor
jae
out
js
nop
mov
fildll
sbb
xor
mov
inc
dec
adc
pop
jne
dec
cmpsl
ret
and
inc
mov
adc
mov
sbb
xor
imul
popf
int3
mov
add
stos
les
jno
mov
inc
popa
push
dec
add
inc
push
mov
jge
aas
push
xor
xchg
add
popa
cmp
mov
xchg
jl
movsb
push
sub
sti
sbb
mov
imul
mov
sub
push
or
lods
das
inc
mov
pushf
popa
lret
gs
pop
push
pop
jae
jnp
xchg
repz
mov
mov
inc
icebp
popf
in
pop
stos
jno
stc
les
stos
fidivl
mov
shlb
int
sbb
mov
or
test
insb
or
enter
jae
in
cmp
addr16
ljmp
mov
push
sti
popf
jmp
xor
jae
test
enter
add
inc
sbb
cli
push
sub
call
sahf
fpatan
in
gs
xor
jno
test
pushf
xchg
add
cld
sub
out
ret
mov
rolb
pop
in
jge
jp
negl
lods
jae
mov
mov
jno
mov
push
jno
sbb
pop
mov
leave
sahf
hlt
mov
fnstsw
movsl
xor
lea
sub
fistps
sub
mov
dec
dec
jge,pn
xchg
arpl
pop
pop
mov
mov
jge
dec
sbb
outsb
shl
jle
inc
mov
cmp
out
mov
push
mov
icebp
dec
cli
adcl
jno
mov
loop
jmp
mov
insb
icebp
mov
je
cmp
jb
or
ss
aas
sub
lock
outsb
cmp
mov
es
xchg
cmp
push
aam
mov
je
xchg
sbbl
hlt
dec
push
scas
jno
fldenv
jmp
test
push
mov
jno
cmp
dec
sub
loope
mov
ss
fdivp
fdivs
dec
push
pop
aas
sahf
cmpsb
pop
jno
lock
push
mov
call
into
pop
and
add
cmp
sti
jno
jb
fimuls
in
jno
inc
stc
outsb
jge
sahf
call
call
decb
jnp
jp
ds
sub
jno
adc
dec
jno
sbb
jp
xchg
into
inc
lcall
push
repnz
add
pop
lods
in
jns
ficoms
pop
pop
imul
scas
loopne
pop
std
mov
mov
push
mov
mov
stos
sub
add
jno
popa
xchg
mov
push
aaa
pop
in
dec
jno
dec
lcall
call
and
jno
mov
sub
sub
mov
inc
out
push
push
and
out
jno
and
movd
pop
in
pop
lret
adc
xor
xor
push
in
xchg
cwtl
mov
arpl
loope
add
addl
cld
mov
stos
mov
jbe
pop
pop
es
jno
push
jle
dec
pop
or
pop
pop
push
loopne
or
cmp
lock
hlt
jmp
and
jmp
pop
jbe
xchg
xchg
movsb
test
lret
fwait
sbb
mov
jne
lds
call
roll
nop
loop
addr16
jno
inc
dec
pop
push
daa
sbb
outsb
outsl
jge
mov
mov
aad
jbe
imul
out
adcl
scas
test
jno
mov
inc
pop
adc
lea
push
cli
mov
cmp
add
jno
andl
xor
inc
cmc
ja
xchg
test
jmp
xchg
xchg
jno
data16
stos
or
add
mov
and
xchg
repnz
xor
cmp
xchg
imull
icebp
ja
sbb
jno
sbb
nop
addr16
jbe
pop
inc
hlt
inc
mov
jmp
or
lods
jno
or
sub
or
es
jno
xchg
mov
jno
in
xor
jge
mov
mov
inc
loopne
pop
push
pop
bound
rcll
in
pop
or
and
cmp
mov
fcoml
cmpsb
mov
pushf
loope
jmp
jno
adc
lods
cmp
test
imul
je
iret
jne
xor
sub
nop
test
data16
or
ljmp
mov
dec
jno
dec
mov
lods
jno
stos
shr
push
sub
jne
pop
or
repnz
cs
cbtw
or
inc
jno
sbb
inc
les
jno
test
add
jae
xchg
ret
jno
xlat
ljmp
test
lahf
xor
cs
je
jb
cmp
jno
pop
int
mov
mov
pop
mov
lret
fmuls
push
out
jno
xchg
inc
jae
cmp
repnz
stos
pop
in
iret
shl
jo
cmpsl
sbb
lods
sbb
out
cmpsb
inc
xchg
cltd
insl
cld
xor
pop
decl
mov
jno
mov
push
or
xor
dec
and
sub
jno
sbb
adc
mov
es
sub
sub
repnz
in
and
scas
sar
roll
je
mov
dec
or
push
ret
sub
rcll
jge
xor
push
outsb
jle
or
loop
xor
mov
rorb
adcl
out
mov
ror
fcmovnb
jge
mov
in
loope
insl
test
inc
pop
mov
rcrb
cltd
add
jle
lods
jecxz
jae
xor
pop
mov
loope
push
pushf
cmp
test
test
shll
inc
jno
iret
aas
daa
dec
repnz
sbb
mov
inc
lea
mov
cmp
daa
mov
add
push
and
jno
and
fisubrl
test
shlb
pop
mov
divb
dec
jno
cwtl
data16
inc
pop
in
add
je
nop
and
popf
cmp
pop
dec
into
test
shlb
and
cmp
shlb
ss
jge
dec
dec
rcl
je
sbb
lret
in
pusha
out
ljmp
mov
movsb
cmpsl
cmc
bound
fildl
cmp
jne
inc
adc
jae
inc
adc
dec
lods
mov
inc
mov
jno
call
mov
inc
fistpl
mov
ljmp
iret
pop
shlb
xor
add
outsl
xchg
icebp
mov
mov
adc
scas
jnp
outsl
jno
mov
jo
mov
jae
in
dec
jge
mov
push
push
xchg
test
fcomps
xchg
adc
adc
or
jae
outsb
xchg
cmp
stc
fcomi
dec
cmc
test
jno
sahf
cmp
lea
hlt
enter
jno
xchg
mov
xchg
jge
inc
inc
cmp
notl
dec
scas
jo
inc
sahf
loope
scas
xchg
xor
sub
lock
pop
jne
mov
pop
inc
sub
and
push
jno
imul
fsub
int
shll
dec
cmp
add
jno
mov
inc
add
cmp
dec
mov
mov
and
imul
loop
lret
std
in
ljmp
out
jge
add
fisttpl
jnp
arpl
imul
lock
fwait
xorl
addr16
jno
cltd
xlat
add
popa
jno
cmp
push
cmp
jbe
jae
pop
jno
xor
mov
int
xchg
inc
jno
pop
or
aad
faddp
dec
adc
mov
outsb
dec
push
cmpsb
bnd
test
xor
mov
ret
xchg
loop
scas
jno
and
pop
mov
jno
bound
lcall
add
icebp
fxch
fmuls
or
rcr
int3
push
imul
lods
cmp
hlt
mov
lods
inc
sbb
add
popa
je
jno
in
jecxz
lea
sti
mov
push
repnz
js
sub
jne
push
cltd
mov
adc
aas
xor
iret
jno
dec
xor
pop
in
adc
lahf
xchg
fdivr
xchg
out
cmpl
xchg
jmp
subb
inc
jl
jno
ljmp
lcall
hlt
inc
mov
outsb
add
sub
rorb
add
fs
std
jno
cmp
jno
sub
negl
imul
mov
adc
xchg
dec
pop
icebp
sbb
inc
inc
sbb
fs
and
xchg
ret
xchg
push
pop
jb
inc
daa
xorb
mov
sbb
mov
into
xor
pop
pop
mov
fnsave
addr16
xchg
push
cli
jno
jge
enter
shlb
add
ss
jmp
jle
cli
lods
jbe
jno
push
jnp,pt
cmp
cmp
pop
or
aam
les
mov
ljmp
mov
jae
jnp
mov
popa
fnstsw
adc
jmp
ss
jne
jecxz
pop
sub
popa
dec
pop
loope
push
mov
xor
cli
clc
movnti
ljmp
adc
je
mov
inc
xor
sbb
cltd
lods
nop
jno
or
js
sub
xchg
jl
mov
es
out
sbb
jae
dec
xchg
dec
jno
test
mov
jne
jle
jmp
sbb
aam
in
xchg
aam
mov
lcall
stos
lods
fyl2x
test
repnz
mov
xor
and
mov
jp
push
aas
sub
adc
mov
fisubrs
push
addr16
sub
mov
call
jge
inc
dec
je
xlat
repz
imul
data16
sub
jae
dec
cmp
mov
pop
icebp
clc
nop
mov
dec
int3
imul
jno
cmp
jno
outsl
sarb
in
mov
inc
lods
pushf
bound
adcl
lret
push
outsb
jl
repnz
sub
sbb
push
sub
popf
fs
imul
out
jns
out
icebp
fiadds
jne
xor
cmp
xor
and
fwait
sbb
out
sub
test
sub
and
jne
fcmovb
push
int
mov
push
jno
or
pop
cltd
scas
shl
jno
dec
cmp
push
lods
cmp
adc
jae
sbb
ss
fidivrs
jno
lock
cmp
pushf
sub
add
jno
gs
push
sbb
fiadds
loope
or
sbb
aas
push
cmp
sub
add
lock
jmp
cli
push
dec
out
or
icebp
adc
dec
mov
enter
mov
cmp
mov
jno
sub
imul
sub
rorl
pop
jne
sahf
cmp
rol
cmc
aam
xchg
jge
xor
jns
xor
lahf
xchg
pop
pop
mov
inc
mov
ljmp
jno
xchg
scas
sbb
jno
mov
dec
mov
pop
aam
lods
fmuls
stc
insb
jb
rcrb
shlb
clc
mov
cmp
ret
scas
jno
xchg
ja
aaa
loope
push
sub
xor
jno
xchg
mov
repnz
sub
or
sub
sbb
mov
mov
sub
lea
aam
sbb
jge
leave
pop
sub
jno
jmp
insb
push
sbbl
sbb
pop
fnstcw
xor
pop
and
cld
dec
xor
jb
cmpsl
pop
lcall
stc
test
pop
out
jae
scas
cld
xchg
lahf
jno
fadd
mov
mov
lods
xchg
mov
ds
enter
je
push
mov
loopne
mov
fisubrs
lds
andb
scas
mov
lods
aam
pop
push
repnz
jno
movsb
adc
cmp
jno
icebp
sub
sbb
repnz
pop
add
jno
in
and
mov
adc
push
jnp
das
ror
jo
push
jno
push
ret
lret
movsl
bswap
out
xor
jmp
sub
jno
bound
fsubrs
mulb
sbb
mov
xor
or
mov
xor
mov
insb
jne
sti
pop
loop
mov
add
test
dec
jno
fadds
fstps
lea
test
sbb
ss
rcll
adc
pop
mov
rcl
push
pop
gs
insl
jne
mov
adc
dec
loopne
repz
xlat
cmp
jno
mov
cmp
jno
loope
das
loop
push
or
cmp
ss
xchg
and
mov
jno
stc
xor
jmp
pushf
mov
dec
movsb
lods
insb
jge
pop
inc
popf
fdivrl
inc
es
and
jno
out
ret
cwtl
mov
or
in
mov
into
inc
jo
jno
les
sbb
mov
jns
data16
cmp
lods
out
push
hlt
mov
les
xchg
dec
push
sbb
cmp
or
xor
jno
lcall
jno
out
adc
xchg
jno
inc
aam
ds
push
hlt
les
cmpsb
sarl
subl
into
fisttpl
adc
mov
aam
insb
out
dec
xchg
xor
cltd
jae
jge
push
pop
xor
push
daa
or
rcl
mov
cli
cmp
push
lock
outsb
fdiv
inc
subb
ficompl
sub
mov
sbb
xor
xchg
je
mov
pop
adc
ss
jno
inc
out
adc
mov
jno
adc
mov
fimuls
adc
js
and
lret
out
push
in
dec
jno
cmc
jae
pushf
jne
movsb
test
cs
enter
xor
cmpsb
cmp
pop
inc
inc
cmp
pop
jb
lock
and
inc
ja
je
xor
add
push
rclb
push
sub
ficoml
int3
push
lret
ljmp
out
pop
jae
test
icebp
fwait
add
pop
mov
test
dec
lret
mov
or
std
repnz
jno
cmp
push
jge
lods
lcall
out
in
mov
jno
out
sub
xchg
enter
mov
cmpsb
and
mov
mov
adc
cs
push
mov
dec
jno
mov
sarl
jno
leave
out
in
pop
xchg
imul
testl
and
mov
jno
enter
or
loope
adc
mov
dec
cmp
jno
idivl
pop
push
pusha
in
jge
ljmp
mov
adc
push
jns
fadd
and
or
push
or
add
test
hlt
arpl
fwait
stos
jge
mov
xor
cwtl
ja
pop
add
jnp
jl
mov
in
push
fmul
cmp
nop
jge
and
xchg
xlat
xorl
data16
loopne
mov
jno
rcrl
and
pop
push
sti
jne
add
cltd
jge
sub
cmp
outsb
hlt
pushf
xor
lea
out
hlt
sub
movsb
jmp
jo
mov
pusha
jne
dec
cmp
aam
insb
jae
inc
jae
stos
jnp
cmp
push
jno
cmc
sub
mov
adc
divb
test
shl
loope
loope
jae
xchg
orl
jnp
js
test
lret
jge
outsl
gs
push
jbe
mov
repz
cmp
xor
xchg
repnz
in
jno
ret
mov
ret
idivl
lea
fbstp
xchg
mov
aas
jno
xor
dec
std
or
xchg
int3
je
inc
ja
jno
xchg
fildl
push
sub
test
repnz
xchg
jb
fs
push
xlat
pop
mov
dec
jno
xchg
aaa
jno
leave
jne
push
stos
out
and
jno
sbb
daa
in
sub
dec
jno
fimull
mov
push
outsb
icebp
mov
daa
lcall
jno
push
popa
mov
jge
js
repnz
pop
ss
in
jne
adc
mov
push
adc
rol
mov
jno
jnp
out
sbbl
xchg
sub
fs
mov
js
and
icebp
frstor
and
jno
xlat
add
leave
data16
jecxz
lret
adc
shr
cmpsb
mov
sbb
xchg
outsl
popf
jno
orb
add
pushf
jp
insb
mov
inc
jle
jo
insl
sbb
cmp
shrb
adc
sub
mov
scas
sarl
nop
mov
js
and
dec
jno
popf
jmp
fmul
adc
pop
pop
xor
push
imul
push
mov
mov
cmp
pop
mov
push
add
pop
xchg
jno
xchg
iret
imul
adc
adc
cmp
jno
dec
sub
adc
les
xor
mov
addl
cld
jno
adc
jae
and
in
jb
mov
inc
popa
repz
jno
jo
mov
dec
test
fiaddl
cmc
lds
movsl
lcall
mov
mov
add
or
jne
icebp
ret
dec
aaa
hlt
call
ljmp
cmp
hlt
test
pop
pop
jno
mov
bound
xor
mov
xchg
lods
fldz
pop
dec
shlb
push
repz
pop
jno
movsb
std
test
push
aad
xor
loop
xor
push
jno
add
adc
lret
test
cmpsl
ret
jno
jo
orl
cmp
cs
jnp
sub
sbb
lods
dec
mov
fisttps
shr
dec
clc
xor
jmp
add
push
lods
push
stc
fstl
cmp
aad
push
and
loope
push
xor
inc
add
popa
lret
cltd
jae
dec
shl
imul
sbb
mov
xchg
add
dec
jge
or
jg
xchg
pop
adc
jno
jns
mov
fwait
push
dec
push
in
mov
or
repz
sbb
fldenv
negb
std
or
dec
mov
push
xchg
pop
repz
fistpll
sbb
out
hlt
sub
iret
jno
cli
pop
das
outsl
addr16
divb
jmp
mov
or
lea
inc
hlt
add
jb
sbb
stos
mov
pop
sub
sbb
int
lret
xchg
pop
ja
mov
and
pop
idivb
jno
mov
sbb
rorl
adc
pushf
inc
mov
inc
and
rcrl
cmp
add
aaa
push
notl
pop
lcall
or
andl
out
lret
jno
pop
in
jae
cmp
jno
or
xchg
mov
sub
xlat
xchg
cli
dec
adc
pop
lea
xor
dec
test
pop
call
dec
out
int3
in
sub
add
fwait
dec
xor
enter
in
jmp
sbb
addr16
cmp
mov
push
jnp
jno
lahf
hlt
or
dec
xor
je
test
stos
gs
jle
ret
jne
pop
out
popa
pushf
mov
mov
xchg
out
add
cmp
std
xor
mov
jae
dec
jno
cmp
incl
and
sub
and
js
daa
andl
mov
inc
arpl
jno
rcrb
sbb
repz
and
int
xchg
in
xchg
add
xchg
cwtl
mov
push
xchg
stos
je
mov
lret
jl
std
sbb
mov
stc
push
jge
aad
sbb
je
mov
popa
pop
mov
dec
lea
fdivs
outsl
jae
out
xor
inc
orl
cmp
add
clc
bound
sub
out
ljmp
dec
outsb
test
sub
adc
pop
jno
cvttps2pi
jge
xchg
mov
xchg
jg
add
xchg
sbb
mov
mov
orl
addr16
and
femms
andl
data16
fnsave
and
inc
pop
cmp
popf
mov
cmp
sub
jno
cmp
fdivl
pop
jno
mov
insl
jne
outsb
push
lock
les
xor
xor
daa
and
add
jne
xlat
jno
stc
cmc
push
jb
inc
cmpsl
jno
mov
adc
jno
adc
mov
cmp
push
jno
call
push
pusha
insl
cmpb
stos
scas
in
js
jno
add
adc
add
jge
adc
mov
mov
xor
rclb
data16
cli
and
dec
mov
cmp
cwtl
push
sti
sbb
rcll
jno
shlb
test
jno
sbbl
in
lahf
ret
cmpsb
lret
cld
inc
popf
xlat
mov
cwtl
pop
xchg
pusha
adc
jle
cltd
jns
mov
leave
rclb
stos
scas
fistl
pop
lods
cli
fstpl
stos
xor
and
mulb
sar
dec
jo
cld
jno
cmp
aad
jbe
lret
jno
in
fmull
mov
lods
xchg
js
jb
xor
mov
and
jno
jl
mov
jb
popa
loope
jno
into
scas
lahf
cli
jp
adcl
mov
fimull
scas
rclb
outsl
out
mov
jno
push
sahf
cwtl
mov
cmpsb
psraw
or
fstps
push
jno
and
pop
out
pop
mov
and
sahf
xchg
outsl
lods
fs
cld
repz
aad
mov
pop
mov
scas
outsb
sub
imul
clc
dec
out
shll
mov
nop
sahf
jno
mov
cmpsl
mov
add
jb
movsb
jns
jns
cmpl
sbb
out
jno
fidivs
in
cmp
bound
or
mov
js
jp
adc
les
fsts
insl
mov
jne
adc
mov
push
mov
call
push
lahf
cmp
jno
or
stc
int
fsubrl
and
mov
xchg
inc
sub
xor
mov
dec
sub
jne
and
sbb
push
popf
shrl
pop
pop
pop
loop
xor
ds
cmc
jne
dec
push
push
lea
adc
xchg
repz
adc
jno
enter
mov
and
das
jl
sbb
and
sarl
iret
call
loopne
popa
in
call
shlb
clc
adc
daa
vpmaxsq
push
movsb
outsb
repnz
jno
or
push
lods
mov
daa
shll
data16
xor
inc
push
lahf
xchg
test
fldenv
sub
popf
mov
cld
int
push
pop
mov
or
roll
jno
mov
dec
push
gs
jno
les
cmp
add
inc
ja
stos
sub
in
sub
dec
roll
cli
jno
cmp
js
jle
dec
leave
lret
mov
cs
test
fsubr
jae
hlt
lahf
insb
mov
out
mov
inc
or
lods
pop
or
pop
add
ret
mov
divl
push
pop
or
loopne
cmp
pop
lods
shl
sub
nop
lret
fstpt
pop
jno
push
add
xchg
inc
sbb
mov
bound
pop
pop
mov
xchg
lcall
data16
and
jne
xchg
cltd
mov
cmc
adc
mov
pop
or
xchg
mov
iret
adc
into
add
push
mov
push
pop
out
das
cmp
xchg
mov
ss
in
arpl
sub
or
mov
mov
or
mov
fs
shll
xchg
or
xor
les
push
push
dec
and
xor
dec
mov
in
sbb
and
pop
or
jne
aaa
jno
xchg
das
and
adc
jno
lds
divl
popa
in
mov
lret
sbb
push
pop
jno
shrl
aam
fwait
xchg
pop
add
push
jno
mov
insl
mov
cwtl
je
mov
mov
cmp
cmp
cltd
stc
sbb
pop
dec
mov
mov
jno
and
mov
jge
add
xor
call
sbb
je
mov
mov
xor
lahf
jno
jg
cmp
jno
and
jno
fisttpl
sub
sbb
imul
lret
jno
push
push
sbb
insl
xchg
stos
das
out
mov
hlt
pop
in
jo
push
lds
pop
nop
push
into
sub
lea
add
jne
sahf
dec
cmp
lea
mov
hlt
fcmovb
inc
add
iret
cmpsb
add
xor
lea
cli
mov
sub
dec
mov
sbb
sub
adc
sbb
hlt
jno,pt
push
mov
mov
int
inc
daa
mov
jno
adc
call
jno
je
and
sahf
out
adc
xchg
jbe
lds
dec
adc
push
xchg
add
pusha
xorl
or
sbbb
ret
nop
lods
lea
cmpb
sub
stc
add
shll
xchg
xchg
or
out
and
ret
rcll
mov
faddl
mov
adc
jg
test
or
rcrb
mov
shl
je
out
int
addr16
add
cmp
sbb
jae
hlt
push
mov
push
xchg
test
repnz
lret
sub
jno
inc
out
shrl
jge
jmp
xchg
gs
jb
push
inc
lods
je
fimull
dec
mov
xchg
or
fbld
popa
jno
push
mov
mov
sbb
gs
shr
sub
pop
push
jno
hlt
add
loope
mov
stos
fstpt
enter
and
cmpsl
cmc
gs
jno
stc
pop
pop
push
clc
xorb
popf
mov
je
push
ds
pop
jb
mov
mov
jae
addl
enter
scas
lcall
dec
aaa
sub
insl
jmp
xor
jge
out
mov
out
jno
roll
jmp
mov
js
adc
aaa
jno
xor
adc
jno
adc
es
repnz
mov
cmp
scas
lcall
es
push
clc
out
arpl
aaa
and
mov
test
je
imul
and
out
mov
repz
add
insb
pop
inc
testb
xor
inc
push
push
insl
pop
in
jge
mov
ja
xor
jno
jecxz
cmpsb
lcall
cltd
ss
sbb
mov
cmp
nop
xor
into
je
adc
ss
scas
lcall
mov
mov
fwait
test
hlt
and
sbb
int3
xchg
xor
mov
push
sub
das
stos
mov
mov
out
mov
pop
add
lock
push
mov
testb
add
mov
cld
xchg
jno
test
inc
inc
jno
adc
inc
bound
jno
imull
out
fstpl
aas
adc
mov
jno
jbe
pop
fmull
sbb
sbb
in
ret
test
jge
push
lahf
out
out
jno
mov
sbb
mov
icebp
aam
push
rolb
pop
pop
xor
add
add
fisubrs
out
xor
stc
jmp
fidivl
scas
js
mov
sub
lcall
gs
inc
or
adc
lds
mov
sub
in
jno
pop
and
pop
mov
das
lea
adc
ja
inc
dec
inc
mov
jno
mov
cmpsl
cs
jno
lea
pop
xchg
jno
scas
subl
adc
lret
sti
rcrb
dec
xor
mov
ficompl
sahf
jno
adc
push
sub
pop
xchg
hlt
push
cwtl
cs
jno
push
cmp
mov
ja
hlt
mov
addr16
and
cmpsb
jae
pop
loopne
xorb
mov
fbstp
test
hlt
inc
xchg
jno
scas
les
jno
jl
cmp
add
jne
cli
adc
push
out
jp
jno
repnz
mov
xchg
jno
lods
ret
iret
test
stos
sub
push
adc
push
insl
jae
imul
sbb
add
jb
inc
sbb
push
outsl
out
jg
bound
xchg
stos
mov
out
scas
inc
or
jb
nop
and
rclb
mov
lea
jae
cmp
mov
xlat
rorb
bound
ja
lods
jno
mov
mov
jg
push
divb
push
xchg
push
jp
ds
jno
xor
and
dec
imul
lret
inc
movsb
inc
fadds
mov
cmp
sti
insl
mov
jg
repnz
add
jno
and
fidivl
mov
mov
pop
or
mov
sub
mov
pop
xchg
inc
cmpxchg
pop
adc
sub
scas
adc
jb
dec
jge
jge
fdivr
inc
and
sbb
push
xorb
pushf
mov
add
addr16
jno
insb
inc
mov
push
les
xorb
dec
add
stc
lea
out
cmpsb
lret
pop
cld
xchg
or
push
cltd
in
in
sub
add
aaa
jno
shll
cld
hlt
inc
insb
jno
adc
push
pushf
push
es
push
add
aam
xor
xlat
jns
push
mov
and
xor
ffreep
xchg
aam
and
inc
xchg
jno
iret
mov
xchg
lret
inc
out
lods
jns
jb
arpl
nop
sbb
xchg
pop
or
sahf
jl
push
cmc
ret
aam
arpl
lret
xchg
inc
subb
nop
push
je
divb
shlb
shll
and
add
cmp
bound
add
and
out
pand
std
mov
lods
push
mov
ficoml
iret
jno
cmpsl
mov
rorl
es
cmp
push
ficomps
and
shlb
sbb
les
mov
or
ljmp
in
lock
test
mov
or
xor
xor
sbb
loop
xor
inc
pop
shlb
mov
cmc
cmp
rcll
or
ss
pop
or
outsb
ret
and
jecxz
add
aam
dec
shlb
bound
sti
push
stos
xchg
jno
mov
or
adc
sub
out
test
jecxz
out
jbe
cld
add
das
jno
xor
aas
xchg
in
mov
mov
dec
movsb
gs
outsb
arpl
test
stos
sbb
pop
jno
movsl
lret
std
lea
jge
cmp
lea
ja
test
pop
add
dec
and
call
sub
imul
sbb
aas
jne
push
mov
push
test
faddl
jge
or
push
shrb
repnz
lret
sahf
cmp
lret
xor
mov
rorl
xchg
inc
mov
and
arpl
shrl
and
rorb
insb
sub
into
jge
test
push
jae
cmp
cwtl
stos
out
ja
mov
lods
aad
ljmp
sub
ss
es
test
xorl
mov
stos
lahf
mov
and
test
imull
adc
mov
sbb
ja
jno
jg
add
lods
ss
sti
icebp
icebp
aaa
pop
stos
iret
mov
adc
jae
addr16
dec
cltd
jne
dec
inc
pop
and
jno
lods
rol
int3
fisttpll
fdiv
das
sbb
xlat
adc
jno
jae
mov
insl
imul
cmpsl
inc
mov
repz
cmp
ss
jmp
sbb
int
push
andl
pushf
outsb
push
stos
xchg
jno
mov
out
mov
push
rcll
mov
sub
mov
and
jmp
fidivs
sbb
out
mov
fmull
jno
pop
sub
cmp
leave
push
inc
mov
arpl
stos
pop
cmp
mov
incb
jno
push
pop
dec
lret
mov
jae
iret
dec
push
lds
xchg
mov
or
dec
lods
jge
sbb
pop
or
in
jae
xor
jno
xchg
cmpsl
cmp
and
sti
in
or
repnz
cmp
std
cmpsb
adc
call
xor
add
pop
pop
jb
xlat
inc
xor
data16
mov
xchg
push
mov
mov
jg
and
jno
je
cmp
inc
push
dec
push
imul
jmp
mov
jp
add
mov
enter
fcoml
pop
mov
in
lods
sti
stos
jmp
gs
lea
aam
shll
push
push
add
jp
or
pop
loope
xchg
inc
jb
mov
iret
xchg
jp
les
jno
inc
mov
cltd
xor
pop
jno
rolb
jns
or
inc
or
scas
jnp
cmp
aam
and
jne
cs
sub
repnz
test
mov
jns
or
dec
mov
jb
jle
inc
cs
and
xchg
int
arpl
int
or
aas
movsl
mov
jg
xor
jno
fcoml
mov
test
mov
hlt
mov
bound
jno
pop
negl
inc
dec
cmp
jno
mov
and
cmpsl
int3
jmp
outsb
divb
imul
or
jne
mov
jo
mov
xor
lock
fdivl
push
xchg
into
into
jno
data16
cld
xchg
push
jge
outsl
outsb
push
cld
pop
cwtl
imul
lock
cmpb
push
dec
daa
xchg
push
sahf
jbe
paddq
inc
jno
mov
inc
pop
cltd
int3
ret
jne
xchg
sub
imul
xor
rcr
inc
xlat
push
mov
int3
fistpll
xchg
jns
inc
cmp
pop
stc
hlt
pop
mov
loop
pop
push
sub
mov
sub
mov
clc
inc
lds
mov
push
inc
pop
cmp
ret
mov
outsb
insl
jno
or
push
xor
jle
jno
push
dec
scas
jae
pop
xor
jno
out
pushw
in
sub
or
xchg
inc
mov
jno
int
test
mov
aad
shl
hlt
popf
sbb
aas
mov
inc
or
xchg
dec
imul
iret
adcl
add
jno
mov
bound
and
jno
sbb
push
jmp
mov
cmpsl
rep
xor
inc
scas
jno
push
addr16
mov
ret
sub
fidivs
push
mov
xchg
hlt
repz
cmp
sti
jge
mov
jno
out
bound
jl
adc
mov
out
mov
jno
insl
rorb
nop
je
dec
out
add
jecxz
fs
in
inc
xchg
iret
mov
test
data16
sub
or
add
ficomps
jno
xchg
inc
js
push
adc
and
sbb
leave
int3
and
jmp
dec
lds
int
hlt
push
push
or
pop
and
xor
jno
pop
out
popf
mov
je
mov
pop
test
std
adc
jne
jb
int
pop
sahf
hlt
push
inc
jne
jecxz
loopne
xchg
xor
jno
xchg
movsl
xor
xchg
cmc
in
daa
mov
lea
pop
lock
jno
test
ret
mov
je
push
sbb
and
fsubrl
dec
cmpl
movsb
mov
int
and
jno
inc
push
mov
clc
jno
loopne
mov
jno
in
pop
shll
lret
xchg
test
mov
or
lea
das
daa
pop
call
outsl
mov
cmp
insb
jbe
jno
ss
xchg
xacquire
jno
cltd
jns
cmp
sbb
jo
fmull
mov
loope
dec
sbb
ss
lea
jae
add
mov
dec
cmpsb
add
dec
and
lea
aaa
in
push
inc
jno
je
and
sub
repz
daa
fstpt
pop
pop
and
sbb
adc
xchg
or
jns
mov
mov
ss
inc
shlb
cmp
jb
inc
aam
dec
xor
std
inc
in
cli
aaa
cmpb
arpl
cld
or
adc
cmp
mov
xchg
xchg
mov
jno
jecxz
cs
shrb
pusha
xor
jb
lea
cwtl
xchg
pop
xor
sbb
jecxz
sbb
jns
insl
dec
mov
lea
cld
sbb
inc
jae
pop
hlt
test
in
icebp
push
sbb
sub
loopne
rol
push
jg
jle
push
nop
xchg
cmp
idivl
jmp
in
lds
cld
and
out
jno
fstl
jns
movsb
mov
je
inc
shll
out
shr
pop
jno
mov
mov
lahf
lods
xchg
int3
adc
jno
cmc
pop
data16
cmp
jno
rcll
jecxz
into
mov
repnz
xorl
sbb
mov
jnp
and
jno
mov
repz
aas
in
shrl
das
add
mov
jno
sub
addr16
scas
loope
jae
jno
mov
jno
xchg
mov
fwait
inc
orb
ds
sti
jno
add
push
in
mov
in
xchg
lea
push
outsl
mov
jle
scas
mov
sbb
pop
bound
test
stc
mov
stos
mov
imul
mov
jne
lcall
mov
or
jne
pop
fisttps
mov
jno
add
jns
pushf
mov
lret
jne
sbb
dec
jb
mov
div
pop
mov
rolb
adc
mov
mov
jno
inc
insb
adc
sub
xchg
imul
sbb
xorl
xchg
cld
push
inc
jno
mov
xorl
push
push
shrl
push
jno
orl
addr16
das
add
sub
pop
inc
fsubl
xor
imul
pusha
pop
jl
adcl
das
sti
test
dec
and
sbb
test
mov
mov
mov
push
cmp
adc
test
sub
pop
nop
jge
imul
imul
xchg
sbb
ja
aam
lods
xor
mov
adc
jae
xor
sbb
aad
sarl
mov
jno
xchg
in
neg
and
jne
lds
sub
outsb
in
out
je
xchg
cmp
xor
lret
test
pop
jno
sbb
jno
xchg
push
repnz
dec
divb
sub
push
arpl
test
das
clc
xor
fadds
jno
add
sub
mov
mov
adcl
xchg
lret
jge
shrb
in
rorl
pop
jge
insl
inc
ja
orl
mov
mov
or
jae
mov
test
imul
cmp
jb
or
lea
jb
push
mov
jno
imul
adcl
jno
sahf
mov
shlb
sub
xchg
fiaddl
xchg
jns
pop
lahf
popf
jecxz
repnz
push
test
icebp
ljmp
lock
test
cmpsl
pop
push
jno
lea
cmp
shlb
push
add
in
jl
pop
je
mov
pop
add
mov
cmc
pop
sbb
inc
xor
jg
ss
pop
jo
mov
dec
jne
jno
xor
lret
jp
in
jno
sbb
adc
jno
cmp
rorl
jge
pop
jno
sub
cmp
mov
fnsave
adc
lret
xchg
stos
inc
dec
mov
loop
repz
dec
xor
sub
sub
jmp
in
xor
cmp
je
adc
or
shl
jbe
ljmp
fwait
sub
fs
push
bound
int
sbb
call
or
mov
int
mov
push
jno
cmp
dec
stos
jbe
pop
jno
push
push
jmp
call
mov
adc
jno
lfence
ret
or
push
mov
lds
mov
gs
icebp
shll
add
jne
addr16
push
jne
jmp
loope
xor
jne
adc
mov
scas
add
jge
jb
and
pop
movsb
and
lods
inc
repnz
push
mov
repnz
or
mov
xor
loopne
jne
jno
into
mov
jge
cmp
aad
rcll
scas
inc
das
jno
jle
fs
cmp
sti
push
jno
sub
rolb
call
inc
jae
mov
xchg
aaa
rep
cli
addl
xchg
or
decb
push
bound
jno
or
cmp
orl
test
and
xchg
push
sbb
push
jno
add
int
jns
push
jo
clc
bnd
fldl
fisubrs
cld
mov
jo
or
mov
bound
insl
fs
mov
push
leave
xchg
insb
ja
out
movsl
loope
icebp
xor
gs
jns
nop
arpl
cmp
pushf
sahf
mov
insb
xor
pop
sub
pop
ja
lods
mov
cmpxchg
inc
jbe
push
jae
in
cmp
push
lret
jb
xorb
sbb
sub
add
jno
daa
dec
lock
in
sub
jno
aam
fistpll
jno
cmc
dec
push
xor
repz
jno
ficompl
enter
push
outsl
insb
cltd
xor
jge
jno
cld
fisttpll
dec
fs
aaa
jno
ret
scas
aas
aam
jno
adc
jno
xchg
cmp
enter
sahf
dec
hlt
or
data16
in
and
rcrb
adc
xor
das
pop
xrelease
sbb
jno
cmp
xor
aas
mov
mov
cmp
inc
leave
pusha
and
fimuls
stc
cmc
jecxz
dec
sbb
pop
pop
xchg
jae
cmpsl
ret
xchg
push
mov
icebp
mov
inc
adc
shll
adc
inc
sbb
std
dec
adc
jns
pop
dec
jae
data16
jge
xchg
dec
popf
prefetcht1
ja
in
lods
inc
push
repz
mov
scas
rclb
jno
scas
add
dec
test
je
push
xchg
mov
jle
repz
jno
mov
addb
sbb
jbe
pop
lcall
mov
imul
dec
out
leave
jno
cli
jg
in
ljmp
jno
aaa
jb
out
jno
outsb
mov
inc
icebp
dec
jecxz
insl
pusha
repz
fisubrs
cmp
jno
into
mov
adc
cli
push
daa
pop
shll
cmpsl
mov
jno
cmp
cmp
jno
lods
xor
xchg
hlt
je
xchg
or
sub
cmc
mov
leave
push
sub
mov
jo
fsin
scas
pop
loope
cmp
mov
inc
jb
inc
xchg
test
loopne
fldt
add
xor
ret
sbb
out
lea
cmp
je
mov
xchg
mov
data16
sbb
sub
xchg
add
and
loope
repnz
push
jno
mov
sbb
jno
js
cmp
mov
adc
jae
jno
sub
scas
or
in
sbb
aam
inc
stos
add
jge
enter
dec
and
fisttps
dec
mov
ljmp
test
repz
jne
test
je
iret
and
movl
inc
adc
popl
shlb
xchg
jle
movsb
cld
jg
repz
mov
loope
rcr
je
lret
xorl
fwait
adc
mov
enter
adc
decb
loope
roll
je
pop
jl
es
jno
push
cmpsb
orl
aad
adc
mov
xchg
popf
repnz
push
test
jae
sub
lcall
data16
cmpl
jns
jno
pop
xchg
into
out
dec
sarb
into
jno
mov
fsubrs
jae
push
jl
in
ds
jae
pop
pusha
dec
aad
test
test
decb
ja
adc
pop
out
out
push
inc
or
jno
fdivs
int
pop
stos
jno
push
in
aam
outsb
jno
mov
nop
jmp
mov
mov
sbb
mov
dec
and
pop
inc
jmp
in
pop
js
je
dec
and
xchg
add
les
push
mov
fidivrs
add
pop
xchg
jns
adc
cmp
jae
dec
push
inc
scas
and
jl
and
fstpl
mov
sbb
lods
pop
xchg
inc
mov
xor
into
and
cmpsb
out
cmp
sub
sbb
cld
or
sub
sbb
jno
cmc
out
stos
jecxz
addr16
lods
or
mov
bnd
sbbb
hlt
jg
cmp
jo
arpl
and
stos
pop
add
push
bnd
add
cli
nop
in
stos
or
imul
mov
movsl
xor
xchg
stc
xorl
rclb
mov
stos
jns
inc
adc
jecxz
or
lea
mov
sub
adc
xor
push
push
cli
inc
cmpsb
jl
pop
icebp
push
jb
jae
test
test
and
mov
outsl
mov
int
dec
inc
pushf
fwait
aam
or
popa
addr16
or
gs
jno
ret
push
jno
aam
lds
lret
sbb
and
jge
adc
mov
jmp
inc
ds
cmp
repz
and
fadd
stos
sub
inc
inc
push
jl
mov
jno
outsb
inc
js
xor
jbe
in
mov
xchg
lock
data16
dec
or
xchg
stos
jb
add
fucom
into
jl
push
mov
lds
rorl
data16
lret
divl
imul
pushl
pop
addl
rcll
cmp
xorb
loope
scas
roll
inc
jne
jl
xor
or
mov
ja
popf
sub
repz
adc
in
aam
xchg
inc
add
sarb
and
sub
lret
and
gs
xor
leave
mov
jae,pt
das
ret
cld
mov
ds
sti
xchg
xor
xor
ja
ss
mov
jp
jne
movsb
mov
cmpsl
or
mov
adcl
and
inc
mov
lgdtl
out
ljmp
lds
mov
bnd
daa
test
inc
mov
hlt
jno
mov
test
jno
pop
or
icebp
or
mov
mov
insb
jl
jae
scas
jno
push
cwtl
mov
jb
movsl
jae
int
test
lcall
in
out
mov
adc
and
or
subl
movsl
iret
aaa
mov
lods
or
inc
mov
gs
rcr
jno
scas
les
cmp
push
xchg
movsb
ror
push
lahf
jno
push
popf
inc
add
jno
sbb
js
out
push
xchg
call
mov
cmp
jb
cmp
leave
or
xchg
jns
cmp
dec
jb
mov
xchg
call
jno
adcl
iret
mov
jge
cld
jge
mov
in
add
pop
roll
mov
sbb
fnstsw
adc
jno
ret
jb
scas
cld
sub
jne
ror
lcall
fs
lcall
add
jno
rolb
jno
adc
in
divb
insb
jge,pn
jmp
icebp
push
fs
pop
adc
jno
mov
call
mov
xor
mov
ret
addr16
mov
jl
mov
cmpsb
xor
mov
cltd
xorb
dec
hlt
pop
xor
mov
sbb
into
cli
jns
lock
xchg
mov
lea
push
mov
ljmp
and
or
inc
push
lea
out
cmpsl
je
outsl
jl
mov
push
mov
xor
daa
stc
xchg
jno
repnz
xchg
add
push
iret
jno
or
jns
aam
jno
sub
lods
jno
movsb
jecxz
lods
icebp
test
push
cmp
jne
fldenv
or
cwtl
data16
jno
jmp
cmp
jno
fisubs
bound
add
adcl
jno
inc
in
orl
jg
sbb
sbb
pop
mov
mov
ror
loopne
int3
test
nop
inc
sbb
and
in
iret
arpl
gs
and
xor
jno
enter
es
and
jno
in
fwait
js
les
sbb
jae
jg
das
loop
cmp
xor
push
ja
jno
inc
xor
mov
pop
loop
sub
jp
jno
pop
dec
js
lea
insl
jb
and
outsb
test
mov
sahf
jge
fs
jmp
xchg
lock
xchg
xchg
out
or
addr16
popl
sub
cltd
mov
add
jno
xchg
add
xlat
ljmp
lcall
lods
sub
pushf
in
into
push
rcll
xchg
mov
mov
std
clts
and
dec
jno
and
and
jno
imul
mov
cmp
cltd
lods
neg
data16
cld
cmp
shlb
jno
cmp
and
xchg
ret
imul
xchg
or
jno
insl
shl
adc
push
jae
fmuls
mov
aas
aad
or
jne
mov
sub
lea
inc
mov
das
inc
jno
dec
idivb
enter
and
in
jno
jo
xchg
mov
aad
jge
adc
fs
scas
xchg
cs
and
adc
jns
or
outsb
repz
icebp
aam
jno
jnp
jo
lods
mov
pushf
test
cmp
sti
lods
push
sahf
jp
nop
nop
cmp
imul
adc
cmc
jno
shrl
jno
lea
mov
icebp
pushf
jge
inc
pusha
test
jno
lds
lcall
lock
je
in
ss
jae
xchg
xorb
inc
sub
jno
cli
aam
adc
jl
mov
lods
stc
loope
or
jno
adc
call
push
cmpsl
es
lea
xor
and
mov
inc
loopne
push
pop
insl
xor
adc
repz
je
sbb
lret
sub
iret
outsb
push
and
jno
inc
fldt
lds
jno
pop
jbe
in
stos
xchg
and
pop
loope
jb
or
jbe
xor
mov
jno
fs
xchg
xchg
mov
out
lea
mov
and
mov
repnz
jo
cli
mov
jno
movsb
in
xchg
js
inc
push
outsl
jg
mov
cmpsb
inc
nop
jmp
jno
xchg
stc
mov
divb
push
jmp
jge
sub
out
jb
and
ja
repnz
lcall
das
std
sbb
mov
xchg
clc
ja
xchg
jno
pop
push
int
cld
ret
jns
aam
adc
lods
mov
orl
test
jb
das
fldenv
jmp
and
jmp
std
in
jge
pop
bound
jae
push
jo
jns
sub
jno
arpl
loope
stos
mov
jno
xchg
out
in
out
test
and
sub
inc
pop
jo
mov
mov
and
xor
out
pop
mov
fwait
bnd
add
jae
lahf
mov
or
fs
subl
dec
gs
sbb
jae
mov
adc
cmpl
or
pusha
loopne
out
mov
shlb
xchg
jo
mov
cli
jle
nop
pop
xchg
xchg
imul
push
mov
dec
sub
xchg
mov
test
jno
ret
loopne
xor
jo
xor
dec
or
cmp
jb
cmp
xchg
sbb
jge
adc
jno
lcall
push
xchg
push
xchg
jno
aam
adc
imul
xor
fcom
repnz
mov
cmp
jno
fldcw
or
aas
push
cmpsb
divb
mov
and
dec
pop
call
in
cmp
jno
xchg
ret
mov
jae
out
gs
iret
mov
mov
jno
inc
fdiv
and
jmp
cmpsb
pop
xor
and
push
inc
repnz
scas
icebp
stos
xchg
jbe
jb
and
in
jae
mov
and
jg
arpl
shl
pop
xchg
jae
sarb
xor
jl
jo
jnp
inc
mov
test
xchg
jmp
int3
nop
xchg
push
lods
mov
les
mov
mov
adc
xchg
jp
adc
test
mov
cmp
fs
cwtl
rcrl
jne
lods
add
jecxz
jne
mov
lcall
je,pn
scas
jb
push
outsb
adc
mov
pop
push
insb
inc
mov
fimull
adc
jno
jle
movsb
std
jp
inc
jno
push
lods
sub
or
je
xchg
cmp
sub
aas
sbb
pop
jmp
inc
jne
cltd
fildll
ss
sub
mov
and
jns
in
sarl
rcl
popa
mov
mov
or
out
lea
mov
lods
rol
jno
mov
xchg
lods
inc
jne
mov
aad
int
mov
testl
enter
lds
jbe
cmove
in
jno
mov
xor
imul
popf
das
sbbb
mov
jae
mov
adc
dec
dec
neg
xchg
imul
add
in
cli
or
add
nop
jo
sub
cmpsb
mov
shr
jae
lret
sbb
loope
rorb
xchg
mov
hlt
dec
filds
pop
jno
in
arpl
sbb
ds
stc
push
and
xchg
cmc
cmp
xchg
std
lcall
inc
jns
aam
adc
and
cltd
xchg
test
xchg
xlat
mov
mov
cmp
fldenv
ss
pushl
data16
mov
jg
add
mov
pop
shlb
xchg
mov
push
xor
adc
xor
je
add
ljmp
inc
jae
aam
andb
jno
lock
dec
ffree
adc
pop
mov
push
xor
jecxz
jno
lcall
jno
out
in
mov
or
int3
add
repnz
xchg
aaa
imul
sbb
and
mov
mov
jno
mov
xchg
xchg
inc
add
iret
cwtl
in
je
xor
inc
jno
pop
outsl
daa
mov
jns
mov
jg
mov
mov
outsl
xor
jge
add
mov
out
mov
jge
clc
fnsave
xor
jb
lcall
cmc
and
icebp
mov
adcb
xchg
xor
aas
xchg
jno
add
lcall
xchg
movsb
ja
jno
mov
pop
lods
adc
and
xchg
lods
or
data16
and
push
out
mov
loope
jmp
sarb
lahf
repnz
orl
ds
adc
xor
mov
mov
fists
mov
xchg
jne
inc
fisubrl
fimuls
mov
icebp
sti
mov
jmp
mov
jno
inc
cli
jbe
pop
inc
jns
in
cmpsl
xchg
js
shlb
jmp
xlat
jecxz
push
std
add
push
xor
cmc
mov
es
and
mov
repz
push
jae
mov
mov
mov
push
ljmp
xchg
mov
add
mov
ss
std
mov
js
jno
data16
cltd
add
jb
test
lcall
and
rcll
test
jne
mov
in
sub
push
insl
shll
add
icebp
shll
popa
xor
add
cmp
lock
sub
neg
push
mov
or
test
push
shl
add
sbb
push
bsf
sub
sub
push
jmp
jae
jmp
call
call
movl
add
jge
test
neg
pushf
pushf
rol
movb
mov
lea
call
bt
cmp
push
pushf
jmp
pushf
lea
ja
cmc
call
outsb
popa
jnp
sub
mov
pop
iret
nop
movsl
cmp
push
jg
loope
out
push
cmpsl
hlt
jge
rcrl
jge
cld
test
out
mov
repnz
mov
rol
mov
xchg
lahf
or
test
push
ds
push
pop
pop
dec
cs
sub
aaa
cmp
lcall
popf
push
cltd
fwait
repz
loop
mov
cmp
sbb
dec
pop
inc
pop
xchg
iret
dec
sahf
add
fxch
in
mov
addr16
pop
andw
cltd
push
stc
mov
or
aaa
fsubr
hlt
mov
cwtl
cmp
lahf
insl
nop
lock
inc
and
xchg
aas
out
stos
cwtl
adc
sub
aas
in
inc
imull
nop
cmpl
push
adc
pusha
leave
xchg
mov
fucomi
ljmp
adc
mov
out
jns
inc
lcall
jbe
sub
and
jb
lea
jb
pushf
pusha
push
pushl
ret
mov
seta
push
pushl
pushfw
popw
xor
mov
call
inc
lea
jmp
call
jmp
not
setge
inc
inc
seto
mov
inc
xor
jmp
mov
bt
test
pusha
bt
sub
lea
push
pushf
not
lods
adc
rcr
sub
rol
not
test
jmp
mov
lea
jae
pusha
lea
jne
push
stos
mov
movw
mov
lea
jmp
lods
lock
aas
sahf
push
cmpl
gs
mov
add
fsub
push
movb
movsb
pushf
mov
inc
inc
fnstenv
add
scas
sbb
loopne
cmp
push
btrl
insb
or
lods
js
xchg
mov
jecxz
add
adc
add
je
or
dec
addl
sub
cmp
jge
xchg
pushf
or
cmp
or
mov
dec
sub
sbb
cmc
inc
lods
fildll
mov
dec
dec
aad
mov
gs
rcrb
sub
lea
test
mov
clc
sub
movsb
mov
pusha
mov
aas
mov
push
rolb
dec
imul
roll
sbb
cmp
ret
loop
xchg
repz
out
test
sub
mov
arpl
hlt
mov
pop
cwtl
adc
cmp
or
adc
scas
dec
fstl
arpl
and
int
push
jp
out
or
or
jb
dec
jb
test
les
mov
cmpsb
mov
fisubrs
pop
imul
dec
push
mov
or
mov
test
lds
daa
sub
pushf
lea
call
push
jmp
add
inc
js
je
jb
arpl
jae
sub
ror
xchg
sbb
mov
and
push
sub
mov
jmp
jmp
push
and
mov
bt
add
pusha
pusha
movb
push
lea
jmp
mov
cmc
test
call
lea
jae
pushf
jmp
push
push
jmp
pushf
call
mov
scas
idivb
cs
fisttpll
adcb
xchg
js
popf
push
shll
sti
cwtl
mov
mov
mov
es
cmp
xchg
xor
xor
cltd
push
dec
insl
add
stc
clc
bt
movzwl
xor
mov
bt
cmp
add
test
cmp
test
mov
push
stc
pushl
push
test
jmp
clc
cmc
pushf
cmp
not
push
bswap
lahf
lea
lahf
pop
lea
pop
mov
mov
movb
call
lea
je
test
cmp
pushf
pushf
lea
je
push
movb
pushf
lea
jmp
pusha
pushl
call
pushf
pushf
adc
jmp
lea
je
pushf
jmp
mov
into
pop
in
jp
pusha
mov
pop
cmp
jmp
push
jmp
repz
mov
inc
and
xchg
nop
push
push
lcall
out
cwtl
push
ja
push
adc
dec
push
int3
and
in
std
neg
sbb
in
rcll
pop
scas
jae
fiaddl
std
cltd
push
pushf
std
setl
clc
cmp
ret
mov
pushf
movb
inc
push
not
pushf
jmp
movb
pushf
mov
mov
lea
call
push
mov
push
lea
jmp
push
stc
add
jmp
rolb
int3
xor
call
jb
jns
ja
pop
js
and
mov
pop
cmp
mov
cmp
jmp
fwait
jbe
gs
pop
cld
add
dec
cltd
push
sub
fwait
dec
jmp
add
push
jb
je
push
jb
arpl
jae
gs
outsl
jb
add
popf
push
sti
push
stos
rolb
fsubrl
sbb
mov
push
jne
cwtl
xor
xor
pop
adc
jbe
outsl
ds
out
aas
inc
out
sbb
fcomip
mov
pusha
pusha
push
pushl
lea
call
push
jmp
jmp
dec
addl
add
add
or
inc
pop
add
add
inc
pop
add
dec
pop
add
pop
or
inc
dec
pop
add
dec
pop
add
sub
add
pop
or
sub
pop
add
aaa
pop
add
or
out
pop
or
xor
add
pop
add
inc
pop
add
sub
or
mov
lea
lcall
add
pop
add
dec
pop
add
add
add
pop
add
add
add
add
add
add
cmp
add
inc
pop
add
addl
dec
pop
add
sub
add
push
je
pop
gs
dec
gs
outsl
jb
add
xchg
xor
add
lret
dec
inc
not
jmp
call
imul
gs
xor
cs
insb
add
roll
mov
xchg
mov
push
adcb
mov
scas
sbbl
ret
shll
lret
mov
lret
pop
jmp
outsl
call
add
pop
pop
sbb
mov
imul
push
sub
or
orb
xchg
dec
sbb
insb
add
mov
add
lds
xor
jns
sbb
push
jmp
and
sub
push
testl
cmpsl
inc
inc
pop
repnz
push
cltd
push
and
fistps
arpl
mov
cmp
repz
in
xor
pop
aad
adc
adc
loopne
adc
std
jae
mov
inc
dec
cmp
jecxz
lret
std
cltd
mov
add
popa
add
in
lret
adc
add
test
push
mov
out
jmp
outsl
push
mov
and
adc
push
pop
dec
sub
stos
inc
pop
jecxz
xchg
lds
and
dec
test
cmp
xchg
and
pop
xchg
in
jmp
push
scas
sub
push
das
lods
les
test
xorl
stos
stos
mov
in
pop
out
aad
xchg
add
leave
aad
mov
pop
pop
js
add
stos
xchg
testb
stc
cmp
leave
fs
adc
mov
push
inc
je
push
jmp
lea
jae
bt
sub
jnp
push
push
mov
lea
call
pusha
pushf
lea
jae
pusha
jmp
push
adc
jg
ret
xor
repz
xor
testb
cmp
adc
gs
inc
cmpsl
jbe
add
xchg
push
inc
fisttps
leave
jo
dec
xor
fildll
loope
jo
inc
xchg
jecxz
pop
outsl
add
mov
and
mov
xor
cltd
push
loop
sbb
mov
movl
mov
movl
pushl
push
lea
jmp
call
shl
rol
neg
pusha
rol
pushf
call
cmp
push
mov
pusha
call
cmc
repnz
push
movb
pusha
lea
jne
shr
bsr
shrd
shl
mov
shl
test
sub
mov
mov
jno
push
stc
sub
stc
pushl
popl
stc
pusha
cmp
jmp
lea
call
pushf
pushf
lea
jae
jmp
cmc
clc
stc
repnz
pusha
call
push
enter
mov
xchg
stos
inc
jle
or
inc
iret
inc
loop
jae
jb
call
push
push
scas
pop
cmpsl
xchg
cltd
ds
imul
mov
pop
imul
fbld
mov
add
push
loop
hlt
add
pushf
lods
pushf
and
test
js
fldt
pop
mov
and
xchg
dec
mov
mov
aad
mov
or
mov
ret
cwtl
push
mov
sarb
jns
aam
icebp
das
cmp
aaa
fisubrs
jno
shll
aad
insb
inc
dec
popa
jmp
into
lods
lock
lcall
imul
cltd
push
mov
or
xor
mov
popa
lods
sar
std
popa
ror
lods
or
inc
repnz
inc
mov
cmc
stc
jnp
test
push
lds
push
pop
xor
sbb
loopne
test
insw
add
push
cmc
adc
sub
mov
daa
test
cltd
push
pop
fldl
cltd
or
xlat
dec
jo
dec
and
in
insw
sbb
dec
xor
cli
mov
push
inc
je
stos
dec
jecxz
xchg
cli
inc
loopne
rcll
dec
ja
adc
mov
inc
jne
mov
xlat
push
imul
jp
jb
mov
mov
push
gs
mov
pushf
cmp
bt
sub
clc
jmp
call
pushf
pushf
pushl
lea
jne
call
lea
jne
pushf
lea
jmp
mov
call
test
not
push
neg
movb
pushf
jmp
jmp
lea
call
push
movb
call
jmp
fst
jbe
xchg
xchg
mov
xchg
sbbb
mov
dec
mov
in
push
movsb
rcll
inc
push
mov
adc
in
cmp
sahf
pusha
push
ja
and
insl
pop
jae
pop
dec
adc
push
movsl
cmpsl
shll
movsb
mul
les
cmpsl
inc
pop
xchg
mov
enter
sub
lods
mov
loopne
popf
mov
rclb
call
mov
loop
xchg
movsb
pop
sub
cmc
add
cli
xor
int3
icebp
mov
nop
and
mov
adc
jge
push
xor
inc
fdivl
cltd
push
inc
jns
mov
jo
sub
jle
xor
imul
daa
js
cmp
pop
nop
and
outsl
paddq
mov
call
push
push
mov
xor
dec
jb
lods
or
test
mov
mov
push
and
cltd
push
cli
aas
fidivl
dec
xor
fistps
scas
leave
gs
mov
lods
mov
shl
adc
pop
dec
cwtl
and
dec
push
jecxz
and
lret
lret
dec
add
pop
inc
mov
mov
lock
repz
es
inc
jecxz
lea
cltd
push
and
lea
jb
stc
jmp
pushf
movl
pusha
pushf
lea
jmp
lea
ja
or
sub
not
add
sub
lea
test
push
mov
add
jo
xor
mov
jmp
jg
inc
push
jne
and
jge
inc
add
dec
outsl
push
jne
pusha
js
add
fs
pop
fs
pop
insl
out
cmp
pop
loop
test
lahf
jno
std
loopne
sbb
sub
je
in
mov
or
mov
sahf
imul
into
fistpll
mov
mul
into
cmp
xor
xor
cltd
push
mov
inc
add
mov
xor
xchg
sbb
aaa
mov
cwtl
jmp
mov
inc
push
outsl
or
ljmp
mov
push
je
sub
fsubrl
adcb
mov
test
roll
jno
dec
pushf
not
clc
bt
neg
clc
rol
clc
test
pushw
popfw
movw
mov
jmp
dec
xor
iret
push
sbb
sahf
adc
mov
and
jno
cld
dec
cmp
xchg
cltd
or
decl
lods
push
cmp
pop
inc
dec
lods
adc
insb
popf
add
lock
dec
sub
adc
xor
imul
lcall
add
cltd
mov
outsl
fs
xchg
out
pop
jmp
jecxz
outsb
dec
or
in
sub
jbe
adc
dec
popa
or
and
lds
mov
push
push
ja
add
inc
gs
fs
jo
gs
dec
outsb
outsw
add
inc
and
or
andl
pushf
lea
jmp
clc
not
call
sub
ds
in
mov
repnz
arpl
ds
mov
aas
sbb
push
adc
cmp
scas
add
cmp
xlat
rcrl
not
push
lea
decb
aaa
lcall
inc
cmpl
push
std
shll
mov
push
inc
cmp
mov
push
or
repz
dec
push
xchg
stc
adc
aam
and
sub
push
xchg
int3
cltd
push
lods
int3
fidivs
push
imulb
dec
fidivs
xor
add
and
jg
mov
movsl
jo
cs
xchg
and
jecxz
shll
pop
push
inc
dec
inc
shrb
xlat
movsb
test
xchg
adc
int3
jmp
jl
push
pop
das
adc
xor
sar
push
adc
inc
addb
xlat
aam
and
or
add
repz
xchg
cmp
xchg
cltd
push
push
dec
fmull
insl
jb
mov
ljmp
ja
into
aam
and
jbe
mov
jg
cmp
jo
sbb
jmp
rol
mov
dec
cmp
lahf
jle
in
and
jo
fdivl
jmp
or
outsl
in
rcrb
pop
xchg
add
sub
enter
adc
dec
ja
push
add
mov
lock
pusha
cmp
cmc
repnz
call
push
pushf
lea
call
call
call
sub
pusha
pushf
lea
call
call
movb
lods
pushf
jmp
lea
jae
push
jmp
out
or
and
adc
add
jg
sub
sbb
sbb
jg
sbb
pop
jg
sbb
wbinvd
jg
xor
add
adc
adc
and
and
jg
and
gs
fs
jb
arpl
jae
gs
outsl
jb
add
jmp
pushf
mov
pusha
lea
jae
mov
seta
mov
call
mov
mov
mov
lea
jmp
pushf
cmp
pushf
call
jmp
lea
pop
pusha
movl
pushf
mov
pop
mov
pop
mov
call
movl
movl
pushf
mov
push
lea
jmp
add
dec
fs
outsb
imul
push
push
shrd
cmc
jmp
call
test
clc
repnz
pusha
lea
jne
movsbw
movb
mov
sets
movsbl
pushf
mov
lea
push
lea
movl
push
mov
movl
movb
movb
mov
pusha
movb
pushl
ret
pusha
lea
jae
stc
cmp
cmp
jmp
pusha
movb
jmp
sub
call
movl
pushf
push
jmp
jmp
aam
or
mov
mov
inc
adcl
sub
lods
pop
ja
cld
dec
ja
negl
cmp
bound
fldenv
jg
and
mov
inc
dec
or
inc
add
mov
jno
int3
dec
mov
in
jg
daa
lahf
sbb
test
push
add
sahf
shrd
push
mov
mov
lds
inc
dec
mov
stos
iret
lret
lds
ss
lahf
mov
cmp
mov
and
pop
jle
jle
sub
jp
mov
mov
jl
mov
addr16
push
lea
repnz
lds
es
shrb
adc
mov
cmpsb
jns
dec
fistpll
add
mov
mulb
lods
dec
fnsave
clc
or
cmc
jl
jge
mov
es
outsb
mov
push
mov
test
test
in
push
int3
rcl
popa
icebp
mov
fldenv
mov
xchg
ficompl
push
cmpl
fucomp
shlb
sarb
inc
loop
add
cmc
enter
ror
dec
jp
cli
lret
ret
das
and
inc
dec
popa
repz
lea
cmp
add
cmp
sub
call
add
dec
fs
outsl
popa
fs
insb
insb
add
add
gs
je
push
gs
outsl
je
push
push
add
sar
and
mov
call
push
pushl
add
jmp
pushf
push
lea
ja
stc
sub
test
neg
rol
bts
add
clc
cmp
bsf
bswap
mov
neg
not
mov
call
inc
xchg
cmc
shl
sub
jmp
add
push
jb
arpl
jae
xor
js
add
test
mov
pushf
lea
jmp
call
push
jne
js
mov
dec
std
movsb
ret
push
cld
daa
lea
lahf
pop
mov
or
adc
inc
mov
inc
adc
add
xor
pop
jmp
adc
icebp
jp
aad
jbe
cmp
or
je
cmc
xor
loop
popw
push
lods
adc
or
jbe
cli
pop
and
cmp
stc
push
sbb
push
and
pop
scas
lcall
into
inc
aad
push
dec
idivb
rcrb
add
dec
mov
pop
mov
pusha
pushf
lea
je
jmp
sub
pushf
clc
bt
cmc
cmp
jmp
test
sub
test
stc
push
not
cmc
cmc
neg
pushl
rol
pushf
call
inc
call
pushf
sub
pushl
jmp
std
jle
aad
pushf
mov
xor
adc
cmpsb
dec
push
icebp
jo
adc
lods
into
xlat
ds
jne
les
mov
outsl
inc
jecxz
pop
gs
fmulp
sub
aad
addb
cmp
fbstp
mov
sbb
ficoms
fstp
mov
fwait
insl
and
push
or
in
or
scas
add
sub
push
push
imul
inc
cmp
add
pop
pop
mov
mov
pusha
mov
pushf
repnz
pusha
pushf
call
rcr
cmp
mov
bt
pusha
cmpb
call
imul
imul
push
jmp
test
scas
ja
and
inc
repz
pop
inc
int3
add
xchg
xor
nop
sbb
pop
cmc
fwait
jo
xor
mov
scas
dec
sub
xor
jge
lret
out
cmp
sti
lahf
jle
int
cwtl
push
dec
sub
shlb
lret
pop
pop
adc
roll
insl
add
cmp
cmp
in
inc
pop
sti
add
xchg
inc
pop
push
dec
adc
dec
xlat
testb
fcomi
inc
mov
data16
jns
andl
out
dec
jae
mov
shll
stos
and
jle
or
inc
gs
icebp
sub
jbe
sub
in
test
cwtl
inc
pushf
pop
inc
pop
aam
les
cmp
fwait
mov
ficoms
cltd
push
loop
jo
cmp
jmp
add
bt
mov
ror
adc
stc
mov
push
pusha
test
clc
cmp
pushf
lea
jbe
movsbw
sbb
pushf
rcl
mov
lea
and
test
xor
add
xor
add
neg
mov
xor
sar
add
btc
test
movl
bsr
mov
add
pusha
cmc
movl
clc
cmp
call
out
add
and
mov
lahf
mov
hlt
test
and
pop
mov
imul
sbb
shrb
and
in
inc
inc
inc
inc
popa
jecxz
stc
pop
jmp
cmp
fadds
sbb
adcl
sub
or
sub
ja
pop
pop
inc
push
push
mov
rcll
arpl
and
xor
push
push
inc
dec
mov
jg
lahf
or
aad
jo
cltd
push
push
test
sbb
mov
dec
adc
sbb
mov
clc
sub
stc
bt
jmp
ror
aad
push
mov
ljmp
xor
add
enter
nop
pop
cmpsl
outsl
rorl
mov
push
lock
pop
push
jo
pop
out
cld
mov
inc
mov
mov
xchg
movsb
xchg
shlb
fsubrp
iret
adc
pusha
fisubs
pusha
scas
out
outsl
inc
sahf
aaa
xchg
ss
sbb
push
sbb
ffree
sarb
xchg
xchg
xchg
sub
and
cwtl
clc
xchg
addr16
movsl
hlt
xor
imul
dec
or
xlat
dec
pop
ja
xchg
les
dec
call
pusha
call
movw
call
call
push
cmp
movw
lea
jb
stc
cmc
clc
cmp
pushf
push
mov
lea
jae
inc
rol
shl
mov
cmp
jmp
pushf
repnz
call
lea
jae
cmc
sub
call
add
add
lea
ja
jmp
lea
jne
and
mov
mov
test
bt
bt
jmp
mov
rol
push
movb
pushf
dec
call
je
push
mov
movw
movl
jns
push
movl
pusha
mov
movw
pusha
lea
jmp
stc
rol
mov
cmc
cmc
stc
pushw
popfw
pusha
inc
pushf
push
push
call
add
inc
jb
popa
je
inc
imul
call
adc
pusha
lea
call
jmp
push
lea
call
pushf
pushf
pusha
lea
jmp
pusha
stos
pushf
mov
pushf
push
lea
jmp
lea
ja
jmp
call
jns
jle
ds
dec
jg
fs
fdivs
sub
mov
jp
sbb
cmpb
adc
mov
cmpsl
jbe
aaa
out
xchg
mov
fisttps
cmc
pop
mov
popa
sbb
insl
jnp
jecxz
addr16
push
xchg
clc
mov
mov
iret
xchg
or
jge
sbb
addr16
push
xor
loope
cmp
mov
jmp
fisubrl
loope
ficomps
and
out
xchg
lcall
xchg
inc
shll
sbb
gs
filds
inc
out
in
fwait
les
xchg
push
jbe
addr16
std
leave
mov
sarb
call
lret
push
dec
addr16
pushf
enter
stos
jo
adc
insl
dec
mov
mull
push
ficoms
icebp
push
sbb
insb
fxch
push
pusha
imul
jbe
dec
or
jecxz
fisubrl
cltd
stos
or
sbb
or
iret
loope
fs
jne
pushf
pushf
call
mov
add
and
push
cmc
mov
test
push
not
movsbw
shrd
push
rcr
pushf
mov
not
push
movsbw
push
pushf
mov
pusha
shld
mov
bsf
mov
clc
or
pushf
mov
lea
je
pusha
or
pushf
jmp
clc
shl
pushl
lods
stc
call
movb
pushf
lea
jb
cmp
cmpb
pusha
pushf
call
add
push
je
push
outsb
ja
outsb
fs
mov
add
fs
imul
add
lcall
add
add
gs
je
push
outsl
outsl
insb
push
xor
popa
jo
push
push
je
mov
dec
bound
es
adc
jb
test
aas
or
push
xchg
xchg
and
popl
and
inc
push
in
add
repnz
sbb
cmp
mov
cmp
mov
in
fildl
mov
shl
std
push
push
inc
push
hlt
pop
and
adc
adc
jns
xchg
es
inc
mov
test
mov
inc
mov
sbb
pop
xor
aad
xlat
stos
add
arpl
lret
inc
scas
into
push
sbb
push
dec
jo
insl
pop
inc
orb
mov
mov
jmp
pop
mov
inc
adc
nop
mov
jno
fsubl
mov
lret
daa
xchg
lret
pop
movsb
imul
mov
pop
mov
mov
xchg
adc
movsl
shr
push
mov
movl
push
movl
push
pusha
push
lea
jmp
mov
clc
clc
add
push
test
mov
call
stc
stc
add
pusha
rol
jmp
lea
call
jmp
clc
push
sub
bt
cmc
clc
jmp
sub
pusha
push
pushf
jmp
movb
call
lea
call
push
pusha
push
mov
push
pusha
pushf
lea
jmp
push
lock
std
std
xchg
xchg
push
mov
ret
jb
adc
and
pushf
mov
pop
icebp
ss
je
int3
pop
jge
cmp
loope
dec
inc
les
aam
pop
int3
add
jecxz
and
xlat
test
adc
out
jb
cmp
out
repz
xchg
push
imulb
cmpl
cmpb
enter
rorb
lcall
loopne
testl
add
movsl
cmc
ficompl
cld
adc
das
mov
jp
stos
xchg
pop
xchg
loopne
sub
push
sub
jmp
rolb
cmpsl
loop
inc
scas
leave
loop
mov
pushf
mov
mov
shr
jp
inc
dec
sub
jecxz
mov
popl
out
and
add
cltd
push
adc
push
lcall
cmp
out
sbb
pop
jno
mov
out
popf
adc
dec
pop
cmp
inc
adc
dec
adc
pushl
mov
mov
sbb
mov
movsb
mov
std
aas
pop
xchg
ss
jg
xchg
and
jbe
test
mov
jle
cli
xchg
out
mov
jp
sbb
fsubrs
or
or
pop
fs
enter
in
fadds
nop
lahf
xor
aam
dec
and
scas
outsl
aam
mov
cmc
mov
xor
clc
outsb
lcall
xor
cli
jnp
aam
jo
loopne
mov
pop
sti
repz
sub
xor
xchg
lds
out
outsb
push
popa
cmc
push
xchg
cmpb
mov
into
ds
inc
jne
cld
and
stc
xchg
sahf
ret
adc
mov
es
in
insl
pop
mov
daa
sub
add
and
dec
fdivr
push
cmp
and
add
jb
jne
insb
inc
insb
insb
outsl
arpl
pusha
mov
call
add
push
jb
arpl
jae
xor
jb
je
inc
mov
call
jmp
call
pushf
lea
ja
push
call
shr
bts
mov
pusha
and
add
jge
add
pusha
pushl
lea
jmp
jle
pop
loop
sahf
inc
dec
sub
loope
push
shlb
pop
mov
and
sub
push
repnz
fdivl
lods
test
and
push
push
outsl
xor
xor
aaa
icebp
js
xchg
pop
arpl
ja
cmp
je
push
lods
cmp
outsl
cld
sub
push
push
cmp
movsb
and
pop
xor
push
scas
inc
inc
imulb
incl
sub
cmp
inc
popa
lea
ret
mov
loope
lods
mulb
andb
push
mov
sub
cld
cmpsb
dec
cmp
push
je
xor
mov
mov
cmp
jle
jnp
mov
fldl
in
or
negb
inc
lock
push
dec
imul
push
push
into
jne
aam
pusha
sub
cmc
stc
pusha
clc
cmp
movb
pushf
jmp
pushf
lea
call
push
adc
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
rorb
nop
shrb
add
push
je
dec
outsl
jbe
dec
gs
outsl
jb
add
and
call
call
pushf
call
pusha
pusha
lea
jae
call
cmpb
jmp
lea
ja
pusha
push
lea
jb
call
dec
addl
add
add
or
inc
pop
add
add
inc
pop
add
dec
pop
add
pop
or
inc
dec
pop
add
dec
pop
add
sub
add
pop
or
sub
pop
add
aaa
pop
add
or
out
pop
or
xor
add
pop
add
inc
pop
add
sub
or
mov
lea
lcall
add
pop
add
dec
pop
add
add
add
pop
add
add
add
add
add
add
cmp
add
inc
pop
add
addl
dec
pop
add
sub
add
add
add
aad
movsbl
pop
xchg
pop
call
addb
xchg
lods
dec
push
test
loope
or
jbe
jo
stos
lods
jns
popf
cmc
jg
pop
cltd
mov
pop
repz
dec
aam
pop
mov
dec
dec
push
and
aad
jns
sub
add
pusha
repz
dec
sbb
incb
mov
dec
cltd
push
icebp
loop
adc
add
sub
or
and
jle
stos
inc
mov
notb
cmpsl
mov
and
and
shrb
mov
xlat
jecxz
cmp
jbe
scas
mov
fwait
lods
dec
movsb
not
jne
arpl
shlb
and
cmpl
lock
xchg
jo
add
push
rolb
add
dec
outsl
jbe
inc
imul
enter
lea
jne
pushf
movb
stos
push
pusha
pushf
lea
jmp
push
pushf
movl
pushf
lea
jmp
call
push
lock
std
std
andl
xchg
mov
ret
jns
or
lea
outsl
push
pushf
mov
pop
mov
mov
jge
cmp
adc
dec
dec
mov
push
les
jecxz
sub
test
scas
jge
and
sahf
bound
xchg
inc
jbe
mov
xchg
push
push
mov
cmpl
test
sbb
dec
sbb
xchg
jno
dec
aaa
or
test
mov
aas
insb
rorb
lods
jmp
arpl
sub
into
arpl
jecxz
sahf
stos
movl
sub
mov
shl
jmp
jg
ds
adc
mov
lret
out
jle
movsb
rcr
lds
push
int
std
rol
fstps
pop
mov
lds
mov
push
imul
inc
jo
sbb
ret
fmul
stos
cld
clc
cmpl
xchg
aam
and
mov
push
fcomps
clc
cld
stc
pop
xor
xor
in
add
gs
fsubrs
mov
mov
sahf
jne
mov
sbb
cmp
sub
sbb
mov
in
adc
jbe
inc
loop
cmp
sbb
inc
push
pushf
enter
inc
out
jecxz
xchg
adc
xchg
aam
repz
push
vmovdqu
add
imul
jae
push
mov
pushf
mov
setnp
inc
lea
je
mov
call
ror
lea
jbe
pushf
inc
mov
pushf
jmp
jmp
call
add
push
je
inc
fs
jae
push
jb
jbe
insb
gs
sarl
insl
sub
mov
mov
xor
cmc
arpl
aam
dec
imul
pop
ret
xchg
or
mov
aad
outsb
xchg
mov
bound
movsl
nop
cmp
jg
xchg
int
cmp
mov
xchg
pop
jmp
call
cmp
jmp
pusha
pusha
movl
push
push
mov
lea
jmp
add
dec
outsl
arpl
inc
jb
gs
pop
cld
in
and
jb
sbb
test
or
jp
mov
jo
test
sbb
mull
sbb
jmp
push
lret
xor
add
push
ret
lret
pop
fptan
daa
scas
pop
rcll
jbe
push
js
xor
cmp
mov
cli
andb
pop
add
fistps
sub
arpl
push
push
outsl
xchg
pop
or
jnp
call
std
leave
shrb
inc
xor
leave
dec
adc
test
dec
xor
cmp
aam
lea
out
sub
aam
add
pop
les
scas
dec
mov
xchg
sub
dec
mov
sarb
xor
pop
add
xor
xor
cmpsb
stos
loope
xchg
in
sar
adc
test
xchg
div
mov
stos
mov
mov
adc
repz
mov
in
add
dec
cmp
test
pop
pushf
push
dec
jo
add
and
and
add
mov
addr16
insl
je
pop
fstps
mov
gs
daa
js
test
xchg
call
out
jle
xchg
xor
mov
sbbl
or
lret
in
push
mov
push
adc
not
sets
push
lea
jne
mov
push
pushf
push
movl
lea
call
pushf
lea
jle
push
lea
jae
pushf
jmp
cs
inc
jo
or
add
orl
pop
shll
insl
pushf
jb
pop
mov
adc
mov
xchg
data16
xchg
into
rcr
and
repnz
xor
cmp
in
dec
xchg
mov
mov
pop
jl
dec
sti
pop
xchg
stc
mov
sbb
shrl
xchg
gs
rclb
xchg
aas
dec
sbbb
ret
pop
movsl
mov
jo
cltd
adc
sub
and
pop
pop
mov
xor
jbe
dec
and
dec
ja
pop
and
dec
ret
loope
lock
or
ret
sti
lods
iret
push
test
push
add
push
add
dec
jmp
mov
aas
fnsave
es
adc
iret
ljmp
jp
cmpl
enter
negb
sbb
mov
iret
jae
xchg
dec
push
cmpsl
mov
lods
repz
cwtl
rcl
push
leave
dec
add
aas
mov
ja
ficompl
scas
pop
push
addr16
jmp
mov
rclb
push
xchg
gs
inc
sub
loopne
fidivs
aam
xor
sub
lods
sbb
gs
scas
jle
adc
int3
cmp
popf
mov
leave
jl
push
lock
mov
pop
popf
sbb
push
loopne
lahf
sahf
pop
adc
jp
bound
insl
push
out
or
inc
cmp
std
mov
clc
data16
in
in
xor
in
cs
xchg
movsl
and
cltd
push
sbb
push
mov
or
lahf
imull
jno
ds
xchg
aaa
xchg
adc
sbb
inc
stos
icebp
xchg
enter
lahf
fwait
and
inc
clc
mov
fcmovnb
xchg
stc
lods
repnz
das
adc
jae
fstl
add
push
adc
mov
jae
sub
cmp
pusha
mov
mov
fwait
hlt
jp
mov
out
add
cltd
push
shl
pushf
cmc
xor
pushl
jmp
and
cmc
pusha
shrd
mov
add
shld
add
bswap
bt
pushf
shr
mov
xchg
mov
bt
add
bswap
pushf
mov
push
mov
push
call
pushf
lea
ja
sar
test
sub
pusha
or
add
add
movzbw
rol
mov
clc
shr
call
and
cmp
inc
loope
rorl
sbb
sub
xchg
inc
stos
jp
mov
fwait
call
add
in
add
call
pop
pop
xor
add
mov
xor
stos
mov
out
and
jp
int3
lock
pop
pop
pop
or
icebp
sub
dec
lret
mov
test
xchg
iret
out
inc
pop
ret
push
nop
sti
dec
popf
fsubs
or
sub
xchg
in
rorb
or
push
movsl
jae
and
mov
and
mov
adcl
mov
cli
mov
push
mov
inc
jne
call
stc
jbe
adc
clc
aam
inc
mov
negb
xchg
stos
ljmp
cltd
push
pop
hlt
cmc
mov
bsf
lea
and
mov
pusha
cmc
sub
call
jmp
call
push
lea
jae
pusha
cmp
test
cmc
cmp
pushf
movb
mov
jmp
pushf
call
lea
jae
pushf
lea
jne
push
stos
movb
mov
pushf
lea
jmp
jmp
jnp
cmpsb
rol
daa
ss
nop
lods
rorb
sub
xor
out
cmc
push
scas
sbb
sbbb
and
pop
insb
aaa
mov
mov
push
and
push
ret
out
mov
popf
test
ret
shl
nop
sbb
inc
shl
mov
push
dec
test
stc
add
call
clc
call
add
push
je
inc
imul
jns
mov
pushf
lea
jne
xadd
rcl
mov
call
lea
jae
shr
dec
shl
mov
rol
btr
rcl
or
mov
adc
adc
bsr
mov
jmp
lea
cmp
ljmp
jne
loop
sub
push
and
mov
cs
inc
decb
xor
jno
sti
mov
test
dec
cmp
xchg
adc
pop
jno
push
rolb
clc
mov
sbb
jno
mov
aam
and
push
and
lret
test
jge
subl
jne
divb
test
inc
xchg
test
cmc
push
jne
cltd
ret
push
ds
xor
es
decb
jmp
push
outsl
gs
push
push
mov
cs
add
mov
jne
jne
fs
and
aas
rorb
cmc
popf
jne
cmp
rol
adc
mov
arpl
inc
arpl
scas
xor
loopne
out
xchg
cltd
lods
stc
cmp
or
mov
std
aaa
xchg
push
sub
loope
testb
xchg
adc
cld
push
adc
jno
mov
sub
xor
jne
mov
pushf
mov
adc
push
push
cs
les
xchg
inc
mov
jp
jne
inc
pushf
bound
adc
aad
cmc
push
mov
xchg
mov
adc
mov
out
xchg
push
mov
inc
jns
lcall
add
push
test
cmp
inc
fwait
inc
jne
jae
lahf
and
rorl
jno
fs
adc
jno
push
rclb
lods
add
and
into
pop
mov
pop
popa
jecxz
ret
jo
jae
mov
pop
mov
and
lcall
out
movsb
inc
leave
xor
sub
xchg
popa
add
mov
nop
lret
push
sbbb
push
mov
les
mov
mov
lods
xor
fwait
mov
hlt
xchg
xchg
loop
and
repnz
xlat
adc
int
sub
test
jg
cmpl
fldcw
sbb
enter
jp
push
in
cltd
push
lds
inc
jne
popa
in
bnd
in
or
jno
lahf
bound
ret
int
shr
pop
lods
push
enter
mov
cltd
cltd
dec
sub
std
mov
xlat
xor
mov
sub
stos
shl
insl
push
lods
xchg
test
js
mov
loope
dec
icebp
lods
mov
mov
in
repnz
or
je
fistps
fwait
outsl
xor
push
sbb
mov
mov
lock
nop
orb
xchg
outsl
sbb
repnz
sbb
jae
push
jge
out
cwtl
jl
xchg
pop
or
fcoms
dec
xor
pop
insl
mov
pop
xchg
andb
repnz
dec
dec
push
mov
xor
adc
mov
repz
icebp
dec
mov
push
insb
xchg
mov
nop
inc
lods
stc
jo
add
call
or
cmp
stc
adc
loope
jg
jns
lea
js
jge
add
pop
xchg
in
sbb
mov
xchg
cltd
jl
sbb
insb
outsb
jno
jns
cli
subl
dec
mov
or
jae
ss
je
jns
mov
sbb
xchg
notl
jle
roll
into
leave
incb
pop
cmpsl
xchg
arpl
pop
and
mov
inc
sbb
lret
imul
out
xor
adc
jmp
cs
rorl
mov
and
into
cwtl
cltd
imul
sbb
sub
test
xchg
call
lds
adc
pusha
ljmp
sub
push
sarb
lods
mov
mov
mov
mov
mov
pop
xchg
in
sbb
pop
ja
sbb
and
sub
jecxz
mov
push
insl
jb
outsb
cld
jnp
jg
ret
xchg
jnp
sub
lret
jne
adc
popf
mov
gs
xchg
out
in
pop
mov
cmpb
cmp
pop
jae
push
jl
daa
push
jns
xchg
fstpt
add
pop
data16
mov
push
xlat
lcall
sbb
movsl
leave
inc
lahf
mov
xor
mov
cmp
jo
pushf
insb
bound
enter
push
mov
popa
fidivrl
in
rclb
mov
sbb
xchg
jbe
pushf
jg
in
cmpsl
in
adc
into
jbe
aas
mov
ds
dec
iret
mov
and
cmp
or
scas
push
sub
je
mov
mov
fistpll
daa
xor
mov
or
jbe
leave
lret
push
in
mov
cmp
lods
dec
add
fldln2
or
adcl
add
xchg
testl
andl
ret
jns
sbb
test
aad
xor
repnz
xchg
push
test
adc
mov
fistpll
jno
rcll
dec
mov
adcl
jb
sbb
or
lret
or
xchg
cmpsb
mov
addr16
jp
xchg
shl
adc
push
xchg
or
icebp
sbb
dec
mov
cli
jns
adcl
lret
hlt
fisttpl
xchg
inc
xchg
and
shl
inc
pop
ja
mov
cld
adc
cwtl
fnstenv
mov
shl
mov
pop
scas
test
or
mov
aad
jae
ja
adc
shll
cmp
mov
icebp
mov
mov
pushf
mov
je
and
and
imul
sbb
je
mov
xchg
outsl
pop
jl
and
add
fdivrl
aam
pop
jg
sarl
push
test
int3
adc
leave
mov
cs
xchg
pop
xchg
dec
push
add
cmc
insl
adc
ss
mov
cmpsl
dec
je
fwait
std
stc
test
push
out
lods
sahf
adc
cmpsl
and
adc
cmp
shlb
mov
jno
clc
push
and
mov
cmpsb
add
sub
sarl
xchg
xchg
test
subb
imul
jne
int3
into
add
rolb
bnd
xchg
add
movsl
lods
xchg
jmp
push
adc
inc
push
ss
sbb
pop
inc
subb
push
sbb
dec
in
into
mov
fisubs
cli
xor
jbe
insb
cltd
mov
and
stc
adc
shrb
mov
push
call
aaa
lret
push
cmc
enter
xchg
push
or
arpl
hlt
adc
ja
mov
sti
mov
cli
xchg
pop
lahf
xchg
sub
xlat
mov
xor
pop
xor
mov
pushl
aam
mov
xchg
jecxz
hlt
and
adc
mov
dec
push
sahf
mov
aad
xchg
add
ret
sub
test
pop
int3
inc
test
xor
in
xchg
adc
fdivl
xor
fldt
lea
std
or
loop
or
mov
push
hlt
xorl
add
mov
icebp
in
daa
jb
xchg
or
pop
call
mov
roll
mov
push
popf
call
inc
mov
mov
rcrl
in
inc
ja
int3
xchg
jno
adc
test
adc
inc
test
hlt
cmp
mov
pop
push
repnz
xchg
shrb
mov
xchg
xchg
sbb
clc
push
shl
mov
lret
mov
adc
mov
jae
sbb
mov
icebp
aaa
sahf
scas
les
int
adc
aaa
mov
sbb
jb
jl
inc
int
adc
loope
add
mov
mov
int3
sbb
mov
pop
jp
call
repz
or
and
inc
idivl
sbb
pop
in
add
push
int
mov
add
lods
ja
je
adc
sub
mov
sub
sbb
inc
cmp
xchg
cltd
mov
adc
cld
sbb
pop
divb
call
div
rcr
push
lahf
xchg
xchg
andb
xchg
jne
testl
and
lahf
sahf
into
mov
mov
or
sub
jo
out
mov
and
pop
lret
lods
pop
sbb
or
pop
in
mov
pop
mov
xchg
dec
hlt
xchg
push
xchg
mov
cmpsb
mov
not
scas
scas
jb
jg
lods
in
pop
xor
inc
pop
out
fnstenv
ss
fsubrp
rolb
jbe
mov
icebp
lods
jae
mov
xchg
add
push
stos
sar
or
add
xchg
mov
lods
popl
jecxz
push
mov
adc
sbb
pusha
cmp
dec
sub
popf
out
jmp
mov
mov
loope
nop
fs
stos
adc
adc
aas
ficoml
sahf
pop
mov
pop
icebp
mov
push
in
insb
movsb
jmp
and
xchg
pushf
in
push
fldt
das
movb
adc
cltd
adc
cld
xchg
xchg
jne
dec
and
call
jns
sti
mov
xchg
mov
adc
xchg
mov
bound
addl
dec
in
lahf
mov
hlt
pop
adc
add
adc
pop
std
ret
push
push
add
mov
leave
adc
sub
pop
mov
cmpsb
inc
adc
inc
fisttpll
icebp
addr16
outsl
rclb
adcw
mov
mov
cmp
push
pop
test
in
add
push
adc
ret
push
decl
adc
in
shll
cmc
mov
pop
sbb
xchg
adcb
call
xor
mov
idivb
adc
push
xor
and
cmp
dec
xor
cld
and
xchg
mov
insl
push
inc
outsb
cltd
adc
loop
add
jne
mov
jg
mov
test
popa
xchg
lods
mov
jmp
mov
or
mov
push
mov
popf
mov
sub
add
or
cli
mov
mov
or
pushf
insl
lahf
adc
sbb
cltd
adc
add
insl
pusha
sub
sbb
sahf
test
xchg
outsb
into
call
inc
test
mov
xchg
leave
jae
les
arpl
cmp
jmp
mov
xchg
call
add
stos
mov
adc
adcb
mov
xor
aad
lcall
jge
jne
push
ds
testb
jp
push
push
jbe
inc
push
outsl
iret
jb
movsb
jmp
je
dec
xor
push
pushf
adc
and
push
cmp
pop
stos
sbb
mov
mov
shlb
inc
inc
inc
push
add
adc
and
xor
inc
pop
push
test
or
int
dec
icebp
pop
and
gs
imul
insl
pop
insl
dec
insl
shrb
pop
stos
cmpsb
mov
lods
push
in
or
fs
pop
fldl
xor
inc
cmp
pop
gs
mov
out
popa
les
stc
stos
cmp
sub
hlt
pop
iret
imul
cltd
lds
lock
jno
jl
inc
or
sbb
rcrb
mov
xor
cmc
lods
dec
pop
sub
cmpl
test
ljmp
cli
test
xchg
xor
adc
bound
jbe
pop
insb
popa
sbb
lea
jle
mov
popf
aas
sti
lea
icebp
xchg
inc
cmp
pop
into
ret
fdivr
in
lcall
push
jle
jno
adc
sbb
adc
fidivl
xor
sub
repz
mov
jno
pop
into
bound
cwtl
and
push
sahf
lods
mov
jno
inc
cli
in
push
aad
jno
fsubp
es
cmpsb
je
push
add
in
dec
pop
ret
loop
stos
insb
popl
xor
es
jno
fidivs
loopne
outsb
imul
or
testl
ret
lea
cmp
cli
mov
inc
aas
cmp
adc
push
imul
cltd
jno
inc
mov
shll
repnz
xchg
jae
cld
lea
je
jne
xchg
cmp
je
pop
mov
push
mov
xor
bound
icebp
xchg
mov
hlt
sbb
icebp
mov
xor
jle
push
add
icebp
mov
jg
inc
xchg
xchg
cltd
xor
subb
out
push
icebp
push
or
popa
xchg
cmp
xor
jp
loope
mov
ret
mov
xchg
je
mov
xchg
ret
insl
jae
icebp
pop
and
mov
shll
jne
adc
ret
jl
fcoms
sbbl
jne
mov
roll
xchg
aad
xchg
mov
push
adc
jb
lods
add
xorl
adc
fs
xchg
stos
or
addb
mov
xchg
div
lods
xor
mov
mov
rcr
pop
push
scas
xchg
adc
adc
push
shll
fst
jle
test
mov
xchg
sbb
and
arpl
or
inc
mov
add
mov
xchg
ret
or
mov
push
mov
cmc
ret
inc
jb
push
aad
add
push
jg
repnz
inc
ret
sarl
lret
pop
xor
bound
push
ret
test
or
jbe
adcl
xor
test
out
andl
mov
push
std
aam
inc
divl
xchg
adc
cmpsb
adc
loope
jp
xchg
xchg
mov
mov
mov
xchg
inc
mov
shll
je
and
lcall
push
sub
lahf
test
test
jne
jecxz
mov
or
xor
ja
and
cltd
jno
xor
stos
xchg
and
adc
add
hlt
sbb
aam
fstl
pop
pop
adc
jmp
jg
jo
sbb
data16
jg
sbb
xor
jge
mov
ds
mov
jo
lods
aas
scas
or
mulb
xchg
lods
movsb
shr
lahf
adc
push
enter
mov
sbb
sub
test
mov
inc
mov
cli
and
ja
loope
lahf
inc
sbb
test
jne
dec
jno
adcl
cltd
jecxz
inc
mov
flds
mov
xchg
enter
sbb
jb
or
orl
call
mov
mov
lods
jnp
or
xchg
push
mov
orb
push
dec
add
mov
jg
mov
cmp
lret
dec
dec
ret
xchg
xchg
insb
xchg
pop
pushf
adc
adc
xchg
pop
pop
inc
push
shll
dec
xorl
fsubl
sbb
pop
adc
or
int3
mov
repnz
vdivss
push
rol
pushf
pushf
add
mov
adc
and
jae
jbe
xchg
xchg
xchg
mov
jne
adc
ret
mov
inc
imul
dec
notb
ret
adc
frstor
shrl
lea
jne,pn
sbb
cmp
pusha
jbe
jl
fwait
adc
sbb
pop
pushf
je
lea
fcmovnb
sbb
xchg
shr
add
cltd
jecxz
loop
popa
xchg
call
add
aam
pop
jb
mov
aam
push
in
adc
fimull
mov
push
fsubrs
in
mov
jne
push
dec
xchg
out
fs
add
push
pop
mov
xchg
mov
push
or
mov
lea
mov
and
push
cld
adcb
sbb
jne
stos
jle
orb
jae
jecxz
outsb
mov
or
sub
repnz
push
loope
adcb
repnz
push
cmovl
adc
clc
inc
sbb
or
pop
dec
subl
sbb
inc
lods
fstpl
daa
adc
stc
dec
je
bnd
adc
jne
into
cmp
mov
rcll
xorl
push
add
mov
int
or
adc
lods
orl
mov
xchg
xchg
mov
mov
jo
mov
test
lea
js
pushf
stc
repnz
jnp
pop
scas
icebp
sub
xchg
mov
cmc
mov
push
mov
mov
ret
cmpsb
mov
xchg
adc
xor
repz
push
sbb
jbe
shrl
pop
xchg
and
out
call
sarl
sbb
xchg
fildll
fstl
fmuls
jne
sbb
lds
adc
xor
mov
dec
aam
jge
adc
insb
cli
jp
cli
pop
xchg
mov
or
pop
dec
xlat
shrb
int3
cltd
mov
loopne
inc
jl
ljmp
lock
adc
enter
les
in
inc
fwait
or
and
popa
jbe
fs
int3
neg
jecxz
and
neg
mov
gs
xor
pusha
std
daa
xorl
or
push
pop
leave
mov
stc
jns
stc
xor
or
or
mov
leave
xchg
bound
sbb
adc
flds
inc
push
or
mov
pop
dec
ss
in
aam
push
xorb
lods
mov
aas
cs
push
mov
or
sub
add
xor
inc
out
push
xchg
scas
out
pcmpgtd
mov
repz
mov
bound
popf
outsb
das
adc
add
mov
rcll
cwtl
jb
jne
pop
inc
cmpsb
sub
lret
xchg
or
lret
xchg
icebp
insl
sbb
icebp
call
mov
jae
cltd
je
mov
mov
mov
lret
xchg
orl
jge
cltd
sbbb
loop
je
mov
roll
jo
nop
xchg
pop
mov
cli
inc
mov
xchg
adc
push
push
pushf
sbb
data16
sub
lahf
add
jg
je
jge
cmpsl
sbb
adc
fwait
mov
xor
mov
in
cli
leave
add
repnz
and
sbb
xchg
mov
rorl
xchg
insb
and
adc
push
xchg
add
xchg
jae
popa
mov
push
fs
sbbl
inc
or
add
add
mov
sub
je
fcompl
aam
mov
xchg
adc
idiv
and
pop
fldenv
push
jae
testb
je
jns
lea
loop
xchg
adc
xchg
sbb
jle
repz
sbb
mov
clc
mov
or
add
sbb
jle
pop
fwait
jbe
pusha
xchg
in
ss
lods
jb
add
test
push
std
mov
sbb
data16
idivl
xor
ficompl
out
lret
push
mov
out
adc
movsb
cwtl
sbb
hlt
sar
or
jnp
mov
dec
cmp
mov
xchg
cmpsl
insb
adc
jecxz
in
and
adc
test
cmpsb
mov
out
add
sub
xchg
cwtl
add
popa
mov
pop
ret
jae
jae
xchg
sbb
adc
int3
fiaddl
mov
adc
mov
jns
adc
and
sbbl
xor
shl
shll
cmp
ja
adc
push
sarb
mov
xorl
mov
js
mov
arpl
enter
push
test
fadds
add
or
jb
test
negb
jmp
test
popa
pop
cld
mov
dec
les
jnp
sbb
dec
mov
adc
adc
decb
add
sbb
jp
ss
push
adcb
mov
lret
or
pop
cli
mov
push
cld
xor
push
loope
mov
rclb
out
fiadds
andb
add
rcrb
mov
fs
adc
mov
xchg
dec
mov
inc
rorl
lcall
mov
mov
in
add
cmp
adc
mov
pop
shll
jns
sbb
clc
mov
mov
xor
mov
and
je
lret
mov
mov
pop
shrb
cwtl
inc
shl
dec
jns
mov
das
imul
cmc
jae
inc
roll
dec
int3
mov
cltd
sub
xlat
and
mov
sbb
int
mov
jno
pop
pusha
repz
push
pop
inc
or
jl
push
adc
mov
push
test
mov
icebp
mov
lcall
mov
and
nop
in
mov
jge
jo
sbb
push
daa
mov
sbb
mov
xor
sub
xchg
xor
test
int
popa
inc
mov
mov
subl
sahf
jg
jns
adc
inc
inc
insb
xchg
mov
and
sub
sub
xchg
and
stos
pop
or
out
mov
jne
insb
push
rcrb
hlt
mov
aam
mov
popl
pop
push
jne
mov
call
jb
cwtl
rcrl
dec
mov
test
cwtl
or
add
xchg
shl
or
xor
mov
scas
mov
sqrtps
xor
add
rcr
icebp
loope
dec
jbe
jge
dec
fistl
push
int3
stc
xchg
jnp
cmpb
mov
out
sahf
imul
sbb
cwtl
jne
add
adc
jmp
and
mov
lods
jecxz
lock
ror
bnd
jmp
and
popf
imul
mov
andl
adc
icebp
int
scas
mov
je
scas
xchg
lods
jecxz
in
sbb
jle
test
mov
xchg
aaa
jecxz
arpl
in
pop
jo
mov
push
cmp
test
and
push
dec
leave
out
mov
cmp
and
or
mov
xchg
cli
mov
mov
dec
xchg
mov
movsl
jns
jmp
push
dec
popa
add
push
lods
sub
mov
inc
sahf
daa
repnz
movb
xor
repz
bswap
mov
mov
jne
hlt
adc
adc
mov
js
daa
fcoml
and
jp
add
aas
cld
jge
inc
cmp
cmpsb
fwait
xchg
leave
arpl
jno
add
cmp
aam
mov
mov
pop
out
cmp
outsl
or
out
pop
xor
addb
movsl
jno
je
rorl
ja
imul
mov
leave
inc
repnz
dec
mov
and
cmpsl
add
pusha
scas
lods
jle
mov
xchg
lods
fwait
sub
fwait
xchg
mov
in
sbb
adc
loope
adc
pop
lods
icebp
sbb
lds
add
mov
movsb
mov
dec
and
push
jl
push
mov
outsb
pop
cmc
stos
add
dec
jns
mov
rorb
cmpsb
int
mov
movsb
dec
mov
mov
mov
adc
loop
dec
lock
xchg
test
daa
repnz
sub
inc
popa
pop
cmpsb
pop
repnz
inc
inc
sbb
fcoml
add
addl
daa
xchg
popa
stos
pushf
hlt
lods
xor
mov
sbb
pop
adc
imul
jb
adc
adc
in
jno
sbb
js
popf
xchg
xchg
daa
adc
jb
add
and
pusha
lret
dec
test
inc
inc
mov
in
mov
cmp
lea
xchg
les
jge
sbb
mov
adc
pushl
cmp
loope
or
sub
cmpsb
pop
cmp
xchg
xchg
int
shrl
test
pop
xchg
repnz
jge
pop
icebp
das
mov
repnz
decl
imul
mov
xchg
push
cli
int
dec
roll
mov
out
lds
lcall
jg
dec
mov
mov
decl
xlat
mov
jl
push
jns
sbb
scas
bound
mov
inc
sbb
lahf
lods
pop
je
adc
fs
mov
pop
cmp
xchg
xlat
lret
xchg
push
cli
mov
jp
fistpll
push
add
push
insl
adc
in
cltd
in
xor
sub
pop
insl
add
sub
adc
adc
jl
and
xor
std
loope
cld
cmc
xor
push
dec
fdivs
add
adc
push
sahf
shlb
in
xor
push
adc
add
jo
xor
lods
xchg
and
pop
insb
pop
movsl
movl
arpl
roll
cli
push
int3
xchg
mov
inc
popf
jns
aad
pop
movsb
mov
leave
mov
sub
push
aam
pushf
sbb
imul
test
ja
sbb
mov
mov
adc
mov
iret
je
lods
adc
mov
lods
mov
cmpsl
into
imul
dec
mov
and
rcll
jnp
jp
push
mov
push
rolb
mov
loope
xor
cmp
mov
mov
xchg
sub
in
xchg
push
xchg
push
mov
pop
pop
pop
lods
fs
roll
or
fiaddl
mov
ja
repnz
scas
pop
cmpsl
testb
jp
icebp
mov
lcall
aad
dec
mov
jns
cmp
or
clc
dec
push
icebp
sahf
in
push
mov
xchg
mov
sbb
xchg
loopne
rclb
push
pushf
xor
sub
cwtl
test
stos
outsb
adc
rorl
sub
or
push
pop
imul
push
jo
out
push
inc
adc
jne
mov
loope
or
rcll
leave
mov
inc
and
or
jae
add
jns
out
gs
mov
and
leave
je
test
push
cmp
ret
clc
xor
or
imul
xor
mov
sbb
xchg
mov
and
outsb
mov
mov
xchg
add
dec
jecxz
mov
ret
xchg
aad
or
loopne
dec
jns
ljmp
sbb
xlat
cwtl
push
jg
dec
test
adc
outsb
sub
dec
loopne
mov
adc
mov
hlt
sbb
and
xchg
cmpsb
xchg
mov
xor
or
xor
push
leave
mulb
adc
pop
iret
cltd
bnd
adc
out
add
subb
jg
ret
xchg
xor
dec
sub
cmc
cmp
xlat
movsl
jne
repnz
std
jl
loope
icebp
cmp
mov
test
vpmadcsswd
adc
push
fs
cli
sub
movsb
in
jb
lods
inc
cmp
iret
test
mov
and
iret
mov
mov
or
ror
cmp
xor
lret
or
popa
ret
leave
lods
mov
or
xor
sti
pop
mov
iret
call
add
jb
xchg
pop
mov
dec
stc
add
mov
add
mov
adc
jg
aam
pop
repz
ja
pop
insl
jne
and
fldt
bound
test
popa
popa
int
ljmp
inc
mov
subl
shr
jecxz
and
sbb
popa
iret
test
push
add
shlb
aas
jle
lods
insb
mov
clc
mov
add
sbb
daa
out
lds
adc
mov
out
rolb
ljmp
repnz
push
sub
push
xor
and
adc
push
add
jae
xchg
add
mov
cli
sub
clc
adc
jb
jl
mov
adc
iret
cmpl
mov
adc
mov
lahf
orl
popf
shlb
leave
lods
movsl
jno
int3
cmpsl
inc
pop
push
mov
push
cmp
fsqrt
popa
fnstenv
push
andl
or
mov
ds
add
jmp
lods
pop
pop
test
jno
mov
mov
movsl
push
rcrl
sti
rcll
jbe
mov
cmp
cmpsb
cmp
iret
xlat
pop
xchg
or
sub
enter
jae
je
test
or
arpl
adc
adc
mov
pop
sbb
das
cltd
frstor
fadd
add
lahf
cmp
mov
sbb
and
loope
xchg
adcl
push
mov
jmp
cmc
pop
mov
addr16
adc
andb
xchg
dec
lcall
mov
mov
or
dec
push
jne
mov
jae
inc
push
mov
adc
ret
mov
dec
roll
mov
add
mov
cmc
push
xchg
push
mov
adc
pop
loopne
leave
pop
clc
push
sarb
inc
add
repnz
and
lock
out
lock
adc
xchg
mov
loop
sbb
mov
or
jecxz
mov
cmp
data16
mov
xchg
jg
hlt
mov
xlat
dec
orl
push
test
and
inc
leave
dec
popa
or
icebp
lret
mov
or
add
xor
mov
jg
js
leave
les
js
add
es
jecxz
out
inc
xchg
in
push
int3
nop
cmp
xchg
movsb
mov
jge
jecxz
sub
imul
adc
insb
inc
dec
dec
and
mov
test
iret
stos
xchg
lods
jnp
jb
jae
jo
pop
and
cmp
mov
std
dec
iret
sbb
adc
lea
adc
xor
push
jne
or
or
push
mov
mov
fstpl
or
mov
iret
cli
and
pusha
mov
enter
or
enter
dec
inc
test
lcall
mov
in
fmuls
sub
scas
add
jo
loopne
aad
dec
mov
xchg
popf
push
fs
fcomps
xor
icebp
pop
xchg
insb
je
push
push
movsl
cltd
rcll
rcrl
clc
add
insb
mov
sbb
sub
jge
lea
push
pop
int3
adc
dec
ret
adc
dec
jae
ficoms
mov
push
subb
adc
fiaddl
movsb
loop
outsl
add
mov
pop
xchg
and
and
xchg
shr
adc
jl
mov
adc
jbe
sub
repnz
mov
data16
mov
int3
std
sub
xchg
xchg
ficoml
test
mov
xor
pusha
sub
sti
decb
inc
push
xchg
jae
icebp
or
jnp
mov
and
test
mov
sub
jno
jae
cld
mov
ljmp
call
out
mov
movb
mov
stc
stos
adc
add
inc
lret
push
xchg
mov
lods
xchg
xchg
or
jo
addr16
push
sbb
adc
je
xor
sub
xchg
jb
jae
add
popa
ret
xchg
inc
loope
dec
or
gs
test
jg
insb
xchg
call
adc
pop
xor
add
lret
adc
jmp
jp
scas
mov
mov
add
jl
lods
je
mov
js
loopne
ja
xchg
cli
pop
dec
jecxz
or
lcall
push
inc
xchg
test
mov
in
outsl
inc
or
xchg
icebp
sbb
popf
xchg
sarl
mov
mov
pop
clc
sbb
repz
ret
mov
fsubrs
inc
and
inc
test
mov
xchg
out
xor
lock
int3
cld
mov
jno
bound
sbb
mov
in
add
or
pop
scas
jne
mov
stos
neg
mov
insl
mov
test
jmp
fsubr
cmp
push
adc
inc
lock
sub
jecxz
mov
push
mov
or
lods
sbb
repnz
xchg
xor
mov
cmpsl
das
inc
hlt
icebp
mov
mov
outsl
ficompl
lret
and
jae
js
movsl
xchg
adc
inc
mov
shlb
xchg
inc
pop
inc
cmc
adc
pushf
into
fwait
jmp
sub
stc
xchg
mov
in
cli
adc
cmpsb
addr16
shr
xchg
faddl
scas
ja
or
aaa
cltd
cs
inc
adc
xchg
iret
push
pop
xor
rorl
ljmp
mov
inc
mov
mov
imul
jb
icebp
popf
push
mov
cld
jo
leave
shrb
sbb
daa
xlat
repnz
inc
les
pop
push
test
insb
jae
sahf
testb
mov
jo
or
pusha
xor
addl
add
repnz
out
sub
fdivs
xchg
dec
mov
mov
xchg
xchg
xchg
mov
pop
ret
iret
mov
adc
and
andl
push
xchg
add
subl
cmp
movsl
repnz
test
xor
adc
js
adc
xchg
popa
add
pusha
repz
stos
js
mov
shll
jne
or
rorl
add
xchg
jbe
cmp
icebp
adc
cli
sub
imulb
sub
mov
repnz
mov
dec
sbb
into
jecxz
fdivrl
mov
pusha
sbb
int
cmp
into
cmp
ja
mov
mov
push
fcoms
cmp
dec
fs
je
lea
xchg
decl
jne
or
and
imul
lods
fs
push
xchg
enter
lock
scas
sbb
adc
xchg
out
mov
mov
les
jne
cmc
mov
pop
icebp
sbb
in
movsl
push
jge
inc
aas
icebp
pop
stos
out
adc
and
cmp
out
cmp
mov
rcrb
add
es
movsl
push
imul
addr16
jg
dec
mov
sbbl
repnz
fs
shll
js
cmp
sub
mov
sbb
iret
sti
or
jne
pop
cmp
imul
sbb
sti
lock
int
push
out
and
fs
in
and
adc
xor
std
xor
iret
and
lahf
lods
mov
cli
mov
les
lahf
jae
in
cmc
fwait
push
xor
icebp
adc
mov
pushw
mov
jb
cli
jle
and
dec
xchg
movsl
adc
jae
jno
adc
das
stos
test
lret
xor
mov
jne
and
mov
sbb
adc
or
out
jbe
enter
cmp
sbb
negb
add
mov
mov
dec
and
adc
ret
adc
popf
adc
mov
pop
sbb
push
js
mov
adc
repnz
sbb
and
xchg
or
adc
jne
data16
test
sbb
pop
leave
lods
mov
aaa
push
stc
js
in
sbb
dec
aad
sbb
or
mov
jbe
test
adc
xor
sbb
shl
stc
and
dec
into
mov
jecxz
stos
imul
insb
mov
in
or
loop
faddl
imul
cltd
jl
lods
imul
sbb
mov
xor
outsb
xchg
pop
xchg
jae
or
pop
loopne
mov
mov
mov
lcall
arpl
xbegin
pop
add
in
mov
sbb
inc
inc
scas
inc
out
sub
ret
xchg
test
orl
jle
loopne
pop
and
pop
xchg
or
push
mov
jne
stos
mov
and
inc
cli
std
mov
movsb
jns
jge,pt
and
xchg
icebp
adc
or
xor
fidivs
xchg
xchg
and
addb
icebp
mov
push
subl
mov
mov
cmp
adc
sub
sbb
sbb
xchg
and
icebp
xchg
je
jl
xchg
in
cmc
xor
cmp
xchg
jmp
and
shlb
mov
push
pop
shll
lret
xchg
icebp
xor
test
adc
fs
je
xchg
roll
movsl
icebp
test
push
roll
icebp
sti
jae
inc
mov
xor
xchg
push
lock
push
add
fstl
mov
imul
je
xchg
idivl
rcll
xchg
jmp
adc
je
xchg
sbb
adc
adc
xor
aad
or
pop
hlt
inc
xor
and
pop
xchg
xor
call
loope
and
xor
xor
addb
xchg
xchg
arpl
je
movb
adc
add
xor
sbb
cwtl
xchg
push
xor
std
and
mov
add
mov
and
mulb
pop
xchg
rcrb
cmp
add
rorl
add
addl
mov
mov
mov
aad
fcoml
mov
adc
ficoml
adcl
mov
mov
hlt
fs
add
test
xchg
push
xchg
push
mov
mov
xor
sbb
lcall
adc
cmc
push
cmpsb
add
aam
add
setno
popa
cmc
mov
xchg
adc
and
cmp
xchg
push
aam
test
jmp
push
ret
cld
aaa
or
cltd
fdiv
popf
icebp
push
xor
jae
mov
push
outsl
mov
popa
pop
adcl
cmp
xchg
dec
adc
cmc
xchg
cmpsb
hlt
lret
test
mov
shll
dec
pop
mov
lea
adc
sbb
int3
cmp
inc
stos
cmp
popa
dec
or
push
test
faddp
xchg
sbb
jb
lods
lahf
fisubrl
sub
mov
push
jg
lods
ret
js
enter
aam
mov
sbb
adc
into
inc
or
fldcw
lcall
push
and
ljmp
movsl
out
mov
push
cli
in
xchg
pop
push
add
fidivl
lods
repnz
cwtl
and
adc
xchg
xor
push
and
xchg
inc
pusha
jecxz
frstor
iret
lret
and
daa
push
cmpb
enter
shl
adc
xchg
sub
mov
push
shll
nop
neg
jns
jbe
js
sbb
add
and
jno
add
mov
adc
adc
adc
cmp
pop
lret
jl
push
push
test
mov
sbb
shrl
adc
mov
in
mov
hlt
je
fs
jae
sbb
sti
add
js
in
cltd
test
jg
jns
pop
xchg
jl
jne
outsl
stc
xchg
popa
popa
inc
test
ret
loope
lds
adc
inc
or
xor
adc
fsubrl
pop
jl
out
add
xor
loope
lods
xchg
push
mov
ret
fs
sarl
test
lahf
rep
jae
addr16
out
push
mov
fldln2
pop
push
rol
xchg
xorl
enter
int
cmp
push
sbb
and
sti
fstpl
repz
xchg
leave
lea
cmp
sbb
inc
addr16
je
out
insb
inc
cmp
pop
cmp
xchg
lods
popa
mov
subb
add
aad
pop
dec
scas
jg
sub
leave
jbe
jmp
adc
mov
pop
icebp
xchg
adc
icebp
ret
mov
push
sbb
xchg
xor
dec
add
lcall
shll
pop
ljmp
inc
mov
cmpb
cmpb
pop
pop
lret
jg
andnps
sti
dec
pop
addl
mov
hlt
adc
mov
push
sub
sbb
ljmp
add
or
push
shll
mov
ret
and
cmpsb
mov
cmpl
pop
addb
ret
sbb
and
jl
push
adc
and
push
jecxz
enter
pop
jns
pop
xchg
inc
pop
ljmp
pop
jl
xchg
and
mov
and
sbb
inc
jno
jle
add
xchg
les
pusha
xchg
jnp
mov
dec
jo
sbb
sub
xchg
repnz
popf
adc
fimull
mov
dec
fwait
xchg
inc
or
int
cmpb
sti
inc
or
mov
push
push
mov
push
cmpsl
inc
lea
xorl
cld
adc
ljmp
fwait
leave
xchg
rcr
mov
scas
lods
shll
adc
sub
sbb
jp
cmp
in
inc
int3
jecxz
cmp
int3
jae
mov
mov
adc
cmp
adc
jb
pop
mov
lock
fldcw
lods
imul
jbe
push
mov
lcall
out
cwtl
sarl
mov
divb
out
inc
push
movsb
sahf
xor
mov
inc
and
nop
movl
push
mov
loopne
sub
shlb
inc
stos
faddl
adc
push
addl
cltd
mov
pop
sarl
lcall
je
in
cli
stos
jp
inc
daa
fdiv
pop
xchg
mov
xor
int
xchg
divl
in
cmpl
sti
loope
lea
shll
pusha
inc
adc
data16
inc
subl
addr16
je
jge
bound
test
sahf
mov
lret
ret
shrl
rcll
leave
adc
movsl
xor
xchg
lods
jg
cmp
jecxz
shlb
fistps
pop
ljmp
mov
mov
jge
repnz
js
inc
clc
xor
js
call
adc
xchg
or
xor
data16
xchg
xor
shr
and
test
arpl
xlat
adc
sub
sbb
cmpsl
push
fdiv
push
dec
mov
data16
enter
int3
test
call
lea
cmpl
and
xchg
int3
fwait
push
mov
loopne
dec
jb
or
jne
add
std
push
sbb
sub
test
in
dec
dec
sbb
cmc
aam
addl
mov
and
pusha
fcoms
int
ljmp
ret
and
sahf
pop
dec
push
sub
sbb
adc
int
xchg
cmp
stc
mov
jae
icebp
in
xor
out
inc
adc
and
fidivrs
adc
jecxz
insl
scas
pop
inc
sub
xor
jb
adc
push
or
adc
aam
jns
mov
test
mul
sbb
js
xlat
and
stc
ja
xchg
mov
aad
xor
fistl
jp
int
sub
xchg
sbb
add
mov
insb
add
jo
or
out
and
xorl
ljmp
adc
adc
jae
clc
je
aam
les
xchg
push
nop
add
popf
andl
mov
pop
outsl
out
lret
mov
add
or
mov
les
ljmp
mov
mov
loope
push
xchg
or
xchg
xor
rcll
sub
in
jb
adc
pop
mov
push
or
les
inc
shrl
jmp
xchg
push
shrl
mov
arpl
loope
or
lahf
addr16
jge
mov
repnz
push
or
in
adc
xor
and
js
sub
add
stc
add
xchg
mov
sub
add
cmpb
rorb
jo
in
cltd
loop
mov
js
daa
stos
push
in
aaa
mov
cmp
mov
adc
jb
adc
and
sbb
loope
loope
pop
cmp
lock
push
inc
pusha
cmp
inc
inc
xchg
xchg
jne
dec
mov
mov
mov
out
mov
enter
adc
xchg
mov
lret
mov
ja
cmp
adc
lods
sub
or
mov
inc
ja
adc
mov
mov
sbb
sbb
mov
xchg
inc
xor
lods
push
mov
mov
xchg
pop
xchg
shll
lret
jl
sbbl
mov
sbb
cltd
push
fiaddl
jns
add
movb
pop
movsb
push
or
icebp
mov
dec
adc
inc
mov
inc
and
popa
xchg
jl
or
xchg
jge
adc
repnz
mov
sub
push
add
rclb
loope
rol
cmp
mov
add
cli
cmp
js
test
les
cmpsl
scas
hlt
xorb
mov
dec
adc
lcall
adc
aas
add
fs
lock
sti
scas
xchg
test
stos
cmc
ror
in
stos
daa
cwtl
xchg
mov
pop
mov
mov
cli
mov
cltd
mov
in
cwtl
mov
cmp
pop
repnz
hlt
int
es
lret
adc
repnz
xor
mov
lahf
pop
sub
lock
stos
fs
add
xchg
jg
sub
or
xor
ds
push
arpl
add
jns
andl
repnz
adc
sub
inc
push
call
xchg
xchg
mov
jb
lods
imul
mov
andl
jae
pusha
dec
movsl
mov
aam
rcr
or
cmpsl
leave
mov
popf
mov
loope
xor
jnp
adc
dec
lock
test
pop
fisubrs
adc
hlt
inc
fcmove
jmp
push
cmp
enter
jg
sbb
lods
mov
ss
test
xlat
mov
xor
jnp
push
sub
add
mov
mov
fdivrl
jmp
xor
je
popf
pop
mov
pop
cmp
and
jno
popf
sbb
pop
cmp
sbb
xchg
pop
ror
leave
popf
mov
stc
mov
clc
scas
das
mov
nop
movsl
sub
inc
lods
mov
sbb
jmp
fwait
xchg
sbb
std
adc
jge
mov
push
mov
out
cmpsl
push
or
pop
in
and
popa
add
pusha
gs
nop
subl
adc
pop
leave
add
push
stos
jp
sbb
xor
jns
push
and
cmp
pop
lods
add
aas
push
orl
sbb
sahf
cmc
aam
je
xchg
out
and
sbb
icebp
lods
sub
subl
dec
add
sahf
fadds
or
mov
sbb
inc
out
nop
enter
jle
movsb
ljmp
jo
xchg
jge
xchg
out
lods
pop
or
and
xor
mov
in
add
mov
or
add
std
mov
test
dec
and
aam
mov
adc
mov
rcrb
add
xchg
xchg
sub
test
cmpsl
dec
nop
repz
mov
dec
popf
movsl
loope
rorb
bound
xchg
rol
add
pop
jecxz
or
je
xchg
or
jne
arpl
jb
push
pop
dec
jno
xchg
and
jae
pop
gs
pusha
xchg
popf
xor
repz
xor
mov
and
mov
jecxz
divl
mov
lods
imul
int3
sub
push
jno
mov
or
dec
out
aam
icebp
out
xchg
icebp
dec
mov
hlt
ja
adc
inc
xchg
sbb
push
pop
pop
jnp
pop
hlt
xor
mov
and
xchg
andb
int3
xchg
in
sbb
fistl
scas
mov
pop
add
insb
and
adc
dec
into
mov
inc
or
and
cld
sbb
fistl
pusha
and
xor
ret
popf
adc
insb
fsubs
insl
or
mov
and
jecxz
or
cld
test
xchg
lock
fwait
les
pop
xor
lret
cld
xchg
test
dec
daa
sbb
push
fstpl
xchg
popf
jo
mov
pop
mov
jl
bound
iret
sbb
loope
fcomps
inc
outsl
dec
sahf
push
jge
dec
cli
lock
mov
mov
mov
jge
out
into
mov
imul
fisubl
enter
out
ss
andl
test
sbb
pop
js
fsubrs
pop
shl
dec
repnz
mov
xlat
push
test
jo
stos
mov
push
js
inc
test
sarl
repnz
xchg
mov
sub
push
sti
mov
loope
jae
repnz
mov
gs
mov
out
push
addr16
je
mov
cld
imulb
push
shl
xor
adc
jl
cltd
add
fidivrs
dec
sbb
je
xchg
push
xor
xor
mov
pop
movsb
pop
pop
sahf
cltd
cmp
aam
add
mov
ret
mov
jecxz
sub
jnp
dec
icebp
inc
push
movsl
addr16
xor
push
dec
sub
or
pop
cli
pop
push
scas
and
cmp
pop
aas
lods
or
mov
into
adc
cld
out
lea
sub
mov
mov
out
ffree
mov
inc
aaa
out
loope
ja
inc
jns
ljmp
xchg
cli
test
andl
mov
sub
ret
or
jp
sbb
jae
xorb
or
stos
xchg
pusha
aam
sub
mov
andl
mov
xchg
and
sub
xchg
repnz
loope
jo
adc
pop
push
mov
dec
or
popa
sbb
mov
mov
jno
inc
daa
jns
ss
add
test
add
jae
push
outsb
xchg
scas
adc
repz
cmc
pushf
cmp
mov
mov
leave
fwait
add
dec
pop
ja
mov
leave
mov
idivb
push
sub
jge
push
rclb
pop
out
test
xchg
lret
repnz
scas
sub
and
stos
ljmp
xor
mov
pop
push
test
adc
cmp
dec
fnsave
aam
cmp
add
fwait
cld
imul
out
stc
insb
sub
int3
leave
insl
mov
in
and
scas
push
pop
mov
push
nop
lods
out
jge
or
inc
xchg
repz
add
push
lock
lret
mov
or
sub
xchg
cmp
inc
sub
rcrb
andb
pushf
ja
mov
mov
call
sbb
pop
xchg
mov
scas
add
dec
add
jmp
ja
xchg
sbb
mov
cmp
lcall
enter
cmp
fadds
lahf
push
mov
push
popa
add
call
sbb
icebp
and
ljmp
cmp
mov
jae
in
push
push
push
movsb
imul
faddl
les
xchg
in
mov
das
dec
nop
test
cmc
add
sbb
int
add
clc
bound
scas
imul
inc
insl
dec
xchg
and
shlb
jnp
jecxz
lock
ret
adc
icebp
cmp
leave
pop
mov
xchg
je
fdivrs
sbb
js
rorl
aad
sub
shlb
add
adc
rcrl
adc
insl
sbb
dec
mov
cmp
jecxz
cltd
xor
jle
jl
inc
push
adc
ror
sahf
jg
mov
sbb
dec
push
jae
xchg
inc
out
jl
in
lahf
hlt
test
jb
xor
inc
xor
xor
or
xchg
mov
xchg
outsl
int3
aad
adc
dec
das
out
push
add
jno
mov
push
add
pop
orb
repnz
xchg
jno
mov
lods
mov
sbb
test
lods
cmpsl
xor
aad
jecxz
xor
repnz
loop
adc
lret
dec
jmp
inc
movsb
out
loop
sti
insb
rcll
mov
push
les
pop
xchg
push
test
push
jb
hlt
fimull
xchg
add
adc
imul
adc
fsubl
js
sbb
pop
add
sti
adc
mov
nop
xchg
insb
andb
add
pop
andb
add
int
js
pop
lahf
mov
sbb
mov
fwait
mov
das
or
clc
loopne
pop
sub
push
xlat
addr16
jp
je
stc
and
mov
decb
fwait
je
and
jns
jb
push
mov
bound
lock
ljmp
dec
adc
cmp
fistl
xchg
sbb
out
adc
cltd
in
xor
ficoms
add
outsl
jae
xlat
call
sub
push
jb
mov
mov
ret
pusha
add
and
arpl
stos
fiaddl
sub
jbe
xor
stos
jecxz
jb
sarb
lcall
xchg
dec
mov
test
mov
popa
jns
in
jbe
fs
int3
and
adc
lret
pop
mov
jnp
call
ja
sub
out
mov
pop
in
dec
daa
pop
or
lods
jns
lahf
xchg
mov
mov
xchg
push
jge
sbb
push
mov
push
cmp
add
and
or
scas
shl
dec
pop
lret
sbb
adc
ficomps
sbb
lcall
test
in
loopne
sbb
mov
mov
xchg
mov
in
aad
insb
adcl
and
inc
inc
insl
movsl
sub
shll
inc
clc
pop
cltd
jae
push
jns
sbb
mov
mov
adc
repz
fisubs
xchg
push
mov
sbbl
aaa
test
add
mov
stc
shr
je
lods
imul
add
jns
rcll
in
or
sbb
and
popa
sub
lods
dec
enter
jae
es
mov
movsb
out
outsl
jbe
call
mov
loope
in
pop
fs
leave
jne
lret
xchg
sub
test
jl
xchg
xchg
mov
dec
mov
xlat
sub
ret
mov
and
ret
popa
je
and
mov
test
sub
sbb
mov
lods
cmp
xor
or
and
lds
call
mov
outsb
les
and
cmc
lods
test
icebp
add
loope
push
movsl
iret
jl
sub
aas
mov
jo
push
pushf
jne
sub
adc
push
pop
adc
mov
shll
inc
pop
push
jb
call
push
shll
and
mov
insb
and
cmp
or
scas
insb
mov
push
insl
movsl
lods
jnp
rcrb
mov
int3
addl
test
mov
mov
push
test
dec
xor
fidivl
sbb
add
mov
jl
imul
sbb
popa
sbbl
push
push
sti
and
jns
mov
dec
mov
lock
adc
hlt
test
jno
negb
mov
inc
and
popf
xlat
sbb
into
sbb
jp
jp
lcall
xchg
mov
test
call
add
stc
mov
hlt
xor
mov
pop
push
xor
push
repnz
scas
inc
in
dec
lret
cmp
mov
mov
jae
cmp
or
subl
cltd
jae
adc
adc
xchg
mov
sbb
fs
jnp
out
in
rclb
sub
jns
sahf
aad
cld
mov
test
jecxz
pusha
mov
daa
repnz
sbb
sub
repz
ds
bnd
xchg
call
enter
mov
fstpl
jo
dec
cmpsl
mov
mov
aas
push
jl,pn
sarb
cli
in
popa
dec
fs
push
adc
out
rcrl
imul
cli
cmp
sbb
std
lahf
jg
sub
popa
cmpsb
sbb
stc
pop
gs
ret
lret
push
ret
mov
roll
push
sub
shrl
push
adc
int
ror
xchg
and
sbb
sbb
aad
call
cmp
adc
jmp
and
shrb
mov
sbb
inc
push
jmp
mov
mov
test
jp
lret
pop
cmp
popf
sub
ret
mulb
stc
mov
xor
xor
std
adc
scas
or
or
push
push
xchg
push
mov
jp
je
mov
inc
ds
cmp
cli
roll
jge
and
subl
clc
pop
jns
repnz
mov
mov
dec
pop
sbb
sub
std
push
mov
shr
mov
out
test
jns
and
mov
xchg
xchg
adc
mov
rorb
jno
fs
hlt
mov
cmpb
shlb
pop
push
xchg
xchg
inc
mov
jge
lea
aam
jl
xor
pop
sahf
xor
imul
pop
sub
test
imul
imul
sbb
subb
enter
lock
inc
arpl
leave
push
sbb
push
mov
mov
lds
js
addr16
insb
mov
push
xchg
icebp
mov
loop
cmp
in
call
icebp
xor
and
sub
pop
dec
push
adc
push
ret
lret
push
repnz
fdiv
jle
insb
mov
movsl
or
adc
outsl
cmp
xor
arpl
repnz
repz
push
xor
mov
xor
fstpl
xchg
dec
repz
mov
ljmp
mov
jmp
popf
jbe
mov
fisttpll
mov
xchg
cmp
mov
jecxz
jl
insb
cmp
inc
jns
adc
push
fistpl
push
pushf
mov
push
push
cld
jle
xchg
ja
rol
mov
dec
or
xchg
push
imul
clc
and
xchg
jnp
add
jge
shlb
dec
add
iret
test
push
mov
xor
fistps
sbb
in
or
jne
js
push
and
mul
sbb
insl
adc
adc
je
adc
int3
or
jge
sbb
push
dec
movl
cmp
push
mov
dec
sahf
sub
push
jp
icebp
xchg
sbb
and
sbb
cld
nop
mov
jne
addl
add
pushf
repnz
mov
jns
adc
pop
or
xchg
movsb
xor
xchg
pop
lret
push
test
mov
popf
stc
loop
add
adcl
xor
mov
jle
imul
push
dec
les
lret
jecxz
mov
dec
fstps
scas
popf
hlt
or
outsl
jae
ret
out
je
xor
cmp
lcall
sbb
xchg
pop
pop
inc
clc
shl
jl
jae
jp
sub
loope
adcl
adc
or
aas
and
mulb
push
rcll
shlw
call
adcl
sti
xchg
push
pop
add
mov
into
xor
pop
mov
adc
mov
pop
sbb
daa
mov
test
adc
jb
cs
addb
jp
test
call
xchg
cwtl
jns
and
ljmp
mov
mov
dec
cmpsb
xchg
loop
add
int
mov
repnz
xor
out
push
and
fiaddl
popf
arpl
push
mov
sarl
xorl
int
pop
cld
rol
jae
xlat
ss
repz
repnz
xor
mov
stos
lea
xchg
mov
cwtl
xchg
test
lret
pushf
push
jnp
mov
adcb
sub
mov
dec
int
adc
push
mov
pushf
mov
ret
sbb
pop
mov
sbb
inc
adc
test
cmp
sbb
jp
push
xor
jbe
addr16
aam
inc
mov
mov
clc
pop
dec
xor
js
pop
adc
arpl
mov
jb
daa
rcll
pop
jo
dec
jge
xor
std
cltd
popa
push
jne
jbe
dec
jne
enter
out
pop
cmc
sbb
inc
pop
jo
push
lods
cli
dec
es
pop
and
aaa
jecxz
jge
mov
push
add
fdivrp
or
push
and
pop
adc
int3
or
and
jl
sbb
loope
adc
cmpsl
out
leave
cwtl
xchg
fidivrs
inc
mov
in
in
into
jns
adc
pop
cwtl
and
mov
test
cmp
into
fadd
push
or
data16
adc
out
cmp
add
xchg
jns
test
aaa
dec
add
jne
incl
clc
aad
dec
nop
xchg
stc
flds
sbb
andb
cld
cmp
xchg
mov
jns
js
imul
imul
arpl
sub
dec
fdivs
loopne
ret
pop
mov
mov
jecxz
ret
sbb
hlt
pcmpgtb
lods
mov
negb
pusha
les
adc
fadd
out
sub
aas
adc
push
jne
adc
pop
add
sarl
sub
xchg
or
sub
mov
dec
call
outsb
jnp
sbb
adcb
sti
cmpsl
push
in
arpl
pop
test
notl
mov
scas
cs
pop
dec
loopne
dec
or
icebp
test
out
arpl
sbb
push
inc
dec
sbb
enter
fiaddl
or
pop
outsl
ret
popf
xor
jecxz
inc
xchg
inc
dec
cs
mov
pop
mov
dec
hlt
lret
xor
ja
out
mov
or
daa
adc
adc
lret
lea
repnz
jecxz
add
mov
pop
daa
xchg
pop
mov
dec
daa
enter
repnz
xorl
mov
adc
lahf
sbb
add
or
pop
insb
lahf
int
clc
mov
mov
mov
int
mov
jmp
xchg
in
lds
add
rcl
jae
lea
cmpsb
xor
sbb
icebp
xchg
adc
sbb
fistpll
call
into
fiaddl
dec
sbb
mov
pop
jne
bound
fs
jns
popa
dec
test
movsb
xchg
test
cmp
cmp
add
enter
test
je
out
push
xchg
je
mov
js
push
cmp
inc
mov
push
je
jns
addb
fcomip
push
pop
fidivrs
or
mov
int3
sbb
dec
cmpl
cmpsb
push
xchg
xchg
xchg
fs
loope
icebp
test
imul
mov
in
mov
xchg
mov
pop
mov
inc
mov
jb
pop
popa
inc
sbb
mov
cmpsb
push
test
inc
in
lcall
push
adc
daa
mov
mov
mov
nop
ljmp
inc
adcl
sbb
xor
in
insb
sub
arpl
xlat
jo
pop
fnstsw
dec
adc
sbb
mov
jge
and
insb
test
cmpsl
mov
sub
movsb
dec
hlt
jb
bnd
clc
xchg
in
push
mov
dec
outsb
push
je
adc
jle
sar
jae
ss
ret
popa
pop
push
scas
mov
mov
mov
lret
icebp
fsubrl
int
push
add
popa
sub
imul
add
scas
into
cmp
shlb
push
int
hlt
xor
xchg
adc
stos
ror
into
push
cmp
aad
inc
pop
mov
mov
sub
add
jbe
add
lret
roll
adc
dec
cwtl
jecxz
std
dec
ret
aaa
outsb
cld
jne
repnz
ret
lods
aad
inc
sub
jge
pop
jo
das
out
add
sbbb
sbb
sti
stos
jae
adc
dec
mov
mov
stc
pop
mov
or
mov
jle
out
xchg
test
dec
mov
js
pop
iret
int3
adc
mov
add
adc
xchg
sbb
xchg
pop
call
lds
xchg
or
das
xor
sahf
in
push
jno
pop
rcl
mov
imul
xorb
xchg
or
stos
shl
push
xchg
adc
inc
dec
les
push
insb
push
outsb
add
arpl
or
pop
and
out
in
push
pop
adc
mov
inc
adc
push
fdivs
sarb
in
sub
ljmp
repnz
adc
lret
push
fs
icebp
jo
rorl
iret
mov
xchg
push
sub
popa
adc
or
push
addr16
mov
inc
jecxz
jmp
ss
xchg
cmp
mov
cmc
mov
jae
fwait
mov
adc
jl
jg
xchg
mov
fs
out
fdiv
leave
and
sahf
rolb
pop
out
mov
cmp
xchg
mov
dec
xor
sbb
adc
sub
inc
aaa
shr
mov
mov
adc
push
das
jns
and
cmp
pusha
pushf
jnp
push
jge
cs
bnd
jp
fimuls
fnstenv
mov
mov
mov
add
inc
idivb
or
mov
mov
xchg
sidtl
pusha
push
jns
pop
xchg
or
repnz
ljmp
xchg
jl
cmp
jp
popl
lret
xchg
adc
inc
mov
ret
pop
sub
mov
insl
les
subl
pop
shll
nop
adc
loopne
js
xor
lds
aad
fnstsw
jb
lret
adc
cmpsb
aas
jmp
iret
ss
pop
mov
js
sub
enter
push
mov
call
push
mov
lods
bnd
jle
xor
fs
icebp
sbb
pop
fucom
add
xor
jb
adcl
inc
sti
scas
and
pop
cli
xorl
mov
in
push
cmp
arpl
pop
push
mov
inc
jo
adc
fsubrs
jl
cmc
and
pop
adc
out
cmp
sub
add
sbb
repnz
movsb
ret
leave
jbe
jno
mov
cmpsb
outsl
fldcw
jo
test
cmp
jo
cmpsl
mov
and
andl
lahf
push
pop
push
dec
sbb
hlt
cmpsl
xor
ficoml
add
pop
push
into
jae
icebp
dec
addr16
mov
mov
cmp
add
xchg
sarb
and
mov
and
adc
lcall
adc
mov
pop
insl
push
je
leave
xchg
push
adc
inc
mov
mov
test
dec
xor
inc
and
out
fists
pop
fcomi
sbb
iret
pop
dec
pop
push
stc
andl
sub
cwtl
notl
pop
out
sti
inc
cmp
clc
mov
ret
fcomps
xor
aad
jb
inc
xor
jmp
dec
icebp
pop
xchg
mov
clc
pop
and
sbb
je
popa
push
cmp
fidivrl
scas
push
push
mov
lock
jle
cmpsb
mov
xchg
xchg
mov
ja
lock
sub
ds
pop
xchg
jg
mov
bound
sahf
fcompl
lods
inc
xchg
cli
dec
rolb
clc
stos
jecxz
je
int3
out
jmp
loopne
inc
popa
cltd
mov
int3
imul
and
into
out
pop
xor
mov
adc
mov
ret
leave
push
mull
leave
insl
mov
adc
xchg
ret
xor
cmp
repz
in
mov
aam
dec
mov
fs
xchg
out
ret
mov
aad
jmp
ja
sbb
push
test
xor
jle
and
and
push
addl
mov
movsb
dec
lea
scas
jp
and
scas
mov
or
sbb
jo
hlt
cmpsb
fldcw
jno
fcompl
fsubrp
jne
fimull
push
xorb
out
mov
mov
push
or
adc
outsl
sbb
sub
sbb
int3
inc
hlt
je
mov
xchg
push
fsubs
mov
pop
mov
or
test
mov
je,pt
jne
jp
jp
lahf
mov
iret
shr
out
push
jl
test
ret
xchg
int
js
loope
sub
pop
and
repnz
jmp
mov
mov
xchg
mov
fstpl
push
cmc
mov
jne
jnp
pop
push
and
pop
jnp
xor
in
stos
xlat
xchg
sub
test
jne
jecxz
rorl
je
xchg
add
fcom
imul
xchg
xor
mov
dec
addl
faddl
imul
xchg
push
xor
mov
js
insb
and
bound
mov
test
ljmp
xchg
mov
lock
push
int
arpl
mov
pop
jecxz
bnd
inc
dec
adc
mov
pop
int
pop
adc
insb
pop
adc
mov
sub
mov
jle
loope
add
mov
arpl
rclb
pop
lds
lret
push
add
movzbl
or
lret
adc
shll
pop
ss
add
movsl
push
enter
mov
add
mov
and
addb
mov
stc
ja
outsb
adc
mov
into
xchg
les
pop
cli
call
dec
adc
iret
lahf
add
cmpsl
sbb
scas
subb
aaa
push
jb
push
sub
movsb
sub
sti
rolb
movsb
stos
ja
inc
jl
xchg
sub
pushf
xchg
inc
dec
xchg
sbb
mov
and
adc
fiadds
aam
stos
rcrb
js
ret
ret
sub
mov
pusha
divl
fisubl
test
sub
jg
mov
add
sbb
adc
outsl
add
jbe
push
mov
inc
adc
shrb
adc
dec
push
jne
pop
and
fdivs
sub
xchg
push
ret
jbe
jno
rclb
sbb
dec
mov
and
push
push
adc
xor
lret
add
lcall
cmc
fcompl
aas
lret
or
rcr
mov
ja
pop
pmullw
daa
pushf
addr16
notb
jnp
out
fidivrs
inc
pusha
or
sbb
add
push
hlt
fisubrl
mov
inc
mov
add
ret
icebp
fs
xlat
mov
pop
xor
in
js
mov
sahf
movsb
mov
inc
mov
loope
xchg
aas
lret
jns
xchg
sub
dec
add
stc
ja
adc
sbb
jb
lret
jb
adc
fnstenv
jecxz
stc
std
inc
and
out
mov
xchg
stos
sbb
jns
push
aaa
ja
jae
sub
cmp
cmpsb
outsb
mov
fs
out
push
xchg
adc
rorl
cmp
pop
jge
repnz
js
fsubl
lds
inc
cs
push
hlt
rcll
jg
dec
adc
lret
out
mov
fsincos
mov
test
xlat
inc
lods
xchg
adc
aam
jo
fcomps
outsl
or
cwtl
inc
inc
adc
xor
ljmp
add
and
fimull
aam
jb
xchg
mov
mov
xor
les
pop
xchg
jns
or
sbb
cmovbe
mov
sahf
out
dec
in
mov
sub
xor
rclb
jnp
jl
insb
push
xchg
mov
cli
ror
jcxz
xchg
jmp
ja
sub
rol
mov
js
xchg
je
adc
mov
jns
repz
jge
jne
mov
push
cmp
arpl
andl
test
mov
rorl
aam
dec
ljmp
movsb
aas
dec
rcll
push
rcll
push
pop
shl
and
jecxz
and
cltd
jno
mov
popa
or
enter
adc
cld
mov
rcrb
jecxz
push
pop
add
and
cmpsl
inc
popf
cmp
mov
je
mov
inc
gs
call
out
mov
xchg
aam
fists
lcall
jo
divb
xor
adc
rolb
dec
dec
pop
movsb
or
and
mov
ljmp
adc
das
mov
jecxz
test
cmpsl
inc
inc
cmp
jno
in
test
iret
cmp
icebp
subl
rcl
and
mov
dec
lahf
out
dec
add
xor
cmp
mov
sbb
mov
test
pop
mov
cmc
jne
adc
clc
shll
dec
int3
jbe
add
push
and
jns
mov
lods
jnp
ret
je
iret
push
jbe
mov
sti
adc
sarl
lcall
mov
cwtl
push
and
repnz
stos
iret
push
xchg
lea
popf
fwait
mov
insb
adc
scas
jne
ror
inc
sbb
pop
cwtl
out
pop
insb
mov
sbb
sahf
push
cmp
inc
je
js
mov
ret
out
sti
cmp
sbb
aaa
sbb
adc
adc
jae
or
imul
mov
mov
cli
test
dec
sbb
jbe
jae
ja
lock
or
out
adc
adc
enter
mov
xchg
hlt
popa
fistpl
mov
and
mov
add
sbb
cmp
fidivl
add
sbb
lods
aas
imulb
and
cltd
mov
pushf
inc
ljmp
das
mov
insl
and
adcl
outsl
dec
hlt
out
add
leave
add
adcl
dec
and
imul
mov
xchg
cli
in
pop
xchg
jns
or
shrb
jae
ret
fs
cld
dec
imul
push
push
push
push
push
lahf
mov
add
add
out
or
or
popa
ret
inc
mov
clc
or
sahf
out
add
lret
cld
xchg
hlt
popf
insb
xchg
movsb
sbb
xchg
xor
add
scas
xchg
cld
sub
adc
mov
in
add
ret
xchg
loope
test
jns
xor
mov
fnsave
and
and
xchg
add
xchg
bnd
aam
jne
shll
popa
mov
in
xchg
cltd
jns
mov
mov
mov
xchg
xor
or
mov
insb
xor
sbbb
push
roll
mov
shll
and
je
rcrb
sbb
add
inc
je
add
xchg
cmp
push
call
xchg
cmp
adc
jae
push
push
adc
mov
in
jae
test
jb
jecxz
rcl
mov
jle
xchg
popa
xchg
adc
xchg
and
fwait
push
xor
mov
adc
dec
test
xchg
sti
repnz
ret
jns
flds
and
imul
inc
jae
ret
icebp
fistl
in
jno
enter
xchg
mov
test
rolb
in
cli
repz
mov
and
adc
xchg
adc
mov
jae
fcoml
push
adc
icebp
push
and
enter
push
mov
cmpl
add
and
xchg
jno
xor
adc
aad
xchg
add
xchg
shll
pushl
sbb
ret
cwtl
cltd
mov
ficoml
push
xor
daa
pop
fs
xor
jno
adc
in
adc
inc
test
or
jae
inc
shlb
add
jp
mov
xchg
cmp
stc
mov
inc
enter
push
mov
call
and
mov
sbb
inc
jnp
sbb
adc
dec
in
add
cmpsl
and
enter
inc
jmp
rorb
dec
add
xor
sahf
movsb
sbb
jecxz
push
sub
fsubl
mov
jmp
cld
jne
sbb
or
cwtl
pop
lahf
lret
jae
jae
inc
jae
pop
push
cmpsl
jnp
or
xor
div
push
mov
or
rcll
adc
jbe
sub
adc
inc
jp
sbb
pop
xor
insl
sbb
addr16
pop
mov
dec
ljmp
repnz
mov
inc
adc
push
scas
stc
shlb
or
jae
mov
cmp
shl
inc
cmp
pop
jns
mov
adc
sub
mov
pop
adc
sub
ret
loope
xchg
jl
pop
into
add
ret
fcoml
outsb
fldln2
movsl
add
test
inc
sbb
inc
lcall
sbb
mov
fdivr
mov
sub
jne
xor
cmc
in
imul
int
and
arpl
subl
fucom
sbb
mov
adc
dec
mov
pusha
daa
mov
andl
pop
aam
lahf
in
jne
add
mov
pop
jecxz
jb
cmpsl
inc
cmp
add
jecxz
fisubrs
nop
mov
jge
cmp
sbb
mov
notl
icebp
shl
in
sbb
mov
dec
jne
sub
jns
push
mov
jg
cwtl
cmc
int3
ret
jmp
out
das
data16
xchg
adc
inc
xor
dec
cmp
icebp
push
add
jae
sub
mov
xchg
inc
jg
mov
cwtl
out
xchg
pop
and
xchg
or
fcoms
fidivs
xchg
push
iret
std
mov
test
ja
rol
xlat
ljmp
out
mov
jecxz
popf
daa
mov
sbb
xor
rcl
sbb
les
add
pop
adc
insl
push
adc
cltd
jns
jo
mov
addl
sub
ljmp
test
xchg
dec
push
xchg
repz
xchg
dec
aaa
jecxz
mov
ret
lcall
and
lods
xchg
xchg
xchg
mov
adc
cmp
push
mov
adc
mov
mov
mov
jb
ljmp
test
lahf
hlt
popa
popf
test
jne
icebp
mulb
arpl
or
or
enter
int3
add
jns
mov
lea
jno
sub
inc
mov
es
mov
incb
add
imul
mov
mov
xchg
mov
bnd
rcll
jne
lea
mov
pop
jmp
inc
fdivp
add
jbe
ja
and
jmp
jp
scas
dec
jge
icebp
and
lea
popf
sub
pop
cmp
jno
jbe
sub
es
je
popf
mov
push
push
andb
and
pop
ficoml
cld
mov
pop
sub
pop
mov
shll
es
xchg
popl
jnp
imull
xorb
arpl
ficoms
and
lods
jae
ljmp
jae
nop
xlat
rorl
ret
xor
mov
push
inc
rol
test
mov
xchg
cmc
mov
stos
scas
bound
sahf
fld
jb
jb
mov
imul
and
je
jb
movsb
insl
jbe
jne
movsl
sbb
imul
hlt
scas
mov
mov
pop
data16
ss
mov
mov
xor
rcrl
mov
jae
iret
sbb
mov
in
icebp
jecxz
dec
jae
pop
mov
jns
sub
jno
cltd
sub
xor
adc
dec
jge
push
je
or
lods
mov
lcall
xor
icebp
and
ja
jns
push
cs
jne
xor
test
dec
mov
mov
add
int3
je
mov
xor
loope
fsubl
add
repnz
xchg
mov
inc
jne,pt
inc
out
add
xchg
out
dec
popa
sub
fisubrs
jae
int3
dec
jl
iret
cmp
je
es
je
mov
adcb
decl
xchg
cli
jno
fcomps
daa
pop
pusha
jg
mov
mov
jb
jb
aad
inc
scas
ds
jmp
xchg
sub
fwait
mov
nop
repnz
pop
lods
out
cwtl
adc
xor
dec
aam
add
repnz
pop
sbb
mov
insb
icebp
or
jnp
popf
mov
mov
out
lea
jae
sbb
xchg
or
pop
imul
mov
cli
pop
fdivrp
out
xchg
aaa
jne
cmpsl
pop
cmp
popa
add
push
mov
mov
mov
jae
fisttps
out
add
push
in
jne
jge
push
call
int
sarl
xchg
loope
push
xor
int3
pop
mov
or
fidivs
mov
xchg
imulb
mov
jne
pop
lret
test
jae
rol
cmp
pusha
jbe
shll
test
xchg
test
jno
cmp
cwtl
mov
xchg
adc
jae
sbb
fstpt
jae
mov
sub
mov
jb
mov
mov
xor
insl
cmp
inc
adc
sub
sub
mov
rcll
adcl
mov
test
mov
mov
lret
cltd
icebp
and
sbb
xor
jno
push
sbb
cmpsl
test
and
push
adc
or
aad
adc
sub
add
and
je
repnz
xor
pop
icebp
out
imull
jl
push
out
mov
insb
dec
mov
lret
cli
or
fs
repnz
inc
adc
xchg
scas
mov
ret
sub
pusha
or
dec
mov
int
add
sub
clc
pop
or
cmpsb
mov
shlb
mov
out
inc
or
push
jle
sbb
xor
mov
jmp
fidivrs
mov
je
add
add
test
hlt
dec
push
insl
jo
rep
or
in
push
pop
push
loope
mov
pop
or
jae
add
pop
push
repnz
clc
icebp
shll
or
mov
pushl
cmp
xchg
or
gs
mov
pop
push
xchg
mov
cli
pop
or
cs
push
and
inc
mov
xchg
out
daa
xchg
icebp
insb
sbb
xchg
push
pop
repz
je
xorl
dec
push
cmp
add
mov
sbb
rcll
inc
icebp
inc
push
test
repz
mov
icebp
roll
push
roll
loop
cmpl
and
mov
and
push
bnd
lods
stos
add
aad
inc
xor
pop
xchg
mov
mov
mov
jge
imul
or
pop
mov
or
jb
pop
adc
scas
add
imul
sub
icebp
and
jno
push
mov
in
jg
test
jo
and
or
jl
dec
insb
mov
jge
imul
push
push
out
outsb
pusha
mov
lahf
xchg
je
ja
and
test
jae
adc
add
aas
mov
out
jle
and
adc
pop
mov
pop
ja
jp
mov
mov
jnp
jl
imul
lea
shrl
ret
pop
sar
inc
das
fcoms
dec
pop
xchg
add
pop
mov
add
jge
jb
stos
jne
dec
call
dec
test
push
dec
insb
icebp
mov
out
in
fnstcw
andps
icebp
mov
cmpsb
enter
dec
xorl
and
xor
push
dec
pop
inc
insb
gs
jb
sbb
jge
vshufpd
jb
test
pusha
jno
stc
jo
cs
gs
scas
dec
test
inc
sub
jne
pop
sub
and
stc
test
sbb
out
jno
push
dec
stos
xchg
or
pop
hlt
or
pushf
call
xchg
mov
int
or
jb
jno
cmp
and
out
jne
xor
jp
dec
adc
pusha
cld
xchg
jno
lretw
pop
or
mov
mov
pop
or
mov
or
shrb
xchg
clc
xorb
mov
xchg
pop
jno
in
addl
nop
test
adc
rcrw
sbb
je
push
mov
cmp
cmp
mov
pop
mov
mov
mov
xchg
out
dec
push
push
cmpsb
inc
fstpt
xor
and
jno
adc
iret
imulb
pop
jno
out
push
xor
fisubrl
insl
jno
jns
sbb
and
mov
jno
xchg
aam
mov
and
inc
mov
test
pop
and
add
xor
ret
insl
jae
out
lea
fidivs
push
mov
aam
mov
lods
mov
jno
test
bnd
mov
cltd
fisttpll
pushf
xorb
mov
xchg
mov
xlat
xchg
mov
iret
or
xor
pop
xchg
push
xorb
scas
pop
ficoms
sbb
jno
loopne
and
jne
lods
jle
jl
test
aam
rcl
rep
sti
in
mov
dec
mov
jle
fists
aad
cs
decl
cmp
mov
inc
fmuls
popa
pop
aad
mov
inc
adc
lret
lahf
push
outsb
and
sahf
jno
push
lods
fcomps
test
sbb
ljmp
shrl
push
cmp
movhps
popa
dec
sub
lret
inc
jmp
xchg
jge
imul
adc
mull
sbbl
je
jp
inc
add
outsb
mov
fs
loopne
movsb
popa
rolb
jno
movnti
and
adc
jno
mov
insl
inc
jno
push
cld
inc
and
push
pushl
jno
loopne
adcb
push
sub
int3
jno
filds
frstor
call
popf
aaa
push
jno
sti
mov
sahf
dec
jno
out
xchg
xor
out
push
jns
mov
clc
ss
aam
add
repz
ja
jno
or
fisubl
mov
push
aam
jb
sbb
das
lahf
test
icebp
aas
pop
xor
dec
jno
lret
sahf
fsubr
fstps
push
xorl
cmp
scas
shll
lods
stos
xchg
and
repnz
add
rorb
jno
aam
adc
call
push
sbb
xor
std
jmp
jno
inc
push
or
jno
adc
iret
out
add
or
dec
addb
cmp
sub
mov
pop
test
pusha
jno
lret
aas
sbb
clc
pop
mov
mov
pop
pop
outsb
jae
aad
outsl
pop
aam
jge
insb
adc
movl
roll
mov
mov
mov
sub
mov
sub
pop
mov
mov
mov
jno
psubsb
rorb
mov
fwait
ret
outsl
add
test
pop
mov
daa
leave
fcmovbe
lcall
dec
aas
push
jae
inc
push
repnz
inc
icebp
xchg
adc
dec
cmp
out
fbstp
jl
push
fnstenv
add
nop
adc
pop
shrb
mov
int
mov
sbb
cmpsl
mov
rcll
insl
dec
sti
aam
lahf
inc
cwtl
xor
jge
lods
xchg
xor
mov
push
push
pop
mov
pop
and
leave
das
jge
mov
push
xor
xchg
xor
jg
repnz
gs
xchg
xchg
sbb
daa
sub
shll
popa
test
mov
lahf
inc
repnz
xlat
outsl
push
xor
repnz
push
test
mov
sbb
xor
xor
or
stos
dec
scas
jno
lds
mov
bnd
pop
outsb
pop
or
test
ds
out
jmp
loope
repz
jne
cmc
int3
arpl
sub
popf
mov
ss
mov
les
and
add
pop
mov
stos
mov
pop
out
or
xor
sbb
popa
movsb
insl
es
test
xor
push
mov
xchg
adc
or
lcall
adc
inc
add
std
iret
sbb
mov
test
jle
aad
movsl
xchg
mov
xlat
pop
int3
mov
add
iret
push
push
jg
sbb
mov
jg
adc
pop
imul
push
pop
outsb
fs
xlat
call
out
xor
dec
ja
adc
cld
cmp
push
int
push
imul
inc
sbb
and
fimull
lds
push
les
jae
js
sbb
aaa
push
test
xchg
mov
mov
arpl
mov
cmp
inc
jl
cmp
mov
mov
orl
and
les
divl
push
pop
xchg
test
gs
mov
in
push
adc
jno
addr16
rclb
sub
dec
into
xchg
mov
fistl
leave
mov
sahf
jg
mov
add
mov
mov
push
test
ja
loope
lea
enter
mov
fistl
in
push
jecxz
and
sbb
or
adc
sbb
lods
fwait
dec
bound
movsl
lcall
push
test
ja
js
iret
jno
sbb
repnz
xchg
adc
adcl
sbb
xor
neg
lods
xchg
or
fiaddl
mov
je
into
sub
push
ds
sbb
shrl
xchg
into
sub
push
jg
xor
mov
std
adc
cwtl
mov
hlt
cmp
pushf
xchg
xor
push
cmpsb
xchg
mov
pop
xchg
sub
gs
mov
xchg
cmp
in
jb
jle
cmc
out
jecxz
cmpsb
shr
test
jl
sub
daa
xor
push
insl
inc
pop
and
mov
popa
lods
jnp
push
xor
outsb
pop
mov
outsl
cmp
or
arpl
jno
std
ja
jg
fsts
jae
fsubs
xchg
and
jecxz
fwait
mov
addl
loop
aam
jne
loopne
adc
js
mov
mov
pusha
inc
popf
shll
sbb
pop
ss
arpl
mov
ja
dec
mov
xchg
xchg
pop
pop
lahf
jge
adc
pop
xor
jl
mov
dec
pop
scas
cmp
fsubrl
jb
movsl
out
icebp
mov
fdivr
add
pusha
adc
xlat
xor
pop
incb
mov
and
push
xchg
jns
mov
cmp
xchg
pop
pop
sub
movsb
xor
adc
je
mov
jecxz
sarl
hlt
jnp
jg
orb
xorl
add
cmpsl
loop
aad
jecxz
pop
imul
js
mov
jo
aas
jb
jno
xchg
xchg
in
loope
or
push
mov
aam
inc
arpl
xchg
xchg
mov
jb
into
xchg
mov
sbb
call
testl
xlat
iret
xor
jno
nop
les
test
ret
and
push
mov
shlb
sub
testl
or
addr16
popf
je
pop
sub
xchg
xor
loope
mov
sarb
or
xchg
cmp
call
xchg
add
fsts
xchg
hlt
xchg
xor
and
icebp
dec
inc
push
adc
cmp
adc
icebp
and
add
add
fisubrs
and
jnp
mov
in
popf
or
jg
xchg
adc
fwait
and
cmpsl
cs
push
adc
adc
or
js
aaa
cmc
mov
cmp
hlt
mov
add
push
push
movsb
lret
pop
orb
stos
into
fs
insl
leave
cmp
sahf
inc
jp
mov
mov
out
xchg
rcl
push
mov
xchg
aam
cld
mov
mov
inc
add
mov
jne
pusha
ja
push
inc
cmp
movsb
popf
outsb
jno
pop
push
test
insl
lahf
jbe
das
xor
incl
inc
adc
cmp
ja
stc
arpl
push
outsl
into
fs
sbb
sub
rcll
pop
add
cmp
sar
jno
xchg
fdivr
add
inc
xor
sub
sub
push
mov
mov
ret
lods
push
lock
xchg
je
cmp
push
jno
xchg
push
les
lret
mov
data16
or
rorb
jne
ss
call
dec
xor
or
pop
in
xor
in
bound
nop
jno
and
add
fsubrl
jo
push
sahf
jno
or
jb
inc
iret
inc
lahf
popa
xchg
leave
jae
or
mov
pop
dec
jne
mov
mov
pop
lods
jno
imul
lods
stos
jns
lods
je
fwait
mov
xor
inc
or
cmc
mov
out
insb
sub
xor
sbb
pop
pop
shrb
jo
inc
lcall
outsl
sbb
in
ret
lret
jno
mov
or
mov
adc
aad
pop
add
cld
loopne
xor
xor
xor
popf
fdivrp
jae
xchg
add
ret
aaa
aam
inc
inc
adc
jno
pop
push
lcall
repz
out
loopne,pt
jno
sbb
add
pop
fs
jbe
push
cmp
adc
sahf
inc
mov
mov
clc
add
lret
cmp
mov
xchg
mov
loopne
jl
mov
add
sub
dec
addr16
ds
or
andl
or
xor
adc
aas
pop
jb
pusha
pop
jo
cmp
jno
stc
psubq
repnz
xor
in
jno
jne
hlt
push
repz
arpl
aas
xchg
mov
test
and
jno
pop
hlt
leave
aam
push
out
jno
mov
enter
data16
sbb
in
jno
lret
js
xor
jne
cli
mov
xchg
xor
movsb
mov
jno
or
lret
mov
xlat
sarb
aaa
and
test
test
icebp
sbb
jo
cmp
mov
mov
imul
stos
adc
push
shlb
jmp
in
arpl
pop
pop
and
xchg
jo
add
jp
lea
mov
test
mov
loopne
pop
sti
jno
jmp
cmpsl
xchg
and
jmp
sub
jno
sbb
and
sbb
mov
dec
jne
jns
jno
push
mov
dec
lock
lea
stc
add
sbb
test
or
mov
xor
dec
jno
sbb
repz
push
jno
fdivs
sub
je
cmp
mov
jns
negl
shrb
adc
dec
pop
jno
test
ds
or
jno
call
int3
push
inc
sub
shlb
mov
scas
xchg
mov
test
jge
jecxz
in
nop
in
scas
es
jno
mov
pop
cmp
jb
sbb
insb
bnd
push
scas
loop
jmp
cmp
mov
cmpsl
xorb
movsl
lds
push
xchg
cmp
push
loope
out
cmp
xchg
lret
and
cwtl
sbb
mov
mov
inc
aas
movsb
jnp
lods
stos
shrb
fnstcw
fidivl
repnz
pop
cmp
jno
xor
sbb
std
xchg
xchg
jo
leave
mov
sarl
mov
pop
sub
lcall
jno
adcl
cs
xchg
jno
ds
push
mov
xchg
jmp
lock
or
ret
addr16
xchg
cmp
cld
icebp
test
dec
jno
in
push
js
or
xor
pushw
mov
fs
imul
rorb
jno
test
fsubl
jno
ljmp
test
jle
js
adc
mov
mov
sub
adc
iret
mov
dec
inc
add
rcll
fwait
insl
loope
pusha
jno
mov
insb
sbb
mov
jecxz
insl
push
sbb
sahf
fbstp
shll
loop
bnd
insb
mov
rorl
loope
mov
ljmp
xor
sbb
xchg
push
mov
mov
and
out
outsl
out
jne
add
dec
adc
test
xchg
adc
push
jmp
and
or
cmp
jno
add
sbb
xor
movsb
stos
mov
jge
push
jb
push
push
jp
addr16
stos
xchg
dec
ror
xor
pop
cmp
fs
ret
jo
test
sub
xchg
and
jno
add
jns
jno
inc
mov
xchg
fisubrs
lret
loope
jmp
mov
push
dec
nop
stos
repz
scas
dec
push
and
mov
jno
push
inc
adc
xor
fsts
push
mov
stos
fsubs
out
jae
adc
jno
or
mov
dec
push
xchg
jle
add
scas
pop
jae
sub
cwtl
mov
sarl
mov
pop
pop
jmp
sub
jno
mov
inc
jno
push
pop
mov
xchg
jo
jno
fs
sti
mov
jno
shrb
xlat
jo
jno
outsl
je
pop
pop
mov
shrb
repnz
inc
cmp
jmp
xor
sbb
push
jno
ja
pop
push
add
addr16
pop
insl
jb
add
jmp
push
lret
test
mov
mov
in
add
test
jnp
mov
call
scas
push
xor
in
jbe
or
jmp
push
xor
xchg
and
hlt
popf
imul
push
mov
orl
in
jns
mov
mov
int
mov
mov
insl
cwtl
nop
leave
incl
jno
mov
mov
out
es
xchg
jno
mov
fldenv
cmp
les
lret
rcll
popf
pop
gs
lcall
lds
icebp
cmpb
mov
xor
je
xor
scas
inc
push
inc
mov
imull
jno
sbb
inc
or
into
popa
xor
fs
roll
jb
cltd
jno
push
imul
mov
pop
add
or
test
jno
lcall
jno
arpl
cmpsl
repz
fdivs
repnz
cmc
into
mov
jno
das
arpl
and
or
nop
outsb
cwtl
imul
sar
iret
insl
mov
hlt
movsb
xor
inc
dec
jno
gs
call
jno
push
in
lret
icebp
iret
push
jno
in
lcall
pop
inc
xchg
mov
sub
lods
add
scas
gs
ja
pop
pop
pop
aam
pusha
sbb
pop
je
outsl
cmpsb
inc
dec
mov
xlat
test
fstl
call
testb
pusha
test
ret
sbb
jmp
outsb
ss
pop
jae
lds
jno
xchg
jmpw
sub
mov
mov
xlat
cli
inc
int
hlt
jno
push
sbb
test
scas
xchg
repz
jno
inc
and
push
movsl
xchg
icebp
lods
mov
mov
cld
ficompl
dec
jg
repnz
aaa
insl
pushf
push
ret
loope
xchg
or
xchg
push
push
cmp
es
outsb
xchg
ret
jne
mov
push
out
je
mov
inc
data16
mov
push
mov
xor
loope
push
xchg
cmp
pop
inc
add
arpl
repnz
jg
pop
cmp
jno
pop
sbb
jns
lods
xor
repnz
jge
dec
enter
popa
mov
cmpsl
jge
out
enter
xchg
out
push
mov
icebp
pusha
lods
mov
jae
mov
sbb
dec
js
in
mov
pop
mov
je,pt
lret
adc
outsl
push
mov
aas
xchg
insl
pop
xor
fwait
jp
sbb
test
cmpl
jmp
bnd
mov
inc
xchg
and
ja
dec
push
dec
sub
cmpsl
into
jae
outsl
lcall
jae
test
loope
sbb
shll
sbb
gs
cld
iret
jne
dec
addr16
call
inc
push
inc
stc
gs
jne
dec
sbb
mov
xlat
xchg
adc
jecxz
jge
icebp
xorb
idiv
rolb
outsl
or
jp
sbb
repnz
dec
dec
mov
imul
pop
mov
ret
icebp
jne
aam
mov
repnz
pop
popf
pusha
js
hlt
pop
push
and
pop
push
xchg
das
js
int
dec
hlt
sbb
fsts
vpmaxsw
cmp
xchg
aam
fimuls
add
je
and
xchg
cwtl
imulb
dec
test
pop
xorb
xchg
and
xchg
mov
fwait
adc
push
xor
xchg
jae
mov
mov
movsl
rclb
pop
and
ret
mov
jne
fwait
sti
adc
lahf
lods
or
xchg
jle
imul
rcll
inc
mov
and
sbbb
adc
movsb
iret
mov
dec
loop
sub
mov
outsb
ja
mov
jb
jne
push
in
leave
clc
jl
push
ja
jecxz
gs
sub
nop
mov
mov
into
xchg
jnp
insb
out
iret
jae
lret
sahf
sbb
cmp
ds
mov
sbb
cmpsl
pushf
inc
iret
cltd
dec
mov
idivb
xchg
xor
icebp
xor
ror
sbb
or
inc
and
jo
jge
shll
sub
lahf
inc
mov
mov
mov
or
dec
adc
call
xchg
jae
imul
les
arpl
cmp
and
fldl
lcall
inc
out
xorb
arpl
adc
insb
xor
xchg
mov
leave
adc
loope
or
inc
sub
push
pop
cld
divb
cwtl
xor
push
push
lahf
je
lock
cmp
outsl
xchg
xchg
jg
popa
cwtl
cltd
push
sbb
popl
xor
rolb
xchg
add
xchg
fdivrs
lahf
les
mov
sub
or
rclb
jnp
rclb
jg
movsb
ror
xchg
cmp
inc
push
ret
test
pusha
out
shrb
mov
mov
ret
inc
jge
inc
push
pop
xchg
jae
test
pop
or
mov
xchg
mov
mov
push
sub
xor
fwait
inc
clc
shlb
cwtl
mov
adc
lds
cmp
cmp
mov
imul
ljmp
jo
mov
add
fimull
clc
add
xor
pop
jne
jnp
cmc
pop
data16
movsb
and
or
sbb
into
inc
cmp
sub
jg
icebp
fsubs
mov
test
add
js
sarl
addb
or
int
cmp
jae
pop
jmp
inc
ja
inc
push
mulb
push
push
sbb
gs
jmp
testl
jns
and
push
mov
test
adc
and
mov
into
jno
push
mov
cltd
or
in
or
les
xor
jno
out
pop
je
hlt
adc
jg
jbe
in
repnz
mov
out
aam
int
fwait
mov
popf
movsl
ljmp
lahf
mov
xor
dec
pop
test
je
mov
inc
fsub
fs
mov
aaa
xchg
push
xor
es
mov
sub
mov
jno
cwtl
jmp
xchg
jno
daa
add
mov
jge
push
and
jno
jmp
xorl
inc
mov
push
int3
jno
pop
mov
aaa
dec
push
test
pushf
fwait
movsb
popa
pop
adc
jge
mov
jo
pushf
call
mov
hlt
outsb
mov
add
cmp
loopne
sar
mov
fildll
insb
inc
lea
clc
outsl
lahf
inc
xlat
hlt
lock
inc
sbb
jg
stos
sbb
jno
fisubrl
xchg
jno
rolb
xchg
and
dec
jno
push
fmuls
cmpsb
xchg
mov
sub
cmp
jno
aaa
push
xchg
clc
ds
push
stos
jns
lock
add
xor
clc
orb
jb
push
sub
push
xchg
lahf
push
cld
mov
xor
dec
jno
pushf
ljmp
jle
jno
jae
imul
jno
lods
jb
fmull
hlt
jno
or
push
jno
stc
xchg
daa
stos
inc
out
andl
xchg
jl
mov
and
jge
in
xor
pop
je
lret
mov
loopne
icebp
inc
pavgw
jnp
add
jno
notl
mov
imul
cmc
xchg
jno
cwtl
arpl
ret
in
sub
ret
test
icebp
mov
sbb
jno
iret
push
fwait
dec
test
push
test
arpl
mov
fisubrl
xor
in
xchg
xor
mull
mov
or
jae
add
mov
add
das
mov
bound
mov
imull
and
pop
leave
push
mov
repnz
cmp
arpl
jno
mov
fcompl
push
push
hlt
jmp
or
mov
sbb
fadds
nop
lret
mov
dec
sbb
test
clc
repnz
sti
jno
pop
mov
xchg
or
shll
popf
lea
imul
mov
sub
fidivs
add
aad
jno
movsl
and
paddd
lods
push
ljmp
and
jno
sbb
scas
jae
and
or
cmp
pushf
jno
mov
lret
cmp
leave
sbb
mov
jno
mov
xchg
fdivrl
dec
xchg
adc
xor
test
bound
shll
js
cmp
scas
and
xchg
repz
cmpsb
out
sbbl
dec
pop
xchg
jmp
in
pop
je
test
inc
bound
xchg
adc
sbb
aaa
insb
in
add
stos
fstpl
adc
adc
gs
aaa
mov
mov
shl
or
xchg
mov
push
xchg
jge
pop
loopne
xchg
je
inc
test
jne
arpl
into
pop
or
mov
data16
cmp
rcrl
sbb
mov
ja
mov
nop
cld
sub
pop
add
cmpsl
xchg
fsubs
xchg
sub
pop
movsl
inc
ret
rcr
or
inc
add
repnz
push
int3
dec
ss
xor
and
clc
add
push
fstps
popf
xorb
addr16
push
mov
pop
lods
sarb
rol
outsl
lea
outsb
inc
xchg
cli
mov
std
shlb
test
repnz
call
adcb
push
fwait
jns
test
and
cmp
jecxz
out
mov
fldenv
mov
test
jbe
sbb
xchg
inc
sbb
pop
mov
mov
push
mov
pop
test
leave
push
xor
cld
jo
mov
test
jge
mul
adc
inc
gs
lods
ss
jns
lea
inc
mov
icebp
xchg
adc
repnz
mov
jge
das
test
pop
popl
jno
xchg
mov
sub
mov
mov
out
cmp
jno
int3
addr16
roll
jno
fcomps
jp,pn
adc
inc
xor
int3
popa
sub
loop
mov
movsb
ret
fistps
jb
fisttpll
leave
add
or
xlat
add
mov
xchg
xor
insl
popf
xchg
mov
jno
mov
sbb
inc
lret
add
xchg
adc
shll
sub
jl
xor
mov
sbb
jbe
dec
rcr
call
rcrl
jle
icebp
and
push
addr16
mov
pop
xor
jnp
gs
cli
stos
cmp
jb
mov
lds
fsubs
jae
push
jp
cmc
lock
lea
in
sbb
xchg
je
testl
mov
add
ljmp
in
sbb
stos
cmp
hlt
xor
xlat
fwait
shrl
and
int3
sub
xchg
popa
loop
cwtl
out
mov
mov
add
test
loop
mov
xor
jle
add
cmp
xlat
mov
aaa
ds
mov
mov
xchg
pop
push
jno
jne
jle,pn
cli
jecxz
enter
fs
pop
int3
ret
jno
ljmp
jge
scas
test
mov
jno
mov
lock
jno
outsl
aam
xchg
aas
inc
clc
jno
ss
or
xor
addr16
cmpsb
lret
xor
adc
sbb
jno
stos
test
loopne
mov
sub
sarb
pop
jb
jno
lret
dec
fstpt
iret
add
cmp
xorb
stos
sbb
pop
fwait
jno
shll
lcall
in
sub
subb
xchg
cmp
gs
and
enter
or
lahf
inc
shll
inc
jno
push
andl
or
ret
fsts
lds
gs
add
les
add
mov
retw
jno
push
lcall
pop
mov
sbb
ror
je
mov
jno
add
jno
xor
test
ret
aam
shrb
movsl
push
mov
pushf
jno
xorl
jns
sahf
fsub
or
fiaddl
jb
or
data16
pop
pop
lds
aas
push
adc
push
stos
xchg
icebp
std
and
jno
shlw
sub
mov
jno
pop
rclb
cltd
stos
push
pop
jne
dec
stc
ret
imul
and
or
lea
fldl
pop
mov
or
xorl
pop
jno
mov
push
dec
hlt
jno
les
mov
cmp
jp
xor
xor
jno
mov
sub
cld
mov
jno
inc
int3
mov
push
sub
push
adc
ret
pop
mov
mov
inc
enter
hlt
test
push
hlt
xchg
in
lods
jmp
daa
jb
fs
jno
stos
lea
mov
sub
scas
les
jecxz
mov
mov
xchg
jmp
push
jmp
push
enter
orb
add
pop
jno
sti
lea
jne
daa
adc
pop
jne
movsb
lods
fcom
data16
rcr
jae
xor
cmp
lcall
ja
mov
xor
mov
push
push
and
push
xchg
scas
mov
shrl
decl
ss
fbstp
int
xor
push
jno
cmpb
clc
xchg
sub
mov
push
or
pushf
movsl
push
push
add
shlb
xchg
es
xchg
sub
jbe
sub
add
lods
out
dec
xchg
mov
jno
bound
cwtl
ds
lods
push
orb
and
fildll
mov
fmulp
in
push
mov
and
jno
bound
mov
pop
icebp
loope
hlt
inc
clc
jno
ror
add
out
ret
popf
pop
or
mov
fistpll
jno
push
push
and
dec
movsl
int
adc
pushl
adc
outsl
imul
xchg
or
push
jno
imul
jno
loopne
dec
pop
dec
push
loope
sub
adc
les
ret
cli
pop
int
sub
inc
jno
popa
orb
dec
pop
movsl
je
test
jno
test
cwtl
cmp
ret
add
adc
lcall
int3
sbb
mov
pop
sbb
mov
mov
dec
dec
push
mov
jne
gs
xchg
pop
jno
icebp
sub
xchg
or
or
gs
jb
enter
rorb
std
hlt
or
xor
sbb
jl
xorl
rcl
aam
out
jno
jle
aas
xchg
fs
das
je
adcb
lods
mov
js
pop
mov
mov
ds
pop
pop
jno
mov
arpl
in
dec
push
mov
out
leave
jne
sbb
in
mov
jno
movsl
inc
pop
xor
xchg
arpl
push
jno
outsl
loope
jecxz
jl
xor
jno
pusha
sub
add
popa
popa
xchg
mov
dec
jb
jbe
rol
adc
int3
in
jno
xchg
loopne
jnp
imulb
loopw
jno
xchg
push
adc
xchg
lods
std
lods
inc
mov
pop
xchg
sbb
sub
movsl
jno
xor
inc
xchg
jnp
mov
lret
dec
mov
pushf
sbb
mov
hlt
jns
fsubs
pop
test
icebp
scas
shrb
pop
jno
jp
adc
cmp
stos
jno
mov
add
outsl
shlb
adc
in
fmull
rolb
shll
push
cmc
and
inc
jno
jge
inc
sbb
jno
inc
mov
push
insb
lcall
mov
sub
sahf
ficoml
jle
inc
dec
add
jno
mov
sub
xor
jno
lods
push
test
loop
je
insb
jno
sar
inc
outsl
int
jno
js
inc
fs
cld
sub
pop
aam
sarb
jno
push
add
push
das
in
movsb
int
and
sti
test
jno
sbb
sbb
sub
and
jno
xor
xchg
mov
in
jno
jne
dec
add
imul
in
mov
xlat
adc
jge
popf
clc
xchg
out
xchg
sahf
xor
xor
add
std
xchg
mov
in
inc
andl
cli
xchg
inc
xchg
mov
or
mov
aam
je
leave
bound
dec
sbb
cli
fs
sub
mov
or
xchg
fidivrl
cmc
insl
pop
in
hlt
xor
jb
daa
or
xchg
pop
jno
and
push
dec
pop
mov
popa
pop
ret
jae
xchg
push
xor
int3
xor
pop
sub
aas
jno
xchg
xor
inc
jno
or
xor
pop
xorl
add
sub
nop
mov
dec
push
fwait
jne
jno
in
repnz
pop
adc
jno
mov
lea
mov
pop
adc
sub
and
leave
xchg
sub
rcrl
test
lea
ja
xor
repnz
sub
cmpl
jg
xchg
dec
push
adc
shlb
sub
jae
push
jmp
sub
je
daa
pop
or
jb
fsubrs
mov
xor
cmpsl
jne
xchg
clc
xchg
cmp
cli
pop
xchg
pop
imul
mov
pusha
loop
add
or
add
repnz
pop
fs
mov
dec
sbb
pop
lea
push
call
decb
sub
adcl
je
jno
lahf
jbe
pop
adc
popf
out
mov
push
lret
inc
xchg
aam
loop
repnz
lods
xchg
fcmovu
sahf
jp
adc
adc
mov
xor
pusha
xor
movsb
in
xchg
pop
loop
xchg
fwait
jo
mov
scas
popa
and
shll
sbb
cmpsb
lea
repnz
lahf
jne
xor
lcall
rcrl
jg
xor
fs
loope
lahf
pusha
je
jmp
adc
mov
sbb
cmc
jno
rcr
jge
adcl
imul
idivb
lret
dec
jno
inc
pop
inc
sub
into
dec
or
lea
icebp
dec
aaa
jno
lock
jge
adc
jno
add
jo
xlat
and
sbb
leave
adc
movsb
sub
pop
jno
mov
addr16
daa
pop
push
in
push
sub
lods
leave
mov
push
and
xchg
pop
jno
inc
aaa
mov
or
mov
mov
jns
dec
inc
jb
push
jno
or
and
jno
inc
ret
xor
divb
inc
sbb
ret
jno
call
dec
hlt
test
jno
adc
sub
test
jb
je
push
aad
stos
lock
call
lods
push
cmp
jb
pop
stc
dec
mov
jp
enter
test
sti
pop
es
scas
rorl
pop
sub
les
jns
fwait
xor
push
jge
inc
cmp
push
je
loop
jne
test
jge
mov
push
shl
mov
js
mov
int
mov
jo
mov
inc
es
mov
sub
mov
out
pusha
loopne
sar
ljmp
mov
hlt
inc
mov
adc
mov
xor
mov
sub
sub
add
arpl
xlat
test
jg
test
and
jle
jno
sbb
jnp
mov
fstps
stos
inc
mov
dec
pop
rorl
push
push
adc
pop
jno
cmp
sbb
push
repnz
insl
push
lea
mov
scas
push
mov
jno
mov
imul
retw
and
movsb
adc
push
movsl
push
pop
sub
jae
test
mov
leave
pop
jno
stos
xchg
cmc
cmp
mov
fcmovnb
mov
mov
movb
or
mov
inc
daa
mov
fistl
jno
cmp
dec
dec
loopne
jno
arpl
adc
sub
and
xchg
fcmovb
mov
jno
gs
sub
jle
loope
test
xchg
jge
or
jbe
cli
int
jno
mov
xlat
mov
jae
hlt
mov
popf
cmp
or
lods
ficompl
sti
sbb
jne
cmp
mov
add
adc
cwtl
sub
je
pop
cs
inc
cmp
and
adc
jb
cld
pop
test
xlat
push
jno
pushf
iret
lods
insl
fidivl
cmp
stos
lcall
inc
jb
aas
hlt
je
jno
shlb
jno
loopne
mov
jno
ss
scas
outsb
push
imul
lret
push
or
mov
push
mov
mov
adc
fwait
hlt
mov
call
lahf
mov
lea
rolb
mov
fildll
lret
push
mov
dec
push
jne
jne
xchg
push
lahf
jg
aam
add
lds
lcall
xchg
testl
dec
add
xchg
inc
in
sub
jno
outsb
imul
sbb
cld
push
jmp
popf
jno
cmpsb
int3
aad
adc
jae,pt
add
adc
jno
jns
inc
loop
jle
sub
jno
pop
cmpb
jmp
xor
je
mov
xchg
pop
jno
hlt
sar
xchg
dec
jno
outsl
shr
in
xor
mov
sarb
mov
dec
adc
into
jne
mov
jae
sbbl
mov
shll
and
pop
push
scas
adc
pushl
lods
xchg
std
xchg
arpl
outsl
xchg
scas
jae
out
pop
and
add
jne
push
in
bound
bnd
xor
push
mov
jbe
bnd
call
dec
lret
mulb
jo
inc
scas
out
loopne
mov
jl
push
mov
sarb
sahf
movsl
jne
test
outsb
mov
rcl
cmp
push
mov
out
sub
jb
sub
mov
loop
xorb
mov
iretw
inc
insb
push
sub
outsl
loope
mov
jmp
push
mov
inc
pop
cmp
enter
sarl
sbb
fst
mov
shll
mov
and
add
mov
sub
icebp
loopne
addr16
cld
rcll
add
sbb
cli
mov
xchg
clc
in
xchg
in
rcll
fcoms
je
jno
hlt
gs
ret
loope
sbb
xchg
shl
lret
sbb
sti
mov
aaa
cli
outsl
jge
mov
lods
jae
xchg
in
sbb
jp
lret
negb
test
dec
fnstcw
inc
stos
adc
add
fs
or
jmp
rcrl
xchg
sub
push
cmpsb
adc
sub
es
aaa
pop
push
mov
mov
std
repz
xchg
shll
dec
inc
jge
fs
pop
xchg
sbb
lret
ja
xchg
dec
out
aaa
fldl
outsb
mov
dec
test
jg
in
xlat
int
out
shrl
or
lret
push
into
cltd
adc
fadds
push
xor
push
push
enter
dec
cwtl
sbb
sti
sub
adc
addr16
mov
fisubl
mov
cmp
out
xchg
push
fisubrs
adc
mov
js
jno
ja
out
sbb
negl
add
sbb
jae
ds
mov
inc
ljmp
popf
stos
jbe
sub
ffreep
pop
push
xchg
pop
jg
xchg
mov
cmp
cmpsb
stos
ss
mov
lods
xchg
and
jne
xchg
jp
mov
insb
xor
sbb
jle
mov
jo
scas
into
and
mov
mov
aad
mov
mov
ret
rorl
dec
xchg
insb
mov
loope
dec
xchg
adcl
adc
gs
jl
ficomps
adc
cld
xchg
test
push
pushf
popf
repz
pop
xchg
sbb
sub
rcll
or
xchg
xor
test
arpl
pop
test
aad
fnstcw
pop
xor
cmp
popa
adc
mov
sub
xchg
sbb
cmp
insb
dec
out
or
lea
push
lret
sbb
adc
cwtl
push
ja
fsubrl
int3
in
jne
xchg
sub
push
ror
imul
adc
inc
or
sahf
movsb
addr16
dec
pushf
adc
cmpsb
mov
fnstsw
outsb
add
cmp
sar
gs
fistl
sbb
sub
xchg
mov
mov
cmpsl
jecxz
xor
arpl
inc
pop
xor
in
xor
out
sub
repnz
push
pop
mov
jns
jne
jae
ja
ljmp
or
jb
fcoms
mov
push
inc
enter
and
inc
adc
push
xchg
cwtl
mov
inc
sbb
paddsb
or
jmp
pop
jecxz
mov
pop
aad
jb
push
lcall
ret
fs
mov
rcll
pop
in
cmpsl
push
out
pop
mov
rorl
sub
xchg
fistpl
js
xchg
imul
movsl
rol
dec
mov
mov
pop
cmp
sbb
sub
mov
mov
jbe
inc
mov
pop
add
out
cmp
sahf
push
or
leave
xchg
lds
ret
add
cmp
addl
xlat
int3
jb
sti
mov
ret
fidivrs
icebp
jp
iret
jo
cmp
jns
mov
sub
xchg
in
out
push
mov
xor
pop
mov
jbe
add
mov
sub
out
repz
xor
das
or
mov
cmp
mov
jae
push
sarb
fsubrp
or
add
icebp
sub
in
mov
filds
mov
or
aaa
xchg
inc
adc
lret
mov
dec
push
ja
pop
inc
pop
mov
arpl
fldenv
lret
jo
or
inc
lret
jbe
cmp
imul
lret
jmp
fldcw
inc
mov
xchg
jmp
lcall
mov
cli
les
pop
imul
jb
mov
mov
lcall
imul
fld
push
cwtl
hlt
fdivrl
sbb
adc
push
repnz
gs
fiadds
divb
jecxz
jl
movsl
sti
and
rclb
rorb
les
push
mov
jns
mov
mov
dec
add
cmp
push
dec
mov
cmp
inc
mov
pop
push
addr16
pusha
add
mov
inc
jae
and
xchg
or
dec
idiv
jg
cmp
rcll
xchg
or
pop
in
add
movsl
test
mov
rcrb
sbb
xor
jae,pt
jae
sbb
out
in
sub
mov
xchg
stc
or
push
in
js
adc
adc
mov
cmpsl
inc
jne
jns
ljmp
clc
pop
ja
dec
popf
dec
mov
iret
mov
ljmp
dec
subl
rcrb
and
outsl
ds
jle
lret
xchg
jbe
dec
and
jmp
pop
scas
loop
pop
insl
push
repnz
push
int3
xchg
sub
out
or
mov
stos
add
inc
fwait
popa
popl
test
movsb
jb
loope
or
xchg
bound
jae
out
push
inc
aaa
jno
rclb
jle
outsb
jno
dec
or
cli
mov
lods
pop
repnz
mov
paddd
in
or
jae
jg
push
push
sub
filds
into
xchg
movsl
popa
jl
mov
shl
arpl
cmpb
pop
push
test
and
push
pop
lock
ds
lcall
and
into
and
mov
adc
ret
jge
inc
popa
loope
jne
fcomps
fdivl
fiaddl
std
push
popa
adc
push
sbbl
rorb
push
dec
aas
xchg
aam
cmpsl
mov
test
popa
sbbl
adc
cmp
adc
push
ja
adc
cld
cmp
and
inc
and
cmpsb
xor
xchg
leave
movsb
xchg
cmpsl
push
rol
adc
and
add
fcomps
adc
test
mov
test
adc
enter
or
rcrl
add
mov
call
mov
sarl
mov
add
in
xorl
xchg
lods
pop
or
dec
push
inc
lock
jge
push
test
jns
nop
xor
add
enter
push
jno
sti
push
and
push
lret
jno
sub
lods
dec
cmp
mov
xchg
js
lods
xchg
adc
mov
dec
jno
jge
push
aaa
lcall
ror
icebp
adc
jae
mov
inc
popw
test
je
or
or
jno
cltd
or
int3
pusha
push
stos
pushl
sub
mov
add
dec
lcall
out
push
cmc
in
lahf
aaa
add
push
shll
cli
mov
popf
mov
xorb
xchg
mov
jno
push
push
xor
sbb
mov
fidivrs
mov
hlt
xchg
jno
pop
xor
jbe
sbb
lods
add
xchg
jno
jge,pn
sti
and
out
mov
data16
sub
cmp
inc
lea
or
mov
jno
cmpsb
adc
cmp
pop
sub
inc
adc
cli
xor
adc
loop
jmp
or
fimuls
sbb
int
scas
mov
aad
xor
out
adc
out
sub
xchg
jno
jne
push
leave
add
cmpsl
ror
mov
dec
cmp
jge
stc
sbb
lret
testb
push
mov
jbe
xchg
mov
ror
je
lahf
xchg
fisttpl
inc
icebp
cmp
dec
ss
xor
sti
out
mov
cmc
dec
popf
jb
lcall
sub
fnstenv
adc
adc
jno
clc
adc
jle
ds
xorb
jno
fsubs
pop
pop
mov
xor
cmp
jne
mov
sbb
xor
xor
sub
sbb
inc
jmp
dec
or
and
pop
fwait
pop
sub
jae
lret
jb
push
jno
adc
lods
sbb
sbb
mov
or
jno
jg
mov
push
cmpl
push
add
imul
dec
mov
fucomi
xlat
out
jno
sub
into
stc
test
xor
popa
pop
ja
or
out
in
int
sub
imul
into
cld
xor
jno
cmp
ficoml
pop
jno
mov
add
jmp
mov
mov
push
imul
mov
hlt
xchg
test
mov
cltd
jno
jne
std
fdivrp
shl
jno
repz
mov
xor
mov
and
aad
loopne
xchg
and
sbb
sbb
push
shlb
lea
mov
mov
popa
jno
mov
icebp
lret
or
inc
add
rcll
jno
xor
cli
jno
ret
inc
and
pop
fmull
enter
lret
adc
cs
or
out
pop
push
jle
test
cmp
mov
adc
in
jno
enter
shlb
test
mov
loope
or
mov
inc
repnz
roll
lds
shll
test
jno
nop
inc
mov
adc
gs
xlat
vmulsd
aas
cmpsb
popf
mov
pop
jno
adc
and
test
je
loope
and
add
inc
jle
lock
lret
and
cmp
pop
jae
aam
fdivl
fildll
fldln2
int3
jno
aas
mov
adc
add
jecxz
je
sbb
adcl
out
aad
cmc
add
mov
addr16
in
jno
jg
pusha
cmpsl
inc
xor
call
adc
xchg
jno
shll
movsl
mov
test
jno
in
out
sbb
jno
adc
adc
jno
outsl
movsb
cmp
xor
mov
rorb
fs
out
aas
xchg
std
in
pop
lea
into
ja
stc
js
push
jnp
lea
xor
in
ret
mov
or
jno
mov
lock
cmp
mov
jge
mov
xchg
sub
and
xchg
hlt
icebp
cmp
popa
jno
push
and
imull
mov
cwtl
jno
sub
pop
sub
dec
jno
cmp
or
arpl
or
xchg
lcall
mov
loop
xor
outsb
cmp
lea
adc
mov
sub
or
pop
out
inc
jns
jb
mov
mov
and
mov
pop
jl
fiadds
mov
cmpsl
pop
aam
inc
movsb
jno
jl
xadd
incl
cwtl
jno
fwait
adc
call
shr
aas
pop
in
cmp
pop
jno
adc
mov
daa
repz
push
jno
cli
xchg
in
adc
aaa
icebp
jns
jg
add
mov
test
sarl
cmp
jno
sub
jne
mov
sbb
rclb
cltd
data16
leave
and
and
test
jno
jmp
mov
jno
loopne
fistps
outsb
jno
adc
fisubrs
fldl
outsb
jno
adc
xor
cmp
jae
cmp
out
cwtl
xchg
jne
mov
fadds
mov
call
std
push
jbe
inc
jne
inc
das
mov
rcr
bnd
jno
sbb
in
fidivrl
xchg
mov
daa
divb
xchg
lea
lea
decl
mov
into
aaa
sti
jecxz
jo
shrl
jno
mov
bound
jb
push
shrb
jno
stos
adc
shlb
in
loope
arpl
mov
xlat
popf
shl
movsb
jno
divb
inc
xchg
jno
out
or
mov
movsb
mov
sub
imul
outsb
xchg
push
pop
push
jno
jge
movsb
call
test
dec
icebp
add
jae
mov
push
push
push
pop
jno
mov
in
data16
cwtl
lea
hlt
or
loopne
jno
iret
gs
add
cli
xchg
jno
lret
popf
pop
lcall
sub
scas
xor
or
jno
ret
mov
lahf
cmpsb
in
cmpsl
jno
insl
mov
icebp
mov
loopne
mov
jno
in
xor
int
in
xchg
and
ljmp
andl
push
pop
sbb
loop
enter
adc
rorb
jl
push
pop
stos
jle
addr16
xchg
mov
or
push
push
out
mov
loope
add
jb
jecxz
sahf
lcall
jmp
mov
test
cmpsb
scas
jnp
dec
jno
push
or
ss
nop
jge
cmp
sbbb
cwtl
jmp
icebp
rcr
jne
mov
adc
test
xchg
mov
xor
mov
push
add
add
sub
pop
outsl
icebp
mov
scas
jno
cli
lahf
cmp
xor
iret
jb
mov
jg
xor
adc
cmpsb
je
push
jno
pop
cs
pop
jno
call
shll
adc
repz
mov
add
jno
dec
popf
xchg
mov
sub
jno
test
aam
jno
es
insb
jno
xchg
enter
loope
or
sbb
cs
jno
lret
ja
mov
sbb
popa
bound
ds
push
lds
jno
les
mov
xor
jno
iret
push
jae
cmpl
push
movsl
pop
insl
xchg
mov
push
ds
push
pop
jg
sub
add
fwait
xor
insb
cmpsl
and
loope
repz
movsl
push
lcall
icebp
push
cld
es
push
sub
xor
pop
enter
sbb
stc
jb
shll
jno
cli
rcrb
xor
xchg
dec
jae
cmp
mov
add
mov
jmp
jne
adc
mov
imul
push
addr16
mov
dec
fdivrp
jns
je
mov
mov
pop
and
or
add
in
push
out
jle
insb
dec
testl
push
xor
cmp
js
ret
fidivrl
mov
xor
scas
imul
push
leave
lea
xor
daa
sbb
cmp
xor
and
add
fs
adc
mov
pop
mov
dec
or
sarl
loopne
mov
nop
cwtl
adc
je
popf
cwtl
mov
testb
icebp
pop
jne
shlb
and
popf
js
divb
cli
shrl
and
mov
int
out
and
test
sti
leave
pop
insb
jo
dec
push
fs
cld
mov
aaa
cmp
gs
test
and
adcb
sbb
out
adc
push
mov
fst
xor
push
push
inc
xor
dec
jp
mov
xchg
cmp
lahf
lcall
sysenter
xchg
fs
mov
or
and
sbb
cmp
jne
rorl
stos
repnz
fwait
xchg
out
xchg
adc
pop
dec
or
pop
xchg
lds
jecxz
scas
ret
lcall
rclb
or
addr16
sarl
das
sbb
fistps
pop
cmp
mov
ror
stc
insb
mov
andb
pusha
jno
jecxz
out
lahf
jne
or
xchg
and
js
adc
imul
stos
jecxz
repnz
sbb
jecxz
sub
loope
jg
jmp
push
xchg
mov
rorb
cs
sbb
dec
loopne
out
xchg
icebp
ss
push
rorb
jnp
cmpl
stos
jne
pop
pop
add
test
inc
shll
dec
cmp
jae
adc
sub
mov
lods
je
jecxz
xchg
js
pop
push
mov
cmp
xchg
mov
inc
xor
enter
ds
ja
adc
add
xchg
lea
enter
xchg
test
mov
push
or
sbb
call
test
dec
and
jno
leave
cld
sub
sbb
roll
ja
jno
mov
push
sub
jno
adc
or
jne
loop
and
shlb
aad
test
push
iret
sbb
xchg
cmpsl
mov
aas
mov
es
les
hlt
jnp
test
ds
sub
setnp
inc
jmp
xor
inc
lahf
adc
cmp
rolb
dec
xor
push
mov
mov
jbe
mov
out
or
sub
repnz
ss
sub
and
add
xor
cmp
inc
xchg
shll
cmp
cmp
nop
ljmp
stos
int3
dec
out
bndstx
mov
jo
mov
adc
imul
mov
push
push
adc
scas
add
stos
sbbl
sub
sti
lods
insb
outsb
and
jp
into
fwait
mov
push
inc
xchg
rcr
ret
mov
push
stos
sar
shrl
pop
mov
pop
xor
sbb
xor
loop
sti
push
cwtl
xchg
repnz
xor
sarl
adc
aad
ja
adc
leave
xchg
jmp
cmp
add
ficoms
xchg
add
rcrb
jae
xor
insl
push
insb
nop
fadd
cmp
xchg
jl
outsb
je
fdiv
jmp
mov
sbb
sub
notb
in
popf
cmp
mov
push
cwtl
repz
jo
add
aam
dec
lahf
jno
mov
loope
loopne
aas
mov
andl
and
jno
sbb
dec
cmp
xchg
int
adc
hlt
insb
ror
xlat
test
inc
ds
push
jne
repnz
adc
test
int
mov
insl
xor
aad
movzwl
rcl
jno
mov
daa
dec
js
xor
adc
mov
jg
or
mov
shrl
mov
dec
pop
cld
stos
push
aad
jp
jecxz
pop
or
stos
sub
cmp
xchg
sbb
xor
mov
adc
dec
and
ret
jae
insl
pop
and
gs
in
andl
sbbl
repnz
inc
fistpll
mov
mov
sub
push
adc
out
sti
adc
sub
jecxz
shr
adc
mov
jno
adc
jl
repnz
lods
jp
fucomi
data16
xchg
sub
lds
movsb
inc
shll
pop
call
addb
mov
imulb
dec
jb
adc
insl
pop
lock
jno
lods
ret
js
rcrb
or
xor
cmpsb
leave
leave
sub
xchg
and
icebp
std
out
rcll
je
mov
cmpsl
addl
fdiv
test
sbb
mov
call
shlb
cmpsl
js
xorl
mov
xchg
mul
push
jno
in
pop
pop
sub
or
mov
outsb
aaa
stc
sahf
repnz
add
testb
xchg
test
jno
mov
mov
fmull
lahf
jb
scas
test
jno
mov
lret
mov
shrl
inc
std
inc
scas
arpl
sbb
push
push
mov
dec
pop
in
testl
loopne
into
jmp
pop
inc
xor
jno
jge
jbe
fldenv
jno
lcall
jno
cmpsl
outsb
mov
std
aad
pop
push
divb
jb
push
lock
pop
push
subb
push
fists
test
incl
sbb
repnz
test
push
hlt
repnz
adc
movsb
hlt
push
stos
leave
sbb
and
or
cmp
mov
ret
addl
and
lahf
or
fdivrs
cmpsb
or
test
sub
cmp
leave
fnsave
out
dec
cmc
loope
cmpsl
lret
pop
arpl
mov
push
aas
push
je
or
outsl
xlat
jne
mov
mov
adc
jno
dec
push
mov
das
sub
cmp
xlat
bound
repz
add
inc
mov
mov
repnz
dec
andl
adc
fst
xlat
pop
sub
mov
jp
push
xchg
loopne
test
xchg
inc
call
in
movsb
push
mov
popf
mov
hlt
mov
lds
rol
jbe
fildl
and
cmc
cli
shr
and
jo
sbb
sub
gs
xorb
repnz
sbb
lret
mov
push
xchg
daa
jl
inc
or
mov
repz
cld
mov
cmp
nop
pop
rclb
jo
sbb
jl
js
jge
sbb
jae
pushf
cmp
out
jns
xchg
mov
pusha
adc
jno
mov
dec
jae
mov
leave
push
cmpsl
popa
inc
mov
lahf
xchg
scas
iret
int3
pop
lds
rcl
push
mov
cmp
mov
jno
out
imul
int3
lahf
fld
jg
fdivs
popf
pusha
cmp
push
mov
ret
adc
sbb
xlat
bnd
rorb
push
push
push
lods
hlt
jae
adc
or
dec
mov
lods
imul
cs
ret
dec
and
sbb
lahf
xor
dec
lcall
add
and
test
pop
mov
cmp
sahf
roll
popf
repnz
xor
mov
or
add
jno
lods
ja
dec
repnz
roll
scas
pop
cwtl
popa
sbb
aaa
scas
and
les
mov
repnz
jecxz
sbb
cmpb
push
and
stos
and
push
inc
icebp
ja
adc
leave
add
cld
cmp
xchg
aas
xchg
sbb
mov
inc
lcall
adc
pushl
sbb
loopne
pushf
cwtl
push
jno
mov
enter
subl
jbe
fwait
ljmpw
or
jno
pop
push
pop
pushl
sarb
lea
daa
and
sbb
test
ja
mov
cmpsl
test
cmp
mov
jmp
mov
insb
movsb
movsl
push
pusha
inc
outsb
lods
jmp
lcall
jno
dec
std
mov
mov
shrl
cmpsl
sahf
loope
in
mov
jns
out
jno
or
sbb
in
cmc
mov
pusha
inc
jb
cld
push
add
jno
cmpsb
jo
xor
mov
fiadds
leave
mov
jg
xchg
mov
mov
in
sbb
push
jg
sbb
js
dec
loop
xor
fdivrl
jno
push
xchg
pop
out
inc
jno
and
xlat
mov
lahf
jae
sti
rcrl
xchg
jno
int3
xchg
fs
mov
dec
enter
xor
in
and
lods
cmp
dec
mov
mov
enter
ds
imul
mov
sub
jne
mov
fcomp
idivl
xor
dec
jno
push
clc
add
jg
arpl
in
cwtl
lret
orb
mov
imul
jne
jne
add
and
das
je
pop
enter
in
jno
cmp
hlt
es
jns
outsl
call
testb
pusha
hlt
aad
add
ficoml
mov
jno
mov
jl
jno
js
inc
int3
lock
xchg
loopne
daa
jle
xchg
ja
in
cmp
fs
dec
test
or
aas
bound
lahf
adc
push
insl
stos
push
pop
fs
jmp
jne
dec
xorl
add
mov
pusha
bnd
xor
jno
and
push
mov
outsb
and
jno
popf
add
jno
push
lock
addr16
xchg
cld
jns
pop
ret
xor
popa
jge
sub
push
test
pushf
push
jbe
pop
call
cs
jno
or
imul
cmp
pop
rcl
xor
push
das
jge
fisttps
or
es
shlb
loop
cmp
sub
out
jmp
movsl
arpl
imul
sub
jns
xor
jne
int
repnz
lods
arpl
js
roll
inc
and
test
jo
in
imul
shl
or
addr16
jo
pop
iret
popa
jne
cmp
or
mov
call
add
loope
dec
bound
mov
in
pop
or
int
jb
dec
add
int
out
jno
dec
adc
sbb
lcall
or
lret
xlat
pop
lods
mov
inc
ficoms
ljmp
fs
andl
movsb
inc
xchg
mov
mov
js
mov
out
push
out
and
mov
add
inc
lods
sub
push
jecxz
test
push
jp
dec
popf
push
fimull
push
xchg
mov
jge
sarb
inc
xchg
icebp
sbb
jns
inc
std
divb
fsubrl
mov
dec
mov
stos
mov
popf
cmp
xor
jno
je
call
adc
movsb
int3
and
enter
mov
mov
in
lcall
add
fisubl
push
stos
mov
mulb
push
decl
push
ficomps
or
fcoml
dec
leave
shl
fdivrl
xor
dec
fsubl
cmp
jb
xchg
xor
push
scas
jno
add
arpl
jno
mov
sub
loope
sbb
scas
imul
jno
insl
hlt
push
xor
cmpsl
mov
int3
cli
ds
sub
idivb
dec
push
jno
lahf
fwait
xchg
cmpsl
pushl
pop
loop
shrb
clc
xor
in
fwait
pop
outsl
test
and
push
sbb
mov
movsl
sub
cmc
aaa
add
jno
mov
cmp
push
cld
sbbl
xchg
cs
ja
outsb
cwtl
cmp
jno
imul
imulb
ret
shl
pusha
test
arpl
out
mov
xlat
pop
lea
inc
lds
ret
movsl
test
xor
int
sub
je
and
or
or
pop
jno
test
xchg
fstps
mov
jp
ret
jne
jle
push
jl
xchg
jbe
sbb
jno
addr16
outsl
push
cmp
adc
sbb
jae
lret
bound
lahf
ret
jno
cmp
lods
fisubl
cmp
jno
push
pop
xor
push
iret
pop
mul
outsb
shrl
ja
sub
xor
push
mov
jne
mov
aaa
iret
jno
add
std
shrb
jno
loope
mov
arpl
in
insl
xor
out
xlat
pop
out
pop
inc
mov
movsb
loop
jno
into
push
xchg
ljmp
pop
das
daa
and
or
jno
lcall
jno
inc
testl
jb
and
xchg
mov
loope
xchg
jbe
lods
call
mov
jno
mov
scas
pusha
xor
push
add
jbe
clc
jno
jnp
aaa
icebp
mov
rclb
hlt
pop
ret
sbb
inc
stos
nop
scas
jne
rclb
jmp
mov
xchg
dec
gs
mov
cmpsb
sbb
mov
sbb
mov
pop
loope
adc
mov
pop
inc
test
jecxz
pop
push
jae
xorl
adc
xchg
out
ret
sub
idivb
xchg
out
xor
lock
sbb
rcll
xor
lahf
jb
mov
ss
sarb
add
out
ds
insb
xchg
jno
orl
in
inc
adc
test
idivb
dec
movsb
xchg
aaa
addr16
scas
hlt
adc
pushf
xor
aaa
dec
mov
push
inc
inc
loopne
ljmp
sbb
mov
inc
ffree
adc
mov
or
jns
test
cli
sbbl
jmp
adc
and
xchg
ret
mov
push
pop
mov
xchg
push
push
cmp
pushf
jg
rcll
sub
addb
xor
adc
insl
shll
ljmp
repz
mov
scas
dec
jae
mov
jnp
in
add
sbb
dec
cld
in
into
sahf
jno
pop
mov
jge
or
lret
adc
aaa
insb
jb
cmp
out
call
sub
lock
int
mov
xlat
je
lods
lea
movsb
rorb
jg
mov
cld
xor
scas
xchg
mov
pop
jae
or
popa
vmptrld
popa
rorb
add
repz
dec
in
xor
int
sti
jno
insl
dec
mov
pop
shl
xor
cli
push
add
lret
jno
daa
aaa
loopne
repz
cmp
jno
out
insb
flds
dec
add
test
data16
dec
rcrb
or
xchg
xchg
dec
aam
jbe
imul
adcb
add
add
jge
xchg
outsb
mov
repz
out
sub
jno
mov
std
dec
daa
loope
jne
dec
and
cmp
insb
mov
xchg
jno
push
inc
jns
loop
leave
jne
cmc
cmp
xor
rclb
lret
or
jae
push
cltd
iret
mov
push
dec
and
lret
scas
and
adc
or
cld
mov
shrl
addl
cmp
js
ja
jns
jge
sti
pushf
fldt
mov
das
sub
jle
inc
cli
or
test
xorb
ret
loop
dec
ljmp
or
xor
xorl
repz
pop
cld
gs
bound
pop
cwtl
mov
sub
lret
xchg
jge
mov
xor
scas
pop
jns
stos
imull
mov
lock
sub
jb
pop
ss
arpl
jno
inc
out
sbb
loopne
jne
push
jmp
cltd
sbb
pop
sub
jno
adc
jno
mov
xor
mov
mov
sarl
jno
and
fsubs
stos
or
test
sub
cwtl
dec
mov
and
xchg
pushf
mov
jmp
insb
ja
inc
pop
mov
mov
dec
cs
push
push
mov
enter
push
mov
pop
pop
jno
sub
std
daa
sar
sub
push
jnp
add
pop
jno
outsb
xchg
inc
sbb
jo
ja
mov
xlat
mov
scas
jae
subl
cmpl
dec
fistpll
hlt
jnp
jno
jecxz
jbe
dec
lcall
ds
pushfw
insb
daa
mov
cmp
insl
bnd
jg
in
jmp
cwtl
sub
jno
push
loop
aas
push
pop
jno
call
adc
jecxz
pusha
add
push
mov
jb
mov
mov
negl
or
leave
xor
mov
test
repz
jno
adc
and
es
pop
add
scas
mov
ret
jno
mov
cs
jno
sub
inc
int3
jle
pop
jno
xlat
movsl
into
sahf
xor
jne
and
sarb
aas
dec
jno
fcmovbe
adc
loop
lods
sbb
and
pop
pop
lea
ficoms
mov
jbe
cmp
pop
lods
jnp
xor
sbb
jno
mov
mov
add
jno
adc
test
inc
scas
es
push
jno
aam
dec
adc
push
lods
jno
int
mov
mov
lret
enterw
jne
dec
hlt
jbe,pt
xchg
out
jno
movsl
out
scas
inc
repz
popf
ret
push
xchg
push
push
je
mov
movsb
xor
sub
aad
ret
xchg
xchg
addr16
mov
idiv
cmp
dec
xchg
das
clc
cli
and
cmp
or
sbb
sub
xor
incl
mov
out
ja
inc
test
xor
jno
ret
xchg
adc
repz
fadds
repnz
or
imull
xor
dec
inc
jno
push
push
dec
cmp
jo
jno
repz
leave
cmc
outsb
andl
or
push
push
lea
mov
into
pop
movsb
jno
and
jp,pn
hlt
lods
mov
in
ret
dec
adc
jle
add
lock
xchg
xor
and
repnz
jne
stc
popa
mov
pusha
adc
and
inc
add
jne
fsubrp
xchg
dec
add
push
inc
xchg
mov
cmp
dec
fdiv
lret
daa
or
inc
test
loope
hlt
cmp
mov
test
shr
je
sbb
push
jne
int
iret
test
adc
add
dec
fidivrl
popf
ds
das
jno
lret
cmp
sbb
jae
loope
xchg
jae
dec
cli
jo
out
out
cmp
and
arpl
les
sbb
std
mov
iret
and
mov
dec
repz
in
ljmp
xchg
push
hlt
roll
push
repz
xor
leave
add
pop
dec
push
pop
in
adc
cwtl
sbb
mov
hlt
adc
repz
repnz
and
stc
int3
mov
lret
push
stos
jg
xor
rcrl
push
lock
out
movsb
push
mov
adc
dec
push
jl
jp
jecxz
in
or
movsl
popf
call
ja
mov
xchg
sub
test
lcall
fsubs
idivl
lahf
jno
notl
cmp
aam
outsb
pushf
test
sbb
mov
rcll
lea
inc
xchg
and
xchg
mov
jno
fs
cmp
popa
add
mov
fs
add
mov
cmpsl
fmulp
addr16
mov
imul
pop
iret
idivb
sbb
adc
push
pushf
dec
pop
xchg
xor
insb
popf
push
in
mov
cmp
incl
pop
or
aad
aas
and
fmuls
cmp
xchg
sbb
leave
cwtl
cmp
xor
stos
ja
push
xor
cmpsl
sub
mov
jle
inc
adc
inc
dec
mov
cmp
cmpsl
jns
xchg
jmp
shrl
add
into
out
jb
lahf
cmp
iret
sub
xor
jl
pop
adc
adc
cmpsb
enter
stos
mov
in
sbb
push
sbb
std
mov
xchg
push
push
call
in
push
pop
movsb
pop
lahf
inc
cmp
imul
push
mov
repz
inc
cmp
adc
sbb
cmp
ljmp
mov
insl
in
jbe
movsb
dec
aas
sbb
mov
mov
inc
mov
cmp
outsl
popa
mov
inc
push
icebp
mov
add
xchg
or
add
popf
mov
sub
sub
int3
adc
shll
insb
adc
iret
xor
dec
repz
stos
jno
push
cltd
jecxz
mov
mov
fsubrl
xor
cmp
jno
scas
inc
cmp
xlat
xchg
icebp
lods
add
xchg
sub
lods
stos
jno
stos
mov
mov
cli
sarb
adc
bound
sbb
ja
hlt
aaa
adc
rclb
ds
xchg
das
xchg
dec
int
fistpl
je
loope
or
cli
jno
dec
in
movsl
fwait
popa
out
adc
jbe
pop
pop
xchg
jno
dec
loopne
inc
jno
das
lds
fnstsw
mov
test
xchg
mov
xor
add
adc
pop
jno
stos
int
cmp
das
sahf
jno
js
mov
jno
loope
mov
or
fstpl
dec
repnz
jno
or
fxch
pavgw
fldt
sbb
jp
ja
xchg
mov
xor
mov
out
or
lahf
sarb
loope
daa
out
lret
hlt
xchg
in
mov
jno
and
pop
lods
pop
shl
mov
aam
pop
jno
test
or
inc
scas
or
jne
jbe
xor
push
iret
pop
in
inc
jno
pop
xchg
jno
adc
mov
xchg
sub
jno
push
les
jno
addl
jne
dec
adc
mov
shr
test
in
push
jp
jmp
adc
lds
lods
mov
dec
xchg
jecxz
cmp
cmpsl
pusha
xor
repz
adc
xchg
rorb
xchg
gs
data16
sbb
pushf
shl
xlat
add
push
xchg
mov
xchg
imul
loop
adc
int
dec
pop
mov
cltd
sub
sbbl
push
out
arpl
push
pop
xchg
stos
jmp
mov
pop
and
push
test
xchg
jnp
xlat
inc
or
lods
pop
pushf
out
sub
sbb
ret
pop
sahf
sbb
repnz
test
gs
lahf
cmc
ret
int3
cmp
idivb
pop
pop
mov
push
test
jge
leave
lods
sbb
rcrb
adc
jp
cmpsl
push
xor
cs
scas
mov
pop
ficoms
xchg
push
mov
or
push
adc
rcll
shlb
and
js
adc
adc
or
cmp
pop
mov
sbb
push
data16
sbb
xchg
mov
popa
sub
mov
repnz
je
dec
add
add
in
sub
sti
or
jmp
xchg
outsb
xor
pop
jp
cmp
jp
nop
roll
add
add
sbb
out
bound
imul
add
out
repnz
add
rcrl
push
push
sub
sub
mov
push
ficoms
xor
out
gs
fmul
mov
xchg
lods
sbb
jp
xchg
fisubl
mov
repz
xlat
rclb
xchg
pop
mov
adc
sub
stos
sub
push
jmp
jp
int3
mov
rcr
and
out
in
cmp
lods
cwtl
inc
sbb
cmpsb
jnp
lods
mov
adc
aam
outsb
movsb
shl
and
xchg
js
lods
lcall
sbb
clc
jge
xchg
add
ds
or
pop
pop
xor
mov
insl
xchg
push
jns
std
mov
enter
push
popf
jne
jns
adcl
xor
ret
adc
mov
js
add
in
mov
sub
stos
cmpsl
pop
ja
pop
mov
lea
jno
in
popa
data16
outsl
jne
xchg
mov
cmpl
inc
loop
jae
leave
jb
push
cmc
jno
loope
in
sbb
loopne
lea
or
xor
inc
jno
or
dec
int3
lea
hlt
test
adc
xor
jne
mov
jns
xchg
and
cmp
push
pop
pop
push
scas
icebp
sahf
jno
fs
cmp
jo
bound
pop
xchg
xchg
cmp
jno
inc
inc
cwtl
in
mov
add
les
shr
or
ljmp
ret
jno
addr16
cmpsb
stos
in
xor
dec
pusha
cwtl
cli
push
jecxz
mov
jg
xchg
add
lods
jno
xor
fisubrs
sub
fcomps
dec
xchg
jno
or
cmp
add
pop
aaa
jne
cli
xor
stc
and
scas
add
rcll
inc
xorl
jg
test
mov
je
sahf
stos
scas
jne
cmpb
push
ret
int3
icebp
or
loop
jecxz
push
sar
ret
jno
fdivrl
outsb
rcrl
jno
jbe
mov
jno
jo
insl
xor
xchg
lcall
mov
inc
int3
xor
or
in
pop
jae
into
pop
cmpsb
lret
jmp
xchg
je
sub
adc
adc
jno
pop
js
and
aad
rcrl
jno
shr
and
pop
add
jno
mov
test
test
cmp
lock
jge
sub
fistps
inc
fimull
or
jmp
lahf
mov
pop
push
xchg
sahf
inc
pop
jno
mov
dec
jno
or
jo
or
mov
jg
xchg
rcrl
cmpsl
jno
aam
xlat
popa
orb
in
cmp
idivb
jno
insb
mov
or
dec
lods
cmpsb
xor
addr16
dec
rcrl
in
jno
shlb
sbb
call
mov
or
xor
xor
jge
dec
or
ja
xor
js
aam
mov
sub
in
sub
popl
or
mov
inc
repz
outsl
jno
mov
pop
push
dec
aad
jno
data16
pop
divl
andl
aad
shrl
cmp
inc
mov
mov
gs
call
dec
add
loop
popf
or
loopne
out
lods
testb
mov
outsb
mov
cld
jno
xor
divb
pop
mov
xchg
jae
test
fcmovbe
jmp
insl
adc
jno
push
push
inc
imul
pop
shrb
loope
xor
shl
jae
jb
dec
xor
pop
testl
and
jno
fucomip
call
jno
repnz
cmpsl
sahf
xor
enter
mov
or
xor
push
add
dec
es
in
ja
adc
jbe
mov
pop
and
bound
inc
jae
mov
jne
hlt
stos
xchg
dec
and
and
es
jno
jns
mov
lea
sbb
dec
pop
outsb
divl
push
sub
loope
push
pop
xchg
cld
popa
jno
mov
cli
fs
sub
insb
push
adc
movnti
pushf
dec
enter
repnz
insb
fsubrs
ja
dec
push
jne
sub
loop
xchg
dec
sbb
dec
and
mov
jmp
sub
int
insb
xchg
stc
inc
lret
xor
or
and
pop
add
popf
rolb
sub
or
loop,pn
lahf
cmpl
adc
jae
or
dec
mov
sarb
xchg
jge
nop
or
popa
or
cmpsb
sahf
and
push
iret
sub
add
sub
sub
inc
addr16
into
sub
hlt
psllq
xor
inc
adc
xor
pop
rcr
call
sub
test
lret
test
mov
ret
mov
loope
xchg
shrl
popa
adc
fnsave
sarl
add
inc
mov
add
into
adc
std
inc
xor
mov
add
sbb
mov
inc
in
mov
ja
adc
cmp
cltd
test
pop
fstps
inc
mov
fisttps
aam
je
xchg
notb
ror
add
inc
mov
adc
jmp
mov
repz
into
ss
xchg
pop
jg
ja
mov
repnz
xchg
jecxz
ja
adc
daa
insl
fcomps
ret
lret
inc
aas
pop
xchg
adcl
ret
xchg
sbb
sbb
out
jne
aas
mov
ret
sbb
cmp
cmc
dec
hlt
jg
pop
fisubl
and
or
repz
je
insb
jbe
jle
cmp
sub
data16
popf
xchg
out
repnz
lret
sbb
push
adc
mov
mov
icebp
icebp
pop
jae
push
ret
lock
jecxz
imul
into
loopne
stos
xor
sbb
js
ret
sbb
adc
jns
stos
lock
mov
loop
or
jns
push
dec
fistl
loopne
imul
lods
lahf
sub
mov
jp
mov
or
arpl
mov
in
jbe
jno
mov
test
gs
test
cmc
and
lea
cmpsl
add
icebp
or
and
inc
fidivl
xchg
int3
aam
jbe
flds
fbstp
cli
mov
dec
je
inc
mov
mov
test
ss
insb
jno
lea
sub
sbb
idivb
movnti
jbe
push
daa
push
jb
mov
jns
xchg
cmp
clc
add
mov
sti
out
cltd
or
xchg
mov
lods
dec
cmp
in
pop
stos
insb
je
mov
xor
sub
xchg
pop
jg
scas
sub
push
or
jne
jno
scas
test
jno
gs
sbb
cmp
out
mov
push
arpl
test
sub
int
lea
or
outsl
jb
xlat
rcl
xchg
push
je
test
cmp
rorb
adc
into
jno
push
cmp
insb
xor
cmpsb
pop
pop
sti
ss
jae
cmp
out
popa
scas
fs
movsl
jle
pop
pop
jno
insl
stos
mov
xchg
arpl
jno
test
lret
aas
pusha
fs
mov
or
xorl
jmp
in
or
ds
xchg
cmp
jb
jno
inc
pop
xchg
xchg
xor
gs
ja
xchg
jno
iret
adc
rcr
int3
jno
add
daa
add
sbb
jno
das
fsts
jne
gs
aaa
insl
xor
hlt
pop
and
lods
outsb
jecxz
xor
fs
sbb
xchg
fldl
dec
dec
push
mov
push
xchg
fbstp
inc
dec
and
fistl
cmp
jno
sti
cmc
icebp
xchg
pop
in
imul
jns
aam
push
out
rcrl
jmp
pop
cld
leave
dec
int3
inc
jno
fwait
xchg
out
lret
fnstenv
mov
test
push
pop
jae
cmp
adc
clc
aam
stc
xchg
dec
xor
mov
out
pop
incb
sbb
loopne
add
jne
loop
fisubrl
and
push
jle
sbb
jnp
push
xor
sbb
or
and
and
flds
cld
pop
jl
inc
jno
or
xchg
rcrb
or
test
mov
rol
test
cmp
leave
rcr
mov
fidivl
lods
sbb
mov
and
xor
data16
lcall
cmp
cmpsl
jmp
das
cwtl
inc
xor
push
jne
mov
cmpl
sub
je
or
outsl
lret
fiaddl
andb
cmp
sti
adc
pusha
adc
jno
add
outsb
xchg
insl
incb
jno
fwait
pop
lea
push
jno
pushf
xchg
fidivl
fidivs
jno
clc
jmp
push
or
pushf
jno
jge
or
push
out
jno
inc
xlat
jae
dec
insl
fbstp
pop
mov
mov
test
call
cmpsl
in
shll
clc
jmp
fwait
jno
pop
je
push
sti
lds
loop
out
pop
push
arpl
inc
dec
jne
insl
inc
ljmp
jo
xchg
mov
test
cwtl
lock
test
je
adc
movsb
push
rcr
inc
movsb
jne
mov
mov
xor
fwait
lahf
negb
jge
int
outsb
xchg
jae
nop
inc
sbb
iret
sub
sbb
out
adc
popa
xchg
sti
jb
fwait
inc
push
gs
sub
int
adc
jno
xor
shll
imul
mov
push
jmp
adc
mov
mov
in
sub
lods
mov
ljmp
daa
jno
dec
les
call
mov
jo
pop
jmp
push
leave
outsb
add
jp
sbb
test
fbld
cmp
fwait
dec
aaa
and
aam
sub
jns
push
loop
call
cli
lret
mov
sarl
shll
cltd
lods
hlt
jg
mov
or
jl
lcall
sti
xchg
jno
test
scas
mov
out
jge
lret
xchg
les
dec
jno
ja
xor
or
jae
add
imul
leave
jne
xchg
jno
cs
ret
es
fbld
mov
in
cmp
jp
out
jge
mov
xchg
adc
fwait
insb
int
fsub
xorb
test
jecxz
fisubs
fyl2x
shl
mov
das
and
xor
call
imul
and
int3
jno
addr16
pop
mov
sbb
test
inc
xor
and
xor
or
fstps
jecxz
pop
xor
xchg
data16
lahf
in
bound
int3
imul
jae
pushf
jno
push
xor
cmp
and
mov
jne
mov
adc
inc
jno
movsl
sub
mov
imul
jmp
mov
movsl
mov
or
imul
jno
mov
mov
addr16
xor
dec
cli
and
aad
ss
jno
ljmp
sbb
fwait
mov
jbe
ss
fisubl
xor
popf
das
cs
ret
inc
icebp
xchg
mov
stos
cmp
dec
das
fdivl
or
pop
mov
imul
adc
jns
shrl
mov
jb
push
movsl
lods
nop
jae
and
sahf
pop
or
jno
mov
add
jno
mov
xorl
or
adc
getsec
push
xchg
jno
and
mov
lods
in
lods
dec
iret
push
popf
jno
mov
sub
jge
loopne
xor
lret
mov
loop
mov
fsub
adc
cmp
jp
stos
pop
fdivrp
in
nop
xor
push
xor
cmp
jb
push
mov
cmp
cwtl
out
fisubl
je
xor
out
dec
popf
inc
pop
loope
jno
and
out
lods
inc
std
add
add
mov
jecxz
fidivl
nop
adc
and
inc
bound
mov
xor
out
push
pushf
cli
jno
les
push
arpl
cmp
xlat
js
daa
jno
cmp
xchg
and
div
sar
aam
shlb
movsb
nop
adc
xchg
jno
ss
jae
movsl
leave
mov
push
add
adc
mov
inc
jno
jecxz
aam
pop
aas
jno
les
push
jge
xchg
movsl
outsl
cmp
or
jnp
iret
shlb
mov
and
xchg
cmp
movl
jge
add
xchg
sbb
mov
incl
push
or
out
jno
in
pusha
andb
dec
bound
xor
add
cmp
lock
icebp
idiv
into
pop
xlat
lods
sti
jae
pop
mov
jo
out
mov
push
jg
mov
pop
xor
xchg
enter
cmp
mov
mov
imul
jg
jge
adc
mov
pop
mov
fbstp
cmp
and
stc
and
es
std
lcall
push
jno
adc
neg
in
mov
add
fistpl
jno
add
sub
pop
xlat
pop
je
or
adc
pop
inc
sbb
test
jne
in
shll
cmp
sarb
fsub
jnp
jno
push
cmp
and
xor
mulb
aam
pop
test
out
movaps
xor
shl
imul
aam
fidivl
sahf
jno
jl
mov
roll
xlat
aaa
and
mov
mov
pop
ret
ljmp
scas
xchg
cmp
push
jno
and
data16
bound
or
ds
es
loop
push
ror
cld
xor
hlt
adc
sbb
cwtl
cmpsb
fwait
inc
mov
cmpsl
sti
push
leave
divb
das
out
hlt
jge
scas
mov
or
aam
dec
clc
xor
mov
sbb
and
cwtl
jnp
aad
popf
insb
push
popf
dec
push
into
xor
test
jecxz
adc
test
mov
clc
mov
push
adc
imull
mov
or
jle
fimuls
push
lds
mov
je
mov
js
andl
push
adc
rcrl
jno
andb
jns
outsb
ljmp
ds
vmread
in
push
jae
sbb
in
imulb
xchg
xchg
insb
push
jp
push
mov
xchg
test
push
sbbl
mov
rorb
jl
lahf
jbe
push
js
ljmp
aam
pop
and
inc
rcrl
xchg
jno
fdivrl
cltd
je
lea
je
or
mov
sbb
cmp
mov
je
jl
in
sub
mov
cltd
pop
push
fsubl
cltd
jecxz
repnz
call
cmp
test
sbb
mov
sub
xor
subl
mov
enter
xchg
push
jecxz
fsubrp
sub
in
mov
movsb
dec
test
dec
ficoms
cmp
negb
push
push
or
cmc
jne
push
mov
push
insb
std
sub
ret
fwait
sub
sub
aaa
xorb
loopne
mov
and
sub
or
mov
bound
jmp
push
aas
pop
jbe
pop
adc
adc
daa
loope
sub
lock
mov
outsb
xor
int
adc
imul
mov
bound
repnz
push
or
mov
add
xchg
mov
cmp
sbb
ljmp
pop
movsb
mov
or
lea
xlat
lahf
stc
sbb
fs
mov
jge
push
cld
jne
ja
add
cmp
sbb
lcall
repz
pop
inc
push
adcl
js
push
push
out
and
mov
das
adc
je
lods
mov
push
stc
or
jp
into
and
mov
xor
int
sub
adc
in
sarl
subl
addb
mov
cmpsb
or
iret
cmc
repz
push
ds
sbbl
jge
popf
xchg
movsl
jno
mov
addb
sti
jno
add
or
push
out
das
sub
mov
ljmp
gs
shlb
jle
pop
mov
gs
addb
lea
cld
jno
pop
mov
dec
call
jno
repz
inc
stos
dec
mov
add
adc
dec
aam
jno
stc
lds
jbe
jae
or
xor
push
jno
out
out
ret
mov
add
inc
pushf
jne
push
divb
xor
jno
sub
hlt
in
sti
pop
jne
jle
jge
sub
jmp
mov
jns
xor
xchg
aam
lret
xchg
leave
fstps
pop
jae
xor
push
pop
xchg
push
jno
dec
aam
hlt
cmp
jle
or
add
repz
xchg
pop
outsb
jno
iret
mov
lods
mov
fdiv
mov
adc
jno
or
xor
and
lock
scas
call
jae
shlb
lea
push
jecxz
dec
imul
xor
jb
sysenter
and
cld
push
push
add
sbb
jno
in
clc
mov
ds
test
je
cmp
rcrl
jno
stc
shlb
test
aaa
jno
and
xchg
roll
push
mov
jae
mov
adc
stos
jno
loope
mov
loope
cmc
out
loop
xchg
lock
outsl
jno
call
mov
push
js
pop
test
xchg
cmp
push
jo
jno
repz
pushf
cwtl
fs
je
add
andl
je
fistps
jge
imul
pushf
cmp
js
adc
mov
jl
inc
out
dec
outsl
loopne
jno
mov
fs
jno
dec
out
xor
jl
imul
std
pop
sti
movb
or
pop
push
aam
jno
ficompl
mov
xorb
jmp
es
sti
cmc
je
jno
sub
lcall
and
xor
jecxz
jl
or
imul
lods
iret
xor
jno
cmc
or
xchg
inc
jg
jge
mov
clc
fadds
xchg
mov
lods
inc
outsb
lods
sbb
lds
cmp
mov
sub
js
add
xchg
andl
ljmp
clc
jno
leave
mov
cmpsl
jno
int
test
dec
cwtl
push
or
jno
add
push
dec
cmp
and
mulb
cwtl
repnz
inc
repz
outsb
jne
stos
rorl
jecxz
jno
mov
adc
inc
in
mov
into
xchg
jno
jne
cmp
inc
mov
push
mov
push
push
mov
stos
clc
cmpb
xor
push
mov
aas
inc
add
int
xchg
insb
test
das
fdivs
cmp
xchg
js
jecxz
jne
sub
arpl
mov
mov
in
add
inc
sub
xchg
cld
scas
mov
jmp
jl
into
loop
stc
sbb
xchg
call
ja
ficoms
sbb
or
mov
and
add
mov
pop
bound
in
and
mov
add
shrl
iret
rorl
inc
pop
js
mov
mov
repz
leave
addr16
mov
ja
xor
hlt
and
sbb
adc
adc
out
scas
data16
test
pop
lds
pop
push
adc
mov
or
sub
push
xor
in
sub
into
sbb
xor
repnz
xchg
sbb
add
xchg
sbb
je
repnz
mov
outsb
cmp
push
shl
sahf
adc
sahf
lods
sbb
lock
je
stos
dec
push
ja
adc
pop
jecxz
jge
scas
flds
into
iret
ds
aad
fstpl
clc
popf
sub
dec
adc
adc
jmp
dec
loope
xchg
mov
fwait
aam
stos
sbb
add
pop
cld
incb
out
pop
test
jno
adc
dec
and
insl
aas
pop
js
aad
or
gs
movsb
ss
jg
popa
into
nop
negb
adcb
push
cmp
into
movsb
mov
and
push
sbb
jae
shl
dec
push
dec
dec
pop
xchg
outsb
mov
xlat
sbb
jno
out
out
jecxz
sbb
inc
add
cwtl
push
mov
rcrb
xchg
cmpsb
xor
mov
sahf
mov
out
movl
pop
dec
jmp
pop
cs
test
add
dec
and
orb
or
push
clc
xchg
adc
add
rcrl
clc
mov
sbb
icebp
sub
or
lods
adc
icebp
jns
mov
pop
jne
sbb
push
pop
cwtl
xor
int3
popf
adc
adc
pop
mov
dec
in
icebp
pop
xchg
mov
stos
push
outsl
lea
pop
xchg
pusha
test
push
scas
cld
das
mov
cmp
adc
loopne
pop
jnp
push
sub
ds
adc
ret
sbbl
mov
lock
dec
cmpsl
mov
in
sub
push
cld
and
leave
in
adcl
lcall
mov
push
ja
fsubr
icebp
orl
loopne
jno
lods
daa
mov
adc
dec
add
or
rcl
je
dec
inc
ja
jae
sqrtps
or
sbb
mov
cmp
sbb
orb
xchg
sub
add
jl
shll
aad
sub
add
movsb
pusha
jb
jecxz
push
mov
mov
xchg
inc
jnp
icebp
mov
and
or
lods
cmc
xchg
mov
movsb
lahf
mov
xchg
pusha
mov
cmp
movsb
hlt
je
jl
mov
jb
repnz
loop
mov
xor
push
sbb
xor
xchg
adc
mov
fs
lahf
pusha
dec
enter
jne
mov
fsubs
mov
and
insb
stos
cmpsb
popf
sbb
add
cmpsl
addr16
lahf
pushf
xor
lret
movsl
mov
pushl
cmpsl
jg
xchg
insb
dec
lcall
lock
xchg
sbb
je
inc
jne
mov
cmp
inc
pop
dec
pusha
mov
stc
xchg
pop
pop
jne
pop
pop
adc
jecxz
push
mov
fdiv
mov
imul
add
mov
loope
pop
cs
nop
inc
call
popf
je
aam
pop
pop
scas
mov
push
sub
negl
clc
adc
rcl
and
cs
mov
or
aad
jecxz
jmp
in
into
or
repnz
xchg
insl
das
jmp
jecxz
sti
out
aaa
mov
shlb
mov
imulb
jle
arpl
pop
sub
fldcw
xchg
loope
xor
cld
test
cmpsb
hlt
js
sti
stos
jae
cld
jno
cmp
push
xchg
jne
nop
jno
inc
jbe
in
jae
jne
ds
andl
test
stos
out
jno
add
sbb
mov
shll
jne
inc
popa
imul
jnp
or
jge
das
and
pop
adc
fs
jno
daa
fsubl
stc
fstps
xor
popa
shlb
fisubl
push
mov
in
or
jae
pop
mov
jno
out
inc
mov
jne
add
mov
lods
adc
push
je
popa
lret
push
lock
push
loop,pn
fldcw
cmp
jno
imul
jno
outsb
clc
ja
ret
push
mov
loopne
aas
jmp
cmp
jno
or
push
fs
lahf
divb
xor
mov
or
adc
enter
cs
and
pop
pop
xor
in
adc
fidivs
or
sub
ret
dec
push
cwtl
std
mov
jp
inc
insl
stos
inc
push
mov
push
push
lods
jnp
add
mov
inc
test
adc
inc
movsl
mov
inc
xchg
lret
mov
xchg
int
jl
xchg
stos
sbb
xchg
mov
fidivrs
daa
jae
adc
mov
das
sahf
notb
cmp
test
jecxz
arpl
jle
out
dec
les
aaa
mov
cmp
push
pop
sti
cmp
push
fwait
mov
fdivrs
and
lods
out
cmpsl
lea
cltd
push
stc
sub
jne
inc
bnd
pusha
jne
call
in
push
dec
xchg
out
pop
and
loop
add
xor
and
roll
mov
cli
xchg
mov
sti
int3
cld
lcall
mov
xlat
pop
aas
scas
push
in
daa
jns
add
hlt
rol
adc
or
cmp
dec
pop
ds
and
fs
jecxz
sar
sar
addr16
subb
int3
adc
dec
sbb
xchg
outsl
scas
in
stc
int3
push
sbb
mov
lcall
add
inc
inc
jb
sub
inc
and
adc
sbb
lahf
lods
cli
jns
adc
fcompl
call
add
sbb
fs
mov
pop
ljmp
sbb
xchg
xor
or
mov
divb
lcall
lea
inc
sbb
stc
jbe
xor
mov
jno
pop
out
dec
xchg
push
ljmp
sbb
mov
fwait
add
shlb
mov
mov
jno
pop
mov
andb
add
cmp
pop
push
jno
pushf
dec
mov
push
int3
sbb
jno
sub
shll
jp
popa
push
or
xor
xor
sbb
and
sti
jns
lea
jae
and
int3
lods
cltd
jbe
fildll
shlb
jmp
cmp
adc
add
das
xor
lea
dec
push
imul
je
adc
inc
jl
jno
pop
lahf
jb
cmp
jge
mov
mov
int3
out
les
cmp
mov
dec
add
mov
cmp
dec
fisubs
fstl
jno
adc
roll
lds
in
push
ljmp
int
insl
xchg
jae
loop
mov
sbb
pushf
or
adc
push
out
jno
sub
adc
fnsave
mov
aaa
das
lods
jge
inc
iret
cmp
jmp
jle
mov
adc
and
sarb
mov
adc
sbb
cmp
cmpb
fisubl
push
add
hlt
mov
jno
mov
pop
lcall
lods
mov
in
xor
push
push
add
jno
inc
sbb
and
mov
jns
stos
xchg
push
push
push
repnz
or
repz
pushf
push
jno
mov
xor
push
push
pop
daa
aas
int
jb
loop
jno
std
enter
xchg
imul
out
daa
cmp
sbbl
adc
mov
in
dec
cld
out
jae
pop
aam
mov
jno
inc
fwait
adc
sbb
jno
jecxz
mov
fidivrl
clc
add
jno
xor
cltd
ja
xor
pusha
adc
pushf
jno
lods
mov
dec
sub
dec
jno
imul
icebp
jno
fcompl
and
sbb
inc
jle
xchg
call
aad
int
xchg
add
gs
pop
mov
popf
lea
mov
push
push
cltd
imul
imul
popf
xchg
dec
xchg
addb
cwtl
scas
shlb
jno
pop
push
adc
and
testl
sub
mov
leave
daa
xchg
push
ficomps
movsl
inc
movsb
fnstcw
push
sbb
jae
and
jns
subl
xchg
jb
and
out
jg
push
lods
xor
or
cli
and
jno
push
jns
mov
das
jnp
xchg
mov
xchg
jno
cmovg
push
jecxz
icebp
fstps
sbb
jno
sbb
es
jo
jecxz
or
popf
in
mov
dec
je
add
mov
lahf
xchg
mov
test
ret
cmp
xchg
xchg
add
sub
shrb
ss
shl
lods
int
je
into
leave
stc
es
or
mov
cmpsb
in
xor
aam
xchg
push
fnsave
or
dec
das
mov
out
xchg
push
int
adc
adc
mov
xor
push
jno
insl
rclb
arpl
jo
rcl
xchg
add
out
insb
inc
out
pop
jl
dec
enter
sbb
sub
xchg
lret
imul
cld
test
lcall
or
movsl
jecxz
repz
push
testb
xor
mov
push
stos
subb
dec
mov
enter
cmpsl
sub
push
movsl
and
mov
or
insb
arpl
inc
lcall
ret
jge
data16
push
xchg
jl
shlb
fdivl
jno
xor
xchg
and
je
fs
je
inc
pop
adc
cli
sub
xchg
jae
sub
adc
imul
cmc
iret
adc
lock
lea
xchg
stos
mov
rcr
jno
nop
jge
push
cmc
xchg
sub
cltd
xchg
leave
mov
jecxz
stc
mov
sbb
jb
jmp
push
cld
cld
mov
pop
push
dec
js
jns
pushf
adc
dec
sub
orl
cmpsb
movsl
jecxz
jge
jmp
adc
jae
jno
mov
xchg
sbb
xorl
popf
mov
cmp
mov
jg
sar
mov
imul
ret
mov
jno
mov
loope
roll
xor
insb
adc
jns
scas
add
push
movsb
jae
and
jge
loopne
aas
call
mov
or
jno
scas
xor
jno
dec
and
jno
lcall
test
hlt
aam
movsl
or
aad
dec
enter
fs
mov
xor
jno
sbb
lret
lea
mov
adc
outsb
and
jno
or
add
sbb
aad
ss
fstps
jle
mov
sub
aas
sahf
adc
js
or
aad
jmp
insb
or
push
jno
push
into
mov
in
xor
jae
cltd
fisubrl
push
jno
xor
sub
rorl
loope
add
add
scas
insb
or
out
jge
sbb
lret
mov
lods
and
cwtl
jno
aaa
adc
mov
push
rcrb
mov
xchg
sarb
jno
orl
xor
mov
loop
stos
jno
popf
mov
icebp
jne
sub
xacquire
ja
movsl
add
imul
xchg
out
pop
pop
sbbl
adc
testl
shr
insb
sub
arpl
cld
jno
cmpsb
mov
xor
call
and
out
jno
jl
sub
mov
jno
dec
xor
mov
adc
icebp
add
jno
jle
pusha
xchg
imul
or
jno
cltd
xor
sub
jno
out
cwtl
mov
fidivrs
xchg
jno
aad
insl
xor
in
pop
jno
cld
push
sbb
inc
jns
xor
popf
jbe
stos
adc
pushf
fldt
jno
jg
icebp
xor
out
jno
cmp
bound
imull
shlb
cmc
jns
ficoml
sub
sub
cltd
jmp
push
clc
jecxz
push
out
pop
daa
call
dec
lea
jae
push
or
jno
jg
add
and
jno
dec
push
mov
mov
mov
shr
dec
loop
xor
push
int3
push
jae
sbb
push
mov
ljmp
add
xor
lret
push
jno
cmpsb
cmc
jp
adc
repnz
es
xor
imul
ss
pop
daa
mov
jno
cmpsb
sahf
cltd
out
push
test
or
repnz
mov
add
or
js
jno
or
scas
out
push
stc
mov
mov
cmpsl
test
jge
jnp
push
xchg
int3
jno
cmp
add
pop
mov
or
xchg
sub
and
mov
adcb
insl
in
nop
xor
xor
mov
aam
ss
fbld
push
addr16
lods
adc
xchg
and
mov
xor
cli
imul
push
jno
cmpb
lds
fwait
mov
test
jno
je
mov
jns
scas
push
dec
sahf
push
enter
fs
lods
jns
xchg
je
or
iret
dec
inc
mov
mov
out
aas
dec
and
mov
adc
xchg
iret
enter
mov
sbb
adc
lea
insl
jb
mov
shl
and
add
sbb
xor
jnp
add
in
mov
pop
jno
out
dec
jne
add
bnd
xor
outsb
jno
mov
add
jns
cltd
jl
shll
push
ljmp
lea
xor
int
fdivs
gs
lods
inc
call
adcl
loope
sti
test
jns
pushf
cmp
dec
fwait
xor
mov
jno
xchg
popf
sar
aad
scas
lods
or
bound
popa
insl
jno
cli
push
adc
scas
call
jb
or
push
out
add
jno
mov
pop
xor
dec
push
jno
adc
adc
lods
push
insb
jne
dec
adc
scas
sub
and
imul
movsl
cs
fcomps
adc
jns
mov
add
push
pop
call
dec
add
add
es
test
jl
dec
cli
mov
loop
mov
test
aad
xor
das
jl
lock
in
lret
xor
push
mov
stos
cmc
and
jno
adc
jmp
and
jno
jb
int3
idivb
pop
sbb
addl
sarb
data16
hlt
sub
pop
inc
jno
flds
and
stos
sbb
repz
sub
int
cwtl
loope
push
pop
je
int3
sub
xor
in
lcall
jno
lret
push
stos
cmp
dec
or
pop
cmp
push
fidivs
cmpsb
inc
rolb
cmp
push
push
out
and
jae
inc
imul
or
or
mov
in
inc
adcb
aam
cmpsl
jno
pop
push
cs
mov
enter
jno
mov
les
push
cmp
mov
ret
cmpl
ss
loopne
push
fsubs
dec
mov
jae
jmp
popa
cmp
dec
jno
xchg
sub
imul
int3
cmp
mov
jno
mov
shrl
xchg
fcomi
dec
int3
jno
mov
sbb
cmp
mov
jno
jbe
arpl
popa
cmp
adc
lds
lahf
jge
es
jno
divb
dec
leave
add
mov
jmp
pop
jno
jle
sub
mov
xor
pop
cltd
insl
cmp
imul
lods
rorl
mov
push
lahf
les
fdivs
lods
fsubrl
js
ljmp
ss
jb
mov
push
xchg
jns
sub
sbb
test
mov
cs
lds
pop
and
aaa
das
je
hlt
and
iret
xchg
sub
out
ljmp
dec
or
stc
pop
ss
cltd
xchg
nop
mov
cmp
jle
sbb
jno
ss
jp
scas
mov
jmp
push
test
jno
aas
push
jge
gs
adc
mov
xor
lea
sbbl
jo
mov
addr16
jge
scas
mov
mov
sub
sarb
push
test
xchg
cmp
in
push
insb
push
jne
imul
repnz
push
lods
scas
mov
push
jae
dec
xchg
daa
nop
jne
mov
les
out
inc
add
jno
loope
sub
push
lods
mov
out
inc
sbb
aaa
lea
cltd
frstor
pop
or
mov
sbb
xchg
push
loope
jno
fcmovb
das
mov
pusha
xchg
jno
add
push
loop
xchg
in
int
jae
popf
fcomps
fsub
shlb
jb
mov
fsts
movsl
inc
jno
ljmp
jmp
inc
and
sub
cld
xor
int
int3
push
dec
cmpb
unpcklps
cld
nop
test
jno
test
cmp
mov
push
inc
pop
orl
std
jno
sti
jl
push
or
fcompl
shl
xchg
jb
jae
pop
mov
mov
bound
fisubrs
sbb
inc
cmp
jmp
sbb
lahf
jno
push
and
sbb
int3
aas
xor
cmp
mov
movsb
test
test
inc
mov
jno
mov
lock
stos
movsb
push
dec
in
int3
jb
push
push
xor
nop
jno
fists
shll
out
push
jno
jecxz
xlat
mov
je
popf
mov
jno
icebp
cmp
jge
out
aaa
sbb
jge
lods
loop
popf
add
andb
jno
mov
dec
pop
push
mov
jmp
cmp
pop
insb
push
jno
idivb
jno,pn
jb
iret
or
add
gs
push
pop
fnstcw
nop
push
aam
in
push
jno
subl
fwait
test
cmp
push
mov
lret
fsub
jno
js
jo
test
sbb
jno
pop
dec
sbb
arpl
mov
jmp
pop
jno
cwtl
adc
jno
xor
jns
mov
dec
addr16
shrl
xchg
jno
test
mov
pushf
mov
cli
jecxz
jno
and
call
jl
sarb
adc
and
movsb
cmp
into
pop
dec
test
xchg
sub
and
jbe
enter
scas
jno
fsubl
add
decb
dec
bound
mov
sbb
mov
stos
or
push
xchg
inc
xchg
js
jae
lret
or
jge
jne
cmp
add
dec
sub
xchg
adc
and
cmp
movsl
pop
jno
stos
push
mov
lea
insb
sub
jo
addr16
adc
dec
sbb
stos
inc
bswap
ss
repz
mov
push
mov
loopne
cli
faddl
ret
push
mov
dec
xchg
lods
push
repz
mov
xor
out
sub
and
push
add
pop
jle
xchg
imul
cmp
inc
fldt
jg
lods
scas
fsubl
push
mov
rcll
add
lea
dec
insl
fwait
repnz
imul
in
and
out
popa
sub
jp
jno
pusha
stos
enter
push
mov
mov
iret
mov
mov
push
out
lods
jae
addr16
hlt
mov
push
out
xor
mov
stos
jno
jns
ljmp
and
clc
xchg
rcl
nop
mov
daa
enter
int3
je
pop
and
dec
ja
and
loopne
inc
or
jno
out
lret
xorb
pop
and
movsl
cli
pusha
inc
jne
lods
jno
sbb
inc
adc
jge,pt
sub
repz
jo
sbb
and
jne
in
jns
nop
jae
add
xor
fstpt
xlat
and
inc
xchg
add
aam
or
jno
and
xchg
cmp
fwait
mov
jmp
insl
mov
push
xor
fs
dec
jno
ficoms
sahf
pop
sub
mov
jno
lret
movsb
sub
les
arpl
jne
jbe
movsb
scas
rclb
and
insb
test
cli
icebp
cld
pushf
xor
inc
sti
pop
sbb
jno
bound
jae
in
xor
or
xchg
gs
cmp
add
test
pop
in
jno
jle
push
lea
push
sbb
in
sahf
subb
leave
pop
mov
jno
dec
xor
add
int
push
inc
bnd
test
and
cmp
mov
test
je
push
push
mov
pop
or
mov
jb
ss
mov
insl
mov
out
fwait
std
cld
stos
jno
enter
xchg
ja
jno
pop
insl
push
push
test
fistpll
inc
mov
test
clc
mov
fidivl
and
repnz
repz
xchg
popa
mov
clc
test
jno
sbb
bound
sub
sbb
xlat
into
jno
or
testb
lds
jo
dec
pop
cs
int
xchg
daa
cmpb
fs
fwait
pop
pop
cmp
jno
pop
mov
loop
movsl
xor
dec
aam
xor
iret
jge
dec
sahf
loopne
call
in
rorl
jp
or
jno
js
and
xor
jns
sbb
push
mov
xlat
jo
mov
adcl
es
mov
adc
repz
xorb
arpl
and
fcomps
xor
inc
in
mov
mov
std
jno
push
mov
sub
orb
dec
rcrb
mov
add
inc
add
ljmp
xchg
sahf
xchg
adc
decb
dec
xor
stos
hlt
dec
jge
aam
or
cmp
jmp
pop
repz
test
jg
test
test
adc
setns
xor
pop
and
sub
sbb
dec
je
pop
push
dec
xor
jae
test
xchg
mov
mov
gs
xor
cmpsl
jno
jo
xchg
add
add
dec
and
jno
orl
fcmovnbe
fidivl
or
push
test
lcall
add
pop
cmp
cmp
movsl
lds
jno
push
pop
les
ds
or
mov
test
ret
imul
sbb
jno
pop
cmpsl
push
lahf
add
dec
fmull
jno
xchg
movnti
mov
jno
incl
cmpsl
and
dec
pop
pop
jno
adc
fiaddl
unpcklps
mov
stos
mov
in
sbb
shlb
adc
fcmove
or
jae
dec
pusha
and
int
dec
sbb
mov
jno
inc
xchg
push
inc
jno
fsubrp
adc
aas
jno
test
add
mov
mov
xchg
lret
cmp
jno
xchg
mov
rcrb
scas
jle
and
push
daa
pusha
push
out
xchg
adc
sahf
sbb
in
ret
aaa
sbb
mov
pushf
jle
adc
and
aas
or
leave
sbb
push
sub
and
into
adc
fnstcw
cs
mov
cwtl
adc
inc
mov
xor
pushf
rol
mov
clc
daa
stc
pop
or
out
repnz
mov
and
js
mov
lods
jl
int3
xor
sarl
xchg
leave
mov
bnd
enter
pop
loop
mov
jno
das
jp
sbb
icebp
adc
lock
push
jecxz
shlb
aad
hlt
jp
adc
xchg
pusha
mov
cmp
add
dec
pop
in
adcl
and
jo
sbb
sbb
and
pop
dec
repnz
mov
jnp
push
cmp
repnz
jecxz
movsb
popf
icebp
jmp
adc
mov
lret
das
push
pop
sahf
mov
pusha
sbb
cli
mov
mov
out
adc
lods
pop
adc
bound
rclb
ret
xchg
xchg
out
cmpsb
mov
cwtl
xor
insl
sti
fiaddl
cmp
jp
ret
push
fidivl
imul
jbe
sub
nop
ljmp
fwait
rolb
fst
aam
cmp
pop
xlat
mov
inc
into
out
jo
cld
jg
out
loop
test
mov
ret
in
and
pop
xchg
imul
leave
xor
xor
lods
sub
mov
jge
in
aad
adc
js
ja
cmpsl
shll
call
mov
pushf
push
lods
gs
jns
xorl
fldcw
les
jbe
dec
mov
les
mov
je
lea
jmp
dec
jae
xchg
jne
mov
js
sbbb
mov
cmp
mov
add
arpl
jne
fistpl
sub
lods
mov
jge
xor
adc
cltd
daa
mov
outsb
lret
sub
mov
pop
cli
sbb
push
xor
or
adc
pop
cs
jnp
adc
or
inc
jnp
lcall
leave
sub
out
xchg
lret
mov
xchg
sbb
lods
jo
enter
push
xchg
xchg
sub
inc
mov
mov
es
sub
push
sub
popf
loopne
inc
mov
mov
fidivs
mov
dec
movsb
in
mov
adc
cld
ffree
jecxz
inc
int
cmp
xchg
or
cltd
mov
clc
in
or
jmp
jne
or
xchg
xchg
aam
sbb
insl
mov
out
adc
dec
mov
mov
ret
pop
mov
ret
cmpsb
pop
sub
sub
jne
icebp
shrb
inc
ja
rorb
pop
and
rorl
dec
mov
cmc
jl
loop
and
mov
repz
popf
jb
jp
repz
cmp
inc
and
jno
adc
pushl
repnz
push
cmpsb
cmp
inc
or
inc
ret
xchg
jb
enter
inc
cmc
xchg
add
mov
pop
push
sub
loope
jp
lcall
testb
or
loopne
jno
sti
pop
rcr
arpl
in
inc
scas
je
repz
push
xchg
cmovo
xchg
inc
shll
push
fidivrl
imul
inc
mov
mov
jno
fistl
dec
jno
shlb
fstps
mov
leave
fistl
mov
mov
lea
mov
ja
and
jno
dec
jg
jno
pop
aas
and
jno
mov
inc
jno
ds
mov
xor
popa
xchg
xchg
push
movsl
mov
push
leave
bound
test
lock
jecxz
int3
popf
ss
pop
add
in
push
aam
jo
or
fs
popa
out
push
sbb
or
xchg
inc
push
pop
mov
in
inc
sbb
test
into
arpl
pop
add
in
insb
ret
jnp,pn
sbb
xchg
xchg
leave
arpl
xor
in
sbb
into
or
jae
pop
or
cwtl
dec
xchg
adc
pop
cmpl
mov
mov
adc
mov
sbb
dec
decl
inc
ss
jae
jae
sbb
jno
mov
add
jno
test
jle
in
pop
sub
xchg
lret
je
lahf
dec
jno
int
rcll
aam
or
lcall
inc
lds
jb
cmp
pop
fstpl
in
shll
subb
lret
push
jno
lcall
lods
push
inc
ret
ds
add
xchg
stos
jge
or
cltd
sar
hlt
xchg
cmp
sahf
in
push
xor
jb
or
jp
ret
jnp,pn
sbb
or
push
add
jb
sub
xchg
dec
jecxz
jl
xchg
xor
mov
adc
call
aaa
int3
xchg
outsl
in
into
push
jp
jno
mov
pop
pop
cmpl
incl
adc
outsl
mov
iret
fildl
jno
or
inc
sti
adc
dec
loope
lcall
cmc
int
ds
jmp
and
mov
xor
and
out
arpl
pop
ret
mov
movsb
mov
icebp
mov
sub
jno
bound
cltd
jge
sti
adc
cmp
je
test
cld
jo
jg
fsub
dec
mov
or
test
es
icebp
push
lods
mov
pop
repnz
inc
outsb
cmp
jbe
lret
pusha
out
stos
dec
stc
in
mov
pop
movsl
push
out
mov
aam
jns
xor
mov
sub
scas
adc
icebp
daa
js
mov
inc
loop
pop
push
sub
cld
rolb
cmp
ljmp
jno
add
and
popf
xchg
lods
inc
inc
icebp
pop
adc
jle
add
test
sbb
and
aam
adc
mov
mov
mov
pop
lods
push
lcall
mov
cmp
hlt
or
sub
cltd
mov
lea
les
jae
fldenv
mov
mulb
mov
repz
jno
testl
fldcw
and
test
jno
andb
push
push
outsb
jno
push
pusha
inc
fidivs
xor
mov
fnstenv
xchg
in
pop
dec
sbb
xchg
fsubrs
lods
pop
jnp
out
icebp
fldt
sbb
cmpsb
in
sub
ret
or
stos
jno
daa
out
in
test
jno
enter
fs
pop
jno
push
notb
mov
xchg
inc
loopne
scas
push
cld
push
hlt
insb
jne
rcrl
dec
adc
pop
clc
pop
xor
push
or
jae
inc
popa
daa
je
pop
add
jae
jecxz
fsubr
jnp
jno
call
pop
dec
add
xchg
mov
mov
inc
fwait
in
insl
out
xor
jno
sti
test
gs
je
mov
bound
test
repnz
push
add
jno
fsubrl
jno
mov
idivb
je
aaa
adc
or
push
jno
xchg
and
ss
dec
jno
mov
mov
es
ficoms
pop
cmpsb
jp
hlt
dec
mov
leave
xchg
fwait
and
or
bound
icebp
push
mov
jb
lret
mov
jle
adc
mov
pop
jne
movsl
ret
fildl
mov
call
and
adc
mov
popf
je
adcl
inc
mov
repnz
xor
push
in
mov
cmp
sub
mov
sbb
shl
xchg
xchg
adc
dec
sub
movsl
mov
jb
popf
insl
repz
cwtl
adc
sbb
inc
inc
sbb
jmp
frstor
inc
into
add
lods
dec
stos
enter
xchg
stc
adc
ds
insl
mov
mov
inc
and
inc
int
addr16
adc
mov
jl
adc
xchg
insb
repnz
jne
dec
int3
or
push
dec
int
aad
adc
in
pop
jno
movsb
dec
mov
add
test
inc
mov
push
popf
dec
push
xchg
jmp
shrl
clc
jno
fwait
push
cmp
into
jg
mov
dec
inc
push
fs
sbb
les
ret
ja
mov
inc
mov
iret
sti
call
bnd
popf
pusha
jb
rcl
jno
pop
or
int3
jl
repz
lret
scas
inc
je
pop
bound
jne
add
pop
inc
sub
inc
add
inc
cmc
nop
stos
jne
xor
sarb
sbb
xchg
push
shll
dec
jge
adc
stc
repz
mov
mov
fs
lret
into
cmp
mov
je
shl
jmp
jno
sbb
test
scas
xor
test
or
add
cmp
pop
xor
data16
xor
movsb
xor
cmp
or
cld
in
and
fidivs
popa
imul
push
je
jno
icebp
sbbl
jno
cmp
ja
push
xor
dec
cmp
iret
jno
movsl
js
mov
aas
jns
sarl
or
ret
jno
arpl
in
or
fidivrl
ret
in
pop
add
mov
or
rorb
xchg
sub
jno
movsl
xchg
data16
add
inc
inc
push
jno
in
adc
jno
cmp
push
pop
scas
jno
xor
pop
jno
pushf
jmp
scas
out
aad
andb
jne
daa
out
mov
mov
jg
sar
je
inc
push
jno
cmp
int
cmp
adc
xchg
add
jno
cmp
jne
int3
in
icebp
sbb
loopne
mov
jg
xchg
mov
add
push
movsb
arpl
sbb
push
sub
mov
jmp
xchg
push
in
xchg
dec
adc
inc
mov
in
dec
pop
mov
jb
cmp
and
scas
js
and
cmp
ja
xchg
sar
mov
outsb
pop
push
adc
mov
mov
addr16
inc
push
fsubs
dec
loopne
jmp
jo
outsb
sub
jae
iret
cmpsl
jb
pop
adc
repnz
out
bnd
aad
rep
arpl
jno
adc
sub
ret
dec
xor
jne
push
and
push
xchg
sbb
cli
cmpsb
in
or
scas
push
repnz
ds
jno
jne
adc
lds
sub
lods
mov
mov
jno
sbb
cmc
std
popa
lea
mov
and
and
pop
mov
inc
pop
push
cwtl
xor
ja
and
addr16
dec
mov
arpl
lcall
enter
ss
cmp
xchg
stos
aas
lea
push
cmpsl
ds
in
jae
out
popf
loop
out
je
arpl
cmpsb
imulb
jno
or
jmp
mov
pop
and
jno
cmp
test
sub
push
iret
fdiv
pop
and
cmpl
sub
ja
fldcw
in
adc
sbb
outsb
rclb
cli
mov
lds
sbb
je
and
je
fildll
js
and
in
es
daa
je
mov
clc
outsl
jmp
adc
jbe
pop
jno
lret
xlat
mov
cmc
enter
pop
mov
test
or
add
jno
shll
cwtl
jp
bnd
and
pop
xor
cltd
jno
sbb
dec
out
add
and
data16
insb
jb
sahf
or
jp
mov
inc
cltd
jno
incl
sbb
aam
pop
sub
jno
sub
push
push
or
bound
xor
mov
jno
cmpsb
xchg
fmul
pop
adc
jno
arpl
in
sub
test
into
xor
lahf
rclb
insb
jne
ljmp
add
jns
lret
lret
stc
hlt
push
ljmp
and
nop
push
jecxz
insb
fs
insb
dec
jno
sub
pcmpeqb
push
or
jno
push
in
dec
inc
mov
add
sbb
xchg
rclb
jno
jmp
sbb
movsb
pop
jl
js
adc
ja
pop
cmp
push
sbb
les
jno
fcomip
orl
add
mov
into
jbe
addb
jno
je
mov
jno
enter
lahf
addr16
or
adc
ficoms
ja
mov
negb
out
js
jno
in
inc
je
cli
sbb
mov
lods
xor
jg
xchg
jno
icebp
lcall
pop
sbb
push
adc
in
stc
es
je
stos
xchg
sbb
add
scas
test
jno
das
fsubrs
inc
lahf
sub
je
xchg
lds
loope
fistl
adc
ds
jge
xchg
lock
imul
inc
add
jbe
int3
cwtl
fwait
in
rclb
jae
imul
xlat
or
iret
jne
mov
ja
mov
jno
loop
sbb
adc
lods
icebp
frstor
push
popf
or
xchg
push
jae,pt
jo
popf
int
dec
ja
into
icebp
and
mov
mov
lret
or
sbb
and
xor
xor
js
out
popf
je
and
call
pushf
loopne
mov
add
inc
pop
cmp
jg
subl
push
sahf
xor
inc
and
out
and
push
iret
testb
cmp
xor
mov
mov
and
sbb
sub
imul
les
rorl
test
jo
mov
pop
cld
mov
lret
in
adc
fs
test
jecxz
add
mov
sbb
pop
mov
popf
imul
scas
and
mov
sbb
jmp
sbb
ljmp
lret
pop
and
test
mov
adc
sbb
mov
repnz
mov
sbb
mov
icebp
fists
aam
cmc
xchg
mov
adcb
jb
sbb
mov
dec
rcll
adc
xorb
pop
ljmp
out
xchg
mov
adc
mov
pop
mov
adcb
aaa
fdivrs
push
xchg
xchg
xor
jns
cld
adc
mov
insb
add
int
sub
out
mov
aas
pushf
jns
xchg
inc
jne
and
jo
cli
js
mov
xor
gs
jae
cwtl
dec
daa
xor
mov
lcall
outsb
lods
and
inc
jecxz
dec
popa
xchg
orb
or
outsb
decl
dec
cmp
icebp
gs
jnp
xchg
mov
lds
pop
adc
add
xchg
jecxz
subl
repnz
xchg
lahf
inc
mov
test
out
xchg
sbb
push
fcoms
insl
or
sub
rcll
adc
mov
mov
lcall
lods
out
xchg
loope
dec
mov
xor
push
mov
and
jl
out
jnp
mov
je
cmpsl
xchg
sbb
inc
stos
movsb
push
jns
push
sbb
int
adc
mov
pop
mov
insl
xchg
mov
loope
mov
mov
shrl
mov
jl
leave
pop
inc
roll
fwait
sarl
imul
lret
das
hlt
imul
xor
jmp
or
mov
fs
cwtl
push
push
jae
pop
dec
xor
adc
in
push
push
inc
out
or
xchg
jp
or
hlt
pop
fildl
jnp
lret
jecxz
popa
cmp
repnz
dec
and
adc
add
mov
xor
push
and
mov
push
nop
pushf
popf
out
push
outsl
jne
mov
dec
inc
pushf
fwait
push
jno
pop
out
mov
jno
mov
stos
xchg
lea
push
outsb
les
jl
push
and
mov
adc
sub
mov
jge
mov
mov
imul
ret
jmp
jno
fsubl
test
mov
popa
fucomp
ret
jae
jne
adc
push
and
lods
push
test
int
xorl
daa
scas
and
data16
or
add
nop
jno
in
lds
jmp
lea
jno
js
xchg
jge
sub
adc
addl
inc
lea
mov
enter
mov
inc
shl
xor
jle
out
mov
sbb
int
andl
mov
ret
shrb
movsl
call
push
mov
mov
ja
sub
sub
sahf
xorb
add
xor
fdivrs
aam
jp
hlt
jns
aad
lods
add
lahf
jae
sub
inc
jno
jl
hlt
dec
scas
shlb
inc
test
adc
sub
or
mov
xchg
in
xchg
stos
scas
xor
push
shl
sub
enter
aam
or
xor
into
cmpsl
mov
jge
je
inc
mov
inc
mov
jb
bound
je
das
jns
xor
movsb
fchs
jle
adc
jno
incb
jl
mov
lea
add
je
es
add
ja
jge
fwait
scas
mov
xor
cli
mov
in
stos
je
add
mov
in
jno
or
push
xorl
es
mov
movsl
test
jns
and
cmc
dec
repz
inc
notl
subb
mov
ret
fwait
in
cli
xchg
jl
repz
stos
insb
sbbb
push
xor
mov
je
jns
and
push
icebp
lcall
add
jnp
ret
sub
lods
icebp
jmp
nop
cmpl
addr16
aaa
ja
xor
jbe
ret
mov
movsb
add
movb
jl
roll
xchg
fs
jno
add
xchg
jl
cs
jle
out
test
push
mov
xchg
orl
mov
dec
pop
or
xchg
xchg
les
loopne
js
mov
jno
out
mov
ljmp
mov
cmpps
jno
jo
cmpsl
mov
mov
bound
jg
ret
adc
mov
bound
or
and
stc
mov
ret
mov
xchg
adc
mov
insl
xchg
dec
xchg
sti
in
or
adcl
jb
or
push
fistl
inc
xorl
mov
into
mov
lcall
ret
ljmp
xor
dec
jb
mov
rcrb
mov
cmp
loope
test
jl
icebp
cli
jne
mov
xor
insb
insl
popa
movsl
inc
xchg
jno
stos
jp
fs
les
in
jno
xchg
lret
leave
iret
orl
lea
mov
stos
dec
bnd
jp
jne
incl
jae
test
sub
sarl
mov
ret
cmp
inc
jbe
push
dec
pushf
jnp
cmpsl
std
mov
in
mov
test
mov
jmp
xchg
mov
add
sub
or
adcl
out
cmp
loop
rorl
pop
pop
jno
and
aam
add
in
xor
leave
shlb
xor
adc
sbb
inc
sub
inc
jns
aam
lret
test
pop
push
jno
rcll
lods
add
rep
cmp
daa
pop
xor
jno
and
jmp
aas
pushf
and
jae
push
in
add
xorl
dec
add
mov
popa
jae
mov
push
jno
pavgw
jno
mov
addr16
mov
jno
ficoms
mov
divl
ljmp
lea
js
jbe
dec
lret
cmpsl
jno
clc
push
loopne
hlt
mov
les
cld
or
out
dec
ss
inc
call
pop
loop
mov
and
jl
mov
adc
jno
cli
xor
insl
xchg
lea
movsl
mov
xor
nop
xor
xchg
jmp
push
xor
cmc
mov
call
or
sub
popf
xor
mov
push
daa
lahf
jno
xor
and
rcl
lcall
and
loop
decb
adc
mov
aaa
push
stos
lea
jge
dec
into
repz
jns
stc
aam
adc
test
jo
inc
or
dec
push
or
jno
cmp
test
out
add
fsubs
jbe
push
jp
pop
nop
pop
inc
je
test
mov
push
mov
adc
jo
xor
lds
sbb
lods
btr
int3
sbb
fnstenv
inc
sbb
mov
jb
ds
mov
xor
and
jno
jbe
enter
sbb
cmp
popf
stc
in
jae
jno
rcrb
lret
jno
xchg
xchg
in
jle
and
repz
jmp
js
mov
or
lock
jnp
je
adc
xor
jno
mov
mov
mov
adc
dec
cmpsb
jae
xorb
adc
addr16
std
lea
pop
add
mov
jno
ss
test
faddl
addr16
sbb
mov
mov
add
xchg
push
sbbb
dec
lds
rcrl
aam
adc
js
sub
test
jge
jns
push
cmp
movsl
mov
mov
jno
into
loope
pop
imul
mov
xchg
push
sbb
mov
add
enter
sub
inc
pushf
hlt
and
add
adc
pop
jecxz
adc
jno
or
xchg
js
inc
fldt
fimuls
mov
mov
jl
jb
and
push
xor
jg
js
ss
xchg
sub
inc
sbb
int
mov
leave
jno
mov
xchg
sub
push
jmp
jge
jb
xor
insl
push
jae
data16
mov
mov
test
mov
hlt
xchg
mov
test
scas
cmp
nop
aas
jns
dec
push
out
icebp
mov
xchg
inc
mov
scas
jno
int
jno
cmpsl
sbb
or
ljmp
xchg
sbb
xchg
insb
sbb
add
sti
aam
jge
push
pop
jl
jno
xchg
iret
aad
icebp
sti
jne
and
cwtl
cmp
add
adc
add
jmp
jg
and
bnd
outsl
shl
dec
das
icebp
mov
xor
jno
sbb
sbb
jae
divl
out
push
mov
mov
dec
jno
sahf
mov
ds
xor
jno
jmp
mov
inc
mov
inc
push
jbe
adc
in
xchg
ja
je
pop
sbb
xchg
mov
jno
push
jg
inc
daa
lods
call
push
jb
test
adc
jnp
fnstsw
dec
in
rol
lods
jge
jp
mov
sub
imul
adc
scas
jp
int
shl
icebp
xorl
sahf
je
push
add
mov
jb
mov
aad
jno
lcall
jns
sbb
scas
mov
push
and
inc
int
lcall
dec
push
inc
sbb
inc
pop
xchg
repnz
pop
jne
int3
pop
dec
xlat
out
adc
dec
mov
push
cmp
xchg
jno
adc
jno
aad
mov
jno
xchg
pusha
sbb
ret
imul
jne
xchg
roll
add
mov
inc
push
out
adc
sub
icebp
shlb
dec
xchg
xchg
inc
fwait
mov
mov
jb
jp
mov
cmp
shll
out
ljmp
or
aad
add
push
mov
cld
dec
adc
mov
hlt
pop
leave
and
add
pop
leave
in
test
jae
xor
into
cmp
add
lret
nop
push
adc
scas
jb
mov
pusha
repnz
mov
jle
cmp
add
jge
inc
and
lea
flds
std
push
adc
push
subl
push
outsb
mov
sub
pop
or
subl
sub
mov
jne
or
dec
test
aad
jns
or
xor
push
es
mov
dec
jmp
repz
xor
xchg
aam
popa
mov
jns
push
add
jb
adc
std
jno
js
les
pop
mov
xchg
and
faddl
mov
add
mov
jb
inc
xchg
jo
jno
in
and
popa
add
gs
stos
enter
es
push
and
in
jnp
cmc
cltd
lock
dec
orb
mov
jno
mov
adcl
mov
shlb
sarb
es
inc
mov
popf
push
ret
xchg
ja
pusha
or
lock
inc
pop
jns
xor
ja
jns
jle
daa
push
lods
cs
jae
sti
add
adcl
jae
je
jb
in
inc
into
roll
lods
dec
add
sti
xchg
cmpsb
je
ds
dec
add
mov
sub
jle
gs
lea
dec
adc
in
test
cwtl
jecxz
lds
jno,pt
imul
lods
lea
fldenv
movsl
es
push
mov
aad
push
gs
test
or
ret
inc
jp
lea
inc
cmp
push
lods
hlt
loope
xchg
cmp
cwtl
xchg
cmpsb
lcall
stos
xchg
scas
dec
je
xchg
test
sahf
lods
xchg
and
jno
cmp
xchg
push
inc
add
shl
inc
divb
xchg
test
jae
mov
pop
add
xchg
sarl
call
jnp
insl
mov
jno
mov
jno
jnp
inc
dec
mov
adc
jl
scas
clc
in
rorb
mov
lahf
outsb
cli
jb
xchg
stc
lods
xchg
xor
xor
xor
or
outsl
jmp
push
mov
sub
test
movsb
mov
jg
and
pop
jns
out
cmp
xchg
mov
mov
cwtl
sub
js
outsb
push
xor
lahf
jge
jns
mov
sbb
adc
dec
lods
adc
stos
cmp
cmpsl
jno
xchg
lods
stc
call
mov
jno
hlt
add
pop
cmpsl
push
js
nop
mov
mov
xor
mov
cmp
das
xor
ret
mov
adcl
imul
jo
dec
mov
lds
push
pusha
scas
pushl
push
jno
push
or
xchg
xchg
repz
xchg
mov
jnp
pop
push
or
jae
ja
inc
adc
dec
divl
pusha
sbb
dec
mov
test
jnp
out
pushf
mov
test
push
sub
popf
sti
xchg
jmp
jle
jo
adc
sub
aas
insb
std
jge
ds
int
sub
jne
test
fistpll
popf
add
jno
mov
jno
addr16
adc
repz
loop
fiaddl
cmp
ljmp
push
adc
imul
xchg
jne
sti
sbb
jecxz,pt
xor
jnp
or
mov
cmp
xchg
lods
jno
fldenv
adc
push
push
inc
jmp
or
movsl
and
push
mov
addr16
int3
mov
clc
jns
add
mov
hlt
int
mov
push
mov
daa
jno
out
adc
mov
aas
je
fldt
gs
xor
sub
xlat
add
xor
sbb
in
fwait
ja
fcompl
and
and
sbb
cmp
jbe
lock
jno
mov
orb
dec
mov
xchg
ret
movsb
push
jge
and
out
dec
xchg
pop
outsl
clc
cmp
in
jl
xchg
aas
xchg
pop
gs
jno
add
jno
jge
add
inc
enter
cltd
idivl
adc
push
mov
jb
xor
lds
int
es
jno
sbb
sbbl
or
cmpsl
sub
lcall
test
addb
aam
jge
or
repz
adc
or
lods
add
out
jns
cmp
jb
jmp
mov
sub
mov
mov
jns
filds
and
popf
push
jl
add
inc
cmpsb
pop
mov
lret
push
push
jne
enter
inc
add
xchg
outsb
sbb
push
lcall
cli
mov
mov
enter
jbe
repnz
fnstsw
jg
ss
repnz
fs
jle
scas
cmpsl
loop
andb
xchg
dec
call
jo
pop
mov
bound
dec
jno
jnp
cmp
or
mov
pushf
pop
push
push
outsb
call
popf
cld
and
insb
shr
xchg
ret
add
dec
push
xchg
test
repz
mov
inc
shl
sbbl
adc
push
out
adc
test
bound
sahf
test
xor
fidivl
dec
and
popa
hlt
jne
dec
out
loop
js
js
xchg
add
inc
scas
dec
ljmp
push
or
inc
add
push
jbe
gs
imul
sahf
jae
xor
and
dec
ret
push
sub
imul
clc
pop
enter
jg
cmp
test
jb
push
mov
sbb
imul
xor
xor
je
repz
dec
push
test
push
pop
and
jns
mov
mov
mov
and
icebp
xor
leave
dec
adc
sub
cmp
adc
jmp
icebp
shrl
iret
push
add
ss
jecxz
scas
cmp
xor
mov
jle
lcall
cmc
sbb
sbb
cwtl
call
push
loope
dec
lret
in
cmpsb
push
pop
or
jp
xchg
cwtl
je
hlt
loopne
ja
xor
test
jb
inc
sub
jno
mov
push
rcrb
popa
scas
and
jg
stc
jb
jns
inc
pop
inc
mov
into
push
pop
jg
stos
pop
fildll
push
in
adc
popa
jns
gs
add
stos
aas
stos
inc
xorb
jb
bound
sbbb
mov
sub
pop
sti
push
mov
xor
cmc
or
cwtl
mov
es
xlat
popa
mov
int3
fcoms
or
popf
imul
jae
push
cmc
push
scas
xchg
aas
xor
cmp
cmpsb
cwtl
fs
inc
lods
jns
jg
dec
insl
mov
pop
rolb
test
stos
lock
cmp
mov
jae
cmp
jo
vpmullw
pop
daa
jge
push
sub
pop
rol
test
insl
xchg
stos
ficoml
repz
mov
jle
pop
xchg
mov
popa
jmp
dec
xor
jae
push
xor
test
dec
cmp
mov
cmp
jmp
inc
mov
stos
mov
dec
pop
dec
inc
nop
adcl
gs
mov
cmp
add
adc
push
and
pop
call
stos
mov
or
movsl
xor
femms
cmp
cmp
loope
dec
jbe
in
ja
push
mov
xchg
mov
loop
or
insl
pop
add
mov
ret
lcall
mov
dec
popa
cmpl
inc
enter
sub
push
notb
test
and
jno
cmp
jno
pop
sbb
sbb
push
aas
pop
mov
cmp
dec
inc
lods
fwait
ret
mov
std
cli
pop
loope
sub
sub
test
sub
xchg
mov
stc
dec
cmpb
jmp
cmp
test
pop
icebp
mov
addb
xchg
ret
add
jae
mov
or
fstpl
sbb
jg
stc
xchg
test
pop
sub
xchg
rclb
jne
sub
push
xchg
jno
sbbb
jno
and
jno,pt
in
imul
jo
neg
addb
adc
jno
outsl
mov
jb
ljmp
dec
jle
xor
jno
out
push
test
test
divb
mov
arpl
and
jle
das
jno
leave
inc
sahf
imul
adc
or
mov
lods
mov
mov
jb
pushl
mov
mov
xchg
mov
pop
fcoms
movsl
iret
xor
push
outsb
dec
imul
pop
jb
in
cmp
jno
adc
dec
jbe
or
jno
popa
cltd
rcrb
adc
jno
inc
scas
outsb
ficoms
jno
xchg
pusha
test
dec
xor
in
mov
sti
repnz
add
xchg
jmp
inc
mov
jno
ds
clc
shrl
in
in
jno
fnstcw
or
xchg
inc
jns
ja
stos
add
dec
cltd
cmpsl
jge
dec
sbb
sahf
repnz
xor
xor
jno
je
inc
sbb
insb
dec
bound
mov
jno
dec
pop
lretw
and
or
mov
sub
je
dec
ret
mov
fs
sbb
lock
xchg
arpl
pop
push
ret
call
xor
pop
cmp
pop
test
addl
mov
jae
xor
aam
adc
jno
or
jno
cs
out
add
push
xorl
je
pushf
or
jno
mov
inc
fiadds
cmp
xchg
call
adc
adc
clc
mov
mov
lret
pushf
and
jno
add
icebp
pusha
xor
pop
push
jge
scas
jno
inc
jmp
js
popa
test
js
or
test
cmp
lea
jno
inc
movsb
xor
jne
imul
cwtl
mov
jno
push
and
frstor
dec
mov
jnp
sbb
aas
mov
leave
pop
cmc
push
gs
les
je
sub
cld
jge
adc
push
hlt
jno
nop
pop
in
mov
push
adc
jno
sub
sbb
xchg
mov
xor
loopne
inc
out
xchg
mov
lods
lret
or
add
jb
jne
insb
push
jb
je
arpl
add
dec
pop
mov
cli
mov
push
sub
int
popl
add
test
call
jns
ss
sahf
neg
std
in
arpl
nopl
jmp
je
bound
scas
or
mov
mov
pop
je
add
xchg
aaa
cltd
xor
sub
mov
jl
mov
rolb
jno
rorl
test
sahf
sub
roll
addr16
out
xchg
lods
icebp
jmp
movl
shrb
out
fildll
push
jno
sub
fmulp
fstl
jne
out
out
orl
adc
sahf
mov
mov
scas
dec
ljmp
mov
cmpsb
aad
in
shll
lahf
popf
cmp
or
xchg
ret
je
cmp
lret
cld
xchg
inc
scas
dec
jbe
xchg
cmc
nop
stos
adc
scas
in
jne
push
ret
mov
lret
pop
dec
inc
mov
xor
out
add
sub
push
push
cs
add
jmp
xchg
in
push
dec
inc
aad
mull
les
cltd
gs
arpl
add
outsl
jae
dec
popa
outsb
fs
gs
rcrb
cmpsl
fstpl
sub
pusha
mov
clc
clc
add
pushl
test
movb
pushl
pushf
mov
lea
jne
pushf
pusha
pusha
push
mov
jmp
lea
jne
aas
lahf
sar
sub
xor
btr
mov
bt
add
sub
mov
call
mov
push
lea
jmp
call
and
stc
dec
jb
sbb
pop
idivb
inc
push
out
gs
mull
mov
pop
loopne
push
inc
shrl
xorb
imul
std
inc
lret
addr16
pop
xchg
jno
pushf
add
mov
dec
xacquire
add
ljmp
lea
jg
push
lea
je
jmp
add
dec
jo
outsb
push
jb
arpl
jae
bswap
movzbw
movsbw
pop
pushf
pusha
push
pushl
ret
add
push
je
inc
popa
jo
jne
gs
je
arpl
popa
arpl
jb
arpl
jmp
xor
mov
jmp
adc
pushf
pushf
mov
mov
pushl
ret
rep
lea
mov
movb
lea
jmp
call
pushf
mov
pusha
jmp
dec
test
cmp
push
lea
lahf
push
mov
call
pusha
lea
jae
clc
call
call
daa
jae
lcall
idivl
outsl
cmc
adc
lcall
xchg
xchg
test
jbe
jmp
nop
jae
push
fidivl
loopne
and
pop
and
xor
das
enter
iret
sbb
js
leave
dec
or
mov
lret
cmpb
inc
and
adc
mov
mov
je
pop
scas
inc
inc
push
gs
xlat
push
outsb
je
insb
insb
cs
insb
add
pushf
cmp
cld
fsubs
sub
daa
sub
aas
aas
push
dec
mov
mov
icebp
dec
xor
jmp
scas
inc
popf
es
mov
clc
mov
inc
into
mov
movsb
in
inc
pop
and
fs
shl
add
iret
and
sbb
jns
mov
cmpsl
out
test
shl
inc
bound
sbb
and
sub
daa
push
jmp
pushf
lea
jne
sub
lea
bt
mov
cmc
jmp
pushf
lea
call
jmp
jmp
bt
cmp
call
cmp
jmp
pop
aam
push
xchg
add
mov
pop
xchg
movsb
lret
cmp
pslld
adc
pushf
popa
sub
push
or
roll
imul
lcall
popf
std
ret
ljmp
adc
push
movsl
xchg
addr16
sarl
xor
adc
push
xor
aam
mov
mov
pop
out
jmp
add
insb
jae
jb
insl
jo
inc
add
ret
inc
inc
pushf
call
pop
outsl
gs
mov
xchg
xor
or
inc
jmp
inc
dec
fdivl
nop
dec
push
insb
fldl
and
or
leave
in
lret
jecxz
cmp
int3
incl
sbb
outsl
dec
sub
pusha
ret
dec
xor
fcompl
fwait
dec
inc
xor
cwtl
stc
lea
call
repz
mov
popa
test
mov
test
lea
sub
sti
xchg
imul
mov
mov
pop
test
jecxz
cld
xchg
test
ret
push
bound
fisttpll
jae
daa
aaa
in
or
and
mov
insb
sar
xchg
test
andb
and
arpl
in
add
in
mov
call
jb
mov
jnp
int
fsts
or
mov
jns
sbb
sbbl
pop
xor
fstpt
inc
or
jp
out
movsl
std
sahf
add
xchg
popf
ficomps
sbb
dec
jg
mov
int3
xor
dec
adc
popa
fdivl
jnp
loope
mov
dec
push
cltd
xchg
in
int3
adc
ss
sahf
fistl
test
stc
popa
jp
inc
rcr
push
inc
repz
jg
mov
push
push
cltd
scas
cmp
loop
mov
mov
mov
mov
jmp
mov
pop
repz
cltd
gs
jmp
bswap
mov
xchg
pop
mov
pop
mov
pushf
movsbw
jmp
add
add
add
add
add
or
subb
ret
dec
pop
add
pop
add
pop
add
pop
or
hlt
sub
add
dec
pop
add
cmp
add
pop
add
or
or
pop
add
pop
add
pop
add
outsb
popa
xchg
xorl
lods
inc
xbegin
dec
stos
add
mov
mov
add
mov
sub
mov
aam
push
xchg
rcrl
lret
cwtl
or
sahf
xor
or
mov
push
mov
test
cltd
cltd
rclb
jne
call
ret
je
gs
jge
sbb
inc
xor
or
movsb
cltd
adc
jp
sbb
jmp
mov
shrb
adc
gs
push
in
cmc
call
cmp
pushf
jmp
pusha
lea
call
call
call
pushf
dec
mov
jmp
add
push
je
inc
popa
jo
jne
gs
outsl
outsb
je
js
add
aaa
popl
bt
jmp
inc
mov
dec
pushf
inc
inc
mov
mov
lea
call
xchg
adc
add
imul
cmc
and
sub
sbb
arpl
inc
sbb
sbb
imul
mov
dec
sbb
imul
xchg
out
mov
xor
lods
iret
push
test
mov
aam
cmp
dec
fists
pop
dec
in
inc
and
push
jmp
push
fmuls
mov
out
and
push
cmp
add
repnz
xchg
mov
or
dec
dec
mov
shll
inc
mov
and
cltd
bound
push
in
dec
sbb
jno
add
dec
jle
shll
jb
es
xchg
mov
sbb
daa
mov
dec
cmp
dec
inc
rcrb
call
sahf
and
or
out
lock
loop
mov
jecxz
bound
and
mov
ficoml
std
add
test
adcb
dec
dec
mov
bound
push
push
outsb
pusha
in
in
push
cltd
bound
push
outsl
and
cmc
outsl
xor
and
jmp
dec
mov
aaa
push
sbb
aaa
lods
fsts
xchg
test
jno
and
mov
adc
mov
popf
inc
xlat
adc
or
int
lods
ljmp
data16
das
inc
dec
inc
fsubrs
inc
fwait
jp
and
int
or
daa
test
cltd
lock
mov
mov
enter
and
arpl
outsl
iret
icebp
lret
mov
out
int3
imul
sbb
cmp
jb
inc
fimuls
mov
mov
adc
cmpb
cli
adc
adc
jne
mov
push
clc
fwait
in
shll
idivl
push
pop
int3
shlb
push
in
dec
jns
push
push
pop
sub
push
xor
adc
dec
nop
adc
arpl
pop
jo
movl
pusha
call
repnz
subb
add
mov
lock
mov
mov
push
adc
imul
fistl
sub
sub
fmull
out
jns
xchg
out
scas
test
into
or
shl
jno
pop
push
jbe
movsb
xlat
mov
sti
enter
lock
mov
daa
movsb
adc
roll
lea
mov
pop
pop
mov
data16
and
scas
jle
and
in
push
dec
adc
mov
ds
dec
gs
into
inc
orb
iret
outsb
mov
mov
sbb
sbb
sbb
push
das
lock
in
iret
mov
xchg
clc
pop
fidivs
xor
stos
adc
gs
push
jg
xor
pop
test
clc
hlt
dec
in
push
call
add
daa
imul
dec
lea
push
dec
out
jnp
sub
std
jno
sbb
add
ss
insb
cli
shlb
jg
sub
pmaxsw
in
lock
push
jns
mov
aad
cmp
jb
mov
sar
cltd
gs
lcall
dec
jg
pusha
cli
mov
test
pop
bound
xor
pop
push
mov
mov
cmpsb
jl
daa
xor
ret
inc
fcmovu
pop
mov
scas
inc
int3
out
repnz
pop
xchg
aaa
movsl
nop
mov
or
push
sub
cli
or
popa
mov
fisubrl
pop
mov
push
inc
aad
movsb
add
out
jae
into
in
aad
xchg
cltd
movaps
cmpsb
movsb
xor
test
fnsave
jecxz
mov
push
outsl
pusha
jns
jge
or
js
xchg
mov
jecxz
add
insl
pop
inc
add
in
lahf
dec
jecxz
arpl
pop
out
test
xlat
and
mov
lret
outsl
fwait
xchg
adc
cld
inc
test
dec
in
or
popa
sahf
iret
inc
dec
aad
jl
insl
inc
jo
inc
inc
fimuls
stc
jmp
pop
sbb
movsl
cmpsl
insl
push
addr16
xor
repz
sub
rcll
dec
push
jge
cmp
push
xor
sbb
js
xchg
nop
daa
inc
cwtl
cwtl
and
mov
mov
adc
push
int3
xchg
adc
jae
stos
add
pusha
cwtl
mov
mov
mull
bound
daa
jmp
ficoms
sbb
dec
or
mov
fiaddl
shl
sbb
jmp
in
sbb
and
xor
lcall
sub
or
scas
clc
sbb
sbb
sub
insl
mov
in
mov
pop
mov
cltd
outsb
iret
lock
cmpsb
icebp
dec
jg
int
lods
mov
fsubrl
lds
sbb
push
lahf
nop
ss
repnz
mov
mov
xchg
mov
int
add
sub
stos
or
jbe
jmp
in
sbb
sbb
popl
in
xchg
dec
mov
shlb
je
pop
cmc
or
divl
pop
mov
leave
cltd
outsl
fwait
cli
adc
xor
lea
call
test
jmp
imul
pushf
stc
test
bt
add
pusha
lea
jmp
add
push
gs
gs
outsl
outsb
imul
imul
inc
int3
inc
xorl
sbb
push
addr16
sbb
add
repnz
cld
clc
mov
rcrl
xor
int3
iret
inc
shl
fwait
pop
stos
adc
movsl
outsb
test
data16
orl
inc
cmp
adc
and
scas
outsb
out
mov
lcall
aam
pop
lcall
mov
shl
js
aad
in
js
dec
ret
fisttps
add
and
int
outsl
xchg
sbb
cmp
adc
xlat
in
mov
jmp
mov
pusha
pop
mov
pusha
pushl
ret
call
jne
gs
xor
fs
insb
add
aad
cld
decl
adcl
mov
sar
mov
movb
lea
jne
jae
push
mov
pusha
pushfw
popw
shl
pusha
dec
mov
call
bt
add
jmp
movsbl
lea
pop
mov
pushf
mov
mov
lea
jmp
pusha
inc
bsf
mov
test
pushl
test
and
push
bt
pushf
add
sub
jmp
push
lock
dec
jg
popa
cmp
xor
out
addr16
mov
arpl
jb
popf
xor
xchg
xchg
fs
mov
xchg
roll
jae
xchg
es
inc
fnstenv
cltd
gs
inc
aam
rcrl
adc
adc
pop
adc
add
adc
and
fwait
aas
clc
add
pusha
lea
jmp
push
not
inc
bts
ror
shld
btr
neg
neg
call
push
pusha
sete
rcl
movzbl
test
bt
add
test
pushf
stc
not
call
clc
mul
call
pushf
pushf
call
pusha
pushl
jmp
bswap
jmp
pusha
pushf
call
mov
pushl
movzbw
cld
jmp
push
push
pop
call
pushf
pushf
mov
movb
lea
jmp
shl
shld
rdtsc
test
clc
bt
sub
push
mov
movb
mov
movb
mov
movl
lea
jmp
cmc
shl
pushf
mov
pushf
mov
pushf
popl
push
call
setae
inc
pushf
mov
cmp
pusha
sub
call
not
lea
movzbw
cwtl
mov
pushf
pusha
mov
mov
pushf
mov
pushf
pushf
lea
jmp
sub
jmp
movsbw
setns
mov
mov
pusha
call
pusha
lea
jmp
pushf
call
jmp
pusha
push
pushl
popl
mov
mov
lea
jmp
call
pushf
popl
mov
pushl
popl
mov
mov
mov
mov
lea
jmp
inc
pushf
decl
movb
pushf
lea
jne
pushf
movw
mov
movw
pusha
push
pushf
lea
jmp
mov
pushl
pusha
pushf
mov
lea
jmp
mov
pushf
movw
lea
jmp
add
stc
clc
bt
mov
jmp
lahf
notl
setae
mov
pusha
sub
jmp
pusha
sub
pushf
div
mov
call
push
pushf
popl
push
pushl
popl
pushl
pushl
lea
jmp
test
add
cmp
sub
jmp
jmp
pushl
pushl
mov
pushf
call
sar
inc
cmp
mov
mov
stc
test
mov
pusha
not
test
movw
test
not
pusha
cmc
bt
call
xchg
mov
stc
adc
mov
bsr
or
shl
and
mov
jmp
mov
call
shld
sub
btr
and
mov
ror
rcr
shrd
add
not
dec
mov
sub
or
adc
neg
seto
jmp
mov
mov
push
mov
call
pusha
stc
mov
movl
call
shl
clc
movzbw
rcl
mov
dec
add
je
mov
pusha
not
mov
lea
jbe
push
pushf
mov
movw
pusha
lea
jmp
movsbl
call
mov
jmp
cs
xor
loop
adc
loop
sbb
aam
xor
iret
loop
popf
shl
xor
mov
loop
and
loop
jns
loop
and
loop
or
loop
cs
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
mov
loop
pop
loop
jns
loop
xchg
lret
loop
xchg
mov
loop
enter
inc
mov
loop
push
shl
enter
push
shl
enter
popf
shl
xor
int3
loop
inc
vfnmadd231ss
loop
adc
mov
xor
loop
sub
loop
pop
loop
in
lret
xor
loop
jns
loop
test
loop
mov
loop
xchg
aam
xor
loop
xchg
aam
xor
fsub
xor
loop
push
shl
in
lret
sbb
leave
loop
sbb
iret
loop
lods
mov
xor
loop
xor
loop
mov
loop
inc
vpackusdw
loop
inc
vfnmadd231ss
loop
cld
loop
rol
loop
mov
loop
icebp
mov
loop
or
loop
pop
lret
push
rol
xor
loop
xchg
aam
xor
shl
inc
leave
loop
sub
aam
xor
loop
inc
mov
loop
cld
mov
xor
shl
xor
vgatherqps
loop
xchg
lret
loop
enter
xchg
mov
loop
push
popf
shl
xor
xlat
loop
rol
loop
xor
shl
cs
loop
or
loop
adc
int3
loop
lods
mov
xor
int3
loop
inc
mov
loop
mov
loop
and
loop
rol
loop
xor
int
xor
ret
in
lret
xor
loop
sbb
loop
rol
xor
loop
mov
loop
rol
xor
loop
cltd
lret
or
loop
or
loop
or
loop
or
loop
insb
shl
xor
xor
xor
xor
xor
xor
xor
xor
lret
mov
loop
mov
loop
mov
loop
or
loop
cli
int3
loop
inc
mov
loop
and
loop
pop
loop
rol
loop
cli
int3
loop
test
loop
sub
loop
cld
mov
xor
loop
cs
loop
pop
lret
adc
loop
push
shl
cld
loop
and
loop
xor
iret
loop
cli
int3
loop
scas
int
xor
ret
xor
loop
rol
loop
cld
loop
xor
iret
loop
inc
lret
adc
loop
and
loop
mov
loop
inc
mov
loop
rol
loop
xchg
lret
loop
rol
xor
loop
jns
loop
inc
mov
loop
xchg
mov
loop
xchg
lret
loop
or
loop
xchg
lret
loop
test
loop
cs
xor
mov
loop
sub
xlat
loop
mov
mov
xor
mov
loop
xor
loop
xchg
mov
loop
cld
mov
xor
loop
cs
loop
xor
ret
or
loop
or
loop
mov
loop
fcom
loop
enter
cltd
mov
loop
popf
shl
xor
iret
loop
inc
mov
loop
inc
mov
loop
mov
loop
mov
loop
rol
loop
or
loop
xchg
aam
xor
lret
insb
shl
xor
lock
inc
add
mov
iret
add
call
jmp
add
jmp
lea
jmp
mov
push
movb
pushf
lea
jmp
call
mov
jmp
push
jmp
pushf
lea
jmp
call
call
bswap
mov
pusha
lea
movb
pusha
mov
call
push
push
pushf
mov
push
lea
jmp
pusha
mov
pushf
pusha
call
pushf
lea
jl
pusha
mov
pushf
movb
lea
jmp
call
and
movb
jmp
pushf
stc
movb
sub
test
cmpl
jmp
mov
mov
movl
push
lea
jmp
pusha
add
cmp
shld
lea
ja
pusha
mov
call
pushf
pushf
popl
pusha
pushl
popl
push
lea
jmp
push
cmp
bswap
jmp
lea
call
mov
pushl
popf
mov
lea
jmp
pushf
popl
call
call
jmp
pushf
xchg
bsf
sar
mov
btc
movzbw
sub
bsr
pop
cld
shrd
cmc
jmp
pushf
mov
pusha
pushf
pushf
popl
pusha
pushf
pushl
popl
pushf
mov
movb
movl
lea
jmp
pushf
repz
popl
pusha
xchg
sub
jmp
bt
cmp
jmp
movzbw
mov
lea
pusha
mov
bswap
pusha
lea
cld
jmp
movsbw
pushf
popl
call
mov
push
pushf
movl
mov
lea
jmp
cbtw
mov
clc
pushl
test
cwtl
stc
test
sub
pusha
pushl
jmp
mov
jmp
pusha
clc
push
rol
call
shr
jmp
rcr
bsf
pushf
movzww
cmp
pushf
xchg
pushf
add
pushl
call
mov
pushf
call
dec
rcr
movzbl
xor
add
push
mov
dec
bsf
shrd
not
ror
xor
shl
not
setbe
cmp
add
movsbw
mov
pushl
bt
add
pusha
mov
push
pushf
lea
jmp
pushf
popl
lea
jnp
pusha
movl
pushl
popl
movb
movb
lea
jmp
xor
cmp
pusha
xor
cmp
cmp
cmc
bt
sub
jmp
pusha
add
jmp
movw
call
push
movb
mov
push
push
mov
push
lea
jmp
mov
mov
lea
jmp
push
movsbw
mov
pusha
pop
mov
pushf
lea
cpuid
call
jmp
push
push
mov
pushl
popl
push
pushf
pushl
lea
jmp
pusha
call
call
pushf
pusha
mov
lea
ja
movsbl
lahf
neg
mov
aad
cmp
lea
jp
aaa
sub
movzbl
sub
lea
test
and
sub
sub
js
lea
mov
bswap
pushf
movsbw
pusha
not
mov
xchg
pusha
call
push
pushf
mov
movw
pushl
pushl
pushl
lea
jmp
pushf
popl
mov
push
call
pusha
movw
mov
movl
push
lea
jmp
shr
mov
jmp
pushl
popl
push
mov
lea
jmp
rep
shrd
bswap
mov
movw
not
mov
pushf
call
pushf
mov
bswap
mov
pushf
pushl
cld
call
sub
mov
pushl
jmp
pushl
popl
pusha
pushf
lea
jmp
pusha
pushf
mov
pushf
call
push
mov
dec
stc
not
mov
call
call
call
push
or
lea
jnp
push
lea
je
pusha
sub
add
ja
clc
test
test
xchg
stc
push
cmc
push
sub
mov
movl
lea
jne
jb
cmp
xor
call
cmp
cmc
mov
stc
add
pushf
push
mov
jmp
pushf
lea
jmp
dec
bsr
mov
jmp
pusha
sub
pusha
pushf
jmp
not
pushf
movl
pusha
sub
test
pushf
clc
pushf
and
call
mov
pushf
mov
mov
pushl
ret
pushl
popl
mov
pushf
pushf
movw
lea
jmp
pushl
mov
pushf
movb
lea
jmp
js
not
add
rcr
movzbl
cmp
add
jmp
add
dec
lea
add
shrd
pushf
sbb
inc
xor
add
movzbw
adc
mov
pusha
test
shl
cmc
pusha
jmp
add
call
cmp
mov
call
cmp
sub
push
not
clc
bt
add
pushl
pushl
push
stc
mov
jmp
jmp
adc
mov
mov
push
add
pushf
mov
lea
jns
push
push
pushf
mov
pushl
pushf
pushf
pushf
lea
jmp
cld
jmp
jmp
divl
jmp
mov
mov
movb
movb
movb
lea
jmp
pushf
pushf
jmp
xchg
call
cmc
lea
daa
mov
cmc
pusha
sub
jmp
movw
lea
jne
pushf
sub
movb
call
push
jmp
lea
mov
std
xchg
bswap
mov
std
jmp
xchg
pushf
movl
pushf
mov
pushf
jmp
rcl
neg
mov
bt
bswap
pushf
test
mov
add
bt
clc
pusha
movb
xor
cmp
pusha
add
add
jb
cmc
push
bswap
jmp
mov
pushf
lea
jmp
mov
push
movl
movb
lea
jmp
push
mov
call
pushf
pushl
popl
pushf
pushf
lea
jmp
bts
ror
pushf
sbb
sub
or
neg
pusha
and
add
mov
stc
sub
push
pushf
mov
push
pushf
lea
jmp
mov
pushf
pusha
lea
jmp
jmp
jmp
mov
mov
movw
pusha
mov
pushf
lea
jmp
jmp
bsf
call
add
pusha
push
movw
movl
mov
pushf
pushf
lea
jmp
pusha
jmp
movl
push
pushf
pushl
mov
push
pushf
pushl
ret
pushf
call
mov
pushf
jmp
pusha
lea
mov
call
pushl
push
mov
pushf
pushl
ret
push
mov
pusha
push
lea
jmp
call
pushf
pusha
pushf
mov
push
pushf
lea
jmp
pushf
jmp
xchg
adc
add
rol
mov
and
sbb
inc
mov
cmp
sub
call
stc
sub
clc
call
call
pushl
popl
pusha
push
lea
jmp
cmp
add
push
movb
movb
mov
pushf
popl
mov
pusha
pusha
pushf
pushl
popl
pushl
mov
movl
mov
lea
jmp
and
push
pushf
pushl
jmp
push
call
mov
pushl
movw
lea
jmp
call
btr
push
xor
rcr
mov
cmp
jmp
bt
jmp
pushf
popl
pusha
call
test
sub
push
pusha
mov
pushl
pushf
pushf
lea
jmp
pushf
popl
jmp
mov
pusha
mov
inc
shl
xor
shld
xchg
or
add
bswap
xchg
cmc
mov
or
bt
mov
adc
seto
sub
push
lea
rcr
pushl
inc
push
call
bsf
sbb
mov
cmp
sub
cmp
pushf
test
movb
add
pusha
pushl
call
bt
push
mov
add
stc
pushl
test
push
sub
lea
jns
push
movl
pushl
mov
pushf
pushf
pushf
movw
lea
jmp
pusha
cmc
mov
rol
mov
pusha
sub
stc
jmp
call
pushf
pushf
pushl
popl
pushf
lea
jmp
bt
mov
jmp
pushl
pushl
popl
push
pushf
mov
mov
lea
jmp
clc
sub
pushf
mov
xchg
call
setne
cmp
mov
bswap
movsbw
not
add
sub
rcl
sets
add
sbb
sub
xor
inc
add
add
xor
not
shl
add
shl
add
mov
pusha
pusha
add
pushf
mov
mov
lea
jmp
cmc
rol
stc
jmp
pushl
popl
movw
mov
lea
jmp
call
rcr
push
add
mov
sar
setns
rcl
mov
pushf
sub
cmc
test
pushl
cmp
shr
pusha
mov
pushf
jmp
pusha
pushl
popl
pusha
mov
movb
pushf
lea
jmp
shld
sar
aas
mov
cmc
mov
sub
pushf
mov
push
add
pusha
cmp
cmc
stc
shrd
movl
mov
pushf
pushf
jmp
pushf
call
cwtl
lea
mov
mov
mov
mov
jbe
pushf
divl
call
mov
push
pushf
lea
jmp
pushf
popl
push
pushf
pushl
popl
pusha
lea
jmp
jmp
pusha
lea
jne
pusha
call
pusha
pushf
mov
jmp
sar
cmc
bt
pusha
mov
rcl
movsbw
lea
mov
cmp
add
pusha
jmp
aad
sbb
movzbw
xor
mov
or
mov
clc
stc
clc
push
not
cmc
call
bswap
call
clc
xor
jmp
pushf
popl
call
mov
pushf
push
movl
lea
jmp
setge
xor
rol
movzbw
mov
and
mov
cmp
pusha
pusha
sub
jmp
test
xor
pusha
bt
bt
xor
mov
sub
mov
call
pusha
lea
je
bt
pusha
sub
pusha
stc
cmp
xchg
test
clc
mov
cmc
sub
pushf
call
bsr
bsr
rcl
bt
mov
push
pusha
add
mov
cmp
add
pusha
push
call
call
mov
xchg
clc
shld
mov
or
xor
pop
mov
pusha
stc
pushl
popf
mov
pushl
pushf
pushl
ret
mov
pushl
pushf
lea
jmp
aad
mov
or
pushf
bsr
ror
mov
cmc
add
pushf
pusha
call
movsbl
mov
pusha
jmp
test
sub
cmp
movw
clc
sub
mov
add
jmp
mov
call
xchg
sub
mov
shl
shl
cmc
shr
mov
clc
jmp
lea
jmp
push
jmp
push
pushf
call
mov
mov
push
mov
mov
lea
jmp
call
mov
pushf
jmp
dec
mov
cmp
xchg
pusha
pushl
test
cmp
add
pushf
pushf
lea
movb
push
mov
inc
call
clc
lea
jge
rol
push
sub
jmp
jmp
mov
mov
push
lea
jmp
test
movb
test
xor
call
lea
jo
push
lea
jne
jo
xor
call
pushf
call
push
mov
movb
mov
movb
mov
lea
jmp
jmp
pusha
pushl
sub
pushl
shr
pushf
movb
lea
jae
push
mov
push
jmp
call
push
pushf
lea
pushf
movb
pusha
mov
pushf
lea
jmp
mov
lea
mov
movb
pusha
mov
mov
lea
jmp
add
push
call
lea
jmp
movb
pushf
lea
jmp
push
pushf
popl
jmp
stc
lea
or
mov
rcr
rcl
test
mov
cmc
test
call
mov
call
cmp
add
test
test
sub
jnp
sub
pushf
pushf
mov
push
lea
jmp
movzbl
clc
ror
pusha
add
shl
sar
movzbl
cmp
pusha
mov
call
jmp
stc
sub
push
xchg
pushf
pushf
mov
pusha
movl
jmp
cld
mov
pushl
popf
pushf
pushl
lea
jmp
add
sub
push
mov
ror
sub
movzbw
rcl
sub
add
bts
not
btr
cmc
ror
not
dec
bts
lea
dec
xor
clc
shld
sub
test
bsr
movzbw
movzbw
movzbl
dec
pop
pushf
bswap
mov
jmp
setl
mov
setno
shl
mov
cmp
jmp
pushf
movw
jmp
lea
mov
call
shl
push
pusha
mov
mov
mov
call
bswap
inc
not
jmp
setle
movzbl
pushf
stc
movb
add
pusha
mov
cmc
cmc
xor
pusha
pushl
add
jmp
lea
bswap
mov
shrd
mov
sbb
mov
pushf
bt
pushf
add
mov
push
jmp
pop
movzbl
shld
pop
shrd
cld
pop
add
movsbw
das
test
pop
add
rol
bsf
push
mov
inc
mov
clc
jmp
jmp
stc
sar
btc
lahf
mov
bt
bt
mov
cmp
add
call
call
mov
pushf
movb
pushf
popl
movb
pushf
call
call
xchg
movl
push
movl
mov
pusha
mov
push
movb
pushf
pushl
ret
lea
pushl
dec
bt
movw
stc
neg
pushf
ror
clc
jmp
lea
jmp
pusha
pushl
jmp
test
sub
cmp
clc
shl
movb
movb
call
add
movb
movb
pusha
lea
jmp
cmp
aas
rcl
sub
aaa
shrd
ror
lea
movsbw
and
stc
ror
sub
movsbw
mov
jmp
pushf
pushf
popl
jmp
mov
mov
pushf
mov
pushf
lea
jmp
pushl
jmp
sar
neg
mov
btc
cmc
seta
dec
mov
adc
pushf
xor
mov
call
call
movl
mov
pushl
popl
pushf
lea
jmp
pusha
mov
lea
jmp
pushf
jmp
stc
or
bt
stc
bt
xor
movb
push
call
push
movb
lea
jmp
jmp
and
sbb
mov
cmp
add
jge
bt
pusha
add
call
sbb
cmp
bt
movzbl
stc
pushf
cmc
add
pushf
pusha
pushf
lea
pushl
push
pushl
dec
test
neg
clc
ror
jmp
pushf
mov
mov
lea
jne
lea
movzbw
lea
mov
cmp
pushf
pusha
cmc
and
clc
jmp
jmp
bswap
lea
jmp
mov
pusha
push
lea
jmp
push
lea
jmp
call
mov
jmp
pushf
lea
jmp
movl
bt
clc
sub
pusha
stc
mov
cmp
add
mov
mov
pushl
pushf
push
pushl
ret
lea
jne
clc
xorb
not
call
sub
movb
call
movzbl
mov
push
pusha
jmp
call
movl
push
mov
movb
mov
mov
pushf
lea
jmp
mov
pushl
call
pushf
pushf
mov
jmp
pushf
call
lea
jmp
jmp
mov
lea
jge
pusha
pushf
popl
pushf
jmp
mov
pusha
pushf
call
pushf
pushl
popl
mov
movb
lea
jmp
mov
lea
mov
push
pushf
pushl
lea
jmp
pusha
not
bsf
clc
mov
shl
cmp
mov
mov
stc
add
jmp
pusha
jmp
mov
mov
pushf
popl
mov
jmp
movb
pushl
popl
pushl
pushl
lea
jmp
pushl
popl
mov
mov
movb
lea
jmp
cwtl
cmc
sub
call
test
bt
add
pusha
push
call
pushf
jmp
stc
lea
push
bt
cmp
call
movb
mov
not
cld
not
pop
mov
cld
cld
pusha
mov
rep
call
pushl
popl
push
add
bt
pushl
popf
mov
pushf
pushl
lea
jmp
stc
push
jmp
movl
movl
push
mov
pushl
pushl
ret
bt
pushl
sub
movb
jmp
xchg
pusha
movl
pushl
push
mov
lea
jp
push
pusha
pushl
ret
inc
pushl
cmc
call
mov
push
push
pushl
pushl
ret
call
add
add
bt
shl
movb
jmp
dec
cmc
pushf
neg
stc
ror
lea
jne
clc
add
test
pushf
cbtw
clc
clc
stc
cwtl
movb
bt
bt
push
sub
pushf
jmp
pushf
mov
movw
pusha
movl
lea
jmp
movb
mov
rep
shr
bsf
btc
cmc
mov
dec
mov
bt
pushl
popf
mov
mov
mov
mov
lea
jmp
movb
pushf
popl
jmp
jmp
pushf
popl
call
lahf
xor
sbb
mov
not
shr
mov
js
pusha
mov
sub
call
jmp
pushl
popl
movw
mov
movb
movb
lea
jmp
sub
call
bsf
movsbl
bsf
mov
clc
mov
stc
call
xor
neg
mov
mov
test
add
btr
lea
bswap
rcl
rcr
ror
shl
setl
bsr
pop
mov
add
ror
bsr
sub
rol
bsf
mov
bsf
sbb
rcr
mov
btr
call
mov
push
movl
pusha
pusha
lea
jmp
jmp
push
pushl
popl
push
pushf
lea
jmp
mov
pushf
pushl
push
pushf
popl
jmp
call
mov
pushl
pushf
popl
movw
jmp
clc
pusha
bt
xchg
push
mov
clc
call
stc
push
test
mov
mov
call
mov
pushl
lea
pushf
movb
movb
lea
jmp
mov
movb
lea
jnp
push
movw
pushf
popl
pusha
jmp
mov
bswap
movzbw
lea
pushf
movzbw
push
movsbw
bswap
push
mov
movw
lea
mov
call
