test
or
add
add
add
arpl
mov
xchg
add
loop
add
adc
mov
mov
mov
jno
add
add
popa
test
xchg
add
mov
xchg
cs
add
inc
mov
addr16
jbe
xchg
add
add
cwtl
inc
add
mov
add
cmp
push
inc
pop
mov
add
push
inc
mov
add
out
int
out
sahf
in
inc
mov
mov
add
out
add
out
int
stos
and
notl
rcr
inc
inc
mov
add
fsubp
inc
cmp
add
add
outsb
jl
cmp
jmp
mov
push
jno
jl
xchg
mov
dec
dec
dec
mov
mov
repnz
sub
push
inc
repz
pop
push
mov
out
iret
jl
mov
jae
pop
cld
jae
add
filds
ficompl
cmp
mov
test
inc
pop
xchg
in
inc
inc
mov
add
mov
lret
mov
in
add
mov
cmp
in
inc
jb
cwtl
inc
jb
aas
jno
add
mov
imull
icebp
fistpll
mov
inc
in
inc
mov
inc
mov
add
push
push
fistpll
imull
in
icebp
mov
push
sub
outsb
sti
cmp
shlb
dec
dec
dec
dec
dec
dec
dec
dec
out
mov
push
jp
add
mov
add
add
add
pop
pop
imull
add
adc
jecxz
xchg
negl
xlat
notl
js
jno
xchg
add
adc
jno
mov
jno
or
jp
add
add
add
and
add
add
add
mov
in
add
mov
test
xchg
int
int
and
jno
jp
and
rcr
test
add
arpl
xchg
add
xchg
add
add
add
mull
pusha
jns
jno
xchg
add
pusha
pop
pop
pusha
dec
pop
pusha
dec
pop
jno
jb
and
arpl
add
add
add
jmp
and
mov
sbbl
notl
mov
mov
adcl
mov
notl
mov
mov
jp
cmc
notl
pusha
mov
jno
add
add
pusha
inc
cmp
dec
pop
mov
sbbl
notl
mov
pop
fninit
jecxz
or
jp
add
add
jno
mull
pop
jno
mov
pusha
inc
mov
fsub
pop
mov
pop
add
add
shlb
xchg
in
or
jp
add
cmp
add
iret
jp
add
add
add
add
add
mov
shlb
jno
sub
add
mov
mov
mov
mov
mov
mov
xchg
push
arpl
jae
push
xor
out
repz
inc
mov
jg
mov
int
pop
mov
mov
push
enter
fbld
mov
push
jmp
add
nop
mov
pop
inc
pop
inc
jae
mov
aaa
bound
push
aaa
jae
fistpll
pop
mov
add
push
enter
xchg
inc
mov
push
mov
aam
adc
mov
adc
dec
pop
repz
filds
push
jmp
int
out
jne
aaa
cmp
and
es
mov
aaa
bound
push
aaa
dec
mov
mov
jae
mov
push
jmp
int
out
jne
aaa
cmp
cwtl
push
mov
es
repz
aam
leave
cmp
mov
inc
sbb
pop
inc
mov
mov
inc
lds
mov
mov
xchg
jmp
inc
ret
inc
inc
jmp
add
fisubs
dec
jb
shrl
imul
sub
jecxz
pop
mov
cmp
movsl
inc
pop
inc
mov
mov
sbb
sbb
mov
mov
leave
loopne
push
fists
push
push
push
insb
push
inc
lcall
push
mov
call
mov
push
call
mov
jmp
filds
jns
mov
sarl
pop
in
cmpsl
jns
mov
add
pop
mov
mov
mov
cmpsb
mov
pop
pop
lahf
filds
jns
mov
jle
int3
cld
mov
and
mov
into
adc
mov
fists
lds
mov
pop
pop
cmpsl
ffreep
jns
mov
pop
mov
adc
pop
pop
mov
adc
mov
push
add
or
push
mov
jns
mov
imul
pushf
mov
cmpsb
jns
mov
shlb
pop
pop
sbb
leave
jns
mov
sbb
pop
lcall
adc
or
pop
pop
in
fdivrs
mov
fstl
add
pop
pop
mov
mov
push
popa
pop
pop
inc
and
into
push
push
push
push
pushw
into
cmp
mov
lds
pop
in
lods
mov
les
add
mov
mov
lods
push
mov
push
mov
inc
lcall
in
lods
cmp
arpl
aam
mov
out
andl
pop
cmp
push
inc
and
push
pop
cmp
jecxz
lds
mov
call
cmp
mov
mov
cmp
xchg
jb
pop
cmp
or
pop
push
test
mov
pop
inc
cmp
jecxz
fildll
push
push
push
es
inc
pop
inc
and
lret
and
inc
cmp
jecxz
fistps
mov
and
jne
mov
push
inc
pop
jmp
test
sub
mov
sbb
sbb
inc
pop
push
mov
arpl
call
mov
mov
mov
inc
mov
inc
inc
jmp
sub
push
push
pop
pop
or
sbb
lcall
pop
and
call
mov
lret
cs
inc
lcall
mov
adc
pop
sbb
pop
or
or
fists
push
push
es
mov
mov
and
mov
push
adc
mov
pop
jmp
cmp
push
push
push
push
es
dec
inc
mov
and
mov
push
sbb
jmp
cmp
loopne
push
push
es
adc
mov
and
mov
jecxz
pop
push
mov
out
and
jmp
cmp
push
push
push
es
nop
inc
mov
inc
pop
jmp
and
sbbl
add
inc
stos
jmp
lcall
mov
inc
inc
lcall
push
ds
inc
inc
sbb
jmp
mov
pusha
inc
pop
lcall
push
loopne
mov
inc
pop
sbb
dec
mov
pop
sbb
and
mov
inc
pop
filds
inc
fistpll
repz
inc
pop
or
repz
scas
push
push
pop
or
daa
arpl
add
pop
pop
pusha
pop
inc
push
jne
inc
out
mov
mov
repz
mov
test
mov
adc
mov
pop
sbb
jmp
push
mov
pop
sbb
inc
pusha
jecxz
mov
inc
and
repz
and
push
cmp
push
push
push
es
hlt
repz
mov
and
test
cmp
xlat
push
push
es
loop
mov
inc
mov
pop
lcall
mov
mov
pop
pusha
mov
mov
lcall
mov
inc
pop
sbb
jmp
push
mov
pop
sbb
inc
pusha
jecxz
cmp
fsts
out
fsts
pop
filds
inc
fistpll
mov
mov
pop
or
push
push
call
push
push
pop
or
or
fildll
mov
inc
mov
mov
pop
push
pop
mov
mov
ret
pop
pusha
pop
mov
mov
ret
pop
pusha
pop
int
mov
jl
pop
pusha
inc
inc
stos
jmp
lcall
pusha
mov
adc
mov
pop
sbb
jmp
push
mov
pop
sbb
inc
pusha
jecxz
inc
and
aam
xchg
inc
pop
filds
inc
fistpll
pop
lcall
bound
or
sbb
pop
sbb
pop
or
stc
and
call
push
inc
pop
sbb
pop
mov
push
mov
mov
sbb
inc
pop
mov
mov
mov
inc
mov
cmp
adc
and
repz
enter
and
arpl
aas
mov
adc
jmp
add
pusha
ret
mov
inc
mov
pop
mov
push
mov
mov
push
aaa
popa
mov
push
out
pop
mov
push
aaa
jmp
mov
inc
push
pop
pop
pusha
dec
cmp
aaa
xor
pusha
pop
mov
pop
inc
arpl
inc
mov
xor
pop
dec
pop
inc
mov
mov
mov
sbb
sbb
inc
pop
push
pop
inc
mov
xor
repz
mov
mov
pop
cmpsl
push
mov
mov
pop
mov
mov
mov
pop
or
mov
mov
xor
pop
mov
pop
fistpll
sbb
mov
mov
pop
lcall
in
mov
mov
repz
pop
push
mov
mov
aaa
mov
lds
inc
fidivl
aad
sub
or
js
jb
sbb
jne
inc
pop
jmp
mov
jl
push
jl
push
cmp
jmp
mov
out
jmp
divl
iret
or
inc
jl
inc
fidivrl
cmp
jne
inc
orl
jne
inc
andl
pop
mov
aaa
mov
cmp
pop
push
push
pop
inc
mov
inc
mov
xor
call
push
mov
mov
sbb
push
mov
mov
sahf
mov
mov
adc
mov
leave
inc
mov
arpl
mov
aaa
pop
push
mov
fnsave
and
cmp
push
push
push
push
enter
mov
add
push
sub
roll
iret
or
call
repz
inc
and
cmp
cmp
inc
push
ret
add
inc
push
mov
leave
aam
mov
mov
insb
push
jecxz
inc
jecxz
cmp
mov
dec
lds
mov
push
jecxz
jecxz
inc
jecxz
cmp
mov
jae
inc
push
jecxz
inc
jecxz
cmp
mov
fst
mov
mov
sbb
sbb
mov
mov
mov
jl
nop
int
mov
xor
repz
mov
jecxz
adc
mov
pop
cmpsl
mov
mov
lods
inc
pop
jmp
aaa
push
cmp
mov
mov
mov
sub
mov
add
push
xor
cmp
jmp
push
pop
pop
in
push
das
mov
mov
xchg
push
jecxz
and
mov
cmp
jl
fbld
push
push
push
push
jmp
add
inc
lret
mov
pop
pusha
adc
xchg
inc
mov
arpl
mov
pop
push
mov
sub
pop
push
inc
mov
add
pushl
fildl
push
mov
mov
sub
add
inc
pop
jmp
cmp
mov
jns
pop
push
out
arpl
mov
mov
and
jne
inc
pop
jmp
pusha
aaa
push
cmp
mov
push
push
push
mov
mov
pop
inc
mov
mov
sbb
lds
mov
aam
jne
inc
inc
inc
mov
mov
inc
dec
cld
cmp
in
jo
aam
dec
aam
aaa
inc
and
jne
dec
aam
pop
mov
ret
aad
mov
push
inc
out
mov
push
aaa
push
push
pop
push
inc
pop
push
mov
push
enter
aaa
bound
push
aaa
dec
inc
mov
mov
mov
mov
mov
push
aaa
mov
bound
push
aaa
dec
mov
mov
sbb
sbb
mov
inc
inc
push
mov
aaa
cmp
dec
inc
sub
mov
inc
mov
pop
inc
iret
lods
cmp
mov
mov
or
sub
add
add
mov
jmp
pop
mov
shld
call
jecxz
pop
sarl
mov
pop
mov
inc
pop
mov
and
lcall
xor
inc
jno
dec
mov
push
out
push
jl
push
jl
push
mov
pop
jmp
aaa
push
jl
cmp
mov
pop
jmp
mov
push
pusha
push
mov
mov
jae
mov
sub
out
mov
mov
pop
int3
out
std
jmp
std
mov
push
mov
mov
mov
push
jl
push
jecxz
push
mov
pop
pop
mov
sbb
mov
inc
push
inc
mov
mov
mov
cmp
jmp
cmp
sub
push
inc
pop
jmp
xchg
jne
cmp
fbld
es
push
push
es
mov
push
push
inc
es
add
mov
inc
jmp
jne
and
push
push
xchg
push
repz
mov
push
lahf
mov
aaa
fucomip
push
push
push
es
mov
inc
xor
inc
in
out
add
loop
add
jb
mov
mov
sbb
pop
push
mov
aaa
inc
sbb
inc
cmp
jne
inc
cmp
mov
ret
pusha
mov
mov
ret
dec
inc
aam
pop
inc
mov
mov
enter
inc
pop
push
inc
call
gs
push
push
dec
pop
jmp
inc
xor
inc
pop
inc
xchg
push
lds
mov
call
push
jne
mov
inc
adc
and
iret
inc
inc
push
inc
out
sub
push
inc
and
inc
cmp
inc
cmp
inc
and
jle
cmp
testl
bound
testl
sub
leave
cmp
jne
mov
test
push
push
mov
enter
push
push
push
push
mov
sub
mov
fbld
push
push
push
mov
lcall
mov
test
fistps
push
push
push
mov
popf
nop
mov
push
mov
mov
adc
jne
push
push
sub
adc
sub
mov
mov
inc
pop
test
mov
pop
aas
inc
xor
push
pop
aam
mov
push
jne
out
adc
push
push
es
jae
inc
and
inc
cmp
sub
in
sbbl
jecxz
mov
jne
jmp
push
adc
jecxz
aam
mov
sbb
sbb
lds
dec
mov
jne
dec
mov
jne
mov
and
inc
inc
inc
inc
jecxz
inc
inc
and
sbb
call
adc
pop
mov
lds
lds
stc
out
call
sbb
filds
push
push
push
mov
mov
es
pop
push
inc
inc
mov
pop
sbb
fisttps
push
push
push
popa
sub
pop
mov
mov
int3
push
mov
mov
inc
sbb
leave
sub
add
icebp
test
add
jp
add
push
das
fisttpl
shlb
pop
cmp
rcrb
jns
xor
mov
push
je
xlat
imulb
or
sub
jp
sub
int3
es
mov
lcall
adc
pushf
jns
mov
ljmp
bound
adc
jo
lods
sbb
pop
leave
jnp
lcall
push
mov
push
sbb
andl
sbb
loop
mov
addr16
sti
fcoml
sub
xchg
fistpll
mov
or
dec
sbb
cmp
push
jo
orl
ret
cmp
mov
sbb
and
clc
and
loopne
cli
rolb
fcmove
fisubrl
lds
sbb
ror
or
lock
dec
addr16
outsl
outsl
int3
lods
xlat
sbb
loope
das
or
cmp
mov
in
sub
cmp
inc
jo
cmp
xchg
push
adc
cmp
xor
inc
xor
xor
mov
hlt
imul
push
mov
scas
push
pop
enter
daa
outsl
jp
popf
int
xlat
pop
hlt
mov
loope
lcall
or
lcall
lods
test
lods
test
daa
movsb
pushf
test
xor
pusha
fldt
pop
jbe
xor
mov
jp
pop
mov
cmp
add
iret
push
inc
hlt
shrl
jne
gs
mov
bswap
or
sub
in
jb
pop
test
jne
pop
ret
mov
pop
scas
orl
push
jge
lea
cwtl
mov
xchg
cltd
push
pop
imul
les
shlb
out
mov
and
dec
movsb
ds
or
movsb
mov
xchg
jno
sbb
xchg
sub
mov
pop
push
jl
add
cwtl
mov
fs
nop
push
das
jl,pt
imul
std
jae
call
push
repnz
mov
ss
outsb
icebp
mov
mov
frstor
jg
xchg
xor
and
or
test
test
pop
push
into
outsl
dec
int
pusha
loopne
pusha
jo
jp
loope
repz
pop
out
pop
pop
lds
adc
std
in
pop
scas
popa
push
push
popl
and
lret
movsb
xchg
pop
lret
adc
push
mov
leave
lods
dec
cs
bswap
xchg
clc
jp
mov
test
loopew,pn
push
sahf
insl
inc
icebp
or
jne
mov
flds
cs
test
clc
scas
xchg
dec
mov
dec
mov
imull
xchg
or
loopne
mov
aam
inc
pop
jge
fsubs
mov
mov
sti
jp
pushf
sub
pop
popa
pop
sbb
ret
popa
cmp
or
push
aaa
fwait
insb
inc
add
cli
ljmp
movsb
faddl
mov
adc
icebp
xchg
std
bound
pop
negl
outsb
xor
enter
fildl
iret
mov
fwait
insb
push
mov
hlt
cli
cli
sub
aam
shll
icebp
xchg
hlt
push
mov
sub
int
in
arpl
out
adc
sbb
mov
xchg
mov
sbb
add
add
and
lahf
mov
adc
addr16
movsl
xchg
push
mov
in
je
dec
loope
std
sub
shlb
decl
push
adc
outsb
imul
push
subl
je
aam
mov
es
sbb
fmull
fidivs
loopne
stos
xor
popf
mov
cmp
push
leave
insl
aam
shl
jb
sub
test
ss
mov
mov
add
lret
push
jle
or
fcomps
sbb
mov
and
jae
cwtl
shlb
xchg
mov
and
popf
xchg
imul
test
sub
leavew
dec
lret
stos
sub
sbb
ret
jno
mov
stos
es
or
test
cmp
pop
clc
and
mov
mov
xorb
mov
iret
mov
ljmp
les
push
sahf
xchg
add
dec
push
bound
or
popl
icebp
sbb
xlat
sbb
pushf
sub
cli
fnstcw
mov
push
push
add
and
pusha
adc
jo
mov
mov
xorb
adc
inc
rcll
lret
push
mov
pop
add
repz
mov
sbb
fistpl
movb
adc
popf
push
xchg
xor
out
int3
pop
sub
or
fst
adc
dec
fiadds
xor
mov
xlat
jge
stc
push
cmp
add
ljmp
cmp
jle
test
fisubrs
or
cmpsl
push
in
cmp
sbb
sub
inc
bound
lock
pop
rcl
push
js
add
pop
loopne
mov
sub
pop
pop
push
icebp
test
out
inc
lret
addb
icebp
dec
aad
inc
out
movsl
pop
imul
fs
addr16
cmp
sbb
xchg
jg
inc
push
notl
dec
movsb
stc
loopne
or
inc
dec
icebp
pop
mov
loope
or
xlat
mov
xor
jnp
pop
adc
shll
into
shll
jp
pushf
dec
aad
repnz
mov
faddl
or
enter
cltd
cld
les
dec
mov
xchg
adc
mov
adc
bound
je
sub
jnp
int3
inc
nop
push
push
xor
js
cld
ja
mov
xor
push
test
fcompl
sahf
mov
xchg
int3
mov
lret
test
mov
jno
shlb
dec
sbb
cmpsb
pop
in
jno
sub
push
ret
es
in
loopne
loop
add
sbb
arpl
data16
add
cmp
mov
lret
in
xchg
push
outsb
jnp
mov
mov
and
xor
mov
jp
push
inc
mov
std
das
mov
fwait
lret
cmp
fwait
gs
xor
lcall
testl
sub
pop
inc
fildl
lret
cmp
sbb
jns
pop
sar
cmp
adc
outsb
mov
pusha
sub
dec
stc
add
mov
xor
cmp
leave
xchg
cmp
out
jmp
into
pusha
add
adc
outsb
jns
add
lahf
clc
into
mov
xchg
arpl
out
push
push
inc
pop
xchg
fwait
cld
mov
inc
and
loope
or
loop
filds
out
sbb
push
popf
sbb
mov
bound
and
in
jmp
mov
jb
mov
in
ss
outsl
orl
jge
xchg
cmp
cmp
icebp
in
daa
and
mov
jp
aam
dec
es
lods
sub
dec
pop
fcomi
dec
mov
cmpsl
shlb
lret
add
cmp
mov
movsb
fs
push
imul
or
adc
cmp
loop
orl
or
adc
mov
sub
push
mov
and
inc
cmp
push
jns
rclb
mov
ljmp
pop
pop
add
loope
xchg
int3
mov
jmp
pop
xchg
sbb
jp
bound
jbe
call
mov
call
pop
hlt
mov
es
out
mov
xchg
mov
repnz
pop
pushf
jle
ja
into
mov
out
cmpsl
inc
pop
les
or
sub
ss
xor
xchg
loopne
lcall
mov
cli
scas
mov
pushf
stos
orl
jge
cwtl
aas
inc
jmp
jge
cmc
sbb
push
sub
mov
popa
jl
dec
in
pop
je
nop
jp
sub
pop
jg
in
int3
sbb
or
inc
addr16
cmp
nop
mov
roll
std
lods
dec
rcrb
rcrw
xchg
push
fisubs
mov
les
push
sbb
cld
ljmp
and
mov
repz
dec
inc
outsl
push
and
data16
loopne
imul
pop
gs
outsl
pushf
scas
push
addr16
sub
mov
push
sub
ds
or
inc
or
push
leave
sbb
inc
rcl
pop
aad
fwait
mov
pop
add
and
repz
dec
popa
sti
fidivs
test
adc
mov
mov
mov
decl
loope
sti
fwait
jo
dec
fisttpll
movsb
sbb
iret
in
jnp
imul
add
imulb
xchg
adcl
xchg
push
pop
inc
lods
lea
mov
movsb
js
outsb
inc
dec
inc
or
mov
mov
lods
add
scas
or
push
subb
xor
in
mov
sbb
mov
cmc
mov
push
push
jns
fdivs
adcl
inc
add
repnz
and
inc
fbstp
mov
aam
inc
nop
daa
clc
pop
jp
gs
ret
xor
inc
sub
in
mov
out
jbe
mov
scas
fcompl
jmp
pop
fstps
push
mov
add
jns
aad
sbb
inc
rol
push
shrl
sbb
nop
sti
lret
lock
cltd
dec
push
shr
mov
imulb
int
cmc
js
outsb
jecxz
dec
mov
mov
pop
inc
inc
jecxz
mov
xor
sub
sbb
inc
loop
or
mov
dec
int
and
cmp
or
inc
jb
jge
mov
fsubr
xor
mov
mov
out
sbb
adc
pop
lods
push
stc
mov
or
cmpsl
aam
or
push
add
rorb
and
pop
jge
pop
sti
mov
jle
lock
xchg
push
pop
loopne
pushf
or
mov
or
push
popa
int
mov
lahf
xchg
or
int
or
adc
mov
pop
xor
fidivrs
cmp
test
sbb
sbb
out
aam
adc
jl
inc
repnz
pop
pop
cmp
roll
mov
fsts
sbb
cmp
push
or
mov
cmp
push
fistl
dec
cltd
mov
lock
dec
push
pop
pop
cmp
xor
andb
filds
loop
out
inc
add
fisubrs
rcrl
pushf
jne
cli
cmpsl
stc
rorb
mov
pop
mov
in
pop
insb
gs
jecxz
mov
test
pushf
sub
add
aas
out
popf
movb
pop
pop
and
or
fistpll
dec
cmp
push
sub
sub
or
pop
leave
mov
jo
bound
cmc
adc
mov
pop
ret
in
scas
cmp
mov
mov
xlat
insl
xchg
loop
dec
clc
aad
jge
jnp
aas
out
dec
cmp
lret
test
add
pop
shl
and
mov
icebp
jne
mov
dec
and
fcmovnb
inc
test
and
push
icebp
das
sbb
jmp
jl
and
scas
sahf
fiadds
xor
or
or
lcall
jmp
sbb
sbb
mov
adc
js
sub
sub
call
dec
test
popa
push
cmpsb
jge
in
xor
xchg
ss
cmp
mov
sbb
push
push
clc
pop
push
cld
cmp
daa
adc
jno
mov
jo
enter
in
out
stos
dec
sub
sub
sub
adc
insl
cwtl
fisttpll
leave
dec
stc
mov
cmp
or
pop
in
repz
mov
mov
xlat
aas
fmul
mov
dec
mov
subl
cmc
stc
mov
daa
test
xor
pusha
and
dec
repnz
iret
adc
pop
jb
xchg
test
repnz
fcoml
daa
jle
and
xchg
sbb
mov
bound
mov
cltd
or
ljmp
ja
xchg
fdivp
sbb
cs
mov
push
hlt
inc
xchg
movsl
add
mov
pop
push
inc
fstps
mov
je
sbb
and
lret
sbb
loopne
mov
loop
mov
popf
inc
cmp
pushf
into
xchg
out
and
in
lret
popf
push
dec
fiaddl
mov
adc
pop
loope
gs
sbb
mov
scas
faddl
or
loopne
add
mov
fiadds
push
xchg
cmp
mov
fnsave
add
fisttpl
mov
xorb
push
push
aad
xor
arpl
jns
cli
cmpsl
xchg
adc
hlt
add
and
jl
les
sub
mov
adc
xchg
or
mov
enter
scas
sti
pop
imul
and
iret
pop
fldl
push
cmpsl
push
icebp
dec
es
xor
xchg
rcll
fcompl
iret
mov
lods
cltd
xchg
stos
stc
inc
cmp
lahf
out
add
sub
or
scas
div
mov
cld
insb
push
cli
cmpsl
and
lods
insl
sub
dec
jne
mov
sbb
adc
popf
rcl
pop
mov
stos
outsb
negl
outsb
fs
pop
gs
ret
or
lahf
jne
mov
jno
in
sbb
sbb
mov
pop
scas
pusha
es
push
repnz
stos
add
dec
imul
mov
push
cmc
insb
mov
inc
sbb
fstpt
in
xor
imul
cmovae
add
mov
lods
push
lret
push
sbb
test
mov
repnz
sti
and
repnz
or
aam
or
int
outsb
inc
or
mov
mov
mov
adc
rolb
das
inc
mov
sbb
xchg
xchg
sbb
xchg
pop
sti
add
stos
xor
push
test
sub
shlb
xlat
xchg
inc
pop
push
les
mov
popa
test
jge
cli
jmp
xchg
cltd
aad
sub
dec
in
in
lret
lods
rcll
adc
cmp
arpl
add
test
out
call
sbb
mov
cmpl
mov
in
loop
aam
jp
add
in
sbb
pop
dec
das
or
mov
ret
dec
push
sub
fst
scas
into
cmp
sub
mov
push
push
mov
out
cmp
das
push
xchg
jg
aad
int
or
je
insl
cmpsl
lods
jns
add
xor
scas
xor
sti
nop
roll
nop
mov
stc
pop
inc
movsb
jnp
or
adcb
or
stc
push
loope
lods
mov
jns
dec
outsl
pop
cmc
mov
sbb
dec
jmp
push
add
inc
cmpsl
adcb
stos
mov
or
sub
sub
xchg
inc
pop
pop
int
test
pushf
add
mov
aad
mov
mov
add
push
cmp
xchg
push
dec
sub
fisttps
mov
ret
sub
into
mov
les
ret
pop
sub
jnp
adc
insb
popf
jl
mov
out
int
hlt
clc
sbb
sbb
cmp
add
in
adc
sub
fwait
cli
add
test
in
add
fistl
dec
mov
imul
decl
pushf
push
inc
stc
shll
jl
stc
add
push
push
xor
lret
mov
insb
rcll
fdivrs
fisubrs
mov
je
lock
aad
or
mov
in
sarb
not
sub
push
jl
mov
std
fistps
hlt
fnsave
mov
push
inc
add
out
push
mov
adc
dec
xor
out
hlt
sahf
xor
mov
push
add
push
sub
pop
addr16
jmp
ljmp
repnz
out
es
rolb
push
inc
cmp
das
das
fdivrl
cmpsb
leave
rorl
leave
and
mov
adc
sbb
pop
outsl
and
lahf
push
cmp
jecxz
dec
je
pop
movsl
add
aad
mov
fadds
xchg
add
repnz
jg
add
adc
outsl
sahf
push
xor
sbb
or
inc
leave
fisttpl
int
xchg
mov
or
inc
jg
inc
jmp
ds
insb
data16
mov
or
loopne
insl
ret
mov
sbb
jbe
popa
cmp
push
test
repnz
pop
call
push
jle
arpl
xchg
xlat
push
scas
leave
inc
add
push
lretw
sahf
leave
clc
sbb
xchg
fcoml
mov
sub
sub
inc
jge
pop
out
sub
insb
xor
xor
cltd
adc
fwait
cmp
sbb
jmp
push
mov
pop
popa
mov
sub
xchg
scas
jae
xchg
cmp
xor
add
scas
inc
push
loopne
sbb
sub
pop
lcall
ficomps
jnp
xchg
clc
pop
mov
jle
xor
pop
xor
cmc
pop
sub
enter
test
and
lock
in
xor
addr16
outsl
test
cmp
cmp
jnp
dec
adc
ss
test
mov
and
das
jmp
stos
into
nop
and
lcall
addl
cmp
dec
sub
jno
inc
movsl
ror
orl
pop
push
sub
mov
imul
pop
mov
fisubs
mov
test
and
lcall
adc
ret
xchg
outsb
std
cmpsb
add
sbb
cltd
fisttpl
push
outsl
repnz
xor
mov
jge
data16
adc
lock
sub
mov
mov
xchg
lret
imul
cmpl
ss
and
push
xlat
repnz
mov
push
dec
flds
stos
leave
test
aas
xor
add
insb
adc
pop
jp
divb
jo
out
andl
aam
das
nop
scas
jae
pushf
test
and
dec
in
test
mov
pusha
push
fbld
cld
cmpsb
jmp
ss
stos
repz
ret
inc
sub
arpl
xchg
subb
cmpsl
mov
mov
jns
cmpsl
mov
jo
xchg
leave
cmpsl
aas
pushf
lds
inc
cmpsb
rcrl
push
cs
ja
push
pop
insb
jg
je
dec
cld
and
in
outsl
xor
add
imul
aad
sub
pop
int3
aas
repnz
xchg
jl
mov
dec
add
cmp
in
mov
insl
aam
sbb
movsb
cmp
and
gs
inc
mov
xor
pop
jb
stos
fsubl
xchg
mov
adc
mov
adc
cwtl
icebp
xor
push
sbb
int
insl
jl
in
mov
adc
add
ja
xchg
mov
rorb
pop
test
lods
in
fistpll
movl
sbb
dec
push
pop
fistpl
lea
adc
pushf
stos
in
xchg
insb
sub
jns
add
int3
pusha
adc
jo
iret
mov
and
jbe
push
test
ljmp
repnz
das
push
dec
ret
js
jbe
jae
imul
adc
pop
ja
in
and
jle
cltd
pop
js
cmp
and
add
dec
cmp
dec
jb
clc
addr16
cmp
jl
cmpsb
mov
push
outsl
push
xor
in
push
fdivr
rorb
jae
sub
or
fstl
out
fildl
mov
jl
ror
arpl
mov
pop
loopne
pop
push
insl
push
negl
add
daa
push
cmpsb
mov
in
inc
iret
fbld
test
pop
adc
insb
push
jns,pt
xchg
std
ja
test
stos
addr16
cli
jg
test
sbb
mov
push
movsb
movsl
cmpsb
fbstp
pop
mov
or
cmp
pop
mov
lret
mov
repz
dec
push
loop
jecxz
enter
fidivs
pop
pushl
pop
push
ss
cmp
xor
lret
xor
arpl
add
call
cltd
fidivrl
dec
arpl
push
dec
jg
repnz
pusha
mov
ja
mov
push
das
loopne
js
jge
xor
pop
cld
test
xor
mov
lock
jnp
pop
push
adc
sub
movsb
sbb
dec
fistl
loop
fisubs
mov
sahf
cltd
push
lret
inc
cmpsl
mov
in
xchg
les
out
test
push
mov
loopne
mov
fimull
or
adc
scas
mov
js
sti
pop
popl
mov
dec
cmp
sbb
js
sahf
lcall
adc
mov
xor
xor
xor
mov
push
xchg
xchg
jne
mov
in
add
pop
add
cmpb
dec
mov
xor
insb
push
and
inc
pop
and
lds
fmull
loopne
push
mov
fnstcw
test
out
cli
add
xchg
sahf
or
pop
xchg
pop
xor
in
testb
loop
and
fisubrs
stos
lret
ja
push
pop
fstpt
add
out
pop
sub
dec
dec
mov
push
std
pushf
pop
mov
mov
mov
mov
imulb
sbb
pushf
sub
test
data16
mov
push
lods
fdivl
enter
je
test
mov
dec
ljmp
js
dec
dec
shll
popa
pop
repnz
mov
das
push
pop
loopne
jecxz
mul
mov
inc
sbb
add
sti
cmpsb
mov
push
sahf
repz
cmp
repz
divl
push
gs
inc
push
imul
in
push
jns
es
xorb
insb
push
lret
bound
push
enter
mov
call
dec
loop
push
out
dec
sti
add
cmp
call
adc
adcl
cmc
add
rorb
adc
jb
imul
pusha
sahf
inc
cmpb
test
loopne
fdivl
mov
pop
arpl
adc
and
imulb
aad
icebp
dec
pop
or
add
dec
or
pop
ljmp
xor
ret
add
in
pop
stc
imull
mov
inc
cli
sti
sub
iret
aam
lcall
dec
imul
and
into
into
fisubl
adc
filds
movsl
pop
ret
out
in
daa
int3
lahf
outsb
scas
pop
loop
aaa
jae
sub
scas
cmpsl
cmp
lods
lret
push
cli
out
pop
adc
jge
es
push
cld
xor
mov
movsb
int
jecxz
add
das
cmp
jecxz
das
ljmp
in
or
dec
dec
pushf
jae
imul
mov
pop
mov
push
iret
cmp
pushf
mov
cmp
xor
test
inc
outsl
sbb
dec
xchg
fstpl
fnsave
fisubl
mov
inc
das
loope
ja
lods
test
movsb
dec
mov
inc
dec
mov
jl
shlb
pop
sarb
mov
iret
mov
aas
mov
sub
inc
negb
adc
push
pop
push
je
cwtl
mov
mov
shll
sub
push
xchg
pop
fs
inc
imull
sbb
jo
lahf
cmc
test
sub
jb
jo
je
mov
push
cmc
testl
aad
xchg
enter
cmpsl
mov
stos
sub
and
adc
inc
inc
sbb
jle
repnz
sub
les
lcall
dec
or
mov
cmp
xor
mov
xchg
call
popa
inc
stos
add
mov
mov
movsl
mov
xor
adc
fdiv
insb
adc
in
les
or
lcall
cmp
ljmp
movsb
ret
mov
xchg
int3
test
ss
push
aam
jb
mov
xor
or
push
mov
aaa
scas
jecxz
pusha
mov
fst
sub
int3
mov
out
ds
in
mov
in
mov
push
mov
test
repz
xor
ret
call
mov
popl
cmp
push
sti
or
push
fcomi
or
push
mov
push
mov
sbb
mov
xor
hlt
dec
mov
daa
xchg
add
aam
fimull
outsb
nop
cmc
or
or
in
out
mov
adc
mov
fstps
subl
fildll
jge
pop
lret
mov
pop
mov
mov
jae
xchg
int3
adc
popf
jae
mov
lea
arpl
fdivl
loope
inc
outsb
mov
in
out
inc
inc
inc
jmp
xlat
sub
loopne
pop
sub
ja
cltd
outsb
cmc
insl
jg
outsb
sub
jecxz
sub
pop
rcr
inc
fisttpl
fbstp
cmp
shl
mov
cmc
cmpsl
dec
add
inc
test
ds
sbb
repnz
aad
mov
adc
lods
sbb
xchg
dec
cmp
sbb
lock
cmp
xor
or
push
pop
lcall
xchg
jecxz
mov
insl
scas
cld
push
fldl
aam
cmp
push
scas
insb
shlb
fdiv
aam
cmp
cwtl
mov
test
push
sbb
imul
push
and
repz
lods
or
push
pop
jb
mov
testb
ret
ss
push
bound
ret
xor
mov
push
arpl
jg
je
aad
dec
push
push
cmc
lretw
movsl
cltd
mov
sub
mov
sahf
or
addr16
adc
ficoms
xchg
jl
mov
mov
sbb
popf
xchg
arpl
cs
je
xrelease
imulb
jns
lock
cltd
in
rcr
leave
push
mov
je
or
test
aam
mov
mov
adc
aas
jns
xor
lock
jne
sub
cmpsl
popf
push
data16
mov
cmc
bound
outsl
jmp
mov
in
push
ret
or
adc
and
popf
gs
pop
push
imul
add
and
fistpl
jl
pop
shll
sub
and
sub
dec
cmc
hlt
pop
or
testb
lret
clc
mov
push
stos
popf
test
jbe
pshufw
mov
stos
loopne
inc
lods
scas
insl
push
jmp
fistpll
push
scas
js
testl
mov
add
sub
cld
cmpsb
pop
neg
stc
dec
jmp
aad
mov
pop
gs
push
sbb
or
adc
jno
cltd
pop
dec
out
outsl
out
mov
xor
lock
push
cmpsb
jle
loopne
lods
ds
fldenv
fidivl
push
add
ret
mov
int
mov
lret
mov
daa
imul
loopne
cmp
pop
mov
lcall
pop
xchg
pop
dec
mov
aad
xchg
movsl
test
xor
sbb
ror
mov
cmp
in
sbb
mov
lret
imulb
xchg
adc
insl
pop
dec
pop
and
addl
xchg
sbb
lea
cmp
ret
aas
ret
mov
mov
pop
jge
bound
daa
mov
xchg
aas
sbb
lahf
cmp
lods
or
ret
ror
je
sub
call
outsb
inc
sbbb
int
out
sbb
dec
inc
scas
test
adc
pop
out
pop
push
push
aad
inc
xchg
pop
push
ret
test
pop
pop
movsl
or
subb
xor
andb
cmpsl
xor
xor
dec
sub
xchg
loop
mov
test
sbb
adc
and
cwtl
and
repz
repnz
adc
mov
sti
ret
pop
or
mov
out
out
sbb
ret
jo
loopne
imul
dec
or
sbb
jmp
pop
sbb
inc
xchg
int
cltd
dec
cmp
lahf
scas
pop
and
fsubrl
add
fwait
pushf
lds
cmp
in
loope
add
arpl
and
xchg
sarl
sub
push
mov
stc
cmpsl
and
sti
pop
mov
clc
fwait
sbb
in
sbb
mov
das
imul
pop
push
sbb
push
pop
dec
ret
and
stos
sbb
lcall
push
and
dec
dec
sbb
scas
mov
jp
push
or
xor
mov
lock
imul
mov
faddl
fdiv
xor
insl
jg
mov
stos
sub
stos
jecxz
daa
mov
cmp
mov
pushf
add
cmp
add
daa
insb
leave
mov
testb
mov
mov
xor
pop
and
cmpsl
mov
outsl
aam
lods
xchg
adc
cli
cmp
aas
cs
dec
pop
rcr
pop
stc
bound
mov
inc
lahf
lret
xor
pop
xchg
and
in
inc
xchg
add
dec
jne
out
ss
inc
hlt
jno
mov
xchg
dec
shlb
jmp
mov
lods
pusha
daa
mov
mov
in
aas
je
mov
aaa
jmp
jno
aam
xor
adc
addr16
fisttpl
lcall
leave
pop
jae
or
stos
shrb
dec
arpl
cs
adcl
and
pop
cld
jle
out
test
sbb
es
xchg
aad
int3
pop
fstl
dec
xchg
das
stc
in
add
lods
lods
jae
mov
cmp
inc
fnsave
ret
je
shlb
ljmp
inc
in
loope
mov
sbb
cmp
stc
jmp
xchg
xchg
xor
push
and
es
push
bound
lods
inc
pop
testb
loope
cmp
sbb
imul
and
add
mov
and
hlt
and
loope
ret
mov
sarb
jae
adcb
inc
xchg
cmp
and
lret
cld
gs
or
fst
popf
xor
mov
bt
mov
inc
and
and
push
aad
sub
jno
iret
pop
or
push
es
popf
les
in
ds
xor
xchg
add
jns
aaa
out
mov
mov
dec
mov
lret
es
pop
mov
cltd
cmpsb
ljmp
mov
pop
mov
or
out
roll
cmpsl
insb
inc
dec
sarb
mov
sub
rolb
filds
inc
clc
push
and
xor
adc
insb
sar
pop
test
push
sub
ret
mov
popf
cmpsl
popf
xchg
push
icebp
cmp
aas
subl
iret
sub
jae
inc
gs
jmp
out
sub
adc
jge
mov
nop
ja
sub
popa
mov
movsl
push
and
xchg
movsl
aam
xor
cmp
bound
xchg
jae
mov
adc
gs
jne
arpl
sbb
iret
and
in
xor
jb
cmpsl
cmp
push
in
mov
jb
and
int
mov
orl
pop
or
jge
lcall
lock
or
hlt
and
lahf
add
movsl
jne
or
xor
imul
arpl
inc
lock
std
dec
pop
ret
mov
add
pushf
lahf
les
pop
out
xor
and
add
fnstcw
sub
gs
push
mov
imul
mov
fucomi
adc
lret
inc
mov
scas
inc
jbe
inc
jecxz
push
imul
fs
lret
dec
inc
xor
mov
imul
mov
cmpl
pop
push
stos
sub
mov
mov
pop
adc
inc
out
daa
or
sbb
cmpsb
dec
dec
imulb
std
loope
and
fcompl
imul
jecxz
mov
inc
pop
xchg
mov
cmp
jbe
sbb
pop
adc
mov
test
xchg
sbb
add
jmp
cmpsb
cmp
sub
pop
jg
jae
jmp
jecxz
clc
cmp
dec
icebp
inc
jbe
fidivrs
int3
pop
inc
shlb
mov
add
pop
pop
dec
imul
stos
push
adc
or
mov
jnp
out
loope
or
xor
mov
inc
cli
ja
dec
dec
adc
cmpsl
pop
mov
mov
mov
and
and
add
sbb
and
cmp
scas
sti
icebp
mov
jmp
add
lods
mov
sbb
push
ret
pop
mov
clc
and
sarl
xchg
daa
xchg
test
jb
mov
stc
js
add
stos
push
out
xor
iret
pushf
fisubl
jbe
inc
roll
jbe
ss
and
jns
dec
dec
add
jp
cmp
jb
dec
lods
adc
das
jno
and
push
and
mov
adcl
and
xchg
adc
sbb
cmp
ds
and
push
arpl
push
inc
dec
repz
test
mov
sbb
scas
mov
gs
xor
xchg
fisubrs
mov
dec
cmp
or
push
cmp
repz
jae
insb
cmp
leave
xor
push
push
xor
and
xchg
sahf
inc
pop
out
sarl
adcb
insl
rolb
cmp
idiv
ds
add
xor
imul
das
and
jae
cli
jp
roll
iret
das
imul
push
cmc
push
outsb
int
mov
cmp
pop
pop
fxch
movsb
adc
popa
adc
mov
sbb
loopne
adc
popf
xchg
mov
adc
xchg
pop
and
xchg
std
sbbl
ret
pop
lahf
cld
pushf
cmp
sbb
adc
andb
into
adc
nop
rclb
neg
gs
sub
iret
pop
sahf
push
sahf
jns
faddp
and
test
cltd
inc
es
iret
out
iret
xchg
sub
rolb
push
push
push
sbb
mov
mov
cmp
and
add
push
sarl
mov
cmp
outsl
stos
adc
xchg
sbb
cli
sbb
lods
imul
iret
rorb
sti
jmp
ret
icebp
std
jecxz
test
loope
xchg
and
and
push
dec
add
xor
iret
ret
sbbl
cmp
push
mov
sbb
loope
and
lahf
and
inc
adc
and
add
adc
in
pop
and
and
jnp
mov
pop
or
aam
and
jg
or
mov
dec
dec
add
jb
jl
out
insb
pusha
fstps
xlat
add
sahf
push
sarb
jmp
pop
sub
scas
loope
push
add
lret
fwait
mov
lret
scas
aas
inc
fldcw
call
push
scas
call
pop
outsb
stos
jns
adc
lods
inc
dec
ror
icebp
xchg
jbe
push
push
sbb
jg
das
rorb
cmp
movsl
int3
gs
push
psrld
inc
jno
shrl
sbb
xor
lock
lea
push
shrb
test
xor
xor
mov
jecxz
and
ret
mov
sub
int
sub
adc
mov
stos
scas
in
filds
dec
movsb
adc
popa
push
rcrb
ljmp
popa
mov
fdiv
mov
jnp
push
xchg
loopne
call
movsb
data16
jmp
sbb
inc
roll
dec
ljmp
mov
rcr
mov
lret
lahf
and
jmp
movsb
dec
jecxz
push
icebp
sub
sub
shlb
push
push
push
and
pop
mov
cld
mov
adc
push
sti
pop
cltd
or
out
and
xchg
sbb
jnp
clc
test
mov
daa
clc
lret
inc
or
jge
mov
cmc
test
xor
xor
cmp
test
xor
inc
inc
inc
fisttpl
call
popf
ds
lods
mov
clc
or
mov
mov
sub
push
fs
pop
xor
stos
ret
mov
add
scas
mov
aas
je
dec
andl
adc
sbb
sub
lahf
xchg
push
mov
lahf
lret
adc
pop
pop
faddp
pop
popa
aad
xchg
xchg
loop
loop
enter
sub
stc
inc
rorl
push
xor
movsb
das
mov
mov
pop
xchg
xorl
in
mov
adcl
sub
in
data16
popf
xchg
lea
repnz
popa
sti
xor
push
les
sbb
and
adc
imul
mov
inc
aas
rcr
out
popa
jae
mov
jle
pushf
mov
mov
mov
sahf
arpl
jl
add
popl
jo
push
das
nop
fnstenv
mov
mov
cmp
mov
fcomi
std
pop
jmp
jbe
cmpsl
dec
cmp
dec
movsb
frstor
int3
aad
scas
pop
mov
ret
out
pop
pusha
mov
pop
pop
cltd
in
fucomp
mov
xlat
lods
in
shlb
adc
and
push
pushf
insl
pushf
mov
test
jno
xor
dec
mov
mov
xchg
int
inc
incl
xchg
mov
push
les
inc
adc
sbb
push
cmp
loop
test
mov
jl
inc
pop
inc
ss
lock
sbbb
sbb
lock
dec
shl
or
out
popa
testb
or
cs
add
movsb
ret
xchg
xchg
in
ds
loop
rorb
add
std
int3
add
js
mov
mov
sbb
imul
cmp
lret
fisubs
push
adc
fisttps
aaa
popf
push
int3
push
pop
std
cli
xchg
xor
jbe
ds
jge
pop
xor
add
es
cld
scas
push
fs
pop
test
out
dec
mov
scas
push
ja
in
sbbl
arpl
scas
lcall
or
shl
push
cmp
stos
add
movsl
push
pop
jmp
dec
mov
mov
cmp
jmp
xchg
push
fists
fcompl
lea
rcr
push
outsb
lahf
aad
sbb
stc
stos
gs
subl
xchg
jecxz
sub
sti
push
pop
pop
mov
xchg
jmp
sbb
jo
enter
ret
or
lods
es
cmp
movsl
movsl
dec
pop
dec
lcall
cmpsb
push
jnp
xchg
aaa
jecxz
rolb
lea
mov
sbb
hlt
mov
and
out
sub
sahf
mov
push
aam
jge
fstp
loopne
aad
push
fimull
cli
sti
mov
dec
js
jecxz
push
dec
pushl
cmp
movsb
push
lea
aad
out
rorl
mov
xchg
mov
push
out
aad
movb
and
push
or
push
xor
dec
mov
stc
xlat
into
arpl
cmpsl
popa
leave
fmull
cmp
lcall
into
dec
mov
mov
stos
mov
repnz
sub
stos
dec
sahf
adc
fs
pop
scas
dec
push
ret
inc
fildl
inc
pop
jg
imul
outsb
test
pop
sbb
shrl
cmp
or
push
les
sub
mov
jae
cmpsb
sub
enter
adc
push
aaa
rclb
mov
cltd
or
sti
sub
push
roll
in
test
xchg
lret
test
fistps
adc
leave
mov
xorb
or
out
jns
pop
add
addl
popf
mov
shll
mov
lods
sbb
int
ds
mov
sti
adc
sbbl
out
mov
mov
inc
in
push
sub
into
popf
hlt
sbb
enter
mov
out
pusha
cli
mov
inc
bound
push
cmpsl
xor
inc
hlt
xor
dec
xchg
movsl
jecxz
pop
les
xor
cmp
int3
push
call
leave
shlb
sbb
jmp
fcomps
ror
mov
call
dec
mov
push
mov
fcmovu
lcall
xor
push
xor
jecxz
std
mov
cltd
imul
jmp
fcomps
sub
sbb
and
inc
scas
or
inc
popf
bound
mov
xor
js
jbe
mov
mov
dec
rcll
xchg
mov
xchg
arpl
stos
or
addr16
cmp
lea
lcall
adc
cmpsb
mov
arpl
sbb
dec
je
adc
outsb
cmp
pop
inc
xchg
pop
dec
sarl
negb
ja
add
adc
popf
mov
outsb
lods
add
arpl
cs
ret
popl
test
in
jmp
aas
sub
and
push
pop
dec
adc
imul
push
fsubrl
mov
jne
cmpsb
mov
loopne
inc
inc
sarb
cmc
mov
pop
gs
adc
in
rcll
sub
cmpsb
cltd
aas
cmp
lods
sbb
adc
sbbl
aam
dec
adc
leave
popf
cmpsl
dec
add
sbb
push
in
lcall
and
mov
cld
dec
out
in
mov
and
in
cmp
daa
rcrl
inc
iret
jno
stos
pop
and
loope
movsb
jnp
gs
shlb
imul
ret
jge
jno
dec
push
jno
xchg
inc
cwtl
xchg
pop
sahf
push
jo
push
sub
aas
pop
popf
dec
lahf
les
pushf
sub
in
aad
gs
inc
inc
pop
fsubr
out
pushf
xchg
pop
add
leave
aas
dec
aaa
pushw
adc
ja
cmp
insb
mov
xor
jae
in
mov
jmp
push
loop
and
jle
push
inc
mov
jecxz
mov
jle
cli
cmp
movsb
push
repnz
xor
rcl
repz
add
dec
imul
lock
mov
stc
or
cmp
and
jp
or
je
fcmovbe
addb
sahf
xchg
add
inc
push
push
mov
in
movsb
adc
int3
scas
jb
mov
hlt
iret
pop
fiadds
mov
hlt
stc
in
lahf
push
jnp
addl
loope
stos
sbb
negb
xchg
ror
dec
add
adcb
jge
call
xor
inc
scas
insl
dec
clc
jp
in
xor
xor
jno
push
cmpsb
pop
add
sbb
jo
sub
je
ret
dec
cs
aad
xor
int3
cmc
lahf
icebp
mov
popf
dec
and
dec
and
and
jge
jmp
cmp
call
pop
cmp
dec
jmp
pop
push
mov
lods
and
jbe
adc
push
push
sbb
pop
push
nop
mov
cmp
pushf
adc
mov
ficoms
mov
pop
hlt
mov
popa
inc
jecxz
dec
fcoml
movsb
fildl
sbb
adc
xor
xchg
or
dec
in
test
popf
and
add
test
addr16
les
out
sti
or
cmpsl
aaa
inc
sbb
aas
push
stos
pop
jg
loopne
outsl
rcrb
push
adc
add
pushf
mov
sti
iret
out
xchg
aam
bound
sub
mov
scas
mov
jl
popf
push
sub
xchg
loope
imul
pop
into
pushf
incb
cwtl
sbbb
mov
push
xor
mov
mov
pop
rcrb
adc
fcmovnbe
mov
mov
cmp
repz
inc
lea
inc
cld
stos
mov
mov
fsubl
stos
mov
pop
mov
jno
cmpl
sahf
loopne
push
add
not
jnp
adc
lret
popf
aas
test
ret
mov
mov
pop
pop
xchg
jmp
test
bound
push
in
dec
push
sahf
xchg
test
scas
aas
rcrb
cmc
enter
mov
mov
cltd
cmc
and
xchg
jb
cmpsl
sub
xor
xor
enter
ljmp
pushf
pop
adc
cwtl
mov
sbb
out
pop
adc
or
mov
mov
lods
loopne
jl
mov
sbb
in
outsl
stos
push
negl
pop
into
jns
mov
mov
insl
pop
je
jl
es
inc
sub
xchg
or
ffreep
popf
popaw
jbe
mov
in
clc
pop
push
outsl
mov
fwait
push
xor
lret
cmpsl
push
sahf
pusha
pop
dec
xchg
add
mov
adc
mov
push
or
es
out
lcall
jecxz
add
cmp
and
jno
push
lret
lds
sbb
mov
mov
xor
lret
test
out
out
cmp
xor
mov
add
jo
mov
push
add
xchg
xchg
dec
aaa
clc
cmp
sahf
cmp
jl
call
enter
and
sub
mov
pop
addr16
xchg
fildll
jge
mov
xchg
out
mov
sub
or
pop
sub
ror
xchg
pop
mov
mov
in
daa
inc
cmp
sarl
scas
daa
mov
xchg
xchg
jbe
mov
int3
lret
dec
outsl
aad
es
jp
mov
mov
sbb
or
pop
jmp
mov
leave
adc
add
mov
mov
pop
mov
lret
or
ljmp
dec
ljmpw
ljmp
cmpsb
dec
inc
pop
int
jl
call
mov
into
mov
pop
mov
sub
fstps
js
aad
jge
xor
inc
cli
jg
lock
test
and
ret
push
filds
inc
mov
dec
cmp
cmp
add
sahf
notl
inc
sti
lcall
push
xchg
add
sbb
pusha
mov
pop
jns
pop
cmp
aaa
sbb
jg
cmp
jns
test
adc
jmp
or
sbb
movsb
in
or
inc
imul
lret
lods
bound
pop
les
lahf
jae
repnz
mov
push
or
jb
mov
clc
push
nop
sub
mulb
fucomp
cmp
cmp
repz
scas
out
jae
jo
cld
lcall
fbstp
sub
insb
mov
cmpsl
add
jle
aaa
popa
dec
inc
es
iret
sbb
incb
cld
adc
sbb
pusha
add
call
mov
xchg
inc
jne
sub
pop
pop
inc
daa
xor
outsb
andl
repnz
add
inc
in
adc
jp
movsb
sub
insl
and
pop
add
imul
aaa
sbb
inc
cmp
enter
out
fcom
aam
ret
icebp
movsb
cmp
lods
dec
dec
push
clc
iret
popf
jne
add
xor
hlt
and
nop
out
xchg
xor
in
mov
aaa
xchg
in
jecxz
lods
rol
xor
jae
movsl
jl
dec
mov
or
or
in
jmp
and
ret
rolb
sbb
stos
mov
sahf
dec
cmp
ret
fisttps
xchg
adc
mov
mov
or
sbb
std
mov
leave
fidivrs
sbb
test
and
adc
pop
fmuls
rolb
pop
or
dec
cvtpi2ps
incl
mov
loope
jg
inc
xor
lock
push
xor
cmpsl
mov
enter
inc
push
cmpsl
loop
pop
out
leave
cld
sbb
adc
add
or
add
push
jo
std
sub
xchg
or
push
cli
inc
movaps
bound
xchg
pop
stc
popf
incb
sahf
push
xchg
mov
out
mov
sbb
adc
push
addr16
insb
in
cmp
les
xchg
leave
jg
xlat
adc
dec
jmp
jo
sbb
stos
int3
stos
out
sub
adc
shl
fidivl
aas
dec
or
ret
out
test
inc
test
push
insb
orl
ret
je
pop
cmp
call
hlt
arpl
or
out
mov
lahf
or
sub
ret
std
or
mov
int3
cmpsl
push
push
jae
mov
sbb
nop
and
enter
cmc
cmpsl
inc
sti
push
pop
mov
andl
add
fstl
cmp
mov
cs
mov
pop
jne
add
push
lcall
ret
mov
ljmp
fisubs
pop
sarl
lcall
adc
lcall
pop
push
xorb
xlat
inc
out
sub
lret
jne
sbb
cld
dec
xlat
aad
dec
jp
sbb
js
xor
iret
sbb
cmp
mov
mov
std
leave
das
rorl
and
out
pop
lret
sbb
lret
cs
imul
mov
xchg
fstps
cmp
loopne
fdivrl
iret
icebp
pop
push
hlt
stc
inc
mov
mov
imul
aas
jecxz
add
leave
inc
adc
mov
xlat
mov
sub
sbb
js
push
lret
sarl
adc
pusha
xor
adc
xchg
jns
cltd
fldenv
mov
xor
add
inc
movsl
mull
jno
push
cmp
push
cmp
push
push
daa
sbb
bound
mov
jno
mov
mov
push
pop
in
aad
mov
xchg
shlb
dec
mov
inc
xlat
push
test
add
rclw
push
shr
and
xchg
stc
add
jge
mov
fcmovne
and
cmp
or
mov
mov
shrl
idiv
inc
mov
cmp
dec
jle
mov
testb
xor
mov
testl
and
push
popf
mov
xchg
add
pop
into
dec
sarl
mov
pushf
or
outsb
pop
nop
cmp
xor
in
lods
or
stos
pop
or
cmp
icebp
adc
cli
sbb
xor
outsl
idivb
jb
mov
jmp
aaa
dec
cltd
dec
fsub
and
cmc
mov
inc
sbb
lods
pop
cwtl
jmp
jmp
and
fisttps
push
xor
insl
mov
jecxz
setae
jmp
cld
push
fisubl
arpl
pop
mov
dec
push
lret
xchg
jno
lods
out
ja
jecxz
cltd
imul
push
mov
icebp
mov
push
rcl
xor
es
sbb
push
fucom
mov
imul
lds
scas
xor
hlt
loope
xor
mov
or
pop
or
ja
lcall
dec
xor
in
shlb
les
mov
movsb
xor
lret
push
push
pop
sbb
frstor
mov
cli
popf
mov
add
xchg
mov
daa
dec
rclb
xlat
pop
sahf
push
aas
lods
or
adc
adc
mov
push
and
adc
outsl
and
pop
pop
or
mov
sbb
cli
mov
ds
subl
lds
adc
pop
inc
dec
xchg
or
inc
add
insb
mov
daa
dec
in
xchg
push
js
pop
insb
mov
mov
push
mov
sub
sub
add
call
cmp
hlt
sub
outsb
popa
pop
inc
dec
lahf
pop
sti
mov
dec
sbb
jnp
jmp
out
ja
push
int3
add
bound
fsubrs
test
aam
add
sub
ret
outsb
pop
leave
jmp
mov
jle
lret
movsb
dec
out
sbbb
mov
insb
lds
xchg
ja
mov
mov
push
movsb
jle
fists
sub
or
cmc
je
ds
sub
cli
ja
mov
nop
iret
scas
lcall
add
xor
inc
int3
addl
rcll
leave
sbb
cli
inc
inc
imul
or
adc
mov
mov
cmpsl
es
arpl
mov
mov
out
dec
add
mov
cs
xor
and
fcmovbe
and
inc
and
jbe
sub
pop
cmp
inc
dec
repz
cltd
push
gs
sub
iret
shlb
adc
outsb
cmp
pop
sti
lcall
in
test
roll
mov
dec
sbb
sbb
rorb
add
adc
dec
or
cltd
mov
xchg
cmp
icebp
repnz
or
daa
xchg
popa
das
dec
ljmp
cmp
jb
lahf
sub
cmpsb
in
clc
sahf
mov
fildll
dec
dec
mov
pop
ret
aas
dec
adc
out
inc
outsl
repnz
jb
mov
addl
fs
pop
and
or
daa
insl
fsts
push
sahf
sbb
movsl
push
mov
cmc
cmpsb
xor
lret
inc
jmp
adc
out
ficompl
out
add
jg
rep
ljmp
xor
mov
or
xor
mov
scas
in
mov
sbb
mov
xchg
add
pop
test
push
pop
pop
pop
loop
lods
add
adc
dec
push
pop
mov
divl
and
sahf
push
lds
push
mov
pop
push
mov
ret
jno
xchg
sbb
pusha
xchg
iret
xor
dec
gs
adc
push
pop
dec
add
cmp
and
dec
ljmp
repnz
pop
es
jmp
fistl
xchg
xchg
and
mov
scas
jmp
sub
scas
push
pusha
add
jge
mov
sti
sub
pop
jg
lcall
cli
out
dec
pop
roll
cmp
adc
insb
inc
loop
xchg
inc
push
mov
pusha
cli
jmp
out
pop
aad
mov
cmp
xor
lcall
jmp
test
dec
in
xor
push
mov
and
mov
push
pushf
add
mov
push
bound
fadds
imul
lret
mov
stos
dec
xor
scas
push
fildl
jo
and
inc
test
repnz
xor
sbb
js
cli
xor
stos
jb
and
mov
insl
dec
dec
adc
or
mov
push
xchg
xor
enter
fstpl
ja
outsb
js
adc
pop
into
sbb
das
mov
adc
inc
leave
sbbb
loope
shr
scas
inc
aad
scas
mov
shlb
xchg
or
dec
cmp
lock
push
push
sub
xchg
jae
adc
jl
ss
dec
cmpl
pushf
popf
mov
add
jne
xor
jmp
jae
adc
xchg
xchg
int3
sar
insb
sbb
adc
sub
aaa
push
mov
fsubrl
sahf
fstl
or
loope
dec
mov
rcrl
adcb
xor
mov
sbb
aas
add
adc
insl
xchg
jge
fadds
adc
mov
cmp
pop
mov
sbb
sbb
dec
test
stos
rol
ljmp
shll
xchg
or
leave
add
fldt
imul
mov
inc
incl
into
and
hlt
sahf
mov
fisttpl
jge
push
push
data16
imul
repnz
fsubrs
fcom
pop
add
push
push
daa
outsb
inc
sbb
std
outsl
xor
xchg
popa
dec
pop
jecxz
cmp
test
outsb
xor
ret
mov
or
push
iret
cmpl
jle
and
js
pop
leave
fistpll
mov
add
inc
mov
xchg
inc
shrb
lea
mov
pop
in
cmp
push
test
sahf
and
stos
cli
loope
cmpsb
xor
lods
push
mov
mov
push
icebp
bound
push
insl
mov
push
repnz
ja
sub
push
fcomp
mov
mov
add
in
sub
movsb
popa
sbb
push
neg
inc
aam
cmp
inc
xchg
int
pushf
sbb
pop
mov
notb
mov
in
inc
ret
hlt
mov
movsb
setno
sbb
mov
xchg
cmpsl
pop
xchg
insl
push
shrl
es
sub
jb
popa
es
push
inc
rcll
ret
and
cmc
mov
int3
sbb
push
add
push
enter
imul
wrmsr
lret
inc
jg
lret
mov
ss
adc
pop
mov
fcom
in
fs
fmull
xchg
lods
and
add
js
push
jno
scas
mov
daa
jns
test
inc
dec
jne
dec
adcb
inc
push
test
mov
push
push
fcomps
push
mov
cmpb
in
sub
push
or
adcl
aam
xchg
xor
arpl
cltd
out
fsubl
pop
adc
jne
imul
mov
cmpl
jo
sarl
inc
adc
pushf
jns
ss
jne
es
mov
mov
fwait
testb
out
mov
lods
or
setbe
adc
dec
fcoml
inc
movsl
rorl
out
insl
sbb
cmp
cmp
sbb
cmc
in
fwait
into
rcrl
mov
jne
daa
inc
mov
popa
rcll
push
pop
into
leave
inc
push
flds
ljmp
add
add
xchg
fcomps
pop
pop
lea
push
add
aas
aas
shl
pusha
mov
pop
filds
push
bound
cli
jnp
inc
das
xor
mov
and
xchg
and
stos
lds
jne
mov
inc
and
xchg
loope
gs
cltd
add
in
leave
ljmp
xchg
into
sbb
int
icebp
cmc
mov
jb
std
xchg
iret
adc
jbe
pop
flds
pop
stos
scas
xor
pop
mov
mov
jge
inc
fstpl
push
pop
xchg
pusha
stos
dec
dec
sarl
cmpl
ds
shrl
das
xchg
in
stos
nop
add
mov
jl
lea
push
xor
andl
fisttpll
mov
pop
in
fdivl
mov
cwtl
xor
cmp
ljmp
sbb
mov
mov
loopne
dec
xchg
out
jae
in
ret
inc
push
xchg
pop
push
leave
dec
push
out
sbb
movsl
cltd
lret
xchg
sub
sub
push
pop
mov
test
lret
and
nop
mov
clc
loopne
cmp
xchg
movsl
sub
or
ret
and
mov
xor
cmp
mov
imul
mov
xor
xchg
pop
addr16
inc
mov
push
sub
add
mov
mov
lods
insl
xor
sub
and
fsts
sbb
pop
aam
inc
and
pushf
mov
pop
cmp
enter
jbe
negb
push
push
pusha
lcall
lcall
movsl
mov
and
test
sbb
or
sub
inc
scas
out
mov
mov
xor
and
inc
ror
int
lods
or
test
mov
pop
out
insl
js
cli
xor
loopne
cmp
es
lret
push
mov
lret
inc
sti
mov
and
push
hlt
mov
cmp
xchg
push
mov
lret
lret
enter
jp
lret
scas
cwtl
xor
push
pop
add
shrl
mov
sub
xchg
push
adc
mov
mov
ret
inc
push
xchg
add
arpl
out
jb
sbbl
mov
outsb
sub
pusha
movsb
inc
inc
inc
sbb
and
cmp
test
orl
ret
insb
sub
push
cmp
lods
sbb
push
mov
sub
jns
loopne
add
jg
fidivl
test
push
pop
cmp
push
loopne
inc
std
sbb
cmc
pop
movl
push
out
push
mov
int3
icebp
into
and
push
incl
jne
jle
add
inc
jns
mov
push
sbb
pop
pop
rcll
ja
adc
adc
ds
sub
inc
or
pusha
dec
push
pop
pop
fwait
and
cwtl
push
pop
xchg
adc
adc
inc
insb
sub
test
cmpsl
push
mov
xor
pop
fbld
cmp
and
jle
fwait
insb
push
sahf
xchg
cld
push
jl
xorl
nop
inc
jmp
or
addb
lock
xor
lods
rcrb
test
mov
mov
stos
sbb
pop
cmp
in
fcompl
push
adc
xlat
cmp
sarb
roll
into
pop
nop
insb
stc
inc
loop
testl
scas
lods
mov
les
jne
jne
push
lods
lods
stc
insl
test
adc
ficoms
fs
lcall
jmp
test
fidivl
loopne
inc
int3
lahf
aam
gs
addr16
cld
test
pop
rorl
cmp
loop
sub
aad
dec
pop
cmpsb
push
push
in
mov
cmp
es
dec
testb
push
scas
out
inc
or
pop
cmpsl
fmuls
fdivrs
scas
xchg
jg
and
push
inc
dec
mov
lds
cwtl
iret
adc
and
or
lret
inc
leave
mov
inc
sahf
jp
cmp
outsb
and
jno
add
lcall
lea
inc
dec
dec
dec
cmp
xor
sub
pop
repz
sub
adc
stos
xchg
xor
mov
outsl
or
inc
adc
fdiv
mov
insb
aad
mov
cs
jnp
cmp
fistpl
pop
repnz
push
or
rorl
aaa
dec
sbb
mov
loop
jmp
movsb
adc
fs
cmc
jge
sub
push
mov
and
out
xor
xchg
test
pop
mov
adc
insl
ffree
repnz
into
cli
mov
frstor
int3
in
push
mov
nop
xchg
test
loope
gs
add
mov
adc
stos
fchs
fs
popf
in
xchg
sub
aad
xchg
mov
data16
repnz
adc
xor
outsl
sbb
subb
rorb
jle
loope
in
dec
sbb
mov
repz
stos
jnp
scas
and
push
cmp
adc
fldcw
sub
mov
les
ret
gs
adc
data16
jp
cltd
or
mov
jb
jp
loop
xor
xchg
out
cwtl
jbe
clc
dec
mov
jns
repnz
lock
ljmp
stos
and
pop
sub
insl
add
sarl
fwait
push
xchg
es
inc
inc
pop
mov
into
fimull
xchg
pop
stos
lahf
movups
cld
mov
fstpl
mov
lods
gs
pop
pop
in
popf
cmpsl
ret
orb
jecxz
push
rol
loop
sub
or
jb
fldcw
aas
out
xor
mov
mov
imul
or
xchg
pop
pop
ds
stc
cltd
orl
mov
or
cs
mov
mov
jp
frstor
mov
cltd
sbb
dec
ret
imul
imul
and
scas
aas
clc
inc
das
cmp
xor
enter
test
je
imulb
jmp
xchg
ret
cmova
pop
scas
pushf
jp
mov
jmp
aam
leave
push
cli
jb
ljmp
jl
push
inc
jge
or
sub
sbb
mov
aaa
outsb
aad
and
add
cmp
insb
inc
popl
add
sbb
jnp
or
xchg
dec
adcl
fdivrs
mov
push
xor
sub
mov
sbb
push
mov
mov
mov
icebp
push
lds
data16
sub
inc
mov
mov
lcall
loopne
mov
outsb
mov
loopne
pushf
popa
mov
sub
cld
cwtl
cmp
ret
popf
loope
jg
dec
mov
add
push
mov
lahf
insl
pop
fdivp
xchg
cmp
stc
mov
pop
ds
loopne
rolb
cmpsb
push
cmc
icebp
in
jnp
loope
and
push
jmp
call
mov
dec
pop
sar
mov
mov
cltd
lcall
sbb
aam
cltd
mov
lods
iret
sarl
push
aam
sub
lcall
cmp
enter
mov
lcall
adc
lods
lahf
imul
icebp
inc
sbb
cwtl
and
fwait
lea
mov
xor
mov
shl
xchg
ret
ljmp
xchg
and
sbb
mov
ret
movsb
iret
mov
outsb
and
adc
pusha
cli
loopne
popf
add
fistpll
inc
pop
mov
in
call
std
lahf
mov
ret
in
aaa
inc
and
dec
xor
push
jmp
mov
mov
push
fsubrl
jno
popf
dec
int3
arpl
aas
jae
jg
mov
sbb
sbb
stc
lds
and
in
push
sub
ja
stos
mov
xchg
mov
jecxz
jg
sbb
jne
push
pop
and
popf
xor
std
lods
dec
push
pusha
cmp
jo
mov
inc
mov
cmp
pop
ud1
cltd
mov
lcall
lock
insl
cmpsl
xchg
sub
pushf
shll
stc
jle
cmp
insb
iret
xor
mov
dec
lcall
dec
add
and
mov
sub
push
mov
hlt
pusha
push
or
inc
scas
ss
push
test
inc
mov
lret
jmp
scas
push
bound
std
test
push
shll
shll
sub
pop
sahf
and
addr16
ret
adcb
sbb
pop
dec
inc
shll
sbb
push
popf
adc
or
lcall
and
fnstenv
or
mov
ret
sahf
cwtl
aaa
push
into
testl
inc
cmp
nop
sbb
out
loopne
mov
cmp
test
pop
mov
push
test
inc
jg
pushl
xor
stos
ljmp
dec
jnp
mov
dec
cs
cmp
push
enter
cli
test
mov
hlt
scas
leave
lods
test
cmpsb
rolb
cs
dec
xchg
pop
jmp
mov
mov
testl
aad
pop
cmp
and
xchg
push
dec
mov
imul
jb
lea
mov
nop
aaa
iret
in
add
into
adc
les
jg
sub
and
aam
fwait
and
push
jmp
xchg
stos
cmpsb
jg
xlat
popa
outsl
sub
ja
dec
cmp
add
sbb
pop
sbb
xorb
push
and
and
call
fstp
leave
aas
shll
stos
pusha
pop
add
mov
pop
rorb
add
int
int3
pop
xor
mov
jnp
mov
sub
mov
mov
xor
or
cli
shlb
es
pop
adc
fucomp
xor
gs
sti
add
hlt
sbb
pop
in
lods
loop
push
loop
xor
leave
cmp
jns
jmp
jecxz
icebp
jo
out
cwtl
jae
jl
pop
popa
xchg
test
pop
and
fisubl
mov
add
xor
xor
ss
xor
sarl
dec
shlb
popf
gs
mov
popf
push
mov
lds
daa
jg
mov
xchg
js
sub
pop
cmp
int3
sub
mov
dec
sahf
jnp
jp
jmp
push
ja
inc
adc
mov
adcl
pushf
mov
cmp
pop
add
pop
out
sahf
or
adc
xchg
out
cwtl
ljmp
iret
xchg
pop
nop
push
outsb
pop
stos
mov
or
xor
add
cld
xchg
xor
jne
push
xchg
sub
inc
fsubs
xchg
mov
cmp
imul
or
sbb
jns
std
and
stc
stc
push
sub
mov
push
or
ds
fmull
loopne
cmp
sub
xor
sahf
push
inc
repz
bound
insl
jb
xchg
pandn
inc
mov
xchg
cmp
test
addr16
imul
lods
jo
add
cmc
test
icebp
fistpl
scas
xor
ljmp
pop
fsubs
int3
sbb
sbb
mov
push
sub
sub
inc
ds
loop
in
cmp
adc
popl
shr
imul
lcall
mov
cmc
pop
int
jmp
jne
lret
enter
call
and
mov
mov
or
sbb
dec
lret
ja
cmpsb
dec
out
xor
add
pop
add
push
add
ja
int
inc
out
jbe
popf
sub
mov
lock
dec
mov
sub
jbe
or
cltd
adc
lods
movsl
sub
mov
lods
mov
sub
mov
pop
out
and
shr
loop
mov
mov
xor
insb
insl
sub
call
ds
insl
push
cmp
rcll
push
adc
jbe
jae
mov
sbb
test
imul
cld
daa
pop
hlt
cli
test
fdivr
or
aad
arpl
mov
scas
stc
push
jb
xchg
push
in
lea
aaa
divb
pop
sbb
ja
arpl
pop
dec
sbb
or
arpl
adc
pop
and
inc
mov
bound
ljmp
add
push
daa
pop
fdivl
out
mov
dec
ret
ds
ljmp
jo
dec
and
cmpl
push
xorl
mov
pushl
add
add
add
mov
mov
pop
jno
inc
cltd
aam
ljmp
and
pop
and
and
cmp
sbb
sub
push
lods
ret
dec
mov
into
adc
xchg
mov
push
jecxz
data16
jbe
or
mov
lahf
xor
arpl
push
push
xor
leave
adc
movsb
sub
pop
cmp
xor
fwait
jbe
mov
dec
pop
stos
and
mov
inc
int3
mov
loop
pop
imul
pushf
dec
shll
sub
hlt
orl
and
xor
jmp
ja
ret
inc
pop
leave
movsb
sarb
xchg
jp
into
xchg
dec
aam
stos
jno
jp
add
jb
cmpsl
jl
in
adc
fimull
test
je
jnp
sbb
jne
inc
pusha
dec
sarb
hlt
insl
lods
sub
es
jle
xchg
jge
jg
repnz
jbe
push
mov
push
inc
sub
inc
mov
scas
cltd
jns
jle
outsl
faddl
arpl
out
in
pop
aaa
shrl
adc
fadds
pop
test
fcoml
mov
lods
jmp
or
cli
xchg
sbb
mov
imul
test
call
lret
inc
mov
fs
push
pop
fdivr
xchg
sub
mov
mov
inc
fsubl
xor
pop
jl
mov
lea
jno
xor
xor
cmpsb
dec
inc
das
ret
inc
cwtl
js
xchg
push
pop
sbb
push
in
mov
dec
das
cmp
mov
cmp
orl
mov
pop
fcmove
imul
mov
repnz
pushf
mov
inc
jl
xchg
push
call
push
mov
pop
sbb
ja
lock
mov
xchg
fimull
mov
aas
jns
sbb
leave
push
enter
mov
xlat
dec
aas
negb
cltd
in
repz
data16
pop
or
subl
or
daa
addps
cld
inc
lock
notl
sahf
inc
dec
fmull
call
dec
aas
leave
mov
mov
imul
arpl
icebp
dec
fisttpl
xor
ljmp
aam
fistpll
sbb
ja
addl
push
fistl
xor
push
mov
fldenv
xchg
pop
xlat
jbe
sahf
popa
mov
dec
adc
pop
out
int
fsubl
sub
add
mov
enter
flds
sub
add
lock
xchg
mov
repz
lock
pop
movsl
out
sti
or
aas
mov
sub
adc
in
pop
mov
mov
inc
into
jg
mov
fsubs
xchg
push
mov
or
fisubrl
aam
jno
cld
dec
jecxz
mov
test
or
imul
inc
mov
into
push
call
cmpsb
cs
imul
scas
jns
mov
cmp
popf
push
sub
xor
jmp
and
mov
mov
lahf
mov
mov
adcb
cmc
cmpb
pop
lods
fimuls
sbb
shlb
imull
daa
aam
fisubrl
cwtl
adc
js
repz
add
adcl
ret
cmpsb
mov
cmp
jp
mov
jmp
ficoml
sub
sti
jbe
mov
pop
push
mov
negl
fdivs
add
and
add
rcrl
cmp
repz
push
mov
and
cmp
scas
addr16
mov
pop
mov
sub
rep
insb
daa
lret
imul
adc
testl
jb
dec
outsl
pop
in
jb
popa
arpl
sldt
push
xor
test
jne
add
shlb
or
or
cli
loop
popf
popl
or
xchg
inc
and
mov
cmpsw
lcall
xor
and
mov
dec
lods
sub
rolb
mov
cmp
movsb
push
cld
jmp
and
mov
int
cmpsl
jl
nop
dec
lahf
sub
xchg
adc
cmpsb
stc
icebp
das
ret
inc
xor
xor
clc
mov
inc
and
stos
xor
jo
push
daa
jge
mov
xchg
jae
and
sub
lock
pop
mov
popa
sbb
js
jmp
repnz
mov
in
sub
scas
lret
push
and
inc
loopne
sbb
mov
insl
xor
add
push
ficoms
push
mov
cmp
mov
push
stc
dec
push
insb
xor
addr16
in
ret
pusha
xchg
ret
call
jae
dec
cmpsl
ljmp
xor
enter
lods
fisttpll
xor
sahf
fldpi
out
das
sbb
mov
mull
mov
xor
jl
xchg
xor
or
bound
repnz
jbe
xor
fadds
ja
in
ss
push
test
fsubrp
and
pop
outsl
mov
in
jmp
negl
adc
jb
outsl
lds
sbb
push
rcrl
gs
ret
xor
jae
gs
data16
test
scas
xchg
sbb
nop
in
dec
movsl
push
data16
scas
mov
int
adc
push
shll
aam
cld
adc
xchg
and
add
dec
loop
out
in
and
dec
mov
popl
and
adc
cmovge
mov
pop
stos
sbb
dec
insl
xor
pop
clc
xor
sub
and
push
sub
push
xchg
cs
push
cmp
xchg
adc
mov
push
jmp
insb
push
mov
std
fwait
int
subl
shll
nop
cwtl
push
clc
stos
shlb
in
adc
push
xor
and
jmp
mov
arpl
sub
pop
jmp
lcall
push
mov
scas
lea
cmp
push
iret
and
cmp
mov
gs
xor
pop
push
sbb
xlat
test
aas
mov
cmpb
push
loop
inc
sub
mov
xor
aas
dec
fsubrl
xchg
lret
movsl
je
out
stos
jmp
ja
mov
or
sti
into
outsl
pop
add
subl
fldt
mov
xchg
cmp
mov
sub
mov
sti
nop
lcall
cmpl
out
ljmp
cmp
leave
aad
mov
xor
clc
aam
jg
ss
roll
mov
nop
sbb
and
ret
xchg
mov
outsb
pop
mov
inc
inc
movsl
inc
dec
cmp
bound
cmc
or
std
xchg
stos
pop
and
xor
andl
mov
push
sbb
push
and
xchg
push
xchg
int3
pop
sahf
inc
subb
repz
jle
loope
inc
jle
jo
pushf
arpl
sbb
repz
mov
xchg
cmp
mov
and
or
mov
int
imul
xchg
cltd
dec
mov
imulb
push
orb
push
mov
repz
dec
test
sub
test
dec
shl
sub
cld
and
sub
sub
inc
js
shl
sbb
adc
aam
mov
outsl
sahf
and
sbb
add
cld
repz
pop
mov
dec
mov
or
mov
shlb
mov
xor
jne
imul
jns
inc
outsl
or
cld
xorl
out
cmp
sub
dec
pop
insb
add
sbb
add
or
adc
jp
cld
aam
mov
push
mov
lret
pop
scas
sbb
test
adc
add
cs
addb
and
pop
jecxz
sbb
sbb
xchg
mov
dec
out
sub
mov
inc
or
insb
cmp
pusha
mov
movsl
or
lods
call
mov
in
push
jmp
cwtl
js
xchg
clc
mov
xchg
and
lret
out
arpl
aam
cld
lock
xor
aam
pop
xchg
not
fdivrs
or
repnz
inc
and
add
andl
sbb
lods
dec
mov
push
call
xor
pusha
pop
sub
inc
sbb
cmp
popa
insb
and
scas
add
mov
and
dec
and
xor
xchg
pop
les
test
js
test
enter
fistps
outsl
ljmp
mov
lret
or
scas
mov
pushf
ja
sub
push
outsl
jne
sub
push
or
push
scas
rol
pop
mov
enter
and
or
inc
lds
js
xchg
add
in
loope
cld
adc
dec
movsb
std
mov
cli
adc
mov
test
sub
fstps
jb
or
lcall
insl
loope
push
cs
mov
xlat
mov
jno
cmp
pop
iret
xor
rcl
in
lret
fcompl
fdivrs
dec
dec
xchg
cmp
add
xor
jle
xchg
fbld
pop
enter
faddp
out
mov
lret
imul
mov
aam
lods
cmp
cmp
ja
cmp
ret
xchg
add
jae
outsb
mov
test
dec
testl
inc
pushf
mov
mov
mov
or
push
mov
lcall
push
test
xor
ja
mov
in
adc
int
lea
ds
fs
xchg
pop
push
add
nop
pop
inc
divl
ds
ss
jmp
aas
add
rcll
xchg
fisttps
mov
xchg
lods
ljmp
cmpsb
mov
nop
or
cmpsl
fidivrs
dec
bound
dec
add
loop
ficoml
pop
adc
mov
pop
xchg
or
icebp
inc
loop
sub
cli
sbb
and
xchg
mov
or
int3
xchg
add
push
mov
sub
push
nop
mov
cli
popf
stos
push
inc
out
pop
pop
ss
test
or
pop
and
sbb
lea
jno
test
out
jae
mov
xor
xchg
mov
insb
stos
fcmovnbe
ret
pop
out
mov
adc
mov
sub
enter
jo
xor
fs
mov
mov
or
lret
lcall
stos
aad
insb
jp
mov
in
xchg
and
xchg
cmp
or
lret
test
or
in
ds
test
scas
xorb
mov
ss
add
idivl
cmp
enter
repz
ljmp
clc
inc
add
data16
mov
push
cs
and
inc
icebp
and
jns
idivb
lock
sbb
ret
jb
outsl
fdivrl
pop
push
mov
stc
les
xchg
jge
jo
loop
mov
and
jnp
add
xor
or
clc
fdivp
mov
cmpb
cmc
cmp
inc
pop
fadds
or
mov
out
jns
faddl
cmc
fstps
setg
fwait
test
lock
add
mov
jg
inc
pop
cmp
sub
mov
lcall
add
pop
sbb
imul
gs
repz
sub
adc
jno
inc
clc
jg
sbb
jno
xlat
mov
mov
pop
daa
ret
jne
movsl
jl
outsb
repz
xchg
mov
jnp
clc
mov
mov
push
pop
cmc
xchg
dec
test
add
jmp
lods
icebp
inc
int3
pop
push
test
mov
ret
dec
mov
dec
sub
sub
adc
mov
hlt
repnz
test
cmp
add
ret
repnz
fs
addr16
xor
cmc
daa
or
sub
adc
mov
jae
lret
push
rol
out
adc
mov
call
inc
dec
push
inc
ret
mov
or
leave
aaa
popf
clc
push
cwtl
int
or
mov
ret
pop
pop
test
ljmp
popa
jecxz
enter
pushf
adc
cmp
pusha
xchg
and
test
mov
inc
xor
mov
pop
mov
jno
xor
mov
repnz
roll
add
fnstsw
push
pusha
xor
rcll
or
and
pop
aaa
insl
xor
testb
jg
pop
enter
sahf
jno
jnp
jl
je
inc
test
and
push
mov
cmpsl
stos
push
jae
fmuls
inc
cmc
cmc
add
and
push
lods
cmp
hlt
jle,pt
dec
or
cmpsb
pop
mov
aaa
out
dec
adc
and
fdivs
mov
xchg
dec
mov
lahf
fwait
in
sbb
pop
ret
data16
jno
mov
imul
in
mov
dec
mov
pop
push
adc
lods
mov
jno
rorb
call
loop
add
jl
adc
xor
mov
in
addr16
jmp
jbe
rolb
pop
cmp
in
cmp
scas
lea
adc
out
sbb
adc
clc
dec
sub
sti
cld
inc
fwait
or
sbb
movsb
pushf
mov
sbb
subl
push
jg
movsl
pop
int3
lahf
roll
std
or
inc
nop
cs
out
dec
pusha
in
cmp
rorl
inc
movsl
or
mov
cwtl
les
pop
iret
or
repz
sbb
mov
jl
pusha
in
push
pop
test
push
cmp
mov
mov
push
rcrl
cs
xor
jmp
ljmp
subb
cld
xchg
icebp
cmpsl
fcomip
fwait
pop
mov
nop
sub
rolb
fidivs
dec
fdivrl
jne
cmp
push
xchg
and
lcall
xor
xor
leave
test
or
sbb
loope
jle
xchg
cltd
or
push
cmp
xchg
lock
pop
in
or
test
inc
and
xchg
popa
pop
das
into
cmp
dec
cwtl
sarl
out
lods
xchg
xchg
imul
pop
out
xor
clc
xchg
mov
jmp
pushf
lcall
cmpsl
sub
into
pop
sbb
xchg
scas
and
fsubrs
outsb
dec
pusha
jp
pop
add
sbb
ds
out
std
lea
push
or
loopne
jle
in
cmp
out
out
cli
call
das
jb
add
in
add
rolb
jae
fcom
test
loope
pop
mov
rcrb
cs
dec
leave
pop
pop
xorl
sbb
arpl
or
or
hlt
fwait
or
int3
in
mov
ret
xlat
inc
cmp
ja
and
or
sub
xorb
mov
dec
push
sahf
sbb
jmp
mov
mov
pusha
outsb
sub
cld
test
push
les
leave
outsb
fcoms
ret
jmp
pop
std
mov
mov
and
xor
jbe
push
xchg
inc
xchg
mov
inc
jl
jnp
enter
icebp
out
mov
fmuls
jecxz
fcompl
call
fnsave
mov
sub
or
aad
loopne
lret
mov
mov
test
adc
push
test
add
test
or
popf
mov
xor
mov
pusha
test
stos
adc
ficomps
fists
test
mov
pop
fistpll
inc
ljmp
xchg
xchg
mov
std
xchg
xchg
xchg
and
inc
cmp
stos
stos
cltd
jns
stos
xchg
insl
xchg
inc
mov
inc
sbb
adcl
mov
enter
test
pop
loopne
push
xchg
mov
or
or
test
jp
loop
xchg
out
fstpl
loop
aaa
sub
or
testb
push
lret
dec
jecxz
iretw
in
pop
sbb
inc
jp
lcall
fwait
jmp
inc
pop
inc
and
cmp
test
jbe
out
cmc
xchg
testl
insb
push
cmpsl
cmpl
loope
sbb
into
xor
xchg
aad
arpl
mov
pop
jle
popa
or
int3
mov
sarl
push
mov
outsl
cwtl
xchg
stos
fcomip
jne
push
mov
mov
sti
out
pop
sub
and
mov
outsb
lea
dec
lds
pushf
push
xchg
loope
insl
xor
adc
push
sahf
lds
mov
ret
mov
out
mov
jo
out
mov
jae
cwtl
mov
insl
push
fdivp
sti
inc
and
push
scas
pop
dec
fucom
pop
shlb
imul
sti
adc
ss
sbb
push
sahf
mov
lods
lahf
clc
sub
divb
je
pop
aaa
fistpll
cli
stos
pop
stos
in
icebp
out
and
mov
cs
lods
mov
jle
cmpsb
lods
sti
insl
mov
and
xchg
xchg
cld
ja
inc
loopne
pop
cmp
daa
orb
pop
cmpsl
xlat
mov
add
in
or
mov
shrl
mov
int3
aad
gs
pop
pop
sahf
mov
stos
sahf
push
fisttps
lds
sbb
adcb
xchg
xchg
stos
cli
or
fcmovnb
aas
xchg
inc
out
cs
xor
push
inc
jl
jo
add
stos
dec
jge
and
add
and
and
fwait
lods
dec
mov
pop
imul
dec
ss
xlat
add
pop
fwait
out
ljmp
inc
and
icebp
mov
sti
mull
mov
fdiv
cmp
into
int
ja
lds
add
pop
fstpt
movsl
movsl
pop
mov
mov
add
lahf
dec
test
xor
fs
fs
mov
jge
xchg
js
and
sbb
cmp
push
outsl
imul
adc
push
test
xchg
rcl
mov
dec
cs
jae
lods
sbb
xchg
in
xchg
inc
mov
pop
mov
sub
cld
mov
xorl
pop
or
mov
lods
sbb
add
push
push
pop
fbstp
sbb
xor
fwait
pop
test
xchg
or
adcb
test
xor
jo
mov
addr16
add
popf
es
mov
push
xlat
rorl
mov
into
ss
call
imulb
dec
jae
jns
pushf
test
fstpt
mov
xor
shll
mov
notl
out
dec
inc
and
jecxz
loop
push
aad
mov
test
mov
pop
loope
pop
xorl
pop
mov
jl
fs
out
push
sbb
sbb
aad
jae
jp
rorb
lods
fsts
push
adc
in
jbe
ss
sub
in
cmpsb
rolb
xchg
pop
arpl
fs
xchg
ja
lea
icebp
jns
sbb
loop
mov
ret
mov
icebp
jecxz
mov
js
repz
pop
dec
aad
fsts
cmp
aaa
push
out
in
push
pop
loopne
cmpsl
cmp
out
pop
sti
jmp
std
dec
push
insl
jb
sbb
lcall
lret
out
test
into
sub
hlt
pop
lcall
imul
inc
in
test
mov
xchg
inc
jae
add
mov
push
rorl
push
mov
movsb
cmp
push
setbe
imul
add
fisttps
fwait
lret
imul
imul
and
push
mov
jp
das
aam
mov
mov
insb
inc
rolb
add
mov
adc
ss
les
arpl
notl
xor
dec
or
xchg
xchg
xor
outsb
test
enter
fidivrl
push
rcl
adc
cli
dec
xor
enter
movsb
lock
addr16
cmpsl
int
push
cmp
xchg
data16
cmp
xor
xchg
lret
jno
imul
js
and
decb
sbb
push
insb
cmp
lahf
test
lcall
push
push
and
push
adc
inc
ror
sbb
pop
pop
cmc
push
pop
cmp
jb
rolb
jb
loope
jbe
push
loope
mov
dec
push
inc
dec
push
inc
cmp
movb
or
ret
bound
jl
out
scas
lahf
insl
shl
mov
enter
mov
jne
fcomps
xlat
dec
xchg
clc
rol
int
push
xlat
out
xor
sub
and
sbb
sub
sub
mov
xor
xor
cli
xlat
pusha
mov
repnz
inc
and
sbb
jns
xor
inc
std
pop
inc
lods
sub
test
clc
jno
ss
sub
cltd
dec
push
pop
push
cltd
sbb
js
mov
scas
ficomps
cmpsl
xchg
std
and
popa
mov
push
adc
xor
and
cld
add
sbb
push
rcrb
inc
mov
mov
aas
and
mov
jae
out
dec
or
cld
in
ficompl
add
push
inc
mov
int3
test
cmp
stos
stos
pop
sahf
jle
mov
fucomp
inc
addb
xor
push
ja
dec
test
dec
jg
push
inc
mov
dec
in
lods
nop
or
mov
mov
scas
mov
xlat
add
jecxz
xchg
sahf
adc
mov
mov
inc
dec
inc
jb
adc
mov
xchg
pop
leave
aas
pop
pop
data16
scas
iret
mov
and
push
popf
mov
jl
cmp
xchg
pop
and
fdivrl
jg,pn
jmp
sub
jae
pop
jae
push
sub
js
mov
rorl
sbb
fidivl
div
jo
jge
inc
push
shll
cwtl
sub
xchg
pop
andl
pop
jns
out
inc
addr16
jne
test
and
aad
movsb
je
shr
push
scas
mov
scas
push
idivl
cltd
push
cmc
sub
aas
dec
add
rcrb
leave
mov
jne
jno
les
test
ss
and
fildll
mov
jl
jmp
das
jge
xchg
xchg
jp
daa
je
das
xchg
aas
push
movsl
hlt
inc
xchg
add
lods
pop
aas
out
loopne
mov
dec
rorl
jle
mov
ljmp
and
mov
fistps
or
fistl
out
mov
out
shlb
add
sub
cmp
gs
cmp
mov
or
mov
inc
cmc
mov
sbb
and
je
and
cmc
test
dec
xchg
pop
roll
mov
jnp
sbb
mov
mov
dec
mov
movzbl
sbb
aad
loope
push
in
mov
je
xchg
addr16
mov
int
mov
aad
ss
lds
dec
stc
jp
mov
and
int3
mov
fildl
pushf
rol
out
imul
in
sub
xchg
push
ret
mov
push
hlt
fxch
cwtl
fucomi
mov
inc
imul
mov
mov
ret
jo
sub
push
or
loopne
repz
fbld
icebp
jmp
pop
rcl
in
das
sub
push
in
in
ud0
sbb
pusha
dec
insl
mov
mov
cltd
pop
jb
pop
pop
xor
repz
add
fsubrs
push
arpl
or
je
push
lock
inc
cli
daa
int3
enter
and
cmp
or
out
daa
mov
jae
addr16
cmp
mov
lods
aam
inc
or
shrb
cmp
outsl
xor
push
and
data16
bound
es
aad
push
fistps
jmp
lret
xor
clc
cmp
imul
loopne
lea
sbb
enter
cltd
ret
cmpsb
pop
jmp
imul
sub
lahf
pop
mov
sub
inc
sbb
je
scas
dec
cmp
dec
or
popf
push
inc
arpl
cmpsb
popf
push
loop
aaa
clc
repnz
mov
jne
clc
gs
lret
or
sbb
rclb
mov
fisttpll
adc
xchg
in
ror
scas
js
or
push
push
push
mov
mov
xor
inc
outsl
mov
push
fwait
inc
hlt
shlb
in
test
scas
mov
jecxz
repz
jbe
and
into
enter
dec
fwait
jmp
jge
clc
icebp
mov
movsb
sbb
fldenv
jne
cvtps2pd
cmpsl
or
test
ljmp
jb
das
and
imul
push
outsl
insb
dec
shr
inc
and
movswl
mov
popf
or
push
lock
mov
lds
inc
pop
aas
cltd
cmpsl
jnp
lret
into
mov
daa
mov
jno
iret
adc
mov
mov
cwtl
adcl
mov
gs
inc
ficoms
pusha
jge
pop
mov
xchg
xor
cmp
mov
cmc
cmp
push
ret
push
mov
jg
stos
adc
sbb
adcl
rorl
inc
rcrb
mov
hlt
jge
pushf
stc
cwtl
ljmp
insl
loopne
int3
test
push
cld
lea
pop
sbb
shlb
icebp
mov
bound
ret
mov
shlb
pop
fcomi
mov
and
test
inc
stos
pop
inc
mov
nop
jecxz
dec
lcall
fld
loope
jno
ret
pop
mov
push
inc
mov
inc
push
push
leave
enter
cmp
popf
adc
and
cmp
hlt
jmp
nop
daa
lea
xor
mov
fisubrl
sbb
add
mov
fmull
sub
enter
pop
jne
xchg
clc
push
je
dec
fildl
inc
cld
lahf
leave
fidivrl
and
mov
pop
mov
mov
outsb
int
mov
iret
xlat
xlat
mov
mov
and
js
test
cmp
xchg
pop
push
cmp
mov
imul
jl
mov
imul
ljmp
nop
ja
cmp
aas
shrb
push
sbb
outsl
mov
pop
fcoml
or
popa
push
pop
pop
jg
add
ret
std
hlt
loopne
subl
stos
cld
xchg
mov
adc
adc
sti
lret
dec
stos
jbe
addr16
es
repnz
jle
test
mov
in
aas
loop
aam
jg
adc
adc
call
jne
enter
mov
pop
mov
aaa
dec
ds
pop
in
mov
aam
xor
adc
test
jge
xchg
ljmp
pop
cmp
xor
xchg
das
or
loopne
sub
push
outsb
xchg
cwtl
in
add
fdivs
sbb
ss
push
pop
ljmp
inc
push
push
inc
push
icebp
mov
add
xchg
into
pop
xor
addl
xor
inc
mov
push
mov
mov
adc
cmp
xchg
les
enter
xor
mov
mov
xlat
xchg
adc
xchg
mov
xchg
pop
cmp
stos
scas
sbb
mov
cmp
cmpsl
mov
xor
icebp
pop
outsb
in
loopne
iretw
pop
scas
stos
xchg
cltd
sub
pop
daa
jo
dec
jl
in
dec
pop
jge
push
andb
xchg
shlb
and
cmpsb
in
and
out
test
lock
push
cli
jle
arpl
dec
or
cmpl
mov
or
mov
rcr
add
dec
fadds
int3
jl
in
jo
or
xchg
test
je
and
pop
flds
fwait
dec
imul
fsubrs
dec
pop
dec
mov
mov
mov
cmp
std
cmc
clc
dec
mov
xchg
inc
xor
test
aas
adc
jbe
hlt
mov
mov
jb
aad
rcl
test
sub
cmp
cmp
cld
sub
mov
mov
mov
xor
dec
cli
mov
xor
std
push
adc
int
xchg
xchg
outsl
leave
mov
jmp
or
arpl
push
push
ficoml
sarb
pop
jmp
mov
lea
pop
aad
and
mov
les
xchg
aas
dec
pushf
adc
mov
pop
cmp
or
repz
jmp
daa
out
mov
mov
into
push
adc
cmc
cmpsl
cmpsb
lds
retw
into
inc
shll
fs
cmc
xchg
xchg
les
inc
lea
pop
repz
pop
or
push
shl
mov
jo
cli
pop
cwtl
jmp
push
bound
adc
pop
mov
xchg
push
in
mov
fiadds
repz
and
add
push
xchg
cmp
sub
push
jp
pop
data16
and
dec
ds
std
std
fs
stc
stc
inc
vpsubq
add
fsubrl
aas
jle
fwait
mov
cmc
mov
mov
rcrb
adc
test
mov
sahf
in
jae
mov
mov
adc
pop
mov
push
or
pop
insl
ss
sub
xchg
xor
push
pusha
test
decb
sub
ret
bound
fcompl
dec
jnp
ja
shll
insb
sub
in
add
notl
flds
push
xchg
xchg
stos
cmp
in
ja
testb
loop
xchg
and
ret
loope
cmp
sahf
movsb
dec
fldenv
ror
cs
pop
and
loope
mov
pusha
addr16
loope
dec
sbb
inc
add
inc
or
push
xorb
js
xchg
jge
jle
cmp
jmp
iret
dec
leave
xchg
cltd
inc
testl
cmp
pop
mov
sahf
jmp
and
cmp
xlat
test
leave
pushf
mov
dec
sub
mov
movsl
cmpsb
orl
popw
add
shll
sbb
xchg
sbb
mov
daa
push
mov
fcomp
mov
lcall
jl
imulb
xchg
xlat
push
push
cltd
setp
adc
loopne
mul
lods
lret
xchg
xchg
mov
xchg
sub
add
mov
sub
icebp
mov
jns
stos
je
xor
cmp
andb
outsl
insl
je
cmp
cwtl
dec
scas
aaa
jmp
imulb
push
aaa
outsl
cmp
mov
leave
jmp
imul
cmp
and
bound
outsl
sahf
sbb
insb
test
movsb
shlb
mov
mov
xchg
adc
bound
push
les
dec
pop
mov
or
ds
movl
scas
mov
push
mov
mov
fsub
test
lret
mov
mov
dec
test
ja
adc
loopne
mov
out
xor
mov
es
rolb
push
sub
out
mov
outsl
outsb
into
and
adc
lock
aam
insb
rorl
stos
wbinvd
add
cmc
sahf
xor
sub
repz
push
and
cltd
cmpsb
xchg
inc
popf
sarb
mov
pushf
cmp
jae
js
prefetchnta
mov
ret
and
nop
inc
xchg
dec
mov
shlb
lods
mov
ret
jne
push
push
mov
das
mov
imul
stos
je
dec
jle
and
pop
add
adc
push
sahf
pop
mov
sbb
jno
jle
insl
inc
shl
stos
in
cmp
ret
mov
inc
jb
mov
fidivrs
and
xor
push
incb
jge
dec
das
ss
call
inc
pop
imul
sbb
xor
xchg
mov
sbb
jbe
adc
fistl
xor
pop
ds
xchg
and
inc
stos
cld
mov
jnp
mov
lods
je
loope
or
mov
int
je
push
or
xchg
bound
and
nop
cmpsb
sub
imul
aad
fxch
cmpsb
test
adc
push
std
sbb
jecxz
sbb
enter
push
aam
les
lods
add
in
out
je
inc
cmpsb
mov
out
sahf
pop
popa
push
xor
pop
test
lods
cmp
bound
push
loop
sti
inc
push
inc
pop
xchg
mov
addr16
jmp
std
adc
outsw
jae
ret
test
cmc
sti
and
dec
fstp
jmp
fistpl
add
jp
dec
cwtl
arpl
cmp
jle
ret
inc
aas
jns
fists
iret
int3
jae
adc
mov
mov
loope
lods
mov
mov
push
aad
mov
imul
inc
pop
lahf
sahf
jae
and
xor
cmpsl
sub
dec
jmp
movsb
negl
pop
insl
mov
mov
jge
pop
mov
fdivrl
mov
inc
adc
test
mov
jnp
mov
push
fisubs
je
jo
dec
adc
xchg
pop
sbb
pop
aam
mov
daa
dec
adc
inc
jne
ret
shl
je
es
dec
xchg
inc
adc
cltd
gs
cmpsl
jno
xchg
dec
loope
pop
cltd
cwtl
mov
xor
pushw
or
std
sti
jb
test
push
push
adc
loope
or
leave
fcomp
fdivs
out
jge
pop
mov
and
in
nop
loope
fnstenv
or
dec
in
push
loop
jl
outsb
add
jnp
push
mov
out
add
iret
push
xchg
and
dec
shll
fistps
test
or
div
mov
sahf
int3
mov
in
add
xlat
jp
mov
cmp
pop
add
push
not
lret
add
xlat
mov
fs
jno
jge
sub
jne
ds
xlat
mov
xlat
popf
sub
jne
push
mov
out
sti
out
jne
sbb
and
push
arpl
into
lods
push
fcmovnb
movsb
sub
jp
int3
xchg
pusha
enter
arpl
xor
das
push
gs
aad
or
sar
pop
cmp
shll
testb
daa
jl
add
mov
add
pop
jge
jp
jb
mov
xlat
loop
pop
sub
out
outsb
cmp
xchg
jae
cs
popf
pop
adc
add
push
sub
inc
dec
rcl
sarl
pusha
mov
dec
lcall
or
mov
pushf
sarl
int
movl
pushf
sbb
push
lods
in
pop
rorb
pop
pusha
pop
inc
mov
fisubs
and
addr16
cmc
lea
sbb
test
imul
cmp
mov
mov
xchg
cmpsl
out
sub
inc
xchg
movsb
loope
into
dec
mov
cmc
jnp
mov
std
mov
mov
xor
pushl
idivl
repz
std
pop
cmpsb
jg
jb
idivb
orb
pop
sub
fsts
aad
mov
xor
insl
pop
jle
push
push
xchg
jge
xchg
and
jl
int3
mov
lret
cmc
mulb
push
roll
adc
stos
mov
cmp
push
ret
ds
or
inc
cmpsl
push
loop
es
sbbb
dec
xlat
bound
jmp
into
mov
xorb
lock
lret
jb
xchg
xor
jno
dec
xorl
repnz
adc
cld
push
lods
loop
cs
push
mov
jge
inc
outsl
imul
add
adc
sbb
lods
jne
sub
lock
xor
fsubr
inc
iret
add
cwtl
cwtl
fadd
data16
insb
push
cs
mov
cltd
inc
mov
repz
sbb
xor
sbb
addb
jmp
daa
xlat
stc
dec
loope
mov
addr16
sub
bound
mull
stos
sbb
xor
sub
push
adc
push
jae
mov
dec
push
mov
adc
pop
iret
std
jo
jno
out
sbb
int3
out
aaa
lea
mov
cmpsl
mov
in
sti
out
addb
or
outsb
decb
fcomp
out
loope
scas
and
cmp
enter
sbb
cltd
mov
fists
negb
dec
push
shll
push
jge
lahf
push
jns
add
jbe
mov
xor
or
sbbl
cmpsb
pop
xorb
push
lods
shl
pop
sub
or
or
jnp
fdivrl
jb
scas
jecxz
mov
dec
push
out
enter
push
push
sub
adc
ss
aam
push
cmpsl
inc
dec
mov
add
sbb
cmc
cmpb
add
mov
addr16
pop
xor
add
mov
stos
pop
jge,pn
scas
orb
jnp
push
cld
and
mov
ds
xchg
sbb
and
mov
or
dec
aaa
mov
add
ds
mov
add
sbbb
mov
add
lret
jl
inc
mov
mov
cld
mov
imul
insl
test
mov
push
pushf
mov
arpl
orl
imul
xor
popf
xchg
xchg
or
xor
mov
jge
mov
popf
repnz
mov
inc
icebp
test
mov
rclb
sbb
clc
popl
test
repz
or
push
ss
xor
cmpsb
mov
sti
mov
bound
loope
push
in
sbb
push
cli
stos
jle
outsl
mov
sti
jmp
jge
icebp
movsb
pop
mov
xchg
xchg
and
pusha
outsl
dec
pop
pop
or
push
cld
cmpsb
pop
sbb
jae
lahf
adc
push
jne
jmp
mov
stos
mov
ret
sarl
stc
pop
rolb
mov
xorl
shl
insl
push
cmc
ja
repz
cmp
das
adc
lcall
iret
fwait
xchg
cld
mov
out
shrb
ds
xchg
lds
ret
push
add
adc
enter
fisttpll
jb
mov
xor
loopne
xor
mov
popf
dec
xlat
lcall
cmp
aam
xchg
push
pop
insl
mov
inc
cwtl
aam
mov
test
mov
pop
mov
push
mov
bound
in
jl
mov
popa
mov
cmp
sub
test
testl
xor
ret
add
jl
add
gs
test
imul
mov
sub
jp
mov
jnp
push
push
xchg
and
pushf
mov
ljmp
adc
push
push
stos
cmpsb
mov
clc
mov
jno
push
in
cmpsb
into
jnp
mov
pop
xchg
jb
mov
push
xchg
pop
imul
cmp
and
clc
aad
push
dec
sub
stos
sbb
mov
mov
mov
pop
nop
mov
sub
cmpsl
ja
repz
int
dec
jg
dec
mov
push
mov
je
pop
lock
or
stos
das
fidivrs
lds
inc
pop
mov
dec
mov
push
add
cmpsb
sub
negl
inc
les
adc
stos
dec
orl
int
pop
sbb
in
jae
ret
cmp
inc
and
add
lahf
inc
mov
add
fcomps
jns
int
xchg
cmp
jecxz
stos
and
jle
in
mov
cmp
xchg
lret
int3
sub
push
outsl
xor
xorb
icebp
sbb
aad
loope
dec
sti
in
dec
mov
ja
or
jg
test
subl
sarl
pop
fldcw
lods
out
mov
xchg
pusha
dec
test
mov
rorb
xchg
dec
loopne
cmpsb
addb
jb
and
push
popf
mov
inc
movsl
insb
inc
dec
clc
add
cmp
pop
test
jne
arpl
idivb
int3
cmp
fnsave
xor
pop
iret
cmp
icebp
adc
pop
je
xor
mov
mov
dec
mov
pusha
mov
js
pushf
test
lods
adc
mov
adc
dec
lret
pop
sub
dec
push
or
mov
clc
pop
mov
cmp
into
and
add
mov
mov
cld
shrb
ljmp
loop
push
jle
mov
notl
or
dec
push
cs
pop
sbb
sbb
out
sbb
cmp
adc
mov
rorb
jg
outsb
push
mov
pop
jo
and
sub
fisubs
push
mov
movsl
movsb
push
push
pop
cmpl
divl
xchg
adcb
xlat
out
sub
andb
iret
push
sbb
sub
push
adc
ss
sarb
scas
sysret
xchg
stos
nop
dec
mov
inc
lds
in
sub
push
dec
pop
sub
sbb
xchg
adc
push
out
in
jns
popf
mov
fidivl
mov
cli
cmp
mov
rclb
call
mov
xor
in
test
mov
insl
daa
frstor
dec
add
push
lret
mov
ja
jnp
xor
sbb
jg
subl
pop
mov
xor
sarb
ret
lea
inc
mov
addr16
jle
dec
hlt
mov
test
aad
addl
incl
sbb
adc
fsubs
jle
lret
push
clc
loop
push
jns
mov
int
push
sub
fisubrl
pop
mov
sbb
mov
mov
mov
mov
aaa
aad
cmc
push
jbe
xchg
jo
sti
inc
je
sahf
or
mov
xchg
mov
jp
into
repnz
mov
fildl
shl
popa
jbe
stos
push
dec
ja
lahf
adc
aas
jns
jg
ficoms
cmpsb
test
ror
clc
pop
jle
mov
js
fwait
dec
in
cwtl
out
xchg
jl
imul
outsl
test
mov
out
mov
add
fildl
xor
mov
mov
adc
sub
shrb
divl
enter
inc
or
xchg
sub
insl
jo
mov
add
dec
movups
pop
and
in
mov
popf
sub
cmp
xchg
loop
popa
shrb
inc
inc
mov
test
nop
sti
sub
mov
lods
or
in
test
rcll
sbb
insb
shll
pop
aad
xlat
inc
inc
cs
fiaddl
stc
jmp
mov
dec
movsl
jno
mov
inc
pusha
cld
sbb
xchg
sbb
cmp
in
xchg
pop
lret
mov
add
jge
xorl
addb
clc
insl
mov
add
or
pop
or
repnz
ljmp
sbb
mov
xchg
lds
aas
or
mov
jbe
dec
cmp
or
inc
push
push
arpl
xor
pushf
cltd
in
insb
jp
pop
fldl
sub
mov
push
js
daa
or
lret
xor
lock
xchg
rcrl
dec
or
ds
jb
ret
xor
add
cmp
stos
add
xchg
push
insl
push
or
mov
jns
inc
jae
pop
das
xchg
xor
dec
jle
iret
test
sub
test
repnz
cmc
push
cli
int
repz
mov
test
push
clc
rclb
jno
pusha
out
inc
dec
dec
hlt
dec
lahf
adc
call
in
cmp
mov
nop
dec
and
pop
push
fsubrl
je
lds
mov
cmp
js
or
inc
mov
cs
cmpsb
call
gs
rcll
mov
js
mov
icebp
repnz
in
sar
out
arpl
jecxz
fildl
mov
aaa
pop
mov
mov
xchg
push
sbb
stos
aam
icebp
xchg
jbe
mov
movsb
pop
jns
jns
shll
xchg
in
sar
sbb
adcl
and
cmpsl
mov
rcrb
in
mov
mov
imul
cmp
aas
gs
lods
mov
push
or
mov
mov
gs
decb
sbb
ds
je
xor
mov
xor
pop
xor
cs
aad
sbbb
out
add
jl
push
repz
imul
push
jnp
jbe
dec
pop
in
stc
push
pop
pop
dec
mov
mov
adc
in
lret
mov
mov
mov
shlb
sbb
dec
sbb
mov
xlat
aaa
lahf
jmp
cmpsb
inc
cmp
mov
mov
stos
fistpl
shll
cmp
jbe
dec
xchg
lods
xchg
fildl
outsb
sahf
lock
and
mov
cmp
inc
ljmp
ss
ljmp
sbb
mov
xor
or
lods
notl
subb
les
lods
add
pushf
imul
aam
mov
lods
and
sbb
xor
scas
pop
xlat
push
push
dec
cmovp
jg
scas
pushl
cmpsl
dec
mov
dec
inc
mov
and
das
cmp
cmpl
aam
push
push
movsl
aaa
ss
aas
sahf
lods
jbe
mov
das
dec
int
gs
out
jne
lret
outsb
mov
xor
mov
data16
aaa
dec
fnstenv
pop
pushf
mulb
add
add
xchg
jl
call
jge
cmp
aad
dec
sub
sbb
cmpsl
xor
pop
dec
insl
stos
mov
pop
or
pop
push
mov
popf
cwtl
imul
cmc
add
clc
pop
jle
test
incb
ret
test
aas
mov
loopne
jbe
mov
sub
mov
mov
movsl
aam
mov
pop
in
jno
into
mov
xchg
pop
test
out
jecxz
adc
inc
cwtl
push
or
xchg
aas
fisttpll
ret
cmc
mov
pop
mov
cmp
mov
jno
sbb
mov
insb
repz
add
shlb
push
xor
mov
mov
ss
pop
ljmp
mov
cs
add
push
scas
shr
or
and
add
lret
xchg
xchg
int3
pop
mov
mov
sbb
mov
xor
shlb
aaa
and
jmp
repnz
loope
jg
dec
loope
push
mov
mov
je
sbb
cmp
and
call
and
pop
sbb
xchg
mov
fidivs
sbb
negl
cld
xchg
stos
or
jmp
popa
mov
mov
fwait
jne
adc
jo
mov
cmp
dec
and
push
cmp
addb
sub
adc
pusha
sub
xor
xor
cmpsl
jle
cmpsb
adc
jb
jns
cld
push
inc
push
mov
dec
mov
repz
xor
and
clc
andb
add
xchg
repnz
cli
sub
rclb
mov
fildll
or
fimull
mov
sbb
out
ljmp
mov
dec
cwtl
or
adc
sub
cwtl
jg
jne
ret
dec
aaa
and
or
push
iret
lods
pop
je
mov
jmp
sbb
inc
rolb
sbb
cmp
shl
mov
push
in
jno
inc
fiadds
movsl
mov
or
sub
pop
loope
jns
inc
aas
add
or
mov
push
ficoml
and
fs
scas
fcoml
hlt
mov
mov
jle
jns
push
fimuls
mov
clc
xor
jg
and
xchg
jno
dec
enter
hlt
insb
push
das
std
test
sti
fwait
cmp
lcall
xor
hlt
clc
data16
push
jns
imul
in
sub
fstps
and
sub
cli
pop
aas
sbb
or
inc
push
inc
add
jne
cld
sub
lods
mov
mov
sbb
les
int3
dec
inc
cmp
push
arpl
add
push
test
mov
pop
xchg
out
sub
mov
push
cmc
sbb
pop
pop
loopne
or
or
jle
and
mov
mov
inc
mov
ja
imul
pop
rclb
stos
movl
in
addr16
les
aam
decl
lahf
imul
sbb
jecxz
imul
jmp
int3
into
adc
mov
cwtl
mov
fadds
push
sub
jmp
xor
or
rclb
pop
xor
pop
pusha
pop
add
movsl
out
mov
rcr
scas
dec
lock
add
inc
mov
aas
pusha
or
xchg
xchg
enter
into
sbb
mov
dec
adc
sbb
pop
add
xlat
sub
adc
cmc
dec
and
dec
nop
cmc
movsl
mov
lahf
out
call
mov
loope
xor
ljmp
lods
jne
bound
lock
int
movl
mov
sbb
insb
mov
mov
sub
ret
mov
fnsave
imul
inc
mov
shrl
jb
out
mov
cmpb
clc
in
mov
mov
lds
ficoms
xchg
mov
inc
xlat
subl
jecxz
dec
pusha
sarl
sbb
sbb
into
sbb
mov
mov
xor
repz
push
and
outsl
jl
mov
leave
or
stos
ret
inc
pop
into
xchg
scas
imul
sub
jno
xchg
push
xor
cmp
notb
outsb
rcrb
mov
push
mov
sbb
in
into
popa
rorl
inc
sub
mov
or
fwait
pop
test
out
ss
stos
pop
imul
jg
sbb
mov
mov
mov
les
fwait
push
push
repz
pop
loope
negl
lret
pop
test
popf
subl
fcomip
cmpsb
ret
jns
sbb
sub
push
cli
xor
int3
icebp
dec
push
pop
adc
inc
mov
mov
and
mov
clc
je
rolb
mov
int
imul
ret
cld
insl
int
aad
cmp
mov
sbb
fnsave
jbe
dec
in
sbb
mov
call
test
jl
xchg
mov
out
jnp
dec
mov
out
jge
cmpsb
pop
iret
mov
cs
xchg
es
lock
and
cmp
pop
mov
xchg
movsb
xchg
fwait
add
push
fsubl
dec
jl
lds
bound
jne
mov
lret
push
adc
push
pop
mov
sub
sbb
insl
and
insb
sub
inc
fmuls
or
jno
std
sbb
and
jae
shrb
ja
inc
sbb
mov
jle
cmp
xchg
jg
movsb
out
into
cmp
cmp
xor
adc
sub
stos
sbb
orb
push
mov
xchg
divb
jb
aas
mov
lock
xlat
popf
popf
mov
rorl
mov
cmpb
pop
mov
ret
cmp
lods
psubusw
std
or
mov
aam
push
and
fwait
cmp
shlb
orl
int
jb
test
cmp
fisubs
mov
test
imul
push
xchg
mov
es
sub
mov
pop
push
sbb
sqrtps
pusha
jmp
inc
mov
inc
and
mov
outsb
movsb
adc
pushf
in
insb
rclb
pop
mov
xorb
pop
sti
arpl
arpl
repnz
push
sahf
mov
clc
inc
pop
repz
xlat
push
fldt
popf
outsb
adc
sbb
mov
sbb
lcall
jbe
jnp
mov
mov
int3
test
inc
lret
push
fisubs
pop
cmpl
cli
dec
dec
icebp
mov
das
pushf
and
sti
das
and
lea
mov
bnd
cmpb
jle
lahf
mov
adc
cmc
add
loope
lds
mov
sti
inc
cmc
ret
sbb
nop
xchg
push
frstor
test
leave
pop
or
push
pop
add
pop
enter
inc
fnstcw
data16
jl
cmp
pop
mov
scas
pusha
push
mul
mov
and
mov
mov
and
aad
pop
cmp
or
jg
push
xchg
xor
clc
ds
jnp
clc
int3
xlat
jmp
add
in
inc
pop
xchg
add
add
or
jne
ret
pop
dec
mov
scas
pop
into
adc
out
aas
cmc
ljmp
xor
inc
cmpl
scas
popf
popf
pop
mov
inc
fsubrl
loopne
xchg
test
movsl
in
ficoms
ret
jbe
or
pop
jle
pushf
mov
push
movsb
jecxz
mov
or
xchg
fwait
push
or
out
cmp
das
aaa
testl
inc
out
adc
movsb
imul
test
mov
mov
dec
subb
push
mov
or
add
test
mov
shl
mov
and
push
or
and
xor
fwait
out
repnz
inc
or
xor
push
push
stc
pop
jl
mov
lock
push
inc
cmpsl
cmpsb
fs
aas
lcall
mov
mov
out
sub
sub
sbb
maxps
cli
adc
out
data16
mov
mov
rcr
xrelease
or
enter
sbb
daa
scas
adc
mov
clc
cmpsb
mov
jecxz
mov
sbb
xor
jl
cmp
shrb
and
fcmovbe
mov
ret
lret
or
sbb
lcall
inc
das
mov
jecxz
dec
xchg
in
sbb
loop
fs
cmp
aaa
out
rep
mov
xor
outsl
mov
arpl
cwtl
js
daa
add
cmp
cld
iret
adc
sub
das
and
rcll
mov
xor
lods
cmp
add
mov
push
and
insb
inc
fistpll
jnp
adc
std
nop
stos
andl
cmp
insl
mov
mov
pop
mov
push
jl
sarb
pop
xor
lcall
xchg
test
sti
dec
out
add
and
jl
xchg
call
fldcw
das
test
pop
and
cs
stc
mov
inc
and
in
jge
dec
sbb
popa
bound
fwait
or
mov
loopne
mov
xchg
mov
pusha
mov
inc
lds
je
mov
leave
cmp
addr16
adc
cmp
je
mov
mov
test
pop
push
or
sbb
mov
dec
jo
push
mov
cmp
adc
push
outsb
lods
pop
and
outsb
jmp
repnz
scas
int
cmpsl
les
cltd
insb
mov
cltd
mov
pop
mov
xchg
loop
mov
out
lret
mov
fidivrs
mov
or
jns
ret
cmp
bound
lods
lret
aas
cmp
leave
mov
rcrl
loopne
inc
jnp
and
mov
dec
pop
imul
repz
es
gs
mov
or
mov
ds
lock
or
xor
aas
mov
inc
xchg
lock
js
out
sbb
lds
xchg
cmp
cmp
mov
sub
les
jmp
add
push
mov
xchg
push
les
mov
stc
hlt
fisubrs
xchg
repz
pop
loope
sub
data16
xchg
in
jbe
into
test
pop
leave
pop
jb
popa
mov
and
jns
ret
xor
xchg
sub
out
iret
andl
inc
mov
fidivs
sub
mov
sub
jp
add
xchg
lods
dec
push
in
mov
sbb
sub
or
ret
xor
add
aaa
je
mov
xchg
daa
adcb
mov
xor
clc
and
push
xchg
jl
sub
add
jae
mov
sbb
clc
lock
mov
cmp
lea
cmc
adc
jb
sbb
iret
inc
jecxz
das
or
outsb
nop
pop
jg
mov
and
pop
xlat
xchg
aam
arpl
pop
bound
ja
hlt
int
adc
popa
ds
test
mov
pop
das
xor
jne
and
add
scas
adc
xchg
fwait
pop
rcll
pop
inc
jg
in
jnp
jo
sub
out
jl
add
pop
adc
mov
add
in
push
cmp
pop
pop
sbb
and
imull
xchg
jo
pop
push
jge
js
sahf
or
sbb
call
jns
fisubl
xor
dec
lahf
test
jge
in
adc
sub
arpl
sbb
insl
es
shl
insb
adc
sti
pop
jmp
mov
adc
dec
ficompl
andl
and
fdivrs
xor
test
dec
cld
pop
into
repnz
sub
push
aaa
sbb
call
add
and
test
and
fwait
pop
adc
in
das
sbb
cld
jo
lock
jb
idivb
dec
repz
out
and
pop
cmp
push
adc
call
fsts
jae
movsl
inc
movsb
and
add
ja
cmc
adc
je
insb
je
ss
pop
xchg
ljmp
jb
push
xorl
cmpsb
rcll
and
inc
mov
and
gs
pop
cltd
pop
or
popf
roll
add
sbbb
ljmp
lock
mov
xor
jge
stc
push
and
sahf
adc
pop
mov
out
inc
mov
or
mov
gs
imul
inc
mov
ss
or
in
and
stc
xchg
xchg
sub
insl
xorb
lods
cs
sbbl
mov
cmp
push
icebp
jo
sbb
jne
mov
mov
fildl
out
movsl
mov
pop
push
dec
or
adc
sub
repz
les
sahf
mov
mov
xor
pop
fbld
bound
dec
mov
ljmp
sarl
jecxz
or
jecxz
xchg
push
in
mov
xchg
push
jb
mov
mov
js
lods
std
add
inc
enter
mov
fs
or
cmp
in
push
jo
cltd
rcrb
les
imul
shrl
xchg
and
cmp
cmp
dec
mov
adc
jl
mov
ret
addr16
cmp
lock
pop
test
pop
repnz
movsb
ret
insb
jp
pop
out
lahf
push
rclb
cmp
add
jno
lods
test
xchg
in
xor
xor
mulb
je
mov
scas
scas
icebp
inc
add
loop
int
clc
ret
ljmp
inc
mov
test
repnz
mov
in
pop
pop
pusha
sub
push
sarl
mov
jl
arpl
fwait
mov
cmpsl
cmp
or
outsl
or
call
test
in
in
cmp
out
pop
xchg
std
int3
imul
sub
jg
lock
xchg
roll
mov
and
int3
adc
andb
xchg
jmp
stos
cmp
cmp
repnz
and
or
nop
or
out
in
rcrb
xchg
jnp
xor
sbb
jb,pn
cmc
pop
sahf
xchg
out
jge
xlat
jle
mov
xchg
lock
lock
and
bound
sti
mov
test
hlt
mov
and
cmc
test
inc
cmpsl
popa
xchg
incb
push
daa
jno
inc
sub
sbb
add
lcall
and
sub
sbb
pop
or
dec
loope
dec
cli
pusha
xor
inc
mov
cmp
pop
stc
xchg
sub
push
out
cmp
sub
setbe
aaa
jg
inc
adc
fmull
loopne
push
loope
jbe
lods
js
dec
jo
movsl
testb
lods
loopne
mov
xor
fcompl
push
shl
subl
test
ss
cs
pop
outsb
dec
adc
pop
les
add
aas
cmpsl
xchg
shrb
xor
andb
imul
sub
es
leave
sbb
or
inc
pop
cwtl
mov
outsl
inc
xor
dec
dec
or
cmpsl
into
jno
sahf
xchg
in
inc
mov
lock
imul
xor
arpl
or
cmpsb
xor
sti
jbe
pop
mov
sbb
mov
mov
mov
pop
lods
pop
lds
mov
test
cmp
popa
pop
stos
pusha
sbb
aas
push
xor
ficomps
dec
mov
lcall
or
inc
into
imul
scas
push
add
xchg
pop
push
add
mov
insl
jmp
adc
nopl
push
jae
jnp
pop
add
outsb
out
in
inc
pushf
and
ljmp
aam
sbb
pop
lods
sbb
stc
test
repz
push
cmp
jecxz
incb
add
xchg
call
es
mov
call
stos
pop
push
inc
or
xchg
loopne
jmp
xlat
in
addl
cmp
jb
push
lods
mov
aam
push
jmp
sub
sbb
mov
shrb
cmpb
xchg
ret
jge
sbb
inc
and
icebp
xor
pop
inc
ljmp
test
and
repz
or
add
rcr
push
cmp
mov
adc
faddl
or
lods
loop
aad
imulb
mov
jbe
in
mov
js
sbb
in
add
xor
sub
sub
imul
xorl
jno
gs
sub
addb
push
cmpsb
ljmp
out
mov
cmp
xor
xor
in
outsb
cmp
clc
jbe
or
jo
adc
xchg
fsts
cmc
mov
cli
pop
iret
and
filds
enter
pop
push
sbb
test
aad
lds
pop
xchg
xchg
sbb
cmpsl
sub
es
movsb
inc
sbb
cmpsl
jecxz
fnstsw
outsl
adc
aad
or
rclb
ds
data16
cmp
out
orl
rorb
out
mov
addr16
insl
arpl
mov
sbb
push
loop
push
sub
jg
fs
and
sarl
ja
xor
jnp
lock
dec
adc
mov
xor
mov
int
sbbb
sub
cmp
mov
pop
or
jl
push
cmp
js
daa
test
arpl
jecxz
mov
mov
sti
push
call
cmpsb
mov
jno
jae
cs
jge
imull
sbb
mov
movl
mov
int
mov
cmp
fsubs
in
das
pop
push
push
ss
addr16
cmp
push
dec
push
jle
jne
pop
xor
clc
jo
shrl
and
add
add
dec
ja
push
call
push
push
sub
les
mov
mov
fbld
adc
cs
loop
sarl
adc
adc
cmp
mov
rorb
sbb
xor
jmp
test
loope
loop
lret
fadd
aad
mov
flds
scas
pop
fs
mov
add
nop
sub
jo
icebp
or
sti
fnstsw
sbb
pop
or
inc
mov
in
lods
xchg
popa
fldt
into
call
iretw
outsb
jns
xor
ljmp
lods
xchg
inc
subl
cmp
pop
dec
add
pop
mov
sub
or
out
iret
adc
stos
sub
push
lret
ljmp
addr16
or
bound
xor
mov
mov
aas
int
lods
jmp
ds
insb
mov
xchg
add
jl
stos
mov
cmpsb
mov
dec
in
pushf
mov
out
pop
dec
lods
out
sbb
into
pop
and
inc
shlb
cmp
lret
jbe
loop
push
out
int3
pop
mov
sarb
cmp
mov
fstps
cmc
lret
scas
mov
int
push
push
sbb
cmp
sbb
clc
xchg
mov
ficomps
add
movsb
push
fdivl
dec
js
xchg
repz
cmp
sti
mov
sbb
mov
sbb
pop
jno
add
ja
sub
jo
mov
ds
cmpsl
rolb
fisubrs
jno
pusha
dec
aad
mov
cmp
inc
pop
call
in
pop
fsts
ret
mov
fisubrl
inc
movsb
lods
mov
push
mov
decl
sbb
adc
insb
or
xchg
adc
addb
fimull
insl
cltd
dec
push
jae
inc
mov
sub
shlb
jns
sti
cmp
pop
out
stc
pop
push
adc
inc
jnp
mov
sbb
out
pop
pop
mov
test
out
into
xor
test
into
xor
cmp
add
jg
xor
add
daa
and
pop
sbb
shlb
sub
out
or
or
xchg
hlt
jo
in
ja
out
mov
inc
scas
adc
pop
repz
cld
mov
mov
pop
lahf
js
je
fcomi
icebp
aas
push
or
cmpsb
sahf
das
dec
gs
js
divl
and
dec
mov
sbb
mov
or
dec
or
stos
in
push
adc
loope
fld
or
push
iret
cmp
shlb
push
cwtl
orb
mov
loope
lock
stc
sbb
lret
out
jmp
adcl
mov
adc
fildl
jae
ds
dec
out
xchg
cmpb
stos
dec
jmp
nop
test
fildll
xlat
push
jae
cmp
jecxz
push
pop
les
gs
xchg
imul
pop
js
xchg
push
shrl
ds
inc
rcr
add
mov
addb
and
data16
pop
mov
shrl
mov
outsb
int
inc
and
adc
push
inc
test
rolb
sub
popa
cli
fxch
xchg
and
dec
push
and
pusha
xchg
xor
divb
and
mov
push
inc
mov
jecxz
pop
push
dec
stos
fadds
in
inc
imulb
xchg
ret
add
cltd
popf
mov
add
sub
popa
xchg
insl
mov
pop
sub
xor
jbe
jo
push
jle
hlt
pop
inc
fistpll
aaa
mov
lret
xchg
dec
cmp
push
nop
dec
jge
outsb
lcall
sahf
sub
xor
aam
scas
add
pop
mov
popa
adc
aas
cltd
push
pop
icebp
rol
cmp
inc
cmp
into
data16
insl
adc
jg
mov
pop
and
addr16
mov
sbb
mov
xchg
push
push
imul
lcall
fnsave
test
cld
fldl
pop
xchg
icebp
imul
cltd
xchg
cwtl
xchg
rcr
imull
cld
adc
and
pop
test
out
testb
std
mov
push
dec
ds
ret
add
pop
push
sbbl
xchg
add
imul
pop
test
xchg
insb
xchg
and
xorl
xor
mov
inc
push
sub
sbb
pusha
xchg
int3
test
pop
jge
in
and
push
mov
jle
mov
add
sbb
inc
or
loop
add
pusha
jle
cmpb
int3
cwtl
and
mov
mov
imul
fisubrl
outsb
clc
std
pop
lcall
test
xchg
lret
subl
daa
mov
filds
push
lock
ja
ss
iret
xchg
jmp
pushl
fbstp
repnz
aas
sti
mov
sbb
ljmp
inc
inc
jmp
mov
clc
fidivrl
out
imul
xchg
ret
mov
and
popf
push
adc
ret
push
jge
test
or
imul
out
setnp
das
inc
push
mov
ret
outsb
movsl
je
sbb
cmp
cwtl
lcall
dec
fstpt
mov
test
call
jmp
push
dec
dec
int3
ljmp
mov
mov
cmp
es
mov
test
pop
popf
pop
int
idiv
xchg
scas
test
in
jne
xor
cmp
mov
xor
or
lods
adc
lods
jp
jbe
sub
pop
cmp
notl
cmpsb
mov
mov
cmpsl
mov
push
mov
sub
xchg
mov
ds
pop
dec
cld
subl
je
dec
idivl
mov
sub
cmp
pop
fucomi
xor
lcall
adc
sub
push
and
negl
cmpsb
jmp
add
jecxz
adcb
push
pop
dec
cmp
mov
and
pop
inc
or
pop
sbb
add
jae
outsb
dec
stc
jle
push
mov
int
cmpsb
gs
repnz
std
pop
mov
loope
sub
jnp
loop
mov
mov
iret
dec
and
mov
adc
dec
mov
loopne
addr16
shll
into
popf
rcrl
hlt
in
data16
xlat
test
mov
stc
sarl
sbb
lock
or
pusha
test
mov
mov
andl
mov
dec
leave
push
cli
mov
pop
jno
mov
and
xchg
mov
mov
pop
jmp
leave
xchg
inc
xor
xchg
xor
out
movsb
jg
leave
xchg
notb
cmp
icebp
cmpsl
lahf
lock
lcall
xchg
aas
ficompl
movsl
inc
mov
jle
repz
inc
mov
fiadds
inc
in
pushf
ret
pop
dec
scas
dec
imul
sub
ljmp
scas
inc
mov
std
push
popa
cs
add
xlat
mov
jmp
sub
mov
push
out
push
dec
push
add
jge
mov
test
pop
lcall
inc
fbstp
jle
inc
lds
cmc
imul
lods
or
mov
xorb
mov
or
dec
in
mov
pop
ss
or
or
add
jno
sbb
jo
leave
push
push
push
jle
sarl
mov
fistl
pop
je
ljmp
xchg
xchg
xor
sti
push
pop
in
push
popf
aaa
ficomps
out
out
into
push
test
mov
mov
sahf
inc
cmp
or
jg
daa
out
cmp
popf
add
pop
jae
pushf
stos
popa
in
jb
call
dec
pop
or
jge
arpl
push
cs
jge
push
movsl
cmpsb
outsb
jl
xchg
je
jle
movsl
push
ja
int
mov
xlat
out
jp
sti
push
cmp
or
push
mov
aad
cld
inc
inc
sbb
push
push
fbld
inc
pop
dec
inc
adc
cmp
sub
push
int3
xchg
mov
xchg
mov
dec
adc
lret
sar
jbe
out
cmpb
cmp
adcl
repz
and
repnz
loope
xchg
or
fistpll
pushf
stc
sbb
enter
adc
fstps
mov
xchg
xchg
lahf
lcall
cmp
inc
aaa
sub
pusha
les
add
lds
cmp
loop
push
in
cmp
push
scas
test
shll
stos
mov
je
cs
adc
add
fdivrs
and
jp
xchg
and
mov
out
add
jb
cmp
lds
inc
mov
mov
imul
adc
pop
notl
push
pop
or
mov
dec
push
bound
sub
gs
mov
je
xor
sub
rorb
fwait
mov
movsb
movsl
out
jecxz
movsb
xchg
addl
jo
testl
sbb
icebp
jl
jno
int
cltd
stc
test
pop
or
icebp
ds
xor
and
mov
cmc
cli
sti
jbe
sub
mov
or
into
scas
ficoms
adc
cmpsb
lcall
fnstenv
inc
xchg
jp
or
xchg
sbb
test
dec
inc
outsl
cltd
inc
sahf
jb
mov
mov
mov
mov
addl
mov
cmp
or
pop
cmp
hlt
jae
imul
inc
fmuls
sbb
xchg
loopne
pop
xor
mov
roll
mov
stos
or
lret
stos
xor
mov
push
sub
mov
mov
push
lods
in
push
mov
add
and
lds
clc
mov
into
add
push
test
fsts
mov
aad
xchg
gs
into
lea
fbld
outsl
sub
data16
xor
jmp
sub
cmp
sete
add
insl
leave
xlat
mov
out
lock
or
pop
clc
ljmp
jge
xchg
and
cmpsb
leave
jle
stc
cmp
out
outsb
jmp
mov
loope
jecxz
in
bound
cmc
pop
and
or
xchg
faddl
aam
sub
sbb
push
cmp
idivb
std
sub
ret
xor
cmp
iret
mov
cmc
addr16
movsl
lcall
test
lcall
push
pop
xchg
adc
movsl
xor
mov
hlt
shrb
iret
aas
mov
cmp
bound
xchg
cmp
cmp
lret
ret
cmc
add
xor
cmc
pop
inc
xor
les
fistps
and
or
push
iret
out
sarb
testl
cmp
pop
in
je
ljmp
lods
mov
and
xor
xchg
fcoml
loope
cmovl
xor
mov
stos
push
pop
sub
xchg
imul
cmp
mov
movsb
cmp
push
jae
lea
adc
in
popa
sbb
jae
mov
mov
test
int
fwait
add
push
adc
das
jne
leave
dec
shll
jl
pop
cmpsb
leave
adc
outsb
sahf
dec
addr16
cwtl
cmp
mov
ror
loope
mov
bound
icebp
outsl
pop
mov
mov
mov
outsb
pop
sub
add
in
mov
mov
mov
out
mov
jge
icebp
divl
xchg
test
inc
adc
dec
mov
nop
sbb
jno
loop
ss
pop
jne
xlat
je
daa
push
pop
sub
push
pop
pop
out
push
dec
pop
insb
sbb
aas
xchg
inc
insl
lahf
add
pop
gs
call
pop
pop
inc
add
mov
sub
mov
cmp
insb
stc
or
hlt
dec
dec
sbb
xchg
lock
push
std
repz
add
jnp
sbb
nop
fwait
push
in
push
aam
insl
pop
jge
inc
xchg
mov
mov
mov
aas
xchg
movl
xor
adc
idivb
arpl
cmp
jno
and
cmp
fnstcw
pop
loop
pop
outsl
insl
mov
cmp
mov
sbb
jmp
cmp
ret
sbb
jnp
into
sub
jb
in
imul
icebp
adc
xor
inc
jge
and
sbb
repz
jle
pop
cmpsb
xchg
and
movsb
loopne
stos
mov
scas
mov
push
sub
leave
fs
mov
pop
sub
or
push
dec
lods
and
pop
and
ret
mov
shlb
inc
cmpsl
fisubrl
inc
mov
fyl2xp1
ljmp
aas
loop
jno
pop
sbbb
fidivs
mov
enter
inc
and
dec
mov
cmp
dec
mov
sub
or
pop
jp
jle
imulb
cmpsb
pusha
inc
jne
add
arpl
push
gs
xor
and
dec
mov
imul
cwtl
aad
rcr
mov
cmp
lea
sub
shlb
pushf
rorb
cs
dec
adc
mov
jle
fsubrl
xchg
mov
hlt
cmp
dec
imul
jae
mov
ljmp
add
gs
cmpl
dec
sub
je
jl
test
mov
test
adc
repz
xchg
rcrl
roll
les
or
jne
or
into
xor
fldcw
stos
scas
out
pushf
icebp
dec
pop
mov
push
mov
mov
out
mov
cmpsl
pop
xchg
xchg
mov
xlat
xchg
sbb
jecxz
outsb
stos
push
int
je
mov
mov
xchg
in
fisubrs
jnp
lcall
dec
dec
jnp
adc
out
and
cli
bound
int
or
inc
into
mov
inc
or
mov
sub
mov
push
or
xchg
movb
movsb
pop
or
outsb
nop
dec
stos
mov
cli
sbbl
jno
arpl
sarb
cmp
inc
nop
dec
add
fsub
sbb
pop
jmp
mov
mov
mov
jbe
daa
jns
leave
mov
xchg
daa
fwait
xchg
int
sub
sbb
xchg
jecxz
in
or
push
aaa
mov
mov
jbe
pop
mov
popf
pusha
mov
insb
cmp
test
pusha
inc
rcll
mov
fbld
cmp
mov
popl
xor
in
decl
xchg
imul
lcall
enter
mov
out
insl
inc
pop
sub
aad
test
xlat
hlt
and
imulb
test
outsb
dec
in
jbe
mov
ljmp
dec
in
and
lods
push
sub
inc
cmp
xor
imul
adc
xchg
inc
push
cmpsl
addb
pop
shll
cmp
pop
rcl
test
clc
aaa
es
and
mov
add
fdivp
movsl
inc
lods
addr16
push
jae
vpacksswb
shrl
std
mov
sbbb
aas
ret
fcmove
repnz
xor
es
jb
faddl
add
iret
xchg
adc
iret
nopl
sub
ljmp
sub
mov
imul
xchg
or
mov
pop
stos
hlt
fisttpll
es
mov
test
movsb
or
cwtl
lret
das
xor
lods
imul
aaa
push
mov
add
fnstsw
push
inc
push
mov
aas
fstps
inc
mov
xchg
add
dec
sarb
mov
inc
mov
mov
mov
xchg
and
pop
mov
mov
dec
sub
jle
mov
popa
aas
push
lds
pop
sti
test
sbb
and
xchg
adc
xchg
clc
cmp
test
ljmp
cmp
fwait
pop
inc
jb
sub
mov
dec
sub
and
or
adc
das
in
xchg
push
add
xchg
or
push
iret
idivb
hlt
xor
cmp
adcb
inc
hlt
call
test
ds
imul
cmp
push
mov
mov
adc
stc
fs
dec
mov
add
sub
xor
pop
cltd
lods
out
add
fidivs
add
mul
imul
test
push
or
jl
rcrb
das
cmp
mov
jne
pop
pop
insl
mov
dec
dec
lahf
cltd
inc
jne
push
aas
in
aas
outsl
dec
fisttpl
mov
adc
sahf
dec
call
in
dec
pop
mov
adc
js
mov
mov
fwait
add
mov
adc
pop
xchg
jno
sbb
addr16
push
jl
fildll
aam
cmpsl
fildl
adc
push
dec
scas
mov
fisttpl
decl
imul
outsl
mov
pop
cmpsl
xor
pop
dec
xchg
jae
pop
push
int
adc
gs
sbb
mov
addr16
movsl
imul
sbb
out
loop
shr
inc
xchg
inc
fmuls
lret
in
dec
jge
jmp
ret
fs
mov
stos
call
in
pop
push
in
jl
cmpl
add
xlat
adc
push
adc
insb
std
xor
test
popf
fistpl
pop
cmc
imul
mov
mov
lods
sub
xor
and
cmp
dec
add
mov
mov
insl
ljmp
std
xchg
ja
test
mov
outsl
sub
jl
push
add
pop
adc
or
sbb
dec
dec
xlat
xchg
gs
add
lock
cmp
mov
mov
repz
into
and
push
mov
dec
mov
xchg
push
sti
icebp
xchg
pop
add
lea
or
out
xchg
dec
rclb
int3
mov
jbe
ror
pop
test
bound
jl
out
das
cmc
ja
xorl
mov
cmc
fldenv
xor
and
jmp
xchg
stc
jl
std
sbb
sbb
mov
adc
jl
inc
daa
and
dec
fimull
sbb
cli
sub
push
pop
mov
icebp
out
imul
nop
cwtl
jne
je
mov
rorl
arpl
cmpb
mov
adc
push
cmpsl
icebp
fsubrs
dec
and
push
pop
jno
xchg
or
mov
jp
jo
arpl
jno
decl
sti
mov
incb
cmpsl
cmp
aam
leave
cmc
pusha
inc
mov
fsubrl
dec
jmp
in
out
lea
and
das
mov
xchg
cwtl
dec
and
ja
hlt
jle
sbb
adc
inc
mov
pop
xlat
cmp
inc
enter
cmpsb
lods
mov
insb
sub
and
inc
pop
jmp
mov
mov
jb
xor
ss
push
xor
rolb
sbb
mov
stos
dec
dec
xchg
pop
mov
stc
add
jb
pop
and
ficomps
mov
add
outsb
mov
aas
mov
xchg
or
call
pop
pop
add
push
push
rolb
mov
sbb
and
leave
xorl
xchg
ds
data16
lock
nop
adc
push
stos
sbb
xor
ds
sbb
jbe
lock
loopne
push
pop
inc
cmpsb
dec
aas
adc
xchg
jg
test
mov
mov
shll
adc
into
push
jmp
cltd
icebp
je
imul
addb
pop
movsl
fiaddl
lea
pushf
insb
push
or
lret
pop
push
adc
cltd
push
or
jno
sbb
stc
sub
cmpsb
mov
jmp
cmp
mov
jmp
mov
cmp
addr16
clc
xlat
push
push
ret
insl
mov
out
mov
outsl
xchg
lods
push
push
mov
inc
data16
dec
cld
cmp
mov
out
or
xor
out
mov
push
jb
imulb
int3
sbb
inc
loopne
xchg
popa
hlt
or
imul
cmc
mov
push
cmpsl
sub
add
mov
iret
fmuls
mov
mov
das
jp
adc
aas
rolb
cs
daa
lret
jne
jbe
stos
xchg
push
cmp
xchg
lret
ret
push
sub
pop
and
out
inc
hlt
dec
je
sbb
testb
mov
arpl
fdivr
enter
mov
inc
or
out
aaa
mov
idivb
and
mov
adc
push
pushf
in
inc
lds
push
xchg
js
push
cmpsb
xchg
mov
mov
scas
imul
loop
inc
pop
rorb
scas
sti
shlb
aad
fwait
mov
das
mov
xor
xchg
scas
jge
cmp
sub
outsb
mov
adc
pop
push
out
or
dec
pusha
and
push
test
pop
push
fwait
cmc
out
scas
lret
xor
fistpll
push
js
add
lods
cwtl
pop
or
shlb
pushf
cmc
or
and
adc
in
xlat
testl
sbb
mov
add
or
mov
adc
sbb
pusha
call
jo
jnp
lods
sahf
add
in
pop
pop
daa
mov
shlb
repz
iret
or
xor
jb
rol
in
cmp
jle
in
rorb
sub
stc
push
push
push
mov
push
dec
cmp
xor
leave
mov
push
jno
rclb
push
inc
mov
inc
or
dec
mov
stos
inc
jbe
inc
jae
add
inc
cmpsl
fstpl
xchg
in
inc
jne
clc
dec
lods
shr
fiaddl
test
mov
lods
push
jl
push
xchg
and
insl
and
pop
xor
das
scas
rolb
inc
cmp
dec
hlt
ja
dec
movsb
jno
gs
into
push
mov
sbb
aam
loope
movb
xor
jl
test
mov
rcl
mov
mov
int
lahf
dec
pop
fildll
push
add
add
out
jg
cmp
xor
movsb
cmp
mov
popf
pop
ficompl
pop
fimull
mov
mov
mov
jp
mov
pushf
in
mov
enter
test
arpl
lea
gs
js
icebp
lock
push
or
sub
inc
sbb
jecxz
aaa
jbe
jp
mov
loope
nop
js
shl
in
sbb
push
sub
mov
sbb
mov
xor
inc
pusha
pop
cmc
add
fsubrs
insl
popf
mov
push
test
jl
mov
pop
ss
clc
movsb
fsubrl
js
xchg
mov
je
inc
ljmp
jmp
shrl
add
cmp
mov
out
jbe
sahf
mov
in
xor
dec
out
sbb
pop
mov
mov
jp
aaa
push
add
and
cmp
xor
fadds
test
mov
cmp
and
sahf
xor
push
mov
das
xor
cmp
jmp
mov
dec
ss
sbb
popf
mov
add
sbb
lods
enter
xlat
xor
push
popf
dec
sbb
or
sbb
cmp
je
repnz
push
cmp
inc
inc
outsl
cmpsb
into
pop
loop
movsb
and
ljmp
inc
fs
andb
pop
sbb
xchg
jne
fidivl
lret
loope
cmp
add
in
pop
xor
push
mov
jb
sahf
movb
scas
pop
or
out
cwtl
dec
dec
xchg
xor
mov
pop
jne
and
icebp
adc
pop
mov
xor
dec
or
push
aaa
xchg
jle
pop
and
aaa
and
rcrl
rcll
jne
jmp
nop
stc
mov
xor
jecxz
lds
add
dec
sub
mov
icebp
adc
movl
ret
add
orl
xchg
pop
xor
push
es
add
fidivrs
out
and
sbb
loope
jle
roll
and
rorb
ja
addr16
insl
jns
jnp
adc
adc
fcmovb
inc
sahf
xchg
dec
lods
lret
fisttps
xchg
push
js
addb
insb
data16
test
xor
movsb
jno
cld
test
inc
outsl
push
fcomps
or
js
ja
scas
mov
ret
jno
out
mov
dec
inc
movsl
adc
and
scas
das
or
movsb
adc
lea
sub
fnsave
sbb
scas
bnd
imul
adc
out
mov
xchg
dec
mov
push
pop
loope
mov
pop
pop
cli
cmp
or
rcrb
fildl
push
aas
mov
fdiv
int
xchg
or
leave
mov
call
bound
xchg
dec
in
lahf
sbb
andl
push
xchg
outsb
xor
sub
sarb
xchg
push
addr16
test
fwait
jl
mov
push
imul
jle
jo
push
adc
frstpm(287
xchg
cmp
int3
adc
dec
mov
lea
inc
gs
ret
and
pushl
shl
sub
lret
mov
in
pop
xchg
inc
mov
imul
cmpsl
sbb
adc
fildl
ret
sub
sbb
pop
mov
pop
fsub
jne
iret
mov
fildl
jns
in
push
push
xlat
sahf
cltd
adc
test
cli
push
in
jmp
nop
xchg
xchg
iret
xor
fs
fs
pop
inc
mov
lods
sub
mov
add
adc
push
shr
sbb
sub
or
xchg
or
insb
aas
mov
das
mov
cmp
popf
push
and
xchg
lea
movzwl
mov
stos
sahf
jb
xchg
add
mov
out
mov
and
push
mov
xor
push
push
aam
jbe
cmp
add
xor
xor
pop
scas
cmp
xor
sub
repz
pop
xorl
cmp
aaa
dec
out
inc
pop
mov
lods
mov
dec
addl
jns
lret
into
sbb
sub
and
int
fistpl
orb
insb
cmp
xchg
adc
int
add
mov
mov
repnz
inc
fbstp
add
pop
cmp
or
sti
es
pusha
sub
es
xchg
insb
scas
mov
inc
cmp
out
lea
push
lock
divb
mov
adc
or
scas
rclb
mov
iret
push
mull
mov
mov
pop
mov
push
lods
in
jmp
sub
outsl
testl
stc
nopl
movlps
outsb
xchg
inc
movsb
push
mov
jbe
mov
mov
xchg
add
dec
je
lret
iret
fsubs
sti
fimuls
sahf
jp
bound
roll
mov
jne
xor
push
dec
mov
bound
bound
inc
jle
nopl
test
xchg
popf
arpl
jle
and
and
daa
push
fs
xchg
daa
es
inc
stos
dec
xor
pop
shll
jp
pop
int
inc
mov
xor
mov
jns
mov
setb
mov
lahf
shl
cmpsl
push
add
sub
js
dec
xchg
jne
xlat
and
int
popa
jns
push
movsl
add
test
pop
imul
adc
scas
outsl
std
pushf
movl
mov
pop
repnz
scas
pop
je
or
pushl
test
push
imul
or
roll
and
add
cmp
mov
push
inc
or
hlt
test
sahf
loop
testl
loopne
push
push
pop
xor
stos
jne
hlt
data16
mov
push
push
clc
xor
mov
hlt
mov
popf
test
mov
xchg
loop
push
sub
dec
cs
xchg
sahf
lods
mov
push
jl
pop
adc
inc
out
jno
dec
adc
mov
rcpps
cmp
ja
pusha
repnz
sbb
add
lds
jp
arpl
mov
dec
inc
pop
lret
cld
bndldx
mov
sahf
and
loopne
mov
or
ret
repz
fsts
test
cmp
and
in
sub
pop
sbb
jo
push
jo
je
push
xor
sub
enter
outsb
adc
mov
jmp
pop
inc
mov
xor
add
ret
push
aam
sub
jae
call
movsl
push
aaa
dec
in
es
rolb
out
test
xchg
adc
push
popf
iret
xor
pop
sahf
int3
inc
dec
call
icebp
cmpb
insl
popf
outsl
sbbl
fs
and
leave
mov
mov
adc
push
js
cmp
jne
lods
xchg
cmp
je
push
jp
inc
pop
outsl
leave
mov
cmp
pop
in
fcoms
xchg
out
xor
lods
cmp
mov
or
test
mov
pop
cmp
hlt
xchg
push
xor
push
scas
inc
int3
scas
dec
xchg
dec
inc
fildll
pop
mov
outsl
pop
lahf
dec
cmpsb
out
pop
aad
aaa
jmp
dec
mov
pop
les
cmp
and
pop
mov
mov
xor
mov
add
cld
scas
jg
cmp
int
outsb
xchg
jno
and
sti
push
adc
inc
gs
frstor
or
ficoml
insb
rolb
lods
pop
pop
add
xor
jns
shll
ja
mov
iret
mov
in
or
jle
push
int
inc
mov
fwait
xor
dec
xchg
scas
or
and
xor
mov
mov
rcll
icebp
fadds
or
sbbl
shlb
sbb
js
xchg
dec
push
negb
leave
mov
or
pushf
xchg
jae
roll
push
fs
in
push
push
mov
ret
in
dec
add
pop
insb
xor
ss
mov
sub
fstpt
or
hlt
pop
xchg
sarl
insl
push
sbb
test
xchg
mov
dec
shlb
push
fiadds
xor
pop
cmpb
stos
in
loope
lds
pop
fisubrl
cmpsl
or
sub
dec
sub
fwait
pop
lock
ja
loop
inc
xorps
inc
les
outsl
cmp
pop
jge
push
test
mov
mov
mov
loopne
mov
or
ss
inc
pusha
stos
push
cmp
lret
and
lds
mov
roll
rol
ffree
dec
divb
jnp
cld
jb
nop
lret
adc
sub
mov
adc
push
out
jp
xchg
xchg
push
iret
mov
and
adc
sbb
cmp
call
cltd
cwtl
and
lods
adc
xchg
mov
dec
fadd
and
rclb
sub
inc
inc
or
fsqrt
sbb
inc
cwtl
aam
daa
ret
xchg
mov
mov
sbb
int
pop
mov
arpl
mov
insl
jb
lret
mov
push
cmpsl
or
and
pop
mov
stos
add
rorl
or
pop
jae
push
jns
mov
and
jle
cld
test
push
in
push
push
out
pushf
push
movsb
adc
jns
or
inc
adc
addr16
inc
dec
cmp
dec
loope
xor
push
insl
or
or
les
pop
add
or
dec
inc
mov
loop
ja
jecxz
rol
aas
in
xchg
cld
lcall
sahf
fs
dec
inc
mov
loopne
xor
lret
imul
xchg
addr16
and
scas
in
xor
mov
hlt
push
in
aas
add
jg
movsl
subl
cwtl
in
cltd
div
add
dec
pop
sahf
mov
mov
push
test
pop
adc
lahf
dec
xchg
pop
xchg
pop
repz
jb
pop
rorb
mov
outsb
in
jns
pusha
in
fisubrs
mov
ret
pop
call
push
mov
jo
cwtl
in
lock
xchg
std
hlt
ds
xchg
hlt
loop
jle
or
xchg
xchg
shll
cmpb
mov
jbe
out
cmp
add
lods
add
cmpsb
mov
sahf
clc
dec
das
test
test
fucomp
xchg
loopne
xor
mov
daa
cmpsl
mov
aaa
aad
icebp
rcrb
mov
pushf
push
aaa
xor
call
stc
hlt
bound
aas
js
and
adc
ret
stc
add
sbb
jae
ror
sub
adc
mov
jmp
mov
sarb
aam
push
push
test
and
into
cld
es
sahf
jge
mov
mov
lcall
dec
cwtl
out
cmp
xchg
mov
je
sti
and
fildl
jmp
and
mov
int3
cmp
jg
mov
pop
ss
xor
popf
into
mov
xor
lods
mov
gs
rclb
jb
xchg
cmp
cmp
add
xchg
ret
cmovg
shrl
sbb
pop
adc
lods
and
push
orl
enter
sbb
in
push
bound
mov
cmpsb
dec
and
addr16
cmp
sti
ja
cwtl
mov
call
adc
sub
jae
rep
mov
jns
mov
aam
or
xchg
or
loop
lods
inc
aaa
add
sahf
lods
mov
outsb
js
adc
add
mov
lods
rolb
mov
outsl
jp
jle
popf
sbb
lahf
repnz
insl
mov
inc
mov
fwait
mov
aad
ss
mov
push
loope
xchg
stc
hlt
push
fs
jno
lds
jo
popa
push
mov
xchg
js
or
repnz
sbb
mov
push
data16
pop
jmp
push
stc
push
std
inc
xor
mov
mov
fsts
inc
inc
sub
sbbl
and
stos
btr
push
cmp
pop
out
and
ficoms
xorl
addr16
nop
in
int
movsl
sbb
cmp
cmp
adc
not
adc
test
gs
fcoms
fs
mov
mov
or
adc
mov
adc
cmpsl
mov
hlt
xchg
pop
std
test
xchg
rcr
clc
sub
out
cwtl
or
and
sub
imulb
popf
aaa
cmc
addr16
ficompl
adc
mov
testl
in
xchg
or
aas
add
and
outsb
pop
clc
inc
inc
add
and
adc
test
int3
xchg
mov
pop
lock
es
adc
clc
dec
cmpb
xor
ds
and
and
mov
or
jbe
pop
pop
jmp
push
mov
xlat
fisubrs
insl
push
rorl
inc
mov
lret
cmp
xor
push
cmp
jb
push
dec
fimuls
dec
xchg
call
mov
jmp
outsl
cmpsb
dec
mov
lods
lods
fdivs
sbb
ds
ja
lahf
ret
dec
std
test
jns
xchg
mov
clc
aaa
mov
mov
rcr
dec
or
cmovne
jne
pop
add
sub
jmp
es
daa
jns
sbb
mov
repz
push
lods
sbb
push
shll
and
push
in
sbb
into
aam
xor
and
aam
fcompl
xlat
sti
pop
lret
mov
cwtl
shr
jge
rclb
fwait
push
mov
fldl
mov
jns
bnd
aas
int
sbb
sbb
iret
push
dec
mov
mov
jns
aam
sub
and
jecxz
lods
or
jb
in
clc
int
pop
adc
mov
addl
adc
lea
push
mov
pusha
sarb
lods
lcall
or
xchg
push
or
and
cmp
sbb
nop
out
js
out
imul
clc
jne
daa
sarb
add
je
push
sub
popl
dec
rclb
test
jmp
leave
movups
mov
dec
fidivl
test
insl
test
pop
fadds
adc
jle
dec
xchg
jbe
sbb
lock
outsb
bound
hlt
jnp
dec
dec
in
and
cmc
add
fcoml
mov
fcomi
fdivp
pusha
es
pushl
mov
leave
je
lahf
fistps
jo
and
mov
aad
adc
jb
dec
fisubl
cmc
mov
jb
push
jmp
mov
out
clc
mov
movsl
pop
sub
pop
test
ret
into
jl
cwtl
push
pop
sub
dec
not
sbb
xchg
shlb
lock
dec
cld
ja
xor
jnp
cmp
jmp
inc
inc
xor
xchg
sbb
mov
jp
xor
leave
pop
adc
mov
xchg
jnp
jno
arpl
mov
in
pushf
jno
jbe
icebp
lret
and
inc
dec
iret
and
addr16
fcmovnb
mov
xchg
and
movsl
pop
add
insb
aas
cmc
cs
bound
jl
out
dec
rcl
repz
adc
inc
inc
sub
pop
cmp
xchg
mov
cmp
repz
pop
lods
fmul
sbb
jno
mov
mov
or
cli
adc
push
std
ss
les
or
xor
xor
inc
lret
loop
pusha
jecxz
lahf
dec
test
in
inc
push
in
jp
shlb
xchg
xchg
xor
sarb
sub
dec
fsts
mov
push
adc
aaa
pop
rorb
dec
js
xchg
in
push
jecxz
inc
aad
pop
or
mov
cmc
jnp
mov
and
pop
sub
jl
outsb
inc
sti
aaa
outsl
push
adc
push
shlb
inc
fisubl
or
mov
mov
push
lcall
push
lret
mov
xlat
push
jmp
dec
scas
push
add
add
mov
dec
mov
cltd
pusha
shl
imul
mov
mov
mov
cld
adc
test
add
inc
js
ror
xchg
inc
lock
sbb
jl
mov
cwtl
xlat
xchg
fwait
inc
jns
inc
icebp
test
insb
cmp
mov
lea
mov
inc
pusha
mov
jae
push
in
and
andl
lods
lret
mov
fcoml
sub
xchg
sbb
add
sbbb
fisttpll
mov
hlt
mov
stos
push
pop
pop
jle
xor
and
cmp
sub
add
ret
lsl
fsubr
inc
loopne
xlat
mov
bound
inc
mov
add
push
bound
fistpll
insb
outsb
add
mov
mov
adc
jecxz
aaa
cmp
push
frstor
sbb
mov
enter
insl
jns
scas
fstpt
andl
test
sahf
lods
jb
push
sbb
push
lahf
scas
imul
mov
cmp
inc
fdivs
dec
aam
rorl
add
call
aas
push
insl
lret
push
mov
xchg
adc
xchg
mov
pop
leave
outsb
push
orl
inc
sbb
cli
mov
xor
std
add
inc
dec
mov
push
shll
mov
and
incl
call
sub
das
fcomip
mov
cld
sub
adcl
jmp
cmp
xor
sahf
adc
pop
and
lahf
testb
cmp
pop
adc
jns
mov
or
jmp
in
jnp
jle,pn
lahf
mov
out
mov
sbb
pop
dec
test
cmp
pusha
push
sub
leave
rol
jge
cmp
add
cmp
sbb
cmpl
test
xchg
mov
mov
jle,pt
stos
pop
ss
icebp
add
cmp
ret
and
and
jl
jp
testb
loopne
arpl
xchg
mov
mov
les
das
and
sub
stc
jmp
mov
test
lret
add
xor
sbb
hlt
mov
xchg
mov
test
xor
ljmp
cmp
fistpll
loope
loop
outsb
jmp
lcall
add
fdivrs
subl
mov
sarb
je
pop
pushl
sar
fadd
mov
ret
xchg
mov
sub
mov
lret
ljmp
imul
push
dec
lock
popf
stos
sti
cltd
lcall
in
scas
push
mov
and
inc
es
mov
orl
jp
push
add
sbb
cmp
ljmp
ja
test
fnstenv
insl
dec
mov
xor
xor
cmp
cli
inc
popf
sub
leave
fs
and
arpl
xor
jge
hlt
cmc
stos
push
lea
sarb
inc
push
sub
data16
cmp
push
sub
fs
dec
mov
adc
mov
addr16
lds
scas
stos
jl
push
and
jb
cwtl
jmp
cs
lods
xchg
mov
lods
bound
dec
inc
push
int
add
push
and
insl
shr
or
xor
xor
adc
mov
xchg
movsl
push
jmp
add
in
jo
filds
ljmp
jns
les
push
into
push
mov
jp
sub
cmpb
in
fstpt
shlb
cmp
mov
loop
enter
jmp
arpl
out
cmp
je
leave
xchg
sub
dec
insb
adc
lock
lret
add
aas
flds
sbb
lds
cmp
pop
push
push
sbb
push
std
loopne
rorb
and
mov
stos
iret
mul
into
mov
loope
adc
aaa
sub
sahf
fcomps
rcrl
cs
lahf
aam
push
sarl
xchg
fisttpl
sub
or
push
mov
mov
mov
cmpsl
test
push
js
sti
add
ret
push
and
fsubp
inc
mov
stos
imul
js
sbb
insb
out
pop
xchg
add
xchg
das
fs
aad
lea
pop
f2xm1
jmp
mov
push
in
and
mov
ljmp
addr16
sub
test
cwtl
mov
loope
mov
dec
fldenv
test
lock
mov
mov
sub
push
and
repnz
sub
in
cmpl
mov
ja
int3
std
movsl
enter
dec
jne
xchg
out
in
jmp
cmc
sub
imul
mov
leave
mov
inc
loopne
call
popf
inc
orb
xor
rcrb
mov
rclb
ja
das
jg
rcrb
addr16
jecxz
jle
push
data16
dec
push
xchg
fnstcw
lret
or
push
xorb
std
jnp
mov
jae
adcl
dec
sbb
push
xor
cmp
sub
jg
xor
cmpsl
pop
lahf
notl
jle
mov
pop
fdivrl
pop
jecxz
add
and
xchg
sub
in
std
in
inc
bound
mov
jns
leave
mov
and
test
test
xchg
and
sub
jecxz
pop
cmp
xor
dec
movsl
xchg
fisubl
nop
xchg
mov
mov
push
jno
or
sarl
sbb
ja
sahf
aas
fbstp
in
fs
adc
fprem
sub
imul
in
cmpsb
call
addr16
push
mov
shll
stc
ficoms
lea
test
xor
loop
xchg
sbb
pushf
cmp
inc
divl
xchg
mov
mov
push
cltd
imul
xchg
xchg
add
int
ja
lcall
push
jns
cli
decl
xchg
dec
and
mov
insl
int3
pop
js
hlt
shll
loope
cltd
lcall
sbb
rclb
sbb
test
ljmp
hlt
xor
jge
aas
lahf
and
sti
sbb
push
cmp
xchg
dec
push
push
jg
pop
and
rcll
rol
push
lods
enter
ljmp
cmc
cltd
mov
pop
add
pop
inc
loop
add
xor
mov
inc
mov
and
jge
mov
cmp
jge
orb
stc
pop
jge
push
push
dec
pop
xchg
lods
jno
jge
jecxz
dec
dec
push
jne
mov
pop
mov
rclw
mov
xchg
fldcw
movsl
in
std
adc
ret
push
adc
jae
mov
pop
fisttps
sti
inc
push
fildll
rcll
pop
add
jle
pop
jno
mov
js
and
leave
pop
adc
aas
mov
imul
cli
push
push
xchg
push
cltd
mov
lock
fs
shll
sub
inc
mov
mov
mov
movb
inc
pop
sahf
dec
and
mov
add
push
sbb
sbb
mov
sbb
daa
out
dec
pop
inc
aas
push
dec
lods
mov
repz
xor
ret
mov
dec
and
sarb
dec
sti
imul
adc
mov
sub
jge
fisubs
shl
ret
add
jp
and
andl
out
addr16
mov
mov
stos
jl
xchg
jnp
sub
mov
jbe
mov
iret
xchg
pop
out
js
xchg
adc
iret
or
das
sbb
adc
test
jbe
out
xchg
jl
jge
mov
sarb
arpl
cmpb
inc
dec
or
mov
push
daa
push
dec
mov
mov
xor
or
mov
cmc
out
rorb
int3
and
jae
xchg
sbb
or
lcall
mov
sub
mov
cmp
popa
scas
add
arpl
sti
mov
mov
in
loopne
add
test
jno
shrl
jle
xor
stos
imul
add
les
nop
push
mov
das
push
aaa
push
in
jle
jl
shl
mov
dec
ficompl
or
inc
mov
lea
fists
mov
icebp
mov
orl
pop
icebp
xchg
repnz
pop
push
imul
pop
mov
and
jg
jne
ljmp
xchg
xor
cltd
test
icebp
mov
cmpsl
lret
out
je
jecxz
loopne
pop
dec
xlat
fistpl
test
pop
xchg
scas
sbbl
lea
xor
jo
mov
insl
mov
cmp
sub
shl
cmp
pushf
test
mov
int
repnz
div
outsb
add
mov
or
cld
arpl
mov
inc
jmp
sbb
mov
stos
sbb
dec
pop
or
adc
fistpll
mov
stos
ret
sub
pop
sbb
xchg
mov
es
jb
scas
lahf
mov
int
enter
sbb
cld
test
dec
popa
or
add
or
inc
shll
fistpl
lret
jae
adc
daa
fadds
sub
xor
sbb
or
pop
xchg
cmc
rclb
jge
cmp
int
repnz
fsts
push
int3
cmpsb
aad
jmp
mov
pop
in
lods
shlb
push
push
sub
flds
mov
jp
pop
mov
mov
test
insb
mov
pushf
pusha
sub
fmuls
movb
testb
ffreep
xor
dec
mov
insl
rolb
adc
pushf
out
stos
call
sbb
or
popa
imul
mov
daa
xchg
pop
xor
push
ret
and
pop
push
mov
inc
cmp
mov
inc
mov
fisubrl
adc
scas
jp
call
cmp
mov
into
add
dec
add
data16
xlat
cmp
js
adc
cmp
and
mov
add
pop
decl
sbb
push
lret
jae
clc
dec
test
std
mov
dec
out
scas
adc
enter
cltd
loope
popa
ljmp
mov
push
bound
pushf
jmp
mov
adc
adc
mov
jo
xchg
pop
insl
ljmp
dec
jge
cmp
lods
fwait
mov
jns
nop
add
mov
or
imul
out
mulb
sub
or
cmp
mov
paddsb
popf
xorb
dec
pop
xchg
int
mov
push
xchg
xor
or
adc
cltd
ds
sbb
sub
push
inc
mov
in
inc
into
shrb
xchg
jbe
cmp
lret
cs
shlb
fiadds
sbb
jno
fsts
adc
movsb
sti
out
sub
outsl
or
aas
hlt
add
ror
xchg
cmp
xchg
xor
adc
inc
fwait
and
enter
mov
xchg
fildl
insl
mov
mov
inc
test
stos
mov
adc
dec
and
lock
jg
mov
add
lods
pop
xchg
outsb
push
mov
sub
xchg
sbb
push
dec
movsb
je
mov
mov
jmp
mov
lock
cmp
add
dec
xchg
mov
inc
addl
add
cmc
adc
xchg
addr16
ja
data16
mov
sub
jecxz
push
or
inc
mov
and
xor
inc
xchg
xchg
xchg
sub
out
inc
int3
adc
in
sahf
dec
mov
icebp
pop
in
xchg
sub
add
jbe
in
jb
frstpm(287
cmp
mov
xchg
test
outsl
jo
pop
fbstp
lock
jnp
leave
das
outsb
shlb
leave
lea
pop
frstor
mov
mov
inc
xlat
inc
adc
orb
hlt
jge
std
aam
js
push
xchg
es
dec
in
adc
push
leave
nop
or
push
aad
or
lcall
mov
les
xchg
or
xchg
cs
lods
inc
lret
jg
clc
cld
and
inc
int
pop
push
icebp
pusha
xor
add
pop
dec
mov
shlb
subb
cli
sbb
dec
pop
mov
lea
xchg
adc
outsb
pop
ss
jl,pn
pop
sub
or
xor
daa
popf
cmpsl
xchg
fcmovnb
or
inc
xchg
inc
lock
adc
lahf
sub
fwait
xor
mov
in
dec
lods
sahf
adc
jb
ds
sub
lock
pop
sbb
pop
cmp
mov
inc
lcall
test
mov
lods
aam
mov
jbe
pop
and
lds
je
fisttpll
sub
arpl
adcl
ret
bound
or
or
jno
and
call
dec
test
stc
aad
dec
xsha1
cmpsb
lret
popa
jne
cmp
cmp
test
imul
or
int3
mov
add
aam
push
sub
mov
cld
repnz
jmp
mov
xor
xor
adc
das
test
lods
add
xor
push
test
mov
js
lea
stos
pop
push
outsb
sub
test
in
mov
push
pop
mov
mov
dec
cmp
sbb
mov
notb
data16
push
push
gs
addb
xchg
add
push
pop
cmp
inc
push
xchg
ret
push
lds
inc
push
add
jp
rclb
mov
std
or
repz
sahf
cmp
mov
repz
lahf
icebp
mov
das
and
out
test
adc
add
inc
mov
rorl
out
cmp
inc
inc
lods
ficomps
out
test
mov
nop
insl
mov
mov
ds
xchg
lret
jae
push
orl
xlat
sti
dec
xor
sbb
cs
jp
out
pop
dec
sbb
in
in
mov
sbb
clc
xor
sbb
shrb
mov
pop
add
push
cs
in
sub
inc
cmp
int3
mov
mov
jge
idivl
mov
lds
mov
and
xchg
movsb
xchg
addr16
cmpsl
mov
in
fcomps
or
and
sub
jecxz
sbb
cmp
test
ror
jmp
iret
mov
icebp
and
xchg
pop
cmp
push
pop
sarb
mov
lret
pop
fbstp
jmp
ret
gs
xchg
and
jl
xor
dec
jbe
pop
stos
es
inc
and
arpl
dec
xchg
cld
mov
addr16
insl
nop
sti
mov
mov
nop
add
aas
out
pop
sbb
sahf
mov
xchg
fcompl
mov
popf
adc
jae
mov
in
imul
jae
add
add
add
sahf
add
add
in
sub
jp
dec
xor
pop
dec
push
pop
sub
xor
xor
xor
push
pop
mov
je
cmp
mov
sub
xor
sub
jbe
push
pop
push
pop
ror
sub
mov
jmp
mov
mov
dec
lea
cmp
jmp
push
pop
lea
push
pop
je
push
pop
jne
cmp
push
pop
push
pop
push
pop
mov
push
pop
push
jae
not
ret
jmp
sub
test
jge
mov
push
pop
sub
lea
xor
push
pop
jl
dec
mov
cmp
push
pop
sub
mov
mov
add
xor
sub
push
pop
and
cmp
push
pop
push
pop
mov
mov
mov
jmp
push
pop
mov
push
pop
jmp
mov
push
pop
mov
mov
jne
dec
mov
inc
not
xor
not
mov
dec
mov
call
lea
jbe
mov
xor
push
pop
push
jmp
mov
sub
jb
cmp
cmp
push
mov
add
sub
mov
pop
mov
jmp
cmp
xor
dec
cmp
inc
sub
mov
pop
je
sub
jmp
jge
jl
mov
test
sub
mov
pop
mov
push
pop
add
xor
js
cmp
cmp
xor
mov
push
pop
jl
not
mov
jg
lea
cmp
jl
mov
push
pop
jp
mov
push
pop
test
xor
pop
push
mov
add
mov
jmp
pop
push
pop
pop
xor
xor
inc
mov
mov
mov
jmp
push
mov
add
mov
push
mov
add
push
mov
add
push
pop
test
mov
lea
lea
sub
mov
jb
inc
jge
not
sub
mov
pop
mov
cmp
mov
push
pop
mov
lea
push
pop
not
mov
mov
jo
jle
mov
push
pop
jne
mov
not
xor
mov
cmp
xor
test
mov
cmp
mov
sub
mov
pop
test
push
pop
mov
test
not
push
pop
sub
mov
mov
add
jmp
not
lea
sub
not
not
jmp
cmp
lea
jb
jmp
mov
mov
mov
mov
je
jg
cmp
inc
jae
inc
and
mov
jmp
add
mov
push
pop
push
mov
add
mov
push
pop
dec
jns
cmp
cmp
lea
not
jle
inc
lea
mov
mov
mov
push
pop
jne
add
jno
jge
inc
dec
lea
mov
cmp
push
mov
add
mov
lea
push
pop
push
jmp
jmp
jno
xor
mov
mov
mov
push
pop
xor
jl
js
jns
push
pop
mov
sub
push
cmp
xor
sub
mov
mov
add
cmp
sub
mov
mov
add
cmp
sub
not
test
cmp
cmp
add
cmp
je
cmp
mov
xor
lea
xor
sub
mov
mov
add
xor
jmp
jmp
sub
push
pop
add
mov
mov
xor
jmp
push
pop
xor
push
mov
add
lea
mov
mov
sub
mov
push
pop
xor
xor
jbe
jle
sub
push
pop
push
pop
jo
mov
cmp
mov
push
mov
add
dec
add
sub
cmp
inc
cmp
xor
inc
je
cmp
xor
and
sub
jns
sub
mov
push
mov
add
jmp
mov
cmp
inc
sub
jnp
not
jmp
pop
lret
cltd
xchg
xchg
jle
jnp
addl
add
add
enter
add
jns
fs
adc
pop
jecxz
subl
jns
int3
add
fiadds
add
cli
adc
subl
cs
and
jnp
push
inc
pop
repz
subl
je
add
add
jo
cmc
clc
ja
pop
add
pop
pmaddwd
ja
fs
inc
lds
add
add
add
add
and
add
adc
add
add
mov
add
int3
add
add
std
add
arpl
add
addl
clc
add
push
mov
lcall
bound
jl
cltd
and
cmp
jne
rol
push
aad
sub
outsl
cs
xchg
stos
push
movl
mov
cmp
gs
xchg
mov
pusha
adc
lods
xchg
fstps
test
mull
pop
mov
push
sbb
lret
movsl
push
jmp
ret
adc
lcall
push
push
sbbb
aad
rcrb
adc
inc
mov
sahf
in
mov
filds
cwtl
stc
inc
pop
mov
dec
xchg
adc
and
out
shrl
inc
cld
xor
jnp
out
push
loope
inc
aaa
mov
mov
cld
ret
jle
and
dec
pop
push
sbb
mov
dec
dec
sarl
inc
pop
scas
and
push
adc
jb
jns
fldt
lret
xchg
xchg
andb
jns
or
addb
add
adc
movsl
xor
in
aam
in
xor
add
jnp
cld
jns
lock
iret
jnp
fsubrs
subl
mov
cmp
sub
cmp
fiadds
jnp
fs
xor
jp
mov
xor
incb
mov
dec
add
add
pop
in
orb
test
dec
add
add
pop
stc
roll
add
add
movsl
orl
mov
jnp
call
cld
lret
ja
add
jge
inc
cld
add
mov
add
jnp
jnp
and
aam
call
jnp
loopne
xor
sarl
add
xor
inc
xor
jge
cmc
push
sub
cmc
sbb
jnp
faddl
sub
jnp
add
dec
jns
jnp
cmp
lods
inc
add
lahf
pusha
mov
jnp
lods
movdqa
fwait
movq
bts
hlt
jns
mov
add
vmwrite
push
outsl
add
cmpl
movdqa
out
outsl
add
bts
out
jns
mov
add
vmwrite
push
outsl
add
out
jnp
lods
movdqa
rorl
outsl
add
addr16
cmp
xor
mov
add
vmwrite
push
outsl
add
movsl
jnp
lods
movdqa
pop
movq
bts
scas
mov
outsb
add
vmwrite
push
outsl
add
cmp
lods
movdqa
imul
add
bts
out
scas
jns
mov
add
vmwrite
push
outsl
add
out
add
popf
lock
add
out
cmpsb
ja
pop
cli
fimuls
pushf
faddl
jnp
insb
sti
push
add
add
setne
jge
outsb
add
inc
mov
rorb
outsl
add
addr16
pushf
movdqa
es
sarl
push
addps
outsl
ja
mov
sbb
repnz
outsl
add
addr16
movsb
movdqa
movl
pop
into
test
jnp
fdivr
jnp
cld
int
lahf
dec
add
add
dec
add
add
add
add
addr16
enter
outsl
imul
outsl
add
addr16
inc
hlt
add
fs
rcrb
movdqa
test
add
vmwrite
orl
subl
loopne
sbb
add
jnp
sbb
in
std
add
add
addl
xor
addr16
add
add
ja
add
add
jnp
fdivr
dec
nop
add
add
lret
add
add
fdivrl
add
add
dec
add
ja
test
int3
adc
outsl
add
sbb
in
std
add
add
addl
lea
movq
cmp
out
orl
call
ficoms
jno
cmp
adc
roll
pop
lcall
aas
xor
or
xchg
pop
ja
insb
outsb
add
add
sub
cmp
nop
or
add
scas
jnp
cld
add
jnp
clc
add
loopne
push
movq
clc
mov
imul
outsl
add
movups
test
add
sbb
inc
test
add
lahf
loopne
push
add
mov
outsl
add
addr16
push
psraw
lods
insb
outsb
add
movdqa
addr16
mov
mov
sub
mov
movdqa
jne
outsb
add
movdqa
std
sbb
incl
add
add
add
add
test
add
movdqa
test
stc
leave
dec
xchg
add
add
psubb
push
movq
mov
jnp
add
inc
clc
adcl
cmpsb
add
xchg
xor
sbb
add
in
add
jnp
andl
add
sub
cld
lret
dec
ljmp
add
orl
lea
jnp
sbb
sub
push
outsl
add
movsl
js
add
jnp
jl
lsl
push
outsl
add
addr16
sub
testl
mov
outsl
add
jne
outsb
add
movdqa
test
add
dec
xchg
add
mov
movq
in
fdivrs
movsb
push
outsl
add
movntps
push
outsl
add
out
add
sub
push
addr16
sub
testl
add
sbb
movq
or
mov
incl
add
mov
cmc
jg
outsb
add
sbb
outsl
add
sidtl
in
or
dec
mov
addr16
dec
dec
push
outsl
add
add
movsl
andl
jne
push
lsl
cmp
jne
outsb
add
sub
in
stos
sarb
lock
jnp
jge
hlt
mov
push
cmc
add
jnp
push
jnp
hlt
add
enter
rcrb
add
addr16
push
jge
hlt
loopne
dec
pusha
in
pop
and
sbb
add
or
mov
imul
outsl
add
lret
in
pop
pusha
lret
add
sbb
add
add
jnp
pop
movdqa
in
test
adc
cmc
fnstcw
mov
lsl
add
insl
movsb
push
lsl
jg
add
pusha
add
pop
pmaddwd
xchg
jo
lods
cmp
addr16
add
pop
jns
push
int
roll
add
cld
in
jns
outsb
add
rorl
mov
movdqa
sbb
cmpl
aam
add
add
sub
xor
sub
ret
cwtl
add
decl
add
and
add
lcall
das
add
cld
das
add
test
jmp
xor
add
jmp
add
jle
add
or
add
incl
cmp
add
add
add
call
add
popl
add
pushl
inc
add
loop
add
flds
add
inc
add
popa
fs
jo
xor
add
add
add
out
add
clc
add
or
add
add
add
enter
add
out
add
clc
add
or
add
add
add
lret
gs
insb
outsl
jae
dec
gs
rolb
push
gs
gs
gs
dec
gs
add
add
addr16
gs
gs
push
popa
insb
jne
push
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
jb
gs
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
jp
add
nop
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
jle
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
jne
add
xorl
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
jp
add
nop
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
jle
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
jne
add
xorl
add
add
add
inc
jb
popa
je
push
jb
arpl
jae
add
jb
popa
je
push
push
add
gs
inc
imul
imul
gs
add
outsb
fs
imul
gs
add
add
jb
popa
je
gs
popa
addr16
add
add
jb
popa
je
gs
popa
addr16
add
add
gs
imul
cmp
inc
gs
jne
jb
outsb
je
imul
jns
add
add
je
jne
jb
outsb
je
jb
arpl
jae
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
je
jne
jb
outsb
je
push
dec
add
inc
gs
imul
push
jo
arpl
add
inc
gs
js
je
outsl
fs
jb
arpl
jae
pop
add
je
imul
bound
gs
add
inc
gs
popa
jae
inc
jb
outsl
jb
insb
add
je
outsl
arpl
gs
outsb
outsw
push
add
inc
gs
outsl
fs
gs
imul
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
push
jb
arpl
fs
jae
add
push
jns
je
insl
inc
gs
jne
je
inc
dec
inc
add
push
jns
je
insl
inc
imul
jns
add
add
je
jns
je
insl
push
imul
insb
gs
imul
gs
push
dec
outsl
arpl
gs
add
je
imul
je
jmp
push
imul
imul
jns
add
add
outsl
jae
dec
popa
outsb
fs
add
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
sbb
gs
outsl
arpl
fs
js
push
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
inc
add
fs
imul
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
dec
add
popa
insb
inc
jb
add
dec
jne
je
inc
jns
gs
outsl
push
imul
jle
dec
jne
jo
je
bound
push
je
imul
dec
jne
jo
je
bound
push
je
imul
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
cltd
add
imul
jo
imul
gs
jne
jb
outsb
je
imul
jns
add
add
je
jb
outsl
jb
outsl
fs
add
je
popa
jae
inc
jb
outsl
jb
add
je
outsb
push
gs
js
gs
imul
gs
dec
add
insl
imul
outsl
arpl
jae
pop
add
push
gs
js
gs
imul
gs
addb
imul
outsl
dec
jne
je
inc
jns
add
jb
popa
je
add
jb
insl
jo
push
add
jb
jo
push
add
jb
jo
outsb
push
add
jb
outsb
push
add
imul
add
xchg
xor
add
mov
add
mov
xor
add
add
add
sbb
add
das
add
inc
add
push
add
bound
add
outsl
add
mov
add
fwait
add
lods
add
mov
add
loopne
add
divb
add
add
aaa
add
push
aaa
add
sub
add
cmp
add
dec
aaa
add
add
add
mov
add
mov
xor
add
fdivs
add
add
add
sbb
add
das
add
inc
add
push
add
bound
add
outsl
add
mov
add
fwait
add
lods
add
mov
add
loopne
add
divb
add
add
aaa
add
push
aaa
add
sub
add
cmp
add
dec
aaa
add
add
add
flds
inc
gs
gs
inc
inc
add
add
gs
dec
bound
arpl
add
je
gs
dec
jne
inc
add
add
je
gs
dec
jne
push
add
inc
push
je
jb
insb
popa
arpl
outsb
je
add
inc
push
je
jb
insb
popa
arpl
outsb
je
add
inc
jne
jb
outsb
je
bound
arpl
add
gs
je
inc
outsl
insl
jo
je
bound
inc
add
add
je
outsl
outsb
je
popa
outsb
addr16
addr16
outsb
outsw
add
add
je
insb
jns
push
imul
inc
gs
insb
jns
push
imul
inc
gs
bound
arpl
testb
gs
bound
arpl
testl
jne
insb
imul
dec
gs
imul
inc
jb
popa
je
inc
dec
inc
push
arpl
outsb
add
add
je
gs
dec
gs
imul
inc
gs
gs
dec
gs
imul
dec
outsl
jbe
push
outsl
inc
js
cmp
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
add
gs
je
inc
outsl
outsb
je
outsb
imul
jo
push
gs
arpl
push
arpl
add
je
imul
outsl
jb
js
push
gs
imul
add
dec
popa
jo
outsl
fs
push
gs
inc
insb
imul
gs
gs
inc
outsl
insb
outsl
jb
mov
push
jb
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
fs
insb
add
aaa
add
mov
add
leave
aaa
add
loop
add
add
add
xchg
aaa
add
mov
aaa
add
leave
aaa
add
loop
add
add
add
add
inc
insb
outsl
jae
add
add
dec
jo
outsb
push
jb
arpl
jae
outsl
imul
rolb
dec
je
jo
outsb
push
push
push
outsl
imul
cmp
dec
je
gs
outsb
outsw
jb
popa
je
outsl
outsb
push
push
add
inc
outsl
outsb
jbe
jb
push
imul
outsl
fs
je
imul
jb
xor
sarb
add
loope
add
out
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
insl
cmp
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
pop
cmp
add
add
jg
add
mov
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
dec
cmp
add
jno
add
jl
add
xchg
add
movsl
cmp
add
sarl
add
cmp
add
hlt
cmp
add
push
add
sub
add
inc
add
dec
add
pop
add
jo
add
jl
add
mov
add
lcall
add
add
loope
add
in
add
add
add
adc
add
sbb
add
sub
add
cmp
aas
add
pop
aas
add
jno
add
jle
add
xchg
aas
add
lods
aas
add
mov
aas
add
loopne
add
in
aas
add
stc
aas
add
add
add
sbb
add
inc
add
inc
inc
add
add
add
sarb
add
loope
add
out
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
insl
cmp
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
pop
cmp
add
add
jg
add
mov
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
dec
cmp
add
jno
add
jl
add
xchg
add
movsl
cmp
add
sarl
add
cmp
add
hlt
cmp
add
push
add
sub
add
inc
add
dec
add
pop
add
jo
add
jl
add
mov
add
lcall
add
add
loope
add
in
add
add
add
adc
add
sbb
add
sub
add
cmp
aas
add
pop
aas
add
jno
add
jle
add
xchg
aas
add
lods
aas
add
mov
aas
add
loopne
add
in
aas
add
stc
aas
add
add
add
sbb
add
inc
add
inc
inc
add
add
add
popl
inc
gs
imul
outsl
arpl
xchg
add
gs
dec
outsb
jne
sldt
imul
outsl
ja
outsl
push
outsl
jo
xchg
add
je
outsl
jns
arpl
add
je
outsl
jns
imul
add
ja
outsl
arpl
push
arpl
add
popa
bound
outsb
jne
je
insl
add
add
popa
bound
imul
add
imul
jae
js
out
inc
insb
popa
jae
push
imul
add
je
arpl
gs
imul
add
je
jae
outsb
arpl
jns
je
je
add
add
je
popa
jo
jne
gs
add
je
insb
imul
je
sbb
inc
popa
insb
insb
dec
gs
dec
outsl
outsl
imul
or
inc
gs
jne
jae
jb
outsl
jae
or
inc
gs
inc
add
add
je
gs
je
jo
imul
add
je
insb
addr16
je
insl
add
add
je
outsl
arpl
add
add
je
arpl
dec
outsb
outsw
add
add
je
gs
je
je
add
inc
gs
outsb
jne
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
inc
gs
outsl
outsb
imul
push
add
inc
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
inc
gs
popa
jb
outsb
je
pop
add
je
jne
dec
outsb
jne
pop
add
je
jns
inc
outsl
insb
outsl
jb
pop
add
je
jns
je
insl
dec
gs
imul
gs
imul
add
je
imul
outsb
addr16
add
gs
imul
arpl
add
je
imul
js
dec
outsb
addr16
push
add
inc
gs
imul
js
push
add
inc
gs
imul
jb
popa
fs
jb
arpl
jae
add
insb
popa
je
push
arpl
add
jbe
insb
imul
je
xchg
add
jbe
insb
imul
add
push
jo
popa
dec
jne
gs
arpl
cltd
add
inc
push
jo
popa
push
add
arpl
imul
push
imul
add
push
imul
jae
bound
mov
dec
imul
add
fs
imul
add
fs
jne
jae
jb
add
dec
arpl
push
add
fs
insl
popa
addr16
add
add
fs
outsb
jne
add
add
fs
je
imul
dec
outsl
arpl
gs
outsl
jb
addr16
jne
fs
imul
add
jo
imul
arpl
add
jae
popa
addr16
outsl
js
add
add
outsb
imul
push
imul
add
imul
jae
addr16
add
add
jae
dec
gs
popa
addr16
add
add
jae
push
jne
je
gs
popa
add
add
insb
gs
jae
inc
inc
add
add
insl
outsl
jbe
dec
outsb
jne
xor
push
arpl
outsb
push
outsl
inc
insb
imul
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
push
outsb
fs
gs
popa
addr16
add
push
gs
arpl
gs
imul
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
push
gs
jne
jae
jb
cmp
inc
push
imul
outsl
insl
push
outsl
imul
gs
popa
jb
outsb
je
jp
push
gs
imul
inc
insb
imul
arpl
outsb
add
push
imul
outsb
addr16
add
push
imul
jae
xchg
push
gs
imul
js
push
add
push
imul
outsl
outsl
imul
add
ja
imul
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
outsl
outsl
imul
outsl
ja
dec
outsl
outsl
imul
mov
push
outsb
jb
imul
popa
jae
push
add
popa
je
push
imul
add
outsb
outsl
ja
jb
insl
push
outsl
imul
jae
jb
outsb
je
push
add
add
jae
jb
outsb
je
push
add
inc
outsl
jo
push
arpl
add
gs
je
inc
imul
jb
insl
push
add
inc
jb
popa
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
or
inc
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
xor
add
inc
add
roll
add
inc
add
testl
add
inc
add
xor
inc
add
pop
inc
add
je
add
mov
add
add
add
inc
add
roll
add
inc
add
testl
add
inc
add
xor
inc
add
pop
inc
add
je
add
mov
add
add
add
outsl
push
popa
jae
dec
gs
inc
jb
add
inc
outsl
push
popa
jae
dec
gs
push
gs
insb
insb
outsl
arpl
push
outsb
imul
imul
outsl
dec
insl
jo
jb
outsl
outsb
popa
je
inc
insb
imul
inc
outsl
dec
outsb
imul
inc
js
cmp
inc
outsl
dec
outsb
imul
push
arpl
imul
push
imul
popa
jae
dec
bound
arpl
add
push
gs
jb
push
outsl
push
gs
data16
inc
outsl
push
gs
imul
popa
jae
dec
bound
arpl
add
push
gs
jb
js
inc
insb
popa
outsb
imul
popa
add
push
jne
jo
outsb
fs
insb
popa
jae
dec
bound
arpl
arpl
inc
outsl
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
jae
gs
insb
xor
add
inc
add
add
add
leave
inc
add
add
add
or
push
push
js
arpl
gs
add
insl
fs
xor
add
inc
add
xor
inc
add
push
inc
add
addr16
add
jae
add
addl
add
add
and
add
inc
add
push
inc
add
addr16
add
jae
add
addl
add
add
or
inc
gs
popa
jbe
inc
imul
add
add
imul
add
add
jo
popa
arpl
gs
inc
add
inc
outsl
insl
insl
inc
insb
addr16
js
outsb
fs
jb
outsl
jb
add
fs
gs
inc
add
add
je
imul
inc
add
add
je
jo
outsb
inc
imul
