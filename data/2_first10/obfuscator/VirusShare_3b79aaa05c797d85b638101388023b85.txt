das
mov
add
mov
shrl
repz
enter
mov
jle
fwait
mov
mov
lea
mov
xor
xor
into
jle
or
pop
xchg
inc
mov
xchg
aas
outsb
xchg
xchg
push
pushf
sbb
push
add
xchg
mov
mov
jmp
stos
push
cltd
jl
in
or
push
test
loopne
mov
out
out
add
add
insl
mov
push
pop
movl
pushf
mov
ds
lret
push
lret
mov
in
lea
add
daa
pop
mov
jns
cmpsl
int
push
scas
add
psubusw
inc
das
cli
add
scas
mov
shll
rorb
nop
sbb
pop
out
enter
shll
fs
lahf
stc
jb
fwait
ret
wbinvd
repz
repnz
pop
repz
adc
hlt
es
es
xchg
out
testb
inc
add
paddsb
cmp
jp
push
arpl
aas
movsb
jo
and
mulb
clc
jo
fidivl
and
cmp
jae
sbb
jo
leave
push
cli
jbe
rolb
in
or
add
pop
lret
ja
jg
and
mov
pop
cs
dec
hlt
xor
pop
xchg
lret
ja
or
pop
les
cmp
xor
pop
mov
call
dec
xchg
pop
fbstp
or
add
je
movsb
repnz
and
sub
adc
sub
sti
cs
cmp
inc
or
cmpsl
or
mov
in
jb
fsubl
push
cs
lret
xchg
loopne
fdivs
subb
in
stc
adc
inc
pushf
jl,pt
lret
jl
and
cld
dec
in
push
pop
push
inc
jmp
sbb
lods
xchg
lret
pop
mov
add
orb
or
xor
ja
mov
sub
cmp
xchg
lret
adcl
sarl
pop
inc
add
mov
push
cmp
loope
call
mov
adcl
ficompl
xchg
pop
pop
push
addl
bound
popa
stc
push
sahf
pop
sub
pop
dec
inc
lfs
les
jns
sahf
pushf
sbb
inc
pop
inc
mov
cli
test
ficoml
pop
add
sub
aaa
enter
xchg
or
je
pop
add
andl
iret
and
mov
inc
xor
outsb
mov
pop
dec
or
je
mul
fcmovnbe
mov
into
bnd
or
imul
dec
dec
rcll
jge
mov
push
push
outsl
insb
gs
and
jg
push
enter
sarb
cltd
add
sbb
dec
xchg
cltd
inc
adc
sbb
add
add
mov
inc
push
and
mov
mov
inc
lods
push
movsb
dec
mov
loopne
or
add
dec
jae
sbb
push
sub
inc
decb
lea
cmc
jge
mov
jge
add
add
nop
and
mov
mov
test
dec
scas
lock
cmp
fcmovne
nop
cld
incl
mov
dec
adc
popf
dec
inc
insb
add
lcall
hlt
push
add
mov
inc
sahf
xor
jle
mov
pushf
sub
out
xchg
adc
push
cmc
or
add
cmp
scas
add
repz
outsl
cwtl
insb
add
mov
daa
fs
inc
das
insb
pop
je
add
pop
add
sbb
push
and
dec
push
fdivrl
xchg
inc
rorb
push
frstor
movq
xorl
sbb
push
sub
jnp
repz
xchg
leave
lock
or
sarl
xor
sbb
iret
repz
mov
mov
loopne
add
sbb
push
or
sti
mov
aaa
subl
add
push
sbbb
pop
repnz
mov
sbb
leave
shlb
add
repnz
xlat
pop
mov
sbb
in
add
jns
dec
mov
cmovnp
and
mov
nop
rorb
scas
add
jns
add
xchg
cmp
jno
movsl
push
xor
test
mov
pop
les
in
dec
sahf
rolb
add
mov
pop
sahf
or
or
mov
xlat
enter
push
adc
sbb
lock
sbb
das
dec
cmp
pushf
pop
jb
test
add
inc
hlt
stc
pop
add
cmp
jmp
ds
inc
add
mov
das
jl
inc
inc
das
les
add
dec
sbb
xchg
inc
push
filds
add
jg
pop
cmp
insl
xor
sbb
add
cmpsb
call
pushf
nop
daa
int
cmp
pusha
pop
inc
and
repnz
loopne
inc
pop
dec
and
cmp
or
fsubl
sahf
sbb
sahf
lock
psubusb
or
das
insl
in
hlt
outsl
cmp
and
mov
pusha
or
add
enter
xor
dec
scas
lahf
mov
movsb
test
xchg
clc
and
dec
lret
mov
ds
dec
cmp
in
das
cmp
or
and
cmp
or
add
jns
das
jl
dec
dec
add
dec
cmp
aam
ds
xor
sub
int3
and
and
pushf
jbe
xor
scas
in
jg
shl
or
pop
adc
fwait
and
adc
mov
shrb
add
ja
fiadds
lcall
mov
push
in
enter
mov
inc
inc
pop
xor
push
mov
and
sbb
dec
sub
test
pop
push
sysenter
add
ficoms
inc
das
dec
cmp
cmp
das
cmp
cmp
add
pushf
cmpsl
fs
cmp
popl
sub
lahf
or
and
or
dec
les
mov
xor
fiaddl
lahf
test
rolb
iret
insl
dec
data16
push
fmull
add
and
xor
xchg
xchg
xchg
lock
jo
shl
push
das
in
pop
ss
cmpsl
in
adc
rorb
push
and
jbe
jbe
add
pop
xlat
test
lods
das
aam
and
les
in
sub
sub
jle
negl
dec
jae
lock
inc
andb
dec
insb
sub
cmpsb
pop
or
jo
xor
cs
lahf
int3
or
dec
leave
add
jbe
push
into
xor
cs
inc
jle
xchg
xchg
out
mov
and
cmp
xor
xchg
or
das
cmp
iret
insl
dec
out
inc
pusha
dec
push
push
mov
cltd
add
mov
pushf
cmp
dec
push
adc
push
outsl
xor
sahf
fldt
pushf
pop
or
mov
lret
sub
xor
inc
add
js
scas
dec
pop
call
dec
leave
pop
mov
add
or
cmp
or
add
hlt
sub
pop
adc
add
sub
cmp
mov
mov
fsubrl
add
sub
bound
dec
in
push
mov
sbb
cmp
fcomps
insb
or
and
in
pop
xor
push
sub
sub
andb
mov
xor
mull
hlt
add
inc
das
xor
andl
or
js
xchg
sbb
adc
or
enter
cmp
ss
jnp
in
test
add
das
pop
pop
jo
ss
dec
add
jb
leave
leave
add
dec
retw
or
push
pop
daa
out
jb
aaa
mov
push
push
movsl
sahf
fldcw
int3
or
adc
cmp
das
insb
fwait
xchg
arpl
movsb
dec
inc
ss
pusha
cld
dec
leave
adc
pop
test
jns
pop
push
cmp
in
xchg
int3
ljmp
cmp
mov
cmp
fs
das
dec
jo
mov
xor
add
dec
push
fisubrl
cs
movsb
int3
sub
subb
mov
push
xor
insb
mov
jb
mov
cs
xor
xor
scas
outsl
lods
add
pop
mov
repz
int3
addb
fists
mov
inc
fistpl
cs
scas
fsubr
inc
mov
pop
add
add
movsl
jo
ret
movl
pusha
xchg
xchg
mov
push
in
jl
jo
ds
cmp
addl
pop
jl
js
and
in
inc
push
pop
inc
in
cmp
addb
hlt
sub
daa
adc
inc
mov
and
cmpsb
jg
pop
jb
pop
jb
in
sbb
je
jl
cmp
cwtl
sbb
adcb
mov
pop
jo
insl
outsl
mov
push
ja
add
or
pop
flds
leave
sbb
push
push
inc
push
jnp
jp
enter
cld
daa
mov
data16
inc
ja
pop
jmp
jle
popa
jbe
xchg
outsb
popa
je
cmp
arpl
jne
popa
aas
fistpll
data16
jne
jae
add
outsb
imul
outsb
arpl
pushl
jno
jbe
ja
jne
jne
add
data16
insl
insl
jo
jb
jbe
jno
je
popl
outsl
push
adc
inc
jecxz
incl
sti
out
fisubrs
push
int
jae
inc
lcall
mov
jg
adc
jbe
push
inc
lea
xor
call
lods
xor
or
stos
add
xchg
jbe
outsl
jae
adc
lock
imul
loop
jns
js
cs
cli
mov
or
sub
jno
inc
cmp
outsl
addr16
insl
and
gs
pushl
push
dec
dec
sub
inc
dec
push
inc
dec
xor
dec
jb
and
push
inc
ss
dec
inc
mov
cs
hlt
dec
dec
cmp
cs
add
imul
jne
popa
jo
out
add
mov
pushf
ds
or
jns
jb
jae
imul
ja
ja
movsb
fldcw
data16
jbe
outsl
cmp
sbb
sub
insl
push
outsb
outsl
bound
push
mov
xor
fs
dec
jns
jo
fistl
push
stos
fs
gs
int3
add
jbe
jo
adc
jl
mov
test
addr16
pop
jns
imul
mov
es
mov
fucomip
pop
dec
loope
dec
loope
popa
outsl
or
fisttpl
ss
dec
dec
pop
pop
jbe
inc
jb
push
popa
mov
pop
push
push
jne
inc
jns
filds
pop
dec
xor
cwtl
dec
jne
shrb
pop
pop
daa
in
ljmp
test
aas
or
movsb
lret
push
cwtl
imul
vpmulhuw
inc
mov
adc
push
xchg
inc
ss
xchg
out
inc
pusha
clc
incl
shlb
xor
adc
loop
addr16
cmp
aaa
sbb
testl
jns
push
insb
dec
in
add
fwait
pop
sbb
lds
and
jle
insb
js
push
imul
xchg
insl
xchg
jno
outsl
inc
fbstp
ret
addr16
insb
xchg
imul
shlb
bound
inc
arpl
fsubs
and
add
test
jp
addr16
mov
jp
data16
jp
push
sub
pop
xorl
outsb
das
jno
jne
inc
xor
jno
shll
jae
mov
jo
pop
dec
jo
imul
in
jns
outsb
jl
fisttpll
andb
gs
addr16
jns
adc
iret
insl
stos
popa
aaa
out
pop
lds
scas
cmp
pop
dec
adc
das
xchg
xchg
inc
push
je
jmp
jbe
sbb
xchg
stos
and
addr16
lcall
rcrb
jge
fdivrp
jmp
and
mov
and
fistps
xor
cmp
xor
pop
ss
addr16
xor
jbe
or
mov
mov
push
mov
enter
insb
add
cmp
dec
cs
dec
add
jno
aaa
push
loopne
outsl
push
jge
add
push
sbb
outsb
add
xor
inc
cld
xlat
int3
fdivp
int
jae
insb
je
xchg
arpl
bound
jg
shll
dec
lcall
pop
adc
nop
incl
rolb
sub
clc
dec
into
lret
sti
mov
inc
or
idivl
cmp
rcrl
mov
mov
bound
cmc
mov
insl
jp
js
cmc
arpl
cmp
data16
mov
or
cmpsb
push
outsl
xor
push
loop
insl
push
popl
in
fs
bound
sbb
xchg
stc
pop
imul
mov
imul
or
repz
shll
jbe
scas
test
add
cmp
aaa
cmp
subl
xchg
jbe
jo
addr16
lcall
arpl
outsl
ja
loope
dec
push
push
daa
ja
filds
call
nop
ss
sarl
imul
popa
cmp
cmp
xor
js
es
pop
add
insl
je
cmp
mov
imul
addr16
or
dec
dec
imul
cmpsl
sub
rcll
add
cltd
fnsave
pop
fstpl
incl
and
out
or
dec
cmpsl
sub
sbb
pop
mov
push
dec
xchg
inc
gs
jbe
roll
sbb
jp
dec
add
jne
mov
fidivrs
push
push
jne
out
lock
adc
jo
data16
and
movsl
jae
dec
outsl
xchg
jns
cmp
test
mov
gs
addr16
pop
jns
outsl
sub
bound
je
mov
fldcw
cwtl
iret
mov
xchg
pop
mov
jg
jmp
loopne
cmpsb
mov
arpl
ja
jge
ss
aas
cmp
test
sub
cmpb
and
adc
data16
xchg
dec
push
ljmp
call
mov
or
adcb
aam
pop
das
clc
push
aad
jns
and
xor
push
jbe
xor
push
loop
jl,pn
pop
xor
inc
test
subl
push
les
mov
mov
xor
and
mulb
fldcw
mov
lock
scas
pop
jo
mov
sbb
or
je
jmp
push
and
sbb
lret
pop
je
inc
jp
push
imul
leave
lret
sahf
aas
or
je
and
xchg
popa
fdivrl
ja
in
add
scas
addr16
and
imul
mov
bound
insb
clc
xorb
push
arpl
loopne
sub
ja
dec
outsb
imul
xor
fs
push
adc
mov
sub
insl
jns
imul
ds
je
pushf
or
in
pop
jo
jecxz
rcrb
arpl
sbb
data16
jle
push
aaa
push
cmpsb
test
mov
push
test
int
insl
cld
push
outsl
addr16
add
add
lahf
pop
mov
cli
cmp
add
cmp
pop
and
xchg
push
and
fimuls
lods
sub
clc
fdivrs
sbb
add
or
or
sbb
cmp
enter
adc
fdiv
pop
xchg
fwait
pop
or
adc
xchg
imul
insb
ret
insb
inc
jbe
fdiv
jo
js
inc
mov
inc
jl
pushf
fs
test
and
jg
or
imul
leave
sbbb
test
xor
or
xchg
scas
mov
ljmp
push
call
xor
dec
call
call
cld
xchg
pushf
lahf
fwait
sub
sbb
inc
inc
je
dec
inc
test
or
push
gs
lods
inc
push
ds
add
mov
loope
dec
daa
mov
jb
dec
dec
outsl
arpl
push
imul
mov
lods
mov
pop
mov
les
femms
stc
or
outsl
cld
inc
adc
xor
and
fsubs
push
inc
jb
push
add
andb
int3
pop
pop
enter
push
adc
dec
popa
outsb
movsb
gs
sub
in
pop
inc
xchg
mov
nop
dec
mov
or
fs
add
inc
lock
mov
add
mov
sarb
scas
sub
push
sbb
test
idivl
inc
pop
pop
sahf
idivl
test
mov
xchg
cwtl
pushf
arpl
add
pop
sahf
cmpsb
mov
into
pop
push
mov
fidivrs
jnp
cmpb
in
cmpsl
cltd
out
lock
clc
cs
fistpl
push
popf
testl
push
adc
popf
xchg
sbb
es
adc
sbb
push
out
pop
lret
sbb
and
cld
repz
xor
add
inc
push
shrb
iret
pusha
and
loop
or
inc
scas
inc
add
and
nop
push
add
push
jbe
cmp
push
adc
xor
jns
jae
xor
mov
add
add
push
jg
jb
pop
cmp
xor
push
xor
cmp
mov
xchg
aaa
ss
push
popa
std
sub
pop
push
add
arpl
jp
jb
and
incb
jo
ja
insl
push
mov
fisubrl
lock
jbe
scas
xchg
mov
idivb
outsb
jb
push
mov
push
imul
loopne
bound
jae
jne
js
popa
mov
lahf
mov
ss
fnstsw
cmp
pshufb
sbb
mov
cmp
xor
rorl
cmp
dec
cmp
or
loopne
cvtps2pd
cmpl
and
xor
xor
in
xor
xor
xor
ss
dec
cmp
xor
jbe
in
xor
xor
pop
or
mov
mov
lahf
xor
and
outsb
out
cs
mov
push
or
jmp
pop
xor
xchg
fldt
das
aaa
xor
sbb
ss
add
outsb
xor
xor
jbe
xor
or
jbe
rdpmc
daa
xor
mov
cmp
fcmovnbe
mov
dec
pop
jg
lods
pop
or
pop
addr16
sbb
ret
movsl
mov
xlat
xor
and
ss
repnz
das
xor
das
cs
insl
xor
pop
cmp
xor
in
fcoms
pop
aaa
rsm
push
rorl
xor
fwait
addb
addb
sbb
jnp
fcmovnu
aaa
xor
in
dec
sbb
fistpll
pop
mov
xor
xor
or
pop
pop
enter
cmp
dec
mov
push
addr16
scas
pop
inc
inc
push
jbe
aaa
xor
xchg
xor
cmp
pop
data16
aaa
pop
mov
pop
xor
lock
and
aam
cmpsb
clc
jecxz
xor
pusha
scas
jp
sub
mov
xchg
xlat
in
xor
das
jbe
cmp
clc
xchg
add
dec
xor
mov
cmp
mov
or
pop
mov
lar
mov
sub
mov
pop
inc
insl
jo
cmpsb
sub
mov
roll
push
aas
cmp
cmp
adc
xor
inc
popa
test
iret
push
xor
jb
aaa
xor
and
inc
jne
xchg
pop
add
xor
dec
add
and
adc
add
adc
push
dec
xor
mov
mov
push
mov
mov
ret
pop
push
sbb
inc
outsl
pop
xor
ret
daa
xor
loope
cmp
push
xchg
xor
and
xor
or
bound
pop
cmp
add
dec
add
or
xor
cmp
xlat
ljmp
jb
sbb
jo
cld
fs
adc
adc
sbb
out
dec
xor
pop
add
gs
jne
inc
xchg
add
pop
gs
add
in
and
imul
jb
inc
in
dec
fwait
xor
xlat
push
outsb
insb
outsl
arpl
sbb
mov
dec
sbb
inc
outsl
jo
pop
jnp
mov
loopne
sbb
ja
imul
out
gs
je
daa
add
daa
inc
fs
scas
or
outsb
and
loopne
data16
xor
jnp
imul
outsl
data16
orl
xor
cmp
insl
cmovo
rdtsc
xchg
add
lds
mov
mov
bound
gs
jae
je
cs
mov
cmp
and
leave
fdivp
lahf
xorb
xchg
in
push
movsb
cs
ss
mov
dec
cmovne
push
inc
repnz
pop
incb
aaa
add
add
seto
cmp
push
push
xor
mov
xor
pop
inc
out
mov
dec
inc
aas
push
pop
inc
mov
mov
ret
cmpsl
xor
call
inc
pop
ja
sub
push
mov
pop
scas
xlat
inc
dec
push
imull
fists
xchg
inc
stos
inc
sbb
aaa
adc
inc
testb
mov
cmp
mov
inc
sbb
into
push
inc
xchg
fidivs
inc
mov
pop
mov
xchg
cmp
jle
inc
ss
imull
out
pushf
mov
xor
inc
jp
lock
xor
out
outsb
iret
clc
outsb
jns
cmp
mov
arpl
lods
nopl
pop
pop
maskmovq
negl
push
or
push
dec
outsb
pop
xor
pop
daa
push
jb
xor
cmp
inc
sub
mov
push
xor
ja
ret
fdivrs
xchg
dec
inc
push
sbb
cmp
dec
cmp
testl
inc
out
or
inc
inc
inc
push
inc
sbb
pop
sbb
cmp
lods
pop
add
mov
sub
cmp
dec
rol
bound
cmp
loopne
rcll
mov
inc
fbstp
sub
mov
fistpll
out
push
out
call
ret
mov
es
xor
in
push
adcb
and
inc
bound
sbb
push
cmp
push
pop
xchg
mov
rorl
xor
mov
cmpsl
cmpl
inc
dec
add
add
cmp
jmp
out
mov
cs
xor
add
and
fdivl
stos
xchg
inc
push
jo
mov
dec
mov
iret
scas
xor
lahf
scas
jmp
push
out
pop
outsl
push
xchg
xchg
or
xor
push
inc
mov
mov
fstpt
subb
pop
xor
xor
addr16
xor
int
inc
jb
adc
push
xor
lds
jo
push
xor
rcll
inc
ja
aaa
adc
add
sbb
push
jp
cmp
aaa
xlat
inc
leave
adc
xchg
add
mov
pop
subl
xlat
push
ss
inc
and
rolb
mov
xor
sbb
or
jnp
pop
inc
cltd
inc
xlat
aaa
outsl
inc
push
cmp
pop
xchg
xchg
xor
jb
dec
jecxz
dec
inc
mov
outsl
xor
loopne
mov
and
mov
fistl
xchg
sub
loope
sti
adc
mov
cmp
dec
outsl
mov
aaa
mov
aas
mov
imul
and
mov
mov
jecxz
ja
mov
dec
iret
pop
sahf
xor
sbb
out
outsl
add
xor
jnp
sub
ret
cmp
mov
adc
xchg
roll
jp
cmp
or
xchg
xchg
inc
pop
push
push
or
outsl
outsl
imul
mov
mov
outsl
mov
or
lcall
sbb
sti
inc
pop
push
xor
pop
ret
push
stos
scas
or
mov
jg
jnp
or
mov
xor
inc
adc
leave
xor
jnp
aad
mov
sbb
lahf
xor
lods
imul
ret
mov
or
mov
aaa
dec
sbb
jb
pushf
xchg
add
inc
ret
or
dec
jle
ss
adc
cmpsb
push
xor
xor
inc
add
mov
and
ffreep
xchg
sub
sbb
mov
cmpsl
xor
aam
lret
pop
xchg
scas
jno
ja
sub
xchg
lahf
decl
pop
lret
add
aas
inc
leave
add
push
push
xorl
sbb
out
push
or
xor
inc
rolb
cmp
or
addl
mov
sub
pop
fidivrs
push
dec
inc
adc
inc
cmp
roll
pop
and
sub
mov
inc
and
push
inc
or
imul
sub
inc
roll
xor
mov
aaa
inc
cmp
jp
xchg
mov
in
ss
inc
ja
ja
sbb
mov
add
data16
inc
sbb
into
iret
mov
and
inc
xlat
xor
cmp
mov
jecxz
clc
add
mov
or
or
fwait
cmp
notl
test
xchg
outsb
cmp
es
sub
arpl
pop
push
pop
out
push
sbb
xchg
cmpb
jae
inc
jno
mov
imul
xor
ret
dec
xlat
fsubrs
cmpsl
faddp
cmp
fistps
dec
pop
mov
mov
lock
lock
mov
jb
maskmovq
divl
aas
push
pop
xchg
add
or
mov
xor
pop
js
xchg
xchg
mov
dec
test
mov
movsl
mov
xchg
outsl
cmc
sub
ds
inc
xor
mov
pop
fwait
sbb
jnp
sbb
out
mov
icebp
mov
movnti
jno
into
sbb
cmp
punpckldq
sahf
push
cmp
xchg
push
and
pop
lock
sbb
inc
inc
aaa
cmpsb
sub
ss
or
xchg
and
stos
inc
jbe
sub
in
ljmp
sbb
mov
jnp
notl
lods
ss
ds
sbb
aad
sbb
shlb
ja
inc
push
stos
and
mov
fdiv
loope
fbstp
jg
cmpsl
cmp
fwait
and
cmpb
sub
imul
inc
pop
jne
push
idivl
xor
jb
mov
mov
cmp
repz
push
add
adc
lock
mov
add
xor
lahf
jmp
jno
mov
xor
repnz
pop
out
faddl
pop
addb
dec
lods
mov
add
mov
inc
sbb
push
movq
ss
inc
push
cmp
cmp
pop
push
addr16
sbb
dec
fwait
daa
push
loop
faddl
addb
sub
imul
jmp
not
fistpl
popa
xor
push
sbb
xor
cmp
xor
sbb
jmp
inc
aaa
inc
cs
add
push
jecxz
out
out
rclb
aas
inc
pop
adc
mov
loop
mov
imul
imul
add
push
mov
push
inc
xchg
movl
push
sti
mov
call
aas
subb
or
push
sbb
ffreep
pop
xor
inc
lahf
mov
dec
ja
inc
push
mov
inc
mov
push
xlat
pushl
mov
add
xor
inc
mull
lret
dec
push
push
addr16
push
xchg
out
out
fdivp
push
mov
xor
cmp
mov
inc
mov
loopne
test
mov
pop
lods
sbb
mov
sbb
inc
push
movl
loop
sbbb
cmp
pop
dec
pusha
adc
std
sti
xor
sbb
sub
jbe
je
call
cmp
xchg
fadds
xor
mov
packsswb
sahf
inc
jno
mov
daa
outsb
pop
jmp
cmpb
clc
push
fisubs
cli
fidivl
and
mov
addl
daa
pop
sbb
lcall
sti
inc
cmp
adc
stos
fwait
push
fisubs
pop
xchg
lock
and
lds
pop
cmp
cwtl
jmp
clc
xlat
stos
inc
mov
in
adc
iret
imul
ret
loope
into
xor
xchg
fistpll
repz
sahf
push
pop
popl
cmpsb
sbb
xor
mov
pop
inc
xorl
fdivrl
cmp
xchg
xor
push
mov
adc
fiadds
addr16
out
push
jno
js
fisubrl
daa
rolb
dec
add
and
ja
mov
into
pop
xor
cli
pop
mov
out
sbb
dec
cmp
sbb
push
popa
sarl
daa
sbb
shll
or
push
test
xor
pop
cmc
aaa
cmpsl
test
push
jecxz
mov
stos
xorl
mov
xor
outsl
pop
fsubrl
jae
cmp
cmp
ret
push
inc
lods
inc
sbb
dec
and
push
je
inc
cmp
add
iret
mov
inc
xorl
push
xchg
lcall
push
push
cmpsl
dec
and
inc
fildl
in
js
ret
fwait
xchg
pop
aad
jbe
xchg
packssdw
pop
mov
movl
push
mov
mov
and
inc
add
sbb
sub
dec
sbb
xchg
movl
aam
out
das
out
xchg
xchg
mov
rdmsr
mov
adc
es
mov
fnstsw
repz
push
cmp
jo
pop
lahf
mov
mov
sbb
pop
mov
mov
insb
mov
inc
ret
arpl
fildl
js
mov
pop
imul
cli
lods
jmp
pop
sbb
aaa
jmp
into
cmp
add
orl
mov
addb
imul
fists
mov
jnp
rcrb
jae
jecxz
movsl
jno
jae
ret
add
cmpsb
push
xchg
into
pop
mov
out
inc
cmp
mov
jmp
aad
add
push
repz
add
out
xor
cld
inc
stos
and
xor
fdivl
mov
aas
mov
popa
or
imul
test
add
cmp
ret
xlat
add
xlat
mov
shrb
mov
xlat
push
sbb
xorb
dec
xchg
cmp
and
push
or
js
rol
push
daa
lods
inc
mov
addr16
xchg
lea
repz
xchg
imul
movsb
pop
mov
das
inc
aaa
loopne
sub
movnti
daa
mov
push
and
scas
je
repnz
mov
aaa
mov
movzwl
negb
mov
mov
ljmp
ja
lahf
dec
lods
xor
repz
lock
loope
das
push
xor
pop
inc
fwait
aaa
repz
insl
push
xor
inc
test
fnsave
push
pop
jg
pop
push
shlb
mov
xchg
inc
xor
dec
xchg
sbb
jecxz
jnp
xchg
jge
divl
lods
pop
sub
lcall
ret
dec
ret
xchg
mov
adc
jb
mov
cmp
sub
je
fbstp
lahf
cmp
sbb
pop
xlat
xor
sti
test
iret
mov
mov
mov
lods
or
aaa
xor
hlt
test
mov
faddl
and
add
jmp
jo
mov
aaa
pop
daa
xor
add
out
sahf
aas
jb
iret
cmp
outsl
pop
lret
push
imul
out
mov
pop
daa
dec
notl
mov
mov
idivb
pop
repz
or
or
mov
mov
fiadds
mov
pop
xor
xchg
jo
jp
dec
xor
ds
xor
popl
pop
jp
lds
adc
andb
push
push
pop
inc
xchg
xor
xchg
aaa
mov
xchg
push
cmpsb
inc
lea
xor
mov
scas
mov
jp
jae
adc
xor
inc
aaa
fisubs
sub
inc
inc
je
pop
stos
inc
add
push
sbb
pop
jle
sahf
scas
dec
scas
xor
addl
dec
cmp
stos
cmp
cmp
rep
add
sbb
fbstp
ret
add
mov
ss
sbb
sbb
cmpsb
jg
aas
cmp
mov
xchg
gs
iret
stos
push
xchg
in
pop
fdivrl
addr16
fucomi
mov
negb
sbb
hlt
or
xor
js
bound
ficoml
xlat
mov
and
jmp
call
daa
mov
add
mov
jno
lock
dec
movsl
xchg
cmpsb
inc
lahf
xor
add
ss
and
aad
outsl
pop
mov
mov
inc
mov
arpl
xor
daa
shr
or
repz
leave
sbb
xor
or
push
testb
dec
pop
xchg
cmp
stos
pop
add
ret
adc
xlat
mov
dec
push
dec
push
in
jmp
aaa
outsl
cmp
sub
xchg
mov
dec
fists
inc
push
ljmp
adc
testl
sahf
imul
and
pop
mov
fdivrs
inc
pop
or
xor
cmp
mov
cltd
and
inc
ret
loopne
xchg
lock
fwait
lret
jo
movntps
roll
mov
mov
push
loopne
push
lret
push
lods
cmp
sarl
pop
fidivl
inc
inc
push
mov
pop
fildl
xlat
stos
inc
aas
hlt
fiaddl
push
pminub
cmp
pop
test
iret
daa
js
fsubs
ja
sbb
xchg
mov
filds
pushf
mov
pop
sub
lahf
outsb
nop
and
add
scas
push
jge
adc
sub
push
fldt
xchg
pop
clc
push
lcall
addb
inc
ret
hlt
or
mov
repz
pop
loop
push
mov
lock
jo
enter
aaa
push
sub
fwait
aaa
push
dec
mov
mov
mov
push
out
inc
sub
iret
lret
loope
add
ret
lea
arpl
xor
adc
pop
dec
fistps
lea
mov
pop
pop
rolb
sub
in
js
pop
and
push
movsl
aad
xlat
es
js
adc
inc
fwait
sbb
out
mov
mov
jo
mov
divb
je
icebp
pop
mov
pop
repz
aas
out
add
mov
cmp
addr16
push
or
ds
pop
xor
push
dec
adc
xor
sub
rcrl
mov
aaa
inc
mov
lock
jno
pop
pop
ss
aad
out
fstpt
push
mov
lahf
cmp
and
xchg
mov
or
inc
btc
mov
mov
dec
pop
push
and
cmpsl
mov
push
xlat
or
mov
sbb
pop
test
inc
pop
inc
movsl
addl
test
out
inc
xor
lods
shll
pop
inc
pop
lahf
mov
add
xchg
xchg
pop
pop
jnp
jo
mov
mov
test
shlb
push
mov
fmuls
xchg
add
jp
add
pop
movsl
jp
addl
add
sub
in
subb
into
jg
dec
sbb
cmp
outsb
pop
vmread
mov
and
int
xor
xor
sahf
xor
imul
scas
js
aaa
mov
mov
bnd
in
ja
aas
cmp
xor
xchg
push
daa
movsl
or
js
bound
movsl
loop
or
mov
mov
sbb
xchg
dec
mov
data16
andl
lock
mov
cmp
decl
imul
push
inc
shrd
xchg
mov
sti
aaa
mov
ss
push
jo
ret
inc
arpl
jne
fwait
aaa
mov
adc
xchg
repz
pop
inc
pop
inc
xor
jmp
jb
and
outsl
xor
scas
sub
fwait
mov
pusha
popf
fwait
ret
xor
inc
aaa
jmp
cmp
fimuls
cmp
jecxz
add
or
dec
jecxz
xor
lret
xor
add
sub
dec
iret
cmp
push
lcall
data16
mov
pop
stos
and
out
adc
mov
and
orl
ljmp
jno
fdivl
push
loop
xor
and
or
fimuls
das
xor
push
jnp
dec
loopne
pop
or
jne
ds
inc
pop
xor
test
mov
sub
mov
pop
andb
fisubl
push
lea
mov
test
sbb
inc
mov
shl
sbb
js
sbb
inc
pop
mov
icebp
mov
lea
sbb
sbb
mov
out
iret
pop
mov
cmp
fstpt
iret
outsl
jl
add
xlat
inc
arpl
jo
jg
and
adc
jecxz
push
pop
arpl
push
inc
xlat
bound
daa
das
mov
fwait
pop
inc
das
pop
stos
cmp
addr16
xor
nop
cs
imul
sub
add
in
lahf
adc
sub
dec
loop
sbb
arpl
mov
fmulp
bswap
inc
dec
fnstsw
sbbl
les
lods
inc
out
mov
aas
shr
rorb
xlat
sbb
rolb
popl
loop
cmp
mov
push
or
add
insb
mov
inc
sbb
cmp
call
pop
mov
mov
pop
fistps
mov
or
jecxz
loopne
lock
nop
test
adc
mul
or
and
xor
xlat
shl
push
sub
cmp
sub
mov
sahf
push
call
or
mov
or
roll
lahf
sti
aaa
pop
clc
rolb
dec
cmp
out
dec
lahf
xchg
aaa
mov
mov
rcl
xor
inc
xchg
and
iret
lcall
xchg
sub
hlt
sahf
das
xchg
iret
mov
xor
je
push
xchg
bound
into
lds
inc
push
out
cmpsb
push
jecxz
mov
mov
xor
add
nopl
xchg
stos
cmp
xor
xor
sbb
xor
gs
lahf
lret
xchg
add
xchg
fwait
push
sub
xor
aad
xchg
bound
sbbl
dec
ret
or
adc
rolb
cmp
add
pop
and
sbb
outsb
mov
dec
push
sub
sti
iret
iret
fadds
and
pop
pop
sti
addl
fwait
add
ret
xorl
dec
xor
imul
push
sbb
pop
orb
imul
add
inc
jg
ja
or
or
jmp
adc
jo
sbb
jecxz
bound
xchg
rorb
push
pop
push
cmp
sti
xor
sbb
fisubs
cmpxchg
sub
arpl
out
adc
fldl
loopne
out
into
mov
jae
arpl
xchg
mov
inc
dec
inc
imul
mov
push
out
mov
sub
push
cli
and
pop
movl
ss
sbb
addr16
inc
cmp
dec
jae
jg
je
mov
jb
cmp
test
scas
mov
dec
dec
scas
dec
inc
inc
jp
add
ja
pavgw
or
and
xchg
mov
inc
out
mov
call
imul
dec
fadd
aaa
mov
testl
inc
aas
xchg
rclb
pop
inc
jecxz
loop
mov
daa
mov
adc
sbb
jae
fistl
pop
pop
inc
mov
inc
loopne
jae
mov
daa
jmp
repnz
and
ds
js
sarl
jbe
dec
loope
rolb
cmovo
lods
inc
popf
ror
mov
adc
pop
inc
cmc
mov
mov
loopne
das
inc
sbb
lea
imul
cmc
mov
or
repz
push
cmp
pop
jb
test
xchg
jp
orl
jo
dec
movswl
stos
mov
sar
mov
adcl
les
cmpl
push
xlat
inc
into
pop
imul
push
stos
iret
fcmovnb
push
adc
ss
sti
pop
or
pop
scas
xor
mov
jno
inc
jnp
and
xchg
bound
arpl
repz
lods
dec
pop
js
mov
repz
xchg
nop
or
in
add
dec
add
lahf
mov
xor
inc
inc
jno
mov
repz
inc
jo
jne
lret
inc
pop
inc
cmp
dec
inc
ja
mov
xor
nop
push
out
imul
inc
or
les
pop
je
das
xor
pusha
xor
pop
inc
mov
push
inc
mov
xor
jecxz
mov
lret
leave
ret
ret
add
scas
ss
rcl
add
sbb
adc
psrld
stos
arpl
ss
xchg
fidivs
clc
les
dec
imul
fsubs
pop
fistps
fiaddl
loope
adc
adc
and
pop
pop
jmp
or
dec
mov
pop
xor
cltd
test
pop
inc
push
mov
cmovge
dec
jl
ja
daa
or
mov
pop
les
scas
mov
iret
inc
jno
in
in
aas
out
pop
push
mov
dec
stos
xor
out
sbb
ret
sti
nop
push
js
xor
xor
push
inc
das
pop
jecxz
sti
inc
mov
hlt
ss
mov
lahf
adcb
pop
mov
or
mov
daa
and
jno
mov
loopw
pop
stos
fstpt
push
mov
icebp
lds
daa
arpl
jno
scas
flds
mov
pushl
das
lods
add
inc
mov
or
mov
loopne
test
mov
cmp
ret
arpl
cmp
jl
fistpll
fldt
jno
pop
imull
je
cmpsl
add
fsubs
inc
aaa
dec
je
pop
fildll
pop
pop
adc
inc
dec
adc
fisubrl
adc
not
scas
cmp
cmp
xor
arpl
push
mov
or
push
mov
mov
ss
mov
testl
pop
incl
add
clc
jo
fbstp
pop
popa
je
bound
or
adc
mov
pop
or
xor
jnp
mov
out
cmp
lret
add
pop
cmpsl
mov
lcall
jbe
add
out
mov
fwait
inc
mov
push
arpl
sbb
cmp
outsb
pop
push
jmp
lret
shlb
sub
loope
mov
pop
fildl
divl
daa
ja
inc
stos
into
das
cmp
loop
add
push
xor
div
inc
out
inc
jo
arpl
daa
fisubrs
mov
pop
mov
cmp
xchg
adc
xor
inc
out
rdmsr
xchg
xor
or
out
fnstcw
cmp
sahf
stos
mov
dec
ficoms
lock
addr16
sub
cli
and
fwait
sub
dec
sbb
or
or
fisubl
mull
adc
fidivl
cmpsl
outsl
icebp
mov
sti
fistps
arpl
fwait
jo
mov
xlat
es
dec
arpl
jno
or
lret
fwait
xchg
jbe
idivl
ja
jp
mov
adc
xor
add
sbb
inc
aaa
lahf
mov
stos
pop
jecxz
pop
pop
push
mov
lods
adc
or
call
xchg
popl
xor
mov
xor
lcall
lret
call
adc
or
out
add
xchg
loopw
sahf
inc
mov
push
inc
jg
pop
orb
xor
xchg
mov
orb
ret
sti
iret
or
mov
js
pop
scas
ss
mov
inc
cli
pop
push
jecxz
cmpb
and
jbe
pop
pop
movsb
lret
and
sbb
stos
mov
data16
mov
mov
aas
ret
xlat
mov
jmp
testl
inc
ret
in
add
or
lock
push
sbb
mov
push
push
mov
faddl
push
push
jno
dec
jnp
stos
imul
mov
lret
inc
inc
ja
insl
and
mov
imul
scas
xor
cmp
stos
fadds
shrb
sub
jmp
jecxz
orl
adc
mov
dec
xor
inc
push
cmp
inc
pop
or
mov
pop
lcall
jo
mov
popa
adc
gs
push
xchg
arpl
push
jmp
jo
sub
dec
inc
pop
and
xlat
push
mov
mov
adc
adc
ss
bound
jge
cmpsl
inc
out
imul
inc
and
jb
cli
push
sbb
or
icebp
rorb
dec
add
movsb
sti
mov
lock
dec
bndstx
push
jge
add
push
repz
sub
mov
arpl
ret
fldl
loop
xchg
cmp
daa
ja
jnp
outsl
pop
mov
mov
mov
lret
sub
sbb
test
sbb
nop
push
adc
addr16
xor
push
mov
scas
mov
adc
aaa
mov
addr16
push
xchg
je
out
imul
cmpsl
mov
ja
cmpsl
icebp
pop
insb
mov
dec
push
inc
ss
stos
push
mov
hlt
jne
xor
xchg
mov
mov
adc
lods
cmp
pop
xor
outsb
aaa
nop
and
cli
das
aam
scas
out
xor
pop
ja
mov
mov
aas
pop
fsubrl
lods
loopne
pop
fwait
addr16
imul
lea
xlat
push
iret
add
mov
xor
inc
ja
fisubs
pop
maxps
jge
jb
aas
ja
test
mov
dec
movzwl
orb
repz
les
repz
in
jno
push
fwait
add
mov
psrad
jecxz
and
add
xlat
xchg
push
adc
ja
push
mov
inc
pop
rclb
mov
movaps
lret
pop
movsb
shll
cmp
and
inc
mov
movsl
and
push
xor
cmp
pop
and
cmp
add
out
fcomi
sahf
mov
jmp
pop
or
mov
pop
fdivrs
ja
insb
cmp
lods
sti
inc
sahf
xchg
cmp
iret
cli
xor
push
jecxz
dec
pop
add
mov
sub
ss
adc
ja
push
sbb
mov
enter
jle
xor
jecxz
xchg
mov
jg
and
dec
pusha
sbb
fstl
stos
sahf
xor
fwait
rcrl
cmp
sarb
or
inc
iret
pop
insb
cmp
sbb
mov
outsl
jg
jmp
movsl
add
pop
pop
iret
add
xchg
mov
xor
mov
outsl
out
sub
or
cmp
cmpsl
xor
add
pop
jae
mov
sbb
jecxz
mov
loopne
pop
cmpsb
stos
cmpsl
ret
mov
push
sub
insl
xchg
cmc
ja
iret
push
jmp
pop
rcl
adc
inc
add
xor
ret
cmp
ja
push
bound
and
aaa
inc
xchg
cmp
dec
jecxz
mov
inc
mov
push
outsb
lods
jnp
pop
xchg
mov
inc
mov
orl
dec
sbb
lahf
cmpsl
xor
xchg
scas
ja
shlb
jg
gs
pop
lret
aaa
stos
push
scas
subl
fists
fwait
lods
ja
shlb
xchg
pop
xchg
outsl
insl
pop
push
fcomip
xor
xor
adc
je
dec
loop
imul
inc
and
add
fwait
orb
addr16
in
inc
xchg
xlat
jb
es
cmp
outsb
fwait
inc
adc
stos
and
loope
inc
out
jge
xchg
inc
ds
cmp
mov
mov
push
sub
push
call
dec
push
cmp
lods
xorb
xchg
inc
fisttpl
daa
and
cmp
mov
cs
sub
pop
inc
lret
hlt
js
adc
jecxz
stc
jbe
add
jl
outsb
pop
ja
rclb
test
movlps
popf
jg
pop
inc
mov
imul
add
ss
ret
repz
sub
push
xchg
dec
xor
sub
cmp
push
cmp
ljmp
xlat
fcoms
lret
daa
push
jno
xchg
shll
xchg
dec
cmp
xor
fdivl
xchg
jnp
dec
scas
add
push
mov
pop
aas
pop
stos
in
and
cmp
in
aam
ljmp
sbb
mov
xor
pop
cmpsl
dec
mov
cmp
mov
ss
xor
mov
mov
push
lahf
shl
sbb
adc
test
dec
jmp
clc
xchg
fisubrs
push
mov
aas
mov
jmp
cmpsb
cmp
daa
and
leave
xchg
or
cmp
je
gs
jle
iret
cmp
adc
inc
inc
jecxz
loop
add
sbb
push
push
imul
mov
mov
lahf
rclb
pop
insb
rorb
lret
xor
mov
scas
jne
push
outsl
bound
push
rol
mov
dec
add
arpl
and
or
mov
sub
and
mov
insl
aaa
outsl
inc
testl
mov
mov
fiadds
call
pop
stos
dec
sbb
pop
movntps
lds
les
push
pop
sarl
pop
push
mov
pop
pop
ss
or
and
push
or
adc
pop
inc
mov
xchg
pusha
or
add
jb
fwait
ret
mov
fwait
cli
cmpsl
pop
mov
jo
fcomi
push
push
add
jg
je
jl
aaa
mov
mov
movsl
xchg
aam
sbb
arpl
jo
sbb
mov
scas
add
xchg
inc
push
adc
scas
lods
pop
andb
repz
pop
inc
dec
xlat
jp
test
push
mov
jmp
outsl
mov
xlat
dec
testl
cmpsl
andps
add
out
push
and
sbbb
mov
neg
xor
rolb
pop
icebp
movsl
test
aaa
pop
loope
fldenv
ret
mov
ds
xchg
sysexit
pop
pusha
aad
ja
xchg
mov
mov
pop
mov
pusha
pop
mov
dec
incl
loop
stos
fucomi
sti
add
inc
ja
push
fisttpl
inc
ud0
mov
ljmp
push
ret
cmp
shlb
dec
aam
ja
cmp
mov
iret
ss
cmpb
cmpsl
stos
addr16
inc
dec
pop
lea
insb
jb
stos
lret
popa
int
pop
fists
shl
cmp
shrb
mov
fst
shl
xor
fiaddl
mov
cmp
jg
pop
add
clc
les
insb
pop
out
jnp
push
out
add
sbb
mov
mov
sbb
push
adc
hlt
hlt
mov
lods
lock
mov
daa
jae
fwait
add
addr16
mov
mov
rorl
loopne
ja
xor
xchg
sbb
jnp
test
jl
not
jp
mov
mov
iret
push
xchg
pop
loopne
pop
dec
mov
daa
jbe
aas
mov
scas
test
dec
lret
cmp
pop
xor
jecxz
mov
inc
pop
sbb
fiaddl
lods
repz
pop
lods
xchg
pusha
mov
inc
insb
xchg
sahf
xor
ret
ja
cmpsl
orl
fcmovu
aaa
jl
ret
scas
add
dec
ret
lahf
mov
mov
cmc
mov
mov
sub
and
fsub
shll
insb
cmp
dec
push
inc
stos
jbe
mov
jecxz
movsb
adcl
jge
adc
mov
xchg
adc
subb
mov
movsb
fdivrs
mov
scas
scas
and
jnp
sbb
bound
xchg
in
xor
scas
inc
mov
aas
mov
mov
cmpsl
cmc
pop
pushl
jg
push
mov
ljmp
adc
lret
pusha
and
pop
inc
sub
xcrypt-ofb
cmpsl
jmp
dec
cmp
jecxz
mov
ja
data16
mov
outsl
mov
out
sub
sahf
jo
sti
xchg
pop
sbb
push
outsl
addl
mov
pop
stos
adc
mov
and
fwait
sbb
and
sti
fistps
dec
mov
jns
ss
aaa
inc
xor
push
fdivl
xor
sub
sub
add
dec
subl
ds
xchg
stos
inc
aas
jecxz
jnp
add
testl
xchg
dec
call
mov
rorl
jecxz
push
fildll
push
mov
loopne
xchg
cmp
add
sti
sub
sbb
mov
loope
add
lahf
divl
xlat
xchg
push
call
inc
jge
outsl
or
cmp
ret
movsb
adc
stos
ret
pop
push
js
mov
out
inc
cmp
in
pop
das
sbb
out
adc
add
adc
push
xchg
lret
mov
xor
inc
push
pop
imul
mov
cs
ja
mov
out
pop
inc
lods
dec
das
or
cmp
and
pop
mov
dec
xchg
mov
and
scas
dec
les
adc
out
xchg
movb
pop
inc
ror
mov
and
addr16
pop
inc
arpl
xor
mov
sti
imul
jbe
or
ror
pop
or
mov
sbb
mov
and
movl
dec
push
jp
jecxz
scas
sbb
mov
push
mov
xorl
dec
mov
ljmp
les
nop
divl
cs
jb
lcall
clc
rcl
mov
in
repz
in
xchg
mov
pop
jns
or
xchg
xchg
mov
push
mov
dec
adc
adc
test
scas
and
and
aaa
xlat
lds
jl
jp
iret
mov
das
lret
inc
or
ret
inc
sub
mov
repz
in
add
sub
xor
xor
popa
shrl
pop
cmp
jae
push
sbb
push
mov
iret
xor
or
and
jmp
xor
xor
xor
jp
xlat
fiadds
xchg
cmpsl
and
adc
dec
add
or
lds
shlb
ud2
dec
out
adc
inc
mov
inc
push
pop
mov
int3
pop
in
and
out
pop
enter
shrb
rol
ret
pop
imul
jne
inc
inc
aaa
sub
adc
or
outsl
bound
mov
negl
push
pop
fwait
add
jnp
mov
pop
ret
xor
dec
imul
adc
cmp
xchg
mov
cmova
inc
out
pop
push
cltd
dec
test
add
or
iret
inc
pop
xchg
into
inc
mov
inc
pop
add
xchg
adc
mov
add
mov
aas
sbb
daa
pop
ds
mov
inc
cmp
test
xchg
out
cmp
xchg
cli
cmp
xchg
aaa
pop
adc
pop
jecxz
movq
lds
sub
fists
test
fwait
lahf
sub
pop
xchg
jmp
loopne
pop
dec
lcall
xor
mov
xchg
bound
mov
aad
es
ljmp
pop
pop
jle
arpl
xor
test
out
loop
add
sub
pop
adc
and
xlat
xadd
lcall
mov
mov
sbb
add
mov
jmp
push
nop
add
sbb
push
imul
and
ja
test
jmp
stos
and
insl
and
mov
mov
imul
xor
ja
adc
xchg
mov
out
lea
out
push
das
push
jmp
shl
scas
jne
xor
inc
dec
ficomps
inc
fwait
push
push
push
iret
inc
mov
add
or
out
dec
bnd
pop
xor
or
fucomip
and
idiv
outsl
xor
mov
shrl
push
sub
lret
cmovg
je
inc
and
sub
inc
sub
daa
not
mov
xchg
out
mov
mov
loopne
jl
jnp
out
jbe
rolb
adc
ret
ss
jnp
lock
push
inc
jecxz
jg
adc
cs
fwait
mov
pop
xchg
fwait
xchg
pop
push
inc
fbstp
out
mov
stos
mov
dec
jnp
pop
fwait
jne
inc
mov
dec
push
lods
pop
inc
rolb
or
sbb
sti
jo
sbb
ss
and
dec
cmp
sbb
mov
pop
movsl
int3
mov
adc
sarl
daa
dec
ret
mov
push
jecxz
ret
ja
xor
mov
fs
data16
cmpl
dec
and
mov
sbb
dec
fistpll
in
faddl
fucomip
insb
xchg
push
loopne
xor
add
fmuls
jae
in
aam
push
mov
mov
mov
push
lahf
lahf
sahf
and
dec
ja
push
cmp
cmp
xor
scas
hlt
mov
test
push
xacquire
dec
pop
sub
dec
or
pop
inc
outsl
inc
fsubrl
dec
shlb
xor
rorl
mov
cs
sub
sbb
ja
pand
out
xchg
movsb
adc
push
aaa
mov
xor
mov
aaa
orb
pop
mov
mov
dec
pop
lret
bound
jecxz
cmc
daa
scas
push
fidivrs
pop
sbb
dec
out
das
mov
jmp
mov
xor
iret
movsb
or
pusha
xchg
or
pop
out
addr16
pop
incl
out
jl
orl
test
pop
clc
mov
add
dec
xchg
or
inc
les
push
jecxz
and
push
arpl
lret
pfnacc
inc
ret
pop
rorl
adc
mov
jl
jae
mov
cmpsl
pop
sbbl
sbb
jg
ret
or
js
mov
fldt
cmc
mov
adc
lds
lahf
loope
or
pop
out
cmpsb
add
push
and
aaa
xorl
pop
pop
aaa
icebp
lea
mov
xor
jnp
sarb
xor
arpl
pop
dec
jbe
add
or
aas
or
sub
inc
cmp
push
icebp
mov
dec
fmuls
pusha
int3
xchg
push
decl
pushl
push
add
sbb
jecxz
nop
pop
xlat
orb
inc
sbb
fwait
fimull
push
sub
out
nop
cmp
aaa
xchg
lret
push
cmp
dec
sub
cmpsl
push
dec
sub
inc
add
ret
rolb
xchg
das
jg
rclb
push
test
jecxz
inc
nop
das
dec
ja
fdivs
out
inc
xchg
xchg
cs
mov
inc
mull
ljmp
jmp
jno
mov
cli
rolb
sti
sub
mov
out
ja
outsl
jo
mov
movsl
movsl
dec
pop
sbb
push
jno
xor
jmp
jbe
lods
sbb
pop
adc
push
pop
divl
daa
push
lock
inc
mov
ret
push
pop
push
mov
scas
cmpsl
pop
and
fildl
jecxz,pt
ss
xchg
mov
xor
xchg
jbe
lock
das
inc
jnp
mulb
inc
les
sub
ret
dec
outsl
or
js
mov
jae
incl
pop
xor
jno
daa
pop
mov
mov
lret
mov
inc
or
sub
arpl
and
jae
fadd
mov
pop
sbb
lock
stos
jmp
sbb
xchg
inc
movlps
cmpb
dec
arpl
sarl
mov
das
mov
inc
sbb
rol
pop
adc
lock
sub
inc
out
loope
sub
sbb
sarl
xchg
fstpt
fwait
bound
pop
jge
pop
ret
push
sbb
mov
and
adc
lds
popa
xor
mov
inc
insb
mov
out
out
loopne
lret
push
jecxz
push
pop
mov
sbb
mov
mov
or
pop
mov
clc
aam
dec
sub
or
jecxz
stos
pop
mov
lods
imul
inc
enter
scas
push
aaa
jnp
jns
js
mov
inc
pop
pusha
adc
pop
je
xchg
scas
adc
addr16
movsb
push
insl
cmpsl
lret
sub
vgf2p8mulb
cmp
daa
nop
push
call
sub
popf
stos
outsl
pop
stos
in
mov
mov
mov
filds
scas
test
scas
fists
inc
or
push
lods
xchg
mov
jl
ss
das
insl
lock
in
mov
push
aas
testl
xchg
xchg
out
mov
mov
xor
es
add
cmp
mov
sbb
mov
fdivs
insl
out
jmp
cs
shrl
and
and
mov
mov
ljmp
push
jae
bound
out
adc
lahf
mov
push
enter
fildll
cmovs
pop
mov
mov
outsl
dec
sub
mov
mov
pusha
cmpsl
dec
bound
or
or
pop
mov
dec
inc
das
fsubrs
lods
ljmp
push
inc
inc
xchg
out
inc
lcall
dec
adc
or
push
scas
fistpl
loope
mov
ret
rolb
aas
xchg
jecxz
mov
jg
ret
pop
push
daa
dec
dec
inc
in
dec
aaa
sbb
add
or
pop
clc
jno
fsubl
out
mov
fwait
pop
sti
out
loope
jge
scas
xor
fdivrs
xor
movsb
sub
rorl
insl
mov
pop
test
mov
sbbb
js
adc
lods
les
movsl
movb
pop
das
mov
jg
aas
inc
cmp
xchg
inc
push
jecxz
sbb
or
das
pop
mov
mov
daa
loopne
adc
pop
jae
mov
push
sub
xchg
repz
cli
push
push
ret
pop
jg
test
dec
push
shll
repz
adc
xchg
adc
xor
aaa
adc
test
push
dec
gs
mov
sbb
mov
mov
and
rcl
roll
pop
mov
adc
pushl
inc
push
push
cmp
sbb
and
ja
pop
loopne
ja
xchg
push
lret
pop
xchg
inc
sub
xchg
jg
stos
scas
shrb
es
pop
pmullw
xor
mov
inc
and
pop
mov
mov
test
mov
xor
inc
addr16
fldl
adc
cld
push
ss
inc
jno
lods
dec
cmpsl
and
mov
and
add
jg
mov
fsubrs
addps
or
ss
divb
add
or
jnp
shl
ss
cmp
aas
mov
lods
cmpsb
ds
pop
into
mov
out
pop
loope
outsb
xlat
sub
inc
cmp
mov
rorl
xlat
inc
addr16
or
dec
xlat
pop
push
jecxz
pop
mov
mov
andl
xor
ss
lock
lahf
mov
push
stos
mov
mov
pop
shlb
cmp
arpl
mov
cmpsb
xlat
and
ror
ja
or
inc
out
sub
test
sbb
push
push
jmp
and
shll
adc
inc
outsl
xchg
xchg
inc
fwait
lea
or
loope
out
add
cmpsb
or
fisubrl
ret
pop
inc
sahf
rolb
loopne
mov
xchg
cmp
adc
sbb
xor
jo
push
fimull
mov
test
popf
sbb
push
imul
mov
cmpps
stos
mov
inc
jp
lahf
fcmovnu
inc
js
ss
cmp
adc
and
loope
lods
mov
dec
mov
push
ss
xchg
inc
adc
add
loopne
sbb
inc
jge
cs
fwait
out
and
stos
inc
mov
iret
fcoms
pop
stos
pop
mov
jbe
imul
pop
loop
or
ret
fidivs
lret
stos
adc
lret
pop
movl
jp
push
sbb
pop
fisubl
dec
loope,pn
ljmp
mov
dec
movsb
or
jecxz
pop
and
fwait
int
and
push
sbb
mov
sbb
mov
lods
mov
jnp
cli
shlb
lods
xor
lods
lahf
mov
ja
push
ja
pop
bound
aaa
mov
aaa
inc
lea
xchg
cmp
sub
mov
outsl
out
fxch
je
jg
jb
movq
inc
fisubl
jecxz
sbb
pop
daa
sub
or
push
push
test
cmp
js
sbb
adc
stos
dec
mov
cmp
aas
xlat
add
xor
out
push
or
imul
pop
push
pop
loope
daa
lret
aas
add
jmp
or
sbbb
lret
xor
and
dec
mov
adc
and
fadds
popa
cmpsl
jge
dec
xchg
ljmp
xchg
scas
mov
sub
pop
sub
xchg
cmp
movsb
pop
iret
es
inc
scas
rep
lock
shl
cmp
dec
inc
lret
scas
aaa
fwait
push
push
xlat
mov
pop
stos
ja
adc
push
ds
jb
fdivs
xchg
or
outsl
sbb
outsl
pop
js
mov
inc
add
mov
or
cli
shlb
sub
adc
sbb
iret
or
sbb
push
and
pop
pop
jae
mov
and
sahf
je
outsl
cmp
push
mov
out
inc
inc
lret
mov
sbb
cmpsl
arpl
mov
aas
and
cmp
test
xchg
pop
rdmsr
push
test
or
xor
ss
xor
xchg
lock
mov
daa
movsb
add
and
push
jne
xor
adc
add
add
je
aaa
ja
shr
cmp
pop
xchg
arpl
mov
and
scas
xchg
pop
loope
or
ljmp
xchg
add
xchg
sbb
mov
pop
sub
sub
pop
jl
out
pusha
scas
xor
mov
jecxz
lods
mov
or
mov
inc
xchg
dec
andl
jecxz
sbb
addr16
cmp
shrl
pop
jae
aad
cmp
stos
mov
test
dec
push
mov
cmp
adc
subl
sbbl
add
jno
andl
adc
imul
ds
lret
aaa
xor
shl
pop
xor
xchg
fcmovnb
fucomi
mov
push
pop
cmp
jnp
call
pusha
xlat
add
xchg
xchg
and
das
sub
sbb
jnp
rorl
fwait
jecxz
mov
cmpb
dec
mov
cltd
cmp
and
adc
imul
push
sbb
imul
fldt
shrb
stos
sbb
pop
arpl
push
dec
arpl
push
dec
stos
movsl
arpl
repz
pop
jo
cmp
addl
loopne
outsl
fucomip
sbb
inc
xchg
xchg
les
cs
out
fisubrs
and
imul
outsl
fldt
and
xchg
add
push
cmp
jne
pop
jecxz
cmp
add
bound
jnp
cmpsb
push
pusha
pop
ret
mov
xor
cs
lods
and
test
prefetch
or
fistl
shr
pop
sub
addr16
inc
loopne
mov
sub
adc
cmp
mov
adc
cli
enter
mov
dec
mov
xchg
add
daa
rclb
add
pop
ror
cmp
pop
jmp
or
lahf
lahf
in
pop
scas
sbb
xlat
inc
mov
enter
fdivs
jmp
inc
pop
mov
cmp
and
pop
mov
pop
loop
ud0
inc
add
sub
jmp
sbb
addr16
sbb
ja
inc
jecxz
jne
decl
in
push
push
xor
scas
jno
pop
xorl
fsubs
mov
mov
xchg
or
jecxz
nop
dec
ljmp
insb
xchg
dec
xchg
pop
sub
jmp
in
inc
jle
add
lds
lods
xor
xor
xor
or
pop
jbe
jmp
fcmovne
daa
inc
imul
movb
sbb
jp
pop
cmpsl
clc
push
mov
adc
mov
cmpsl
jg
jl
adc
dec
sbb
pop
sub
add
fistpll
adc
out
es
lea
inc
push
inc
pop
cmp
mov
cmp
es
sub
cmp
sbb
sbb
popl
pop
addl
mov
xchg
dec
adc
inc
dec
scas
fisubs
xor
push
add
sti
or
pop
loopne
into
and
push
push
or
adc
out
adc
mov
inc
xor
cmp
sbb
aaa
push
hlt
mov
repz
push
mov
cmp
sbb
add
add
repz
dec
pop
or
into
add
or
jp
jnp
shrl
movsl
bound
pop
sub
push
addr16
push
ret
dec
lods
mov
inc
jbe
sbb
jg
mov
push
jl
sbb
dec
adc
bound
shll
fistpl
dec
daa
sub
inc
loope
adc
sbb
es
xor
sahf
lods
rolb
sbb
adc
adc
nop
stc
jo
pop
xor
sub
fistl
mov
repz
dec
or
sbb
xchg
push
pop
jbe
fsubrs
jmp
dec
ret
pushl
or
fwait
add
cwtl
test
popf
add
cmp
mov
inc
pop
or
push
mulb
add
mov
in
lret
jg
sti
push
ret
ret
imul
or
adc
add
sarb
mov
shrb
andb
fucomp
faddl
inc
pop
push
xor
out
fmuls
sub
dec
cmovb
add
lahf
or
pop
push
fdivs
das
cmp
xchg
cs
pop
xchg
into
cmp
add
jecxz
out
popa
jb
mov
cmp
jge
cmp
idiv
pop
mov
fiaddl
fwait
jge
sbb
pop
jbe
mov
jmp
lret
out
mov
clc
movsb
ret
cmp
outsl
outsl
pusha
shll
lcall
mov
or
inc
jg
ss
pop
jl
mov
shlb
add
pop
xor
hlt
pop
jmp
mov
pop
sbb
addl
scas
pop
mov
add
sub
vmptrld
insb
and
cmp
mov
add
inc
mov
lcall
jecxz
ret
inc
stos
mov
mov
fdivs
fbstp
test
pusha
xorl
mov
adc
push
sti
cli
inc
xor
push
mov
stos
outsl
and
adc
sub
icebp
test
jge
sub
imul
pop
mov
sub
ja
pop
push
and
scas
mov
and
pop
aad
insb
add
shrb
jb
push
outsl
fstl
sub
cmp
adc
ss
cmp
xchg
inc
cmpsl
fldt
xchg
jecxz
outsl
arpl
mov
xor
xor
push
push
clc
test
sub
mov
mov
clc
pop
pop
arpl
inc
jmp
push
adc
aad
and
mov
bound
fwait
inc
inc
cmp
xchg
faddp
pop
dec
iret
btc
pop
sub
imul
je
je
and
or
cmpsl
inc
fistps
mov
dec
rorl
mov
inc
push
dec
lock
sub
mov
pop
xor
imul
sbb
cmpsl
xchg
dec
out
iret
inc
aas
in
loope
sub
mov
fbld
lods
or
or
push
aas
dec
or
in
rorb
lds
addl
insb
mov
shlb
dec
iret
xchg
inc
scas
mov
out
into
inc
insl
push
lcall
push
shrl
mov
mov
mov
test
pop
jmp
ret
mov
sub
jo
jnp
sub
pop
push
push
mov
sbbl
dec
insb
ja
icebp
sub
scas
adcb
xor
cmp
lret
repnz
push
aaa
hlt
pop
mov
dec
push
sbb
xchg
ret
jecxz
les
add
inc
js
mov
adc
mov
push
cmp
ljmp
and
mov
xrelease
sbb
and
xor
cmc
nop
ds
pusha
pop
and
je
cmp
scas
xchg
das
sub
test
shlb
pop
loopne
pop
testl
popl
inc
and
out
arpl
pop
adc
inc
pop
ss
or
xchg
push
stos
sahf
sub
arpl
sub
fwait
enter
and
bound
cs
mov
pop
and
loopne
stos
shrb
rorb
jecxz
add
cmp
cltd
sub
jno
jnp
popa
xor
fwait
daa
ret
xor
xchg
add
cmp
dec
pop
pusha
xor
jae
mov
test
stos
in
jp
inc
lret
jae
or
mov
negl
shr
jbe
in
cmpsb
mov
push
mov
sti
push
icebp
mov
iret
xchg
bswap
fs
popl
aaa
lods
imul
xor
ds
filds
shlb
pop
lret
cmp
ja
xor
imul
outsl
mov
cmp
mov
adc
ss
sbb
scas
push
fadds
les
loope
stos
arpl
aaa
loop
xchg
stos
inc
testb
les
aad
push
inc
sbb
stos
cmpl
lods
push
adc
and
jb,pt
lsl
dec
lods
popa
outsl
adc
push
dec
mov
mov
push
mov
mov
mov
adc
out
insl
test
pop
pop
cmpsl
adc
pushf
pop
stos
stos
aaa
fimull
xchg
inc
mov
adc
mov
pop
repnz
sbb
inc
add
mov
js
fwait
push
inc
and
mov
imul
popa
dec
xor
imul
mov
xor
lret
mov
xor
mov
pop
js
adc
xor
push
add
pop
pop
clc
scas
dec
cmpl
sbb
in
sub
sub
mov
jbe
push
movsb
push
jae
bound
movsb
aaa
push
ret
lea
push
dec
lea
scas
sbb
orb
mov
mov
or
cmp
lahf
jae
sub
jecxz
js
dec
fistl
ret
lcall
pop
sahf
mov
out
push
cmc
fdivrp
addl
ret
jp
popa
daa
pop
iret
arpl
ficoms
pop
out
sub
mov
dec
mov
repz
push
test
or
rolb
jo
shrl
mov
testl
mov
xlat
lahf
sbb
mov
aas
xchg
lahf
cmp
dec
mov
add
loopne
imul
js
push
pop
xor
inc
outsb
xor
fisttpll
adc
jnp
sti
sub
or
lahf
and
mov
sub
outsb
xor
sbb
pop
dec
pop
ret
arpl
into
xchg
pop
jmp
addl
sub
mov
dec
xchg
adc
sbb
test
and
enter
inc
dec
cmpsl
push
test
jecxz
xor
inc
cmp
xchg
adc
lahf
push
adc
sub
fwait
je
pop
pop
jmp
test
jb
push
xor
pop
stos
aas
repz
cwtl
pop
or
or
mov
subl
xor
dec
cmpsl
ja
lds
call
lods
pop
mov
cmp
sub
mov
push
lahf
outsl
js
add
ret
xlat
test
arpl
movsl
push
icebp
or
jecxz
shll
sbb
lret
mov
imul
aaa
or
ljmp
push
arpl
dec
lcall
les
iret
cmp
daa
pop
out
cwtl
rolb
loop
outsl
pop
jecxz
cmpsb
dec
shrb
cmp
pop
or
add
sti
rorb
ss
inc
sti
andl
shlb
js
xor
loopne
addr16
xlat
add
ffree
xchg
push
xor
repz
insb
pop
or
cmp
addl
cmp
push
ret
loope
out
rolb
push
xor
xor
insb
mov
cmp
cmpsl
mull
jl
pop
jecxz
and
adc
add
mov
cmp
dec
shrb
imul
bound
inc
outsb
push
dec
jge
rcl
outsl
jecxz
add
loope
imul
insb
scas
mov
ja
addr16
les
jge
xchg
xchg
jg
cmpl
jecxz
dec
icebp
inc
jl
cmp
pop
mov
pop
fidivs
sbb
sbb
inc
les
rclb
lgs
imul
add
or
dec
pop
iret
cs
jmp
xchg
add
add
pusha
xchg
cmpsl
bound
fucomi
inc
add
sub
push
inc
pop
mov
pop
mov
outsl
aas
jecxz
fisubrl
or
adc
push
mov
arpl
addb
scas
dec
pop
fwait
hlt
roll
jecxz
movsl
cltd
mov
adc
push
xor
sub
lock
cmp
dec
push
js
pop
sarb
or
pusha
movsb
dec
jae
js
xor
lods
adc
aaa
mov
lahf
clc
pop
aas
cmpsl
stos
adc
loop
lret
pop
or
test
addb
icebp
pop
cmp
xor
pop
or
add
inc
jmp
mov
inc
pop
cmp
dec
divl
loop
add
xchg
cmpsb
or
mov
sbb
lea
xchg
mov
sbb
add
test
cmp
cmpsb
pop
mov
xor
push
sub
inc
mov
mov
push
arpl
or
mov
add
stos
sti
add
outsb
mov
stos
mov
mov
jge
push
pop
das
ffree
loop
xchg
xchg
addl
lods
shlb
ficomps
lcall
fstpt
daa
adc
and
xchg
shrl
imul
push
lahf
lret
or
xchg
xor
notl
imul
and
push
test
test
xchg
ss
nop
test
xor
test
nop
fisttps
jbe
push
pop
dec
cmp
negl
test
jecxz
js
out
cmp
jp
fiaddl
jo
aad
outsl
pop
loop
insb
shlb
inc
dec
jle
out
in
add
fwait
clc
inc
fcomip
adc
adc
loope
mov
imul
xchg
inc
movsb
movl
mov
sbb
cmp
outsl
leave
adc
adc
popa
mov
aad
jnp
ret
fmuls
inc
add
or
ja
ret
add
outsl
inc
adc
sahf
sub
data16
fwait
mov
roll
inc
jg
test
push
or
das
sbb
fiadds
xchg
jbe
or
pop
xor
cmp
sbb
or
pop
cmp
mov
sbb
add
xchg
inc
pop
and
fists
sbb
mov
movsl
xor
jg
dec
jmp
sahf
jecxz
inc
loopne
mov
sub
cmp
rclb
adc
fsubl
or
jne
pop
add
pop
shrb
add
sar
ud0
sub
push
leave
and
push
sbb
push
pop
add
addr16
cmp
dec
and
imul
loopne
dec
cli
das
sti
adc
pusha
sarl
lret
mov
daa
out
negl
fwait
addr16
incl
pusha
xor
cmp
xchg
jmp
adc
xchg
push
clc
rclb
push
sbb
in
inc
jecxz
push
jno
mov
cmp
dec
mov
orb
or
or
sbb
scas
xor
pop
adc
add
mov
sub
arpl
or
pop
mov
xor
data16
xor
lds
or
or
andl
pop
icebp
movl
aaa
loopne
inc
dec
mov
fnsave
pop
xor
notl
andl
lock
dec
adc
dec
pop
ffreep
mov
or
loopne
scas
jmp
or
das
sbb
push
aaa
sti
adc
mov
xor
and
adcb
fsubp
sbb
sub
push
imul
outsl
in
scas
and
scas
xor
mov
ss
jo
lods
das
xchg
and
push
add
sub
push
outsb
into
lret
stos
nop
lret
fsubl
jae
out
jmp
and
jmp
pop
sub
and
inc
dec
xchg
es
and
push
or
inc
ret
add
or
fidivs
shrb
rcll
fdivp
or
mov
push
push
pop
cmp
ret
or
jbe
jcxz
es
hlt
movsl
dec
emms
mov
icebp
das
das
stos
mov
pop
and
push
mov
pop
cmpsb
xchg
inc
out
pop
scas
pop
sub
fisubrs
in
fiaddl
out
shlb
mov
push
sbb
add
or
inc
jmp
cmp
inc
ja
xor
adc
xchg
push
xor
sbb
add
arpl
dec
mov
xchg
hlt
mov
mov
push
sbb
fisttpl
dec
cmp
add
test
repz
imul
dec
cmp
ret
out
sub
out
and
mov
xlat
cmp
adc
or
push
and
call
lahf
xlat
rcl
mov
shll
cmp
pop
out
and
pop
mov
out
inc
scas
push
mov
es
push
jle
cmpsl
js
jecxz
lret
scas
sti
ds
pop
lret
xor
inc
xor
scas
pushf
pop
cmpsl
repz
mov
dec
add
sahf
cmpsl
daa
xor
fiaddl
push
jecxz
and
add
addr16
call
fists
mov
push
mov
or
mov
inc
cmp
sarl
add
add
movntps
pop
mov
add
scas
jne
jb
daa
push
rorl
mov
lock
pop
lods
inc
lods
xor
fdivs
cmpsl
imul
mov
xchg
inc
jecxz
sahf
jne
jmp
aas
push
out
outsb
adc
lcall
jg
inc
dec
hlt
mov
and
pop
sub
cmp
out
pop
xor
or
sarb
mov
popl
dec
or
push
stos
add
adc
bound
xchg
scas
mov
sub
add
jno
xor
ret
bound
sub
mov
loopne
mov
sbbl
cmpsb
xor
add
je
incl
mov
daa
ss
push
mov
cmp
pop
adc
ljmp
rol
cmp
arpl
mov
xsave
js
bound
outsl
mov
jb
jo
lahf
inc
mov
dec
cmpsb
push
jecxz
push
ret
scas
pusha
mov
inc
shr
dec
sti
cli
pop
loop
popa
mov
adc
fs
lahf
adc
js
mov
je
pop
loope
xchg
pop
jg
loop
pop
btc
xor
inc
insb
and
push
sbb
addr16
sarb
mov
dec
leave
pop
push
aaa
imul
dec
fiaddl
jecxz
scas
je
outsl
movsb
jmp
fistl
sub
daa
push
mov
jg
ja
clc
les
dec
sbb
xor
inc
mov
jecxz
adc
sub
push
or
arpl
pusha
xorl
dec
pop
fwait
xchg
dec
lret
xlat
add
jmp
shlb
or
dec
sub
pop
inc
das
ret
es
imul
pop
cs
mov
xor
dec
es
xor
push
jmp
add
out
or
rolw
jg
jp
mov
pop
mov
dec
aaa
jmp
sub
aas
arpl
sub
ret
jmp
mov
mov
cmpsl
jno
jne
dec
inc
pop
fwait
mov
sub
mov
orl
xchg
imul
outsb
jmp
pop
xchg
js
pop
repz
xorl
inc
mov
arpl
push
adc
dec
inc
sbb
sbb
mov
ret
mov
jnp
mov
mov
mov
sti
xor
das
stos
xlat
mov
xchg
testl
push
mov
inc
xchg
outsl
jmp
ss
addr16
and
xor
decl
cs
pusha
mov
mov
push
pop
movaps
lahf
sub
pop
and
aad
imul
cmp
sub
add
adc
inc
push
add
pop
dec
pop
inc
lds
lcall
fists
inc
or
jl
jnp
xchg
jae
arpl
out
ss
data16
outsb
mov
inc
mov
scas
stos
sbb
xchg
xor
iret
jmp
test
test
jmp
push
test
rorb
lods
push
ret
imul
cmp
mov
sub
mov
xchg
mov
and
inc
and
sub
xchg
push
out
xor
mov
dec
call
push
outsb
lods
mov
cmc
add
jecxz
shufps
arpl
xor
push
sub
ret
ja
inc
xor
loope
lret
out
and
fildl
lock
xchg
inc
fstpl
test
out
pop
je
stos
lret
scas
lahf
push
dec
sbb
nop
loope
aaa
mov
pop
inc
bound
mov
lahf
pop
pop
mov
ja
addr16
add
sub
xor
sub
push
aas
mov
ret
xchg
ja
push
sbb
imul
xchg
dec
or
mov
shrl
pop
xor
les
mov
cmp
inc
lods
outsb
mov
pop
ret
jge
pop
mov
pop
jo
jge
addr16
mov
imul
pop
cmp
mov
inc
daa
sbb
iret
ja
jbe
mov
pop
mov
push
test
rcll
xchg
xchg
stc
dec
in
pop
xlat
shl
loop
cmpsl
cmp
xor
xlat
and
pop
jecxz
test
ja
add
ss
aaa
out
sub
es
ret
inc
mov
xchg
jo
push
lods
imul
push
push
das
inc
cmp
jp
fwait
mul
movswl
add
ret
jno
rcll
rolb
pop
add
xor
or
jb
or
and
xchg
mov
ret
rcll
jnp
adc
inc
xor
push
lods
xchg
js
dec
xchg
loope
dec
mov
dec
fimull
push
jo
addr16
adc
out
push
inc
push
sub
xchg
and
lret
iret
push
sbbl
cwtl
cli
js
mov
dec
xor
pop
inc
sbb
dec
cs
and
push
repz
ret
xlat
jnp
aaa
pop
xor
sub
or
dec
xor
andl
sbb
out
sbbl
pop
sti
fdivrp
mov
add
xor
xor
imul
imul
mov
cmp
aas
add
pop
dec
scas
mov
pop
pop
aas
mov
jmp
out
ja
jl
inc
mov
mov
shrb
mov
sub
xchg
xchg
ret
movsl
dec
ja
cmp
push
xlat
pop
add
xchg
out
mov
inc
pop
or
adc
stos
push
iret
fildll
lds
imul
cmpsl
sti
jl
push
pop
divl
pop
xchg
sbb
mov
loope
stos
mov
push
jecxz
pop
das
scas
cmpsl
push
leave
adc
jne
fistpll
jle
shrb
add
fists
push
xor
sub
pop
push
push
dec
xchg
cmp
clc
js
out
and
fninit
jae
loop
rcll
jecxz
mov
arpl
add
test
lahf
insb
push
popa
test
mov
sbb
imul
mov
repnz
jnp
mov
xchg
outsl
dec
cmp
push
ds
ja
idivl
cmp
sbb
jmp
je
fcmovnb
push
scas
mov
imul
cmp
bswap
fadds
fildl
xchg
movsl
cmpsl
pop
stos
xlat
scas
push
xchg
test
xor
data16
outsl
pop
mov
cs
cmpsl
xchg
inc
sub
int
iret
inc
pop
add
stos
add
orl
outsl
xchg
inc
rolb
mov
push
add
sub
test
inc
lods
dec
aaa
or
cmc
push
inc
iret
push
xchg
sbb
out
mov
subb
cmpsl
xchg
lds
loopne
cmp
pop
pop
push
or
dec
fbstp
push
xor
push
loope
ja
out
aad
push
xor
aaa
stos
pop
cs
hlt
push
daa
xlat
jg
outsb
jmp
adc
adc
mov
cmp
xor
outsl
sti
jns
jge
out
sahf
test
stos
or
arpl
push
jnp
repz
jge
popa
pop
cmpsl
setae
push
dec
ret
pop
adc
arpl
xor
cli
push
and
xlat
movsb
or
xlat
lret
xchg
push
xor
fdivl
out
push
sub
int3
inc
jnp
xchg
scas
rolb
rorl
jg
xorl
paddq
lret
dec
adc
scas
jno
push
adc
aaa
fs
adc
jg
pop
gs
inc
fcmovne
xchg
push
cvtdq2ps
ret
cs
cmp
xorb
sub
sub
xor
sub
stos
or
xchg
movsb
jmp
iret
or
adc
cmpsb
leave
mov
push
mov
dec
dec
aaa
mov
jbe
sub
xor
adc
xor
push
in
outsb
add
andb
jbe
mov
dec
aad
pop
dec
or
mov
add
mov
sbb
dec
inc
js
subb
in
fisubl
insl
mov
ret
pop
xor
push
mov
aaa
push
inc
sub
iret
js
adc
pop
daa
shll
out
sbb
rcll
addb
das
xchg
movsb
rcrb
sbb
cmc
sbb
jecxz,pt
fwait
jecxz
fisubs
push
xchg
mov
iret
mov
aas
outsl
dec
loopne
clc
xchg
outsl
psubsw
mov
aaa
adcl
jl
out
dec
dec
mov
jb
sub
push
xchg
call
jg
mov
and
loopne
fwait
imul
lea
mov
repz
cs
jno
xchg
xchg
cmpb
repnz
fistpll
xor
mov
mov
das
sahf
ss
pop
xchg
fwait
and
lods
nop
sub
lods
fimull
lods
shrl
sub
dec
gs
inc
jg
subl
gs
dec
mov
jg
lods
fst
pop
jae
addps
or
or
mov
pop
popa
repz
mov
aas
das
adc
xchg
cmpsl
xchg
mov
movsb
adc
loopne
repnz
push
sbb
and
xor
es
add
inc
pop
xlat
pusha
mov
and
adc
mov
movntq
lods
adc
ljmp
mov
sub
daa
add
gs
inc
mov
mov
ss
ja
cmpsl
inc
arpl
shll
stos
pop
mov
inc
popa
xor
push
pop
add
mov
dec
bound
mov
cmp
pop
call
push
mov
cmp
ret
xlat
outsb
popa
aaa
jg
dec
and
lea
and
xor
dec
push
sub
pop
ficoms
rcrb
out
iret
sbbb
cmpsl
roll
imull
ret
push
inc
sub
push
push
int
imul
les
loopne
out
imul
or
ja
and
mov
aaa
cmp
fiadds
addr16
mov
cmpsl
das
xor
xchg
jnp
fsubs
fwait
subl
push
cmp
mov
xchg
pop
sbb
cmp
ss
fst
sub
adc
mov
faddl
test
push
sar
xor
xchg
jnp
movsl
rcll
popa
lods
sbb
outsl
fucomip
jp
mov
sbb
out
pop
and
out
and
dec
pop
subl
testl
push
iret
loope
xchg
push
xor
push
sbb
xor
inc
or
add
imul
add
mov
dec
jle
xchg
out
xor
cmp
jp
and
stos
jbe
or
add
xchg
jnp
repz
shrl
xor
dec
adc
iret
inc
or
jae
push
inc
jb
fwait
test
aaa
mov
or
xchg
adc
inc
fisttpl
sbb
nop
sahf
jno
inc
dec
loope
pop
xor
xchg
out
scas
es
mov
push
lods
rdpmc
dec
paddsb
add
aaa
fwait
cs
mov
pop
icebp
pushf
xchg
call
adc
push
add
daa
jecxz
push
js
or
das
adc
loope
mov
add
mov
ret
aaa
inc
inc
cmp
bound
shlb
dec
addl
fadds
pop
jg
mov
xchg
sbb
or
insb
cmp
ss
jbe
je
shrl
dec
mov
inc
cmpsl
inc
xchg
sub
inc
popa
xor
mov
cmp
push
xchg
stos
sub
jecxz
mov
fnstsw
mov
push
and
jnp
popa
add
push
repz
lret
lea
insb
fiaddl
adc
cli
js
jne
inc
or
sbb
popa
adc
pop
lret
jo
lea
mov
sub
mov
xchg
cmp
fistl
and
or
dec
mov
sub
scas
xor
ret
mov
adc
add
push
addl
xor
mov
ja
mov
jno
mov
dec
mov
cmp
pop
adcl
jecxz
pop
and
ja
mov
cmp
inc
stos
xlat
cltd
ret
add
mov
push
call
arpl
pop
ret
mov
mov
xchg
dec
mov
psubusb
adc
inc
loopne
lock
scas
xchg
out
sub
dec
iret
mov
mov
push
test
je
das
pop
xorb
aad
lret
xlat
out
dec
hlt
addl
loopne
sbb
xchg
dec
scas
fists
pop
cmp
out
jecxz
cmp
mov
stos
jae
loopne
sbb
inc
rcr
jae
or
or
ret
mov
and
sub
test
loop
pop
cmp
filds
movsb
js
mov
stos
xchg
aad
sub
jg
dec
mov
loop
pop
add
add
xor
fcmovnu
scas
mov
mov
jo
fwait
movsl
lret
xchg
jecxz
mov
js
add
mov
jg
or
ss
or
jnp
inc
sbb
push
repz
sbb
cmc
test
pop
xorl
insb
adc
lahf
ss
jno
xchg
inc
stos
push
add
and
jp
jno
sbb
sbb
stos
cmp
mov
mov
out
ljmp
jecxz
or
xchg
xorl
cli
rclb
addr16
dec
and
inc
insl
add
xchg
insl
loopne
xlat
repz
lock
inc
dec
mov
push
mov
inc
out
fistl
jecxz
cmpsl
or
dec
movzwl
les
mov
mov
mov
rorb
or
fsubs
es
push
xchg
xor
pop
jecxz
dec
fwait
test
mov
add
cmpsl
aaa
orl
jge
add
pop
add
mov
test
cmovb
sub
test
lcall
sahf
and
push
outsb
pop
push
jp
incl
cmp
mov
add
clc
jecxz
mov
dec
jp
or
mul
adc
jecxz
xchg
add
mov
fnsave
out
fldt
mov
pop
inc
sbb
inc
cltd
adc
inc
mov
add
test
and
xchg
xlat
and
roll
lods
pop
aas
add
fidivs
pop
shll
loop
pop
outsb
add
pop
js
testl
andl
xor
jge
lret
pop
dec
jecxz
push
or
test
xchg
movnti
add
dec
lea
pop
cs
and
aas
sahf
icebp
fdiv
mov
loop
jecxz
stos
and
push
xor
dec
xchg
jbe
movb
xchg
jbe
arpl
xchg
adc
stos
sbb
xchg
rolb
push
jo
insb
cmp
mov
and
add
movb
movl
or
sub
lahf
cld
rolb
inc
or
push
mov
push
imul
lret
and
push
push
inc
and
mov
adc
dec
push
inc
pop
shrb
cmp
mov
mov
aas
lahf
lods
rorb
add
adcl
mov
fmuls
dec
pop
loopne
hlt
mov
or
xor
mov
es
xchg
sbb
stos
mov
sub
mov
sub
ret
imul
inc
call
jecxz
sub
dec
lods
xchg
fsubrs
mov
sti
dec
or
outsl
add
add
xor
pop
test
jo
pop
mov
mov
push
out
jo
push
mov
jecxz
shrb
push
or
je
inc
mov
add
ss
sub
dec
imull
add
aas
addr16
divb
pop
mov
mov
decl
shrl
fildll
ljmp
jo
iret
jecxz
mov
nop
cmp
cmp
sub
or
adc
mov
push
pop
mov
mov
daa
pushw
jo
pop
jmp
xor
add
cmp
insb
and
push
ja
pop
outsl
mov
inc
dec
jae
push
cmp
and
xchg
repz
cs
dec
xchg
fstpl
sub
lret
push
adc
orl
iret
mov
push
or
cmp
scas
inc
jnp
push
adc
pop
mov
cmp
orl
orl
fwait
testl
cmp
iret
stos
lea
cmp
inc
roll
push
cmp
cli
mov
iret
bound
adc
add
outsl
pop
fs
pop
lods
adc
dec
out
sbb
lds
enter
push
push
ss
pop
inc
rcrl
cmp
mov
jecxz
iret
nop
add
fwait
and
dec
or
subb
sbb
imul
jbe
loop
pop
jmp
mov
jmp
mov
xchg
sbb
push
add
andl
mov
daa
cmp
fisttpl
inc
cmp
repnz
addl
insl
pop
inc
mov
out
outsl
stos
or
repz
je
pop
aas
orps
cmpsl
xor
adc
push
or
dec
adc
xchg
inc
adc
mov
stos
pop
addr16
or
mov
mov
shll
into
call
jo
xchg
aas
xor
dec
add
add
stos
cmp
and
mov
aad
fdivl
pop
jae
fisttpl
push
push
cmp
jbe
aaa
fwait
loope,pt
inc
jecxz
cmp
sub
xorl
add
ret
mov
jp
cmpsl
fwait
pop
and
imul
mov
push
jg
mov
and
arpl
push
push
push
and
mov
push
push
dec
dec
int3
fstpt
xor
in
adc
pop
mov
mov
scas
shlb
mov
pop
xlat
cmp
add
lea
xor
and
push
imul
pop
cmpxchg
push
xchg
out
ss
and
xor
mov
aad
mov
mov
fwait
js
pop
or
hlt
scas
hlt
mov
and
fisubs
add
stos
adc
imul
adc
sub
mov
sub
pop
jo
dec
inc
and
push
into
adcl
push
jg
rolb
cmpsl
mov
sub
push
and
sbb
or
imul
push
mov
xchg
add
lcall
outsl
xor
insb
lcall
in
daa
arpl
inc
sub
outsl
xchg
jno
sub
jae
and
fiaddl
pop
scas
cmc
push
jecxz
jmp
sbb
arpl
sarb
dec
lods
cmp
je
cmpsl
xor
xor
lahf
rcl
test
mov
mov
ret
xchg
hlt
sahf
icebp
mov
bndstx
addps
sahf
sbb
ret
and
sub
lea
pop
and
movsl
mov
jae
jbe
imul
loopne
jecxz
ja
sbb
lret
lock
cmpsl
fdivl
pop
adc
push
and
jp
scas
test
mov
bound
mov
dec
mov
pop
out
mov
inc
stos
rolb
fwait
daa
dec
bound
jecxz
xchg
mov
dec
lods
fistpl
psllw
push
out
testl
mov
inc
testl
movsb
sbb
sarb
xchg
add
add
mov
lea
jl
cmp
arpl
daa
mov
daa
mov
jmp
call
jnp
fmuls
pop
imul
xor
lret
fistpl
inc
sub
xor
and
push
mov
mov
movsb
inc
pop
adc
shrb
fwait
adc
xchg
lock
stos
pop
notb
jecxz
pop
je
pop
repz
sub
pop
sbb
movsb
adc
xor
divl
mov
test
xchg
lahf
nop
sbb
ja
jmp
stos
adc
notb
mov
cmpsl
pop
pop
dec
sbb
mov
inc
xor
inc
ret
add
mov
inc
cmp
dec
fnstsw
xor
idivl
cmp
lret
and
rcr
dec
inc
mov
rclb
pop
adc
and
adc
imul
push
jo
pop
pxor
or
ror
cs
mov
insl
push
stos
mov
arpl
mov
cmp
dec
das
movsl
imul
fists
dec
sub
pop
add
subl
dec
loopne
imul
cmp
inc
fildl
cmpsl
repz
test
test
test
mov
rcrl
outsl
inc
repz
jae
xlat
outsl
push
inc
cmp
sbb
imul
iret
xor
scas
cmc
push
pop
aas
push
fsubrs
lods
xor
xor
sub
dec
ficoml
inc
jmp
pop
add
outsb
lret
xchg
ret
cmp
cmp
lods
push
push
ja
dec
adc
repz
mov
das
mov
jg
mov
push
mov
out
add
xor
mov
lcall
test
insl
fisttps
push
ss
xchg
xchg
mov
dec
mov
inc
shr
sub
shll
jnp
rolb
filds
jno
pop
pop
xor
adc
and
sbb
daa
xor
push
cmp
push
jg,pn
les
mov
sub
push
into
and
xchg
stos
shld
xchg
sub
pop
pop
aas
or
cmc
je
out
addr16
fwait
test
cmp
jno
dec
pop
mov
imul
mov
inc
imul
outsb
sub
mov
les
push
repz
add
mov
sbb
inc
ss
and
into
scas
mov
adc
push
pop
inc
sub
xor
ljmp
lea
daa
fidivl
fs
mov
dec
jp
and
push
popa
nop
aaa
xor
arpl
popa
movsl
mov
xor
rcl
data16
or
movsl
cmp
and
pusha
xor
lods
add
cmp
ret
mov
xchg
xor
mov
cltd
pop
lret
dec
lock
das
pop
out
push
push
in
add
scas
je
sbb
mov
mov
test
out
orb
jmp
mov
inc
cmp
fisubrl
sub
bound
inc
repnz
ss
and
mov
ja
sub
int3
and
insb
mov
push
insb
test
fwait
push
lea
xchg
and
icebp
cmp
lea
test
inc
lret
mov
cmp
mov
sti
lahf
inc
add
decl
inc
push
xchg
push
cmovns
movsl
xchg
andl
jp
cmp
aas
adc
iret
mov
dec
popa
repz
mov
je
orl
fwait
es
xor
push
cmp
dec
xchg
lretw
arpl
pop
xchg
test
mov
cmp
push
lods
sbbb
dec
fdivs
jae
jmp
insl
and
adc
das
cmp
xchg
push
arpl
imul
xchg
test
push
jbe
lret
arpl
daa
icebp
roll
xchg
call
mov
cmp
decl
push
mov
mov
pop
loope
xor
mov
lahf
dec
pop
add
sub
jnp
cmpb
pop
xchg
jp
mov
or
outsl
fistpll
mov
loopne
cmp
jnp
lret
lods
pop
jmp
arpl
insl
xor
pop
rorb
xor
adc
inc
sub
aaa
xor
mov
fldl
cmpsl
scas
cs
mov
pop
sbb
or
addr16
ffreep
stos
daa
pop
loope
sub
inc
adc
mov
pop
cmpsl
stos
rcrl
filds
mov
jbe
xchg
outsb
xchg
mov
jne
aad
iret
pop
cwtl
scas
pop
dec
push
dec
cmp
jg
inc
inc
cmp
xor
adc
stos
pop
mov
outsb
push
jo
or
lret
add
or
iret
aad
rcr
imul
jae
or
ss
sub
add
sub
mov
sbb
xor
dec
sahf
xor
outsl
cmp
or
mov
inc
and
or
ss
pop
or
dec
xchg
js
adc
dec
or
mov
pop
dec
add
and
push
aaa
mov
aas
ja
les
fcmovnu
dec
aas
mov
push
dec
xor
cmp
je
xor
lds
sahf
out
daa
data16
arpl
fimull
mov
bound
sbb
stos
pop
das
out
adc
push
mov
jno,pn
push
sbb
mov
inc
mov
or
cmp
lods
mov
je
xchg
das
fadd
outsb
add
outsl
ficomps
daa
movsb
pop
cmp
xor
inc
dec
cmp
stos
hlt
mov
lahf
mov
dec
sbb
pop
sub
outsb
xchg
inc
jnp
les
and
xchg
push
cmp
mov
outsl
pop
sub
rcrb
stos
push
loop
dec
pop
mov
push
les
and
inc
inc
outsb
mov
ret
mov
inc
movb
or
leave
insl
sti
out
pop
mov
inc
ds
xor
xor
mov
fstpt
dec
or
mov
mov
mov
mov
cmp
pop
or
aas
jecxz
fsubrs
mov
add
or
repz
push
adc
xchg
inc
xor
enter
cmp
lahf
sbb
jno
jmp
lea
pop
inc
xchg
sbbb
pop
out
xor
mov
cmp
mov
add
xlat
sarb
jnp
mov
adc
xorl
daa
jmp
divl
mov
ljmp
xlat
scas
fcmovnbe
jnp
popa
add
scas
iret
testl
adc
ja,pt
and
mov
push
fwait
mov
mov
dec
cmpsb
pop
icebp
pop
repz
xor
loopne
mov
or
inc
out
push
push
adc
test
popf
cmp
aas
pop
pop
rorb
enter
push
or
fwait
sti
enter
fwait
jecxz
push
mov
aaa
scas
test
out
pop
mov
mov
lahf
ds
outsb
jle
ret
lahf
mov
ss
mov
cmpsl
outsl
aad
push
adc
pusha
pop
push
mov
pop
cmp
or
cmp
dec
add
sti
xor
inc
scas
out
mov
push
adc
inc
fcmovb
cmpsb
add
dec
lea
arpl
dec
sbb
pop
add
ss
pop
arpl
xor
out
mov
xor
push
repz
push
dec
loope
lret
jnp
adc
shlb
xchg
shrb
jb
xor
pop
inc
sbb
dec
jnp
pop
adc
pop
xor
sbb
outsb
xchg
rcrb
adc
popa
xchg
add
pop
popf
xorb
pop
dec
mov
mov
ret
xchg
and
jecxz
sub
rorl
test
js
adc
pop
fbld
push
loopne
cmovg
lahf
mov
push
push
sbb
ret
cmp
pop
ss
or
push
mov
mov
add
pop
js
dec
pop
push
test
mov
and
fiadds
pop
xchg
push
sbbl
adc
movsb
lds
aas
add
mov
ss
mov
pop
adc
dec
scas
inc
xchg
lods
aad
test
cmovne
add
inc
movsb
dec
pop
fisubl
add
mov
outsl
inc
xlat
pop
mov
addr16
xchg
jbe
sbb
sbb
dec
xchg
dec
outsb
rorl
inc
pop
xor
xor
push
ss
test
shlb
in
aaa
test
addl
movsb
inc
lret
pop
pop
imul
cmpl
inc
das
lcall
push
lock
mov
adc
cmp
and
das
test
out
dec
fcoml
pusha
fs
jg
xor
fwait
xchg
inc
pop
mov
test
shlb
or
aas
sahf
jno
cmpb
jae
and
outsl
sti
mov
adc
ljmp
popa
mov
addr16
lret
push
xchg
xor
outsl
ret
xchg
repnz
mov
adc
push
xor
xchg
mov
xchg
mov
and
push
pusha
fwait
and
jp
lods
pop
sbb
xchg
lret
insb
add
cmpsl
fcmovne
mov
xor
and
and
cmc
pop
cmp
jecxz
fwait
add
mov
clc
aam
filds
sbb
lret
jg
jnp
adc
incl
mov
dec
pop
jmp
xchg
stos
outsl
stos
lret
mov
fldt
push
sbb
mov
and
inc
dec
hlt
mov
movsl
div
imull
dec
push
inc
pop
test
pop
add
adc
outsl
xchg
inc
andl
das
lock
repz
int3
jno
js
push
xor
sti
inc
dec
sbb
mov
pop
pop
and
mov
dec
sbb
inc
iret
mov
xchg
ret
stos
pop
out
adcl
pop
inc
mov
addb
push
les
clc
mov
pop
mov
call
cmp
fcompl
xor
jo
or
pusha
in
outsb
cmpsl
aaa
fwait
mov
out
into
hlt
sbb
pop
in
nop
inc
divl
aaa
dec
dec
outsl
pop
add
mov
inc
push
stos
nop
mov
arpl
push
idivl
xor
xor
test
inc
repz
movsb
in
push
xchg
fbld
or
sub
scas
popf
pop
inc
mov
dec
dec
inc
stos
push
icebp
movsb
imul
mov
xlat
push
adc
inc
push
or
out
fwait
pop
in
andb
push
shlb
push
jno
into
jnp
xor
aad
jge
jg
fistpl
out
movsb
mov
add
lahf
jmp
js
cs
jo
xchg
nop
xchg
scas
add
and
dec
ss
repz
or
cwtl
fsubs
pop
adc
pop
insb
mov
mov
jnp
inc
or
jmp
add
packssdw
es
jnp
sarl
sub
push
pop
add
jl
jnp
comiss
sub
cmpsb
or
movsl
stos
fnstsw
xor
or
push
xchg
sub
and
xchg
scas
pop
pop
pop
and
stos
mov
iret
sub
jmp
or
dec
jp
mov
les
adc
cmp
ljmp
mov
pop
and
xor
jp
aaa
cmpsb
push
movsb
add
or
pop
and
loopne
iret
add
pop
repnz
xor
inc
dec
sti
jecxz
mov
xchg
push
jbe
inc
pop
mov
xor
push
lcall
or
inc
push
fcmovbe
xchg
mov
mov
mov
out
jg
inc
loopne
mov
jecxz
cmpsl
test
or
jg
mov
imul
popa
xchg
and
rol
mov
inc
pop
jnp
pop
sbb
sub
mov
test
lret
rol
or
mov
push
bound
or
push
inc
cmp
add
leave
xlat
dec
insb
xchg
pop
inc
add
icebp
push
mov
lret
psubusb
es
aas
add
xor
mov
nop
sub
pop
movb
xchg
andl
xor
movsl
xchg
aas
inc
pop
xor
inc
xchg
addr16
cmp
dec
mov
rcr
or
mov
jbe
inc
dec
inc
fwait
or
mov
add
sbb
push
adc
cmpsl
mov
pusha
dec
das
jge
fwait
mov
addr16
mov
push
mov
fs
xchg
in
adc
arpl
mov
test
shlb
out
movsb
and
jp
imul
xlat
je
pop
inc
dec
push
ret
xor
test
add
and
add
pop
cmovae
cmp
imul
jecxz
mov
cmp
lods
push
mov
dec
fwait
movb
addl
add
icebp
add
dec
jnp
cs
jmp
fcoml
sub
cmp
mov
xchg
pop
mov
cmp
xor
xor
ss
idiv
add
lock
testl
shll
jecxz
jp
inc
adc
pop
xlat
xor
insl
les
mov
xchg
ret
add
jae
jecxz
jg
stos
imul
mov
cwtl
jne
subl
movsl
sbb
add
add
imul
scas
mov
inc
cmp
sbbb
aas
adc
cltd
clc
xor
sbb
les
lea
dec
lods
or
push
inc
andl
adc
lret
mov
pop
mov
imul
js
push
pop
arpl
lock
xchg
cmp
test
xlat
sub
pop
nop
or
in
or
sub
xchg
pop
test
addr16
hlt
icebp
xor
and
cmpsl
mov
pop
cs
cmp
sub
stos
stos
sbb
or
call
ret
nop
cwtl
and
push
push
ja
adc
mov
push
fwait
pop
jae
test
mov
ret
push
sbb
inc
xlat
cmp
and
or
push
pop
add
ja
mov
jp
fwait
outsl
inc
lret
xor
call
push
lcall
cs
test
push
lods
stos
fildl
mov
mov
les
push
and
jo
mov
out
inc
mov
rcrl
fldl
or
push
push
mov
in
mov
inc
lods
xchg
fsubs
lock
cmpl
insl
adc
xor
imul
sbb
xor
jnp
imul
lods
adc
pop
push
fistl
push
pop
add
jno
jne
fistpll
addl
loop
dec
push
cmp
loope
imul
sbb
adcl
xor
xchg
push
xor
sbb
jl
jae
push
add
or
pop
in
xor
push
imul
dec
sbb
add
mov
imul
pop
or
xchg
cmp
xor
or
jecxz
sub
arpl
scas
sbb
push
pop
dec
xor
shlb
sub
jecxz
or
jg
push
or
ds
xor
nop
mov
js
movsl
or
out
xlat
dec
lods
mov
jecxz
inc
cmp
add
ja
mov
or
adc
aas
inc
push
dec
dec
test
in
mov
lods
jne
mov
push
stos
lret
mov
scas
mov
mov
inc
adcb
pop
inc
xorb
addl
ret
daa
scas
faddl
ds
fisubl
out
sub
mull
push
xchg
jnp
cmp
pop
xor
add
scas
jbe
inc
sub
cs
dec
arpl
loopne
or
ja
push
xor
lcall
aaa
sub
aas
into
testl
or
sti
je
mull
xchg
into
arpl
imul
movsl
dec
sub
mov
lret
ret
xor
je
stos
cmpsb
cmp
inc
les
sbb
sub
mov
fisttps
mov
push
sahf
mov
out
dec
jo
cmpsb
outsb
xlat
inc
jae
cmp
dec
add
aam
or
sbb
xor
jl
mov
sar
cwtl
sbb
mov
add
push
cmp
ret
or
pop
sbb
test
or
lahf
inc
les
pop
lret
mov
mov
and
movsb
or
addr16
gs
or
xchg
add
inc
rolb
mov
add
adc
sub
gs
addr16
mov
rorb
jae
aad
pop
dec
jae
ja
push
xorl
inc
pop
xor
pop
mov
scas
dec
xor
cmpsl
fbstp
mov
and
pop
repz
add
test
movsb
aad
out
ja
adc
rcl
fists
loop
mov
rcl
outsl
inc
inc
or
outsl
lret
and
lahf
shl
lea
add
mov
inc
inc
jl
mov
push
add
lahf
jmp
push
lods
inc
push
adc
aam
loopne
mov
jl
cmp
imul
sbb
outsl
push
call
xacquire
xor
cmpsl
xor
js
addr16
add
mov
cmp
testb
mov
cmp
xchg
lahf
lret
inc
mov
stos
push
idiv
aaa
faddp
xchg
push
lret
jnp
jae
and
adc
pop
add
xchg
xlat
outsl
xor
out
ja
inc
rcl
add
jg
cmpsl
pop
cmp
test
and
arpl
xchg
sub
push
mov
rclb
inc
and
scas
pop
les
imull
shll
push
inc
aaa
push
xor
faddl
push
push
xor
stos
or
inc
ja
ss
shlb
das
scas
ret
lods
xor
jbe
mov
imul
xchg
push
dec
out
adc
addr16
cli
rclb
pop
jbe
fdivs
aaa
jge
add
test
adc
inc
xor
cmpl
and
inc
mov
out
arpl
test
adc
cmc
inc
das
mov
sbbb
pop
pop
pop
addr16
mov
sbb
nop
aas
dec
inc
inc
out
lods
nop
xlat
jae
xor
jnp
dec
add
sub
mov
lods
rcl
shrl
sti
adc
sub
add
inc
xlat
pop
loopne
test
pop
sub
inc
xchg
stos
mov
das
dec
sbb
mov
inc
pop
dec
add
mov
dec
or
scas
pop
test
or
pop
test
je
mov
add
push
fcomip
pop
ja
sbb
sbb
fwait
ret
dec
cli
test
popa
pop
mov
sub
out
pop
insl
xor
dec
lahf
push
test
mov
out
pop
xor
loopne
lahf
cli
aaa
lea
mov
and
xchg
mov
pop
insb
sbb
rcll
out
ret
pop
xlat
das
mov
pop
cmp
fidivs
lea
stos
lock
jno
jbe
dec
xor
sbb
xor
and
scas
sarl
imul
clc
inc
popa
lods
aaa
pop
xor
push
aad
loope,pn
jnp
xchg
mov
xor
cmpsl
xchg
out
mov
and
les
dec
cmp
icebp
or
notl
scas
shll
push
push
sub
or
jbe
fwait
mov
popa
inc
clc
add
repz
xchg
rcl
push
xchg
dec
imul
stc
push
xor
mov
inc
mov
push
adc
xchg
jecxz
stos
test
cmpsb
jnp
icebp
pusha
lods
add
mov
inc
mov
mov
test
inc
outsl
fildl
pop
lahf
sub
push
fwait
ja
xchg
pop
mov
or
imul
inc
pop
push
or
xlat
outsl
ret
loope
sbb
adc
mov
jnp
rol
sbb
mov
pop
dec
push
sub
mov
nop
mov
push
xor
mov
aaa
ret
push
ret
sub
rolb
stos
jae
movsl
lea
repnz
int3
pop
push
pop
inc
xor
xchg
adc
push
ljmp
lods
lea
dec
pop
loop
roll
ljmp
bound
mov
mov
inc
or
out
add
test
lahf
leave
test
dec
mov
lods
out
dec
inc
jmp
cmc
adc
xlat
es
stos
ja
fldt
pop
push
jmp
out
aam
xor
xchg
add
addr16
arpl
xchg
scas
or
mov
pop
cmp
movb
and
aaa
sbb
dec
fst
inc
arpl
sub
and
xor
sbb
adc
push
xlat
lahf
jmp
jne
outsl
fsubrl
and
dec
int
cs
xchg
or
jnp
and
mov
in
clc
jmp
fdivrs
lret
aaa
cs
popa
jb
sbb
outsb
xor
pop
jecxz
imul
rcr
imul
scas
xor
mov
dec
xlat
xchg
lods
lcall
push
arpl
daa
push
mov
outsl
ja
sbb
shrl
dec
popa
adc
jg
subb
repz
movsl
dec
in
adc
stos
adc
push
mov
push
fidivs
sub
jmp
jecxz
shlb
mov
fwait
daa
jnp
fldt
pop
out
adc
dec
jl
mov
adc
fsubrs
mov
aad
dec
sub
andl
ss
mov
in
mov
mov
rorl
and
inc
pop
or
les
jp
ret
and
maskmovq
pop
mov
inc
ficomps
mov
xchg
xor
mov
psllq
and
adc
push
pop
or
jmp
sarl
lods
arpl
jnp
rcrb
add
mov
mov
repz
imull
pop
or
out
pop
mov
in
rcll
adc
pusha
out
cmpsl
js
push
fisubrl
add
sti
xlat
pop
add
xchg
xchg
iret
inc
iret
ret
cmp
cmp
lods
dec
dec
inc
xchg
mov
xchg
sbb
inc
out
icebp
mov
aam
jnp
jbe
arpl
ret
out
sbb
movsl
or
lret
pusha
mov
aas
addr16
cmp
stos
imul
mov
imul
bound
lret
cmp
stos
cmpsb
incl
iret
mov
shll
js
jne
cmp
aas
pop
adc
inc
pop
sti
pop
hlt
fidivrl
shlb
add
inc
aaa
add
cwtl
mov
aas
out
sbb
jp
add
pop
scas
daa
fldt
mov
push
mov
pusha
xor
mov
jl
adc
ret
push
inc
sub
ret
mov
ficoml
mov
sbb
daa
mov
subl
add
andl
sub
push
xchg
outsl
sub
jmp
arpl
lret
cmp
pop
js
les
ss
shl
push
iret
fcoml
push
push
loope
imul
mov
inc
mov
cmpsl
jae
jp
ss
xor
inc
inc
or
and
scas
inc
add
sarl
pop
mov
filds
bound
pop
mov
xchg
arpl
mov
movsl
dec
cvtpi2ps
bound
xchg
add
fwait
xor
xor
fidivl
cmp
jae
ss
inc
pop
and
cmpsl
xlat
inc
mov
stos
xchg
jnp,pn
outsb
test
mov
sbb
in
push
hlt
jg
dec
or
push
scas
ss
sbb
mov
pop
dec
adc
and
sbb
lods
rcrb
fbld
int
xor
movsb
cltd
rolb
xchg
jecxz
arpl
popf
and
mov
mov
mov
sarb
add
push
test
dec
insl
imul
insl
add
xor
aaa
ss
movsb
push
inc
cmp
mov
lret
sahf
add
jnp
aaa
inc
push
push
lods
pop
cmpsl
adc
xor
mov
xor
inc
cmp
loopne
inc
imul
or
mov
pop
or
dec
inc
out
dec
je
jbe
imul
out
divl
inc
rolb
stos
daa
adc
lea
mov
xor
cmp
cmp
mov
add
sbb
jae
lock
jg
add
inc
jae
lea
fucomi
or
xor
mov
mov
mov
aaa
jecxz
movsl
cs
popa
xor
add
faddl
arpl
xor
aam
xchg
xchg
fdiv
xchg
stos
jg
rorb
mov
jp
push
pusha
insb
cmp
adc
lahf
and
insl
adc
stos
xor
daa
mov
ja
inc
movsb
cwtl
push
pop
sub
ja
jecxz
inc
iret
iret
add
psubsw
sub
add
inc
popa
aas
xor
mov
jg
jb
push
dec
aaa
pop
ret
clc
xor
jmp
xchg
ss
push
stos
adc
outsl
shlb
xlat
clc
ret
dec
push
add
loope
pop
pop
imul
sbb
xchg
xor
repz
add
divl
test
or
xor
inc
dec
add
stos
xor
cmovo
cmc
xchg
push
pop
or
inc
mov
push
gs
mov
add
jle
lret
dec
adc
and
and
jecxz
sbbb
scas
out
push
dec
cmpsl
scas
je
arpl
adc
mov
ret
ja
insb
jmp
ja
imul
inc
add
loopne
mov
pop
loope
les
mov
mov
movl
subl
or
scas
repnz
or
pop
cmp
dec
jbe
fimuls
cmp
xchg
dec
jecxz
mov
and
push
daa
push
push
pop
sub
fsubrp
inc
fisttps
inc
roll
mov
dec
lods
inc
ret
xchg
ret
xchg
jecxz
inc
orl
movsl
rolb
mov
ss
mov
popf
nop
stos
xchg
jmp
iret
dec
inc
shll
ljmp
sbb
jo
cmpsl
pop
inc
jbe
rcll
mov
pop
stos
test
mov
xor
cli
jp
mov
xor
nop
fidivrl
cmp
mov
inc
sbb
imul
fsubrl
loopne
jmp
dec
dec
fistpll
xchg
xor
movsl
xchg
pop
ret
inc
mov
add
inc
popl
and
mov
ss
mov
cmpsl
mov
jle
adc
aaa
movsl
add
push
pop
xor
out
bound
test
fcmovnu
jbe
push
jnp
cmp
pop
cmp
jmp
mov
test
movsl
dec
xor
mov
out
or
bound
shrl
xchg
jne
dec
jbe
sbb
inc
and
enter
inc
fwait
inc
pusha
cmpsl
je,pt
cmpsl
imul
jnp
pusha
mov
fists
push
lods
adc
mov
shlb
pop
insl
lahf
pop
icebp
adc
daa
xchg
xor
inc
das
sbb
mov
xchg
pop
or
jp
xchg
mov
pop
pop
fsubrs
ss
dec
and
add
xor
xor
sbb
lahf
or
jne
pop
xor
sbb
ljmp
cmp
ss
out
outsb
mov
test
sbb
inc
nop
adc
mov
movsb
int
mov
sbb
jmp
xlat
sbb
mov
dec
shlb
repz
dec
push
mov
hlt
cs
inc
aam
rol
pop
inc
sti
insl
mov
fadd
dec
aaa
test
iret
bound
jl
ret
add
cmp
movsl
ds
add
cmp
insl
lea
jnp
les
adc
sbb
daa
lods
mov
das
mov
out
aas
aam
push
addl
lods
pop
mov
mov
xor
test
adc
cmc
icebp
push
inc
mov
push
test
sbb
sbb
add
jmp
inc
lahf
insl
mov
xor
inc
bound
sbb
cmp
mov
lahf
push
dec
cmp
mov
inc
add
mov
add
pop
mov
arpl
pop
neg
pop
out
fwait
ret
mov
fidivrs
ret
jmp
sbb
dec
mov
and
jmp
test
mov
pop
outsl
xlat
lods
cmpsl
mov
xchg
add
dec
mov
and
cmp
cmpsl
pop
mov
testl
lea
and
pop
cmp
out
insl
add
sahf
mov
xchg
jb
jmp
sbb
imul
rcr
pop
jmp
inc
imul
in
stos
scas
pop
push
pop
sub
cmpsl
cmpsb
mov
clc
adc
repz
push
dec
stos
aaa
and
push
or
mull
inc
sbb
lods
nop
mov
sub
fisubrl
pop
xlat
xchg
pushl
cmpb
imul
orl
sub
add
inc
ret
and
pusha
xlat
add
dec
pop
test
cmp
sub
scas
iret
pusha
enter
add
cmpsl
fidivs
mov
dec
inc
mov
fistl
cmc
shll
outsb
jns
xor
imul
pop
ret
jb
sbb
mov
mov
jecxz
dec
loop
xchg
pop
dec
xorb
test
fsubl
cmp
into
jne
scas
push
das
cmp
pop
inc
call
arpl
adc
pop
pop
inc
out
push
mov
xor
xor
mov
sbb
addr16
xchg
inc
inc
mov
dec
das
inc
jecxz
cmc
dec
and
or
andb
or
mov
popa
sub
loopne
inc
fwait
cmp
mov
cmp
and
dec
fdivs
add
fwait
lret
pop
in
ss
cmpsb
push
mov
repz
mov
jg
popa
jl
sbb
and
lret
mov
xchg
mov
imul
hlt
imul
shll
loopne
aas
sti
imul
push
jbe
push
testl
xor
push
pop
jg
insl
adc
out
and
push
xchg
dec
inc
ret
add
notl
mov
out
lds
pop
das
cmp
mov
xlat
mov
or
das
test
rol
mov
das
outsl
lea
cmp
or
push
lods
inc
outsb
arpl
imul
fcomip
xchg
test
rclb
movsl
paddsb
jnp
movsb
adc
mov
aaa
es
fs
jae
push
add
fwait
jecxz
inc
lahf
cli
cmpsl
addr16
stos
stos
mov
xchg
lar
cmpsb
jne
shr
push
mov
inc
hlt
mov
iret
pop
sbb
bound
mov
add
xor
fcmovnb
orb
mov
outsb
adc
cmp
add
jecxz
test
mov
add
jmp
icebp
or
jo
out
pop
cmpsb
push
pop
stos
and
and
mov
or
daa
push
xor
and
xchg
jno
xchg
cmp
out
pop
or
fsubs
add
fistps
cmpsl
aas
xor
shrb
pop
sti
imul
pop
movaps
xchg
pop
pop
add
xchg
xchg
mov
pop
out
sbb
jl
mov
loope
cmp
mov
push
xor
dec
xor
addr16
fwait
hlt
mov
pop
sti
xor
dec
aaa
push
je
hlt
test
inc
push
ficoml
das
pop
ret
mov
repz
mov
mov
fisubrl
mov
and
inc
dec
pop
lds
repz
cmpsl
dec
aad
dec
dec
les
jge
mov
lahf
adc
or
sti
ja
mov
addr16
inc
adc
stos
pop
adc
rolb
andl
mov
dec
or
inc
lcall
push
jecxz
insl
mov
out
mov
push
dec
pop
or
iret
rcr
pusha
jg
adcb
sbb
dec
cmp
pop
movsl
dec
insl
push
stos
rorb
push
fwait
mov
fnsave
push
mov
aas
ret
sbb
pop
aam
fbld
cmp
movsb
repz
pop
es
push
sarl
mov
xchg
or
xor
pop
je
lods
enter
jbe
add
fists
mov
pop
and
xor
inc
les
mov
out
scas
or
lea
inc
xchg
arpl
ds
das
iret
push
jne
lea
mov
popf
jb
jmp
filds
imul
dec
cmpsb
out
xchg
push
psrlq
push
lods
sub
stos
jae
sbb
sbb
push
cs
lret
sarb
jae
js
add
xor
gs
inc
shll
out
sub
cmp
pop
arpl
adc
fadds
movsl
out
jecxz
or
push
iret
push
scas
mov
cwtl
fidivl
mov
jmp
push
xchg
sub
ret
pop
push
inc
fwait
lret
jg
insl
cmpsb
jb
inc
pop
out
cmp
aas
sbb
lods
cmp
push
sub
lret
test
xchg
add
xchg
outsl
xlat
imul
lcall
addr16
adc
bound
jno
dec
or
push
sbb
into
xor
add
sbb
sahf
inc
in
pop
sysret
add
or
aaa
mov
dec
mov
addr16
push
pop
out
push
sbb
and
lret
jecxz
mov
sbb
stos
mov
sti
data16
mov
add
add
push
mov
ret
or
jecxz
dec
das
insl
xlat
shlb
pop
insb
adc
test
pop
sub
push
inc
pop
jecxz
adc
aaa
data16
inc
lahf
mov
sbb
shlb
add
pop
movswl
loop
roll
and
sbb
inc
or
adc
cmc
nop
outsb
fbld
sbb
outsl
pop
push
mov
jg
sub
xchg
mov
out
les
pushl
out
test
and
pop
jne
inc
pop
ret
adc
cwtl
adc
fisubrs
push
xor
shll
lods
test
rolb
lret
inc
inc
mov
sub
mov
push
fildll
movsb
push
filds
and
inc
aaa
xchg
push
ljmp
jbe
cmp
sub
inc
in
or
xor
xchg
cmp
inc
add
shlb
inc
ja
mov
jno
sbb
pop
or
mov
push
dec
jg
pop
out
sub
mov
push
mov
lds
add
pop
xlat
aaa
mov
inc
xor
cmp
jne
lret
push
mov
mov
mov
imul
outsb
xchg
mov
mov
daa
pop
cmp
mov
cmp
das
cmpsl
aaa
aaa
daa
and
jno
mov
xchg
add
inc
repz
mov
or
stos
sbb
adc
ss
pop
xchg
sahf
test
jne
fnsave
inc
mov
bound
add
aaa
out
sub
loop
dec
pop
push
sbb
stos
mov
popa
sbb
xor
lods
or
test
mov
mov
add
subb
add
add
push
lahf
and
movsb
push
iret
xchg
lcall
stos
mov
or
pop
pop
mov
pop
pushf
mov
lahf
add
je
test
xor
dec
xchg
imull
lods
sbb
xchg
sbb
fistl
mov
mov
mov
xor
xchg
insb
stos
rorl
inc
xchg
jl
or
jbe
cmp
cs
inc
ret
out
cmp
push
mov
sub
fidivs
jp
sub
outsl
dec
cmpsl
pusha
test
ds
jae
out
ret
xlat
mov
mov
cmpsl
cmp
pop
push
mov
jbe
out
pop
arpl
mov
stos
imul
inc
inc
subl
mov
outsl
pop
mov
sbb
inc
push
dec
xorl
ja
mov
out
xchg
cmp
lahf
sti
xor
sbb
sub
sub
dec
xor
mov
sysexit
sub
fwait
mov
or
inc
das
jmp
sub
xor
mov
daa
mov
das
ret
sbb
mov
dec
movsl
jno
xlat
jp
xor
and
cmpsl
mov
push
jmp
xchg
orb
push
pop
aas
leave
add
and
xor
adc
fwait
dec
lods
idivl
pop
mov
scas
adc
outsb
test
push
out
outsl
push
loope
insl
xor
jmp
mov
cmpsb
fldl
int3
mov
out
xor
or
mov
push
pusha
adc
xor
xchg
xlat
sub
mov
push
dec
cmp
popf
ret
sti
out
inc
cli
shrb
xchg
xor
int3
cmpsb
jnp
xor
fwait
add
out
cmpsb
ljmp
rol
lds
pop
xlat
or
test
cmpb
adc
insl
fwait
shrb
mov
icebp
pop
inc
xchg
out
lahf
sbb
inc
sbb
push
dec
jmp
xchg
xor
mov
cmp
ret
xor
xor
mov
or
inc
popa
xchg
xchg
push
push
mov
lock
stos
sub
mov
ljmp
mov
cmp
mov
repz
xchg
mov
push
mov
lcall
pop
ja
pop
das
pushl
nop
fdivs
push
mov
mov
jp
mov
test
push
sub
aas
les
or
mov
xchg
jnp
jmp
pop
mov
rorb
das
pop
and
mov
mov
or
pop
xor
push
xor
mov
adc
mov
jo
out
stos
and
sub
xor
cmpl
mov
fisubl
jecxz
repz
sbb
test
rcrb
jmp
sbb
and
fisttps
cmp
push
shrl
mov
push
ja
dec
xchg
lea
jo
pop
xor
cmpsl
xlat
testl
push
xor
jp
and
lods
xor
push
movsl
test
cmpsb
fadd
dec
xchg
xor
mov
and
lods
dec
arpl
mov
pop
and
aaa
out
je
clc
ret
cmp
shrl
or
stos
push
jmp
xchg
xchg
imul
lods
ret
ret
mov
pop
mov
data16
jmp
pushl
sbb
pop
imul
dec
mov
fcmovnb
es
stos
dec
inc
cwtl
inc
movsb
inc
xor
lcall
inc
and
pop
scas
xor
dec
pop
enter
cmc
adc
inc
idivl
test
jmp
cmpsb
push
sub
jnp
and
xor
xchg
jmp
dec
xchg
dec
dec
stos
or
aas
pop
dec
add
int
outsl
pop
outsb
out
and
adc
fcoml
repz
mov
dec
lahf
cmp
popa
sub
out
addr16
mov
add
add
mov
ja
sbb
jge
adc
adc
xor
and
nop
test
cli
inc
imull
iret
test
fidivl
sbb
xchg
xor
mov
or
inc
xchg
daa
cmp
loop,pn
add
stos
and
pop
imul
mov
iret
pop
orb
mov
push
dec
add
sbb
push
lcall
push
out
mov
sbb
add
add
aam
sbb
pop
dec
and
pop
mov
fisubl
jmp
aaa
jnp
and
pusha
dec
pop
xor
jo
mov
cs
lahf
sbb
xchg
fmuls
jmp
daa
push
xchg
bound
orl
mov
roll
loope
adc
adc
cwtl
mov
sbbb
ja
xor
rclb
mov
pop
jecxz
and
add
shlb
jnp
icebp
movsb
cmpsl
subl
pop
shll
xchg
outsl
ret
xlat
mov
movsb
or
inc
ss
clc
bound
sbb
push
jnp
mov
add
loopne
fcoms
mov
cmpsl
cmp
push
inc
addr16
aad
imul
je
mov
aaa
out
mov
sbb
sarb
inc
pop
andl
scas
sbb
xchg
inc
sti
subb
dec
and
mov
cmp
xor
push
pop
pop
loop
ljmp
mov
xchg
ret
lea
outsl
inc
leave
dec
pop
and
out
sbb
movsl
or
mov
jnp
fsubl
ret
mov
fwait
xchg
stos
orl
dec
jo
dec
les
mov
and
ja
push
test
maskmovq
imull
je
out
sub
xchg
push
movsb
sub
jae
imul
mov
inc
push
mov
sti
js
adc
xchg
xchg
jge
xlat
and
inc
lahf
xlat
push
ret
jmp
adc
pop
iret
addr16
lods
add
dec
jo
pop
movsl
fcmovnb
ss
mov
fistl
cs
xchg
dec
xlat
inc
in
inc
mov
jne
inc
push
imul
sub
je
or
cmpsb
rcll
adc
ret
mov
mov
or
dec
mov
mov
xchg
scas
lea
jo
fstpt
sub
pusha
xchg
jbe
imul
mov
ret
jno
or
and
xchg
mov
and
push
push
inc
sbb
xlat
add
les
jnp
xor
xchg
pop
and
cmp
inc
popa
pop
imul
sub
pop
or
bound
loope
pop
loop
xor
mov
sarb
and
xchg
jecxz
mov
iret
cmpsl
inc
arpl
xchg
or
scas
push
adc
mov
out
inc
pop
mov
push
fwait
out
or
je
jb
shll
adc
pop
pusha
pop
mov
lea
or
test
push
nop
inc
push
iret
sbb
and
sbb
and
xchg
jbe
xor
fisttpl
jecxz
push
jmp
cmpsl
dec
loope
inc
sbb
or
pop
jae
inc
outsl
in
mov
inc
or
dec
and
sahf
mov
mov
mov
adcl
daa
and
mov
les
lods
jecxz
cmp
or
pop
sbb
sub
inc
pop
xchg
sahf
jg
rorl
adc
ja
mov
lcall
scas
insb
xor
xor
sub
or
push
mov
sahf
fiadds
fwait
ljmp
out
fiaddl
fwait
daa
nop
jbe
pop
das
arpl
adc
adc
cmp
sbb
test
out
push
rcrb
pop
jp
sbb
inc
xor
mov
inc
fwait
lahf
movsb
pop
rorb
xorl
sbb
int
jnp
inc
and
roll
daa
dec
jp
inc
orl
cli
shrb
pop
or
mov
cmp
fildl
xor
xor
outsb
test
pop
arpl
push
sub
jmp
inc
daa
pop
dec
sti
add
add
push
movsl
mov
add
mov
pop
mov
pop
ss
bound
ss
push
add
inc
xor
and
fadds
faddl
ja
add
andl
dec
cmpsl
add
push
xor
dec
out
jecxz
push
cmpsl
sbb
shlb
loopne
cmpsl
icebp
push
ljmp
adc
add
mov
mov
insb
cmp
filds
sbb
pop
jnp
arpl
rcrb
push
movb
mov
or
sbb
adc
inc
cmpsl
addr16
push
mov
xor
mov
add
inc
pop
pop
movsl
push
or
ja
ljmp
inc
outsl
xchg
addr16
outsl
add
sub
dec
push
jecxz
test
jnp
imul
cmpsb
inc
dec
sub
ret
push
xchg
pop
movsl
add
jle
sbb
sub
xlat
push
stos
mov
bound
push
lods
arpl
jno
xchg
mov
push
or
or
inc
jmp
mov
call
xlat
pop
out
movsl
lea
pop
mov
popa
sbb
popa
int3
das
jle
add
clc
push
popl
sbb
roll
jecxz
jg
mov
ret
or
jecxz
pushf
xor
jg
push
push
lds
ss
adc
test
sbb
inc
call
movsb
mov
adc
jnp
popa
adc
iret
jmp
jecxz
movsb
add
adc
pcmpeqd
ss
pop
xlat
and
xlat
add
ret
cmp
cmp
xor
pop
out
inc
stos
pop
fimull
in
add
push
push
loop
inc
jg
sbb
inc
inc
aaa
je
and
arpl
inc
movsb
aad
xchg
mov
addr16
cmp
andl
jb
cmpsb
push
les
stos
fwait
cmp
mov
loope
imul
rcl
xchg
mov
or
lods
leave
xchg
rorl
test
pop
cmpsl
das
imul
pop
mull
rorb
test
mov
cmpsl
add
mov
shrb
not
dec
adc
push
xchg
sbb
mov
sbb
or
xor
ja
and
sub
orb
pop
sub
cmp
and
fisttps
mov
shlb
mov
pop
mov
push
push
add
xchg
lods
imul
ficoms
mov
cs
fidivrl
icebp
or
mov
ss
dec
pop
enter
mov
pop
lea
sub
push
or
mov
dec
arpl
xlat
outsb
inc
add
das
jecxz
pop
in
data16
xor
imul
fstpt
les
mov
xor
nop
mov
pop
negl
or
pop
out
insl
adcl
push
mov
inc
rolb
ss
mov
jp
push
es
xor
fsubl
adc
sahf
shrb
pop
sub
push
sbb
mov
aaa
mov
ja
fwait
mov
mov
xchg
inc
inc
out
fs
mov
push
ja
mov
sbb
lahf
lods
cmpl
mov
pop
or
push
push
add
adc
sbb
xlat
scas
or
sub
pop
andl
mov
xor
dec
mov
lds
icebp
and
adc
ja
lcall
mov
mov
mov
mov
or
sti
test
mov
add
and
subb
push
cmpsl
sub
sub
push
mov
andl
andb
mov
xlat
jne
jg
out
push
xor
inc
lods
ja
xor
fistl
mov
mov
push
xlat
or
clc
ret
jae
xor
rorb
out
daa
repz
mov
nop
lea
pop
pop
add
in
lods
out
xor
mov
stos
inc
aaa
jmp
pand
shll
or
xor
addl
inc
pop
push
bound
xor
push
sbb
push
sub
xor
fwait
xchg
and
fisubl
pop
pop
add
pop
sbb
mov
or
mov
inc
fwait
adc
sbb
xor
inc
sahf
and
mov
cmp
pop
push
lods
or
add
imul
imul
ret
or
mov
jae
cmpsb
xchg
xchg
push
xchg
enter
cmpsl
ja
xchg
push
pop
por
scas
push
iret
jno
ja
fwait
out
xchg
sbb
scas
push
das
xchg
mov
fisubs
ja
add
and
or
jg
mov
jbe
scas
jg
and
stos
sub
jmp
roll
divl
pop
sbb
pop
jae
sub
add
pop
mov
pop
das
sbb
js
xor
sub
push
and
mov
out
lret
lret
hlt
push
and
or
sbb
add
sbb
lahf
cmc
test
or
outsl
dec
shll
decl
mov
add
xchg
pop
fistpl
or
mov
inc
and
xchg
mov
lahf
roll
test
lods
push
mov
movsb
dec
dec
and
imul
addr16
push
dec
xchg
cmpl
arpl
or
push
mov
lret
pandn
inc
mov
fmuls
xchg
adc
mov
stos
xchg
adcb
xor
and
repz
and
push
mov
pop
fistpll
mov
fildl
inc
sub
aas
push
adc
daa
xor
pop
lret
xchg
xor
sbb
and
cmovp
lds
or
cmp
mov
loopne
mov
repz
fldt
xchg
orb
mov
xor
andb
inc
dec
nop
adc
ja
pop
icebp
subl
pop
outsl
mov
mov
stos
outsl
pop
inc
lcall
and
xor
mov
pop
and
or
divl
add
and
popaw
movsl
cmp
push
xlat
cli
adc
les
sub
fldt
test
add
xor
push
push
add
sub
movsl
push
ret
lcall
or
lahf
jnp
mov
cli
mov
mov
cs
aas
das
jnp
pop
les
inc
adc
xor
jmp
arpl
das
inc
add
in
push
xchg
xchg
add
jmp
sub
mov
push
repnz
lea
mov
adc
jbe
mov
lea
cmpsl
aad
mov
xor
out
inc
pop
imul
push
call
add
push
add
add
push
mov
fcmovne
adc
or
adc
das
jg
pop
fucomi
push
mov
mov
out
imul
mov
cmp
cmp
adc
xor
pop
ret
stos
push
imul
and
push
xlat
out
xor
lea
ret
add
add
lea
movb
lea
inc
sbb
mov
inc
iret
and
dec
pusha
pop
mov
dec
lea
inc
ret
add
test
shr
push
jbe
ret
push
inc
sbb
sub
mov
fwait
out
xorb
mov
pop
fisttps
aaa
insl
les
decl
fidivl
jbe
dec
imul
mov
stos
lcall
rol
push
scas
jg
adc
cmp
movsl
pop
inc
dec
pop
mov
push
sbb
sub
push
iret
das
cmp
call
pop
pop
pop
imul
dec
shrb
imul
testl
add
dec
mov
aad
jo
jnp
xor
rorb
pop
pusha
inc
pop
outsl
imul
mov
dec
and
fistl
cmp
imul
sbb
cmp
push
pop
cmp
mov
inc
inc
mov
loope
imul
sub
dec
mov
shlb
add
mov
xchg
jnp
lods
test
mov
xchg
or
popf
xor
iret
add
daa
pop
sub
adc
xchg
inc
fistpl
out
dec
or
cmp
add
add
mov
loope
xchg
xchg
cs
jnp
mov
sbb
test
popa
sub
mov
ret
xchg
mov
ret
mov
add
aam
inc
stos
mov
jbe
loopne
pop
aaa
mov
lods
add
add
adc
rorb
mov
mul
xlat
add
dec
ja
addr16
add
adc
insl
and
sub
xchg
mov
fwait
lahf
lahf
mov
and
mov
mov
and
push
push
jge
ss
imul
imul
shr
pop
js
cmp
mull
inc
bound
cmc
or
pop
sub
lahf
bound
test
fst
lcall
mov
adc
lods
sub
scas
inc
stos
xor
xchg
mov
jmp
and
xor
jg
cmp
xchg
jo
ret
lret
and
dec
out
inc
xchg
cltd
mov
sti
movsl
movsb
xchg
and
sti
loop
mov
scas
and
mov
lahf
mov
ret
mov
pop
push
fstpl
mov
arpl
push
add
cmp
dec
fwait
add
xchg
lret
fisubs
pop
fstpt
xor
xchg
lods
popf
shlb
fwait
outsl
push
pop
imul
adc
sub
xor
mov
lods
cli
movb
adc
mov
xor
pop
inc
loopne
roll
iret
sbb
ds
jecxz
outsb
and
push
xor
add
jnp
adc
ret
mov
and
pop
pop
and
xor
addl
pop
jmp
arpl
arpl
xchg
fwait
mov
and
ja
pop
add
je
das
gs
push
cmpsl
add
inc
jecxz
sub
cmpsl
outsl
add
xchg
jne
pop
xor
dec
xchg
push
sub
or
lock
mov
xchg
mov
scas
xor
nop
dec
inc
out
xchg
inc
mov
cmp
imul
cmpsb
jnp
scas
addb
mul
das
lahf
sbb
in
xchg
rorb
lods
iret
and
iret
mov
mov
or
dec
mov
adc
cmpsl
dec
orl
adc
filds
pop
arpl
or
cmpsl
push
sbb
fwait
loopne
add
pop
mov
aam
push
jae
rcrl
lea
jbe
xchg
fsubrl
daa
jae
cmp
mov
sub
addr16
xor
and
pop
pop
lods
add
movsb
push
bound
adc
cmpsl
out
mov
aaa
mov
mov
arpl
add
roll
sbb
mov
ljmp
iret
ret
inc
jae
xor
and
and
daa
and
pop
mov
lds
shll
push
nop
xchg
adc
xor
add
inc
sub
pop
stos
xchg
aas
pop
cmp
push
imul
lods
rcl
dec
arpl
mov
pop
jnp
add
add
daa
jbe
jae
inc
aaa
dec
sti
inc
ja
sub
inc
pop
push
mov
cmp
dec
cmpl
mov
push
adc
jg
fwait
mov
mov
mov
xchg
fisubl
push
divl
xchg
and
xor
jmp
rclb
xchg
dec
add
push
push
mov
xor
xchg
dec
pop
xlat
dec
fists
lahf
xchg
xlat
mov
dec
cmp
filds
xorl
outsl
sbb
push
xor
pop
push
ja
nopl
lea
outsb
push
mov
push
inc
mov
jno
es
iret
mov
xor
pop
and
stos
inc
ss
adc
push
and
popa
add
mov
jg
jbe
sub
adc
push
pop
insb
repz
inc
xchg
add
data16
outsl
and
ss
out
inc
or
lock
popf
inc
aas
mov
mov
mov
push
bound
mov
daa
imul
mov
mov
push
push
mov
jg
sub
sub
lcall
fstl
sub
mov
mov
pop
outsl
adc
sub
pop
shll
cmp
xor
mov
pop
ds
xor
add
mov
sbb
pusha
aaa
lods
fistpll
mov
inc
push
inc
or
iret
xorl
stos
test
les
inc
lea
aaa
add
subb
addr16
and
or
mov
fistl
push
imul
fwait
sbb
jecxz
inc
scas
add
fisubl
lahf
sub
sbb
add
lcall
inc
mov
mov
lods
aas
mov
push
imul
xchg
aaa
ja
xor
push
fcmovnbe
imull
cmp
or
filds
sbb
imul
dec
shlb
inc
scas
imul
pop
rclb
inc
xchg
je
inc
inc
pop
dec
push
test
jg
jne
pop
sbb
fisttps
fildll
in
mov
xor
shrb
das
div
or
adc
pop
mov
and
sub
stos
mov
mov
mov
fsubs
push
mov
lods
subl
pop
sahf
mov
loop
lahf
push
dec
subb
pop
inc
pop
insl
xlat
mov
ret
mov
xchg
outsb
adc
lcall
push
rolb
add
addr16
pop
xlat
mov
insb
pop
jae
aas
setg
add
or
or
inc
mov
push
inc
sbb
push
imul
iret
cmp
adc
pusha
pop
popa
arpl
das
add
and
add
or
mov
pop
pop
shlb
sbb
arpl
adc
or
xchg
inc
mov
rol
sub
sub
mov
outsl
arpl
sti
xchg
jecxz
aas
test
addl
hlt
xorl
daa
daa
and
jo
mov
pop
stos
pusha
or
jbe
fisubl
mov
mov
sbb
dec
add
daa
sbb
jae
mov
jmp
add
imul
pop
sti
data16
xchg
fwait
inc
pop
push
or
jmp
jecxz
sbb
aaa
test
add
out
bound
subl
push
xlat
sub
and
rorb
pop
inc
inc
cmpsl
test
in
xorb
and
outsl
xchg
mov
mov
lods
add
aaa
inc
adcl
lret
mov
mov
cmp
inc
fwait
stos
push
sbbb
xchg
repz
adc
loopne
dec
addr16
push
imul
out
mov
outsb
ret
addb
rorl
out
and
lret
xlat
jp
mov
imul
or
mov
cs
outsb
data16
mov
jmp
shrl
xor
xor
inc
jecxz
or
mov
jecxz
sub
pusha
xchg
jno
lret
jnp
push
sub
pop
inc
call
inc
cs
mov
loopne
jecxz
scas
lret
ds
and
sub
out
push
ret
jnp
add
add
repz
ss
cmp
notl
mov
ret
sub
sbb
and
sbb
jp
popl
mov
pop
inc
mov
dec
rorl
pop
mov
pop
ret
mov
inc
jecxz
addb
nop
callw
inc
jno
insb
and
pop
push
push
xor
ret
inc
lods
adc
xchg
mov
and
xor
mov
fstpt
xlat
or
or
xor
inc
cmpsl
ljmp
bound
aad
jo
push
pop
xchg
and
orl
rol
sti
stos
jmp
pop
fdivrl
inc
cmp
inc
iret
outsl
shll
push
sbb
ss
pushf
mov
adc
jae
xor
add
fistps
add
into
dec
outsl
test
movb
jo
sti
ljmp
addr16
jae
repz
cmp
scas
xchg
push
mov
pop
and
sbb
frstor
test
outsl
xor
sbbb
dec
inc
sub
mov
jnp
daa
outsl
lea
pop
out
repz
es
fwait
xor
addl
push
rclb
xchg
add
adc
or
imul
cmp
sub
or
cmpsl
adc
inc
lods
aam
and
je
insb
dec
or
les
ljmp
in
das
fwait
xor
inc
stos
sub
fsubl
xchg
dec
fsubl
fsubs
cmp
inc
pop
sti
xchg
push
push
mov
inc
xchg
rorl
push
sub
cmpsb
jnp
pop
jne
xchg
xor
mov
test
add
out
fistps
je
inc
lret
mov
jl
aas
and
loop
stos
pop
out
decl
pusha
mov
daa
mov
add
jnp
ret
pusha
mov
inc
stos
or
push
and
pop
stos
pop
or
mov
sbb
inc
sub
xor
inc
pop
mov
cs
xor
or
ss
bound
sbb
psrad
das
mov
insl
in
and
lahf
xchg
add
push
sbb
push
dec
lcall
or
pop
xchg
add
test
xchg
stos
jecxz
xchg
ficompl
lea
adcl
sbb
dec
fwait
and
cmpsl
xor
hlt
je
maskmovq
idivl
cmp
inc
xor
sti
mov
divl
inc
push
ret
cli
inc
fldl
sub
ja
scas
inc
mov
inc
pop
dec
pop
dec
jno
fwait
sub
mov
dec
or
xchg
adc
lahf
add
bound
cmpsl
mov
iret
mov
jbe
ret
fidivl
imul
xchg
sbb
mov
aas
iret
xchg
dec
sbb
movsl
xorl
das
push
inc
fisttpll
pop
sub
cmp
popa
xchg
mov
or
sub
lahf
dec
cmp
adc
cmpb
test
inc
movsb
push
inc
andl
dec
xor
loopne
cmpsl
dec
mov
addr16
dec
push
xlat
stos
mov
inc
pop
cmpsl
out
and
xchg
shll
jae
sbb
jmp
mov
sbb
or
pop
and
cmp
push
sbb
or
add
js
add
pop
mov
outsl
and
mov
xchg
roll
popl
or
fwait
mov
dec
or
mov
push
add
stos
or
js
adc
loop
out
cli
outsl
fldt
inc
test
and
jmp
mov
push
push
push
psllw
and
inc
cmp
add
jmp
popa
adc
and
fidivs
fistps
pop
push
cmp
adc
mov
sub
cmp
mov
pop
xchg
or
aas
dec
mov
sub
add
ss
jg
stos
jo
ret
xchg
fwait
ret
push
lods
daa
sti
push
push
mov
and
inc
mov
cmp
push
cmp
stos
fiaddl
xchg
pop
rcrl
daa
imul
xchg
or
aaa
add
es
aad
push
mov
jnp
mov
arpl
jae
mov
jmp
mov
pop
cmp
outsl
mov
movsl
mov
and
push
pop
pusha
sub
test
mov
mov
mov
out
or
insl
xchg
sahf
and
mov
ja
inc
and
or
ret
cmp
ret
mov
and
dec
adc
popl
outsb
mov
ret
stos
dec
mov
repz
popa
fdivrl
stos
rcl
adc
adc
rolb
pop
jae
jb
pop
shrl
jns
xor
les
pop
add
pop
cmp
fdivrs
pop
daa
inc
add
sbb
fbstp
dec
lahf
mov
or
outsl
push
push
cmpsb
xchg
shlb
aaa
loop
xchg
push
xchg
fidivl
pop
inc
xchg
and
or
fwait
mov
push
sti
mov
adc
sub
push
cmp
dec
cmpsl
jne
arpl
push
add
data16
xlat
cmp
lahf
xor
sbb
stos
insl
sbb
bound
test
or
jg
xor
dec
aas
inc
test
insb
repz
stos
inc
ret
pop
pop
lock
add
inc
adc
pop
sbb
mov
lods
addr16
cmpsb
scas
dec
daa
jae
por
addr16
inc
inc
and
aaa
xchg
cmp
jne
shlb
xor
adc
fnsave
mov
adc
es
test
xor
cli
test
xchg
or
xchg
or
ficoml
jg
ljmp
cmp
shlb
cmp
sub
pop
arpl
data16
pop
dec
les
outsl
add
sub
add
dec
imul
imull
push
xor
mov
add
sahf
icebp
push
or
add
or
arpl
sub
or
jg
mov
push
loopne
jg
fists
es
cmpsl
pop
xchg
bound
mov
adc
and
jl
stos
ja
xor
fsubrl
in
es
xchg
xor
pop
and
les
or
pusha
test
daa
xor
pop
setno
push
stos
inc
or
mov
mov
sub
cs
pop
clc
jecxz
sub
arpl
ja
adc
adc
jp
push
in
pop
cmpsl
sbb
aas
mov
js
lods
fcmovne
xor
cmp
daa
das
out
lock
aaa
addb
frstor
mov
movzwl
xchg
push
mov
ret
lahf
cmp
repz
js
lea
sbb
sbb
jne
dec
xchg
pop
push
adcl
cmpl
jge
xor
sub
xor
cmp
adc
xchg
call
out
pop
mov
cld
push
jb
xchg
dec
inc
bound
inc
and
loope
or
dec
sbb
mov
inc
jmp
lods
adc
ds
add
sub
mov
jp
sbb
lahf
cmp
aam
test
stos
insb
adc
imul
arpl
test
or
daa
mov
call
xor
sbb
das
lods
xchg
xor
xchg
test
xor
xchg
cmpsb
dec
sbb
inc
mov
xor
push
das
imul
xchg
pop
mov
push
sbb
push
xlat
cmpsl
adc
mov
testb
call
pop
mov
xchg
in
mov
inc
and
in
inc
out
loop
outsl
xor
fimull
iret
jo
jge
daa
add
sbb
addl
xchg
mov
aaa
fsubrs
int
daa
cmp
push
mov
sub
scas
daa
aad
shlb
jae
outsb
xchg
or
rorl
mov
xlat
iret
and
inc
cmpb
inc
push
pop
enter
dec
mov
adc
sub
hlt
sub
add
xchg
xor
pop
xor
push
das
stos
inc
and
mov
and
jmp
pop
mov
xor
fldt
cmp
cwtl
add
cmpsb
xchg
xor
pop
xor
stos
pop
mov
cltd
xchg
addl
push
fidivl
shll
int
sahf
jg
or
iret
filds
lods
xchg
jnp
mov
ret
mov
pop
insb
bound
sub
mov
inc
adc
iret
pop
cs
sub
mov
fsubrs
out
mov
pop
sub
mov
jb
aas
sarb
mov
nop
xor
sub
jnp
shlb
das
dec
pop
sub
add
sbb
pop
repnz
pop
aam
adc
xor
cwtl
inc
bound
dec
sbb
jg
push
insb
ss
pop
daa
sub
out
jno
daa
outsl
ror
inc
aaa
pop
ret
push
ret
dec
popaw
xor
cmpsb
sbb
inc
mov
inc
cmp
adc
sbb
and
pop
addl
mov
dec
cmp
shr
mov
test
pop
pop
iret
pop
outsb
xlat
lcall
shlb
out
add
jg
lahf
inc
push
mov
fdivrs
jmp
and
nop
jg
pop
stos
je
aas
mov
mov
inc
lods
or
imul
lahf
inc
mov
add
or
add
in
sbb
mov
pop
dec
and
movsb
sbb
out
ja
mov
clc
mov
orl
xlat
roll
ja
lds
ja
cmp
das
jnp
cmp
xor
mov
shrb
mov
bound
movsl
mov
adc
dec
outsl
mov
aam
aas
outsl
or
xchg
push
inc
popl
imul
cwtl
or
push
inc
cmp
push
xchg
dec
inc
jmp
inc
pop
mov
ret
or
out
push
or
jp
add
push
inc
stos
mov
jecxz
inc
dec
cmpsl
jbe
fbstp
bound
adcl
popa
sbb
ja
sub
jmp
aaa
aas
mov
ret
ret
or
insl
xchg
cmpsl
push
or
sub
xor
scas
cs
les
pop
shlb
pop
aas
fistpl
andb
xor
inc
push
or
xchg
inc
xor
jp
mov
fcom
xor
inc
loop
pop
add
and
inc
movsl
out
cmp
fmull
aas
lock
aas
xor
shrb
dec
rolb
inc
xchg
dec
jecxz
jg
inc
sub
bound
push
sbb
pop
sbb
push
lahf
and
lea
cmp
imul
mov
sub
mov
inc
jnp
addb
call
arpl
mov
insl
xor
inc
xchg
xchg
sbb
xor
inc
and
mov
cmp
xchg
adc
ds
jg
in
mov
pop
xor
lcall
add
pusha
insb
cmp
cmpsl
dec
sti
mov
or
ret
iret
xor
fidivl
aas
xchg
rcr
add
adc
mov
js
ja
mov
sbb
movsb
adc
das
mov
sbb
mov
ja
ss
xchg
aas
dec
aaa
add
orb
inc
bound
inc
jae
pop
js
daa
xor
xor
and
pop
and
fcomps
xlat
scas
aaa
cmp
repz
aaa
mov
dec
jmp
rclb
ds
mov
ret
adc
sarb
push
fwait
imul
cmp
dec
sahf
add
rol
xor
sarl
cmpsl
pop
lahf
xlat
sub
xor
sub
aam
sti
addr16
mov
test
and
inc
jmp
daa
dec
jmp
xor
add
fistpl
pop
sub
xchg
and
iret
outsb
faddl
lock
push
imul
into
jg
or
mov
dec
fimull
add
sahf
jbe
fcmovne
pop
xchg
xor
repz
pop
jbe
dec
jecxz
jg
mov
mov
adc
sbb
loopne
mov
and
mov
jecxz
sub
pop
mov
or
inc
lods
scas
jecxz
popa
shlb
and
add
add
mov
jnp
add
push
ret
stos
cwtl
ret
and
dec
inc
xchg
insl
mov
scas
push
sbb
mov
mov
stos
add
mov
ja
pop
out
or
arpl
movsb
push
mov
lea
pop
mov
pop
inc
mov
outsl
mov
rcr
sti
pop
adc
out
dec
lahf
xchg
decl
cmp
or
sub
add
ss
or
adc
mov
inc
mov
push
or
mov
mov
inc
cmpsl
scas
nop
fsubrs
fwait
mov
add
or
mov
lods
into
movsb
fidivs
lret
mov
inc
cmpsl
rorl
ret
lahf
dec
dec
sub
mov
xchg
outsl
mov
xor
shll
or
push
cmpsl
jbe
sbb
sbb
xorb
jae
pop
and
ret
jbe
xor
mov
pushf
rclb
popa
or
sbb
aaa
add
and
mov
and
mov
inc
enter
daa
inc
orl
or
mov
filds
xor
inc
xlat
push
or
out
ret
adc
imul
xor
inc
xchg
lods
dec
out
sub
ror
cs
inc
mov
rclb
inc
ret
mov
dec
popa
jmp
neg
mov
mov
cmp
outsl
mov
clc
ret
repz
jmp
cmpsb
sti
mov
div
sbb
cltd
ja
test
inc
ljmp
outsb
xchg
sti
fildl
dec
jmp
pusha
sub
imul
mov
pop
push
fsubrl
push
or
sub
add
fwait
mov
or
push
test
mov
movsl
ret
jnp
cmpsl
call
aaa
jne
dec
jl
or
jecxz
xchg
out
push
xchg
sub
packsswb
push
sbb
and
sub
inc
loopne
aaa
pop
pusha
mov
ret
adc
and
jmp
adc
mov
popa
pop
add
mov
outsl
xchg
mov
cmpsl
jmp
andb
shlb
adc
mov
dec
insb
jecxz
aaa
jmp
outsl
jg
adcl
in
fsubs
add
xchg
adc
shl
movsl
sub
push
jae
test
leave
andl
stos
xor
push
sub
cmpsl
mov
pop
pop
mov
inc
xchg
inc
cmpsl
repz
dec
and
add
pop
dec
pop
pop
shrb
lods
les
dec
arpl
ret
popa
push
adc
jecxz
jnp
xlat
inc
fildl
sub
xor
ret
lea
aaa
ret
lret
mov
mov
xor
fndisi(8087
ds
mov
popf
scas
lret
mov
dec
jecxz
pop
sbb
ret
test
sti
pusha
test
cmppd
mov
lods
out
xor
movl
xor
or
xchg
pop
mov
pop
outsl
repz
xor
pop
push
or
sub
mov
pop
scas
sbb
mov
add
xchg
imul
sarb
in
test
mov
jnp
and
mov
inc
out
sub
xchg
inc
pop
push
aaa
fwait
ljmp
ljmp
or
pop
add
iret
dec
aam
movsb
push
pop
inc
adc
add
mov
inc
adc
cmp
lods
inc
jmp
xlat
shrl
push
das
ds
insl
mov
mov
pop
inc
jle
bound
dec
iret
adc
and
imul
aaa
pop
insb
fcoml
pop
adc
incl
int
outsb
pop
or
fcomps
sbb
stos
mov
hlt
je
xchg
iret
out
push
leave
lods
ficoml
push
jnp
adc
sub
pop
ret
cmp
mov
aam
jae
pusha
add
dec
outsl
jp
push
lret
pop
shll
movsl
lea
push
push
nop
sbb
jb
daa
lea
add
sub
fwait
adc
mov
cmpsl
xor
scas
pop
sub
ret
nop
icebp
jne
mov
push
addl
push
sub
mov
loopne
add
xlat
push
mov
pop
pop
mov
addb
rclb
or
add
lods
lret
mov
dec
or
xor
push
inc
jbe
pshufw
cmp
pop
stos
and
loop
daa
push
mov
inc
xor
sbb
pop
or
jmp
mov
inc
xrelease
dec
movsb
pop
fmuls
fwait
jp
mov
pop
pop
insb
mov
xchg
add
pop
lock
ja
stos
lahf
fwait
sub
hlt
popa
add
mov
daa
adc
das
xor
lea
jbe
jmp
push
mov
or
ret
xchg
cmpb
and
adc
aas
inc
repz
add
ss
pop
adcb
pop
popl
movsb
jno
scas
lock
push
fbstp
inc
testl
push
mov
inc
les
jo
xchg
xor
push
xchg
mov
ret
inc
xchg
aas
add
mov
jnp
push
sub
mov
imul
push
add
pop
inc
testl
and
inc
clc
jecxz
fisttps
clc
mov
add
and
sub
arpl
or
pop
outsl
aas
sti
sbb
adc
outsl
jp
and
xor
mov
inc
lods
push
add
sahf
mov
push
jmp
xchg
fistpll
test
pusha
xchg
sub
pop
and
mov
dec
pop
fcmovu
and
hlt
mov
sub
lret
popa
pop
or
mov
mov
and
repz
sub
xchg
insb
shrb
dec
arpl
push
mov
sbb
lret
paddsb
cvtdq2ps
push
lock
jl
dec
and
cmpsb
pop
inc
jmp
add
push
inc
outsb
add
add
aad
mov
mov
pusha
fiadds
xchg
cmp
sbb
mov
arpl
mov
mov
lods
xchg
mov
pop
orl
push
mov
testb
sbb
xlat
mov
lret
daa
mov
sbb
mov
pop
adc
add
rclb
addl
subl
test
addl
dec
and
add
lods
xor
push
test
xchg
ficomps
mov
add
and
inc
xlat
addl
test
xor
out
adc
mov
add
mov
das
es
mov
add
xlat
inc
mov
movsl
mov
mov
jb
in
js
cmpsl
inc
repz
pop
stos
and
xchg
xchg
mov
lock
jmp
pop
add
scas
add
xchg
cmpsl
arpl
adc
imul
inc
mov
or
pop
sbb
inc
or
pushw
sub
cmp
lds
sub
sbb
pop
and
pop
cmp
ljmp
lods
mov
mov
arpl
jo
jg
and
adcb
mov
inc
mov
mov
adc
loopne
sbb
nop
xchg
xor
xor
or
sbb
mov
pop
and
push
adc
lret
mov
jmp
mov
dec
mov
sbb
insl
iret
jnp
sbb
and
sub
repnz
lret
inc
fs
and
sub
das
and
sub
outsl
sub
add
xchg
pop
or
xor
inc
and
or
cmp
sub
lahf
loopne
cmp
pop
das
incb
test
movsb
jns
jnp
add
xor
xchg
sub
inc
xor
inc
pop
xor
sbb
dec
xor
inc
fdivrs
in
nop
lods
lahf
daa
mov
and
or
xor
xchg
dec
mov
mov
mov
mov
jg
jne,pn
cmpsb
mov
ficomps
dec
push
repz
les
sti
outsb
pop
bound
in
xchg
fdivl
fistpl
test
xorb
and
mov
sub
adc
test
and
sbb
mov
mov
outsb
mov
jg
mov
popa
push
sbb
xor
pop
jno
jae
cmp
sub
pop
xor
sbb
ja
pop
sbb
push
mov
sub
adc
jb
stos
xchg
push
sub
mov
add
daa
rorl
mov
daa
push
dec
add
shrl
sbb
xor
cmp
loop
mov
loopne
outsb
loope
and
aas
xchg
fbld
dec
iret
xor
cmp
xchg
dec
out
out
jo
movsl
adc
mov
xchg
fwait
imul
xor
add
popa
fwait
pusha
fcoml
mov
push
adc
or
fistps
dec
push
ljmp
scas
sarl
xchg
dec
imul
scas
jae
pop
fidivrs
pop
out
jb
xchg
adcl
insb
mov
mov
xchg
sti
push
add
xchg
cmpsl
mov
or
cmp
cmpsl
daa
pop
mov
fwait
stos
add
and
jbe
fcmovb
sti
inc
mov
jbe
mov
push
sbb
pop
mov
pop
sub
inc
ja
mov
cmp
and
out
jg
lock
xchg
xor
mov
push
out
xorl
imul
dec
inc
stos
outsb
out
pusha
adc
dec
out
adc
andl
scas
jo
mov
repnz
ss
sti
cmpsl
aaa
fwait
pop
cmp
filds
sbbb
rcr
inc
inc
sub
adcl
ja
es
lods
mov
andl
scas
sbb
add
cmp
xchg
sub
cmpsl
or
cmpsl
adc
cmpsl
jno
insb
cmpsb
jmp
and
xor
cmp
and
pop
mov
add
iret
orb
lods
lahf
cmpsl
mov
mov
vmovdqu
sbb
dec
pop
mov
ret
stos
fisubrl
lods
push
mov
or
adc
insl
xchg
ss
cmpsl
mov
lret
pop
stos
jne
scas
jno
push
ja
fidivrs
dec
pop
and
cmpsl
icebp
insb
sub
fistpll
cmp
jecxz
loope
mov
sub
fwait
push
or
adc
adc
pop
jbe
mov
jo
mov
mov
aaa
dec
jae
add
inc
xor
shrl
pusha
incl
cmp
jno
mov
adc
cmp
mov
and
xlat
sbb
fmuls
cs
cmp
xor
add
pop
cmc
dec
pop
xchg
jecxz
pop
das
lahf
push
mov
mov
sbb
lods
arpl
adc
sbb
dec
xor
iret
dec
dec
mov
push
scas
shrb
xor
add
jp
insl
fdivrl
pop
test
mov
or
outsl
bound
xor
mov
pop
xchg
cmp
iret
inc
pop
adc
inc
scas
das
inc
test
cmp
adc
out
cmp
xchg
fcmovnb
xchg
xor
xchg
cmpsl
outsl
add
push
sbb
orb
in
lret
lret
xor
orb
mov
fisttps
push
ds
and
mov
mov
xchg
add
and
or
out
push
mov
dec
aam
inc
jne
sbb
sub
fwait
cmp
in
dec
and
aas
mov
ret
or
cmp
mov
ret
sti
jmp
sbb
mov
jmp
imul
cmp
pop
lods
movq
aaa
cs
dec
fs
sti
mov
xchg
push
ret
jnp
aaa
adc
inc
ja
xchg
test
xchg
jnp
dec
in
and
dec
mov
popf
push
mov
lea
inc
ret
mov
lea
movsb
pop
iret
lahf
add
add
xor
lods
int
jnp
and
and
dec
cmp
jmp
mov
and
in
idivl
aas
xorb
dec
jecxz
push
addr16
roll
inc
andb
loope
xor
inc
xor
inc
dec
xchg
and
sti
and
jae
mov
or
sti
inc
push
imul
jmp
outsl
dec
pop
xchg
ja
push
add
addr16
adc
andl
daa
mov
pop
fdiv
adc
jnp
ror
xchg
sarb
or
cmpsl
inc
mov
test
int
mov
rol
stos
sar
jecxz
cmp
out
shlb
test
lcall
add
rclb
inc
fmul
xor
xor
jne
pop
loope
inc
pop
adc
xchg
pop
repnz
dec
pop
fnstsw
jmp
cmpsb
cmp
test
pop
lahf
xchg
xlat
in
add
jae
out
dec
imul
adc
mov
add
out
pop
push
xchg
cmp
xchg
xor
imul
mov
add
jmp
xchg
rcr
xchg
inc
adc
xlat
and
ret
cmp
jnp
test
mov
mov
movsb
or
xchg
test
in
inc
add
xor
and
out
pop
jp
lahf
cli
cmp
fwait
shlb
js
addr16
add
mov
and
sysret
rorb
sub
pop
add
pop
push
xchg
addr16
outsb
sbb
notl
adc
add
js
jecxz
shll
jle,pn
filds
out
ja
push
pop
inc
pop
xor
xor
pop
jg
int
push
jne
and
mov
push
ss
outsb
pop
cmp
rorb
and
loope
dec
or
mov
dec
test
ja
lods
inc
push
cmpsb
lahf
aas
add
lods
add
imul
or
push
scas
pop
fwait
mov
ss
inc
mov
pop
out
push
jmp
mov
pop
adc
jmp
pop
enter
inc
fstl
pusha
rcll
pop
pop
das
fcom
pop
dec
xchg
aas
rcll
adc
lea
inc
mov
loopne
mov
cmp
xor
scas
aaa
icebp
push
pop
fdivs
orb
loop
xchg
repz
fdivrl
ret
out
inc
cs
pop
sub
out
add
xchg
adc
add
inc
mov
mov
xlat
push
adc
xchg
dec
pop
out
scas
pop
ret
andl
xchg
inc
xchg
sbb
pop
and
adcl
add
nop
pop
daa
sub
iret
mov
sub
and
repz
cmp
pop
sub
cmp
sysret
adc
sub
iret
pop
dec
arpl
push
inc
rcr
sbb
popa
mov
addr16
xchg
call
inc
int
push
mov
xor
jbe
pop
adc
idivl
outsb
add
jp
xchg
arpl
ret
mov
fsubs
mov
inc
nopl
jp
lock
pop
js
jnp
xchg
pop
lods
or
stos
adc
clc
test
iret
mov
mov
mov
les
cmp
pop
cmp
cmp
xor
les
jo
xchg
pop
stos
ffree
sub
lret
and
test
fcmovnbe
bound
sahf
mov
jb
push
push
insb
fadds
iret
pop
adc
dec
push
cmpsl
sti
add
ljmp
call
dec
jp
daa
fisttpl
push
lods
ja
out
out
adc
xor
loope
xchg
add
roll
xchg
xor
pop
hlt
scas
and
je
mov
cmp
lods
mov
notl
aaa
arpl
imul
cmpl
push
inc
or
cmp
push
add
inc
mov
stos
scas
inc
iret
pop
sbb
mov
sbb
out
xor
xchg
pop
add
out
and
jmp
jmp
jno
add
adc
jbe
cmp
mull
adc
arpl
jecxz
addr16
dec
fadds
add
lods
xorb
pop
add
dec
jecxz
adc
or
fimuls
or
outsl
or
push
rorb
add
jg
add
or
cs
dec
push
inc
inc
cmp
mov
pusha
imul
jmp
test
push
add
inc
xchg
imul
scas
out
insb
testl
adc
mov
les
sbb
inc
xorb
xchg
adc
fwait
cmc
outsb
xlat
pslld
pop
inc
jl
or
jecxz
enter
pop
rclb
mov
xor
add
add
push
sbb
add
push
cmp
mov
fcmovnu
xor
inc
aaa
fmuls
jecxz
inc
jnp
xchg
cmp
jae
aaa
scas
test
mov
mov
add
imul
adc
mov
xchg
dec
jp
or
pop
cmp
xchg
mov
adc
push
xor
pop
stos
mov
push
xchg
addr16
cmpsl
dec
imul
sti
xchg
mov
test
fiadds
dec
xchg
shrb
mov
adcl
push
or
inc
xchg
mov
popa
xor
adc
dec
arpl
aam
jecxz
xchg
ja
arpl
push
jecxz
bound
lock
sub
dec
loop
test
ret
push
push
dec
shlb
pop
shrb
test
fmuls
dec
js
xor
sbb
xchg
push
inc
xchg
push
inc
mov
mov
movsb
out
pop
or
or
bsf
xchg
pop
popl
orl
add
arpl
fildl
mov
jg
sub
jecxz
xchg
stos
stos
mov
xlat
adc
sbb
and
aad
ljmp
mov
cmp
jae
mov
test
lea
pop
mov
sbb
sub
add
xlat
mov
or
push
and
jecxz
inc
rclb
push
push
shlb
fstpl
cmp
mov
xor
inc
xor
xor
dec
xor
inc
xor
add
scas
iret
outsb
mov
aaa
mov
push
outsl
ss
dec
sbb
xchg
scas
test
xor
jg
or
ja
pop
rcrb
insl
pusha
pop
fisubl
movsb
inc
iret
adc
dec
mov
iret
adc
mov
aaa
push
push
arpl
jmp
lods
pop
jo
jecxz
subl
daa
fbld
jo,pn
inc
pop
out
adc
mov
fwait
push
imul
adc
test
and
add
or
xlat
add
pop
jle
inc
ret
add
ja
xor
push
dec
fildll
stos
sarb
cmp
popa
adc
jg
xchg
ljmp
movsl
inc
cmp
push
sub
mov
xlat
shrb
sbbl
push
pop
dec
jmp
fisttps
sub
fwait
inc
mov
jnp
or
and
stos
repz
mov
pop
inc
repz
ret
cmp
adc
mov
out
je
add
push
scas
daa
stos
xor
add
movsb
stos
lret
inc
rcr
adc
xor
jae
scas
pop
sbb
shlb
imul
add
bound
nop
push
daa
xchg
insl
adc
jnp
bound
mov
pop
dec
stos
repz
imul
pop
sub
test
out
lret
lods
cmpsl
xorl
call
pop
mov
ret
dec
clc
add
call
mov
xor
out
inc
dec
mov
nop
lret
outsl
mov
jbe
dec
xchg
mov
ret
out
push
sub
mov
mov
data16
add
dec
push
jnp
mov
mov
jnp
movsl
sarl
adc
cmp
ret
test
scas
push
inc
sbb
mov
mov
add
inc
sbb
mov
add
js
push
push
pop
sub
xchg
xchg
adc
stos
pop
aad
add
push
mov
imul
mov
outsl
and
mov
sarl
mov
data16
pop
adc
data16
mov
pop
jno
arpl
mov
lret
mov
push
xchg
insb
andb
mov
or
xorb
je
push
btc
pop
daa
lods
lea
repz
xor
sbb
mov
jg
ret
add
loope
dec
xchg
pop
inc
mov
fistpl
inc
arpl
jnp
push
mov
mov
inc
xchg
stos
xchg
mov
fsubrs
jmp
mov
mov
rcl
das
sub
mov
cmp
rcll
xor
sbb
ret
push
cmp
inc
and
push
inc
popa
pop
es
fbld
mov
jge
xlat
mov
adc
mov
inc
sbb
mov
add
inc
sbb
push
mov
shrl
stos
and
pop
or
ret
and
sbb
sbb
jo
dec
adc
inc
daa
lods
inc
mov
mov
mov
mov
inc
arpl
mov
push
nopl
push
mov
out
pusha
aaa
mov
jg
mov
push
mov
out
hlt
xor
sbb
xchg
fadds
xor
xor
js
repz
add
mov
imul
sbb
push
inc
add
fwait
pop
xor
notl
das
rep
lcall
push
mov
inc
jmp
jb
out
scas
push
iret
pop
pop
icebp
add
sub
sub
push
xor
aaa
and
lret
xchg
lret
xchg
inc
cmp
fcmovnbe
shlb
aaa
xor
mov
xchg
push
mov
push
test
pop
mov
aaa
mov
dec
xor
sbb
iret
inc
stos
mov
sbb
adc
ret
fdivr
repz
pop
out
rol
mov
inc
shll
dec
outsl
dec
pop
or
idiv
xchg
bound
mov
mov
mov
jbe
fidivrl
adc
lods
adc
jmp
stos
xchg
jecxz
inc
pop
jg
add
ret
xlat
nop
inc
dec
movsb
outsl
jecxz
xchg
mov
in
add
cmpsl
out
adc
inc
arpl
rclb
movsl
pop
ret
jl
jae
inc
pop
mov
and
inc
pop
xchg
lahf
pop
rcll
cwtl
cmp
xor
dec
loope
lahf
push
mov
and
out
add
stos
pop
iret
mov
adc
addr16
fimull
imul
pcmpeqb
push
inc
cmpsl
imul
sub
xchg
imul
lock
sub
and
push
repz
push
fimuls
pop
or
adc
fcmovb
xchg
mov
imul
test
add
cmp
jg
arpl
mov
aas
lods
cmpsl
pop
in
mov
or
add
test
orl
adc
xlat
pop
ss
jp
add
xor
mov
pop
testl
sub
inc
fstpt
sti
adc
stos
or
test
sti
pop
dec
sbb
das
lahf
fsubs
lea
mov
pop
adc
or
scas
imul
jnp
jecxz
js
pop
test
aaa
lcall
hlt
rclb
cmp
lcall
sbb
out
test
les
mov
and
xor
jmp
dec
mov
bound
cmp
or
arpl
mov
mov
popl
xchg
mov
daa
sbb
mov
mov
sub
pop
jp
or
inc
mov
adc
xchg
xor
xor
adc
loop
fistpll
adc
or
out
inc
repz
pop
xchg
mov
pusha
dec
stos
dec
mov
pop
cmp
and
cmpsb
or
lods
push
lcall
insb
lahf
inc
mov
jbe
fidivl
push
imul
mov
fisubs
dec
jg
lods
mov
push
out
fs
mov
inc
cmp
cmp
xor
ret
xor
add
mov
test
jecxz
ja
xchg
out
xlat
mov
xor
xor
inc
mov
mov
inc
mov
and
xchg
dec
and
rolb
pop
or
jo
aaa
pop
clc
bound
xchg
or
push
addr16
xor
push
movsl
lock
dec
xlat
inc
mov
shr
push
scas
out
pop
push
mov
icebp
sbb
inc
adc
mov
test
clc
dec
mov
push
mov
outsl
scas
stos
pop
lock
addr16
and
jp
lods
jae
sub
and
add
clc
mov
roll
push
ljmp
pop
arpl
xor
movsb
mov
xchg
inc
xor
sub
bound
adc
inc
fldl
push
fidivrl
leave
lods
sbb
out
jp
orb
daa
add
jg
inc
mov
jg
imul
mov
sub
addr16
xor
ficoml
or
xlat
add
jg
and
pop
daa
fucomip
bound
icebp
mov
dec
cmpsl
out
and
imul
out
inc
push
enter
inc
aaa
xor
test
sbb
jbe
jae
es
mov
imul
xor
jl
or
pop
and
andl
cmp
shlb
and
mov
add
xlat
jb
push
mov
dec
pop
inc
xchg
imul
rcl
pop
fisttpl
add
add
jbe
mov
stos
push
add
imul
or
pop
imul
xchg
nopl
dec
xchg
xchg
fisubl
jb
mov
xor
mov
lahf
jecxz
cmp
out
or
aas
xlat
sbb
adc
push
jmp
fildl
xor
scas
add
push
sub
push
pop
sbb
sbbl
shll
testl
enter
inc
inc
ret
testb
outsl
test
push
push
rcrb
notl
les
add
scas
inc
push
and
lods
enter
xchg
loope
jmp
iret
push
pop
or
push
arpl
mov
imul
aaa
jno
aaa
fadds
movsl
in
ds
sahf
push
adc
xor
imul
pop
and
test
jmp
js
insl
add
lds
adc
inc
fwait
test
and
adc
es
add
lea
outsl
nop
outsb
push
out
adc
outsb
sbb
rcrb
rorl
lret
cmp
cmp
outsb
push
aam
push
popf
and
notl
push
bound
fisttps
cltd
fdiv
mov
jbe,pn
xlat
out
lods
rolb
pop
out
pop
lea
xchg
cmp
xchg
xor
inc
mov
out
or
stos
pop
sbb
sub
popa
xchg
pop
mov
les
fildl
in
xchg
adc
imul
mov
jecxz
xor
or
cmp
xor
adc
xor
lahf
sbb
add
xor
popl
push
rcrb
mov
push
imul
mov
fildl
or
xchg
cltd
or
inc
pop
xor
pop
mov
mov
fdivs
aaa
movsb
popf
cmp
inc
aaa
inc
sub
xor
test
into
jnp
add
or
dec
enter
xor
mov
xlat
cmpsb
adc
bound
dec
xor
cmp
imul
aas
push
ret
xor
dec
push
loopne
push
cmp
dec
adc
idivl
push
xor
daa
mov
les
xor
dec
mov
insb
insl
cmpsb
fcomip
push
xchg
add
xchg
xchg
cmp
arpl
sbb
ret
ja
mov
negl
pop
push
arpl
daa
inc
add
dec
sbb
xor
repnz
lahf
xlat
mov
pop
cmp
daa
mov
sbb
or
cmp
shll
movhps
mov
sub
or
sub
inc
cmp
sbb
in
repnz
mov
stos
inc
sbb
fwait
sub
add
add
mov
rol
and
dec
lahf
mov
cmp
pop
add
inc
shlb
xor
les
mov
pop
sub
test
fwait
rcll
pop
sbb
pop
add
subb
mov
mov
shr
sbb
or
inc
fs
mov
cmovs
rorb
movsb
ss
fistl
loop
sbb
jmp
sahf
add
outsl
xchg
pop
xchg
mov
pop
dec
pushf
push
jbe
dec
inc
subl
xor
cmp
mov
fwait
fstl
scas
push
add
xor
daa
jg
mov
add
jg
daa
arpl
ffreep
mov
arpl
dec
and
adc
sub
xchg
scas
push
cmpsl
inc
inc
pop
imul
inc
jbe
mov
jnp,pn
out
adc
ret
xor
xor
add
pusha
adc
pushl
sbb
stos
sub
divl
orl
sbb
mov
shlb
fbstp
xor
cmp
daa
stos
push
add
ret
push
pop
xchg
mov
aas
ret
repz
or
rolb
mov
ret
inc
xchg
mov
add
push
das
push
andl
loop
push
inc
mov
ss
mov
addl
scas
push
stos
mov
and
or
test
es
cmp
out
sarl
add
mov
inc
or
inc
pop
push
adc
push
dec
stos
addl
sub
lock
out
iret
inc
dec
mov
add
lret
inc
pop
cmp
or
cmpsl
scas
dec
outsb
mov
jecxz
mov
outsl
inc
ja
xchg
cmp
imul
rol
rolb
inc
add
adc
mov
lret
fdivrs
mov
cmp
adc
inc
lods
in
xlat
popl
or
push
adc
mov
mov
sbb
lea
sub
adc
or
scas
out
aaa
mov
inc
pop
mov
and
inc
movsl
mov
scas
or
inc
fsubs
mov
outsl
scas
lock
jne
ja
comiss
adc
aaa
lods
inc
and
daa
jl
push
idivl
mov
cmp
rorl
sti
inc
mov
out
shlb
push
mov
outsb
push
jmp
mov
movsb
mov
mov
test
rolb
xor
inc
sbb
imul
sbbb
aaa
aaa
xchg
push
xlat
andl
inc
mov
or
mov
pop
push
inc
add
xchg
inc
inc
loope
inc
push
pop
arpl
push
or
sarl
cvtdq2ps
cmp
fwait
jae
shrl
decl
cmp
subb
adc
loop
out
sahf
sbb
inc
insb
aam
negl
movsl
push
pop
pop
scas
dec
mov
ja
pop
add
lds
xchg
sbb
and
pop
xor
fistpl
pop
hlt
inc
pop
inc
ret
fidivrs
scas
outsb
addr16
mov
jg
and
aad
mov
xchg
repz
orl
dec
repz
ret
xchg
test
arpl
inc
sub
lods
inc
stos
dec
imulb
jno
jnp
mov
aam
jae
dec
dec
imul
jg
xchg
nop
inc
call
cmp
sti
inc
sub
xchg
push
mov
xchg
add
add
jmp
mov
ret
jg
mov
mov
out
inc
rcll
movsl
pop
add
mov
lea
jbe
xchg
inc
xlat
xchg
adc
iret
imul
ret
cmp
or
sbb
cmp
dec
out
jecxz
or
cmp
movsl
xor
test
xchg
add
or
sub
addb
xlat
push
dec
ret
dec
or
lret
pop
adc
sahf
test
push
cmp
das
aaa
in
inc
movsb
push
inc
xor
dec
repz
fdivl
add
fisttps
pop
jne
pop
jg
mov
pop
fiadds
inc
bound
fs
and
daa
xor
ret
ss
pop
fadds
das
adc
xchg
daa
jecxz
mov
in
adc
outsb
pop
lahf
xchg
loopne
fistpl
inc
xor
add
add
add
or
loope
insb
movsb
arpl
sbb
or
repnz
mov
push
xor
nop
rolb
mov
fnstsw
push
and
jl
lahf
jb
pop
aaa
inc
pop
push
ss
jle
ss
push
jmp
outsl
ficoml
xor
shlb
jmp
ret
aaa
cmp
or
xor
sbbl
js
je
dec
nop
cmp
mov
inc
add
jmp
fst
inc
dec
ret
loopne
lcall
shlb
arpl
fldt
xor
scas
jae
jg
mov
inc
add
mov
filds
dec
aaa
push
pop
dec
fwait
mov
sar
sub
mov
test
mov
imul
leave
xlat
and
mov
popa
dec
xor
dec
push
sbb
or
jg
jl
xchg
cmp
pop
mov
add
dec
out
popa
aad
lock
jecxz
pop
lods
fsubrs
stos
pop
or
es
mov
jmp
pusha
rol
iret
mov
les
jecxz
repz
lods
jae
rorb
icebp
jo
lea
not
or
ret
dec
jmp
inc
or
ret
es
shll
shll
or
mov
aas
ss
pop
sbb
add
leave
aaa
sbbb
add
add
or
pop
rorb
ret
inc
xchg
lods
xchg
jbe
pop
or
sti
sbb
insb
and
outsl
jmp
adcl
fiaddl
rcll
mov
les
jecxz
out
dec
mov
adc
ja
cmp
add
fsubrs
add
pusha
int3
outsl
cmpsl
scas
jbe
and
lret
jmp
lods
inc
add
add
inc
add
xor
jg
pusha
adc
mov
push
adc
pop
mov
mov
xchg
inc
sti
rolb
cmp
rcrb
xor
int3
add
push
movsb
mov
push
xor
mov
test
mov
fsubp
adc
mov
fucomip
sbb
pop
mov
cmp
push
stos
push
pop
push
rcl
push
sti
cs
test
mov
ja
xlat
xor
fimull
dec
scas
das
mov
xorps
pop
mov
mov
xlat
sub
fidivl
jno
xchg
dec
arpl
js
xlat
jmp
js
xchg
mov
jae
adc
imul
xlat
imul
ss
ja
fwait
out
dec
stos
sarb
adc
push
pop
push
les
lret
jae
dec
xchg
cmpb
iret
and
dec
sub
mov
scas
push
add
inc
xchg
cmpsb
insl
mov
stos
xor
dec
mov
or
pop
scas
jae
pop
js
sbb
pop
xor
into
repnz
and
sub
xchg
xchg
inc
dec
sub
mov
addr16
pop
dec
in
arpl
stos
cmpsl
shrb
xchg
mov
sbb
adc
pop
ret
xchg
out
or
xor
mov
pop
pop
add
add
ret
adcl
xor
xor
add
inc
or
add
push
xchg
pop
dec
sbb
sub
les
call
xor
mov
cmp
das
xor
pop
sub
addr16
mov
xor
ret
scas
push
mov
or
push
call
fsubs
adc
je
pop
ss
aaa
test
sub
sti
inc
bound
xor
dec
xor
sub
push
xor
jbe
stos
scas
movl
icebp
hlt
pop
mov
les
pop
iret
push
push
jne
scas
cmpsl
repz
fiadds
jecxz
xchg
sbb
imul
jo
scas
jg
addr16
push
inc
call
pop
and
fmul
inc
iret
xor
outsb
fstpl
xchg
lcall
push
pop
and
ja
sub
inc
cs
pop
fisubrs
pop
xchg
add
xchg
icebp
and
rolb
popf
ret
aaa
fisubrl
loopne
mov
xchg
rcll
sbb
ja
or
loope
cmpsl
pop
xor
xchg
in
stos
lret
inc
inc
mov
movaps
cwtl
ret
dec
sbb
out
pop
or
add
rorb
jbe
dec
xor
in
jno
aas
xor
ret
add
mov
test
or
arpl
arpl
out
imul
mov
fbstp
lret
das
pop
mov
sbb
lret
jle
inc
mov
xor
xchg
ja
out
test
inc
jg
loopne
test
mov
ret
adc
inc
pop
and
out
xorb
cmp
xor
pusha
push
xchg
cmp
inc
add
dec
les
adcl
movsb
jecxz
inc
pop
sub
and
int
mov
or
andl
jne
btc
addl
cs
inc
mov
inc
insb
push
mov
or
xor
inc
addr16
jge
mov
xchg
ficoms
lahf
xlat
stos
add
aam
sahf
adc
xor
mov
fsts
jecxz
mov
imul
into
dec
out
dec
lret
xor
das
cmp
and
or
repz
scas
sbb
push
ds
push
ja
dec
mov
push
xchg
mov
push
je
pop
sub
inc
cmp
sarl
mov
push
or
scas
pop
or
ja
loope
add
mov
outsb
aam
lock
jecxz
pop
cmp
dec
pop
inc
pop
push
or
jnp
movsb
sbb
not
push
imul
clc
mov
inc
pop
iret
loop
stos
sbbb
mov
jbe
mov
xlat
mov
repz
pop
push
push
or
stos
sub
sahf
mov
ficoms
adc
test
push
cmpsl
jb
rclb
push
xchg
sub
xchg
inc
xchg
insl
push
mov
jb
test
jmp
stc
mov
xor
dec
fadds
or
add
or
mov
arpl
inc
bound
add
pop
xchg
push
push
xchg
pop
sub
into
in
mov
and
ret
jmp
pop
jnp
xchg
add
rorl
sbb
test
adc
lret
xchg
adc
jmp
add
adc
sbb
popl
sbb
add
push
je
data16
adc
ss
sub
sarl
push
imul
arpl
das
nop
and
mov
cmp
jno
mov
jecxz
lret
jnp
or
jecxz
test
pop
mov
imul
inc
filds
push
pop
inc
fisubs
scas
ret
add
jbe
sub
mov
cmpsl
jae
es
or
jne
jecxz
sbb
or
add
pusha
xor
sahf
mov
aaa
mov
sbbl
not
or
or
inc
and
dec
cmp
outsl
push
scas
mov
sti
rcll
test
sbb
or
sub
push
lock
sbb
xor
push
jmp
rcr
mov
push
push
mov
loopne
add
pop
lret
ret
sub
aad
aaa
lock
pop
repz
add
fdivs
push
dec
push
cs
push
orb
pop
popa
loope
outsl
inc
xchg
adc
fstp
or
lret
pop
fstpl
add
mov
outsl
pop
mov
rcl
pusha
imul
xor
inc
and
imul
sbb
push
sbb
jecxz
rol
dec
call
xchg
inc
jo
inc
adc
rcll
fwait
inc
fcoml
mov
fs
scas
lds
jo
iret
stos
jle
add
repnz
xor
cmp
dec
sbb
cmp
add
rorb
xchg
dec
nop
pusha
push
cltd
sbb
pop
mov
cmp
jae
test
aam
out
fisubrl
push
mov
cli
cmp
pop
insl
xlat
pop
jecxz
outsl
xor
xchg
ret
pop
repnz
add
dec
or
cmp
mov
inc
mov
es
nop
cmp
pusha
mov
ret
fistl
popa
insl
lahf
stos
ret
cmp
ja
push
add
repz
pop
mov
dec
or
or
js
je
adc
sbb
sub
adc
dec
add
cmpsb
dec
xor
arpl
mov
sbb
cmp
inc
ret
mov
dec
iret
orl
sbb
pop
jae
loope
adc
cmp
rolb
lea
ja
and
fstpt
jnp
aad
cmpsw
cmp
shufps
loopne
push
or
into
aas
shlb
or
inc
or
mov
jns
aaa
imul
xor
xchg
xchg
add
jg
cmpsb
dec
inc
ss
inc
rclb
insb
push
mov
jmp
mov
imul
pop
lods
inc
jmp
push
or
ret
pop
dec
lods
nop
fninit
or
test
dec
mov
adcb
cli
mov
adc
inc
movsb
sbb
or
mov
pop
and
inc
mov
aaa
sub
loopne
rolb
push
stos
adcl
in
pop
aaa
dec
mov
cmp
stos
or
xor
subb
aaa
xor
fmuls
and
jbe
inc
loop
and
xor
daa
xchg
mov
shl
mov
push
inc
aas
scas
cmp
lods
ret
mov
jbe
sub
inc
xchg
mov
adc
aad
inc
mov
inc
pop
xchg
bound
loopne
pop
filds
adc
jmp
aaa
adc
and
dec
pop
cs
outsl
sub
push
mov
rolb
sbb
lods
or
push
or
lods
pop
mov
pop
and
inc
mov
jbe
jmp
mov
sbb
cmp
aad
push
and
cmc
lret
jae
addl
dec
cmp
sbb
cmp
sub
sub
inc
pop
mov
inc
xchg
lcall
out
out
cmpsl
daa
loopne
das
das
sub
or
mov
hlt
outsl
rcrl
pop
push
cmp
pop
sti
into
dec
rorb
daa
mov
insb
add
insb
xor
xchg
pop
psrad
mov
les
out
out
push
ja
push
stos
pop
or
push
mov
xor
add
mov
push
movsl
jae
stos
outsl
mov
and
ret
aam
test
pop
imul
fisttps
dec
fdivrs
sbb
ja
stos
add
xchg
add
sbb
loop
mov
fwait
out
dec
cmp
ret
pop
jnp
bound
lods
inc
xor
mov
cmp
fwait
pop
mov
push
or
fwait
jp
or
les
or
in
cvtdq2ps
mov
shl
add
les
pop
pop
push
gs
inc
fistps
nop
inc
sbb
fsubs
das
or
pop
dec
adc
cmc
test
push
arpl
add
xorb
xor
jg
sub
dec
and
adc
test
popf
mov
mov
inc
push
cs
sub
jecxz
scas
xchg
dec
or
dec
fildll
push
jo
pop
jecxz
mov
xchg
fsubrs
cmp
mov
cmp
adc
fsubrl
bound
sti
and
inc
xlat
push
outsb
orl
and
out
add
push
dec
and
push
and
mov
xor
sub
push
jbe
arpl
inc
dec
adc
ret
and
mov
cmp
mov
cmpsl
mov
dec
dec
cmp
sbb
sub
ret
sub
daa
add
xchg
jl
add
ja
andb
dec
out
and
mov
add
ret
fistps
adc
icebp
push
adc
pop
data16
scas
jg
pusha
adc
cli
pop
arpl
ret
jl
aam
mov
out
orl
fisttpl
rorb
outsl
xor
stc
cmpsb
fdivs
jecxz
mov
xchg
xor
cmpl
ss
movsl
adc
xor
fsubrs
fwait
cmc
push
arpl
adc
arpl
outsb
popa
aaa
push
jecxz
adc
add
out
xor
and
inc
movsl
or
arpl
jmp
ja
fcmovnbe
cmpsl
mov
pop
push
pop
lock
pop
mov
dec
movsl
mov
xchg
mov
push
das
pop
mov
mov
xchg
dec
push
sbb
add
mov
xchg
loopne
jmp
leave
lods
shll
jbe
aas
cmp
inc
jl
and
or
inc
sbb
scas
test
mov
cmp
push
inc
call
dec
mov
outsl
jno,pn
sub
dec
lcall
aaa
mov
les
add
addr16
lods
xchg
push
dec
outsb
repz
inc
and
add
out
mov
arpl
mov
mov
fidivrl
ffreep
dec
dec
imul
mov
sub
push
sbb
mov
inc
xchg
sbb
dec
arpl
inc
pop
sub
arpl
mov
fisubl
and
cmovge
add
ret
aas
adc
je
mov
and
sbbl
cmpsl
mov
pop
lahf
xor
dec
ret
out
dec
adc
pop
cmp
cmpsl
loopw
sbb
dec
jl
jge
cmpsl
cmp
insb
mov
fs
shrl
lock
iret
xchg
lcall
mov
shl
mov
cmp
iret
inc
mov
sbb
aam
arpl
fdivs
xor
scas
ss
rorl
pop
shrl
dec
or
insl
and
movsb
roll
xor
out
and
mov
sbb
pop
mov
pop
push
jecxz
adc
pop
add
or
lahf
fildl
mov
imul
ret
imul
or
arpl
mov
test
mov
outsb
adc
push
inc
pop
rolb
mov
xchg
aas
ret
pop
testl
ja
jecxz
push
hlt
subb
cmpsb
call
jno
in
das
inc
sbb
aad
pop
inc
add
pop
fimuls
loope
addr16
inc
adc
nop
bound
inc
jl
adc
inc
push
xchg
dec
adc
es
adc
mov
jo
sbb
shrl
imul
lahf
scas
je
rolb
pop
lret
mov
adc
sti
repz
outsb
add
mov
cmpsl
hlt
mov
dec
rolb
jecxz
mov
loopne
or
incl
mov
xor
aad
sahf
mov
push
mov
faddl
mov
xchg
and
iret
ljmp
push
filds
dec
pusha
jnp
test
pop
jl
sub
fwait
ss
mov
xchg
sbb
pop
jmp
roll
repz
test
dec
sbb
ds
aam
push
sub
mov
adc
repnz
subl
lods
rcll
cmpsb
out
xlat
pusha
mov
push
lahf
push
sbb
inc
jmp
pop
xor
push
xchg
mov
cli
lahf
sub
sbb
dec
mov
jle
sbb
out
ss
and
addl
cs
and
imul
push
lods
inc
aaa
inc
dec
push
pop
pop
imul
mov
xchg
xor
sub
testl
test
mov
rorb
rol
mov
shlb
add
mov
jg
jmp
or
inc
sub
das
jg
xor
mov
inc
repz
movsb
test
push
add
bound
mov
ret
cmp
or
push
outsl
mov
loopne
inc
jecxz
sub
test
cmpsb
pop
jnp
push
cmpsl
inc
mov
inc
notl
or
mov
loop
mov
mov
and
pop
ja
xchg
scas
pop
xor
es
cmp
lods
arpl
jecxz
test
inc
jg
ja
sub
and
sub
or
ret
inc
pop
mov
mov
out
add
fnstsw
scas
jbe
sub
inc
xchg
cmovno
ss
push
das
pop
dec
aam
nop
mov
lahf
rcr
pusha
xchg
cmpsl
je
adc
cli
rcrb
push
inc
fisubrl
sub
jbe
mov
add
dec
sarb
mov
in
arpl
pop
pushl
inc
jae
jo
mov
add
pop
lds
lods
js
dec
dec
inc
arpl
loope
out
lock
mov
inc
pop
pop
adc
jno
push
sbb
push
cmp
mov
pop
add
ret
dec
sub
cmp
arpl
aaa
lock
mov
gs
roll
andl
mov
inc
add
dec
inc
fwait
outsl
add
mov
dec
aas
out
cmp
out
jb
inc
adc
arpl
sub
movsb
mov
pop
jecxz
xor
ljmp
xchg
push
dec
pop
iret
testl
bound
mov
adc
mov
sub
push
mov
jp
enter
mov
xchg
aaa
mov
pop
push
testl
inc
sbb
aaa
je
cmp
aaa
shll
out
inc
pop
shlb
xor
dec
push
inc
dec
pop
hlt
jno
jecxz
add
lret
mov
adc
cs
add
cmpsl
xchg
ds
adc
scas
pop
inc
jecxz
inc
pop
pop
aaa
xorl
scas
outsl
fistpl
add
mov
mov
fistpll
or
ljmp
mov
mov
jmp
movsl
shll
mov
cmovbe
mov
mov
js
prefetch
or
pop
adc
orl
pop
xlat
fwait
es
jnp
imul
dec
cmp
adc
cmp
mov
sub
xor
js
add
pop
push
pop
pop
sbb
movsl
fisttpl
lods
xor
pop
inc
aas
fldt
pop
mov
lahf
iret
sbb
or
cwtl
cmp
jne
ds
inc
pop
push
ljmp
sub
adc
ret
add
add
adc
and
push
pop
mov
inc
inc
nop
jo
xlat
inc
push
mov
dec
mov
jg
test
fimull
jp
and
ret
shrb
push
pop
jo
popf
outsl
jnp
inc
rolb
fldl
or
mov
inc
imul
and
sbb
daa
pop
mov
faddp
popa
wrmsr
dec
push
insb
movsb
mov
fldt
push
dec
mov
sub
push
sbb
mov
adc
imul
push
ret
mov
and
or
xor
int
sub
and
inc
jo
pop
adc
es
sbb
test
mov
sbb
push
push
shll
add
xchg
add
or
inc
or
pusha
inc
pop
jg
push
stos
pop
bswap
addr16
idivl
pop
shlb
out
cmp
pop
or
or
popf
jae
add
jg
sbb
inc
push
loop
mov
add
and
rcll
jne
xchg
pop
sbb
adc
jnp
sub
or
jbe
jmp
mov
cmpsl
shlb
rorb
lahf
mov
cmp
cltd
mov
dec
add
jbe
jecxz
pusha
aaa
jno
xchg
inc
jp
fildll
or
aas
aam
push
fistl
arpl
mov
sbb
clc
pop
out
jae
xchg
jb
mov
fimuls
sub
mov
push
cmp
mov
insl
mov
out
push
mov
cmp
and
test
test
and
pop
or
xchg
sahf
mov
lcall
pop
cmp
aaa
add
sti
mov
out
mov
add
sub
loopne
out
aas
xchg
jns
add
out
addps
imul
fwait
fwait
divb
sbb
push
mov
movsb
inc
lods
mov
xlat
icebp
and
fcomps
imul
lods
fcoms
cmpsl
sbb
mov
cmp
jae
bound
gs
adc
xor
sub
pop
sub
or
je
arpl
outsl
push
xor
outsb
jg
jne,pn
shlb
and
sbb
mov
js
pop
and
sbb
cmp
repz
bound
push
mov
aaa
xchg
pop
sbb
inc
stos
test
iret
add
movl
or
mov
xchg
shlb
and
pop
or
scas
fldenv
arpl
rclb
ss
pop
pop
cmp
pop
add
xor
fs
sub
aaa
daa
pop
mov
xor
add
push
mov
ret
dec
mov
sarl
imul
add
cmp
mov
fildl
iret
xor
xlat
mov
iret
stos
das
cs
xlat
sbb
pop
and
fistps
sub
clc
pop
dec
shll
imul
xlat
jo
inc
movsl
daa
jnp
aad
jo
fbld
outsl
pop
adc
mov
outsb
adc
or
mov
lock
pop
das
push
mov
rol
test
imul
push
mov
scas
lea
pop
scas
xchg
fmuls
dec
sub
adc
mov
fsubrs
add
mov
lods
dec
mov
mov
adc
mov
sub
loop
pop
andl
and
or
dec
cmp
cmc
push
cmp
aas
icebp
test
jmp
mov
sub
cltd
push
xchg
cmpw
out
movsl
and
ret
arpl
mov
repz
out
ja
movsb
push
xlat
push
imul
fbld
inc
adc
sbbl
dec
xchg
es
call
xchg
pop
insb
add
inc
dec
or
xchg
sub
ret
push
adc
inc
pop
push
orl
xchg
inc
or
mov
pushl
adc
mov
jbe
or
xchg
je
pop
mov
mov
ja
push
dec
push
cmp
push
loope,pt
pop
xchg
inc
xor
pusha
mov
and
lret
mov
movntq
inc
sub
inc
push
and
lea
imul
mov
fstpt
cwtl
adc
or
xor
cmp
out
fistpl
adc
cmpsb
fidivrl
cmp
cmp
sbb
add
in
mov
adc
jns
addl
lahf
sub
lods
pop
sbb
ret
ja
add
or
or
fisttpl
add
addr16
add
fwait
dec
mov
add
test
mov
inc
push
dec
imul
jnp
popf
push
mov
icebp
andb
pop
pop
inc
mov
adc
test
lods
cmp
xchg
add
pop
iret
aas
sbb
inc
das
cmp
mov
add
inc
inc
jp
test
push
adc
add
or
aaa
mov
xchg
outsb
pop
cmpsl
add
fwait
call
inc
lods
sarb
add
or
rorb
and
cmp
stos
and
arpl
mov
cmp
mov
mov
ss
mov
scas
subl
testb
mov
adcb
arpl
fldl
scas
adc
dec
cmpsl
pop
push
in
inc
xor
mov
aaa
jg
or
sub
mov
mov
ss
mov
xor
pop
xchg
pop
test
rcpps
or
mov
add
mov
dec
aas
fbld
pusha
sbb
sub
cmp
roll
push
xor
push
jno
popa
xchg
push
sub
mov
and
add
pop
aas
rolb
arpl
lahf
cmp
fstl
repz
adc
mov
sarb
and
or
sub
fwait
or
add
cmp
or
pop
arpl
pop
pop
in
movsb
cs
xchg
cli
sub
movsl
shlb
fistpll
inc
add
mov
xor
mov
adc
cmp
xchg
lods
mov
jnp
ljmp
mov
aam
inc
jo
mov
arpl
xor
mov
jnp
adc
cmp
movsl
or
mov
imul
mov
pop
pop
mov
sbb
repz
movsl
push
rclb
push
arpl
das
hlt
je
xor
scas
push
inc
call
xor
xorl
adc
shlb
and
pop
xlat
adcl
add
xor
dec
xlat
imul
dec
jg
or
and
jbe
xor
pop
pop
out
addl
imul
scas
inc
fistpll
or
or
inc
inc
pop
outsl
daa
and
adc
mov
scas
insb
loopne
pop
pop
adc
filds
pop
push
jbe
rcpps
pop
sub
rcrl
mov
jmp
test
loop
ret
negl
xor
call
stc
mov
and
or
bound
sbb
xor
aam
daa
and
fucomp
aaa
inc
iret
mov
xchg
add
mov
movsl
add
mov
rcrl
push
nop
mov
xor
add
cmp
jae
bound
jp
sbb
xchg
pop
inc
inc
mov
sub
sbb
mov
xchg
fwait
lret
xchg
jbe
dec
pop
fsubrs
or
mov
ror
dec
pop
imul
das
mov
pop
negl
inc
loope
mov
xchg
cs
cwtl
mov
push
ret
sbb
jns
fldl
sub
mov
scas
pop
adc
cmp
ss
dec
or
mov
imul
cmpxchg
push
stos
mov
and
stos
sub
adc
dec
xor
inc
jbe
loope
push
arpl
ret
mov
pop
xchg
mov
pop
les
cmpsb
fstpt
xor
mov
xor
pushf
xchg
inc
mov
scas
ja
sub
add
rolb
stos
mov
pop
mov
iret
adc
adc
mov
or
mov
lahf
pop
mov
nopl
inc
imul
sub
jg
add
add
jmp
les
lret
aas
lods
inc
adc
orl
test
pop
push
ss
lea
inc
add
add
ja
xchg
xlat
sahf
add
add
pop
xor
xlat
pop
movsb
cmpsl
sahf
push
fwait
pop
test
mov
mov
ss
and
mov
jecxz
mov
dec
sbb
ret
push
fsubrs
mov
arpl
shrb
dec
cmp
add
ret
iret
test
pusha
arpl
push
xchg
daa
pusha
add
cmpsb
movsl
pop
inc
mov
popa
xchg
xor
or
aad
ljmp
in
nop
fwait
jecxz
sbb
xchg
adc
xor
pop
int
mov
adc
push
push
sub
mov
lret
les
adc
cmp
mov
xor
jmp
imul
shr
ret
pop
inc
imul
and
mov
sbbb
es
or
mov
stos
aaa
push
nop
jb
ret
pop
mov
jg
push
adc
sti
cmpsl
add
imul
ret
dec
xor
cmpsl
iret
ret
cmp
xchg
fidivs
divl
iret
push
sti
cmp
mov
dec
sub
mov
mov
push
pop
inc
mov
add
arpl
mov
and
imul
or
fists
pusha
add
fwait
repz
clc
aam
jo
mov
daa
mov
sbb
addr16
xor
mov
fcmovnbe
test
and
add
ret
inc
inc
mov
arpl
xlat
pop
je
lret
jnp
fucomi
xchg
test
sbb
leave
xchg
add
push
push
lret
ret
and
imul
sbb
lret
and
xor
lods
cltd
push
jg
jae
or
xchg
cmc
push
sub
xchg
ss
mov
hlt
add
out
andb
add
aaa
ja
sbb
ret
out
pop
cmp
js
cmpsl
sarl
add
mov
adc
jbe
testl
fcmovnb
xchg
jae
mov
or
rol
push
dec
outsl
div
xchg
sbb
sahf
inc
mov
cmp
mov
stos
pusha
scas
xchg
and
or
xchg
and
xchg
out
xchg
loop
loopne
inc
mov
inc
arpl
movsl
das
pop
incl
sti
sti
mov
xor
iret
xor
inc
bound
pop
mov
and
and
out
aaa
xor
dec
arpl
scas
sbb
mov
shlb
lock
scas
xor
out
outsb
push
add
or
test
jge
das
mov
mov
mov
push
leave
mov
inc
mov
mov
add
and
out
shlb
and
push
ret
cltd
loop
stos
scas
iret
pop
push
popa
push
imul
mov
add
movsl
pop
stos
test
daa
ss
adc
icebp
ss
mov
sbb
push
and
or
add
outsl
jg
or
movsb
enter
sub
push
or
xchg
cwtl
push
imul
sti
iret
push
ds
shrl
loope
xchg
addr16
pop
mov
rcrb
mov
lcall
pop
and
xor
inc
inc
push
ds
neg
aad
push
pop
cltd
sbb
and
stos
sti
jo
inc
jmp
pop
xchg
pop
imul
imul
stos
outsl
xchg
ret
shl
cmpsb
inc
iret
addr16
adc
call
mov
xchg
arpl
imul
fcmovb
xlat
pop
sub
or
and
ret
sub
xchg
pop
mov
mov
lea
dec
filds
sub
push
pop
inc
xchg
sub
xchg
loop
adc
repz
dec
mov
jno
pop
aaa
jnp
sub
dec
ja
test
dec
mov
and
jecxz
sbb
mov
xor
jo
je
cmovg
jecxz
daa
dec
jecxz
push
cmp
cmpsl
pop
repz
xchg
mov
push
test
fwait
sbbl
pop
sbb
shrb
iret
cmpsl
inc
push
or
negl
lcall
mov
adc
adc
jp
outsb
sub
jnp
mov
xor
cmp
mov
ret
xor
or
cmc
mov
xchg
mov
jp
rolb
jecxz
lahf
mov
outsl
add
or
inc
arpl
insl
bound
mov
xchg
jg
adc
xchg
jmp
dec
or
loopne
sbb
pop
push
js
adc
ret
fdivs
xchg
lsl
xchg
jecxz
add
xor
inc
xlat
and
mov
popf
stos
mov
das
push
jl
in
pop
pop
shr
add
xor
adcl
rcrb
xchg
or
imul
jbe
out
push
push
gs
mov
iret
das
ljmp
xchg
movsb
stc
inc
add
fisttps
rcl
arpl
pop
add
pop
mov
sub
mov
out
add
sbb
les
xor
movsb
shlb
xor
mov
cmp
or
mov
or
jecxz
les
sarl
or
aaa
stos
cmp
testl
call
stos
push
sbb
mov
out
sbb
inc
imul
push
jae
inc
ds
stos
iret
xchg
inc
scas
cmp
push
mov
outsl
aaa
inc
jno
sub
arpl
notl
mov
addl
mov
iret
aaa
cwtl
les
fiadds
int
jb
sti
pop
xor
filds
cs
aaa
jecxz
pop
mov
fidivs
sbb
inc
and
loop
shll
dec
lock
lahf
ret
xchg
push
or
xchg
jnp
push
push
pop
les
push
inc
iret
dec
or
outsl
lret
jl
sbb
xchg
dec
bound
movl
xchg
mov
mov
les
dec
mov
mov
cmpl
adc
adc
dec
adc
xlat
enter
fwait
and
out
adc
cmpsl
or
scas
es
out
xor
pop
xor
pop
sub
and
mov
imul
lock
pop
cmp
xor
and
mov
adc
mov
mov
movb
jae
push
arpl
mov
cmpsl
cmp
fadds
data16
mov
mov
shrb
iret
inc
mov
popa
subb
cs
or
mov
mov
or
jecxz
bound
push
ret
mov
outsl
adc
sbb
pop
pop
dec
push
and
push
cmp
dec
and
jecxz
mov
cmp
lahf
and
sbb
in
push
roll
cmp
adc
mov
les
mov
or
push
imul
das
cmp
movsb
loop
pop
jo
insl
sub
mov
dec
xchg
dec
xor
pop
xor
sub
inc
pop
xor
jg
shlb
xchg
xchg
xchg
dec
js
inc
out
es
push
rep
or
sub
or
dec
stc
cs
jo
lret
inc
add
leave
jb
mov
mov
sbb
mov
mov
inc
dec
negl
fsubrl
mov
outsl
xchg
outsl
cmp
lcall
scas
inc
out
sub
xlat
sub
sbb
add
mov
rclb
jnp
mov
adc
mov
dec
mov
or
addb
mov
add
and
aaa
insb
lods
sbb
pop
clc
or
outsb
lds
mov
ret
xchg
xchg
pop
fisttpl
pop
imul
flds
call
imul
cmp
cmp
adc
push
fiaddl
cmpsb
cmpsl
fstpt
cmpsl
fists
xchg
aaa
jle
push
push
icebp
das
inc
dec
sub
sub
mov
outsb
xor
dec
sbb
push
push
add
sub
pop
out
and
xor
rcr
ss
mov
pop
imul
in
xchg
add
lods
xchg
cmc
mov
inc
pminub
adc
push
call
cmp
sbb
mov
jecxz
repz
test
sub
sbb
and
out
add
or
daa
dec
jg
jne
ret
jnp
mov
jecxz
arpl
sarl
sbb
xor
lahf
loopne
mov
lea
or
mov
sbb
nop
lock
push
fwait
add
sti
pop
cmpsl
movsl
xchg
pop
andb
add
add
sbb
or
pop
mov
xor
aam
sub
xchg
lcall
push
jo,pt
inc
push
ret
shlb
mov
loope
sbb
pop
je
test
fwait
repz
xor
ja
repz
fwait
dec
mov
adc
sub
in
jp
add
xor
lods
ret
pop
xchg
jno
cmc
popl
subl
jae
outsb
movsb
push
lahf
mov
mov
mov
rol
daa
adc
adc
lods
add
lahf
arpl
sbbb
cmpsl
test
data16
or
adc
add
inc
aam
sbbb
rorl
shrb
jg
and
scas
adc
cmpsl
aaa
insl
lds
inc
xor
mov
xchg
or
adc
mov
jecxz
push
loope
aam
aaa
mov
js
dec
add
adc
xchg
push
adcl
xor
test
add
pop
xchg
scas
cli
subb
daa
xor
xlat
jg
sub
jne
push
add
cmpsb
scas
test
push
mov
sbb
adc
loop
mov
jecxz
xchg
hlt
adc
sub
xor
mov
adc
aaa
inc
cmp
pop
add
daa
xchg
push
insb
add
inc
or
adc
gs
xor
cmp
gs
sub
jbe
movsl
inc
shrb
aas
pop
add
cmp
mov
movl
or
sti
cwtl
jl
movsl
lahf
aas
bound
lret
dec
outsl
test
ffree
in
jmp
sti
in
adc
adc
jbe
aaa
and
stos
jecxz
test
pop
cs
push
mov
data16
mov
cmp
sbb
mov
nop
push
int
test
addr16
push
and
in
cmp
push
orl
shll
push
leave
sub
mov
add
inc
adc
pop
add
dec
insl
lret
xor
outsb
adc
add
jg
and
je
xor
jae
mov
sbb
inc
inc
xlat
ret
stos
fildll
jg
pop
inc
pusha
shrl
inc
push
mov
xor
sub
inc
cltd
imul
add
test
xchg
xor
xlat
xorl
mov
loope
mov
xchg
stos
rcrl
sub
ds
es
pop
cmp
adc
sub
push
insl
or
inc
or
pop
loop
mov
addl
je
aaa
out
or
adc
mov
dec
dec
out
inc
popa
notl
fdivrs
push
out
xor
xchg
adc
rclb
mov
arpl
pop
pusha
stos
stos
push
mov
sti
ja
ljmp
push
push
mov
add
nop
push
mov
xchg
scas
sbb
out
jo
mov
jl
test
in
and
push
daa
cmpsl
aaa
dec
or
or
daa
inc
rol
and
fstl
movsb
add
loopne
imul
sub
bound
push
in
pop
jae
ljmp
add
jmp
sbb
sbb
out
xchg
xchg
adc
inc
cmp
add
pop
pop
movb
or
jbe
arpl
mov
push
popa
or
test
rclb
xchg
or
sbb
xchg
mov
and
add
push
fwait
dec
mov
jae
mov
cmpsb
mov
cmpsb
dec
or
pop
les
and
outsl
popf
and
cmp
xrelease
jmp
add
lods
xchg
jnp
adc
enter
inc
inc
rolb
mov
mov
mov
lahf
pop
mov
imul
cmc
lods
jmp
jae
out
push
inc
sub
imul
movsb
subl
lret
insl
jg
mov
add
add
xor
sbb
xchg
xlat
inc
mov
dec
add
repz
pop
or
or
aaa
xor
adc
cvtpi2ps
sub
and
mov
rclb
lcall
ret
mov
xchg
xor
add
mov
dec
xchg
mov
add
jmp
adc
cmp
dec
inc
sub
xchg
push
cmp
add
push
sub
xchg
les
xor
fs
jmp
cmp
rorb
loope
xor
cmpsb
mov
adc
aaa
xchg
shrb
and
and
sub
mov
loope
fstpt
mov
sbb
nop
mov
push
pop
mov
sub
cmpsl
pop
pop
ss
mov
inc
daa
pusha
xchg
and
xlat
shrb
xor
dec
cmp
daa
sbb
rcrl
push
imul
cmp
push
roll
imul
mov
fildll
mov
xchg
jmp
push
and
outsl
daa
fisubrs
sti
xor
fiaddl
mov
addr16
subb
cltd
test
xlat
mov
repz
lds
adc
xchg
xor
pop
xchg
imul
and
cmp
add
movsb
jo
lcall
jg
dec
sbb
push
xlat
stos
xor
out
fwait
ret
mov
in
mov
sbb
mov
sbb
and
lea
inc
mov
mov
lea
inc
cmpl
jbe
xchg
fimull
push
sbb
sbb
test
jle
sbb
andl
add
sub
mov
inc
pop
cmp
push
rorl
dec
stos
mov
iret
inc
imul
push
pop
mov
cmp
add
jmp
add
mov
sbb
pop
mov
dec
sbb
xor
repz
xchg
inc
ret
ret
mov
xor
pop
and
add
scas
or
outsb
mov
inc
and
mov
pop
and
cmpsl
inc
inc
mov
gs
ja
adcb
jmp
mov
in
xor
ficoms
push
push
stos
dec
lahf
adcb
testb
fistpl
in
xchg
push
popa
adc
mov
cmpsl
outsl
scas
test
loop
lret
pop
fidivl
stos
cmp
add
divb
bound
mov
aad
sub
das
pushl
ss
es
jmp
cmp
fisubrl
xorl
stos
xchg
push
mov
mov
adc
lock
push
ljmp
ss
out
lret
imul
and
pop
stos
or
mov
sub
shll
je
dec
mov
sbb
mov
pop
jnp
lret
push
es
sub
jecxz
enter
repz
dec
xor
out
push
xchg
daa
inc
sbbl
xchg
mov
xor
ljmp
mov
dec
pop
rolb
xor
xchg
pop
dec
outsb
ss
xchg
and
pop
sub
js
cmp
outsl
lret
push
addr16
push
xor
pop
out
movsl
xchg
push
push
ljmp
test
and
pop
sbb
getsec
pop
pusha
push
ficomps
sub
xchg
pop
and
dec
pop
outsl
addl
cmpsl
lret
addb
xchg
imul
les
fsubrs
arpl
pop
xchg
push
and
aas
push
or
xor
cwtl
push
in
pop
cmp
xor
enter
cli
jp
adc
iret
test
bound
jae
sbb
test
pop
les
push
cmp
pop
ljmp
icebp
divl
fstpt
sub
bound
or
fists
icebp
mov
aas
repz
ret
push
and
push
pop
popl
imul
shrl
sbb
mov
adcb
jno
andl
inc
setae
stos
stos
push
js
ret
mov
inc
and
stos
add
add
xchg
shrb
sub
pusha
xchg
ret
mov
fcmovne
push
sbb
out
fwait
and
jo
out
sbb
add
xor
mov
inc
or
sysenter
fwait
rclb
rcrb
mov
add
andl
and
aaa
loopne
loope
add
push
mov
push
daa
xor
movsb
push
cmp
xor
inc
dec
stos
pop
pop
adc
push
addb
dec
xchg
test
dec
mov
ficoml
pop
mov
sbb
ss
jbe
pop
lods
push
push
push
mov
pop
pop
xor
or
ja
push
outsb
sbb
lea
sahf
xchg
inc
cwtl
jl
test
inc
xlat
inc
mov
push
xlat
sbb
stos
jae
pop
leave
add
inc
xlat
jle
mov
repnz
add
icebp
sub
mov
aam
inc
out
mov
mov
out
xchg
nop
cmp
movsb
add
jo
test
inc
xchg
mov
lcall
andl
lret
mov
rcrb
mov
inc
iret
push
scas
mov
pop
cs
imul
push
jne
push
sbbl
or
inc
pop
daa
fisttps
xor
inc
pop
xchg
in
add
xor
nop
cs
mov
pop
xlat
fwait
sbb
cmpsb
hlt
xor
cmpsl
jo
bound
jg
test
jp
mov
lods
inc
fwait
das
and
loop
xchg
lret
xchg
addb
inc
stos
es
ffreep
shlb
or
mov
outsl
mov
and
ret
out
inc
dec
jecxz
imul
jbe
fwait
cmp
mov
je
stos
mov
shlb
out
outsl
cmpsl
mov
cmpsl
inc
pop
sti
add
mov
es
push
sub
imul
mov
outsl
cmp
xchg
bound
or
loop
sysenter
addr16
push
shlb
xchg
jg
ja
sub
inc
es
loop
sti
outsl
mov
adc
pop
test
imul
and
mov
das
adc
rcrb
sub
in
shrb
fcomi
pop
pop
pop
lret
push
push
fidivl
imull
das
movsl
jne
pmaxsw
dec
and
pop
movsb
adc
js
ficomps
bound
mov
in
movsb
mov
ret
cmp
adc
sub
shrb
das
adc
test
or
jne
or
shrb
aaa
test
and
adc
rol
mov
dec
mov
lret
xchg
xor
addr16
pop
adc
inc
and
push
sbb
mov
adc
movl
mov
addr16
dec
popa
int3
push
stos
or
xlat
mov
inc
push
jb
xor
xchg
dec
ret
mov
mov
ljmp
aaa
cmp
push
or
rcll
iret
xchg
pop
sub
lods
jp
inc
ds
mov
cmp
lahf
call
push
jmp
addb
sbb
inc
scas
inc
and
in
dec
arpl
mov
es
push
fwait
pop
or
fbstp
or
inc
xchg
pop
ret
aas
notl
aaa
daa
mov
pop
pop
out
sub
mov
inc
rcrb
mov
jl
jnp
arpl
adc
xor
mov
sarb
in
js
or
inc
test
jnp
dec
add
xchg
fidivs
aas
mov
mov
pop
push
addb
mov
mov
dec
xor
movsl
sbb
js
pusha
or
cld
mov
sbb
xchg
xor
mov
push
xchg
pop
pusha
dec
mov
pop
fildl
mov
daa
push
insl
psrld
pmaxub
movsl
dec
arpl
fildl
repnz
cmpsl
cmpsl
inc
aas
sub
inc
cmp
push
adc
xchg
aaa
loopne
dec
sub
mov
add
lret
add
pop
xor
pop
adc
sub
stos
push
pop
fs
lea
out
add
mov
jae
dec
mov
shll
sub
bndstx
jmp
xchg
gs
cs
sbb
xchg
cli
add
pop
aas
pop
cmp
push
js
xlat
sbb
test
cmpsb
pop
shrb
xor
or
xor
sbb
mov
and
add
sbb
xor
add
pop
inc
adc
lret
out
xchg
mov
pop
ret
sbb
pop
mov
insl
aaa
xor
jecxz
adc
fisubl
dec
insb
pop
or
pop
and
out
dec
sbb
mov
shlb
mov
pop
test
fisubl
mov
lcall
pop
xor
addl
mov
inc
cmp
jecxz
and
es
mov
insl
cmp
cmpsl
inc
pop
aam
cmpsl
repz
repz
adc
loope
xlat
sub
cwtl
sbb
pop
and
inc
negl
ja
push
mov
out
push
cmp
fnstsw
mov
bound
pop
pop
add
push
rcrb
cmpsl
rcrl
test
mov
jnp
mov
rol
inc
adc
stos
and
adc
stos
inc
pop
mov
and
jb
mov
pop
add
pop
or
outsl
mov
mov
xchg
jbe
mov
notl
adc
inc
xor
push
arpl
ret
mov
lahf
sub
ja
cmp
inc
mov
mov
push
test
daa
cmp
movsb
or
xor
and
push
push
sub
arpl
mov
mov
xchg
jmp
ja
movsb
or
jmp
dec
jp
sub
mov
pop
pop
das
ret
xchg
push
pop
fadds
lods
jecxz
js
imul
dec
sbb
repz
push
bound
sub
mov
cmc
mov
inc
imul
mov
stos
xchg
mov
aaa
add
ret
push
push
inc
imul
xlat
imul
ret
movsl
out
xorl
mov
inc
popa
sub
pop
mov
test
aaa
add
es
inc
mov
push
cmp
inc
inc
and
jecxz
and
xchg
js
shll
subl
or
fadds
and
ret
decl
out
aaa
inc
sub
das
mov
sbb
add
mov
sbb
stos
insb
pop
aaa
ret
inc
sbb
fsubrs
push
imul
xlat
jo
add
sub
jo
pop
lret
jb
mov
neg
pop
pop
addr16
lods
adc
inc
shll
pop
stos
jecxz
test
inc
loopne
cmp
xchg
inc
ja
dec
mov
push
add
sbb
fildll
pop
out
ds
sbb
or
lret
popa
daa
xchg
mov
mull
inc
loopne
faddp
xchg
loop
pop
repz
mov
lock
fsubrl
push
ja
xlat
pop
pop
xorb
mov
jne
movsb
addr16
jg
mov
dec
sbbl
outsb
inc
inc
movsb
or
dec
js
mov
repz
mov
pop
sbb
jg
cmp
and
xor
lock
xor
imul
mov
in
xor
xor
outsb
adc
add
arpl
xor
fistps
arpl
ffree
lds
pop
jnp
add
mov
xor
mov
mov
lret
out
ret
xor
inc
sub
mov
arpl
dec
adc
add
fisubrl
push
adcl
mov
pop
frstor
stos
sub
mov
ljmp
mov
bound
xchg
es
xchg
mov
fdivs
lahf
cmpsb
nop
faddl
sbb
inc
sti
out
pop
imul
cmp
rcrb
pop
pop
mov
ds
stos
mov
inc
xchg
sbb
jno
pusha
jg
movsb
popa
aad
xor
pop
push
push
clc
ret
sub
fwait
daa
test
bound
mov
test
ds
xor
sarb
jne
pop
inc
push
test
arpl
arpl
or
mov
data16
jl
arpl
sub
shlb
push
daa
hlt
and
sbb
push
ljmp
lcall
sub
fstl
pop
movsl
pop
mov
inc
sub
mov
push
mov
jnp
popa
xchg
xor
mov
and
mov
push
jecxz
push
pusha
adc
cmp
inc
adc
or
or
aas
push
popa
aaa
movsl
add
and
jb
add
dec
test
or
jb
outsb
or
aad
fcmovnbe
or
jae
js
movsb
roll
cmp
outsl
or
add
mov
and
scas
mov
add
push
xor
dec
lret
popa
out
or
or
cmpl
jo,pt
pop
dec
mov
sub
inc
xchg
pop
ss
pop
inc
pusha
mov
enter
cmp
jle
xchg
mov
mov
sbbb
repz
cmp
sbb
add
xor
or
inc
stos
mov
sbb
sub
pop
inc
dec
fwait
or
aaa
xor
pop
mov
ja
mov
and
jns
push
push
repz
xor
or
add
or
movsl
inc
mov
sbb
fs
mov
xor
pop
pop
lods
rcrb
mov
inc
lcall
mov
add
mov
and
ja
adc
outsl
jae
dec
cmp
push
mov
adc
cmc
mov
pop
cmpsl
insl
xchg
ja
add
adc
mov
test
daa
xor
mov
sub
test
push
lret
rclb
mov
punpckldq
fwait
gs
jg
add
push
pop
addr16
mov
shrl
sub
ja
add
mov
mov
shll
les
push
cmp
repnz
into
pusha
pop
testb
pop
ss
dec
and
das
vpmacssdd
das
dec
xor
lahf
inc
iret
xor
mov
jmp
and
lods
xchg
jae
add
sub
sub
movsb
pop
push
loope
rcl
ss
ljmp
inc
inc
push
push
sub
lahf
adc
dec
movsl
dec
xor
and
das
mov
comiss
mov
xor
push
sub
sbb
xchg
inc
adc
fs
sbb
outsl
fisttpl
mov
mov
push
jae
cmp
ret
mov
inc
adc
sbb
lret
sti
jno
imul
rclb
inc
mov
scas
xor
pop
dec
or
xchg
pop
add
push
cmp
scas
xor
mov
mov
ret
lods
cli
mov
mov
inc
push
dec
xchg
pop
inc
outsl
pop
xor
andl
movsb
pop
es
sub
pop
pusha
adc
mov
or
xlat
aas
adc
faddp
mov
and
jmp
test
or
rolb
mov
sbb
mov
pop
push
lret
sub
or
jmp
sbb
movsl
lret
inc
fmuls
fnstsw
mov
add
xchg
sub
sub
inc
jecxz
dec
add
sbb
andb
repz
add
imul
out
sbb
rsm
loopne
int
or
fnsave
push
and
add
push
pop
cmp
les
xlat
xchg
adcb
jecxz
adc
push
imull
cmp
add
mov
inc
push
jb
test
add
clc
pop
repz
das
pop
xorl
nop
add
pusha
xor
sub
iret
dec
es
sub
cmpsl
push
lcall
inc
xor
cs
xor
pop
xor
xor
outsl
pop
cmpsl
divl
fld
cmp
mov
mov
mov
adc
xor
in
mov
sti
xlat
jbe
test
push
inc
cmp
push
mov
inc
or
inc
jmp
mov
sbbl
mov
jmp
mov
xor
imul
cmp
xchg
and
subl
or
adc
mov
xchg
adc
jne
ret
scas
loope
xchg
test
and
fs
mov
and
loopne
push
sub
vphaddbd
mov
pop
inc
out
xorl
add
addl
mov
clc
jecxz
push
pop
sbb
test
aaa
mov
fwait
mov
ret
lret
push
lahf
enter
push
push
push
mov
jae
adc
push
xor
mov
mov
mov
jg
mov
or
pop
pop
stos
push
inc
add
mov
jnp
fs
aas
xor
dec
aaa
repnz
pop
and
mov
dec
ss
inc
xchg
data16
pop
xlat
sbb
imul
sub
addl
xchg
push
mov
cmp
mov
push
add
ret
mov
scas
mov
xchg
push
call
xor
mov
inc
add
pop
daa
scas
dec
jle
imul
sub
and
lret
pop
push
stc
and
movsb
les
imul
adc
lahf
xor
in
xchg
test
push
xor
sbb
lods
adc
leave
fmuls
aaa
mov
sub
mov
xor
insb
add
dec
loopne
mov
pop
mov
push
adc
and
ret
out
adc
adc
loopne
daa
mov
mov
mov
hlt
inc
sub
inc
ja
mov
inc
sti
aaa
sub
xor
mov
jp
xor
or
and
sbb
inc
mov
rcrb
jecxz
sbb
movsb
stos
inc
je
je
dec
les
mov
inc
and
test
les
ds
xchg
or
addr16
pop
push
aaa
push
je
push
inc
push
pop
or
add
lock
and
mov
inc
daa
mov
cwtl
or
inc
or
jne
test
adc
imul
adc
es
mov
pop
push
xor
mov
mov
and
lock
decl
jg
es
out
out
mov
jne
mov
imul
mov
das
mov
pushw
cmp
mov
sar
sbb
add
ret
mov
add
xchg
rcrb
inc
sub
xchg
es
sub
mov
or
lahf
add
movsl
cmpsl
ljmp
test
pop
sub
cs
pop
add
add
outsl
xor
xor
mov
pop
mov
xor
les
fisubrl
stos
push
sar
sbb
sub
fucomip
lods
lcall
lahf
inc
cs
out
cmp
mov
out
add
insb
adc
arpl
mov
ja
arpl
cmpsb
inc
xor
inc
cmp
movb
rcpps
out
or
cwtl
add
add
cmp
xchg
xchg
pop
xor
xor
add
mov
daa
imul
xchg
jmp
cltd
sbb
sub
loope
pop
or
fcmovu
notb
mov
cmpps
push
ret
mov
mov
pop
push
bound
mov
dec
lods
inc
test
mov
movsb
inc
enter
inc
fisubrl
or
or
adc
xor
mov
inc
out
add
lahf
push
dec
lock
adc
pop
mov
mov
pop
mov
or
xor
push
dec
xor
lcall
push
js
mov
xchg
cwtl
bound
stos
iret
inc
imul
ja
sub
fisubl
sub
mov
les
dec
jae
shlb
fimuls
and
xor
mov
outsl
stos
add
nop
bound
outsb
xchg
fisttpl
or
pop
lds
or
mov
arpl
das
adc
and
jnp
insl
shlb
test
aad
add
outsl
dec
adc
jmp
xchg
or
ret
fildll
ljmp
imul
nop
pop
jnp
mov
mov
push
imull
dec
loopne
stos
fcmovnbe
sub
lock
scas
imul
cs
out
loope
push
es
dec
dec
mov
test
dec
dec
xor
add
pop
in
dec
es
inc
test
or
jg
cmp
jl
imul
add
ret
sbb
lret
push
fwait
outsb
inc
inc
imul
xchg
jecxz
adc
mov
pinsrw
inc
pand
imul
sub
cwtl
adc
sub
lahf
pop
inc
loopne
dec
aas
cmpsb
ss
sti
inc
daa
les
pusha
in
dec
arpl
les
jle
arpl
pop
jle
push
xor
inc
xchg
test
xor
add
jmp
out
xor
bound
sbb
jg
xchg
dec
rorb
out
iret
ss
les
or
sbb
cmc
jne
jnp
cmp
fldenv
jg
cmp
inc
add
out
mov
fmuls
and
lcall
stos
mov
or
xchg
xchg
xor
or
jmp
jecxz
ret
jecxz
shrb
pop
outsb
xor
ud0
lock
inc
inc
push
bound
push
push
out
loop
ja
cmp
fbstp
movlps
xor
pop
sti
iret
jp
mov
inc
sbbl
out
mov
aaa
sbb
lods
add
and
jmp
lock
add
dec
xchg
mov
daa
cmp
pop
pop
fisubl
inc
lret
pop
add
cmpsl
pop
inc
adc
cmp
xor
stos
dec
pop
push
aaa
sbb
adc
xchg
jmp
push
and
cmp
arpl
mov
and
mov
xchg
arpl
adc
sahf
inc
test
loopne
mov
add
or
mov
pop
outsl
iret
icebp
out
sbb
xchg
xor
push
sub
repz
lret
pop
xchg
bound
pusha
mov
lods
push
mov
xchg
lret
cli
xor
jbe
and
sti
mov
arpl
and
xor
or
lods
dec
dec
repnz
ss
shrl
mov
mov
cmp
nop
xor
stos
ret
push
cmp
xor
mov
pop
pop
add
aaa
push
inc
jmp
test
ret
pop
fldcw
sbb
arpl
cmp
fldl
dec
and
subl
roll
dec
inc
aaa
push
jbe
dec
repz
shrb
push
adc
cs
jnp
fs
xor
pusha
mov
fdivs
mov
imul
test
pop
outsl
or
push
sbb
dec
xor
and
dec
sbb
dec
arpl
lods
dec
sarl
pop
mov
inc
sti
sbb
loop
push
mov
pop
daa
call
cs
mov
dec
loope
mov
arpl
loope
insl
ret
xchg
mov
sbb
xor
addl
mov
pop
sub
mov
xor
lahf
sub
andl
ss
lcall
adc
out
add
inc
js
push
sbb
pop
dec
pop
insl
insb
sbb
adc
scas
mov
das
xor
or
fadds
inc
and
shlb
jno
inc
gs
jg
shrb
divl
imul
mov
out
es
or
rorl
inc
mov
mov
inc
adc
push
ret
mov
add
mov
stos
mov
xchg
push
sbb
and
xchg
aaa
or
xchg
aaa
jecxz
push
jp
pop
jg
int3
fisubl
mov
and
push
imul
sub
mov
inc
lahf
pop
pop
rol
adc
cmpsl
xor
add
mov
xchg
addb
addr16
push
cmp
imull
lret
pop
pop
and
add
imul
lea
sub
pop
out
aaa
xchg
je
mov
inc
jmp
pop
jno
jge
dec
out
loopne
cs
inc
cmpsb
stos
xchg
adc
xchg
mov
jnp
jmp
sub
mov
push
jmp
adc
or
and
jecxz
dec
mov
fildll
fadds
and
add
pop
jmp
adcl
out
das
sbb
test
mov
pop
out
call
decl
lock
and
mov
je
pop
pusha
xor
insb
lods
aam
dec
xlat
xchg
mov
pop
pop
mov
ret
pusha
xchg
xor
jae
sub
adc
ss
xor
push
gs
pop
xor
out
fwait
push
or
xchg
mov
push
add
inc
das
inc
mov
mov
jmp
jo
imul
out
push
ret
xchg
fildll
push
in
pop
mov
sub
xchg
mov
inc
arpl
or
les
sbb
add
push
mov
nop
bound
lods
mov
movsl
mov
xor
aaa
arpl
popa
mov
xor
les
mov
add
es
das
iret
push
mov
inc
xchg
rclb
js
mov
rcl
inc
addr16
ja
mov
jg
jl
cmp
dec
add
adc
popa
or
sti
iret
mov
lock
test
lods
and
pop
movb
cmp
add
out
stos
add
or
lea
xor
jnp
subl
pop
pop
xor
or
xchg
push
cmpsb
dec
dec
addb
and
or
cmp
ss
or
stos
adc
pop
mov
pop
push
rolb
ja
lcall
xor
mov
pop
inc
add
pop
mov
sysret
mov
imull
cmpl
or
aaa
push
jg
pusha
add
iret
and
push
fildll
cs
sbb
fs
test
or
mov
fidivrl
ret
or
stos
pop
push
hlt
mov
mov
xor
pop
mov
xchg
pop
lods
stos
and
push
jecxz
scas
push
movsl
leave
xor
mov
sub
popa
popa
xchg
inc
out
pop
push
xchg
iret
xchg
push
inc
cmp
inc
jne,pn
mov
in
popa
cmpsl
stos
jnp
lea
push
fcmovb
sub
cmp
pop
mov
inc
xor
dec
iret
inc
add
into
add
imul
roll
adc
sbb
in
mov
test
jo
fwait
cmp
adc
out
inc
add
add
xchg
sub
inc
popa
inc
add
mov
pop
push
or
push
imul
sarb
jnp
or
addl
divl
dec
xor
rdmsr
cmpsl
out
or
mov
dec
and
nop
cli
add
or
jmp
rcr
mov
push
and
paddsb
aas
bound
ss
or
dec
sub
or
push
sbb
adc
fisttps
add
adc
dec
imul
or
push
fadds
dec
jae
and
push
outsl
ja
ds
mov
daa
daa
pop
pop
xor
jbe
xor
test
add
pop
push
cli
cmpsb
push
adc
test
cmp
fisubs
hlt
cmpsb
push
mov
cmp
adc
or
lahf
iret
mov
popa
outsl
ss
mov
ret
jg
ljmp
lods
fcmove
ret
or
or
add
pop
lahf
addr16
ret
popl
outsb
aaa
ss
pop
scas
test
add
dec
icebp
sahf
dec
jg
jmp
mov
jae
push
cmp
jecxz
lods
mov
pop
xlat
outsb
jns
xchg
fwait
sbb
inc
out
mov
push
add
inc
mov
inc
cmp
mov
cmp
xchg
sub
jno
pop
xor
scas
gs
push
cmpsl
addb
xorl
mov
iret
xchg
bound
lahf
cs
ret
lahf
or
bnd
mov
fwait
shlb
mov
cmp
outsl
lahf
adcl
das
dec
adc
xor
mov
shlb
ss
mov
outsl
xor
and
xchg
cmp
add
nop
jnp
or
or
shrl
dec
and
pop
mov
das
cmp
or
push
cmp
pop
dec
sbb
or
es
arpl
out
jbe
sbb
testl
pop
stos
add
mov
add
loop
mov
pop
setnp
sbb
sub
and
lods
push
push
imul
hlt
je
lahf
or
pop
addr16
ljmp
push
pop
pop
ret
inc
adc
mov
and
push
and
mov
inc
pop
lods
in
jbe
dec
outsl
sub
mov
sbb
mov
jecxz
sbb
sti
arpl
mov
inc
push
sbbl
out
js
xchg
inc
aaa
sbb
push
inc
sub
test
jnp
xor
mov
jmp
daa
mov
sahf
xchg
mov
adc
daa
pop
lret
mov
aad
movsl
sbbb
add
cmpsl
ja
pop
out
inc
bound
or
push
pop
jle
lods
adc
packuswb
insl
adc
shl
pusha
or
adc
lds
scas
xchg
xor
xor
or
xchg
mov
xchg
cmovg
inc
pop
outsl
inc
or
sbb
lret
adc
inc
ljmp
rcll
mov
les
dec
xor
push
inc
xchg
push
outsl
int
outsl
sysret
aam
add
cmp
test
cmpsl
and
lock
lds
test
jl
push
stos
loop
fs
dec
divl
mov
inc
jg
mov
inc
jae
pop
fisubrl
or
inc
stos
jno
cmp
sbb
ja
and
adc
pop
shrl
lods
mov
xchg
adc
push
dec
nopl
ror
inc
jae
mov
lods
push
pop
mov
adc
out
jo
insb
repz
mov
mov
pop
jp
comiss
out
outsl
or
mov
add
sbb
into
dec
fwait
add
aaa
xchg
mov
push
das
sub
je
pop
das
xor
nop
add
insb
jl
imul
jp
push
push
adc
mov
add
stos
stos
pop
outsl
xor
xchg
or
xor
and
aas
sub
fimull
pop
inc
xor
add
jae
fwait
mov
aaa
arpl
aam
inc
xchg
jecxz
shlb
mov
inc
or
cmp
cmpsb
bound
or
rol
mov
jmp
push
inc
mov
cs
lcall
jne
cmpsl
xlat
push
test
fiadds
sbb
push
adc
js
aas
inc
sub
adc
call
outsb
push
fcomps
adc
sub
cmc
sahf
test
insl
mull
xor
fildl
sti
and
cmpsb
pop
jae
fisubl
ja
test
aaa
dec
jge
pop
push
dec
ret
inc
mov
mov
sub
cmc
lret
and
xor
out
add
lds
arpl
les
cmpsl
mov
mov
aas
outsb
lahf
jl
inc
sub
fwait
jbe
daa
aaa
lds
push
jbe
outsl
mov
faddl
pop
lahf
shr
sub
sti
sahf
pop
jo
or
jbe
ret
mov
in
test
fwait
sbb
mov
cmp
ss
addb
jg
pop
xchg
dec
sub
pavgw
cmc
inc
push
cmp
inc
mov
aas
add
shll
adc
dec
xchg
dec
addl
pop
negl
imull
das
and
xbegin
out
arpl
or
pop
jp
lods
ret
stos
jg
in
mov
sub
xor
leave
xchg
add
sarl
outsl
pop
or
push
xchg
inc
cmp
aam
fmuls
mov
sbbb
mov
mov
adc
pop
sub
aaa
cmp
add
imul
shll
das
push
push
push
adc
aam
mov
xchg
mov
lods
inc
mov
add
inc
mov
pop
mov
scas
add
pop
xchg
dec
xchg
outsb
adc
ljmp
pop
insb
pop
pop
jecxz
jg
lock
scas
icebp
pop
bound
aad
push
adc
lea
mov
xor
outsl
sti
arpl
out
jbe
mov
pop
sub
mov
or
lcall
inc
mov
pop
sbb
xchg
ja
mov
xlat
push
aaa
sarl
mov
cmp
pop
shl
hlt
inc
insl
xchg
ja
xorl
add
cltd
movb
out
sub
lods
mov
mov
popa
jmp
mov
jne
sbb
mov
dec
pop
pop
ret
fsubr
push
or
aas
xor
sarl
mov
push
scas
sbb
test
mov
imul
decl
mov
jg
mov
dec
lret
out
fisttpl
and
pusha
and
inc
es
pop
rcrl
adc
test
xchg
es
daa
imulb
xchg
outsl
movsb
popl
inc
adc
add
pop
fwait
inc
inc
bt
xchg
jbe
pop
rcrl
xlat
mov
adc
and
movsb
dec
xlat
push
popf
mov
repz
or
and
mov
adc
lods
ss
sub
xchg
push
roll
mov
cmp
faddp
mov
dec
xlat
pop
add
xor
jg
sbb
out
shlb
xor
mov
pop
add
cs
lahf
mov
ss
jmp
mov
adcl
inc
or
ja
dec
fadds
aaa
cmp
or
outsl
out
ret
pusha
shll
loope
and
xor
mov
and
jmp
push
ret
dec
jp
mov
cwtl
cmp
lahf
bound
push
push
push
rclb
enter
inc
mov
push
aaa
bound
adc
add
push
or
cmp
xchg
add
je
lret
scas
dec
movsl
inc
lods
add
sub
cli
or
adc
dec
out
mov
xor
sbb
lahf
shrb
xor
stos
or
movb
aaa
mov
xor
loopne
dec
xor
mov
inc
test
or
and
ret
mov
sub
mov
and
rcrl
pop
adcl
cmp
sbb
or
adc
adc
xlat
scas
test
insb
rorb
add
fidivs
xchg
inc
inc
sbb
outsl
mov
adc
xlat
jae
push
sub
push
mov
idivb
scas
test
ret
icebp
test
mov
and
fildll
or
inc
adc
cmpsl
xchg
cmpsl
adcl
cmp
xor
adc
mov
mov
push
mov
ret
jae
or
adc
push
dec
addr16
and
scas
push
fs
cmp
lods
dec
ret
add
mov
shrb
mov
out
add
imul
pop
out
jmp
pop
inc
mov
out
mov
add
pop
inc
or
ret
filds
add
xor
mov
inc
push
lods
add
mov
lea
aaa
xor
dec
pop
loop
ljmp
lahf
pop
dec
sbb
xchg
jae
outsb
rcrb
ja
adc
test
jmp
insb
xor
inc
ret
xchg
inc
adc
scas
adc
mov
iret
pop
rorb
push
fwait
add
out
pop
and
and
jae
add
outsb
mov
shlb
ret
int
ds
sti
out
pop
add
out
mov
mov
bound
insl
lods
ret
call
movlps
add
ss
subl
push
aas
popa
sbb
pop
lea
stos
scas
adcl
push
loop
dec
sti
or
pusha
and
dec
cmp
loopne
jnp
sbb
push
add
loopne
test
stos
mov
or
cmp
mov
and
test
fsts
inc
mov
mov
dec
adc
fbstp
arpl
or
pop
xor
imul
dec
fwait
mov
sub
or
inc
pop
xor
cmovne
xor
mov
mov
mov
sbb
scas
sbb
in
insb
and
arpl
sub
push
pop
lahf
subl
cmp
aaa
xlat
popa
imul
or
mov
pop
div
fidivs
lahf
fadds
in
xchg
jmp
pop
fdivs
lods
adc
mov
mov
test
push
jg
add
arpl
rclb
jbe
xor
fistl
pop
fcmovnb
add
mov
mov
jno
dec
pop
pop
scas
mov
out
mov
push
ljmp
jo
mov
insl
and
or
mov
pop
shrb
add
test
mov
sbb
bound
inc
mov
sti
add
ja
sub
test
cmp
pop
out
outsl
pop
adc
pop
outsb
xchg
or
xchg
inc
lods
mov
mov
scas
sbb
dec
mov
outsl
add
ffreep
cwtl
dec
lcall
bound
xlat
insb
push
dec
loopne
incl
inc
cmp
dec
cmp
pop
nop
and
or
dec
lods
nop
and
lcall
mov
mov
cmpsl
fldt
inc
inc
sbb
inc
out
pop
mov
adc
das
adc
cmp
mov
add
sbb
cmp
pop
dec
sub
outsl
xor
pop
mov
fwait
push
scas
mov
fwait
movsb
push
sbb
pop
cmp
push
mov
adc
push
pop
cmc
test
lar
jmp
sub
cmpsb
jne
iret
xor
mov
mov
mov
shlb
jecxz
or
dec
xorl
cmp
test
push
popf
push
xor
xor
ret
or
stos
fwait
jmp
test
fcomi
out
lret
jg
xorb
and
adc
js
xor
in
mov
aaa
xor
sub
adc
xor
xlat
cmpb
lea
dec
pop
or
insb
jae
bt
dec
das
adc
jno
stos
pop
aam
push
repz
mov
pop
out
add
imul
jo
mov
lret
and
and
jmp
xchg
bound
dec
sub
subl
and
mov
xor
add
frstor
rolb
loope
addr16
pusha
orl
xchg
les
xchg
aam
push
pop
sti
sbb
stos
and
jmp
xor
cmp
xchg
ret
and
mov
adc
gs
jo
jmp
mov
xchg
dec
jmp
add
pop
push
arpl
das
mov
lods
movsb
arpl
push
jg
rorb
adc
xor
int
fwait
ja
dec
sub
aad
jmp
or
lcall
popa
xlat
outsl
aaa
xor
mov
xor
outsb
jmp
mov
mov
sub
jbe
mov
add
aaa
xor
cmp
addl
jae,pt
insl
adcb
ja
push
call
jnp
ret
outsb
mov
mov
stos
and
and
ds
jg
nop
add
imul
dec
imul
add
xchg
mov
xchg
cmpsl
loope
xchg
fimuls
fwait
repz
sbb
aam
xor
inc
adc
jge
and
aaa
and
mov
or
mov
pop
cmpsl
inc
sbb
sti
rcl
mov
inc
or
sub
daa
push
dec
pop
shlb
xchg
push
jo
push
inc
scas
jno
or
aaa
dec
repnz
inc
add
pop
pop
fucomip
stos
mov
jg
inc
dec
es
inc
daa
cmpsl
adc
loopne
ljmp
imul
or
xlat
outsb
inc
outsl
inc
mov
cltd
sahf
mov
scas
aaa
aad
cmpsl
pop
out
and
mov
mov
xor
cmpsl
dec
movsl
xor
out
pop
lahf
dec
mov
push
mov
mov
mov
mov
lcall
push
adc
fwait
ja
ret
xchg
sbb
or
sub
adc
cmp
mov
push
ss
mov
arpl
push
sub
fadds
mov
loopne
mov
imul
stos
and
call
sub
out
in
les
xchg
popl
sub
shrb
xor
lods
mov
mov
mov
lods
xor
cmp
cmp
scas
push
jg
insl
xorb
sbb
or
push
sbb
mov
mov
daa
jnp
add
push
mov
push
xlat
or
test
clc
pop
xchg
push
cwtl
cli
xlat
xor
adc
jnp
inc
sbb
adc
inc
sub
loop
lahf
cmp
xor
mov
test
pushl
dec
loop
or
idiv
lcall
adc
mov
jp
stos
mov
add
push
fbstp
les
aas
or
repnz
add
popl
imul
lods
ret
pop
push
xor
or
stos
lods
pop
cwtl
outsl
adc
lds
iret
xor
mov
pop
xor
test
sbb
add
mov
pop
fbstp
sbb
or
mov
mov
movb
adc
add
test
and
hlt
or
adc
sbb
fimull
mov
add
repnz
ret
lds
jae
xchg
xchg
stos
mov
and
cmpsl
cmpsb
add
call
mov
mov
push
lods
btr
add
hlt
push
mov
cmp
push
and
xchg
sub
push
adc
fistpl
fisttpll
arpl
imul
lret
inc
negl
and
cmp
fwait
sub
push
jp
inc
lret
adc
lods
sbb
sbb
adc
pop
aas
inc
or
mov
stos
pop
lahf
shrb
insb
and
xchg
inc
mov
or
fisttps
mov
scas
fwait
inc
jge
stos
jnp
les
fwait
jb
mov
je
cmp
inc
push
jo
popf
xlat
push
lret
jp
xor
out
pop
xchg
pop
cmc
mov
cmpsl
andl
xorl
xlat
mov
cmp
dec
arpl
add
mov
jo
or
arpl
lret
mov
mov
insl
or
add
lds
int3
xchg
jecxz
clc
ret
cmpsl
push
lock
jmp
jmp
scas
decl
roll
dec
repz
xor
xchg
icebp
sub
pop
dec
int3
xchg
xor
stos
sbbb
ss
jecxz
inc
call
subb
push
arpl
pop
orl
pop
pop
ret
addl
lock
out
mov
popa
adc
or
add
outsb
adc
lds
push
jbe
ret
rorb
dec
lods
das
jae
loope
add
sbbl
movsl
mov
shrb
xchg
call
fbstp
sub
sti
lods
push
scas
xor
dec
ret
iret
xor
inc
sub
imul
xchg
out
xchg
ds
stos
jmp
ja
inc
sahf
cs
imul
insl
sub
out
mull
adc
inc
add
dec
pop
mov
mov
mov
addr16
dec
daa
pusha
adc
mov
sbb
push
in
pop
mov
inc
inc
pop
sbb
ret
outsl
cmpsl
xchg
jp
jne
lahf
das
ja
jecxz
seta
aam
sbb
pop
sub
cwtl
inc
inc
jg
push
adc
jmp
outsl
sbb
or
jnp
clc
push
cs
icebp
push
jmp
insl
ret
fstpt
mov
pop
fs
pop
sub
es
out
idivl
pop
xlat
es
inc
xchg
dec
subl
insl
mov
push
loope
mov
aas
imul
mov
cmovg
add
xor
lods
adc
and
mov
mov
dec
sbb
icebp
jne
add
out
out
add
or
mov
mov
push
iret
out
pop
and
orl
scas
mov
push
sbbl
sbb
xor
inc
or
pop
iret
inc
pushaw
mov
lret
sti
dec
mov
mov
imul
push
push
js
mov
test
cmp
xor
filds
xchg
insl
nop
xor
sbb
adc
rorb
fmuls
lock
pop
mov
rcl
mov
loope
js,pn
inc
xor
adc
inc
inc
xlat
xlat
in
and
adc
movl
gs
lret
stos
push
cwtl
pop
push
mov
fwait
lret
ss
arpl
lahf
lods
inc
in
mov
dec
ss
pop
mov
dec
adc
movsl
xchg
inc
fwait
aas
fcmovnb
adc
movsl
dec
inc
aaa
sbb
mov
xchg
mov
ja
ja
mov
inc
push
mov
cmp
lahf
lds
sbb
addl
adcb
xor
mov
sbbl
sbb
xor
xchg
pop
cmpsb
adc
pusha
loop
jmp
pop
pop
mov
iret
mov
aaa
jbe
push
jo
xchg
xor
adc
lahf
testb
add
lds
das
pop
mov
jp
and
pop
or
aaa
and
mov
pop
add
aaa
jp
pop
add
xchg
fldt
arpl
pop
pop
xchg
xor
rorl
mov
xchg
lock
mov
lahf
or
imul
aad
xor
or
and
add
sbb
lahf
xchg
push
mov
mov
add
adc
push
stos
scas
inc
mov
cmp
and
mov
xchg
jge
stos
inc
sti
dec
fldl
nop
ljmp
push
fs
aaa
adc
fldt
adc
ja
dec
sbb
push
fistpl
jne
push
mov
inc
inc
fwait
push
or
stos
mov
dec
push
scas
shl
push
in
dec
pop
inc
xchg
push
xlat
testl
adc
pop
xor
inc
and
push
push
or
xor
cmp
inc
shlb
mov
push
out
push
push
xchg
dec
mov
xchg
pop
ficoms
mov
dec
inc
cmpb
push
iret
test
mov
pop
xchg
add
popa
xchg
inc
mov
orl
xor
testl
mov
pop
mov
sbb
adcb
es
ja
push
pop
pop
mov
cmp
inc
jbe
fiaddl
pop
push
xchg
push
ljmp
bound
mov
shlb
xchg
adc
pop
jmp
xor
out
push
sub
cmp
xor
pop
es
and
dec
and
inc
insl
ret
sysret
inc
addl
sbb
xchg
and
pop
dec
lahf
sbb
xor
repz
incl
iret
cmpsl
popf
les
push
and
adc
cmp
cmp
xorps
cmp
iret
stos
inc
aam
jmp
outsl
pop
and
dec
mov
ljmp
push
out
cmp
pop
and
add
jecxz
jno
testl
andl
mov
pop
push
and
mov
dec
pusha
xor
imul
pop
outsl
pop
inc
addr16
cmpsl
fwait
push
push
inc
or
sti
movl
xor
xchg
xchg
mov
subb
inc
sbb
leave
xor
inc
jecxz
sti
es
sti
fisttps
fstl
addr16
mov
stos
xchg
or
movsl
sbb
insl
stos
add
jg
pop
inc
push
je
ss
sti
push
addl
iret
mov
or
sub
stos
repz
xchg
and
cwtl
dec
dec
xor
cli
xlat
nop
out
pop
mov
push
test
pop
sub
out
mov
mov
xchg
imul
add
mov
xchg
push
rcrl
insb
jmp
icebp
xchg
decl
out
push
and
add
ja
nop
test
popa
adc
mov
sbb
jecxz
mov
sti
pop
sbb
scas
inc
mov
fsubs
push
test
pop
stos
aaa
jg
sbb
push
jecxz
paddq
ret
aas
iret
aad
mov
xchg
aas
les
or
call
dec
xor
arpl
and
xorb
pop
jnp
mov
or
xchg
roll
and
sub
inc
add
sub
aaa
imul
xor
cmp
stos
pop
push
stos
movsl
shll
push
jl
lods
inc
xchg
add
xor
add
iret
mov
or
inc
cmpsl
xchg
inc
or
or
pop
out
xor
enter
mov
adc
mov
dec
mov
inc
or
daa
out
vsqrtps
or
cmp
mov
comiss
or
push
or
aas
inc
lods
out
insl
fidivl
mov
ss
add
xchg
jp
jecxz
subl
inc
mov
mov
cmp
jo
loope
xor
adc
stos
push
or
add
adc
sbb
xor
test
lahf
movb
inc
push
divl
add
pop
movb
cs
jl
test
xor
dec
and
daa
fwait
lahf
imul
je
shr
mov
inc
repnz
shlb
inc
cli
shlb
jnp
cs
cmp
xchg
mov
orl
cmp
jbe
sbb
jmp
test
notb
sub
dec
pop
lahf
inc
xlat
aam
cs
fwait
rorl
xor
sti
jae
movsl
inc
rolb
shlb
insl
les
mov
adc
scas
stos
pop
adc
inc
bound
shll
mov
adc
xchg
aas
addr16
push
or
xor
adcb
sbb
xchg
mov
inc
push
sub
add
sbb
xlat
or
cmp
aas
mov
or
push
pop
aaa
fisubs
pop
imul
lods
inc
pop
lahf
outsb
cmpsb
mov
cmpsl
pop
aaa
inc
stos
imul
xor
filds
imul
xchg
cmp
aam
jae
pop
dec
jecxz
gs
inc
or
or
es
lret
arpl
popa
aam
daa
into
inc
sbb
jp
jecxz
test
rcrb
lahf
add
je
xchg
out
mov
xlat
cmp
jno
outsl
inc
pop
mov
or
sub
fwait
inc
add
xor
xor
popf
adc
insl
xorl
fwait
subb
fistpll
push
and
ja
sbb
sbb
test
sub
inc
daa
orl
adc
repnz
aaa
addr16
jno
enter
out
or
test
imul
or
mov
add
and
aad
bound
lahf
mov
rol
and
fistpll
rolb
jbe
scas
pop
xchg
les
xlat
mov
xchg
inc
sub
pop
lods
push
daa
das
add
jbe
movzwl
jno
pop
iret
dec
sbb
sahf
inc
xchg
jmp
xor
mov
scas
pop
movsl
sub
push
mov
jae
incl
sbb
push
fsubrs
push
adc
inc
pop
hlt
imul
pop
fdivs
or
or
pop
lods
divl
and
xlat
sub
hlt
rcrl
addl
stos
jnp
add
imul
mov
lahf
sub
adc
pop
es
pop
xchg
mov
inc
aas
xchg
xchg
inc
nop
mov
arpl
or
movb
repz
or
adc
dec
mov
xchg
stos
inc
test
add
outsl
sbb
and
mov
mov
xor
out
push
dec
dec
pop
dec
sahf
push
jmp
lea
jo
xor
jnp
sahf
jne
xor
push
sbb
cmp
pop
xor
pop
rcrb
pop
inc
outsl
xor
mov
cmp
daa
dec
jae,pt
add
inc
in
xor
pop
push
jbe
sub
loopne
pop
mov
pop
jno
pop
and
out
push
sbb
bound
nop
and
pop
imul
daa
call
push
outsl
mov
subb
fbstp
sarl
xlat
cmp
test
mov
mov
mov
xchg
mulb
pop
pop
sub
ret
jge
xor
or
dec
sub
pop
inc
ret
jl
ret
add
fdiv
inc
jg
add
es
add
jae
loop
lea
pop
nop
test
fs
mov
ja
imul
ja
jmp
mov
or
add
jp
lahf
mov
xlat
sub
inc
rcll
xchg
dec
stos
lods
aad
fidivrl
sub
xchg
sub
cmp
movsb
push
mov
sub
mov
mov
add
mov
mov
xchg
mov
cmp
pop
and
orb
incl
add
dec
test
push
adc
sti
mov
jnp
lcall
es
mov
popa
jmp
mov
shlb
adc
insl
xor
mov
scas
outsl
dec
mov
xchg
pop
ja
ss
xorb
lahf
and
adc
mov
mov
dec
dec
dec
lcall
fdivp
cmp
fbld
inc
sub
xchg
push
popa
sbb
sub
fwait
adc
xor
pop
push
test
and
sub
sar
push
ss
lret
and
ds
and
hlt
push
mov
lock
mov
push
pop
mov
addr16
add
out
mov
inc
lahf
dec
mov
pushl
lcall
lods
push
xchg
aaa
add
int
push
imul
gs
mov
mov
out
das
add
inc
sbb
push
adc
inc
push
shrl
out
dec
ret
inc
ret
dec
mov
mov
stos
and
cmp
inc
push
jb
sub
pop
inc
aaa
shl
mov
add
adc
and
sub
syscall
sub
nop
xlat
rolb
jbe
out
sbbb
mov
or
das
into
aaa
pop
sbb
and
inc
rcl
arpl
dec
pushf
xorb
test
adcb
pop
movsb
adc
or
push
jo
dec
adc
sbb
ss
das
mov
push
xor
inc
sub
xchg
aas
xor
xor
cmp
xchg
push
mov
fisttpl
dec
nop
movsb
or
cmp
pop
mov
incl
push
dec
jp
cmp
cltd
js
daa
pop
push
bound
mov
ret
adc
xchg
cwtl
inc
jae
insl
pusha
xchg
cmc
dec
stos
mov
stos
or
mov
loopne
enter
push
fwait
dec
cmp
loope,pn
mov
lahf
pop
and
add
dec
repz
dec
mov
or
push
or
mov
mov
insl
das
das
pop
cmp
inc
lods
adc
in
aaa
add
shrl
sbb
cmp
xor
sub
xchg
lods
sbb
xor
mov
inc
cmp
jno
lret
mov
outsb
lret
fldl
add
aam
daa
imul
adc
xorl
stos
cmp
es
clc
pop
adc
jmp
adc
adc
mov
sub
xchg
dec
pop
pop
pop
jbe
xchg
arpl
jmp
fstpt
out
pop
adc
push
sub
sbb
ds
pop
pop
xchg
loope
or
dec
push
arpl
add
cmp
inc
mov
add
scas
roll
mov
ret
addr16
sbbl
push
je
jnp
loopne
jmp
scas
jmp
addr16
jmp
add
push
push
xor
insl
stos
lahf
out
mov
mov
sbb
loope
push
add
testl
inc
aas
out
add
les
mov
sub
pavgw
pop
dec
das
mov
add
dec
inc
das
mov
mov
lahf
pop
jae
es
aas
and
and
add
sbb
mov
leave
mov
inc
sbb
or
push
orl
les
add
jmp
sub
mov
aas
push
xor
sbb
ret
jl
mov
pop
sub
adc
mov
rcrl
imul
add
pop
fsubs
movsb
sbbl
dec
xor
xchg
jbe
aas
sbb
movsl
aas
aas
test
dec
push
xor
popa
arpl
xchg
xchg
inc
mov
stos
inc
and
iret
xorl
pop
ss
imul
fwait
mov
ja
jns
mov
add
add
and
lret
outsl
cmp
je
sbb
dec
pop
imul
test
add
adc
push
pop
scas
inc
clc
push
imul
mov
mov
adc
push
iret
ret
sub
xchg
fsubs
les
loopne
ret
jnp
and
pop
inc
xchg
lret
fiaddl
in
or
pop
fsubrl
imul
outsl
and
fmuls
add
lret
out
xor
setnp
mov
mov
dec
nop
movsb
cmp
add
mov
inc
add
jnp
adc
arpl
inc
pop
dec
mov
push
out
inc
sbb
ss
scas
and
inc
test
fadds
mov
repz
mov
shrb
mov
adc
stos
sub
xchg
dec
dec
pop
imul
sbb
xchg
add
stos
jmp
mov
fwait
and
iret
out
fwait
jbe
subl
fnstsw
xor
dec
xchg
lods
xchg
xor
mov
test
shlb
pop
mov
or
dec
jmp
pop
or
cmp
inc
lahf
push
icebp
outsl
out
in
rolb
dec
aaa
adc
or
sbb
dec
push
xor
or
push
iret
or
xor
push
jnp
es
and
lods
mov
inc
aaa
pop
incl
ret
ret
rcll
mov
movsb
push
dec
test
imul
insl
in
nop
stos
addr16
nop
pop
inc
add
mov
movsb
dec
xchg
inc
ret
or
data16
movsl
push
and
das
xor
call
dec
xor
xchg
mov
jecxz
push
xchg
dec
cmp
cmpsl
add
aaa
lcall
or
inc
lret
inc
xor
arpl
dec
sbb
cmpsl
test
ja
lds
cli
adc
push
adcb
sti
repz
push
push
sub
xchg
pop
or
fwait
das
arpl
mov
cmp
iret
ret
jmp
test
add
or
movsl
cmp
sub
test
mov
jmp
or
mov
sbb
dec
mov
jo
lret
cmp
add
ss
xchg
dec
sbb
test
sbb
inc
xor
pop
adc
pop
adc
or
out
out
shlb
pop
mov
and
aaa
push
add
movsb
dec
stos
xor
add
dec
cli
ret
mov
push
mov
dec
sti
jg
add
shlb
out
pop
xlat
dec
jmp
in
bound
and
and
movsb
xor
lock
call
das
xchg
adc
xchg
pop
subl
sbb
push
push
mov
movsb
ret
cmp
or
loop,pn
shr
adc
xchg
xchg
jmp
pop
adc
add
rep
cmp
scas
or
lea
cmp
mov
das
pop
jp
push
movsl
psubq
les
and
push
and
in
xchg
xchg
inc
scas
mov
test
push
loopne
scas
push
mov
outsl
ss
outsb
cmp
inc
lcall
or
mov
daa
sub
xor
mov
inc
lods
mov
in
jecxz
xchg
aas
rolb
mov
pop
sbb
push
dec
sbb
sti
cmpsl
xchg
add
jnp
adc
dec
scas
push
ret
pop
dec
or
inc
test
insb
out
xor
test
dec
mov
gs
daa
adcl
push
push
dec
lret
xor
pop
pop
mov
lods
cmp
fwait
jp
movsb
frstor
pop
rorl
inc
icebp
push
or
rorl
arpl
push
ret
outsl
test
xchg
cmp
ss
add
orb
les
ss
or
sti
cwtl
gs
pop
mov
xchg
sub
scas
add
push
imul
mov
and
inc
movsl
dec
cmp
xlat
pop
arpl
xchg
not
jbe
mov
cmp
popf
lock
sub
dec
pop
loop
dec
pop
fs
test
add
fidivl
pop
lret
pop
dec
aad
das
aas
add
mov
or
out
imul
push
imul
shlb
jne
adc
jecxz
xor
popa
inc
pop
inc
popa
xor
dec
lods
add
das
xor
mov
pop
rcll
fwait
dec
jmp
imul
inc
push
adc
scas
sbb
jne
rclb
ret
fldt
mov
inc
test
fld
xor
pop
add
test
xchg
mov
mov
stc
stos
sub
inc
xor
ret
lahf
or
test
jae
ret
outsl
xchg
and
add
jmp
pop
daa
les
fbld
lea
out
pop
inc
push
sub
xor
sti
sarl
and
decb
inc
mov
adcl
and
stos
mov
dec
cmp
pop
test
imul
fisubrl
pop
add
add
pop
dec
jecxz
sbb
mov
repz
push
push
push
xchg
ret
repz
mov
sub
push
xor
insl
sbb
inc
jae
sbb
lock
and
mov
fidivl
pop
add
pop
mov
sub
rcl
xor
adc
xor
clc
xor
xchg
mov
or
or
and
jnp
sbb
add
ss
jae
and
dec
aaa
stos
xor
das
fwait
lcall
sub
aam
mov
adc
test
rolb
xlat
pop
sub
aad
inc
cmp
sahf
popa
and
xor
popa
ljmp
inc
sub
and
or
lret
aaa
aas
sbb
in
data16
adc
inc
add
and
cmpsl
imul
or
imul
mov
xor
inc
cmovg
inc
pop
ret
addr16
jne
cmpl
ret
cmp
fcmovbe
add
sarb
add
inc
ret
out
pop
mov
and
add
ljmp
addr16
test
xchg
jp
add
or
adc
adc
aaa
xchg
fimull
lods
adcl
mov
dec
das
inc
call
ret
test
add
mov
jg
or
inc
cmpsl
sbb
jb
daa
jecxz
add
or
push
pop
testl
sbb
cmp
arpl
adc
mov
inc
movsb
pop
scas
mov
pop
jl
or
adc
mov
jecxz
cmc
mov
sti
loope
scas
je
aaa
jae
push
pop
mov
jg
inc
lret
fstpt
sub
fistpll
in
or
stos
mov
cmpsl
jno
popl
lods
xchg
jo
jmp
adc
xchg
adcb
push
mov
mov
add
xor
popa
insb
fwait
addl
ret
mov
sub
mov
add
orl
sbb
test
add
xchg
pushf
xchg
cli
push
and
mov
pushf
ret
sbb
mov
out
inc
mov
dec
pop
adc
inc
cmp
pop
pusha
imul
lahf
inc
ret
pop
js
adc
or
push
sbb
icebp
mov
mov
pusha
inc
jae
push
push
outsb
dec
repz
ss
jae
test
add
pop
mov
sarb
mov
xchg
sbb
adc
mov
jno
jecxz
ja
and
mov
xlat
jle
add
and
pop
add
and
xor
mov
dec
push
ja
or
push
sub
jge
inc
mov
push
addl
test
rolb
aaa
xlat
sbb
fld
sti
outsl
shll
fwait
inc
dec
add
scas
orb
ja
dec
jmp
xor
add
inc
fbld
repz
push
test
loope
push
xchg
fnsave
sahf
mov
out
jae
xchg
lods
iret
mov
nop
mov
xor
and
dec
sbb
xor
dec
sbb
sbb
mov
push
gs
adc
lds
and
mov
pop
or
mull
push
nopl
jg
cli
shl
cmp
adc
pop
fwait
test
pop
scas
sbb
movsb
pop
js
sub
stos
push
test
mov
lret
out
adc
pop
outsb
adc
dec
jmp
dec
and
xor
jb
mov
les
or
ljmp
jg
cmp
push
inc
xor
mov
jp
inc
pusha
adc
pop
inc
mov
fildl
push
fwait
inc
pusha
addr16
popa
push
jo
scas
jle
inc
mov
ss
inc
insb
adc
add
daa
dec
push
mov
mov
ja
lods
add
inc
xchg
push
add
sbb
inc
lods
cmpsb
aaa
xor
pop
out
xor
test
cmp
push
lods
push
bndstx
dec
outsb
sub
inc
xor
or
test
les
push
inc
imul
pop
lsl
push
dec
xchg
stos
lret
inc
push
xchg
dec
cmp
lret
adc
mov
xchg
and
xor
pop
push
xor
testl
dec
les
int3
stos
mov
mov
xor
push
data16
xchg
js
dec
lret
imul
test
sahf
push
mov
and
out
add
ss
inc
mov
jae
adc
inc
sub
mov
push
sbb
outsb
dec
pop
stos
sub
lret
xchg
je
inc
insl
and
xchg
out
pop
les
call
jnp
xor
or
hlt
popa
cmp
fistl
xlat
mov
sbb
pop
imul
inc
cmp
and
mov
mov
aad
push
dec
add
push
xchg
jae
js
mov
lahf
push
push
mov
insl
int
mov
pop
filds
jnp
in
add
lea
outsl
and
test
jbe
cmpsl
nop
sbb
icebp
xchg
pop
test
filds
jmp
and
add
inc
inc
inc
jg
cmpb
dec
dec
hlt
mov
inc
push
xchg
sbb
mov
ret
imul
ds
stos
xor
push
cmp
addr16
clc
xorb
adc
fwait
push
pop
add
frstor
lcall
addl
mov
aaa
mov
popf
ss
divl
push
and
sub
mov
adc
popa
push
xor
add
and
sub
lret
jnp
mov
cmp
dec
push
add
arpl
sub
insb
shl
cmc
and
mov
mov
sub
ss
daa
and
add
jmp
pop
sub
sbb
lret
scas
jmp
jnp
inc
mov
lods
cli
mov
adc
xor
pop
les
lods
ret
aas
xchg
mov
arpl
push
jl
daa
scas
xchg
xor
xor
xor
mov
jne
stos
inc
push
ret
addr16
imul
xor
xor
sbb
mov
rcll
xchg
jo
pop
imul
xchg
jmp
ds
push
xchg
push
dec
into
xor
push
shll
sub
adcl
xchg
ficomps
xor
and
aad
mov
imul
mov
jbe
pusha
das
jg
or
insl
xchg
push
xor
jae
push
sub
xchg
ljmp
imull
je
cmp
dec
loop
pop
test
sbb
xlat
mov
sbb
ss
rcll
fs
into
cmp
mov
mov
pop
dec
cmp
bound
and
xchg
das
jl
loope
jae
pop
aas
fnsave
inc
jmp
mov
data16
jnp
pop
ret
sub
xchg
andl
outsl
fwait
jmp
aad
mov
jae
mov
adc
add
xor
xor
inc
ds
mov
add
stos
fwait
cs
test
rorb
mov
mov
cwtl
cmp
push
push
jbe
xchg
push
or
lods
adc
push
stos
sub
xor
iret
push
andl
xchg
jmp
fwait
and
dec
fwait
push
xor
pop
icebp
jbe
loop
mov
aad
jnp
cwtl
es
popa
mov
sbb
popa
xchg
ja
rorl
inc
mov
ja
pop
xchg
nop
lcall
fsubp
cmp
stos
nop
fwait
or
jecxz
lcall
mov
idivb
divl
xor
mov
sbb
mov
dec
inc
push
push
leave
sub
and
xchg
imul
jmp
dec
iret
add
and
and
push
arpl
ffreep
sub
js
test
nop
mov
gs
scas
adc
mov
es
shlb
cmpsl
es
testl
mov
cmp
out
popa
vpsubb
shrb
mov
rorl
aaa
outsb
inc
fdivrs
sub
fistps
or
add
mov
and
push
mov
ja
mov
adc
roll
or
sub
pop
or
fildl
fists
or
imul
pop
jecxz
push
fmuls
imul
inc
loop
xlat
push
fcomip
xchg
inc
outsl
or
sub
addl
pop
sti
jnp
popl
add
mov
inc
fdivl
pop
inc
push
pop
sarb
ret
dec
movsl
adc
pusha
cmp
add
jbe
pop
add
ret
adc
add
mov
rorb
ja
pop
leave
lods
inc
out
mov
pop
fadds
pop
popa
push
pop
nop
lahf
lahf
jecxz
mov
daa
mov
fildll
xchg
fisttps
jmp
sub
mov
or
adc
mov
sarb
inc
sub
mov
das
inc
pop
add
loopne
mov
test
fbstp
scas
pop
pop
mov
pusha
pop
mov
pop
sub
sub
xchg
sbb
js
outsl
sbb
sarl
daa
push
pop
xlat
rcl
push
jnp
push
xorb
sub
sbb
or
pop
mov
fildl
push
pop
pop
addr16
sbb
mov
lock
aaa
aaa
test
das
sarb
add
lea
and
jg
or
pop
aam
insb
xchg
aas
jae
add
and
pop
mov
mov
loop
setno
or
pop
xchg
mov
add
ficoms
cmpsl
mov
inc
lods
add
dec
imul
or
fwait
ret
mov
ret
adc
push
jb
inc
pop
scas
iret
ret
hlt
add
mov
addb
ss
cmpsl
shll
or
imul
pop
push
mov
ds
fisubs
ja
pop
pop
mov
imul
loop
add
jmp
fildl
fsubrs
push
ja
adcb
rcrl
xor
rol
adc
loop
ror
mov
pop
hlt
addr16
and
dec
iret
dec
shl
mov
sub
addr16
push
dec
mov
loopne
sti
imul
movsl
adc
sbb
pop
mov
inc
pusha
fildl
shlb
psllq
inc
cmp
and
dec
loop
adc
mov
xor
inc
sub
mov
test
pop
or
or
pop
push
daa
xchg
mov
mov
test
fwait
push
mov
rolb
or
pop
in
out
push
push
adc
test
xchg
add
jmp
test
aaa
inc
mov
cmp
or
adc
add
nop
sbb
jg
adc
call
out
addr16
fsubrs
inc
out
dec
icebp
inc
jecxz
aas
pop
arpl
subb
out
jg
add
inc
lret
nop
jae
rolb
pop
or
dec
bound
stos
cmp
push
jmp
aaa
bound
nop
loop
adcl
or
bound
xchg
test
xchg
dec
cmpsl
mov
cmp
das
add
bound
mov
xor
pop
pop
fcmovne
imul
pop
mov
add
test
push
lds
mov
mov
mov
dec
aaa
jne
lods
sbb
push
mov
pop
inc
or
divb
jg
lock
jno
pop
push
cs
dec
shll
call
scas
mov
push
lcall
jmp
pop
sbb
xchg
test
mov
les
inc
lahf
mov
add
les
je
aaa
repnz
xor
cmp
mov
out
fildll
pop
mov
imul
ror
arpl
jmp
xlat
or
mov
fcomp
iret
jle
mov
jne
ret
mov
mov
xchg
inc
or
mov
inc
sub
pushl
xchg
mov
js
jnp
adc
sbb
and
mov
mov
lods
aaa
jmp
inc
enter
fildll
sbb
dec
leave
sbb
cmp
sti
movl
sbb
xchg
fwait
out
in
pop
sbb
arpl
jmp
lods
test
cmp
jae
shrb
cli
aam
fwait
push
leave
and
mov
sub
mov
dec
and
inc
inc
lahf
pop
pop
lahf
mov
insl
popa
push
mov
or
loopne
mov
xor
loop
stos
dec
repz
pop
push
sbb
ret
pushf
popa
jmp
and
mov
iret
es
decl
push
xchg
test
fisubl
fbstp
push
inc
loope
ret
inc
add
mov
popf
pop
mov
and
pop
mov
add
lahf
jecxz
ss
pop
dec
pop
pop
imul
adc
out
inc
test
je
xlat
aaa
jmp
or
add
pop
in
and
mov
dec
jnp
mov
imul
sub
add
xor
sbb
sti
daa
sti
ficompl
sub
loope
adcl
out
jge
iret
pop
xchg
mov
mov
lds
out
arpl
and
lods
jae
mov
mov
imul
and
inc
cmp
lock
iret
pop
lods
sbbb
add
jl
stos
or
mov
rorb
sbb
ret
inc
loope
negl
mov
adc
pop
sub
scas
aam
arpl
jmp
lahf
xchg
adc
cs
pop
jmp
cmpsb
mov
jge
jmp
pop
sub
mov
adc
pop
dec
inc
adcb
cmp
leave
jno
clc
pop
arpl
or
outsl
daa
lret
pop
outsl
mov
xorb
sbb
push
add
cmp
sub
xor
inc
lods
rcll
out
rorb
xor
adc
mov
dec
mov
dec
inc
sub
and
xchg
xchg
orl
push
lea
or
xorb
mov
fwait
mov
push
daa
cmp
mov
inc
bound
adc
repnz
sbb
in
rolb
push
das
and
daa
adc
mov
jmp
jo
dec
xchg
pop
mov
mov
dec
mov
add
fsubrl
dec
and
dec
pop
js
out
add
out
mov
testl
or
dec
mov
aaa
sbb
push
mov
pop
push
sbb
add
stc
sub
xor
scas
inc
dec
xchg
and
push
or
rclb
adc
inc
inc
mov
or
sub
mov
fs
inc
push
ss
hlt
fildl
jnp
sarb
fcmovb
push
mov
mov
adc
rcl
pop
push
jnp
pop
pop
mov
sub
mov
xchg
cmp
sbb
mov
dec
mov
pop
rcl
xchg
das
sbb
sbb
addr16
and
pop
mov
inc
iret
outsb
xor
push
xor
pop
or
movsl
pop
movsl
mov
adcl
xchg
scas
lock
adc
popa
or
addl
mov
xor
data16
sbb
lahf
dec
inc
lahf
adc
add
filds
inc
adc
and
add
xchg
add
add
mov
call
jb
mov
adc
mov
sub
pop
xor
cli
inc
push
pop
loop
je
dec
xor
or
cli
inc
dec
mov
es
sub
mov
lret
packuswb
inc
imul
cmp
ret
iret
pop
addb
sbb
push
xorb
dec
adcl
xor
add
imul
outsl
push
jno
test
dec
out
dec
dec
aam
addr16
fisubrs
movsb
push
inc
fisttps
shlb
addl
mov
pop
inc
cmp
rorl
mov
bound
adc
push
adc
mov
rol
adc
push
call
inc
add
add
shr
scas
leave
rolb
aaa
xor
and
inc
insl
test
jecxz
xlat
imul
fwait
sub
push
xchg
addr16
push
insl
mov
repz
outsl
imul
das
lock
scas
arpl
push
mov
push
push
mov
pop
arpl
shrl
adc
xor
inc
sbb
xor
imul
lcall
popa
test
inc
and
xchg
cmp
stos
pop
es
or
and
ret
repz
jno
das
sub
ss
pop
jae
test
out
add
out
jnp
outsb
imul
jecxz
ret
xlat
loopne
scas
mov
stos
xor
mov
or
sub
jg
and
inc
stos
xor
sbb
or
mov
pop
mov
cmpsl
mov
xor
push
and
dec
incl
pusha
fcoml
jecxz
dec
inc
pop
adc
sahf
scas
mov
das
xor
movntq
push
adc
sti
inc
dec
mov
mov
pop
addr16
sbb
adc
add
adc
addl
jbe
mov
mov
fwait
inc
mov
iret
sbb
xchg
test
loope
add
mov
rcrb
and
iret
xor
mov
imul
pop
push
jmp
lret
add
aaa
fists
mov
and
xchg
lods
inc
out
inc
add
inc
jne
or
sbb
inc
or
aaa
sbb
scas
jecxz
inc
jp
sti
out
ljmp
dec
test
arpl
loopne
xchg
push
das
mov
cmp
xchg
cmp
add
adc
push
lods
imul
jnp
sub
andb
mov
inc
ss
mov
xchg
xor
pop
jbe
addb
and
xor
xor
movsl
adc
jmp
adc
cmp
xchg
push
das
lahf
imull
ret
dec
sbb
ret
imul
dec
mov
or
adc
mov
fwait
jo
sub
popa
mov
xorl
clc
mov
xor
jnp
dec
sbb
setg
outsl
jae
xchg
mov
aaa
ja
mov
movsl
xlat
and
cmp
repz
add
add
pop
daa
xor
out
or
lahf
aas
push
adcb
inc
jecxz
das
repnz
add
cmovno
out
sbb
inc
ret
daa
mov
xchg
lret
rol
jne
ret
mov
adc
xor
orl
inc
lret
es
inc
add
mov
and
xchg
inc
and
dec
mov
ret
aam
mov
xchg
xor
mov
cmpsl
xor
xchg
cmp
inc
push
jmp
sub
xchg
xor
push
pop
sbbl
ret
icebp
test
jae
lret
addb
rorl
pop
sub
push
sti
call
lahf
ss
lcall
push
das
and
push
sbbl
mov
aaa
sbb
in
pop
sub
push
mov
add
shrl
ffreep
imul
adc
inc
orl
or
ret
scas
xor
aaa
arpl
out
adc
and
loopne
repz
push
or
pop
xchg
or
jo
dec
dec
popa
and
pop
inc
out
js
jg
imul
or
xor
imul
push
sbbl
ret
sub
insl
xchg
shl
fnsave
sahf
inc
addr16
sub
or
jecxz
test
push
inc
cmpsl
mov
and
cmp
inc
sbb
dec
shr
test
stos
sti
outsl
scas
jne
and
sub
movsl
roll
xchg
jecxz
je
shll
lock
addr16
pop
imul
jbe
xor
test
inc
xchg
pushf
inc
dec
inc
and
cwtl
or
call
movsl
adc
mov
orl
gs
das
ds
jl
sti
cmpsl
push
and
pop
lcall
insl
xchg
ss
push
push
lock
imul
mov
push
in
and
dec
iret
cmovs
or
inc
or
loopne
fnstcw
repz
jmp
mov
sbb
daa
lea
packuswb
inc
dec
dec
inc
rorl
xchg
and
push
jb
es
cmp
add
cmp
int
pop
dec
inc
sub
adc
mov
popa
pop
xor
sub
jo
xchg
bts
mov
aas
rcll
sbb
lods
repz
repnz
xor
adc
daa
mov
xchg
pop
push
push
or
mov
xchg
and
mov
les
out
pop
loopne
ffreep
int3
adc
addr16
xchg
inc
bound
sbb
sub
inc
adc
push
cmpsl
add
inc
insl
call
fldt
filds
xchg
loope
push
jmp
inc
and
sub
into
add
adc
lea
add
mov
aas
xor
leave
add
dec
ret
xchg
xchg
inc
sub
jg
add
or
fdivs
aas
sub
push
push
ja
test
push
pop
fistl
jecxz
outsl
jbe
jno
stos
imul
push
pop
stos
push
imul
sub
mov
sti
xor
stos
jl
and
pop
fisttps
dec
fisubrs
and
cmp
sbb
fadds
das
xchg
jae
xor
insl
cmp
xor
int
out
inc
inc
and
or
mov
sbb
loopne
push
mov
cmp
fs
pop
imul
fadds
mov
sbb
or
xor
add
xor
imull
or
push
fwait
aam
adc
sbb
sub
imul
jecxz
sub
cmp
arpl
inc
outsl
mov
dec
mov
mov
ret
imul
ret
push
mov
mov
or
mov
stos
add
test
ret
dec
push
adc
mov
xchg
xor
mov
fadds
iret
xchg
and
out
stos
cmp
jg
daa
or
jg
sub
movsb
ja
mov
xlat
fwait
xor
cmp
fildll
push
adc
fldl
ret
ret
inc
jmp
jle
arpl
mov
ret
or
pop
rcr
sub
pop
pop
addl
stos
mov
sub
inc
das
mov
pop
push
adc
aas
sbb
xchg
shr
nop
dec
push
sbb
mov
pop
inc
push
mov
inc
rorb
xor
mov
mov
ret
popa
mov
mov
jae
xchg
dec
push
aaa
xor
subb
jmp
xor
or
imul
lret
dec
sbb
dec
mov
push
out
xchg
out
xchg
loop
shlb
cmp
loopne
fsubrs
lcall
rolb
mov
mov
jae
add
mov
divl
add
jg
sbb
and
or
rsqrtps
add
cmp
push
pop
popf
cmpsb
cmp
push
dec
pop
xor
push
xchg
movsb
cmpsl
pushf
testl
aaa
adc
gs
xor
jae
push
cmp
popa
add
push
lods
shlb
inc
addr16
and
roll
stos
push
jmp
push
add
xor
push
outsl
jbe
enter
scas
cmpsb
xor
cmc
dec
inc
pop
imul
lods
fisubrl
ret
fwait
mov
adc
lods
inc
jo
adc
dec
lods
xchg
sbb
fistpl
mov
xchg
mov
jnp
mov
cmp
and
add
daa
das
dec
and
lods
and
inc
or
sub
repz
jge
mov
inc
sbb
or
test
dec
xchg
shlb
repz
mov
repnz
dec
sbb
fistpl
call
or
or
filds
add
jbe
mov
insb
xchg
mov
testl
das
movsl
adc
mov
sbbb
pop
or
mov
pop
sub
pop
lret
decl
addr16
jmp
das
cmp
dec
call
rorb
xor
and
jp
cmp
add
or
jae
push
and
adc
lcall
loop
lret
pop
repz
das
ja
and
add
loope
lcall
data16
or
xchg
xor
or
insl
pop
stos
repz
adc
mov
sbb
mov
les
arpl
inc
pop
test
cmp
imul
rcrl
mov
js
imul
pop
fwait
push
mov
sub
inc
push
adc
sbb
lahf
mov
pop
mov
xlat
mov
and
lret
lods
inc
push
fildl
xchg
mov
sub
stos
pop
lret
mov
mov
out
xchg
mov
add
or
pusha
mov
pop
and
loop
dec
mov
lret
das
push
rclb
aaa
push
xor
and
xor
push
addl
cmpl
push
or
shll
movsl
stos
stos
push
outsl
jg
mov
pusha
xor
popa
xchg
and
cmp
fld
push
out
xlat
cmp
mov
and
push
mov
sbb
js
jecxz
ljmp
inc
ljmp
cli
jae
jbe
rorl
addr16
mov
sbb
movzwl
sbb
imul
xlat
in
adc
cmp
lahf
fsubrs
repz
stos
jo
pop
sarl
and
push
out
test
push
or
add
in
inc
xor
xor
xor
mov
popa
sub
pop
jecxz
add
roll
mov
jecxz
cs
mov
inc
jecxz
popa
aad
lret
inc
pop
mov
adc
inc
pusha
getsec
hlt
sub
arpl
sti
inc
pop
xchg
cmp
jecxz
mov
mov
pop
pushf
nop
pusha
push
shrl
dec
jg
sub
das
dec
inc
loop
loopne
add
cmc
adc
or
pop
xchg
inc
loop
test
loopne
sbb
push
fprem
mov
sbb
mov
and
and
pop
rorb
sar
xor
je
xorl
cmpsl
xor
pop
or
or
dec
outsb
xchg
mov
xchg
ror
pop
add
ret
push
xor
fdivl
lahf
stos
movsb
pusha
push
ss
out
inc
lret
fsubl
mov
cmp
pusha
add
inc
push
mov
aam
dec
inc
xchg
inc
ficompl
xor
sbb
mov
aas
popf
mov
adc
decl
aaa
sbb
movsb
cmc
addr16
mov
xor
sbb
mov
mov
jmp
jae
das
insb
ret
mov
movsb
cmp
fwait
inc
mov
mov
aaa
inc
adc
push
mov
and
je
add
pop
aaa
rcl
jmp
pop
or
and
pop
jle
pop
lret
enter
aas
push
jmp
out
or
andl
dec
push
push
mov
pop
pusha
dec
pop
mov
loope
sub
mov
and
cmpsl
mov
dec
mov
mov
mov
xor
inc
adc
or
xchg
push
fs
jmp
inc
imul
pop
stos
add
pop
pop
mov
inc
iret
outsb
push
pop
add
aas
pop
mov
xlat
loope
dec
inc
jp
dec
push
fdivl
fbstp
pop
xchg
getsec
pop
insb
es
movl
imul
in
ret
incl
inc
mov
lret
jae
adc
sbb
jbe
add
mov
adc
jp
sti
add
mov
pusha
xor
inc
mov
pop
adc
pop
dec
pop
addr16
push
cmpsb
mov
rclb
cmpsb
aas
arpl
pop
push
and
inc
imul
sbb
xchg
mov
jp
ret
scas
push
popa
lds
fbld
pusha
int
dec
andl
fst
mov
pop
xchg
mov
imul
cmp
mov
mov
jecxz
add
push
ja
loope
in
adc
mov
xor
dec
mov
jno
mov
pop
or
iret
imul
mov
cmp
adc
dec
faddl
ret
and
das
push
or
outsb
adc
mov
add
xchg
popl
popf
cmp
push
imul
add
mov
sub
pop
sub
scas
mov
xorb
add
mov
into
and
stos
mov
pop
sbb
jecxz
stos
cmp
sub
dec
pop
pop
mov
adc
arpl
push
test
pop
jecxz
mov
js
push
testl
xchg
cmp
and
pop
sbb
push
sub
push
mov
dec
pop
adc
faddl
popa
xchg
ss
add
sub
dec
mov
and
dec
inc
sub
popa
add
in
fwait
inc
out
mov
insb
sbb
pusha
in
addr16
pop
lea
and
fstpt
cmp
jo
add
pop
das
or
push
inc
jp
mov
pop
mov
mov
jecxz
lahf
ds
pop
jecxz
and
aam
xlat
out
sub
sbb
or
adc
xchg
movl
aaa
xor
xchg
jbe
sahf
xor
adc
xchg
cmp
imul
push
sbbl
xlat
fildll
pop
pop
mov
nop
inc
mov
js
dec
scas
xor
mov
xchg
int3
cmpsb
jno
adc
loop
pop
outsb
pop
pop
inc
lods
pushf
cwtl
or
xor
or
mov
movsb
inc
xor
es
push
lods
adc
mov
fdivs
jnp
cmp
test
xchg
ss
pop
les
and
lods
adc
jnp
movsb
add
sub
push
cli
inc
push
movsb
dec
cmp
aas
ret
movb
rorb
inc
adc
ss
push
adcl
shrl
adc
call
aaa
bound
rorb
xchg
mov
ja
cmpsl
and
and
jecxz
xor
inc
push
testl
jecxz
lds
mov
dec
push
dec
add
ljmp
insb
aam
arpl
adc
sub
fldl
sub
sahf
push
mov
xchg
out
test
jg
popa
mov
mov
daa
xor
xor
add
or
dec
es
and
imul
sbb
mov
push
cmp
mov
iret
orb
pusha
adc
and
cmp
mov
sbb
fists
int3
aad
mov
test
aas
pushl
add
movsl
out
loop
testl
adc
lods
push
sti
sbb
imul
pushf
addr16
and
jbe
stos
popa
add
lods
push
inc
addr16
xor
xor
and
xor
inc
sub
bound
adcl
jmp
add
add
adc
in
bound
jbe
push
mov
adcl
inc
sbb
mov
stos
scas
sub
add
add
and
les
push
dec
scas
jg
pop
jo
lahf
or
push
pop
imul
or
pop
roll
or
imul
push
imul
les
ljmp
sbb
push
outsl
fldt
cs
fwait
mov
cmp
mov
jg
sbb
xchg
iret
mov
xor
jb
fsubs
fnstsw
mov
adc
add
ret
fildl
push
mov
icebp
les
outsl
mov
mov
adc
push
pop
mov
mov
push
dec
adc
pop
ret
ja
cmp
xchg
pop
repz
push
js
imul
add
das
inc
testl
dec
lret
insl
add
outsl
ja
aaa
adc
pop
sub
pop
rclb
notl
nop
xchg
inc
bound
jp
ret
aaa
test
inc
mov
inc
mov
sar
lahf
cmpsb
and
adc
sub
add
js
add
mov
lods
push
sbb
and
xor
aaa
in
cmpsb
and
fildl
data16
je
fsubl
sub
test
sbb
mov
sbb
add
xor
dec
sub
dec
scas
mov
enter
imul
cmpb
xor
sti
mov
jnp
or
inc
or
test
sbb
arpl
and
lret
jo
lock
xor
xchg
xor
sbb
pop
bound
daa
adc
mov
push
jle
imul
aaa
jo,pt
xchg
xchg
push
lods
shlb
push
fistps
pusha
addr16
push
fwait
je
jecxz
push
ss
xchg
xchg
lret
sub
add
pop
xor
lahf
sbb
jnp
mov
inc
out
dec
loope
pop
pop
iret
and
push
cmp
dec
push
and
mov
loope
adc
js
push
addr16
pop
inc
sub
ret
or
push
fdivs
addr16
pop
adc
pop
dec
pop
mov
jmp
adcb
call
mov
testb
dec
cmpl
inc
sbbb
xchg
mov
gs
lret
xchg
push
fwait
inc
dec
pop
adc
mov
aam
aaa
add
pop
adc
add
adc
rolb
dec
and
xchg
fwait
push
sub
pminsw
and
pop
inc
insb
jmp
dec
push
ss
loope
pop
dec
aaa
and
mov
pop
arpl
cwtl
push
fistps
test
and
inc
idivl
inc
aas
push
ret
push
push
jo
jbe
lahf
inc
mov
xchg
mov
inc
ret
mov
jno
pop
cmp
mov
pop
jmp
mov
les
push
xchg
arpl
dec
pop
xchg
or
adc
lods
sbb
mov
imul
scas
add
cmp
hlt
adc
inc
in
movsl
inc
aas
add
ud1
push
aas
sbb
clc
jbe
repz
cmp
jno
push
iret
cmpsl
dec
pop
pop
test
andl
adc
outsl
push
cmp
jg
dec
lret
jnp
or
push
cmpl
inc
ljmp
or
xor
inc
mov
sbb
push
mov
push
jbe
inc
adc
inc
mov
addr16
dec
lds
xor
xor
lahf
aas
add
iret
xchg
and
bound
adc
push
loopne
adc
dec
incb
mov
add
outsl
lahf
add
inc
sub
les
pop
aaa
test
cmp
inc
mov
inc
adc
test
hlt
imul
jbe
adc
scas
xor
or
and
ret
add
xchg
inc
sbb
loop
mov
ja
inc
incl
mov
and
xchg
fiadds
cmp
mov
xchg
sub
out
pop
fwait
dec
xor
cmpps
scas
or
push
mov
dec
push
cmp
test
subb
movsl
dec
lods
adc
orl
mov
dec
lcall
lahf
movsl
dec
xchg
cmc
ja
push
stos
push
inc
rcrb
nop
iret
mov
xor
add
mov
adc
insl
fsubs
clc
fisubrl
adc
fiadds
psrlq
ret
mov
sbb
insb
adc
sub
sarl
xor
mov
xor
rorb
pop
add
mov
shrl
movsl
adcb
adc
and
sub
xor
mov
dec
movsl
or
xchg
cmp
sub
sahf
mov
pop
add
dec
inc
sbb
pusha
pop
xlat
lret
push
push
rclb
imul
pop
add
ficompl
idivl
sub
pop
arpl
mov
push
dec
out
nop
into
adc
fsubl
lock
mov
inc
shll
inc
sbb
jno
xorl
mov
sbb
shll
mov
je
pop
jb
out
insb
xchg
pop
inc
das
mov
push
cmpsl
sbb
sub
aaa
js
or
xor
ds
insl
lods
mov
aam
push
dec
xor
mov
bound
and
sahf
cmc
sti
xchg
mov
or
shll
lret
aaa
or
cmpsl
loop
test
jnp
sub
jecxz
dec
outsl
xchg
inc
add
xchg
mov
adc
movsb
packsswb
clc
mov
scas
jl
fisubl
jno
mov
jae
mov
sub
rorl
jo
jae
stos
mov
cmpl
and
xor
mov
xchg
fisttps
adc
xor
ret
push
enter
addr16
lods
mov
sbb
mov
adc
out
adc
sub
inc
sub
pusha
xlat
inc
mov
nop
adc
or
lahf
mov
fidivl
stos
sbb
outsl
pop
sub
sbb
lods
or
add
dec
cmp
stos
out
push
mov
xchg
fmull
dec
add
xlat
mov
sbb
push
dec
sbb
lret
jae
xchg
popf
sbb
adc
sub
nop
lock
lret
aas
adc
dec
mov
xchg
cwtl
js
mov
add
inc
sub
sbb
jnp
imul
and
and
xchg
notl
scas
xchg
inc
add
or
sti
repnz
call
andb
jno
insb
addr16
lods
xchg
mov
fcmovnbe
rorb
out
fwait
inc
or
sub
mov
ret
adc
sarb
pandn
pusha
dec
shlb
out
sarb
and
roll
cmp
rclb
push
inc
pop
and
or
fistpll
push
and
ja
mov
inc
scas
push
mov
xor
and
inc
sbb
xor
or
xchg
push
cmc
mov
fistl
lods
mov
and
out
inc
aad
sub
push
dec
xchg
or
inc
lods
and
addr16
mov
outsl
das
lods
adc
data16
out
jmp
aaa
and
or
ret
pxor
sbb
mov
cmp
mov
dec
or
xor
rol
ud0
aad
outsl
aaa
xchg
jmp
sub
mov
xchg
dec
and
add
fistpl
arpl
push
outsl
sub
rorb
sti
sbb
xorl
out
xlat
push
push
cmp
out
fadd
stc
movsb
inc
test
mov
xchg
sub
xor
ljmp
pop
fadds
add
inc
mov
dec
mov
mov
xor
mov
cwtl
sub
inc
insl
adc
addr16
ret
sbb
daa
xor
mov
add
mov
sti
ret
ret
stos
ja
push
xchg
cmpsl
inc
movsl
into
push
jmp
jae
lcall
test
push
and
pop
and
dec
lods
insl
xchg
sub
inc
rorl
add
mov
rorb
repz
shlb
sub
lahf
sub
mov
pop
xchg
pop
stos
pusha
pop
sbb
mov
aas
das
mov
out
test
pop
pop
out
pop
scas
xchg
push
mov
cmp
dec
jmp
shrb
sub
add
pop
inc
inc
scas
xor
xor
in
push
ja,pt
and
fbld
push
loopne
add
add
stos
fildll
or
xchg
mov
stos
xchg
xor
add
out
fisubs
inc
mov
and
push
pop
pop
es
pop
add
ja
mov
mov
fildll
add
scas
daa
fwait
movsb
xchg
cmpsb
iret
out
push
sub
jbe
imul
sub
inc
scas
inc
or
dec
dec
sti
imul
adc
fildll
lods
nop
push
sbbb
jbe
cmp
ja
push
sub
outsl
das
adc
dec
or
out
frstor
mov
out
mov
insb
js
out
and
stos
pop
aam
mov
pop
or
adc
sbb
fwait
push
push
adcb
jmp
or
sbb
and
push
mov
or
jo
and
fwait
pop
inc
pop
and
dec
mov
xlat
mov
sub
jg
jmp
lock
iret
aaa
cmp
mov
pop
rorb
xor
movsl
aas
inc
jnp
mov
sub
out
xchg
enter
cs
inc
xchg
sub
cmp
bound
sub
jg
push
push
mov
xor
cmp
dec
mov
mov
inc
sub
scas
cmpsl
insb
sbb
dec
das
insl
pop
iret
push
or
add
push
lea
aaa
por
mov
or
pop
out
cmp
cmp
jnp
iret
pop
inc
pop
jl
shrl
icebp
or
ljmp
push
ret
xor
pop
xchg
mov
das
rorl
mov
mov
stos
jl
mov
mov
pop
and
rolb
xchg
mov
inc
mov
stos
sbb
adc
add
jbe
mov
inc
fwait
jg
je
push
dec
cmp
cmp
jmp
fsts
pop
imul
xchg
neg
mov
mov
je
rcr
popa
pusha
inc
aaa
inc
xor
xor
aam
stos
adc
lret
push
xchg
and
fidivrl
andl
int3
mov
pop
mov
sbb
adc
xorb
daa
iret
lahf
ret
aaa
mov
imul
xorb
ja
pop
sbb
inc
add
lea
push
outsl
lahf
and
xchg
add
mov
movsl
or
push
cmp
push
push
sub
in
aaa
jg
pusha
xor
dec
pop
inc
sub
movsl
nop
pop
lahf
shrl
lods
insl
mov
fsubs
xchg
inc
stos
lret
mov
aaa
pop
push
push
adcl
fwait
jmp
inc
mov
mov
pop
inc
arpl
scas
test
cwtl
fcmovu
out
mov
push
ud2
les
or
jmp
pop
mov
jmp
cmp
lods
and
cs
jmp
cmp
imul
out
arpl
adc
push
sub
es
dec
inc
daa
sahf
lea
cmp
inc
dec
mov
fstpt
sbb
jg
and
pop
imul
sub
sub
jo
pop
pop
ja
movsl
ss
inc
movsb
add
mov
popf
and
fucomip
fbstp
fcomip
fbstp
filds
movsb
jnp
imul
xchg
daa
ret
mov
jg
dec
jl
incl
rolb
lods
out
ss
sbb
jnp
pop
mov
ljmp
insl
xor
loop
sarl
stos
xchg
fstl
mov
aas
ret
push
pop
test
push
mov
cmp
insb
lahf
addr16
mov
cmpsl
wbinvd
nop
push
sbb
das
and
pop
mov
inc
stos
mov
cmp
das
dec
or
je
xlat
inc
dec
mov
push
pop
or
aaa
jmp
pop
movsl
leave
inc
pop
xor
hlt
mov
sarl
inc
lahf
shll
mov
add
orl
xlat
pop
xchg
jp
mov
daa
push
les
test
add
fwait
and
mov
xor
enter
jnp
jne
ret
cmp
pop
mov
in
xchg
imul
sub
pop
ss
xchg
imul
sbb
cmp
sub
bound
stos
scas
xchg
shlb
repz
mov
cmpl
js
data16
inc
or
and
pop
sti
xor
dec
gs
xor
cmp
pop
adc
inc
add
sub
inc
decb
adc
nop
jb
jp
cs
mov
jge
ss
lret
pop
lock
dec
and
mov
subl
jg
lret
fildll
or
pop
ffreep
add
pop
jae
fwait
insl
mov
fisttps
add
mov
pop
lahf
sbb
sbb
adc
adc
jmp
mov
hlt
out
iret
les
lsl
pop
scas
nop
jge
mov
rolb
dec
or
lret
add
mov
getsec
das
pop
sarb
jecxz
cmp
mov
pop
add
mov
jae
dec
cmpsl
inc
fcompl
sub
fmuls
das
mov
mov
dec
ror
in
adcb
jmp
lea
es
add
push
pop
out
xorl
stos
add
lcall
pop
loopne
pop
rcll
je
mov
lods
aaa
jg
add
pop
js
fildll
inc
filds
add
sub
cmp
subb
fistps
inc
fisttps
shll
push
mov
lahf
fbld
pop
sbb
aas
out
rolb
dec
xor
movsl
push
das
sbb
aas
movsl
push
insb
aaa
daa
ret
pop
ficoml
pusha
ja
mov
jae
arpl
mov
lock
inc
mov
pushl
push
aaa
je
shlb
push
es
mov
mov
ret
mov
enter
and
daa
mov
sbbl
push
pop
mov
xchg
xlat
mov
adc
mov
xor
dec
dec
stos
lods
push
aas
sti
or
xchg
mov
push
insl
loope
xor
add
add
imul
mov
pop
jg
fwait
les
nop
and
mov
imul
daa
mov
repz
xchg
mov
xchg
sbb
movsb
jb
cmp
fwait
insb
movsl
or
fwait
cmpsb
push
js
fistpll
lret
jg
inc
and
testl
sbb
or
in
xchg
xor
lods
push
push
and
mov
fcmovnb
xchg
push
dec
jmp
mov
pop
jo
rorl
push
movsb
mov
outsl
and
ljmp
mov
dec
jmp
les
sub
pusha
mov
push
orl
aas
pop
xorl
cmpsb
jno
xchg
insl
pop
les
aaa
daa
insb
out
mov
pushl
pop
jecxz
pop
push
wrmsr
popl
dec
rolb
add
insl
in
call
jmp
aas
sbb
pop
jnp
jecxz
inc
imul
sbb
xchg
cmpsb
pop
cmp
lods
or
outsb
cmp
push
call
loope
jecxz
dec
sbb
das
scas
add
inc
or
xor
mov
roll
popa
inc
movlps
lret
sub
in
les
sub
inc
sbb
pop
mov
aas
stos
lahf
cmp
xor
lods
add
imul
pop
arpl
arpl
out
mov
js
ja
je
in
pop
pop
ret
mov
sub
xor
xchg
push
jmp
adc
xchg
inc
repz
adc
push
jne
aaa
subl
xorb
fisubrl
jg
js
pop
adc
ja
pop
xlat
pop
xor
push
mov
push
mov
out
fistps
xchg
cs
adc
in
add
jae
outsb
fsubrs
xchg
dec
mov
gs
xchg
sahf
andl
cmpsb
sbb
pop
das
add
lds
jg
xchg
test
rorl
fisttpl
test
dec
pop
aas
xor
inc
pop
ret
inc
ljmp
je
cmp
xor
testb
das
testb
fdivs
aaa
adc
xor
jg
xor
dec
jbe
or
maskmovq
idivl
aas
aaa
pop
daa
or
mov
push
mov
pop
rol
xor
ret
scas
inc
cmpsb
push
push
scas
and
mov
xlat
ja
cmpsl
jl
push
pop
xchg
das
fldl
or
mov
pop
daa
pop
and
add
and
mov
jmp
jnp
sub
sti
pop
xor
aaa
add
mov
mov
xor
mov
xor
addr16
pop
cmpsb
pop
sub
pop
xor
outsl
or
mov
inc
jg
mov
push
and
inc
sbb
cmp
ret
imul
ret
and
xor
shrl
insl
imul
mov
aad
sbb
sbb
add
loope
add
fadds
mov
jg
inc
xchg
inc
test
mov
fnstenv
push
jecxz
mov
not
jecxz
dec
xchg
fmuls
push
mov
jecxz
ss
jp
dec
outsl
push
cmp
and
je
sub
mov
mov
xchg
roll
xor
mov
sbb
and
pop
push
fistps
pop
pop
xchg
shl
cmpb
lods
pop
xor
and
cmpsb
sbb
fisttpl
xor
loopne
cmpsl
adc
les
ret
fcmovnu
sbb
fwait
pop
jbe
ret
sub
mov
mov
aaa
sarl
lret
sbb
xor
xor
push
fdivrl
jnp
mov
mov
or
adc
jecxz
cmp
ret
cmp
pop
packssdw
push
add
fcmovnu
xchg
popa
orl
inc
jp
out
fnsave
jno
inc
push
pop
lds
ja
pop
loope
das
cvtdq2ps
cmc
insl
mov
mov
test
in
mov
aad
out
push
divl
bts
sub
cmp
cmp
pop
data16
inc
jecxz
or
das
iret
jecxz
pop
xorb
jnp
es
push
ss
daa
loope
enter
jmp
nop
and
out
add
test
add
cs
out
outsl
sbbb
shll
pop
hlt
push
pop
push
pop
ja
loopne
rorb
mov
and
sub
push
adc
lea
sahf
sahf
jae
iret
daa
arpl
cmpsb
push
arpl
adc
negl
pop
pop
mov
inc
testb
shlb
mov
xchg
jecxz
testl
mov
mov
das
movsl
movsl
inc
shl
sbb
test
mov
jno
mov
movsb
inc
or
fisttps
sbb
mov
mov
inc
cmpsb
dec
pop
dec
mov
cmpl
xor
in
cmp
inc
mov
jae
outsl
xchg
cmp
push
jae
test
cmpsb
popl
sbb
xchg
aas
add
push
loopne
stos
ret
icebp
jb
mov
rorb
pop
mov
fistl
daa
bound
adc
sbb
js
daa
movb
mov
cs
or
jmp
lods
subb
or
xchg
out
jae
xchg
test
jg
push
ss
subl
adc
xorb
pop
mov
mov
ja
xor
sbb
add
adc
stos
jne
loop
mov
out
lods
les
psrlq
mov
cmp
arpl
lea
fcomi
xor
add
stos
insl
xchg
push
sub
mov
arpl
mov
pop
push
sub
jp
negb
fdivp
add
adc
aas
movsb
cmp
imul
mov
mov
pop
cmp
pop
jg
push
mov
dec
stos
lret
add
inc
inc
ss
and
add
cmpsb
lahf
or
jo
pop
pop
cmp
cmpsl
push
push
mov
je
rclb
ss
sti
or
mov
daa
push
sbb
js
adc
pop
mov
out
pusha
sarl
imulb
push
adcl
dec
xor
pop
and
inc
pop
xor
daa
dec
fcmovnbe
mov
pop
or
add
sbb
inc
pop
imul
orl
xchg
inc
ret
xor
shlb
sbb
lret
jg
subb
scas
pop
mov
testl
mov
inc
sar
aam
and
cmp
out
sti
mov
decl
aas
xchg
ret
lods
jp
outsl
xlat
mov
inc
jl
jecxz
mov
aas
mov
sbb
popa
or
push
xchg
jnp
push
mov
or
testl
sub
ret
cmpsl
adcl
xchg
push
mov
daa
mov
test
repz
jnp
xchg
fnstsw
fisttps
lods
shlb
mov
stos
sti
pop
xchg
or
add
dec
out
add
mov
mov
hlt
cs
in
push
addr16
mov
rorl
popa
xchg
test
pop
xchg
lahf
out
sbbl
sar
lahf
jb
lea
andb
jmp
scas
cmp
adc
sbb
inc
lds
push
mov
xlat
pop
ret
cmp
ja
fldt
lods
adc
fimull
lods
or
aaa
xchg
mov
pop
or
adc
dec
pop
mov
pop
jecxz
mov
pop
das
mov
insl
inc
inc
lahf
fisttpl
cmp
nop
push
xlat
pop
and
mov
xor
inc
mov
jecxz
xor
mov
adc
ret
jp
xor
sbb
mov
outsl
adc
jmp
loop
lcall
mov
psubq
out
stos
xchg
mov
ja
dec
insb
pop
mov
nop
sub
xchg
imul
mov
xor
subl
imul
lods
das
sub
push
xor
fsubrl
das
cmp
ljmp
xor
sub
out
lcall
lods
push
lahf
iret
rclb
mov
lahf
inc
movsb
inc
bound
pop
inc
fisttps
mov
pusha
xor
mov
push
bound
fbstp
cmp
outsb
inc
sbb
addr16
pop
bound
out
lret
jnp
xchg
pop
or
push
fcomps
push
jbe
or
fdivs
sub
imul
lcall
mov
inc
lahf
and
aam
lods
imul
jge
pop
pusha
addr16
xor
arpl
pop
inc
or
cltd
jp
push
out
xor
xor
push
jb
pop
iret
cmpsl
fistl
in
loop
lahf
repz
pop
pop
xor
fwait
and
pop
fisubrl
xor
dec
sub
fbld
sbb
mov
mov
pop
out
repnz
push
daa
xor
in
out
inc
daa
fwait
sub
or
aaa
icebp
xchg
inc
pop
sub
iret
xor
repz
jecxz
cs
xor
mov
adc
jp
ficoml
ffree
mov
sbb
adc
dec
xchg
add
sbb
aam
lret
cmp
dec
lods
arpl
das
call
shll
xchg
sub
pop
sbb
movsb
aaa
sbb
mov
mov
mov
pop
rcrl
xchg
push
das
mov
mov
push
mov
mov
mov
xor
mov
inc
mov
mov
mov
inc
aas
insl
ret
mov
notl
mov
mov
inc
dec
sub
sti
push
pusha
dec
lret
mov
push
bound
insl
add
arpl
push
stos
aam
mov
insb
dec
fwait
jle
or
aam
push
addl
stos
sbb
inc
ret
dec
mov
sbb
pusha
pop
xor
shlb
xchg
subl
add
mov
arpl
sub
mov
push
pop
stos
sub
dec
pop
and
sub
inc
loopne
das
rcrl
adc
lods
imul
dec
add
adc
jmp
or
bound
mov
int
mov
cmpsl
lock
and
clc
push
ds
mov
aaa
mov
fwait
arpl
jae
aas
pop
dec
mov
popf
fimull
xchg
fisubrs
mov
imul
or
rorl
outsl
jno
push
or
fistps
popa
cmp
call
cmpsl
pop
sbb
pop
jnp
push
adc
push
dec
rorb
cmp
ss
adcl
push
movsb
dec
out
imul
js
sarl
mov
add
inc
sbb
fists
shll
jns
cmp
xor
cmpsl
stos
aad
and
jg
xchg
pushaw
push
aaa
pop
dec
insb
add
jbe
mov
adc
jnp
aad
dec
lods
sti
adc
mov
outsb
arpl
repz
mov
inc
scas
pop
or
jnp
adc
jp
inc
mov
sbb
jns
cmp
mov
insb
fcoms
and
das
or
je
cmp
pop
fcoms
pop
outsl
mov
outsl
adc
outsb
cmpsl
sbb
pop
ss
sti
inc
fwait
xchg
push
rcrb
jg
imul
dec
fst
mov
mov
xor
pop
adcl
pop
push
inc
xchg
pop
xlat
jno
mov
inc
jnp
test
ficomps
insl
cmp
push
jae
test
mov
and
mov
aas
jb
jb
or
jecxz
add
mov
pop
mov
and
add
scas
pop
cmp
loope
ret
jnp
dec
jle
insl
jg
out
add
adc
push
add
aaa
xchg
lret
cmp
mov
or
push
sub
imul
lret
shll
sub
mov
inc
lods
or
push
inc
les
push
loope
fcmovnb
out
and
sub
adc
push
xor
mov
inc
push
inc
jb
js
lret
out
dec
out
push
sbb
inc
es
dec
ljmp
out
mov
push
dec
mov
xchg
test
mov
outsl
out
fcomip
push
mov
pop
or
mov
adc
pop
out
mov
inc
fldt
test
jae
push
arpl
jp
pop
cmp
jo
aaa
jg
mov
or
fsubrl
mov
xchg
sbb
sbb
push
push
sti
mov
imul
pcmpeqb
xor
inc
add
fistpl
inc
test
push
mov
lods
or
or
add
mov
and
pop
test
fcomi
add
xchg
sub
dec
xor
dec
and
dec
cltd
dec
push
aas
es
aaa
jecxz
adc
mov
scas
cmp
mov
fs
or
xchg
xor
popa
or
lea
and
je
fildll
push
mov
ja
shrb
data16
fildl
pop
loopne
cmp
cmp
jbe
xchg
sub
imul
inc
mov
decl
inc
jp
scas
lahf
and
fimull
pop
xor
iret
sbb
mov
push
das
rcpps
sub
popa
xlat
inc
pop
stos
xorl
or
imul
ret
fsubrl
mov
jge
sub
test
out
out
cmpsb
scas
or
and
lods
add
lods
push
sbbl
mov
fwait
lret
or
add
mov
aaa
imul
mov
mov
jo
adc
or
xor
mov
jbe
mov
insl
mov
iret
xor
fbld
sbb
scas
out
dec
mov
mov
add
and
fs
push
mov
pop
mull
dec
push
xorl
mov
sub
push
or
jae
add
or
arpl
stos
rorb
pop
add
or
test
pop
rorl
dec
scas
pop
fisubl
pop
aas
add
sbb
sub
out
inc
mov
pop
dec
mov
ds
push
xor
add
aad
repz
outsb
and
inc
out
dec
mov
push
xor
fwait
test
or
jmp
mov
das
jg
inc
jo
addl
pop
push
or
js
inc
cmpsl
add
mov
arpl
and
xchg
cmp
xor
xchg
jne
insl
add
pop
or
mov
push
scas
sti
iret
mov
adc
jo
and
ret
add
addl
jmp
sub
dec
imul
jns
mov
outsb
cmpsl
xor
stos
xchg
and
push
sub
cmovno
adc
nopl
das
cmp
mov
cs
mov
sbb
mov
scas
cmp
shlb
fwait
xor
jb
dec
scas
testl
add
aaa
xor
jnp
shrb
xchg
mov
xchg
bound
scas
ss
jbe
fwait
das
xchg
pop
movsl
lods
stos
ffreep
lret
les
rcll
inc
and
push
scas
xchg
scas
inc
push
and
dec
andl
xchg
mov
jecxz
mov
out
push
or
xor
testl
sti
into
inc
dec
les
pop
xor
jbe
mov
pop
adc
aaa
outsb
shll
not
das
add
cmp
cmp
or
dec
out
out
adc
xchg
xchg
out
pop
mov
add
jecxz
insl
outsl
jnp
or
sub
lods
add
add
fwait
test
or
neg
stos
jno
push
cmp
dec
lcall
xorb
fisubrl
push
iret
sahf
rorl
mov
push
ljmp
pop
mov
mov
lea
sbb
movsl
mov
mov
jb
ja
and
xchg
es
pop
xor
aas
pop
jbe
add
inc
mov
inc
lods
xor
jae
cmp
mov
lea
dec
pop
push
xlat
mov
fsubrs
adc
fs
ret
lods
pop
repz
rcrb
fists
xor
daa
movl
ja
test
leave
les
mov
or
mov
push
jecxz
fadds
mov
jecxz
inc
mov
pop
mov
je
aam
jmp
xor
mov
lds
and
mov
arpl
aam
test
mov
add
xlat
mov
fwait
dec
gs
sub
daa
jnp
imul
jae
pop
mov
sub
xchg
iret
cmpsl
pop
inc
lods
mov
repnz
add
cmp
adcb
popa
fistps
outsl
daa
sahf
movl
aaa
mov
mov
ret
notb
dec
xchg
jecxz
mov
sbb
pop
sbb
add
and
testb
inc
mov
pop
mov
popa
adc
dec
xchg
aaa
outsl
dec
pop
or
movd
fsubrs
push
adc
xlat
sub
bound
jg
mov
out
push
iret
cmp
dec
xorl
xor
pop
inc
push
cmc
mov
add
out
aam
inc
mov
sub
jecxz
inc
in
les
arpl
dec
adc
inc
iret
addr16
addr16
add
test
fwait
mov
add
inc
or
cmc
mov
pop
xchg
pusha
cmpsl
mov
pushl
jecxz
push
mov
and
push
aaa
mov
inc
test
andl
push
scas
imul
sbb
gs
aam
aaa
xor
orl
mov
stos
iret
and
test
fists
out
add
sbb
xchg
sub
pop
inc
inc
xor
pop
xorl
cmpsl
sub
mov
stos
cmp
insb
pop
out
xchg
xor
jbe
or
iret
mov
mov
inc
pop
aaa
ret
add
insl
shlb
fcomps
imul
pop
imul
call
testb
cmovnp
or
lahf
or
movsl
inc
outsb
xor
mov
scas
inc
je
push
inc
and
and
pop
xchg
pop
fildl
cmpsl
fistpll
xchg
pop
pop
sbb
or
mov
xor
pushl
bound
es
cmpsl
pop
mov
jge
or
shrb
ss
imull
mov
loop
pop
sbb
push
adc
aaa
orb
sbb
sbb
mov
xlat
xor
pop
and
addr16
xor
or
cmp
arpl
jecxz
cmovns
mov
xcrypt-ctr
cmpsl
fidivl
sti
mov
mov
sbb
adc
fdivrl
aaa
push
stos
shlb
pop
xchg
inc
ja
mov
ficoml
xor
xor
ja
push
inc
fst
jnp
fistl
sub
pop
and
lea
aaa
pop
sub
insl
cmp
xchg
jae
repz
lcall
or
pop
jle
cmp
test
pop
addr16
mov
ret
fwait
das
not
mov
loopne
jg
sub
cmpps
add
mov
fisubrl
fwait
pop
and
mov
xchg
dec
and
sub
pop
or
xchg
aas
inc
movsb
push
mov
mov
addr16
mov
pop
pop
xor
pop
sub
idivb
popa
add
mov
test
cmovno
mov
les
xor
test
je
sub
add
imull
cmp
int
inc
sbb
iret
lret
popa
mov
and
scas
lods
push
xchg
pop
incl
push
mov
or
push
or
fists
fidivl
mov
imul
push
sbb
in
sbb
inc
lods
mov
xor
out
fistps
pop
test
inc
lret
mov
mov
push
fdivs
cmovae
xchg
outsb
xorl
aaa
dec
push
sub
insl
xlat
es
mov
push
jnp
ja
jl
pop
seta
rcrl
mov
push
xor
pop
xor
push
jg
mov
arpl
jbe
add
xor
xchg
push
das
pop
inc
pop
pop
sbb
push
cmpsl
test
inc
pop
lods
aad
pop
xor
lcall
lods
or
sti
imul
xor
push
mov
jb
adc
pop
pop
fidivs
lds
outsl
movl
clc
aam
bt
or
pop
xorb
xchg
add
ja
test
mov
js
cmp
xchg
jg
inc
jmp
jecxz
push
imul
inc
insl
mov
orl
inc
cmp
ret
xchg
lods
loop
or
iret
and
adc
dec
add
call
mov
nop
mov
rorb
mov
jmp
inc
iret
insl
mov
xchg
jb
lods
ret
dec
mov
out
daa
push
popa
pop
outsb
push
jg
lods
adc
data16
aaa
lahf
adc
push
rolb
insb
adc
idivl
jae
outsl
or
test
test
mov
sub
xchg
lock
mov
pop
ja
ret
pop
sbb
in
xchg
pop
sub
pop
jae
fiaddl
mov
shll
movl
xchg
add
jne
out
outsl
repnz
lea
cmpsl
popa
mov
add
inc
outsl
inc
addr16
rorb
push
xor
ja
ja
shrb
fimull
push
inc
aaa
out
cmp
inc
pop
mov
inc
aaa
push
in
stos
jae
addr16
rolb
adc
inc
cli
rclb
sbb
adc
arpl
daa
sub
push
or
xlat
adc
sub
insl
lods
dec
sub
fildll
nop
fisttpl
xor
loopne
ret
push
xchg
fistps
sub
ss
test
jnp
sub
push
popa
movsb
pop
push
xchg
sub
pxor
scas
fsubrs
lock
xor
mov
bound
lods
add
roll
add
rep
and
sbbl
push
pop
jae
popa
xchg
je
mov
mov
cs
sbb
in
pop
ret
add
das
jae
inc
fcmovbe
and
stos
jno
repz
mov
sbb
cmp
or
sti
jae
mov
scas
pop
rolb
and
lahf
add
xor
mov
stos
movsb
inc
cmp
inc
pop
inc
sub
and
test
sti
inc
fbstp
outsl
mov
lahf
sbb
pop
xor
adc
aaa
mov
rorb
ja
pop
add
mov
aas
aaa
push
inc
imul
push
sub
mov
adc
outsb
scas
sub
inc
ret
sub
add
or
xchg
or
or
add
sti
outsb
lds
mov
fwait
outsb
mov
fwait
push
and
dec
inc
div
dec
arpl
in
mov
mov
clc
mov
xchg
cmc
icebp
ss
cmpb
lds
dec
dec
pop
lods
pop
pop
pop
jo
cmp
mov
dec
cmp
push
loopne
cmpsl
mov
or
movsl
adc
clc
cmp
mov
inc
xchg
jmp
mov
cmp
fwait
mov
imul
fimull
ljmp
icebp
test
ja
dec
inc
or
mov
sbb
or
pop
out
enter
adc
or
jnp
sbb
push
sahf
and
mov
pop
shlb
adc
mov
mov
sbb
add
mov
dec
dec
loopne
ss
daa
arpl
xor
xchg
ror
inc
loop
and
xor
repz
lea
xchg
and
add
jne
jmp
xor
inc
pop
cmp
sti
les
mov
ret
es
dec
out
xchg
dec
imul
mov
sub
fwait
push
or
jecxz
imul
out
mov
inc
pop
sti
dec
addl
lahf
data16
xchg
mov
inc
or
popf
and
add
loope
imul
ja
movsb
adc
mov
sbbb
pop
inc
mov
inc
mov
fmull
inc
ja
iret
shlb
jcxz
inc
dec
lcall
mov
es
paddq
xlat
out
dec
in
or
mov
pop
cmpsb
repz
xor
aas
pop
mov
sub
gs
dec
ljmp
sub
bound
pop
daa
inc
pop
inc
ret
roll
push
lods
sbb
pop
cmp
cmp
setnp
push
inc
dec
dec
cmp
push
ret
xlat
pop
xlat
dec
sub
jbe
aas
iret
icebp
fimuls
mov
mov
out
mov
call
push
pop
pop
iret
ja
add
xchg
mov
jb
jmp
faddp
inc
arpl
aaa
push
lods
ficompl
push
jmp
loopne
add
popw
lret
inc
outsl
adc
dec
das
sbb
xor
adc
popa
pop
mov
mov
inc
dec
and
pop
lods
fstpt
cmpsl
adc
clc
out
pop
push
inc
or
push
dec
mov
adc
jmp
cmpsl
sub
mov
xor
movsl
add
sub
ud0
mov
mov
cmpsl
xchg
add
scas
mov
xchg
lea
mov
push
xor
push
mov
pop
cmp
inc
or
adc
xchg
adc
lds
mov
sbb
stos
inc
mov
xchg
sub
and
mov
imul
stos
push
loope
push
pop
cmp
movsl
sbb
mov
xchg
or
pop
lock
popa
xlat
aaa
dec
push
stos
xchg
push
inc
loop
setnp
cmpsb
mov
mov
pop
inc
mov
xchg
mov
add
sub
xchg
or
stos
data16
pop
out
push
stos
sub
fisttpl
inc
lods
daa
stos
inc
call
sti
pop
in
dec
mov
pop
iret
xor
orl
push
loop
jle
jg
add
push
xor
xchg
sbb
lea
mov
pop
ja
sbb
nop
pop
dec
and
add
pop
divl
outsb
push
jg
sub
ss
shll
mov
stos
aaa
das
add
xlat
xor
mov
jecxz
ret
xlat
push
pusha
and
fucomip
mov
fwait
mov
daa
inc
imul
push
jmp
mov
movsb
xchg
inc
out
aam
mov
add
stos
test
mov
inc
push
mov
or
sbb
xchg
mov
inc
push
push
rcrb
xor
sbb
xchg
inc
test
aas
dec
fists
or
loope
dec
lret
arpl
movsb
push
mov
pop
je
push
pop
jecxz
inc
or
lds
xchg
push
pop
fisubl
jecxz
scas
adc
add
arpl
pusha
xchg
mov
push
pop
imul
push
cmp
mov
divl
xor
fcmovbe
imul
add
push
inc
sub
movsb
inc
insl
mov
add
jecxz
movsl
adc
pop
testl
jecxz
jbe
pop
jmp
fwait
sbb
das
mov
pop
cmpsl
jo
mov
xor
addr16
or
iret
jae
adcl
sub
sub
jbe
pop
or
mov
mov
mov
sub
outsl
or
mov
dec
pop
push
sub
lcall
js
daa
outsl
cmp
dec
push
jbe
sti
fistps
mov
mov
fs
decl
rcl
inc
punpckldq
jae
push
mov
pavgw
pop
rol
cmp
test
sti
rolb
add
or
js
fucomi
inc
sbb
xlat
or
mov
pop
repnz
or
xlat
fldenv
mov
pop
mov
push
pop
jecxz
mov
inc
jae
push
push
sub
jl
push
jno
pop
stos
inc
pop
mov
cmp
xorl
out
jmp
jge
xor
inc
aaa
sub
in
testl
ret
scas
xchg
xchg
dec
or
adc
pop
adc
hlt
test
nop
arpl
aaa
and
scas
test
mov
imul
push
mov
insl
sub
xlat
out
pop
and
out
test
loope
adc
test
or
xor
add
nop
push
sub
ret
and
xor
das
jae
xchg
mov
fwait
imul
arpl
push
add
mov
push
inc
int
push
daa
pop
jmp
push
mov
cs
sub
test
push
aaa
lods
call
aaa
xorb
ret
xor
divb
cmpsl
lahf
sub
mov
sub
jae
cmp
test
mov
and
inc
inc
xor
repz
add
dec
dec
mov
outsb
xor
pop
xor
fldt
test
push
iret
or
and
inc
insb
mov
cmp
push
add
in
adc
xchg
ds
xor
ja
cmp
mov
xchg
bound
mov
cmp
repz
dec
arpl
xchg
xorl
ret
adc
aas
sub
sahf
aad
inc
sub
pop
les
nop
sub
iret
out
xchg
xor
popl
mov
subb
adc
xor
fwait
push
daa
lods
movsb
out
rcrl
fwait
jno
xchg
bound
aaa
add
fmuls
sub
mov
lock
sub
pop
cmpsl
es
inc
add
pop
xchg
fsubrs
cmp
mov
push
adc
xchg
and
test
imul
mov
lahf
jg
rorb
xchg
lret
cmp
add
xchg
or
jbe
jg
inc
bound
popf
out
jbe
movsb
fisubl
xor
inc
hlt
adcb
jae
outsb
test
push
stos
inc
pop
mov
mov
mov
xor
push
inc
fisttps
and
or
cmp
mov
ja
insl
stos
sub
cs
shlb
jbe
dec
repz
and
pop
stos
or
pop
nop
mov
stos
das
xor
call
fildl
rcrb
mov
sub
test
xor
adc
mov
outsl
nop
aas
inc
xor
ja
andnps
pop
pop
fwait
jecxz
rcrb
pop
pop
test
outsl
out
movsl
nop
inc
xlat
xor
sub
fbld
cmc
jne
imul
mov
stos
or
rolb
sbbl
jecxz
inc
push
mov
out
jb
inc
xorl
dec
jnp
sub
push
dec
add
xor
call
scas
and
scas
pop
mov
ja
insl
fwait
test
pusha
aad
sub
fmuls
jge
pop
jp
xor
ds
test
mull
add
mov
and
pop
movsl
ss
rep
adc
sbb
add
push
pop
fwait
or
pusha
mov
sti
xor
cmp
sbb
ja
xchg
add
or
fildll
lods
ja
push
sbb
fiaddl
cmp
push
scas
stos
cmp
fdiv
movsl
xor
dec
test
xor
adc
dec
mov
divl
sbb
adc
pop
ret
sub
xor
movsl
lahf
fsubrs
mov
fsubr
dec
nop
cld
add
xorl
ja
xchg
push
scas
out
pusha
pop
fiaddl
and
add
ja
xor
dec
pop
lods
inc
mov
out
rorl
test
mov
add
inc
je
sub
mov
dec
adc
pop
lea
xchg
stos
pop
xor
sbb
cmpsl
push
push
xchg
sti
add
push
pop
pop
imul
mov
out
sub
push
push
mov
shrb
pop
sbb
inc
aas
xor
idivl
pushl
repz
xor
dec
fistl
subl
adc
and
jmp
popa
cmpsl
lock
cmpsl
pop
xor
out
or
js
and
iret
das
scas
cmp
push
imul
sub
lahf
cs
push
and
inc
xor
dec
pop
fwait
jae
dec
or
dec
cmp
lea
add
aad
pop
daa
out
cmpsb
leave
inc
dec
xor
xchg
sbb
aaa
sarl
mov
push
aam
repz
test
arpl
popa
test
inc
int3
aam
pop
inc
mov
cmp
mov
adc
cs
mov
inc
scas
jg
cmp
loop
dec
repz
adc
lret
mov
jle
or
push
xlat
inc
sbb
lahf
jg
sub
gs
pusha
adc
xlat
pop
test
pop
scas
inc
out
push
mov
mov
xlat
in
pop
xor
push
xor
and
nop
cli
push
mov
div
jbe
inc
aaa
jae
xchg
add
pop
loopne
movsb
dec
xor
inc
sahf
pop
sub
adc
mov
cltd
not
xchg
mov
fimull
insl
aam
jmp
shll
pop
and
rorb
inc
xlat
lcall
xchg
mov
sahf
cmp
xchg
xchg
inc
fwait
mov
repz
pop
ret
das
mov
je
das
dec
sbb
mov
dec
pop
stos
test
mov
adc
pop
das
sub
ds
jae
sbb
lret
ficompl
add
stos
or
pop
cmp
mov
jae
lret
xor
fidivs
and
nop
push
add
popl
dec
sbbl
add
inc
lcall
inc
ret
aas
or
or
pop
inc
movd
lret
sub
dec
xchg
stos
jmp
xor
jecxz
add
outsl
cmp
sub
incl
sub
outsw
mov
scas
fsubrs
fldt
jmp
and
imul
ret
pop
sub
ret
inc
push
mov
adc
jb
mov
fsubs
inc
adc
fcoml
aaa
sub
xor
add
inc
cs
and
fistpll
outsl
inc
adc
mov
dec
mov
fisubrs
rep
add
pop
pop
imul
sub
ja
xchg
mov
cmpsl
or
sbb
repnz
ss
push
or
cmpsl
sahf
outsl
fistpl
stos
inc
sbb
fsubs
in
pop
lock
xchg
daa
bound
out
xor
adc
inc
sbb
pop
test
inc
jecxz
stos
stos
dec
and
mov
mov
fmuls
dec
out
sub
mov
roll
push
inc
jecxz
add
jmp
aas
subb
fildll
pop
ss
sahf
xlat
pop
lret
push
sarb
add
jnp
in
push
scas
filds
pop
sub
jmp
lods
adc
jp
enter
pop
inc
jmp
mov
xor
fstpt
mov
inc
subb
xor
sbb
adc
fwait
inc
inc
sub
loop
rorl
das
pop
lods
fidivl
stos
movsb
mov
sub
and
inc
incl
dec
out
inc
outsb
adc
or
iret
adc
add
cmp
xor
out
or
pop
or
dec
arpl
nop
jb
jmp
mov
sub
push
push
and
pop
scas
mov
es
or
inc
pop
pop
aaa
or
adc
pop
adc
jbe
lret
inc
aaa
out
jo
cmc
out
xlat
mov
lock
add
cmovae
inc
add
pop
sub
idiv
ja
scas
aam
mov
adc
mov
or
push
popa
xor
push
lock
jae
outsl
xchg
popa
xlat
jmp
xchg
mov
insl
and
push
mov
pop
and
mov
loope
lcall
and
pop
add
pop
inc
push
xor
mov
and
repnz
jg
pop
mov
xor
rcl
inc
add
ret
dec
or
adc
test
or
aas
mov
xchg
lods
mov
daa
and
aas
jnp
adc
dec
fisubl
adc
and
popf
cmpsb
arpl
lods
fdivrs
adc
xchg
or
testl
xorl
je
lret
lcall
mov
cmp
fdivs
fstpt
xor
pop
mov
mov
dec
mov
jg
jmp
mov
testl
rcrl
sbb
lahf
inc
bound
scas
sbb
jnp
pop
fwait
inc
mov
iret
dec
ret
iret
btc
adc
scas
popf
shrb
movsb
mov
sets
push
imul
xor
sbb
iret
fwait
xor
outsb
gs
fists
popf
shrb
push
xchg
ffreep
rorl
mov
popf
shrb
or
rorb
sbb
or
stos
sti
xlat
xlat
pop
mov
fwait
pop
lahf
jae
push
mov
dec
out
sbb
test
dec
shlb
lret
sbb
sbb
and
rcrl
cmp
inc
pop
jg
rolb
fcmovnu
adc
xchg
add
mov
mov
xlat
inc
movsb
mov
hlt
sbb
add
xorb
mov
adc
sub
or
outsb
fdivs
aaa
hlt
push
jmp
jnp
daa
arpl
cmp
inc
mov
aad
xchg
and
imul
push
push
add
test
adc
jo
pusha
scas
bound
add
mov
jbe
xchg
jle
add
inc
popa
ret
cmp
imul
adc
mov
adc
dec
fsubrs
add
add
xchg
or
and
arpl
dec
push
mov
jmp
ret
aaa
pop
inc
add
ret
sub
pop
mov
icebp
lea
repz
aas
leave
cmpsl
pop
and
xor
lods
mov
sbb
inc
xchg
jmp
movsl
or
jae
and
push
cmpsb
test
dec
lods
mov
in
xor
inc
lahf
jmp
inc
add
lods
sbb
iret
fwait
movsl
ret
jp
add
aas
sbb
fiaddl
stos
inc
stos
lea
inc
pop
add
or
inc
inc
sub
xchg
fwait
sub
pop
ret
xor
and
lods
add
add
mov
add
xor
or
out
dec
and
xchg
xor
fdivs
fbstp
inc
lea
dec
inc
cmpsb
adc
scas
filds
mov
shlb
xor
pop
inc
inc
mov
mov
repz
jae
mov
sbb
sub
inc
rolb
sub
xchg
pop
push
test
mov
mov
pop
cmp
xchg
sahf
arpl
movsb
inc
add
insb
add
push
das
fwait
daa
xor
stos
ss
dec
addr16
and
dec
mov
or
mov
push
cmp
xchg
sbb
or
add
ret
sub
ret
mov
or
pop
out
ljmp
mov
push
sbb
cwtl
fmull
xor
stos
adc
daa
lods
movsb
push
adc
xchg
aas
inc
jbe
sub
int
mull
jmp
mov
mov
xlat
aaa
pop
insl
shrl
incl
pushl
jnp
inc
movsl
sbb
mov
ret
inc
dec
xchg
outsb
or
dec
mov
and
adc
lds
or
pop
loop
arpl
xorl
push
push
fldt
jae
test
and
call
ss
inc
or
in
xchg
xor
imul
or
jecxz
pusha
xor
mov
pop
or
jecxz
je
hlt
mov
inc
fbstp
dec
loopne
push
push
sub
cmpsb
gs
daa
ret
pop
gs
push
insl
push
mov
push
sbb
mov
daa
jmp
inc
subb
cmp
movsb
in
sbb
xlat
outsl
mov
test
test
xor
push
inc
rolb
bound
sub
mov
sbb
mov
or
aad
push
xchg
push
jmp
inc
xor
mov
and
jae
fsubs
stos
add
iret
and
or
cli
sbbl
lods
out
dec
jmp
xlat
xor
pop
mov
jp
pop
add
mov
in
sub
push
jecxz
fwait
daa
insb
sbb
aad
jnp
lods
push
aam
ja
mul
jmp
sbb
aas
pop
outsl
sbb
or
mov
jmp
repz
jmp
mov
arpl
push
jecxz
lret
jmp
pop
mov
and
sbb
shl
mov
ret
dec
pop
test
mov
xor
mov
pop
dec
imul
push
add
cltd
aaa
xor
insl
lahf
repz
push
imul
test
pop
cmpsb
aaa
cmp
or
lea
movzwl
inc
add
cmp
mov
arpl
push
mov
fadds
jg
inc
lods
and
jmp
sbb
xor
xchg
lea
add
subl
dec
fimull
addr16
inc
jbe
sbbb
xor
push
push
pusha
adc
xchg
cs
push
ljmp
add
inc
popf
cmp
jb
xor
push
out
dec
imul
cmpsb
ja
int3
les
xor
and
dec
loopne
or
xor
cs
mov
push
add
stos
xorl
and
xor
mov
sub
sti
xchg
test
add
or
aas
cmpsl
les
popf
aam
cmp
sub
inc
inc
aaa
cmp
imul
xlat
outsb
pop
mov
nop
fildl
inc
outsb
pusha
adc
dec
pop
xlat
dec
aaa
inc
sti
adc
mov
loop
pop
aas
sbb
add
dec
push
ja
adc
movsb
nop
or
pop
inc
mov
ret
daa
xchg
pop
inc
dec
les
ret
pop
dec
sbb
icebp
ss
lahf
lret
lahf
push
xchg
sub
pop
daa
filds
jbe
incl
and
mov
mov
mov
jno
jno
repz
adc
mov
dec
les
xor
push
pop
gs
pop
lea
ret
xchg
fcomi
shrl
xlat
push
or
lods
insl
stc
lock
add
cwtl
sbb
lahf
fiaddl
inc
lods
xchg
inc
daa
fisubs
aaa
test
movsb
adc
push
and
aas
pop
mov
cmp
lret
pop
das
scas
xchg
es
jbe
push
pop
adc
xor
and
lods
or
jo
data16
xchg
xor
inc
cmpsb
cmpsl
dec
movsb
je
xchg
adc
jecxz
test
mov
mov
inc
cltd
push
or
iret
sub
outsl
dec
cmp
lahf
outsl
cwtl
es
out
add
cmp
mov
aam
push
pop
xchg
xor
xorb
aas
xchg
sbb
mov
jae
inc
movsb
adc
lods
cvttps2pi
mov
test
bound
pop
push
fwait
sbb
fcomps
sti
cli
sbb
pop
push
and
mov
test
jnp
adc
es
sti
jae
push
or
arpl
insl
sbb
and
cmpsl
mov
movsl
dec
addb
inc
cwtl
outsb
insl
cmp
xorl
mov
mov
inc
pop
mov
xor
add
push
test
jno
mov
ret
mov
das
daa
inc
mov
scas
xor
adc
xor
sbb
es
and
mov
jge
fwait
ret
or
in
xchg
xchg
mov
xor
ss
movl
cmp
ret
insl
sbb
outsl
mov
mov
jecxz
mov
sub
lret
inc
sti
incl
dec
mov
add
xchg
jnp
sarl
push
pop
xorl
and
cmpsl
add
adc
xor
jae
dec
jne
mov
mov
pop
ss
mov
mov
js
or
rorb
fnsave
sub
test
push
dec
mov
and
inc
gs
pusha
rep
jg
adc
movsl
adc
adc
fistl
outsl
fistpll
test
das
inc
jae
mov
dec
imul
gs
rorb
jae
add
mov
ret
xlat
push
push
xor
ja
daa
add
outsl
cmc
scas
stos
xchg
xchg
scas
mov
outsl
xor
movsb
test
lahf
mov
ja
sti
inc
stos
and
sbb
stos
test
adc
mov
xchg
mov
pop
testl
jg
stos
hlt
xchg
cmp
push
fdivs
fildll
outsb
xchg
mov
and
es
xlat
jl
add
out
lcall
add
mov
sub
mov
test
imul
dec
imul
lret
daa
aam
imul
sub
xor
fcmovnu
fisubrs
sar
dec
lods
sbb
pop
adc
and
mov
xchg
push
shll
push
test
xorl
mov
pop
nop
and
fcmovbe
push
add
rclb
or
pop
cmp
ds
icebp
add
push
loop
fwait
xchg
adc
out
imul
mov
push
scas
fwait
mov
shr
aas
push
je,pt
arpl
push
and
aas
stos
add
inc
aas
aam
push
dec
movsl
clc
sub
jg
dec
loop
mov
add
jg
mov
imul
adc
fcmovnbe
xlat
mov
es
pop
loopne
out
add
xlat
jnp
lea
pop
dec
enter
sub
xchg
stos
add
jae
add
arpl
xchg
mov
movsl
mov
mov
out
or
test
pusha
jg
mov
inc
insb
daa
outsl
push
push
sbb
arpl
dec
fcoml
pop
movb
outsl
lret
adc
jmp
outsl
and
or
mov
jecxz
and
pop
mov
ret
dec
jecxz
int
push
loopne
dec
arpl
popa
ret
filds
lahf
rolb
add
lods
pop
adc
dec
cmovg
mov
aas
mov
xchg
out
scas
mov
xor
adc
inc
fnstsw
fmuls
jg
lds
inc
mulb
dec
mov
imul
ja
in
cmpsl
xor
lahf
incb
fwait
in
sarb
inc
ffreep
pop
pusha
daa
pop
lret
outsb
mov
gs
fisttpl
mov
loop
aaa
inc
mov
movsl
mov
movsb
mov
das
mov
pop
sub
inc
iret
fwait
inc
in
mov
xchg
sub
dec
fadd
add
adc
xor
ja,pn
ret
mov
fadds
daa
mov
inc
mov
add
and
pop
pusha
sbbl
mov
aas
xchg
sub
dec
inc
xor
mov
sbb
insl
fisubl
lods
arpl
push
pusha
daa
mov
sbb
cs
inc
or
lods
pop
cmp
scas
arpl
fldt
cmpsl
ja
pmaddwd
arpl
test
daa
mov
adc
outsl
pop
aas
and
xchg
fisubrs
out
sbb
and
or
adc
pop
test
pop
jmp
dec
loop
imul
stos
xchg
pop
inc
mov
dec
pop
lahf
cmp
ss
out
mov
pop
scas
mov
movl
inc
adc
xor
pop
cmp
test
cmp
adc
sub
and
mov
inc
bound
inc
fistl
sub
nop
sub
outsb
mov
sub
pushl
inc
push
fdivs
in
addb
pop
xchg
mov
out
mov
repz
lods
adc
inc
dec
out
out
incl
mov
add
test
lods
pop
shrl
dec
sbb
mov
jo
pop
jg
shrl
scas
cmp
pop
test
outsl
aas
sub
add
dec
pavgw
pop
sub
fsubrs
pop
inc
mov
addr16
movsb
ret
mov
ds
mov
pop
cmp
icebp
fists
xlat
lar
xor
imul
les
inc
addr16
dec
imul
push
adc
fcoms
test
lahf
das
fbld
jg
adc
push
add
add
iret
dec
loopne
push
pop
xchg
mov
or
jmp
pop
bound
push
mov
xor
popa
call
les
inc
mov
out
fisttpl
testl
scas
fisubrs
cmovle
jecxz
cmp
cmp
push
lahf
jmp
mov
inc
pop
add
dec
pop
ja
lods
push
nop
mov
or
fstpt
mov
dec
mov
push
sub
nop
add
dec
movntps
and
dec
xor
push
sbb
mov
inc
movsb
xor
out
cmp
stos
mov
test
add
add
out
jecxz
add
mov
data16
aas
add
cmp
pop
decl
test
pop
lahf
xor
mov
sub
pop
popa
mov
arpl
addl
and
movl
adc
and
pop
ffree
sub
daa
add
int3
inc
iret
push
mov
mov
js
addr16
imul
mov
pop
xor
rclb
mov
pusha
inc
mov
push
decl
xor
movsl
enter
mov
mov
inc
inc
mov
mov
divl
rcr
les
xchg
ss
mov
lods
mov
sbb
and
daa
fisttpl
daa
inc
out
pusha
aad
jge
sub
pop
and
push
dec
aaa
fdivs
lods
filds
lods
pop
sti
out
cmp
pop
dec
fidivs
bound
mov
es
das
push
enter
imul
pop
xorl
je
sarb
push
bound
adc
mov
mov
push
dec
sbb
out
hlt
jno
insl
jmp
xchg
pop
mov
arpl
daa
cmc
xor
inc
push
bound
and
shlb
push
lods
out
push
aam
pop
push
cs
and
scas
addr16
xor
jecxz
aaa
fstpt
or
mov
in
js
mov
add
orl
adc
aas
xor
push
test
xor
jae
dec
popa
movsl
outsb
push
adcl
mov
pop
mov
jecxz
stos
xchg
jno
lret
lcall
push
lcall
test
jnp
subl
outsb
mov
outsb
daa
and
xor
xchg
test
iret
inc
sub
inc
ret
xchg
jg
xchg
sub
inc
fisttpl
xchg
push
or
dec
arpl
push
push
shlb
sub
jecxz
lds
dec
xlat
mov
aaa
ja
xchg
dec
fwait
jnp
sbbl
push
cmpl
inc
inc
lods
add
shlb
loopne
out
testb
movsl
mov
xor
xor
and
xlat
mov
test
xor
jecxz
arpl
and
sub
jge
xor
pop
imul
or
sub
lret
xchg
or
cmp
mov
out
jp
jbe
xchg
ret
mov
xchg
sub
ret
arpl
or
or
daa
push
lret
inc
inc
out
jae
xor
xor
orl
test
xchg
jmp
mov
cmpl
ret
jbe
mul
lahf
insl
lods
jecxz
arpl
inc
and
arpl
scas
adc
and
movsb
shrl
inc
ss
lods
adc
arpl
push
lock
fistps
aas
repz
shl
cmp
pop
or
mov
movsb
adc
mov
mov
and
shll
sbb
repz
in
cmp
xchg
ja
pop
ss
xlat
fwait
pop
setb
sub
xor
xor
adc
mov
jnp
aam
shrb
out
test
xchg
js
daa
push
inc
sbb
aas
xor
or
dec
add
add
or
cmp
jnp
mov
imul
movsb
ds
sub
pop
out
push
add
ja
and
add
shrb
fwait
hlt
add
fstpl
cmp
or
fiadds
lods
mov
xchg
bound
or
push
lcall
daa
inc
sbb
adc
daa
arpl
addr16
dec
inc
jo
xchg
inc
add
scas
add
fwait
mov
fdivs
mov
push
mov
xor
popf
aad
aas
jae
mov
adc
inc
aas
mov
lahf
pusha
lods
js
dec
imull
mov
push
scas
sub
adc
cmp
jae
daa
and
data16
fmuls
rorl
or
loop
gs
pop
dec
xor
sarl
rorb
mov
outsl
mov
pop
adcl
out
xor
jb
lahf
lret
xor
test
test
mov
mov
xchg
lods
cmpsb
mov
dec
decl
addb
lahf
arpl
or
xor
cmpsl
inc
inc
adc
and
inc
test
rclb
sets
inc
sub
xor
fcomps
aas
ja
and
cmpsb
bound
shlb
push
imul
pop
inc
fwait
mov
xchg
jbe
iret
sbb
mov
sbb
outsb
add
mov
xor
arpl
inc
arpl
mov
pop
or
xor
out
rolb
outsb
outsl
outsl
xorl
dec
test
fstpl
iret
fwait
jnp
lea
cmc
or
scas
inc
sbb
jno
jno
arpl
inc
es
iret
scas
mov
in
shrb
xchg
add
cmpb
pop
dec
lahf
dec
add
inc
inc
lcall
mov
pop
mov
rorl
cmpsb
mov
push
insl
jmp
xor
inc
mov
sti
add
sub
bt
mov
aaa
testb
lods
and
rcl
into
inc
jno
push
xchg
inc
cmp
sub
xor
inc
js
paddsb
dec
out
mov
dec
pushf
out
xchg
mov
xor
mov
stos
mov
push
fisubl
dec
mov
inc
lahf
fildll
mov
js
aaa
out
or
or
sti
jp
mov
lahf
xchg
xor
push
bound
mov
and
push
aaa
dec
popf
push
jbe,pn
jnp
mov
das
filds
fisubl
test
dec
push
mov
sub
xor
push
outsl
sti
cs
xchg
mov
add
cmpsl
addl
cmp
pop
ja
test
pop
lret
js
ss
addr16
fildl
xchg
nop
sahf
aas
lret
xchg
out
adc
popa
inc
sbb
xchg
mov
pop
xchg
pop
jb
dec
xor
cltd
ljmp
daa
adc
cmp
aaa
push
or
cmpsl
sti
stos
movsb
mov
inc
inc
imul
iret
inc
sub
test
cmpsl
adc
repz
pop
notl
sbb
xlat
outsl
into
lods
push
push
push
aas
dec
jecxz
pusha
xchg
sahf
adcl
out
push
push
sub
ret
dec
sub
or
add
push
fwait
jno
inc
xor
es
aaa
xchg
push
pusha
or
cmp
jne
mov
or
ss
inc
mov
adc
mov
das
daa
ja
dec
pop
hlt
mov
xchg
cs
or
push
dec
pushf
aaa
out
outsl
int
fisubrs
fisttps
movsb
inc
pop
out
mov
jmp
out
inc
mov
jg
mov
aaa
inc
es
or
mov
cmp
xorl
push
stos
or
pop
ret
das
aaa
pushl
movsl
shl
add
jae
inc
fstpt
adc
lods
push
mov
mov
ficomps
sub
or
loop
mov
mov
mov
filds
imul
ret
mov
aad
jae
mov
sub
push
aaa
dec
out
adc
xorb
leave
rorl
xor
cmp
aaa
cmp
mov
jnp
jnp
lods
clc
push
sbb
push
movsl
rcl
xchg
mov
incl
in
mov
dec
jae
movsb
push
cmpsl
lahf
int3
les
inc
or
aaa
cmp
test
mov
ret
pop
jbe
bound
dec
aas
mov
add
movsl
push
or
enter
add
aas
push
pop
mov
push
fisttps
pop
test
add
mov
sbb
sarl
fbstp
jecxz
inc
lods
fcmovb
add
cmpb
xchg
push
xchg
dec
push
push
lcall
inc
les
dec
lahf
sahf
lods
pop
mov
or
ja
adc
pop
adc
popa
test
pop
inc
mov
stos
ljmp
xlat
mov
insl
cmpsl
push
mov
push
pop
insl
lods
nop
shl
mov
js
daa
sbb
ret
lds
add
lods
test
cmp
lock
negl
repz
jmp
lahf
inc
pop
mov
popl
lcall
and
ja
or
fimull
inc
pop
or
push
mov
add
addb
sbb
dec
jmp
pop
mov
jecxz
and
or
fwait
adc
cmpsl
mov
je
or
fwait
aaa
popa
adc
mov
xchg
fsts
stos
adc
sbb
xor
mov
mov
mov
sub
and
pop
inc
imul
aas
hlt
and
jbe
mov
jnp
dec
popa
movl
aad
mov
popf
push
push
push
arpl
in
rol
cmp
outsl
xchg
cmc
sbb
dec
fdivs
push
ds
addr16
push
mov
xcrypt-cfb
cmpsl
mov
aaa
inc
xor
mov
fcomi
sbb
cmpsl
in
push
push
and
jb
arpl
outsb
jecxz
jnp
addr16
inc
sbb
xor
mov
xchg
out
jae
push
fadds
dec
arpl
cmp
adc
mov
imul
fiadds
pop
call
xor
pop
dec
dec
or
or
xchg
inc
jae
stos
adc
lahf
pop
aaa
mov
inc
js
dec
xor
lods
jnp
add
push
xchg
push
test
pusha
pushf
sbb
rorb
outsb
add
rorb
sti
aaa
lods
jno
sub
jmp
gs
mov
mov
pop
out
mov
lahf
mov
fistpll
in
xor
dec
stos
mov
adc
sub
ljmp
pause
movsb
pop
push
lahf
inc
xor
pushf
fcmovne
mov
ss
push
enter
imul
fs
aas
xchg
and
mov
inc
xchg
fdivs
mov
out
mov
inc
ud2
mov
xchg
rolb
adc
testl
inc
arpl
pop
aam
lahf
aaa
mov
ljmp
mov
iret
adc
jmp
sbb
inc
lea
negl
in
pop
mov
fistpll
dec
sbb
pop
or
inc
idivl
cmp
xor
jmp
shl
inc
dec
iret
out
rcrb
cmpsl
pop
inc
sub
inc
inc
arpl
mov
shl
aaa
iret
pop
out
mov
ret
sub
insb
add
lods
adc
scas
pop
iret
iret
rolb
sub
jo
fildl
arpl
xchg
xor
movsb
outsb
push
dec
inc
push
inc
inc
mov
and
pop
filds
movsb
or
xchg
add
out
inc
push
stc
sub
inc
sbb
dec
sbb
or
mov
lahf
repz
inc
insb
adc
xchg
stos
add
push
inc
out
pop
sub
pop
fwait
test
cmp
pop
daa
mov
inc
push
js
test
xchg
mov
cltd
mov
sti
cmp
scas
ja
mov
mov
outsl
pop
dec
sub
insb
pop
push
and
aas
xor
mov
adc
mov
daa
push
adc
stos
ret
ljmp
xor
aaa
mov
scas
aaa
scas
mov
iret
mov
sub
insb
adc
fists
mov
pop
pop
mov
movsl
pop
cmc
iret
aas
xchg
fwait
add
xor
mov
shlb
sbb
cmpsl
jo
mov
mov
xor
and
push
fwait
push
mov
xor
push
dec
xchg
mov
cmpsl
sub
and
imul
lods
pop
add
add
and
dec
das
adc
mov
rcrl
iret
mov
pop
in
es
dec
mov
dec
lahf
xchg
sub
stos
add
fisubrl
fdivrs
jmp
addb
jnp
test
insb
push
ret
push
jecxz
or
inc
iret
in
add
movl
or
and
pop
mov
scas
dec
mov
cmp
push
sbb
cmpsb
dec
jle
cs
add
push
and
sub
add
mov
dec
sbb
divl
jno
mov
aas
mov
pop
mov
ret
fldl
je
cvtpi2ps
mov
inc
xor
pop
hlt
mov
popl
sub
lret
aaa
negl
xchg
aaa
shll
cmp
and
mov
jp
mov
lods
lahf
dec
adcb
push
arpl
or
insl
addb
divb
mov
or
mov
push
push
daa
and
mov
inc
xchg
mov
aaa
mov
test
rorb
popa
lods
jecxz
popf
adc
cmp
mov
jb
xchg
fimuls
sub
pop
pop
rolb
lock
inc
mov
rorl
push
xor
sarb
movsl
sbb
xlat
xchg
je
push
out
jecxz
dec
fiaddl
jge
loop
setae
add
push
stos
push
mov
mov
xlat
cltd
aam
pop
sbb
push
shlb
ja
les
lret
cs
fsubr
mov
int
inc
cmovbe
pop
push
dec
cmp
jl
rcrl
pop
mov
loopne
dec
xor
pop
push
add
cli
or
ja
jge
xchg
inc
mov
sub
sti
das
imul
push
insl
fsubs
call
inc
mov
aas
inc
pop
pop
or
sbb
outsl
inc
icebp
cmc
mov
shlb
add
xchg
dec
push
mov
ret
mov
mov
sub
inc
sub
or
mov
outsl
aas
and
xchg
mov
mov
lret
pusha
xchg
push
ret
aaa
dec
pop
test
stos
fisubl
add
iret
or
stos
out
jbe
mov
mov
jp
pop
jecxz
lods
mov
inc
mov
fmuls
sub
xorb
aaa
out
mov
lea
sbb
mov
test
push
jge
fwait
data16
mov
incb
pusha
xchg
xchg
mov
sahf
cmpsl
data16
pop
aaa
notl
mov
sub
push
cmpsl
fildl
imul
insl
mov
cmp
cmpsl
push
or
test
out
add
or
jmp
add
test
or
mov
aam
call
xchg
mov
xlat
dec
das
arpl
xchg
fsubp
mov
sub
jo
ss
inc
xor
into
cmp
cmp
sub
addl
daa
add
pop
sbb
sub
xchg
fdiv
ja
ret
imul
dec
sub
pop
jae
in
loop
mov
xchg
into
sti
push
mov
cmp
ja
gs
adc
sbbl
clc
jmp
push
mov
cmp
cmc
mov
in
scas
iret
or
sub
arpl
push
push
cmp
jg
negl
jmp
push
mov
ljmp
scas
outsl
das
push
sbb
dec
xchg
addr16
cs
es
stos
xor
rolb
cmpsl
scas
mov
out
dec
lcall
movb
aaa
xchg
push
xor
dec
arpl
out
ret
mov
mov
rcll
mov
and
xchg
mov
pop
mov
fwait
cmp
inc
das
add
stos
stos
jne
cmpsl
adc
mov
cmpsb
xchg
cmp
sbb
bound
jmp
das
cmp
push
pop
sub
mov
fmuls
mov
adc
das
sub
add
lods
mov
push
iret
lahf
jp
xchg
xchg
lret
aam
add
scas
add
sub
mov
rcrb
push
and
add
insb
pop
mov
out
jg
sub
ss
aaa
or
pusha
and
pop
dec
add
or
dec
sbb
rorl
imul
inc
fcomi
mov
pop
insb
negl
or
inc
add
and
inc
push
iret
or
xlat
pop
daa
lret
xor
or
or
fbld
iret
cli
outsl
jg
bound
inc
lret
scas
and
mov
fidivs
dec
outsl
jecxz
push
mov
shlb
sarb
xchg
push
fisttps
xchg
outsb
outsl
ss
sub
fcmovnu
dec
leave
jb
mov
outsb
pop
outsl
sub
add
xchg
cs
mov
pop
lods
sub
mov
push
lret
pop
addr16
or
dec
or
mov
test
or
test
je
xor
inc
push
repnz
inc
jl
fbstp
das
pop
pop
sbb
sbb
out
sbb
ret
lea
xchg
das
lods
and
xchg
xor
mov
add
pushf
sub
sbb
out
pushaw
mov
repz
inc
lods
add
bound
xor
mov
inc
arpl
pop
stos
add
lret
lahf
addb
jo
mov
imul
rcl
push
fwait
mov
pop
or
ja
xor
push
gs
jg
repnz
ds
push
or
rorb
mov
inc
xor
adc
inc
aas
pop
push
dec
stos
rep
cmp
jbe
out
loope
shll
ss
jp
dec
xchg
mov
mov
and
test
mov
inc
dec
xlat
push
lahf
js
addr16
lret
push
pop
sbb
icebp
test
jae
shll
fstpt
pop
iret
mov
or
jg
nop
push
popa
adc
xor
sbb
lahf
dec
ja
stos
add
inc
xchg
lahf
xchg
jge
pop
dec
das
aaa
cmpsl
outsb
inc
stos
fs
sbb
inc
add
pop
fmuls
or
jmp
xor
xlat
ja
add
sbb
dec
xchg
sub
ss
xor
notl
loopne
pop
inc
jmp
adc
nop
dec
jae
stos
sub
inc
push
je
jae
shlb
stos
lods
popf
inc
imull
and
insl
das
inc
sbb
xchg
call
adc
les
inc
pop
and
pop
mov
das
jmp
jg
in
adc
test
fmull
sbb
mov
into
add
shll
iret
inc
fwait
test
fwait
and
gs
lock
mov
mov
push
push
ret
dec
fwait
xor
push
and
ja
jbe
testl
fildl
fwait
mov
push
pop
mov
sbb
push
incl
fidivrl
pop
out
push
pop
pop
outsb
cmpsl
ss
daa
mov
dec
pop
aaa
xlat
mov
iret
add
and
aaa
mov
xorb
xorb
push
push
repz
xchg
js
dec
popl
xchg
jg
xor
mov
or
popa
jecxz
out
xor
fwait
pop
fcompl
scas
push
fidivrl
inc
imul
mov
mov
pop
iret
adc
add
xadd
pop
jne
mov
fisttpl
xchg
xchg
in
jp
xlat
xchg
test
out
mov
inc
or
stos
call
pop
movl
xchg
inc
es
mov
xor
or
cmovne
push
nop
mov
xor
out
xor
inc
popa
movsl
xlat
pop
and
pop
movl
cmp
ss
imul
push
nop
shlb
jg
loope
test
scas
dec
pop
aaa
lods
leave
mov
jnp
jbe
fsubrs
jmp
adc
xchg
mov
mov
pop
pop
lahf
idivl
cmp
pminub
xchg
xchg
cltd
add
lret
loop
sbb
xchg
jbe
xchg
add
push
add
movsl
pop
jae
pop
rolb
call
push
mov
push
sub
and
inc
inc
out
add
cmp
gs
ja
dec
rorb
das
insb
or
out
inc
orl
pop
sti
lds
mov
xor
fwait
push
shlb
inc
fwait
xor
inc
sub
lds
adc
fists
mov
insl
das
cmpsl
cmpsl
das
mov
out
sub
sbb
adc
xchg
cs
cmp
add
jbe
push
jge
jg
pop
ljmp
ljmp
ret
lods
aas
xchg
sbb
out
xchg
andl
sbb
mov
aaa
xchg
scas
mov
arpl
ss
mov
push
out
pusha
xlat
mov
pop
add
aas
xchg
pusha
test
adc
push
push
add
xor
inc
outsl
sub
addr16
cmp
sti
loop
jb
lahf
repz
add
rep
xor
lahf
arpl
sub
push
adc
xor
adc
adc
xchg
dec
daa
jbe
pop
or
sub
xchg
jp
fistpll
mov
add
pop
arpl
mov
mov
pusha
aad
mov
cmp
inc
mov
xorl
imul
mov
mov
jg
sub
pusha
movsl
fs
cmp
push
xchg
jecxz
out
and
pop
shlb
aad
lock
aas
fwait
or
add
ss
fisttpl
das
scas
sub
ljmp
js
fistps
and
sti
jg
incl
aam
fidivrs
cmp
or
mov
cmpsb
sbb
movsb
mov
das
outsb
sbb
dec
pop
dec
pop
mov
jmp
dec
inc
jne,pt
mov
aas
cmp
jae
sbb
xchg
inc
repnz
add
sub
das
ja
shlb
mov
add
insl
out
adc
xor
mov
bound
mov
xchg
xor
or
inc
or
jmp
dec
cs
cli
cmp
movsl
add
or
popa
pop
cmc
dec
aas
xor
or
in
pop
add
lret
rolb
cmp
and
mov
mov
push
movsb
pop
arpl
adc
mov
xor
jnp
pop
fneni(8087
xor
mov
adc
iret
repz
insl
xchg
icebp
sbb
pop
fistps
mov
and
inc
mov
or
into
ret
stos
jbe
sbb
xor
js
mov
and
dec
mov
xor
rolb
cmp
or
inc
pop
test
mov
shll
jno
or
pusha
dec
imul
push
and
mov
ffree
daa
lock
jnp
movsl
pop
or
notb
adc
sbb
lcall
je
mov
cltd
imulb
fidivl
and
add
push
mov
mov
or
push
popa
shrl
fbld
shlb
cmp
pop
pop
xorb
ret
mov
mov
adc
xor
iret
les
add
leave
imull
xor
push
inc
shrb
mov
arpl
das
sub
imul
mov
sahf
cmp
push
add
inc
into
outsl
call
mov
dec
lods
mov
adc
imul
test
dec
adc
aam
jecxz
mov
xor
pop
jecxz
insb
rol
jae
jnp
push
scas
mov
push
push
dec
mov
push
lret
push
das
outsl
out
les
stos
add
outsl
das
leave
dec
add
ss
aaa
pop
jbe
adc
out
xor
imul
adc
pop
inc
imul
fnstsw
or
or
inc
aas
jecxz
dec
xchg
shrb
stos
dec
sub
mov
push
fildll
xchg
add
dec
xchg
add
push
xlat
fwait
fwait
inc
or
cmovbe
subb
xlat
xor
push
movsb
add
pop
rolb
test
jb
mov
inc
or
out
push
subl
adc
loopne
cmp
dec
push
test
mov
insl
fimull
sar
mov
push
sub
dec
add
cmpsb
cmpsl
sub
xor
lea
loop
inc
lahf
imul
add
mov
pop
pop
pop
inc
sti
movsl
dec
imul
outsl
test
ret
inc
mov
add
rolb
xor
inc
adc
movsb
inc
adc
xchg
pop
xchg
or
mov
stos
fcompl
or
sub
test
mov
and
inc
ret
mov
push
xorps
daa
jnp
cmp
lods
sbb
out
sub
das
push
imul
pusha
mov
jge
repz
mov
dec
jg
and
fs
addr16
inc
popa
mov
shlb
mov
mov
adc
lods
nop
aaa
dec
lahf
test
inc
mov
add
inc
inc
fdivs
or
add
rorb
push
cmp
lahf
filds
test
xorl
arpl
dec
inc
cmp
les
call
xor
adcl
and
dec
ret
add
mov
aad
lret
and
jnp
or
addl
xchg
pop
aas
jecxz
push
dec
pop
ret
push
or
imul
xchg
jg
lahf
lahf
xchg
movsl
or
sub
insl
mov
lea
mov
xor
fsubr
pop
pop
xor
adc
lahf
je
adc
scas
out
adc
inc
mov
dec
jle
xor
jno
sbb
inc
dec
pop
xor
inc
ss
les
loopne
fwait
jecxz
adcl
push
xchg
xchg
or
cmpsl
xchg
inc
mov
sub
lret
lahf
pop
adc
inc
outsb
add
and
lods
fld
ret
cmp
aaa
xchg
mov
xchg
jae
xchg
xchg
and
cmp
or
rol
out
mov
leave
pop
arpl
inc
mov
add
iret
inc
pusha
insb
mov
sbb
dec
sub
cmp
pop
sub
je
out
mov
fwait
cmp
lea
jno
iret
inc
sbb
and
sub
jnp
push
inc
ret
jle
stos
rcll
sub
xchg
add
mov
inc
add
sbbl
pop
and
xchg
sub
shrb
add
dec
arpl
mov
jecxz
adc
popa
cmp
mov
xor
sub
mov
jle
push
inc
mov
and
cmp
inc
repz
mov
arpl
pop
dec
mov
adc
inc
fistpll
aad
lahf
push
inc
sub
pop
mov
cld
xor
adcl
movsb
pop
mov
sbb
push
inc
pop
sub
pop
xchg
jl
xor
xchg
ret
xchg
xor
and
movsl
decl
inc
adc
push
lret
dec
dec
arpl
push
sub
in
jo
add
js
pusha
je
jle
add
ret
cmp
add
sbb
prefetch
inc
pop
jmp
jmp
xor
mov
adc
add
aas
outsl
test
pop
iret
cmpsl
inc
cld
les
lahf
inc
mov
pop
fcoms
mov
add
adc
and
and
mov
arpl
maxps
out
push
movsl
aad
inc
scas
ss
mul
mov
test
jmp
inc
mov
push
jae
hlt
test
insl
outsl
outsl
imull
inc
andb
mov
mov
inc
cmpsb
les
jne
jnp
push
mov
imul
push
jnp
popa
les
xorl
fdivs
ss
pop
bound
subb
lea
stos
adc
scas
xchg
das
test
pop
es
xchg
cmp
aas
sub
aam
jg
mov
push
in
add
sub
push
fwait
ja
ret
dec
pop
cmp
les
lcall
adc
fcomi
sbb
sub
mov
pop
sti
push
sarl
ljmp
fildll
imul
or
inc
loopne
pop
jg
repz
insl
xchg
das
out
filds
filds
ja
sbb
fildll
popa
test
jmp
or
dec
fwait
inc
mov
mov
push
inc
or
lahf
sbb
out
nopl
jg
inc
mov
fistps
test
pandn
push
andl
outsl
in
push
aam
mov
iret
dec
jge
mov
or
push
sti
mov
sbb
inc
add
mov
out
xor
inc
fimull
and
mov
add
mov
popf
ud2
lret
fcmovnb
jbe
jae
ss
or
sbb
arpl
orl
mov
xor
push
or
adc
dec
mov
fimull
jae
cmc
ss
pop
cmp
sub
sub
adc
imul
aad
lea
mov
lds
inc
call
scas
mov
add
insl
sub
sbb
inc
sbb
sbb
mov
aaa
das
inc
jg
shrb
lock
add
jle
inc
xlat
mov
test
mov
inc
push
mov
mov
cmc
jb
loop
dec
jecxz
inc
pop
js
mov
ljmp
mov
adc
mov
aam
xor
stos
push
mov
pop
jnp
mov
or
paddsb
aas
pop
dec
xor
adc
mov
stos
rorl
call
inc
lods
adc
xor
and
ljmp
cs
xorb
out
cmp
cs
pop
sub
fiadds
push
push
aas
out
jnp
push
in
and
neg
in
mov
inc
adc
mov
jnp
push
mov
adc
lea
inc
iret
pop
sub
jbe
aas
inc
xchg
hlt
and
sub
add
push
addl
pop
dec
fwait
pop
xchg
cmpsb
or
mov
shll
sti
mov
push
stos
in
add
push
xor
mov
add
cmpsl
fcmovnb
bound
sub
ja
adc
push
and
lods
adc
jmp
jp
jbe
rcrl
mov
sbb
aas
pop
imul
sbb
push
das
out
add
ret
xchg
pop
xlat
push
push
movlps
test
mov
imul
sbb
or
push
dec
add
testl
mov
mov
aaa
pop
das
mov
lahf
inc
pushw
sbb
xor
lcall
add
xchg
scas
mov
fwait
cmp
cs
push
sub
mov
mov
xor
inc
mov
cmp
ds
lret
fldt
lock
sbbl
adcl
or
je
pop
fs
pop
mov
lock
imul
sbb
bnd
jecxz
xor
outsb
mov
ffreep
cmp
jecxz
mov
shrb
add
outsl
pop
adc
pop
mov
or
add
dec
mov
vaddsubpd
xor
sub
push
push
or
lahf
or
push
pushf
scas
push
fildll
scas
mov
pop
cmpsl
dec
rol
sub
dec
lret
dec
movsl
dec
shlb
in
mov
mov
pop
jg
fsubrs
arpl
mov
jmp
or
mov
fldt
mov
imul
or
pop
add
mov
lahf
xchg
or
frstor
sar
ffreep
ret
inc
mov
orl
xchg
pop
arpl
push
mov
pop
pop
das
and
push
pusha
push
dec
pop
jmp
mov
arpl
iret
or
repz
mov
test
adcb
lret
lock
iret
fimuls
packsswb
adc
das
mov
push
add
aad
mull
decl
loop
mov
add
push
fwait
mov
comiss
xlat
cs
or
xor
inc
mov
xchg
and
inc
das
pop
dec
imul
fildl
mov
jp
adc
iret
cmp
ret
xor
es
adc
jbe
stos
push
aaa
mov
xor
add
imul
pop
or
inc
pop
mov
dec
xorl
push
and
cs
jg
push
jbe
pop
roll
xlat
sub
in
shr
lret
pop
inc
shl
test
jbe
sub
imul
mov
fists
mov
ret
fisttps
orl
inc
push
addb
push
call
dec
fldt
jg
insl
cmp
add
dec
pop
add
dec
ret
cmp
mov
push
daa
addr16
inc
xor
mov
push
pop
push
cmp
sbb
scas
lock
sbb
push
fildl
mov
fisttps
movsb
adc
or
or
mov
aaa
addr16
sub
pop
mov
pop
adc
loope
outsl
es
mov
rcrb
lcall
mov
bound
repz
movb
mov
movsb
test
adcb
lret
notl
xor
mov
pop
adc
mov
pop
pop
mov
mov
cmp
push
push
mov
lahf
and
mov
sub
xor
cmpsl
xchg
stos
add
ja
add
mov
insb
out
js
inc
pop
pop
xor
sbb
iret
movsl
and
add
jmp
push
or
in
sub
sub
xor
imul
imul
xor
sub
out
add
xchg
xchg
shll
inc
push
pop
jg
jmp
pop
dec
adc
xor
dec
push
adc
pop
mov
sub
inc
jmp
fbstp
repz
mov
test
lahf
xchg
or
ja
enter
push
scas
fadd
roll
mov
xorl
pop
stos
int
jecxz
pop
push
sub
repnz
test
cmpsl
mov
push
rcrb
repz
ficomps
lahf
fbld
fiaddl
mov
bound
call
or
push
pop
scas
call
pop
lahf
popl
push
out
dec
push
lret
loope
xchg
inc
pop
xlat
mov
outsl
cmpsb
push
mov
andl
outsl
iret
aad
add
scas
outsl
ja
subb
push
pop
shlb
cmp
jecxz
js
or
and
cmp
and
aaa
cmp
das
loope
lret
cmpsl
aaa
or
mov
scas
xor
dec
ficoml
ljmp
sbb
pop
ja
xchg
add
and
sbb
movnti
and
fidivrs
test
inc
or
jo
iret
repz
xchg
imul
mov
mov
cmpsl
incl
rclb
fwait
xor
adc
push
mov
sbb
add
aaa
insb
sbb
mov
push
imul
es
dec
inc
xchg
xor
cmp
inc
sbb
call
imul
mov
dec
pop
outsl
mov
addr16
xor
arpl
jmp
push
adc
sti
aaa
pop
inc
push
js
jecxz
mov
fdivs
sub
fwait
jmp
pop
clc
dec
and
dec
dec
inc
xor
mov
in
sbb
movsl
xchg
sti
inc
xchg
xor
cmp
fldl
ret
xchg
sarb
ret
pop
scas
add
movsb
aaa
xchg
mov
or
and
dec
lds
jnp
insl
add
mov
fst
mov
ret
stos
je
push
ljmp
inc
lret
xor
mov
adcl
inc
lods
movsb
mov
aaa
call
mov
insb
dec
pop
sbb
sub
jg
cmp
xor
jnp
mov
fiaddl
jae
imul
mov
push
pop
sub
xor
sub
cmp
mov
jecxz
adc
dec
sahf
fwait
mov
add
daa
sbb
dec
xlat
iret
xor
movsb
pop
push
inc
xchg
cmp
mov
add
mov
lcall
mov
out
push
addl
int3
adc
arpl
xlat
out
movsl
fsubs
bnd
xchg
inc
add
mov
add
rcrl
mov
or
sub
xchg
ret
jg
and
loopne
pop
mov
repnz
inc
ss
fdivs
stos
ret
lock
sbb
xor
fmul
cmpsl
xchg
fdivs
stc
roll
pop
or
pop
movsl
inc
into
sub
jnp
int3
fidivl
xchg
cmp
dec
inc
dec
pop
jecxz
sub
mov
mov
push
imul
push
outsl
add
sarl
jg
push
in
aam
das
mov
xor
out
ss
mov
or
cmc
pusha
mov
pop
xlat
inc
les
cmc
ds
lea
dec
fstl
imul
popf
ret
aas
mov
ret
scas
jecxz
imul
push
add
xchg
push
sub
pop
jp
es
mov
xchg
xor
fwait
mov
pop
dec
fbstp
adc
mov
imul
inc
add
addr16
push
nop
or
jecxz
in
lods
inc
sbb
inc
add
sahf
xchg
rorb
pop
mov
sub
xchg
das
jg
push
pop
sub
out
xor
push
pop
add
movups
cmp
pop
sub
cmp
xchg
xor
mov
xor
outsl
mov
aas
mov
fwait
sahf
stc
ds
mov
jnp
xchg
xor
mov
mov
arpl
and
int
test
scas
push
push
dec
pop
aaa
mov
int
arpl
pop
dec
cmp
dec
out
sbb
pop
or
stos
aam
dec
ret
pop
and
and
das
inc
js
inc
ret
lahf
jmp
push
lods
jp
dec
outsl
mov
aad
push
mov
push
dec
adc
adc
out
dec
and
inc
sti
movsl
xor
pop
roll
push
dec
pop
stos
ds
arpl
xor
sarl
push
das
and
fimuls
jnp
inc
mov
outsl
sbb
mov
xor
ds
push
lea
addl
inc
and
imul
pop
sbb
mov
out
scas
or
xchg
sbb
test
dec
mov
jnp
mov
jmp
cmp
mov
xchg
xchg
rcpps
addr16
and
cmp
fwait
dec
repnz
mov
test
fwait
push
fdivrl
testl
jnp
sub
mov
fimull
sub
or
arpl
mov
push
addb
aad
out
imul
xor
add
out
pop
imul
pop
pop
movsl
xor
mov
xchg
das
movsl
xchg
mov
push
mov
cmp
ss
das
cmp
adc
mov
xchg
aas
sbb
imul
mov
xor
cmpsl
fwait
test
outsl
shll
lods
stos
adc
ja
movb
dec
subl
adc
je
inc
out
mov
cmp
mov
fsubrl
jo
enter
daa
inc
sub
orl
sbb
imul
xchg
mov
jnp
jmp
das
jp
es
jnp
rcll
cli
incl
inc
pop
sbb
push
mov
sbb
popa
mov
mov
sti
mov
inc
pop
incl
and
cmp
movsl
sti
xor
ss
lds
push
pop
sub
sub
outsl
xchg
lret
bswap
and
mov
add
inc
xor
sub
rol
lahf
xlat
sub
jg
pop
jp
push
neg
cmpsb
int3
jp
and
mov
push
push
dec
pusha
aad
inc
fs
mov
sarb
sbb
jmp
icebp
jnp
pusha
xor
sbb
push
xor
pop
lahf
mov
mov
xchg
addb
incl
scas
xor
cmp
jg
xlat
inc
pop
clc
les
arpl
imul
mov
or
ss
shll
addr16
mul
data16
jae
andl
enter
int
xchg
popa
jnp
fistpll
rol
adc
mov
lret
inc
jecxz
and
sub
pop
ljmp
dec
xchg
add
lret
arpl
mov
xor
cmp
mov
inc
stos
sbb
add
xorb
cwtl
adc
add
ja
fisttpl
fdivs
lahf
or
pop
inc
fistpll
sti
rcrb
jp
ss
add
mov
mov
xor
xor
and
lods
cmpsb
pop
orl
sbb
xor
inc
call
out
shrl
repnz
xchg
imul
lock
xchg
jg
inc
in
test
popa
adc
inc
stos
dec
rcrb
repz
insl
les
pop
inc
xor
mov
add
lret
xor
je
xchg
inc
fisttpl
xor
rclb
lods
aas
sbb
dec
lea
out
sub
rcl
cmp
fnsave
scas
xor
filds
inc
ss
dec
enter
pop
and
outsb
adc
aaa
data16
repz
pop
sarl
jg
mov
shl
adc
fmuls
lods
push
or
inc
xchg
aaa
adc
jae
xchg
xchg
outsb
inc
xor
iret
mov
mov
inc
jmp
insb
imul
pop
xchg
sahf
mov
loop
inc
daa
scas
pop
bound
jae
sub
aam
sub
xchg
sarl
ret
lds
movsb
cwtl
jg
ss
push
and
xchg
push
cmp
scas
inc
mov
ret
and
rclb
jae
inc
sub
jecxz
push
pusha
scas
ds
fiaddl
bound
jecxz
sti
add
inc
or
and
cmpsl
push
out
bound
and
fucomip
jecxz
or
pop
mov
iret
das
sbb
sbb
adc
xchg
jbe
lods
loop
or
jmp
sbb
gs
xor
arpl
fwait
xchg
cmpsl
lahf
out
pop
cmp
insb
fstpt
jmp
inc
rol
mov
cmpsl
jo
push
pop
pop
ja
jb
dec
ret
pop
jnp
shr
pop
or
mov
xchg
xorl
sub
fistps
or
fwait
mov
push
add
outsl
push
fisubrl
fists
add
sub
xchg
add
sbb
xor
xor
lcall
adc
adc
stos
add
and
pop
shll
pop
pop
ret
fwait
adc
rcrl
and
lock
inc
imul
fists
jb
gs
xor
mov
fidivl
sbb
fldenv
jecxz
fbld
test
fldl
pop
xchg
loop
pop
shrb
pop
jl
mov
mov
xor
lods
xor
push
out
jnp
stos
xchg
dec
setae
mov
das
daa
icebp
dec
mov
psllq
push
ficoml
movzwl
fimuls
ljmp
idivl
sub
mov
or
cmp
mov
adc
push
sarb
lret
mov
or
and
daa
mov
inc
lret
sbb
int
stos
sbb
sbb
xchg
xor
shll
lahf
inc
clc
les
scas
jnp
push
push
lds
pop
mov
xorl
movsl
pop
inc
inc
outsl
out
jno
dec
and
addr16
mov
out
adc
sub
lret
iret
iret
sahf
push
test
seto
mov
lahf
lahf
lea
mov
pop
cmpsl
mov
jl
sub
inc
adc
arpl
xlat
ljmp
addr16
stos
popa
xchg
xchg
dec
mov
ss
jmp
add
xchg
xor
or
rorl
pop
out
lds
outsb
and
pop
pop
mov
add
mov
sub
push
stos
lods
adc
arpl
xor
and
mov
bound
mov
jnp
mov
sbb
push
adc
je
js
repz
outsl
jle
xchg
test
push
aaa
ret
mov
les
idivl
push
aas
sahf
jnp
push
push
inc
jg
cs
dec
inc
jae
mov
and
lods
pop
inc
pop
push
imul
add
push
push
inc
push
xchg
add
and
es
dec
lea
pop
jmp
or
cmp
inc
rorb
andl
push
and
imul
dec
sti
pop
mov
inc
xorps
test
aam
aad
pusha
add
scas
xchg
add
sub
ret
scas
test
loop
stos
jnp
inc
mov
add
inc
xchg
lods
es
aas
inc
movsl
imul
pop
pop
xor
pop
mov
push
xchg
xor
aas
imul
scas
jnp
add
or
jg
nop
nop
dec
pop
push
test
aam
daa
out
rcrb
testl
xchg
mov
push
jnp
inc
xor
push
sub
push
mov
rcrl
dec
xlat
adc
sbb
sbb
shll
mov
and
and
stos
and
mov
mov
imul
lret
rcr
xchg
cmp
sbb
xor
scas
lahf
ss
or
mov
cmpsl
push
mov
inc
xlat
shll
rol
push
mov
ss
push
mov
mov
cmp
arpl
adc
dec
aam
xchg
pop
push
or
xor
es
cmp
push
push
cmpsb
outsb
jae
jg
insb
add
add
sbb
fwait
outsl
push
arpl
mov
pop
add
ret
jae
mov
scas
fisubrl
testb
daa
mov
or
jp
fwait
lahf
sub
lods
push
rol
pop
inc
inc
dec
fcmovnu
inc
jbe
jg
pop
fldt
mov
filds
jg
mov
mov
lahf
and
bound
cmc
test
mov
das
mov
push
mov
add
push
or
imul
iret
popf
nop
mov
movl
xor
dec
sbb
pop
jecxz
mov
lcall
add
pop
sti
shll
shlb
pop
mov
xorb
mov
arpl
lods
push
shrl
or
push
bound
and
bound
sbbl
adc
outsl
lcall
xadd
mov
fists
rolb
repz
xchg
mov
mov
sti
adc
add
mov
fidivrs
pop
xchg
sub
stos
outsb
and
test
ljmp
mov
mov
or
iret
insb
imul
cmpsl
jnp
insl
adc
addr16
or
imul
shrl
ret
xor
xor
pop
out
mov
mov
sbb
mov
sbb
pop
loopne
dec
xor
in
testb
shl
xor
into
jmp
mov
mov
lods
sub
mov
movq
push
popa
in
and
xor
fbstp
sbb
cmp
aam
cs
aas
arpl
sbb
inc
imul
push
push
test
out
clc
shlb
ja
push
add
loope
inc
fiaddl
stc
add
inc
lds
inc
and
addl
sti
inc
pop
mov
mov
testl
sbb
fistpll
cmp
aaa
je
das
xor
imul
lcall
jno
cmp
mov
pop
xor
xor
push
adc
add
xchg
pushl
popa
dec
repz
test
inc
pop
loopne
pop
icebp
push
aaa
add
dec
out
mov
ja
mov
jmp
and
pop
mov
stos
push
sbb
inc
dec
pop
push
xchg
cmp
xor
mov
mov
cmpsl
mov
and
add
adc
mov
orl
inc
lods
inc
cs
dec
jmp
pop
mov
scas
jge
and
cmp
pusha
and
or
lds
xorl
push
sbb
rolb
inc
addps
in
xor
mov
mov
je
scas
add
cmovo
add
aaa
add
jmp
xor
inc
bound
mov
cmp
test
or
test
insl
and
jmp
mov
mov
xor
fdivrl
outsl
sahf
adc
or
dec
call
lcall
pop
jmp
adc
lcall
dec
mov
mov
push
inc
add
lcall
cmp
loopne
fdivr
lahf
addb
or
mov
bound
arpl
test
jnp
test
jnp
pop
mov
out
out
test
mov
arpl
enter
push
fbstp
jecxz
jns
repz
mov
adcl
dec
cmp
or
test
fadds
lret
adc
fwait
pop
add
push
inc
pushf
adc
sub
and
sbb
add
pop
out
nop
pop
fwait
add
out
mov
out
sub
adcl
sbbb
in
test
fwait
repz
pop
fsubrs
sub
sub
pop
xor
jmp
rclb
push
inc
adc
ljmp
test
test
mov
or
xor
in
push
negl
filds
data16
fwait
mov
push
jbe
fwait
jp
push
jmp
inc
push
scas
outsl
cmp
pop
mov
pop
jnp
outsl
adc
jge
or
jnp
into
lea
jnp
jae
adc
sti
mov
insl
aas
push
pop
outsl
add
rolb
pop
outsb
pop
adc
nop
sbb
adc
test
rolb
mov
push
cmpsl
divl
clc
rcr
mov
les
mov
adc
icebp
adc
sbb
jno
out
xchg
xchg
xchg
and
cmp
xor
push
inc
fcmovnu
cs
xchg
negl
ds
aaa
scas
jne
and
outsl
adc
and
mov
in
mov
loope
pop
into
mov
cmp
test
xlat
xor
mov
jmp
arpl
xor
pop
xor
and
mov
imul
movsb
dec
mov
scas
fildl
dec
and
mov
addr16
dec
push
dec
mov
mov
mov
sub
dec
aad
mov
mov
or
or
cli
ret
cs
dec
xchg
jnp
rol
xchg
arpl
mov
out
and
and
adc
pop
arpl
pop
and
sub
fsubrp
dec
ja
mov
inc
out
push
in
jnp
ds
aaa
test
cmp
sbb
ret
pop
adc
inc
das
loopne
fsubrs
jnp
pop
sub
adcl
ja
jg
sbb
imul
cmpb
push
push
sahf
mov
fwait
cmp
cmp
sbb
xorb
xor
cmp
ss
lret
pop
pop
cmp
sarl
outsl
out
dec
cs
adc
fcmovnbe
xor
pop
jo
aas
scas
push
clc
rorb
xor
cmp
sub
pop
xchg
cmp
scas
out
aaa
add
fimuls
loope
pop
ja
popa
pop
stos
test
fiaddl
mov
packuswb
push
test
das
dec
xor
imul
jnp
ret
mov
mov
jo
add
push
or
push
scas
inc
sti
mov
arpl
jecxz
jg
imul
out
mov
ret
pop
lret
sub
insl
fcoms
push
hlt
add
pop
mov
cs
xor
inc
imul
aam
sbb
rolb
test
add
lahf
inc
add
pop
xor
push
mov
and
mov
inc
push
lods
mov
sub
ss
cli
adc
mov
mov
add
nop
movb
imul
mov
stos
push
inc
or
fwait
popa
pop
xorb
aas
sti
inc
cmp
loop
mov
iret
pop
add
aas
add
inc
sub
shrb
iret
fwait
xchg
add
sti
lahf
cmp
mov
push
adc
mov
mov
push
negl
jp
das
dec
or
and
lcall
xchg
fldt
jae
pop
fs
das
loop
push
sbb
pop
xchg
data16
mov
adc
ja
dec
scas
ds
pop
pop
cmp
pop
xor
mov
dec
add
pop
push
push
pop
mov
mov
push
mov
out
scas
pop
push
shll
inc
dec
mov
divb
ficoml
push
adc
daa
jg
stos
add
pop
add
dec
inc
sbb
outsb
mov
dec
mov
fidivrl
sbb
inc
or
mov
mov
cmp
or
inc
jecxz
inc
xlat
es
call
movsl
xor
mov
or
pop
add
inc
test
lods
mov
jg
inc
popa
mov
pop
adc
jecxz
xchg
or
jg
inc
out
daa
xchg
imul
fldt
inc
les
sti
dec
mov
pop
inc
mov
mov
pusha
xchg
mov
push
fnsave
pop
sub
ret
loope
pavgw
int3
dec
mov
inc
shlb
aas
mov
cmpsl
pop
inc
pop
inc
add
aaa
pop
test
jl
fucomip
sub
cmp
lods
cmp
mov
xorl
insb
cmpsb
mov
daa
pop
xchg
jno
push
and
push
pop
or
test
ret
stos
inc
jmp
jg
lret
call
roll
pop
mov
ss
add
lds
and
inc
fwait
lea
dec
add
addr16
mov
fbstp
mov
out
inc
cmp
and
push
jae
add
pop
cmovg
xor
push
data16
loope
mov
sbb
outsl
loope
mov
xchg
or
xchg
out
sub
push
xor
dec
dec
popa
mov
jbe
mov
mov
add
dec
mov
inc
push
push
mov
daa
lock
cmpsl
cmc
das
xchg
and
ja
test
maxps
xor
jecxz
jecxz
add
mov
daa
sub
cmp
dec
ljmp
dec
jecxz
lock
outsl
ja
mov
mov
js
je
scas
pop
push
repz
outsb
pushf
js
cmp
jecxz
xchg
arpl
cmpsl
ljmp
jg
addl
pxor
jae
jbe
js
arpl
jnp
ret
sbb
lret
inc
add
enter
ss
shrb
dec
xchg
or
push
pop
mov
ret
or
cmp
pop
scas
cmp
mov
stos
addr16
xor
adc
das
insl
bt
inc
ljmp
jno
jmp
jecxz
lods
movsb
xor
inc
movsl
enter
outsl
push
pushf
mov
nop
les
push
movl
pop
xlat
aaa
push
sub
cmpsl
lds
xchg
lahf
pop
lea
push
dec
nopl
dec
sbbb
lret
mov
outsb
xchg
stos
lcall
stos
inc
aas
insb
movsb
inc
das
mov
mov
dec
or
push
and
mov
cmp
negl
lret
mov
jnp
sti
fisubrl
jecxz
fwait
mov
call
test
test
pop
stos
movb
xchg
stos
sbb
rclb
pop
sub
pop
dec
stos
inc
loopne
or
sbbl
xchg
mov
dec
jae
cmp
int
dec
sbbl
mov
popa
jmp
pop
outsl
clc
ret
aaa
loopne
cmp
in
loopne
pop
lahf
ljmp
cli
xchg
xchg
lea
arpl
fildl
mov
jp
push
arpl
cmp
rolb
fwait
in
xor
sub
mov
mov
push
inc
cmp
in
mov
mov
fidivrs
rcll
daa
push
filds
fistl
push
dec
sub
cmc
adc
inc
push
arpl
or
or
out
mov
push
fisubs
es
cmp
pop
sbb
adc
in
push
fistpl
stos
mov
add
jp
ret
cmp
outsl
out
pop
dec
jmp
jo
jmp
ret
fidivs
test
pand
hlt
ljmp
pop
lods
imul
xchg
cmpsl
sbb
sbb
mov
mov
inc
sti
mov
sub
inc
xchg
es
jg
aam
lods
inc
push
jg
fcomi
test
jae
daa
lods
xchg
mov
outsl
repnz
mov
movsb
shll
pop
xlat
movsb
addb
bound
cmp
cmpsb
jbe
arpl
jmp
inc
inc
pop
pusha
xchg
jecxz
aaa
es
sbbb
fsubl
xchg
jbe
cmp
outsl
lret
inc
cmp
ret
xor
mov
xchg
push
push
dec
xchg
xchg
daa
fisttpl
jo
jae
cmp
ja
inc
and
jno
sub
mov
xor
pop
pushl
xor
xor
fdiv
xor
xor
rol
lahf
dec
lods
rcl
lfs
fmuls
movsl
mov
mov
pop
jmp
xchg
xchg
mov
xchg
xchg
mov
fistpl
mov
xor
mov
dec
lods
push
repz
xor
sub
push
in
xlat
add
sub
pop
xor
sbb
gs
mov
mov
pop
mov
push
je
dec
subb
sub
out
add
xchg
xchg
sub
jecxz
xchg
pop
fcomip
pushf
cmp
mov
mov
imul
cmpsl
inc
pop
or
andl
mov
rcrb
inc
jl
imul
sbb
pop
mov
jp
pop
outsl
scas
push
pop
jno
filds
mov
outsl
ja
pop
gs
add
jne
push
pop
cmp
dec
cmp
testl
mov
inc
negl
and
scas
jg
outsl
test
mov
pop
dec
out
push
inc
mov
inc
stos
inc
dec
in
jmp
scas
mov
popl
jbe
cmp
outsl
pop
sub
ja
aaa
pand
add
dec
xor
adcl
push
das
inc
sbb
aad
jg
arpl
add
es
inc
push
rorl
loope
incl
and
leave
push
or
icebp
fcompl
mov
popa
mov
fwait
movsl
andl
dec
ss
mov
pusha
insl
mov
cmp
lahf
ss
out
mov
sbb
stos
aaa
xorb
fistpll
mov
push
lret
ret
mov
push
aaa
fwait
add
addb
inc
or
ja
scas
dec
pop
and
or
addb
out
or
xor
mov
arpl
push
in
jnp
ja
inc
dec
fimull
jnp
push
add
ds
xchg
add
popl
mov
aaa
mov
ds
jmp
jmp
and
out
out
mov
add
dec
xchg
inc
pop
sub
mov
mov
scas
andnps
jne
mov
lret
mov
mov
das
out
test
jg
add
add
lahf
pop
add
iret
pop
cmp
lods
mov
fidivrl
imul
xchg
iret
sbb
frstor
imul
sub
out
jnp
inc
inc
cs
mov
inc
mov
xor
sub
cmp
lret
push
xchg
inc
jg
andl
out
lods
xchg
rcl
cmpsl
rclb
xor
xchg
das
xor
mov
add
inc
jecxz
mov
jp
addl
adc
push
ret
lahf
es
in
xchg
rcll
mov
movsl
mov
pop
mov
push
sub
jecxz
ljmp
addr16
out
inc
jnp
loopne
pop
cmpsl
dec
fwait
adc
scas
push
aaa
mov
inc
fistpl
sub
push
pop
ret
sarb
jnp
xchg
mov
outsl
inc
rorb
cmp
xor
add
jg
imul
fistps
add
mov
mov
mov
shrl
lret
sbb
loope
adc
inc
jmp
add
inc
aam
movsb
xor
inc
out
xchg
icebp
mov
sub
dec
js
testl
xchg
mov
cs
pop
daa
lods
ja
and
testl
inc
jnp
adc
push
mov
lods
push
xchg
add
into
jg
iret
push
xor
push
inc
pop
and
dec
mov
mov
out
ljmp
jge
jnp
push
add
or
mov
rorb
je
xchg
jnp
cmp
add
imul
pop
pop
jnp
mov
mov
out
pop
inc
fistpl
xchg
mov
sbb
cmp
add
cmp
or
pop
loope
sbb
jo
mov
pop
dec
fisttps
maxps
fwait
outsl
xchg
jp
adc
xorl
insl
dec
xchg
fidivl
testl
xor
aas
pop
outsb
lds
movsb
add
mov
test
aas
jbe
dec
mov
lret
push
xor
outsl
jg
cmpsl
les
sub
inc
lcall
decl
fidivs
xchg
dec
dec
dec
sbb
inc
pop
inc
sbb
roll
das
cmp
add
aaa
aas
jae
push
inc
mov
subl
imul
dec
cmp
jae
aaa
cmc
or
loopne
xlat
xor
lret
sub
outsb
sub
aaa
stos
arpl
dec
dec
jle
inc
mov
iret
inc
pop
cmp
incl
adc
cmp
test
sahf
cmp
pop
lahf
loope
mov
out
fistpll
sahf
lods
in
out
inc
iret
fisttpl
incl
cltd
pop
sub
push
rcr
mov
inc
pop
push
pop
inc
sub
xorl
mov
dec
popa
jg
sbb
gs
xchg
jbe
fwait
push
hlt
icebp
hlt
ret
xchg
sti
iret
xchg
outsb
mov
sti
or
icebp
movsl
push
les
lcall
popl
sub
sbb
xorb
push
pop
jnp
adc
dec
sbb
push
pop
stos
out
push
xor
sbb
sub
mov
ret
jnp
test
das
iret
sarl
jp
cmp
sbb
inc
sub
xor
jae
push
mov
fwait
mull
roll
addl
cmc
sahf
mov
push
das
mov
jecxz
lahf
movl
dec
das
jp
inc
sti
pop
ljmp
iret
fdivrs
or
lock
addl
pop
mov
shlb
mov
mov
or
xor
xlat
dec
inc
and
rolb
inc
stos
adc
arpl
dec
bound
mov
outsl
push
inc
cmp
cs
scas
enter
xchg
inc
or
mov
ret
lahf
add
mov
inc
aaa
mov
jnp
scas
adc
adc
or
push
jmp
fdivs
pop
pop
xor
mov
pop
daa
test
or
filds
jno
and
cmp
and
xchg
push
fwait
dec
and
add
sub
and
push
push
jecxz
arpl
dec
and
lock
lock
mov
mov
imul
dec
xchg
mov
mov
pop
movsb
adc
jmp
sub
pop
lahf
fbld
out
jmp
fsubr
cmp
jmp
sbb
sbb
das
push
sbb
notl
mov
xchg
pop
mov
cmpsb
inc
movsl
outsb
adc
repz
packsswb
fidivrs
dec
push
ss
push
pusha
repnz
jo
je
jno
ret
outsl
or
dec
adc
cmp
jge
cmpsl
in
push
push
cmpl
ljmp
cs
arpl
mov
scas
bound
jo
out
pavgw
sub
sub
mov
mov
mov
xchg
xchg
or
and
shl
mov
addr16
xor
push
popl
push
xor
out
fst
mov
fidivrs
and
movsb
das
addr16
add
push
sbb
mov
cmp
aaa
jecxz
xchg
nop
imul
orl
push
push
shrb
je
cs
dec
cmpsl
jbe
ss
pop
mov
inc
das
rep
push
rep
js
pusha
xchg
lret
push
jmp
imul
or
aas
outsl
ds
inc
outsl
fsubl
adc
setp
rcrl
das
or
test
adc
inc
jecxz
inc
scas
inc
shrb
outsb
test
mov
out
mov
adc
daa
sbb
sbb
push
sbb
daa
pop
mov
push
xchg
jmp
xchg
call
fwait
xlat
sbb
out
mov
mov
daa
inc
dec
js
push
negb
dec
dec
sub
add
adc
stos
ljmp
in
inc
stos
lcall
insb
cmp
inc
bound
jbe
mov
rcr
inc
setg
arpl
fisttpll
out
push
sbb
fwait
stos
sti
sbb
inc
scas
or
ficoms
pop
in
inc
aaa
out
xorl
sbb
lods
push
das
push
mov
fistpl
mov
pop
pop
jo
leave
stos
xor
inc
stos
adc
and
stos
jg
aaa
jbe
sti
xor
mov
addr16
push
popa
sbb
imul
outsb
mov
inc
scas
daa
pop
in
xor
popa
movsl
adc
stos
mov
shlb
jmp
xor
push
or
xchg
jmp
sbbl
pop
mov
outsb
andl
fdivs
out
jge
mov
pop
jb
lahf
js
jecxz
sbb
pop
sub
ficoms
jmp
pop
scas
xor
mov
jp
jg
ljmp
ret
cmpsl
xor
orb
loopne
pop
xor
lea
lcall
insb
push
mov
mov
icebp
popa
repz
fistl
mov
inc
dec
xor
jmp
pop
jg
add
xchg
push
mov
xchg
adc
outsl
push
add
das
arpl
xor
dec
add
fmul
cmp
xchg
inc
mov
jmp
rcrl
ret
xor
xchg
add
mov
mov
loop
mov
pop
iret
pop
je
mov
paddsw
xchg
out
aaa
inc
fsubs
arpl
mov
fstps
cmp
ret
push
testl
inc
push
arpl
roll
cs
imull
ljmp
imul
or
or
adc
or
mov
aaa
mov
cmpsl
xor
mov
adcl
es
pop
jmp
shl
inc
inc
pop
push
inc
ret
xor
or
sbb
and
test
mov
cmpsl
loope
gs
imulb
mull
xchg
jbe
or
sub
shll
shlb
cmp
add
decl
movsb
addb
mov
mov
and
inc
scas
xor
movsb
in
mov
push
adc
fwait
jo
fisubl
sbb
mov
arpl
stos
int
iret
mov
pop
push
xlat
inc
clc
xchg
fistl
sbb
ss
ja
inc
jmp
test
aaa
fwait
jo
nop
ja
add
je
fwait
dec
fisttps
and
mov
inc
outsb
fs
add
cmp
movl
imul
cmp
cmp
mov
sub
sub
mov
cmp
sarl
mov
or
aas
mov
prefetchnta
xchg
jbe
cmp
fiadds
or
xor
push
xorl
xor
xor
addr16
enter
mov
das
cmp
sahf
lret
inc
adc
xchg
mov
icebp
sbbb
daa
mov
and
pop
pop
sub
jg
sahf
in
scas
mov
cmp
cmp
add
pop
add
lods
pop
jg
adc
lahf
xchg
dec
xchg
stc
mov
add
xchg
out
xor
cwtl
and
sti
jl
aaa
mov
inc
jg
fstp
and
das
lea
stos
aaa
fwait
mov
sub
outsl
inc
mov
bound
fiaddl
xchg
imul
out
or
fmuls
jp
aaa
mov
outsl
lcall
fimuls
mov
sbb
dec
xchg
dec
movsb
nop
cmpsl
xchg
mov
outsb
jg
movsl
sbb
arpl
xchg
lahf
dec
sti
adc
adc
sbb
jecxz
test
inc
inc
imul
ja
les
sti
pop
cmpsb
scas
mov
lahf
aaa
jp
and
mov
es
mov
push
mov
add
dec
xor
xor
dec
scas
bswap
adc
shlb
xchg
push
or
aaa
gs
lea
cmp
mov
fwait
stos
mov
rcrb
jecxz
mov
inc
xchg
dec
cli
push
cmp
sti
xchg
sub
outsb
add
movsl
adc
ret
mov
aas
adc
inc
out
pop
jg
insl
pop
lahf
fisttps
mov
jg
scas
or
push
das
dec
popa
sti
inc
or
je
dec
gs
sub
fs
in
adcb
jg
dec
insl
shlb
aaa
xor
mov
adc
mov
outsl
push
bound
outsl
and
inc
lods
cmpsl
scas
add
pop
dec
mov
out
jne
les
sbb
stos
mov
jmp
jmp
xor
pop
scas
repz
shrl
scas
nop
dec
lods
rol
ret
or
adc
insl
pop
fsub
cmpl
cmp
pop
mov
subl
mov
mov
push
sub
mov
jmp
arpl
cs
xor
pop
clc
rclb
pop
shlb
arpl
or
nop
and
sbb
jne
mov
pop
sbb
cs
xlat
xchg
ja
cmpsb
xor
jecxz
cmpsl
negb
push
dec
out
cmp
pop
out
mov
andb
xor
paddusb
push
xor
adc
dec
mov
push
pop
lock
sbb
out
mov
ret
mov
sbb
fiadds
mov
sbb
mov
sub
push
das
imul
daa
and
jge
sbb
mov
negl
enter
pop
mov
mov
add
xor
cltd
movsl
lret
xor
inc
outsb
cmp
cmp
outsl
xor
dec
xor
pop
sbbb
pop
xor
add
add
dec
ja
jb
jae
mov
pop
sub
and
lds
mov
xor
dec
xchg
push
sub
mov
rol
add
xor
mov
mov
pop
pop
in
add
mov
jne
cmp
out
es
inc
sbb
xor
or
repz
aam
fwait
xchg
imul
inc
push
and
mov
icebp
test
sub
jbe
pop
adc
inc
pop
pusha
test
pop
fwait
dec
jp
lahf
mov
mov
mov
iret
ret
ss
dec
mov
stos
loope
flds
xor
mov
jecxz
aad
or
scas
dec
mov
in
jecxz
stos
lret
jbe
sbb
jp
and
mov
dec
pop
popa
mov
sarl
pop
icebp
cmpsl
pop
and
add
bound
lret
aaa
push
aas
sub
outsb
mov
cmovbe
jmp
adcl
stos
fimuls
unpckhps
inc
stos
dec
orl
imul
fidivs
fwait
cmp
loop
cli
popl
dec
js
pop
outsl
pop
mov
sub
jle
rcll
add
jp
add
btc
mov
xor
pop
push
mov
dec
inc
or
outsl
pusha
mov
pusha
gs
cmp
fs
lahf
enter
xor
inc
andl
into
movsl
push
js
cmp
adc
adc
add
mov
inc
add
inc
add
sbb
dec
xchg
mov
push
jecxz
in
push
push
and
iret
push
add
shlb
xorl
lods
mov
sbb
or
inc
xorps
xor
ret
mov
push
inc
xchg
jg
pop
cmp
lret
sbb
push
lods
dec
imul
iret
stos
movsl
repz
sbb
xchg
pop
inc
mov
dec
inc
fwait
test
adc
jmp
cs
fwait
xchg
dec
and
sub
shlb
out
mov
mov
fwait
push
sub
shll
push
sti
push
ret
sub
scas
adc
mov
addr16
bound
inc
insb
sbbl
ret
inc
mov
stc
shrb
inc
dec
and
jmp
dec
and
sbb
or
sbb
jg
add
and
add
stc
push
loope
scas
lret
ss
fsubrs
push
mov
aas
mov
fnsetpm(287
xor
push
mov
sub
mov
jmp
xchg
xchg
pop
jg
subb
test
cli
ret
addr16
add
push
mov
push
mov
add
scas
inc
and
xor
xorl
dec
dec
pop
pop
cmpsl
mov
ds
pop
xlat
dec
inc
lret
mov
inc
pop
pop
adcb
fistl
ja
repnz
push
xchg
jbe
pop
lahf
mov
je
ror
popa
xor
pop
sub
ficomps
sti
ja
add
jns
cmp
inc
xor
inc
jb
daa
push
out
and
push
add
pop
push
ja
xor
sbb
aaa
mov
inc
inc
cmp
test
jnp
lock
or
push
fisubs
test
movsb
fsubrl
stos
inc
movb
xchg
add
push
scas
das
sbb
fmull
sub
push
push
jbe
add
aad
xor
les
pop
fsubs
mov
sbb
scas
mov
mov
push
sbb
xchg
inc
outsl
cmpsl
xor
xor
pop
aas
xor
xor
rolb
jp
imulb
aas
icebp
or
xor
hlt
sub
xor
pop
rorb
xor
or
les
dec
mov
mov
push
xchg
aaa
in
push
mov
lret
daa
push
xchg
push
aas
jae
outsb
add
inc
pop
mov
xor
mov
fdivr
xor
xor
inc
sub
xor
repnz
aad
xchg
ss
js
aam
jmp
mov
les
es
cmpsl
ds
inc
and
movsl
xchg
add
dec
xor
push
cs
popa
mov
cmp
xor
outsl
mov
mov
sahf
lock
orl
pop
mov
cmp
ror
xlat
jbe
add
insb
lahf
xchg
or
ret
or
push
mov
pop
sub
inc
sub
push
mov
sbbl
das
fmull
arpl
aaa
daa
fidivrs
fildll
outsl
jmp
rolb
jbe
mov
es
mov
or
sub
jmp
inc
lock
or
fildl
orl
cmpsl
lahf
add
fimull
pop
xor
xor
cmp
fmull
push
sbb
aaa
mov
pop
mov
fistps
xor
pop
jb
sbb
xor
xor
outsb
adc
cmpsl
ret
xchg
scas
jno
xlat
jmp
xchg
xor
movb
xor
add
mov
xor
xor
insl
in
add
fwait
xchg
mov
jno
dec
movsb
jmp
daa
push
shlb
jl
mov
ljmp
xchg
jge
aaa
iret
ljmp
cmp
pushw
jg
sarb
dec
sub
xchg
pop
lret
xchg
sarw
addb
ds
xchg
xchg
jecxz
dec
stos
sbb
and
ss
pop
adc
adc
aaa
pop
pop
stos
push
sub
sub
rcrb
dec
outsl
adc
pop
sti
xchg
dec
test
aam
sub
lods
mov
fbld
insl
and
jg
dec
fwait
lods
aaa
mov
jae
sti
je
adc
push
lods
push
push
aaa
dec
cmpsl
lods
add
dec
adc
mov
jb
pop
outsl
pop
push
mov
arpl
orb
or
mov
xchg
les
or
mov
adc
incb
shrb
pop
aaa
mov
sbb
xlat
repz
mov
sbb
jg
mov
dec
jnp
and
rcl
dec
lcall
mov
push
fsubl
push
pop
push
fwait
cmpsb
push
dec
imul
push
test
push
jecxz
xchg
sbb
mov
movsb
pop
xor
jg
dec
lret
mov
adc
push
jnp
add
inc
adc
fcmovnb
jb
xchg
jae
lea
lahf
inc
mov
lds
inc
divl
dec
xchg
xor
arpl
scas
cs
ja
mov
cmp
mov
lahf
ret
fisttpl
mov
add
scas
mov
ret
pop
xrelease
movsb
cltd
cmp
mov
cmp
popa
aas
mov
mov
ret
scas
mov
dec
dec
fwait
cmpl
push
jg
shr
xchg
mov
imul
xor
das
xor
adc
aas
pop
mov
ffreep
rorb
inc
inc
mov
jge
outsl
lahf
ljmp
inc
push
loop
pop
iret
pop
inc
push
adc
rcrb
lahf
and
fcmovnbe
push
xchg
push
jp
inc
jmp
adc
pop
cmc
orb
mov
notl
cwtl
and
mov
xor
mov
lret
push
mov
fistpll
cmp
mov
fwait
pop
pop
push
jae
lea
popl
mov
dec
sub
aaa
cmp
sub
mov
add
int
inc
arpl
pop
add
pop
adc
cmp
cmpb
arpl
js
les
and
sarl
xlat
add
mov
in
xor
pmulhuw
addb
jmp
push
inc
fsubrs
adc
jnp
rcll
xlat
aaa
aas
and
jne
sbb
jnp
add
sbbb
imul
pusha
mov
outsl
lret
or
xchg
test
pop
dec
jmp
loopne
sbb
loope
scas
psubq
or
lret
lahf
jecxz
mov
pop
jae
pop
jo
sbb
insl
lcall
mov
stos
jno
inc
imul
sbb
in
mov
lahf
imul
out
xchg
cmp
xor
xchg
sbb
pop
jecxz
jg
imul
test
jl
es
xchg
dec
iret
fst
adc
jno
inc
and
inc
mov
sti
insb
push
push
je
jnp
mov
aas
inc
movsl
adc
push
xor
ss
jae
sbbl
or
aas
lahf
out
sbb
xor
inc
xchg
push
jmp
or
dec
lods
inc
push
inc
out
mov
outsb
addl
pop
fwait
jb
xor
loope
outsb
xchg
outsl
push
xor
aas
and
cmp
mov
insb
add
pop
add
pop
xorb
rcl
jmp
mov
sub
add
insb
ret
inc
das
psubusb
or
fldt
pop
or
dec
fistpll
and
fimuls
iret
and
mov
push
cmpsl
addl
decl
mov
fildll
inc
fldt
es
sbb
mov
mov
ss
inc
ljmp
xchg
imul
das
mov
push
pop
xchg
pop
sbb
mov
jb
pop
mov
sub
test
pop
dec
cmovo
push
inc
jecxz
sti
je
xchg
jne
xlat
pop
sub
dec
mov
ss
lcall
mov
add
mov
sub
sbb
xlat
lahf
arpl
xor
pop
sub
jb
cmp
ja
inc
fsubs
cs
or
bound
mov
xchg
xchg
out
cmp
jb
cmp
adc
movntps
movsb
inc
rclb
sti
push
test
lds
xor
pop
ret
adc
pop
rolb
adc
daa
sbb
xor
clc
fwait
pop
lret
cmp
leave
scas
jmp
aas
add
test
dec
xchg
bound
stc
mov
adc
xor
loopne
pop
xchg
dec
mov
ss
mov
into
negl
iret
or
xor
rolb
aaa
aas
sub
jne
push
scas
pop
fsubs
sbb
sub
ja
ljmp
add
inc
ja
or
daa
outsl
or
or
xchg
pop
fwait
pop
cmpsl
lods
inc
scas
push
out
cmovge
sub
inc
jne
cs
arpl
add
sbb
adc
mov
inc
in
negl
xor
inc
or
mov
xchg
xchg
pop
hlt
mov
pop
xchg
or
inc
outsl
fisubl
imul
enter
adc
repz
dec
aam
xor
pop
shlb
daa
push
add
jg
inc
jo
mov
mov
push
push
jae
xlat
mov
sbb
sarl
and
pop
fcomps
ret
push
mov
outsb
push
xor
aas
mov
stos
pusha
mov
popa
nop
pop
imul
push
repz
test
inc
inc
pop
cmp
scas
test
and
stos
arpl
mov
sti
ljmp
sbb
ficomps
pop
xchg
dec
cs
inc
sub
cs
dec
or
adc
sti
or
cs
dec
div
and
out
pop
mov
fadds
in
add
mov
sub
push
mov
lock
jno
stos
aas
out
pusha
int
push
mov
arpl
push
jno
enter
lahf
xchg
adc
ss
dec
inc
jmp
lea
pop
ret
push
mov
pop
adc
mov
sbbl
mov
fldt
iret
jp
pop
mov
sub
inc
iret
push
scas
cmpsb
xor
ret
pop
adc
aas
mov
xchg
and
out
stos
pusha
stc
movsl
adc
add
mov
nop
lahf
sahf
movl
xchg
mov
mov
leave
fdivrs
jno
xchg
pop
and
mov
sub
adc
fwait
arpl
mov
push
jae
stos
dec
mov
xchg
fisttpl
xor
xor
push
dec
and
addr16
push
xchg
imul
xor
mov
dec
sub
and
sti
inc
out
arpl
shrb
push
mov
nop
addr16
sub
lock
addr16
aaa
push
add
daa
mov
xchg
bound
pop
sbb
push
mov
cmpsl
xlat
repnz
outsb
popl
fwait
movsl
dec
adcb
pusha
frstor
inc
das
inc
xchg
and
dec
sbb
test
mov
adc
mov
imul
je
mov
push
sub
scas
jne
orb
fsubrs
xchg
lret
jnp
cmp
js
or
xor
add
dec
add
pop
pop
mov
out
or
lods
sub
adc
add
pop
adc
addb
shlb
out
stos
push
dec
pop
cmp
xor
push
cwtl
jl
xor
imul
dec
xor
stos
push
xor
add
xchg
loope,pn
fbstp
xchg
lahf
outsb
rdpmc
bound
test
mov
mov
pop
popa
or
iret
adc
adc
shrl
ja
push
test
add
xchg
repnz
in
or
fistpl
xor
sbb
push
dec
adc
add
dec
push
inc
push
adc
mov
inc
adc
inc
rorl
das
mov
dec
arpl
add
sub
push
inc
shlb
in
movsb
mov
into
test
push
xchg
sub
xchg
jo
arpl
add
inc
pop
filds
inc
xlat
mov
jo
and
add
out
sar
inc
mov
xor
sub
sub
ss
popl
sub
or
push
add
push
pop
cmpsl
das
cmp
dec
out
xcrypt-ecb
cmpsl
or
shlb
jmp
popa
xchg
or
iret
les
adc
pop
into
rcrb
add
add
js
dec
dec
push
inc
iret
jmp
sbb
insb
idivl
mov
xor
push
arpl
aas
ja
jmp
popf
mov
testb
stos
pop
lret
das
cmpsl
dec
stos
js
pop
xchg
xor
jmp
sbb
test
daa
mov
aaa
xor
fadds
mov
outsb
mov
addr16
das
xor
sbb
pop
sti
pop
or
inc
dec
xor
frstor
aaa
fbld
xor
dec
push
syscall
imul
fdivrl
arpl
rdmsr
daa
arpl
pushf
fdivrl
cmp
insl
pop
outsl
pop
xor
scas
jnp
sub
sub
sub
pop
add
cmp
xor
aas
loope
xor
sub
addb
xor
inc
fisttpl
dec
cs
add
pop
shlb
push
imul
sahf
cmpsl
pop
add
scas
or
je
add
and
imul
sub
push
shl
sub
inc
add
add
incl
cmp
cli
pop
cmc
or
insb
mov
daa
dec
add
js
lahf
or
faddl
pop
adc
mov
add
pop
or
gs
add
stos
push
add
sbb
hlt
add
or
or
and
push
ljmp
lcall
std
add
add
xor
pop
in
call
push
imul
push
rclb
dec
scas
test
mov
dec
daa
xchg
pop
sub
lcall
sbb
outsl
fcmovne
adc
dec
data16
dec
sti
fildl
add
dec
or
add
or
push
jge
add
dec
jne
gs
addr16
addr16
or
add
or
cmp
and
add
add
jno
add
mov
and
pop
sub
push
add
pusha
add
stos
cld
out
subl
jno
jp
jbe
push
mov
sub
dec
or
rolb
jbe
add
add
adc
test
mov
dec
mov
add
inc
jecxz
orl
out
fstps
inc
pop
push
pop
add
and
popa
fs
lods
dec
sub
cwtl
add
pusha
add
imul
mov
or
repz
or
adc
add
jge
outsb
or
add
es
mov
add
add
or
adc
call
mov
xchg
loope
outsl
outsl
xor
pop
stc
add
dec
or
sub
sub
xorb
mov
scas
jp
bound
jne
push
sar
dec
call
pop
pusha
or
jne
mov
pop
popa
jle
imul
ljmp
sub
sahf
xchg
or
push
ret
mov
mov
mov
jno
sub
add
or
add
mov
addb
inc
iret
aam
or
imul
aam
add
popa
decl
jns
add
push
jae
pop
pop
lods
inc
jbe
jb
decl
lahf
cmpsb
add
outsl
inc
add
imul
or
pop
sub
push
insb
js
data16
bound
jo
or
scas
aam
insl
popa
pop
cmpsb
push
sarl
push
scas
jge
imul
push
outsl
mov
mov
arpl
inc
cmp
pop
add
xor
push
ret
test
push
mov
stc
add
pop
push
je
imul
ret
cmp
dec
sub
ret
add
push
mov
and
or
or
mov
jl
add
nop
push
es
jecxz
mov
add
fiadds
repnz
shrb
add
or
add
push
shrb
loope
mov
push
call
xchg
or
mov
inc
pop
and
jge
lcall
inc
add
pop
inc
or
rclb
mov
or
or
inc
and
push
push
sub
add
pop
pop
push
cs
sbbb
pop
repz
push
push
fdivl
mov
jno
cli
fs
fiadds
push
imul
xor
xlat
or
test
pop
lods
push
outsb
nop
jl
and
jno
xor
decl
ret
add
lret
push
sub
pop
and
js
pop
ja
push
xor
push
aam
pop
push
add
mov
sahf
sbb
int3
jbe
je
inc
out
loopne
pop
insl
test
push
aaa
add
or
sbb
popa
mov
add
push
ja
into
add
add
pop
xchg
mov
sub
iret
pusha
insl
bound
push
loopne
cmpsl
and
push
sub
ss
iret
inc
aad
in
add
xorl
add
inc
fldl
adc
mov
add
push
test
adc
mov
push
or
pop
xchg
or
shrb
lret
mov
mov
or
push
jo
sub
xchg
mov
cmp
cs
daa
sub
add
push
repnz
push
or
pop
shlb
rclb
sbb
dec
pop
inc
mov
pop
rclb
xchg
imul
pop
or
mov
pop
call
cmc
mov
popa
fists
dec
add
cmp
pop
or
or
adc
mov
or
pop
or
or
out
dec
add
add
inc
push
jb
loope
mov
fstps
push
or
es
or
lret
leave
inc
je
movsb
mov
jp
push
std
filds
imul
sbb
pop
stos
add
or
shlb
imul
incl
faddl
dec
pop
repz
add
icebp
adc
ja
push
jo
rolb
add
cmpsl
mov
jb
insb
ss
and
lods
add
fadd
add
shrb
mov
add
add
pop
test
sub
push
jmp
push
dec
add
xchg
sub
and
sbb
leave
mov
mov
add
mov
xchg
sub
mov
or
add
fnsave
shll
shlb
sahf
pop
or
mov
or
pop
adc
add
pop
pop
mov
mov
or
push
pop
mov
push
stos
sub
dec
xlat
mov
mov
jne
or
push
lret
add
ret
or
mov
pop
mov
jecxz
or
jg
addl
addb
dec
push
loopne
inc
add
add
cld
mov
sub
vmread
fs
jnp
fdivrp
push
call
dec
lods
mov
push
movsb
es
cmp
mov
push
outsl
push
xor
lock
mov
and
out
push
movsb
or
add
add
addl
or
push
inc
add
add
repnz
das
das
or
cmp
aam
sub
and
cmp
add
add
and
sub
xor
mov
adc
and
pushf
and
leave
ret
and
into
lods
xor
and
jns
adc
lcall
sbb
mov
sub
dec
cmp
inc
repnz
add
add
test
cmp
les
dec
and
push
ljmp
mov
mov
incl
mov
ljmp
iret
enter
xor
jl
filds
sub
cld
test
outsb
in
adc
test
sbb
out
push
and
xor
inc
movsb
jge
out
push
pop
pusha
mov
pop
mov
mov
adc
fs
mov
sarb
ds
xchg
and
xchg
add
cmp
nop
xor
jg
sub
inc
insb
inc
push
leave
dec
cs
cwtl
dec
lods
xor
xchg
dec
mov
rcrb
add
pop
into
int3
xlat
cld
sub
mov
cs
insb
dec
push
mov
push
mov
add
pushf
mov
aaa
or
pop
das
jns
pop
cmp
call
in
jnp
out
hlt
lock
push
adcb
inc
sub
pushf
mov
dec
jae
sbb
pop
data16
sub
stos
outsl
mov
push
xchg
cs
or
jns
insl
insl
addr16
pop
xchg
jmp
bound
mov
insl
bound
inc
push
push
nop
in
jbe
cmpsl
jno
mov
int
inc
outsl
xor
jo
fiaddl
jp
arpl
or
imul
test
push
xor
dec
dec
dec
dec
xor
ss
cmp
dec
dec
cmp
xor
bound
inc
sbb
loop
cmc
xchg
jno
imul
sbb
sub
inc
jno
pop
jno
xchg
or
sbb
loop
push
mov
add
mov
test
js
xchg
into
je
push
bound
je
outsl
and
or
inc
popa
fidivrs
je
les
push
jae
pavgb
adc
imul
mov
cmp
xchg
mov
insb
jo
fbld
jb
imul
gs
lahf
addr16
jmp
in
or
fldl
mov
in
dec
cvtpi2ps
push
push
mov
movl
inc
or
outsb
mov
sbb
or
push
add
imulb
addps
jg
add
lods
call
lea
push
adc
lods
push
mov
test
and
sub
jge
ficomps
fwait
push
lea
and
adc
mov
pop
pop
inc
pusha
push
sub
ret
addl
imul
js
push
es
xor
xor
cmpsb
imul
orb
add
enter
lcall
push
push
pop
dec
cmp
xchg
ja
test
pop
lea
test
jnp
cltd
or
push
enter
addr16
shlb
jo
repz
sarl
adc
nop
mov
mov
xor
rcll
cld
mov
push
pop
inc
add
push
lea
pop
pop
test
movl
les
inc
inc
pop
mov
dec
jnp
xchg
xor
or
fdivp
pop
sub
push
adc
ret
mov
sbb
enter
dec
mov
push
enter
cmp
xor
add
mov
or
punpckhbw
mov
repz
nop
push
cmp
fnclex
jge
push
push
lock
push
lods
sahf
fcompl
enter
xor
inc
mov
inc
cmp
xchg
xor
fdivl
insl
sub
jne
mov
adc
push
mov
add
shl
push
adc
push
adc
repnz
adc
fs
xchg
repnz
nop
adc
mov
jb
or
add
xor
movsb
xchg
dec
push
rcll
jb
pop
cs
mov
cltd
call
test
xchg
movsb
push
insb
test
fs
jl
cmpsl
mov
pushf
xchg
les
and
mov
cmpsl
test
add
fnsave
add
adc
jbe
int
or
in
nop
xor
xor
stos
cs
arpl
push
xor
push
sbb
sub
mov
cmp
and
push
inc
inc
adc
imul
mov
aam
fadds
cmp
push
ss
or
sbb
cmp
pushl
mov
push
enter
mov
call
sub
out
pop
inc
fadds
adc
jb
cltd
cmp
or
add
fwait
sbb
testb
add
mov
movsl
ljmp
roll
enter
mov
test
pop
jmp
mov
adc
sbb
jmp
mov
cmp
outsl
mov
adc
mov
insl
call
es
sub
xor
pushl
push
pop
or
push
add
pop
lods
push
or
scas
add
cmpsb
outsb
mov
fisttpl
shr
pop
in
popf
dec
call
push
addl
pop
inc
fxch
fdivs
fnstsw
sahf
ja
or
imulb
mov
movsl
mov
mov
subb
cmpsl
sarl
mov
inc
xor
mov
movsl
outsl
sbb
sbb
mov
xor
xor
and
movsl
sub
cwtl
icebp
imul
add
fidivl
fcoml
cmc
adc
test
fadds
add
shrb
add
subb
xchg
sbb
leave
dec
add
mov
sub
add
or
sbb
dec
aas
xor
shlb
cmpsl
and
xor
jmp
decb
mov
dec
push
pop
lock
inc
xchg
bound
testb
je
test
pusha
shrl
cs
mov
insb
add
sahf
test
adc
and
push
rol
mov
data16
xchg
pop
cs
pusha
push
inc
xor
dec
in
jb
add
loopne
pop
cs
shrb
data16
movsl
push
fs
xor
in
mov
popa
lea
cld
pop
pusha
in
jne
xchg
push
jo
jle
fisttps
cli
mov
push
push
mov
cwtl
fcom
rclb
aaa
jnp
inc
call
mov
push
add
fsubr
mov
push
pop
adc
addr16
fisubrl
out
ret
mov
mov
rorb
jbe
dec
dec
mov
cmpsb
jmp
jne
shrb
cmp
in
pop
add
imul
pushl
test
rcrl
inc
lret
test
cld
fisubs
cld
pop
add
lea
adc
cmpsl
mov
mov
shlb
loopne
add
adc
jle
sahf
shlb
call
stc
test
imul
sub
fwait
mov
shlb
jg
or
xor
and
dec
rclb
aas
jge
testb
shrb
lahf
testb
rclb
dec
dec
addb
cmp
fistpll
push
mov
or
inc
xchg
loope
in
lret
dec
jo
repnz
cmp
jecxz
adc
gs
adc
pop
ss
jmp
enter
in
sbb
lods
cmp
sub
jb
fwait
shlb
push
loopne
jns
nop
mov
mov
gs
or
add
dec
fwait
xor
inc
push
or
adc
dec
pusha
divl
addb
mov
push
cmpb
popa
mov
movsb
push
insb
cmpsb
popf
mov
mov
add
inc
repz
push
add
lea
movl
mov
ja
pop
sub
das
lea
pop
cmc
movhps
aad
pop
pop
pop
or
mov
jg
jb
lds
lret
inc
mov
imul
or
or
mov
xor
push
scas
pop
mov
sub
icebp
inc
mov
sbb
sti
push
pop
add
and
mov
ret
mov
xchg
test
xor
fsubrl
jb
lret
or
push
mov
mov
pusha
roll
loopne
imul
sarb
icebp
addb
xchg
inc
push
iret
std
inc
jno
in
add
mov
xchg
mov
inc
dec
push
insb
dec
inc
jbe
adc
cwtl
mov
lcall
imul
pop
test
jle
icebp
or
xchg
ret
cmp
paddb
jae
and
enter
mov
mov
imul
mov
lock
lds
cld
inc
movsl
push
adc
int
enter
das
std
pop
leave
fisttps
fcomp
pop
xchg
push
in
mov
loope
lret
push
add
mov
lea
arpl
adc
fcompl
fwait
lock
cmp
mov
mov
sbb
push
jne
mov
xor
xor
push
pop
add
dec
fwait
movsb
addb
inc
outsl
ret
pop
shll
pop
add
ret
jmp
mov
add
mov
mov
ret
or
mov
insb
lea
fdivrs
adc
push
xor
into
or
xchg
inc
push
sbb
ljmp
addb
loope
and
adc
rol
clc
add
mul
mov
or
inc
test
push
rorl
cmp
subl
add
cmp
je
nop
or
push
cld
add
ret
and
sub
sbb
cmpsl
sbb
xchg
add
mov
mov
inc
ljmp
popa
iret
mov
imul
mov
and
dec
inc
sbb
jo
cmp
dec
ret
ds
xor
aaa
imul
push
mov
mov
pop
xor
cwtl
sbb
inc
mov
and
or
push
shll
push
popa
xor
cmpsl
mov
jne
sub
jecxz
scas
inc
sub
push
push
inc
pop
dec
jg
arpl
or
cmpsb
mov
lret
or
les
mov
lock
jne
add
pop
movsl
lds
jne
add
add
movsb
push
jp
or
imul
stos
aad
jp
fcoml
mov
jo
mov
xor
in
adc
inc
add
and
pop
dec
xor
nop
out
adc
es
data16
sbb
data16
cmp
scas
clc
or
inc
inc
and
pop
cmp
ljmp
jg
jg
cmpl
jb
jo
hlt
mov
mov
jle
add
jo
pop
enter
shl
pop
push
jmp
sub
or
cmpsb
mov
mov
pop
push
sub
push
lods
mov
ds
loopne
out
and
sub
cld
mov
orb
mov
loopne
les
sbbl
mov
add
aaa
repnz
dec
pop
xchg
add
pop
dec
cmp
dec
push
aad
popl
fwait
mov
dec
mov
cmp
mov
jbe
loopne
or
shr
mov
ficoml
push
jl
push
push
sbb
push
sub
pop
movsb
pop
out
sahf
sub
out
cmp
mov
outsl
flds
pop
jae
and
fsubrl
sbb
shll
loop
push
xor
xor
or
add
inc
nop
add
lret
aam
xchg
mov
cmpsb
cmp
add
xchg
movsl
or
pop
or
nop
xorl
testb
mov
incb
or
sub
test
pusha
push
adc
sub
and
and
mov
in
xchg
pusha
inc
andl
lods
test
push
test
flds
xchg
and
pop
push
jnp
dec
notb
push
xor
fcomps
pop
cld
out
movsb
xor
mov
clc
pop
mov
xor
xor
icebp
arpl
inc
pop
jnp
cmp
xor
fsubl
popl
pop
stos
and
mov
or
sbb
pop
in
mov
jl
push
test
inc
sbb
jnp
shlb
fs
insb
or
cmp
pop
push
mov
mov
sub
jb
adc
add
mov
test
bound
push
out
cltd
insl
popa
jb
pusha
push
gs
lds
andl
aas
add
cld
enter
and
inc
mov
hlt
add
and
gs
cmpsl
jge
adc
fadd
mov
hlt
test
stos
inc
js
jae
xchg
dec
leave
shlb
jmp
add
lods
or
inc
push
push
imul
add
in
test
adc
xchg
sub
cmp
cltd
stos
mov
lods
mov
cmp
adc
add
inc
dec
mov
imul
push
push
adc
mov
arpl
mov
lret
lea
push
aam
int3
popa
leave
mov
mov
or
add
lea
adc
imul
adc
stos
mov
hlt
rdpmc
fisttpl
into
push
push
add
push
or
mov
mov
movsl
dec
movw
fcoms
sbb
push
add
nop
out
mov
add
iret
and
or
sbbl
sbb
adc
or
loopne
in
dec
imul
push
push
jns
jns
psllq
push
jns
jns
adc
push
jns
jns
adc
adc
sbb
inc
adc
adc
stos
or
mov
xchg
fsubs
adc
pusha
cs
fst
and
pop
cmpsb
int3
scas
cltd
xor
push
mov
sub
scas
jo
insb
and
or
jmp
push
pop
rcl
pop
mov
pusha
mov
dec
call
pop
cmc
xor
fmuls
mov
jecxz
xchg
push
cmp
ret
les
mov
sub
push
dec
xor
xor
test
push
push
sbb
in
lea
in
push
mov
inc
fadd
pop
mov
dec
inc
dec
and
cmp
add
push
or
nop
mov
pop
push
lock
ret
push
or
nop
sbb
fs
mov
in
je
lds
xchg
push
enter
dec
dec
xchg
push
inc
call
iret
sbb
notl
jnp
mov
jge
ljmp
and
lods
sbb
xchg
cmp
jns
or
add
adc
loope
push
pop
pop
les
push
xchg
pop
leave
add
loopne
mov
inc
ret
mov
push
dec
dec
leave
mov
push
repnz
mov
or
xor
jno
pop
push
imul
leave
sub
lock
push
mov
leave
xorb
dec
sbb
inc
sbb
movsb
pop
inc
inc
cmp
cmp
adc
add
in
in
pop
pop
call
rcrb
cmp
jns
pop
mov
inc
xor
dec
adc
add
sub
sub
pop
mov
in
leave
hlt
pop
inc
add
lea
mov
xchg
mov
dec
mov
sbb
je
jo
jb
pop
cmp
sub
je
push
inc
inc
and
jmp
push
push
ds
push
and
adc
je
xor
and
sbb
dec
cs
bound
push
jns
pop
sbb
in
or
push
or
and
in
or
and
or
out
fisubl
pop
adc
mov
fisubs
adc
les
dec
cmp
push
jns
xor
adc
repnz
and
add
mov
sbb
rcrb
inc
push
in
cmpsl
sbb
or
lcall
add
sbb
and
dec
xchg
xchg
and
and
and
out
daa
xor
sub
push
inc
sahf
inc
sahf
sub
xor
inc
sahf
sub
sub
sbb
cmp
mov
cs
jo
jbe
xchg
xor
cmp
cmp
jbe
or
in
inc
cs
cmp
cmp
sahf
cmp
lahf
aaa
outsb
cmp
and
cmp
xchg
inc
sahf
inc
cmp
cmp
fisubs
out
cmp
cmp
nop
inc
inc
sbb
jne
pause
out
out
addb
nop
out
imul
sbbl
sbbl
inc
sahf
inc
fimuls
dec
jmp
mov
dec
cmp
sbb
push
sbb
push
in
inc
aad
push
push
jae
cmp
movsl
push
sbb
sbb
je
push
push
xor
jb
lds
and
insb
pop
repnz
jo
inc
sbb
test
in
pusha
out
xchg
inc
fisubs
inc
bound
inc
leave
and
and
and
nop
ja
xor
add
push
jecxz
inc
sahf
push
imul
in
dec
insl
outsb
mov
cmp
mov
inc
jno
jno
jb
push
jecxz
enter
jae
je
repnz
fimull
ja
xor
pusha
xchg
sbb
jns
jp
add
in
out
jnp
call
jge
test
out
jg
cld
mov
cmp
lods
addl
in
xchg
test
test
imull
cmp
push
xchg
popa
inc
mov
and
mov
lea
and
xor
enter
jne
xchg
xor
push
add
xchg
pop
xchg
add
jno
dec
inc
push
cltd
or
inc
push
cltd
pusha
cltd
sub
dec
and
xchg
nop
xchg
popf
sbb
lahf
cltd
dec
insb
dec
mov
or
mov
push
cltd
and
movsl
pop
fs
xchg
cmpsb
pop
cmpsl
pop
or
sbb
test
test
sbb
and
cmp
add
int
sar
les
imul
mov
ret
jmp
add
xchg
and
clc
movl
fimuls
in
inc
js
lods
adc
jge
mov
cs
cmp
dec
cmp
stc
pop
adcl
pop
fnsave
dec
mov
lods
mov
cmpsl
sbb
xor
adc
ret
jns
cmp
fmull
fldcw
aaa
push
and
mov
mov
pushf
out
sub
sub
jge
dec
add
push
fcoml
inc
or
push
int3
add
shlb
movsb
push
or
insb
addr16
xchg
lret
enter
mov
je
test
pop
add
movl
aad
xchg
cmpsb
andb
bound
push
sub
adc
js
jo
lods
dec
lock
xor
lods
inc
popf
adc
push
or
fisttpl
jge
push
mov
and
mov
shlb
cmp
sub
pushl
imul
aad
test
jnp
adc
adcb
incl
incl
jo
jmp
push
lcall
out
loope
add
insb
andl
lock
mov
mov
ret
adc
jno
fbstp
add
mov
mov
aam
in
call
lea
loop
addl
adc
mov
call
mov
cmp
inc
push
insl
xchg
mov
cmp
rcr
rolb
push
push
cmp
cmp
sbbb
dec
mov
in
outsl
sti
jnp
ror
mov
stc
mov
add
jb
fsubr
sbb
adc
xchg
push
in
add
mov
add
mov
add
cwtl
pop
aam
or
adc
neg
mov
shlb
es
mov
out
push
shrl
pop
jmp
out
loopne
add
sub
xor
ror
mov
movsb
stos
popf
cmp
or
cld
inc
test
ret
loope
sbb
dec
dec
and
daa
cmp
inc
imul
pop
adc
mov
dec
jg
pop
jg
imul
scas
push
scas
sub
add
sub
and
mov
or
rclb
jns
jnp
imul
scas
int3
adc
mov
test
add
cmp
test
push
mov
mov
sbb
jl
popa
je
or
insl
ja
or
add
lods
fsub
jo
mov
sbb
cmp
cli
lret
sbb
lods
daa
imul
mov
in
jl
lods
push
popa
mov
push
lcall
ret
push
mov
push
loopne
mov
and
jle
dec
lret
lock
inc
int3
shld
ficoml
in
ret
jecxz
loopne
test
outsb
pop
xchg
stos
dec
cmp
call
mov
pop
push
data16
push
inc
cmp
enter
sub
add
out
inc
loop
mov
adc
mov
adc
fs
fmuls
ds
adc
outsl
fcoms
add
push
pop
push
adc
out
andb
int3
xchg
adc
pop
adc
mov
scas
sbb
xchg
gs
lea
cmp
ss
lcall
xchg
mov
pushl
pushl
jnp
sub
inc
add
sti
inc
jo
mov
imul
jne
sbb
sub
xorb
jg
adc
push
les
call
cmp
jg
jb
dec
movsl
push
push
imul
push
neg
sbb
inc
or
js
je
or
add
jo
mov
jmp
push
or
fdivrl
shlb
cmp
mov
mov
bound
and
test
push
and
push
aas
into
nop
insl
and
mov
xor
adc
lcall
aaa
hlt
aaa
xchg
cmp
mov
ret
push
inc
nop
pop
movsb
sub
push
lds
cmpsl
inc
stos
rclb
mov
push
jg
mov
bound
lret
inc
movntps
in
shlb
je
rcll
cmpsb
mov
adc
movzbw
xor
ret
push
mov
imul
mov
jg
lcall
ds
jo
mov
jmp
push
aas
or
mov
dec
xchg
test
push
sub
iret
push
xor
rolb
sub
sub
popf
xchg
mov
push
adc
or
push
stos
pushf
pop
push
rcr
jb
call
fldl
cmp
xorl
adc
xor
inc
xlat
inc
cli
push
add
adc
imul
fwait
push
inc
add
clc
jno
pushl
push
dec
and
add
mov
test
in
mov
jno
lret
cmp
or
inc
mov
and
fldcw
add
jg
fs
addb
mov
cs
and
push
rcr
inc
adc
dec
or
in
test
sub
in
adc
add
xchg
mov
test
imul
cmpsb
pushf
xor
and
leave
dec
or
or
dec
and
or
enter
and
add
add
push
xor
sub
fdivr
stos
rolb
lea
fsubrs
rclb
inc
mov
pushf
mov
enter
cmp
xor
movsb
add
add
mov
clc
jg
roll
das
add
adc
mov
sub
outsb
jl
aaa
les
daa
add
mov
cmpl
cmp
setge
andb
outsb
mov
ret
and
out
popa
pop
sbbl
jb
enter
dec
adc
sbb
adc
popa
or
in
scas
pop
jb
add
das
mov
and
xor
test
inc
push
aas
pop
push
pop
mov
mov
lahf
sub
pop
idivb
les
sub
and
lahf
sub
push
sub
sbbb
mov
cs
sub
addb
dec
fisubrs
push
sbb
inc
cmpsb
dec
mov
addr16
addr16
je
imul
insl
or
jo
es
or
jb
ss
daa
insb
pop
push
sbb
jbe
push
outsl
pusha
xchg
push
sbb
jbe
and
adc
adc
sbb
in
or
sbb
push
sbb
inc
pop
push
push
xor
pusha
xchg
mov
and
push
es
sbb
sbb
cwtl
jne
pop
in
insb
and
and
and
and
adc
popa
mov
dec
enter
es
dec
push
es
sbb
xor
add
and
sub
pop
sub
cs
bound
xor
xor
xor
les
xor
imul
orb
and
ljmp
mov
push
fwait
nop
dec
cmp
sbb
or
aas
cmp
es
push
inc
inc
inc
repnz
rclb
dec
bound
jns
inc
xchg
pop
dec
insb
dec
sbb
fadd
xor
dec
jge
sbb
sbb
dec
sbb
jno
push
sbb
leave
fwait
push
sbb
push
int
push
adc
push
lods
or
jae
fs
push
xchg
pop
pop
push
fs
es
pop
pop
cwtl
nop
dec
ds
pop
pusha
mov
pusha
loop
popa
lods
bound
arpl
out
gs
pop
imul
push
xor
test
imul
sbb
fs
push
adcb
outsb
in
inc
push
outsl
jo
pop
mov
cltd
jno
lret
jae
fadd
sbb
jbe
xor
out
ja
js
and
sbb
bound
jl
xor
dec
insb
jge
jle
jg
out
shll
dec
inc
jns
sub
sbb
test
inc
xor
jbe
xchg
repnz
repz
mov
nop
dec
mov
mov
and
mov
nop
xor
xchg
xchg
xchg
jne
rcll
fadds
xchg
xchg
pop
pop
jb
in
cmp
add
fwait
mov
packsswb
and
xchg
mov
and
mov
xchg
or
xor
pop
test
dec
push
je
dec
stos
ja
sarl
xchg
lods
rorl
scas
and
adc
shll
loop
pop
xor
mov
mov
sbb
std
adc
cmpsl
mov
mov
adc
in
mov
and
mov
or
jb
and
xor
jecxz
fadds
enter
sub
fiaddl
lret
int3
iret
mov
into
iret
adc
in
call
pop
xchg
jne
xchg
inc
js
sbb
or
xchg
or
fmuls
mov
inc
in
call
fcmovnu
and
jbe
sbb
loopne
inc
cmp
daa
loope
loop
mov
in
in
sub
stos
xchg
out
out
push
call
cltd
jmp
and
mov
and
add
out
out
in
sbb
cs
cs
cmc
and
loopne
idivb
jne
sbb
idiv
lahf
stc
fs
inc
sti
and
int3
xchg
xlat
imul
decb
cltd
fs
add
bound
enter
add
add
inc
xor
gs
xchg
es
pop
shrl
and
push
repnz
or
fs
or
or
jns
shll
cltd
imul
pop
adc
sbb
and
adc
popa
adc
or
and
cmp
and
xor
leave
enter
jno
xchg
mov
sbb
and
sbb
mov
sti
arpl
cmp
shll
jmp
and
mov
and
pop
nop
dec
popw
and
orb
daa
sub
dec
sbb
mov
jae
rorl
and
mov
and
push
shll
sbb
inc
xor
call
mov
mov
cmp
jae
and
xchg
cmp
inc
xor
push
cmp
leave
jp
addr16
xchg
pop
enter
roll
inc
aaa
rcll
ret
fs
inc
inc
and
mov
add
cltd
loope
dec
fwait
outsl
dec
xor
in
dec
dec
and
push
sbb
daa
push
pop
cmp
push
jo
aas
push
and
in
fists
push
inc
cs
pop
pop
shll
and
inc
pop
pop
xchg
pop
insb
rcrb
pop
pop
sbb
jo
xchg
pop
fwait
pop
and
xchg
popa
and
cltd
xchg
je
loope
add
push
mov
xchg
addr16
push
lds
jbe
sbb
insb
pop
loope
inc
insl
cmp
outsl
inc
mov
enter
jb
arpl
mov
int
pop
enter
js
xchg
sbb
xchg
jp
leave
xchg
sbb
jl
jle
leave
xchg
sbb
adcb
jge
push
leave
xchg
sbb
addl
xchg
mov
nop
cmpl
add
sbb
pop
mov
mov
push
pop
push
lock
mov
rcr
jge
mov
sub
jge
and
mull
loopne
in
cmp
add
addb
dec
sub
pop
or
insl
pop
and
or
jecxz
jg
inc
or
lret
cwtl
mov
ljmp
mov
dec
pushf
sar
mov
xor
xor
cmp
jg
inc
sub
enter
jnp
ret
sub
lods
pop
nop
sub
or
or
ds
jo
fwait
sbb
xor
pop
xor
mov
mov
add
xor
sbb
mov
inc
je
daa
push
sub
push
pop
pop
xchg
push
sbb
fldl
and
mov
adc
mov
enter
movsl
mov
or
sub
push
xor
xor
mov
mov
add
test
lock
add
rorb
lret
cmp
mov
neg
or
mov
add
in
aas
in
fnstenv
cmp
jle
add
out
add
push
flds
movsl
hlt
imul
adc
or
xchg
inc
rclb
mov
jle
dec
xchg
push
sub
sbb
mov
gs
mov
mov
cmp
adc
xchg
jno
adc
sti
loopne
ret
leave
inc
inc
gs
lock
scas
cs
push
stos
loope
sbb
dec
lock
orb
add
popa
adc
mov
adc
pop
inc
ret
adc
or
and
in
push
jp
incl
dec
mov
addb
mov
push
push
inc
ljmp
sahf
sub
add
jmp
je
daa
dec
push
in
inc
jno
sub
ret
adc
nop
sbbl
hlt
add
in
cwtl
mov
cmc
test
sub
pop
sbbl
or
pop
pop
push
insl
repnz
je
into
cmp
cmpl
jns
addr16
imul
push
stc
enter
push
das
nop
pop
cmp
jno
mov
xor
pop
insb
or
je
arpl
mov
jl
cmpl
cld
jg
adcl
pop
and
push
test
or
test
nop
pop
enter
mov
mov
aam
insb
or
pop
mov
pop
int3
xchg
cwtl
xchg
cmpl
jns
lcall
lahf
mov
add
xor
add
inc
cmpsb
arpl
jns
mov
or
add
scas
das
nop
pop
enter
stos
or
enter
in
adc
adc
mov
and
nop
pop
dec
mov
mov
cmp
pop
enter
mov
and
nop
mov
jns
mov
in
repnz
enter
or
sbb
cs
into
xchg
and
nop
and
or
or
pop
adc
movl
in
adc
xor
add
and
nop
pop
xchg
ficompl
cmpl
jns
loop
in
enter
in
out
jns
mov
mov
in
repnz
enter
mov
inc
pop
and
test
mov
mov
or
add
hlt
das
nop
pop
enter
stc
mov
repnz
enter
pop
cld
inc
nop
das
nop
pop
jl
xchg
add
pop
and
cmp
les
adc
mov
pop
and
fadds
xchg
xor
sub
jns
mov
push
in
repnz
adc
adc
adc
and
fcoms
cmpl
adc
mov
enter
sbb
push
dec
pop
and
nop
and
dec
and
cmpl
push
pop
enter
and
inc
pop
and
sub
pop
sub
jns
mov
inc
jae
xchg
subb
cmp
jns
pop
mov
insl
int3
das
xor
xor
or
add
roll
xor
xor
xchg
cmp
js
mov
les
repnz
pop
inc
dec
inc
enter
or
clc
inc
and
nop
pop
aam
mov
pop
inc
dec
push
dec
add
push
cmp
pop
enter
push
nop
push
mov
sbb
in
repnz
dec
cmp
pop
enter
lock
add
xchg
in
popa
or
add
data16
nop
pop
enter
addr16
pop
mov
push
imul
jns
inc
inc
sbb
enter
mov
in
insl
inc
xchg
add
mov
pop
enter
in
jbe
pop
and
nop
js
jp
jnp
cmpl
jge
in
inc
pop
and
sbb
jg
jns
mov
and
add
test
jl
test
clc
mov
or
add
and
nop
pop
mov
mov
hlt
xchg
add
xchg
movsb
cltd
adc
nop
pushf
hlt
popf
cmp
enter
mov
mov
int3
mov
xor
enter
test
stos
lods
jns
mov
subb
scas
enter
enter
pushf
mov
pop
and
pop
mov
stos
add
mov
or
add
mov
pushf
mov
add
arpl
test
enter
jl
int3
shll
nop
pop
inc
les
sbb
movsb
leave
xor
enter
lret
jl
and
nop
int
into
test
jns
mov
shl
add
in
nop
pop
enter
and
test
sbb
loopne
in
cmp
mov
arpl
shl
add
cld
loop
and
fsubs
and
stc
mov
cmpl
jns
jmp
in
pop
enter
out
shr
pop
and
nop
icebp
and
or
jns
mov
clc
rclb
repnz
out
xchg
std
sbb
cmp
ljmp
add
adc
hlt
xchg
das
fmuls
in
add
add
rcrl
or
repnz
pop
and
les
push
mov
or
add
pop
das
nop
pop
enter
sbb
mov
sbb
jns
and
rorb
in
mov
movsb
and
das
nop
pop
pushf
and
test
push
pop
enter
js
sub
and
nop
je,pn
mov
jns
mov
xor
add
push
ss
pop
enter
test
inc
pop
and
jo
jl
add
mov
or
add
inc
das
nop
pop
enter
inc
clc
inc
mov
dec
test
add
xor
mov
in
mov
dec
xor
jns
or
push
repnz
adc
nop
pop
enter
push
sub
sbb
and
add
pop
pushf
pop
pop
enter
pop
jl
sub
das
nop
popa
adc
gs
mov
data16
repnz
xor
pusha
inc
enter
outsb
xchg
add
mov
or
add
jbe
nop
pop
enter
jp
jge
inc
pop
and
jle
xor
jns
mov
or
add
and
nop
pop
test
inc
pop
les
add
lea
in
test
nop
xchg
or
mov
add
xchg
or
push
fwait
xor
pop
lahf
mov
sbb
add
cwtl
das
nop
pop
enter
cmpsb
mov
test
insb
lods
repnz
dec
scas
add
pop
mov
inc
pop
and
xor
xor
insb
mov
add
mov
in
rolb
and
les
fadd
jo
enter
ror
lret
cmpl
jns
rcl
xor
pop
and
nop
aad
xlat
mov
jns
mov
ftst
add
fcomp
nop
pop
enter
push
fists
loop
fmul
lret
in
sbb
in
push
xor
cmpl
add
and
nop
pop
add
cld
repnz
notb
enter
xor
xor
and
nop
std
pop
ljmp
pushf
inc
mov
add
repnz
pop
add
push
enter
test
sbb
inc
cs
pop
dec
or
adc
sbbb
pop
and
fmuls
arpl
adc
adc
mov
xor
pop
pop
sbb
and
mov
cmpl
and
fildl
and
xor
enter
and
and
nop
sub
mov
repnz
sub
or
add
movl
cmp
faddl
and
inc
xor
ss
add
cmp
in
cmp
fsub
pop
enter
pop
loopne
xchg
pop
and
nop
ds
inc
jl
test
nop
pop
enter
js
inc
pop
and
enter
cmpl
inc
add
jne
add
repnz
push
das
nop
pop
enter
push
jo
mov
push
pusha
pop
repnz
inc
pop
cmp
and
fcoms
pop
mov
cmpl
jb
sbb
fs
mov
mov
in
repnz
pop
enter
cmp
pop
and
int3
outsl
les
jns
mov
inc
enter
js
movsb
mov
stc
add
insl
repnz
pushf
imul
and
nop
pop
jo
push
or
and
fcom
test
jns
mov
in
repnz
and
nop
pop
enter
cmp
inc
pop
and
mov
faddl
sub
clc
cwtl
or
add
pushf
cmp
xchg
sahf
xor
or
add
test
inc
mov
xor
pop
enter
stos
push
lods
mov
stos
lods
scas
repnz
fs
mov
add
adc
nop
pop
enter
movsb
test
xor
mov
mov
insl
pop
and
fdivs
mov
mov
loopne
adc
repnz
dec
pop
inc
insb
mov
add
les
nop
pop
dec
int3
add
leave
xchg
mov
pop
enter
lret
xor
hlt
pop
and
nop
into
sbb
rcl
or
enter
mov
mov
mov
jns
frstor
enter
loope
loop
pop
and
nop
fmull
out
cmpl
and
cld
in
nop
pop
enter
int3
lock
pop
and
icebp
inc
repnz
mov
or
add
testl
in
adc
xor
add
stc
cmpb
inc
xor
in
jb
add
add
nop
pop
enter
pop
test
mov
or
jo
push
jmp
jb
cltd
inc
sbb
push
repnz
and
push
call
adc
sub
stc
cmpl
jns
sbb
mov
pop
and
nop
and
pop
and
mov
and
mov
pop
enter
enter
and
in
das
call
mov
or
add
xor
mov
cwtl
cmp
jo
pop
aas
repnz
and
inc
enter
sbb
inc
and
nop
pop
lock
js
cmpl
jns
dec
ss
inc
pop
and
nop
dec
je
adc
jns
mov
push
in
repnz
pop
nop
pop
enter
enter
and
nop
pop
call
mov
enter
pop
adc
adc
das
nop
arpl
addr16
mov
imul
push
insb
pusha
inc
enter
imul
test
nop
pop
enter
jae
jne
inc
pop
and
jbe
ja
add
and
test
enter
mov
das
nop
pop
call
mov
les
or
or
call
sbb
nop
mov
in
and
sbb
int
lods
dec
pushf
int3
xchg
mov
rorl
xchg
insl
jo
xor
enter
xchg
pop
cwtl
fs
and
nop
nop
mov
cmpl
sbb
mov
nop
pushf
fsubl
cmpl
and
pop
adc
add
lods
add
sbb
xor
andb
les
mov
xor
or
mov
xchg
test
mov
sarb
repnz
shl
nop
pop
enter
or
inc
pop
and
add
add
or
add
int3
das
nop
pop
enter
into
lock
mov
sarl
repnz
rcl
xlat
enter
or
mov
and
nop
pop
sbb
int3
faddl
fisubs
jns
loop
in
enter
in
out
pop
and
nop
ljmp
test
or
add
and
nop
pop
cmp
jo
cmpl
jns
rcrb
xchg
mov
cli
mov
cld
cmp
cmp
inc
dec
add
add
hlt
add
js
fmull
cmpl
jns
cmove
pop
enter
adc
pop
and
nop
pop
jo
rcrb
repnz
inc
sbb
sbb
or
add
and
nop
pop
mov
mov
add
and
or
je
push
add
sub
nop
pop
enter
sub
orb
enter
mov
adc
pop
nop
std
inc
pop
xor
push
aaa
cmp
or
add
xor
nop
pop
enter
cmp
xor
inc
mov
xor
inc
enter
call
xchg
stc
adc
add
inc
rorb
pusha
rorb
dec
add
cmp
lock
or
add
mov
mov
mov
push
xchg
js
jns
mov
push
in
repnz
pop
enter
enter
jl
inc
pop
and
sub
pusha
sub
mov
neg
and
aaa
or
dec
clc
pop
ds
ret
sti
sbb
bound
adc
xchg
xor
in
add
shlb
in
loopne
lahf
aam
inc
movsb
loope
jns
movsb
sub
dec
and
and
clc
push
inc
mov
xchg
insl
repnz
sub
outsl
enter
dec
jno
jae
das
nop
pop
jl
cld
je
sbb
in
js
xchg
inc
xchg
in
cmp
arpl
xor
jl
pop
enter
sub
pop
and
and
enter
cmpl
jl
mov
nop
pop
enter
mov
inc
pop
and
cmpl
jns
fs
pop
xchg
jb
loope
pop
inc
and
in
xor
das
mov
add
lcall
mov
mov
add
das
nop
xchg
xor
mov
movsb
fsubs
in
loopne
cmpsb
xor
and
enter
add
mov
or
add
lods
push
and
enter
cwtl
mov
add
je
enter
in
push
mov
mov
lods
mov
orl
add
shrl
pop
enter
mov
repnz
nop
or
add
pop
adc
push
cmpl
inc
push
inc
shrb
nop
and
test
aam
jns
mov
dec
add
mov
nop
pop
enter
xor
inc
pop
and
inc
loopne
loop
jns
mov
or
add
out
nop
pop
enter
jmp
in
mov
out
mov
repnz
sub
or
enter
pusha
hlt
pop
test
nop
pop
lods
clc
cmc
stc
add
cli
add
pop
mov
in
icebp
std
arpl
inc
clc
fadds
inc
repnz
subl
add
inc
push
rolb
or
or
add
or
nop
pop
enter
wrmsr
adc
cld
adc
or
in
sbb
inc
cs
pop
inc
sbb
sbb
or
das
fdivrs
jl
jns
mov
and
add
je
nop
pop
enter
mov
das
xor
pusha
sub
sub
adc
inc
sub
call
fsubs
test
insl
xorb
pop
aaa
arpl
enter
cld
cmp
cmp
das
nop
pop
aam
sbb
mov
sub
repnz
inc
fs
pop
enter
dec
fmull
pop
and
nop
dec
xor
and
add
je
nop
pop
enter
insb
push
inc
pop
and
push
test
nop
pop
enter
popa
mov
inc
pop
and
add
fsubs
imul
imul
and
insl
dec
outsl
push
lods
xor
lods
xor
enter
call
add
test
pushf
xor
orl
fcoms
xchg
or
mov
lea
jo
in
rcl
call
std
dec
sbb
push
bound
and
fdivl
push
test
cmc
ret
rolb
ret
cltd
gs
cwtl
loopne
and
in
mov
enter
push
adc
sbb
test
sub
mov
mov
add
or
pop
add
push
pusha
orl
push
and
or
cmpsb
mov
jle
inc
ds
mov
sbb
push
mov
test
mov
sbb
je
sbb
imul
ret
and
cwtl
pop
enter
adc
push
fdivs
mov
add
jae
cmp
mov
repz
mov
ljmp
call
cmpsb
aam
push
xor
in
mov
mov
in
movsl
into
not
fmull
push
jecxz
jo
lods
jns
fcmovu
in
sbb
mov
out
xor
insl
adc
jp
push
or
out
aam
xor
push
sti
mov
andl
fisttpll
enter
cmp
adc
sbb
fs
enter
pop
loopne
and
addb
xor
pop
addb
mov
or
sbb
outsb
repnz
add
orb
sbb
cmp
outsl
mov
shll
or
stc
pop
sub
xor
or
sbb
test
cmp
andb
pop
subl
pop
mov
jg
pop
leave
xchg
add
adc
notl
mov
insl
in
add
insl
flds
add
add
adc
xor
sbb
xchg
dec
sbb
leave
xchg
add
mov
and
unpckhps
dec
in
enter
sbb
js
inc
sbbl
orb
cmpl
jo
fisttpl
dec
and
insb
and
cmp
inc
push
clc
add
xchg
and
dec
and
inc
cmp
sbb
daa
xchg
jno
adcl
adc
jl
adc
xchg
push
pop
and
nop
leave
xchg
add
and
daa
add
adc
xchg
cmpsl
adcb
shlb
orl
jnp
inc
mov
mov
insb
loope
cmp
mov
and
or
fdivs
fstpt
sbb
lds
lret
pop
sub
fwait
pop
subb
xor
fldl
mov
push
mov
adc
ror
add
stos
push
adc
jno
mov
pop
es
push
xchg
or
addb
insb
dec
sahf
and
addr16
push
jns
arpl
andl
in
ret
ret
push
rolb
inc
jo
push
test
js
inc
inc
mov
xchg
daa
xchg
sarl
sbb
addl
test
jg
lds
in
ret
pop
pop
cmpl
sub
popa
mov
cmp
push
scas
jbe
jl
ds
push
incb
add
adc
adc
xor
cmp
je
ds
sub
popa
sbb
in
push
inc
lcall
and
leave
les
ret
dec
in
rcll
loop
test
rolb
cwtl
sahf
mov
and
addl
js
mov
lds
push
mov
fstpl
mov
mov
fmull
lret
cli
cmp
lea
add
hlt
sbb
add
std
or
dec
mov
and
jns
cwtl
test
enter
test
pop
in
ljmp
mov
add
and
and
dec
mov
jle
cltd
call
lret
enter
pop
mov
jmp
ljmp
fisttpll
cmp
int
add
xchg
pusha
xor
jo
add
mov
sub
sub
push
ret
mov
adc
insb
and
adc
jg
imul
jo
adc
or
lods
cmp
mov
loopne
pop
sbb
adc
push
sbb
addb
lret
adc
and
sub
loope
or
push
or
inc
orl
in
or
and
js
add
inc
and
sahf
add
or
pop
push
inc
add
add
in
add
mov
adc
pop
add
push
inc
dec
arpl
push
popa
fs
jo
ret
je
outsb
aas
xor
xchg
add
dec
int
mov
add
nop
pop
fidivl
stos
and
lahf
inc
add
add
add
repnz
rcl
pop
add
jae
insl
xor
add
popf
inc
popa
mov
scas
add
and
divl
xor
in
imul
push
add
imul
jb
push
xorb
add
fnsave
outsb
pushf
ja
xor
add
imul
test
inc
dec
xorb
dec
dec
dec
pop
inc
fs
cmp
insl
jo
cs
sbb
dec
jb
outsl
outsb
or
add
imul
jmp
fwait
popa
adc
ds
inc
pop
or
or
insb
gs
jae
testb
xor
add
adc
mov
jne
push
or
mov
outsb
je
popaw
arpl
sub
js
ss
sub
inc
sub
fidivl
or
rclb
inc
je
sahf
inc
push
sbbl
mov
popa
mov
ret
or
movsb
arpl
mov
mov
test
lods
insb
outsl
addr16
loope
push
mov
movsl
pop
xchg
dec
sub
lock
and
jg
inc
pop
or
add
adc
cs
stos
cwtl
mov
insl
sti
push
or
mov
push
insl
add
je
pusha
insl
jne
mov
push
mov
popa
pop
adc
insl
in
fistpl
gs
insl
mov
popa
pop
sbb
gs
pop
mov
imull
inc
and
cmpsb
js
sub
xor
add
dec
add
add
add
add
add
mov
mov
adc
push
inc
daa
pushf
push
sbb
fwait
jne
andb
adc
add
or
rolb
jmp
adc
prefetch
js
mov
xorl
add
cmp
and
pusha
add
and
inc
in
js
pop
clc
outsb
xlat
xor
and
and
movsb
sub
sbb
testl
leave
in
sar
jb
jb
xchg
fistpl
das
int
pop
add
add
add
add
add
add
add
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
