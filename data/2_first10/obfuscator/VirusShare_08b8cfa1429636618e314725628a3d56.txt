push
call
ret
ret
jl
inc
lods
scas
mov
je
ljmp
add
jle
imul
aad
and
jnp
movsl
adc
pushf
adc
test
xlat
cs
in
xor
aam
lods
and
addl
loop
lock
inc
jg
mov
xor
mov
daa
sbb
mov
je
outsb
shlb
mov
cli
movsb
pop
sbb
mov
inc
fs
or
lret
dec
mov
shll
repz
cmp
mov
call
movsl
sub
xchg
in
and
test
loope
mov
and
repz
je
popa
fcoml
sub
les
sahf
sbb
outsb
inc
pop
mov
mov
sbb
jnp
push
nop
mov
ss
jp
cmpsb
sub
jmp
xlat
jbe
xchg
and
loope
fwait
in
pusha
pop
xor
ja
jmp
jp
push
in
inc
outsl
dec
ljmp
imulb
ss
mov
mov
jbe
imul
add
dec
sub
fisubl
lahf
mov
push
ret
iret
scas
adc
adc
sub
mov
pop
push
pop
xor
cmp
das
inc
pushl
lock
push
or
daa
mov
repnz
push
mov
jns
sbb
or
and
add
scas
or
pop
into
movsb
add
inc
fadds
mov
in
mov
xchg
stc
push
movsl
rorl
jmp
imul
shlb
repnz
aad
push
out
cmp
sahf
dec
mov
xchg
nop
sbb
outsl
cmp
fdivs
inc
cs
arpl
ss
pop
jecxz
hlt
push
cltd
fwait
xchg
fisubl
mov
jg
popa
push
lcall
pop
add
in
xor
xchg
xchg
lods
xchg
pop
or
out
pop
das
dec
sub
fstpl
jbe
jo
loop
out
jmp
dec
stc
out
xor
sbb
lods
xorb
dec
es
or
scas
pop
mov
mov
pop
sbb
inc
sub
rolb
push
mov
sbb
pop
mov
call
rolb
dec
pushf
data16
dec
and
or
and
aam
mov
or
das
pop
add
adc
in
jg
mov
loopne
sbb
loope
or
xor
xor
sbb
leave
ret
inc
movsb
mov
cmpsl
mov
jb
jg
stos
sahf
xchg
sbb
dec
aad
push
in
mov
xrstors
xchg
adc
shlb
js
cwtl
xchg
inc
pop
cmp
fistpll
aam
push
mov
mov
ljmp
hlt
adc
mov
leave
xchg
xchg
and
inc
popa
shl
push
ret
bound
das
xchg
or
aas
and
hlt
not
fs
ljmp
jne
out
cmpsb
adcb
cmp
cld
jne
xchg
cmpsb
mov
push
dec
push
and
push
aam
jl
test
popf
mov
pop
push
shrl
int3
sub
ja
lahf
mov
mov
stos
aaa
push
adc
movb
pop
subl
rolb
mov
adc
dec
xchg
test
out
test
pop
xchg
fcompl
icebp
icebp
push
pop
xchg
mov
ja
ljmp
xlat
fcomip
scas
int
test
cld
xchg
test
lcall
fimuls
mov
mov
out
hlt
lea
adc
out
add
dec
dec
inc
sbb
and
clc
stc
pop
iret
std
sub
pop
or
aam
je
mov
inc
and
mov
inc
xorl
outsl
pop
jne
in
jo
inc
push
adc
popf
imul
subl
push
push
call
jecxz
mov
sbb
pop
int
mov
and
inc
xlat
fcomps
add
inc
mov
sub
pop
dec
out
cmp
lret
sub
add
aas
popa
and
aad
dec
loopne
jp
and
lods
pop
repnz
jns
push
cltd
cmovp
fsubrs
cmp
stc
xchg
ja
insb
pop
scas
imul
mov
dec
sub
dec
adc
pop
push
shl
and
mov
jecxz
cmp
lret
dec
sub
fldenv
test
icebp
lods
jg
pop
sub
bound
popf
push
push
ss
nop
test
mov
pop
bound
test
sub
dec
aaa
stc
mov
jo
adc
out
push
test
pop
xor
stc
fsubs
mov
xchg
lret
mov
cmp
scas
mov
push
loop
mov
xor
aad
push
xchg
cwtl
jae
int
xor
cmp
or
in
in
sbb
dec
cmp
or
jno
push
out
rorb
or
incl
xchg
and
add
movsl
xchg
loop
pop
repnz
cmp
xor
popa
iret
mov
gs
inc
and
out
call
and
adc
or
inc
repnz
ret
xor
aaa
jbe
cmpsl
mov
fiadds
pop
movsb
arpl
aam
or
mov
fidivl
xor
push
xlat
imul
hlt
push
test
and
scas
jbe
inc
push
jg
in
xchg
pusha
pusha
sbb
cltd
mov
and
adc
fnstsw
cmpl
cmp
dec
in
repnz
sub
and
mov
pop
in
sti
sbb
adc
hlt
bound
stc
pop
les
dec
aad
or
inc
les
inc
push
popf
aam
scas
cmpsl
outsl
inc
and
jno
repnz
sbbb
sahf
call
addr16
adc
ss
scas
jecxz
dec
cmp
dec
dec
jp
cltd
inc
shll
into
inc
and
popf
imul
jmp
adc
in
pop
or
pop
icebp
mov
or
cltd
ret
jne
pushf
and
lret
add
sbb
stos
and
aaa
lods
or
adc
fistpl
mov
pop
xor
sub
jbe
or
jae
insl
or
maxps
leave
test
mov
push
mov
dec
nop
rorl
test
mov
imul
mov
xor
mov
cwtl
fdivp
cmp
sti
xor
aas
jae
push
jmp
inc
mov
pop
fdiv
jl
add
stc
push
jae
ss
and
inc
test
stos
pop
xchg
sub
outsb
in
sbb
xor
fldl
outsl
add
out
mov
sub
mov
dec
test
mov
pop
repnz
repz
aad
insb
mov
ficompl
int3
adc
inc
dec
fisttps
inc
xchg
push
ret
shl
je
inc
les
popa
arpl
jb
mov
push
add
dec
push
ds
xchg
or
sub
out
jmp
dec
stc
mov
insl
dec
add
fucomi
dec
mov
adc
jo
add
fldenv
fiaddl
vprotq
stos
outsl
sti
add
push
sub
jo
cltd
jg
lret
int
xchg
and
loope
test
mov
mov
aaa
cmpsl
and
fstpt
fwait
popf
inc
ret
packssdw
push
pop
or
or
in
movsl
pushf
in
jg,pt
adc
xchg
shl
in
cmpsl
xlat
xor
lock
shr
movb
cld
adc
jne
fdivl
push
decb
push
int3
insb
sbb
out
bound
xchg
jg
cmp
stc
mov
cwtl
sub
inc
pop
or
xchg
mov
cmc
in
xor
fistpl
in
dec
inc
subl
xchg
insb
scas
xchg
push
aad
es
add
inc
cmpsl
pusha
xor
jp
and
jmp
loope
pusha
jns
sbb
sbb
cmp
lcall
add
mov
push
push
dec
test
andb
lds
sub
in
loopne
xor
mov
cmp
outsl
loopne
stc
jne
repz
dec
jmp
test
jl
push
mov
or
dec
test
push
add
lods
cmp
inc
lods
popf
arpl
stos
mov
js
out
movsb
mov
shl
loopne
cmc
add
ds
lock
or
mov
sub
sub
out
cmp
stos
fistps
icebp
inc
scas
leave
lea
jnp
or
lret
pop
scas
fcmove
call
fadd
scas
mov
js
mov
mov
mov
sub
scas
mov
pop
in
jno
pop
es
shrl
mov
sbb
xor
mov
mov
sub
iret
xchg
lods
cmpsl
push
adc
test
ret
add
cmp
int3
inc
addr16
into
push
outsl
sbb
push
cli
mov
pop
or
pop
fiadds
adcl
daa
enter
outsl
insb
icebp
loope
and
lret
jge
stos
xchg
lea
mov
mov
pop
gs
std
mov
stos
jle
add
js
ret
cmpsl
add
lahf
pusha
adc
data16
stos
adc
enter
loope
ds
cld
xchg
add
std
fldlg2
jmp
inc
mov
in
inc
push
or
call
mov
ljmp
cmpsb
dec
dec
clc
stos
dec
and
or
pop
arpl
jns
movsl
adc
push
jecxz
pop
sbb
cs
inc
insb
in
adc
jecxz
sub
inc
mov
hlt
pop
or
xchg
jae
data16
das
xlat
mov
neg
mov
push
cmp
dec
cmpsl
ret
push
fbstp
repz
sbb
xchg
in
mov
cmp
ja
scas
imul
mov
push
ret
mov
jb
lret
sbb
inc
dec
leave
push
sub
jae
push
sbb
insl
pop
gs
divb
mov
cmp
xchg
jne
pop
call
lock
inc
sti
add
mov
fs
outsl
fidivrl
std
dec
cmp
add
std
outsb
pop
icebp
push
and
sahf
test
jge
xor
movsl
xchg
sar
push
add
je
test
or
lret
popf
and
repz
pop
inc
mov
mov
sbb
das
jne
mov
das
repnz
movsb
fiadds
outsb
in
jno
dec
mov
ficoml
dec
inc
fnstenv
test
mov
lret
jb
mov
add
sub
dec
mov
int
lret
mov
xor
add
dec
xlat
jl
push
andl
jnp
imul
test
fstpl
mulb
rcr
pop
mov
mov
cmp
cltd
xlat
dec
jg
sbb
aas
jmp
bound
cmp
jp
and
xchg
mov
stos
in
arpl
jge
loop
xchg
clc
cwtl
pop
or
pop
inc
cwtl
mov
dec
xor
push
test
cmp
mov
push
xchg
add
sbb
pop
dec
push
clc
inc
jb
fidivrs
std
mov
in
sti
das
mov
inc
sub
jg
movsb
xlat
pop
dec
jns
push
mov
push
mov
sub
adc
cs
leave
movsl
mov
jmp
dec
loop
rcrl
insl
jae
les
test
imul
pop
mov
sbb
dec
pusha
fstl
pushf
rorb
inc
rolb
rorl
lock
and
jb
xchg
jae
and
sub
mov
push
aas
mov
sub
add
out
clc
adc
mov
sub
mov
xor
xchg
rcll
lret
lcall
xchg
pushf
out
ljmp
pop
frstor
push
shrb
rcl
in
aaa
loope
add
or
sbb
loopne
mov
mov
sbb
and
sub
repnz
sbb
mov
inc
int3
data16
push
mov
mov
mov
xor
ret
dec
fs
test
pop
mov
push
cs
xor
divb
loopne
cmpb
addr16
pop
in
int3
cmpl
iret
cmpsb
test
icebp
dec
fcmovu
lock
or
jno
sti
loop
negl
mov
pop
aam
test
roll
lock
sbb
push
mov
dec
push
push
push
int3
js
inc
fistpll
adc
clc
mov
sub
inc
lea
incb
lea
add
add
aam
out
sbb
cmp
adc
lret
ret
and
jnp
or
xor
cli
sbb
out
in
mov
roll
mov
arpl
cmp
pop
xor
cmp
mov
les
push
jge
push
ljmp
test
cli
lods
lret
sbb
pop
fcomps
and
enter
xchg
insl
push
jmp
jp
push
sbb
mov
daa
out
pushf
imul
jle
jg,pn
test
insl
xor
lret
mov
inc
imul
inc
or
inc
push
leave
sbb
xor
clc
imul
pushf
push
dec
movsb
fadds
mov
adc
mov
outsl
xor
and
rcrb
and
iret
shrb
mov
fisubs
mov
jae
repnz
add
xchg
daa
sti
jo
lods
lahf
ret
cli
push
mov
add
leave
cli
out
push
jge
daa
adc
bound
sub
das
jg
mov
nop
mov
mov
jle
sarb
cmpsb
pop
imul
inc
movsb
mov
jne
cmpsb
jne
scas
push
sahf
xor
sti
pushf
daa
in
sub
push
lahf
mov
pop
pushw
adc
insb
in
popa
push
data16
mov
lods
mov
and
add
mov
jge
ret
test
pop
scas
mov
mov
das
jne
mov
icebp
ljmp
in
insb
mov
in
shll
pop
in
or
mov
inc
xchg
js
cmpsl
lret
leave
cs
pop
add
test
je
in
scas
add
dec
mov
testb
mov
movsl
insl
pop
outsl
mov
aad
push
adc
cmp
mov
ret
push
xchg
stos
loopne
mov
mov
test
adc
add
movsb
lods
sub
fdivr
lock
cmp
dec
xor
aaa
sub
dec
aas
shll
push
mov
test
xchg
data16
mov
xchg
mov
call
xchg
mov
test
stos
sbb
pop
cmp
leave
icebp
or
andps
mov
adcl
sub
fwait
rcll
enter
ret
pop
lahf
mov
lret
ds
push
xor
pop
icebp
xlat
repz
xchg
dec
stos
lds
adc
ret
outsl
xchg
mov
inc
push
rorl
sub
insl
sub
push
addr16
inc
imul
push
lfs
je
mov
fsubrs
out
mov
lds
inc
dec
mov
push
movd
fmull
or
inc
movsl
cmp
repnz
mov
mov
pop
test
insb
mov
adc
xor
or
inc
fwait
rorl
rcrb
pop
or
shr
jl
dec
repz
dec
ret
push
cld
lods
sbb
mov
aam
aaa
lahf
lods
dec
jl
add
loop
sbb
arpl
cmp
xchg
sbb
or
cs
jge
mov
scas
loop
cmp
xchg
push
ds
movsb
mov
xchg
xchg
in
inc
shr
jp
das
ret
jo
dec
jecxz
pusha
push
inc
sti
jmp
ret
xor
out
out
sub
jmp
outsl
out
lahf
sbb
pop
cli
add
fcomi
xchg
jp
pop
test
bound
divl
test
bound
lahf
push
push
ret
fmuls
into
aam
mov
mov
xchg
dec
jmp
frstor
mov
jecxz
ljmp
roll
adc
es
lods
push
pop
nop
pop
xchg
sbb
sub
loopne
and
xor
xchg
mov
sbb
push
cmc
adc
mov
xchg
pop
xchg
or
dec
mov
popa
sbb
lahf
and
xlat
xor
mov
inc
and
sbb
psllq
lahf
xor
jb
cmpb
xchg
cmp
mov
pushf
inc
cwtl
and
inc
or
test
shl
sub
scas
jne
fists
push
iret
adc
cmp
sub
mov
rcrl
insb
sar
jg
mov
pop
test
lods
xchg
daa
das
or
or
insl
not
adc
cmp
and
mov
adc
mov
push
stos
mov
test
movsl
sub
jg
daa
incl
clc
dec
test
gs
outsb
dec
mov
fdivrs
xchg
dec
jbe
mov
push
mov
sahf
add
jecxz
aad
dec
and
lret
jle
ret
mov
dec
fildll
pop
xchg
sahf
jl
mov
or
mov
popf
add
in
pop
test
add
add
les
mov
inc
icebp
and
sub
aaa
xchg
mov
outsl
sbb
xchg
imul
gs
shrl
repz
inc
jl
mov
pop
jecxz
cmpb
sbb
dec
pop
xchg
lea
imul
dec
jg
loopne
mov
in
mov
dec
push
aad
fistl
jmp
add
mov
sarb
jp
in
mov
cmpsb
movsl
loop
sbb
and
adc
orl
shl
add
adc
mov
call
jno
push
jo
mov
mov
out
inc
stc
xor
cmpsl
push
mov
push
push
cli
fisubrl
mov
ror
jecxz
mov
jb
sbb
es
xor
shlb
xor
add
cmp
out
repnz
pop
mov
mov
or
out
sti
dec
lods
sahf
fdivrs
jge
lds
xchg
mov
cs
pop
insb
jns
inc
add
bound
xor
jg
sbb
mov
cmp
out
inc
adc
cmp
inc
ds
mov
dec
mov
sub
pop
lea
and
fdivrs
push
add
stc
enter
cli
in
das
dec
jno
or
or
hlt
xchg
mov
lret
xchg
xor
push
push
push
push
lods
out
or
lahf
inc
pop
test
inc
into
mov
dec
std
aas
xor
les
popf
das
jbe
imul
je
aaa
xchg
jo
lret
in
jo
mov
add
and
lahf
out
and
insb
je
roll
pop
imul
mov
push
jo
test
sbb
dec
push
mov
cmp
dec
not
movsb
loope
lds
sub
es
dec
dec
xchg
mov
test
daa
push
dec
dec
jmp
jge
sbb
mov
pop
shll
mov
adc
xchg
movsb
cmp
or
add
jb
mov
inc
imul
lods
push
incb
aaa
jo
sub
and
mov
inc
and
mov
jge
mov
aad
lret
popf
dec
mov
dec
pop
jmp
aaa
sub
dec
cmp
hlt
jge
dec
pop
xchg
fsubrs
or
add
sub
mov
in
stos
out
ja
adc
xchg
mov
lock
mov
push
jmp
xor
push
push
out
incb
sbb
sbb
sub
adc
cs
fs
pop
xchg
out
cmp
imul
xchg
ljmp
in
aad
cmpsl
fisubl
ljmp
out
cmp
and
outsb
arpl
jnp
inc
fwait
imul
stos
ret
test
rcrb
fisubl
dec
or
punpcklwd
cmp
mov
pop
imul
mov
adc
iret
dec
push
nop
outsl
fsubs
fcomi
push
out
sbb
insb
dec
shrb
push
iret
sbb
loop
mov
cmp
lds
xor
xchg
in
mov
insl
or
insl
ds
xchg
push
jnp
sti
mov
out
add
addr16
mov
mov
loopne
mov
push
divb
add
clc
jb
add
xchg
cmc
js
lods
ret
lds
out
fxch
mov
sub
sti
jmp
sbb
add
out
stos
mov
push
mov
lzcnt
int
lock
sub
push
dec
aas
lret
jns
jl
add
push
outsl
std
cmc
dec
aad
xchg
mov
sub
out
mov
iret
rol
cmp
cmpl
mov
xchg
inc
cmp
dec
popa
adc
jno
adc
lods
xchg
mov
inc
inc
aad
dec
add
imul
lret
sti
sbb
cmp
jge
hlt
imul
popa
sbb
out
inc
pop
or
mov
leave
jne
repnz
pop
out
loope
jb
adc
push
xor
add
insb
lods
mov
pop
daa
sub
sbb
xchg
jno
pop
aaa
jg
addr16
fwait
dec
fwait
xchg
xchg
dec
repnz
lcall
or
xor
sarb
std
pop
sub
sub
bound
pop
push
repz
outsl
xchg
shll
into
push
shlb
jmp
cmp
int
iret
ret
ja
add
cltd
mov
xchg
loop
ss
push
jae
lods
pushf
loope
mov
movsb
push
loope
fldenv
in
es
cmpsb
int
mov
lods
js
push
out
test
adc
out
xor
jbe
pushf
pop
sahf
dec
call
sbb
orb
push
loopne
idivb
cmp
test
cmp
das
add
cmpsb
cmp
aaa
inc
jle
adc
movsb
stc
fwait
adc
or
int
hlt
outsb
out
push
push
cmp
je
xchg
sub
mov
fwait
jmp
out
negl
sub
add
sahf
gs
xor
addb
fnstcw
jmp
fldt
arpl
fstps
sbbl
xor
lahf
sbb
jno
cmp
mov
ss
and
arpl
addr16
icebp
in
jecxz
xor
cltd
xchg
inc
sub
inc
mov
xor
sbb
cltd
rcr
insb
adc
add
sub
clc
and
aam
xchg
inc
pusha
mov
adc
mov
bound
jne
cmp
out
cmpsb
adcb
pop
imul
mov
sbb
push
fcoml
sub
xor
cmp
sub
lret
xor
rcrl
mov
cmpsb
lods
mov
movsl
loopne
sub
loope
push
sbb
mov
xor
mov
mov
jge
clc
int
inc
jb
rorl
rorl
cmc
xor
and
xchg
fistps
xor
fs
mov
pop
or
inc
and
pop
sahf
daa
push
mov
je
jl
test
mov
jmp
add
cmpsl
scas
adc
shll
in
inc
push
mov
or
mov
or
stos
mov
jp
jp
es
nop
js
pop
repz
enter
sub
mov
stc
scas
mov
jne
mov
cmpsb
lods
cli
pushf
iret
mov
sbb
push
aaa
dec
xor
leave
ja
clc
sub
cmp
punpckhwd
shll
pop
push
mov
out
repnz
mov
iret
mov
les
in
jp
mov
sbb
into
mov
push
push
sub
scas
fs
push
inc
scas
dec
andb
lea
add
lret
repnz
push
push
repnz
and
xor
add
outsl
addr16
popa
xor
divl
push
sbb
inc
push
ja
adcl
xor
loopne
shrb
dec
aam
popf
es
sahf
sub
jnp
inc
repz
mov
and
dec
adc
pop
add
insb
xor
inc
or
aaa
fisttps
mov
or
inc
xor
adc
jge
push
shr
dec
add
fwait
nop
dec
ss
leave
xchg
ret
imul
pop
cmp
and
call
imul
int3
lock
mov
mov
or
push
jp
sub
adc
fldt
das
mov
imul
rorb
ds
mov
ja
sub
push
popa
dec
xchg
jnp
icebp
js
andl
and
shlb
repnz
xor
push
leave
out
lcall
fcmovbe
leave
iret
mov
mov
fs
cltd
adc
fld
punpckldq
ret
enter
or
repnz
add
negb
dec
test
mov
test
jo
fsts
sbb
aam
jg
out
mov
sbb
mov
mov
aaa
xchg
cmpsb
into
push
pop
sbb
ret
add
inc
mov
stc
inc
pop
mov
test
xor
mov
dec
call
or
hlt
ja
xchg
mov
ret
rcll
jecxz
mov
inc
daa
andb
js
sahf
cmp
push
lock
lea
pushf
hlt
sbb
xchg
test
mov
mov
pop
lods
xchg
sti
aas
notl
aas
dec
enter
insb
xchg
out
xchg
and
out
leave
push
les
aas
push
mov
pop
mov
aas
cli
xchg
mov
xor
imul
xchg
mov
push
push
mov
bound
add
mov
sub
out
and
pop
jnp
aam
pusha
inc
or
dec
repnz
sub
ret
push
add
out
js
push
mov
push
scas
xor
mov
icebp
mov
ds
fs
jmp
dec
pop
jne
and
inc
sti
cmp
shrl
inc
cmp
ret
xchg
ss
cmp
fistl
arpl
sbb
mov
rcrb
jle
scas
mov
cmc
fdivrs
cmp
sub
lahf
push
xchg
xlat
push
xchg
push
dec
pop
data16
std
jnp
mov
or
pop
ficompl
mov
dec
enter
inc
add
out
mov
mov
jecxz
shl
mov
ret
aad
shlb
xor
movsb
repz
ret
movsl
int3
pop
xor
sti
repnz
roll
rep
adc
cli
out
jns
out
repz
mov
imull
scas
not
mov
push
cmp
push
dec
jl
xchg
dec
jg
ret
aaa
rorl
pushf
inc
xchg
mov
xchg
icebp
jnp
pop
loope
sub
popa
jnp
aam
push
or
and
repnz
flds
imulb
dec
rcll
cwtl
mov
sbb
jmp
push
fcomip
insl
daa
pop
mov
cmp
add
and
pop
pusha
inc
xor
xor
dec
jecxz
cmpsb
lods
xor
je
mov
cmc
fcomps
adcb
mov
insb
xor
pop
test
dec
inc
push
fstps
mov
cmp
dec
lcall
sbb
scas
dec
mov
mov
std
in
outsl
ret
mov
dec
fldl
jecxz
insb
inc
sbb
inc
aaa
add
push
vmovss
fldl
and
sbbb
pop
aam
test
xchg
ret
fcomp
in
inc
jg
pop
aad
mov
das
pop
inc
mov
out
fwait
and
cmp
lods
hlt
add
loope
ss
repnz
iret
out
jp
rorl
xchg
shlb
and
test
mov
test
movsl
lds
pop
dec
je
jno
sub
and
je
test
adc
cmp
js
addb
cmp
xchg
add
jge
loope
lret
xor
inc
cmp
je
jl
out
bnd
out
mov
xchg
xlat
or
fistl
ret
mov
out
aad
cmp
cmp
clc
xchg
rolb
mov
adc
imul
and
jne
popa
or
inc
sti
adc
mov
movsl
sti
clc
push
cli
mov
les
sbb
inc
arpl
std
leave
out
or
cmp
andl
out
xchg
addr16
sbbb
sub
cmpsb
int3
push
mov
out
test
das
and
daa
aam
adc
inc
js
loop
iret
push
jbe
subl
mov
into
loop
and
inc
xlat
stos
icebp
mov
rcrl
jl
sahf
shll
cmp
pop
inc
mov
imul
add
fidivrl
fldcw
add
xor
inc
mov
fadd
xchg
arpl
xchg
mov
xor
sti
xchg
ja
xchg
fcomp
pop
adc
std
test
adc
ja
in
test
ficomps
inc
pusha
stos
mov
mov
lds
lret
hlt
fnsave
lock
adc
fildll
jne
cmp
xchg
sbb
loope
dec
and
adc
pop
repz
fwait
sbb
cmp
cwtl
sti
in
jge
mov
sub
inc
xchg
test
inc
sbb
pop
es
cltd
push
clc
pop
jmp
pop
pop
push
test
mov
rcll
jne
add
jnp
push
xor
adc
mov
mov
mov
ret
sub
cmp
mov
mov
adc
pop
mov
add
push
cs
sbb
and
push
adc
in
inc
xchg
je
xchg
arpl
cs
xor
push
push
jno
addr16
or
fbstp
lret
dec
or
stc
push
sti
les
xchg
fisubrs
push
pop
dec
mov
in
test
fstpl
faddp
pop
mov
repnz
mov
mov
push
cmp
mov
movsb
fisubrs
xlat
movsb
lgs
pop
adc
cs
dec
push
pop
incl
push
jmp
mov
aad
arpl
enter
pop
ret
add
imul
jl
inc
inc
into
dec
xor
mov
cmp
jmp
pop
repnz
int
dec
xorl
in
lret
mov
mov
loop
movsl
ja
shlb
and
xor
push
xchg
push
cmp
mov
push
inc
sar
pop
enter
das
push
dec
pop
add
inc
call
pxor
xchg
mov
or
inc
xor
mov
stos
fnsave
jmp
lea
mov
sahf
ret
loopne
scas
pop
jo
fisubl
lods
push
cmc
mov
cmpsl
cli
call
push
add
fs
pop
call
std
cwtl
mov
jge
fs
cmp
imul
xor
inc
cld
mov
arpl
push
nop
les
in
dec
sbb
or
or
cmp
fldcw
sub
mov
lods
fidivrl
push
xchg
mov
mov
andl
aam
pop
rcrl
call
jae
pop
add
enter
inc
sub
pop
push
pop
cmp
xchg
inc
pop
int
sbb
cmpb
dec
outsl
pushf
aaa
pop
aaa
push
pop
aaa
cmp
lahf
mov
push
jg
cmp
out
out
ror
popa
addr16
neg
xor
jge
out
mov
js
jecxz
dec
jbe
mov
fmuls
inc
or
jle
jecxz
nop
or
lods
xorb
jo
mov
out
cmpsl
mov
out
xchg
mov
fcoml
mov
inc
xchg
loope
test
add
pop
mov
bound
add
or
sbb
mov
fadd
jnp
fwait
sub
cmp
imul
xchg
add
pop
hlt
das
cs
pusha
mov
inc
aad
pop
mov
push
dec
jle
mov
inc
sub
movsb
in
sub
push
imulb
cltd
jp
fsubs
inc
or
das
lods
sub
jp
jbe
jo
sbb
dec
jmp
or
sub
jge
add
ret
test
push
data16
dec
bound
sub
pushf
xor
or
out
fbld
and
cmpsl
imul
sbb
jne
and
outsb
out
dec
addr16
mov
mov
frstor
scas
hlt
pop
cwtl
pop
ret
cmp
sbb
insb
hlt
popa
call
call
dec
mov
jl
mov
mov
cwtl
adc
rorl
movsb
and
daa
sub
xor
mov
sbb
into
or
and
cli
cs
sub
dec
add
and
xchg
jae
int3
pop
mov
scas
daa
bnd
mov
add
xor
add
lods
jmp
sub
mov
mov
loop
or
popa
pop
sbbb
stc
shll
push
bound
inc
sbb
xchg
negl
or
push
inc
jns
jle
adc
lods
in
or
clc
xor
out
rsqrtps
mov
dec
daa
rcrb
sti
test
sub
sub
or
pop
mov
dec
hlt
or
sub
lock
and
rcr
mov
adc
in
popa
pusha
les
push
mov
and
ret
inc
and
jl
sub
sarb
sbb
aas
mov
sub
fbld
push
push
push
sbb
push
lds
adc
shlb
pop
mov
test
pop
push
scas
dec
or
push
mov
add
sarl
xchg
jmp
loopne,pn
push
xor
pop
push
adc
dec
fs
enter
test
inc
jnp
inc
out
cs
and
inc
mov
or
pop
test
inc
xchg
and
inc
sti
push
mov
orl
push
stos
push
pop
and
es
or
out
rol
stos
test
stc
in
lret
push
jg
fcom
ss
lret
mov
cmp
and
push
mov
subb
cs
cmp
in
test
movsl
ljmp
or
dec
push
mov
lret
jns
adc
data16
push
ret
push
cld
and
jo
add
shr
adc
cmp
inc
adc
add
std
rorb
fsubrp
mov
mov
rorl
cs
out
ljmp
aam
mov
jbe
pop
cli
js
cs
aaa
scas
or
sbb
adc
push
subl
add
mov
and
jge
je
adc
mov
mov
ror
or
insl
xchg
clc
mov
test
stc
jl
andl
mov
push
or
mov
xlat
xlat
sbb
jno
dec
cmc
loope
movsl
mov
xor
mov
jmp
pop
inc
adc
jns
enter
das
aad
jb
mov
icebp
jecxz
sbb
lock
lock
cld
mov
shrb
bnd
roll
push
xlat
and
test
je
insl
adc
or
jno
loop
cmp
jo
inc
or
outsb
ret
fiadds
aam
mov
inc
mov
pop
in
cwtl
out
mov
adc
popa
jmp
ror
push
xor
xor
inc
mov
addr16
fdivrs
test
adc
pop
xor
nop
aaa
stos
shll
mov
jbe
aaa
cli
stc
enter
fists
adc
clc
icebp
cli
cli
pusha
xorb
call
push
leave
lahf
adc
push
mov
out
cmp
cltd
cmp
loop
sbb
cltd
add
adcl
xor
pop
pop
lahf
add
adc
mov
dec
jno
jno
out
fwait
sti
xchg
mov
pop
and
aad
sbb
jl
dec
ljmp
lock
pop
sete
inc
xorb
jno
fcoms
or
add
and
mov
cld
adc
or
adc
push
mov
push
inc
sub
push
jbe
cwtl
add
loope
cmp
mov
out
inc
iret
mov
in
in
cmp
fiaddl
push
call
add
pop
mov
mov
imul
mov
add
mov
dec
inc
in
call
ficoms
ja
out
sub
dec
cmc
cmpsb
aad
andl
mov
pop
movsbl
jmp
cmp
loopne
mov
sub
stos
js
mov
sbb
xchg
xchg
daa
ret
rcrl
sahf
push
and
cwtl
xchg
std
or
xchg
out
sub
shl
xor
xchg
lods
pop
lahf
push
adcl
ss
aad
or
lds
rep
xchg
lcall
imul
out
subl
pop
pusha
loop
xor
xchg
push
mov
inc
mov
mov
cltd
mov
and
cmp
dec
inc
out
hlt
mov
inc
push
mov
inc
into
xor
out
arpl
xchg
je
lret
pusha
mov
mov
mov
stos
mov
cmp
cmp
enter
xorb
mov
data16
and
aam
sbbl
mov
subb
out
lods
xor
cmp
hlt
push
cmc
inc
xor
imul
lea
add
mov
jae
shl
and
rorb
xlat
inc
div
xchg
stc
inc
mov
push
mov
cmp
pusha
sti
push
sbb
jg
out
jl,pn
andl
iret
lods
mov
sbb
or
test
andb
push
xor
sbb
xlat
mov
mov
into
stos
push
les
pop
mov
sub
xlat
xor
mov
sub
cmp
test
test
fs
in
int
das
fildll
cwtl
shll
int3
xchg
imul
xchg
shl
popa
and
xchg
mov
hlt
dec
fs
add
pop
pop
or
jge
or
outsb
xchg
cli
arpl
mov
or
ret
pushl
mov
inc
inc
mov
push
cli
mov
ret
jmp
sarb
and
and
fs
sbb
in
push
jb
sbb
push
pop
mov
inc
clc
fiadds
popa
into
jbe
scas
lock
clc
xor
cwtl
sub
or
pushl
popf
in
ss
popf
push
jno
cmp
out
push
push
add
popa
lds
xchg
inc
mov
fistps
mov
leave
fxam
pop
inc
clc
adc
or
xor
jge
push
les
xor
pop
lahf
lcall
ficoml
mov
mov
scas
shrb
cwtl
or
adc
aad
addr16
repz
xchg
ds
mov
sti
idivb
movsl
xlat
lods
icebp
sbb
loope
loopne
mov
or
mov
fs
adc
out
mov
lcall
inc
out
outsb
inc
mov
outsl
imul
js
clc
mov
jg
xchg
adc
add
jns
ds
or
cwtl
pop
pop
or
mov
insl
xchg
fsts
xor
mov
daa
gs
ret
stos
das
dec
movsb
cmp
paddw
cmp
lods
jo
sub
and
mov
mov
sub
or
mov
outsl
fildl
sbb
push
mov
out
clc
hlt
cmc
jmp
inc
clc
repz
pop
roll
xchg
xlat
popl
xchg
stos
pop
rorl
nop
pop
ret
outsb
aad
test
mov
pop
fs
in
xor
cmp
enter
ljmp
mov
jae
mov
adc
pop
adc
repz
mov
push
mov
sub
push
pop
fistpl
ret
std
stos
xor
adc
xchg
xchg
stos
pop
cmpb
fwait
ret
loopne
mov
or
aas
mov
int3
rcll
rcrb
insl
mov
popa
dec
cmpsb
ss
push
cmp
fld
push
push
mov
cmpsb
clc
adc
loope
dec
scas
int
inc
or
ljmp
push
jmp
add
lcall
dec
mov
mov
repnz
adc
out
repz
sub
bound
mov
in
sbb
imull
jns
mov
fxch
cmpsl
push
pushw
xchg
cmpsb
xlat
mov
sub
pop
xchg
jae
mov
push
cmp
movsl
mov
mov
mov
push
aad
push
ret
mov
pop
std
jbe
inc
movsl
popa
jle
mov
dec
clc
cmp
sbb
add
in
rolb
mov
push
lcall
dec
xor
repnz
nop
cmp
loopne
daa
lods
xchg
aas
sub
dec
mov
xchg
fdivr
aam
jno
jae
repnz
sub
adcb
sbb
arpl
or
mov
mov
jne
out
inc
xchg
jg
mov
movsl
xor
push
shll
or
loop
test
out
xchg
test
hlt
cmp
popl
push
xor
pop
xchg
bsf
call
xchg
xor
add
arpl
cli
mov
scas
ljmp
jmp
ss
jecxz
addl
xchg
ds
inc
cmp
adc
pushf
comiss
inc
lods
mov
sub
scas
mov
cmp
jb
add
outsb
mov
sbb
std
and
cwtl
popa
add
mov
adc
jns
cwtl
stos
cmp
orb
ja
xorb
jae
mov
and
enter
jae
inc
or
mov
inc
add
ja
mov
daa
push
mov
cld
mov
dec
rorl
test
xchg
cmc
mov
pop
jl
xchg
adc
dec
stos
inc
push
add
jg
jmp
loop
mov
sub
sbb
arpl
mov
adc
xchg
aas
lds
mov
arpl
mov
jne
out
jae
mov
fsubr
mov
mov
leave
roll
adc
fcmovb
push
add
nop
xchg
inc
xlat
inc
pop
push
sbb
popf
xchg
in
mov
sahf
mov
pop
push
scas
jne
rcrb
push
xor
add
jno
push
cmp
xchg
mov
dec
xor
push
pop
aas
std
enter
dec
xchg
jecxz
cmpl
add
shrl
je
rcrb
xor
cmp
add
adc
push
mov
mov
push
add
add
sti
clc
subl
add
lcall
lret
in
mov
je
push
sub
popa
cmp
pop
sbb
nop
jns
push
sub
iret
jl
jge
fucomip
add
mov
jg
test
mov
pop
dec
xchg
ret
cmp
stos
pusha
push
ret
movsl
popa
and
push
jns
sbbb
sbb
jb
pop
sbb
sub
or
sbb
mov
mov
jle
jp
inc
pop
jnp
pop
push
outsb
pop
cltd
data16
cmpsb
mov
movsl
push
xchg
cli
call
out
call
jns
pop
test
push
andl
add
int
pop
mov
push
das
push
insl
pop
pop
pop
mov
scas
data16
xor
and
mov
adc
push
cmp
push
cld
push
jne
loopne
jp
sbb
adcl
stos
sbb
shll
movsb
push
sub
xchg
jg
mov
pop
push
add
in
xchg
les
inc
cmp
mov
or
pusha
pop
mov
int
pop
lret
pop
arpl
rcl
imul
cmpb
lcall
push
jb
jecxz
pop
cmp
xchg
clc
and
jnp
jns
mov
insb
inc
sbb
scas
test
and
loopne
insb
sub
fiadds
xor
lods
in
mov
and
pop
das
inc
aaa
cltd
sub
and
gs
dec
fs
je
sbb
and
adc
add
sahf
in
xchg
mov
mov
inc
imul
inc
imul
pop
ss
rclb
lret
xchg
sbb
dec
xor
rorl
lcall
or
push
pop
jb
hlt
jnp
xchg
js
sahf
icebp
add
cld
push
repnz
mov
rol
lods
and
xchg
add
mov
pop
popf
jbe
mov
loopne
cld
dec
fwait
cmpsl
xchg
jae
mov
add
out
aad
dec
push
pushf
jnp
sub
fists
insl
cmc
or
inc
push
xchg
popf
addr16
or
fildll
or
dec
aad
aaa
cmpsb
fnstcw
bound
ss
imul
mov
movsb
test
jmp
cmp
mov
fs
cmpsb
rcll
cmp
push
pop
insl
sub
jno
pop
test
in
fdivr
or
pop
inc
sub
icebp
mov
das
les
xchg
test
jbe
sti
xchg
pop
pop
pop
gs
scas
std
sub
es
cmp
mov
iret
jl
mov
bound
enter
dec
ss
push
jns
and
adc
push
mov
and
icebp
mov
or
push
sbb
pop
sbb
sub
and
loopne
in
adc
push
movsb
and
scas
scas
xor
shlb
hlt
shlb
mov
subl
out
fistpll
xor
test
fisttps
fsubrs
scas
mov
repz
std
jge
cmpsb
es
mov
adc
shl
repnz
push
ret
mov
xor
mov
in
mov
push
ret
pusha
xchg
cmp
nop
sub
hlt
ffree
addl
xor
add
pop
push
dec
icebp
jecxz
in
repnz
jge
jg
xchg
aaa
sbb
popf
lds
dec
mov
test
dec
sub
lahf
mov
out
push
dec
fstpl
inc
lahf
insl
dec
outsb
add
cld
and
push
or
das
adc
add
in
adc
xor
xchg
jno
mov
cmp
pop
xlat
out
sbb
xor
sbbb
jl
push
mov
popa
insl
xchg
data16
push
iret
adc
rorb
arpl
xor
iret
std
dec
pop
loope
stos
pop
je
mov
imul
jbe,pt
sbbl
call
jmp
pushf
inc
add
dec
stc
into
pop
nop
test
mov
inc
popf
lret
pushl
and
sahf
or
mull
test
pop
cli
adc
cmp
xor
orb
insl
loope
xchg
xor
pop
or
pop
jle
sbb
pushf
sbb
inc
lahf
nop
jno
xor
scas
std
add
sbb
jb
pop
mov
out
loop
adc
and
ss
lea
cli
jns
xchg
dec
cmp
outsl
cmpsb
mov
ss
in
and
cmc
xor
scas
cmp
dec
and
enter
enter
int
sbb
sub
xchg
loop
mov
mov
repz
push
xchg
mov
out
daa
scas
xchg
enter
out
cmp
mov
fs
add
movsb
js
iret
mov
pop
mov
mov
and
xor
jnp
mov
jns
test
fcoml
jge
pop
imul
loop
dec
xchg
cmp
inc
pop
movd
mov
or
mov
jae
push
mov
xlat
addr16
cmp
xor
jno
aaa
test
cmp
jg
mov
cli
jo
mov
xchg
sbb
jno
add
pop
repz
movsl
pop
in
cmp
xchg
ret
xchg
sub
cmp
in
fmull
and
popf
clc
int
adcl
pop
xchg
xor
cmp
dec
jbe
mov
sarl
out
xor
pop
push
movsb
mov
icebp
movsl
je
inc
gs
jb
mov
es
sbb
test
inc
out
imul
and
adc
push
push
xchg
jle
or
nop
jae
aam
adc
sar
loope
jno
sbb
je
jge
mov
cmc
and
divl
fwait
pop
mov
dec
out
and
loop
icebp
push
imul
pop
mov
mov
je
push
popa
mov
repnz
add
mov
adc
mov
inc
mov
andnps
jno
pop
inc
ljmp
mov
ret
mov
xchg
out
sarb
pop
adc
jbe
shll
lret
inc
adc
shlb
shlb
cltd
iret
testl
or
je
mov
jmp
add
sti
mov
jp
aas
and
adc
or
mov
sub
shrb
cmp
imul
in
mov
mov
adc
sub
into
push
aaa
dec
sar
jg
xor
loopne
rcl
fistpl
dec
sub
add
mov
mulb
cmc
jnp
mov
lods
jno
mov
mov
jle
test
and
inc
jmp
jl
stos
add
adc
jl
call
sti
pop
scas
daa
mov
enter
popa
pop
cli
jecxz
pop
rclb
xchg
push
cmp
mov
mov
fcmovnbe
mov
inc
push
ljmp
lods
sbb
insb
mov
jne
call
cmp
adcl
jo
out
inc
adc
movsb
inc
iret
adc
into
push
xchg
sbb
adc
call
scas
dec
les
js
or
mov
xchg
adc
pop
sbb
adc
shll
push
imul
sub
je
das
stos
dec
les
adc
inc
xor
out
fistps
scas
ljmp
and
inc
mov
es
inc
xchg
lret
test
push
cmp
mov
arpl
fs
dec
jmp
cmc
pop
add
cmp
dec
mov
es
jae
icebp
mov
into
adc
rep
popf
xchg
movsl
mov
jmp
test
and
adc
mov
jl
push
orl
les
cmp
mov
ds
lahf
push
push
jno
scas
imul
jo
imulb
inc
and
rclb
sub
loopne
xchg
xchg
sub
ds
decb
arpl
mov
mov
pusha
movl
imul
adc
sbb
bound
orl
cmp
xor
jb
mov
test
fstps
jmp
and
out
inc
jb
sti
mov
inc
outsb
scas
push
inc
test
movsl
xchg
fs
or
pushf
pushl
outsl
push
add
call
dec
inc
push
pop
fxch
mov
test
xor
pop
lea
mov
insl
add
fsub
jo
cmp
sbb
xchg
sbb
mov
dec
jo
mov
pop
jge
ficoml
pop
and
adc
das
nop
scas
push
cmpsl
out
mov
cld
outsl
in
jg
movsb
ror
test
sub
sbb
add
push
repz
out
sti
mov
outsb
jo
sbb
push
nop
pushf
push
mov
lods
cld
cmp
jmp
adc
sbb
jb
imul
das
mov
dec
and
call
xor
push
mov
mov
xchg
insb
adc
leave
sub
call
adcl
in
ja
xchg
lds
ljmp
cs
cmp
mov
mov
and
and
loopne
pop
rcrl
mov
cmp
icebp
lcall
push
sti
xor
and
mov
nop
cwtl
mov
ds
dec
or
std
fsub
lods
outsb
pop
fsub
es
imul
sub
cmc
push
jl
pusha
faddp
mov
fdivl
cmp
hlt
js
mov
or
sti
fadds
push
ja
pop
cmp
xor
xor
push
dec
lahf
or
mov
add
testl
lds
insb
xchg
jge
arpl
aad
mov
mov
xchg
inc
lods
pop
push
jge
shlb
aam
out
hlt
xchg
fcmovnb
sub
sbb
insl
sbb
sti
dec
ja
jl
addl
mov
out
mov
mov
dec
and
addr16
cmc
int3
push
stc
inc
rol
inc
pop
dec
int3
movsb
iret
cltd
lods
sub
xor
or
xor
mov
sbb
in
jns
pop
rolb
jbe
imul
xchg
push
mov
adc
push
and
jae
dec
insl
aam
mov
and
mov
and
cmpsb
xor
add
mov
ss
imul
cmp
pop
jnp
ror
add
call
imul
out
mov
ss
xchg
sahf
icebp
xor
push
sbb
xchg
out
call
pop
cmp
flds
frstor
hlt
mov
into
push
rcll
mov
pop
fdivl
mov
rolb
inc
fiaddl
mov
in
and
or
add
fisttps
ss
lcall
xlat
push
sub
mov
add
dec
test
sahf
jno
outsb
inc
lahf
and
cld
xor
movsl
mov
das
imull
bnd
push
bound
stos
push
jg
std
xchg
push
rcrl
pop
add
test
out
cwtl
inc
pop
je
pop
pop
sbb
mov
sbb
sahf
out
add
push
jae
push
dec
add
sbb
dec
outsl
scas
sub
test
data16
jno
aas
mov
push
push
cmp
clc
mov
mov
rcr
hlt
mov
or
lret
mov
lods
iret
adc
add
adc
int
sbb
fimull
clc
lret
cld
pop
ret
sbb
pop
add
and
xchg
add
negb
dec
jp
fwait
iret
fistpll
inc
int3
mov
mov
negl
cwtl
inc
aas
jb
jns
ljmp
push
movsb
sbb
mov
les
inc
ret
add
jo
xchg
jo
sbb
mov
popf
cs
push
lea
and
xor
rcl
cmp
rcll
fsubs
dec
cmp
mov
repnz
pop
push
jge
mov
sbb
shlb
pop
ljmp
popl
cmp
add
mov
inc
mov
inc
mov
mov
inc
ljmp
in
fisttpll
push
jne
insl
dec
call
test
je
aas
adc
dec
xchg
cmp
fidivs
into
nop
cwtl
sbb
jne
cmp
ror
jecxz
jecxz
stos
xchg
aaa
das
ret
mov
test
scas
push
imul
and
je
test
mov
lock
inc
popa
lea
pop
nop
je
mov
jecxz
aad
jecxz
sbb
mov
ret
cmp
repnz
addr16
lock
in
int
mov
subl
mov
sbb
ret
dec
mov
sbb
mov
jp
sbb
xor
mov
adc
sti
cmpsl
mov
add
andb
lods
and
push
mov
mov
imul
lds
in
movsb
or
cmp
mov
mov
decl
mov
dec
jle
or
pushl
xor
lods
nop
repnz
lock
inc
or
rol
aam
das
sub
mov
clc
or
or
subl
jmp
cmp
mov
shll
jge
scas
dec
pop
out
push
dec
dec
mov
and
pop
jge
lods
adc
int3
dec
xor
decl
movl
xchg
inc
into
push
mov
or
mov
xor
out
aaa
les
fs
fwait
jbe
inc
dec
pop
lds
push
dec
and
pop
lret
and
in
mov
xchg
inc
mov
ljmp
rolb
adc
sarb
les
rcrl
adc
inc
inc
dec
test
push
test
xor
push
cld
sbb
adc
fst
stos
pushf
dec
inc
daa
pop
mov
jae
shlb
dec
js
mov
mov
pop
cli
fucomip
je
pop
les
dec
inc
dec
jp
mov
inc
shl
dec
adc
shrl
data16
jmp
in
cmpsl
fistps
xchg
cmp
in
test
in
xor
fistpl
mov
repz
lock
fildll
lcall
hlt
mov
pop
addr16
test
in
cmp
fsubrp
inc
in
jmp
rcl
sysret
push
aaa
fistl
movsb
sahf
cltd
and
mov
data16
mov
rclb
lahf
sarl
lock
pop
and
loopne
sar
adc
jg
shll
lahf
pop
movsl
adc
sub
shll
xchg
ja
push
push
or
xor
push
xor
in
push
sub
out
int3
xchg
ja
rolb
sbb
inc
pop
adc
push
xor
pusha
jmp
cs
inc
fbstp
and
enter
fs
or
sub
and
sbb
fs
scas
push
outsb
xor
les
dec
pop
fwait
add
mov
jns
ss
mov
stos
cmp
jmp
mov
or
lock
jmp
insl
loopne
fsubl
mov
mov
mov
pushf
jle
divl
aaa
jns
scas
cmp
lret
sub
das
mov
sub
ficompl
mov
ss
sbb
out
gs
add
psrad
dec
stos
xchg
xchg
sbb
mov
jae
push
sbb
add
gs
fidivl
push
int
pop
mov
jecxz
stc
test
add
rcrl
fldt
adcb
add
jbe
xchg
sbb
dec
popa
aas
ljmp
adc
sbb
sti
mov
fdivrl
shll
daa
mov
leave
push
and
mov
arpl
mov
sub
scas
dec
adc
outsb
aad
push
adc
sahf
repz
xchg
mov
movsb
fiaddl
sbb
add
push
or
mov
aaa
inc
es
jo,pt
add
jl
mov
sbb
or
bound
jns
jnp
xor
dec
outsb
lock
mov
jmp
mov
jbe
sbb
jmp
fdivrs
inc
inc
xchg
popa
nop
in
xor
and
repz
divl
decb
scas
sbb
xchg
cld
inc
mov
lahf
adc
std
pop
es
out
je
ljmp
aam
mov
hlt
fwait
cmp
push
lret
dec
ljmp
pop
fwait
push
lea
cmp
push
pop
outsl
xchg
ror
scas
shl
sub
and
icebp
jp
imul
aam
cmp
shrb
popa
mov
test
jle
sarl
cmp
lret
adc
mov
lods
out
test
fdivrs
adc
inc
imul
insl
dec
cmp
bswap
pop
popf
adc
int
adc
mov
pushl
add
jmp
or
in
sub
xchg
popa
dec
adc
or
int
inc
cmp
mov
and
mov
mov
sti
shlb
fyl2x
scas
pop
ljmp
arpl
cltd
ds
add
lods
mov
cmp
in
push
push
jno
imul
movsl
rorl
decl
ss
or
jmp
addr16
aam
inc
mul
mov
inc
or
and
sbb
outsb
testb
sbb
stos
cmp
jmp
jnp
jno
stc
add
jns
sbbb
ret
fcmovnu
mov
popf
loopne
xor
jns
popf
jmp
in
dec
insb
pop
pop
ret
cmpb
inc
std
xchg
push
xor
mov
pop
jg
jnp
xor
pop
fwait
adc
xchg
out
push
xchg
jl
dec
rolb
cmp
xor
test
negb
jns
dec
test
mov
adc
pop
cli
mov
and
scas
push
in
mov
popa
add
dec
jno
sub
xor
es
jecxz
push
out
icebp
sub
mov
insl
cmp
mov
out
push
mov
dec
jnp
imul
sbb
out
pop
or
and
aas
inc
dec
test
scas
mov
and
mov
movsb
loope
mov
mov
xchg
bound
mov
sbb
cmc
xlat
out
jae
stos
sub
jnp
shl
imul
out
dec
andb
jbe
test
inc
dec
ret
decb
mov
call
dec
mov
mov
call
out
lcall
js
mov
sahf
pop
dec
fnsave
mov
cmp
mov
stos
and
jnp
lods
jb
adc
lea
ret
adcl
pop
mov
jnp
jmp
jmp
movsb
je,pt
loopne
mov
leave
pop
call
adc
sbb
and
sti
ds
icebp
xor
adc
pushf
mov
adc
aaa
cmp
push
jp
fdivrs
add
push
lods
sbb
adc
icebp
sub
pop
cmp
jae
mov
in
cmp
mov
xchg
jl,pt
sbb
lahf
sbb
and
mov
jmp
or
dec
and
mov
or
xchg
inc
push
adc
add
lds
lods
pop
xlat
not
test
and
lahf
xor
daa
repnz
jo
mov
and
mov
jb
xchg
es
jg
jmp
test
lret
movd
jnp
fisubrs
jmp
in
push
cmp
inc
and
push
cli
or
mov
push
dec
xchg
pop
faddl
sbb
scas
fiaddl
pop
xchg
leave
pop
mov
push
push
sub
lods
push
cmp
loope
scas
xchg
jmp
sbb
lock
jmp
outsl
popf
sbb
mov
mov
xor
sti
and
cli
aad
and
jge
mov
push
jo
jae
sbb
sbb
inc
add
sahf
jne
shll
lret
pop
cmpsl
fsubs
addl
in
mov
mov
ret
sub
xor
jp
jg
xor
idiv
es
and
pop
mov
dec
lea
imul
aaa
sub
mov
xchg
orb
cmp
imul
mov
pop
sub
loop
cmp
xchg
sub
add
lods
xchg
adc
out
push
cmp
xor
and
insb
loope
push
mov
lods
mov
imul
add
adc
cli
ret
shlb
out
mov
clc
leave
js
jns
cmpsl
pop
sub
mov
lods
cli
insb
daa
into
xor
fsub
pop
ror
mov
sub
sub
popf
out
jne
mov
imull
je
dec
dec
lds
adc
cli
add
sbb
aas
ljmp
sub
outsb
lea
aaa
and
ss
inc
lds
mov
call
xlat
push
mov
inc
fisubs
push
cmpsl
xor
mov
push
ja
mov
sub
call
mov
or
inc
jmp
mov
dec
xchg
pop
xor
lret
push
inc
jbe
push
shlb
popa
pop
xchg
jl
ja
je
sar
hlt
mov
lcall
push
dec
inc
div
sbb
sub
dec
mov
mov
add
jmp
cmpsl
push
popa
cli
jno
or
mov
pop
pop
push
jmp
lock
in
cli
xlat
stos
rclb
cmp
jg
out
and
xchg
pusha
cmp
xchg
pop
icebp
iret
xchg
pop
cmpsl
push
add
pop
mov
mov
dec
in
lock
xor
jp
mov
lods
xor
push
cmpsl
pusha
jmp
xchg
leave
pop
cmpsb
lret
dec
les
mov
fstl
cmc
orb
roll
cmp
pop
mov
add
mov
sahf
or
loope
sbb
js
push
mov
add
std
std
cmp
int
out
jmp
sbb
dec
xor
insb
push
adc
inc
cmp
shl
mov
fdivrs
inc
into
stos
xchg
std
sahf
mov
fcmove
jecxz
outsb
arpl
hlt
movsb
fcmovb
and
jmp
into
into
push
out
inc
push
orl
jmp
in
xchg
push
push
inc
and
adc
dec
push
loop
pop
mov
cwtl
inc
loop
mov
mov
xor
in
pop
xchg
and
gs
stos
and
addr16
jl
lods
jl
icebp
inc
stc
and
mov
sbb
mov
inc
mov
rorb
xchg
xchg
fisubl
out
mov
out
add
xchg
xchg
add
or
xorb
out
stos
enter
lock
mov
sub
mov
xor
adc
mov
rcll
mov
add
outsb
daa
adc
cli
bound
xchg
or
xlat
aam
testl
mov
mov
and
xor
out
sub
cmp
xchg
outsl
mov
jmp
cmp
adc
inc
loope
adc
addr16
cmp
push
mov
stos
je
enter
pop
fcoms
js
add
dec
inc
cmp
mov
dec
outsl
ds
dec
xor
push
das
lcall
dec
cmpb
sub
xchg
jae
mov
dec
cmp
mov
pop
cmp
mov
adc
jle
leave
in
aas
sbb
les
mov
insl
jle
andl
fxch
lea
push
scas
mov
out
adc
or
mov
jmp
jnp
jns
xchg
repnz
add
push
lahf
xor
ja
arpl
mov
xchg
dec
push
xchg
push
inc
dec
es
sahf
sbb
sub
cltd
inc
or
and
mov
lds
loope
ds
dec
xchg
js
addb
adc
mov
data16
inc
pop
mov
loop
cmp
pushfw
dec
dec
sub
lret
pop
jge
outsb
xor
mov
fbld
test
insl
sti
nop
pop
icebp
daa
pop
repnz
lcall
hlt
and
mov
sbb
dec
push
jbe
inc
push
sub
xchg
push
xchg
xchg
cltd
dec
int3
mov
outsb
inc
mov
mov
push
push
mov
icebp
jns
insl
cmc
mov
popa
push
subb
out
mov
dec
push
cli
movsb
call
pushf
call
mov
push
lea
jo
sub
out
or
pop
nop
fldenv
mov
adc
ret
push
pop
mov
jmp
xchg
stc
xor
xchg
out
test
xchg
add
add
ror
or
sub
sahf
and
cmp
dec
movsl
push
cmp
push
push
add
mov
sub
addb
pushf
and
daa
and
add
dec
adc
jns
adc
insl
pusha
inc
jl
sub
lcall
jl
in
xor
and
fists
push
gs
xor
repz
adc
rorl
lahf
je
sar
dec
mov
lods
js
adc
fldenv
push
mov
xor
jo
sbb
pop
xchg
aad
out
adc
dec
jg
lcall
stc
jg
and
or
leave
lret
push
icebp
lods
ljmp
data16
add
mov
addr16
orl
inc
mov
cltd
dec
es
inc
je
popa
dec
or
adc
xchg
push
jns
stc
imul
or
inc
jb
cwtl
inc
int3
cmp
movl
mov
push
mov
and
lret
call
mov
add
daa
xor
sbb
int3
cmp
jo
or
jno
push
icebp
hlt
clc
pusha
and
in
cmp
push
inc
jmp
orl
loopne
mov
shrl
insl
data16
out
scas
inc
add
pushl
popa
out
pop
rcrl
xchg
inc
adc
inc
inc
data16
cld
cld
pop
cld
push
mov
out
jnp
xor
mov
rorl
sbb
nop
mov
or
xor
lds
and
pop
test
bound
popf
outsb
xor
enter
add
inc
pop
cs
ss
adc
inc
push
std
mov
xchg
dec
es
add
and
jb
les
push
cmpsb
daa
mov
pop
push
loopne
in
in
mov
pusha
cld
cmp
xor
jno
outsb
mov
sbb
dec
sbb
xchg
sub
inc
fidivl
movl
add
fcomip
pop
dec
aad
push
mov
sbb
bound
or
pop
mov
in
sbb
shll
xor
add
inc
jb
popa
push
repz
xchg
jecxz
pop
cmp
push
and
sti
enter
sbb
push
and
xor
aaa
and
lods
cltd
mov
insl
and
in
fildll
invd
cmpl
jno
mov
sbb
das
les
pop
fsubr
add
loopne
push
and
out
lret
add
or
test
pop
pop
inc
xchg
pop
aam
rorl
fs
lret
out
inc
es
adc
roll
incb
lock
nop
jb
and
js
ret
xchg
sbb
fmull
movlhps
jle
jns
xchg
sar
fmuls
adc
mov
mov
icebp
or
mov
xor
adc
xchg
andb
mov
pusha
mov
sbb
sbb
rcll
inc
jmp
scas
adc
fimuls
mov
cmp
push
pop
mov
pop
mov
pop
gs
or
ja
cmp
repnz
in
adcl
cld
mov
and
neg
dec
out
fwait
ficompl
jp
pop
cmc
xor
xchg
inc
int
leave
adc
stos
int3
fcoms
fwait
dec
out
sub
mov
dec
xchg
test
rorb
dec
cwtl
jne
std
std
jnp
inc
lahf
pop
iret
cmp
insl
jne
flds
aas
xor
insb
pop
rcrb
sbb
push
sarl
inc
test
ficoms
jbe
cmp
and
iret
mov
out
cmpsl
dec
fimuls
or
cmpsb
sub
xor
mov
sarl
sbb
repz
in
imul
clc
hlt
pop
and
jmp
jmp
add
fcmovbe
test
or
cld
add
push
sbb
xchg
arpl
jne
cmpsl
jl
or
gs
fnstsw
push
test
in
jl
insb
ljmp
cmpsb
gs
push
adc
sub
scas
mov
gs
jo
daa
xor
js
data16
repnz
push
sub
mov
mov
mov
cli
and
inc
or
outsb
pushf
test
push
push
lret
adc
mov
repz
mov
mov
dec
sub
lret
mov
and
or
push
enter
lods
push
jno
push
roll
mov
rep
icebp
mov
aam
pop
xchg
push
cmp
popf
insl
push
fs
scas
jl
sub
pop
lret
mov
add
stc
dec
jmp
pusha
es
xchg
ja
xor
notl
mov
pop
sub
pop
xor
mov
sub
adc
ljmp
shl
sub
and
pop
aaa
cmp
out
pop
scas
mov
adc
xor
test
movl
cmp
outsb
sbb
sbbb
aam
or
cwtl
retw
jae
xchg
xor
std
mov
subb
mov
adc
xchg
ja
imul
mov
andl
pop
mov
repz
xor
ret
clc
pop
jmp
dec
jb
fisubrs
stc
add
negl
pop
out
xor
arpl
popf
pop
push
fcmove
add
xor
sbb
imul
cmp
cli
jecxz
in
add
or
movsl
mov
mov
inc
fsubrs
cs
iret
fwait
std
clc
outsb
addr16
fnsave
fdivr
sub
gs
ret
insb
xchg
in
fisubrl
ret
inc
test
inc
iret
push
sahf
cld
and
mov
nop
push
cmpsb
sub
cltd
push
push
pop
push
xchg
mov
mul
dec
cmp
mov
sbb
xor
jnp
xchg
xchg
xchg
decb
popf
stos
and
xchg
movsb
push
addr16
inc
and
loopne
notb
and
icebp
sub
xor
xchg
popa
stos
pop
mov
xchg
loope
mov
daa
loopne
mov
dec
sbb
inc
add
mov
push
push
and
inc
jge
fiadds
inc
inc
rolb
jle
dec
rcrl
xchg
push
and
jb
pop
or
dec
rcr
xchg
sbbb
cmp
aas
nop
xchg
xor
and
cmp
rcr
stos
rolb
jb
add
and
mov
adc
add
mov
mov
in
or
cmpsb
faddl
bound
mov
jmp
fimull
dec
mov
mov
sub
std
jl
jne
hlt
daa
ljmp
dec
outsl
std
sar
jecxz
push
ret
push
xor
mov
dec
dec
sbb
int
mov
xchg
test
dec
outsl
xchg
or
mov
dec
pop
jge
pop
xchg
or
add
stc
lahf
leave
sbb
inc
loope
push
push
inc
mov
lock
je
jle
les
stos
iret
cmpsl
inc
stc
cltd
ret
hlt
xchg
cmp
gs
inc
xchg
cmp
mov
sbb
xor
nop
stos
and
insb
xchg
cwtl
push
lds
mov
cs
xchg
movsb
enter
mov
push
clc
adc
sbb
cmp
jge
lods
pop
pop
and
and
pop
pop
aad
push
pop
loop
test
cmp
add
xor
adcb
ds
push
cmp
sub
cld
call
pop
aaa
push
sub
mov
sub
push
test
lcall
and
mov
cmp
out
pusha
and
je
loop
push
jno
pop
dec
push
mov
jo
push
dec
xchg
in
jns
xor
aas
add
inc
insb
jb
out
fwait
test
inc
xchg
push
xlat
mov
mov
lahf
cmp
lret
jecxz
xchg
xchg
rcrb
in
xor
ja
in
stos
enter
inc
movsb
mov
xchg
fisubrs
int
popf
shlb
cmpsb
adc
clc
xor
sbb
iret
mov
push
pop
dec
outsl
repz
shll
out
push
push
aas
or
cmpsl
insb
xchg
or
movsl
loop
jo
in
lret
sub
dec
nop
je
cmpsb
dec
jno
aam
and
jno
testl
aad
fcoml
les
cmp
orb
inc
xlat
sub
mov
adc
pushf
fdivrs
aas
repz
scas
jb
lods
sbb
xchg
jmp
out
in
xchg
jp
in
push
lods
insb
loopne
scas
outsl
cmp
push
sbb
bnd
lds
dec
shll
in
add
leave
mov
push
add
pusha
xor
and
xchg
push
dec
cmp
in
push
cmp
sub
int3
or
sub
aad
imul
mov
sarl
pop
fucomp
sub
aas
addr16
xchg
gs
inc
in
or
sub
cmpsl
jecxz
inc
mov
inc
adc
hlt
rorb
sub
push
add
or
scas
adc
jge
loope
sbb
pop
sbb
and
or
dec
pop
pop
rclb
.byte
push
test
.byte
adc
mov
nop
add
add
popa
adc
adc
inc
lds
in
jge
dec
adcl
arpl
lods
int
mov
sbb
mov
push
insb
jns
cltd
scas
adc
sub
cmp
cmp
and
dec
insb
mov
xchg
clc
pop
cmc
jns
push
into
cmp
fmull
stos
add
push
arpl
popa
jne
imul
add
fwait
mov
std
lods
adc
gs
cld
cmp
mov
ret
push
xchg
fldcw
xor
dec
add
pop
and
or
and
stos
aam
xor
pop
inc
and
adc
adc
imul
mov
push
mov
mov
mov
pop
out
or
daa
cmp
outsl
mov
xchg
in
inc
jne
mov
inc
in
mov
mov
pop
push
xchg
xchg
loope
rcrb
push
sub
or
xor
cmpsl
imul
adc
mov
fnstsw
mov
mov
pop
xchg
pusha
mov
pop
fs
aas
mov
adcl
inc
mov
xlat
addb
out
cmp
or
xchg
push
sbb
mov
mov
add
fcomps
dec
call
jp
jne
cmp
inc
xlat
ret
sbb
pop
xchg
xchg
jns
dec
add
loop
cli
pusha
inc
mov
sbb
xor
pop
out
xchg
jecxz
push
and
add
fcompl
mov
rcrl
mov
push
imul
movsl
push
cmpsb
aas
pop
mov
adcl
mov
movsl
dec
ficompl
dec
movsb
mov
add
test
and
.byte
dec
dec
add
add
fdivrs
add
add
push
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
fdivrs
add
add
add
mov
add
addb
add
fdivrs
add
add
add
add
add
enter
add
add
loopne
add
fdivrs
add
add
push
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
fdivrs
add
add
push
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
fdivrs
add
push
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
fdivrs
add
add
add
mov
add
addb
add
fdivrs
add
add
add
add
add
addb
add
add
fdivrs
add
add
add
add
add
cwtl
add
add
add
add
cmp
add
add
add
add
add
test
add
add
add
fdivrs
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
enter
add
add
fdivrs
add
add
add
add
add
fadds
add
add
add
cmp
add
add
add
add
add
call
add
add
cmp
add
add
add
add
add
clc
add
add
add
add
cmp
add
add
add
add
add
or
add
fdivrs
add
add
add
add
add
sbb
add
fdivrs
add
add
add
add
add
sub
add
fdivrs
add
add
add
add
add
cmp
add
fdivrs
add
add
add
add
add
dec
add
add
fdivrs
add
add
add
add
add
pop
add
add
fdivrs
add
add
add
add
add
push
add
add
cmp
add
add
add
add
add
js
add
add
add
fdivrs
add
add
add
or
add
add
add
cmp
add
add
add
or
add
add
add
cmp
add
add
add
or
add
add
add
cmp
add
add
add
or
add
add
add
cmp
add
add
add
or
add
add
add
fdivrs
add
add
add
or
add
add
add
fdivrs
add
add
add
or
add
add
add
fdivrs
add
add
add
or
add
add
add
fdivrs
add
add
add
or
add
push
add
add
add
fdivrs
add
add
add
or
add
push
add
add
add
fdivrs
add
add
add
or
add
push
add
add
add
fdivrs
add
add
add
or
add
push
add
add
add
fdivrs
add
add
add
or
add
add
add
add
fdivrs
add
add
add
or
add
add
add
add
fdivrs
add
add
add
add
add
push
add
add
cmp
add
add
add
add
add
js
add
mov
add
in
add
add
add
addb
call
add
add
add
add
push
add
add
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
sbb
add
in
add
add
add
nop
or
add
in
add
add
add
add
add
in
add
add
add
add
add
add
sgdtl
aam
add
in
add
add
add
les
add
inc
add
add
add
add
add
add
adc
add
add
add
add
les
add
cwtl
add
add
add
add
add
add
add
add
in
add
add
add
js
add
mov
add
add
add
add
add
xor
add
in
add
add
add
push
add
add
add
add
add
add
add
mov
add
add
add
add
push
add
add
in
add
add
add
xor
push
add
add
in
add
add
add
push
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
push
add
add
add
add
add
add
push
add
add
in
add
add
add
je
push
add
add
add
add
add
add
in
add
add
add
mov
push
add
add
add
add
add
add
add
add
in
add
add
add
xchg
sub
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
cmp
add
in
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
inc
mov
sbbb
mov
es
andb
fs
push
data16
pop
loope
popa
ret
movsb
mov
fldenv
addb
mov
das
ja
sbb
mov
mov
lret
js
out
arpl
cmp
mov
orl
mov
iret
loope
movsl
pop
lods
mov
rcll
adc
add
push
popa
lock
out
jecxz
cld
cmp
or
mov
mov
imul
sub
pop
jmp
and
jl
repz
imul
outsl
dec
loopne
hlt
cmp
test
xor
xchg
mov
cmp
push
fdiv
cwtl
mov
addr16
gs
xor
mov
pop
test
jg
insb
inc
inc
ds
xchg
in
sbbb
aam
addb
repz
sub
repnz
arpl
add
stos
xor
mov
and
stos
addr16
es
xchg
and
ret
repnz
mov
cmpsb
call
add
sbb
arpl
fwait
mov
and
cmp
and
cmp
loopne
gs
mov
jecxz
xchg
test
inc
sub
pop
add
or
shl
lret
mov
outsl
ficoml
dec
das
flds
fwait
outsl
dec
stos
loop
out
sbb
insb
mov
cmpb
and
lds
fsubp
dec
lods
fnstenv
mov
dec
xchg
in
jae
iret
sub
mov
sar
dec
dec
cmc
fistps
stc
mov
ret
adc
inc
pop
je
and
dec
lret
push
push
adc
xchg
adc
shrb
ljmp
and
nop
ret
daa
push
imul
xlat
and
pop
enter
add
js
in
shr
sub
sbb
jno
pop
ss
leave
js
xor
or
or
or
das
add
imul
cmc
icebp
je
inc
aad
rolb
repnz
sbb
lds
adc
sbb
in
lods
mov
xchg
mov
aas
lret
cmp
int
ret
cmp
dec
mov
push
outsl
sub
mov
lea
pop
xchg
leave
in
rclb
mov
mov
mov
pop
js
sbb
jnp
into
cmp
mov
sti
in
mov
push
sub
in
ror
into
aam
rclb
and
sub
push
jle
or
scas
into
imul
sbb
pop
dec
mov
test
and
sti
inc
movsb
pop
mov
mov
cmp
jle
insb
les
sub
not
stos
aad
pop
mov
sbb
sahf
sti
jecxz
jmp
push
sbb
in
pop
and
jecxz
addr16
xchg
iret
mov
mov
sub
mov
add
jns
mov
jmp
scas
dec
pop
mov
fnstsw
cmpsl
movsb
lea
jns
sbb
call
inc
sub
push
sbb
cltd
lods
addl
xchg
jbe
call
xor
mov
scas
loope
jb
xchg
bound
or
xchg
lea
mov
outsl
shl
xchg
insl
leave
sub
xlat
cs
push
mov
jo
jl
int
fists
dec
jae
daa
mov
hlt
sbb
fcmovb
sbb
lods
mov
mov
mov
push
push
or
pop
mull
in
sub
cwtl
inc
pusha
lods
sbb
aad
rclb
push
xor
push
aas
push
add
jp
sub
jnp
mov
mov
out
call
ss
int3
nop
in
pop
mov
or
push
pop
clc
or
in
inc
xchg
ret
or
insl
dec
gs
lahf
mov
loopne
je
mov
iret
pop
or
les
sahf
loope
cmp
sbb
and
pop
insb
sub
bound
jp
int
les
std
fisubrl
daa
cmpsb
test
mov
pop
mov
jle
sbb
cmp
aad
adc
inc
mov
jns
xchg
cmc
les
or
not
lahf
push
pop
pusha
cmp
jmp
mov
in
mov
test
int
mov
fiadds
pop
mov
popa
sbb
push
aas
aaa
dec
sbb
jns
jl
out
cwtl
repz
inc
roll
movsl
lds
jl
pop
mov
cmpw
pop
xchg
sahf
dec
in
pop
ljmp
mov
adc
leave
sub
or
rcrl
push
or
jge
jmp
enter
repnz
push
fistl
lret
add
jmp
insl
inc
jecxz
sub
lcall
aaa
adc
xchg
dec
xchg
pop
mov
dec
xor
dec
mov
lret
mov
dec
adcb
pop
dec
fstl
jmp
lock
xchg
js
adc
negb
xchg
scas
mov
imul
mov
xchg
jno
pop
or
mov
sub
in
int
xchg
sbb
xchg
mov
xor
iret
mov
mov
mov
jmp
aad
inc
dec
adc
je
jge
dec
pop
or
std
in
int3
pop
jne
or
insb
fcoml
hlt
jg
cli
or
js
and
xor
cmp
insb
push
fbld
adc
daa
ds
inc
imul
stos
pop
lods
shll
push
dec
aad
fadds
xchg
jp
mov
dec
lahf
test
xor
and
sub
aad
mov
mov
xchg
cmc
lret
movsl
fwait
js
ja
add
xor
jo
add
or
xor
mov
add
into
in
mov
pop
pop
and
popf
dec
mov
mov
pop
mov
mov
and
add
mov
fnsetpm(287
mov
cmc
std
mov
or
xchg
push
pop
sbb
rcll
mov
scas
data16
orl
add
push
rcrl
cmc
adc
or
pop
or
psadbw
fstpl
gs
into
xor
mov
in
inc
iret
mov
scas
jae
pushf
adc
and
lds
or
testb
rcll
mov
lock
pop
stc
fnstsw
and
outsb
sbb
test
and
mov
adcb
cmp
pop
pop
mov
xchg
adc
push
fnstcw
push
pop
outsl
sub
rclb
sbb
mov
and
inc
ficompl
sub
repz
cltd
xor
xchg
rdpmc
out
push
sar
ds
addr16
sti
lods
cli
cmpl
fistpll
xchg
xchg
faddl
or
fs
pop
rolb
movsl
jne
mov
inc
add
cmc
outsl
add
test
dec
add
xchg
test
aaa
into
inc
inc
ljmp
iret
adc
popa
imul
int
in
dec
jnp
test
add
mov
pusha
pop
out
xor
idivb
sub
loope
popa
je
jge
push
iret
jl
adc
mulb
mov
lcall
cmc
adc
mov
ror
mov
mov
and
outsl
adcb
or
inc
cmp
mov
cmc
adc
mov
xchg
mov
imul
lods
stc
lahf
jg
mov
ljmp
pop
xlat
push
pop
pop
mov
xor
shlb
out
mov
xor
sbb
mov
stc
cmp
xchg
hlt
scas
push
dec
lds
addr16
mov
push
cmpsl
sti
sti
pop
cltd
mov
shrl
ss
jno
mov
imul
jb
out
sahf
sarl
dec
inc
mov
lods
xor
jno
xor
mov
jecxz
lcall
lea
mov
fisttpll
arpl
aad
subl
dec
pop
lret
mov
ja
mov
out
in
adc
dec
sar
sbb
adc
or
mov
out
pop
es
jo
lods
mov
in
aad
mov
and
cmp
push
xchg
sub
and
jnp
sbb
jae
repnz
cld
add
fdivrl
fcoms
cwtl
movsb
pop
and
mov
jne
inc
es
pop
jp
scas
jnp
pop
cmc
dec
in
loopne
pusha
outsb
xor
mov
jge
add
jecxz
push
push
inc
clc
push
cmp
outsb
sub
repnz
js
add
sahf
pop
cmpsb
scas
mov
outsl
inc
fisubl
xchg
daa
xchg
dec
push
repnz
mov
push
inc
push
sahf
stos
sub
add
and
inc
arpl
rcr
les
pop
imul
cmp
cmc
sbb
mov
sub
adc
cmp
ljmp
jb
mov
lret
clc
mov
dec
hlt
cld
push
mov
push
out
cwtl
push
pop
nopl
jae
pop
rcl
fcomps
cmc
add
cmp
mov
ljmp
mov
pusha
xchg
pop
out
dec
lods
cmpsb
jb
call
lcall
pushl
mov
call
jle
xor
gs
xchg
sub
iret
loop
sbb
sub
inc
inc
movsb
sbb
mov
mov
add
adcb
call
test
xchg
pop
mov
aaa
es
je
test
sarb
and
je
aas
or
sub
dec
and
or
inc
cmp
jno
inc
jecxz
call
mov
out
add
mov
mov
js
aaa
push
xchg
out
dec
bound
pop
jo
xor
popa
jg
add
idivl
push
imul
icebp
sub
push
xchg
dec
subb
bnd
clc
jb
loop
cmpb
jp
pusha
mov
loope
mov
stc
cwtl
mov
mov
push
int
in
push
push
and
mov
inc
mov
xor
insl
xchg
push
xor
or
in
jbe
mov
inc
inc
push
movsl
cmp
outsb
loope
adcl
js
add
mov
adcl
addr16
or
shll
mov
push
mov
loopne
incb
inc
rorl
sbb
mov
movsb
fisubs
xor
addr16
daa
xor
adc
or
repz
inc
mov
movsb
sbb
mov
rcrl
aad
inc
or
jne,pt
pop
xor
outsb
mov
sbb
jl
jae
imull
in
ret
jle
cmp
mov
push
in
adc
and
push
int3
repnz
jno
jmp
ret
push
shll
imul
fcmovnu
lahf
jno
gs
xor
jbe
and
and
push
xor
gs
push
dec
sbb
bound
push
add
stos
or
fisubrl
mov
jle
in
ret
ret
call
and
ja
test
nop
sbb
xchg
shll
cmp
xor
popf
mov
je
int3
cltd
aas
and
outsl
mov
or
pop
sbb
push
enter
scas
mov
fucom
mov
pop
ljmp
and
sub
and
or
and
shrb
mov
out
sbb
cwtl
lock
mov
adc
fsubrs
lods
imul
sub
jbe
xchg
and
nop
adc
cmp
inc
push
daa
inc
xchg
jnp
jge
push
push
es
les
mov
rorb
dec
pop
mov
push
clc
inc
mov
insl
scas
mov
add
ds
sub
dec
idivl
ret
lret
sbb
push
loope
enter
mov
rol
mov
push
push
sub
mov
sar
xchg
add
sub
push
xor
add
cmp
rolb
je
or
adc
adc
cmp
bound
xorb
mov
dec
push
jl
hlt
pushl
jecxz
leave
ret
cmp
sub
push
pop
aaa
inc
pushf
fsubl
cli
in
push
add
imul
cmp
push
stos
ret
adc
mov
js
ja
xor
mov
repz
rcrl
insl
sub
dec
cmp
nop
lock
in
lret
fnsave
mov
mov
jmp
cli
sub
mov
xchg
mov
mov
push
push
xchg
stc
shrb
mov
lods
dec
push
push
xor
rorb
fimuls
cmp
jge
pop
movsb
xchg
loope
iret
mov
sub
inc
mov
and
xchg
clc
xorb
imul
imul
dec
outsb
cmp
jg
hlt
int
xor
gs
mov
cmp
cs
insb
icebp
xor
lret
imul
mov
cmc
fsubl
data16
out
out
and
mov
sub
and
cld
and
testb
scas
push
and
loope
es
lods
out
push
call
or
popa
cs
lcall
or
sub
pusha
pop
bound
out
xchg
cltd
add
sbb
lods
pusha
addr16
sbb
sbb
inc
into
dec
movsl
arpl
push
loope
filds
push
cltd
sub
nop
dec
cmp
and
gs
pop
out
xchg
bound
push
mov
scas
xor
sub
mov
cli
cmp
mov
cs
sub
cmpsb
xor
int
sbb
test
pop
pop
int3
push
push
inc
xor
inc
arpl
mov
repnz
and
mov
repz
dec
add
imul
sbb
ja
or
mov
mov
hlt
xchg
iret
rorl
and
mov
mov
and
cmp
or
call
cmp
insb
sti
mov
cmp
mov
popf
mov
push
das
cmc
xor
ljmp
xchg
and
test
hlt
ret
fidivrs
sbb
rclb
fnstsw
inc
mov
dec
out
jecxz
ljmp
in
mov
inc
mov
pop
push
add
mov
call
jno
and
mov
ret
jmp
mov
add
pop
subl
test
dec
clc
and
xchg
pusha
or
imull
int
out
adc
clc
xchg
add
push
popa
or
pop
sub
cmpsl
stos
xchg
cmp
cmp
cmp
mov
add
push
fwait
out
aam
jl
mov
into
stos
dec
jb
lea
repz
leave
jno
sar
push
popf
cltd
cmpsb
jge
fucom
cmp
mov
add
imul
je
aam
aaa
shl
or
dec
loop
fidivl
test
mov
dec
cmp
jne
in
enter
nop
jnp
movsb
addl
adc
ds
int
jp
repz
mov
dec
mov
push
mov
mov
or
dec
add
sti
jb
mov
aam
inc
outsb
mov
cmc
lods
mov
dec
and
enter
scas
dec
test
xchg
lahf
inc
repz
shl
cmpsl
pop
jmp
ret
bound
xor
lret
lods
mov
paddd
lahf
mov
and
mov
out
mov
add
ds
xor
inc
test
test
cmpsl
jmp
pop
aaa
mov
test
stc
int3
dec
inc
lds
je
pop
mov
les
in
stc
loopne
rol
aaa
jo,pn
adc
cltd
fcoml
lods
push
ret
stos
in
daa
ds
sub
mov
icebp
mov
dec
dec
pop
popfw
scas
bnd
lds
adc
dec
adc
addr16
pop
inc
mov
popf
fstpl
pop
add
js
mov
mov
nop
jge
dec
mov
fdivrl
xor
mov
rol
cld
das
std
popa
mov
test
loopne
fstp
inc
fdivrp
xchg
ljmp
and
dec
out
sbb
and
or
enter
cmc
jmp
lahf
sbb
adc
icebp
lret
mov
mov
fsubl
cs
es
push
stos
out
sbb
test
push
ficomps
inc
dec
and
cmp
push
lahf
xor
push
js
or
scas
mov
mov
mov
push
inc
push
xor
rep
or
sbb
mov
cmpb
popa
rorb
sbb
enter
popf
test
mov
lock
and
mov
xor
out
xchg
jmp
fs
gs
jge
cmc
int
shrb
xchg
sub
out
enter
das
inc
pop
lds
pushf
mov
in
inc
repnz
inc
sub
mov
inc
aad
in
add
push
mov
push
push
divl
movsb
adc
dec
push
outsb
inc
fiaddl
fdiv
lds
cmpsb
mov
in
xchg
cmp
push
xchg
fs
faddp
ret
or
adc
fldcw
inc
and
rorb
adc
mov
cmp
ret
push
int3
lahf
and
mov
inc
repnz
mov
out
fstpt
mov
test
aas
popf
cmp
aaa
imul
arpl
daa
jb
out
lds
add
dec
movsb
test
jg
xor
dec
mov
pushf
call
push
adc
pop
sbb
cld
jecxz
xchg
aas
sbb
sbb
inc
or
inc
jl
into
jns
lock
ds
adc
inc
je
int
fdivrp
dec
push
aas
aas
outsl
adc
lock
jb
dec
jle
addb
jge
fmuls
fwait
nop
adc
outsl
mov
jnp
addb
ret
out
imul
xchg
cmpsb
scas
clc
sbb
push
stos
popf
xchg
adc
dec
js
ror
loop
xchg
push
and
or
adc
push
cmc
lret
sar
cmpsb
orl
push
stos
iret
jge
mov
push
outsb
stos
sub
mov
outsb
sbb
cld
in
mov
inc
cmp
xchg
push
orl
cmp
dec
xor
sub
pushl
inc
dec
cli
mov
test
adc
cltd
test
in
cmp
je
and
es
mov
test
add
cld
jmp
cs
dec
mov
addb
test
in
mov
movsb
or
pushf
push
enter
push
ficomps
cmc
push
fwait
leave
stos
imul
test
lods
xchg
cltd
lahf
clc
fs
jmp
sbb
sti
pusha
es
daa
das
jge
into
clc
sti
leave
mov
sahf
push
int
sbb
ja
fcmovbe
xchg
aad
popf
out
adc
xchg
xor
shlb
js,pn
inc
mov
sub
or
push
cmp
imul
pop
xor
cli
faddl
mov
cmp
ret
int3
daa
cld
jmp
push
js
mov
pop
in
fimuls
fldl
mov
je
jecxz
je
leave
into
in
fidivl
inc
lock
test
adc
popf
push
aaa
jne
fcmovne
ret
movsb
popa
mov
insl
mov
push
mov
bnd
mov
mov
sub
dec
lods
dec
test
lea
xchg
iret
pop
sbb
fdivr
mov
aas
sub
std
icebp
jb
xchg
push
sbb
test
dec
jp
inc
sbb
clc
repz
sub
jle
mov
lods
sarl
ds
aas
cmpsl
inc
adc
aaa
mov
js
lock
out
jg
lods
sub
pop
mov
lods
and
pusha
loopne
jo
push
repnz
inc
push
mov
dec
cmp
xor
stos
std
sarl
or
push
mov
outsl
stc
mov
xchg
jle
mov
xchg
mov
ret
dec
inc
loopne
test
mov
xor
mov
int3
sub
orb
addr16
fisubl
xchg
pop
iret
les
xor
in
ret
fwait
jl
ja
jne
xchg
mov
aam
xor
xlat
push
stos
jne
or
push
mov
call
aad
push
inc
push
inc
adc
dec
push
int3
or
data16
rolb
lcall
test
shll
xchg
lods
mov
imul
in
and
outsb
shlb
aas
pop
in
int
dec
fwait
daa
shrb
enter
mov
pop
cmp
inc
adc
mov
xchg
mov
adc
daa
outsb
ja
movlps
popa
xchg
add
inc
xchg
add
test
sbb
inc
addr16
lahf
mov
mov
push
js
or
test
adc
xor
push
sbb
jle
into
or
cwtl
jbe
loop
mov
mov
xor
jo
cmpsb
insl
scas
addr16
es
iret
cmp
xchg
inc
inc
sub
mov
sbb
inc
sbb
stos
cmpsb
mov
sti
ret
and
pop
jo
aas
or
sub
cmpsb
bound
lods
into
add
xchg
adc
nopl
mov
jne
pop
dec
rcl
ret
mov
stos
jle
sub
push
orl
xor
js
mov
js
mov
jecxz
inc
add
xchg
cmp
fdivrs
xlat
inc
cmpsl
dec
inc
pop
dec
stos
lcall
test
xlat
cmp
sbb
negl
pop
mov
xchg
ja
add
jle
jnp
dec
xchg
fs
pop
xchg
pop
or
inc
mov
into
jle
iret
sbb
mov
inc
mov
loopne
push
aad
cmc
shrl
fimuls
jmp
lret
cmp
insl
pushl
hlt
imul
adc
pop
sub
js
xchg
mov
mov
inc
dec
adc
mov
sti
sub
andb
imul
xchg
mov
xchg
fsub
cmp
inc
lahf
inc
in
mov
xor
jbe
flds
xor
pop
xlat
sub
fdivr
lods
pusha
jae
jl
dec
dec
test
sahf
stc
pop
outsb
mov
pop
mov
cs
je
cwtl
and
pop
xchg
inc
push
mov
jg
dec
push
dec
sbb
icebp
mov
lea
sub
cmpsb
mov
fdivrs
fcomps
insl
xchg
push
ret
jbe
and
jmp
dec
dec
je
pop
lret
add
into
inc
jb
stos
test
enter
mov
mov
mov
mov
mov
ss
pop
push
popf
inc
jmp
and
xchg
hlt
out
out
xor
mov
insl
rolb
sbb
adc
cwtl
aaa
ret
add
sahf
testb
sub
fildl
mov
dec
push
lods
shrl
xchg
sub
aas
das
nop
sub
or
pushf
sahf
mov
lret
adc
adc
mov
lahf
or
ja
test
out
push
push
mov
dec
test
imul
mov
jo
pop
sbb
adc
mov
stos
and
push
pop
or
rcrb
xor
add
repz
jecxz
in
push
fisubrs
cli
mov
pushf
rol
xor
push
and
dec
xor
shll
jbe
cmp
xchg
hlt
pop
std
cmp
pushf
lret
push
pop
mov
pop
pop
mov
mov
in
rorb
sub
inc
outsl
popf
xor
mov
and
dec
xchg
push
xchg
shrl
into
dec
push
mov
test
and
push
dec
fwait
clc
mov
es
sub
dec
or
ret
or
shrb
push
add
and
sbb
imul
adc
cmpsb
nop
hlt
lock
inc
ss
mov
data16
adc
jno
mov
popf
xor
jp
add
inc
jo
xor
and
daa
popa
pop
and
jb
xor
cmpsb
call
inc
xchg
push
jge
in
cld
adc
adc
and
fsts
pop
addr16
push
inc
imul
dec
repnz
lret
sub
mov
mov
fnop
repz
jbe
mov
and
mov
int3
cmp
pop
dec
mov
cmp
or
inc
fstpl
adc
or
cmp
fimuls
in
insb
push
jle
cmpsb
call
and
lret
cwtl
pop
cmp
xor
xor
lahf
test
jmp
sub
in
jb
add
jle
sbbl
or
aas
data16
rcll
mov
jae
mov
sbb
hlt
cmpsl
sub
pop
test
gs
mov
or
loope
mov
out
and
push
mov
jae
dec
sti
push
hlt
xor
hlt
sub
sub
sarl
jno
push
xor
loopne
inc
movsl
pop
mov
ret
movsb
divl
movsb
sub
cmp
nop
jb
sbb
call
cli
push
clc
rol
stc
into
lcall
dec
lcall
cmp
mov
adc
in
mov
imul
lret
mov
xor
jmp
xchg
or
lea
xchg
mov
dec
sbb
ja
inc
xadd
pop
pop
loope
insb
data16
mov
lret
dec
outsl
cmp
pop
out
bound
imul
mov
insl
shlb
ret
push
push
inc
jno
js
std
sub
fimuls
je
test
adc
inc
cmpsl
jno
add
mov
mov
pop
mov
ret
negl
mov
mov
stos
arpl
lods
push
jnp
hlt
dec
adc
mov
jo
push
xor
rclb
bound
clc
das
sbb
fsubr
cmp
addr16
jle
inc
out
sbb
push
movhps
add
decb
add
loopne
xchg
lods
fnstenv
stos
adc
xlat
shrb
push
adc
pop
push
jg
mov
cmp
jo
cli
fucomp
ljmp
xor
mov
and
daa
in
adc
or
into
bound
mov
push
data16
jle
addr16
lds
xchg
jecxz
jnp
sub
aad
mov
out
rorb
daa
scas
cmpsl
dec
in
sbb
mov
pop
filds
pusha
cmpsl
adc
test
xor
or
sub
mov
hlt
inc
sahf
ret
fcoml
mov
add
pop
push
sub
dec
out
jmp
inc
jg
push
xor
inc
push
sub
mov
sbb
lahf
movsl
push
test
insl
insl
jl
es
inc
mov
and
sub
mov
push
and
icebp
jo
fldl
loopne
or
cmp
scas
mov
cs
pop
push
mov
test
mov
push
xchg
sbb
das
in
cmpsb
push
and
xchg
out
shlb
fsubl
fwait
jle
stos
mov
das
jb
push
leave
pop
add
add
xchg
jnp
inc
insb
pop
dec
jae
mov
or
add
jle
pusha
jbe
xchg
shl
ja
xchg
mov
push
jae
xor
repz
sub
pop
scas
pop
jecxz,pt
jle
jbe
jmp
dec
loopne
or
adc
pushf
in
push
imulb
movsb
mov
cmp
adc
sbbl
decb
inc
jmp
fistps
rolb
push
jp
xchg
in
ret
xchg
dec
mov
mov
lds
pop
test
inc
mov
lds
sub
push
or
add
lret
sbbb
mov
push
mov
sub
cmp
ljmp
mov
jl
jg
stc
xchg
dec
xlat
pop
push
in
test
xor
xor
inc
xor
push
loope
ret
xchg
enter
pop
fistps
xchg
and
lcall
test
cli
pop
insl
mov
adc
dec
sbb
push
mov
dec
cld
push
lret
push
daa
inc
rol
ljmp
mov
ret
xor
push
jno
xor
movsl
lret
mov
out
sub
adc
std
shlb
cmp
insb
add
das
cmp
inc
inc
sub
out
inc
lods
leave
inc
insl
cmp
cmpsl
inc
movsl
inc
scas
mov
xchg
adc
faddl
sbb
ljmp
ffreep
sbb
dec
scas
xchg
push
pop
pop
in
sub
lcall
movsb
mov
dec
les
loop
push
imul
orb
cltd
cmpxchg
cwtl
inc
adc
stos
loop
int3
stc
lret
or
jb
sub
xor
loopne
loop
pop
lahf
push
addr16
jae
push
pusha
mov
subb
aad
fs
push
stos
push
lds
cli
int
ret
jnp
cmp
xor
pushf
fmul
push
jle
repz
mov
lds
lret
cmp
adc
add
lods
subl
sub
pop
or
hlt
jg
xchg
cmp
and
shlb
mov
shlb
dec
aaa
dec
lock
and
je
mov
shrb
and
adc
xor
lret
xchg
sub
mov
scas
jae
out
push
lods
mov
dec
and
and
push
push
scas
clc
sbb
or
sub
adc
xor
mov
mov
inc
out
xchg
ret
mov
repz
mov
sub
pop
xchg
mov
push
movsb
or
movl
push
adcb
jae
and
ficompl
xchg
sti
stc
icebp
or
icebp
add
rcr
scas
add
rcr
dec
pop
lahf
arpl
add
pop
sbb
sbb
mov
fldenv
adc
adc
cmp
and
stc
inc
xchg
or
mov
dec
jl
sub
pop
xchg
xchg
les
js
test
mov
mov
repnz
mov
in
loopne
sub
push
das
popf
sti
jg
cmp
jl
xchg
xlat
push
pop
push
cmp
and
les
mov
pusha
dec
sub
in
adc
stos
aam
popa
movsl
out
sbb
mov
cwtl
xor
mov
sub
sub
jnp
ss
xchg
mov
xor
pop
inc
xchg
sbb
and
jae
mov
enter
jae
xchg
dec
sbb
sahf
jl
inc
and
push
cmp
xchg
cmp
mov
ss
mov
imul
cmp
outsb
outsl
push
cmp
adc
mov
cli
imul
mov
arpl
dec
lret
adc
pusha
es
sti
out
push
pop
jne
repnz
outsb
call
mov
mov
int
adc
and
frstor
mov
pop
ret
rorb
cwtl
sub
cmp
gs
push
inc
add
out
mov
jne
add
sub
daa
mov
enter
mov
pop
pop
adc
mov
and
repnz
cmpsl
clc
stos
adc
ja,pt
inc
nop
cmp
js
add
cmp
inc
std
ljmp
scas
jl
stc
inc
dec
in
sti
add
jge
sbb
sub
pop
sbb
mov
sbb
push
sbb
or
mov
je
cli
stos
das
xchg
push
arpl
jmp
mov
movsb
loopne
js
cltd
jbe
movsb
mov
stos
aad
cmpsb
or
repz
lcall
pop
mov
js
xchg
mov
pop
scas
and
pop
adc
jg
movsb
mov
mov
sub
mov
js
cwtl
adc
add
ss
jmp
rolb
cs
repz
aam
loopne
int
fsubl
test
cs
pop
test
test
pusha
call
pop
in
les
movsb
adc
mov
outsb
dec
and
mov
pop
fcmovnbe
das
mov
sub
adc
add
fstpl
fists
adc
sarb
push
xlat
pop
movsb
push
inc
inc
push
ficoml
imul
shr
xchg
in
xlat
aam
es
mov
popfw
mov
or
dec
call
cmpl
sub
stos
test
xor
pop
adc
out
pop
in
das
sbb
mov
nop
xchg
lret
and
push
mov
fwait
test
scas
cmc
cmp
push
add
into
mov
jge
jp
stc
lea
out
iret
cmp
jp
dec
arpl
lahf
pop
jo
adc
sbb
iret
imul
scas
push
scas
adc
in
mov
adc
sbb
fnsave
add
jle
jns
push
cwtl
xchg
out
jae
mov
enter
adc
cmpsb
inc
repnz
or
inc
cmp
xchg
push
or
unpcklps
mov
rcrl
lods
cmp
test
xchg
ret
idivb
xor
sbb
sub
fimull
adc
sbb
add
sarb
and
jecxz
jns
xor
aas
adc
dec
mov
or
pop
sub
lock
lea
xor
sbb
adc
and
push
decb
out
bound
cmp
sub
movsl
fisubrs
sbb
cmpsl
fisubrl
sub
inc
sub
mull
lock
imul
mov
es
in
xor
cli
addl
sbb
or
jb
movsl
jbe
mov
xlat
cmpsb
enter
cmp
jnp
enter
sub
nop
fwait
and
xchg
jb
stos
adc
fisttpl
arpl
jge
test
mulb
adc
ljmp
addr16
aaa
dec
jne
jl
je
mov
jle
cmp
aad
ljmp
dec
roll
push
out
inc
push
ret
dec
bound
pusha
mov
push
mov
ja
sti
ja
test
das
sub
mov
xchg
aam
sbb
leave
add
dec
xchg
les
dec
lret
shl
cmp
int3
push
mov
fiadds
push
sub
inc
mov
sahf
lods
adc
and
idivb
cli
les
dec
ss
jne
fisubrs
fs
fwait
pop
idiv
and
fisttpl
imul
testb
popf
iret
jne
pop
inc
xchg
movsl
pop
dec
xchg
nop
xchg
mov
test
ret
les
xlat
mov
iret
or
repz
frstor
jmp
stos
mov
inc
int3
pushf
inc
aas
outsb
push
fdivrs
psubw
pop
xlat
pop
fnsave
cmpsl
test
sbb
ljmp
testl
mov
scas
sbb
sub
sbb
and
sahf
fldenv
xor
push
xchg
insl
clc
ltr
lods
push
jecxz
imul
sub
jp
push
int3
inc
sbb
push
icebp
mov
mov
or
mov
icebp
rorb
push
jnp
aam
je
shl
inc
xor
mov
inc
xor
lods
ljmp
jbe
mov
pop
sub
jecxz
sbb
out
mov
mov
loope
in
push
cli
mov
pop
fdivs
fstpt
stos
sbb
and
into
push
rclb
sti
popa
popf
xor
mov
dec
in
or
xchg
mov
icebp
push
shll
jle
and
loop
loopne
xchg
dec
lcall
repz
mov
fs
mov
lret
gs
inc
sbb
mov
sbb
sub
movsb
repz
jo
rcrb
outsl
movsl
mov
sbb
push
xor
mov
fsubl
sahf
shll
fistpll
xor
in
xor
scas
jg
sbb
out
repnz
iret
pop
mov
pop
faddp
ret
jmp
or
outsl
adc
andl
ss
sbb
cs
in
inc
cli
in
rorl
orl
pop
fcmove
call
fs
or
pop
scas
inc
rclb
xchg
cltd
sti
xchg
arpl
rol
and
inc
or
aam
and
add
and
adc
arpl
outsb
dec
inc
push
xchg
push
mov
aam
popa
imull
mov
imul
sub
arpl
movsl
fstp
out
xor
dec
push
or
outsb
dec
imul
fisubs
fisubrl
mov
mov
fimull
xchg
xor
fstpt
sbbb
push
addr16
push
inc
mov
rcll
pop
cmp
stos
inc
rdtsc
sbb
and
jl
cmpsb
mov
in
ret
xor
nop
xchg
xor
mov
setg
mov
mov
push
aaa
pop
insl
jecxz
cmp
cmp
inc
mov
push
adc
sahf
cmp
xchg
inc
cmc
push
test
es
push
movsb
add
insl
popf
adc
incb
mov
mov
iret
sub
and
test
rcl
jmp
iret
mov
outsb
sbb
sbb
push
dec
fs
pop
xor
cli
ret
jbe
outsl
push
xor
dec
lahf
cwtl
test
sub
sbb
rcl
mov
fadd
and
fsubs
pop
jmp
inc
xor
js
loopne
adc
push
lea
xchg
fdivs
cmp
insb
mov
mov
mov
insb
mov
lds
and
xchg
stos
sbb
les
cmpb
je
cmp
adc
jo
test
cwtl
dec
cmp
aad
cmpsl
lret
inc
dec
pop
ret
cmp
cmp
mov
ja
push
ret
jae
pop
scas
in
add
movsb
jnp
cmovno
stos
xchg
adc
fstps
jg
loop
xor
scas
mov
push
or
and
pop
or
sub
outsl
pop
or
mov
xor
es
sbb
js
push
and
repz
cmp
adcb
mov
xchg
adc
bound
jae
mov
mov
clc
int
push
addr16
jno
subl
repnz
sub
data16
movsb
inc
sbb
in
nop
lock
je
adc
sub
jl
sahf
fbstp
test
mov
rcrb
rolb
dec
xchg
adc
dec
out
and
js
pop
mov
daa
outsb
fldcw
stc
addr16
mov
push
in
lds
adc
cli
dec
mov
cmc
dec
mov
gs
pop
in
and
stos
mov
stos
into
sub
pop
cmp
jge
push
rcr
repz
stc
xchg
pop
jp
jne
ret
inc
push
nop
xor
jg
icebp
rcl
xor
cli
dec
mov
mov
xor
fs
mov
lahf
fucomip
mov
jns
je
ss
in
jne
and
xor
sbb
mov
or
inc
pop
stos
push
fidivs
adc
outsb
rol
movups
sahf
jg
mov
scas
xchg
js
add
fmuls
xor
aad
idivl
ja
pusha
jmp
push
cmp
pop
xorl
push
or
mov
stc
jge
cmp
sub
fsubrl
push
xchg
sahf
aad
test
es
fbld
clc
xchg
jns
sbb
add
jno
push
test
rcrb
sbb
adc
pop
inc
push
pop
sti
dec
pop
jmp
bound
mov
imul
test
loopne
jb
andl
mov
lods
mov
iret
rep
jp
loop
xchg
repnz
ret
mov
cmp
insl
and
sub
pop
push
xor
fisttpl
jo
cs
pop
decl
fadds
xor
rorb
push
int
dec
sub
xchg
jecxz
mov
adcl
mov
lock
js
and
fidivl
xchg
in
ja
pop
cmp
add
xchg
mov
aam
mov
jecxz
daa
sbb
shlb
out
and
jno
pop
mov
les
ljmp
xor
scas
push
int3
outsl
jbe
mov
test
rorl
and
xor
int3
insb
daa
mov
rolb
sbb
pushf
ss
mov
or
sbb
int
das
pop
jnp
or
hlt
ds
add
rcll
or
cmc
hlt
movsb
adc
mov
inc
jge
adc
pusha
jno
xchg
lods
add
cwtl
sbb
pop
imulb
sbb
jge
icebp
loopne
fcomip
shll
mov
stos
mov
cmp
repz
jle
shll
pop
repz
popf
fst
pop
scas
dec
rcll
adc
xchg
subl
sub
mov
sub
inc
lock
gs
push
adc
add
add
frstor
stc
or
cmp
sub
or
jg
sub
enter
push
arpl
data16
xchg
bound
cld
mov
dec
rclb
add
cmpsb
cmp
dec
in
cmp
sahf
loopne
sub
ss
out
sbbl
pop
in
icebp
roll
push
mov
jnp
or
mov
add
cmpsl
sbb
mov
in
push
out
insl
int
stc
add
outsb
push
mov
fdivrs
std
pop
fs
push
adc
int3
fldenv
xor
out
outsb
pop
lea
xorb
cld
mov
lods
in
int
push
es
add
jl
faddp
out
jns
add
jle
cmp
lahf
mov
sbb
dec
jns
ss
clc
dec
jmp
and
sub
mov
adc
xchg
bound
movsl
xchg
sbb
fnstsw
push
xorb
cmp
push
jns
inc
sbb
mov
xor
inc
rcrb
fisubs
push
mov
lret
mov
xchg
xchg
daa
adc
mov
imul
cmp
bound
dec
xlat
stos
mov
and
hlt
test
dec
jbe
addr16
addr16
xchg
mov
pusha
and
test
pop
inc
jp
mov
icebp
jo
mov
push
out
mov
cltd
or
popa
aaa
aaa
mov
inc
divb
loope
or
cmp
sub
fbld
inc
popf
mov
ret
mov
mov
fstl
out
aaa
add
bnd
or
dec
gs
lahf
pop
leave
mov
jmp
inc
outsb
out
mov
jb
jo
jne
outsl
push
jne
je
test
std
std
das
insl
mov
jg
aam
jl
inc
stc
decl
xchg
fisubs
imul
ja
ficomps
call
sub
mov
lahf
dec
out
dec
pop
xor
xchg
jnp
in
dec
xor
sti
and
pop
mov
jo
gs
testl
jb
aad
int3
in
mov
out
xor
ljmp
int
cwtl
arpl
loope
inc
icebp
pop
ficoml
lds
cmp
test
xchg
pop
fidivl
clc
arpl
fstpt
xchg
data16
rorb
mov
push
push
push
mov
push
inc
cs
push
add
sub
cmp
out
xlat
arpl
mov
pop
test
aam
fmull
sbb
add
pop
cmp
mov
xchg
jecxz
lcall
arpl
out
adc
test
out
orl
cli
loop
data16
sbb
mov
jp
pop
lods
push
pop
into
xor
scas
jne
test
lcall
jo
fstps
inc
mov
adc
add
insl
xchg
xorl
push
push
in
push
aad
adc
repz
stos
movsl
aaa
pop
repnz
sub
jp
call
push
push
xor
cwtl
clc
inc
jle
jmp
fnsave
mov
outsb
inc
lods
js
sahf
mov
fidivl
pop
pop
not
dec
mov
push
pop
fwait
out
divl
dec
in
add
mov
xchg
scas
outsb
push
testl
sbb
movsl
inc
insl
movsl
shrl
cmp
pop
and
inc
cmpsb
lock
decl
je
mov
lods
fwait
or
dec
add
sti
inc
mov
sbb
push
xor
jb
fs
ss
jb
and
push
out
out
lret
pusha
jno
mov
mov
jecxz
stos
or
pop
xchg
push
sub
and
movsb
icebp
stos
lret
jmp
jns
addr16
jne
ljmp
jae
movsl
push
adc
dec
rcr
dec
and
iret
sti
mov
fmull
popf
mov
pop
inc
out
xchg
jae
sbb
cld
push
cwtl
mov
test
in
mov
in
push
dec
pop
scas
push
outsl
push
fcmovnbe
add
arpl
xor
mov
sarl
or
dec
popf
cltd
fisttpl
mov
mov
xchg
std
sti
loopne
loope
push
daa
out
jae
ret
shrl
repz
pop
ror
cmp
imul
ret
ja
pop
test
push
rcll
into
stos
popa
inc
mov
inc
clc
lahf
add
cltd
mov
push
adc
nop
pushf
popf
xchg
lea
out
mov
xor
fldl
lahf
addr16
mov
loope
mov
jecxz
sar
inc
mulb
sbb
subb
cltd
clc
cltd
mov
jmp
repnz
iret
das
or
dec
sub
mov
je
xor
movsb
push
pop
xlat
js
adc
ljmp
cmc
not
lods
loopne,pn
bound
inc
inc
enter
jl
push
push
pusha
fwait
negb
int3
repnz
test
add
insb
outsb
std
inc
pop
sbb
jbe
cmp
sarl
pop
loope
mov
cs
mov
jo
cmp
add
aam
enter
adc
stos
repnz
sarb
test
xchg
jl
jge
imul
rolb
cmp
mov
jns
rorb
fsubr
mov
lcall
xlat
je
pop
test
mov
add
mov
mov
popf
cmpsb
cmp
fs
popa
test
imul
cmpsb
xchg
dec
push
or
cmc
icebp
fs
fstps
pop
mov
enter
add
pop
fcoms
int
or
loope
jmp
cmpsb
dec
icebp
in
xor
add
pop
and
jno
jb
andb
cli
push
scas
ret
popa
or
lahf
xchg
hlt
iret
inc
lret
filds
loope
jl
lea
adc
into
out
cmpsb
xchg
mov
xchg
mov
push
out
arpl
or
or
mov
aam
pop
sbb
mov
repz
loopne
inc
jno
in
imul
aad
shl
jns
mov
dec
inc
xchg
lods
add
dec
cld
or
mov
int3
mov
dec
insb
xchg
dec
mov
lret
xchg
sbb
jb
pmulhw
jb
es
jnp
inc
sub
xor
sbb
push
andb
mov
cmp
pop
inc
cmc
fisubl
iret
adc
sub
out
sbb
call
adc
add
and
mov
add
addr16
inc
rcrb
sub
jp
jnp
scas
popf
mov
sub
hlt
jmp
ds
pop
lds
stos
arpl
xor
xchg
push
or
pop
jo
enter
aas
add
mov
sub
nop
pop
push
mov
add
fstpt
inc
adc
mov
push
inc
adc
loop
test
aad
pop
cs
mov
xchg
mov
and
jb
xchg
jno
imul
cwtl
push
sbb
cmp
lahf
andb
bound
inc
addr16
sti
cmp
push
ficoml
add
dec
rcll
inc
pop
mov
mov
sbb
push
shrl
mov
lahf
cltd
pop
or
out
pop
mov
testb
aas
outsb
pop
adc
xor
pop
cmc
ljmp
fucomp
nop
in
sbb
or
inc
or
mov
xchg
adc
fnstenv
cmc
fwait
xchg
or
adc
xor
dec
mov
dec
aad
mov
aas
mov
xor
shl
fisubl
insl
lea
sbb
push
xchg
sbb
xor
sti
pusha
mov
inc
insl
dec
ljmp
icebp
adc
mov
push
std
shlb
jb
lret
daa
dec
mov
fwait
leave
mov
andps
imull
jb
aas
icebp
aaa
push
icebp
and
lret
mov
pop
das
jne
or
iret
movsl
jp
pop
dec
and
stos
jp
arpl
negl
pusha
adc
push
pop
bound
fnstcw
jmp
loope
dec
lret
sbb
mov
pop
mov
pop
ljmp
jl
out
out
insb
pop
and
in
push
push
add
fdivl
sbb
in
pop
pushf
xchg
dec
xor
add
arpl
iret
icebp
ja
imul
sbb
in
sbb
out
mov
jmp
push
aas
push
mov
sub
or
std
xor
mov
cmp
test
jo
sbb
xchg
cmc
mov
inc
andb
jae
adc
ja
jp
sbb
ja
test
add
addr16
ds
jno
gs
test
xchg
mov
dec
fcomps
inc
jae
test
mov
lcall
sbb
das
cmpsb
inc
inc
rcll
inc
jnp
call
jecxz
insl
shll
cmpsl
imul
pop
cmp
jg
adc
push
cmp
aaa
push
mov
mov
inc
adc
fidivl
mov
jbe
push
fcomi
push
jp
mov
pop
das
jecxz
mov
cmp
cli
dec
pop
jno
outsb
out
fucomp
mov
daa
movsb
sub
xor
sti
lahf
int
dec
cmpsl
sbb
test
mov
out
fsubl
cld
ljmp
add
sbb
lcall
dec
jg
add
mov
and
mov
inc
test
adcb
jp
xor
dec
cmpsb
popa
add
fidivl
ret
fsubs
arpl
cwtl
in
lea
fst
fidivl
out
mov
into
mov
jl
sahf
iret
aam
ror
adc
and
movsl
in
and
pushf
mov
in
lock
fyl2xp1
clc
in
mov
and
sbb
aam
jne
mov
ljmp
pop
adc
add
mov
popf
cmpsb
into
sbb
mov
jmp
xchg
cltd
adc
jbe
testb
jbe
mov
mov
scas
in
dec
dec
pop
scas
in
in
sub
lret
stc
mov
dec
xchg
leave
decb
dec
paddd
mov
inc
lcall
inc
sub
and
jp
jg
js
popf
mov
sub
and
mov
mov
jp
mov
ljmp
mov
push
push
jl
xor
ret
out
push
adc
stos
mov
imul
jae
jecxz
lret
dec
mov
out
inc
inc
xor
dec
shll
fdivrs
push
call
xor
aas
cwtl
stos
mul
add
call
test
xchg
in
stos
dec
sub
mov
mov
jo
test
aaa
sub
xor
outsb
sbb
in
stc
jmp
scas
pop
jne
and
pop
jl
cli
pop
imul
gs
insl
repnz
mov
jae
mull
jmp
and
push
push
arpl
and
aas
sub
or
cmp
js
shlb
cmp
mov
psrlq
or
mov
pop
psubusb
adc
jp
cmp
sbb
pop
leave
loope
ret
mov
fnstsw
xor
out
mov
ds
test
int
inc
subps
jmp
rclb
push
out
jne
push
mov
idivl
dec
shlb
sahf
cmpsb
aad
repnz
pop
mov
std
mov
leave
mov
dec
jmp
mov
lret
scas
std
out
inc
adc
arpl
insb
dec
pop
leave
mov
xchg
adc
pop
fldenv
fs
xor
fisubrs
sub
cwtl
dec
adc
push
fnstenv
mov
jl
xor
mov
nop
sub
xchg
xor
dec
push
adc
lods
push
ljmp
mov
mov
mov
inc
fsubr
arpl
outsl
pop
push
dec
or
and
xor
cltd
mov
stos
pop
lock
imul
push
pushf
mov
xor
loop
sub
jmp
aad
ss
mov
sbb
jle
ficomps
shll
in
dec
and
add
add
not
pop
mov
push
xchg
test
lcall
pop
test
daa
mov
push
inc
in
lock
pop
fldt
and
xor
insl
cmpsb
sbb
popf
xchg
stos
clc
jae
loop
pushf
mov
and
ret
cmp
mov
and
movsl
inc
push
inc
jns
bound
mov
or
mov
inc
es
xchg
mov
cmp
sbb
inc
cmc
cmpsb
insl
leave
or
shll
int
adc
pop
ljmp
fistl
xchg
adc
ds
sbb
gs
pop
sub
push
inc
dec
sahf
dec
cmp
movsl
xchg
aam
xchg
outsb
cmpsb
daa
mov
pop
add
dec
push
inc
inc
cld
shll
or
xchg
mov
call
xchg
jno
mov
leave
leave
xor
mov
out
jbe
rcll
jp
mov
mov
loope
and
rcrb
sub
mov
adc
loop
sub
mov
mov
rcrb
add
notl
xor
xor
inc
or
xchg
push
pop
xchg
push
int
jns
sub
stc
xchg
popf
adc
sbb
add
xchg
lret
lret
add
jl
sub
fidivrl
push
dec
std
mov
fwait
loop
mov
mov
dec
add
cmp
xchg
loope
pop
add
out
cmp
enter
mov
lret
mov
nop
cmpsl
adc
dec
int3
jns
rorl
bswap
in
xor
mov
int3
lods
js
lret
mov
xchg
push
push
add
jle
aaa
mov
insl
rclb
shl
pusha
jl
or
pop
int3
bound
mov
cmpsl
cmpxchg
mov
out
in
mov
enter
divb
bound
cmpsl
dec
out
ja
cltd
cmpsl
aam
mov
mov
repz
test
arpl
adc
mov
insl
neg
xchg
pushf
jns
mov
fistpl
mov
fwait
jl
sub
mov
fdivrs
push
mov
add
out
loop
pop
fs
negl
mov
jg
dec
aam
fnstenv
es
mov
sbbb
mov
or
xor
xor
xor
xor
testl
xchg
add
mov
xchg
test
es
inc
fsubl
cmc
inc
sub
outsl
nop
test
mov
arpl
sub
lahf
cwtl
repz
xchg
ljmp
adc
ja
mov
filds
aaa
xor
rcl
add
mov
adc
xor
stos
cmp
sbb
cmc
mov
or
sbb
mov
adc
push
jno
sub
jmp
das
push
fstpl
mov
jae
cmp
loopne
sub
jnp
addb
dec
iret
sbb
sub
xor
cmp
push
push
jmp
leave
add
push
shlb
pop
dec
pop
push
xchg
cmp
add
decl
dec
sub
mov
test
aas
or
mov
and
das
push
fsubl
mov
jno
mov
or
cs
enter
aad
pop
gs
add
pop
gs
mov
shlb
dec
out
fnstenv
xorl
gs
mov
dec
mov
cld
lret
test
idiv
jns
sbbl
out
fpatan
sub
push
cld
jo
jnp
fidivrs
cmp
xchg
in
ds
mov
jg
push
ror
scas
les
add
jecxz
fcoms
adc
subl
rcrb
loop
or
out
repnz
xchg
shlb
push
fsubrs
stc
xchg
inc
mov
mov
cmpsb
mov
cld
adc
sahf
jle
or
adc
in
mov
xchg
stos
lods
jecxz
inc
shlb
sub
gs
mov
cmp
lods
xor
sbb
sub
ss
sbb
cmp
xchg
cmp
inc
aaa
dec
dec
sbb
leave
push
mov
lahf
push
movsl
jg
ds
lods
add
jno
out
insl
mov
jmp
jae
mov
mov
pop
mov
lcall
not
push
fldl
jp
cli
pop
std
and
or
ficompl
mov
mov
je
ljmp
pop
roll
jo
imul
insl
cli
push
out
outsl
test
fistl
mov
xor
std
adc
cmp
imul
add
xchg
cmp
repz
or
shrl
pop
js
popa
cmp
jmp
cmpsb
in
jl
stos
popa
xor
test
cld
jecxz
or
insb
mov
push
adc
sarb
and
inc
dec
iret
sbb
or
pop
fdivr
fimull
sub
jb
mov
push
cs
or
ja
aaa
dec
cmp
sbb
inc
aam
aaa
cmp
andb
imul
add
mov
and
out
ret
or
int
or
mov
dec
lret
inc
jge
fstl
dec
mov
dec
push
jmp
mov
and
pop
mov
mov
inc
sti
and
xor
pop
add
stc
adc
sbb
jge
dec
je
xor
pop
jb
pop
inc
xchg
xchg
dec
das
push
cmp
fwait
add
cmp
xlat
push
pop
movlhps
ret
sbb
mov
loop
cmp
add
xlat
mov
mov
cmc
daa
divl
cmp
inc
mov
fwait
lret
sub
push
stos
lahf
jle
push
and
cld
addb
outsl
sbb
outsb
fstpt
stc
inc
mov
mov
mov
jno
inc
cltd
ret
mov
sbb
ss
inc
cmp
rolb
enter
push
andl
lret
hlt
sub
ja
xor
push
in
sub
addr16
push
sub
inc
repnz
sbb
sub
imul
sbb
inc
mov
mov
aad
push
loop
dec
mov
mov
xorb
fistpll
icebp
test
sarl
xchg
inc
subb
mov
sub
enter
sbb
shlb
mov
outsl
inc
inc
imul
aad
mov
and
inc
les
sbbl
mov
call
add
push
pop
imul
mov
popl
xchg
fidivrs
movsl
repnz
mov
mov
insb
cmp
arpl
inc
jg
out
sub
push
sub
lock
push
mov
xchg
mov
mov
pop
push
mov
jne
mov
addr16
cld
mov
repnz
dec
cmp
lock
neg
cli
daa
mov
mov
vpsubsw
dec
daa
cmpsb
jg
icebp
add
xor
inc
cli
sahf
insb
ret
popf
push
jae
arpl
scas
stc
stos
mov
je
dec
lods
jo
jb
lods
fadd
sbb
push
int3
mov
addl
mov
gs
and
in
sbbb
loope
xlat
push
shlb
pop
fs
loopne
sub
mov
pop
sub
push
xor
jmp
hlt
sub
sar
mov
mov
fsts
adc
mov
lcall
xchg
das
xchg
mov
shr
pop
xor
shlb
cmp
xchg
movsl
adc
pop
dec
jb
dec
mov
fs
loop
sub
in
jecxz
fwait
in
inc
jp
add
jns
hlt
mov
mov
mov
push
enter
adc
test
cmpl
push
or
mov
out
push
xchg
hlt
jno
gs
and
dec
or
les
stos
sub
add
cwtl
test
adcl
test
and
sahf
popf
subl
cmpsl
addl
in
mov
pop
dec
dec
mov
sbb
mov
sbb
mov
jp
mov
jns
das
pop
mov
sub
mov
pop
dec
sub
pusha
stos
xor
push
arpl
and
ss
jmp
insl
mov
xor
mov
sbb
xor
jne
jo
or
jmp
divb
cmpsb
cmp
cmpsl
sbb
jmp
push
pop
in
popa
notb
sbb
repnz
inc
mov
push
or
bound
gs
xor
fiaddl
sub
or
mov
xchg
popa
jbe
adc
addr16
cmp
cmp
lods
fisttps
stos
das
cli
movsl
adc
xchg
movsb
dec
lods
popf
test
das
fs
lret
repnz
outsl
movsl
mov
hlt
xchg
sbb
mov
pop
aaa
test
lds
xor
inc
xchg
outsl
test
xor
movsl
xchg
jo
inc
pop
cmc
cmovne
push
cmc
pusha
jae
jnp
ljmp
imul
je
push
hlt
adc
push
mov
adc
add
sbb
jge
imulb
add
sub
lret
jb
mov
test
push
mov
pop
les
cmp
stos
test
jae
test
mov
std
dec
ret
jge
or
cmc
adc
out
clc
imul
hlt
aas
add
incl
jecxz
es
xor
test
pop
xchg
bound
ret
mov
inc
subb
cmp
sub
dec
lret
jae
out
adc
sti
xlat
loop
in
add
add
push
push
aaa
or
xchg
call
xor
mov
out
mov
call
out
mov
mov
testb
js
scas
mov
jne
dec
in
sbb
adc
je
shl
xchg
or
pop
aad
inc
jle
lock
mov
push
sarl
pop
inc
shrl
stos
pop
ljmp
add
mov
cs
mov
mov
pop
dec
aas
into
repz
mov
in
test
and
iret
bound
pop
stos
inc
enter
scas
loopne
sbb
das
shl
sbb
ss
xchg
stos
fiaddl
sbb
jge
pop
andb
push
jno
push
call
aam
or
sub
mov
and
sub
bound
cmc
out
mov
dec
sbb
aaa
jp
jmp
test
pop
mov
xchg
iret
lds
mov
xor
mov
adc
or
cmp
mov
xor
pusha
cs
push
and
gs
in
ret
jb
cmpsb
xchg
jnp
xchg
lods
xor
jge
mov
enter
pushf
out
loop
outsl
fimull
iret
decl
xorb
pop
jecxz
je
repz
mov
xchg
dec
xor
mov
xchg
imul
inc
mov
inc
push
mov
cmp
mov
ficoml
out
scas
cmp
popa
xor
inc
scas
clc
pop
inc
xchg
dec
stos
and
mov
xchg
lds
pop
inc
hlt
adc
pop
adc
mov
jno
and
jbe
xchg
outsl
in
gs
rorb
sub
aam
dec
outsb
repz
fdivrs
aas
lret
sbb
test
cmpb
pxor
jno
ljmp
adc
movsb
hlt
pusha
inc
mov
jnp
data16
adc
mov
ljmp
sub
mov
adc
xchg
dec
lock
pop
or
inc
sbb
xor
ret
push
inc
movsb
push
leave
add
clc
wrmsr
stos
jbe
mov
sub
xchg
push
cmp
pop
mov
movsl
lcall
xor
in
inc
es
cmp
mov
jg
push
sub
or
and
addl
mov
andb
outsl
repnz
cmp
mov
add
jo
test
mov
sub
jbe
cs
iret
mov
dec
jne
out
xor
and
pop
mov
pop
cmp
add
mov
fs
pminub
push
mov
or
in
nop
dec
mov
jmp
pop
mov
cli
push
add
idivb
push
lahf
dec
add
and
incb
fwait
sub
cmp
mov
mov
in
xchg
xchg
int
xor
pusha
sub
imul
nop
addr16
push
sub
adcl
lcall
xor
xor
js
xchg
push
fstps
inc
stos
ret
je
rcrb
pop
ret
mov
arpl
jge
xor
mov
mov
or
pop
jp
jge
test
call
les
jge
jae
mov
hlt
das
jae
xchg
push
xlat
stos
out
loop
push
dec
sub
cs
movsb
cmp
jo
mov
popf
jno
rolb
jecxz
dec
lret
data16
xor
cmp
xor
add
dec
xchg
xor
sbb
xchg
cmpsl
push
out
inc
cmp
dec
push
or
or
fsubrl
jmp
push
dec
test
adcb
mov
mov
out
mov
insb
sahf
in
xchg
sub
jno
sbb
outsl
cwtl
adc
inc
pop
ficoms
pop
shlb
push
push
cmc
gs
jle
jp
xor
fs
sub
jecxz
push
ds
stc
test
stc
imul
jnp
scas
or
pop
sbb
mov
or
fstpl
jge
es
sub
mov
add
aad
xorb
sub
test
xor
pop
pop
pushf
push
mov
xchg
fisttpl
mov
pop
das
nop
xor
mov
sub
xchg
sbb
pop
inc
insl
outsb
out
negl
adc
leave
xchg
xchg
lret
pop
push
dec
push
dec
aam
sbb
jae
stos
stos
insb
xchg
loopne
xor
nop
dec
dec
fwait
stos
dec
int3
adc
imul
inc
adc
aaa
iret
mov
in
addr16
pop
leave
stc
loope
add
fstpt
xor
sti
into
push
xlat
xlat
pop
jno
pushf
xchg
fmulp
test
test
mov
dec
xor
cmpb
getsec
jb
jb
loop
pop
mov
cmp
dec
fnsave
idiv
fs
xor
sbb
push
adc
push
cwtl
rorb
lods
jmp
enter
mov
and
sub
fdivrp
lret
mov
xchg
in
jl
pop
jle
xor
fnstsw
gs
ljmp
sub
xchg
daa
imul
repnz
xor
lds
mov
pop
xchg
shlb
mov
lahf
or
adc
lcall
inc
jmp
sub
push
pushf
shlb
lret
jbe
mov
cld
mov
rcrb
lea
mov
xchg
dec
cs
shrl
popa
xor
xchg
test
cld
xor
push
add
pop
jl
and
ljmp
adc
push
mov
mov
push
gs
mov
iret
pop
xor
add
sbb
aaa
inc
fwait
dec
sub
bound
outsl
bswap
dec
mov
out
aas
dec
mov
repnz
test
pop
arpl
imul
das
mov
jae
dec
hlt
mov
insb
and
xchg
fisubs
xchg
cld
icebp
mov
aam
mov
fstl
shrb
pusha
push
jmp
sbb
sbb
sarl
test
adc
and
lahf
stos
cmpl
inc
mov
and
mov
sbb
push
xchg
faddl
lods
aas
testb
mov
sarl
aaa
mov
sub
out
sbb
add
lret
mov
fbld
add
jl
jo
xchg
inc
int3
or
stc
mov
dec
stc
mov
cmp
lcall
clc
add
fnsave
cmp
sahf
sbb
and
xchg
xchg
repnz
mov
icebp
sbb
dec
cmp
and
pop
and
daa
rcll
fisubl
test
stc
cmpb
pop
dec
pop
aam
or
adc
sbb
stc
mov
dec
adc
sub
mov
xor
andl
pop
mov
xchg
cmpsl
jno
imulb
and
mov
pop
inc
sub
out
xor
pop
add
pop
pop
xchg
call
stc
add
lret
push
stc
out
fisubs
pop
pop
xchg
les
les
cmp
dec
xchg
push
jbe
push
ret
pusha
mov
fsubrl
mov
pop
popf
mov
and
push
arpl
mov
lods
mov
pushf
xor
jp
push
sbb
iret
std
mov
push
cld
mov
push
cmpl
outsb
pop
cmpsl
loope
or
mov
jg
sbb
pop
lret
pop
repz
or
mov
mov
or
mov
imul
pop
shlb
push
push
mov
and
lea
xchg
test
sbb
cmovno
cmc
fs
mov
lcall
xchg
out
dec
in
push
inc
jnp
loop
pusha
addr16
out
jne
data16
push
iret
ljmp
and
add
cmp
push
iret
push
cmp
sti
and
pop
push
fcomip
clc
popf
stos
mov
imul
jge
lret
out
and
mov
mov
movsb
test
dec
jge
lods
arpl
dec
lahf
inc
mov
ret
mov
pop
mov
icebp
push
in
and
sbb
adc
mov
cltd
aas
xorl
ljmp
push
adcb
mov
in
jmp
js
pop
out
js
test
insl
lds
test
mov
sub
repnz
pop
test
aas
dec
lea
inc
iret
rclb
pop
hlt
shll
shlb
fdivrs
rolb
pop
sbb
inc
imul
sahf
mov
loop
test
lods
icebp
daa
pop
inc
fwait
sti
out
pop
and
and
or
push
dec
mov
inc
insb
popf
pushl
mov
inc
adc
pop
or
lret
std
cmp
sub
clc
push
repz
lods
lahf
lods
jbe
sar
jno
pop
xor
dec
add
jp
cmp
push
orb
or
andb
rorl
int3
adc
pop
outsl
adc
and
adc
cmp
inc
or
pushf
push
mov
pop
test
lret
in
int
leave
cmp
dec
push
sub
lea
pop
sub
mov
ljmp
stc
addb
pop
js
pop
aad
or
xchg
movsb
rcll
pop
push
in
iret
aad
nop
jno
adc
cmp
xchg
adc
arpl
das
xor
mov
jns
jp
fistps
push
int
xchg
lcall
jno
outsl
lahf
shrl
shll
push
cwtl
add
js
movsb
jge
in
fnstsw
cmpsb
test
push
mov
enter
aaa
jp
inc
add
sbb
ds
fsubs
ret
mov
sti
and
add
sarb
cmp
rol
push
test
pop
call
dec
sub
inc
bound
xchg
js
add
mov
and
xchg
lret
int3
jns
mov
sbb
sub
fnstcw
push
dec
or
cmp
test
daa
push
sub
dec
out
xchg
les
sbb
pop
filds
stos
sbb
aam
data16
mov
enter
repnz
je
add
mov
andl
lret
leave
fs
sub
and
sti
add
inc
pop
shl
daa
int3
adc
cmp
cld
int
sub
or
cltd
insb
sbb
sbb
cwtl
pmaxsw
mov
mov
mov
cmp
xchg
sti
jecxz
pop
mov
or
jnp
and
push
bound
mov
lock
das
das
xor
shrb
mov
cmp
in
mov
cwtl
out
fdivrl
in
nop
xchg
jmp
mov
imul
push
aaa
inc
cltd
into
or
push
inc
div
mov
mov
fbstp
popa
jg
cs
stos
and
and
scas
daa
pop
mov
data16
out
mov
rcrl
shl
push
fisubl
add
out
mov
mov
popa
jle
pop
cmp
shlb
xchg
ss
add
test
mov
in
call
cmpsl
ds
repnz
mov
pop
or
sbb
xor
fcomi
sbb
push
add
scas
stc
imul
inc
icebp
dec
ljmp
dec
pushf
pushf
adc
hlt
addr16
add
push
mov
outsl
scas
mov
push
push
dec
push
adc
and
outsl
addr16
xlat
call
test
loope
loopne
and
jge
cmp
insl
inc
popa
inc
xchg
test
enter
inc
xlat
xor
xchg
in
cmpsl
pop
and
and
addr16
fwait
pop
jecxz
in
inc
pop
mov
jmp
rol
jo
andl
in
cmp
dec
enter
ds
imul
lahf
std
cmp
cmc
stc
pop
pop
or
shr
leave
push
fidivrs
push
mov
notb
push
cmp
imul
loopne
leave
aad
xor
add
jecxz
lea
in
sbb
addr16
sbb
mov
jo
cld
dec
loope
cmp
lea
jne
mov
sub
xchg
mov
cld
fstpt
mov
aad
jecxz
dec
and
xor
sub
ss
lods
stos
xor
daa
sub
cmp
mov
xchg
mov
stos
jmp
push
test
lret
push
iret
pop
cmp
mov
insb
in
cmpl
mov
ss
outsb
jnp
rcrb
popf
aam
gs
add
daa
push
pop
dec
sub
sub
or
cmpsl
loopne
and
dec
pop
dec
lock
out
aas
and
or
mov
or
pusha
pop
push
test
xchg
cltd
inc
push
movsl
daa
jno
and
xor
pusha
es
push
ret
js
sub
mov
sbbl
arpl
sub
sub
mov
jae
lods
xchg
negl
cmp
jmp
push
sbb
mov
lods
pop
sets
mov
push
jmp
js
sbb
cmpsl
pop
push
mov
push
pop
xor
cld
loope
int
cld
mov
das
add
les
xchg
stc
inc
test
cli
add
les
fwait
mov
inc
pop
sub
mov
jp
insb
mov
and
or
shrl
ret
xchg
adc
leave
or
jbe
test
cmpsb
ss
xchg
mov
pop
hlt
cmp
in
jne
arpl
push
js
mov
lcall
fs
je
jo
or
push
jbe
push
sub
mov
push
or
and
pusha
jb
dec
cmpsb
xor
jo
jmp
inc
out
mov
aas
dec
lret
or
mov
ret
mov
insl
cmc
pop
bound
notl
cli
xor
and
and
add
imul
ficomps
stos
loop
lods
sub
xor
out
xchg
jmp
or
cmp
jl
mov
call
sti
add
icebp
movsl
and
stc
test
jne
movsb
jnp
clc
xchg
out
xchg
inc
mov
pop
or
dec
jo
lods
mov
jne
shll
inc
sub
jae
mov
je
mov
or
scas
das
nop
push
ds
adc
jne
xchg
push
inc
sti
nop
mov
push
mov
stos
ja
lahf
loope
mov
fbstp
out
and
das
inc
cltd
xor
out
adc
loop
pop
mov
icebp
out
push
pop
sahf
insb
dec
cmp
cmp
mov
insl
int3
in
imul
fmul
sbb
jl
loope
fbstp
push
push
jl
shll
jbe
pop
fs
xchg
dec
xorl
sahf
int3
add
clc
jge
sub
scas
and
int3
data16
nop
add
mov
lret
pop
mov
ds
adc
rol
sbb
stos
call
out
addb
xchg
cmc
push
inc
xchg
int3
into
leave
repnz
push
and
flds
lods
cmpsb
aad
in
jl
inc
gs
sub
sbb
pop
pop
dec
pop
xor
xchg
pop
out
inc
or
xchg
rclb
mov
mov
mov
cmc
mov
ss
xlat
loop,pn
inc
dec
cmp
lock
cmp
jb
jl
dec
js
scas
aas
icebp
testl
js
shrb
or
push
or
mov
clc
popf
cltd
pop
je
and
pop
push
shl
das
aam
or
mov
cmpsb
fstpt
sub
outsb
mov
jle
push
jl
mov
lahf
jle
mov
scas
rcl
pop
popa
fnstcw
in
xchg
out
push
push
or
and
fidivl
sbb
cmp
aam
lds
push
cld
psubusw
clc
cs
aas
iret
pop
sbb
mov
and
xor
dec
movsl
scas
mov
iret
fimuls
inc
fcmovnbe
popa
fwait
loop
fists
fcmovne
dec
mov
aas
pop
push
push
sbb
sub
pop
mov
sub
call
push
cwtl
xchg
mov
push
sbb
rcrb
jecxz
leave
rcrl
jp
mov
out
test
mov
pop
ja
lock
mov
mov
sahf
cli
xor
sahf
jp
sbb
stos
mov
ds
loopne
jae
dec
sbbl
subb
mov
std
shlb
push
dec
stc
dec
mov
lods
pop
fisttpll
loop
lahf
add
jge
ja
dec
pop
mov
rclb
xor
cmp
test
fs
adc
testb
andl
das
adc
inc
inc
mov
and
stos
mov
push
testb
cmp
test
jns,pn
pusha
mov
leave
mov
sahf
sarb
push
test
xchg
dec
jnp
test
bound
call
gs
call
out
std
or
daa
and
inc
sarb
aad
mov
mov
xor
jo
call
cmp
js
popa
add
popf
bound
inc
fcompl
sbb
jge
mov
dec
cmp
and
stc
push
dec
jp
bound
jb
pop
xlat
pop
mov
jae
aad
sbb
mov
push
jbe
sahf
pop
push
cmp
movsl
ret
dec
rcl
ficompl
repz
mov
sub
push
cltd
pop
mov
xchg
xor
rorb
mov
mov
xor
push
bound
lds
movb
inc
xchg
fistl
xchg
mov
and
sarb
mov
fs
dec
pop
fs
faddl
mov
and
out
out
mov
mov
out
subb
push
cmc
mov
movsb
mov
pushf
outsb
leave
stos
test
mov
jns
lods
mov
cmp
cld
sub
je
push
ds
xor
or
clc
fiadds
fcomps
outsl
dec
ret
sub
xor
adc
xorl
add
dec
and
js
push
xor
cmp
inc
adcb
jp,pn
push
movsl
xchg
iret
mov
and
mov
or
out
sbb
xor
xchg
sti
ljmp
es
mov
test
sub
loopne
xlat
lods
xor
or
cmpsb
cmp
cmpsb
xor
and
push
mov
inc
inc
cmpsb
or
xor
das
je
inc
add
repz
rorb
xor
adcb
xlat
je
cmp
xchg
and
and
mov
popa
adc
push
insl
leave
jne
out
xor
cmpb
push
sbb
mov
int3
dec
out
cmp
adc
xchg
sbb
repz
push
movsl
xchg
inc
idivl
push
sahf
ret
pop
jecxz
scas
test
mov
int
cmp
gs
montmul
cmpsb
add
jns
xchg
xchg
sahf
xchg
out
or
shlb
out
jl
int3
idivb
lahf
pop
fstpl
add
insl
sbb
adc
push
or
arpl
hlt
adc
loop
mov
mov
in
addr16
jae
popf
dec
jo
sub
lds
pop
fs
xchg
push
clc
popa
repz
push
jbe
mov
shlb
pop
in
add
xor
or
jo
aaa
xor
in
idivl
mov
mov
push
test
cwtl
test
test
mov
lahf
enter
outsl
sarb
ds
divb
sub
out
and
std
repnz
aam
xor
sti
movsl
iret
fs
stos
mov
adc
std
jno
int3
imul
dec
in
jmp
sahf
icebp
sub
in
clc
mov
dec
sbb
popl
pop
fsubrs
push
in
pop
inc
sbb
adc
leave
adc
mov
mov
ja
push
clc
and
push
inc
lahf
imul
sbb
and
insb
fadds
sbb
lods
mov
mov
stos
mov
cmp
fidivrl
pop
jecxz
lods
xchg
pusha
sbb
imul
cmp
cmp
cltd
cmc
lret
push
adc
jb
in
in
jle
and
xchg
mov
add
jne
add
xchg
and
cs
xchg
je
or
jb
adc
icebp
push
adcb
sub
or
push
pop
xor
fcomps
sti
jmp
loope
jmp
and
mov
shlb
jecxz
imul
mov
fldt
fcomp
sahf
jno
sarl
outsb
cmc
add
out
add
insb
adc
mov
lods
imul
in
cld
jns
ret
incl
scas
pop
and
out
and
jl
flds
dec
sbb
mov
lret
sbb
test
add
jg
cmpsb
stos
mov
fs
mov
push
mov
ret
cmpsl
sub
mov
pop
add
or
add
hlt
imul
cmc
in
pop
lahf
jno
scas
sbb
aas
xchg
or
fsubr
loope
adc
mov
sbb
pop
sti
arpl
es
mov
in
ret
popf
push
outsb
inc
mov
sub
call
cmp
test
mov
cmp
fldenv
push
iret
add
mov
and
cld
fwait
stc
icebp
bound
jle
inc
add
enter
mov
sbb
fcomps
adc
fisttpl
aam
sub
dec
mov
inc
pop
xchg
and
scas
cmp
repnz
push
mov
nop
shll
repnz
push
mov
out
mov
shlb
in
and
mov
aam
dec
sti
aam
push
mov
ret
mov
insl
mov
mov
cmp
jecxz
mov
scas
pop
xchg
sbb
call
sti
jg
loope
fs
ret
mov
jae
and
pop
sbb
sbb
aam
into
inc
add
jbe
mov
cltd
mov
scas
inc
or
xchg
sahf
dec
lcall
xlat
dec
jl
mov
dec
xchg
cmpsl
into
xlat
data16
adc
lret
outsb
in
nop
leave
fcoml
xchg
mov
mov
mov
into
push
repz
mov
rcll
sub
push
mov
jb
in
pop
out
popf
inc
pop
or
mov
iret
cmp
cmpl
mov
jo
dec
ljmp
lret
and
andl
out
push
dec
xchg
dec
mov
imul
mov
mov
andb
data16
hlt
fldt
adc
roll
push
lret
or
sub
push
insb
sbb
sub
dec
jb
cld
popa
push
ja
push
push
sub
pop
sti
in
cmp
nop
movsb
ret
bound
push
out
ja
xchg
dec
cmp
jo
mov
ja
inc
sub
js
xchg
imul
stc
jne
test
xor
popa
jno
inc
out
mov
lret
ljmp
fstp
mov
mov
or
gs
xchg
popf
xor
aas
hlt
aam
push
dec
sbb
and
lea
and
iret
or
lcall
dec
mov
xchg
in
cmpsl
lods
xlat
push
ja
pusha
fwait
sbb
mov
data16
iret
ret
stos
out
pop
jbe
adc
movsl
test
inc
jnp
out
pop
jmp
inc
lock
pop
xchg
iret
cmp
or
rcrb
cmp
inc
sbb
mov
imul
cmp
test
test
sti
add
push
xor
idivb
pop
in
push
movsl
mov
decb
test
ja
mov
jae
jbe
inc
stos
iret
or
mov
jecxz
into
add
adc
jns
sbb
lods
lds
in
cmp
push
aam
sub
dec
add
jnp
pop
inc
lock
pusha
nop
and
pop
jo
insb
pushf
dec
iret
mov
jae
mov
mov
cwtl
push
lret
sbb
add
insb
cmc
jle
hlt
clc
pop
push
jecxz
xchg
movsb
push
int
add
push
mov
into
sahf
or
xchg
sti
aas
adc
in
fldenv
jnp
pop
lock
mov
cvtps2pd
int
jbe
jno
out
mov
sub
jns
pop
rdtsc
adc
xlat
mov
ret
pop
insl
mov
lods
lea
lock
pop
dec
mov
rcrb
push
sub
adc
xchg
push
sub
jecxz
xor
ja
popl
fcoml
add
xor
xchg
cwtl
sbb
cmp
mov
xchg
lahf
out
mov
leave
mov
clc
sbb
je
jge
rol
xchg
aam
mov
fadds
mov
add
dec
fucom
jmp
adcl
imul
inc
in
xor
push
ret
adc
jns
pop
stos
mov
scas
adc
shl
das
sub
hlt
fidivl
fdivs
jmp
mov
sbb
push
cmp
cmpl
sbb
mov
pop
pusha
testl
xchg
push
dec
mov
and
pop
mov
mov
xorb
sti
or
jae
mov
bound
lahf
push
lock
ja
cltd
insl
add
bound
push
adc
iret
or
xor
sbb
dec
cwtl
xor
lret
dec
sub
dec
cltd
out
cmp
xor
mov
fdivr
sub
fisubrs
insl
push
pushf
or
push
mov
adc
notl
pusha
jne
sti
insl
arpl
outsb
and
aaa
pop
je
ret
push
cwtl
testl
lea
jo
shll
mov
ds
dec
rcrb
cltd
outsl
sti
loopne
mov
ljmp
js
dec
mov
mov
bound
test
adc
cmp
add
ljmp
adc
out
xor
addr16
cmc
cmp
sbb
pop
push
xchg
je
dec
andb
ja
pop
push
and
fisubrl
ds
xchg
fisubrl
out
bound
mov
or
js
add
mov
cmp
inc
xchg
and
or
dec
loop
jno
inc
sar
cwtl
mov
mov
out
lods
adc
fisubrs
in
mov
push
or
push
outsb
xor
leave
fwait
lods
xor
cmp
enter
jb
dec
push
xchg
test
test
pop
or
inc
jle
leave
insl
mov
push
je
divb
clc
xchg
int3
xchg
js
inc
pop
mov
in
iret
into
add
dec
xor
in
add
and
mov
xor
adc
push
mov
push
adc
and
stos
pop
add
loope
xchg
xchg
push
out
pop
push
mov
nop
jl
xchg
aas
jnp
and
fisubrs
jbe
out
xchg
bnd
mov
sbb
movsb
xchg
dec
xor
pop
rol
sub
ss
mov
mov
in
hlt
testb
mov
xor
das
lea
mov
cmp
aas
jp
xchg
and
mov
and
incb
xchg
jae
dec
scas
inc
aam
leave
jge
push
divl
jle
xlat
add
loope
lahf
jle
xchg
mov
mov
iret
sahf
cmp
jns
daa
sub
lcall
pusha
fcoml
jbe,pn
pop
rcll
push
fdivs
sbb
add
roll
jle
mov
fistpll
xchg
int
xor
mov
adc
dec
sbb
nop
ret
fucom
mov
ljmp
adc
cmp
popf
scas
xchg
das
push
jae
lret
cmp
js
cld
rcrl
in
mulb
pop
pop
ss
mov
movsb
movsl
mov
pop
movsb
ja
pop
push
ljmp
and
cli
push
iret
rorl
cmp
aaa
dec
ret
sub
je
fsubr
add
inc
sbb
pop
lea
cmp
sub
xchg
xchg
in
add
fmull
aaa
lea
push
pop
pop
es
icebp
xchg
mov
jg
xchg
add
mov
pop
jae
xchg
inc
stos
mov
int
loope
movsl
inc
push
lahf
in
push
cmp
enter
scas
or
and
test
add
xor
mov
idivb
fwait
test
jb
jbe
inc
mov
push
fyl2x
stc
outsb
fstl
sbb
fisubl
fildll
fs
test
xchg
fsubr
movq
cmp
cmpsb
mov
push
movsl
cmp
xchg
insl
adc
nop
ret
sub
std
leave
aaa
or
mov
push
dec
pusha
cmp
or
out
loopne
daa
dec
push
out
dec
movsb
dec
insb
jbe
xchg
js
inc
jo
xchg
mov
cltd
cmp
in
in
aas
inc
add
lods
mov
sub
fmuls
mov
jecxz
push
hlt
jbe
mov
rorb
inc
cmpl
arpl
pusha
mov
sarl
out
cmp
sahf
xchg
loop
adc
cmp
leave
adc
jne
pop
loopne
mov
mov
int3
adcl
rorl
mov
add
jbe
shl
popf
imul
pop
and
jecxz
insb
fbld
push
xor
mov
popf
xor
pop
loop
mov
xchg
or
mov
xor
xchg
dec
leave
divl
icebp
hlt
dec
push
xor
xchg
repz
enter
add
xchg
add
fs
incb
mov
in
fsts
push
mov
fwait
xor
sar
test
arpl
imul
std
pusha
in
dec
add
add
fmul
daa
mov
test
or
cmc
jl
hlt
rclb
xor
in
xchg
add
imul
add
jbe
xchg
sub
mov
xchg
das
shlb
cmp
adc
dec
and
test
lds
push
xlat
mov
int3
stos
cmp
gs
adc
mov
mov
mov
xchg
jo
mov
movsb
xchg
jnp
inc
xchg
xor
jo
inc
sbb
xor
test
stos
mov
jecxz
scas
pop
adc
and
sbb
pop
inc
je
pop
pop
adc
jnp
out
jb
sti
adc
jns
and
leave
inc
adc
loopne
clc
test
stc
js
dec
daa
cltd
dec
pushf
dec
pop
xor
out
or
in
xchg
shr
int
sub
insl
nop
xorl
cmp
scas
jb
mov
inc
in
xor
jmp
adcb
inc
sbb
dec
shrl
push
sub
outsb
sbb
fsubs
or
mov
insb
das
cli
push
fwait
jcxz
or
jge
ja
jb
xor
xchg
pop
push
xchg
lret
jecxz
popl
pop
mov
xor
out
call
adc
xor
dec
mov
aad
sub
sbb
mov
imul
jp
xchg
lea
mov
mov
popa
jns
mov
fsubs
andb
cltd
jno
pop
mov
in
cmp
sbb
mov
rclb
dec
fsubrl
aad
sub
inc
xchg
sbb
push
loope
cmpb
stc
mov
fsubrp
dec
mov
loope
add
inc
jne
outsb
scas
loopne
pop
jle
nop
adc
or
je
out
jg
adc
xchg
add
xor
out
test
xchg
sbb
add
mov
sbb
aaa
jl
in
adc
mov
mov
ficoml
adc
xor
dec
mov
rolb
negb
dec
mov
inc
xchg
repz
add
ljmp
adc
sbb
and
aaa
inc
dec
ret
push
xchg
xor
push
dec
and
into
or
mov
cmpsl
mov
inc
push
xor
mov
mov
mov
clc
sti
mov
xor
jecxz
idivb
and
adc
movsl
add
repz
imul
adc
mov
cltd
xchg
sub
mov
das
xchg
pushf
les
aam
test
and
popa
sbb
mov
mov
add
popf
sub
sahf
pusha
xor
xchg
sub
pop
addr16
or
sbb
pop
push
test
or
dec
jns
pop
xchg
mov
lahf
push
mov
mov
aad
xchg
out
in
into
xchg
mov
sbb
xchg
push
mov
imul
inc
push
pop
inc
inc
or
mov
dec
lret
pop
cmp
neg
into
xchg
or
lret
xchg
cs
mov
xchg
gs
movsb
fcmovne
into
mov
adc
or
pop
hlt
push
mov
cltd
xchg
add
dec
dec
push
mov
popf
adc
push
sahf
in
insb
idiv
push
idiv
add
fdivl
jle
mov
dec
cmp
cltd
outsb
fcompl
popf
fucomip
mov
add
test
into
xor
pop
mov
call
movzbl
xchg
mov
adc
jnp
fadd
test
inc
xchg
sub
sbb
loop
pop
cmp
xlat
call
add
rclb
fsubl
pop
scas
icebp
jp
insl
into
jp
inc
jb
sbb
adc
dec
push
inc
pop
hlt
data16
in
lods
push
mov
aaa
insb
out
loope
adc
xchg
sub
in
stc
xchg
mov
sbb
in
cs
fdivrs
push
mov
dec
movsl
mov
mov
push
in
lds
jo
jnp
cmp
mov
sbb
sub
adc
pop
add
xlat
das
adc
pusha
stos
jle
jbe
sub
jmp
ret
in
mov
lcall
in
push
add
xor
lea
lock
dec
sub
push
das
fbstp
xor
je
sbb
add
mov
jo
mov
rcr
inc
adc
xchg
les
xchg
mov
lahf
xchg
ror
or
ja
bnd
push
in
sub
shlb
push
or
outsb
jmp
cmp
arpl
adc
lcall
testl
mov
adc
les
cmp
shll
fcoml
pop
pop
cltd
std
push
sub
ret
mov
fbld
std
cmc
aaa
jg
inc
or
xchg
fcmovne
cwtl
bnd
lock
loopne
or
aad
sar
push
fnsetpm(287
jb
jns
ja
and
push
adc
ds
ret
or
jne
push
xchg
pop
lods
sub
lds
xlat
cwtl
aam
inc
fnstenv
jmp
inc
enter
mov
mov
inc
xchg
aaa
lods
xor
data16
mov
push
xorb
rcr
xchg
mov
dec
out
xor
mov
aas
pusha
or
lret
divl
notb
das
xchg
inc
inc
add
add
hlt
data16
rolb
adc
push
and
bound
inc
lea
imul
mov
jle
sti
push
inc
pushf
loope
stc
xchg
es
jbe
xor
fstpl
sti
mov
das
xor
cmp
shl
jae
aad
cs
mov
lea
xchg
or
inc
nop
or
dec
cmp
mov
fwait
push
mov
rolb
fldt
lret
xor
jno
sbb
sbb
xor
je
in
jmp
dec
sti
out
jg
out
sbb
std
fistpll
out
add
std
test
fisttps
fdiv
mov
js
xchg
pop
or
pslld
je
mov
pop
imul
push
icebp
in
sbb
mov
out
test
decl
inc
mov
xchg
inc
sahf
mov
ficoms
in
push
mov
movsl
hlt
jle
lret
push
pop
pushf
in
pextrw
mov
push
daa
mov
mov
stc
out
mov
jecxz
dec
fists
or
ljmp
mov
ret
jp
inc
or
jo
dec
stc
rolb
fisubrs
scas
subb
push
les
in
jb
mov
popa
inc
js
jnp
mov
repnz
pop
jmp
xchg
and
push
adc
int
popf
inc
lods
ljmp
hlt
leave
mov
xor
jl
inc
popf
scas
mov
inc
insl
out
push
leave
mov
push
aam
jg
rcrl
cmp
push
mov
adc
imul
cwtl
add
lock
test
xor
xlat
repnz
stos
mov
inc
or
mov
sahf
adc
ja
stos
dec
push
sti
insb
les
jo
jo
leave
inc
pop
xabort
inc
dec
xor
insb
imul
out
int
mov
in
mov
mov
xchg
add
inc
add
push
aam
es
pushf
shrb
add
push
adc
xor
int3
xor
push
andl
test
popa
push
and
fdivrl
cmp
gs
push
cmp
pop
mov
ds
sbb
rolb
gs
sub
jno
push
inc
add
jnp
into
push
mov
loop,pn
sbb
xchg
aad
ss
enter
dec
jne
call
jno
adc
nop
dec
ss
into
and
jnp
jl
loope
ret
xor
jg
inc
js
aad
jb
call
xorb
add
inc
mov
pop
cmc
push
jo
add
inc
or
lock
or
ficoml
push
mov
pop
push
mov
repz
or
xor
or
sbb
mov
xchg
sbb
jle
sub
pop
adcl
jb
xchg
pop
pop
push
lea
inc
mov
loopne
pop
adc
push
call
cmpsl
jbe
inc
fsubp
sbb
pop
rcll
cmovne
push
sarl
or
mov
mov
xor
out
sbb
adc
push
cmpsl
or
jmp
in
xorb
sub
mov
xor
ret
sbb
cmc
lahf
gs
adc
mov
scas
or
jle
sbb
rcl
stos
sub
adc
arpl
shl
cwtl
mov
dec
out
mov
enter
mov
add
int3
ja
shr
hlt
push
pushf
push
addr16
jnp
adc
xchg
pop
lock
mov
lds
int3
xchg
add
pushf
jp
leave
popf
and
das
add
jne
movsl
ficomps
icebp
fisubl
cltd
stc
shlb
xchg
xchg
pop
fstps
mov
jns
dec
pop
xchg
sub
push
push
and
fldt
pop
or
or
mov
and
insb
add
xchg
ja
pop
xchg
fadds
fiaddl
repz
push
cmpsl
jbe
aam
imul
jbe
xchg
int3
pop
popa
call
pop
sahf
insb
xchg
xor
sbb
xchg
ja
inc
ljmp
sbb
das
push
mov
das
sub
popf
or
dec
loope
aad
lock
std
or
pop
lods
jmp
call
or
imul
repz
xchg
sbb
xchg
test
aaa
mov
insl
inc
xchg
or
adc
cltd
push
sub
sub
fdivrs
mov
and
pop
push
dec
cwtl
or
cmp
sub
add
lock
fcomip
fcoms
fimull
lret
ds
aas
mov
arpl
inc
dec
adc
fs
cwtl
sbb
mov
leave
sub
cmp
into
xchg
aad
ds
cmp
ret
and
fimull
push
pop
sub
repz
pop
cltd
in
xor
add
cmpsb
inc
int
enter
je
xor
sbbb
adc
xchg
dec
pusha
imul
aaa
jl
sbb
stc
inc
cmc
jecxz
inc
mov
pop
xchg
xchg
ret
adc
sub
xor
lods
in
cmpsl
imul
fsubrl
bound
sub
repz
xchg
add
repz
and
jae,pn
rcrl
cmp
outsb
inc
adc
mov
insl
push
lret
mov
jle
fs
pop
pop
jp
mov
inc
movsl
inc
jno
outsb
xor
pop
es
lods
inc
xchg
mov
das
pop
femms
adc
push
nop
aas
mov
cmp
lcall
xor
mov
cs
xor
imul
jbe
pop
es
dec
pop
adc
aam
push
cmp
insb
out
adc
aaa
mov
dec
jb
in
inc
inc
adc
leave
mov
xor
inc
js
mov
sbb
sbb
shll
cmp
inc
sbb
imul
mov
sbb
daa
sub
push
jo
jno
xor
mov
outsl
clc
sbb
ret
addr16
ds
fdivrs
lea
xor
add
rorb
into
dec
je
xor
push
out
cmc
cs
and
jbe
mov
cmp
mov
fwait
dec
mov
xor
cmc
add
sub
xor
add
pop
repz
cmp
lock
sbb
dec
pop
mov
pop
popa
mov
xchg
arpl
mov
xchg
repnz
ja
push
add
sahf
mov
loop
inc
pop
shrl
mov
in
out
xchg
xchg
out
aam
shlb
sub
andb
test
jecxz
mov
adc
fiaddl
jae
add
sbb
xchg
pop
outsb
aam
sbb
pushf
cld
mov
xchg
shrl
ret
ja
lret
mov
xchg
lock
mov
cwtl
mov
dec
hlt
iret
pop
xchg
cmp
leave
add
xchg
ret
push
cli
mov
aad
ja
adcl
xor
jnp
mov
mov
and
scas
mov
push
mov
imul
das
loop
push
and
inc
test
popa
mov
cltd
insb
inc
cmp
inc
cmpsb
arpl
jb
push
int
jb
dec
mov
in
mov
adcl
cwtl
lods
xor
repz
sbb
xchg
test
ficoms
or
sti
iret
stos
popa
push
rcl
ljmp
xchg
popa
dec
in
sub
aad
ja
mov
lods
js
subb
nop
dec
push
popf
fnstenv
sbb
ret
imul
fs
call
out
push
lret
fsubl
aaa
test
xchg
and
loopne
lds
sbb
pop
addr16
mov
pop
add
insb
outsl
nop
xor
push
xor
xchg
insb
fsts
movsb
sub
cs
sahf
shrl
cmp
lods
pop
aas
push
xchg
clc
aas
lock
dec
push
xor
mov
leave
inc
jae
popl
cltd
or
fisubs
in
mov
in
jno
dec
mov
push
adc
lcall
lea
pop
add
jle
xchg
push
gs
test
aas
pop
mov
xor
out
dec
jno
mov
test
cmp
cs
loopne
adc
outsb
aam
lahf
and
xchg
pop
aam
lea
lea
lahf
repnz
rcrl
ds
ja
xlat
repnz
rorb
enter
fprem
or
daa
jo
cld
lahf
jle
mov
lcall
inc
sub
sub
cld
mov
mov
cmp
enter
iret
dec
cmc
ret
into
mov
sbb
es
sbb
pop
xchg
or
jecxz
lret
sub
pop
call
adc
outsb
or
test
add
xchg
xor
aam
jp
mov
fwait
jnp
call
int3
add
jmp
jns
pop
aas
inc
lods
das
pop
adc
fadds
lsl
lods
loopne
xlat
dec
xor
xchg
adc
imul
xor
hlt
icebp
xlat
xchg
sti
lods
adc
movswl
js
out
mov
filds
inc
je
test
push
loopne
dec
into
cmpsb
and
fwait
in
jmp
ret
lods
inc
mov
out
pop
aaa
fdivrl
fadd
dec
or
cmp
adc
filds
inc
arpl
mov
loop
xchg
mov
jb
icebp
push
sub
inc
inc
push
sti
jnp
bound
mov
pop
xlat
scas
adc
imul
push
test
dec
push
gs
in
icebp
push
in
adc
sti
push
test
jecxz
scas
or
insl
daa
imul
inc
pop
mov
add
clc
xor
pop
jbe
es
aam
pop
mov
shr
and
cmp
lods
fistps
mov
lock
mov
out
lret
ret
ss
punpcklwd
mov
xlat
inc
push
gs
fldt
jne
mull
aaa
inc
add
sub
push
inc
ds
orb
sbb
call
jp
push
adc
test
hlt
cmp
bound
dec
or
sbb
lock
cmp
xchg
push
in
or
enter
ror
pushf
and
push
cltd
dec
fcmovnb
xchg
jbe
push
arpl
stc
cmc
cmc
icebp
and
mov
outsl
mov
fisubs
das
mov
xor
cmpb
mov
push
cld
cmp
icebp
fidivl
cmp
push
xor
nop
iret
movsb
jmp
dec
in
insl
test
add
hlt
push
push
mov
jns
addl
xchg
push
inc
icebp
push
imul
out
popl
shll
xor
push
push
xlat
in
jecxz
pop
insl
dec
and
push
movsb
push
xchg
fiadds
dec
add
call
add
push
inc
cmp
add
ficoml
xchg
pusha
shrl
ds
xchg
mov
mov
mov
add
jmp
and
jne
cli
mov
mov
xor
inc
pushf
push
test
jmp
jb
repnz
stos
adc
nop
dec
insl
jle
adc
repnz
xchg
outsl
adc
scas
adc
sub
cmp
mov
inc
pusha
push
xor
cmp
inc
imul
sub
js
out
xchg
in
lds
jbe
daa
arpl
aam
sbb
aaa
cltd
stc
xchg
and
cmc
xchg
jno
pop
jnp
mov
popa
jnp
mov
aas
out
or
mov
not
and
stos
lsl
xchg
add
out
xor
fwait
insb
mov
xor
push
sbb
xchg
in
out
outsl
jmp
lods
lods
push
rcll
sbb
xchg
mov
xor
mov
dec
std
insb
lret
jae
ret
popf
sbb
lods
aaa
sub
jbe
lds
mov
pop
dec
ljmp
in
rcll
dec
and
mov
mov
into
jo
ror
test
rcrb
adc
dec
pop
int3
adc
push
pop
out
mov
mov
push
loope
jle
or
test
or
jbe
sbb
cmp
pusha
mov
int3
adc
call
jle
mov
sti
sub
push
stc
shlb
push
pop
fsubrp
repz
or
mov
test
dec
push
ja
mov
fstps
jb
mov
jmp
leave
shrb
roll
sbb
hlt
adc
mov
aad
pop
lret
notl
hlt
mov
test
aas
ds
jp
sbb
push
inc
adc
add
sbb
daa
ret
sub
sbb
mov
sbb
jnp
xor
mov
or
fidivrl
push
aam
add
loopne
and
push
mov
dec
cmp
out
jbe
aam
add
sti
fwait
cltd
push
shl
push
inc
stc
cwtl
test
push
dec
xor
lret
inc
push
divl
nop
sub
outsb
in
sub
repnz
pop
sbbl
cmc
fidivs
je
cs
test
rcrb
leave
test
inc
outsb
ss
out
insb
inc
adc
filds
sarb
pop
jmp
sub
pop
mov
mov
ss
or
xchg
jmp
mov
sbbb
pop
rcl
pop
dec
mov
lcall
jo
loop
enter
shl
cli
cs
xchg
adc
dec
sub
outsb
add
aam
cmp
xchg
enter
adc
xchg
test
inc
or
inc
mull
cmpl
daa
pop
push
cltd
inc
cwtl
pop
ss
fs
pop
outsb
daa
dec
das
dec
cmp
repnz
cwtl
gs
pop
dec
lds
push
lret
bound
dec
jbe
push
jae
cmpsl
and
mov
mov
pushf
jnp
xor
inc
insb
cmp
les
addr16
aam
mov
mov
loopne
cmp
xchg
add
and
repz
inc
fcmovu
push
mov
lock
sub
pusha
pop
popa
cltd
cmpsb
mov
inc
lods
mov
push
js
sub
sub
ret
sub
push
or
mov
push
daa
mov
mov
test
in
aaa
icebp
dec
jl
lea
adc
mov
dec
test
shr
jge
pop
inc
in
aam
test
inc
scas
cmp
sub
inc
test
push
std
in
xor
jp
jmp
pop
gs
xchg
pop
addr16
xchg
subb
sub
inc
adc
adc
push
mov
pop
add
cmp
adc
mov
stc
push
push
and
mov
xchg
in
dec
aas
cmp
mov
aas
sub
or
jl
jo
add
push
pop
push
icebp
int3
dec
xor
jge
mov
repnz
mov
mov
jg
ret
movsl
xchg
mov
cmp
or
jnp
loop
in
jge
jmp
adc
fucomp
stos
cs
pushf
xchg
pop
push
lods
fmul
jno
icebp
lods
sbbl
addr16
adc
inc
test
into
cmp
xchg
or
xor
inc
movsb
int3
pop
in
push
dec
clc
arpl
fcmovb
mov
xchg
pop
add
cmpsl
push
out
mov
push
cmp
xchg
mov
shll
xchg
js
out
lods
xor
lea
dec
std
push
and
xor
push
pop
sub
dec
jns
cmp
ljmp
add
xor
xchg
imul
fmuls
or
xchg
jne
loope
test
add
mov
in
fdivrl
jnp
xor
inc
leave
sbb
pop
data16
adc
lcall
idiv
jne
repnz
mov
lcall
pushf
xchg
jbe
xchg
mov
in
push
pop
xor
int
dec
pop
lea
and
mov
or
repnz
xchg
movsl
jmp
int
pop
inc
push
dec
push
xchg
enter
ljmp
cmp
jno
in
push
mov
jne
cmp
sbb
adc
xlat
sub
ljmp
fisubrl
call
testb
adc
jne
add
jp
pushf
xchg
fisttps
inc
imul
pand
fwait
cmpsb
loope
fcoms
icebp
sbb
je
mov
cmc
sub
loopne
add
je
arpl
mov
xor
jnp
jae
push
xchg
xor
push
leave
mov
sub
pop
inc
pop
dec
fcompl
push
push
cld
loop
jne
dec
sub
sbb
pop
frstor
pop
mov
mov
cmpsb
mov
repz
jno
push
ja
lcall
ja
cmpsb
pop
xchg
inc
sub
mov
xor
outsl
ja
movsl
adcb
fisubs
add
xorb
fwait
mov
pop
imul
sbbb
pop
out
pushf
lret
mov
test
dec
dec
aam
mov
jnp
inc
xor
loop
mov
cwtl
fidivl
or
aad
dec
jmp
pop
jl
pop
scas
jne
cmc
fwait
std
inc
subb
dec
int
shll
ds
shrb
inc
repnz
lret
js
push
in
ret
in
push
adc
push
jne
stos
insl
int3
test
dec
jle
sbb
mov
icebp
mov
loope
jb
and
xchg
das
sti
sbb
les
scas
pop
pop
sbb
pusha
push
xchg
dec
sbb
xlat
jmp
and
nop
hlt
cmc
xor
sbb
mov
push
push
xchg
sbb
push
jge
inc
mov
push
adcl
pop
aas
sbbl
jl
or
cmp
shll
sti
lods
xchg
and
mov
gs
or
in
lahf
cmp
adc
mov
sub
out
mov
cs
cltd
fcompl
bnd
add
xchg
sar
jb
mov
lcall
pop
push
fwait
jmp
and
pop
dec
ljmp
push
xor
xchg
sbbb
jp
rcl
jo
cmp
in
sbb
ret
mov
sbb
fldt
mov
jb
frstor
js
cld
xchg
popf
mov
testb
dec
lahf
out
xor
ss
push
cwtl
movsl
imul
aas
sub
xchg
loope
es
pop
sti
push
cwtl
jmp
imul
fistl
mov
std
sbb
jnp
pop
cmp
mov
mov
ud1
out
cmpsb
xor
pop
xlat
pop
push
jae
mov
jecxz
mov
fsubrs
pushf
jmp
fisubrs
cmp
outsl
adc
inc
xorl
orl
sbb
xlat
pop
leave
mov
jnp
pop
mov
mov
inc
xor
mov
push
or
loopne
mov
adc
xchg
cld
pop
fists
das
aam
sub
cmpsl
pop
mov
call
inc
lock
stos
mov
inc
movsl
test
xchg
fisttpll
imul
pop
imul
pushl
addl
repz
adc
lret
pop
dec
stc
jnp
xchg
push
cltd
gs
and
adc
cmp
mov
je
jo
push
push
mov
arpl
sarb
mov
ror
push
cltd
inc
nop
int3
push
add
cmc
arpl
sub
fsub
pop
fnsave
mov
sbb
adc
fnstsw
mov
xor
push
fs
cmp
xchg
into
testl
jne
mov
xor
inc
jg
push
push
aaa
sub
cmp
test
in
cld
ret
push
shrb
fmull
and
lock
fwait
jne
mov
mov
mov
clc
js
fstps
lock
outsl
jmp
cmp
push
xor
push
sti
sbb
rclb
inc
movsb
pusha
out
or
shll
aam
sbb
dec
push
lret
mull
jg
and
test
movsb
mov
in
sbb
mov
clc
mov
dec
ljmp
push
xlat
pop
mov
dec
out
das
mov
mov
or
imull
jecxz
pop
and
imul
cmp
mov
jnp
fs
in
cmpsb
jmp
mov
adc
inc
sbb
ja
xor
or
inc
mov
jg
shlb
dec
das
call
and
lahf
aas
icebp
cld
mov
loop,pn
ja
xor
je
roll
xor
lret
sarl
mov
sbb
out
add
sbb
clc
insb
xchg
add
and
dec
cmp
mov
pop
add
mov
sub
cld
pop
aad
dec
add
xor
pop
sbb
cli
in
jle
push
adc
subl
je
iret
inc
push
sahf
add
mov
jo
dec
fmul
pop
pushf
cmp
sub
xor
pop
shll
or
push
or
xchg
aam
sub
push
aam
xchg
mov
jb
jns
jb,pn
dec
add
sbb
repnz
out
mov
xchg
hlt
or
cmp
xor
sbb
xchg
test
popa
xor
inc
jbe
subl
sahf
lea
push
xor
push
dec
xchg
ljmp
imul
xor
jp
lock
test
ljmp
sbb
or
ficoml
xor
pusha
cmpsl
in
and
mov
mov
jne
fidivrl
or
test
mov
out
mulb
mov
cmp
outsl
loop
adc
adc
fcoml
into
int3
fs
sub
xor
imul
es
dec
addr16
add
ss
lods
cwtl
jle
pop
pushf
xchg
cmc
iret
or
sub
jbe
sbb
inc
aad
cmp
push
xor
mov
jge
mov
in
lahf
xchg
testb
jb
inc
adc
push
push
sar
jmp
push
cmp
sti
repz
inc
cmp
sbb
aaa
push
adc
lcall
loop
ljmp
aaa
adc
int
pop
mov
movsbl
pop
push
into
hlt
icebp
or
dec
sbb
cmp
dec
jmp
jl
pop
jg
add
mov
test
inc
add
mov
push
cmp
nop
mov
dec
andb
mov
xchg
mov
ss
pushf
shl
outsb
fs
pop
cmp
mov
loop
push
stos
stc
mov
stos
push
push
rcl
dec
pop
insb
scas
inc
dec
adc
lods
dec
or
in
insb
loop
or
mov
dec
test
pop
loopew
xchg
in
insb
imul
jne
aad
inc
stos
ret
mov
ljmp
or
add
scas
mov
sbbl
lds
mov
sub
fmull
mov
ss
loope
cmp
pop
lea
mov
xor
cwtl
nop
inc
cmp
rcll
lahf
cltd
pop
hlt
dec
cmp
ret
pop
out
stos
mov
imul
cmp
imul
lret
inc
adc
shlb
xor
popa
adc
mov
xchg
sub
imul
adc
es
push
mov
and
ljmp
add
inc
into
add
lret
mov
push
std
pop
mull
add
frstor
shlb
outsl
xchg
insb
addb
scas
imul
mov
dec
sbb
mov
jnp
adc
imul
repz
rcl
je
rcl
popa
push
push
mov
mov
hlt
mov
pop
clc
xor
ret
stos
out
ret
ss
pop
inc
lcall
cltd
pop
sti
pop
mov
mov
mov
jecxz
gs
pushf
gs
lea
aam
fdivrs
stos
lea
sarb
jmp
gs
mov
jne
pop
int3
test
psubb
ret
mov
mov
jb
add
and
xchg
inc
daa
mov
pop
sbb
and
or
jmp
pop
mov
fbld
jmp
stos
or
popf
dec
repnz
or
frstor
stos
popf
jo
jno
aad
das
lret
pusha
push
and
or
cmp
pop
stc
xor
dec
sbb
movsb
inc
fwait
mov
pop
test
cmp
stc
daa
cmpsl
xor
jmp
lcall
sub
jnp
int
or
push
addb
jl
push
pop
ss
mov
dec
cmpsb
inc
fists
xchg
insl
in
xchg
leave
bound
and
dec
lret
or
dec
sub
leave
add
pop
adc
imul
dec
xor
xchg
in
or
add
pop
mov
add
out
fsubrl
fidivl
popf
stos
popa
mov
bnd
je
push
es
cmp
ds
xchg
push
lret
scas
fisubrl
xchg
pop
xor
cmp
andl
xchg
xor
pop
push
lds
loope
mov
pop
or
shl
test
cmpsb
pop
fisubrs
and
pop
add
dec
push
dec
addr16
sbb
mov
pop
je
cli
push
push
jns
mov
mov
add
subb
repnz
or
add
mov
jns
stc
mov
ret
cmp
cmc
inc
dec
cltd
fmul
es
add
loope
test
pop
sbb
cli
pushf
fsin
mov
mov
jle
cmp
adc
xchg
fdivrs
jge
lret
jae
mov
sub
xchg
in
out
adc
fs
aas
fs
cmpsl
xor
push
clc
daa
cmp
or
stos
sub
xchg
sti
aas
fisttpl
mov
add
inc
outsl
adc
test
xor
mov
popa
das
pop
jne
imul
aad
loop
mov
stos
ss
je
rorl
cmp
and
ja
sbb
sub
push
xlat
and
fcoml
sbb
jp
mov
xor
fidivl
es
cmc
repnz
sub
stos
xchg
mov
push
int
and
imul
sbb
xchg
push
push
cli
xchg
repz
cmpsb
orb
hlt
and
dec
adc
in
and
das
xchg
push
adc
mov
mov
aas
ja
push
cmpsl
fst
mov
rcrb
pop
call
adc
sbb
sub
dec
xor
pop
push
gs
jecxz
stc
bound
pop
lods
fstpl
sbbl
lea
jp
call
shll
mov
cld
mov
xlat
pushf
rorb
sbb
or
fprem
xor
xor
sbb
pop
pop
xchg
mov
dec
xor
xchg
andl
pop
mov
aad
pop
inc
pop
fisttpl
aam
pop
scas
loope
dec
orb
inc
and
dec
bound
test
cmc
jecxz
movsl
dec
stc
and
fsub
dec
bound
jo,pn
mov
mov
push
jle
nop
or
std
add
in
jns
fimuls
pop
or
or
pop
in
scas
je
xor
shr
cmp
insb
add
mov
adc
jo
xor
mov
shrb
add
sub
sarl
pop
mov
sub
repz
cmp
xor
jnp
int
jo
es
pop
rcrb
es
add
sbb
icebp
arpl
cltd
push
jne
iret
repz
cmc
pop
cld
or
mov
int
or
cmp
stc
cli
adc
and
out
loopne
inc
pop
mov
sbb
es
inc
push
inc
movsl
inc
sbbl
sbb
lock
arpl
add
mov
jno
js
dec
std
xchg
lret
pop
push
iret
lcall
ficomps
orl
or
jnp
jle
mov
int
sbb
or
pop
mov
and
pop
and
xchg
mov
or
jae
in
test
pop
pop
pop
popf
mov
addr16
loop
lods
jno
mov
mov
add
fwait
dec
sub
data16
outsl
or
in
sub
mov
push
int
enter
inc
push
les
je
sub
pop
jmp
jb
flds
sbb
aaa
pop
xor
sub
mov
call
dec
and
outsb
dec
pop
rclb
cmpsl
cld
dec
sub
mov
dec
inc
pop
in
add
nop
fsubr
cwtl
outsb
add
loopne
aad
or
or
push
xorb
inc
lret
fdivrp
mov
shll
xchg
loope
mov
or
repz
rorb
xlat
or
mov
test
int3
push
xor
jge
repz
xor
out
js
xor
mov
mov
cwtl
mov
mov
jns
inc
push
data16
shl
arpl
arpl
xchg
push
mov
pop
mov
xchg
ljmp
cmp
out
rorb
cltd
popf
scas
add
xor
scas
mov
push
or
mov
pmullw
dec
fdiv
dec
in
leave
pop
xchg
test
popw
dec
cld
jmp
and
push
lahf
sub
inc
cmc
cmpsl
lea
sub
inc
call
or
pop
xchg
scas
xchg
xchg
addb
lahf
or
out
jae
push
cmp
hlt
cmpsl
nopl
inc
cs
test
sahf
into
sbb
jne
fisubrs
jo
sbb
fildll
dec
mov
add
push
sub
add
out
mov
xor
std
jg
cmc
mov
dec
loop
sub
int
cltd
push
or
pop
dec
dec
sbb
std
mov
stos
roll
push
adc
addb
imul
dec
nop
inc
les
pop
mov
add
sbb
int
and
sbb
push
xchg
mov
xchg
jo
stos
inc
mov
fld
mov
insl
cwtl
subl
aas
jge
or
pop
dec
push
lahf
cmp
fs
cmc
jb
gs
mov
ljmp
fcoms
xchg
std
add
pop
jnp
call
rorb
add
pop
xchg
fldt
mov
mov
add
sti
shlb
enter
push
jmp
push
vmaxps
fs
mov
daa
sbb
test
scas
mov
and
sbb
out
sbb
inc
mov
icebp
call
mov
daa
push
cs
add
mov
mov
sub
sbb
iret
frstor
movsb
inc
lret
out
imul
fldcw
or
push
jne
cwtl
push
cltd
sub
pop
addr16
into
xchg
sub
je
and
add
inc
ret
sub
mov
jmp
sbb
dec
dec
push
negl
push
loope
in
lahf
dec
subl
insb
aad
mov
jne
sub
or
or
cmp
test
mov
mov
out
jne
jmp
jp
loopne
hlt
lahf
test
lds
negl
pop
cmp
xor
inc
mov
cmp
sbb
inc
push
mov
adc
cmpl
mov
cmc
jl
sub
inc
pop
mov
push
sbb
ja
test
cmpsb
shlb
inc
sbb
roll
mov
sbb
sbbb
iret
mov
push
xor
inc
dec
pop
xchg
repz
push
xchg
mov
test
mov
sar
pop
aad
outsl
and
les
mov
cmpsl
dec
xor
cmp
inc
pop
add
xchg
push
mov
fldenv
pusha
inc
xchg
inc
rolb
cmpl
mov
mov
fs
or
xchg
xor
push
inc
nop
mov
shrb
and
lret
imul
aas
adc
sti
jno
mov
sbb
and
push
bound
dec
sti
fs
out
pop
inc
dec
sbb
mov
cld
xor
mov
mov
jno
mov
or
dec
pop
pop
in
out
jp
in
jae
adc
adc
notl
scas
push
mov
mov
imul
outsb
nop
sbb
dec
imul
push
mov
inc
jo
ss
cmpb
xchg
push
xor
jmp
fldcw
mov
adc
sbb
pop
fimuls
xor
fldenv
scas
cmpsb
push
lds
xlat
add
stos
mov
xlat
xor
add
shlb
stos
or
testl
xor
xor
dec
mov
popf
push
push
icebp
pop
shlw
lret
dec
mov
lret
jg
popf
mov
testb
mov
and
xchg
out
add
dec
data16
loopne
xchg
jne
xchg
sahf
mov
mov
leave
xor
push
add
jmp
arpl
iret
pop
int3
mov
popf
idivb
pop
or
roll
cmp
adc
test
sub
xlat
and
outsb
adc
adc
in
mov
shrb
inc
pusha
lock
subb
sbbl
pop
adc
sub
cmp
xchg
push
mov
fcmovne
inc
sbb
into
fucomip
adc
imul
push
movd
mov
mov
mov
sub
fs
and
in
push
or
lahf
into
push
aaa
and
xchg
into
gs
mov
sbb
push
xor
je
pop
ret
leave
imull
or
inc
lea
aad
jbe
jae
ss
in
or
pop
and
sahf
fidivs
pop
leave
and
lds
dec
sub
or
cmp
enter
das
dec
out
jle
test
gs
std
fdivl
pop
sub
ljmp
mov
cli
cmpsl
fs
imul
mov
test
mov
mov
add
addr16
add
fisubs
pop
inc
inc
jnp
inc
adc
xchg
inc
sbb
pop
cmpsb
adc
mov
or
popf
fdivrs
scas
leave
mov
aad
jb
fwait
mov
rcll
lret
or
inc
mov
push
jmp
add
jp
and
pop
movsl
loop
mov
jns
shr
fdivs
iret
jnp
sbb
fwait
int
divb
jbe
xor
mov
jl
fisubrl
push
mov
orb
aam
mov
clc
ss
dec
dec
cs
mov
pop
movsl
xchg
insb
and
jo
inc
jge
lahf
fmuls
inc
hlt
fs
daa
mov
mov
inc
cltd
call
push
adc
leave
dec
loop
fmuls
and
push
aam
mov
sub
sarl
xorb
shlb
rcll
shlb
xchg
xor
pop
fidivrs
into
jl
mov
insb
rol
dec
mov
cld
pop
xchg
je
arpl
cs
pop
lret
leave
lret
aas
xlat
xchg
fstpt
adcl
shrb
lock
add
sub
cmp
adc
mov
gs
aad
adc
dec
dec
data16
push
les
ja
dec
dec
push
cmp
stos
mov
xlat
gs
push
sbb
call
pusha
jne
into
mov
pcmpeqd
stos
mov
pusha
in
pop
dec
stc
in
adc
imul
pop
mov
or
push
xor
jne
mov
push
inc
das
fildl
stos
xchg
cmpsb
jnp
in
testl
out
and
icebp
aaa
enter
pop
js
adc
rorb
jle
pop
cmpsb
ss
adc
mov
ret
jnp
aas
ljmp
loop
fisttpl
movsb
js
inc
imul
adcl
cmpl
pop
or
mov
jmp
cmp
das
aam
sti
push
add
int
xchg
in
and
rcll
pxor
mov
lods
jecxz
xor
insb
dec
scas
push
mov
sub
push
test
and
in
fxam
js
or
fdivrs
and
jp
mov
pushf
cmp
cmp
inc
bnd
aad
gs
lcall
adc
mov
push
mov
in
movsb
cltd
lods
push
sub
mov
mull
pop
mov
test
dec
pop
inc
cmp
dec
loopne
daa
mov
jmp
lods
jne
int3
inc
and
cli
add
scas
dec
push
sbb
jns
jns
pop
into
adc
mov
rorb
xchg
or
incb
stos
adc
stos
stc
jle
cmpb
fwait
inc
xor
dec
push
push
imul
fs
xchg
mov
or
or
inc
mov
or
inc
fidivs
scas
mov
rorl
jmp
data16
push
dec
aam
lds
and
sub
cmp
inc
testl
or
push
shl
mov
cld
fwait
in
dec
adc
jns
sub
jmp
push
stos
add
pop
inc
or
arpl
push
cmc
xchg
lcall
inc
out
and
push
sub
or
ret
push
aaa
or
addb
mov
sub
fcoms
pop
std
fists
sbb
sbb
adc
push
sbb
inc
mov
add
hlt
mov
fwait
int3
push
mov
repnz
test
sti
loop
pop
xchg
pop
and
jns
cmpsb
pop
and
adc
adc
in
fcomp
shrb
mov
xor
scas
bound
add
je
xchg
mov
jno
icebp
xchg
fdivrp
nop
inc
outsb
mov
push
lds
in
xchg
or
inc
rcll
stos
fnstcw
sub
mov
jbe
cwtl
xor
into
and
add
lret
rolb
dec
add
push
or
int3
add
inc
jg
mov
and
rolb
test
std
push
es
sbb
push
fs
jo
stc
mov
xchg
out
loopne
mov
jb
cmp
addr16
fwait
push
xlat
scas
call
sti
mov
xor
out
sbb
ret
jle
repnz
mov
sub
pop
imul
inc
or
insl
dec
adc
popf
mov
cmpsb
inc
push
dec
adc
je
or
in
mov
xor
fldl
inc
cmpsl
mov
sarb
cmc
add
fcmovb
int3
in
push
pushf
loopne
sbb
fdiv
imul
pop
pop
mov
stc
mov
fcmovnb
xchg
fildll
inc
mov
xchg
adc
sub
das
cltd
push
pop
lods
insb
gs
cld
jmp
jbe
mov
ds
push
icebp
pushf
int3
jp
sarb
imul
dec
cmp
adc
cwtl
and
lods
sbb
and
imul
pop
es
ret
push
or
cmp
adc
mov
pop
popf
ljmp
xchg
xlat
cli
push
xor
insl
sahf
sahf
sub
lret
js
aas
xchg
int3
cmp
cmc
mov
data16
jge
xchg
xlat
push
xor
jge
stos
cmpsb
lea
mov
in
ljmp
sbb
mov
aaa
into
std
xlat
inc
data16
call
xor
ljmp
ficoms
sub
xlat
and
cmp
fistpl
mov
inc
std
ja
push
xorb
mov
icebp
pop
movb
in
outsl
aaa
cli
sbb
pop
jge
xchg
movsb
cmp
mov
mov
and
push
dec
test
xor
pop
sub
cmp
push
adc
insl
fimuls
das
push
pushf
test
and
mov
hlt
lahf
test
mov
xchg
stos
out
out
jns
pusha
adc
outsb
aas
lret
push
or
ljmp
pop
mov
sahf
test
dec
and
pop
ud0
mov
ljmp
mov
pop
cld
rcrb
in
std
shlb
mov
test
cmp
stos
lods
push
sbb
insb
les
les
notl
xchg
sbb
or
adc
or
pop
or
loopne
push
inc
xchg
mov
push
jmp
cmp
push
xchg
popa
or
pop
andl
sbb
cmp
cmp
inc
xchg
orl
jmp
lahf
call
adc
enter
inc
in
dec
fld
dec
popa
xor
sarb
dec
orb
xchg
dec
aam
sahf
scas
mov
sbb
push
idiv
cmc
jae
int
mov
int3
lret
repz
pop
push
mov
dec
lds
inc
jp
scas
jmp
out
mov
push
or
mov
aas
fsubrl
xor
or
sub
andb
pop
push
shll
je
in
sub
mov
mov
jl
jno
es
sbb
rol
cmp
cmp
adc
jecxz
lret
sbb
sti
xchg
mov
pop
dec
cmpsl
xlat
les
adc
repnz
inc
mov
sahf
ds
and
adc
pop
mov
mov
aad
adc
push
iret
ret
pop
notl
out
cmp
test
fsubrl
movsb
adc
dec
xchg
in
ljmp
in
sub
push
fs
nop
cwtl
jcxz
ss
mov
or
movsl
pop
push
cmp
push
scas
sbb
js
in
or
sti
loopne
inc
adc
insw
iret
out
test
push
fwait
scas
mov
scas
pop
push
bound
push
add
ds
mov
sbb
in
mov
std
add
in
repz
pop
nop
add
aad
test
add
pop
call
loope
lods
aaa
pusha
push
mov
jbe
popa
iret
or
pop
outsl
pushf
cmc
mov
xchg
popf
jecxz
inc
mov
pop
push
mov
jecxz
popa
ja
mov
xchg
xlat
rcll
add
sti
fcmove
mov
aad
aas
out
rorl
lret
fs
push
lret
mov
push
lret
lock
outsl
mov
fstl
sbb
push
mov
ljmp
mov
icebp
mov
ljmp
jecxz
int
jecxz
mov
cmp
dec
add
cld
jne
fstps
sub
add
xorb
push
pop
mov
inc
ds
mov
hlt
test
cmp
sub
pop
sti
std
loope
lock
out
cmp
mov
aaa
std
scas
enter
mov
jno
cmp
dec
and
test
negb
push
xchg
pop
nop
inc
jne
jmp
and
std
pusha
sbb
pop
ror
iret
or
mov
sub
mov
add
lea
jnp
jnp
daa
dec
jge
fdivrl
scas
or
unpcklps
clc
sub
fildl
fdiv
mov
call
jne
cltd
cli
test
jne
sbb
push
add
push
lock
or
imul
imul
inc
mov
pop
and
push
push
movsb
test
or
test
sub
push
push
push
jge
pop
add
cmp
xor
loop
or
incl
push
jns
pop
lcall
push
jo
leave
cwtl
ds
cmp
pop
mov
and
pop
push
lds
push
dec
and
out
dec
or
dec
mov
inc
es
dec
cmc
ja
sub
cmpb
mov
call
mov
mov
shl
fisttps
adc
mov
mov
nop
notl
mov
std
movsb
jno
add
inc
mov
in
xchg
lea
jge
fnstenv
fsubrl
cltd
mov
mov
idivb
pop
in
xchg
loopne
das
and
cmpsl
ss
mov
cwtl
lea
jge
enter
inc
xchg
jp
ljmp
add
fcoms
adc
inc
xorl
jae
cmp
mov
mov
jno
xor
ror
push
jle
mov
sbb
outsl
decl
aaa
imul
and
lret
jge
inc
mov
mov
aad
ret
sbb
jle
mov
add
dec
inc
pop
add
push
xchg
and
fadds
rorb
fists
cld
jg
divb
cmp
test
mov
adc
jle
mov
mov
add
stc
test
mov
gs
inc
push
mov
insl
mov
adc
and
push
fdivr
data16
icebp
cld
test
pop
pop
jl
mov
mov
insb
mov
movsl
mov
and
or
jns
out
push
jb
cmp
aaa
push
je
jno
fs
js
cmpl
test
movsb
or
leave
mov
leave
push
test
push
jo
pop
xor
sub
movsl
pop
jnp
mov
and
xor
xor
inc
sti
les
dec
sub
fcmovnu
push
add
and
inc
sub
cmp
clc
mov
sbb
dec
stc
push
mov
sub
into
push
sub
xor
cmpsl
pop
mov
std
in
pop
push
popl
xchg
dec
test
sub
arpl
popa
pop
fs
sbb
movsl
mov
icebp
dec
in
icebp
popa
inc
mov
aas
adc
inc
cltd
fnsave
testb
jno
add
ljmp
out
push
push
aas
roll
stos
push
arpl
pop
out
xor
aaa
lods
add
lret
sbb
roll
mov
adc
mov
ja
sub
fiaddl
addl
sbb
dec
rol
push
or
mov
xor
jmp
or
mov
fldenv
inc
xchg
mov
add
mov
in
push
sub
or
jne
adc
sbb
xorb
xchg
jno
into
pushf
test
add
in
mov
adc
pop
negl
sbb
mov
jne
xchg
inc
inc
push
hlt
push
xorl
stc
dec
or
sub
and
out
daa
stos
adc
sub
test
adc
jo
pop
pop
dec
jno
inc
or
add
cltd
mov
leave
mov
sbb
dec
mov
lcall
lea
mov
add
pop
lcall
test
dec
mov
into
sbb
and
inc
push
xor
or
shrl
add
and
cmp
pop
pop
lods
jbe,pt
mov
mov
shr
mov
push
inc
dec
imul
cmp
cld
mov
jns
test
frstor
rcl
cmp
pop
xor
sub
insl
in
pop
sahf
add
imul
pop
add
jl
sbb
sub
cmpsb
shll
xchg
push
push
int
xchg
adc
push
adc
js
inc
jne
out
cmpl
push
dec
sbb
or
add
inc
mov
push
cld
fwait
scas
loopne
clc
dec
lods
add
ljmp
ret
adc
push
and
mov
xor
filds
lods
mov
cwtl
out
lods
movsl
rcrl
aad
stc
pop
shl
aad
inc
aam
shlb
add
push
or
pushf
push
stos
xor
xchg
push
data16
jge
imul
or
sub
dec
sti
rcrl
sub
scas
and
jg
ss
fldcw
xlat
fidivrs
add
in
mov
cmp
pop
es
movsb
pop
jnp
xor
popa
cmp
xlat
insl
sbb
push
jno
fwait
xchg
rclb
adc
enter
adc
cld
jmp
xchg
sub
jecxz
dec
rcll
scas
cmp
and
lahf
sub
mov
out
sti
jg
or
ss
sbb
insl
mov
pop
lock
in
xor
lcall
decb
mov
pop
mov
enter
xchg
push
cmp
mov
and
mov
jno
out
in
lock
imul
or
jecxz
mov
jns
xor
mov
or
mov
add
push
mov
lods
adc
mov
lods
aas
mov
and
shll
fldenv
daa
sub
aad
sub
stos
fisubrl
lret
into
jne
movsb
lahf
cmp
or
pop
js
or
mov
fistl
add
pop
push
fcmovnb
and
mov
lret
jg
push
push
pushf
arpl
sub
xor
fisubl
sub
cmc
inc
and
xchg
fsubp
iret
mov
popf
sbb
xor
pop
cmp
loope
jp
pop
jmp
and
out
add
fwait
xchg
cmp
jb
out
mov
jae
inc
pop
mov
push
mov
cmp
xor
in
mov
mulb
cmpl
xchg
aam
inc
inc
xor
sbb
ja
sbb
or
out
and
lret
xchg
fimull
ss
xchg
int3
pop
popf
test
push
and
ljmp
int3
clc
cmp
jo
imul
push
lods
je
ds
xor
dec
icebp
test
mov
idiv
jl
xchg
cmpsl
mov
sub
aad
and
jecxz
movsl
or
push
shll
sub
mov
mov
xor
negb
pushf
add
xor
adc
fwait
jnp
jmp
sbb
pop
cmp
fwait
mov
sbb
mulb
pop
mov
jecxz
add
into
fimull
ja
inc
aas
in
inc
cmp
mov
lret
cmc
pop
movsl
mov
shlb
aas
jno
cmpsb
loop
jge
aas
mov
xchg
fndisi(8087
scas
sahf
xor
das
or
mov
mov
out
xor
push
mov
push
dec
addl
xor
and
jge
push
jb
test
inc
shrl
mov
pop
vpsllq
sbb
fbld
mov
pop
cwtl
scas
sbb
out
mov
jp
sub
out
addb
xchg
addr16
dec
dec
push
dec
sets
pop
add
xor
sbb
push
sbb
adc
out
sbb
add
mov
jns
mov
push
test
cmpsl
insb
fcomps
sarl
ss
ffreep
push
cmpsb
aas
dec
pop
pop
adc
into
sti
enter
mov
in
jo
pushf
call
xor
ljmp
shrl
pop
in
icebp
ret
jne
pop
ss
and
xchg
aad
test
shr
call
adc
mov
cmpsb
fistps
shlb
loope
aam
lods
int3
jbe
icebp
pushf
dec
cmc
or
mov
push
es
aam
mov
fcoml
inc
jae
jns
xchg
jns
inc
push
es
mov
mov
jp
lret
cmp
push
jp
scas
in
out
sub
push
loope
push
dec
mov
pop
pop
jecxz
mov
xchg
imul
sub
xor
adc
insl
push
hlt
or
xchg
xchg
push
inc
subb
ds
dec
stos
stos
jae
add
incl
rcll
cmpsb
cltd
inc
adc
iret
cmp
cmp
add
pop
lea
cmp
fs
insl
dec
ficompl
pop
xchg
mov
flds
adc
mov
mov
mov
cmc
sbbb
leave
xchg
lods
cld
cwtl
popa
adc
movsl
or
nop
stos
and
pusha
gs
sub
mov
push
push
and
and
jge
stos
xor
mov
adc
mov
repz
jmp
popa
daa
mov
xchg
movsb
std
mov
xlat
in
xchg
std
cmp
loope
adc
pop
mov
sahf
pushf
push
lret
movsb
mov
mov
aam
out
mov
jmp
inc
sub
push
test
cmp
lcall
fiaddl
test
and
mov
ficoml
arpl
lahf
push
popf
pop
fwait
in
sub
mov
lds
and
and
popf
sub
push
pop
and
mov
xchg
cld
divb
or
inc
inc
sti
xchg
dec
fwait
adcl
bound
fbstp
push
daa
fsts
cmp
mov
xchg
jbe
lock
lods
pop
lahf
cltd
sbb
push
mov
leave
iret
mov
sbb
arpl
mov
mov
push
in
int3
repz
sbb
lds
aam
jecxz
xor
into
sahf
fistpll
stos
lcall
clc
outsb
mov
mov
and
out
mov
mov
loopne
xchg
adc
sti
hlt
cmp
mov
cmp
add
arpl
jge
cmpsb
xchg
je
sub
ljmp
hlt
outsl
xchg
dec
push
adc
pop
insl
adc
push
mov
jge
cmp
push
fsubrs
xor
inc
test
aaa
dec
sub
mov
in
repnz
add
cltd
jbe
stc
xchg
cmp
gs
or
adc
pusha
mov
xchg
push
mov
ffree
aas
rcl
sbb
nop
ret
int
test
sub
mov
or
xchg
imul
xor
jno
or
ja
mov
jno
mov
cltd
int3
mov
sub
les
movsl
inc
xchg
jg
add
sbb
cmpsl
cmc
jns
out
jmp
repnz
push
or
sub
pop
jne
and
pusha
push
jae
dec
jb
rep
push
jns
pop
mov
stos
scas
int3
test
mov
data16
div
adc
out
xchg
mov
add
sub
xorl
mov
dec
or
mov
xchg
and
frstor
and
xor
cld
sub
xor
or
push
mov
jns
mov
iret
push
inc
testb
imul
or
jb
insl
pop
inc
sub
mov
lret
test
lcallw
pop
lock
mov
aad
das
scas
loopne
loopne
cli
mov
sbb
daa
insl
adc
xor
imul
xchg
xorl
mov
or
ret
mov
jmp
cmp
add
shrl
jo
dec
arpl
or
cmp
lret
mov
test
pop
popa
out
int3
das
or
or
mov
pop
jge
mov
cmpsb
inc
cmp
inc
mov
sbb
test
cli
lret
jns
daa
call
imul
lcall
iret
mov
pop
cmp
or
push
cli
jecxz
jmp
dec
pop
ret
orl
cmp
mov
mov
jne
dec
mov
loop
sbb
add
test
or
push
mov
lds
inc
or
insb
gs
lods
pop
push
sub
test
cltd
imul
movsb
je
cs
stos
xchg
xchg
daa
inc
inc
pop
das
jecxz
daa
sub
mov
mov
pop
sub
popa
push
ret
mov
push
cmp
jmp
rorb
or
jne
adc
mov
pop
and
outsl
sbb
test
rcll
addr16
push
xor
dec
sarb
enter
sahf
fdivrl
scas
add
push
popf
dec
xchg
sub
xchg
fwait
test
fstps
pop
mov
cmp
sti
pop
ds
pushf
lods
int
lods
popf
or
xor
mov
daa
jne
xchg
mov
sbb
mov
sarb
sub
dec
sbb
imul
cmpsb
xchg
cli
nop
add
js
push
out
xchg
sbb
cmc
xlat
out
adc
cld
or
dec
sbb
out
cmp
and
icebp
jbe
push
flds
fcmovnb
dec
add
test
xor
push
popf
jne
pusha
inc
push
in
repnz
lret
fisubs
stc
scas
out
in
shl
xor
js
cli
lcall
aad
repz
inc
lcall
cmp
and
cs
out
cltd
jns
cwtl
jmp
int3
xor
mov
outsb
adc
mov
js
and
mov
push
cli
jno
dec
inc
pop
stos
add
add
pop
xchg
int
movsb
shl
pop
jg
lret
jae
push
in
xchg
les
pop
mov
fwait
cmpsl
imul
bndstx
in
pop
push
jp
test
fcomi
pop
pop
stos
outsl
push
push
clc
cmpsl
jge
mov
add
sub
mov
inc
adc
outsb
mov
cmp
frstor
push
mov
mov
sbb
push
or
mov
jb
sub
push
push
out
insb
and
sub
lock
mov
scas
sbb
test
fyl2x
push
dec
xchg
dec
dec
dec
inc
add
xchg
pop
int3
hlt
xor
rolb
and
std
xchg
pop
sub
sbb
nop
mov
mov
mov
int3
xor
pop
cltd
imul
mov
push
mov
ret
dec
jmp
test
xlat
js
lahf
or
jno
lahf
xchg
shlb
cmove
fsub
cmc
inc
jecxz
lds
leave
idivb
cs
rolb
and
insb
outsl
mov
or
jns
mov
jns
xor
adc
pop
test
and
mov
cmp
aam
push
in
imul
repz
roll
std
xchg
inc
shrb
cmpsl
pop
adc
faddp
mov
dec
call
test
subl
cli
test
push
and
pop
mov
stos
popl
mov
jno
jmp
arpl
fldcw
pop
xor
pop
rorb
repnz
jge
les
jg
sbbb
adc
pop
inc
lret
pop
adc
addl
mov
push
psrad
mov
fwait
mov
ret
dec
push
sahf
mov
and
mov
mov
pop
scas
push
lods
push
cmpsl
movq
rcll
add
xor
add
mov
idiv
ret
das
sub
xchg
pop
pop
and
outsl
adc
stos
pop
cli
pop
add
imull
pop
and
das
mov
jmp
mov
xlat
in
enter
adc
leave
out
ret
jo
std
pop
das
push
mov
mov
dec
jmp
lcall
mov
into
or
fdivp
sbb
or
je
rclb
jne
xor
shrl
hlt
xchg
inc
jl
iret
outsl
jmp
xor
in
jmp
inc
dec
cmpsb
clc
int3
jno
add
sahf
push
lret
jecxz
stos
popf
mov
mov
sub
push
and
mov
sbb
xor
sbb
popa
push
aaa
aad
add
xlat
and
incl
sub
out
aaa
call
cs
dec
addb
testb
stc
and
int3
clc
xchg
mov
ret
push
pop
adc
xchg
filds
mov
pusha
inc
scas
mov
xchg
outsl
loope
lds
out
ret
cli
or
push
addr16
lods
push
das
out
cmp
inc
or
mov
xchg
into
jp
dec
push
cmpsl
shrb
push
or
leave
rcl
clc
adc
gs
add
jg
sub
xor
orl
mov
jo
arpl
cmpsl
cmp
adc
adc
jecxz
lcall
insb
out
jle
ja
lea
nop
ret
sub
iret
jno
hlt
fistps
sub
iret
sub
xchg
bound
andl
cwtl
mov
fcom
sbb
pop
push
sbb
jge
popf
pop
adc
addr16
jns
call
clc
xlat
xor
imul
cmp
and
outsl
ud2
dec
mov
insl
jp
add
icebp
scas
lret
fisttpl
dec
sub
lret
lods
aam
stc
inc
lock
fdiv
enter
sarb
pop
or
push
add
cmpsb
mov
lods
fldenv
rcrb
inc
das
arpl
sub
das
jb
cmovnp
fmull
inc
mov
pop
call
inc
ds
std
int
fs
pop
ret
insl
xabort
jmp
mov
iret
xchg
or
dec
xlat
fbld
dec
dec
jno
push
jecxz
out
insb
jne
and
enter
sub
out
xchg
xchg
clc
int3
mov
push
lcall
xor
outsb
and
mov
sub
fnsave
mov
inc
or
stos
push
inc
lds
inc
push
fadds
push
les
sbb
clc
js
and
jns
loop
aam
imul
roll
xor
sbb
fnstcw
mov
adc
in
xchg
pop
pushf
xor
inc
sbb
mov
sub
push
popa
pop
cwtl
sbb
mov
mov
adc
cwtl
outsb
loopne
cmpb
lds
pop
pop
mov
jge
arpl
and
cld
ret
cmpsl
out
lods
rorb
int3
add
out
repnz
xlat
mov
xchg
out
test
lcall
jmp
add
int
pop
jl
and
sbb
cld
popa
xchg
insl
mov
fs
movl
adc
sub
lcall
lcall
sti
cmpsb
divl
add
shll
xor
cmp
fsts
push
lret
jb
lret
push
mov
cmpsb
push
mov
aam
cmp
adc
bswap
pushf
mov
roll
lcall
or
inc
inc
xchg
pop
adc
add
inc
fadds
jns
cmpsl
fwait
outsb
or
sub
cmp
daa
in
je
dec
aaa
loop
gs
sub
mov
sbb
out
jge
inc
repnz
in
ljmp
jo
lahf
out
pop
add
lcall
mov
inc
inc
add
mov
shlb
mov
inc
pushf
aad
ljmp
pop
xchg
in
in
push
fists
lock
shl
cli
ret
scas
sbb
pusha
ss
pop
pop
imul
ljmp
shlb
inc
jnp
jg
lock
dec
inc
sbb
out
push
imul
lds
aam
leave
aad
jae
or
sti
pop
rorb
fcomi
pop
dec
movsb
jnp
mov
xchg
cwtl
sbb
sbb
je
mov
dec
out
es
mov
jg
inc
push
fistpll
and
adc
int3
ss
adc
xchg
pop
pop
pop
inc
call
push
xchg
inc
pop
bound
gs
adc
jnp
mov
sbb
jae
and
jae
fcompl
repz
sti
sub
inc
fildll
xor
fistps
pop
and
xchg
cmp
mov
in
sbb
jg
adc
adc
rcrb
sub
sbb
sbb
aad
mov
mov
call
lcall
mov
jo
push
mov
adc
cmp
loope
lret
mov
mov
sbb
cli
cmp
inc
push
mov
dec
mov
bound
fldt
jle
mov
fwait
mov
gs
insb
push
pop
and
mov
stc
sbb
sbb
mov
jns
pushf
cmp
stos
pop
cmpsl
xchg
les
jne
out
rclb
push
lock
sahf
cmp
in
inc
dec
push
leave
movsb
ljmp
fmul
es
jo
adc
lahf
cwtl
add
push
orb
pop
scas
cmp
or
push
data16
sbb
mov
pop
test
fwait
insl
push
neg
or
cmp
test
fs
mov
adc
arpl
out
movsb
push
jl
f2xm1
sbb
enter
pop
jl
es
stc
adc
loopne
xchg
inc
pop
push
mov
adc
imul
inc
and
loope
mov
hlt
or
out
pop
imul
daa
xchg
jle
xchg
imul
or
shrb
jne
lods
xlat
dec
lods
ret
pop
mov
and
adc
jl
adcb
jae
in
test
sub
sub
insl
push
cmp
dec
std
xor
imull
stos
aam
jnp
into
mov
outsl
or
mov
lock
pop
xchg
ss
in
aam
rcl
mov
add
adc
pusha
std
jno
rclb
pop
dec
sahf
ja
adc
mov
mov
mov
jmp
pushf
ds
cmpsb
add
in
cmpsb
lahf
mov
addl
dec
das
sti
xor
pop
xchg
xchg
cltd
adc
sbb
jb
sub
pushl
mov
xor
pop
add
mov
and
dec
mov
add
jecxz
shl
cmp
in
out
rcrl
les
inc
out
stos
push
js
rcrl
dec
out
imul
iret
out
dec
add
jbe
cmpsl
mulb
fwait
dec
ds
xor
test
cmp
int
fisttpll
push
sub
cwtl
ret
leave
or
dec
cmp
sbb
aas
mov
idivl
in
ret
pop
push
movsl
std
pop
xlat
je
into
lods
arpl
cmc
pop
jno
cmpsl
mov
shrl
das
and
hlt
sbb
repnz
mov
lock
popf
jecxz
or
xor
paddsw
cmpsb
imul
movsl
pop
add
mov
mov
mov
adc
loopne
fstps
push
jle
stos
inc
or
push
fsubrl
daa
cltd
inc
in
loopne
inc
inc
push
out
jge
and
aam
out
lds
dec
jg
inc
lret
pop
dec
sbb
jb
add
adcl
add
xchg
aaa
fs
nop
fwait
mov
pop
ds
cmpsb
inc
push
jnp
jge
xchg
mov
push
aaa
mov
fistpl
clc
dec
xchg
jae
cmp
mov
mov
push
out
test
bnd
xchg
push
mov
sbb
or
sbb
stos
jle
popa
push
dec
pop
scas
sub
lods
adc
add
sub
call
mov
push
daa
sub
pop
iret
jge
add
shll
inc
pop
faddl
xlat
jae
bound
rcll
cs
stos
adcb
pusha
es
lock
mov
mov
repz
jbe
mov
push
inc
aad
xchg
sub
and
mov
ret
mov
lds
add
sub
adc
adc
jne
dec
movsb
cmpl
push
outsl
shlb
lea
add
stos
fwait
cmp
pop
mov
mov
add
inc
hlt
andl
cmp
sbb
or
dec
mov
mov
js
mov
and
bound
das
fcoml
mov
iret
arpl
jb
popa
cmpsl
out
mov
pusha
inc
lahf
mov
or
loope
pop
sbb
and
add
push
test
pop
sbb
ljmp
cmp
mov
fwait
or
adc
ret
insl
fldt
jbe
add
divb
push
imul
clc
inc
mov
xlat
fstpl
mov
mov
insb
mov
xlat
pop
sarl
cs
cmp
pop
hlt
dec
dec
inc
lods
loopne
fdivs
mov
cwtl
pop
cmp
add
fisubl
pop
cmp
call
or
cs
cmp
adc
sub
cmp
sbb
xor
nop
push
mov
test
and
jns
adc
repnz
call
filds
mov
fcom
push
imul
cmp
scas
add
jbe
sub
int
out
adc
lahf
jns
add
dec
in
inc
ds
scas
cltd
hlt
mov
inc
xchg
jbe
jge
push
jns
and
xor
ds
adc
mov
inc
jecxz
sbb
cmp
data16
push
int3
testl
and
pop
add
ficoms
inc
rep
sahf
popa
pusha
xchg
mov
iret
dec
mov
mov
add
xchg
lret
mov
ja
testb
int
jmp
mov
lock
cmp
adc
mov
or
jns
ljmp
aad
and
sbb
sub
popa
xchg
mov
mov
gs
into
pop
fsin
test
sub
sbb
adc
or
jbe
cmp
in
sub
add
ret
adc
dec
mov
mov
pop
daa
stos
or
cwtl
add
ljmp
xchg
insl
movsb
push
stos
or
out
add
inc
pusha
cmp
cs
push
shlb
pop
std
pusha
xor
fptan
jecxz
hlt
fwait
clc
inc
bound
xchg
aas
mov
int3
push
lds
ficoms
test
sbb
sar
cmp
out
pop
rclb
add
aaa
test
jmp
mov
rorl
aad
xchg
in
call
into
rcrb
sub
out
je
sbb
pop
lds
dec
sbb
cld
repnz
pop
sbb
lcall
in
adc
cmp
mov
stos
stos
repz
aad
into
lea
mov
pop
push
add
aaa
addr16
ss
lds
xor
mov
mov
inc
mov
daa
clc
ror
shll
push
das
add
push
jne
sarb
or
fcomip
xor
andb
loopne
adc
vminss
popf
aaa
cmpsb
fstps
mov
cli
cmp
xchg
insl
shl
sbb
movb
das
lods
into
lret
mov
pop
inc
push
or
movsb
pushf
flds
jb
aam
inc
cmc
fcmovnbe
inc
mov
sub
inc
mov
in
scas
inc
insl
lret
ror
enter
std
add
lds
scas
icebp
xchg
and
push
xor
pop
jle
aaa
lcall
test
inc
in
rcl
sti
in
sub
les
push
jo
out
sarb
mov
adc
rolb
dec
mov
pop
xchg
das
sti
pusha
sub
js
in
and
sbb
fwait
fwait
jbe
pop
clc
test
aas
je
pop
sub
rol
fcmovnu
jecxz
jge
xchg
enter
xchg
aam
popf
sub
fisubs
push
in
add
and
or
jmp
repz
mov
xchg
jp
push
cmp
test
xchg
mov
sbb
scas
cmp
sbb
inc
push
aaa
dec
repz
outsb
and
aad
cmp
mov
fwait
xor
and
or
add
stc
cmpsl
xchg
push
nop
inc
in
adc
ss
stos
push
orl
es
mov
insl
jns
mov
cwtl
mov
sbb
scas
pop
inc
lcall
ret
cwtl
lods
repz
cmc
mov
stc
mov
or
pusha
push
push
dec
xchg
jmp
sub
divb
mov
and
or
je
call
xorb
jnp
push
jg
sub
ret
dec
or
dec
sbb
popf
xchg
xchg
hlt
popf
mov
daa
sbb
pop
add
dec
lods
inc
xchg
pop
inc
adc
pop
or
gs
cmp
lret
push
jno
imul
cmp
lahf
mov
ja
push
push
lea
stc
pop
xchg
cmpsl
or
fsubs
stos
add
mov
movsb
loope
insb
mov
push
adc
xchg
push
sub
outsl
sub
add
sub
mov
out
lock
sub
xchg
push
inc
in
movsl
jb
test
jo
xlat
addl
mov
out
mov
or
pop
mov
call
shl
cmp
mov
push
arpl
gs
dec
and
cmp
in
cli
dec
test
nop
movsl
loope
inc
insl
push
mov
xor
lret
insl
insl
lods
divl
mov
outsb
loope
out
les
mov
repnz
loopne
setns
push
mov
cmp
sbb
rorl
adc
and
jmp
xchg
neg
sbb
inc
push
call
push
cli
inc
xor
cmpsl
push
sarb
add
pusha
loopne
cmp
mov
int
adc
sahf
scas
push
inc
movl
scas
mov
cli
sub
xor
fidivrs
sbb
jno
je
insl
loope
call
das
loopne
loope
pop
dec
sbb
das
and
jge
and
scas
cs
jbe
mov
adc
fs
ret
add
insb
mov
inc
movsb
adc
inc
mov
into
mov
jbe
mov
mov
in
jmp
loop
and
hlt
adc
or
inc
mov
out
lcall
mov
movsl
out
es
imul
out
mov
push
cmp
add
pop
dec
mov
fdivrs
push
rcrb
movsb
imul
sahf
int3
fidivl
pop
sldt
testb
jbe
dec
cmp
xchg
xlat
lds
cmpsb
cwtl
jnp
lock
pop
testb
xchg
jl
adc
imul
sbb
push
pop
into
xor
push
in
sub
loope
aas
push
jo
or
mov
inc
inc
jg
rorb
pop
jle
mov
mov
fstps
test
cmp
or
out
pop
pop
mov
mov
ds
lcall
mov
mov
and
ja
or
shll
roll
mov
lds
cmp
js
mov
sti
orl
push
loop
mov
lret
aam
add
sbb
cli
push
imul
lods
arpl
sub
mov
out
mov
mov
add
leave
sub
push
mov
mov
inc
lds
jle
push
ljmp
or
bound
jg
decb
fiaddl
pop
mov
leave
and
push
or
xor
pusha
sub
adc
hlt
leave
out
mov
push
and
lret
cmp
or
jbe
test
loopne
mov
pop
insb
xchg
mov
xchg
test
add
and
hlt
xor
cmp
inc
xchg
mov
and
test
cmp
in
pop
push
mov
sub
or
adc
pop
fsub
adc
cwtl
pop
adc
pop
cwtl
ss
ret
inc
xor
sarl
mov
jle
mov
out
test
test
stos
add
mov
xchg
dec
les
outsl
and
rclb
pop
xor
mov
cld
xlat
int
adc
scas
ret
insb
sub
or
ss
in
sbb
sti
inc
es
add
bound
stos
inc
push
jae
mov
das
faddl
sbbb
outsl
cmpsl
dec
mov
xchg
mov
lods
mov
insl
jge
in
mov
pop
and
mov
mov
dec
je
mov
xor
dec
lea
mov
cmp
test
punpckldq
nop
mov
sub
in
shrb
icebp
mov
scas
xchg
mov
inc
dec
add
ret
ret
mov
out
hlt
and
dec
sahf
mov
mov
scas
inc
inc
or
push
or
mov
movsb
pop
dec
leave
inc
jge
ret
mov
mov
shll
dec
outsb
mul
iret
push
xlat
shlb
aas
ds
cmp
lock
pop
insl
subb
rorb
movsb
adc
jecxz
aam
imul
lahf
mov
iret
out
int
sti
jno
testb
sahf
pop
dec
nop
outsl
xchg
lcall
xor
sub
sbb
test
add
inc
pop
arpl
ret
out
loopne,pn
stos
sub
mov
mov
cmp
sub
mov
out
aaa
sbb
ret
xchg
dec
push
mov
inc
imul
jne
sbb
xchg
sbb
daa
rcll
in
add
push
icebp
fnsave
les
movsl
ja
xor
pop
pop
arpl
pushf
dec
and
aam
xor
outsl
out
popf
and
les
popf
out
or
mov
xor
xor
xor
js
jmp
mov
dec
push
mov
pop
ljmp
sub
inc
xor
inc
roll
jecxz
mov
xorb
mov
lods
push
xchg
sbbb
pushf
movsl
mov
lahf
or
popf
inc
iret
and
sbb
push
mov
je
jge
dec
sub
jle
icebp
arpl
and
imul
sub
outsb
add
or
mov
pop
push
imul
adc
cltd
dec
pop
mov
cmpsb
mov
shlb
out
mov
cld
adc
cmc
or
mov
mov
mov
xor
jmp
add
or
int3
cmp
nop
cmp
mov
mov
push
sub
sub
push
lret
insb
std
cmpsb
lods
push
movsl
std
mov
add
nop
cmpsl
dec
xlat
jb
lods
and
loope
inc
mov
dec
dec
cmp
cmpsl
lahf
out
stc
mov
mov
movsl
jb
repz
jb
loop
mov
sub
nop
push
add
int
ret
ret
hlt
xorl
pop
fs
mov
shrd
cmp
stos
daa
dec
orb
xchg
dec
jmp
imul
push
popf
pop
mov
mov
jae
push
adc
dec
sbb
lret
insb
jbe
mov
std
inc
out
push
inc
outsl
mov
jecxz
shll
stos
fimuls
push
dec
cmc
gs
fisubl
fcoml
repnz
insb
das
fmull
jnp
mov
lret
lods
adc
or
xchg
push
cs
fistps
fdivrl
dec
dec
aam
je
dec
push
and
mov
add
bswap
xchg
pushf
clc
int3
pop
inc
cmp
dec
xor
jns
sbb
add
sbb
sbb
or
mov
inc
push
pushf
imul
inc
or
rcll
dec
push
jno
loopne
mov
lcall
fsts
rcrb
call
dec
subl
test
mov
sub
pop
pop
lahf
aad
imul
enter
push
and
inc
mov
dec
int3
aaa
js
mov
xchg
outsb
fiadds
into
sbb
test
xor
popf
mov
jae
mov
into
inc
lock
mov
fnsave
iret
repz
imul
xchg
aaa
sarl
dec
lret
lea
or
and
pop
pop
repnz
push
push
inc
push
fisubl
push
or
add
sbb
int
int3
and
bound
dec
push
push
andl
inc
imul
mov
andb
mov
fwait
push
das
fbld
xor
aaa
jns
mov
jno
cld
dec
mov
fst
mov
xchg
pop
jecxz
jmp
mov
or
rorl
push
mov
int3
dec
sbb
push
mov
loop
xlat
add
cmc
add
js
push
pop
xchg
xorl
in
mov
orl
in
decb
test
das
dec
jmp
pusha
ret
das
ds
add
nop
cmc
jge
lods
jp
lock
lcall
in
rorb
loopne
inc
scas
xchg
adc
xchg
sbb
test
adc
push
andb
xchg
fisubrl
push
lea
xlat
repz
negb
aad
dec
push
add
stos
xchg
inc
add
cmp
lods
mov
jg
dec
sub
sub
ds
jp
xchg
inc
push
inc
insl
arpl
jmp
imulb
xor
push
mov
sub
dec
or
data16
testl
mov
sahf
mov
xor
xchg
or
mov
xor
enter
test
ja
test
jle
push
fists
or
pop
mov
xor
daa
jge
movsb
fcoml
pop
add
subb
xchg
ds
sbb
into
sub
inc
push
xchg
scas
sbb
jmp
dec
or
mov
les
mov
adc
dec
jle
test
cmp
and
divb
add
add
insb
xor
jmp
add
sub
cmp
pop
adc
mov
mov
inc
and
int3
sarb
add
jmp
sti
push
cs
xchg
xorl
jmp
ljmp
lret
mov
or
das
mov
jl
in
adc
mov
adc
std
inc
pop
mov
in
xlat
fwait
loopne
mov
cld
int3
popa
push
loopne
add
cld
and
or
xchg
testl
xchg
mov
pushl
mov
and
add
fidivs
mov
imul
mov
cmp
gs
lods
push
mov
out
dec
cmpsl
std
xor
or
jnp
stc
iret
xor
enter
outsl
jns
or
popf
sarb
mov
cli
pop
pop
sub
repz
movsl
stos
test
mov
dec
sub
or
add
int
mov
xor
int3
xchg
daa
sub
cli
dec
dec
scas
jns
inc
divb
lret
imulb
loop
incl
enter
mov
push
mov
aas
sub
or
xor
jg
pop
imul
enter
js
sub
jne
gs
cmp
sbb
mov
mov
repnz
sbb
push
mov
xchg
push
push
add
push
and
addr16
fildll
adc
pop
popl
pop
stc
ja
fwait
sar
push
push
movsl
in
hlt
je
notb
test
sbb
shll
out
inc
push
aad
sub
mov
jl
push
adc
mov
jp
pop
cmc
push
sub
pop
xor
sbb
cld
dec
push
dec
and
scas
fcmovne
sbb
inc
std
fs
orl
add
sub
mov
cmpsl
ret
aaa
cmp
or
loope
in
push
xchg
out
mov
shr
sbb
bound
xor
cmp
dec
and
jmp
xorl
movl
mov
iret
shr
pop
fisubs
push
repnz
jnp
dec
push
rcl
pop
test
xor
aad
pop
out
jl
mov
mov
xlat
mov
adc
jb
incb
pusha
imul
sbb
ret
fidivrs
clc
int3
xor
sbb
test
outsl
push
mov
xor
xchg
mov
push
adc
sub
ret
enter
in
xor
jmp
out
ret
dec
icebp
ret
inc
bound
fsubrs
in
mov
movsl
pop
mov
ret
ficompl
dec
cld
push
xlat
test
into
cld
cmp
jmp
jg
push
incb
fnstsw
mov
jge
les
addb
xor
in
pop
push
nop
mov
hlt
ret
imul
test
jnp
jb
mov
ds
pop
in
fldl
popf
rorl
dec
movb
dec
in
pushf
fists
xchg
mov
add
jl
cli
sbb
pop
mov
in
movsl
bound
adc
mov
decb
mov
shll
mov
xor
inc
bound
out
cli
sbb
shl
push
repz
jns
or
sbb
add
adc
fcom
mov
inc
lods
cld
lea
out
push
dec
jecxz
mul
sub
mov
adc
push
js
mov
loope
push
pushf
and
xor
int3
fimull
test
mov
xchg
lahf
test
rol
std
push
jmp
stc
andb
frstor
cmp
clc
popa
loopne
notb
insb
add
dec
les
lret
pop
pop
xchg
clc
jno
xor
cmp
mov
ficomps
mov
mov
outsl
jb
fisubrs
fnstenv
outsb
in
inc
lods
aas
push
add
jne
dec
xchg
push
cmp
cmp
fcmovnbe
negl
movb
cmpsl
ljmp
int
and
icebp
pop
inc
sbb
pop
push
mov
mov
outsb
cmp
in
adc
fidivrs
mov
jmp
leave
sbb
outsl
or
jns
lds
insb
fists
mov
dec
mov
lcall
adc
dec
shll
les
loopne
pop
mov
lds
mov
out
stc
insb
mov
icebp
cmp
mov
adc
xor
push
imul
adc
cmc
das
insb
ret
dec
leave
jp
outsb
push
sbbb
adc
cltd
mov
pusha
cltd
mov
popf
xor
das
aas
bound
iret
cli
cs
xchg
clc
in
cmp
clc
mov
push
sub
enter
sub
out
xchg
mov
sub
xchg
cmp
lcall
cmp
dec
add
shll
mov
or
or
mov
xchg
int3
mov
cltd
pop
lcall
sub
mov
in
mov
into
insl
scas
je
hlt
dec
je
stc
mov
mov
mov
sub
divb
mov
fcmovu
test
test
push
mov
jae
mov
push
cmp
popl
stos
les
jle
test
bound
in
mov
mov
mov
loopne
jne
leave
or
idivb
mov
inc
subb
cmp
or
push
stos
cmpsb
or
hlt
dec
jl
bound
xchg
fimuls
insb
xor
jne
fwait
or
in
push
rclb
mov
pop
add
lea
data16
mov
pushf
movsl
rolb
lcall
sbb
daa
mov
mov
cmp
xchg
clc
mov
fidivrl
out
mov
vpsrlw
xor
jo
scas
mov
inc
insb
lret
lea
push
inc
lock
push
xor
fldenv
out
xchg
cmpsb
scas
into
fnstsw
xor
in
inc
cmpsl
ds
rorb
dec
mov
int
imul
insl
into
mov
xchg
push
mov
test
or
jp
cwtl
incl
sbb
test
popf
adc
andl
mov
and
adcl
int
pavgb
mov
dec
mov
sub
lcall
mov
adc
xor
pop
mov
daa
dec
jnp
pop
push
stos
jle
push
add
repnz
popl
repnz
mov
scas
mov
pusha
faddl
inc
dec
adc
cmpsl
pop
leave
inc
mov
ret
push
add
and
jo
fistpl
shr
ds
jnp
cld
insl
js
loop
sbb
mov
je
jmp
push
jl
adc
jl
out
xor
in
pop
sbb
sub
pop
cmp
add
xor
push
sbb
div
imul
ss
xchg
stos
jmp
adc
inc
and
das
dec
jno
insl
jle
pop
icebp
xchg
out
iret
rorb
add
aad
gs
mov
fldt
cs
pop
mov
pusha
jbe
bound
in
fwait
mov
imul
gs
mov
call
fsubrl
mov
jno
xor
notb
mov
push
jns
and
cmc
mov
lods
jnp
push
jle
mov
pop
adc
inc
fidivrl
dec
xor
div
js
out
es
push
dec
inc
popa
inc
mov
mov
lea
mov
jnp
fdivp
fs
lret
jge
mov
cld
aad
mov
cli
popa
dec
ljmp
lods
sbb
add
cmp
outsl
pop
mov
pop
fisubl
pop
push
xor
daa
repz
mov
sar
das
sbb
mov
dec
dec
in
adc
scas
insb
xchg
add
lea
jae
and
add
sbb
leave
outsl
mov
xchg
push
mov
xchg
and
daa
arpl
loopne
ljmp
cmp
push
pop
popa
xor
popa
mov
and
hlt
testl
dec
mov
int3
pcmpgtw
add
sub
rcrb
mov
jnp
outsl
fstpt
sbbl
inc
inc
sbb
and
adc
mov
js
and
or
adc
or
stos
sbb
jge
fldcw
pop
sbb
adc
mov
fdivl
dec
jl
xchg
inc
push
sbb
sbbl
shll
sbb
insb
mov
lahf
adc
imul
and
adc
out
cmpsl
inc
mov
lds
xchg
movsl
movsb
jns
andl
jae
pop
mov
in
xor
cmp
xchg
mov
arpl
inc
mov
arpl
add
stc
jmp
sahf
ds
dec
xchg
ja
jmp
inc
pop
es
cmp
jp
pop
push
jnp
sbb
loop
inc
loope
cltd
cmp
cmp
push
mov
in
dec
push
pushf
mov
xor
mov
cmpsb
mov
adc
xor
shrl
mov
cmp
cmp
div
add
les
out
in
sahf
subb
in
repnz
into
push
xchg
or
mov
lock
call
fdivrl
movsl
pusha
dec
xchg
ss
jnp
mov
test
gs
push
mov
inc
mov
dec
xor
lret
rorl
jns
dec
stos
cwtl
ret
cmp
xor
fstps
cwtl
stos
shrb
xor
cmp
inc
pop
or
push
ljmp
outsb
xchg
fadds
in
clc
pop
pop
xchg
jae
xor
adc
lock
call
mov
jmp
test
das
sub
push
jae
aas
mov
push
adc
mov
xor
daa
pop
in
inc
enter
add
or
insb
mov
add
jne
xchg
lahf
outsb
into
xchg
sahf
dec
lcall
das
repnz
lret
rcrl
xor
es
movsl
lahf
mov
jnp
arpl
lret
add
pop
test
iret
loope
mov
add
cmp
push
int3
sbb
sahf
pushf
aas
dec
dec
addl
test
das
jbe
lahf
xchg
in
les
fildll
xor
lahf
mov
xor
adc
leave
aaa
push
pinsrw
mov
push
pusha
and
xor
inc
insl
adc
mov
jns
cmp
gs
jnp
cwtl
pushf
or
les
adc
mov
scas
and
shrl
or
stos
jle
or
cmp
xchg
fadds
mov
jnp
out
xchg
mov
andl
cwtl
fmull
adc
or
into
stos
inc
jae
mov
mov
fwait
dec
sarl
and
or
int
iret
dec
or
out
std
mov
lea
icebp
iret
addr16
sub
xor
pop
les
push
sahf
sbb
hlt
xchg
cmp
and
fcomps
pop
lret
vphadddq
sbb
jmp
xor
sbb
aad
lar
add
and
hlt
imul
cmp
daa
sbb
mov
stos
inc
orl
mov
loop
call
in
das
mov
loope
inc
loope
ror
push
cmp
push
xlat
jo
std
jo
insl
adc
sbb
push
jp
cwtl
imul
movsl
xchg
inc
cmp
mov
cmp
filds
cmc
mov
xchg
ljmp
pop
nop
sub
sub
jnp
pop
mov
sahf
sbb
cmp
sbb
mov
out
push
sub
mov
mov
iret
cmpps
stos
mov
dec
add
pop
test
ja
movsl
pop
cmp
mov
scas
adcb
daa
insl
inc
aaa
mov
pop
into
cmpsl
cli
fucomp
inc
xor
jns
stc
lret
jle
orl
fcomp
std
mov
les
pop
mov
pop
push
rcl
nop
mov
cmc
in
cwtl
xlat
mov
loope
fsubr
jp
lret
pop
mov
jne
mov
add
mov
mov
popa
outsb
push
xor
ja
cltd
mov
xchg
and
push
pop
repnz
je
xor
jl
mov
sarb
xor
stos
push
mov
dec
dec
shrl
inc
cmp
popf
shlb
ss
and
aad
jns
xor
push
movsl
push
or
inc
mov
arpl
lods
cmpb
dec
mulb
decl
mov
call
mov
aam
mov
mov
mull
out
cmpsl
loopne
push
decb
xchg
sub
or
xor
add
daa
add
stc
or
rolb
fdiv
adc
lea
sbb
sbb
sbb
push
push
add
repnz
test
and
xor
pop
and
ss
add
sub
stos
insb
mov
jne
in
jecxz
add
xor
sbb
inc
pop
lahf
pop
aas
inc
cmp
outsb
loop
inc
addl
aam
mov
add
arpl
ss
cmpsl
imul
std
jns
jmp
add
stos
inc
cltd
jg
cmp
in
mov
dec
and
mov
xor
lret
stos
scas
inc
pop
add
repnz
sbb
sarb
xchg
jge
outsl
inc
cmp
idivb
aad
icebp
sbb
sbb
cmpb
push
xchg
dec
xor
sbb
std
addr16
leave
mov
pop
mov
sbb
pop
cmp
and
stc
ret
les
dec
xchg
xchg
dec
clc
sub
ds
mov
xchg
daa
adc
add
sbb
je
adc
call
mov
mov
scas
push
in
ljmp
cmp
sub
add
repnz
mov
lock
mov
lds
mov
jmp
adc
test
xchg
jg
jecxz
mov
xchg
cmp
pusha
adc
sub
cltd
inc
sbb
xchg
and
adc
outsl
jno
push
jl
ss
fisttps
bound
repz
scas
lcall
out
mov
lahf
dec
sub
aas
pop
pusha
add
mov
insb
pop
in
push
dec
adcl
inc
sbb
test
ret
dec
sub
fwait
pop
xlat
push
movsb
cs
jb
inc
mov
sbb
jg
pusha
jno
insb
mov
leave
push
inc
push
std
ret
inc
cmpsl
dec
ljmp
gs
mov
ja
mov
test
adcl
jge
bound
je
xchg
sahf
rcrb
test
adc
jo
dec
and
fsubrl
xchg
sarb
pop
cmp
je
js
or
mov
jmp
inc
shlb
pusha
mov
mov
or
xor
adc
movsb
rclb
or
roll
xchg
clc
test
mov
inc
fimull
and
cmp
sar
cmp
clc
ds
outsb
cld
push
sbb
idivb
into
gs
iret
adcl
sub
sub
lods
lock
fadds
lret
jg
fs
movsl
adc
xor
xor
fisubl
cli
adc
jmp
jl
lahf
loopne
das
mov
add
add
mov
loope
in
or
test
pop
jae
cmp
hlt
scas
iret
jbe
pop
lret
mov
pop
sbbl
mov
push
popf
fs
aad
push
mov
fsubs
dec
loopne
gs
imul
xchg
pop
inc
mov
pop
mov
cli
fisttpl
shl
outsb
cmc
fisttps
ljmp
and
cmp
imul
mov
bound
sbb
arpl
mov
repz
push
rcrb
mov
ss
mov
inc
nop
ror
rorb
popa
xchg
inc
cld
xchg
mov
in
sbb
test
sbb
cmp
repnz
pop
sbb
adc
xor
push
mov
daa
cwtl
andb
inc
push
push
outsb
dec
pusha
jge
sbb
and
xchg
inc
arpl
add
ret
dec
push
add
negl
cmp
jae
sbb
roll
pop
mov
jp
sub
mov
outsl
hlt
cltd
popf
add
mov
scas
ud0
pushf
into
xlat
and
test
push
data16
xchg
loop
jecxz
orb
push
sub
fistl
jmp
push
adcl
xor
dec
push
call
inc
sbb
lcall
sbbl
jmp
je
data16
jle
cmp
dec
mov
cmpl
fsubr
jle
popf
adc
fsubl
push
rolb
movsl
pop
out
sbb
mov
popa
fadds
or
in
or
adc
cmp
push
insl
in
std
mov
xchg
aam
fidivs
rcl
mov
cmpl
push
lods
inc
dec
leavew
shl
movsb
mov
repnz
sti
sub
xor
mov
xchg
out
test
ret
and
imul
add
push
inc
movb
or
imul
cli
popf
sbb
jmp
xchg
int3
dec
pop
sarb
cmc
xchg
mov
into
nop
sti
aas
cmpl
or
aaa
lret
clc
mov
jbe
cld
popa
inc
mov
in
jle
and
cmp
pushf
jo
das
jne
stc
pop
inc
movsb
in
and
mov
and
add
das
inc
lock
adc
jmp
xchg
push
mov
loopne
mov
aas
cmp
cmpsb
fisubs
sbb
aam
or
out
orl
je
inc
sub
int
aad
int
pop
mov
mov
dec
sub
ret
aad
pop
aam
lahf
in
or
mov
test
das
mov
push
shll
jl
stc
lret
cmp
or
xchg
popa
sub
jo
nop
lcall
in
notl
ljmp
mov
sti
adc
xchg
jo
out
sbb
lret
mov
add
add
test
call
push
arpl
sub
cmp
das
xor
dec
mov
nop
xor
scas
fdivl
jp
inc
cmp
xor
sub
popa
lahf
adc
xchg
adc
dec
xor
int3
cmp
imul
dec
shl
xor
movsb
rclb
data16
addr16
xchg
xchg
jge
pusha
int
rolb
fs
jmp
lock
mov
add
mov
mov
shrl
movzbl
sarb
jb
loope
lcall
jnp
test
jge
pop
dec
push
xchg
cltd
dec
cmc
call
add
adc
mov
inc
sti
inc
call
cwtl
cmpsb
inc
xchg
rclb
mov
mov
xchg
inc
cltd
pop
lcall
sub
xor
jg
aas
mov
xor
jno
outsb
lds
jle
mov
movsl
fistpl
mov
dec
cwtl
shrl
aaa
push
sbb
daa
jp
in
aaa
add
cmp
das
testl
loope
mov
test
jl
addr16
test
mov
and
popf
inc
popf
mov
push
orb
jae
insb
gs
inc
jbe
lahf
pop
loopne
pop
dec
mov
inc
loope
mov
in
xchg
fwait
push
mov
iret
mov
xor
dec
xchg
xchg
aad
mov
outsl
jnp
lds
or
ljmp
jle
sub
adc
scas
or
push
stos
mov
lret
push
jnp
inc
fs
adc
or
les
jle
int
int3
icebp
and
xor
adc
dec
inc
std
cmc
inc
ret
movsl
jmp
jg
dec
aaa
xor
xchg
adc
nop
pusha
test
cmc
ficoml
outsl
mov
fwait
and
in
je
xchg
push
sub
pop
pop
mov
pop
sbb
mov
push
push
mov
inc
or
xor
sbb
fnsave
push
outsl
dec
xchg
scas
pop
lret
mov
jge
fdivs
cmp
push
icebp
insl
fisttpl
mov
fs
int3
sbb
lret
push
outsb
repz
cmp
add
sbb
std
sub
xor
ljmp
mov
nop
dec
icebp
lret
lods
sub
sub
mov
push
in
in
insb
test
cs
mov
loop
fisubl
stc
pop
call
and
mov
daa
mov
in
dec
jnp
imul
movq
fidivs
shl
sbb
and
pop
inc
adc
sub
sbb
mov
xor
decb
push
imul
pop
out
mov
pusha
mov
cwtl
inc
add
arpl
in
and
and
and
cwtl
dec
mov
hlt
test
mov
sub
testl
loope
addl
out
movsb
mov
sbb
int
jmp
add
stos
out
cmp
xchg
out
jle
xchg
fmuls
lea
mov
xor
pop
xchg
ljmp
out
cmp
sbb
push
mov
sbb
push
jae
mov
hlt
mov
lods
repz
sahf
mulb
mov
inc
or
xlat
sbb
cli
inc
jns
sub
in
jp
inc
mov
mov
movsl
xor
sub
push
inc
outsl
icebp
mov
nop
mov
mov
sub
unpckhps
int
adc
fwait
iret
movsl
and
and
mov
popf
dec
adc
push
and
mov
pushf
movsl
scas
cmp
push
pushf
das
mov
movsl
cmp
mov
jge
ss
sub
sub
ror
inc
or
mov
out
or
mov
test
jo
fisubrs
js
dec
ljmp
pop
out
xor
rcr
mov
mov
push
cmp
out
ljmp
dec
ss
sbb
ret
sbb
dec
stc
cmp
iret
push
ljmp
jns
mov
int
or
jbe
cwtl
jb
out
pop
ljmp
orb
xor
sub
inc
cs
daa
mov
addb
hlt
adc
xchg
xchg
cmp
dec
pop
cwtl
repz
mov
dec
scas
loopne
dec
push
ds
nop
fmul
aam
xchg
or
js
xchg
cmpsl
ja
pop
jecxz
or
test
dec
repz
push
adc
mov
mov
lock
push
aam
shlb
xchg
fidivl
fwait
cmp
shlb
xadd
test
push
sub
push
inc
pop
xor
enter
adc
shll
hlt
cmc
ja
imul
sbb
je
aam
imull
test
mov
out
outsl
in
add
aad
in
lret
add
and
arpl
inc
jne
jmp
mov
xlat
pop
insb
mov
sbb
rcll
les
push
icebp
add
ret
jp
in
imul
jb
mov
in
ds
sbb
xchg
xchg
out
xlat
pop
or
and
jl
cli
out
mov
cmpsb
push
loope
or
xor
nop
or
loopne
push
lods
ds
xchg
adc
xlat
js
pop
cmp
in
jb
cli
pop
dec
push
iret
mov
add
and
mov
aam
dec
add
adc
mov
lret
fsts
adc
scas
mov
stc
adc
jo,pn
sub
mul
mov
mov
enter
loopne
mov
jo
pop
jb
imul
lds
adc
pusha
push
sti
jge
pop
push
jb
enter
mov
add
jnp
xchg
sbb
or
lahf
int3
cmp
popf
inc
jp
out
inc
mov
sbb
sbb
push
stc
movsl
movsl
push
fwait
mov
ss
push
pop
gs
rcll
in
movsl
cli
test
outsb
xchg
sub
xchg
push
jecxz
inc
or
idiv
fisubl
testl
inc
mov
pop
mov
adc
cs
scas
sbb
repnz
cmp
arpl
adc
sub
inc
pop
mov
fs
stos
iret
stos
sti
out
sub
xchg
dec
fnsave
pop
repnz
mov
sub
or
std
enter
adc
mov
jl
imul
mov
mov
jmp
lea
and
mov
cwtl
mov
dec
sti
xor
xchg
mov
jbe
int3
and
data16
out
xor
pop
clc
int
mov
cmpsl
mov
push
js
movsb
mov
adc
jmp
push
dec
cli
sub
std
jne
xlat
aaa
jg
pop
mov
jg
pop
xchg
addr16
jp
gs
xor
rorb
iret
ja
inc
xchg
stc
xchg
mov
xor
loop
push
cmp
xchg
push
bound
pop
cli
mov
add
xchg
xor
or
sbbb
rcll
mov
inc
mov
fs
mov
adc
xchg
or
fs
push
jmp
movl
mov
xor
add
pushf
xchg
mov
fistps
test
push
les
adc
cld
dec
icebp
in
mov
movb
adc
pushl
sbb
pop
jb
ja
xor
movsb
xor
hlt
negb
outsb
pop
mov
lods
push
arpl
sbb
mov
sub
enter
cmc
xchg
cmp
mov
sub
in
repz
cmp
cmpsb
sub
cmpsl
movsl
sbb
lret
sbb
push
shr
mov
out
daa
inc
test
sbb
rclb
xchg
movsl
jmp
jge
repnz
out
pop
repz
cltd
mov
fimull
fistps
insl
xor
sub
lds
sahf
je
scas
rolb
out
testl
pop
mov
icebp
inc
mov
add
scas
inc
mov
xchg
cmp
fimull
in
mov
sbb
ret
pushf
mov
push
lea
sub
ret
adc
xchg
jnp
sub
mov
mov
orb
subb
inc
clc
cld
rorb
pop
mov
mov
in
xchg
arpl
mov
inc
cwtl
daa
and
scas
push
in
lcall
orl
mov
popf
jle
push
arpl
xor
sub
addr16
in
pushf
pop
xchg
add
mov
lods
push
xor
mov
les
lahf
push
sbbl
sbb
cmp
sub
add
or
aas
xor
movsl
movsl
adc
shrl
arpl
mov
rorb
rcr
andl
andl
push
or
test
icebp
pusha
ret
pop
iret
mov
fwait
mov
sub
mov
lock
adc
mov
xor
mov
xchg
xchg
jecxz
push
fistps
lret
or
adc
mov
push
xlat
push
inc
pop
add
nop
andl
mov
and
pop
dec
daa
loopne
push
sti
pushf
or
pop
push
hlt
scas
lods
test
pop
aas
dec
je
xchg
push
pusha
subl
cmp
mov
lret
or
mov
icebp
sub
loop
mov
dec
fidivrs
or
pop
int
inc
dec
pinsrw
xor
sarb
fstpt
push
xchg
xor
enter
adc
mov
push
les
mov
xchg
sbb
xchg
bound
push
jno
inc
je
mov
inc
int
dec
mov
sbb
or
sbb
testl
cmp
push
dec
sub
pop
inc
cmp
aaa
cmp
stos
sbb
dec
mov
repnz
xchg
dec
out
iret
loopne
xor
scas
wrmsr
inc
ret
test
pop
xor
insl
adc
push
jg
and
jp
dec
mov
or
mov
fistl
jmp
xchg
pop
inc
push
add
push
sbb
add
movsb
out
cmp
mov
aas
adc
xchg
inc
out
inc
out
cmp
jbe
adc
pextrw
add
lds
cmp
out
inc
add
xchg
lahf
aas
int3
xchg
mov
xchg
cli
movsl
xor
xor
mov
sub
dec
dec
or
fwait
clc
pop
jno
ljmp
pop
adc
fisttpll
sbb
xorb
cmp
mov
mov
jns
pop
popa
jle
hlt
xchg
and
jecxz
or
jmp
xor
cs
xchg
addr16
mov
lock
nop
xchg
xlat
test
es
ret
lcall
xchg
mov
adc
mov
stos
add
lret
sub
mov
push
jg
jb
sbb
ror
mov
inc
mov
pushf
push
clc
mov
inc
outsl
add
cmp
cld
adc
push
into
int3
dec
or
fmulp
fdivl
sub
add
stos
mov
idiv
insl
cmc
pop
mov
mov
sub
xchg
bound
jns,pn
jo
bound
pop
add
push
pop
out
pushf
fcoml
and
lcall
xlat
es
xchg
into
ficoml
push
je
in
mov
dec
or
and
dec
sbb
and
test
xor
lcall
addr16
dec
popa
push
add
iret
test
xchg
or
mov
sbb
jbe
mov
dec
jb
les
mov
push
push
add
mov
add
insl
adc
repz
xor
mov
pusha
lret
jg
pusha
aas
push
and
aaa
jae
inc
es
jmp
lcall
hlt
jge
cltd
jnp
mov
xor
sub
xlat
cld
adc
mov
xor
mov
push
xchg
in
mov
jno
mov
idivl
push
imul
push
loop
or
jecxz
insb
jp
cmp
aad
das
mov
inc
nop
outsb
repnz
mov
rcrl
push
into
pop
sub
mov
push
xchg
pop
aam
mov
cli
nop
pop
loope
xchg
iret
imul
xchg
iret
bound
sbb
jmp
mov
push
mov
lahf
xor
pop
push
sbb
xor
mov
imul
jno
es
imul
mov
sbb
fucomp
xchg
into
cmp
cmp
popl
dec
shr
data16
imul
mov
push
outsb
add
xor
pop
mov
add
loope
sarl
xchg
je
fwait
imul
je
fwait
shrl
frstor
mov
push
or
jl
sub
adc
mov
or
fwait
leave
fsubs
sbb
push
push
push
and
xchg
or
in
adc
and
ljmp
or
mov
pop
cmc
jno
clc
fbld
adcb
jae
repnz
pushf
mov
and
dec
xchg
inc
jecxz
jmp
cld
pushf
test
movsl
mov
out
sbb
lea
into
fsubrs
ljmp
dec
pop
jbe
or
inc
or
inc
ss
pop
ret
into
daa
js
push
popa
jg
movsb
rorl
adc
shrb
xchg
outsl
lret
jmp
aam
adc
push
into
mov
pop
xor
add
lock
popf
and
dec
fimuls
jle
cmp
and
xor
insb
or
sbb
mov
idivl
xlat
iret
adc
cmp
xchg
push
add
les
ja
popf
mov
sbb
jmp
cli
loope
xor
mov
mov
adcl
dec
cmp
jge
add
xchg
inc
jmp
jne
xchg
mov
scas
jno
scas
jbe
dec
ljmp
js
add
lea
mov
cmp
ljmp
pop
scas
inc
inc
popa
xchg
pop
jae
mov
mov
and
mov
leave
imulb
loop
add
stos
out
mov
jge
push
jge
add
pop
shll
dec
lret
int3
mov
add
or
arpl
daa
jno
leave
xor
bound
cmp
xchg
mov
xor
fcmovb
sarb
xchg
ret
fwait
and
bound
pop
addr16
icebp
mov
pushf
outsl
mov
daa
ret
ret
mov
cmp
fisubrl
jg
push
dec
cmp
ret
adc
popa
out
inc
cmpb
fs
aad
sub
pop
fsubrl
or
pop
popa
loope
jne
xchg
mov
cmp
xchg
mov
mov
cmp
push
sbb
or
jg
xorb
push
neg
add
sbb
fcoml
out
fdivrl
mov
adc
fucom
and
out
scas
in
add
mov
lods
jb
xchg
push
sahf
sets
rclb
leave
ljmp
je
mov
dec
mov
mov
aad
mov
xor
dec
adc
inc
mov
push
data16
cmp
add
shrl
rcrl
sub
mov
or
adc
fmul
movsb
call
jo
sub
or
repnz
ljmp
mov
push
pushf
xor
lea
test
enter
int3
nop
imul
aad
cmp
xchg
inc
xchg
scas
sub
mov
pop
incb
pop
inc
mov
xchg
xchg
test
iret
repnz
adc
dec
cs
dec
jno
aad
adc
les
out
stos
push
mov
addb
push
xorl
dec
sarb
xor
lret
and
rclb
test
or
lock
lods
inc
cmp
rcll
cltd
mov
xlat
push
xchg
xchg
jl
sbb
inc
xchg
mov
jno
jg
aad
or
cmp
dec
repnz
xor
cli
xchg
rcrl
mov
adc
scas
cmp
and
mov
push
dec
push
adc
add
movsl
pop
nop
fnstsw
fisttpll
or
test
mov
cmpb
dec
test
push
stos
sbb
xchg
fsubrl
int
test
pop
fxch
rcrb
aad
jns
mov
and
sbb
inc
or
dec
adc
mov
dec
sbb
mov
and
fsts
mov
push
or
add
add
lcall
sub
loop
insb
jg
pop
and
imul
in
inc
push
push
xorb
and
int3
mov
jl
movsb
dec
ret
jb
ljmp
jnp
mov
xchg
loope
data16
and
cmpb
iret
inc
call
scas
pop
loope
pop
ss
stos
int3
sbb
subl
mov
loopne
jae
test
in
insb
xchg
movsl
mov
pop
repz
push
test
fidivl
jle
clc
mov
addr16
add
mov
add
dec
sub
pop
scas
xchg
out
push
int3
insl
cmpsb
out
inc
hlt
fstl
scas
shll
decb
mov
dec
pop
ds
test
pop
or
sbb
pop
mov
jae
aaa
in
andb
pop
in
testl
mov
or
jne
sbb
pushf
lret
pop
dec
push
adc
test
fldl
in
or
sub
pop
jno
mov
lock
sub
icebp
jo
pop
fdivl
bound
dec
ss
inc
sbb
xchg
pop
push
and
jl
int3
pop
lret
push
sub
shlb
dec
lea
jl,pn
jbe
subl
rorb
inc
sbb
xlat
dec
and
stos
jge
rclb
dec
andl
cmpsl
sbb
shl
movsb
jb
and
cmp
in
test
jns
outsl
sub
repz
test
mov
jns
sahf
or
and
insl
and
xchg
push
pop
mov
addr16
test
add
aam
add
into
aas
pop
sbb
dec
or
fidivrl
xchg
je
push
js
out
cmpsb
ja
xchg
push
adcb
cli
xchg
mov
pop
addr16
inc
lods
lods
mov
jecxz
ror
out
popa
pop
dec
mov
xchg
movsb
das
inc
inc
dec
loope
push
stos
inc
mov
or
into
push
push
insb
jno
gs
inc
xor
dec
push
jo
ss
ds
nop
mov
jns
push
adc
or
rorb
popa
fwait
dec
das
scas
inc
ret
and
std
negl
sahf
clc
aas
fxtract
sbb
xchg
aam
in
fstps
mov
fidivrl
adc
mov
jbe
ret
cld
mov
mov
dec
in
cmp
and
test
push
xor
lods
rcrb
adc
mov
outsl
xchg
arpl
imul
dec
dec
aas
or
and
and
push
lea
mull
pop
jmp
xchg
cmp
xchg
bound
mov
cmp
insb
movsl
movd
gs
xchg
ljmp
shrl
cs
dec
inc
inc
add
sbbl
jmp
int
stc
sar
neg
incb
das
jmp
mov
push
nop
xorl
push
add
es
adc
add
inc
divl
and
mov
sbb
lcall
movsb
lods
negb
cmpsb
int3
dec
incl
pop
mov
adc
jne
jecxz
call
mov
push
xor
gs
push
xchg
sbb
ss
je
sub
scas
fistpll
scas
mov
cld
and
jp
add
or
and
cmp
scas
or
cltd
movsl
dec
sub
mov
xchg
mov
loope
inc
outsb
xchg
out
or
xor
jmp
cmp
addb
call
dec
insb
add
in
icebp
cmp
andl
je
clc
repz
lret
hlt
mov
xor
xchg
std
dec
mov
xor
cmp
icebp
jl
mov
jle
xor
dec
movsl
mov
and
jecxz
add
dec
out
add
jmp
enter
nop
lahf
or
inc
fisubrl
add
and
push
cmpl
dec
inc
aas
in
lock
out
jnp
lret
leave
lds
pop
nop
mov
and
adc
addr16
fstpl
xlat
fadd
push
mov
std
fisttps
cmp
jnp
sbb
mov
adc
sbb
rcrb
jo
inc
add
sub
and
inc
inc
mov
adc
fidivl
mov
push
sbb
mov
rcll
fldenv
xor
sub
ljmp
aas
pop
ja
outsb
outsb
fwait
add
inc
mov
fwait
pushf
mov
adc
lds
xor
dec
lahf
sub
cmp
shlb
cwtl
enter
fistpll
and
pop
pop
lods
insb
es
and
push
lahf
cmp
pop
test
cld
jns
mov
outsl
pop
mov
dec
ret
xchg
fistpl
icebp
in
movsl
cmp
mov
mov
xor
daa
sar
inc
xlat
jo
pop
or
fisttps
and
pop
and
shrl
or
mov
pusha
push
stc
mov
fildll
pop
bswap
test
sarb
or
lea
lret
test
mov
xor
add
jp
aaa
adc
xor
xor
sahf
and
xchg
fisttps
int
cli
fmull
add
loopne
js
roll
sahf
out
cmpsl
dec
fistps
xchg
cmc
out
sub
mov
add
cmp
jns
pop
pop
ret
movsl
in
push
xor
pop
inc
loope
test
aad
cwtl
sbbl
mov
stos
aam
int
jne
jle
jns
das
cmp
mov
je
sub
push
xchg
data16
xor
mov
or
out
fmul
dec
adc
mov
or
mov
mov
push
sbb
dec
rorl
and
pop
mov
sub
stos
dec
lds
insb
push
aas
repz
push
mov
mov
enter
nop
sub
jne
xor
mov
jg
rorl
xor
xchg
cmp
or
out
jo
dec
adc
sbb
inc
int3
inc
lret
add
mov
iret
out
rorb
aas
or
push
lcall
les
push
cwtl
outsb
mov
mov
jb
mov
stos
add
iret
movsl
xchg
cmpsl
sbb
leave
dec
cmp
fdivp
ja
mov
in
mov
cwtl
push
testl
xor
xchg
push
push
lods
or
pop
loope
push
sub
jge
movsb
pop
cmp
mov
loop
mov
dec
push
lret
or
xchg
pop
add
in
xchg
sar
stc
outsl
inc
sub
xor
xor
lret
mov
ljmp
xchg
xor
xor
dec
xchg
imul
shrl
sub
shll
int3
fsubl
loope
sti
push
call
cmp
jge
jle
pop
or
dec
push
bound
out
shr
sub
cmp
push
inc
imul
daa
and
jp
push
and
sub
std
lahf
lcall
add
adc
mov
sbb
fcomps
add
adc
cmp
rclb
mov
in
fs
pop
out
jmp
sub
jg
sarb
arpl
test
sti
xchg
cmpl
jno
jno
jns
xchg
cmc
sub
jecxz
jmp
dec
mov
jnp
mov
dec
call
bound
mov
es
leave
lods
loope
jnp
push
lcall
add
dec
lods
jl
mov
insl
ret
lea
enter
ret
pusha
sahf
stos
pop
pusha
loope
loopne
jne
xchg
add
flds
lds
lock
mov
push
jb
inc
adc
pushf
jmp
push
cld
adc
dec
sbb
bound
mov
inc
out
jmp
dec
aaa
cli
push
and
repz
or
xor
in
dec
int3
dec
xchg
mul
sbb
push
aad
sbb
push
fsubr
mov
push
mov
pop
fwait
es
xchg
sti
mov
dec
mov
or
ret
mov
out
ret
push
pop
nop
or
push
sub
or
sbb
dec
jmp
add
pop
gs
loop
sar
iret
or
push
popf
scas
aaa
dec
pop
filds
std
push
push
inc
cmovg
insl
imul
push
xor
jb
dec
sarb
sbb
andl
ja
lea
cmpsl
pop
les
inc
jge
scas
into
mov
int
xchg
call
fs
and
xchg
inc
cmpsb
sbb
pop
fcomps
cmp
out
fiaddl
mov
pop
into
sbb
mov
out
bound
sbb
jne
mov
mov
adc
sub
xchg
sbb
imul
out
dec
jb
jg
xchg
sbb
mov
test
test
jae
add
lods
inc
jle
jmp
xor
or
mov
insb
jmp
ss
ret
jge
mov
in
xlat
inc
mov
push
sub
mov
test
lds
mov
insl
mov
add
cmp
or
push
decb
inc
adc
push
dec
fwait
ja
rcrl
call
xor
dec
jae
setg
xchg
pop
lods
sub
mov
rol
push
pusha
xchg
je
adc
mov
std
pop
mov
in
out
jge
or
mov
scas
sbb
stos
jbe
imulb
test
push
icebp
inc
mov
loop
rolb
test
lods
jecxz
test
rdtsc
xlat
pop
jno
pop
mov
mov
in
xchg
xchg
push
inc
in
fidivs
sbb
add
xchg
clc
std
daa
jno
loop
movsb
pusha
not
and
jno
mov
std
adc
fadds
scas
push
test
or
jp
pop
das
bound
xchg
rcrl
mov
dec
jbe
pop
jmp
push
mov
das
jb
clc
dec
mov
dec
push
shll
jle
les
outsb
xor
lods
fcompl
mov
dec
push
xchg
pusha
es
ljmp
sbb
cmp
sub
adc
sub
popa
and
insl
or
jno
or
cltd
outsl
dec
shll
shll
loope
fstl
lock
daa
mov
testb
and
lods
xor
inc
jle
jb
rep
jno
lcall
and
dec
push
sti
outsb
arpl
jno
mov
add
popf
and
jnp
mov
add
psubw
fsubp
aam
decl
jno
add
loope
fs
fiaddl
addr16
mov
pop
popf
leave
insb
pop
mov
fcmovnb
jo
out
and
xchg
dec
ret
jg
jo
add
aaa
insl
or
clc
and
and
std
jle
and
and
push
add
pop
jg
push
dec
xor
push
cwtl
and
fdivrs
adc
xchg
pop
popf
lods
std
in
mov
fisubl
dec
mov
mov
hlt
test
xor
pusha
inc
lock
or
xchg
scas
inc
jecxz
or
in
jno
mov
mov
das
inc
push
jg
imul
sub
inc
int3
inc
mov
sbb
cmpsb
loop
sbb
inc
faddl
or
jmp
push
inc
out
ja
testb
cmp
data16
pop
sarl
out
in
jge
jl
mov
les
movsl
int3
imul
lea
inc
enter
xchg
test
push
rclb
lods
mov
cwtl
adc
cmp
nop
sbb
or
dec
inc
or
nop
mov
icebp
jae
outsl
pop
lea
pop
adc
cwtl
mov
out
pushf
ficoml
js
add
sbb
pop
or
mov
adc
cmp
dec
loopne
xor
mov
dec
out
pushf
loop
mov
ja
jo
repz
loope
sub
nop
in
inc
lock
cli
pop
test
stos
cmp
inc
xchg
icebp
stos
stc
rcl
sub
mov
ret
pop
xorl
sbb
pop
lea
sub
mov
leave
push
hlt
fmuls
xor
push
aad
push
inc
aam
lock
sub
scas
mov
stos
push
inc
pop
inc
xor
lret
out
out
ds
ljmp
and
out
inc
lret
sub
push
mov
imul
cmp
sub
jecxz
sub
sub
les
ret
ret
pop
cmp
jle
xor
int3
pop
mov
loop
stos
cmpsb
add
mov
jge
push
das
jne
jo
add
pop
dec
adc
xchg
adc
cmpsl
or
into
out
mov
and
repz
testb
jmp
lock
or
es
dec
loope
xchg
add
loope
inc
in
test
repnz
sub
adc
dec
cmpsl
push
outsb
hlt
cld
cmp
or
out
ret
pop
ret
aad
mov
sub
pushf
sbb
xadd
inc
sbbb
adc
pop
and
js
mov
push
fcmovnu
ljmp
ja
push
adc
and
aam
add
aaa
les
les
pop
dec
fcompl
andl
jae
icebp
movsb
in
xchg
std
ret
and
xchg
cmpsb
sub
pop
in
jge
ficomps
cmp
jae
shlb
sarb
cmp
rclb
fstpt
xchg
mov
enter
xor
in
cmp
or
loope
mov
scas
and
xor
sbb
loope
shlb
push
mov
and
jmp
sub
xchg
xchg
lea
sets
dec
cltd
and
loop
movsl
mov
testl
stc
mov
mov
sub
inc
push
cld
adcl
in
push
js
pop
loopne
mov
bound
repz
pop
sar
lea
xchg
mov
pop
loopne
adc
sub
mov
aad
add
jae
or
or
inc
into
lock
or
sub
lds
lahf
jbe
fcomip
add
out
dec
push
cmp
lcall
int3
inc
aas
and
sti
loopne
cli
jg
push
insb
lock
gs
fists
xchg
inc
inc
clc
sub
mov
cli
jle
jnp
sub
scas
adc
jmp
or
or
fmuls
sti
ljmp
mov
lea
or
mov
inc
repnz
mov
pop
in
sahf
movsb
loop
mov
mov
dec
or
cmp
push
jbe
xor
lret
repz
fdivrp
mov
lret
cmpsb
push
cs
movl
jnp
iret
jne
xchg
add
in
or
mov
push
or
xchg
cmp
or
sub
gs
mov
dec
test
push
add
fsubs
inc
aas
cmp
fiaddl
push
hlt
scas
cltd
pushf
cmp
mov
dec
pop
jne
clc
xchg
adcl
daa
shll
sbb
stos
loop
xchg
mov
push
jle
cmp
test
and
insl
jbe
cmp
or
js
inc
adc
sbb
and
or
pop
jp
repnz
mov
ds
lods
jnp
je
lahf
mov
test
mov
jge
nop
xchg
rcrb
inc
mov
jl
sub
rorb
push
cmp
ja,pt
inc
sbb
test
mov
jb
mov
add
inc
ljmp
cld
xchg
xor
rolb
lock
add
inc
loop
xchg
lods
xchg
js
dec
pop
js
cmp
adc
xlat
adc
inc
test
inc
dec
outsb
mov
scas
pop
stos
icebp
dec
jns
adc
ror
repnz
sub
xor
out
ror
dec
push
mov
cmp
ret
adc
enter
ret
inc
cwtl
imul
or
push
xor
add
push
std
jecxz
mov
cmp
jg
push
push
decb
or
dec
pop
in
push
mov
shlb
pop
mov
mov
xchg
sbb
sbb
ret
xor
push
jb
push
and
loope
fs
mov
or
clc
pop
pushf
aam
movsl
push
roll
xchg
jge
call
inc
lds
into
xor
mov
sbb
push
fstp
int3
cld
xor
pop
js
cmp
div
dec
imul
jge
ss
popf
loop
jg
jl
cmp
push
add
loop
sbb
jb
aad
add
lea
pop
aaa
sahf
jo
pop
or
mov
lea
xor
ljmp
pop
xor
fistl
test
pop
mov
push
mov
test
das
inc
fs
push
add
aaa
jne
nop
mov
jg
xor
lcall
aam
cmp
sti
shlb
xor
fimuls
in
push
ds
rcr
xlat
outsb
mov
loope
imul
dec
xor
inc
pop
jne
or
lret
pusha
test
pop
pop
push
cmp
jne
ljmp
jmp
and
xchg
sbbb
sub
push
pop
mov
incl
adc
mov
mov
sub
mov
sbb
add
xor
jecxz
cmpsl
fbld
imul
mov
pop
sahf
push
or
lock
mov
and
and
and
test
xor
lcall
adc
out
xchg
push
out
sti
cmpsl
dec
push
mov
adc
out
loopne
fmuls
adc
inc
pop
jo
xchg
incb
mov
cmp
push
pop
daa
sub
mov
subb
data16
xchg
sub
ja
sub
mov
inc
xchg
jmp
add
stos
xchg
mov
jp
push
xchg
daa
movsl
in
repnz
out
xor
and
pop
bound
sub
adc
pushf
subb
jnp
fwait
out
mov
sbb
roll
mov
aam
mov
adc
je
push
xchg
fisttpll
movsl
cwtl
mov
jl
xchg
mov
fdivrs
outsl
sbb
iret
jo
pushf
repnz
scas
pushf
pop
stc
shlb
hlt
test
jne
cmp
inc
push
fucomip
inc
popf
xchg
and
jge
daa
es
cmc
or
jp
lds
adc
gs
cmc
scas
subl
dec
push
fucomp
pop
xchg
sub
imull
loopne
xchg
sbb
adc
jnp
dec
lea
inc
push
mov
outsb
inc
cmpsl
scas
push
int
mov
ds
pop
xchg
in
mov
aad
sbb
or
stc
out
or
call
sub
cmp
out
mov
cli
push
mov
xor
add
dec
xor
mov
lret
sbbl
mov
ja
loope
push
cmp
in
xor
jb
sbb
xchg
cmpsb
jae
xchg
pxor
je
std
jb
cmpsb
xchg
int
mov
cltd
mov
nop
jo
aam
in
xchg
inc
scas
outsl
outsl
jle
inc
pop
xchg
jg
mov
outsl
fldcw
repz
jecxz
ljmp
iret
xchg
mov
sub
adc
pop
pop
data16
clc
mov
out
rcll
mov
je
inc
rorb
adc
inc
inc
inc
xor
cltd
fcoms
or
adc
iret
das
xor
lret
and
lods
mov
das
test
outsb
and
add
cwtl
sub
fsubrl
pusha
or
xor
mov
add
inc
jmp
fistps
push
inc
dec
or
xchg
jge
sbb
pop
repz
cmp
push
je
mov
out
stos
pop
xchg
adc
out
pop
jg
sub
mov
mov
idivb
lret
mov
jnp
pushf
enter
push
stos
das
pop
jp
fisubs
ret
sub
add
push
std
lds
subb
cmp
ds
or
and
outsl
scas
push
lds
sub
add
fidivrs
fidivrl
call
test
mov
fists
sbb
mov
mov
mov
adc
movsb
movsl
mov
leave
jle
out
xchg
inc
js,pn
scas
nop
push
cmp
mov
jecxz
and
fs
aad
inc
push
lahf
std
jge
lods
lret
je
inc
pushf
jno
or
or
fiadds
popa
in
fstpl
mov
mov
movsb
sbb
xor
sub
movsl
in
xor
push
pop
push
add
outsl
ret
out
pop
pop
dec
push
dec
loopne
fs
xchg
ss
pop
insb
xchg
mov
lahf
xchg
sbb
mov
stc
xchg
dec
inc
push
pcmpgtd
adc
adc
js
jb
cmp
call
xchg
push
hlt
mov
das
mov
sbbl
sub
mov
mov
pop
fisubrl
mov
lods
push
in
shrl
inc
imul
xchg
insl
pop
mov
pop
jmp
inc
mov
scas
push
adc
jns
jne
popf
and
addr16
push
and
mov
jle
inc
jbe
in
dec
js
mov
jp
test
push
outsb
lods
mov
sbb
mov
in
daa
push
pop
hlt
or
daa
mov
jbe
xor
mov
and
mov
xor
adc
adc
iret
pop
pop
jno
pop
mov
mov
test
and
std
adc
lret
ret
push
xor
jmp
aas
shlb
pop
xor
lcall
adc
lock
into
or
pop
xor
pop
push
push
hlt
mov
ror
cli
adc
and
and
daa
mov
lret
cmpsb
jg
lret
test
pop
or
mov
std
push
cs
mov
xor
xchg
mov
xchg
lret
int3
jg
inc
ja
test
xor
lcall
jne
adc
jp
mov
pop
jnp
es
negl
lods
idiv
icebp
lret
mov
sub
into
mov
sub
inc
rorl
mov
pushf
ret
jg
movl
in
and
addr16
push
and
xchg
xor
or
sub
xor
xor
fs
stos
adc
or
inc
int
repnz
lock
mov
sbb
imul
loop
push
sbb
int
mov
xchg
lret
aad
xor
fwait
movsl
in
outsl
mov
pushl
divl
out
test
nop
or
jo
xchg
xchg
push
cmp
sub
enter
mov
mov
pushw
int
fs
pop
clc
pop
sbb
or
fsubrs
jno
fldl
add
jmp
fisttpl
xchg
cmpsb
std
pop
mov
cwtl
in
data16
pop
sub
inc
push
sbb
sbb
das
dec
jns
lret
jb
adc
sbb
pop
jecxz
les
xor
std
or
mov
xchg
inc
mov
add
xchg
dec
xchg
xchg
jbe
popa
or
mov
and
jmp
insb
inc
mov
mov
jo
lods
mov
nop
sbb
js
mov
cmpsb
dec
mov
lds
mov
fs
cmpsb
push
test
xchg
scas
pop
mov
xor
pop
jp
add
sbb
int
fcmovbe
xchg
sbb
fdivrl
subb
mov
mov
shl
mov
sub
testl
imul
xor
jno
push
loopne
add
cmc
add
sbb
test
daa
adc
mov
mov
jg
loopne
ja
sbbl
mov
sbb
loope
add
ss
test
cmp
sub
fisttpll
mov
mov
shlb
in
dec
mov
in
push
or
pop
sbb
pop
mov
mov
mov
stos
mov
cmpl
sbb
xor
pop
gs
imul
cmpsb
jge
cmpsb
testl
pand
daa
xchg
mulb
fcompl
inc
adc
cmp
cmp
adc
pop
movsb
mov
push
lods
fst
adc
aam
mov
pop
ret
mov
out
repnz
dec
xor
jno
mov
sub
mov
js
lret
or
xchg
andl
mov
fnstcw
rcrl
cmpsb
mov
insl
fsubl
jecxz
lea
xlat
int3
lahf
jne
jmp
push
cmp
ret
lods
cmpsb
dec
sub
add
scas
repz
lcall
fs
fmull
addr16
push
cli
lret
mov
add
adc
mov
adc
sbb
ret
inc
popf
lock
cmp
inc
roll
icebp
out
lea
mov
mov
movsl
ljmp
int3
lea
mov
and
rorb
pop
nop
or
adc
sbb
dec
pop
cld
sar
push
jns
inc
dec
jl
mov
xor
jecxz
pop
cmp
lods
ljmp
and
insl
sbb
mov
and
std
flds
daa
or
jl
cltd
cmpsl
mov
mov
or
jno
pop
test
sbb
cmp
insb
mov
std
sbb
lods
mov
jecxz
mov
outsl
bound
pop
pop
in
mov
stc
dec
call
xchg
push
sbb
arpl
mov
push
int3
add
and
vmovd
mov
mov
sub
and
jbe
mov
sub
sub
push
adc
gs
mov
and
dec
mov
ret
inc
push
cmpsb
test
sbb
cvtps2pi
iret
flds
test
insb
mov
mov
addr16
push
cmpsl
cmpb
out
call
push
mov
cmpsl
shufps
add
in
insb
mov
xchg
jno
popf
leave
ja
xchg
and
xor
jl,pt
fs
cmp
test
sbb
scas
mov
movsl
jl
pop
sti
mov
lods
movsl
and
cs
aam
sbb
popa
dec
push
mov
std
lods
mov
inc
jnp
cmp
lahf
js
jl
mov
adc
and
cli
lock
xchg
jb
jbe
pop
pop
mov
ret
iret
adc
sbb
push
xlat
xchg
test
nop
pop
orl
mov
xor
xchg
jae
enter
scas
outsl
dec
fcmovbe
testb
mov
lods
xor
or
jmp
xchg
jg
xchg
stos
mov
xchg
pop
cmpl
call
jl
cmp
je
mov
sub
mov
mov
or
adc
lahf
or
jnp
insl
pushw
decb
es
inc
call
shl
mov
jnp
pop
xor
js
cwtl
fldl
and
or
rcr
addr16
ds
xchg
xor
int
mov
enter
xor
dec
insl
rcll
loop
lret
fadds
aaa
xchg
pop
mov
add
insl
lret
pushw
iret
mov
push
inc
test
push
inc
xor
and
inc
cmp
lcall
xchg
sahf
push
ljmp
xor
stc
cli
xor
imul
es
hlt
movsb
cmp
jae
push
js
dec
loop
imul
ret
stos
ror
jbe
xor
cli
out
test
add
push
lahf
insb
push
subb
mov
repnz
ret
jne
adc
dec
cmovae
fwait
xchg
jbe
sub
fidivrl
push
pop
cmpl
loope
rorb
mov
loopne
rcll
insb
inc
sub
mov
xchg
cli
or
adc
dec
dec
sbb
pop
hlt
mov
movsb
fs
ret
and
orl
mov
aaa
popa
mov
mov
inc
jg
in
add
pop
jo
dec
dec
push
mov
push
in
or
inc
pop
sub
andl
sbb
repz
jmp
mov
dec
loope
mov
gs
jmp
cmpsb
out
sub
push
and
negb
sbb
fldcw
shl
rorb
cld
loopne
subb
insb
mov
push
pushf
xchg
mov
hlt
fucom
movsb
ljmp
cwtl
inc
loop
xor
or
sahf
loop
add
adc
ss
dec
push
js
lods
pop
dec
jae
mulb
in
loope
ret
xchg
jl
lods
add
cmp
repnz
mov
into
call
sbb
loop
cmp
les
movsl
movsl
mov
and
out
lods
add
push
mov
ss
sarb
cs
jecxz
ljmp
pop
mov
jmp
sub
jmp
or
xchg
dec
jnp
push
insb
lods
mov
cmp
xlat
repnz
popl
xor
sbb
hlt
cwtl
and
mov
mov
add
shl
faddl
data16
gs
ds
add
pop
fs
mov
add
push
xor
mov
dec
jae
aad
loop
cmpsl
scas
push
cmp
mov
sub
leave
sub
ljmp
xor
ss
pop
sub
sub
rolb
mov
cmp
xchg
jle
inc
es
xor
cmc
xor
rclb
cltd
adc
inc
and
aad
adc
and
jmp
incb
pop
out
adc
add
popa
xchg
popf
mov
rorb
sti
xchg
cmp
in
xchg
dec
test
ljmp
inc
ret
push
xor
pop
sahf
push
cmp
js
pop
jle
fwait
add
movsb
pop
stc
or
push
mov
nop
or
push
add
xorb
push
dec
mov
inc
mov
cmp
mov
push
loope
fcomp
mov
je
ljmp
inc
mov
hlt
repnz
fdivp
es
lock
test
popf
dec
mov
and
cmpl
shlb
jl
rcll
xchg
fstpl
mov
sbb
es
pop
icebp
dec
std
stc
nop
pushf
or
rclb
xchg
push
mov
arpl
push
ljmp
mov
js
push
adc
ja
mov
mov
adc
cmp
sbb
push
in
sbb
adcb
cmp
movsl
je
cmp
jecxz
add
mov
mov
cmp
mov
add
jbe
dec
test
mov
adc
jmp
loop
sbb
mov
pop
dec
pop
pop
xchg
aad
imul
cltd
or
fldl
cwtl
mov
mov
movsb
js
enter
inc
cmp
pop
jecxz
gs
stos
lods
xor
mov
adc
sbb
outsb
pusha
or
adc
sub
fwait
stos
loopne
mov
fwait
mov
pop
std
adc
jb
or
popa
inc
mov
mov
inc
sub
and
mov
fcomps
aad
mov
mov
clc
push
insl
add
jo
popa
jbe
adc
sbb
aad
mov
sbb
sub
out
ret
adc
popf
jo
gs
rcrb
mov
xchg
and
cwtl
xchg
or
cmp
push
push
sarb
stc
xlat
lret
sahf
lcall
rorl
mov
add
inc
mov
jg
cmpsl
mov
sub
push
xor
inc
cmp
enter
mov
pop
dec
and
push
out
xchg
outsl
icebp
sub
mov
add
outsb
pusha
and
jnp
and
data16
cmp
pop
xchg
push
popf
cwtl
dec
cltd
jmp
mov
gs
inc
mov
arpl
adc
fistpll
mov
mov
fiaddl
xchg
loop
sub
or
inc
xchg
int
xchg
aas
cltd
mov
adc
pop
es
lea
outsl
or
call
lahf
repnz
adc
loop
int
mov
and
mov
mov
cmpsb
arpl
push
inc
push
jo
sub
fisttps
ljmp
xchg
aam
inc
cmpsl
ret
out
xchg
mov
mov
push
xchg
loop
stc
je
iret
pop
cmp
inc
xor
mov
mov
or
mov
dec
stc
outsl
adc
cmp
fsqrt
push
dec
adc
or
mov
xor
fucom
and
or
pushf
xor
into
mov
sub
dec
repnz
sub
mov
je
into
push
sbb
xchg
jns
in
pop
orl
mov
cltd
or
adc
pop
or
out
lahf
mov
nop
mov
in
leave
ret
jnp
lea
or
pop
call
nop
push
lods
repnz
pop
shrb
cmp
repnz
aam
pop
mov
push
pop
test
sbbb
repz
enter
xchg
ret
cmp
es
movsl
in
jmp
fyl2x
xor
mov
icebp
inc
sbb
mov
pop
mov
sub
xchg
pop
scas
mov
fstpt
xor
add
mov
lea
inc
outsb
cmp
jmp
stos
rcrl
and
inc
setle
fistps
jnp
mov
test
cmp
out
ret
jno
insb
xor
cld
xor
in
in
or
icebp
mov
mov
pop
jg
sub
push
mov
mov
inc
pop
pop
lods
jo
mov
push
insb
pop
pop
jg
fisttps
outsb
cmpsl
fwait
push
inc
outsb
or
out
shlb
add
int
out
jo
and
filds
add
fmull
mov
xchg
cmp
mov
or
jnp
sbb
xchg
out
jecxz
xor
mov
adc
mov
scas
shll
mov
push
jb
insl
mov
and
inc
adc
imul
gs
sbb
xor
push
push
test
sub
fsubs
pop
test
js
aas
pop
testl
cmpsb
mov
jnp
aam
cmp
mov
inc
inc
adcb
cltd
fdivl
pop
cwtl
cs
bndstx
test
and
sti
movsl
xlat
cmp
push
aas
mov
inc
rcrl
jle
ret
cmp
loope
mov
outsl
lea
xchg
ret
dec
dec
in
outsb
lods
test
mov
loop
popf
xlat
dec
fstps
mov
cltd
xchg
call
jno
dec
addl
inc
xlat
cmp
pop
mov
mov
xchg
stos
js
cmpsb
xor
rcrl
daa
lret
pop
in
pop
pop
ret
sti
xchg
xor
int
fcomi
push
aam
mov
add
dec
mov
adc
cmp
ds
add
cmp
icebp
cmp
fsub
daa
mov
add
insl
and
jecxz
pop
sahf
loopne
fcos
pop
mov
icebp
pop
mov
dec
mov
jp
lea
sti
int3
pop
add
or
or
fadd
jmp
sub
mov
inc
xchg
push
gs
sub
mov
push
push
mov
int
lods
mov
pop
inc
stos
pop
pop
sub
scas
aad
mov
jb
push
outsb
mov
xor
ret
dec
add
mov
into
xchg
push
mov
rcll
lea
scas
jbe
mov
int3
jae
mov
mov
stc
push
imul
stc
push
push
sub
sub
loopne
adc
stc
adc
fisubl
add
movsl
dec
out
pop
lret
or
test
lret
mov
xor
or
daa
icebp
iret
shlb
adc
sbb
les
aam
or
and
sbb
fs
clc
dec
mov
test
not
cmp
dec
sub
add
mov
ljmp
jnp
pop
addr16
lahf
popf
adc
dec
jecxz
loope
xor
mov
sarb
enter
mov
push
jl
les
push
dec
loop
xor
ljmp
mov
mov
push
sub
jnp
inc
mov
mov
fistpll
add
fwait
push
or
aam
nop
ror
xor
cmp
jmp
lcall
leave
js
cmc
jle
push
adc
push
ljmp
pop
rorl
repz
je
icebp
and
in
inc
and
and
inc
ljmp
ljmp
mov
cmp
mov
aas
mov
inc
in
ss
lret
sub
mov
mov
push
or
xchg
pop
stos
jmp
jb
inc
outsb
loopne
roll
cmp
inc
ljmp
adc
pop
inc
aam
jns
test
shrl
xchg
mov
push
daa
jmp
testl
mov
jo
jb
mov
cmp
loop
data16
and
leave
mov
cwtl
sub
dec
xor
adc
mov
or
out
xchg
or
mov
add
sub
jb
subl
add
or
orl
sahf
mov
lods
xor
in
inc
sbb
sub
fs
adc
enter
jns
cmpb
xor
mov
fnsave
cmc
or
dec
adc
add
notl
lcall
lcall
add
in
fldl
and
sub
mov
pusha
jbe
xor
mov
xchg
cmpb
in
and
mov
sarl
mov
push
rorb
dec
add
test
aas
add
pop
pop
movsl
mov
mov
sbb
arpl
repnz
fisttpll
lret
pop
fiaddl
sbb
test
outsb
and
mov
in
movl
stos
jae
jbe
push
and
xchg
mov
cs
mov
push
cmpsb
jecxz
jne
pop
fildll
or
xor
sbb
jbe
xchg
dec
movsl
jnp
pop
sahf
movsl
aas
jbe
rcll
lds
jns
sbb
test
mov
into
mov
std
xchg
cmp
int
cltd
cmp
cmpsb
adc
cmp
inc
in
icebp
insb
repz
dec
loope
sbb
lock
sub
int3
filds
lock
and
dec
mov
xchg
pop
pop
lahf
lahf
mov
test
enter
insb
jmp
lods
hlt
iret
ret
insl
xchg
jno
and
push
imul
or
xchg
mov
in
icebp
iret
mov
dec
mov
rclb
xchg
mov
pop
sbb
sbb
push
jnp
icebp
push
push
xorb
in
or
in
movsb
jmp
pop
hlt
mov
push
pushf
leave
leave
xor
cmp
ret
in
sbb
or
adc
incb
sub
jb
dec
das
sbb
stc
jmp
jmp
add
add
mov
and
mov
enter
sbb
xlat
int3
shrb
sub
loop
push
sbb
mov
movsl
cmpsb
pusha
cwtl
mov
shr
fwait
sbb
add
jle
loop
movsb
push
inc
in
adc
loopne
jg
cltd
push
mov
ret
sbb
add
cmp
ret
int
or
jbe
out
mov
hlt
pop
arpl
bound
sub
or
jae
mov
mov
pop
jno
push
ret
add
push
das
xor
iret
and
dec
and
xchg
daa
and
movsb
cli
dec
fimull
sbbl
inc
ss
add
push
add
shlb
jl
mov
stc
shrb
sbb
push
lret
insl
mov
mov
pop
rclb
cmp
or
out
sub
fsts
fstpl
cmpsl
icebp
jl
mov
mov
jno
pop
repz
jnp
mov
popf
loopne
jno
jecxz
push
add
loop
sbb
mov
mov
fistps
dec
lods
fsubrp
jns
repz
hlt
mov
bnd
stc
js
or
xchg
pop
in
xchg
mov
scas
sbb
jge
and
ret
loop
add
push
push
jbe
push
jbe
dec
out
sub
pop
std
lret
and
ljmp
pop
xor
jb
xor
jo
cwtl
mov
bound
repnz
and
lea
push
in
jnp
lods
pop
cld
push
incl
out
xchg
mov
pusha
adc
mov
add
add
lcall
out
lods
cwtl
cld
cmp
mov
jo
jbe
mov
out
xor
movq
jae
add
push
sbb
loopne
lcall
js
push
inc
xchg
fidivrl
andb
or
cs
mov
xor
lcall
sub
mov
xchg
jl
jg
test
dec
fwait
outsl
test
jbe
gs
jne
test
and
or
inc
ret
xor
sahf
dec
in
xchg
xchg
movhlps
add
repnz
addr16
xchg
das
in
mov
sbb
out
mov
mov
lds
inc
lods
lds
subl
into
fcomps
cmp
inc
mov
cmp
and
jg
ret
hlt
adc
hlt
cmp
jo
mov
xor
jmp
push
push
scas
mov
sbb
aaa
arpl
dec
gs
jns
fidivrs
lcall
push
inc
dec
rcll
push
sahf
out
lret
adc
sbb
mov
lret
xchg
roll
cmp
dec
add
mov
lret
cmpsl
and
sub
scas
ret
movaps
sub
insl
lret
jp
pop
jge
xchg
push
scas
ror
pop
pop
fs
cmpsb
sbb
mov
mov
xchg
imul
adc
mov
imul
hlt
int
xchg
jo
mov
pop
sub
mov
mov
mov
xor
cld
push
rorb
xchg
mov
in
mov
js
and
jo
cmpsb
add
scas
outsb
aas
and
sbb
push
ror
adc
adc
cmp
cli
jecxz
mov
pop
cmp
hlt
cmp
ret
inc
in
loope
jmp
add
mov
daa
cmp
cmpsl
loopne
push
aas
pop
mov
jo
xor
pop
enter
cli
movsb
jle
frstor
push
push
es
jecxz
jo
cld
pop
mov
push
add
mov
shrl
pop
dec
push
sbb
push
mov
rcrb
inc
cmc
icebp
cmpsb
mov
inc
fstpt
sbb
inc
mov
popf
ret
jg
push
aam
add
les
pushf
mov
gs
xchg
mov
and
push
lret
or
dec
cmp
jo
push
mov
xchg
pushf
out
pushf
inc
cmp
sbb
jmp
into
pop
jge
cmpsl
cmp
mov
xor
and
in
add
mov
sbb
jmp
xchg
sahf
dec
in
hlt
lea
repnz
mov
cmp
push
and
xchg
arpl
cwtl
ffreep
or
stc
fdivl
lahf
jmp
stc
push
enter
in
mov
loop
shlb
hlt
out
rcll
out
mov
dec
sub
mov
scas
or
xor
pop
fbstp
test
aaa
test
add
pop
shll
call
push
fdivrs
cld
in
mov
push
mov
scas
cmp
sti
lock
fs
pop
jl
idiv
iret
fstp
add
push
loop
mov
stc
js
iret
inc
sbb
adc
sbb
mov
push
loop
cmp
adc
dec
add
pop
push
inc
adc
and
insl
mov
ret
test
js
cmp
std
ret
scas
rolb
fisubl
or
pushf
fstps
dec
jl
adc
jle
jno
pop
add
inc
add
mov
ljmp
pop
jle
jae
fstp
insl
push
or
test
pop
in
sarl
pusha
sub
enter
inc
cmp
xor
sub
xor
lea
pop
and
repnz
fdivrs
ss
adc
lea
push
push
std
sbb
mov
addr16
cmpsl
inc
cmp
fsubrl
movsb
jmp
add
addb
repnz
inc
out
pop
dec
adc
push
popf
xchg
pop
je
movsb
mov
xchg
cwtl
add
jae
scas
lcall
pop
in
adc
xor
sub
and
dec
add
pop
adc
xchg
rclb
sub
clc
mov
or
dec
jmp
es
inc
nop
add
daa
jmp
inc
jbe
dec
stc
data16
mov
push
pop
das
pop
mov
cmpsl
ja
iret
jmp
jb
and
xlat
test
cmp
repnz
pop
jg
ja
xchg
add
iret
test
pusha
mov
iret
into
scas
push
sbbl
leave
in
outsl
ljmp
inc
mov
xor
push
popf
pop
in
cmp
dec
push
mov
ja
jo
enter
jle
notl
pop
dec
leave
jg
ficoml
xchg
scas
fs
loope
outsb
inc
ficomps
cwtl
inc
stos
and
out
xchg
pop
push
xor
sar
sub
cmpsb
rcrb
push
test
dec
out
rcll
cmp
cwtl
mov
mov
arpl
jle
jl
pop
cmp
js
loope
inc
cmpsb
fdiv
inc
loope
ljmp
xchg
out
mov
popf
and
fcompl
test
leave
xrelease
mov
arpl
rcr
divb
in
cmp
mov
cmp
inc
aam
inc
mov
lods
je
inc
mov
mov
test
pushf
movaps
push
popa
xchg
ja
jno
push
mov
dec
jno
inc
aam
lock
outsb
test
aas
jo
dec
fwait
lock
sbb
sbb
rclb
fisubl
push
out
xchg
int
xchg
clc
lea
xchg
jle
or
lret
ljmp
jecxz
jp
adc
jnp
int
push
push
push
aad
fcoml
mov
dec
stos
push
stc
mov
or
leave
push
cmp
mov
mov
pop
mov
lret
test
pop
mov
imul
psrad
rcl
outsl
push
rcrw
stos
jmp
or
mov
std
dec
pop
int3
mov
hlt
mov
inc
dec
push
and
fcomps
pushf
sti
loop
sbb
mov
cli
sbb
or
inc
aam
cmpsb
jp
mov
mov
int
sub
int3
shll
adcb
xorl
popf
push
jmp
mov
mov
cwtl
jno
mov
gs
sbb
jb
dec
pop
hlt
adcl
adc
pop
dec
mov
aaa
sbbb
adcl
mov
call
test
arpl
lds
ror
push
cmpsb
movsb
inc
aaa
adcb
cmpsl
sti
stc
in
ret
xchg
inc
pusha
loopne
pusha
js
mov
pop
jne
ret
popa
jecxz
xor
adc
xor
xchg
cmp
shrb
fisttpl
dec
out
out
mov
arpl
jge
mov
mov
test
loopne
cs
jmp
lods
push
xchg
stc
jns
xchg
jg
ds
insb
mov
mov
or
cmp
pop
in
and
lea
insb
test
fdivr
xchg
cmp
lock
dec
sbb
sbb
mov
fsubrl
add
clc
jecxz
xlat
movsb
stc
or
dec
sub
mov
fs
pop
sub
lock
xchg
adc
mov
push
fwait
pop
cs
jp
xchg
fists
insb
pushl
filds
mov
lock
adc
shrl
push
mov
mov
jae
mov
push
cmp
es
jne
cmp
cmpsl
iret
insl
aas
inc
popf
mov
dec
inc
jae
cmp
sahf
or
lds
jnp
lods
inc
sub
push
lcall
jle
jae
add
dec
mov
pop
add
and
sub
add
sub
aaa
jno
jmp
or
lcall
pushf
or
xor
fwait
push
jo
mov
xor
repnz
data16
xor
jg
push
test
add
and
xchg
sub
mov
sub
popa
xchg
pushf
mov
xchg
fiadds
mov
int
pusha
sti
dec
pop
aam
and
lcall
mov
pusha
and
pusha
insb
fwait
rorl
inc
and
icebp
idivb
xchg
cs
add
pusha
or
pushf
xchg
mov
shlb
je
subb
mov
dec
repz
cs
or
add
mov
in
fldt
stos
jae
es
or
mov
lahf
mov
jle
pop
adc
xor
ret
daa
mov
bnd
or
pop
stos
imul
es
or
divl
inc
jno
xchg
push
fnstcw
mov
dec
aaa
push
mov
scas
push
js
add
stos
ss
mov
mov
mov
pop
imul
mov
loop
or
push
adc
cmpsb
daa
push
lds
pop
pop
repz
jecxz
fwait
cmpsl
in
jle
popa
pop
dec
imul
xchg
pop
push
push
movb
aam
stc
sbb
cmp
rcrb
add
out
mov
std
mov
and
cmpsl
lea
rcll
mov
imul
adc
mov
leave
int3
mov
inc
mov
xchg
and
fwait
outsb
repnz
subb
int
lods
scas
clc
cmc
dec
divb
shr
jp
arpl
int3
sarl
xor
lret
into
or
test
das
lods
xorl
lret
ret
outsb
inc
shll
cwtl
pop
dec
push
dec
push
cmc
dec
sti
pop
je
pusha
popa
dec
fidivrs
mov
push
and
fldcw
imul
jo
out
sub
dec
pop
hlt
loop
xor
mov
fdivrl
add
mov
pop
or
push
sahf
jl
cmp
add
and
push
outsl
das
and
push
movsl
sbb
xor
das
cmp
mov
repz
out
mov
or
jne
mov
fisttpl
and
das
adc
dec
fistpll
xor
loop
das
ljmp
and
lods
cli
push
dec
cmp
js
adc
mov
push
pop
inc
std
push
pop
and
test
mov
jl
cmpsb
jmp
or
xchg
xor
scas
divl
addl
outsb
arpl
rorb
stos
rolb
gs
lahf
mov
jns
mov
subb
lret
pop
lahf
cmp
add
rcr
daa
mov
pop
inc
in
inc
cmp
xchg
jmp
xchg
daa
in
gs
int3
dec
aam
iret
lahf
mov
and
lods
testb
xor
or
mov
adc
xor
or
mov
movsl
arpl
insl
mov
mov
rcrl
int
mov
movsl
xchg
or
std
pushf
ljmp
add
sbb
ds
mov
jno
mov
maxps
pop
cli
sub
in
lods
ljmp
xchg
bound
ja
sbb
lcall
dec
lcall
stos
cmp
in
pop
add
or
jne
and
stos
inc
jb
repz
and
repz
adc
je
cli
popa
cmp
mull
push
mov
push
and
xchg
cmp
daa
pop
adc
lds
xchg
cs
repnz
cmpb
orl
cmp
adc
repz
lahf
or
inc
dec
push
add
mov
je
fisttps
mov
fs
clc
pop
xor
cmp
test
mov
fsubrp
fcmovnb
push
lret
movsb
jp
and
sbb
mov
xchg
aam
xchg
jecxz
inc
pop
ds
fidivrl
xchg
xor
ljmp
leave
sub
mov
push
adc
push
idivl
xchg
ret
or
mov
int
dec
popa
cmp
pop
mov
das
inc
jno
adc
adc
mov
ret
sbb
mov
cmpl
xchg
add
addr16
stc
pop
inc
inc
outsb
cltd
mov
outsb
in
mov
call
fs
mov
ss
test
cli
loopne,pt
ret
insl
cmp
lds
roll
sti
dec
add
mov
cmp
xchg
pop
inc
and
icebp
test
insl
ds
mov
fstpl
ror
shl
cmp
outsl
and
lret
cmp
test
mov
out
adcl
movsl
sbb
test
mov
or
pushf
ret
out
ret
xor
pop
sbb
out
mov
push
xchg
outsb
fwait
fwait
mov
inc
call
sahf
push
jge
daa
sti
xor
pop
xchg
movsb
lods
cmpsl
pop
pop
or
cmc
cmp
xor
xchg
lret
leave
in
xchg
dec
fcoml
inc
pop
cwtl
cmp
add
xchg
movsl
xchg
push
add
or
ret
mov
in
fs
mov
lahf
out
fbstp
popf
ds
sub
sbb
imul
in
inc
inc
arpl
pop
addb
fwait
cmp
hlt
adc
outsl
testb
clc
cmp
xor
fadd
clc
jbe
negl
int
jno
mov
pop
jb
sbb
stc
or
jnp
mov
xchg
mov
shl
addr16
xchg
call
stc
mov
movsb
fnstsw
nop
fs
ljmp
dec
jnp
sbb
jbe,pt
jecxz
xchg
cs
popf
cmp
mov
mov
shlb
xchg
or
inc
pusha
sub
fistpl
mov
les
cwtl
adc
shlb
leave
inc
push
mov
sti
jbe
pop
out
inc
out
movsl
hlt
mov
sub
add
lea
js
bound
jg
lods
xor
hlt
pop
jg
scas
push
out
add
in
jmp
jno
mov
in
mov
cmp
and
mov
fistl
data16
inc
je
or
jmp
xchg
xlat
out
aam
std
xor
add
mov
or
shlb
pop
stos
das
xlat
shlb
fs
mov
jae
mov
mov
into
div
out
lret
add
lret
push
jae,pn
xor
movsb
or
test
cmp
sub
mov
pop
push
arpl
insb
or
aam
mov
mov
rcrb
pop
repnz
icebp
mov
fidivl
xchg
xor
inc
pusha
or
inc
stos
movsb
ret
xor
loopne
inc
popf
mov
push
mov
cmc
inc
jmp
int3
jp
iret
dec
inc
or
aad
lea
add
pop
out
roll
lock
pop
add
aam
sub
mov
push
jp
sub
repnz
lods
pop
cmp
ss
jg
sbb
insb
dec
loop
cmp
mov
jecxz
push
arpl
jmp
pusha
bound
xor
iret
sub
fcmovnu
pop
mov
inc
sub
jbe
dec
adc
jl
add
xlat
xor
mov
repnz
in
int
pop
mov
imul
jge
add
stos
mov
lret
pusha
into
seta
hlt
test
into
pop
jecxz
icebp
inc
push
mov
xchg
repz
or
or
fwait
mov
pop
xchg
call
js
add
sti
xorb
pop
insl
jp
lock
out
data16
cmpsl
lock
repz
xor
mov
sahf
pop
dec
fucomi
pop
push
pop
out
jmp
pushf
xor
sti
mov
imul
adc
rcrb
pop
dec
rcl
pop
and
cmp
adcl
imul
and
inc
mov
psubsw
mov
imul
push
push
push
add
nop
push
ja
sub
inc
xor
std
mov
mov
push
shll
cmp
and
mov
fadds
dec
repz
sub
leave
inc
add
mov
pushf
mov
cmc
cmp
ret
adc
mov
and
fsub
xor
divl
sbb
sar
mov
pop
lods
mov
int
mov
push
mov
xor
sbb
fs
scas
jns
jbe
mov
inc
mov
adc
push
adc
ja
je
outsl
xor
ljmp
fmull
repz
lcall
push
popf
lahf
or
cmp
mov
pusha
sub
aaa
inc
fisubs
sub
pusha
test
cltd
cmp
adc
jb
mov
daa
jg
and
in
in
push
fcmovnu
mov
jg
mov
lahf
daa
mov
outsl
test
add
sbb
cmp
jg
and
fs
xlat
mov
pcmpgtw
and
ss
aaa
repz
jmp
jne
cmp
jmp
cltd
pop
loopne
imul
dec
sbb
fwait
or
pop
inc
dec
mov
sub
mov
cmp
xor
dec
outsl
fidivrs
push
inc
and
testl
inc
xchg
jl
push
into
stos
fimull
int
adcl
popf
mov
add
sub
lock
scas
clc
leave
sahf
push
xor
dec
dec
imul
xchg
cmpl
call
adc
cmp
daa
data16
pop
test
xor
clc
daa
aas
mov
lods
add
pop
push
xor
push
pop
out
xlat
out
jo
sti
sub
lods
or
add
mov
imul
mov
jae
fadds
es
add
cld
mov
stos
mov
adc
movsl
mov
ljmp
cmp
pusha
repz
mov
jno
or
shrl
jp
lret
mov
mov
repnz
sbb
xor
xor
add
mov
les
or
xor
add
jge
lock
xchg
aaa
sbb
dec
or
mov
das
and
in
pusha
iret
jo
xchg
push
mov
cmpl
mov
add
sarl
scas
dec
movsl
add
movb
jns
aas
out
std
push
cmpsb
mov
push
inc
mov
or
leave
mov
orb
xchg
popa
push
stos
movsl
rcrb
push
xlat
lahf
adc
xlat
arpl
jecxz
repnz
lret
movsl
lret
pop
aas
shrb
xchg
sbb
aam
pop
popa
mov
push
out
mov
repz
xchg
and
jge
adc
sbb
cld
fsubr
insb
adc
sbb
mov
das
adc
jmp
clc
jmp
pop
inc
rclb
sbb
add
sbb
push
in
das
push
pop
mov
xorb
test
jl
add
cmp
adc
dec
rcl
in
pop
pop
in
loopne
std
andb
gs
mov
bound
ljmp
es
sahf
or
mov
mov
mov
sub
jmp
sub
fstpt
push
arpl
lods
inc
cli
push
lods
cs
fistpll
loopne
lret
js
push
dec
mov
jo
jmp
das
mov
ja
faddl
ja
lret
cmpl
xchg
inc
push
inc
ljmp
subb
imul
push
add
in
add
test
mov
lahf
insb
insl
xchg
jge
jnp
out
pop
xor
xchg
pop
repz
xor
inc
jle
mov
lea
notb
pop
mov
ss
test
jne
iret
pop
pushf
mov
push
dec
add
cmpsl
sbb
mov
fs
sahf
jb
enter
inc
test
sarl
adc
mov
fsubrp
aaa
dec
cmp
daa
int3
daa
sbb
fbld
sbb
shl
insb
xchg
int
insb
inc
out
bound
xchg
mov
lds
out
cmpl
sbb
js
push
ret
or
xchg
and
xchg
xor
fs
and
adcl
push
or
add
adcl
fs
lds
mov
lahf
ret
sarw
push
cwtl
std
sbb
sub
push
ljmp
lock
inc
xor
cmp
dec
pop
mov
add
in
or
pop
sub
xchg
lock
lods
sub
ja
popa
aas
jns
cmp
je
adc
mov
dec
adc
in
sbb
or
inc
popa
pop
mov
je
orl
xchg
shrb
push
and
scas
icebp
inc
xchg
cmp
enter
lods
push
data16
inc
xor
sti
cltd
or
movl
and
ja
mov
inc
xchg
pop
sub
fincstp
movsl
movsb
sarb
mov
insb
pop
aam
mov
ljmp
inc
mov
iret
stc
dec
arpl
dec
add
mov
call
mov
mov
or
stos
xlat
jno
lret
dec
add
or
cmp
das
pop
and
pop
lods
or
enter
rolb
dec
movsl
iret
pop
jae
pop
push
or
out
sub
es
clc
mov
adc
fisubl
int
and
adc
pop
jmp
lods
xor
icebp
popf
ret
leave
cmp
enter
dec
add
and
sbb
insb
fwait
bound
les
dec
fdivl
outsb
pop
push
rcr
lods
les
mov
ds
int3
cld
ja
push
inc
popf
outsl
adc
xor
cld
aaa
in
into
sub
mov
movsl
inc
mov
jae
adc
and
out
pop
insl
bound
and
sub
dec
fiaddl
xor
fsubrp
push
pop
sbb
ret
adc
add
popf
adc
fcoml
push
adc
push
xchg
mov
ret
xor
sbb
loop
inc
push
mov
ss
mov
leave
push
adc
push
jae
push
leave
pushf
xchg
imul
jns
jle
lods
dec
out
or
aad
mov
mov
jns
dec
push
std
movsl
in
sbb
sub
out
lcall
divl
das
push
push
push
insb
add
fisubrl
mov
xchg
push
jl
das
inc
out
xchg
sub
ss
push
outsl
roll
lret
cld
add
loop
loope
out
movsl
shrb
out
add
ds
xor
sub
lea
jp
mov
sbb
xor
rcl
mov
cmp
pop
scas
inc
inc
push
test
fwait
pop
xchg
outsb
in
inc
lret
cwtl
pop
nop
jno
jnp
jp
mov
jg
xchg
data16
cmc
fcomps
jae
repnz
sub
lods
call
add
or
dec
push
mov
test
ljmp
and
pop
orl
pop
call
loop
mov
inc
mov
add
cmc
inc
sbb
push
jae
in
lcall
inc
scas
cmc
jecxz
add
xor
inc
xchg
shl
xor
push
push
cmp
fwait
xchg
push
pop
imul
mov
dec
mov
jecxz
std
pop
rcll
ljmp
mov
decb
mov
jmp
pop
jno
mov
and
adc
add
dec
inc
bound
dec
push
aam
outsb
sub
bound
inc
add
pop
out
sub
cmpsl
imul
js
push
ja
int
sahf
mov
imul
je
arpl
xchg
loopne
call
dec
idiv
outsb
xchg
inc
push
xor
fmuls
sub
mov
outsl
jge
mov
and
lea
arpl
add
sbb
dec
xor
mov
rcrl
sub
sbb
and
pop
sbb
mov
adc
push
add
mov
inc
push
dec
pop
xchg
push
inc
pop
ret
adc
cmpsl
mov
dec
je
or
sahf
mov
inc
leave
push
fdivrs
imul
mov
jno
inc
movsb
addr16
or
cld
pushf
rcll
mov
test
pop
cwtl
xlat
movsl
mov
adc
jecxz
in
rcl
mov
adc
sub
jo
lods
lock
shrl
pop
cli
xchg
cli
cmp
shrb
xor
sub
push
out
sub
cli
fistpl
mov
mov
aaa
ret
lret
jmp
addr16
sub
mov
in
adc
inc
iret
xchg
enter
dec
in
pop
sub
add
dec
repz
cmp
inc
add
or
inc
push
push
jmp
pop
add
and
out
add
lret
std
adc
inc
popa
jns
jp
mov
inc
enter
lods
data16
push
stos
mov
mov
pop
or
incb
sbb
mov
sbbl
jge
mull
xor
adc
in
adc
bound
out
add
in
mov
jne
test
xchg
dec
or
mov
dec
inc
mul
and
and
xchg
imul
xor
clc
jnp
dec
or
dec
insb
cmpsb
imul
je
mov
lret
add
pop
es
or
cmp
in
aas
aaa
xor
mov
stos
ret
cmp
jno
jae
add
cmpsb
scas
jl
aas
mov
test
test
xor
cmp
push
ret
or
xchg
jle
sub
push
pop
icebp
jg
xor
jge
mov
cmp
nop
mov
ljmp
rolb
inc
cmp
out
jns
ret
mov
imul
stos
adc
es
cmp
es
incb
jmp
arpl
mov
lods
sbb
sub
cwtl
call
jg
jle
test
jnp
arpl
ret
xor
das
out
jmp
idivb
sahf
cwtl
loope,pn
add
sub
xor
adc
pushf
movsl
je
mov
fildl
add
out
shrl
mov
mov
cmpsb
jmp
fs
lods
ja
lock
pop
ss
adc
scas
cmp
jns
mov
push
loope
test
test
test
sbb
mov
adc
inc
pop
push
lret
sbb
jmp
add
cmpsb
cmp
push
pop
shrl
insb
add
or
sbb
and
je
xor
inc
jmp
ret
lcall
mov
into
popa
jne
jp
mov
sub
jge
test
movl
cs
xchg
fwait
or
in
xchg
imul
int3
mov
dec
enter
div
push
add
push
aas
cltd
mov
mov
inc
fcmovnu
fadd
pop
ficomps
bound
test
bound
push
jge
lret
cmc
inc
jno
enter
fidivs
adcb
and
fsubs
call
test
mov
popa
jno
push
dec
jnp
mov
jge
mov
movsl
sub
in
outsl
dec
xchg
or
inc
loope
sar
cli
cmpsl
dec
mov
mov
or
loop
xchg
inc
arpl
adc
daa
in
add
add
dec
adc
pop
xchg
pop
and
mov
add
mov
sar
cmp
fists
sbb
mov
cltd
movsl
out
inc
cltd
int3
lret
push
sarb
push
add
shll
dec
loopne
insb
xlat
add
aaa
std
pop
imul
outsb
repz
loop
jo
incl
mov
xor
orb
cmpb
lea
ds
shlb
push
loop
or
jbe
inc
pop
inc
out
push
or
in
xor
call
add
aaa
pop
xor
insb
sbb
and
fucomp
pop
js
mov
pop
fsin
dec
scas
pop
call
sub
mov
scas
into
sahf
aad
jmp
cmp
sbb
in
pop
fsubrp
cmp
and
dec
or
xchg
adc
es
pop
pushf
into
fadds
xchg
add
mov
jbe
and
add
and
mov
in
dec
sub
rcrb
stc
xchg
pop
movsb
out
psubusw
fistpl
loop
fistps
mov
jne
mov
xor
cmp
call
icebp
idivl
push
mov
inc
push
sub
and
decl
mov
icebp
dec
add
adc
std
dec
pop
mov
pop
push
out
jg
fwait
sub
movl
lret
push
adc
push
sbb
ror
mov
addr16
jbe
in
testl
test
lods
test
orl
sti
std
sub
push
pusha
cmpsl
dec
xchg
enter
aas
dec
lods
fwait
imulb
jne
mov
sub
push
sub
push
addl
test
push
out
cwtl
sbb
cmc
imul
subl
add
in
fisttpll
call
int3
mov
push
xorl
mov
lods
ret
inc
jno
lea
scas
bound
sbb
pop
or
jae
jns
sub
loop
jmp
insl
mov
adc
clc
stos
mov
pop
push
jge
imul
scas
jbe
mov
out
jmp
es
jmp
std
pop
cld
xchg
push
iret
shl
lods
dec
cmp
mov
mov
add
inc
cmp
adc
loopne
addr16
sbb
fwait
leave
mov
cmp
mov
dec
xor
mov
dec
loopne
mov
xchg
lods
push
sarb
pop
fdiv
push
test
das
xor
mov
cs
inc
fstl
cld
adcl
clc
aas
sahf
pushf
mov
push
dec
adc
mov
inc
loop
enter
sbbb
inc
jg
ljmp
or
xchg
dec
mov
mov
jl
ja
imulb
dec
js
std
lcall
mov
ds
mov
add
inc
cltd
lds
cmp
scas
or
pop
dec
jno
jge
ret
lret
je
pop
test
sbb
pop
push
aad
mov
sbb
test
mov
aaa
pop
adc
sub
addr16
push
out
imul
push
daa
push
les
int3
push
mov
sarb
adc
popa
pop
xor
das
es
mov
cld
in
add
cmp
xchg
add
mov
lock
or
je
cmp
lret
in
cs
dec
and
sbb
rsqrtps
leave
imul
cs
add
xor
add
mov
out
mov
dec
pop
inc
data16
testb
int
mov
out
lods
fiaddl
fs
aas
out
mov
xchg
inc
cmp
enter
push
jecxz
push
ss
notb
mov
jp
ficoms
jmp
clc
add
jmp
mov
loop
add
test
dec
pop
popf
les
lcall
push
add
jge
arpl
dec
hlt
out
call
push
sbb
aad
or
add
jns
cld
mov
popf
sbb
das
lahf
outsb
stos
hlt
sbb
adc
hlt
jns
or
cmp
ds
dec
lods
inc
add
orb
lods
stos
dec
mov
leave
iret
aas
add
std
xchg
js
aas
je
jnp
jno
mov
frstor
shlb
mov
mov
fmull
call
cmp
fcomps
pop
fisttpl
adc
stos
movl
in
xor
fdivr
iret
xor
cmp
dec
xchg
add
adc
sub
fucomp
and
jl
push
sbb
enter
xor
mov
ja
clc
pop
mov
int
sbb
cmp
js
out
mov
ja
adc
decl
addl
movsb
mov
and
xor
xor
or
fstpl
xor
ds
mov
mov
aas
fidivl
out
xchg
mov
pop
mov
stc
push
int3
jmp
push
shl
adc
and
outsb
roll
aaa
ja
jae
sbb
xor
cmp
mov
int3
rcr
insb
hlt
mov
push
movsl
and
aaa
arpl
pop
push
sbb
scas
sbb
repnz
and
adc
mov
out
leave
cltd
ja
cli
sbb
adc
test
jmp
test
in
mul
das
testb
add
clc
or
push
xor
push
out
dec
add
fisttpl
or
dec
jns
mov
loop
dec
cmp
andl
sub
int
pop
cmp
dec
and
loop
jl
adc
adc
shlb
dec
mov
outsb
inc
or
fwait
and
xlat
stos
movzwl
fisubrs
test
fnstcw
sbb
push
ret
imul
sbb
dec
dec
add
xor
xchg
and
shr
dec
cmc
cs
lcall
ficomps
xor
aad
add
movsb
xor
arpl
xchg
ljmp
add
sar
mov
in
dec
mov
xchg
enter
xchg
loope
mov
push
das
jno
aaa
sub
or
iret
push
jb
sub
in
daa
dec
daa
int
cmp
add
xchg
addr16
cmc
jmp
adc
inc
bnd
daa
dec
shll
ja
insl
adc
ss
adc
in
in
jp
mov
jnp
movsl
mov
sbb
cmp
test
jl
mull
xchg
rolb
adc
mov
call
andb
add
xrelease
ja
add
test
cmpsb
mov
out
pop
or
mov
popa
dec
sub
shll
mov
movsl
xor
pusha
out
dec
clc
lcall
sbb
imul
ficoms
or
shrl
leave
dec
add
mov
jmp
scas
push
cld
adc
insl
pop
xchg
in
mov
mov
jecxz
loopne
loope
mov
cmp
push
mov
xchg
data16
jnp
sbb
mov
or
lock
push
jl
dec
movsl
rorl
mov
fisubrs
sub
pop
divl
mov
leave
xchg
mov
cmp
ljmp
cmpsl
push
inc
test
loope
sub
daa
cmpsb
cltd
mov
repz
cmp
push
and
leave
jp
and
jb
incb
jbe
mov
push
jl
insl
and
push
pop
adc
sbb
cmp
sub
cs
decb
mov
subl
add
or
ficoms
shlb
rcrl
cli
xchg
filds
xorb
mov
push
aam
cmpsb
mov
xchg
xchg
jns
aaa
ss
lods
xor
mov
mov
loopne
pop
xor
sti
dec
pxor
jecxz
dec
stos
and
pop
mov
lret
cltd
test
ljmp
jl
inc
push
inc
pop
xor
push
push
stos
sbb
jno
cmp
inc
lahf
outsl
push
je
test
sbbb
xchg
out
pop
in
sbb
or
sub
cwtl
adc
dec
mov
stos
jno
outsl
xor
xor
gs
sarl
mov
and
adc
popa
outsl
jl
fldl
inc
pop
addb
outsl
jge
sub
mov
shrl
inc
inc
stos
cmc
pop
inc
xor
push
test
mov
cmp
repnz
hlt
mov
rcrb
jge
aad
mov
hlt
outsl
popf
les
es
sub
pop
or
jb
push
dec
out
imul
lret
mov
or
xor
push
pop
popa
mov
test
cli
popf
shr
gs
enter
ljmp
movsb
rcr
or
add
fisubrs
fucomi
jecxz
sti
in
or
push
add
shll
jmp
and
jle
and
add
dec
sub
out
adc
lods
add
addr16
lcall
fistps
gs
sbb
leave
in
inc
jecxz
and
jo
in
test
dec
mov
jge
pop
aas
adc
inc
jmp
out
nop
pop
ljmp
aad
jmp
idivb
dec
push
pop
jg
in
cmp
or
xor
dec
dec
sbb
sub
pop
adcb
nop
dec
pop
sbb
fstps
sbbl
je
dec
scas
dec
dec
mov
in
mov
vpacksswb
testl
mov
pusha
imul
ret
adcb
cli
outsb
or
inc
scas
into
push
mov
outsb
pusha
jb
aad
adc
dec
and
jo
jno
repnz
push
jge
scas
sbb
lret
test
xchg
push
push
push
arpl
enter
mov
stos
iret
sbb
sbb
mov
sbb
cmp
add
mov
push
fcmovu
in
mov
cpuid
pop
adc
movsb
jnp
insl
push
loop
pop
mov
icebp
lock
lds
cmp
nop
imul
fwait
jb
xchg
push
inc
divb
cs
hlt
stc
jns
icebp
ja
inc
xlat
je
bound
push
add
xchg
outsb
lret
xor
in
es
dec
or
xor
mov
rcll
sub
adc
mov
dec
mov
movsb
xchg
ficoml
pop
fldl
rclb
aad
ret
push
js
popa
mov
inc
mov
adc
insl
mov
jbe
iret
push
fstp
jp
sbb
in
iret
dec
movsb
pusha
sarb
pusha
negl
out
out
push
sbb
mov
inc
mov
or
fwait
adc
mov
test
stc
jle
and
pop
inc
pop
fs
sub
sub
je
sub
jae
aaa
outsl
lret
xorl
mov
cmp
push
or
loop
fldcw
mov
call
cmp
inc
push
lret
mov
xchg
lock
cmpsb
sbb
rolb
sbb
adc
in
jg
adc
mov
jno
aaa
je
xor
cltd
iret
and
cs
jbe
cmc
data16
cli
pop
jge
sbb
adc
pop
fwait
in
push
jns
pop
ret
sbb
out
mov
sbb
cmp
or
push
mov
shlb
pop
insl
inc
jae
sbb
push
xor
pop
lods
jmp
mov
inc
push
out
push
xorl
jne
push
adc
jb
jmp
jmp
push
rolb
insl
dec
popf
pop
lahf
mov
xchg
sarb
dec
stc
mov
lret
mov
mov
inc
mov
xlat
pop
add
outsb
mov
dec
inc
push
inc
sub
pop
sbb
xchg
inc
cmc
arpl
dec
dec
in
xchg
scas
cli
sbb
ss
jl
daa
or
inc
xchg
das
mov
inc
sbb
xchg
mull
bound
add
into
ja
lcall
in
fdivl
jl
outsl
or
cmc
mov
push
adc
mov
hlt
push
or
testl
xor
enter
xor
push
jnp
push
and
into
push
ds
sub
pop
and
sbb
imul
xchg
jl
and
inc
jmp
xor
cli
in
icebp
arpl
push
or
mov
fimull
jle
cmp
sbbb
mov
pop
loop
mov
and
push
rorb
or
adc
sub
pop
testb
cs
adc
and
and
ljmp
pop
das
pop
fwait
in
push
push
std
mov
xor
inc
mov
sbb
push
stos
mov
cmp
das
test
mov
jg
sbb
or
pushf
fs
bound
mov
xor
xchg
gs
mov
sub
js
stos
sbb
out
and
ficoml
scas
sub
cmp
mov
ret
sbb
inc
mov
dec
push
push
xor
dec
pop
ja
sbb
ret
inc
cmpsl
test
xor
cltd
xchg
cmp
cltd
jb
popf
mov
ss
and
std
pop
loopne
push
jno
aam
jbe
lods
adcb
dec
and
mov
xchg
negb
sbb
aad
add
outsb
jbe
ja
lret
mov
movsl
pop
lods
mov
add
fnstenv
fldl
fs
xor
cmp
dec
repz
rclb
ret
dec
test
mov
mov
xchg
xchg
aam
rorb
cmpsb
call
mov
loopne
rorl
das
xchg
cmpsb
movsb
xor
ltr
nop
xor
pop
popa
fcomps
pushf
push
cwtl
push
js
lret
rcl
jge
lea
mov
lcall
in
add
or
sbb
lods
lds
mov
pop
xchg
mov
cmp
xor
cld
lds
cmp
out
cmpl
and
movsb
pop
push
les
negb
push
loopne
or
cmpsb
jo
shlb
popa
cmpsb
jb
stos
adc
loope
jae
inc
outsb
packssdw
cld
or
jg
cmp
outsb
fldt
addr16
aaa
addb
xchg
out
movsl
ret
sbb
or
jle
dec
xchg
add
add
pop
sbb
rorl
pop
inc
push
lods
inc
dec
and
lcall
adc
pop
push
xchg
mov
int
lcall
jle
xor
sbb
in
hlt
aas
repz
and
lds
stos
push
xchg
xchg
out
or
fnstsw
mov
or
lds
cmp
dec
mov
pop
mulb
addr16
cmpb
in
enter
mov
pop
ret
cltd
mov
movsb
xor
sub
jmp
repnz
test
shll
out
push
cmp
push
xchg
cmp
or
cmp
std
fiadds
dec
in
in
test
lds
push
outsb
jno,pn
pushf
and
lret
les
pop
xor
in
cwtl
mov
dec
int
in
pop
fucom
test
loop
mov
out
jnp
adc
and
out
add
lahf
cmpsl
arpl
ljmp
push
xor
pusha
push
add
cld
push
dec
or
cmp
call
outsb
aas
add
iret
mov
div
push
xlat
mov
or
sbb
bound
sti
add
std
movsb
ret
cmp
ret
pushl
lds
mov
jle
test
sahf
adc
jne
add
mov
add
pushf
jno
cmc
add
stos
aad
repz
jle
in
push
gs
xor
mov
sub
lret
pop
dec
mov
and
sbb
cmp
mov
mov
add
aad
es
pop
sbb
push
insb
inc
cmp
in
lds
xor
xor
aad
arpl
jmp
mov
lret
sub
xor
sbb
out
dec
fs
jnp
clc
lock
in
jno
xlat
lret
or
icebp
push
bnd
push
xor
jp
lcall
mov
lods
xchg
xlat
sbb
std
lcall
jl
sub
inc
loopne
mov
cld
inc
jbe
into
sbb
mov
add
out
sub
sbb
stos
xor
loop
in
popf
inc
cmp
jae
or
cltd
jae
xor
cmp
sbb
xchg
pop
out
inc
dec
mov
cmp
mov
in
mov
adc
int
idivb
test
dec
push
mov
ret
testb
test
pop
clc
test
sub
push
cmp
or
mov
test
lods
mov
xchg
loop
daa
test
addb
sbb
inc
mov
insb
into
push
adc
xor
leave
push
scas
cmp
add
mov
inc
dec
sbbb
pop
pop
dec
out
mov
fnstenv
push
out
lods
dec
cmpsb
call
mov
movsl
push
mov
mov
sbbl
xlat
cmp
insl
push
inc
adc
fidivl
or
inc
sub
cltd
lea
adc
aaa
mov
dec
push
sub
mov
jbe
fstpl
orl
sar
dec
popl
push
shrb
mov
pop
loope
aas
or
xchg
adc
addr16
inc
xchg
fcoms
mov
push
cmpsb
loopne,pn
fwait
popl
inc
popf
dec
test
clc
into
imul
pop
movsb
jmp
jp
pushf
in
or
fcmovnbe
sbb
sahf
test
int
or
fwait
hlt
lret
outsl
mov
roll
pop
ds
dec
sahf
xor
xchg
push
dec
jp
out
ljmp
or
loop
sarb
adc
dec
adcb
inc
and
das
scas
mov
add
daa
lcall
mov
inc
add
loopne
mov
xorl
pop
mov
clc
push
push
pop
into
loope
pop
adc
lds
xchg
or
aas
sub
add
jne
xor
or
pusha
imul
jg
mov
xchg
out
dec
pop
xchg
mov
mov
xor
inc
xorb
xor
cld
sbb
inc
adc
add
mov
pop
pushl
les
push
push
out
push
add
push
je
stc
dec
es
mov
rcr
dec
mov
ficomps
cmp
test
imul
and
dec
dec
stc
es
fstpl
adc
adc
in
rcl
ss
push
in
sbb
mov
sub
dec
shll
mov
and
je
jl
call
jge
mov
fsubrs
push
int3
adc
cmp
cmp
dec
dec
push
rorb
pop
rol
xchg
fsubrs
outsl
inc
lock
xchg
xor
push
mov
xchg
pop
xchg
les
mov
fdivrs
cmp
adc
repnz
push
mov
and
jne
xchg
and
and
enter
call
mov
dec
out
jne
mov
js
aaa
cmp
into
jmp
enter
xor
mov
xor
add
jns
mov
leave
in
and
mov
xlat
fwait
or
sar
fs
sbb
imul
sbb
idivb
dec
push
mov
iret
ss
shrl
sub
cmp
repnz
push
lds
ds
ret
inc
sub
in
imul
mov
out
jae
inc
jmp
xor
fisubrl
ja
and
cmp
or
fs
dec
add
mov
outsl
in
les
xchg
or
popa
sub
int3
clc
into
sbb
lret
sbb
iret
daa
xchg
cmovnp
inc
pusha
sarl
cmp
jmp
clc
cmp
loope
mov
push
lods
popa
mov
jnp
ss
push
adc
int
sub
dec
outsb
imul
or
loop
cmovno
daa
ror
sub
adcl
call
in
sbb
cmpsb
mov
mov
xchg
mov
dec
cmpsl
insb
jno
out
nop
divl
cmpsl
outsb
push
insl
add
dec
mov
stos
inc
cmp
in
cld
addl
pop
stos
mov
movsl
mov
mov
ret
sbb
scas
jno
std
fsubr
xchg
fnstcw
and
cli
insb
or
aam
jl
add
ror
js
icebp
subl
shlb
jmp
mov
arpl
xchg
sbb
dec
or
loopne,pn
or
sub
and
and
and
mov
insl
pop
lret
and
iret
dec
add
cmc
lods
cmpsl
cwtl
lea
cmc
repnz
mov
jb
mov
xor
cs
shl
xchg
dec
pushf
or
sti
mov
or
mov
and
aad
fdivrl
js
cmpsl
jg
icebp
and
push
jge
dec
repnz
pop
lea
lahf
sti
stc
adc
fs
add
jmp
adc
mov
mov
fstl
insb
shr
aaa
mov
mov
mov
int
pop
mov
sub
fadds
dec
jmp
insl
xor
lcall
aaa
add
inc
jp
gs
mov
xor
lock
out
xor
lock
jecxz
stc
adc
cmpsl
xchg
in
pop
dec
xchg
and
rclb
insb
sbb
cmp
pop
inc
insl
insb
les
lahf
jge
int3
cmpsl
push
leave
jge
jno
jge
inc
out
test
jmp
pop
popa
dec
aas
lods
mov
clc
popa
dec
xchg
loope
mov
add
or
xor
cmp
dec
cmp
pop
cmc
imul
push
icebp
sbb
dec
in
push
icebp
xor
cmp
pusha
pushf
je
sub
push
dec
roll
in
push
leave
mov
jge
xchg
push
adc
out
leave
ret
cltd
sbb
or
or
hlt
mov
mov
sub
mov
movzwl
pusha
lock
test
pop
in
xor
push
aam
out
lock
mov
or
and
push
bnd
mov
or
imul
pop
xlat
sub
divb
pop
cmp
clc
aaa
sbbb
mov
cltd
pop
xchg
sti
loope
push
scas
jnp
sbb
push
arpl
cmpl
cmp
inc
imul
scas
dec
cmp
push
push
sti
adc
xor
das
sbb
cmc
mov
fwait
and
pop
incb
push
insb
int
mov
xchg
aad
xchg
xor
aam
dec
mov
fildl
notb
mov
addr16
inc
mov
mov
shrl
dec
pushl
xor
and
push
int
leave
xchg
out
lret
push
stos
cltd
dec
adc
in
mov
cli
dec
stos
fisubs
test
clc
push
or
inc
push
fistl
jae
test
shrl
fdivrl
push
cmp
js
addr16
pop
insl
pop
nop
pop
mov
leave
aam
jg
out
and
bound
clc
xor
pop
jg
in
addr16
inc
xor
imul
pop
decl
cld
in
nop
add
dec
inc
cmp
iret
dec
mov
lea
cwtl
mov
fsubl
inc
rcr
xchg
mov
dec
in
pop
fstl
test
pop
sbb
pop
les
adc
adc
cmpsl
arpl
lock
inc
hlt
icebp
dec
cmp
jno
call
inc
pop
fxch
sbb
call
ret
fcomi
add
ret
push
iret
movsl
jo
fiadds
cs
mov
adcl
cltd
sub
cmp
xor
dec
mov
xor
hlt
cmp
mov
das
push
lret
mov
mov
inc
jge
jge
je
mov
test
mov
adc
mov
movsb
push
xor
shl
dec
sbb
mov
adc
mov
aad
inc
test
sbbb
daa
loopne
aam
sti
push
fs
add
in
call
int3
rclb
push
jge
push
sub
xor
and
mov
shrl
mov
fisttps
adc
test
cmp
push
out
push
nop
pop
scas
sbb
aad
test
mov
sub
xor
stos
addr16
in
sahf
mov
in
and
xchg
sub
xlat
fcmovnbe
mov
push
inc
bnd
or
pop
mov
aam
xor
sbb
xchg
scas
sub
pop
test
add
jl
push
and
jae
mov
cmp
push
cwtl
mov
shlb
mov
add
shr
ss
jns
sarl
pop
dec
inc
aam
sub
loope
out
bound
jne
in
into
push
sbb
add
iret
or
inc
add
pop
jne
mov
or
jno
fisttps
adc
sti
test
ret
mov
stc
sbb
sub
cmp
inc
sbb
scas
mov
ret
lret
add
push
and
xchg
outsl
push
xchg
or
popf
repz
push
or
and
lock
loope
mov
loopne
test
or
fldenv
out
push
cli
sub
js
cld
mov
push
mov
cs
jp
dec
jecxz
aaa
xchg
or
lahf
dec
jbe
call
movb
jae
cmc
in
xor
lcall
test
inc
enter
shrl
jp
add
faddl
dec
lret
test
mov
cli
gs
adc
dec
cmp
xor
dec
push
add
in
dec
dec
bound
adc
fidivrs
les
mov
subl
mov
inc
and
inc
cwtl
ja
test
roll
cmc
or
scas
push
dec
mov
addb
fcomps
leave
and
icebp
sub
outsb
test
hlt
mov
push
aad
repnz
loopne
dec
push
adc
or
daa
cmp
ja
icebp
add
push
scas
xchg
test
push
pop
cmp
adc
jmp
dec
xor
pop
mov
dec
outsl
pop
mov
lock
jne,pt
leave
xchg
imul
out
xor
xor
or
pop
mov
out
sbb
xchg
aad
adc
int3
cmp
test
data16
lret
mov
iret
cmc
test
xchg
bound
pop
mov
and
repz
iret
xchg
ret
mov
mov
cltd
ret
lret
sbb
push
jmp
shl
das
test
xchg
call
xchg
jo
mov
jle
popa
jecxz
dec
add
or
pop
in
rclb
out
xchg
cmpsb
sarl
imul
inc
ja
xchg
mov
lock
lods
loop
lods
inc
lahf
inc
cltd
fsubs
cmp
clc
and
cmp
lahf
cmc
mov
and
and
dec
jae
inc
adc
paddsb
ja
sub
sbb
add
mov
popf
cmp
es
enter
les
mov
stc
ja
bound
movsb
imull
inc
ja
adc
xchg
jp
cmp
xor
pcmpeqb
clc
inc
xchg
or
xor
add
cld
xchg
js
out
es
aad
mov
adcl
idivl
loop
add
mov
roll
xchg
in
lret
mov
sub
push
pop
mov
cmp
or
pop
dec
lcall
jnp
push
mov
das
sbb
in
rcl
mov
adc
and
or
jmp
xor
je
inc
jecxz
mov
cld
add
push
insl
in
push
adc
outsb
pop
mov
push
or
mov
jb
mov
add
aam
movsl
adc
pop
mov
out
inc
ss
push
add
gs
pusha
mov
jno
out
mov
pop
test
cmp
lret
inc
cmpsb
adc
adc
out
sub
mov
outsb
jnp
sub
ljmp
mov
bound
add
cmp
mov
rcl
push
insl
xchg
pushf
pop
add
add
pop
cli
push
leave
pop
mov
fisubrs
test
cwtl
mov
adc
dec
inc
outsb
mov
and
cmp
mov
fidivrl
ljmp
enter
rorl
push
subl
fdivs
scas
test
sbb
inc
dec
mov
mov
jecxz
push
adc
jmp
out
test
mov
pop
int
jge
cmp
aas
dec
stos
mov
add
push
mov
cs
ljmp
xor
cmp
decb
inc
mov
xchg
dec
xchg
push
sub
jae
inc
inc
outsb
out
mul
mov
stos
jns
iret
out
adc
popf
lods
insl
imul
insl
mov
aaa
xchg
imul
push
inc
xchg
insb
call
fs
aas
movsb
stos
lea
insl
cmp
popa
ja
cmp
xchg
jnp
pop
addr16
add
leave
movsb
lcall
daa
das
inc
ja
xchg
mov
fdivrp
incl
call
xchg
popf
popa
daa
mov
pop
insb
fdivrs
mov
movsl
mov
enter
mov
icebp
and
sub
je
in
aaa
je
mov
push
in
mov
insb
lret
xor
stc
addr16
loope
stos
inc
mov
push
jge
mov
subl
xor
int
xchg
sarl
gs
cmp
add
int
and
push
aas
xorl
mov
add
or
or
jecxz
das
dec
adc
mov
jb
cmp
and
rcrb
std
and
add
push
punpckhbw
mov
pushf
lcall
aam
xchg
ljmp
xor
arpl
lods
js
jne
cld
lcall
jle
lret
sti
pop
push
push
xchg
rcll
lret
push
outsl
cmp
mov
or
into
or
fs
rorb
mov
sarl
cli
lea
dec
jecxz
insb
or
ret
lock
inc
popa
jge
adcl
mov
or
add
clc
lock
fdivl
xchg
sub
addl
push
mov
aam
pop
outsb
lea
enter
rcll
icebp
insl
inc
dec
mov
and
mov
cli
repnz
roll
ljmp
inc
ja
jnp
loopne
rcl
daa
xchg
jecxz
dec
cmp
add
push
iret
mov
dec
mov
adc
popf
cmovbe
std
sbb
jbe
dec
es
fists
adc
shll
sbb
sbb
mov
push
pop
and
fstl
loope
cltd
loop
in
pop
es
dec
leave
arpl
jb
or
xor
cmpsl
std
push
adc
in
rorb
sbb
loop
rorb
xchg
out
rolb
insl
lret
jae
xor
test
dec
sbb
inc
mov
mull
sbb
lcall
push
inc
lahf
mov
stc
dec
imul
ljmp
fdivrl
test
mov
pop
test
mov
cs
ret
loope
inc
jne,pn
cltd
inc
jp
ret
lods
push
roll
aaa
mov
jge
jge
enter
mov
mov
lea
or
adc
cmc
sbb
pop
push
push
mov
cmp
shlb
cli
test
dec
or
inc
mov
pop
cmp
mov
aam
xor
cmp
popa
cmpsl
ret
insl
dec
push
and
mov
mov
cmpsl
cmp
fdivl
mov
movsl
sbb
adc
mov
jno
jecxz
imul
gs
lea
test
mov
test
imull
mov
cld
mov
shll
inc
dec
mov
mov
nop
cmp
mov
out
xchg
and
mov
fcoml
push
test
mov
inc
mov
stos
das
xlat
jne
adc
ret
sets
pop
fcmovnb
sbb
in
stos
jecxz
fwait
cmpsl
pop
js
loope
or
pop
push
mulb
push
sbb
mov
pop
xchg
fcompl
mov
mov
jg
pop
pusha
inc
inc
add
adc
addr16
or
push
into
test
ret
mov
cmpsb
dec
scas
mov
int3
daa
shrl
xor
xchg
jge
aaa
mov
sub
add
sbb
push
mov
sub
sbb
icebp
fcoml
cli
leave
push
adc
push
or
cld
pop
push
sub
mov
psubsw
test
push
xor
pop
pushf
xor
out
xlat
pop
call
repz
lea
xchg
repz
popa
mov
jnp
lahf
insb
inc
cmpsl
jbe
into
mov
adcl
lods
stc
shrb
lods
ret
lock
ljmp
test
inc
pop
bnd
in
cmp
mov
push
mov
mov
sbb
rcl
xor
adc
nop
fidivrl
cmp
jl
push
adc
test
leave
and
mov
test
sbb
iret
inc
rcrb
out
sarb
jp
lock
fs
fstl
mov
je
xor
mov
mov
or
push
dec
pop
xchg
cmpsl
je
dec
mov
push
mov
add
mov
adc
imul
push
cs
repz
clc
jne
mov
shl
test
pop
mov
out
xor
xor
and
stc
and
fnstcw
repnz
in
push
lret
adc
mov
pushl
push
xchg
and
xchg
vcmpss
outsb
jp
scas
mov
jno
push
lock
insl
xor
mov
test
lcall
xchg
aam
mov
rcr
mov
and
mov
das
pop
rcll
and
mov
popa
adc
and
mov
leave
push
xlat
lock
loopne
loop
lds
inc
add
add
pop
jns
inc
jecxz
pop
cmp
jo
xchg
les
fsts
xchg
popf
cmp
jecxz
push
sbb
xchg
int3
mov
xor
clc
sbb
icebp
movsb
sarb
push
jne
mov
int3
daa
mov
pop
ret
sbb
xlat
mov
ss
cmpsl
push
jecxz
fwait
cmpsl
push
fwait
pop
pop
mov
in
aam
xchg
mov
lret
fxch
fsts
mov
jno
test
rclb
cs
and
fwait
push
mov
xor
xchg
mov
ds
sbb
xor
ljmp
hlt
test
es
mov
ljmp
mov
flds
jl
cwtl
sti
push
jp
sbb
iret
mov
sub
adc
sbb
adc
aas
fstps
xchg
iret
pop
mov
mov
adc
gs
pop
hlt
cld
out
cmc
xor
adc
push
cmpsl
incl
sub
jae
imul
jno
inc
js
sub
cmp
inc
mov
daa
out
pop
or
aaa
rorb
jmp
stos
pop
test
js
loopne
inc
or
loop
rorb
movsl
ja
pop
in
pop
ret
arpl
or
cmp
stos
pushl
outsb
repnz
ss
inc
push
push
stos
xchg
pop
in
jg
hlt
mov
daa
ds
fcomps
inc
and
pop
andl
fpatan
dec
push
add
mov
mov
add
pop
into
gs
stos
mov
or
jecxz
cmp
imul
dec
ret
mov
lods
dec
movsb
bound
xchg
gs
into
mov
pop
mov
rcll
mov
cmp
int
xor
pop
fstl
das
dec
mov
shrb
or
mov
rcll
fwait
inc
aas
mov
xchg
adc
mov
jns
adc
lds
mov
or
push
stos
ret
xor
push
sahf
lds
xchg
icebp
adc
add
mov
jmp
xchg
push
pop
fnstsw
push
adc
and
test
cld
jo
adc
xchg
or
fimuls
mov
xchg
pop
dec
jne
jae
mov
mov
cmpsl
rcrb
lret
roll
jp
jl
or
lahf
into
in
jns
cwtl
sbb
repnz
mov
cmp
out
js
pop
scas
es
xlat
bswap
fsubs
push
sub
dec
ror
mov
out
insl
pop
xchg
aas
out
lods
dec
adc
adc
mulb
sbb
inc
aas
out
fstl
push
mov
pop
or
int
shl
inc
xorb
repnz
sub
int
sub
and
push
and
mov
and
or
aas
mov
sbb
push
xlat
int
jbe
or
lret
pop
sbb
cmp
push
xchg
pop
outsl
or
adcb
fcmovnb
out
dec
inc
and
stos
popa
jg
jl
sbb
arpl
loop
pmuludq
xor
orb
popf
fsubs
scas
in
sub
push
xor
xor
mov
push
fnsave
xchg
addr16
frstor
pop
mov
push
dec
leave
add
pop
sbb
jp
stos
xchg
ja
and
push
cwtl
dec
icebp
push
fs
je
decb
dec
pop
outsl
sub
mov
xchg
insl
mov
push
push
dec
pop
mov
xlat
mov
repnz
mov
loopne
mov
les
cmc
mov
popa
lods
mov
mov
inc
fcoms
idiv
mov
pop
cmc
fisttps
sar
das
sbb
sbbl
pop
xor
mov
inc
decb
push
fldl
sub
pushf
xchg
jae
hlt
imul
xchg
xchg
or
addb
out
dec
adc
or
or
mov
clc
jno
push
test
jmp
loopne
or
cmp
icebp
jl
adc
jecxz
mov
mov
stos
adc
test
test
or
scas
xlat
mov
xlat
and
dec
push
mov
mov
loop
ret
cmp
mov
enter
mull
adc
push
cmp
jecxz
xor
js
lahf
jno
pop
cmpsl
jb
adc
sahf
adc
fmul
or
cwtl
adc
push
ret
jle
js
jbe
data16
pop
jbe
lret
jno
movsl
test
jg
cmpsl
mov
push
inc
sbb
rcrl
je
push
ret
in
call
push
fimuls
int3
outsb
hlt
push
gs
and
fsubrs
lcall
sbb
ss
shrl
aas
jge
cmp
add
jae
out
jne
or
mov
ret
mov
xchg
xor
je
add
in
or
fadd
sbb
pandn
and
fldcw
cli
scas
stos
idiv
pop
xor
daa
xchg
leave
mov
nop
inc
insl
insl
xor
loopne
ret
add
cmpsb
movsb
into
movsl
loop
dec
test
std
xchg
shr
test
jge
push
add
cmpsl
mov
jno
mov
mov
and
aaa
pop
add
mov
icebp
fwait
popa
push
push
mov
xchg
jnp
jmp
ds
xchg
push
dec
pop
inc
mov
fldl
xor
mov
jecxz
mov
cld
js
add
mov
shrl
jg
dec
mov
cmc
xor
cmp
jg
sbbb
or
jge
mov
pop
cmp
push
nop
and
hlt
int3
cmp
pop
jge
and
cmpl
call
mov
push
jo
and
cmp
fstpt
icebp
pmullw
inc
fisubrl
inc
mov
xchg
dec
dec
lret
cmp
add
pop
mov
jmp
mov
popa
outsb
stos
int3
cld
xchg
mov
push
es
pop
mov
dec
jo
cs
push
jno
mov
adc
imull
subb
and
pop
inc
or
xlat
adc
or
shll
lds
sbb
scas
int3
jno
fcomi
loopne
cltd
xchg
les
add
pop
add
out
clc
lea
or
push
mov
div
data16
push
out
xchg
pop
inc
inc
mov
ss
stos
lods
test
daa
in
sub
clc
mov
and
mov
orl
jo
insb
mov
inc
jge
xchg
insb
movsl
adc
insb
mov
sbb
or
daa
pop
das
add
sub
inc
enter
je
adc
cmp
and
dec
sahf
jo
dec
mov
pop
dec
cmp
or
inc
lcall
fmulp
lahf
setg
nop
sbb
out
dec
icebp
jecxz
repz
cmc
mov
lock
xchg
in
xchg
or
xchg
dec
pop
enter
loopne
sahf
jecxz
xchg
dec
test
nop
sarb
jns
mov
xchg
xchg
fisubl
sbb
or
cwtl
test
aad
mov
mov
clc
js
adc
sub
cmc
test
out
movsl
sub
dec
js
inc
lcall
mov
pop
cmp
lock
ret
test
jne
cmpl
mov
aam
jecxz
jae
test
push
cltd
call
shlb
xchg
ss
fdivrl
mov
iret
cwtl
jg
push
fiadds
cltd
sarb
sbb
stos
cmp
inc
jp
sub
es
dec
dec
fdivrs
gs
std
xchg
cmp
adc
add
xorb
and
adc
fsub
loopne
int3
addr16
mov
push
das
push
xor
inc
cmp
popa
int
jo
repz
mov
dec
shll
scas
cmpsb
mov
cmp
out
adc
cmp
push
push
mov
jnp
dec
or
sarl
fdiv
push
ret
rolb
jp
mov
mov
pop
dec
mov
fsubs
jecxz
or
dec
inc
iret
jb
mov
mov
lods
in
cmp
xchg
test
sbb
mull
inc
jecxz
movsl
lods
stos
imul
movsb
mov
sbb
leave
call
aaa
dec
in
daa
aam
in
das
lea
mov
jb
in
and
jb
adc
and
into
cmpsb
mov
mov
popf
imul
pop
cmc
xchg
sbb
sahf
inc
mov
mov
mov
aam
mov
stos
mov
jg
popf
adc
sub
xchg
mov
jo
mov
dec
fbld
mov
mov
jns
les
nop
inc
sbb
ljmp
cmpsl
filds
mov
mov
testb
push
fs
adc
xchg
dec
js
adcb
in
sub
xchg
stos
dec
push
insb
mov
adcl
add
add
stos
jo
int
ss
add
stos
mov
xor
dec
or
inc
pop
aas
shl
outsl
and
mov
das
in
cmp
fisttps
pop
fiadds
push
pop
mov
push
inc
aaa
cmp
clc
push
jecxz
mov
mov
sbbl
add
out
add
lcall
xor
jnp
sub
lahf
add
inc
shrl
push
jmp
pop
sbb
push
jne
push
xchg
pop
inc
inc
cmp
cli
xor
dec
dec
ja
push
mov
mov
fistl
sbb
lods
mov
iret
insl
xchg
lds
and
and
shll
dec
and
xchg
fdivs
gs
mov
mov
adc
pop
inc
imul
in
shr
jo
jo
xchg
push
pop
sub
and
fucomi
add
and
popa
adc
pushf
pop
shl
int3
pmulhuw
int
inc
inc
jmp
dec
push
lds
pop
push
fcom
push
cmpsb
mov
add
int
repz
push
pop
dec
jge
cltd
xor
mov
fildll
sbb
rcr
int
fucomi
jo
ret
mov
int3
mov
sbb
test
sbb
repz
dec
mov
pop
mov
push
xor
stc
loop
arpl
fnstsw
loop
lods
int3
sub
inc
adcl
and
mov
pop
or
xor
add
mov
push
rclb
sbb
adc
jl
sub
repnz
sbb
jo
mov
push
adc
xrelease
lock
push
xchg
icebp
mov
aad
jo
add
jl
xor
fstl
pop
mov
dec
cmc
test
popf
pusha
into
mov
sbb
in
inc
dec
adc
jmp
sub
and
negl
pop
ss
dec
mov
test
push
jp
outsl
mov
mov
mov
rcll
or
lcall
sub
adcl
cwtl
clc
adc
sbb
sub
jne
scas
jmp
cmpsl
ret
adc
xchg
in
test
cwtl
mov
pop
outsb
mov
sub
mov
and
ret
dec
arpl
adc
adc
in
cmp
jge
ljmp
test
sarb
arpl
popf
ret
aas
rcrl
outsl
cmp
int3
cmpsl
sub
pushl
fwait
loop
lret
add
aaa
and
pushf
inc
push
mov
test
xor
xor
dec
xor
xor
stc
nop
nop
lcall
jl
js
jno
jnp
push
mov
ret
aaa
jb
les
pop
inc
daa
stos
sbb
scas
cmp
or
mov
mov
sub
arpl
cli
push
dec
stc
push
add
xchg
rcrl
popa
jno
xchg
sub
pop
push
add
inc
lea
pop
aam
mov
mov
push
or
sbb
rolb
addr16
rol
test
sub
or
sbb
test
mov
mov
or
dec
call
jge
xor
adc
cmc
lret
loopne
mov
add
push
xor
in
cld
push
dec
push
adc
and
pop
xorl
xchg
xchg
fisubrl
or
mov
gs
jge
dec
in
cltd
add
in
mov
add
je
rcr
je
gs
aaa
shlb
pop
push
lock
pop
or
stos
sub
data16
inc
mov
xor
out
sbb
cmpsl
push
repnz
lret
dec
jns
xor
pop
and
mov
cmpb
dec
pop
xchg
pop
lock
mov
outsl
push
xor
dec
push
pop
xchg
fwait
jbe
pop
sbb
mov
jne
mov
dec
xor
and
into
push
daa
sbb
xor
in
int
fistps
aad
pop
rolb
xchg
inc
xor
and
lds
mov
inc
or
loop
push
jne
in
and
sti
pop
sbb
stos
loop
lods
mov
or
dec
hlt
ret
xor
sarb
lret
pop
test
jl
pop
push
out
sti
lret
sub
fdivrs
push
stos
xchg
pop
aaa
jne
add
icebp
jo
insb
add
and
test
in
jge
push
lret
or
test
pop
loop
sub
ret
mov
jp
imul
add
mov
shlb
ljmp
add
adc
jnp
shrb
rorb
and
cmp
lods
test
int3
xor
sub
sti
adc
ljmp
sbb
xchg
mov
fiaddl
fldl
push
mov
movsl
sub
dec
movsb
xchg
dec
adc
scas
aam
int3
cmp
mov
dec
adc
jae
ret
loop
jo
incl
jb
xchg
sbb
hlt
and
and
cs
shlb
fcoms
int3
xchg
sub
mov
sysexit
mov
int
insb
loopne
test
pop
add
in
mov
inc
add
adc
ror
mov
pop
and
mov
rcl
mov
aaa
jl
pop
lcall
lds
inc
sub
mov
jno
and
jno
lods
and
pop
insl
inc
push
pop
call
jp
cltd
xchg
xor
inc
cs
arpl
pop
js
or
mov
or
sti
out
mull
push
xchg
jmp
sub
cmp
mov
adc
and
aam
dec
lahf
mov
pushf
cmp
and
pop
ss
fdivrl
mov
test
push
arpl
sbb
mov
sahf
loop,pt
xchg
aas
xchg
hlt
mov
sub
push
push
rcll
add
mov
idivb
jne
stc
mov
call
adc
adc
xor
test
in
rcrl
xor
popa
repnz
lock
and
mov
mov
push
bound
shrl
push
push
sbb
xchg
fisubs
xchg
push
insb
mov
sub
cmp
test
jo
adc
shll
dec
mov
xchg
lret
shlb
sub
popa
mov
fcom
dec
cmpsl
mov
add
test
jl
fs
pop
mov
test
jg
cmpsb
repz
jmp
jb
sub
push
mov
xchg
maskmovq
ret
xor
imul
int3
in
sarl
divl
decl
and
dec
jae
jmp
scas
setno
insb
popf
pop
jbe
rcrl
and
mov
pop
imulb
nop
inc
xor
ja
jmp
call
push
lea
dec
mov
dec
push
add
jg
mov
jnp
fucomi
mov
mov
jnp
cld
mov
jae
adc
les
sub
fsubp
mov
and
xlat
dec
pop
jmp
sbb
jge
xor
out
rclb
sbb
repz
cmp
inc
pop
mov
inc
xlat
xor
data16
or
dec
shlb
loope
aam
ss
enter
pusha
outsl
jp,pt
movsb
dec
addb
add
mov
insb
add
xor
sub
dec
dec
dec
or
data16
mov
imul
adc
mov
inc
fisubrs
mov
jns
stos
xor
ds
stc
les
add
pop
xchg
loope
pop
outsb
out
sub
aas
pop
into
mov
adc
idiv
adc
adc
jmp
xchg
or
cmp
lea
push
push
fsub
loope
negb
hlt
xor
inc
xor
push
xlat
shl
mov
mov
adc
lret
dec
push
fstpt
push
pop
adc
mov
lods
popf
push
fisubrs
mov
push
sbb
xor
xor
lcall
pop
jge
imul
pop
in
mov
xlat
imul
icebp
fimuls
sti
scas
leave
mov
pop
mov
mov
cmp
mov
push
mov
push
loope
mov
rcll
jg
mov
push
test
cmpsl
cltd
repnz
test
shrb
out
mov
movsb
arpl
ret
in
xchg
sbb
enter
test
ss
vpcmpeqd
cmpsb
and
cmc
cli
stos
fs
sbb
decl
and
movl
cmp
shrl
mov
rolb
sub
in
bound
mov
cmp
in
mov
into
stos
fwait
push
adc
je
mov
lret
scas
out
sbb
push
or
or
sbb
fwait
negb
pop
nop
xchg
das
out
sbb
out
sbb
insb
sub
iret
insb
incl
inc
mov
aaa
push
dec
jno
loopne
imul
mov
jecxz
lret
dec
cwtl
jge
pop
mov
sbb
in
xor
leave
in
jno
xchg
lcall
mov
testb
or
ret
test
lods
push
cld
adc
jg
xchg
mov
leave
je
aaa
out
inc
outsb
ss
addr16
jg
xchg
jo
ss
das
xchg
xchg
pop
jl
mov
push
lods
inc
mov
or
in
fmull
cmp
xor
xchg
adc
inc
cmc
add
push
pop
lods
leave
movsl
xlat
cmpsb
inc
fs
add
lcall
shlb
jae
nop
pop
call
or
movsb
movsl
xchg
ss
jmp
xchg
add
xorl
in
notl
or
xchg
popf
mov
pop
mov
out
lds
scas
push
or
out
ds
ret
add
scas
aas
mov
dec
aaa
cmp
sbb
rcrl
and
loop
mov
cmp
pop
fwait
sub
mov
push
dec
pop
xor
out
mov
sbb
in
rcll
divb
mov
xchg
insl
sbb
push
shlb
push
and
pop
pop
jno
pop
push
jne
and
pop
pop
mov
push
pusha
jae
adc
dec
mov
cwtl
add
jne
push
test
iret
cmc
sbb
push
ds
iret
test
mov
xor
leave
aas
loopne
mov
pop
sbb
mov
xor
inc
fistps
pop
jo
or
and
subb
in
movsb
mov
dec
xlat
cmp
hlt
add
aaa
pop
and
mov
or
xchg
in
mov
sbb
cmp
xor
les
in
lahf
int
popf
add
push
sub
cmp
lods
jnp
push
clc
popl
mov
dec
adc
je
dec
xchg
hlt
int3
test
lods
and
ret
popa
mov
into
xchg
lods
addr16
nop
push
adc
notb
std
push
aaa
cmp
loopne
dec
adcl
rcrl
push
sar
negl
xor
pop
xchg
jle
iret
adc
push
xor
jg
dec
inc
fs
lret
es
fildll
filds
and
add
hlt
sbb
push
mov
pop
mov
les
ror
dec
roll
pop
scas
jo
mov
mov
fucom
mov
add
test
lods
pop
out
mov
gs
adc
sbb
cmc
arpl
lahf
std
ljmp
addr16
add
lahf
in
dec
fdivs
test
add
andb
mov
inc
add
shl
aam
popf
add
es
inc
mov
fnstenv
jp
sub
push
mov
es
push
out
lods
push
xor
inc
push
and
xchg
bound
nop
arpl
idiv
ret
xor
repz
pop
xchg
and
fs
lret
daa
scas
addr16
inc
fstl
and
and
mov
mov
jb
inc
pop
jns
std
cmp
out
movsb
mov
push
cmp
pop
xlat
xchg
roll
fiadds
les
sbb
movb
sbb
scas
push
int3
cmpsl
cmpsb
jp
subl
add
sbb
xor
add
scas
icebp
push
cmp
mov
cmp
inc
mov
movsbl
movsl
inc
mov
test
pop
cmp
mov
push
adcb
pop
and
pusha
xor
jecxz
mov
je
xchg
xor
and
add
popf
in
shlb
sahf
jg
xchg
xor
insl
mov
adc
xorb
out
int3
pop
inc
test
cmp
sub
std
sbb
mull
rcrl
adc
xor
lods
xor
cltd
push
xlat
cmp
dec
jmp
gs
sub
loop
outsb
fildl
sub
mov
sahf
test
ja
inc
sbb
gs
jl
mov
popf
addr16
pop
pop
and
fdivs
push
rcl
xor
fcoml
popa
push
mov
lcall
add
fs
pusha
jmp
and
cmp
lods
mov
xchg
push
jns
dec
pop
pop
jle
int
xchg
jbe
dec
cli
dec
shl
inc
inc
xchg
mov
cmpsb
addr16
in
inc
mov
and
movsb
popf
lds
mov
mov
adc
fs
scas
add
inc
cmp
push
scas
mov
jg
cs
mov
dec
xor
pop
mov
adc
loop
inc
xchg
xor
enter
jle
dec
cmc
mov
lret
icebp
gs
mov
xlat
mov
out
or
test
pop
lea
mov
mov
mov
jns
xchg
jns
sub
lods
inc
test
outsl
jno
jg
dec
sub
lcall
sbb
sub
sbb
popa
push
jp,pt
mov
or
sti
mov
repz
jle
aas
shrl
insb
pop
and
push
popa
js
push
mov
repnz
repnz
mov
scas
test
mov
xor
aad
adc
lea
stos
mov
cmp
mov
ljmp
sub
or
jae
into
rcll
imul
push
push
jnp
ja
ret
inc
and
mov
push
dec
mov
ja
leave
jne
jmp
out
add
inc
lods
flds
adc
loop
ljmp
adc
fs
shr
and
xor
hlt
mov
push
xchg
cmp
scas
sbb
scas
xchg
push
cmc
push
int3
cli
stc
inc
cmc
push
cmp
pop
dec
test
cmp
lret
and
aaa
pop
push
lds
lret
xchg
xor
fimuls
add
rcrl
shlb
jmp
stos
sbb
dec
fistpl
sub
mov
movsl
cmpsl
push
sub
rcrl
xchg
leave
xchg
cld
or
lds
mov
cmpsl
scas
outsl
or
sbb
fst
push
aam
leave
mov
testb
pop
iret
mov
repnz
dec
or
mov
leave
insb
in
icebp
and
xor
leave
sbb
lock
mov
int
adc
xor
xchg
or
out
gs
ja
xor
adc
in
sub
mov
xchg
mov
dec
fistpll
mov
adcb
roll
mov
lods
or
inc
arpl
shrb
pop
cld
ret
sub
push
and
sub
nop
cmc
mov
mull
inc
adc
cmpb
mov
pushf
mov
test
andl
sbb
test
les
mov
imul
push
fs
arpl
xor
mov
mov
adc
mov
pushf
cmp
inc
sarl
xchg
push
pop
out
shll
pop
mov
cmpsl
neg
or
das
sbb
jne
call
mov
mov
mov
dec
and
lods
jp
jb
xchg
fcoml
cmpsb
cmp
xchg
sub
push
test
into
or
insb
push
cmpsb
test
movl
cs
daa
loop
hlt
leave
lods
jp
cmc
lcall
mov
roll
push
sub
repnz
dec
dec
dec
mov
sub
mov
mov
and
mov
cmp
xchg
pop
jge
out
or
scas
cli
out
sub
sub
mov
push
aam
adc
jge
fbld
add
xor
pop
test
inc
xchg
mov
es
or
mov
outsb
mov
mov
hlt
cwtl
pop
int
mov
mov
cwtl
or
sub
xlat
mov
ja
sub
sub
je
adc
lcall
pushf
sub
mov
popf
cmp
sbb
testb
cmp
sub
ret
mov
mov
inc
in
jo
arpl
out
mov
jmp
stos
push
lods
cmpb
mov
les
cmp
pop
and
dec
cmp
or
xor
dec
cld
movq
mov
sub
mov
mov
hlt
add
inc
mov
dec
pusha
cmc
sub
inc
out
sub
loope
ja
dec
out
jae
inc
fimuls
push
mov
xor
ds
pop
loope
je
pop
cs
xchg
push
jb
stos
out
in
int3
cld
xchg
ret
mov
pop
or
mov
cld
cmpsl
cmp
push
xlat
or
mov
les
push
scas
pop
jmp
rcll
jne
push
cld
adc
stos
cld
inc
xor
jmp
arpl
les
jg
jecxz
cmpsl
cmp
mov
test
fadds
dec
mov
sarb
pop
imul
sbb
xor
mov
lret
test
test
or
scas
inc
and
into
and
ret
inc
mull
sub
or
fsubrs
mov
push
inc
push
mov
aaa
lcall
out
jp
or
dec
test
mov
or
add
das
or
add
adc
ljmp
aam
mov
lret
test
push
enter
movb
pop
in
push
dec
jbe
into
pop
and
push
std
test
inc
cwtl
clc
jae
clc
push
scas
enter
imul
inc
loope
xchg
push
loope
pop
cli
addr16
dec
dec
nop
pop
sub
hlt
push
dec
and
xor
xchg
shll
add
ret
jbe
lods
pop
cmp
insl
daa
dec
pusha
and
push
jg
in
mov
lods
into
pop
mov
adc
cltd
pop
push
cmpsb
adc
dec
pop
adc
addr16
mov
movsl
jb
rcr
lret
push
mov
cmp
mov
or
jmp
std
sbb
cmp
push
call
lods
or
in
test
testb
mov
in
adc
sarb
push
and
daa
fucomp
clc
gs
aaa
jge
sub
pop
adc
notl
lods
xor
lret
and
mov
cmpsb
mov
xlat
ss
or
cltd
and
mov
xor
and
mov
adc
push
mov
outsb
lea
test
and
fidivrl
xchg
pop
mov
jg
pop
mov
sbb
idivl
bound
sti
sbb
jnp
push
fstp
das
xchg
ret
xlat
mov
mov
add
rorl
in
xchg
push
out
adc
add
mov
inc
push
xchg
sbb
popl
js
lods
push
mov
pop
xor
mov
outsl
pop
xchg
inc
sbb
imul
inc
dec
in
push
add
sti
xor
dec
rclb
call
lea
pop
pop
popf
or
cmpb
jae
add
stc
div
mov
jbe
adc
out
push
sbb
add
push
lods
jne
mov
mov
sbb
mov
jmp
mov
scas
xchg
sbb
orb
inc
inc
test
test
mov
lds
or
inc
test
out
lcall
jmp
xchg
jg
ror
or
push
jbe
or
sbb
fwait
aas
xor
lcall
cmp
pushf
jecxz
das
movsl
adc
sbb
jecxz
cli
mov
pop
add
jno
scas
jne
repz
jge
or
or
mov
inc
sahf
std
pop
mov
lcall
lods
sub
adc
inc
arpl
mov
repz
dec
or
adc
repnz
fstpt
aam
cmpsl
loopne
fimull
addr16
les
sbb
adc
cmpsb
and
shlb
call
int3
or
push
loopne
icebp
push
jle
std
lret
popa
xchg
lods
mov
pushf
pop
leave
neg
cmp
inc
mov
add
fcoml
push
xchg
daa
loopne
fldl
std
push
scas
aam
sbb
dec
inc
f2xm1
inc
push
inc
mov
les
rorb
cmp
repz
xorb
push
adc
shlb
mov
mov
xor
mov
mov
xchg
movsl
bound
lds
push
jecxz
adc
xor
sbb
out
pop
sub
push
jns
jp
pusha
jmp
cli
outsl
and
std
xchg
jl
call
jnp
enter
cmc
fnstcw
insl
sub
aas
fcompl
mov
inc
pusha
stos
or
shll
or
das
leave
imulb
xchg
test
out
cmpsl
and
add
lea
inc
fistpll
inc
daa
jg
push
clc
std
jecxz
add
push
inc
rcll
mov
mov
aam
pop
aas
test
push
adc
and
inc
inc
pop
xchg
adc
stos
or
mov
pop
xchg
rol
pop
notl
mov
lahf
aaa
insb
xchg
stos
out
testl
inc
mov
pop
xor
mov
flds
test
outsb
inc
sahf
outsb
add
outsl
xor
outsl
jae
jo
aas
cmp
sub
shl
addr16
cmpsl
daa
lcall
mov
movsl
pop
ret
dec
ret
call
xor
sub
pop
mov
bound
sub
inc
xchg
pop
xor
sbb
test
xlat
jge
or
jecxz
out
adc
int
cmp
dec
cmp
sbb
inc
push
repnz
pusha
f2xm1
cmc
jns
loopne
out
lods
dec
lret
in
or
mov
mov
inc
dec
jb
push
jl
xor
les
pop
aam
repnz
sub
cmp
and
cmc
es
jmp
or
push
sbb
xorb
negb
ret
push
xor
imul
adc
pop
push
mov
inc
fisubs
sbb
xchg
mov
and
xchg
mov
pop
mov
mov
mov
inc
sub
test
out
mov
mov
js
mov
inc
dec
pop
shrb
dec
addl
movsb
ret
pop
mov
je
dec
movsl
and
int3
dec
mov
jae
add
pop
xchg
mov
out
sbb
aaa
in
xor
hlt
mov
jne
push
push
push
mov
pop
push
jno
movsl
xchg
push
iret
and
js
insb
add
test
dec
or
xor
outsb
and
inc
lods
lret
gs
add
mov
push
pusha
jne
leave
out
mov
iret
mov
jle
mov
sbb
sub
dec
or
push
fdiv
cmp
shll
lods
jb
fdiv
sub
cmpsb
pop
lahf
fstps
movsl
mov
flds
stc
dec
gs
xchg
lock
lock
jno
sub
cmpb
and
pop
jge
adc
dec
movsl
inc
adc
xchg
inc
mov
aam
push
lcall
mov
or
pop
test
test
scas
inc
dec
clc
push
jb
mov
in
iret
icebp
mov
xor
incl
jmp
and
mov
inc
sub
or
cmp
inc
clc
mov
call
shrb
add
data16
shlb
loop
cmc
dec
int3
inc
pusha
mov
ljmp
insb
inc
aaa
xchg
mov
lret
add
cmp
pop
pop
or
cmpsl
fucom
shlb
mov
out
adc
mov
xor
leave
pop
jb
cmpsb
mov
pop
aaa
dec
adc
shr
and
jp
fstpt
sub
add
mov
jns
shr
or
shrl
pop
push
mov
pop
mov
cld
movsl
inc
movsl
lods
insb
mov
push
add
and
mov
sub
xchg
bound
or
sahf
movsl
mov
pop
push
lret
ss
xor
aas
addr16
sub
inc
and
loope
orb
sahf
daa
mov
xchg
das
jae
inc
mov
orl
pop
nop
test
leave
mov
ds
scas
cmp
jp
shl
and
push
sub
xchg
imul
push
test
iret
xchg
lcall
inc
movsb
lcall
adc
jle
enter
inc
push
jbe
fcoml
sarb
mov
and
or
mov
mov
push
mov
xor
adc
out
in
push
mov
sbb
pop
push
xchg
sub
lods
pop
lahf
mov
mov
shll
std
inc
pop
pop
rcrb
xor
addr16
popa
mov
inc
pop
jno
shr
inc
scas
and
cltd
dec
outsb
ljmp
mov
fiadds
mov
fucom
enter
lds
addb
add
popa
pop
aas
rcll
lea
push
or
adcl
imul
fstps
fucomi
enter
neg
xchg
nop
enter
push
dec
call
bound
je
xchg
ja
movsb
xor
and
js
add
and
mov
lea
popa
icebp
mov
add
add
mov
pop
roll
stc
lcall
mov
sbbl
dec
push
sbb
push
cmp
dec
cli
xlat
cmpsl
sahf
cmp
jnp
sub
mov
in
in
jne
mov
dec
jl
add
and
out
sbb
adc
cmp
cmp
test
hlt
pop
enter
or
jbe
lret
test
mov
push
pushf
add
shrl
pop
fcmovu
mov
jmp
inc
lods
cld
fwait
mov
leave
xchg
add
les
leave
in
jle
addr16
or
xor
test
call
jmp
ror
test
loope
jle
lret
dec
idivb
ljmp
aas
pop
ret
jae
sbb
mov
push
inc
shl
test
xor
mov
outsb
and
cli
and
mov
mov
mov
inc
insl
xchg
inc
in
pop
lock
pushf
fwait
scas
in
mov
rolb
add
mov
xacquire
lea
pushf
mov
in
mov
repnz
xchg
jge
xchg
sbb
xchg
adc
inc
and
insl
test
push
jbe
xorb
mulb
and
or
testl
or
xor
mov
ja
not
les
push
ljmp
mov
sub
jne
mov
std
mov
pop
jle
pop
sbb
inc
jo
daa
and
mov
xlat
dec
and
fs
outsl
outsb
fs
push
fadds
sbb
mov
adc
cmp
addr16
pop
sarb
bound
jno
xor
jge
push
and
adc
sbb
sbb
ret
dec
mov
inc
aas
add
mov
ret
cld
in
in
mov
pop
inc
dec
in
xorb
cmp
or
into
push
mov
and
leave
fwait
sub
bnd
pop
insb
faddl
inc
hlt
dec
dec
icebp
loop
cli
adc
jp
pop
jno
mov
sbb
pop
bound
and
push
cmp
push
push
mov
sub
and
out
pop
mov
fwait
cwtl
outsl
mul
addr16
rcrb
cld
sub
mov
or
scas
fcmovnbe
jns
or
xchg
popa
cmp
xchg
push
lahf
lods
add
test
mov
in
mov
cmp
adc
push
cmp
xor
adc
and
pop
jae
add
jmp
scas
shll
push
jne
scas
lock
sti
sbb
ficomps
div
sti
cmp
pop
pop
jmp
faddl
es
pushf
in
aaa
arpl
inc
adc
and
call
lods
or
jno
sbbb
fdivs
and
mov
cld
loop
call
or
inc
push
in
sahf
pusha
add
js
add
scas
ss
jns
mov
adc
negl
push
adc
rol
popa
mov
mov
nop
pop
pop
pop
rorl
add
add
cmp
xchg
addr16
mov
out
cmp
fiaddl
push
lahf
mov
xchg
xor
and
outsb
ficoms
ret
ss
std
sahf
lds
int
xchg
jb
add
iret
jle
or
jmp
mov
pop
and
in
xchg
xor
push
mov
dec
mov
cld
mov
shlb
lret
fiaddl
in
fcoms
cld
dec
fcomi
xor
mulb
inc
xchg
adc
inc
or
lods
movsb
pop
mov
fxch
test
or
test
into
cmp
ljmpw
adc
xor
test
push
sbb
lahf
and
mov
jne
sar
xchg
leave
outsb
aad
pusha
subb
inc
xchg
dec
pop
btc
push
xchg
adc
bound
add
jge
pop
rclb
xchg
aaa
mov
scas
push
push
jnp
or
loopne
mov
cmp
lods
rcrb
fisttps
cmp
and
shr
rcl
mov
lea
push
in
fldl
jge
push
lret
shlb
jbe
into
cmpsl
into
ljmp
inc
cmp
xlat
xchg
ss
jbe
mov
xchg
ret
mov
leave
fisttps
jne
fdivl
notl
lret
inc
popa
stc
in
stc
in
mov
mov
faddl
or
push
mov
out
rorl
pushf
inc
sbb
dec
hlt
outsb
dec
jecxz
xchg
adc
in
pop
and
in
cwtd
pop
mov
fld
repz
je
jle
add
hlt
inc
add
xor
scas
xor
cltd
pop
pop
popf
and
lods
lret
push
lea
inc
popl
pop
add
inc
xchg
bound
cmp
pop
icebp
clc
sti
pop
loope
mov
pop
std
pop
sbb
cs
jne
lds
jecxz
mov
mov
or
dec
xor
mov
nop
dec
adc
pop
cmp
jb
jbe
call
jle
ja
neg
pushf
insb
stos
clc
inc
or
mov
dec
push
push
pop
call
xchg
xlat
movsb
lock
pusha
ret
cmpsb
inc
push
je
or
push
jmp
je
push
mov
mov
test
add
arpl
sub
dec
jl
test
popf
gs
jl
mov
stos
add
or
out
fxch
push
fs
jp
icebp
xor
jne
add
cmp
popf
sahf
movsb
sbb
out
aam
in
dec
imul
ret
mov
imul
lock
and
add
push
dec
or
out
stc
sub
cwtl
int
test
mov
inc
inc
xchg
inc
push
dec
into
aam
add
adc
cmpsb
push
call
pop
sar
imul
or
jp
int
test
mov
ret
mov
shll
aas
lea
fidivl
dec
mov
jle
popa
cmp
push
popa
scas
jmp
jnp
test
lret
mov
adc
pop
mov
stos
nop
jecxz
cmpb
test
push
pop
sbbl
jno
pop
xchg
pop
or
scas
lahf
incb
movsl
test
movsb
jno
sub
pop
and
out
sub
test
int3
and
and
xchg
jo
pop
std
dec
adc
movsb
xchg
mov
xor
push
and
cld
add
ret
in
pop
mov
or
jmp
mov
cld
xchg
jno
mov
push
loop
ljmp
xlat
cmp
stos
sbb
pusha
int
cld
dec
rorl
mov
sbb
xor
dec
xlat
or
lods
jl
dec
jns
mov
lea
adc
movsl
ret
inc
hlt
loopne
push
test
fcompl
call
stc
daa
fstl
rclb
add
sub
outsl
jg
jmp
mov
insb
inc
test
test
out
rol
inc
hlt
cld
adc
popf
pop
jecxz
daa
xor
dec
call
fsubrp
xlat
sub
int3
mov
cli
xlat
int
xchg
into
into
repnz
ja
mov
push
test
lret
xor
pushf
mov
xchg
pop
pop
scas
cs
out
fs
mov
sahf
mov
icebp
mov
pop
dec
je
movsb
mov
mov
jb
fmulp
or
mov
into
pop
inc
js
std
pop
pop
sub
fbld
iret
jae
jg
push
imul
push
or
mov
jmp
pop
out
dec
jb
mov
rolw
lcall
or
mov
inc
imul
fistl
sbb
pop
push
lret
or
pop
mov
pop
push
push
push
mov
mov
aad
jg
aad
imul
jbe
fldl
cwtl
pushf
or
sub
clc
stos
movsl
pop
out
cmp
sbb
enter
jno
mov
stos
bound
push
add
fdivs
stos
push
popf
mov
repz
dec
dec
push
pop
adc
xchg
mov
jns
inc
pop
inc
test
lcall
inc
xor
ss
sub
xchg
sete
sub
push
sahf
cltd
dec
repnz
repnz
jae
sub
xchg
jecxz
pop
fldcw
lods
inc
jne
or
stos
and
dec
lcall
jb
fsubrl
popf
ja
lock
test
aad
mov
xchg
inc
cs
sub
xor
adc
jo
cmp
mov
imul
inc
and
scas
daa
icebp
loop
ss
mov
pop
ret
in
xor
icebp
outsl
mov
mov
popf
es
ficompl
cwtl
pop
les
out
add
pop
or
mov
addr16
stc
jp
sbb
push
jp
lahf
inc
dec
jle
push
nop
jns
jne
push
push
loopne
dec
test
or
sti
pusha
ret
mov
add
lods
sbb
sub
dec
push
ljmp
out
xor
jge
jne
push
popf
pop
cld
add
adc
stc
stos
mov
mov
push
pop
push
fsubl
insl
ds
add
lock
loop
aaa
lods
test
mov
sub
dec
xchg
mov
outsb
mov
lock
push
xchg
rcrb
rcrl
inc
xchg
subb
and
pop
push
iret
in
mov
inc
into
add
dec
mov
cmp
cmp
sbb
jns
add
fsubrs
imul
sbb
xchg
xlat
pushf
xchg
stos
adc
mov
lcall
out
dec
hlt
jle
ja
mov
ljmp
in
push
std
push
and
add
and
xchg
pusha
hlt
push
popa
mov
sub
sbb
frstor
in
mov
mov
add
aad
stos
scas
pop
lds
inc
lods
mov
or
fxch
notl
push
mov
inc
dec
test
push
or
cltd
inc
sbb
dec
js
mov
cmp
mov
cmp
xchg
outsb
cmp
mov
aaa
push
add
jmp
std
sbb
and
sub
incl
cmpsl
int3
pop
fildll
and
cmp
mov
in
xchg
xor
sub
jo
push
pop
loopne
cmp
xchg
movsb
adc
pop
es
mov
xchg
mov
iret
aas
mov
add
add
mov
cmp
mov
stc
pop
xor
out
mulb
sbb
rorl
ficoml
cmpsb
cmp
push
mov
out
ljmp
jg
pop
dec
in
das
push
loope
push
les
sbb
rorl
pop
stos
jmp
xchg
adc
pop
xchg
push
imul
sub
ljmp
aaa
dec
xchg
sub
sub
push
inc
icebp
push
in
incb
sbb
xor
adc
sub
aas
cmp
sbb
fs
mov
shll
push
jo
roll
cmpsb
sbb
popf
test
pop
mov
les
push
xlat
test
and
test
cmp
mov
shlb
inc
or
hlt
aaa
scas
js
inc
mov
pusha
sub
jo
popa
mov
xchg
and
lcall
shrl
mov
int
push
cmp
sahf
jle,pt
jno
aaa
inc
imul
pop
clc
mov
xchg
inc
or
add
paddq
loopne
and
xchg
lea
mov
push
cwtl
les
es
mov
in
push
mov
pop
add
dec
jbe
push
popf
adc
mov
push
inc
mov
mov
push
lahf
jmp
cmpl
mov
lock
cmp
sbb
mov
and
jns
mov
cwtl
das
mov
movsb
pop
sbb
mov
fs
rcrb
or
inc
push
in
movsb
push
mov
inc
adc
jl
pop
out
in
cwtl
inc
and
or
iret
idiv
xchg
pop
sti
xchg
push
neg
or
xorl
or
lcall
cli
mov
test
xchg
loope
jnp
mov
imul
pop
push
dec
inc
xchg
lods
mov
pop
int3
mov
shll
ja
pop
rep
push
sub
pusha
and
dec
pop
adcl
pop
mov
mov
or
or
shlb
lea
and
add
pop
and
iret
fistpl
cmp
and
xchg
in
mov
ss
leave
scas
pop
xor
leave
sub
cmp
pop
aam
xor
and
mov
hlt
or
push
add
lcall
or
in
dec
rcrb
fisttpl
adc
jle
dec
loop
or
push
pop
fwait
push
jne
aas
mov
std
in
shrb
xlat
or
inc
push
test
sbb
loop
cmc
out
and
loopne
inc
leave
jg
pop
xor
cmp
test
cmp
faddl
in
xchg
mov
cli
mov
bound
jle
jo
pop
adc
sbb
sub
inc
jbe
xlat
lods
inc
jb
jnp
cmc
inc
xor
adc
gs
xor
jno
mov
cld
jne
push
test
push
jno
loop
sahf
xchg
mov
arpl
cmp
inc
sub
dec
leave
test
subl
sub
fwait
adc
inc
inc
mov
mov
and
mov
mov
jmp
mov
hlt
fwait
hlt
fsubl
lock
jno
cltd
mov
sub
das
fistl
push
pop
shrb
push
or
sar
lods
xor
and
mov
sub
lcall
das
jle
xlat
hlt
mov
fstl
dec
mov
xchg
lods
sub
in
and
cs
and
test
popa
lds
sub
stos
pop
sar
jl
pusha
subb
out
or
stc
cmp
scas
add
repnz
sahf
adc
push
movsb
cmp
rcr
lock
push
mov
sub
sub
and
js
mov
or
clc
xchg
push
add
shrd
mov
adc
and
and
mov
pop
lcall
mov
mov
orb
out
jp
add
mov
fistl
adc
rcrb
adc
mov
mov
and
bound
push
scas
or
shl
cmpl
iret
and
push
pushf
pop
insb
data16
movsb
jecxz
fs
in
jle
adc
or
add
sub
fadds
mov
frstor
inc
ret
push
test
orl
stos
fadd
ret
inc
jg
add
mov
jns
jle
stos
insl
xor
in
mov
pop
fwait
paddusw
pop
add
sbb
sub
mov
jmp
adc
mov
pop
sub
inc
mov
imul
mov
dec
loope
je
xor
imul
mov
pop
aam
sub
mov
lcall
dec
test
mov
insb
imul
and
aas
pop
sahf
ljmp
cs
popf
fcmovnb
ret
add
pop
pop
inc
out
notb
daa
mov
bound
mov
loope
dec
cmc
je
pop
lods
jl
pop
popf
or
mov
or
cmpsl
jno
lock
inc
js
cld
lcall
push
push
adc
popf
mov
in
push
sub
leave
and
ja
jnp
dec
leave
adc
rcrl
cmc
pop
lods
mov
bound
clc
sub
sbb
lcall
fwait
jge,pt
xchg
mov
mov
test
and
imulb
mov
push
rolb
pushf
lock
mov
ljmp
jb,pn
insb
test
adcb
aad
pop
mov
stos
jmp
push
jmp
mov
sub
mov
push
push
xchg
fldenv
push
pop
loop
add
out
dec
add
jns
lcall
ja
test
jg
pusha
pop
inc
sbb
gs
dec
sub
and
and
pop
stc
pushf
movsl
inc
rcl
or
fsts
adc
add
loope
pop
loopne
rcrb
pop
or
inc
adc
mov
into
cmp
repz
xchg
test
mov
aaa
xor
mov
cwtl
xlat
aaa
imul
jmp
nop
cmp
cmp
clc
sbb
fs
in
sbb
orb
lret
sbbl
push
inc
push
sbb
mov
adc
sbb
gs
push
int
jnp
cs
push
lret
imul
mov
scas
jns
mov
gs
cmp
out
cmp
out
int
cltd
xchg
popf
imul
pop
bound
inc
popa
and
data16
call
movsb
push
pop
cmp
int3
push
pop
popa
mov
add
push
fs
imul
rorl
sub
adc
adc
loopne
adc
sub
out
decl
dec
popf
mov
das
and
cmp
divb
jg
out
push
inc
gs
sbb
cmp
mov
in
jp
mov
push
sub
or
cmp
sbb
loope
mov
inc
mov
mov
mov
je
and
int
test
xchg
popf
fildll
mov
sub
lea
cmp
inc
dec
ja
scas
or
aad
ljmp
xlat
mov
and
mov
addr16
dec
push
cmpsl
dec
aam
mov
mov
inc
xchg
xchg
lods
push
mov
adc
mov
rorl
pop
push
dec
nop
rcll
cli
insl
mov
push
cs
add
push
out
dec
xchg
cwtl
stos
jae
and
pop
std
push
in
cmp
call
or
xlat
dec
idivl
pop
adc
stc
jecxz
cmpsb
pop
in
pop
out
pop
repz
dec
loop
pop
jmp
xor
fidivrs
mov
into
and
pop
dec
sarb
es
or
fldt
cmp
fnsave
push
dec
mov
imul
cwtl
in
cmp
jns
jge
xlat
imul
lcall
dec
mov
jno
popa
xor
fnstenv
push
inc
pusha
sbb
sbb
int
lahf
aas
jg
ret
or
jb
addl
jo
stos
xlat
sub
divb
outsl
adc
call
xor
test
repnz
dec
les
dec
fwait
push
stos
mov
cs
dec
int
loope
bound
sub
sbb
lds
inc
and
outsb
lds
and
inc
and
push
adc
push
in
mov
jb
cmp
fnstsw
or
fsts
or
mov
cs
xor
pop
stos
stos
jbe
insl
pop
xor
push
jl
push
out
push
outsb
ds
xor
xchg
and
aaa
cmpsl
mov
pushf
es
jno
or
hlt
popa
ficoml
push
fldt
mov
sbb
mov
dec
loopne
loopne
out
and
or
pop
add
insl
shll
imul
enter
aas
mov
subl
mov
mov
dec
jne
adcb
mov
adc
jg
shr
xchg
idiv
inc
lods
lods
sub
add
push
negb
or
fisubl
push
insb
sub
mov
lret
shlb
pop
addr16
notb
shll
in
les
ret
gs
divb
fcoml
leave
cld
sub
mov
cmpsb
fldt
stc
rol
xor
lcall
jmp
xlat
insl
xchg
rorl
xchg
push
es
ret
push
cs
iret
imul
ljmp
xor
ret
or
jge
mov
pop
dec
leave
pushf
movsl
and
test
and
sub
pusha
cmp
mov
int
cli
xchg
daa
shrl
es
sub
inc
aad
and
cmp
dec
cmp
dec
xor
xchg
popf
dec
gs
lahf
shrl
std
dec
cmpsb
cmpsb
loope
sbb
int
into
cmp
mov
leave
nop
mov
mov
scas
addl
cli
scas
jmp
sbb
inc
push
jnp
jl
dec
bound
push
loope
jae
jmp
push
xchg
int
xor
sahf
adcb
lock
add
or
mov
outsb
icebp
filds
ror
sub
sub
jmp
lret
add
cli
shl
das
pop
aad
ss
dec
pop
int
stos
mov
cs
in
and
pop
popf
stos
mov
in
mov
xchg
push
push
mov
rcrb
or
mov
leave
sub
and
xchg
mov
imul
push
or
pop
stc
sbb
inc
xor
push
mov
cmp
mov
jecxz
cltd
shrb
ja
ss
xchg
sbb
add
xchg
andb
jae
push
jmp
stos
rclb
nop
or
cmp
jae
mov
jle
jno
enter
dec
or
and
sarb
dec
je
adc
lcall
call
sbb
cld
cmp
mov
mov
ja
fwait
testb
loop
mov
popa
inc
clc
stc
jo
inc
popf
cld
pop
cmp
iret
dec
xchg
pop
pop
rcr
jle
sub
cmp
mov
mov
out
push
pop
jge
push
fdiv
aas
pop
jmp
mov
les
add
dec
ds
orl
and
pop
daa
mov
fcomps
and
sub
push
iret
ds
cmp
dec
int
sub
dec
push
pop
xchg
js
test
outsl
jecxz
jne
sub
popf
cmp
jge
jge
sub
iret
pop
mov
cwtl
xor
sahf
out
bound
pop
pusha
adc
push
pop
mov
or
xchg
jle
jle
int
sbb
test
push
jl
pop
shlb
pop
dec
les
sbb
ljmp
adc
add
dec
daa
fidivrs
xchg
pop
mov
push
mov
psubd
adc
dec
pop
lods
sti
fistpl
out
cmp
shrb
push
mov
xchg
push
sti
bound
mov
xrelease
add
cwtl
rcrb
pop
scas
mov
in
pop
sbb
imul
jl
test
fstpl
jmp
rcrl
enter
mov
test
shlb
and
dec
mov
addl
cmp
call
dec
movsl
lds
fisubl
gs
sarl
ret
rcll
or
ds
xchg
adc
xor
nop
inc
xchg
mov
inc
sub
or
jecxz,pn
push
jge
ret
out
mov
inc
jg
repz
dec
fwait
pop
addr16
adcl
int3
idiv
push
inc
sub
or
js
std
mov
jne
loop
lret
or
sub
adc
loope
mov
and
push
mov
pop
fwait
pop
int3
inc
cli
cs
rolb
xchg
fcoms
cli
adc
scas
dec
sti
adc
sub
push
jmp
sbb
lcall
add
xchg
popf
stos
imul
sahf
adc
sub
xchg
stc
jmp
ljmp
push
aas
out
sbb
stos
sbb
es
jno
test
xchg
pushf
jno
stos
add
fs
mov
ja
mov
pushf
sbb
xchg
es
and
xor
mov
aam
aas
ljmp
pop
ja
inc
icebp
jle
adc
mov
inc
push
lret
imul
mov
lds
xchg
xor
sub
push
repnz
pop
cs
rolb
addl
mov
out
repnz
lahf
shr
rolb
clc
stos
fidivrl
pop
adc
popa
and
push
mov
mov
inc
jbe
xchg
addr16
pop
popa
mov
outsl
jl
loope
xor
mov
and
sbb
daa
mov
imulb
loope
movsb
jl
mov
push
add
sti
daa
jno
pop
aam
cmpsb
xchg
dec
aas
std
in
fsts
js
push
sub
xchg
push
or
lahf
mov
fidivl
dec
push
scas
sbb
add
xor
push
jb
xchg
pop
jmp
loop
arpl
int3
gs
lock
movsb
test
aas
adc
repnz
ljmp
fstpt
js
mov
jmp
push
adc
mov
shll
in
mov
jmp
sbb
pop
int3
jl
xchg
out
cmp
sbb
popa
mov
in
push
nop
cmp
mov
stc
xchg
cmp
cwtl
lods
mov
cs
mov
inc
jmp
hlt
leave
hlt
lcall
lds
pop
xchg
jns
cmc
or
push
inc
push
sbb
bound
ror
jmp
adc
movsb
fcomp
jb
push
xchg
sub
lea
adc
push
jg
fs
dec
into
orl
es
mov
fmull
xchg
aaa
mov
nop
clc
mov
cmp
or
jae
xor
pop
inc
cmp
nop
xor
data16
mov
pop
push
out
das
int
xor
lret
scas
xchg
xor
lock
and
sub
adc
stc
int3
mov
sub
hlt
inc
mov
fbld
ret
loopne
incb
xor
xor
movswl
jnp
outsb
call
add
idivb
imulb
insl
arpl
add
mov
sbb
mov
mov
cmpsl
pop
inc
adc
loopne
ds
xor
lods
rcrb
or
jg
and
ret
orb
fucomp
gs
scas
sbb
addr16
fs
aad
mov
xchg
push
pop
fldl
sbb
push
mov
lea
push
adc
std
movb
push
cmc
push
not
jecxz
fs
mov
mov
lea
loope
inc
dec
pop
iret
mov
push
inc
or
test
fldenv
int3
and
test
dec
call
fisubl
test
xchg
jp
add
xor
or
and
loopne
and
int3
mov
mov
imul
rcrl
jnp
sub
and
cs
sub
jns
xor
jne
xchg
pop
adc
sbb
movsl
xchg
movsb
mov
jae
rclb
dec
imul
lret
arpl
pop
pop
fdivs
cmpsl
cmp
aaa
sbb
jmp
dec
lods
hlt
sbb
ret
ret
push
ja
enter
rcrl
outsb
cmp
or
aas
out
rcrb
xchg
cmc
or
push
mov
fsts
xor
pop
push
int3
in
add
je
fisttpll
pushf
add
shll
into
inc
icebp
jge
xchg
insb
mov
xlat
inc
jno
jae
jno
mov
lcall
fstps
mov
xchg
imul
inc
push
push
insb
sahf
cmpsl
jge
sub
jae
push
dec
fsts
ljmp
mov
fists
push
lret
mov
je
cmp
filds
xchg
sbb
and
push
or
mov
or
out
clc
insl
mov
xchg
jg
inc
jns
adc
push
mov
fnstcw
js
sub
stos
push
cmp
fwait
dec
out
inc
das
es
dec
and
aaa
andl
call
aad
sub
xchg
movsl
push
jl
xchg
insl
nop
mov
icebp
cltd
mov
pop
mov
xor
mov
out
sbb
in
popa
push
inc
cwtl
scas
cmc
xchg
shrl
sbb
enter
scas
out
popf
lret
mov
std
jbe
sahf
fimull
push
out
scas
shll
fldt
jno
jmp
dec
lods
adc
and
cs
hlt
jp
addl
popf
inc
xchg
mov
push
icebp
jb
mov
xor
je
jne
int3
push
jbe
test
dec
add
addr16
xchg
andl
out
mov
fnstcw
gs
jmp
fsubrs
and
rsqrtps
sbb
jo
pop
stos
pusha
adc
test
xor
pop
cmp
mov
xchg
mov
dec
jae
jge
pop
jae
fistpl
add
xchg
push
add
push
or
cltd
jo
sub
hlt
inc
je
imul
sbb
rorb
push
and
rcr
mov
aam
dec
in
mov
cmpsl
ja
push
int
pop
cmpsl
aad
cmp
pop
jbe
ja
imul
xchg
lret
mov
inc
cwtl
lock
pop
repz
inc
dec
jmp
xor
data16
data16
daa
lahf
xchg
hlt
sti
inc
mov
dec
loop
testb
jns
test
or
lods
fldcw
aas
jle
lahf
mov
cmp
popa
dec
mov
cld
pop
fs
repz
pop
data16
cmpsb
inc
sbb
dec
add
jo
cmp
das
sbbb
pusha
call
pop
push
jno
fs
je
jmp
jge
out
jnp
fsubrs
bound
push
cltd
out
lods
roll
and
adcl
cmp
pop
addr16
lds
pop
push
sub
test
idiv
scas
jns
mov
or
adc
mov
cmp
xchg
add
adc
sbb
cs
sti
sti
xor
fcoml
ss
insl
fsts
push
dec
xchg
popf
les
insl
inc
les
push
or
out
mov
xor
popl
cmp
jle
les
imul
xchg
loop
mov
enter
fnstcw
aad
insb
push
insl
pop
ret
or
inc
xor
cmp
cmpsl
inc
call
cmp
ljmp
jb
xlat
jno
xchg
adc
cmpsl
fwait
sbb
pop
arpl
bound
rol
jae
nop
sub
out
pop
adc
mov
pop
mov
dec
and
mov
pop
mov
mov
es
inc
adc
and
loope
xlat
and
jecxz
or
icebp
pop
mov
mov
pop
loopne
xchg
inc
in
aad
sar
lds
and
sub
xchg
adc
or
into
sbb
in
mov
cmp
mov
xchg
cmp
dec
pushf
cs
inc
push
aas
inc
jecxz
iret
mov
sub
aas
push
jecxz
enter
insl
outsl
cmp
xchg
push
pop
les
repnz
das
xor
in
outsb
cwtl
mov
arpl
fwait
mov
mov
shrl
push
mov
cmp
pop
insb
mov
es
fisubs
shlb
mov
adc
cltd
add
add
jb
stc
push
mov
and
pop
sub
sub
pop
inc
push
push
jge
test
insb
adc
jo
sub
test
fmuls
push
shrb
push
sub
in
hlt
adc
mov
mov
mov
cs
add
test
lock
or
jne
pop
mov
leave
push
inc
faddl
mov
dec
test
cltd
xchg
inc
sbb
les
jae
xchg
push
pusha
and
mov
jne
mov
cmpl
jno
or
pop
je
and
scas
cmp
sbb
and
mov
xorl
mov
push
xor
mov
test
dec
cmpsb
nop
add
pop
dec
push
push
sti
sbb
fdivrs
push
enter
ja
clc
scas
lods
mov
push
sarb
or
clc
test
icebp
jae
push
inc
or
mul
mov
shlb
sbb
loop
lret
in
inc
sbb
arpl
mov
and
add
push
pop
add
loop
mov
sbb
ret
xchg
or
aas
out
jg
push
sbb
rorl
jmp
aaa
je
hlt
push
and
push
and
leave
movsb
sbb
lds
arpl
cltd
dec
in
cli
sub
out
mov
jp
or
nop
inc
clc
hlt
sub
pop
stc
nop
dec
es
outsb
cmp
sub
test
pop
dec
inc
daa
sbb
shlb
loope
enter
xchg
xchg
inc
icebp
mov
subl
xchg
cmp
nop
iret
sub
sbb
into
cmp
shrb
shl
cmpsb
cmpsb
out
lcall
mov
into
movsb
sbb
fisttpl
addr16
aam
addb
sub
pop
std
jno
jg
addl
stos
nop
fistpll
or
lods
sub
lret
xor
mov
mov
lods
fisttps
into
pushf
cmc
mov
fstl
popf
dec
fcomps
add
or
mov
jae
and
mov
mov
jl
rcrl
loopne
insb
mov
and
pop
cmp
ret
fsubrs
mov
push
icebp
sub
out
adc
adc
out
bound
jle
add
sbb
mov
psubd
adc
inc
lret
push
pop
leave
out
fidivs
out
jne
shl
in
and
jp
cmpsl
cmp
mov
dec
andl
in
mov
cmp
or
dec
test
ficomps
push
data16
mov
into
lea
mov
xlat
daa
mov
repz
xor
jl
std
inc
cwtl
mov
pusha
cli
inc
aaa
cltd
dec
dec
xor
jmp
outsb
sub
inc
pusha
in
inc
test
or
in
inc
sub
mov
inc
or
mov
xor
enter
xor
mov
cmp
out
xlat
cmp
rolb
pop
add
pop
jmp
stc
jge
es
add
mov
into
jne
gs
popf
and
mov
es
popf
xchg
inc
imul
and
mov
jg
add
int
jnp
ficoml
mov
xchg
inc
stos
mov
xchg
adc
jb
inc
rolb
mov
jo
lcall
fst
ss
stos
imul
jb
arpl
lret
mov
adc
out
popf
aam
xchg
popf
mov
push
push
lcall
dec
decl
xor
das
sub
aam
test
movsb
inc
ljmp
in
movsl
mov
mov
loopne
xchg
dec
or
pushf
popf
dec
mov
shrb
loop
cmp
in
mov
nop
mov
and
lods
jle
in
shlb
das
push
jns
in
jp
lea
push
sub
adc
or
sub
push
mov
loope
add
ret
sub
fbld
inc
xor
lcall
xorl
jecxz
mov
iret
and
xchg
jns
shll
imul
clc
sub
push
iret
add
add
mov
cwtl
xor
adc
mov
jno
out
cmp
ss
mov
ffree
ja
mov
test
or
sub
add
aaa
lods
das
imul
jns
jo
or
pusha
mov
fucom
jb
leave
nopl
jecxz
or
cld
stc
mov
fdivs
mov
fstl
call
jnp
xchg
cld
mov
mov
jle
mov
adc
rorl
cmc
outsb
aad
leave
outsb
push
imul
arpl
cmp
or
fstpt
lods
inc
ret
mov
imul
pushf
idivl
cwtl
int3
popf
daa
movsl
sub
push
sub
cs
push
dec
rcll
xlat
xchg
inc
mov
outsl
insl
sbb
mov
sub
jle
adc
addr16
push
lods
clc
add
xchg
aad
out
mov
jo
lahf
outsl
inc
test
ja
jp
or
into
leave
mov
pop
mov
push
rorb
mov
nop
movsl
mulb
inc
mov
xor
hlt
sub
sub
mov
test
loopne
lahf
jmp
push
jmp
mov
mov
mov
jae
mov
or
andb
nop
push
imul
jae
lcall
es
cs
out
push
mov
rorb
dec
stos
aas
cld
mov
lret
test
outsl
imul
xchg
daa
lods
sub
or
jmp
test
mov
xor
xchg
push
sbb
inc
je
jne
cmp
fcomp
xchg
push
cmp
repnz
jle
notb
xor
aaa
stc
dec
sbb
test
in
aad
cmpsb
stos
add
sub
jbe
ljmp
jg
add
sbb
and
cltd
or
je
shlb
mov
scas
mov
mov
xchg
sbb
loop
inc
popf
sub
movsb
xchg
bound
adc
adc
inc
cmc
mov
imul
pop
push
sti
daa
enter
xor
dec
jle
push
jnp
jmp
jl
mov
xchg
mov
lea
bound
rol
cli
jge
mov
jno
xor
push
mov
aaa
dec
mov
lret
into
pop
test
nop
insl
lcall
xchg
pop
cmp
popa
cmp
aas
loope
jle
js
inc
fwait
mov
es
pop
pusha
pusha
inc
bound
cmp
push
and
mov
sub
aam
mov
inc
pop
out
outsl
repnz
mov
push
xor
dec
ret
pop
movswl
jl
insl
jns
add
sbb
jge
pop
out
push
or
mov
jl
lcall
sbb
pusha
mov
jg
rcl
and
lods
and
lcall
mov
sbb
scas
mov
test
pusha
cs
into
ds
sbb
scas
sahf
mov
xchg
and
and
fimull
jbe
call
cs
ds
xchg
cmp
je
add
lds
jo
inc
lea
sub
mov
pop
inc
mov
jmp
push
sbb
int3
pop
mov
or
mov
mov
rorb
into
mov
xchg
cmp
pop
nop
inc
mov
add
pusha
jmp
mov
sbb
das
mov
sub
or
xor
jbe
lcall
fnstenv
push
movsb
jl
inc
xchg
dec
stc
fcmovbe
jecxz
roll
repz
xchg
dec
cmp
cli
lahf
or
pop
into
push
cmpl
notb
xor
and
xchg
xchg
pusha
dec
xchg
cmp
dec
es
stc
xchg
and
jg
push
pushf
sbb
insl
idivl
andb
sar
or
arpl
xchg
stos
nop
aas
sub
pop
inc
insb
dec
scas
ret
jnp
push
push
ja
out
rcrl
mov
inc
hlt
add
dec
sub
jne
cmp
mov
add
pusha
addr16
add
sar
mov
jge
hlt
jae
push
or
lock
xchg
lods
add
das
bound
bound
pop
push
out
mov
jne
mov
cmp
insb
scas
divl
mov
mov
rcrb
sahf
jnp
orb
dec
cli
loop
pop
sub
aas
jmp
xchg
rcll
loopne
pop
lods
push
sub
sbb
push
lret
inc
mov
sbb
addr16
push
icebp
push
xchg
ljmp
fisttpl
fldt
into
mov
lcall
iret
cmpsl
lods
xchg
adc
xchg
inc
xchg
sti
push
xlat
mov
dec
sub
leave
roll
inc
shlb
inc
lahf
test
sarb
rclb
sub
in
jecxz
shrl
xor
mov
repz
inc
jo
fcoms
mov
mov
push
push
std
clc
add
subl
push
add
pop
popa
sti
ljmp
daa
stc
subl
mov
dec
repnz
pushf
jnp
fldpi
cmp
pop
mov
jo
mov
fsubrl
pushf
push
loopne
xor
test
jae
sub
je
les
mov
lret
cmpsb
popf
push
sbb
sbb
int3
push
iret
das
pop
in
push
cmp
mov
test
repz
scas
adc
mov
fdivrl
ss
jle
dec
pop
stc
pop
and
sbb
or
cmp
cmpsl
adc
jns
mov
in
in
push
sbb
fwait
mov
jns
ret
cld
fs
pop
inc
insb
and
push
addr16
mov
cli
stos
sbb
mov
bound
dec
rorl
fsubl
pop
or
stos
inc
cmp
lods
or
mov
add
mov
outsl
movsb
mov
jb
or
adc
movsl
rorl
cld
jecxz
inc
subb
incl
xor
pop
ret
sub
or
mov
push
test
lods
mov
mov
pop
push
pop
pop
int
sub
pusha
lret
sub
sbb
jmp
xchg
mov
inc
sub
jl
mov
inc
xchg
add
push
jns
push
add
inc
daa
cmc
movsb
jle
dec
fadd
jnp
push
out
dec
or
pushl
dec
sbb
leave
je
ret
out
mov
sub
cmpsl
inc
mov
push
mov
repnz
mov
ret
pushl
xor
jb
inc
loopne
inc
xchg
inc
mov
xlat
addr16
mov
jnp
cmp
mov
mov
ret
dec
sarb
jge
jp
and
push
out
sbb
push
dec
or
mov
out
jl
fadds
xchg
jo
gs
dec
adc
mov
not
les
nop
fidivrs
daa
dec
lahf
faddl
inc
inc
aaa
inc
add
xor
out
cmpsb
inc
aas
sub
mov
mov
icebp
rcrb
inc
sub
andl
cmpsl
fdivrp
aaa
add
dec
pop
addb
mov
dec
cmp
fcoms
aaa
push
imul
and
add
jecxz
xchg
movsl
lock
fisttps
jl
pop
dec
jg
in
je
and
fisubrs
push
aam
mov
imul
xchg
dec
and
imul
adc
int
fwait
or
xchg
sub
adc
mov
xor
bound
mov
inc
add
mov
and
xchg
mov
sub
insl
jg
nop
dec
test
shll
pop
aad
mov
cmc
inc
les
jmp
fwait
adc
pop
aad
cmp
dec
jbe
inc
es
inc
mov
aas
inc
lret
inc
mulb
jge
and
mov
inc
std
push
mov
leave
in
mov
sub
mov
shlb
jb
add
test
add
adc
in
mov
inc
jne
xchg
push
xor
dec
xor
loop
xor
es
in
adc
cld
lcall
add
mov
mov
xchg
mov
push
xchg
out
lods
jns
jge
iret
lock
push
mov
and
fwait
mov
add
pop
adc
repz
sub
arpl
sahf
xor
dec
cs
xor
and
mov
in
inc
nop
lods
cmp
sbb
nop
inc
bound
aaa
aaa
dec
mov
jecxz
adc
call
roll
gs
cmp
fwait
pop
pop
aas
jnp
fcomp
stos
add
mov
adc
cmp
xchg
stos
mov
cld
add
xlat
push
cmp
cli
add
mov
and
push
and
mov
xor
mov
sbb
pop
pop
imul
cmp
mov
add
jo
mov
clc
or
fdiv
lock
xchg
pop
pushf
push
xor
cmc
fcmovu
shll
ja
jmp
in
xor
xor
ror
add
xchg
aam
or
lret
lea
movsl
lahf
sub
add
repnz
inc
mov
aas
dec
jo
lock
pop
ss
fwait
mov
nop
inc
sbb
inc
mov
hlt
hlt
stc
jno
mov
pop
clc
scas
adc
enter
cmpsb
mov
jg
mov
shlb
push
pop
cmp
add
loop
inc
or
punpckhbw
fsubrl
jmp
jae
scas
in
pop
cs
push
pop
notl
lcall
lahf
pop
pushf
arpl
push
jl
fdivs
hlt
jecxz
mov
and
into
xor
sahf
mov
push
push
mov
xchg
into
mov
lcall
inc
cmpsb
fidivs
and
enter
jmp
xchg
fstps
jne
xchg
jecxz
xchg
fsub
add
sbb
jle
jae
ret
lret
adc
or
andb
out
pop
adc
push
fsubr
int3
mov
enter
jb
or
xchg
cld
test
sbb
pusha
in
fistps
mov
sub
mov
std
sti
icebp
mov
fistpll
stos
cli
xchg
jg
mov
jns
sub
fisubs
sub
add
lods
mov
sbb
dec
and
mov
jecxz
les
addr16
or
rorb
out
cli
inc
pop
push
stc
les
int3
out
es
xchg
scas
movsl
sbb
jbe
rclb
fwait
pop
outsb
push
out
xor
pop
dec
cmpl
lods
test
push
stc
jne
cmp
loop
jns
aad
push
add
or
ret
add
fistpl
lock
dec
cli
inc
cmp
mov
sub
mov
into
jmp
jbe
cmp
inc
pusha
xor
mov
fstp
jmp
mov
inc
fisubs
mov
sub
movsl
das
adc
push
std
shr
xor
sub
nop
adc
lea
test
out
ret
pop
es
or
dec
add
jno
push
ret
mov
mov
ljmp
sti
cld
xchg
or
mov
cmp
cmp
nop
fwait
mov
je
xorb
add
incl
and
jae
sti
push
mov
mov
cmpsb
jo
inc
pop
mov
lds
cli
insl
xchg
pop
xlat
sub
jb
leavew
stos
cmc
pop
and
cvtps2pi
mov
xchg
mov
js
out
pop
jp
cli
movsb
xorl
sub
adc
jp
filds
shrl
sbbl
test
push
adc
out
cld
shl
sub
mov
push
insl
jl
mov
in
jne
xor
mov
lret
data16
aad
cmpsl
dec
jp
fsubp
mov
nop
cwtl
xor
scas
popa
sahf
out
adc
rcrb
pushf
pop
pusha
movsb
cwtl
sarb
ds
xor
xlat
test
std
std
fwait
in
dec
into
inc
xor
idivb
jecxz
lret
shl
xor
lds
or
or
cmc
call
ficoml
mov
leave
sti
mov
aas
lods
les
xchg
faddp
xor
push
fcmovu
jmp
mov
push
outsl
into
pusha
jp
pop
xor
ja
cmp
dec
mov
outsb
stos
xor
stc
or
fs
pop
mov
nop
jl
xchg
cmp
dec
fisttps
sub
enter
pop
jmp
ss
pop
addb
test
and
outsb
cmp
incl
aaa
cmp
mov
xchg
push
xchg
out
test
push
test
add
mov
mov
mov
add
inc
iret
or
sub
sub
and
jp
imul
sbb
mov
cmp
jmp
dec
xor
or
cs
push
je,pt
loop
mov
inc
inc
push
sbb
dec
pop
add
mov
loop
testl
cli
jnp
scas
shlb
sti
pop
inc
push
sub
add
sbb
in
xor
mov
sahf
out
loop
add
sub
mov
mov
push
dec
pop
jp
test
push
add
xchg
icebp
test
dec
enter
nop
ret
or
es
mov
sbb
das
cmp
repz
ss
adc
pop
ss
inc
and
sub
or
jb
loop
imul
pop
xchg
dec
cmp
shll
add
inc
and
mov
or
dec
lods
mov
and
daa
lock
inc
fs
xor
pop
add
js
jp
pop
jl
push
jne
sub
rcrl
rclb
xor
dec
mov
or
mov
out
xchg
add
scas
jo
or
andb
imulb
test
ror
shlb
push
jb
push
addr16
scas
push
push
in
xchg
dec
push
in
enter
push
xor
and
or
mov
push
push
ja
cli
js
andb
sub
iret
jmp
rorb
iret
xor
rcll
mov
pop
fdivl
sbb
dec
inc
inc
movsb
outsb
mov
repz
mov
jg
lock
sbb
mov
adc
fucomi
pop
jne
fidivl
or
mov
push
cmp
mov
xchg
xlat
mov
xchg
fwait
inc
jecxz
add
int3
dec
ficompl
cli
fisubrl
pop
cld
les
cmp
mov
push
or
adc
mov
ret
dec
xor
scas
pop
and
inc
or
adc
fs
add
sub
into
test
push
std
jmp
bound
xchg
mov
jmp
lahf
nop
mov
stos
sbb
ljmp
dec
jb
push
mov
adcb
add
push
pop
sub
push
jns
lcall
jmp
mov
pop
or
sub
xchg
mov
sbb
push
inc
ret
js
sahf
dec
test
ja
addr16
hlt
sub
add
and
and
xchg
xchg
lret
xor
jmp
out
in
imulb
add
push
pop
inc
and
and
add
push
iret
and
pushf
pop
adc
mov
cmp
pop
int3
pop
cmpsb
pop
push
mov
cwtl
xor
popa
xchg
cli
dec
jl
lock
jo
mov
push
sbb
cltd
jno
daa
aaa
call
xlat
add
iret
cmp
jno
xlat
lret
je
popf
and
mov
jmp
inc
cmp
dec
stos
sahf
mulb
mov
inc
add
les
pop
stos
hlt
iret
cltd
enter
mov
jb
and
sbb
dec
lds
cwtl
add
or
and
mov
cmp
cmp
cmp
and
in
push
enter
movsl
fucomip
rcrl
push
adc
shr
call
call
jno
xchg
push
pop
mov
pop
test
push
jb
lods
inc
mov
bound
out
dec
ss
dec
sub
sbb
cmp
sub
bound
and
es
leave
outsb
adc
test
ss
xlat
jo
lock
jmp
dec
push
xchg
scas
xor
and
test
fildll
aas
xchg
bound
fstps
push
popa
mov
dec
addb
bound
jmp
xchg
sub
xlat
xor
jbe
shl
andl
aaa
out
xlat
jns
mov
inc
outsl
pop
loopne
outsb
shlb
dec
push
push
rcrb
dec
shlb
push
ret
fwait
nop
dec
int
inc
inc
in
add
mov
sbb
loope
jo
jnp
fs
ss
cs
xchg
push
fwait
ret
mov
mov
loopne
add
pop
pop
cmp
or
outsl
mov
push
fstp
mov
jmp
inc
xor
daa
rclb
in
pop
subl
cmpsl
lods
les
xchg
sbb
jb
movsb
fs
out
mov
sahf
movb
pop
leave
lds
bound
out
and
cmc
mov
mov
sbb
xlat
mov
xchg
or
arpl
gs
mov
cld
adc
mov
psrld
les
lahf
add
cwtl
into
loopne
jae
ja
ret
pop
clc
test
adc
mov
lcall
test
jbe
dec
aam
sub
jae
pushf
inc
pop
and
push
lcall
add
mov
adc
fldl
stc
xchg
andl
jbe
aas
jne
jle
ret
sbb
dec
mov
and
in
mov
adc
out
lret
fildll
push
or
push
mov
rcrl
jle
pop
dec
sbb
je
loope
cmp
inc
cmc
shll
fwait
sbb
jl
cmpl
mov
and
aad
pop
mov
cwtl
out
push
xchg
pop
testl
stos
loop
and
lods
add
loope
xchg
dec
mov
out
out
ret
dec
jmp
adc
movsl
and
pop
rol
or
in
roll
nop
rcll
fdivrl
cmpsl
mov
daa
cltd
inc
out
inc
pop
pop
pop
mov
outsl
mov
pop
fcmove
sbb
adc
push
adc
adcb
sti
mov
cli
mov
lret
xchg
jmp
push
push
ficomps
loopne
push
sbb
or
add
sub
add
mov
es
sub
push
adc
fs
scas
shl
push
pop
imul
cld
sbb
repz
out
xor
ret
sarl
inc
sub
inc
push
add
add
movsb
xor
fnstsw
out
dec
sub
fs
mov
fildl
sub
test
mov
xor
ret
lock
xchg
or
and
loop
ljmp
repnz
stos
jge
sbb
out
and
pop
fidivrl
call
push
and
lds
jnp
insl
or
mov
jecxz
pop
mov
jmp
cmpsb
std
shlb
pop
or
stos
faddp
or
scas
cmp
cmp
sti
pop
pop
xchg
cmpsl
lret
push
shlw
pop
pop
orl
and
xchg
fiaddl
into
lret
les
test
ds
lahf
bound
dec
mov
outsl
movb
movsl
jmp
iret
loop
pushf
icebp
sbb
lahf
mov
test
inc
mov
daa
les
xlat
mov
rorl
es
stos
xlat
jmp
ja
iret
cmp
movups
movsb
movsl
dec
jecxz
and
rorb
cwtl
fcompl
in
or
faddp
mov
sub
sbb
js
dec
inc
push
sub
add
dec
mul
int
leave
xor
enter
jns
xor
dec
test
cmp
leave
in
cmpsl
adc
jge
inc
mov
inc
mov
cmp
outsl
mov
stos
lret
dec
mov
mov
shl
or
lahf
hlt
outsb
push
inc
insb
roll
popa
ss
xchg
in
subb
mov
out
in
lods
in
or
add
in
pop
add
stc
cwtl
dec
jle
repz
sbb
repz
icebp
nop
call
xchg
sub
and
push
enter
jns
pop
stos
fsts
clc
in
fucom
cmp
lret
clc
pop
push
mov
in
ret
fidivl
rol
out
jne
jae
es
cltd
or
pop
pop
stos
outsl
jp
xchg
ror
rcll
dec
mov
mov
mov
mov
and
arpl
aad
cwtl
cmp
sub
test
pushf
jl
inc
adc
push
pop
mov
dec
scas
push
pop
inc
xchg
push
mov
scas
lock
sub
cmp
jno
test
repnz
xchg
stos
xchg
lret
pop
push
lret
scas
xor
pop
iret
adc
sbb
xor
lcall
and
stos
ja
addr16
sub
test
pop
shll
or
in
mov
int3
mov
in
outsb
in
add
xor
jo
mov
xorb
ss
sub
dec
or
and
orb
out
sub
adc
cmpsb
dec
adc
int3
lods
push
in
xchg
xchg
scas
adcl
cmp
sub
lret
push
xorb
neg
push
adcl
cli
or
ds
loop
ficomps
in
and
jp
mov
int3
arpl
jmp
cmpsl
cltd
jge
test
jno
mov
mov
iret
jle
ret
movsl
test
mov
and
jbe,pn
lahf
mov
xor
cli
mov
inc
je
stos
out
cmp
adc
inc
lahf
mov
stc
insl
sub
aam
mov
dec
in
loopne
hlt
push
pusha
pop
dec
stc
add
dec
sbb
aam
fcoms
pop
lds
rclb
inc
sahf
inc
mov
jnp
loop
imul
or
movsl
fmull
fisttpll
out
daa
adc
ss
test
jp
pop
out
les
jnp
lret
mov
call
xchg
and
movq
sbb
nop
sbb
inc
stos
add
in
sbb
mov
cmpb
scas
leave
mull
inc
and
push
test
mov
fmul
in
xlat
cmp
add
shl
jge
pop
mov
test
lods
pop
imul
pop
mov
mov
adc
mov
dec
sbb
xor
js
dec
cmp
jns
leave
ret
ljmp
mov
or
cmp
mov
sbb
call
andps
lret
mov
pop
test
fmul
jecxz
add
insl
inc
into
push
sarl
xor
pop
pushf
mov
push
pop
xchg
into
in
xorb
sbb
mov
xlat
leave
xlat
mov
pop
popa
mov
or
cmp
imul
mov
test
or
test
clc
inc
sub
cltd
mov
push
xor
addr16
mov
cs
jge
push
lods
daa
adc
or
hlt
push
add
arpl
mov
leave
lcall
add
vmwrite
cmp
add
sub
idivl
hlt
sbbb
rol
xchg
jne
jb
adc
fwait
imul
inc
sahf
cltd
add
out
sub
aad
mov
push
inc
mov
dec
addr16
mov
pop
xor
daa
inc
in
jb
push
or
stc
test
sub
mov
inc
fnstsw
push
das
test
and
jp
imul
dec
cmc
xchg
stos
sbb
int3
bound
movsl
pop
leave
cmc
js
sbb
pop
stc
xchg
mov
dec
jl
rcl
or
pop
mov
jmp
test
xchg
mov
mov
jge
xchg
mov
sub
dec
sti
push
repz
cmp
inc
push
rcr
jb
pop
sti
sbb
insb
pop
iret
push
and
enter
paddsw
add
fadds
loop
jecxz
and
mov
loope
xchg
sub
test
cld
xor
mov
outsl
sub
rol
xchg
jecxz
ds
adc
lds
stc
out
rcrb
add
adc
cld
sar
std
mov
xchg
scas
inc
jle
xchg
cli
pop
rclb
and
pop
mov
and
mov
cmc
mov
and
cmp
fmul
mov
mov
int3
fistpll
fs
inc
sub
xchg
insl
fsubl
push
xchg
std
out
sub
mov
mov
jo
movsl
cmpsl
sar
jo
fists
add
pop
lret
dec
mov
enter
outsb
jp
jmp
lods
add
insl
imul
outsb
icebp
xor
loope
ficoml
push
lahf
outsl
cmp
and
outsl
insl
xor
mov
adc
push
pop
and
adcb
inc
or
mov
mov
push
je
daa
cld
cmpsb
mov
xor
cmpsl
jmp
test
mov
or
or
sahf
leave
mov
xchg
movsb
mov
cmp
test
mov
test
pushf
inc
mov
orl
sbbl
fsubl
dec
loope
push
xchg
pop
sub
cwtl
mov
pop
mov
pusha
mov
adc
jp
xlat
push
mov
in
ficomps
lret
scas
ret
jl
xor
mov
push
sbb
sbb
lahf
xchg
in
mov
in
dec
incl
stos
push
and
mov
ror
imul
jle
and
scas
dec
mov
loope
mov
jle
les
mov
inc
imul
jo
push
xorb
push
pop
push
ds
loopne
cltd
mov
cmc
cmc
call
fstl
dec
mov
jnp
inc
cli
out
frstor
cli
lds
lret
xchg
rol
test
dec
iret
cmpsb
out
and
shll
xchg
sbb
xorb
and
pop
fidivrl
cmp
push
lcall
cli
aaa
cmp
loope
lea
dec
cmpsl
fists
mov
ret
das
mov
mov
ficomps
or
fwait
or
aam
jno
lcall
or
adc
xchg
fsubl
call
ja
std
jg
cmp
mov
mov
push
sbb
mov
mov
cmp
inc
adc
bound
insl
outsl
adc
imul
adc
movl
js
sar
or
dec
jge
sbb
in
jge
lahf
jecxz
pop
push
lock
sub
sub
lock
pusha
cs
mov
mov
jmp
insb
pop
imul
mov
or
and
inc
test
jmp
insl
fildl
inc
xchg
jo
mov
mov
and
hlt
dec
xor
xchg
inc
jne
pop
popa
leave
mov
mov
outsb
mov
pushf
insb
cli
leave
mov
rcrl
or
xchg
cmp
aaa
movsl
movsl
pop
push
pusha
adc
xchg
fstps
stos
test
cmpsl
mov
xor
mov
xchg
sub
pop
movsb
adc
movsb
cmpsb
cmp
scas
lret
or
mov
xchg
mov
or
movsb
mov
sbb
mov
or
cmp
cmpsl
jmp
jne
insl
test
nop
popa
dec
push
inc
mov
sbb
dec
std
cltd
loop
insl
daa
sub
ds
lea
add
dec
jb
stos
mov
les
jge
inc
pop
in
es
out
repz
xchg
sub
inc
inc
lds
arpl
aas
in
mov
dec
iret
or
jb
imul
in
pop
shr
movsb
movsl
test
jb
subl
stos
imul
mov
mov
frstor
jno
mov
je
outsb
cmpsl
dec
es
sub
mov
mov
mov
mov
mov
pop
pop
jg
fimull
mov
test
enter
xor
push
or
lods
pushf
jecxz
jne
sub
mov
imul
push
fucomip
push
psrlq
mov
inc
loop
jo
mov
stos
lea
das
xchg
cmc
movsl
sbb
adc
xor
fnstenv
cld
pop
mull
push
cmp
popfw
loop
int3
das
js
inc
cmp
stc
dec
xchg
pop
insb
sub
jb
add
jbe
cmc
lret
js
adc
nop
adc
out
pop
rclb
push
jl
xor
enter
shlb
dec
mov
inc
mov
adc
mov
jp
fistps
mov
iret
popf
jp
aaa
xor
push
inc
pushf
inc
push
shrl
cmp
jo
aas
or
dec
call
mov
mov
call
jg
fstpl
cld
imul
das
lea
or
je
fsubs
pop
inc
and
icebp
or
lock
stos
push
bound
data16
or
scas
sub
dec
cmp
mov
icebp
imul
adc
ret
and
rcrl
test
fldenv
pop
or
std
xor
ret
cmp
jecxz
insl
mov
outsl
push
pop
in
cmc
andl
dec
mov
jno
and
xchg
push
into
adc
testb
lret
in
mov
movsb
fwait
inc
pop
mov
jo
lret
jecxz
pop
negl
lahf
push
pop
sub
cmp
push
xor
lock
adc
hlt
es
outsl
mov
icebp
fs
movsb
inc
repz
dec
jl
sub
xor
sbb
mov
das
inc
inc
ffree
mov
adc
shrl
inc
lock
xor
xor
imulb
pop
int
jne
jne
rorl
inc
shll
or
mov
or
std
pop
test
stos
test
dec
adcb
jle
inc
add
dec
xchg
mov
push
insb
iret
push
lds
in
xor
jp
xor
mov
adcl
push
call
insl
jno
pusha
dec
das
das
adc
inc
ja
mov
mov
lcall
push
dec
push
in
sbb
inc
push
out
mov
xchg
jmp
dec
daa
jmp
pcmpgtw
push
sub
cwtl
mov
mov
cld
mov
mov
in
or
addr16
in
dec
push
shl
dec
inc
fcom
lret
lea
cs
test
jae
out
cwtl
xorl
pop
push
xor
hlt
imul
pop
in
loope
out
inc
or
loop
adc
out
shl
jo
xlat
movsl
mov
fldl
filds
jl
add
adc
mov
test
xchg
into
jno
add
mov
jl
rolb
ret
mov
sbb
cmpsl
and
mov
sarb
xor
adc
shlb
mov
fsubl
push
push
and
popf
sbb
stos
rcr
and
or
outsb
adc
inc
inc
mov
cmp
mov
shrb
cmp
xor
mov
mov
add
sub
shll
xchg
out
sub
xor
hlt
mov
movsb
lods
mov
jnp
cmc
mov
je
loopne
ds
out
mov
dec
xorl
mov
or
or
add
sbb
pop
add
adc
add
push
lahf
mov
pop
frstor
jbe
and
add
test
aaa
sub
flds
ret
shrl
mov
cwtl
scas
cld
in
mov
push
mov
cmp
pop
add
faddl
in
inc
loop
popa
pusha
test
cmp
out
mov
hlt
mov
or
das
xchg
pmaxsw
jbe
push
fistpll
and
into
inc
lret
bound
and
xorb
repz
pusha
xchg
sbb
dec
xchg
cmpl
jnp
stos
lock
xchg
jp
es
inc
mov
loopne
cmpsl
sbb
fidivrl
cmp
mov
fdivs
or
test
push
mov
js
adcl
mov
lcall
inc
popf
push
jne
or
aam
movsl
xchg
test
mov
daa
xchg
scas
xor
idivl
filds
out
cwtl
mov
popa
and
decb
jae
sub
out
adc
push
sbb
xchg
pop
icebp
mov
jnp
inc
imul
inc
imul
push
xlat
iret
sub
mov
mov
ret
cmp
shl
gs
jbe
jnp
push
cmp
ss
inc
test
or
sbb
jo
jp
out
push
push
cmp
and
enter
pop
fstps
mov
in
fwait
push
out
xor
jecxz
jge
push
mov
inc
fucomi
es
lahf
sbb
cs
inc
pop
dec
jmp
scas
or
call
lock
sarl
jmp
stos
aas
adc
ds
and
lea
jl
cmp
add
jbe
gs
inc
mov
adc
mov
pop
xchg
adc
xchg
stc
scas
jbe
enter
cli
fists
mov
pop
mov
popf
inc
push
mov
adc
mov
mov
aas
imul
je
mov
popa
xor
stos
mov
jo
arpl
and
scas
pushf
test
movsb
xchg
or
mov
mov
ja
cmpw
add
mov
mov
push
push
mov
lret
addr16
stc
fcompl
mov
mov
sbb
movsl
fmull
xchg
leave
add
jb
or
adc
insb
mov
mov
or
fadd
mov
adc
adc
push
shlb
sbb
mov
sbb
shrb
mov
inc
xor
lret
push
and
data16
jnp
sbb
mov
dec
loop
arpl
mov
outsb
fbstp
add
mov
push
nop
or
mov
out
pusha
fistps
dec
xchg
xor
test
stc
push
fxch
jle,pt
in
repnz
lods
xor
rcl
mov
and
cmp
shlb
cmp
pusha
mov
les
js
ret
stos
mov
sub
shl
in
sbb
outsl
jne
shrl
mov
jae
fistpll
dec
and
jno
ds
push
push
imul
dec
xchg
push
push
jbe
in
add
fildl
rorb
mov
pop
adc
dec
mov
or
stc
cmp
mov
xorb
sub
std
popf
xchg
cwtl
stos
or
mov
mov
pop
inc
ljmp
cmp
mov
neg
xchg
clc
xchg
popa
xlat
push
out
and
movsl
inc
sbb
or
incl
fidivl
mov
fs
jb
fs
aas
rorb
add
xchg
lcall
and
or
mov
cmpsb
push
cli
scas
ret
push
push
ret
out
lods
cmp
in
mov
pusha
in
mov
sub
mov
push
scas
leave
outsl
cwtl
mov
pop
mov
addb
pop
push
test
mov
loopne
or
add
push
adc
cmp
dec
pop
int
loopne
mov
cwtl
std
out
fs
cmpsl
pusha
repnz
xor
lcall
aaa
out
inc
xchg
mov
in
stos
mov
hlt
fstpl
xchg
cmp
inc
hlt
repz
push
xchg
pop
mov
shl
sub
fs
into
sub
cmpsl
cmpsb
ss
gs
loop
push
and
push
xchg
jecxz
test
ja
sub
adc
lea
dec
das
test
imulb
jp
cmpsb
dec
pop
sti
pop
aam
push
sbb
dec
mov
sarb
enter
and
xlat
jmp
shrl
inc
movsl
sti
mov
pop
pop
mov
mov
push
fcomi
ljmp
fwait
pop
inc
lds
mov
xor
inc
sub
jne
fcompl
sbb
xchg
movsb
add
mov
je
test
bound
inc
fiaddl
aaa
in
xor
ret
mov
sbbb
icebp
mov
clc
sbb
xor
adc
movsl
pop
test
testl
xor
xchg
mov
mov
sbb
sub
iret
out
shrl
mov
hlt
pop
lods
jne
into
sar
push
mov
mov
mov
jae
inc
cmp
push
inc
jmp
jo
xor
cmp
aad
xor
ds
or
sbb
pop
dec
xchg
rcr
sarb
add
mov
int
out
rorl
lret
shlb
ds
sbb
fldcw
xor
rorb
jl
push
mov
pop
and
sub
cs
dec
rcrl
pmuludq
jmp
push
fldenv
sub
ret
in
mov
lock
adc
mov
mov
ja
mov
mov
sub
jne
test
sub
or
shl
mov
stos
sub
xlat
inc
test
adc
movsb
push
leave
or
test
and
loopne
push
stos
out
sub
cmpsl
repnz
push
cmc
dec
fadd
cmp
or
push
push
mov
and
loop
jne
fcmovnu
dec
hlt
repnz
jmp
jmp
addr16
mov
dec
add
mov
idiv
outsb
cmp
rolb
and
inc
sub
cs
fdivl
nop
mov
cli
xor
cld
stc
cmpl
adc
scas
pop
ret
ss
add
movl
repz
repz
imul
div
negl
sbb
cmp
aas
add
mov
add
jp
push
pushf
add
fdivrl
lods
mov
inc
ljmp
faddl
shl
aam
loope
outsb
push
wbinvd
test
xor
movsl
adc
call
andb
xchg
ljmp
and
add
mov
cmpsl
and
pop
jecxz
jl
daa
and
jge
sarb
pop
insl
pop
test
mov
repnz
and
out
inc
aam
loop
dec
in
xchg
test
mov
mov
push
jl
lret
sub
test
add
sbb
dec
filds
jae
cmp
pop
xchg
jle
and
sarb
adc
scas
cltd
sbb
shll
mov
xchg
je
mov
pop
clc
pop
out
pop
pushf
dec
cltd
dec
and
dec
add
and
and
scas
pop
adc
push
or
dec
outsb
fnstcw
pop
fadds
jmp
mov
push
add
xchg
adc
xchg
movsb
rolb
pop
jp
in
shrl
add
cmp
cmp
addr16
arpl
mov
rcrb
pusha
fdivl
aaa
movups
pushf
inc
cmp
pop
jle
into
andb
icebp
fdivrp
mov
jmp
fsubp
mov
dec
fs
test
emms
or
push
call
inc
dec
jbe
outsb
jbe
scas
sbb
xor
xor
or
sub
fildll
jno
loopne
stos
jecxz
dec
push
jns
mov
lret
inc
inc
arpl
or
xchg
jb
xchg
mov
mov
jno
mov
cmp
add
jb
mov
shrb
xor
aas
andl
aam
or
xchg
fnstcw
inc
gs
mov
cmp
sbb
inc
sub
mov
xchg
jg
popa
mov
inc
stc
je
mov
aad
in
sbb
decl
or
push
outsl
in
mov
jo
mov
lret
pusha
xor
sbb
stos
movsb
mov
out
ret
or
mov
sub
fwait
push
insl
xor
mov
dec
push
decl
xchg
mov
xor
movsl
mov
rcll
push
ljmp
pop
mov
mov
aad
outsb
aas
shrb
mov
pop
add
into
cwtl
dec
or
dec
imul
movsl
shrd
dec
and
stos
fisubl
pop
push
push
test
xchg
cmpsl
jne
dec
pushf
jnp
pop
test
inc
mov
pop
add
add
mov
ljmp
push
jle
idiv
mov
cmpsb
xchg
jae
das
rolb
das
das
test
xor
pop
adc
notb
cmp
test
push
lret
jge
mov
cmp
jg
repnz
jbe
inc
xor
mov
xor
and
ret
jp
dec
lock
scas
repz
lods
and
xor
adc
daa
int3
sub
sub
in
push
loop
int3
mov
mov
sbb
pop
dec
push
repnz
enter
pop
inc
xor
xchg
push
fucomi
notl
add
out
ret
and
iret
pop
cmp
shlb
xchg
loopne
xor
sub
xor
or
out
cmpsl
xchg
pop
mov
movsb
arpl
sbb
jno
sub
xchg
stos
xchg
les
shlb
add
jecxz
add
inc
sub
fidivrs
add
nop
lret
shll
xor
inc
pop
sbb
sub
stos
add
and
lcall
cmp
aas
and
adc
fwait
xor
test
aam
scas
sub
mov
es
xor
mov
fists
inc
cmp
pop
repnz
nop
bound
xor
inc
mov
pushf
or
or
icebp
scas
inc
test
jae
fsubs
cmc
ss
faddl
xor
pop
cmp
cmpb
adc
pop
ret
out
sbb
clc
cli
mov
sbb
dec
mov
lea
sbb
sbb
push
loope
add
and
cmp
fdivs
mov
cmp
shll
loopne
xchg
cmp
ret
ret
mov
sub
cmp
pop
aaa
adc
and
int
fldenv
mov
movsl
xchg
jmp
loope
insb
and
push
fbld
push
ja
jmp
push
shlb
hlt
sbb
adc
add
dec
jg
xchg
mov
test
adc
fdivs
xchg
rcr
jnp
pop
push
out
mov
lea
mov
clc
push
push
mov
mov
push
push
rcll
cmp
xor
mov
push
jp
mov
mov
pop
fmuls
pop
aad
xchg
cmp
mov
mov
mov
nop
xchg
in
into
or
xchg
iret
enter
jmp
xchg
insb
inc
mov
pop
mov
or
sbb
jb
xor
xchg
inc
mov
push
nop
jb
mov
and
xchg
ffreep
insb
add
lods
lret
cmp
stos
mov
xlat
mov
movsl
or
ss
or
nop
sub
pop
mov
cmp
insl
lods
loope
movsb
xchg
sbb
negb
ja
adc
sti
sub
xchg
fstl
addl
mov
cmp
dec
into
fwait
ss
loope
sbb
inc
repnz
arpl
xchg
je
les
jmp
shll
or
mov
dec
jmp
cltd
cmp
pop
mov
enter
mov
push
dec
pop
icebp
arpl
jb
push
mov
mov
test
aad
pop
ljmp
mov
and
loop
mov
inc
mov
fmull
lods
xchg
aad
rcrl
icebp
adc
lcall
fwait
nop
in
sbb
or
dec
aas
sbb
sbb
pop
fdivl
pop
stos
aad
scas
int
out
sbb
dec
add
movsl
add
inc
int
psrlw
popf
inc
or
cmpsl
pop
and
sub
push
xchg
and
sub
adc
mov
sub
imul
inc
sub
out
xor
lret
daa
mov
aad
dec
pop
loope
adc
js
pop
cmpsl
icebp
lods
dec
andl
xor
test
xchg
xchg
add
mov
lods
sbb
mov
nop
jns
fnstenv
ret
les
pop
hlt
ss
cld
pop
shrb
je
cmp
lods
dec
xor
dec
data16
mov
test
pop
lahf
fisubl
push
out
dec
sbb
popa
addr16
in
add
div
cmp
in
fwait
pop
inc
jbe
or
jnp
in
inc
pop
pusha
dec
ret
dec
cld
in
leave
imul
in
sub
jp
subl
mov
mov
data16
mov
lods
sbb
push
or
xchg
or
test
push
dec
or
mov
out
jae
push
jl
jl
icebp
lds
add
cmpsb
test
xchg
std
mov
test
pop
jne
cmpsb
lret
les
jne
cmpsl
icebp
jge
pusha
dec
xor
data16
ss
mov
inc
lahf
xchg
push
scas
aas
pop
pop
loop
leave
inc
movsb
and
inc
test
xchg
dec
pop
mov
add
and
sub
sbb
mulb
in
add
adc
int
loopne
jle
leave
sbb
cmp
xorb
in
loop
hlt
ja
daa
or
cmp
xor
mov
and
inc
cmp
lods
mov
shrb
jb
push
lcall
inc
ror
cmp
sub
xlat
aaa
cwtl
jo
loope
push
push
daa
adc
dec
clc
adc
leave
pop
jns
insb
pusha
dec
sub
mov
mov
repz
mov
pop
inc
lock
out
cmp
mov
daa
dec
add
fwait
lret
xchg
loop
in
aas
test
push
ret
fidivrl
cwtl
mov
sub
xlat
mov
sahf
jae
pop
decb
pop
sub
jle
repnz
push
xchg
inc
data16
pop
or
rcr
xor
sahf
icebp
idivl
jecxz
or
cmp
dec
pop
add
rcrb
test
xlat
jle
jo
notb
or
je
adc
adc
pop
sahf
pop
cmp
ljmp
xor
push
int3
orb
cwtl
mov
jge
lock
rcl
mov
cli
sub
push
and
mov
mov
xchg
pusha
sar
ljmp
push
sbb
pop
xchg
and
push
xchg
shl
push
scas
sub
or
push
pop
xchg
sbb
ret
lahf
mov
insb
imul
hlt
sub
ljmp
lea
test
adc
cmc
mov
aam
shrl
inc
mov
ror
das
in
mov
lock
cwtl
in
pop
rep
inc
xchg
add
shll
or
arpl
loopne
pop
sub
seto
sub
adc
and
gs
pop
jo
mov
and
mov
int
xlat
push
pop
pop
mov
adc
loop
mov
push
popf
push
call
jo
sbb
enter
jns
cwtl
sub
and
js
dec
cltd
sbb
pop
ror
sub
cmpsb
iret
les
imul
daa
sbb
pop
fs
cmc
add
stc
pop
divl
inc
or
dec
xor
insb
out
popa
push
out
xor
idiv
out
pushf
cmc
hlt
pop
loop
or
std
pop
mov
enter
lret
jecxz
sti
fnstenv
stos
stos
nop
sub
je,pt
xchg
in
icebp
lds
imul
ss
cmp
test
mov
xor
xor
call
pop
mov
push
sti
jb
xchg
loopne
fs
sbb
inc
in
cmp
rolb
gs
pop
loope
push
push
push
shll
xchg
jb
cwtl
and
mov
or
dec
addl
in
jns
fcoml
jno
cli
jbe
push
add
pushf
stc
int3
xor
mov
insb
lods
or
add
and
xchg
je
adc
pop
adc
and
call
mov
jbe
lret
iret
jns
lcall
shlb
dec
mov
ja
pop
cmp
js
pop
adc
in
jae
mov
pop
sbbl
jmp
and
mov
aas
repz
cmp
adc
mov
testl
dec
sub
aas
inc
pusha
insb
lods
ss
xlat
hlt
mov
sbb
mov
sub
lret
call
cmp
mov
mov
pop
cs
cmp
icebp
repnz
cmp
ror
adc
mov
dec
xor
insb
and
pop
mov
test
int
xchg
cmp
stos
and
in
jb
or
xor
push
pop
movsl
mov
push
test
scas
inc
jmp
inc
nop
add
or
push
sub
adc
mov
js
rorl
xchg
push
jge
mov
jno
sbb
xchg
or
lea
lea
cli
loop
cmp
or
cmp
sub
dec
mov
mov
sbb
mov
xchg
adc
mov
lcall
mov
push
mov
lret
cmp
testb
sub
sbb
add
add
mov
scas
inc
jl
fs
ljmp
or
jmp
xchg
shlb
mov
sub
stc
gs
or
in
outsl
ret
dec
mov
dec
pop
cld
xchg
fisttpll
sub
pusha
xlat
ljmp
pop
arpl
out
xchg
lcall
and
push
jge,pt
imul
dec
out
add
addb
jno
les
sarl
fbstp
jl
xor
pop
ret
adc
mov
xchg
mov
push
cmp
sbb
orb
adc
std
loope
test
aaa
push
idiv
mov
and
pop
icebp
flds
repnz
mov
inc
mov
push
or
push
dec
into
inc
cmc
icebp
xor
or
adc
movzwl
cmp
cmpsb
lahf
and
jno
addr16
mov
inc
cmpsl
in
inc
call
nop
call
dec
sub
xchg
mov
test
mov
popf
outsl
jae
shll
test
adc
or
xchg
xlat
imul
lret
inc
loope
inc
xor
gs
addr16
cmpsl
push
fisubrs
or
fbstp
mov
push
xor
pop
xchg
dec
mov
lds
jno
outsl
lcall
dec
lcall
out
iret
dec
sbb
add
mov
aaa
dec
push
shll
fsub
hlt
addr16
mov
loope
push
scas
stos
pop
sbb
mov
sub
pusha
lret
sub
jnp
ret
lcall
clc
or
out
xlat
cmp
pop
bnd
push
mov
ret
test
orl
enter
jmp
icebp
ss
outsb
in
aaa
stos
idiv
lods
sbb
dec
jg
mov
add
xchg
stos
pop
psrad
mov
repz
into
pop
add
push
dec
test
test
loop
int
in
out
dec
push
jge
jl
in
ss
mov
push
cmpsb
xor
xlat
addr16
shlb
xchg
dec
outsb
mov
data16
cltd
adc
adc
mov
shr
mov
ret
cmp
xchg
mov
mov
out
inc
das
sti
popa
jl
fists
push
xor
jne
cmp
and
and
add
adc
dec
push
sub
and
fcompl
xchg
arpl
repnz
add
xlat
outsb
sahf
inc
inc
mov
std
xchg
in
or
push
daa
jmp
out
jp
and
sbb
sbb
inc
in
jp
xlat
mov
or
stc
lock
xchg
and
push
rcl
fs
les
mov
sbb
negl
jecxz
mov
mov
and
xchg
or
mov
pop
lret
cmp
or
and
shlb
out
mov
xchg
in
inc
inc
je
push
add
jno
sub
pop
sub
and
mov
jae
or
add
xchg
lds
mov
popa
lea
call
fistpl
hlt
mov
aaa
scas
mov
push
arpl
jno
mov
mov
mov
lods
outsb
leave
loop
repnz
test
push
xlat
rorl
arpl
mov
or
cmp
jnp
int
add
mov
pop
lea
dec
dec
fwait
insb
das
insb
jns
sbb
pop
jl
je
xchg
pop
das
testl
out
fwait
pusha
outsl
lds
stos
out
mov
pop
adc
dec
test
xor
cld
fwait
hlt
test
xorb
mov
insl
inc
jecxz
outsl
insb
jge
stos
push
movl
jp
push
into
add
shll
nop
pop
lea
movsl
fisubrl
aas
rcrl
mov
push
sub
add
repz
in
or
daa
fimull
or
mov
scas
aam
stc
jno
and
ror
mov
jae
cli
mov
rcrl
pop
mov
ja
idivl
xor
nopl
mov
aam
lahf
fs
fdiv
test
add
mov
lods
push
ds
push
mov
es
jecxz
lcall
mov
cmp
mov
incb
dec
jne
rep
xor
jo
xchg
outsb
ret
sbb
push
leave
addr16
imul
push
mov
inc
fwait
cmp
mov
sub
pop
add
or
push
sbb
sahf
add
or
in
pop
sbb
arpl
pop
lea
je
and
arpl
int3
mov
mov
fwait
arpl
loop
or
imul
lods
jl
cmp
dec
or
sbb
mov
ja
or
cmp
sbb
mov
imul
or
fistpl
cmc
dec
pop
and
sub
out
add
icebp
push
or
lds
cmp
xor
iret
mov
jecxz
outsl
test
xchg
push
rorb
and
popa
or
sarl
add
lods
mov
mov
and
incl
jae
cmp
fs
rorb
mov
pushf
pop
insb
or
xchg
std
dec
or
pop
pop
jmp
bound
ss
in
fsubl
imul
push
pop
insl
mov
pop
sub
push
inc
sarb
repnz
fcoms
inc
mov
fsts
loop
addr16
and
push
in
pop
pushf
add
loop
lds
pop
mov
pop
add
sbb
pushf
arpl
dec
add
ljmp
dec
jg
aad
xor
outsb
popf
sbbb
cltd
pop
xorl
mov
shl
dec
sub
jecxz
mov
test
sbb
add
dec
sub
dec
repz
sub
add
sbbb
cs
aaa
bound
adc
sub
stos
sbb
adc
in
lods
popf
aam
or
sub
xchg
dec
lock
push
jp
sbb
inc
sbb
pop
arpl
sub
cld
jecxz
inc
xor
shlb
pop
and
pop
cltd
shr
movsb
mov
cmp
cwtl
bound
negb
movsb
fwait
pushf
and
cltd
pusha
inc
js
aam
adc
in
in
mov
xlat
mov
enter
dec
cmpsb
imul
in
and
pop
inc
imul
addl
popf
std
outsb
sbb
xchg
mov
aam
in
stos
rcrl
loope
mov
push
jo,pn
pop
jbe
push
popf
cmp
fsubrs
and
jns
add
cmp
xchg
xchg
lods
fwait
sub
lret
hlt
xchg
cmp
lods
dec
or
jl
push
dec
lods
stos
mov
movd
ss
push
dec
loope
loopne
fsubs
iret
orl
mov
add
push
push
test
addr16
out
aam
add
jmp
cmc
dec
push
jmp
add
out
or
mov
dec
in
aas
out
sub
jns
mov
lds
mov
cmp
push
xor
ja
adc
cmp
and
dec
and
mov
inc
mov
push
cmp
out
inc
mov
mov
cmp
imulb
xchg
andl
xchg
sub
pop
aam
or
js
push
cmp
xor
popa
cmpsb
std
aaa
dec
jg
jp
adcl
lds
mov
cmp
xchg
sbb
daa
xor
mov
js
aaa
rorl
ret
int3
mov
iret
nop
or
sbbl
jle
inc
clc
dec
out
jnp
subl
jl
loopne
loop
mov
aas
inc
cs
movsl
push
mov
sub
push
in
shll
mov
aaa
mulb
pop
jo
push
cld
mov
shlb
sub
push
push
and
push
rclb
rorb
push
mov
or
leave
das
jno
in
jo
cmp
enter
shl
dec
shl
shrl
ja
insb
add
add
jg
xchg
fnsave
mov
mov
mov
sbb
imul
fnstcw
or
lods
test
and
fsubl
into
nop
adc
rcrl
push
sbb
cs
mov
or
pop
jb
sub
jp
cwtl
xor
and
cmpsb
gs
xchg
orl
int3
sbb
pop
jb
imul
ja
push
add
cli
pop
xchg
dec
dec
lea
pop
ret
hlt
jecxz
push
sub
xor
sub
test
push
adc
aaa
mov
fstl
cmpsb
and
pushf
push
into
es
mov
arpl
cmp
xchg
lret
pop
lret
sub
inc
and
mov
push
inc
leave
gs
adc
test
adcb
dec
rcl
out
mov
add
jno
lods
and
jl
push
mov
and
pop
ret
adc
clc
ret
cmp
mov
or
fdivrs
push
cmpsl
xchg
scas
xchg
hlt
test
scas
call
mov
fisttpl
pop
or
mov
test
xor
jne
jae
mov
mov
and
mov
ljmp
testb
cwtl
icebp
mov
adc
sub
adc
jecxz
add
or
ret
loop
gs
mov
je
mov
cmp
loope
fmull
mov
pop
mov
decb
jb
sub
jne
jge
stos
shlb
cltd
loope
cwtl
daa
xor
mov
cmp
adc
xor
or
clc
push
js
inc
pop
hlt
cltd
adc
sbb
or
push
lahf
popf
rorl
jge
sbb
pop
adc
dec
mov
ret
mov
jo
adc
pushf
aas
jo
hlt
push
pushf
sbb
iret
sbb
push
movsb
cmp
push
out
add
inc
dec
bnd
loope
out
jge
into
faddl
jp
mov
sub
pop
es
push
jg
shll
sub
test
push
pop
outsl
rorl
mov
mov
xor
lret
adc
movsb
stos
jmp
lods
or
pop
aad
jne
lcall
mov
in
repnz
shl
ljmp
mov
dec
or
mov
adc
xor
cmp
or
xchg
jle
fmulp
inc
popw
adc
lds
sub
sbb
addr16
mov
loope
xor
or
xchg
jecxz
mov
test
outsl
jmp
jno
rorb
cmpsb
rolb
in
addl
dec
sub
test
mov
cmp
add
jle
xchg
sbb
addr16
jge
daa
repz
dec
incl
pop
in
sub
or
jp
sub
sub
pop
imul
int
sahf
pop
push
cli
sbb
cmp
mov
das
dec
subb
mov
aas
adc
rolb
lods
je
mov
jno
lret
inc
mov
ret
test
fldt
jl
sub
fsts
and
stos
repz
mov
push
cmp
fwait
inc
push
mov
xor
call
lods
and
adc
mov
pop
lods
push
mov
mov
lods
cmp
adc
stc
mov
xchg
and
insl
loop
insl
pop
inc
popa
pop
fwait
int
lcall
xor
ljmp
pop
pop
shll
lcall
mov
out
ljmp
scas
adc
xor
cmp
inc
inc
xlat
lock
adc
cmp
push
pop
scas
pop
ljmp
cli
mov
cs
aas
dec
mov
jp
loop
jmp
fs
test
fnstcw
mov
pop
pop
xorl
clc
es
lcall
loop
aaa
jmp
inc
lea
xor
sbb
incl
jbe
cmp
push
sub
or
push
mov
mov
clc
clc
mov
data16
jne,pn
add
addl
daa
imul
addr16
push
lds
add
sbb
out
mov
ss
mov
dec
cmp
or
push
pop
adc
cmp
scas
sti
or
adc
mov
jb
out
ret
fstps
adc
mov
jb
mov
enter
xchg
add
imul
mov
xchg
cmp
push
out
ljmp
mov
xor
mov
lods
mov
inc
lret
and
popf
popf
nop
xor
adc
xchg
xchg
js
out
out
into
pop
adc
mov
inc
in
and
pop
scas
test
rcll
push
cmpb
inc
aam
sarl
leave
insb
pop
xlat
and
mov
sub
das
insb
push
ja
sbb
aam
mov
jmp
dec
inc
mov
mov
inc
shl
sbb
icebp
orb
inc
xchg
push
es
das
loope
sbb
add
or
loope
aaa
jne
jl
xchg
jg
mov
mov
xchg
into
pop
roll
out
fdivp
xor
jnp
inc
js
mov
in
into
mov
xchg
rorl
xchg
xor
push
clc
shlb
mov
fwait
mov
xchg
mov
insb
mov
push
ljmp
xlat
out
popa
push
add
out
call
mov
cltd
sub
leave
testl
adc
loop
int3
jmp
jmp
jp
mov
ss
inc
addb
jp
sub
push
and
adc
sbbl
pop
int
popa
xlat
pop
loop
pop
rcrb
loope
and
mov
xor
sub
repz
push
mov
les
icebp
adc
outsb
outsl
xlat
dec
pop
cmp
jns
int
push
xor
jp
faddl
hlt
repnz
inc
ret
enter
push
cmp
stc
aaa
inc
sub
or
and
aam
jns
push
mov
int
dec
bswap
lcall
fs
mov
or
push
ret
fwait
subl
movsb
test
fwait
or
pushf
xor
add
xchg
lahf
dec
aam
cli
cmp
add
int
and
movsl
lds
rclb
sbb
test
stc
inc
adc
cmp
ss
subl
xchg
fs
cmp
clc
xor
cmp
or
pusha
mov
je
data16
mov
ffreep
add
push
push
add
cmpb
adc
daa
pop
loope
sub
add
sub
mov
shl
mov
jnp
dec
addr16
into
push
push
sbb
rclb
ret
cmp
mov
mov
and
pop
cwtl
cmp
jno
add
pop
sub
cmc
mov
jl
daa
lret
in
int
pushf
xor
cmc
clc
pop
in
xchg
scas
ret
rolb
scas
popf
test
pop
aaa
cmp
ja
popf
outsl
std
decl
inc
pop
adc
jns
add
fisubrs
ljmp
divl
jb
pop
pop
stos
mov
es
fdivr
bound
adc
sbb
mov
mov
je
fidivs
and
popf
lock
cmpl
and
cwtl
in
shlb
adc
in
inc
mov
push
inc
loope
dec
imul
popa
pop
mov
mov
int3
into
dec
es
int
xor
push
adc
mov
shl
fsubrl
inc
mov
push
inc
pop
sbb
mov
sub
mov
ficompl
cmc
or
repz
inc
xor
inc
sbb
inc
mov
fcoml
cmc
iret
in
inc
xor
push
cmpl
lahf
stc
mov
push
mov
lret
push
xchg
icebp
outsb
mov
std
sub
lods
mov
icebp
inc
cmp
bound
test
sbb
out
dec
stos
xchg
js
popf
mov
cltd
rcrb
jb
leave
les
arpl
adc
mov
jo
inc
pop
mov
sti
mov
lret
imul
leave
mov
mov
xchg
stc
dec
xor
popf
inc
push
movsl
or
cmp
or
les
xlat
lods
push
dec
sub
fs
dec
jne
sub
or
xchg
sbb
xchg
orb
push
xor
aad
dec
xor
xor
xor
sbb
ret
in
into
sub
in
ret
add
sub
shlb
out
pushf
and
jne
pop
xchg
mov
cwtl
xchg
into
shll
add
jmp
frstor
fbstp
pop
iret
scas
jnp
pop
add
dec
mov
xchg
cld
cmp
popa
and
lock
mov
jno
xchg
mov
sbb
cmp
pop
mov
dec
ss
outsl
cmovg
xchg
popf
out
mov
cmp
xchg
es
adc
push
adc
sbb
sbb
cld
lcall
dec
fldlg2
or
jmp
outsb
aad
imul
sub
pop
cwtl
inc
jmp
shrl
stos
je
xchg
xor
rcrl
cwtl
sti
pushf
mov
xchg
push
in
mov
cmpsb
test
movl
adc
scas
inc
les
mov
xchg
out
add
popa
das
or
mov
cltd
add
xlat
sub
and
push
lret
call
test
cs
loopne
or
enter
rcll
jp
add
push
adcb
xchg
icebp
jne
mov
and
inc
lcall
xor
dec
ret
mov
inc
mov
pop
inc
jns
ds
fs
clc
xor
sahf
jno
cmp
lret
js
push
xor
sub
test
call
or
adc
or
scas
out
cmc
sarb
lea
fdivrl
inc
mov
adcl
pop
int
and
lods
daa
cmp
mov
push
cs
jecxz
jg
add
ss
lock
lds
ss
std
je
and
sarb
sub
sti
sbb
jmp
in
in
ljmp
sub
and
rcll
jle
or
sahf
fstpl
mov
sbb
pop
mov
stos
repnz
fadds
inc
adc
cmpsb
pop
mov
cltd
add
push
push
sub
mov
xor
jae
mov
push
mov
testb
lds
xor
scas
push
in
inc
mov
mov
inc
xchg
call
sti
push
test
mov
adc
fcoml
stc
jge
repnz
push
outsb
and
sub
mov
lret
push
mov
loop
cmp
mov
ss
sub
mov
mov
mov
aas
pop
hlt
and
call
xor
outsl
xor
push
push
in
les
mov
jmp
xchg
mov
push
jp
cmp
loopne
loopne
adc
pop
fnstenv
xor
sub
add
adc
insl
xchg
mov
stos
inc
test
inc
bound
jb
loop
data16
dec
scas
divb
mov
dec
sub
into
pop
mov
jns
pop
or
or
js
pop
pop
pop
leave
push
lods
in
xchg
ja
xchg
movsb
fcmove
inc
lahf
push
mov
iret
xor
push
xchg
pop
jnp
xor
cmp
cmpsl
ret
bound
in
outsb
adc
xchg
mov
stc
mov
jne
mov
hlt
push
fwait
lret
ss
pop
sti
stc
sbb
aad
push
push
mov
jp
pop
xchg
test
inc
fisubs
arpl
inc
mov
ljmp
dec
out
clc
pop
jmp
adc
dec
xchg
mov
inc
hlt
adc
out
or
ret
ret
or
rcrl
xor
test
dec
jecxz
and
mov
adc
sub
shlb
nop
push
fs
sarb
dec
dec
addr16
sbb
mov
int
fsubs
inc
popf
jno
lods
insb
xchg
mov
jl
mov
out
sub
insl
lahf
and
pop
mov
inc
mov
mov
xchg
dec
das
pop
divb
mov
xchg
inc
xchg
lods
pop
loopne
jge
js
fists
pop
cmp
adc
sbb
or
push
out
rcr
cmc
fldcw
or
xchg
pop
pop
or
out
pop
sbb
dec
mov
lcall
push
je
outsb
out
push
andb
mov
mov
fdivl
pop
imul
insl
and
ret
add
movsl
xor
adc
into
cmpsb
mov
push
and
cmp
sbb
out
cmp
sbb
clc
xchg
fnstcw
xor
fsubrl
incl
mov
mov
sbb
adc
dec
repz
je
add
sbb
mov
outsl
mov
fcomps
je
xor
xchg
out
dec
clc
out
mov
push
scas
dec
cmpsb
pushf
sarb
inc
or
or
jne
pop
cmovge
shlb
outsl
out
inc
fwait
jecxz
adc
nop
aas
push
fdivr
cmp
jae
mov
stc
xchg
lea
in
int
cmp
push
inc
divl
pop
lret
or
les
push
and
sbb
out
cmpsl
aaa
outsb
sbb
test
pop
add
in
movsl
pop
xchg
out
add
ror
cli
xchg
mov
push
es
pop
xchg
fists
movsb
cmpsl
cli
pop
es
jo
cmc
mov
enter
popa
fwait
jl
sbb
push
xor
call
add
in
hlt
mov
test
dec
nop
jae
out
cltd
mov
jne
rcrb
and
inc
mov
cmpb
add
dec
pop
pop
out
or
loop
dec
data16
xchg
xchg
dec
cmpsl
pusha
rcrb
pushf
and
push
subl
push
push
call
sub
cmp
mov
and
jecxz
adc
dec
or
sub
xchg
movsb
and
enter
xchg
jge
inc
mov
and
push
jg
out
cs
bswap
test
in
mov
cmp
pop
push
fnstenv
and
lea
push
std
decl
hlt
cltd
lods
xlat
clc
orl
jecxz
testl
mov
int3
cmp
mov
sbb
fildl
inc
adc
and
dec
shr
insl
sub
mov
lods
pusha
es
mov
aas
cltd
dec
test
scas
add
and
imul
sbb
es
adcl
dec
addr16
lods
xchg
lods
fsubr
outsl
xchg
xor
test
mov
lods
out
out
sahf
and
int3
mov
popa
jle
cltd
fildll
dec
fildll
lcall
push
movsb
jb
xor
dec
adc
das
sti
mov
cwtl
xchg
test
mov
movsb
and
adc
push
ret
cmpsl
imul
cmpsl
push
in
add
clc
sahf
ja
sti
out
arpl
orb
push
mov
mov
mov
dec
notl
mov
jb
sahf
or
sbb
dec
inc
mov
jae
in
sub
fisttps
jo
and
add
lods
adc
js
imul
mov
ds
push
inc
loopne
sahf
in
mov
mov
push
stos
std
cli
mov
stos
movsb
lahf
pop
sub
repnz
adc
adc
gs
push
dec
cld
sarl
jle
jae
pushf
imul
mov
pop
and
or
iret
iret
xor
in
enter
mov
jbe
sub
cmp
cmp
ja
das
dec
jbe
jle
dec
cmp
aas
xlat
dec
cmp
lods
mov
adc
sub
out
clc
movsl
sbb
sbb
mov
jp
bnd
pop
push
addl
jmp
ret
outsl
sub
add
lea
jge
adc
xchg
push
or
lcall
mov
jmp
inc
cltd
dec
inc
sbbb
clc
add
or
data16
cmp
aaa
or
ljmp
and
jb
or
fsubl
das
push
and
cmc
out
mov
mov
jno
mov
sbb
jl
jno
sbb
shr
jge
ja
mov
movsl
mov
xchg
lock
pushf
jp
ss
lahf
popf
mov
imul
xchg
nop
std
clc
inc
in
psrad
mov
aaa
mov
pop
in
xor
push
add
jne
xchg
mov
scas
push
jl
lahf
xchg
adc
movsl
xchg
ret
lret
push
add
loop
popa
mov
xor
loope
test
mov
ret
sbb
sub
inc
or
pop
push
mov
push
adc
xchg
pop
sbb
inc
andb
sti
pop
outsl
mov
jecxz
dec
lahf
cmp
mov
mov
push
mov
or
inc
int
push
inc
mov
cmpsl
inc
pop
jmp
das
adc
enter
pop
repz
xchg
cmpsl
add
shll
incl
icebp
add
sub
jno
mov
push
testl
xlat
out
xchg
fadd
cmp
adc
scas
out
mov
fwait
aaa
cmp
movsb
ja
push
xchg
xor
int
dec
insl
in
adc
inc
mov
outsb
pop
rcl
scas
jp
xor
add
jl
add
inc
out
lds
stos
mov
push
lds
xor
push
scas
stc
mov
loope
push
lahf
mov
xchg
sbb
test
xor
dec
in
imull
mov
je
es
out
mov
hlt
or
adc
inc
sbb
lret
mov
cmp
mov
sub
inc
loop
ds
sbb
imul
dec
xchg
and
out
cld
inc
scas
addr16
int3
xchg
sub
sbb
cmpsl
pop
faddp
pop
mov
loop
leave
inc
daa
repnz
fcompl
push
and
inc
arpl
ds
aaa
lods
lahf
mov
testb
dec
or
or
mov
and
movsl
iret
jns
lret
add
push
mov
arpl
fyl2xp1
adcb
xchg
or
xchg
in
imul
aaa
sbb
add
mov
cmp
ja
jnp
cmp
or
mov
daa
xchg
pop
ret
cmc
cmp
mov
add
mov
xor
cwtl
push
subb
rcr
pop
add
mov
testl
iret
push
pop
pop
adc
loope
mov
push
mov
int3
sbb
cmp
out
inc
push
inc
test
sbb
lock
mov
inc
inc
xchg
jecxz
jbe
push
lock
and
xchg
xchg
leave
int
rorb
pop
inc
insb
mov
in
fwait
xor
rdpmc
jl
jo
xor
inc
xchg
aam
add
and
stos
shrl
test
pusha
ficoms
xor
mov
rorl
jg
and
sub
push
inc
aaa
call
ffree
xchg
jl
pusha
aad
mov
stc
inc
jle
ljmp
lods
adc
xchg
icebp
fsubl
fcompl
jb
mov
jl
jmp
pop
xchg
add
icebp
fwait
sti
push
lea
adc
and
jecxz
and
test
mov
xor
repz
dec
cmp
lods
in
xchg
mov
cwtl
push
popa
movsl
xor
jne
inc
xchg
clc
sub
mov
mov
push
xchg
sar
xchg
ds
xchg
cmovbe
rcrl
cmc
mov
lcall
sub
xor
test
ljmp
mov
mov
xor
adc
pop
vmovss
adc
mov
and
adcb
out
nop
or
push
jge
sti
and
adc
push
mov
and
mov
imul
lret
mov
sarb
cmp
jne
xor
fsubrs
pop
stc
sub
les
mov
xchg
insl
adc
cmp
mov
xor
dec
pop
jno
cld
mov
xchg
pusha
add
mov
scas
loope
fstps
add
pusha
mov
push
sarl
icebp
filds
imul
push
out
orb
out
xor
ss
mov
cmp
jge
lret
fmull
xchg
pop
cwtl
push
jne
outsb
inc
push
scas
xchg
mov
into
outsl
sub
cmp
lahf
pushf
push
data16
lcall
sub
ja
mov
mov
movsl
pop
pushf
mov
outsb
mulb
aas
in
cld
add
pop
scas
dec
aam
adc
xor
jl
cmp
je
pop
test
lods
push
sub
test
mov
add
dec
lds
dec
xor
or
ljmp
lret
mov
cmp
imul
sub
fdivrs
mov
loop
repnz
xor
int
adc
andl
inc
jl,pn
daa
push
mov
xor
sbb
mov
add
sahf
or
xor
mov
popa
or
repnz
out
sub
in
xor
jno
jp
ret
pop
repnz
in
inc
or
or
jg
rcll
xchg
sbb
dec
pusha
mov
jnp
push
add
lods
lea
pop
rclb
cwtl
xor
mov
or
or
push
mov
push
js
clc
pop
dec
or
addr16
jne
loope
cmp
sahf
jno
test
popf
out
ss
sarl
into
jae
out
and
mov
xchg
add
lcall
test
cmovo
pop
shrl
mov
and
dec
or
mov
hlt
cld
repnz
mov
ljmp
lcall
bound
std
lcall
add
stos
adc
sbb
xor
ss
mov
pop
xchg
xchg
aaa
pop
lods
mov
xchg
daa
mov
mov
or
ss
adc
mov
test
push
mov
add
sahf
movsb
jno
rorb
pop
xchg
xor
outsb
and
cmpl
loope
mov
stos
push
nop
mov
sbb
inc
xchg
xchg
push
xor
mov
sarb
or
jle
stos
jb
jno
adc
inc
mov
fcmovnb
mov
cmp
insb
sub
insl
clc
call
or
stos
mov
nop
push
scas
inc
mov
shrl
leave
adc
daa
shrb
inc
add
or
mov
mov
mov
scas
push
mov
mov
ds
ljmp
adc
cld
stos
mov
out
int
xchg
mov
pop
scas
xor
sarb
pop
bound
sub
pop
inc
hlt
cli
and
icebp
pop
add
negl
fisubs
mov
mov
out
lds
adc
pop
push
mov
mov
sub
cmc
dec
dec
mov
insl
ret
sbb
insb
or
cltd
mov
or
push
shrl
push
mov
fdivp
stos
xchg
rolb
and
xchg
cmp
sbb
divl
dec
lret
xchg
lock
jp
cmp
lret
xor
daa
inc
cltd
mov
mov
pop
cmp
pop
cld
jno
pop
fdivrs
les
xor
pop
push
fst
repz
fistps
xor
sbb
clc
test
inc
stos
sub
enter
mov
decl
cli
popa
pop
pusha
mov
mov
mov
ficoms
out
in
cltd
sbb
cmp
fdivr
stos
mov
dec
stos
xchg
push
clc
aaa
xchg
in
or
subl
aad
adc
jg
out
icebp
ss
mov
xor
lcall
into
push
adc
inc
repz
cmpsl
movsl
pushf
add
jns
lods
dec
cmp
fnstcw
jecxz
or
not
orb
inc
pop
repz
xor
mov
inc
insb
lock
jb
xor
mov
sahf
xor
loop
mov
mov
jmp
push
adc
sbb
pop
xchg
adcl
adc
leave
scas
nop
mov
add
push
pop
out
sbb
pop
fnstenv
xlat
push
dec
inc
movsl
add
jmp
and
xchg
sbb
or
jo
mov
loopne
out
cmpsb
ret
sbb
sbb
fxch
cmpsl
push
jmp
idiv
testl
out
daa
data16
inc
or
inc
xchg
lahf
mov
imulb
je
aam
iret
or
rclb
mov
lods
repnz
cmp
pop
faddl
ss
push
out
mov
cmp
inc
add
out
sbb
push
push
push
xor
lods
sub
push
cmp
movsl
xchg
test
push
pop
xchg
shl
outsl
add
fsub
push
addr16
call
pop
mov
imull
hlt
mov
cmp
push
mov
imul
xchg
les
mov
int3
jmp
mov
or
in
movsb
and
mov
and
xor
data16
xchg
jge
cli
cmpsl
inc
sbb
mov
leave
lock
and
and
iret
loop
frstor
jl
sub
out
dec
lods
into
sbb
pop
adc
push
jl
add
xchg
pusha
lods
adc
repz
mov
loopne
mov
jo
pop
mov
push
mov
out
call
xchg
test
mov
pop
push
xor
jbe
fs
sahf
lock
ret
dec
aad
jecxz
pop
stos
pop
xchg
pop
scas
pop
mov
inc
cld
sbb
nop
dec
lcall
cwtl
rclb
into
cmp
daa
ss
mov
sbb
outsl
adc
cmp
or
test
loope
psllw
and
enter
lcall
cwtl
and
movsl
cmpsl
jnp
mov
push
cli
add
dec
decb
imul
lods
sbb
inc
fldlg2
ret
movsl
addl
xchg
insb
dec
xchg
int3
enter
sbb
adc
inc
dec
push
movsl
pop
fwait
xor
ljmp
jbe
call
addl
jo
fwait
jae
xchg
shrb
jno
icebp
fs
jne
dec
sbb
mov
xchg
cli
cmpsb
inc
mov
int
push
adc
lret
mov
cmpsb
sub
fnsave
xchg
mov
mov
inc
xor
xor
pop
cmp
jecxz
mov
popa
push
data16
cltd
lea
mov
mov
mov
jmp
shll
pop
addb
cmp
cmp
test
dec
call
adc
mov
leave
ss
sbb
push
push
rcl
push
push
dec
pop
inc
enter
cld
sbb
cmp
pushf
dec
or
dec
cltd
and
dec
and
and
push
jl
mov
push
push
sub
popa
out
fistpl
xchg
getsec
push
xorl
mov
dec
sahf
mov
mov
push
dec
add
pushf
subb
sbb
pop
shrb
cmpsb
enter
mov
or
mov
pop
sbb
out
cmpsb
xchg
cmpsb
or
jno
out
out
cmc
cmc
sbb
int
aam
push
mov
mov
cmp
mov
push
sahf
pop
jno
sbb
and
add
fcmovu
sahf
push
stos
pushf
fsubp
cmp
arpl
inc
je
and
adc
xor
popf
ret
gs
sbb
in
xlat
icebp
iret
pushf
test
aaa
push
mov
sbbl
mov
mov
xchg
sti
cltd
sbb
pop
inc
and
cmpb
xor
jle
js
daa
mov
dec
faddp
push
popa
xor
addr16
jne
lock
fsubrl
xor
nop
xchg
xchg
aam
xchg
push
pop
cwtl
addr16
subl
pop
mov
mov
cmp
insb
mov
repnz
xlat
fidivl
jle
lds
pop
dec
fstp
mov
mov
and
fnstsw
ljmp
sub
xchg
adc
jnp
xor
lods
cli
xor
push
sbb
cmpsb
mov
inc
pop
ret
or
push
xchg
push
inc
pop
pop
fldcw
add
leave
fnstcw
outsl
push
cmp
jae
and
imul
aas
cmp
add
jg
inc
test
out
roll
movsl
sub
std
jmp
call
and
lods
pop
test
lea
int3
sub
in
insl
mov
aaa
out
push
clc
xchg
mov
add
push
pop
lods
mov
pop
rorl
adc
addr16
fists
icebp
dec
insb
jb
gs
out
popa
push
sbb
aam
sar
bound
ja
sub
cwtl
and
in
or
dec
lds
xor
or
shll
add
jl
jbe
push
pop
mov
pop
pop
lods
cmp
push
enter
xchg
fsub
pcmpgtw
ds
add
or
popa
out
jecxz
jecxz
or
dec
inc
or
mov
stos
add
das
add
nop
mov
pop
shl
pop
lret
dec
mov
sahf
mov
push
icebp
and
pop
cmpsl
or
adc
and
pushl
adc
lahf
sahf
lret
jg
adc
js
push
cmp
xchg
bound
mov
mov
push
lods
pop
xor
mov
adc
outsl
loop
out
pop
mov
dec
repnz
dec
sahf
sbb
adc
pop
inc
cli
pop
imul
pop
cmc
push
ljmp
adc
add
test
pushf
pop
movsb
sbb
in
adc
call
aad
inc
int3
fstps
stos
inc
pop
into
out
roll
shrl
or
pop
mov
xchg
fnstcw
jo
inc
scas
out
adc
sbb
frstor
dec
out
btcl
mov
add
daa
outsl
push
mov
out
jl
push
clc
sub
sbb
lret
cmp
sbb
fdivl
in
mov
xchg
pop
fiaddl
pop
into
add
adc
bound
jmp
lods
xor
cld
add
into
pop
push
mov
scas
movsl
mov
sbb
loop
adc
stos
mov
xor
repnz
mov
daa
je
aaa
sti
sbb
lock
std
cld
scas
xchg
popa
mov
pop
sti
dec
jmp
negb
roll
clc
fidivl
cmp
lahf
cmp
lret
hlt
cmpsb
push
sub
and
xchg
xchg
dec
idivl
xchg
repz
mov
mov
xchg
jge
mov
cmp
addr16
imul
lods
lods
imull
ja
push
mov
xor
adc
inc
bound
fiadds
sahf
lahf
xchg
pop
cwtl
mov
out
xor
mov
cmp
js
inc
lahf
imul
mov
adc
sub
outsb
cmp
cmp
cmp
fiaddl
imulb
sbb
pop
orl
mov
jne
sub
jge
es
mov
aaa
xchg
xchg
sbb
push
sbb
jne
cli
lds
repnz
mov
nop
xchg
int
jmp
inc
sub
andl
or
repnz
aad
cmc
push
dec
ja
ror
rclb
in
enter
adc
pop
mov
push
fdivp
call
jae
mov
add
mov
mov
js
fcompl
mov
shll
rorl
cltd
xchg
jo
add
push
stc
adc
dec
push
mov
fimull
add
mov
and
mov
cmpsl
ror
pop
mov
jecxz
mov
push
pushf
mov
mov
jmp
mov
out
push
push
aas
int3
mov
xor
in
mov
or
aas
pop
push
notl
loopne
aad
ss
mov
jne
cli
and
fdivl
inc
popf
lret
popa
jecxz
jle
sar
shl
adc
enter
dec
add
fadd
jb
push
popf
mov
sbb
ljmp
dec
or
dec
outsb
icebp
cmp
lock
and
mov
add
addr16
pop
stc
xchg
mov
push
pop
iret
xor
inc
jnp
inc
jl
data16
shlb
or
addr16
cmp
add
sarb
nop
mov
outsl
dec
cmp
pop
fxam
mov
pop
pusha
loopne
jg
add
shll
inc
fdivr
add
push
xchg
clc
sub
mov
xchg
push
std
lahf
inc
das
in
or
mov
mov
push
dec
orb
arpl
add
sbb
mov
xchg
fwait
adc
mov
cmpsl
inc
cwtl
push
fwait
aam
push
inc
cmpsb
addl
enter
mov
sbb
in
nop
jbe
daa
mov
sar
in
addl
andl
rcr
insl
cmpsb
jl
lock
add
sub
mov
xchg
sub
mov
or
push
mov
sub
pop
mov
aad
movsb
sbb
mov
dec
xchg
and
and
leave
ja
xchg
mov
pusha
shl
ljmp
les
adc
mov
ds
aam
adc
mov
push
out
mov
adc
xchg
and
cmp
in
call
test
xor
gs
lahf
mov
push
add
fnclex
ss
push
sbb
mov
stos
out
push
mov
lcall
mov
and
adc
add
lock
push
insl
xchg
xor
jecxz
jae
dec
stos
push
sub
sub
pop
inc
push
cmp
or
into
push
into
lcall
sub
repnz
ret
pop
jo
sub
pop
sar
aad
push
xchg
add
lret
testb
sbb
xor
adc
jmp
es
add
imul
add
gs
out
cmpsl
imul
jne
rorb
sub
jge
inc
push
jmp
int
dec
and
mov
call
cs
idivb
dec
aad
mov
jp
cmpb
sub
test
ljmp
in
call
pop
mov
dec
cmc
imul
fsubs
xchg
jae
mov
mov
sbb
xor
dec
fwait
jl
push
scas
jns
outsb
insb
add
jb
cld
mov
mov
mov
inc
dec
mov
inc
pop
addb
mov
test
clc
adc
pop
xchg
arpl
pop
arpl
mov
inc
cltd
inc
xlat
insb
mov
xor
push
pop
js
popa
test
inc
sbb
jno
sub
leave
mov
mov
add
mov
ss
and
insl
sarb
mov
cmp
mov
xor
cmp
faddp
int3
dec
jmp
out
xchg
mov
adc
sbb
enter
arpl
mov
cwtl
int3
pop
pop
in
push
adc
xchg
jp
xor
push
pop
xor
out
pop
loopne
stc
test
stos
fstpl
into
sub
int3
push
push
push
mov
mov
inc
pop
cwtl
inc
jge
mov
fadd
add
mov
mul
fnstenv
inc
popl
push
lds
bound
stos
subb
jno
mov
xor
mov
xchg
pop
cmc
shl
mov
clc
add
daa
mov
xchg
test
ljmp
sbb
hlt
imul
inc
jle
mov
cmp
ja
and
xchg
sub
sbb
xchg
xor
inc
or
push
int
push
into
xchg
dec
xor
fisubs
dec
pusha
mov
fucomi
scas
mov
mov
lret
jg
in
lcall
xchg
imul
xchg
jbe
test
inc
popa
loop
mov
lods
push
add
outsb
das
xor
loop
sub
mov
and
mov
test
add
xchg
add
mov
xchg
xchg
adc
out
and
push
cmp
hlt
fcompl
or
lret
js
pop
pop
mov
out
int3
push
rcrb
dec
sarl
inc
pusha
cmp
inc
cmp
mov
jnp
out
xor
and
sbb
add
adc
xor
andl
pop
sub
inc
sbb
loopne
orb
mov
packsswb
inc
add
jmp
dec
repnz
ret
jns
mov
add
cmp
into
adc
mov
stc
inc
fwait
in
mov
cmp
insb
or
sub
dec
addl
and
dec
sti
loop
dec
icebp
or
adc
enter
mov
adc
rcll
sub
das
and
aam
cmp
repz
fidivs
insb
or
mov
and
leave
add
jl
cmc
cltd
pushf
push
scas
outsb
xorl
inc
mov
or
jle
adc
cltd
xchg
mov
or
jle
loope
pop
sub
jnp
and
nop
in
push
js
loope
push
push
js
fstpl
pop
xor
stos
xor
adc
push
pop
mov
inc
aaa
stos
sub
inc
add
jbe
jl
iret
xchg
or
pop
pop
aas
leave
lea
loope
cmp
xor
inc
shll
mov
imul
rcrl
push
pop
fwait
cld
mov
xor
ja
ss
in
cmovg
dec
xchg
mov
jnp
pop
pop
or
popf
sarl
pop
pop
cmp
dec
dec
js
add
mov
sbb
push
repnz
dec
js
push
inc
rcl
xor
cmp
in
je
lods
dec
lret
dec
jno
inc
pop
pop
imul
inc
cmp
add
or
dec
loop
stc
lods
addb
jecxz
dec
daa
fstpl
and
xchg
jmp
mov
imul
jp
popa
jne
outsl
inc
movsb
imul
neg
add
std
jne
push
xchg
fiaddl
scas
insl
cli
and
adc
in
adc
dec
cmp
enter
fwait
scas
es
xchg
fs
dec
test
push
add
enter
xchg
push
pop
xchg
stos
mov
jae
add
add
push
pop
jge
cmp
or
xor
adc
inc
mov
mov
and
or
jno
cmpsl
ss
sbb
sub
pop
jmp
cli
cmp
jmp
xor
outsb
pop
sub
cmp
into
dec
out
popa
mov
mov
push
xor
sti
dec
lahf
lock
cs
aas
pop
aad
and
mov
jne
pop
addb
cmc
mov
cmp
rclb
sub
or
xor
lods
push
add
out
cwtl
outsb
negb
addr16
leave
push
subb
pop
push
cwtl
mov
mov
fisttpl
dec
clc
bndldx
xchg
dec
cmp
movsb
xor
jmp
adc
out
dec
pop
mov
pop
stc
bsr
or
jecxz
out
stc
ss
imul
add
dec
cs
arpl
ret
insb
fisttpl
mov
cmp
ror
inc
sti
addr16
jmp
loope
mov
and
xor
sbb
push
mov
mov
jo
pop
push
xor
fbstp
push
ficoms
rorl
and
aaa
in
mov
sub
add
adc
push
pop
or
jne
out
add
and
jns
test
fcmovne
jb
adc
jecxz
add
mov
jg
mov
ljmp
ret
push
sub
mov
insl
xchg
ror
sti
dec
dec
out
cltd
les
fmull
fadds
mov
sub
xor
inc
jp
dec
inc
sub
xchg
adc
cmpl
xor
cltd
loope
imul
mov
xor
xor
cs
mov
mov
insl
fstpt
insb
mov
dec
adc
aam
les
mov
imul
sub
pop
fmuls
sub
mov
clc
movsl
dec
pop
adc
punpckhwd
xchg
push
mov
pop
lea
sar
sahf
cmpsl
push
cmp
aam
clc
jle
dec
cmp
sub
push
stc
dec
fwait
dec
lahf
cmp
in
mov
out
mov
ss
aaa
popf
xlat
call
loop
inc
push
push
sbb
dec
push
dec
stc
leave
cmp
mov
add
mov
in
jle
fistpl
push
cmp
cs
ja
mov
call
adc
test
stos
ret
inc
addr16
pop
xchg
repz
aam
push
insl
mov
mov
sub
pop
cmp
fldz
daa
pop
cmp
mov
mov
fcmovu
push
mov
cld
mov
shrb
in
loopne
test
xchg
inc
add
stos
lods
sarl
or
scas
add
xchg
repnz
cltd
and
push
jge
mov
cmp
imulb
adc
mov
pop
sarl
test
xorb
fiaddl
test
mov
aas
test
imul
xor
test
xor
mov
ror
fcoms
lret
inc
hlt
jne
testl
dec
mov
test
adc
int3
mov
pop
stos
mov
out
jae
repnz
in
cmpb
mov
dec
sbb
add
imul
xor
andl
addr16
jno
sub
insb
cmp
filds
mov
inc
leave
es
pop
jmp
repz
xchg
lock
out
mov
je
xchg
jg
pop
arpl
lret
incb
test
jo
adcl
xacquire
paddw
fnsave
xchg
push
mov
outsb
gs
pop
jae
loope
cmpsl
push
adc
int
repnz
cmp
rcr
mov
cmp
adc
loop
pop
ret
push
es
lcall
inc
pushf
movsb
test
lds
jmp
adc
inc
ss
xlat
mov
inc
cmp
adc
cld
cmp
pushf
mov
add
mov
icebp
rep
js
std
adc
in
sub
cmp
cmp
sbb
pop
or
xchg
scas
mov
pushf
sbb
cwtl
pop
inc
push
cltd
cli
pop
loope
enter
sbb
loop
and
dec
xorb
mov
mov
jecxz
push
cld
mov
jno
dec
enter
adc
popf
xor
addr16
sbb
jbe
imul
pop
lret
cmp
int3
add
pop
roll
aaa
movsb
outsl
lods
test
mov
nop
imul
movsl
or
jle
fsubr
pop
in
jmp
add
filds
dec
out
mov
je
cmp
mov
pop
mov
add
push
add
adcl
jl
les
lods
push
arpl
cwtl
adc
fsubrl
mov
mov
icebp
leave
jle
mov
ret
pop
jo
rorl
cmp
inc
mov
ja
jo
or
je
pop
loop
pop
pop
inc
cmpsb
mov
nop
fsubp
jmp
xor
mov
call
or
sub
adc
cltd
fs
decb
loope
xchg
sub
jbe
mov
adc
mov
add
add
dec
mov
sarl
add
cmp
imul
and
xchg
push
pop
mov
mov
in
push
cltd
fisubl
jp
or
repnz
ljmp
add
iret
in
je
add
mov
cmp
mov
mov
movsb
les
xchg
pop
and
jbe
dec
mov
jg
jge
nop
pop
adc
and
sub
lcall
xchg
in
pushf
in
fistps
pushf
mov
lcall
nop
into
sub
and
out
cmpsl
sub
and
mov
jnp
lcall
scas
in
outsb
inc
pushf
stos
cld
adc
jecxz
mov
aad
and
out
fists
or
push
mov
jl
xor
adc
push
sub
and
and
popf
mov
mov
mov
pop
xchg
movsl
subb
and
out
outsl
scas
mov
mov
rcrb
jg
mov
lcall
imul
xchg
js
mov
jmp
ror
dec
sar
jbe
addr16
in
cmp
shr
shll
mov
mov
sbb
loopne
and
fldt
sub
inc
scas
and
das
imul
xchg
dec
push
and
hlt
ja
inc
sbb
push
stc
mov
jne
data16
cmpsb
adc
jge
ja
test
xchg
inc
push
push
int
imul
leave
int3
sbb
mov
inc
inc
and
mov
mov
jne
ja
xor
push
mov
je
mov
jp
jle
mov
in
shlb
cmpsl
enter
les
inc
ja
fistpl
rol
pop
or
pop
cmp
jmp
insl
cld
pushf
xchg
cmp
mov
xor
sbb
aaa
mov
inc
mov
scas
jno
jecxz
adc
push
rol
mov
loop
mov
sub
cli
aad
pop
push
adc
mov
fiadds
scas
pusha
js
jp
mov
in
punpckhwd
cld
out
je
jp
jmp
loop
jmp
imul
out
xlat
adc
test
sbb
dec
in
adcl
inc
enter
call
mov
or
mov
subl
fildll
pop
push
lods
sub
fs
data16
sbbl
pusha
in
pop
dec
fbstp
fbstp
lock
and
pop
out
jg
in
push
fnstenv
shrl
inc
sub
cmp
shll
dec
shrl
push
push
xchg
xchg
add
inc
insl
leave
jl
aad
mov
mov
roll
mov
imul
cmc
insb
arpl
sbb
pusha
mov
jg
rcrb
mov
stos
add
sub
aam
fwait
cmpsl
mov
mov
pop
fidivrs
popa
inc
mov
push
scas
pop
orl
push
adc
cltd
xchg
mov
mov
cmp
inc
int3
cmc
out
jmp
dec
in
xchg
xor
push
lret
rorb
cmpl
cs
ja
fsave
out
test
in
xor
mov
in
lods
mov
sub
xchg
addl
dec
or
sub
fiaddl
dec
jg
xor
sbb
imul
and
pop
insl
roll
push
lds
repnz
mull
popl
sti
lret
pop
iret
ficoms
inc
outsb
adc
xchg
jecxz
or
fcompl
xadd
icebp
movsb
xlat
push
push
ret
sbb
add
xchg
outsl
xchg
repnz
and
xchg
fwait
loopne
popf
xchg
adc
jo
dec
pusha
ss
pop
ret
shll
cs
adc
cmc
pop
ljmp
shll
pop
int3
pop
sub
lds
mov
xchg
es
dec
pop
inc
mov
in
sub
and
cmpsl
imul
xchg
push
shr
xchg
pop
pop
mov
dec
int3
iret
xlat
jmp
mov
nop
jnp
xchg
or
mov
mov
inc
mov
mov
stc
out
mov
enter
pop
xor
movsl
mov
inc
fnstsw
pop
cmp
mov
insb
add
lahf
mov
and
cmp
repz
mov
and
xor
jne
fsubs
mov
pushf
add
stos
inc
imul
push
sub
pop
dec
mov
inc
xchg
je
imul
xor
mov
scas
mov
sub
jg
jnp
call
ljmp
xchg
cmp
mov
pop
xchg
in
popa
repz
call
jp
xchg
xor
fcoml
mov
mov
pop
add
das
xor
pushf
jbe
mov
shll
cmp
pop
rcr
lret
lock
xor
jo
js
jmp
jo
mov
sub
add
add
idivl
dec
enter
adc
sbb
into
jmp
and
dec
jae
sub
adc
push
mov
adc
test
cmpsb
fs
andnps
push
add
adc
mov
sub
xorb
mull
mov
xchg
imul
movl
scas
movsb
stos
mov
sbb
scas
sub
pushf
mov
lret
jns
jg
inc
push
jns
nop
mov
pop
inc
call
mov
movsl
mov
jge
inc
jle
and
mov
repnz
pop
mov
or
aam
sub
add
jns
cmpsl
sub
jecxz
pop
and
xor
sub
insl
mov
jp
dec
mov
jbe
pop
fcompl
int3
shl
or
cmpl
or
scas
add
fdivrs
lret
sbb
xchg
xchg
jno
aad
jb
adc
and
rcl
pop
test
lods
lahf
fnsave
out
xchg
fwait
lcall
mov
mov
aaa
add
fildl
jb
add
lods
je
mov
ror
adc
dec
into
lods
push
cld
sbb
in
pop
pop
push
stos
fsubr
or
fdiv
sbb
and
cmp
jl
push
enter
aaa
aam
cmp
sbb
xor
push
mov
out
lods
dec
pcmpgtd
pop
inc
pop
push
pop
sub
and
pop
and
and
or
sub
es
pop
loopne
push
rcrb
push
aad
in
or
xchg
jb
insl
enter
adc
cmp
adc
mov
sub
mov
aad
imul
pmaddwd
fcomps
ret
les
or
test
cmpsl
dec
cwtl
inc
jo
aam
shlb
rolb
pop
int3
jmp
scas
xor
clc
pop
mov
std
adc
dec
punpcklbw
stos
mov
mov
in
rorb
mov
add
and
push
and
ret
xor
jmp
xor
imul
fsubs
xorl
outsl
cli
lahf
and
flds
push
and
idivl
cld
movsl
push
xor
movl
loopne
adc
inc
fsqrt
daa
fwait
inc
inc
sti
fst
outsb
insb
cmp
mov
sbb
mov
pusha
cs
jp
fisttpl
sub
lods
jp
dec
shlb
inc
cli
imul
adc
jnp
push
lods
mov
sub
xchg
and
cwtl
js
cmc
lods
pop
sar
sbb
jbe
and
mov
mov
dec
divb
mov
test
or
mov
mov
cmp
cmpsb
sbb
xchg
inc
stos
jle
test
dec
inc
dec
cmc
mov
cltd
inc
test
pop
ficomps
sub
rep
xchg
loop
nop
jl
inc
popf
adc
cmp
ret
jno
fdivl
xor
mov
ja
sub
and
aas
and
push
daa
fmul
fwait
arpl
idivl
cld
jle
mov
loope
hlt
or
adc
or
cmpsb
and
rorl
push
adc
jecxz
mov
iret
dec
xor
mov
jmp
inc
js
or
jne
test
mov
adc
push
xor
ss
fisttpl
cld
gs
gs
adc
movzbl
es
adc
aaa
jg
xor
int
leave
into
aaa
test
scas
in
cli
call
arpl
sbb
add
push
mov
adc
and
or
jle
test
xchg
je
pushf
cmp
lahf
je
and
dec
mov
xchg
aad
clc
out
int
cmp
mov
xor
icebp
nop
fwait
sbb
mov
push
cs
movsb
or
mov
dec
jp
lret
pop
cmp
push
mov
mov
push
mov
adc
adc
adc
and
ja
popf
lock
mov
popa
sub
aam
mov
dec
jmp
sahf
fwait
push
cli
in
cmc
jne
push
andb
push
xchg
jp
cs
shlb
and
pop
add
adc
and
xor
int
enter
sahf
cmpsl
cmc
mov
jp
pop
stos
jmp
repnz
clc
and
jo
stc
mov
cmp
nop
add
das
mov
fisttps
movsl
lret
mov
fsub
and
xchg
add
inc
lods
or
adc
pop
mov
mov
add
jp
mov
cwtl
jnp
xor
imul
je
fs
out
dec
xor
add
cld
cmp
test
jno
fwait
and
lahf
fnsave
push
push
lods
int3
nop
int3
inc
mov
mov
and
pushf
push
cs
cld
ret
loop
cmp
adc
xchg
in
mov
mov
mov
std
jge
push
mov
cltd
imul
add
repz
js
inc
sbb
adc
sbb
jbe
psrlw
xchg
xchg
roll
int3
cmp
mov
mov
dec
pop
sbb
push
mov
icebp
out
mov
dec
in
in
addl
add
pop
addr16
repz
mov
pop
loop
test
movsl
je
test
sbb
push
dec
sbb
fstpl
cwtl
fmull
out
sub
testl
and
mov
movsl
sub
imulb
xchg
jnp
sbb
mov
inc
int
dec
cmp
mov
sub
or
xor
xchg
push
mov
mov
das
movsl
loope
xchg
sub
inc
xor
jg
lea
cmp
mov
pop
jmp
mov
jnp
xchg
cmpsl
pop
lock
jp
mov
push
roll
lods
xor
mov
xchg
aas
sub
testb
in
jmp
mov
in
push
xchg
inc
cwtl
or
adc
hlt
fcoms
imul
inc
or
cmp
sbb
sbb
push
jo
clc
adc
out
jecxz
sti
adc
mov
out
js
daa
mov
add
pop
jecxz
mov
xchg
xchg
push
daa
aas
mov
mov
sbb
arpl
mov
cmp
push
jnp
pop
and
pushf
ret
cmpl
mov
pushl
insb
and
mov
mov
cmp
ficomps
jae
shll
jnp
ret
xchg
inc
fwait
scas
test
flds
xchg
mov
mov
shr
imul
sub
mov
push
test
mov
adcb
adc
test
lret
and
orl
fidivl
das
idiv
std
mov
jnp
add
mov
mov
ljmp
push
cmp
dec
icebp
mov
dec
inc
clc
aaa
jns
fwait
arpl
sahf
mov
hlt
push
mov
push
aas
fdivrs
ret
sub
sub
jmp
and
mov
lods
addr16
out
xchg
xchg
inc
rorl
jp
shr
xlat
jae
mov
loopne
xorl
je
ss
mov
popf
in
bnd
out
scas
adc
adc
xor
jmp
dec
test
popf
ss
in
js
in
popf
test
clc
or
dec
xor
ret
repnz
mov
sbb
ljmp
xchg
xchg
aas
cmpsl
dec
stc
push
sub
inc
inc
mov
or
xchg
fistps
arpl
xor
mov
mov
movsl
sbb
out
jbe
imul
adc
adc
cmpsl
fists
nop
mov
popa
mov
push
push
out
or
icebp
out
popa
or
call
mov
dec
les
pop
daa
pushl
arpl
das
jecxz
movsb
or
ret
ror
adcl
mov
pop
ja
xlat
scas
imul
adc
push
push
sub
push
mov
rcrb
sbb
int3
sti
mov
sub
sahf
or
cwtl
loop
lea
mov
cld
fmull
test
std
divb
aad
push
mov
cs
cltd
or
push
dec
xor
and
test
inc
pop
mov
roll
push
push
ret
jmp
inc
xor
movsb
arpl
and
int
loope
mov
xlat
out
jns
or
gs
fstpl
mov
andb
xchg
stos
jne
cmp
adc
sub
loope
mov
lock
popa
add
addr16
scas
outsl
jecxz
imul
bound
pop
dec
push
xlat
fstl
insl
lods
sarl
loop
enter
shl
xor
jecxz
pop
jl
jns
aas
sbb
hlt
daa
and
adc
dec
push
cmp
push
mov
pushf
enter
cltd
xor
push
jmp
addr16
scas
lret
mov
sbb
or
dec
ljmp
aaa
fildll
fsubrp
mov
dec
icebp
inc
shr
mov
jnp
popa
mov
xor
aad
imul
adc
int3
cmc
je
and
into
pop
in
ds
lds
movsl
or
push
std
lods
fcmovbe
xchg
movb
cli
pop
std
lods
and
shl
js
pushf
fsubrs
inc
sub
sub
mov
pop
pusha
push
fldl
add
push
ret
push
cmpsl
inc
mov
push
dec
cwtl
test
mov
add
jg
and
dec
sahf
jnp
popf
or
inc
cmp
mov
jb
mov
mov
fisttpll
mov
aaa
test
and
imul
jno
mov
mov
jae
fwait
pop
jg
push
push
sbb
repnz
lret
scas
lods
dec
mov
nop
test
iret
mov
jecxz
jecxz
mov
shrb
test
sbb
xchg
je
dec
ret
cmp
stos
and
pusha
mov
test
bnd
outsl
dec
cmpb
add
mov
xor
movsb
jg
arpl
mov
xchg
xor
mov
clc
es
ret
dec
sub
pop
xor
in
or
xor
xor
loopne
mov
clc
enter
adc
aas
out
stos
jmp
sti
ficomps
stos
push
mov
sub
jmp
mov
jecxz
mov
loopne
xchg
jg
sar
cmp
xchg
mov
inc
insb
imul
enter
push
aas
and
dec
shrl
fstpt
cs
loopne
fidivrl
mov
loopne
in
mov
xchg
inc
shr
ss
test
addl
fsubrs
jp
push
sub
cmp
mov
test
repnz
add
push
mov
pop
adc
das
bound
or
pushl
mov
jle
fwait
loope
sti
cli
imul
or
decb
or
stc
int3
fdivs
xor
sbb
shlb
sarl
sbb
flds
push
mov
and
dec
and
icebp
inc
push
sti
fbld
mov
fsubs
push
push
jge
fdiv
mov
jge
je
stos
aas
stos
dec
in
call
xchg
shrl
xor
mov
adc
jns
bound
gs
jo
cmpsb
and
jmp
add
imul
xchg
pop
cmp
lods
adcb
xchg
jp
sub
add
aad
jecxz,pt
loop
inc
jmp
nop
fnstcw
jg
xor
pause
lods
sbb
mov
rcrb
xchg
jmp
adc
push
aas
pop
mov
jle
adc
icebp
stc
das
cmp
orb
and
pop
xchg
in
or
mov
xchg
sbb
enter
push
push
clc
jne
rolb
sub
pop
add
mov
mov
mov
dec
nop
repnz
and
sahf
lock
stc
outsb
scas
int3
pop
call
mov
mov
test
ss
mov
inc
mov
fildll
dec
inc
dec
mov
fcmovnu
mov
fisubs
push
sbb
scas
xor
clc
out
jb
dec
pop
sahf
push
sbb
popl
enter
shl
rclb
mov
push
clc
jge
pop
pop
mov
aas
add
jno
repnz
cmp
xor
jo
outsb
stc
sarb
cmp
add
pop
pop
lret
pop
dec
add
push
mov
push
lcall
sbb
jg
or
xlat
inc
movsb
lret
js
in
fs
cmp
mov
pop
imul
lods
jle
int
sbb
xchg
insl
sbb
jg
and
xchg
scas
xchg
inc
shl
subl
jp
inc
gs
fcompl
stc
aaa
dec
repnz
lea
or
nop
nop
mov
pushaw
popf
sbb
mov
or
sbb
loopne
add
cmp
bound
clc
dec
mov
mov
leave
movsb
fxch
lods
cltd
pop
ret
stc
sbbb
mov
jnp
sbbl
test
fstps
mov
pop
test
push
and
xchg
jnp
mov
inc
inc
cmp
push
icebp
inc
call
ds
mov
push
shl
gs
cli
push
fucom
pop
rol
icebp
pusha
mov
dec
cmpsl
jno
and
and
mov
into
jp
sahf
push
iret
adc
or
xchg
inc
data16
int3
mov
loope
and
or
cs
mov
test
jbe
loope
into
xchg
cli
outsb
in
sub
data16
mov
cwtl
incl
mov
cmp
aas
je
sti
push
outsb
mov
dec
pop
add
ret
bound
les
fsubl
mov
inc
test
mov
daa
divb
inc
pop
aad
xor
sar
mov
lods
pop
mov
cld
ljmp
lret
xchg
xlat
lret
jnp
mov
pop
push
cld
pop
jmp
add
js
sbb
adc
test
cmp
gs
rcrb
clc
lds
add
iret
pop
xchg
stos
shrb
xchg
pop
mov
mov
pop
aad
int3
pop
test
incb
inc
ljmp
stos
jle
sub
adc
sti
xorl
dec
add
dec
outsl
test
pop
iret
inc
sbb
test
sub
dec
das
pushf
pop
jb
jg
negb
and
ficoml
inc
fucomip
jb
adc
sbb
movsl
lea
inc
popf
and
add
repz
and
aam
mov
jg
mov
adc
push
add
fnsave
pushl
sbb
or
lods
sub
jae
call
cwtl
or
fsubl
pushf
and
jb
sbb
mov
xchg
mov
leave
sbb
jno
mov
cli
movsl
mov
test
out
aad
scas
hlt
xchg
addr16
sub
cwtl
cmp
jecxz
sbb
jecxz
mov
jle
xchg
sub
scas
mov
and
add
in
sub
shlb
fiaddl
cmp
repnz
xchg
int
lods
xchg
dec
sahf
or
jle
insl
inc
loope
xchg
pop
arpl
jbe
ret
and
loop
and
int3
jg
jecxz
xor
inc
push
stos
mov
jbe
in
pusha
sbb
mov
hlt
das
mov
push
inc
lahf
pop
pop
and
sbb
mov
iret
sub
xchg
pop
outsl
and
jae
js
mov
add
ficomps
mov
int3
cmp
lds
adc
sub
xor
shlb
jnp
aam
rcrb
jle
sub
daa
les
xor
jp
lock
mov
sub
ret
or
xor
pop
sub
mov
adc
cmp
sub
mov
xlat
mov
imull
lcall
pop
ja
xor
in
ds
jmp
jmp
xchg
jl
into
ja
inc
dec
lds
hlt
push
dec
pop
icebp
dec
repz
aas
mov
cmp
xor
xor
inc
test
fdivp
cmp
lds
add
js
cmp
ficompl
mov
cltd
loopne
lods
mov
add
inc
adc
mov
pushf
add
jne
mov
sbb
xor
dec
xchg
adc
mov
ds
andl
leave
mov
and
in
pusha
push
std
bound
icebp
cltd
xor
sbb
fmuls
mov
int
out
jle
or
mov
mov
sub
mov
mov
sbbl
xor
push
cwtl
mov
pop
push
sub
fcmovne
xchg
jecxz
jmp
sbb
add
call
daa
dec
pop
stos
mov
repnz
mov
xchg
mov
rcrl
js
dec
enter
shrb
mov
xchg
pop
stc
insb
mov
std
fs
cmp
pop
pop
into
sbb
xor
cmp
sbb
loop
mov
xchg
aaa
sahf
aas
xchg
in
push
jp
dec
lods
aam
and
icebp
mov
sub
mov
test
mov
dec
xchg
movsb
bound
test
out
repnz
popf
sti
mov
pop
xchg
dec
mov
sti
fstpt
test
imul
cmp
and
add
xchg
jnp
inc
or
push
pop
push
outsb
push
iret
add
dec
into
mov
je
sti
mov
add
sbb
or
xchg
or
adc
rcrb
push
popf
data16
jnp
pop
mov
fmul
cltd
jo
cmp
nop
push
fldt
loope
pop
dec
adc
out
out
retw
movsl
ljmp
loope
jo
adc
in
sbb
or
xchg
adc
push
dec
or
movsl
or
dec
or
or
sub
xchg
cmpsb
jecxz
fnstenv
adc
adcb
out
add
aas
sbb
test
add
jmp
and
imul
fbstp
int3
fwait
mov
sub
rcrl
negl
push
or
xchg
movsl
push
jle
testl
pusha
test
nop
add
add
fcompl
out
das
arpl
stos
mov
mov
mov
pop
les
inc
int3
pushf
ja
adc
sbb
lea
insl
jge
xchg
aam
das
fsubrs
call
int3
pop
jno
enter
out
fwait
test
and
lahf
int
cmpsb
divb
cmpsb
and
aaa
aad
shll
mov
loop
xchg
sbb
add
xchg
mov
xor
in
ret
aam
push
adc
mov
jg
adc
ljmp
negl
fisubrs
insb
mov
or
sub
or
adc
sbb
push
les
push
dec
or
dec
in
sub
and
pop
mov
add
mov
xchg
pop
popf
adc
dec
cmpsl
add
push
shll
push
cld
xor
jmp
pop
loop
stos
aad
jg
dec
fwait
stos
jo
push
sub
bound
xchg
add
jne
add
scas
scas
mov
popf
aad
aaa
imul
or
fsubl
pushf
sbb
fisttps
mov
xor
in
xor
jnp
mov
mov
push
add
push
or
and
xor
xchg
mov
or
ds
sbb
push
sahf
or
fisubl
mov
xchg
add
push
xor
lds
call
fdivr
shrl
inc
and
jo
fwait
push
aam
lcall
loop
in
mov
in
push
dec
mov
insb
lcall
shl
lds
sub
roll
inc
sarb
pop
sub
es
jno
xor
lret
push
in
adc
fisubs
adc
xchg
add
push
sbb
jge
adc
scas
pop
xor
mov
inc
test
adc
iret
mov
dec
inc
sub
mov
arpl
xor
mov
or
call
inc
adc
cs
mov
in
pop
mov
test
int3
lods
rorl
jbe
imul
stos
inc
loope
test
mov
push
pop
popa
pusha
push
andl
sbb
pop
std
xchg
cmp
sbb
or
je
sub
cmpsb
pop
inc
push
popa
jle
xor
dec
mov
inc
lods
out
mov
stc
in
mov
sahf
push
inc
cltd
fdivs
jecxz
mov
mov
dec
push
lcall
loop
adc
lcall
test
or
and
xchg
sbb
jg
lds
push
push
jae
cwtl
and
insl
aas
int
lahf
xor
out
mov
test
jmp
fistpll
movsl
mov
decl
pop
mov
push
xchg
fwait
inc
outsb
cmp
in
dec
push
mov
lahf
cld
jo
fcmovbe
fs
sub
insl
or
sti
mov
cwtl
insb
test
xor
or
out
fsubrl
cld
sub
pop
icebp
out
jns
jmp
hlt
das
hlt
lret
xor
pop
insb
xor
insb
enter
cmp
push
jge
cmp
mov
lods
mov
lea
ret
std
cltd
pop
jge
ror
shll
iret
rorl
lock
and
adc
not
loop
cmp
sahf
dec
lahf
out
mov
out
dec
add
std
ret
and
fidivrs
scas
push
mov
stc
inc
mov
ljmp
sub
mov
hlt
int3
dec
cmp
rolb
loop
jb
outsl
cmc
mov
movsl
popf
fsubs
cmp
push
push
rcll
adc
add
adc
aam
xor
call
mov
adc
push
scas
neg
inc
jmp
cli
and
adc
cmp
shll
adc
cmc
dec
inc
mov
mov
pop
push
jbe
in
pop
lret
sarb
add
sti
in
or
pop
ficoml
cmp
test
jb
out
lods
sbb
jne
or
in
mov
cmp
notl
out
aaa
lea
mov
insl
in
jecxz
add
xor
cmp
or
jge
out
lods
dec
sti
jmp
cmp
jp
mov
pop
sahf
mov
shl
jnp
lcall
ret
fnstsw
adc
daa
xchg
adc
nop
xor
stos
rorl
mov
cmp
xchg
mov
push
leave
pop
rcll
sub
dec
ljmp
push
out
ror
notl
sbb
mov
repnz
repz
push
popf
ljmp
imul
add
popa
imul
dec
popa
scas
das
rorb
and
sbb
dec
nopl
dec
out
pushf
and
jge
loop
mov
iret
lods
add
fimuls
leave
leave
lods
fimull
inc
push
jns
dec
dec
fstpl
fcomps
mov
fldcw
adc
leave
loope
and
push
out
jnp
insl
insb
aaa
inc
dec
pop
mov
cmp
leave
fcmovnu
sbb
and
dec
test
xor
inc
jecxz
cmp
jge
pop
hlt
sub
lret
cmpsb
call
call
pop
or
scas
cmp
cmp
popa
jne
in
pop
shlb
add
push
fsub
sbb
iret
mov
cmp
sti
dec
faddl
or
cs
lret
cmpsb
jp
in
lret
out
int
stc
or
stos
push
add
push
and
subl
stos
inc
call
jbe
rorl
mov
cmp
push
inc
mov
dec
or
outsb
ret
lahf
aam
and
aam
lods
pop
mov
leave
jo
sti
les
cmpsl
out
fdivs
outsb
scas
pop
rcr
lods
cmc
in
inc
inc
jno
push
fistl
sti
mov
xchg
shr
in
mov
sbb
shlb
cmp
fs
mov
adc
adc
int3
cmp
imul
leave
jp
xor
inc
movsb
testl
ds
dec
cmp
push
popf
mov
cmpsl
lods
iret
fwait
arpl
negb
int3
ret
icebp
in
cmp
ffreep
dec
es
jecxz
adc
cli
sub
xchg
ret
sbb
mov
and
sbb
lret
pop
cmp
add
shlb
loopne
xchg
iret
push
push
xchg
test
cld
insl
jb
mov
daa
out
sbb
sub
push
sub
xchg
mov
insl
push
pop
sbb
orb
jb
roll
or
icebp
push
mov
movsl
das
or
mov
jmp
push
adc
or
movsl
ja
xchg
cmpsb
pmulhuw
add
jecxz
insl
aam
ret
enter
push
mov
rclb
repnz
ret
call
aad
notl
data16
out
jge
pop
dec
add
outsb
pop
and
sub
pop
insl
scas
out
push
int
mov
imul
out
sbb
jge
pop
xlat
ds
pop
int
bound
hlt
and
fcomps
in
nop
push
testl
nop
dec
mov
repnz
pop
inc
lods
test
lret
push
mov
js
adc
xor
ret
cli
addr16
lahf
sub
inc
xor
sbb
sti
sbb
xor
roll
rcll
push
outsb
aas
xchg
mov
and
pushf
popf
jmp
push
xor
sbb
cld
pop
add
dec
adc
out
push
movsl
fcomp
in
pop
out
mov
cltd
cwtl
sbb
stos
or
lds
je
xchg
test
lds
cmp
fiaddl
mov
adc
adc
lods
pop
and
test
ja
or
push
aam
pop
je
add
negb
es
mov
adc
test
icebp
cmp
clc
movsb
push
adc
sub
ret
das
cli
addl
and
sub
xor
test
cmp
stc
adc
mov
xor
jns
dec
pop
sahf
mov
std
xchg
fldl
cmpsb
fs
out
mov
call
addr16
sbb
es
daa
lods
je
push
mov
inc
jl
lret
sbb
push
iret
and
xor
add
pop
mov
mov
adc
rcr
ret
int3
fs
andb
test
cmc
cmp
dec
cmp
call
and
lahf
sbb
jl
add
out
std
mov
jmp
fucomi
add
inc
xor
adc
sbb
and
dec
mov
mov
adc
pushw
pop
mov
xor
and
mov
pop
test
cwtl
lds
mov
movzwl
outsl
adc
push
cmp
xorb
xor
insl
dec
push
popa
xchg
loope
mov
hlt
cmp
adc
in
and
xchg
xchg
xchg
inc
mov
imul
and
xor
pop
xchg
xchg
and
andl
fimull
fwait
aam
cmp
cmp
cmp
sbbb
pop
bound
loopne
xor
dec
int3
sbbl
adc
scas
inc
adc
hlt
fdivr
ret
xchg
lret
rcll
xchg
mov
cmp
sub
jnp
cli
adc
fcompl
pop
sar
inc
sbb
inc
call
mov
out
clc
notl
in
sub
outsb
inc
push
add
mov
ljmp
call
inc
mov
lret
shrb
hlt
dec
in
loopne
je
enter
xor
cmp
lea
ror
mov
shl
imul
fs
push
xchg
dec
clc
popa
sub
inc
mov
test
lods
jmp
ljmp
sahf
or
mov
loope
jmp
call
adc
js
push
xor
repnz
data16
mov
sub
sbb
add
sub
jnp
lret
sahf
movsb
and
push
js
ds
imul
cmp
sbb
bts
xchg
xor
jbe
gs
lods
inc
jnp
xchg
mov
mov
push
inc
jle
mov
pusha
mov
sub
mov
push
stos
push
ror
xchg
mov
cmpsb
mov
mov
rcll
mov
xor
pop
jp
pop
ss
test
push
mov
repnz
xchg
push
inc
or
jo
pop
or
cmp
inc
inc
mov
mov
shl
push
call
icebp
mov
add
aam
arpl
or
fcoml
xchg
fimuls
xchg
mov
mov
mov
push
inc
jno
cli
sbb
dec
lock
scas
add
mov
add
movsb
mov
sub
push
inc
xchg
insl
lds
in
or
sti
add
ret
cld
dec
fidivl
fnstsw
adc
push
sub
stos
rol
test
lret
pop
add
imul
out
fwait
rclb
ror
push
cwtl
cltd
xchg
ror
data16
push
std
cmpsb
xor
push
pop
aad
jo
mov
stos
mov
push
mov
add
inc
cmpsl
xchg
mov
jae
sbb
jns
jle
fmulp
ret
pushf
or
out
dec
loop
jle
sbb
out
dec
dec
mov
and
pop
cmp
mov
push
push
mov
in
lahf
test
mov
loope
push
or
mov
ljmp
leave
rcrb
mov
hlt
stos
cmc
ficomps
sub
mov
jb
pop
push
sbbl
test
and
pushf
test
call
pop
popf
push
fcoms
int3
push
outsb
push
mov
push
push
jmp
aad
and
test
pop
xor
sub
scas
sub
stos
mulb
or
jo
pop
jo,pt
jbe
enter
lods
cmp
jmp
shrl
sbb
push
jnp
jne
sub
sbb
jmp
arpl
mulb
mov
push
inc
mov
adc
mov
loop
mov
iret
xchg
and
jg
adc
dec
add
add
data16
inc
adc
xor
jp
in
pushf
test
je
test
mov
jecxz
repz
aaa
mov
xchg
arpl
cld
fwait
jbe
add
out
pop
push
in
pop
cmp
ja
jne
fsubl
or
clc
push
mull
pop
dec
xchg
add
aas
xchg
nop
push
and
shr
imul
or
sub
cmpsb
fists
rcrb
jmp
or
jno
js
adc
int3
popf
imul
mov
dec
leave
ss
data16
push
std
lock
cmpsb
mov
int3
and
lds
xchg
fcompl
pop
inc
imul
or
lcall
push
mov
jl
or
jecxz
dec
sbb
jns
mov
mov
pop
pop
loope
ljmp
dec
mov
pushf
mov
jmp
push
inc
push
jne
mov
fst
pop
icebp
jbe
sub
sbb
push
loope
or
add
and
cmp
stos
hlt
ljmp
mov
sbb
sub
xor
pop
mov
insl
lcall
rorb
and
and
sub
fiadds
or
mov
jmp
movsl
mov
cltd
pop
or
test
mov
xchg
mov
insb
daa
ret
lahf
clc
pop
jo
test
jmp
dec
adc
ficoml
inc
mov
rorl
xor
fsubs
xchg
push
or
in
dec
cwtl
dec
outsl
xchg
pop
xchg
cmp
mov
sub
jmp
popf
jnp
cmc
sub
cmc
mov
js
mov
pop
xor
sub
cli
and
loopne
or
push
xchg
cmpsl
dec
stos
dec
or
dec
xchg
sbb
js
xchg
out
jno
fucomi
rcrl
rorl
es
dec
fdivs
fistpll
sarl
scas
imul
in
mov
jb
mov
lock
arpl
es
stos
sub
or
idiv
gs
jge
ss
ret
inc
into
mov
and
lds
xor
sbb
push
or
xor
mov
dec
orl
js
loop
lea
sbb
cmp
xchg
cld
mov
rclb
jns
jg
popa
inc
and
mov
popf
mov
lret
push
mov
jns
pop
cmp
dec
add
pop
insl
and
inc
xchg
adc
int
xchg
add
scas
cmpsl
lret
push
sub
enter
fwait
push
jmp
fsubs
mov
ss
inc
sbb
add
mov
rolb
in
test
or
jl
jge
lods
and
pop
jge
sub
push
daa
mov
xchg
outsb
pop
int3
and
pop
xlat
cmp
push
js
or
sub
sub
pop
scas
popl
sar
ficomps
mov
cs
pop
add
and
in
test
out
test
stos
aas
adc
out
pop
cmp
outsl
add
push
cmp
xchg
andl
mov
ljmp
xchg
pop
imul
push
pusha
mov
inc
add
pop
inc
in
fwait
scas
mov
insb
out
mov
and
stos
xor
cmp
std
mov
push
addr16
mov
jb
test
loopne
or
cld
push
or
ljmp
lods
add
and
cmp
lods
push
pop
jns
xor
addb
clc
push
dec
fs
inc
cbtw
and
clc
nop
pushf
xlat
jbe
mov
push
call
lea
test
insl
add
out
pop
aad
pop
or
cmpsl
sub
out
mov
and
sub
pop
jp
in
or
inc
rcr
or
je
cmpsl
in
ror
mov
fnstenv
ljmp
mov
xor
xor
push
popw
sbb
mov
xor
iret
push
inc
sbbl
adc
add
mov
pop
xor
mov
das
imul
fisubs
lret
sbb
sub
mov
bound
adc
leave
add
insl
mov
or
and
adc
repnz
xchg
pop
lret
repnz
lods
cli
int3
fiaddl
ret
push
jmp
mov
shrl
xor
data16
shll
sbb
mov
xchg
iret
aaa
xor
enter
sti
rcr
and
mov
or
add
hlt
dec
fwait
push
scas
adc
xchg
pop
imul
mov
idivl
les
in
scas
fwait
or
jecxz
outsb
mov
out
add
jmp
jecxz
mov
dec
and
mov
jmp
dec
jne
into
push
mov
scas
inc
ret
sub
das
stos
cmp
int
int3
push
jmp
gs
imul
pop
cwtl
int
shll
int
or
lods
inc
lea
pop
das
lods
adc
addr16
enter
cwtl
sbb
mov
xchg
push
andl
jl
push
out
daa
aaa
lea
cwtl
ja
dec
stos
out
cli
sub
inc
mov
or
ss
sti
andl
sub
mov
sub
les
out
push
jg
cmp
dec
cmp
fsts
imul
and
les
pop
push
push
mov
push
aam
lods
xchg
divb
fiadds
xor
sbb
gs
fimull
popa
std
out
in
ljmp
xor
movsb
cmp
mov
xchg
test
xchg
cld
add
sahf
adc
push
dec
adc
jmp
nop
inc
dec
movb
pushf
mov
mov
add
fwait
pop
popl
dec
cmp
xchg
jp
pop
push
out
nop
and
adc
add
sbb
nop
sbbb
mov
xchg
insl
jle
add
pop
ljmp
std
insl
nop
sub
cli
mov
mov
add
jmp
mov
cmp
pop
fisttpl
cmp
add
dec
test
dec
pop
icebp
fadds
popf
xchg
dec
clc
iret
mov
les
cs
cltd
xor
dec
xor
sarb
imul
adc
fidivrs
mov
movl
push
js
push
and
ret
shll
xchg
mov
cld
dec
xor
std
sbb
mov
push
mov
mov
in
mov
dec
rcrb
mov
lret
inc
stos
loop
jp
dec
outsb
fnstcw
xchg
add
inc
add
popa
mov
je
jecxz
adc
cmp
jne
dec
push
into
cmp
fcomi
in
pop
cltd
das
imul
jecxz
jo
pop
pusha
testl
daa
lahf
rorb
fcompl
punpckhwd
lds
outsl
sarl
push
adc
mov
pushf
adc
jo
jp
sbb
or
out
cs
dec
jle
mov
xor
inc
stos
jno
ret
pop
cld
lods
cmp
lods
inc
aaa
inc
lret
mov
fcmovu
mov
cmovnp
popa
sar
sbb
lock
pop
rolb
mov
mov
clc
movsl
shl
xchg
jno
adc
test
jg
mov
mov
sbb
sub
das
xor
fisttpll
je
cmp
sbb
and
shlb
nop
mov
test
imul
dec
js
pop
pusha
stc
or
fistpll
inc
ss
push
xchg
test
jecxz
push
dec
sbb
and
out
dec
test
gs
scas
cmpsb
add
ret
adc
pop
xchg
xchg
mov
mov
jnp
call
faddl
jbe
fidivl
outsb
or
dec
loopne
and
xor
mov
repnz
xchg
dec
jmp
sub
pop
adc
stos
push
pop
nop
xchg
or
jl
mov
mov
lods
sarl
lret
jo
repz
in
aam
inc
jp
cld
repnz
cmp
jb
lds
push
and
imulb
sti
int
addl
push
or
mov
mov
rorb
shr
bound
jle
xlat
or
adc
mov
sub
std
leave
inc
mov
dec
sbb
jmp
cmp
and
imul
mov
pop
cld
fsubl
shlb
pop
inc
daa
nop
xchg
aad
dec
test
jg
xchg
rolb
sbb
inc
push
cli
sub
push
xor
xchg
lds
leave
je
sti
cmp
dec
push
push
out
scas
scas
jle
popf
leave
xchg
or
add
das
arpl
bound
or
cltd
call
fwait
xor
das
pop
bound
add
aam
dec
enter
inc
int
stc
jmp
sub
lahf
add
movsb
es
paddsw
mov
cmp
sub
lock
rcll
dec
testb
or
sbb
stos
stc
xchg
xchg
lds
push
xor
xchg
lock
nop
mov
xchg
es
fidivrl
or
es
bound
cltd
insl
sbb
inc
pushf
mov
jp
mov
fdivrs
cmp
dec
or
addr16
repnz
add
std
cli
stos
pop
mov
fucomp
ret
aas
shll
ss
mov
mov
ficoms
repz
outsb
lcall
mov
scas
std
mov
popa
int3
push
or
fsubs
icebp
mov
adc
cmp
addr16
dec
xorb
cmp
dec
lds
stos
and
add
mov
cmp
add
fwait
lret
xor
jns
sbb
out
xchg
mov
scas
sbb
rcll
sbb
pop
adc
jecxz
mov
sbb
loope
jmp
adcb
pop
sahf
add
cli
test
inc
and
nop
lods
fwait
or
pop
add
push
and
cli
call
inc
enter
mov
int3
and
xchg
push
mov
xor
das
adc
push
insl
xchg
pop
push
mov
fisubrl
or
pop
outsl
mov
addr16
push
sti
les
xchg
inc
sub
sbb
jmp
and
mov
mov
fsubr
cmp
std
out
dec
mov
in
add
iret
mov
cmpl
xor
shlb
cmp
sub
and
or
call
lea
decb
iret
xchg
std
jo
adc
test
push
adc
add
sti
cli
jb
jge
xchg
ret
sub
cli
ljmp
cwtl
jmp
add
imul
shrb
jp
sub
clc
sbb
sti
jecxz
xor
push
test
sti
ret
pop
out
push
fwait
jae
int3
mov
enter
xchg
cld
les
sub
jp
sub
add
fnstenv
sarb
cmp
jne
loopne
jb
and
fwait
lea
pop
jge
adc
insb
cmpsb
xor
sbb
sub
lret
mov
clc
mov
cmp
adc
xor
inc
std
add
add
cwtl
push
add
enter
sbb
std
aas
stos
insl
cld
inc
mov
inc
daa
loope
test
mov
push
inc
xor
mov
ss
dec
shlb
add
xchg
mov
jns
inc
repnz
stos
sti
aaa
fs
xor
test
dec
mov
pusha
push
add
dec
mov
mov
adc
inc
or
push
dec
dec
mov
or
sbb
test
pushf
leave
pop
stc
xor
push
icebp
add
es
dec
cmp
adc
add
bound
sbb
aam
sarl
xchg
inc
xor
push
loopne
out
jns
push
dec
dec
inc
jno
adc
jp
pop
cmp
push
cld
cwtl
adc
into
and
std
cli
addr16
sahf
mov
int3
mov
mov
repz
lods
cmp
mov
cs
pop
mov
icebp
movsb
sbb
dec
ret
jle
gs
cltd
addr16
sub
movsb
loopne
icebp
adc
movsl
sbb
lods
push
or
fs
inc
repnz
mov
mov
and
push
pop
fs
add
push
dec
mov
mov
ret
xchg
ret
lcall
pop
loopne
dec
and
int
sub
inc
jl
mov
push
push
pushf
cmp
dec
mov
mov
pop
jbe
les
push
insl
mov
icebp
cmp
cli
cli
mov
jno
adc
outsb
sbb
cwtl
mov
sbb
in
mov
pop
push
lock
clc
push
mov
mov
pushl
loopne
jg
rorl
mov
sub
test
loope
lret
shr
std
out
daa
adc
xchg
jp
sub
jo
mov
and
mov
mov
mov
fs
mov
dec
xchg
repnz
inc
sub
xlat
mov
xchg
and
enter
cmp
adc
push
aam
outsb
push
mov
mov
aam
mov
push
adc
push
pushf
dec
mov
jle
pop
popa
aas
ja
fcom
ss
jge
push
movsl
movsb
clc
cmp
stos
adc
out
sahf
pop
sahf
lret
mov
std
bound
jge
dec
mov
jp
push
jg
adc
jnp
jg
lahf
mov
cmp
push
sub
fidivl
call
loope
fisttpll
lret
cmpb
and
or
and
ss
decl
cmp
xchg
jae
icebp
jo
push
xchg
sub
add
dec
adc
call
inc
repnz
mov
sbb
out
xor
ret
dec
add
mov
ss
repz
js
mov
push
xor
ret
movl
les
imul
lods
dec
push
rorb
int
outsb
ret
jp
lock
je
data16
pop
movsb
arpl
push
or
negb
ss
fistps
insl
mov
fists
addr16
push
add
repnz
mov
ss
inc
js
jne
lock
test
jb
jnp
xchg
lcall
jle
shrl
push
or
pushf
leave
ja
mov
xlat
cli
icebp
test
cmp
repnz
mov
fstps
xchg
pop
popa
push
jp
pop
lds
jnp
xor
adc
test
cmpb
jnp
cltd
sarb
jne
xchg
or
push
jnp
pop
ja
ss
flds
xor
push
dec
lret
sbb
pop
mov
notl
push
ja
dec
inc
in
mov
cs
sbb
dec
mov
jmp
xchg
jle
dec
les
negb
rcrb
rcr
cmp
adc
cmp
mov
adc
xlat
mov
or
lcall
loop
lcall
cmp
aam
sbb
gs
mov
movsb
lahf
dec
sub
push
in
adc
sar
mov
inc
test
arpl
dec
lahf
inc
pop
sub
jmp
dec
ljmp
sub
test
enter
bound
add
shlb
sub
sbb
ret
bound
add
or
push
mov
and
stc
xchg
int
stos
pop
xor
push
scas
addr16
xchg
inc
jno
xchg
cmpsb
mov
mov
cmpsl
aaa
in
adc
loopne
aas
scas
and
sbb
or
mov
add
in
cwtl
cwtl
xor
jno
push
jge
cmpsl
xchg
stc
ret
hlt
dec
cmp
adc
fwait
mov
and
out
insl
pop
mov
mov
hlt
out
stos
out
call
inc
in
stos
mov
das
insl
es
mov
dec
lret
mov
sub
lock
sub
cmp
notl
inc
jne
cs
xchg
adc
test
js
adc
insb
sti
or
adc
mov
icebp
jo
fisubl
jne
adc
out
jo
mov
mov
and
fcompl
mov
js
inc
mov
push
sbb
js
jecxz
push
insl
dec
fs
adc
ficoml
xor
nop
int3
dec
enter
mov
ret
repnz
ret
add
test
pop
stos
jne
xor
mov
notl
jns
jnp
out
out
mov
loopne
cs
ds
test
mov
lods
cwtl
loopne
cmp
scas
adc
dec
rol
dec
movsl
cmp
out
mov
cmp
push
pop
pop
sbb
cmpsl
xlat
sbb
xor
and
nop
cmp
cmp
das
xor
xchg
jg
add
cmpsl
dec
filds
enter
jle
dec
dec
push
out
or
adc
and
push
movsb
movups
pop
push
xlat
pusha
push
pop
pop
xchg
out
jo
mov
ds
mov
mov
push
sub
add
jo
adc
sub
in
outsb
mov
lret
xchg
addr16
mov
jg
stc
cltd
pop
and
and
xchg
xor
fisttpl
dec
mov
inc
dec
aaa
xchg
xor
pusha
testl
bound
fnstsw
add
adc
fcmovbe
movsb
dec
add
rcrl
adc
or
mov
sbb
xchg
aam
cld
decl
test
cmpl
xlat
inc
inc
mov
add
sbb
or
fdivp
imul
adc
xchg
dec
dec
pop
push
iret
punpckhwd
repz
iret
cld
imul
inc
push
loopne
and
imul
test
sbb
loope
aaa
pop
lcall
and
dec
es
out
les
cmp
rolb
jns
cltd
js
loop
pop
fistps
int3
mov
push
or
call
xchg
repz
inc
jecxz
add
rclb
out
lea
add
fists
xor
ret
lret
lcall
jge
jno
cmp
outsb
leave
adc
pusha
imul
les
das
sub
jl
bound
xor
rcl
cmp
lds
mov
stos
lods
dec
sbb
dec
mov
pushf
dec
push
inc
cmp
jl
xlat
cwtl
insb
or
lret
xor
add
inc
jmp
gs
mov
or
aam
mov
mov
pushf
insb
xchg
data16
sub
cmpsb
mov
sbb
sub
pop
xchg
mov
or
std
jle
fimull
pop
rcll
jns
xchg
cli
jecxz
cmpsb
stos
sbb
dec
pop
enter
xlat
ljmp
adc
in
fnstenv
enter
lods
jmp
push
repnz
push
fsubl
dec
ret
adc
into
and
or
mov
inc
test
push
fimull
int3
push
popa
mov
push
popa
scas
xlat
adc
mov
pop
jecxz
mov
push
movsb
mov
xchg
bound
xor
jmp
jno
pop
xchg
data16
xchg
aam
out
or
ret
xchg
push
imul
cmp
xchg
or
cmpb
shrl
fwait
mov
mov
rclb
les
jb
mov
mov
ja
sahf
mov
cld
dec
or
fidivrl
dec
xchg
xchg
inc
repz
lock
pop
int
push
push
push
dec
inc
roll
lret
mov
dec
loop
fidivrs
mull
cmp
mov
sub
out
leave
and
mov
xchg
hlt
cld
test
sbb
movsb
add
fistl
arpl
cmp
test
xor
sub
xor
push
xchg
fwait
pop
and
pusha
push
lahf
push
dec
das
pop
adc
pop
clc
add
loope
xor
dec
ds
xchg
dec
mov
push
lahf
loope
inc
addr16
jo
cvtpi2ps
in
inc
push
or
shlb
std
roll
push
daa
int
jne
mov
outsb
out
ret
stos
ja
pop
ret
les
push
or
mov
or
loop
pop
mov
xor
jge
addl
xor
ret
loope
imul
ja
rclb
mov
leave
ds
or
pop
cs
mov
out
jmp
stos
sbbl
out
clc
push
js
sub
decl
clc
fs
push
push
xor
or
and
pop
sbb
stos
mov
jb
int
push
fs
dec
out
jecxz
cli
hlt
stc
cmp
sub
mov
hlt
xor
add
xor
fnstenv
push
movsb
insl
call
loopne
push
icebp
gs
adc
daa
fwait
push
test
mov
sbb
pop
cmp
push
stc
icebp
in
mov
cmpsb
inc
clc
lcall
std
jnp
push
dec
hlt
mov
aam
punpckhbw
mov
or
mov
mov
fs
imull
repz
cmp
mov
es
inc
sbb
pusha
dec
pop
cmp
jle
cs
push
sub
aaa
xchg
fwait
pop
cmpl
pop
cmpsl
lods
je
pop
rorl
mov
mov
mov
cmpb
dec
mov
dec
inc
lods
rcrl
mov
repnz
sub
rorb
into
pop
outsl
push
mov
cltd
aaa
and
test
das
stc
jecxz
dec
xor
mov
iret
and
mov
pop
inc
mov
enter
mov
std
in
jbe
or
lods
jno
iretw
cmp
in
es
in
xor
aad
jmp
aaa
jp
add
stc
mov
es
ret
sbb
mov
push
sub
js
insb
mov
add
dec
es
jmp
scas
loop
push
mov
inc
int3
cmp
aad
shl
movsl
pop
push
imul
xor
pop
push
add
inc
loopne
cli
std
in
jmp
mov
sub
pop
cmp
mov
xor
movsl
jae
insb
ds
jo
aam
or
xchg
movsl
out
ret
mov
xchg
xchg
xor
mov
les
xchg
sbb
mov
jecxz
pop
and
and
xorb
repz
xchg
sub
sub
or
ficoml
mov
and
fldt
jl
jb
cmpsb
and
dec
pop
jnp
test
cmp
imul
add
dec
sbb
push
push
stos
fldt
mov
sub
cltd
inc
sbb
loope
pop
popa
pop
xchg
shr
mov
cli
sbb
lcall
mov
mov
pop
mov
filds
in
sbb
inc
or
in
cmc
mov
mov
xchg
or
push
dec
inc
adc
jp
add
adc
scas
cld
mov
iret
fisttpl
pop
cs
lods
pop
mov
push
inc
call
or
inc
insl
daa
test
cmp
cmpsb
xor
int
rorb
pop
lods
jbe
xchg
fistpll
xor
out
rorl
addb
xchg
jo
jl
call
leave
int3
add
jge
into
mov
inc
es
mov
inc
inc
push
pop
xchg
xchg
jo
push
data16
jecxz
dec
cmp
lods
cmp
xchg
ret
pop
xor
pop
es
jbe
adc
pop
sbb
dec
fimuls
add
subb
test
xor
nop
aad
roll
out
sti
jle
inc
iret
jae
or
and
ret
lock
mov
jl
imul
sub
dec
inc
hlt
fsubrs
ljmp
loope
std
out
test
nop
lods
mov
add
mov
jnp
aas
repz
outsb
inc
sbb
mov
push
pop
xor
lcall
popaw
mov
call
out
inc
mov
xlat
adc
test
das
inc
sub
cmp
lret
sbb
jmp
sahf
fisubrl
gs
sub
rorb
call
push
push
or
loope
test
inc
retw
adc
sub
mov
pop
icebp
push
in
xchg
clc
popf
add
repnz
cmp
ret
pushf
test
imul
dec
ljmp
add
jo
jge
insl
jl
sbb
je
push
pop
lret
sbb
imul
out
cmp
or
es
sub
sbb
xlat
xor
ret
pop
icebp
imul
cmp
jbe
and
xchg
jb
push
dec
pushf
inc
mov
movsl
out
pop
mov
js
ret
daa
cmp
push
scas
pop
xlat
and
shl
aam
das
dec
gs
rcrb
jg
out
ds
movsl
push
pop
lcall
lea
push
sub
jae
out
and
jp
fdiv
int
lds
out
cmpsl
jnp
dec
in
imull
and
sbb
fs
jne
lods
or
cli
sub
jle
jne
pop
jae
sahf
push
push
ret
ret
and
pop
rcl
lods
insl
mov
or
adc
or
mov
or
bound
jl
mov
jp
and
les
icebp
dec
ljmp
jnp
dec
addb
nop
addb
inc
sbb
test
shll
xor
ljmp
cltd
sbb
js
out
push
ret
inc
das
repz
jne
push
stos
add
mov
xor
lcall
cmp
mov
dec
xchg
pop
negb
movsl
in
jmp
cwtl
pop
or
xchg
xor
sub
cmp
jmp
test
cli
test
jo
mov
mov
xchg
xchg
lds
cmp
ss
sti
sub
jp
add
cld
jp
rcrl
sub
mov
je
sub
mov
inc
insl
out
pushf
mov
insb
adc
roll
nop
sbb
in
mov
adc
lcall
mov
sub
fs
sbb
test
das
cs
xor
sbb
mov
loope
lahf
loope
sar
jmp
xor
dec
enter
xor
pop
stc
push
fistps
addr16
xor
cmp
fists
cmpb
daa
xchg
lret
add
xchg
sar
xchg
cltd
test
jg
rcr
mov
and
mov
out
sub
xor
mov
xor
ret
in
xorl
imul
daa
stos
test
xchg
stos
movsb
fildll
cmp
in
xchg
sbb
sahf
mov
loope,pt
mov
sahf
std
push
outsb
cmp
sbb
data16
inc
call
jl
xor
jmp
aad
pusha
cwtl
xor
mov
int3
sub
repz
cmp
cwtl
jae
es
test
dec
or
outsb
imul
es
jae
and
mov
into
insl
sub
fwait
jg
cmp
andl
or
jle
xchg
cs
mov
out
fwait
add
fmuls
push
mov
mov
adc
fwait
loope
faddl
mov
ret
mov
sub
cld
loop
and
ffreep
les
lret
iret
dec
jp
es
push
cmp
shlb
fwait
jmp
js
subb
sti
inc
ret
and
push
mov
je
and
cmp
push
loope
dec
sbbl
xor
pop
mov
mulb
dec
popf
je
jmp
dec
mov
cmp
or
cmp
data16
mov
sub
lcall
out
sub
jnp
sub
and
push
sbb
xchg
inc
cwtl
sti
arpl
stos
and
jb
stc
stc
sub
sub
sub
jne
cmc
pop
gs
ja
jnp
xchg
lcall
jns
adc
push
enter
nop
inc
ja
jge
xchg
fsubr
sbb
sub
and
int3
mov
arpl
mov
inc
fcompl
push
fbld
sahf
ds
das
ss
cld
cld
pusha
out
jbe
insl
xchg
and
mov
sbb
cmpsl
add
addr16
aaa
sbb
lds
cmp
loopne
loop
out
imul
testl
imul
cmp
loopne
loopne
test
dec
xor
jle
add
or
sub
fnsave
push
pop
movsl
mov
idivl
xor
loop
inc
jl
addr16
mov
pushf
pop
mov
loope
xor
sbb
jmp
loop
test
mov
stc
adc
lods
xor
jb
xchg
mov
sbb
push
rcrl
nop
push
std
dec
and
and
jmp
xor
inc
jge
das
cwtl
xchg
xor
mov
push
or
fwait
mov
dec
mov
jp
lea
push
adc
jmp
pop
imul
clc
lea
sbb
add
xorb
lahf
and
adc
push
mov
dec
push
dec
out
rcll
dec
and
shlb
cmpsb
lock
decb
push
mov
fsubrp
lret
fwait
imul
dec
xchg
jl
xchg
enter
movsb
fs
inc
mov
dec
aam
mov
mov
dec
add
lret
icebp
xor
jl
push
je
jecxz
sbb
dec
lock
mov
push
clc
pusha
aas
leave
dec
adc
leave
inc
cmp
outsb
cmpsb
cmp
std
or
aas
mov
iret
push
xchg
sarb
mov
push
xor
mov
lock
xchg
fildl
aaa
sub
cmpsb
mov
daa
shr
xor
xchg
rolb
jnp
std
fidivs
pop
mov
jns
faddp
mov
adc
stos
jns
push
mov
inc
pop
inc
jno
pop
xchg
dec
cwtl
das
mov
in
test
inc
sub
int
mov
bound
xchg
imul
mov
mov
push
clc
dec
mov
adc
cmpl
out
mov
movsl
and
push
iret
mov
jg
pop
int
lret
fimuls
ficoms
cmp
fisubl
dec
and
out
bswap
or
and
jne
xchg
cmpb
stc
push
mov
stos
push
pop
pop
imul
dec
jge
push
stos
outsb
jp
adc
js
out
jnp
mov
mov
jbe
leave
sub
and
adc
jno
popf
imul
test
ret
dec
sub
scas
popf
fcompl
adc
pop
inc
out
in
push
imul
pop
pop
and
cmp
add
jp
nop
jge
pop
or
dec
sbb
popa
ss
dec
sub
xchg
rcrl
jl
in
mov
and
lods
jne
adc
out
shlb
dec
or
mov
int3
inc
mov
add
repz
fnstcw
fstpl
ss
push
stos
pop
fcoml
xchg
push
xor
lock
xchg
xor
push
sti
cltd
mov
pop
shlb
mov
pop
cld
shlb
js
adc
sub
mov
fsubrl
inc
imul
jmp
mov
out
loop
dec
or
js
ret
shrb
mov
cltd
sbb
in
dec
xor
push
cld
mov
xchg
cld
mov
cmp
outsb
xchg
pop
sahf
cmp
jb
adc
sub
cmpsb
insl
and
subl
jp
movsl
sbb
dec
mov
mov
loopne
daa
decb
jne
gs
mov
push
mov
inc
rcrb
int3
dec
inc
mov
das
sub
mov
hlt
adc
add
cmp
hlt
loopne
inc
mov
mov
das
imul
pushf
mov
mov
fisttpll
sub
pushf
lock
mov
fimuls
fidivrl
mov
sub
cli
test
clc
push
inc
push
cmp
aaa
clc
pop
ja
out
jo
ret
lcall
jge
sar
fxam
js
cmc
jg
sbb
in
cmp
xchg
push
movsb
xchg
shlb
ljmp
mov
sti
nop
lret
xchg
push
int
mov
add
loope
inc
cmp
fnstsw
mov
push
cli
loope
dec
sahf
rcr
shll
mov
add
mov
dec
fwait
data16
inc
mov
mov
mov
outsl
sub
mov
cld
lcall
jg
je
shll
nop
ja
pusha
popa
inc
mov
ljmp
jno
add
mov
cmp
repz
imul
xlat
sahf
movsb
out
jg
lret
add
in
jp
rclb
sbb
jbe
rolb
add
xchg
insl
xlat
ds
hlt
mov
push
xor
lret
les
xchg
mov
fwait
je
push
movsb
es
sar
stos
jns
mov
jle
xchg
in
mov
orb
push
xor
cmpsb
cwtl
fstpt
iret
das
out
xchg
icebp
movsl
sahf
jmp
pop
xchg
into
cltd
shlb
jg
xchg
mov
mov
ret
inc
cmp
pop
sbb
or
fistl
mov
fsubrp
fwait
ja
dec
lock
aam
dec
les
mov
push
xchg
pusha
mov
popf
sbb
inc
sarb
mov
pop
pop
xor
rol
add
inc
stos
or
leave
std
stc
lock
jmp
xchg
pop
push
repnz
jmp
push
out
sbb
call
or
inc
stos
pop
pop
in
mov
fadds
aaa
insb
cwtl
jl
lods
jmp
lods
jmp
stos
push
xchg
mov
call
jne
mov
jae
add
and
fdiv
dec
clc
mov
es
es
jge
divps
fdiv
int
push
nop
iret
and
cld
filds
popa
in
cmp
jne
xchg
stos
test
std
insb
xor
scas
loop
lret
inc
push
call
repnz
gs
jne
lock
push
or
lcall
ja
and
add
add
jns
test
jl
pop
mov
daa
popf
add
push
add
mov
pop
outsb
and
pop
testb
fists
add
inc
aas
dec
lret
rolb
cld
push
xchg
mov
xchg
mov
je
pop
lret
repz
mov
cltd
fwait
xchg
sub
and
loop
push
xor
dec
add
lahf
movsb
mov
mov
xor
shrb
mov
test
mov
pop
daa
fadds
test
lcall
jb
cmp
mov
out
jmp
and
inc
xchg
test
jne
dec
lcall
ret
push
sbb
inc
cmp
dec
jmp
mov
pop
adc
lock
adc
adc
cmpsb
nop
xchg
sti
xor
ja
jg
pop
xchg
mov
pop
mov
xchg
xchg
adc
out
aad
jae
cmp
or
lret
sub
pop
mov
push
cltd
pop
pop
push
mov
jae
fsubrl
icebp
ss
jae
xor
les
inc
jle
mov
mov
pushl
adc
addl
out
jbe
sahf
mov
add
popa
xor
out
jmp
mov
adc
out
aam
jns
lods
popa
lds
jno
xchg
and
pop
sub
adc
nop
pushf
sbb
es
ss
push
sbb
and
addr16
mov
jge
jns
pop
xor
pop
ljmp
test
sarl
movsl
ljmp
cmp
pop
cmp
test
mov
int3
loope
jle
jp
fdivrp
cli
push
insb
mov
mov
cmp
xorb
jge
xchg
sbb
sbb
repz
cs
and
sbb
fisttps
out
sbb
jecxz
jne
je
popa
enter
fistl
or
sbb
pop
shrb
jp
or
lret
adc
pusha
adc
add
aaa
test
or
scas
inc
dec
and
lock
dec
push
test
xor
adc
repz
mov
sbb
sbb
sbb
js
leave
mov
xchg
ss
sub
in
out
cmp
dec
sub
and
sub
pop
adc
int3
xchg
faddl
es
outsl
sub
inc
dec
push
push
or
jp
es
mov
lods
jp
add
xor
out
clc
mov
lahf
mov
mov
and
pusha
gs
iret
mov
dec
mov
lock
jmp
adc
lock
outsl
mov
ja
push
lcall
cmpb
lret
addr16
push
cld
scas
mov
adc
lods
xor
fnsave
xor
cs
leave
insl
push
stos
mov
in
or
mov
in
jb
mov
inc
pop
int3
jle
mov
adc
xor
xchg
mov
sbb
and
inc
inc
in
sub
xchg
int
sub
scas
mov
popf
ljmp
push
mov
cli
sbbl
movsl
out
inc
pop
pop
sbb
adc
loopne
add
in
aaa
jl
lock
mov
jmp
test
out
mov
inc
pop
jl
fstl
jb
movsb
jmp
sti
sti
rcrl
fsubs
int
mul
scas
push
popa
repz
mov
je
mov
adc
stos
cwtl
loop
inc
ja
stos
int3
or
cmpsb
mov
mov
mov
mov
dec
push
mov
push
lret
sti
jl
inc
cmpl
inc
arpl
mov
sahf
jmp
or
in
shll
fimuls
ret
pop
setge
aas
mov
in
loope
sbb
aam
aas
adc
sahf
test
lds
xor
or
mov
inc
in
ss
cmp
inc
fadd
or
sbb
subl
int3
xchg
jle
sub
addr16
or
xor
arpl
jecxz
xor
jne
popf
push
int
subl
or
mov
sbb
popf
fsubrp
popf
or
fidivrs
stos
adc
jmp
aam
mov
fcoml
jbe
das
push
mov
mov
pop
addr16
in
lock
in
jae
stos
mov
cltd
mov
pop
sub
add
mov
rol
mov
mov
and
push
and
adc
push
jle
pushf
lcall
clc
nop
subb
xorb
adc
enter
sub
or
or
test
xchg
push
pop
aaa
jae
xor
xchg
or
cmp
in
fiadds
add
test
add
cld
or
aad
and
cld
sub
pop
test
sbb
fs
push
lock
xor
call
xor
mov
mov
popa
jg
jbe
ror
and
sarl
xor
cmp
das
xor
jle
cmc
leave
movsl
aaa
mov
dec
int3
xor
mov
in
popf
daa
divb
sbb
mov
ljmp
push
sub
inc
add
scas
mov
cltd
dec
sub
aaa
pop
sub
mov
sub
subb
dec
lds
push
jl
pop
pop
xorl
and
outsl
xor
push
stc
mov
add
mov
loopne
push
pop
mov
test
jp
add
insl
icebp
or
mov
scas
std
cwtl
mov
and
sub
push
clc
jb,pt
aaa
fsubl
sbb
sub
push
jae
mov
pcmpeqd
sub
dec
loopne
and
cli
imul
adc
test
test
cmp
call
les
aam
shlb
rcll
cmc
daa
fs
stos
test
cs
jl
jmp
cmp
jns
sub
add
adc
ds
lea
jae
mov
sub
fbld
mov
xor
push
add
aaa
mov
call
xor
shl
or
push
push
lods
stc
xor
xchg
mov
cmpsl
test
push
aam
xchg
mov
test
mov
xchg
pop
mov
sub
or
dec
lret
popf
cmpsl
and
lahf
movsb
mov
loop
int
pushl
sbb
push
xchg
scas
into
mov
xchg
stc
cs
mov
inc
mov
xchg
fcomi
mov
mov
rorl
push
add
add
fistpll
lahf
mov
xor
addr16
sbb
lea
enter
test
sub
std
repz
push
sub
or
std
int
scas
les
adc
pop
push
jae
and
scas
xchg
ds
int
sub
pop
lcall
push
popf
mov
sbb
adc
pusha
int
push
xor
bound
xchg
ficoml
sbb
push
pushl
cmpsb
sbb
imul
mov
push
ljmp
or
aas
aas
test
in
cmp
jo
fists
scas
scas
pushf
ljmp
test
adc
mov
sub
repnz
xchg
outsb
inc
add
push
pop
jmp
mov
cwtl
fisttpll
ljmp
add
cmc
sub
sub
mov
or
cwtl
inc
pushf
test
in
lcall
cmpsb
sbb
dec
ror
cmp
jmp
xchg
mov
fimuls
sarl
sub
sbb
jmp
repnz
mov
push
mov
mov
or
dec
push
cld
push
aam
enter
out
js
pusha
jle
sar
fidivl
sti
inc
xor
fists
xchg
and
arpl
scas
arpl
es
jno
repnz
pop
pop
nop
insl
cltd
lcall
testb
add
popa
shr
in
inc
lret
das
xchg
inc
fwait
inc
sub
pusha
orl
sbb
pusha
mov
test
shl
add
inc
push
fldcw
xchg
jl
into
xchg
imul
xchg
mov
mov
cmpsl
adc
insl
adcb
ficoms
mov
cltd
mov
jnp
hlt
mov
out
test
or
or
out
aam
mov
dec
dec
lods
pop
push
into
pusha
loopne
and
pop
ret
jbe
sub
je
xchg
push
push
icebp
repz
out
or
lret
sti
divl
leave
sub
iret
push
adc
sti
popf
dec
push
mov
iret
sets
test
and
rorl
jns
xchg
sub
popa
cmp
out
dec
dec
test
sbb
mov
ret
shl
les
mov
sub
pop
pop
xor
andl
or
dec
clc
sub
mov
movsb
fildl
call
push
xlat
xchg
insb
adc
repz
xchg
sbb
and
sub
fildl
stos
push
and
stos
loop
mov
mov
or
lods
adc
add
fcoms
sbb
dec
xor
repz
jle
jae
loope
mov
xchg
ljmp
or
cli
add
cmp
loop
jo
inc
jle
lods
dec
scas
xor
test
dec
and
aam
out
sub
es
loope
cs
cld
outsl
and
mov
xchg
jns
scas
int
mov
and
or
adc
test
loopne
ret
cltd
pop
jbe
and
jmp
es
in
mov
push
dec
ret
mov
adc
and
push
movsl
xor
psubsw
and
xchg
inc
ret
lods
or
insl
mov
mov
inc
je
imul
add
mov
sub
inc
pop
mov
jl
or
idivl
rorb
popa
cwtl
daa
subl
filds
mov
mov
dec
mov
pop
sti
cld
sti
rcrl
and
mov
or
rcrb
mov
jl
fdivrs
or
dec
inc
cmpsb
ja
lea
es
xor
scas
cmp
sub
shr
cmpl
and
enter
cmp
xlat
jb
pushf
xchg
jbe
jae
lds
sub
mov
test
je
jns
sbb
mov
jle
cmp
jp
mov
testl
adc
jae
or
inc
fisubrl
fnstcw
pop
push
add
test
lret
movb
cli
dec
movsb
cmpsl
insb
out
jno
push
outsb
mov
int
rorb
and
mov
in
adc
enter
outsl
and
lret
mov
jp
and
popf
or
inc
inc
fs
lods
xchg
or
jne,pn
rorl
ja
pop
leave
fisttpll
dec
jp
mov
xchg
loopne
mov
es
cwtl
loope
sub
push
in
add
pop
adc
subl
add
pop
mov
das
adcl
inc
jmp
mov
or
adc
mov
sbb
ds
push
push
inc
mov
push
and
sub
hlt
shll
add
mov
in
push
addr16
xchg
cld
fwait
inc
add
pop
mov
js
pop
in
lods
je
test
fistl
mov
fcoml
cmp
or
sub
or
outsl
mov
xchg
push
cmp
cmovp
cmpsl
mov
lds
gs
ja
cmp
int
ljmp
ljmp
sub
add
fdivp
jecxz
dec
and
xchg
cld
pop
nop
dec
repz
loopne
arpl
loop
push
aam
mov
mov
xor
jbe
adc
andl
mov
push
or
fwait
ds
cmp
mull
dec
mov
sub
dec
es
fisubrs
cli
add
shlb
xor
inc
rol
scas
test
dec
bound
pop
cmc
imul
cld
in
lods
cmp
push
cmp
add
push
ljmp
test
cs
jl
test
cltd
xchg
mov
insl
dec
xchg
mov
xchg
adc
scas
js
adc
pop
repz
sbbb
adc
mov
or
sub
int3
inc
rorb
inc
dec
pop
push
popa
mov
push
mov
pusha
xchg
addr16
mov
and
xchg
sarb
mov
rcll
test
pushf
push
mov
inc
or
mov
dec
xchg
and
push
cmp
mov
out
mov
cmp
in
sahf
pop
imul
sbb
enter
scas
shrl
xchg
xchg
push
and
sbb
lret
xor
sub
frstor
outsl
jle
test
mov
ss
add
pop
xchg
mov
out
xchg
pop
mov
or
mov
fidivl
scas
lret
hlt
xor
dec
push
dec
lods
jl
sbb
adc
popf
push
cmp
sub
add
pop
xchg
inc
bnd
ret
inc
aas
cli
orps
pop
mov
ljmp
jecxz
mov
and
lods
xchg
dec
add
in
test
mov
sbb
or
add
cmpsl
out
mov
mov
in
xlat
xchg
jns
sti
rolb
sub
cmp
push
rcrl
push
cmp
mov
ret
ja
sub
mov
mov
sub
ffreep
sbb
and
dec
cmpsb
out
adc
push
in
mov
push
fmuls
jno
test
mov
mov
pop
pop
data16
mov
pop
mov
add
arpl
mov
and
ds
mov
lret
xor
dec
and
bound
push
push
push
repz
int
and
fstl
js
out
mov
leave
imulb
iret
icebp
push
movsb
stos
sti
dec
and
pop
mul
sahf
mov
into
jne
sti
lret
mov
adcb
je
stc
mov
xchg
pop
cmp
mov
shrb
mov
or
loop
pop
push
fisubrl
xor
sahf
loop
jge
add
cmpsl
inc
inc
mov
xor
jmp
fldl
enter
jl
cmp
iret
out
lds
and
jbe
jl
rcr
pop
test
insl
add
dec
and
pop
xchg
xorl
mov
and
scas
add
aam
sub
cwtl
inc
sbb
inc
scas
test
nop
dec
fcoml
inc
xchg
or
std
loop
inc
mov
imulb
xchg
mov
clc
push
mov
call
push
test
push
push
jae
lods
xchg
jno,pn
adc
adc
fldt
data16
mov
xchg
movzwl
pop
fwait
push
jl
or
imul
loope
xlat
ror
cmp
sub
dec
loope
mov
popa
sub
out
movsb
testb
xor
outsl
pop
inc
daa
jge
inc
lock
mov
sub
jae
in
movsl
pusha
xchg
lcall
rolb
cmp
push
add
push
popf
push
xor
mov
sbb
jo
or
in
imul
sti
lds
cwtl
iret
jnp
dec
inc
cli
jnp
in
dec
sahf
scas
jnp
mov
sbb
loope
pop
xor
outsl
shlb
and
or
add
adc
dec
int
mov
xchg
mov
add
roll
push
or
mov
test
cmp
aas
push
push
pop
int3
sub
or
aam
jae
stc
fwait
cmpsb
adc
pushf
sbbb
test
add
ficompl
pop
sub
mov
popf
xchg
or
dec
sbb
loopne
lods
iret
add
call
add
scas
push
xor
rolb
pop
jae
ror
push
shlb
leave
flds
and
mov
cld
out
sti
jle
xor
jecxz
insb
fdivl
movsb
mov
call
and
insb
cmpsb
sub
lods
jg
jge
cltd
addr16
bound
cmp
push
xor
add
mov
xchg
push
add
pop
outsb
aad
cmpsb
testl
stos
mov
xlat
cld
sbb
and
daa
in
mov
lret
xchg
jle
jg
mov
pop
jmp
leave
imul
ja
cmpsl
jl
cmp
jle
add
lea
imul
xor
pop
adc
in
sbb
sbb
xchg
add
into
das
ss
inc
push
mov
cli
dec
test
out
in
shll
push
clc
mov
inc
sarl
dec
aam
call
out
or
inc
cmp
sub
ljmp
insb
jne
xchg
insl
subl
aad
or
adc
xor
mov
sti
push
out
aam
adc
cmova
pop
mov
sti
push
xor
xlat
mov
xchg
cli
loop
stc
pop
enter
add
mov
lock
push
iret
mov
mov
mov
push
js
test
orb
and
sub
test
rcl
ja
leave
add
add
sub
mov
data16
cmp
mov
shll
add
push
mov
or
and
vpunpcklbw
xor
and
sub
pop
xchg
xor
lahf
popa
mov
sub
mov
mov
adc
push
sbb
dec
pop
imul
pushl
movsb
or
test
arpl
sub
enter
and
fimuls
and
cli
repz
dec
sbb
iret
shlb
add
cmc
fidivrs
push
sub
pop
ffree
insl
pop
add
push
sub
cmp
mov
add
loopne
xchg
push
push
lods
mov
push
jne
testb
fdivrs
or
test
out
insl
cmpsl
mov
xor
bound
ljmp
add
cmp
jp
dec
sub
and
mov
cmpl
cltd
jae
mov
jmpw
pop
dec
in
jae
daa
mov
stos
sub
out
icebp
out
dec
repz
add
ret
xchg
insb
mov
clc
mov
mov
jmp
rorl
and
cs
pop
imul
xor
andl
push
pop
scas
sub
aad
das
and
popa
dec
aaa
jp
imul
sarb
cmp
push
shlb
rorb
pop
cwtl
popa
and
fucom
rorl
push
push
enter
xchg
xor
das
sahf
cmpsb
cmc
xchg
test
push
jbe
daa
ljmp
jnp
loop
inc
jnp
adc
dec
xchg
popf
gs
sti
mov
jo
and
add
dec
jge
aaa
dec
pop
push
mov
sbb
stos
clc
jnp
push
or
pop
lcall
aas
mov
or
jno
test
jne
or
mov
push
rcrb
mov
sub
pushf
lahf
jbe
orb
in
int3
lock
stos
jb
nop
cwtl
icebp
mov
jmp
push
inc
imul
out
je
orb
sub
adc
loopne
or
add
leave
inc
xor
sbb
dec
pop
add
push
ret
sub
cmp
stc
sbb
shll
faddp
fwait
ret
lock
inc
xor
inc
pop
cwtl
out
lock
xor
scas
adc
lret
rcrb
gs
je
cs
inc
movsb
inc
ret
stos
cli
lods
jg
ds
sub
jl
sbb
inc
imul
ret
xor
repz
fs
jnp
insb
incl
cli
cmp
mov
push
into
cmp
insb
push
lds
mov
sar
jb
dec
cltd
adc
stos
or
icebp
popa
add
std
mov
or
inc
loopne
cmc
cwtl
sbb
or
sbb
out
jb
sbb
push
sahf
jne
rclb
inc
negb
loopne
lret
fimuls
leave
xor
sti
xchg
out
dec
int3
push
stc
pop
mov
popa
imul
mov
or
mov
jo
cmp
xchg
ds
cmpsl
inc
lds
loopne
dec
les
mov
cmp
mov
add
repnz
cmpsb
adc
pop
mov
dec
popa
pop
ljmp
and
jg
mov
dec
out
out
fs
jecxz
enter
inc
xchg
jp
loop
mov
in
xchg
sbb
push
mov
lods
add
jle
fmuls
and
je
xchg
repnz
bound
insw
out
xchg
mov
push
lods
lods
rcl
dec
pop
js
add
int3
mov
push
pop
mov
fwait
jb
out
fmulp
lcall
sbbl
mov
xchg
rorb
frstor
mov
inc
test
aam
jo
pushw
cs
clc
push
clc
mov
dec
fldl
mov
mov
sbb
popa
sub
in
and
jo
jl
faddl
cmpsl
push
call
dec
ja
sbb
xlat
loopne
mov
adc
fistpll
push
mov
sbb
movsl
mov
lret
jno
push
xor
vxorps
rorl
xchg
sbb
adc
jae
dec
mov
and
jbe
fcomip
call
outsb
pop
pop
in
jae
cli
jno
sbb
jbe
or
mov
mov
sbb
loop
mov
imulb
ja
in
pop
sub
inc
mov
xor
cld
ficoms
pop
loope
jns
mov
jg
jb
insb
add
jmp
cmc
lds
inc
lock
pop
mov
mov
jnp
xlat
pop
mov
pop
cmp
je
out
jmp
cmp
gs
pop
test
data16
stos
ljmp
rcrl
push
in
inc
dec
dec
pop
fidivl
cltd
sub
adc
cmc
or
jle
mov
mov
jbe
fs
jae
loop
repnz
push
lret
cmpsl
jno
and
fcompl
lods
icebp
in
push
xchg
call
jl
cld
ret
push
push
das
test
mov
and
jmp
inc
lret
sub
xor
and
orl
xor
fs
jecxz
lods
loope
loope
xchg
cmp
repnz
shr
icebp
push
nop
cmp
inc
mov
pop
ljmp
sbb
jae
outsl
movsb
repz
sbb
push
lret
add
cmp
stc
push
adc
out
or
popa
cmp
adc
lret
xor
lret
mov
hlt
fsts
mov
add
outsl
out
pop
push
ds
fdiv
aam
jbe
dec
lds
xor
pop
or
mov
add
loope
ss
pushf
jge
cltd
scas
ss
icebp
mov
xchg
lock
push
lea
aam
test
pop
mov
cmp
push
cli
and
mov
mov
xchg
int
loopne
mov
push
sub
jge
cmpsb
pop
in
adc
mov
xchg
push
lds
adc
in
mov
std
aas
ds
fs
cwtl
push
cmpsl
xchg
pop
pop
push
aas
add
mov
xchg
mov
bound
nop
fcmovbe
mov
aas
jg
xchg
lret
sub
imul
and
mov
and
mov
adc
clc
dec
and
inc
or
rolb
ja
and
rcrb
jnp
push
mov
int
movsb
mov
jns
lahf
dec
sbb
sub
adcl
and
ret
es
adcl
ffreep
cmp
dec
xor
mov
xchg
movsl
jns
inc
rcrb
je
and
int
pop
xchg
imul
jo
pop
vcomisd
jnp
xor
mov
clc
pop
addl
mov
xchg
ja
jae
mov
sub
out
push
dec
mov
icebp
inc
mov
in
push
and
cmp
adc
rcrl
insb
iret
xchg
jle
cmp
pop
mov
pop
adc
gs
mov
mov
dec
mov
sarl
pop
lods
pop
mov
or
mov
push
and
aas
add
sbb
bound
mov
xchg
leave
jg
dec
and
int
cmp
mov
mov
mov
cs
mov
shll
fisttps
movsb
aaa
inc
rcrl
cmp
cltd
and
stc
pop
jmp
cmpsb
lret
mov
sub
xchg
inc
mov
jmp
dec
sbb
mov
gs
mov
pop
mov
popf
fdivs
cmp
add
les
out
xchg
sbb
addl
adc
jg
fimull
push
ret
mov
rol
push
xchg
jae
push
xor
pop
and
add
scas
and
cmp
iret
jb
movb
xchg
jno
xchg
xor
push
into
in
outsb
push
mov
cmp
cwtl
ja
cmpsb
push
imul
or
out
dec
or
cwtl
dec
sbb
mov
les
sub
sbb
in
call
sahf
insl
insl
lea
fdivs
loope
sub
js
test
jne
lods
xor
push
int3
decl
mul
push
aas
or
push
movsb
es
pop
rol
cmpsb
lret
test
lds
jno
cld
cld
aaa
inc
lock
sbb
sbb
or
out
dec
cmpsb
imul
in
stos
sbb
mov
inc
fsubs
out
int3
and
cmp
shr
lds
push
sub
or
leave
sub
lahf
pop
in
sub
int
mov
insb
or
jmp
pusha
mulb
fsub
nop
aas
repz
or
sbb
enter
stc
adc
push
dec
sbb
rcrb
adc
sbb
mov
push
mov
mov
pop
sahf
aad
adc
mov
push
adc
push
sbb
add
sbb
loop
mov
repz
ret
inc
dec
and
jae
push
pop
leave
add
int
dec
in
pop
add
pop
orb
loop
test
or
mov
jno
jno
aam
and
xchg
rorb
lock
lret
in
xchg
mov
lods
push
inc
and
es
imul
je
lds
outsl
push
pop
adc
lahf
fwait
push
xor
insb
shl
push
outsb
mov
jno
mov
add
popa
push
adc
sub
dec
sbb
imul
jae
mov
dec
mov
in
dec
mov
or
jnp
jnp
dec
jg
pop
sbb
nop
stc
mov
push
jecxz
mov
dec
and
arpl
mov
adcb
adc
xorl
jmp
adc
mov
test
mov
dec
mov
lods
pop
ret
ss
pushf
jb
mov
sub
or
sbb
shrl
testl
ficoml
mov
sub
dec
xchg
ret
lcall
lret
lret
jecxz
imul
push
jle
or
adc
test
ss
mov
xchg
test
ja
sbb
lret
mov
dec
cmp
dec
out
popa
add
pop
pop
dec
call
jl
fistpll
and
cltd
cmpsl
mov
lods
mov
insl
roll
mov
pop
adc
xor
clc
pusha
push
mov
test
push
xchg
test
pop
push
mov
mov
test
in
pop
add
mov
les
imul
adc
movsb
jb
push
dec
mov
test
ljmp
ret
xor
ret
ja
sub
xchg
adc
xchg
jp
adc
test
dec
push
xchg
dec
sub
sub
call
fldl
cmp
rcrb
lcall
push
or
push
mov
fnsave
lcall
and
mov
mov
lea
xor
scas
repz
cli
inc
adc
dec
adc
push
push
cwtl
ds
les
ljmp
xchg
lods
lock
mov
lret
push
inc
mov
stc
push
sarl
jne
sbb
sbb
imul
stos
adc
cwtl
sbb
jne
lods
mov
loop
cwtl
repnz
jmp
in
mov
dec
jp
std
decb
xor
pop
dec
pop
loope
cli
rclb
jbe
mov
pop
ret
and
pop
or
sar
cmp
inc
xchg
push
sti
leave
push
lea
push
or
jnp
outsl
fnstenv
ds
adc
mov
mov
adc
or
adc
imul
push
jo
sub
aaa
xchg
imul
add
rcr
sbbb
inc
lods
cmp
sbb
fcmove
aad
xchg
jno
loop
push
jne
stc
xchg
test
lods
sub
jo
mov
mov
pop
test
hlt
xlat
cmp
mov
ss
push
cs
inc
popa
pop
jnp
movsl
mov
add
xchg
pusha
stos
pop
iret
or
iret
shll
fcomps
pushf
sub
jns
test
pop
adc
inc
mov
lds
pop
stc
cltd
loop
mov
inc
mulb
psubb
repz
inc
aaa
or
cmp
popa
int
fcmovb
inc
loop
lods
jne
repz
in
mov
adc
sbb
pop
gs
sbb
xchg
rcr
sub
or
popa
sahf
pusha
add
lds
lods
dec
adc
sub
mov
outsl
or
mov
lods
pop
and
inc
pop
inc
in
mov
nop
mov
xor
test
xchg
es
jo
ret
imul
out
dec
or
dec
sub
xchg
das
add
mov
jmp
jbe
outsb
in
out
jp
fnstsw
cmp
pop
insl
xor
sub
jmp
push
adc
sub
push
shll
roll
push
mov
xor
sbb
stos
mov
inc
mov
flds
out
mov
stos
mov
insb
ret
add
add
xchg
sbb
pop
jne
pop
movsl
dec
das
test
xlat
mov
ret
inc
mov
jo
adc
push
loop
or
out
push
cmp
inc
loope
cltd
jno
add
sbb
fcomps
xor
jne
divl
dec
mov
jl
ja
push
xlat
jb
hlt
icebp
mov
mov
jb
lret
in
sub
dec
sub
pusha
ljmp
jg
adc
fisttpll
dec
idiv
enter
mov
mov
pop
test
or
ljmp
aas
mov
loopne
push
stos
fdivrl
and
sarb
cs
enter
mov
shlb
aas
out
push
aad
in
sub
push
pop
xchg
sub
push
dec
repz
mov
fs
jp
das
sbb
xor
adc
ret
cld
out
mov
hlt
sbb
into
xor
sub
cmpsb
sbb
adc
dec
add
rcrb
dec
and
sbb
add
mov
push
sbb
pushf
jnp
sbb
cmp
inc
out
mov
inc
and
imul
push
gs
xor
jecxz
mov
mov
hlt
inc
stos
adc
mov
or
popf
cmc
hlt
or
cltd
test
push
dec
fcomp
in
stos
jo
sub
nop
or
loop
je
jecxz
jecxz
jge
xor
movsb
in
in
js
fimuls
ret
imul
icebp
or
push
in
lds
jp
aad
in
cmp
pop
dec
adc
push
call
push
cmp
or
loope
sub
sbb
test
jmp
mov
mov
test
mov
cmp
xor
xlat
std
lods
stc
in
aad
lea
insl
repnz
sub
aad
sti
shll
cwtl
dec
mov
clc
fs
sub
das
dec
in
scas
das
movsl
xor
push
xor
leave
enter
mov
mov
xchg
lods
jge
out
aas
pop
gs
notl
pcmpgtb
inc
cmpsl
in
cmpsl
cmp
ja
imul
adc
inc
xor
orl
sbb
ss
jns
sbb
or
jmp
xchg
cmc
aaa
bound
or
sahf
xchg
hlt
mov
lret
mov
leave
ds
nop
lret
ret
and
mov
out
icebp
mov
adc
xchg
or
dec
into
mov
push
lcall
lcall
loopne
aad
xchg
add
push
icebp
out
mov
or
pop
popf
inc
cld
fidivl
cmp
mov
sarb
fistl
cmp
jmp
fwait
insl
pop
and
inc
pop
jns
outsb
inc
dec
jb
imul
call
out
ljmp
push
fsub
jp
out
xchg
pop
xchg
cmpsb
ljmp
cs
leave
aaa
pop
notl
sbb
in
sbb
ficoms
lods
jo
mov
adc
or
inc
mov
roll
inc
hlt
loopne
inc
shl
adc
aas
out
enter
repnz
jge
insl
and
iret
fimuls
mov
xchg
dec
mov
lods
mov
enter
cld
jae
into
out
mov
and
dec
call
pop
or
pop
negb
mov
push
lret
in
pop
sub
pop
pop
out
push
inc
xchg
fidivrl
jmp
mov
lods
shlb
xor
cmp
imul
sti
push
add
push
pop
out
cld
popl
fnsave
divl
dec
xchg
imul
jne
loopne
shrl
pop
nop
aas
jne
mov
pop
mov
mov
jmp
iret
and
pop
stos
lods
in
sub
stos
fsubr
sub
call
xorb
jbe
cli
fs
add
pop
jno
add
dec
cmp
leave
das
dec
add
and
dec
push
cmp
sbb
dec
cmp
cmp
fsubp
mov
inc
mov
push
adc
fwait
js
icebp
lcall
pop
adc
test
jmp
out
lock
mov
xchg
aad
cld
out
push
rcll
xchg
mov
mulb
push
jb
rol
adc
repz
clc
enter
fadds
mov
aaa
and
inc
daa
pop
mov
mov
lcall
imul
in
push
pop
or
les
int
dec
and
insb
sub
fs
cltd
lret
jmp
icebp
ficoml
nop
jge
xor
outsb
lret
mov
jle
push
aaa
aam
nop
cmc
in
add
dec
push
xor
data16
outsl
or
in
ret
into
xchg
inc
sub
add
mov
loopne
pop
pop
push
movsb
jg
popw
jle
arpl
or
push
xchg
or
xlat
notb
pop
mov
int3
cmp
fs
lods
loopne
inc
fnstsw
lods
sub
xchg
pop
pusha
leave
in
jp
fs
dec
xor
filds
fimull
inc
lea
imul
sbb
pop
mov
cmpsb
inc
sbb
xchg
or
je
pop
xchg
inc
ds
dec
jmp
adc
insl
jnp
rolb
xlat
cmpsl
inc
or
fisubrs
in
ljmp
mov
vsubss
xchg
xchg
push
push
jecxz
mov
insl
negl
mov
jae
dec
cli
das
fs
jbe
mov
push
mov
add
out
xchg
jb
jg
cmp
lea
cmp
xor
enter
std
sbb
enter
insb
idivb
sub
or
cmp
jbe,pt
mov
dec
cmp
push
pop
pop
xchg
mov
xor
stos
mov
sbb
mov
jmp
mov
or
test
ret
and
push
mov
xor
mov
push
icebp
push
roll
add
sbb
mov
lahf
notl
mov
icebp
sub
idiv
pop
dec
jg
mov
pop
lcall
jge
loopne
xor
leave
pop
outsl
push
pop
add
lock
adc
roll
std
or
outsb
push
imull
pop
cmp
jle
ss
ja
icebp
push
xorb
test
sarb
int3
jnp
pop
cmpb
je
cld
sub
shlb
loop
outsb
push
jmp
rcll
jo
out
xchg
aam
sub
gs
mov
push
push
xchg
pop
and
test
in
xor
in
jecxz
mov
aam
jp
cld
lods
push
and
shrl
push
and
mov
or
xchg
cltd
mov
push
push
in
stc
in
jns
mov
fiaddl
sub
adc
pop
outsl
mov
mov
pop
call
shll
jno
lods
mov
je
fyl2xp1
xchg
add
lods
andb
mov
dec
pop
movsb
sbb
push
fbld
fstpl
sbb
mov
clc
lret
xor
adc
fimuls
cmp
mov
mov
roll
daa
push
pushf
stos
lret
in
lods
cmp
adcl
mov
xchg
in
xlat
adc
cld
insb
jbe
push
xor
popf
outsb
dec
jno
sub
xor
ljmp
mov
arpl
mov
xchg
das
jns
cmp
in
adc
fcomps
mov
add
sbb
je
js
mov
cmc
cld
xchg
fldcw
push
xchg
ja
pop
xchg
add
test
push
mov
lds
jbe
aaa
ret
jge
sub
ficompl
popa
je
xor
pop
aad
jne
xchg
or
leave
sbb
loopne
jne
lds
pop
push
popa
shr
std
jnp
mov
leave
xor
rcr
mov
xlat
stos
hlt
iret
jb
push
dec
mov
cli
xor
jecxz
les
aas
ljmp
lahf
push
fwait
add
push
xchg
cwtl
ss
jmp
cld
add
in
div
sbb
movsl
dec
inc
mov
mov
inc
cmp
scas
in
clc
sahf
xchg
rorl
cmpb
jb
mulb
scas
push
sub
adc
mov
sub
mov
out
pop
sbb
iret
hlt
dec
loope
scas
ds
fisubs
mov
dec
mov
fsubl
inc
jle
sbb
fwait
pop
sti
andb
mov
jne
gs
jge
jp
or
cs
icebp
or
es
aad
mov
mov
mov
ljmp
sbb
mov
add
cmp
adc
sub
sarb
loop
mov
lock
shll
enter
jne
test
cmp
push
gs
lcall
inc
mov
lods
outsl
loop
sub
or
or
cmp
dec
inc
and
xchg
xchg
ret
xchg
jg
adc
push
scas
cmp
adc
mov
push
lds
sub
aad
std
jae
ret
sarb
xor
mov
mov
sub
mov
adc
pushf
mov
jb
je
push
mov
daa
aam
or
cmpsl
mov
push
loop
in
pop
mov
test
es
xchg
inc
mov
movsl
xchg
push
push
in
outsl
adc
sbbl
inc
pop
popa
in
lret
ds
imul
jns
add
test
mov
mov
mov
addr16
and
popf
push
sub
loope
push
pusha
pop
pop
or
jmp
rep
stos
es
dec
js
popa
sahf
xor
mov
cltd
test
xor
mov
scas
daa
inc
add
push
das
cmc
lods
mov
movsb
cmp
jo
cmp
pushf
pop
cs
xchg
sub
punpcklwd
in
xorl
jecxz
int3
inc
lret
fwait
add
pop
cltd
sub
xchg
xlat
jns
pop
pop
repz
movsl
add
aam
inc
testl
cmp
pop
mov
nop
test
ljmp
jle
loopne
shll
cmpb
popa
mov
ret
sub
sub
xor
mull
cmpsb
inc
sahf
and
push
aaa
fadd
sarl
subb
scas
call
ret
xchg
enter
dec
aad
cltd
aas
call
xchg
pop
bound
hlt
add
xor
sbb
pop
adc
sbb
add
jge
xor
sbb
in
pop
add
call
dec
cld
emms
lock
jns
or
sub
add
pushf
jl
in
clc
mov
inc
clc
dec
pop
xor
add
push
push
inc
add
xor
add
out
inc
mov
push
lea
jge
and
mov
add
lock
je
fwait
xor
insl
jle
pop
out
xorl
popa
xor
push
jae
mov
xchg
bound
fwait
lret
add
insb
cmp
or
mov
mov
cmpsl
jb
sti
xchg
dec
cwtl
cmp
clc
das
xor
lret
subb
out
icebp
mov
mov
jge
mov
mov
jge
outsb
mulb
dec
mov
leave
inc
mov
lcall
mov
hlt
jo
test
adc
cmpsl
dec
lret
movsb
scas
sbb
mov
daa
cmp
pop
and
popa
pop
jp
mov
mov
cmp
push
adc
cmp
fdivs
dec
cmp
bound
lock
cmpl
clc
call
adc
and
mov
fisubl
ficompl
fisubrs
add
inc
mov
and
push
pusha
push
ret
xor
sbb
lods
cmp
add
mov
mov
inc
pop
sbb
pop
mov
scas
add
xchg
nop
mov
cli
push
pop
sub
rcl
cli
sbb
fiadds
dec
popf
xor
insb
mov
pop
sub
ficompl
int3
adc
stos
popf
fwait
xchg
push
xchg
push
fdivrl
repnz
jne
bnd
sbb
mov
fcmovb
lock
jo
and
ja
push
outsl
inc
aaa
arpl
das
repz
jle
ja
sub
out
fwait
push
push
mov
ljmp
mov
push
xchg
andb
xchg
insb
fnstsw
sbb
int
push
mov
mov
push
mov
addr16
cld
inc
aam
push
ud2
sub
add
cmp
mov
sbb
stos
ret
pusha
dec
add
xchg
inc
dec
dec
stc
cs
cmp
imul
fisttpll
outsl
rorb
mov
andb
dec
cmp
aam
into
dec
clc
jno
dec
jns
aas
mov
jae
jno
popa
subl
push
into
adc
jae
dec
cmp
cmp
fisubrs
cmp
pop
mov
loopne
aad
imul
adcl
in
repnz
push
xchg
lahf
mov
icebp
andl
out
aaa
push
dec
iret
push
pushf
rorl
adc
mov
mov
sub
dec
popa
aaa
push
test
hlt
add
inc
pop
mov
xchg
int3
cmp
fsubs
push
iret
or
mov
sub
xchg
push
rcr
mov
sbb
mov
sbb
leave
les
xor
jo
xor
repz
and
adc
jbe
sub
cli
jnp
inc
push
in
outsb
jnp
mov
pop
jmp
sbb
ss
out
xchg
adc
ret
insl
add
sbb
mov
push
push
cwtl
stos
negl
das
dec
push
int3
mov
arpl
sbb
in
sarb
sbb
movups
push
push
outsl
xor
sub
rcl
dec
pop
dec
xchg
ret
shll
mov
cmpsb
sub
scas
pop
mov
ljmp
cs
stc
cmc
and
sub
push
imull
cwtl
sbb
out
xor
and
mull
add
inc
cwtl
push
sub
int
cli
add
ret
addr16
dec
aad
adc
xor
xchg
stos
mov
mov
adc
rcl
inc
scas
sbb
call
add
dec
dec
xor
clc
jno
push
shll
fisubl
mov
dec
mov
jecxz
xchg
add
or
aaa
adc
inc
test
gs
push
je
sbb
inc
cmp
push
xor
int3
icebp
mov
iret
gs
inc
mov
pop
lea
cmpsl
es
call
imul
movsl
cmp
jecxz
sub
imul
xor
push
sbb
jecxz
sbb
mov
xor
and
or
fnstenv
mov
cmp
push
lods
lea
mov
cltd
roll
sarl
pushf
add
mov
sbb
adcb
push
sub
inc
mov
mov
add
jecxz
fistpll
fldl
lret
adc
mov
adc
int3
insl
sbb
int
mul
out
fs
movsb
test
test
xor
scas
lahf
pop
fcomps
push
es
aad
cwtl
andb
xor
out
test
hlt
fwait
dec
jno
sarl
or
xor
cmp
leave
imull
dec
mov
das
inc
mov
mov
ds
jp
push
icebp
sub
loop
adc
push
jp
repz
lock
ds
loope
in
idivl
mov
in
js
pushf
in
shlb
je
in
mov
sub
push
adc
add
add
mov
mov
push
stc
enter
mov
insb
fildl
cmp
lret
mov
adc
out
pop
push
jl
xchg
inc
push
sbb
and
dec
adc
imul
jg
push
mov
mov
fwait
cmp
ds
in
aas
inc
pop
das
and
and
imul
xchg
mov
mov
adc
xor
mov
insl
cmpsl
ss
xor
mov
mov
sbb
xchg
inc
push
fmuls
mov
xchg
minps
mov
lods
mov
or
jle
add
lock
mov
adc
outsb
pop
movsl
mov
shlb
imul
mov
testb
jo
pop
mov
inc
imul
insl
or
fstps
jnp
pop
pop
jo
sbb
jns
rolb
mov
and
testl
in
movsl
lcall
lret
aaa
add
scas
dec
jae
xor
pop
pop
pop
flds
hlt
inc
je
and
test
lcall
lret
xchg
mov
push
test
stos
sub
and
sub
adc
sarl
mov
nop
sub
add
cmp
push
mov
push
insl
jle
fdivrs
mov
pop
dec
pop
cmp
cmpsb
cmp
aaa
cmc
adc
sahf
repnz
pop
mov
aam
pop
sub
lods
lods
cltd
inc
icebp
cmc
stos
stos
mov
or
lret
push
xchg
and
sub
jb
add
aaa
jg
mov
daa
inc
dec
fnstenv
dec
lret
pushf
xor
lret
xlat
dec
xor
out
jp
repz
and
cmc
jg
mov
adc
outsb
pop
cli
jl
aad
xor
nop
xor
inc
int3
mov
pop
adc
hlt
shll
pop
sbb
jne
lret
push
aad
addr16
aas
loop
and
pop
daa
cmp
pop
or
ss
jecxz
xchg
ljmp
outsl
jne
divb
dec
lods
repz
xchg
pop
jmp
add
sahf
xchg
dec
int
js
movsl
jle
or
push
in
out
in
jo
loop
sbb
movsb
roll
nop
les
add
push
mov
xchg
pop
shrb
lea
fildll
int
inc
sub
sbb
fidivl
aas
stos
or
jg
inc
mov
dec
cmpsb
xor
enter
outsb
aam
insb
xchg
into
sbb
xor
aad
xlat
dec
jmp
sbb
inc
test
sub
mov
dec
sahf
es
test
stos
pop
push
cmp
sbb
fimuls
lods
and
aad
int
ljmp
test
push
test
cmp
fiadds
jns
scas
and
xchg
out
outsb
adc
fcomi
repnz
sbb
iret
fcmovb
bound
mov
or
outsl
popf
push
or
xlat
cli
popl
and
inc
and
das
sbb
adcl
js
sbb
inc
push
aas
push
xchg
mov
mov
pop
test
shr
pop
and
das
call
jp
xchg
xor
xchg
cltd
aam
imul
and
add
cmp
sbb
xchg
mov
es
mov
int
addr16
cmp
jl
cmp
push
cmpsl
fdiv
xlat
ja
sbb
and
push
sub
dec
xchg
add
and
roll
in
shll
jle
rcrb
sbb
sti
lret
movsb
push
jl
nop
sbb
inc
xchg
push
cmp
scas
pop
xor
cltd
and
call
adc
sub
fwait
test
js
adc
mov
adc
jb
int
lods
lock
aas
js
mov
loopne
xchg
xchg
fmull
jb
cmpsl
scas
xchg
call
pop
pop
sbb
into
mov
ss
adc
jbe
xchg
shll
cmp
in
nop
pop
ret
popa
mov
jmp
sub
insb
xor
xor
and
add
mov
js
jns
ja
pop
ficompl
gs
inc
jnp
in
mov
insb
dec
hlt
fs
pop
data16
cmp
cmp
sarl
adc
add
xchg
loop
into
ficompl
push
jns
and
mov
iret
and
xor
in
shlb
add
lds
jbe
mov
fmull
pop
aam
push
lea
mov
sti
inc
xor
inc
sahf
iret
lahf
sub
lock
and
mov
push
decb
mov
push
and
push
inc
mov
insb
ljmp
dec
pop
repz
pop
dec
popa
mov
adc
outsl
std
cmp
lds
out
test
lods
xchg
test
push
xchg
sbb
push
les
inc
or
mov
dec
pop
push
push
cli
push
cmpsl
jg
scas
mov
es
stos
push
test
xchg
mov
fildll
lods
adc
enter
inc
jo
pop
mov
out
add
push
in
add
mov
jg
xor
in
mov
jne
pushl
dec
mov
sub
and
pushf
sbb
insl
lock
cmp
jae
arpl
mov
adc
adc
xchg
or
cwtl
cmp
add
test
push
lods
icebp
or
int3
lods
xchg
ja
push
mov
xchg
lret
pushf
mov
leave
push
decl
bound
or
lock
cmp
push
in
push
adc
push
sbb
inc
and
cmp
inc
and
and
xchg
push
outsb
mov
cmp
add
push
mov
dec
lods
xor
dec
test
pushf
jno
pop
jo
test
jbe
leave
inc
mov
bound
es
out
jecxz
into
xchg
or
mov
add
ds
stos
andl
add
cld
movsb
aaa
nop
stos
cmc
call
mov
adc
and
faddl
fadds
adc
mov
mov
add
jmp
push
sub
ret
sti
jmp
insb
xor
pop
bt
push
mov
aaa
xor
fadds
inc
loopne
push
in
jne
push
or
pushf
adc
pusha
arpl
cmp
cmp
shrl
in
std
ss
xchg
shl
repnz
call
xchg
sub
push
jl
stos
stos
imul
push
scas
aaa
xchg
nop
inc
xchg
pop
cmp
inc
inc
outsb
mov
loope
jmp
out
shl
and
pop
or
in
ja
sub
sbb
fldcw
cld
mov
movsb
lahf
movb
pop
loope
inc
sti
jg
dec
loope
mov
cmp
pusha
adc
imul
fbstp
add
rorl
cpuid
sbb
lcall
nop
and
adc
outsl
outsl
sub
aad
dec
sbb
loope
popa
pop
int3
je
xchg
jg
dec
xchg
cmp
sub
insb
dec
adc
imul
fcomps
jecxz
loopne
scas
test
adc
stc
pop
loope
cmc
mov
aas
add
mov
mov
and
in
fwait
movups
movsb
cmp
test
ljmp
lds
pop
lret
xchg
in
js
stos
jns
dec
iret
cld
aad
sbb
and
clc
pop
sar
outsl
shll
xlat
xchg
xchg
mov
repnz
gs
jecxz
popf
test
aas
daa
loope
enter
jb
mov
insl
lcall
mov
pop
js
cmp
pop
into
mov
jmp
sub
sbb
push
cmp
das
shrl
dec
xor
hlt
sbb
cmp
addb
xchg
jg
out
and
cmp
mov
rorb
mov
jle
enter
cmpsb
fucom
insb
enter
out
add
aad
add
or
lcall
test
je
mov
adc
aaa
repz
mov
xchg
xchg
fnstcw
popa
jmp
gs
jae
sbb
es
int3
adc
cs
loopne
pop
dec
out
xchg
push
iret
scas
aam
xchg
mov
or
xchg
sahf
xorb
or
sub
rolb
sbb
jae
repz
or
enter
jo
cli
push
sub
xchg
cmp
add
out
lahf
arpl
stos
xchg
push
outsl
popf
push
arpl
or
push
mov
dec
jmp
call
push
xchg
cmp
dec
cmp
add
cmp
and
sbb
sti
gs
and
pop
cmp
mov
iret
sub
ds
mov
add
fisttpl
loope
cmpsb
lock
stos
mov
test
incl
push
inc
test
je
test
jns
pop
fisubs
xor
lcall
out
in
mov
cmp
pop
rcll
fwait
hlt
loopne
aad
pop
cwtl
cmc
outsb
stc
aaa
jp
jmp
mov
pop
icebp
out
lods
dec
jo
fisubs
sub
or
xchg
push
or
inc
push
inc
in
insb
aaa
in
sbb
lret
stc
js
xchg
call
xchg
sbb
cmc
jl
ret
sub
cltd
push
repnz
jns
xchg
jno
push
sub
mov
inc
lods
scas
lret
and
mov
insl
call
lods
dec
lahf
enter
scas
out
adc
push
add
push
test
js
inc
orl
ljmp
mov
fmul
cmpsb
es
ljmp
cmpb
out
cmp
punpckhbw
cmp
or
inc
or
lret
into
mov
inc
movl
sub
iret
xchg
subl
loopne
clc
mov
call
cmp
loop
aaa
hlt
stos
jb
jo
mov
or
cli
add
dec
lret
imul
xchg
push
mov
loope
or
aad
mov
cmp
mov
sbb
aas
cltd
sbb
and
mov
dec
lock
adc
xor
inc
sahf
enter
lods
dec
aaa
mov
xchg
int3
mov
pushl
xchg
rol
push
cmc
push
mov
push
aam
into
sarl
sarb
icebp
mov
addb
clc
cmc
enter
mov
cli
xor
jae
sub
jl
lret
jge
mov
or
mov
outsl
hlt
xchg
cli
push
lods
pop
call
fldcw
fiadds
in
lods
sbb
and
xchg
push
cmp
xor
mov
jnp
cld
mov
mov
in
es
pusha
push
and
divl
xchg
pusha
pop
movl
lret
push
popf
fisubrl
sti
sbb
out
repnz
cmpl
stc
xlat
in
jae
push
fs
mov
in
jb
stos
inc
into
sbb
jge
xor
xchg
pop
popf
pop
mov
cltd
mov
shlb
ja
sbb
cmp
movsb
or
into
mov
or
jae
pop
add
ret
shrb
int3
pop
inc
inc
jg
pusha
pushf
sbb
shlb
insb
push
push
push
testl
movsb
xchg
jns
sub
dec
jge
push
push
xchg
fisttpl
stos
jmp
or
aaa
dec
cmp
or
jg
arpl
mulw
cli
push
fwait
shr
dec
mov
stos
cltd
pushf
sti
out
mov
scas
in
mov
ja
and
mov
stc
out
aad
mull
sbb
std
sub
mov
out
cmp
and
xchg
or
hlt
adc
pusha
inc
loope
push
mov
dec
gs
hlt
test
mov
dec
cmp
jge
imul
out
xor
xchg
sbb
lea
xchg
test
fwait
adc
cmp
mov
imul
adc
mov
push
mov
add
mov
fwait
jmp
gs
jbe
cmp
push
or
icebp
cmp
and
popf
adcl
aad
negb
nop
push
push
les
pop
push
jg
jnp
inc
xor
mov
stos
pop
notl
jmp
mov
shlb
push
roll
mov
fucomip
cmp
mov
lea
mov
fcompl
and
push
fdivrs
sub
das
and
pop
jmp
pop
mov
ret
push
mov
movsl
mov
loope
jo
mov
call
fs
xchg
loop
ja
mov
jbe
dec
rorl
dec
cmp
outsl
mov
and
pop
xlat
jns
pop
mov
bound
lret
inc
lds
and
sub
push
mov
adc
jg
add
filds
fisubl
and
arpl
mov
fs
pop
sub
in
xor
adc
and
inc
push
xor
pop
notb
loope
cmp
mov
lret
xchg
mov
lret
ds
iret
lea
fmulp
movsb
cmp
cmpsl
push
mov
push
sarb
aam
ret
lea
stos
dec
call
stos
push
aam
or
clc
popa
mov
stos
test
push
cmp
lret
stos
in
mov
sbb
jmp
xchg
repz
mov
sbb
push
mov
bound
push
pop
mov
scas
pop
test
test
cmp
mov
lods
ljmp
addr16
sar
inc
mov
ljmp
arpl
xchg
iret
call
adc
outsl
int
dec
mov
sbb
sub
into
or
gs
movsb
sub
mov
aad
fadd
xor
xchg
pusha
js
sbb
fs
mov
aam
cmp
out
mov
lea
ficompl
sub
pop
decl
sub
cli
inc
push
jmp
push
dec
lcall
cmp
or
adc
enter
sub
clc
pop
pop
fsubp
dec
pop
cmp
cmpsb
lock
ret
insb
jg
sub
fsubl
insb
cwtl
push
sbb
sbb
lret
fistps
cltd
in
inc
jne
mov
cmp
pop
clc
push
mov
test
nop
add
add
push
sub
jb
push
or
lret
push
xchg
lods
lret
movsb
xchg
cmp
mov
jae
ret
inc
jae
pop
and
push
test
fwait
imulb
ljmp
outsl
aad
xlat
lods
jns
int
sub
rorl
push
or
cmp
stos
cwtl
adc
mov
pop
mov
mov
add
arpl
xorl
cwtl
mov
pop
pop
inc
iret
jmp
inc
mov
int
adc
push
flds
call
push
sub
adc
sbb
stos
cmp
lods
daa
lods
enter
inc
ss
cli
lods
push
sub
or
test
andb
jmp
xchg
add
mov
fisubs
cltd
adc
movsb
fcoms
mov
aaa
paddsb
and
flds
enter
stc
stos
in
pushf
cmpsl
jge
shrl
mov
stc
or
pop
jmp
into
pop
imul
mov
imul
fwait
mov
xor
or
jecxz
pop
adc
in
ljmp
add
lea
add
pop
cmpsl
cld
sbb
popf
cmp
jl
shrb
jp
jp
inc
cs
jnp
pop
in
idivb
mov
mov
aas
push
out
lds
jle
aam
js
adc
pop
add
sbb
mov
stc
sbb
mov
jb
aad
sarl
in
stos
and
hlt
cmp
xor
sbb
lds
rclb
inc
fs
cmpsb
stos
test
enter
in
in
xchg
dec
movsb
outsb
sub
test
push
mov
cmp
xchg
pop
mov
adc
push
sub
dec
cs
inc
sbb
mov
lret
fdivl
fwait
push
scas
es
dec
mov
cmp
mov
mov
inc
cld
loope
mov
sub
hlt
mov
mov
jp
sbbl
imul
adc
ret
sbb
mov
pushl
movsl
in
dec
inc
ss
mov
mov
inc
out
add
or
popf
xchg
mov
mov
xor
cmc
cld
inc
mov
and
shrb
and
testl
iret
dec
adc
push
adc
out
test
sub
outsl
mov
mov
lcall
icebp
jl
lret
mov
div
dec
ret
mov
or
pop
and
push
cmp
push
mov
daa
loopne
mov
in
pop
add
loopne
push
add
xor
cmc
inc
push
mov
fidivl
nop
xchg
jbe
add
or
pop
dec
pop
xchg
and
addr16
out
xchg
pop
loope
fisttps
cmpb
sbb
push
sbb
aam
subl
fs
or
out
mov
and
adc
adc
aaa
ret
push
xchg
cld
adc
andb
push
xchg
movsl
hlt
xor
pop
lock
insl
push
jge
add
cs
jl
fucomip
push
sbb
pop
bound
xchg
cld
aas
daa
pop
fadds
cmp
lods
insb
add
xchg
xchg
cmp
adc
dec
inc
mov
mov
and
jns
pop
push
outsl
cmpsb
jno
pop
xchg
and
imul
into
ljmp
mov
sti
inc
jo
push
cmp
pop
ror
jecxz
dec
sbbl
sbb
fisubrs
adc
adc
or
in
cmp
cld
and
add
movsb
mov
imul
push
lock
aaa
aaa
sti
fsubs
js
xchg
leave
and
cmc
add
push
shrl
mov
cmp
push
sub
nop
or
dec
andb
stc
sub
fwait
sbb
jbe
mov
mov
cmpsl
ss
jecxz
and
mov
push
push
push
mov
inc
pop
xor
fdivl
push
aad
rorb
scas
lret
lds
pushf
xchg
sub
mov
shl
imul
mov
mov
iret
mov
adc
or
pop
inc
mov
mov
jle
in
cmp
push
out
inc
jb
inc
stos
int
mov
dec
add
add
inc
cld
add
push
ja
imul
insl
jle
or
loopne
out
rcr
cmc
rcrb
nop
pusha
out
fdivs
outsb
into
pop
lock
xchg
pop
rcrb
jne
out
xchg
xor
and
iret
jns
stc
jo
mov
xchg
cli
test
sbb
fstpt
jne
sbb
or
aas
add
stos
rolb
out
dec
lods
jge
fidivl
pop
rcll
sbb
adc
lds
adc
or
xchg
xorl
js
jnp
aad
mov
faddl
loopne
ss
jae
mov
fwait
gs
jecxz
xor
int
lret
scas
cmp
idivb
push
cld
aam
and
and
aaa
test
movsl
sbb
cmp
out
mov
lea
or
scas
or
mov
inc
dec
mov
imul
dec
xlat
loop
adc
fidivrl
fsincos
fisttps
iret
jb
xor
add
mov
rcrb
out
notl
je
dec
mov
jo
mov
not
or
jmp
nop
repz
push
outsl
sbb
add
daa
mov
mov
sbb
imul
loope
or
push
jmp
mov
test
add
xchg
pushf
adc
push
mov
scas
dec
xchg
jbe
sti
adc
add
adc
jle
sub
sti
xchg
fidivrl
bound
into
and
int3
rcrl
int
ja
into
xchg
mov
sti
test
or
movsb
ret
mov
mov
leave
mov
sbb
cmp
hlt
push
test
jg
nop
xchg
xor
mov
adc
decb
xchg
cmp
test
popf
cmp
mov
and
cwtl
sbb
adc
push
push
inc
lret
sbb
cmp
es
jne
adc
pop
dec
push
sbb
cmc
push
leave
mov
fisubrs
out
js
jmp
jb
jge
xor
sbb
mov
inc
sub
repz
shll
mov
jae
adc
cmp
adc
sahf
std
pop
fmull
stos
mov
stc
sub
imul
enter
loope
ret
inc
cwtl
xor
sub
pop
dec
mov
xor
jg
fimuls
lret
in
pop
and
and
out
add
jge
idivb
call
ret
out
push
push
dec
mov
sub
cmpsb
fstps
lea
cmp
mov
pop
pop
push
mov
sub
test
fadds
stos
mov
out
jl
call
dec
test
sbbb
jge
jbe
xchg
imul
jmp
sbb
xorl
inc
cs
out
call
pop
mov
inc
ljmp
int
and
xor
lret
imul
sbb
les
pop
dec
call
cmp
mov
or
aas
movsl
or
xor
fsubl
mov
pop
pop
push
jecxz
daa
fwait
jno
fldt
pop
lcall
mov
cmp
daa
stos
cmpsl
insl
dec
mov
sub
mov
fldl
lcall
inc
lock
call
clc
mov
lds
fcmovnb
pop
cmp
pop
insl
jo
inc
push
testb
test
test
lds
mov
xchg
rol
cmpb
idivb
push
ret
inc
jb
cmp
lods
mov
out
mov
mov
push
sbb
into
out
mov
mulb
push
icebp
cmp
adc
adc
inc
hlt
stos
rorl
psubq
mov
sub
lcall
adc
in
and
jns
cli
lahf
jno
dec
lcall
mov
loop
inc
dec
pushl
mov
and
push
jbe
adc
or
and
call
jb
push
lods
imul
clc
or
pusha
push
mov
jns
push
inc
nop
mov
movsl
lds
push
mov
jnp
sbb
lret
lret
sbb
je
std
imul
inc
or
popa
aas
fnstenv
sbb
and
dec
lds
sub
fisubrs
mov
rcrb
imul
or
pop
xor
or
shrl
pcmpgtd
stos
lret
pop
pop
lods
ss
add
cmp
mov
cs
dec
xor
jne
mov
and
mov
mov
and
les
adc
sbb
popa
lds
add
rcrb
mov
push
addb
frstor
aam
std
aas
mov
cmc
lret
sbb
sub
out
or
int3
push
dec
sub
popa
in
push
out
aaa
sub
popf
or
out
loop
js
xor
adc
sbb
push
aad
sbb
xor
xchg
adc
dec
xchg
mov
jecxz
ja
daa
add
push
push
pusha
repz
test
adc
add
mov
add
test
pop
jge
pop
out
push
or
or
jnp
out
sarl
push
mov
inc
scas
xlat
das
shlb
insb
add
fdivs
sbb
sub
mov
sub
mov
test
push
pusha
int
int3
mov
std
scas
cld
add
in
jp
daa
fmulp
stos
jg
sbb
enter
mov
subl
fdivrs
sbb
stos
push
movsl
lock
mov
mov
xor
inc
pusha
inc
aas
mov
lock
in
nop
insb
mov
repnz
stc
push
and
movsl
out
and
sbb
scas
orl
pusha
or
popa
lret
inc
mov
rclb
mov
rorl
dec
lret
jae,pt
pop
mov
rcl
lds
frstor
das
repnz
cmp
fsubrs
adc
in
idivb
or
stos
push
adcb
jnp
jno
leave
imul
push
adc
or
jae
dec
iret
and
pop
stc
scas
in
sub
loop
push
push
in
mov
or
mov
mov
pop
mov
ret
adc
mov
and
pop
xchg
sub
pop
movsb
shl
addr16
push
jno,pn
shrb
adc
loop
je
mov
cs
rcrl
test
leave
popf
mov
or
adcb
test
mov
and
add
shl
inc
jle
adc
adc
imul
lods
sub
sahf
lock
mov
test
dec
mov
mov
movsl
rorb
stos
out
cmovp
mov
jl
sub
stc
mov
inc
push
stos
jbe
sti
cwtl
imul
add
loope
mov
xchg
popa
adc
cmp
loope
ret
rolb
dec
int
xor
icebp
push
icebp
cmpl
call
mov
into
cmp
push
in
xorl
loope
int3
push
fisubl
enter
stc
adc
cmc
in
ret
mov
icebp
fsts
and
ret
push
out
jno
xor
mov
jnp
popa
xchg
cmp
sub
addr16
jecxz
cmpsl
push
lret
mov
mov
stos
sbb
sub
mov
push
rorl
int3
or
out
pushf
sti
cmpsl
in
aam
cmp
aad
stos
mov
in
mov
add
cmp
push
jl
repnz
sbb
cmp
sub
arpl
jg
ret
call
or
adc
stos
jnp
iret
cmpsb
xor
dec
ja
fisttps
mov
pop
mov
jl
add
xchg
stos
shlb
pop
jl
xor
loop
imul
pushf
cmp
mov
rol
insl
jo
gs
cli
lea
imul
inc
xchg
aas
lods
out
add
inc
stc
and
pop
icebp
test
adcb
sbb
or
pushf
lock
sahf
mov
xlat
inc
stc
cmp
mov
adc
data16
push
cwtl
aas
shlb
popl
mov
sbb
arpl
sbb
cli
pusha
sbb
andb
jbe
test
push
leave
arpl
js
cwtl
out
and
push
inc
lods
cmpsl
push
mov
mov
call
xchg
insb
pop
sbb
bswap
aam
insl
pop
sahf
std
push
loopne
mov
mov
add
and
loope
xchg
pop
pop
cmp
adc
mov
das
loope
andl
mov
cld
adc
rclb
mov
xchg
xor
int3
xor
cmpsb
in
push
imul
lods
fwait
mov
sub
sub
or
dec
aas
jmp
adc
lods
sbb
dec
je
xor
sahf
pop
mov
stc
sbb
pushf
fs
mov
pushf
cmc
sub
fwait
mov
divl
cmc
xor
mov
lret
jmp
sti
inc
mov
adc
cmp
xchg
sub
gs
fsub
xchg
shlb
sbb
outsb
inc
movsb
mov
jmp
push
jno
inc
push
jb
xchg
dec
movsl
push
inc
dec
lret
sbb
jb
and
mov
add
out
sub
jno
and
adc
mov
shlb
dec
push
adc
mov
xor
bound
and
insb
cmp
jne
pop
lds
repnz
out
repz
mov
test
sbb
imul
je
movsl
cmc
icebp
sub
call
cli
inc
inc
or
imul
out
lock
push
sbb
and
push
lret
push
pop
adc
pop
imul
cmc
movsb
jo
push
and
lret
in
cmp
and
loope
inc
adc
xor
jb
roll
sbb
xchg
enter
cwtl
adc
adc
aad
inc
cli
add
jecxz
hlt
push
mov
out
inc
test
mov
cmpsb
push
cmp
popa
add
jmp
fisttps
sub
mov
outsb
jno
add
cmp
ds
add
decl
lret
daa
aam
xlat
and
jbe
mov
movsb
pop
xchg
dec
adc
pop
sahf
sbb
fnstcw
xchg
push
jns
lcall
adc
setae
out
inc
loop
lods
xchg
dec
mov
sub
mov
inc
mov
mov
adc
dec
in
mov
push
xchg
push
inc
dec
mov
aaa
jo
aad
jne
sbb
xor
jbe
insb
jnp
sbb
into
or
iret
add
mov
jo
mov
dec
mov
cli
loop
lret
add
push
sub
xor
pushl
push
inc
lahf
aaa
lret
movsb
inc
int3
cmp
pop
and
or
daa
add
inc
out
scas
jmp
xchg
repz
pop
xchg
mov
inc
or
aam
adc
aaa
iret
lret
xchg
xor
pop
and
repnz
sbb
jno
push
add
adc
dec
sbb
std
push
cmp
sarb
into
xchg
mov
enter
jmp
mov
test
add
add
loop
sub
test
notb
pusha
call
ror
fcomp
outsl
sbb
sub
das
adc
push
pushf
inc
add
xchg
aam
xchg
pop
out
jae
sbb
rcll
fists
fstpl
stos
add
or
in
jo
and
das
jbe
outsl
sbb
add
sahf
in
mov
popf
mov
sbb
into
mov
jae
dec
dec
jae
inc
or
pop
not
dec
push
stos
gs
lods
xchg
je
subb
adc
scas
push
std
sbb
cmpsb
mov
xorl
in
out
pop
jo
js
rcrb
jmp
mov
xchg
loope
sub
and
mov
fisubs
aad
inc
enter
dec
dec
cwtl
dec
push
popf
in
test
push
jnp
inc
imul
orl
xchg
cmc
out
std
loope
movsb
and
xchg
in
mov
cmp
fbld
fcoms
push
jmp
fadds
sahf
stos
int3
out
or
shrb
fucomp
and
xchg
push
xor
jp
mov
fwait
lret
cmpsb
mov
mulb
push
cmpsb
fcmovnu
adc
jae
outsb
mov
xchg
addr16
adc
push
cmpl
and
pop
add
stos
cwtl
pop
sbb
or
fiaddl
in
add
add
inc
cmp
outsb
dec
mov
aaa
stc
sub
jg
cmp
popf
mov
movsb
outsl
or
xchg
cmp
int
push
xchg
add
mov
mul
fdivrs
imul
pop
push
iret
fimull
lcall
fs
cmp
sub
xchg
push
and
mov
std
mov
lea
pop
fadd
push
pop
sar
loopne
add
inc
inc
es
add
xchg
pop
xchg
cwtl
out
dec
js
scas
jecxz
xchg
inc
rcr
xlat
xchg
es
adc
xor
mov
jae
and
push
push
out
xchg
adcl
mov
xlat
movsb
shrb
xchg
pop
jae
adc
xor
xlat
aam
mulb
sbb
xor
push
adc
lods
inc
fstps
andl
sub
shll
clc
popf
jge
push
adc
leave
jl
movsl
dec
mov
inc
sbb
cmp
sbb
push
rclb
mov
xchg
fucomp
not
divl
sub
je
outsb
jl
jmp
cmp
in
xchg
push
gs
mov
mov
arpl
mov
inc
roll
test
es
adc
jle
lcall
outsb
cmpsl
aaa
jge
je
shll
xchg
ret
test
pop
addr16
or
or
push
sbb
dec
repz
xchg
scas
add
push
mov
mov
pushf
pop
lret
cmc
fwait
mov
fnstsw
test
pop
xchg
mov
in
pop
push
hlt
mov
fbld
pop
mov
jns
je
jmp
ret
scas
aam
jne
outsb
shrb
in
jo
sbbb
fcmove
xchg
xchg
xchg
imul
cli
cmpsl
and
cmp
xchg
out
pop
cmpsl
stos
nop
mov
lret
fcom
inc
or
icebp
sbb
movsb
outsl
mov
xchg
mov
adc
jno
xchg
add
std
sub
sub
inc
pop
push
outsl
push
outsl
fs
add
ljmp
inc
negl
dec
inc
call
mov
mov
pop
sbb
fsubr
push
jo
out
push
into
mov
mov
xor
adc
and
and
cmc
sbb
xchg
pop
sbb
jns
andb
dec
cs
xor
jmp
insb
or
popf
sti
xor
repz
and
jg
mov
lods
mov
andl
into
sub
sbb
xchg
lcall
mov
xchg
ljmp
sbb
mov
stos
jmp
xchg
sbb
into
cmp
negb
dec
xor
js
inc
in
mov
shrb
mov
jno
mov
cmp
mov
cmp
xor
and
fdivrl
sub
sbb
sub
add
cwtl
std
nop
nop
xor
add
jmp
popa
clc
shlb
ljmp
inc
pop
or
push
ret
insl
outsb
or
push
add
xor
mov
jg
inc
sub
jmp
add
mov
repz
pushf
in
adc
mov
out
pop
fs
dec
xchg
les
add
insl
fwait
in
dec
push
cmp
inc
lds
mov
cmc
testl
mov
dec
pusha
jmp
inc
rcl
repz
jle
cmc
mov
ja
leave
addr16
push
test
jne
ret
pop
pop
push
sub
pop
jo
popf
loopne
cmp
pop
cmpsl
push
test
fnstcw
xor
cli
pop
sahf
mov
add
ljmp
xchg
adcb
fistpll
lds
xor
inc
jmp
ret
subb
jecxz
in
insb
or
out
pop
ret
test
xor
popf
std
push
cmpsb
add
js
in
jmp
rcrl
mov
repnz
or
scas
dec
in
les
fbld
dec
pop
pushf
test
mov
mov
push
clc
xchg
pop
jge
and
enter
sbb
jnp
in
imul
sbb
mov
push
pop
sbb
push
push
mov
outsl
imul
cs
lods
jb
loop
lret
xchg
es
inc
sub
xor
dec
scas
xchg
dec
inc
insb
out
jge
cli
xchg
aas
lcall
xchg
jmp
or
imul
inc
pusha
lret
mov
xchg
sar
inc
sub
popa
jmp
add
cmp
sub
mov
stos
cltd
inc
loope
incl
cli
or
cmp
and
lahf
add
jmp
mov
adc
sub
add
dec
cmp
aam
xchg
cmp
and
adc
xchg
mov
mov
push
addl
shll
sar
dec
or
push
jne
das
pop
cmp
out
dec
mov
or
test
dec
popa
add
ja
mov
nop
push
push
cs
lock
sub
push
jo
movsb
push
xchg
or
cltd
push
mov
mov
sti
cmp
cmp
xchg
loopne
insb
xor
lret
ja
cmp
mov
outsb
mov
addb
lds
addr16
sbb
out
xchg
mov
mov
jge
arpl
fstpl
call
stos
xor
pop
mov
in
ja
adc
loopne
push
inc
test
lods
xchg
xor
inc
std
mov
jmp
movsb
pop
push
inc
call
fildll
inc
pop
insb
push
push
and
dec
int3
rcll
xchg
lret
in
mov
pop
push
movsb
sub
ror
popa
scas
fcompl
aas
dec
xor
xorb
gs
loop
stos
and
sub
outsb
mov
cwtl
inc
popa
in
insb
jl
adc
push
sar
jo
shr
or
hlt
movsb
rclb
push
adc
je
inc
add
sbb
pop
mov
loope
sub
fsubr
ljmp
inc
ljmp
fdivp
movsb
push
in
aam
cwtl
inc
mov
les
push
ret
es
js
or
push
int
and
xor
js
push
cmpsl
add
ds
repz
sub
in
pop
inc
pop
and
call
pop
jbe,pn
and
pop
lds
sub
sbbl
pop
dec
inc
sub
repnz
push
push
fidivrl
rcll
outsb
jmp
pop
pop
sbb
push
mov
xchg
jae
jecxz
and
push
dec
cmp
push
sbb
push
fdivs
or
ret
cld
sub
pop
push
icebp
cmc
mov
mov
xchg
adc
lahf
xchg
sbb
popa
cmpsb
lods
pop
nop
xchg
dec
mov
xchg
icebp
sbb
lea
cmc
sti
aad
or
mov
cmpl
leave
pop
pop
add
ja
faddl
jge
ret
test
xchg
mov
je
in
sbb
fcoml
out
cmp
jnp
sub
popf
mov
mov
gs
xchg
sbb
fisubl
xchg
fsub
bound
ljmp
repz
add
mov
int
push
dec
in
daa
xor
stos
addr16
clc
movsb
pop
sbb
jne
jb
pop
xor
hlt
mov
push
fisubs
aaa
scas
stc
push
dec
movsb
adc
jb
inc
mov
inc
scas
inc
cmp
xchg
aad
sub
xchg
mov
loopne
enter
pop
xor
gs
aaa
out
xchg
cmp
mov
cmp
push
mov
sub
lds
add
jge
andl
mov
and
popa
cmp
into
pop
mov
inc
cmp
inc
push
mov
mov
cmp
fcmovb
fsubs
enter
int
lahf
dec
lcall
leave
or
push
dec
lahf
test
pop
cld
mov
add
enter
aam
int3
and
xor
inc
sub
das
jge
mov
jp
or
inc
mov
and
dec
and
test
pop
outsb
hlt
add
sar
mov
loop
mov
sbb
jmp
xchg
ja
test
lret
in
lods
and
test
insl
sbb
xchg
loopne
popa
push
cmp
sahf
inc
inc
into
push
push
push
mov
adc
inc
mov
data16
leave
sahf
xor
mov
or
or
xchg
or
out
jb
mov
inc
es
add
icebp
rcrb
cli
jo
mov
inc
stos
popf
push
pushl
jae
test
xor
cs
mov
jne
mov
pushf
or
outsb
punpcklbw
repnz
dec
push
test
repz
insb
icebp
and
cmpsb
xor
jecxz
fstpl
dec
gs
jle
inc
xor
mov
jl
int3
mov
jns
and
cmp
pop
xchg
push
push
jae
scas
adc
cmc
gs
mov
aas
push
mov
insl
orl
and
shlb
mov
cmpsb
or
mov
xchg
fldcw
pop
mov
jl
xlat
sbb
jp
mov
sbb
cmc
imul
bound
call
cmpsb
mov
rol
xchg
pop
leave
cmp
mov
in
cmp
repnz
scas
dec
jg
out
mov
mov
and
xor
pop
ja
jge
pop
mov
cmp
das
push
xchg
adc
cltd
jb
popa
pop
cli
call
jl
push
jle
pop
lods
js
add
mov
ss
adc
data16
mov
xchg
xchg
repz
add
lods
ss
add
sbb
push
mov
out
scas
pushf
int
jmp
ret
shl
lcall
popa
mov
sub
push
inc
dec
out
adc
adc
cmc
and
insb
lods
mov
sub
mov
adc
in
rcll
ja
inc
mov
xchg
dec
jns
xchg
xor
and
lea
inc
xor
push
into
cmc
dec
xchg
inc
cmp
sti
je
sub
jnp
mov
inc
popa
add
andb
stos
js
clc
pop
imul
enter
ljmp
imul
lret
icebp
fisttpl
push
out
cmpsl
and
and
out
or
dec
repnz
shl
dec
shlb
leave
std
push
dec
orl
fidivrl
pop
mov
sub
aas
add
pop
cmpsl
xchg
fs
push
je
fs
ret
and
dec
pop
cld
jo
or
ljmp
dec
sti
pop
sub
jmp
movsb
fs
fmuls
fidivrl
mov
dec
jae
and
outsl
sysexit
cwtl
xlat
in
shlb
sub
ja
push
outsl
sbb
lret
es
dec
inc
mov
or
shrb
int
mov
lahf
pop
lods
repnz
cmp
stc
dec
std
adc
xchg
jno
mov
adc
mov
pop
sub
daa
ss
xchg
push
push
dec
mov
outsb
rcll
imul
testb
aam
push
sub
dec
or
inc
jnp
mov
popa
ja
and
xchg
mov
aad
clc
and
mov
in
push
mov
push
lcall
test
mov
pop
icebp
cli
dec
int3
out
or
clc
es
cltd
mov
push
ret
inc
jnp
jne
sub
jne
dec
rorb
and
in
adc
xlat
pushf
or
dec
outsb
inc
pop
outsl
mov
movsb
aad
clc
jb
push
pop
lock
and
aad
adc
push
push
fdivrs
push
pop
lock
loopne
int3
adc
aam
push
shlb
mov
popa
cltd
adc
rclw
test
xchg
imul
push
in
insb
xchg
loopne
stc
mov
cmp
add
stc
adc
jbe
add
cld
ret
xchg
sub
dec
in
lahf
aas
xchg
insb
in
je
mov
xchg
jecxz
push
cwtl
pop
push
adc
dec
fiadds
icebp
mov
and
fsubs
xchg
mov
push
pop
out
movhps
push
adc
sub
idivl
and
popf
push
mov
aas
dec
test
outsl
rorl
mov
dec
clc
cld
loopne
pop
push
adc
cmpsl
lods
sbb
mov
stos
les
fsubr
mov
insl
cmp
icebp
xchg
aad
out
xchg
inc
adc
cmpsl
imul
xlat
mov
fnstcw
add
cli
sbb
and
dec
and
cmp
mov
xor
pop
mov
insl
pop
cmp
cmp
cmp
and
xor
in
ss
cld
repz
sub
dec
sub
push
cld
test
pop
and
repz
sub
cmp
mov
hlt
sti
sbb
fcmovb
inc
loope
mov
jno
mov
aaa
fiadds
mov
pusha
shl
testl
push
sahf
scas
aas
in
out
mov
add
dec
push
les
stos
sub
jle
or
das
lret
inc
mov
std
std
iret
ror
adc
pop
in
outsb
leave
cmp
repnz
xchg
cltd
rolb
adc
rcl
mov
xchg
call
adc
adc
inc
scas
mov
and
cmpsb
lea
enter
mov
sarb
rorb
ljmp
xor
jbe
lock
sub
xchg
mov
lea
adc
adc
jl
jne
jp
and
addl
dec
sbb
xchg
fdivs
repnz
pop
movsb
sbb
xor
lahf
call
adc
sbb
ret
ja
fildl
lods
inc
pop
ret
add
shrb
test
dec
int
aas
aaa
sahf
dec
int
int
cmp
es
fstpt
cmp
imul
and
jbe
push
mov
inc
adc
insb
push
push
push
insl
xor
dec
sahf
test
notb
out
fcmovb
mov
cmpl
mov
push
push
outsb
pop
fdivs
xchg
inc
jb
loop
je
mov
and
sub
clc
and
test
jmp
or
jne
pop
in
ret
push
int3
inc
sbb
mov
xor
sub
hlt
rorl
pop
cld
adc
hlt
and
push
sub
loop
add
jmp
sbb
jns
adc
sbb
add
jecxz
adc
xchg
jge
xor
push
or
ds
dec
rcrb
push
aam
popa
cld
insb
hlt
jmp
jae
sbb
sti
mov
adc
jecxz
mov
or
clc
jnp
mov
cmp
test
cmc
nop
rorb
sub
cmpsl
aad
bound
or
or
movl
cwtl
arpl
mov
roll
mov
nop
repz
pop
scas
dec
ret
frstor
pop
imul
push
fisubrs
int
and
test
jl
pop
sbb
imul
mov
dec
hlt
les
insl
adc
add
and
adc
lret
mov
call
add
inc
mov
xchg
test
pop
xor
and
bound
call
jle
mov
addb
insl
insl
arpl
lods
cmp
mov
stc
pop
aad
outsb
lods
cmp
pusha
xchg
repnz
ja
popl
in
push
in
adc
cli
xchg
imul
xlat
xor
or
and
cmp
cmpsl
imul
jbe
std
mov
lcall
mov
pop
dec
pop
in
xchg
aaa
inc
fcompl
and
lahf
js
xchg
popa
leave
pop
out
mov
inc
and
test
xchg
push
int
loop
bnd
push
inc
cs
push
sub
dec
jno
mov
es
dec
sbb
pop
nopl
mov
ror
or
les
push
iret
jnp
push
push
mov
pop
mov
fisubs
lods
jecxz
mov
pop
test
adc
cmp
adc
or
inc
in
fisttpll
out
out
xchg
mov
pop
push
fldl
insl
fisubl
add
push
and
cmp
out
pop
lods
inc
inc
int3
push
jbe
push
ficoms
frstor
int
enter
or
adc
cmp
loop
loopne
mov
pop
sti
inc
data16
fwait
inc
aas
fnclex
cmc
out
inc
inc
jg
mov
aad
lret
adc
outsb
lea
lahf
push
and
sub
inc
xchg
mov
xor
xor
lds
mov
mov
aad
jle
aaa
adc
xorl
cmc
cwtl
dec
mov
aas
mov
or
xchg
inc
cmp
test
sbbb
lock
inc
jo
mov
mov
pop
shlb
movsb
stc
int
and
xor
out
inc
data16
or
or
push
fcomp
and
and
daa
fldt
jo
mov
push
pop
dec
pop
sbb
inc
adc
cmc
cmp
or
jmp
mov
sub
mov
dec
rcrb
xor
int3
mov
jo
rcrb
cmp
xchg
call
sub
pop
cmp
test
call
and
gs
loope
or
out
pop
jns
rcrl
pop
sub
adc
out
add
cld
divb
icebp
mov
jg
insb
out
xchg
test
add
mov
fstps
jg
pop
and
lock
dec
stos
sub
xor
mul
testb
pop
cmp
pop
dec
in
and
mov
insl
push
xor
xchg
mov
ficoms
sahf
das
stc
add
cmp
and
jnp
or
jo
es
push
fisttpl
mov
dec
rol
lcall
adc
push
jp
add
mov
lret
out
ret
outsl
mov
cmpsl
cltd
lea
aam
inc
rcrb
lcall
mov
nop
xor
jl
pop
mov
xlat
and
ret
lock
inc
mov
and
jb
jbe
and
add
lods
int
lock
and
mov
nop
in
push
cltd
fidivs
mov
xor
outsb
push
loopne
fisttps
ljmp
pop
fdivrl
cltd
mov
decb
movsb
call
out
and
cltd
xchg
cmc
xor
mov
test
mov
or
pop
fwait
int
push
les
lods
inc
dec
lock
das
jae
lods
push
push
mov
dec
into
dec
inc
dec
aad
mov
out
lret
sahf
xor
enter
xchg
pop
inc
call
ja
mov
pop
sbb
jb
lods
pusha
dec
push
mov
sbb
fs
test
dec
dec
fimull
iret
ljmp
lds
pop
inc
mov
pushf
mov
aaa
add
je
ja
stos
daa
dec
mov
stos
push
imul
insb
addr16
arpl
xchg
push
les
enter
mov
iret
loop
push
adc
iret
mov
cs
jmp
bnd
fs
adc
daa
xorl
dec
enter
mov
lret
ds
xchg
fisttps
iret
ret
mov
xchg
mov
rclb
cmp
imul
sbb
mov
mov
xor
pop
xchg
mov
push
mov
nop
es
test
dec
mov
shl
rorb
jb
inc
sbb
popa
xchg
mov
lret
and
inc
pop
outsl
mov
jnp
mov
pop
push
xchg
imul
cli
xchg
stos
pushf
mov
lahf
repnz
pop
ficomps
filds
gs
and
rorb
fsts
out
push
insl
pop
mov
inc
mov
repz
pop
cwtl
jmp
clc
inc
push
jnp
dec
mov
stos
sbb
cmp
sub
icebp
inc
xor
das
and
gs
pop
outsb
nop
inc
fwait
enter
mov
xor
icebp
aad
pop
mov
mov
enter
adc
push
nop
gs
in
cmp
mov
mov
inc
rcr
das
mov
pop
ds
jle
or
ss
fs
orl
fsubs
pop
inc
shl
and
inc
into
scas
scas
sub
arpl
insl
push
cmp
aad
or
jns
add
lods
fcmovu
inc
adc
mov
push
in
adc
inc
sub
test
imul
in
xchg
mov
mov
push
ljmp
adc
pop
ret
pusha
stc
insl
jl
outsl
xchg
xor
add
and
dec
add
add
xchg
outsl
pop
cmp
xchg
jmp
loop
or
add
pusha
clc
or
insb
xchg
aam
push
jge
lahf
pop
pop
and
inc
xor
adc
and
stos
sti
xchg
adc
push
icebp
xorl
cli
dec
cwtl
test
data16
ret
or
add
inc
lahf
adc
push
sub
mov
sub
add
repnz
lret
ja
cmovns
mov
xchg
test
sahf
enter
addr16
lret
popa
or
cmc
dec
movsl
dec
inc
jl
add
mov
sbb
es
es
dec
daa
push
push
mov
sarb
push
pop
repnz
pop
cmpsl
push
stc
popf
adc
adc
loope
mov
pop
repnz
test
lret
cs
push
idivb
daa
out
inc
inc
pop
sub
fdivl
stos
iret
sti
out
gs
and
lds
outsb
xchg
hlt
push
mov
sub
ficoms
imul
out
sti
add
in
fnstenv
sub
cmp
push
mov
stc
sbbb
fistps
mov
fcomi
xchg
leave
xor
mov
cmp
stos
bound
and
lahf
cmp
es
stc
or
adc
mov
int3
fiadds
iret
jecxz
and
pop
out
int
xor
push
jge
ss
jmp
in
inc
add
iret
gs
dec
in
inc
jb
je
insl
sbb
pop
imul
xchg
inc
stc
test
and
or
mov
mov
mov
int
psubq
int
cmp
mov
lea
pop
frstor
out
jmp
ret
lahf
push
mov
das
mov
inc
dec
dec
pop
push
dec
cmp
sti
mov
pop
popa
mov
jo
nop
test
mov
testb
mov
scas
cmc
insl
leave
loop
push
mov
xchg
int
or
aas
sub
sbb
mov
popa
mov
fistl
and
bound
adc
lahf
and
adc
push
nop
inc
movsl
and
bound
cs
xchg
in
dec
outsb
adc
pop
push
cs
int
cltd
fistpll
mov
test
push
frstor
ficompl
lret
pop
fsubs
test
push
xchg
ucomiss
shrb
jmp
cli
sbb
cmc
iret
rclb
mov
sbb
inc
xor
add
sub
dec
scas
mov
lds
jb
addr16
out
jmp
hlt
test
div
pop
into
lcall
jnp
and
xor
aas
sbb
jo
das
push
sbb
push
aaa
popf
js
dec
inc
std
mov
jp
sbb
repz
adc
sarl
sub
scas
or
movsb
imul
mov
sahf
adc
test
xchg
pop
jae
sub
shlb
rorb
add
inc
jge
js
cmpsl
subl
and
lods
call
mov
lret
shrl
repnz
ljmp
dec
mov
movsb
lret
jmp
das
inc
cmp
xchg
mov
mov
dec
lahf
lahf
hlt
mov
inc
rcr
xchg
ss
sbb
ret
insl
arpl
jge
add
data16
push
jl
inc
and
mov
aam
add
xchg
mov
sbb
out
jge
fs
fists
leave
rcrl
movsl
shlb
imul
bound
sbb
clc
lret
mov
jnp
call
xchg
repnz
ja
push
xchg
mov
pop
push
cmc
and
test
dec
push
addr16
adc
enter
popf
add
mov
cwtl
cmpb
outsb
mov
inc
add
aaa
in
push
inc
pop
out
ja
stos
ror
sbb
aaa
out
shl
or
xchg
sbb
pushf
icebp
outsb
push
pop
enter
mov
repz
outsb
push
push
mov
jge
pop
call
mov
rcl
ds
lea
jl
jo
cmp
inc
adc
mov
sbb
mov
fs
and
pop
sub
sbb
incb
sbb
notl
sbb
jmp
dec
test
lret
call
vucomisd
push
loope
add
cmp
pop
xchg
hlt
jo
jg
les
add
popa
add
outsb
les
push
adc
push
cmc
mov
lret
lea
leave
xor
subl
add
jns
push
or
sahf
sbb
push
lds
dec
movsb
xchg
sub
mov
pop
fnsave
fldenv
xor
jae
rcrb
push
sub
mov
fisubrs
lods
fdivrl
test
lahf
or
jecxz
int3
es
cmp
add
push
test
dec
and
and
pop
adc
sbb
call
insl
xchg
dec
sub
add
dec
mov
jmp
out
addr16
xchg
push
and
inc
pushf
push
jecxz
mov
sbb
or
xchg
rclb
jp
cmp
rolb
loopne
dec
out
fcmovb
aad
xlat
jb
pop
mov
sbb
stos
mov
pop
das
xorl
sarb
faddl
outsl
cmp
mov
into
adc
mov
adc
jo
std
adc
mov
add
and
sub
push
imul
bound
add
fildl
hlt
rclb
aam
mov
dec
bswap
roll
add
jae
sub
jae
outsl
fwait
test
mov
jb
jl
xlat
inc
push
push
mov
shlb
imul
das
icebp
sbb
rcrl
clc
scas
dec
inc
inc
dec
cmovns
test
cld
ds
es
jp
mov
das
cltd
push
ss
test
and
adc
jb
lret
mov
test
inc
repz
test
scas
fs
lcall
mov
call
jnp
andl
es
leave
cmpsb
jge
or
inc
jge
shlb
repnz
xchg
pop
add
mov
insl
enter
fsubr
aas
jb
lods
stos
pop
dec
clc
mov
lock
fsubl
xchg
inc
in
dec
sbb
leave
inc
mov
xlat
mov
xor
mov
cmpsb
bound
mov
ss
lret
scas
cld
cmp
pop
cltd
hlt
sbb
mov
fs
stos
inc
mov
je
mov
insb
repnz
loope
inc
aad
add
and
arpl
jb
in
gs
imul
hlt
int
popw
xchg
mov
add
add
jmp
lcall
out
ficomps
inc
stos
xchg
add
dec
or
sub
sub
jmp
inc
pop
mov
mov
pop
pop
push
pusha
cmp
and
xchg
adc
cs
mov
adc
mov
mov
xchg
push
cwtl
aas
loope
shl
hlt
cmpsb
lret
inc
lds
aad
xlat
cmp
jmp
test
sbb
loopne
aaa
push
in
lret
sub
rcll
jecxz
jae
lock
inc
aas
push
sbb
push
cmpsb
cmp
fwait
hlt
insb
fld
stc
sub
stc
rcrl
add
add
xchg
inc
mov
hlt
aaa
cmp
hlt
or
adc
pop
dec
dec
jbe
jl
jo
mov
mov
xchg
fcomps
cltd
dec
aas
xor
jecxz
movsb
cmp
jmp
push
outsb
mov
movsb
pop
cmp
psignd
sbb
stos
cmpb
xchg
jns
mov
sti
sbb
ds
lahf
fmuls
push
mov
aad
adc
iret
in
outsl
pop
rclb
mov
mov
inc
das
or
shlb
out
xor
sbb
or
sub
jg
scas
or
cltd
add
add
lret
cmp
cmpsl
jle
inc
push
or
pop
jns
add
and
sbb
inc
test
jne
movsl
fcomip
lds
dec
adc
daa
fisttps
in
or
inc
fistpl
add
comiss
cmp
int
or
in
mov
faddl
push
and
push
mov
test
lcall
cmp
and
adc
mov
sbb
dec
pop
xlat
sub
xor
insl
pop
jae
insl
loop
es
or
inc
je
repz
dec
jb
test
nopl
loop
fcoms
and
pop
mov
add
movsb
adc
push
aad
xchg
xor
push
cmpsl
cmp
cs
sar
xchg
jnp
mov
rcrl
xor
cmc
pop
jmp
mov
xchg
movsb
cmc
or
mov
in
aas
and
adc
mov
mov
mov
or
adc
pop
icebp
mov
je
aaa
dec
addl
stc
dec
enter
fsubl
or
xchg
cli
mov
push
dec
and
mov
push
repnz
adc
mov
and
cwtl
sub
inc
push
cmp
and
mov
inc
fldcw
jno
aad
cmp
popa
fcompl
pop
mov
into
sub
pop
xor
ss
daa
xchg
fisubrs
andb
ret
inc
inc
out
sbb
xor
cmp
dec
adc
jb
push
adc
sbb
imul
xchg
outsl
mov
push
adc
mov
scas
sub
xor
mov
sub
cmp
mov
int
xchg
lea
ljmp
dec
push
mov
std
loop
popa
je
popf
repnz
sbb
lret
and
imul
xor
xchg
push
stos
cmp
in
inc
and
in
mov
push
xchg
fiadds
loop
shl
arpl
data16
outsl
jmp
fistl
sti
loop
and
loopne
fwait
and
inc
xchg
popf
xor
mov
repnz
add
inc
xor
push
andb
fs
mov
mov
sbbb
pop
cmc
cld
int
pop
stos
jg
in
popa
push
repz
dec
cltd
lcall
xchg
jg
iret
cmp
mov
mov
cltd
std
fbstp
arpl
jp
or
adc
sub
stc
mov
fistpll
nop
lcall
movsb
mov
inc
xchg
add
arpl
mov
sub
mov
xchg
jb
aad
test
aas
mov
or
daa
xchg
cmp
aas
add
and
imul
cltd
add
inc
mov
dec
mov
loopne
movsl
mov
push
lret
mov
scas
gs
iret
fwait
sub
sub
jl
addl
and
jmp
sub
daa
mov
xchg
and
cmp
mov
dec
add
in
je
adc
xchg
push
adc
ret
xor
dec
andb
daa
int
pop
pop
add
test
out
cmp
jmp
loop
xor
sahf
push
xor
loopne
lods
lds
aas
mov
shl
mov
jo
and
xor
add
and
ret
lcall
cmc
pop
loopne
hlt
leave
hlt
repz
mov
adc
sbb
cmp
fs
jo
hlt
push
dec
mov
xor
mov
push
push
imul
jae
ja
lahf
mov
sbb
jmp
and
fnsave
mov
roll
mov
mov
je
push
imul
cwtl
dec
sub
hlt
sbb
or
jecxz
sub
add
mov
mov
dec
jae
mov
addr16
sti
out
and
or
inc
add
inc
pushf
add
adc
dec
rcll
sub
sub
cmpsb
mov
cmp
sub
mov
fidivrl
stos
cmpsl
lds
fwait
cmc
jo
push
or
mov
mov
pop
cmp
mov
mov
sbb
adc
test
or
cmc
sub
dec
ljmp
sbb
cltd
mov
xor
pop
dec
mov
mov
or
xchg
imul
sub
jo
in
pop
sbb
test
mov
popa
sub
aad
icebp
xchg
loope
inc
cwtl
popa
ret
jl
das
mov
nop
cmp
jmp
je
hlt
lds
jp
inc
inc
dec
pop
sbbl
repz
lods
and
in
movsl
adc
pop
xor
ds
pop
add
push
ljmp
pop
in
stos
mov
aaa
xor
xor
pop
fwait
scas
jns
fidivrl
fidivrl
push
pushf
addl
lea
mov
data16
cmc
xor
cmpsb
cmp
les
aad
int3
or
cld
inc
mov
rorl
dec
jae
cltd
movsl
enter
push
nop
popf
rorl
inc
mov
dec
outsl
and
arpl
test
push
push
aaa
push
mov
lds
pop
flds
fstpt
out
xbegin
fisttps
dec
rcrb
sub
jle
add
jbe
push
repz
xlat
scas
inc
push
loope
xchg
shlb
adc
pushf
data16
icebp
dec
bound
inc
sbb
push
jne
jmp
repnz
dec
lcall
pop
push
sub
movsl
add
loop
stos
cwtl
shrb
les
cmp
dec
or
jb
mov
pop
js
mov
shll
daa
or
pop
cmp
pop
adc
xchg
add
mov
xchg
mov
cmp
push
das
imul
outsl
xchg
testl
add
lods
and
adc
call
pop
fwait
scas
clc
ja
push
insl
fists
daa
mov
xchg
mov
push
add
xor
daa
clc
cmp
dec
mov
mov
ret
aam
insl
xchg
scas
pop
pop
shrb
xchg
adc
lea
dec
clc
addl
adc
outsl
hlt
js
and
mov
xor
sbb
push
dec
xchg
push
adc
jo
mov
es
adc
pop
dec
cs
andb
jge
dec
jo
mov
das
mov
inc
sahf
mov
mov
mov
ret
mov
add
aaa
and
mov
pop
xchg
dec
cmp
ret
mov
std
sahf
outsb
loope
jo
fiadds
test
nop
ja
aam
pop
mov
xchg
mov
cmp
imul
bound
mov
call
adc
mov
mov
out
lret
daa
icebp
test
fldt
mov
ss
fneni(8087
lret
push
adc
jecxz
sbb
imul
cli
xlat
sbbl
adc
mov
lret
out
jbe
fwait
dec
shll
mov
xchg
and
je
push
mov
ja
mov
insb
dec
dec
in
sbb
fnstsw
xchg
inc
cltd
int3
lods
inc
movsb
cmp
jne
adc
mov
push
std
jb
jne
movsb
and
ret
sub
xor
xorl
sub
adc
pop
pop
sbbl
push
sbb
lretw
dec
icebp
cmpl
cmp
sbb
and
pop
mov
roll
sub
sbb
adcl
in
add
stos
leave
dec
cmpsl
xchg
push
or
nop
cmc
es
adc
cmp
popf
jge
or
out
mov
stc
addr16
mov
hlt
mov
leave
xchg
jl
hlt
sarl
mov
sub
mov
js
mov
mov
out
int3
pop
movsb
jns
inc
aas
adc
and
xchg
insb
and
ret
cmp
test
adc
lock
hlt
xchg
pusha
dec
pop
loopne
into
mov
add
lds
ror
cmp
or
mov
sub
mov
loope
out
xor
imul
jge
mov
cmc
inc
lea
mov
sti
jne
pop
rcrl
add
xor
jnp
rorl
popf
mov
sbb
mov
pop
push
hlt
xchg
shl
dec
mov
negb
mov
sti
pop
adc
leave
negl
in
or
outsb
cmp
aad
or
mov
aas
adc
popf
sub
cmc
mov
and
and
and
xchg
jmp
pop
cmpsb
cld
inc
push
lea
mov
shll
cmp
jno
xchg
call
push
mov
inc
cmp
bound
sbb
or
pusha
pop
and
clc
push
fnstcw
sub
mov
jbe
sahf
jmp
ja
inc
fists
shlb
insl
cli
mov
jecxz
insl
inc
xchg
sub
cmpsl
pop
mov
divb
jbe
imul
mov
xchg
xrelease
xchg
fs
mov
mov
jp
popf
pop
lahf
fimuls
xchg
sub
lods
js
push
jbe
ds
insl
and
adc
into
pushf
jne
les
movsb
scas
pop
adc
aas
out
test
inc
outsb
fcomps
dec
pop
popf
pop
repz
or
jecxz
shrl
xchg
call
xor
adc
shl
loop
mov
inc
insb
out
movsb
jo
es
fadds
mov
and
push
pop
mov
cltd
aas
pop
lock
mov
fildl
hlt
shll
insl
sbb
inc
cwtl
cwtl
cli
cwtl
dec
sbb
sub
sbbl
aas
xor
loopne
xchg
and
lret
sbb
test
pusha
outsl
gs
sahf
lcall
in
cmp
xchg
fwait
mov
mov
pop
mov
jno
add
mulb
notl
and
icebp
dec
and
inc
in
out
lods
mov
cld
insb
mov
jmp
ljmp
mov
cmpsl
sarb
or
adc
mov
add
dec
scas
arpl
jmp
lcall
adc
enter
cmp
add
xchg
push
lahf
out
roll
mov
insb
mov
daa
mov
push
mov
push
sub
daa
orl
and
pop
notb
test
je
sub
mov
addr16
adc
mov
mov
call
ficomps
insb
gs
push
adc
stos
mov
lods
inc
les
mov
repnz
jns
es
negb
and
pop
stos
inc
jg
bound
les
movsb
roll
sbb
lret
lods
sbb
les
mov
in
jnp
cmc
mov
or
icebp
enter
mov
add
push
dec
orl
cli
sbb
hlt
out
int
adc
dec
mov
add
lea
xchg
int
sub
pushl
xchg
xchg
push
clc
nop
xor
dec
xor
mov
mov
mov
daa
stc
sub
add
fstpl
stos
sbb
cmc
xchg
or
xor
mov
into
cmp
sub
stc
cs
dec
jbe
cmp
sbb
icebp
add
jmp
das
mov
cmp
iret
test
jae
jbe
pop
pop
adc
enter
stos
lret
adc
sbb
pop
add
lret
mov
js
lods
out
add
mov
fimuls
adc
push
cmp
and
subl
xchg
push
cmp
add
lock
lret
movsb
out
into
sbb
mov
fsubr
cs
xor
xchg
aaa
jl
sbb
fidivl
repz
stos
ljmp
jecxz
jb
cli
mov
leave
push
in
stos
adc
cmp
loope
in
mov
loop
or
jl
addr16
ret
cmp
lods
pop
xchg
jle
xchg
push
sub
in
adc
in
pop
mov
add
dec
mov
sbb
sbb
mov
data16
mov
test
jnp
sbb
mov
lret
xchg
add
sub
xlat
int3
fwait
aad
xchg
insl
popf
cmp
fcmove
call
cld
repnz
mov
xor
mov
inc
or
mov
fwait
sbb
das
pop
xchg
inc
push
pop
negl
fnstcw
pop
push
repz
clc
loopne
xchg
push
cld
mov
jecxz
mov
les
pop
and
insb
out
fildl
loop
das
jp
jge
push
test
mov
mov
xor
inc
or
cwtl
mov
inc
add
xlat
mov
in
ss
jle
test
stos
mov
jb
add
insl
cmp
in
icebp
sub
lret
cmp
push
fcomps
adc
push
jb
jbe
dec
repnz
fwait
inc
fildl
lcall
push
xorb
imul
es
xor
add
mov
sbb
cmp
sbb
jns
movsb
cmp
lahf
or
popf
popf
mov
stos
out
mov
xor
enter
movsb
xchg
mov
sub
repz
pop
jno
push
aas
and
int3
pop
inc
add
shl
cmpl
sbb
jnp
aaa
in
subl
gs
mov
out
repz
fstps
cmp
jecxz
out
sub
fmull
sub
popf
or
sub
pusha
mov
mov
mov
mov
std
leave
mov
pop
pop
sbb
movswl
ljmp
test
push
and
jmp
mov
jo
out
insl
outsl
mov
out
popa
and
sub
or
and
jecxz
xchg
mov
pop
mov
push
stc
das
cmp
fidivl
xchg
test
dec
std
mov
repnz
js
daa
cwtl
and
sbb
push
dec
sti
mov
in
mov
mov
lcall
push
xchg
push
punpckhwd
das
fnstcw
sub
sbb
mov
sub
add
xor
jo
pop
out
jmp
pop
and
int3
jl
dec
inc
imulb
mov
mov
rol
mov
fwait
pop
out
imul
xchg
movsl
pop
mov
adc
shufps
lret
addr16
jae
or
and
add
js
addb
sub
cmp
iret
xor
repnz
ljmp
inc
lods
push
neg
sub
push
pop
jae
imul
mov
mov
scas
out
insl
ret
cmp
mov
loopne
sbb
jg
jno
daa
rcrb
pop
rcrb
jae
mov
cs
pusha
inc
lret
sbb
mov
dec
pop
xchg
sti
dec
insl
out
arpl
jo
add
dec
rcrl
ficompl
adc
xor
repnz
sbb
lret
mov
cmp
or
je
fists
and
mov
mov
sub
shll
push
sbb
xor
adc
dec
insb
add
jmp
adc
adc
in
inc
cmpb
rclb
jmp
push
das
loop
jns
jae
xor
je
adc
sbbl
arpl
into
dec
std
dec
jecxz
inc
stos
or
adc
inc
fistps
xchg
push
sbbb
ds
add
and
pop
xchg
stos
mov
jg
icebp
lock
inc
leave
xor
push
mov
ds
pop
pop
xchg
adc
or
mov
lods
pusha
pop
mov
push
sahf
nop
or
stos
insb
hlt
or
lods
sbb
insl
cmpsl
testb
inc
mov
mov
adc
icebp
lea
pop
cwtl
fstl
out
test
enter
pop
repnz
xchg
outsb
cmc
ljmp
dec
push
xlat
call
enter
leave
std
imul
and
and
mov
pushf
aas
mov
pop
aas
pop
gs
add
je
mov
sbb
sbbl
pop
sbb
dec
inc
cld
cmp
popa
mov
mov
insl
addr16
roll
arpl
xchg
mov
popf
hlt
mov
push
scas
int
rorb
ljmp
scas
pop
scas
or
loop
cli
and
push
or
lods
cli
xchg
add
std
adc
lret
add
pop
and
ret
in
xlat
cmp
cli
das
popf
incl
xchg
hlt
xlat
out
dec
nop
insl
xor
mov
sub
or
mov
sub
push
dec
cmpsl
or
in
jmp
adc
out
notb
push
jp
outsl
dec
jecxz
adc
sub
sub
lea
pop
mov
cltd
divb
fdiv
cwtl
popf
filds
test
into
cmp
mov
loope
aam
cld
mov
imul
test
shlb
jb
test
mov
push
fwait
inc
sbb
mov
sub
lret
inc
icebp
hlt
xchg
mov
push
test
lret
imul
lea
inc
adc
fwait
shrb
popa
or
pop
cmp
decl
jl
int3
sbb
das
scas
test
and
stc
lea
mov
sub
std
add
mov
and
sti
insb
jns
loopne
gs
add
cmp
decb
mov
and
test
insb
arpl
divl
insl
inc
or
sub
pop
out
and
gs
xchg
adc
add
pop
scas
or
or
out
mov
or
stos
fmuls
mov
test
movsl
leave
xchg
pop
cs
inc
outsl
and
int
xchg
jp
mov
rolb
add
xor
and
sahf
push
test
mov
imul
fisttpl
inc
jns
outsb
cmc
adc
inc
mov
clc
in
int
int
mov
enter
xchg
pop
adc
dec
push
loope
jmp
mov
jne
hlt
pop
push
sub
gs
jmp
aam
ffreep
push
ret
mov
fldl
mov
push
inc
cltd
pop
pusha
or
shl
mov
push
add
mov
jp
ret
das
xor
hlt
fs
dec
xchg
cmp
dec
pop
ja
stc
outsb
push
sbb
imul
ljmp
or
pop
xchg
nop
fcmovnb
or
and
add
jmp
xor
push
xchg
xchg
mov
dec
into
cld
inc
sub
out
cmpsb
insb
sub
push
loope
cmp
push
filds
push
cmp
cmpsb
enter
repz
xor
inc
lret
andl
adc
pop
negb
sub
mov
sbb
adc
loop
mov
popf
repz
xchg
mov
insb
jl
stos
addr16
stos
lods
fidivs
lcall
cmpsl
lods
jae
xor
out
icebp
xor
sbb
or
mov
or
add
je
mov
push
inc
inc
std
dec
mov
daa
or
rcl
imul
jno
xor
popf
pop
sbb
push
add
stos
inc
cmpsb
das
mov
mov
sub
sub
lret
mov
stos
dec
stc
xor
sbb
cltd
push
iret
aaa
sbb
leave
repz
idivl
cltd
fwait
in
insb
xchg
out
adc
push
lahf
cs
sub
cmp
xchg
xchg
ret
repz
mov
pusha
cmp
loopne
mov
in
mov
icebp
jp
sbb
pop
icebp
pop
lcall
cli
ja
movsl
sbb
or
imul
dec
add
mov
repnz
neg
loope
js
or
pop
adc
mov
pop
rcll
jb
pop
sub
mov
in
mov
dec
add
cmp
xchg
inc
test
mov
add
gs
shl
jmp
icebp
jns
je
adc
add
popf
sbb
dec
pop
nop
stc
int
sub
enter
sub
in
cmp
loope
push
ret
inc
pushf
pop
sub
adc
jno
shrb
repnz
and
push
or
xchg
dec
mulb
inc
or
stc
push
xchg
hlt
jne
pop
xchg
sbb
loope
pop
jnp
adc
pop
pop
xchg
or
stos
push
pop
int3
mov
int
lock
ds
jge
mov
sub
push
or
pop
data16
ja
pop
ja
pop
push
cmp
mov
add
aam
nop
mov
sub
in
neg
ljmp
jns
test
pop
mov
xchg
xor
add
or
stc
dec
pop
loopne
stc
cmp
movsb
sbb
sub
add
repz
sarb
mov
in
jno
out
push
pop
push
push
cld
cmp
dec
jl
shrb
dec
inc
into
sbb
lock
jl
push
jno
sar
dec
push
fsub
cmp
inc
sti
dec
shll
rcrl
cltd
mov
pop
das
andb
sbb
js
iret
xor
fsubp
aad
insl
fstp
xchg
mov
mov
ds
mov
pop
jp
hlt
inc
push
pop
xchg
inc
into
ret
idivb
xor
and
gs
lock
cmp
push
adc
xchg
lahf
xor
int3
pop
sbb
repz
in
imul
xchg
fstps
lods
mov
ret
and
dec
mov
in
or
pop
clc
lods
cmp
sub
jb
repz
movsb
mov
push
jecxz
pop
adc
cmp
outsb
mov
daa
dec
inc
mov
cmc
mov
bound
mov
cmc
adc
je
dec
lahf
adc
push
mov
inc
cmp
sbb
repz
mov
inc
and
dec
mov
fmulp
or
addl
cmpsb
xchg
fnsave
repnz
xchg
dec
movsb
cwtl
data16
iret
push
add
xchg
ret
and
push
into
rcr
fidivs
add
mov
cmc
cli
and
dec
pop
or
cli
jns
fistl
xchg
sub
dec
outsb
xlat
cmpsl
bound
cmpsb
push
mov
mov
and
ds
lds
in
jb
outsb
inc
xor
shll
xchg
xorb
sbb
dec
inc
mov
lea
lock
cwtl
nop
mov
enter
pushf
fildl
cmp
pop
mov
aas
ljmp
xor
sub
mov
jns
add
mov
add
in
jp
std
push
jo
jmp
mov
xchg
dec
dec
jnp
push
test
jge
jmp
cmp
push
lods
inc
and
jge
enter
pop
jno
dec
lcall
nop
inc
adc
lret
jecxz
lea
xchg
add
stos
mov
fadd
cmp
mov
fstps
fisttpll
int3
ja
mov
mov
outsb
pop
ja
jp
and
outsl
pop
xchg
js
into
mov
in
mov
bound
icebp
leave
out
cmpsb
dec
xor
rclb
sbb
das
jne
jmp
adc
pop
data16
push
xor
cmc
lret
insb
adcl
mov
sbb
fwait
gs
cli
add
push
mov
dec
cmp
dec
ljmp
imul
lret
jl
ret
mov
or
test
xor
mov
xor
test
mov
int3
pop
rolb
jnp
push
mov
movsb
or
mov
es
or
mov
frstor
mov
jp
push
stos
xchg
mov
jo
push
and
or
mov
or
clc
mov
call
imul
xchg
mov
pushw
rorb
clc
pushf
cmc
push
in
rcl
xor
or
popa
aaa
mov
push
push
or
imul
xchg
push
lret
das
lods
ljmp
pusha
iret
das
mov
inc
outsl
outsb
cs
js
push
adc
sbb
mov
fisttps
out
out
mov
jnp
stc
mov
mov
cmp
mov
xchg
mov
aam
shl
push
fmull
lcall
out
pushl
cmp
xor
ret
into
lods
dec
sub
dec
je
push
addb
arpl
leave
pop
or
adc
shlb
add
pop
inc
pop
inc
dec
ret
mov
iret
lret
jge
shr
and
jmp
or
in
or
or
mov
fstps
ds
cwtl
mov
and
sbb
dec
pop
lea
test
sbb
dec
mov
or
push
popf
in
push
loopne
cmp
xchg
adc
icebp
inc
and
jle
sub
xor
mov
jecxz
xchg
xchg
or
shlb
xchg
lds
arpl
xor
int
xor
fists
cmp
dec
xor
pop
cld
fdivp
xlat
test
jp
and
xchg
iret
xor
jmp
je
scas
jmp
fistpl
push
jg
pop
add
loope
les
test
mov
rorb
pop
pop
sbb
test
cmp
sti
sub
lret
jne
fldcw
cwtl
clc
push
outsb
inc
xchg
cmp
or
sti
xor
subb
cmp
xor
inc
fldl
in
sub
add
inc
enter
daa
jg
dec
xchg
mov
jne
out
add
repnz
sbb
loop
xchg
mov
ljmp
dec
xchg
out
push
stos
sub
cmp
mov
and
movsl
cmc
sahf
lea
cltd
into
cs
out
pop
cmova
mov
sub
add
test
pop
mov
lds
sbb
scas
loope
lods
dec
rcl
adc
sbb
subl
cli
loope
or
stos
add
mov
or
lock
in
lds
cwtl
cmpsl
adc
int3
pop
sbb
push
fs
jecxz
stc
mov
js
fildl
fisubl
outsl
xchg
add
pop
into
cmpsl
push
iret
jno
mov
pop
movsl
fcmovnbe
mov
ror
push
loope
push
dec
or
mov
push
pop
aad
pop
pop
sbb
insl
insl
in
xor
mov
je
push
pop
sub
pop
jns
xor
mov
cmpb
es
and
mov
mov
in
pop
adc
mov
inc
mov
push
or
mov
cmpsl
xchg
push
icebp
rcl
add
nop
push
xchg
lret
mov
dec
jl
stos
arpl
jl
iret
lods
mov
add
dec
sbb
mov
add
mov
daa
adc
loop
ss
inc
ss
add
mov
dec
lahf
cmc
sub
arpl
cli
and
xchg
int
push
sbb
xchg
jle
adc
mov
sahf
jne
sbb
inc
cmp
adc
pop
push
subb
ja
cmpsl
fnstsw
addr16
push
mov
lcall
sbb
movsb
jge
insl
imul
cwtl
out
adc
test
in
dec
movsl
ret
pusha
lods
jns
mov
lods
mov
jl
jp
mul
fisubs
stos
xor
into
cmpsb
pop
jns
decb
adc
add
imul
daa
push
mov
or
adc
xor
bound
je
push
sbb
pop
push
jnp
adc
add
fstps
mov
jp
pop
cli
lahf
xchg
cmc
les
sub
fstpl
in
xor
cmpsb
sahf
jecxz
mov
rorb
adc
mov
rcr
push
sub
and
xchg
sub
out
popf
ja
xlat
dec
mov
mov
jbe
jge
pop
pusha
push
sbb
loop
popa
fstpt
mov
inc
cmp
clc
int
pop
inc
push
mov
push
ret
out
xor
xchg
xor
push
inc
aad
sub
jnp
es
jmp
sub
sub
mov
or
fstl
adc
hlt
sub
aad
jnp
xchg
stc
adc
mov
dec
add
mov
push
aad
mov
in
fisubl
shll
adc
lods
std
push
aas
cld
add
outsl
lods
ret
mov
data16
inc
scas
push
sarl
cltd
gs
push
inc
in
repnz
mov
cmpsb
addr16
xor
mov
addr16
fbld
inc
jmp
push
xchg
fists
ja
addr16
aaa
adc
dec
or
pop
push
call
pop
mov
push
mov
aam
or
sbb
nop
mov
inc
outsl
or
add
or
push
mov
and
imul
int3
bound
fcmovbe
mov
fucomi
outsl
ret
fildl
aam
shr
es
adc
and
mov
decl
cmp
jecxz
jp
adcl
icebp
jmp
push
cmp
sub
push
mov
icebp
jge
add
scas
lods
pop
pop
pop
out
adc
test
out
call
push
in
mov
stc
leave
dec
xor
ljmp
iret
xor
pop
jae
and
fmuls
fneni(8087
popa
cli
fistps
push
popf
out
push
mov
leave
test
dec
xor
insl
dec
jmp
mov
mov
jl
push
fiaddl
aaa
mov
push
dec
sub
inc
jno
imul
or
ljmp
adc
mov
pop
mov
pushf
push
mov
mov
add
jbe
xchg
jbe
xchg
jo
pushf
push
sbb
andl
adc
and
mov
test
inc
mov
sub
mov
sub
xorl
iret
and
inc
call
notb
test
inc
std
pop
jle
cmp
faddl
and
pop
sbb
sbbb
mov
notl
xor
jne
shl
and
ret
inc
cmp
scas
in
add
cmp
add
mov
mov
sbb
icebp
mov
sub
imul
mov
xchg
ret
xor
ja
or
pop
ret
repnz
test
test
outsb
test
into
pushf
pop
shlb
cmpl
xchg
sbb
mov
repnz
or
push
mov
pop
rorl
pop
jne
xor
clc
or
dec
scas
sbb
adc
adc
or
fimuls
popf
mov
cmp
sbb
inc
and
push
int3
inc
in
xor
movsb
out
push
mov
dec
add
clc
xor
push
pop
cwtl
mov
sub
sbbl
xor
aaa
inc
in
dec
mov
cmp
sbb
das
add
xor
in
fucomip
pop
insb
adc
sub
scas
imul
mov
outsl
cmp
adc
jg
xor
cwtl
xchg
scas
inc
mov
inc
pop
xor
and
lahf
pop
mov
jge
pop
or
sbb
dec
movsb
int
mov
adc
add
int3
push
pop
xchg
xchg
lret
and
es
shlb
scas
arpl
clc
xor
sub
stos
adc
mov
mov
mov
repz
xchg
mov
adc
jno
push
loope
pop
sub
xor
sub
push
mov
enter
jp
cmp
push
jl
inc
pop
cmp
call
lret
mov
in
sub
orl
ds
xchg
and
pop
punpckldq
rorb
cwtl
shlb
lods
xchg
sub
fld
dec
dec
add
addr16
call
enter
push
idivl
popa
dec
mov
fstl
cmc
gs
rolb
insb
sbb
cmp
fidivs
and
pop
test
rcrl
push
mov
sahf
dec
shrb
sarl
adc
test
iret
mov
mov
loop
nop
data16
push
dec
out
cmp
xor
in
jg
adc
loopne
mov
inc
mov
jae
movsl
add
fs
loop
loopne
rcrb
fnstsw
xchg
xchg
pop
pop
sbb
or
adc
daa
lahf
xchg
lock
test
jne
inc
jmp
sbb
xchg
adc
cmp
jl
push
popf
aas
imul
das
mov
sbb
inc
jo
jp
clc
mov
pop
jecxz
inc
aaa
mov
sti
aam
frstor
xchg
repnz
fwait
ds
rcrb
pop
jl
orl
bound
jae
jge
test
repz
mov
and
sbb
jl
sar
in
ret
jns
popa
in
sub
jb
lods
data16
cmp
movsl
mov
mov
popf
popf
divl
or
sbb
aas
xlat
sbb
inc
sbb
mov
cmp
sbbb
dec
nop
frstor
enter
ljmp
cmp
and
cmpsb
and
push
fcmovb
mov
add
cmp
jne
neg
xchg
js
mov
ret
xor
sarb
xchg
jo
std
or
fdivl
jbe,pn
roll
movzwl
jg
jmp
addr16
les
movsb
sub
pop
mov
inc
cmc
nop
imul
sahf
cmp
mov
cmpsl
mov
or
pop
mov
sub
int
dec
in
stc
mov
or
ret
popf
jno
xor
cs
xchg
jo
push
inc
adc
dec
popa
pop
pop
and
test
es
ficomps
out
pop
sub
add
sti
test
or
in
fucomip
mov
lods
sub
out
mov
popf
andl
lock
nop
mov
sbb
rorb
mov
jae
fwait
int3
sub
outsb
outsl
aaa
ss
cmp
mov
xlat
sbb
xchg
push
cli
test
xor
inc
mov
movsl
fisubrl
fisubl
ds
mov
jno
xchg
iret
lcall
lahf
mov
mov
inc
mov
inc
shll
aas
lock
fldenv
pop
xchg
cld
xchg
xchg
and
aas
dec
clc
adc
imul
jae
and
call
xchg
leave
test
mov
sti
fldl
mov
iret
mov
aaa
mov
test
push
outsl
arpl
add
or
xor
in
ret
adc
xchg
and
xchg
jmp
arpl
cmp
aaa
inc
aas
sub
mov
sbb
imul
push
dec
push
inc
out
dec
repnz
sbb
sbb
dec
sbb
xchg
mov
dec
push
push
lcall
adc
repnz
call
jnp
sub
pop
aad
test
jns
mov
imul
call
dec
imul
mov
imul
cmp
and
out
sbb
inc
sbb
adc
or
test
ljmp
stos
pop
data16
icebp
addr16
adc
xchg
in
xor
dec
insb
add
xchg
test
jl
sti
je
cld
imul
dec
mov
push
andl
cmp
push
pop
mov
bound
lea
cs
jge
idiv
ja
push
and
faddl
jmp
sar
addl
sarl
lds
and
push
jo
out
lcall
cld
xchg
pop
icebp
jbe
push
pop
mov
arpl
xchg
out
test
sub
jae
xchg
repnz
loope
sub
pop
xor
cmp
dec
jo
push
icebp
lret
cmp
insb
in
sub
mov
repz
jecxz
jge
inc
hlt
or
jns
cmc
adc
cli
shlb
or
daa
daa
pop
add
pushf
mov
lret
fisubs
sbb
sbb
and
and
dec
cs
sub
add
pop
int
mov
mov
inc
pop
sbb
test
lahf
ja
aam
fstl
inc
and
es
push
jl
xchg
es
sbb
xor
sub
inc
mov
ds
repz
out
xor
adc
je
fwait
jp
bound
iret
les
inc
mov
mov
mov
ja
lods
gs
or
add
mov
popa
dec
jnp
jg
and
adc
dec
je
in
cmpsb
pop
imul
sub
mov
mov
pop
rcrl
loope
test
stc
xchg
jg
xchg
jae
les
lahf
xchg
popf
int3
fcmovnu
mov
addb
pop
xlat
mov
mov
sub
cwtl
adc
int
xchg
jns
negb
mov
shrl
test
push
mov
cmp
push
sub
cmp
dec
mov
std
xor
pop
jno
daa
je
ds
or
pushf
push
xchg
fs
frstor
aaa
inc
lcall
out
adc
out
sbb
sub
mov
adc
push
ret
shlb
pop
cmc
lock
push
cmp
mov
imul
adc
stos
movsb
adc
pop
push
mov
xlat
fnstenv
lret
xor
dec
cld
outsb
imul
dec
mov
out
sub
inc
out
cmp
jo
sarb
add
inc
inc
out
sbb
rol
adc
dec
mov
fmull
or
push
sbb
pop
icebp
sbb
push
leave
and
push
call
cmp
xchg
sbb
pop
xor
loop
sub
cmpsb
adc
jl
mov
add
jmp
fs
mov
mov
clc
ficoms
rclb
psllw
jge
cmp
push
push
pop
mov
icebp
inc
rorb
stos
scas
cwtl
fs
daa
add
pop
jnp
xor
xor
inc
fidivl
sub
cmpsb
ja
cli
pop
sti
fs
sbb
je
insl
pop
xchg
stos
subb
shlb
mov
iret
fldl
cs
movsl
xor
out
pop
mov
mov
test
xchg
xor
ss
test
andl
mov
shrb
add
stos
hlt
ret
test
arpl
jg
adc
mov
sub
push
dec
xor
addr16
scas
xor
jecxz
push
inc
pop
sbb
pop
rcll
pop
dec
out
repnz
dec
es
xor
shlb
mov
mov
mov
lcall
mov
inc
cltd
add
imul
lods
mov
lret
or
xor
lock
dec
lods
inc
sbb
push
nop
cmpsb
data16
xlat
test
fmul
xchg
divl
cmpsb
adc
lods
pop
pop
hlt
sbb
arpl
mov
jecxz
outsb
sub
lcall
ja
and
xchg
lea
or
loopne
scas
sarb
mov
sbb
pop
dec
les
cli
inc
pop
pop
mov
mov
jg
mov
pop
inc
sbb
movsl
aam
movsl
pop
mov
aas
adc
loopne
jae
fimull
shlb
mov
cmpsb
xchg
or
and
imul
inc
pop
mov
and
or
mov
ljmp
in
push
mov
push
jbe
add
gs
mov
pop
insl
insl
xor
aas
push
pop
push
mov
in
mov
jno
xor
pop
lea
adc
push
sub
ds
sbb
aad
mov
test
cli
cmp
ljmp
mov
and
sub
xchg
push
xchg
ljmp
jp
cwtl
loopne
gs
mov
jne
leave
sub
lds
or
cltd
dec
push
xchg
jno
mov
jl
dec
mov
push
pop
enter
cmp
test
cltd
and
fidivl
aas
mov
dec
dec
jge
mov
cwtl
dec
pop
mov
mov
add
gs
loope
xor
insb
xchg
and
add
lret
ret
js
jae
cwtl
dec
ljmp
adcb
mull
sub
adc
idivl
mov
push
clc
shll
imul
fwait
ret
movsb
or
pop
sbb
jge
cmp
ljmp
call
dec
cmp
or
xchg
jmp
es
cli
sbb
cmpsl
push
sbb
cs
enter
sti
mov
push
jmp
and
std
or
pop
push
mov
or
or
notb
sub
push
cwtl
push
push
mov
and
sbb
lods
jl
jge
mov
push
insb
cmp
and
rcr
insl
sbb
in
sub
xchg
push
push
test
arpl
cli
push
mov
pop
mov
fcoms
xlat
jnp
pop
mov
stos
cltd
mov
mov
mov
mov
and
xchg
sub
loop
js,pt
sbb
notl
ret
clc
xor
int3
add
add
mov
push
loope
fldenv
rorl
ljmp
add
out
in
roll
jb
rcl
into
push
sub
dec
adc
xchg
mov
jns
mov
loope
xchg
std
out
loope
push
pop
call
adc
sbb
sbb
xor
idiv
ret
mov
adc
xchg
sub
arpl
in
lods
sub
dec
rclb
adc
pop
dec
lret
je
mov
xlat
aad
outsl
out
rcr
in
cmp
xchg
sbb
mov
rolb
lods
insl
push
and
repz
ljmp
mov
jp
cmp
jp
push
mov
pop
adc
mov
lds
imul
xor
mov
aad
dec
in
std
xchg
div
adc
cmp
push
jae
fstps
enter
and
cs
test
add
orb
mov
stos
repnz
leave
dec
jecxz
jp
or
into
mov
aam
fs
pop
cmp
and
dec
add
jle
in
mov
sbb
stc
dec
jne
div
pop
and
sbb
push
xor
mov
aad
and
aaa
sbbl
movsb
mov
mov
jne
lcall
hlt
sahf
insb
push
jnp
mov
xchg
xchg
cld
pop
sbb
mov
es
jmp
into
sahf
sbb
inc
inc
cmp
stos
xor
std
xlat
inc
jmp
inc
cmp
adcb
fisubrl
sarl
inc
in
push
push
lcall
dec
push
add
xor
pop
or
xor
mov
shl
mov
test
dec
fs
xchg
xor
push
sbb
scas
pusha
addr16
add
and
ror
add
sbb
sbb
add
js
pop
pop
push
insl
test
out
and
inc
push
hlt
das
dec
iret
nop
mov
xchg
adc
push
xchg
loope
push
out
les
pop
inc
push
rorl
mov
orl
rorl
ror
or
lret
cwtl
decl
jg
lock
imul
push
int
mov
sarb
in
jbe
imul
mov
mov
jnp
xor
push
mov
shrl
cltd
cwtl
jge
sti
adc
xor
lcall
dec
fdivs
clc
inc
pop
sbb
push
cmp
xor
cmp
xchg
and
out
and
jo
ljmp
nop
movsl
rolb
pop
push
fistpll
fistl
enter
xlat
das
inc
js
push
jnp
jne
or
xchg
lods
into
and
addb
fidivrl
adc
xor
dec
adcl
fcoml
mov
adc
inc
fiaddl
jno
adc
sbb
sbb
repz
gs
cmpb
mov
int3
pop
mov
mov
xlat
mov
jbe
cmpsl
sub
cltd
xlat
push
popf
inc
lea
sbb
lds
jno
mov
arpl
adc
in
mov
call
les
mov
add
add
sub
mov
sbbb
add
push
adc
cmpsl
test
movsb
outsb
mov
arpl
and
mov
sub
rcl
inc
push
mov
push
enter
sbb
jne
icebp
cmpsb
or
mov
shll
sarb
or
shlb
je
jnp
and
jns
pop
dec
insb
pop
sbb
imul
adc
or
inc
adc
push
push
mov
ret
or
xchg
enter
in
test
iret
fcmovu
sbb
leave
cwtl
xlat
cmp
dec
cmp
add
mov
xchg
out
or
ja
test
cmc
sub
mov
mov
mov
push
fnstenv
aas
movl
mov
sub
jo
pop
sbb
sbb
movsb
push
inc
es
xchg
movsb
inc
rcrb
inc
cli
popa
out
xchg
arpl
popf
movsb
stos
aas
push
and
xchg
cmp
xlat
stos
iret
test
adc
push
js
xor
shrb
sub
aas
jecxz
jne
pop
enter
mov
aas
jecxz
jns
cmc
sub
sub
test
mov
leave
cs
and
add
mov
jle
push
push
ret
stc
sbb
push
sbb
inc
outsb
inc
ror
xchg
push
pop
rcll
cmpsb
dec
cltd
mov
inc
rorl
cmc
call
addr16
lret
dec
mov
ja
rorl
nop
xor
mov
int
sbb
lret
mov
out
add
xchg
jg
sub
adc
cmc
mov
cmp
mov
lods
push
es
mov
or
mov
add
mov
nop
rcrl
push
les
lcall
mov
aas
jmp
xchg
dec
outsb
rcrl
xor
fs
imul
inc
or
mov
dec
test
add
cs
shl
push
dec
arpl
ljmp
enter
mov
push
mov
or
xchg
inc
mov
dec
pop
rclb
dec
fcomps
dec
add
popf
push
out
push
xor
cmp
jmp
add
shlb
dec
cmpsl
push
xor
and
js
fwait
or
sbb
mov
lods
jb
pop
xchg
and
jmp
cmp
ss
xor
mov
cmpsb
mov
mov
es
xorb
mov
andl
mov
fwait
mov
add
pop
dec
or
inc
mov
fstpl
inc
sbb
mov
cltd
inc
dec
push
rorb
pop
or
insb
insl
jb
mov
into
cmc
leave
mov
or
pop
popw
mov
sbb
jnp
pop
sub
inc
and
movsb
nop
sbb
inc
adc
pop
mov
cmc
ret
xchg
xchg
in
and
sub
std
add
test
pushf
or
mov
mull
js
mov
sub
lcall
mov
mov
jno,pn
or
outsb
xor
daa
es
cmp
in
sub
adc
mov
push
jns
iret
or
cmc
mov
pop
std
pusha
inc
or
push
cmp
or
repnz
iret
jp
sub
inc
xchg
int3
leave
sbb
insb
insl
jg
lcall
mov
pop
jecxz
pop
ret
dec
add
fidivrs
lcall
and
jmp
dec
push
lahf
enter
inc
cmp
mov
push
push
pop
xchg
out
push
pusha
lea
pop
insl
jae
hlt
xchg
ja
and
das
mov
inc
bound
or
inc
js
mov
inc
test
xlat
ret
inc
jl
or
inc
repz
dec
div
push
not
inc
sub
adc
mov
xchg
rcr
xchg
lcall
aam
jmp
mov
pop
repnz
lock
sub
sahf
mov
mov
pop
mov
and
mov
add
pushf
ret
jb
or
mov
pop
in
fcoml
cmp
imul
jae
xchg
rcll
ret
hlt
xchg
jo
gs
je
mov
cmpsb
enter
mov
in
mov
loop
sub
mov
jbe
xchg
add
and
bound
cmc
jno
and
or
jmp
mov
cmp
test
sub
pop
mov
outsl
sbb
mov
mov
outsl
loopne
loop
mov
push
fsubrs
add
divb
pushf
xchg
popf
add
mov
mov
nop
test
mov
imul
shl
in
ds
fwait
out
repnz
inc
add
jmp
adc
sbb
inc
fisttps
out
cs
mov
mov
cmp
lods
lret
repnz
call
jmp
sbb
imul
aam
fidivl
or
mov
data16
in
lock
sub
fsts
mov
xchg
std
int
pushf
mov
jae
mov
lea
adc
xchg
data16
jnp
mov
fwait
sbb
dec
call
addb
arpl
lahf
xor
test
in
icebp
divb
push
fisubs
jne
ds
insb
sti
sub
push
cltd
mov
dec
popa
cmpsb
or
das
mov
xor
mov
mov
sbb
scas
sti
pop
test
int3
inc
outsl
jbe
push
in
andb
pushf
push
push
fstpt
pop
jno
ret
jnp
push
fsubr
xchg
aas
iret
fisubrs
outsb
cs
les
push
jo
adc
scas
lret
movsl
fsubrs
rorl
push
movsl
iret
mov
cltd
cmovge
test
fs
mov
and
ficompl
stos
cmp
or
out
aad
insb
int3
cmp
cmpsb
pop
mov
addr16
mov
imul
add
push
lret
test
fsubs
mov
push
cmpsl
stc
push
ffreep
or
mov
int
mov
outsb
test
andl
bound
in
mov
sbb
dec
cwtl
aad
aas
push
sbb
clc
jb
mov
push
add
xor
and
imul
icebp
lock
dec
lods
xchg
or
sub
pop
call
popf
insl
mov
jns
lahf
xchg
aas
sahf
lock
jl
sti
sbb
dec
xor
jl
fsubrs
repnz
je
out
mov
xor
sbb
inc
ds
cmp
adc
cmp
lret
fmuls
nop
mov
rolb
mov
add
push
hlt
cmp
sub
sti
push
mov
adc
pushf
push
and
push
lods
xor
cmpsb
cmp
call
mov
data16
xor
icebp
ficoml
fcmovnbe
mov
sub
into
lcall
testb
addr16
or
xor
in
sub
jb
cld
jl
lock
les
sub
xchg
cwtl
pop
cmc
push
sbb
pusha
mov
popa
lods
pop
sub
lret
xchg
out
adc
mov
push
dec
out
jg
cmp
push
aam
imul
and
cmc
lahf
push
rcrb
push
adc
pop
pop
nop
movsl
mov
add
imul
test
sub
or
xor
ljmp
sub
jo
mov
adc
inc
add
and
mov
mov
dec
mov
jg
sahf
dec
arpl
fidivrl
adc
test
stos
adc
add
add
xchg
xchg
movsb
xchg
and
lahf
mov
inc
xchg
pop
sub
addr16
sbb
add
jno
jb
movsb
pop
into
add
jnp
xor
add
jge
mov
je
fs
jo
cwtl
mov
je
dec
xor
push
inc
jecxz
sub
lods
scas
sbb
out
adc
sbb
pusha
jo
push
or
mov
jne
mov
push
lahf
ljmp
rolb
leave
sbb
arpl
aaa
and
xchg
pop
pop
fcoms
dec
adc
add
mov
and
stos
push
aaa
jg
sbb
xor
testb
and
inc
dec
ja
nop
pop
mov
das
mov
outsl
aas
push
ljmp
pop
sarl
or
enter
mov
pusha
out
sbb
jle
lods
xor
jl
js
movsl
adc
testb
rcrl
in
xor
ds
pushl
xlat
inc
xor
call
xchg
int
test
and
sahf
jmp
pushf
adc
mov
lret
cld
push
push
stos
out
cmpb
aad
push
inc
cmp
pop
xchg
popf
stos
iret
in
std
out
lret
adc
je
sub
js
shlb
xor
mov
jbe
repnz
fdivr
jp
push
leave
les
cmp
js
jbe
push
lods
cmp
repnz
sarl
inc
dec
mov
test
movsl
sub
adc
mov
dec
add
and
jmp
dec
in
mov
imulb
mov
xchg
movsb
xchg
sti
gs
mov
mov
push
push
in
shll
sub
dec
mov
cld
popf
out
adc
mov
iret
inc
xchg
inc
jg
xor
fchs
and
xor
popf
cmp
repz
daa
xchg
stos
jno
and
xor
xor
jo
out
repz
cmpsb
in
mov
daa
push
jmp
mov
dec
or
mov
dec
les
ret
sub
and
enter
loope
add
sub
repnz
movsl
cs
movb
xchg
mov
xlat
stc
dec
pop
dec
rorl
jb
iret
hlt
or
cmpsl
fadds
pop
mov
jle
mov
or
fs
icebp
mov
fildll
outsb
fxch
push
fwait
mov
cmp
ret
jle
xor
sti
outsb
lock
idivl
push
mov
inc
js
bnd
out
notl
sub
popa
add
testb
inc
push
cmp
cmp
or
hlt
adc
or
adc
mov
aaa
sbb
jmp
les
xchg
or
hlt
fcomps
or
and
test
ljmp
jns
iret
gs
sub
jecxz
insb
sbb
rorb
stc
lret
cmp
pop
lret
sbb
or
call
jl
stos
ss
fisubrl
xchg
outsb
shll
mov
xchg
ret
outsl
push
imul
out
xchg
xor
cmp
and
cmp
xor
mov
push
movl
or
scas
jbe
add
xlat
stos
inc
dec
push
pop
icebp
pop
push
cmp
sbb
add
btc
xor
lods
lods
movsl
stos
sub
dec
mov
aam
xchg
in
push
xor
stos
push
sbb
jge
frstor
shl
lsl
push
dec
popf
test
dec
or
adc
dec
add
int3
xor
jno
mov
rclb
rorl
out
shlb
fidivrl
fdivp
stc
sub
jae
dec
addl
andl
les
mov
lea
lods
iret
adc
pop
or
mov
mov
imul
lock
mov
adc
mov
mov
add
mov
jmp
xlat
out
dec
push
mov
adc
lods
cli
mov
les
fstpt
fmull
out
mov
cmp
cmp
popf
xchg
into
sarl
aad
lea
inc
or
mov
xchg
mov
xor
jns
nop
adc
shl
add
pop
xor
and
outsb
mov
aaa
stc
and
lahf
les
mov
mov
cmp
jbe,pt
sbb
jne
pop
adc
leave
push
ljmp
cmc
lods
pop
popf
xor
dec
sub
mov
push
in
lods
insl
jmp
in
xchg
iret
sub
sbb
call
pop
loopne
push
pop
test
enter
push
hlt
aaa
add
addr16
jl
mov
xchg
jl
sbb
sub
dec
fsubrl
mov
jmp
mov
xlat
push
jmp
sbbb
stc
int
pusha
ljmp
ret
jg
pop
adc
test
mov
aad
or
insb
xor
test
rolb
jo
in
push
nop
dec
push
in
jmp
scas
mul
mov
fisubrs
out
xchg
aam
lods
pop
mov
outsl
insb
das
jo
dec
push
xlat
out
mov
xor
adc
aad
jle
pop
psubusb
add
jnp
pusha
repnz
popa
mov
cmp
imul
sbb
and
or
jns
lea
fwait
stos
ret
rclb
dec
lods
clc
mov
push
push
aam
sar
sub
lret
repz
flds
or
pop
in
cmpl
data16
pop
sub
cli
add
call
jae
cmp
es
cld
mov
lahf
adc
sub
cmp
shr
dec
push
pop
test
pmaxsw
dec
push
pop
mov
in
ret
aam
push
cld
stos
dec
push
subl
in
daa
call
mov
lods
test
imul
aam
jne
call
sub
xor
aam
xchg
mov
repnz
rolb
mov
mov
inc
or
jo
sbb
lret
sbb
stos
sti
or
js
dec
cmp
inc
fcoms
xchg
lods
adc
lods
sub
sbb
push
mov
mov
testl
std
cld
adc
jne
ja
lret
lds
ret
rcrl
xor
shlb
mov
jmp
push
outsb
jl
sub
decl
repnz
jbe
test
mov
orb
sub
mov
xor
push
inc
pop
xor
pop
int3
imull
lds
and
jp
rolb
pusha
sbb
push
pop
sbb
lods
and
and
mov
in
dec
sbb
cmp
into
ficoml
cmp
pop
dec
inc
lock
cmpsb
iret
int3
lret
adc
scas
mov
cmpsl
hlt
dec
movl
pop
out
in
fcomps
xchg
add
pop
ret
in
ds
loop
ss
leave
test
aad
subb
inc
sub
sub
es
int3
das
enter
adc
pop
mov
adcb
mov
popa
xor
jae
xor
push
push
pop
lcall
push
repnz
mov
cmp
or
and
int3
sub
mov
and
push
mov
and
in
jg
mov
das
movsl
mov
cmp
pop
sbb
dec
or
cli
add
cmp
je
icebp
mov
sub
or
mov
cmp
repnz
sub
mov
sub
fwait
insb
push
sbb
je
stc
ds
popf
or
dec
add
add
test
mov
sub
cmp
jnp
flds
bound
and
nop
stos
ja
jb
push
int3
lahf
mov
xchg
xchg
sub
fwait
cmp
mov
jge
addr16
rolb
loop
jne
push
pushf
call
in
mov
cmp
sub
jge
aam
call
inc
xorl
push
negb
jae
leave
outsl
daa
sbb
sub
mov
sarb
in
and
or
sbb
out
adc
and
or
shll
sbb
jecxz
dec
icebp
adc
jp
into
outsb
push
jmp
imul
inc
mov
push
mov
loope
loopne
pop
mov
fs
mov
rolb
cli
insl
shll
sub
testb
or
jo
push
pop
sbb
call
xchg
int
push
setno
clc
into
mov
jecxz
mov
dec
push
lock
add
in
push
mov
mov
jle
mov
cld
outsb
shll
and
lcall
adc
xor
scas
or
sahf
mov
dec
mov
xchg
sahf
sub
pop
ss
in
pop
cwtl
sub
scas
aaa
ret
and
subb
adc
cs
je
sahf
and
xor
mov
sbb
cmp
or
aas
ss
push
cmp
inc
add
and
jmp
xor
cmp
pop
scas
mov
jle
sub
adc
xor
jno
fucom
es
push
lods
leave
cld
pop
adc
pusha
cwtl
enter
andb
cmp
insl
in
movb
mov
lock
or
mov
in
jns
aas
jo
stos
xor
enter
xlat
lea
test
out
push
jne
imul
push
inc
and
xor
jmp
sub
cmp
cmp
rol
mov
jecxz
xor
stos
popa
lods
and
xchg
add
into
sbb
lods
dec
adc
nop
sarb
sub
dec
adc
out
daa
mov
push
and
dec
jne
in
adc
xorl
fnstcw
movsb
aas
add
aas
lcall
lcall
out
stos
call
push
repz
incl
mov
lahf
push
out
push
fisubrs
icebp
inc
and
mov
js
sar
bound
loopne
divb
xor
shlb
dec
adc
dec
pusha
xor
xor
stc
and
inc
sub
ficompl
sahf
out
test
lds
idivl
iret
cwtl
int
call
in
sub
xchg
xor
jno
inc
or
fs
fstpt
dec
into
inc
daa
dec
push
adc
mov
fs
or
xor
cmp
adc
stos
adcb
outsl
xchg
pop
push
xchg
lods
xor
cmp
and
fbstp
repnz
inc
icebp
out
xchg
rcr
in
outsl
enter
repz
cmpsl
pushf
cli
xor
int
stc
fdivrp
iret
shrl
jle
mov
out
mov
sar
les
icebp
ret
andl
stos
in
mov
ds
cli
jae
push
in
in
repnz
inc
jo
loope
rorl
xor
mov
iret
aas
adc
push
sbb
repnz
das
add
nop
sbb
mov
push
inc
inc
push
imul
add
cli
scas
hlt
repz
pop
scas
test
scas
mov
push
cmp
jp
push
stos
xor
scas
fcmovu
and
scas
in
and
out
jbe
sbb
mov
jno
jge
adc
ds
aaa
fcomps
pop
bound
shlb
inc
push
lcall
ja
jg
orl
jp
push
mov
lahf
jge
fisubs
cs
iret
sub
or
inc
imul
andb
das
cmpl
fsubrs
hlt
push
std
or
out
jl
scas
cmp
mov
mov
in
insb
mov
inc
inc
jp
das
clc
or
inc
mov
cmp
scas
mov
pop
outsb
inc
icebp
push
div
pusha
adc
insl
push
rcll
cmp
pop
add
add
fisubrl
cmp
dec
jmp
mov
add
jmp
push
outsb
mov
and
mov
cmc
add
icebp
or
outsb
fldl
pop
mov
pushf
rclb
push
repnz
jo
iret
push
and
out
cmp
sub
mov
fistpl
aaa
stos
imul
in
loop
mov
fcmovb
daa
jb
push
or
es
add
push
dec
fs
movsl
push
fisttpl
test
inc
fdiv
jp
jl
and
jbe
scas
adc
cmpsl
testb
mov
cld
and
pop
mov
inc
lods
ljmp
lret
insb
dec
adc
test
jo,pn
and
in
test
mov
lock
in
dec
xchg
sub
mov
pop
lods
shrb
mov
cmp
pushf
scas
and
push
sbb
and
inc
mov
insl
xchg
lock
lcall
sub
mov
es
lcall
scas
fwait
aaa
cmp
rcr
dec
cmp
sahf
mov
lret
add
bound
je
daa
xchg
sarb
push
jno
add
inc
rolb
mov
movsl
adc
push
addb
mov
cli
jb
test
and
push
mov
pop
sti
sub
mov
enter
movsb
jle
jnp
ja
iret
jbe
pop
movsb
out
push
mov
cmp
lock
push
out
jmp
je
push
push
or
rolb
sub
aam
push
scas
loope
lea
adc
and
pop
enter
xchg
pushf
ret
push
or
inc
cmp
or
orb
lds
sbb
xchg
mov
stc
push
rcll
xor
adc
adc
jns
fisubl
mov
adc
inc
outsl
jmp
mov
lods
or
loop
pop
push
dec
cld
pusha
aaa
sbb
loopne
and
inc
aas
in
jno
jbe
cli
orb
or
inc
or
iret
inc
mov
jo
mov
call
inc
xor
inc
aas
lcall
jg
mov
mov
insb
ss
cmpl
rdtsc
push
out
mov
fcompl
mov
adc
cmp
jecxz
stc
ljmp
pop
adc
sti
jne
jle
pop
sub
pop
dec
mov
adc
leave
cmp
out
cmp
xchg
sub
xchg
xchg
inc
fcoml
rcrl
xchg
push
cmpsl
loop
jge
loope
gs
and
sbb
sub
xlat
std
adc
loopne
leave
xor
pop
fcoml
pop
sub
xchg
scas
insb
jmp
cmp
jno
sahf
sarb
cmp
cmp
inc
out
add
jg
cmp
hlt
push
push
mov
xor
dec
test
dec
repnz
inc
iret
inc
dec
imul
in
stc
add
jmp
outsl
rcll
push
inc
jae
sti
mov
xor
add
pop
cmp
inc
jnp
lret
and
jo
in
je
lods
out
pusha
add
jne
out
pop
pop
fadds
das
cmc
mov
fnstsw
in
stc
xorb
cmp
jns
sub
inc
fstpt
ret
out
movntq
jp
loopne
xor
xchg
add
and
sub
fldcw
ficomps
sub
xor
imul
adc
push
cwtl
stos
add
aam
lret
cltd
and
push
dec
sub
pop
ret
mov
mov
push
mov
add
in
addb
hlt
mov
xor
sub
inc
notl
in
mov
fildl
inc
mov
cmp
jmp
jnp
dec
mov
push
pushf
jae
out
adc
inc
cwtl
sbb
xchg
jmp
pop
mov
mov
lea
pop
cmp
inc
in
imul
and
in
sub
inc
std
jecxz
pushf
mov
sbb
pop
shrl
mov
adc
rcll
std
lahf
pop
inc
orb
movsb
das
imul
jp
sbb
stc
jno
repz
shlb
xchg
add
faddl
lcall
jecxz
shrl
lock
xor
pop
pop
dec
lods
jns
xchg
add
pop
dec
dec
aas
jns
shrl
jne
or
sub
sub
les
jb
xchg
dec
pop
je
dec
jmp
lcall
dec
out
pop
ret
push
push
or
dec
inc
push
in
push
popa
hlt
adc
xorl
movsb
daa
cmp
sbb
mov
mov
push
cwtl
pop
lret
pop
mov
inc
or
rorb
out
adc
mov
add
xor
iret
fildll
mov
push
mov
xlat
jb
mov
jo
daa
int
fwait
mov
aas
fisttps
mov
lret
xchg
repnz
pop
add
adc
mulb
jno
dec
add
cmp
fsts
ret
pop
cmp
mov
mov
movsl
hlt
xor
add
jp
mov
in
fistpl
push
add
add
or
inc
out
and
mov
inc
or
xchg
in
xchg
mov
scas
imul
in
inc
jge
arpl
int
and
xchg
stos
mov
pusha
movsl
inc
push
adc
adc
pop
std
scas
mov
popf
subb
xchg
int
cmp
push
in
mov
xor
xor
mov
adc
lods
and
mov
int
cwtl
inc
sub
jmp
and
or
sbb
faddp
mov
inc
ficompl
ret
stc
mov
inc
bound
or
push
mov
lret
outsl
cmc
jg
int3
js
inc
dec
adc
sarb
mov
or
dec
fistpll
mov
push
jle
repnz
xchg
inc
mov
popa
mov
call
mov
fisubl
dec
mov
pushf
outsl
pop
xor
sbb
xor
inc
xchg
xchg
clc
lret
insb
xchg
je
sub
ret
negl
cmp
lcall
data16
adc
jge
and
in
in
cmp
fwait
orb
fistpll
lret
mov
push
lcall
pop
xchg
sbb
int3
ret
pop
adcl
aaa
cmp
jp,pt
insb
jg
cli
movsl
ljmp
sub
mov
or
in
test
sbb
add
and
xchg
and
jne
int3
movsb
insl
hlt
lods
adc
push
ja
push
push
jae
cmp
enter
dec
dec
in
inc
dec
mov
pop
push
sub
lods
hlt
dec
icebp
adcl
es
push
push
rcrb
out
movsb
mov
ja
int3
js
lret
shrb
or
jo
mov
aad
stos
sub
pop
int3
daa
xor
push
lods
in
cli
sbb
adcl
and
add
addl
and
mov
or
mov
push
xchg
pop
hlt
pop
mov
rorl
xor
or
mov
rolb
fmul
xchg
ljmp
sub
mov
inc
pusha
or
movsl
and
nop
or
sbb
push
jns
push
push
push
mov
xor
xor
movsb
pusha
adc
clc
xor
fistpll
pop
and
xchg
pusha
and
out
pop
jnp
lea
mul
mov
dec
por
add
lock
cmp
aaa
sub
mov
out
mov
pop
or
xchg
aam
bound
pop
cmp
das
loope
xchg
je,pn
or
mov
pop
mov
faddl
adc
cmp
push
xchg
cmpsl
fildll
scas
bnd
pop
dec
mov
test
jbe
mov
xchg
sbb
add
push
sbb
in
out
jne
adc
cs
fdivs
outsl
lods
hlt
mov
jle
mov
lods
int
pop
mov
mov
adc
xchg
xor
ss
mov
addl
dec
popf
pop
push
mov
jnp
hlt
nop
add
mov
hlt
cmp
xchg
stc
rcrb
vpunpcklqdq
mov
pop
in
sbbb
jmp
mov
ret
fisttpl
mov
mov
cmpsl
xchg
push
faddp
sbb
add
jnp
dec
int3
repnz
dec
cld
enter
mov
add
lahf
call
bound
mov
xor
rcl
call
dec
cli
inc
loope
sbb
xchg
mov
mov
lret
in
pop
arpl
mov
pop
imul
pop
test
push
outsl
xchg
and
and
mov
shll
data16
dec
xchg
aas
lods
dec
outsl
and
mov
test
push
dec
sbb
cmp
out
cmpsb
outsb
pushf
addr16
fistl
or
push
and
aas
loope
in
lea
adc
mov
push
mov
xlat
jmp
dec
or
mov
xchg
cmp
icebp
mov
add
push
and
pop
and
loop
sbb
pop
xchg
imul
icebp
xchg
cmp
or
mov
int3
cmc
xor
adc
xchg
lret
sbb
xor
inc
cmp
xchg
lret
arpl
dec
jg
repz
and
int
xchg
cld
push
mov
sbb
cmc
js
js
mov
add
mov
add
cmp
push
xchg
dec
mov
jmp
push
xor
jnp
addl
lock
lock
popf
mov
sbb
call
adc
cmp
mov
test
int3
repnz
fimuls
mov
push
das
jnp
mov
not
or
int
push
loop
outsb
mov
aas
adc
cwtl
je
fbld
in
popa
xchg
mov
adc
push
inc
int3
mov
popa
loop
sbb
and
or
pop
test
dec
cli
and
in
lock
xchg
mov
popl
and
jnp
testl
outsl
cmp
cmpl
cwtl
popf
lods
rorl
fs
inc
std
jecxz
adc
xchg
mov
ljmp
les
andl
cli
xchg
push
xchg
push
mov
invd
jbe
mov
fistpl
leave
mov
sub
xchg
pop
dec
popf
shrb
popf
imul
popa
loope
mov
push
imull
hlt
jp
mov
loop
sbb
jne
nop
jl
das
pop
jmp
enter
xchg
sbb
pop
mov
and
jo
daa
cwtl
or
sub
outsb
in
jecxz
les
push
sub
iret
xchg
xchg
push
bound
loopne
xchg
test
aaa
addr16
adc
sbb
mov
test
fimull
dec
push
jns
sub
pop
lea
call
mov
push
sarb
jns
adc
lret
mov
mov
jg
fwait
ljmp
sbb
in
insl
mov
cmp
andb
xchg
lahf
or
shrb
ror
imul
adc
mov
sub
adc
jne
clc
xchg
in
adc
repz
faddp
adc
adc
mov
push
sti
mov
pop
inc
and
mov
je
push
loopne
daa
inc
dec
mov
int
idivl
aas
mov
out
inc
sahf
and
xchg
or
xchg
xchg
aad
aad
and
lds
xchg
in
adc
mov
ficoml
in
mov
inc
inc
into
mov
adc
mov
lods
je
push
adc
out
lods
mov
dec
pop
outsb
mov
pusha
icebp
addl
dec
lods
ds
jo
pop
mov
in
pop
mov
dec
dec
lods
and
mov
test
mov
jae
or
nop
in
sub
push
call
arpl
and
ljmp
xchg
sub
pop
sbb
ret
add
out
movsl
stos
outsb
fistpl
mov
cmp
rolb
mov
leave
enter
add
mov
xor
shrb
and
std
aaa
pusha
fnstsw
pop
pop
add
pop
xchg
mov
mov
xor
ds
pop
insl
jmp
in
clc
push
jb
pop
inc
nop
mov
push
aaa
out
cmpsb
js
dec
mov
out
mov
sbb
out
mov
push
cwtl
cltd
sbb
aam
and
inc
xor
adc
insb
popa
ficoms
scas
pop
mov
lahf
dec
push
jg
in
stos
add
push
mov
and
cmp
mov
or
push
clc
xchg
popf
push
jbe
push
add
jmp
fstpl
pusha
lds
popf
jl
sti
mov
mov
movsl
xor
std
je
shrl
mov
push
mov
fidivl
je
in
lds
or
stos
cwtl
mov
adc
adc
xor
inc
push
mov
aas
lret
mov
fcoml
jmp
inc
js
mov
rcll
rorb
mov
cmp
rorb
shrb
outsl
mov
scas
dec
add
cli
xlat
subb
mov
pop
dec
scas
add
repnz
fwait
mov
sub
sub
xor
pop
xchg
adc
leave
cmp
out
jae
cli
push
mov
jbe
bound
aaa
push
pop
mov
mov
dec
dec
mov
rclb
mov
mov
pop
pop
cmpsl
mov
inc
push
fwait
push
insb
in
and
fldl
mov
pop
ss
mov
inc
jle
int
insb
lret
gs
clc
in
cmp
mulb
shll
jne
mov
mov
mov
push
int3
sbb
scas
push
shr
cmp
std
pop
sbb
cs
das
adc
vorps
or
xor
mov
orl
or
int
mov
dec
xor
lods
mov
dec
push
xchg
repz
test
cmp
sub
insb
cltd
mov
lea
pop
sub
pop
xchg
adc
in
push
in
mov
or
fs
mov
xchg
adc
mov
sub
ja
and
mov
fidivl
cmp
sbb
lret
repz
nop
sbb
mov
das
pusha
fs
fistpl
sbb
xor
xchg
sbb
ret
sub
xchg
mov
les
cmp
dec
jp
or
add
jns
fildl
jne
rclb
mov
pop
cltd
dec
fsubr
lods
mov
test
sbb
or
movsb
xchg
ret
push
in
loop
mov
lret
bnd
mov
adc
popf
and
cs
insl
ror
js
adcl
lods
icebp
sub
std
add
fnsave
jb
adc
cmp
imul
clc
out
and
mov
mov
mov
shr
out
pop
or
or
push
add
add
scas
jp
mov
in
leave
push
adc
mov
add
adc
sub
jmp
or
cmp
insb
adc
jne
adc
test
fldl
mov
pushf
jg
leave
orb
adc
mov
adc
testb
ret
ljmp
or
rol
ja
jbe
pop
mov
jae
sarb
aas
test
sbb
lea
or
repnz
fstpl
insb
sti
fdivrs
jle
es
xchg
gs
add
or
pop
test
mov
jecxz
and
js
fildl
repnz
outsb
iret
and
test
sahf
popf
and
add
adc
pop
add
notl
mov
loop
stc
adc
mov
leave
fldcw
popa
int3
push
mov
jle
and
xchg
hlt
cs
ret
mov
and
push
jl
mov
mov
fxch
push
or
lea
sub
mov
jp
jnp
pop
stc
loop
fstpl
fisubl
xorb
sbb
insb
and
push
scas
scas
mov
jne
inc
mov
fstps
jo
pop
loope
sub
in
test
lcall
outsl
mov
jo
pop
or
lret
mov
lea
cmp
scas
cmpsb
divl
lret
sarb
gs
inc
icebp
cli
out
dec
inc
dec
int3
out
add
gs
cmpsb
push
iret
mov
adc
sbb
jb
test
aad
ja
int3
and
sbb
sub
stc
cmp
sbb
jo
add
insb
sbb
lock
in
push
sarb
pop
or
leave
fidivrs
adc
rcll
mov
insb
ss
inc
cmp
mov
dec
mov
imulb
sti
movsb
jb
jle
mov
add
cs
ret
add
and
scas
icebp
out
xchg
lahf
jg
enter
push
lcall
sbbl
add
pop
pop
mov
ja
xor
test
sti
stos
frstor
sbb
adc
add
iret
add
lea
popf
adc
push
sahf
sbb
adc
jp
sarl
in
test
adc
idivl
and
or
push
rorb
push
mov
cmpsb
inc
rorl
inc
gs
ficomps
adcl
pop
inc
mov
sub
jmp
jg
push
ljmp
ficomps
sub
data16
jle
test
rcrl
mov
bnd
and
les
push
push
bound
add
lahf
dec
xchg
sbb
test
into
jno
jp
pop
aaa
je
inc
push
cmpl
add
mov
adc
jae
inc
inc
mov
push
subb
movsl
shrb
push
sbb
adc
and
sbb
mov
clc
out
dec
and
cmp
inc
lea
push
sbb
and
insb
idivb
iret
xchg
mov
xchg
test
call
push
jb
cwtl
sbb
pop
mov
fidivrs
sbb
jb
lea
in
sbb
pop
repz
pop
fcmovnu
adcl
inc
orps
adc
orl
jp
inc
push
add
dec
popl
push
shrl
hlt
mov
jae
cld
add
lds
adc
jns
mov
mov
push
inc
repnz
or
mov
data16
sti
mov
pop
jp
movsb
enter
adc
or
cwtl
push
lea
mov
adc
jg
mov
inc
cmp
ljmp
inc
aaa
jae
in
push
lahf
cmpsb
dec
test
mov
and
jb
jge
rep
fstpl
cld
adc
popf
jbe
aas
dec
pop
ja
xchg
ja
lret
pop
mov
daa
and
loope
xor
cmp
dec
xchg
dec
cmp
push
inc
movsb
dec
loope
push
or
pop
xchg
push
repnz
inc
and
les
mov
jg
icebp
addr16
xor
shlb
sub
lds
pop
cwtl
lock
dec
xchg
hlt
mov
dec
pop
push
ficoml
sahf
lods
push
fstpt
and
hlt
in
imul
pop
daa
cmp
in
ds
xor
pop
movsb
mov
sub
and
test
adc
movsb
popf
xchg
push
xchg
or
outsb
mov
dec
jno
inc
addr16
push
in
sub
das
lods
adc
add
xchg
cs
mov
jecxz
stc
push
pop
addr16
xchg
sbb
mov
inc
sbb
into
stos
mov
mov
or
lock
outsl
or
outsl
mov
aaa
sarb
movsl
mov
cmp
fists
loope
jns
or
or
cs
cwtl
imul
lock
movsl
xchg
outsl
jp
mov
mov
imul
test
stc
jns
cmc
outsb
leave
jl
shrb
dec
ret
push
dec
lds
out
dec
mov
movsl
mov
out
data16
mov
mov
sarb
inc
lds
push
xor
sbb
je
push
out
scas
push
jp
or
dec
mov
repnz
inc
add
jnp
jle
enter
add
and
repz
pop
ljmp
aam
ret
push
rcrb
jmp
ljmp
push
addr16
movsl
movsl
mov
fs
lahf
push
mov
mov
pushf
pop
data16
and
dec
push
movsl
stos
sub
jge
clc
xchg
loope
cmp
stos
or
mov
jl
lods
lea
jl
sub
std
jmp
xor
inc
dec
push
mov
add
dec
inc
scas
shrb
and
daa
es
aaa
mov
mov
jae
loopne
cmp
pop
test
adc
sub
iret
mov
fisttpl
xchg
ret
push
and
dec
xor
mov
sub
je
lock
mov
mov
es
daa
cmp
repnz
int3
lock
out
cltd
sub
fstpt
sub
popf
adc
jmp
push
ja
push
and
cmp
mov
stos
into
sbb
leave
rcr
std
sbb
fxch
mov
sub
fisttpll
fdivr
es
nop
es
cmpsl
adc
ret
adc
pop
jmp
nop
outsl
push
pop
rcrb
aaa
int3
divb
jae
in
mov
xor
add
ds
out
fwait
insb
jmp
sub
push
cmpsb
insl
dec
stos
aaa
aad
pop
notb
and
fimull
cwtl
or
addr16
mov
cmp
mov
outsl
shll
cmp
push
push
test
xchg
lahf
clc
adc
rorl
push
daa
mov
out
add
dec
js
nop
int
enter
rcll
roll
lahf
sbb
mov
pop
cmp
mov
test
mov
and
adc
mov
xor
ret
sub
jbe
xor
sub
test
sti
lcall
pop
xchg
insl
aam
jne
ficomps
roll
lods
mov
push
or
imul
mov
fwait
aaa
push
and
scas
mov
in
pop
jle
add
aad
divb
pop
cld
xor
or
and
cmp
aad
je
ds
outsl
adc
dec
add
mov
popf
adcl
mov
mov
jge
shll
mov
fptan
dec
push
clc
stos
cmc
dec
and
dec
jle
pushf
dec
lret
inc
loope
jbe
mov
cmpsb
sub
loopne
leave
mov
movsl
pop
testb
mov
notb
stc
add
mov
lock
vmovshdup
mov
insb
or
jne
and
xchg
sar
call
cmc
dec
mov
aad
sub
outsb
lmsw
pusha
cli
adc
int
js
lods
pusha
add
enter
add
out
rorl
mov
imul
into
rclb
mov
lds
mov
xlat
jns
xor
lea
loopne
pop
sbb
rcl
mov
inc
cmp
jp
jae
push
cmpl
ret
add
pop
pop
mov
lret
mov
pop
fldenv
xchg
ret
mov
or
int3
daa
add
arpl
push
jle
hlt
loope
pushf
mov
das
fucomp
push
jne
nop
je
xchg
sbbb
inc
cmp
lret
imul
adc
jge
sbb
add
cmp
push
dec
sbb
hlt
pop
cmp
inc
in
dec
xchg
je
mov
lcall
cmc
or
sub
popa
out
dec
arpl
mov
stc
outsb
lds
pmuludq
and
imul
xchg
aad
call
cmc
dec
pop
bound
add
scas
out
jae
repz
add
aam
inc
push
cmpsl
xor
insb
adc
inc
jb
or
leave
insb
add
lock
sub
or
scas
enter
mov
xchg
sub
notb
inc
test
sbb
jnp
mov
cmpsb
push
out
sbb
movsl
ds
iret
xchg
outsl
enter
pop
lock
and
inc
xchg
addl
mov
mov
pop
fisubl
mov
inc
repnz
push
xor
xor
adc
push
pop
inc
mov
pop
cli
mov
dec
and
mov
xchg
or
xchg
cmp
ret
cwtl
gs
inc
sbb
jmp
int3
mov
into
in
mov
push
sbb
decl
loopw
mov
mov
push
stos
pop
test
mov
ja
fdivl
or
and
clc
cwtl
and
add
dec
jle
aaa
fisubrs
imul
das
jo
dec
cmp
add
cmpsl
mov
sub
add
add
repz
ror
add
cmc
mov
inc
push
insl
push
movsb
pop
dec
ss
mov
mov
pop
inc
pusha
push
in
mov
adc
notb
adc
imul
adc
roll
lret
imul
dec
push
mov
mov
xor
into
push
push
pop
jb
rolb
xor
cmc
out
fstpt
mov
pop
inc
xchg
and
scas
xchg
mov
das
stos
sbb
pop
addr16
push
iret
mov
push
push
jb
add
in
aam
inc
xor
add
mov
mov
mov
adc
dec
fmull
dec
xorl
in
push
pushf
sub
out
std
cld
les
pop
inc
lods
adc
push
daa
pop
dec
pusha
mov
jecxz
or
dec
ret
cmp
loope
jne
mov
adc
xchg
pop
roll
nop
ret
sbb
aas
mov
jmp
dec
sbb
jp
es
cmp
sbb
cmp
sub
bound
jb
pop
or
mov
in
inc
xchg
pop
sbb
fcompl
xchg
notb
bnd
cld
push
lahf
fwait
dec
adc
sub
daa
stos
or
cmp
push
popa
lret
sub
int
mov
push
inc
add
cmp
cmpsl
push
jmp
sub
sar
jle
clc
fdivs
jp
push
insb
mov
mov
int3
mov
inc
sub
xchg
jecxz
or
push
push
and
mov
push
or
or
mov
and
xchg
xchg
fiadds
mov
std
rcrl
mov
mov
hlt
mov
shlb
shlb
lds
fcos
adcb
jo
xor
inc
repnz
fmull
and
daa
hlt
call
stos
adc
mov
in
les
test
popf
xchg
daa
sbb
addr16
aaa
sahf
in
cwtl
push
xor
inc
pop
popf
loopne
xor
xchg
addl
xor
or
outsb
or
mov
orl
push
js
ret
sub
shll
mov
pop
imul
out
sbb
inc
aam
mov
and
sub
or
jge
dec
mov
jle
push
divl
jp
dec
jns
shrl
mov
aaa
lahf
sbb
xchg
scas
fisttpl
jp
das
push
out
outsb
jl
cwtl
jle
push
xor
cli
outsb
std
jle
push
inc
aam
sbb
into
or
cwtl
aam
add
xchg
push
xchg
out
in
mull
popa
jb
gs
in
adc
push
shrl
cs
rclb
push
iret
sub
and
shlb
cmpsb
xor
in
mov
test
gs
int3
mov
adc
xor
sbb
push
addr16
scas
adc
nop
sub
xor
loope
fdivr
add
jae
or
push
or
jecxz
push
daa
mov
in
xchg
pusha
cmp
std
inc
mov
or
outsb
lahf
inc
inc
es
mov
sub
shll
cmpsl
je
push
or
fucomi
ljmp
dec
arpl
pop
jno
stc
sti
and
cld
jp
inc
push
hlt
ds
mov
cmc
fimull
imulb
iret
fcmovne
outsl
cmpsl
and
pusha
jbe
lcall
adcl
jp
add
xchg
push
jbe
sbb
fmuls
push
ret
inc
aaa
push
push
std
sub
ret
rcrl
push
dec
mov
and
dec
cld
fidivl
pushf
pop
dec
or
std
xchg
fmull
mov
adc
jecxz
shrl
sub
loop
xchg
adc
out
addr16
jnp
les
jecxz
xor
aam
mov
jno
jne
icebp
movsl
test
inc
and
mov
push
outsl
scas
mov
push
and
lahf
pop
adc
mov
jp
mov
mov
std
out
sub
mov
jl
xchg
fwait
imul
aaa
jne
push
ds
bound
scas
in
or
aaa
scas
pop
xchg
cmp
mov
dec
in
mov
pop
jnp
mov
lret
adc
push
aaa
jo
cwtl
mov
inc
cli
xchg
xchg
js
leave
xor
les
xchg
adc
add
das
lahf
repz
cmp
popa
xchg
xor
dec
jle
pop
lods
mov
sbb
jmp
shll
stc
and
repz
cld
pop
push
cmpsb
ret
push
movsl
and
xchg
dec
xchg
test
test
xor
mov
mov
xchg
push
pop
fisubrs
shl
scas
cmp
popa
push
push
std
sahf
push
dec
add
sub
or
xchg
add
mov
mov
adc
repnz
mov
xchg
pop
push
clc
arpl
fiaddl
xor
mov
repz
xlat
jp
mov
sub
sti
inc
pushf
fucom
cli
mov
dec
dec
loope
or
mov
inc
mov
cmp
mov
lahf
xor
in
pop
or
and
outsb
sbb
inc
sbb
add
lret
lds
lcall
out
popf
out
pushl
int
dec
nop
sub
cli
inc
insb
loope
icebp
ret
fisubs
cld
lds
iret
aas
xchg
rcl
enter
push
inc
mov
mov
in
dec
stc
jmp
dec
add
sahf
push
push
pop
dec
lret
and
xor
add
fwait
jns
fucom
cltd
or
add
andb
addr16
mov
or
insb
sbb
mov
sub
xchg
shrd
hlt
pushf
push
mov
jp
dec
imul
cltd
xor
cmc
jns
mov
imul
mov
sbb
jae
fs
es
pop
scas
icebp
pop
pop
rcll
sbb
xor
or
hlt
scas
imul
sbb
and
out
add
mov
in
sub
mov
ss
cltd
stc
push
or
and
cwtl
push
mov
je
fnstenv
test
shlb
sub
test
int3
jmp
sbb
mov
and
and
cmp
jecxz
aad
mov
outsb
popa
lds
sbb
jl
test
mov
pop
and
das
inc
frstor
xlat
or
rolb
inc
mov
push
cmpl
sahf
inc
in
xchg
outsb
xorb
xchg
dec
es
dec
adc
imul
out
jo
sbb
jmp
mov
mov
dec
inc
dec
rorb
pop
shrb
pop
shll
inc
andb
add
repz
adc
test
and
xorl
jp
into
rolb
dec
mov
add
loope
popf
or
xchg
in
sub
or
stos
popa
mov
mov
mov
xchg
mov
in
ljmp
mov
lea
cmp
jmp
lock
ret
cmp
nop
movsl
sbb
jbe
pop
out
and
popa
add
inc
xor
mov
loope
icebp
jl
xchg
push
or
push
je
dec
lea
inc
inc
fcomp
pop
push
xchg
ds
in
ret
pop
clc
cmp
jno
test
in
in
aas
push
mov
aam
scas
mov
jg
lret
rcrl
lret
cltd
cmp
jnp
xor
inc
pop
cmp
mov
insb
roll
xor
jle
stos
mov
inc
icebp
mov
js
mov
fs
lds
xchg
lahf
in
pop
or
fcoms
xor
insl
push
cwtl
mov
mov
aam
mov
scas
xchg
xlat
adc
mov
stc
push
into
fdivrs
jmp
push
sbb
cltd
jle
xor
imul
in
mov
lahf
xchg
scas
jecxz,pt
cmpsb
mov
inc
mov
mov
xchg
cwtl
push
push
sbb
int
mov
push
sub
pushf
or
jp
mov
add
outsl
fcmovbe
shl
test
decl
and
insb
jae
jns
shlb
ss
xchg
cmpsb
adc
inc
xchg
xor
clc
mov
and
lahf
sub
mulb
stos
insb
es
test
sub
xchg
lahf
or
adc
xor
adc
xchg
js
outsl
xor
push
jbe
adc
repnz
sub
mov
sbb
lret
sub
fcmovbe
cld
and
mov
xchg
mov
sarb
xchg
test
lea
lret
xchg
jnp
lret
subl
dec
jp
pop
jns
roll
imul
enter
out
cmp
decb
mov
sub
inc
add
mov
push
dec
xbegin
cmp
cmp
sbb
outsb
dec
into
or
lcall
ret
rcl
cmc
xchg
popa
rorb
aas
leave
jg
sub
popl
std
movsb
lods
xchg
ret
nop
mov
sub
xor
sti
out
test
inc
jl
test
sub
test
xchg
ror
addr16
and
fnstcw
mov
jecxz
pop
iret
inc
repz
push
out
aam
jg
mov
jge
test
loopne
lea
sbb
les
inc
enter
add
setle
push
jbe
outsl
xchg
xchg
loope,pn
xchg
iret
cmp
in
jbe
lods
dec
les
cmp
push
repz
ss
sarb
bound
js
shll
das
xchg
xchg
cmpl
dec
test
cmp
rolb
and
jmp
push
mov
mov
xchg
sbb
jle
sbb
or
xchg
mov
mov
sar
or
cmpsl
pop
push
fadd
insb
pop
repnz
xor
and
aas
pop
stos
xor
stos
mov
mov
dec
shl
int3
adc
hlt
loop
mov
xchg
cwtl
cmc
subb
data16
and
imul
les
push
cltd
mov
or
in
mov
mov
sub
push
sub
mov
push
out
sub
xlat
jno
out
jg
cmpsb
aas
rorb
cmpsl
jne
loopne
popa
pop
mov
out
cmp
mov
ja
orb
outsl
ss
scas
dec
notb
adc
mov
mov
in
int3
es
cmp
lret
fsubrs
subl
out
popf
cmp
jne
mov
ror
nop
xchg
shrb
xchg
adc
cmp
xchg
clc
mov
movsl
xchg
sbb
mov
dec
test
imul
or
fwait
add
sbb
and
mov
fwait
lea
xor
popa
sbb
ja
hlt
pusha
stc
jp
mov
pop
rcl
aam
sub
stc
xchg
ja
ljmp
les
push
xchg
in
cmpl
addr16
es
mulb
pop
sbb
pop
icebp
outsl
mov
sahf
jne
mov
inc
mov
leave
loop
dec
sbb
mov
jmp
pop
and
cmc
leave
push
in
mov
xchg
mov
insl
mov
scas
push
cmp
cmp
loope
mov
sub
inc
scas
jno
in
xor
pop
les
jnp
es
xor
xchg
push
push
mov
jge
push
fsts
scas
dec
mov
push
fwait
addr16
in
xlat
sbb
pop
push
ss
rcll
aaa
cmp
ficoms
mov
lods
test
xor
mulb
mov
xchg
mov
aam
push
cltd
mov
arpl
ljmp
insl
lea
loop
js
cli
jbe
mov
lcall
pop
pop
fs
scas
adc
adc
cmp
push
mov
fldcw
out
sti
cmp
ds
nop
xor
inc
gs
mov
cmp
fimull
dec
shlb
test
aam
test
mov
sub
imul
movsb
xchg
adc
rclb
imul
or
imulb
pop
dec
add
int3
sbb
not
xchg
movsb
cmp
inc
cmp
cmp
adcb
adc
or
arpl
scas
arpl
ret
inc
cmp
pop
lcall
iret
push
fdiv
and
ret
fcompl
xchg
outsl
cmp
xor
jl
fisubrl
jns
and
or
nop
xor
movsl
popf
pop
jl
or
enter
mov
mov
jno
xor
mov
jl
xor
jb
xchg
stos
mov
sub
sbb
pop
imul
jo
xor
adc
loop
push
and
in
push
mov
cwtl
imul
rcl
out
repnz
xlat
jnp
jbe
add
loop
adc
and
test
push
out
pop
ret
mov
dec
pop
lcall
jg
pop
xchg
js
into
sub
mov
pop
dec
jnp
jge
nop
xchg
lock
js
cmc
push
int
gs
push
xor
adc
pop
dec
repnz
pop
in
pop
test
pop
push
cli
js
mov
in
jge
add
pop
jnp
mov
push
jbe
or
int3
and
push
in
ret
es
ds
fcom
xor
fisubrl
icebp
jecxz
loopne
jge
movsb
aam
mov
xchg
adc
int3
fiadds
inc
and
jmp
les
in
sub
pusha
add
fwait
jns
icebp
push
rcrb
cltd
mov
pop
pop
inc
lret
push
ss
xchg
jp
jnp
shrb
cmp
mov
mov
adcb
adc
adc
push
pop
icebp
jg
cli
push
icebp
cmp
xchg
stos
jnp
lds
pop
mov
xchg
jl
inc
out
outsb
lods
mov
shll
lods
inc
stc
add
mov
push
les
std
out
les
stos
stos
mov
sarb
push
outsb
cld
pop
outsl
ret
push
adc
push
imull
push
and
lea
subl
imul
or
push
inc
mov
cmp
filds
rcr
pop
mov
cmp
xchg
scas
aam
dec
clc
mov
out
jae
push
jecxz
jae
cmp
push
jo
xlat
jno
scas
sbb
jb
push
mov
and
mov
rcll
push
jle
stc
xlat
sbb
or
jno
mov
shll
adc
jnp
and
or
f2xm1
adc
test
jnp
cmpsb
cmpsb
jg
cmp
das
andb
or
popf
mov
insb
cmp
je
aaa
mov
xlat
movsl
pop
pop
push
lock
add
orl
stos
jnp
dec
rorl
loop
mov
inc
xor
repz
push
pop
cmp
sbb
mov
xchg
add
jnp
je
mov
imul
js
and
push
aaa
mov
jp
movsl
sub
daa
test
jbe
popa
bound
push
xchg
dec
fsubr
mov
pop
and
cwtl
int
outsb
clc
mov
nop
ret
add
xlat
jns
mov
sbb
sahf
les
addb
sarl
cmp
mov
cmpl
xchg
fnstsw
fwait
jl
enter
mov
push
lret
addr16
xchg
mov
and
mov
out
fcmove
test
push
pop
fsubrs
push
loopne
sub
inc
ja
cmc
push
mov
fcompl
mov
rcr
pop
test
cmpsb
sub
and
mov
cmp
out
pushf
cmpl
popf
cmovo
loope
pop
je
push
jae
mov
or
xchg
push
push
enter
mov
push
repnz
cmp
mov
mov
jmp
imul
mov
add
stc
js
sbb
add
test
es
mov
mov
mov
out
mov
sarl
aam
cmp
sbb
mov
mov
pop
cmp
mov
mov
call
dec
jo
das
jp
sub
das
pop
pop
incb
or
dec
into
call
and
sub
pop
xor
cmp
rcll
adc
push
adc
insl
stos
loope
inc
and
mov
and
add
rcll
dec
fsubr
das
sub
hlt
shlb
popa
adc
ror
adc
add
dec
into
ss
scas
mov
leave
inc
add
in
cmp
notl
pop
push
loope
mov
stos
imul
call
stos
test
push
or
ret
imull
pushf
sbb
sub
lret
fisubrs
jmp
cmp
sub
pop
insl
outsl
stc
popa
pusha
and
enter
nop
mov
stc
shl
shrl
cmp
sbb
or
or
or
inc
mov
mov
mov
ret
call
mov
call
and
sti
fadds
jae
mov
ja
popf
je
lea
mov
inc
fcoml
jae
inc
cmc
push
jae
jl
aas
cs
dec
mov
fnstcw
inc
or
pop
addr16
jg
and
pop
repnz
inc
adc
test
out
in
scas
push
mov
jp
xor
stos
stc
fbstp
into
inc
push
xlat
roll
push
lret
dec
stos
les
jmp
cmc
int
enter
lcall
sarl
aaa
jae
enter
in
cmpsl
aad
mov
xor
arpl
jo
mov
lret
dec
adc
rorl
adc
xchg
push
data16
dec
iret
pop
mov
iret
sub
inc
cmp
test
loopne
mov
or
add
adc
aaa
add
aad
sti
add
mov
mov
add
xchg
ficoml
cmp
addb
fdivrp
popa
outsb
xchg
test
inc
or
orl
test
mov
mov
iret
test
pop
sbbb
cmpsb
enter
fcompl
repnz
scas
fmulp
xchg
pushf
sbb
jae
push
cli
inc
jne
fdivrl
pop
mov
lea
outsb
test
xchg
pop
cs
fcoml
ficoms
jnp
jp
call
dec
push
xchg
push
mov
sub
in
test
ds
sub
sarl
stc
cwtl
adc
into
sub
inc
sbb
pusha
mov
test
rorb
sahf
mov
push
dec
ljmp
cmpsb
cmpsb
add
inc
dec
xor
cmp
lret
mov
movsl
out
or
mov
mov
or
ljmp
popa
inc
mov
mov
pop
add
jne
dec
add
scas
ljmp
or
in
push
dec
movsb
push
mov
mov
test
cli
das
out
dec
in
hlt
insl
and
jp
push
lea
add
or
das
ds
and
xchg
mov
jecxz
sbb
cli
add
jle
in
lret
sbb
test
idivb
js
lret
sub
shl
ds
daa
sbb
imul
adc
push
dec
lcall
in
inc
lret
aad
fdivrl
mov
dec
mov
or
xor
dec
push
mov
adc
arpl
je
mov
loopne
popa
ss
sub
std
add
imul
lods
movb
cmc
lret
push
jbe
mov
in
cltd
add
jae
mov
fs
sbb
push
sub
pop
rsm
mov
jmp
scas
jp
and
jb
and
xor
pop
dec
push
xor
xchg
sbb
push
add
nop
loope
leave
mov
jne
mov
leave
push
inc
pop
fxrstor
test
adc
sub
stc
daa
mov
inc
shlb
xchg
cli
inc
cli
mov
pop
js
push
jg
inc
cltd
jmp
lea
pop
cmp
arpl
enter
xlat
dec
cld
dec
jno
xchg
cmp
iret
lods
inc
sahf
rcll
dec
jle
inc
es
xchg
adc
dec
mov
add
fcomip
bound
add
adc
stc
cs
inc
push
scas
and
adc
add
jp
jp
inc
shr
enter
mov
and
adc
aaa
lcall
xor
daa
dec
push
out
rcr
lds
ljmp
jae
addb
sti
cs
push
test
jle
lret
mov
mov
xchg
inc
pushf
insb
adc
jnp
lods
dec
cld
cmc
bound
shll
inc
loopne
pop
push
inc
movsb
inc
xor
arpl
sub
aam
push
pop
jp
cmp
das
add
sti
xchg
into
inc
pop
out
popa
and
jbe
xchg
jno
inc
popl
dec
or
das
cwtl
pushf
data16
cmp
dec
xchg
push
jge
dec
ss
inc
xchg
inc
or
mov
leave
inc
mov
ss
sbb
fstpt
addr16
ss
mov
rorb
imul
cmp
test
repnz
adc
lret
cmpsl
cmp
push
movsl
cmp
or
jle
cltd
test
jecxz
and
add
mov
xor
int3
pop
adcl
pop
or
movsl
jmp
fucomp
lock
sub
mov
sub
outsl
icebp
cs
jo
mov
ja
xchg
popf
popf
pop
jo
cmp
daa
xorb
mov
xchg
xchg
in
ja
test
xchg
out
xchg
scas
sbb
imul
inc
mov
ja
adc
test
dec
movl
and
cmp
sbb
xor
cmpsb
leave
mov
jmp
pop
iret
nop
adc
mov
add
insl
bound
in
mov
mov
inc
leave
repnz
scas
in
push
jg
in
sub
mov
xor
stos
fwait
xor
sbb
mov
test
jne
out
fwait
mov
adc
stos
rorl
arpl
pop
pop
filds
sub
cmpsl
sub
not
jg
mov
cmp
ljmp
movsl
fbstp
imul
mov
popf
xchg
test
cmpsl
fsts
outsb
xchg
xchg
mov
adc
xchg
movl
xchg
jnp
dec
cmp
in
xchg
pop
mov
cltd
sbb
jle
adc
xchg
aas
ds
iret
jmp
sbb
jo
iret
jo
pop
push
bound
aad
jns
mov
jnp
lcall
sbb
aaa
add
push
pop
sbb
mov
shll
fcoml
adc
or
or
setg
push
push
icebp
cwtl
sti
sub
loop
decl
and
inc
add
xchg
popa
out
fs
or
adc
int3
xchg
dec
sub
mov
and
mov
jne
mov
out
and
pop
pop
jecxz
shlb
add
sar
in
rorb
sarl
imul
sbb
loopne
mov
fldt
pushf
or
adc
xor
xchg
xor
mov
sub
iret
subl
lods
lcall
in
daa
sbb
sarl
movsb
lea
add
ja
sbbb
pusha
repnz
repz
cld
push
cmc
jmp
pop
adc
fimull
icebp
shl
repnz
add
push
cmp
stos
nop
mulb
mov
je
mov
gs
or
mov
jmp
add
cld
cli
dec
stos
xor
or
push
push
outsl
inc
iret
insl
aas
jnp
adc
test
lret
or
sub
arpl
sbb
cmp
insl
jb
mov
push
adc
test
push
sbb
inc
xchg
jo
and
lock
or
add
loope
ja
sahf
call
adc
mov
jmp
pop
aas
mov
loopne
aad
cmc
fwait
sub
mov
popf
or
loop
push
sub
mov
aad
mov
stos
loopne
push
jns
pushf
sub
dec
mov
inc
aas
imul
xor
in
imul
push
lods
sbb
mov
insb
jns
test
and
push
inc
repnz
xor
in
add
iret
js
mov
es
mov
gs
out
fnstcw
dec
mov
shlb
mov
pop
add
mov
sub
jno
inc
andb
pop
push
das
int3
add
pop
push
mov
pop
xchg
stc
dec
jmp
mov
mov
es
cltd
testb
inc
xchg
pop
inc
leave
lret
stos
mov
shlb
in
push
dec
out
dec
data16
cmp
xchg
aam
sahf
pop
cltd
jb
mov
ror
loop
scas
jg
jb
or
or
xchg
dec
loopne
dec
mov
sub
ljmp
mov
cmc
jg
bnd
into
jl
fistpl
es
outsl
dec
scas
mov
jp
add
push
push
pop
pusha
adc
test
xchg
dec
push
mov
stc
jnp
filds
int3
jge
fwait
andl
loopne
jp
lret
je
fisubl
and
mov
fcmovne
roll
test
and
xor
je,pt
pop
ss
pop
cmp
pusha
and
mov
mov
jge
jmp
cwtl
cmp
add
dec
mov
out
and
and
jae
push
pop
ret
push
sub
sbb
cmc
lahf
daa
push
daa
inc
loope
push
sbb
iret
lock
xchg
pop
shlb
outsb
pop
sbb
adc
xchg
in
orb
push
mov
inc
push
gs
mov
cli
pop
stos
add
out
cmp
sahf
pop
in
xchg
mov
cmp
popl
test
pop
or
and
adc
jne
push
xchg
lea
ja
push
mov
nop
movsb
mov
jno
mov
addb
lea
jp
jns
les
int
hlt
lds
add
repz
repnz
pop
inc
push
addr16
cmpsb
popa
mov
sub
push
inc
push
movsl
jmp
xor
sub
jnp
sub
int3
mov
adc
add
and
adc
ficoms
ds
lret
mov
into
adc
js
mov
mov
int
cwtl
sub
iret
adc
jb
jmp
sti
cmp
cmpsl
fsubrl
fdivl
ret
sbb
mov
add
cmpsl
cmp
nop
inc
sub
and
push
jle
out
sbb
mov
fdivrp
dec
push
xchg
jo
arpl
movsl
negb
fsts
dec
scas
sbb
jb
push
cmp
cmp
mov
push
cmp
addr16
sub
or
mov
daa
xchg
lds
lock
cltd
pushf
sahf
cwtl
mov
or
pop
adc
cmp
es
dec
in
scas
cmc
gs
mov
push
add
std
aad
or
cs
enter
sbb
mov
test
fdivs
imulb
adc
rorb
arpl
push
add
dec
or
insl
push
xor
pop
aaa
dec
pop
dec
out
mov
loopne
inc
scas
test
jmp
cld
popf
inc
mov
ja
adc
stos
es
das
pop
popf
or
insb
cmovp
push
jge
lcall
repnz
cmp
out
cmc
sub
jbe
cwtl
movzbl
nop
mov
push
xchg
jbe
repnz
xchg
sub
scas
sar
xchg
pushf
aad
mov
addr16
mov
push
cmp
dec
push
pop
xchg
cli
not
imul
push
stos
es
cmp
mov
xor
dec
sbb
xchg
ds
loopne
sti
mov
ret
jae
fst
addr16
dec
sahf
leave
js
fistpll
sbb
fistpl
nop
xchg
jge
ljmp
js
js
or
in
mov
push
aam
mov
gs
insb
pop
push
inc
xor
inc
xor
inc
scas
dec
repnz
testb
or
fs
sub
ja,pn
lahf
xchg
js
add
out
jmp
lcall
cwtl
mov
adc
mov
xor
xlat
sti
pop
push
data16
inc
jbe
mov
xchg
and
pop
cmp
arpl
mov
pop
jmp
pusha
ficoml
mov
lahf
add
imul
xor
loop
scas
sti
or
repnz
mov
dec
cmp
pop
leave
out
mov
outsl
les
sub
cltd
push
or
mov
add
rorl
mov
imul
dec
push
popf
loope
leave
roll
int3
rorw
subl
mov
fs
add
mov
hlt
enter
or
dec
repz
das
push
movsl
pusha
mov
es
add
hlt
mov
cmp
mov
test
jb
cmp
les
jb
mov
test
xchg
js
push
cmp
jmp
push
adc
rclb
mov
mov
sub
xor
mov
sbb
jnp
pop
popa
xor
push
arpl
lea
push
dec
lret
inc
cmc
push
cwtl
ss
mov
dec
fisubrs
adc
lret
push
pop
or
add
hlt
addr16
jl
xchg
aaa
sub
sub
sub
loope
mov
pop
or
cmp
mov
mov
jg
leave
or
dec
outsb
add
inc
in
shlb
andb
inc
nop
and
mov
clc
dec
orl
pop
sub
outsl
nop
fwait
aad
fnsave
jge
sbb
aas
pushf
test
dec
inc
into
push
xchg
jo
adc
int3
mov
imul
cmpsl
mov
inc
xor
xor
jge
sahf
pop
out
je
mov
lret
mov
fsubrs
sub
daa
jl
lret
leave
xor
test
cltd
mov
jnp
call
mov
dec
jbe
lea
in
xchg
lret
aam
sahf
lret
shrb
jae
out
jae
add
sub
sahf
push
in
dec
mov
or
xchg
int3
jmp
rcll
xchg
xchg
xlat
lods
cmpsl
mov
inc
jge
cmp
cmpsl
jl
fnstsw
ds
or
dec
mov
push
imull
fisubl
outsl
pushf
dec
shlb
ret
or
test
mov
flds
jp
lret
pop
or
push
clc
adc
xor
xor
ret
xchg
stos
dec
stos
sub
not
imul
push
xchg
jo
cmp
decl
adc
push
xor
sub
mov
cs
mov
cmpsl
dec
loope
sahf
into
fs
daa
into
pop
test
mov
mov
hlt
cltd
sub
in
pop
xchg
jg
pop
sbb
dec
sbb
insl
jg
xor
test
ljmp
insb
pop
sub
xchg
and
mov
inc
push
mov
out
mov
loope
inc
popf
mov
shl
dec
lret
pop
inc
inc
cmp
push
test
sub
jecxz
pop
push
jnp
cmc
pop
sbb
jmp
ss
xchg
outsb
movsl
jne
loope
test
int
stos
andl
cli
lahf
and
mov
sti
test
push
fs
addr16
orb
imul
loop
add
jne
jnp
pushf
inc
nop
neg
sub
cwtl
jg
pop
lods
js
push
cld
mov
xor
cmc
jge
mov
fsubrs
pusha
aaa
sbb
int
jb
mov
scas
sahf
pop
push
test
add
mov
shlb
add
add
cmp
fcmovnu
push
sub
or
mov
ret
xchg
adcb
mov
jp
add
dec
lret
mov
lock
pop
arpl
in
dec
mov
and
jo
dec
scas
lcall
repz
adc
adc
or
js
mov
shll
and
fstpt
and
fcompl
cmc
mov
xor
or
cmpsl
mov
js
xchg
sub
jb
xchg
cmp
sub
pushf
outsb
mov
loop
or
in
push
shlb
fs
fldcw
add
push
sub
push
or
cmc
xchg
out
leave
int3
pop
push
enter
mov
movsl
int
fistps
xor
xchg
insl
jecxz
sbb
mov
jge
and
frndint
sbb
fsubr
shl
andb
jns
outsb
loop
scas
inc
cwtl
and
sbb
ret
ret
push
addl
sbb
mov
adc
or
incl
adc
fcmovbe
fdivl
dec
adc
and
in
push
mov
js
jae
inc
jge
jne
and
testl
shr
and
jb
jl
sub
xchg
pop
sti
or
mov
loope
inc
xchg
mov
insl
popf
cmp
adc
loop
je
fstl
fadds
into
or
xchg
idivb
roll
or
fstps
lods
cmpl
mov
inc
adc
movsb
sub
bound
daa
out
jg
ja
pop
aad
int3
fs
cmp
add
loopne
fmuls
jp
and
fiaddl
scas
enter
sub
int3
aam
inc
push
inc
test
mov
ret
cs
push
adc
xchg
test
push
pop
outsl
dec
jp
dec
int
ja
jo
or
push
mov
mov
ficomps
add
call
sub
sub
jno
adc
fistl
adc
sbb
mov
outsl
push
or
movb
mov
or
cmpl
xchg
sub
leave
sub
lret
dec
xor
xor
loop
sbb
sub
mov
daa
cmp
std
enter
jmp
and
lahf
in
inc
out
aam
cmp
dec
or
or
movsb
xchg
jo
jp
fcompl
notb
rorb
ljmp
xor
jp
test
jnp
icebp
ljmp
add
fldenv
cld
shlb
add
xchg
cmp
and
add
push
sbb
xchg
in
jmp
fwait
push
and
dec
mov
gs
sub
popa
fstpt
std
jb
lock
mov
add
xchg
enter
addr16
dec
push
mov
imul
insl
cmpsb
in
dec
jmp
in
lcall
push
mov
mov
add
testb
shlb
adc
adc
jbe
pushf
outsl
mov
fcmove
xor
cmp
jnp
dec
push
mov
push
cs
push
stos
mov
sbb
inc
add
xchg
popf
mov
fistpl
fisttpl
inc
sahf
mov
xchg
dec
imul
pop
pop
xchg
in
lods
mov
popa
cs
cmpsl
pop
shl
dec
daa
sbb
dec
stos
pop
lret
pop
in
add
adc
dec
xchg
mov
adc
out
popf
dec
adc
push
xor
pop
call
push
and
jne
cmpsb
enter
cmp
cltd
popa
jbe
popf
add
loop
dec
xor
push
push
lds
lods
mov
cmp
jg
mov
dec
data16
push
mov
xchg
cwtl
xchg
sbb
leave
cmp
outsl
mov
rep
or
xlat
xor
push
in
rclb
test
xchg
gs
je
xorb
push
dec
into
sti
mov
mov
ljmp
leave
xchg
mov
imul
dec
out
addr16
lahf
and
sar
lods
push
lea
inc
in
push
sbb
push
push
or
stos
testb
pusha
cmc
add
outsl
inc
push
and
cmpl
std
bound
out
stos
mov
xchg
aam
pop
jge
jge
call
mov
movsb
notl
outsl
push
ret
xchg
repnz
ljmp
push
jecxz
xor
mov
aad
ja
popa
push
push
push
loop
sbb
pop
adc
xlat
incb
adc
xchg
test
rorb
fidivl
mov
jmp
leave
push
into
ds
cmp
add
mov
les
push
sub
fldenv
popf
push
xchg
lret
ss
js
mov
decl
pop
push
ljmp
mov
flds
dec
adc
add
mov
call
pop
shrl
adc
scas
lahf
out
out
sbb
or
jnp
xchg
loope
jg
jmp
stos
pop
sbb
test
dec
adc
sub
add
sti
and
jo
rorb
mov
sub
jne
or
inc
pop
mov
out
add
adc
mov
jp
int3
inc
fisubrs
push
jge
lock
ffreep
xlat
out
inc
sbb
mov
pop
sbbb
ss
ljmp
pop
repz
mov
stc
xchg
xor
mov
add
jmp
adc
add
inc
stos
sbbl
insb
rolb
orl
ljmp
pop
cmc
dec
cmp
mov
das
dec
sbb
lcall
insb
mov
outsl
xor
inc
test
push
in
push
mov
bound
pop
xchg
inc
push
loopne
sbb
pop
xchg
pop
hlt
shrb
and
sarb
xchg
aaa
or
imul
aaa
in
pop
dec
cld
fs
popf
cld
or
call
cmp
cmc
inc
jnp
sti
clc
outsl
fistpll
lret
mov
xchg
jns
cld
gs
xchg
push
sarb
inc
push
fwait
jecxz
fistps
stos
fs
fs
inc
add
popf
mov
fidivrl
sbb
pop
sbb
dec
dec
jb
adc
dec
or
sbb
pop
push
sbbb
test
subb
fwait
pop
ret
lret
add
push
adc
sub
cmp
movsb
mov
repz
adc
int3
ret
mov
rorl
push
sub
outsl
outsb
mov
jg
adc
bound
out
gs
dec
clc
adc
xchg
daa
das
dec
mov
scas
shrb
and
jg
inc
icebp
pop
xor
inc
lcall
xor
jns
or
sahf
iret
mov
inc
xchg
and
mulb
outsb
imul
fmull
mov
cmovb
jbe
or
aad
sub
orl
mov
ds
mov
cmp
dec
dec
xchg
shll
add
cwtl
jnp
dec
ljmp
cmp
mov
jb
out
mov
pop
bound
stos
test
aam
xlat
push
mov
add
or
sub
or
or
mov
stos
mov
and
jne
inc
popf
das
xchg
outsl
xlat
mov
jns
cltd
jl
movsb
ret
cmp
dec
mov
push
inc
inc
push
iret
jl
mov
xor
daa
cwtl
jg
inc
pop
call
ds
fists
sahf
xchg
movsb
fidivrs
dec
xchg
push
call
out
stos
lods
push
mov
sti
adc
mov
sub
fstps
pop
enter
rdpmc
outsb
fidivl
into
outsl
clc
xchg
repnz
lret
sub
pop
jns
pop
test
pop
jnp
xchg
imul
push
sbb
pop
popf
dec
mov
cli
sahf
push
mov
add
fists
push
sub
test
and
lods
jo
loop
outsl
pushf
inc
mov
push
repnz
sahf
jl
adc
out
in
dec
cmp
cltd
add
shl
incb
dec
pause
cmc
jmp
add
std
loopne
add
icebp
leave
loope
ss
mov
or
in
addr16
push
scas
pop
pop
cwtl
out
adc
jno
cmp
and
cmp
xchg
mov
dec
mov
loop
imul
adc
shll
pop
cmp
push
daa
mov
and
dec
movups
cmp
int
aam
dec
js
loop
fs
stos
lahf
lret
insl
jae
jnp
xchg
push
scas
ds
cs
pop
dec
ss
lods
jmp
sahf
push
lea
loopne
inc
dec
push
jno
dec
dec
and
cld
push
and
adc
inc
lods
outsb
pop
loop
adc
imul
mov
notl
leave
dec
mov
sub
inc
xor
cmp
insl
sbb
xorl
nop
in
out
xchg
mov
mov
daa
push
add
push
mov
inc
popf
xor
pop
test
pop
jle
sbb
pop
mov
cmpsl
fildl
lock
stos
sub
lods
cmp
push
pop
aad
xor
or
iret
xor
rorb
sarl
xor
pop
cmp
xchg
fimull
push
daa
sbb
stos
add
cwtl
out
ret
addr16
pusha
xchg
mov
cmp
fwait
sub
fsubrs
lahf
int
pop
dec
xor
out
mov
aaa
sub
push
jmp
push
xchg
rcl
and
jp
push
leave
cmp
jno
mov
xchg
cmp
fldenv
sbb
cmp
dec
mov
mov
mov
dec
packssdw
jbe
or
dec
in
pop
adc
sarb
scas
aas
mov
cs
jmp
jecxz
mov
adc
xor
hlt
jae
or
or
leave
test
push
and
test
mov
push
push
xchg
imulb
xlat
aam
and
aam
jle
push
mov
outsb
xchg
sub
nop
dec
mov
movsl
test
mov
dec
dec
movl
int3
adc
cmp
loope
roll
mov
lea
pop
and
inc
fs
faddl
scas
subl
mov
inc
dec
xchg
in
push
lcall
sbb
pop
inc
or
call
icebp
push
subl
xchg
scas
out
jmp
adc
ja
sahf
fisubl
or
push
das
enter
aad
nopl
je
repnz
nop
pop
rorb
xor
sub
fcomps
fldcw
mov
sbb
adc
mov
pushf
xor
jae
mov
jnp
outsl
add
fucomip
aas
cmp
pop
mov
inc
dec
sbbl
in
mov
sbb
fsubs
mov
and
call
stos
inc
jb
movsl
stos
clc
repz
std
in
dec
adc
loope
xor
mov
sbb
hlt
dec
out
cmp
sub
fwait
sbb
push
daa
test
jno
cmp
sbb
divl
jle
int3
mov
stos
or
mov
test
cmp
sbb
stos
mov
mov
out
in
popl
mov
cmp
jae
and
lea
mov
outsl
push
jge
and
andl
add
dec
pop
mov
out
push
cs
inc
cs
push
leave
mov
xorl
cmp
push
call
sub
dec
fildl
jno
pop
jb
xor
aaa
xor
dec
js
xchg
jmp
stc
stc
mov
sub
xlat
loope
cmp
mov
in
mov
pushf
and
dec
lds
rorb
lret
sti
movsb
and
push
inc
xlat
xor
mov
push
arpl
mulb
aaa
and
pushf
notb
ret
mov
or
cmp
jmp
cltd
ret
push
lret
fs
addr16
lret
mov
in
cmp
xor
push
pop
test
andl
pand
subb
xchg
xchg
fiadds
xor
cmp
repnz
cmc
inc
lret
les
jmp
add
rolb
pop
cs
pop
mov
jbe
dec
arpl
xchg
out
addr16
cmpsb
test
add
movsb
andb
push
scas
pop
dec
dec
jl
or
mov
mov
aaa
cmpsb
lret
xor
in
mov
adc
movsl
sub
xor
jno
insl
testb
loop
test
jno
clc
es
daa
std
nop
add
rorb
and
lods
or
gs
jp
movsl
jl
cmp
jns
mov
mov
cmp
test
pop
mov
pop
push
addl
mov
sub
sbb
sub
pop
div
daa
data16
or
aam
lock
mov
adc
lahf
mov
faddl
popf
dec
mov
or
sub
cs
jb
pop
xor
ret
xor
scas
jne
imul
loope
out
js
adc
les
cmpsl
popa
gs
pop
jg
lock
shlb
add
xchg
iret
mov
mov
into
pop
cwtl
sub
lcall
push
mov
rcrl
out
inc
dec
xchg
cmp
push
pop
xchg
pop
test
xchg
in
cld
mov
icebp
cmc
jecxz
fisttpl
pusha
jae
mov
je
mov
jae
push
rol
xchg
cs
shlb
add
imulw
pop
mov
test
lods
int
lret
ja
mov
stc
sahf
dec
aad
popf
jmp
outsb
and
inc
xor
pop
in
inc
mov
jp
xchg
jb
ret
xor
mov
mov
daa
cmp
stos
jecxz
jmp
adcb
adc
sub
in
adc
stos
fs
test
add
mov
pusha
test
dec
negl
mov
call
faddl
outsl
cmpsb
add
repnz
leave
sahf
lods
and
test
loop
addl
push
outsl
xor
adc
pop
cmp
test
lock
lods
ret
test
and
out
mov
ficoml
leave
mov
inc
scas
dec
push
sbb
sub
out
push
jns
jbe
xor
mov
mov
pop
xor
test
jmp
aas
mov
and
scas
pop
sbb
add
mov
lea
roll
jnp
sbb
rolb
sub
jmp
rorb
cmp
push
dec
sub
aas
fsts
ret
fldt
cld
pop
and
sub
into
lret
inc
clc
les
daa
enter
loopne
cmpsl
sbb
test
xor
dec
fdivrs
ficomps
loope
mov
and
pop
adc
lret
fneni(8087
mov
inc
push
in
or
imul
enter
fisttps
rclb
sbb
mov
pop
jmp
ds
mov
das
lcall
lea
inc
es
lock
pop
aaa
cli
dec
xchg
int
jae
inc
sbb
pop
add
shll
mov
sbb
rcrb
ja
loopne
es
mulps
in
pop
mov
hlt
xchg
mov
ss
or
xor
push
data16
ja
pop
in
stos
or
mov
push
mov
inc
jmp
rep
pop
dec
jnp
std
lods
xchg
and
aaa
fisubl
or
test
aas
lahf
push
push
sub
int3
sahf
xor
js
xchg
out
pop
jle
jne
mov
mov
mov
jbe
lock
adc
push
lock
add
jb
sub
and
mov
fdivr
mov
and
push
or
ss
fwait
cmp
mov
push
jecxz
scas
xchg
xor
addr16
scas
push
mov
js
popf
lods
xor
inc
sbb
xchg
out
inc
int
inc
mov
mov
sub
lods
outsb
arpl
jno
push
lret
in
mov
mov
fcompl
cltd
adc
xchg
faddl
sbb
dec
push
insl
lea
into
sbb
dec
mov
fisubl
pushl
cmc
mov
jecxz
fcoms
cs
lret
xchg
mov
lret
cwtl
adc
mov
aas
dec
jno
lcall
lret
mov
imul
fldenv
mov
xor
aaa
dec
aam
insl
pop
stos
or
xchg
mov
outsl
jae
or
sbb
scas
mov
pop
pop
xchg
jmp
add
repnz
pop
mov
sbb
mov
jl
xchg
in
shl
adc
daa
or
jge
ds
push
add
out
scas
pop
lds
xor
loope
sbb
adc
push
into
mov
loop
hlt
aaa
adc
mov
sti
lcall
xor
mov
mov
sbb
outsl
cmp
and
imul
loopne
sbb
pop
dec
sbb
jecxz
sub
lahf
lock
mov
das
jp
mov
daa
out
xchg
xchg
pop
popf
mov
daa
xor
lret
data16
out
mov
adc
shrb
xchg
lahf
pop
subb
vsubss
pusha
in
insb
cmp
cld
int
mov
adc
pop
xchg
idiv
iret
sbb
push
jnp
aaa
pop
jns
adc
mov
cmc
jmp
int
sti
jg
adc
mov
mov
js
repz
out
dec
sti
mov
je
xchg
mov
push
je
push
add
cmp
pop
jo
sub
es
out
movsb
pop
pusha
push
test
in
lret
sarb
fnstenv
out
dec
xor
out
mov
rorl
inc
call
sub
je
inc
cld
scas
mov
or
aas
test
xchg
pop
ret
adc
xor
adc
xor
aad
or
adc
sbb
mov
jp
mov
lds
lahf
aad
xchg
fadd
jae
daa
mov
push
cmp
or
fsubrs
lahf
mov
jge
jge
mov
or
int
cmpsb
test
dec
call
das
imul
cld
adcb
xchg
ss
push
imul
or
and
or
jecxz
lods
dec
clc
fwait
push
cmp
inc
pushf
nop
cmpsl
xchg
pusha
js
push
mov
jecxz,pn
inc
sub
enter
lret
xchg
push
jns
call
lret
jne
popa
add
out
fcmovbe
mov
xor
cmp
mov
pop
sbb
aad
jae
into
mov
dec
cmpsb
ret
lea
aas
adc
loop
int
mov
sahf
popa
iret
outsl
mov
mov
adc
pop
scas
jne
fiaddl
adc
pop
push
and
iret
mov
out
mov
cld
dec
cmp
sar
sbb
xchg
mov
mulb
repnz
xor
or
mov
mov
sarb
outsb
pop
frstor
lock
mov
lds
lods
push
inc
daa
inc
aas
imul
enter
out
adc
lock
mov
xlat
cmp
idivb
add
jae
adc
lea
cmp
adc
adc
sti
decb
or
outsl
shl
stos
movsb
adc
cld
mov
add
adc
jbe
pop
pop
lods
push
hlt
pop
push
nop
jge
pop
sub
dec
dec
in
out
or
dec
dec
outsl
roll
dec
xchg
push
insl
sub
cmp
xchg
dec
jo
test
pushf
mov
mov
push
or
push
adc
xor
mov
pusha
jb
pop
movsl
pop
clc
nop
iret
jl
add
mov
add
add
adc
xchg
push
add
dec
push
xchg
push
cltd
or
stc
je
cmp
pop
mov
or
daa
add
adc
in
bound
jcxz
ret
popa
xchg
mov
inc
into
push
pop
cmp
movsl
roll
mov
xchg
clc
outsb
pop
xor
inc
push
xor
popf
and
xor
lcall
hlt
push
aas
push
pop
mov
push
adc
enter
jbe
pop
dec
movsb
sarb
xchg
mov
inc
fsubrl
push
gs
inc
fists
mov
cli
lock
push
out
stos
xchg
out
adc
push
cs
cmp
ret
or
dec
jno
sbb
inc
fdivrs
stos
in
mov
and
xchg
push
jnp
aaa
pavgw
subl
out
inc
ja
insb
cmpsb
xor
call
jnp
pushf
lds
adc
jp
xor
stos
dec
pop
mov
es
movsb
pop
mov
jl
sti
sbbl
stc
dec
int3
pop
iret
adc
lret
sbb
push
inc
test
and
cltd
sbb
pop
pop
and
or
xchg
or
dec
stos
push
std
out
push
inc
mov
mov
adc
inc
pop
lds
or
pop
xchg
inc
dec
je
xchg
sbb
xor
xchg
xorl
inc
jae
sti
adc
push
sbb
lock
lahf
leave
xor
cmp
sysexit
dec
es
les
popa
test
pop
outsl
mov
and
iret
xchg
sbb
out
loope
pop
clc
add
in
pop
shl
out
aas
pop
mul
shrb
adcl
mov
scas
repz
fwait
insb
jmp
dec
out
popf
adc
mov
mov
push
mov
cs
cmp
es
or
ljmp
lret
fucom
shrl
cld
andl
addr16
js
pop
push
inc
hlt
push
push
insl
fisubrl
stc
mov
push
pop
push
mov
out
or
pushf
mov
sbb
pop
pop
fs
mov
lret
cmp
mov
aam
push
insb
pop
repnz
movsl
xchg
lods
int3
rorl
mov
fwait
in
mov
jno
sahf
hlt
pop
adc
ljmp
sarl
xor
and
sti
push
pop
out
mov
xchg
and
popf
dec
movsb
add
cmpsl
cmp
push
in
xlat
add
pop
sarl
push
sub
adc
pop
mov
pop
hlt
fidivrl
iret
xor
lea
xor
or
jmp
cmp
fidivl
xchg
loopne
stos
xchg
and
addr16
add
fwait
add
fidivrs
imul
je
daa
rorb
int
iret
jae
push
add
movq
sub
faddl
push
fiadds
aad
mov
hlt
neg
stos
add
jne
or
push
in
loope
mov
cmp
addr16
outsb
ffreep
and
mov
inc
in
sub
lret
mov
ja
adc
pop
mov
loope
mov
xlat
jnp
jnp
out
mov
push
dec
dec
mov
mov
int
rcrl
push
sbb
cmpsl
mov
push
gs
dec
inc
or
and
jg
jmp
xor
xor
add
aad
mov
test
cmp
dec
adc
inc
adc
gs
stos
cs
scas
xchg
lret
clc
sarb
pop
cmc
dec
add
pop
pop
in
xchg
xchg
cmp
add
jle
inc
outsl
adc
je
pop
cltd
call
aas
clc
jecxz
dec
add
xchg
movsb
int
jne
add
cmpsl
xor
aad
movsl
pop
std
dec
mov
fiaddl
loop
jne
das
mov
cli
scas
cmp
std
dec
adc
xorb
or
xor
ss
nop
inc
cmpb
fbld
sub
lahf
sub
shrl
test
xchg
ds
sub
adc
push
outsb
fcmovb
das
iret
in
test
repnz
in
ljmp
into
jne
fnstcw
ss
pop
cwtl
adc
sbb
or
sahf
cmp
repz
inc
inc
push
pop
lods
ljmp
sbb
das
imul
pop
lret
push
ja
inc
sti
in
shrl
ljmp
xchg
dec
jg
mov
enter
jae
and
into
outsl
jnp
cmpb
ljmp
pop
xchg
sbb
pop
ret
xchg
sbb
sub
cltd
sub
inc
cmc
repnz
ret
ja
jae
add
loopne
jns
flds
adc
adc
nop
imul
jmp
stos
pop
in
inc
push
push
lcall
in
notb
push
pop
dec
xlat
rorl
inc
xchg
xor
or
lretw
push
outsb
bound
iret
rcll
roll
cmp
xchg
jmp
and
xchg
pushf
xchg
xchg
bound
xchg
enter
fcmovnu
pop
lds
add
sbb
xor
sarl
pop
fisttps
movsb
cmc
pusha
inc
js
outsl
jge
xchg
cmc
int3
xchg
int3
lods
stos
hlt
fmull
loopne
xchg
rdpmc
repz
mov
or
fidivl
pop
aad
and
int3
cmp
inc
les
jb
shlb
sub
cmpl
nop
data16
inc
fiaddl
roll
push
dec
dec
lods
add
sarb
and
jns
sbb
out
xor
ret
cld
shlb
add
inc
rcrl
jp
ficoml
add
frstor
mov
add
stos
mov
fisubrl
push
inc
stc
filds
lods
test
jle
cli
rorl
insl
fidivl
fmull
ljmp
iret
jno
imul
sarb
shrl
je
rcr
loopne
in
int3
stc
xlat
sbb
fs
movsl
out
lea
cmp
and
hlt
cmp
xadd
cwtl
push
pop
push
adc
mov
stos
sub
orb
jnp
cwtl
xchg
adc
xchg
lret
ret
mov
xchg
subl
adc
jo
icebp
clc
cmpsl
inc
sbb
pop
add
movsl
xor
aad
pop
dec
xchg
xchg
enter
xchg
aam
mov
dec
idiv
xor
in
rcr
stos
fisttps
test
mov
out
out
xchg
pop
add
mov
add
pop
cwtl
mov
sbb
arpl
sub
daa
sub
add
ror
int
adc
lret
dec
pop
loope
pop
add
ja
push
hlt
loop
mov
push
sub
dec
insb
gs
xor
pop
xor
inc
daa
scas
xchg
push
popl
sbb
insb
xchg
mov
addr16
ret
jae
out
sahf
mov
fiadds
arpl
sarb
sahf
add
mov
int3
icebp
js
rcrb
enter
pushf
jmp
mov
mov
movsb
pop
lret
fimuls
mov
or
mov
aas
pop
sub
scas
mov
popf
and
lds
push
xor
repnz
sbb
orb
dec
adc
sti
addr16
sub
pop
jo
imul
inc
je
iret
scas
into
jle
pop
loope
int
insb
int
bound
xlat
push
daa
inc
xchg
mov
scas
shl
or
pop
icebp
mov
mov
popa
mov
mul
xlat
repz
cmc
daa
sbb
int
stos
dec
mov
movsl
cltd
lods
pop
mov
les
ss
outsb
mov
pop
add
add
fmulp
jl
inc
mov
shlb
cltd
jp
adc
inc
sarb
add
dec
xor
cltd
addr16
cltd
jno
adc
mov
stc
xor
das
xor
mov
pop
js
out
shlb
arpl
cmc
scas
dec
sub
xchg
cs
fisttps
es
in
sbb
xchg
ret
pop
and
jnp
in
icebp
in
add
arpl
push
jns
jl
mov
xor
je
loop
popf
mov
lock
or
sub
jae
iret
test
in
add
adc
imul
inc
cli
mov
in
mov
xor
aam
pop
mov
nop
bound
insl
lods
fs
ficomps
add
roll
mov
add
repnz
mov
cmpsl
xchg
das
cmp
test
inc
icebp
movsl
hlt
cmp
and
or
fdiv
push
xor
test
pop
pop
popa
add
or
test
sbb
scas
xchg
dec
add
sub
bound
es
into
jge
xor
and
pop
or
and
hlt
enter
push
insl
mull
mull
pop
push
lcall
mov
dec
orl
dec
xchg
std
cmpsl
dec
lods
lods
mov
inc
jae
or
jbe
add
lcall
roll
sti
push
dec
stos
sub
jle
push
fwait
aas
addr16
mov
mov
hlt
dec
sbb
mov
js
pop
push
clc
mov
mov
dec
sub
out
lods
das
stos
pop
xchg
jnp
adc
into
mov
pop
adc
adc
rcll
or
lea
and
test
adc
jno
sarl
sbb
notl
data16
add
repz
push
add
jmp
mov
mov
mov
or
pop
jp
sahf
test
call
rorl
cmp
inc
inc
gs
scas
push
push
and
pop
subl
mov
in
mov
mov
jp
pusha
aad
lahf
out
les
mov
repnz
cmp
mov
inc
sub
jmp
mov
shll
adcl
ficompl
imul
cmp
test
iret
lods
aam
loopne
shll
cmp
pop
and
pop
ret
nop
iret
scas
fisttps
sbb
inc
push
sbb
cmp
pop
lret
in
cwtl
xchg
jge
stos
add
aam
cltd
mov
test
mov
mov
test
jne
cmp
rorb
sub
icebp
lock
jl
push
movsb
push
lock
jb
test
xchg
pushl
and
xor
out
iret
fsubl
sbb
pop
outsb
call
fistps
repnz
test
adc
xor
ret
popa
sub
pop
cmp
and
fidivl
sub
js
jecxz
sti
pushf
aaa
cmp
aad
push
ret
dec
les
loope
mov
lods
xchg
sbb
addb
pop
ja
push
pushf
adc
fsubrs
cli
das
cmpsl
pop
fnsave
dec
adc
or
je
bound
dec
in
iret
xchg
hlt
adc
xchg
cs
fs
or
scas
pop
rorb
xor
cmp
mov
xchg
xchg
pop
jno
pop
psubq
add
sub
cmp
int3
and
mov
pop
cli
pushf
jge
mov
lock
cwtl
push
adc
pop
push
outsb
push
test
add
shlb
das
es
iret
mov
cld
mov
xor
push
cmc
out
mov
dec
mov
pop
fstps
inc
push
mov
sbb
cwtl
pop
or
out
data16
sub
or
mov
vdivpd
fstl
js
xchg
in
jle
incb
outsl
pop
test
mov
movsb
inc
push
repz
or
fstps
push
inc
cmp
ja
mov
clc
ljmp
sbb
outsb
jns
pop
mov
cmpsb
jmp
pushf
ret
movsl
test
mov
mov
cwtl
xor
fwait
movsb
jo
mov
nop
int
imul
mov
xchg
lds
xchg
shll
int3
adc
adc
fdivrl
sub
jnp
jnp
rolb
mov
sahf
movsl
push
cmp
lods
adc
inc
aam
repnz
es
add
mov
ret
fmul
sub
xchg
or
bound
es
pop
fwait
pushf
fsubrl
repnz
xchg
cmp
inc
scas
dec
mov
stc
jg
xchg
xchg
xor
cmc
sub
test
and
cmpsb
mov
lret
imulb
mov
sbb
or
push
xor
push
add
and
mov
mov
pop
add
jne
iret
lock
out
cltd
ljmp
add
out
mov
add
cwtl
jge
xor
repz
mov
cmpsb
push
cli
jg
lret
jae
jle
sub
cmpb
aad
mov
jno
fstl
gs
ret
adc
ret
mov
ret
mov
or
jno
cld
dec
dec
jne
lods
lds
ret
in
fmull
ja
aaa
cmp
xchg
paddd
pop
or
cmp
shll
stos
xor
int3
dec
jno
mov
ds
dec
iret
or
das
outsl
xchg
push
fldcw
scas
out
push
cmpsl
inc
bound
ret
mov
mov
jbe
mov
push
cmpsl
jmp
cmp
jns
push
xor
aaa
inc
adc
xor
ja
mov
fadd
mov
popf
imul
adc
movsl
mov
out
out
fiadds
push
jg
xchg
das
push
gs
int
xor
add
jmp
mov
cmpb
sbb
mov
fisubrl
arpl
cmpsl
ficompl
lods
imul
test
testb
lcall
mov
jecxz
push
gs
scas
mov
xor
dec
lcall
push
data16
ja
loop
clc
gs
inc
fistps
or
loop
ja
adcb
fstps
les
push
xchg
test
jbe
inc
cmp
xlat
jecxz
out
loopne
mov
int3
sbb
arpl
dec
sahf
adc
push
addb
sbb
int
xlat
hlt
pop
push
xor
push
sub
mov
imul
out
xor
lahf
imul
jle
or
loop
call
and
xor
pushf
mov
aaa
cmp
in
orb
ret
jp
jne
mov
xor
dec
sub
sbb
fdiv
sbb
or
pop
mov
loope
mov
cmp
in
mov
cmp
xchg
pop
xchg
pop
loope
lock
jnp
lret
adc
inc
mov
shlb
xlat
xor
test
jp
xor
xor
fisubs
ja
jnp
addr16
sub
clc
popa
adc
out
das
lods
sub
push
mov
jae
xor
sbb
adc
add
cmpl
push
xor
mov
stos
sbb
xchg
push
out
and
jg
dec
pop
push
js
repnz
mov
into
shr
into
out
nop
and
cmp
xchg
imul
pop
iret
cld
mov
jecxz
fcmove
lds
loopne
ljmp
loope
jl
jge
test
aas
lret
jmp
andl
inc
push
mov
and
mov
fwait
xchg
ljmp
xchg
out
repnz
call
stos
adc
jnp
pop
cmc
push
push
shlb
pop
in
dec
dec
xchg
arpl
pop
repz
out
fildll
mov
loop
fucomip
leave
cmp
inc
lret
rcrb
adc
int3
js
sti
pop
hlt
fcmovnu
jecxz
mov
in
mov
jae
ja
sub
or
test
hlt
mov
jo
xchg
mov
or
pop
fimuls
sbb
pop
mov
rorb
jp
pushf
loop
in
mov
mulb
jle
enter
movsl
add
cmp
call
inc
jb
cmp
xchg
sbb
rcll
xor
shll
shlb
adc
adc
inc
iret
push
or
lds
xor
sbb
cmpsl
inc
or
mov
sbb
inc
pushf
scas
push
push
andl
jl
xlat
xor
in
ret
mov
adc
xchg
roll
cmp
repnz
cmp
mov
aas
enter
sub
push
cmpb
pop
imul
test
je
pop
mov
loop
add
or
movsb
pop
pop
inc
daa
push
loopne
mov
filds
add
loop
fcmovne
jle
aam
ljmp
push
stos
push
insb
insl
sahf
pop
adc
sahf
mov
dec
xor
jb
shrl
fidivrs
pop
cmc
popa
add
les
ja
gs
sbb
pop
jmp
push
leave
cwtl
push
dec
call
add
fs
cli
xchg
aad
mov
sahf
orb
mov
add
and
cmpsl
mov
repz
sarl
pusha
nop
mov
movsl
out
iret
andl
fildl
xchg
outsb
inc
mov
xchg
cld
pushl
or
or
push
push
xor
insb
les
mov
sbb
es
xchg
mov
aad
xchg
pop
push
dec
pop
xor
and
mov
and
pop
idivb
xchg
xor
adc
sbb
cmp
adc
fcoml
psrad
sub
repnz
lea
in
repnz
call
bound
int
jle
pop
imul
int
pop
jno
sbb
jp
pop
clc
outsb
and
movsl
aas
and
rcrb
je
dec
cmp
lock
punpckhbw
rep
push
stc
inc
mov
mov
sub
data16
add
jge
test
js
push
mov
std
insl
jae
fsubrp
lret
pushf
adc
sahf
xchg
ret
inc
jae
in
pop
test
sub
and
ror
inc
mov
push
sub
mov
cmp
call
mov
es
das
jne
iret
xchg
test
lods
mov
mov
inc
sub
sbb
loope
inc
xchg
xor
mov
mov
test
inc
and
stc
data16
and
lods
ss
out
push
shlb
sarl
lcall
push
ds
loop
dec
ret
enter
jnp
xchg
add
les
mov
sub
sbb
adc
dec
pushf
lcall
cmp
fs
sub
adc
mov
sarl
xchg
lods
cmovs
loopne
xchg
outsl
mov
jne
sub
add
push
sub
stos
push
sub
std
cmp
pop
repnz
mov
inc
sub
jo
fs
mov
out
pusha
leave
popf
cmp
ficompl
sub
aam
stos
inc
rcll
and
cmp
dec
dec
push
or
inc
std
mov
add
fs
xor
and
sbb
lret
sarb
mov
es
adc
ficoms
mov
sbb
adc
push
mov
mov
mov
mov
rorb
int3
les
lcall
aad
into
cmpsl
bound
pusha
sbb
aam
inc
cmp
or
push
andl
xchg
lods
xchg
mov
mov
adc
aad
xor
jle
push
and
ljmp
cmp
int3
jle
lock
aad
mov
stc
lock
mov
iret
push
push
pop
adc
fadd
xchg
lahf
cmp
out
scas
mov
xchg
rorb
inc
mov
loop
push
and
rcll
call
lods
int
rcl
repnz
jmp
mov
sbb
leave
xor
in
stos
add
push
xchg
fsts
push
sub
out
jns
psadbw
xor
xor
sti
cs
push
aad
adc
and
mov
sbb
mov
imul
call
nop
xchg
cld
idivb
push
xchg
fwait
add
lods
fwait
mov
pop
pop
cmp
jo
jae
in
das
mov
dec
sbb
jo
dec
pop
andb
int3
jne
das
loope
call
pushl
push
xchg
nop
push
mov
addr16
js
call
sbb
imul
xabort
daa
daa
stos
sub
fisubrs
cli
push
jecxz
hlt
push
fidivrl
rcl
sub
cmp
cltd
fsubrl
adc
cli
mov
icebp
cltd
icebp
xor
loopne
emms
movsb
push
into
xor
mov
inc
xchg
add
enter
add
inc
data16
mov
insl
push
rcr
push
lahf
jp
xlat
clc
sub
sbb
mov
out
dec
sbb
xchg
call
dec
mov
xor
inc
or
mov
cli
inc
pop
mov
mov
shrl
mov
xor
xor
mov
int
xchg
in
rorl
sub
add
add
loop
jb
fcompl
sub
leave
sbb
jmp
xchg
gs
or
lock
mov
push
test
movsl
mov
jge
stos
arpl
add
fisubl
leave
insb
imul
test
inc
jge
lock
pusha
bound
add
sub
jno
rol
pop
adc
sarb
adc
cmc
ret
in
push
aad
ja
mov
pop
shlb
pop
lods
inc
add
xor
out
cmp
pusha
adc
and
addl
push
sbb
push
sbb
sbb
mov
dec
ss
mov
jg
mov
push
mov
les
add
pop
and
fisubrs
jae
cs
nop
xchg
push
into
dec
pop
lock
dec
movb
les
inc
or
pop
mov
jg
aam
add
testb
movsl
sub
jp
lret
push
icebp
int3
xorb
add
xchg
js
mov
aaa
in
adc
or
mov
jg
es
xor
xor
or
lahf
stos
out
pop
shr
add
inc
js
mov
dec
popa
in
cltd
jp
cmc
adc
mov
stos
or
in
sub
je
adc
pop
adc
push
push
and
and
xchg
rcrl
xchg
fs
icebp
xor
lock
int3
xor
scas
js
int3
pop
jbe
rclb
sbb
js
sbb
cwtl
sarb
mov
fwait
inc
sti
mov
adc
repnz
adc
jb
fldcw
jbe
add
jns
mov
lahf
inc
lods
jno
lock
aaa
testb
xor
add
jge
pop
and
fs
inc
shlb
sbb
sub
jp
lods
jb
add
data16
fildl
xchg
add
jecxz
push
sub
xor
insb
xchg
in
int3
jns
aam
cmc
dec
stos
xor
adc
lods
push
sub
repz
addl
add
jnp
lods
lret
je
push
mov
push
dec
imul
and
test
xorb
gs
in
cmpsb
lret
sbb
and
inc
lods
and
aaa
mov
xchg
mov
jae
ret
cmpsb
bound
insb
insb
pop
mov
stos
lahf
xchg
dec
push
sti
inc
sub
pop
fwait
lods
mov
inc
mov
adc
adc
cld
pushw
imul
in
mov
stos
out
mov
cmp
pop
call
ss
sub
rorl
mov
push
sub
xlat
inc
insl
and
icebp
test
jb
fldenv
mov
push
xchg
fwait
adc
lods
fnstcw
pop
sbb
call
adc
jns
cld
jmp
adc
testl
mov
cmp
inc
into
mov
sbb
insb
cwtl
hlt
dec
mov
xlat
hlt
sub
pop
add
jbe
fcoml
cmp
rcrl
fs
jge
sbb
jmp
scas
xor
mov
ss
lret
jle
adc
iret
fcoms
xchg
insb
push
cmc
xchg
sub
popa
jmp
push
movb
cmpsb
or
sub
xlat
add
xorb
mov
in
inc
add
xlat
orb
xchg
fists
loopne
sub
out
mov
jae
lea
xor
inc
imul
push
ret
mov
dec
jnp
xor
push
xchg
push
cld
cmpsb
mov
or
jns
imul
xchg
push
inc
repnz
pop
adc
in
cmp
cltd
call
aas
daa
sti
sbb
loopne
clc
mov
notb
pop
push
push
fmuls
mov
xlat
sub
inc
xor
xor
inc
and
addr16
mov
jbe
lret
mov
add
jo
xchg
mov
adc
flds
shrb
bound
push
mov
pop
test
outsb
pop
subb
iret
cs
or
not
in
frstor
std
add
imul
sbb
out
or
pop
iret
push
or
test
adc
xor
inc
mov
imul
je
add
aam
xchg
mov
insb
scas
adcb
jg
jnp
jb
shll
adc
mov
pop
inc
xchg
dec
jp
and
dec
or
xchg
scas
and
pushf
incb
pop
xor
mov
outsl
decl
or
and
mov
dec
jns
mov
jmp
cmc
outsl
stos
adc
jmp
bound
stos
adc
mov
mov
sbb
inc
sahf
stos
mov
insb
mov
mov
pop
ja
pop
xor
mov
call
xchg
mov
jle
sbb
and
jne
fcompl
nop
adc
mov
or
or
sub
sbb
ja
imul
sub
es
adc
hlt
stos
adc
test
mov
mov
mov
xchg
jl
std
inc
jns
out
xor
orb
out
adc
jecxz
and
and
dec
sub
adc
inc
imul
lods
add
xchg
push
out
or
lods
fadds
push
pushf
sbbl
mov
sub
fprem1
push
inc
dec
adc
xor
push
and
lods
insb
inc
rep
addr16
movsl
add
stos
and
out
cwtl
dec
je
jae
cmp
imul
mov
pop
xor
xchg
push
or
outsb
xor
pop
jo
js
loop
out
pop
repz
nop
mov
pop
insl
cmp
pop
dec
fsts
push
ss
stc
pop
pop
sub
sub
repz
data16
ljmp
sbb
sahf
jg
cmp
rorl
pop
sub
es
ffreep
scas
nop
and
data16
dec
pushf
pop
mov
add
mov
mov
cwtl
jecxz
into
je
xchg
lock
stos
jae
repz
icebp
sahf
pusha
mov
mov
mov
push
daa
lcall
mov
cmp
or
inc
adc
hlt
stos
rol
sbb
sti
xchg
and
jne
stos
xchg
popa
jmp
or
std
and
lods
sub
pop
orl
mov
repz
mov
and
addr16
cmp
clc
repnz
pop
loopne
push
in
jecxz
sbb
sahf
icebp
pushf
in
or
dec
movsb
add
adc
leave
lds
pop
xor
sub
inc
lcall
or
insl
std
xchg
ficomps
pop
inc
int3
sub
mov
cmpsb
nop
popa
stc
pop
jle
pop
aas
cmpsb
xor
inc
out
adc
dec
repz
ljmp
cmp
ds
aas
and
dec
inc
adc
mov
mov
mov
js
add
dec
sti
and
ficompl
daa
mov
call
push
out
inc
or
outsl
stos
int3
push
js
pop
xchg
sbb
mov
scas
jl
imul
stc
lea
cmc
mov
mov
stos
lahf
shl
adc
xchg
or
negb
mov
xchg
fs
mov
aad
imul
cmp
fdivrs
icebp
fnstenv
pop
adcl
dec
or
in
lds
adc
aas
jae
enter
jno
fists
adc
aad
leave
fs
xor
lods
jb
lret
mov
and
loopne
and
pusha
sbb
push
scas
mov
insb
bound
mov
sub
mov
fs
mov
add
jl
out
mul
xor
adc
sub
pushf
xor
add
in
mov
lds
sbb
cmp
and
jns
push
sahf
jb
sub
xor
dec
or
sbb
mov
jb
shlb
xorl
sbb
mov
test
lods
dec
movsl
out
gs
or
inc
cmpb
lret
insb
faddl
dec
inc
cmpb
mov
das
xchg
add
outsb
jbe
out
rorl
jnp
push
test
inc
or
fs
insb
movsb
lret
lds
mov
out
imul
cwtl
dec
adc
xor
pop
lds
push
je
mov
xchg
mull
jg
arpl
shrb
sbb
dec
std
sbb
jb
subl
popf
jp
mov
lea
mov
mov
pop
lds
lock
xor
ret
inc
lea
ljmp
jns
int3
inc
cmc
cmp
cmp
xor
push
add
xor
push
lcall
cmpsl
push
or
or
pop
mov
pop
mov
call
fstpl
dec
lock
xchg
bound
hlt
fwait
cld
adc
push
fwait
das
xorl
jb
inc
mov
sub
enter
mov
iret
xchg
cmp
jge
rorb
cmp
into
popf
ja
mov
xorb
mov
sbb
mov
jp
add
sbb
pop
addl
pop
dec
fnstsw
jge
sub
dec
fmull
dec
ret
leave
jae
cwtl
test
pushf
and
sbb
cmpl
jp
int
and
outsb
or
mov
ret
bound
cmp
sub
loopne
pop
lock
clc
mov
add
sbb
imul
mov
popf
gs
or
mov
push
and
addr16
jmp
into
outsl
dec
fcmovbe
cmpl
jmp
mov
out
fiaddl
xchg
cltd
dec
push
lea
lret
jmp
lds
adc
loope
movb
stos
jge
outsl
mov
cwtl
cs
add
add
jle
nop
popa
ret
imul
mov
pop
ljmp
add
mov
inc
mov
stc
aad
test
cmpsl
sub
mov
adc
call
xchg
or
push
lds
xchg
mov
ds
xchg
push
lea
mov
push
lahf
test
or
hlt
dec
xor
cmc
push
fisubrs
lcall
pop
push
jecxz
push
je
inc
test
mov
stc
hlt
in
jl
cli
inc
jl
xor
and
jae
mov
pop
and
cs
xchg
cmp
mov
out
jns
push
int3
adcl
jl
cmpsl
mov
movsl
repnz
xor
pop
xor
in
mov
mov
inc
or
inc
sub
into
lds
sub
adc
insb
pushf
test
out
mov
cli
mov
add
movsl
inc
and
fs
xchg
add
add
cmpsl
pop
mov
pop
jp
rclb
jmp
pop
ja
pushf
mov
cltd
scas
in
inc
mov
pushf
pop
shrb
adc
cmpsb
jae
cmp
cld
mov
in
sbb
clc
movsb
repnz
jbe
inc
fdivrs
jae
scas
sub
mov
inc
lret
cli
push
rol
mov
stos
jmp
aas
adcb
pop
xor
lahf
in
shl
pop
cmp
xchg
cmp
xchg
jg
loope
jecxz
cmp
inc
jp
leave
add
xchg
push
xor
in
dec
and
and
fwait
nop
enter
lds
cmp
sahf
ss
adc
test
sbb
and
in
arpl
dec
ret
pop
notb
mov
add
bound
push
mov
nop
adc
cmp
adc
cmp
ja
sub
dec
mov
add
sti
sbb
sub
pop
popa
repz
out
push
push
jp
sub
daa
mov
add
dec
call
jg
xchg
inc
xchg
push
into
push
mov
adc
cmpb
aas
mov
push
or
xor
daa
cmpsb
inc
dec
movsl
out
mov
add
das
cmp
aam
push
pop
cmpsl
jae
lods
aad
in
cmp
nop
sbb
push
pop
jnp
stos
cld
ja
jae
test
push
in
add
popa
cld
xchg
cmp
cltd
stos
pop
adc
push
sti
mov
aaa
sbb
shll
sub
xchg
enter
fsub
push
dec
jns
sbb
ficoms
pop
dec
pop
mov
xor
dec
push
push
fsts
nop
sub
mov
mov
out
addr16
adc
mov
and
and
stc
lods
jnp
fildl
lahf
repnz
cmp
scas
or
popa
add
pop
cmp
adc
out
mov
pushf
pop
cli
insb
lahf
mov
mov
jg
leave
mov
and
daa
ret
aad
aas
inc
mov
rorb
scas
xchg
cmpsl
lret
mov
jmp
or
push
fstps
pop
loop
push
xor
ret
pop
inc
je
pop
dec
inc
xlat
aam
mov
out
lea
test
mov
mov
pop
sub
xor
adc
or
dec
lods
test
fstl
insl
and
or
icebp
clc
repz
jge
std
int
fbstp
cmp
pushf
cmp
lret
rcrb
stos
aam
outsb
add
sti
mov
jg
and
or
add
jge
pop
rcrl
popa
mov
sbbb
scas
icebp
stc
add
movsl
lds
insb
in
mov
repnz
imul
jns
fisubs
shrb
icebp
nop
fisubl
xlat
enter
push
cmpsb
ret
xchg
mov
aaa
dec
sub
push
outsl
int3
mov
sub
ja
inc
mov
cwtl
sub
mov
cmp
cwtl
nop
in
data16
testb
or
push
das
imul
or
shll
jp
pop
push
or
push
sbb
mov
push
add
bound
pop
push
jno
scas
mov
in
cmp
mov
stc
jb
pop
mov
mov
imul
iret
adc
cmpsl
jmp
cmc
sub
mov
push
popf
mov
loop
lret
sub
lahf
mov
pop
stos
fimuls
mov
lahf
push
push
or
ja
mov
arpl
cmc
adc
mov
mov
insb
sbb
test
ss
mov
or
shrb
in
xor
inc
loope
sub
cwtl
mov
inc
xchg
mov
mov
fucom
pop
shl
imul
pop
pop
adc
das
cwtl
hlt
in
pop
in
je
or
imul
adc
dec
add
add
cs
sbb
aas
mov
sub
jnp
xchg
lret
mov
cmpsb
mov
cld
jg
sbb
xor
inc
gs
sahf
mov
mov
jb
mov
mov
sti
out
test
dec
lods
mov
call
push
out
pop
rol
sub
mov
lahf
sbb
out
xor
pop
pop
stos
mov
fcoms
cmp
ret
adc
leave
insl
int3
test
push
test
sarl
mov
pop
push
xor
mov
fnstcw
push
lods
inc
push
repz
cli
mov
jnp
add
scas
sbb
push
inc
xchg
dec
push
pop
rol
mov
mov
sub
xor
insb
lcall
sbb
jmp
pop
add
in
cmpsl
aad
mov
fsubrp
fldt
cmc
dec
lods
mov
rcl
xor
cs
in
add
pop
mov
push
or
and
pop
ret
ds
std
loope
daa
insb
dec
jmp
mov
pop
pop
xor
test
or
jp
jge
in
leave
jmp
pop
xchg
imul
dec
dec
out
or
xchg
push
roll
jb
scas
push
out
or
scas
fisttpll
int3
jns
adc
and
lcall
pop
out
loop
imul
jmp
cltd
push
cmpsb
int
enter
fwait
andl
xorl
daa
pop
in
sbb
mov
jl
pushl
in
xor
out
cmc
cmp
push
mov
sub
mov
lods
xchg
add
sbb
push
nop
outsb
pop
fbstp
in
rorb
or
int
lods
adcl
popl
mov
stos
push
cmp
sarb
cmc
jb
bound
arpl
pop
sub
adc
mov
push
shrl
mov
xchg
mov
mov
nop
aad
jbe
and
lret
shl
xchg
pushf
push
mov
add
or
mov
xchg
ret
inc
xchg
or
cmp
jns
inc
and
pop
pop
xchg
xsavec
push
mov
xchg
sbb
sub
out
ror
push
add
mov
add
lods
xchg
cwtl
jl
adc
mov
je
andps
lods
cli
cwtl
mov
jle
mov
stos
or
cs
add
or
xlat
and
iret
in
xchg
addr16
push
sub
out
sub
sarl
cmp
jg
pop
cmc
bound
xor
cmc
lods
in
add
pop
int
lods
jp
pop
loop
mov
jmp
cs
sub
push
test
inc
cmp
jle
fcos
leave
pop
jbe
xor
sub
add
sbb
lret
adc
cmp
aas
and
pop
mov
sub
cmpsl
loop
mov
and
pop
sarb
ss
fidivrs
push
shr
arpl
pop
les
insb
adc
inc
xchg
sahf
push
adc
call
adc
adc
daa
imul
in
or
pop
into
call
call
jecxz
es
sbb
xchg
js
jmp
dec
rol
lea
add
repnz
iret
sub
add
sbb
lods
cs
jmp
push
fists
cmp
das
mov
out
leave
fistl
dec
aam
fidivrl
mov
loopne
dec
xchg
rcrb
loop
repnz
out
xor
mov
test
cmp
lea
push
stc
sar
cmpsb
or
jb
cmc
xchg
mov
mov
notl
enter
dec
cli
ljmp
pop
cltd
add
repnz
sbb
inc
jno
mov
in
inc
dec
jecxz
push
mov
popl
js
lcall
out
sbbb
or
int3
or
movsl
and
push
not
ret
and
das
sub
insl
aas
jno
aaa
inc
test
scas
ja
or
das
or
pusha
test
adc
inc
push
inc
ljmp
bound
dec
out
loope
push
add
lret
mov
test
iret
addr16
xchg
out
clc
imul
adc
fdivr
lea
adc
pop
hlt
icebp
mov
in
pushf
or
lods
enter
inc
mov
jnp
lret
jle
and
or
call
in
das
adc
fldt
push
or
mov
mov
jnp
push
inc
nop
pushf
and
dec
je
popa
jae
pop
and
lods
push
add
les
cmc
xchg
push
push
add
or
lock
xchg
rcr
stos
mov
adc
aaa
popa
jmp
pop
cltd
add
mov
aaa
push
jl
sbb
mov
sbb
jle
scas
jbe
pop
dec
cmpsb
fucomi
pop
sahf
cmp
push
and
xor
and
in
mov
cmp
jge
adc
add
std
leave
adc
cmp
cld
sub
and
dec
dec
jne
cmp
aas
adc
pop
lds
jmp
fiadds
dec
and
rcrb
push
lock
fs
lods
mov
xchg
into
jae
in
add
adc
popa
test
pop
mov
mov
pop
cmpsl
sub
nop
int
andb
lret
inc
or
out
add
or
arpl
jbe
cltd
fidivrs
pop
inc
lock
addr16
repz
inc
lods
cmp
jne
bound
daa
mov
decb
push
pop
fcmovb
dec
fsubrl
pop
out
test
pop
cmp
add
adc
dec
or
fsubrs
and
or
test
jb
gs
insb
xchg
pop
mov
and
push
imul
mov
shll
les
jecxz
xor
push
mov
push
insb
faddl
mov
lahf
pop
and
jmp
test
repnz
cli
xchg
mov
test
int3
push
jmp
push
mov
in
adc
mov
icebp
sub
out
pop
pop
pop
sub
inc
sbb
lret
lods
out
out
cltd
lret
pop
push
in
lods
sbb
pop
loop
or
sbb
sbb
push
xor
pop
push
jp
push
add
dec
push
inc
sub
nop
lods
dec
xchg
cwtl
addr16
ret
pop
dec
add
push
adc
mov
imul
out
nop
add
adc
cmp
mov
outsl
cmp
aam
sbb
mov
xchg
ds
nop
xchg
jecxz
adc
in
xor
iret
out
sbb
and
add
mov
enter
sbb
inc
cld
ret
sbb
outsb
sbb
xor
push
sbb
out
xor
sub
cmpsb
cmp
outsl
xorl
ret
xor
dec
xchg
fwait
rcrl
imul
sub
sbb
daa
std
stos
sub
mov
xchg
ret
test
fisttpl
faddp
mov
rorl
cmpsl
je
xchg
sub
fs
jmp
repnz
dec
repz
inc
cli
xor
jge
faddl
add
xchg
shll
inc
pop
sub
je
pop
in
pop
xor
push
es
imul
aad
sub
sbb
dec
jbe
dec
adc
pusha
or
leave
ljmp
decb
stos
setnp
lods
jg
js
stc
jge
xchg
cltd
js
mov
xchg
iret
add
rcll
ret
lds
jnp
ret
push
mov
xor
stos
add
and
push
add
ret
add
outsl
xor
out
jg
xor
xchg
mov
and
inc
jno
sahf
inc
inc
xchg
outsb
jmp
dec
in
xchg
test
out
xchg
es
fldcw
aam
jnp
pop
out
movsb
dec
ja
dec
fcom
std
int
and
push
push
into
out
sbb
and
cwtl
inc
dec
insl
daa
xor
add
into
ss
sbb
cmp
push
jmp
filds
dec
mov
inc
push
stc
hlt
movsb
out
or
and
or
dec
jge
mov
in
or
rcrb
add
pop
pusha
sti
jne
out
stc
mov
mov
mov
add
xor
lcall
dec
je
ffreep
mov
xor
outsb
pop
shrb
mov
jne
stos
ja
adc
mov
inc
push
inc
sbb
dec
jnp
mov
inc
add
daa
loopne
or
pop
dec
jae
mov
test
subb
mov
or
ret
dec
push
in
push
inc
ljmp
in
push
jne
sub
jno
and
mov
ficompl
daa
sub
inc
iret
xor
lods
cmp
ja
adc
lods
xchg
sbb
cmp
dec
mov
jge
mov
clc
sub
sarb
dec
test
jo
cli
loope
jecxz
fstp
mov
subl
fidivl
sub
or
test
aas
shrb
outsb
and
icebp
pushl
xchg
aam
addr16
in
push
push
mov
lret
cli
bound
xchg
push
fimuls
jmp
lahf
push
and
dec
test
and
lahf
mov
jl
movsl
stc
dec
outsb
cmp
cli
pop
sbb
rolb
lods
xchg
das
enter
inc
jl
sarl
daa
in
fldt
pop
push
leave
or
mov
push
andl
fchs
or
cltd
jns
or
ljmp
lcall
xor
js
add
mov
insb
cmp
repnz
mov
adc
scas
arpl
mov
pop
loope
pop
cli
pop
push
pop
cmp
and
test
out
shr
cmpb
scas
mov
roll
mov
mov
out
sbb
adc
push
adc
dec
pop
outsb
cmp
xlat
pop
in
pop
mov
popl
xchg
out
shll
subl
and
ja
in
xchg
pmulhuw
sbb
xchg
test
shll
sbb
daa
cmp
xor
andb
mov
inc
ljmp
xchg
repnz
decb
in
vmwrite
sbb
and
out
dec
adc
jne
cmpsb
push
popf
jo
add
jp
fdiv
sbb
lret
sti
adc
testb
lahf
negb
out
add
andl
cmp
add
sub
mov
inc
int
mov
fucomip
enter
sbbl
lret
ljmp
scas
out
push
adc
outsl
ss
jb
push
divb
sbb
mov
ss
mov
jns
mov
cmpsb
std
std
sub
push
rolb
fcmovnu
stos
mov
mov
pop
enter
movsl
repz
push
jmp
push
mov
seta
mov
sub
pop
into
andps
pop
inc
fmul
in
out
dec
jns
mov
rcll
pop
pop
mov
call
add
imul
pusha
mov
lret
out
push
pop
mov
mov
shll
add
movsb
jnp
push
xchg
mov
ljmp
ret
inc
test
lret
leave
in
mov
add
adc
shlb
int
sub
sub
mov
push
lahf
push
and
cmp
inc
add
data16
stos
mov
xchg
out
cmc
adc
cld
push
je
mov
inc
mov
cwtl
std
call
add
lret
mov
xor
sbb
mov
psubq
xor
and
and
or
adc
outsl
mov
ror
push
add
sti
repz
xor
aaa
dec
pushf
mov
inc
xor
xchg
out
int3
fucomp
push
mov
rcl
scas
lods
ret
add
les
or
scas
xor
sbb
pop
clc
shlb
rolb
or
pop
cmpsb
dec
push
shr
lods
cmpsl
lods
and
xor
aad
negl
dec
stc
inc
test
cltd
inc
mov
and
pop
cltd
fdivr
mov
pop
pop
vsubpd
rorb
in
mov
popa
and
cmc
test
sti
ror
addr16
mov
or
rorl
dec
push
int3
dec
lock
add
aas
test
test
orb
inc
adc
push
mov
xor
scas
cltd
jo
add
ret
sbb
mov
add
pop
push
imull
or
jnp
sub
mov
and
push
orb
xchg
stos
xor
inc
fistpl
jmp
and
outsb
mov
aaa
stos
mov
loope
sarb
cmp
aam
ds
mov
insb
je
and
jl
fcmovne
jmp
xchg
pop
xor
add
and
cmp
call
xchg
in
mov
arpl
xchg
dec
jl
fnsave
insb
idivl
and
fisubs
xor
pop
aas
xchg
adc
orl
int3
imul
mov
add
js
out
lods
mov
jg
mov
out
fmul
push
popa
sbb
jb
xchg
fsubs
rcrb
in
pop
and
jne
cmp
fxch
push
jno
jmp
daa
mov
pop
jle
mov
out
imul
cmpsl
cmp
mov
mov
outsl
js
gs
addl
pusha
sub
xchg
popa
mov
and
jns
enter
std
cmp
je
inc
popf
or
xor
push
push
jg
and
inc
pop
cwtl
inc
jne
popf
popa
xor
adc
mov
outsb
fwait
jns
and
sub
or
sbb
sbbl
std
sahf
out
mov
xchg
lcall
jl
dec
sarl
jbe
daa
cli
fidivl
mov
mov
test
and
and
xchg
mul
enter
jmp
lret
iret
or
divl
mov
stc
push
add
add
rcr
mov
fnstenv
cld
and
ss
jecxz
mov
push
jb
inc
stc
addr16
imul
jp
shrl
push
mov
test
sub
sti
push
pop
arpl
inc
pop
pop
js
inc
jmp
sbb
test
cld
xor
xor
scas
rcrb
xor
ret
xchg
int
cmp
jns
imul
sbb
cmpsb
jle
cmp
sahf
and
pop
or
movsb
imul
sbb
sub
or
pusha
mov
pop
out
mov
add
adc
inc
enter
into
and
push
xor
rolb
arpl
stc
xchg
cmp
test
pop
adc
cltd
cmp
test
out
imul
jno
and
jno
std
mov
js
pop
add
sahf
ficoml
push
cmp
ja
or
out
fiaddl
mov
xchg
test
ja,pn
addr16
pusha
loopne
or
jge
xchg
scas
push
sbb
stc
cmp
add
addr16
xchg
push
jo
jg
dec
mov
adc
test
dec
jno
sub
insb
orl
scas
lods
cmpsl
jo
adcl
pandn
inc
imul
scas
insl
outsl
cs
ds
mov
dec
jge
sub
mov
mov
sub
xchg
dec
mov
xor
dec
fcomps
movsb
mov
sub
and
sbb
mov
mov
cli
repnz
jno
push
or
scas
test
lock
pop
dec
jmp
hlt
popa
dec
jle
push
cmpsl
lahf
or
movlps
or
inc
dec
icebp
mov
inc
xor
inc
dec
mov
jo
inc
clc
push
sbb
sub
and
ror
stos
mov
jno
fs
cmp
clc
push
dec
loop
hlt
or
lods
sub
sub
mov
in
sub
xor
out
inc
xor
push
xor
xchg
imul
inc
cmp
pop
xor
jg
sti
outsb
in
or
cmp
adc
imul
sub
iret
sub
shlb
lret
pop
insb
ret
jecxz
inc
aad
add
scas
adc
adcb
popa
pop
pop
inc
outsb
inc
push
lret
xor
ss
das
jb
ja
es
fisttpl
lret
fists
jno
mov
js
js
out
xchg
pop
arpl
mov
stc
sub
push
cmp
in
jne
and
aam
xor
cmpsl
pop
ds
xchg
push
shl
or
insb
xchg
push
dec
je
push
lret
stc
jge
lcall
dec
push
popf
mov
mov
xor
test
pop
pop
and
ror
test
mov
subb
inc
shll
test
add
inc
xor
iret
aaa
cwtl
lcall
aad
jge
push
inc
adc
js
in
in
fs
mov
scas
ret
pushf
fcomps
pop
sub
mull
fldl
jmp
jnp
dec
addr16
lea
lods
dec
xor
aad
aam
mov
mov
lds
push
mov
dec
call
mov
repnz
dec
sahf
out
jmp
daa
hlt
xor
add
push
je
lea
adc
data16
rclb
orl
mov
cwtl
add
inc
or
sti
mov
dec
repnz
ficoml
fs
mov
mov
adc
movsl
lds
sub
aaa
push
jns
enter
mov
daa
jmp
out
loopne
mov
sub
or
adc
jns
pop
mov
int3
imul
push
dec
add
aad
clc
pop
lcall
test
scas
lahf
cli
jp
iret
call
push
in
mov
and
sub
lods
loop
push
cmp
or
stos
add
jmp
mov
xor
adc
push
addr16
dec
aam
mov
lcall
in
cmp
je
cmp
rolb
add
std
rcrl
lea
ss
fwait
sbbl
movsl
into
push
sbb
and
mov
daa
int
nop
cld
add
call
push
jmp
sar
incb
popf
jg
test
jne
dec
or
test
imul
jge
mov
fldenv
pop
arpl
push
fsubrs
and
and
pop
mov
pop
arpl
lret
leave
ljmp
sub
push
dec
push
test
in
mov
inc
repz
je
jmp
inc
adc
ds
jl
shl
mov
adc
mov
ffree
add
into
jo
sub
jle
sub
int3
xor
fs
subb
pop
xor
dec
xor
xchg
out
aaa
jns
std
push
faddl
rcll
aam
clc
roll
or
pop
and
jno
dec
jecxz
mov
cmpsb
scas
sub
rol
jl
test
sbb
js
jecxz
pop
ret
imul
lods
insb
xchg
dec
mov
and
ss
xchg
jb
into
and
push
in
add
fstpl
addr16
mov
aam
xchg
ljmp
add
icebp
mov
out
repnz
cwtl
lea
pop
inc
popf
inc
in
xchg
lock
popa
push
mov
sub
sub
addr16
sbbb
fisubs
cld
rclb
mov
xchg
cs
movb
xor
xor
pop
sub
cmp
loopne
hlt
sub
push
adc
rep
mov
mov
jle
dec
cmpsb
and
and
mov
cmp
mov
shll
cmpsb
out
cmp
adc
or
movsb
jle
pop
and
cld
and
outsb
xor
ror
test
push
gs
adc
jl
pop
push
out
lods
xor
cli
fldcw
dec
loopne
movsb
mov
xlat
pop
xchg
mov
mov
insb
push
outsl
cld
lcallw
addr16
pextrw
and
stos
movsl
xor
insl
das
ficomps
mov
mov
arpl
data16
adc
jmp
aaa
repz
and
loope
push
mov
pushf
rcrl
clc
jns
out
jnp
mov
xchg
mov
sbb
das
sti
leave
arpl
mov
pusha
enter
insl
arpl
das
or
addb
icebp
or
mov
mov
sbb
movsl
adc
adc
jle
xchg
jbe
dec
pop
in
lds
lods
sbbl
shrb
rol
cmpsb
cmp
lahf
rcll
mov
inc
or
repnz
in
xchg
lret
mov
punpckhwd
mov
in
pop
adc
jp
mov
mov
scas
imul
outsb
int3
out
ret
mov
test
push
add
xchg
push
call
fs
xchg
repz
and
out
sahf
gs
fdivs
fildll
pop
mov
push
cwtl
cmpsl
les
mov
lods
mov
cld
mov
push
push
add
dec
push
lods
in
out
xor
dec
ret
outsb
and
xchg
inc
loope
inc
pop
imul
pop
jecxz
pop
jb
repz
mov
mov
pop
mov
out
das
jl
push
cmpsb
xchg
scas
dec
pusha
es
or
ss
mov
sub
adc
push
stos
adc
outsl
bound
lahf
pusha
sub
fsubs
lods
test
sub
jno
sbb
inc
push
pop
dec
adc
pop
mov
or
push
pop
int3
scas
pop
test
push
sti
pop
stc
mov
lretw
movsl
mov
fisttpll
filds
jp
mov
mov
push
xchg
dec
jo
sahf
jmp
popa
cmpsb
mov
or
push
cld
adc
mov
negl
das
dec
in
int
aaa
aad
cmp
xchg
jle
popa
xchg
or
mov
ljmp
push
or
cmpb
popf
xor
leave
orl
and
clc
mov
cmp
mov
xchg
mov
call
pop
xchg
xor
push
dec
jne
fsubs
mov
mov
fistpll
mov
jecxz
sbb
mov
and
insb
mov
mov
mov
dec
push
sbb
and
mov
dec
pop
pop
and
inc
jl
arpl
jp
jmp
cli
inc
fwait
jecxz
lret
mov
lcall
ds
dec
popf
pusha
lods
int
mov
xchg
sub
xchg
inc
shrl
mov
xor
pop
movsl
mov
push
add
mov
cmp
push
roll
mov
or
gs
insl
in
repnz
dec
movsl
push
into
imul
sbb
jge
push
inc
xchg
stos
cmp
dec
gs
aas
rol
in
testl
and
shlb
inc
mov
in
imul
add
and
call
pop
out
mov
adc
dec
jle
ss
popa
aad
xchg
sub
dec
and
xchg
pop
mov
and
stc
and
ds
test
or
jno
pop
jnp
insb
loope,pn
pop
enter
mov
jmp
or
in
or
or
add
mov
or
mov
scas
aad
je
sti
add
cwtl
jge
xchg
mov
cmpsb
pusha
mov
mov
jbe
xor
movsb
xchg
rorb
out
xor
data16
cmp
fldlg2
test
shll
sub
sub
xor
in
or
loope
clc
fsubl
inc
push
ret
loop
int3
popa
mov
inc
dec
arpl
lds
aam
xchg
rolb
orl
push
out
push
lock
inc
dec
dec
or
sub
icebp
es
cmc
mov
imulb
jb
imul
test
scas
mov
and
insl
ffree
cmp
jg
ds
xor
nop
mov
test
cld
leave
popa
daa
mov
les
sbb
push
test
mov
daa
aad
pop
cmp
popf
rcl
dec
xor
push
jne
nop
sbb
movl
push
or
or
repnz
mov
dec
fcomps
and
inc
or
mov
in
cmpsl
ljmp
aam
lahf
pushf
push
inc
adc
mov
stc
dec
pop
pop
and
andb
jg
jno
std
or
push
mov
imul
jbe
jo
xchg
cmp
push
ret
xchg
dec
sbb
shll
test
mov
mov
cmp
out
cmp
and
aad
je
push
push
mov
popa
ja
fwait
imul
lret
xor
aas
fistpll
js
jno
jnp
cmpsl
pop
mov
addr16
mov
aam
xchg
lahf
test
dec
jle
scas
fsub
or
div
mov
test
arpl
addr16
sbb
js
jp
into
fcmovnb
pop
les
in
aad
notl
mov
jns
movsb
xor
sbb
sbb
or
or
daa
dec
and
leave
xor
mov
outsb
mov
or
cld
adc
ss
mov
or
imul
mov
addr16
xchg
das
repz
xor
push
fnstcw
mov
pop
and
imul
pop
outsl
inc
cmp
scas
push
mov
pop
imull
adc
dec
cmp
std
fmul
int
mov
adcl
es
cwtl
xchg
mov
add
les
sbb
jmp
loop
push
inc
pop
cmp
adc
inc
mov
les
xlat
out
pop
mov
push
mull
push
loopne
add
mov
xor
pop
push
test
mov
jb
mov
imul
pop
jae
cltd
into
add
sbb
and
xchg
outsb
rclb
mov
loopne
and
push
fldl
dec
mov
arpl
sbb
test
fisttpl
outsl
repz
divps
mov
mov
clc
or
fildll
push
scas
pop
scas
lret
rorl
add
mov
imul
xchg
cmp
into
lods
scas
lahf
cmc
fcoml
add
mov
loop
push
rorb
leave
pop
dec
cltd
push
sbb
push
jnp
es
and
push
mov
mov
stos
and
aad
adc
fisubs
sbb
push
or
sub
sarl
xchg
shll
jle
mov
pop
pop
pop
mov
aam
adc
iret
pop
imul
iret
inc
adc
movsb
ret
sub
jg
data16
decl
cmc
inc
xchg
or
pop
inc
xor
frstor
sub
jp
or
mov
cld
lds
xchg
push
cwtl
push
dec
sub
in
pop
mov
adc
push
jbe
shrl
insb
jp
and
or
fidivrl
or
jns
push
jle
cmp
testl
movsb
jb
cli
pop
jecxz
inc
gs
and
push
jp
mov
sbb
mov
insl
inc
pushf
push
xchg
in
arpl
push
mov
jg
sub
push
cli
adc
pop
sbb
add
arpl
aad
inc
mov
inc
xor
subb
inc
test
push
aaa
mov
fisubs
dec
lret
aam
push
jl
cmp
jbe
stos
sbb
pop
fmull
sbb
mov
jbe
lcall
adc
aas
mulb
orl
sbb
xchg
and
sbb
inc
loop
mov
fbstp
add
push
push
insb
dec
mov
push
lret
mov
mov
shll
fst
and
data16
out
add
adc
arpl
std
or
cmp
faddl
testb
test
add
xorl
data16
lret
leave
dec
cmpsb
cmp
outsb
dec
leave
jno
inc
push
pusha
jne
dec
lret
add
adc
and
outsb
out
sti
in
jb
adc
andb
inc
push
inc
sbb
xor
leave
add
fcoms
fcomps
loop
and
lret
and
push
in
xor
jns
repnz
adc
loop
rclb
in
lock
dec
sub
add
push
xchg
cmpsl
inc
xchg
or
adc
lds
ret
and
or
dec
shll
cmp
addl
add
sub
push
into
sbb
shl
and
jb
popf
inc
in
mov
out
xlat
loope
inc
inc
push
pop
add
cmp
stc
adc
pop
jno
insb
outsl
js
pusha
inc
jae
call
mov
shlb
fs
sahf
loop
mov
imul
ja
xchg
packssdw
adc
and
xchg
out
and
push
out
inc
xor
mov
jle
ret
cs
adc
out
shrb
mov
shrb
jne
and
js
or
mov
xor
sahf
and
mov
dec
mov
adc
shrb
add
dec
jne
ret
and
and
add
icebp
movsl
stc
pop
pop
push
sub
dec
cmp
jnp
or
leave
push
call
mov
lahf
xchg
cmp
jnp
dec
lcall
rorb
pop
jmp
pop
sbb
pop
mov
aas
ljmp
sbb
lret
or
sahf
sti
or
ret
add
cmp
mulb
mov
out
cmp
jo
add
jmp
adc
adc
dec
push
cmp
mov
pop
jno
hlt
or
fnstcw
and
pop
add
imull
popa
inc
cmc
sbb
jle
add
cmp
add
push
cmpsb
sbb
dec
mov
jne
loopne
ljmp
ret
out
add
and
lea
rol
pushf
fdivl
cwtl
push
cmp
dec
sub
ljmp
testb
dec
into
scas
dec
out
sbb
sub
lods
sub
adc
jle
repz
fnstsw
xor
sbb
adc
mov
int
subb
shl
roll
lcall
sahf
mov
jecxz
xor
xchg
lea
imul
mov
jae
les
dec
cmp
shrl
push
arpl
cs
push
cld
in
lock
jle
mov
and
ljmp
jne
imul
jns
jbe
shlb
mov
push
out
jbe
fadd
ds
mov
ds
adc
xor
mov
lock
jmp
into
add
psubd
push
cmp
sub
icebp
adc
jns
jecxz
insb
js
sbb
das
push
aas
pop
mov
jne
repnz
jp
add
push
in
adcl
add
add
leave
call
mov
jnp
ficompl
outsl
in
push
mov
fbstp
add
xchg
lahf
cmpsb
cmp
fnstcw
push
ret
adc
int
inc
cmpsl
jb
jbe
pop
movb
add
sub
pop
scas
rol
or
sbb
inc
cmp
jno
add
sbb
or
push
jp
lret
cmc
cltd
sub
adc
icebp
pop
sarl
xor
sbb
rol
adc
ss
sub
adc
mov
add
stos
sub
aas
jmp
out
jae
lock
mov
dec
icebp
lock
push
bound
mov
bound
cmpb
call
movsb
pop
ret
adc
aad
mov
add
mov
inc
mov
mov
dec
ljmp
xor
loop
loopne
imul
stos
sub
fisubrl
pop
test
popf
sub
fcomps
mov
pop
cld
cwtl
or
in
test
sub
mov
mov
dec
jecxz
inc
cmp
mov
xor
les
adc
mov
pop
scas
pop
sbb
sub
out
fwait
and
mov
in
stos
fcomps
mov
fimull
data16
push
test
or
sub
arpl
daa
adc
lods
lds
xorb
negb
mov
dec
ret
pop
or
sbb
bound
test
mov
push
dec
and
or
addr16
std
jno
lds
add
pusha
jge
push
lahf
jbe
push
adc
push
xchg
mov
ja
jle
lcall
mov
and
sbb
add
leave
cmpsb
out
loop
add
ret
and
cmc
lods
mov
sbb
mov
fmuls
pop
inc
sbb
or
icebp
mov
mov
popa
xchg
iret
loopne
pop
push
and
jecxz
cmp
and
xor
ds
xor
xor
popf
pop
xor
mov
adc
push
out
into
repz
in
and
fstl
cmp
cs
daa
push
pop
jbe
dec
inc
int
ja
and
fwait
adc
mov
dec
mov
out
jecxz
cmp
jnp
push
scas
push
jmp
arpl
xchg
sbb
inc
scas
cmp
mov
aas
mov
popa
shl
xlat
push
cmpsb
movsl
jb
adc
rcrl
or
or
push
cmp
mov
xchg
pop
inc
movsl
sub
pop
pop
daa
jle
push
into
jbe
mov
push
dec
sbb
test
aas
shl
xlat
mov
jns
add
movsl
xchg
inc
repz
test
pop
add
mov
jge
mov
movsl
pop
mov
cmp
ret
sbb
xchg
sub
mov
fcomps
loop
mov
sbb
jo
aas
sbb
mov
add
test
fidivrl
push
ret
xchg
push
jle
cmc
mov
lods
testl
mov
in
mov
int
ret
mov
lea
dec
xchg
add
adc
flds
and
repz
jg
std
mov
in
loop
dec
and
enter
add
fldl
jg
mov
inc
fisttpl
ja
adc
icebp
shl
add
movsb
push
js
dec
mov
inc
insb
ljmp
outsb
outsb
daa
outsl
sbb
mov
jecxz
movsl
ljmp
jge
out
push
stos
in
mov
mov
ja
mov
sbb
cmp
call
mov
gs
fsts
mov
push
outsl
xor
repnz
sub
icebp
dec
jns
xchg
xor
inc
mov
xchg
fs
sbb
cwtl
fs
and
or
xchg
cmp
shl
lods
jmp
sub
mov
fistl
in
jb
call
xchg
pop
fistl
sbb
call
sbb
lods
jl
and
call
mov
sub
inc
xchg
xchg
mov
loop
mov
test
add
outsl
jb
scas
mov
fucomp
sub
fiadds
inc
mov
add
mov
cmpsl
repz
mov
adc
out
fisttpl
mov
xchg
jmp
push
je,pn
enter
mov
pop
sub
mov
outsl
push
roll
add
pop
in
pop
clc
dec
cmpsl
dec
mov
jmp
rorb
aam
js
leave
sub
pop
insl
ret
mov
outsl
stos
mov
leave
pop
lret
stos
out
stc
call
xlat
outsl
inc
mov
fs
inc
mov
in
dec
roll
enter
inc
clc
imulb
hlt
mov
sub
mov
ja
shll
mov
mov
popa
xor
sbb
cmp
imul
sub
and
repz
sbb
popf
dec
adc
pushf
or
scas
sbb
fs
loopne
and
mov
lret
fadd
adc
aas
mov
pop
sub
in
mov
pop
rcrb
iret
movsb
arpl
mov
daa
std
shl
xchg
push
test
test
xchg
aam
rclb
mov
adc
insb
push
mov
repnz
push
xchg
sahf
and
mov
aas
pop
mov
adc
outsl
and
inc
and
outsb
test
mov
or
inc
sahf
cmp
fildl
sbbb
mov
mov
or
in
push
int3
test
push
jp
mov
adc
sbb
pop
pop
mov
cltd
push
fxch
fwait
push
test
and
mov
shl
jbe
loope
fxch
leave
inc
std
loope
push
adc
xchg
xor
sbb
push
cmc
fcmovnu
movsb
js
rolb
leave
pushw
push
mov
inc
imul
pop
daa
jne
jae
inc
add
mov
push
dec
mov
sahf
xlat
sbb
sti
cmp
and
fwait
in
lock
data16
dec
sbb
loop
push
cmp
inc
pop
stos
xor
ja
sti
sbb
xchg
or
std
xchg
mov
shlb
mov
push
push
adc
sub
jnp
adc
xor
cmp
outsb
xchg
sub
aas
out
adc
js
jae
add
and
or
mov
xchg
cmp
lret
frstor
rolb
sub
dec
sbb
xor
repz
sub
sub
pop
mov
les
scas
push
sarl
ss
sbb
pop
push
push
insl
fs
das
movsb
jnp
jo
out
div
cmpsl
adc
mov
jl
out
adc
das
mov
push
xchg
in
jb
std
sbb
iret
dec
dec
fs
ds
xor
push
call
add
jb
cmp
addr16
xlat
xor
leave
dec
lods
lods
das
xchg
jmp
cltd
les
inc
jecxz
adc
std
xorb
test
or
mov
mov
sbb
and
inc
inc
or
sub
push
push
adc
ja
adc
mov
lods
jmp
leave
aad
sbb
hlt
mov
cmp
dec
jnp
jbe
sbb
dec
push
cmc
fsubr
pop
imul
hlt
and
xchg
jb
loop
add
mov
fs
cltd
ljmp
adc
mov
stos
dec
lcall
ffree
mov
int
lcall
imul
push
pop
add
mov
mov
in
iret
es
push
rorl
adc
or
inc
rclb
call
in
mov
test
pop
arpl
dec
pop
repz
mov
jb
test
sub
pop
sub
mov
iret
xchg
mov
or
mov
loop
lret
test
or
cmc
rclb
stc
sub
pop
in
and
jae
inc
mov
sub
shl
std
call
mov
clc
lret
sbb
in
sub
dec
test
xchg
adc
movsl
mov
push
roll
or
xchg
popa
scas
cmp
push
iret
push
mov
pop
jne
lea
xchg
popf
or
insl
adc
je
int
lcall
mov
xchg
ret
pusha
daa
outsb
xlat
mov
sub
jle
or
movsl
dec
lahf
outsl
inc
das
and
fisttpll
jns
or
mov
xor
lcall
sub
enter
push
xchg
in
enter
xchg
test
fiaddl
ret
push
inc
jbe
iret
inc
mov
push
xchg
call
nop
cmp
es
dec
rolb
jns
sbb
ficoml
xor
in
imull
cltd
test
dec
stos
cs
ret
mov
xor
nop
loop
rcll
mov
aaa
mov
repnz
push
divl
cmp
inc
addr16
lcall
in
jne
cmp
lret
push
push
add
lret
test
lods
or
mov
out
pop
sahf
dec
jl
dec
push
sbb
push
test
jb
lahf
pop
lds
cli
cmp
jle
or
out
xchg
sub
mov
and
std
bound
push
push
test
push
popa
pop
push
in
nop
addl
or
clc
notb
ljmp
mov
cwtl
rol
shrb
mov
cwtl
lods
sub
ficomps
push
je
dec
test
push
jbe
insl
bound
lret
push
dec
aad
nop
sbb
pop
pop
sbb
adc
addb
fs
lods
movsb
or
add
mov
loope
sbb
jae
and
cli
pop
and
push
sub
lret
in
mov
sub
sub
inc
mov
inc
pop
sbb
xchg
lcall
xlat
stos
scas
adc
or
push
mov
cmp
in
ret
add
cmpsl
push
addr16
cmp
cmp
ja
mov
jl
jmp
or
mov
mov
or
pop
mov
sbb
jne
and
loope
inc
mov
and
xor
movsb
sbb
mov
inc
testl
lods
les
je
mov
xor
mov
and
fwait
cld
mov
pop
dec
and
inc
xchg
cmpsb
fstl
dec
cltd
lods
xchg
push
lods
fcomip
data16
insl
es
mov
mov
mov
popf
inc
cmp
dec
mov
scas
inc
add
cld
rcl
or
and
xor
pushf
repz
sub
cltd
add
out
daa
sbb
cmp
jo
mov
pop
popa
rcll
cmc
std
fwait
bound
adc
shlb
mov
std
dec
imul
mov
dec
pushf
ss
xlat
fadd
inc
push
aad
and
shrl
rcr
cmp
jmp
mov
mov
adc
jne
test
mov
es
dec
leave
sbb
mov
cmpl
es
pop
cmp
xchg
icebp
pop
aam
dec
pop
imull
out
xor
xor
stos
xchg
push
ret
jb
popa
mov
and
das
sbb
mov
cmpsb
adcb
lds
xor
sbb
and
test
stos
push
jae
out
mov
int3
mov
xchg
flds
shr
popf
cmp
mov
into
hlt
rcrl
push
push
shrb
lret
lods
repz
dec
movsb
xor
push
jo
insb
aad
and
sub
inc
push
rcr
push
pop
adc
ss
sub
imull
hlt
adc
adc
imul
xchg
cmp
sahf
loop
loopne
jmp
enter
xor
sub
jl
mov
cmc
out
cmc
mov
mov
mov
mov
sti
cli
mov
sub
adc
test
mov
jge
mov
adc
ret
pusha
and
jae
jecxz
inc
mov
adc
fwait
jp
pop
inc
test
jmp
dec
scas
cmp
int3
ret
cmp
fnsave
movsb
pop
mov
bnd
cmp
movsl
jl
mov
stos
in
cmpsb
pushf
in
adc
call
xor
arpl
cmc
xchg
inc
dec
das
pop
jno
faddl
rolb
adc
cmp
and
clc
pop
dec
sub
aaa
lock
loopne
pmaxsw
fnsave
xor
divb
pushf
pop
push
xor
arpl
xchg
subb
aas
push
push
lods
push
inc
ljmp
xchg
dec
lret
and
xorb
dec
cmp
lea
pop
xor
pop
dec
inc
enter
push
iret
push
jp
pop
push
enter
test
pop
xor
in
add
adc
sub
shr
mov
ja
pop
mov
std
sub
sahf
xor
cs
mov
pushf
xchg
adc
mov
daa
in
push
sahf
cld
xlat
jmp
sbb
and
mov
inc
loope
stos
dec
orb
aad
jns
mov
xchg
inc
in
aaa
mov
xlat
dec
jmp
sbb
xchg
fwait
lret
add
sbb
fldenv
push
push
loope
out
sub
ljmp
mov
mov
xchg
xor
lahf
mov
scas
mov
xor
cmp
shll
and
loopne
adc
dec
fistps
movsl
repz
jl
jae
and
fwait
lret
lods
pop
dec
nop
sbb
sbb
and
cmp
imul
jle
in
dec
leave
test
mov
je
xor
cmp
sub
aam
xchg
push
addr16
xlat
add
stos
sbb
cmovno
or
ficoml
push
xchg
xchg
and
shlb
mov
cld
jl
pop
scas
push
push
mov
sarl
mov
jnp
cmpsb
sbb
sub
add
sbb
push
add
jne
fwait
xor
imul
dec
sub
inc
pusha
aas
jo
outsl
dec
push
pop
scas
aad
out
in
arpl
inc
fsubs
pushf
sbb
fcmovbe
jns
dec
fisubrl
lret
mov
insl
jl
add
rorl
shlb
lahf
cmp
outsl
movsb
test
jecxz
sub
lret
std
xor
jae
fiadds
pusha
cmc
add
lcall
xorl
push
je
inc
incl
mov
jnp
jnp
mov
aas
jb
jg
mov
add
jmp
aam
and
cmp
inc
sub
xor
stc
das
loope
lock
jns
adc
stc
mulb
or
aad
aad
mov
decl
xor
jae
inc
push
cmp
mov
fisubs
enter
cwtl
outsl
mov
bound
ljmp
xchg
shlb
adc
test
xchg
add
fcom
push
stos
insb
hlt
mov
pop
cli
xor
fisubl
cmp
ret
insb
push
or
cmp
test
lahf
das
xor
scas
cmpl
push
iret
mov
sbb
dec
mov
jbe
ret
jbe
and
xchg
add
rdpmc
dec
adc
repz
mov
cmpsb
dec
in
pop
xor
dec
dec
jp
movsb
call
scas
lcall
push
lds
je
jno
jl
dec
mov
popa
outsb
repz
push
xchg
cmp
rcl
or
pushf
xor
lret
fisubl
xor
or
adc
addr16
mov
sbb
ljmp
cmp
adc
xchg
aas
lds
and
repz
cmp
imulb
mov
push
dec
adc
das
and
iret
cmp
or
mov
cltd
and
sarb
into
mov
add
xchg
ja
mov
mov
mov
cmp
fcomp
lcall
scas
mov
inc
js
xor
mov
aas
and
mov
push
andl
pop
or
or
addr16
adc
scas
sub
jecxz
push
xor
ror
andb
cmp
mov
fwait
xlat
sahf
inc
insl
xor
ss
ret
push
cmp
push
add
xchg
insl
in
scas
arpl
adcb
inc
lret
test
dec
ljmp
stos
icebp
sbb
sub
je
cltd
fninit
sarl
add
xlat
mov
in
incb
inc
testb
faddl
mov
cmp
jne
int3
nop
in
xchg
test
mov
dec
sbb
in
push
es
or
inc
push
or
mov
in
fs
rclb
in
movsb
aam
pop
loop
lahf
notl
adc
out
dec
insl
stos
push
cmp
dec
jl
inc
popl
xchg
lods
push
shrl
pop
daa
test
mov
cltd
dec
hlt
sahf
dec
add
mov
add
dec
jb
dec
ficompl
jl
dec
insb
fs
push
push
jbe
sahf
cmp
repz
in
jne
mov
xchg
pop
into
or
sbb
leave
loope
jl
inc
sub
andl
or
in
cli
cmp
pop
enter
popa
adc
out
cmp
mov
dec
cs
stos
clc
jb
in
rcrl
inc
outsb
fwait
lret
adc
jmp
xor
mov
xchg
imul
dec
xchg
push
pushf
test
iret
fildl
sub
xchg
push
icebp
sub
push
lock
dec
ret
pop
outsl
mov
add
into
loope
sub
push
xor
mov
mov
int
push
jecxz
push
push
adc
scas
mov
inc
dec
icebp
out
aad
inc
int
aas
rcll
jmp
adc
cmc
sbb
insb
mov
fwait
mov
fisttpll
xchg
or
in
pop
dec
cltd
adc
stos
jecxz
push
sbb
adc
inc
cmpb
xorb
stos
in
pop
fsts
dec
push
out
mov
inc
dec
scas
mov
mov
mov
ds
stos
inc
call
cmp
loope
cwtl
sarb
ret
jmp
and
enter
jo
mov
adc
js
sub
addr16
mov
inc
inc
sub
push
jo
loop
out
mov
ret
mov
ss
adc
aad
bswap
mov
mov
and
ficomps
sbb
xor
or
pop
inc
lock
sbb
call
and
pop
xor
je
pop
mov
int
nop
and
cmc
cmp
sub
orb
ret
dec
in
pmaxsw
fnstsw
add
mov
push
imul
and
lret
add
cmp
leave
dec
adc
mov
xchg
push
imul
mov
push
mov
hlt
mov
cli
cmp
adc
scas
roll
test
cmp
cltd
push
in
cltd
icebp
mov
xor
push
sahf
ljmp
lods
les
incb
addl
leave
and
jp
jecxz
or
pop
je
xchg
adc
lods
movsl
insl
decb
es
insb
push
mov
xchg
bound
sbb
movb
mov
sbb
pop
mov
icebp
movsl
js
pop
cmc
pusha
xor
in
ja
adc
mov
call
mov
push
into
xchg
dec
imul
mov
popf
xchg
mov
fbld
lret
daa
push
mov
mov
ja
pushf
nop
push
add
jp
xor
adc
lret
pop
in
push
mov
aam
sbb
dec
jp
aad
and
or
xor
xchg
movsl
cld
pop
fmull
lods
icebp
fnstsw
test
sbb
add
mov
push
stc
mov
addr16
pop
adc
pop
sbb
aam
mov
jbe
mov
scas
xchg
adc
idivl
pop
jg
out
adc
mov
outsb
push
popa
into
jae
push
enter
jle
addb
push
popf
in
mov
mov
in
add
leave
aam
or
mov
or
push
into
or
dec
mov
mov
sbb
push
jmp
lret
clc
aad
xchg
cmp
jns
xchg
or
je
push
fsubp
jnp
xor
xlat
pop
in
add
pop
inc
cmpsl
or
je
ss
push
mov
test
out
xor
jg
das
lods
stc
shrb
loop
int
pop
pop
pop
xor
xor
inc
xor
mov
mov
add
lret
mov
mov
out
push
jecxz
loopne
scas
inc
and
out
fistpll
mov
imul
imul
dec
adc
in
mov
jp
push
lret
cmp
push
jg
and
lock
fbstp
pop
jecxz
out
push
rclb
cmp
int3
sahf
sahf
inc
xor
or
inc
sbb
je
scas
loop
xor
inc
mov
ret
test
adcb
scas
sahf
fadds
subb
insb
lret
test
xchg
mov
mov
aaa
xchg
int
enter
lahf
or
adc
dec
mov
loopne
mov
mov
or
add
jnp
fsubl
call
jns
sbb
push
insl
iret
xchg
mov
std
enter
push
sub
push
cmp
loope
mov
mov
cld
jg
sar
pop
pop
inc
dec
fstps
out
mov
incl
ja
cld
xor
pop
lcall
dec
pop
sbb
mov
push
mov
stos
sbb
std
dec
jo
insb
xchg
ss
or
pusha
test
mov
inc
cmp
mov
xchg
pop
imul
pop
mov
mov
add
add
aas
inc
xchg
jle
sbb
xchg
push
pop
fstpl
cmpsb
push
inc
jno
clc
stos
or
inc
add
inc
add
cmp
int
dec
mov
push
add
int3
pop
gs
push
in
mov
popa
icebp
lea
xchg
inc
ss
cmc
jmp
xchg
or
and
cltd
dec
xchg
dec
outsl
sti
data16
jmp
or
rolb
fiadds
rorb
jno
int
push
scas
adc
pop
jns
adc
rcrl
and
push
pop
mov
mov
sub
mov
imul
cmpsb
flds
push
call
inc
xchg
aas
std
pop
int3
sbb
xorb
sub
mov
rcr
mov
push
fists
in
mov
push
cmpsl
dec
vmovd
inc
adc
ret
sub
mov
andl
lods
in
mov
dec
or
adc
jmp
sub
xchg
loope
stc
xlat
xchg
ret
icebp
push
mov
mov
test
sub
jnp
idivb
push
add
movsl
das
rcll
cmpsl
adc
hlt
mov
add
xchg
push
xchg
in
jb
aas
mov
cmpsb
jmp
ss
les
test
mov
or
outsl
inc
mov
push
jle
xlat
inc
shlb
aas
mov
scas
scas
leave
rolb
lret
sbb
sub
js
and
push
push
jb
jne
sub
add
pusha
pop
xchg
dec
cltd
fimull
cmp
popf
mov
pop
stc
imul
out
and
fwait
dec
fst
cmc
mov
arpl
cli
aad
test
das
jmp
call
adc
mov
or
lcall
sub
addr16
jo
sbb
daa
xor
sbb
mov
mov
into
cmp
or
repz
pop
jne
jne
pusha
mov
je
push
sti
out
arpl
movsl
inc
and
movsb
dec
clc
das
pop
xor
lea
pusha
mov
rorb
sbb
fcmovbe
test
out
sbb
adc
dec
mov
mov
mov
push
movsl
mov
adc
decb
ja
inc
inc
les
mov
idivb
mov
ret
push
push
test
xchg
or
sub
push
fstl
xchg
inc
lahf
inc
pop
enter
cmp
sbb
xor
scas
push
mov
mov
dec
cmc
mov
xor
cmc
pop
xchg
test
jge
mov
mov
xor
stos
xor
sub
add
leave
mov
sbb
imul
repnz
cmpsl
hlt
test
test
dec
lcall
mov
sub
outsl
sub
ficoms
jl
mov
push
and
daa
mov
js,pn
arpl
test
mov
mov
stc
aas
jnp
inc
sbb
scas
arpl
xor
sbb
jge
jge
adc
push
inc
aad
vmovdqu
xlat
xchg
lret
pop
jg
push
push
sahf
fcmovnbe
and
outsb
fcomp
adc
push
dec
push
andl
jns
into
ret
sbb
out
iret
fdivp
xor
cmp
stos
sub
inc
push
adc
jns
jbe
inc
jle
mov
inc
inc
mov
leave
inc
pop
pop
cmp
cmpsb
mov
repnz
pop
orb
push
mov
push
lods
stc
imul
je
mov
lods
push
orl
addl
push
pushf
cs
jno
inc
scas
scas
mov
jae,pt
sub
scas
jns
adc
call
push
stos
mov
add
push
ret
sbb
mov
repnz
ret
leave
fsubrs
sahf
xchg
ds
outsb
fcmovnbe
sub
int
push
push
push
mov
add
sbb
jmp
push
int
push
ljmp
jle
flds
mov
lods
add
imul
daa
into
scas
addb
fisubs
dec
mov
mov
addl
fstpl
pusha
jp
adc
mov
repz
test
lea
fisttpl
jae
mov
adc
sub
fldt
and
iret
or
fmull
enter
fiadds
pop
setns
loop
mov
inc
lock
ds
or
mov
or
mov
xorb
lds
and
xchg
adc
scas
mov
cltd
fmuls
ds
repz
clc
nop
fnstsw
jno
loope
popf
jnp
in
leave
push
jns
mov
scas
das
xlat
es
scas
add
mov
stc
sub
stos
ss
fsubrs
dec
xchg
xchg
or
sub
enter
mov
push
movsb
cmc
shll
leave
lahf
xor
andb
jecxz
dec
mov
fs
sbb
pop
sub
and
loopne
xor
test
mov
add
jne
dec
popf
les
in
and
decl
ljmp
lods
add
adc
cmp
mov
icebp
or
cli
out
mov
sbb
add
adc
ds
xchg
push
pop
cmp
push
addr16
add
insb
stos
push
inc
or
int3
xchg
subl
cmp
fcomps
sbb
mov
mov
lret
mov
test
out
addr16
lds
sub
inc
scas
stc
int3
fmulp
xchg
inc
jo
push
xor
xor
push
arpl
out
fsts
sbb
xchg
movsb
ljmp
std
mov
test
fwait
or
pusha
sti
pop
adc
sbb
out
dec
imul
xchg
subl
jnp
and
cwtl
add
mov
testb
aad
xor
fsub
rorb
sbb
mov
mov
push
and
xor
sub
movaps
addr16
xor
jb
adc
cld
or
shl
adc
dec
jge
push
mov
cld
sbb
sbb
mov
xchg
mov
jnp
mov
xlat
jne
and
loop
and
packsswb
test
in
xchg
cld
mov
pop
mov
sbb
jbe
jle
lcall
iret
mov
mov
hlt
or
outsb
into
das
dec
mov
or
xchg
xchg
mov
dec
inc
ds
iret
inc
in
lods
lods
adc
or
sub
xchg
or
je
hlt
mov
mov
pop
push
jmp
add
subb
xchg
sub
sarb
or
fwait
nopl
in
xor
xor
ja
mov
pop
out
rorb
fdivl
push
pop
dec
push
xor
popa
xchg
outsb
and
rcr
sbb
jo
enter
scas
mov
xchg
dec
mov
clc
in
mov
iret
in
dec
ja
mov
add
loope
jmp
push
jmp
loopne
add
or
cmc
mov
addr16
xor
mov
add
loopne
and
mov
fldcw
cmpl
or
inc
cmp
push
in
std
mov
ds
cmp
into
sti
outsb
andps
xchg
in
or
sahf
xor
xchg
jb
mov
int3
outsl
push
into
aam
push
cmp
pusha
lds
lock
dec
and
push
pop
popf
dec
push
bound
jge
je
add
push
repnz
rorl
jge
sub
mov
sti
repnz
sub
cs
cmpsb
incl
push
xchg
pushf
fmuls
cld
mov
mov
push
nop
or
in
xlat
jecxz
fists
adc
xchg
in
aas
cmpsb
adc
adc
mov
inc
mov
in
sti
scas
add
and
out
push
push
in
jmp
sbb
dec
sti
jo
idivl
sbb
pop
nop
lods
jb
std
mov
addb
mov
cmpsb
hlt
adc
jne
inc
fchs
xchg
adcb
mov
test
jno
stc
cmp
adc
dec
lahf
outsl
std
mov
and
cmc
xor
in
scas
scas
xchg
fwait
cld
jo
xor
cli
fimuls
stos
cmp
inc
fadds
lock
lret
sub
dec
cmp
jg
push
dec
stc
sub
arpl
or
dec
jnp
mov
fsubs
xor
fmuls
inc
push
cmpsl
lahf
fucom
repz
mov
sub
mov
lds
sub
xchg
enter
push
out
jae
xchg
adc
push
ja
mov
sti
bound
jle
xchg
scas
popa
lar
and
pop
lcall
inc
inc
outsl
insb
dec
cmp
cwtl
mov
call
pop
out
mov
push
add
outsl
mov
push
sahf
mov
icebp
test
pusha
pop
test
arpl
inc
xor
mov
ja
mov
int
das
aam
call
leave
in
jecxz
dec
sbb
je
or
mov
lea
sub
lea
jbe
push
xor
test
jp
movsb
push
sub
aad
xchg
mov
sbb
ret
imul
repnz
jp
dec
sub
mov
ret
out
push
enter
stos
or
ret
out
pop
xlat
add
and
in
in
lods
fs
andb
xor
call
pop
xor
xor
sbb
cmp
scas
outsl
add
mov
in
push
lahf
adc
and
jo
mov
push
adc
testl
xchg
push
jbe
aaa
test
lods
mulb
imul
ds
or
and
fadd
adc
or
rcl
and
jmp
in
mov
into
pop
mov
mov
loopne
xchg
and
bound
inc
lret
lds
pop
js
xor
js
outsb
jno
fsubrl
inc
adc
enter
dec
inc
sub
sbb
inc
and
aaa
pop
fs
test
fsubs
bound
js
std
gs
jne
push
bound
ret
loop
adcb
sti
imul
addr16
mov
jae
sub
xchg
lock
out
mov
loopne
sbb
sbb
idiv
call
xor
lods
insb
rclb
cmc
pop
xor
jo
mov
inc
imulb
mov
mov
jge
mov
jl
and
cmp
xadd
arpl
in
or
insb
fdivs
or
xchg
cmp
push
lcall
dec
push
and
sbb
and
sarb
mov
and
pushf
out
pusha
add
inc
dec
mov
lods
push
int
out
pop
mov
stc
mov
adc
pop
xor
jge
and
adc
in
adc
ret
imul
dec
jg
push
push
jg
xor
rorl
stos
negb
push
jmp
push
mov
mov
dec
jno
fwait
inc
or
lock
push
inc
punpcklwd
popf
test
into
rorl
jo
mov
lds
pop
insb
sub
inc
xchg
test
and
add
xchg
pop
cli
shr
add
rcrl
mov
pop
inc
or
sub
das
xor
adc
cmp
cmp
mov
aam
shl
in
mov
adc
inc
sbb
jmp
push
jle
mov
adc
inc
bnd
hlt
lcall
xlat
sbb
mov
mov
push
pop
imul
mov
rcll
mov
notb
scas
jo
xor
cmpl
jb
pop
dec
icebp
mov
xchg
loope
sbb
in
test
mov
pop
dec
out
xchg
out
mov
dec
aas
mov
cwtl
pop
mov
lods
mov
pop
lea
push
pop
out
dec
lahf
fcoml
xor
xor
hlt
push
xchg
mov
in
cmp
add
rcl
imul
fwait
sub
aad
gs
mov
cmp
cmp
dec
in
pop
xchg
cs
ret
cwtl
add
cmp
push
xchg
cwtl
ret
mov
fadd
add
inc
xchg
lds
pusha
ja
push
or
popa
adc
cltd
sub
or
je
add
mov
std
or
push
mov
mov
divl
cmc
pop
rorb
mov
nop
ljmp
mov
sbb
push
and
lret
insl
insl
push
jo
push
addr16
dec
lds
xchg
or
push
js
and
bound
gs
cmp
lea
and
inc
orl
jae
cmc
push
xorl
fiadds
and
aad
mov
es
pop
xor
xchg
ficoms
cld
mov
cmp
imul
fs
outsl
jle
sub
in
cmp
neg
xlat
mov
inc
int
out
xor
jb
mov
push
sbb
add
xchg
dec
xchg
pop
scas
lods
xchg
jnp
xor
cmp
cmp
pushf
cmp
aam
aad
out
mov
mov
ret
add
fcoml
push
mov
sarl
pop
add
sti
dec
fcoml
or
pushf
imul
pusha
cli
das
cmpl
mov
adc
sbb
popa
mov
out
xor
xchg
push
xchg
lds
push
mov
and
jmp
sti
std
xor
loopne
fdivrl
repz
ret
xchg
sbb
xor
sub
js
test
cli
cmp
aas
jb
sbb
sub
inc
mov
enter
in
pop
push
or
dec
pop
cltd
orb
jl
xor
loope
push
or
rol
std
rcll
mov
pop
sub
sbb
data16
jl
add
movsl
pop
es
sahf
movsl
arpl
cmp
add
aaa
out
push
fldl
loop
mov
clc
lcall
xchg
sbb
sbb
cs
add
adc
test
cmpb
sbb
and
mov
shrl
mov
and
outsl
divl
or
and
rcll
stos
cmp
loop
ds
repnz
cs
stc
jg
leave
sbb
fldenv
xchg
xor
lods
pop
ljmp
aas
repz
or
xor
out
cmc
mov
jno
push
test
nop
rolb
jo
fmulp
push
popf
push
push
fcmovnb
fdivl
stos
xor
or
int
cmpsb
sbb
in
jmp
fstl
and
dec
dec
mov
stos
mov
lods
hlt
xlat
jb
lock
test
xchg
add
ds
jmp
outsl
ret
stc
inc
test
mov
pop
std
xchg
sub
jbe
out
jmp
jl
jnp
loop
je
mov
test
cmpsl
pop
add
and
cli
pop
fistpl
and
clc
push
pusha
jle
fisubrs
fwait
push
out
test
push
test
sbb
sub
add
mov
pop
lcall
nop
divb
lock
lcall
clc
pop
jmp
popf
lds
nop
pop
adc
loop
add
notw
inc
adc
cmp
jae
adc
lret
jns
lock
cmp
jbe
push
dec
fmull
xor
imul
xor
or
add
xorb
mov
mov
xor
or
xchg
dec
aam
imul
mov
push
jle
into
sub
stos
mov
sbb
or
enter
sbb
fwait
sub
jle
xchg
push
mov
outsb
cmpsl
xchg
incb
fistpll
inc
addr16
sub
test
cmp
and
add
mov
inc
in
sub
popa
sub
push
loope
lds
mov
and
lcall
into
or
xor
xor
aas
xor
call
lahf
call
lea
cmp
ret
jnp
dec
enter
jge
push
add
xor
stc
loope
aam
adc
sub
in
sub
pop
pop
jl
jne
xchg
ret
ja
rol
xlat
adc
mov
sbb
imull
dec
in
mov
icebp
mov
fs
xchg
dec
dec
mov
insb
mov
ror
shl
sbb
cmpsb
jo
das
movsl
xchg
mov
xlat
mov
fldenv
gs
push
inc
push
popf
mov
xlat
mov
outsb
add
push
es
into
lods
dec
and
pop
scas
pop
sub
mov
pop
jmp
pop
xchg
sub
fmul
scas
outsl
hlt
cld
add
mov
mov
mov
stos
fs
cwtl
dec
rorl
daa
jne
adcb
push
mov
pop
jno
xchg
sbb
fdivl
test
xchg
mov
repz
shlb
aad
fsubrl
ljmp
mov
enter
push
aam
imul
movsb
xor
insb
fs
or
xorb
or
shrb
push
jb
scas
ret
push
out
jl
push
mov
shll
sub
sbb
xchg
mov
inc
and
add
in
cs
lods
and
and
jp
push
or
jb
out
push
or
sbbb
mov
sarl
loop
sbb
imul
and
fimull
push
mov
loope
popf
fisttpll
stos
mov
addr16
fisubrs
addb
das
loop
xor
sti
sbb
push
pop
imulb
push
daa
nop
sbb
lods
test
fstps
mov
or
or
movsb
cld
scas
jge
dec
mov
mov
cltd
loop
aam
sub
push
cmp
mov
outsb
sbb
loop
mov
arpl
cmp
sbb
pop
xlat
xor
or
out
popl
push
addr16
jecxz
jne
outsl
and
pop
or
adc
jb
pop
inc
pop
repnz
pop
mov
outsb
cmpsl
dec
cmp
loopne
lods
popf
aas
sub
cltd
xor
scas
and
xchg
loop
or
fistpll
xor
cmpsb
inc
jae
movsb
and
out
inc
loop
stc
test
into
fisttpl
ss
sub
xor
test
or
xor
sbb
mov
dec
pop
cmp
ficomps
mov
adc
dec
mov
popa
dec
lods
xor
or
push
imul
outsl
fisubl
pop
movb
and
inc
jmp
stos
mov
outsb
pop
inc
cmpsl
lds
icebp
aaa
and
dec
out
mov
arpl
insl
fcoms
lret
xor
pop
lea
lds
fildll
lahf
sbb
testb
in
xchg
bound
mov
cmp
stos
stos
enter
stos
cmc
pop
pop
pushl
mov
push
cmp
int
and
add
push
cmp
shll
jb
fstps
add
sbb
add
mov
mov
jge
xchg
movsb
push
je
out
pop
adc
push
jb
shll
mov
pop
pop
mov
std
loopne
cmp
into
sar
lods
dec
movsl
jge
dec
pop
fsts
outsl
in
ds
icebp
es
cmc
outsb
push
fisttps
fsubr
mov
leave
and
arpl
jle
repnz
adc
dec
pop
test
jg
scas
ds
fs
clc
stos
pop
out
lods
add
daa
movl
scas
outsb
sub
xor
xchg
mov
inc
aaa
push
scas
jae
inc
movsl
test
and
inc
sub
dec
push
rolb
pop
and
mov
sub
xchg
xchg
jno
xchg
es
add
mov
into
lahf
imul
jne
xchg
addr16
or
sahf
jb
jnp
inc
sbb
push
adc
add
inc
shlb
in
cmpsb
add
fldl
mov
insl
add
mov
ret
inc
mov
mov
movsl
mov
jg
lds
mov
fs
imul
or
out
mov
adc
test
push
xor
lret
mov
sub
adc
sbb
add
jle
or
outsb
push
out
bound
lds
stos
out
lods
cs
sarl
jnp
xchg
inc
sahf
mov
test
add
stos
or
sbb
data16
stos
imul
push
and
cli
in
lcall
hlt
or
push
pushf
push
adc
mov
jp
push
jns
inc
dec
sbb
aad
incl
test
ljmp
sbb
sub
js
cmp
jl
adc
popf
push
inc
stc
in
insl
ret
inc
sub
ret
mov
aaa
pop
lods
add
enter
dec
std
jnp
mov
aaa
idivb
repz
out
mov
pop
dec
cmp
add
pop
scas
add
ror
push
mov
shrl
inc
out
loope
mov
jo
sub
or
xor
push
mov
insl
clc
xor
xchg
arpl
xor
stos
into
mov
lcall
xchg
inc
xchg
ret
or
jb
xlat
cmpl
push
xor
lock
int3
push
mov
adc
jbe
jo
jp
cld
mov
cmp
add
xchg
jp
out
bound
or
int
hlt
mov
or
sar
pop
mov
int
jmp
ja
addr16
stc
mov
xor
pop
mov
push
and
pop
jnp
add
add
push
cmc
in
movsb
xchg
dec
in
adc
aaa
mov
pop
sahf
push
pop
das
decb
in
cmp
ficompl
mov
nop
sub
cmp
jl
or
aaa
movb
sbb
sbb
sahf
mov
pop
dec
cmp
mov
mov
dec
pop
dec
jb
in
lret
imul
aas
or
inc
cli
xchg
dec
pop
addl
jmp
fwait
out
ud0
outsb
xchg
xor
jno
test
mov
jmp
in
dec
movsl
cli
inc
mov
jns
stc
cmp
push
mov
std
push
sti
mov
loope
icebp
pop
les
popa
jbe
push
xor
pop
push
mov
adc
cmp
pop
pop
loopne
sbb
jecxz
mov
fdivr
mov
sbbb
jmp
cmp
clc
inc
mov
mov
repz
lds
sbb
sarl
outsb
and
icebp
adc
and
lret
mov
clc
sbb
mov
xchg
stos
mov
push
or
loopne
mov
sbb
fwait
or
lds
jl
insl
dec
cmpb
pop
bswap
stos
int3
pop
push
cmp
outsb
sbb
sub
pusha
int
in
out
dec
cli
sbb
push
orb
daa
cmpsb
je
mov
dec
gs
stc
xchg
add
rcl
mov
adc
cltd
aad
mov
daa
jl
dec
push
lock
dec
cmp
jmp
dec
mov
pop
jmp
jl
shr
push
push
add
loop
fstpl
jmp
mov
mov
imul
icebp
stos
loop
mov
lret
mov
out
fcmovne
pop
cmc
inc
test
fs
das
xchg
arpl
mov
int
orb
popa
sub
rclb
inc
mov
loop
mov
sbb
test
pop
mov
jbe
bound
push
inc
enter
push
jns
dec
mov
test
push
jno
dec
jae
repnz
mov
adc
lret
movb
roll
jge
les
jmp
cmp
push
sbb
sti
jmp
cmpsb
ret
push
lods
sbb
std
fucomp
pop
repnz
cmpsl
pop
repz
ss
mov
or
push
mov
outsb
iret
mov
pop
bound
dec
mov
mov
int3
mov
loope
and
jne
loop
or
jae
fcmovu
push
je
push
es
mov
imul
es
sbb
into
sbb
fsubs
dec
sar
push
ret
inc
stos
and
sbb
cmpsl
out
inc
cmp
jg
test
add
pop
data16
popf
sti
data16
xor
aaa
ret
mov
xchg
adc
inc
and
aas
jb
pop
repnz
cmp
aaa
and
mov
pusha
lea
pop
xor
pop
pop
and
xor
daa
jns
pop
xor
icebp
leave
mov
xchg
jecxz
sbb
testb
or
and
repnz
movb
dec
sub
push
cmp
inc
push
jns
clc
cltd
push
sti
cmp
push
or
cmp
mov
sbb
outsb
xchg
in
jne
mulb
cmp
pop
subl
test
outsb
mov
dec
mov
repz
mov
jg
and
lret
mov
cmp
push
mov
dec
rorl
cmpsl
in
xchg
test
shrb
in
mov
jl
add
inc
or
inc
jg
pop
les
and
mov
xor
sub
mov
addr16
dec
sahf
jge
and
stos
jae
out
pop
cmp
mov
xor
jno
or
lock
push
fisttps
aam
inc
movsb
mov
pop
sub
inc
cld
jl
mov
clc
jb,pt
inc
int
pop
cwtl
xor
cmpsb
out
jecxz
adc
dec
jne
pusha
add
push
stc
sarb
inc
cmp
dec
xchg
mov
pop
pushf
jge,pt
daa
divl
rcl
int3
adc
xor
fwait
xchg
cmp
mov
push
sub
fldl
xor
and
repz
fs
xor
mov
shl
adc
mov
add
xor
mov
test
add
leave
testb
addb
adc
push
fadds
mov
mov
push
gs
xlat
or
pusha
jmp
xchg
cmovge
pop
in
test
popf
faddp
pop
cmc
xorb
fnstsw
iret
pop
sbb
mov
xchg
jle
inc
mov
or
cmpsb
insb
loopne
es
in
negl
xor
mov
stos
mov
call
test
mov
inc
jnp
xor
ss
push
loopne
loope
xchg
loope
or
sbb
mov
shll
std
fwait
dec
mov
xchg
cmc
or
int3
mov
lea
out
or
jg
mov
gs
bound
cmpsb
mov
fldl
rcrl
loop
add
test
sbb
xor
adc
fcoms
mov
nop
sbb
into
hlt
mov
push
mov
sbb
ds
fmul
je
js
scas
sbb
and
dec
push
sbb
fsubl
gs
and
pop
sbb
lret
loop
mov
cmc
adc
mov
scas
adc
xlat
push
sti
sub
xchg
sti
gs
xorb
lock
in
dec
movsl
jge
add
mov
mov
ds
out
xchg
cmp
xchg
cwtl
imul
call
mov
pop
inc
pop
add
js
jg
fsubs
xchg
sbb
or
fnsave
pop
mov
dec
stos
dec
jo
add
imul
cmpsb
mov
lahf
insl
jo
test
push
inc
push
sub
addr16
or
and
int
cmp
dec
in
xchg
cmc
popf
pop
cmpsl
int
cltd
clc
dec
std
mov
insb
movsb
mov
rclb
inc
push
xchg
ds
cmpsl
imul
inc
ss
cmp
cmc
xor
dec
mov
sub
pusha
ret
xchg
movsb
xchg
add
adc
inc
xor
add
jecxz
or
fcomps
mov
les
cltd
inc
xor
xchg
or
in
dec
add
sbb
lret
mov
fisttps
dec
and
test
cs
mov
lds
scas
xlat
cld
mov
fists
sub
dec
int
fldcw
sbbl
xor
int3
in
fcmovb
cmpsl
jp
fsts
cmp
sub
inc
pop
insb
sub
push
jle
mov
adc
dec
aad
inc
cli
sub
mov
dec
incb
es
in
xchg
hlt
call
xor
adcb
mov
push
adc
push
pop
lret
cmpsl
mov
loope
lahf
xchg
or
inc
imul
andb
mov
fidivrl
in
mov
leave
xorb
lea
sbb
sbb
jle
pop
outsb
jno
les
lds
dec
pop
mov
and
cmc
mov
sbb
negl
pop
xor
inc
xlat
mov
pop
push
das
jns
rorb
mov
fldt
xchg
adc
mov
inc
xchg
push
daa
jns
mov
dec
cmpb
mov
xlat
sub
out
sbb
out
sub
cld
inc
shll
ret
lret
jo
fld
add
jecxz
fwait
dec
andl
loopne
lods
int3
sbb
xchg
in
push
jne
cmp
rolb
dec
mov
xor
imul
mov
out
jo
leave
mov
es
cmp
pop
jns
cmovs
scas
dec
inc
cwtl
push
jo
pop
xchg
ja
stos
xchg
xchg
push
adc
cmpb
scas
mov
inc
addr16
andb
fisttpl
cltd
imul
inc
rolb
mov
lods
je
push
or
aaa
jno
xor
ljmp
out
stos
pop
repz
jo
jns
je
int3
push
in
jg
ljmp
ret
jp
inc
cwtl
pop
call
jnp
cmp
push
mov
adc
xchg
mov
cs
sub
or
mov
inc
out
mov
mov
icebp
cmpsb
cs
dec
jbe
add
add
ja
jecxz
int3
xor
jne
jg
lret
insb
fwait
cmc
cmp
mov
outsl
xchg
hlt
add
inc
jg
and
iret
cli
jmp
aam
cltd
xchg
cmp
pop
push
insl
lods
fldcw
inc
dec
or
adc
mov
adc
movups
js
xor
or
dec
mov
mov
bound
daa
pushf
mov
ljmp
mov
cld
mov
rcrb
and
pop
adc
jl
fildll
xor
lods
mov
es
jl
sub
lret
xor
sbb
xor
adcl
sub
pop
xor
jo
inc
test
push
add
cwtl
jnp
imul
out
sbb
adc
es
adcl
repz
mov
adcl
push
ret
sbb
cmpsl
pop
stos
or
add
adc
scas
repz
dec
lods
test
mov
mov
mov
pop
movsb
jae
daa
cwtl
aas
mov
or
pop
jl
xlat
inc
add
pop
xor
hlt
psrld
insb
cmp
cs
xchg
sti
loop
push
shrb
sbbl
shrl
rclb
dec
cmp
sub
jle
int
and
sub
mov
in
xor
sbb
inc
movsl
mov
push
cmc
cmp
popa
ret
fimull
mov
insl
or
xor
xchg
lcall
mov
cltd
loope
and
sub
repnz
cwtl
xchg
cld
sub
aas
cli
mov
dec
lods
mov
xor
dec
add
mov
jl
sub
in
out
xchg
or
inc
adc
std
iret
test
shll
stc
push
cmp
sub
jne
xchg
fstps
xlat
outsb
jns
xchg
jb
stos
les
ja
stos
jle
lock
sub
mov
inc
mov
hlt
jne
aad
inc
inc
movsb
push
lea
sbb
test
jo
mov
lcall
lret
pop
cld
shll
inc
sub
imul
push
mov
and
mov
scas
gs
sub
and
cs
xor
cmpsb
jnp
rcpps
pushf
jbe
mov
xlat
popf
cmp
xchg
sbb
push
cmp
or
cmc
outsb
push
jae
adc
mov
pop
jge
std
fdivl
daa
insb
adc
cmp
jne
cmpsl
add
pushf
jnp
cmpsb
xchg
xor
add
pop
decb
ffreep
mov
out
fmull
fildl
sub
pop
int
dec
and
pop
mov
mov
dec
add
scas
xchg
and
xchg
gs
shll
icebp
fxch
ja
adc
xchg
call
or
mov
lds
dec
outsb
les
sbb
out
xor
outsb
adc
sub
loop
imul
sub
pop
push
stos
jo
sbb
push
nop
pop
and
leave
jb
repnz
dec
out
mov
icebp
stos
imull
and
test
sub
fsub
or
fadd
xor
jle,pt
shll
sub
xchg
scas
test
xor
ds
xchg
mov
ja
aas
jl
stos
inc
sarb
xchg
pop
mov
mov
add
repz
sti
push
adc
loop
rcl
xchg
push
add
std
out
stos
dec
xchg
aas
mov
inc
inc
push
xchg
add
addr16
jge
pop
add
call
adc
pop
inc
js
std
imul
xchg
lret
cltd
ds
adc
or
shrl
mov
inc
fisubl
sbb
push
pop
cmpw
roll
mov
dec
lea
sub
add
incl
fdivr
nop
loope
aam
cmp
push
sub
inc
cs
shlb
repz
dec
int3
dec
and
xchg
inc
aad
decb
inc
xchg
sub
ret
ret
xchg
aas
or
adc
push
xchg
mov
pop
aas
les
sub
aam
xor
mov
mov
cltd
fimuls
dec
mov
loop
and
and
out
jge
sub
addr16
cwtl
cwtl
dec
aam
inc
mov
int3
scas
jg
sub
sub
cmc
lock
movsb
nop
lds
push
mov
mov
sarb
in
pop
mov
lds
xlat
xchg
add
pop
loopne
add
jmp
push
mov
or
inc
push
pop
scas
ss
lds
push
clc
push
push
mov
or
jl
pop
in
sahf
inc
xchg
addb
in
jae
jb
mov
adc
mov
pop
fwait
shlb
daa
adc
mov
inc
xor
jle
sub
imul
mov
push
out
mov
xorb
push
xor
mov
repz
inc
ret
fwait
jp
stos
out
aas
mov
arpl
pop
bnd
in
test
ljmp
test
adc
lgs
jp
xchg
gs
stos
jge
mov
out
loopne
cmp
mov
out
enter
adc
mov
sbb
clc
cmp
mov
out
xor
xchg
nop
jg
rclb
mov
lods
or
arpl
xchg
lea
mov
dec
cmc
cmp
popa
push
or
call
xchg
lret
shll
push
pop
cmp
outsl
mov
js
mov
adc
ljmp
mov
jne
sub
push
cmp
lods
pop
xor
arpl
int3
sbb
pop
pop
fucomi
or
mov
rcl
cmp
dec
pushf
int
punpckhdq
rcrb
in
or
repnz
loope
inc
fmuls
jmp
jl
mov
or
and
xlat
insl
adc
cmp
cmp
sbb
or
push
mov
insb
arpl
ss
pop
dec
das
pop
out
jp
jg
popf
cli
sub
negl
enter
mov
sub
ja
cmp
ss
andb
xchg
jae
sub
fcompl
std
or
inc
mov
pop
and
cwtl
ljmp
lock
cmp
imul
iret
movhps
shll
fwait
jne
gs
out
rol
scas
sub
aam
push
jno
mov
pop
pop
mov
aaa
mov
push
add
call
pop
jp
inc
adc
inc
and
scas
fsubs
inc
push
push
adc
jge
push
insb
cmc
and
mov
call
cmp
iret
sahf
stos
out
mov
imul
inc
mov
pop
mov
fidivl
test
insl
test
adc
dec
mov
inc
or
clc
es
or
and
sbb
mov
sub
hlt
sbb
out
cmp
sub
aaa
cmpsl
movsb
test
popf
and
fwait
push
inc
add
jle
lcall
clc
aaa
repnz
pushf
mov
test
add
rorl
dec
inc
iret
pop
imul
cmp
fildl
aas
adc
popf
mov
adc
mov
adc
sub
adc
xor
cmpsl
orb
mov
es
xchg
gs
sub
mov
fwait
sbb
imul
fdivs
jo
or
cli
adc
mov
shlb
popa
sub
xchg
sysenter
je
inc
or
push
mov
push
push
mov
es
jg
in
xchg
stc
xor
pop
inc
mov
jne
fildl
xchg
ja
ljmp
fs
mov
ja
daa
mov
ss
test
insb
loop
loop
cld
loop
pusha
xchg
pop
shrl
sub
inc
jo
fdivrl
ljmp
or
mov
sti
test
movsl
cld
ss
test
pop
ds
sub
mov
xor
adc
sbb
push
cwtl
lods
pusha
add
lret
pop
adc
test
jl
je
pop
das
lahf
ficompl
cmp
cmp
or
mov
outsl
mov
arpl
jb
xchg
push
pop
cmp
or
dec
push
adc
pop
and
int
pop
cmp
mov
imul
inc
pop
cmpsl
and
cwtl
fldcw
rorl
addr16
xchg
mov
sub
lahf
imul
dec
fmuls
aaa
jb
imul
mov
pop
jecxz
fdiv
iret
fsubs
xchg
and
xor
shll
jne
and
in
imul
in
mov
add
orb
xchg
xchg
and
pop
iret
arpl
adc
cld
pop
iret
out
icebp
mov
adc
or
push
mov
sbb
mov
or
inc
mov
inc
stos
imul
xlat
add
orb
sbb
cli
pop
adc
popa
inc
js
shll
ficompl
cmp
add
sbb
mov
xchg
roll
clc
mov
incb
adc
pop
nop
leave
adc
push
data16
inc
fnstenv
idivb
adc
inc
dec
loop
lock
sbb
punpckhdq
xor
push
je
fildl
mov
bt
mov
addr16
pop
jle
bound
xchg
ss
jne
mov
pop
dec
orb
clc
push
daa
or
hlt
xchg
loopne
popf
lds
scas
fbstp
shll
test
outsb
hlt
lahf
insl
jo
xor
out
jl
gs
dec
testl
sub
mov
mov
pop
sub
loopne
add
push
popa
mov
orb
repz
sbb
lods
cmpsb
imul
popa
add
js
cmp
push
adc
xorb
sbb
and
xchg
inc
int
rorl
mov
add
frstor
lds
xor
sbb
xchg
rolb
xorl
rorl
push
cltd
sbb
inc
cmp
cmp
imul
add
ret
add
cmp
mov
rcrl
mov
cmp
mov
icebp
mov
pop
mov
push
rolb
cmp
xor
fst
out
gs
dec
iret
mov
test
inc
dec
mov
sbb
dec
mov
call
imul
pop
in
push
push
sbb
add
hlt
scas
xsha256
cmpsb
push
iret
outsb
cmpsb
adc
push
leave
push
or
jle
add
cmp
jp
lret
out
and
fisubrl
ja
and
xchg
out
je
cwtl
and
sbb
jbe
ljmp
sub
jno
aam
mov
jb
dec
jno
inc
inc
jecxz
adc
movsb
xlat
int
jns
mov
xchg
pop
push
cltd
pop
add
cmc
and
andb
ds
pop
and
test
sbb
loopne
in
addr16
pop
jle
shll
inc
je
xor
mov
lea
cs
xor
dec
adc
inc
sarb
inc
lods
enter
pop
shl
hlt
loope
aas
mov
dec
cli
mov
pop
mov
mov
fstps
pop
test
push
fstl
xchg
push
fcomps
lods
adc
fsubl
sbb
xchg
sub
into
lret
add
outsb
insb
sbb
scas
js
insb
mov
mov
or
insb
pop
xchg
lods
sub
jp
rcrb
sub
sbb
test
out
loopne
or
xchg
cmp
sbb
cmpl
mov
in
addr16
sbb
cmp
add
bound
mov
stc
in
or
bound
shl
push
mov
push
push
add
in
repz
stc
imul
jno
and
push
jg
cmp
insl
add
push
stc
xor
leave
test
pop
and
push
xchg
out
inc
leave
call
int3
adc
nop
lds
test
xor
sub
dec
xor
pop
xlat
xchg
in
push
xor
push
sub
test
or
sub
push
mov
jg
ljmp
sahf
sub
fidivs
cmp
mov
addr16
jp
icebp
cmpsl
inc
mov
and
scas
xor
dec
popf
and
or
mov
push
les
aas
ljmp
mov
push
or
and
push
xchg
js
cmp
out
mov
imul
mov
clc
jns
dec
xchg
imul
add
ljmp
cld
jnp,pn
icebp
ljmp
int3
icebp
popf
cmpsl
les
jnp
testl
adc
mov
js
ds
mov
pop
inc
mov
push
in
sbb
in
andb
bound
fistpll
fnsetpm(287
out
cmp
jecxz
push
data16
mov
mov
push
subl
lahf
inc
adc
stos
cs
and
mov
sbb
ljmp
pop
jge,pn
sbb
jns
fisttps
adc
and
add
cli
mov
adc
jno
stos
lods
sub
xor
xchg
in
pop
mov
dec
xor
iret
movsb
cmpl
add
add
xchg
lds
mov
dec
and
test
adcl
movsb
dec
enter
mov
scas
adcb
push
sbb
hlt
mov
xor
mov
or
iret
into
add
lret
pop
imul
mov
aam
pop
or
sbb
fdivrl
loope
loop
sti
out
xacquire
data16
mov
sub
cltd
mov
aas
xlat
push
push
cmpsl
add
xchg
dec
and
int
xchg
xchg
mov
mov
dec
sahf
fisttpll
xchg
and
les
push
and
pop
xchg
jb
stos
push
loop
and
push
sbb
push
jmp
mov
mov
pop
adc
jne
repnz
add
fistps
jmp
test
ja
lds
ds
add
xor
add
jmp
xor
bound
push
pop
xor
lcall
dec
stc
xchg
adc
pop
dec
enter
jnp
les
sahf
push
mov
adc
roll
scas
push
xchg
in
ljmp
sahf
lret
jmp
ja
push
jg
repz
cmp
in
lds
jp
jecxz
aam
movsl
xchg
mov
std
sbb
add
dec
xor
jecxz
mov
scas
pop
mov
andb
jno
into
fdivp
cwtl
jl
das
out
cli
repz
bound
gs
lock
adc
push
shlb
push
clc
jnp
stos
sub
popf
jecxz
mov
sahf
loop
outsb
imulb
pushf
pop
mov
rorb
inc
add
mov
xor
neg
daa
pop
lahf
sub
lods
and
push
fs
inc
add
mov
inc
push
jge
sbb
mov
dec
or
stc
subl
pop
inc
push
pop
cmp
dec
cwtl
div
lret
sub
arpl
cli
mov
ror
in
jnp
inc
mov
lock
repnz
imul
push
push
in
add
dec
xor
mov
nop
in
push
or
push
fwait
outsl
int
and
or
sbb
cmp
adc
push
mov
ds
fs
xchg
inc
adc
popf
imul
jb
aaa
push
xor
movsb
out
dec
jg
xchg
fistpll
adc
pop
fnstsw
mov
mov
jnp
jae
clc
mov
subb
lds
test
fs
outsb
std
mov
pop
sbb
stos
in
add
pop
xor
int
lret
lea
jb
adc
mov
push
mov
xor
push
hlt
mov
dec
mov
jnp
icebp
mov
jge
flds
jne
add
ds
insb
sub
jne
and
nop
push
push
jno
push
lret
sbb
repnz
mov
cwtl
add
sub
mov
out
inc
outsb
popf
jmp
lds
sahf
sub
mov
fisubrs
cwtl
sbb
xchg
out
scas
icebp
into
push
lock
push
divl
mov
pushf
add
jmp
lcall
sti
inc
bnd
repnz
inc
push
and
push
xchg
mov
outsl
mov
xchg
in
jl
adc
pop
stc
mov
ret
dec
adc
sub
mov
jecxz
in
cmpsl
push
movsb
fcoml
sub
pop
daa
setno
clc
mov
mov
cmp
xchg
jge
movsb
mov
lcall
xlat
incb
data16
movsl
mov
or
jg
popa
pop
imul
dec
adc
mov
adc
or
adc
pop
icebp
mov
inc
push
clc
xchg
enter
out
lret
dec
sub
out
cs
sahf
jmp
dec
push
ljmp
xchg
pushf
mov
in
cltd
mov
cltd
pop
add
pop
aaa
call
jne
fistps
mov
into
xchg
add
pop
sbb
cmpsl
cmpsb
testb
mov
xchg
xor
repz
pop
movsb
push
int3
mov
dec
fdivs
inc
data16
push
dec
jne
cmp
mov
jp
or
add
in
fwait
jno
lods
adc
dec
fmulp
enter
lds
outsl
sbb
icebp
dec
fisubl
popa
sbb
mov
xchg
aad
dec
test
pusha
ficomps
sar
mov
shlb
out
iret
sbb
xor
jnp
cmc
inc
add
aaa
dec
lds
sbb
push
and
fbstp
mov
mov
pop
and
sub
push
lock
sti
push
test
imul
jno
addb
gs
jl
push
lahf
cmc
sub
dec
push
dec
or
rolb
mov
sbb
and
mov
cmp
jb
xchg
mov
ja
jp
xchg
xor
pop
lret
fisttps
lahf
andb
mov
jg
into
pusha
or
mov
sbbb
aas
pushf
adc
xor
fs
out
push
ficomps
mov
mov
sar
mov
nop
fbld
je
stos
add
adc
push
insl
cld
stos
mov
push
add
out
lds
fs
mov
lock
pop
mov
bound
add
sti
or
sub
ja
repz
xchg
cmp
cli
ror
add
shrb
movsb
pop
js
mov
loope
test
and
inc
fsubl
adc
mov
lahf
push
jno
xchg
cld
int3
mov
lcall
insl
xor
jmp
mov
test
sbb
shr
add
ret
sbb
sbb
cwtl
xor
inc
xlat
aam
dec
xor
lds
movsl
push
and
les
outsl
popf
jmp
jbe
cmp
outsb
shl
ds
aam
sub
cmp
push
int3
or
or
fidivl
or
inc
xchg
imul
fists
xchg
ds
lds
fwait
pop
inc
sub
xor
mov
xor
mov
mov
stos
and
jp
push
repnz
aaa
mov
jge
pop
dec
popa
jae
test
xchg
repnz
jbe
jp
jecxz
jecxz
inc
xor
rcl
fsubl
adc
fwait
sub
pop
and
subl
insl
inc
xchg
sub
or
fmuls
mov
nop
cs
inc
pop
add
rorb
outsl
push
sbb
cmp
pop
xchg
mov
fldcw
loop
adc
out
ror
jp
add
xchg
lahf
lds
xor
mov
xchg
ret
adc
and
jge
xor
jle
sbb
fadd
mul
xchg
fdivrl
jo
int3
movsb
out
je
scas
sbb
or
fcoml
rcll
pop
jp
mov
scas
cli
cmpsb
test
sub
dec
xchg
push
dec
leave
shl
sub
xchg
out
and
leave
out
jmp
mov
jbe
xor
in
lods
sub
shll
fucom
mov
pop
add
push
pop
xchg
div
sbb
adc
dec
nop
lds
and
nop
shl
fwait
mov
lods
jb
pop
adc
addr16
out
pop
dec
cmp
xchg
iret
add
pop
xor
or
cli
out
and
sahf
cmpsb
and
cs
jecxz
repnz
lcall
stc
movsb
push
scas
jecxz
push
cli
scas
mov
push
testb
enter
andl
out
mov
xor
xchg
movsb
ret
pusha
mov
mov
and
xchg
pushf
lock
and
fstp
or
xor
lahf
std
ljmp
imul
mov
cmp
negb
xor
cld
push
dec
call
push
mov
aaa
into
and
push
addr16
sbb
or
xchg
mov
inc
aam
adc
dec
sub
lcall
rorb
push
cli
fbld
adc
push
mov
fsubs
pop
jb
lods
cld
je
idivl
mov
and
hlt
popa
and
xchg
inc
fisttpl
jae
adc
push
dec
adc
ss
sbb
leave
cmpsl
xlat
out
or
and
push
push
or
aas
shrl
sahf
int3
ret
add
movsl
mov
jne
test
out
repnz
and
stos
ja
jmp
movsl
test
sub
std
sub
aam
repz
lcall
es
nop
int
mov
mov
adcl
dec
sub
ljmp
imulb
pop
cltd
stos
fsubrp
xchg
xor
imull
fs
mov
lds
aam
and
mov
push
sti
xor
xchg
popf
lea
dec
push
sub
sbb
gs
ret
outsl
pop
test
gs
pop
mov
inc
xchg
pop
and
fmull
sbb
push
dec
pop
outsl
xchg
sar
dec
add
loopne
and
aad
or
popf
mov
inc
pushf
movsb
outsl
popa
cmp
xorl
sbb
inc
ror
xor
sbb
call
ret
mov
and
enter
sbb
mov
cmpsl
sub
inc
loope
enter
adc
jg
or
mov
je
ss
stc
inc
imul
push
movsl
imul
fstpl
lds
sub
ss
sbb
and
loopne
out
adc
pop
adc
add
mov
push
in
jo
dec
stc
scas
xchg
scas
adc
fs
sbb
inc
mov
or
cmp
xor
pop
mov
jbe
or
insl
inc
inc
cmp
mov
lods
adc
in
xchg
adc
xor
shr
fstp
sbbl
adc
loop
jge
jb
aam
ret
aam
jns
push
mov
int3
mov
mov
scas
daa
loope
xchg
mov
add
arpl
pop
inc
push
fsubrl
arpl
dec
jecxz
pop
je
jbe
fists
sub
adc
jo
and
push
int3
mov
and
sub
orb
jmp
cwtl
xor
or
pop
add
aam
mov
sarl
insl
out
jle
mov
imul
in
push
mov
adc
push
out
cmp
xor
sbb
xchg
jge
int
repz
mov
in
ret
and
test
rcll
pop
mov
ja
lcall
xchg
mov
lock
rcrl
adc
adc
aaa
mov
cmc
stos
dec
scas
jge
jb
or
ljmp
and
test
push
cld
or
or
mov
lods
ret
fs
scas
inc
pusha
xor
cmp
xor
sbb
lods
add
idivb
add
dec
ret
dec
jmp
jae
es
iret
aam
jb
xor
lahf
into
mov
push
sub
inc
jo
and
in
jo
dec
mov
loopne
sbb
xchg
inc
pop
iret
or
shrw
movswl
or
or
xor
push
shl
mov
imul
daa
scas
div
push
mov
sub
add
in
cmp
lea
xor
jg
call
pop
mov
jmp
cli
pop
inc
xor
lret
jae
jp
push
stc
sti
adcb
mov
xchg
loopne
jo
out
popa
ljmp
add
pop
sbb
inc
in
pushf
addr16
and
and
gs
cmpsl
or
pop
or
adc
add
and
leave
fs
pop
in
testb
fcoms
xchg
cmp
lock
mov
repnz
loopne
adc
stc
mov
stos
cmpsl
add
outsb
cmp
xor
hlt
mov
push
cmp
pusha
in
xor
movsb
loop
in
imul
ror
xchg
shlb
mov
jle
sub
and
jo
je
jb
and
adc
mov
test
into
in
xor
xchg
jmp
shrb
dec
pusha
mov
popf
jl
insl
das
jl
dec
mov
adc
xchg
scas
cmp
outsl
neg
add
stc
sbb
repz
mov
push
movsl
inc
xchg
lcall
aaa
inc
sbb
xchg
popf
xorl
jp
out
push
mov
jl
aaa
jae
push
cmpsb
scas
push
rcrl
jl
hlt
mov
test
xchg
sub
shlb
cmp
add
dec
das
mov
jb
jne
sti
jl
cmp
mov
cmp
add
cmp
and
xor
dec
nop
and
mov
std
xchg
sub
std
stc
add
movsl
dec
and
push
inc
fisttpll
push
jb
aas
jb
loopne
aas
fcmovu
push
nop
add
fsubl
add
pushl
pusha
sub
dec
outsb
mulb
ds
dec
std
out
push
adc
ja
cmp
movsb
fsts
mov
clc
adc
push
inc
cwtl
aam
mov
mov
inc
iret
movsb
std
scas
mov
scas
mov
dec
xlat
rcll
add
add
sub
iret
outsl
dec
or
inc
and
mov
aas
jns
mov
cmp
push
sub
nop
loopne
mov
or
mov
insl
test
push
bound
or
iret
cmp
cwtl
inc
jg
mov
jne
dec
inc
les
addb
push
test
aas
adc
xchg
ja
cmp
icebp
mov
sti
decb
dec
xor
fstpl
or
and
and
aad
push
sub
push
inc
js
add
adc
xor
mov
add
fisubrs
stos
xor
nop
xlat
faddl
ljmp
mul
aam
stos
flds
cmp
shlb
dec
out
mov
fsubrp
adc
adc
insl
rclb
pushf
gs
cmp
daa
inc
xlat
inc
dec
sub
mov
and
pop
test
stos
adc
dec
loop
idivb
xchg
push
jecxz
push
jmp
pop
out
jmp
aaa
movsb
scas
cmp
jg
mov
pushf
mov
stos
or
fisubrs
cmp
outsl
out
sbb
inc
mov
pop
sub
test
xchg
push
xor
or
mov
mov
outsl
ja
mov
sti
test
mov
outsl
mov
arpl
mov
rorb
insb
into
xlat
in
call
and
xchg
stos
mov
lods
insl
jne
aaa
imul
jle
lock
out
sbb
add
ret
cmp
add
mov
mov
gs
xor
ret
arpl
cmp
test
clc
call
dec
movsb
pushf
stos
dec
mov
push
add
mov
dec
sbb
imul
test
test
pop
mov
cmp
andb
jno
call
push
addr16
in
daa
xchg
popf
xchg
jo
xchg
addr16
pop
test
into
insb
jmp
shlb
shrl
imul
je
idivl
adc
dec
and
loope
nop
adc
aas
pop
jle
jp
leave
add
xor
push
cld
cmp
push
jp
dec
pop
outsl
test
rcrl
aas
xorl
out
inc
negb
mov
pusha
rcr
xor
jnp
or
imul
pop
mov
push
xchg
sub
xor
pushl
mov
addr16
cmpsb
outsl
xchg
mov
dec
mov
jecxz
sbb
xor
cmc
ror
inc
loop
ds
push
cld
in
cli
fldcw
mov
popa
xchg
stos
xchg
test
sub
scas
das
cli
lret
lods
ja
sbb
mov
stos
enter
dec
lock
lcall
dec
jmp
lds
pop
sub
out
pop
out
mov
rorb
cmp
pop
fsubrp
filds
mov
ud1
lret
in
pop
mov
jae
jecxz
mov
xchg
lods
rorb
into
lcall
push
lcall
scas
out
or
fiadds
fildll
pop
xor
movsb
sub
cmp
sub
push
pop
xchg
mov
or
and
cmp
inc
inc
jp
push
arpl
lock
sbb
jnp
and
xchg
dec
mov
ret
fwait
mov
into
push
scas
dec
hlt
popf
jo
mov
fisttps
into
data16
subb
outsl
leave
fisubrs
out
xor
sub
jmp
pop
mov
outsb
mov
insl
roll
mov
fmulp
popf
into
jecxz
cltd
mov
inc
mov
pop
push
loop
fldl
out
sbb
in
jb
mov
mov
jae
aam
mov
dec
aad
shll
cmp
xchg
inc
push
dec
mov
dec
es
mov
shlb
mov
jae
xchg
daa
stc
pop
or
gs
and
aaa
icebp
out
mov
orl
fmul
data16
push
imul
stos
out
pusha
mov
dec
mov
rorl
cld
sbb
pop
test
enter
sub
sbbb
jns
sbb
add
and
xchg
sub
mov
mov
pop
lds
jo
push
or
in
rcr
mov
hlt
mov
and
mov
pop
or
flds
xchg
sub
arpl
or
fcmovne
outsb
xchg
mov
push
inc
ret
mov
imul
mov
mov
add
gs
fwait
out
mov
cmc
add
jp
lret
clc
ror
enter
adc
ljmp
test
add
insl
inc
cltd
push
lret
sar
push
push
sbb
sbb
rclb
add
and
xor
jns
or
std
dec
sbb
test
test
shll
cmpsl
je
fldl
or
lods
movsb
mov
aad
popa
popa
jb
dec
shlb
cmpsb
or
fwait
mov
call
not
test
les
adc
xchg
movsb
mov
mov
mov
mov
mov
popa
push
aad
jg
ljmp
or
dec
push
fisubl
popf
cmc
jne
lcall
arpl
mov
mov
push
add
ret
jg
pop
imul
cmp
sarb
cld
xor
inc
imul
xchg
cld
fbstp
stc
lret
add
and
xlat
daa
jnp
xor
mov
icebp
cmp
aas
adc
rol
push
aas
jno
mov
adc
popf
sbb
idivb
mov
jbe
mov
dec
cmp
mov
cli
dec
mov
dec
adc
and
lea
je
sbb
aad
jl
push
inc
pop
add
outsb
and
dec
jbe
pusha
xchg
repnz
xchg
test
push
in
and
inc
out
jg
lahf
pop
inc
or
sub
cmc
cmp
push
stc
or
cli
lahf
push
jmp
mov
xor
push
shl
sub
stc
push
xor
dec
mov
sbb
xorl
xor
fists
dec
xor
or
aam
sbb
cmp
test
jb
dec
outsb
inc
or
cmp
cmpsb
lahf
pop
inc
mov
lods
daa
sbb
pop
lods
jmp
stos
into
mov
adc
rcr
out
test
dec
and
or
andb
sub
imul
test
aam
inc
data16
fs
cmp
jge
das
pop
jmp
and
ss
jno
data16
xchg
push
inc
fdiv
jl
sahf
out
dec
rcrb
insl
xchg
int3
shll
and
into
clc
jecxz
cmp
hlt
xchg
mov
hlt
icebp
dec
lret
fs
pop
lods
scas
leave
or
in
mov
push
test
aaa
cld
mov
loope
mov
pop
sub
pop
jne
in
cmp
mov
cmc
sub
test
mov
sbb
inc
sbb
fcmovu
lea
arpl
test
pop
pop
mov
jge
shl
test
mov
fisubrl
aad
ret
push
dec
test
dec
arpl
fs
js
sbb
icebp
mov
cwtl
xchg
lods
pusha
or
mov
rorb
inc
dec
dec
jno
divb
repnz
jb
pop
rorb
in
adc
push
shl
fnop
shr
in
mov
mov
pop
mov
adc
andb
loop
mov
sbb
sub
gs
fdivrs
lods
rorb
mov
or
inc
sarb
inc
add
mov
cmp
adc
jl
scas
inc
adc
jno
pop
aad
or
xchg
and
repz
cld
cmpsb
aam
negb
mov
mov
stos
insb
test
rolb
or
addb
scas
out
fdivrs
pop
push
cmc
andl
leave
cmp
in
pop
mov
into
aad
mov
inc
ljmp
into
ffreep
lock
cld
loop
push
outsb
mov
aas
pop
xchg
pop
test
xchg
es
cmp
fimull
pop
aaa
testb
test
out
adc
mov
mov
je
add
pop
stos
cwtl
cli
pop
mov
popa
stc
daa
adc
or
stos
and
xchg
dec
xchg
data16
inc
push
out
inc
or
mov
mov
nop
ret
pusha
sahf
xchg
jne
pop
jo
out
cs
xor
push
cwtl
mov
mov
sub
repz
lret
ljmp
ret
cmp
ret
and
sbb
push
pop
push
mov
ficoms
mov
mov
int3
and
jge
pop
jge
aas
les
push
std
lea
je
shll
frstor
jo
sar
icebp
add
stos
mov
add
pop
ret
push
mov
inc
int3
xchg
cli
jae
inc
insb
mov
and
pusha
mov
cmp
mov
ret
sahf
jmp
pop
dec
push
ljmp
jmp
lods
pop
test
jmp
mov
pop
mov
leave
push
lods
adc
jmp
lahf
lods
mov
mov
or
mov
imul
cmp
mov
icebp
xchg
xor
fcmove
push
lods
push
out
popa
ljmp
arpl
rclb
daa
ds
jbe
shrb
jbe
mov
xor
pop
pop
fiadds
dec
mov
mov
ja
add
push
inc
movsl
mov
jno
and
inc
imul
pop
pop
inc
ret
scas
jno
fwait
insl
sub
pop
jmp
pop
ljmp
xor
and
cwtl
add
sbb
lds
in
xchg
jae
inc
cmp
cmp
adc
inc
sbb
mov
or
jns
cmp
loopne
sub
pusha
bound
push
xor
mov
cmp
imul
mov
ljmp
rcrb
push
mov
loopne
outsl
cmc
jns
and
shr
pop
movsl
sub
sbb
cmpsb
into
mov
jmp
cltd
cltd
xlat
cmpsl
xchg
push
sbb
aaa
sub
and
jne
cld
mov
jmp
jp
mov
repz
dec
loop
and
fucomi
clc
in
leave
inc
inc
lahf
ficoms
jno
test
in
hlt
xchg
lds
push
rorb
cmpsb
out
sub
mov
sub
pop
xchg
mov
adc
dec
fcompl
aas
adc
jl
cmpsb
test
mov
xchg
cs
mov
cmp
movsb
pushf
jle
add
xchg
fnstsw
out
cmpsl
push
add
leave
sub
fists
push
repz
cmpsl
adc
pusha
stc
inc
pop
shlb
int3
jne,pt
lret
cvttps2pi
jmp
out
ds
into
lea
or
sbb
test
mov
cmc
adc
out
mul
testb
ret
or
shlb
xchg
pop
push
jb
mov
xchg
icebp
fs
cmp
psubq
ss
fnstcw
lds
fstl
dec
add
pop
dec
daa
push
jp
push
sbb
scas
push
mov
cld
jnp
add
cmp
sahf
in
cld
lahf
sub
mov
or
dec
dec
ret
aad
sbb
fmuls
mov
adc
pop
push
stos
cmp
xor
ja
and
popf
and
movsb
test
int3
fisttps
and
int
mov
and
push
mov
aam
push
mov
lods
cs
pop
lahf
and
push
push
xchg
mov
les
jne
jae
pop
mov
jge
lds
sub
hlt
inc
std
in
scas
out
movsl
xchg
jnp
fisttpl
fnstsw
dec
shr
sbb
push
mov
mov
ja
and
icebp
mov
shll
or
ljmp
jp
imul
inc
adc
addb
jne
inc
push
lret
and
jns
pop
xor
loopne
sub
cmp
stc
mov
mov
fdivr
add
and
push
mov
mov
dec
ret
cld
and
outsl
jnp
push
mov
lods
mov
jno
stc
jp
mov
enter
ss
out
xor
ss
xor
adc
mov
lds
fsubrl
jno
les
imul
inc
sub
nop
imulb
xor
nop
xchg
mov
insl
lret
xor
and
inc
push
lcall
mov
xchg
dec
xor
rorb
mov
fdivl
sbb
ret
pop
push
fs
into
jmp
out
shll
subl
es
mov
push
sbb
pop
sbb
fidivs
mov
add
ret
xchg
imul
dec
stos
lds
pop
test
scas
and
push
xchg
nop
cmp
lret
mov
mov
pop
adc
popa
xor
xchg
sti
test
pop
and
xchg
mov
mov
push
call
cld
rorl
shr
push
mov
es
inc
inc
mov
sub
mov
adc
in
in
imul
rcrb
jbe
fstpt
fcos
mov
addr16
sub
in
and
push
or
and
jb
cld
xchg
iret
aam
adc
popf
fisttps
roll
hlt
mov
out
sub
inc
xchg
jle
inc
test
out
in
or
dec
call
push
lods
imul
cmp
and
bswap
and
jnp
cmp
pop
mov
or
mov
sub
xchg
aam
push
jno
int
bound
push
loope
pop
add
add
out
aaa
inc
sarl
adc
mov
cmp
mov
xor
test
xor
push
orl
out
loop
adc
inc
call
movl
xor
stos
leave
fimull
mov
inc
int
mov
or
xor
sbb
inc
lcall
sub
or
sbb
sarl
dec
insb
adc
fistl
es
enter
dec
rol
push
rcl
sub
adc
adc
push
push
push
cmp
test
xchg
jge
pop
insl
adc
in
repz
jge
addb
adc
bound
lret
add
adc
subb
mov
or
lret
and
repnz
cs
xchg
pop
stos
add
cwtl
fmuls
pushf
mov
lahf
jp
inc
sub
mov
mov
sbb
and
dec
jmp
xchg
sub
cwtl
or
es
dec
push
adc
dec
or
jbe
addr16
mov
cmp
dec
mov
xchg
mov
mov
outsl
gs
sub
dec
mov
mov
xchg
out
mov
xchg
jle
lahf
mov
insb
mov
xchg
loop
sbb
jo
sub
jmp
push
test
insl
mov
jns
movsl
inc
push
ficoml
insl
out
mov
adc
push
add
xor
xchg
xor
jp
adc
outsb
shl
stos
mov
sub
pop
add
mov
out
orb
jno
mov
stos
aad
jns
sarb
push
jl
gs
inc
mov
inc
popf
fnstenv
loopne
hlt
testb
int3
insb
cmpsl
flds
mov
mull
mov
cmovns
mov
fidivl
gs
jnp
or
cmp
fs
lea
and
lret
popf
dec
mov
inc
and
ret
mov
mov
cmpsb
push
inc
jnp
popf
cmpsl
jns
pop
out
loope
mov
hlt
in
stos
pop
aam
inc
mov
enter
out
fidivl
add
daa
jb
pop
fdivrl
movsb
notb
push
js
arpl
out
adc
and
sbb
test
shlb
inc
jmp
imulb
pop
ss
xor
les
sbb
js
cmp
icebp
test
fwait
in
mov
pop
jmp
andl
adc
jp
ja
sub
out
mov
inc
popa
mov
lods
cmpsb
adc
inc
push
xor
mov
mov
or
dec
xor
lret
sbb
scas
jmp
push
test
lret
gs
cwtl
cwtl
fdivr
push
push
cmp
mov
out
stos
mov
in
movb
or
insb
outsl
js
call
or
mov
cltd
adc
mov
testl
dec
testb
or
pop
dec
fs
and
es
dec
sbb
mov
xor
lahf
adc
daa
sbb
push
test
lcall
das
push
cli
or
insb
inc
push
pop
xchg
xor
mov
movsl
das
adc
cmp
mov
lds
inc
and
into
sbb
aas
or
pop
jbe
mov
fiadds
iret
mov
fucomi
jle
std
leave
pop
inc
jae
cmpsb
or
cmpsb
out
lods
loop
inc
sub
ljmp
jno
stc
test
cmp
ret
in
mov
lds
mov
enter
mov
mov
shlb
lds
in
mov
loop
andb
ret
push
and
icebp
lods
jmp
xchg
cmpsl
push
mov
mov
xor
xchg
jne
pop
shrl
add
xorb
sub
into
mov
out
pusha
cmp
inc
lods
stc
mov
ja
loopne
mov
pop
and
ljmp
cmp
cmp
sub
int
mov
jo
adc
sarb
filds
or
aaa
fsubs
fisubl
push
pop
push
xor
dec
cltd
iret
sub
dec
in
aaa
mov
lds
jns
mov
xlat
int
scas
push
fnsave
fidivrs
dec
aaa
sbb
xchg
cmp
pop
adc
sub
sbb
or
cwtl
mov
jmp
dec
mov
test
dec
dec
sti
inc
loope
sbb
sbb
and
mov
inc
pop
lock
pop
test
xor
mov
in
out
and
orb
out
in
cmp
sbb
fidivl
jge
jl
pop
out
xor
clc
inc
push
mov
mov
cltd
sub
push
pop
test
mov
dec
dec
xchg
push
fidivrl
add
push
fdivl
xchg
sbb
hlt
xor
pop
imul
sbb
addr16
mov
clc
push
xchg
mov
xchg
sbb
sbb
or
xchg
idivb
std
call
adc
adc
jb
test
add
cmpl
xchg
jb
mov
dec
nop
insb
or
aam
or
xorl
mov
repz
popl
loopne
nop
push
inc
xchg
pop
fstl
add
fnstsw
jmp
loopne
inc
fmull
fists
loop
fdivl
mov
imul
jge
push
sub
or
adc
insb
sbb
push
and
js
xchg
lods
push
testb
cli
push
sub
dec
mov
xchg
out
sarl
in
cmpsb
pop
insl
dec
xchg
pop
xor
loope
xor
cmpsl
aas
test
punpckldq
and
cli
adc
or
test
scas
jne
lods
adc
js
and
mov
flds
mov
adc
dec
and
cli
popf
mov
jne
test
xorl
and
dec
jge
pop
hlt
pop
inc
sbb
shlb
hlt
out
fsubrp
lahf
jle
in
rorb
push
jbe
in
push
stos
or
sbb
xchg
sti
or
lods
fs
bound
iret
movsl
and
fwait
jae
mov
mov
dec
and
aad
out
stos
adc
rcll
pop
and
subl
xor
scas
xchg
mov
pop
outsb
test
or
cmp
jo
call
aas
dec
cmpb
adc
inc
int
std
jl
inc
or
das
mov
das
scas
sub
leave
mul
mov
add
sub
or
fwait
adc
inc
aaa
fdivrs
repnz
xchg
lods
leave
jmp
or
je
and
mov
xor
dec
int3
adcl
xchg
leave
ja
mov
sbb
test
movb
mov
shlb
in
enter
scas
repz
lea
pop
adc
sub
sbb
xchg
push
adc
fcmovb
bound
jecxz,pt
sbb
ljmp
inc
insb
lods
mov
mov
xor
loop
shlb
in
and
fwait
mov
jno
icebp
jmp
fnsave
js
adc
aas
popf
dec
sub
rclb
arpl
ds
es
in
mov
and
or
dec
push
rcr
lahf
lds
sqrtps
push
cmp
pop
jo
mov
mov
xlat
sar
ljmp
and
int3
jae
shr
loop,pt
call
cmpsb
das
add
or
aad
fwait
push
add
mov
enter
imul
jecxz
push
or
lret
cltd
out
insb
xchg
xchg
cltd
xchg
inc
sub
pop
cmp
ss
or
rorb
cmp
test
push
aad
leave
mov
mov
shlb
cld
pop
cmp
clc
vminpd
data16
sbb
jns
icebp
sub
mov
jmp
lea
subl
out
jno
test
pop
mov
dec
lret
xchg
sub
inc
or
sub
mov
add
push
pop
pop
add
iret
test
fcoml
pushf
sub
xor
int
sbb
mov
xor
mov
dec
divl
dec
ss
dec
add
stc
loop
fst
xor
popf
pop
and
xor
mov
je
iret
jbe
mov
jg
imul
add
adc
xlat
push
fldcw
inc
pop
and
mov
fwait
rolb
js
sub
popa
imul
imul
sub
jb
inc
andb
jno
cs
cmp
mov
out
mov
repnz
inc
movsb
pop
pop
mov
adc
test
push
aaa
inc
ret
lods
push
xor
or
loopne
xchg
push
les
inc
push
xchg
lock
fwait
adc
inc
push
out
xor
inc
jnp
jg
mov
sub
or
out
btr
int
push
out
outsb
jae
shr
mov
scas
pop
mov
dec
mov
add
xchg
mov
sahf
sahf
outsl
xchg
xchg
adc
mov
mov
add
aad
sbb
dec
mov
mov
sub
xchg
sbb
jl
jb
pop
outsb
add
pop
incl
sbbb
xchg
push
pusha
dec
out
sub
inc
jle
cli
jae
sub
mov
sub
mov
xlat
mov
xchg
push
push
inc
test
and
rolb
rcll
jl
or
pop
dec
jne
loopne
scas
sarl
dec
fsubrl
repz
std
and
xor
jl
inc
mov
rorl
outsb
dec
fwait
mov
pop
and
minps
sub
shll
mov
fisttpll
test
mov
add
nop
pop
clc
nop
add
sbb
push
lock
sub
inc
dec
flds
aas
dec
add
xor
dec
lret
loop
inc
sub
andl
inc
lods
or
std
outsb
enter
push
pop
cmp
inc
mov
int
push
mov
dec
pop
mov
icebp
push
jp
cmp
in
sbb
and
jno
loope
outsl
roll
das
outsb
shrl
push
xchg
dec
mov
xchg
cld
pop
adc
mov
push
jae
cmp
mov
xchg
lret
divl
xor
jl
stos
dec
arpl
je
sbb
sahf
sbb
out
sbbl
inc
sbb
daa
push
clc
cld
ja
loop
inc
jp
movsb
roll
data16
sub
lret
es
icebp
das
aas
sbb
ret
lods
and
adcl
cmp
andl
imul
lods
je
push
daa
enter
push
out
push
das
mov
inc
pusha
scas
jno
push
testl
pop
into
jmp
shlb
shlb
hlt
inc
add
push
xchg
aad
iret
jmp
sahf
or
adcb
out
xchg
cld
push
mov
into
add
pop
in
outsb
xor
hlt
adc
addr16
jmp
cmp
es
mov
sbb
jo
std
test
xchg
dec
out
mov
out
cmc
outsb
jns
scas
mov
and
sbb
dec
lret
mov
rorb
sbb
fisubrs
daa
pop
push
push
not
inc
xchg
mov
sub
not
ja
aam
gs
xchg
ljmp
adc
adc
in
out
sete
pop
test
xor
mov
outsl
jmp
test
test
nop
rcr
iret
dec
mov
push
test
xor
adc
pop
sub
mov
mov
mov
into
inc
push
loope
outsl
xchg
insl
ljmp
mov
aaa
xlat
test
int3
inc
pop
mov
popa
mull
push
dec
mov
sub
rorl
int3
pop
out
icebp
fwait
ja
cmc
lods
lods
pushf
sbb
sbb
pusha
pop
dec
xor
stos
pop
std
add
mov
js
push
out
xchg
lods
addl
push
push
push
fadd
jmp
cmp
mov
jge
or
mov
loope
int
ret
xchg
jns
inc
ss
cld
and
pop
push
adc
mov
in
mov
jle
sbb
fucomi
cld
repnz
loop
sbb
ds
stos
stos
cmp
pop
mov
push
lods
lods
push
int3
mov
dec
dec
xor
mov
sub
mov
inc
in
es
cmp
xchg
cwtl
in
jge
xchg
xor
pop
fwait
add
or
clc
adc
mov
add
mov
insl
test
dec
jmp
scas
arpl
stc
hlt
push
push
pusha
aas
xchg
mov
jp
jge
pop
aam
movsl
jp
add
jbe
jg
lods
cmp
std
sub
icebp
sbb
mov
jl
jge
sbb
push
adc
test
scas
mov
pushf
jecxz
aas
xlat
dec
out
mov
es
push
stc
rcr
ja
es
add
xchg
outsb
mull
bound
test
in
mov
aad
rcl
jmp
xchg
andb
jmp
cwtl
enter
mov
pop
adc
into
imul
mov
shl
xor
jg
mov
push
or
into
mov
jg
sbbb
shlb
jl
jbe
insl
fildl
les
lret
sbb
mov
dec
fistps
test
sub
jne
sub
jl
sbb
loope
roll
push
and
xor
cmp
mov
rorb
popl
xor
repz
dec
in
push
shrb
xchg
ret
pop
mov
add
int3
xchg
sub
jp
mov
ja
sub
aad
xor
adc
jg
xchg
bound
cwtl
jmp
leave
pusha
xchg
mov
mov
je
jo
xlat
lret
inc
clc
mov
cmc
inc
inc
push
les
mov
or
out
stc
mov
loop
jge
mov
mov
cmp
ret
pmaxsw
stos
jl
or
pop
testl
inc
cmp
sub
nop
adc
xchg
scas
js
dec
cmpsb
dec
mov
jecxz
mov
hlt
andb
or
pop
ret
ror
xchg
fcomi
jo
jns
jbe
xchg
lret
in
push
mov
out
push
xchg
pop
cwtl
dec
in
aas
pop
pushf
inc
shrb
aaa
enter
imul
add
cmpsb
push
mov
lcall
push
mov
popf
cmc
aam
ljmp
cmp
mov
inc
xlat
dec
sub
fwait
mov
sti
jp
mov
repnz
fs
lahf
hlt
jae
sti
lret
subb
shl
xchg
nop
and
sbb
rclb
push
icebp
push
mov
out
stc
ljmp
mov
pop
mov
stc
aad
incb
iret
clc
xlat
jb
sysexit
scas
dec
and
adc
jecxz
add
lahf
les
adc
sti
in
jbe
xchg
cmc
jno
cmp
cltd
mov
dec
out
test
scas
lods
sub
xchg
mov
rclb
in
jo
test
sti
pop
adc
xor
out
inc
mov
mov
xor
mov
dec
sbb
aas
and
inc
int3
jne
jle
xchg
lds
mov
push
jnp
mov
push
jmp
cmpsl
push
loop
mov
xorb
push
fsubp
fcmove
lahf
rcll
push
in
cmp
add
jnp
mov
push
or
push
mov
hlt
mov
movb
add
or
sar
sub
dec
and
sbb
adc
sub
or
into
xchg
imul
inc
ja
movsl
dec
mov
cmpsb
fmull
dec
outsb
adc
mov
int
flds
aas
ret
mov
jl
loop
pop
adc
mov
and
adc
aaa
lock
xchg
nop
jl
je
rcll
mov
xchg
mov
stos
mov
sub
xor
add
hlt
insl
and
iret
imulb
dec
push
loopne
rcll
or
mov
popf
jecxz
mov
idiv
imul
push
ss
add
xchg
jne
dec
push
adc
je
lds
es
scas
out
and
sbb
sub
fcoms
cmpsl
lds
adc
sub
jg
push
pop
push
adc
cld
push
leave
ja
or
push
imul
push
or
inc
xor
std
xor
jae
push
jle
leave
hlt
andb
int3
xchg
push
mov
out
in
push
push
adc
test
inc
movsb
inc
lds
adc
rolb
push
jnp
imul
daa
call
adc
dec
fxam
pushf
ret
insl
mov
in
jae
pop
icebp
mov
add
shlb
les
cwtl
iret
xlat
or
fbld
xlat
addb
cmpsl
cltd
arpl
mov
jmp
fisubrl
push
lds
sbb
pusha
mull
lods
mov
mov
shrb
cmp
sar
pusha
repz
vmaxpd
rcrb
xchg
push
xor
sub
sub
outsl
pop
xchg
movsb
lock
adc
enter
sar
cli
or
inc
ds
clc
das
sub
xchg
jno
ficoms
ds
mov
cmpsb
test
and
adc
mov
fcomip
ror
xchg
btr
lret
xchg
out
jo
mov
or
or
or
dec
hlt
adc
push
outsb
push
pop
js
add
ljmp
dec
inc
fsub
nop
movsl
out
iret
bound
jo
sub
mov
lock
shrl
pop
imul
dec
pop
xor
push
fldcw
xchg
adc
gs
and
jle
orl
or
flds
and
cli
cltd
inc
mov
jnp
out
or
and
lock
xor
jge
mov
scas
pop
cld
dec
leave
insl
clc
sbb
rcrl
sbb
cmp
roll
xchg
cmp
mov
andb
pop
or
outsl
mov
push
inc
jae
xchg
cmc
test
xchg
dec
mov
or
add
cwtl
stos
movsb
outsl
fidivl
cmp
xchg
aas
push
std
sbb
cmpsb
xchg
pop
push
sahf
mov
cmc
jmp
and
xchg
jg
aam
leave
jno
cmp
xchg
sub
mov
xchg
mov
mov
xlat
inc
xlat
jns
orb
dec
mov
dec
xchg
in
sbb
call
pushf
fisttps
rorl
sub
push
das
mov
insl
test
push
gs
cmc
ja
or
test
mulb
mov
out
js
loope
sar
pop
sub
sbb
rcl
mov
adc
sbb
push
aad
adc
mov
fildll
call
push
into
mov
sbb
inc
imul
outsb
inc
outsl
xor
push
fwait
js
mov
fwait
loop
jge
pop
jmp
and
movsb
fwait
daa
adc
in
sbb
cmp
xor
push
pop
mov
je
ja
cmp
cmpsl
bound
fiaddl
fisttps
lea
fistps
fsubrs
push
stc
mov
xchg
sbb
je
lods
mov
sbb
mov
mov
pop
lods
cs
adc
jg
das
test
adc
sahf
jo
out
leave
sub
dec
dec
mov
jmp
inc
sub
dec
sarl
imul
pop
rorl
mov
test
cmpsl
sbb
mov
add
cwtl
scas
das
xrelease
sbb
mov
inc
xchg
lahf
stos
cmp
mov
xor
dec
pop
mov
insl
mov
jl
stos
sbb
sub
push
dec
add
mov
adc
push
xchg
cli
outsl
lock
mov
aaa
leave
cmp
out
out
std
mov
jge
mov
ds
cmp
cli
xor
dec
or
xchg
xchg
test
adc
les
push
sahf
ja
aas
pushf
popa
xor
mov
arpl
aas
mov
add
dec
cmp
popf
lret
test
push
movsb
mov
and
jbe
aaa
mov
test
stos
loopne
mov
push
pop
into
andl
popa
or
push
in
mov
push
mov
mov
push
pop
mov
dec
or
mov
rclb
push
sbb
enter
sbb
or
pop
dec
mov
mov
dec
jmp
adc
mov
mov
push
dec
inc
push
push
lret
push
int3
cmp
cmp
xlat
xchg
add
xchg
cwtl
or
inc
in
scas
mov
inc
cmp
lea
mov
arpl
test
loop
sbb
jbe
inc
and
push
fidivrl
cmp
repnz
or
hlt
mov
xchg
jle
push
ret
movsl
dec
xlat
mov
sbb
push
jae
jge
fcoms
dec
cwtl
and
fsubs
int
and
filds
lds
rsm
add
xchg
jns
fs
lods
sub
adc
jecxz
je
nop
mov
hlt
and
leave
add
push
add
jecxz
adc
xor
leave
inc
in
push
xchg
or
xor
jne
shll
pushf
inc
inc
clc
mov
cs
leave
or
xor
cmp
out
jae
jns
mov
pusha
mov
cmp
repz
or
imul
dec
jle
or
nop
mov
sub
lea
enter
imul
fsub
cmc
add
jge
nop
mov
jecxz
in
lds
inc
inc
add
pop
sbbb
rorl
fcmove
lcall
and
mov
sahf
dec
pusha
enter
sti
fwait
roll
fstpt
pop
arpl
test
mov
je
in
pop
mov
jmp
out
adc
shll
pusha
cwtl
fadds
pop
mov
arpl
pop
mov
pop
add
test
es
xor
mov
inc
loope
ret
js
mov
push
ret
sbb
and
mov
mov
cmpsl
popa
adc
sub
jne
popa
xchg
xor
inc
add
cli
mov
outsl
aaa
cmp
cltd
sub
and
scas
cmp
mov
leave
ja
dec
sahf
mov
sbb
jbe
movsb
loopne
xchg
lds
adc
inc
sub
loope
dec
push
lcall
adc
sbb
movsb
push
and
dec
or
adc
fcompl
insl
lret
and
mov
dec
mov
xor
stc
cltd
cmpsb
call
in
pusha
mov
sahf
add
aaa
rep
daa
push
dec
movl
cmp
mov
and
and
rorb
insl
jno
aad
out
jg
adc
daa
dec
fstps
incl
jne
mov
sahf
out
test
xchg
mov
push
arpl
push
mov
pushf
popa
push
mov
mov
adc
rolb
sahf
adc
popf
or
sar
or
jne
flds
jno
xor
jmp
pop
out
mov
mov
cmp
dec
jge
mov
movsb
loop
out
pop
lds
hlt
cmp
xchg
aas
les
mov
pop
les
cmpsl
addr16
das
data16
insb
cmp
mov
push
jp
and
mov
sarl
cmpsb
movl
lds
mov
loope
jnp
jb
or
pop
gs
xchg
les
aaa
sti
sbb
jo
call
lock
sub
xchg
movsb
insb
push
xchg
cli
push
fidivl
xchg
xchg
ficomps
jo
push
and
inc
jg
imul
pop
sub
ss
ss
out
xchg
sub
mov
lret
and
inc
and
stc
ret
pop
enter
push
rclb
cmpsl
ret
insb
or
xlat
jb
jno
cmpsb
daa
or
loop
adcl
insl
inc
ret
stos
push
cmp
lods
xchg
fs
cmp
mov
rclb
int3
add
loopne
adc
out
stos
jmp
cwtl
cli
js
dec
bnd
cmc
fdivrp
gs
shl
call
add
mov
sbb
sahf
clc
xor
mov
jne
test
orb
mov
mov
add
test
pop
mov
jns
cmp
adc
sub
popl
dec
mov
ss
fisttps
addr16
jnp
test
out
stc
push
sbb
sbb
xchg
push
cmp
dec
stc
stos
mov
ljmp
enter
inc
inc
jmp
icebp
ds
dec
and
adc
mov
iret
inc
or
mov
repnz
in
mov
fisttpll
adc
incb
xor
rcrl
mov
cmpl
adc
fmulp
es
out
outsb
fcomp
mov
or
loope
dec
scas
out
loopne
cmp
jnp
in
sbb
fcoml
cmp
inc
icebp
mov
rcrl
or
pop
das
xor
adc
adc
sub
bound
adc
dec
jns
fidivl
push
gs
imul
and
and
call
mov
cmp
enter
int
push
cltd
or
dec
dec
or
mov
mov
pop
sbb
into
cli
mov
xchg
jbe
jns
add
test
insl
call
xor
stos
into
inc
es
push
iret
pop
rcr
push
lds
fs
clc
or
daa
inc
xchg
clc
mov
add
repnz
orl
sub
loop
jecxz
push
push
mov
inc
cmp
mov
push
adc
dec
test
inc
dec
jae
push
adc
lea
cmp
or
pop
jb
and
jecxz
mov
or
nop
and
pop
add
jnp
xor
into
nop
and
nop
mov
xchg
mulb
int3
jecxz
js
adc
test
mov
lcall
rorb
mov
call
xlat
cmp
out
aas
cmp
stos
mov
jne
dec
mov
fwait
push
bound
jmp
mov
test
mov
cld
cltd
je
rorl
xorl
mov
jb
mov
pop
lods
inc
scas
lds
ja
arpl
lret
mov
aam
cltd
add
push
cmpsb
mov
ljmp
push
cld
icebp
dec
push
inc
push
adc
xor
push
test
xor
rcrl
mov
jg
and
xchg
jae
xor
and
out
lahf
pop
mov
or
adc
and
dec
inc
push
cwtl
test
inc
sub
cmpsb
inc
add
mov
dec
pop
pop
mov
rclb
add
ss
push
jl
jle
sbb
or
push
sub
and
sub
xor
dec
roll
inc
roll
and
roll
xchg
mov
cltd
push
aad
mov
ja
fwait
adc
stos
sub
cmpsb
sub
and
mov
and
sub
cmp
sahf
arpl
cmp
push
ja
mov
repz
cmpsb
imul
push
jl
ja
das
pop
xor
xchg
nop
cmp
or
pop
mov
int3
dec
mov
inc
cmc
mov
or
xor
sbb
shr
movsl
test
cld
outsl
pop
lcall
cmp
sbb
jb
mov
aam
jg
jecxz
fdivrs
mov
xor
les
shlb
jno
push
xchg
add
loopne
push
inc
bound
dec
add
push
push
clc
test
pop
and
cmpsb
scas
dec
mov
cmp
gs
push
fwait
stos
test
and
loop
lea
fnsave
addb
xchg
xchg
shlb
inc
jae
push
jb
add
movsl
adc
sbb
scas
nop
adc
sti
inc
cltd
xchg
push
sti
xor
mov
out
push
mov
repz
push
xor
add
cmpsb
cli
lock
sub
pop
push
add
xchg
fstl
dec
sti
sbb
xchg
sbb
inc
adc
or
or
inc
dec
lret
dec
xchg
inc
sub
mov
test
leave
enter
pop
dec
cmp
andl
pop
es
inc
loop
pop
xor
in
pop
inc
push
arpl
test
clc
stos
push
in
inc
fnstenv
ljmp
cmpsb
add
aaa
mov
dec
and
jge
pop
push
mul
roll
xchg
outsl
add
mov
les
fildl
cmpsb
xor
cli
stos
imul
movsl
mov
ds
pop
bound
aas
xor
lcall
stc
and
push
ret
pop
les
or
lret
sub
pop
shrb
das
pop
aas
ret
add
jmp
lahf
dec
gs
pop
fildl
ret
mov
add
inc
and
and
xchg
add
notb
dec
imul
in
fadds
mov
inc
mov
mov
scas
scas
dec
dec
imul
add
popl
xchg
insb
jbe
jg
lods
xchg
cmpsl
jge
iret
mov
and
cli
push
sub
mov
dec
xor
ljmp
or
push
popa
sahf
xchg
push
mov
xchg
inc
or
dec
adc
push
xor
mov
xor
sub
ds
popf
imul
xchg
add
aas
in
lahf
mov
or
lahf
stos
je
adc
pop
les
sti
inc
add
stos
mov
push
ficoml
pop
lea
test
cli
mov
out
sub
cmp
shlb
xchg
lcall
es
mov
mov
cli
in
jae
jecxz
xchg
sbb
bound
cmc
aad
stos
and
jg
sbb
cltd
outsb
dec
fwait
scas
sub
ret
test
pop
sub
jecxz
jl
pop
cld
fcmovnbe
jae
cmp
ss
mov
insb
mov
fistps
lret
dec
fsubrs
test
add
lods
rorb
jb
mov
movsb
jo
pusha
into
or
movsb
call
out
mov
mov
add
sub
sub
xchg
stos
cwtl
fwait
or
pop
jbe
add
fldenv
mov
xor
or
cmc
fidivrl
cmpb
pop
cmpl
and
pop
fistpl
mov
ljmp
shl
mov
cmp
vpaddsb
in
imul
or
add
fs
stc
out
daa
data16
inc
mov
loop
out
and
mov
pop
shrl
movsl
mov
xor
int3
cmpsb
mov
outsb
cs
sbb
arpl
mov
cmovae
fsubs
lahf
out
and
cwtl
mov
aam
push
orb
pushw
scas
cmpsb
push
jns
fmul
jl
loop
adc
cli
pusha
mov
nop
test
xor
mov
xchg
mov
loopne
jmp
movsb
inc
loop
aaa
shrb
add
repz
or
insb
int
adc
popf
fwait
xchg
sub
jb
cmp
xchg
xor
adc
aas
ss
push
popf
sahf
xchg
scas
stos
loop
jecxz
ss
jnp
shl
mov
mov
inc
leave
in
pop
out
movsb
fnstsw
push
cwtl
adc
aam
cmp
mov
mov
mov
iret
das
inc
xorl
clc
jge
repnz
rorb
lret
pop
dec
or
push
ds
inc
popf
or
sahf
xchg
icebp
push
mov
lret
stos
mov
repz
out
scas
dec
loop
pop
pop
insl
dec
and
cmp
and
mov
iret
fbstp
jns
nop
out
loop
add
negb
cltd
push
cmp
or
xorb
cmp
xchg
mov
stos
pusha
dec
cmpsl
push
mov
in
inc
fildl
mov
dec
repnz
mov
lret
pop
fldcw
lret
mov
stc
test
sub
scas
push
xor
dec
add
dec
push
or
loope
cmp
das
imul
sahf
cmp
mov
sbb
addr16
sarl
jnp
movsb
lret
cmpsb
mov
sbb
sub
cmpsl
test
aam
push
lret
inc
aas
push
jp
xchg
sbb
aad
imul
xchg
dec
enter
cmpsb
stos
dec
int3
dec
movsw
arpl
lock
pop
fwait
mov
xor
push
das
in
ja
mov
lea
add
es
mov
pop
out
les
mov
mov
in
int
ficompl
mov
cmp
scas
popa
addr16
cmp
out
test
icebp
rsm
popf
mov
rclb
pop
cmpsb
add
mov
adc
mov
sti
cmpb
stos
decl
push
out
or
stos
imul
fnstenv
dec
xchg
adc
pop
shlb
mov
sbb
into
lret
shrb
push
les
mov
pop
pop
adc
push
out
jmp
sub
lahf
cmp
jp
adc
les
fmuls
popf
fsubrp
shll
push
jmp
pop
push
push
jne
andb
push
xchg
xor
adc
addr16
pop
rep
outsb
inc
or
mov
jo
int3
orps
xchg
sbb
stos
andb
pop
subb
pop
sbb
xor
aad
xchg
xor
pusha
lcall
inc
mov
shrb
jecxz
mov
fmul
hlt
adc
es
sti
push
dec
outsl
inc
movsb
mov
jb
push
aas
in
addr16
iret
xchg
mov
mov
adc
ror
out
lret
cmp
lods
push
cwtl
imul
sti
sub
cltd
gs
dec
adc
and
pop
fisttpl
cmp
push
imull
movsl
and
js
call
sbb
mov
popf
jmp
jmp
cmovnp
add
cwtl
enter
adc
jge
fisttpl
mov
icebp
xor
xchg
xchg
inc
lea
mov
insb
xchg
out
mov
adc
jp
xchg
dec
mov
jle
in
insb
aas
mov
mov
mov
mov
mov
adc
and
stc
movl
sub
pop
insb
sarb
popf
push
mov
sbb
pop
leave
push
popf
test
xor
addl
push
add
fdivr
xor
and
cmp
mov
das
xchg
dec
lods
mov
std
jb
mov
xorl
pop
mov
sarb
lcall
scas
out
inc
mov
ss
and
sub
mov
jns
ds
push
sahf
pop
cmp
jnp
pop
leave
aas
dec
aaa
mov
dec
xchg
pop
dec
mov
mov
dec
inc
pop
scas
sti
mov
int
xchg
dec
mov
fcompp
ss
jns
jnp
dec
push
xor
lock
push
push
mov
ljmp
mov
lock
xchg
xchg
mov
addb
in
testl
push
add
test
jb
cs
test
fs
add
adc
int
mov
and
lret
cmp
xor
push
cmp
sub
mov
adc
dec
mov
adc
sub
js
push
push
mov
push
mov
or
adc
sub
enter
in
push
sti
jbe
sub
mov
jae
pop
fsubl
mov
mov
arpl
pop
das
lcall
aad
subb
adc
movsb
cmp
push
fbstp
loope
mov
mov
mov
inc
insb
xor
das
test
inc
xor
outsb
shr
pop
int
into
sub
pop
gs
call
mov
ret
nop
adc
mov
cmp
push
fmull
sub
inc
fnsave
mov
mov
sbb
js
push
mov
int
dec
push
out
xor
mov
cmp
cmpsb
cmp
jb
mov
icebp
cmp
sbb
jge
mov
scas
push
cs
std
sbb
push
mov
sub
enter
nop
lods
jb
xor
push
leave
cmp
out
adc
test
push
xchg
cmpb
cli
dec
adc
scas
inc
fnstcw
jnp
jg
lods
int
test
clc
fisubrl
lea
cmp
xchg
or
mov
les
outsb
xchg
mov
loop
inc
add
mov
mov
jle
push
cmpsl
push
xchg
sub
dec
stos
int
iret
mov
sbb
or
adc
divl
daa
jno
dec
pop
xchg
pusha
loop
and
fcmovbe
dec
add
xor
in
cmp
aaa
in
cmc
xor
add
and
popf
es
nop
cmp
add
addb
xchg
mov
xchg
jo
aaa
fildll
xchg
mov
xchg
pop
dec
mov
pusha
adc
add
pop
leave
and
test
inc
sbb
xchg
test
mov
sbb
or
push
inc
jb
adc
ja
movsb
xchg
xor
push
aas
sub
and
int3
fildl
push
in
and
inc
jo
imul
mov
int3
mov
lock
inc
in
dec
pop
outsb
lahf
xor
mov
sbb
clc
cmp
fists
mov
and
js
inc
jne
inc
and
stc
ror
add
jle
jb
pop
int3
inc
fsts
ss
test
sahf
sahf
inc
fists
repnz
in
nop
adc
shll
dec
fstpl
xor
cmp
int3
jp
jo
mov
or
outsb
ljmp
and
lea
mov
lds
daa
jp
stc
mov
cmp
push
lods
movsl
xor
arpl
sti
push
xchg
adc
or
jne
pop
sti
loopne
dec
enter
loop
sub
enter
sahf
sti
jmp
sbb
dec
data16
xor
scas
jae
add
mov
lret
cmpsb
call
and
adc
inc
pusha
inc
inc
mov
mov
xlat
ret
mov
push
lock
rcr
adc
in
popl
xor
in
shrb
lds
lret
jb
lock
pop
enter
jns
jmp
push
push
in
ja
outsb
es
pop
cld
leave
push
mov
dec
jp
and
rclb
cmp
insb
push
or
mov
jl
adc
push
mov
mov
mov
push
daa
mov
data16
adcb
pmullw
jge
aad
pop
imul
rcll
mov
xchg
std
lds
mov
test
mov
sbb
jne
sbb
xchg
pushf
mov
std
das
mov
cmc
xchg
push
divl
xchg
xchg
mov
xchg
lahf
adc
jae
mull
insl
pop
or
pop
movsb
mov
imul
mov
fmull
cmp
pop
loop
or
mov
and
mov
movsl
lods
jp
adc
push
pop
add
test
pop
filds
adc
or
mov
and
sbb
add
xor
dec
mov
push
xchg
aaa
lock
inc
fdivrl
and
push
repnz
dec
repz
push
in
jae
mov
bound
jge
jb
push
push
movsb
imul
pop
das
iret
testb
mov
sub
jnp
pop
inc
add
cmpl
adc
xchg
rcl
aad
fsubl
sub
mov
fnstcw
repnz
decw
jnp
add
dec
xor
add
lock
mov
pushf
daa
stos
ret
mov
and
ret
sbb
outsb
inc
cwtl
mov
sbb
mov
andl
jne
sub
jnp
insb
rorl
adc
mov
pop
cmp
cmpl
sbb
dec
call
scas
cmp
das
push
jge
cwtl
scas
sahf
push
or
pushf
sahf
out
icebp
shll
lahf
or
mov
lea
jne
out
outsb
cli
fisubs
jns
pop
xchg
pop
mov
divb
pop
mov
jne
lcall
cltd
cmp
insl
sbb
adc
jb
adc
es
loope
outsb
push
pop
mov
jnp
adc
test
mov
cld
outsl
fsubl
xchg
sbb
push
inc
imul
push
cld
in
push
or
jl
pop
adc
mov
jmp
mov
aad
dec
orl
into
loop
xchg
add
mov
into
sahf
aas
aad
cmpsb
mov
xchg
arpl
cltd
xlat
mov
lds
jle
sub
jge
push
and
movsb
daa
adc
repnz
roll
fwait
dec
pop
add
or
daa
fdiv
mov
xor
jg
and
fiaddl
mov
sbb
mov
retw
adc
ljmp
cld
adc
out
dec
xchg
push
fwait
outsl
repz
inc
fidivrs
movsl
imul
call
add
imul
test
cmpsb
jmp
mov
aaa
dec
dec
mov
pop
lea
cwtl
jmp
jo
dec
in
xor
call
pop
popa
sahf
rcrb
leave
pop
pop
dec
pop
inc
xor
mov
push
xor
cmc
sbb
lret
sub
pop
shlb
xchg
xor
les
addl
lret
aad
aam
push
xchg
xor
rcl
sbb
arpl
adc
pop
sub
cmpb
fcmovnb
sbb
scas
jmp
lods
xchg
mov
pop
jecxz
cwtl
dec
or
jp
sub
orl
or
cmp
test
lcall
jl
and
pop
mov
fdivrl
insb
mov
cmp
mov
call
ljmp
mov
ds
sub
or
iret
push
mov
mov
inc
push
lss
test
clc
bnd
test
cmp
sub
adc
mov
push
jno
xor
rclb
xchg
rcrl
pushf
gs
fcomip
mov
inc
jne
cmpl
out
fsubrl
es
mov
pop
cld
push
adc
into
sbb
mov
fsubrp
ljmp
cmp
dec
push
hlt
xor
nop
rorl
xor
xor
pop
ja
bound
mov
xor
or
inc
push
mov
xlat
adc
xor
movsb
mov
add
bound
aad
fimuls
lahf
imul
pushf
or
pop
out
add
scas
push
data16
xlat
out
jle
repnz
mov
lret
jae
test
sbb
rcrb
aam
icebp
lret
push
mov
loopne
sub
imul
sbb
cli
lock
xor
fsubr
pop
mov
and
dec
dec
lea
aad
clc
mov
pop
pop
xchg
xchg
rorb
loope
addr16
into
push
push
ss
jmp
int3
sub
or
dec
test
add
jmp
fcoml
insb
or
lcall
mov
fsubs
lcall
xchg
and
into
cmpsb
imul
jmp
push
sub
movsl
push
mov
in
cwtl
addr16
mov
lods
inc
out
adc
ret
addr16
in
mov
sbb
xlat
or
xor
popa
add
add
add
cmpsb
jne
pop
decb
lds
in
orps
stc
pop
mov
cltd
and
loop
ljmp
negb
mov
fnstcw
int
xor
daa
mov
divps
stos
pop
xorb
repnz
push
mov
push
sbb
push
leave
aam
fcompl
ror
mov
rol
cmp
in
dec
packsswb
lcall
inc
arpl
sbbl
adc
stos
outsl
xchg
push
shl
sbb
outsb
mov
imul
pop
test
addb
pop
enter
jbe
jp
push
es
sub
aad
xchg
xchg
jge
sahf
stc
arpl
jmp
mov
notl
and
mov
sub
jnp
pop
and
dec
movsb
pop
cmp
pop
movsl
in
pop
or
lods
jns
ficoml
xchg
mov
das
cs
loopne
rcll
mov
inc
or
ljmp
movsl
xchg
in
imul
fs
push
sbb
cmp
ja
out
loope
mov
mov
cmp
mov
mov
mov
ja
pop
pop
movsl
data16
out
divl
ljmp
sub
repz
mov
fwait
mov
enter
add
xchg
add
xor
mov
in
dec
out
mov
nop
xor
fucomi
add
fcompl
add
cvtps2pd
cmp
out
sahf
jo
mov
push
or
or
ret
lea
gs
repz
stos
mov
add
fs
addr16
cmp
test
and
mov
lea
xchg
imul
mov
xchg
loopne
fs
inc
call
mov
cmp
sbb
mov
stos
sarl
cwtl
aas
bound
or
add
lahf
ror
mov
mov
out
pop
addr16
mov
adc
ja
es
jbe
sub
sbb
mov
cmp
inc
and
cltd
mov
jo
xchg
ljmp
enter
sbb
dec
lahf
sti
pop
stc
addl
mov
sbbl
movsb
xchg
out
push
mov
aam
lods
out
xor
dec
sbb
aas
data16
leave
je
cmp
mov
cmpsl
cmp
daa
ja
sti
cld
mov
test
outsl
mov
sub
adc
add
testl
pop
push
call
and
jne
scas
cs
mov
iret
rcrb
into
or
mov
pop
and
cmp
std
leave
inc
inc
lea
fisubl
sbb
pop
hlt
lcall
mov
iret
jne
orl
mov
lods
mov
cmp
adc
jo
lea
arpl
std
pop
dec
mov
fcmovne
mov
mov
iret
sahf
push
inc
pop
nop
push
push
pop
lds
sub
int
or
popa
push
mov
repz
nop
ret
lahf
fisttpll
into
hlt
gs
popa
mov
sbb
xor
or
cld
push
mov
xor
sti
push
xchg
jae
out
ret
fadd
sbb
daa
fadds
imul
aad
das
int
push
dec
push
icebp
add
mov
scas
popa
inc
pop
xchg
fmuls
cld
jbe
scas
mov
test
pusha
dec
xchg
in
pop
mov
ret
cmp
mov
mov
push
aam
es
cmp
inc
aad
aam
cmp
mov
lret
andb
int3
fcmove
or
shlb
dec
lret
hlt
sub
mov
jle
push
or
xor
sbbb
mov
frstor
jbe
sub
in
filds
in
xchg
popf
xor
mov
sub
push
dec
pop
mov
add
jecxz
push
sbbb
ret
aaa
ljmp
lock
mov
mov
enter
repnz
sub
iret
cmp
xchg
ljmp
ret
push
xchg
clc
push
dec
fldcw
add
xor
jp
lcall
mov
adc
scas
int
cmp
dec
or
ljmp
jnp
and
inc
jns
adc
repnz
imul
jae
xor
stc
jmp
jns
adc
inc
xchg
push
sub
pop
icebp
xor
ljmp
jns
adc
daa
imul
das
lock
add
aas
pop
sbb
mov
sub
out
pop
ret
shr
nop
add
dec
mov
push
push
lds
xchg
mov
sbb
sub
shrb
outsb
stos
pop
in
jg
test
imul
lahf
inc
arpl
loop
ja
dec
stos
filds
xchg
pusha
inc
scas
scas
cs
scas
jns
pop
push
lea
pop
dec
jg
inc
pop
add
push
std
or
mov
inc
and
hlt
jae
jns
ja
gs
xchg
cs
std
adc
cmp
int
cmp
lea
adc
fmul
loop
test
lret
mov
fcomps
push
lcall
divl
pusha
je
xchg
mov
cmp
sub
stc
aam
push
icebp
fnstcw
movsb
loopne
data16
aad
xor
xor
imul
and
ds
sbb
icebp
in
cmpsl
and
cmc
shl
cld
push
jle
xor
int3
xor
and
call
mov
rorb
xchg
and
jae
gs
leave
dec
fnstenv
pop
jge
pushf
int
inc
and
lret
lock
inc
xor
jmp
call
add
push
add
xor
pop
mov
enter
mov
push
lds
test
enter
popf
fucom
mov
pushl
mov
and
test
dec
loope
push
mov
fdivrl
cltd
adc
pop
add
xchg
mov
mov
and
std
push
jmp
cli
std
lret
in
push
adc
mov
add
repz
xchg
cmpl
cmp
dec
mov
cltd
test
adc
sub
mov
pop
or
mov
push
stc
mov
gs
mov
js
push
xchg
inc
jecxz
jg
xchg
dec
fstp
lods
arpl
push
in
negb
xchg
xor
mov
mov
scas
mov
mov
cld
mov
xchg
cmp
loope
stos
push
pop
inc
call
jmp
dec
or
dec
jns
or
out
lods
push
sbb
cmpsb
int3
or
xchg
or
cmp
mov
in
mov
insb
repz
insl
push
sub
hlt
aas
ja
rcrb
in
sbb
xchg
push
ss
jl
mov
cmp
jne
cmp
in
push
sub
orb
stos
adc
gs
mov
cli
lods
nop
ret
push
cltd
arpl
dec
inc
pop
sahf
push
loop
outsl
jne
js
gs
adc
negl
inc
push
cmc
xlat
mov
test
inc
mov
inc
shrl
xchg
pushf
add
xchg
adc
add
lock
ftst
fcmovbe
mov
mov
push
sub
mov
mov
imul
loopne
es
jbe
sahf
mov
lea
lret
mov
cmp
push
mov
lcall
notl
inc
outsb
xor
sub
test
addl
aas
stos
fs
ds
push
mov
mov
das
ret
scas
push
mov
cs
mov
inc
jne
in
rorl
pop
loop
pusha
adc
cmp
loope
and
rcrl
cld
mov
shlb
adc
mov
stc
inc
imul
inc
js
pushf
xchg
rcrl
and
inc
mov
fwait
xchg
pop
dec
xor
mov
xor
sub
jae
xchg
and
push
aaa
inc
xchg
mov
and
jo
aam
shl
xor
repz
mov
js
aad
sarl
hlt
dec
test
dec
mov
sti
push
push
jmp
fmuls
xor
into
mov
loopne
icebp
sub
stos
mov
popf
daa
scas
dec
dec
cmc
lock
ja
add
cmp
popf
rclb
adc
cmp
pop
roll
lahf
jnp
or
movsl
mov
and
jp
ja
lock
inc
ficompl
insb
mov
shlb
mov
repz
rcl
xor
inc
inc
enter
sbb
xchg
ljmp
push
dec
call
jle
dec
or
xchg
nop
cmp
insl
std
xor
std
or
mov
adc
xorb
ja
push
inc
and
push
xchg
sub
jnp
arpl
push
arpl
fsubrl
sbb
or
pusha
push
sbb
jle
in
ret
pop
ljmp
movsl
test
pop
mov
out
test
test
and
pop
mov
pop
mov
scas
xchg
push
mov
jae
mov
not
push
push
data16
xchg
adc
adc
sub
mov
inc
inc
add
lret
mov
ja
xchg
mov
stos
push
shrl
mov
pop
mov
xor
bound
adc
and
jnp
and
aam
fwait
repz
das
bound
rcrl
sub
push
cli
std
mov
pop
push
es
xchg
sub
roll
sbbl
lock
cli
rol
cs
mov
sub
insl
adc
xchg
sarl
sub
or
outsb
mov
clc
es
xchg
cmpsb
bound
test
shll
push
cmpsl
dec
movsl
stc
sahf
cmp
stc
adc
xor
jmp
cmp
fiadds
loope
push
mov
and
mov
out
rclb
nop
adc
jmp
push
mov
add
pop
push
jns
xchg
push
mov
adc
pushf
aaa
mov
int3
add
mov
stos
mov
call
sub
xchg
cmp
adc
subb
out
sub
cmpsb
xor
and
jbe
inc
addl
sub
mov
push
lea
popf
jmp
pusha
adc
xchg
mov
push
mov
cmpsl
cli
pop
daa
add
shll
mov
dec
cld
lds
xchg
jl
xlat
in
and
add
jbe
lods
or
sbbb
mov
pop
cmp
mov
or
ds
mov
or
sbb
pop
pop
sahf
fbld
push
shlb
in
mov
fisubrs
scas
scas
mov
mov
sets
mov
addr16
cmp
jmp
push
xchg
mov
out
imul
mov
push
dec
orb
int
sbb
push
imul
push
lock
clc
or
sub
nop
and
xor
sub
cmpsb
out
xchg
enter
fldenv
shlb
jne
ret
and
addr16
inc
xchg
sti
pushf
xchg
or
iret
sub
cmp
xor
and
stos
add
aaa
cmp
sbb
rcl
clc
fidivrs
mov
loopne
pop
cwtl
and
aam
dec
mov
adc
and
loopne
mov
push
jp
dec
push
test
mov
and
mull
or
lcall
sub
push
js
mov
pop
aad
dec
insl
pop
rolb
loop
cmovno
fstp
push
fnstenv
inc
sti
push
xadd
pop
jle
xchg
mov
sub
mov
fdivs
lcall
and
popf
mov
leave
sub
or
mov
cmp
std
mov
jb
scas
data16
mov
cmc
sub
and
ljmp
mov
sub
imul
jl
and
or
out
shll
repz
out
out
pop
scas
mov
jno
clc
adc
inc
push
out
scas
clc
or
xor
jg
xor
jg
or
gs
adc
arpl
adc
and
in
out
inc
scas
rorl
push
push
ficomps
push
ja
jb
mov
cmp
in
add
int
out
popf
aas
dec
add
in
and
jp
xchg
ja
ljmp
cmp
pop
mov
xchg
aaa
in
jb
sbb
lods
dec
jnp
push
test
hlt
add
jae
or
pusha
pushl
xchg
cmc
and
or
pop
mov
leave
aam
inc
jecxz
jne
jge
dec
iret
cmpsb
lret
fstp
lar
dec
ret
out
xchg
pop
decb
or
xchg
and
lcall
sbbl
sahf
pop
xchg
shrl
mov
out
movsb
sbb
sub
cs
mov
add
adc
jecxz
test
xor
push
pushf
lea
aam
fists
sbb
les
js
add
fs
insb
cmpsl
xchg
sbb
push
push
mov
mov
push
pop
mov
ja
ss
js
andb
mov
mov
inc
rcrb
mov
ja
mov
ret
inc
enter
jo
sbb
loopne
lods
stos
shll
int3
cltd
psrlw
mov
ret
add
cmp
int3
inc
push
jmp
cs
and
push
jnp
cmpsb
jmp
sbb
ja
outsl
adc
xchg
frstpm(287
rorb
loopne
movsl
xor
push
jns
cmpsl
mov
popf
push
mov
xor
mov
sahf
adc
jae
mov
sub
fdivs
repnz
push
xor
popa
nop
xor
out
and
in
pop
leave
pop
mov
jmp
pop
sbb
js
xor
inc
xchg
stos
in
pop
push
dec
in
stos
cmp
dec
jl
popf
test
in
das
leave
sbb
cmc
jnp
adc
lods
icebp
aad
lea
or
xor
pop
aas
cwtl
mov
cmp
out
pop
in
mov
jne
pop
pusha
lock
push
push
push
lock
inc
lods
dec
rcrb
mov
rcr
rol
xor
push
fdivrl
pop
and
sbb
cmpb
sbb
aaa
pop
scas
aad
add
add
jno
test
andl
incl
or
lods
test
or
jg
cmpsl
add
pop
or
jl
js
push
push
hlt
test
and
push
push
dec
imul
test
or
and
and
dec
mov
cmpsb
sbb
sti
and
add
ss
into
cmp
loop
enter
cli
push
fisubs
fsubrs
je
sub
jno
ljmp
inc
xchg
pop
fs
and
sub
enter
andl
aam
shll
push
aam
std
mov
cmpsb
mov
mov
jl
xor
dec
pop
xchg
push
call
jl
pop
gs
imul
adc
jmp
xor
jg
add
fstl
push
lret
or
mov
adc
sbb
nop
test
or
pushf
popf
xchg
lods
mov
hlt
mov
or
stos
stc
cs
mov
mov
inc
cmp
out
pop
lock
or
dec
leave
stos
xchg
add
in
dec
shl
mov
arpl
mov
je
push
or
push
daa
call
mov
cmp
jmp
bound
out
scas
pop
or
push
add
movsw
outsb
add
and
and
adc
push
insl
mov
pop
sbb
and
cmp
mov
mov
mov
adc
dec
inc
xchg
pop
adc
scas
enter
arpl
vmovd
stos
test
gs
divb
orb
mov
in
clc
or
jae
xchg
cwtl
les
sbb
fidivrl
xor
cmpsl
sbb
sub
call
xor
dec
lret
dec
xchg
fdivr
mov
lcall
test
mov
fiadds
jb
push
jnp
js
cld
jge
sbb
int3
arpl
jge
out
jecxz
xchg
push
inc
lods
add
pop
mov
xchg
in
rcrb
repz
mov
aaa
cmp
dec
and
cs
imul
shll
mov
mov
aaa
adc
mov
mov
mov
movsl
mov
dec
or
js
test
leave
push
iret
cmp
dec
in
jns
sub
push
cltd
lods
je
fwait
push
mov
cmpsl
aam
push
es
hlt
sti
sub
leave
shlb
adc
repz
push
aam
sbb
lcall
xlat
aaa
sub
cli
mov
stc
adc
and
push
cmpsl
jnp
lcall
cmp
jle
adc
movsl
icebp
lods
push
lds
cmpl
push
push
data16
push
xlat
and
jne
push
arpl
add
pop
and
inc
push
insb
mov
push
lret
stos
imul
fnstsw
inc
int
popf
loope
stc
std
dec
movsb
cmpb
xchg
or
mov
mov
xchg
cld
bound
gs
int
adc
sahf
movsl
pop
jle
sub
push
lods
jb
cmpsl
and
fildll
or
fidivrs
jnp
push
mov
cmpsl
icebp
inc
ds
adc
inc
pop
add
mov
insb
mov
inc
xor
jp
xor
pop
es
and
mov
jg
dec
pop
jno
sub
cmp
int
in
shrb
nop
inc
xchg
add
ds
out
inc
push
xor
sahf
rorb
or
mov
dec
mov
into
jecxz
push
orb
cmp
rolb
cmp
pusha
inc
add
xor
loopne
bound
cmpsb
cmpsb
add
jecxz
mov
mov
shrb
divl
ss
dec
arpl
push
push
call
loope
inc
push
cmp
dec
fidivl
mov
push
iret
push
out
mov
mov
shrb
or
data16
imul
rcrb
ss
adc
add
ja
lea
xor
data16
mov
mov
mov
lret
jae
out
inc
out
sub
pop
in
cld
jo,pn
jb
cmp
adc
sub
mov
mov
stos
adc
stos
addr16
xchg
inc
rorb
fwait
in
out
mov
cmp
adc
jns
fmull
cmp
jl
imul
xchg
out
or
mov
pop
stos
cld
roll
unpcklps
shrl
outsb
adc
pop
testl
fst
lret
sub
jl
pop
int
mov
imul
push
subl
js
icebp
push
and
push
scas
lahf
jl
sub
sub
cltd
jne
and
add
xor
lcall
pushf
mov
aad
mov
addr16
cwtl
sar
fnstcw
xor
lods
es
mov
mov
pop
addr16
movsl
xchg
sbb
pop
dec
xchg
and
out
mov
push
cmc
std
dec
int3
xor
das
push
ja
sbbl
dec
pop
push
and
pop
xchg
xchg
mov
mov
jge
out
dec
inc
jp
dec
mov
sbb
inc
push
pop
aam
adcb
cmpsl
pop
jl
inc
xor
jo
adc
sub
addl
inc
push
mov
nop
cltd
ss
push
movsb
ret
mov
or
cmp
xchg
mov
inc
push
jb
mov
dec
shlb
inc
scas
push
les
cltd
cmp
daa
sbbl
notl
cwtl
inc
call
push
inc
push
pop
sahf
xor
dec
pop
popa
inc
adc
xchg
bound
mov
pop
rcrl
icebp
aad
jmp
in
xchg
and
fnstenv
mov
push
dec
xor
xchg
mov
xor
add
inc
jb
jo
xchg
ret
repnz
mov
push
outsl
outsb
data16
add
scas
xor
dec
push
mov
jae
sbb
rorl
inc
fdivrs
mov
inc
jmp
mov
or
rcll
and
dec
lods
fldenv
jne
push
cltd
and
in
je
fisubs
add
fldenv
je
or
ljmp
cmpsl
mov
inc
jo
rcr
xor
outsl
out
fwait
dec
pop
pop
rorb
inc
jno
cli
in
imul
sbb
pop
or
and
popa
mov
jno
rcll
push
lea
inc
mov
add
push
insb
pop
and
jne
out
aaa
leave
pop
cmpsl
add
mov
dec
insb
dec
in
sub
stc
mov
in
dec
cs
mov
pop
fcmovne
ljmp
lcall
movsb
xorb
test
dec
push
fstpl
xor
mov
dec
test
cwtl
mov
pop
dec
mov
push
sbb
jle
mov
lret
ja,pt
sub
or
pop
xchg
pop
mov
push
testl
cmpsb
cltd
test
pop
push
movsl
cwtl
push
shlb
jmp
jb
sub
ljmp
jo
bound
stc
in
and
mov
pop
and
repz
jne
rcll
add
mov
jmp
gs
and
push
xchg
cmp
mov
cmp
roll
or
mov
aaa
jo
cld
pop
mov
shlb
pop
inc
js
pop
loopne
shll
mov
sub
inc
xchg
ds
inc
pop
xchg
pop
nop
in
lods
cmp
mov
dec
fistl
aas
aaa
loopne
leave
iret
icebp
mov
xor
inc
mov
mov
mov
rcrb
hlt
cltd
or
ss
jl
sti
movsb
insb
and
mov
pushf
out
pop
dec
loop
out
jge
sbb
pop
pop
jnp
xor
scas
ljmp
xor
push
pop
or
xchg
clc
adc
ljmp
add
out
loopne
xchg
add
jae
pop
cli
or
xchg
pop
xchg
xor
mov
inc
sub
das
push
ljmp
inc
add
les
mov
mov
insb
add
aad
jns
shll
stc
or
out
xchg
and
xchg
aas
shlb
xchg
mov
mov
les
add
jg
mov
repz
test
sub
and
ret
sbb
std
fsts
sub
push
stc
mov
sbb
jg
cmp
cmp
jnp
xor
les
mov
mov
xchg
adc
push
pushf
and
cmc
jno
popa
pop
cs
shll
mov
test
mov
fmull
hlt
insl
mov
int3
mov
push
mov
insb
xlat
and
fisubrs
jb
dec
ds
rcll
pop
xchg
out
cli
lock
adc
xor
cmp
jle
inc
and
lret
cmpsl
sbbl
push
push
pop
std
sub
imul
jp
lods
call
pushf
sbb
out
stos
call
mov
xor
jmp
lret
insl
lods
icebp
aaa
add
arpl
scas
imul
icebp
mov
dec
movsb
push
sti
or
mov
add
mov
add
dec
or
xchg
inc
pop
sub
rcll
xchg
xchg
sbb
aaa
pushfw
stos
lods
scas
mov
adc
pop
mov
lds
jle
gs
push
push
dec
sub
aas
pop
out
mov
pushf
je
idivl
xchg
sahf
popf
xchg
mov
clc
mov
dec
adc
cmp
pop
lds
jp
es
arpl
mov
fsubr
xchg
cmp
add
test
cwtl
lea
mov
aad
call
and
loopne
leave
sbb
inc
pop
mov
cmp
outsl
test
dec
jle
sbb
xor
sbb
in
outsl
rcll
and
cmp
fcmovb
cmp
pop
xor
stos
dec
cmp
mov
or
cld
out
sub
scas
push
adc
inc
dec
xor
pop
rorl
or
pusha
sbb
cld
pop
jb
outsb
jbe
dec
icebp
in
mov
mov
fldcw
js
push
add
hlt
in
popf
cmp
ficompl
push
stos
rol
pop
mov
jns
cmc
add
cmp
sbb
sbb
mov
mov
sub
sub
cmp
mov
rolb
xchg
hlt
addb
pop
xlat
nop
dec
divb
adc
out
and
push
rcrb
ret
mov
sub
into
inc
pop
inc
cwtl
jns
pushf
cmp
pop
in
sub
push
adc
test
sub
inc
shr
push
out
xor
scas
mov
fwait
mov
in
pop
mull
fmull
add
inc
ret
fstpt
leave
rclb
pop
cmp
aaa
shll
or
repz
test
xchg
aad
pop
dec
add
scas
lods
add
fsubrl
out
imul
xchg
fsubs
push
shll
jl
and
loopne
aaa
cmp
jmp
xlat
cmc
negb
mov
flds
mov
cs
pop
xchg
mov
rol
or
push
nop
lock
pop
testb
and
insb
fsts
dec
testb
push
xor
mov
adc
and
or
insb
xor
out
inc
xchg
jne
popf
mov
nop
adcl
mov
or
pop
outsl
push
test
xor
lods
pop
or
pushf
sub
lret
cwtl
lahf
dec
in
ja
add
sbb
push
pusha
push
add
adc
pop
fdivrs
inc
test
je
pop
and
orb
mov
sbb
mov
iret
cwtl
mov
mov
sbb
lcall
inc
pop
mov
orb
cs
mov
add
pop
daa
or
js
sub
xor
inc
or
sub
cwtl
sub
loop
iret
push
ret
and
push
xchg
movsl
lods
add
in
cmp
enter
cmp
xchg
xor
imul
popf
insb
mov
loope
test
xchg
push
mov
cmpsb
cs
push
xor
cs
pushf
mov
ret
mov
movsb
mov
push
in
outsb
and
xchg
cmc
dec
inc
xchg
adc
push
insb
push
pop
scas
dec
mov
ljmp
push
bound
aaa
cmc
rclb
jno
jns
push
xor
subl
and
inc
orb
adc
xchg
arpl
dec
xor
and
je
push
push
mov
fimuls
dec
lret
mov
mov
mov
out
fucomi
add
sub
out
shufps
aad
outsl
jbe
arpl
xchg
push
xchg
test
mov
jnp
mov
mov
repz
fs
mov
jle
adc
push
mov
mov
or
xchg
into
clc
push
push
shrb
repz
or
adc
jg
jnp
mov
push
movsl
sub
xchg
dec
rorb
xchg
push
xchg
cmpsb
jbe
jle
stos
in
ja
jns
jle
hlt
or
test
jg
push
add
out
mov
pop
incb
mov
pusha
pop
push
push
inc
xchg
mov
arpl
scas
int
cmp
leave
inc
cmp
and
cmp
insl
sub
and
stos
loop
adc
mov
negb
jle
push
cltd
dec
es
add
cmp
cmp
outsb
movsl
add
int3
in
shrb
cmp
adc
fcompl
adc
loop
pop
xchg
push
ljmp
fistpll
clc
cld
jo
jb
aam
xchg
adc
jl
adc
andb
mov
movsl
call
mov
gs
xlat
jne
mov
movsb
inc
aad
ret
jne
push
loopne
sbb
push
fstps
inc
mov
jnp
mov
lods
and
aad
sbbl
aaa
xlat
lock
mov
pop
cld
mov
fistpll
dec
mov
fnstsw
sahf
bound
roll
nop
mov
ja
and
or
imul
bound
in
xchg
rclb
or
inc
dec
pop
dec
incl
in
call
or
mov
xchg
push
xor
int
pop
test
adcl
xor
addr16
dec
xor
icebp
not
fdivl
mov
cli
sbb
mov
outsl
mov
icebp
and
xchg
loope
jno
fisttpll
stos
ja
out
xchg
sti
imul
xchg
adc
lock
or
adc
dec
cli
mov
or
leave
lods
dec
out
mov
mov
cmc
fnstenv
sbb
mov
cmc
dec
sub
sub
dec
push
aam
push
push
adc
decb
aam
xor
cmp
adc
scas
imul
push
adc
inc
test
add
cmc
in
sbb
mov
jne
daa
mov
push
jnp
push
xor
xor
jnp
sbb
lret
cmp
sarb
je
stos
adc
stos
out
adc
imul
xchg
mov
dec
pop
sub
cmp
in
mov
jp
shll
outsl
or
mov
push
in
sub
cmp
sub
andb
cmp
mov
test
jle
es
add
outsb
sbb
push
add
sti
data16
cmp
pusha
sbb
rclb
jns
shll
xchg
jno
rcll
push
shr
pop
mov
icebp
jecxz
xor
adc
loop
jmp
cmpsb
mov
aam
insl
add
cmp
mov
xor
in
out
mov
out
push
les
xlat
mov
dec
pop
or
lcall
sbb
out
dec
cmc
cmpsl
sub
aas
subl
fsubs
and
inc
enter
sub
cltd
push
mov
dec
add
and
push
adcl
dec
add
push
sub
xchg
enter
add
icebp
in
mov
xorb
outsb
sbb
fnstcw
ffreep
dec
xchg
mov
ss
push
mov
dec
pusha
pop
push
out
push
mov
push
int3
sti
rcrb
xor
es
ss
jp
sbb
pop
sarl
shlb
rorl
scas
stos
jp
sub
lret
int
dec
lods
mov
test
repz
ficomps
jmp
mov
es
xchg
stos
xlat
int
mov
pop
fsubs
faddl
outsl
push
cmc
je
xlat
cmp
sbb
xor
jo
gs
xor
test
lcall
xchg
xor
dec
sahf
sub
xchg
cmp
imul
ret
stos
insb
pop
fcoml
scas
addr16
push
faddl
mov
mov
or
aam
loope
xchg
sub
aas
xor
sbb
scas
push
lret
push
sub
push
sub
inc
lret
push
test
out
push
or
arpl
mov
dec
pop
test
icebp
dec
cmp
push
outsl
popa
imul
aam
jne
mov
icebp
shl
popf
jbe
dec
jle
jecxz
add
mov
sahf
and
and
add
sahf
lea
xor
dec
inc
or
xchg
ss
std
int3
rorb
mull
mov
hlt
inc
daa
jg
ss
push
pop
std
in
andl
gs
and
cmp
add
cs
or
orb
add
cmp
sub
pop
jns
cld
mov
sbbb
in
lock
mov
insl
ror
push
orb
jge
push
xchg
icebp
imul
sbb
cmp
addr16
mov
hlt
or
or
icebp
lock
sbb
shlb
pop
aas
inc
lock
xor
xchg
in
cltd
fucomi
fstpl
jbe
mov
dec
mov
scas
mov
lcall
jne
fdivl
inc
fdivs
sbb
push
test
pop
sbb
adc
cmpsb
pusha
out
or
cmp
in
mov
das
xchg
lret
jmp
xor
int3
incb
test
cmp
xchg
mov
inc
pop
push
add
jle
jne
cmpsl
loopne
into
xchg
dec
loope
cmp
inc
fucom
xchg
dec
movb
sub
movsb
pop
scas
adc
jnp
mov
sub
ret
and
xchg
add
pusha
enter
push
lahf
inc
inc
arpl
jmp
stc
cmpsb
mov
lock
ja
mov
mov
mov
dec
or
mov
mov
fldcw
and
jbe
xchg
inc
lcall
sub
and
call
cmpsb
ret
idivb
je
inc
lcall
jnp
cmp
cmpsb
jg
cmp
xor
scas
push
sub
push
pop
pop
jmp
xchg
add
sti
sbb
js
nop
adc
and
pop
insb
jnp
jl
jo
stos
sahf
cmp
push
jmp
jl
or
xchg
sub
pop
inc
fdivl
fisubrs
push
push
dec
mov
xchg
push
repz
in
xchg
push
cld
shlb
mov
sbb
movsl
vphadddq
les
sub
cmc
xor
mov
shl
lcall
cmp
dec
outsl
xchg
fcomps
adc
sahf
psadbw
mov
cltd
adc
push
push
mov
push
mov
pushf
mov
es
ret
mov
add
adc
mov
jb
scas
lds
push
fcompl
dec
cmp
mov
aaa
jno
clc
iret
inc
mov
xor
loopne,pn
aam
dec
imul
adc
stos
dec
push
test
cmp
mov
xchg
push
shl
push
das
jge
rolb
mov
mov
outsl
adc
and
shll
lcall
mov
pop
xor
push
sbb
and
mov
dec
mov
push
jnp
dec
roll
pop
fdivrl
mov
fadds
ret
pop
and
mov
jecxz
mov
repnz
pop
mov
arpl
pop
or
pop
aaa
jmp
frstor
and
loopne
sbb
xchg
dec
push
and
adc
outsl
pop
jae
jae
xchg
adc
pop
inc
hlt
and
je
add
fnsave
mov
xor
js
sbb
mov
inc
bound
push
jle
dec
insb
sub
adc
add
add
mov
in
in
jp
push
imul
mov
enter
cld
popf
mov
push
out
jns
pavgw
and
lods
aaa
stc
scas
test
in
leave
aas
pop
cmp
in
cli
aam
xchg
mov
or
dec
ret
mov
xor
stos
dec
cmp
sbb
in
cmp
in
mov
add
push
je
cmc
mov
inc
push
adc
ljmp
push
add
mov
or
adc
cmp
pushf
add
add
sbb
xorb
in
scas
cli
cli
pop
leave
mov
imul
push
jl
push
shrl
inc
sbb
sub
adc
and
incb
sbb
ljmp
aam
or
or
roll
outsb
loope
push
roll
dec
sbb
add
in
push
pop
shr
mov
mov
pop
sub
cmp
fdivl
dec
enter
push
cmp
rcl
jg
loopne
sub
jb
mov
enter
mov
push
iret
into
mov
xor
outsl
icebp
decb
xchg
dec
lcall
outsl
pop
dec
adc
or
scas
xor
mov
xor
movsb
inc
cmpsb
sbb
cmp
incl
int3
xchg
cmp
dec
mov
rcrl
adc
lods
jae
cwtl
out
in
xlat
jmp
shlb
xchg
pop
rep
dec
mov
sahf
insb
push
mov
mov
adc
push
in
xchg
pop
xchg
push
insb
call
adc
pop
das
add
mov
jmp
cmp
mov
jmp
jnp
cmpsl
in
or
mov
rcrl
sbb
jns
in
testl
lahf
mov
cs
rclb
inc
into
or
jl
lret
mov
test
jle
dec
in
mov
jl
cmp
rorb
mov
insb
mov
sub
fdivs
fisubs
mov
sub
cmpsb
add
inc
mov
cmp
mov
sub
push
into
mov
add
or
loopne
je
dec
aas
aam
and
lods
and
repz
lods
rolb
dec
stos
stos
jecxz
jp
shrl
loop
sbb
push
xchg
push
mov
pmulhuw
adc
stc
cmp
adc
push
mov
jmp
in
mov
addr16
leave
cmpsl
jno
out
flds
sub
cmp
inc
mov
mov
clc
in
dec
movsl
pop
cmpsb
lock
dec
pusha
icebp
subb
cmp
xchg
xor
jp
cmpsb
jne
mov
mov
rcl
int
out
dec
push
mov
pop
bound
mov
xlat
xchg
sub
jo
insb
insl
call
into
out
cld
push
xchg
mov
mov
pop
je
ret
inc
add
repnz
and
jbe
mov
arpl
popf
mov
push
push
jg
fnsave
jmp
out
xor
dec
xor
scas
jp
dec
sahf
ljmp
xor
and
out
nop
arpl
addb
or
enter
dec
cbtw
adc
add
sbb
faddp
jae
nop
inc
mov
push
icebp
or
aam
push
mov
imul
in
aas
adc
dec
inc
sbb
adc
adc
int
test
jns
inc
pop
fsubrl
aam
les
sub
and
push
xchg
lahf
lret
push
nop
loop
iret
fucomip
xor
add
inc
pusha
and
popl
das
scas
xor
mov
dec
fbld
mov
divl
cmp
jns
movsb
fcmovne
scas
fdivrs
xchg
out
hlt
jp
popa
icebp
xchg
std
lea
insb
fmull
idiv
push
data16
cli
test
mov
ficoml
mov
out
loop
dec
mov
sub
arpl
dec
divb
cmc
sbb
pop
mov
test
inc
rcl
pop
mov
stos
add
pop
and
and
pop
daa
sub
pusha
lock
sbb
lods
repz
std
outsl
incb
push
jmp
cmp
xchg
pop
add
mov
add
dec
les
out
push
push
bound
sti
mov
pop
sbb
ret
aaa
mov
stos
dec
ljmp
sub
lock
dec
je
gs
mov
jbe
sti
je
push
mov
sbb
les
cmp
adc
iret
lret
mov
xor
ret
xchg
dec
pop
sahf
and
imul
pop
lds
fs
mov
or
mov
setae
sub
and
inc
xchg
push
daa
in
sbb
xchg
shlb
xchg
test
and
mov
add
lcall
mov
pop
add
test
cltd
les
dec
out
dec
js
xchg
aas
mov
lea
je
cmp
fs
in
lea
cwtl
test
aad
dec
mov
mov
loopne
xor
xchg
out
jns
fidivl
sub
out
jns
aam
orl
inc
stc
cli
sahf
in
fldenv
mov
cmp
xchg
jbe
mov
out
push
xchg
incl
pop
in
sbb
cwtl
adc
or
and
cmp
or
incl
xlat
sti
push
inc
push
cmp
or
stos
adc
cmc
notb
call
stc
adc
push
xor
int
push
lods
dec
insb
push
fwait
shll
adc
pop
cmp
in
mov
mov
and
adc
adc
jno
sub
push
std
cld
test
test
subb
jno
nop
xor
xchg
fldenv
out
jae
xchg
pop
xor
in
and
pop
mov
add
daa
scas
vpsravd
and
movsb
sub
and
imul
lock
les
inc
mov
push
lcall
jge
pop
fldcw
test
ljmp
push
xchg
mov
shl
mov
add
push
mov
call
roll
sahf
xlat
and
cld
in
ret
rorb
fisttpll
addb
les
das
in
jbe
push
push
jae
mull
inc
sub
loopne
jnp
in
cmpsb
xor
adc
pcmpgtw
out
or
mov
push
shrb
enter
adc
and
jno
and
dec
xor
stc
loop
fucomp
xchg
in
inc
pop
addr16
cmpsl
jle
inc
sbb
add
mov
fdivrs
or
and
cmp
xchg
pop
rcrl
push
mov
ret
mul
mov
ljmp
out
mov
add
iret
inc
out
push
jbe
mov
mov
and
inc
push
inc
je
jne
pop
in
jae
xor
orb
push
fsubs
insb
movl
and
mov
lret
cmpsb
dec
fcomip
outsb
and
mov
mov
xchg
xchg
jl
imulb
xchg
adc
pop
cltd
lods
jb
sti
loop
dec
movsl
and
int3
xchg
jbe
loopne
sbb
sub
mov
jmp
sbb
sub
enter
sbb
jmp
cli
cmp
pusha
pop
push
xchg
xor
lret
pushf
repz
dec
aaa
and
into
cwtl
in
lods
cmp
push
jbe
or
jp
push
cmp
fistpl
mov
cmpsl
push
fs
and
popf
pusha
jecxz
mov
iret
arpl
xchg
test
scas
fistl
mov
es
or
dec
add
ror
mov
mov
sbb
ret
les
pop
aas
and
xor
push
xor
inc
test
in
xchg
lret
mov
in
repz
or
stos
out
mov
and
jg
mov
push
into
nop
or
outsb
ds
test
out
bound
lret
outsb
jg
and
ja
sub
repnz
mov
in
fwait
cmpsl
fsubrs
xchg
mov
lods
enter
enter
movsl
pop
movsb
adc
cltd
rolb
vmread
inc
adc
loopne
pop
pop
in
adc
dec
push
jecxz
fisubs
cmp
cwtl
mov
stos
sbb
xchg
adc
jnp
or
mov
xor
mov
ret
lcall
mov
dec
es
jge
dec
sub
xchg
adc
or
loop
sbb
iret
in
das
out
sub
mov
cltd
xchg
rcll
or
xor
jg
and
pushfw
lods
jns
test
dec
cmp
pushf
scas
lret
arpl
adc
xor
ds
mov
fcomps
ret
scas
clc
dec
testl
shl
xor
sub
enter
cs
sbb
xchg
xlat
mov
pusha
aam
not
addr16
xor
insb
movsb
push
call
rcl
adc
imul
pop
es
sbb
add
aad
add
clc
ljmp
dec
xchg
loop
hlt
jg
xor
add
test
xor
mov
or
inc
insb
int
pop
sbb
ds
leave
xchg
mov
xchg
mov
pop
lret
xchg
outsl
shrb
adc
shlb
and
cs
dec
xchg
movsl
inc
daa
lret
dec
stc
sbb
cmp
fmuls
dec
mov
sbb
call
lret
xor
subb
dec
shll
cmp
mov
push
lret
iret
loop
in
dec
push
xor
mov
loop
repz
push
ret
rep
and
push
lods
sbb
pop
mov
ror
cwtl
pop
stos
and
push
or
mov
sar
shrb
ret
mov
dec
insl
data16
cmp
mov
cmp
xchg
xchg
xchg
add
xchg
enter
out
mov
clc
lcall
jle
psubsb
jmp
dec
notl
scas
mov
testb
push
rcrl
xchg
pushf
xchg
jg
mov
pop
mov
icebp
xorl
add
dec
fldcw
shl
fwait
scas
cmp
jecxz
adc
imul
adcb
ret
fstp
xor
sub
xchg
adc
mov
movsl
rcl
push
xor
sub
int
mov
loopne
insb
ljmp
mov
mov
js
xchg
rorl
cwtl
mov
push
adc
mov
out
int3
lds
mov
xor
push
pop
neg
mov
pusha
cmpsb
dec
push
xor
movsb
jne
ficomps
xchg
jnp
push
das
mov
std
aam
mov
xchg
fidivrl
inc
arpl
jno
js
rclb
dec
mov
jnp
icebp
push
loop
cmp
mov
dec
cmp
icebp
fneni(8087
testb
inc
movsb
pop
scas
icebp
cmpsb
sar
push
popa
sbb
xlat
popf
lcall
out
int
cmp
sbb
int
aam
sbb
inc
xor
push
and
call
push
jge
clc
imulb
xchg
sbb
lods
jns
into
fistpl
push
push
les
jns
andb
inc
jge
rolb
ficoml
dec
cltd
out
enter
std
mov
popf
jge
cmpsb
ret
out
mov
dec
das
push
and
jae
mov
jnp
mov
in
jecxz
and
jnp
sahf
adc
sahf
fidivrl
sub
add
movsb
jg
push
lea
and
stos
cmp
insb
xor
xor
lret
push
or
pusha
les
cld
push
cmp
jb
test
dec
clc
mov
jno
xchg
loope
pop
inc
mov
dec
cs
mov
addr16
adc
scas
xchg
arpl
popf
fcoml
ret
or
inc
add
sub
mov
stc
in
scas
dec
pop
mov
aaa
xor
inc
dec
jne
loope
data16
jno
insl
ljmp
mov
mov
mov
leave
xor
and
loope
jne
pop
jo
cmpsl
mov
das
and
mov
adc
loope
jle
test
jg
fistps
pop
and
mov
gs
mulb
idiv
sub
push
jecxz,pn
aad
popa
aad
push
mov
dec
inc
adc
cwtl
xor
imul
push
sbb
pop
sub
pushf
insl
es
pop
jae
jno
dec
into
outsb
rclb
out
push
pop
inc
lds
inc
jne
ret
or
adc
jno
sub
sahf
or
jmp
and
aaa
cmp
cmp
int3
cli
dec
add
mov
dec
lds
sub
mov
mov
ljmp
sub
mov
dec
fsub
xchg
inc
and
mov
fldcw
inc
fnstsw
insb
and
sub
int
movsb
test
out
inc
mov
cmpsb
mov
lret
adc
mov
sub
shll
in
rcrl
nop
imul
js
push
sbb
into
sarl
mov
pop
mov
loope
loope
push
mov
enter
int
sub
cmpl
std
out
testb
jae
xchg
stos
mov
xchg
mov
push
dec
pop
xchg
push
pop
xchg
shrb
fildl
in
fs
fisubl
dec
pop
sarl
fmull
fnstsw
mov
fwait
pop
pop
repz
icebp
pop
lahf
stos
mov
mov
mov
sbb
roll
mov
bound
push
and
sub
push
mov
ljmp
mov
decl
jmp
jne
sbb
jbe
scas
adcl
add
cmpsl
testb
out
xchg
js
test
lret
add
mov
int3
add
lcall
gs
pop
push
mov
ret
sub
incl
adc
test
adc
scas
js
jge
ljmp
mov
inc
repnz
imul
sub
jno
sub
mov
xor
dec
inc
xchg
cmp
pop
es
mov
pop
dec
out
cmp
bswap
jne
adc
and
sub
cmp
pop
mov
int3
out
jnp
imull
jge
cmc
sahf
or
loop
ficoml
mov
pop
dec
mov
inc
divb
dec
lock
jne
mov
add
mov
lds
or
inc
loop
rolb
push
fwait
xchg
out
into
sarl
cld
xchg
xor
push
adc
pop
jb
adc
mov
lods
call
cmp
pop
jecxz
mov
cltd
sar
mov
push
movsb
sub
and
sbb
jae
cli
mov
sub
ljmp
inc
sub
aad
mov
xor
in
mov
sbb
jno
add
cmpsb
call
adc
and
popf
fisubl
push
sbb
pop
mov
ds
outsl
or
pop
lock
fdivl
cmp
dec
dec
pop
pop
sub
fisttpl
cmpsw
imul
and
aad
orb
stos
dec
clc
mov
add
outsb
push
dec
or
pop
std
mov
or
lret
cmp
jl
lock
or
incl
cltd
std
popf
dec
cmp
popa
sbb
sub
sub
fimuls
mov
dec
sub
mov
xlat
cli
fwait
stos
in
or
push
mov
inc
xchg
in
push
into
lret
popf
inc
popa
cltd
pop
je
push
insl
out
pop
imul
cmpsl
shll
fsubr
lods
out
popf
push
ss
dec
or
lret
push
dec
dec
push
shll
lea
cmpsb
add
add
inc
les
sbb
dec
sbb
std
cli
outsl
xchg
pop
add
imul
pop
lret
push
lcall
mov
cmp
fadds
out
fistps
dec
stc
stos
cld
out
call
pop
jns
xor
jb
push
ret
or
pushl
fists
test
sub
cmp
lds
movsb
inc
xchg
or
loop
stos
divl
loope
into
arpl
push
stc
pop
sarl
sbb
mov
sub
fcompl
fwait
stos
mov
sub
cs
mov
xchg
xor
in
fstpl
into
insl
push
cmc
test
popf
inc
mov
or
ja
cld
adc
inc
stos
test
je
divb
rorb
inc
loop
dec
xchg
cltd
mov
mov
sbb
fcomp
dec
test
xor
sahf
inc
mov
fsubs
inc
ret
lods
inc
inc
cmp
or
scas
add
stos
imul
jnp
in
mov
sbb
jno
test
pushf
std
test
dec
outsl
cld
stc
sbb
cmp
push
mov
pusha
out
iret
sub
jbe
push
dec
sub
loope
lret
lahf
ss
movsb
xchg
test
adc
jno
push
push
int3
cmp
mov
inc
pusha
dec
movsb
mov
iret
mov
push
and
sub
lock
stos
fistl
jp
fdivrl
push
mov
jns
data16
rcrl
xchg
cmp
mov
adc
out
out
repz
std
pop
loop
mov
test
pop
pop
ljmp
push
loopne
leave
and
jo
inc
test
lods
into
xchg
cmp
pop
inc
mov
ret
out
fbstp
mov
scas
xchg
outsb
dec
cmp
dec
mov
addr16
fs
cmp
fnsave
pop
jno
lea
aam
sbb
pop
out
lock
pop
aam
cmp
sbb
sub
fcomps
sbb
call
or
cmpb
xor
out
mov
iret
loopne
sub
clc
sub
jl
ret
cs
arpl
stc
xchg
jecxz
pop
cmp
aas
pop
sbbb
push
lahf
sub
mov
xchg
data16
mov
lods
xlat
push
shrl
mov
or
out
pop
pop
jnp
xchg
int
or
or
andl
das
imul
jne
pop
lds
push
xlat
sub
mov
rcl
push
scas
or
outsb
bound
xchg
fstpl
cmpsb
xchg
mov
gs
inc
xchg
dec
das
or
jmp
mov
iret
sub
pushl
stos
cmp
xorb
cmp
inc
inc
repnz
popa
push
xchg
loop
jno
aaa
imul
sbb
inc
adc
cmp
mov
sbb
bound
mov
iret
inc
push
cmpsb
add
mov
ficoms
stos
dec
pop
data16
insl
push
push
aaa
push
bound
xchg
dec
shlb
cmp
mov
pop
pop
stc
jns
outsb
push
insl
adcb
setbe
mov
mov
lret
stc
xor
push
sub
and
enter
push
jp
push
gs
dec
sahf
xor
push
loop
lds
and
ljmp
push
adc
dec
lock
mov
xor
fiadds
sbb
call
js
jns
sbb
xchg
mov
adc
and
sub
push
add
xchg
ret
lds
inc
dec
dec
mov
js
in
add
dec
fsubl
inc
mov
sti
dec
add
imul
les
lods
jg
imul
cltd
les
loop
xor
in
lods
rcl
mov
lds
cs
push
and
adc
sub
pushf
js
cmpb
in
in
jne
je
sub
sbb
mov
in
popf
add
jns
and
sub
push
mull
pop
or
cli
test
pushf
jno
lds
rcrl
inc
pusha
test
push
mull
gs
push
jo
and
in
jl
cmp
sbb
aam
or
dec
lock
or
into
xor
sub
add
add
pusha
jnp
xchg
shlb
movsb
test
push
lcall
push
xor
push
call
testl
sbb
xchg
jo
xor
mov
bound
lahf
mov
scas
push
sbb
fistpl
cwtl
sub
ret
or
loopne
punpckldq
inc
lcall
rcl
cltd
je
xchg
inc
mov
cmpsb
repz
inc
push
jmp
push
loop
cs
jp
xchg
adc
mov
adc
repnz
jns
rcll
mov
mov
inc
and
sbb
pop
inc
push
shrl
out
sbb
lcall
pop
pop
xor
insl
cltd
jae
in
mov
jns
push
sbbl
and
xchg
jle
es
sahf
push
arpl
into
fwait
jle
dec
pop
popf
das
or
xchg
sbb
push
fsubr
jo
and
lret
aam
sub
imul
mov
pop
loopne
shrl
jecxz
adc
cltd
or
int3
fninit
mov
jns
sub
test
cmp
cmp
out
xchg
xor
pushw
add
cmp
rcl
dec
sbb
mov
inc
inc
sarl
xchg
dec
push
enter
popf
jecxz
fdivrs
insb
push
push
xchg
inc
clc
mov
in
jbe
faddl
mov
repz
addr16
push
int
and
repnz
jno
xchg
sbb
shlb
adc
in
addl
sub
repz
ret
adc
int3
adc
jne
xor
add
sbb
mov
outsb
push
sbb
push
xchg
mov
scas
dec
call
pop
push
fmuls
inc
xchg
xor
pushf
add
stos
lods
movb
les
scas
pop
insb
push
push
es
adcl
shll
or
dec
shr
inc
daa
insl
pop
pop
cld
cmp
pushf
aas
jmp
leave
insl
add
fiadds
xor
adc
push
in
mov
ss
push
add
push
dec
xor
mov
ljmp
pushf
mov
jo
in
mov
fimuls
enter
aam
fmull
insb
push
lea
xor
jbe
mov
adc
mov
mov
inc
ja
or
ljmp
lahf
xchg
mov
ljmp
mov
mov
mov
addr16
sbb
fcmove
sub
mov
rolb
sub
xor
or
push
mov
les
data16
enter
inc
xchg
int
aas
push
dec
iret
ss
cmp
mov
lea
into
jl
cmpsl
ret
add
mov
jae
mov
ss
inc
pop
add
stos
dec
xchg
jno
jbe
mov
jp
sbb
cli
jl
repz
mov
sub
cmp
and
loope
cmp
mov
sbb
sarl
jne
cmc
mov
and
cmpl
and
dec
out
mov
mov
xlat
and
mov
stos
loop
fstps
cwtl
mov
dec
or
sbbb
dec
lods
outsb
mov
sub
dec
ret
mov
xchg
xchg
aad
inc
and
popa
fnstsw
mov
movsl
xor
adc
cld
in
mov
scas
cli
mov
pop
pop
out
pop
movsl
dec
fwait
pop
sarl
ficoms
movsl
jnp
arpl
and
sahf
ret
movsl
out
mov
ret
mov
mov
pop
fwait
mov
pusha
insb
fwait
or
cmp
js
pop
mov
rcrl
add
sahf
xchg
sbb
jne
xor
add
mov
rcrl
inc
add
adc
gs
decl
inc
ss
sbb
lcall
bound
les
adc
xchg
xlat
fnstcw
cwtl
fucomi
sub
ss
jnp
scas
mov
xlat
sub
inc
outsb
and
add
nop
dec
jmp
or
mov
and
pop
lods
jb
pop
and
into
clc
fldl
leave
pop
dec
sti
pushw
jne
jbe
in
add
dec
push
iret
lahf
and
imul
mov
push
cmp
and
xchg
outsl
sub
int
ret
scas
popa
add
test
bound
lret
sbbb
loopne
test
lahf
lea
xchg
idiv
inc
xchg
mov
ret
push
jne
add
stc
addr16
sahf
jb
dec
push
and
jae
inc
mov
test
insl
pop
ss
ret
loopne
sbb
mov
sub
repnz
cltd
rorb
subb
or
and
sbb
in
jp
xor
fmuls
jo
push
insb
xor
data16
mov
mov
mov
inc
data16
mov
push
je
aaa
push
pop
repz
xchg
jmp
mov
inc
in
mov
mov
inc
pop
xor
movsl
ret
or
dec
jl
push
jmp
cs
sub
cmpsl
push
cmp
or
and
stc
mov
jl
and
pusha
and
lret
or
fisubrl
xchg
movsl
dec
cmc
addr16
scas
jmp
repz
insb
pop
inc
outsb
movsl
dec
xchg
jb
shl
jge
mov
out
repnz
lret
xchg
enter
jle
int3
jl
jne
or
xchg
inc
dec
in
and
lock
mov
enter
or
shrb
pusha
mov
test
cmp
je
fs
pusha
push
jmp
adc
mov
out
or
ret
mov
cmp
jno
adc
or
insl
cmp
rorl
dec
stc
jp
dec
not
loop
and
lahf
add
adc
incb
push
jp
jg
dec
rolb
pop
aad
mov
bound
mov
adcb
popf
jnp
testb
scas
xchg
in
cmp
sub
jge
push
mov
sahf
xor
dec
rol
scas
dec
mov
xchg
push
and
aaa
loope
push
and
xchg
cmp
out
test
shlb
lcall
mov
or
shll
out
shl
hlt
int3
push
sahf
push
xchg
cmp
xchg
jg
aam
imul
cmp
mov
jl
xchg
push
ljmp
mov
and
mov
or
aam
clc
addr16
mov
adc
inc
shll
push
or
push
std
adc
lods
bound
sbb
fldl
push
aas
cs
inc
adc
add
sub
sub
icebp
daa
lock
pop
mov
or
cmpsb
cld
mov
les
inc
adc
push
add
push
rorb
mov
or
clc
nop
jp
and
int3
je
jecxz
stos
push
loope
lret
push
jecxz
out
mov
sarl
add
pop
push
imul
lea
popa
adc
ss
icebp
xor
pop
pushf
inc
inc
inc
pusha
int3
arpl
jp
decl
test
lret
das
inc
daa
xchg
sub
xchg
cmp
sbbb
jg
cs
int3
out
add
cmp
add
sub
jns
xor
adc
stos
inc
dec
mov
sar
lret
inc
and
xor
movsl
and
je
aaa
lock
mov
and
je
incl
int
mov
dec
add
cmpl
clc
test
fwait
test
pop
insl
pushf
pushf
and
push
mov
insl
loope
stc
jo
mov
jbe
inc
icebp
test
adc
hlt
xchg
add
out
adc
repnz
mov
loop
in
xchg
jp
addr16
inc
pusha
fidivrl
mov
push
xor
divl
and
add
adc
pop
call
pusha
neg
rorb
inc
or
mov
out
int3
dec
dec
mov
and
dec
mov
mov
aas
pop
jp
inc
fdivs
sbb
in
sub
out
arpl
jnp
mov
dec
fcompl
pop
or
pop
scas
pop
mov
pop
nop
aad
push
push
ret
jnp
jp
cmpsl
popf
mov
xchg
mov
mov
movsb
dec
xchg
and
test
add
bound
lahf
jnp
mov
or
dec
dec
push
dec
aas
popa
mov
sarb
cs
gs
int3
inc
pop
sbb
push
test
sub
aad
rol
es
mov
adc
xchg
inc
ret
push
es
mov
xchg
jmp
ds
lcall
lds
mov
call
scas
adc
cmp
xchg
sbb
mov
das
and
xor
cmp
inc
push
mov
pusha
sahf
cmp
mov
ret
insb
xor
mov
stc
push
mov
out
fstpt
sbb
inc
cmp
and
loop
das
and
out
fmul
sarl
cwtl
and
out
fwait
or
int
fcoms
pop
int3
pop
nop
sahf
and
pop
sbb
sub
mov
xor
neg
mov
add
xchg
xchg
decl
jae
and
popa
fsqrt
shrb
addr16
push
int
leave
fdivrl
xor
popf
fldl
hlt
push
xlat
insl
dec
loopne
dec
dec
and
push
aad
jo
call
fsubl
fucompp
stos
lods
out
orl
aam
nop
xor
les
cmc
xchg
or
aam
mov
xor
call
lret
in
dec
fsubr
push
cltd
mov
fnsave
jb
cltd
mov
lret
addr16
cmc
xcrypt-cbc
cmpsl
cmpsb
lock
int3
stos
sub
mov
xor
rcrb
stc
jle
and
mov
repz
xchg
out
sbb
or
push
ljmp
dec
inc
insb
hlt
and
and
call
xchg
cmp
dec
cltd
subb
jg
imul
sub
or
sub
lds
dec
xchg
jl
push
jmp
add
xchg
xchg
xor
or
and
scas
inc
mov
lahf
xlat
mov
pushf
lds
out
rol
testb
scas
mov
enter
mov
mov
mov
jmp
lods
icebp
dec
push
pusha
mov
push
mov
jne
cwtl
stos
mov
cmp
imul
jp
nop
jecxz
push
sbb
mov
adc
mov
lret
movsb
xor
imul
add
gs
push
out
xor
clc
xchg
push
movsl
jmp
mov
je
push
adc
xor
xchg
xor
mov
adc
in
cmp
into
loop
push
cmp
sbb
xor
pop
fisubrl
jnp
push
xchg
mov
dec
inc
dec
sub
aad
sub
sarl
cmp
fs
movsl
pusha
push
out
sbb
rcr
int
jmp
cs
pusha
push
aas
and
cmpb
frstor
sub
cmp
test
cmc
mov
and
rcrb
jae
sbb
inc
push
es
add
sti
push
pushf
inc
mov
fs
push
push
insl
xlat
lret
push
in
das
fadds
out
movsl
sbb
xor
lds
movsl
xor
inc
pop
mov
xor
mov
scas
cwtl
aam
enter
push
insb
bound
call
das
sub
insb
sub
xchg
popf
rcll
in
pushf
idivl
fcmovne
shll
and
imul
sub
aam
jo
cwtl
orb
and
fs
xchg
in
cmp
hlt
insb
flds
frstor
pop
stos
add
iret
cmp
cmpl
or
ret
inc
mov
pop
test
jecxz
xchg
mov
xchg
xchg
xor
mov
push
mov
loopne
fidivrs
inc
fisttpll
das
ja
mov
add
divb
repz
jo
pop
fwait
pop
mov
inc
xor
fstpl
add
mov
js
push
sub
rcrl
inc
mov
js
adc
mov
push
mov
rolb
inc
icebp
xchg
in
test
cmp
cs
in
adc
jge
inc
mov
pop
push
and
push
inc
mov
and
xchg
rorb
fs
mov
and
xor
mov
int3
cmp
imul
adc
push
sub
cmp
jp
fs
js
push
xor
repnz
shll
loope
test
pop
movsl
enter
ss
push
cmp
push
ds
sub
add
pop
xor
sub
jb
or
movsb
sub
ja
jo
test
outsb
pop
fadd
or
outsb
lret
scas
cmp
inc
sbb
leave
xchg
outsb
xchg
mov
out
xchg
xchg
daa
mulb
xor
imul
out
mov
cmpsl
mov
xor
add
sti
cltd
mov
cmp
inc
in
js
ss
add
xchg
jns
lock
iret
or
mov
lret
xchg
cmpsb
add
aad
data16
ret
or
push
adc
icebp
int3
repnz
jmp
iret
mov
iret
stc
sti
shrl
jbe
pop
xor
sbb
mov
xchg
daa
add
call
in
xchg
loope
stc
or
inc
mov
and
add
or
push
sti
fcoml
xlat
or
adc
jecxz
push
rorb
mov
aam
push
vpaddq
into
inc
in
cwtl
and
sbb
sbb
dec
pop
das
cmp
and
lcall
pop
xor
insb
popf
mov
mov
test
ljmp
lret
jge
mov
mov
xchg
movsl
int
add
cltd
cmpsl
jl
repnz
nop
sti
mov
cmp
int
sub
jl
repz
or
cmpsb
frstor
test
sub
gs
jge
xchg
sarl
cltd
lcall
int
test
adc
movsb
push
xchg
xlat
punpckhbw
icebp
cld
cmp
cmc
xlat
xchg
jg
sti
ja
fwait
popa
cltd
iret
sub
ds
incb
dec
sbb
cmpsb
test
or
in
mov
push
sbb
or
pushl
out
mov
adc
mov
cld
aas
mov
dec
loop
fisubs
adc
cld
pop
mov
decb
and
mov
gs
dec
fcomip
mov
sbb
dec
pop
cltd
out
int3
sbb
dec
int3
push
das
or
out
sahf
mov
sub
mov
mov
mov
adc
xchg
lret
fcomip
into
or
push
xor
int
push
pop
cmc
add
cmp
pop
push
or
fsin
push
sbb
xorb
add
shll
mov
xorl
adc
movl
arpl
jno
pop
enter
cli
push
cltd
sub
inc
jne
cmp
roll
fcomip
or
xor
pop
cmp
mov
jo
imul
sbb
push
sbb
pop
push
aas
sbbl
jle
jp
rorb
push
outsb
sarb
mov
mov
aas
cmpl
loop
or
and
fdivr
mov
fucomip
data16
aam
out
lahf
jmp
jecxz
out
mov
test
mov
mov
lods
jae
adc
mov
dec
mov
adc
in
in
mov
sub
or
pop
sub
cmp
and
shl
js
rcr
push
pop
or
mov
mov
jbe
pop
negl
mov
cmovge
out
testb
pop
add
mov
test
das
xor
dec
xchg
mov
clc
js
pop
push
adc
test
push
jo
jl
js
mov
xchg
inc
jne
xor
mov
sbb
fldenv
xchg
into
aaa
cmc
dec
lahf
arpl
adc
xchg
mov
push
bound
cmp
pop
loop
add
lds
scas
adc
pop
adc
jo
pop
push
push
fsubrl
add
push
stos
into
gs
xlat
lock
xor
adc
adc
aas
pop
mov
leave
add
sub
push
jle
sub
xchg
pop
inc
mov
mov
cli
pop
xor
cwtl
xchg
loopne
adc
fistpl
je
rcll
mov
jns
cltd
cmp
jg
add
stos
push
pushl
dec
cs
lock
fimull
add
adc
pop
movsl
stc
cltd
jne
pop
fnsave
jne
repz
popf
aam
into
mov
in
xchg
cmp
cmp
xchg
dec
icebp
jl
jb,pn
in
add
jns
leave
xlat
in
inc
cs
lcall
mov
jnp
jbe
push
xchg
xchg
mov
outsl
cmp
adc
mov
aas
fdivp
stc
stos
mov
cmpsl
pop
bound
push
insb
test
jno
jge
cmp
imul
or
xor
ds
in
cmpb
dec
les
fucomp
add
loope
mov
enter
mov
out
sti
ret
mov
xchg
jo
mov
jne
xchg
cmpsb
int
into
adc
into
add
pop
push
sbb
pushf
lods
test
xchg
insl
addb
sbb
lret
mov
repnz
jl
cs
ror
mov
out
das
xor
out
push
jnp
xlat
nop
mov
fs
mov
outsb
mov
cmp
push
test
fnsave
jae
cmp
and
lret
cmp
xor
lods
inc
ficoms
je
movsb
sbb
stc
push
addl
lcall
ja
into
loope
mov
push
push
pop
sub
or
lods
and
in
or
popf
push
test
pusha
leave
dec
iret
dec
jnp
aad
roll
sub
mov
pop
loopne
adc
inc
jne
xor
retw
mov
inc
cli
mov
lods
rcll
fs
jb
add
add
call
test
xchg
leave
dec
loope
mov
mov
cltd
outsl
jno
cs
inc
cmp
clc
cs
stc
bsf
xchg
insl
roll
mov
mov
mov
ret
add
mov
jmp
xlat
ja
pop
outsb
fimuls
push
pop
dec
add
out
push
dec
outsl
push
dec
mov
es
dec
mov
lods
imul
in
mov
xchg
frstor
pop
data16
outsl
sbb
adc
out
or
xchg
jo
stos
popa
call
negl
pop
and
push
cwtl
in
lcall
pop
fwait
nop
jmp
xchg
stos
mov
jg
inc
orl
xor
mov
in
rcll
stc
lods
xchg
push
scas
jp
in
leave
sbb
out
divb
mov
push
sbb
adc
stc
std
adc
inc
lret
xorb
adc
xor
inc
mov
popf
dec
inc
sub
movsl
cmpl
outsl
jnp
insb
je
or
mov
cmpsl
lea
out
stc
sbb
sub
loopne
fwait
andb
fwait
aad
cmp
or
mov
xchg
lahf
sbb
lea
jmp
or
pop
push
push
add
jp
mov
aas
mov
sbb
stos
adc
mov
pop
dec
cmp
jmp
aam
scas
hlt
push
sbb
in
clc
ja
test
and
cmpb
inc
jge
fwait
sar
shrb
ja
mov
repz
jbe
xchg
pop
movsb
loop
test
testl
aad
xor
mov
es
roll
bnd
pop
xchg
sub
xchg
add
xchg
sarl
div
xchg
pop
xor
cmp
pushf
hlt
in
in
fnstcw
sub
mov
and
pushf
mov
cmp
int
sbb
dec
aad
sub
gs
mov
ret
push
pop
sub
mov
cmp
sub
imul
xchg
push
push
push
lods
stos
jo
dec
sub
xor
shr
inc
cmp
dec
shlb
cmc
ss
inc
xchg
jns
mov
ja
add
pushf
jno
adc
je
xlat
lock
and
ja
stos
sbb
je
mov
loope
fidivl
sbb
push
out
inc
scas
lock
add
mov
out
pop
adc
je
sahf
fsubs
dec
mov
and
push
mov
stos
mov
notb
iret
pop
je
jle
mov
xor
mov
jbe
imul
loopne
rclb
dec
dec
cmpsl
mov
jg
inc
shl
xlat
in
adc
fdivrl
adc
sahf
nop
ja
fcoml
fstpl
cmp
xor
jmp
out
or
ss
lret
sbb
scas
cmc
pop
push
xchg
mov
inc
popa
mov
sbb
mov
mov
lret
lahf
out
stc
lods
mov
les
mov
push
dec
mov
std
pop
add
jecxz
cltd
adc
mov
rcl
test
sbb
mov
cmp
cwtl
mov
in
and
lds
sti
inc
mov
inc
cmpsb
pop
imull
imul
lcall
xchg
adc
push
pop
cltd
repz
sbb
mov
lcall
adc
out
scas
insb
dec
adc
jecxz
jno
jge
insl
lods
or
or
or
xchg
mov
xchg
nop
mov
inc
je
ficomps
xorl
inc
mov
out
ljmp
shlb
jmp
iret
test
leave
inc
push
aas
sti
aas
stos
scas
and
testb
ja
dec
pop
push
add
stc
insl
daa
movsl
faddl
jno
lods
lret
jp
ljmp
out
mov
dec
push
mov
xlat
inc
xchg
out
or
push
xchg
xchg
fwait
push
mov
xor
popf
xlat
pusha
sub
add
gs
sub
xchg
ret
gs
inc
in
pop
lret
push
es
xchg
jge
lret
in
or
aam
sub
dec
xor
je
jecxz
jl
mov
daa
pushf
dec
xchg
jno
push
loope
adc
outsb
cmp
dec
dec
pop
outsl
xor
or
mov
add
and
fabs
fimuls
dec
shlb
sub
fs
xor
stc
jne,pt
sahf
push
push
or
mov
pop
fcmovne
sbb
jmp
jge
pushf
adc
cmp
pusha
mov
sub
jle
out
xor
cmpsb
xorb
lret
sbb
notl
ds
adc
repnz
sub
dec
dec
jmp
in
fistps
div
push
push
xchg
mov
cltd
add
inc
xchg
lcall
push
or
fdivl
sub
or
xor
xchg
xor
movl
mov
sub
push
mov
ret
loopne
sti
cmp
dec
or
dec
xor
aaa
mov
lret
fwait
inc
dec
das
inc
adc
out
out
lea
jb
pop
or
push
pop
ds
fdivl
xchg
xor
shl
pusha
mov
sub
frstor
push
add
shrb
jg
movsl
test
insl
fsubr
or
fisubrl
mov
mov
clc
sbb
add
jae
cmp
mull
movsl
inc
ds
mov
and
subl
test
imul
jmp
jbe
xor
ret
pop
cmpsl
mov
mov
and
or
pop
pop
mov
ja
aas
sti
stos
and
into
xchg
inc
cmp
xor
fs
jne
lahf
jne
adc
mov
sbb
sbb
push
jnp
mov
push
pop
mov
xor
lcall
inc
xchg
enter
push
loopew
xchg
add
lahf
pop
fldcw
inc
lahf
dec
cmpsl
mov
push
clc
adc
cmp
and
movb
sub
cmpsb
mov
inc
cmp
xchg
and
movsl
pushf
jmp
js
dec
cmp
mov
lret
rcrb
pop
sbb
out
sbb
sbb
push
jl
push
dec
fdivrs
aam
mov
es
push
xor
sbb
or
imul
ret
les
leave
ljmp
add
repz
fisubrs
mov
mov
mov
jne
das
jb
call
insl
bound
pop
cmp
xor
or
iret
fisubrl
sub
sub
mov
es
in
pop
lcall
xor
inc
out
jns
or
inc
mov
shlb
and
nop
adc
mov
inc
mov
fiaddl
in
lret
cmp
mov
cmc
mov
push
xor
adc
inc
pop
in
pop
cmp
insl
lods
js
loopew
loope
lods
sarl
push
push
pop
mov
jg
test
js
xchg
leave
testl
jnp
inc
xchg
adc
iret
stc
fwait
stos
jmp
mov
sbb
aad
sbb
jl
shll
sub
lock
pop
lcall
dec
addl
outsb
into
test
add
fs
shll
push
dec
push
sub
xor
jge
sbb
dec
ja
hlt
inc
cmpsb
push
stos
push
pushf
loop
inc
jns
fstl
imul
pop
jle
xchg
icebp
jb
adc
cmp
cs
adc
cmpsl
inc
pop
insb
add
in
xchg
sbb
mov
adc
fs
push
jae
mov
aas
pop
fdiv
mov
arpl
and
push
das
and
pop
mov
fstpl
inc
pop
inc
movsb
movsl
jo
push
xchg
test
std
movsb
push
or
jb
inc
or
out
jns
xrelease
inc
ja
out
push
and
jl
pop
ljmp
xor
jae
sbb
push
fcomi
xlat
mov
cmp
lret
lcall
arpl
sub
lgs
and
dec
call
shrl
loope
pop
push
mov
aas
imul
inc
imull
xor
test
fstpt
es
aam
sbb
cmc
cmp
xchg
nop
jne
pop
pop
iret
inc
mov
mov
add
mov
sti
gs
in
aad
mov
orb
pop
outsb
cmp
repz
in
aad
lahf
addl
and
adc
sub
stos
sti
dec
jns
ficomps
test
mov
jne
popf
push
inc
jo
ljmp
jg
adc
xchg
lods
sti
push
dec
test
or
inc
inc
rclb
test
push
pop
adc
enter
cmp
cmc
inc
stos
or
push
mov
out
enter
mov
mov
push
xor
rclb
repz
mov
rclb
push
push
xchg
inc
inc
leave
test
jnp
stos
mov
xorl
daa
cmpsl
mov
sub
mov
das
rorl
dec
and
xchg
adcl
bound
popa
loop
popf
dec
scas
je
mov
mov
and
scas
or
scas
mov
dec
push
fucomip
xor
ret
sbb
lcall
enter
mov
mov
fadd
mov
push
in
pop
aad
mov
xor
aas
testb
xor
in
xor
fldenv
aam
ja
add
movq
dec
divl
pop
push
pusha
insb
mov
and
inc
nop
mulb
std
sub
mov
test
push
add
aaa
imul
jmp
mov
cmp
flds
jmp
or
mov
cmp
pop
push
testl
jae
push
popa
jmp
orl
jle
push
xlat
adc
test
into
jne
xchg
cmp
sub
sbb
lret
dec
jp
add
pop
ret
or
jle
ret
adc
xor
ficoms
pop
movsb
push
cmp
movsb
sti
or
fwait
lods
gs
pop
das
push
lods
loopne
push
push
pop
xchg
inc
jb
adc
dec
std
stc
mov
xchg
pop
popf
lret
xchg
mov
jnp
add
mov
push
lret
arpl
add
cmp
sub
loop
fiaddl
rcrl
dec
ja
repnz
sub
sbb
mov
lods
sbb
les
xchg
enter
mov
je
xchg
int3
mov
xor
push
testl
es
xchg
nop
mov
and
mov
inc
xchg
xor
mov
mov
test
inc
jmp
insb
jge
and
shll
lcall
cmp
jo
fbld
sub
adc
jge
out
inc
xchg
pop
lods
test
dec
mov
cmp
vcmpsd
dec
and
jne
aaa
jae
cmpb
mov
mov
lods
add
inc
ss
loop
mov
cmp
rol
cmp
cmpsl
sbb
add
add
mov
int
mov
mov
dec
pop
push
jecxz
lock
dec
rcrl
movl
mov
mov
mov
fwait
pop
mov
js
inc
adcb
test
mov
rcll
rolb
sbb
xor
sub
lcall
or
jo
pop
or
bound
icebp
push
cmpsb
movsl
fcomp
add
push
xor
inc
push
rcrl
mov
std
leave
or
mov
rolb
mov
test
pop
lods
pop
push
xchg
pop
fisubl
pop
push
out
jge
adc
lea
popf
outsb
sbb
incl
adc
jns
jbe
jbe
repnz
add
push
loop
sub
icebp
cli
add
push
xchg
push
repz
les
pop
mov
pop
adc
pop
add
scas
loope
outsl
or
int3
dec
arpl
jle
fsubrl
stc
jmp
jne
dec
add
enter
inc
scas
pop
add
xchg
lods
dec
add
ja
arpl
movsl
aaa
in
ret
stos
mov
sbb
ja
pop
xchg
mov
inc
xchg
movsb
gs
ffree
cmp
sub
loope
jge
pushf
mov
test
inc
aaa
imul
dec
dec
scas
popa
cmc
adc
daa
cwtl
mov
cmp
pop
loopne
data16
dec
pop
shll
xchg
cld
in
jns
jo
fcompl
outsl
jbe
clc
sbb
push
mov
hlt
jbe
mov
push
jnp
dec
aam
xchg
or
fimuls
xor
movsb
mov
cmp
insl
pop
jbe
movsl
lods
and
dec
inc
push
or
push
out
mov
popa
mov
sarl
inc
lret
mov
sbb
enter
outsb
gs
test
add
or
jns
jae
arpl
pop
mov
cs
rolb
lods
mov
ja
add
push
and
xor
subb
imul
mov
movsb
mov
js
jae
inc
push
push
xchg
subb
scas
movsb
shlb
fistpl
adc
mov
xchg
sub
fnstcw
inc
pextrw
mov
mov
mov
xlat
into
mov
inc
cmpsb
nop
mov
pop
mov
test
insb
lret
ret
mov
pusha
mov
xchg
cmp
mov
cld
cmpsb
fildl
xchg
adc
push
adc
xor
jnp
push
mov
sub
sub
sbb
or
pop
xchg
xchg
imul
ja
mov
xlat
push
sti
ds
mov
inc
sbb
iret
cmp
cmp
sarb
adc
sub
or
idivl
inc
outsl
jb
pop
idivl
and
sub
jnp
rcrl
outsb
aad
or
loop
sbb
aam
pop
movsl
aad
ss
mov
xor
mov
xchg
je
fildl
sub
mov
gs
mov
push
cmp
data16
cmp
add
add
mov
movsl
call
pop
add
mov
xlat
and
ret
or
xor
sub
shll
push
pop
aaa
clc
lret
sbb
xor
push
shl
aas
mov
mov
jmp
mov
add
xchg
data16
daa
add
push
movsb
sub
xchg
into
or
jle
bound
adc
outsb
into
mov
and
hlt
sbb
add
roll
mov
mov
rol
xor
fs
lods
pop
jne
rorb
fyl2x
cld
enter
xor
pop
ds
ret
or
jne
fwait
mov
mov
jne
gs
or
mov
xchg
adc
jno
add
push
test
clc
and
jb
sub
cmp
sub
push
push
hlt
das
push
pusha
dec
mov
xchg
out
mov
cmpsl
or
cmp
inc
pop
add
inc
adc
dec
insb
add
mov
jno
or
clc
mov
jl
xchg
insl
and
or
jg
daa
pop
adc
jnp
xchg
icebp
rorb
xchg
std
ss
ljmp
mov
push
push
addr16
adc
pop
and
daa
add
xor
and
xor
fs
xor
add
jecxz
adcb
sub
adc
ret
fisttps
push
testb
mov
sub
xor
jmp
push
dec
jge
out
mov
sbb
movsl
mov
push
loope
test
push
xchg
xchg
scas
fsubl
xchg
popf
push
fists
sbb
push
xacquire
xchg
sub
sbb
int3
dec
push
leave
sbb
push
out
loope
or
jae
das
rcl
mov
push
mov
jp
xchg
test
adc
stc
sub
in
or
jns
je
test
enter
addr16
pop
inc
call
and
pop
das
in
xor
jmp
mov
mov
fs
lahf
sub
or
insb
out
gs
push
dec
inc
stc
aam
addr16
push
or
mov
shrb
adc
out
divl
es
in
imul
lret
out
push
add
inc
out
xor
jmp
xor
imul
sub
fcmovbe
pop
xchg
push
ja
add
or
push
xchg
xor
cli
fildl
dec
outsb
scas
push
out
cwtl
mov
test
pusha
push
xchg
fidivrs
cmpsl
mov
jbe
ljmp
pop
out
pop
sub
jae
test
push
add
lods
cmp
mov
les
dec
push
xor
scas
ret
xor
lahf
xchg
xor
repz
mov
and
inc
adc
lret
sbb
test
mov
ret
je
sbb
cmp
ret
adc
adc
pop
xor
test
or
es
pushf
jmp
repz
push
cmpsb
jp
ret
fs
mov
xor
cli
adc
cmp
rorb
or
push
out
fsubl
negl
jle
das
js
sub
inc
mov
xorl
xchg
or
cwtl
leave
mov
xor
pop
push
out
lds
sti
aad
pop
cwtl
jle
and
les
xchg
dec
cmpsl
std
sbb
jo
int
hlt
imul
rcll
frstor
mov
jo
out
fistps
xor
int
jg
mov
addr16
sbb
ja
in
push
sti
movsl
jns
cmp
or
inc
xor
sub
in
je
nop
sub
loope
fmull
in
dec
cltd
and
out
mov
inc
jb
add
cs
lea
xchg
idivl
lret
dec
dec
jp
mov
xchg
out
jecxz
xlat
std
xor
mov
mov
dec
mov
cmpsl
sahf
stos
and
xchg
jnp
loope
push
inc
mov
lock
imul
lahf
je
loope
add
pop
cmpsl
mov
mov
xor
out
ret
lret
xlat
sbb
lret
dec
jae
aad
mov
and
sub
aaa
pop
cs
adc
out
ret
pop
test
cmp
lgdtl
imul
sbb
stc
popa
fcoml
push
dec
rcr
dec
aad
mov
adcl
mov
ret
cmp
negl
lret
inc
pop
dec
cmp
mov
dec
mov
fdivl
xor
pop
or
loope
test
cli
imul
inc
ja
jne
xor
pop
cmc
jno
iret
rcr
gs
push
ret
fldl
call
lock
decl
push
xchg
insl
dec
fcmovu
lods
mov
dec
xor
jl
mov
or
or
push
ja
pop
adc
jo
and
xor
mov
pop
sub
mov
push
arpl
cmpsb
sar
xchg
icebp
jl
add
test
inc
aaa
cmp
adc
test
mov
adc
lahf
stos
add
mov
in
fistpl
xchg
leave
push
lods
mov
jbe
je
push
xchg
fdivrl
adc
and
pop
mov
adc
mov
mov
jb
test
jae
stos
aas
negl
out
imul
lea
mov
inc
subb
ret
pop
sbb
test
push
pusha
xor
test
xor
inc
out
sbb
imul
add
sbb
cmp
adc
fmull
and
push
movsl
les
inc
pop
aad
adc
pop
inc
or
xchg
push
and
nop
mov
test
xchg
mov
xor
pushf
cmp
int
add
cs
sbb
out
xor
mov
or
loope
cli
cmpsl
or
rorb
icebp
cld
notl
bound
or
test
pop
sahf
mov
sti
mov
xor
inc
mov
mov
push
je
int3
add
and
clc
pop
and
int3
cmp
bound
xor
sahf
das
outsb
fsubr
nop
mov
add
movb
cmp
pop
mov
inc
or
xchg
push
adc
js
stos
fisttpl
loopne
sbb
mov
pop
adc
test
push
inc
scas
popf
sbb
loopne
imul
ret
aad
push
pushf
xchg
jbe
movsl
dec
ficoml
pop
stc
jae
or
add
in
sbb
mov
jo
cmp
sub
stc
int
jmp
xchg
cmp
test
pop
hlt
ss
add
pushf
arpl
and
pop
jno
movsb
and
ss
jns
adc
loope
inc
adc
int
aam
add
adc
or
into
idiv
add
scas
fadds
imul
and
insl
xchg
xchg
adc
ds
enter
out
pop
das
sbb
dec
xlat
mov
fs
ds
dec
pop
mov
call
outsl
mov
xchg
lods
fldcw
mov
pushf
subl
xorb
mov
divb
out
jmp
call
cmp
popa
pop
popf
or
nop
scas
xchg
pop
scas
aam
ret
out
xor
mov
filds
cmp
pop
lret
fcompl
xchg
movsb
enter
cld
mov
sbb
pop
lcall
sub
mov
lock
jns
adc
add
scas
sbb
inc
mov
inc
repz
push
mov
jbe
jmp
mov
jl
xchg
test
into
pop
and
push
filds
mov
in
jno
xor
jne
sub
clc
pop
leave
mov
push
jb
mov
cltd
dec
sbb
mov
rorl
iret
xchg
inc
sti
or
jmp
mov
xchg
xor
dec
jmp
insl
dec
cltd
fdivrl
dec
and
push
jmp
inc
inc
inc
movsl
push
or
cmc
sbb
sbb
loopne
xor
push
repz
int3
and
cwtl
xchg
fdivl
leave
roll
aad
push
sti
rcrl
add
mov
stos
push
jo
mov
fwait
add
ljmp
mov
mov
shr
and
dec
inc
pop
cmp
xor
fstps
push
cli
jne
sahf
mov
loope
adc
xor
xor
es
loope
test
lcall
add
aad
fstpl
icebp
lret
mov
fisubrl
mov
into
mov
in
ja
xchg
pop
add
shrl
fsubrs
rcrb
inc
cmpb
xchg
sub
dec
adc
shlb
jecxz
mov
adc
mov
dec
and
lret
cmp
add
ficomps
xchg
rcl
mov
mov
dec
jge
cmp
sbb
lret
stos
std
lods
sbb
cltd
mov
daa
sub
stos
imul
notb
jg
popf
sub
dec
xor
movsb
shll
mov
stos
dec
in
xor
dec
test
repz
inc
add
bound
sub
pushf
sub
add
mov
cs
mov
les
aaa
stos
fsubrl
inc
cli
fs
roll
rcrl
sarb
fs
dec
xor
cmp
and
flds
loope
mov
cmc
mov
jg
data16
pop
dec
adc
mov
lret
stos
jmp
scas
lods
loope
sbb
stos
daa
lds
lods
popa
pop
dec
jb
jmp
ficomps
cmp
xchg
cs
mov
in
sub
in
out
or
inc
and
movsl
inc
incl
in
iret
ud0
push
popf
jle
cmp
ret
dec
call
jns
or
push
or
inc
test
sbb
mov
pop
out
cli
adcl
sbb
ljmp
outsb
sub
jp
stos
es
mov
inc
movsl
cmp
fcomps
xchg
call
repnz
push
push
pop
dec
mov
faddp
stos
loop
mov
enter
sahf
push
in
add
pop
inc
jo
fldcw
inc
int3
outsl
fbstp
mov
xorb
jmp
es
outsl
movl
sub
mov
loop
sbb
aam
mov
lods
in
and
ljmp
div
call
pop
sbb
inc
xchg
lea
lret
out
std
pop
or
sti
fwait
repnz
xchg
das
push
adc
inc
mov
shr
xchg
lock
loop
sub
les
fistpll
aas
sbb
mov
loopne
mov
mov
leave
lcall
sub
sub
mov
in
rcr
mov
ds
cwtl
pushf
mov
insl
jne
outsl
or
fs
jl
je
push
and
and
jecxz
mov
ret
out
nop
pop
std
mov
lcall
pop
mov
lcall
test
aaa
int
les
outsb
outsb
push
xor
sbb
jnp
mov
nop
cmp
or
arpl
add
pop
mov
mov
cmp
test
mov
xchg
scas
scas
arpl
xor
jns
add
add
imul
xor
inc
int3
cltd
mov
mov
xor
rcrb
add
arpl
sbb
inc
jmp
movsl
lds
leave
xchg
xchg
xchg
pop
loop
jle
xor
cmpl
cmp
ficompl
out
push
icebp
sahf
sbb
or
jge
xor
in
mov
mov
test
adc
sbb
push
sbb
push
enter
out
movsl
mov
sub
dec
jge
dec
lods
dec
pop
ja
cmp
jmp
xchg
daa
xchg
mov
pusha
cwtl
neg
loopne
or
sbb
adc
mov
data16
int3
lock
fnstenv
clc
xor
sub
mov
or
scas
push
push
xlat
fwait
push
lret
ja
jbe
lahf
aaa
jo
ljmp
xchg
pop
sbbb
in
inc
adc
rorb
and
lds
imul
das
mov
mov
imul
in
aad
frstor
fwait
xchg
lock
ret
cli
and
sbb
sbb
jecxz
jmp
push
jg
mov
mov
adcb
dec
push
mov
repnz
xchg
jmp
add
test
or
jbe
or
xchg
popa
or
cmp
lods
mov
clc
adc
mov
adc
adc
dec
fs
popa
pop
fcompl
imul
dec
push
cld
add
adc
outsb
pop
pop
in
push
aaa
ds
cmp
xor
fiadds
mov
scas
outsl
enter
sbb
jns
loop
sub
mov
xor
lret
enter
into
add
and
sti
fbld
dec
ja
das
sub
call
notb
dec
cmpsl
add
leave
sbb
sub
lods
adc
adc
fstps
nop
jl
adc
test
and
mov
vsqrtps
int3
or
jns
fists
mov
imul
std
sub
mov
cld
fldenv
or
aad
mov
lcall
and
lea
rcr
std
jmp
in
or
hlt
lock
mov
fcomi
stc
mov
inc
push
rorb
xlat
mov
adc
xlat
in
imul
fcomi
dec
sbb
inc
xchg
cltd
sub
xchg
movsl
cmp
popf
gs
sub
shlb
jl
or
and
push
and
dec
sahf
sub
pop
jbe
jp
sbb
xchg
fstpl
icebp
cmp
sahf
andl
adc
fisubl
and
imul
aad
xchg
xchg
push
movsl
aam
push
pop
fidivrs
js
jmp
xchg
ds
inc
add
add
xor
rorb
mov
dec
outsl
push
xor
cwtl
push
mov
dec
push
sub
push
int
mov
je
xor
outsl
into
pop
dec
or
in
push
xchg
or
mov
mov
stos
mov
lret
pop
jno
imul
rdmsr
sbb
nop
scas
adc
jnp
enter
cli
dec
or
repz
scas
addb
mov
lret
add
shr
pushf
scas
dec
sbb
cmpsb
push
push
ljmp
sbb
dec
loopne
push
fcomps
inc
lea
hlt
mov
in
mov
xor
in
xorl
xchg
sub
lods
leave
mov
lcall
insb
rolb
and
jl
push
int
scas
xchg
lea
xor
aaa
notl
jno
mov
cmp
adc
sub
push
movsb
lret
mov
push
repz
fimuls
sbb
sub
stos
insb
mov
shll
iret
imul
lods
aas
mov
pop
test
pop
jns
xchg
hlt
mov
jmp
in
pop
das
shl
mov
inc
lods
inc
ds
js
insb
and
cmpsl
ret
mov
stc
lret
fcoml
xchg
sbb
jg
mov
cltd
jmp
cwtl
adc
mov
fsts
fdivrs
push
inc
mov
pop
into
mov
jmp
xor
fwait
adc
dec
xchg
sbb
outsb
xchg
movsl
sub
mov
cmp
hlt
mov
xor
into
int
mov
loop
sbb
std
pusha
mov
clc
fistl
out
in
pusha
les
sbb
loopne
mov
fs
lret
out
inc
sub
setb
jmp
pop
xchg
cld
repz
add
xor
outsb
inc
mov
mov
or
into
lret
jecxz
or
into
inc
and
pop
popf
dec
insb
sbb
lahf
push
jl
xor
lret
push
in
mov
mov
xchg
lods
aam
ljmp
inc
scas
ds
loope
push
in
and
out
mov
shlb
les
dec
fnstcw
mov
in
or
push
out
lea
mov
addl
pusha
pushf
jno
adc
mov
gs
std
add
add
rcl
cs
std
jecxz
int3
add
jg
pop
push
jmp
pop
pushf
inc
mov
or
mov
iret
in
xchg
and
cmpsl
add
imul
jbe
bound
dec
pop
inc
shrb
cmp
imul
push
lock
pop
popa
les
scas
iret
in
loope
push
std
cmc
or
and
or
stos
cmp
divb
ret
cmpb
icebp
sbb
pop
cmp
scas
push
mov
jle
sahf
jb
popf
sbb
xorl
push
lods
cmpb
cltd
callw
mov
jp
out
pop
movsl
mov
mov
adc
lea
in
les
and
xor
xor
xchg
test
inc
sbb
mov
add
inc
push
mov
shrb
lea
sub
in
xor
nop
push
bound
cmc
xor
daa
adc
mov
push
stos
inc
xchg
jmp
lret
lea
out
ljmp
dec
fadds
fmull
das
or
popf
jp
sbb
xchg
or
mov
cmpsl
out
xchg
sub
fwait
mov
std
add
push
push
icebp
aaa
mov
jge
je
pop
rcll
xor
or
dec
addr16
mov
or
xor
lret
mov
jl
aad
push
out
mov
adc
pop
push
or
fbld
add
jnp
es
lcall
jae
jl
shlb
mov
mov
xchg
hlt
ficoms
sbb
lods
movsl
jnp
adc
mov
lods
lea
rcrl
dec
inc
int3
jns
decl
sub
mov
pop
shl
xchg
or
cmp
inc
out
pop
das
mov
aaa
int
imul
out
stos
mov
push
mov
movsb
loop
add
jmp
rol
in
mov
jmp
lods
pop
add
mov
or
inc
out
mov
jmp
cs
push
test
xor
inc
push
imul
pop
cld
aam
cs
add
sub
xchg
insl
jne
lcall
testl
add
fcmovu
cmp
jecxz
popa
mov
loope
in
mov
stos
push
pop
inc
fs
repnz
cs
xchg
scas
mov
xchg
lods
sbb
stos
xor
dec
jp
inc
movsl
outsl
mov
in
xchg
dec
mov
nop
dec
adc
cmp
sbb
stos
cmpsl
insb
notl
mov
ffreep
cmc
mov
rsm
loope
push
mov
cmpsb
jle
rclb
pop
mov
lock
push
lea
jno
pop
stos
les
ror
loope
sbb
cltd
addb
iret
push
mov
adc
jb
das
inc
fdivl
xchg
xor
pop
push
scas
test
push
stc
pop
jb
pop
je
push
lcall
nop
or
mov
adc
std
dec
subl
hlt
cmp
iret
cmp
push
lods
leave
or
std
adc
adc
mov
cmp
fmuls
dec
hlt
or
clc
int
dec
sahf
out
xchg
add
inc
pop
sub
xchg
call
adc
insb
subb
test
sbb
mov
inc
into
xchg
xor
fmul
movsb
xchg
add
cmc
jecxz
jecxz
fwait
jbe
aam
js
jmp
pop
mul
imul
pop
adc
pop
out
xchg
add
jl
outsl
inc
aam
inc
inc
test
fiadds
aad
cmovno
adc
loope
imul
add
cld
xchg
mov
rolb
pop
lret
test
or
lea
and
sbb
jle
sub
jae
xor
cmp
js
imul
or
mov
inc
fsubrs
jg
popf
push
shrl
and
iret
or
sar
cld
stc
imul
push
or
pop
or
test
lret
out
push
into
addb
fmuls
dec
pushf
mov
ss
mov
or
pop
out
jb
xchg
mov
mov
add
mov
or
loope
ret
stos
push
movsl
jg
out
mov
jbe
daa
arpl
add
fmul
xchg
ret
int3
add
jne
mov
ja
loopne
loopne
mov
jl
insb
lcall
call
mov
inc
and
lret
add
sahf
daa
fdivl
cmpb
xchg
mov
sub
loope
pop
inc
jle
mov
jb
hlt
inc
sbb
xor
mov
addr16
hlt
fisttpll
xor
sbb
out
xor
mov
popf
cli
push
jo
ja
inc
pop
ljmp
je
jae
add
test
mov
inc
push
fildll
or
inc
jae
mov
int
lret
cvttps2pi
inc
aaa
fildll
out
inc
inc
add
mov
pop
outsl
je
dec
into
scas
cmp
mov
repnz
cmp
into
xchg
xor
inc
mov
repnz
das
add
push
xor
xor
xchg
push
fisttpll
shll
push
pushl
pop
daa
pop
arpl
daa
mov
clc
popf
and
add
mov
or
enter
inc
dec
mov
call
and
mov
add
mulb
repz
mov
sub
pop
test
sbb
shll
jne
push
adc
push
xor
xchg
test
shr
xor
push
ja
lcall
pop
sub
loope
sahf
cmpsb
xchg
sbb
aad
adc
sub
nop
popa
rcrl
daa
fistpl
xor
mov
mov
mov
xor
dec
out
push
adc
stc
addr16
dec
mov
fcomps
in
pop
and
jmp
adc
xchg
mov
cltd
popf
pop
xor
mov
add
add
dec
lret
or
out
xchg
jb
dec
mov
rolb
int3
or
fdivrl
push
stc
inc
jne
lret
jge
pop
lret
push
rorl
cld
test
std
add
in
jle
add
lods
fwait
sbb
sbb
rcrb
fcoml
inc
loop
lds
push
lret
sbb
or
test
int3
cwtl
sub
out
pop
popa
gs
ljmp
dec
pop
adc
push
hlt
fsts
out
dec
in
cmp
jo
sbb
jp
jnp
pop
pushf
bound
ret
or
je
ret
mov
ret
xchg
mov
fisubs
push
dec
or
sub
sub
sub
lods
cmp
es
imulb
mov
mov
rol
mov
adc
shl
scas
pushw
adc
repnz
push
xchg
adc
aam
pop
add
mov
lods
mov
orl
insb
cvtpi2ps
les
and
xchg
adcl
push
and
mov
loop
iret
ror
out
or
adc
out
or
cmp
mov
push
mov
adc
repnz
ss
repnz
cmp
push
pushf
jl
loopne
daa
cmp
fisubl
cmc
or
sahf
dec
or
pop
out
xor
xor
sub
cmp
lds
rorl
mov
shll
mov
pop
out
sbb
dec
outsb
dec
adc
push
add
mov
cmpsl
int
jb
pop
jb
jns
xlat
movsb
push
push
mov
cltd
lea
mov
dec
push
cmp
dec
clc
pushw
push
enter
fistpll
mov
push
push
xchg
mov
inc
arpl
ja
mov
std
xchg
into
and
lret
ss
cmp
mov
xchg
inc
or
mul
pop
or
or
push
decl
movsl
jo
sbb
es
and
out
lret
cmpsl
stos
inc
mov
xor
jge
sahf
inc
fldenv
out
pop
aad
add
cmc
ja
and
mov
test
pop
mov
je
cmp
aad
mov
mov
out
cwtl
push
and
imul
out
add
push
cmpsb
sti
pop
stos
dec
pop
test
cmpsl
jno
sti
push
mov
push
add
aam
inc
dec
mov
sbb
cmp
bound
daa
pmaxub
jmp
add
cmp
cmp
std
mov
popf
jp
mov
je
dec
insb
push
mov
xchg
and
jecxz
adc
fdiv
lahf
sbb
test
add
fbstp
out
xor
mov
push
das
aam
cmp
daa
inc
and
outsl
sbb
xor
jp
push
jp
clc
dec
enter
lds
pop
xchg
jo
cwtl
adc
xor
cmp
scas
int3
repz
addl
or
in
into
into
mov
popf
and
jnp
pop
popa
lret
cli
mov
das
out
mov
lea
ficomps
inc
push
add
push
xor
jb
into
outsb
clc
std
add
rcrb
cmp
repnz
ficoml
subb
xchg
sbb
xchg
shrb
in
add
jmp
cmpsl
mov
dec
and
imul
add
ret
adc
push
mov
pushf
mov
addr16
inc
test
std
push
adc
inc
inc
pop
push
rorl
jecxz
fs
lods
jmp
in
pop
mov
jbe
aad
mov
jo
xor
sahf
inc
repnz
repnz
add
xchg
in
xchg
scas
aad
sub
inc
adc
or
cli
mov
pop
in
push
int3
sbbb
cmp
out
push
inc
mov
adc
imul
shlb
mov
mov
sarb
jae
ds
scas
or
in
mov
mov
pop
je
mov
mov
xor
sub
pop
ret
out
xchg
dec
or
xchg
das
or
cmp
adc
push
in
sbb
add
in
ret
cmpsb
xchg
mov
test
pop
and
and
adc
shll
dec
sbb
in
sub
or
fbld
mov
scas
adc
add
jecxz
fstpl
push
lcall
je
clc
dec
adc
dec
or
movsb
jmp
lcall
push
das
push
cltd
test
push
lds
jecxz
pop
lds
or
arpl
mov
enter
push
jge
rorl
adc
pop
xchg
pop
and
cltd
xor
mov
jb
xor
icebp
sub
call
ljmp
mov
in
xchg
ljmp
scas
xchg
div
xchg
mov
or
mov
imul
jae
pop
push
adc
pop
cs
xchg
out
out
dec
out
jbe
jecxz
data16
shl
jno
addl
std
cmp
shrb
mov
push
mov
jmp
call
mov
sti
pusha
into
adc
inc
or
js
push
push
dec
mov
mov
loope
jo
pop
mov
inc
jecxz
pop
fidivs
test
pusha
cmp
enter
mov
adc
jmp
jl
daa
jp,pn
and
inc
add
js
jnp
mov
dec
xchg
pushf
sbb
int
adc
mul
push
arpl
fisubrs
gs
jp
sbb
xor
fcmovb
add
xchg
jns
clc
mov
or
incb
popf
or
xor
aam
cmp
lea
subl
outsb
ret
scas
mov
into
add
dec
xchg
lods
cmp
mov
scas
push
push
sarb
or
mov
add
mov
cmpsb
rclw
aam
pop
mov
scas
fdivrl
push
arpl
mov
inc
jnp
push
add
mov
cli
xchg
jecxz
push
outsb
cmp
rcll
and
lds
mov
lods
inc
adc
mov
int3
mov
in
cld
mov
leave
or
cmpsb
out
lock
addl
jge
adc
cmpsb
inc
enter
es
cmc
repz
test
negb
lods
mov
rcr
sub
loope
pop
fcoms
clc
jne
sbb
cmp
data16
cmp
insb
popf
mov
test
scas
add
rcrb
enter
mov
and
enter
icebp
cli
std
push
ja
dec
cmp
mov
push
lods
daa
call
out
cmp
jl
sbb
test
mov
data16
fsubr
xor
jo
jns
lods
xchg
js
mov
shl
test
add
jl
out
pop
pushf
shlb
out
adc
jmp
ret
xor
loopne
push
loope
imul
ret
movsb
jg
xor
add
lea
sub
pusha
cmp
mov
aam
ficompl
pushf
leave
inc
test
mov
mov
inc
repz
imul
and
jnp
popa
inc
test
test
or
dec
cltd
push
mov
mov
cmp
add
aad
cld
push
sub
ret
paddq
cmp
jge
scas
jo
mov
popa
into
pop
or
je
in
addr16
movsl
mov
pop
push
cmpsb
in
imul
sub
sub
pop
pop
adc
fs
lods
xchg
mulb
cmp
add
and
mov
push
cmp
out
fmull
xchg
mov
and
lahf
scas
and
fwait
jl
repnz
inc
mov
out
shl
mov
xor
popa
insl
out
mov
jo
or
add
inc
mov
jmp
mov
sbb
mov
dec
cmp
repnz
movsl
push
popa
jbe,pt
push
xchg
inc
movsl
lahf
cmpsl
fcmove
stc
enter
mov
lret
lret
scas
add
bound
cmp
pop
push
push
addr16
mov
scas
jge
test
xchg
push
test
leave
jbe
into
pop
ja
xor
cmp
js
incl
adc
xchg
sbb
jecxz
inc
jp
mov
sbb
fwait
in
push
cwtl
jne
ljmp
pop
mov
daa
orl
xor
je
jno
xchg
ds
stc
cmp
dec
mov
jl
popa
jg
jl
in
movsl
jmp
jo
dec
sbb
loope
fucomp
test
rcl
pop
push
push
inc
xor
push
mov
std
pop
xor
sbb
mov
pop
repz
pop
movsb
push
mov
pop
orb
in
cmp
push
fcomps
ret
mov
dec
mov
jo
mov
sbb
add
outsl
pop
xor
lods
scas
and
sbb
or
jmp
dec
adc
pop
jg
push
adc
jmp
mov
add
insb
jle
call
xchg
mov
or
dec
jae
xor
xchg
fnstsw
mov
push
sub
les
xchg
sub
ja
xlat
loopne
push
sahf
sbb
and
mov
adc
xchg
pop
sub
stos
pop
cwtl
xchg
and
lds
lcall
and
pop
andb
jnp
je
push
jns
aas
xchg
xor
imul
in
mov
sar
pusha
out
inc
imul
add
pop
sub
lcall
mov
sub
and
xchg
out
or
add
xchg
inc
or
fimull
int
jg
shll
jmp
dec
scas
addr16
jb
sub
mov
xchg
jb
sbbb
mov
add
mov
mov
jg
icebp
lcall
pop
inc
jl
sbb
out
cwtl
out
add
dec
sbb
jle
out
dec
or
pop
je
xchg
nop
divb
xlat
movl
adc
cmp
inc
or
sbb
ljmp
imul
or
mov
lret
mov
sbb
incl
mov
movsb
xchg
out
cmp
mov
fsubr
js
pop
cltd
sbb
dec
mov
ljmp
and
add
or
popf
pop
xlat
std
popa
gs
mov
mov
dec
push
sub
ja
orb
clc
push
mov
mov
cmc
mov
int3
int
ds
jnp
int3
adc
sbb
cmp
jne
sbb
fidivs
add
dec
xor
int3
jo
pop
pop
cmp
jl
fsubrs
or
pop
imul
repz
decl
sbb
xchg
add
push
popf
aas
out
push
cmpsb
or
call
dec
adc
aaa
sub
adc
pop
push
mov
rcll
js
jo
repz
and
and
push
jne
mov
jp
pop
sub
mulb
test
push
pop
aam
call
jbe
dec
sub
ret
lods
xchg
pop
ret
pop
pop
xor
inc
icebp
mov
in
nop
and
shlb
sti
xor
rcr
jo
or
mov
call
pop
bound
adc
add
xchg
jmp
mov
daa
jne
outsb
cmp
arpl
lea
and
nopl
adc
jp
imul
test
xchg
out
mov
pusha
cmp
xchg
pop
int
push
pop
dec
dec
das
mov
push
into
hlt
imul
in
lcall
sbb
aaa
sub
add
pop
jg
in
pusha
cmp
gs
inc
push
dec
sub
fbld
jne
cmp
xor
inc
repz
mov
jnp
scas
arpl
fmuls
sti
or
cmp
mov
cmp
call
jmp
outsb
push
sub
mov
enter
xchg
mov
loopne
cmp
cmp
jg
shll
xchg
xor
lods
xchg
fldt
cmp
cltd
filds
sarb
xchg
scas
push
mov
sbb
mov
clc
les
sbb
cmp
lods
pop
in
std
js
cmpsb
ds
or
mov
push
int3
push
in
sar
adc
xchg
add
orl
pop
push
lods
adc
push
call
hlt
lret
mov
cmpsl
mov
insb
push
xor
mov
cmc
shlb
push
push
dec
pop
idivb
insl
sub
out
mov
test
repnz
or
int3
jle
adc
inc
xchg
fidivrl
in
and
dec
xor
push
or
mov
fsubrs
stc
jle
or
xchg
mov
inc
cmp
aas
arpl
fwait
test
sbb
incb
inc
stos
stos
xor
xchg
adc
decl
push
xchg
shlb
leave
xor
repnz
xor
lods
pop
mov
sbb
add
cld
or
ja
test
mov
mov
cmp
cld
leave
adc
mov
lret
fiaddl
enter
gs
and
bound
mov
ficoms
repz
sbb
popa
mov
jp
ja
pop
insb
mov
insl
and
xchg
push
fbld
loop
out
and
test
cmpsb
sub
icebp
in
xchg
mov
ja
xchg
mov
cmp
xchg
daa
dec
iret
sub
mov
sub
and
int
cmp
dec
mov
inc
mov
inc
pusha
in
jle
jecxz
ficoml
sub
jo
cmpxchg
out
dec
stos
int3
aas
sbb
fsubl
push
push
dec
imul
inc
lret
adc
insl
jo
cmp
inc
fcoml
mov
jle
mov
jmp
iret
add
movsl
add
jg
cmc
ror
scas
mov
les
or
add
fcoml
nop
jbe
insb
stos
nop
and
mov
arpl
xchg
sub
xor
das
mov
das
imul
test
adc
sub
mov
inc
jno
iret
or
lea
sbb
mov
cmpsl
adc
shrl
ja
xchg
in
xor
pop
repnz
sbb
lea
test
icebp
lods
mov
repnz
repz
cmp
add
push
test
lock
xchg
cmc
rcrb
dec
cld
mov
das
inc
xchg
mov
std
and
add
push
xchg
add
std
adc
adc
out
loopne
xchg
add
mov
sbb
xchg
push
jecxz
out
ja
add
lahf
xor
xchg
adc
inc
test
push
lahf
scas
sub
dec
and
inc
xchg
stos
mov
push
and
lods
jmp
cmp
in
jge
xor
xor
push
sbbb
aad
es
js
xchg
mov
popa
mov
push
fistpll
jae
orb
xor
mov
mov
jmp
or
test
je
xchg
sarb
mov
lds
ja
pop
out
push
sbb
rol
aam
test
cmpsb
lods
add
aam
adc
xchg
outsl
fimuls
or
aad
sbbb
test
xor
adc
xor
dec
lods
stos
sbb
adc
dec
bound
xor
sti
xor
mov
dec
fldt
push
adc
push
insl
inc
dec
dec
fildll
lahf
pushl
mov
outsl
jne
test
jg
mov
adc
jmp
fdiv
mov
sbb
mov
sub
sub
cmpsb
rolb
call
push
pop
xchg
xchg
aaa
jmp
incb
addl
test
xor
addl
push
mov
lock
rcll
or
ljmp
adc
fsubrl
movsl
cmp
adc
dec
sbb
daa
mov
pop
mov
jmp
sbb
outsl
add
mov
out
mov
icebp
addb
test
repz
sbb
lahf
mov
mov
mov
xor
and
and
push
movsl
fidivs
mul
out
stc
scas
mov
ss
mov
inc
fmull
nop
or
sbb
add
pop
loop
insb
movsl
pop
jmp
lahf
popf
sub
mov
mov
xor
fisubrs
pop
jecxz
push
mov
push
push
cld
jnp
cs
xchg
cmp
addr16
mov
and
mov
mov
popa
mov
push
nop
and
push
pop
fwait
inc
aaa
push
dec
shrb
sbbl
movsl
mov
mov
cmc
pushf
inc
push
and
inc
pop
testl
sbb
jnp
ljmp
and
xor
push
js
dec
out
sbb
jae
cld
fnstsw
cmp
mov
jp
inc
dec
shr
ja
inc
es
dec
ja
mov
or
cmp
rcrb
out
sub
jb
insl
mov
dec
push
cmc
inc
push
mov
xor
imul
fisubrl
xchg
repnz
cmp
ror
fdivl
or
hlt
sarl
gs
in
divb
int3
test
add
cld
enter
cld
dec
push
xlat
nop
jb
aam
sar
xchg
fxch
scas
jbe
repnz
ja
xchg
cs
lahf
xchg
and
sub
cmp
daa
ret
pushf
std
in
hlt
jae
and
fs
mov
lea
cmp
inc
or
jne
push
lock
test
jae
sahf
loopne
add
mov
cmp
cmpl
jmp
scas
mov
outsl
testl
sbb
jbe
fisubrl
and
fcompl
nop
loop
iret
enter
dec
sub
loopne
push
push
jnp
dec
movsb
or
aaa
lods
add
cs
mov
call
dec
jno
mov
testb
je
outsb
insb
mov
lret
insb
jecxz
imul
addb
into
lods
jg
insb
lret
shlb
into
jbe
in
mov
aas
push
push
lods
mov
xchg
inc
jo
or
and
cli
stos
xchg
je
lcall
int3
cmp
push
lds
push
fsubl
sub
and
xor
int3
cmp
xor
or
sub
xchg
icebp
sub
shlb
mov
cmp
aam
nop
jns
fnsave
subl
sub
add
mov
in
inc
std
sar
addl
shl
frstor
mov
sub
jmp
jmp
or
repnz
mov
negl
test
imul
add
adc
inc
scas
ss
rcll
jns
lea
mov
and
inc
sahf
xchg
bound
xchg
pusha
movsl
add
mov
adc
push
sub
cld
outsb
xchg
or
fwait
and
and
mov
sbb
cwtl
sbb
je
adc
popa
test
xchg
test
icebp
xchg
pop
jl
push
nop
outsl
test
cmc
std
repnz
je
loopne
xchg
jnp
xor
adc
scas
dec
rcrb
int3
mov
mov
inc
negl
push
cld
fmuls
jo
filds
outsl
jnp
imul
mov
sub
inc
mov
test
insb
in
mov
sbb
cmpsb
xlat
cwtl
mov
xchg
fwait
cltd
add
sub
movsb
lret
std
scas
or
adc
pop
inc
dec
push
cmp
xchg
jne
mov
std
sub
dec
sti
cmp
push
cmpsl
mov
mov
test
jns
inc
push
push
mov
dec
roll
push
arpl
adc
mov
push
dec
sub
jo
add
test
mov
leave
inc
sti
dec
movl
ja
mov
mov
loop
fs
sub
hlt
mov
cmpl
push
out
ja
sti
cmpl
sahf
sub
add
aaa
sub
sub
jge
mov
aam
xchg
lahf
imul
xchg
xor
adc
rclb
mov
xchg
es
pop
push
pop
stc
gs
orb
pushf
and
cmp
push
ret
cmp
test
push
ds
cmc
or
es
jnp
push
std
mov
and
fadd
inc
and
mov
dec
ljmp
inc
inc
adc
adc
sbb
push
fisubl
push
cmpsl
or
divl
mov
loope
cld
wbinvd
int3
loopne
rol
inc
jle
lahf
xlat
bswap
enter
push
inc
movsb
xor
xor
push
mov
or
pop
out
pop
cwtl
stos
scas
adc
loop
sbb
lahf
and
and
xor
xchg
lods
cmpb
xor
jns
push
pop
popf
jmp
fisttpl
and
sbb
call
js
pop
mov
addr16
xchg
jo
lds
or
inc
cmpsb
sub
cmp
icebp
iret
dec
scas
and
sub
std
inc
pop
xor
jge
mov
xor
lock
out
xacquire
jl
cmpsl
xchg
insb
lds
loope
cmp
sub
cmp
xor
or
arpl
push
repz
sub
sti
mov
push
jns
subb
pop
lods
std
cmpb
inc
data16
loope
sub
cltd
mov
out
lock
mov
sysret
fsubrp
mov
fisttpl
sub
mov
fmulp
dec
adc
push
es
mov
adcl
pop
cmc
cmp
int3
pusha
adc
pop
push
fisttpl
push
push
sub
ja
mov
inc
hlt
mov
ret
stos
dec
mov
jno
adc
inc
movsb
iret
cli
jle
lret
pop
fs
xor
push
cmc
mov
mov
or
cmpsl
addr16
pushf
add
dec
sbb
dec
sbb
jle
scas
imul
shl
mov
adc
cmp
add
arpl
iret
out
pop
pop
push
pop
arpl
rclb
inc
pop
lahf
mov
daa
mov
iret
cltd
cwtl
dec
cmp
lock
or
pop
movsb
popa
mov
mov
add
mov
pop
loope
sarb
pop
adcl
xor
imul
outsl
stos
stc
xchg
mov
lods
adc
mov
xor
shlb
idivl
sub
and
inc
jo
out
add
pop
sub
jbe
mov
and
dec
test
sub
imul
dec
addr16
cltd
lret
and
out
xor
or
arpl
pusha
jle
test
pop
pop
ja
movsl
xchg
sub
xchg
jns
adc
in
hlt
in
push
stos
out
mov
pop
or
jmp
dec
dec
pusha
jb
iret
popa
fisubrl
inc
pop
mov
xor
mov
aad
push
inc
cs
movsb
call
cmpsb
enter
sbb
and
ljmp
push
bound
pop
stos
pop
stos
bound
sub
fwait
adc
sub
daa
iret
mov
dec
orl
sub
icebp
in
mull
lahf
fisubrl
jo
or
loop
mov
adcb
in
negl
cmpsl
cli
dec
push
mov
xor
adc
jae
and
xchg
xor
adc
leave
push
das
fwait
leave
test
dec
scas
test
fs
rcl
movb
mov
js
addl
and
cwtl
decb
jl
dec
sub
cs
sub
ret
dec
mov
js
and
les
ret
test
cmp
dec
jecxz
outsl
rcl
lock
adc
aad
or
jnp
cmp
negl
inc
xchg
mov
xlat
aad
ds
sti
aad
push
popf
and
es
ret
pop
bound
jmp
pop
cmp
push
lahf
ret
jmp
sub
lock
arpl
jo
das
pop
jecxz
scas
push
xor
and
jnp
out
xor
inc
fstl
inc
inc
sbb
xchg
mov
inc
int
das
cmp
lods
xlat
jnp
or
or
jae
imul
mov
addl
inc
bound
sbb
pop
aaa
xchg
pop
and
in
push
notl
scas
int
idivb
add
pop
int3
rcrl
sub
pop
scas
pop
test
nop
sub
fcmove
rdpmc
outsl
inc
push
xchg
inc
jns
dec
cltd
or
push
push
dec
pop
xor
push
or
push
mov
and
fyl2xp1
xor
adc
in
daa
push
ss
jno
cmp
and
jns
icebp
arpl
dec
orb
mov
xchg
add
lret
repnz
mov
dec
cmpl
mov
fwait
add
mov
stos
or
mov
add
movsl
dec
mov
mov
nop
add
dec
mov
mov
cwtl
out
jno
mov
jns
inc
addr16
ds
gs
nop
push
sarb
jnp
in
mov
sbb
cmc
sbb
adc
js
dec
or
arpl
xor
outsb
push
dec
leave
repnz
or
fs
jecxz
jmp
xlat
adc
cmp
cld
xor
arpl
push
and
xchg
mov
push
cmc
fnsave
add
incl
icebp
pop
sub
gs
jo
sub
pop
int3
lret
mov
das
pop
xchg
popa
xchg
pop
stos
pop
sub
add
mov
int3
mov
rolb
nop
inc
in
dec
leave
lds
add
mov
mov
hlt
mov
xor
fs
pushf
jmp
inc
push
adc
lods
jno
fincstp
or
shl
fwait
inc
push
rcrb
cmp
pop
pop
cmpsl
pushf
ja
inc
ljmp
pushf
jae
add
dec
mov
dec
lcall
pop
push
pop
mov
ds
add
mov
pop
inc
push
jg
in
dec
and
clc
lcall
cs
gs
flds
xor
ja
xchg
std
add
roll
clc
aas
adc
pop
adc
hlt
in
add
scas
shlb
push
add
mov
pop
jnp
mov
pop
nop
imul
sub
out
push
es
mulb
ds
das
in
fisubrl
pop
sub
fisubs
scas
mov
leave
out
pop
idivl
inc
mov
imul
adc
jl
mov
jbe
jne
or
cwtl
popf
fisttpll
and
pop
and
or
stos
xor
bound
aad
fldenv
inc
mov
stos
mov
nop
ficomps
sbb
andb
inc
mov
test
ja
xor
imul
iret
iret
jl
les
test
or
inc
xchg
and
shl
or
in
xchg
sub
mov
lock
add
fcoml
and
mov
dec
imul
stc
idivb
pusha
jnp
cmp
jecxz
sub
xchg
in
arpl
fmuls
dec
les
dec
iret
push
sti
int
mov
sarl
sbbl
sbb
orb
fs
xor
push
addr16
inc
dec
mov
sub
or
aaa
sub
repnz
sub
sbbl
jnp
mov
pushf
push
xchg
or
sbb
imul
xlat
and
cmp
das
push
js
pop
mov
adc
adc
movsl
add
or
mov
inc
insl
out
repnz
cmpsl
pop
sahf
stc
movsb
lock
adc
mov
jo
pop
in
or
push
inc
and
aad
fisttps
mov
movsb
in
xlat
loop
adc
test
shll
mov
int3
in
sbb
mov
cmpsb
loope
lds
sbb
lock
movsb
jmp
mov
movsl
cmp
mov
sub
push
stc
add
mov
jge
pop
iret
loopne
mov
add
xchg
out
and
gs
jb
out
sub
jmp
ja
sub
cld
xor
test
push
dec
lret
rcll
jns
dec
pop
cs
and
mov
jnp
mov
imul
fdiv
sub
ja,pt
mov
lock
mov
je
ret
insb
push
cltd
pop
fs
pop
jp
out
mov
les
js
sbb
xchg
out
or
fmul
mov
jmp
mov
icebp
sub
mov
fwait
jnp
into
dec
leave
rcrl
movsb
dec
pop
data16
mov
push
inc
jp
gs
stos
xor
pop
adc
int3
repz
jecxz
jmp
xlat
shrb
adc
mov
or
sub
jmp
lds
aad
jp
xor
dec
bound
and
sub
inc
pop
inc
les
mov
push
push
stos
fisttpll
pop
mov
jg
repnz
ljmp
outsl
push
lock
scas
jmp
xor
popa
push
enter
cs
push
cmpsl
xor
into
fldt
cmpsb
mov
jl
lret
pop
mov
scas
loope
jg
movsb
lret
push
inc
xor
in
lea
dec
jle
add
pop
orb
pop
fcomp
insl
cld
aad
test
mov
sbb
pop
cs
les
leave
dec
add
mov
insb
imul
ret
call
cmp
addr16
sarl
test
xor
mov
push
mov
lret
pop
in
or
mov
es
movsl
xchg
movsl
mov
jmp
xor
or
or
sbb
lea
dec
test
mov
in
and
cwtl
in
pop
sub
les
jg
mov
adcl
inc
mov
in
cmp
jno
imul
rorb
pop
ds
mov
xor
int3
aaa
push
xchg
std
mov
lods
into
insb
in
push
push
pop
or
sbb
mov
jl
push
sbb
mov
xchg
mov
xor
mov
inc
mov
iret
test
mov
push
inc
mov
xchg
sbb
inc
inc
dec
xlat
nop
pop
data16
clc
adc
fistpll
stos
and
faddl
xchg
loope
int
xor
in
mov
loope
inc
inc
dec
mov
and
inc
aam
shll
std
and
mov
xor
ret
jae
lock
aam
push
pop
push
imul
fwait
lcall
adc
in
sbb
sub
je
out
aam
fwait
hlt
add
repnz
add
xchg
or
lds
pop
and
xchg
mov
or
inc
addr16
orl
xlat
repz
insb
mov
test
and
jmp
in
rolb
test
fs
xchg
adc
pop
jg
scas
int
sbb
call
xor
inc
fistl
rcll
mov
js
stos
jg
popf
pop
into
pop
mov
aas
hlt
aaa
dec
insl
jle
hlt
shrl
ljmp
js
hlt
cs
cmp
shll
mov
lahf
inc
testl
nop
mov
dec
cmpl
mov
and
inc
stc
xchg
add
rolb
mov
push
inc
inc
loope
es
mov
pop
pop
pop
cli
out
aaa
pop
and
dec
mov
lds
and
shll
mov
lahf
fnsave
xchg
cmp
jnp
fidivrl
pop
jno
addr16
adc
js
test
inc
pop
dec
add
add
push
jo
shl
mov
sti
sbb
fstpt
jb
aad
pop
dec
and
je
xor
fwait
das
movl
mov
or
xchg
sub
movsb
repz
jecxz
lock
jge
and
pusha
dec
in
cmp
jg
fs
pop
sub
xchg
out
std
lock
rclb
sbb
call
hlt
int3
icebp
xchg
add
xchg
mov
add
enter
mov
sbb
push
mov
inc
push
in
rcr
cltd
fistpl
rorl
aam
pop
cwtl
call
inc
insb
lret
or
and
or
cmp
xchg
sub
popf
adc
add
mov
mov
fsubrs
dec
push
sbb
repz
push
cmp
xchg
hlt
mov
dec
add
push
not
push
dec
adc
pop
lock
adc
and
jb
pop
mov
sub
adc
mov
incl
sbb
int3
xchg
int3
into
mov
ja
and
lret
or
lahf
in
pop
lds
fwait
push
addr16
int3
push
mov
push
outsb
adc
fdivr
arpl
test
orl
xchg
fwait
mov
mov
insl
mov
ret
scas
jg
cwtl
jle
mov
xchg
addl
or
push
lods
xor
movsl
sub
cwtl
dec
adc
test
je
lea
aad
inc
arpl
aas
sub
pusha
fwait
cmp
jge
mov
and
ret
enter
push
scas
lret
push
dec
sub
mov
sub
jo
enter
bound
dec
adc
jl
dec
scas
sbb
jl
jns
test
add
xchg
add
rolb
dec
outsl
jb
mov
popa
sbb
cmp
xor
jo
cmp
and
cmp
test
pop
add
cmpsl
sarl
loop
les
int3
enter
sbb
inc
ja
loopne
je
or
adc
mov
iret
aaa
inc
int
ljmp
mov
cs
dec
xchg
out
jge
jb
dec
fwait
and
and
cltd
es
mov
iret
ss
and
paddusw
and
ret
cmc
mov
and
mov
ret
aad
pop
or
mov
cmp
sub
pop
addr16
insl
aad
cmp
popf
mov
push
mov
leave
push
loopne
cmp
sub
jbe
hlt
aaa
shrb
xchg
int3
mov
jge
rorb
jns
lds
inc
loopne
cs
adc
mov
arpl
cmp
test
push
pop
popf
les
mov
popa
call
pop
cmp
add
cmp
jno
pop
aas
or
sbb
mov
lock
pop
inc
xor
and
mov
es
or
das
jbe
xchg
addl
pop
mov
pop
pop
sbb
negb
jnp
and
xor
jp
xor
or
pusha
push
sub
jns
mov
xor
adc
dec
and
das
lgs
dec
test
cmp
test
mov
dec
mov
sti
add
sbb
shrb
arpl
push
fwait
or
adc
rolb
jg
jnp
leave
mov
jecxz
faddl
xchg
or
std
ja
push
mov
daa
pop
fidivrs
adc
sbb
adc
femms
push
pop
dec
cli
fadd
dec
mov
jno
cld
cmpsl
and
movsb
les
pusha
ret
js
mov
fs
mov
xchg
push
cmc
fstl
imulb
jge
jg
jmp
mov
or
xlat
int
push
movsb
arpl
xchg
sub
ljmp
shll
fldt
jg
shll
fadd
xchg
and
xchg
adc
cltd
neg
hlt
cli
or
lea
mov
jnp
mov
fnstenv
xor
data16
push
je
cmp
roll
pop
jl
outsb
push
cmp
xor
push
dec
cwtl
xchg
sbb
jl
hlt
mull
jns
sti
push
jno
push
xchg
test
sar
mov
pop
mov
push
xorb
or
inc
or
sub
jmp
test
leave
mov
rorl
push
lock
mov
mov
add
decb
cmpsb
sub
rorb
cmpsb
cmpsl
add
rclb
pusha
lea
lea
pop
enter
cmp
dec
insl
call
cli
jae
xor
lds
jne
xchg
out
xor
pusha
dec
insl
ficoml
cs
arpl
loop
push
sub
push
mov
sub
repnz
mov
sub
shrb
mov
mov
xchg
cs
or
dec
sarl
xor
xchg
pop
mov
mov
pop
int3
fs
mov
imul
les
cld
xor
inc
dec
mov
cmpsb
jnp
lret
sub
shll
mov
inc
mov
int3
mov
inc
sbb
push
xchg
cmc
pop
lea
and
xchg
push
dec
cmp
push
jmp
mov
xchg
sbbb
loopne
and
idivl
push
inc
push
loopne
lret
xchg
lahf
adc
or
clc
popa
add
pop
adc
rcl
pop
or
jae
aaa
nop
shll
push
or
andb
enter
rcll
add
mov
pop
pop
jae
insb
mov
popa
repnz
int
pop
sbb
aad
int3
push
test
cltd
mov
das
dec
fstpl
pop
in
test
cli
xchg
call
test
jae
add
adc
and
or
adc
inc
iret
test
dec
or
es
test
rclb
mov
pop
push
jmp
mov
add
push
push
ja
mov
xorl
push
repz
insl
loope
inc
aaa
shll
dec
push
out
or
sub
mov
sub
lahf
cmpsb
pop
js
mov
cmp
inc
icebp
cli
clc
sbb
je
mov
mov
cwtl
pop
xchg
popf
mov
jp
sub
aaa
aam
mov
mov
jp
test
int
mov
inc
mov
mov
inc
and
dec
xchg
mov
movsl
inc
faddl
in
mov
jp
or
xchg
dec
xor
sarl
add
cmp
es
and
movsb
movl
sbb
outsb
inc
push
adc
mov
mov
push
jg
sbb
jge
int3
mov
dec
aam
mov
sbb
lods
cwtl
push
sub
loope
popf
jae
lods
lcall
xor
daa
mov
cs
dec
dec
and
int
xor
int
sub
adc
aas
das
jbe
adc
stos
nop
xor
add
pop
cmpsb
inc
les
sarb
pop
jmp
aas
xorl
idivl
idiv
clc
jle
lcall
push
pop
ljmp
cwtl
out
jle
aaa
mov
bound
nop
mov
jo
mov
fbld
scas
call
in
in
cmp
adc
rcll
outsb
in
pop
mov
dec
xchg
jns
lods
xchg
push
jo
cmp
or
xchg
mov
aad
mov
sbb
push
insl
mov
int
nop
lret
sbb
cmp
or
xchg
jl
popf
cmpsl
test
jno
enter
rcrl
lds
xchg
dec
adc
movd
fildll
xchg
adc
fisubl
std
cmp
mov
imul
adc
das
fmulp
pop
cmpsl
fildl
daa
sub
ds
push
pushf
mov
cmp
imul
xchg
xchg
rclb
addl
outsb
sub
loop
dec
gs
enter
fwait
add
ljmp
out
insl
sahf
shr
ret
lods
adc
pushf
pop
mov
icebp
insl
mov
cwtl
and
or
pop
stos
xchg
pop
jmp
fmull
xlat
ret
cmovnp
je
aam
push
insl
mov
xor
push
jp
out
jle
testl
cmp
leave
es
jnp
inc
into
fistps
xor
mov
cmc
mov
arpl
mov
push
ret
lcall
fs
fs
icebp
bnd
lahf
push
cmp
mov
daa
jle
or
or
jp
inc
cltd
cs
rolb
sub
mov
pop
addr16
xorb
sbb
mov
arpl
mov
lcall
xchg
inc
int
mov
jle
mov
sarl
stos
lds
add
jge
cmp
adcl
int3
pop
jbe
dec
test
pop
lock
jmp
add
dec
out
mov
push
rcrl
xor
fisubrl
loopne
daa
cmp
jno
dec
jl
bound
incb
out
shlb
lret
pop
push
mov
loop
ljmp
std
sahf
adc
icebp
pop
sbbl
mov
lds
cmpb
lahf
xor
xor
ret
inc
push
jmp
hlt
mov
nop
adc
sbb
jno
or
adc
push
out
sbb
lds
fldl2t
adc
inc
sahf
push
push
pop
add
xlat
cmpsl
sub
clc
lcall
push
pusha
out
inc
clc
insl
and
xor
aaa
push
dec
mov
iret
mov
xor
mov
call
mov
fcomps
scas
leave
inc
inc
pop
xor
push
div
push
aaa
into
imul
movsl
clc
mul
mov
sub
hlt
rcrb
xor
push
jae
sbb
jns
mov
jge
xchg
fldenv
loope
mov
test
or
cmpsb
jne
les
movsl
or
lods
popa
cmp
mov
roll
push
out
push
jne
es
cs
test
testb
or
je
jno
fcomps
sbb
mov
movsl
hlt
clc
and
jle
lret
mov
push
aam
inc
sti
or
fwait
or
divl
pop
add
int
or
xchg
push
push
xor
cmc
enter
mov
into
sbb
orb
add
sarl
ss
jbe
jmp
or
daa
fstpl
and
enter
lock
sub
pop
rorb
mov
adc
ljmp
sub
inc
or
data16
add
out
das
cmp
fbstp
jge
mov
cs
call
mulb
rorb
loopne
xchg
jp
pop
insb
icebp
push
and
cmpsl
jns
fidivrs
and
jp
aam
mov
push
sbb
imul
arpl
inc
jl
out
popl
adc
das
pop
fisubrl
mov
fs
ds
xor
iret
inc
loope
mov
and
sub
hlt
int3
into
sub
call
stos
or
popl
lret
sti
cmp
scas
fcmovnbe
subl
dec
insb
fstl
sub
daa
in
movsb
inc
mov
rcll
pop
mov
out
scas
leave
inc
scas
mov
push
rorb
adc
push
mov
add
xor
imul
push
push
xor
jns
aaa
push
xor
movl
cmp
sbb
sub
mov
pop
mov
push
mov
outsw
in
shr
mov
sub
cwtl
stos
jbe
adc
ja
sub
mov
xchg
scas
lret
sbb
add
push
push
mov
xor
dec
sbb
fidivrs
lret
xor
and
fisubrs
es
push
jmp
sti
adc
popf
xlat
mov
outsl
ss
cmp
mov
inc
pop
scas
dec
shrl
aaa
mov
push
cld
mov
frstor
movsb
add
mov
push
arpl
fidivl
add
xor
js
sbb
outsl
std
sub
and
jle
sbb
push
jns
mov
push
mov
xor
inc
stc
nop
jmp
and
mov
mov
hlt
pop
fsubs
and
jge
iret
pop
negl
fdivr
xchg
std
mov
mov
adc
imul
frstpm(287
les
popa
in
and
sbb
das
add
xor
sbb
or
into
outsl
aam
inc
cmp
lds
fistpll
push
or
call
sub
sub
adc
xor
mov
sbb
test
xchg
push
pop
mov
mov
pop
push
test
dec
in
popa
lret
popa
cmc
or
jnp
popa
aas
std
dec
repnz
adc
push
rorl
fmul
flds
adc
and
mov
jmp
xchg
pop
adc
push
hlt
pop
cmc
jae
mov
cltd
fs
xor
dec
pop
jno
xchg
fsubl
mov
movsl
je
stos
or
push
int
fs
push
add
daa
mov
aam
adc
lods
push
inc
xchg
mov
sbb
es
ljmp
stc
xor
xchg
das
xchg
pop
dec
xor
fsts
mov
arpl
cmpsl
inc
sti
clc
mov
sub
mov
jmp
xchg
loopne
stos
lods
xor
inc
stos
imul
mov
jne
mov
inc
sahf
mov
fists
out
std
fdivp
adc
imul
pop
lock
lock
cmp
fimull
dec
mov
or
jmp
sbb
test
sbb
xchg
push
mov
sub
inc
inc
mov
sub
popa
sbb
out
inc
sbb
lcall
lods
outsb
loopne
add
out
sbb
subb
mov
insb
lds
pop
push
push
cltd
insl
int3
insb
testl
adc
xor
sub
dec
shll
stos
ljmp
fbld
sbb
push
mov
movb
lods
aad
iret
push
cmc
sbb
sub
dec
or
mov
xlat
js
dec
insl
mov
or
sbb
jp
lcall
sbb
mov
xchg
pop
push
sub
add
loopne
and
movsb
dec
fimull
inc
stos
fwait
scas
pop
lret
in
sarb
or
or
pop
jl
sbbb
mov
mov
jge
inc
lcall
and
lcall
shrb
rcrb
ret
insb
cmp
cld
cmp
xchg
scas
mov
mov
add
ljmp
mov
pop
stos
dec
sahf
lret
xor
repz
mov
adc
pop
lcall
into
pop
add
mov
xor
cmp
xchg
inc
xchg
jle
test
jb
push
outsb
push
repnz
ficomps
push
movsl
xchg
ret
scas
inc
arpl
ret
fildl
icebp
or
mov
mov
out
mov
fildl
enter
in
and
mov
xchg
icebp
pushf
shlb
xor
cmp
sbb
mov
cmp
in
jo
repz
mov
push
dec
lcall
lock
testb
popf
and
imul
sbb
add
ja
lock
movsb
push
testb
sbb
mov
mov
pop
adc
mov
lea
xchg
fs
and
cltd
fsubrp
xlat
aaa
xchg
in
sub
out
cmp
jno
arpl
out
pusha
cmp
popf
je
sbbb
mov
cmp
sbb
ret
mov
pop
inc
loopne
filds
mov
into
xor
mov
lcall
enter
jo
or
fnstenv
add
mov
sub
or
jns
cli
repz
sub
cmp
push
jne
outsb
lahf
cmp
mov
outsb
pop
faddp
fwait
pop
jns
pop
pop
bound
jmp
fwait
mov
mov
add
add
sub
arpl
nop
mov
xchg
dec
cld
sub
mov
inc
and
mov
fistl
add
ljmp
jg
fwait
in
in
pop
aam
xchg
mov
push
adc
lea
fcoms
push
aad
lahf
lcall
test
xchg
cmp
inc
jne
lret
std
jle
xchg
adc
mov
out
test
xchg
pop
sub
mov
and
aad
jnp
sub
cmp
and
pop
sub
andb
cld
pop
imul
push
jo
cmpsb
imul
faddl
cli
sbbl
cs
pop
cmp
mov
rclb
sti
mov
sarl
in
and
fisttpll
and
mov
add
inc
add
and
push
into
sbb
into
push
adc
ficoml
pop
and
dec
inc
popa
in
int3
rolb
cld
xchg
push
xchg
rclb
xor
loop
pop
xchg
arpl
std
imul
lret
scas
add
push
lock
push
jo
mov
cs
data16
mov
enter
push
in
bnd
je
aam
out
scas
pop
or
rclb
or
push
mov
jb
cmp
jle
pusha
jbe
scas
stc
sbb
mov
lcall
cmp
cmp
je
dec
xchg
mov
dec
lock
mov
sub
int3
mov
and
mov
add
push
add
int
enter
sarl
dec
mov
push
cmp
sub
mov
sbb
or
fcmovnb
testb
and
jmp
cmpsl
push
mov
shlb
enter
or
in
std
addr16
popa
test
cwtl
nop
jecxz
fisubrs
dec
lods
sarl
xor
xor
std
mov
aam
popa
or
fldl
jp
nop
mov
mov
shlb
jne
sahf
test
repz
and
stos
outsb
out
push
sub
in
push
cmp
testb
sbb
mov
sub
insb
mov
xor
sarl
or
in
mov
jae
int3
test
sub
movsl
cmc
or
push
rclb
scas
into
roll
push
xchg
or
mov
inc
lods
ss
call
call
add
sbb
fsin
jecxz
ds
inc
lea
sbb
fsubp
cmpsl
pop
movb
mov
ss
xor
js
dec
mov
js
ds
or
arpl
out
jno
mov
hlt
mov
repz
inc
into
addb
dec
fidivrs
mov
test
pushf
mov
jns
and
aad
or
cltd
mov
cmc
fldl
sub
test
scas
sub
pusha
orl
push
push
cltd
dec
mov
mov
cmpsl
ja
stos
sub
cmp
mov
inc
jle
pop
xchg
xor
bound
xor
in
divl
cmp
cmp
xchg
or
xchg
repnz
imul
sbb
pop
jge
pop
lock
cmp
or
fwait
sub
xorb
cltd
mov
cmpsb
das
imul
es
aaa
das
xorl
mov
sbbl
out
inc
lret
testb
leave
or
andb
xchg
scas
mov
dec
dec
add
clc
pop
mov
xchg
subl
gs
call
cli
add
stos
je
arpl
filds
pop
cmc
push
add
in
xchg
mov
jns
dec
add
int3
or
or
xchg
gs
lock
pop
shll
sub
sbb
xor
jecxz
dec
sahf
sub
mov
jmp
insl
xor
icebp
cmpsb
ret
dec
mov
dec
mov
test
mov
ret
mov
pop
loopne
scas
andb
xchg
in
push
enter
daa
add
lock
push
sub
or
rolb
cwtl
adc
shrl
xchg
and
jmp
or
xlat
ds
adc
aaa
movsb
enter
popfw
inc
pushf
xor
add
add
movsb
jl
jecxz
andb
les
outsl
int
bound
stos
sbb
nop
enter
xchg
xchg
ljmp
push
lock
xchg
adc
xor
cmp
cmpsb
pop
mov
jge
in
ret
cmp
xchg
sahf
lods
pop
fsubs
ret
ret
adc
and
outsl
sbb
push
mov
inc
arpl
and
test
xor
xor
sbb
xor
fs
movsl
jne
jge
sub
cmpb
mov
mov
dec
mov
lods
je
cwtl
stc
jns
dec
inc
push
mov
pop
mov
and
aaa
mov
gs
push
xor
add
push
push
sbb
jnp
pop
cwtl
pop
cwtl
in
arpl
scas
sub
decl
test
sub
push
repnz
jns
lds
lds
popa
loopne
xchg
out
mov
jo
imul
clc
adc
in
insb
xchg
jg
bound
sahf
sti
pusha
mov
sti
test
mov
and
pop
and
cmpsb
mov
sti
mov
fcmovne
and
lock
sbb
mov
shlb
mov
jae
and
mov
outsl
pop
mov
jge
fidivrs
pop
xchg
rcr
cwtl
cmp
or
addb
gs
mov
in
and
and
jae
bound
lds
jle
hlt
ret
cmpsl
jns
mov
mov
mov
insb
adc
push
rolb
icebp
xchg
sbb
xchg
mov
sbb
loopne
adc
leave
repnz
in
inc
aaa
mov
insl
shr
sub
cmpsb
push
adcl
xor
repnz
cli
ja
call
inc
add
sub
aad
xchg
pusha
jl
inc
mov
push
cltd
jae
dec
pop
mov
jo
repz
ja
testb
sbb
in
sbb
mov
mov
imul
enter
sbb
stos
movsb
and
xchg
sbb
and
pushl
cwtl
sbb
fisttpll
jns
xchg
fistpl
dec
jbe
xchg
jns
lret
mov
and
jns
push
cmp
data16
daa
cmpsb
cmp
mov
xchg
pop
nop
xlat
mov
sbbl
inc
cwtl
imull
add
xor
jle
and
push
inc
cmp
xchg
cld
cmp
test
fidivl
sti
inc
dec
test
rcrl
popa
fwait
xor
jp
sar
mov
inc
xchg
out
xor
and
add
dec
dec
push
ljmp
pop
loope
ret
repz
xchg
jmp
sbb
xor
jo
sbb
pop
adc
inc
xchg
lea
adc
testb
add
and
in
pop
pop
mov
xor
ds
out
addl
ljmp
inc
call
in
sbb
in
mov
outsb
popf
rol
cs
mov
and
and
push
je
or
push
cmp
inc
sub
or
inc
test
sti
sarb
or
scas
cmp
daa
jmp
cmpsb
dec
xlat
mov
stos
ucomiss
inc
adc
dec
push
outsb
shll
and
xchg
inc
mov
adc
xchg
fwait
and
dec
lcall
rcrb
cmp
imul
inc
mov
or
je
das
stos
push
cmpsb
mov
push
inc
sub
push
cmp
sub
daa
clc
incl
nop
aad
mov
call
ffree
push
mov
jae
mov
mov
mov
dec
dec
add
je
leave
popf
jp
adc
enter
mov
ljmp
mov
xchg
mov
mov
pop
pop
push
xor
mov
jae
movsb
ds
mov
jle
inc
rclb
pop
sbb
jae
loop
or
out
or
das
xor
adc
lds
pop
sbb
sbb
into
and
lret
fwait
aam
jae
orb
jle
cwtl
loope
sbb
aad
push
ret
sub
pop
aaa
dec
outsl
add
aad
and
add
or
aas
mov
cld
jecxz
jbe
xchg
mov
out
fsts
mov
xorb
iret
mov
fmull
mov
stos
sub
dec
sbb
scas
lcall
outsl
dec
mov
dec
popa
sub
lock
js
cmp
gs
dec
dec
dec
int3
cmpsb
adc
roll
roll
jo
fwait
daa
push
out
test
and
jnp
fistpll
testb
lods
push
rolb
xor
loopne
sarb
adc
mov
gs
push
in
jb
pop
js
add
clc
jb
std
lret
sbb
sbb
jp
inc
out
mov
les
movsb
push
mov
add
scas
push
psrld
push
fstl
pop
jl
in
repz
xorb
and
outsb
cmp
aad
pop
cmp
cmc
daa
add
rcrl
int
cltd
ja
jg
ds
int3
clc
mov
or
sbb
jmp
jmp
push
and
sub
iret
or
push
or
jmp
push
mov
dec
mov
aad
sbb
xor
gs
jg
in
inc
mov
not
adc
xor
push
jle
inc
daa
rorl
aam
cmpsb
sbb
mov
sbb
xchg
scas
enter
addb
outsb
int
cmpsb
mov
sbb
ljmp
daa
push
mov
movsl
fucomip
adc
pop
cmp
add
cli
inc
mov
xor
unpckhps
arpl
jns
and
jp
jae
push
ljmp
rol
aaa
repz
fwait
shrl
sub
aas
add
ljmp
aaa
push
fdivrs
outsl
mov
add
push
pop
or
les
adc
daa
mov
dec
into
es
cmpb
sub
dec
sub
pushf
dec
shrb
imul
adc
stos
ret
imul
sbb
jle
movsb
clc
in
jge
dec
fistps
jo
xor
fiadds
nop
mov
mov
in
sbb
cmp
sub
insl
adc
loopne
pop
cmp
add
cltd
cmpsl
shll
in
leave
sarb
test
out
add
pushf
push
inc
or
aam
popf
pop
lahf
sbb
orl
dec
mov
out
shl
popf
pop
xor
insl
xchg
and
insl
incb
mov
jl
jbe
add
cmpsb
sbb
js
pop
pop
mov
dec
mov
cli
xchg
xlat
xchg
daa
jl
call
jecxz
jecxz
fwait
imul
mov
mov
call
mov
in
lahf
push
lods
lcall
flds
jae
aas
push
pop
fcoml
push
xchg
sarb
insl
dec
sar
rorl
adc
vunpckhps
pushl
int3
ss
push
mov
aam
shlb
nop
adc
stc
pop
pusha
movb
inc
cld
leave
cmp
test
fprem
push
sub
popf
in
outsl
mov
gs
push
mov
mov
inc
and
fimull
cmp
loopne
scas
aas
sbb
mov
fwait
jnp
ja
scas
mov
add
fists
xor
mov
mov
and
pop
fcomp
lods
sub
aam
movsl
imul
push
sbb
xchg
push
adc
or
jne
rol
mov
rolb
sub
jg
jo
xchg
pop
mov
fildll
fwait
sbb
lea
movsl
jbe
mov
inc
inc
sahf
or
adc
cltd
cmpsb
mov
mov
xchg
daa
xor
mov
push
in
push
mov
imul
outsl
add
mov
mov
inc
adc
mov
lock
stc
dec
push
jb
push
insl
out
out
adc
pop
mov
xor
push
inc
insb
ficoml
lahf
fs
or
inc
mov
mov
fiaddl
out
jb
dec
cmpsb
sbbl
stc
jno
dec
mov
xchg
mov
cli
shll
ss
xor
insl
push
jl
add
inc
adcl
push
in
mov
pusha
clc
pop
lods
sbbl
rclb
mov
rcll
stos
jp
adc
outsl
jecxz
outsb
insl
adc
push
fs
xor
or
jle
data16
js
cwtl
pushf
jnp
dec
sbb
sub
xor
push
cmp
and
sarb
pop
insl
pop
xor
pop
ljmp
pop
rorb
js
push
adc
sub
adc
and
xor
dec
cmp
jno
shll
add
insl
cli
sbb
xchg
pop
cmp
jmp
mov
aam
cmpsb
sub
sbb
jae
insb
xchg
sbb
out
sbb
fidivrs
or
sub
int3
sub
cmpb
popa
iret
sbb
pushl
les
xchg
sub
das
xor
ss
loop
sbb
add
xchg
idivl
lds
das
or
mov
jnp
out
xor
sbb
jg
fldenv
bound
loopne
jnp
std
ret
bound
outsl
mov
ret
pushf
push
mov
out
push
insl
pop
cs
mov
pop
mov
icebp
cwtl
aam
call
bound
inc
mov
daa
mov
outsb
cld
pusha
arpl
pusha
stos
xor
add
push
jbe
loope
inc
in
or
mov
mov
pop
jle
out
mov
jp
dec
popa
push
aas
test
std
cmp
fnstenv
inc
push
push
lods
sbb
xor
mov
gs
pop
rorb
xor
jmp
ja
dec
pop
sub
test
movsl
sbb
lods
cmp
pop
mov
repz
stc
popf
jne
or
fmuls
shrb
pusha
mov
stos
mul
dec
inc
push
push
mov
cmp
addl
xor
and
xchg
clc
dec
std
les
xor
jnp
loop
test
outsb
das
sahf
lock
cmp
xchg
cmpsl
cmp
xchg
add
repz
adc
pusha
neg
sbb
xor
push
fisubrs
hlt
pop
loop
cmpsb
loope
popf
jnp
scas
sbb
scas
mov
jb
cmp
mov
call
or
dec
mov
sbb
inc
subb
ljmp
cmp
sbbl
jne
adc
int
dec
push
sti
and
insl
pushl
xchg
in
inc
push
mov
jmp
pop
lock
imulb
or
xchg
roll
push
add
mov
stos
inc
movb
repz
fbstp
adc
icebp
addr16
out
scas
xchg
aad
adc
leave
ja
clc
pop
ficompl
cmc
or
jl
cltd
mov
cli
loope
inc
lret
movnti
test
push
sti
or
ror
mov
mov
push
jmp
enter
test
sti
jne
sub
std
bound
orb
push
cwtl
mov
mov
cmp
pop
call
ljmp
xorb
cmp
jae,pn
rorb
adc
test
cmp
mov
outsb
les
push
mov
mov
adc
jge
les
or
in
test
add
dec
lret
mov
add
hlt
xchg
stos
inc
lret
shlb
or
xlat
cli
bound
imul
xchg
add
mov
popa
test
jg
dec
aam
in
adc
mov
pop
shrb
mov
jo
cwtl
or
xor
scas
lahf
and
xor
xor
out
stos
pushf
xor
jnp
mov
mov
lcall
jns
aad
mov
mov
addb
and
out
movsb
dec
xor
mov
xchg
xchg
pop
mov
popf
sbb
dec
idivb
fldt
push
dec
icebp
stos
sarb
add
into
test
out
adc
xchg
cs
add
filds
xor
pushf
mov
aaa
cmc
enter
pop
sub
add
movl
xchg
fcomps
mov
movsl
int3
add
or
mov
outsl
and
fisttpll
mov
out
clc
and
in
arpl
sbbb
jns
mov
lea
mov
sbb
add
and
hlt
mov
add
lahf
std
sti
loop
cs
add
pop
sbb
jnp
add
divb
sbb
enter
fstps
icebp
dec
call
and
test
or
fsts
adc
push
sahf
xchg
pop
inc
aam
mov
pop
dec
pop
decl
mov
add
out
jle
insb
adc
ja
xchg
aam
dec
cwtl
mov
ss
xor
or
pop
andl
dec
pop
clc
xchg
jle
scas
add
shlb
jle
cmp
sub
cmpsb
sbb
bswap
dec
inc
mov
xchg
dec
xlat
push
outsl
fs
bnd
inc
fs
outsl
jae
xchg
test
ret
fidivs
pop
sbb
push
mov
call
pop
jp
cmp
mov
cli
cmp
mov
in
gs
loope
push
movsb
testb
jle
sbb
cwtl
mov
mov
fcmovu
mov
and
cmp
ljmp
inc
jle
shll
cmp
cmp
xor
dec
lahf
jnp
cli
push
mov
testl
inc
adc
ljmp
rolb
fisubs
mov
sub
decb
push
in
shrb
cmpsb
popa
push
or
xchg
jecxz
adc
frstor
sbb
xor
jp
mov
inc
nop
and
add
adc
xchg
loope
ret
bound
mov
subb
mov
push
push
ds
push
inc
ljmp
or
xchg
mov
mov
adc
loope
mul
xor
mov
ret
repnz
in
inc
inc
lock
xchg
lahf
mov
jno
mov
push
mov
lahf
jno
adc
insb
dec
add
mov
arpl
jne
repnz
in
sub
imul
dec
mov
shlb
sbb
jg
adc
mov
loopne
inc
or
sbb
test
ja
addr16
leave
repnz
pop
movsl
mov
xchg
sub
jnp
inc
out
pop
push
jmp
push
gs
xchg
fidivs
insl
pop
cmp
sbb
adc
mov
jne
outsl
les
data16
add
ja
xchg
xor
jnp
add
xor
fiadds
out
push
scas
loope
xchg
cmpsb
inc
xchg
mov
mov
je
mov
shl
lret
lods
inc
fsts
mov
push
ret
loopne
and
ljmp
test
ljmp
or
xchg
mov
adc
hlt
sbb
and
pop
pop
mov
mov
lods
nop
fwait
xchg
adc
stos
repz
push
add
jp
xchg
sub
xor
and
adc
in
xchg
xor
or
sbb
xchg
daa
adc
sbb
push
cmp
stos
imul
dec
les
adc
scas
sbb
je
mov
push
mov
push
test
leave
mov
jo
arpl
aaa
pop
movsl
mov
jne
imul
jl
arpl
and
mov
out
or
adc
pop
mov
or
pop
mov
out
or
xchg
sbb
rorb
push
les
sbb
fmull
pop
or
arpl
stos
add
test
repnz
lret
pusha
lock
push
test
lods
pop
sub
push
xor
push
jl
xchg
xchg
int
nop
push
aas
cmpsb
lock
cltd
pop
or
push
jns
inc
cld
push
in
jecxz
.byte
cltd
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
add
call
mov
ljmp
lea
nop
mov
lret
jnp
call
repnz
sar
lahf
in
mov
mov
test
xor
push
jmp
push
and
fstps
fwait
cmp
jbe
in
add
pop
add
jl
sub
push
add
pop
xor
mov
movswl
add
push
movswl
pop
sub
push
jmp
je
adc
loopne
pop
aas
or
push
pop
xor
jbe
jmp
adc
push
das
cmp
sbb
push
jbe
mov
sub
call
xor
xchg
pop
add
and
pushf
movsl
mov
pop
dec
jne
mov
jmp
sub
mov
int
xchg
push
mov
pop
jmp
cmp
jle
sub
bound
cmpsl
insb
rclb
fwait
lock
iret
sbb
in
icebp
inc
call
lds
jl
outsl
in
stos
lods
insb
sarb
xchg
mov
data16
dec
scas
fnsave
pop
aas
gs
mov
lds
stos
arpl
iret
bound
adc
dec
int3
clc
fistpll
sbb
inc
mov
cmpsl
insb
dec
pop
dec
dec
inc
jecxz
pusha
xchg
mov
mov
addr16
dec
enter
mov
and
xchg
fisubl
inc
inc
test
fcmovu
std
in
push
leave
adc
inc
dec
test
jo
int3
pop
dec
lret
adc
test
xor
push
jg
enter
xor
mov
mov
rcl
call
mov
push
jg
push
xchg
dec
adc
or
inc
jg
mov
and
addl
xchg
sbb
xchg
push
dec
mov
pop
loopne
es
xchg
xorl
aam
in
imul
je
mov
aas
scas
lds
mov
addr16
xchg
push
jg
fldlg2
xchg
sbb
jnp
xchg
push
mov
lods
mov
into
in
cmp
hlt
mov
imulb
pushf
std
and
dec
adc
xchg
push
dec
mov
push
jg
push
mov
loopne
inc
popf
out
inc
dec
hlt
push
and
pop
lea
mov
xor
dec
mov
fsubrs
or
in
pusha
xchg
jae
aam
pop
pop
or
dec
mov
jmp
or
pop
dec
xchg
lods
ret
inc
dec
jbe
cmp
pusha
jp
mov
inc
xor
cmp
mov
inc
mov
iret
test
lret
pop
jns
leave
sti
data16
xor
sahf
mov
lds
jne
pop
ficompl
out
pop
out
insl
in
dec
mov
xchg
dec
mov
pop
dec
mov
xor
rolb
jl
andb
sahf
out
inc
dec
xchg
insb
jg
dec
add
dec
add
push
test
lds
repnz
insl
sub
jno
and
movl
out
inc
dec
mov
fs
jno
push
sub
pop
lahf
pop
push
inc
jecxz
dec
adcl
xor
push
ljmp
fstps
mov
in
mov
dec
pop
mov
cmpsb
push
push
xchg
std
sbb
xor
loopne
call
push
es
hlt
insl
stos
cmp
shrb
ret
jmp
adc
cmp
shrb
push
mov
push
xor
inc
hlt
lahf
and
std
jl
xor
push
je
aam
push
push
aaa
add
fdivl
mov
cmp
repnz
lcall
in
lahf
test
mov
mov
inc
loopne
jge
push
loopne
mov
xor
xor
xor
pop
push
xor
ret
push
xor
push
push
or
pop
sub
cmpsb
push
push
xorl
push
xor
je
xor
push
push
test
cmpsl
push
push
enter
xor
push
push
dec
negb
sub
mov
lcall
push
enter
dec
cmpsb
push
push
enter
lret
push
xor
xor
leave
push
pop
push
xor
push
test
xor
or
cmp
mov
mov
mov
ds
movsl
inc
jmp
mov
les
pop
inc
icebp
cltd
push
inc
in
daa
xchg
shlb
loopne
add
decl
imul
jp
outsl
les
ficoms
and
ficoms
das
mov
loopne
stos
push
test
sub
sbb
lcall
push
enter
sarb
push
xor
aas
pop
test
call
rorl
xor
je
test
xchg
pop
push
xor
push
xor
push
push
xor
xor
fidivl
add
enter
add
xchg
mov
fildll
xchg
push
add
xchg
daa
lret
mov
addr16
js
mov
dec
add
adc
leave
jl
mov
add
xchg
repnz
lcall
pop
mov
push
push
xor
sbb
add
xchg
mov
jl
cs
push
xor
sbb
add
xchg
mov
push
in
push
mov
mov
dec
insb
loopne
stc
mov
push
xor
mov
das
mov
sbb
xor
xor
mov
movl
gs
in
push
mov
sarl
xor
push
scas
icebp
push
jecxz
fwait
addb
push
subb
je
lods
sbb
lahf
js
addr16
mov
inc
pop
push
push
subb
je
xchg
pop
repnz
enter
xchg
call
push
push
data16
insl
mov
push
xor
push
xor
and
mov
lcall
sbb
in
jge
push
xor
adc
repnz
pop
push
xor
es
cs
push
xor
pusha
push
xor
fmuls
or
loopne
inc
cmpsl
push
push
aas
jne
or
and
and
test
mov
rcrb
push
pop
shr
cmpsb
sarb
jne
push
sarl
inc
fistpl
test
lcall
lahf
filds
cmp
cmp
pop
ret
add
cmovb
icebp
jno
mov
push
cwtl
cmp
ja
cld
in
das
jns
mov
mov
mov
push
xor
push
push
xor
push
push
xor
push
push
mov
lods
push
mov
jae
push
push
xor
push
pop
xor
push
push
xor
je
xor
push
push
xor
push
push
pushf
loope
lods
jns
mov
dec
push
mov
out
lds
push
push
lahf
jecxz
fdivs
scas
cmpsl
jg
add
jecxz
aaa
hlt
or
push
mov
clc
inc
int
mov
jbe
push
push
stos
aam
xor
stos
cmp
loope
push
or
imul
cwtl
das
les
xchg
xchg
aaa
popa
cmp
shrl
out
std
jae
arpl
cli
mov
loopne
in
lods
notl
xchg
inc
fiaddl
pmullw
pop
jle
add
shll
jg
mov
mov
sbbb
push
iret
push
int3
lds
cmp
jecxz
xchg
lret
and
pusha
sarb
mov
lret
data16
stos
jle
leave
je
popf
xchg
andl
ror
dec
mov
out
pop
outsl
imul
mov
test
or
mov
cmp
mov
mov
xor
lretw
pop
insb
loope
pop
fstpl
jno
push
ficomps
nop
lock
inc
bound
shll
adc
enter
cmp
pop
popa
fdivrs
lods
je
xlat
adcb
scas
jp
mov
out
xor
jge
test
mov
ret
add
pushf
adc
pop
int3
jne
lret
arpl
aad
xchg
sti
fsubrs
sti
sbb
in
dec
jecxz
cmp
sub
imul
mov
cmpsl
inc
dec
add
scas
dec
mov
stc
stos
lahf
push
cmpsl
mov
xchg
inc
fnsave
rolb
cs
mov
fdivr
fisubl
adc
ret
in
int
ret
mov
insb
les
test
xor
push
adc
jns
lods
jl
pop
jnp
shlb
mull
js
pop
cwtl
jg
or
ret
push
sub
js
push
mov
mov
inc
pusha
cmp
push
push
xor
je
jl
data16
mov
mov
push
xor
cmpsb
mov
lcall
mul
cmp
cs
mov
mov
lret
fs
mov
cmpsb
xorl
sbb
add
xor
mov
jle
xchg
cmpsb
cmpsl
stc
das
cmp
repz
popa
jno
push
popf
fisttps
enter
decb
data16
push
in
push
jp
push
insl
adc
and
xchg
int3
adc
push
pop
test
imul
cmp
aaa
adc
inc
stos
xchg
pop
loope
xchg
leave
sub
outsl
loopne
pushf
or
repz
pop
stos
lods
mov
mov
cs
sub
in
push
mov
jmp
cmpsl
sbb
daa
out
cmp
lcall
sbb
mov
and
add
add
add
cmp
add
cmp
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
cmp
add
cmp
add
cmp
add
push
add
cmp
push
add
cmp
push
add
cmp
push
add
cmp
push
add
cmp
push
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
push
add
add
add
cmp
add
fistpll
add
add
inc
jb
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
cld
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
fadds
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
sbb
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
add
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
add
add
push
and
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
dec
pop
jne
bound
addr16
sub
xor
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
add
add
jb
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
out
cwtl
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
add
xchg
add
add
pop
jne
gs
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
out
je
fbld
cmp
mov
pusha
jmp
xchg
add
insb
xlat
dec
bound
fadd
cmp
insb
lods
clc
mov
cltd
fwait
stos
in
das
or
mov
add
icebp
and
sbbl
adcb
and
mov
fidivrl
push
pusha
mov
movsl
mov
push
sbb
xchg
add
pushf
sub
test
ret
push
xor
cmpsb
pop
jns
mov
pop
mov
sbb
fldcw
call
cmp
data16
mov
mov
push
stos
lods
jnp
ds
xchg
stc
mov
test
cli
scas
lods
mov
dec
jg
pop
cmp
cmp
into
push
iret
movsb
or
jmp
aad
or
and
pusha
adc
lods
sbb
lret
imul
push
lods
pop
and
dec
mov
xor
iret
sbb
xchg
adc
adc
add
inc
cmp
cs
xchg
pop
push
dec
push
orl
adc
roll
pop
xorb
pop
pop
pop
adc
clc
cmpsb
jcxz
mov
stos
cld
push
pop
int3
fwait
aas
aaa
sbb
push
lret
sub
popl
sar
xchg
mov
insl
ss
xor
insl
sbb
mov
inc
mov
sub
clc
inc
das
data16
and
dec
mov
jmp
push
stc
jnp
arpl
sbb
jp
and
gs
je
cmpsb
out
sahf
dec
imul
xor
cmp
bound
sub
mov
dec
add
cwtl
pop
lea
popf
pop
imul
pop
and
mov
lods
mov
mov
fucom
dec
scas
push
das
dec
aad
adc
and
hlt
mov
test
int3
and
es
js
dec
inc
stos
mov
sarb
mov
sbb
add
fstps
insl
jmp
js
push
rol
nop
jb
pop
jmp
push
out
std
push
xchg
add
mov
gs
push
out
aad
ja
xchg
add
in
sub
jo
lods
mov
out
xchg
dec
adc
mov
out
sbb
loope
scas
dec
xor
fwait
or
int3
imul
je
rorl
mulb
fucompp
inc
dec
adc
cmpl
fnstsw
cmp
pusha
pop
mov
enter
lea
mov
popa
jp
dec
mov
popa
mov
dec
mov
andl
and
shl
push
push
push
addr16
insl
push
test
mov
xchg
mov
ja
repz
loope
sbb
std
fidivs
add
andb
dec
mov
fisttpl
ljmp
xchg
jne
test
dec
xchg
scas
cmp
xor
rorb
pushf
adc
and
dec
les
mov
mov
add
sub
push
gs
hlt
pop
cld
aas
sbb
test
lock
sbb
shll
loope
xor
jg
cwtl
gs
mov
das
ret
out
hlt
cmp
jnp
popf
add
out
sbb
adc
pusha
jbe
pop
jg
cmp
aam
loopne
sub
mov
jbe
add
insb
loope
cltd
insl
insb
inc
jo
outsb
insl
cmp
bound
roll
and
add
xchg
aas
jnp
nop
or
adcl
cwtl
out
stos
pop
lock
into
xchg
sub
xchg
xchg
mov
jle
scas
sbb
pusha
inc
mov
xchg
lcall
addr16
stos
sub
lcall
sbb
rolb
and
test
in
jne
push
jo
jecxz
pop
clc
data16
xchg
sbb
cmp
xlat
enter
or
jo
jge
adc
ljmp
push
pop
dec
xor
sub
mov
mov
adcl
lock
pop
xchg
inc
test
add
inc
imul
imul
sbb
sbb
jmp
stos
rep
out
xor
jp
out
repnz
mov
lahf
fwait
inc
inc
mov
cmp
cld
xchg
adc
push
cmpsb
outsl
mov
mov
movsl
test
mov
fdivr
sbb
inc
dec
mov
ret
jmp
lds
int3
mov
sub
mov
or
or
adc
int3
pushf
insl
movsl
adc
movsl
push
dec
cmp
mov
movsbl
add
jl
inc
xchg
sarl
in
adc
mov
divb
adcl
xchg
jbe
dec
mov
mov
jp
add
std
mov
hlt
test
enter
mov
xor
sub
pop
or
ret
adc
testl
in
add
sbb
loopne
or
movsl
cs
negb
cmp
push
push
sub
lcall
jecxz
jnp
ds
and
lds
jmp
and
es
enter
stc
shrb
lods
dec
pop
icebp
xchg
imul
call
mov
pop
in
dec
movsb
popa
sbbl
xor
ficomps
dec
jno
mov
push
mov
push
xor
or
ss
loop
mov
cmp
lds
sbb
gs
cmp
xchg
paddq
nop
addr16
addr16
push
inc
xor
in
pop
stc
out
sbb
and
pop
cmpsb
cmp
pop
ljmp
cmpsl
dec
adc
push
in
jns
bound
mov
dec
and
cmp
mov
inc
arpl
dec
sub
mov
adc
in
cld
out
call
cmc
es
repz
push
adc
push
mov
adc
lcall
jg
or
and
stos
dec
xchg
cmp
jl
aad
popf
mov
jne
lret
pmulhuw
xor
jge
jl
daa
mov
fcompl
mov
xchg
pop
idivl
xlat
sub
and
fldcw
insb
icebp
xor
int3
in
push
sbb
popa
jo
or
pop
loopne
pop
dec
push
aaa
sti
add
jne
mov
fbstp
sbb
sahf
xchg
jmp
inc
jae
enter
in
fcmovnb
dec
stc
cwtl
and
xor
inc
popf
fwait
mov
cmp
arpl
mov
outsb
hlt
mov
adc
fmul
cltd
jl
jbe
fistl
push
inc
outsl
outsl
sub
push
pusha
sub
inc
mov
push
xchg
mov
jmp
add
mov
inc
sub
dec
in
mov
xchg
and
rorb
add
sbb
shlb
clc
sub
dec
pushf
fucomi
aas
xor
ja
and
ss
gs
aas
outsb
and
out
dec
rcl
test
mov
lea
cld
sbb
clc
add
iret
leave
lcall
addr16
xor
mov
movsb
leave
jge
jle
lcall
mov
inc
xchg
inc
or
add
test
pushf
hlt
mov
ja
push
divb
and
and
dec
mov
sarl
lahf
pusha
mov
push
std
fimuls
jne
lods
daa
xor
jnp
mov
aam
scas
dec
add
fnstsw
jge
hlt
sub
fwait
or
xor
insb
out
outsb
insl
int
adc
sahf
shr
mov
mov
or
dec
clc
test
shlb
call
popa
jg
pop
sbb
stos
push
xchg
pusha
sub
js
cmpsb
mov
xchg
cmpsb
fadds
aam
bound
outsl
xchg
rolb
pop
lcall
ljmp
movsl
and
jmp
loopne
push
ljmp
es
xchg
shll
xor
outsb
rcrl
ja
push
inc
inc
data16
movb
rorb
inc
adcb
pop
fidivrl
movsb
jo
and
jo
stos
lods
sbb
cmpsb
std
rorb
insb
mov
sti
stos
pop
xor
mov
lcall
stos
mov
mov
dec
sbb
and
jg
pop
dec
xchg
pop
push
or
and
in
inc
jb
imulb
push
adc
push
cmpb
mov
fsubs
dec
enter
sub
loopne
push
jne
sbb
push
stos
and
inc
pusha
cli
jp
out
inc
inc
adc
lahf
stos
incl
adc
sbbl
cmc
xchg
divb
lock
adc
arpl
mov
inc
popa
mov
sbb
enter
into
and
mov
push
pop
sub
jbe
or
inc
adc
pop
pop
aam
mov
mov
xchg
int3
iret
inc
dec
filds
mov
mov
loopne
fidivs
add
pop
mov
adc
dec
dec
stos
inc
aaa
jnp
int
jnp
das
adc
fwait
daa
push
mov
pop
fs
and
pop
xor
cwtl
add
pop
or
push
and
xchg
insb
aam
sub
push
xchg
jb
dec
add
sbb
cld
ret
sbbb
cli
push
sbb
ret
sbb
mov
shll
std
mov
iret
stos
shll
cs
outsl
test
out
xor
cli
xchg
inc
add
out
je
xchg
xor
icebp
fistpll
sub
add
mov
push
xchg
cmpsb
mov
int
fstl
loope
xchg
ficoms
cmp
push
dec
es
test
gs
and
icebp
aam
mov
pop
divl
data16
xchg
lods
dec
xor
pop
push
xlat
mov
lods
and
cmc
sbb
test
adc
sub
arpl
and
mov
data16
testl
out
sbb
push
test
xor
cltd
jg
cmp
jne
pop
mov
repnz
sub
les
es
xchg
cmp
fs
out
push
and
aas
rcll
popl
inc
and
jae
xor
add
leave
test
cmpsl
pushl
aam
insb
jne
add
cld
scas
and
aaa
mov
int3
xchg
loope
js
mov
or
ss
lods
pusha
mov
orb
jo
xchg
inc
test
imul
jo,pt
lret
ret
jmp
shlb
sbb
mov
icebp
push
adc
stos
jge
xlat
shlb
fdivrl
std
sbb
or
ljmp
addl
mov
pop
push
xor
mov
js
add
cmp
jae
add
lods
xchg
sbb
orb
and
sub
imul
outsl
mov
lret
ret
jmp
imul
insb
mov
adc
sbb
mov
lcall
xor
and
jae
sbb
adc
push
jo
dec
cwtl
imul
cli
hlt
pop
mov
push
mov
mov
or
and
fsubl
addb
in
out
ret
notb
push
into
outsl
shrb
xor
or
or
stos
scas
lahf
pop
adc
ficomps
jecxz
cmp
mov
test
add
pop
stos
arpl
shll
movsl
insb
push
inc
lcall
ljmp
add
js
notl
adc
push
mov
sub
fsubr
pop
jb
push
add
or
les
pop
mov
mov
pop
inc
or
sbb
push
cmpb
pop
adc
jge
pusha
insl
pop
add
pop
sar
xchg
dec
add
push
jecxz
or
dec
jge
inc
sbb
mov
inc
jbe
insl
pushf
dec
dec
jne
shll
shll
repnz
adc
scas
cld
stc
ljmp
sbb
mov
cmp
in
lods
sbb
inc
sbb
out
shlb
cmpsb
ja
ds
ret
add
in
adcb
push
cmc
sti
jg
sub
mov
and
hlt
mov
filds
out
add
rep
mov
test
push
data16
jmp
push
popa
je
loope
hlt
push
dec
jmp
aam
cmpsb
cmp
cmp
adc
cmp
popf
pop
stc
stos
mov
pushf
inc
sbb
in
icebp
notl
test
or
or
in
scas
daa
out
out
in
add
arpl
hlt
cmp
lea
mov
add
rorl
cmpsb
dec
adc
push
leave
jo
pop
fs
fsubp
repz
mov
clc
pop
jge
test
fldt
insl
aad
out
repnz
rorl
jge
rorl
push
jno
aam
xchg
xchg
sbb
sub
mov
lret
cmpsb
add
mov
rcrl
dec
lahf
fsubrp
subb
sub
xor
mov
inc
xor
das
test
ljmp
cld
xor
mov
sub
and
popa
sbb
pop
aad
mov
cmp
jg
sub
mov
into
mov
enter
xor
repz
dec
lcall
fstl
mov
and
sbb
fstl
in
jg
test
pop
in
mov
imul
in
in
push
fstpt
push
std
js
test
xor
sbbb
insl
push
les
add
push
add
nop
dec
mov
xchg
lret
loopne
orb
ljmp
sbb
pop
movsl
xor
popa
add
fidivrs
xor
fnstcw
xchg
mov
pop
mov
dec
imul
fisttps
cmp
cld
lahf
cmp
aaa
movsl
sbb
and
cltd
xchg
push
mov
jmp
es
jno
push
fisubrs
jl
or
inc
xchg
shrb
scas
lret
inc
mov
jno
jae
pop
inc
outsb
daa
xchg
pop
sub
fistpl
dec
add
push
les
pusha
or
inc
adc
test
mov
loopne
jp
lret
movsl
ss
xchg
leave
pop
fistpll
rcrl
push
enter
ljmp
cmp
testb
mov
push
sub
cmp
dec
xchg
pushf
test
nop
shll
int3
outsb
lcall
mov
iret
bnd
imul
dec
jl
adc
and
mov
sti
ret
call
clc
shrl
insl
xchg
das
sub
cmp
and
xchg
mov
add
mov
lea
insb
fldl
jae
das
pop
bound
and
mov
xor
inc
inc
iret
cmc
js
push
test
shrl
sub
aad
jecxz
jns
xchg
jle
pop
fs
fucomp
mov
mov
pop
fs
inc
push
shl
mov
jo
mov
mov
mov
push
je
clc
stc
sub
push
arpl
addr16
xchg
in
mov
insb
mov
xor
repnz
sbbb
or
inc
notb
shll
insl
fstl
mov
push
push
inc
xor
lock
ret
add
fwait
mov
fldcw
fs
sub
adc
ljmp
cmc
jl
fnstsw
je
xor
jne
call
ljmp
add
jno
imul
dec
movsl
xchg
out
sub
adc
les
aam
pop
inc
pop
data16
or
dec
lods
ret
addl
add
inc
loopne
sbb
lahf
stc
sti
sub
mull
stc
mov
hlt
mov
daa
cmpsl
and
leave
xchg
cmp
loop
cmp
movsb
jecxz
inc
or
arpl
ds
loope
xchg
fnsave
or
sbb
nop
bnd
stc
jl
test
lahf
les
js
fcompl
jne
mov
dec
leave
cld
inc
jg
aas
lret
sbb
gs
les
ja
pushf
mov
ds
adc
in
jo
jns
cmpsb
hlt
or
ljmp
fwait
je
add
aad
adc
sub
push
and
test
sub
iret
lret
int
push
je
add
jle
sar
imul
push
imul
test
mov
pop
js
ret
lds
js
repz
xchg
outsb
pusha
cmp
rorl
jl
sbb
cmc
pop
ss
ficomps
cs
gs
and
stos
xor
sub
push
enter
pop
or
outsb
and
sbb
dec
out
or
mov
insl
lock
adc
shll
mov
das
scas
in
or
clc
out
cmp
int3
sbb
ss
sub
stos
dec
in
inc
cmp
fcom
dec
lods
push
lods
xor
pop
ficompl
lea
push
push
pusha
and
decl
mov
cli
push
cmpsl
mov
xor
leave
sub
sbb
sub
js
mov
xchg
or
adc
in
in
lea
stos
movl
mov
push
sarl
repnz
push
fistpll
mov
jno
cmp
sub
pusha
pop
sbb
popa
mov
pop
in
cs
xchg
addr16
loope
mov
push
clc
pop
sbb
js
pop
ss
xor
divl
pop
rorb
int
in
inc
or
mov
push
mov
pop
cli
xorl
addb
lock
subb
mov
mov
aad
insb
stos
rorl
or
fstpl
movsl
mov
lods
les
mov
xchg
and
js
testl
out
jnp
subl
cmp
adc
xlat
or
cld
xor
rcr
xchg
sub
in
in
jle
aam
daa
cmc
jp
xor
sbb
or
xorb
cmpsl
clc
mov
jg
push
mov
rclb
int
mov
mov
daa
roll
notb
or
dec
cmp
int
inc
dec
push
out
cmp
aaa
cmpsl
les
ret
push
das
cmp
orb
mov
xchg
and
inc
dec
pop
or
outsl
push
pushf
arpl
inc
xchg
addl
shll
js
push
pop
pop
xor
pop
sahf
xchg
jge
in
addl
dec
push
stos
hlt
pop
in
xor
mov
jg
pushw
pop
out
sbbl
cltd
data16
cmp
shl
stos
in
test
inc
cmpsb
dec
add
cmp
mov
xchg
sti
call
outsb
mov
imul
out
cmp
lret
inc
movsb
test
leave
iret
xchg
inc
sub
push
push
adc
shrl
xchg
test
je
mov
insl
add
mov
gs
mov
int3
roll
cli
xchg
ds
out
mov
fs
jge
add
call
cli
xchg
and
mov
arpl
rcr
sbb
mov
hlt
js
fwait
lds
xchg
gs
add
xchg
aam
loop
idiv
pop
les
daa
scas
cmpsl
fsub
mov
into
cli
pop
lahf
push
pmaddwd
adc
push
stos
adc
stc
cmp
nop
jb
dec
mov
xor
dec
insb
push
mov
sub
xor
pusha
xor
repnz
repnz
test
fsubrl
pop
sub
push
cld
loopne
dec
stos
adc
shll
jg
push
push
std
mov
clc
xchg
loope
inc
push
pop
mov
sbb
jbe
and
push
dec
xor
add
jnp
push
sarl
cmp
je
lcall
adc
push
cmp
xchg
inc
dec
mov
xchg
mov
lock
cmp
popa
push
in
out
push
mov
mov
xor
orl
dec
nop
pop
inc
repz
mov
test
or
and
or
jbe
ljmp
and
cltd
out
andl
ljmp
das
scas
mov
mov
into
ljmp
imul
fdivl
scas
hlt
add
push
mov
mov
adc
inc
cmpsb
cmpsl
xor
pop
adc
sub
pop
movd
or
cmp
mov
lret
negb
ds
push
mov
jp
dec
xchg
adc
pop
mov
in
pop
lahf
xchg
icebp
xor
sbb
lods
push
and
movsb
push
mov
unpckhps
cmpsb
hlt
adc
arpl
jl
push
popf
jecxz
mov
mov
push
fistpll
jmp
lods
hlt
hlt
sub
and
sub
and
jns
sbb
xor
jo
or
push
mov
xor
dec
arpl
fiaddl
jne
aas
out
dec
and
hlt
popf
aaa
push
push
jle
add
daa
xchg
out
pop
xor
xchg
and
sub
jle
jnp
xchg
sub
fldt
outsl
jle
xchg
mov
movl
jbe
fbld
stos
lock
push
repz
daa
movsb
out
push
inc
fwait
sarb
mov
lret
lret
push
cmpsl
lahf
and
repnz
add
mov
in
cli
int3
repz
xor
fcmovu
mov
mul
dec
adc
xor
cmp
lea
sub
push
jl
mov
xchg
int
push
push
mov
and
mov
or
adc
xchg
cmp
neg
or
sbb
sub
shr
and
mov
je
ffreep
test
fsubs
xor
xchg
mov
out
add
in
mov
in
out
dec
lret
daa
test
inc
and
xor
fwait
sbb
mov
gs
sbb
xor
out
repnz
aas
push
xlat
ljmp
cmpsb
or
jns
aaa
call
popf
popf
sbbl
or
cmp
into
xorb
orl
and
pop
cmp
cmp
insl
test
jnp
xchg
fucom
nop
lock
mov
adc
fldl
xor
sbb
popa
mov
in
push
test
mov
adc
jmp
daa
dec
aam
sbb
mov
xor
mov
lea
or
in
jle
xchg
mov
sbbl
and
aaa
push
sub
or
xchg
pop
add
cmpsb
lods
mov
std
aam
cs
fdivrl
pop
enter
jmp
pop
andl
roll
cmp
lea
mov
and
fsubl
insl
aam
daa
push
scas
mov
lods
loopne,pn
adc
ficomps
mov
bound
cwtl
jns
out
std
imul
add
in
push
shl
sub
lds
adc
xor
push
and
sbb
imul
mov
in
or
or
iret
enter
insb
mov
jge
inc
sbb
add
movsl
sub
ljmp
xor
jp
push
ljmp
repz
jg
push
js
push
rcrb
and
add
jecxz
dec
jae
or
scas
dec
aam
inc
and
sub
pop
mov
loope
jecxz
sbb
popa
cmp
pop
out
ja
lods
shrl
xchg
fsts
push
xlat
and
xchg
and
test
cwtl
lods
loopne
ja
push
int3
daa
dec
icebp
ja
xlat
das
lock
or
repnz
lock
or
inc
adc
and
xchg
and
in
add
sarl
lea
movsb
jecxz
cmpsl
jno
in
xor
mov
fwait
dec
xchg
andb
pop
pop
pop
xchg
jno
dec
sbb
xor
push
loope
dec
outsb
jg
sub
cld
push
test
add
fdivl
mov
add
mov
aas
in
mov
push
sub
notl
lret
insl
add
add
aad
mov
inc
mov
xor
out
push
adc
mov
dec
xchg
orl
xor
jle
and
bound
jno
jnp
or
push
or
into
sbb
test
push
fstpl
ljmp
cmp
cmp
adc
and
test
xor
dec
popa
and
pop
idiv
imul
out
cmpsb
or
xchg
rolb
push
into
insl
xchg
jmp
clc
inc
mov
imul
dec
adc
cmp
xchg
push
mov
insl
mov
sub
sub
cltd
jge
sub
lock
into
test
cmp
scas
in
mov
pop
add
and
adc
sub
xchg
pop
enter
clc
cmp
cmp
sbb
ficoms
cld
out
inc
dec
movsl
int3
aaa
inc
inc
ljmp
int3
jmp
lock
push
jnp
lcall
fsubs
inc
in
mov
bound
adc
adc
out
jbe
out
and
idivl
daa
into
push
repz
loopne
out
push
mov
or
adc
adc
mov
mov
loopne
cli
outsl
push
stos
outsl
sti
jp
pop
pop
mov
pop
dec
lods
cmpsl
sti
clc
enter
pop
aad
or
push
sbb
push
mov
ret
inc
lea
mov
lods
in
jle
popa
pop
test
inc
pop
lods
test
in
inc
pop
dec
xchg
nop
sub
scas
inc
dec
xchg
je
test
div
cwtl
sub
adc
adc
mov
push
xchg
cs
or
hlt
lahf
orl
lock
adc
mov
ficoml
mov
fidivrs
pop
sbb
xchg
cmp
imul
inc
pusha
je
mov
mov
in
out
pop
jae
pop
outsb
int
pop
test
push
popa
inc
or
xor
jmp
call
mov
xchg
fistps
rcrl
lret
into
sub
inc
enter
sub
dec
les
mov
iret
ja
cmpsb
cltd
mov
mov
mov
dec
in
push
roll
push
push
cli
mov
sbb
cmpb
and
je
cmpsl
xlat
loopne
aaa
inc
mov
and
daa
mov
test
push
sbb
pop
push
lahf
out
les
sbb
icebp
xchg
xchg
dec
in
outsb
mov
jp
int
jge
pushf
dec
repnz
fisttpll
sarb
sub
andb
cmp
dec
and
daa
sahf
imul
push
ffree
or
or
cltd
add
and
mov
sti
call
adc
jmp
clc
mov
dec
out
repnz
push
jo
xchg
mov
mov
add
stos
sbb
lods
ss
mov
mov
cmp
stos
pop
aad
xor
or
ret
cmp
jbe
or
push
and
sbb
hlt
and
mov
or
hlt
mov
imul
sbb
xor
aad
adc
jmp
jno
cmc
xchg
and
and
mov
push
sti
cmp
sub
icebp
mov
and
enter
sub
inc
inc
fsub
fcmovu
adc
fistpl
and
adcb
out
jecxz
lahf
push
mov
mov
addr16
sub
jg
sub
cmc
int3
or
sub
cmc
jecxz
ja
jae
jp
repz
test
add
aaa
dec
ret
sbb
nop
xchg
push
push
sub
cmpsl
mov
fidivrs
ret
scas
sub
lds
and
push
xchg
int3
xor
dec
add
loope
pop
mov
pop
xor
in
roll
aam
sub
stos
stos
push
repz
fstpl
lcall
inc
inc
adc
adc
shl
sbb
rcr
loopne
test
jno
inc
lods
clc
jns
dec
jp
adc
mov
dec
jns
mov
push
sahf
cmp
cmp
movl
xchg
sub
and
jle
mov
dec
push
mov
mov
inc
aam
shrl
insb
cmp
xchg
divb
jae
fmul
mov
sub
js
add
mov
push
adc
mulb
aam
sub
sub
push
imul
and
push
pop
sbb
sub
add
cmp
pop
xchg
jnp
mov
inc
ret
inc
add
dec
sahf
shrb
jmp
jecxz
jmp
sbb
dec
call
and
mov
fprem1
lds
lret
mov
jmp
inc
clc
adc
cmp
js
or
xor
xchg
sahf
inc
pop
xchg
mov
cmp
mov
insb
vpsubb
in
push
lret
loopne
cli
adc
inc
sub
cmp
cmp
loope
and
outsl
popa
xchg
pop
sub
stc
fstpl
xor
lcall
dec
sub
movsb
loope
mov
sbb
push
adc
or
and
jb
icebp
sahf
aam
pop
push
call
test
lret
push
mov
aad
out
frstor
pop
js
pop
pusha
add
lock
dec
xchg
mov
loope
push
and
inc
gs
sub
mov
mov
and
mov
andl
cwtl
insl
in
mov
test
xchg
rol
repz
adc
ret
ljmp
adc
mov
lret
test
xchg
push
lods
stos
xor
jnp
or
insb
cmp
jge
into
mov
cs
rorb
rorl
aas
jg
out
sbb
sub
mov
or
and
adc
inc
push
mov
mov
and
push
cld
movsl
test
push
mov
mov
icebp
dec
hlt
dec
lcall
adc
scas
and
xchg
mov
adc
mov
pop
fmul
mov
mov
cmp
loope
push
cmc
int
bound
push
and
movsl
loop
jg
lcall
cli
jl
jecxz
mov
adc
cmp
out
pushf
jp
dec
jnp
enter
xchg
inc
test
push
sar
aaa
pop
push
or
lahf
push
inc
bound
inc
hlt
xchg
push
xor
xchg
jg
fnsave
fistps
push
pop
bound
inc
aas
jnp
pusha
push
cwtl
mov
ss
rorl
jg
stos
imull
fdivrs
jo
in
fdivrp
fidivrl
test
aaa
xchg
jg
mov
xchg
je
xchg
test
and
mov
negb
aad
pusha
div
enter
lock
inc
faddl
push
pop
dec
dec
dec
or
sub
dec
adc
lret
push
xchg
insb
loopne
lods
icebp
jle
push
or
hlt
pop
cmp
mov
lock
mov
lea
mov
mov
adc
xlat
sbb
jecxz
mov
clc
addl
mov
fwait
loopne
inc
stc
jle
jnp
scas
roll
out
gs
ds
or
push
arpl
mov
push
int3
test
adc
lcall
push
sbb
mov
es
ret
xor
adc
adc
jmp
add
xchg
sub
sbb
repz
inc
sbb
pusha
pushf
inc
mov
push
sbb
mov
fbld
leave
pop
cmp
ret
pop
mov
add
jnp
xchg
jle
cli
nop
int3
cmpsb
mov
adc
cwtl
movsb
jb
aad
es
add
sub
jo
mov
jb
dec
inc
mov
int3
mov
sbb
sub
cwtl
arpl
sbb
fildll
xchg
mov
mov
xor
ret
pop
imul
loop
jg
scas
cmp
mov
dec
mov
lcall
aas
test
shr
push
xchg
or
ljmp
adc
and
xor
data16
sahf
cld
pop
leave
mov
shll
dec
test
cmc
mov
xchg
xor
push
cs
push
adc
int3
mov
xchg
aad
vxorpd
push
or
cmp
fimuls
test
mov
mov
imul
lods
add
sub
aas
inc
pop
push
sub
lret
pusha
add
mov
lods
std
sbb
sti
lea
out
jp
xor
jp
in
cmpsb
lods
adc
test
repnz
mov
jae
insb
or
push
dec
mov
ljmp
xor
lcall
add
pop
jge
fsubrs
hlt
pop
cmp
sub
mov
xor
sub
sub
lds
pop
sub
mov
push
xorb
jecxz
push
mov
xor
cltd
mov
gs
cmp
or
sub
leave
hlt
mov
scas
jge
mov
mov
je
or
jo
xchg
call
cmp
ret
and
das
push
imul
xchg
mov
push
xchg
and
cmpsb
or
lods
fidivl
xor
test
and
push
cmp
int3
in
rcr
inc
adc
xor
int
out
xchg
fs
dec
jle,pn
or
inc
mov
jmp
mov
mov
sub
dec
lea
sahf
loopne
outsl
mov
jmp
in
jo,pn
cmpsb
sti
xor
and
ljmp
test
bound
fiaddl
xchg
jo
daa
das
loop
dec
fcomps
rclb
imul
mov
ja
idivl
pop
fsub
jmp
repz
inc
cli
fsubrp
sbbl
mov
mov
jg
adc
xchg
inc
pop
stc
std
push
gs
popf
cmc
scas
sub
sbb
cmp
jne
test
push
xlat
push
outsl
dec
ss
mov
or
into
outsb
push
jecxz
call
fisubl
lods
in
shrb
push
mov
and
iret
in
add
cmp
sbb
sub
adc
inc
adc
ficoms
pop
jle
rclb
in
scas
nop
sub
xchg
mov
add
cmp
push
push
or
mov
and
adc
xor
test
sub
and
add
stc
push
sub
mov
out
push
mull
sbb
jno
sub
and
inc
mov
mov
insl
jne
sub
xchg
outsl
fimuls
shlb
xchg
xor
dec
outsb
sub
xor
ret
jae
mov
icebp
das
imul
and
add
pop
out
addr16
ret
jnp
push
insl
aad
xlat
pop
mov
mov
insb
jb
jne
or
out
mov
hlt
repz
mov
dec
inc
pusha
xlat
lret
push
test
pop
test
mov
add
xchg
rorb
sub
xchg
pop
mov
rclb
aad
fidivrl
shlb
in
mov
pop
jns
outsb
iret
daa
lahf
lret
loop
daa
xorl
lods
mov
xchg
sahf
add
fld
pop
and
out
in
dec
adc
in
aad
testl
loope
jl
das
fsubs
gs
loop
ds
xor
imul
xchg
stc
call
sub
dec
xor
jg
xchg
lock
mov
lods
sub
bound
adc
cld
das
scas
imul
sti
out
cltd
in
das
lea
test
imul
mov
rclb
cmp
cmp
xchg
out
movsb
es
ret
xor
cs
and
lret
mov
cmpsl
pop
jg
or
inc
cmpsb
and
clc
adc
mov
insl
and
or
sub
cmp
je
pop
xor
dec
ds
mov
jno
add
rep
loop
jb
iret
movb
stos
shll
fmull
test
stos
dec
fldl
pop
jecxz
jnp
mov
push
inc
pop
fidivs
mov
dec
movsb
and
jno
add
les
out
repnz
pop
sbb
ret
mov
or
xchg
pop
ret
imul
fptan
enter
sub
and
mov
mov
sbb
xchg
jge
arpl
jb
jle
test
pop
sbb
adc
in
addr16
mov
push
pop
sub
jno
fwait
lods
iret
outsl
out
lea
and
and
push
cli
lods
or
shll
sub
mov
mov
andl
mov
jg
cmpsb
ss
mov
push
aam
push
dec
fwait
loopne
pushf
ds
popf
jmp
mov
dec
jne
mov
enter
cld
out
pop
aad
xlat
loope
ds
or
push
sti
rclb
pop
repz
addr16
mov
out
and
jae
mov
cltd
jb
repnz
imul
in
ret
movsl
jl
xchg
sbb
mov
jecxz
dec
fs
cmc
sub
inc
or
and
scas
sub
cmc
mov
gs
pop
mov
aam
sarl
test
out
fldz
push
lcall
xchg
xor
add
cmp
dec
test
cs
xchg
push
or
pop
sbb
popf
movsb
scas
or
or
scas
push
mov
clc
mov
mov
lcall
inc
js
std
repz
xchg
xchg
add
outsl
andb
fwait
addb
jg
sbb
repnz
add
mov
jo
lds
xor
and
nop
sbb
push
into
sbb
jmp
xor
std
fwait
loope
pop
sbb
loopne
rcrl
xchg
jmp
jno
pop
dec
cmp
lock
inc
lcall
xchg
inc
and
daa
mov
jp
sub
cmp
insb
inc
inc
movsb
xor
or
test
mov
push
push
fwait
mov
out
dec
xor
cmp
mov
pusha
jp
je
cmp
pop
in
clc
jl
sahf
and
ja
xor
dec
clc
test
inc
sarb
mov
lret
ret
out
mov
xchg
cmp
or
loopne
push
push
lods
popa
xchg
sbb
sbb
leave
sbb
loop
push
xchg
mov
call
mov
xor
popa
int
xchg
xchg
loop
push
roll
sub
in
scas
mov
inc
sarl
addr16
fidivl
nop
out
xchg
dec
push
js
xchg
je
inc
and
std
jl
inc
and
jo
lahf
dec
stc
call
and
pushf
xlat
cmpsb
push
in
pop
cmpsb
dec
imul
pop
push
adc
ljmp
out
jns
ret
sub
xlat
loopne
icebp
pop
mov
mov
fsub
sbb
xchg
cmpsl
add
cli
mov
loope
out
mov
sahf
xchg
mov
jp
sub
lds
xchg
inc
sti
push
inc
jb
pop
popf
jg
mov
mov
cmp
mov
or
mov
and
mov
in
in
push
cmpsb
out
xchg
jo
cltd
mov
jne
lock
fistps
push
jbe
hlt
iret
popa
adcb
sbb
popf
xor
pop
jnp
das
dec
dec
mov
xchg
movsb
sub
sbb
movsb
dec
leave
jle
push
mov
loopne
popf
fists
jp
push
xchg
adc
enter
dec
stc
jmp
xor
fcmovb
shrb
xchg
aad
pushf
call
or
test
add
jo
into
cltd
cwtl
mov
adc
rol
mov
pushf
and
push
in
cmpsb
ds
dec
int3
push
gs
mov
xor
jp
andb
clc
lods
int3
mov
rcr
jmp
or
xlat
mov
sbb
mov
ss
movsl
clc
add
and
add
in
pop
dec
jb
mov
push
add
jecxz
aas
ds
sti
mov
outsl
mov
jle
sub
inc
and
mov
insb
dec
mov
imul
adc
xchg
mov
or
jne
sarb
std
arpl
ds
aaa
add
insl
sbb
and
add
sub
pop
popa
xchg
icebp
and
gs
cmp
push
sub
dec
in
pusha
sub
pop
jae
mov
xchg
sbb
lea
bound
add
fldcw
inc
iret
rcrb
xor
lods
ficoms
icebp
pop
ror
inc
inc
jle
int
scas
repz
xchg
pop
mov
inc
cmc
shrl
and
je
pop
out
jns
dec
js
jl
xchg
lret
rolb
fimull
or
rep
xchg
and
fbstp
dec
push
sub
dec
fstps
push
out
imulb
xchg
push
dec
inc
sti
ret
lret
test
jl
icebp
add
leave
out
test
stc
xchg
mov
sti
cld
fadds
adcl
inc
cli
add
lock
pop
pusha
add
insl
push
mov
ss
sbb
mov
sbb
outsl
jmp
or
mov
pop
push
or
sti
inc
inc
pop
movsl
jp
jae
jmp
rorl
mov
mov
addb
pop
and
push
cmpsb
inc
ds
int
add
mov
test
jmp
push
jnp
dec
sbb
pop
push
inc
adc
scas
dec
in
repnz
xchg
mov
mov
enter
sti
push
pop
xchg
mov
mov
lea
inc
leave
jnp
xchg
xor
jecxz
and
and
in
mov
cmp
mov
lods
test
adc
adc
add
shll
int3
out
mov
xchg
cmp
add
inc
mov
out
and
test
inc
cmp
lcall
xchg
fstps
mov
leave
xor
mov
out
mov
outsb
movsb
scas
jecxz
lods
mov
xor
lcall
aam
mov
or
std
sti
push
shrl
sbb
loopne
js,pt
aas
pop
and
mov
add
pop
xor
mov
shr
dec
mov
outsb
mov
xchg
decl
mov
xchg
or
jecxz
pop
divl
popa
insl
dec
push
aad
dec
mov
xor
jo
call
jl
mov
dec
das
xor
pop
sbb
out
std
add
stc
adc
and
out
cwtl
sbb
jmp
call
pusha
push
push
bndstx
push
mov
mov
mov
jns
cmp
adc
xchg
je
jae
jbe
sarl
out
pop
mov
dec
jg
in
shrb
je
icebp
lcall
dec
or
test
rol
mov
inc
pushf
xchg
jbe
imul
dec
imul
jnp
lock
outsl
sub
mov
fwait
aam
aad
js
jmp
push
inc
push
xor
aas
inc
inc
push
jp
sub
mov
adc
in
cmp
adc
jbe
cltd
imul
cmpl
into
xor
cmpsl
mov
xlat
or
jmp
ret
jno
jo
hlt
sbb
pop
call
cli
lock
pop
mov
movsb
ret
mov
jle
cltd
add
add
xchg
cmpsl
sti
sahf
fwait
push
ja
dec
adc
sub
pop
sbb
mov
pop
push
cmc
pushl
and
sbb
lret
cmp
and
lea
sbb
repz
push
mov
int3
mul
ljmp
cmp
repnz
mov
jmp
lret
sbb
jmp
push
inc
out
mov
push
clc
and
pop
xor
lcall
sub
daa
out
mov
add
cmp
fildl
call
sbb
push
movsl
pusha
or
leave
lcall
pushf
ljmp
xlat
outsl
into
pushf
jno
fnstcw
inc
push
repnz
mov
and
bound
or
sahf
adc
imul
lods
out
xchg
cmp
mov
cmp
shrb
fisubs
and
mov
sub
and
fsts
frstor
mov
push
cmpsb
and
or
popf
test
xchg
and
testb
into
test
daa
loopne
pop
scas
sub
cmp
pop
jp
jmp
cltd
inc
fdivrs
mov
xchg
outsl
mov
clc
jo
sarl
minps
sbb
icebp
mov
mov
sub
pop
and
rcll
xlat
push
mov
xchg
sbb
cmp
ja
lret
leave
fldenv
cwtl
push
and
in
xor
jnp
lret
repz
aaa
jb
jle
lods
popl
mov
sub
or
pop
sti
cwtl
rcll
test
rcrb
cmpsb
lahf
or
out
pushf
int
outsl
ss
mov
sub
push
mov
sub
push
cld
out
inc
cmp
pop
sbb
sbb
std
jb
pop
pop
out
std
mov
dec
push
xor
lret
xchg
or
ljmp
mull
adc
ljmp
cmp
xlat
mov
mov
aam
loop
cmp
add
xchg
ret
push
sbb
aas
and
mov
pop
dec
and
push
push
test
sub
gs
mov
jg
cmp
mov
shll
pop
jae
lods
ljmp
mov
pop
adc
shll
sbb
scas
inc
mov
xchg
mov
mov
inc
je
je
inc
lcall
outsl
pop
push
pop
cmp
cmc
mov
mov
mov
inc
and
dec
cmp
pusha
adc
sbb
adc
ja
adc
mov
and
dec
dec
push
mov
pop
sbb
bound
mov
jns
mov
sbb
push
hlt
subb
lahf
popf
aaa
dec
dec
ffreep
in
push
daa
mov
out
push
hlt
and
add
mov
int3
fldenv
nop
or
arpl
ret
sahf
dec
leave
pop
adc
stos
or
mov
cmp
and
or
loope
and
arpl
mov
outsb
sbb
xchg
rolb
pop
outsl
enter
push
xlat
xchg
and
cmp
push
gs
inc
repz
sbb
push
lcall
ror
rep
adc
jle
pusha
js
fisubs
fldt
stos
shll
adc
push
pop
out
call
dec
and
add
stc
test
xor
pop
lret
cmp
testb
dec
sbb
jae
cmp
stc
push
sub
cli
push
or
adc
iret
movsb
mov
cwtl
sub
pop
aad
test
shl
pop
es
push
sbbb
pop
aad
xor
mov
popl
xor
divb
mov
lock
xchg
mov
stos
lret
je
push
and
mov
stos
fdivrl
rcrb
pop
cmp
je
aam
jnp
in
fldcw
xchg
jbe
fbld
jp
mov
leave
test
aad
adc
bnd
jbe
aad
and
in
in
jnp
jl
mov
das
xchg
push
les
pop
inc
cmpsb
addr16
aad
xchg
mov
mov
push
ret
addr16
adc
sbbb
jne
addr16
adc
xchg
das
jnp
sub
insl
add
add
jns
lcall
inc
or
pusha
test
inc
mov
aad
sbb
aad
inc
mov
enter
rorb
mov
push
je
push
inc
ss
outsb
inc
lret
imul
mov
inc
hlt
scas
cmp
and
xchg
loopne
out
js
cmpsl
orl
in
push
xchg
sbbl
push
cs
fidivrs
jo
mov
cmp
push
jg
inc
xchg
ljmp
inc
adc
je
stc
pushl
adc
rcrb
das
subb
cltd
fs
inc
add
gs
scas
pop
push
inc
add
cmp
mov
gs
dec
lock
dec
popa
dec
pop
push
xchg
mov
sbb
in
push
pop
lcall
mov
enter
jge
mov
sub
jae
xchg
arpl
movsl
push
cltd
test
xchg
sub
mov
mov
in
mov
sub
popf
xor
call
hlt
repnz
daa
jo
popf
mov
out
pop
lea
ljmp
cmpsl
xchg
idivl
shlb
cmp
xchg
repz
sub
xchg
loopne
jae
xchg
mov
jno
loop
xchg
mov
jo
mov
inc
aas
xchg
aas
xchg
and
xchg
mov
push
dec
stos
jp
rclb
inc
out
pop
mov
stos
push
test
das
rcll
mov
stc
orl
fisubrs
clc
fmull
or
and
dec
aad
mov
mov
mov
xchg
xor
sti
hlt
mov
cld
test
add
mov
int3
mov
popa
or
pop
call
add
pop
fmull
lods
fstl
inc
push
adc
je
inc
int3
movb
addr16
mov
adc
arpl
dec
cs
push
fwait
das
inc
hlt
xor
jmp
and
ret
cld
cmpsb
pop
adc
mov
aad
dec
or
mov
and
arpl
mov
xchg
adc
push
mov
mov
int3
mov
lcall
jo
ljmp
es
mov
insb
xchg
mov
inc
push
push
fs
inc
sbb
mov
or
cmpsl
leave
ds
pop
popa
imul
mov
es
iret
ficoml
or
rclb
pop
sub
sub
inc
mov
mov
push
add
push
mov
fldl
sbb
push
faddl
mov
fmul
cmp
lods
dec
jg
pop
push
inc
movsl
pop
test
cmp
dec
es
inc
imul
xchg
lret
orb
into
das
push
xor
out
mov
adc
push
sub
test
test
fistps
dec
outsb
xchg
hlt
add
and
rclb
cltd
push
ljmp
rcll
xor
mov
mov
shrl
sub
push
movsb
hlt
outsl
pop
out
push
bound
std
pop
loopew
mov
lock
stc
inc
fisttpll
stos
xor
adc
out
push
mov
js
mov
mov
mov
lods
lahf
fstl
stos
pop
lcall
sub
outsl
in
clc
fimuls
ss
pop
push
popf
pop
icebp
mov
xchg
xchg
xor
mov
cmp
mov
call
cli
imul
mov
ljmp
mov
mov
inc
add
mov
push
mov
int
scas
jmp
mov
add
cli
cmp
imul
insl
fcomps
mov
test
push
imul
cmovs
fdivr
adc
adcb
incb
enter
and
test
lods
mov
mov
repz
mov
arpl
fcoml
lds
push
insb
sub
sbb
fsts
xor
and
xchg
cmc
sub
insb
out
inc
dec
fnstsw
fidivs
push
cli
mov
insl
jmp
inc
filds
push
jge
xchg
stc
mov
hlt
jo
fmull
leave
mov
mov
leave
or
in
pop
hlt
or
bound
inc
dec
jg
scas
pop
or
lret
mov
jb
push
pop
lcall
xchg
insl
out
and
je
sbb
push
pop
nop
xchg
xchg
and
fdivl
inc
add
ficoml
mov
add
iret
pop
movsb
jno
sbb
shlb
pop
rorb
iret
and
cld
jbe
addb
mov
mov
dec
pop
lcall
sahf
lods
in
stc
pop
mov
push
scas
int3
mov
bnd
inc
mov
add
cmovne
xor
lock
and
je
ja
pushf
pop
je
data16
push
xor
into
mov
push
nop
insl
sub
rolb
aad
cmpsb
subb
jle
fbld
cwtl
inc
mov
icebp
out
lahf
shr
or
add
shrl
into
lret
dec
xor
xchg
mov
jno
mov
inc
xor
mov
fwait
leave
hlt
aad
or
cli
mov
xor
jle
add
jecxz
lahf
push
or
jb
iret
scas
add
inc
out
out
repz
sub
scas
dec
test
adc
movsb
cwtl
fcom
hlt
call
cli
adc
movsb
sarb
or
insb
cli
jmp
adc
fmul
sbb
jle
in
fwait
ret
xchg
add
pop
push
push
mov
js
movsb
scas
sarl
sub
sub
xor
imul
daa
shl
dec
cmpsb
fs
adcl
mov
loopne
sbb
push
jge
cltd
test
shlb
push
or
out
test
cld
ljmp
dec
stos
cmp
fdiv
clc
pop
aad
loope
icebp
or
imul
inc
test
das
aas
icebp
aaa
or
fwait
ss
mov
mov
fucom
inc
popf
xor
sbb
insb
cmp
pop
cmpsl
adc
mov
das
jnp
and
dec
repnz
lcall
adc
pop
les
aaa
pop
mov
das
cwtl
dec
test
pusha
and
test
scas
cmp
dec
leave
addr16
mov
jmp
sbbb
jmp
shl
sarb
lcall
lcall
roll
sbb
adc
jle
xor
test
or
push
push
mov
push
fstl
xchg
popa
and
ror
push
data16
out
jae
push
call
out
or
outsl
icebp
cmpsl
pop
add
cmpsl
imul
pop
dec
inc
out
sbb
nop
add
pop
cld
jae
and
dec
inc
jl
je
addr16
jl
scas
ds
jmp
fs
lock
fcoml
jb
nop
or
adc
inc
ss
aaa
mov
push
xchg
aas
jb
dec
roll
push
or
fiaddl
or
jp
int
pop
mov
lcall
loop
std
test
test
mov
ffree
inc
outsl
mov
pop
jle
xchg
inc
mov
out
push
jbe
pop
imul
and
cmp
jp
xor
push
jb
mov
cmp
inc
lcall
push
add
mov
repz
loopne
shlb
push
and
jb
dec
cmc
push
mov
sub
xlat
bound
or
xchg
outsb
add
fs
fabs
sbb
sbb
lds
cs
cmp
jbe
dec
fidivrs
imul
sub
pop
lahf
pop
inc
mov
mov
rorl
inc
rorl
lods
call
ret
sub
dec
cltd
repz
test
inc
loopne
es
or
jnp
lock
sbb
push
push
cmc
iret
jl
sahf
adc
test
pop
test
sbbb
test
mov
fimuls
shlb
push
imul
inc
adc
jecxz
pop
push
mov
andb
lock
cmp
mov
sub
push
enter
jg
pop
sarb
iret
push
cmp
adcb
pop
pop
mov
loope
mov
adc
daa
dec
inc
stos
mov
jnp
popf
xchg
push
mov
pop
bswap
out
loope
mov
mov
mov
mov
xor
xchg
xchg
or
out
push
lds
fsubs
shll
out
std
cwtl
mov
cmp
dec
mov
lds
mov
mov
sti
cmpsl
cmp
xchg
popf
pop
mov
test
ret
sbb
jl
sub
adc
enter
xor
out
cwtl
pop
push
into
in
pushf
mov
push
loop
or
data16
dec
aad
mov
pushf
lret
pop
pop
pop
push
push
mov
mov
jns
and
mov
arpl
fsubs
negb
adc
fcmovnbe
roll
pop
inc
or
pop
xchg
mov
adc
or
xchg
push
test
aaa
out
sbb
xchg
insl
mov
jmp
sbb
lods
testb
inc
mov
popa
add
stos
adc
push
cmp
testl
xor
in
mov
mov
roll
mov
jb
cld
data16
int
sti
test
nop
inc
push
cmpsl
in
push
leave
inc
jno
bound
outsl
push
stos
add
jmpw
mov
jmp
inc
hlt
and
lret
sub
mov
cmp
sbb
in
mov
xchg
movsb
inc
mov
je
push
and
mov
push
adc
mov
or
mov
xchg
pushf
cs
test
scas
in
incl
cmp
fimull
lar
fstpt
or
adc
mov
jge
imul
fldenv
data16
fstl
enter
decl
cld
aad
and
pop
mov
add
aad
faddp
pop
dec
fwait
adc
mov
jle
fildl
aad
xor
stos
test
andb
pop
aam
mov
pop
inc
scas
les
scas
jg
or
push
sub
sahf
xchg
mov
mov
divl
cmp
iret
mov
dec
stc
cmp
mov
cmpsb
ret
or
mov
mov
std
inc
dec
pop
movl
xchg
mov
hlt
sub
fisttps
xlat
addl
addr16
scas
add
adcb
imul
push
cmp
aas
aam
popa
mov
xchg
sub
xor
cmp
into
repz
mov
sarl
leave
sub
pop
addl
jno
dec
inc
test
mov
sub
js
sub
xchg
aas
add
test
add
push
cltd
mov
js
sahf
cmpsl
movntq
inc
pop
xor
pop
jl
cmc
mov
inc
jge
arpl
sub
imul
int
imul
pop
call
cld
cmpl
vmovaps
sahf
fwait
pusha
mov
mov
adc
ss
mov
popa
add
add
fldpi
clc
xchg
sub
nop
mov
mov
jb
adc
cli
cwtl
inc
js
fwait
mov
aaa
mov
aaa
std
xor
push
mov
test
scas
dec
add
push
cmp
lret
test
or
mov
sbb
test
mov
sub
adcb
mov
mov
adc
push
dec
xchg
mov
adc
enter
ds
cmp
cmp
shll
nop
test
lods
push
xchg
ja
mov
cs
mov
xlat
fisubrl
xchg
mov
xlat
es
xchg
pop
loop
mov
sub
lret
das
js
aad
or
dec
out
jns
mul
mov
js
scas
sbb
lods
adc
push
sub
mov
push
mov
in
shlb
aaa
rcrb
test
jle
int
loop
mov
fsubr
sub
fnstsw
and
shl
xchg
inc
xchg
fidivrs
mov
scas
push
mov
sub
inc
mov
icebp
or
or
add
dec
mov
ljmp
cs
aad
test
xor
adc
data16
adc
pop
cmp
xchg
sub
ljmp
dec
notb
in
mov
pop
and
cli
lods
hlt
mov
mov
mov
cmpl
push
roll
jbe
mov
ljmp
.byte
