inc
cmp
inc
ds
out
iret
repz
adc
cmp
push
sbb
and
sbbb
stos
pop
sarb
jae
je
in
adc
in
add
mov
in
xchg
dec
lret
adc
in
jge
jnp
in
pop
sahf
cmc
lret
and
les
inc
add
pop
jb
stos
cmp
dec
add
mov
push
in
cmpsb
sbb
xor
pop
sbb
fisubrl
jo
les
pop
xor
nop
data16
insb
cmp
xchg
and
ds
add
call
stc
and
mov
dec
nop
dec
cwtl
mov
xchg
xor
repnz
jg
arpl
loopne
dec
out
fnstenv
cmpsb
cmp
inc
push
or
adc
ss
movsl
push
pop
ss
out
inc
loop
scas
ljmp
inc
add
stc
push
rolb
inc
sbb
sbb
mov
sub
adc
xchg
push
cld
cs
loopne
push
pop
insl
jbe
stc
cmp
mov
in
fiadds
mov
lods
pop
and
dec
mov
add
rcrb
and
push
cmpsb
cli
out
lret
outsb
jmp
pusha
call
movb
movl
jmp
pusha
lea
jne
pusha
stos
pusha
push
lea
jmp
jmp
call
mov
push
pushf
movl
pushl
ret
out
dec
push
arpl
jnp
ret
lods
add
repnz
jge
jns
mov
add
add
sahf
xor
stos
popf
jp
lock
inc
loope
rcrb
or
xchg
scas
xor
xchg
outsl
sub
add
mov
out
pushf
lea
jmp
pop
pop
mov
xchg
movsb
jae
fwait
cmp
push
incb
mov
js
add
lods
andb
sub
push
mov
ja
mov
loopne
jle
in
addr16
lahf
ljmp
inc
sub
loopne
movsl
int
add
enter
fldl2t
rol
sbb
bound
ss
pop
popf
inc
test
sbb
inc
mov
jb
mov
imul
xchg
das
jae
xor
mov
fsubl
inc
sbb
movsbl
lahf
lea
pushf
call
bt
cmpb
pusha
pusha
movb
lea
jne
movsbw
sub
bsf
push
mov
mov
pushf
not
add
bt
mov
cmc
test
pushf
lea
jmp
push
sub
jle
stc
cmp
xor
clc
cmc
bt
bt
or
push
jmp
jmp
push
push
lea
jae
movsbw
not
mov
pusha
mov
pusha
pushf
lea
jmp
pushl
lea
jae
call
sbb
push
add
rorl
mov
out
mov
lcall
lods
test
iret
mov
mov
jecxz
lods
out
and
and
imul
data16
xorl
in
pop
sbb
ffree
lock
test
out
mov
sti
bswap
mov
push
inc
push
fsubr
aas
add
mov
fwait
scas
adc
add
mov
and
xor
push
fcomps
into
sub
sub
mov
idivl
mov
mov
mov
pop
dec
insl
jbe
lods
sub
les
out
cmp
clc
movsb
test
inc
loope
push
cli
jmp
dec
mov
in
pop
jne
add
mov
add
add
add
add
add
sbb
add
add
add
add
add
sbb
add
jmp
jmp
push
movb
mov
mov
pusha
jmp
std
outsl
lret
add
pop
push
pop
jl
xlat
in
sbb
cmp
lds
cmp
fistl
shrl
cmp
sub
sub
sahf
cltd
push
xor
inc
cmp
ret
jmp
lahf
cmp
xchg
dec
fiaddl
cmp
add
xlat
int3
sbb
jb
cs
pop
outsl
inc
into
data16
imul
adc
adc
in
sti
clc
push
push
jge
ret
push
adc
push
mov
outsl
xor
mov
sbb
mov
add
sti
push
gs
fsubs
add
jmp
pushl
popl
pushf
mov
pushl
ret
sub
add
bsr
dec
mov
dec
clc
shl
shl
mov
stc
stc
pushf
repnz
pushf
pushf
lea
jne
push
pop
movb
lea
cwtl
pusha
mov
not
call
jmp
pushf
lea
call
pusha
push
pusha
push
adc
push
pushf
movl
lea
jae
pushf
pushf
lea
jne
pusha
call
jmp
not
mov
mov
pushf
push
lea
call
call
jmp
pop
pushf
pushf
jmp
stc
cmp
jmp
pushf
add
cmc
jmp
pusha
push
adc
mov
movw
movb
push
pushl
ret
pushl
popl
mov
pushl
pushl
ret
loopne
mov
arpl
aad
call
mull
cltd
roll
ss
gs
lea
xchg
cli
push
out
cmp
mov
nop
addr16
cmp
stc
fstl
fcomi
es
adc
inc
or
or
push
or
mov
cmpsb
sub
push
mov
cmpsb
or
arpl
or
es
das
and
mov
mov
stc
jns
pop
aam
sarb
add
sarb
inc
pop
test
cld
icebp
loop
jo
insl
adc
add
mov
das
test
jecxz
push
iret
mov
cld
aam
ljmp
jbe
outsl
push
push
sub
mov
insl
cmpsb
call
data16
dec
add
add
sub
xchg
cli
pushf
sbb
mov
pop
xchg
xchg
subl
aam
data16
ret
sub
out
lcall
xor
adc
pop
xchg
and
add
and
pop
jp
mulb
or
call
lea
ja
pusha
movb
lea
jb
cmc
test
pushf
cmpb
mov
call
jmp
inc
add
ret
cld
ficoml
mov
dec
lahf
movb
test
dec
in
jno
xor
nop
test
dec
inc
push
sbb
lret
fadds
lea
pop
mov
movb
lea
jae
pushf
lea
jmp
jmp
movzwl
or
not
not
btr
mov
sub
jb
push
cmc
bt
add
mov
mov
pusha
cmc
call
mov
lea
mov
and
mov
jmp
rol
mov
movb
neg
pusha
pushf
test
add
jno
cmp
lahf
cwtl
not
lea
setp
movsbw
not
pop
pushf
jmp
xchg
jmp
call
push
pusha
movl
pushf
pushf
pushf
pushf
movl
movb
pushf
push
pushf
lea
jmp
movw
xchg
cwtl
movl
movsbl
pushf
cwtl
jmp
jmp
jmp
pusha
pusha
movl
movb
mov
pushf
movw
lea
jmp
stc
imul
clc
cmp
add
pusha
push
mov
pusha
lea
jmp
mov
lea
jl
pusha
pushf
pushf
lea
ja
pusha
lea
jb
bt
pushf
cmpb
jmp
stos
repnz
push
xchg
mov
in
fcmove
mov
inc
test
aaa
out
jno
mov
mov
cmpsb
and
cli
sbbl
test
out
in
into
pusha
jno
inc
outsb
stos
out
lea
dec
pop
dec
and
sar
xchg
mov
decl
in
shll
rcr
cmp
leave
cltd
imull
dec
push
mov
dec
pop
lret
ja
mov
xorl
stos
pop
jp
inc
cmpsl
pop
cmpsl
inc
adc
fld
dec
or
jmp
pusha
movl
jmp
jmp
mov
rol
loopne
add
mov
sub
icebp
cmp
push
and
or
repnz
dec
call
jns
mov
sub
ds
or
aaa
mov
in
and
mov
pushf
adc
dec
cmp
sbb
push
mov
test
fnstsw
mov
and
mov
mov
mov
ss
jo
xor
and
in
sub
int
xlat
pop
mov
cs
mov
dec
mov
sti
ss
dec
inc
add
test
push
adc
push
jae
add
out
sub
dec
pop
xor
scas
mov
dec
dec
and
mov
rorb
lea
jne
inc
shl
mov
bt
add
pusha
bt
clc
pusha
movzwl
add
mov
mov
jmp
push
mov
jmp
mov
call
push
push
lea
jne
or
mov
bsf
and
sub
xor
clc
shld
push
lea
test
cmc
sub
call
mov
push
mov
lea
jmp
push
call
jmp
enter
mov
aas
push
mov
cmp
push
and
mov
push
lods
sahf
xor
jns
clc
mov
add
dec
aas
mov
in
cmc
pushl
leave
jecxz
sub
or
cli
loopne
lds
fcoms
icebp
xor
in
fs
int
pop
xchg
mov
loope
or
cmp
adc
and
roll
xlat
jae
sub
in
dec
mov
addb
outsl
inc
fmuls
test
adc
lea
icebp
jle
inc
test
add
test
idivl
pushf
pop
pop
nop
les
mov
add
inc
adc
and
xor
aas
push
push
cli
ret
mov
jmp
arpl
rcrl
pushf
pop
mov
lods
out
mov
or
pop
jmp
jge
xor
xchg
cmp
sahf
mov
ret
pop
mov
add
push
mov
sbb
loope
dec
jnp
sbb
cmpsl
in
pop
add
inc
adc
mov
dec
adc
mov
xor
pop
lds
bound
stos
and
iret
out
jp
sbb
arpl
sbb
outsl
daa
xor
xor
loopne
movsb
pop
inc
bound
nop
lea
xchg
jne
push
leave
or
push
shl
xor
inc
jmp
movsb
dec
aas
shrb
divl
ljmp
cmc
lock
adc
inc
add
cmp
or
push
and
mov
pusha
add
xadd
mov
btr
shld
btc
inc
add
pushl
shl
inc
movl
bts
shr
shld
bsf
mov
add
clc
jmp
stc
shl
mov
test
clc
test
test
and
call
add
shrd
sete
mov
dec
stc
or
pushf
mov
test
clc
repnz
mov
mov
mov
lea
jne
cwtl
push
call
cmp
cmp
cmp
push
call
push
lea
jne
btr
clc
rol
or
xor
or
mov
sar
add
not
shl
cmp
mov
stc
jmp
nop
ljmp
mov
push
adc
pusha
daa
jns
cmp
inc
push
ror
icebp
xchg
imul
pop
mov
je
sub
arpl
in
xchg
std
xchg
data16
movsl
testb
rcll
mov
mov
pop
dec
dec
jecxz
in
out
adc
fcoms
icebp
out
push
mov
popf
ret
dec
adc
loope
sbb
js
push
in
xchg
loopne
loope
jbe
push
pop
or
int
cmp
jne
jmp
pushf
stc
cmpb
jmp
fs
cs
push
push
lods
sbb
jb
jb
into
lahf
add
mov
ss
orb
ret
mov
loopne
cld
mov
cmpsl
push
dec
sbb
mov
dec
mov
xor
pusha
dec
dec
ja
les
stc
lock
and
lock
xchg
ret
sub
add
int
pop
jmp
lods
xorb
xor
int3
movsb
adc
push
cld
les
ret
add
and
or
push
cmp
cmc
xor
and
jb
push
or
out
lds
fsubrl
push
popa
jno
into
jp
enter
pushf
mov
lea
je
pushf
stc
cmp
bt
cmp
pusha
pusha
lea
je
stc
stc
cmp
pusha
cmp
pusha
call
mov
pusha
jmp
clc
cmp
jne
jae
cmp
bt
stc
add
pushf
call
pushf
not
test
stc
cmc
mov
test
stc
clc
cmp
add
pushf
jmp
mov
push
push
mov
pushl
ret
movb
lea
je
pushf
push
pushf
lea
jmp
add
push
pushf
pusha
pushl
lea
jmp
dec
pop
push
mull
out
sbb
movsl
mov
ds
in
iret
mov
js
out
icebp
addr16
ds
mov
pop
loope
test
pop
in
or
lahf
lods
lea
mov
arpl
lahf
mov
loopne
xor
push
iret
sub
mov
stos
mov
scas
push
stos
imull
mov
lahf
notl
add
jmp
mov
and
push
lea
jmp
pushf
pusha
jmp
cmp
jae
sub
cmp
stos
dec
sbb
xor
push
cmpsl
stos
fs
sbb
add
inc
out
jg
xor
lock
mov
out
mov
dec
push
adc
scas
sbb
stc
jmp
pusha
lea
ja
shr
stc
and
bt
sub
add
stc
jmp
movl
push
push
push
lea
jmp
sbb
cwtl
mov
pusha
rcr
mov
lea
cmc
push
call
call
xor
shrd
mov
rcr
setb
call
clc
add
sbb
shl
mov
call
pushf
pushf
lea
jae
cmp
xor
jmp
lea
jne
sub
shrd
mov
or
lea
sub
shl
movzbw
dec
cmp
mov
clc
clc
jmp
in
pop
push
mulb
rol
ljmp
daa
stos
adc
lret
in
push
cmc
xchg
mov
pop
dec
loope
out
add
mov
inc
xchg
shll
cwtl
sub
jp
adc
jmp
iret
loope
adc
mov
cwtl
mov
mov
in
out
push
aam
cmp
scas
andl
xchg
mov
mov
ja
movsb
mov
sbb
shll
scas
call
lea
pop
adc
pop
cmp
lahf
xor
daa
lret
negl
into
xchg
dec
dec
mov
rcll
mov
or
cmp
int3
loope
add
or
loope
jg
loop
xchg
mov
mov
cmp
repz
mov
pop
adc
adc
xor
movsl
aad
movsl
jbe
sub
pop
jp
adc
lcall
pop
dec
loope
mov
sbb
das
cmpsl
dec
out
or
adcl
aas
or
adc
jbe
or
mov
imul
sbb
pop
jne
mov
pop
jno
inc
sub
in
stos
inc
bound
pop
pop
mov
push
adc
xor
mov
or
mov
fstl
inc
and
add
inc
add
test
add
pushl
push
pushf
call
movb
lea
je
call
scas
lods
mov
cltd
mov
popa
jbe
scas
loopne
imul
std
pop
movsl
idivl
movsb
inc
pushf
icebp
mov
or
pop
lea
loope
cmovle
andl
es
shrb
jnp
push
inc
es
dec
stos
mov
inc
and
orb
pushf
lea
jmp
call
in
or
and
popf
fwait
or
lds
gs
sbb
movsl
add
out
xchg
call
mov
dec
mov
sarl
lahf
stos
js
xchg
xchg
push
das
sahf
jnp
mov
mov
shrb
lahf
das
subb
insl
push
pop
or
loope
movl
out
pop
cmp
ret
cmp
int3
subb
xor
in
sahf
dec
xchg
mov
cmp
imul
jbe
lahf
adc
and
and
add
mov
dec
neg
bts
lea
test
mov
cmc
bt
cmc
add
jmp
mov
call
push
pusha
push
lea
ja
jmp
jmp
rorl
outsb
inc
pop
sbb
pop
and
data16
mov
mov
cmpsb
ds
xchg
cmpsl
jl,pt
mov
xor
mov
add
xor
stos
insl
sub
das
lods
inc
and
pop
lock
sub
shll
es
movsl
jo
sub
rcl
stc
mov
mov
ret
scas
mov
or
adc
jl
xchg
sub
xor
enter
xchg
movsl
push
cmp
imul
jmp
shld
mov
bt
cmc
cmpb
call
jmp
bt
test
push
lea
jmp
jle
inc
repnz
add
xor
inc
sbb
pop
test
jp
push
fdivrs
push
mov
pop
adcl
sbbl
mov
lock
inc
mov
sbb
dec
scas
jne
jno
cmp
push
ljmp
inc
sub
push
orl
push
push
arpl
testl
and
call
pushf
pushf
call
movzbl
push
mov
push
pusha
pushl
ret
clc
test
add
jmp
test
cmp
pushf
pushf
jmp
pushf
lea
ja
pushf
call
shl
movl
btr
adc
add
mov
pushf
pusha
clc
cmp
lea
jl
jbe
btr
sub
shrd
cmp
cmp
mov
or
push
mov
shl
shr
bts
jmp
jmp
lea
ja
jmp
call
pusha
mov
pushf
pusha
pushf
push
mov
mov
jmp
dec
jmp
jmp
std
push
mov
mov
pop
cs
ja
sbb
pusha
mov
pop
xchg
add
xchg
push
dec
pop
fwait
jg
mov
xor
in
icebp
cmp
mov
sti
mov
and
loop
loopne
mov
fmull
and
xor
push
push
je
pop
js
test
adc
pop
jns
jp
adc
xor
lret
das
jne
in
mov
dec
adc
and
xor
test
and
xchg
cmp
movsb
mov
push
arpl
scas
ss
jmp
pushf
call
inc
cmc
stc
clc
call
adc
pushf
call
push
call
imul
loope
clc
sbb
inc
out
mov
mov
push
cmc
dec
pushf
pop
sbbb
xchg
outsb
cmp
repz
js
and
cmp
stc
jns,pt
xchg
andl
inc
out
rcr
pand
jecxz
mov
adc
subb
aad
popa
fidivl
cmp
inc
popl
lcall
sbb
cltd
cmp
aaa
xor
xchg
subb
jecxz
jp
or
mov
cmpsl
and
jno
sub
shl
mov
gs
dec
jb
movsb
insl
dec
adc
jbe
ficompl
push
pusha
stos
lds
xchg
xlat
aam
and
test
das
sbb
push
lods
mov
mov
dec
jg
mov
pop
rcll
sub
xor
cs
sbb
jge
jg
mov
hlt
jmp
cli
test
hlt
stos
test
outsb
inc
mov
dec
loopne
call
xchg
ljmp
push
mov
add
lcall
mov
enter
stos
shlb
or
add
pop
in
int3
ret
push
aam
xchg
std
mov
mov
sub
inc
sub
sahf
inc
daa
popa
std
adc
into
and
lcall
add
jnp
xor
push
xchg
push
and
push
aad
dec
and
mov
push
sahf
out
clc
sub
mov
and
ja
sbb
ds
xchg
xchg
push
pushl
mov
int3
daa
fisttpll
mov
test
mov
hlt
imul
int3
dec
inc
push
or
adc
rcll
cmp
add
push
sbb
mov
sbb
or
dec
mov
fstpl
lock
loop
xor
loop
rolb
mov
xor
xchg
xorl
sub
scas
enter
aam
call
hlt
nop
fisttpll
push
rcrl
mov
cmp
call
push
mov
lea
pusha
pushf
pushf
call
pushf
call
mov
push
push
lea
jmp
adc
pushf
lea
jmp
and
rcll
sbb
adc
sbb
push
repz
rorl
out
inc
aad
pop
out
mov
sub
ss
ja
push
scas
xlat
adc
inc
sub
mov
add
loopne
pusha
sub
mov
mull
lea
jns
adc
push
pushf
lea
jae
call
lea
call
call
mov
pushf
pop
lea
call
test
push
lea
je
test
jmp
lea
je
btc
add
shr
mov
cmc
jmp
inc
xor
movl
call
xor
push
in
mov
fdivs
scas
sub
dec
ljmp
dec
or
mov
pop
adc
xchg
sbb
mov
and
mov
loope
push
lret
dec
mov
jb
xor
rclb
jne
and
stos
jae
lahf
stos
adc
or
imul
add
mov
pushf
pushf
movl
jmp
clc
pusha
cmp
add
push
jmp
lea
jae
jmp
pusha
pushf
call
rol
stc
clc
test
neg
pushf
cmp
movzbw
pushf
pop
lea
jmp
ja
je
mov
add
rcl
xor
mov
clc
pusha
jmp
xchg
pushl
cwtl
mov
bswap
movzbw
lea
lea
mov
pushf
jmp
jmp
call
cmpxchg
mov
cltd
xlat
mov
mov
push
mov
roll
cmp
mov
add
push
add
pop
xchg
add
imul
jb
and
xchg
mov
or
push
dec
call
bound
adc
dec
mov
mov
inc
mov
pushl
pushf
pushf
lea
jmp
fs
cs
sbb
inc
lods
adc
bound
lds
dec
push
push
insl
ss
mov
or
xor
mov
in
dec
sbb
mov
in
mov
pop
xchg
dec
jno
mov
xchg
and
and
xchg
adc
loop
mov
dec
mov
lret
inc
cmpsl
mov
inc
jp
mov
ret
leave
add
mov
lock
dec
call
ret
or
not
push
mov
cmc
add
jbe,pn
inc
jle
push
or
cmpsl
lds
fsubl
push
popa
jno
into
mov
jmp
add
je
outsl
fs
gs
imul
add
jmp
ror
std
lcall
test
cli
dec
xchg
divb
scas
inc
or
jae
mov
aaa
cmp
out
dec
icebp
cmpsb
cmp
outsb
sti
jnp
add
and
sbb
out
xchg
pushf
ja
dec
aam
jae
or
mov
xchg
clc
imul
outsb
pusha
les
rolb
icebp
mov
pop
fcmovne
aad
test
rolb
popa
xchg
movsl
hlt
iret
jns
add
push
push
mov
pop
xchg
push
push
into
xor
ss
cld
pop
iret
jb
adc
pop
mov
jno
outsl
jbe
movsl
lcall
call
push
dec
out
jmp
xchg
sahf
leave
push
xor
pop
inc
xor
adc
aam
mov
lret
pop
ret
cmp
mov
lahf
pop
push
lahf
jl
vmovapd
jle
out
arpl
jecxz
popa
lds
mov
add
cmpsb
cli
stc
imulb
daa
sar
add
xchg
bt
pusha
shl
mov
movsbw
jmp
mov
stc
call
pushf
jmp
shr
adc
or
bswap
mov
call
popf
cpuid
nop
push
jmp
or
pusha
lea
je
seto
seto
das
not
xor
shld
aam
mov
rol
bsr
cmc
mov
cmp
shr
inc
movzbw
movsbw
mov
jmp
movl
push
lea
jmp
push
not
lea
push
jmp
lea
jb
push
pushl
ret
mov
movb
jmp
mov
bt
stc
add
lea
pusha
movb
add
pushl
pushf
jmp
movl
pushl
push
lea
jmp
jmp
lea
jbe
sar
mov
dec
and
call
call
jmp
lea
jae
call
ror
ror
rol
lea
jb
inc
ror
seta
rol
not
stos
jmp
jmp
and
mov
xor
lret
jl
rcll
dec
cli
adc
jl
test
lods
das
xchg
loope
out
mov
lods
pop
xchg
or
subl
rcl
fistl
hlt
es
mov
out
hlt
jo
aaa
sub
sub
cmpsl
fadd
jae
das
fwait
pop
and
jmp
pop
xchg
xor
iret
mov
push
ret
popl
lds
cmp
mov
pop
test
mov
filds
cmpsl
fs
mov
and
xchg
les
mov
jmp
mov
pushf
shl
jmp
mov
rorl
loope
add
aas
stc
into
loope
xchg
xchg
add
int3
enter
bound
fidivrl
mov
ror
inc
or
lds
pop
pop
cwtl
data16
ljmp
mov
gs
in
imul
cli
mov
test
lea
pushf
mov
lea
je
pusha
sub
call
inc
bt
rol
push
inc
bt
sets
bt
pushf
rol
setnp
mov
pusha
stos
call
pusha
movl
jmp
cmc
cmc
call
lea
je
pusha
movw
lea
jmp
jae
jl
mov
sar
adcb
movsl
bound
jmp
pop
or
es
data16
insl
fistpll
add
addr16
hlt
cli
cli
ds
mov
subb
push
ja
mov
mov
jo
jge
jbe
inc
adc
push
xor
mov
inc
and
push
lcall
dec
mov
mov
pop
jno
pop
in
add
inc
insl
xchg
fs
pop
test
inc
push
push
test
xchg
add
push
lea
jb
call
push
outsl
jb
jns
and
jae
popa
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
fs
popa
and
jb
jne
insb
and
arpl
outsb
gs
sbbl
cmp
outsb
pop
dec
push
push
fidivrs
mov
mov
mov
adc
cli
repz
shlb
xchg
test
pop
xor
lret
mov
mov
jno
daa
loop
daa
aam
jecxz
push
xchg
jmp
gs
mov
setnp
pop
sub
dec
es
sub
scas
sub
mov
dec
pop
popf
fistl
inc
xor
fdivl
loop
pop
loop
stc
cli
sbb
inc
or
test
imul
rorb
cmp
rcrl
mov
push
cmc
test
bt
cmp
push
mov
pushf
mov
lea
jbe
xor
btr
test
sub
bsr
mov
shrd
lea
mov
cmc
neg
pusha
add
sar
test
shr
rol
neg
test
mov
btr
add
pushf
mov
pushl
call
push
movw
movw
lea
jae
pushf
pushf
lea
jmp
pushf
lea
jne
lahf
movb
lea
jmp
mov
rorl
enter
js
cltd
mov
push
andb
mov
andl
jl
cmpsb
cltd
loopne
jp
cmp
insb
lods
fs
lret
mov
mov
shr
mov
sti
sbb
xchg
jo
mov
inc
insl
leave
jecxz
push
lret
jmp
leave
jl
pop
pop
xor
xlat
cld
out
aam
in
push
ja
jns
clc
inc
push
add
fmull
repnz
fmulp
adc
lret
mov
int
xor
mov
lock
pushf
xchg
inc
out
adc
and
inc
mov
hlt
cwtl
dec
roll
sub
stos
mov
shll
pusha
lea
jbe
sar
rcr
neg
mov
xor
or
add
sub
bsf
mov
inc
add
call
mov
xchg
in
shrl
rcrl
lahf
cmp
adc
dec
and
sbb
addb
adc
sbb
out
add
shrl
mov
sub
cmp
push
aad
out
lret
jne
jmp
mov
les
jmp
xchg
ret
or
mov
xchg
pop
adc
in
stc
mov
push
fwait
arpl
add
or
call
or
jmp
sub
lahf
jecxz
sarl
cmpsl
sub
stc
cld
jo
sbb
xchg
jmp
jns
dec
push
pop
and
loope
adc
vcvttsd2si
test
cmp
jo
pop
insl
or
pop
sbb
adc
stos
pop
xor
stos
es
push
pop
inc
test
addb
pop
mov
jg
inc
mov
adc
mov
add
mov
inc
or
lods
lock
push
pop
int3
das
imul
mov
mov
add
mov
adc
jb
sahf
popa
ret
fisttpll
int
or
mov
mov
sbb
mov
adc
sub
mov
sbb
scas
lea
aad
loope
ficompl
jp
xchg
pop
mov
out
dec
cs
mov
add
jmp
shld
bsf
sub
bsf
pushf
bt
neg
mov
lea
lea
sbb
btc
mov
dec
add
bsr
shr
bts
and
ror
mov
shld
shr
ror
bts
add
lea
not
movzbw
mov
call
movl
call
call
mov
sub
cmp
fs
add
std
repz
aad
cmp
ret
or
dec
adc
sub
push
aad
push
aad
xor
cmovb
das
dec
cwtl
inc
xchg
stos
pop
lret
pop
cmp
mov
xchg
lock
lcall
inc
and
pushf
lods
call
lea
jne
pusha
jmp
pushl
popl
jmp
popf
rdtsc
nop
call
add
mov
and
mov
adc
loopne
dec
daa
or
push
push
out
int3
sbbb
loop
and
cmp
ja
repnz
xchg
xor
adc
cmp
xchg
std
into
std
jo
xchg
fwait
scas
push
fdivs
shlb
xor
negl
xor
lock
loopne
mov
mov
and
sbb
pop
cld
pop
or
mov
cmp
add
lea
inc
test
cmp
dec
push
jns
mov
inc
addr16
int3
lods
push
jmp
mov
daa
loopne
shl
sub
mov
xchg
sub
add
push
cmc
insb
ror
stos
xchg
loop
cld
into
int
movsw
mov
dec
cmp
leave
into
std
xchg
xchg
mov
sbb
cltd
lret
jbe
das
fildll
sbb
icebp
js
adc
dec
xchg
cmp
inc
mov
cwtl
stos
std
call
iret
mov
and
arpl
mov
stc
rcrl
lds
sti
in
adc
icebp
aam
and
popf
inc
or
jecxz
gs
push
xchg
lea
call
call
stos
pusha
pushl
push
lea
jmp
inc
movl
rol
cmc
jmp
call
call
pusha
clc
cmp
call
lea
call
pusha
push
lea
jae
clc
pushf
bt
pushl
xor
jmp
data16
fbld
js
mov
add
push
cmp
mov
ja
xor
in
xchg
movsl
cmp
xorl
or
mov
sub
cld
jae
and
call
int
sub
cmc
into
mov
push
cli
lret
movsb
in
cli
adc
movsl
push
inc
or
jbe
dec
cs
aas
mov
fs
insb
dec
fs
ret
cmpb
push
or
ja
loopne
sar
pop
out
mov
cmp
dec
sbb
jmp
mov
sarl
in
xchg
fisubrl
call
jp
inc
rcl
xchg
inc
xchg
cmp
fs
ja
jl
sub
sub
fidivs
pop
adc
or
sahf
out
xchg
inc
or
mov
push
dec
dec
push
pop
xor
iret
ret
jmp
testl
adc
add
pushf
push
pushl
ret
dec
mov
fisubs
mov
add
rorb
inc
push
jnp
ss
pop
cli
loope
pop
aam
aad
fadds
ret
xor
add
push
dec
and
xchg
aam
popa
int
in
sbb
insb
push
hlt
jae
cmpsb
lods
mov
mov
outsl
cmp
xchg
cmp
mov
out
sub
pop
mov
jne
outsb
push
aaa
push
mov
pushf
inc
lea
jns
push
mov
pusha
push
movb
pushl
lea
call
jmp
movw
push
lea
ja
call
test
pusha
cmp
pushf
movw
pusha
pushf
lea
jae
call
mov
pop
not
movl
mov
bswap
movzbl
lea
movb
jmp
stc
test
test
push
lea
jmp
push
call
shl
test
jmp
lea
jne
movzbl
mov
pushf
call
bsf
push
test
mov
btr
sub
xor
bt
push
inc
aaa
push
mov
aaa
bswap
bts
push
aad
sar
btc
rcl
push
xor
aas
mov
stc
bt
test
pusha
push
push
lea
je
or
or
movsbw
mov
mov
sbb
add
pusha
mov
pusha
lea
jae
test
jmp
add
rcr
roll
nop
cmpsl
mov
aas
mov
add
aam
pop
push
mov
fwait
pop
and
cmpsb
ret
adc
or
and
scas
sbb
xchg
mov
mov
inc
mov
popa
in
cmp
sbb
lea
jne
add
shrd
bswap
mov
bt
jmp
nop
ret
aaa
fsubl
iret
sub
xor
jmp
jmp
xchg
cmp
pop
cmp
test
mov
cmc
fnsetpm(287
and
mov
addr16
lret
xchg
jb
sub
imul
clc
xchg
fidivrs
jmp
xchg
ja
dec
push
xchg
xlat
scas
imul
jg
cmpsb
stos
int
add
add
and
fcompl
jno
dec
xchg
sbb
sbbl
xchg
test
das
xor
xor
stc
lcall
add
icebp
jns
or
pusha
xor
or
pop
bsr
add
jmp
xchg
mov
mov
push
fs
add
mov
arpl
gs
outsb
movsl
xor
push
out
cmp
cmp
in
push
dec
jns
stc
je
and
mov
push
push
cmc
inc
insb
dec
cmpsb
xchg
mov
adc
fildll
ucomiss
adc
push
mov
push
add
mov
push
adc
pop
aam
int
lcall
movsl
es
dec
pusha
sbb
and
jg
pop
mov
add
xchg
xor
ljmp
mov
inc
and
in
mov
xchg
inc
bound
movsb
xchg
mov
and
jae
or
inc
xor
dec
pusha
pop
mov
out
ret
and
adc
imulb
and
in
mov
fdivr
sub
sub
test
cmp
sbb
test
push
xchg
pop
jns
jno
out
hlt
cmp
es
daa
shr
inc
mov
cltd
xchg
scas
mov
push
cmp
shrb
clc
push
xor
adc
shlb
xor
cld
popa
fwait
pushf
mov
pop
jmp
mov
adc
rcrb
mov
aas
cmp
pusha
xor
stos
js
add
mov
push
aam
mov
or
into
mov
pop
std
std
mov
imul
lret
pusha
jo
fmulp
mov
xor
pop
clc
ss
out
int3
in
jge
mov
and
jae
push
pop
les
in
sub
test
cmpsb
lods
xchg
xor
jle
add
adc
xchg
push
push
lods
xchg
in
xchg
shrb
call
enter
fimuls
xchg
pushl
pusha
jmp
or
mov
rol
adc
dec
rcl
mov
shr
mov
pusha
bt
stc
clc
xor
push
push
repnz
jmp
add
mov
mov
clc
stc
cmp
call
pushf
mov
bts
dec
mov
bt
test
cmpb
push
jmp
movl
pushf
mov
lea
js
pushf
mov
pusha
push
push
pushf
pushl
ret
pushf
lea
jae
pushf
jmp
push
jmp
push
push
lea
jne
cmp
lea
shr
sub
bsr
pusha
xor
mov
lea
or
call
pushl
lea
jae
and
call
cmp
pushf
jmp
cmp
pusha
call
push
jmp
pusha
call
cmp
jmp
xchg
pop
repz
test
pop
and
cmpsl
je
in
add
jno
pop
mov
sub
out
xlat
imul
data16
popf
sbbl
testb
loope
mov
sbb
xchg
xor
jmp
cmp
sub
fidivs
xor
hlt
movsb
lea
or
push
ja
aad
adc
ja
xchg
push
test
out
test
xor
outsl
pop
inc
mov
lods
xchg
mov
cmp
mov
or
xchg
jg
fidivs
stc
sub
call
movl
jmp
test
call
lea
jb
pusha
mov
lea
ja
push
pusha
pushl
movw
lea
jb
stc
clc
clc
stc
cmpb
pushf
pushf
push
lea
jne
cmp
dec
mov
stc
add
pushf
movzwl
stc
mov
push
add
stc
clc
bt
mov
pushl
clc
test
call
movzwl
pop
pusha
stc
mov
clc
cmp
test
add
cmp
pushf
call
lods
sbb
inc
xchg
sahf
mov
cmpb
and
push
fstpl
cwtl
mov
jp
dec
jge
ss
add
adc
dec
pop
pop
iret
push
sub
and
rcl
xor
cmp
mul
xor
ljmp
in
dec
inc
mov
aad
ret
loope
stos
les
pop
popf
inc
rorl
sub
sarl
xor
mov
cltd
cmp
sub
mov
inc
jmp
pushl
dec
call
pusha
lea
jae
pusha
pusha
pushf
jmp
push
inc
xlat
loop
pop
xor
jl
inc
outsb
xor
rcrb
inc
out
xor
sub
mov
idivl
dec
sub
lret
aaa
cmp
push
leave
pop
add
ja
mov
lods
fstpt
cwtl
cld
ljmp
mov
mov
clc
hlt
in
mov
in
das
add
enter
test
fdivrs
jns
jg
je
es
cmpsl
test
pusha
or
pushf
push
call
mov
jmp
push
pushf
lea
je
jmp
push
call
bt
mov
movw
jmp
lea
jb
pushf
test
test
push
cmp
lea
jbe
push
pushf
lea
ja
ror
not
sub
add
rcr
sbb
mov
cmp
clc
cmc
clc
cmp
push
lea
jb
bt
cmp
jmp
lea
jne
call
shl
stc
shl
mov
cmp
cmc
call
jnp
pusha
mov
lea
ja
clc
add
stc
jle
pusha
or
call
push
test
call
daa
bsf
shr
sub
pushf
jmp
in
push
aad
shll
or
jmp
inc
xchg
sbb
pop
cltd
sbb
repz
pop
fstps
iret
lods
andb
pop
lock
pusha
inc
mov
push
outsb
pop
mov
push
cmp
cltd
or
adc
negb
sub
mov
filds
jns
ja
divl
gs
adc
lret
add
ss
jp
add
xchg
out
push
or
ljmp
call
pusha
or
aam
roll
pop
add
pop
push
and
or
imul
xchg
adc
and
sbb
loope
fwait
mov
test
push
jmp
clc
push
stc
shlb
add
pop
sahf
in
and
das
jne
push
push
lods
xor
mov
push
data16
sbb
and
adc
xchg
jbe
sbb
ret
adc
sub
jge
adc
mov
push
jl
jp
enter
arpl
and
ja
pusha
add
cmc
stc
jmp
inc
pushf
clc
rol
movb
pushw
popfw
push
mov
jmp
stc
test
bt
movzwl
sar
movsbw
clc
mov
call
pushf
mov
lea
ja
rol
or
shl
inc
sub
neg
bt
shl
add
neg
shr
mov
test
rcl
mov
call
mov
jae
sub
mov
lret
and
in
add
jg
add
cmp
mov
or
das
adc
mov
iret
je
sub
into
outsb
push
dec
mov
iret
repnz
jecxz
mov
or
cli
mov
jmp
rorb
movb
movl
pushf
jmp
not
clc
push
cmp
add
cmc
call
mov
lea
call
call
pushf
pushl
movl
pushf
jmp
cs
sbb
enter
pop
shl
jmp
ljmp
jb
inc
mov
inc
insb
jecxz
stos
mov
jge
inc
xlat
stc
xchg
sbb
dec
xchg
repz
repnz
mov
sub
cmpsb
and
mov
dec
les
xor
fnsave
rol
stos
imul
jg
adc
shll
fcmovbe
shll
and
inc
in
lds
adc
fnsave
add
pop
inc
iret
pop
dec
icebp
pop
roll
in
imulb
cli
int
pop
inc
fadds
sub
adc
cmpl
les
push
stos
out
mov
push
add
call
out
popf
push
pop
cmpsl
shlb
nop
push
mov
divb
mov
push
repnz
bound
daa
scas
mov
jp
xchg
out
fildl
lcall
jg
enter
sahf
lcall
je
adc
pop
and
lea
je
call
movb
lea
jg
push
lea
jne
pusha
lea
jg
pusha
mov
lea
jo
push
jmp
test
movsl
shlb
mov
xchg
dec
mov
gs
jmp
call
out
xor
enter
outsb
jge
push
cmp
inc
iret
addl
movsl
cmp
pop
mov
hlt
loop
das
add
lock
pop
orl
or
sti
test
pop
adc
push
and
fwait
mov
inc
mov
sahf
fisttpl
xchg
xchg
dec
shrb
or
cmp
shl
das
iret
jl
int3
and
decl
cmp
lcall
add
jl
sub
int3
sti
cld
stos
inc
xor
add
roll
jb
adc
cmp
mov
jp
repz
cmp
fiadds
dec
jbe
fiadds
and
sbb
mov
movsl
cli
xchg
or
or
setle
lods
test
stc
not
test
add
mov
cmc
movb
rol
stc
cmp
neg
jmp
mov
inc
shll
fisubs
mov
and
bswap
sbbl
fidivrl
sbb
dec
mov
adc
fidivrs
sbb
loopne
lods
xor
xchg
out
xor
pop
jmp
inc
out
sbb
jae
lret
xor
and
movb
mov
movb
movb
pushl
ret
push
mov
call
inc
mov
adc
pushf
pushl
ret
pushf
pusha
cmp
movl
pusha
movw
push
lea
jae
setno
push
pop
mov
pusha
lea
jmp
push
movl
pusha
movb
pushf
pushf
lea
jmp
cli
sbbb
fnstenv
incl
test
xchg
mov
les
rcrb
call
jae
inc
lcall
aas
fidivl
jmp
sbb
push
cmp
lods
adc
or
fistps
push
ja
jp,pn
subl
xor
jle
and
es
push
pop
jmp
mov
into
jp
adc
leave
mov
fdivrl
lcall
clc
ja
mov
push
sbb
addr16
std
negb
ja
pushl
movsl
in
inc
movb
in
or
push
inc
stos
fdivrl
cmc
fdiv
shl
sbb
adc
sbb
pop
movsb
inc
int
jl
stos
cmp
stos
int3
xor
repz
mov
pop
faddl
adc
push
mov
push
jnp
pop
les
xor
push
mov
pusha
dec
xor
ret
pop
sbb
push
dec
je
sbb
sub
fildl
mov
or
inc
lea
ljmp
roll
push
sub
add
cmp
and
add
push
movb
mov
sub
test
mov
bt
pushf
jmp
test
ror
shld
mov
cmp
pushf
cmpb
pushf
jmp
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
out
add
lea
ja
call
call
mov
seta
lods
test
mov
not
call
cmpsl
cmpsb
push
into
mov
fcoms
adc
sbb
ja
icebp
sub
test
daa
ja
subl
mov
jmp
cli
mov
cmpsb
mov
rcr
aad
inc
adc
ja
stos
int3
xor
sti
or
jle
aas
or
mov
lret
xchg
aas
or
dec
js
push
lea
jne
das
rcl
jmp
lea
call
call
lea
je
pushf
adc
add
sbb
add
bts
sar
sub
adc
rol
bswap
shr
shl
btc
btr
movsbw
mov
btr
adc
inc
ror
add
or
push
add
bswap
mov
clc
clc
mov
clc
shr
pusha
cmc
stc
stc
cmp
jmp
push
jmp
call
clc
jmp
movw
movb
lea
jae
setb
inc
dec
mov
mov
mov
push
inc
pushf
mov
lea
jmp
clc
pushl
rol
pushf
call
adc
jp
pusha
push
push
lea
call
pusha
jmp
mov
lea
je
call
xor
lret
cmp
mov
movsl
inc
sbb
pop
lds
and
cmp
push
xor
dec
mov
sbb
data16
add
mov
lea
and
ds
ret
sarb
dec
nop
test
push
rorb
xor
js
dec
add
add
push
scas
pop
mov
test
dec
aaa
insb
ljmp
jge
es
daa
add
jmp
lock
xor
sub
sbb
dec
jbe
daa
ds
das
xchg
xchg
lea
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sarl
das
leave
sahf
pusha
mov
pop
fcmovb
sahf
fdivr
dec
scas
out
fldl
in
jae
cmp
dec
mov
rolb
pop
cmp
push
cmp
cltd
jecxz
pop
inc
mov
pop
cmp
jo
dec
push
in
ror
push
sub
inc
in
adc
lea
inc
rcl
dec
push
aas
leave
pop
scas
pop
add
xchg
pop
push
pushf
xchg
inc
jne
inc
or
and
aas
loop
sub
insb
xorl
daa
cltd
inc
and
add
test
sub
daa
dec
fidivrl
jae
icebp
xor
mov
push
jge
xchg
cmc
adc
mov
loopne
daa
outsl
mov
outsb
cld
fs
adc
jp
movsb
out
les
pop
jb
inc
bound
mov
push
sti
in
add
cmp
sub
lcall
outsl
movsb
fsubp
cwtl
cld
mov
inc
dec
ja
jno
or
inc
inc
pop
shll
jo
and
pop
ret
lock
cmp
push
adc
mov
push
jo
mov
adc
jp
mov
xor
movsl
xchg
pop
fsubl
jns
pop
inc
orl
iret
xor
sub
xchg
mov
and
jb
cmp
enter
xor
jne
aam
into
pop
inc
jmp
push
inc
fistpl
loopne
fsub
mov
or
inc
lea
add
out
loopne
push
pusha
pushf
lea
ja
call
lea
jno
pusha
lea
jb
cmc
clc
jmp
lea
jnp
push
adc
lea
pusha
pushf
pusha
pushf
pushl
ret
movsbl
push
rcr
dec
or
sar
mov
jmp
xchg
pusha
push
mov
push
not
lea
mov
push
movb
push
pushf
mov
lea
pop
pusha
pushl
ret
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
sbb
add
rol
push
jmp
jmp
hlt
lahf
jnp
mov
xor
push
lods
cmp
cltd
stc
cmp
jae
and
xorl
mov
and
pop
push
inc
filds
mov
cli
mov
fstpt
inc
es
sbb
nop
lods
mov
mov
and
loop
lcall
ds
ljmp
roll
pop
sbb
inc
aas
or
xor
xor
sbb
adc
mov
push
cmpsb
pop
xchg
cmp
sbb
insb
aas
and
ret
fisubl
xor
fisubrs
imul
jb
push
mov
insl
call
cmp
cmp
jl
dec
mov
cmp
and
and
jo
push
pop
mov
movsl
imul
adc
cmp
add
ret
pop
mov
addb
mov
push
lea
jmp
out
imul
push
xchg
inc
in
adc
xor
js
jns
and
inc
adc
loope
popa
out
adc
hlt
cmp
sub
fs
add
sahf
cmp
aaa
xor
sahf
mov
add
pushf
cmp
fimull
push
ljmp
mov
fs
adc
xorl
xor
test
int3
fcmovb
ret
adc
push
inc
cmp
lahf
loope
test
ret
push
mov
mov
push
test
nop
ja
movsl
xor
lahf
insl
xchg
out
out
out
xchg
mov
imul
mov
jmp
cld
test
jae
imul
aas
adc
call
test
push
xor
lea
jmp
bt
add
bt
jmp
cmp
pushf
mov
call
xlat
pushf
adc
enter
mov
xor
or
movsb
cmp
pop
sub
fsubs
sahf
les
jb
xchg
leave
sti
addr16
push
cli
sub
jno
mov
mov
shl
push
sub
jae
leave
filds
rorb
or
push
mov
mov
fnstsw
aad
xchg
xchg
fcomi
push
fwait
mov
jno
adcw
pop
nop
add
jmp
inc
cmp
scas
sub
adc
aad
movsl
mov
adc
inc
push
aad
outsb
negb
mov
out
lcall
inc
and
push
pushl
lea
jae
lea
mov
not
mov
pusha
push
stc
jmp
inc
xchg
inc
ret
lds
push
cmp
fsts
sub
and
sti
rolb
pop
mov
push
jle
mov
xchg
add
pop
add
jg
out
ja
lea
call
jmp
push
pusha
lea
je
pushf
lea
movsbw
mov
push
lea
pushf
mov
mov
pusha
pop
call
pusha
pushfw
popw
not
mov
push
pusha
pushf
inc
cmc
jmp
pushf
call
scas
mov
stos
jo
or
pop
outsl
repz
fxch
mov
testb
clc
or
xchg
dec
ret
xchg
cmp
push
ja
loopne
xchg
inc
nop
mov
insb
jp
push
rol
dec
subl
call
jmp
movsb
push
das
std
jns
or
pop
adc
loopne
xchg
sarl
pop
push
pop
jp
cwtl
xor
dec
jns
adc
jge
cmpsb
repz
or
daa
ret
xor
int
push
add
mov
aad
add
dec
shrd
push
call
movb
lea
call
call
pushf
call
or
jmp
mov
lods
pop
lea
xchg
mov
mov
push
mov
mov
out
mov
mov
or
mov
outsl
xchg
mov
pop
outsb
dec
mov
cmc
pop
inc
xchg
sbb
lret
data16
mov
jle
sub
add
inc
les
mov
mov
sbb
xchg
xor
dec
xchg
dec
les
neg
jmp
les
pusha
or
push
jmp
pushf
lea
je
push
add
jmp
test
call
pusha
push
pushl
mov
pushf
movb
pusha
mov
lea
jmp
clc
movzbw
shrd
mov
test
movb
pusha
cmp
sub
call
inc
call
movb
lea
je
stc
cmp
jmp
add
addb
add
in
push
add
pop
push
add
push
add
in
add
add
add
add
inc
and
mov
pop
xor
jmp
lea
jb
pusha
bt
pushf
stc
cmpb
movb
call
scas
pop
mov
mov
pop
or
add
xor
daa
mov
outsb
mov
push
mov
enter
add
adc
ret
divl
ret
sahf
ficomps
cmpl
inc
jb
push
pop
das
fdivrs
push
pop
lret
or
xor
sub
sub
cmp
lcall
xchg
gs
out
adc
dec
dec
das
fdivrs
insl
scas
xlat
adc
cld
mov
in
lahf
pop
pop
mov
push
inc
scas
jl
mov
pop
and
sar
inc
leave
push
sti
mov
push
js
sub
adc
mov
fists
push
cld
imul
jns
cmpsb
popa
jp
ret
pop
js
adc
pop
sub
and
lock
push
sti
js
lods
xchg
pop
js
add
mov
xor
fucompp
call
mov
or
cltd
test
push
xor
cs
int
pop
lcall
test
imul
cmp
test
inc
push
mov
lock
xchg
bound
mov
adc
cld
sub
push
ret
aam
scas
mov
pop
rcr
call
push
jle
jg
or
cs
mov
push
xor
in
into
dec
sub
add
fmull
xchg
mov
fnsave
push
ret
pop
pop
ret
call
add
shr
mov
je
sub
fsubs
push
push
pop
inc
pop
cmp
sub
sub
sar
lds
iret
mov
jge
pusha
push
mov
sbb
popf
rcrb
testl
xchg
leave
mov
mov
lods
xor
lock
lock
hlt
lret
into
inc
cli
jmp
aad
fadds
adc
mov
xchg
pusha
mov
jg
mov
fwait
dec
shlw
lock
jns
mov
jp
loope
and
sub
aad
shrb
mov
cmpsb
leave
out
add
lret
test
jae
or
jno
lcall
shll
jnp
pop
jne
cmpsb
jmp
mov
test
pushf
xchg
mov
inc
fcompl
add
mov
jl
sahf
repnz
mov
iret
ficoms
ss
icebp
or
out
sti
imul
shrb
add
test
lret
mov
jns
inc
fists
mov
and
dec
adcl
cmc
sarb
mov
stos
pop
mov
cld
add
in
mov
mov
dec
add
aas
mov
mov
rcll
sbb
out
cmpsl
jp
fiaddl
imul
mov
sti
pusha
stos
push
xchg
or
and
dec
mov
sbb
cli
mov
popf
mov
rcrl
insb
pop
push
cli
leave
filds
pop
mov
sti
adc
or
and
clc
adc
or
cmpsl
adc
mov
or
repz
mulb
dec
imul
or
jl
jle
in
sub
mov
outsl
add
lock
adc
pop
fs
call
adc
adc
jmp
arpl
jg
cmp
mov
add
rcrl
outsb
adc
adc
xor
xor
or
dec
mov
push
call
push
pusha
push
mov
lea
jae
pusha
stc
add
pushf
mov
push
pushl
pushf
lea
jmp
cmp
pusha
jmp
add
clc
pusha
mov
test
cmp
call
neg
clc
cmc
pushf
mov
ror
cmp
pushf
clc
stc
sub
jmp
in
pusha
movl
pusha
call
lea
jb
push
jmp
sti
add
fs
ret
movsb
xchg
insb
rclb
stos
pop
adc
cwtl
mov
cmp
sub
stos
dec
sbb
cmp
pop
add
push
and
pop
outsl
stos
xchg
js
push
js
sub
je
int
adc
cli
xchg
movsl
jg
inc
sahf
pushf
jne
faddl
mov
leave
in
inc
add
fscale
stos
cmp
mov
addr16
jne
mov
push
ja
lret
into
sbb
inc
xchg
cs
movsb
inc
std
insb
lcall
neg
neg
add
add
mov
pushf
stc
test
pushf
pushl
pusha
lea
jmp
pushl
mov
mov
movw
movw
pushl
ret
pushf
jmp
setno
mov
push
lea
call
pushf
adc
call
and
pop
jae
fs
jne
and
shl
ror
mov
bt
call
pushl
popl
push
mov
pushl
ret
push
movl
push
movl
mov
lea
jmp
str
jmp
int3
popf
push
movb
call
pusha
push
movl
pushf
mov
movl
push
pushf
lea
jmp
pushf
lea
je
clc
add
bt
push
bt
cmp
push
lea
jb
jmp
mov
lea
jne
rcr
pusha
shld
xor
mov
test
push
add
cmp
call
pop
xchg
inc
mov
xlat
or
jg
inc
and
andl
pusha
dec
dec
test
adc
aas
loope
rolb
dec
pop
arpl
sti
rcrl
stc
cli
jo
dec
das
leave
mov
push
fcompl
lret
icebp
push
sbb
push
adc
popa
mov
mov
pop
xchg
ffree
fstl
inc
cwtl
sarl
sbb
mov
mov
sub
adc
adc
cmc
popl
imul
mov
sub
mov
and
popa
fcompl
aad
test
jae
ja
incl
sbb
sbbl
mov
daa
mov
adc
arpl
xor
ror
push
xchg
test
fsts
mov
push
xchg
es
fwait
addr16
mov
dec
idivb
push
popf
mov
pop
lea
mov
push
cltd
mov
push
mov
push
scas
cmp
mov
cli
pop
les
arpl
dec
int
movsb
and
aas
ljmp
out
xor
test
mov
mov
or
push
add
mov
into
cmp
stos
xor
sbb
popa
stos
push
cmpsb
jne
aad
decb
xchg
add
call
jmp
repnz
pushl
pushf
lea
jne
lea
movb
mov
mov
lahf
push
lahf
lea
jmp
mov
inc
call
call
add
addb
add
in
push
add
pop
push
add
push
add
in
add
inc
cs
adc
stos
faddl
push
cmp
cmp
nop
push
sub
cs
adc
jb
lock
xor
aas
shlb
into
int3
adc
dec
inc
mov
ret
pop
xchg
cmpsl
mov
ret
es
xchg
xor
or
bnd
insb
cmpsl
add
jbe
cmp
lock
stc
stos
push
stos
out
cmp
add
jg
lahf
adc
das
lock
cltd
cmpsl
push
sarb
cmp
repnz
sbbb
lds
cli
lock
mov
rcrb
out
push
imul
mov
jae
add
mov
push
xor
xchg
mov
cmp
hlt
dec
push
aaa
in
stc
lock
add
rorb
mov
fnstcw
mov
jecxz
movl
mov
mov
movb
mov
movl
pusha
movb
lea
jmp
pushf
mov
cmp
push
movb
cmp
test
jmp
mov
mov
pusha
pushl
ret
inc
lea
clc
rol
push
xchg
sub
call
pop
mull
jecxz
adcl
std
ljmp
ja
push
sub
call
xchg
add
jg
cli
in
xchg
int
mov
lds
sbb
mov
sub
inc
sar
bsr
stc
lea
sub
bswap
push
mov
lea
mov
not
xchg
movsbw
push
mov
jmp
push
push
mov
nop
ja
das
mov
out
scas
inc
sub
and
and
icebp
add
inc
sub
xlat
in
mov
push
and
aaa
roll
add
lods
cmp
and
xchg
lea
jne
movsbw
lea
ror
shl
mov
cmc
call
mov
call
inc
lahf
adc
mov
xor
mov
aad
mov
or
or
fsubr
mov
shlb
push
imull
sub
ret
or
fdivs
mov
fwait
xchg
dec
popf
das
inc
adc
sti
dec
or
lods
pop
in
jle
ss
xor
inc
or
jo
pusha
push
stc
iret
stos
inc
ja
out
adc
mov
or
lods
cwtl
test
dec
scas
rcll
pop
pop
adc
pop
sbb
aam
jmp
mov
aad
mov
pop
sbb
insl
out
push
rcrl
nop
mov
push
pusha
add
je
mov
subb
jecxz
sub
dec
aaa
or
cmp
pop
out
jne
xlat
les
loopne
and
xor
lahf
lock
xchg
fs
cld
mov
cmc
jbe
or
pop
pop
sub
cmp
xchg
inc
loop
mov
inc
scas
jmp
dec
mulb
icebp
or
jne
int
pop
add
cmpsb
fmul
mov
fdiv
in
jbe
jp
or
imul
xchg
lcall
rcr
xor
cmpb
mov
out
dec
and
mov
loopne
xchg
push
scas
aas
adc
fistps
fs
clc
cmc
push
fs
add
adc
lea
in
or
outsb
aaa
addr16
call
pusha
movl
movb
pushf
pusha
push
movl
push
movb
lea
jmp
add
call
mov
int3
mov
rcll
orb
add
xchg
lret
mov
pop
pop
test
push
inc
or
or
xor
aad
rorb
jbe
fbstp
or
insl
add
mov
inc
pop
daa
xchg
fldcw
pop
push
add
rol
popa
jb
jmp
ud2
mov
jae
popa
jae
testb
es
adc
cmp
je
pop
outsl
xlat
aaa
mov
lret
dec
cwtl
dec
sbb
add
add
popa
push
xchg
mov
push
push
mov
mov
test
push
cmp
mov
and
push
loope
sub
pop
imul
xor
stc
cli
movsb
add
shrl
mov
arpl
ljmp
jbe
mov
clc
rol
pusha
pushf
pusha
sete
stos
call
inc
call
call
pop
insl
leave
mov
rcrl
cltd
mov
inc
roll
jecxz
push
sub
mov
add
jle
dec
xor
in
mov
xor
cwtl
lret
sbb
pusha
std
sub
sarl
mull
or
fcmove
xor
push
movsl
jnp
clc
mov
movq
mov
sbb
or
enter
cmp
mov
into
out
mov
fstpt
out
dec
push
int
jg
inc
cmp
adc
jecxz
xor
lods
cmp
inc
push
push
insb
cmpl
inc
and
pushl
movb
pushf
push
pushl
ret
movl
pushf
lea
jmp
add
shl
sbb
mov
cmc
jmp
pop
lcall
xor
mov
sub
sbb
into
cmp
shrl
add
jge
inc
xchg
jp
cmp
enter
out
dec
and
or
jo
fwait
rcr
ss
jb
and
fcmovu
repz
xor
pushf
adc
pop
mov
rclb
xchg
add
scas
add
sub
mov
sub
xor
andb
shl
in
jo
and
imul
mov
rorl
fwait
mov
popa
into
inc
test
popf
mov
mov
popf
push
xor
xor
stc
lock
jecxz
cltd
fwait
add
pop
vfnmaddps
fwait
popa
in
push
fisttps
push
push
jbe
in
addr16
loopne
les
bound
call
imul
xchg
aaa
or
ds
fwait
leave
nop
mov
and
jns
jl
jnp
repnz
or
mov
and
and
push
adc
and
aam
icebp
xchg
mov
push
gs
mov
pop
stos
push
cmpl
lcall
shlb
ds
add
jmp
pop
imul
sub
mov
gs
sahf
xchg
mov
push
fimull
jae
sbb
sub
fst
pusha
movsb
fsub
push
or
decl
mov
dec
mov
clc
jmp
or
xchg
add
sub
and
rcrb
sbb
fnsave
scas
insl
adc
cltd
iret
lock
or
popf
cmp
jle
rol
adc
add
jmp
xor
sub
push
xchg
loopne
aad
push
scas
push
mov
adc
mov
inc
daa
mov
jnp
pop
and
pop
int3
shll
aaa
andb
cltd
inc
xor
inc
dec
add
out
xchg
mov
jnp
xchg
gs
pop
stc
or
loope
js
jno
pop
push
shlb
dec
rorl
movzbw
pop
pushf
push
pusha
push
pushl
ret
pushl
lea
je
pushf
call
mov
test
cmc
cmp
add
jmp
bswap
mov
pusha
mov
movzbl
mov
call
lea
je
test
clc
pushf
add
cmc
pusha
pushf
call
mov
mov
shll
cld
pop
in
push
or
mov
cs
and
ja
xchg
nop
cmp
and
inc
xchg
pop
dec
fldt
out
sbb
arpl
test
andl
imulb
inc
inc
mov
pop
lret
pop
add
repnz
sbb
dec
ret
mov
aam
mov
imull
mov
dec
outsb
sub
xchg
imull
scas
jecxz
and
sub
or
lds
call
lock
shll
push
mov
sahf
js
popa
imulb
int3
mov
and
mov
dec
xor
pop
cmp
pop
dec
and
jge
lret
sbbl
and
adc
test
dec
xlat
ds
inc
sub
push
push
bswap
mov
xor
jne
cmpsb
arpl
cmpsb
gs
rcrb
dec
out
fists
mov
mov
pop
lock
js
pusha
sbb
fbstp
aaa
mov
rcll
imul
sub
shl
cmpsb
out
cmpl
pop
or
and
fwait
pop
ja
sahf
dec
out
add
cmp
mov
test
inc
push
add
or
das
test
out
cmpl
or
lds
add
call
xor
mov
mov
rcll
lock
sub
adc
and
pop
out
cmpl
pop
or
sarb
jns
icebp
fistps
jae
movsb
mov
popl
insb
cld
and
mov
movsl
cmpsb
rep
xchg
adc
sbb
daa
loope
push
in
sub
dec
mov
cmpsb
cltd
push
fmuls
or
cmp
ffreep
mov
adc
mov
js
fcoml
popf
dec
sti
and
xchg
lea
nop
adc
stos
mov
mov
out
imulb
xchg
fsubr
inc
dec
sub
push
loop
mov
xchg
rorb
or
pushl
jmp
adc
mov
rol
das
mov
clc
adc
adcb
lret
pop
jo
stos
imul
cmpsl
test
mov
mov
std
inc
mov
mov
repz
mov
fisubs
push
inc
mov
fidivrl
aas
adc
and
mov
push
loopne
pop
cmc
popa
mov
dec
scas
in
movsb
pop
sub
push
or
inc
daa
push
adc
xchg
push
fbstp
pop
jle
jnp
lret
testb
scas
jb
insb
jns
popf
push
pop
int
pop
cli
fs
sbb
inc
push
or
inc
cld
iret
sbb
dec
push
lahf
lret
xchg
insb
or
les
cmc
cltd
or
lock
xchg
jae
in
mov
xchg
add
push
or
or
mov
stos
lods
push
or
popa
shr
movb
call
movzbl
lea
lea
jmp
lea
js
ja
jmp
mov
lea
call
stc
cmp
call
jbe
push
scas
shlb
lcall
lret
mov
mov
test
pop
mov
jle
sub
jp
je
push
xor
jle
jae
push
aad
ds
stos
adc
jno
lahf
add
sub
sub
movsb
lahf
leave
pop
add
mov
jle
rclb
repz
add
testb
shlb
movsb
iret
cmp
roll
cmpsb
inc
xor
sti
clc
inc
cmp
out
aam
add
pushf
dec
adc
fnsave
push
loope
lock
or
sub
or
sarl
scas
dec
pop
repnz
pop
dec
add
xor
pop
mov
fisubs
lahf
push
jne
imul
jge
clc
ljmp
fs
push
adc
lea
jne
pushf
pusha
pushf
pushl
lea
call
pushf
pusha
pusha
lea
jmp
xlat
jne
xor
cli
sbb
rcl
jne
repz
adc
pop
cmp
jne
sub
mov
jbe
jnp
xchg
subl
and
jne
jo
jo
adc
mov
mov
je
movsl
sbbl
xchg
xlat
jne
mov
or
jae
je
xchg
addl
dec
xlat
jne
inc
addl
jg
jne
jge
dec
adc
pop
mov
jne
add
mov
pop
orl
pusha
xlat
jne
xor
mov
in
incb
lock
xlat
jne
add
and
xlat
jne
scas
addl
mov
addl
jge
jb
mov
adc
pop
fwait
enter
ss
adc
scas
fs
repz
adc
adc
jne
es
adc
lcall
jle
adc
xchg
orb
jb
push
andl
mov
jb
cwtl
mov
cmpl
xchg
mov
jae
loop
xlat
jne
sub
iret
or
xlat
jnp
incb
lcall
adcl
xor
jne
aaa
addb
cvtdq2ps
mov
xorl
adc
jb
xor
jmp
jne
das
xor
adc
jns
mov
jb
incl
in
pop
pop
xlat
jb
jno
out
daa
popa
xlat
jnp
out
addl
sub
je
je
lretw
adc
popa
and
xlat
je
addl
xlat
jne
dec
orl
sub
jne
inc
test
mov
adc
xlat
jb
jb
inc
sub
cld
out
in
std
xlat
jb
sahf
addl
std
xlat
jb
jnp
fwait
ljmp
bt
bt
push
clc
cmp
pushl
pusha
pushl
ret
test
pushf
pushf
add
call
pusha
lea
jb
jmp
in
imul
cli
lods
mov
xor
fsubrl
dec
jge
lahf
js
stos
xor
maxps
imul
and
or
inc
fcoml
pop
jmp
out
adcb
leave
imul
mov
pop
jle
in
arpl
cmp
int3
adc
clc
xchg
xchg
mov
imul
xor
scas
or
arpl
or
xor
adc
or
int3
xor
insl
int3
push
pusha
bt
sub
call
push
lock
std
std
xchg
imul
ret
ret
jle
repnz
cs
icebp
pushf
mov
pop
gs
cs
mov
in
sbb
mov
aam
pop
ret
jmp
pushf
test
je
lea
add
arpl
xchg
push
jbe
movsb
add
pop
mov
loopne
enter
roll
and
jne
pusha
mov
movzbw
shl
movsbw
shrd
sub
mov
shl
lea
test
pushf
test
sub
stc
pusha
pushl
popl
test
mov
call
push
call
testb
sub
arpl
cmp
mov
fdivrl
push
add
mov
daa
int3
rorl
in
pop
pop
push
inc
fs
mov
sbb
mov
adcb
jo
lock
inc
or
cmp
lds
mov
inc
je
cmp
cmp
and
int
jne
mov
jae
test
push
std
dec
jnp
insl
cmpsb
insl
stos
or
sbb
sbb
cmp
adc
mov
jno
bnd
dec
aaa
js
sub
or
lea
mov
cmpsl
outsb
movsl
xor
cmp
inc
fs
nop
lds
sbb
mov
mov
jle
incl
hlt
bound
push
or
pushf
or
loop
add
aad
pop
mov
xchg
scas
pop
lods
movsb
scas
cltd
outsl
imul
or
adc
fmuls
sub
mov
jg
mov
dec
push
les
fnsave
or
dec
ret
cwtl
cmp
and
mov
insl
adcl
xor
movsb
dec
jmp
mov
leave
sub
fs
loopne
cwtl
add
roll
idiv
cmp
jae
adc
sldt
pushl
mov
clc
clc
add
pusha
pushf
lea
jmp
jmp
call
pushf
mov
call
negb
push
ja
mov
out
mov
mov
xchg
ja
ret
jecxz
inc
pushf
push
pop
out
mov
sub
sub
fstpl
aaa
jno
ja
imul
jbe
dec
lahf
mov
xchg
push
in
dec
add
imul
sarb
add
pushf
cmp
push
mov
lea
jb
jmp
pushf
jmp
mov
pusha
pusha
mov
lea
jmp
lea
jne
pusha
call
mov
into
test
rcll
sahf
inc
das
sub
mov
movsb
mov
imul
sti
popa
mov
cmp
fcomps
data16
pop
mov
dec
push
mov
inc
das
repz
addr16
addr16
aad
xchg
aad
or
insl
test
mov
mov
xchg
sbb
bound
pop
mov
test
shl
push
test
add
ss
test
mov
mov
mov
lods
sub
je
clc
pop
xchg
push
call
jge
div
adc
cmp
dec
into
dec
ja
xchg
adc
movsl
popa
popf
pop
lods
lock
insl
push
sti
pushf
jmp
movb
pushf
lea
jne
shr
xor
xor
shr
btc
shrd
mov
dec
call
pushf
call
push
sbb
adc
xchg
and
or
das
add
test
loop
mov
into
insb
fwait
pop
jecxz
popa
enter
jl
add
sub
sbb
xor
cmp
jnp
add
adc
push
sbb
push
cmp
jmp
and
stos
int
ds
mov
mov
sbb
sub
test
gs
iret
sbb
test
dec
out
lcall
lret
or
adc
inc
cmp
ret
pushf
mov
adc
lock
inc
push
mov
mov
push
cmc
stc
add
mov
push
pushf
lea
jmp
add
jmp
cmp
pushl
lea
ja
pusha
setl
inc
lea
setnp
not
call
push
mov
btc
rcl
jmp
jmp
bt
not
cmc
call
mov
pusha
lea
jmp
lea
jb
stc
clc
call
bt
test
movb
push
lea
je
btr
shrd
sbb
add
shr
lea
mov
pushf
add
call
jno
pop
cmpsb
or
jg
jp
xchg
cmp
ja
mov
cmp
nop
mov
pop
out
js
mov
cmpsb
sbb
imul
xor
mov
sub
mov
pusha
imul
pop
cmpsl
xchg
and
in
lret
int
data16
mov
cs
fcoml
xchg
mov
mov
adc
mov
lds
mov
push
in
inc
fsubs
and
mov
inc
jmp
inc
int
pop
jno
mov
mov
pop
enter
std
sbb
push
xchg
jge
adc
xchg
push
jg
sbb
mov
je
int3
pusha
insb
mov
sbb
int
mov
push
sti
leave
sbb
xor
mov
adc
adc
test
in
inc
sbb
inc
sti
into
and
int
cld
push
dec
xor
cs
jns
bound
jmp
or
push
lds
jmp
push
lret
loopne
scas
loop
sti
out
push
adc
push
lods
mov
cmp
shlb
xchg
mov
and
xor
mov
subl
notb
xor
in
mov
mov
dec
or
inc
jns
xchg
test
cmp
mov
das
ficoml
xchg
inc
movb
movzbw
pushf
jmp
bswap
xchg
movzbw
pop
bswap
not
pop
movsbw
pop
movzbw
pop
pushf
pusha
mov
pushl
ret
jmp
add
test
pushf
cmc
jmp
cwtl
icebp
mov
je
pushl
fdivr
in
adc
imul
dec
jns
add
inc
loopne
clc
aaa
push
out
xor
iret
dec
sbb
in
ror
fstpl
or
or
cwtl
xor
inc
jp
cltd
sbb
lea
popf
pop
push
imull
cwtl
pop
pushf
xchg
in
jns
sarb
shr
insl
xlat
lcall
xchg
shld
xor
cltd
xlat
mov
or
dec
pop
adc
arpl
mov
test
push
jge
pop
dec
and
pop
subl
push
sub
inc
cmc
inc
xchg
stc
adc
stos
xchg
fsincos
xor
ljmp
and
jecxz
mov
lret
mov
dec
jnp
push
sbb
pop
or
dec
pop
dec
xor
xor
adc
test
repnz
enter
out
cmc
pop
fdivr
inc
cmp
cmp
adc
cmp
jnp
mov
loope
adc
cmc
mov
call
movl
push
pushl
movl
movb
pusha
lea
jmp
pushf
pusha
pusha
movl
movb
jmp
inc
push
pushf
movl
mov
lea
jmp
fcmovne
insb
mov
jb
sbb
mov
jmp
fwait
test
jp
push
sti
out
cmp
ja
lret
loopne
add
cltd
pop
fsubrl
inc
mov
fsubp
arpl
xchg
jns
daa
xor
je
or
add
mov
mov
out
jb
dec
xor
into
adc
or
xchg
inc
shll
pop
insb
decl
sub
cmp
inc
ret
mov
jmp
arpl
xlat
mov
mov
sbb
bound
cltd
dec
out
xchg
push
popa
das
cmc
pop
sub
or
out
sbb
xchg
cli
stos
mov
mov
clc
loope
test
rorb
cwtl
enter
jae
pop
mov
and
jbe
pushw
sbb
shr
xor
nop
mov
pusha
sbb
dec
popf
adc
ret
icebp
mov
loope
pop
lods
lods
mov
xor
jnp
aas
cs
shll
or
sbb
ret
xchg
cs
or
popl
and
jae
cmp
inc
imul
mov
in
sti
inc
ret
pop
xor
out
push
dec
inc
adc
mov
rcr
lds
cmp
cmpsb
std
faddp
add
movsb
inc
ljmp
mov
test
ds
or
cs
and
dec
xor
ja
out
jg
xor
subb
mov
inc
lods
adc
std
xor
xor
inc
das
mov
orl
push
xchg
xchg
cmp
sbb
orb
enter
cmpl
push
dec
orl
les
add
jmp
mov
bswap
call
xor
shll
roll
sbb
ficomps
lret
push
and
mov
cwtl
out
xchg
mov
imul
mov
sub
addr16
or
jns
call
in
cld
xchg
shrb
call
push
adc
mov
bt
clc
cmpb
call
add
jmp
in
inc
mov
jns
imul
in
adc
imul
cmp
cmp
icebp
mov
les
imul
lock
adc
xor
or
cltd
cmc
fiaddl
sub
sti
cmp
pop
pop
adc
fwait
push
pop
xchg
lret
bound
sbb
jno
cltd
pushf
and
jne
push
fwait
or
xor
inc
lods
adc
out
and
sbb
push
pop
fildl
bound
dec
adc
jp
inc
adc
xchg
stos
incl
add
popa
insb
inc
insb
insb
outsl
arpl
lret
mov
cmc
xor
sbb
ret
sbb
orb
mov
xchg
iret
popf
push
cmp
cmpsb
xor
fdivr
inc
sub
adc
inc
cvtps2pd
cmp
mov
push
loopne
ss
adc
add
cwtl
mov
mov
inc
popf
xor
mov
pop
lahf
scas
jmp
lods
adc
or
clc
and
push
add
xor
mov
dec
into
sbb
xchg
sbb
add
push
mov
sub
lahf
shlb
test
cmc
sub
and
jno
cmp
xchg
mov
loopne
imul
sub
jne
cmp
and
test
jg
push
mov
or
enter
pop
stc
push
mov
sbb
arpl
and
inc
jno
shlb
aam
mov
fwait
test
aaa
fcomps
dec
flds
mov
loop
scas
fstpl
sbb
mov
ret
ds
xchg
add
push
rcr
ret
fsubrl
jge
cmpsb
sbbl
mov
dec
push
lds
ja
mov
adc
mov
test
xchg
popa
stos
pop
out
and
popa
mov
negb
push
add
stc
pushf
mov
fisttpll
add
cmc
xor
out
lret
cmpl
ljmp
aas
in
call
ja
cwtl
movb
push
xchg
ja
jb
fidivrl
inc
cmp
push
sbb
loopne
xchg
mov
les
jp
pop
or
jnp
lret
faddl
add
std
sub
push
dec
mov
test
adc
dec
movsb
fdivrl
cmp
scas
or
ret
ficoms
push
negl
and
mov
fwait
test
push
movsl
jmp
adc
popf
js
js
sti
lret
ss
xor
mov
fstps
arpl
das
and
rcll
jo
sub
sbb
sub
sbb
into
mov
inc
das
rorl
inc
mov
xchg
inc
cmpsb
fistpl
bswap
mov
xor
sub
stos
ljmp
inc
xor
xor
rcrl
out
subl
stos
xorb
xor
or
sbb
out
pop
das
pop
cltd
scas
cwtl
mov
into
inc
rcrl
sub
shl
cmc
jmp
imul
in
inc
push
mov
enter
aas
and
pop
ljmp
jno
jne
rcrb
mov
sti
push
inc
cmp
pop
gs
mov
inc
cmpsb
iret
cli
push
push
xchg
fcoms
data16
aad
jbe
xchg
jb
jno
cmpsb
inc
je
andb
sub
test
cli
cmpl
adc
pop
mov
cwtl
jge
in
push
lret
cmp
jbe
mov
push
lret
aas
or
inc
add
je
subb
mov
stc
bt
clc
cmp
cmp
jmp
adc
movb
lea
jae
pushf
pusha
lea
jne
push
pushf
stos
movb
movl
lea
jmp
bt
mov
cmp
cmc
cmp
test
mov
lea
je
stc
bt
pushf
clc
add
test
clc
mov
cmp
pusha
lea
jb
bt
test
bt
cmp
push
lea
jae
push
mov
dec
clc
bsr
mov
setae
pushf
pushf
mov
cmc
cmc
sub
cmp
repnz
movb
lea
jne
cmc
sub
add
pushf
mov
movzbw
pushf
sub
or
sub
lea
stc
pushf
cmp
sub
test
pusha
pushl
popl
stc
pushf
test
jmp
push
pusha
mov
movl
pusha
push
lea
jmp
cmp
bsr
stc
mov
not
adc
push
xchg
mov
pushf
movsbw
mov
btc
mov
pushl
clc
or
push
pusha
lea
jl
je
cmc
bt
pusha
pusha
or
pushl
movb
lea
je
bts
das
test
sub
shrd
lea
xor
mov
call
mov
test
movsl
mov
xchg
imul
in
or
jle
and
cmpsb
out
jl
shlb
adc
pop
push
lret
les
inc
pop
add
in
pop
orl
sub
in
jns
lret
jl
das
mov
fld
or
or
test
sbb
paddusb
pop
inc
jle
adc
xchg
cs
xchg
mov
push
or
enter
xabort
btr
shld
push
and
or
stc
mov
xor
dec
pushf
neg
mov
jmp
pushf
or
jmp
pushf
repnz
pushf
pushf
jmp
call
pop
pop
mov
ja
mov
clc
popf
jno
stos
cltd
arpl
lahf
mov
das
sar
mov
lret
clc
sahf
icebp
jg
sbb
sub
cli
mov
cli
aaa
inc
scas
lret
arpl
inc
xor
cmpsl
push
xchg
lcall
xor
jecxz
adc
or
jnp
scas
sti
ja
jl
out
jno
push
notb
push
fildl
push
xchg
add
loop
fisttpll
cli
cmp
mov
xchg
mov
or
cltd
insl
inc
dec
daa
mov
jp
test
scas
jnp
pop
xor
or
mov
mov
aad
popf
push
pop
ja
lds
lcall
icebp
jmp
dec
pop
push
add
mov
mov
push
stos
bound
sahf
out
nop
mov
inc
push
inc
add
inc
js
je
jb
arpl
jae
call
jmp
mov
lea
ja
rcr
add
sub
shrd
add
shr
inc
xor
pusha
mov
sbb
shl
mov
clc
call
pushf
add
cmc
clc
mov
bts
not
movsbl
sar
mov
movb
push
cmp
mov
call
mov
lea
ja
jmp
jmp
shl
push
mov
push
stc
cs
pop
mov
jecxz
aad
out
dec
orl
pushf
sbb
xchg
aad
jns
jmp
jne
call
inc
pop
jp
mov
stc
jne
add
shl
mov
jmp
dec
sbb
sub
pop
daa
add
sub
sbb
and
push
add
push
dec
in
sbb
enter
mov
pop
nop
pop
push
js
insl
jg
add
pop
fimuls
jmp
jecxz
xor
out
pop
hlt
mov
outsb
rcll
jbe
dec
cmp
adc
scas
lods
inc
lods
mov
mov
dec
cli
jbe
shl
andb
cld
and
repz
leave
pop
mov
mov
and
int3
repz
movsb
cmp
fadd
jnp
mov
lods
aam
cmpsb
outsb
outsl
jg
shrb
movups
sub
testb
or
xchg
and
enter
xchg
test
and
pop
dec
stos
add
leave
leave
pop
dec
cmpsl
xchg
xchg
hlt
jmp
ret
aam
pop
arpl
adc
inc
xchg
and
push
outsb
ja
rcrb
ljmp
lds
sbb
aam
sbb
imul
stos
in
inc
mov
lret
fdivs
pushf
dec
inc
dec
dec
inc
pusha
push
inc
orl
jo
xor
ds
in
cmpsb
cwtl
push
je
rorb
push
and
rolb
sub
mov
daa
ret
test
test
and
mov
pusha
lret
add
movsb
adcb
out
lret
mov
lds
sahf
jb
sub
sti
fwait
int3
xchg
xchg
leave
ficomps
mov
xor
add
dec
test
cmp
xor
bound
jecxz
ja
mov
inc
push
fsub
dec
out
and
or
fldt
push
idivl
dec
mulb
aam
xchg
hlt
pop
dec
test
adc
push
sbb
push
adcl
xchg
adc
mov
mov
push
mov
jmp
inc
inc
cmp
sbb
jne
ret
xchg
aam
aaa
jl
test
insb
cmp
and
in
and
or
cmpsb
xor
inc
enter
shlw
ljmp
dec
lret
clc
mov
adc
clc
lods
loopne
mov
rcrl
sbb
rorb
loopne
push
or
shrb
xor
push
bound
out
xchg
das
fcoms
add
sub
dec
jecxz
cmp
aad
jo
or
mov
jecxz
scas
or
rcrb
mov
das
and
popf
ret
ret
insl
fchs
jb
daa
xor
ss
lods
xor
imul
inc
das
or
xlat
test
xchg
push
adcl
xor
pop
and
sahf
ret
stos
cmpsl
sub
and
push
cld
xchg
sub
mov
mov
adc
mov
mov
xor
jl
int
jns
fstl
stos
call
fimuls
lods
mov
roll
and
imul
sub
lea
imul
xlat
mov
insl
push
fildl
dec
pop
cmp
inc
aas
push
pop
jns
sbb
or
shll
mov
push
test
push
push
xchg
loopne
inc
push
pop
jp
jecxz
inc
movl
lea
call
jmp
push
lea
call
jmp
lea
jae
call
imul
dec
xchg
fsts
fcos
xor
enter
into
std
and
fs
xor
cwtl
jle
movsb
push
dec
cmp
cmpsb
pusha
out
shrl
imul
or
fisubs
jne
mull
lret
xor
dec
insb
ror
pop
or
lret
divl
or
mov
nop
jnp
sahf
adc
inc
sbb
cmp
mov
cmp
pop
xchg
test
xchg
pop
xchg
xchg
ja
enter
aam
mov
imul
xchg
testb
dec
ret
inc
call
in
cmpsl
dec
push
cmp
inc
stos
mov
inc
jae
or
es
shlb
sbb
push
mov
pushf
scas
scas
cmp
test
add
inc
in
and
cli
repz
dec
imul
or
mov
adc
loope
cmpsb
dec
fidivrs
mov
idivl
xchg
xor
sub
pusha
cmp
add
popf
inc
dec
inc
sbb
movb
lea
jae
movsbw
movzbw
mov
pushf
mov
lea
jmp
movl
mov
push
mov
push
pushl
popl
pushl
mov
push
push
pushl
ret
sub
jmp
cmc
rol
call
imul
test
cmp
jmp
jne
pusha
jmp
mov
push
jmp
cmpsb
cmc
popa
xchg
cmp
jns
shll
mov
cli
xor
lahf
xchg
xor
pop
push
loope
jecxz
rcll
stc
pop
add
mov
lea
jecxz
add
and
sbb
and
cmp
xchg
mulb
aaa
sub
inc
dec
cmp
addl
loopne
dec
pop
cmp
jg
addr16
push
xor
push
xchg
or
pop
cmpsl
mov
lahf
lods
jg
mulb
and
lds
mov
xchg
fdivrl
in
mov
jns
cmpsb
dec
rcll
mov
sbb
shl
and
dec
pop
cmp
adc
and
xchg
fldl
adc
fadds
or
adc
pop
or
imull
call
inc
lahf
ljmp
push
adc
lahf
mov
ret
or
fiadds
push
jno
roll
arpl
or
in
js
sub
or
push
jmp
out
mov
stos
fldenv
add
xor
lea
jae
cmp
sub
push
jmp
outsl
mov
xchg
mov
out
inc
mov
mov
mov
pusha
cmpsb
cmp
test
mov
mov
pushf
dec
mov
lea
cmpsb
jl
arpl
ss
xchg
adc
add
insl
push
pop
mov
inc
es
cmp
ficompl
mulb
adcb
fists
scas
repz
mov
inc
fs
repnz
cs
pop
addr16
jmp
stos
movb
lea
jmp
movw
lea
call
call
pushf
pusha
setno
inc
pushl
jmp
jmp
mov
cmc
test
stc
stc
xor
mov
clc
repnz
pushf
lea
jne
test
dec
mov
shrd
bswap
shld
btc
sub
bsr
sbb
movsbw
mov
pusha
bt
pusha
sub
cmp
push
clc
pushl
popl
stc
stc
cmp
cmp
mov
lea
ja
sar
dec
rcl
sub
neg
rcr
add
btc
shrd
or
rol
mov
sar
shr
call
jmp
and
sar
mov
sbb
aam
push
cwtl
mov
bsr
rol
push
neg
xor
pusha
lea
call
mov
setns
jmp
call
lods
outsl
lret
nop
pop
inc
dec
sbb
xchg
push
or
daa
inc
jae
sub
xchg
pop
lods
jg
cmp
dec
mov
shlb
faddp
repz
mov
jne
test
sub
pusha
push
lret
mov
shr
pop
mov
xchg
xor
sbb
aad
scas
cwtl
imul
inc
jae
pushf
ljmp
push
sbb
mov
mov
cmp
aam
leave
subb
add
fisttps
repnz
loopne
jno
mov
outsl
mov
es
testl
inc
cmp
push
mov
cwtl
movl
push
push
pushf
call
setno
inc
call
shll
shr
inc
xlat
fsubrs
mov
sbb
jp
push
addr16
int3
shlb
cmp
aad
pop
fwait
loope
mov
emms
inc
xor
cmp
mov
pop
ds
or
xor
stc
or
mov
push
add
mov
adc
xor
fcomps
adc
push
mov
aad
sbb
repz
mov
add
aas
imul
out
fisubl
jb
mov
xchg
aad
scas
call
not
movsbw
movsbw
mov
pushf
lea
jmp
pusha
lea
jb
jmp
pushf
pusha
call
fisubl
icebp
iret
mov
pop
xor
js
or
or
or
ja
cs
dec
and
loop
mov
or
icebp
pop
mov
sbb
sub
cmp
aad
mov
mov
mov
inc
sub
in
jp
cwtl
std
in
filds
jns
dec
lahf
xor
xchg
xor
sbb
test
lea
xor
mov
in
sub
sbb
push
pushf
jmp
pop
sbb
inc
mov
daa
fiadds
mov
popa
repz
ret
xchg
sbb
mov
lcall
cmpsb
push
cmpsb
out
cmp
sahf
pusha
pushf
shll
add
or
imul
or
lods
popa
push
or
je
clc
stc
cmc
cmp
pusha
jmp
sti
jmp
mov
xchg
mov
bound
dec
fsub
rcrl
and
pop
loopne
cmp
outsb
ret
push
jnp
clc
xchg
lods
cmpsb
out
mov
pop
clc
incl
lods
lods
or
cmc
in
out
xchg
dec
mov
mov
sub
sbb
repz
out
icebp
mov
jl
sbb
pop
lds
fptan
sbb
dec
rcrb
inc
mov
push
mov
push
loop
or
adc
lret
repnz
int
push
push
movsb
arpl
cmp
incl
add
push
push
add
add
add
add
add
add
add
dec
push
add
dec
push
add
push
add
add
add
add
dec
push
add
popf
out
mov
push
aaa
stos
cvtdq2ps
in
push
fldt
or
cld
cli
bound
cwtl
sub
sti
ja
pop
lea
cwtl
and
orb
cmp
pop
sar
inc
mov
stos
cmp
adc
out
gs
shlb
insl
ret
adc
fs
sub
push
je
and
mov
loop
rclb
xchg
fadd
xor
sti
stos
cmp
mov
and
xchg
imul
cltd
dec
imul
add
push
pop
sub
mov
pop
adc
inc
jge
cmp
dec
and
jle
fucom
xchg
es
dec
rorb
fdivr
incb
clc
xor
pop
pop
repnz
mov
enter
ja
jmp
pop
mov
or
fstps
or
mov
addb
loop
xor
adc
je
lock
cmp
fs
repz
imul
movswl
rol
push
mov
cwtl
cmp
aad
out
out
or
mov
add
xchg
push
jg
shlb
and
jns
and
sti
jns
adc
inc
sahf
lret
aaa
push
pop
outsb
es
sub
in
xor
or
std
sbb
mov
cmpsb
lret
sub
lahf
fxch
pop
rclb
int
test
jo
adc
pusha
dec
fisubrs
xor
xchg
jno
mov
mov
xlat
lock
sti
or
jne
leave
fistl
ret
xor
inc
push
inc
pop
lret
pop
mov
mov
lds
and
pusha
inc
dec
enter
xchg
xchg
or
cli
xor
dec
nop
push
jp
push
shlb
sbbb
mov
sub
hlt
or
popf
test
cld
mov
sbb
aam
pop
xor
cld
orl
cmp
sbb
es
movsl
lods
or
and
xor
outsl
mov
out
jo
scas
int3
dec
adc
add
mov
cmp
xor
arpl
and
and
jle
inc
js
out
fnstenv
sub
xchg
jecxz
lea
in
out
cmp
mov
mov
daa
push
mov
test
or
lcall
push
sbb
ljmp
test
mov
sub
in
mov
jge
ds
xchg
cltd
stos
xchg
jnp
pusha
push
mov
lock
mov
mov
jg
or
xor
inc
mov
push
lcall
mov
xchg
xchg
and
pop
icebp
push
aas
cmp
mov
cmc
fisubrs
push
push
adcb
cmp
mov
mov
pop
dec
movb
pop
cmp
inc
leave
add
cwtl
adc
push
in
mov
into
nop
cmp
cmp
cli
lcall
add
inc
mov
stos
adcb
shl
sbb
sbb
and
cmp
mov
mov
xor
and
call
jae
or
ret
push
jl
xor
add
gs
xor
les
lret
mov
int3
dec
mov
pop
push
pop
pop
jp
pop
mov
mov
divl
movsl
and
pop
insl
xor
sub
les
les
lahf
pop
cmp
xchg
cs
adc
xor
xchg
aas
je
adc
rcll
cmp
shl
xor
pop
fistpl
or
les
movsl
fldenv
push
jl
cwtl
jp
pop
add
dec
icebp
and
movsl
or
mov
cmp
jecxz
xchg
xor
cmc
pop
std
sbb
pop
ss
imul
jno
and
cmp
push
mov
or
rorb
lea
sub
pop
ljmp
lds
fwait
push
sbb
in
mov
add
mov
push
in
sar
xor
add
cwtl
test
sbb
push
jecxz
out
nop
jmp
lcall
or
out
sbb
add
inc
lcall
push
fnstsw
pop
cmp
push
jns
push
int
fwait
ret
repnz
mov
stc
add
pop
jmp
jb
mov
xchg
sbb
push
bound
leave
icebp
push
sbb
cwtl
sbb
cs
rcrb
mov
je
cmp
sbb
test
sahf
repnz
sub
stos
sub
xor
pop
cs
imul
cmc
xor
pop
cmp
xor
jle
dec
fldlg2
dec
out
pop
iret
sub
and
xor
sub
icebp
lods
xchg
out
fldenvs
sbb
push
cmp
test
inc
cltd
and
fdivs
insb
pop
or
jge
insb
rorb
add
push
ds
sahf
loopne
sbb
mov
pop
jb
dec
mov
xor
mov
test
cmc
scas
fistpl
sub
sub
mov
xorb
icebp
filds
mov
fdivl
es
inc
pop
cmc
ss
enter
daa
iret
popa
sbb
push
xor
or
fs
je
into
sbb
pushf
pop
fcompl
sbb
push
je
nopl
cmp
test
test
mov
roll
lret
dec
pusha
call
jo
jbe
out
push
imul
sub
fdivl
movl
lods
imul
sbb
outsl
cmc
popf
popa
popa
rol
insb
inc
test
data16
imul
xchg
or
xor
inc
add
scas
mov
lea
je
push
pop
jns
fwait
cmp
lahf
lods
jae
inc
addb
and
into
aam
les
shlb
pop
cmp
test
or
lcall
je
fmuls
pop
xchg
mov
dec
daa
jne
xchg
push
insl
and
insl
scas
mov
popa
fldt
stos
jmp
xor
mov
mov
inc
pop
mov
shrb
rcll
testl
ret
and
add
shrl
xchg
fiaddl
loop
ds
jnp
or
add
aad
scas
rclb
jmp
imul
cs
outsl
in
pop
clc
ret
jno
xor
mov
pop
std
sub
fistpl
inc
ja
adc
cmp
pushf
std
mov
in
in
jp
mov
mov
mov
pop
out
jae
addr16
lret
lods
ss
lods
xor
sbb
mov
gs
mov
mov
icebp
dec
mov
cmp
adc
sbb
cs
test
jge
mov
repz
inc
enter
insb
pop
pop
xor
adcb
dec
mov
xchg
jmp
aas
frstor
lods
adc
pop
xor
repz
popf
add
cs
ret
outsb
push
mov
bound
fisttpll
cmp
jnp
or
sbb
pop
aas
inc
in
mov
sbb
sub
mov
es
adc
push
les
das
push
fbstp
xchg
es
aaa
and
shlb
push
dec
add
addb
inc
ret
adc
inc
mov
jbe
nop
cwtl
fcmovnbe
push
fmul
rorl
adc
repnz
adc
fwait
movb
imul
scas
idivb
outsl
fisubrl
inc
sbb
pop
imul
inc
pop
xor
test
cmp
test
movsb
loope
stos
ss
loope
cmpsb
mov
push
mov
scas
mov
loope
mov
scas
daa
test
add
fwait
hlt
mov
jge
mov
push
sub
lods
cmp
sub
out
iret
int3
outsl
in
sahf
push
sub
pop
cld
push
popf
leave
inc
iret
adc
divb
orb
or
into
adc
test
cmp
das
lea
inc
mov
mov
or
mov
sub
popa
sbb
dec
push
movsb
rcll
mov
sarb
jbe
vrcpss
loope
mov
in
or
ds
sbb
xlat
push
adc
fisubs
sbb
pop
push
mov
pop
insl
icebp
mov
mov
test
int3
mov
inc
lahf
jnp
xor
subb
and
add
dec
cmp
ljmp
fwait
jne
mov
push
or
pop
dec
and
stos
fmull
fcmovb
sbb
aad
ss
ljmp
mov
pop
leave
xchg
jl
mov
lods
pushf
repnz
xor
add
sub
dec
sbb
out
add
into
js
jge
pop
and
dec
pop
rolb
test
fsubrl
inc
iret
in
mov
jnp
cmp
jnp
addr16
popa
in
mov
scas
pop
add
add
xor
jbe
xlat
mov
fcoml
sub
xchg
fs
jp
popa
xor
loopne
mov
mov
fxch
mov
ret
or
cltd
mov
shr
cmp
sub
ror
das
lock
test
dec
or
scas
push
dec
push
imul
test
adcb
in
lret
jl
mov
xchg
cmp
jnp
sbb
jg
dec
sbb
outsl
movq
jne
daa
in
jmp
dec
int
mov
inc
mov
add
cmc
xchg
sub
popa
test
inc
push
sbb
sbb
addl
xchg
movsb
dec
cmp
dec
sarb
or
gs
test
out
sbb
outsb
fwait
inc
fmuls
jp
psubsw
pop
inc
inc
scas
pop
mov
orb
fsubrl
ljmp
push
push
or
jno
mov
leave
mov
fmuls
push
mov
gs
sbb
sbb
aad
loopne
pop
jo
sub
jecxz
mov
dec
jne
inc
jae
lock
je
aas
mov
rclb
pop
pop
dec
test
adcl
push
cli
jne
adc
or
push
shrl
insl
push
sub
out
dec
pop
das
popf
dec
jl
lds
sbb
lods
jb
jnp
aas
pusha
mov
and
lods
pop
jnp
sarl
cmp
pop
cs
push
mov
mov
fnstenv
inc
lds
in
sbb
pop
xacquire
fbld
inc
sub
popf
repnz
outsl
fldcw
fiaddl
mov
push
or
rcrl
xor
fwait
movsl
leave
mov
cmp
jge
popf
xor
jle
ja
xor
pop
outsb
or
mov
js
xlat
and
and
or
dec
jne
adc
jbe
test
in
andb
xchg
clc
out
mov
leave
ja
addr16
jno
pop
mov
stc
lds
inc
mov
sbb
dec
jecxz
jg
push
sub
into
mov
jmp
push
jmp
lock
push
adc
or
das
inc
outsb
aas
xor
sub
popa
rcrb
cli
mov
adc
mov
cli
out
ds
insl
outsl
pop
inc
insb
xchg
inc
adc
lds
add
rol
call
pusha
call
inc
test
sbb
xchg
int
iret
outsl
or
dec
dec
fcompl
xchg
xchg
insl
outsb
orb
sbb
or
inc
lret
das
or
mov
js
xchg
and
idivb
mov
test
stc
lret
in
mov
sbb
dec
pop
fstps
les
pop
jle
add
push
pop
xrelease
mov
pop
pop
ss
jg
shr
movsb
lret
push
lret
and
push
jnp
sti
mov
mov
cmpsb
pop
xchg
insb
ret
jmp
jmp
sahf
gs
xchg
add
mov
addr16
xor
testl
jge
jle
mov
add
pop
mov
pushf
lock
xchg
and
scas
sti
jmp
jb
pop
stos
push
lahf
icebp
jno
popa
aad
aaa
fisubrl
or
fsub
lock
or
sub
adc
adc
xchg
clc
les
or
test
cmp
cld
mov
add
add
call
bts
rcr
shr
shld
mov
bt
pushf
call
mov
fdivrl
shll
pop
cmc
stos
adc
test
mov
dec
xlat
sub
dec
dec
rolb
xchg
xchg
push
bound
fdivr
cli
sub
jl
aaa
mov
jo
cmp
cmpsl
jl
pushf
mov
adc
pop
test
ljmp
sub
imul
lock
cmc
add
mov
rol
pusha
test
push
neg
stc
cmp
movzbw
mov
pushf
lea
movzbw
mov
mov
jmp
call
push
pushf
pushf
push
lea
jb
pusha
cmp
pushl
push
lea
jae
pusha
mov
movb
push
lea
jmp
movb
lea
je
lea
lea
mov
lahf
call
add
dec
outsl
popa
fs
imul
add
jle
rcll
xor
in
xor
xchg
pop
lret
ss
fistl
cmc
push
sarb
fdiv
mov
movl
icebp
fs
or
mov
imul
mov
mov
fldenv
das
jns
aam
ret
mov
fmull
mov
fnstcw
les
push
mov
push
mov
mov
arpl
mov
sub
xor
mov
mov
sbb
leave
jl
xchg
gs
lods
pop
div
flds
inc
adc
ja
push
push
les
cmpsl
ds
add
mov
push
stos
inc
call
hlt
call
imul
mov
test
cwtl
jae
lods
dec
and
sbb
imull
jmp
mov
imull
mov
push
push
and
or
orb
shlb
outsl
cmp
pop
adc
jae
mov
ljmp
lds
in
mov
insb
pop
sub
imul
scas
push
lret
lahf
lods
mov
xor
jo
jnp
aaa
mov
out
insb
sbb
test
jle
inc
sub
lahf
and
mov
xchg
lahf
aaa
sbb
mov
insl
xchg
nop
lds
popf
stc
out
fadd
sarl
adc
sbb
insb
dec
jnp
insl
inc
in
insb
push
xor
mov
fiadds
sbb
dec
subl
mov
es
roll
shrl
jbe
in
call
sub
mov
loop
mov
ljmp
dec
mov
daa
cld
dec
dec
or
cld
in
sbb
rolb
daa
cmpl
mov
jnp
sub
decl
sbb
jbe
or
dec
jp
mov
repz
sub
dec
xor
dec
xchg
push
mov
in
in
push
push
jg
xchg
mov
inc
cwtl
outsl
stc
shl
aad
push
lods
mov
jmp
call
pushf
movw
lea
call
call
push
lea
jbe
btc
sub
call
and
dec
jl
rcl
xor
mov
pop
arpl
jg
pop
mov
sbb
inc
lea
mov
push
fiadds
pop
xor
jo,pn
repz
test
add
pop
popa
rorl
lret
add
lds
cmp
xchg
dec
gs
xchg
push
mov
xor
aam
imul
jecxz
rolb
enter
xor
adc
pop
add
je
xor
inc
sti
test
stc
test
xchg
jns
mov
out
xlat
int3
fcomp
add
in
sarl
xchg
inc
fwait
mull
pop
pop
or
xor
cmp
pop
jmp
pushf
movl
lea
jno
push
movl
movb
pushl
popl
pushf
pushl
ret
cmp
call
mov
movl
push
call
imul
gs
xor
cs
insb
add
movsb
call
dec
imull
pop
mov
fisttpll
dec
rclb
adc
xlat
or
mov
pop
mov
mov
mov
out
cmp
add
mov
jmp
pop
mull
jecxz
ss
enter
iret
cmp
addr16
js
pushf
push
cmp
jmp
ss
jecxz
xchg
lcall
mov
imul
les
sbb
in
mov
mov
xorl
push
ds
cmp
mov
mov
pushf
mov
call
aam
lret
jns
rcrl
lret
fs
stos
push
lret
cmova
and
arpl
inc
es
adc
cmpsb
xor
dec
imul
jge
xchg
add
mov
add
or
pop
sub
jo
test
pop
jbe
mov
or
cmp
negl
inc
insl
subl
test
push
mov
xchg
xchg
jmp
cmp
jne
in
pop
mov
inc
arpl
dec
lea
test
leave
in
xchg
int3
lock
jmp
adc
push
bt
rol
call
xchg
pop
jle
add
mov
jge
lahf
mov
inc
jo
push
and
test
popa
cld
or
cmp
push
xlat
movsl
into
out
jg
mov
and
push
fmull
adc
mov
xchg
loopne
repnz
inc
xchg
into
dec
les
mov
pop
adcl
psadbw
imul
xor
xor
imul
pop
sbb
int3
push
iret
and
sbb
imul
push
pop
cmp
jb
or
push
xor
sub
or
movsb
sarb
pushf
jns
push
adc
lret
sbb
test
subl
sti
mov
std
loop
cmp
inc
sbb
adcl
adc
add
xor
and
inc
cmp
das
ds
or
and
cmp
loop
add
mov
mov
sub
repnz
int
cmc
cltd
icebp
jo
mov
test
push
aad
mov
mov
mov
or
mov
xchg
test
push
xor
dec
jnp
mov
call
jge
and
ja
mov
dec
push
das
notl
pop
pop
ljmp
xchg
lock
hlt
scas
or
daa
repnz
pushl
outsl
incl
xchg
and
adc
mov
fwait
pop
mov
mov
xor
testl
cvtdq2ps
dec
nop
dec
mov
pop
dec
xorl
jmp
jne
jae
lock
jb
iret
jb
jg
xlat
push
dec
fisttps
pop
add
mov
je
adc
mov
rcl
inc
mov
movsb
dec
mov
insb
addr16
rorb
ja
je
test
outsl
mov
icebp
aam
xor
sbb
mov
iret
inc
int3
and
loopne
das
rorb
lock
fsubrl
pmulhuw
adc
hlt
iret
out
add
nop
dec
hlt
mov
clc
repz
mov
pop
mov
shlb
mov
adc
rcll
iret
sub
cmp
xor
pop
push
or
mov
cmp
imul
mov
jmp
bsr
lock
jns
or
dec
jmp
cltd
mov
mov
rcpps
lods
movsl
out
mov
lock
push
dec
jb
mov
push
punpcklwd
xor
outsl
xchg
jno
icebp
push
jge
nop
and
adc
cmp
mov
int
daa
test
or
push
pop
shl
push
jl
adc
shl
jb
sub
jle
loope
sub
repnz
add
icebp
bound
mov
adc
push
xlat
pop
es
data16
mov
stc
xor
add
mov
jb
in
jb
iret
push
push
daa
jbe
sbb
xchg
mov
stos
cmp
or
inc
xor
ds
sub
iret
pop
push
daa
mov
bound
out
pop
pop
pop
sub
jbe
das
adc
pop
subb
push
or
lods
jbe
push
outsl
ficoml
xchg
jno
jp
stos
cmpsb
daa
push
out
out
or
ljmp
mov
loop
sarb
repnz
mov
xor
pusha
sub
jg
call
das
ja
dec
arpl
jg
lahf
or
psrlq
pushl
je
xor
incb
jae
repnz
dec
jl
lret
aaa
adc
xchg
cli
andb
out
xchg
lock
rcr
push
pop
jno
or
pop
imul
mov
fadd
and
aas
outsl
jae
test
cmp
xor
pusha
and
imulb
sbb
pop
jo
add
addr16
ljmp
mov
mov
repnz
pusha
jae
fwait
sbb
jg
imul
psrad
shlb
jae
inc
hlt
in
nop
push
dec
mov
out
mul
cwtl
dec
notb
rcrb
outsl
lcall
jnp
pop
mov
pop
jecxz
rolb
out
jmp
and
sahf
cmc
sub
or
dec
xor
xor
push
ret
or
js
sbb
iret
and
arpl
mov
jb
mov
lods
or
xor
mov
xchg
int3
dec
push
in
jl
xor
lock
je
push
fbstp
test
negb
enter
push
jb
iret
sarb
fs
jl
vfrczps
adc
mov
mov
loope
inc
mov
hlt
les
and
mov
daa
cmovge
les
pop
shlb
out
mov
gs
in
xchg
out
mov
mov
hlt
das
sub
bound
jle
popa
xor
sub
sub
fbstp
clc
loop
jnp
add
pop
jle
das
sbb
addr16
arpl
sbb
and
sub
jno
bsr
push
das
fsts
push
xor
xchg
cmp
pop
jle
add
inc
xchg
insl
cli
int
mov
cld
jg
inc
orl
or
push
dec
dec
pop
out
lock
test
shlb
lods
jno
cmpsl
shlb
int
rcll
popa
rol
int3
das
or
xchg
inc
divb
push
pmovmskb
push
mov
add
das
popa
push
xlat
js
icebp
insl
cli
or
movhlps
jb
jl
jb
jno
xchg
push
hlt
adc
cmpl
shl
push
adc
pop
sub
mov
inc
pusha
adc
cltd
pop
mov
popf
addr16
lods
rorb
jle
push
push
mov
fsts
fbld
xchg
dec
sti
lock
aaa
ds
adc
inc
jae
dec
fxch
cmc
jmp
cli
xchg
cmpsb
imul
mov
push
ss
icebp
pop
adc
and
ss
sub
sub
inc
pop
das
push
movsb
dec
xchg
div
mov
mov
je
adc
or
and
jb
stos
iret
sub
pop
cmpsb
ss
mov
outsl
out
dec
mov
lcall
xor
iret
dec
xor
mov
push
and
pop
xchg
into
out
adc
shrl
or
push
and
inc
and
adc
push
into
xchg
mov
orb
jbe
or
mov
and
insl
scas
out
pmaxsw
sbb
pop
push
ljmp
repz
inc
jmp
push
inc
out
ret
lret
insl
mov
ljmp
dec
push
testb
test
imulb
fnstsw
adc
not
or
inc
cmc
mov
push
mov
jl
mov
and
imul
stos
out
lea
adc
cli
testb
setae
pop
lock
push
mov
arpl
dec
daa
popf
fisttpll
icebp
mov
jecxz
sbb
dec
inc
pop
add
mov
lds
pop
jns
dec
cli
push
sub
daa
shll
and
gs
pop
ja
cmp
xchg
pop
xor
cmp
adc
dec
test
mov
dec
jbe
and
scas
push
inc
push
add
jnp
orl
fadd
dec
mov
nop
push
imul
data16
add
jne
jne
cld
xor
jae
mov
bound
add
in
push
mov
lods
jge
xchg
imul
sub
and
mov
mov
cmp
adc
push
jae
add
dec
adc
cmp
es
pop
outsl
lds
inc
jmp
dec
int
jl
ret
mov
adc
stc
jno
dec
movsb
popf
dec
mov
stc
nop
icebp
pop
repnz
test
pop
and
icebp
sbb
inc
stc
pop
dec
cwtl
test
cmc
cmpl
cli
gs
pusha
sub
pop
test
and
mov
jb
repnz
imul
sub
rdpmc
ljmp
add
icebp
or
lahf
inc
loop
dec
jg
scas
aam
sub
daa
div
cmp
push
jb
jmp
mov
addr16
xchg
adc
jb
shl
pop
stos
xchg
mov
daa
mov
mov
iret
mov
fucomi
pop
psadbw
out
iret
jb
lcall
je
out
sbb
ret
icebp
add
jle
and
push
iret
sbb
das
dec
cmp
push
jge
iret
out
repz
inc
testl
hlt
inc
adc
xor
cmc
dec
lahf
loop
out
cmp
xchg
arpl
shlb
adc
daa
test
sbb
movsb
sub
hlt
pushf
xor
notb
das
les
daa
loopne
loope
fadds
in
test
jecxz
lods
je
mov
adc
cld
loope
lods
push
iret
sub
xor
test
unpckhps
cmp
test
rorb
mov
and
fmuls
dec
dec
loop
push
pop
in
insl
enter
rol
jp
push
jns
scas
and
jb
mov
jb
lods
lock
mov
clc
pop
push
add
cld
scas
xor
or
dec
xorb
orl
pop
sbb
jb
xchg
cmp
repz
aas
mov
lret
or
adc
je
cli
aas
lods
adc
jp
fistpll
add
leave
add
xor
add
test
push
xlat
lock
mov
push
mov
rcr
popa
jg
push
jbe
out
daa
out
fisttpll
pop
jmp
gs
popa
push
add
xor
aad
pop
scas
cs
sbb
add
inc
scas
add
popa
invd
push
push
pop
push
test
sbb
sub
adc
mulb
xchg
negb
mov
iret
pop
adc
es
pushl
pop
adc
adc
shrl
or
fstps
fnstsw
mov
jo
loope
dec
jmp
jb
popa
jg
lds
pop
dec
leave
push
pop
mov
das
scas
fnstenv
rol
sub
in
adc
jmp
jg
fcoms
xor
mov
ja
xchg
clc
popa
push
iret
iret
ss
scas
iret
aad
add
push
and
arpl
test
xor
je
pop
mov
jb
mov
sub
inc
scas
test
pop
mov
jo
xchg
clc
jb
inc
push
cs
fists
iret
sub
xor
stos
iret
adc
push
adc
std
lock
adc
lock
stc
adc
pop
addr16
cmpsb
pop
push
mov
bound
sahf
dec
mov
outsb
mov
inc
gs
mov
fidivl
mov
pop
xadd
or
lret
sub
pop
xor
xor
jbe
inc
push
mov
data16
cld
lcall
sahf
rcll
jle
sbb
xor
das
xor
xchg
mov
or
and
fimull
sarb
paddw
ljmp
rorb
pusha
faddp
pushf
cld
ja
mov
xlat
and
pop
sahf
lock
cmp
add
jnp
jecxz
roll
mov
add
xlat
ja
jo
incl
out
cmp
and
xorb
int3
lods
fwait
sbb
out
mov
rcrl
cli
ljmp
cmp
add
outsl
repnz
notb
mov
xor
divl
daa
movsl
pop
dec
fwait
jne
das
xlat
addr16
and
bnd
jmp
and
inc
ror
bnd
stos
mov
adc
or
adc
sarl
xchg
sub
jl
out
insl
dec
sbb
xchg
sti
sbb
imul
hlt
shr
aaa
in
dec
jo
notl
pop
pop
jo
test
repnz
clc
rcrl
outsl
sub
mov
fbld
cmc
sarb
divb
test
pop
jl
testb
stc
sahf
mov
shlb
cmp
dec
sti
add
aad
push
mov
fidivrs
lds
jae
cld
and
repz
iret
lcall
stos
mov
and
sti
and
jmp
scas
pop
dec
mov
sub
sbb
jno
test
push
enter
and
jae
std
cmp
mov
mov
xchg
inc
incb
jp
jp
add
scas
outsl
popa
test
ja
mov
sbb
xchg
addr16
add
test
daa
movsl
or
mov
stc
or
insl
push
jle
add
push
cmp
fsubp
repnz
add
add
add
imulb
insl
fcmovnb
mov
addb
std
and
push
cli
or
push
jbe
cli
cld
add
jnp
mov
cs
jg
andb
test
pop
stmxcsr
outsl
mov
jo
out
repnz
rcr
jge
out
addr16
mov
and
loop
add
hlt
mov
push
lahf
rorb
pop
mov
mov
in
pusha
lods
dec
popa
out
push
sub
ljmp
jb
ljmp
cltd
icebp
incl
ljmp
sub
mov
sbb
imul
les
mov
xor
rolb
push
testb
push
cld
pop
mov
sub
jl
push
popf
aaa
cld
pop
lods
test
ja
xchg
jnp
int
lahf
jg
punpckldq
aaa
mov
and
fisubrs
movswl
sub
jmp
add
loope
sbb
cmp
pop
sbb
fists
jo
push
test
mov
clc
and
add
pop
fs
mov
out
xor
lret
div
js
add
mov
adc
xchg
clc
mov
mov
addr16
cmp
iret
add
mov
aam
push
jb
inc
xchg
jl
je
push
psadbw
jl
out
xchg
jo
int3
xchg
mov
aaa
call
outsb
adc
idiv
hlt
shll
adc
jmp
add
xchg
mov
sbb
mov
rclb
iret
cwtl
daa
xor
add
lock
mov
mov
jle
and
enter
int3
fdivrs
inc
push
xchg
fcoml
in
sbb
loope
and
sbb
mov
pop
aam
rcll
adc
xchg
jne
rolb
xor
mov
or
add
mov
pushl
xchg
clc
mov
jo
loope
sbb
adc
adc
mov
cmp
pop
popa
xbegin
inc
clc
aas
xor
mov
jnp
xor
cmc
iret
gs
dec
popf
cld
mov
adc
adc
mov
test
adc
add
cltd
cmp
jle
sub
outsl
mov
jns
out
mov
fsubr
jns
sar
pop
dec
iret
iret
imul
rol
jb
dec
pushl
mov
test
loope
pusha
outsl
jmp
shlb
fcomip
popa
std
mov
adc
jg
add
js
cmc
jns
push
adc
nop
pop
mov
nop
outsl
loopne
xchg
mov
sbb
cltd
cld
rcl
pop
ljmp
lods
movsl
in
mov
popa
push
mov
fists
push
nop
mov
and
aad
out
frstor
out
loope
rorl
jp
jg
dec
xchg
and
data16
mov
sub
dec
cs
dec
iret
lock
nop
pop
rorb
add
inc
shlb
push
loop
mov
mov
subb
push
cmpsb
imul
cmp
cmp
cmp
out
cmp
mov
ret
cmp
push
orb
push
jle
scas
ljmp
std
jle
notb
sbb
loop
mov
cmp
mov
rol
mov
das
lret
scas
outsl
mov
pop
faddp
mov
sbb
pop
sbb
popf
std
repz
cli
testb
in
or
add
xchg
add
movsl
push
pushf
stos
popf
adc
mov
cmp
call
je
or
testb
hlt
mov
clc
call
je
mov
clc
sbb
imull
sti
je
repnz
stc
lret
movntq
jae
mov
pop
dec
sbb
and
push
sub
mov
add
icebp
call
iret
or
pop
pop
aas
sarl
dec
push
stos
mov
scas
sub
sbbb
push
aas
sub
jae
jg
sbb
scas
add
sbb
inc
pop
icebp
lock
shl
sti
cmpl
sbb
add
sahf
cs
xor
push
adc
shrb
inc
je
idiv
jmp
movb
arpl
cmp
jo
enter
mov
inc
aaa
mov
div
scas
cmp
mov
add
and
pop
dec
sub
push
jb
lock
push
ds
dec
fwait
jae
stos
fcompl
cmp
icebp
push
jbe
es
and
xchg
fs
dec
jle
test
movsl
dec
inc
adc
shl
lea
idiv
dec
icebp
ss
scas
xor
pop
arpl
xchg
pop
stos
daa
les
ret
xor
bound
jbe
pop
leave
scas
iret
inc
add
ss
lock
ret
in
jmp
rcl
sbb
testb
cld
mov
cltd
sti
jo
shlb
ret
jle
push
pop
mov
cmpl
repz
sti
jo
mov
ja
sub
imul
mov
xor
adc
mov
adc
iret
sbb
gs
sbb
mov
xor
add
fnstenv
stos
xlat
jle
aaa
mov
jbe
aam
push
jno
pop
xor
jecxz
adc
inc
mul
mov
outsl
or
adc
cltd
jo
mov
or
sti
imul
sarb
push
xchg
dec
mov
stc
rcrl
insl
rorl
add
xor
addr16
aas
jnp
or
cli
mov
jns
dec
test
dec
aas
jae
mov
repz
ret
cmp
in
cltd
adc
icebp
cli
or
mov
stos
xor
daa
cmp
adc
mov
fs
nop
addr16
jp
sub
or
cli
xor
add
jnp
push
in
pop
cmpsl
lret
aam
lret
add
popa
sbb
push
jl
mulb
mov
pop
dec
or
loopne
scas
dec
mov
jnp
cmp
aaa
pop
push
int3
repnz
cmp
rcl
sbb
push
push
mov
leave
dec
std
xor
mov
cli
fs
negl
xor
aas
push
xchg
pushf
scas
lret
adc
xor
mov
daa
decl
pop
dec
adc
mov
xor
add
push
in
dec
jmp
push
jl
pop
sbb
mov
pop
lcall
out
pop
pop
in
xor
pusha
cmpb
fsubl
idivb
cmp
mov
ret
es
sbb
mov
sub
repnz
es
scas
inc
xchg
outsb
mov
les
sbb
stc
xchg
sahf
dec
repnz
mov
jbe
scas
push
sahf
xchg
mov
data16
shrb
repnz
dec
lahf
repnz
test
mov
scas
adc
xor
dec
into
pop
inc
testl
jae
xor
xchg
xlat
sbb
cmc
jb
or
add
sahf
pop
test
xchg
pusha
in
xor
push
loopne
cmp
je
shl
pop
push
das
cli
icebp
aaa
call
lock
inc
jb
test
repnz
punpckldq
les
xchg
xchg
and
frstor
int3
enter
push
dec
pop
and
ljmp
imul
cli
mov
icebp
sbb
and
jnp
xor
in
adc
icebp
mov
ljmp
jmp
mov
push
cli
out
and
adc
loope
cmp
in
cmp
dec
lods
lock
pop
push
imul
decl
in
xlat
cmpsl
outsl
mov
dec
inc
loop
add
jle
jo
jne
mov
cmp
pop
pop
or
cmp
rclb
mov
jmp
cmp
fwait
adc
fbstp
iret
dec
mov
mov
cld
xchg
out
push
mov
stos
push
aas
adc
insb
sub
shl
fistps
adc
or
adc
sub
lret
aaa
rol
loopne
std
test
shlb
shrb
fisttps
enter
adc
ljmp
xchg
iret
lock
cmpsb
ds
fnstsw
dec
jle
jb
fwait
xchg
dec
loopne
and
cli
js
sbb
fcomip
ljmp
mov
mov
pop
scas
add
loop
loopne
fistps
hlt
jecxz
adc
popf
mov
test
loop
sti
dec
sub
adc
adc
jecxz
sbb
flds
ljmp
ror
mov
sbb
lock
inc
mov
or
out
sbb
shrl
iret
out
and
out
dec
jle
sub
adc
imul
fnstcw
mov
stos
add
cld
mov
jl
mov
stos
push
xor
inc
cmp
out
dec
jno
dec
inc
add
in
arpl
jecxz
insl
gs
xlat
or
das
jg
pop
scas
aaa
dec
dec
icebp
cmp
daa
int
fistl
sbb
jbe
sti
add
pop
mov
ds
jp
inc
je
out
fwait
arpl
or
xchg
lea
mov
imul
mov
test
addl
sub
mov
sbb
adc
sbb
aaa
out
mov
push
cli
dec
lods
movsl
sbbb
rcr
xor
fldcw
dec
inc
out
mov
mov
push
cmp
dec
repz
fwait
adc
out
inc
outsl
lahf
jg
loope
aaa
fnsave
mov
mov
es
bound
shlb
in
mov
mov
insb
sbb
adc
pop
push
inc
out
push
xor
pop
xchg
inc
outsl
xorl
xchg
xlat
or
out
jne
xor
pop
outsl
jb
ljmp
and
add
adc
in
jo
push
inc
sub
adc
sahf
xchg
push
ljmp
jge
xor
jl
dec
lock
jg
movsl
jmp
dec
or
test
sub
aam
cwtl
inc
pop
and
push
inc
stc
jmp
or
ja
add
ljmp
cli
cld
lea
push
lock
push
or
lock
inc
repnz
sub
lahf
xchg
test
xor
out
shlb
add
notl
inc
std
aas
mov
jg
push
pop
int3
jp
dec
repz
or
filds
loope
mov
daa
sbb
sbbl
xor
sbb
mov
inc
jmp
mov
xorl
sarb
adc
inc
jmp
sbb
push
or
push
cmp
and
sbb
popl
pushf
rolb
lods
movsb
add
push
jae
pop
mov
pop
scas
out
adc
lods
rcrl
cmp
scas
rolb
imul
or
pushf
mov
mov
pusha
dec
daa
notb
xchg
cmpsl
loopne
ljmp
sub
inc
cmp
loop
and
std
in
mulb
sub
mov
loop
loopne
das
pop
xchg
push
jo
iret
add
lea
cmc
shr
rol
rclb
loopne
jle
sub
loope
adc
repnz
push
inc
jl
sbb
inc
mov
jo
imul
inc
das
xchg
mov
addl
rcll
outsl
jo
push
jmp
loopne
add
sarl
push
cmpsl
push
outsl
test
iret
mov
std
jae
adc
dec
mov
into
mov
shll
outsl
inc
dec
jle
jb
push
dec
mov
mov
icebp
mov
stc
outsl
lahf
push
fnstenv
sub
out
daa
mov
adc
xchg
mov
decl
mov
lds
mov
mov
popa
test
and
loope
imul
and
rorl
scas
stos
or
adc
mov
test
outsl
ljmp
mov
js
inc
icebp
push
leave
shl
jo
xorb
jl
add
aaa
nop
cld
loopne
sub
aas
daa
push
add
sub
outsl
and
iret
jne
or
add
jns
pop
leave
sbb
cmp
and
jp
push
icebp
les
adc
cmpb
or
lcall
cmp
jmp
loope
jo
mov
int3
sbb
cmp
jg
arpl
dec
inc
or
cmp
xlat
or
mov
movsb
add
cmp
sbb
jle
pop
loop
scas
mov
dec
std
mov
add
add
lea
out
jno
ljmp
icebp
dec
cld
shl
loopne
sbb
loope
and
jne
loopne
push
jp
pop
xchg
out
adc
jno
sarb
mov
jmp
pop
pop
cmpl
bound
and
jno
jne
rorb
xchg
imul
imul
push
xorb
jl
loopne
not
adc
jno
into
adc
data16
or
dec
jge
sub
sub
in
xchg
cld
dec
incl
xor
adc
adc
pop
push
out
push
push
xor
outsl
cltd
lea
bound
lret
movsb
testb
aas
xchg
xchg
mulb
or
pop
push
sbbb
jmp
cmp
fwait
inc
adc
mov
cld
sbb
jbe
cmp
mov
sarb
add
mov
gs
cli
icebp
int3
rolb
mov
shll
iret
xchg
and
add
or
cld
sahf
adc
out
dec
push
daa
ljmp
rcrl
xchg
aas
movsl
popf
popa
pop
cltd
xchg
mov
xchg
jmp
scas
loopne
icebp
insl
fisttps
or
call
cmp
jp
stc
jno
icebp
ss
xor
mov
shr
inc
shrb
push
add
mov
jb
cmp
inc
ret
iret
sub
scas
out
loope
jg
inc
cmp
add
lcall
stos
das
filds
imul
add
mov
mov
shrl
adc
inc
push
xor
mov
add
icebp
jb
bound
dec
dec
ds
in
cmp
aaa
bound
mov
subb
mov
scas
adc
cld
clc
push
loope
adc
adc
rcll
ljmp
loop
jbe
sarb
cmp
das
outsl
jle
xor
xchg
rorb
cmpsb
in
imul
mov
cmc
sub
in
jo
push
push
rcl
xor
cmpsb
mov
bound
inc
mov
icebp
loop
push
int3
icebp
bnd
sub
inc
jae
sub
sbb
jne
xor
aad
shll
into
xchg
push
fbstp
addr16
lock
lock
dec
inc
incb
push
dec
inc
lahf
cmpl
and
cmp
ret
orb
aas
das
lock
mov
cmp
sbb
mov
es
lods
popf
stos
movsl
pop
push
pop
lods
je
insb
pop
mov
jnp
sub
sbb
or
orl
xor
adc
cmp
cli
lods
incl
out
fcmovbe
adc
lock
aas
repnz
icebp
push
js
add
cld
loop
or
repnz
dec
dec
mov
outsl
shrd
sub
mov
testl
and
inc
lock
loopne
push
inc
jb
xchg
leave
inc
test
jo
sub
mov
sbb
sub
xor
mov
add
mov
inc
rorb
adc
out
fwait
aam
xor
sbb
xor
mov
jle
shlb
lock
xlat
or
pusha
cmpsl
and
inc
loopne
adc
or
add
xchg
js
cmpps
dec
std
bound
jne
aam
inc
shl
pop
andl
loopne
daa
repnz
fwait
lea
sub
mov
ret
inc
icebp
aas
jle
lea
push
and
fildl
cmpb
pop
sbb
dec
in
lock
imul
and
daa
mov
rcrb
adc
sub
int
testb
imul
loopne
jle
subb
add
loopne
mov
adc
xchg
mov
xchg
inc
sub
mov
loope
loopne
pop
sbb
pop
cmp
jp
sub
jo
xor
sub
add
and
lock
dec
jmp
pop
mov
add
jmp
push
sbb
stos
lret
incb
lods
cmp
mov
hlt
js
cmpsb
rcll
sub
rcrb
push
vmovaps
jno
out
loopne
fimull
scas
imul
cmc
outsl
pop
jns
cmp
idiv
leave
xor
dec
sub
sub
mov
loopne
sub
gs
and
loope
into
xchg
adc
push
dec
cmc
adcb
mov
mov
nop
std
add
xor
push
fstl
aas
cmpsb
push
loop
mov
iret
shrb
sbb
add
je
push
pop
push
jecxz
out
pop
test
dec
decl
add
roll
or
bound
imul
aas
xchg
popa
loopne
std
add
outsl
push
push
sbb
jne
stos
add
xchg
xchg
jb
add
cmp
adc
jle
sub
jbe
aad
mov
shlb
repz
loope
pop
dec
cld
xor
push
jp
mov
lahf
sbb
xor
lahf
ja
movsl
jns
mov
mov
ficoml
fwait
ret
mov
sbb
out
sub
inc
mov
add
iret
xchg
and
je
outsl
add
loopne
and
adc
or
fwait
xor
ss
cmp
insl
xchg
rcrl
cmp
mov
adc
adc
mov
pop
lods
cld
test
jo
lock
mul
dec
dec
push
cmp
shl
push
mov
push
cmpsb
xchg
iret
lret
and
inc
popl
cmp
jg
adc
lock
xlat
rcrl
sbb
cmc
xor
mov
orl
out
and
adc
popa
out
add
mov
insl
jle
jle
mov
fdivp
xor
loopne
sub
jle
adc
imul
jmp
sub
push
in
dec
pop
shrl
jmp
push
jmp
mov
in
pop
xor
insl
das
push
add
imul
shl
sbb
ljmp
loope
out
and
jle
fidivl
sahf
repnz
push
jbe
fisttps
jb
xor
dec
jp
jge
inc
rcrl
adc
jb
cmp
adc
popa
loop
popa
or
inc
sub
dec
mov
divb
sbb
push
and
add
add
cltd
imul
mov
jo
pop
lock
xchg
subb
inc
adc
push
dec
push
dec
bound
inc
adc
and
popa
shl
mov
cmp
jb
lret
ret
fcmovnbe
stos
loop
adc
hlt
sub
mov
lea
lods
insl
jp
call
xchg
jae
stos
popf
mov
adc
fwait
mov
jg
xor
jl
lods
dec
notb
push
xchg
cmp
jne
sbb
out
pop
mov
fcompl
ud0
add
cwtl
jg
xchg
sbb
jno
push
shll
sbb
fiaddl
rolb
fwait
popa
pcmpeqw
adc
adc
fs
pusha
mov
or
mov
mov
fcom
push
xchg
lret
testb
cmp
sbb
inc
sbb
push
adc
in
adc
icebp
adc
sbb
adc
lahf
push
es
cmpsl
ret
cmp
jg
test
adc
divb
and
fwait
cmp
add
hlt
jae
xchg
sti
iret
push
mov
pushl
rorb
add
out
hlt
xchg
xchg
jae
rclb
lods
mov
jmp
mov
jb
adc
leave
mov
popa
sbb
adc
cltd
push
jg
data16
popa
xor
jg
test
adc
inc
push
jmp
xchg
popf
add
bound
jns
add
js
pushf
xor
jecxz
push
or
push
lods
sahf
orl
andb
mov
in
cmp
lock
jle
flds
xor
xchg
push
ffreep
psubq
sbb
jp
push
nop
sbb
cmc
add
sahf
xchg
adc
mov
push
scas
scas
push
loopne
jp
push
pop
mov
adc
adc
mov
mov
jmp
out
lock
push
mov
mov
rolb
adc
cmc
in
fnsave
adc
mov
push
xlat
inc
ds
add
cltd
cmp
inc
sarb
inc
ret
sbb
push
adc
or
pop
lock
pushl
jbe
cwtl
add
bound
adc
jno
int
addps
mov
testl
dec
das
jns
pop
inc
loop
push
imul
xchg
push
repz
jmp
or
rolb
add
test
jae
lods
fwait
movsb
push
lock
scas
inc
aad
ficoml
scas
into
and
xchg
adc
jl
pop
dec
inc
iret
movsl
aas
sbb
out
cmp
xor
jle
data16
aas
aas
xchg
mov
mov
jnp
setb
xchg
push
adc
and
in
nop
in
ljmp
aad
rolb
inc
xor
lcall
mov
popa
lahf
cmp
xor
mov
fwait
ja
insb
sar
and
in
cltd
xorb
ret
aas
loop
ret
shl
inc
cmp
push
jge
jg
jl
jnp
ret
or
outsl
adc
not
test
xor
je
mov
loop
jp
mov
push
dec
push
out
lahf
mov
or
stos
xchg
mov
add
xchg
lock
push
lock
pop
push
jne
aam
add
cltd
push
inc
xor
dec
mov
lods
lahf
fwait
movsb
fsts
push
sbb
xor
insb
jae
or
mov
sub
out
cmp
repnz
pop
fwait
cmp
cmp
loop
out
clc
mov
ljmp
mov
imul
jmp
repnz
jl
outsl
adc
jl
mov
xor
rcll
or
and
mov
xchg
mov
test
adc
push
ret
jp
iret
inc
xor
repnz
daa
push
inc
jnp
cwtl
xor
xchg
icebp
popa
pop
mov
and
sub
nop
mov
add
jg
sbb
adc
cli
sub
les
aaa
daa
jp
test
inc
daa
aaa
sub
jl
adc
xor
cwtl
nop
dec
aaa
xchg
lret
decl
inc
lods
movsb
cmc
xchg
add
iret
and
xor
aad
adc
xchg
decl
lods
test
rcr
daa
mov
repnz
jmp
into
sti
ud2
adc
and
jp
sbb
push
xor
xor
xchg
or
adc
shll
sub
push
and
pop
or
or
adc
aas
pop
or
push
mov
push
icebp
sbb
jo
jmp
imul
mov
test
and
icebp
leave
pop
push
out
xor
popf
pop
icebp
in
jecxz
jnp
and
jb
jmp
mov
xor
pop
jb
ljmp
popa
jno
inc
shll
mov
fistl
outsl
dec
loope
sti
mov
js
fiaddl
dec
gs
adc
loop
shr
mov
rcr
imul
jmp
cld
outsl
cmp
out
loopne
ljmp
and
cmp
push
mov
cli
and
or
out
les
sarl
std
shrl
jl
add
lsl
mov
outsb
imulb
jae
repz
mov
or
repnz
aas
pop
cmp
xor
mov
push
inc
sub
movsb
mov
imul
mov
pop
xchg
xchg
xor
mov
push
inc
shlb
push
cmp
dec
pop
add
loope
rcl
cmp
lods
pop
notb
sub
outsl
xchg
shl
cld
stc
adc
ljmp
adc
aam
xor
loopne
aas
jo
or
jns
push
rcrl
in
js
push
pushf
iret
dec
out
leave
stos
lcall
outsb
sub
push
dec
fistpll
popa
pop
jnp
jp
sub
fs
push
icebp
mov
aas
cmp
push
inc
cmpsl
jg
les
inc
jbe
rorl
iret
pop
shll
idivl
shll
scas
xor
and
ret
jmp
inc
rclb
dec
loope
cmp
pop
pop
testb
adc
int3
dec
dec
std
imul
dec
loope
push
xchg
jg
add
adc
mov
shrb
icebp
mov
sub
loopne
test
das
lea
cmc
loop
mov
rolb
scas
or
not
fisttpl
push
mov
icebp
xchg
out
mov
pop
fcompl
sar
or
sbb
push
pop
test
push
ss
push
adc
push
adc
lret
inc
inc
add
jb
xchg
out
sub
cmc
xchg
xchg
sbb
lock
push
fwait
clc
mov
scas
push
dec
lock
xchg
xchg
ljmp
lock
mov
adc
cs
and
cmp
add
add
xchg
pop
mov
jb
sbb
jb
sti
mov
cmp
xchg
repz
dec
mov
xchg
lock
sbb
jno
xor
jns
dec
cvtdq2ps
mov
loope
mov
xchg
or
cmc
mov
or
lea
out
notb
jmp
adc
outsl
mov
and
xor
imul
in
push
pop
inc
add
jb
inc
cmpb
cmp
loop
in
sub
mov
mov
sahf
mov
mov
pop
je
icebp
out
pop
in
popf
cltd
jb
test
adc
or
in
loope
call
add
jne,pt
or
in
pop
cmp
adc
mov
mov
jbe
inc
push
jbe
mov
jle
sbb
pushf
dec
inc
xor
adc
jne
es
scas
sub
dec
cmp
mov
xor
div
loope
rcl
pusha
std
shlb
add
jmp
pop
cmp
jnp
jne
and
lock
xor
test
adc
insl
repz
das
loop
adc
mov
stos
dec
jb
mov
cld
add
rcll
or
add
inc
aas
mov
inc
cmpsl
mov
xchg
aas
jbe
push
loope
mulb
idiv
sbb
jnp
pop
les
in
ja
test
jne
adc
inc
lods
shlb
lock
test
fstp
or
xor
and
loope
call
shl
and
stos
outsb
sbb
adc
mov
push
mov
inc
mov
iret
lahf
jp
sbb
mov
fidivs
adc
mov
out
rcrb
add
imul
out
pop
std
fucomp
adc
jb
xor
mov
push
scas
shll
cs
stos
jne
mov
mov
lods
cmpb
loopne
cwtl
mov
pop
lahf
repnz
dec
inc
fidivrs
icebp
iret
pusha
shr
or
mov
pop
stc
push
ljmp
mov
loope
ret
inc
xchg
lock
std
jne
jno
es
adc
mov
mov
xchg
fsubs
xor
ja
ljmp
inc
lahf
bound
mov
pop
out
mov
dec
dec
or
mov
xlat
loope
xchg
repnz
daa
lods
dec
push
push
lods
inc
push
mov
ljmp
mov
sub
cwtl
aas
push
andl
jg
inc
icebp
das
add
mov
in
fdivs
mov
add
jno
scas
xor
mov
xor
xchg
inc
push
movsb
out
inc
icebp
adc
out
in
mov
icebp
xor
jne
push
das
fdivl
cmc
dec
and
mov
jg
sahf
inc
xor
aas
leave
sbb
pusha
fadd
dec
xorb
push
adc
imulb
mov
cld
add
push
push
mov
pop
imul
pop
clc
rclb
jp
incl
ss
cmp
sub
mov
cmp
das
xchg
xchg
or
ret
js
outsb
pop
lock
std
push
xchg
dec
or
ret
inc
mov
fldl
adc
xchg
repnz
rcll
call
mov
adc
cld
in
pop
push
xor
adc
xchg
mov
inc
sub
pop
fcmovb
call
into
fcoms
pusha
mov
out
shlb
outsl
lock
jle
scas
andl
push
adc
not
rolb
repz
test
mov
or
xor
sub
stc
adc
xor
ljmp
adc
mov
adc
leave
mov
cs
in
push
popa
push
fimull
imul
stos
sub
inc
int3
jno
fidivrs
es
les
xchg
das
pop
mov
xor
push
mov
ss
pop
sub
icebp
sarl
adc
mov
cmp
icebp
xchg
in
dec
test
dec
rolb
add
test
inc
rcll
xor
pusha
in
aas
insb
adc
jg
xlat
pusha
or
xor
adc
div
cmc
adc
push
ret
stos
idivb
xorb
repnz
xchg
roll
das
inc
out
and
rolb
pop
and
subb
inc
pop
icebp
scas
or
add
inc
stos
cwtl
nop
int3
sbb
imul
mov
call
mov
jno
lods
movsl
cld
dec
lods
mov
rcr
outsb
idivb
iret
loop
sbb
loop
out
adc
call
cmp
dec
and
lahf
and
idivb
out
push
push
and
sub
mov
and
xor
pop
pop
xor
mov
aaa
xor
mov
xor
mov
push
mov
imul
pop
icebp
jno
and
push
add
das
mov
loope
gs
call
rorb
bound
mov
mov
add
cld
push
aas
sbb
gs
out
sub
add
shrb
stos
adc
xor
loopne
xor
adc
mov
xor
inc
and
inc
xor
fwait
mov
or
divb
cmp
out
mov
and
daa
icebp
lcall
aaa
xorl
shlb
dec
mov
rcrb
jns
outsl
mov
movq
lods
mov
in
push
mov
and
jg
out
sbbl
adc
sbb
nop
icebp
xchg
lock
mov
negb
ficomps
lock
jge
jns
sub
aam
dec
xchg
icebp
sbb
cmp
les
push
pusha
aaa
adc
mov
jo
cmc
jmp
inc
ljmp
jns
xchg
gs
inc
push
gs
adc
add
cltd
lcall
movsl
imulb
or
or
sub
es
ljmp
and
mov
inc
stos
adc
icebp
xor
data16
bound
mov
ret
stos
mov
or
repz
push
jg
std
loopne
inc
dec
adc
loopne
inc
sbb
dec
stc
and
add
dec
cmp
mov
fwait
mov
outsl
inc
cmp
xor
dec
add
or
mov
ljmp
scas
and
incl
orb
sbb
out
imul
push
icebp
icebp
lcall
cmpxchg
fstps
jne
jno
adc
idivb
push
xor
adc
adc
jnp
out
adc
mov
mov
dec
push
jg
mov
and
outsb
out
inc
shrl
xchg
das
push
and
loopne
aaa
mov
add
lock
ja
sub
and
imul
faddl
inc
daa
shl
jmp
or
push
iret
iret
sbb
rcrb
inc
push
xlat
icebp
lock
loopne
stos
addb
inc
jp
xchg
popa
inc
mov
clc
and
jno
adc
aaa
test
jg
dec
shll
add
cmc
pop
aad
ror
cmp
sub
sub
repz
or
inc
shrb
xchg
inc
xor
ljmp
jne
mov
out
fs
loope
sahf
imul
rclb
or
sbb
gs
out
push
call
jo
cmp
jnp
ljmp
jg
inc
xor
bound
or
mov
mov
push
xchg
pop
push
xchg
and
cs
scas
outsl
int
push
leave
push
shrl
adc
scas
adc
add
movsl
inc
outsl
popf
rclb
jmp
push
pop
loope
add
push
or
icebp
jno
in
call
ljmp
mov
mov
push
xor
mov
andl
xor
sbb
cmpb
jno
mov
jo
lret
repnz
lcall
ret
mov
lret
repz
out
adc
jg
adc
outsl
push
aad
cmp
ja
outsl
aas
add
inc
cmp
adc
icebp
xchg
pop
push
in
stos
cmpsb
sbb
lcall
loopne
cmc
jg
inc
pusha
mov
rcl
ret
pop
mov
adc
scas
fwait
dec
xor
cs
lret
push
es
jae
mov
mov
out
sbb
fwait
sbb
mull
inc
xchg
xchg
mov
out
xchg
mov
xchg
cmp
out
jg
clc
mov
rolb
pusha
scas
icebp
jae
shl
cld
hlt
stos
mov
sbb
ljmp
xor
xchg
adc
inc
xor
shll
sbb
adc
mov
pushf
inc
jp
sub
mov
ss
and
or
or
out
xchg
dec
adc
xorb
push
mov
adc
testl
dec
xor
jb
and
imul
test
pop
popa
jg
imulb
clc
stos
dec
sbb
push
xchg
adc
pop
inc
or
adc
add
xor
stc
rol
sub
cmp
push
fmul
inc
inc
fidivrl
loopne
jnp
imul
pop
add
loop
bound
inc
jo
pushl
mov
mov
and
nop
xor
mov
dec
inc
mov
xchg
mov
cmp
icebp
loope
ljmp
add
sbb
push
loope
addr16
xchg
or
jbe
mov
cmpsb
mov
icebp
and
fwait
push
jno
pop
outsb
push
lds
mov
jb
mov
xor
dec
rcl
rorb
loop
loope
lret
cmpsl
sarb
xchg
jp
cmpsb
icebp
ret
nop
mov
fnsave
xchg
mov
cmp
jmp
loop
or
enter
cmp
fs
cmp
fs
jno
adc
mov
add
adc
xchg
ljmp
int3
pminsw
outsb
adc
cmpsl
and
sbb
lods
xor
sahf
mov
mov
push
daa
push
jns
mov
fisubrs
xor
shrb
loop
inc
adc
pop
jns
das
mov
psrld
call
lcall
jne
jle
fimull
xchg
and
daa
cld
xchg
je
xchg
loope
loopne
insb
out
pop
pop
test
ss
rol
paddusw
scas
lcall
shr
or
pop
loope
cmp
into
lods
lock
popa
or
inc
add
mov
sub
mov
out
in
loopne
sar
jae
ret
pop
shll
and
rcll
loopne
mov
pop
xchg
pop
dec
inc
shlb
push
dec
loop
insl
sbb
aaa
jl
jo
jnp
sbb
xchg
inc
push
lea
sbb
rcl
adc
mov
icebp
and
cmp
call
inc
cs
out
scas
repnz
adc
mov
sub
sbb
jle
cltd
mov
div
adc
pop
fdivr
shl
xchg
ja
push
push
adc
jne
repnz
dec
cmc
cld
mov
outsb
andb
repnz
lds
into
sub
repz
or
insl
lcall
xor
rorl
mov
js
sub
repz
add
ficoms
and
das
loopne
repnz
xchg
orb
stos
jno
sbb
dec
cwtl
out
jb
mov
mov
cs
fsubrl
push
sbb
fisttps
cmpsl
jg
push
xor
dec
fistpll
repnz
ljmp
mov
loop
jbe
jle
mov
xor
or
lss
mov
and
xor
rcrb
and
sub
sub
ret
rolb
or
mov
pop
repnz
sub
psraw
out
cld
ja
cs
ret
in
incl
mov
pop
repnz
dec
xchg
adc
adc
out
inc
loopne
add
pop
pushf
mov
push
pop
outsb
aaa
lods
test
adc
loop
loope
adc
mov
adc
mov
xchg
ljmp
adc
jo
in
push
test
addb
das
adc
xor
adc
add
sbb
mov
icebp
jbe
in
add
and
scas
subb
or
sbb
push
inc
jb
jmp
ss
mov
lea
sbb
pop
mov
loop
mov
jle
mov
sbb
loope
lds
nop
dec
mov
js
xor
imul
and
push
adc
movsb
mov
inc
aam
adc
dec
mov
ljmp
test
add
loop
bound
js
shrb
jbe
xchg
std
hlt
lock
ror
test
sahf
mov
and
xor
call
adc
jmp
xchg
xchg
jnp
sahf
mov
sti
or
repz
subl
loopne
roll
mov
in
lock
aad
ficompl
movzbl
subb
xchg
cmp
pop
push
mov
sub
cmp
cmp
nop
mov
pusha
adc
in
sar
mov
sub
ds
add
sub
int3
call
adc
ja
fimull
cld
pop
sarb
cltd
lahf
mov
fcos
loop
subl
aas
scas
jns
or
insb
subb
add
fldcw
and
jmp
adc
mov
mov
jge
data16
inc
xor
in
and
incl
lods
mov
mov
decl
insl
aam
cmc
in
pop
push
jnp
sbb
cmp
punpcklbw
ljmp
stos
mov
subl
push
hlt
xor
mov
ja
out
insb
xchg
xchg
sub
sbb
int
mov
lcall
shlb
scas
dec
cs
sub
rorb
sbb
fstpl
mov
xchg
mov
jp
inc
jle
push
shlb
out
mov
call
in
das
incl
outsl
test
sbb
sbb
jae
bswap
enter
jne
inc
push
and
adc
fsubrl
pop
nop
mov
icebp
gs
aas
outsb
in
loope
mov
jmp
mov
fxam
in
xchg
sub
cmp
imul
aad
mov
into
hlt
mov
cbtw
mov
mov
mov
js
jo
or
outsb
icebp
loope
mov
dec
or
subb
loop
dec
push
cmp
pop
fsts
inc
and
js
adc
xchg
insl
clc
cmc
lcall
mov
enter
add
imul
xchg
into
xchg
ret
popa
and
insl
or
insb
or
xor
cmc
data16
mov
fisubs
das
outsl
sbb
shl
or
sar
icebp
in
inc
insb
jle
subl
incl
pop
dec
aaa
enter
push
into
repnz
mov
mov
adc
inc
cli
jg
stos
cmpsl
jb
add
lea
dec
call
shlb
cmp
je
push
das
les
in
cltd
pop
xor
xchg
dec
cmp
shrb
loopne
hlt
inc
mov
fmul
xchg
cmpl
das
adc
dec
ret
test
iret
adc
jae
jp
in
mov
jne
insl
jns
inc
xchg
insb
push
push
jbe
or
movsb
ret
add
shlb
push
xchg
inc
fisubrl
add
out
xchg
lods
sti
jp
nop
in
jle
mov
cmpsl
mov
add
jnp
pop
loopne
repz
outsl
jmp
jp
sub
dec
jg
inc
test
xor
js
lock
xchg
jp
test
insb
pushf
cmpsb
xchg
cmp
subb
lahf
jmp
xor
add
into
pop
push
inc
testb
lods
sub
adc
xchg
testb
imul
loopne
je
add
das
lock
mov
pushf
das
bswap
inc
cmp
out
imul
sbb
mov
in
inc
shlb
mov
mov
push
dec
sarb
xor
pusha
mov
and
imul
or
iret
xor
dec
lods
movsb
and
out
pushf
scas
xchg
fsubs
pop
jbe
jne
mov
cmc
mov
inc
cwtl
mov
sub
mov
cld
mov
std
and
and
xchg
js
cmpsl
mov
pop
xchg
idivb
sub
test
outsl
sahf
stc
push
sub
lods
sbbb
ljmp
mov
add
sub
mov
and
pushl
andb
loope
sbb
lret
mov
decl
popa
xor
jg
dec
dec
decb
test
xor
addl
xchg
jecxz
pmaddwd
xor
call
lahf
shlb
scas
jg
sub
div
jmp
aas
iret
pslld
push
lock
test
xchg
in
pop
cmpsb
and
jge
dec
outsl
popf
inc
sbb
loope
vmovss
outsb
xchg
pop
mov
hlt
aas
not
lret
mov
imulb
shrl
pop
je
arpl
or
aas
cmpsb
xchg
cmpsl
xchg
out
pop
out
loope
xchg
xor
repz
xchg
fwait
and
dec
mov
cmp
es
divb
sbb
pop
xchg
cltd
insb
cmpsl
xchg
subl
and
mov
xchg
push
call
and
inc
test
rclb
add
and
dec
lods
pop
notb
les
stc
iret
inc
inc
aaa
add
into
xchg
call
jno
iret
sarl
loop
add
and
and
cmp
sbb
sub
xor
xchg
les
mov
pop
push
int3
bsr
sbb
adc
jecxz
mov
test
mov
xchg
push
testl
ss
call
sub
push
jae
ss
negb
out
bound
adc
insl
and
jp
pop
push
test
mov
cld
inc
loopne
repz
xchg
jg
push
pop
inc
testl
mov
ja
jae
lea
or
xor
xchg
mov
xchg
sub
andb
adc
mov
push
fsubrp
sbb
mov
inc
mov
sbb
lea
aad
ja
mov
adc
gs
inc
leave
mov
or
add
push
xchg
xchg
xchg
mov
inc
xchg
inc
and
mov
shlb
bound
into
push
pop
mov
clc
xchg
inc
xor
mov
std
div
pop
sub
cmp
test
loope
inc
xlat
xchg
push
mov
xor
adc
or
jp
in
jb
lea
jle
xor
jge
jbe
cmp
xchg
andb
add
fdivs
pushl
sarb
push
ds
in
adc
imul
incb
pop
in
adc
cwtl
nop
cli
int
adc
in
ds
fimull
pop
insl
add
inc
aam
adc
mov
lahf
xor
out
loop
pop
pop
dec
cmp
mov
xchg
das
adc
in
jns
inc
xchg
in
xchg
jmp
sbb
or
popf
xchg
inc
je
pushf
cwtl
repnz
push
mov
or
add
jb
in
or
gs
imul
das
pop
aad
call
pop
mov
call
lcallw
add
negb
adc
inc
inc
fdivr
insb
sbb
xchg
call
sbb
movsb
out
mov
adc
call
outsl
lcall
cmp
mov
cmp
lcall
mov
xchg
data16
das
lcall
xor
xchg
ds
fisttpll
xchg
in
decb
xor
lods
test
es
stc
adc
aaa
xchg
ja
xor
sahf
mov
mov
adc
mov
push
sub
pushf
or
xor
sbb
hlt
inc
fcmove
or
stos
mov
decl
and
gs
pop
sbb
dec
push
in
pusha
and
jo
xchg
fs
incl
decb
jbe
mov
sub
pushl
mov
and
adc
sahf
cmp
dec
dec
movsb
dec
aaa
call
xor
test
mov
jb
hlt
or
or
mov
fcompl
aam
jg
cmp
incl
ficoms
das
and
sarb
xor
lcall
shlb
cmova
jl
xor
add
pop
xchg
iret
sub
in
or
bound
lock
push
lahf
outsl
out
ficomps
cmp
stc
cltd
push
pushf
push
mulb
fcomip
test
pop
sbb
xchg
in
adc
aad
mov
in
enter
xchg
loop
inc
xor
mov
or
das
lcall
inc
lret
inc
es
ret
xchg
push
push
mov
sbb
loop
pop
add
out
adc
jle
sbb
stc
inc
or
push
imul
xchg
clc
sar
cmp
xchg
into
jne
mov
lods
mov
xchg
sbb
xlat
fwait
pushl
sahf
cpuid
inc
cmp
inc
stos
pop
jae
stos
aas
sbb
jae
movsl
rorb
sbb
dec
mov
add
sbb
adc
and
test
das
notb
test
adc
aad
dec
jbe
mov
inc
sub
dec
popa
iret
loop
adc
push
aas
rclb
or
mov
stos
dec
xchg
push
shlb
lret
pop
ficomps
jbe
loope
clc
ret
and
andb
movaps
sbb
lcall
out
and
ljmp
mov
aaa
mov
push
jbe
and
mov
and
out
ret
scas
outsb
push
adc
sahf
ss
xor
mov
mov
xorl
adc
ret
lret
push
inc
push
lcall
gs
jo
push
xchg
rorb
insl
imul
jmp
incb
mov
mov
mov
mov
cwtl
sbb
mov
xchg
mov
mov
mov
jbe
cmp
inc
pop
push
stos
dec
sahf
ss
cmpsb
xchg
imul
scas
mov
adc
xor
add
movsb
and
popa
mov
ljmp
xchg
int3
xor
or
test
dec
pusha
jno
cmp
push
inc
movsb
pushf
in
sbb
hlt
loope
xchg
pop
call
mov
inc
out
stc
xor
mov
dec
cmc
ror
sbbl
pop
aam
das
mov
mov
pusha
outsl
jg
aam
pop
ss
and
call
xchg
jg
loop
xchg
adc
test
btc
adcl
roll
cwtl
nop
int
shr
jb
pop
pop
cmp
pop
daa
inc
cmc
rcll
cltd
push
jbe
pop
or
iret
mov
ss
andb
ret
mov
pop
push
mov
aaa
inc
idivb
inc
or
fisubrl
inc
rolb
imulb
jle
cltd
dec
sbb
int3
fdivrs
out
fnstcw
punpckhdq
adc
xchg
xlat
ljmp
pop
mov
jne
dec
add
mov
jb
inc
pop
xchg
xor
push
push
mov
mov
cmp
inc
ss
and
sbb
rolb
idivb
jmp
insl
shrb
pushl
lods
sete
pop
xor
fdiv
icebp
ds
test
push
sub
push
cmp
cwtd
push
jg
jmp
pop
out
outsl
jg
loope
sbb
jg
xlat
adc
test
and
es
daa
lret
lahf
pop
fidivrs
lcall
cmp
dec
stos
into
les
cmp
dec
in
rorb
test
or
inc
xor
daa
out
sub
adc
sub
jg
xor
incb
int
push
loopne
add
jne
push
gs
mov
sbb
out
jae
dec
sahf
pusha
mov
lcall
adc
push
in
pop
push
loop
push
sahf
loop
bound
call
sub
sub
jne
and
add
add
xchg
in
clc
inc
push
adc
and
push
sbb
dec
xor
popf
pop
int3
rolb
bound
out
mov
rcll
stos
fcos
ptwritel
xlat
dec
outsl
jp
enter
mov
jge
loop
imul
push
frstor
cld
ret
mov
lods
outsl
out
adc
adc
add
lcall
fsubs
leave
and
cvtpi2ps
or
in
cmp
pop
push
adc
xor
inc
insb
icebp
rcrb
cmp
fwait
sbb
scas
adc
jle
xadd
loope
outsb
mov
scas
push
sahf
push
movq
scas
adc
leave
mov
call
jg
add
mov
sbb
ficomps
jp
mov
test
and
subb
in
mov
dec
jo
mov
jae
push
adc
popa
jg
xor
decb
aad
pop
insb
push
cvtdq2ps
daa
scas
mov
jbe
jp
add
jbe
xor
mov
stos
mov
mov
pop
mov
loope
dec
test
outsl
dec
loopne
mov
mov
gs
inc
jmp
je
mov
sub
nop
xchg
adc
mov
loope,pt
sub
jg
cmc
imul
dec
je
push
mov
cmc
jae
or
mov
jbe
jne
xor
cmpsl
iret
jae
xorb
popl
xor
xchg
dec
imul
jle
adc
push
js
scas
adc
lea
fsts
aad
sub
jge
mov
insl
jg
ja
rsqrtps
fldl
add
lret
ret
pop
outsl
jp
loopne
cmpsl
pushl
adc
pop
mov
inc
movsb
filds
sahf
cmp
das
mov
add
loopne
xchg
mov
data16
sar
fcmovbe
xchg
jle
call
rolb
push
fistps
mov
or
mov
push
in
insl
stos
inc
repnz
movsbl
dec
or
mov
mov
xchg
fisttps
lcall
cmp
dec
pusha
jno
xor
rorb
lock
dec
gs
inc
sub
sbb
xor
jnp
leave
punpcklwd
inc
pop
inc
das
add
mov
and
xor
loope
repnz
add
inc
mov
repnz
or
xor
fildl
xor
pop
push
aam
pop
xorb
add
decb
aam
out
fildl
shrd
push
xchg
fwait
cmpsb
icebp
orl
add
movzbl
orl
ret
popa
paddq
xchg
and
loop
inc
ds
scas
cmp
scas
test
mov
es
stos
adc
adcb
stos
and
cmp
jae
mov
ss
lods
jnp
enter
lcall
dec
loop
cvttps2pi
data16
jg
cltd
mov
pop
cmc
in
pushf
mov
xor
xchg
inc
push
xchg
stos
lcall
push
and
maxps
add
and
mov
ret
rolb
mov
incl
mov
loope
xchg
in
mov
sbb
aad
out
cmp
test
mov
xchg
clts
jg
jg
repz
stc
icebp
push
cmp
mov
dec
fidivl
rorb
ljmp
loop
sub
cmp
pop
xor
push
loop
xchg
lret
jg
fnstenv
mov
cltd
inc
pop
cmp
inc
mov
xchg
mov
xlat
jns
sub
ljmp
pop
push
push
adc
psubusw
jp
popf
stc
std
jne
movsb
decb
clc
mov
daa
push
dec
mov
movb
cmovs
sub
mov
jmp
bound
mov
push
sub
mov
inc
dec
xchg
sbb
mov
scas
orl
call
cmp
popa
mov
idiv
xchg
cs
pop
adc
push
pop
jp
arpl
jne
enter
and
inc
jg
idivl
data16
and
mov
jg
jg
das
pop
bound
into
mov
add
fnstsw
adc
adc
mov
ss
es
adc
rorl
jp
loopne
aaa
cmc
mov
pop
mov
xchg
incl
sahf
scas
test
adc
aam
notb
popf
ret
pop
push
gs
call
add
push
jg
jne
adc
stc
decb
rcrb
cld
jbe
gs
fmuls
adc
pop
mov
movzwl
scas
push
cmp
sbb
dec
jg
scas
push
repz
mov
push
jbe
xor
pop
pop
ja
lds
dec
adc
loop
mov
fs
shlb
push
imul
data16
push
jg
lods
call
std
cmc
xor
mov
dec
cmp
jne
pop
inc
cmpsb
iret
cs
outsl
pop
pcmpgtd
adc
cmp
pop
out
scas
bound
push
push
pop
cmc
lods
jle
xchg
fsts
out
jb,pt
mov
mov
hlt
mov
loop
pop
mov
dec
and
pop
ret
sbb
or
insl
adc
por
push
outsb
push
std
out
xor
or
not
sar
jnp
test
jle
sbb
aaa
das
in
sbb
pop
ud0
and
pop
xchg
movaps
mov
jle
push
int3
fdivr
lcall
adcl
lock
xchg
sub
int
xchg
mov
imul
sub
jl
psllq
ja
lret
inc
testb
xor
pop
xchg
lea
push
pop
into
movaps
xor
mov
jg
cmp
xchg
jp
add
jbe
outsl
push
mov
jge
mov
push
and
sub
lods
movsb
notb
adc
pop
into
jmp
fiaddl
adc
jns
and
bsf
fwait
sub
out
das
fstpl
xchg
pop
adc
dec
pop
sbb
jbe
adc
inc
cmpsl
xor
mov
mov
add
nop
adc
minps
cmp
adc
mov
outsb
jae
inc
pop
xor
scas
mov
test
mov
ljmp
jmp
sbb
fidivrs
and
cmp
andl
jp
repnz
cwtl
cmp
aaa
imul
fists
nop
sub
minps
setno
or
mov
sub
loopne
cmpsl
pushl
push
cmp
stos
test
xchg
test
out
xchg
pand
loop
jp
mov
int3
jbe
xchg
xchg
scas
sbb
push
imul
pop
cmp
xor
xchg
xchg
jns
mov
lods
test
jne
ljmp
sub
aas
xchg
push
pushl
push
adc
lret
pusha
dec
inc
dec
fildll
pop
jl
jp
adc
inc
inc
xor
push
es
adc
test
jno
jg
cmp
jb
jle
push
adc
add
jg
test
mov
jmp
xchg
dec
add
nop
pusha
testb
mov
lret
jb
jg
rorb
sarb
sbb
insl
ja
pop
pop
xchg
mov
incl
mov
repz
aad
loop
mov
shlb
and
xlat
lcall
pop
push
aas
addl
insl
mov
pop
jg
mov
push
push
dec
mov
cmovbe
data16
lahf
fwait
inc
aaa
mov
rclb
pop
repnz
loop
lcall
sub
mov
xchg
sub
mov
xchg
push
sub
mov
hlt
notb
sbb
fnstenv
mov
or
mov
xor
xor
inc
test
pop
mov
iret
loop
sub
push
mov
test
cmpxchg
dec
adc
cmpsl
lahf
dec
xor
pushf
testb
pushf
int
and
into
mov
bound
mov
scas
xchg
cvtps2pd
dec
mov
shll
dec
jg
lcall
imulb
jmp
clc
mov
mov
dec
gs
sbb
adc
lods
mov
les
mov
rcrb
pop
idivl
jecxz
mov
pop
mov
divb
mov
dec
lret
scas
orl
in
sub
fidivs
push
inc
pop
jmp
cmp
push
loop
cmc
mov
xor
out
aas
push
mov
sbb
aas
cmp
popa
jg
xor
fwait
jb
mov
add
enter
ret
ret
stos
cmpsl
loop
and
shl
loopne
and
jno
mov
mov
push
mov
dec
add
insl
pop
sub
fcoms
mov
sbb
fsts
xchg
lcall
out
inc
inc
add
sub
adc
xchg
cs
pop
mov
fs
add
lods
cltd
sbb
call
xchg
rcrb
psubq
imulb
in
sub
and
std
idivb
push
outsl
aaa
mov
pop
iret
jp
outsb
push
dec
orl
psubq
cmp
popf
fbld
dec
insl
mov
fstl
xchg
dec
andb
sti
add
popf
lret
punpckhwd
add
in
adc
mov
fcompl
loope
sbb
add
mov
lds
rcrb
inc
xchg
inc
sahf
xchg
xor
xor
bound
and
or
rorb
leave
shll
xor
cltd
xchg
fildll
imul
mov
test
movd
fwait
sub
mov
mov
mov
xchg
jb
jns
in
call
loopne
test
sbb
mov
adc
sub
arpl
cmp
inc
out
lahf
cmp
push
dec
push
adc
xor
xchg
lods
xchg
out
aad
and
es
mul
fwait
call
loop
mov
test
dec
adc
aas
iret
jg
mov
jne
test
loopne
cmpsb
push
shrb
out
insb
orl
inc
not
inc
clc
insb
cmp
or
lret
mov
adc
jle
jg
jg
ds
sar
inc
pop
lock
xor
pop
fimull
out
fs
mov
mov
mov
mov
cmpsb
iret
jg
jb
leave
mov
mov
in
incl
aaa
adc
pop
testb
aaa
test
adc
lret
cmpl
mov
xor
lock
popa
iret
insb
leave
pop
jne,pt
mov
ficomps
pusha
mov
shrd
aas
mov
dec
int
mov
cld
in
pmuludq
lock
psubw
ret
mov
jns
and
testb
xchg
mov
jle
decl
divb
cmp
jecxz
fidivrs
xchg
in
rcrb
cmpsl
add
sar
adc
xlat
pop
sub
and
iret
jg
jp
sub
imul
jne
iret
jg
adc
shr
mov
cltd
add
rol
push
lgdtl
mov
divb
xor
xor
jmp
ja
sbb
ffree
and
scas
mov
movsl
in
popa
shlb
neg
jnp
or
negb
fsts
popa
sbb
bound
add
add
aaa
fwait
or
inc
or
mov
aad
leave
decb
jg
adc
icebp
rcrl
insb
ret
shlb
call
div
mov
add
mov
repnz
sahf
aaa
push
pop
ljmp
cmp
xchg
jo
shrl
subb
adc
rcll
int
subps
sbb
sbb
int
pusha
insb
hlt
shrb
mov
add
lret
cltd
mov
imulb
negb
jno
xchg
mov
push
push
cmpsb
pop
ljmp
lahf
mulb
sbb
rcll
pop
pop
pop
jmp
xor
and
cmp
jg
inc
pop
fst
aaa
pusha
in
divb
ljmp
mov
pushl
fs
sarl
lea
sub
jmp
add
add
daa
shlb
xchg
add
dec
popa
andb
scas
mov
lret
fwait
pop
sub
in
adc
in
or
mov
dec
mov
xrelease
cmpsl
adc
in
xchg
out
les
out
jns
xlat
fldenv
data16
xor
jg
add
aad
rclb
cmpsb
pop
adc
cmp
aas
pop
and
in
cmc
xchg
mov
loop
adc
into
daa
rorl
xlat
xchg
mov
shlb
or
xor
inc
fldt
pop
lcall
cltd
xor
sbb
in
pop
push
sbb
enter
jl
stos
fdivr
andl
pop
loopne
paddusb
push
aas
sub
das
movsl
jp
jmp
add
in
fstps
shlb
clc
mov
fldlg2
and
cmp
sarl
pop
outsb
jle
movaps
pop
xor
and
mov
mov
repnz
pop
mov
mov
pop
and
psrld
shl
jmp
fcmovnbe
push
mov
repz
fidivrl
add
xlat
and
cmpsb
iret
jg
mov
mov
jno
leave
xchg
and
setl
inc
aas
movsb
adc
in
or
aas
movsl
or
movsl
adc
loopne
and
jecxz
insb
cmp
repz
jg
aaa
dec
aad
addl
sbb
pop
mov
jg
add
ljmp
xor
push
push
jg
adc
mov
cmp
lods
sti
adc
xor
dec
xchg
aas
jnp
test
jns
xchg
ljmp
ljmp
sbb
pop
push
lods
test
adc
inc
jg
popf
lds
inc
mov
add
xchg
lcall
inc
adc
pushl
imul
popf
xchg
outsb
loope
mov
daa
adc
inc
xor
movups
xor
es
xchg
add
mov
aas
ret
adc
aaa
and
pop
mov
cmpsl
and
fcompl
inc
jg
xorb
add
add
cmp
lfs
add
mul
mov
jo
dec
cmp
mov
pushf
adc
xlat
rolb
test
out
jp
test
aaa
pop
div
pop
pop
pop
dec
and
cmp
push
dec
int
cltd
adc
jno
std
icebp
push
jns
xor
xchg
ucomiss
push
adc
outsl
incl
loope
out
pop
sub
push
inc
sub
xchg
test
pop
aas
fsincos
cmp
out
out
adc
dec
inc
lods
movsb
movsb
das
cmpsl
or
enter
mov
xchg
add
orl
adc
inc
mov
lret
shrl
pop
insl
rorb
orb
std
andnps
int3
aas
cmp
ds
adc
outsl
inc
jnp
and
and
pop
lock
incl
xor
lcall
popa
jg
mov
lods
jb
mov
mov
in
pop
pop
push
mov
push
sbb
dec
mov
jbe
iret
repz
loopne
cld
test
add
scas
ret
stos
adc
mov
pop
inc
inc
adc
js
pop
icebp
sub
or
mov
cmp
and
lea
jae
stc
cmovne
sbb
pop
sahf
push
std
ljmp
xchg
stos
xor
sbb
xchg
jbe
push
jg
icebp
pushf
dec
nop
jb
movsl
push
fcmovb
scas
sarb
pop
das
pop
out
mov
mov
sbb
add
xor
sarl
mov
lods
movsb
in
pop
inc
xor
push
rcl
sahf
and
lea
inc
jg
sub
mov
mov
subb
push
stos
in
jne
cmpsb
xor
xchg
xchg
adc
into
push
cmp
pop
xor
push
fincstp
jb
sahf
xchg
dec
ss
ds
shl
mov
xchg
mov
mov
push
in
sub
push
loopne
jne
cmp
jg
push
adc
daa
push
mov
pop
jbe
mov
stc
fimuls
pop
rol
aas
mov
pushf
ret
scas
and
xchg
cmp
adc
jae
jae
sbb
dec
push
xchg
pop
test
mov
stos
lods
pop
ret
and
incl
daa
xchg
adc
jg
cmpb
jno
loop
mov
cmp
test
sbb
push
dec
or
sbb
addl
ja
add
and
in
pop
push
insl
mov
fldt
scas
scas
mov
lcall
mov
test
sarl
and
inc
nop
sti
out
orl
sbb
xor
pusha
pushl
test
cmp
dec
ds
rorb
adc
imul
mov
adc
mov
bound
adc
test
loope
and
mov
sbb
shll
fwait
mov
sti
sub
add
xlat
push
lahf
xchg
ret
inc
cmpsl
jg
subl
arpl
loope
mov
xor
dec
jecxz
cmp
push
in
aam
scas
mov
sub
and
xchg
cmp
sbb
lcall
push
xchg
icebp
inc
stos
lcall
jg
inc
ror
hlt
inc
mov
dec
inc
sub
iret
dec
or
rclb
in
inc
bound
sub
pop
das
push
testb
test
jl
je
stos
dec
scas
push
icebp
adc
adc
sub
push
mov
stos
shlb
xor
adc
mov
mov
fisubrl
sub
pop
call
sbb
call
fidivl
out
insb
pop
rolb
mov
jp
aad
mull
push
inc
push
mov
pop
pop
xchg
ja
adc
add
pop
add
jg
scas
lcall
pop
xchg
shl
popf
outsl
sarl
call
fiadds
mul
jae
add
ret
fstpl
and
add
shlb
shlb
pushl
in
faddl
jns
mov
mov
shlb
idivb
loop
push
outsl
cwtl
incl
ljmp
loop
sub
jp
mov
ljmp
ret
in
loop
adc
icebp
push
push
lret
das
jbe
leave
mov
outsl
rclb
in
pop
ret
sbb
std
shlb
xor
shrb
xchg
fistpll
xor
jg
mov
fwait
mov
rcrb
cmpsl
roll
mov
pop
jp
mov
jle
inc
add
mov
pop
mov
int
int
loopne
jmp
aas
sub
arpl
adc
popa
setbe
packsswb
sub
ja
clc
aas
jp
xor
xorl
push
in
xchg
rorl
jp
dec
xor
push
add
jg
sbb
mov
mov
add
pop
jle
out
jg
lahf
cmp
loope
data16
push
andb
xchg
jbe
jae
rcrb
sbb
pop
sub
jl
dec
int
pop
cmp
outsb
loopne
ficoms
xchg
pavgb
dec
pop
mov
dec
add
aad
xchg
rclb
dec
popf
shr
test
mov
jp
mov
jle
xchg
xchg
adc
pop
adc
in
test
movsb
jmp
loop
inc
cltd
jmp
fnop
and
adc
sbb
rorl
test
aas
loope
lods
loopne
dec
xchg
loope
mov
add
sahf
add
adc
push
repnz
sarb
pop
xchg
jnp
inc
sub
clc
xor
dec
loopne
setbe
sbb
pop
lahf
out
mov
int
rclb
rorl
call
or
lods
dec
inc
jo
pushf
pop
cwtl
scas
jecxz
xchg
lcall
arpl
cmovs
adc
cmp
shl
push
add
shl
and
xchg
and
push
mov
lods
shl
jp
into
lds
fimull
stos
sub
daa
cmp
rclb
outsb
pop
rcrl
loope
adc
rcrb
lret
and
sbb
mov
insb
jecxz
fsubrs
adc
mov
test
jmp
lea
pop
rclb
dec
vmwrite
aaa
pop
int
call
decb
inc
add
xadd
pop
pop
dec
push
mov
out
lods
mov
scas
les
incb
cltd
xor
mov
mov
lret
aas
test
inc
xchg
fs
push
popf
in
xchg
aaa
dec
lock
in
ja
push
jb
dec
andb
stc
mov
add
dec
cwtl
mov
nop
inc
sti
inc
ljmp
xor
mov
and
in
adc
decb
mov
jb,pn
test
ret
mov
movb
add
pusha
mov
inc
out
mov
je
insb
mov
shrl
dec
xorl
push
and
xchg
dec
cmp
call
shlb
aaa
mov
mov
cs
mov
xchg
out
push
shrl
sub
pop
shrb
sbb
stc
and
rclb
xor
cmp
leave
insl
insl
inc
xchg
mov
in
xchg
out
subb
pop
jo
outsl
xor
das
nop
inc
inc
cmp
mov
outsl
pop
mov
cmp
mov
inc
rcrl
pusha
fnstenv
imul
fsts
xorl
pusha
outsb
fists
jo
jg
outsl
add
fidivrl
lods
fmuls
les
or
sbb
imulb
mov
jne
mov
mov
stc
vmread
stc
movl
imul
xor
xchg
das
cli
pop
sub
or
sub
and
sub
jns
out
loop
imul
jae
mov
mov
jae
add
aam
cmc
sub
das
jp
out
jb
icebp
lock
lods
insl
iret
jnp
outsl
addr16
xor
mov
or
daa
das
bound
ljmp
cli
sub
cli
mov
das
add
loopne
sub
aam
push
xor
les
in
fwait
loop
add
mov
addr16
scas
mov
sub
out
addr16
sahf
in
gs
sbb
shlb
in
popa
pop
push
or
xchg
jnp
and
push
imul
add
or
jb
jl
mov
repnz
sldt
inc
mulb
imul
movsb
test
sbb
ret
or
ja
das
jg
lahf
repz
icebp
sti
lods
mov
daa
je
cmpb
push
xchg
data16
xor
jo
daa
lods
add
xchg
mov
push
loope
stc
sub
rorb
pop
adcb
loope
ret
xor
imul
rcrl
ucomiss
pop
daa
aaa
cli
cli
dec
out
dec
test
test
and
push
outsl
mov
mov
inc
pop
xor
sub
loope
xor
lcall
sub
xchg
pop
enter
jl
mov
cmp
rcrb
xor
or
bswap
nop
xchg
xchg
xchg
dec
xchg
das
movlps
push
ljmp
sub
or
or
test
das
out
adc
ljmp
inc
jg
outsl
mov
adc
mov
pop
mov
out
adc
pop
negl
jl
nopl
nop
gs
leave
sub
je
das
or
sahf
icebp
xor
mov
dec
push
jmp
prefetcht1
insb
iret
sub
je
adc
test
inc
pop
addr16
movsb
fs
shrb
je
or
mov
rclb
aam
fsubs
pop
cwtl
mov
fdivl
test
shld
clc
mov
fisttps
adc
int3
enter
sahf
icebp
inc
in
outsl
jno
imul
jmp
push
jo
lahf
jge
das
push
add
cmp
cmc
and
fyl2x
pop
dec
xor
mov
sub
cmpsl
push
daa
daa
cmpsl
es
push
cmpsl
outsb
daa
cmpsl
cmpsl
inc
aas
mov
cld
push
sbb
iret
pop
rcrl
iret
dec
mov
mov
jp
jb
jp
jb
jp
jb
jp
jge
sbb
hlt
int
outsl
xchg
mov
in
push
daa
addb
popa
fsubl
cmp
shlb
hlt
aaa
xor
pop
lret
jmp
sahf
daa
mov
cmp
push
jb
je
out
popf
push
dec
sti
icebp
gs
mov
cli
mov
adc
test
cmc
lds
mov
mov
mov
mov
setns
scas
cmc
dec
adc
popa
pop
xor
les
insb
jge
lea
push
xchg
lods
in
cmp
movsl
dec
dec
mov
push
push
mov
shll
psubusw
loope
cmc
bound
xchg
xor
fnsave
in
jb
scas
fldcw
in
sub
cmp
pop
nop
sbbb
cmp
pop
sarb
pop
xor
hlt
xchg
pop
iret
lds
daa
pop
movsl
rorl
push
pop
das
std
icebp
ror
sub
repnz
push
stc
icebp
push
mov
push
lcall
jp
push
jb
iret
sbb
and
ss
ret
in
je
xchg
xor
pop
mov
mov
bound
into
out
shl
outsb
or
ss
icebp
sarb
push
jbe
cld
outsb
and
into
hlt
stos
orb
mov
ljmp
loop
sti
cmpsb
xchg
mov
sbb
mov
arpl
fdivrp
dec
outsb
pop
scas
jmp
insl
pop
popw
mov
sub
or
fmuls
cmp
adc
fwait
scas
mov
lea
pop
cli
cmpsl
or
xchg
cli
les
bnd
ja
cmovg
divb
jge
idivb
adc
and
cmp
pop
addr16
adc
aam
enter
jae
and
jno
shl
repnz
dec
addr16
pop
dec
inc
adc
mov
adc
rep
pop
xchg
inc
push
hlt
cmp
and
repnz
jge
imul
js
adc
rolb
loopne
push
pop
xchg
test
jg
imulb
or
pop
clc
rep
in
jle
adc
sbb
sbb
jae
call
repnz
mov
xchg
jae
dec
jp
repnz
cli
pop
push
mov
mov
cli
sub
pop
aas
icebp
sub
jmp
cmp
mov
dec
mov
out
imulb
and
push
push
pusha
jg
addr16
xchg
xchg
mov
dec
or
pusha
stos
sub
mov
loope
iret
xlat
mov
shrl
and
icebp
adc
jle
add
sub
hlt
jae
sbb
cmp
cmc
pusha
into
dec
repnz
mov
mov
pop
test
callw
push
iret
enter
mov
icebp
pushf
sub
in
ljmp
jno
pushf
xchg
jo
mov
movsb
mov
aam
push
sbb
daa
scas
sub
lock
test
outsl
rorb
shlb
push
push
cli
popa
int3
les
lea
imul
rorl
sub
hlt
dec
jb
clc
dec
sub
rol
pop
aaa
and
jecxz
lock
pop
or
jne
popa
das
shrl
repnz
fs
hlt
ret
out
cmp
dec
mov
insl
scas
cmpsl
movsl
daa
and
xchg
cmp
aad
rcll
jp
jb
jle
xor
mov
arpl
mov
adc
imul
xor
jo
fwait
jle
stos
sbb
sbb
inc
jbe
cmpb
or
jp
xor
push
iret
das
sbb
std
push
jno
mov
xor
or
adc
push
jg
mov
mov
orb
dec
sbb
popa
sahf
pop
or
pop
adc
ficompl
inc
mov
mov
dec
cld
mov
sbb
jb
fmull
add
daa
gs
inc
pop
dec
and
cmp
inc
sub
cld
jl
imul
daa
test
loopne
jno
and
mov
mov
mov
sub
scas
mov
inc
xchg
push
adc
imul
inc
mov
xchg
loope
rcr
mov
aaa
mov
nop
notb
jge
iret
aam
sahf
icebp
in
mov
test
notb
cmc
jo
add
adc
insl
sarb
adc
jno
fs
pop
pop
and
test
mov
or
adc
cmp
mov
jo
push
lock
lds
inc
loope
outsb
mov
jp
in
push
push
stc
scas
xchg
iret
imul
mov
mov
bound
dec
mov
cld
adc
das
mov
adc
mov
mov
sbb
and
mov
sbb
aas
jno
notb
stc
cmc
adc
repz
and
lods
es
push
filds
push
repz
rorl
jb
or
jle
dec
in
jb
js
lss
cli
jle
stos
adc
xlat
mov
adc
mov
addb
jle
int3
jo
ss
jno
mov
icebp
stos
push
das
fadd
mov
in
shlb
jb
mov
dec
jl
xor
or
add
mov
out
jp
sahf
sbb
scas
mov
lcall
xchg
rcll
mov
pop
loop
jb
xchg
jle
fs
cmp
push
jnp
sahf
and
in
jno
mov
fimull
out
adc
add
hlt
mov
icebp
pop
mov
shrb
add
or
or
int3
pop
mov
and
pop
jl
pusha
mov
enter
outsl
fildll
dec
dec
lahf
push
jo
ror
mov
out
xlat
mov
push
cli
pop
pop
arpl
aad
stc
add
jns
sub
mov
arpl
mov
movsb
ljmp
incl
xchg
leave
nop
daa
cmpsb
dec
push
xchg
incb
push
mov
daa
call
repnz
nop
jae
test
pop
xor
cmp
add
mov
jmp
sub
es
mov
add
scas
repnz
add
cmpsb
jb
push
xchg
and
in
lret
add
or
jb
call
jmp
or
sbb
dec
sub
xorb
dec
cwtl
in
sbb
cmpsb
xchg
rclb
inc
ljmp
clc
stc
xchg
popf
jo
cmpl
or
inc
sti
ja
push
ret
dec
aas
repnz
jno
ljmp
mov
pushf
jge
mov
jmp
xchg
jg
or
mov
xor
push
lock
test
adc
and
dec
and
ss
xchg
leave
push
shll
ss
testb
xchg
repnz
into
loop
pop
in
dec
bound
inc
cmp
imul
push
push
insl
mov
and
es
mov
inc
push
movsl
push
cmp
loop
pushl
jnp
lock
incl
lahf
repnz
ja
add
adc
cmp
mov
push
ljmp
shlb
mov
jb
mov
jb
sahf
pop
clc
addr16
inc
mov
jb
dec
adc
rorl
loope
push
adc
sti
jo
sbb
and
sub
fildll
dec
jecxz
cmp
xchg
rclb
dec
xchg
outsl
call
lcall
inc
mul
push
push
or
sbb
les
mov
jo
add
inc
adcb
jae
and
lock
sub
jb
dec
orb
pop
pop
cli
nop
pusha
daa
inc
cmp
loopne
dec
lock
jbe
add
xor
mov
enter
fcomp
aaa
hlt
std
xor
xchg
test
clc
test
cli
sbb
mov
outsl
hlt
add
aam
jo
fmuls
dec
lret
mov
jg
enter
mov
outsb
aas
lock
call
sbb
add
sub
inc
das
pop
into
je
jae
add
adcl
mov
popa
dec
popa
aaa
jge
dec
pusha
mov
stc
popa
jns
repnz
adc
mov
jno
or
lods
repnz
repz
rorl
mov
push
mov
mov
mov
rcrb
cmp
in
push
icebp
push
mov
add
testb
inc
cmp
std
and
cmc
pop
add
test
xchg
adcl
jae
jp
mov
pop
ret
push
xchg
mov
xchg
push
and
les
and
rolb
inc
lds
das
adc
mov
mov
pusha
ret
push
mov
cld
inc
or
stc
dec
xor
xchg
cld
xor
xor
roll
icebp
pop
sbb
inc
mov
push
dec
mov
imul
add
lds
inc
adc
sub
insb
out
pop
pop
xchg
test
aaa
jge
pop
rorl
fldl
sbb
sub
jmp
xor
sub
adc
lea
sub
out
pop
adc
addb
std
pop
add
push
add
hlt
sbbb
imul
inc
mov
cltd
jo
mov
test
mov
adc
ror
dec
das
cmc
and
hlt
sbb
and
inc
shll
lret
cmp
outsl
adc
loope
popa
icebp
sti
andb
jmp
and
cmpsl
jbe
pop
subl
mov
unpckhps
pop
or
daa
add
daa
out
jne
and
adc
iret
xchg
sahf
ud0
jge
sbb
push
out
xor
loope
outsl
inc
stc
testb
cmc
icebp
xor
add
adcl
push
or
mov
inc
mov
push
add
sbbb
clc
mov
sbb
outsl
bound
sbb
js
dec
out
ret
mov
xchg
lock
inc
ss
xor
ficomps
lret
push
and
cmpsb
jb
pop
jle
push
jp
popa
pusha
outsl
adc
jp
push
ljmp
mov
xchg
sbb
or
lret
jmp
xchg
xorl
mov
adc
popl
pop
faddp
icebp
out
mov
mov
pop
je
jl
push
push
lds
xor
rcr
or
aam
sbb
scas
sbb
inc
mov
mov
test
les
xlat
fbstp
mov
add
adc
das
testb
lea
mov
insb
mov
cmp
std
out
or
cli
add
sbb
adc
insb
jo
nop
xchg
jne
sbbb
div
mov
adc
mov
and
push
repnz
out
repnz
xor
mulb
stos
loopne
xor
idivb
clc
pop
ja
loopne
icebp
hlt
push
test
ret
jg
pop
sub
lock
or
pop
test
fidivrl
xor
inc
aaa
mov
jbe
outsb
mov
idivl
in
pop
and
fisttpll
mov
movsb
jmp
jmp
mov
xor
cmp
and
aas
sti
std
repnz
inc
repz
into
mov
sar
sub
push
fwait
inc
or
or
inc
mov
into
out
clc
pop
sub
jbe
or
add
mov
add
push
aas
jo
divb
add
inc
jmp
inc
stos
push
stc
dec
pop
sub
cmc
out
mov
or
jne
pop
mov
into
xor
xchg
psllw
cmp
cmp
outsb
daa
inc
insl
repz
or
mov
movsl
xchg
jp
mov
cld
sub
loop
xchg
outsl
jo
mov
mov
outsl
fists
dec
loop
push
into
fwait
addr16
int3
xchg
mov
or
xor
out
arpl
add
add
and
jecxz
addr16
xchg
aaa
mov
mov
roll
shll
pop
dec
adc
jae
mov
pop
push
dec
nop
add
add
mov
andl
outsl
bound
sub
xlat
divb
jnp
xor
adc
pop
outsb
cli
dec
pop
mov
repnz
lret
in
outsl
lods
loop
outsb
fsubr
xor
test
cli
add
lret
fnstenv
ljmp
dec
add
mov
pop
shll
mov
push
pop
div
hlt
cmp
pop
pop
mov
out
sbb
mov
lock
fcoms
cld
ret
out
dec
sbb
pushl
mov
sar
loop
punpckhbw
cli
jmp
jmp
push
sub
adc
sbb
fistps
idiv
inc
shlb
pop
pop
inc
aas
cmpxchg
sub
cli
mov
imul
jae
into
into
divb
pusha
sub
lahf
xor
mov
icebp
shl
icebp
add
ja
and
stc
int3
mov
pop
xor
lret
aaa
inc
inc
orb
repz
daa
pop
in
xchg
rcl
xlat
push
test
cmc
inc
fdivl
pop
les
sti
mov
iret
sbb
stos
shl
rcrl
adc
cmp
adc
repnz
stc
jbe
sbb
cwtl
shll
movsb
or
jb
jl
iret
fcompl
shlb
in
push
xchg
sbbb
xor
dec
rorb
cli
mov
sarb
mov
fsubrs
xor
mov
hlt
sar
fs
icebp
clc
js
nop
adc
and
test
subl
push
push
mov
shlb
cld
mov
mov
ror
sub
into
mov
xor
sub
inc
shr
cmp
loop
test
fcoml
pop
jge
xchg
mov
inc
xor
and
jle
jg
jg
or
adc
das
xchg
cmc
dec
push
add
cmc
and
sub
adc
mov
repz
cli
iret
sbb
push
push
pop
repz
pop
popf
lds
adc
lahf
inc
cltd
jne
mov
mov
clc
std
xor
or
bswap
je
sub
cmp
dec
mov
mov
mov
mov
adc
outsl
mov
adc
mov
int
add
and
sub
loope
sub
fwait
cmp
xor
orps
scas
push
ds
test
pusha
outsl
add
dec
loope
jg
ror
shll
outsb
iret
add
push
mov
arpl
xor
lret
push
cmpb
mov
aas
lcall
mov
add
pop
add
jg
xor
test
rorl
cld
ficomps
mov
push
ret
jo
mov
pushf
mov
adc
iret
int3
sbb
andb
add
adc
das
imul
mov
scas
cld
xor
pop
movsl
stc
xor
dec
fistpll
add
addr16
mov
test
sub
ror
rcll
fstps
pop
iret
popa
push
dec
adcl
cmc
mov
push
loope
std
aas
jle
sub
je
scas
std
jne
nop
and
test
mov
cmc
mov
mov
dec
jle
pop
mov
aaa
inc
lret
adc
leave
dec
mov
sbbb
loope
mov
mov
dec
std
pop
in
jnp
dec
sbb
xor
push
xchg
pop
jne
popa
dec
test
mov
mov
jp
jge
and
lahf
stc
jmp
outsl
dec
push
dec
das
data16
pop
xchg
shl
scas
mov
xor
notl
bound
shll
or
bound
loopne
cmpsb
stc
icebp
loop
jo
sub
mov
lahf
fisubrs
ficoml
or
divb
in
sub
cld
aam
movsb
adc
das
sbb
pop
cli
push
add
add
and
hlt
aas
xchg
jo
aaa
hlt
push
sbb
push
add
inc
js
xchg
in
leave
cmpsl
testb
lock
addl
sarl
shll
push
mov
sbb
stos
jo
clc
dec
jns
testb
or
adc
fucom
notb
mov
ss
pop
clc
dec
jno
cwtl
cmp
mov
or
cmp
sbb
cs
adc
stos
call
pop
xchg
dec
adc
mov
icebp
dec
stos
sti
add
jmp
pop
scas
js
cwtl
clc
iret
or
adc
cmpsb
in
aas
and
or
fisttpl
mov
add
in
push
fs
idiv
cli
and
and
ja
lret
mov
aaa
fisttpl
ljmp
inc
sbb
cmp
mov
stc
inc
test
testb
add
call
vpor
aas
scas
ret
testb
pop
repz
std
lock
test
lcall
adc
jo
jo
mov
or
inc
div
imul
dec
cmp
scas
push
repnz
add
repnz
xchg
mov
out
sarl
sub
xor
fisttpl
lcall
push
scas
pop
jae
jl
lret
adc
pop
imul
mov
icebp
sub
stos
sub
sub
fcmovbe
sbb
xchg
stc
je
mov
outsl
outsb
cli
ds
inc
jg
mov
out
jge
push
je
mov
mov
mov
icebp
jae
mov
scas
ss
push
lret
movups
rolb
add
scas
outsl
cmpsb
sbb
jne
pop
xor
imul
xorl
js
js
daa
push
xor
push
push
nop
push
inc
sub
dec
sub
sub
sbb
cmp
cli
jb
outsl
jmp
je
imul
sub
sar
pop
pushf
push
sub
scas
fisubs
imul
cli
push
sbb
pushf
cmp
repnz
dec
mov
je
loop
mov
js
push
jp
ds
add
mov
scas
movsb
pop
cmp
icebp
add
cltd
mov
insl
rcl
jl
aas
xchg
mov
push
lret
mov
jo
aad
pop
mov
push
lds
dec
add
cmp
test
fsqrt
js
cltd
aad
cli
por
lret
out
fdivrp
repnz
mov
fwait
jl
lock
int3
pop
mov
pop
push
mov
scas
lods
mov
and
xchg
mov
cs
cli
sahf
mov
mov
popf
mov
mov
cmc
xchg
repz
adc
mov
pop
fucompp
pop
out
push
mov
push
sub
mov
fwait
sub
daa
fwait
cmp
testb
and
mov
insb
xchg
push
stos
imul
arpl
mulb
cmp
mul
icebp
fisubs
scas
push
push
idivb
xor
pop
das
jg
mov
jnp
ss
mov
pop
jl
sbb
mov
in
stos
mov
inc
sub
daa
mov
aas
mov
mov
orl
divb
das
xchg
and
mov
scas
mov
or
push
push
subb
leave
icebp
cmp
testl
push
jb
xlat
cmp
ja
clc
jne
stc
dec
push
ds
icebp
mov
xor
jecxz
scas
pop
scas
js
mov
jg
mov
push
fsts
sbb
scas
push
dec
xchg
jb
pop
push
cmp
les
lret
xor
push
xor
push
jle
mov
fnstcw
icebp
shll
push
lods
je
imul
scas
pop
repz
mov
adcb
cmpsl
jae
pop
das
repnz
mov
pop
and
cmp
mov
inc
nop
jo
add
xchg
repnz
push
cmp
imul
push
lret
ds
sbb
push
stos
ret
jno
sbb
xor
int
xor
outsb
mov
push
xlat
in
stos
xchg
or
sbb
sbb
adc
in
adc
sub
sub
bnd
xchg
mov
mov
mov
testl
lock
or
xchg
xor
icebp
movlps
mov
rcl
loop
out
add
inc
fiadds
stos
rclb
jmp
out
jl
nop
pop
shrb
getsec
jmp
data16
out
dec
push
pop
cs
ja
xor
xchg
add
mov
pop
sub
cld
fs
daa
lods
movsl
outsl
das
and
dec
dec
movb
push
cli
or
xlat
mov
lcall
adc
inc
jb
adcb
xchg
out
dec
jl
sbb
out
push
out
mov
hlt
iret
jno
test
mov
add
imul
popa
hlt
lock
jp
push
sub
pop
jg
loop
movups
arpl
xor
insb
sub
ljmp
jle
sub
aas
xorl
xor
out
sti
jp
sbb
jb
out
mov
sub
push
mov
sbb
scas
stos
ret
lahf
data16
mov
loop
loopne
jle
subb
and
mov
pop
mov
out
repnz
loopne
jmp
jne
aam
loop
sub
cmp
xchg
loopne
dec
std
jo
inc
or
idiv
jnp
popf
cmpsl
stc
shr
adc
ljmp
std
inc
jp
sti
iret
sub
rcrl
rcr
inc
push
jmp
adc
adc
sub
lahf
push
adc
inc
pop
das
stos
or
lock
and
fsubrs
lock
js
outsb
fisubrl
jle
jbe
das
push
mov
repnz
mov
popa
or
mov
outsl
jmp
call
stos
push
adcb
out
jbe
jmp
mov
aam
lock
shlb
imul
add
cwtl
mov
xor
fbstp
cmp
lcall
popl
mov
inc
outsb
loop
loopne
std
jo
lcall
cwtl
rorl
sbbl
sub
int
add
std
scas
sbb
movsl
sbb
mov
out
cmp
bound
div
cmpl
aaa
fisubrs
out
aaa
into
insb
sub
mov
cmp
jno
push
aas
push
call
stos
cmpsl
jne
out
push
inc
popf
xchg
dec
lcall
inc
jmp
fistpl
mov
loope
and
out
data16
jno
sub
sbb
lret
loope
out
es
mov
pop
mov
adc
aad
pop
or
inc
jp
les
stos
or
pmaxub
stos
add
pop
popa
lods
sar
push
add
out
and
push
dec
jp
and
xchg
daa
mov
rorl
outsb
pop
lock
xchg
pop
ljmp
rolb
shr
cld
std
shll
adc
outsb
loop
js
mov
sti
mov
mov
mov
shrl
push
imul
negb
cmp
jo
add
popf
pop
push
push
and
lds
adc
mov
pop
test
and
xchg
rolb
pop
fs
shl
pushl
jae
adc
push
add
ss
mov
pop
cwtl
and
nop
iret
mov
sub
iret
jg
mov
divb
test
push
call
xor
jae
arpl
int3
cli
insl
push
pop
lcall
adc
dec
repz
ljmp
lahf
aaa
xchg
add
push
enter
sub
push
add
mov
sbb
jne
fldt
mov
sbb
sahf
xchg
dec
xchg
iret
pusha
mov
add
mov
mov
orl
loop
nop/reserved
push
xor
repnz
xor
and
adc
ljmp
pushf
push
sub
popa
pop
sarb
pusha
jno
repnz
pop
jge
inc
test
xorl
adc
xchg
xor
inc
xchg
dec
push
lock
jbe
out
dec
adc
mov
lods
inc
xor
imul
mov
cmpsl
push
loop
loopne
lret
out
xor
cmpb
popf
sub
je
ljmp
add
sbbb
das
sbb
jb
pop
and
outsl
fsubl
adc
and
pop
test
hlt
icebp
pop
sarb
imul
imul
sarb
stos
add
rcl
dec
fcoms
mov
inc
mov
ljmp
jne
dec
push
scas
mov
cmp
mov
push
and
aaa
and
pop
jb
shlb
push
push
mov
loop
add
push
sub
add
imul
add
cmpsl
push
add
loopne
stos
inc
xchg
stos
loopne
out
jne
jo
push
sub
cltd
dec
or
std
add
imul
aas
mov
loop
fs
ret
es
in
das
mov
daa
scas
xchg
out
enter
mov
mov
stc
rcll
jle
imul
mov
mov
iret
adc
bound
out
jp
pop
bound
shrb
icebp
aaa
fwait
xchg
out
mov
add
ds
mov
or
xlat
cltd
mov
sarl
loope
loop
pop
out
loopne
dec
adc
pop
jg
fistps
dec
clc
outsl
adc
sbb
scas
mov
mov
imul
daa
push
mov
ss
pop
test
rolb
rclb
repz
out
or
adc
pop
sub
jno
sbb
jmp
cmp
xchg
pop
dec
insl
push
adc
mov
or
jae
push
mov
mov
jle
and
movd
push
aas
push
or
cmp
stc
or
movsb
mov
outsb
div
test
mov
sbb
out
add
adc
adc
xor
cmp
add
cmp
or
movsl
clc
arpl
in
jne
xlat
or
sub
pop
mov
ja
cmp
insb
sub
sbb
add
push
adc
iret
popa
dec
push
or
shlb
inc
and
xor
arpl
pop
mov
push
lods
push
popa
adc
xlat
push
pop
stc
jne
in
fsubl
xchg
scas
inc
push
fildll
jbe
xlat
stos
or
fcmovb
imul
pop
jns
insb
sub
dec
sub
inc
push
pop
sbb
inc
xor
jo
ljmp
mov
or
scas
rorb
cmp
sub
sub
push
shll
rcl
loop
insb
pop
insb
jbe
mov
ret
cmc
push
xchg
pusha
mov
or
sti
aaa
mov
test
insb
orl
mov
jb
dec
sahf
fldt
adc
dec
add
add
lock
jge
lret
std
push
sub
cmpsl
add
sub
ds
out
adc
insl
fs
sub
rorb
mov
jb
mov
pushl
sub
cwtl
mov
adc
loopne
adc
mov
setne
insb
cwtl
jno
cmpsl
sarl
es
repnz
shll
xor
mov
div
inc
xor
aas
in
xor
mov
out
gs
icebp
push
pushf
xchg
fildl
xor
scas
imul
imul
mov
or
jp
gs
ljmp
pushf
loopne
xor
pop
insb
mov
xchg
jae
test
jno
cmc
jne
mov
push
xor
loopne
lea
and
pushl
test
xchg
lcall
loop
cmp
movd
xchg
stos
dec
fwait
sub
jbe
jb
xchg
sbb
fidivrs
shufps
xchg
add
pop
push
mov
aas
loope
aad
lods
cmp
jno
cmpsb
push
xor
inc
dec
lcall
xchg
push
inc
push
imul
movlhps
push
loopne
fisubs
imul
xlat
loopne
cld
dec
jb
inc
repnz
cwtl
push
shlb
pop
mov
out
out
mov
fiadds
test
rcll
das
subb
clc
les
rcll
dec
sbb
out
adc
mov
push
mov
insl
mov
es
sub
sub
ljmp
adc
cmpsb
out
mov
cmp
test
repnz
insb
aaa
daa
push
imul
ss
cmp
roll
sbb
push
insl
xlat
cltd
aam
cli
jmp
repz
int
jb
xorl
test
stos
inc
xorb
sarb
cli
iret
das
pop
dec
arpl
jmp
lahf
fwait
je
push
and
clc
fdiv
adc
in
mov
addr16
movsb
clc
out
mov
lcall
fildll
xorb
shl
dec
mov
mov
aam
lcall
jmp
pusha
adcb
adc
sub
or
out
pop
lret
lahf
out
js
add
loop
decb
fsubrs
or
ret
xchg
inc
lods
mov
pop
sarb
xchg
iret
fsubrl
sub
inc
daa
mov
inc
rorl
adc
add
cli
pop
mov
adc
pop
jmp
shlb
adc
pusha
cltd
push
adc
mov
dec
leave
out
sarl
xor
cltd
in
mov
and
negl
push
iret
mov
jb
jbe
mov
ficoml
mov
into
jle
and
add
push
xchg
roll
lock
cld
jl
scas
cmpsl
test
mov
push
sbb
jns
fdiv
inc
dec
inc
rorb
adc
out
xchg
aam
mov
mov
add
cmp
cli
mov
out
and
stos
adc
jo
iret
pop
xrelease
pop
sbb
pushf
cli
and
inc
shrb
add
cmp
int
shlb
xor
iret
inc
add
inc
loopne
lods
inc
cmp
addr16
adc
mov
stos
emms
mov
cmc
icebp
orl
adc
mov
bound
out
lock
cmpb
out
sbb
icebp
mov
lods
fsubrp
jne
or
lea
and
sub
cmp
negb
cs
dec
xor
inc
jle
popa
push
and
nopl
xchg
jbe
adc
push
push
and
add
jo
adc
add
inc
ret
dec
push
mov
sub
and
rolb
loopne
mov
cmp
sbb
mov
pusha
es
adc
add
imul
pop
aas
jle
pop
rclb
outsl
push
pop
cmp
adc
sub
add
mov
daa
imul
mov
xlat
lret
mov
xchg
not
cmpsb
or
pop
jo
sti
add
div
lds
call
shrb
mov
lds
xchg
mov
add
stos
out
dec
mov
es
scas
adc
push
and
loopne
mov
data16
jb
movb
gs
subb
pop
in
cmp
cwtl
push
inc
xor
xorb
push
jbe
jge
repnz
gs
xchg
adc
shll
lock
and
fnstenv
dec
mov
leave
jo
ret
dec
push
cltd
sbb
mov
xor
iret
lock
out
in
loope
mov
add
iret
sub
leave
jb
push
lds
in
scas
pop
push
mov
data16
lahf
xchg
sbb
jmp
jecxz
mov
lock
pop
div
vmwrite
lahf
lahf
pop
ss
lock
jno
or
sbb
f2xm1
les
out
jl
and
mov
mov
inc
clc
bswap
xchg
js
in
out
cld
adcb
xchg
xor
icebp
xor
std
pop
mov
push
and
cmp
shrb
into
cmp
xor
adc
add
out
xor
inc
sub
mov
add
pusha
js
scas
das
push
pop
cmpsl
jecxz
orb
xchg
jb
loop
inc
dec
adc
ja
sti
pop
adc
pop
xor
dec
and
push
stos
test
aad
jb
lds
lock
std
sub
jle
add
jno
mov
mov
aas
insb
clc
cmp
shl
outsl
sbb
adc
sub
pop
in
daa
adc
or
pop
adc
int3
adc
add
sar
add
fisubrs
daa
flds
lock
inc
shlb
mov
jmp
cld
xor
push
jbe
adc
xor
sub
pop
sbb
cmp
cmp
adc
mov
pop
jg
out
jle
xor
sarl
lock
dec
adc
mov
mov
mov
rcrb
xchg
repz
push
nop
filds
adc
add
or
orl
mov
or
pushf
push
outsl
jmp
fisubrs
and
pop
in
jmp
dec
dec
mov
lcall
outsb
mov
xchg
mov
xor
cmp
add
adc
lock
xlat
rcrl
repnz
and
mov
insl
iret
out
adc
jne
sbb
sub
ljmp
cld
int3
dec
pop
mov
pop
in
xchg
sub
imul
xchg
faddp
jle
mov
pop
mov
adc
sbb
cli
inc
or
sub
push
mov
mov
jg
and
mov
mov
iret
les
inc
sub
inc
jo
xorl
mov
jo
aad
mov
sub
shlb
roll
insl
imul
xchg
jne
xchg
or
call
in
mov
ja
outsl
sahf
mov
std
xor
fisttps
jb
xor
sub
lods
pop
repnz
sub
jmp
dec
sbb
outsl
mov
jns
cli
nop
std
pop
push
adcb
sbbb
adc
cmc
add
or
shrl
fimull
outsl
iret
lret
mov
cwtl
aas
sbb
mov
pop
jecxz
xchg
test
cmp
sub
loop
mov
fisttpll
fisubl
fistpl
lods
loope
sbb
scas
popa
shl
mov
mov
lret
lret
fs
adc
je
adc
dec
sub
ja
push
lea
xor
push
adc
jmp
ret
insl
dec
ljmp
xor
push
mov
mov
pop
xchg
cltd
ror
loopne
mov
dec
jmp
out
ja
ret
ret
repnz
inc
inc
lods
data16
jg
loop
xorl
jp
dec
sbb
call
cmp
sub
lcall
jl
xchg
ret
mov
push
pusha
rorl
stc
inc
divb
inc
inc
cmpl
cltd
adc
lods
cmp
in
pop
pop
inc
setg
mov
inc
adc
aam
jns
inc
test
jl
int
adc
imull
or
clc
mov
in
sarb
scas
add
add
push
jbe
out
outsl
xchg
xchg
mov
dec
cwtl
lock
sbb
lods
pop
rorb
in
loope
jg
stos
aad
sub
adc
cmp
inc
pop
mov
push
data16
popa
xor
pop
or
and
cltd
outsl
outsl
push
mov
inc
jmp
loope
addl
lods
inc
call
clc
pushf
xor
jecxz
sbb
push
lods
into
js
into
add
inc
fwait
xor
xchg
push
pop
filds
xchg
inc
cmovg
xchg
sbb
ficompl
mov
insb
aad
cmp
ret
jp
push
clc
mov
xor
orb
adc
jmp
jns
lock
mov
inc
pop
cltd
dec
adc
orl
sti
stos
cmpsb
lret
je
stos
sub
int3
clc
cmp
ret
std
cmp
repnz
mov
push
adc
addr16
sbb
and
out
gs
lods
popa
mov
les
lret
xchg
and
cmp
loop
inc
pop
fdivrp
inc
fcmove
sub
sbb
pushl
mov
mov
in
add
inc
lcall
mov
or
movsb
push
lock
int
inc
mov
fiaddl
scas
into
dec
and
inc
pushf
ljmp
mov
data16
lods
test
mov
in
or
sbb
dec
int3
add
fistpl
into
lock
xor
mov
xchg
in
ljmp
dec
adc
pop
sahf
insb
arpl
push
add
cmp
lock
mov
fwait
ja
insb
sar
and
in
cltd
xorb
insl
fwait
stc
loop
add
inc
xor
xchg
inc
cmp
push
jge
jg
jl
jbe
mov
in
adc
roll
in
ret
add
paddw
sbbb
mov
jo
stos
mov
sbb
xchg
scas
test
shrl
fcomi
xchg
pop
push
jne
aam
std
cltd
push
inc
push
adcb
js
pop
lahf
fwait
movsb
adc
das
scas
jo
add
sub
in
cltd
ja
repnz
sbb
push
pop
adc
cltd
jecxz
jmp
lahf
xor
shrb
adc
into
out
adc
lock
cmp
add
lods
or
in
mov
test
or
adc
xor
addl
inc
repz
in
sub
adc
shrl
imul
mov
cmp
lock
outsb
lock
mov
aam
leave
xchg
cmp
outsl
cmp
pop
pop
dec
add
push
aad
xchg
xlat
sahf
js
dec
push
jno
sub
pop
xor
pop
sbb
clc
mov
sarl
lods
adc
jl
pop
and
adc
lret
inc
loopne
loope
fcompl
push
xchg
push
add
inc
and
mov
sti
sub
std
andl
loope
cli
call
mov
inc
xchg
jno
add
push
lea
stos
xor
or
push
add
lock
outsl
jp
insb
cli
add
cwtl
loope
popf
fwait
xor
int3
push
notb
shr
mov
or
ficoml
and
ljmp
pop
jne
mov
xchg
rcrb
shr
mov
or
push
shl
rolb
adc
dec
rcrb
cmpsb
sbb
ljmp
sahf
jb
xchg
mov
jge
frstor
mov
and
xchg
aas
jae
jnp
movsl
jg
adc
and
cmp
fs
aaa
into
ja
ljmp
pop
movsl
adc
rclb
jle
jo
aaa
push
add
push
inc
gs
mov
xchg
xor
out
ret
dec
ljmp
aaa
in
cltd
jb
fisttpll
sbb
js
je
repz
lret
sbb
sub
adc
jb
ljmp
popa
ja
stos
add
ret
mov
mov
jg
lahf
or
add
adcb
push
xor
mov
enter
sub
xchg
mov
sub
xor
jmp
or
outsb
cld
inc
int3
mov
jae
outsl
adcb
leave
cli
in
mov
mov
iret
xchg
add
ror
stos
stos
adcb
cmp
cmpsb
stos
add
scas
ljmp
sahf
jg
mov
mov
outsb
jle
sbb
and
sbbb
shlb
call
loopne
cld
clc
mov
rorl
sbbb
jb
dec
rorb
insl
dec
jg
xchg
clc
pop
es
daa
xchg
inc
loope
loopne
lahf
pushl
and
xchg
aas
jae
outsl
pushf
push
xchg
dec
jp
mov
movd
mov
adcb
xchg
adc
ljmp
mov
jp
mov
pop
push
adc
shlb
xor
mov
xchg
mov
shlb
cld
pusha
inc
cmp
sahf
sbbl
outsb
adc
ficoml
sub
or
xchg
cmp
jg
popa
pop
mov
jnp
aas
sti
icebp
xchg
cwtl
std
icebp
repz
pop
xor
mov
add
adc
push
jbe
aas
push
push
adc
xchg
out
fistps
fsubs
jo
pop
jp
sbb
outsb
lahf
nop
mov
dec
push
sub
es
lods
pop
jbe
mov
add
sub
lret
or
add
das
ja
repz
mov
pop
rcll
xchg
mov
sub
test
xor
pop
push
mov
mov
xchg
cmpb
cmp
fldl2e
mov
ds
dec
inc
and
push
arpl
sti
jo
xor
push
rcll
and
xor
cmp
shrb
pop
mov
dec
mov
sub
push
rcrl
cs
or
pavgb
mov
or
mov
mov
adcb
cmp
inc
sti
pop
adc
out
jge
arpl
lods
pop
repz
iret
lahf
sbb
shl
push
jb
mov
ljmp
cmp
inc
cmp
and
and
out
repz
xor
aas
ljmp
adc
and
jo
or
loope
add
xchg
adc
int
jg
jb
sub
aam
movsl
icebp
add
cmpl
mov
decl
int
xor
loopne
inc
mov
add
sahf
add
pop
and
mov
mov
jo
insb
iret
adc
popf
jge
or
aaa
shll
lahf
xchg
add
test
sub
sub
push
and
out
push
jmp
pop
aas
repz
scas
nop
adc
ja
loopne
das
lret
int3
movsl
lods
add
mov
call
adc
notb
and
test
aaa
pusha
orb
out
add
or
nop
icebp
insb
jp
out
loopne
adc
stos
jp
repnz
push
xchg
cmp
roll
inc
xor
inc
icebp
aas
loopne
repz
mov
adc
dec
outsl
mov
testl
lods
jl
jle
stc
mov
js
outsb
sub
outsl
cmp
imulb
jecxz
daa
jo
xchg
push
icebp
dec
divb
icebp
stos
inc
fcmovnu
insb
ret
ret
jo
pop
xor
cmp
jg
xor
icebp
mov
mov
adc
hlt
rolb
push
icebp
outsb
cmp
xor
and
adc
in
fisubs
push
mov
pusha
gs
iret
xor
pop
or
loope
and
dec
icebp
adc
ljmp
adc
icebp
aaa
nopl
repz
or
dec
push
mov
sub
test
ficoms
pop
mov
jb
pop
push
dec
cld
adc
mov
xor
or
cltd
out
daa
aad
rcll
xchg
addb
lock
and
add
xlat
cs
ljmp
sbb
movsl
and
lds
outsl
push
dec
adc
mov
mov
ret
xchg
or
push
lahf
imul
divl
cmp
or
lods
and
sbb
call
xor
push
lcall
push
inc
mov
out
aad
popa
sub
loope
dec
xchg
pop
loopne
cmpsl
and
aam
dec
icebp
adc
cmp
fsts
xor
mov
lods
dec
mov
scas
jae
xor
mov
push
pop
xlat
fwait
int3
xor
and
sti
loop
push
push
loop
xchg
outsb
loop
mov
push
push
cmpsb
push
dec
decb
xchg
adc
subb
gs
rcl
loopne
iret
mov
push
inc
imul
call
out
lahf
das
or
or
xchg
aas
repz
or
rolb
dec
insl
adc
test
push
push
call
aaa
pop
mov
ljmp
ja
push
pop
filds
add
xor
cs
int
stos
xor
das
out
sbb
hlt
dec
mov
xor
cmc
ljmp
notb
bound
jp
shrb
xor
add
ljmp
lods
mov
daa
fildll
fwait
add
decl
dec
mov
xor
insl
mov
repz
push
jmp
mov
cmp
xor
ja
add
sti
lea
stos
push
mov
icebp
add
shll
or
mov
ja
mov
or
push
leave
cld
loop
cmc
sub
xor
add
add
iret
loop
std
xor
scas
push
pop
pop
icebp
sbb
shlb
push
adc
push
xor
bound
out
scas
cmp
add
pusha
inc
nop
inc
int3
adc
xchg
adc
scas
mov
jp
pop
jb
out
push
rol
int
push
add
icebp
mov
push
mov
xor
test
jo
not
nop
jl
nop
add
mov
pop
shl
mov
dec
loop
mov
shlb
or
adc
pop
push
pop
mov
add
ljmp
nop
loopne
xor
mov
in
jle
jbe
mov
in
mov
imul
scas
xchg
adc
mov
in
mov
push
jb
dec
mov
sub
push
push
xor
loope
mov
shrb
repz
xchg
pop
mov
add
ror
xor
dec
in
loop
pop
out
dec
cmp
clc
shlb
xor
push
lea
inc
mov
loopne
or
aas
cld
jg
and
push
pop
and
hlt
adc
mov
jmp
clc
inc
xor
sbb
or
iret
mov
ss
mov
pop
icebp
dec
mov
hlt
sub
inc
mov
add
sahf
jle
repz
loop
xchg
popa
push
mov
loopne
inc
cmp
andb
push
icebp
sub
sub
jle
rcr
xor
mov
outsb
call
jb
or
push
mov
push
push
shlb
adc
mov
clc
add
mov
xor
or
inc
sub
pop
sarb
call
pop
jle
call
mov
mov
adc
xchg
adc
aas
add
jp
xchg
pop
stc
je
lahf
fwait
jb
sub
inc
stos
icebp
dec
in
aaa
cmpsl
add
dec
clc
jnp
sbb
in
adc
mov
adc
dec
jp
fwait
ljmp
add
push
adc
clc
mov
lret
or
mov
int3
out
mov
jg
mov
adc
mov
in
enter
pop
and
lret
cltd
dec
mov
sub
mov
shlb
inc
xchg
test
loopne
loopne
imul
ret
sub
push
dec
div
xchg
push
jge
or
ljmp
adc
inc
cmp
ljmp
xchg
push
or
sub
dec
add
add
scas
and
imul
sbb
xor
cmp
icebp
sbb
lahf
and
das
scas
adc
fisubs
and
and
jle,pt
loopne
aaa
lahf
mov
dec
dec
daa
imul
sub
adc
or
and
das
or
inc
push
or
test
add
decb
push
stc
sub
pop
pop
inc
rcrl
mov
adc
shr
fcmovnu
jmp
int
mov
rcll
push
adc
sbb
mov
adc
mov
xor
and
mov
mov
out
inc
xor
pop
shlb
sbbl
pop
xchg
inc
in
lcall
clc
out
inc
std
xchg
jne
mov
and
fistps
shl
xor
dec
push
aas
pop
faddl
std
pop
out
xor
icebp
es
mov
cmp
insb
and
xchg
adc
and
out
pushf
lahf
jecxz
pop
in
in
aam
mov
mov
loop
sti
adc
fisubrs
cmpl
fcmovne
cmpb
lds
xchg
or
cmc
lock
mov
jae
enter
sub
cmp
jno
xchg
popa
adc
es
stos
mov
xchg
fildll
jno
loopne
inc
stc
sbbl
in
repz
or
sub
mov
fstpt
sub
rolb
repz
ror
mov
xor
pop
xchg
ficoml
ret
lcall
mov
fnstsw
fsubr
adc
or
jp
icebp
xor
subl
adc
hlt
mov
adc
out
adc
gs
add
jp
jg
loop
mov
xchg
cmc
jne
adc
add
repz
sub
fwait
and
adc
loop
mov
pop
sub
andb
dec
mov
sbb
lea
mov
ds
js
int3
aam
jno
in
adc
xchg
adc
or
sbb
adc
push
ret
insb
jns
jg
adc
and
mulb
sbb
xchg
ljmp
sbb
jmp
sbb
add
sub
push
mov
test
inc
and
shll
xchg
xor
inc
xor
adc
xor
adc
push
sbb
mov
xchg
mov
test
out
cmp
and
push
fs
out
fcmovnb
jne
cs
adc
mov
lcall
sub
stc
cli
dec
icebp
cwtl
xchg
pop
or
mov
leave
mov
mov
adc
jl
pusha
repz
cmp
mov
adc
or
add
scas
and
jo
int3
cmp
out
imul
aaa
xor
andb
lahf
outsl
adc
aas
jmp
dec
cmp
sub
xchg
adc
jle
jb
xor
lcall
inc
clc
shr
jne
push
int
adc
sub
xor
andb
stc
test
jle
scas
outsl
xor
bound
adc
or
popf
out
clc
sub
mov
mov
xor
insl
or
cmp
je
lahf
rorb
jle
jle
sub
mov
dec
xchg
dec
mov
dec
cmp
cmpl
cmpl
adc
and
inc
mov
jg
adc
js
jle
inc
dec
sbbl
push
sub
aas
mov
adc
sbb
movsl
out
add
add
jns
sbb
mov
icebp
cmp
test
mov
daa
jnp
jmp
cmpsl
mov
call
icebp
jae
enter
jns
inc
scas
mov
ljmp
jb
add
and
push
cmp
push
jg
movsl
adc
dec
inc
and
dec
push
mov
addb
into
repz
shr
cmp
mov
nop
push
mov
nop
sbb
inc
xor
outsb
cld
jg
scas
xor
xchg
sbb
adc
pushl
icebp
clc
data16
inc
xor
add
mov
in
rolb
loope
dec
rorb
jp
aad
pusha
rolb
leave
adc
nop
adc
push
insl
mov
insb
inc
dec
mov
mov
ret
mov
adc
mov
mov
btr
cmpsb
in
mov
push
ds
sbb
xor
xchg
inc
out
mov
int3
adc
ficompl
cmp
xor
sbb
mov
xchg
sub
sub
add
outsb
push
jge
rclb
ret
jp
adc
nopl
repnz
sub
xchg
stc
add
dec
aaa
cmove
cmp
and
sub
mov
push
cmpsb
inc
xchg
jle
push
fists
in
push
in
cwtl
dec
orb
fwait
inc
adc
lcall
inc
ljmp
rclb
incl
push
jg
adc
sahf
je
push
shlb
mov
inc
ss
adc
sub
outsb
inc
jle
xchg
stos
loope
pop
xor
loope
fidivrl
jmp
mov
cld
adc
fwait
addb
rcll
and
push
cmp
roll
icebp
lcall
idiv
xchg
fists
aaa
sbb
mov
mov
xor
adc
scas
jbe
ficomps
sbb
pop
inc
orps
out
fimull
mov
pop
or
hlt
jmp
push
or
out
ret
push
loop
xchg
btl
ljmp
repnz
subb
sbb
mov
xor
and
loope
add
es
sbb
sti
lcall
cmp
stos
repz
jae
lea
ret
sbb
lea
jmp
adc
test
loope
jbe
repz
inc
pop
lods
lret
aas
cmpsl
fiadds
ja
lret
aam
jmp
mov
icebp
fstps
push
mull
sbb
push
adc
inc
loop
jb
mov
xchg
fs
xchg
aaa
rcrb
scas
xor
nop
mov
adcl
or
lahf
xchg
test
inc
jno
and
jne
fidivs
dec
adc
les
add
adc
out
mov
cmp
push
shl
xor
insl
pop
adcl
sahf
xchg
add
push
repnz
mov
inc
sti
ret
add
mov
sub
or
iret
add
dec
cmp
fs
cmpsl
add
adc
movsl
icebp
ss
xor
jecxz
sbb
andb
xorb
mov
pop
lock
mov
mov
fwait
jnp
jo
cmp
adc
mov
insl
bnd
popa
popf
icebp
cmp
xchg
add
sub
jp
adc
leave
stos
icebp
fstl
les
mov
jo
pusha
mov
dec
repnz
dec
leave
bnd
loope
je
xorl
adc
fidivl
rcl
cli
xorl
and
out
cltd
das
mov
repnz
mov
adc
loope
fwait
add
sbb
cli
lods
xor
adc
mov
jl
ds
lock
call
mov
test
and
or
stc
mov
nop
nop
fimuls
into
jle
inc
shr
lock
fsub
push
shll
jg
jo
enter
mov
xchg
push
fcmovne
xor
fsubs
jmp
les
in
mov
aam
scas
jb
int
shrb
dec
xor
scas
sbb
xchg
out
push
divb
fs
imul
inc
mov
xor
test
lcall
sub
jnp
test
das
insb
adc
outsb
xor
adc
push
sub
mov
mov
pop
bound
xchg
mov
cvtps2pi
or
out
push
fisubrs
stos
sbb
insb
lock
insl
lods
bound
aam
aaa
scas
in
sbb
inc
loopne
loopne
mov
pushf
dec
mov
int3
ret
cmp
xor
jbe
mov
add
sti
outsl
mov
push
mov
cmpsl
mov
push
test
in
cld
mov
xor
sub
mov
adc
xor
outsb
out
add
lods
pop
scas
dec
outsl
imul
dec
mov
aaa
add
xchg
loop
pop
dec
pop
icebp
add
mov
lds
scas
cmp
jg
xchg
push
pushl
pop
decb
daa
out
sub
push
pop
cltd
jb
pushl
mov
mov
and
sbb
jnp
subb
xchg
lods
out
subb
insl
adc
adc
add
adc
ficoms
xor
add
jns
shrl
loop
subl
mov
stc
dec
call
push
popf
pusha
xchg
pusha
sbb
js
sub
lock
out
mov
cmp
and
adc
jg
adc
cmp
mov
xchg
pop
ficompl
inc
shrb
ja
sbb
cmp
shr
xor
or
mov
jbe
jns
mov
jae
daa
jmp
lea
push
jo
stos
loopne
jno
and
adc
loope
ret
mov
bound
outsb
ficoms
outsl
je
decl
pop
adc
xor
fistpll
mov
adc
andb
imul
loop
cmp
into
or
xchg
xlat
ret
xchg
ror
fmuls
mov
in
mov
lcall
rcrl
mov
and
inc
cmpsl
sarb
fcomip
insl
push
adc
subl
adc
iret
pop
adc
iret
fdivrs
loop
ss
sbb
incl
lock
and
xor
push
gs
push
das
jnp
out
stos
mov
test
or
adc
pop
in
pusha
imul
add
loopne
jb
inc
adc
jmp
fildll
mov
dec
aaa
pop
jg
inc
popa
iret
daa
adc
iret
jl
ror
mov
jg
mov
jnp
inc
iret
sbb
call
ret
mov
decl
sbb
scas
jge
in
cltd
cmpsl
mov
ficompl
pushf
adc
in
dec
popa
mov
loope
rcrb
jb
sub
sub
inc
aam
jnp
and
adc
adc
and
dec
repz
ret
mov
lret
rcl
pop
fisubl
lahf
iret
lret
hlt
push
mov
mov
jbe
mov
movsb
and
jbe
in
cmp
push
cmp
out
or
rsqrtps
rcll
fcos
call
push
aas
push
in
dec
inc
js
insl
or
aaa
inc
push
mov
outsl
lock
jle
adc
mov
adc
or
ja
or
jnp
xor
loope
or
xchg
add
push
sbb
mov
scas
sbb
pop
pop
xchg
adc
push
fisttps
mov
insl
insl
xchg
fnstsw
xchg
daa
ljmp
xchg
add
jge
data16
or
or
mov
das
pop
mov
mov
mov
cld
loop
and
lock
sbb
add
ret
pop
lret
sub
xchg
pop
mov
sbb
xchg
ret
mov
jno
hlt
loopne
aaa
mov
xor
cmp
lods
pushl
lods
loop
int3
scas
scas
xchg
lret
cmp
dec
in
jg
push
loop
in
ljmp
xor
dec
subb
mov
repz
mov
repz
push
mov
stos
add
mov
adc
add
js
mov
nop
xchg
stos
rolb
call
sahf
xor
loopne
mov
sub
js
mov
jae
adc
scas
loopne
incb
loopne
add
fucom
call
xchg
sbb
loop
adc
jmp
dec
xlat
adc
iret
adc
lcall
jg
adc
xor
ret
addr16
sbb
sbb
sbb
adc
inc
mov
jle
insb
pop
js
add
scas
shll
mov
pop
incb
pushl
cltd
icebp
dec
push
ror
push
pushl
adc
xor
cmp
mov
xchg
add
mov
xor
mov
mov
jg
mov
out
mov
stos
and
mov
test
adc
xchg
jb
mov
decb
stc
push
jmp
jo
scas
xchg
scas
jmp
mov
push
pop
int3
pop
xchg
mov
push
imul
push
stos
pop
fdivp
in
sub
dec
lcall
outsl
mov
cmp
cli
and
lahf
sbb
or
mov
xchg
adc
xor
mov
mov
mov
xchg
scas
add
lcall
test
adc
mov
cmp
ja
inc
jg
mov
in
mov
adc
test
adc
inc
push
loopne
mov
loopne
cmp
into
sar
nop
mov
pop
icebp
jno
outsb
xchg
in
loope
xchg
mov
dec
jb
out
dec
cltd
loope
push
or
push
stos
inc
jbe
or
jnp
xor
lcall
fldenv
mov
imul
xchg
cmpsb
adc
cmp
out
pusha
xchg
mov
add
xorl
rcrl
incl
pop
iret
cmp
mov
dec
pop
mov
push
pop
incb
scas
cli
aas
cld
cbtw
jb
mov
mov
dec
imul
dec
out
or
icebp
loope
jle
dec
and
outsl
push
das
add
loopne
outsb
mov
mov
xor
mov
subb
adc
jp
jle
addb
xchg
aaa
xchg
jg
adc
out
stos
loopne
xor
xchg
and
xchg
mov
adcb
jp
adc
outsb
mov
loope
dec
mov
add
movsl
push
adc
das
shrb
fsts
ret
push
or
movups
pop
jo
xchg
insl
shl
and
test
mov
xchg
out
ret
imul
es
or
fbld
pop
adc
bound
outsb
pop
jbe
jp
jle
adcb
xor
xchg
jnp
xor
mov
lcall
inc
test
sarb
adc
inc
add
test
adc
adc
cmpsb
add
inc
jmp
call
pop
jle
jnp
out
sub
js
cld
call
mov
shrb
shll
int3
xchg
push
dec
scas
rcrb
jbe
in
push
les
push
dec
dec
cmpl
sti
scas
repnz
xor
aaa
ficoml
adc
pop
jg
mov
jbe
jp
jle
xorb
mov
xchg
sbbb
fistpll
mov
jle
mov
pusha
lock
test
test
ja
add
xchg
adc
cmp
cs
sbb
cmovne
test
mov
add
cmp
xchg
jae
aaa
adc
sub
xor
add
xchg
decl
call
shlb
add
lods
rorb
in
lcall
scas
into
stos
test
sbb
adc
inc
adc
push
xor
pop
bound
outsb
adc
jbe
jp
jle
sub
jnp
xor
inc
xchg
mov
mov
jb
shrb
bound
ja
dec
dec
loope
ds
rdmsr
cs
mov
push
aaa
sub
outsl
and
out
jbe
shlb
lock
pop
int3
cmp
stos
insl
mov
das
jae
push
ret
fs
mov
xor
in
insl
pushf
xchg
pop
fiadds
out
iret
loop
inc
popl
xor
push
inc
adc
dec
jg
adc
push
jnp
xor
outsb
ja
or
ja
or
jnp
xor
inc
jle
xchg
and
lcall
outsb
mov
pop
sbbl
push
aad
inc
pusha
sarl
adc
adc
sub
pusha
jmp
fmull
std
loope
and
scas
test
idiv
jmp
data16
fsubrs
jnp
sub
ds
loop
inc
outsl
add
adc
repz
ss
add
adc
push
adc
pop
adc
data16
add
sub
jbe
pop
dec
sub
scas
iret
aaa
adc
iret
inc
icebp
push
jp
jge
aas
outsl
outsl
xchg
mov
and
and
mov
push
xor
popa
sbb
xchg
mov
adc
xchg
loop
sbb
cmp
lret
pop
in
je
lods
pop
notb
cmpsl
out
scas
in
andb
pop
test
sub
jmp
dec
mov
xor
jg
sbb
stc
in
adc
rorb
shrb
stos
xor
adc
aas
cmp
pusha
jae
xor
shlb
data16
cmp
mov
pop
sbb
ret
jle
clc
out
push
mov
bound
pop
xlat
push
adc
mov
dec
fs
in
dec
data16
and
jns
jg
sahf
js
loope
rdmsr
shrl
stos
mov
inc
dec
xchg
div
in
dec
jmp
inc
testb
lods
sub
adc
out
aaa
shlb
adc
mov
not
lock
xchg
mov
mov
idivl
mov
out
lods
xchg
insl
in
sub
cmp
mov
adc
pushl
dec
adc
clts
cmp
loop
sbb
jp
jle
or
mov
and
add
popf
pushl
and
stos
xor
dec
push
mov
movsl
xchg
inc
adc
stos
int3
dec
shl
sbb
loop
mov
fdivl
mov
xor
imull
mov
es
divb
imul
loopne
iret
imul
pop
lea
pop
pop
in
add
lods
call
pop
xchg
jnp
jg
jb
incl
jbe
sub
lahf
xchg
jbe
jge
xor
push
cmp
jg
push
sub
mov
adc
pop
add
xor
icebp
jne
call
call
mov
add
cld
mov
loop
mov
pop
mov
jp
sub
outsl
test
outsl
lods
adc
incl
mov
in
aas
adc
ja
iret
addr16
jp
mov
add
or
inc
xchg
scas
mov
adcb
inc
lcall
pop
lock
push
adc
es
add
xor
xor
les
and
or
mov
dec
cmp
pusha
dec
lea
imul
mov
mov
negb
int3
movsb
lea
push
inc
fmull
dec
sarb
jle
sbb
xor
xor
outsb
xorb
or
outsb
lcall
push
test
rcrb
incl
cmp
loop
sarb
js
inc
push
cmp
jae
jns
add
dec
int
stos
dec
pop
jno
les
adc
invd
inc
idiv
lock
repz
repnz
fstpt
adc
outsb
mov
lods
xlat
aas
and
mov
jne
in
push
mov
mov
push
push
dec
push
push
aas
lret
and
adc
lret
add
pop
push
ret
mov
insl
mov
sub
cmc
andl
das
int
psubw
inc
adc
cmp
ljmp
xor
sub
mov
shrl
int3
shrl
popf
cmpsb
mov
das
cmp
shl
addb
loop
stos
dec
sub
dec
out
divl
fmull
mov
ja
xchg
fwait
andb
add
jmp
pop
adc
shll
cltd
jnp
inc
or
movaps
addb
push
lods
jg
loop
jmp
cmp
jle
clc
and
inc
repnz
es
mov
stc
movsl
cmpsl
lea
andl
pushl
mov
mov
ror
testl
mov
xchg
lcall
dec
xchg
loop
in
pop
test
sub
push
and
and
mov
aaa
xor
cmp
jns
push
fs
sbb
icebp
loopne
pop
fs
cpuid
int
imulb
mov
subb
jmp
or
pop
decb
loop
loope
push
icebp
out
das
ret
js
lea
aam
lods
xlat
test
mov
push
and
ss
negb
in
lea
sahf
ficompl
imul
add
push
sbb
es
mov
or
ja
in
into
fnstsw
ljmp
popf
sub
xor
pop
decb
loop
fstp
push
pusha
cwtl
mov
das
xchg
lea
push
rclb
insl
or
add
sarb
hlt
fisubrs
scas
mov
inc
fnsave
dec
xchg
sbb
mov
dec
not
aad
in
fucom
movsl
imul
or
lcall
les
mov
push
aad
imul
xchg
xchg
xchg
mov
rclb
or
loop
push
aad
into
sbb
cwtl
sub
decl
movsl
mov
std
xchg
sbb
pop
mov
loope
xchg
aas
call
or
lret
lods
inc
loop
aad
sarl
inc
hlt
adc
xchg
test
dec
insb
fimuls
scas
lea
arpl
sub
jge
adc
or
adc
ret
xorb
jnp
xor
clc
shlb
cmp
pop
lea
mov
int3
call
pop
sbb
sub
insb
popf
loop
leave
pop
adc
aaa
enter
int
adc
lret
insl
add
daa
inc
aam
aaa
sub
jno
jle
pop
test
mov
add
into
push
outsb
pushl
cmp
pop
and
mov
aad
paddusw
lods
insb
popf
loop
dec
aaa
fxtract
inc
push
popf
fiaddl
cwtl
push
loopne
je
adc
aaa
ss
inc
jle
jbe
in
push
jp
inc
sarl
or
aad
imul
ret
mov
popf
adc
dec
addb
dec
negb
sbb
cs
sar
dec
cmp
insl
loop
sar
out
dec
sbb
popf
dec
das
aam
mov
adc
call
adc
and
cmp
int
add
shlb
sub
lods
mov
in
add
scas
jno
out
and
call
lcall
gs
fxch
insb
push
data16
xor
mov
leave
loopne
es
sahf
mov
rcr
ret
lea
test
fsubrl
test
es
stc
adc
aaa
xchg
ja
xor
fsubrl
mov
adc
and
push
sub
pushf
test
mov
int
fstps
orl
or
and
gs
pop
sbb
insb
push
inc
lods
sar
xchg
mov
leave
call
nop
loop
jmp
rolb
cmp
call
lsl
mov
and
ja
ss
sahf
cmp
sub
dec
jns
ljmp
xchg
jo
pop
pop
push
test
push
jp
inc
cli
loop
hlt
and
outsl
icebp
and
pop
das
ljmp
sbb
pushf
nop
dec
cmp
daa
jge
stos
lea
subl
pop
aad
incb
mov
sbb
sbb
cmp
and
shr
xor
fistpl
sbb
lahf
fxrstor
xor
icebp
mov
in
pop
or
js
inc
jnp
inc
push
and
ficomps
cmp
stc
cltd
push
pushf
push
mulb
fcomip
test
pop
sbb
sahf
sub
pop
cmp
jp
pop
decb
loop
mov
push
call
jle
lods
jp
jmp
in
enter
ss
xchg
fsubrl
sahf
push
in
push
ds
adc
cmp
xchg
ret
xchg
xchg
push
pop
andb
pop
add
rcll
push
mov
je
aad
stos
lcall
mov
gs
ljmp
mov
call
mov
loope
icebp
add
mov
push
decb
sbb
cmpsb
bound
loop
in
pushf
dec
fmulp
push
mov
cmpsb
inc
xchg
lods
xor
cmpb
push
sub
ljmp
dec
push
iret
and
pop
adcl
mov
and
xchg
test
in
fdivrl
clc
mov
adc
jle
and
lcall
xchg
push
call
push
jb
mov
push
xor
mov
xor
cmp
lcall
push
das
mov
and
shrb
in
add
out
mov
jg
adc
inc
loope
ret
and
add
test
push
dec
into
lds
mov
inc
or
sahf
sarb
dec
cmpsb
lahf
xorl
mov
jp
xor
fiadds
stos
loope
jb
ret
fs
lcall
jmp
js
sbb
lds
scas
mov
dec
push
adc
add
dec
inc
push
rorb
frstor
xlat
mov
mov
adc
lfs
jb
adc
jp
jle
addb
jp
nop
xorl
outsb
xchg
in
je
scas
push
jmp
movsl
push
cmp
pop
loopne
call
mov
cwtl
hlt
push
fsts
fcmovb
and
pop
pop
hlt
mov
das
inc
mov
rsm
iret
sahf
ss
xor
scas
mov
jg
add
dec
imul
and
iret
push
test
add
dec
or
pop
sbb
pop
push
bound
sbb
loopne
push
dec
jmp
inc
lahf
incl
jb
jnp
adc
xchg
jae
or
dec
mov
fdivr
mov
enter
pop
adc
xor
inc
std
stc
shl
inc
add
insb
inc
int
cmpl
xor
mov
push
dec
leave
aas
adc
outsl
xor
ss
mov
ja
mov
lods
ds
shlb
and
das
cmp
and
aam
das
call
dec
aam
sub
sbbb
pop
bound
adc
add
and
dec
lahf
incl
inc
inc
jb
xor
sbb
in
inc
repnz
leave
shl
in
in
adc
add
in
cmp
add
iret
inc
cmc
mov
cltd
imul
jno
mov
shl
pop
into
ret
mov
pop
push
mov
aaa
inc
idivb
inc
or
fisubrl
inc
rolb
imulb
mov
imul
lea
pop
shlb
push
sbbb
and
pop
ficompl
add
mov
adc
and
push
gs
jmp
vmovdqu
or
clc
and
and
pop
ss
mov
add
std
subb
inc
xchg
xor
push
mov
into
mov
loopne
xchg
aas
outsl
pushl
or
inc
or
adc
lods
mov
call
rolb
cmp
mov
adc
das
movsl
iret
pop
mov
dec
call
push
aam
sub
aam
imul
ljmp
pop
decl
mov
pop
decl
lods
push
bound
sbb
ds
xchg
decb
sub
rcr
mov
pop
pop
out
outsl
push
add
xchg
adc
jo
test
mov
es
or
inc
popf
rcr
mov
pop
push
mov
insb
stos
setle
dec
add
cmpsl
ljmp
xchg
rorb
jp
xchg
or
das
dec
mov
mov
push
out
push
adc
pop
imul
ljmp
jnp
xchg
mov
jae
cwtl
lret
aaa
mov
in
cmp
idiv
inc
aad
inc
jl
int3
sub
ds
pop
scas
inc
cmp
stos
mov
pop
sahf
mov
jg
xor
mov
insl
das
rcrb
in
pop
stc
loop
sahf
icebp
loop
push
push
jmp
neg
lock
imul
in
in
cltd
pop
popa
pop
or
or
push
call
push
pop
sbb
pop
call
and
popa
jnp
add
mov
ss
cmp
movsl
jae
or
xchg
push
int3
rclb
or
mov
sub
stos
pushl
cmp
ljmp
add
cmp
enter
sbb
daa
imul
aas
scas
subl
mov
fidivs
adc
sahf
int
sbb
mov
fisttps
push
add
push
negl
pop
dec
xor
adc
or
adc
push
sub
mov
in
mov
xor
gs
jae
fldenv
int3
in
test
cmp
sub
jnp
jnp
subb
mov
sub
xchg
pop
or
push
add
test
cmc
aas
pop
lock
push
aad
lcall
jnp
xor
pop
ljmp
pop
shr
and
scas
outsl
adc
jo
jp
test
xor
xor
jae
fmuls
adc
pusha
add
call
xchg
fwait
insb
movsl
push
mov
inc
and
decb
dec
fst
inc
test
hlt
lahf
mov
xchg
psllw
ljmp
jp
iret
add
cmpsb
outsb
sbb
sub
add
xor
add
les
dec
nop
daa
dec
loopne
adc
rcrb
test
out
mov
xor
push
mov
push
push
xor
dec
xor
aam
pop
ret
notl
inc
push
xor
cmp
jbe
imul
mov
xchg
mov
mov
outsb
jae
or
adc
xor
xor
dec
iret
das
xor
cmp
imul
jae
mov
xchg
inc
ret
aas
pushf
ds
xor
pop
cltd
jno
dec
ljmp
jae
sub
sbb
sbb
dec
sti
pop
sbb
insl
dec
pop
aaa
dec
popf
push
ret
inc
xor
fstl
mov
mov
sar
orb
aaa
in
mov
push
movsb
jp
adc
ffreep
adc
cmp
xor
data16
xchg
fcomi
outsb
frstor
aam
aaa
mov
jo
in
rolb
mov
loop
and
adc
pop
pop
pushl
mov
in
es
lods
cmp
stc
cmp
idivb
mov
sbb
mov
jle
incl
idiv
mov
inc
xlat
fildll
incl
out
gs
cmp
mov
pusha
inc
mov
aaa
popl
loopne
stc
xchg
outsb
pop
incb
sub
and
bound
data16
push
in
rcrb
decl
pop
sub
xchg
xor
loop
fstpt
insl
imul
nop
repnz
add
lret
jns
sub
cmc
jl
cmpsb
or
xchg
push
loop
in
pop
sbbl
dec
push
xorb
adc
enter
or
nop
decb
aam
int3
mov
fwait
mov
xchg
das
out
sub
jle
std
pop
sbb
inc
jmpw
pop
ret
xor
xchg
bound
push
icebp
mov
pushf
xor
jmp
adc
icebp
in
sub
fbstp
and
repnz
inc
ds
orl
bound
stos
insb
jb
dec
push
jge
and
push
dec
mov
das
outsb
jmp
adc
in
ja
cmp
ss
ss
stc
adc
or
mulb
gs
mov
pop
jbe
push
test
iret
jne
xor
push
outsb
and
dec
add
cmp
divl
xor
mov
std
xor
pushf
mov
xor
or
into
add
pop
data16
inc
pop
bswap
add
pop
mov
rorb
cmpsl
pushl
cmp
rolb
rclb
and
cmp
cltd
xchg
lods
ret
jle
test
inc
imull
inc
push
mov
jmp
pop
mov
push
jb
out
loopne
push
xchg
xchg
inc
pop
mov
mov
lret
xchg
clc
fs
xchg
cld
jle
incl
repz
stc
icebp
push
cmp
mov
add
ret
xchg
rdtsc
in
mov
xor
dec
cld
loop
sub
xchg
subb
mov
sbb
pop
xchg
or
xchg
push
decl
pop
adc
inc
jae
in
xchg
fsts
lahf
sarb
negb
fstpl
les
repz
outsl
push
movsl
push
adc
iret
xchg
popf
jb
push
jbe
loope
add
jno
xchg
popf
imul
push
enter
lock
jle
xchg
pop
xchg
lods
pushl
pop
std
xchg
decb
push
cmpsl
pusha
cmp
call
dec
insl
insb
rcr
fidivrl
sbb
cmp
or
icebp
push
jmp
bound
jbe
ss
int3
aaa
push
push
loop
ret
scas
jne
arpl
xchg
cmp
xchg
mov
jecxz
xor
ljmp
and
dec
xchg
mov
inc
shlb
push
jp
mov
mov
sbb
mov
loopne
mov
loope
add
shrb
xchg
sub
add
data16
cmc
arpl
idivb
adc
ljmp
clc
icebp
loop
inc
sbb
push
test
cmp
pop
cmpsl
xchg
call
shll
loop
es
push
mov
rclb
insl
jmp
mov
mov
es
aas
jns
push
lcall
fistl
js
ret
aam
lcall
test
sub
gs
roll
mov
jp
fidivs
nop
xor
inc
insl
shlb
add
shlb
incl
jg
inc
mov
stc
push
jge
out
addl
xorb
lahf
mov
mov
sbb
pop
mov
pushf
adc
lcall
fstps
sarb
add
lods
daa
cmpsb
mov
inc
lahf
cmp
or
xchg
adc
int
dec
sub
pop
lahf
push
lods
mov
xchg
ds
jle
call
pop
div
out
adc
les
add
insl
les
adc
jb
pmovmskb
push
or
and
xor
push
std
icebp
nop
and
testb
std
inc
sahf
fisubs
fmulp
add
movsl
cmp
push
adc
data16
ljmp
scas
bound
mov
out
sub
or
jnp
fidivs
lret
adc
mov
in
and
stos
mov
dec
insb
lods
pop
into
cs
xor
push
int
insl
push
pop
stos
xchg
push
call
orb
repz
mov
js
in
add
or
inc
mov
or
testl
add
test
std
int3
pusha
sbb
notb
shll
iret
test
mov
ljmp
aas
xor
stos
pushf
jae
pop
and
mov
and
maxps
mov
scas
mov
les
int3
int
xor
gs
mov
lock
add
scas
nopl
push
aad
andb
sbbb
nop
dec
jb
jns
xor
icebp
xor
cmp
ucomiss
data16
scas
add
inc
add
incb
int3
pusha
sbb
decb
inc
not
repz
jnp
xchg
lea
mov
add
dec
pop
xor
mov
add
jecxz
imul
lahf
push
fnstenv
xlat
stc
and
les
jo
mov
adc
decb
pop
sbb
pop
mov
out
stos
rolb
fistpll
inc
loope
rolb
call
jae
dec
cld
adc
in
rcll
mov
sbb
sub
insl
out
sbb
sub
pop
sbb
adc
les
xchg
fisttps
adc
testb
outsb
divb
addr16
cmp
das
adc
cmp
aas
pop
adc
shrl
idiv
jae
cmp
pop
or
mov
loopne
js
gs
in
fstpl
mov
mov
aaa
add
mov
test
mov
push
in
add
inc
xor
in
out
iret
icebp
xchg
mov
inc
mov
test
mov
mov
movsl
push
lock
icebp
xor
int3
sarb
xchg
ljmp
in
in
punpckhwd
rolb
scas
nop
jp
push
adc
out
pop
cli
xor
pop
add
xchg
sub
testb
outsb
divb
and
add
sarl
gs
jne
jg
mov
lock
xchg
mov
gs
outsl
mov
bound
bound
icebp
push
sbb
push
or
sbb
scas
mov
and
pop
pop
shl
shl
mov
add
cmp
mov
push
inc
jnp
xchg
xchg
cmc
sbb
fistpl
nop
int3
pusha
sub
adc
xchg
xchg
xor
push
inc
idivb
lods
test
pusha
imul
ljmp
jg
sbb
xor
jp
sbb
pop
pusha
orl
loopne
mov
push
in
and
mov
scas
fucom
lock
ja
push
xchg
addr16
insb
out
push
inc
sbb
stos
xchg
loop
stc
push
cmp
rcrb
xlat
loopne
cmp
int3
ret
jp
andl
jo
push
adc
jns
shlb
sbb
fwait
xchg
rclb
jnp
mov
and
adc
xorl
cmp
vmread
lea
jmp
sub
adc
adc
sbb
jnp
mov
aad
repnz
shlb
gs
scas
or
and
cmp
inc
jg
mov
call
aas
scas
aaa
mov
in
andb
stc
adc
sbb
test
inc
pop
loop
jg
cmp
mov
push
les
test
mov
lahf
fwait
cltd
jg
rcl
ds
jg
shl
inc
loop
inc
rcl
mov
xchg
insl
pop
mov
fsubl
xchg
push
dec
insl
xorb
push
push
divb
and
dec
ret
pop
push
arpl
mov
pop
jle
ljmp
gs
in
int3
int3
jg
mov
sub
or
test
push
mov
sbb
cmpsl
lahf
inc
add
xchg
pushf
divb
call
mulb
into
mov
int
bound
iret
pop
scas
push
out
jmp
into
pop
movsl
ud0
lds
jg
push
insb
dec
jnp
loopne
negb
xor
outsb
fst
ja
add
stos
cmp
paddsb
inc
pop
fildll
in
push
push
jg
xor
pop
pusha
les
pop
shlb
xor
and
mov
jg
pop
divb
add
fs
scas
mov
out
cmc
scas
fmulp
or
pop
fimuls
adc
sub
inc
outsl
push
mov
int
mov
xor
stos
mov
dec
into
int
fmuls
adc
aam
dec
jns
inc
add
inc
xorb
lock
sub
gs
mov
push
sbb
inc
push
sarl
imull
shl
mov
mov
or
cmp
xor
inc
cmpl
push
out
ficoms
fdivs
inc
out
stos
xor
pop
inc
xor
add
stos
xor
gs
mov
ficoml
jg
outsl
lods
and
stos
ror
nopl
sti
scas
pop
ret
shr
clc
data16
lods
std
divb
adc
cmp
pop
mov
pop
jp
or
dec
adc
dec
sbb
mov
dec
shrb
test
aas
loopne
loopne
xor
stos
adc
inc
scas
int3
pusha
popa
jg
jbe
mov
fisubrl
sbb
mov
pusha
rorb
test
incl
incb
lea
adc
mov
mov
iret
sahf
jle
xchg
lahf
sub
dec
rcll
xor
movb
outsb
dec
jg
xor
aas
stos
mov
fwait
sub
mov
mov
mov
fwait
jno
xchg
mov
es
lret
add
andl
daa
repnz
jle
out
adc
dec
and
xor
out
bound
decb
mov
cs
loope
ret
lods
push
inc
popf
push
lret
lea
in
inc
testb
js
or
loop
mov
adc
jle
jg
jg
ds
sar
inc
pop
lock
xor
pop
mov
andb
int3
test
inc
leave
mov
les
mov
divb
aad
jecxz
test
adc
mov
lock
xor
daa
dec
cmpsb
pop
rcll
lcall
mov
int
add
aaa
adc
mov
push
negb
xchg
mul
mov
mov
decl
pushf
adc
adc
testb
ficomps
out
jns
xchg
fmul
dec
mov
mov
add
stc
push
rol
insb
cmc
mov
fldt
ret
mov
notb
sbb
testb
jg
sub
sti
sub
cmp
sbb
movsl
in
popa
shlb
neg
jnp
or
negb
fsts
popa
mov
sub
mov
mov
jle
in
mov
jp
loope
and
push
aad
adc
cmp
dec
jbe
lret
ret
in
jp
cltd
ret
stos
not
out
and
add
outsl
pop
jmp
mov
dec
iret
lret
pop
xor
cmpsb
lods
mov
aad
jno
nop
cmp
jo
xor
in
pop
mov
push
cmp
pop
fxch
mulb
ds
rorb
iret
sbb
popf
xlat
mov
adc
add
sbb
push
lahf
iret
mov
mov
add
aad
and
es
idivb
and
mov
in
pop
gs
cmp
mov
int3
pusha
popa
jg
jbe
fst
jo
push
sub
lods
insl
int3
mov
pushl
sub
test
bound
sbb
add
out
adc
add
sub
jmp
pop
add
ds
sub
jb
imul
cmpsb
add
cmpsb
test
dec
gs
out
xor
in
and
mov
stos
jp
clc
mov
fs
in
fs
fimull
les
ds
dec
lea
rcrb
adc
sarb
inc
sahf
mov
ret
pushf
lods
sbb
inc
sub
push
mov
xlat
xchg
mov
daa
jle
das
mov
rolb
pop
lcall
inc
adc
sbb
loop
sub
jne
mov
adc
outsl
rcll
js
in
cmp
rep
out
test
addb
pop
xchg
es
push
in
fnstcw
scas
push
inc
stos
cld
adc
lea
cmp
pushf
into
adc
adc
sub
nop
sbb
lahf
repnz
mov
ret
inc
iret
outsb
pop
adc
sub
jg
sbb
jp
clc
inc
fcmovnbe
fs
mov
mov
pop
push
push
jg
dec
data16
shll
xor
subps
aas
popf
xchg
adc
fcompl
pop
pop
rcrb
fs
push
pop
pop
fdivs
not
loope
inc
call
dec
cmpl
dec
inc
sti
loope
popf
cmp
cmp
push
jbe
ss
fdivs
out
xor
imul
push
int
inc
mov
xchg
lret
andps
subl
sbb
lret
lahf
aas
fimuls
mov
dec
cmpsl
stos
imul
inc
xchg
lods
divb
movq
aaa
ret
jg
test
mov
sbb
pop
incl
sub
sub
mov
inc
js
cmovno
jl
orl
mov
aas
fidivl
ds
ror
adc
cmp
adc
inc
andl
push
rorl
dec
jl
sbb
pop
lods
cmp
adc
xchg
bound
outsb
xchg
loope
into
repnz
mov
cmp
bswap
movlps
inc
movsl
jecxz
xlat
or
xor
jbe
div
mov
or
insb
jae
les
fdivr
sbbl
pop
sub
pop
int3
orb
xor
xchg
jp
insl
fs
jnp
push
inc
mov
andl
int
fdivs
fdivs
mov
daa
stc
inc
lods
movsb
cmpsb
das
test
mov
adc
lods
dec
iret
int3
je
test
jg
sbb
cmp
cmovge
dec
push
xadd
pop
jmp
inc
aas
mov
mov
pop
rorl
mov
dec
test
push
js
in
lcall
push
in
push
outsb
sar
pop
shll
outsb
or
push
lods
mov
incl
jnp
lret
mov
cmp
call
bound
pop
inc
adc
push
jne
icebp
imul
shrl
mov
mov
mov
in
cmovne
sbb
insl
dec
gs
push
push
jg
inc
jbe
stos
mov
scas
icebp
ljmp
fstpt
sahf
mov
sub
gs
bswap
and
stos
push
adc
stc
outsl
mov
adc
push
mov
out
adc
lods
movsb
scas
cwtl
pop
subb
aad
pop
cwtl
jg
jle
mov
mov
rolb
mov
xor
cltd
cmp
fiadds
sub
push
sbbb
cld
ljmp
ds
shl
gs
leave
mov
push
ds
in
mov
in
sarb
test
in
jg
shlb
add
pop
pop
jbe
push
mov
int
xchg
pop
sub
ret
and
movsl
call
dec
jmp
das
cmp
adc
jae
jae
sbb
dec
push
xchg
pop
test
mov
stos
lods
pop
ret
sub
cs
rolb
fisubl
jle
ret
adc
mov
push
mov
into
mov
aas
stos
es
adc
xor
pop
adc
call
mov
bound
out
rolb
and
in
pop
push
insl
mov
fldt
test
setle
mov
jns
push
out
pminub
pop
scas
xor
incl
sbb
aas
mov
push
dec
ds
xor
int
call
popa
add
inc
jae
sub
adc
mov
push
in
xchg
out
rcrb
es
mov
shll
test
or
adc
cmpb
lahf
ret
inc
add
ficoms
rol
stos
mov
jnp
int
lret
loope
pop
aaa
fisttps
ljmp
push
in
cmp
cmpb
rclb
cmp
add
cmpsl
xlat
lcall
test
stos
push
lcall
pop
inc
cmp
jb
decl
jle
jp
pop
sti
dec
jp
xchg
dec
rclb
inc
xchg
outsb
cmpsb
aad
push
das
sbb
sbbb
icebp
loop
mov
test
jl
in
pop
in
in
cs
add
das
in
add
xor
jae
mov
dec
adc
pop
xor
jge
xor
in
jmp
fidivrl
das
pop
and
shrb
psubusb
popa
adc
push
inc
faddl
push
nop
mov
sub
push
or
mull
mov
lcall
iret
mov
rcl
mov
jmp
fiadds
pop
dec
fdivl
das
bound
inc
fimull
and
das
popf
cmp
ret
xchg
dec
shlb
int3
sub
pop
call
test
xchg
xchg
adc
push
sub
inc
lock
loop
sub
outsl
xor
ljmp
imul
pop
decl
out
push
fstpt
add
pop
and
lcall
das
push
ds
pop
mov
rclb
enter
jg
xor
popl
push
xor
mov
cmp
aas
fiaddl
fbstp
jbe
shlb
test
cmp
cmp
call
pop
loop
jbe
loopne
mov
inc
lret
pop
dec
inc
inc
int
mov
in
adc
add
sub
shrb
movaps
sub
repz
mov
sarb
aaa
mov
decb
push
out
inc
rcrl
sbb
jle
imull
or
outsb
jmp
or
xor
mov
mov
test
ret
ucomiss
aad
aas
out
jg
movsb
das
mov
in
data16
push
inc
fs
sti
xchg
mov
lcall
jl
lret
js
outsb
loopne
ficoms
inc
adc
cs
or
xlat
jg
dec
mov
add
dec
ret
cmp
xchg
rol
roll
fstps
daa
jnp
xor
dec
xchg
add
push
pop
pop
xchg
adc
in
test
int
cmp
push
inc
loop
inc
call
int
xor
sbb
mov
rclb
pusha
jb
sarb
loope
shrl
loope
das
add
popf
jnp
das
sahf
cltd
sbb
mov
cmpsb
mov
shrb
jg
js
and
xor
dec
fsts
jno
pcmpgtd
sub
xchg
add
inc
sarb
rcrb
mov
push
sbb
fsts
xchg
dec
ljmp
xadd
lea
and
lret
scas
mov
inc
lret
shrb
enter
push
jmp
popf
adc
sub
push
xlat
data16
movsl
jle
adc
inc
ljmp
lret
test
cmp
fcmovnb
movsl
push
jne
in
sbb
jmp
xor
mov
bswap
lea
test
xlat
or
add
pextrw
das
rcrb
inc
rcr
test
xchg
xchg
lds
faddl
popa
dec
pop
fldcw
sub
aam
fcmovnu
stos
setno
jno
and
jbe
lock
lds
repnz
popf
xchg
out
inc
insb
mov
fcoml
cmp
js
dec
sbbb
ret
sahf
inc
shlb
pause
inc
inc
sub
adc
xchg
popf
lahf
cmp
xchg
test
push
and
shrb
mov
jg
shlb
mov
inc
ret
int
sub
mov
dec
add
pusha
mov
inc
out
mov
je
insb
mov
shrl
dec
xorl
push
and
xchg
dec
cmp
call
shlb
aaa
mov
mov
cs
mov
repnz
lds
das
dec
sub
pop
repz
sbb
pop
and
rorb
dec
or
fstl
mov
call
call
and
in
fists
mov
mov
or
mov
xchg
ret
outsl
subb
out
or
pusha
das
fnstenv
popf
dec
mov
outsb
imul
outsb
cmp
push
cmpsl
outsb
ffreep
jmp
pop
jg
outsl
stc
in
inc
xchg
adc
inc
mov
mov
cmc
in
mov
or
mov
mov
xor
sbb
push
inc
ljmp
add
icebp
cmp
dec
rclb
repz
repz
testl
inc
das
repnz
and
push
mov
cli
lock
jae
iret
sub
icebp
stos
jns
xchg
test
div
ljmp
das
adc
push
repnz
adc
icebp
sub
add
jns
fcomip
jmp
jb
mov
adc
loop
imul
ljmp
jnp
jb
jnp
xchg
hlt
mov
in
inc
sub
loop
das
push
lock
cli
out
adc
dec
fiadds
stos
loop
sub
fsubp
shrb
sub
fsubp
shrb
sub
fdivrl
xor
or
imul
aaa
loopne
push
cmp
iret
push
repnz
negl
jnp
jg
cli
jl
pop
lock
iret
paddd
rolb
cmp
xchg
test
xor
aad
cmpsl
and
mov
notl
pop
cmpsb
pop
jae
mov
idiv
cld
cmp
mov
sub
xchg
int3
pop
shrl
pop
xlat
mov
outsb
jae
sbb
enter
pushf
call
stc
cmp
or
add
test
rcrb
ljmp
fbstp
xchg
testb
ja
sbb
aam
cmp
xor
and
jnp
divb
sti
cmp
int3
shrl
cli
lock
mov
in
pop
popl
cmp
pop
shlb
fldt
pop
cmp
and
add
xchg
pop
cmp
push
mov
outsb
adc
dec
or
xorb
sti
psrad
daa
pop
adc
mov
ja
aam
cmp
das
ds
or
shlb
sbb
xor
ss
aaa
addb
bswap
xor
ja
cld
jne
outsl
incl
sti
leave
je
pop
shll
xchg
scas
psubd
push
jb
std
inc
add
mov
lahf
xchg
mov
rclb
push
mov
add
dec
arpl
nop
neg
cld
and
cmp
out
jbe
xchg
xchg
pop
jge
pop
lock
test
enter
nop
mov
jne
xchg
pop
test
or
fidivl
xchg
mov
add
out
into
js
sub
adc
into
mov
sbb
adc
or
pop
pop
pop
jg
cli
das
enter
adc
ss
loopne
lret
adc
and
sub
lock
mov
ret
out
and
add
out
xor
jg
jg
push
lock
outsl
cmp
push
stc
push
outsl
inc
inc
nop
mov
lea
push
xor
push
and
rclb
xor
adc
pop
push
dec
xor
aas
xor
pop
sub
mov
cltd
cmp
daa
popf
testb
scas
pop
sub
movsl
scas
mov
fsubl
mov
fs
cs
jb
inc
test
out
or
or
jno,pn
andb
pop
sbb
and
out
push
add
imul
bound
or
xchg
out
jo
dec
outsl
fst
jne
push
ss
inc
popf
mov
add
mov
pop
jl
mov
ljmp
popl
add
fadd
and
je
ss
jg
xchg
popa
scas
lret
push
test
js
iret
cmpsl
sarl
adcl
xchg
inc
inc
mov
pushl
add
or
cld
add
pushl
loope
adc
push
mov
shlb
pop
pusha
or
das
jno
xchg
jo
scas
incb
daa
adc
sub
mov
rdmsr
adc
pop
xor
jg
dec
push
das
loop
lcall
jb
fcoml
bound
out
and
adc
mov
bnd
ss
mov
loop
dec
push
and
adc
dec
aaa
fwait
cmpsl
inc
jno
xchg
rorb
and
mov
push
mov
add
fstps
push
nop
cltd
lret
std
sbb
das
loop
shll
negl
adcb
xchg
push
cmpsl
das
pop
cmp
repnz
xor
xchg
sbb
and
les
iret
pusha
clc
repz
not
popa
xor
aam
stos
mov
pop
xor
push
in
sbb
and
adc
xchg
mov
and
outsl
and
das
fldt
sbb
cmp
mov
repnz
rcrl
rcrl
add
inc
add
and
add
cmp
jno
pop
mov
jae
out
loop
mov
add
ret
xorb
int
nop
mov
push
jno
and
and
pop
inc
sbb
xchg
push
dec
push
fbstp
add
ret
pop
mov
cmp
adc
mov
mov
cmpl
js
je
sub
adc
add
xor
pop
das
jg
nop
xor
and
mov
adc
xor
aaa
push
jg
xor
or
inc
cmpb
aas
call
inc
add
adc
and
jae
dec
pop
bound
xchg
jno
adc
and
push
cmc
adc
pop
xchg
or
and
inc
push
push
xchg
cmp
dec
cli
or
out
iret
flds
dec
dec
cwtl
xor
shll
adc
adc
push
mov
test
jae
lahf
mov
push
aaa
add
pushl
loope
xor
sbb
xorl
jg
and
cmp
dec
cwtl
xor
inc
jae
mov
rorb
xor
outsb
jne
push
mov
das
xor
data16
jae
dec
popl
jo
adc
xor
shl
sub
xor
dec
add
adc
icebp
push
adc
xor
mov
jg
adc
inc
jb
xor
bound
outsl
call
sbb
dec
cwtl
out
add
adc
sar
add
bound
inc
mov
push
jae
add
bswap
xor
adc
xor
dec
aaa
pushf
jg
adc
add
sbb
sbb
fistl
push
mov
inc
dec
mov
xor
ljmp
lock
mov
loope
mov
inc
enter
mov
out
cmp
add
mov
and
mov
fwait
sarl
xchg
repnz
aas
add
sahf
jg
jno
mov
ffreep
ljmp
pop
dec
inc
rol
inc
test
xorb
rcll
and
adc
mov
adcb
push
idivl
adc
xor
inc
add
jae
inc
jae
inc
mov
daa
jae
mull
inc
inc
divl
incl
cmp
and
das
jno
mov
ja
xor
shlb
shll
mov
shll
pop
sub
loopne
testb
jae
cltd
jne
mov
jmp
add
xor
adcb
jbe
inc
mov
adc
push
pop
cmp
inc
adc
cmpsl
jp
adc
cltd
loope
and
pop
rcrl
dec
xor
add
cld
lock
xchg
shrb
adc
xor
xor
and
pop
and
cli
out
gs
pslld
or
add
add
pop
mov
pusha
dec
mov
mov
adc
adc
andb
cli
mov
test
jl
outsb
and
shrb
pop
and
stos
mov
or
xchg
fmuls
jbe
jo
mov
test
jl
push
pop
cmp
insb
loop
add
mov
mov
mov
test
or
sbb
lahf
mov
jno
and
add
pop
add
lock
jae
aaa
sub
mov
jg
pop
into
iret
jmp
lea
cmpsl
jecxz
repnz
jno
das
iret
outsl
jbe
mov
pusha
xor
pop
movsb
outsl
or
ror
xchg
pusha
loopne
lods
jl
loope
mov
outsl
dec
dec
mov
je
data16
mov
shl
shll
sbb
cmpsl
sub
std
subb
jg
mov
xor
jae
adc
mov
jge
pop
xchg
lods
inc
lock
xchg
movsb
test
sub
sub
mov
cwtl
mov
fwait
mov
movsb
add
xorb
sbb
sub
cwtl
jo
push
cmc
test
fimuls
adc
aad
cli
movzwl
add
in
cmc
fimull
aad
add
ret
stc
ret
mov
pusha
cmp
test
je
loopne
xor
cmpl
inc
pusha
sahf
cmp
push
lahf
adc
xlat
xchg
mov
jae
adc
sub
jge
xor
rcl
adc
test
scas
xlat
sub
jmp
xor
push
das
pop
call
mov
cmp
cmp
aas
and
lahf
pop
rcrl
aaa
clc
pop
mov
mov
subb
iret
sbbb
mov
xor
xchg
mov
pop
sbb
shl
jb
lds
shll
loopne
pop
xor
jo
das
dec
push
sub
rorb
repz
push
xor
or
cmp
add
xchg
cmp
cli
repz
xchg
cli
xchg
rcll
mov
jae
pop
cmpsl
xchg
outsl
jno
xor
add
mov
imull
repnz
xchg
gs
imul
push
and
mov
mov
pusha
iret
aas
inc
shlb
cwtl
add
ja
das
shlb
cli
repnz
adc
popa
pushl
cmp
adc
stc
shll
mov
and
pop
mov
adc
insb
mov
xlat
and
dec
mov
sub
cld
jb
clc
int3
shlb
outsl
outsl
ret
iret
mov
add
xchg
inc
xchg
daa
out
and
cmp
stos
daa
das
repz
mov
push
nop
mov
xchg
mov
inc
iret
out
inc
rcrb
pop
add
xchg
adc
mov
push
nop
iret
jno
push
aam
outsl
push
and
hlt
arpl
stos
inc
xchg
cmp
aaa
xor
dec
push
insb
sub
xor
and
inc
ds
push
push
loopne
sbb
mov
inc
add
cli
div
cmpsl
add
and
lret
add
push
pushl
das
xchg
js
mov
fwait
shll
cmpsb
adc
cwtl
adc
testb
pop
xchg
leave
outsl
lods
aad
insl
jp
and
test
adc
jmp
imul
cmp
mov
sbb
lcall
icebp
jno
fcoml
sbb
cmp
xor
das
ffreep
mov
js
pop
scas
dec
mov
pop
cmp
cmp
and
cmpsl
pop
mov
mov
aad
cmp
stc
iret
outsl
pop
pop
lock
punpckhwd
mov
push
push
pusha
xchg
popa
inc
mov
push
jno
sub
jae
andl
mov
fwait
inc
fistl
aaa
cmp
das
insb
sub
adc
fldcw
out
jnp
iret
movsb
xchg
xor
jecxz
and
xchg
adc
xor
sti
popl
loop
rolb
dec
sub
push
or
sub
sar
cld
pop
in
push
out
xchg
mov
das
jae
nop
dec
orb
aad
adc
stos
dec
nop
daa
cmpsl
mov
subl
rorb
iret
ffreep
xor
or
dec
repz
adc
lock
xlat
aam
fdivs
xchg
cltd
xchg
cmp
xchg
inc
clc
xor
add
pop
sbb
stc
les
push
ja
addb
rclb
js
mov
xchg
mov
push
movsb
mov
ss
divl
dec
outsl
out
mov
test
mov
inc
mov
xchg
ret
ja
sub
fists
enter
aam
push
jb
test
xchg
mov
popl
xor
inc
cmp
xor
sbb
nop
pop
and
stos
mov
imulb
pusha
and
xchg
xor
inc
inc
or
xchg
scas
cmovne
push
int3
add
cmpl
cmp
lods
les
adc
inc
xchg
pop
jnp
xor
inc
ret
sarb
mov
xor
je
loope
push
push
adc
mov
daa
mov
inc
adc
pop
xor
xchg
aad
mov
insl
sbb
loope
dec
pop
mov
push
out
adc
aaa
pop
jg
xor
sub
lock
xor
xorl
pop
sub
lea
loope
aaa
mov
icebp
inc
aas
dec
fwait
out
xor
xchg
pop
xor
notb
xor
mov
cmp
inc
aas
aas
xor
xchg
adcb
roll
lret
pop
or
call
xor
fnstenv
adc
sarb
inc
gs
orl
xchg
loope
mov
aaa
jnp
xor
decl
inc
in
dec
jae
aas
cli
push
shr
pmaddwd
and
cmp
cmp
add
adc
add
das
loope
mov
push
jg
sti
das
incl
push
das
loop
add
inc
xor
aaa
sti
add
push
pop
pop
adc
xor
cmc
arpl
push
xchg
dec
jb
test
adc
daa
sub
pop
mov
ja
xor
sbb
cli
inc
push
outsl
daa
mov
lock
and
leave
pop
fistpll
mov
cmp
mov
lahf
sysret
cwtl
add
ja
out
adc
pop
test
mov
ret
mov
inc
aas
add
scas
unpckhps
out
jne
push
cmp
jmp
push
dec
dec
add
loope
repnz
xor
sub
pop
call
cmp
sub
out
stos
xor
shlb
call
mov
hlt
xor
scas
and
xlat
in
fistpll
shlb
out
ljmp
inc
and
or
mov
dec
inc
sarb
clc
shl
mov
adc
shl
pop
pop
cmp
sahf
shll
dec
ret
or
jae
pop
test
das
fdivs
jne
push
shrl
adc
mov
pop
idiv
xor
imul
dec
lods
and
repnz
fbstp
arpl
lcall
iret
repnz
test
adcb
jg
xchg
jno
in
lds
repz
sbb
test
adcb
stos
das
xor
inc
xchg
jae
repnz
fs
mov
aas
xor
lock
jae
out
mov
xor
ss
jmp
cmp
jecxz
mov
mov
pop
jno
jo
jg
lcall
adc
lahf
adc
ret
and
mov
ret
pop
pop
cli
sbb
pop
fistpll
fsubp
jg
mov
pop
xchg
ror
push
in
xchg
das
mov
jmp
mov
subb
mov
sub
adc
lahf
inc
push
aas
nop
sub
push
jg
xchg
xchg
pop
fists
xchg
clc
fmuls
mov
or
jecxz
and
movsb
fidivrl
repnz
loope
and
das
call
in
sbb
cmovle
stc
xchg
adc
sbb
lock
xchg
out
pusha
mov
popf
fisttpl
push
push
and
jmp
repz
ljmp
iret
xor
cmp
mov
aaa
pusha
or
push
cli
xchg
pop
pop
imul
adc
sbb
stc
testb
pushf
jnp
cli
inc
mov
rorl
mov
xorb
pushf
sbb
xorb
cmpsl
inc
cld
out
and
pop
xor
xlat
and
mov
mov
je
daa
sahf
inc
pop
sbb
cmp
ret
shlb
aaa
cwtl
ja
fsubrs
mov
std
and
arpl
push
out
adc
ror
pushf
and
add
nop
dec
pop
add
out
xchg
add
loopne
shlb
ljmp
sbb
adc
add
push
repz
ret
pop
and
jg
inc
ret
rorb
out
jnp
push
cmp
aaa
outsl
mov
aaa
pop
out
xchg
fisttps
mov
pop
nop
repnz
push
mov
mov
pop
aam
test
add
maxps
nopl
fists
shll
adc
adc
dec
shll
inc
inc
jg
xchg
xor
jle
xchg
adc
xchg
movsb
adc
add
jb
lods
lcall
xchg
add
mov
mov
sub
jne
sbb
das
mov
leave
test
imul
je
decl
lahf
sbbb
sbb
xchg
scas
sbb
ljmp
xor
mov
sub
imul
add
and
adc
in
movsb
push
xchg
test
mov
test
jecxz
out
das
mov
or
decl
into
dec
mov
hlt
or
jbe
dec
cmp
or
jg
shlb
xorb
loope
mov
pop
push
adc
push
popw
inc
sub
shl
repz
jmp
adc
sub
imull
mov
inc
mov
or
divb
scas
push
lahf
xor
aad
jb
loope
mov
fbld
sub
enter
dec
fldcw
clc
or
or
mov
mov
adc
test
jns
push
sti
mov
or
addr16
jg
in
xor
test
cld
pop
cmpl
adc
repz
scas
or
rolb
adc
mov
add
sar
push
xlat
out
int3
out
sar
adc
notl
pop
jbe
mov
adc
jo
xor
inc
inc
das
and
addr16
lahf
inc
jns
pop
out
imul
xor
pop
adc
xor
sbb
and
lahf
sbb
push
pushf
mov
je
addb
xor
and
push
mov
adc
loop
mov
mov
jge
push
adc
testl
cld
xor
xchg
iret
inc
repz
xor
fwait
pop
inc
adc
mov
scas
orb
jmp
iret
add
jo
dec
pushf
je
out
loop
ja
dec
pop
cmp
mov
adc
pop
ret
nop
or
push
xor
out
inc
pushf
cmp
xchg
push
stos
ja
mov
sub
ret
sub
and
and
pop
jge
pushf
movsl
mov
subb
push
cmc
mov
inc
jmp
adc
rcll
jb
sbb
int
imul
repnz
int
ffree
repnz
nopl
push
sti
notb
mov
pop
mov
ret
sub
in
pushf
pop
sub
add
push
cmp
xor
das
mov
outsl
push
dec
pop
stos
cltd
clc
ljmp
idivb
mov
pop
xor
cmp
xchg
or
pop
push
es
mov
lret
or
xchg
scas
inc
das
pushl
sbb
jnp
xchg
pop
xor
and
xchg
mov
sub
stc
push
sti
push
mov
sub
ret
mov
inc
pop
xchg
ljmp
adc
sbb
pop
mov
lock
xor
sub
mov
fdivrs
push
add
mov
jg
pop
push
loop
adc
orb
insl
mov
sub
cmp
pop
ja
or
jg
dec
bound
mov
js
js
mov
xor
jno
or
nop
dec
leave
xor
ja
xor
aas
ret
adc
jne
sub
jae
adc
add
int3
mov
andl
imul
jp
cmp
stos
fistpl
xor
xor
dec
mov
jne
iret
jo
adc
ficomps
mov
jge
ret
addr16
mov
sbb
adc
cmp
sub
addr16
andl
lods
xchg
orb
imul
mov
jae
xlat
lret
insl
xchg
test
sbb
xor
mov
mov
adc
ud0
filds
iret
out
xor
adc
pop
adc
sub
test
cmp
sbb
das
loop
in
adc
or
mov
ret
shlb
cmp
scas
ljmp
ja
mov
or
rep
fidivrl
cmovno
sbb
das
daa
mov
in
imul
dec
decl
mov
push
or
lcall
in
rcrl
clc
pop
shrb
lds
out
ja
shrb
mov
pop
xchg
xchg
int
das
xchg
sub
jbe
setg
pop
lret
rolb
maxps
xchg
std
adc
outsl
mov
or
repnz
imul
mov
and
loop
pop
nop
daa
jno
and
in
icebp
push
mov
jle
mov
pop
fbld
stos
mov
adc
cli
xchg
xor
mov
or
adc
pop
aaa
lret
sti
mov
and
popf
mov
shlb
adc
pop
int
push
mov
stos
repnz
push
imul
dec
or
xor
sbb
rorb
and
adc
adc
xor
psrld
push
inc
adc
adc
cli
xchg
stos
das
mov
sarb
sub
and
push
mov
test
dec
bound
cmp
lock
addb
pop
sbbb
es
cmp
adc
jg
sub
pop
dec
mov
jge
cmp
icebp
fiaddl
xchg
shrl
pop
pop
pop
mov
xchg
xchg
or
push
xor
mov
bound
flds
xchg
xlat
sbb
mov
mov
popa
daa
ret
xchg
cltd
xor
or
and
cmc
scas
adc
mov
xchg
subb
mov
xor
sbb
mulb
xchg
lea
push
xchg
insb
and
mov
loop
jne
pushl
jle
sub
xor
out
pop
adc
xchg
mov
push
pop
iret
mov
insb
fdivr
xor
xchg
popa
rcrl
xor
jmp
jg
or
or
jmp
mov
cmp
mov
cli
lods
push
aas
sbb
jp
adc
xor
jns
mov
cltd
xchg
jle
jge
or
popf
insb
loopne
mov
xor
mov
sbb
cmp
stos
or
jo
jl
pop
and
cwtl
mov
inc
mov
jle
inc
mov
mov
loopne
sbb
into
popa
adcl
lea
jne
inc
neg
test
shld
mov
cmp
jmp
pusha
pushf
stos
pushf
pushl
movb
lea
jmp
pusha
bt
or
mov
lea
je
lea
not
not
xchg
lea
not
lea
pushf
push
movzwl
movzbw
pushl
lea
pushf
lea
pop
mov
pushf
lea
call
call
inc
jmp
mov
call
push
jmp
subl
int
out
jns
call
aas
lock
insb
or
adc
ja
scas
mov
jge
dec
mov
push
mov
je
sbb
mov
into
je
loopne
sbb
sahf
jae
stos
ds
adc
or
cmp
aas
sti
daa
outsb
pushf
adc
jmp
movl
push
call
push
call
fsubs
nop
popa
shrl
mov
sbb
adc
jo
add
xor
xor
xchg
sbb
aam
fistps
xchg
push
scas
inc
dec
sbb
or
jnp
rcrl
pop
fsub
sub
enter
negb
les
jo
adc
cmp
cmpsb
stc
mov
xor
jl
icebp
enter
aad
fidivs
into
test
inc
or
loopne
nop
pop
xor
popf
sti
jp
push
sahf
mov
push
repnz
xor
ret
js
dec
jne
std
int3
cmp
mov
sbb
hlt
mov
mov
in
fsubrs
cwtl
sub
enter
mov
lret
or
ficompl
push
jecxz
mov
mov
mov
sub
repnz
movl
mov
pushf
lea
jmp
repz
pushf
call
sbb
sar
cmp
sbb
ret
adc
inc
or
scas
cwtl
pop
jge
jo
fwait
xor
inc
push
psrlw
ret
lock
push
adc
mov
and
stc
or
shl
inc
push
xchg
mov
movsb
mov
cli
lea
les
or
and
mov
pushf
movb
pushl
ret
or
jmp
xchg
scas
dec
nop
popa
rorl
js
addb
ja
inc
jno
shrb
xor
dec
pushf
sub
pop
xchg
mov
les
nopl
mov
add
out
aaa
jp
push
or
and
lcall
dec
mov
mov
mov
cmp
push
fsubrl
sub
ljmp
leave
pushl
movl
mov
pushf
push
push
lea
jmp
pushf
call
pop
movzbw
setns
setg
push
mov
call
push
pushl
pushf
lea
jae
pusha
cmc
jmp
add
call
jne
call
pushf
lea
jne
push
movb
jmp
mov
or
or
call
dec
mov
mov
test
jge
push
jmp
cmpsl
cmc
sar
cmc
aaa
out
sub
fdivrs
pushf
add
loop
xor
add
repnz
stc
xor
test
lea
and
inc
pusha
pushl
lea
jmp
jmp
call
movl
push
movl
pusha
movl
lea
jmp
call
lea
jb
bt
cmc
cmpb
push
call
pushf
lea
je
bt
js
push
pushf
cmp
lea
pusha
pushf
pushl
ret
push
mov
push
jmp
cmp
xor
pushf
bt
cmc
or
pushf
lea
je
not
mov
mov
lahf
push
mov
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
cmc
pop
sbb
jb
pop
popa
push
sbb
shrb
in
arpl
add
or
dec
xchg
lret
nop
lds
icebp
xor
sarb
lock
or
jg
pusha
dec
cld
cmpsb
testb
out
pop
pop
xchg
outsl
cmp
nop
cli
adc
jle
sarb
mov
sub
and
adc
xchg
nop
mov
jmp
adc
cltd
pop
sub
lods
dec
xor
and
ret
and
sahf
fidivrs
rclb
jae
out
cwtl
pop
outsb
popf
push
popa
data16
sbb
addr16
xchg
mov
icebp
insb
ficoml
and
arpl
andb
sub
xor
leave
cmp
mov
sbb
inc
call
in
shrb
mov
push
fs
jo
out
xchg
lods
outsl
into
push
add
ljmp
popa
pop
nop
pusha
movsl
je
push
scas
pop
fists
pusha
cs
lahf
adcl
sub
add
pop
outsb
aas
and
or
icebp
icebp
fdivp
add
les
outsl
popa
adc
adc
out
nop
dec
xor
inc
mov
cmp
mov
pop
jno
xchg
jge
aas
jmp
lock
incl
xor
cmpsb
popa
dec
movsb
paddb
out
nop
adc
push
or
xchg
adc
mov
outsl
sbb
cmp
cmp
jne
daa
mov
adcl
sar
mov
popa
ret
jb
jno
cltd
cld
stos
ljmp
add
out
insl
repnz
and
cmc
das
repz
inc
ja
inc
dec
dec
xchg
repnz
test
outsb
ret
jne
xchg
mov
data16
pop
aas
xchg
sbb
pop
hlt
or
outsb
dec
sub
xchg
push
sub
and
inc
es
jp
xor
xchg
sbb
mov
fmulp
jo
bound
xchg
ljmp
lds
mov
xchg
dec
jne
movd
cmp
ljmp
negb
sub
push
adc
xor
jb
into
push
sbb
sub
pop
popf
shll
cli
dec
mov
addr16
push
adc
pop
adc
xor
sub
jo
mov
sti
dec
imul
loopne
fldenv
notb
add
mov
outsl
mov
aas
mov
movd
pop
inc
and
outsl
pop
mov
cmp
mov
lock
popa
adc
cs
push
xchg
stos
dec
or
jo
and
out
shrb
sub
xchg
addl
add
adc
scas
pop
out
loope
jmp
cmp
stos
or
jp
mov
xor
fwait
dec
cmp
je
sbb
gs
pop
les
adc
jne
and
cmp
xor
xchg
fsub
cmp
and
cmp
dec
cld
not
jb
jg
popa
lahf
repnz
shl
out
wbinvd
xor
cmpb
cmp
test
out
and
xchg
lds
add
ret
cli
sub
or
adc
adc
pop
jecxz
xor
or
lods
pop
test
xchg
scas
and
cli
cmpsb
adc
adc
aam
xor
es
pop
out
mov
stc
pop
xchg
in
mov
mov
icebp
or
pop
rclb
lock
ss
popl
outsl
xchg
ljmp
ss
pop
test
mov
rcl
fistl
cmpsb
jo
jb
xchg
inc
addr16
sbb
hlt
pop
jb
pop
divb
mul
adc
adc
pop
xchg
mov
ds
jg
mov
and
mov
nop
notb
add
popa
push
fstps
adc
mov
jae
inc
push
popa
inc
mov
or
lahf
pop
cmp
xchg
add
or
inc
mov
mov
movsb
or
mov
and
push
xchg
adc
out
iret
xchg
pop
loop
cltd
test
adc
pop
inc
stos
icebp
inc
jno
jg
out
add
outsl
sub
xor
cmp
xor
aaa
and
rorb
stos
dec
aas
push
cmp
scas
mov
xchg
or
int
aam
cwtl
cmp
dec
push
sub
lahf
aas
lea
scas
fs
pop
fiadds
sarb
adcl
push
mulb
icebp
push
cli
adc
shrb
lods
mov
aas
xchg
cmp
mov
movsb
mov
arpl
cmpb
add
rcrl
pop
fisttps
cltd
adc
jp
stc
es
aas
add
xchg
cmp
mov
push
and
nop
fimuls
xor
adcl
xor
inc
cmp
hlt
cmc
movq
aas
in
inc
sbb
inc
xchg
xor
nop
int3
or
or
pop
xchg
adc
push
fsubr
arpl
shl
mov
xor
mov
or
push
push
sbb
push
dec
mov
xchg
iret
nop
insl
shrl
mov
lds
push
outsl
or
dec
or
inc
cmp
and
lcall
repnz
push
shrl
and
cli
mov
aas
adc
aaa
xchg
aam
or
std
pop
cmp
repnz
cmp
jp
mov
mov
cmpsl
mov
aaa
mov
ja
jno
mov
divl
mov
mov
and
cmp
jns
hlt
stc
hlt
daa
xchg
fstpl
xorb
jb
rclb
add
or
stos
jp
cli
les
cwtl
lahf
ljmp
push
sbb
pop
icebp
pop
add
incl
xchg
adc
or
stos
aam
cmpsl
popa
stc
jg
pop
sub
pop
lret
add
jb
xor
scas
std
pushf
pop
cli
fistps
add
aas
add
dec
xchg
roll
xchg
mov
dec
leave
xchg
aas
sbb
jmp
aaa
push
arpl
dec
lret
aam
or
in
push
popa
aad
mov
xchg
jb
sub
stc
adc
mov
aad
dec
mov
pop
shll
call
pop
aas
add
cmp
sbb
cmp
movsl
push
je
cmpb
ret
clc
arpl
pushf
test
jbe
sti
mov
cmp
pop
cmc
add
adc
push
icebp
add
ss
cli
lods
xor
icebp
out
jge
sbb
xchg
cld
mov
js
inc
or
add
sub
std
xor
nop
mov
pop
negl
sbb
push
cmpb
imul
sahf
aad
jb
add
jo
cmp
lock
dec
out
loope
fidivrs
aaa
add
movsl
fmuls
mov
and
xor
out
xor
adc
and
sarb
pushf
cwtl
cmc
lcall
inc
jg
fisubrl
mov
mov
stc
call
iret
cmp
and
imulb
js
movsb
xchg
aad
sbb
or
cmp
push
dec
jo
cmp
mov
and
aad
out
push
mov
das
adc
jecxz
sub
ja
std
xchg
xchg
leave
cltd
dec
orb
stos
aaa
jo
xchg
sub
xchg
scas
pop
lods
xor
shl
out
cmp
aas
fstps
push
mov
cld
sbb
dec
scas
arpl
mov
xor
xchg
scas
lcall
xchg
cmpsb
into
adc
setb
sarb
pop
mov
mov
xchg
sbb
rclb
xchg
dec
rorl
aad
aas
xlat
inc
negb
shr
aaa
dec
mov
dec
or
jg
pop
outsl
js
add
xchg
gs
movsb
cmc
add
pusha
lock
cmpsl
xor
xor
adc
outsl
pushf
xor
lahf
pop
test
cmp
rorb
push
syscall
xor
mov
jmp
add
sahf
andb
pop
out
xchg
mov
mov
cmc
ficompl
add
dec
jne
dec
clc
iret
xchg
repz
enter
notb
repnz
mov
mov
std
lahf
iret
push
adc
adc
xchg
xchg
pop
adc
out
jo
outsl
test
mov
clc
pop
xchg
mov
pushf
push
call
movsl
or
mov
mov
xor
jmp
mov
ljmp
push
cs
dec
cmp
shl
xchg
bound
xchg
adc
mov
xor
scas
pop
mov
hlt
or
xchg
lock
pop
popa
lret
lods
or
inc
jo
pop
loopne
sbb
lds
xor
dec
imul
lcall
fbld
jbe
movl
xor
nop
push
sti
add
jno
cmp
pushf
or
push
sarl
iret
sbb
mov
das
nop
jp
pop
adc
jle
mov
and
fists
out
imul
popa
add
inc
and
sub
xchg
or
xchg
mov
lahf
xchg
daa
rcl
iret
mov
gs
cmpsl
cld
iret
xchg
sbb
cmp
packssdw
hlt
scas
jle
xchg
popa
xchg
mov
mov
xor
add
sti
push
addr16
or
rcrb
push
add
lds
ret
pop
out
es
enter
push
inc
out
aaa
pushl
xor
lock
sub
addr16
ds
jnp
inc
ret
hlt
inc
inc
xchg
adc
mov
pop
outsl
mov
xchg
clc
pushf
cmp
add
std
cs
mov
xor
incl
cmpsl
inc
mov
popa
lock
pop
push
aaa
add
or
xsha1
cmpsb
movhps
add
xlat
das
add
aas
and
into
cmp
cmp
jmp
cmpsl
push
sub
aaa
jo
xor
xor
insb
lret
jns
xor
iret
xchg
sbb
decl
sbb
adc
cmp
sbb
xchg
iret
and
cmp
jmp
in
xchg
clc
sar
sbb
and
xchg
lock
adc
lcall
jns
orl
cmp
das
nop
xchg
add
lock
jg
fistl
push
jo
mov
lea
movsl
lahf
loope
das
sub
repnz
loop
gs
fmuls
repz
lods
das
jle
cmp
out
jg
jns
nop
push
mov
addl
xor
insl
xchg
sub
popf
sub
rcrl
jns
std
cmp
sub
push
int3
fildl
xchg
inc
jp
int
push
xor
xchg
je
repz
test
enter
sarl
popa
orl
test
out
mov
mov
lds
fs
das
out
adc
adc
lods
into
cmc
adc
aam
add
cmp
add
cld
xchg
repnz
repz
cltd
adc
xchg
mov
nop
popf
push
hlt
push
jno
mov
inc
mov
nop
xor
fwait
lcall
ret
lahf
inc
or
js
mov
xchg
xor
movb
scas
dec
mov
and
decb
outsb
xchg
cmpsl
ljmp
mov
mov
insl
cmp
into
and
sti
push
mov
popa
jnp
add
adc
cmp
pushf
add
and
sub
into
out
cmc
inc
jns
mov
sbb
xchg
pushf
inc
add
cmp
lock
mov
push
cwtl
mov
jb
std
mov
icebp
pop
rorl
loopew
addb
lahf
ds
ret
cwtl
or
dec
jbe
mov
push
popa
imul
and
iret
pusha
jo
sub
mov
scas
lcall
push
clc
std
cmp
insl
jo
add
push
fdivs
mov
mov
jnp
or
dec
pop
notb
xor
outsl
fcompl
push
sbbl
nop
pop
mov
push
scas
xchg
adc
sbb
hlt
imul
push
or
fld
pop
xchg
inc
or
or
xchg
les
out
add
mov
lds
xor
icebp
adc
xorb
ss
iret
sarl
or
xchg
pushl
push
negb
push
add
mull
imul
mov
loop
addl
jb
rcl
popa
adc
aaa
xchg
bound
cmp
dec
ret
push
inc
push
faddp
and
mov
outsl
or
push
cmp
mov
es
mov
mov
and
loope
pop
mov
dec
lahf
stc
scas
jge
mov
push
jo
push
cmp
adc
sar
xchg
adc
sbb
inc
xor
mov
adc
lea
push
mov
jne
push
rcl
ret
aas
jle
mov
mov
clc
mov
mov
jns
or
imul
iret
decb
and
add
xchg
xor
dec
popa
adc
or
mov
jo
cmp
add
xchg
mov
ret
inc
gs
pop
push
orl
nop
sub
bnd
xchg
cmp
dec
shl
lock
popa
cmp
das
out
rcrb
popa
add
jp
cmp
cmp
lock
cmp
mov
and
push
hlt
es
notl
fcmovbe
jno
leave
adc
adc
dec
repnz
dec
add
mov
lock
push
das
jo
mov
popa
or
movaps
mov
notb
cmp
fistl
add
mull
cmp
call
push
xchg
xchg
addr16
or
ror
aas
adc
popa
out
clc
and
pop
iret
adc
into
push
scas
mov
inc
sbb
inc
scas
insl
pop
adc
inc
push
and
nop
adc
push
adc
or
or
cmp
cmp
ss
jo
sarb
sbb
push
jl
sub
jo
cmpsb
or
xchg
mov
lea
stc
pop
sbb
mov
pop
adc
push
pop
loope
cmp
mov
je
xchg
inc
adc
aaa
iret
std
ja
mov
lods
mov
jae
aam
jno
pop
cmc
jmp
jbe
insl
push
cmp
rcll
shrb
or
dec
sti
add
ss
add
pop
xlat
cmp
unpckhps
pop
add
dec
or
push
aam
push
fs
and
imul
mov
adc
mov
stc
add
xchg
sbb
adc
das
inc
into
mov
sbb
xor
jg
idivb
dec
addr16
mov
xor
lock
adc
ficoml
lea
fst
mov
adc
xor
fists
sub
sbb
hlt
sbb
test
in
sub
push
aaa
mov
mov
jp
adc
adc
jae
fiaddl
add
mov
xchg
outsl
flds
fisubrl
fsubrl
and
cmp
dec
gs
inc
xchg
mov
sub
mulb
dec
shrb
inc
aad
xor
cld
sub
sub
pop
lds
mov
adc
inc
xchg
fistps
jg
out
adc
mov
cli
daa
xchg
enter
test
push
fdiv
xor
leave
pop
stc
adc
dec
icebp
jg
aas
jg
adc
lds
push
mov
and
in
adc
sub
jp
enter
mov
sub
stos
jo
add
not
cmp
icebp
xchg
jns
outsl
push
push
cmc
sbbl
icebp
and
mov
jge
mov
stos
or
push
cmp
jmp
ds
scas
std
pushf
lret
pop
pop
icebp
lock
fbld
mov
jle
icebp
lds
fidivrs
jns
fdivrs
inc
adcl
mov
lcall
lret
pop
popa
xor
int
mov
and
pop
xchg
push
movsb
pushl
inc
fnstenv
xchg
in
and
insl
adc
adc
iret
jo
clc
test
sahf
dec
fcoms
lods
mov
xchg
test
das
aam
ret
movhps
and
outsl
aaa
sarb
mov
dec
mov
ret
dec
jae
sbb
or
das
insl
inc
jo
pop
nop
bnd
cld
aaa
inc
cli
cwtl
or
jo
adc
repnz
pusha
inc
add
popa
adc
scas
xchg
outsl
mov
shl
add
inc
mov
int3
dec
lock
adc
insb
ja
mov
or
sub
lret
xchg
jmp
pop
cmove
sbb
shlb
mov
pop
mov
out
xor
push
lret
lds
sbb
adc
jmp
idiv
test
pusha
add
lahf
ljmp
mov
jne
jo
lods
outsb
push
hlt
lret
jbe
test
mov
xchg
inc
and
icebp
sarl
mov
push
adc
popa
mov
cmp
leave
jl
xchg
cmp
xchg
inc
sbb
ja
mov
rcr
fldcw
xchg
xchg
add
pop
lret
xor
xorl
sbb
sti
sbb
add
adc
sbb
add
orb
mov
sbb
pop
xchg
push
stos
setg
adc
pop
push
add
lock
lret
iret
mov
repnz
jp
sub
mov
js
addl
or
sahf
dec
mov
mov
adc
das
adc
cmpsb
clc
add
shld
das
pop
adc
adc
and
pop
ficomps
incl
aad
and
add
popf
jns
lahf
push
cmp
or
jl
adc
arpl
and
daa
inc
sub
or
xchg
mov
add
jns
dec
js
lock
into
cwtl
dec
jg
loop
outsb
clc
xchg
pushf
pusha
icebp
xchg
adc
addr16
out
xchg
in
movsl
sub
adc
mov
push
cli
pop
mov
rolb
daa
dec
or
lret
inc
les
inc
sbb
sbb
in
push
fxch
call
mov
push
lahf
mov
push
je
add
adc
int
jg
push
sub
cmp
das
scas
xchg
lea
cld
mov
xchg
std
fwait
xor
xchg
dec
fists
xor
and
xor
in
mov
cmp
xchg
push
mov
adc
stos
or
cmp
and
xchg
fiaddl
xchg
icebp
add
mov
fs
xor
jg
sbb
xchg
xchg
xchg
xor
std
lret
ljmp
ds
popa
stos
xchg
adc
insl
dec
sbb
add
adc
repnz
gs
xlat
adc
cwtl
mull
out
popa
push
scas
push
xor
jns
add
pop
and
pop
push
push
push
xchg
push
mov
ret
cmc
inc
pop
add
iret
adcl
test
test
pushf
ja
int3
add
ja
sahf
adc
fsubrp
cmp
sub
mov
clc
icebp
sub
decb
popa
roll
xchg
js
adcl
ss
das
cmpb
mov
imul
push
push
enter
out
loop
mov
into
jle
xor
sbb
and
iret
push
sbb
enter
lahf
adc
scas
xchg
cmp
mov
mov
int3
cmp
mov
shr
cmc
into
push
jmp
xchg
dec
dec
lret
cmc
push
or
inc
cmp
pop
test
pop
inc
test
inc
pop
out
xchg
adc
xchg
movsb
adc
jb
jl
jge
rclb
int
adc
ficoml
adc
cmp
cmp
mov
push
ds
mov
adc
sbb
data16
pop
cmp
std
push
enter
fnstenv
xor
jno
adc
mov
das
mov
pop
sbb
in
jo
dec
andps
stos
mov
js
push
dec
jmp
lcall
xor
mov
jge
pop
dec
xchg
sarb
jp
dec
xchg
mov
aam
test
mov
mov
cld
fists
cmpsl
ljmp
fldcw
sbbl
fcomps
aam
dec
mov
jecxz
decl
fldenv
scas
lods
or
pop
popa
adc
pushf
cmp
and
cld
xchg
loop
adc
das
mov
xchg
jnp
sub
add
sub
adc
dec
or
adc
mov
adc
pushl
setb
xchg
mov
push
push
mov
cmc
mov
cmc
shrb
dec
aaa
sahf
shr
inc
popf
stc
scas
lcall
mov
mov
jmp
cld
out
adc
sbb
jp
push
jae
jmp
inc
idivl
add
roll
into
pop
push
sub
xor
xor
pop
lock
cli
cmp
jns
push
add
fs
mov
sbb
incl
lock
add
std
aas
mov
dec
dec
popa
dec
add
jp
lret
add
xor
inc
scas
std
sub
testb
jb
fisubrl
bswap
inc
iret
pop
sub
insl
mov
xor
call
xor
mov
sbb
mov
sbbb
mov
iret
xchg
ljmp
repnz
dec
adc
adc
icebp
pop
or
shl
loopne
adc
or
lcall
mov
and
imul
pop
or
in
loope
fnsave
cmpl
add
mov
in
push
or
push
ret
scas
inc
movsl
test
clc
pop
adc
xchg
aam
cli
push
or
pop
inc
and
loopne
out
xlat
movsl
sub
cmpb
std
mov
and
adc
arpl
sub
ja
xchg
lret
sbb
cld
outsl
iret
stos
sbb
adc
loopne
mov
fadds
rclb
hlt
fimuls
adc
inc
cmp
cmpsb
adc
jnp
xchg
sbbl
loop
mov
adc
nop
hlt
repnz
jmp
inc
jo
and
test
mov
mov
outsl
pop
adc
and
sbb
mov
aad
aaa
pop
jno
lret
mov
push
inc
sahf
mov
xchg
push
or
pop
sbbl
mov
sbb
das
fimuls
pop
sub
lock
fmul
xor
in
sahf
cmp
cli
inc
nop
mov
mov
loopne
mov
push
daa
jbe
ljmp
jecxz
xchg
mov
mov
movzwl
fcmovb
icebp
push
pop
das
adc
subl
pusha
jp
mov
xor
or
hlt
sbb
and
inc
adc
mov
and
mov
inc
lods
mov
jg
jmp
xor
mov
pushf
andl
fwait
dec
xchg
divl
shlb
shlb
dec
and
out
lea
dec
repz
dec
fnstcw
out
xchg
lahf
fisubrl
push
icebp
push
out
add
ds
mov
push
sbb
out
xchg
sbb
inc
int
pusha
adc
sahf
xchg
testl
inc
sbb
ret
and
xchg
jecxz
repnz
je
sbb
add
inc
xchg
les
outsl
adc
cmpsl
add
jle
jbe
repz
aad
xorl
jo
xchg
sub
cmc
in
in
nop
and
lock
push
mov
das
pop
nop
lahf
dec
je
outsb
adc
sbb
xchg
stc
sub
jecxz
dec
loop
push
es
push
movsl
jmp
push
aaa
jmp
sbb
leave
xchg
sub
popa
call
in
sub
pop
sahf
ret
mov
shl
test
push
push
push
cmc
xchg
fwait
out
inc
lret
inc
addb
mov
push
je
mov
cltd
out
xorl
inc
loope
imul
repnz
pusha
xchg
pop
sbb
loope,pn
pop
outsl
out
adcl
cmc
push
ljmp
ficoms
jne
or
mov
int3
jo
dec
push
mov
in
jl
data16
fs
xchg
int3
sbb
sbb
xor
mov
inc
dec
push
jb
es
xchg
addr16
out
andl
repz
xorl
iret
stc
aaa
sbb
jle
test
fbld
arpl
pop
inc
fs
jno
fdivrl
pop
test
push
fsubs
xchg
cltd
shlb
xchg
jmp
mov
mov
mov
fldenv
js
mov
divb
imul
mov
lock
dec
lock
imul
mov
mov
push
mov
xchg
jecxz
scas
inc
pop
xor
notl
lods
hlt
sbb
mov
jo
pop
insl
dec
or
gs
sbb
xchg
and
pushf
lock
popa
and
jae
and
push
shl
iret
dec
jl
mov
jp
adc
int
and
add
clc
subl
icebp
fwait
ja
lock
inc
adc
xor
push
loope
jge
divb
lock
dec
or
adc
jae
pop
dec
scas
fisttps
jne
xor
dec
psllq
adc
sub
shlb
outsl
push
xor
lock
das
outsl
push
insl
mov
mov
xchg
pop
cmp
pushf
repz
mov
xchg
adc
adc
clc
lock
push
cwtl
cmpl
aas
lock
xor
add
add
mov
push
adc
mov
repz
xorl
mov
jno
add
cli
les
arpl
xchg
lock
adc
xchg
lock
scas
aas
outsl
loop
adc
push
out
pop
sarb
fists
and
mov
dec
inc
push
mov
inc
add
jae
jae
pop
mov
lock
int
jno
and
shlb
xorl
test
jg
ja
cltd
sub
cmp
aas
jnp
lock
xchg
ja
xor
jns
mov
sbb
adc
lock
imul
scas
adc
dec
cmp
adc
nop
adc
push
nop
xchg
addr16
lds
inc
and
into
adc
mov
mov
loop
cmp
lds
or
add
jecxz
js
repnz
in
push
aaa
mov
inc
sbb
dec
xor
out
mov
shrb
incb
jg
inc
cmp
call
jp
mov
cmp
or
add
arpl
je
adc
shlb
jnp
inc
addr16
mov
daa
inc
push
mov
or
adc
cli
lea
sahf
filds
out
mov
xchg
arpl
xchg
lds
aaa
test
arpl
loop
das
xlat
or
notb
inc
push
sub
repz
dec
mov
fstps
xlat
cmp
and
mov
popa
sbb
hlt
xchg
insb
jmp
adc
fwait
adc
mov
stc
xor
pop
push
xchg
mov
mov
lods
add
int3
xor
sub
scas
and
or
dec
aas
dec
outsl
icebp
imul
xchg
xchg
jg
inc
xor
lcall
or
add
jae
stos
sbb
mov
ja
cmp
dec
mov
test
sbb
push
dec
cmp
repnz
dec
dec
add
pop
ss
testb
sarl
mov
jne
lock
lock
repnz
fisubs
movsl
or
popa
ja
outsl
shlb
xchg
cmp
call
popf
test
movsb
mov
adc
shlb
adcl
ror
jne
mov
shlb
pshufw
ja
pop
lahf
stc
mov
cli
jbe
imul
pop
shrb
xchg
sub
xchg
jae
push
popa
push
adc
aaa
scas
dec
xor
int
adc
xor
sub
dec
repnz
ljmp
mov
jl
lds
jle
xchg
push
and
inc
jg
inc
je
movsl
jne
popf
dec
dec
outsb
inc
stc
xor
movsl
out
adc
pop
stc
hlt
int
xchg
prefetch
adc
sbb
cltd
aaa
jp
xor
addr16
adc
in
xor
adc
das
imul
inc
and
or
inc
push
jle
jg
in
pop
cmp
sbb
sub
leave
dec
loope
xor
mov
or
cld
inc
push
dec
mov
xchg
mov
testb
xor
aas
push
dec
incb
fldenv
lret
ret
cmc
xchg
adc
add
jbe
mov
out
jns
sar
lcall
cld
dec
ds
daa
push
cmp
or
mov
mov
or
xor
mov
mov
dec
jl
or
pop
shl
jns
xlat
jae
sarb
repnz
cmp
pop
lods
push
mov
cwtl
inc
je
mov
std
pushf
inc
sahf
and
pop
push
xchg
jnp
aam
decl
popa
xor
fistpll
add
fs
add
repz
mov
xor
out
scas
push
pushl
sti
cli
out
cltd
sbb
int
jae
dec
stc
outsl
lock
mov
xor
call
f2xm1
es
daa
call
or
or
and
cmp
repnz
xor
mull
popf
outsl
mov
mov
sbbl
sbb
mov
sub
mov
repnz
jl
ret
cmc
imul
fcoml
lock
nop
mov
jo
inc
out
scas
stc
iret
out
das
mov
outsl
sti
arpl
add
cmpsl
lcall
adc
into
pop
xor
rol
mov
cmp
fiaddl
jno
jp
sub
xchg
loopne
popf
addr16
pop
adc
dec
incb
sti
cmc
xchg
inc
ljmp
loopne
push
or
push
sub
mov
repnz
fwait
das
in
mov
cs
xor
xchg
jl
ljmp
out
into
jo
and
xchg
jg
inc
push
insb
adc
addl
gs
cmp
cmp
jbe
mov
in
cmpsl
mov
xchg
push
incb
mov
xor
hlt
icebp
lock
jae
adc
lret
cmp
test
roll
das
enter
jbe
and
xchg
dec
outsl
add
or
insb
and
xchg
repnz
sub
jg
scas
fsubrs
es
push
inc
adc
dec
add
jbe
push
hlt
xor
mov
mov
push
stc
mov
sbb
repnz
dec
cmp
xor
and
ds
sti
pop
add
adc
in
ljmp
fxch
sub
inc
jo
xchg
out
sbb
mov
adc
xor
sbb
out
out
sub
test
ds
sbb
scas
into
cmp
xchg
mov
cmp
or
sbb
leave
ret
xchg
pop
addb
push
pop
mov
adc
stc
inc
add
sbb
cli
cwtl
idivb
movsl
rcr
addr16
sbb
pop
dec
dec
js
lock
or
cltd
push
icebp
and
in
testb
js
sub
ret
sub
push
adc
out
push
outsl
movsb
shlb
loope
add
jb
dec
bnd
icebp
outsl
mov
lds
mov
je
fs
lock
aas
pop
stos
leave
js
cmp
int
adc
aaa
dec
xchg
xor
std
mov
arpl
es
fistpll
outsl
push
mov
js
lret
inc
outsl
gs
stc
pop
divb
in
js
je
sbb
xor
mov
jne
pushf
add
sahf
push
lock
nop
aas
push
dec
ret
idivb
pushf
sti
jb
jmp
repnz
push
cmp
ficomps
sbb
aaa
aas
repnz
ljmp
pop
jns
movsl
dec
les
sbb
out
fimuls
jbe
mov
sub
or
repnz
xchg
jg
in
pop
or
mov
mov
adc
stos
or
mov
xor
test
jnp
fisttpl
inc
sub
xor
fcmovnu
insl
stc
xor
fcmovbe
out
inc
pop
stc
fsubl
cmp
das
or
xlat
mov
mull
into
sub
ja
divb
and
addr16
adc
jecxz
lock
lret
inc
fildll
dec
scas
outsl
gs
fmuls
jne
mov
sub
ret
insl
sahf
sub
or
push
and
xchg
ds
fnstcw
jo
mov
push
jae
popa
scas
js
lods
xchg
fwait
imul
movsl
xor
dec
cmp
cli
imul
je
push
prefetch
or
stos
add
mov
cmp
push
xchg
or
adc
pop
out
mov
jae
cmpsl
lods
xchg
mov
mov
xor
pop
or
shl
jbe
xchg
sbb
xchg
ja
dec
mov
fwait
shl
scas
pop
fucomp
sub
leave
adc
and
jb
jo
xor
and
sahf
decb
mov
xor
pop
jae
cltd
xchg
xor
aaa
jp
dec
inc
enter
adc
nop
inc
cmpl
jg
sahf
dec
mov
cwtl
rorb
inc
jecxz
pop
outsl
repz
out
fcoml
mov
or
mov
ja
sbb
pop
mov
push
dec
mov
mov
xchg
pop
mov
lcall
test
cmp
adc
sbb
iret
insb
or
pop
add
cmp
scas
mov
adc
xor
in
xor
fldenv
mov
arpl
sub
sar
stc
pop
out
in
sbb
cli
decl
push
outsb
in
lret
dec
dec
sub
shl
in
mov
push
sub
pop
jg
lock
dec
xor
imul
lahf
inc
sysexit
leave
testb
out
fwait
stos
iret
sbb
mov
sub
inc
test
push
adc
out
popa
icebp
mov
xor
lock
into
orl
sbb
sbb
int3
mov
or
xor
outsl
adc
out
aas
in
inc
sub
lret
shlb
test
ror
jl
mov
dec
xchg
xor
lahf
shrb
jo
push
addl
push
or
repnz
orl
mov
fnsave
inc
pop
fwait
pop
xchg
push
cmp
pusha
dec
dec
jmp
and
push
push
outsb
scas
dec
xchg
push
movsb
push
imul
mov
jo
cli
mov
lret
icebp
arpl
aaa
js
xchg
pop
xchg
outsl
pusha
mov
scas
out
dec
daa
jo
push
les
stos
sub
testb
pop
addr16
mov
mov
pop
xchg
push
int3
mov
push
xor
or
in
adc
fidivrs
pop
scas
cli
insb
ret
dec
inc
push
xchg
icebp
das
sar
and
dec
stos
scas
imul
inc
outsl
push
push
fadds
icebp
xor
popa
xor
orb
into
das
sbbb
xor
xchg
add
pop
popf
dec
adc
push
xor
sub
or
add
out
jo
shll
jp
lock
sbb
repnz
mov
jns
inc
das
stc
sbb
repnz
je
or
adc
mov
out
in
aam
pop
ss
mov
syscall
pop
mov
lock
xor
mov
cmp
jbe
jnp
inc
and
sbb
fs
pop
mov
test
mov
jg
xor
shll
shll
cmpsl
add
shll
pushl
pushf
out
movsl
or
xchg
popf
mov
ret
outsb
or
lods
sbb
cmp
push
std
pop
sub
fcmovu
je
lret
dec
adc
xlat
adc
or
outsl
xchg
pop
out
mov
and
pop
notb
pushf
mov
xchg
loop
hlt
jg
mov
in
and
ljmp
dec
xchg
pop
loop
and
arpl
add
cmp
inc
lods
ds
ljmp
lret
into
sbb
shll
das
adc
aam
push
pop
pop
je
rcrl
rol
lahf
fisubl
cmp
int3
cmp
shlb
rol
fs
sar
xchg
daa
icebp
movsl
movsl
fwait
push
pushl
icebp
lock
nop
insb
adc
sub
add
addr16
and
mov
cld
pop
fnstsw
mov
repz
add
adc
xchg
jmp
jge
enter
sbb
insb
out
cmpsb
xor
dec
addl
in
test
mov
jno
jg
inc
inc
pop
push
out
cwtl
xchg
dec
ja
xchg
imul
je
mov
dec
insl
decb
fdivrs
add
shrb
add
jne
mov
sbb
sbb
mov
fdivs
nop
data16
lret
and
cltd
adc
add
pop
and
inc
xchg
sbb
jmp
adc
js
mov
cmpl
dec
pop
clc
lcall
jmp
jno
mov
xchg
stos
pop
sti
sub
cmp
repnz
stos
jg
xorb
leave
jecxz
mov
adc
cmp
mov
imul
adc
pop
pop
or
mov
in
jl
dec
lods
ds
das
rol
sbb
mov
pop
aaa
mov
push
sub
sub
movsb
xor
push
sbb
jg
mov
leave
in
mov
xchg
sub
sub
mov
out
jns
call
int
mov
mulb
mov
add
aaa
dec
adc
or
xor
xchg
pop
fistl
xchg
bswap
jnp
jo
and
hlt
lret
stos
and
decl
nop
inc
lea
push
pop
mov
sahf
adc
nop
call
mov
popa
mov
jl
hlt
xchg
cmp
add
xchg
stos
inc
out
repz
in
lahf
jo
cmpsb
fcomip
push
xorb
ss
xor
sbb
out
fcomps
cmp
push
sarb
sbb
out
and
out
pushf
sub
or
inc
push
sahf
jg
out
jge
xor
outsb
add
jmp
sti
out
inc
test
ja
lcall
addb
loop
mov
add
movq
es
rcr
push
fdivr
adc
cmpsl
sbb
cmp
cmpsb
ds
mov
mov
out
and
sbb
push
test
and
cmpsb
mov
dec
push
outsl
gs
lcall
ficompl
mov
jp
xlat
repnz
call
testb
nop
pop
sbb
pushl
hlt
and
xor
sub
mov
call
adc
push
cmpsl
hlt
or
popa
mov
cltd
loopne
adc
adc
pop
mov
test
xchg
xor
insl
or
pop
mov
sbb
mov
in
shlb
nop
pop
dec
negl
mov
aas
or
sbb
fsubl
and
push
xor
insl
andb
sbbl
nop
cwtl
ja
pop
xchg
sbb
sbb
pusha
push
or
adc
in
pusha
iret
stc
addb
and
fisubl
nop
pop
dec
test
sbb
bound
lahf
cld
mov
sub
and
and
adc
out
lahf
mov
dec
add
jo
lret
pop
fs
adc
mov
cmp
bound
mov
pop
xchg
adc
or
stos
mov
jne
std
cli
cltd
mov
nop
jnp
lret
inc
ret
pop
adc
fdivr
push
aaa
js
jl
jb
dec
sub
nop
cmpsl
ret
pop
add
mov
add
inc
and
dec
imul
testb
notb
in
pop
sti
jbe
mov
test
testb
seta
adc
push
xor
lods
inc
popf
inc
jo
jmp
adc
or
jb
cmpsl
clc
sti
push
out
in
pop
jo
jae
lock
fldl
sbb
adcl
fmuls
insl
dec
jg
lock
in
xor
hlt
mov
cmp
lock
shll
out
jge
scas
xlat
rcrl
fimuls
stc
push
into
or
xor
icebp
out
insl
push
mov
std
repnz
mov
cmpsl
jge
sub
xor
or
pop
inc
out
mov
ds
and
sbbb
scas
cmpsl
call
popf
outsl
pop
sbbl
mov
adc
xchg
mov
cli
test
mov
sbb
jae
adc
cltd
dec
jmp
imul
inc
sub
push
stc
fs
add
les
notb
cs
jo
inc
cmp
lea
jle
lahf
es
xchg
cli
adc
xor
pusha
dec
cs
cmp
adc
dec
dec
faddl
mov
sub
add
inc
loopne
out
mov
mov
mov
cmp
test
add
adc
add
stos
dec
ja
icebp
jne
push
dec
jl
xchg
jecxz
mov
fcomip
daa
pop
and
fsts
fists
cmp
das
mov
test
pop
popa
push
sahf
sbb
movsb
xchg
mov
mov
inc
xchg
mov
subb
mov
add
xlat
repnz
jne
add
mov
arpl
js
in
ds
sub
mov
push
pop
sarl
jp
fimull
mov
enter
push
adc
mov
xor
adc
stc
mov
js
xlat
mov
jmp
cmc
sti
lock
dec
xor
xor
mov
mov
xor
jl
roll
dec
xlat
sub
fcmovnbe
jecxz
cmpb
mov
add
jno
jne
pop
mov
repz
loop
lret
dec
xlat
xor
iret
dec
repnz
jmp
push
push
rcl
rcl
rol
rcl
push
shld
neg
movsbw
movzbw
push
stc
pusha
add
mov
add
and
mov
lea
shl
bswap
mov
cmp
adc
and
mov
pushl
xor
lea
pushf
lods
lea
jle
mov
inc
jmp
stc
xor
call
add
inc
add
inc
add
rolb
jns
add
add
add
add
ror
testb
fldcw
push
sbb
sub
clc
shlb
divb
cmpsb
in
push
mov
test
lahf
scas
bound
sbbb
cmp
hlt
rcrb
pushf
add
ficompl
push
lahf
fnstsw
arpl
or
sti
xor
or
push
iret
int3
insb
pop
out
jae
dec
mov
or
mov
repz
xchg
adc
jbe
mov
and
icebp
lret
movsl
push
jns
adc
or
lret
sbb
inc
test
mov
pop
flds
addr16
shl
sbb
fdivrl
stos
out
and
int
ret
int3
into
push
fnstcw
and
sar
dec
push
xor
mov
pop
popa
shll
adc
bound
and
js
fst
ljmp
les
ds
sub
mov
mov
jae
lea
pop
popa
cmp
jne
ljmp
add
push
sbb
jo
pop
xchg
std
test
out
stc
adc
sub
cmp
aam
adc
sbb
mov
jl
xchg
movsb
mov
or
sub
lret
fwait
repz
mov
scas
in
push
std
gs
gs
and
jno
loop,pn
or
xchg
subl
sbb
mov
pop
jno
pop
mov
je
sbb
stos
outsb
push
cmp
push
comiss
mov
xor
mov
sbb
and
out
clc
shll
sub
lahf
fldcw
mov
stos
or
addl
sub
test
adc
xor
fidivrs
ss
leave
lahf
pop
int3
mov
adc
mov
pop
sbb
mov
pop
jmp
push
fwait
inc
daa
push
mov
fidivrs
subw
outsb
sub
loop
jne
mov
jae
cmp
push
lea
jae
inc
or
pushf
inc
mov
lea
btc
mov
call
lea
je
cmc
cmc
pusha
bt
cmp
pusha
lea
ja
push
lea
jne
pusha
inc
mov
pushf
jmp
jmp
movzbw
pushl
popl
pusha
not
cwtl
call
pushf
pushf
call
call
pushl
mov
mov
pusha
test
call
cmp
bt
test
sub
jmp
jmp
cmpsl
mov
stos
inc
add
frstor
je
aam
cmp
lcall
dec
sbb
shrl
mov
int
ret
push
cmp
add
push
xor
and
ud2
in
add
sarb
fstps
loopnew
cltd
mov
dec
ret
out
cmp
fs
mov
pop
test
dec
dec
out
pop
jecxz
hlt
das
out
xor
lcall
push
push
mov
jp
adc
jae
mov
decl
add
leave
add
add
push
adc
pop
and
pushf
movw
call
pushf
pushf
lea
je
test
push
cmp
jmp
cmp
pusha
movb
mov
pusha
lea
jbe
push
call
pushf
pusha
movl
push
pushf
call
mov
stc
test
call
lea
jae
push
lea
jae
pusha
pushl
pusha
lea
jmp
mov
jmp
bt
clc
cmp
movl
lea
pushl
jmp
and
jne
popa
rorl
fwait
cmc
or
xchg
rorb
outsl
sub
aam
dec
stos
inc
rorb
movsl
pop
push
idivb
lods
jle
jp
scas
dec
jns
enter
adc
pop
add
jle
adc
stos
mov
sub
repnz
cltd
ret
jne
dec
shl
loop
xlat
js
jne
inc
ja
jl
stos
arpl
push
inc
bound
mov
push
aam
pop
int3
fld
loopne
fs
xchg
fs
inc
mov
iret
add
jae
call
push
shll
sbb
mov
mov
xor
lret
fs
mov
in
imul
mov
lcall
mov
push
mov
test
jbe
jnp
imul
cwtl
dec
dec
push
lcall
or
lcall
aas
cmp
mov
push
das
adcb
push
mov
sub
sbb
cmp
call
cmp
pop
popa
roll
jb
push
and
hlt
repz
xchg
fwait
lret
lret
fwait
push
mov
mov
enter
xchg
shrb
je
fimull
push
mov
xor
mov
jp
push
stc
inc
jnp
in
dec
xor
mov
repz
ret
fimuls
jge
in
test
push
fs
stos
mov
cmp
jbe
das
jb
mov
jle
imul
les
cld
xor
not
or
mov
shl
movzbl
neg
add
ror
rcr
shr
and
mov
call
lea
jne
push
pushl
stos
push
pushf
mov
movw
lea
jmp
fcmovnu
ds
popa
rol
icebp
scas
sub
js
add
mov
cmp
or
loopne
scas
jne
xchg
xchg
clc
xor
jge
push
or
out
mov
jg
dec
mov
xchg
cmp
mov
gs
or
sbb
psubd
mov
ja
mov
xchg
cmpsb
loop
fdivr
xor
int
add
jg
jmp
pop
popa
shl
repnz
jp
adc
adcb
je
cmp
fcomp
sub
ds
clc
push
cmp
popa
push
push
gs
out
cs
adc
jl
cs
xor
andl
inc
xor
jbe
insb
pop
sbb
mov
lods
filds
outsb
mov
addr16
daa
pop
push
cmp
push
imul
scas
jl
js
lods
inc
jno
push
mov
add
outsb
jge
cld
mov
out
jb
imul
ds
jo
insl
jnp
cmpsl
dec
xlat
rclb
fs
lret
ffree
mov
stc
loopne
mov
cmc
ss
fcmovb
std
loopne
cmp
int
pop
dec
or
je
fiaddl
mov
ja
add
cmp
clc
xor
rcr
sbb
rcl
loopne
nop
mov
enter
insb
jmp
repz
adc
scas
fcmovnu
pop
es
jecxz
jbe
push
cmp
pop
stc
mov
movl
lea
jb
pushf
pushl
movl
push
push
lea
jmp
pushl
lea
jne
jmp
mov
roll
aas
mov
push
mov
pop
cmpsl
cs
inc
pop
in
ds
and
jb
test
jne
cmp
lods
fcos
pop
sub
xlat
dec
and
mov
xor
sub
sub
add
dec
outsl
arpl
inc
jb
gs
inc
je
call
lea
je
push
add
pusha
pusha
lea
jmp
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
lea
jmp
lea
jne
push
push
inc
call
pusha
pusha
jmp
test
adc
or
add
not
movzbw
movsbw
mov
pusha
pushf
push
mov
setp
movb
call
lea
call
push
mov
lea
jae
cmp
pushf
pushf
xor
mov
mov
lea
call
call
xchg
loop
push
popa
rorl
xchg
les
cmp
insb
xor
mov
pop
cli
add
out
adc
cwtl
sbbl
inc
inc
std
and
cmp
popf
xor
mov
test
push
insl
xor
inc
jo
jne
xchg
imul
mov
mov
or
pushf
and
xlat
cld
xor
leave
popf
xchg
sub
cmp
adc
ret
jns
jne
xor
jns
jmp
cmp
dec
mov
shlb
sbb
icebp
dec
fsubl
lret
aam
in
repnz
mov
mov
mov
testl
adc
add
cmpsl
sub
stos
jbe
arpl
daa
sub
pop
push
mov
pop
push
loope
adc
fdivs
dec
dec
aaa
pop
or
daa
scas
lods
push
sub
push
sti
sub
in
aas
push
test
lock
mov
inc
lret
lds
lea
fisubrs
adc
jecxz
pop
mov
insl
push
dec
test
xor
push
in
mov
pop
or
shll
xor
out
mov
mov
mov
shl
cmp
push
cmp
inc
out
aas
cli
mov
and
mov
stos
call
xlat
cmp
test
and
mov
sub
in
push
add
sbb
push
inc
inc
pop
jbe
lahf
cmp
sbb
fs
adc
in
jmp
sahf
cmp
mov
xchg
push
add
xor
xor
repz
pushf
andb
ret
out
ret
int3
aas
imul
cmp
xor
scas
aam
push
mov
iret
mov
dec
mov
jl
inc
enter
rorb
pop
jae
insb
movsb
add
and
addr16
mov
mov
push
push
jbe
pushl
inc
lcall
mov
cmp
pusha
lea
jb
bt
pusha
stc
cmp
call
pusha
stc
jmp
movb
mov
call
movl
pushf
movl
pushf
pushf
push
lea
jmp
inc
pushf
cmc
rol
pusha
cmc
pushl
std
pushw
popfw
call
add
neg
bt
shr
sbb
inc
movsbw
sub
mov
and
add
not
push
not
mov
call
movl
pusha
pushf
mov
movl
pusha
pushf
lea
jmp
pushf
movl
push
pusha
movb
pushf
lea
jmp
and
pop
fbstp
lods
jl
aam
mov
outsl
nop
std
movsb
mov
lcall
das
test
cmpsb
into
aad
jl
push
mov
ja
js
xor
sub
xor
jl
xchg
mov
and
dec
test
inc
leave
movsl
push
mov
shll
inc
mov
shlb
jne
iret
fsts
sub
or
adc
add
cmp
iret
cmpsl
rcrl
mul
jp
loop
jb
cmp
or
sahf
in
adc
fcom
arpl
rclb
jae
or
jno
fwait
lock
sub
sbb
int3
lods
mov
xchg
pop
adc
inc
jo
mov
fldl
inc
fldcw
int
pop
sbb
icebp
or
test
push
mov
adc
aam
test
outsl
mov
std
adc
jl
insl
mov
mov
outsb
shrb
mov
stos
lahf
int3
mulb
popw
mov
pop
enter
sbb
cmp
mov
sarb
mov
out
mov
and
loop
mov
push
gs
cwtl
pop
mov
cmpsl
scas
sarb
push
adc
fadds
inc
mov
mov
ja
xlat
cmp
inc
mov
lahf
ja
pop
adc
pop
insl
push
in
fstpt
les
adc
ds
jecxz
inc
xchg
add
or
scas
mov
inc
jno
fcomps
mov
xchg
repnz
lret
sti
test
and
ret
add
and
test
xchg
ror
push
divb
daa
out
cmpsl
scas
lods
jl
mov
mov
ljmp
jae
jns
pop
and
inc
mov
push
lret
add
mov
jne
testl
jns
negl
jno
outsl
add
into
ss
mov
lcall
fs
scas
jle
sbbb
std
xchg
mov
movsb
cmp
or
cltd
cmp
inc
xchg
adc
mov
lods
cmp
xlat
cmpsl
jge
out
pop
outsb
dec
mov
les
mov
jl
rclb
in
mov
xchg
outsl
enter
imul
jecxz
xor
jae
pop
es
xchg
adc
test
cmp
loope
jle
ss
data16
aam
cmp
ret
sub
mov
sbb
cmp
xlat
je
lret
scas
mov
sub
push
adc
push
addb
jmp
xor
or
lret
roll
mov
jp
daa
sbbb
cwtl
lret
mov
andl
inc
mov
sti
mov
or
das
jno
repz
cmpb
inc
notl
arpl
or
push
xlat
aas
int3
xchg
cmp
enterw
push
or
lods
inc
jb
nop
outsl
js
pop
sti
and
cwtl
sti
jmp
xor
adc
repz
int3
jge
mov
fists
fs
jns
sbb
fsubp
inc
add
test
in
jmp
mov
movsb
outsl
ficompl
xchg
jg
imulb
mov
or
fdivrl
iret
xchg
in
xchg
or
dec
pop
div
out
push
aaa
push
rcrb
mov
lahf
pop
or
jne
push
dec
push
adc
out
lock
xchg
mov
xchg
aaa
xchg
and
pop
je
fildl
fists
cmp
cmp
pop
xchg
mov
mull
sub
xor
or
xchg
add
mov
movsb
int3
sarl
in
fistps
aam
sti
ds
xchg
xchg
cltd
leave
cmp
dec
add
pop
lret
adc
push
jg
fdivrl
js
and
mov
jg
aam
inc
rolb
jg
pop
pushf
jnp
pop
test
sub
nop
imul
and
jne
mov
inc
cmp
fbld
cmp
and
cmp
push
mov
mov
mov
mov
sub
test
addb
stc
push
sbb
pop
xor
xchg
aaa
pop
mov
fsubr
pop
jl
outsb
xchg
push
les
fcmovne
sub
nop
add
movsb
je
mov
mov
shl
scas
mov
cmpsl
push
cmp
and
sbb
js
cmp
sub
mov
cwtl
je
mov
inc
cmpsl
ja
and
outsl
jl
push
xor
add
push
js
mov
xor
ja
mov
cmpsl
sub
aam
jecxz
sbb
and
mov
cmpsl
dec
out
inc
adc
xchg
js
pop
lock
jg
cld
enter
lahf
data16
dec
insb
add
xor
jp
xchg
xor
jl
lret
ja
push
pop
insb
or
pop
lahf
pop
sbb
xchg
insb
cmp
adc
outsb
cmp
les
data16
mov
icebp
sub
popa
movsl
inc
lret
add
xlat
in
inc
stos
and
inc
mov
mov
jmp
addr16
cmp
push
ret
mov
mov
cmpsl
mov
mov
cmpsl
cli
mov
fisubrl
xor
push
xor
cmpsl
jbe
jg
sti
adc
fmulp
cmp
push
les
fxch
scas
popf
pop
in
test
inc
sub
cmpsb
int3
and
jmp
adc
adc
test
rcrb
out
cmp
mov
mov
mov
mov
daa
pop
mov
and
ja
sbb
mov
cmp
pop
enter
outsl
out
xor
mov
push
mov
xlat
and
and
rclb
cmp
and
jl
stc
psllq
mov
jecxz
sbb
arpl
add
jge
xor
loopne
mov
mov
pusha
xchg
jp
mov
jmp
dec
push
mov
or
mov
loope
jo
dec
cmp
rorb
adc
pop
out
cwtl
les
or
jmp
pop
das
adc
mov
pop
jg
loop
insb
mov
scas
inc
or
das
mov
pusha
inc
mov
mov
jl
lret
mov
mov
scas
add
jp
xchg
stc
mov
inc
mov
cmp
movsb
xchg
outsl
loop
mov
inc
aas
les
inc
ljmp
xchg
dec
dec
adc
cmpsl
mov
fistpll
sub
rcr
scas
pop
and
pop
in
mov
and
mov
outsb
push
int3
jae
lds
ja
aaa
fistpll
add
cmp
jp
dec
test
cmc
outsb
mov
inc
xchg
sbb
cmp
xchg
ds
cmp
rcll
fiaddl
adc
mov
adc
imul
xchg
and
fcmovnb
mov
int
pop
lea
idivl
ja
cmp
clc
xor
in
xchg
jg
sarl
mov
incb
sbb
dec
test
rcr
sahf
sub
jp
hlt
sbb
imul
lcall
lret
sbb
movlps
out
push
fwait
or
jnp
inc
mov
sbb
inc
cmp
xchg
loope
xor
imul
mov
sub
fildl
mov
imul
inc
fcmovne
xorb
cmp
xchg
movsb
mov
sub
ss
xor
cs
jecxz
les
and
jp
js
xchg
ss
fistl
mov
cmp
dec
mov
sbb
pop
dec
cwtl
mov
subl
mov
mov
call
iret
jne
mov
out
cmpsl
mov
test
stos
jge
pop
dec
inc
out
pop
loop
roll
jbe
xchg
dec
cmp
inc
repnz
adc
mov
dec
add
pop
jecxz
jnp
jae
jg
int
push
add
sbb
pop
add
out
xor
sub
jb
pushf
cmpsb
div
in
or
cmp
out
movsb
imul
pop
mov
add
jnp
sahf
mov
pop
outsl
jnp
dec
push
adc
mov
into
ljmp
sub
not
mov
mov
js
int3
lret
sarl
cmp
cmpsl
add
mov
fcomps
jns
sti
dec
test
ficomps
add
jge
adc
cmpsl
pusha
andl
insb
xor
xchg
dec
xor
inc
xchg
out
jge
cmpsl
inc
push
pop
push
jae
cs
pop
dec
std
mov
mov
insb
stos
and
mov
adc
mov
orl
jmp
mov
push
and
sbb
inc
gs
push
sbb
shl
daa
aad
sub
mov
rep
movsb
mov
in
fs
cmp
ret
lcall
mov
push
rol
insb
jae
mov
lahf
add
cwtl
aam
jecxz
dec
ss
or
jl
cs
jmp
lret
rcrb
inc
adc
lcall
dec
jle
lret
push
push
xchg
jecxz
out
sub
dec
mov
xchg
fwait
inc
pop
repz
fimull
lret
ss
sbb
in
and
popf
fs
mov
lret
enter
out
pop
dec
std
push
ss
add
lea
dec
mov
dec
movsb
lods
into
ret
sub
lods
fs
jnp
jmp
call
in
sbb
or
imul
rcrb
adc
add
sub
mov
mov
mov
into
mov
ja
xor
lahf
pop
nop
ret
and
mov
mov
lock
mov
cs
popa
sbb
stos
or
jecxz
mov
mov
cmp
adcl
gs
push
jmp
push
sub
cmc
jb
rolb
jmp
sbb
mov
dec
push
xchg
loop
mov
adc
lds
roll
pop
xchg
mov
popf
xlat
cmp
jae
xchg
imul
xchg
mov
pop
aam
es
dec
lcall
pop
sub
movsl
pop
sbb
shll
in
add
mov
mov
adc
mov
pop
testb
ds
jno
sbb
inc
dec
popl
in
mov
pop
xchg
mov
inc
xor
fs
mov
outsl
js
fsubrl
push
add
xlat
push
push
inc
lods
mov
add
ljmp
mov
jae
in
fcmovbe
mov
repz
in
and
pop
lcall
cmp
and
data16
jg
xchg
daa
adc
push
rol
adc
jl
outsb
sub
lret
outsb
jae
xchg
in
mov
cmpsl
pop
into
movsl
push
and
movsl
xlat
das
add
adc
jle
inc
fs
or
xchg
shrl
outsl
imul
push
push
ja
out
popf
add
fwait
lret
repz
rolb
sub
ret
sub
push
pushf
daa
cmpsl
add
lds
movsl
push
add
mov
dec
jg
push
ds
mov
add
adc
pop
dec
gs
testl
and
cmp
mov
jmp
sbb
and
ret
mov
sbb
jnp
sub
xlat
cmp
cmpsb
movsl
xchg
jns
aam
sbb
out
adc
inc
aad
test
push
sbb
mov
mov
jge
mov
cmc
sarb
xor
nop
outsb
sub
mov
nop
mov
cs
xchg
fcomps
das
in
faddl
or
sbb
jmp
xchg
outsl
clc
xor
and
les
sub
ss
lds
lcall
dec
fdivrl
sarb
xor
notl
mov
xchg
dec
clc
rclb
mov
outsb
and
sbb
or
cmp
int3
push
aas
nop
sti
mov
test
shll
push
inc
xchg
outsl
scas
rorb
lcall
ret
aad
arpl
adc
mov
arpl
push
add
xchg
mov
mov
xor
jmp
daa
lret
iret
inc
test
test
lcall
shlb
or
mov
in
js
ret
or
jle
fnsave
scas
dec
mov
in
fidivrl
js
pop
sub
clc
fsubs
mov
xchg
out
xchg
addb
mov
xlat
adc
mov
and
mov
add
test
aam
cwtl
enter
sub
sub
enter
loope
addr16
inc
lods
adc
fistl
xchg
lret
cltd
adc
movsl
and
jecxz
les
ss
cmp
cmp
lea
xchg
aaa
add
jmp
jae
test
in
xchg
xchg
mov
outsl
mov
scas
xlat
iret
stos
lret
mov
mov
mov
cmc
and
mov
xchg
add
adc
dec
fnstsw
dec
xchg
filds
fbstp
iret
jnp
lds
scas
stc
lret
iret
push
inc
xchg
shrb
orl
pop
in
mov
lods
pop
mov
addl
mov
jb,pn
pusha
adc
gs
push
cvtdq2ps
hlt
std
xchg
sbb
clc
or
fidivrs
js
add
xchg
dec
loop
out
stos
daa
push
aaa
les
pop
pop
aaa
mov
mov
pop
adc
sub
test
sbb
or
push
jle
mov
xlat
cmp
jmp
shl
mov
aaa
xchg
stos
pop
dec
mull
out
addr16
int3
stos
fiadds
lcallw
outsb
ds
adc
clc
mov
sub
jecxz
lret
cmp
inc
pusha
insb
clc
int
sub
cmp
cmpsl
scas
adc
out
xchg
ss
cmp
loopne
int
ffree
push
push
add
xchg
xor
sahf
dec
jne
mov
add
xor
js
or
jl
or
leave
sti
xor
mov
out
lods
lock
mov
cmpsb
ds
mov
lahf
aas
xchg
lods
xchg
in
aam
orb
insb
mov
pop
mov
aaa
addr16
jmp
mov
cltd
ja
movsb
jg
dec
dec
ror
mov
adc
push
sub
adc
adc
dec
dec
out
inc
cmp
fimuls
jbe
push
cs
jo
insb
sbb
sub
lret
enter
inc
add
mov
icebp
stc
sbb
gs
loopne
mov
repz
out
in
pusha
xchg
mov
dec
insl
cmp
pop
test
popf
movsb
pusha
popa
rcll
add
inc
leave
shll
lret
sti
std
push
test
filds
jg
icebp
out
movsl
movsb
scas
rcl
adc
push
pop
mov
inc
sbb
movsb
or
and
inc
pushf
cmpsl
daa
pop
stos
scas
push
rorb
add
nop
mov
out
sbb
out
mov
adc
popa
inc
out
push
js
outsb
ficoms
popf
inc
add
movsb
jle
rolb
xlat
or
aaa
add
jmp
test
sbb
ja
sti
dec
imul
insb
test
sbb
cwtl
dec
sti
add
mov
lods
or
mov
lahf
push
inc
xchg
test
insb
push
pop
pop
cmp
dec
mov
dec
je
sub
mov
aaa
xlat
shrb
leave
sti
clc
jmp
and
lods
mov
into
sbb
cmp
pop
xor
dec
mov
cwtl
subl
xor
shr
cmp
jno
out
dec
outsb
sbb
ret
iret
sub
push
addr16
aad
dec
jns
mov
jle
push
cmp
inc
xchg
in
aaa
rcl
adc
add
dec
stos
xor
adc
jne
inc
inc
add
les
mov
test
mov
sub
push
fmuls
xchg
ss
pushf
pop
daa
cmp
insb
pop
lds
js
dec
inc
xlat
sbb
add
and
cltd
jo
sbb
jno
jle
les
fs
xorl
xchg
ja
inc
mov
in
in
leave
ror
dec
mov
cmpsb
test
nop
int
movsb
lods
jp
inc
or
cmc
pushf
icebp
pop
or
loope
pop
xchg
or
cmp
fsubrl
int3
mov
sbb
add
mov
mov
ljmp
sbb
pop
hlt
pop
cmc
cltd
pop
mov
push
jnp
add
imul
cmp
cmc
push
mov
adc
lea
dec
cmp
dec
call
cmp
lcall
sub
sti
mov
adc
add
in
adc
jg
fiaddl
cmp
dec
les
mov
mov
inc
xlat
insl
sti
sbb
push
bound
sbb
xor
dec
jl
pop
aam
test
mov
mov
fadds
xchg
cmpsl
or
adcl
repz
arpl
mov
mov
push
push
push
imul
and
loope
and
and
mov
scas
jge
cmpsb
inc
sarl
fistpll
int
stos
popf
sub
mov
lret
cmp
arpl
stos
aam
arpl
xchg
cwtl
dec
inc
out
jmp
mov
mov
mov
ja
sub
leave
xor
sahf
jecxz
push
pop
cmp
test
fstpt
or
add
insb
or
inc
xor
je
jmp
jg
dec
mov
insb
lods
mov
add
xchg
pop
jg
mov
js
mov
cmp
xchg
insb
bound
fiaddl
pop
js
es
test
cltd
sbb
scas
movsb
mov
aad
mov
ss
movsb
sub
mov
inc
mov
notb
popf
int
or
lods
fs
xchg
cs
fmulp
ss
sbb
in
or
push
aad
and
jnp
cmp
shr
cmp
adc
dec
js
enter
and
shrl
jae
cmp
adc
icebp
or
adc
sub
jno
mov
mov
test
popa
scas
mov
arpl
movsb
inc
jp
aam
aad
dec
mov
fwait
pop
push
xchg
insl
xchg
psubsw
add
cmpsl
addr16
inc
mov
push
rcll
ds
loope
sbb
cmp
dec
stc
mov
jns
loopne
cmp
hlt
xor
pop
aaa
pop
outsb
xlat
xor
xor
ret
push
mov
enter
add
call
shlb
cmp
aad
mov
xchg
testl
mov
add
sahf
pop
ret
clc
negb
aaa
pusha
lods
mov
lods
adc
cs
movsb
out
mov
cmp
mov
sub
stos
dec
inc
aaa
ja
aaa
mov
xchg
push
arpl
and
sub
sub
popf
jne
fadds
pushf
sbb
movsb
sbb
add
inc
add
out
inc
add
nop
rorl
sub
js
add
popf
adc
inc
jecxz
adc
or
mov
sub
pop
xchg
sbb
enter
cwtl
jae
mov
lahf
and
std
popf
out
shlb
lds
lret
test
push
push
sbb
dec
in
xchg
xchg
ss
lods
nop
or
push
ja
mov
sub
cltd
mov
les
pop
inc
pop
pop
jle
pop
xchg
sub
sub
mov
fistpl
sbb
sarb
pop
sti
and
rcrb
xor
xlat
sub
xchg
add
loop
scas
cli
loope
jne
cli
shll
mov
sarl
pop
mov
test
jb
xchg
cltd
pop
inc
cmp
xchg
pop
jle
nop
std
mov
mov
sti
in
js
mov
push
inc
outsl
jns
push
adc
aam
imul
pop
das
int
shll
xor
jge
xlat
mov
int
add
aam
push
aad
flds
sbb
das
or
xor
bound
sbb
push
int3
inc
adc
test
mov
add
xor
ret
or
mov
adc
mov
lret
mov
ljmp
je
fwait
and
test
adc
out
push
ror
in
stos
int
sbb
ret
sbb
sbb
insb
outsl
lods
rcrl
ds
lock
out
movsb
inc
rorl
loope
ds
ds
mov
leave
cmp
cli
lds
cmp
xor
or
mov
jp
subb
les
shrb
push
dec
js
jl
adc
movsb
or
mov
add
es
push
jg,pn
aam
rcrl
adc
jge
shl
cwtl
mov
xchg
jg
pushf
jge
rcrl
pop
xchg
aaa
push
sbbl
aas
sbb
subl
pop
lret
in
jne
addl
push
xchg
fildl
lds
popf
andl
xchg
leave
popa
or
push
xor
xchg
inc
xchg
lods
xchg
cmp
cmpl
cmpsl
mov
cmc
push
add
stc
jmp
in
mov
sbbb
test
mov
add
xchg
inc
cmp
mov
cwtl
sbb
adc
xchg
xorb
push
adc
cltd
lods
pushf
repnz
fnstsw
int
cld
das
mov
outsl
pop
push
jne
iret
nop
outsl
insl
les
cmpsb
mov
inc
hlt
sbb
in
das
fldcw
xchg
aam
subl
jle
xchg
adc
ret
jne
ds
dec
pop
pop
cmp
pop
mull
sbb
dec
in
push
push
jns
xlat
loope
or
es
add
sub
mov
pushl
shll
push
fnsave
repz
push
test
aas
cmp
into
test
addr16
xor
jmp
inc
div
push
rcrl
mov
mov
pop
sub
sbb
inc
mov
sub
fsubr
fwait
iret
test
mov
ror
repz
test
pop
sbb
jne
outsb
cmp
xchg
test
gs
cmpsl
ret
add
stc
adc
xchg
rep
in
xchg
insb
pop
fisttps
addb
iret
add
hlt
push
sahf
sbb
push
xor
fldl
fsub
ljmp
in
jp
mov
mov
loop
out
sbb
repnz
xchg
jno
test
aad
es
sbb
cmp
sub
push
movswl
aam
inc
sbb
das
pushf
testl
bound
inc
mov
sarl
push
test
fildll
mov
adc
fstpt
mov
out
cmc
mov
clc
das
int3
popa
xchg
inc
mov
cmp
xchg
dec
clc
adc
dec
ret
lods
sarb
cmp
cwtl
jne
adc
insb
pop
sub
inc
mov
pop
inc
pop
lds
push
push
rcrb
sbb
dec
ds
subb
or
xor
adc
push
sub
dec
sbb
jmp
inc
repz
xor
mov
pop
stc
test
vpcmov
adc
jb
push
push
insb
popf
push
pushf
lea
dec
leave
cwtl
sarl
jnp
inc
decl
mov
ror
dec
jle
dec
int
cmp
mov
mov
mov
dec
cltd
xchg
xor
or
xor
stos
dec
cmp
insb
in
dec
xorb
fsub
dec
shrb
or
push
repz
inc
int3
enter
cmp
lock
sub
imul
dec
out
xor
mov
or
jle
pushf
add
jl
dec
sbb
rorb
dec
adc
movsb
rorb
rcrb
jp
decb
xor
sti
movsb
mov
pop
cmp
push
lcall
pop
outsl
inc
aam
mov
pop
sbb
xchg
or
mov
cli
pop
movsb
and
adc
mov
mov
shlb
jmp
dec
shrb
pop
pushf
fbld
fsubrs
inc
fildl
xchg
sahf
mov
fadd
inc
xor
mov
mov
xor
mov
mov
divl
cmpsl
clc
mov
js
ror
pop
mov
scas
mov
xorb
mov
pop
pop
leave
in
pop
or
dec
js
sbb
scas
dec
mov
cltd
into
outsb
cmp
roll
addb
movsb
sbb
popf
add
outsb
negb
xchg
xor
ja
adc
adc
sub
rorb
repz
sbb
mov
aas
xchg
sbb
shlb
lods
mov
aam
out
xor
loop
mov
jl
xchg
jecxz
pop
fdivrl
out
test
shll
arpl
jge
outsl
jg
test
inc
movsl
call
jno
out
push
rcrl
negl
test
sub
adc
out
xor
sbb
nop
scas
cmp
rol
pop
mov
and
mov
pop
cmp
arpl
pusha
inc
or
lea
sbb
in
cmpsb
in
inc
das
test
ret
movsb
int
mov
pop
cmp
push
stos
cmp
dec
push
pop
stos
inc
daa
cmpsb
jno
dec
mov
test
adc
shrl
inc
sti
push
cmp
mov
test
in
cmpsb
in
mov
repz
stos
js
cmpsl
adc
cmp
push
popf
ds
dec
pop
push
push
jne
and
mov
pop
fwait
push
mov
cmp
xorl
fdivrl
stos
xor
add
inc
add
pop
enter
andl
xlat
push
in
push
mov
cmp
add
dec
js
push
push
mov
ds
cmp
popf
pusha
pop
pop
jg
scas
mov
out
and
fsub
movsb
shlb
bound
mov
pushf
xor
mov
and
jge
and
negl
sbb
int
lods
sub
mov
xor
imull
js
inc
loope
xchg
shlb
stos
push
hlt
xor
in
pop
imull
cwtl
and
fistpl
sbb
dec
sbb
inc
sbb
aam
push
sub
inc
pop
int3
loope
mov
mov
jmp
fwait
rep
sbb
cltd
cwtl
and
stos
sbb
add
into
mov
mov
aas
js
cltd
pusha
cs
xchg
xor
sarb
loop
cmp
jae
pushf
inc
aaa
sbb
js
ja
fcmovb
cmp
mov
sub
mov
cmp
repnz
inc
inc
lods
pop
xchg
jnp
push
pusha
stos
inc
test
popfw
enter
fwait
mov
sbb
sbb
test
fldt
lcall
int3
adc
insb
push
rcrl
cmpsl
in
iret
mov
cmp
bound
xchg
shrl
add
add
ficoms
loope
aas
fbstp
cmp
inc
xor
leave
sbb
pop
in
or
add
in
stos
inc
das
in
fbstp
cli
push
lods
mov
fisubrl
cmp
loope
in
mov
or
ljmp
imul
cmpsl
or
mov
push
mov
cwtl
sarb
in
adc
adc
jmp
cwtl
mov
lea
xor
sbb
jp
xlat
or
cmp
adc
lret
jl
xor
dec
fwait
push
fwait
mov
cmp
jp
adc
dec
aam
lahf
mov
mov
push
int
cmp
add
jecxz
pop
adc
adc
jl
iret
sub
dec
dec
mov
sbb
in
mov
mov
cmpsb
test
mov
cmp
sarl
sbb
cmp
in
dec
or
pop
imul
lods
cmp
scas
lahf
mov
call
xchg
fsub
mov
adc
cmp
gs
mov
lds
xor
outsl
mov
pop
ja
rcll
push
mov
pop
insb
sub
in
loope
insl
aam
jb
lahf
out
ds
adc
pop
inc
pop
rclb
int
addr16
jp
cmpsl
cwtl
sahf
and
outsb
push
fildl
jno
mov
xchg
je
std
and
movl
rcl
add
pop
xchg
xor
out
js
sub
xchg
lcall
sarb
int
cmp
pop
mov
sbb
mov
xor
scas
pop
jg
imul
test
dec
add
pop
and
jnp
mov
or
lods
adc
dec
cmp
and
test
add
inc
repz
test
cmpb
out
je
scas
jge
loop
cmp
dec
jl
subl
ret
lret
loope
cmc
inc
cmp
data16
fwait
add
neg
adc
out
push
adc
pop
repz
jmp
je
push
stc
xor
or
int
dec
pushf
test
fistl
mov
pop
rcll
mov
pop
nop
inc
ret
out
inc
mov
mov
and
lods
cmp
loop
jmp
aaa
int3
mov
add
insb
mov
adc
loope
leave
or
inc
xchg
rcll
jmp
cs
xchg
call
rorb
and
popf
xchg
cmp
mov
push
xor
cmp
in
notl
lret
fcmovu
test
lea
lea
xchg
inc
xchg
insl
cmp
nop
shll
std
test
push
push
jns
in
push
fldcw
inc
jp
pop
dec
mov
or
lds
xor
xchg
adc
inc
and
in
xadd
xchg
jg
imul
lret
dec
nop
lock
fistl
in
jmp
add
cltd
sub
aas
ret
inc
xadd
lea
ja
loopne
and
arpl
mov
fstpt
cmp
ss
fldl
jmp
jmp
xchg
pushf
out
xchg
movsl
imul
stos
mov
xchg
scas
pop
cmpb
ret
scas
pop
mov
cmpb
xchg
fistps
shrb
aas
scas
cmpsb
ljmp
call
scas
insl
xor
push
loop
lea
xchg
mov
insb
scas
push
scas
sub
int
inc
inc
in
xor
sbb
test
ds
mov
xor
addr16
nop
adc
xchg
rcr
xchg
xor
dec
mov
in
insl
mov
push
and
dec
xorb
and
lds
js
mov
jns
fisttpl
mov
gs
scas
lds
inc
dec
jb
insb
sub
arpl
xor
sbb
xchg
mov
mov
fwait
adc
lret
sbb
lret
test
cmpsb
ficoml
sbbb
inc
aaa
xchg
add
dec
xchg
push
push
xchg
or
in
gs
add
jmp
pop
mov
mov
pop
and
in
sbb
je
inc
sarb
or
mov
mov
shlb
jnp
pop
movsl
sbb
mov
insb
sub
adc
fsubrs
cmp
lea
add
dec
or
inc
insl
mov
and
fcmovb
test
fcompl
mov
js
mov
les
in
add
pop
jmp
mov
ror
mov
insl
jge
or
mulb
inc
add
fidivrl
ljmp
add
in
sbb
jno
cmp
je
xchg
push
sub
mov
push
pop
sbb
mov
xchg
xchg
aaa
int3
int3
push
addb
push
cwtl
xchg
imul
mov
mov
or
inc
xor
leave
jnp
hlt
adc
dec
test
mov
mov
js
adc
dec
insl
inc
sub
pop
mov
int
loop
leave
ja
xor
int3
insb
gs
xchg
cmpl
int3
add
push
das
outsl
repnz
pushf
xrelease
div
lock
addb
and
sub
test
or
push
inc
jecxz
sbb
repnz
pushf
adc
sbb
cli
mov
and
and
aad
inc
scas
mov
jns
add
stos
movsb
mov
jmp
pushf
mov
push
xchg
jl
dec
and
cmp
jecxz
inc
xchg
sbb
cmp
xchg
loope
js
sbb
arpl
je
or
test
int3
scas
data16
mov
sub
jae
xchg
jno
insb
mov
adc
mov
in
shll
xchg
xor
outsl
mov
mov
push
inc
jno
push
jb
lea
andb
jmp
in
and
test
lods
xchg
mov
fcmove
mov
repnz
and
push
in
orb
out
sub
mov
pop
fildl
arpl
imul
jl
sbb
add
cwtl
push
cmpl
xchg
insb
orl
pop
inc
pop
in
in
out
out
fistl
out
add
outsl
lahf
mov
cmp
lds
dec
cmp
loopne
rorb
add
fsubrl
cmp
push
xchg
fcmove
vprotw
imul
jnp
popf
data16
sbb
cmpsb
adc
push
stos
sbb
sbb
xchg
inc
mov
mov
cltd
mov
daa
divl
test
loop
pop
shll
xlat
loope
int
push
lods
push
pop
adc
dec
push
in
xor
cs
or
daa
push
cmpb
xchg
inc
mov
and
xor
rolb
inc
mov
inc
push
stos
add
cmpsl
cmpl
push
dec
xor
lds
push
pop
pop
fsubr
push
cmpsb
stos
mov
testb
xchg
dec
lea
mov
outsb
js
insb
stos
stc
cmp
loop
jle
lods
xchg
outsl
sub
fmull
ss
addr16
in
ret
test
rorl
mov
cmp
jg
jg
cmp
push
xchg
dec
jge
xchg
xorb
push
jnp
cmp
and
test
cmp
push
aad
push
js
inc
mov
adc
rcrb
xchg
outsl
insb
mov
ljmp
ljmp
sub
pop
into
insb
loopne
lods
lahf
ror
push
insb
mov
stos
in
fisubs
dec
loop
mov
dec
sar
pop
fs
es
movsl
aas
mov
cs
daa
fucom
push
stc
call
ret
mov
push
jns
les
js
mov
or
ja
gs
adc
push
arpl
and
jg
movsl
pop
mov
mov
rorb
mov
lds
jb
mov
mov
pushf
push
insl
mov
or
adc
inc
dec
sbb
lods
stos
jne
ficoms
and
not
adc
cmp
mov
repz
ret
xor
xchg
fs
bound
movsb
mov
lcall
movb
shr
packuswb
and
mov
aad
and
xor
adc
push
inc
test
outsl
push
adc
push
xorl
add
cmp
int
jmp
mov
aaa
pop
fnstcw
je
lods
sbb
cmp
mov
mov
shrb
lods
push
and
inc
xchg
loop
mov
adc
in
lods
xchg
jp
xlat
sbb
scas
cmp
mov
in
xor
negl
jnp
lahf
mov
cwtl
out
test
push
test
scas
or
imull
sbb
xchg
mov
adcb
sbb
xor
loope
lds
add
call
adc
je
dec
in
mov
shrl
jne
jmp
dec
jne
cmpsl
test
cmp
cmp
ret
clc
pop
into
fdivrs
cmp
lods
imul
and
push
nop
xor
fadds
xchg
dec
int3
jns
cwtl
filds
ljmp
in
dec
outsl
mov
ret
xor
mov
sbb
loope
jno
jns
xchg
mov
adc
pusha
and
xor
xor
testl
lret
mov
and
xchg
sub
ja
leave
movsb
xchg
sbb
loope
inc
mov
int3
pop
in
lret
xchg
pop
int
and
pop
insl
xor
fidivl
shlb
jp
les
ret
outsl
xchg
ret
dec
mov
jge
cmp
or
jne
incl
mov
inc
cs
pop
int
xor
popa
cmp
fnsave
jne
sbb
inc
ffree
stc
fidivrl
jp
inc
adc
lret
mov
lock
test
jge
out
fildl
rcr
lds
xor
and
pop
mov
movsl
lods
rclb
push
jge
cmp
sbb
addb
int
sbb
inc
scas
sub
call
sub
int
in
inc
xchg
clc
mov
or
jne
je
in
fadds
stos
lahf
aam
lds
xchg
xor
stos
dec
das
xchg
xchg
mov
mov
in
orb
push
mov
daa
xor
xlat
fst
lret
stc
sahf
and
jbe
push
pop
ss
adc
mov
or
xchg
or
mov
aam
pop
adc
push
or
add
cmp
dec
stos
stos
fstpt
dec
aad
jle
dec
fisttpl
add
shll
xchg
sub
inc
mov
fidivs
into
lods
jle
xor
mov
scas
lret
xchg
into
test
enter
mov
insb
lea
dec
dec
inc
inc
add
cltd
cs
dec
and
sbb
sbb
aas
adc
jno
adc
nop
push
outsl
cmp
mov
push
pop
pusha
subb
in
imull
xor
mov
in
repnz
rcr
sbb
outsl
cmp
push
test
stos
cmp
cmpsb
mov
mov
pop
andb
scas
iret
jge
stc
mov
fs
lcall
fidivs
repz
xor
cmp
dec
add
mov
pop
sbb
ss
insb
jge
testl
dec
data16
call
cltd
out
fwait
ret
cmp
fdivrs
mov
adc
jno
movsl
div
cmovle
lods
dec
inc
ss
add
jmp
push
ret
inc
pop
out
xchg
and
mov
rorb
sbb
pop
in
mov
push
cltd
ds
pop
xchg
das
inc
leave
lds
shlb
xor
lods
aaa
lods
sbb
pop
adc
mov
int
aad
mov
mov
inc
mov
orl
test
cmp
pop
aaa
outsl
inc
les
enter
pop
insb
pushf
lods
inc
sub
imul
ret
mov
inc
into
and
pop
nop
pcmpgtd
stos
adc
stos
dec
xlat
mov
add
popl
cmp
push
mov
dec
sbb
sbb
inc
xor
call
out
pop
sbb
or
sbb
aas
sti
divl
movsb
outsb
adc
sub
or
mov
mov
jbe
sbb
cmpsl
into
pusha
cmp
dec
fstpl
in
stos
mov
push
std
and
decl
mov
add
stc
inc
push
stos
call
outsl
in
mov
insb
add
adcb
and
scas
es
dec
dec
cmp
sbb
into
dec
lods
push
sbb
jno
fsubs
xor
xchg
pushf
mov
push
push
lods
or
iret
scas
hlt
iret
sbb
pushf
push
test
dec
or
xchg
adc
sbb
andl
aaa
test
pop
addr16
jecxz
ficompl
lods
sahf
inc
aaa
addr16
fstl
mov
rcll
fmuls
ret
pop
dec
lret
and
push
mov
xor
insb
mov
sarl
sahf
in
movsb
jnp
sub
xchg
daa
pop
pop
repz
leave
enter
iret
jle
stos
outsl
cmpsb
int3
in
stc
shlb
inc
in
sahf
fnsave
mov
jmp
cmp
pop
in
cld
jmp
mov
scas
mov
je
mov
stos
add
jl
test
pusha
out
test
sbb
or
push
lds
cmp
cmp
loope
fwait
pop
mov
fistpl
int3
xor
outsb
dec
cmpsw
adc
das
add
cmp
cld
movsb
fucomi
cmp
sbb
pop
in
push
mov
push
pop
clc
in
inc
mov
movl
cmp
sar
or
pushf
stos
into
cmp
mov
cmp
mov
testb
andb
adcb
xchg
aam
xchg
loopne
ja
lcall
mov
add
fldt
roll
push
movl
xor
roll
cmp
sarl
and
push
xchg
fistpl
out
push
pop
cmpsl
cwtl
mov
pop
fwait
push
xor
pop
int
add
xchg
mov
sbb
lahf
mov
xchg
addb
push
mov
mov
xchg
dec
js
inc
fwait
or
inc
fwait
dec
mov
mov
test
pop
stos
adc
pushf
xchg
pusha
jge
addb
arpl
add
cmp
pushl
daa
rcll
fcmovbe
iret
inc
xchg
ret
or
fwait
movsb
int
adc
mov
jns
pop
and
sbb
rcrb
ror
dec
loope
roll
adc
aad
mov
sahf
sub
jp
dec
inc
stos
or
int
jbe
lds
pushf
pop
push
gs
pop
ljmp
popa
mov
roll
cmc
cmpsb
lds
shr
jo
jecxz
mov
cs
push
leave
inc
inc
pop
test
test
cmp
lea
out
aam
pop
in
mov
mov
adc
test
iret
lods
jns
or
xchg
out
xor
push
ss
enter
into
stc
aam
cmp
jp
in
daa
stos
lret
jmp
lret
add
ret
cmp
dec
dec
sbb
jae
pop
sbb
in
cltd
mov
mov
test
jbe
mov
push
add
cmp
scas
in
fcomps
fs
adc
mov
xorb
insb
aad
xchg
je
insb
cmp
pop
in
add
cmpsl
mov
push
mov
mov
shrl
xor
and
cmp
lods
inc
sbb
rcrl
pop
pop
incl
mov
inc
lods
insl
pop
and
jmp
ss
sbb
cmp
sbb
js
jbe
shlb
in
push
jbe
jp
negl
push
xchg
inc
cmpb
push
inc
aad
xchg
pop
push
adc
idivb
push
stc
mov
pop
int
dec
inc
popf
mov
mov
sub
sbb
icebp
inc
jne
dec
loope
adc
das
fldenv
fdivr
dec
xchg
nop
das
push
mov
mov
or
push
test
lock
adc
mov
dec
xor
sbb
pop
aaa
mov
movsb
push
inc
aas
dec
lahf
ds
ss
xchg
pusha
xor
xchg
jns
icebp
fidivrs
mov
bound
aad
dec
push
orl
mov
inc
clc
pusha
stc
xor
cmp
pop
pop
dec
cmp
fimull
test
dec
sahf
mov
jge
adc
nop
jo
cmp
mov
mov
int
icebp
jne
inc
pusha
dec
es
cmpsb
dec
xlat
jp
cmp
mov
add
inc
and
int3
add
mov
jp
fisubrs
fnstsw
pushf
xchg
test
lret
leave
rcrl
mov
adc
cmp
xchg
repnz
vpmulhw
andb
outsl
sarb
cmp
int3
test
loope
outsb
popa
mov
dec
dec
sbb
les
insl
mov
je
dec
mov
sbb
jg
sub
lahf
aas
dec
stos
mov
insl
fadds
insb
mov
pusha
es
mov
cs
ret
fwait
sub
hlt
mov
pusha
mov
iret
mov
loopne
add
mov
lods
push
push
jnp
insb
les
lods
mov
mov
ljmp
mov
dec
or
cmpb
push
outsb
and
adc
inc
test
popf
xor
iret
test
adc
or
scas
sbb
mov
out
dec
leave
sub
lcall
xor
xchg
subb
test
xor
jne
mov
push
ffree
icebp
paddsw
and
ss
test
mov
jmp
ds
fadds
aad
out
or
jle
mov
xchg
sarb
icebp
mov
cmp
pop
inc
cmpsl
test
call
cmpl
xchg
lods
push
mov
cmp
repnz
sbb
cs
int
jg
test
jae
jns
insb
addr16
fs
scas
mov
call
lret
dec
subb
lea
adc
add
pop
mov
jne
mov
pushf
and
pop
insb
shll
pop
sti
cmp
fbstp
jns
push
fdivl
fsubl
and
push
dec
rcl
mov
insl
inc
scas
test
dec
in
call
mov
mov
xchg
jge
sub
psubsw
aam
ss
cmp
jne
jae
out
leave
xor
sbb
xor
mov
pop
imulb
outsb
mov
dec
fisubl
cmp
pop
or
mov
jg
xorl
push
fmuls
inc
lret
fwait
and
insb
inc
nop
pop
dec
out
xchg
sbb
or
arpl
addr16
fldt
scas
sub
add
rcrb
pop
aam
rorb
add
mov
mov
jl
mov
testl
push
sbb
sbb
test
push
sbb
dec
stos
arpl
mov
nop
lcall
xor
jnp
sub
dec
xchg
cwtl
jns
xchg
xor
dec
das
add
jbe
pushf
inc
pop
incl
fscale
iret
inc
push
pop
xchg
shlb
xchg
nop
fsubr
out
iret
adc
popf
push
mov
insl
sub
mulb
jp
popf
or
imul
xchg
mov
aas
in
ret
and
ret
nop
mov
jno
leave
pop
lret
jl
je
mov
cmp
push
test
adc
mov
into
xor
lock
loope
mov
fwait
lds
push
add
mov
pop
movsl
push
mov
mov
jl
push
fcom
call
add
ds
out
vpmullw
and
xchg
pop
stos
mov
lds
test
jg
pop
rolb
fs
fs
lahf
dec
push
loopne
xchg
shlb
mov
adc
mov
int3
lods
aam
popa
insb
lahf
arpl
in
sub
lret
js
push
jns
mov
xchg
popa
icebp
add
jecxz
stos
push
mov
subl
fs
xchg
adc
sahf
frstor
mov
aad
cmp
inc
stos
shlb
rcr
and
jae
lods
mov
les
mov
out
adcl
fbld
insb
aaa
in
or
dec
inc
mov
mov
jns
push
jmp
in
xchg
mov
and
test
xchg
std
push
test
inc
inc
gs
inc
loope
fidivs
mov
mov
mov
adc
into
jge
lret
mov
xor
aad
xchg
out
add
mov
cmp
push
in
cltd
int
or
and
loope
xchg
out
pop
xor
int3
repz
sub
xor
test
or
loop
inc
rorb
stc
lcall
mov
inc
pop
jae
pop
in
popf
inc
push
mov
mov
push
pushf
push
dec
pusha
shll
into
jg
and
sbb
cli
sbb
inc
insb
divl
dec
fxch
inc
or
call
loope
and
push
jge
xorb
addr16
mov
in
je
mov
notb
aad
sbb
mov
dec
loope
fwait
mov
insb
adc
sub
cmp
fnstsw
add
add
jg
jmp
test
inc
or
sbb
divb
push
fstsw
ss
out
push
js
xchg
push
es
mov
sbb
xchg
sahf
xchg
mov
xor
in
aad
and
xchg
int3
loop
add
jbe
aad
inc
cmpsb
fwait
mov
rolb
adc
adc
sbb
mov
orl
jbe
icebp
dec
popf
mov
je
in
jp
int3
adc
rcl
fwait
inc
sti
sbb
outsl
xchg
inc
jb
mov
out
inc
cmp
test
xor
sbb
lcall
out
scas
mov
mov
ret
lret
addb
loope
aad
loope
lds
jo
mov
cmp
mov
push
and
dec
pop
lods
lret
ret
clc
sarl
mov
adc
push
ljmp
mov
lret
jge
ja
inc
aam
adc
jg
xchg
cmpsl
sbb
jae
inc
push
pusha
sbb
fs
xchg
dec
cwtl
cmpsb
into
scas
xchg
jnp
subl
in
sbb
mov
mov
mov
ss
imul
mov
xor
mov
ss
movsb
aaa
cmp
xchg
das
mov
mov
rcrl
mov
sahf
std
sarb
xlat
sti
in
lea
clc
ret
sbb
out
lea
xchg
loopne
cmp
push
sahf
fwait
push
sbb
push
jbe
enter
cmc
mull
gs
loop
fstpt
mov
inc
xlat
lea
pop
cld
push
jecxz
aas
pop
add
aam
shll
fs
fwait
jns
pop
ja
and
jns
add
mov
fdivrs
lods
push
adc
loopne
jnp,pt
push
pushf
inc
mov
sahf
push
or
clc
out
shl
mov
cmp
and
xlat
add
push
shrb
jecxz
cli
out
and
cmpsl
sub
iret
mov
jb
les
pand
cs
aad
mov
jae
aas
inc
cltd
inc
jae
movl
add
aaa
adc
js
xlat
add
arpl
addr16
imul
mov
insb
es
mov
add
xchg
fwait
iret
adc
xchg
jmp
or
jnp
xlat
imul
mov
lock
enter
rcll
fdivl
mov
sub
sbb
shrb
xchg
pop
or
dec
les
loopne
pop
pop
add
mov
mov
xor
dec
pop
sarb
and
aas
cwtl
pop
das
cmp
add
xchg
mov
scas
jns
test
inc
loopne
inc
jp
ljmp
sti
pop
out
nop
push
notl
and
xchg
mov
and
add
mov
jno
xlat
mov
cmpsl
mov
cmpl
shl
gs
inc
sbb
mov
imul
push
jmp
pusha
jmp
call
pusha
movw
lea
je
cmp
cmp
pusha
lea
jne
pusha
call
and
sub
xchg
xor
andl
jns
sbb
lcall
pop
inc
add
sbb
mov
xlat
imul
jmp
jle
mov
jo
inc
or
rcrl
sbb
jno
xorb
jne
ljmp
pop
mov
scas
repz
pop
add
leave
call
lahf
mov
not
pop
bswap
pusha
pushf
movzbw
mov
movsbl
sets
mov
pushl
mov
call
call
lea
jae
not
push
mov
jmp
add
bt
bt
pusha
cmp
push
pushf
pushf
jmp
sbb
divb
mov
xor
pop
lock
mov
stos
test
fsubrp
lcall
xor
mov
push
psubusw
js
or
mov
ss
dec
push
lret
push
mov
outsl
fdivrl
ret
and
sbb
pop
imul
call
mov
int
push
jg
aas
outsb
pop
push
call
push
shll
and
inc
nop
push
push
enter
push
adc
jbe
cmp
adc
out
lret
pop
bound
jnp
pop
ffreep
dec
pop
xchg
ja
add
add
fs
jae
inc
pusha
mov
rcl
mov
bsr
setle
mov
pushf
xor
pusha
cmc
repnz
push
push
push
call
lea
call
pushf
pushf
lea
jg
push
lea
jae
push
xchg
mov
jmp
pushf
pusha
pusha
call
cmp
mov
dec
cmp
jb
lret
outsl
dec
inc
loope
jecxz
push
mov
inc
scas
xor
mov
mov
cmp
call
xchg
incb
movsl
cmp
int3
lods
push
lgs
push
xchg
sbb
or
in
loopne
jno
mov
jp
clc
fs
pop
cmp
test
loope
shl
bound
xchg
aad
mov
lods
inc
jg
nop
out
push
or
out
prefetch
jl
mov
pop
loope
push
int3
lret
jno
popa
hlt
scas
insb
popf
add
dec
ret
or
lock
jb
push
rorl
xor
lcall
push
int
inc
in
dec
jl
imul
jle
and
movsl
int
call
movsl
dec
cmp
jg
mov
imul
pushf
mov
push
jae
pop
int3
int
add
sub
and
movsl
pop
mov
inc
mov
out
icebp
arpl
adc
incl
roll
sti
pop
fisttpll
jnp
xchg
sbb
bnd
pop
jle
dec
jbe
in
sbb
add
and
outsl
imul
test
sub
int
das
rorl
in
in
inc
jle
js
push
fs
in
imul
add
ficomps
jb
mov
stos
xchg
fldt
and
and
add
and
or
hlt
xor
stos
in
pusha
into
lahf
mov
mov
popa
ljmp
imul
icebp
cli
scas
loope
outsb
add
push
inc
sub
fmuls
lcall
mov
push
adc
shrb
arpl
sbb
loope
jnp
lods
je
rclb
shrb
push
fimuls
xchg
xchg
shll
jne
movsbw
mov
pushf
pushf
lea
jmp
lea
jb
pusha
cmp
pushf
pushf
jmp
clc
cmp
jmp
lea
ja
call
mov
sarl
cmp
push
gs
lcall
in
xor
xor
add
mov
sub
in
inc
push
cmc
xchg
mov
fdivrp
push
nop
dec
insb
jno
enter
dec
xor
insb
dec
enter
addb
es
add
mov
mov
dec
pop
rolb
ficoml
mov
jg
popa
rcrl
cmpsb
imul
inc
sub
add
mov
xor
stos
pop
jg,pt
fbld
jno
mov
or
xchg
repnz
jmp
mov
aaa
adc
das
add
mov
popa
rorl
mov
test
enter
pusha
insl
add
push
stos
pop
out
adc
cmp
sbb
ss
mulb
es
dec
jae
fisttps
mov
orl
mov
add
cmc
call
lea
jb
test
clc
test
cmpb
call
sub
movsbw
bt
jmp
cmp
or
jmp
jmp
pusha
or
jmp
stc
push
cmc
rol
pushl
call
call
pusha
movl
pushf
push
mov
mov
pushl
ret
call
pushf
jmp
fstpt
adc
addr16
add
aad
lods
shll
in
pop
ret
adc
or
push
idivl
fdivs
xor
or
adc
cmp
xlat
fiaddl
sub
lret
iret
in
mov
mull
sub
out
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
bt
pushf
shl
pushf
lods
jmp
pusha
pushf
inc
lea
push
movb
push
lea
call
jmp
lea
je
cmp
dec
sub
shl
add
mov
bsr
cmc
sub
mov
btr
not
lea
shr
and
neg
rcr
dec
mov
sar
movsbw
shr
add
pusha
dec
shr
add
add
lea
btc
mov
cmc
pusha
stc
shr
mov
bt
mov
stc
cmp
jmp
cmp
shll
les
cmp
dec
pop
adc
mov
mov
jbe
fldl
roll
mov
mov
cld
adc
pop
add
push
subb
cmp
jae
jmp
daa
hlt
or
xor
dec
je
jle
div
ds
xchg
inc
push
adc
out
and
pop
lea
test
incl
sbb
ljmp
and
movb
lea
call
jmp
pushf
movl
mov
lea
jmp
lea
jge
pushf
push
movl
push
pushl
movl
pusha
pushf
pushf
lea
jmp
mov
movl
lea
jne
pusha
pusha
movl
mov
pushf
lea
jmp
clc
test
call
mov
cmp
mov
push
mov
lea
ja
ror
call
jo
jno
popa
shrl
jmp
pop
jo
mov
push
pop
cltd
adc
jmp
fiaddl
push
lcall
jne
and
sbb
mov
cmpsl
adc
ja
or
pop
into
jb
ljmp
push
adc
movsb
loopne
pop
cli
rolb
inc
sub
std
std
into
and
push
jmp
add
test
out
pop
enter
ret
push
out
sbb
cld
dec
fwait
cmp
mov
lea
clc
pop
cmc
inc
sub
xor
xorb
cltd
subb
stc
cmp
lret
cmp
popa
cmpsb
adc
pop
fwait
xlat
pop
gs
add
int3
sbb
lret
test
cmp
lods
and
add
rcll
xor
and
jp
mov
movzbw
pushf
movzbl
jmp
push
call
lods
call
adc
pusha
shl
add
mov
bt
cmp
jmp
pushf
mov
push
mov
lods
call
mov
stc
pushf
add
cmc
cmc
movzwl
add
and
lea
btr
call
pushl
bt
add
call
pushl
pusha
jmp
sub
or
in
stos
and
adc
mov
and
xorb
xor
imul
int3
es
inc
jns
out
jge
jge
add
cmc
push
repz
pushf
mov
add
push
movb
jmp
pushl
movb
bswap
pushf
pushl
mov
movzbw
lea
pushf
movl
jmp
inc
pop
mov
mov
daa
jo
inc
rdmsr
jp
out
pop
xor
cmp
cmpsb
xor
add
iret
or
fcomi
adc
mov
shll
pushw
in
mov
mov
jnp
pusha
inc
cmc
inc
std
cld
xor
movl
sbb
cmp
aaa
jo
mov
fcmovnu
push
ljmp
push
dec
inc
cmp
inc
mov
jb
add
cmp
pop
add
pop
inc
push
push
out
outsb
sub
lret
fstpt
roll
aam
pushf
sub
sti
adcb
orb
dec
xchg
push
idivb
push
popf
rcrb
jno
jmp
jmp
mov
pop
jno
mov
sub
or
into
sti
mov
mov
mov
dec
xor
xor
or
and
mov
pushl
push
movb
pushl
ret
pushl
popl
jmp
not
xor
ja
movzbl
stc
add
clc
jmp
pushf
pushf
popl
call
pushf
popl
pop
mov
push
not
not
not
mov
movzbw
pop
pushl
popl
movzbw
pop
mov
push
pusha
mov
movb
pushl
pushf
lea
jmp
sar
rol
add
not
not
xor
cmc
movzbl
shld
movsbl
btr
mov
stc
bt
clc
xor
test
cmp
add
mov
jmp
pushf
popl
lea
movsbw
mov
mov
mov
mov
mov
pusha
movzbl
pushl
pushl
popl
call
pusha
mov
jmp
add
pusha
mov
jmp
mov
jmp
or
bt
mov
rcr
push
and
mov
cmc
sub
jmp
push
mov
push
pushl
pushf
lea
jmp
pusha
mov
pushl
pushf
movb
pushl
lea
jmp
add
jbe
not
cmc
jmp
sbb
sub
neg
mov
stc
sub
shrd
mov
cmp
mov
bt
jg
add
call
shl
rcr
mov
btr
btr
mov
jb
stc
cmc
pushf
add
call
seto
mov
and
pusha
shl
not
mov
pusha
pushf
sub
jae
add
pusha
mov
call
jmp
xor
mov
sub
add
cmp
btc
neg
shld
xor
stc
sar
mov
cmc
stc
cmp
pusha
shl
call
pushf
call
pushf
clc
and
mov
pushf
popl
pushf
mov
pushl
popl
pushl
push
lea
jmp
push
test
add
stc
pushf
stc
rol
call
sub
jmp
inc
call
pushf
add
call
pushf
pusha
movl
mov
jmp
mov
pushf
mov
jmp
call
movb
xor
movb
cmc
stc
ror
clc
jmp
push
pushf
mov
call
mov
movw
mov
pop
lea
mov
lea
push
movw
bswap
pushf
popl
lea
pushf
not
mov
pop
jmp
cmp
pusha
pushl
popl
cmp
jmp
jmp
jmp
jmp
mov
lea
pushf
popl
jmp
jmp
jmp
and
mov
call
call
jmp
mov
call
push
call
push
sub
jmp
pushl
popl
movl
mov
lea
jmp
shrd
btr
daa
rcr
mov
shl
cmp
stc
mov
test
call
lea
jle
mov
push
lea
jmp
mov
movb
clc
stc
stc
pushl
popf
push
lea
jmp
pusha
mov
mov
call
rcr
shl
adc
pushf
mov
neg
bsr
add
jbe
mov
test
push
not
pusha
cmc
not
cmp
movb
sub
bt
mov
call
add
add
mov
call
mov
jmp
push
clc
cmp
add
clc
shrd
jmp
push
mov
call
jmp
call
sub
test
movzww
pushf
add
jmp
lea
jne
stc
push
sub
call
cmp
pushf
add
push
pusha
push
movb
mov
pushf
lea
jmp
rdtsc
daa
pusha
add
mov
lea
or
mov
call
inc
rcr
rcr
rcl
mov
stc
call
pusha
call
mov
movsbw
pushl
popl
push
not
call
pushl
popl
mov
pusha
lea
jmp
push
bt
cmc
sub
cmc
call
bt
clc
add
jns
pushf
jmp
std
push
cld
mov
movsbl
push
std
lea
cld
mov
push
mov
pushl
cld
pushf
call
mov
movw
pushl
lea
jmp
mov
pushf
lea
jae
pushf
jmp
mov
pushf
lea
jmp
cmc
mov
call
mov
pushf
mov
lea
jmp
pusha
pop
movzbl
movw
mov
pushf
mov
jmp
mov
xchg
pushl
mov
push
not
mov
mov
mov
pushf
movzbw
jmp
pusha
pushl
pushl
mov
push
jmp
cbtw
pusha
pushf
bt
pushf
cwtl
test
jmp
dec
pusha
cmc
pushf
cmp
not
bt
bt
test
push
sub
pushf
cmp
pushf
jmp
shrd
jmp
mov
pushf
jmp
stc
xchg
cmc
clc
pushl
movb
add
clc
pushf
cmp
add
jmp
jmp
jmp
movsbl
pusha
pushf
popl
movzbw
mov
inc
pushl
bswap
xchg
mov
pushl
popl
jmp
pusha
mov
mov
pushf
popl
mov
pushl
popl
mov
lea
jmp
push
mov
pushl
popl
movw
push
pushf
lea
jmp
call
pushf
mov
lea
je
call
push
sub
pushf
pusha
push
call
mov
pushf
lea
jmp
pusha
pusha
pushf
call
lea
mov
pushf
pushf
pushl
pushf
lea
jmp
rol
cmc
bt
rcl
add
jmp
pushf
lea
jns
mov
pusha
push
lea
jmp
add
jmp
stc
pushf
add
jmp
not
mov
mov
lea
bswap
mov
jmp
mov
pushf
push
pushl
push
lea
jmp
mov
push
movb
movb
pushf
lea
jmp
pusha
cwtl
jmp
pusha
mov
pusha
pushf
not
pushf
mov
pushl
mov
bswap
not
pushf
lea
pushf
popl
mov
lea
mov
movzbw
push
pushl
mov
bswap
call
call
add
jmp
pushf
pushf
pushf
popl
push
pushf
pushl
popl
push
lea
jmp
test
movzbl
pusha
stc
mov
add
mov
call
clc
pusha
shl
pusha
mov
call
cmc
bt
pushl
popf
pushf
lea
jmp
mov
push
pushl
lea
jmp
jmp
mov
movsbw
push
lea
mov
lea
jns
movsbw
not
push
mov
pusha
pushl
ret
not
mov
rol
mov
stc
add
clc
jmp
pop
mov
pushf
lea
jmp
add
jmp
mov
bswap
mov
pushf
lea
movsbl
pop
pushf
popl
pop
call
lea
movsbw
pop
pushl
not
jmp
mov
jmp
pushl
pushf
popl
movzbw
jmp
pusha
movsbw
mov
not
xchg
xchg
sete
pushl
popl
mov
movzbw
lea
setbe
movl
bswap
pop
xchg
call
mov
call
mov
jmp
pushf
setbe
movl
not
pushf
lea
mov
jmp
push
call
mov
pusha
jmp
test
jmp
movsbw
movl
movzbw
pushf
mov
pushf
mov
pushl
movb
lea
jmp
mov
pusha
mov
mov
pushf
push
pushf
jmp
cmp
sar
bswap
sub
movzbl
bt
shld
add
movzbw
movsbw
rcr
rol
stc
not
bswap
ror
shld
rol
add
cmc
rol
add
test
neg
mov
cmp
clc
stc
pusha
add
jmp
call
and
pushf
call
mov
xchg
pusha
mov
movsbw
pushf
popl
jmp
push
pushf
lea
jp
movzbw
mov
push
jmp
mov
push
pushf
xchg
pop
jmp
not
mov
call
jmp
mov
call
mov
not
mov
movsbw
pop
pushf
popl
bswap
bswap
mov
movsbw
mov
call
shld
mov
add
clc
inc
mov
pushf
call
movl
pusha
call
mov
inc
stc
or
call
pusha
sub
bt
cmp
add
bt
bt
bt
sub
pushf
call
dec
dec
bswap
dec
rol
bt
stc
lea
neg
pusha
mov
ror
lea
mov
cmc
lea
cmp
rcl
xadd
pusha
sub
movzbl
sub
pusha
sub
lea
lea
bts
mov
bsf
btr
call
aam
dec
mov
jmp
xchg
call
push
mov
pusha
pushf
pushf
lea
mov
call
bt
clc
ror
bt
jmp
test
mov
bt
mov
pushf
test
sub
call
pusha
pushl
push
mov
pushf
push
call
or
or
mov
call
lea
setb
mov
call
call
std
cld
cld
call
add
test
shld
call
aad
aaa
mov
adc
rol
mov
cmc
cmp
pushf
add
pusha
pushl
mov
push
mov
pushf
push
lea
jmp
push
pushf
dec
call
sar
adc
sbb
neg
mov
stc
clc
push
cmc
add
jmp
mov
push
mov
pushf
lea
jmp
mov
pusha
pushf
pushf
pushf
lea
jmp
movl
movsbw
lea
mov
movsbw
mov
pushl
mov
pushf
pushl
lea
jmp
pusha
jmp
movb
pushf
popl
pushl
pushl
jmp
pushl
popl
pop
pop
jmp
cmc
xor
bt
push
pusha
jmp
xchg
pop
movsbw
mov
movw
mov
pusha
movsbl
lea
mov
call
rol
movzbw
pushf
shl
mov
mov
jmp
mov
lea
jmp
movzbw
xchg
push
pushf
call
pushf
lea
jne
ror
xorb
not
not
pushf
mov
push
lea
jmp
pushf
pushf
pushl
popl
pusha
pushf
mov
push
lea
jmp
clc
not
bt
ror
bt
add
pushl
stc
mov
cmc
cmp
test
sub
pushf
jmp
xchg
aad
shrd
rcr
mov
shl
pop
rcr
pop
inc
aaa
pop
aam
and
pop
shrd
bts
cmp
setae
popf
xchg
rdtsc
push
mov
bswap
mov
movzbw
jmp
clc
cmc
cmc
sub
jmp
pushf
popl
mov
pushl
popl
pushf
push
lea
jmp
pushf
movl
movl
pushf
mov
jmp
aaa
mov
shl
dec
inc
jmp
pushf
mov
push
pusha
pushl
mov
pushf
movb
pushf
mov
call
mov
movsbw
pushf
movzbl
pushl
popl
pushf
movsbw
pop
movzbl
movl
bswap
call
jmp
stc
btr
mov
pusha
bt
add
call
jmp
call
call
not
pushf
popl
movzbw
jmp
mov
pushf
push
push
pushf
lea
jmp
jmp
sub
movb
cmp
bt
shr
pushf
pushf
pusha
push
mov
push
jmp
shl
mov
lea
add
setl
dec
ror
cmc
not
adc
sub
test
sar
add
not
call
movsbw
jmp
push
lea
ja
push
add
mov
sbb
lea
shld
lea
rol
sub
daa
daa
lea
adc
pusha
pusha
xor
and
sbb
bt
sub
push
mov
call
mov
movb
mov
movb
pusha
lea
jmp
clc
clc
xor
clc
xchg
movb
sub
mov
bt
add
stc
add
cmp
cwtl
stc
sub
push
movw
mov
push
push
lea
jmp
cld
pushf
jmp
bswap
mov
movsbw
setle
mov
push
lea
mov
jmp
pusha
pushf
add
mov
mov
movb
pushf
movw
lea
jmp
movl
push
mov
pushf
lea
jmp
not
movl
lea
mov
pushl
movl
pushf
push
lea
jmp
mov
mov
pushf
pushl
movb
pushf
pushl
ret
push
mov
pushl
bswap
pop
pushf
popl
pushf
mov
mov
mov
mov
movzbw
pushl
popl
movzbw
pushl
lea
call
pushf
pushf
movb
decl
pushl
call
call
jl
pusha
lea
mov
pushf
mov
jmp
pusha
mov
pushf
mov
mov
lea
jmp
pushl
popl
push
pushl
movb
mov
lea
jmp
bt
sub
jmp
jmp
sbb
bt
and
sar
call
rep
bt
bts
mov
add
ror
mov
cmc
pushf
test
pushl
popf
pushf
pusha
pushf
mov
lea
jmp
call
clc
clc
shrd
lea
cmc
pushf
cmp
call
jmp
call
sar
btr
or
mov
cmp
xor
cmp
ror
add
pusha
pushf
not
call
mov
mov
movb
movw
lea
jmp
test
test
bt
sub
push
push
mov
movw
pushf
push
pushf
lea
jmp
pusha
jmp
call
pushf
popl
pushf
call
pushf
mov
pushf
add
push
not
mov
pusha
jmp
not
mov
pusha
movsbl
mov
call
push
pushl
popl
pusha
pushf
pushf
lea
jmp
jmp
pushf
popl
lea
jae
popl
pusha
lea
jmp
lea
rcr
sub
shl
shr
mov
bsf
shr
clc
mov
bts
xor
add
sub
xchg
shld
movsbw
mov
shld
inc
xor
bswap
sub
rcl
ror
bswap
neg
call
cwtl
cmp
test
jmp
lea
jp
pusha
dec
cmc
call
jmp
pushf
jmp
mov
mov
movb
pushf
pushf
pushf
mov
pushf
movb
movb
lea
jne
not
test
call
jmp
add
pushf
pushf
pushf
pushl
lea
jmp
pushf
mov
push
jmp
mov
pusha
push
pushf
push
lea
jmp
pushf
popl
call
push
mov
jmp
jmp
pusha
mov
pusha
pushl
mov
push
lea
jmp
popl
pushf
mov
push
movw
lea
jmp
mov
jmp
mov
jmp
mov
mov
lea
jmp
sub
clc
cmp
test
shr
call
call
pushf
pushl
popl
push
lea
jmp
pushf
stc
sub
jmp
movl
pusha
mov
push
mov
push
movl
mov
call
daa
stc
movsbw
neg
mov
jmp
pushf
mov
pusha
pushl
pushl
ret
push
pushl
popl
mov
movl
lea
jmp
push
add
jmp
movb
mov
push
mov
pushf
movw
call
clc
clc
add
pushf
cmc
pushl
cbtw
call
sbb
movsbw
btr
notl
mov
test
bsf
mov
call
adc
and
stc
pusha
mov
stc
pushf
pusha
xor
cmc
clc
stc
bt
not
jmp
mov
call
call
mov
sub
rcl
jmp
add
jo
add
jmp
add
cmp
jmp
push
xor
jmp
pushf
cmp
shr
pushf
push
pushf
mov
call
cmc
shr
mov
or
mov
push
push
cmc
xor
call
mov
mov
pushf
mov
lea
jmp
pusha
lea
jge
pushf
pusha
pushl
popl
push
movw
lea
jmp
pushf
lea
jne
pushf
jmp
pushf
mov
not
movzbl
call
push
mov
push
mov
pushf
pusha
xchg
pushf
mov
push
mov
pop
jmp
mov
mov
jmp
pushf
movb
pushl
popl
pusha
lea
jmp
pusha
pusha
add
mov
movw
pushf
pushf
popl
push
pushl
popl
pushl
mov
mov
movl
lea
jmp
cmc
bts
movzbl
clc
cmp
dec
shr
lea
or
clc
bswap
mov
xor
movsbw
rcr
not
pushf
adc
setb
xor
stc
bts
ror
or
or
cmp
shr
xor
adc
pushf
mov
pusha
mov
cmc
add
push
call
shr
mov
push
not
test
stc
stc
not
bt
cmp
cmp
and
pushf
pusha
call
jmp
pusha
pushf
add
push
push
mov
pushf
pushf
push
lea
jmp
push
cmc
sub
jmp
jmp
pushf
mov
pushf
jmp
pushf
call
shl
jmp
mov
pusha
mov
lea
jmp
btr
mov
rcr
mov
pushf
sub
bt
cmp
pushf
shl
pushf
mov
pusha
pushf
popl
push
pushl
popl
push
push
pushf
lea
jmp
test
test
add
jmp
pushf
pushl
pushf
popl
lea
jo
push
pusha
pushl
popl
mov
pushl
mov
pushf
lea
jmp
movl
lea
not
bswap
mov
push
mov
lea
jmp
not
call
lea
mov
pushf
bswap
mov
pusha
bswap
pushl
movsbw
pushl
popl
mov
movzbl
pushl
movl
pushf
pushf
call
jmp
mov
push
xchg
movzbw
bswap
movzbw
mov
mov
push
mov
mov
push
not
movzbl
mov
pushf
movsbw
jmp
movl
mov
movsbw
movsbw
mov
pushf
lea
jmp
pushf
pushf
popl
pushl
pushf
pushl
popl
push
pushf
lea
jmp
pusha
pushl
popl
push
jmp
pusha
pushf
inc
call
mov
push
pusha
pushf
mov
pushf
push
mov
pushf
mov
jmp
bswap
not
mov
not
movsbw
not
mov
pushl
popl
pusha
pushf
not
not
movl
call
clc
sub
stc
test
cmp
pushf
add
pushf
bt
call
mov
pushl
mov
lea
jmp
push
jmp
push
pushl
popl
pusha
movb
lea
jmp
pushl
popl
mov
pushf
mov
pushl
lea
jmp
push
pushf
popl
call
movb
xchg
call
push
mov
jmp
stc
not
pushf
clc
call
add
clc
jmp
cmp
bt
add
movb
jmp
movsbl
movl
mov
not
mov
pop
mov
pushf
pushf
push
lea
jmp
lea
jo
push
pusha
pushl
popl
mov
push
push
mov
lea
jmp
pushl
popl
push
push
pusha
lea
jmp
mov
mov
pushf
lea
jmp
stc
sub
xor
movzbl
test
test
pusha
add
movw
add
jmp
call
call
mov
mov
push
pushf
movb
pushf
pushf
popl
push
call
cmp
lea
je
jne
sar
xorb
pushf
mov
mov
mov
pusha
push
lea
jmp
mov
pushf
pushf
movb
lea
jmp
seto
ror
mov
stc
jle
sub
push
add
pushf
push
pushf
push
pushf
popl
jmp
jmp
push
call
pushl
push
mov
jmp
push
pushf
mov
jmp
call
sub
pusha
jmp
push
jmp
cmc
cmp
sub
jmp
mov
pusha
bswap
mov
push
pushl
pushl
popl
call
mov
mov
pushf
pushf
lea
jmp
stc
sub
bt
jmp
pusha
push
pushl
popl
pushf
lea
jmp
movb
push
movw
mov
pushl
push
lea
jmp
push
pushf
popl
push
jmp
pusha
mov
pushf
pushf
push
movb
lea
jmp
movb
movw
divl
call
add
pushf
add
test
stc
jmp
cmc
mov
shl
jmp
bswap
mov
aam
mov
pusha
add
pushf
pushf
call
push
lea
call
rep
ror
pushf
sub
ror
mov
xor
shr
mov
clc
stc
pushl
popf
push
movl
mov
movw
lea
jmp
cmp
xor
pusha
pusha
mov
dec
jmp
jmp
add
mov
not
bt
mov
clc
call
clc
sub
lea
jns
cmp
and
jns
pushf
push
pushf
pushf
popl
movw
jmp
call
pushf
setnp
mov
movb
mov
mov
mov
pushf
pushf
mov
pusha
pushf
pushf
lea
jmp
push
pushl
popl
pusha
push
lea
jmp
pushf
push
mov
movzbw
mov
bswap
mov
movzbl
not
lea
push
mov
not
movzbw
movzbw
jmp
call
clc
rol
shr
pusha
add
lea
and
inc
mov
push
movw
pushf
sub
call
jl
push
mov
movzbw
push
setge
push
mov
jmp
test
stc
sub
call
mov
movb
call
movsbl
bsr
mov
cmp
add
pushf
pushf
mov
push
lea
jmp
add
pusha
mov
dec
pusha
not
push
movb
sub
bt
clc
add
pushf
pushf
sub
pushl
call
pushf
call
mov
movw
add
jge
cmp
bt
sub
cmc
jmp
rcr
sbb
rcr
cmp
mov
or
xor
mov
test
test
jbe
sub
push
clc
shr
movb
call
not
pusha
cmp
sub
cmc
clc
and
pushl
pushf
mov
pushf
pushf
popl
mov
push
call
pusha
rep
rcr
xor
mov
stc
and
jmp
pushf
bt
add
jmp
pusha
pushf
popl
jmp
pushf
lea
mov
pusha
mov
pusha
pushl
jmp
bswap
mov
not
mov
pushl
call
sbb
mov
fmull
mov
fcoml
mov
fcoml
mov
fsub
xor
fdiv
sub
fsubr
push
mov
fmull
mov
fmull
add
faddl
xor
fsub
xor
fsubrl
mov
fmull
mov
fmull
pop
mov
fdivl
mov
faddl
mov
fdivrl
mov
fmull
add
fcoml
mov
fdiv
sub
faddl
mov
fsubr
push
mov
fsubl
fdivrl
mov
fcoml
mov
fsubrl
xor
fsub
xor
fcoml
mov
fmull
adc
mov
fmull
mov
faddl
mov
faddl
mov
fsubl
fcoml
pop
mov
faddl
mov
fsubl
cmp
fsubr
push
mov
fcoml
pop
mov
fdivrl
mov
fdivl
mov
fcompl
pop
mov
fcoml
mov
fadd
add
fmull
xor
fmull
sub
fsubl
fmull
add
fcoml
mov
fmull
sub
fmull
add
fsubr
push
mov
fsubr
xor
mov
sub
sub
sub
faddl
xor
faddl
mov
fsubr
xor
mov
fdiv
sub
fadd
sub
fdiv
sub
fcoml
mov
fcoml
mov
fmull
mov
fsubr
push
mov
faddl
mov
fdivl
mov
fsubl
ds
fsubl
push
mov
fmull
cmp
fdivrl
mov
fmull
mov
faddl
mov
fmull
add
fdivrl
mov
fmull
mov
fsubl
pop
mov
fdiv
sub
fcoml
mov
fsubr
push
mov
fdiv
sub
fdiv
adc
mov
fmull
mov
fsubl
fcoml
push
mov
sub
fdivl
mov
fsubl
xor
fdivl
mov
fsubrl
mov
fdiv
sub
fcoml
mov
fsub
xor
fcompl
push
mov
fdivrl
sub
sub
fcompl
sub
fsubrl
fmull
add
fmull
pop
mov
fadd
add
faddl
mov
fmull
xor
fsubl
pop
mov
fdiv
sub
fcoml
mov
fcompl
sub
fsubrl
mov
fsubr
push
mov
fsub
xor
fsub
xor
fmull
sub
faddl
mov
fsubrl
mov
fdiv
xor
fcoml
mov
fdivrl
mov
fdiv
sub
mov
mov
pushl
ret
mov
jmp
pusha
jmp
jmp
sar
mov
shl
setns
cmc
rcr
mov
clc
push
jmp
push
not
push
mov
movl
inc
bt
pushf
add
jae
sub
jmp
mov
mov
pushf
pushf
lea
jmp
mov
push
mov
sets
mov
push
jmp
pushf
mov
jmp
xor
test
call
mov
mov
movw
mov
movb
mov
lea
jmp
cmp
bt
clc
sub
pusha
xchg
clc
clc
call
movb
pushl
popl
movw
movl
lea
jmp
movl
mov
movb
movb
mov
lea
jmp
pushf
popl
pushf
lea
jns
std
push
xchg
xchg
mov
movsbl
movsbw
lea
pushf
lea
jnp
push
call
pushf
push
mov
call
push
pushf
mov
push
lea
jmp
push
mov
pusha
pushl
mov
pushf
push
push
jmp
call
pushf
popl
movzbw
pop
pushf
movsbw
mov
not
not
jmp
pushf
mov
pushf
popl
call
call
mov
push
sub
call
mov
pushf
call
mov
mov
lea
jmp
mov
pusha
pusha
lea
jmp
push
call
movw
and
pushf
jmp
pushl
popl
movb
movw
push
pushf
lea
jmp
mov
mov
pushl
pushl
movb
pushl
ret
call
stc
movzbl
aas
lea
mov
clc
dec
mov
push
add
call
mov
movzbw
pushf
movzbw
pushf
popl
movw
jmp
mov
mov
lea
jmp
xor
clc
stc
stc
movw
mov
cmp
bt
sub
push
inc
call
pusha
mov
pushl
pushl
movl
pushl
lea
jmp
cmp
xor
cmp
call
bt
mov
cmp
call
jmp
movsbw
push
push
lahf
pusha
lea
mov
pushf
movb
mov
lea
cpuid
clc
clc
sub
push
push
pushl
cmpl
call
movl
call
mov
lea
jne
pusha
pushl
pusha
pushf
mov
mov
pushf
push
movl
lea
jmp
sar
sub
jo
btr
rol
and
ror
pushf
sub
add
movzbw
lea
pusha
and
clc
btr
mov
pusha
cmp
sub
jmp
and
add
lea
inc
pusha
push
mov
rcr
pushl
xor
bt
lea
ja
sub
setl
ror
bt
neg
shl
add
clc
movzbw
xor
stc
movzbl
ror
btr
mov
push
pushl
call
pushf
mov
call
aaa
bt
movsbl
rdtsc
stc
sub
push
mov
pushf
mov
movb
mov
mov
lea
jmp
mov
pushf
mov
jmp
jmp
and
mov
bt
clc
jmp
sbb
das
bsf
mov
clc
mov
setp
adc
setg
mov
cmc
stc
pushf
jmp
pushf
mov
pusha
movb
pushl
lea
jmp
mov
mov
mov
movw
pushf
lea
jmp
call
pushl
popl
movb
pushl
lea
jmp
movzbl
mov
jmp
neg
ror
sub
push
bt
ror
shld
bsf
neg
sbb
pusha
add
rcr
clc
xor
movzbw
movzbl
sub
shrd
shl
mov
pushf
call
pusha
pushf
popl
call
pop
inc
xchg
dec
not
cmp
shld
neg
lea
push
setbe
ror
adc
shl
call
