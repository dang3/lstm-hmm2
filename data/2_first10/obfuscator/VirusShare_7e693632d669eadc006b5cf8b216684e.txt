sbb
add
dec
push
mov
or
lahf
mov
and
jge
gs
popa
inc
mov
or
pop
mov
repz
cmp
clc
mov
sbb
sbb
or
das
aad
lods
mov
mull
jb
out
mov
nop
test
dec
xor
dec
xor
iret
lock
nop
mov
addr16
mov
inc
sbb
dec
jno
jae
push
test
xchg
in
fsubr
loope
adc
or
pop
push
scas
fdivl
lret
rclb
or
fildl
mov
and
fldl
sbb
cli
dec
xor
enter
inc
shll
call
xchg
fidivrl
push
mov
pop
add
pop
dec
pop
add
mov
or
aas
mov
mov
mov
negl
push
push
fistl
adc
sub
aas
cmp
cmp
rol
xchg
cmp
cmc
pop
xchg
xchg
les
push
dec
xor
and
add
push
movsl
mov
xchg
cmpsl
in
dec
lods
adc
ror
cmp
in
xor
pop
rcl
imul
dec
xor
or
jl
fwait
adc
xchg
loopne
aam
push
pop
rcl
cmpsl
cmpsl
lret
enter
push
testb
in
out
arpl
sbb
jnp
sbb
fcomps
insb
inc
lahf
jae
dec
adc
sbb
fs
mov
hlt
mov
adc
sub
fildll
or
pop
mov
pop
mov
or
dec
mov
daa
movsb
and
or
repz
dec
pop
out
mov
push
cmp
dec
mov
daa
jp
mov
inc
sub
fwait
ja
lret
sub
or
les
out
pop
xlat
hlt
sti
jle
adc
nop
mov
sbb
fdiv
mov
xor
push
sar
xchg
dec
or
xchg
jnp
lds
mov
jns
adc
jl
psrlq
jns
dec
imul
mov
ret
mov
insb
mov
subl
jno
ds
jns
rol
loop
pop
lods
sbb
pushl
sti
rcl
lods
mov
xor
push
push
fidivrs
loope
adcb
push
add
fistpll
rcll
fwait
adc
sub
push
aad
icebp
adc
orb
and
lahf
inc
adc
fcomip
pop
mov
mov
jnp
push
mov
pop
or
dec
or
mov
into
fst
inc
repnz
ljmp
sub
adc
push
push
dec
div
lahf
cmp
data16
inc
adc
test
mov
inc
test
jge
sub
adc
adc
je
in
ss
and
cmp
shrb
mov
ja
cmp
adc
test
fmulp
add
or
inc
hlt
pop
in
ret
jo
push
pushf
enter
xor
shlb
bound
or
lret
cmp
test
xor
popf
out
mov
mov
call
insl
dec
push
not
test
xchg
or
sbb
mov
repnz
or
test
xor
mov
scas
outsl
mov
in
mov
mov
mov
mov
pop
insb
cs
in
sbb
jno
enter
imul
cli
popf
adcb
stc
push
mov
ret
lcall
mov
jge
stos
in
loopne
negb
mov
and
lods
dec
dec
icebp
inc
call
xorl
sbb
add
fstp
jo
jnp
stos
lods
sub
inc
icebp
sub
outsb
ss
int
divl
xor
inc
sbbb
add
hlt
adc
or
es
cmpsb
cmp
xchg
xchg
and
or
andl
push
inc
jbe
jg
push
ret
ret
pop
xor
inc
push
or
add
mov
xlat
js
mov
inc
out
mov
subl
ret
xor
into
lea
jb
jnp
imul
movsb
lret
std
cld
lret
jns
scas
ljmp
enter
shll
adc
out
mov
sarb
aam
sti
xchg
add
stos
jg
inc
add
lret
xchg
mov
mov
incb
cltd
rcrl
je
lcall
lock
mov
jmp
mov
dec
xchg
orl
cmp
fildll
shrl
add
inc
jp
fcoml
cli
pop
loope
fdivs
dec
dec
xchg
int
outsb
mov
clc
in
nop
jne
mov
mov
dec
ja
dec
jg
les
xchg
cmp
jmp
pop
pop
sub
pusha
and
adc
adc
inc
int3
fisubrs
dec
mov
sbb
test
popfw
and
lcall
clc
lret
xchg
or
es
pop
fcoml
jnp
rcl
xchg
inc
sub
pop
mov
ss
mov
enter
das
icebp
push
mov
fwait
nop
mov
inc
jae
mov
test
nop
or
mov
sub
test
cmp
jge
sub
sbb
fidivrl
adc
xchg
sti
jmp
gs
and
lods
adc
jno
dec
cli
and
outsl
stc
aaa
lock
fadds
lock
inc
xorb
cwtl
inc
shlb
xor
push
inc
icebp
mov
mov
sub
add
fcoml
ret
add
mov
xor
fcomps
or
xor
cltd
cmp
adc
popa
inc
fs
imul
cmp
aas
xchg
push
js
cmp
and
fstpt
testl
mov
xor
jg
xor
inc
out
fiaddl
repz
pop
xor
dec
and
or
repnz
ds
lods
and
fcompp
test
add
loopne
clc
sbb
pop
cmpsb
shrl
xor
sbb
enter
addr16
bound
mov
jp
into
scas
xchg
cmp
test
adc
sarl
bound
pop
outsb
pop
cli
mov
movsb
cmp
mov
and
xor
push
mov
or
jge
scas
pop
arpl
fs
mov
mov
loope
xor
push
xchg
sbb
aas
mov
pop
mov
adcl
mov
pushf
stos
movsb
std
cmc
cwtl
pop
push
mov
pop
and
sahf
clc
jp
inc
xor
mov
testl
push
pop
inc
push
push
xchg
cmp
gs
cmpsl
jb
sbb
jp
ljmp
mov
out
inc
into
push
cmp
xor
sahf
adc
mov
xor
int
jae
stos
dec
or
leave
out
or
enter
cmp
sub
push
shrl
jb
dec
std
jge
push
cmp
sub
xchg
imul
aam
pop
or
fisubrl
add
fisttpl
in
inc
rorl
push
xchg
test
aam
adc
js
inc
into
push
jno
add
scas
cli
sbb
dec
loopne
lret
int
push
test
pop
xor
ss
dec
scas
cwtl
jnp
fistpl
bound
jg
lds
mov
xor
sahf
out
imul
les
or
out
push
mov
fmuls
jl
dec
nop
int3
jmp
aam
mov
add
adc
dec
aaa
cs
cmp
aaa
jmp
inc
and
int
fwait
mov
out
adc
cli
jb
cmc
jnp
mov
sbb
jp
pop
out
sbb
cmpsl
insl
insb
pusha
mov
dec
nop
push
and
xchg
xchg
repz
add
push
ljmp
test
xchg
sbb
fwait
lcall
mov
enter
lret
sbb
mov
dec
adc
add
ret
sbbl
inc
sbb
xor
jge
bound
mov
lret
lcall
mov
lods
sub
mov
lahf
scas
jecxz
sbb
mov
in
loop
test
pop
in
lcall
mov
push
insl
add
cmp
mov
sub
jo
push
lods
popl
fstpt
and
add
les
ja
int3
adc
scas
je
push
cld
inc
pop
mov
in
fwait
nop
and
xlat
repnz
mov
cmp
int3
test
mov
and
jb
pop
dec
jns
loopne
xor
addl
adcb
mov
dec
add
adc
xchg
dec
inc
push
add
xor
scas
stc
ret
in
xrelease
out
jnp
or
pop
test
xchg
incl
xor
loope
popf
aas
test
fidivs
testb
adc
mov
inc
sbb
push
and
xchg
or
cli
sub
psrad
cmpl
push
in
sahf
adc
jno
repnz
call
loop
mov
mov
mov
push
xchg
repz
sti
jge
pop
inc
mov
pop
scas
pop
dec
inc
addr16
push
es
popa
mov
push
push
adc
inc
pop
jbe
insb
mov
mov
or
popa
jb
pop
cmp
cmpsb
adc
pop
lock
orb
cmc
popf
mov
mov
clc
je
fimull
in
leave
fs
icebp
pusha
aas
mov
popf
fldt
ss
mov
in
mov
test
fistl
in
ljmp
adc
cli
cli
sub
aas
push
dec
or
pop
icebp
mov
inc
or
dec
bound
int
pop
or
subl
fisubrl
adc
sub
pop
cmp
into
mov
jge
push
fists
fdivrs
arpl
aaa
decb
jno
dec
fldt
movl
add
cmc
fnstcw
mov
sbb
xor
dec
pop
mov
cmpsb
pop
lods
insl
ret
sub
mov
in
mov
lock
loop
lods
loope
fdivrs
enter
mov
imul
clc
jecxz
xchg
pusha
xchg
pop
ret
inc
dec
rcrb
inc
call
nop
mov
jbe
cwtl
sbb
jecxz
mov
popa
lret
xor
aas
inc
cmc
or
sbbb
fisubs
sbb
mov
loope
jecxz
loopne
mov
push
xchg
test
mov
jne
es
and
pusha
jge
mov
lcall
movsl
sub
fs
jbe
mov
adc
movb
push
aas
int3
dec
test
fadd
mov
sbb
je
cmp
push
inc
ss
les
das
mov
cltd
aaa
ret
jnp
xchg
lods
mov
jbe,pt
out
sub
bnd
dec
out
pop
in
out
mov
mov
rolb
xchg
fcomps
hlt
jne
dec
sbb
test
xchg
xor
dec
mov
scas
mov
dec
das
inc
push
idivb
shrl
dec
mov
movsb
or
mov
clc
dec
cmp
test
xacquire
xchg
pop
cli
je
jecxz
mov
sarl
pop
jns
leave
movsb
push
loopne
das
push
sub
fiaddl
sub
lds
pop
mov
sbb
lds
leave
imul
lds
loope
popf
ja
shlb
int
ss
lcall
jecxz
sub
mov
outsl
rclb
fwait
add
pop
push
lcall
jge
lock
orl
loop
xor
xchg
stos
stc
or
loopne
mov
sub
inc
push
fs
pop
push
add
aas
jb
call
adc
xor
scas
dec
das
addr16
inc
addr16
addb
stos
xlat
adc
inc
jmp
lcall
aas
jmp
add
mov
mov
pop
sbb
push
fwait
and
xor
push
ja
push
add
xchg
push
pop
call
popa
pop
jmp
daa
lea
lods
pop
sarl
sub
adc
push
cld
test
dec
sub
push
xor
not
mov
sbb
or
popf
dec
ljmp
sbb
jl
dec
rcrb
fisubs
cmp
into
lcall
xlat
sarb
sub
inc
stos
mov
cmc
je
sbb
imul
cmpsl
dec
out
push
lahf
fwait
add
cmpsb
js
xor
rcll
or
jl
add
mov
ret
lahf
fisubl
jl
ds
mov
jnp
aad
push
insb
cmp
mov
pop
cld
mov
movsl
aad
out
sub
push
imul
loopne
into
ret
adc
push
outsl
pusha
stos
daa
and
or
mov
add
sub
inc
jp
pop
sbb
filds
adc
push
faddp
aad
lods
jbe
xor
ljmp
js
and
mov
mov
add
adc
sar
xor
adc
data16
je
std
icebp
sbb
fsubrl
or
call
adc
jge
ljmp
dec
std
xor
and
sub
cmp
push
lret
xchg
mov
inc
fisubl
sub
andb
dec
inc
and
movsl
mov
xor
lcall
push
add
adc
cmpsb
add
or
jmp
push
sbb
icebp
icebp
or
cmpsl
jb
cmp
sbb
fldenv
adc
xor
call
dec
jecxz
mov
rorb
and
mov
cld
push
out
cmp
std
bound
repz
fsts
iret
inc
jmp
movsl
or
push
push
fsubrl
add
sub
stc
push
idivl
divl
jbe
jnp
xor
mov
adc
add
xor
out
aam
cmp
lds
jl
shrl
add
int3
popa
flds
addl
cli
insb
cmc
nop
and
push
push
jbe
xchg
in
cmc
and
in
nop
addl
add
icebp
dec
and
sahf
sbb
mov
ss
add
pusha
and
daa
out
popf
fdecstp
sahf
pop
xchg
daa
mov
xchg
fdiv
mov
mov
loopne
ss
jl
or
clc
push
jo
push
sarl
push
push
iret
dec
sub
push
inc
sbb
mov
dec
pop
les
inc
mov
xor
adc
lea
enter
in
insl
mov
mov
sub
mov
fwait
sahf
adc
cld
jo
cld
mov
xchg
lret
xor
sub
fisubrs
inc
jns
inc
sub
nop
pop
data16
repz
sbb
xor
out
lahf
push
jmp
cltd
repnz
xchg
pop
add
fbstp
xchg
adc
inc
leave
mov
fiaddl
xchg
lahf
push
loopne
inc
lcall
loopne
fcmove
mov
adc
cltd
and
leave
xor
or
push
mov
pop
inc
imul
mov
push
lods
ss
mov
mov
push
ja
dec
and
cmp
out
adc
arpl
push
je
mov
or
sahf
inc
mov
fs
out
fnstenv
js
xlat
std
jl
push
push
cmpsb
pop
pop
sbb
fwait
cmp
in
mov
incl
dec
fwait
xchg
in
insb
sbb
jno
shrb
imul
vpsubw
mov
sbbl
enter
mov
mov
cmpsl
dec
addr16
jae
sahf
push
add
repz
xchg
add
mov
imul
lea
mov
mov
add
int
pop
ret
out
pop
insb
pop
testl
loop
dec
test
cmp
test
pusha
or
stos
sub
lcall
add
leave
repz
loope
jo
fdivrs
arpl
xor
mov
sub
dec
add
xchg
aad
and
mov
mov
or
jne
cld
rcr
scas
outsb
xor
call
adc
add
shl
out
out
xor
pop
ret
fildll
sahf
outsl
dec
add
push
xor
sbb
xor
aaa
xchg
stos
push
insb
push
popf
sbb
lret
test
mov
pop
in
mov
imul
jo
mov
mov
push
cld
imul
jecxz
or
into
nop
inc
es
jbe
insb
mov
leave
sub
mov
and
pop
addr16
nop
mov
and
dec
jl
inc
or
mov
inc
cmp
inc
popf
clc
xchg
and
xrelease
sub
and
stc
xchg
fwait
mov
xlat
adcl
or
aam
in
imul
or
aaa
push
fadds
cmp
mov
js
add
add
push
ds
divb
cmp
xchg
jns
mov
fwait
jmp
mov
jno
dec
adc
jne
fwait
sub
cmc
cmc
mov
jno
pushf
or
dec
jae
addr16
aaa
sbbl
push
adc
rorb
gs
cmp
pop
es
loop
ja
mov
repnz
push
out
pushf
xor
push
mov
add
xchg
push
mov
rcrl
call
push
fs
mov
fcmovne
mov
gs
xor
gs
cld
add
pop
cld
out
into
sbb
bnd
mov
test
sbb
xchg
hlt
add
out
and
inc
dec
push
xor
add
xchg
outsb
push
mov
push
ud0
lahf
sub
jmp
lods
sbb
fistpll
insl
jno
mov
cmp
insb
mov
add
clc
cmpsb
push
dec
lock
and
movsl
pop
stos
inc
mov
lret
das
sbb
push
push
lods
mov
clc
xchg
cli
jl
add
je
das
push
in
outsl
mov
pop
and
pop
sub
repnz
jmp
adcl
inc
ja
xchg
xchg
mov
xlat
popa
pop
in
repz
inc
and
dec
mov
adc
inc
test
mov
push
mov
fbstp
es
mov
ss
pop
pusha
aad
out
sub
rolb
sub
roll
sbb
ret
push
int
add
lret
cmp
push
lahf
mov
pop
sbb
sub
or
jns
dec
cli
xor
dec
push
inc
lcall
cmpsb
mov
adc
sbb
xchg
or
aaa
mov
adc
idivl
arpl
mov
jae
movb
inc
clc
and
aas
xchg
mov
mov
int3
xchg
mov
jecxz
leave
aas
pxor
mov
fistps
pop
push
enter
test
rorl
mov
nop
add
dec
inc
divb
jnp
push
hlt
pop
mov
push
rorl
scas
mov
movsl
jge
or
push
fmull
cmp
xchg
mov
xchg
jl
adc
jns
es
lcall
mov
rol
es
pop
pop
out
sahf
mov
lahf
and
push
jne
loope
or
push
mov
repnz
popf
mov
icebp
sub
mov
inc
and
fwait
cld
daa
cmc
push
cmp
ficomps
xchg
mov
mov
and
xor
fistpll
ret
jg
and
orb
std
fistl
cmpb
shll
loop
cmpsb
lods
mov
call
mov
fst
xchg
loopne
add
shlb
sbb
mov
out
pop
inc
sub
push
dec
mov
dec
xor
mov
arpl
stos
fs
push
xor
xlat
in
jl
or
pop
cmp
pop
mov
sub
dec
dec
test
mov
dec
cmp
or
mov
sub
push
inc
xchg
es
sub
mov
test
mov
mov
stos
mov
cmpb
stos
fistpll
mov
int
fstpt
jo
sahf
push
fwait
loopne
pop
ja
lret
xchg
mov
and
or
mov
sub
cmp
shll
lods
jae
mov
sub
lret
mov
test
fdivl
push
mov
mov
loope
andb
sti
sub
ja
pop
fwait
jmp
xchg
scas
xchg
das
push
jl
and
cmp
pop
ss
push
ret
xchg
adc
popf
ljmp
cmc
adcb
push
jge
call
mov
sub
adc
gs
dec
or
sub
sahf
jmp
test
iret
xorl
add
repz
pushf
and
mov
mov
mov
sbb
lret
cmp
test
push
inc
loopne
inc
push
push
rcrl
xchg
xchg
cmp
popa
nop
sub
mov
lret
sub
mov
fdivl
repz
enter
xor
arpl
mov
cmc
insl
jle
sahf
cmp
mov
repz
hlt
stos
mov
fdivrs
mov
std
and
fisttpl
sub
xor
scas
add
and
sub
mov
jg
in
or
mov
sti
jae
pusha
imul
or
jbe
ds
in
mov
stos
jb
imul
sti
roll
out
test
jns
cltd
or
mov
insl
and
test
leave
repnz
cld
lea
xchg
xchg
imul
pop
jbe
ret
lods
mov
mov
jge
shll
inc
pusha
jmp
scas
repz
cmc
xchg
scas
jmp
gs
xchg
mov
stos
test
addr16
mov
mov
sbb
jmp
push
outsl
adc
dec
fadd
pop
jle
ja
jmp
push
sbb
sub
out
pushl
iret
xchg
lret
or
cld
int
mov
fbstp
out
test
aam
adc
dec
fwait
jb
enter
inc
sub
add
stos
mov
cwtl
cwtl
mov
in
cli
clc
mov
sbb
ja
outsb
and
mov
subl
nop
jl
pusha
idivb
push
test
inc
inc
dec
outsl
sarl
sbb
scas
cld
mov
aam
xchg
adc
push
push
xchg
and
aas
repnz
adc
andl
cmpsl
insl
test
aad
and
arpl
jne
mov
fs
repnz
or
loop
popa
std
loope
xchg
ror
sbb
mov
sbb
cmp
xor
mov
loop
xor
mov
mov
and
aam
mov
inc
ret
mov
loop
in
fimuls
add
cmp
adc
pushf
pushf
call
push
addb
sbb
orl
add
sub
xlat
movsl
dec
dec
jg
push
mov
mov
cli
dec
push
jnp
sbb
push
fsubrs
fwait
mov
push
popa
add
scas
sbb
sbb
mov
data16
ficoml
in
test
inc
hlt
cmp
or
rolb
test
mov
hlt
arpl
or
mov
stos
sub
aaa
dec
jne
xlat
lods
mov
loopne
sbb
ss
add
fbstp
dec
hlt
inc
aam
or
mov
test
outsl
pop
insb
mov
not
sbb
inc
pop
sbb
sbb
xchg
sbb
fimuls
fldenv
or
cmpsl
popf
sub
jo
addr16
movsb
mov
pop
or
daa
movsb
sub
mov
xchg
repz
sub
shll
arpl
cs
or
andl
int3
adc
rorl
mov
mov
and
out
mov
adc
adc
inc
js
lahf
leave
push
xor
push
lahf
in
ret
mov
test
pop
popa
push
cli
test
int
xchg
bound
mov
push
shrb
inc
xchg
add
int3
dec
cmp
lock
and
loopne
out
pop
mov
push
mov
test
stos
add
out
mov
dec
scas
std
mov
gs
addb
data16
jl
fmull
test
xchg
jno
out
cmp
rcll
sbb
sbb
xor
sub
out
outsl
jp
popa
inc
xchg
push
mov
out
outsl
mov
fcomip
cmp
and
jg
and
rcrl
adc
mov
sti
bound
mov
imul
push
push
and
mov
aam
incl
call
jae
insl
addr16
jmp
dec
push
cs
sub
test
cltd
fwait
test
inc
xchg
cs
sbb
movsb
add
cs
ds
ds
testl
dec
and
sub
mov
fmuls
push
out
in
addr16
pop
out
inc
das
inc
dec
sbb
in
arpl
in
xor
fs
inc
mov
jnp
sbb
imul
fistpl
stos
and
jp
stos
jle
mov
fidivrs
inc
cmp
lret
push
jmp
das
into
pusha
dec
lret
xor
mov
mov
arpl
movsb
cltd
sbb
rorl
mov
sbb
stos
fs
mov
dec
xchg
push
fnstenv
aad
xchg
jle
rorl
or
lcall
pop
popf
xor
lea
dec
lcall
test
ljmp
add
pushf
data16
lds
push
sti
sahf
notb
dec
int3
pop
incl
dec
jp
fsts
jmp
cld
xchg
je
xchg
fstpt
dec
in
ds
mov
xchg
dec
xchg
lret
xor
jge
jns
dec
dec
mov
addb
adc
lods
sbb
lods
int
xchg
sub
jae
pop
mov
push
imul
pop
sub
cmc
lock
push
bound
pop
push
inc
fnsave
xor
mov
sub
adc
push
mov
rcll
xchg
mov
sub
xchg
jno
loopne
xor
inc
mov
push
cmp
inc
shl
aam
cmpsl
mov
out
xchg
mov
clc
addl
pop
xor
push
mov
clc
aad
jecxz
xor
xchg
adc
loope
push
lea
imul
jne
sarl
int
stos
jg
lock
and
icebp
lods
das
out
dec
stos
xlat
and
out
xchg
decl
xor
mov
pop
inc
add
push
and
push
or
roll
adc
inc
dec
mov
mov
add
je
stc
or
jecxz
aaa
cmpsb
repz
sub
or
fsubrs
roll
mov
jae
cli
sarl
shlb
mov
inc
outsl
lret
fiaddl
cwtl
xor
fidivs
cmc
jb
aam
stos
cs
jns
pop
das
hlt
and
or
mov
movsb
loop
aas
xor
sbb
sbb
dec
mov
out
lods
push
mov
insb
rorl
sub
mov
jns
popf
or
mov
sub
push
nop
push
sub
xor
fimull
imul
xchg
stos
jne
test
je
in
jle
lcall
mov
bound
lret
dec
xor
mov
and
mov
adc
imul
mov
nop
fstp
sub
loop
cmp
dec
sbb
rcll
push
push
xchg
fldt
mov
xor
in
and
andb
aas
add
cmp
imul
dec
stc
sti
add
xchg
jmp
jmp
sbb
mov
and
push
add
cmp
pop
cltd
xor
jnp
push
jae
or
icebp
sub
mov
sbb
xchg
cmp
xchg
push
insl
and
hlt
test
popa
in
push
lds
imull
adc
pop
inc
xchg
pushf
fsubrl
inc
mov
mov
mov
dec
aam
fiadds
stc
outsl
idiv
xchg
push
xchg
popa
xor
push
imulb
inc
dec
loope
adc
fistpll
in
cld
loopne
je
xchg
pop
xor
cli
repz
pop
mov
data16
add
fisubrs
mov
sbb
sbb
lods
sbb
test
inc
adc
push
cltd
das
je
dec
fnstenv
insb
dec
aas
pushf
cmc
loope
addr16
pop
push
mov
std
xchg
push
add
mov
and
gs
mov
or
mov
sbb
push
pop
pop
cmc
adc
add
sbb
push
and
add
mov
cli
cmc
stc
cmc
sbb
arpl
lds
dec
mov
xchg
dec
es
and
popf
or
clc
mov
test
mov
push
push
sbb
lcall
mov
idivl
pop
or
in
int3
adc
ret
mov
pop
clc
aam
pop
mov
push
inc
cmpsb
lcall
mov
mov
stc
add
test
adc
jl
pop
sbb
cmpsb
std
or
enter
sub
out
sbb
into
sub
xor
ret
push
pop
and
mov
pushf
movsb
icebp
jo
call
mov
dec
nop
cmp
enter
ds
div
repnz
icebp
add
push
ret
push
sti
and
aam
jl
imul
mov
sbb
outsl
mov
adc
cmp
nop
mov
jno
jne
sub
in
loop
pop
mov
minps
mov
lret
imul
or
repz
mov
pop
das
lret
mov
and
repz
int3
cmpl
xor
faddl
mov
jo
cmc
xchg
pusha
mov
inc
arpl
cmovle
jns
in
call
pushf
mov
inc
stos
les
leave
arpl
in
inc
lcall
aas
sub
or
aam
sti
and
les
ss
sbb
inc
gs
jge
lods
push
std
outsl
hlt
mov
mov
clc
or
popa
daa
inc
into
fildll
pusha
mov
les
jg
xor
and
jle
popa
push
pop
fnsave
jl
mov
xlat
pop
loope
jecxz
lcall
xlat
incl
pop
cltd
dec
and
jmp
push
dec
cmp
inc
xor
pop
push
adc
mov
es
pop
aad
mov
shll
icebp
scas
iret
add
imul
mov
xchg
mov
enter
in
mov
mov
dec
xchg
mov
les
fcoml
jae
mov
add
lea
mov
cwtl
shrb
jae
pop
orl
outsb
xchg
rorb
cmc
xor
rcrl
cmp
data16
and
cwtl
int
adcl
dec
lahf
xor
lret
neg
popa
out
popl
call
adc
xchg
dec
fwait
movsb
xchg
adc
inc
icebp
outsl
les
test
movsb
cmpsl
js
or
fidivs
js
test
mov
lds
xchg
add
mov
stos
lahf
mov
lahf
lea
test
dec
popa
adc
or
std
and
inc
iret
in
xlat
sub
aas
cld
in
js
sub
popf
lcall
add
mov
push
adc
rorl
outsb
mov
jle
or
mov
xor
mov
or
loope
out
insl
popa
sub
sub
hlt
inc
adc
push
xor
test
cmp
jp
jo
xchg
fimuls
cmpsb
aam
outsb
ret
pushl
outsb
dec
dec
sub
les
mov
inc
stos
fiadds
pop
les
mov
inc
jl,pt
icebp
in
pop
dec
insl
outsl
add
mov
dec
popa
pop
daa
int3
test
xor
push
inc
popf
lock
xchg
lret
sub
and
xor
fwait
testb
cmp
lods
jb
and
jbe
stos
pusha
stc
sti
shl
incl
and
lahf
cmpsb
xchg
outsb
mov
outsl
clc
mov
pop
imul
lret
jnp
ja
mov
in
lea
pop
addr16
and
daa
call
or
sti
inc
sbb
and
adc
inc
pop
xchg
mov
xchg
inc
mov
iret
mov
dec
ret
sbb
test
lock
das
imul
popa
mov
int3
inc
adc
push
xchg
jge
mov
das
adc
dec
add
mov
popa
inc
lcall
ljmp
sub
mov
mov
enter
gs
scas
jl
push
insb
loopne
inc
xchg
repz
jmp
in
rcl
fsubl
mov
mov
lret
add
or
mov
lds
fldt
sbb
add
sahf
dec
jecxz
in
jmp
pop
dec
stos
data16
sub
and
call
lret
jno
mov
lods
in
shlb
in
sub
sbb
adc
cmp
mov
mov
loope
cmp
dec
sarb
pushl
fcomp
jb
push
jl
pop
sahf
cmp
mov
loope
in
sbb
out
push
out
cs
push
fldl2t
sbb
test
enter
or
aas
loop
rorb
xchg
or
cmp
aas
nop
xchg
fistpll
mov
cmp
add
mov
sbb
push
mov
aam
fisttps
adc
cmp
movsb
xor
data16
in
jmp
inc
rorl
or
loope
dec
mov
adc
call
lahf
neg
test
adc
sub
ret
je
pusha
lahf
aam
sbbl
ja
xor
or
pop
push
cmp
mov
andl
or
or
popa
shrb
rcrb
xchg
pop
jmp
push
jp
aam
ja
sarb
ja
pop
adc
sub
in
sub
addr16
sarl
daa
sub
jnp
mov
test
push
leave
scas
pop
divl
cmpsl
add
test
xor
out
je
jp
mov
popa
jne
outsl
xor
inc
bound
inc
xlat
pop
dec
mov
inc
lret
mov
jno
cld
jb
sbb
out
addr16
add
outsb
fidivrl
push
popa
pop
fidivl
mov
stc
hlt
je
stos
in
jmp
mov
pop
insb
pop
aas
cmp
jb
testb
pop
or
lock
roll
cmp
mov
inc
cli
xchg
mov
push
or
push
mov
mov
shl
jns
add
push
adc
adc
push
cli
xchg
cwtl
fstpt
cli
push
into
dec
mov
lea
ja
xchg
mov
scas
movsl
or
jl
mov
shll
xchg
add
cmp
and
mov
jo
push
mov
mov
cld
sbb
cli
fildl
icebp
hlt
xchg
out
dec
cmp
jnp
imul
mov
repnz
cmpsb
or
cltd
inc
add
jg
sbb
pop
cli
cmp
imul
push
iret
mov
xchg
adc
outsl
addb
mov
test
mov
push
push
imul
inc
sbb
cld
jnp
out
sub
scas
aam
mov
push
cmc
movsl
cmp
push
add
mov
insw
inc
push
aaa
cmpsl
int3
xchg
bound
pop
aas
mov
adc
adc
adc
lock
std
enter
or
fnsave
cmp
shrb
sub
aas
dec
out
popf
scas
and
ljmp
sub
sub
rcrl
add
int
xchg
inc
popa
sbb
or
mov
mov
repnz
out
mov
rclb
lods
mov
mul
add
jl
aam
pmaxsw
adc
or
pop
in
inc
test
rcr
or
mov
daa
adc
mov
data16
mov
push
clc
add
add
cmpsl
inc
cld
sbb
pop
pop
test
scas
pop
cmp
xor
and
loope
mov
xchg
push
addl
sbb
dec
loope
dec
push
xor
fimuls
adc
shll
push
leave
nop
push
sub
ss
out
adc
movsb
cmp
test
in
incb
mov
inc
dec
rol
loope
ret
dec
dec
es
aad
repz
repnz
popf
pop
mov
lcall
ret
pusha
mov
iret
out
adc
or
sub
out
pop
fisubl
fistl
pop
out
inc
cmpsb
fistl
or
mov
xor
fisubl
mov
test
cmpsl
xchg
dec
bound
pop
mov
or
adc
adc
hlt
jle
std
pop
inc
gs
shll
arpl
lock
jno
push
mov
aad
cmp
jnp
pmaxub
add
ss
out
cmpl
xchg
loope
mov
cmpsb
mull
or
xchg
push
adc
roll
or
xor
lods
cmpl
inc
push
mov
sub
sub
mov
push
mov
aas
mov
mov
or
or
clc
test
cwtl
adc
mov
pop
mov
dec
in
fwait
cmp
jge
and
mov
mov
sub
mov
add
sti
jnp
jo
out
and
outsb
popf
enter
lods
push
xchg
test
xchg
adc
mov
jmp
adc
or
cld
xchg
fisubrs
rcl
frstor
push
int
mov
daa
in
movsl
dec
icebp
stos
xchg
xor
jbe
rcrl
inc
sub
outsb
jmp
push
adc
cwtl
mov
mov
pop
adc
leave
pop
inc
sbb
aaa
lcall
cltd
fidivrs
jmp
mov
dec
insl
cltd
bound
int3
mov
popf
and
mov
sti
pop
dec
in
push
das
subb
jmp
pop
stos
jae
push
or
fcomps
mov
daa
or
stos
js
stc
add
aas
fwait
add
lock
dec
sub
gs
xchg
dec
mov
frstor
sahf
push
add
insb
mov
push
cmpsb
jo
adc
and
and
je
iret
outsb
xchg
in
jp
push
movsb
std
or
jl
or
xor
shll
xor
add
xlat
xchg
inc
and
inc
push
jecxz
or
lret
cld
ret
cmp
fistpl
dec
lds
jb
sbb
repnz
push
stc
mov
sbb
mov
hlt
in
add
or
aad
xor
adc
fiaddl
xor
fisubrl
xlat
mov
data16
mov
dec
pop
jecxz
inc
dec
rcrl
rcll
sbb
xchg
das
lret
xchg
push
cli
sbb
movsb
ljmp
fnstenv
popf
mov
sbb
fidivl
sahf
sbb
cmc
and
push
pop
jg
out
aam
int3
fstps
testl
pop
shll
and
jle
cmp
test
sti
jmp
popf
jae
lcall
lds
loop
xchg
pop
push
sbb
sub
loop
xchg
call
mov
prefetch
and
enter
inc
add
stos
es
lock
out
in
lea
xchg
test
push
or
sahf
in
shr
jg
inc
and
pop
mov
sti
pop
movb
imulb
jno
cmp
sub
or
movsl
sbb
in
into
in
push
dec
cmp
testl
xlat
shlb
orl
lcall
cwtl
mov
mov
inc
les
inc
sub
xchg
and
call
jl
cmp
dec
xchg
xchg
or
jo
pop
pop
lahf
enter
push
les
mov
jbe
xlat
js
jns
adc
lret
inc
insl
add
sub
jecxz
ja
je
adc
push
fldcw
push
test
pop
jp
scas
fwait
xor
ja
xchg
mov
loop
test
push
sbb
fimull
cmc
pusha
xchg
ror
insb
dec
and
js
ficoml
push
mov
test
dec
icebp
out
mov
outsl
lock
insb
fwait
ret
inc
das
lods
or
movsl
adc
dec
sbb
mov
dec
mov
xchg
pushf
lahf
fisttpll
arpl
mov
cmpsl
mov
dec
cmpsb
cmpsb
mov
or
xchg
loopne
mov
or
mov
in
mov
fwait
pop
out
out
je
xorl
sub
mov
enter
or
ror
sbb
loop
xor
add
lea
loope
add
pusha
rorb
int
cmp
jge
andb
lahf
addb
sub
push
push
xchg
shll
dec
leave
jge
inc
testb
add
shll
ss
scas
sub
lea
incl
push
je
adcl
push
pop
sub
jg
add
pop
jbe
add
in
out
xor
data16
je
push
pop
insb
bound
insl
imul
cwtl
out
imul
sub
cmp
cmp
push
ret
pop
pop
add
sbb
test
daa
bound
aas
imul
and
jle
ljmp
push
arpl
movsb
fwait
push
addr16
adc
dec
mov
aas
pop
call
fs
daa
call
sbb
insl
mov
jecxz
sbb
jo
xchg
out
pushf
lcall
dec
popf
arpl
pop
jne
int
xlat
cmpsb
rclb
sbb
pop
mov
sti
movsb
jl
lcall
inc
mov
push
pop
outsb
scas
jg
xor
call
leave
jle
inc
rcrb
dec
test
adc
shrb
inc
into
jns
cwtl
sti
mov
or
add
push
and
adc
mov
adc
ljmp
loopne
sti
mov
cs
dec
sub
ja
cld
in
adc
mov
xor
dec
inc
popl
lock
test
in
aam
mov
jge
lods
aaa
sbb
inc
sahf
out
add
enter
stos
shrb
xchg
cmp
loope
mov
ret
mov
ficompl
fiadds
xchg
add
adc
jo
rcr
sbb
dec
enter
ljmp
daa
dec
adc
push
push
dec
adc
out
call
loop
into
es
inc
ds
cmpsb
ds
sbbl
aaa
add
mov
and
ret
shr
and
aaa
add
add
hlt
rcl
push
outsb
jg
add
push
popf
andl
mov
scas
mov
inc
daa
icebp
pop
and
push
add
dec
fwait
xchg
fwait
jb
movsl
xor
or
fs
cmp
mov
rclb
loopne
popa
lret
test
push
loop
inc
js
push
flds
push
push
loopne
adc
fnstcw
sbb
push
cmp
push
imul
addr16
fldl
add
lds
out
aad
into
mov
mov
sub
push
cmp
aam
fcomps
cmp
lods
call
aad
roll
cmp
sbb
xchg
lea
outsb
sub
push
mov
aaa
fmull
jbe
out
arpl
fists
mov
xchg
loop
and
imul
jp
rorl
stos
mov
prefetch
subl
rclb
sti
idiv
xor
stos
and
daa
dec
inc
lret
int
or
outsl
shl
xchg
sub
pop
pop
stc
xchg
cmp
cwtl
outsl
popa
mov
int
pop
fdivp
mov
xor
sti
in
fisttps
mov
fsubrs
adc
je
in
push
inc
add
adc
jo
pop
xchg
mov
push
dec
sbb
and
negb
jne
loopne
xchg
dec
lcall
mov
xor
mov
mov
fildl
mov
ljmp
fimuls
mov
jp
call
push
mov
or
sbb
cmpsl
or
adc
into
xchg
or
sbb
sbb
push
shl
xchg
fld
jno
xor
inc
xor
push
int
or
mov
push
out
insl
js
pop
xchg
mov
stc
rorl
add
lret
adc
sbb
popa
jmp
dec
ss
or
sbb
push
iret
test
push
hlt
sub
cmpsl
push
stos
or
push
jo
jne
shl
cmpsl
and
imul
popf
sti
into
xor
lcall
je
push
aaa
cmpsl
and
cmpsl
popf
mov
jnp
mov
popa
pop
popa
rol
addr16
test
lret
out
mov
inc
sbb
xchg
testb
mov
aad
pop
lods
xchg
test
pop
int
pushw
push
sub
mov
sub
int
jl
inc
mov
pushf
ja
gs
pusha
jp
je
mov
lahf
mov
cmp
push
push
sbbb
stos
hlt
aam
test
lahf
cld
xchg
daa
je
cmp
mov
sbb
mov
dec
mov
jbe
shll
cltd
popf
xchg
xchg
stos
xchg
cwtl
jp
rorb
xor
jge
ljmp
push
pop
arpl
or
fdivrs
lea
add
shrb
popa
sbb
imul
scas
and
and
jg
pop
jbe
lods
daa
add
fmuls
jae
push
xchg
push
mov
inc
and
stc
xor
fucomip
xor
push
movsl
movsb
and
inc
sub
inc
mov
adc
add
in
add
or
mov
in
add
pusha
pop
mov
fnstsw
enter
sub
pop
outsb
les
cmpsb
cltd
or
out
stos
xchg
aas
fadd
mov
inc
pop
jb
test
xchg
sub
fmuls
cmp
jae
adcb
into
popf
sub
sbb
cmp
inc
test
push
shrl
mov
push
incl
hlt
and
mov
xchg
mov
test
cld
shlb
push
in
fcomi
jge
push
lock
mov
push
ljmp
pop
mov
lock
movsb
dec
xor
dec
test
add
in
inc
cmp
fs
stos
mov
mov
cwtl
lret
jg
xor
sbb
mov
int3
inc
arpl
aas
lds
loopne
push
call
jbe
test
adc
xchg
push
inc
push
lret
xchg
pop
sti
or
adc
mov
xchg
out
inc
test
pop
cli
lods
pop
xor
adc
pop
push
lahf
loopne
imul
and
fnstenv
sub
loopne
adc
pop
xor
fldenv
mov
das
notl
hlt
jno
cmpb
and
ss
sub
jb
dec
lea
scas
loope
and
imul
adc
iret
into
adc
jns
cmc
xlat
mov
mov
popa
insb
cmp
cwtl
sbb
stos
add
enter
dec
pop
pop
add
or
xchg
cmp
lahf
out
jg
sbb
and
sub
dec
movsl
stos
daa
and
or
sbb
fnstenv
leave
scas
cld
sub
das
dec
js
shll
lret
or
insl
xlat
jmp
xchg
fdivrl
movsb
sub
ja
pusha
sbb
push
pop
or
mov
xchg
outsb
adc
cmp
sub
ret
movsl
cmp
and
imul
movsb
repnz
and
and
cli
add
mov
pop
sub
out
daa
sub
fsubrs
stos
mov
fidivrl
ljmp
notb
sahf
subl
aad
xchg
decl
scas
xchg
addl
push
mov
adc
sub
mov
cmp
in
inc
iret
xor
xor
push
cmpsl
inc
bound
clc
faddl
or
int
sahf
push
dec
int
incb
loop
loopne
lea
or
paddusb
sbb
aam
push
and
jmp
scas
pusha
lds
xor
mov
clc
jnp
bound
sti
mov
push
cmp
cmp
and
ret
and
xchg
into
and
jb
lds
sub
adc
dec
dec
xor
outsl
xchg
out
xchg
inc
push
push
rolb
push
mov
jp
xor
test
sub
cltd
enter
shlb
pop
mov
and
adc
lret
mov
xchg
jp
xor
loopne
push
adc
mov
imul
in
xchg
push
popa
cli
and
and
rcrl
inc
test
mov
idivl
mov
adc
mov
cld
cmp
hlt
dec
daa
popa
sub
sbb
lret
lcall
outsb
jbe
outsb
fs
pop
sub
sub
sbb
int
xor
jl
cmp
insb
cmp
je
shl
jne
pop
pop
mov
ja
bound
cmp
push
xchg
rol
or
dec
imul
mov
xlat
xor
sahf
xchg
cmpsb
mov
mov
rcrl
mov
mov
jge
pop
aaa
sbb
out
repz
xor
push
and
xor
and
xor
or
push
lea
ds
push
dec
sub
inc
mov
mov
enter
adc
fistpll
sub
push
sti
mov
pop
xor
ret
pop
mov
js
add
cmc
mov
cmc
out
adc
sbb
mov
es
pop
xchg
sbb
sub
jno
push
sbb
std
sbb
mov
mov
mov
js
popa
fadd
leave
jno
test
sbb
sub
xchg
xchg
insl
jb
sbb
lcall
dec
cltd
sub
lret
aam
aas
sub
dec
jno
orl
fimuls
jno
jp
call
dec
lea
sbb
mov
mov
in
shl
shlb
loope
repnz
ss
rcrl
out
push
add
inc
std
jnp
sti
push
outsl
rcll
pusha
in
xchg
pop
andl
push
lcall
and
popf
dec
mov
aaa
push
jnp
lret
mov
xor
adc
cs
insl
push
inc
sub
dec
sbb
mov
xchg
inc
iret
mov
clc
lahf
fbld
lcall
lods
jge
orl
xor
adc
test
insl
out
inc
cli
mov
imul
ss
fsubrl
or
jno
fistps
push
ljmp
movsb
and
scas
in
arpl
int3
nop
push
sbb
mov
mov
or
push
clc
enter
jo
inc
cltd
inc
mov
and
xlat
xor
sbb
push
fs
cmp
jle
lea
sub
aad
enter
xchg
mov
jmp
jge
inc
into
mov
data16
ror
sbb
dec
stos
movsl
xor
dec
fnsave
pop
fsubs
divps
lock
mov
pop
std
mov
popf
mov
adc
mov
add
push
out
sub
mov
popa
jno
sub
fs
xchg
test
mov
loop
inc
inc
stos
inc
ljmp
jp
cltd
std
loope
lods
xchg
clc
add
es
mov
or
scas
cmpsb
push
cmp
loop
mov
push
inc
inc
fdivrp
arpl
mov
xor
xchg
push
mov
gs
dec
adc
sbb
andl
repnz
inc
in
cmp
xchg
sbb
lods
pop
cmp
in
in
inc
lds
jmp
xor
sbb
mov
cmc
cmp
add
sbb
mov
stos
fwait
mov
or
notb
or
leave
cmp
adc
mov
sbb
lea
add
or
cmc
imul
fsubs
clc
loope
movsl
push
fbld
mov
dec
mov
xorb
push
push
push
xchg
and
data16
ds
xchg
push
movsb
lcall
sti
in
pushf
or
push
gs
int
xor
mov
lock
inc
cmpsb
sub
shrl
jl
jns
adc
sbb
xchg
test
sub
cmpsb
xlat
stos
loopne
sbb
adc
adc
cmp
and
sahf
scas
outsl
push
lea
xor
xchg
xor
push
mov
xchg
ret
mov
mov
lods
jbe
mov
loopne
adcl
pop
xchg
adc
test
inc
mov
pop
fdivl
aam
xor
sub
mov
lret
push
ss
rorl
es
mov
ja
inc
sbb
mov
inc
insl
jl
jb
loop
xor
lea
add
dec
ficompl
mulb
ret
mov
fisubs
adcb
les
jns
push
mov
xchg
in
sub
lods
dec
hlt
lea
out
xlat
lret
rcrl
scas
jge
mov
mov
add
push
punpcklwd
fidivrl
mov
clc
imul
mov
adc
cmp
and
scas
adc
mov
or
ficoml
mov
loope
xor
cmp
pop
add
cli
sbb
loope
cwtl
add
ds
jp
pop
pop
ret
jmp
arpl
pop
ret
mov
cwtl
icebp
clc
mov
out
xchg
inc
shl
xchg
rcr
and
hlt
imul
add
jle
scas
cmp
mov
sub
fsubrp
leave
mov
gs
jp
push
push
cmpsb
int3
insb
xchg
fdivrl
bnd
popa
cltd
xchg
push
cld
popl
push
stos
lock
jo
push
ret
and
or
out
inc
mov
add
int
mov
sub
ret
sbb
pop
sbb
stos
xchg
sub
or
jmp
ret
out
imul
xor
add
and
and
je
inc
dec
stos
pop
or
inc
mov
adc
mov
leave
or
jmp
xor
out
push
push
inc
sbbb
sbb
ret
ds
mov
push
mov
stos
mov
mov
sub
stos
sbb
les
and
in
daa
add
mov
ss
pop
xchg
xchg
sbb
nop
jns
rorl
add
xchg
sarb
mov
xchg
dec
shll
sub
pop
mov
xor
sub
imul
pop
dec
xor
push
mov
out
jg
jmp
outsl
or
jnp
data16
fldenv
int
mov
insl
jb
rolb
lahf
and
rcrl
call
pusha
inc
out
mov
int
sbb
jb
loop
mov
icebp
ljmp
dec
cmp
push
int3
rorb
arpl
stc
repnz
sbb
shrb
dec
out
ret
sbb
pushf
add
push
inc
mov
mov
imul
mov
scas
pushf
cs
sub
mov
xor
jecxz
xchg
enter
pusha
jl
cmp
add
jp
hlt
and
ss
rcll
and
enter
dec
and
jne
clc
orb
stos
ffreep
and
dec
adc
dec
pop
test
inc
xor
loopne
push
outsl
sub
dec
pop
mov
push
imul
pop
int3
mov
jmp
cmc
sub
ja
sub
mov
fldl
loope
pop
shll
frstor
es
add
ficoml
add
in
push
push
mov
imul
mov
pop
inc
cli
clc
lods
rep
xchg
inc
stc
aam
adc
pop
inc
sbb
dec
ret
repz
push
xchg
cmp
mov
mov
dec
mov
mov
cmc
rcll
in
arpl
fs
xchg
sbb
in
aas
js
ror
in
aas
xor
push
addb
cmp
mov
ficoms
inc
lcall
cmpsb
repz
jl
fucomip
lods
mul
addr16
xor
dec
pop
push
lock
jmp
cltd
sub
xchg
dec
xor
sti
into
js
movsb
sahf
add
mov
adc
scas
subb
sub
fists
imul
mov
ret
add
xchg
cmp
mov
mov
in
cmp
test
jle
mov
aam
mov
in
and
int3
clc
mov
addr16
xor
aas
insb
mov
adc
aad
cld
sub
mov
pusha
add
xchg
sahf
negb
mov
ret
pop
test
les
sub
xor
test
ljmp
je
adc
cmp
fstps
jb
cmc
cmp
cmp
mov
enter
mov
pop
xor
jmp
sbb
cwtl
frstor
jo
rorl
jb
and
repnz
mov
cmp
jg
fs
adc
push
mov
test
lahf
jb
push
jmp
mov
mov
lds
lods
pop
cmp
jo
inc
jnp
ss
lds
push
stc
pusha
sbb
test
stc
insb
add
test
bound
jle
cmpsl
and
mov
lds
jb
pushf
jecxz
and
lret
lret
pop
leave
mov
call
clc
sub
sbb
inc
push
pop
fcoms
ret
flds
mov
jle
fidivl
or
add
ftst
add
dec
rcrb
out
mov
cmp
adc
xchg
addr16
int3
stos
jo
std
pusha
cmp
mov
repnz
xchg
cld
into
sub
inc
repz
pxor
movsb
mov
pop
out
sbb
clc
add
ljmp
mov
ss
jb
and
repnz
addl
scas
lcall
cwtl
add
clc
js
mov
inc
mov
ss
es
cs
jl
shlb
mov
outsl
sbb
sub
movsb
sub
adc
cmpsb
xor
arpl
ds
data16
pop
cmp
adc
scas
es
jae
push
xchg
push
and
jno
or
mov
mov
pop
push
test
inc
shlb
ds
pop
or
shlb
inc
rcr
js
aas
loop
adc
dec
xchg
xor
outsb
idiv
mov
mov
mov
pushf
pusha
mov
fstpl
add
mov
out
pop
mov
cmc
ret
popa
inc
sub
mov
add
xchg
jmp
pop
jne
xchg
adc
inc
xor
into
jb
sub
push
pop
ds
lcall
out
sub
jne
lcall
and
fcompl
and
std
push
cmpsl
pop
cmpsb
pop
stc
push
mov
test
dec
out
ss
xchg
cs
pop
sar
jbe
imul
icebp
fcoms
pop
mov
mov
imul
cld
jnp
mov
add
xor
cmp
in
or
jle
pop
mov
cmpsl
mov
push
out
cld
andl
mov
pop
mov
outsb
add
xchg
movsl
pop
push
rolb
inc
push
insb
inc
sub
jg
movsl
mov
jecxz
jmp
call
icebp
mov
cld
sbb
mov
loop
jge
lds
in
mov
std
mov
mov
bnd
repz
aam
movsl
adc
push
shll
lods
arpl
pop
out
mov
and
sbb
shll
mov
jbe
aaa
imul
jae
orl
add
enter
sbb
xor
inc
push
xchg
cs
enter
mov
dec
jmp
clc
pop
shl
cmp
mov
in
xchg
aam
or
xchg
push
adc
nop
jl
push
adc
scas
lea
push
inc
fbld
insb
xchg
sub
or
rcrl
cwtl
push
movsl
cmp
ret
jae
insl
loope
adc
xchg
out
and
sbb
mov
pop
lods
mov
shrl
es
xor
mov
add
pop
mov
rclb
xchg
out
pop
addb
mov
xchg
js
mov
ljmp
aam
mov
nop
imul
add
inc
jo
pop
insl
movsl
push
xchg
divb
lods
inc
cmp
fisubl
sbb
mov
in
mov
jmp
lahf
inc
sub
push
out
sbb
jo
xor
xchg
hlt
jnp
push
test
cmpb
add
push
imul
xor
cltd
pop
lods
sbbb
aaa
out
xchg
push
fsubs
insl
dec
std
xchg
add
and
test
andb
jb
sub
xorl
mov
ret
jnp
pop
pop
xchg
dec
jmp
lea
pop
adc
das
push
daa
mov
dec
fadds
sub
mov
mov
xlat
rcrl
xor
mov
mov
aaa
sub
and
sbb
inc
fists
dec
shll
imul
xchg
dec
mov
xchg
out
shlb
adc
sub
push
add
es
jecxz
add
call
cmpsb
sbbb
mov
jae
sbb
test
ds
mov
in
mov
cmpsb
int3
push
aam
out
inc
adc
call
loop
inc
sub
mov
sub
mov
xchg
hlt
sbb
in
les
sbb
ret
mov
pop
xchg
insb
cmp
mov
shll
and
jg
inc
push
add
ljmp
sub
dec
add
xor
testl
jp
xor
clc
data16
adc
sbb
enter
or
lods
into
icebp
jnp
sbb
sub
out
add
add
fwait
and
pop
sbb
in
cs
jb
xchg
pop
es
push
and
aad
jl
inc
ficompl
cmpl
push
inc
cmp
pop
mov
negb
rolb
ds
jno
scas
cmpsb
ret
test
jno
sahf
mov
inc
sub
scas
xchg
adc
push
xchg
rorb
push
shld
test
ja
add
lret
and
addb
stos
adc
shr
ja
nop
addl
fwait
xchg
and
nop
sub
out
mov
imul
mov
daa
pop
cmc
jge
scas
push
test
aaa
add
popa
mov
or
push
lea
das
in
mov
cmp
push
xor
cltd
dec
sbb
inc
outsl
test
xlat
shrl
call
fisubs
jecxz
pop
repnz
or
test
cltd
mov
inc
aaa
lods
sbb
fdivp
cwtl
das
loopne
inc
aaa
pop
sti
mov
sahf
mov
data16
cwtl
add
sahf
push
push
mov
mov
lods
push
out
in
adc
in
adc
aad
jmp
cltd
ljmp
xchg
mov
sub
push
or
inc
popa
repnz
test
fs
popa
imul
push
and
outsl
mov
or
cmp
jg
stos
sbb
pusha
xchg
in
xor
fxch
cmp
test
jns
cli
push
adc
cwtl
shrl
repz
jecxz
je
std
cld
idivb
in
fsubl
push
mov
rclb
in
nop
sub
mov
mov
test
mov
and
add
push
push
ficoml
cs
clc
fmulp
sbb
sbb
out
jne
data16
sub
dec
imul
adc
movsb
xor
or
rcrl
xchg
mov
loopne
pop
push
cmp
sahf
xchg
mov
pop
cli
jecxz
inc
out
aaa
test
xchg
lahf
mov
jecxz
and
int
fisttpl
out
sub
pop
lret
xchg
add
push
pop
adc
sti
and
push
dec
popf
rorb
xorb
pop
sub
insb
popf
adcb
mov
xchg
jmp
daa
enter
roll
faddp
ret
in
loop
in
inc
cmp
mov
push
arpl
push
cmp
test
decl
push
xchg
pop
cld
cmp
test
lock
sbb
imul
jno
lcall
cmp
rcll
outsl
mov
and
loop
and
jmp
mov
or
pop
std
fsubrs
jo
mov
jecxz
out
daa
pusha
adc
pop
mov
jo
add
jo
rcl
jl
es
scas
sub
cmp
jno
push
push
add
jl
dec
and
or
movsl
adc
mov
aas
inc
push
adc
test
rcr
mov
fiaddl
inc
or
sbb
lock
mov
push
pushf
add
xchg
xor
fidivs
jnp
in
add
adc
xor
mov
or
push
jle
fs
in
dec
mov
adcl
cwtd
cmp
loop
push
mov
ret
int
adc
nopl
add
mov
inc
sbb
shlb
inc
outsl
xor
aas
test
lret
in
adc
adc
aaa
jae
add
xchg
stos
push
aas
fistpl
or
jecxz
das
lcall
push
mov
and
data16
cmc
jl
inc
int3
dec
cmp
sarb
lods
mov
add
sub
pop
xor
inc
into
mov
mov
orb
mov
aam
das
mov
pop
icebp
idivl
mov
sbb
imulb
sbb
cmp
fwait
mov
add
in
lcall
pop
fsubs
and
cmp
pop
dec
or
insl
push
pop
stc
xchg
add
cmp
pop
xlat
pop
cmp
push
jp
js
daa
xchg
or
adc
xchg
fsincos
in
inc
sbb
cmp
xchg
test
sbb
mov
or
adc
pop
sarb
outsl
adc
mov
test
fildl
inc
sub
loope
xor
pusha
lds
push
mov
sbb
lcall
hlt
fistpl
or
scas
jl
imul
and
ss
outsb
dec
mov
mov
jb
repz
add
lahf
stos
fcmove
dec
je
repz
push
les
fcoms
sarb
sub
xchg
stc
jge
and
bound
push
mov
shr
adc
push
mov
pop
lods
std
loop
in
pop
mov
loope
leave
push
add
xchg
xor
and
aam
jnp
mov
mov
xor
add
mov
inc
mov
inc
ret
clc
sbb
flds
lret
sub
divb
pop
subb
fs
pop
pushf
popa
pop
in
cmp
int3
lods
fwait
dec
imul
outsb
mov
dec
aas
xor
insl
mov
sub
shrb
adc
das
test
xlat
mov
xchg
push
xchg
icebp
and
imul
ljmp
jbe
repz
mov
fisttpll
jge
or
add
mov
int
add
in
xchg
das
mov
inc
mov
cltd
mov
popf
test
xchg
iret
mov
sbb
popf
push
flds
jbe
aas
mov
mov
inc
push
cmc
push
lret
mov
add
lret
loop
mov
add
outsl
movsb
mov
mov
shlb
pop
push
inc
sub
sbb
popf
mov
mov
test
push
rcr
mov
std
inc
jns
sbb
call
cld
mov
test
xchg
pop
cld
adc
xchg
cmc
xchg
and
jecxz
and
xor
dec
sub
call
dec
pop
mov
or
in
mov
cli
sarb
xchg
das
jl
stc
rcll
test
daa
mov
ljmp
inc
iret
add
or
ss
push
std
mov
adc
mov
jno
xor
scas
iret
dec
dec
dec
sub
cmpsl
push
pop
outsb
adc
or
ret
outsl
dec
daa
lock
adc
cltd
out
test
out
call
cwtl
in
pop
aad
cmp
bound
andb
mov
into
cmpl
in
adc
subb
cld
test
adc
xlat
dec
inc
cs
pop
sub
addr16
dec
push
addr16
shlb
fwait
sub
adc
cmp
sub
and
xchg
or
push
stc
add
push
pop
sbb
fcmovbe
out
rclb
push
movsl
push
jmp
sub
or
fisttpl
aam
push
inc
mov
and
rep
negl
xor
adc
imul
and
repnz
adc
shrl
xlat
repz
test
rorb
dec
test
pop
xlat
push
jo
xchg
sub
into
push
pop
sub
push
jle
pop
or
mov
ss
pop
inc
rolb
adc
inc
jecxz
push
movsl
outsl
arpl
mov
jle
and
mov
in
mov
iret
test
pop
icebp
cmc
jb
xchg
inc
sub
push
je
cltd
mov
pop
xor
adc
mov
pop
gs
or
imul
lret
jae
cmc
ss
in
sbb
les
jp
lret
mov
pop
and
rorb
dec
push
pop
in
leave
rclb
mov
into
adc
stc
mov
push
jns
sbb
addr16
dec
sbb
stos
into
test
imulb
mov
inc
fbld
lahf
xor
popf
push
mov
push
dec
cmpsb
push
lahf
sub
mov
push
push
mov
dec
pop
andb
fmul
sti
mov
mov
enter
push
inc
movb
xchg
jbe
or
mov
jbe
test
jmp
mov
aam
call
shll
test
int
xor
cltd
dec
xchg
sbb
ret
and
mov
mov
out
lret
mov
dec
sbb
clc
cltd
lods
xor
test
jmp
lds
jmp
fcmovb
popa
push
mov
scas
sbb
fmulp
je
xchg
call
loope
jmp
aas
adc
in
push
rcrb
in
addr16
pop
add
outsb
xor
jle
adc
sub
add
in
or
pop
out
dec
fists
and
ss
sar
xchg
clc
dec
xchg
out
scas
xor
insb
dec
xchg
stos
lock
sbb
lds
jecxz
or
pop
scas
in
adc
sub
iret
pop
hlt
decb
shlb
aaa
mov
xor
and
sar
sti
or
lcall
cmp
addr16
sub
pop
out
push
cltd
lock
mov
pop
push
jne
cmp
imul
dec
das
aad
movsl
jb
mov
test
mov
insl
addr16
dec
test
cli
fldl
repz
or
add
lcall
cmp
pop
ret
mov
pushf
lcall
cltd
mov
out
scas
bound
jmp
gs
jge
cld
fmuls
lea
inc
stos
mov
jo
shlb
pop
dec
ret
pop
dec
add
lahf
adc
jne
int3
mov
ja
lods
adc
lods
into
jp
push
or
push
cmpsl
ficomps
push
ss
mov
xor
pop
pop
inc
pop
scas
out
insl
sahf
dec
inc
or
fwait
mov
lods
and
or
xlat
cmp
sbb
add
push
cmpsb
cs
mov
mov
cmp
out
dec
loope
rcr
fildll
popf
xchg
jecxz
les
push
sub
pop
out
push
repz
cltd
insl
jmp
xchg
stc
xor
arpl
cmp
das
movsb
in
push
out
sbb
mov
insl
mov
loope
or
mov
js
shl
fnstsw
test
mov
jecxz
add
cmpsl
dec
pop
insl
and
jp
stos
xor
cmp
mov
or
cmc
sbb
pop
jno
test
push
adc
iret
adc
mov
out
cmp
jl
mov
jb
movsb
cmp
pop
or
or
sti
aad
testb
jb
je
stos
inc
fldt
out
mov
and
aad
jo
repnz
cld
cmpsb
pop
mov
xchg
mov
es
mov
loop
pop
mov
sbb
ds
inc
pusha
lods
dec
cwtl
inc
lea
cmp
push
adc
leave
shl
xor
push
mov
cmc
call
push
aam
repnz
mov
push
jae
push
fcoml
push
clc
sti
pop
inc
out
mov
nop
or
jg
aam
sti
gs
pusha
fadd
mov
mov
xor
and
mov
out
andl
push
mov
seto
out
jb
push
addr16
lcall
add
pop
adc
stc
div
mov
je
xlat
outsb
sbb
lcall
mov
ror
scas
lret
jo
arpl
or
lcall
pop
iret
jge
ret
in
and
popf
lds
icebp
es
sbb
jle
inc
es
xchg
push
jge
cmc
pusha
or
mov
cmpsl
out
or
out
movsl
int3
ffreep
mov
add
testl
negl
cltd
movsb
sbb
je
popa
jns
in
xor
cwtl
mov
add
jmp
int
sub
loope
push
in
out
imul
call
add
push
out
rcl
lret
inc
mov
jp
sahf
mov
or
push
and
mov
cwtl
mov
cmp
or
pop
mov
pusha
test
shrl
sub
dec
stos
adc
mov
popf
test
std
stos
fdivrl
ret
call
arpl
xchg
sbb
mov
aam
fstpt
push
insl
push
jmp
fstpl
outsb
icebp
test
adc
xchg
xor
and
and
xchg
cmp
add
mov
pop
mul
faddp
sbb
jg
xchg
orl
or
jne
fimuls
and
jb
adc
inc
stos
cwtl
pusha
in
xor
cmc
and
test
jle
cmpsl
pushf
adc
nop
add
xchg
jne
xchg
in
adc
in
sti
dec
into
mov
xchg
scas
stos
mov
addr16
mov
int
lods
std
and
fisubrs
cmp
jecxz
aaa
xchg
shlb
dec
pop
subb
in
popa
lea
add
pop
adc
adc
xchg
cmpsl
dec
and
dec
adc
xor
sub
lds
cvtps2pd
lock
aas
adc
imul
mov
aad
xchg
pop
repnz
or
pop
das
xor
mov
aaa
dec
cmp
mov
jae
push
daa
mov
lret
cmp
daa
mov
push
and
mov
into
gs
dec
pop
scas
leave
es
jno
mov
aad
repz
cmp
loop
add
pop
pop
or
shrl
sbb
cmpsl
jnp
movsb
lock
push
cmpsl
popa
jp
adc
lret
xchg
push
popa
lods
stc
jmp
sub
test
pop
xor
out
cs
xor
stc
pop
pop
xor
dec
sub
inc
pushf
jne
negb
lds
mov
dec
jne
push
fsub
out
lcall
jns
push
dec
or
xlat
sbb
cmp
faddl
dec
mov
pop
ret
scas
les
out
xchg
jecxz
aaa
xchg
imul
mov
xchg
hlt
nop
sti
jae
mov
hlt
push
jnp
jo
lahf
jb
xchg
push
insl
sarb
movsl
sbb
mov
sti
mov
push
in
mov
mov
jae
inc
inc
fcompl
icebp
adc
fmull
sub
out
mov
je
sub
add
out
lods
dec
xor
inc
movsl
icebp
add
hlt
lock
dec
lahf
gs
daa
cmp
in
int
cmpsl
mov
notb
xchg
or
mov
mov
add
ljmp
or
and
add
in
xlat
push
lds
addr16
std
in
or
sbb
call
add
cmpsb
inc
xorb
and
add
inc
sbb
je
aaa
or
icebp
cs
addb
jg
dec
inc
fistpll
adc
dec
cmc
stos
xchg
scas
inc
lock
cmp
mov
stos
outsb
aas
out
or
into
out
fstl
mov
fcmovbe
jbe
xchg
dec
jge
push
ret
in
jo
add
jbe
pop
loop
sub
fdivs
ss
push
std
inc
scas
xchg
and
adc
or
ljmp
xchg
mov
cwtl
mov
pop
mov
or
add
lods
pusha
dec
inc
pop
cmp
jnp
das
inc
mov
pop
jns
or
mov
jo
push
or
push
in
mov
cwtl
int
cmp
inc
ret
cmp
insb
push
push
xchg
xor
mov
test
int
into
aam
fnstsw
int3
jmp
or
xor
subl
adc
dec
adc
dec
in
sbb
mov
lds
insl
and
push
jecxz
hlt
jecxz
sub
aad
cmc
push
loope
cwtl
sarb
and
mov
fwait
test
lock
pop
mov
icebp
hlt
push
sbb
mov
arpl
mov
or
fisttpll
repnz
jns
mov
xor
inc
and
sub
push
cmp
sbb
xchg
adc
xchg
shrb
sbb
inc
scas
adc
cmpsl
adc
mov
adc
repnz
push
loopne
ret
test
jne
mov
lods
call
dec
adc
add
push
jg
imul
dec
pop
roll
pop
loope
lret
pop
arpl
or
xchg
popf
xor
xchg
xlat
pcmpeqd
mov
imul
pop
inc
sti
fstpl
inc
lods
mov
jns
popl
inc
sahf
adc
xchg
mov
ljmp
jb
sarl
adc
dec
adc
int3
push
xchg
fnstsw
inc
scas
int
mov
cs
sbb
js
sub
sbb
lret
or
xor
in
jno
test
lea
js
inc
es
frstor
cwtl
or
jno
adc
add
out
fists
inc
fiaddl
adcb
push
and
pop
repnz
in
jb
loope
addr16
out
push
xor
nopl
pop
xor
insl
pop
lea
in
push
dec
scas
pop
lods
and
insl
mov
fisubrs
cmp
add
mov
enter
mov
sbb
mov
add
testb
aaa
sbb
mov
sbb
aaa
inc
arpl
jb
stos
sub
and
mov
sbb
movhps
fcmovnbe
push
sbb
imul
sub
mov
mov
inc
les
cmp
sahf
je
enter
rcrb
mov
fildl
shufps
push
dec
adc
cwtl
pop
mov
test
into
dec
ret
rcl
fldt
rcrb
and
lea
dec
adc
sub
je
and
loop
lock
mov
push
out
std
loope
mov
fimuls
sbb
shll
int
leave
mov
and
mov
in
test
mov
pop
mov
ss
push
xor
icebp
pop
cmp
mov
insb
outsl
sti
xor
dec
fs
jo
jle
adc
jns
adc
nop
push
jae
cli
mov
push
jge
jmp
dec
fsubs
in
or
imul
in
test
icebp
jb
inc
xchg
aad
lret
aaa
and
int
and
xor
cmp
lock
cmp
sti
jbe
inc
test
pop
test
mov
jbe
adc
inc
dec
repz
xchg
mov
mov
mov
and
jbe
jo
add
pop
pop
add
add
andl
jg
cmpsb
push
sbb
push
insl
and
outsb
out
sub
cmc
andb
lock
clc
clc
fidivs
sbb
cmp
rol
mov
addr16
lock
aas
pop
imul
in
ljmp
add
cmp
xchg
adc
daa
out
in
jnp
hlt
pop
pop
sub
push
arpl
push
mov
xacquire
pop
out
inc
push
dec
inc
jae
push
cmpsl
mov
imul
xchg
aad
sbb
adc
mov
ret
mov
push
or
rcll
dec
pop
jmp
add
add
push
and
pusha
test
in
pop
pusha
mov
jge
std
cmpsb
call
dec
fdivrl
sbb
jb
jmp
cld
in
das
out
push
pop
jne
push
stc
negl
rcl
pop
inc
nop
lds
inc
lods
jl
sahf
pop
scas
adcl
sbb
xor
in
rol
out
pop
jmp
push
fwait
inc
in
push
cmpw
dec
stos
jp
sub
cltd
insl
pop
pop
pmullw
stc
xchg
push
or
adc
xchg
dec
mov
int3
mov
mov
cs
mov
sbb
add
int
test
inc
stc
sub
loopne
cmp
push
push
or
sub
inc
mov
mov
and
jge
fld
dec
cmp
cmp
imul
aas
adc
ljmp
xchg
push
idivl
sub
cmc
pop
lahf
xchg
flds
cmp
jmp
aaa
addr16
repnz
jge
mov
dec
push
sti
mov
mov
mov
inc
mov
pop
fimuls
out
mov
insl
and
sub
loopne
leave
iret
daa
fisubrs
push
incb
scas
dec
pop
pop
aaa
push
imul
leave
push
mov
nop
dec
push
xchg
movsl
ds
xchg
into
jmp
mov
cmp
xchg
and
into
insb
or
adc
bnd
inc
hlt
jmp
lods
das
mov
gs
or
and
out
mov
xchg
idivl
xor
popf
and
push
inc
pop
pop
insb
fsts
adc
stos
enter
cmpsb
jg
push
xchg
nop
adc
pop
dec
lods
outsb
pushf
add
xchg
ret
inc
mov
popa
loope
iret
dec
enter
dec
cwtl
test
mov
and
rcrb
scas
test
stos
mov
and
data16
outsl
leave
movl
ds
jbe
or
jno
mov
dec
hlt
lea
dec
push
and
ret
jp
sub
sti
inc
out
pop
mov
add
cld
sub
insl
adc
pop
hlt
lods
xchg
or
sbb
xchg
xchg
js
push
push
imul
in
insl
fsubr
inc
in
int
push
xchg
ret
sub
testb
in
mov
popa
cs
push
dec
ss
mov
mov
push
fcompl
popa
out
inc
mov
int3
ficoml
fstps
leave
dec
lock
ret
rcr
mov
fcomi
adc
add
adc
imul
xchg
mov
push
xchg
fsubrs
cs
fisttpll
into
mov
adc
movb
push
cltd
pusha
adc
mov
mov
xor
into
in
pop
adc
hlt
add
mov
popf
data16
push
je
lock
jae
lret
inc
icebp
jg
jecxz
and
jge
scas
sbb
push
out
daa
mov
xchg
or
loope
cld
xor
xor
mov
and
adc
sbb
dec
push
push
shll
out
xor
sbb
scas
mov
xlat
movsl
dec
jp,pt
or
lock
divl
cmp
dec
or
xchg
adc
and
fiadds
lcall
bound
rclb
cmpsl
cld
sub
add
mov
lcall
jae
shrl
lea
mov
mov
or
cmp
jge
sub
mov
in
jmp
rorl
sbb
mov
pusha
cmp
push
pop
mov
adc
add
push
adc
in
push
xchg
ret
or
addr16
test
dec
aas
add
inc
imull
adc
fsubp
mov
push
dec
adc
sti
or
mov
pop
icebp
adc
cld
adc
mov
outsl
and
fisubrl
jp
fmul
push
cld
fcoml
test
and
xchg
lods
fs
mov
sub
shlb
pop
testl
js
mov
inc
cmp
mov
inc
das
rcrb
mov
lock
mov
mov
mov
adc
or
or
repz
les
adc
insl
sub
das
sbb
subb
testb
ret
sahf
mov
xor
and
inc
pop
or
push
cmpsb
xchg
sbb
lds
xchg
inc
adc
outsb
aaa
push
rolb
jbe
std
pop
lahf
push
roll
test
outsl
sarl
xorl
daa
push
cmp
xor
mov
pop
or
mov
cmp
jnp
out
jg
lock
scas
sub
out
mov
test
adc
pop
inc
pusha
cmp
pop
subl
add
push
mov
sbbb
cmp
mov
fsubs
inc
cld
sbb
jae
adc
sub
cmpsl
out
in
sbb
arpl
test
mov
jecxz
xchg
sub
subl
test
in
cmp
mov
popa
loopne
dec
andl
js
and
and
aam
sbb
rorb
lods
pusha
out
pop
test
pop
pop
or
stos
xor
and
pop
arpl
scas
inc
mov
push
imul
outsb
mov
popa
push
in
aam
arpl
cmc
inc
xchg
das
cli
cmpsb
sub
mov
mov
repnz
loopne
rol
inc
mov
pop
sub
mov
mov
iret
xchg
xchg
or
inc
sbb
mov
sbb
into
pushl
xor
fdivr
aas
call
loopne
xor
pop
jns
xchg
adc
cltd
sbb
notl
xor
inc
loopne
add
push
shlb
movsl
push
push
or
push
fistl
cmc
jae
es
adcb
jl
dec
cmc
mov
pop
and
fcomps
inc
fbstp
data16
call
xchg
ljmp
insl
int
xchg
sub
loop
jbe
and
xor
loop
mov
mov
lds
push
sbb
sti
sbb
sarb
and
jb
addb
gs
sub
das
cli
adc
mov
lods
call
int3
movsl
pop
pop
push
inc
movsl
jl
push
jbe
in
mov
imul
mov
xor
mov
push
in
sub
ljmp
dec
mov
fildl
negl
sbb
cmpsl
push
sub
pushf
outsl
fsub
inc
add
inc
imul
mov
in
and
or
sbb
imul
dec
xor
mov
aad
or
dec
insl
push
xor
xchg
add
into
sub
jb
in
int3
lock
hlt
dec
scas
mov
int
es
outsl
cmp
ds
std
shlb
or
lahf
popa
es
cmc
ret
mov
imul
mov
xchg
mov
pop
mov
add
dec
inc
pusha
outsb
xchg
fimull
pop
out
lret
cmp
mov
adc
jp
loopne
mov
add
push
xor
jae
fisubrl
dec
ret
add
test
jns
mov
dec
cmp
aas
and
jle
shlb
and
xchg
int
lcall
ja
cwtl
inc
insb
jnp
cmp
adc
dec
xchg
push
movsl
test
push
cwtl
sub
inc
gs
add
mov
orb
repz
xchg
mov
push
lock
mov
sti
call
jo
fisttpl
test
xor
mov
pop
mov
xchg
mov
inc
movsb
xchg
jp
and
inc
sub
xchg
cmpb
pop
enter
stos
lahf
xchg
mov
add
cmp
inc
loop
and
push
sbb
mov
mov
push
addr16
xchg
sub
in
cmp
xchg
adc
faddl
add
sbb
mov
pop
nop
pop
insl
push
in
inc
mov
mov
ljmp
fcomps
dec
pmuludq
cld
cmp
aad
jg
xchg
sbb
mov
cmp
sahf
in
push
int3
out
aaa
inc
cmpsl
rcrl
out
js
dec
push
mov
cmp
pop
fildll
adc
cli
push
addb
mov
push
xlat
mov
push
jge
fadds
test
iret
jp
cltd
shrb
ljmp
mov
iret
and
inc
and
xchg
rol
and
cmc
mov
mov
movsb
add
fmul
cmpsb
and
pop
cmp
and
mov
xor
sbbb
sub
xchg
push
in
clc
das
mov
adc
insl
sbb
mov
inc
stos
jmp
sbb
icebp
xchg
sti
xor
pop
fwait
int
push
loope
shl
sub
mov
rolb
cmp
lea
shrl
lcall
out
sahf
outsb
dec
xor
xlat
decb
add
jbe
and
lret
push
sbb
jecxz
pusha
sub
xlat
test
add
lahf
pop
push
addr16
xor
jmp
mov
or
jno
push
push
test
fsubs
icebp
sbb
xchg
cmp
push
mov
mov
aaa
das
dec
mov
or
sti
fcomps
scas
fldt
jl
rcrb
aad
out
push
sbb
adc
mov
add
xor
mov
repnz
out
pop
sub
cmpb
sub
scas
xchg
lods
stos
jae
pusha
cs
lods
xor
loopne
mov
cmp
jecxz
cld
sub
mov
shlb
mov
add
addb
clc
xorb
ja
sub
mov
sbb
testl
mov
bts
in
sbb
insl
push
push
imul
gs
lret
inc
or
jae
dec
mov
push
lcall
and
inc
mov
sub
aaa
mov
add
repnz
shl
test
sahf
mov
pop
cmpsl
inc
add
mov
xchg
movsb
and
jl
jnp
nop
arpl
cmp
inc
fneni(8087
jne
mov
add
shlb
mov
add
ljmp
add
test
inc
test
dec
mov
adc
fstpl
loop
mov
xor
hlt
movsl
push
dec
adc
lock
cmp
pop
or
mov
mov
jg
push
pop
dec
sahf
testb
pop
inc
mov
cmp
call
jge
xchg
push
pop
pop
push
sbb
loope
inc
aaa
cmpsb
ja
lret
dec
cltd
mov
movsb
ss
iret
in
andb
push
pop
lahf
sub
push
sbb
das
push
mov
clc
jae
cmp
dec
push
js
mov
gs
inc
xchg
pushf
mov
dec
ss
jbe
or
dec
add
adc
pop
push
sbb
movsl
cld
into
ja
rcl
gs
sub
inc
adc
mov
pop
cmp
mov
call
daa
mov
sahf
je
adc
cmpsl
test
iret
icebp
in
mov
lods
pop
inc
in
sbb
movsb
or
cmpsb
and
pop
inc
xor
xchg
or
add
int3
mov
mov
adc
sub
xor
sbb
sbb
dec
insl
pop
mov
rcrl
mov
sub
cld
or
ljmp
stos
popa
mov
addl
jne
inc
loope
divl
rol
roll
out
fwait
or
sub
push
rcll
mov
cs
inc
dec
test
xchg
cmp
cmp
dec
dec
pop
cmpsb
jnp
imul
inc
jge
pop
jmp
imul
popa
adc
pop
cmp
inc
cmp
rcpps
inc
xor
and
outsb
adc
mov
mov
dec
orb
pushw
les
dec
dec
inc
inc
add
popf
mov
mov
cwtl
pop
sbb
in
fwait
pop
mov
cmp
and
or
sub
inc
cli
aad
push
push
sbb
insl
push
mov
loope
mov
ja
inc
rol
out
out
scas
sub
mov
movsl
lods
inc
sbb
xchg
and
hlt
addr16
jecxz
sbb
xchg
leave
enter
in
das
sahf
fbstp
adc
pop
cltd
outsl
loop
mov
sbb
add
je
into
lea
cmp
or
mov
mov
std
cmp
std
fstpt
mov
mov
sbb
inc
xchg
cmpsb
dec
aas
imul
push
daa
mov
fisubrl
imulb
rolb
jno
cld
out
outsl
cmp
in
sub
or
or
sahf
ss
jnp
fldl
push
pop
mov
shl
pusha
or
mov
cmc
out
fnstcw
jmp
jl
js
popa
scas
mov
xor
icebp
lock
hlt
ljmp
enter
mov
imul
int3
fwait
or
loop
sbb
mov
jle
pop
pop
adcb
daa
jmp
mov
sbb
xchg
fiadds
ljmp
in
push
test
jmp
mov
fs
mov
repz
add
sub
cli
cs
addr16
lods
leave
mov
pop
fcmovne
mov
jb
push
shl
negl
das
push
out
jl
or
or
movsb
or
outsb
fildll
pop
or
mov
testb
jno
cmp
aam
enter
cmp
xor
insb
clc
out
add
mov
dec
push
lret
stc
leave
in
lds
jnp
jmp
and
xchg
jle
xchg
cmp
cli
xchg
es
lea
jge
test
rol
pop
cmp
rolb
or
adc
inc
popa
cltd
push
or
or
inc
imul
flds
mov
aam
or
sbb
fdivs
lds
out
xchg
mov
jae
mov
idivb
jecxz
inc
push
adc
mov
or
int
xor
xor
mov
add
outsl
int
cmp
dec
jno
popf
outsb
iret
pop
jmp
xor
shll
sarb
mov
test
leave
cld
clc
mov
jge
inc
mov
dec
jp
and
ret
and
mov
add
cmp
cld
int3
add
jbe
inc
cmc
lods
stos
les
fwait
call
adc
mov
ret
aam
mov
jnp
push
mov
sbb
loope
push
xor
dec
fidivrl
outsb
arpl
fs
repnz
pop
mov
jle
mov
jl
ret
insb
xchg
ret
mov
out
test
xor
lock
pop
mov
cmc
mov
pop
mov
call
adc
mov
mov
dec
sbb
or
sub
push
push
push
repz
fsubs
mov
ljmp
and
in
mov
fcoml
xchg
cmp
sub
mov
cld
adc
out
adc
or
mov
cmp
jns
sbb
add
jmp
repz
mov
jae
imul
call
loop
ficomps
ficoml
jno
xchg
cwtl
and
cs
sub
xchg
ffree
test
jge
dec
xor
and
mov
mov
icebp
pop
rcr
cmp
add
dec
jg
pop
push
sti
popf
pop
push
xchg
ja
enter
mov
dec
int
xchg
mov
inc
out
cmc
push
mov
sbbb
xor
cmp
adc
jle
xchg
inc
in
xchg
repz
add
add
fsts
and
sub
push
daa
into
mov
addr16
pop
dec
mov
inc
jmp
push
ds
in
cld
std
or
fcomi
mov
mov
mov
xchg
xor
mov
or
and
out
stos
rcl
sahf
js
sbb
mov
mov
ds
add
mov
cli
punpckhwd
inc
dec
pushf
push
xchg
stc
fmull
sbb
mov
fistps
jbe
cmp
iret
aad
jecxz
mov
cltd
pop
jmp
inc
clc
jb
or
xchg
and
mov
sbb
xchg
jmp
or
push
sub
pop
xchg
adc
sub
mov
lcall
test
lret
loopne
adc
jno
sub
or
lahf
push
negl
adc
lcall
loopne
ret
or
mov
int
or
cli
in
into
stos
cmp
faddl
jb
cmp
push
sbb
jecxz
jae
popa
mov
push
jo
adc
clc
and
sub
movsb
pop
sbb
enter
xchg
push
lods
pop
cmpb
and
shlw
mov
fisubrl
or
pusha
jg
fisttps
andb
ds
pop
leave
push
dec
out
sbb
addr16
mov
leave
data16
xorb
pusha
jne
inc
scas
mov
test
fistpll
por
fisttpll
push
cld
jne
aas
ja
jle
xor
insl
fsts
cmpsl
or
stc
inc
loop
inc
loop
cmp
mov
sbb
cmp
and
fistps
sarb
out
repnz
mov
pop
dec
mov
bsf
cli
shlb
mov
bound
iret
fwait
xor
and
ret
idivb
inc
test
sbb
cmp
mov
stc
push
jno
mov
lea
push
sbb
dec
les
in
andl
sub
pop
inc
outsb
ljmp
cld
xorb
popa
lock
es
fidivrl
push
adc
bound
sub
std
jae
mov
cltd
lds
leave
xchg
cwtl
jae
push
jno
xor
testb
fcmovbe
aaa
rcl
subb
xchg
add
pop
inc
pop
sub
in
jo
out
adc
jp
dec
sbb
fwait
enter
cmpsl
rorb
push
subl
jns
adc
pusha
jg
in
cmp
divl
push
adc
lock
pop
push
jnp
ds
and
jle
rorl
mov
push
add
dec
imul
lret
mov
xchg
adcl
inc
fsubrs
mov
ds
cmp
jns
and
push
aas
movsl
or
cmp
and
push
or
push
popf
mov
ffreep
jl
push
xchg
add
les
mov
inc
xchg
jne
push
inc
iret
or
aaa
jl
mov
fnstenv
out
arpl
or
inc
out
xor
sahf
push
movsl
aas
pop
shrb
sarb
pop
aas
aam
xlat
cld
ja
out
sub
dec
push
jl
in
xor
daa
lcall
pop
pop
adc
push
dec
cld
and
push
dec
cmp
jle,pn
out
cmc
jae
icebp
and
stos
sub
xchg
lds
or
aam
aad
or
aam
inc
push
sbb
test
aas
cmpsl
dec
insl
fimuls
dec
fstpl
sbb
sub
mov
mov
mov
fiadds
outsl
jle
jo
lods
mov
push
into
ss
sub
data16
outsl
scas
jnp
xchg
fisttps
idiv
mov
mov
add
xor
in
call
cmp
jbe
cmp
clc
aaa
or
push
push
dec
insl
pusha
fcomip
lds
xor
jb
mov
mov
jnp
jnp
sub
push
mov
lock
clc
pop
cmp
lcall
lret
jo
mov
pop
adc
or
push
clc
adc
leave
call
dec
and
cld
addr16
jns
inc
mov
negl
ds
fwait
out
push
test
push
fsubs
bound
jg
add
les
xchg
jge
imul
fildl
adc
sub
in
add
push
mov
dec
sbb
jns
jae
roll
dec
dec
xor
adc
pop
mov
lods
pop
or
adcl
stc
int
sbb
or
pop
test
dec
inc
mov
and
cwtl
and
imul
push
hlt
add
fwait
jo
jle
out
adc
xchg
and
fstl
rep
jge
addr16
fadd
jmp
mov
cwtl
out
pop
stos
repnz
clc
pop
and
ljmp
aam
fmuls
repz
scas
mov
sub
sub
sub
fs
or
fiadds
push
mov
loope
js
or
in
mov
ret
mov
xchg
and
fisttps
push
repnz
dec
xchg
in
jae
into
and
fs
and
mov
clc
or
xchg
pop
mov
mov
sbb
pop
sbb
cmc
inc
mov
jo
jns
out
xchg
lret
clc
lock
ficoml
mov
xchg
or
in
cld
xchg
mov
mov
and
sahf
jg
popa
xchg
mov
lret
gs
jp
xor
fs
adc
inc
icebp
decb
adcl
xchg
sbb
add
enter
daa
push
pop
jmp
lds
out
xchg
mov
adc
adc
or
jg
lods
mov
lahf
mov
or
fwait
xchg
add
cld
fcomip
dec
jae
or
pop
push
and
push
mov
pop
xchg
repz
adc
jmp
hlt
pop
xor
outsl
adc
pop
jo
mov
pop
xchg
iret
sbb
out
lea
dec
xlat
insl
sub
add
scas
adc
jno
jae
les
and
push
testl
push
push
test
jecxz
sbb
fwait
and
in
and
mov
enter
flds
and
in
les
addl
lods
lock
fidivl
sbb
mov
addr16
xchg
mov
xchg
push
mov
mov
ss
xchg
imull
sub
xor
or
jl
mov
insl
sbb
mulb
stos
sti
cli
arpl
shrb
cmp
pop
pop
xchg
and
pop
cmp
push
xor
mov
cmpsl
mov
jns
sub
insb
les
xor
push
and
popa
push
adc
lods
rorl
inc
fucom
pop
or
incb
inc
popf
rcrb
jmp
push
aam
divl
inc
mov
mov
inc
sub
rcl
lock
data16
pop
in
cmpsb
adcb
adc
in
outsl
fld1
stos
xor
mov
aas
iret
adc
jne
dec
pop
pop
jo
fidivs
or
call
lcall
mov
rorb
cmp
js
repnz
jmp
idivl
mov
loopne
or
popa
pop
cmpsl
cmc
aad
mov
pop
movsb
dec
cmpsb
sub
xchg
fadds
ret
cmp
pop
jns
jbe
or
dec
mov
mov
in
shrb
cmp
cli
xlat
fwait
andb
and
rcrb
das
xchg
or
xorb
and
pop
adc
fstl
push
cmp
mov
loope
test
and
je
add
push
scas
xchg
jno
push
mov
and
and
jns
repnz
rolb
in
out
push
leave
imul
cmpsb
push
into
inc
rcll
mov
ja
out
test
push
push
sbb
and
xlat
xchg
movsb
mov
add
sbb
ret
jecxz
add
or
cmpsl
or
push
loop
int
repz
imul
mov
je
cmp
mov
in
rcll
inc
fdiv
push
and
call
pop
fstpl
mov
jo
aam
test
imul
xchg
lret
stos
adc
xchg
sbb
add
outsb
aaa
add
xor
pop
and
sahf
call
lods
fwait
test
push
xorl
and
pop
mov
sub
push
andb
test
bound
fstp
lds
ss
shlb
jp
test
arpl
add
out
and
icebp
mov
dec
add
xchg
aam
xlat
outsb
push
repz
ljmp
push
add
test
dec
ret
shlb
cmp
repnz
push
es
add
lock
cmp
adc
cmc
ret
fdivrs
dec
inc
add
dec
xchg
insb
pop
adc
xchg
add
ret
jmp
imul
push
sbb
add
cmpsb
pop
call
adc
jo
xchg
int3
pop
xchg
lods
js
pop
fidivs
jmp
sub
lea
and
inc
fstpt
lret
jae
jbe
imull
loop
add
popf
cs
lods
repz
mov
rorl
mov
ja
outsl
addr16
ret
cmpsl
js
imul
fs
jo
in
xchg
xchg
mov
jbe
and
add
adc
pop
lsl
movb
lea
pop
aas
xchg
jb
pop
mov
mov
in
sbb
in
les
lock
mov
mov
mov
cmp
push
mov
popf
movsl
and
cli
add
rcrl
rcll
inc
outsb
push
and
push
and
or
lods
repnz
scas
pop
cwtl
add
add
aaa
lock
ss
lahf
and
xchg
inc
adc
loope
jne
push
pop
jp
mov
cli
mov
je
pop
cld
cmc
add
adc
lahf
mov
fdivrs
movsl
hlt
popa
cmpsb
sbb
push
sbbl
adc
jae
shr
loop
not
rolb
js
and
enter
mov
sbb
push
mov
mov
ja
sbb
cltd
repz
fildl
jp
push
out
cwtl
jp
test
push
sbb
pop
push
cli
pop
mov
xchg
dec
in
xchg
add
dec
in
xchg
pop
stc
sbb
or
xchg
cmpsb
push
out
mov
popa
push
shrl
and
inc
data16
push
enter
and
adc
repnz
dec
imul
pop
pop
mov
cs
out
xchg
cmpb
mov
mov
inc
lahf
bound
inc
xchg
xor
mov
xor
out
idivb
fsubrl
js
lret
cmpsl
gs
addr16
cmp
pop
daa
int
lahf
xor
lods
sub
outsl
pop
xor
mov
pusha
cmpsl
pop
cmc
jbe
rclb
nop
lock
pop
sub
dec
xchg
xor
arpl
insb
push
lods
mov
popa
dec
and
hlt
and
and
cmp
fisubrl
cmp
sbb
stos
push
popa
scas
mov
ret
fstpl
dec
jns
inc
dec
jg
push
stos
cli
dec
jo
mov
cmp
cmp
movsl
mov
adc
dec
mov
enter
pop
fnstcw
test
es
enter
mov
fldenv
sarb
ret
rcrl
cmc
push
xchg
nop
xchg
cmp
hlt
into
ficoml
out
cmpsb
pop
cli
mov
scas
sarb
pop
aaa
mov
mov
push
xchg
pop
xor
add
jnp
pop
sbb
js
mov
add
pop
jae
push
mov
mov
mov
add
int
das
or
pop
adc
sarl
jns
push
out
adc
lods
stos
or
es
sub
movsb
std
mov
sahf
add
or
sbb
pop
add
mov
jl
mov
or
add
sbb
lahf
dec
sbb
xor
xchg
es
mov
adc
push
or
inc
dec
mov
ss
ret
push
xchg
pop
sar
sub
push
xchg
data16
mov
dec
jnp
outsl
and
repnz
ss
ficoml
jp
add
lock
inc
cltd
test
icebp
iret
or
repnz
pop
jp
cs
cmp
jo
int
pop
into
xlat
subl
out
inc
je
shr
cli
ss
loop
lahf
jne
inc
pop
push
cld
loopne
cmpsb
stos
xlat
xor
push
scas
ja
pop
fstpt
and
mov
jp
fst
push
cmp
mov
sti
imul
sub
fucomp
adc
xor
fisttpl
hlt
mov
pop
cltd
mov
mov
stos
mov
mov
in
cmovge
insl
loop
add
shrb
sub
sbb
jmp
push
mov
pop
lahf
fadds
inc
fstp
mov
cs
cmpb
cmp
mov
mov
dec
lret
mov
cwtl
testb
ret
addr16
es
dec
xlat
dec
jle
test
adc
sbb
mov
stos
decb
aas
popf
xlat
icebp
ja
ret
lret
pop
jg
mov
push
push
xchg
das
lret
adc
xlat
sub
push
je
mov
hlt
dec
sbb
nop
jecxz
jg
lds
pop
add
scas
jge
jmp
and
orb
bound
bound
dec
push
jp
mov
xchg
outsb
lods
xchg
jb
add
and
es
dec
mov
out
inc
divb
inc
ficompl
or
jp
icebp
xlat
pop
pop
in
fsubrl
ret
xchg
or
or
sub
rorl
lods
push
packsswb
jge
xor
sbb
pusha
add
fimull
inc
or
call
xor
lret
xor
insl
fadds
ds
pop
dec
cmp
jmp
test
rcrl
lret
scas
dec
roll
mov
sub
pop
lret
and
push
mulb
jne
jl
negl
sti
push
enter
mov
fisubl
pop
leave
cli
cmp
mov
inc
mov
jne
loopne
daa
or
pop
fxch
mov
lcall
rclb
xor
cmp
cmp
push
add
cmc
addr16
mov
adc
lock
ljmp
jl
ds
jge
or
test
cltd
inc
xchg
mov
cmp
cmp
out
fwait
insl
cmp
jbe
jmp
cmp
mov
std
outsl
test
xchg
jp
mov
cmc
pop
fsubp
test
lcall
push
lods
mov
mov
scas
inc
jge
cli
xor
dec
ss
xchg
pusha
xchg
cs
cmp
aas
and
lods
mov
adc
jno
idivb
sub
jb
mov
jge
mov
shll
xorb
xchg
stc
shrb
dec
push
add
pop
das
rol
cwtl
data16
adc
test
cltd
or
inc
sub
xchg
xor
pop
stc
sbb
popf
js
scas
pop
jo
lds
outsb
and
pop
imul
jle
ret
pop
cmp
gs
xchg
mov
into
xchg
int3
add
xchg
je
das
ret
or
pop
dec
add
dec
jb
jno
mov
outsl
pop
rcll
xchg
sub
test
in
hlt
adc
ljmp
xlat
adc
add
xor
mov
and
hlt
shl
inc
pop
and
data16
dec
addr16
mov
xlat
adc
cs
push
ss
test
pop
icebp
loop
ret
mov
test
movsl
int3
jnp
nop
movsb
adc
dec
aaa
fiadds
cltd
fsubrs
mov
pop
jp
aad
sub
cmp
jae
fiadds
xchg
aam
mov
jmp
push
mov
ja
cmovns
cvtdq2ps
pop
fimuls
mov
jne
pop
idivb
push
scas
mov
jb
lods
xor
dec
mov
inc
cmp
or
test
bound
adcb
inc
dec
sub
xchg
mov
sub
sub
inc
mov
cwtl
pusha
mov
sub
lock
jne
idivb
pushf
adc
dec
jmp
cmp
push
dec
cmp
stc
adc
mov
push
test
stos
xchg
fnsave
and
scas
icebp
jl
mov
movsb
sbb
cwtl
clc
push
xor
add
jl
movsb
adc
sub
cmpsl
sub
push
mov
mov
pmaxub
push
sbb
jns
jb
push
sub
pop
sbb
dec
in
jl
mov
mov
add
push
andb
mov
mov
inc
push
sbb
or
xchg
mov
cmpl
xor
xor
mov
bound
mov
loope
fsubs
arpl
je
les
xor
aam
ljmp
sti
imul
or
push
push
test
sub
push
and
or
mov
repnz
or
mov
fisttpl
xchg
daa
push
addr16
xor
dec
mov
sti
dec
aam
mov
ja
adc
xor
fwait
cwtl
dec
and
push
xchg
cmp
or
filds
mov
pop
hlt
sbb
mov
cmp
jnp
movsb
push
mov
mov
ss
pop
xchg
mov
popa
cmpl
cmpsl
cmc
xor
ljmp
xor
push
and
sub
lahf
add
pop
addr16
mov
std
jbe
jne
add
xor
fcomp
faddl
fidivs
jp
sti
add
arpl
test
inc
loopne
dec
es
sbb
shlb
in
mov
jge
jge
adc
outsl
cmp
loopne
adc
addb
sbb
addr16
inc
add
pop
insb
inc
xor
pop
fwait
mov
sbb
pusha
enter
lods
shlb
sub
iret
dec
pop
jns
mov
sbb
in
pop
cmp
insl
push
gs
sub
jecxz
mov
pop
cs
mov
push
sub
mov
mov
cmp
cwtl
frstor
mov
xor
xor
mov
push
shll
dec
cs
adc
adcb
fistpll
mov
arpl
push
stc
and
cs
imul
ret
sub
stos
pop
cmc
cld
aas
sub
call
lock
out
and
xchg
or
push
jb
jo
ja
push
mov
je
dec
mov
sbb
inc
fwait
sti
pop
stos
arpl
mov
mov
mov
inc
pop
cld
lods
fs
test
popa
cltd
dec
push
xchg
sti
mov
stos
lahf
and
xor
inc
fstl
inc
cs
adc
xchg
jne
cwtl
jge
push
mov
movsl
sarl
mov
movsl
adc
sbb
and
nop
stos
cs
lahf
adc
xchg
fdivr
int3
push
lcall
mov
pop
pop
mov
pop
push
or
inc
loope
in
movzbl
push
pop
mov
or
mov
xchg
mov
pusha
pushf
mov
fsub
jne
xor
pop
dec
sahf
push
or
and
mov
sbb
dec
repz
jp
dec
dec
cmp
and
push
lods
dec
mov
sbbb
mov
or
push
inc
mov
mov
fsubrl
fdivl
hlt
adc
fildll
mov
adc
or
movsb
and
dec
jg
cmp
fs
xchg
inc
jecxz
add
scas
pop
lahf
pop
ret
sbb
lds
repnz
xor
sub
shll
xchg
dec
sbb
lret
sbb
cld
repz
jl
pop
sbb
rcll
dec
aam
out
adc
xchg
push
ljmp
mov
lret
push
inc
lahf
into
fsubrs
mov
and
imul
mov
aas
dec
sbb
jo
xchg
test
clc
xchg
add
inc
jbe
add
pop
dec
gs
cmp
inc
cmc
xchg
mov
roll
add
lods
inc
jmp
inc
mov
mov
sub
or
test
sbb
push
pop
add
inc
or
and
in
sub
sbb
test
cli
popf
pop
pop
fwait
sarb
test
cmp
jecxz
jecxz
mov
mov
invlpg
loop
add
rcll
testb
hlt
jbe
test
cmp
jecxz
xor
in
push
cmp
adc
stc
sub
stos
fadd
pop
subb
mov
adc
cmc
or
mov
fucomip
imul
dec
dec
mov
adc
cltd
call
test
mov
fldl
scas
movsl
jae
psrlw
shll
imul
mov
mov
lods
subl
mov
lods
cmp
movsb
xchg
push
xor
lahf
mov
call
and
mov
fdiv
stos
jne
test
nop
pop
js
mov
mov
cld
pop
in
ja
lret
push
push
ret
xchg
lods
and
pop
jo
mov
inc
jae,pn
ret
loopew
fcoml
aas
ja
jle,pn
xor
dec
jae
pop
cmpsb
adc
sbbl
mov
faddl
or
sub
sbb
xor
ret
adc
test
jns
filds
addr16
jmp
xor
out
roll
adc
push
cwtl
out
and
mov
pushf
xor
pop
sti
mov
orb
cltd
xchg
dec
dec
imul
and
out
in
cpuid
cmpsb
or
loopne
in
jne
je
and
add
adc
xchg
ret
iret
cmp
leave
cmpsl
push
xchg
pushf
outsl
test
out
movsl
mov
mov
pop
mov
into
push
std
lods
push
xor
cmp
add
scas
push
push
scas
dec
cmp
mov
std
shrl
dec
xchg
or
xor
xchg
xchg
pop
pusha
pop
push
in
les
movsl
nop
mov
or
or
mov
cs
cmp
pop
inc
fbstp
cmpsb
lds
imul
ds
outsb
sarl
cmp
mov
sbb
sub
xor
hlt
mov
jecxz
adcl
ja
cmp
xchg
out
add
hlt
stos
xchg
sbb
mov
sub
sub
mov
outsl
sahf
inc
lcall
test
loopne
add
mov
mov
mov
in
xchg
lds
dec
cltd
cmp
dec
ret
push
shll
sbb
fildll
notb
mov
sbb
mov
sbb
pop
fimuls
xchg
popa
loopne
testl
xor
icebp
cmp
or
int
mov
in
push
test
cmp
xlat
out
xor
mov
xor
js
and
sub
cmp
mov
push
call
shll
mov
out
rcll
sub
cli
in
jnp
in
subb
int
into
sub
aad
pop
mov
cmpsb
psllq
jmp
inc
push
arpl
xor
add
or
bound
push
mov
add
mov
jbe
shr
ret
shr
data16
out
xchg
aad
cmp
jns
mov
mov
fcom
idivb
mov
decb
push
pop
outsb
jmp
mov
and
jecxz
loope
and
xor
sub
mov
cmpsb
jbe
and
jp
pop
mov
pop
mov
cmp
xchg
addr16
inc
inc
loopne
ds
cmp
movsl
push
jo
insl
cmpsb
push
dec
enter
stos
nop
jns
loopne
or
push
inc
icebp
dec
js
or
mov
xchg
jge
sbb
cwtl
shl
in
icebp
jb
ds
negb
repz
cwtl
ljmp
sbb
jg
fisttpl
xchg
push
dec
shrl
jmp
jmp
lods
andb
jl
outsb
mov
and
pop
cs
mov
push
and
scas
je
das
adc
out
sbb
xlat
cmpsl
add
callw
mov
push
negl
lea
push
loop
push
or
lock
mov
jl
fnstcw
dec
xchg
sahf
pop
lea
inc
pop
mov
call
xchg
hlt
mov
sbb
cwtl
mov
sbb
jae
mov
ret
pop
mov
push
xchg
pusha
xchg
push
lret
fs
fidivrs
mov
in
lcall
int3
jbe
push
fnsave
outsb
arpl
lcall
push
pop
rolb
xor
mov
pushf
int3
test
gs
insb
mov
xchg
repnz
xchg
dec
ret
dec
add
in
xchg
outsl
es
icebp
mov
pop
test
test
das
sub
in
cltd
scas
aaa
add
xchg
push
cmp
fucomip
lahf
lcall
cmc
test
pop
xor
jbe
cmp
cmpb
or
adc
dec
out
add
xlat
add
cmpsb
int
push
into
fistpll
aaa
mov
jno
xchg
or
push
call
cs
fildll
lahf
cld
mov
pop
sub
mov
push
hlt
and
mov
mov
mov
aas
jmp
nop
ljmp
les
xor
sub
mov
repz
add
pop
vpcmpeqb
insb
xor
fidivs
inc
mov
insl
xchg
cwtl
push
push
insl
jb
insl
mov
dec
or
insl
lret
test
xchg
hlt
cld
data16
sub
jnp
cmp
xlat
sbb
int
imul
dec
icebp
outsb
fcompl
or
aam
fsubr
push
sub
in
insb
adc
js
sub
fsubrs
jnp
rcr
cltd
push
fs
stos
dec
decb
sbb
mov
dec
and
xchg
pop
cmp
adc
aas
jl
outsl
rorl
or
sub
or
test
add
or
repnz
push
gs
test
hlt
pop
xorb
popa
addr16
cmp
popa
jmp
dec
jmp
cli
push
adc
jecxz
push
sahf
pusha
pushf
fisubrl
aas
test
cmp
xchg
cmpsl
pop
loop
adc
inc
xchg
test
test
cmp
add
xor
jmp
jbe
dec
dec
cltd
xor
dec
out
test
xor
test
cld
jb
outsb
jnp
das
adc
mov
inc
cwtl
jb
lods
popa
loop
icebp
xchg
js
adc
stos
and
xchg
pop
xchg
std
into
dec
lods
cmpsl
test
mov
xchg
xlat
leave
ret
adc
testl
fnstcw
push
aad
inc
lds
dec
scas
in
mov
rclb
nop
add
dec
call
addr16
sti
push
lret
dec
cmp
add
loop
sti
xchg
push
repz
orb
int3
mov
xchg
or
sarl
push
add
lahf
pusha
pop
adc
cwtl
inc
xor
out
sub
mov
xchg
movsl
push
sub
and
orb
in
ret
imul
mov
je
pop
ds
sbb
ret
push
aam
push
add
daa
in
imul
mov
cmp
push
je
xor
repnz
out
loope
inc
xchg
or
and
jg
adc
jg
mov
and
cmp
loopne
in
add
dec
test
subb
xor
sahf
ja
pop
cltd
cmp
dec
cld
mov
push
inc
jne
and
mov
aaa
pushf
clc
scas
rcr
daa
push
adc
stc
mov
inc
xor
mov
cmp
shlb
sub
insl
xchg
xchg
push
loop
js
fdivrl
lock
dec
scas
stos
aad
inc
hlt
test
adc
mov
movsb
fsubr
jmp
mov
or
cmp
in
jmp
enter
cmc
insl
mov
fwait
pop
jo
fistpl
mov
mov
sar
icebp
lds
adc
mov
pop
pop
pop
test
pushf
dec
sbb
mov
rcr
or
add
pusha
fisttpl
jno
ret
push
pop
addr16
or
mov
push
call
enter
insb
repz
mov
jo
stc
jne
lods
push
les
out
mov
stos
jl
sbb
nop
xchg
cmp
movsb
push
out
push
js
into
loope
ret
mov
paddq
and
xchg
xchg
cmpsl
push
add
pop
xchg
jmp
addr16
nop
ds
or
gs
call
cs
test
xor
pop
subb
dec
arpl
or
cmp
call
mov
fcmovnbe
ret
movsl
mov
cmp
add
adc
xorl
dec
test
ret
and
push
out
imul
jp
add
mov
call
insl
rcll
pushf
nop
xchg
adc
or
test
mov
cwtl
fsubrl
js
sbb
inc
pop
imul
mov
cmpsb
sub
push
out
and
jno
sahf
fwait
mov
push
pusha
cmc
dec
fcmovu
lods
scas
rcll
aas
outsb
cmpsl
mov
mov
xchg
roll
ret
les
and
daa
fildll
inc
pop
imul
mov
mov
imul
cmpsb
nop
pushf
bound
dec
mov
pop
push
xlat
out
sub
sub
pop
pop
subb
inc
sahf
test
pusha
cmp
mov
add
mov
leave
xchg
mov
inc
lea
adc
mov
test
loope
addl
lods
xor
data16
add
pop
iret
jmp
enter
or
inc
jecxz
in
cmp
sahf
loop
add
nop
inc
imul
stos
sbb
lds
es
call
lock
mov
pushf
dec
leave
pop
xor
repz
push
filds
shrb
cmp
add
mov
cmpsl
int3
push
mov
xor
adc
add
dec
jmp
adc
fcomp
loopne
dec
leave
add
pop
aaa
xor
sbb
cli
stos
jbe
mov
inc
adc
adc
shr
test
stos
inc
es
sub
mov
js
ds
in
sub
imul
iret
dec
int
adc
inc
push
xor
arpl
or
sarb
fwait
mov
roll
jecxz
mov
xrelease
sbb
imulb
dec
jnp
dec
repz
push
pop
out
mov
cs
xor
push
pop
pop
aad
ja
and
or
push
int
insl
xor
sti
mov
push
adc
adc
cltd
pop
cmp
ret
xchg
adc
pop
lahf
jge,pt
inc
movb
adc
xchg
cld
aas
ds
lret
pop
repz
add
xchg
loopne
insl
mov
lret
or
push
pop
sub
inc
and
mov
pop
popf
jp
pop
mov
ja
ljmp
fstpl
fisubrl
pop
push
incl
movsl
inc
fs
pop
and
inc
pop
sub
and
push
cmp
add
addb
fsubrs
enter
sahf
xor
jmp
jp
push
shll
jns
xor
cmpsl
fmul
push
popf
inc
sub
stos
scas
pop
movsb
push
mov
dec
loop
clc
lods
popa
aam
cmp
test
xchg
adc
aam
sub
dec
lds
mov
loopne
jg
mov
mov
sbb
sub
out
pop
jl
lock
mov
arpl
inc
inc
sbb
shlb
jle
out
das
mov
mov
mov
push
jns
mov
sub
arpl
pop
jbe
repz
mov
ljmp
and
pop
hlt
mov
mov
add
mov
aas
adc
fnstenv
mov
mov
cmp
leave
jl
mov
pop
mov
aas
and
sahf
es
in
mov
pop
xor
lret
sbb
or
or
popa
frstor
dec
xchg
sub
mov
push
rcll
xor
in
aaa
es
repnz
out
imul
addr16
cli
xor
cld
mov
test
sbb
jbe
cmp
mov
ds
stos
pop
sarb
lret
clc
add
add
push
push
sahf
mov
orb
and
rcr
dec
adc
mov
adcb
jmp
sub
cli
add
pushf
mov
mov
or
lea
out
enter
cld
add
lds
fwait
sbb
push
xchg
in
xchg
ffree
and
sub
xor
or
push
mov
and
rcll
sbb
sbb
mov
xchg
enter
mov
push
cmp
mov
cmpsb
sar
cltd
ljmp
pop
or
pop
jmp
xchg
xrelease
test
mov
xchg
inc
cli
jnp
lret
xchg
icebp
scas
push
enter
cwtl
out
jo
ja
inc
nop/reserved
fstpl
rcrl
addl
cmp
pop
ds
stos
stc
inc
jo
insl
fnsave
in
mov
dec
jg
test
enter
ret
inc
icebp
mov
push
inc
inc
lds
les
leave
pop
pusha
popa
pusha
adc
fcoms
xor
add
adc
mov
mov
add
mov
dec
cs
sbbl
jns
xchg
orb
repz
mov
sub
push
jo
les
mov
das
pop
shrl
jo
sbb
xor
fidivl
adc
sub
rcl
mov
dec
test
cmc
pop
dec
mov
loopne
stos
cmovl
es
stos
std
cli
mov
retw
inc
or
mov
and
ja
inc
call
or
jp
jg
je
sub
movsl
inc
imul
imul
mov
fs
movsb
subl
ret
ret
insl
sub
xchg
pop
clc
scas
dec
sarl
ss
pushf
and
add
insb
push
add
call
sub
test
xor
dec
outsl
aaa
cltd
es
je
ror
dec
add
push
insl
scas
iret
add
xor
mov
out
enter
lock
pop
pushf
xlat
xor
and
cmp
add
das
pop
jmp
mov
sub
xchg
es
add
push
dec
stc
adcb
loop
inc
mov
call
lahf
shll
sbb
shrl
cltd
and
lds
sbb
clc
push
jecxz
insl
lret
decb
sub
xchg
dec
in
push
push
clc
mov
loop
inc
adc
add
or
mov
inc
xor
inc
push
outsb
fisttpl
add
pop
jae
js
pop
sbb
cwtl
cmp
fwait
jl
push
cmp
push
nop
sub
jnp
jbe
inc
sub
daa
pop
mov
pop
sub
nop
or
loop
outsl
loopne
lods
cltd
or
inc
adc
add
or
jno
bound
lahf
xchg
sub
shll
shlb
cmp
fadd
lods
dec
insl
enter
and
cltd
jl
lock
mov
arpl
outsl
cmp
arpl
loop
xchg
out
nop
mov
fcomip
stos
inc
sbb
push
push
jb
iret
pop
push
out
iret
xchg
cwtl
xchg
mov
aaa
adc
cmpsb
mov
jo
and
sbbl
popa
mov
sti
cmpsb
dec
pop
adc
pop
or
sub
notl
pop
in
cld
loopne
jg
call
jnp
pop
push
xchg
ljmp
shr
notl
lret
ret
mov
and
test
dec
imul
mov
std
sti
jg
daa
jge
pop
lds
test
imul
jnp
cmpsl
cltd
shrl
ror
imul
lahf
sub
test
adc
mov
sbb
adc
push
cmpsl
push
pop
js
or
xchg
push
ret
pusha
movl
je
mov
adc
sar
pop
shll
dec
push
push
sbb
sbb
mov
push
add
test
shrl
adc
ret
fldt
aam
jp
dec
dec
and
lcall
mov
stos
dec
cmpsb
es
insb
aaa
inc
fnstsw
stos
sbb
mov
jb
pop
xchg
push
mov
int3
add
adc
arpl
jecxz
insb
in
xchg
pop
notl
mov
dec
xchg
orb
scas
add
mov
xor
jns
inc
mov
mov
dec
push
cmpsl
filds
aam
leave
sbb
or
aas
mov
cmp
push
jecxz
add
mov
repnz
inc
jl
fadds
mov
xchg
xchg
movsl
and
pop
stc
xchg
out
sub
lods
inc
mov
xchg
sub
push
sbb
sti
mull
lock
cmp
cmp
mov
or
cmpsb
push
sti
and
xor
sub
loop
mov
dec
inc
mov
pop
mov
stos
mov
jg
inc
test
lcall
pop
cltd
cmp
mov
lods
sahf
or
sbb
pop
mov
xchg
xor
cmp
mov
mov
hlt
insl
adc
or
xor
bound
or
in
ror
or
push
test
push
jle
sbb
stos
in
insl
out
icebp
outsb
and
adc
gs
mov
and
in
test
xchg
in
cmp
push
push
push
sahf
nop
mov
dec
aas
cmc
mov
jno
push
sub
mov
in
lock
xchg
xchg
xchg
dec
imul
nop
das
sub
sbb
outsb
nop
push
mov
jecxz
push
jo
imul
xchg
cmpsb
hlt
les
mov
cmp
push
icebp
imul
jp
dec
fsubrl
lea
in
mov
adc
push
fucomip
push
add
push
iret
cld
gs
push
pop
pop
add
popf
js
mov
sar
dec
push
dec
dec
pop
jg
dec
mov
popf
jmp
xchg
out
orl
decl
xor
push
mov
pop
js
mov
pushf
pop
mov
cli
push
int
sub
sub
xor
mov
push
sub
fwait
out
insb
cmp
dec
sub
cs
in
fcomip
pop
ja
mov
pop
inc
fsubl
subb
test
icebp
xchg
push
mov
jnp
mov
outsb
cwtl
xor
mov
mov
xchg
push
mov
in
loope
sub
pop
xchg
sbb
pop
orl
jno
loope
add
cli
lret
lcall
mov
inc
fwait
popf
adc
inc
cmpsb
jb
repnz
out
inc
lods
clc
or
add
loopne
in
inc
push
fsubrs
pop
orl
xlat
stc
pusha
sub
fldcw
mov
lods
mov
inc
sahf
idiv
push
cwtl
hlt
adcl
fidivl
bound
movsl
cltd
jbe
push
sub
adcl
fs
arpl
push
pop
outsl
outsl
int3
ss
cmp
leave
fldenv
or
in
test
push
fdiv
dec
outsb
jae
ja
add
into
icebp
out
cmc
xchg
les
incb
in
out
xchg
bound
jne
fsts
icebp
leave
cmpb
cmp
and
cmpsb
pop
fimuls
daa
sub
jecxz
mov
jnp
jae
or
aad
nop
and
lea
mov
call
xchg
test
int3
mov
cmp
jp
loop
pop
imul
inc
add
mov
aad
jo
scas
mov
movsl
daa
lods
pop
dec
icebp
inc
push
ljmp
jp
dec
and
popa
push
pop
cmc
pushf
or
mov
popa
mov
stos
lock
int3
add
fbstp
mov
cli
add
and
int3
inc
and
test
xchg
xor
add
jbe
clc
cmc
adc
or
adc
insb
or
jg
pop
icebp
sub
mov
or
mov
and
inc
insl
loop
xchg
pop
insl
jo
enter
insb
test
cmpl
cmp
add
push
or
mov
sbbb
push
ret
shlb
cmp
dec
movsb
mov
stc
mov
in
adc
fs
pop
stos
lock
jmp
jb
shll
mov
mov
fsubl
movsl
or
hlt
push
cmc
adc
xchg
icebp
outsl
stos
push
fstl
adc
sub
into
push
sahf
test
pop
in
xchg
gs
sahf
mov
pop
push
mov
inc
sub
jp
pushf
dec
sarl
jnp
dec
dec
sbb
popa
and
xchg
neg
in
imull
pushf
add
jg
mov
cmp
pop
inc
test
push
and
inc
mov
dec
pop
xchg
pop
sbb
out
and
add
add
js
xor
mull
mov
repz
mov
or
ret
dec
jae
pop
pop
push
and
inc
sub
mov
jno
sbb
xor
scas
mov
imul
test
mov
fstpl
subb
push
lcall
mov
sbb
cmc
pop
stos
insl
mov
pushf
fnstenv
mov
xchg
mov
push
enter
stc
sti
cld
pop
dec
cmp
movsb
lahf
xor
scas
repnz
adcl
sbb
int
inc
add
das
std
stos
and
add
cmp
push
jle
ucomiss
sbb
imul
add
jmp
pop
dec
cmp
mov
aam
popf
scas
add
add
shrb
lcall
fwait
xchg
lds
cmc
in
mov
pop
sbb
call
fdivrp
in
in
fucomi
stc
cmp
aaa
xor
js
cs
decl
shl
lret
mov
and
xlat
sub
and
test
add
stos
popf
clc
sub
ds
lea
or
sbb
shrb
or
sti
sub
mov
push
push
dec
sbb
jmp
push
xchg
sub
imul
cmp
in
popf
andb
pop
lret
jne
je
jno
adc
in
enter
bound
stos
xor
out
xchg
rcrb
ds
pop
in
ffree
xor
rcrl
mov
xchg
inc
sbbb
sbb
or
inc
in
ret
pop
sbb
push
hlt
xor
mov
mov
push
ficoms
out
out
cmc
mov
mov
jle
jno
sub
dec
lock
test
inc
sub
cmp
insl
aas
or
dec
dec
inc
xchg
mov
cmp
popf
mov
inc
test
pop
jns
inc
lahf
push
addr16
inc
mov
imul
loopne
es
call
enter
int
in
sarb
push
and
jmp
adcl
gs
je
pop
jmp
sub
sbb
lock
shlb
mov
test
in
scas
mov
cmp
cmpsl
cli
mov
stos
ret
out
adc
pop
lods
addr16
shl
xchg
jae
dec
adc
sarl
scas
adc
xor
fs
or
push
sub
iret
fldt
sti
inc
lret
cs
cmp
inc
xor
add
add
in
push
mov
cmp
inc
push
out
xor
lods
call
js
push
rcrb
enter
scas
cs
dec
arpl
les
lock
shrb
btr
and
sbb
xlat
loopne
es
decb
sub
and
lea
jl
xchg
pop
fistps
mov
movsl
sbbb
es
bound
sub
jl
lcall
ds
pop
or
ss
adc
adc
jecxz
enter
jnp
mov
dec
push
scas
outsb
pop
inc
xlat
cmp
popf
cmp
shl
jno
dec
sbb
mov
sahf
sub
mov
stc
shll
je
popf
push
mov
dec
stos
sub
fs
xchg
cmp
push
inc
cmp
xchg
das
mov
pop
pop
mov
add
aas
loope
sub
pop
inc
scas
or
lea
add
test
stos
xchg
movsl
mov
clc
inc
mov
fstl
mov
dec
pop
je
push
clc
in
andl
dec
pop
test
jmp
je
das
gs
push
bound
xlat
loopne
adc
and
in
xor
jecxz
leave
cmp
mov
pop
add
mov
adc
mov
adc
xor
xchg
fdivrl
mov
stc
add
test
jno
lock
inc
ret
jl
cmp
pop
std
rorb
inc
pop
jecxz
cld
cli
icebp
pop
shlb
int3
mov
sub
clc
loope
push
pop
iret
jg
xor
pusha
push
mov
and
jbe
movsb
xchg
imulb
hlt
leave
mov
xor
out
rcrb
repnz
cwtl
cmpl
mov
xor
rcrb
hlt
mov
fldenv
sbb
push
xchg
dec
sti
xlat
xchg
add
jnp
push
mov
aaa
mov
sbb
dec
pop
mov
imul
lock
sbb
data16
and
fcmove
addr16
fldl
fisubl
test
sub
jge
in
and
mov
cld
jg
orb
jcxz
shl
or
cvtpi2ps
fsubrs
mov
scas
xor
clc
push
inc
dec
cmp
sbb
adc
pop
xchg
mov
jne,pn
in
mov
ret
jae
dec
cwtl
mov
loop
rcl
push
dec
outsl
xlat
cmpsl
fs
cmp
cmp
lcall
call
loopne
lock
pop
cmp
in
in
sarl
pop
push
cmp
mov
stc
mov
out
mov
cli
pusha
or
inc
xchg
push
mov
xor
test
adc
xchg
mov
frstor
es
enter
inc
mov
xorb
daa
sti
jge
jb
adc
out
push
ret
sbb
inc
and
sahf
sub
dec
rclb
cltd
jb
aas
cld
ss
or
jb
cmp
les
ds
mov
jp
mov
jmp
or
adc
aas
ds
push
xchg
shlb
icebp
adc
fiadds
in
fdivrs
mov
mov
sbb
aaa
loop
outsb
mov
cmpsl
or
loopne
mov
add
lret
mov
sbb
jne
xchg
add
mov
aaa
push
mov
fwait
out
shrb
sub
xchg
cmp
push
js
mov
push
adc
jge
xchg
push
shrd
rorb
jle
sub
cmp
mov
out
ss
pop
inc
lcall
mov
cli
pop
sbb
pop
adc
xchg
inc
pop
fs
inc
call
sbb
add
jbe
mov
xchg
xchg
jae
ret
aam
dec
lods
mov
scas
jge
jg
test
push
outsl
pop
fucomi
xchg
lock
or
sti
in
ret
push
cmp
jnp
lahf
inc
divl
js
stos
mov
aad
xchg
je
into
cmpsl
dec
xor
push
sbb
xchg
sarl
sbb
xor
dec
fcoml
iret
adc
shlb
or
call
push
jnp
ret
test
lahf
or
loop
mov
fadds
or
inc
stos
jle
jg
popa
outsl
das
jae
jmp
sub
push
ja
sbb
inc
aaa
lock
mov
jae
or
sub
push
mov
pop
sub
rorl
adc
stc
out
sub
mov
loopne
push
ret
pop
into
inc
test
popa
fwait
roll
imul
mov
imul
lea
enter
sub
and
inc
pop
cltd
enter
xchg
fmuls
cmp
movsl
cld
sub
sub
inc
pop
adc
mov
insl
sbb
jge
rcl
jl
push
xor
icebp
insl
xchg
mov
mov
roll
push
leave
std
in
mov
sbb
mov
outsb
je
inc
sbb
and
js
or
sub
pop
aam
sub
lcall
pop
jp
in
mov
xchg
pushl
dec
or
out
xchg
add
mov
jmp
adc
pop
mov
inc
mov
adc
out
push
mov
inc
or
das
repz
and
push
inc
xchg
ljmp
scas
sbb
lret
sbb
inc
repz
int3
pusha
jbe
sbb
in
and
sbb
je
jecxz
push
lock
mov
jnp
popa
call
in
push
adc
leave
add
inc
pusha
or
inc
enter
dec
sub
jecxz
shrb
pusha
ret
xchg
sbb
ficomps
and
jl
pop
inc
add
sub
jecxz
mov
and
imul
mov
stos
dec
cmp
iret
sbb
test
in
and
xchg
jge
sbb
fdivr
out
and
cmpsb
std
push
icebp
and
adc
addr16
push
mov
pop
mov
lahf
sbb
cmpsb
xchg
es
jle
stos
add
adc
imul
sarl
test
jg
pop
push
sbb
sahf
jo
je
popa
sbb
push
push
sub
xor
outsl
mov
daa
mov
sbb
or
movl
dec
jo
and
adc
mov
mov
test
sub
adc
push
or
sub
mov
mov
in
out
sub
jge
push
sub
mov
fstps
xchg
hlt
loopne
lcall
fdivrs
or
outsb
rcll
int3
cltd
jb
sbb
xchg
clc
lock
sbb
adc
dec
hlt
or
sub
mov
in
xchg
mov
stc
andl
popa
insb
iret
fxch
shlb
ret
repnz
in
xchg
hlt
ljmp
mov
cmc
divps
dec
adc
add
pop
or
rcl
jae
sbb
imul
les
lods
sbb
into
mov
lock
aaa
jnp
cmc
and
int3
rorl
cmpsb
adc
repz
loope
mov
test
je
xchg
mov
ret
jno
mov
adc
lcall
sahf
outsb
cmp
sti
pop
push
sti
mov
mov
lea
loop
push
push
sbb
call
mov
insb
mov
int3
insl
fucomi
and
call
mov
pop
repnz
jge
and
repz
mov
repnz
outsb
iret
movl
in
push
ret
std
gs
dec
mov
fwait
das
test
adc
leave
pusha
pushf
mov
nop
push
xor
xor
mov
inc
lea
inc
int3
mov
dec
aaa
add
mov
inc
out
enter
push
insl
cmp
shll
ljmp
fsubrl
mov
mov
mov
jl
or
push
xchg
xchg
inc
mov
push
push
mov
pop
lock
lcall
jae
pop
cmc
scas
cmp
or
and
jo
cltd
xchg
dec
xor
mov
fwait
sbb
ret
add
pop
adc
xlat
sbb
inc
jnp
cmp
and
sub
xchg
lock
jecxz
xchg
aad
sub
ljmp
or
cmp
mov
ss
aaa
call
adc
std
add
gs
lds
xor
js
mov
mov
sub
aas
push
push
jle
subl
ja
and
imul
ds
jbe
cmp
push
ljmp
push
out
and
js
dec
inc
jecxz
pop
sub
cmpsb
jo
pop
mov
dec
push
in
mov
or
lea
sbb
cmpsb
call
push
clc
jne
ss
test
inc
dec
xor
pop
jae
cmp
aam
xchg
adc
pop
mov
mov
out
pop
test
rcll
xchg
mov
mov
or
jns
push
mov
loope
push
dec
stos
cmpsl
rcrl
dec
inc
out
pmaddwd
jecxz
in
mov
cmp
lods
cmp
adcl
cmc
subl
mov
add
cmp
enter
lret
jno
xchg
jg
popa
out
pop
xlat
fnstsw
jbe
xchg
cmp
xchg
pop
xor
pushf
sbb
sub
push
enter
xorb
hlt
push
js
js
loopne
sti
and
sbb
les
out
orb
cli
mov
push
insl
lcall
fidivs
orb
popf
aaa
sub
mov
push
inc
test
shrb
leave
lods
add
xchg
les
mov
jge
dec
mov
adc
mov
xchg
sahf
mov
dec
scas
cwtl
popf
jmp
imul
rorb
aas
add
out
rcrb
ret
xor
and
enter
lods
xchg
sub
mov
test
jl
mov
js
daa
jae
add
add
xor
test
out
mov
lock
lods
outsb
data16
mov
cmp
xor
nop
repnz
roll
call
stos
cld
jmp
mov
push
mov
movsb
jne
and
add
sub
mov
cld
dec
dec
or
lock
xor
xor
push
sbbb
mov
add
test
imul
jb
pushf
dec
sar
mov
outsb
in
or
sub
les
push
jmp
mov
loopne
lret
or
push
lcall
insl
jmp
lahf
push
mov
ss
outsb
cmc
cmp
push
sbb
xor
fnstenv
inc
subb
subb
or
jne
inc
mov
mov
sbb
mov
mov
inc
push
in
movb
repz
int
dec
pop
cmp
or
orb
insb
into
out
sub
inc
hlt
jno
inc
leave
gs
lcall
sbb
mov
or
pop
add
outsb
jl
xor
sbb
notb
and
or
lahf
push
push
loope
adc
test
push
add
push
adc
adc
sbb
push
dec
test
jp
pop
aad
jo
stc
mov
jmp
out
cwtl
mov
das
push
mov
xchg
push
movsl
repnz
test
push
repnz
push
aad
cmp
test
ja
cmp
jl
xchg
bound
aaa
mov
cmp
cwtl
rcrb
int
rorb
add
cwtl
pop
mov
leave
and
mov
in
push
and
adc
out
enter
inc
pushf
or
mov
test
arpl
jecxz
mov
sbb
shll
push
icebp
jl
lock
mov
cmp
dec
aad
mov
in
movsl
lret
add
sbb
fldcw
add
movb
sub
fdivs
mov
jecxz
mov
or
sbb
push
dec
dec
test
inc
es
cwtl
cld
or
mov
push
or
repnz
fildll
into
push
pop
test
int
daa
shrl
sbb
add
pop
and
push
mov
aad
imul
pop
xor
test
mov
clc
pop
ret
push
xor
pop
stos
dec
xchg
push
jp
repz
push
clc
aad
xchg
add
dec
dec
add
clc
or
int3
scas
sbb
int3
pop
cmpsl
and
xchg
jnp
icebp
in
sub
cltd
fs
mov
jnp
lahf
mov
or
pop
push
cmp
dec
adc
mov
jmp
lret
cs
fnstsw
jg
jne
mov
xchg
in
cmp
inc
fmuls
faddl
jecxz
cld
jp
or
ds
xor
push
push
adc
adc
xor
rsqrtps
jo
add
dec
data16
in
mov
pop
jae
adc
cmp
shl
sbbb
pop
dec
dec
pop
aaa
xor
js
notb
in
mov
mov
inc
rorl
movsb
int3
rcrb
iret
pop
loopne
cwtl
hlt
sbb
outsl
pop
test
jb
loope
xchg
sbb
xchg
push
mov
add
add
lahf
push
call
cmp
dec
push
xchg
cs
rdtsc
push
xchg
repz
lahf
int
out
or
xchg
dec
je
adc
inc
mov
imul
mov
loop
add
stc
test
jecxz
fcom
or
mov
mov
mov
cwtl
mov
icebp
inc
jae
int
cmp
xchg
orl
add
ret
cmp
loope
push
cmpsl
daa
add
or
push
test
pop
xor
sub
shlb
push
push
stos
cmc
pop
add
pop
sub
mov
push
cmp
fsubrl
into
aas
sub
push
pop
shl
mov
mov
mov
adc
pop
inc
mov
mov
shl
pop
or
mov
iret
pop
pop
hlt
pushf
inc
push
jge
mov
sub
pop
adc
mov
sub
and
dec
add
and
sbb
jae
dec
jp
inc
popa
push
push
or
test
into
and
push
mov
jns
repnz
cmp
inc
push
mov
adc
xor
or
dec
pusha
out
add
inc
js
xor
mov
xlat
popa
insb
repz
sub
movsl
mov
cmpsl
imul
inc
lahf
imul
jne
push
in
and
in
stc
in
lock
fimull
data16
repnz
lahf
divb
fs
int3
dec
cmovge
into
ds
sub
mov
or
mov
cld
pop
aas
imul
insb
adc
add
aad
or
movsb
leave
push
sbbb
repz
aam
cmp
dec
insl
push
stos
call
jnp
icebp
fcomi
ret
addr16
in
repz
outsb
faddl
inc
add
jns
ds
sub
out
mov
sub
cli
lods
pop
lods
repz
shl
or
dec
and
jno
fcmovb
into
jmp
and
sbb
dec
push
imul
xchg
mov
jp
add
or
ljmp
sbb
jae
in
cmpsl
int3
inc
loopne
sub
dec
aaa
lret
pusha
sbbl
dec
jg
lods
test
mov
jge
sti
or
scas
sbb
cmp
hlt
push
xchg
movsl
xchg
mov
fmuls
jno
pop
mov
inc
iret
cltd
mov
pusha
and
ficompl
outsl
clc
mov
arpl
lcall
rolb
imul
jg
add
test
pextrw
sarb
rorl
mov
aas
and
lret
scas
jge
nop
aas
and
mov
int
ljmp
mul
or
adc
cltd
dec
jg
cmp
addl
dec
mov
mov
jp
mov
pop
adc
mov
adc
loop
fnstcw
jmp
aad
sbb
syscall
push
push
clc
mov
cli
xchg
jo
fcompl
xchg
mov
cmp
mov
dec
mov
or
gs
pop
or
inc
in
lds
and
jnp
into
jb
sbb
andl
pop
xchg
js
mov
stos
into
push
lods
int3
shr
fmull
add
fcmovnu
xor
pop
push
mov
xor
mov
cmp
mov
inc
movsl
aam
aad
hlt
fucomi
les
jae
loope
dec
push
cli
push
dec
loopne
sti
inc
icebp
xchg
lea
jnp
movsb
cmc
push
xchg
or
sbb
adcb
pop
dec
mov
insl
add
push
push
jne
mov
and
jge
and
repz
xchg
push
add
aad
mov
lods
lret
test
andl
mov
xchg
inc
ljmp
lock
adc
shlb
mov
push
mov
mov
xchg
jge
daa
mov
push
jmp
and
ds
adc
and
dec
lods
int
insl
pop
dec
fidivs
jle
test
cmpsb
sahf
lahf
pop
jno
adc
push
sbb
fcmovnbe
mov
mov
push
shlb
mov
rcrl
fldcw
mov
mov
out
sbb
mov
and
loopew
mov
and
or
sub
sarb
test
dec
repnz
into
jp
mov
insl
mov
test
or
test
popa
lahf
fs
je
lahf
xchg
sbb
sub
mov
fwait
sub
dec
sub
sbb
dec
cmp
sub
xchg
or
jb
cld
int3
or
lret
sub
jp
loopne
xchg
jno
scas
cmp
movsb
pcmpgtw
cmp
leave
or
neg
xchg
outsb
and
js
jae
lret
sbbl
sarl
or
cmp
test
insl
out
cwtl
and
pop
sub
inc
jbe
cmp
stos
sub
test
push
mov
cmc
or
pop
cltd
jge
push
push
imul
inc
mov
jo
in
pop
push
scas
push
andb
repz
mov
sbb
cltd
ret
sarl
sub
lods
xchg
je
in
mov
sub
xchg
cmp
jp
sbb
or
pop
jnp
je
stc
js
loopne
pushf
pop
test
loopne
bound
or
loope
fdivp
lahf
cltd
xor
xchg
xchg
xchg
and
out
mov
pop
xchg
or
in
lret
sahf
mov
fs
xchg
add
daa
push
mov
out
lahf
es
aaa
mov
push
aam
rcll
cmp
xorb
mov
dec
and
shrb
xchg
into
cs
repnz
jl
push
add
out
cmpsb
or
ss
idiv
add
jbe
rcll
add
sar
popf
cs
mov
inc
fwait
mov
mov
std
pop
inc
jo
lods
enter
jmp
xorl
mov
pop
and
lcall
out
xchg
les
mov
aad
jmp
fcmovbe
dec
jp
and
cwtl
mov
sbb
mov
stc
sub
cs
in
ret
in
mov
cmp
mov
test
and
mov
nop
cld
out
fcmovnb
shlb
leave
inc
loopne
mov
ja
pop
aad
mov
js
xor
stos
jnp
arpl
push
inc
xor
insl
pop
mov
aaa
mov
shlb
or
cmc
pushf
pushf
add
add
add
pop
dec
mov
xchg
sbb
cmp
xchg
and
mov
xchg
add
repnz
popf
divl
jnp,pt
add
jle
mov
cmc
push
cwtl
repz
sub
incb
popf
cmp
out
xchg
ret
push
adc
and
shlb
or
xcrypt-ofb
cmpsl
stos
sbb
xor
mov
in
insl
sub
pushf
jp
add
xor
dec
sbb
add
lcall
xchg
dec
shll
jl
adc
aas
xor
mov
or
mov
mov
dec
mov
in
xor
xchg
rcrl
cli
sbb
sub
mov
push
cmp
inc
pop
cmp
cmp
enter
and
mov
stos
jnp
adc
jmp
popa
clc
and
jl
push
xor
jbe
jae
rorb
mov
add
dec
les
add
mov
test
push
pop
and
test
fidivl
es
jmp
add
mov
mov
jmp
lock
outsb
sbb
imul
sbb
mov
inc
xorb
mov
repnz
mov
sub
fwait
in
das
pusha
data16
insb
enter
mov
push
addl
or
jp
in
popa
mov
out
cmp
xchg
xor
pop
stos
or
jnp
inc
adc
jns
shll
test
nop
enter
incb
cmp
dec
xchg
pop
adc
pop
sbb
pop
push
inc
cmp
xchg
lods
mov
out
push
outsl
cmpsl
ror
lock
sbb
mov
insb
ljmp
enter
aad
xor
cmp
and
jo
in
loope
or
incl
jmp
fucomip
mov
repz
sbb
pop
out
cmp
adc
jge
cmc
jno
xchg
mov
mov
adc
push
push
sti
aas
jae
popf
cmp
stos
mov
ret
xor
pop
das
push
test
fstl
push
cmpsb
sahf
sub
mov
fldt
and
popa
cmpb
incb
xchg
loop
loopne
fwait
pop
xchg
mov
mov
cmp
cltd
and
mov
jo
push
inc
cli
arpl
stos
ret
ret
aad
jge
add
sbb
pop
cmp
xor
push
inc
addr16
dec
fmulp
arpl
cmp
xor
push
and
inc
xor
bswap
decb
dec
in
arpl
mov
lea
pushl
jge
pusha
mov
lret
dec
mov
insl
jb
cmc
jbe
push
cwtl
cli
sbb
add
iret
mov
jge
push
push
clc
ja
and
jb
bound
mov
or
xchg
jg
scas
cs
jne
cmp
add
sahf
mov
hlt
add
imul
xchg
jno
shlb
js
mov
out
jne
pop
es
cwtl
push
inc
adc
test
lea
ja
ja
jne
jecxz
mov
pop
pop
les
repz
adc
push
lods
rcl
xor
js
dec
into
push
jne
xor
xor
xchg
cmp
and
arpl
insb
data16
out
ret
and
or
scas
bound
arpl
dec
xlat
adc
xchg
mov
mov
enter
dec
lret
push
stos
inc
es
out
pop
add
pop
shrl
jb
ficoml
fld
xchg
xchg
lock
and
mov
icebp
movsw
xchg
das
outsb
adc
inc
fldl
mov
cmp
jmp
pop
dec
enter
mov
iret
shll
xor
pusha
scas
rorl
in
cltd
popa
lods
movsb
stos
mov
pop
int
cltd
icebp
cld
es
mov
mov
repnz
mov
mov
daa
xor
xor
mov
rcrb
ss
cmp
mov
aas
sbb
call
shrb
inc
stos
fwait
out
sbb
push
ljmp
test
push
sbb
xchg
pop
scas
dec
clc
and
gs
mov
fwait
insl
decl
cli
pop
outsl
push
iret
mov
mov
cmp
ret
cwtl
es
loopne
add
loopne
sub
dec
xchg
push
and
test
shrb
sbb
mov
or
mov
adc
push
dec
ds
stos
fsubrs
in
jmp
adc
stc
icebp
stc
xchg
add
adc
adc
dec
ret
scas
xchg
xchg
das
dec
and
mov
dec
les
enter
cs
stc
in
scas
cmp
sarl
pop
inc
jae
clc
dec
mov
mov
repnz
bound
and
gs
mulb
push
xor
bound
fistl
mov
les
dec
pusha
pushf
lahf
adc
fildl
popa
xchg
rcll
push
add
loop
xor
scas
add
cmp
test
into
sbb
mov
inc
mov
mov
pop
xor
fsubrs
aaa
adc
inc
pushl
iret
inc
or
and
add
dec
pusha
mov
bound
es
in
jmp
fidivrl
cwtl
fwait
pusha
xchg
jo
or
push
pop
xlat
sub
lock
insl
fadds
sbb
push
dec
adcb
pop
push
lret
jecxz
dec
xchg
xor
pop
enter
push
and
mov
mov
mov
decb
loope
sahf
in
lahf
inc
das
stos
ljmp
into
inc
or
shlb
cmc
data16
scas
or
mov
outsb
insb
mov
jge
mov
sbb
lcall
call
jne
lods
and
imul
mov
sti
pop
out
mov
sbb
imul
es
adc
dec
push
jb
sahf
lret
jge
sbb
mov
and
xchg
mov
xchg
sub
lret
cmpl
sub
mov
movsl
les
mov
pop
sub
push
mov
enter
xor
pop
dec
xchg
ss
scas
jb
push
lods
pop
jl
fs
mov
or
scas
lahf
and
or
mov
repz
adc
sbb
and
fnstsw
xor
les
test
push
sarl
loope
or
pop
mov
shrl
sbb
mov
out
sub
and
fmull
addr16
adc
push
mov
mov
icebp
add
jb
icebp
mov
arpl
fstpt
dec
jp
push
clc
push
pushf
jbe
xchg
cmc
les
fcoml
mov
std
rorb
ret
shll
lds
or
fistl
repnz
adc
xchg
out
jnp
jmp
push
xor
cmpsb
lods
and
xchg
popf
xor
dec
or
or
push
mov
sbb
cmpsb
mov
xchg
clc
insl
jno
mov
mov
lret
shl
add
and
std
inc
add
jecxz
stc
mov
test
adc
int3
inc
mov
xchg
test
popa
into
sbb
lret
or
out
jmp
xchg
enter
push
aaa
insl
cs
mov
dec
out
xchg
xchg
mov
shrl
mov
mov
adc
fmuls
xchg
push
cli
test
sbb
sbb
testl
ret
into
and
adc
repz
sub
push
shll
xor
cmp
test
iret
mov
adc
inc
or
cmpsb
push
sbb
or
movl
std
data16
adc
lds
test
add
xor
andl
imul
mov
adc
and
mov
pop
and
mov
dec
sub
in
scas
leave
fwait
outsl
ret
movsl
add
mov
pushf
jle
pushf
fstpl
mov
mov
hlt
jbe
pop
cld
aad
jle
lods
adc
cld
add
jg
test
mov
lret
sbb
lret
idivb
fistl
add
pop
aam
sbb
mov
pusha
and
inc
cmc
subb
std
jbe
sbbl
stos
outsl
jb
rol
mov
or
loopne
mov
dec
dec
inc
pop
jle
or
mov
mov
popf
mov
jecxz
mov
shlb
xchg
sub
inc
push
or
orl
shl
jno
add
xchg
xchg
push
and
sbb
and
sub
sub
lahf
fnsave
fsubrl
adc
adc
lea
rorl
jnp
and
out
adcb
leave
inc
push
sbb
mov
aam
dec
in
jno
or
lcall
pop
cmpsb
jle
sub
out
dec
pop
gs
imul
test
cmc
mov
adc
mov
ret
jbe
mov
imul
test
jns
jle
mov
inc
movsl
inc
pop
lods
sub
mov
xchg
out
cmc
adc
inc
add
cmp
and
xor
sub
cmp
lods
popf
pushf
test
insl
pusha
jecxz
xchg
ds
lret
and
sarl
or
test
jbe
subl
dec
int3
xor
mov
repz
movsb
out
stos
aam
mov
stos
popa
mov
add
test
mov
push
pop
cmc
aam
std
lcall
mov
mov
cmp
cmp
js
adc
jno
aas
push
mov
repnz
push
incl
test
pop
jno
push
popf
ja
jne
rcr
fs
mov
pop
aas
pop
sbb
and
inc
sbb
xor
outsb
pop
sub
xchg
sbbl
movsb
call
ret
jbe
push
mov
sub
push
mov
mov
cmpsb
mov
cltd
and
stos
cmp
paddusb
sub
inc
mov
fildll
imul
aam
inc
mov
out
in
xchg
in
movsl
sti
sbb
adc
adcl
icebp
cmpsl
sub
mov
fcmove
pop
add
dec
xor
fcompl
pop
pop
out
daa
fisttps
or
adc
es
fmuls
lret
imull
jbe
mov
push
jns
sbb
add
mov
push
enter
lock
enter
je
lret
stos
call
jecxz
jno
inc
hlt
pop
sbb
insb
test
shll
icebp
jb
or
std
movsl
loop
sub
ljmp
mov
jb
cld
ficoms
adc
push
fwait
mov
adc
dec
test
ljmp
das
fnsave
ficoms
xchg
lret
xchg
inc
xor
jp
xor
pop
jno
int3
rcrl
sbb
mov
add
mov
icebp
mov
test
inc
inc
cli
inc
in
push
mov
subl
cmp
test
jnp
sti
dec
insb
dec
outsl
cmp
dec
loop
les
dec
stos
sahf
aaa
sub
addr16
cmp
push
mov
xchg
jecxz
subb
nop
or
dec
out
fdivs
fadd
dec
or
ret
push
sub
lcall
pop
mov
bound
icebp
cmp
mulb
mov
shrl
mov
adc
leave
jecxz
jns
xchg
int3
jl
ret
push
test
lods
loopne
jb
lods
movl
mov
scas
lds
jae
and
pop
push
cmpsb
shll
cmpsl
popf
cmp
mov
rorl
enter
lock
dec
cmpsb
xor
sbb
pop
sbb
push
pop
outsl
sub
out
stos
jo
sbb
cmc
push
into
add
jle
mov
xchg
jbe
dec
out
lret
sahf
mov
repnz
dec
subl
push
lahf
stc
fdivs
push
ret
aam
xor
loopne
ror
xor
pop
push
iret
gs
cld
push
inc
push
sub
push
jmp
test
adc
or
or
and
mov
in
push
jnp
outsl
jae
fimuls
pop
add
je
test
je
xor
sub
inc
mov
icebp
aas
mov
mov
cmp
rcrb
push
fldt
xor
lods
popa
pusha
mov
push
inc
inc
push
mov
mov
ja
sub
jge
adc
sub
iret
inc
test
ds
mov
jo
mov
xchg
mov
out
sbb
push
loop
inc
pop
mov
movsl
or
fs
mov
fs
cmpsb
push
cmpsb
or
dec
fistps
hlt
sbb
xchg
mov
adc
bound
mov
repnz
imul
jne
mov
out
in
push
dec
mov
mov
mov
cltd
and
aad
mov
shlb
notl
in
push
push
add
inc
sub
mov
and
paddb
or
adcb
adc
mov
adc
test
jge
or
jno
jns
cmp
xlat
je
in
cs
jg
sahf
mov
mov
dec
enter
sti
dec
in
xor
pop
in
mov
xchg
ss
xor
in
push
mov
and
inc
add
aas
ja
les
icebp
sub
xchg
frstor
and
dec
mov
add
dec
mov
rcr
inc
sbb
adc
mov
and
and
adc
ds
add
leave
out
adc
adc
out
cltd
nop
cmp
iret
jl
sub
and
jp
popa
in
std
push
ret
ret
cmp
add
aad
or
mov
imul
repnz
sub
fs
insb
mov
popf
mov
sbb
mov
and
mov
or
jbe
adc
pop
add
xchg
ret
push
and
out
cmc
jno
lods
stos
mov
popf
icebp
repz
addr16
pop
popa
jl
fwait
mov
std
aam
push
mov
adc
xchg
fdivs
test
repz
sub
lret
or
int
pop
ds
or
cmc
leave
add
mov
cmp
lock
lea
stos
sub
test
lea
xlat
iret
jmp
inc
dec
rclb
test
mov
xlat
orl
divl
jp
scas
iret
in
lock
add
dec
mov
dec
ffree
mov
cmp
gs
std
jae
les
stos
addr16
pop
sbb
jae
movsb
xchg
ret
andb
cld
in
mov
xchg
xchg
pop
insl
fmul
lods
pop
into
dec
adc
adc
iret
subl
xchg
mov
jne
dec
jmp
lea
stc
imul
mov
out
sub
cltd
lret
jmp
call
push
pop
and
dec
clc
push
cmova
pop
ret
xchg
mov
leave
test
aam
idivl
in
sub
bound
lcall
inc
in
popa
test
pusha
mov
pop
mov
fistpll
xchg
test
rorb
and
cmp
rol
sub
or
pop
adc
mov
mov
inc
rclb
push
dec
pusha
push
push
in
dec
roll
or
es
jg
fcomip
cmp
sub
push
arpl
movsl
push
fmul
pop
ss
pushf
dec
stc
mov
popa
js
dec
pop
xchg
mov
aas
xchg
cmc
sbb
pop
mov
in
add
das
cmpb
xor
mov
gs
movsl
call
adc
aas
fdivs
dec
lahf
sub
imul
mov
sahf
pop
mov
and
pop
repnz
mov
xchg
xor
out
out
test
sub
sub
adc
bnd
sarl
arpl
mov
push
xchg
arpl
dec
shrl
dec
jne
sbb
roll
lea
cmp
add
jb
push
mov
and
jp
inc
inc
addb
test
push
sbb
xor
push
aas
pop
in
pop
push
jge
mov
popa
mov
das
sarb
aam
outsb
push
jns
imul
pop
pop
dec
dec
call
pop
icebp
mov
push
popf
lret
cmp
mov
xor
mov
scas
adc
push
les
sti
push
dec
ds
fdivrs
mov
xchg
jle
std
push
fisubrs
out
repz
jne,pn
mov
rcr
stos
xlat
pop
add
or
pop
pop
mov
jbe
cli
push
adc
inc
dec
sub
pusha
test
mov
mov
push
leave
in
xor
ss
cmpsl
inc
sbb
jbe
sarb
push
and
js
pop
fbstp
jg
jne
pop
cmc
or
pushf
add
xchg
inc
ljmp
sahf
cli
mov
cmp
cli
xchg
cmp
pop
mov
mov
les
shll
sub
mov
mov
mov
pop
fwait
xchg
sbb
lahf
cmp
mov
pop
jns
push
jbe
and
stc
rolb
jns
mov
mov
mov
enter
pop
testl
sub
jecxz
ds
mov
fbstp
lods
sahf
adc
and
sahf
fildll
mov
ja
stos
aad
pop
ret
scas
addr16
das
mov
stos
ret
pop
lahf
cmp
mov
lcall
or
mov
jbe
fidivs
mov
outsb
jg
or
mov
push
in
aam
and
cmc
mulps
mov
mov
lret
push
mov
dec
sbb
cs
push
aas
movsb
push
fisttpll
dec
push
lea
mov
dec
out
adc
mov
or
jno
mov
cmp
stc
jecxz
testb
mov
push
adc
out
ror
rorb
inc
aam
dec
and
dec
lods
mov
es
push
or
pop
push
cmp
lock
adc
arpl
pop
pop
mov
aas
cli
lret
insb
decb
jmp
jno
scas
gs
std
out
loope
loopne
push
iret
outsw
push
adc
add
cld
stc
mov
lods
cmp
loop
add
js
adc
int3
or
cs
lock
imul
cmc
inc
mov
stos
ret
hlt
cmp
push
adc
sbb
xchg
push
outsl
scas
mov
and
shlb
push
loope
xchg
mov
push
ss
and
jno
mov
mov
mov
jae
pop
ljmp
mov
adc
push
dec
sub
fst
or
push
pop
push
pop
mov
arpl
shlb
jo
cmp
cmpsl
jecxz
cmpsb
xchg
pushf
es
adc
jnp
push
lods
adc
sbb
out
enter
pusha
ljmp
stc
movsl
push
lea
jb
add
es
adc
sbb
sbbl
stos
or
xchg
out
roll
and
push
mov
push
mov
xchg
ret
dec
mov
add
adc
dec
jg
mov
add
outsb
push
xchg
outsl
fidivrl
sub
push
rcrb
aaa
push
adc
clc
mov
inc
jnp
test
cs
ja
addr16
jecxz
sub
xlat
mov
cltd
jo
inc
inc
into
lds
ljmp
xor
cld
jne
outsb
mov
fcmovnu
movl
hlt
sahf
or
pop
leave
movsb
mov
shrl
fucomip
inc
cwtl
imul
test
stos
shll
ret
pop
test
push
sbb
loope
imul
cmp
add
xchg
idiv
inc
inc
out
dec
cmp
call
push
push
imul
sarl
add
push
xchg
gs
movsb
lock
jmp
xchg
fdivs
mov
mov
in
and
dec
out
push
inc
std
andb
loop
sbb
cmpsl
mov
in
cld
mov
jne
mov
dec
jns
mov
mov
and
add
aad
shl
jne
into
dec
pop
and
adc
inc
sarb
cltd
mov
mov
add
xchg
clc
js
mov
sub
pusha
sti
pusha
adc
sbb
and
loopne
enter
jle
aam
jle
inc
xor
clc
cltd
in
or
dec
popf
add
mov
mov
dec
mov
xor
sub
lahf
shrl
xor
arpl
shrb
mov
push
add
iret
xchg
sbbl
cmpsb
pop
xchg
xor
mov
sub
in
into
test
or
mov
in
jp
scas
pop
fidivrl
jmp
add
dec
in
jnp
jg
jge
into
das
nop
add
fprem1
add
rorl
jnp
pop
cmp
cmpsb
xchg
dec
jl
pop
push
sub
inc
xchg
jbe
jno
inc
into
mov
dec
push
ljmp
stos
out
mov
sahf
mov
jg
shlb
xor
dec
pop
xor
sbb
jle
mull
notb
or
js
lock
lret
push
jmp
push
and
jb
es
ja
lods
adc
jae
sahf
movb
ret
adc
js
into
xchg
pop
xchg
in
ss
fimuls
sub
pop
pop
and
sbb
ret
ds
popa
loope
cld
pop
cmp
mov
movsb
nop
es
xor
mov
ret
mov
xor
aas
mov
popf
insl
fs
inc
jae
push
enter
lcall
jecxz
int
stos
sahf
in
inc
adc
xor
test
xchg
cmpsb
std
xorl
cmpsb
les
pop
mov
pusha
jg
mov
and
xlat
cld
adc
mov
push
sub
jl
jmp
pusha
addl
std
xor
jge
push
insl
out
sarl
xchg
jne
xchg
gs
mov
out
dec
dec
xor
lret
popa
je
out
js
push
xchg
mov
shrl
sbb
sub
stos
gs
cmp
rcr
test
jno
push
std
imul
stos
jl
pop
push
add
movb
int3
bound
dec
mov
ja
add
fidivl
fs
mov
loope
and
cmpsl
loop
sbb
mov
lret
xchg
ss
testb
push
xlat
ss
fs
mov
iret
xchg
jns
pushl
mov
loopne
movsl
movsl
mov
in
mov
insb
mov
xrelease
mov
lahf
sbb
jg
loopne
sbb
push
divl
xor
fldl
rolb
sbb
out
pop
pop
sbb
sbb
cmc
subl
cmp
push
ljmp
push
mov
push
inc
mov
out
movsb
xchg
fbstp
fcoml
pop
lods
out
mov
rorl
xor
lods
ror
sub
pop
mov
or
popf
pop
mov
mov
mov
push
aas
aam
mov
ja
pop
sar
shrb
inc
and
mov
mov
mov
fucomip
stos
sbb
movb
mov
roll
fdivrs
in
call
push
out
sub
std
cltd
notb
dec
popf
xor
test
xor
cltd
insl
insb
cmpsb
fwait
sbb
jae
daa
sub
decl
sbb
mov
lcall
sahf
lahf
xchg
outsb
cld
jmp
insl
sarb
inc
scas
f2xm1
call
icebp
mov
iret
arpl
stos
sbb
pop
sbb
ljmp
repz
fists
in
mov
dec
js
xchg
cmpsl
add
ss
sub
or
add
inc
ret
jle
test
sbb
fs
adc
push
mov
aam
leave
out
cmpsb
mov
les
pop
rcr
mov
add
lock
pushf
in
gs
es
push
add
mov
push
leave
mov
or
std
pop
mov
lcall
push
sub
addr16
sbb
iret
into
out
mov
jle
orps
adc
sbb
inc
sub
sbb
scas
mov
in
pusha
test
cmp
xorb
lods
call
dec
sbb
mov
sti
or
inc
addr16
nop
ret
fstpt
or
jbe
mov
das
ror
jl
adc
test
lock
test
fiadds
push
xchg
js
movsb
data16
or
add
popf
ss
or
nop
ss
bnd
mov
das
mov
or
add
mov
pop
xor
push
adc
enter
fwait
mov
mov
adc
in
fs
in
sbb
testl
xor
int3
adc
push
repz
xchg
xchg
cmp
inc
add
add
scas
push
ret
xchg
data16
push
jno
pop
call
jns
pop
in
mov
sbb
xorl
lret
pop
push
lret
fidivrl
fs
cmpsl
into
jecxz
pushf
clc
mov
inc
push
iret
pop
push
sub
sbb
addl
add
sub
repz
pop
popa
push
movl
inc
sbb
or
and
push
jbe
aas
cmc
aaa
cs
adc
adc
cltd
inc
loopne
inc
jbe
cltd
cmovle
adc
mov
sub
adc
adc
imul
rcrl
push
rcrl
sbb
fmul
fadd
mul
repz
sbb
xchg
sahf
lods
or
or
imul
xor
fcoml
add
xor
out
mov
lods
out
lret
inc
inc
dec
pop
mov
and
and
adc
push
rorb
pop
adc
sbb
pop
imul
inc
or
xchg
sahf
int3
push
xor
in
data16
xchg
pop
and
sub
test
fsub
jmp
adc
addb
cmp
adcb
ja
adc
ds
loopne
mov
repz
adc
test
pop
insb
insl
dec
cli
inc
or
pop
mov
mov
js
ja
test
aas
mov
sub
sbb
mov
test
ret
test
xor
lret
mov
mov
mov
cwtl
es
popf
push
jnp
icebp
jns
in
daa
dec
sub
rclb
add
fs
les
fldt
push
xchg
fsubrl
push
xor
xchg
in
leave
andl
mov
adcb
and
push
roll
mov
cmp
lods
insl
nop
jp
or
frstor
mov
popf
push
scas
out
test
lahf
scas
and
jl
pop
jmp
shlb
jne
xchg
or
push
mov
cld
cmp
mov
fsubrp
insl
idiv
scas
adc
xchg
es
loope
mov
ds
push
jle
jb
lds
pop
mov
dec
mov
push
hlt
sarb
sbb
clc
cmp
sbb
dec
inc
or
out
ds
sbb
inc
adc
cmpsl
popa
jno
or
push
gs
pusha
mov
mov
push
das
xchg
adc
daa
push
test
fstpl
xchg
add
inc
pop
push
icebp
fidivl
cmc
cmc
pop
adc
aas
dec
jno
jb
fs
jae
xor
sub
or
mov
pop
pop
call
sub
pop
stos
or
inc
inc
jo
xchg
in
std
pop
xchg
xor
xor
outsb
and
bnd
sbb
cmpsl
fwait
scas
push
xor
jns
call
sub
mov
mov
movsl
aam
cmp
test
pushf
xlat
arpl
fwait
jge
sbb
outsl
clc
bound
cld
dec
repnz
xchg
or
jns
clc
ret
packssdw
and
loope
cmpsb
jl
xor
mov
cmp
xchg
je
jmp
xor
mov
ss
js
aas
cmp
inc
mov
in
mov
addl
out
and
xchg
jge
inc
and
cmpsl
out
faddl
lcall
je
dec
movsl
cmp
icebp
push
test
jnp
mov
test
mov
inc
icebp
push
mov
aad
sahf
lcall
mov
mov
cli
mov
fcmovne
fs
adc
in
or
js
adc
stos
cs
xlat
mov
push
aas
pop
leave
xchg
rcrb
fnstsw
scas
mov
fisubs
xor
out
sub
out
xchg
and
jp
sbb
pop
mov
mov
xchg
push
mov
ljmp
mov
inc
dec
dec
test
insl
push
mov
jns
fwait
push
inc
jno
and
into
addr16
lea
jl
insl
xchg
mov
mov
mov
sbbb
sahf
inc
test
pushf
and
push
add
dec
test
cmp
aad
xchg
cwtl
inc
nop
adc
or
and
push
std
xorb
stos
inc
ja
pop
lcall
pop
mov
jb,pt
push
sbb
fdivrl
stos
dec
jl
mov
iret
movl
subl
mov
pop
leave
movsl
lods
pop
in
pop
pusha
push
xchg
imul
mov
outsb
cmpsb
inc
mov
sti
fldcw
icebp
bound
mov
insb
xchg
mov
cmp
in
mov
jmp
xchg
push
icebp
mov
out
or
daa
jmp
test
pop
pop
jmp
pop
add
xor
movlps
call
out
insl
imull
dec
push
jmp
mov
push
and
cmpsl
dec
adc
in
inc
mov
dec
xor
cmpsl
mov
jmp
cmp
xor
or
hlt
mov
mov
cmc
jbe
cmp
mov
jno
loop
jae
in
repnz
out
nop
stos
mov
xlat
push
cld
inc
pop
ja
sub
inc
aad
mov
js
and
aas
jno
pusha
xor
lods
pop
loop
jo
lret
movsl
mov
xchg
call
sub
push
lahf
pop
push
sbb
addl
pusha
sub
and
nop
mov
js
jbe
cmpsb
mov
mov
cmpl
dec
push
xchg
ljmp
loope
fmuls
mov
mov
mov
pop
sbb
in
int
sub
mov
xchg
popf
push
add
sahf
sub
daa
out
rclb
into
shrl
gs
push
cmp
ja
mov
inc
xchg
sarl
dec
test
adc
adc
push
out
inc
pop
popa
inc
jl
lret
pop
fldcw
cmp
mov
mov
fsts
lods
sub
enter
mov
xchg
inc
out
jecxz
shlb
cltd
cmp
test
adc
xchg
jne
into
and
mov
or
pop
dec
adc
and
pop
jg
je
lods
sarl
scas
imul
add
and
xor
push
cmp
lcall
push
xor
cs
pusha
jo
imul
pushf
lods
adc
cmp
shl
xchg
inc
jle
aam
sbb
mov
fisttpl
pusha
lret
aas
mov
dec
in
xchg
shll
repnz
xchg
xorb
pop
addr16
mov
movsb
lods
rcll
add
lcall
sti
loop
push
cmc
fwait
pop
adcb
xchg
nop
sbbb
insl
dec
push
sarl
pop
leave
xlat
mov
pop
mov
mov
lods
dec
add
adc
xchg
inc
inc
imulb
fldl
add
out
loopne
mov
ja
push
jmp
mov
push
jnp
gs
dec
pop
in
imul
mov
adc
rorl
jne
xchg
xchg
ljmp
lret
or
cmp
adc
rcll
test
imul
mov
cmp
add
jae
scas
mov
leave
sti
mov
pop
adc
mov
jl
xlat
pop
inc
repz
sbb
stc
xchg
or
mov
in
fwait
xchg
xlat
cmpsb
fwait
push
imul
js
dec
lods
into
repnz
cmp
or
sti
insb
or
les
pop
icebp
rcr
clc
insl
nop
insl
cs
idivb
add
repz
and
and
cs
fsubl
les
mov
sarb
adc
and
pop
aam
sbb
inc
cmp
fists
rorb
inc
inc
sub
ret
adc
out
aaa
movsl
test
pop
imul
das
repz
xor
ljmp
jnp
mov
nop
iret
movsb
mov
daa
cmp
jae
or
push
out
lods
xchg
test
dec
pushf
hlt
mov
out
mov
sub
stos
inc
sbb
bound
cltd
int
sbb
faddl
push
ret
test
add
mov
test
bswap
std
adc
jmp
shl
sub
in
outsl
cmp
imul
aaa
inc
sbbl
pop
jnp
rcrb
arpl
cld
das
push
push
jecxz
and
test
push
jge
cltd
xor
sarb
dec
xchg
inc
mov
popf
aam
push
mov
pop
add
stc
clc
rol
pop
lcall
in
lods
cmp
pop
fcmove
push
mov
sub
repz
pop
iret
mov
sub
aas
test
sbbb
fisubrs
aas
leave
sti
jecxz
sahf
mov
sbb
jmp
int
push
and
jmp
data16
jge
scas
test
pop
lea
sub
push
xchg
mov
xchg
jbe
int3
mov
mov
movsb
xchg
add
add
or
arpl
jg
xchg
jp
cld
push
lahf
sbb
xor
adcb
test
add
out
daa
jg
mov
fs
fwait
inc
arpl
push
sbb
scas
rcll
cmp
aad
adc
jns
mov
sbb
in
push
dec
mov
outsb
arpl
pop
or
jne
xchg
cs
dec
cmp
cwtl
aas
xchg
sbb
in
dec
fdivrs
cmp
incl
and
cmp
jns
sub
int
in
pop
sub
push
sub
and
adc
in
leave
jle
sub
mov
out
push
xor
mov
dec
cmp
neg
decl
xchg
push
ret
cmc
jle
or
mov
in
push
aam
inc
jbe
dec
enter
shl
and
aad
pop
movl
mov
pop
jbe
adc
aad
movsb
adc
or
add
adc
enter
xor
push
xchg
xchg
loop
adc
in
push
int3
inc
add
mov
push
ja
inc
gs
fsubrp
inc
jns
pop
dec
fwait
ljmp
mov
push
sub
mov
push
dec
jb
add
pop
int3
mov
leave
aam
test
push
xor
lods
sub
pop
bound
rol
cmpsl
jno
test
push
xor
xor
dec
int
jne
mov
lar
sahf
dec
mov
pushf
push
jae
pop
lea
mov
mov
jae
inc
popf
xor
repz
mov
mov
xor
loope
sahf
xchg
out
push
flds
xchg
loop
adc
inc
stos
fcmovnb
loope
das
cwtl
pop
fstpl
or
insb
or
dec
xchg
ds
cmp
xchg
mov
inc
cmp
pusha
cltd
and
out
es
cs
jo
fs
enter
cmp
pop
dec
add
bound
push
pushf
push
dec
mov
aam
out
and
fisubs
popa
jne
cld
rorb
or
cwtl
jge
out
or
in
add
test
cs
adc
lcall
xchg
jge
in
xor
mov
mov
lahf
jbe
fwait
dec
aam
push
xor
xchg
mov
jnp
mov
roll
mov
push
inc
adc
or
xor
dec
and
sub
rorb
sahf
outsb
dec
jnp
stos
jo
ss
std
or
sbb
sbb
or
cmp
cmpsl
jecxz
mov
or
mov
xor
or
jb
in
hlt
push
shrb
push
aam
sub
inc
push
out
leave
into
push
les
lea
mov
inc
jl
mov
mov
push
outsl
cmpl
xor
push
js
aaa
repnz
push
mov
movsl
add
push
cld
outsb
lcall
and
insl
cld
and
pop
push
cmpsl
adc
pusha
and
cmovp
fwait
stos
or
mov
mov
add
xchg
out
movsl
xor
cmpsl
add
jbe
cs
iret
dec
sub
ret
jno
and
in
dec
cwtl
sbb
sub
mov
and
pushf
xor
mov
nop
pop
es
or
cmp
pop
addr16
and
fnstcw
mov
xchg
repnz
mov
sbb
ret
addr16
cmpl
push
shlb
xor
outsl
inc
sbb
cmp
pop
xlat
out
jecxz
mov
lret
mov
jl
mov
lahf
test
mov
push
lods
notl
dec
jo
pop
loopne
out
dec
jae
sub
decl
cmpsb
mov
scas
cmp
fildll
stc
mov
leave
rcr
mov
pop
int
test
add
lods
inc
sbb
aad
sub
outsb
mov
xchg
in
aam
or
ret
mov
in
loope
loope
push
jbe
fwait
arpl
sbbb
cmpsl
sub
mov
xor
cmc
jl
je
roll
lds
int3
scas
xchg
dec
inc
lods
inc
mov
inc
cmp
out
ss
bound
mov
pop
push
fldl
mov
push
outsb
sbb
jo
push
or
daa
dec
hlt
pop
mov
mov
add
lahf
imul
pushf
ja
cli
outsb
pushf
jmp
mov
add
sbb
xchg
sub
lahf
les
outsb
sti
jb
out
sbb
xor
cld
les
dec
sbb
into
mov
insb
pop
or
cmpsl
shlb
sub
xchg
or
adc
jns
lods
imul
insb
ss
jbe
xor
in
insb
bound
mov
pop
mov
jecxz
ss
pop
in
cmp
push
bnd
mov
cmpsb
add
std
mov
xchg
jl
movsb
ret
sub
adc
cmp
in
test
mov
and
mov
sub
cld
movsl
inc
inc
or
fmuls
xchg
ss
jae
rorl
push
push
jp
jnp
cld
sub
xor
xor
cmpsw
add
push
cmp
fs
jae
popa
cmpsl
mov
cmp
nop
ds
nop
lahf
ficoml
aam
scas
sarl
or
cwtl
shrb
test
xchg
push
and
std
insb
lahf
mov
xchg
fwait
std
cmp
mov
fisubrs
jnp
mov
imul
jne
inc
dec
and
mov
test
mov
jbe
in
mov
bound
add
ja
xlat
adc
inc
fs
lret
jmp
or
ja
fwait
push
cltd
test
fisubl
sbb
fisubrs
mov
sub
cmpb
xchg
inc
xor
pop
in
or
sbb
inc
mov
ret
mov
outsb
push
aaa
sbb
mov
outsl
lret
cmp
ljmp
push
push
push
or
add
pop
add
stc
or
xor
stos
push
out
lret
mov
and
lods
ljmp
add
movsl
push
mov
push
fisttpll
icebp
sbb
popa
ljmp
shll
imull
outsb
xchg
mov
test
popa
mov
inc
xchg
jmp
cwtl
ja
xlat
cltd
insb
and
out
or
adc
scas
lret
push
sbb
aad
xor
test
jo
xor
test
or
sbb
nop
mov
pushf
pushf
cmpb
adc
lds
fs
xchg
xor
sti
adc
hlt
out
xchg
clc
inc
movsb
sbb
stos
xchg
xchg
mov
mov
and
jne
pop
inc
jb
aaa
ja
in
sarl
lock
mov
mov
out
dec
and
cmpsb
or
add
mov
push
xchg
sub
scas
jp
mov
addr16
div
and
dec
jnp
xor
flds
iret
sbb
data16
mov
jecxz
cmp
int3
jbe
cltd
sarb
jns
push
dec
lcall
push
cmp
movsb
xor
lcall
xchg
dec
test
in
cmpsl
pop
and
rorb
inc
shl
cli
adc
push
jbe
test
jmp
ficoml
idivl
lret
xchg
dec
inc
and
cmp
cmp
fcompl
addr16
sbb
mov
and
leave
sub
pop
xor
nop
mov
cmc
adc
inc
shl
cmpsl
or
dec
adc
sbb
push
or
pop
hlt
int3
sub
rcrb
jns
and
inc
sub
cmp
inc
pop
int
and
test
imul
pop
les
xchg
or
push
addb
ja
cmp
xlat
adc
aam
pop
or
mov
imul
adc
dec
jbe
and
jo
lret
divb
add
inc
xor
xchg
dec
rcll
xor
cwtl
fdivrs
mov
inc
sub
inc
xor
xchg
jb
stos
std
ljmp
inc
push
call
inc
lahf
sub
xor
lods
je,pt
sbb
movsl
jg
and
fisubrl
mov
gs
fwait
xor
cmp
or
aaa
bound
pop
sbb
add
aad
pop
cmpb
leave
and
lods
adc
cmpsb
sbb
pop
mov
pop
scas
bound
test
call
cmpsl
inc
imul
in
adcl
inc
je
mov
pop
add
push
fdivl
outsl
lret
jecxz
dec
clc
insb
fcoms
mov
mov
mov
bound
cmp
and
cmp
in
sbb
xchg
subl
aam
xor
inc
std
loop
int3
dec
cmp
push
pop
test
aaa
pushf
dec
lret
sub
fimull
pusha
std
pmaxsw
fs
cmpsl
outsb
stc
dec
cld
mov
push
push
stos
inc
cmp
push
lret
aam
mov
gs
fimuls
adcb
mov
rcrb
push
inc
bound
test
imul
cli
in
fcomi
cmp
push
jp
sub
lock
jge,pt
scas
jmp
mov
xor
fdivl
iret
sbb
push
rcrb
repnz
sub
jp
lods
sbbb
inc
imul
insb
push
xchg
int
addr16
add
cmpsl
mov
or
dec
add
call
pop
ljmp
stos
sbb
xor
pop
sub
inc
fwait
jb
add
or
pop
popa
mov
movsl
lock
sarb
xor
and
pop
inc
popf
inc
cmp
insb
lret
pop
mov
fs
out
mov
sbb
test
inc
fistps
pusha
mov
imul
xor
fnstcw
popa
jg
push
sbb
push
sub
addr16
daa
adc
xor
fchs
rcrb
filds
nop
pop
ficoml
push
pop
jae
add
imul
dec
ret
jns
aad
pushf
ficoms
leave
imul
dec
or
xor
lea
xchg
inc
std
cli
cwtl
pushf
cmp
fs
mov
sarl
pop
lock
ret
push
cmp
imull
cmpsb
xor
std
test
movsl
aam
or
push
or
inc
test
out
aaa
sti
mov
and
imul
mov
lock
mov
mov
shlb
jmp
ret
adc
pop
pop
push
push
inc
inc
test
mov
jle
adc
push
aam
pushf
and
inc
xor
pop
push
fnsave
and
mov
stos
decb
sbb
mov
out
movsl
pop
sub
movsl
adc
jbe
sub
fidivs
sbb
addl
mov
lock
mov
scas
jns
sbb
repz
arpl
mov
mov
sbb
rsqrtps
mov
jge
shlb
rcll
mov
mov
push
pop
cmpsb
push
les
fs
scas
lock
xor
stc
leave
pushf
cmp
sub
or
push
daa
mov
icebp
imul
xchg
nop
aad
sbb
rorl
pop
loop
int
jbe
and
cmc
add
outsb
cmp
subps
xor
aad
sbb
lea
test
lahf
add
inc
sti
mov
add
cmpsl
insl
cltd
arpl
add
mov
and
push
xchg
inc
inc
xchg
adcl
ja
pusha
sub
stos
jb
mov
cmpsl
jp
aam
mov
fcmovnu
jecxz
pusha
push
jns
push
rcrb
adc
in
mov
jo
or
jmp
or
pop
mov
xchg
clc
jo
jb
repnz
mov
mov
sti
mov
xor
jbe
xor
imul
pop
and
pop
mov
mov
cld
testb
mov
jge
rorl
adc
mov
lahf
insl
jecxz
sub
jbe
rorb
ljmp
inc
xor
jns
add
out
rcll
nop
loop
dec
out
inc
jmp
fisubl
clc
hlt
popa
fsubr
push
ret
pusha
push
jecxz
jg
test
nop
xlat
ja
mov
jbe
ja
push
sub
inc
ss
or
lods
or
movsl
pop
or
cltd
mov
xlat
movsb
and
lcall
mov
jae
outsb
hlt
xchg
mov
in
xor
lods
jno
dec
call
mov
js
fucomp
inc
mov
incl
mov
int3
fsubrs
or
ss
sbb
mov
cmp
jo
pop
mov
adc
push
or
inc
dec
es
xchg
ret
ret
cmp
pop
jle,pt
mov
cld
dec
jge
xor
lahf
and
sbb
inc
and
std
mov
negb
xor
mov
cwtl
xor
cmp
mov
mov
mov
jbe
pop
sub
add
xchg
ret
outsl
lock
das
js
add
and
cmp
dec
and
repz
xor
test
sbb
stos
jnp
and
mov
sbb
push
sub
add
enter
gs
jo
push
sub
xchg
xlat
dec
andb
sub
xor
and
cmp
out
sti
push
and
lret
push
test
jmp
lret
insl
inc
and
outsb
jecxz
js
mov
mov
xlat
and
loopne
lcall
mov
pop
mov
leave
inc
cmp
xchg
pop
lods
mov
and
pop
push
jmp
fs
call
and
inc
shrl
in
aaa
push
xchg
mov
call
and
or
popa
movsb
idivb
movsb
add
xor
fiadds
test
sbb
lds
mov
push
insb
xchg
add
dec
roll
lret
cld
imul
shrl
push
mov
pop
xlat
out
cmp
jmp
lds
sub
mov
or
push
mov
sbb
repz
das
in
je
pushf
push
leave
fcomp
xchg
decb
mov
mov
sbb
sub
mov
lret
mov
jl
lods
add
loopne
out
cmp
icebp
cmp
sbbl
lahf
mov
sub
sub
mov
ret
jmp
sub
les
leave
sub
movsl
mov
mov
leave
mov
push
outsb
xchg
cwtl
mov
add
subl
scas
xor
cmpsl
shll
aaa
and
call
cmpsl
mov
std
aam
daa
push
pop
int3
mov
pop
sub
test
mov
push
sub
ficompl
ljmp
adc
enter
or
lods
sbb
adc
in
mov
aaa
pop
mov
in
push
shlb
dec
mov
push
sbb
sbbb
ret
jge
adc
shll
sbb
cmp
inc
lea
mov
push
sub
inc
inc
or
cmp
xadd
sbb
das
bound
cmp
imul
push
adc
sarl
pop
jmp
inc
daa
adc
dec
out
into
inc
and
xor
add
movsb
inc
mov
push
pop
sbb
fcmovb
sub
push
adc
or
and
out
in
mov
push
cs
sti
jmp
inc
jecxz
not
imul
icebp
rclb
cmpsb
or
cld
cld
loopne
jae
mov
jecxz
stos
dec
fwait
jge
adc
and
sti
lret
daa
aad
pusha
lods
and
pop
and
push
aas
jp
jbe
lret
cli
jb
xchg
inc
pop
out
shrl
movsl
jo
or
mov
in
jnp
and
jbe
movsl
jle
pop
inc
adc
or
cli
cld
add
ret
test
add
inc
pop
inc
cmpb
push
mov
loope
int
dec
xchg
push
addr16
test
test
add
mov
jle
xor
mov
dec
lret
dec
sbb
and
mov
mov
sbb
clc
cmpsb
push
call
jno
das
lea
fsubrp
lods
sub
pop
hlt
orl
arpl
and
push
rcll
sub
cmp
int3
jmp
mov
inc
mov
int
ret
jae
arpl
rcrl
and
fstpl
pop
lea
push
and
push
ret
pop
push
flds
add
mov
popa
mov
in
sbbb
pop
xor
jmp
fsin
mov
lea
shrb
popa
jecxz
imul
lods
fs
clc
xchg
rolb
das
pop
int
hlt
sub
dec
pop
sbb
push
repnz
sub
lods
sahf
mov
jmp
jnp
and
cmp
adc
add
add
dec
es
movsl
mov
mov
and
loope
cmpsl
scas
xchg
lret
test
mov
lcall
sub
dec
shll
in
aam
mov
mov
aam
int3
les
popa
or
insl
mov
aaa
or
scas
out
ljmp
xchg
aaa
lea
add
jno
cmc
inc
outsl
sub
xchg
cwtl
int
fcompl
or
sub
insb
popa
shlb
push
xchg
push
xchg
sub
pop
mov
inc
mov
sbb
aaa
aas
adc
nop
mov
pop
mov
inc
jp
or
insb
mov
arpl
push
fsub
mov
imul
das
jle
add
fcoml
leave
stos
and
std
mov
lcall
mov
mov
sbb
xchg
das
adc
loop
mov
pusha
mov
mov
jbe
cld
mov
lret
in
inc
mov
lret
inc
cwtl
push
push
cmpsl
add
add
lret
push
hlt
scas
pop
xorb
js
rcrb
pop
add
in
push
xchg
idiv
sub
mov
push
mov
out
je
ret
movsb
lret
mov
sarb
jb,pn
imul
fs
loop
scas
xor
mov
cmp
insb
ljmp
jb
inc
scas
jle
nop
xorl
pop
orl
mov
pmaddwd
cmp
push
pop
cmpsl
pop
xchg
dec
inc
test
test
xor
sub
mov
dec
sub
sar
leave
and
jge
stc
pop
sub
cmc
arpl
or
fsub
push
mov
xor
ret
xchg
ja
push
out
and
cwtl
pop
sbb
int3
push
mov
mov
adcl
das
or
fsubl
pop
out
test
outsl
or
sarl
in
pop
dec
loope
and
addr16
in
mov
xchg
jecxz
add
sahf
add
aas
insb
sti
std
popl
add
loopne
aad
inc
or
pop
scas
mov
push
stc
js
jnp
rorl
cwtl
iret
push
add
push
inc
cltd
jb
mov
ret
xchg
loopne
or
psubw
mov
outsb
adc
sub
mov
fwait
out
ret
adc
lea
cmp
xor
jb
push
call
cmp
mov
and
mov
icebp
pushf
mov
addl
xor
in
cmp
adc
dec
or
dec
mov
xlat
scas
leave
cmp
mov
movsl
sub
icebp
add
mov
in
daa
test
pop
out
ret
or
and
mov
inc
test
iret
insb
xlat
ss
mov
add
lret
push
hlt
fidivl
stc
mov
pop
sahf
mov
adc
jno
mov
or
inc
push
clc
and
data16
adc
in
dec
cmpsl
int3
add
data16
inc
clc
loope
mov
add
es
mov
sarl
popa
or
push
div
test
pop
hlt
aam
fmul
mov
add
in
sahf
cmpsl
inc
pop
daa
shll
sbb
fnstsw
or
outsl
sti
fs
sahf
paddb
mov
popl
and
dec
sbb
sub
add
lcall
std
mov
mov
mov
pop
pop
push
hlt
shr
or
testb
sahf
dec
add
and
nop
push
cmp
insb
nop
or
fcmovnb
push
movsb
dec
push
or
and
out
cld
arpl
and
popf
lret
rolb
sahf
mov
mov
cmp
icebp
inc
sysexit
loop
cs
mov
mov
mov
pop
and
jno
push
and
and
fwait
or
aaa
mov
xchg
sahf
mov
mov
adc
shrl
sbb
jne
or
add
cmpsl
inc
inc
xor
sub
insl
ficompl
xchg
and
xor
inc
mov
push
negl
jbe
loopne
mov
jno
and
outsb
xchg
jae
shl
push
sub
adc
loop
pop
out
xor
and
ficoms
sub
jno
dec
jg
dec
inc
mov
cs
ljmp
xor
mov
cmp
sbb
cmpsb
cmp
sub
shll
shlb
mov
sbb
imul
out
call
aam
es
outsb
in
flds
cwtl
cmp
jo
mov
mov
ja
inc
loop
pushf
ja
pop
dec
mov
lcall
fmuls
and
or
xchg
xor
dec
or
imul
fnsave
push
xchg
testl
ret
sbb
outsb
inc
cmpsb
or
loope
lcall
pop
adc
jne
and
pop
mov
mov
xchg
cli
repnz
data16
test
mov
icebp
fdivp
fcoms
cwtl
idiv
pop
and
cltd
cmp
ficompl
xorb
and
sahf
xchg
les
or
decb
sub
sarl
xor
jle
jmp
aad
pop
negl
std
sub
or
mov
pop
leave
add
push
push
push
xchg
lods
inc
ss
push
loopne
pop
hlt
popf
xchg
jnp
pop
cmp
ret
dec
jge
inc
jne
shlb
sbb
sbb
pop
movsl
push
es
jae
adc
jo
push
sub
push
sbb
fildll
push
sbb
jle
jl
push
jbe
jne
outsb
cmp
adc
push
push
repz
pop
int3
fimull
adc
sbb
push
cmp
push
push
outsb
pop
xchg
fldcw
pop
insb
mov
xchg
cmp
cmp
push
and
cmp
insl
mov
faddl
bound
ss
mov
call
push
scas
sbb
xchg
daa
in
jl
sbb
inc
rcll
fimull
and
jg
in
int3
insb
jmp
test
and
push
sysexit
rcrb
jl
sahf
das
dec
jbe
sbb
test
inc
mov
sbb
xchg
addl
lea
mov
pop
in
lcall
inc
xorb
adc
add
jg
sahf
dec
jno
lahf
mov
sbb
push
scas
mov
pushf
loop
nop
jbe
and
fsubrl
mov
mov
add
cld
outsb
jge
gs
pop
sti
mov
cmpl
movsb
and
push
leave
mov
sahf
mov
inc
and
popa
in
iret
ljmp
movsl
pop
clc
sub
adcl
add
jmp
and
rclb
shrb
jae
mov
cwtl
mov
imul
aaa
and
sub
testb
inc
jbe
mov
mov
mov
popf
xchg
mov
fldt
fwait
aad
jecxz
iret
test
xchg
add
cmp
push
and
scas
pop
jl
iret
sahf
cmc
cli
nop
mov
inc
out
scas
inc
pop
push
cmpl
test
js
imul
adc
push
insb
mov
push
push
push
cmp
into
sbb
cmp
sbb
fcmovne
ss
dec
or
lods
fs
push
adc
jbe
fmuls
sahf
cmp
sub
fwait
jb
sarb
inc
lods
das
shl
sbb
push
lcall
rcrl
fstpt
mov
adc
pop
sbb
cmp
cmp
je
mov
ret
or
fmull
mov
adc
call
inc
jo
and
enter
xor
push
mov
mov
lea
pop
call
xchg
insb
dec
cmpsb
cmp
xchg
cld
lret
dec
arpl
adc
add
lret
ja
cmp
lcall
loopne
loopne
inc
sbb
add
mov
mov
cltd
mov
push
sub
repnz
mov
add
or
sti
pop
jl
xchg
pusha
mov
sub
shrl
popf
mov
adc
or
push
pop
lds
mov
push
into
int
jmp
out
add
push
mov
cmp
pop
sub
sub
or
mov
sub
leave
clc
cmp
lahf
inc
fcompl
repz
cld
clc
mov
lds
dec
sbb
repnz
fisubl
mov
fdivl
add
xor
sbb
xchg
or
xor
and
sti
call
ss
out
mov
repz
xor
add
cltd
push
lods
in
inc
rcl
adc
xchg
fcomps
pushf
xchg
ret
mov
xlat
pop
imul
inc
lret
push
cli
imul
mov
push
or
jae
and
jb
mov
dec
fldt
xchg
and
xchg
jl
cmp
scas
outsb
adc
dec
jbe
test
dec
inc
jmp
pop
add
pushf
mov
mov
bound
js
outsb
and
xchg
push
cmp
andb
xor
lret
insb
frndint
clc
push
add
fwait
mov
sub
jnp
das
sub
add
mov
jmp
clc
add
adc
jmp
sub
cmpsl
cwtl
pop
cs
and
imul
inc
xor
mov
jb
vcvtpd2dqx
mov
stos
dec
or
adc
imul
xchg
pop
popa
mov
pop
pop
sbb
mov
cmpsb
insb
inc
ret
xor
xchg
cld
sbb
mov
outsb
mov
lret
inc
and
push
pop
inc
adc
pop
sbb
int
jo
roll
rorb
jo
and
movsb
adc
mov
jecxz
xchg
add
sub
mov
dec
mov
ss
xchg
movsl
rol
jb
adc
jnp
push
lods
in
iret
jns
aas
enter
jmp
mov
dec
rcrl
jge
fwait
or
sahf
jnp
lcall
out
aas
ret
out
pop
rolb
rcll
divb
pop
pop
adc
ret
mov
jp
aam
mov
add
add
jno
movsb
mov
cmp
enter
sub
or
je
mov
insl
out
cmp
enter
jle
xlat
mov
js
inc
fcomip
dec
push
or
cmp
shr
insl
sub
add
and
sbb
pop
xchg
add
inc
out
loop
je
cli
cmpsl
out
fisubl
out
xor
lods
pop
rorl
mov
mov
push
fwait
mov
in
popf
iret
mov
and
loope
xchg
scas
add
sahf
idivl
stos
jmp
adc
dec
and
sub
adc
sarl
push
xchg
rcll
add
stos
inc
flds
push
jle
lret
test
jbe
jle
ds
and
sbb
outsw
push
lods
pop
in
xor
mov
push
xchg
add
inc
je
pop
lea
je
sbb
rcll
subb
xchg
call
je
sub
lock
testl
sbb
sbb
xor
jge
push
jg
cmp
inc
jmp
or
mov
and
imul
and
and
jp
mov
and
xor
dec
ja
mov
adc
xchg
push
xchg
pop
insb
inc
sahf
xor
pop
pop
clc
jecxz
mov
adc
cvtps2pi
mov
mov
mov
rcrl
jbe
adc
cld
repnz
and
mov
or
adc
fisubs
and
ficompl
bound
fsubrl
jg
pop
add
push
jmp
jb
inc
scas
lods
and
mov
sbb
or
icebp
jno
rcll
dec
jecxz
and
aaa
fldt
ja
dec
scas
pop
jl
jmp
or
mov
mov
nop
dec
divl
stc
jg
aad
aad
cmp
pusha
movsb
add
dec
iret
pushf
leave
add
jecxz
mov
xor
push
stc
jl
mov
or
dec
xchg
imul
mov
xlat
imul
xor
lods
ficomps
fisubrs
pop
pop
lcall
jge
cmpsl
sub
lods
cmp
dec
addr16
cmc
stos
push
lods
ljmp
stos
and
mov
fisttpl
pop
loop
push
int3
adc
cmp
popa
stos
sub
lret
daa
pop
mov
xchg
test
arpl
adcl
pop
push
xchg
jno
les
aad
repnz
sbb
dec
ror
fidivrs
lret
je
repz
mov
xor
mov
negb
mov
inc
std
lret
dec
shlb
jmp
lea
pop
sti
loopne
and
and
and
or
sahf
dec
mov
outsb
rclb
fadd
lods
call
sahf
jle
clc
mov
mov
pop
jb
cmp
adc
add
cld
or
push
bound
mov
pusha
fwait
arpl
inc
dec
imul
mov
mov
cmp
test
jb
add
xlat
arpl
movsl
pop
sub
cmc
push
pop
jns
jmp
jnp
dec
jge
icebp
popf
test
push
es
out
xchg
cmp
into
cmp
mov
lret
lret
or
mov
jle
bound
cmpb
mov
xlat
push
fstps
inc
orl
stc
imull
lret
pop
negl
mov
add
iret
movsl
sub
aad
pop
repz
loopne
adcl
pop
fwait
dec
cmp
pop
call
xchg
push
stos
xor
addr16
mov
push
vmaxpd
cltd
sbb
sbb
jno
pop
or
mov
test
jb
sub
lods
xchg
adc
lods
push
cmp
mov
or
movsl
imul
sbb
in
cmpsl
add
es
cmp
and
lods
jl
adc
xchg
pop
dec
leave
dec
loopne
xlat
push
das
movsl
sbb
repz
les
mov
jno
imul
sbb
dec
xlat
ljmp
mov
lahf
addr16
insb
addr16
aaa
arpl
xor
dec
xchg
sub
clc
cli
sbb
aam
iret
mov
call
movl
pop
inc
jecxz
cmp
shll
clc
mov
or
shr
lods
pushf
fnsave
push
lret
dec
mov
mov
inc
sti
inc
loopne
sbb
sbb
loop
push
cmc
add
xor
push
xorb
cli
loop
iret
cmp
cmp
in
sub
dec
test
pop
mov
rcrb
dec
cmp
shlb
cld
pushf
scas
and
push
jo
push
ja
lret
pause
rcll
adc
mov
cs
cmp
fstp
mov
push
aam
outsl
gs
test
xlat
imul
lods
aaa
mov
pop
and
fcomp
test
cs
dec
out
sbb
jno
pop
fldcw
das
mov
out
getsec
mov
xor
sahf
pop
xchg
adc
cmp
stos
sti
mov
pusha
push
adc
jge
call
mov
mov
repz
les
lret
inc
lea
or
xchg
dec
aas
xchg
fwait
roll
int3
sti
insl
mov
test
std
cmpsb
mov
rolb
dec
sahf
xchg
mov
popf
pop
pop
bound
lods
std
add
dec
or
cmp
and
movb
xorb
ja
and
or
addr16
test
es
mov
xchg
loope
pop
sub
lahf
push
ficoml
mov
adc
and
push
dec
out
cmpl
pop
lods
xor
cwtl
notb
adc
mov
push
ja
lock
xor
inc
jle
lods
xlat
loope
dec
movsl
jb
jmp
mov
fwait
cmp
ret
movsl
lock
enter
in
dec
add
inc
sbb
cs
push
mov
das
push
rcrb
outsl
mov
inc
daa
sub
push
mov
dec
mov
push
push
data16
mov
mov
jne
mov
or
adc
filds
insl
inc
or
adc
nop
jp
in
ja
and
push
and
jl
or
ja
rol
add
ret
dec
pop
lret
shr
mov
in
sbb
ja
sub
xor
lods
xchg
ljmp
jmp
in
fwait
ljmp
mov
xorb
pop
adc
push
sbb
and
add
cwtl
outsl
inc
push
pushf
into
test
pop
mov
dec
outsb
pop
fidivrl
stc
xor
std
sub
mov
mov
push
pop
lret
lods
pop
fs
adc
adc
test
pop
pop
ja
cmp
dec
in
mov
mov
out
cltd
leave
push
cld
xlat
repz
adc
out
push
jle
sbb
lods
insb
pop
mov
iret
loope
fnsave
xchg
push
push
xchg
xchg
int
or
xchg
sahf
daa
mov
pusha
lcall
lock
clc
jnp
pop
fcom
push
dec
push
jmp
lock
push
adc
mov
dec
dec
cmpsl
pop
pop
mov
jne
jg
pop
arpl
lds
popf
stos
std
jle
pop
imul
or
lock
sbb
and
inc
add
ret
jo
pop
pushf
lret
push
adc
push
arpl
xchg
daa
mov
in
push
push
pop
and
dec
cmpl
or
sub
fsubl
in
and
mov
shrl
das
cmpl
sti
gs
sub
addb
sahf
xlat
jecxz
lahf
shrd
pop
jae
xor
mov
movsb
mov
sub
xor
pushl
sub
jo
rcrb
jle
in
xchg
jne
pop
sbb
daa
or
and
xor
jmp
mov
test
lods
cmp
popf
clc
xchg
pop
sub
stos
jmp
and
into
mov
adc
cmpsb
leave
xchg
fst
inc
clc
cld
test
sarl
inc
or
imul
js
jmp
cmp
and
fmull
inc
inc
ret
popa
mov
pop
xor
sti
aaa
and
cmpl
push
hlt
mov
mov
es
push
mov
and
jecxz
add
clc
or
int3
jo
movsb
fs
mov
lea
fdivrl
cmpsl
in
sub
pop
inc
and
call
jae
outsb
jae
push
pop
adc
dec
inc
push
lods
sub
sub
add
xchg
scas
add
sub
std
sbb
pop
sub
mov
cmpl
ja
pop
and
mov
cmpb
lods
mov
and
jp
inc
or
cmc
mov
push
lea
mov
cmpsb
ror
popf
out
mov
imul
fisttpll
xor
loopne
jle
inc
scas
hlt
mov
sub
sbb
xchg
jg
mov
fistpll
sbb
aam
fisubl
lea
mov
or
xor
cmp
sarl
xchg
in
loope
subl
dec
inc
xor
test
jg
ret
jne
imul
cmp
loop
aaa
sub
rclb
les
adc
dec
inc
sub
data16
push
push
arpl
aaa
insl
or
out
rcll
or
mov
mov
leave
aad
dec
sub
pop
mulb
or
mov
dec
jp
leave
mov
jae
ret
mov
and
rorb
xchg
add
xchg
call
jbe
xor
and
out
xchg
xchg
popa
cmpsl
fdivrl
xchg
and
mov
cmpsl
pop
gs
add
add
lods
adc
mov
aaa
push
xlat
xor
xchg
add
jge
jns
fidivl
mov
cli
adc
push
dec
ja
xchg
dec
push
dec
inc
ss
fisubrs
sub
xor
inc
mov
or
fidivl
iret
pop
xor
xchg
dec
jecxz
bound
fidivl
jmp
int
arpl
dec
or
mov
mov
xlat
test
cmpl
cmpsb
imul
xchg
pusha
bound
hlt
dec
jae
xor
popf
repz
stos
inc
cmp
mov
inc
fmul
sahf
mov
pop
xchg
scas
adc
psubb
jns
adc
pop
mov
das
scas
cmp
mov
ret
xor
notb
repnz
sbb
cs
sub
lea
dec
js
xchg
idivl
push
xor
dec
scas
popf
mov
dec
xor
mov
in
in
push
test
inc
xor
dec
xchg
mov
push
xchg
cwtl
mov
push
js
cmp
xchg
jmp
in
jle
lock
pop
sbb
stos
lock
fcom
mov
mov
pop
or
xor
inc
sub
cltd
mov
jmp
sub
lret
and
scas
lods
data16
test
push
neg
mov
pop
in
orb
jmp
int
xor
push
push
push
mov
or
lea
in
scas
or
cwtl
push
bound
xor
ljmp
pop
adc
aas
es
cmp
cltd
fwait
pop
mov
aaa
call
lahf
cmc
cld
pop
sub
pop
push
test
xchg
loope
vpmadd52luq
xor
fldcw
clc
dec
movl
xor
ficoml
push
mov
mov
adc
ret
jmp
pop
cli
dec
push
in
dec
cmp
mov
icebp
jae
or
lods
jo
sbb
data16
repz
sbb
sahf
xor
xor
push
out
pop
dec
xor
cmp
cmp
andl
cld
fdivr
mov
pop
mov
aad
cmc
les
mov
pop
sub
pushf
out
stc
sub
sbb
cltd
fs
movsb
ja
push
sbb
cwtl
ds
icebp
add
subl
add
icebp
push
sti
dec
push
rcrb
or
cmc
mov
nop
inc
xor
dec
xor
mov
nop
js
dec
lds
push
jb
daa
testl
and
clc
ds
mov
dec
push
cmc
movsb
loop
pop
inc
mov
in
incb
jg
inc
lcall
sub
popa
shll
rcr
push
add
dec
xchg
lea
stos
jae
jle
loop
xor
imul
mov
rorb
or
lahf
idivb
test
outsl
and
into
pop
popa
add
outsb
dec
push
jp
lret
cmpsl
lret
js
je
xchg
sub
or
mov
ds
pusha
pop
adc
or
pop
push
add
push
cmp
pusha
test
mov
or
sti
mov
and
sti
jmp
mov
mov
ja
pusha
sub
pop
ret
std
cwtl
adcb
into
xchg
adc
lcall
cmp
int3
mov
dec
sti
mov
in
push
xorl
lcall
xor
or
dec
stc
push
mov
movsl
inc
xchg
pop
shll
mov
aas
aas
sahf
aad
push
sarb
fucomip
test
jno
mov
cmpsb
popf
int
mov
loopne
cmp
test
clc
mov
movsl
out
cli
jge
adc
lods
imul
das
dec
pop
in
sbb
mov
inc
sub
pop
movsb
mov
add
in
repnz
cmp
sub
mov
test
movsb
add
push
test
mov
jp
mov
leave
jg
movsb
stos
push
repnz
push
imul
leave
scas
movsb
jnp
scas
lcall
jecxz
sarl
jmp
addl
popa
stos
xchg
sub
adc
nop
jnp
add
cwtl
movsb
mov
sub
cmpb
xor
aas
repnz
ret
xchg
jl
xchg
icebp
mov
pop
fimull
fwait
inc
test
mov
adc
xor
shl
add
les
in
dec
pop
pop
push
mov
or
push
fwait
and
mov
xchg
mov
xlat
mov
imul
cwtl
xchg
push
mov
xor
adcb
repz
dec
inc
ds
mov
insb
dec
inc
xlat
inc
mov
cmp
fnstenv
and
xchg
pop
pop
sbb
dec
std
imull
ja
enter
push
lock
adc
lcall
mov
js,pn
sbb
add
jp
test
enter
mov
mov
pop
shrb
arpl
mov
push
dec
jns
adc
mov
sahf
xchg
and
and
jo
in
jns
xlat
into
out
cmp
out
addl
fstpl
mov
ja
imul
xchg
or
notb
loopne
ljmp
sbb
add
sbb
pop
or
into
mov
or
push
aas
adc
stc
mov
loopne
or
test
repz
add
add
jno
xor
stos
sahf
repz
dec
mov
imul
xchg
loope
clc
push
add
clc
ret
inc
js
xchg
stos
or
sbb
jbe
roll
addr16
btcl
dec
dec
or
and
xchg
xchg
or
xlat
xor
mov
jne
leave
pop
sub
inc
out
test
xor
xor
sbb
adc
xor
dec
stc
je
cs
mov
sti
ss
push
push
out
push
daa
and
mov
dec
mov
movsl
cmp
pushl
loop
cltd
xor
sub
and
mov
loope
outsb
test
adc
push
inc
and
sbb
xor
or
lcall
shrb
loop
movsl
dec
mov
inc
xor
fbld
int3
add
les
or
lods
cmp
jecxz
add
das
and
adc
lahf
cmp
inc
mov
jl
cmpsl
test
arpl
sti
test
mov
cmc
jno
addb
movsl
sub
mov
sub
and
aaa
sub
mov
or
aas
scas
add
jns
inc
test
and
out
scas
loop
scas
gs
jnp
in
jmp
cwtl
std
inc
mov
adc
mov
gs
ja
mov
iret
add
loop
jns
mull
sub
add
pop
cmc
mov
ficompl
mov
mov
mov
pop
ret
add
sahf
or
call
cmp
lahf
jae
or
add
test
cmpsb
jo
scas
into
sub
repz
add
mov
xor
mov
shl
jg
sub
add
pop
les
test
gs
and
test
rcrb
or
inc
or
shr
stos
push
mov
xchg
xor
push
pop
aad
mov
popa
addr16
jno
jl
cmp
aam
push
aad
arpl
push
jae
ret
pushf
pop
bnd
pop
pop
push
sahf
subb
stos
fs
lock
shll
lcall
leave
stos
xchg
fldcw
inc
pop
adc
clc
jl
mov
mov
bound
adc
mov
sbb
sub
cmp
pop
mov
andb
mov
xchg
push
mov
cwtl
loop
std
fwait
xchg
mov
in
cwtl
cmp
dec
pop
out
jmp
std
pusha
stos
add
sub
fucomi
insb
loop
xchg
insb
test
cwtl
dec
pop
jne
aas
jmp
inc
push
outsb
and
xchg
or
add
pop
and
ret
pop
dec
out
lcall
xchg
pusha
mov
mov
sbb
dec
and
cld
addr16
das
push
pop
js
xchg
and
adc
xor
sbb
push
sub
in
sub
mov
subb
mov
ret
add
jae
jns
fcompl
sbb
adc
adc
pop
pop
lock
xor
aas
pop
jbe
cltd
cmpsb
enter
iret
shlb
push
and
out
pop
xor
jecxz
cmp
test
jns
shl
dec
imul
pushf
insl
rcll
loop
pop
mov
adc
xor
int
aam
inc
call
xchg
dec
mov
in
jmp
pop
stos
movsb
mov
pusha
iret
push
fwait
pop
rcrl
xor
mov
stos
sbb
loopne
ds
mov
xor
and
mov
shl
and
stos
pop
xor
das
cmp
scas
fwait
subb
xor
insl
sarl
out
loope
pop
pop
mov
call
lcall
or
push
insl
mov
es
sbb
jb
icebp
fs
hlt
lds
pop
or
dec
xor
pop
jg
cmp
imul
loope
mov
inc
loopne
or
jne
pop
stos
add
popf
roll
imul
add
decb
mov
xchg
jmp
aam
mov
adc
loope
int3
pop
iret
sub
dec
mov
ret
xchg
int
jmp
fcom
pop
sbb
push
test
adc
jg
push
pop
dec
test
faddp
stos
lea
out
hlt
adc
lcall
or
xlat
loop
popf
push
into
mov
xchg
imul
lahf
mov
test
or
push
sbb
in
test
ljmp
repz
std
loope
or
mov
cltd
aas
imul
inc
sub
pop
cmp
int3
insb
inc
pop
lret
adc
cmpsl
outsb
and
lret
push
or
and
mov
aad
or
rcr
pushf
call
inc
dec
jo
in
push
insl
mov
add
cmpsl
push
mov
insl
adc
testb
mov
push
out
mov
or
lret
push
cltd
stos
in
ds
sbb
add
data16
mov
addl
xchg
sub
mov
sbb
jg
cmp
cmp
jg
push
inc
bound
int
adc
dec
adc
int3
test
cwtl
jns
cmp
add
push
sbb
push
les
xchg
call
enter
loopne
notb
dec
in
cs
pushf
out
xbegin
mov
cmc
adc
mov
dec
loope
and
rolb
pop
adc
xorl
test
negl
or
lea
ret
loop
sub
or
dec
fbld
push
jmp
mov
iret
cli
mov
ljmp
mov
mov
mov
sub
fistl
jmp
and
or
pop
hlt
das
xor
sahf
hlt
fstpl
movsb
sahf
or
cwtl
inc
mov
std
jnp
pop
clc
shrl
lods
lods
in
inc
mov
imul
xchg
and
int3
xor
mov
fstpt
jmp
push
inc
mov
jle
notb
jbe
loopne
mov
rcll
lahf
cmp
xchg
or
ret
ds
lcall
push
mov
leave
dec
xchg
sub
xor
dec
pusha
icebp
imul
mov
fs
xchg
push
sar
sbb
mov
mov
out
add
cmp
cmp
sbb
jne
sbb
in
aam
add
int3
adc
popf
jmp
mov
or
movsl
push
cld
mov
rcl
cmpsl
int
sub
push
fdivrs
add
adc
mov
les
mov
stos
cmp
xchg
sub
add
imul
pop
mov
lahf
cmp
sub
dec
sarb
in
outsb
pop
jmp
cltd
enter
imul
or
mov
xchg
mov
mov
popa
push
bound
fs
jp
outsb
cld
hlt
xchg
in
jecxz
cmp
fdivp
outsl
push
sbb
sti
ss
push
jbe
js
push
repnz
inc
pop
jns
adc
cmpsl
xor
jl
add
shlb
adc
fcompl
orb
pop
notl
inc
lea
add
lret
push
mov
jnp
loop
out
ffree
pop
sub
pop
xor
out
xchg
adc
inc
cmc
test
sti
inc
sub
jb
push
ja
jp
lods
mov
inc
into
sub
jg
xor
sub
int
xchg
fisubrl
jl
jge
fadds
xlat
xor
jmp
rcll
mov
dec
mov
out
hlt
sub
sbb
mov
adc
adcb
fdivl
and
aas
cmp
and
ret
in
cmp
sbb
jns
repnz
cmp
pop
dec
fildll
fiaddl
es
mov
or
jmp
adc
xchg
adc
ficoml
jno
jo
jle
cmp
lds
enter
xchg
pushw
in
test
jne
adcl
jge
and
mov
mov
push
mov
cmp
inc
push
mov
mov
test
sarb
xor
xor
cmp
in
xor
addl
lods
xchg
adc
sbb
std
xor
call
xor
jmp
cli
movsl
jne
cmp
ds
in
mov
divl
and
shll
fiadds
rclb
adc
bound
gs
push
dec
lret
pushf
mov
out
mov
lock
ret
pushf
sub
dec
xor
lcall
stos
cwtl
mov
imul
xchg
jg
lods
das
ss
mov
inc
jns,pt
and
sbb
xlat
mov
leave
arpl
push
sbb
push
jp
xchg
or
xor
and
add
inc
push
or
je
fwait
test
push
and
test
inc
in
xor
inc
dec
and
into
adc
repz
mov
mov
mov
sbb
dec
mov
test
inc
push
rcll
lret
test
pop
add
add
sub
xlat
xor
lods
xchg
inc
mov
lds
test
ds
call
outsl
mov
cmp
mov
ljmp
sub
movsb
mov
faddp
inc
roll
sbb
jmp
lods
sub
addr16
cmc
pop
xor
cmp
hlt
mov
out
add
call
push
sub
cmp
sbb
jg
xlat
add
adc
inc
mov
pop
xlat
and
jecxz
inc
dec
ljmp
mov
sahf
adc
mov
lock
inc
mov
roll
shrl
or
pop
inc
in
pop
xchg
movsb
push
dec
pop
adc
shlb
hlt
pop
cmp
or
popf
ja
pusha
in
or
lcall
test
sbb
jge
hlt
mov
and
xor
ljmp
fbld
les
sub
xchg
negl
xchg
enter
inc
mov
clc
lea
bound
insl
push
and
and
and
fiaddl
inc
out
jge
sbb
push
add
inc
dec
jne
pop
pop
imul
cmp
xchg
es
inc
orb
pop
sub
xlat
and
aaa
popf
pop
xor
dec
xor
and
mov
popa
sti
jae
cmp
ljmp
loope
repz
or
pop
aas
stc
mov
cli
gs
jae
divl
jbe
sar
out
or
xchg
gs
mov
into
xor
inc
fldl
mov
sbb
movsb
pop
or
pop
cmp
shr
fsubrs
pop
lods
push
arpl
mov
fildll
jle
cmc
sbb
ljmp
into
push
and
arpl
arpl
inc
ret
lret
sti
or
dec
xchg
nop
ja
xor
fisttps
movsb
push
je
push
dec
aam
jae
movsb
test
sub
xchg
mov
sub
ja
aaa
imul
pop
or
dec
push
push
mov
leave
lcall
aam
ret
dec
mov
stc
test
sarb
lret
in
cmc
or
mov
add
imul
fistps
mov
jge
outsl
rcrw
pop
jle
and
scas
js
cltd
push
mov
push
test
xor
jns
outsb
out
cli
insb
daa
test
xchg
inc
xlat
jle
stc
xorb
stc
test
cli
sbb
data16
stos
adcb
pop
xor
fsts
adc
xchg
cmp
shl
or
mov
pop
jo
icebp
xor
imul
cmpsl
push
vmovdqu
sarl
sbbb
push
mov
daa
mov
lods
lsl
sahf
ss
sub
adc
fdivrl
outsb
mov
imul
sbb
xchg
cli
mov
mov
and
pop
jno
sbb
mov
scas
mov
inc
mov
push
cld
cmp
xchg
dec
fistpl
jmp
out
pop
mov
push
pop
mov
addr16
fwait
xlat
inc
pop
jle
push
js
mul
rcrb
icebp
mov
fwait
jmp
leave
push
imul
mov
lods
stos
cmp
outsl
mov
addb
ret
je
mov
xor
in
push
mov
fcoml
push
or
loop
pop
pop
imul
adc
in
xor
das
push
add
andb
mov
popa
cmp
nop
cmp
shrb
xor
mov
sbb
sub
or
out
mov
jmp
in
cld
mov
or
or
or
pop
xchg
mov
fld
and
dec
js
out
mov
adc
pop
dec
ret
scas
cmp
pop
ja
cmp
push
and
and
xchg
jmp
inc
jne
pop
add
in
xchg
sbbl
dec
mov
sub
cmpsl
cmp
lcall
push
scas
ret
sbb
dec
cmc
xor
fstpl
jge
cmpsb
push
xchg
push
cltd
daa
mov
mov
pop
lods
popf
xlat
inc
or
sbb
sbbb
and
xlat
int3
mov
push
xchg
push
dec
aam
arpl
and
stos
into
sub
and
dec
add
fildll
mov
jno
fucomp
push
xchg
jl
les
repz
sarl
or
mov
push
insl
cltd
rolb
mov
push
mov
lock
inc
jne
jg
sub
iret
leave
or
xor
adc
jnp
mov
enter
cmp
mov
icebp
movd
insl
jo
xlat
fs
bnd
mov
and
test
mov
movsb
imul
or
jle
scas
add
xchg
fwait
add
call
repz
inc
gs
xchg
dec
adc
je
sbb
jecxz
loope
mov
cwtl
sub
mov
ret
nop
push
pop
pop
dec
xchg
push
xchg
xchg
pop
adcl
jl
jmp
rol
cmp
mov
test
adc
and
mov
in
sarl
icebp
cmp
push
loop
test
pop
pop
clc
pop
push
push
mov
adcb
inc
mov
push
inc
dec
jecxz
int
ret
jmp
leave
jnp
aaa
jne
mov
je
inc
mov
mov
pop
inc
insl
fcompl
cmp
fcoml
cs
outsb
mov
pop
and
pop
and
pop
jbe
sbb
xchg
sub
lcall
jb
and
stc
push
add
sbb
imul
or
or
cmp
dec
mov
push
dec
bound
or
dec
cmp
call
sbb
mov
cmp
scas
inc
ss
pop
inc
repz
lahf
inc
stos
loop
push
out
jne
mov
fisubl
inc
iret
pop
mov
push
leave
rol
xor
mov
enter
ds
popf
mov
les
xchg
inc
inc
mov
stos
xchg
push
dec
adc
arpl
or
repz
test
cld
inc
or
icebp
insb
jle
jle
daa
not
add
sbb
mov
mov
dec
in
or
nop
pop
jge
fisttpl
jns
clc
xchg
dec
test
insl
add
mov
mov
xchg
pusha
test
insl
cmpsl
cs
pop
jl
xchg
push
inc
adc
neg
das
xchg
shlb
pop
iret
stos
or
ret
push
adc
dec
or
push
cmp
loop
aam
sub
out
jne
fsubl
repz
sysexit
push
insl
pop
add
pop
popa
mov
test
jg
mov
test
out
out
mov
icebp
jle
pop
in
and
sti
scas
ret
sub
mov
ja
les
outsb
in
fnstenv
jno
sbb
push
out
mov
int
push
inc
jo
cltd
fcoml
dec
mov
aad
test
cmp
cmp
call
jo
xor
out
adc
or
testb
mov
inc
dec
outsl
lock
adc
int
div
outsb
adc
je
dec
cmpsl
xlat
add
hlt
imul
mov
mov
mov
xchg
ja
in
faddl
jbe
add
es
roll
cmp
iret
enter
lock
das
mov
imul
insl
jecxz
pushf
popl
fisubrs
xchg
rorl
loopne
add
ss
jns
mov
fucomip
mov
fldenv
data16
leave
and
outsb
inc
fnstsw
or
sub
cmp
loopne
inc
cmp
jl
cmp
ss
or
jb
pop
rorb
lods
mov
pxor
clc
jnp
sbb
sbb
sbb
inc
jmp
lcall
inc
cli
ss
sti
xor
xchg
test
jbe
nop
pusha
xchg
stc
hlt
jge
pop
cli
aam
sub
js
inc
test
xchg
dec
mov
pop
add
xor
cmpsl
sub
jp
cmpl
ret
mov
sub
popa
pop
fildl
ljmp
repz
cli
ror
mov
mov
jg
sub
arpl
inc
pop
xor
inc
mov
lods
dec
xchg
dec
hlt
cmp
mov
jbe
xor
or
sbbl
outsl
leave
repnz
int3
int
lods
mov
arpl
mov
mov
cmp
into
lea
xchg
pop
loop
mov
arpl
dec
push
xchg
mov
pop
cmpsb
jp
in
dec
inc
stos
jmp
aaa
or
das
and
mov
jecxz
sarl
sub
insb
imul
mov
mov
daa
es
jne
orl
or
xlat
sbb
push
call
pop
xchg
jg
das
jg
scas
movsb
std
xchg
jnp
dec
add
das
dec
lahf
ret
leave
stos
out
test
jge
pop
push
push
mov
gs
gs
inc
push
cmp
dec
lea
lods
test
dec
mov
xor
stc
movsl
sbb
dec
mov
and
in
cmp
popa
mov
xor
lahf
push
leave
xchg
push
dec
hlt
cmp
mov
movsb
rcll
imul
mov
mov
in
cmp
loope
mov
add
push
mov
xchg
push
shlb
add
insl
jne
in
push
mov
mov
popf
adc
cli
cld
fisttps
sbb
jmp
mov
and
inc
cmpsl
je,pt
mov
orl
cmpsb
cmp
call
cmpsb
and
ds
js
dec
mov
in
sub
xlat
lods
mov
xchg
or
cld
xchg
pop
xor
dec
sbb
popf
jp
cld
xor
mov
push
jo
sarb
jnp
in
mov
fiaddl
out
pop
aas
cli
in
xchg
jnp
dec
popf
iret
jmp
jge
pop
or
inc
pop
outsl
jl
arpl
fistl
scas
andl
leave
mov
xor
es
sbb
into
movsb
or
ret
inc
enter
mov
test
pop
stos
sti
lods
lret
xor
xor
jno
inc
sbb
mov
popf
fcompl
test
sub
mov
sub
add
inc
daa
mov
cmpsb
loope
loopne
jno
adc
adc
loope
cwtl
inc
std
cmp
cmpsl
ror
out
jg
pushf
xchg
dec
in
lods
fsubrp
loope
movsl
lret
cmp
cmc
movsb
dec
cmp
and
aas
add
sbb
or
and
mov
pop
lret
lock
push
mov
loope
inc
jnp
jbe
ret
inc
push
dec
mov
lret
aam
add
push
add
cmp
push
dec
movsl
or
mov
rcl
hlt
out
inc
das
in
rcll
pop
jmp
js
inc
je
jns
aad
inc
ds
shll
int3
mov
push
pop
pop
xor
fisubs
pop
lods
je
dec
xchg
lods
jp
mov
mov
addr16
mov
xchg
fcmovbe
xchg
movsb
out
push
push
out
sub
imul
and
mov
and
scas
push
or
jnp
sub
add
incb
sbb
in
mov
iret
pushf
mov
sti
xor
xor
sahf
and
fwait
push
and
push
imul
movl
test
and
adcb
mov
addb
ja
jbe
out
es
shrb
add
test
push
pop
adc
popa
incl
pushf
aaa
fs
jns
sbb
mov
push
icebp
or
sbb
jmp
xor
stos
and
shrb
push
dec
mov
xor
pop
dec
iret
lods
out
push
sarl
or
dec
sbb
add
lods
xor
jp
cmc
pop
clc
add
outsb
rolb
std
in
inc
add
mov
and
ret
out
mov
fcompl
rcl
cmp
mov
push
jl
or
dec
sbb
dec
push
mov
and
xchg
sbb
cmp
sbb
fdivrs
sub
sbb
mov
into
decb
bound
push
jbe
dec
aaa
subb
cmp
daa
addr16
ja
xor
jg
xor
aam
insl
fimull
mov
fwait
dec
stos
pop
ficoml
mov
fs
pop
cmp
pushf
push
shlb
int
test
daa
mov
jmp
pusha
push
nop
push
out
outsl
aam
mov
mov
xor
and
fnstenv
mov
mov
cmp
adc
aas
push
imull
push
sbb
outsb
cs
lods
adc
mov
inc
mov
insl
add
aas
in
lods
push
sbb
idiv
aad
xchg
int3
mov
dec
scas
push
fadds
mov
aas
cmp
cwtl
lds
into
push
mov
sub
ja
inc
xchg
std
fsubs
sbb
arpl
pop
mov
xorb
mulb
dec
xor
mov
xor
std
aam
icebp
mov
cmc
sbb
lahf
data16
int3
jecxz
and
int3
jns
sbb
mov
mov
out
fisubrs
and
add
xor
loop
sub
mov
scas
mov
or
fldenv
jl
je
xor
ret
lret
mov
mov
shll
sarb
cmpsb
rcr
popa
in
jne
in
pop
aas
cmp
or
jno
xchg
ljmp
push
cmp
sbb
mov
xchg
pop
into
jg
add
mov
sbb
mov
add
push
call
add
data16
js
test
xlat
xor
mov
jno
dec
idivl
test
inc
mov
andb
movsl
mov
cmp
pop
adc
sti
lret
jno
and
repnz
arpl
mov
outsl
inc
int3
fdivr
cli
pop
cmpsl
sub
xor
mov
ficompl
sbbb
fcoml
pop
jl
sahf
flds
push
mov
popf
lret
subb
and
xchg
mov
and
jnp
fwait
gs
mov
rclb
cmp
out
inc
cmc
mov
enter
gs
xor
and
inc
jo
popl
mov
adcl
addr16
or
add
push
pop
outsb
fcoml
sbb
lcall
test
or
jb
in
ret
ljmp
test
pop
into
lret
ljmp
mov
lock
nop
in
mov
stos
mov
jb
mov
pop
push
sahf
iret
sub
leave
rclb
mov
in
push
adc
iret
adc
rcll
int3
iret
jo
add
lock
and
pop
flds
pusha
jmp
idiv
push
sbb
jbe
icebp
xlat
sbb
sub
pop
or
out
xorb
xor
iret
mov
jo
loope
jmp
pop
das
mov
fs
mov
pop
sub
int3
adc
loop
rolb
inc
fs
ja
cmp
ja
pop
jp
push
movsb
push
or
repz
bnd
in
or
movsb
cld
daa
pop
cmp
mov
push
imul
inc
mov
xchg
mov
aaa
jae
cmpsb
insb
xor
xchg
mov
aaa
mov
or
clc
adc
shrl
cmp
jnp
shrb
mov
push
sbb
imul
cwtl
push
cs
xchg
cmp
cmp
push
cli
push
push
xor
mov
xchg
jecxz
xchg
or
dec
inc
add
or
push
icebp
frstor
sti
in
aad
mov
mov
jl
push
inc
mov
push
sbb
cmp
daa
ret
xlat
mov
loope
add
out
mov
sub
jb
xchg
fsubrl
jae
popa
push
xchg
fnstcw
pop
inc
lea
pop
mov
xor
xchg
popa
sub
dec
addl
testb
jb
lods
outsb
in
cmp
rorb
out
fsts
pop
hlt
out
add
sub
mov
popf
cmovp
mov
or
cmp
repnz
or
jecxz
cmp
stos
inc
or
mov
add
xchg
push
and
cmp
loop
call
dec
cmc
adc
loopne
jg
mov
push
pop
cmp
xor
and
push
push
mov
adc
or
jl
jnp
cmpl
sub
rorb
and
adc
pop
out
arpl
jnp
jae
out
addl
mov
and
lret
loope
shlb
or
push
pop
cmpsb
loopne
scas
jmp
sub
in
sarl
and
mov
lahf
adc
xchg
aas
xchg
lret
negl
lahf
xor
or
mov
test
lret
and
fldl
sbb
mov
inc
inc
xor
icebp
cmc
xchg
mov
jle
adc
icebp
test
je
iret
sbb
push
pop
pop
out
insl
xchg
movsb
cmp
cltd
je
addr16
les
pop
out
and
repz
cli
xor
cmp
mov
in
cs
cltd
add
leave
ficoms
pop
sti
daa
jno
mov
ret
push
adc
sbb
fld1
dec
test
incb
cld
or
xor
xor
cmc
out
in
insl
pop
add
call
mov
div
xchg
mov
rorb
mov
loopne
aam
mov
cmpsl
popf
mov
xor
out
mov
movsb
icebp
or
lods
enter
add
adc
xor
dec
addb
and
lea
pop
out
pop
xor
test
lret
repz
sub
aad
push
push
add
push
aam
adc
jge
cmp
jecxz
cmp
xor
jge
test
imul
scas
fcoms
jmp
cmp
inc
xchg
and
lret
xchg
mov
dec
inc
inc
cmp
andb
xor
call
cltd
imul
stos
push
sbb
or
dec
mov
stos
xlat
or
inc
test
sub
or
adc
in
cmpsl
rorl
sbb
fcmove
dec
pop
clc
gs
sbb
push
shrb
push
and
add
enter
out
loop
xchg
pusha
fdivrl
imul
test
jle
and
ficompl
rorb
adc
fs
jno
push
mov
cmp
jno
pop
jecxz
testl
lock
mov
inc
lock
push
iret
mov
push
mov
inc
jno
icebp
test
and
push
xchg
lods
mov
pop
jmp
lock
mov
movsl
dec
sbb
mov
and
aad
push
cwtl
add
and
mov
ret
adc
mov
scas
push
dec
xchg
inc
and
mov
dec
ds
gs
test
std
aad
jno
imul
pop
mov
rcl
rcll
jmp
mov
incl
push
test
lea
sbb
jle
mov
lock
insl
hlt
jmp
pop
lods
nop
mov
push
fwait
repz
frstor
repz
out
cltd
xchg
into
mov
pop
jbe
not
push
xor
jns
aad
mov
movsb
mov
ret
mov
bound
in
add
jl
mov
or
test
lods
fbld
fwait
adc
ret
cltd
add
icebp
pop
inc
pop
int3
adc
mov
lods
or
dec
je
push
and
pop
sbb
lcall
sahf
loop
push
mov
or
jge
out
sbb
subl
incb
mov
mov
cli
jmp
outsl
dec
mov
aaa
xchg
push
sub
mov
pop
sarl
shr
rclb
dec
gs
mov
push
aad
nop
mov
mov
rorb
push
xor
and
pop
and
jns
sbb
mov
lds
mov
outsb
outsl
xchg
jmp
stc
mov
jb
xchg
dec
pop
mov
addr16
ret
stos
fistpll
push
dec
add
push
std
mov
or
mov
adc
pop
jl
aam
popf
push
sbb
cmpsb
push
cli
rorb
xchg
inc
push
lock
jmp
add
xor
pop
pop
loope
lcall
pop
mov
fildll
popf
add
je
scas
sbb
js
insb
push
push
ret
lods
pushf
in
mov
mov
fdivrl
or
imul
out
jg
cmp
dec
push
sbbb
push
lods
cmp
leave
cmp
call
xchg
into
xchg
je
add
icebp
cwtl
subb
ret
movsb
outsl
cwtl
cli
jle
in
je
or
xor
xor
cmp
mov
out
dec
add
add
inc
adc
sbb
pop
int3
adc
mov
xorl
es
push
hlt
negl
cmc
jbe
data16
cmp
adc
ds
push
or
push
add
pop
push
jne
iret
mov
xchg
movsl
loope
adc
insl
ja
fists
mov
aaa
mov
mov
bnd
cmp
adc
cmpsb
fisttpll
lods
loope
xchg
inc
call
outsb
outsb
sbb
jge
cwtl
and
out
fwait
pushf
cltd
adc
scas
jne
jmp
enter
fstps
rcr
mov
or
adc
mov
mov
mov
pop
arpl
cmp
inc
lock
xchg
fisttpll
cmp
popf
outsl
push
out
or
inc
inc
jbe
push
jmp
inc
add
push
pcmpeqd
fcoms
outsl
xlat
bswap
xlat
inc
and
ljmp
xchg
and
lahf
in
outsl
das
inc
sahf
pushl
dec
adc
jo
push
pop
lock
leave
fsubl
mov
mov
rorb
push
aas
loope
aam
mov
xor
cmc
lcall
call
adc
movsb
sub
mov
adc
div
hlt
inc
jl
sub
pop
loop
in
hlt
push
lea
jl
ds
in
ja
shll
inc
roll
and
and
cmp
insl
shrl
xor
hlt
cs
adc
mov
xchg
ret
leave
mov
out
jbe
cld
sbb
adc
cmp
cmp
jbe
and
ja
cmp
sbb
push
jnp
outsb
pusha
mov
out
jbe
adc
jle
inc
test
aas
mov
mov
cmp
sti
es
dec
jg
xchg
shr
test
jl
or
and
jae
movsb
mov
dec
int3
fimuls
add
push
sub
orb
lea
js
cmp
sbb
cmp
mov
and
adc
js
xchg
xchg
das
jp
dec
notb
pop
shl
or
push
adc
orl
aaa
jo
cltd
std
inc
and
dec
xor
dec
adc
mov
push
insl
mov
aas
hlt
jl
xor
sbb
into
dec
sbb
pop
xchg
mov
cmpsl
mov
pop
shlb
addr16
popa
icebp
sub
pusha
xchg
jo
dec
mov
push
adc
lock
mov
scas
inc
sbb
xchg
mov
int3
mov
cmp
es
in
jne
dec
data16
ficomps
sti
daa
xor
adc
stc
daa
shlb
fimull
imull
adc
mov
mov
or
push
cmpsb
popf
inc
subb
dec
std
inc
stc
xchg
arpl
and
arpl
mov
add
aam
out
in
mov
sbb
xchg
mov
das
lret
pminub
or
rolb
lret
aam
lods
into
xorl
add
ds
dec
sbb
movsl
test
push
mov
inc
mov
or
inc
fsubl
push
mov
adc
sub
push
push
add
sub
add
inc
or
imul
js
add
insb
std
loopne
adc
fdivl
stos
lahf
and
test
lods
push
repnz
repnz
mov
jp
pop
dec
je
pop
aad
push
xchg
inc
cmpsl
adc
data16
sbb
jbe
xchg
and
int
aad
out
dec
jp
stos
inc
pusha
push
inc
dec
mov
outsl
push
int
push
jmp
fdivrs
jb
lods
xor
ss
ss
cltd
xor
scas
mov
push
xor
outsb
jp
xor
pop
pop
mov
mov
sbb
or
pusha
ficompl
outsb
clc
mov
insl
mov
push
aas
mov
aas
ret
push
mov
dec
vpcmpgtd
rep
fisubrs
repnz
adc
jp
shlb
es
mov
dec
inc
dec
dec
mov
jb
push
pop
and
iret
cmp
sub
add
pop
scas
fcmovnbe
xchg
mov
test
int
popa
shrl
mov
jl
imul
arpl
mov
fmuls
outsl
jbe
xchg
imul
adc
enter
out
pop
push
es
adc
jne
movsl
cmp
loope
loopne
jge
sub
pop
sbbl
push
je
cmpsl
loop
leave
push
add
jmp
imul
xor
sub
mov
std
xchg
jae
jbe
sub
pop
or
iret
outsl
aad
cmp
mov
adc
inc
cli
or
xchg
jmp
sbbl
pushf
loop
add
xchg
fdivrs
lret
mov
rcll
pop
imul
imul
js
fsub
push
out
clc
xchg
lahf
stc
or
dec
jns
in
jb
neg
dec
icebp
inc
in
pushf
and
fstpl
pop
push
ljmp
mov
inc
in
cmp
mov
xor
cmpsb
aas
popa
pop
shrb
mov
pop
pop
cmpb
and
pop
adc
push
clc
fidivrl
daa
lds
or
cli
mov
loope
test
and
fwait
pop
mov
pop
xor
jp
gs
xchg
mov
xor
adcl
cmp
js
push
repz
dec
pop
jecxz
push
cltd
movsl
xchg
js
fwait
out
cli
mov
mov
and
push
mov
fdivr
adc
repz
in
fsubs
je
sub
sbb
xchg
das
and
test
into
mov
jbe
mov
or
aaa
daa
sub
sbb
xlat
into
fstl
cmp
or
cmp
pop
xchg
push
cltd
je
sbb
out
sbb
cmc
fs
imul
adc
es
adc
dec
dec
sbb
insl
test
dec
mov
nop
sub
lods
mov
dec
jle
pop
lea
dec
sar
ljmp
stos
in
daa
sar
shlb
and
mov
push
bound
and
popf
xchg
test
adcb
pop
fdivrl
jae
insb
cmp
in
insb
jge
imul
xchg
lock
mov
and
scas
gs
fists
ja
pop
lret
stos
js
add
icebp
mov
cld
xchg
repnz
imul
mov
xchg
adc
push
bound
sbb
and
add
jnp
push
xor
repnz
shl
aas
sub
addb
sbb
and
js
popa
and
mov
sub
xchg
sbb
inc
mov
lret
xor
jg
sbb
aaa
fidivl
push
fprem
mov
aaa
call
push
pop
scas
arpl
cltd
push
cmp
rcll
fmuls
inc
xchg
push
xlat
mov
fistpl
fmul
pop
mov
pop
shlb
inc
in
into
jl
andl
push
mov
jle
pop
data16
push
iret
stc
div
leave
jl
outsl
test
rcll
rclb
fnstcw
addr16
push
xor
pop
imul
pusha
iret
or
jg
or
mov
and
push
push
shll
mov
mov
and
mov
into
ds
push
xchg
push
in
sbb
xchg
add
fs
cmpb
mov
hlt
jae
aad
test
ja
stc
cld
cmp
adc
lret
adc
xchg
lds
jmp
jmp
int
notl
dec
testl
xor
or
mov
imull
cmp
push
mov
roll
sbb
jb
xchg
stos
out
scas
jp
cmpsb
fld1
push
jne
pop
xchg
lea
adc
imul
cld
xlat
dec
mov
cmp
outsl
dec
pushf
push
and
jl
leave
inc
and
jg
cmpsl
rcr
mov
sbb
inc
sbb
push
lods
cmpsb
fdivrs
jno
inc
movsb
shr
int3
cmpsb
adc
push
jnp
out
xor
sub
inc
cmp
cs
pop
xor
and
imul
cld
in
sbb
cltd
cmp
in
cltd
orb
cmc
pop
jp
mov
sbb
cmpsb
fwait
xchg
push
xor
lcall
mov
and
mov
jmp
push
or
mov
adc
pop
imul
icebp
ficoml
sub
aaa
and
nop
inc
sub
add
out
jl
sarl
pop
xor
jo
sbb
lods
adc
loope
orl
sti
imul
gs
ret
add
inc
jne
in
sub
lret
push
inc
test
pusha
adc
xchg
mov
sub
dec
xor
hlt
sarb
insl
adc
sbb
out
add
movsb
inc
lahf
or
pop
adc
fcmovbe
add
and
addr16
mov
xchg
movsb
rclb
lods
ficoms
inc
addr16
dec
push
daa
rcrb
lret
mov
pop
pop
loopne
sbb
inc
mov
aam
testb
dec
fwait
mov
inc
add
sub
dec
pop
or
xlat
fcmovbe
outsb
xor
lahf
insl
loope
sbb
add
test
xchg
pop
jp
pop
adc
inc
push
sub
fadds
jne
imul
jle
or
mov
lahf
mov
adc
cld
fdivrs
pop
mov
mov
sbb
push
mov
hlt
lcall
xor
inc
daa
daa
add
mov
out
pop
popf
ffreep
pop
stos
je
mov
enter
mov
pusha
leave
pop
jmp
loope
push
xor
clc
xor
enter
sub
cmp
pop
push
lods
cwtl
push
dec
lods
cmc
xchg
test
ret
pop
loopne
or
insb
shlb
push
mov
inc
inc
mov
add
mov
pusha
imul
pop
arpl
add
jp
jp
ret
into
ret
cmp
inc
aam
sbb
std
icebp
push
cmp
mov
imulb
icebp
inc
mov
les
mov
stos
lods
and
sub
lds
push
jle
iret
add
dec
dec
lret
dec
in
rolb
addr16
pusha
aad
stc
fucomi
cmpsl
lea
mov
out
decl
adc
push
es
push
xchg
je
xorl
cmp
sarl
imul
daa
inc
cs
or
pop
fisubl
lods
movsl
cli
scas
push
push
addr16
pop
cmpsb
rcr
ljmp
sti
xor
flds
sub
mov
mov
inc
fcos
inc
pop
jecxz
lret
jno
mov
addr16
mov
pop
xchg
mov
push
xor
xchg
or
int3
push
mov
jg
aad
aaa
cmp
in
hlt
rol
cmp
pop
loopne
adc
jne
dec
push
cmp
arpl
cli
inc
xchg
repz
jg
xorb
cwtl
jp
inc
mov
push
std
in
xor
scas
mov
cli
dec
mov
jge
add
sbb
addr16
and
or
sbb
xchg
jae
inc
or
fs
xor
inc
inc
jnp
push
jae
xchg
mov
sti
inc
pop
adcb
jnp
cmpl
mov
cmp
movsb
dec
sbb
test
cmpsl
and
in
pop
in
pop
jnp
sarb
icebp
sub
and
fisubs
xchg
inc
subb
cmp
jmp
mov
mov
xor
inc
mov
add
cmp
aam
jl
or
shl
je
out
add
test
push
push
cs
lods
adc
mov
dec
call
repnz
jl
aam
and
test
mov
mov
sahf
jne
jmp
jae
test
call
cmp
shlb
add
pushf
insb
sub
es
mov
fcoms
test
fcmovu
bound
dec
sub
dec
sbb
lret
adc
or
aaa
es
movsl
cmc
stc
clc
aas
dec
sbb
xchg
sbb
inc
test
hlt
int3
inc
ss
inc
out
leave
sbb
and
cmpb
mov
push
inc
mov
jl
js
mov
pop
into
lods
dec
xchg
lods
lcall
lret
inc
sub
addr16
add
dec
inc
xor
fnstcw
lds
lods
pop
xor
in
test
pop
jae
clc
leave
mov
out
push
xchg
and
mov
cmc
mov
sub
cmp
add
testl
lea
cmpsb
inc
mov
insb
addl
fnsave
mov
sarb
mov
sub
cmp
pop
mov
cli
sub
in
jmp
inc
mov
ret
test
cli
into
adc
jmp
or
sbb
cltd
clc
shlb
rcl
sbb
cmp
flds
sub
shlb
lods
into
pop
inc
cmp
sub
enter
mov
in
sbb
pop
xchg
dec
cmc
mov
stos
scas
xchg
push
jle
adc
repz
mov
fnstenv
fucom
sbb
pop
test
xor
inc
pop
mov
cli
adc
push
decl
pushf
stos
mov
jge
cmp
and
lods
shll
pusha
std
jle
rcrl
cltd
inc
das
lods
into
bnd
outsl
cltd
inc
test
jg
fldt
jo
sar
call
adc
subl
movsb
push
popf
sbb
pop
hlt
dec
scas
xchg
aad
mov
mov
push
push
lahf
add
aad
addl
adc
test
lret
mov
insl
pop
stos
xchg
xchg
dec
mov
test
add
repz
pop
cmpsb
dec
ret
stos
nop
aam
in
test
hlt
outsl
stos
test
or
test
bound
dec
scas
nop
xchg
jl
cmc
push
push
inc
cmp
int3
mov
out
dec
push
popa
mov
mov
xlat
lahf
pop
pop
adc
sbb
mov
pop
mov
mov
lods
add
movsl
mov
and
fs
jnp
imull
dec
popa
daa
or
int
and
rol
bound
or
loopne
leave
add
mov
or
jns
cs
adc
cltd
xlat
xchg
jmp
into
and
adc
out
aad
imul
movb
xor
stc
rcl
mov
mov
inc
push
mov
insb
arpl
loopne
sub
mov
mov
xchg
xor
jo
cmp
jl
mov
out
jmp
fsubl
call
cs
loope,pt
push
ret
movsl
jb
mov
sub
hlt
sbb
mov
pushf
cmp
inc
and
or
sbb
js
add
jg
data16
sub
or
mov
std
add
cs
mov
nop
mov
and
sub
sbb
sbb
aam
ss
pop
outsb
rol
imul
xor
push
movsl
ljmp
push
cs
cmpsb
rol
sbb
in
sahf
adc
in
sub
in
pushf
leave
gs
loop
inc
sbb
mov
jb
std
sbb
sbb
lret
shr
mov
insb
mov
dec
inc
xchg
mov
cmp
inc
xor
or
push
adc
mov
adc
aas
mov
mov
or
pop
add
xchg
nop
clc
vmread
sbb
int3
add
in
pop
xor
jno
out
xchg
mov
inc
cli
add
mov
lea
jae
mov
movsl
fidivrl
xchg
adc
mov
or
or
sahf
arpl
arpl
fisttps
frstor
cmpsb
sbb
dec
sahf
in
fs
rcrl
orb
loope
pushf
dec
xchg
scas
xchg
or
cmc
loope
ret
lds
clc
call
fwait
movsb
cmpl
cmp
insb
mov
das
dec
pop
push
movsl
push
xor
adc
or
or
stos
xchg
repz
mov
xor
inc
aaa
mul
xchg
push
jbe
dec
dec
fistpl
aas
out
sahf
adc
jnp
iret
lahf
lcall
mov
iret
adc
xchg
out
jge
ja
in
popf
repz
cld
jge
stc
movsb
shlb
aam
pop
cmp
movsl
cld
dec
cmp
cmpb
inc
popl
jmp
cltd
mov
jle
jnp
xchg
jmp
push
inc
dec
add
xchg
mov
pop
xchg
js
repnz
xor
push
mov
mov
mov
jmp
push
in
movsl
push
out
shll
ja
fiaddl
lods
xchg
popf
gs
cltd
test
fdivp
inc
jge
filds
adc
jge
repz
int3
jp
push
xchg
inc
pop
sub
mov
adc
cmp
xchg
aaa
pop
cwtl
push
sti
lods
xchg
out
mov
cmpsb
cmp
mov
xchg
dec
gs
ror
mov
xchg
add
inc
scas
out
inc
daa
sub
movsb
lcall
fldenv
lods
lds
mov
fadds
sub
jo
jp
fadd
mov
dec
bound
das
and
arpl
dec
sbb
push
shr
dec
adc
push
jp
dec
imull
xchg
pop
dec
jge
addl
pop
imul
dec
mov
inc
cli
rcrb
lcall
cwtl
and
sbbl
jno
pop
mov
cli
and
dec
popa
add
call
adc
in
adc
push
fdivl
dec
hlt
lret
adcb
adc
inc
push
cmp
pop
iret
mov
inc
or
movsl
loopne
fcoml
fstpl
les
out
push
sbb
out
cld
dec
fwait
vxorpd
lret
cli
cmpsl
data16
pop
popl
inc
adc
adc
mov
ljmp
push
insb
ja
in
in
pushf
jl
clc
gs
xchg
movsl
dec
mov
fsubrs
dec
out
daa
pop
dec
xchg
loop
cwtl
sbb
mov
cwtl
cltd
lcall
repz
into
jbe
js
lock
jle
xor
loop
xor
pop
test
dec
inc
inc
dec
adc
aaa
ss
pop
adc
adc
out
cwtl
les
cmp
test
push
mov
and
adc
xchg
fmuls
mov
sub
popa
dec
lds
xlat
sbb
fisubrl
in
daa
dec
inc
into
inc
fld
js
xor
cmc
xor
andb
cmpsb
mov
ja
jl
mov
mov
xchg
mov
pop
ja
or
jne
fdivs
inc
xor
enter
out
jae
jmp
cmp
sarb
mov
add
ret
cld
inc
in
push
sub
inc
daa
in
and
xchg
jno
hlt
cmovl
subl
push
fbstp
jle
fcomi
add
xchg
test
push
xchg
outsb
gs
stos
cmpsl
out
sub
mov
mov
leave
jne
push
jae
ret
jo
xchg
popl
adc
repnz
push
aas
ds
and
movsb
cmpsb
clc
jge
sbb
sbb
testb
adcl
arpl
add
icebp
shlb
loop
ficoml
or
and
sub
mov
movsb
rorl
div
or
imul
and
pushf
pop
xchg
cmp
jle
lds
lcall
mov
insb
jg
pop
and
jp
arpl
adcl
call
rcl
xchg
xor
add
adc
xchg
loope
and
xor
adc
jb
out
or
push
cld
push
setns
xchg
xchg
pop
orl
fidivs
ret
pop
aas
and
pop
mov
mov
pop
mov
or
popa
loop
xchg
test
lret
mov
dec
ds
in
call
sbbb
lock
fcomps
les
and
and
cmp
or
and
xchg
fnsave
dec
jge
mov
aad
inc
sub
jp
inc
das
mov
mov
test
push
fs
inc
add
adc
push
add
xchg
push
stc
imul
insl
and
in
xchg
lea
lods
inc
lcall
imulb
notl
mov
pushf
mov
enter
int3
shrl
jl
mov
xor
mov
inc
or
adc
adc
mov
pop
sahf
fdivrs
pushf
aas
xchg
sarl
outsl
mov
divb
xchg
add
pop
arpl
iret
xor
pop
inc
not
cltd
mov
adc
inc
push
testl
enter
sub
repz
jne
push
addb
sub
cmpsb
sub
test
xor
stos
pop
stc
mov
int3
fisubs
jns
pop
stos
xchg
mov
jmp
add
xor
jae
ja
xchg
mov
mov
jmp
outsl
dec
test
mov
int3
xchg
add
rcrl
xor
pop
out
add
fistpl
add
daa
fs
gs
push
popa
jno
pop
mov
xchg
xchg
popf
push
daa
add
push
push
jg
out
in
mov
sbb
push
sbb
aaa
call
clc
ret
scas
nop
fisttps
xor
jnp
ret
in
sub
jmp
inc
std
cwtl
mov
in
imul
mov
ret
rorl
xchg
jno
cmp
test
adc
jl
aam
mov
cmp
popa
sub
or
out
popa
aad
hlt
cld
insl
dec
adc
cmp
sbb
insb
std
cmp
into
ss
push
jbe
movb
mov
and
inc
ds
push
mov
loopne
push
dec
push
insb
lahf
int3
inc
mov
aas
rol
mov
dec
imul
imul
push
lcall
xor
or
sub
adc
outsb
add
adc
lods
fwait
xor
je
es
xchg
mov
xchg
pop
pop
pushf
mov
push
fidivrl
and
add
out
pop
lcall
sub
inc
outsb
outsb
fucom
fiadds
shll
and
push
push
into
jecxz
cmp
in
movsb
mov
sbb
jp,pt
fadds
mov
fdivrl
pop
cli
mov
jo
stc
lret
xchg
clc
imul
push
lret
aam
dec
inc
mov
adc
or
lret
jmp
ret
loopne
sub
ljmp
mov
ds
jecxz
xchg
shll
xchg
pop
mov
mov
int3
shrb
pop
sbb
push
jg
int3
repz
or
call
sbb
dec
sbb
jns
test
enter
mov
lock
imul
in
imul
bound
xchg
xor
fiaddl
iret
and
pop
dec
jae
es
nop
pusha
pusha
mov
fsts
dec
popa
out
or
ljmp
add
shl
imul
mov
lock
mov
int3
sbb
push
enter
les
je
sbb
cld
sbb
pop
or
xor
pop
stos
or
sahf
int
cmp
sarb
rcr
testb
and
add
clc
mov
dec
xchg
mov
xchg
mov
bound
inc
fldt
xchg
pop
jmp
ret
mov
test
fimuls
mov
add
int
xchg
outsl
jge
xchg
pushf
ljmp
jecxz
mov
insl
insb
outsb
mov
inc
cwtl
aam
jnp
dec
sbb
sarb
out
xchg
sub
imul
adc
scas
mov
xchg
out
shll
testb
daa
daa
xlat
fstp
pop
pop
mov
push
mov
inc
ret
nop
xchg
jp
fisubl
xchg
fimull
xchg
stc
push
rcr
push
into
mov
add
rcr
push
and
les
popa
sub
sub
xchg
cmp
movsl
ret
stc
je
adc
and
lock
or
add
push
repz
je
adcl
sbb
xor
and
mov
push
test
cmp
mov
sbb
sbb
cmpsb
call
orl
xor
daa
cmp
or
mov
pop
popf
lahf
in
loopne
fistps
aam
cmp
call
pushf
adc
pop
sbb
mov
fwait
out
or
nop
in
mov
stos
out
xor
cmp
mov
test
or
pop
stc
loop
xorl
pop
adc
adc
jle
pop
cltd
js
sbb
sub
mov
xor
sbb
fistpl
mov
sub
aas
stos
icebp
jmp
fs
mov
lods
cmp
ljmp
sub
repz
stc
jge
pop
jae
xchg
pop
push
rcrb
loope
mov
arpl
push
roll
das
pop
pushf
jnp
ret
popa
test
pop
adc
inc
mov
fst
mov
mov
inc
out
sbb
ficomps
jbe
push
jb
or
inc
mov
insl
sbb
xchg
push
inc
cwtl
cltd
dec
sub
and
xor
mov
pop
mov
movsb
xor
es
mull
sbb
cmp
test
pop
out
xchg
sbb
lcall
ja
pop
mov
aas
jne
xor
out
or
sbb
push
shl
jmp
xchg
clc
int3
popa
and
adc
fcoml
int
fwait
lea
mov
outsl
mov
fildl
mov
sub
mov
jle
shrl
xchg
sbb
mov
imul
sahf
pushw
jbe
push
cmp
inc
xor
movsb
inc
cmp
lret
inc
adc
cmp
mov
add
decb
out
lods
sbb
jne
mov
pop
nop
inc
mov
and
sub
add
mov
cmp
es
xlat
sbb
insl
jns
mov
pop
push
ss
pop
aaa
sbb
cmp
mov
lahf
cmp
pop
mov
cmp
daa
iret
cli
xchg
add
push
fucomp
pop
inc
xor
movsb
mov
bound
loopne
or
lcall
div
test
fst
mov
xlat
ja
dec
mov
xchg
popa
or
cmpsl
mov
jns
rcrl
aaa
inc
jle
sarb
and
movb
mov
shrl
pushf
add
jp
je
jo
aaa
push
dec
sahf
pop
out
xor
push
andb
and
in
adc
jmp
jne
and
cmp
add
popf
cmp
loope
test
push
cmp
into
pop
mov
loop
lahf
imulb
test
je
data16
push
out
and
insl
adc
cwtl
pusha
mov
fmuls
divb
fisubs
movsl
mov
aam
ja
or
pop
inc
xor
loop
pop
add
insb
and
out
jne
mov
mov
test
lcall
adc
ffreep
pop
test
or
arpl
call
loope
xor
lds
add
int3
arpl
sbb
and
je
and
cmp
es
push
jno
pop
into
hlt
rorl
jp
fistl
cmpsl
rorl
sub
push
mov
jb
jl
xchg
xchg
dec
loope
push
inc
dec
out
cmp
cmc
daa
pop
xchg
xchg
and
push
jo
or
push
cmc
ja
lods
cmpsb
lahf
xor
mov
mov
stc
stos
and
sub
xchg
xor
fisttps
sub
sub
push
xchg
imul
insb
call
inc
sbb
pop
les
insb
in
xchg
cmpsl
stos
dec
pop
mov
sub
mov
mov
les
ja
adc
and
aad
daa
cmp
add
and
lods
int3
mov
repnz
stos
aam
or
adc
cmp
and
sbb
hlt
popa
cmc
call
pusha
xchg
and
lock
cmp
sub
movsl
push
fidivs
sbbb
jne
mov
cmp
clc
test
hlt
mov
xchg
cwtl
push
mov
sbb
fwait
xchg
pop
sub
xchg
stos
push
inc
iret
fbld
into
lea
or
jbe
fcompl
mov
pop
lret
cld
adc
testb
adc
cmp
jge
divb
sub
pop
mov
test
orb
cmp
push
jnp
out
pop
les
push
in
ja
enter
dec
xor
out
inc
popa
lock
mov
rcll
adc
jnp
and
push
sbb
mov
cmc
outsl
in
ja
sbb
call
mov
jnp
xchg
or
dec
add
mov
insl
adc
popa
pop
ret
popa
fiaddl
push
out
inc
lret
test
mov
int
jae
movsb
stc
int3
fcoms
dec
xchg
jg
mov
hlt
movsl
sub
sarb
lods
push
cwtl
mov
mov
repz
daa
push
enter
aas
xchg
dec
push
imulb
loopne
inc
push
aad
pop
aad
sbb
add
out
push
push
push
popf
mov
jae
mov
dec
xchg
cmpsb
arpl
enter
mov
hlt
cltd
and
inc
and
int
push
int3
outsb
movzbl
mov
adc
pop
dec
not
cli
push
hlt
push
lcall
sbb
xor
stc
fsubr
push
dec
dec
cmp
sahf
ret
cwtl
jle
jmp
subl
jae
cs
mov
lock
mov
push
adc
mov
add
popa
adc
xor
dec
test
ficoml
inc
or
lret
sub
test
idivl
cmp
inc
push
push
repnz
or
push
ss
nop
movsl
mov
sbb
ret
arpl
rcl
push
mov
mov
mov
add
les
push
fs
cmpl
enter
mov
into
xchg
cmpsl
adc
popf
push
sub
xor
aad
adc
lods
pop
xor
shrb
sbbb
or
pop
push
jbe
jg
decl
stos
leave
enter
dec
gs
enter
out
stos
iret
shr
bound
and
jns
xchg
std
je
stos
paddb
push
aas
pop
add
lods
jb
jecxz
jmp
fcompl
pushf
xchg
rclb
xchg
aad
repz
call
pop
mov
pop
or
gs
jbe
pop
xchg
jnp
fimuls
insb
lods
xchg
mov
lods
scas
xchg
outsl
pop
aam
xchg
xchg
clc
push
pop
xor
lret
into
sbb
in
cmpsb
add
dec
aas
aam
xchg
das
addr16
fwait
mov
mov
aaa
dec
jo
nop
sub
scas
sbb
scas
jge
out
adcl
and
js
bound
jmp
jbe
dec
daa
in
pop
xor
dec
cmpsl
pop
push
jmp
shlb
mov
pop
sbb
insl
cwtl
stc
add
and
add
jmp
in
ss
sbb
mov
xor
andb
push
pop
jbe
sbb
push
nop
jne
lds
cmpsl
cmp
outsb
jae
cmpb
mov
pop
ss
repnz
sbb
ret
adcl
jnp
cmp
dec
sub
dec
call
push
ret
movsb
std
xchg
aad
call
dec
pop
fimuls
jg
aam
lret
cli
pop
inc
jb
and
mov
mov
fadds
adc
rclb
mov
shl
hlt
inc
mov
cmpsb
mov
loope,pn
xchg
jmp
repnz
add
inc
sub
jo
mov
cmp
ja
sahf
stos
out
mov
pop
adc
lcall
fmulp
cmpsb
and
lods
adc
in
or
es
fucomi
cmp
sti
jle
push
cmp
adc
cmp
fwait
and
push
sub
cmp
psrlq
and
dec
bound
pop
outsl
and
in
in
mov
mov
adc
mov
push
lds
lahf
js
ret
add
and
in
push
shll
lret
sbb
xor
andb
lods
pop
and
inc
cmpsb
in
sbb
js
jle
dec
mov
dec
mov
add
xor
popa
cltd
lret
test
pop
out
xor
into
mov
ficoml
mov
mov
call
dec
xchg
push
cmpsb
jl
into
add
pop
pop
pop
push
mov
dec
push
add
into
test
dec
push
sub
arpl
inc
or
cmp
in
lret
pop
inc
mov
ljmp
pop
pop
addr16
and
dec
test
fstps
xchg
loopne
daa
subb
jmp
add
pop
xchg
ljmp
or
into
xchg
clc
jns
fnstcw
mov
cmp
sbbl
inc
cli
push
inc
lods
push
fstpl
adc
fisubs
outsl
and
cmp
mov
cld
xchg
inc
mov
and
push
test
mov
mov
std
enter
or
push
mov
repz
and
sbb
jge
xor
es
movsb
inc
pop
das
mov
mov
jne
mov
mov
cltd
ljmp
out
test
ficompl
and
adc
jg
pop
roll
jge
jae
stc
add
dec
add
push
jge
jecxz
mov
cli
ds
aas
pop
inc
in
mov
dec
mov
xor
sbb
out
pop
arpl
adc
pop
push
inc
test
xlat
xchg
lcall
in
pop
pop
mov
lods
push
stos
xchg
push
mov
mov
enter
fs
test
mov
out
sti
mov
ds
mov
xor
and
mov
rol
sti
in
mov
scas
add
loopne
loop
lock
ret
icebp
outsl
out
jno
jno
int
and
mov
subb
add
orl
mov
push
sbb
loope
pushf
in
adc
pop
adc
mov
je
xchg
movsl
cmp
sub
leave
dec
divl
jbe
sub
repnz
adcl
loop
dec
jge
pop
xchg
fwait
ss
cmp
popf
jg
and
fildll
cmp
push
cmpsb
add
fs
fisttpl
fidivs
inc
roll
scas
fsubrs
mov
dec
ljmpw
push
jle
fwait
into
pop
inc
cwtl
push
jp
mov
pop
pusha
in
mov
sub
sbb
dec
mov
mov
or
adc
inc
jnp
jbe
pop
outsl
xor
into
push
mov
jo
add
sbb
sub
lds
xor
jns
mov
mov
and
fists
mov
outsl
mov
pop
adc
addl
push
push
jno
sbb
add
lock
insl
mov
test
imull
cwtl
jbe
lret
sbb
or
pop
push
stos
mov
xor
cmp
inc
mov
ja
mov
cmc
jae
inc
xlat
mov
pop
mov
in
aas
mov
push
not
push
xlat
gs
jnp
hlt
add
mov
aad
in
inc
cmpsl
cmp
adc
std
fnsave
add
xor
aam
leave
test
sar
and
mov
ret
push
test
jg
scas
xor
cwtl
push
jg
xlat
movsb
jb
or
cmpsl
repz
dec
mov
and
js
dec
inc
sub
sub
mov
fs
jns
inc
adc
in
ja
dec
in
jne
stos
push
jb
mov
mov
out
fnsave
pop
stos
lock
ret
pop
jo
ret
inc
inc
or
jg
mov
mov
xchg
xor
lret
mov
xor
ss
or
add
push
inc
cmp
pushf
lods
enter
and
push
xchg
sub
hlt
cwtl
insl
das
scas
mov
xchg
pop
mov
cmp
rcl
add
push
loop
push
cmpsb
cltd
and
adc
test
pop
aas
mov
adc
dec
or
pusha
jl
sbb
sub
int
out
fistpll
cli
push
cmp
in
jg
insl
out
mov
mov
pop
or
fsubl
test
mov
pusha
mov
cmp
out
cmpsb
test
das
andb
pop
loope
mov
jno
aas
clc
push
decl
and
push
pop
lret
out
cld
or
movsb
ffree
ja
add
jge
dec
test
push
mov
cmc
push
in
das
scas
out
dec
push
outsl
sbb
mov
mov
cwtl
dec
loope
push
loop
imul
cmp
sarl
ret
pop
cwtl
ds
xchg
xchg
insb
jl
sti
cmp
ret
mov
aas
pop
push
sbb
in
divb
xor
out
cwtl
push
ljmp
fsub
dec
ret
rcrb
xlat
xor
inc
inc
xor
pop
adc
ret
adc
lea
repz
faddl
jns
xchg
mov
lock
das
les
mov
loope
lcall
int3
xor
cmp
in
mov
pop
mov
mov
outsb
or
xlat
cmc
loope
dec
int3
pusha
cld
loopne
lea
and
jnp
xor
and
popf
add
push
adc
mov
or
leave
cmp
mov
or
cmp
mov
rcr
cmpsl
push
mov
lret
xchg
xor
cmc
nop
leave
in
mov
dec
stos
mov
pop
inc
xchg
cmpsl
es
jg
sbb
in
mov
mov
adc
xor
xchg
push
jno
cmp
push
pusha
pop
jmp
mov
shlb
sbb
repnz
and
mov
aad
and
or
inc
outsl
pop
jne
mov
pop
out
xchg
js
pop
scas
mov
and
leave
jg
aas
shr
ljmp
andb
adc
out
mov
aas
pop
leave
push
ss
mov
ja
adc
sbb
xchg
ds
rorl
rolb
xchg
negb
push
fdivr
fiaddl
sub
icebp
fisubl
cmp
xchg
dec
jne,pt
mov
in
test
cmp
push
loope
decl
fwait
pop
xchg
cmp
push
inc
pop
jecxz
cmp
shll
or
into
aas
cltd
fcoms
push
sbb
xor
dec
insl
xchg
das
adc
add
fsubrl
enter
and
xchg
adc
push
pusha
fs
and
out
mov
push
pop
jmp
mov
xchg
ficoms
loopne
dec
adc
into
lcall
dec
pop
gs
je
xchg
push
push
push
into
sub
mov
dec
cmpl
or
cmp
push
movsb
cmp
ret
ja
mov
mov
xchg
mov
add
cmp
dec
lret
and
popf
jg
sub
ds
mov
and
xor
mov
mull
or
jb
pop
and
ret
adc
and
sbb
repnz
pop
and
jbe
popl
mov
pop
adc
cld
mov
push
mov
sub
cmc
lods
sub
push
xchg
cwtl
imul
jns
sbbb
adc
outsb
sbb
pushf
pushf
jns
sar
push
movsb
jle
int3
loope
sub
repnz
adc
mov
pop
mov
fisubs
xchg
xlat
jno
test
in
icebp
ret
mov
repnz
mov
ja
dec
jmp
mov
mov
lahf
mov
std
xor
and
cltd
jno
mov
fwait
jge
sbb
int3
in
ret
dec
mov
jo
push
lea
mov
mov
add
int3
xchg
mov
cmp
jmp
push
int3
fldenv
addr16
test
leave
adc
imul
and
sbb
pop
rcll
inc
pusha
ds
mov
pop
pusha
jns
mov
and
mov
push
sahf
mov
cld
adc
pusha
xchg
push
sahf
fwait
int
mov
jmp
cmp
stos
in
cmp
inc
je
or
mov
or
pop
adc
cld
les
test
xchg
adc
inc
jnp
loop
orb
fsubrp
ja
enter
mov
cmp
mov
jb
fucomip
fsubs
ficomps
cmovnp
jl
hlt
cld
push
push
adc
or
jg
jg
call
dec
cld
cmpsb
inc
inc
imul
fwait
sub
fs
mov
xchg
fiaddl
outsl
pop
xorb
or
popa
push
insb
bound
aad
sti
sbb
movsl
cld
cmc
jge
lcall
call
inc
pushf
push
xchg
lds
testl
xor
jmp
mov
fs
and
xchg
inc
popa
cmc
mov
fs
jle
adc
jno
das
ljmp
xchg
mov
dec
inc
in
dec
mov
xlat
mov
arpl
jno
aad
push
test
mov
out
movsl
ret
push
enter
mov
fcmovbe
pop
cld
lods
pop
scas
pop
icebp
pmaxub
push
cmpsl
dec
xor
jmp
adc
sbb
test
ljmp
dec
adc
cwtl
xchg
or
ja
push
pop
orl
inc
or
sub
jae
jns
adc
mov
mov
leave
mov
push
test
or
pusha
pop
xor
pop
fidivl
fidivl
mov
lahf
xchg
jge
out
popf
aad
cld
cli
xchg
js
ficomps
lods
add
cmpsl
lds
inc
pop
repz
mov
dec
stos
std
or
push
mov
outsb
repnz
jg
scas
int3
divb
bound
scas
jecxz
imul
mov
pop
xor
test
shl
in
out
mov
xor
push
jo
or
lahf
scas
push
aas
insl
adc
rcl
and
arpl
push
xchg
jns
mov
call
bound
or
loope
push
cmp
mov
pop
push
int3
push
dec
mov
pop
push
pop
dec
leave
jne
mov
test
cmp
imul
mov
mov
lods
shll
mov
popf
insb
push
push
int
pusha
jo
stc
arpl
xchg
pop
inc
lret
call
lcall
adc
fwait
jp
pop
add
push
rol
sti
loop
and
adc
xchg
es
pop
xchg
jb
inc
gs
cld
test
sub
sub
in
add
jb
out
fs
sbb
loope
push
pop
scas
cld
fistl
xchg
and
inc
inc
aam
mov
xchg
cli
pop
imul
lea
dec
mov
stos
push
adc
xlat
sbb
aam
mov
and
sub
add
pop
cmp
aas
mov
out
shrl
sbb
enter
xchg
scas
test
xlat
and
ja
aas
mov
or
bound
adc
leave
lds
ror
cmpsb
outsb
stos
ja
dec
push
fcoms
int3
pop
pop
push
movsl
test
fsubrl
pusha
test
loope
xor
adcl
icebp
mov
dec
sub
repnz
pop
sub
in
cmp
pop
ja
shrl
adc
mov
test
cmp
in
or
aas
shlb
jl
out
mov
cmp
xchg
rorl
cmp
mov
orl
pop
insl
fbld
out
xor
sub
dec
mov
pop
inc
fildll
fistpll
fdiv
fldcw
sub
ud1
push
icebp
mov
ja
sti
jbe
nop
adc
add
iret
xchg
les
test
pop
int
cmc
push
fisttps
jae
gs
pop
loop
test
pop
add
aas
fs
enter
imul
pop
mov
inc
mov
xchg
in
pushf
mov
cmp
adc
pop
aam
jmp
aam
cwtl
mov
shl
or
mov
clc
mov
sub
mov
sbb
jnp
fists
sub
xchg
jp
xchg
pop
inc
jg
loop
cmc
mov
fildl
jbe
jae
mov
mov
mov
adc
bound
shlb
jb
int
xchg
add
mov
push
lret
pop
and
and
clc
mov
jb
cmp
pop
cmp
xchg
dec
out
xor
dec
pop
lock
idivl
dec
jae
in
aad
push
jo
fiaddl
aaa
and
notl
imul
ret
iret
outsl
fistpl
testb
imul
push
mov
repnz
mov
std
mov
mov
imul
int
and
inc
shrl
xor
inc
mov
scas
jo
push
aaa
mov
xchg
cmp
add
stc
cld
jnp
mov
inc
iret
push
jmp
shrl
dec
das
mov
outsb
daa
out
flds
fnstsw
cltd
in
adc
xor
lods
mov
push
adc
sarb
fsubr
cli
pusha
cmp
in
repnz
test
movl
jp
loope
in
mov
push
test
enter
test
leave
imul
mov
push
out
or
ljmp
sahf
mov
icebp
jl
stos
push
adc
adc
hlt
xchg
cltd
movsb
xor
jmp
push
mov
jmp
outsb
rorl
push
xchg
and
add
adc
aaa
int3
scas
arpl
add
sbb
jnp
sbb
dec
sbb
test
xorb
mov
mov
sti
sub
mov
or
imul
adcl
jge
jae
jp
cmp
into
push
dec
sahf
or
push
add
insb
in
mov
je
movsb
data16
mov
mov
inc
xrelease
sbb
xor
push
test
push
hlt
cltd
pop
push
inc
push
fcmovnb
pop
in
push
mov
lcall
arpl
and
icebp
inc
inc
cli
cld
or
jecxz
jae
mov
dec
mov
aas
jg
shlb
push
icebp
dec
inc
shll
or
orb
aam
loopne
aaa
pop
or
test
inc
adc
sbb
scas
jl
insl
pop
mov
test
insl
push
aas
test
shl
mov
dec
and
inc
xchg
adc
pop
mov
daa
xchg
xchg
or
aad
mov
push
loopne
pushf
sbb
lods
andl
mov
notb
cmp
in
and
dec
loop
or
and
lds
fs
testl
push
jmp
mov
jge
jle
repz
or
sti
pop
jp
mov
push
xchg
inc
inc
add
push
pop
pusha
push
mov
xchg
mov
lods
dec
repnz
ret
cld
cmp
das
out
mov
notl
inc
aad
test
adc
test
dec
cmp
mov
je
out
xchg
out
mov
inc
push
xor
out
dec
popl
mov
repz
dec
mov
sbb
and
repz
cmp
ja
mov
sbb
mov
inc
xor
jno
jle
push
fs
pushl
lea
and
xchg
dec
int3
jmp
lret
loope
icebp
inc
dec
xor
inc
mov
repz
mov
or
js
cld
jmp
outsb
inc
scas
dec
pop
fwait
mov
into
pusha
cmp
mov
faddl
stc
ret
lcall
xchg
cmp
sub
mov
push
jmp
call
inc
pop
out
call
adc
inc
push
and
sbbl
mov
and
bound
and
xor
mov
add
scas
push
xor
dec
test
fnsave
ret
mov
adc
lock
dec
push
or
inc
push
int
imul
dec
lcall
call
pushf
or
loopne
lcall
stos
icebp
call
jb
jnp
cmp
sbb
dec
ss
jmp
cs
outsb
pop
scas
popa
fiadds
pop
xchg
cmp
hlt
mov
mov
cmp
mov
xchg
inc
push
mov
mov
mov
sbb
jae
pop
and
cld
outsl
pusha
xor
test
loop
movsl
jge
push
inc
adc
xor
insb
andl
sub
mov
adc
fs
jo
sbb
sbb
mov
and
andb
cmpsb
push
mov
mov
sbb
jno
adcb
fadd
cmp
outsb
ja
ret
insl
add
imul
jp
pop
test
or
push
inc
mov
pop
in
daa
jbe
stc
std
xor
mov
jle
mov
pusha
inc
sbb
int3
mov
aas
mov
xor
pop
sbb
stos
lods
sarb
imul
aad
jl
or
fisubrl
adc
mov
divb
aas
mov
pop
xchg
jbe
das
loope
inc
jb
movsl
mov
xchg
pushf
jmp
rcll
pop
imul
addr16
cmp
cmp
push
clc
push
test
sub
jmp
cwtl
jne
mov
lods
in
jae
and
xor
stos
lret
and
push
mov
shrb
rcrl
mov
push
mov
or
shrb
inc
push
push
out
jno
test
outsb
cwtl
loope
jl
iret
lahf
inc
aam
inc
call
mov
push
out
popf
int3
icebp
cmp
and
cwtl
mov
xor
mov
inc
mov
jmp
jae
and
sub
js
and
xlat
pop
and
outsb
outsl
aaa
and
and
sbb
lahf
xchg
pop
cmp
dec
loopne
jae
repnz
xchg
inc
data16
in
and
aad
mov
into
testl
pop
or
insl
dec
mov
cwtl
fs
xor
fwait
pushf
push
inc
add
pop
aad
inc
sbb
inc
call
mov
lds
inc
push
mov
addr16
cmpl
in
pop
dec
push
ja
cmp
sbb
cmpsl
hlt
rorb
push
shr
mov
jp
gs
sbb
loope
mov
or
hlt
addl
punpckhwd
insb
sbb
pop
adc
mov
pop
shr
or
mov
out
nop
inc
pop
ljmp
into
dec
push
movsl
testb
into
lods
dec
or
movsb
out
sub
or
adc
outsb
xchg
loop
xor
cltd
adc
es
daa
shr
mov
mov
not
jl
push
testb
adc
test
push
xchg
push
dec
gs
mov
add
xchg
shrb
push
inc
test
pop
das
idivb
cs
bound
fsqrt
dec
stc
mov
sbb
xlat
dec
mov
leave
and
rorb
xchg
xor
insb
cmp
loop
repz
adc
inc
dec
std
pop
push
pushf
aaa
fwait
imul
dec
fldt
imul
lret
mov
mov
leave
mov
faddl
cmp
cli
pop
adc
push
dec
xchg
je
sti
xchg
sub
adc
repnz
sub
push
xor
pop
xor
ljmp
mov
jle
add
sub
inc
pop
xchg
inc
mov
enter
aaa
fwait
dec
push
pop
add
mov
rorl
pop
and
cmp
xor
mov
pop
push
int
loopne
cmp
and
pop
add
mov
or
mov
mov
test
pop
das
fucomi
sub
pop
sbb
int
loope
add
rcrb
xchg
fildl
xchg
adc
popf
dec
in
mov
fsubrl
pop
add
dec
rclb
pop
mov
insb
test
xchg
xchg
rcrl
lods
xor
mov
sub
ja
lods
adc
adc
cmpsb
sub
fs
popa
mov
push
jns
inc
cld
adcb
pop
jno
cmp
inc
jmp
or
dec
pop
mov
add
lods
xchg
bound
lds
push
pop
adc
xchg
and
call
jne
fstpl
stos
xor
idivb
aas
enter
mov
pop
jle
les
and
lret
pop
mov
test
mov
xorb
jbe
fs
mov
loope
movsl
pop
mov
loopne
clc
jmp
dec
cli
out
shll
inc
icebp
xchg
int3
inc
insb
sub
stos
push
mov
sbb
movsl
xchg
fidivrl
aas
xor
cmp
clc
sbb
adc
and
bndstx
jle
lds
add
jg
push
stos
idivb
mov
test
jmp
cld
js
enter
add
xchg
pop
sbb
jb
pop
sbbb
jbe
jne
sub
fs
movsl
cmc
in
sti
fldt
xorb
fiadds
out
clc
cmp
stos
test
or
stc
and
fsubr
rolb
jno
sub
jnp
and
ficomps
out
aam
pop
jp
pop
hlt
xor
dec
mov
iret
mov
and
stos
insb
inc
in
dec
fisubrl
cmp
daa
pop
insb
sbbl
push
sbb
adc
cmp
cld
mov
outsb
xchg
add
mov
lock
int3
push
mov
and
je
dec
or
pop
int3
jp
cmp
out
adc
pop
nop
lds
adc
data16
in
push
test
leave
and
aaa
loopne
jmp
or
or
push
mov
fildl
or
addr16
out
dec
jp
testb
mov
sub
lcall
pop
inc
test
push
sbb
rorb
sub
inc
out
inc
mov
add
xchg
sub
stc
mov
js
repnz
test
out
adc
or
push
add
imul
ja
jp
inc
add
jne
pop
es
jns
xchg
shrb
imul
add
hlt
and
xor
xchg
add
das
cwtl
int
mov
push
out
dec
mov
mov
fs
movsl
inc
add
subl
rorb
out
test
cli
int3
scas
lods
mov
xchg
test
in
repz
aas
rclb
adc
and
int3
shrl
mov
mov
push
jae
fmuls
xchg
mov
cmp
loopne
cmp
mov
push
dec
mov
dec
cmp
test
mov
cmpsb
cltd
div
push
test
aas
dec
mov
aam
dec
out
push
repnz
enter
movsl
ss
cmpl
sub
loop
pop
and
adc
test
fisubl
pusha
ds
sbb
pop
andl
or
gs
cld
jbe
test
and
inc
or
insl
outsb
aam
fdivrs
shll
or
pop
jne
push
outsb
cmp
adc
movsb
inc
int3
lret
shl
inc
adc
or
sti
cmp
pop
or
pop
sti
rcl
pushf
dec
loop
popa
aaa
pop
fld
xchg
mov
ret
cmp
add
xlat
pop
sbb
lds
adc
cmp
xchg
xor
repz
daa
sbb
call
cmp
pusha
fcmovnu
push
out
jge
mov
rolb
pushf
jmp
xchg
and
inc
xchg
fsubl
hlt
jl
mov
std
aad
xchg
mov
int
xchg
or
mov
adc
dec
xchg
jl
clc
dec
xlat
in
jg
push
cltd
fcomps
lret
pop
lea
insl
mov
lahf
div
mov
pusha
cmp
arpl
dec
add
mov
rcl
mov
pop
test
imul
repz
loop
push
loopne
rcl
push
mov
cmp
add
or
fs
cld
adc
addr16
hlt
push
cli
imul
xchg
shrb
mov
mov
or
jns
ds
mov
xchg
xchg
push
mov
sahf
xchg
push
and
adc
test
loopne
add
bound
scas
lods
and
adc
in
inc
test
pop
jmp
adc
jbe
pop
mov
std
cmp
adc
outsb
mov
lock
jo
stos
mov
icebp
mov
and
fwait
mov
xor
mov
or
fnstcw
cmp
sbbl
shrb
cmp
aas
sbb
dec
test
js
aad
arpl
mov
fsubs
jmp
test
imul
sbb
sbb
aaa
or
xor
movsb
imul
mov
sbb
pop
mov
aam
mov
mov
fs
push
jmp
enter
push
add
inc
pop
mov
cmp
sub
push
inc
loop
xchg
lods
sub
mov
mov
jbe
sbb
xchg
jge
dec
push
and
insb
mov
pop
pop
pusha
jne
fisttpll
cmp
mov
pop
fs
aam
lcall
or
sbb
lea
fnstcw
mov
pop
pop
mov
cmp
nop
mov
hlt
aaa
xchg
add
pop
clc
lds
jno
aam
subb
cwtl
inc
outsl
aam
sbb
add
fists
scas
cmpsb
mov
test
mov
mov
adc
ds
sti
mov
inc
mov
add
sbb
pop
and
ljmp
add
xlat
in
lret
push
sbb
fs
mulps
testl
mov
cwtl
int3
cwtd
testb
inc
push
out
cltd
lock
pushf
xor
pushf
and
add
ja
ret
mov
stc
push
xchg
enter
scas
cld
xor
stc
mov
sub
fdivr
and
sbb
mov
or
pop
lahf
jo
pop
fcomi
pop
xor
xchg
mov
daa
testb
dec
je
ja
rcl
add
jp
jecxz
loop
sub
test
sarb
add
mov
xlat
idivl
adc
call
xchg
xor
pop
cmp
and
cld
mov
sti
pop
xlat
outsl
ret
jmp
mov
icebp
lret
xchg
pop
adc
or
aaa
aas
xchg
aad
or
mov
adc
es
in
add
pop
dec
cmc
daa
mov
inc
and
push
adc
xor
or
test
mov
cmp
xor
pop
lcall
jbe
adc
inc
adc
scas
js
xchg
xor
divl
jae
pop
sbb
and
jmp
pop
jb
ja
in
mov
and
mov
cld
lea
adc
fcoms
xor
mov
negb
rcl
loope
dec
jnp
fcoms
lods
mov
sub
jo
mov
cs
jne
out
pop
cmpl
mov
loop
jnp
insb
stos
push
cmp
mov
jnp
dec
mov
aas
aas
push
aad
pushf
push
pusha
jmp
sbb
mov
inc
push
jae
daa
xchg
lret
insl
mov
or
fs
popa
int
adc
add
jb
stos
loopne
lcall
push
ja
push
jmp
mov
sub
insl
and
lea
test
push
cs
cmp
lcall
leave
mov
test
cs
jb
mov
jo
insb
mov
or
mov
dec
out
ds
in
in
push
das
cmc
lcall
es
neg
sbb
pop
aaa
in
cmp
test
imul
mov
ljmp
mov
shll
les
sub
add
xchg
jg
stc
xchg
out
mov
mov
adc
mov
adc
push
out
dec
std
inc
cmp
insb
mov
cmpsb
and
push
jp
sbb
sbb
stos
ds
jns
sub
out
push
fistps
mov
into
insb
or
sbbl
jl
dec
cmpsl
sub
sbb
mov
pop
xchg
adc
pop
lcall
xlat
jle
cmc
aaa
lret
xchg
in
mov
inc
in
faddl
lods
inc
sahf
mov
xor
fistps
les
repz
inc
fldenv
push
cmp
xchg
repnz
pop
je
mov
subb
es
scas
mov
mov
cli
sbb
ficompl
pop
or
mov
cmp
jle
add
xor
mov
mov
xchg
adc
sub
cwtl
jge
fcmovb
cmc
sahf
sbb
adc
aam
cmp
dec
lods
add
push
add
imul
add
int
and
jp
divl
or
iret
test
icebp
not
cmp
push
add
int3
inc
movsb
lahf
sahf
out
xchg
inc
out
cwtl
popa
mov
push
ret
in
jle
push
cmp
cltd
jae
mov
repz
pop
adc
and
mov
cs
lret
jg
inc
jge
stc
mov
jae
popa
insl
mov
fidivl
mov
mov
inc
cs
dec
dec
mov
outsl
cmp
or
sbb
insb
xor
movsb
sbb
in
mov
dec
repz
xchg
mov
inc
push
idivb
lret
and
iret
sub
sti
jae
xchg
fs
dec
pop
sbb
mov
in
data16
push
jmp
imul
jno
divl
add
pop
push
rep
mov
loop
mov
inc
ja
in
aad
mov
test
or
inc
dec
inc
ja
mov
push
inc
adc
insb
sub
in
mov
sbb
mov
in
mov
lcall
pop
std
xor
mov
in
test
icebp
xchg
notb
mov
mov
cmp
jns
das
cmp
scas
pop
pusha
movsl
outsl
lods
pusha
sbb
and
mov
dec
xlat
adc
mov
jns
mov
cltd
add
or
scas
pop
leave
cld
xchg
leave
sbb
into
pop
jae
fnstcw
and
push
push
mov
popf
pop
add
mov
es
insl
pushf
dec
imul
sub
sub
cld
icebp
fstps
mov
data16
les
mov
and
xchg
push
aam
inc
add
sub
int3
in
in
xchg
shl
mov
sbbb
add
jb
lds
push
push
es
lea
lods
add
dec
ret
js
xlat
mov
add
jecxz
pushf
mov
push
xor
popa
fstps
lret
outsl
loop
gs
cmp
add
and
jne
aam
stos
cmp
insb
xchg
iret
das
in
mov
aas
xor
inc
stos
loop
xchg
mov
cltd
daa
adc
repnz
mov
ffree
sub
and
cmp
mov
out
int
in
shlb
ja
xchg
jnp
icebp
xchg
mov
mov
daa
xchg
lea
out
inc
not
sbb
xor
je
jl
fdivrl
adc
data16
ljmp
push
test
mov
adc
cmp
jmp
mov
call
lds
jecxz
xor
adc
xor
or
sbb
lods
cmp
xor
xchg
mov
pop
rcrl
ljmp
ljmp
or
icebp
repnz
rorl
shlb
pop
jl
sbb
rclb
aad
add
jae
mov
jmp
cmc
pushf
xchg
jmp
mov
lods
cmc
jp
inc
jge
adc
pop
push
jae
cmp
jp
movsb
lods
jbe
dec
rclb
ja
bound
xchg
xlat
pop
sbb
jnp
iret
iret
dec
adc
fcoms
rolb
fs
frndint
call
mov
lret
outsb
inc
jns
cli
jl
lret
add
mulb
mov
lret
mov
adc
arpl
and
repnz
lock
jg
lret
lret
fisubrl
pop
and
xor
test
sbb
pop
sahf
mov
shrl
fistpll
shlb
loope
das
cltd
lahf
or
cli
rcrb
cmp
mov
imul
and
in
daa
sbb
mov
and
cmp
push
cltd
cwtl
imul
outsb
rcll
and
mov
addr16
call
push
ds
add
mov
cmp
pop
into
lea
or
xchg
or
push
sub
mov
outsb
scas
cwtl
sti
xor
popa
mov
mov
repz
cmp
dec
mov
inc
jb
add
xchg
or
int3
jne
xchg
aaa
jle
or
insl
mov
mov
fidivl
add
pop
xchg
jecxz
mov
add
pop
dec
insb
lret
std
mov
adc
push
addl
aaa
pop
inc
into
in
lret
mov
stc
cli
stc
add
mov
add
mov
xchg
mov
orb
mov
div
sbb
mov
dec
rcrl
and
cwtl
negl
ret
mov
mov
adc
cli
iret
xchg
fs
pushf
pop
cmp
xor
sub
mov
loopne
add
jb
aam
xor
dec
ja
aam
cli
xchg
das
jp
push
jnp
jne
pop
dec
mov
dec
in
lret
test
in
shl
inc
sub
push
jp
loopne
out
jno
mov
or
xlat
subb
outsl
dec
sub
cmp
or
mov
fildl
dec
pop
lcall
and
xchg
lret
mov
es
jle
orb
xchg
inc
popf
ds
sbb
mov
fsubp
repnz
divl
rclb
adc
dec
push
jnp
dec
pop
into
dec
stc
arpl
mov
iret
push
jge
dec
lcall
rcll
fcoms
jne
mov
fistpl
inc
scas
out
pop
jmp
in
adc
sbb
ret
std
pop
in
lret
lods
mov
stc
inc
mov
push
adc
outsb
mov
push
fisttpl
sub
push
and
or
mov
xchg
imul
nop
test
jge
dec
add
or
in
js
pop
stc
adc
mov
inc
fstpl
or
ljmp
ljmp
sub
leave
fsub
cmpsl
cmp
shl
cld
test
pop
loopne
xchg
or
outsl
pop
xchg
inc
mov
cmp
mov
aaa
mov
and
cs
jno
sub
mov
adc
repnz
call
pushf
jae
fidivrs
adcb
shlb
mov
adcb
int3
add
pop
and
mov
in
repz
and
dec
and
mov
scas
jbe
leave
mov
cmpsl
btrl
fldt
fbld
movsb
or
sub
inc
in
jae
data16
push
xchg
iret
sbb
mov
ss
dec
sub
xchg
inc
mov
or
mov
aaa
je
loopne
sub
lods
jecxz
mov
out
cmpsl
xor
out
push
jmp
or
push
cmc
and
jo
lahf
stc
dec
cmc
mov
cmpsb
sub
sbb
js
pusha
gs
sub
icebp
mov
cmpb
xchg
mov
ljmp
scas
es
sbb
int
and
gs
loopne
xor
or
enter
out
bswap
imul
scas
aam
aaa
add
push
popf
add
jl
sbb
jmp
sub
pushf
dec
addr16
inc
hlt
sub
cmp
call
ljmp
fdiv
mov
in
pop
into
sbb
jns
sti
idivb
repz
sbb
into
aam
arpl
push
sub
mov
jge
mov
in
sub
fimuls
xchg
cli
mov
pop
ljmp
test
aad
sbb
lret
sahf
dec
lea
outsl
out
inc
xchg
mov
decl
mov
test
movb
pop
aas
xchg
push
sahf
sub
stos
enter
pop
out
lock
or
in
mov
js
or
repz
xchg
cmp
inc
sbb
jge
adc
rol
mov
push
push
lods
add
bound
loop
int
lea
add
add
movsb
jae
pushf
pop
test
aad
xchg
cld
ja
orb
insl
loop
jb
mov
fxch
xor
and
inc
sbb
adc
mov
xchg
insl
int3
mov
clc
fsubrp
adc
xor
mov
int
push
aas
insb
lds
xchg
dec
fcmovnbe
subl
or
loop
je
adc
mov
std
shll
cmpb
sbb
ss
mov
les
adc
lods
insl
incb
jl
push
inc
inc
mov
cmp
xchg
and
cmp
enter
jbe
sbb
jg
aad
cs
lods
pop
push
outsl
add
pop
clc
pop
subb
lret
jecxz
scas
add
cmovo
xchg
jbe
pop
sbb
out
jno
stos
adc
es
lea
or
mov
xlat
add
inc
and
push
shll
jne
insl
push
lret
cmpsl
mov
jmp
cmpsl
jne
pop
push
mov
add
jge
cmp
aad
pushf
faddl
scas
mov
xchg
sbbl
xchg
out
and
popa
push
pop
decl
or
and
lock
xor
loope
ds
shll
and
add
pop
in
ljmp
pop
out
fiadds
push
jb
stc
xorb
inc
mov
xor
test
stc
das
popa
popf
mov
and
mov
adc
stos
rcrl
stos
lcall
lock
xlat
mov
mov
stos
je
jg
or
jl
bndldx
xchg
ret
in
leave
ss
cmp
push
sarl
xlat
lock
mov
pop
mov
fwait
mov
or
dec
mov
add
mull
bound
mov
add
int
jnp
mov
outsl
fcmovne
pop
mov
and
xor
cld
mov
or
cld
dec
xor
movsl
pushf
inc
sub
xor
ja
mov
adc
testl
jne
sub
roll
icebp
aas
mov
xlat
sub
mov
jmp
pop
insb
shlb
jae
out
jno
add
push
jl
in
out
adc
insl
call
loopne
lret
add
out
mov
jb
inc
out
sub
enter
sti
mov
pop
inc
cld
sbb
gs
sub
ljmp
mov
and
enter
add
mov
pop
aas
mov
cmpsl
mov
loope
loope
fs
sub
icebp
hlt
pop
aaa
cmpsb
in
add
xor
dec
xor
repz
pop
jecxz
mov
test
shrb
pop
popf
gs
pop
xchg
ret
repnz
push
call
xor
arpl
popl
xor
xor
jl
and
pushf
idivw
push
and
fcmovnbe
xor
and
or
and
inc
lahf
outsl
and
aad
adc
cmp
aam
xor
sarl
pop
imul
pop
test
outsb
jecxz
stos
sub
sahf
xchg
or
xor
add
hlt
xchg
mov
mov
movsb
pushf
mov
jmp
pop
pushf
scas
cmp
jmp
popf
inc
test
xor
xchg
stc
aam
inc
pop
or
and
sub
and
push
sub
push
push
scas
mov
or
stos
cmp
mov
cmpsl
or
sbb
and
or
out
lods
xchg
push
dec
cmp
test
adc
pop
xchg
mov
add
xchg
jo
mov
daa
mov
cltd
xchg
ret
cs
lea
js
ljmp
mov
cmpxchg
outsl
xor
mov
std
and
mov
arpl
mov
ss
leave
mov
mov
pop
mov
jecxz
add
repz
in
ret
test
addr16
lea
sub
cmp
ret
jp
movsl
lret
inc
push
pop
jbe
and
in
and
scas
push
icebp
lea
cmp
rcrl
xchg
xor
sub
and
jnp
outsb
cmpl
xor
lret
pop
xchg
aam
sti
outsb
jp
and
pop
adc
lods
sub
ret
xor
test
loopne
adc
je
inc
mov
add
mov
dec
lret
cmp
dec
repz
jge
pop
lret
adc
dec
xorl
jecxz
push
mov
cmp
cmpb
xchg
or
pop
out
out
ror
inc
daa
sbb
test
xlat
dec
leave
pushf
push
sbb
sbb
rcr
int
add
xchg
mov
in
xlat
imul
fs
push
xorb
xchg
int3
repz
gs
call
adcb
idivb
mov
jg
jnp
push
add
inc
sub
icebp
push
aas
fisubs
jnp
stc
ficoml
xlat
sbb
jmp
mov
fistl
mov
sbb
sub
or
pop
adc
daa
out
mov
fxch
sbb
cli
roll
cmp
push
pop
add
mov
push
sbb
rcll
lret
add
ds
sti
add
dec
lods
scas
sahf
inc
sbb
xchg
arpl
imulb
rorl
dec
fbstp
int3
gs
xor
movsb
inc
pop
popf
fdivl
cmp
shl
xlat
call
fdivrs
mov
ds
fbld
push
xchg
pop
icebp
xor
nop
mov
test
fsubs
nop
inc
lds
jge
jl
sub
cmp
mov
inc
scas
jmp
inc
insl
and
test
dec
mov
cltd
mov
push
loop
mov
je
dec
icebp
add
mov
adc
add
lods
adc
aaa
dec
sbb
lods
in
cli
aaa
add
mov
int3
sbb
cmpsl
jmp
mov
jmp
ja
or
mov
nop
jne
xchg
inc
xchg
in
mov
adc
clc
mov
sbb
and
or
cmpsb
enter
mov
in
je
fildll
add
cmp
sub
add
fwait
outsl
pop
daa
and
call
std
sub
lods
iret
pop
adc
mov
pop
and
fsub
clc
xchg
gs
div
cld
xorb
gs
in
mov
inc
inc
movsl
jg
outsb
push
xor
sub
dec
sbb
out
sbb
jo
aad
or
lods
jp
daa
mov
xor
pop
clc
orl
call
jno
dec
xchg
jns
ret
loop
or
xor
sbb
or
cmp
js
movsl
xor
or
mov
cmp
insb
xchg
es
add
call
loope
mov
cmp
pop
inc
add
les
jle
mov
add
add
pop
add
mov
adc
xchg
subl
lret
mov
jbe
mov
movsb
imul
scas
jecxz
das
cmp
mov
das
ds
xor
push
jb
repz
xor
ja
shlb
lds
daa
pop
cmp
mov
adc
jmp
stc
in
jo
mov
adc
pushf
xchg
pop
fldcw
pop
sbb
add
mov
shll
ret
cld
sub
test
inc
mov
xchg
pushf
ret
es
sahf
test
iret
scas
mov
lret
pop
stc
scas
push
push
test
jne
mov
or
dec
addr16
push
ficompl
or
stos
shlb
mov
dec
mov
xchg
jg
dec
dec
lock
loope
cli
mov
ljmp
sbb
dec
int
dec
cmp
cmp
fs
loopne
jecxz
notl
inc
je
dec
cmpb
mov
xlat
ret
mov
adc
nop
mov
cwtl
sar
addr16
stc
ret
pop
mov
mov
jo
cmpsl
xor
ds
mov
inc
and
movsb
mov
adc
xchg
in
std
pop
ficoml
push
test
mov
leave
cli
cmpsb
xchg
test
mov
xor
dec
lock
inc
adc
test
cmpl
xchg
or
pop
mov
mov
cs
push
test
stos
xchg
inc
mov
cmc
sub
push
mov
shrb
adc
rclb
cltd
shll
stc
cmp
mov
sahf
or
and
cmp
sbb
jg
orl
mov
jge
mov
fdivs
mov
iret
pushl
xlat
jg
into
cmp
or
addr16
sbb
ret
call
push
cli
data16
pop
clc
push
mov
push
sub
loopne
add
cmp
dec
pop
pop
xor
call
jmp
int
lods
movsb
and
push
outsb
daa
aam
xor
rcrb
out
cmp
sbb
cld
xor
aad
lods
adc
shrb
xchg
jle
push
mov
and
test
daa
and
movsl
imul
aad
jo
in
or
repnz
fidivrl
ja
xchg
test
fimull
jle
push
dec
sbb
das
clc
mov
rolb
mov
cmpsl
aas
ja
cmp
xor
or
sarb
push
push
xor
ret
out
outsb
pop
dec
mov
aad
lds
cmpsb
or
mov
adc
and
fmul
pusha
mov
push
in
cmp
mov
cmp
fisttpl
scas
ret
jp
pushf
jns
adc
mov
or
cmp
fdivrl
and
mov
jge
xlat
lahf
mov
xchg
out
dec
stos
add
push
shlb
fstps
mov
mov
test
jecxz
popf
repnz
cmp
push
lret
es
movl
in
or
sub
shrb
mov
or
or
mov
push
mulb
insl
inc
add
jo
sbb
cmpsl
ret
xchg
jl
jg
in
dec
aam
pushl
or
cltd
loope
add
fmulp
hlt
in
aas
mov
adc
lret
jae
push
mov
iret
mov
mov
inc
push
sub
jmp
or
cmp
jl
mov
mov
enter
mov
and
push
outsb
or
cmp
in
cltd
xchg
inc
mov
inc
stos
or
mov
sti
mov
dec
mov
in
fcoms
loopne
mov
inc
add
dec
adc
add
cmp
aaa
jmp
cmc
daa
add
lahf
sbb
xchg
jb
push
loop
sbb
popa
stos
inc
enter
or
enter
jge
lods
ret
push
outsl
dec
jns
mov
mov
ret
jns
lret
insb
pushf
pop
sbb
outsl
clc
mov
mov
mov
scas
mov
mov
jb
enter
dec
xchg
add
fisubl
je
xchg
popa
push
cmp
fcomip
add
repnz
lahf
test
mov
pop
das
sub
cmp
dec
push
orl
mov
and
test
outsb
stos
sub
andl
dec
or
rorl
loope
xchg
xchg
add
call
and
xlat
loope
adc
lock
sub
pop
icebp
jmp
inc
dec
push
out
push
adc
cmpsl
xchg
js
sti
pop
aaa
data16
and
imul
outsl
jae
cmp
clc
mov
rcll
sub
sbb
addb
fildll
jnp
cmp
cltd
xorb
and
add
insl
inc
xor
loop
mov
mov
push
pop
xchg
add
jg
ss
xchg
pop
lods
inc
std
or
mov
rorl
out
lret
lods
adc
xor
jg
mov
jl
cli
adc
int
inc
jno
push
in
fiadds
sub
out
sub
or
pop
dec
cmp
mov
out
fildl
adc
mov
fistl
mov
inc
xor
aam
ss
daa
loopne
or
repz
sbb
cmpsl
fmulp
push
mov
cmp
adc
fwait
adc
out
push
push
out
bound
cld
xchg
mov
out
lods
mov
scas
ret
cmp
fistps
xor
dec
xchg
cmp
popf
inc
mov
mov
sub
inc
and
sub
pop
add
jecxz
add
hlt
aam
or
gs
imul
or
popa
lahf
cmp
inc
adc
xchg
pop
xchg
nop
mov
push
imul
imul
insl
mov
sub
mov
jmp
xchg
mov
mov
mov
jl
test
push
mov
out
xchg
insl
pop
adc
jno
inc
jl
push
mov
add
inc
sti
mov
fwait
lock
mov
lcall
out
mov
push
cld
cmp
mov
mov
mov
pop
inc
in
adc
sbb
fidivl
sbb
push
sbb
mov
mov
and
cltd
test
mov
lods
xchg
ficomps
mov
inc
imul
insb
fs
or
stos
jno,pn
out
and
fistpll
insl
out
cmp
jbe
int
cmp
adc
into
xchg
mov
stc
in
sbb
fbld
sbb
inc
in
sbb
mov
sti
or
enter
sbb
fidivs
fs
mov
pop
ds
xchg
sub
aad
bts
jo
xlat
rorb
loope
xorl
jo
mov
sahf
jo
data16
or
mov
xchg
mov
cmpsl
dec
jg
les
inc
ss
mov
ficoml
arpl
subb
xchg
or
push
push
add
pushf
cmp
dec
mov
mov
int
mov
std
sub
fistpl
push
into
or
and
sbb
or
mov
mulb
popf
push
lods
fwait
mov
das
js
repz
in
test
int3
mov
dec
pusha
fs
fs
push
movsb
cltd
sahf
push
cmp
test
jmp
sbb
xchg
push
sysenter
popa
test
fmul
mov
andb
cmp
mov
call
xor
idivb
outsb
push
lds
adc
in
lahf
faddl
daa
les
xchg
mov
cli
int
mov
mov
sub
jo
loopne
pusha
sbb
andps
andl
xchg
cmpsl
and
sbb
lea
pop
dec
sub
push
pusha
add
fmull
pop
rclb
dec
mov
adc
shlb
push
adc
je
lods
mov
push
lods
dec
push
rcll
daa
in
mov
and
data16
js
aas
and
or
push
push
clc
insb
mov
cmp
push
bnd
xor
jbe
inc
sarb
xor
lods
sub
insb
aas
mov
push
in
mov
aam
adc
cmpsb
aam
into
inc
cli
push
sbb
sbb
push
xchg
jle
cmp
in
sahf
fcoml
cmp
lods
mov
push
lods
nop
iret
jp
inc
lods
out
xor
push
or
popa
add
sbb
fstps
fldenv
mov
aad
cmc
ja
mov
lret
mov
mov
mov
mov
mov
lcall
dec
sub
ja
bound
lcall
xchg
enter
pushf
ja
lret
hlt
clc
outsl
stos
dec
packssdw
push
mov
sub
and
cmp
std
dec
add
fisttpl
fidivs
pop
push
lret
callw
ret
mov
test
test
jg
push
out
mov
cmpsl
cwtl
gs
push
arpl
cmp
loopne
mov
adc
xchg
add
push
movsb
pop
sbb
jp
stos
xchg
ja
mov
das
fimull
mov
sbb
aaa
pusha
dec
in
gs
flds
rorb
mov
inc
stos
xor
loop
sbb
adc
hlt
mov
add
or
mov
cmpsl
fs
mov
jo
and
shl
rclb
pushf
sahf
scas
sbb
cmp
xchg
adc
les
in
cwtl
stc
and
fdivs
push
mov
adc
pop
pop
xor
and
sub
adc
sbb
out
mov
jo
jp
test
xor
jo
scas
enter
xchg
cli
pop
fldenv
mov
or
inc
shrl
js
inc
lds
push
aad
shll
cmp
push
out
adcl
mov
mov
jno
mov
add
call
mov
dec
xlat
sbb
aam
lahf
in
push
or
outsl
and
sbb
insb
out
xlat
sbb
andb
or
xor
add
js
mov
sbb
xchg
pop
sub
sbb
dec
testl
clc
lret
fs
in
btr
jns
inc
pop
daa
pop
sti
or
fwait
daa
push
add
ja
jbe
mov
cmp
xchg
and
scas
sbb
mov
jle
aaa
lahf
mov
inc
loop
jp
lea
or
popf
into
cli
je
add
push
repnz
mov
dec
and
imul
mov
adcl
or
and
lahf
xchg
fcoms
pop
or
push
lea
push
jne
or
in
jnp
cmpsl
add
cmp
mov
jae
in
mov
vmulps
inc
push
stos
imul
add
xchg
fs
jae
or
pop
mov
loop
lods
cmp
js
test
insl
mov
sub
pop
push
arpl
xchg
aam
out
jno
xchg
inc
mov
aam
mov
bound
xor
xor
je
inc
or
les
insb
adc
les
es
int
fsubr
jg
dec
dec
cwtl
push
sbb
mov
pushf
pop
hlt
jg
dec
rclb
jecxz
sub
stos
sbb
cmpsb
push
stos
mov
xchg
cmpsl
sarl
es
sub
in
lds
xor
pusha
pop
xchg
int3
into
stos
pop
cmpl
dec
sub
hlt
pop
pusha
fdivrp
cmp
imul
into
xor
push
xchg
std
xor
push
inc
mov
sbb
lods
rcll
pop
clc
pusha
mov
fistl
mov
jne
push
or
sahf
mov
imul
outsb
sti
xchg
pop
pop
fisttpl
push
mov
shrb
mov
divl
cs
mov
or
jb
jp
roll
mov
and
insl
call
jl
sub
pushf
xchg
push
inc
adc
loop
sbb
sbb
mov
stos
add
lock
movl
in
scas
mov
adc
xor
xchg
fstpt
in
pop
jae
cwtl
push
and
mov
adc
pop
ds
stc
rol
ret
cmp
pop
mov
in
rcr
mov
loope
insb
rcl
addr16
xchg
push
jmp
dec
fimull
sbbl
imul
push
cli
sbb
ja
divb
pop
fsubrl
or
and
jle
rorl
mov
lret
xor
add
insb
pop
in
and
shlb
stos
or
pop
fisubrl
pop
xchg
mov
cld
mov
aas
daa
adc
dec
insb
loopne
cld
sbb
stos
lahf
loopne
xchg
xor
movsb
loope
mov
in
test
lock
dec
sbb
shrl
incb
mov
fisubrl
repnz
rorb
scas
outsl
mov
stos
push
xchg
rorl
dec
pusha
cmpsl
pop
push
xchg
dec
mov
xchg
xor
dec
nop
or
and
imul
sbb
xchg
sti
xchg
js
jg
and
dec
inc
repnz
adc
imul
and
stos
sub
push
jle
neg
iret
fimuls
cmp
cmp
sbb
cmp
in
fcoms
into
shll
fimuls
dec
leave
push
xor
imul
andb
lock
mov
enter
adc
and
xchg
jmp
lret
mov
popf
push
inc
rorb
mov
mov
mov
pop
lea
cli
pop
fs
test
test
popa
call
fbstp
or
insl
out
int
les
mov
mov
ret
add
sub
aaa
bound
xchg
xchg
inc
outsl
mov
mov
insl
loop
adc
push
call
pop
cmp
cmpb
mov
or
shlb
xchg
pop
dec
pop
das
dec
hlt
shll
dec
mov
xchg
movsl
les
test
jbe
cmpsb
push
push
lods
or
cmpl
mov
cltd
inc
pop
jno
and
sbb
fsubp
jns
xor
icebp
aas
subl
cs
jl
mov
movsb
stc
stos
add
mov
and
loop
mov
stos
call
ss
inc
dec
fcomps
inc
arpl
pop
cmp
insl
and
or
frstor
out
mov
fildl
mov
aas
mov
and
add
out
int3
xlat
add
ja
push
lcall
inc
gs
jle
mov
and
lds
hlt
scas
push
add
dec
js
jb
mov
and
sbb
popa
stc
fidivs
int3
or
imul
arpl
int3
pop
xchg
adc
mov
fisubrs
xor
adc
cltd
dec
dec
sub
in
popa
jmp
push
bound
insb
add
cmc
sub
in
dec
cmp
jno
out
les
ret
jne
lahf
mov
xchg
mov
out
das
cmpsl
mov
adc
pop
movsl
lcall
daa
in
fiaddl
in
inc
iret
push
xchg
adc
adc
xor
pop
lds
stos
in
sbb
jae
or
rcrl
mov
stos
fs
adcb
jo
loop
movsl
dec
mov
xor
mov
jle
or
icebp
test
pop
insb
data16
jnp
vpmacsdd
mov
mov
xchg
fisttpll
mov
ss
jl
lods
sbb
adc
mov
test
pop
fs
pusha
mov
cmp
repnz
xchg
inc
xchg
jge
add
sbb
jge
push
mov
mov
or
xchg
cmpsl
and
jl
mov
pop
addr16
dec
jl
loope
push
sarb
cmpsl
dec
gs
jge
test
jne
imull
lret
sub
mov
jnp
dec
dec
cmpsl
xor
andl
dec
mov
jo
popf
into
mov
push
ja
mov
dec
or
addb
call
inc
cmp
mov
cmc
sub
sub
mov
mov
iret
fs
mov
ret
imul
lret
dec
mov
fldcw
push
leave
pop
dec
xchg
or
movsl
push
cs
pushf
jg
mov
mov
loopne
push
adc
push
or
mov
xor
jmp
out
or
bound
loope
in
scas
inc
lea
pop
add
lret
outsl
imul
scas
xchg
dec
sub
jg
imul
ret
ja
sub
loope
jl
inc
pop
inc
xorl
mov
xchg
pop
mov
call
fistpl
cmc
daa
test
mov
stos
outsb
dec
mov
movsl
in
adc
loopne
ljmp
cmp
xchg
mov
pop
fnstsw
mov
stos
xor
jp
fcmovbe
xor
sbb
jmp
dec
pop
in
leave
xchg
out
jl
and
add
dec
cwtl
add
shll
xlat
lret
cmp
lock
iret
inc
in
inc
aam
sub
xchg
fisubs
icebp
jge
adc
dec
repz
mov
sahf
ds
xor
rorl
scas
lret
nop
pop
bound
ss
hlt
cmp
adc
push
add
in
pop
cld
dec
testl
sbb
or
in
inc
sbb
out
out
pop
daa
xorl
xchg
xchg
mov
or
fldt
jmp
xor
rcrb
and
fcoms
sti
xor
lods
add
iret
adc
nop
and
stc
dec
pop
mov
inc
or
mov
insl
mov
jmp
push
or
mov
into
lods
and
adc
xchg
and
stc
pop
out
in
aaa
stos
test
xchg
jmp
loope
dec
insl
xchg
cmp
jl
jns
jp
fdivp
adc
jbe
bound
addr16
cwtl
outsl
rcrl
sub
jns
fcmovb
inc
out
push
add
outsl
and
mul
fdivr
cmc
pop
jg
mov
xchg
inc
fstl
in
int
mov
mov
sub
or
test
add
mov
xchg
jae
fdivl
inc
aad
sub
or
in
in
or
cmpsl
shrl
sbb
mov
out
add
jnp
mov
arpl
mov
sbb
clc
mov
and
addr16
out
sbb
mov
xchg
scas
into
mov
sbb
dec
xor
in
cmp
mov
lea
adc
and
test
adc
mov
push
fadd
dec
xor
repnz
or
scas
inc
mov
jle,pt
mov
inc
jnp
push
sbb
cli
or
mov
jns
push
stos
jne
mov
sub
fimull
clc
xorl
ss
and
int
and
mov
in
stos
sahf
mov
pop
stc
cmp
push
cmp
fstpt
cmp
push
pop
push
xchg
iret
les
sti
loop
cmp
xor
punpckhdq
loope
test
xor
mov
inc
mov
adc
pop
scas
lret
cmp
sbb
push
bound
fdivs
inc
push
pop
mov
hlt
push
sub
mov
mov
daa
sub
mov
mov
or
fldcw
imull
popf
and
mov
push
or
add
or
mull
sbb
bound
sbb
add
xchg
bound
lock
test
fistps
imul
clc
push
fs
xor
ss
jg
fsubrs
pop
out
jmp
sarl
cmpl
push
xor
repnz
cli
sub
clc
xchg
loope
push
test
or
int3
pop
inc
jbe
pop
push
rcll
sbb
fmul
imul
lret
mov
sbb
xor
or
mov
mov
mov
pop
jecxz
mov
in
idivl
mov
inc
mov
sbb
imul
jbe
lea
xorb
fldcw
jb
jnp
into
pop
aaa
mov
push
add
sub
mov
push
cmp
lret
pop
rcrl
andl
xor
dec
fs
dec
jo
push
cmc
jae
adc
iret
in
ss
int
daa
repz
xchg
sub
int3
enter
mov
mov
jne
jecxz
in
push
jmp
mov
sub
jge
lods
incb
mov
adc
pop
mov
pop
sub
fwait
sub
in
hlt
mov
add
inc
or
psrad
mov
popf
cmpsl
xor
push
aam
xchg
mov
loopnew
popf
repz
cltd
add
sbb
jae
mov
or
ss
in
call
inc
mov
pop
sbb
fimull
cld
jmp
loope
es
cwtl
push
jmp
add
into
test
orl
inc
xchg
addr16
icebp
adc
push
mov
mov
or
int3
mov
fmull
enter
fisubs
iret
int
sbb
fsubs
mov
and
cltd
fcmovnbe
sub
fcmove
or
inc
xor
cmp
jecxz
mov
sub
sub
adc
idivl
clc
movsl
movl
inc
lods
mov
add
sbb
cmp
test
out
repnz
pop
outsb
mov
or
dec
stos
outsl
adc
sub
mov
loope
mov
mov
mov
mov
pop
cld
inc
or
call
outsl
pop
pop
sbb
push
mov
js
lock
and
dec
subb
gs
lret
mov
ss
mov
arpl
fists
fldt
ret
pushf
cmp
add
sub
pusha
add
gs
iret
and
xor
mov
aam
xor
adc
vpcmpeqd
das
sub
push
jno
scas
fcom
push
shll
in
rclb
push
mov
jle
in
add
outsb
and
test
mov
stos
pop
repnz
test
test
xchg
mov
push
fcoml
lret
pop
pop
loope
fwait
pusha
outsb
xor
ja
xchg
cli
add
test
and
mov
sub
shrl
lods
leave
dec
fidivrs
loop
sub
add
mov
div
out
add
inc
out
cld
fnstenv
xorb
outsl
xor
daa
ja
sbb
jl
cmc
popf
push
or
gs
ja
mov
data16
bound
imul
test
in
pusha
inc
mov
fnsave
cmpsl
stos
bound
mov
cmp
and
rcll
pop
fildl
jnp
or
cmp
or
clc
mov
mov
imul
mov
cs
hlt
mov
loop
sahf
shll
mov
pushf
fsubr
xchg
mov
cld
and
fsubrs
sar
add
inc
das
gs
jbe
xor
lods
in
xor
ficompl
sarb
jle
mov
or
cmp
xor
cmpl
lods
xchg
lea
fimuls
cmp
mov
or
push
cmp
mov
xchg
gs
sub
mov
ret
scas
mov
cmp
push
es
shrl
mov
cmp
mov
push
movsb
add
dec
sub
push
jmp
push
dec
push
arpl
sbb
adc
adc
cli
add
sub
push
dec
add
int3
stc
xchg
or
sbb
out
push
or
adc
pusha
ss
fmuls
aaa
aam
xorb
fcomp
cltd
insl
xlat
ds
pusha
lods
mov
sub
mov
cwtl
das
lock
test
xor
adc
fchs
dec
sub
pop
or
imul
push
sbb
xor
adc
and
or
and
ret
pop
mov
ror
xlat
xchg
xchg
xchg
popf
dec
push
mov
aad
adc
mov
es
xor
jg
aaa
mov
jns
cmp
and
hlt
xor
pusha
mov
arpl
pop
sub
por
dec
fnsave
mov
vmread
sarl
stos
nop
daa
js
aad
bswap
fistps
into
pop
cmp
sbb
outsb
or
loopne
and
xor
gs
add
and
xchg
inc
xor
xor
pop
lret
gs
push
push
and
or
mov
jno
hlt
push
divb
xlat
jb
ds
sbb
mov
in
into
cmpsb
jbe
inc
and
push
and
arpl
sub
inc
mov
sbb
aad
lret
test
add
mov
in
xchg
sbb
fadds
imull
lahf
push
mov
cmpsl
sbb
bound
andl
fildll
xor
pop
xchg
xchg
mov
adc
or
inc
repz
and
mov
in
in
dec
inc
xchg
ljmp
mov
cld
std
jge
sbb
testl
mov
test
and
stos
mov
mov
icebp
sub
je
sbb
cmp
cld
lea
jge
xchg
mov
popa
and
pushf
lahf
dec
dec
leave
mov
mov
mov
jmp
test
xor
dec
stos
or
or
cmpsl
ja
dec
divl
sub
bound
mov
dec
push
inc
inc
dec
jge
cld
xor
fmull
push
add
cltd
ds
paddd
outsb
daa
addr16
sahf
lcall
lahf
inc
push
inc
pop
fisttps
aam
popf
mov
es
sarl
insb
icebp
stc
mov
jns
mov
push
xchg
into
pushf
xorb
nop
in
xchg
or
lock
bound
jae
xlat
outsb
lahf
push
lcall
in
xor
lods
and
fcomps
cld
inc
mov
test
xchg
cmp
sbb
jb
push
inc
incl
cmc
push
scas
pop
jnp
movsb
int
and
cli
cli
lret
adc
push
outsl
push
psraw
xchg
cmp
sarl
adc
mov
sarl
sbb
lret
push
add
push
test
mov
popa
xchg
sub
sub
mov
sahf
addr16
ljmp
pop
jb
and
cmp
inc
loope
icebp
rclb
insl
jge
xor
popf
sub
mov
aas
mov
push
sub
pop
aam
push
in
mov
lea
mov
push
or
fisttps
lea
lods
lods
in
les
push
mov
ja
xlat
in
bound
cmp
or
popa
in
mov
push
data16
mov
jne
addr16
aas
dec
cltd
cmp
in
loope
cmp
sbb
mov
xchg
pop
add
into
mov
jle
cltd
lea
lock
adc
mov
cli
xor
sbb
sbb
sub
fimuls
ud1
dec
pop
jb
adc
lea
dec
loope
mov
fnstenv
into
adc
cs
pop
mov
push
imul
add
ljmp
jecxz
mov
jnp
ret
mov
repz
repz
clc
ret
mov
sbb
xchg
sub
or
aad
xchg
jp
sub
sbb
dec
cmp
and
push
mov
in
clc
insb
sub
mov
out
cwtl
jbe
inc
jns
push
lcall
or
and
xchg
sub
sahf
jp
cltd
sbb
pop
sub
push
lcall
sbb
lock
aam
add
out
cmp
push
pop
or
stos
fs
leave
or
pop
xor
mov
add
xchg
cmp
icebp
stc
and
mov
mov
ficoms
call
cs
shl
fimull
lds
rcl
mov
push
out
mov
sub
fwait
lea
dec
pop
insl
ret
in
jl
cmpsb
mov
movsl
push
jp
xchg
dec
lret
movsb
mov
insl
insl
mov
or
add
xor
mov
insb
push
lds
pop
scas
rcrb
cltd
xchg
pusha
es
or
push
sbb
aas
jae
sub
xchg
push
pop
ret
mov
je
and
pusha
sub
ja
inc
outsl
loopne
scas
shlb
inc
xchg
and
sbb
and
cld
xorl
stos
mov
lds
icebp
add
adc
push
popf
sbb
and
xchg
jae
mull
bound
mov
loop
add
jnp
pop
aaa
dec
jp
add
push
adc
lahf
push
sbb
ljmp
lods
or
imulb
xor
inc
out
imul
add
adc
stos
lock
adc
or
jbe
add
nop
mov
jae
xchg
mov
ja
addb
lret
in
mov
mov
or
lret
jbe
adc
mov
test
xor
mov
or
cltd
xchg
and
xor
or
rorl
pop
ljmp
push
fsubs
lahf
adc
mov
loop
repz
cli
xor
inc
push
dec
inc
cmpsb
enter
dec
xor
xchg
push
xor
stc
ret
sub
xchg
icebp
pushf
stos
jne
in
jno
in
and
jle
loope
popa
xor
decb
pop
popf
rcrb
cmp
mov
mov
mov
push
push
xor
jb
or
out
subl
mov
pop
push
mov
pop
rorl
cmp
mov
out
jb
imull
dec
or
cmp
adc
jb
les
sbb
mov
or
mov
enter
sbb
icebp
pop
sub
sbb
outsl
mov
xor
push
dec
loope
andb
aam
cmp
adc
or
pop
sti
loopne
lahf
push
mov
imul
inc
jle
jp
xchg
flds
cmp
test
cmpsl
or
or
xor
addr16
fdivrl
iret
outsl
mov
fisubs
sbb
outsb
inc
movsb
imul
orb
out
or
dec
sbb
stos
sbb
pop
pop
cmp
int
sub
pop
lret
mov
xchg
ret
aaa
mov
gs
mov
mov
jle
mov
outsb
dec
daa
cmp
ret
cmpl
mov
repz
cld
push
push
inc
push
pop
lret
xor
push
imul
xchg
fmul
pop
mov
mov
jge
cld
rolb
jmp
scas
test
mov
cmp
das
dec
mov
or
ret
pop
cmpsb
push
test
pop
pop
js
adc
add
dec
mov
aam
fwait
sbb
clc
stc
out
cmp
testb
cmc
fldcw
das
dec
add
sbb
sbb
xlat
loopne
xor
mov
cs
test
add
mov
xchg
add
into
stos
mov
in
xchg
rorb
mov
mov
mov
jns
cmp
jno
outsb
add
mov
adc
add
mov
shrl
xor
loop
pop
rorb
mov
movb
jp
out
std
jp
mov
fsubrp
mov
es
sub
xor
mov
stos
cmp
pop
ds
sub
jae
cmp
xor
and
aaa
pusha
test
pop
adc
inc
mov
adc
sbb
cli
ja
dec
test
in
mov
mov
shrb
pop
cmp
dec
cltd
adc
imul
ds
xor
or
cltd
cli
arpl
pop
adcb
ror
scas
xchg
divb
scas
cli
dec
mov
xchg
adc
xchg
add
or
bound
push
mov
lea
mov
adc
sahf
les
test
adc
xchg
xor
jns
jbe
and
shll
mov
inc
adc
leave
subl
mov
push
loop
pop
out
or
mov
dec
and
jbe
stos
enter
test
lret
iret
push
ficompl
jg
adc
fiaddl
sub
fneni(8087
shl
subl
mov
rcrl
clc
shlb
popf
inc
inc
or
inc
out
pop
cmpsl
jns
lret
and
repz
lods
dec
jle
cwtl
inc
sub
jbe
jmp
addr16
lods
inc
and
rcr
dec
nop
aad
pop
rcll
mov
jge
xchg
call
jmp
mov
ljmp
adc
xor
lock
insb
push
mov
mov
sahf
sub
lahf
adc
loope
in
lahf
pop
negl
insl
push
jo
es
xchg
jnp
mov
push
jl
sbb
pop
pop
outsl
cmp
add
and
mov
adc
call
cmpsl
xor
sub
cmp
test
ret
jns
outsb
or
jmp
xchg
xor
iret
dec
mov
pushf
outsl
jmp
call
push
cmp
jle
mov
dec
lcall
aam
sbb
mov
adc
test
fs
xchg
jecxz
mov
lock
xor
sbb
cmp
inc
pusha
insb
ret
push
fisttpll
adc
add
adc
push
cmpsb
cmpsb
outsl
add
aam
lahf
mov
push
push
adc
push
lock
push
mov
push
mov
aaa
adc
or
inc
or
mov
cmp
repnz
pusha
xchg
jne
pusha
repnz
out
cs
add
ljmp
sbb
in
fwait
test
aad
push
in
push
sahf
sbb
scas
xchg
orl
lods
and
jne
mov
dec
ja
ljmp
jbe
push
bound
jo
test
fst
mov
repnz
shrb
and
mov
mov
jmp
cs
xchg
cmp
mov
lcall
jbe
ret
inc
ret
jnp
in
pop
lods
jle
mov
pop
ret
pop
dec
sub
sbb
push
mov
or
pop
sti
add
cld
scas
dec
push
pop
repz
jge
inc
subb
cmp
adc
mov
ds
in
lahf
stc
mov
xor
mov
jb
pop
xor
inc
mov
ficoms
fs
stos
cltd
stc
lock
lahf
push
mov
daa
repz
dec
pop
mov
xchg
fwait
lret
shr
mov
fsubrs
pop
ss
xor
jecxz
xor
int3
movsl
pop
iret
push
fiadds
sbb
mov
sub
or
leave
hlt
mov
jp
std
into
xchg
popa
insb
imul
mov
mov
repnz
adc
or
push
stos
mov
test
ret
mov
push
sbbl
flds
test
inc
scas
jl
pop
mov
adcb
jge
and
jl
mov
dec
mov
and
xor
bound
int
dec
add
xchg
jl
mov
repnz
pop
out
jmp
mov
or
sub
and
popf
ret
lahf
xchg
cwtl
fst
cwtl
popa
popf
bound
sub
mov
dec
mov
popf
pushf
sbb
pop
adc
mov
pop
fwait
mov
cmp
dec
dec
push
or
lea
pop
adc
mov
dec
sbb
mov
sub
jle
inc
bound
dec
fdiv
popf
mov
ja
popa
arpl
jge
dec
popa
dec
in
or
mov
pop
pop
push
and
or
enter
cmp
xor
out
insb
shll
push
mov
in
lahf
cmp
jbe
fildll
fisubrs
sahf
cmp
js
inc
xorl
add
xor
clc
push
pop
repnz
jae
xchg
pop
pop
das
jl
sbb
int
and
mov
cwtl
pusha
mov
dec
ds
cs
repnz
pop
pop
mov
add
sbb
push
mov
sbb
fs
pusha
jmp
aam
jno
inc
ffreep
mov
enter
jg
mov
push
and
sub
rcrb
mov
or
insl
icebp
incb
sahf
jmp
fs
xchg
std
aam
mov
repnz
mov
pop
outsb
lahf
lahf
aad
or
push
mov
sbb
xchg
imul
jns
lods
cmp
sbb
je
and
in
inc
xchg
xchg
or
insb
pushf
popf
sub
add
movsb
mov
out
jge
lcall
sub
lret
pop
mov
pop
in
jno
ja
mov
sarl
push
cld
sbb
or
push
push
fcmove
cmp
or
fnstcw
call
arpl
je
pop
inc
lods
ret
pop
cs
movsb
or
test
mov
cmpb
adcb
cmp
sub
adc
fdivrs
rcl
inc
xor
js
and
xchg
push
stc
aaa
sbb
int
cmp
shrb
dec
or
stc
adc
dec
cmc
or
mov
mov
mov
pop
ret
loopne
inc
lods
ja
int
sub
jecxz
add
mov
jo
xchg
ret
mov
or
jle
cmpsb
scas
int3
xor
js
mov
dec
scas
xchg
negl
mov
jg
jo
push
aas
iret
mov
sub
mov
mov
mov
jp
mov
dec
js
add
mov
ret
push
jbe
xor
leave
jb
add
pop
cmp
xor
cs
jae
jg
xchg
xor
in
fsts
xorl
mov
lock
add
mov
pop
xchg
rcll
jno
xchg
dec
add
xor
hlt
pusha
js
sahf
cli
pop
inc
test
xchg
pop
and
nop
jmp
adcl
sub
mov
adc
jbe
fs
adc
fistpl
inc
adc
push
popf
mov
mov
pop
clc
xor
out
sti
popf
add
dec
jmp
mov
dec
stos
jo
cltd
pop
mov
push
fisubrl
pusha
xchg
pop
mov
daa
popf
adc
not
shrb
shll
ds
pop
testl
push
popa
arpl
movsl
xchg
das
cs
push
inc
ret
ja
cmc
cmpsb
pop
pop
push
sbb
test
pushf
fwait
mov
fildll
sbb
lahf
shrb
dec
jno
data16
out
add
orl
mov
stc
xchg
outsl
ja
les
jecxz
xchg
add
das
sub
out
pop
sbb
subb
mov
inc
jne
xor
xor
sar
push
dec
push
mov
scas
adc
lret
arpl
call
int3
pextrw
sub
leave
bnd
jecxz
arpl
movsb
mov
es
or
sbbb
jp
loop
jp
jb
clc
call
in
out
dec
add
mov
adc
inc
popf
loope
and
aaa
mov
out
std
sbb
ja
fiaddl
and
mov
js
inc
mov
and
cwtl
mov
sub
pop
dec
repz
gs
out
scas
lcall
fs
mov
aam
push
scas
xlat
in
clc
je
adc
cmp
sub
or
jmp
push
out
xor
imul
aad
testl
inc
adc
dec
mov
mov
arpl
sarb
shlb
xor
movsb
loope
push
insb
xor
mov
ja
mov
call
cmp
fimull
xor
mov
leave
cwtl
pop
and
loop
out
mov
or
out
xchg
test
mov
and
in
and
es
iret
fwait
cli
sbb
pusha
mov
mov
dec
fstpl
jl
inc
pop
repz
sbb
popf
jns
movsl
cmp
aas
or
hlt
adc
xchg
dec
mov
cmc
das
adc
sbb
das
roll
cli
flds
mov
stos
mov
push
or
popa
insl
mov
cmp
das
loope
rol
addr16
hlt
pop
insb
clc
js
popa
dec
mov
sbb
fmull
pop
dec
adc
aad
or
xchg
cmp
cwtl
mov
or
aaa
mov
sqrtps
mov
mov
ret
sub
stos
mov
rcrl
fsubr
nop
push
push
ss
jbe
js
or
bound
shl
add
pusha
mov
push
call
fld1
mov
mov
push
call
jmp
popf
in
xchg
and
xchg
idivl
add
imul
add
sbb
call
jbe
insb
sub
mov
cmp
pop
fidivl
out
test
mov
pop
stos
in
xor
pop
stc
mov
arpl
mov
insb
xlat
xor
inc
mov
mov
adc
cmp
arpl
adc
sub
popa
loope
sahf
rorl
enter
pop
in
ret
mov
leave
es
sbb
cmovl
push
leave
jae
add
sub
ficomps
add
dec
push
aad
mov
mov
cmpsl
cs
cmpsb
push
fyl2x
testl
xor
or
rcrb
jmp
cwtl
pop
rcll
pop
call
sub
inc
ficoml
stos
movsl
push
rcrl
and
mov
inc
mov
mov
scas
dec
mov
adc
roll
jge
in
jge
lahf
or
call
popf
jne
mov
sub
loope
imulb
adc
mov
or
xor
aaa
sub
fcomps
stc
inc
fldcw
mov
aad
loopne
out
into
sbb
pop
xchg
pop
stos
pusha
pusha
pop
pop
icebp
mov
xor
sub
popa
pop
lock
ljmp
mov
movsl
out
sbb
xchg
pop
fnstsw
add
data16
jne
xor
fidivrl
push
xor
dec
imul
sbb
mov
mov
mov
out
push
pop
sub
ret
fcomps
mov
insl
int3
cmp
pop
and
int
arpl
mov
xchg
sub
jecxz
xchg
inc
dec
outsb
jo
adc
cld
ret
sub
pop
or
adc
scas
or
fcoms
jp
pop
mov
xor
dec
mov
jecxz
in
dec
stos
aaa
dec
mov
sbb
or
mov
gs
mov
hlt
stos
inc
adc
jbe
je
mov
xor
dec
loopne
int3
pop
cmc
loopne
dec
push
mov
pusha
push
hlt
ds
cmpb
sti
test
push
pop
push
clc
sbb
pop
inc
dec
sub
cmpl
sti
xchg
sbb
inc
inc
pop
jl
and
stos
dec
dec
in
adc
pop
cs
stos
lcall
lcall
xchg
push
jb,pn
push
imul
lret
jg
fstps
mov
and
mov
dec
test
push
lods
loope
les
loope
mov
xor
mov
andl
mov
cmpl
fmul
jl
aas
pop
gs
les
in
mov
addr16
aas
call
mov
mov
jle
ja
cli
pop
mov
sbb
pop
sbb
sahf
nop
push
sbb
cwtl
xchg
lea
inc
aam
mov
clc
inc
fs
andb
es
fdivrp
xor
xor
xor
arpl
jno
add
jmp
lds
gs
lods
sub
lea
int3
xchg
cli
mov
ret
pop
arpl
jmp
sbb
shr
sti
idivl
repz
sahf
mov
xor
imul
mulps
xchg
xor
clc
xor
ret
enter
jge
scas
pop
xlat
mov
adc
pusha
pop
cmp
mov
mov
or
adc
mov
test
xor
pop
in
pop
or
sar
or
dec
cmc
sub
mov
jae
int3
add
xchg
mov
or
lcall
ret
dec
into
xchg
ret
ret
insb
jb
or
stos
mov
push
pop
popf
lret
bound
stos
ffree
mov
pop
nop
ja
roll
lcall
mov
xchg
sbb
xchg
addr16
push
out
lods
cmc
push
into
push
addl
insl
xor
lahf
adc
inc
lahf
jge
sub
pop
mov
dec
leave
push
xchg
xchg
and
jnp
out
es
scas
cmc
and
xchg
adc
and
fmull
sbbl
xchg
push
sub
push
ljmp
je
movl
and
lea
ret
sbb
jb
in
imul
test
cmp
sbb
in
loopne
mov
je
dec
pop
mov
mov
arpl
xchg
add
xor
aam
push
cmpsl
jecxz
sub
mov
lock
insb
stc
movsl
lahf
inc
cs
ja
fucomp
ror
pop
cmp
inc
lock
mov
lret
cltd
adc
aaa
sbb
repnz
inc
pop
roll
cmpsl
or
aad
mov
scas
imul
pop
imul
call
xchg
cmp
gs
add
cmpb
mov
xchg
rclb
sub
jg
cmp
inc
push
sub
push
mov
fmul
xchg
cli
popa
cli
push
jg
cmp
dec
jno
add
enter
jo
stc
xchg
lock
add
mov
adcl
mov
or
inc
daa
adc
andb
mov
adc
jbe
std
adc
cmp
xor
test
xchg
cmp
mov
dec
pop
data16
sub
jae
sbb
sbb
sub
stos
gs
in
mov
and
mov
fldl
mov
inc
mov
jno
insb
adc
add
pop
inc
mulb
ret
cli
ret
test
cmp
imul
ss
shl
add
fs
push
sbb
pusha
and
pop
mov
cmc
andb
ret
push
jne
dec
cmpsb
add
adc
les
cltd
xchg
adcl
les
xor
push
jge
or
ret
stc
jmp
ljmp
and
enter
dec
lret
mov
aad
out
loop
subb
xor
push
daa
sub
push
xor
push
jns
arpl
jge
mov
fwait
mov
mov
pop
enter
push
mulb
mov
lock
xor
and
test
scas
shll
iret
repnz
mov
pop
sub
inc
gs
mov
mov
test
jecxz
xchg
test
jns
dec
jg
xchg
popa
lahf
imul
pop
mov
xor
cwtl
sahf
inc
leave
je
cltd
gs
dec
jo
add
or
cmp
xor
jmp
adc
and
adc
pop
out
mov
inc
scas
ss
ror
inc
ret
adc
scas
shll
cmp
inc
sub
jbe
jae
add
pop
mov
dec
jb
adc
pop
add
pop
xor
sub
or
clc
and
sub
inc
and
lret
bound
ja
scas
shr
and
mov
jbe
nop
jbe
mov
pop
jb
inc
loopne
mov
xor
aad
loop
stos
push
mov
dec
pop
jmp
push
add
subl
lret
stos
xor
xor
xchg
jae
mov
mov
aaa
mov
mov
rcr
xchg
lods
pop
out
mov
mov
loopne
repz
pop
mull
adc
fwait
repz
loop
push
imul
sahf
clc
imul
roll
sbb
ljmp
inc
inc
cmp
andl
dec
jp
rcrb
pop
test
movsl
xor
or
push
push
adc
mov
call
inc
ror
adc
scas
pop
inc
dec
mov
add
inc
dec
jne
mov
test
aam
sub
iret
or
scas
out
and
cmp
add
shlb
ffreep
lcall
in
in
jns
add
xor
pop
loope
mov
sbb
or
or
testb
movb
cli
cmp
add
std
xchg
mov
imul
mov
cmp
cli
jo
mov
jo
sbb
or
loopne
sbb
ds
dec
and
push
jle
mov
mov
push
aad
fmull
sub
movsb
cmc
mov
mov
mov
add
enter
pop
push
push
fwait
mov
cmp
mov
cmp
lods
jge
out
xor
sbb
xchg
mov
orl
xor
xor
and
int
cmp
cmpsb
ret
mov
jge
push
jmp
flds
out
lds
cmpsl
mov
pop
push
xor
and
or
or
pop
js
sub
ror
inc
outsl
rorl
outsb
jp
pop
adc
push
mov
pop
or
pop
jge
mov
call
xchg
xchg
jb
ljmp
xchg
nop
or
jno
pop
popa
and
imul
icebp
jnp
jge
repz
xor
outsb
stos
insl
push
xchg
dec
aaa
jle
jb
and
or
mov
mov
fadds
push
sub
jp
pushf
fadd
test
outsb
rcrb
fwait
test
fcompl
dec
das
add
popa
fnsave
popa
int
int
push
inc
inc
mov
pop
xor
xchg
jle
dec
stos
sub
adc
pop
jl
movsl
jne
pop
daa
or
outsl
aam
sbb
jg
sub
subl
or
and
lret
out
sti
sahf
fcmove
stos
cmp
pusha
push
ret
sbb
or
pop
or
mov
push
xor
pop
test
cld
fisubrl
cwtl
ds
loopne
test
mov
mov
adc
xor
pop
fisubs
fldl
sbb
sbb
add
xor
fwait
mov
lds
dec
mov
xchg
add
in
jl
cmp
sbbl
push
fisubrl
dec
into
fwait
xchg
dec
cltd
pop
sbb
push
xor
fwait
push
push
pop
rorb
in
aad
scas
ffree
fistps
daa
fsubrl
jg
push
mov
xor
addl
cmp
push
or
sub
xchg
mov
sbbb
push
cmp
rcl
in
mov
mov
xchg
jge
repz
pop
sbb
jg
adc
imul
fdivr
pop
cs
test
push
jmp
cmc
pop
dec
hlt
pop
aaa
mov
clc
xchg
add
push
jle
out
fnstsw
sub
ljmp
xor
data16
and
xor
mov
inc
adc
xchg
in
je
in
adc
lock
nop
fdiv
les
adc
mov
sbb
ds
jb
int3
or
imul
negl
aas
cmp
jb
jg
enter
and
fistpl
and
rolb
pop
xor
inc
fnstsw
scas
hlt
mov
mov
push
loop
or
enter
pop
sbb
sahf
idivl
cwtl
fucomi
xchg
jmp
and
add
aad
fimuls
cmp
mov
pop
ret
xchg
int
pop
lods
jnp
ljmp
inc
adc
call
lds
and
xor
sar
movsb
xor
xchg
fists
or
movl
sbb
add
in
nop
popf
rcll
in
inc
jo
mov
xchg
les
sub
mov
adc
cli
imul
mov
or
dec
cli
in
cwtl
jbe
push
inc
sarl
iret
pusha
ret
lea
dec
popf
cmp
push
dec
out
inc
imul
dec
sbb
dec
sub
hlt
aam
dec
rcll
push
mov
add
mov
ret
dec
andb
lods
mov
mov
mov
cld
adc
sub
cmp
and
mov
shll
hlt
adc
aas
into
or
cmp
lods
pop
cmp
mov
in
jno
adc
les
inc
cmp
pop
fisttpll
xor
imul
jl
aas
cmp
mov
subb
js
arpl
fldt
mov
int
jmp
call
and
iret
iret
fstpl
xchg
adc
push
mov
push
sarl
inc
jns
jb
jg
push
mov
mov
es
push
lock
xchg
adc
xor
jno
pop
inc
loopne
out
xchg
les
in
aaa
sbb
andb
or
shlb
cmpxchg
sahf
inc
mov
data16
and
lods
xor
xor
shll
sti
pop
and
fmuls
imul
test
adc
aas
lods
xor
fcoms
lods
pop
sarb
cmp
nop
xchg
cmp
sbb
or
push
cmp
or
test
pop
ret
mov
das
adc
add
pop
loopne
popf
jae
shrb
rcl
movsb
cmp
sub
push
lods
pop
lock
push
test
or
lahf
hlt
mov
mov
pop
lcall
imull
insl
scas
mov
xchg
cmp
or
mov
cmp
adc
or
mov
sub
dec
add
ja
cmp
fnstsw
mov
test
test
mov
in
xchg
jo
pop
or
popf
cld
jnp
orl
adc
xchg
add
sti
loopne
stos
data16
mov
cmpsb
mov
jae
std
lcall
fstp
sbb
call
mov
xchg
insb
mov
add
pop
jl
test
mov
mov
fstpl
and
mov
xchg
push
fldl
sub
mov
adc
std
mov
sub
dec
shlb
mov
mov
add
lods
and
aas
inc
cmp
xchg
dec
mov
movsb
jno
and
jp
int3
in
aad
insb
jb
sbb
sti
nop
and
adc
sub
js
mov
cs
es
adc
daa
xlat
fwait
jmp
push
mov
movsl
mov
cmp
cli
lret
push
in
data16
adc
popa
mov
inc
mov
out
mov
gs
fdivr
jge
or
mov
push
jl
cmpsl
out
inc
movsb
sbb
ret
repnz
add
adc
push
push
aas
enter
dec
or
clc
pop
ret
dec
shrl
jge
rorb
push
call
lahf
mov
movsb
iret
and
ljmp
push
sbb
sub
or
xchg
mov
xchg
unpcklps
push
mov
scas
xor
mov
inc
or
lret
xor
cmpsw
cmp
sub
mov
sub
xchg
fwait
pop
pop
add
ret
movsl
add
jl
dec
inc
iret
push
add
mov
jb
mov
and
push
cmp
out
xchg
lods
scas
jl
lea
inc
pop
test
xor
lds
stos
mov
nop
cmpb
jecxz
add
and
mov
push
and
fcmovne
popa
sbb
xor
xor
mov
loop
dec
or
pop
mov
add
cmpsb
loopne
push
push
iret
dec
mov
rorl
add
dec
hlt
mov
stos
mov
dec
setb
sbb
and
pop
outsb
lds
out
jmp
mov
mov
jle
add
pushl
pop
loope
rorb
bound
daa
xchg
or
ljmp
aam
xchg
pop
cli
ljmp
pop
outsl
sbb
sbb
out
shlb
sbb
pop
or
add
aad
mov
adc
rclb
dec
scas
jp
aam
or
pusha
xchg
je
cmp
imul
sti
xorl
sahf
jnp
push
inc
jbe
jb
xor
hlt
push
inc
mov
idiv
bound
ljmp
rorl
insb
or
and
or
fcom
imul
mov
add
test
addr16
add
test
les
cmp
cmp
jns
pop
jmp
or
sbb
mov
and
push
mov
stc
dec
inc
das
movsl
fldl
in
mov
jmp
fs
adc
mov
mov
into
push
insl
ret
notb
xchg
push
adc
scas
shl
loopne
adc
xchg
mov
in
pop
out
mov
outsb
lret
leave
movd
in
pusha
cmp
ret
sbb
stc
sahf
mov
aas
lahf
rorl
jbe
mov
cli
jle
mov
outsl
stos
add
cwtl
push
mov
daa
rcll
add
loop
mov
iret
jnp
daa
sti
lcall
push
mov
call
das
inc
push
push
repnz
sbb
and
in
push
xor
mov
inc
inc
add
test
sub
lock
mov
push
pop
xchg
cmp
push
jle
fsubs
jp
push
loopne
adc
xor
cmp
xchg
sbb
push
add
xor
cmpsb
outsl
pop
xchg
push
jae
bound
stc
push
negl
daa
notl
scas
inc
std
xchg
sarb
das
js
pop
test
dec
or
jae
push
dec
and
clc
mov
and
push
ret
imul
push
inc
pop
push
mov
mov
mov
mov
adc
shrl
mov
xor
movsl
scas
or
jmp
fildl
mov
inc
dec
dec
jg
pop
push
push
and
in
xchg
dec
xor
sbb
in
xor
mov
add
lods
push
testb
rcr
mov
aam
cwtl
mov
adc
cmp
pop
sbb
jo
fidivrs
dec
pop
jb
jns
or
nop
aam
lret
or
inc
shlb
cmp
sbb
shrl
dec
mov
pop
dec
fmul
pop
pop
ds
sti
sub
pop
and
xor
mov
dec
imul
into
ret
jle
into
loope
cmp
sub
addr16
xchg
bound
inc
xor
ljmp
lods
jae
sub
bswap
pop
jno
test
shlb
test
adc
jns
and
enter
cmp
cwtl
pop
in
inc
sub
movsb
subb
aas
pop
fsubr
jae
es
jno
test
loope
adc
or
paddd
lret
pop
add
cwtl
adc
cmp
inc
dec
dec
cmp
orps
test
add
mov
and
faddl
les
mov
inc
mov
mov
popl
in
adc
insl
cmp
test
sbb
pop
jmp
rorb
jp
rcrb
fsubrp
or
shlb
or
adc
pop
loope
mov
cwtl
jbe
mov
sbbl
jle
xor
pop
stos
jcxz
mov
addr16
into
fwait
and
stos
in
cmpsl
inc
mov
push
bound
inc
xchg
sub
fisubl
inc
mov
lea
scas
imul
dec
jns
xor
aaa
mov
cwtl
sbb
xchg
jg
test
in
cmp
lods
idiv
fs
mov
sahf
mov
xor
mov
fwait
and
push
andb
icebp
cld
inc
int3
inc
es
jnp
cltd
sti
sub
push
inc
cmp
psubsb
sub
xchg
out
jmp
jnp
push
mov
shll
ss
sbb
into
inc
inc
pop
mov
jl
aad
add
xchg
add
mov
dec
jl
movsb
int
aas
ret
cli
xchg
test
jb
mov
sub
adc
shrb
sar
rcrl
lods
test
in
int3
insl
mov
call
test
pop
gs
xchg
sarb
in
ds
cmc
out
bound
subl
and
pop
sub
sub
or
xlat
sbbl
add
loope
sub
pop
stos
out
mov
sbb
cmc
jg
jns
dec
and
inc
xor
ficomps
decb
pop
stos
xor
enter
add
cmpsl
mov
adc
loope
jno
adc
jno
les
and
inc
testb
xchg
sti
scas
aad
sbb
mov
ja
mov
fcoms
mov
into
testl
jns
test
cmpsl
outsl
cwtl
cmp
xor
hlt
leave
xor
scas
adc
ret
inc
xor
popl
out
lret
pop
mov
jmp
jae
mov
aas
jecxz
decl
push
arpl
repnz
sub
test
pop
dec
negb
cmc
mov
cmp
add
adc
loopne
les
mov
mov
lcall
pop
sahf
subl
repnz
or
loop
in
stc
adc
or
pop
cltd
inc
addr16
sbb
cmp
out
in
jae
orl
pushf
mov
and
pop
call
fs
xchg
daa
ja
xchg
stos
or
ja
loop
push
xlat
xchg
fucom
shl
lds
int
jae
jnp
repnz
stos
ss
xchg
gs
cs
dec
test
fs
rcr
push
insb
cmpl
add
mov
jecxz
mov
xor
or
notb
pop
mov
enter
clc
mov
mov
movsl
sub
ds
and
jne
jo
std
adc
out
dec
hlt
xchg
icebp
shll
sbb
inc
pop
insl
mov
mov
jo
mov
dec
jge
adc
mov
popf
aad
cmp
lcall
cmp
mov
and
push
lock
xor
jns
push
sub
xchg
sbbb
inc
jle
shrb
lock
sbb
sub
or
divb
mov
mov
mov
jae
dec
jle
mov
mov
roll
add
int
cmpsl
mov
xchg
stos
adc
outsb
ds
imul
repz
cs
in
inc
xor
test
ss
jb,pt
lahf
test
mov
inc
lds
stc
in
adc
scas
sub
js
push
clc
xchg
pop
nop
or
mov
mov
jg
push
adc
das
sbb
xor
jmp
cmp
insb
push
das
xchg
aas
mov
cmp
or
testb
and
test
in
rclb
cmp
dec
lret
es
sub
dec
mov
imul
xchg
movsb
xor
cwtl
pop
mov
cmc
enter
test
cmp
xchg
scas
das
push
sbb
or
into
mov
adc
sub
jle
jge
aas
push
xor
add
hlt
cmpsb
pop
pop
test
movsl
mov
cmpsl
xchg
iret
in
fldl
jb
ds
add
in
mov
rolb
pusha
aaa
xor
ror
pop
fiaddl
add
lret
jp
push
xchg
xor
fldcw
xor
sbb
jbe
loop
bound
jo
ja
inc
add
lret
and
sbb
gs
add
nop
shlb
fistpll
inc
mov
cmpsb
xor
sub
pusha
inc
sub
stc
adc
sti
in
add
pop
rcrl
sub
xchg
cmpsl
add
xor
mov
add
out
in
imul
push
imul
xchg
ss
cmp
sbb
jecxz
pusha
sub
repz
int3
dec
sub
xchg
dec
inc
out
lods
xchg
add
jp
icebp
sbbl
xchg
mov
xor
add
mov
pop
push
sahf
add
jge
aas
incb
mov
out
and
push
mov
push
lods
insb
leave
das
xor
sbb
cmpsl
js
test
outsl
mov
ret
inc
decl
arpl
mov
iret
inc
cmpsl
std
data16
adc
cmp
add
sti
mov
repnz
adc
mov
in
addr16
cmp
jb
sahf
fwait
out
mov
shrl
inc
add
mov
fwait
dec
mov
arpl
lahf
and
and
jns
add
fsubrl
imul
out
mov
mov
jne
out
icebp
loope
cld
mov
test
es
test
cmpsl
mov
jb
inc
xchg
repz
jecxz
push
out
les
out
test
pop
cmp
jle
sbb
and
or
imul
cltd
inc
sub
dec
rorb
adcb
sub
inc
sti
vpaddusb
insb
loopne
and
push
lds
fsubrs
jns
into
push
add
add
je
push
inc
jno
ss
stos
shl
adc
jg
xchg
inc
or
jmp
jl
xor
add
mov
dec
outsl
jne
add
fmuls
mov
fcomi
sahf
lret
add
xchg
sub
mov
sbb
sti
xchg
cltd
movb
icebp
sub
cmpb
sub
out
shrl
push
or
in
push
xor
mov
std
loopne
or
out
jne
mov
mov
popa
inc
iret
cmp
xlat
mov
push
je
push
add
filds
or
ret
cltd
outsb
xorl
ljmp
jmp
int
jl
sub
adc
shl
push
mov
inc
mov
insl
popa
cmp
imul
icebp
push
int
repnz
add
pushf
cmp
cmp
xchg
sbb
sub
mov
out
jp
pop
add
outsl
pushf
ljmp
mov
ds
dec
in
mov
jnp
test
push
push
pop
jo
mov
pop
out
pop
lret
mov
mov
add
fbld
xor
aas
mov
mov
clc
xor
call
adc
sbbb
in
rorb
idivl
xor
and
xchg
int
xchg
stos
sbb
mov
out
lods
inc
mov
das
cmp
sub
repz
icebp
adcb
les
adc
insl
test
sbb
pop
clc
sub
fmuls
mov
xchg
dec
dec
inc
jne
cmp
test
xchg
flds
xchg
outsb
es
imul
outsb
push
rorb
cwtl
pop
xchg
ja
rcrb
lahf
sahf
fidivrs
sti
jg
mov
or
imul
int3
mul
cld
ja
into
imul
aam
addl
aaa
les
notb
test
repz
jo
sbb
loope
call
and
inc
sarb
call
pop
xchg
out
mov
mov
pusha
adc
push
imul
lods
es
dec
push
pop
xchg
adc
ret
shlb
push
sbb
fisubl
ret
in
es
icebp
repnz
je
sub
in
pop
inc
test
and
add
lret
popf
push
pop
mov
jno
sarb
xchg
or
aam
jge
jno
adc
push
mov
test
repnz
jb
sub
cmpsl
jmp
push
mov
and
movaps
mov
lret
sbb
dec
rorl
jnp
push
jg
mov
adc
add
jno
aam
repnz
addr16
ret
repz
lods
mov
jp
in
cli
cltd
mov
lcall
aaa
std
xlat
adcb
cli
jo
in
add
jno
push
cmp
sub
mov
push
lods
push
mov
shrl
xchg
or
popf
das
icebp
leave
mov
mov
jmp
push
mov
flds
cmp
push
xchg
lds
push
mov
testl
sbb
lret
lods
aam
shl
add
mov
scas
into
stc
enter
xchg
fcoml
in
in
je,pt
repz
dec
stc
push
mov
mov
pop
test
push
cmpsb
jb
loope
popa
or
adc
sbb
cwtl
arpl
and
mov
mov
shll
add
jmp
shll
or
adc
add
jle
sarl
sub
fnstcw
lds
fistl
cmpsl
push
xchg
shl
pop
sub
aad
inc
scas
call
in
inc
sahf
repnz
lods
iret
pop
sub
mov
dec
xchg
mov
jmp
leave
add
mov
mulb
insb
mov
pop
mull
jo
enterw
pop
inc
jecxz
jne
imul
aaa
and
arpl
shlb
popa
testb
xchg
and
lock
mov
imul
push
cmpsb
jno
inc
dec
mov
mov
test
pop
pop
out
add
adc
sbb
sti
inc
test
add
in
repnz
push
clc
pop
icebp
push
mov
xor
sub
and
mov
cmpsb
dec
cmp
mov
in
fld
inc
mov
push
mov
lock
cld
test
push
fwait
jmp
popf
mov
push
push
orl
add
stc
mov
xlat
subl
mov
jmp
sbb
sahf
mov
lret
cmp
dec
xlat
and
fsubp
enter
pusha
wbinvd
test
movsb
pop
fcmovb
aad
mov
cmp
hlt
cmp
imul
pop
push
adc
pop
out
and
push
outsl
arpl
xchg
repz
inc
lcall
mov
loopnew
dec
ljmp
jnp
push
dec
push
das
fistl
mov
xchg
add
mov
sub
scas
sub
xor
and
mov
mov
jae
and
mov
sub
js
test
or
punpcklbw
mov
cs
dec
push
lret
push
pop
test
push
dec
push
xchg
lods
mov
mov
jne
jmp
sti
sbb
cmp
filds
pavgb
or
xor
sbb
fisttpll
aaa
push
push
and
loope
scas
adcl
subb
test
out
pop
mov
mov
pop
sti
cmp
mov
mov
mov
int
dec
mov
dec
das
push
adc
xor
cmp
arpl
fisubl
std
jo
sub
cmp
loopne
and
into
add
sub
lcall
lods
into
test
adc
inc
outsb
imul
cmp
mov
dec
lcall
pop
and
jl
int
vandps
inc
insb
loope
stos
scas
nop
push
inc
test
in
sbb
loopne
daa
ja
jl
push
aam
pop
sub
cmp
pop
dec
mov
inc
xorl
lcall
call
jecxz
sub
lea
and
test
cmp
adc
insb
mov
push
pushf
fisubrs
enter
lcall
cmp
lds
mov
cmpsb
push
andl
arpl
dec
bound
add
jne
and
push
mov
fists
je
cmc
iret
mov
dec
shll
pop
aas
mov
mulb
inc
in
lret
cmpb
or
mov
mov
icebp
das
loope
jmp
pop
dec
std
inc
add
cli
andl
mov
add
ja
cs
shlb
movsb
push
inc
dec
es
inc
mov
dec
adc
dec
jns
xor
sarb
xor
push
jns
xchg
mov
inc
inc
cli
and
xchg
stos
stos
xchg
xor
jb
mov
test
and
dec
cltd
jbe
es
cltd
stc
movsb
pop
xchg
hlt
cld
pushl
sbb
lret
jmp
out
add
adc
pop
push
jmp
xchg
lret
ret
leave
jmp
cmp
adc
mov
shl
jmp
lahf
ret
or
jae
xor
jo
xchg
sub
loop
fcomps
jle
das
mov
mov
jns
rcrb
adc
das
dec
mov
mov
cmpsb
xchg
xchg
stc
mov
out
pop
push
dec
int
leave
mov
xchg
and
push
shr
mov
fisubrl
xchg
mov
inc
pop
les
jnp
leave
mov
cmp
push
and
into
aam
test
ss
adc
jbe
dec
mov
and
femms
repnz
mov
rol
inc
add
mov
jmp
or
inc
rcrl
jg
arpl
loope
outsl
gs
dec
fwait
pop
sbb
shrl
mov
xchg
mov
push
jmp
push
push
push
and
jecxz
arpl
pop
mov
cmpsl
xchg
dec
shl
fstpt
lar
add
out
pushf
pop
popf
rorb
or
scas
repz
push
pop
dec
out
or
clc
mov
cmpsl
in
es
clc
add
ljmp
or
inc
add
gs
xchg
cwtl
inc
push
in
outsl
xchg
fiadds
add
test
mov
mov
cmp
into
and
insl
cld
inc
add
pusha
popf
sub
ret
in
jecxz
and
ljmp
sub
mul
cli
mov
sbb
pop
sbb
inc
negl
pop
call
cwtl
dec
fucomip
mov
aad
cmp
push
loope
lret
pop
cmc
xor
sbb
inc
leave
or
into
dec
adc
xor
pop
xchg
int3
jb
lea
leave
cmpb
xor
pop
inc
leave
mov
and
in
or
ljmp
jmp
rol
lahf
adcl
add
xlat
jb
jg
adc
xor
lock
aam
fsub
mov
movsb
dec
popa
push
push
mov
roll
dec
and
int3
enter
jne
test
outsb
out
sbb
push
jne
in
in
iret
jae
jge
lods
daa
jg
int
push
inc
js
cmp
xchg
call
iret
js
add
add
add
or
push
sub
xchg
xchg
mov
pop
mov
divb
aas
leave
stos
mov
jmp
sahf
or
out
sub
movsb
mov
cmp
shll
cwtl
jmp
lcall
fstpl
int3
jbe
into
jbe
fmuls
add
rcll
jg
cmc
mov
xchg
push
lds
inc
in
jnp
movsb
repnz
test
loop
mov
fwait
ja
leave
jmp
pop
mov
lods
sub
xor
in
pushf
mov
cmp
sbb
in
gs
lock
mov
inc
pop
test
sub
sbb
out
xchg
ljmp
aad
icebp
movl
ret
mov
pop
sbb
xor
daa
aad
fmuls
rep
outsb
push
movsb
sarb
psrld
lret
fistl
das
dec
xchg
int3
add
loope
lds
nop
and
ss
das
movsb
rolb
mov
xchg
add
mov
shlb
scas
mov
or
repz
or
mov
xchg
push
sbb
cmpsl
mov
pop
test
jecxz
fs
mov
push
and
adc
aas
sub
xchg
test
mov
mov
pop
mov
cmp
push
jns
ja
or
ds
dec
mov
xchg
pop
push
dec
pop
int
fcmovu
scas
inc
xchg
or
xor
jge
inc
push
mov
popa
jae
add
and
inc
nop
inc
sub
sti
jg
adc
mov
mov
test
lea
sbb
mov
jmp
cmp
mov
jae
shll
popf
insb
in
jmp
rcrl
sbb
shll
mov
mov
movsb
icebp
jp
test
xor
push
loopne
es
push
or
les
xor
pop
xor
and
test
icebp
pop
jle
add
push
ja
mov
mov
pop
pop
push
imul
cmpb
orl
cmp
call
cs
adc
ss
popa
ss
sbbb
ror
mov
pop
mov
test
dec
pop
lcall
sbb
pop
rolb
pop
jnp
xchg
stc
in
stc
testb
xor
leave
cmp
jge
push
xor
mov
pop
cmp
mov
dec
sub
fidivl
pop
mov
lahf
jmp
jecxz
mov
xor
lret
dec
push
dec
push
mov
stos
jecxz
xor
in
push
mov
sbb
call
ffreep
fimuls
js
fmull
and
orl
cmp
loope
push
dec
nop
in
push
aad
dec
stos
adc
add
jecxz
test
popf
push
inc
fldenv
pop
dec
mov
fcmovnb
pop
mov
mov
roll
ja
mov
mov
out
mov
add
popa
cli
lods
mov
sub
xchg
push
mov
cwtl
adc
mov
jnp
xor
dec
imulb
jbe
mov
mov
call
pop
adc
sbb
int3
sub
lods
and
loope
dec
jne
or
fwait
mov
icebp
push
mov
sbb
testl
movsl
and
inc
ss
gs
lock
cmp
les
adc
imul
dec
push
cmp
fwait
mov
dec
jp
or
and
test
stos
shrl
std
jecxz
xchg
push
out
or
ret
test
inc
cmp
popf
sbb
pop
nop
out
fcoml
sub
and
xchg
lcall
idivb
enter
adc
orb
mov
out
mov
das
test
sbb
push
mov
xchg
call
dec
push
test
sbb
aaa
into
xchg
mov
pop
arpl
cmp
dec
jge
imul
mov
js
fwait
insb
fcomi
cmpsb
scas
sti
jecxz
outsb
mov
cld
and
lds
fcmovb
je
lret
cli
das
sti
pop
pop
notb
mov
shl
enter
mov
cli
xorb
or
and
xor
push
arpl
dec
ret
pop
mov
sbb
inc
bound
repnz
ret
data16
sbb
test
lfs
sarl
test
insb
das
mov
inc
dec
push
hlt
mov
or
in
xor
scas
mov
inc
popf
faddl
vmaxss
jmp
jge
mov
or
cld
movsl
cld
and
insl
scas
mov
aas
leave
pop
xor
out
jp
stos
mov
es
leave
shll
nop
movl
repnz
leave
sub
sub
shl
les
jno
mov
ljmp
xchg
jl
jp
xchg
cmpsb
inc
fwait
mov
inc
in
sti
xlat
pushf
jg
cld
cmp
mov
or
sti
or
dec
aas
outsl
pusha
aas
shlb
int3
loop
daa
mov
push
push
mov
cmpsb
and
pop
xchg
aaa
das
or
inc
xchg
and
inc
adc
or
dec
loope
das
imul
dec
daa
movsl
test
adc
test
stos
wbinvd
aas
stos
mov
inc
repz
sub
icebp
loop
mov
jecxz
adc
jge
lcall
rcrb
sub
addr16
mov
sub
mov
and
mov
xor
popf
or
data16
mov
cmpsl
lahf
or
pop
sti
movsl
icebp
push
mov
dec
fsubrl
iret
pusha
pop
dec
xor
pop
pop
sahf
fbstp
outsb
xor
int3
pop
pop
lock
movsb
sbb
sbb
adc
js
mov
push
mov
cld
int3
mov
lock
les
sbb
push
cmp
das
test
mov
enter
in
add
out
lds
jnp
dec
cmpsl
sti
push
mov
mov
jmp
repz
adcb
mov
rcrb
ljmp
push
push
lds
lock
push
movb
pop
insl
jbe
ss
jno
mov
hlt
add
and
push
bound
lods
mov
push
add
rcll
gs
fidivl
pop
rclb
cmp
insl
loop
adc
idivl
inc
sahf
iret
mov
push
cmp
jg
ret
nop
fcomip
ljmp
cltd
cmpb
bound
mov
js
pop
dec
cmpb
or
neg
mov
and
bound
or
dec
or
xchg
or
fsubr
push
mov
test
scas
faddl
and
movsl
mov
and
ret
fwait
dec
ljmp
clc
mov
cmp
dec
dec
dec
scas
test
adc
inc
cmpsl
xchg
fisubl
aad
out
int3
mov
xchg
cmp
fidivrl
jle
push
jl
xchg
lret
mov
in
cwtl
into
sahf
mov
mov
fbstp
mul
adc
mov
dec
push
lock
lret
rolb
add
jge
push
lcall
push
popa
xchg
aad
aas
push
rorl
inc
push
or
jl
mov
add
push
sub
stc
nop
clc
enter
fbstp
ror
out
push
pop
cmp
mov
add
sarb
js
jg
bound
add
test
dec
lret
or
dec
test
jns
les
dec
rcr
inc
adc
outsb
loopne
lock
xchg
mov
sub
daa
pop
fmul
fdivs
inc
sbb
mov
adc
or
sub
jne
or
inc
arpl
bound
sub
jle
repz
pop
xor
mov
sbb
mov
gs
cmp
cmp
cmp
and
mov
adc
xor
cwtl
pushf
pop
popf
jns
sub
stc
rcll
jl
push
int
jecxz
and
outsl
repnz
xchg
adc
xchg
or
jmp
ret
popa
and
call
ljmp
and
ret
pop
sbb
out
lea
ja
sbb
dec
loope
push
popf
idivl
sub
pop
push
mov
xlat
or
les
xchg
cwtl
cmpsb
notb
dec
dec
test
mov
dec
xor
outsb
jle
jge
mov
mov
test
and
push
cs
push
into
dec
mov
xor
inc
pop
dec
shlb
sbb
addr16
lret
mov
scas
fisubs
lock
into
adc
scas
scas
mov
or
mov
rol
push
mov
push
cmp
push
and
lods
icebp
std
mov
dec
cwtl
mov
mov
fisttpll
or
sbb
jp
mov
fucom
pop
lahf
jb
mov
push
jne
outsl
hlt
insl
popf
mov
or
js
pop
pop
dec
mov
push
mov
int
push
loope
iret
or
sbb
mov
stc
dec
xchg
in
mov
int3
sbb
jne
or
sub
sbb
in
sarl
adcb
mov
cmc
jns
push
push
add
jno
out
lcall
movsl
sbb
push
lcall
cmpb
and
int3
inc
xor
clc
xchg
dec
popf
out
sbb
outsl
cwtl
pop
repnz
shr
sub
xlat
jg,pn
shrl
addr16
out
das
cmpsb
xchg
or
jo
mov
nop
push
rcll
mov
loope
jle
addb
mov
mov
pusha
jb
jle
movsb
push
out
xchg
leave
sub
xor
sbb
jecxz
mov
insb
clc
lcall
jnp
and
stos
mov
cmpsb
mov
mov
adc
and
or
bound
and
xor
jnp
out
sbb
ret
jp
push
jecxz
out
lods
loopne
xchg
adcb
ljmp
ljmp
mov
bound
xor
es
fcomps
addr16
sahf
push
jmp
icebp
or
inc
cmp
aad
stos
movsl
mov
test
jge
in
pop
and
jl
add
mov
into
jge
rorb
enter
popa
xor
mov
sbb
fnstenv
mov
lcall
jbe
push
je
sbb
or
aaa
pop
mov
add
cli
fwait
jo
adc
sub
ret
pop
push
add
ret
cmpsb
mov
out
mov
pop
movsl
or
lods
mov
js,pt
mov
in
ss
mov
mov
mov
pusha
popa
clc
movsb
call
adc
outsb
xor
mov
mov
mov
ficompl
stc
mov
scas
bound
stc
adc
push
push
fcmovu
je
aaa
int3
ret
sbb
or
xlat
adc
cmpsb
sub
jne
xor
ficoml
sbb
sub
inc
addr16
adc
cmp
iret
or
pop
cmp
mov
sbb
std
jecxz
mov
roll
push
xor
lahf
add
into
lret
xchg
mov
mov
ljmp
xor
cltd
in
or
pop
cli
inc
cld
aam
call
dec
adc
js
mov
pop
ret
fsubr
int3
aas
popf
inc
mov
lods
xchg
bound
or
pop
mov
pop
out
jg
sahf
cld
mov
sti
inc
cmpsl
ss
cmpsb
shl
mov
cmpsl
sahf
enter
ds
stos
dec
sahf
mov
mov
aaa
mov
or
and
ja,pn
jmp
mov
sbb
jae
add
pop
aaa
addr16
test
pusha
cmp
cltd
mov
sub
std
adc
push
push
xor
add
cmp
push
mov
mull
ficomps
popa
loopne
or
mov
popa
or
fs
mov
sarl
mov
push
inc
jo
inc
in
mov
test
sub
rorb
imul
adc
and
minps
in
jl
dec
xchg
out
scas
mov
and
mov
push
es
or
mov
enter
add
mov
pop
dec
adc
push
mov
fwait
in
jmp
adc
movsb
mov
loopne
sbb
push
out
lret
jbe
jmp
js
add
out
fists
repz
out
bound
push
pop
cmp
and
adc
inc
mov
mov
test
shrl
jb
fcomp
stc
aaa
arpl
xchg
fimuls
cmpsb
outsb
mov
aad
mov
scas
in
fisttpl
test
sub
xor
mov
push
jmp
xchg
addb
push
pop
add
mov
test
pop
cmpb
jo
xchg
sbb
mov
je
rcrb
and
sbb
cmc
mov
pop
aad
movsl
inc
jecxz
xor
in
cmp
sti
adc
inc
aas
mov
cmp
pop
push
dec
pusha
jg
cmp
push
fidivrs
add
stos
jbe
jae
pop
das
jmp
push
insb
push
cwtl
cmp
lds
sub
xchg
scas
repz
or
leave
adc
cmpsb
out
adc
add
cli
clc
push
mov
and
icebp
inc
xor
or
mov
adc
jae
fsubrs
mov
in
dec
lea
pop
arpl
sarl
dec
inc
cs
xchg
xchg
pushf
dec
xor
mov
lret
jae
inc
cmp
sahf
mov
xor
and
daa
idivb
call
out
adc
sahf
push
in
adc
xor
roll
andb
les
scas
mov
outsl
fwait
inc
sub
sbb
aad
sub
push
add
lret
clc
sub
add
inc
push
sub
pop
pop
movsl
out
mov
adc
add
push
adc
test
negl
cmpsl
lea
and
enter
mov
pop
inc
dec
cmpsl
mov
arpl
push
inc
hlt
xchg
adc
mov
dec
pop
test
test
inc
shlb
add
fs
sbb
les
and
loope
xor
fbld
leave
lds
into
sub
add
cmpsl
inc
loopne
xlat
bound
sbb
xchg
jp
xchg
dec
pushf
dec
xchg
lret
cmpsl
int
mov
test
dec
xchg
lods
add
pop
xlat
jle
imul
mov
cmpsl
or
sub
lock
xchg
push
iret
jae
pop
add
inc
loopne
or
cwtl
adc
clc
adc
cli
sarb
or
iret
mov
and
cmp
sub
cld
fisubl
mov
or
push
cmp
jns
or
lods
movq
jle
adc
les
xchg
push
cld
push
xor
push
and
clc
inc
ss
fnstcw
jne
imul
popf
cs
ficoms
dec
mov
loope
pop
xorl
jmp
clc
jmp
out
sbb
jno
lock
push
inc
push
lock
cld
fsubl
paddw
push
test
fsubrl
pop
in
test
cmp
push
lea
push
push
xchg
js
cli
stos
cbtw
test
xchg
fsubl
push
mov
ja
stc
enter
pushf
sbb
mov
adc
lcall
les
das
inc
outsb
jecxz
test
mov
inc
ds
jno
sbb
cmp
aad
push
jb
dec
cmc
mov
xchg
dec
out
and
and
les
mov
push
fwait
out
dec
jbe
add
ds
fsubr
lds
test
push
loop
sub
jae
ret
sbb
mov
rcrl
jae
push
inc
jae
daa
ficomps
adc
insl
cli
jns
and
inc
mov
add
and
rep
insb
adc
jp
sti
xor
pop
fdivrp
pop
test
fnsave
mov
cmp
cmpsb
xor
popa
xor
pop
mov
popa
inc
pop
test
jg
sti
insl
test
sbb
jb
inc
cltd
mov
and
push
cmp
xor
ficomps
movsb
aam
cmp
in
es
xchg
mov
out
sub
mov
lret
cmp
push
jne
popa
testl
cltd
cld
clc
jge
add
cmp
sbb
loopne
sub
ljmp
lcall
pusha
insb
and
cltd
mov
or
mulb
mov
les
das
fwait
in
pop
in
ret
cmp
inc
sahf
mov
nop
push
adc
xlat
addl
push
sbbl
das
jl
into
in
lea
xchg
fstl
pop
andb
mov
mov
imul
mov
push
mov
int
sub
insl
mov
or
cld
lret
mov
je
out
sbb
fcmove
jmp
rcrb
repz
hlt
xor
jp
mov
data16
lcall
sub
stc
decb
movsl
outsl
je
imul
lret
popf
or
out
or
cmp
push
adc
gs
pop
sub
es
or
jbe
inc
loopne
movsb
ljmp
fwait
xchg
add
or
cwtl
jae
imul
sub
push
enter
sti
xor
sub
pop
aad
push
adc
test
pop
jg
pop
outsb
jmp
add
pop
movsb
cwtl
mov
fcomp
mov
std
and
pusha
jl
pop
scas
inc
arpl
jno
add
xlat
dec
in
cli
pop
jae
fdivrp
dec
daa
mov
add
jb
sub
cli
scas
mov
push
inc
pop
sahf
pop
fs
inc
or
pop
int3
in
repz
lret
add
push
cltd
push
add
or
cmp
repnz
test
dec
lret
jo
loopne
jecxz
insl
in
mov
in
repz
xchg
xchg
xchg
adcl
xchg
cli
out
lret
push
int3
mov
add
fisubs
or
int3
jg
push
cmp
in
fucomi
out
pop
andl
imul
sbb
mov
or
imul
inc
mov
mov
mov
mov
test
dec
movsl
js
sti
jmp
cld
loop
push
out
and
repnz
inc
ja
test
or
push
andl
gs
add
pop
orb
adc
lods
into
push
inc
aas
cs
addl
jnp
push
mov
or
cwtl
ret
fcmovnu
jo
sub
ja
inc
jge
jns
loopne
sbb
mov
or
add
mov
out
enter
ret
leave
in
pushf
sbb
mov
dec
lea
cld
push
pop
jb
xchg
test
add
in
xor
mov
testb
sarb
ss
pop
mov
scas
dec
or
pop
dec
or
movsl
jg
pushf
pop
ljmp
rorl
push
mov
mov
dec
clc
fdivl
pop
or
xlat
sti
push
mov
clc
inc
mov
cmp
mov
add
xor
out
push
shl
cld
icebp
mov
into
cmp
repnz
mov
test
cltd
xor
sbb
jg
dec
loopne
push
jno
adc
dec
mov
or
ss
xchg
inc
loop
negb
inc
fldcw
jae
imul
pop
mov
jp
or
push
mov
mov
in
jno
roll
adc
mov
enter
loopne
cmp
inc
dec
add
cmp
enter
out
pop
shrb
jmp
jbe
dec
addr16
fmul
pushf
add
sub
shr
aam
icebp
out
pop
inc
shlb
sbb
xchg
int3
daa
inc
insl
insb
mov
xchg
inc
leave
ds
daa
and
fmull
mov
cltd
mov
inc
fnstsw
mov
fsubr
ret
dec
arpl
std
jno
pop
lods
shll
sbb
adc
inc
cmp
mov
mov
add
or
dec
push
fstps
stc
cs
adc
sbb
stc
jo
in
loopne
scas
mov
sbb
jecxz
xor
cmp
in
fistpl
jle
imul
sub
dec
mov
ja
cmc
xchg
push
sub
pop
xchg
std
cld
lahf
or
ficoml
jp
std
das
in
dec
negl
out
out
lea
xchg
mov
push
and
fisttps
aad
lods
mov
stos
dec
ljmp
dec
or
scas
fnstsw
cltd
outsl
pop
andb
add
or
xor
or
aam
sbb
shlb
xchg
arpl
mov
dec
add
popf
andb
mov
sbb
filds
in
je
cwtl
jo
test
inc
xchg
outsl
push
das
ret
ss
mov
mov
js
flds
push
jae
scas
jp
mov
inc
mov
mov
adc
pushl
adc
dec
xor
or
insb
ret
imul
xchg
or
ror
dec
orl
lods
call
mov
jp
test
xor
test
cmp
sub
cmp
es
int
dec
and
lret
mov
or
jle
insb
test
or
dec
aad
stc
mov
dec
pop
aas
xor
enter
das
pop
jg
mov
sub
aas
cmp
je
sbb
xchg
push
sahf
sahf
adc
fildll
push
dec
mov
or
or
popa
xorb
sub
mov
push
dec
mov
cld
sub
mov
dec
leave
std
jmp
dec
inc
add
out
test
je
or
mov
shlb
lahf
jns
notl
lock
idivl
scas
stos
and
xor
add
in
ret
dec
xchg
mov
pop
push
xchg
lock
popa
fcomp
mov
lock
pop
push
jno
lds
popf
fwait
aaa
nop
sti
cmp
lahf
sub
sahf
cmp
xchg
lcall
mov
add
lods
test
cli
out
mov
into
mov
inc
push
jp
out
fstp
mov
push
push
fwait
popa
sub
hlt
push
stos
das
sti
pushf
gs
jne
lods
lods
fwait
adc
fildl
call
repz
aaa
push
xor
dec
jg
stos
lods
mov
mov
push
jns
leave
xor
movsl
loop,pt
mov
dec
stc
adc
add
xchg
add
xchg
xor
nop
gs
ljmp
sbb
mov
mov
je
sti
adc
sahf
xchg
clc
sbbl
ds
cmp
in
and
jno
divb
arpl
testb
lcall
jns
stos
clc
leave
cwtl
xor
movl
test
fwait
mov
jno
pop
xor
in
push
adc
cmp
inc
mov
into
mov
insb
sub
pop
cmpsb
decb
xor
push
cmp
pop
testl
scas
rolb
mov
sub
leave
loopne
sti
je
dec
lret
adc
cmp
scas
mov
push
sub
insl
repnz
mov
fadd
mov
imul
leave
pop
test
xor
mov
es
xchg
clc
aad
out
das
and
mov
jb
xor
push
xchg
push
add
out
imul
mov
jge
popf
ficomps
loope
sbb
dec
ficomps
mov
lret
pop
push
jecxz
mov
fmuls
out
fsubrl
sub
and
cwtl
jbe
push
iret
jb
cmp
inc
cmp
push
arpl
cltd
cmpsb
enter
sub
pop
ud0
sub
or
das
out
repz
add
hlt
sub
sub
push
mov
adc
jg
mov
js
adc
jl
jg
and
adc
leave
pop
test
jl
loopne
mov
xchg
dec
sbb
push
cwtl
dec
push
imul
adc
mov
in
inc
and
sub
es
and
cld
pusha
in
rcrl
or
pop
loope
add
clc
mov
sbb
mov
mov
loopne
mov
xor
lea
cmp
insb
popa
xor
test
pop
adc
xlat
mov
mov
inc
mov
mov
push
or
leave
cmc
adc
adc
push
les
jl
inc
adc
xchg
push
loopne
inc
jo
push
inc
inc
mov
xchg
adc
adc
repnz
daa
jae
out
push
or
or
std
jb
push
inc
push
cwtl
rorl
jmp
int
sbb
fsubl
in
je
xor
mov
pop
fsubrl
cltd
adc
mov
add
ljmp
shlb
stos
rclb
or
jecxz
jmp
imul
pusha
add
mov
inc
dec
adc
jb
xor
nop
les
pop
addr16
out
out
outsl
jecxz
scas
test
cmp
mov
cs
sarb
xchg
dec
popa
mov
add
popa
test
adc
xchg
scas
popa
xor
mov
jns
outsl
cmpl
and
ret
loope
mulb
mov
jo
fst
dec
es
cmp
in
lcall
out
dec
sub
mov
pop
adc
xor
and
push
addl
rorl
mov
xor
xor
and
jle
lds
sbb
dec
lea
setb
lods
faddl
add
and
outsl
clc
rcrb
cmpsl
push
adc
data16
test
rorl
addb
pop
ljmp
or
lcall
insl
sbbl
push
or
nop
sbb
pop
inc
dec
mov
rclb
lea
or
push
xchg
cli
sbb
mov
rcrb
adc
sahf
pop
push
pop
hlt
xchg
push
test
jno
popa
mov
adc
fwait
xorb
push
gs
dec
sbb
rorl
mov
divb
cmp
or
sbb
cmp
je
or
das
test
xchg
xchg
daa
add
cltd
cltd
nop
mov
adc
inc
mull
in
sbb
loop
test
lret
or
mov
mov
loopne
pop
cwtl
or
aas
dec
mov
jnp
xchg
out
jb
sarb
sbb
ret
in
scas
push
dec
jo
add
pavgb
iret
jmp
pop
mov
sbb
cmp
jns
fdivrl
js
ret
mov
insb
rorb
cli
push
jmp
repz
or
test
sti
cmp
adc
sub
or
gs
test
rorl
xchg
aad
pop
das
adc
xchg
push
bound
dec
cmp
mov
enter
outsl
insl
add
cs
adc
sbb
scas
xchg
hlt
sbb
inc
cli
pushf
loope
lcall
dec
gs
xchg
in
fnstsw
fisttpll
mov
je
dec
imul
push
sub
sub
pop
cmp
or
pop
out
mov
adc
dec
mul
push
out
inc
pop
push
enter
out
icebp
adc
dec
dec
test
mov
jbe
dec
es
jae
lret
inc
test
shl
cmp
pop
xchg
sbbl
or
push
jo
cwtl
negb
mov
insb
jns
ds
adc
addr16
adc
rcr
push
sti
jnp
pop
lcall
aam
push
xchg
stos
pop
mov
mov
shll
pop
in
sub
dec
ucomiss
mov
cmp
mov
je
jge
scas
sti
push
xchg
loope
mov
fdivrl
jmp
adc
in
mov
ret
dec
jno
repnz
je
push
push
cmp
hlt
cmp
sub
fwait
ja
dec
and
loop
cld
jecxz
and
dec
loop
mov
dec
push
and
imul
and
lea
push
sub
sub
dec
or
and
and
fimull
lea
sbb
fnsave
js
or
push
xor
xchg
mov
mov
test
mov
or
mov
popa
sbb
clc
sbb
repz
cmc
jl
es
sub
jecxz
xchg
aaa
test
add
pop
scas
mov
adc
call
sub
std
jge
dec
sub
out
imul
shrl
call
pop
js
jg
sbb
lahf
mov
sub
sbb
xchg
dec
movsb
xor
movsb
rcll
arpl
mov
cli
sbb
fs
add
push
sahf
cmp
cmpsb
lret
xchg
stc
xor
adc
sbbb
push
cmp
fwait
lods
cmpsl
test
push
mov
sti
push
mov
or
clc
or
xor
or
push
jno
dec
loop
jnp
call
fwait
push
jmp
and
or
stos
gs
clc
xchg
pushf
in
push
mov
scas
idivl
popa
cmp
dec
dec
xor
aam
xor
fstpl
das
jp
jle
loope
out
add
arpl
sub
rcrl
pop
rcr
scas
imul
jne
lds
lds
or
and
lods
mov
inc
test
pop
mov
sub
jecxz
in
mov
mov
ss
or
mov
adc
fcoms
leave
cli
adc
jle
xor
popf
inc
inc
cmp
jb
mov
mov
leave
and
int3
push
das
push
insb
lret
aad
jne
dec
andb
punpckhdq
outsl
adc
loopne
arpl
stc
jo
mov
jns
or
insl
aas
ss
xor
add
aaa
mov
jp
xchg
dec
jno
sub
test
insb
dec
mov
or
jg
aam
dec
xchg
mov
sahf
push
pushw
sbb
cmpsb
inc
inc
out
sbb
sbb
cmp
xor
enter
pop
inc
cmp
mov
fbstp
push
lods
dec
push
into
pushf
cmp
pop
xor
jae
mov
inc
leave
lods
loop
jb
out
pop
and
div
and
dec
sub
dec
jbe
sbb
add
insb
mov
lret
std
cmp
loope
aas
repz
xchg
inc
pop
jne
adc
pop
cmp
insb
jo
mov
lret
aas
bound
cmc
mov
insb
adc
or
sub
pop
cwtl
fs
sub
jg
mov
imull
mov
loopne
addr16
addr16
rolb
ljmp
dec
pushf
xor
sub
mov
sbb
scas
xchg
mov
sub
xchg
test
cs
in
lds
gs
int3
aaa
add
fst
jbe
out
insb
cltd
push
outsl
test
mov
enter
call
shl
repz
jmp
mov
jmp
fldt
inc
cmp
out
sub
cltd
je
sbb
xchg
dec
das
cvtdq2ps
jae
test
xchg
lock
add
es
leave
sub
xor
or
mov
movsl
cwtl
ja
jg
push
cmp
sbb
xlat
int3
mov
sub
lret
in
push
aaa
inc
in
push
shll
lea
aam
in
call
dec
xchg
lods
loope
mov
sti
mov
sbb
fcoml
mov
mov
dec
hlt
stc
mov
mov
out
aam
adc
mov
in
inc
push
xor
push
ds
test
jmp
xor
lods
cmp
negl
test
add
call
fdivrl
into
mov
adc
push
clc
mov
mov
jle
mov
push
leave
add
out
leave
mov
xor
cltd
jp
xchg
in
jae
jno
inc
push
mov
int
or
inc
hlt
test
cmp
cs
lret
rorb
lods
xor
lds
jp
pop
test
jb
mov
dec
das
mov
cmpsb
lods
cmp
sbb
pop
imul
inc
add
into
scas
xchg
push
rcll
rcrl
push
sar
mov
pop
outsl
cmp
fldcw
mov
pop
shrl
ds
ror
shlb
and
sbb
loopne
xlat
pop
out
mov
jne
mov
add
add
adc
testb
icebp
push
aad
jle
cmp
mov
in
scas
adc
jns
cmova
pop
aam
mov
sbb
cmpsl
aas
lods
fisttpll
into
movsl
mov
adc
aad
or
mov
push
mov
pop
fists
ds
adcb
mov
cli
aas
inc
fwait
dec
or
bound
and
jge
ret
jl
mov
dec
out
nop
test
repnz
jl
cltd
dec
das
rcl
cmpsl
dec
aam
aam
bound
and
cmp
sub
mov
movsl
in
dec
dec
inc
hlt
pop
loop
pop
and
xchg
scas
jb
std
jg
inc
cltd
psubw
sub
aas
mov
rcrb
out
aad
or
pop
lret
inc
xor
mov
cld
pusha
popa
push
jg
xchg
inc
shl
outsl
outsb
mov
jmp
ret
xor
orl
leave
xchg
test
or
pop
loopne
cmp
mov
mov
mov
cld
pop
sbb
push
test
pop
adc
sti
inc
loopne
cmp
shl
popa
or
mov
xor
and
imul
mov
cmp
mov
push
xchg
cmp
pop
aad
mov
mov
jns
icebp
jg
jmp
divb
jnp
lcall
mov
xor
daa
js
iret
je
cld
lods
mov
stos
jp
xchg
mov
cmp
mov
mov
loop
mov
pop
jb
in
or
test
adc
pop
cmpsl
loop
aaa
lock
jle
xchg
adc
jg
in
jns
jae
jl
adc
test
aam
aad
cmp
cmp
mov
cmp
fcoms
loop
sbbb
sbb
push
jmp
jge
cld
and
fcompl
and
jae
or
dec
neg
push
out
idiv
cmp
mov
add
mov
cmp
scas
rorl
or
jnp
xor
mov
mov
mov
xor
mov
push
jae
add
jge
repnz
clc
ret
movsl
mov
jl
mov
dec
stos
repnz
aad
gs
mov
pop
adc
insl
lds
int3
adc
je
xor
lcall
mov
push
jp
inc
push
and
sbb
sti
scas
mov
jmp
push
call
fucom
jnp
and
in
pushf
scas
and
mov
adc
xchg
in
cs
ja
cltd
and
mov
jge
jg
lods
sbb
mov
lcall
lret
mov
rcrb
add
push
adc
add
mov
push
add
mov
add
xchg
add
jbe
in
lea
mov
outsl
mov
out
and
fcomps
test
push
xor
pop
push
mov
lods
sbb
leave
mov
jmp
pop
filds
inc
add
outsl
push
mov
sbb
xchg
rcrb
push
out
fs
cmpsl
sbb
sti
push
jne
fucomi
std
shrl
cs
sub
push
loop
insb
pop
or
addr16
push
ja
inc
idivb
nop
lock
popa
repz
shr
jo
lret
lea
dec
inc
outsb
and
imul
scas
into
pop
daa
inc
cld
jb
int3
fimuls
and
push
push
mov
sub
xlat
mov
ret
popf
mov
shll
dec
es
hlt
sub
xor
dec
in
inc
out
mov
insl
call
ljmp
shlb
icebp
ss
jle
and
add
xor
jecxz
enter
call
adc
sub
xor
in
sahf
jo
adc
loope
sub
adc
xor
hlt
sbb
inc
push
cmp
dec
daa
mov
dec
cmpsb
or
sub
and
cmpl
test
out
scas
pop
gs
jns
outsb
test
and
das
sub
mov
inc
push
and
js
stos
je
xchg
mov
xor
jle
fsubs
gs
pushf
or
sub
sub
dec
addr16
inc
and
xor
leave
loop
shlb
and
mull
aas
ret
aam
xchg
or
jmp
mov
jl
mov
push
or
sbb
mov
add
xchg
jo
sub
stos
repz
adc
pop
in
mov
daa
outsb
test
sti
arpl
xor
inc
cs
stos
or
lahf
push
mov
in
stos
ret
imul
mov
xor
int
gs
inc
outsl
add
sub
mov
cltd
push
adc
pop
sub
data16
cwtl
add
cld
mov
ds
jmp
sbbb
mov
push
jle
movsb
stc
mov
sub
mov
mov
stos
dec
jb
lock
shrd
cltd
pop
jae
popa
mov
add
js
and
cmp
or
rcrl
aam
das
gs
pop
xchg
adcb
rcll
push
mov
mov
outsb
or
scas
sub
pop
addr16
stos
cwtl
imul
add
test
push
inc
mov
popf
in
test
mov
stos
push
adc
push
sub
cmpsb
popf
lret
cmp
dec
add
mul
jnp
int3
popa
fdivr
sub
xor
cmp
inc
jb
mov
insl
movsl
jno
dec
mov
cmpsl
lds
cmp
aas
jno
sub
fldcw
cmpsb
das
mov
dec
dec
mov
popf
push
mov
or
in
incb
adc
xchg
hlt
add
inc
and
xchg
test
xchg
push
loope
enter
out
fnstsw
test
xchg
xchg
mov
push
ss
pop
cmpsl
ret
mov
jecxz
xchg
push
mov
out
push
mov
push
sbbb
xor
fcmovbe
shll
jmp
or
data16
mov
inc
sub
jno
mov
int3
xchg
mov
mov
xor
pop
xchg
aad
daa
shl
notb
pop
test
lret
testl
dec
subl
mov
add
xchg
sti
rcll
mov
xchg
push
int
sahf
xor
or
lods
out
pop
std
mov
xchg
sahf
fsubp
cwtl
arpl
mov
and
xchg
and
aas
push
push
mov
add
dec
test
inc
pop
fistps
mov
sbbl
xor
xchg
push
hlt
dec
gs
jbe
shl
mov
jnp
cmpsl
jae
imul
push
inc
fdivrp
loop
or
xor
data16
inc
xchg
dec
repz
cld
sub
testb
leave
ret
jl
fbld
mov
sahf
jp
imul
dec
fs
xor
inc
test
les
xor
fisubrl
insb
cld
test
icebp
js
or
clc
in
aaa
mov
dec
mov
mov
mov
stc
call
es
sbb
sub
pop
outsb
repnz
push
std
dec
mov
sbb
test
dec
or
sub
mov
lds
in
jb
lahf
sbb
xchg
in
sbb
dec
call
push
xchg
jnp
out
stc
aaa
pop
xor
push
xor
pop
int
push
inc
std
gs
rcll
xchg
mov
in
push
orb
aaa
jb
daa
test
or
xor
es
add
test
sub
pop
add
pop
iret
adc
or
mov
loope
incb
scas
aas
inc
stos
xor
push
mov
stc
add
hlt
jl
mov
xchg
je
fistpl
xorl
cld
jb
aaa
fstpt
add
es
xor
add
mov
push
xor
and
xchg
and
push
push
pop
in
dec
add
ret
icebp
or
stos
cmp
sub
cmp
and
imul
inc
insl
xor
cwtl
and
sub
dec
or
jnp
test
mov
jl
add
mov
mov
sbb
jecxz
scas
popa
movsl
xor
xchg
pop
pop
cmp
cmpsb
repz
outsl
popf
in
out
cld
movsl
ljmp
lock
fwait
icebp
mov
lret
inc
mov
sub
jmp
fistpl
and
out
adc
aam
loopne
fdivrl
sub
fiaddl
and
mov
mov
adc
aaa
cmp
mov
inc
pop
dec
lds
cmp
cwtl
mov
rorb
ss
xor
xorl
out
and
scas
xchg
mov
cmp
cmp
sbb
pop
scas
adc
fadds
pop
xchg
out
imul
cmc
ret
xchg
xor
sub
mov
in
dec
fs
rcrl
push
popa
loope
dec
int
mov
stos
stos
jo
cmove
enter
mov
mov
repnz
pop
push
xchg
jnp
inc
pop
in
sub
movsl
inc
clc
lds
ja
lock
sub
mov
mov
lds
dec
in
movsl
mov
xor
cmp
or
pop
xchg
lahf
or
sbb
adc
add
ret
test
movsb
cmp
shrb
fwait
xor
mov
hlt
lcall
out
push
mov
es
sub
and
iret
dec
sub
out
filds
or
aam
cmpsl
mov
dec
push
xor
lret
add
adc
jmp
and
or
in
mov
inc
into
nop
push
jne
scas
cltd
jge
pop
ja
mov
lods
fstp
mov
sbb
or
sbb
fldl
adc
arpl
lods
mov
pop
pushf
inc
push
test
imul
iret
rcrb
test
xor
dec
fcompl
cmc
xchg
xchg
or
cwtl
sbb
xchg
into
rolb
cmp
add
mov
sub
xchg
pop
or
dec
xchg
jbe
mov
jecxz
adc
jne
mov
dec
lret
fistl
pop
sbb
mov
dec
mov
dec
add
popa
lahf
out
int3
cmp
addl
pushf
in
and
dec
addr16
in
add
xchg
adc
cmovle
mov
int
adc
imul
push
out
rcr
or
fwait
in
mov
push
out
jbe
and
fisttpl
mov
pop
mov
lods
pop
jns
dec
or
ljmp
ljmp
pop
pop
inc
popf
outsl
sbb
jne
call
mov
xor
int3
xchg
adc
jmp
pop
insl
xlat
mov
rcrl
pop
push
xchg
pop
pop
pop
and
xchg
cltd
subl
jnp
sub
icebp
dec
adc
shr
inc
scas
dec
cld
mov
inc
lret
ja
les
xchg
in
cmp
out
and
xchg
dec
pop
cli
pop
cmp
or
shrb
call
cli
addr16
add
or
mov
repz
je
je
xlat
call
pop
lods
sbb
sbb
mov
imul
sbb
sub
out
pop
ss
mov
inc
push
jns
push
xchg
mov
jne
test
cmc
sbbb
lahf
clc
or
lock
jmp
cmp
mov
mov
jnp
mov
cmc
xchg
cmp
push
cmp
fnsave
movsl
cmp
dec
aad
mov
mov
lds
or
mov
cmp
mov
out
jge
mov
mov
push
xchg
mov
jecxz
out
xor
popa
imul
cmp
jecxz
fucom
cld
mov
or
sbbl
stos
in
icebp
mul
xor
mov
shrb
test
mov
lahf
mov
jp
sub
ljmp
shl
xchg
xchg
movsb
test
mov
pop
pop
imul
or
fldenv
mov
mov
mov
sub
stos
inc
cmpsl
or
repz
shrl
loope
imul
int3
mov
inc
mov
adc
pop
add
cmpsl
and
xchg
addr16
inc
shl
xor
test
loopne
lcall
testb
xchg
in
fiaddl
adc
xchg
stos
rcr
cli
into
jae
pushf
pop
mov
or
jle
xor
xor
push
pop
cwtl
or
jge
sub
cwtl
rol
clc
add
decl
xchg
or
and
ret
cmpsb
sub
dec
pop
andb
mov
das
pop
xchg
sti
push
adc
add
movsb
loope
lods
mov
lret
in
sub
jmp
inc
cmp
push
xor
test
push
rorl
inc
nop
inc
popf
push
clc
loope
adc
popf
push
mov
shll
fists
xor
jmp
stos
pusha
and
cmp
adc
insb
dec
inc
sbb
aaa
push
push
mov
fstl
repz
and
fsubrl
xchg
sahf
jo
test
cmp
adc
push
or
es
sbb
pop
ja
cmpsb
inc
shrl
nop
sbb
mov
lods
pop
loop
andl
mov
push
testb
pop
in
mov
clc
sbb
out
push
inc
repnz
in
push
lcall
or
enter
mov
push
lods
dec
cmp
lret
sbb
int
es
adc
daa
mulb
pop
jb
movsl
rcll
outsl
push
xchg
or
insl
sbb
mov
jle
int
push
push
ret
cmp
fsubrp
shlb
int3
lret
jns
fisubl
inc
in
xor
fnstcw
aaa
add
cwtl
add
idivb
repnz
xor
shlb
mov
nop
shl
jg
xchg
cmp
hlt
push
xchg
test
std
insl
out
movsb
fiadds
dec
jg
xchg
daa
cmpsb
push
cmp
xor
ljmp
cld
add
jnp
inc
cmpsl
les
or
add
sub
hlt
pop
pop
mov
add
enter
pushf
pop
movsl
mov
out
es
pop
sub
mov
sbb
sbb
leave
xor
imul
dec
dec
shrl
js,pn
sub
jae
mov
jnp
push
push
out
inc
xor
push
lea
lcall
jp
int
cli
ja
cltd
ljmp
pop
cmp
sub
shr
test
push
mov
xchg
sub
mov
in
add
repnz
rclb
into
jle
rorb
ret
leave
out
stc
rclb
out
das
ljmp
notb
jmp
pop
ds
inc
outsl
rclb
in
pop
mov
inc
or
pop
push
jns
movsl
rcrb
fmull
dec
mov
fsubrs
fmuls
mov
out
jmp
test
out
sub
cmp
mov
pop
stos
or
push
pop
adc
adc
shrl
orl
lea
jge
jbe
push
or
idivb
xchg
addr16
mov
mov
jg
inc
adc
aad
fs
pop
xor
fnsave
popf
jg
cwtl
inc
fs
dec
xchg
mov
inc
test
xlat
loope
test
mov
pop
mov
cmp
jcxz
std
sub
mov
jge
xor
jnp
xchg
psubusw
mov
dec
or
pusha
imul
fcom
push
ljmp
lcall
or
or
xor
lret
xor
std
aam
pop
or
xchg
minps
stos
cwtl
xchg
push
push
loopne
aaa
jbe
mov
lods
or
jp
push
xor
imul
and
pushf
test
lret
cmp
sbb
sbb
dec
daa
int
pop
push
subl
dec
iret
hlt
notl
insl
out
sub
data16
jg
push
enter
or
cmp
cmp
aas
pop
roll
pop
jo
dec
pop
sbb
lock
sbb
add
into
dec
test
pop
gs
aas
in
and
bound
mov
clc
pop
jge
sub
sarb
and
push
mov
aad
stc
and
mov
jge
repz
and
cltd
imulb
pop
jae
adc
inc
xor
or
inc
insb
xchg
sbbb
and
mov
in
insl
cld
ret
pushf
test
dec
mov
pushf
jb
xor
test
xchg
xchg
ljmp
pop
jle
add
mov
je
test
out
xchg
adc
xor
jmp
cmp
sbb
mov
mov
fdivr
inc
xor
sbb
mov
xchg
sub
notb
les
insb
lcall
ret
idivb
dec
sti
cltd
clc
pop
mov
pop
push
je
cwtl
scas
mov
pop
fwait
mov
lret
cmp
imul
sub
pop
jnp
jecxz
mov
dec
pop
sub
pop
xchg
jbe
js
clc
jno
pop
movsl
dec
jl
mov
mov
push
iret
fisubrl
mov
mov
xor
aas
xchg
cmp
aad
fildl
sbb
or
mov
out
fsubp
imul
mov
add
int
or
inc
scas
pushf
sbb
call
mov
push
jecxz
icebp
sarl
mov
cld
stc
fimull
fsubrp
add
xchg
cs
repnz
dec
pop
add
cmp
mov
xor
mov
sub
shll
loop
sbb
push
enter
and
mov
icebp
push
xor
ret
rcrl
mov
push
sarl
inc
mov
in
rcrb
add
mov
scas
pop
cmp
mov
mov
add
push
mov
mov
imul
and
roll
or
push
aam
sub
jmp
data16
in
rep
ja
jecxz
cmc
or
and
push
dec
push
jae
ja
cltd
out
rcll
ret
pop
out
pushf
sub
jl
cmp
imul
sub
mov
mov
adc
aas
in
jp
adc
add
sub
mov
sbb
or
mov
add
decl
and
pop
and
lds
dec
mov
decb
dec
jo
add
sahf
add
lret
loope
adcl
jp
jae
mov
sub
xchg
imul
psubsb
aam
mov
sub
xchg
cmpsl
pop
jge
mov
jg
add
and
dec
subl
sbb
loop
push
jg
pop
mov
mov
out
xchg
cmp
es
push
and
inc
pop
cmpsb
sahf
lock
int3
sbb
imul
daa
adc
adc
ret
rol
inc
scas
pop
mov
inc
aaa
mov
mov
xorl
test
test
negb
mov
in
sbb
dec
sbb
mov
into
jnp
push
andl
out
or
aas
mov
xchg
inc
aad
ss
icebp
jp
lret
mov
out
or
lret
ret
mov
nop
addb
add
mov
lea
or
mov
in
repnz
sbb
pop
push
push
inc
fdivr
xor
fwait
dec
xchg
mov
push
jmp
outsb
mov
fs
adc
xor
andb
add
mov
aam
lcall
lock
mov
iret
cmp
cmp
mov
lret
mov
and
push
xchg
adc
leave
mov
mov
mov
outsb
cmpl
adc
stos
mov
subb
or
mov
cli
cmc
pop
jmp
sbb
loop
in
negb
and
inc
push
stc
add
insl
insb
pop
aam
std
push
push
mov
jmp
or
xchg
or
mov
rcrl
push
dec
enter
add
mov
mov
filds
mov
or
cmp
cwtl
pusha
outsb
movsl
inc
sub
and
mov
cmp
enter
mov
pop
lock
mov
addr16
in
pop
shrb
stos
test
popa
shlb
leave
scas
movsl
cmp
icebp
xor
repz
outsl
jne
into
sti
mov
sub
sub
stc
mov
and
push
pushf
ror
xchg
inc
pop
xchg
ljmp
mov
cld
int
stc
xor
gs
leave
sub
mov
cmpsl
divl
stos
iret
pop
lahf
mull
mov
cld
sub
mov
aaa
or
ja
and
into
adc
loope
inc
mov
std
ficoml
mov
sahf
xchg
enter
xchg
test
stos
pop
js
mov
adc
scas
les
push
cmpb
fcompl
adc
std
repnz
jp
andb
cmc
xchg
jle
mov
test
loop
aad
xor
mov
stos
cmp
mov
and
inc
dec
and
xor
aam
mov
dec
mov
insl
inc
test
jl
pop
mov
nop
arpl
cmpsl
mov
fwait
sub
sub
int
test
dec
sub
pushf
lods
cli
inc
shll
xchg
nop
mov
repnz
xor
lods
loope
sbb
jne
jnp
dec
ds
nop
addr16
push
xchg
push
loop
fmull
mov
inc
jbe
es
imul
sti
or
cmc
and
gs
fcmovb
loope
imul
dec
pusha
mov
pop
in
fwait
sbb
lcall
add
and
repz
test
icebp
test
shrb
mov
or
xor
ss
mov
or
movsb
outsb
test
cmp
nop
and
imul
jmp
fistps
sti
jmp
inc
xchg
jns
out
jnp
sub
xor
add
repnz
add
adc
mov
mov
jmp
scas
push
in
cwtl
iret
dec
jg
cwtl
movsb
decl
incl
jmp
aas
add
mov
ffreep
jb
sbb
fs
mov
add
mov
inc
popa
dec
dec
arpl
dec
iret
push
push
adc
lret
cli
decb
bound
push
jbe
insb
aaa
ret
dec
mov
xor
xchg
mov
pusha
mov
fnstsw
cltd
pusha
mov
jg
mov
imul
and
ds
fistl
gs
icebp
jle
jp
imul
pusha
cli
mov
mov
adc
inc
mov
out
mov
call
sub
test
xchg
jecxz
cmp
mov
mov
and
lahf
lahf
call
mov
inc
jb
jecxz,pt
mov
insb
icebp
and
cs
adc
add
and
pop
fldlg2
dec
sbb
fwait
mov
sub
jge
or
call
test
cmpsb
push
aad
jne
or
rcll
jo
arpl
lret
fisubrl
lods
jnp
mov
xchg
or
inc
inc
andb
mov
leave
sub
data16
rclb
pop
sti
and
insl
add
icebp
push
frstor
das
js
out
and
sbbb
notb
test
inc
mov
dec
sbb
movsl
mov
imul
ja
cmp
fwait
ret
or
sub
int3
clc
mov
mov
fdivs
push
xchg
adc
mov
jp
hlt
stos
sbb
mov
cmp
vunpckhpd
add
cmp
neg
stos
mov
mov
push
jmp
imul
dec
sub
setne
push
aas
aaa
ret
jl
enter
loope
mov
or
inc
clc
push
fldl
mov
daa
mov
jecxz
pop
inc
and
sbb
and
ret
movsl
or
push
or
adc
jg
sti
xchg
test
push
inc
inc
mov
ret
loope
jno
xchg
outsb
rcrl
shl
lret
push
push
cmp
or
dec
leave
or
pop
and
xchg
cmp
add
xchg
lock
mov
xchg
les
pop
notl
movd
sub
mov
rcrl
mov
lock
xor
sbb
in
jb
cld
push
lret
jns
js
popf
js
jl
repz
push
inc
mov
lret
subl
stc
inc
insl
mov
add
and
ljmp
mov
loopne
inc
inc
in
xchg
out
xchg
sbb
pop
mov
cmp
mov
jge
pusha
and
in
sub
inc
sarl
aas
dec
aad
repnz
mov
sub
rcrl
inc
adc
jge
shll
xor
fwait
lds
out
lret
js
push
in
xor
outsl
push
add
dec
xor
jne
push
adc
jb
in
add
fldt
mov
pop
mov
stc
outsl
int
cmpsl
dec
bnd
dec
cltd
xchg
fwait
popa
out
or
adc
pop
mov
xchg
mov
fnstenv
ljmp
lods
jg
cmp
jo
rcl
cmpsb
fnstenv
sub
shrb
sbb
mov
aad
repz
pop
lret
push
les
cmpsb
pop
fdivrs
adc
sbb
cmp
mov
imul
scas
popa
cltd
lea
movups
in
jmp
incl
dec
xchg
ret
xchg
mov
movsb
sbb
add
movsb
insl
sarb
jge
jg
mov
data16
stos
cmp
stos
lret
rorl
in
mov
mov
xchg
pop
xchg
stos
push
pop
sbb
mov
mov
xchg
sar
mov
test
and
out
inc
jo
lock
push
jo
cmp
out
ror
hlt
outsl
bound
or
pushf
and
ljmp
xchg
adc
enter
rorb
lahf
xchg
mov
and
mov
or
test
mov
push
mov
mov
fwait
push
jg
ret
jp
and
int
dec
push
jmp
jne
fsubl
jg
sub
stc
push
inc
stos
scas
imul
cmp
shll
sub
mov
mov
pop
testb
stos
inc
imul
jp
xchg
inc
jmp
test
ja
pop
mov
fsts
das
shrb
and
in
clc
outsl
rcll
ss
inc
repnz
inc
lods
aas
bsf
outsl
sti
adc
pop
mov
xchg
dec
data16
xor
dec
push
jns
dec
xor
sub
add
arpl
push
stos
jno
cmp
pop
cmp
and
mov
loop
adc
xlat
add
mov
faddl
sbb
sub
inc
xor
dec
imul
aaa
into
fwait
in
and
in
icebp
dec
fsubl
data16
in
stos
push
int3
fdivrl
pop
mov
pop
push
scas
push
fisubrl
aad
push
out
data16
or
xchg
roll
insb
nop
insl
sub
adc
dec
std
rclb
or
out
pop
loop
inc
sahf
loop
test
dec
xor
shrl
in
arpl
inc
loop
lret
aaa
aas
scas
das
sbb
jne
and
test
xor
cwtl
imul
sti
and
add
xor
xor
jno
lock
or
and
mov
jno
loope
dec
pop
dec
push
jo
push
xchg
mov
xchg
sbb
mov
push
xor
mov
adc
pop
cmp
cwtl
mov
pop
lret
mov
jmp
sbb
sbb
push
rcrb
jp
movb
iret
fistps
cwtl
or
inc
jo
cmp
push
mov
jbe
xor
lret
dec
inc
divl
pop
add
dec
in
scas
adc
mov
push
les
xchg
out
orl
movsl
xorl
jl
push
mov
test
into
and
leave
int3
cwtl
fcmove
push
mov
into
and
or
push
mov
inc
push
cmc
das
cmp
cmpsl
int
add
jg
xchg
jnp
xchg
leave
inc
lcall
mov
mov
sub
ret
mov
addr16
inc
int3
add
ljmp
push
push
in
fstpt
aam
jae
sahf
cmp
sub
push
mov
aas
xchg
inc
push
dec
cs
and
xor
inc
testl
pop
lret
cmpsb
xor
xor
rolb
fwait
shlb
cmp
cmp
jecxz
outsl
insl
push
iret
in
in
loop
mov
repnz
std
adc
add
mov
inc
adc
stc
mov
adc
lds
mov
cmp
pop
add
sbb
add
enter
mov
leave
je
and
mov
movsb
cld
aad
in
aam
mov
mov
cmc
inc
xchg
cwtl
aad
ja
scas
cmpsl
xchg
subl
mov
inc
fs
sub
add
dec
bnd
xorb
sbb
popl
scas
xchg
add
addr16
push
mov
or
adc
pop
push
adc
stos
rorb
dec
clc
mov
mov
xchg
negl
aaa
cmp
lods
mov
mov
xor
push
pop
fiaddl
push
sub
pop
or
mov
mov
or
add
mov
add
and
push
call
pop
ret
jo
sub
dec
loope
mov
cltd
push
pop
xlat
rcll
cmc
mov
mov
popa
scas
lds
xor
sbb
adc
jp
sub
push
xchg
push
sub
cmc
fwait
testl
cmp
stos
mov
ja
cmpsl
popa
cmp
push
adc
mov
cltd
xchg
mov
es
lahf
aas
loopne
inc
pop
mov
and
imul
push
xchg
cmpb
add
fcomps
xor
sbb
xchg
push
addr16
sti
mov
clc
das
add
sbb
addb
cltd
dec
scas
cmc
test
mov
jnp
dec
das
cmp
fsubr
mov
das
insb
or
hlt
inc
icebp
mov
pop
lret
loopne
xchg
fisttpll
inc
imul
sub
mov
or
cmpsb
mov
fadd
xorl
popa
lds
push
mov
mov
pop
xchg
ret
pop
inc
adcl
pop
je
pop
pop
out
iret
icebp
scas
mull
sbb
pusha
test
inc
flds
out
jae
adc
sbb
in
mov
mov
xchg
push
mov
cmpsl
rclb
or
minps
das
fnsave
mov
sbb
add
sti
xchg
in
xor
xor
mov
loopne
inc
adc
or
int
movsb
mov
jb
fucomi
mov
jle
loop
rcrb
mov
pop
jp
sti
int3
or
jb
xor
jmp
pop
fsubs
dec
shrl
cmp
adc
cmpsl
outsl
les
dec
add
cmpsl
outsl
clc
xor
outsb
fs
mov
ss
and
pop
push
ljmp
jecxz
inc
pop
test
add
mov
push
js
xorb
pop
push
imul
sarb
dec
mov
cmp
sbb
mov
fisubrl
cmp
les
cmp
pop
mov
sbb
dec
into
inc
pop
push
xor
movsb
mov
in
cmpsb
push
xor
dec
adc
rcrl
adc
jp
outsb
daa
pop
mov
mov
mov
xchg
add
in
adc
adc
sub
push
xor
ljmp
dec
gs
out
cli
dec
das
std
xchg
gs
loope
add
insb
mov
mov
popa
dec
xchg
or
pause
cmp
push
les
pushl
mov
inc
popf
xchg
popa
in
inc
mov
or
add
outsb
das
movsbl
adc
cmp
bound
inc
les
lret
repz
fmuls
pop
movsl
push
xorl
in
nop
inc
push
xor
cmp
xor
jmp
push
and
jg
push
adc
or
gs
out
cmp
fbld
rcrb
imul
rcrb
adc
lahf
mov
aaa
xchg
cmp
mov
loopne
mov
leave
imul
push
mov
out
sub
adc
mov
pop
pop
and
daa
pop
ljmp
mov
mov
jnp
cwtl
fwait
inc
cmp
clc
cmp
addl
jne
aam
xchg
pop
sub
and
fsubs
lret
shll
movsb
add
mov
and
xor
and
mov
popf
enter
push
negl
lea
jns
in
mov
sarb
jnp
daa
or
lea
push
xor
cmp
imull
inc
mov
ja
shlb
jno
jge
inc
cmp
insb
daa
push
pop
xor
lock
rolb
push
mov
xchg
pop
scas
dec
std
call
fwait
jmp
sbb
dec
push
sahf
jb
mov
insb
push
mov
pop
sbb
push
rcl
int3
dec
xor
stos
cmpsb
adc
dec
dec
arpl
bound
rorl
aas
or
jle
jmp
xchg
sub
in
repnz
daa
adc
sbb
push
mov
mov
xchg
mov
sahf
mov
push
jecxz
sbb
and
inc
xchg
in
in
data16
and
mov
sbb
dec
hlt
addl
in
fdecstp
and
fstpt
fnstsw
addb
cmp
add
movsb
or
mov
adc
cmc
aaa
pushf
pop
scas
adc
fs
pop
ds
test
addb
mov
test
scas
fists
add
cmc
dec
mov
test
push
pushf
sbb
stos
cld
xchg
aad
inc
pop
push
fmul
lds
lds
sub
movsl
push
mov
adc
mov
decb
lret
xchg
addr16
pop
andb
pushf
daa
sub
or
mull
push
mov
push
xchg
addr16
lock
cmp
jl
sbb
mov
mov
repz
in
dec
adc
fs
fsts
pop
jb
cld
cmp
scas
sub
or
aas
jne
mov
add
in
ficompl
data16
call
inc
fdivrp
and
movsl
test
jg
cltd
mov
and
sbb
jge
in
push
repz
fwait
push
mov
mov
cmp
dec
xchg
psrad
inc
cmpsb
mov
shll
outsl
adc
fstl
jmp
jle
inc
jns
sti
mov
fnstenv
insl
and
cmp
dec
xchg
xchg
shl
sub
cmp
mov
stos
test
vfnmadd213ss
aaa
xor
mov
and
fisttpll
push
add
fsts
dec
push
adc
bnd
cltd
cmp
xor
scas
pop
mov
and
mov
mov
in
push
mov
in
popf
scas
inc
mov
cmp
mov
pop
icebp
std
repnz
inc
hlt
push
loop
cmp
test
dec
lcall
cmp
inc
es
or
cmp
rol
mov
mov
into
cmp
adc
repz
xchg
mov
xchg
subl
mov
fdivp
inc
pop
daa
sbb
xor
fwait
dec
jae
dec
xchg
and
scas
fs
inc
fiaddl
sbb
lea
adc
rclb
push
add
jg
js
and
mov
cs
pop
xor
pop
nop
jg
stc
mov
mov
lret
adc
push
lret
push
pop
in
mov
or
arpl
cmp
push
xor
or
ds
fstps
pop
cmpl
jle
mov
inc
mov
ret
lret
je
add
dec
dec
mov
jno
loopne
fsubrl
jne
xor
xchg
test
cmpsb
stc
dec
cltd
xor
lods
cmpsb
push
jmp
out
pushf
fisubl
imul
jnp
rclb
clc
or
adc
stos
pusha
or
out
jno
add
push
xchg
scas
jbe
stc
push
mov
stos
fcoml
inc
or
and
adc
test
stos
ror
rcr
jno
mov
inc
cmpsb
sbb
or
es
sub
sbb
popf
dec
xor
divb
jp
ret
mov
aaa
mov
icebp
scas
or
aad
cmpsl
movsl
xchg
push
sarl
and
push
jge
dec
sub
rorl
outsb
inc
pop
jg
aas
out
jb
push
dec
and
or
sbb
mov
loopne
add
inc
sub
pop
push
repnz
cld
push
repz
xor
mov
sbb
and
lds
xor
pop
ss
pop
adc
int
mov
scas
mov
sarb
shl
lods
sub
shrl
push
jns
aad
mov
mov
loope
outsb
mov
sub
jmp
mov
movsb
scas
dec
or
fwait
outsl
sbb
xor
mov
incb
nop
cld
xchg
fs
stc
adc
inc
ret
fidivrs
or
xchg
scas
sarl
adc
inc
inc
shr
aam
adc
leave
mov
cwtl
ds
cmc
mov
test
lahf
insb
fsub
nop
jnp
fcoms
nop
cld
push
stos
repnz
lret
rorb
rcrb
sbb
out
and
mov
lock
cwtl
imulb
inc
adc
shl
jle
mov
lret
cltd
pop
fildll
mov
mov
pushf
lret
das
popf
sbbb
fdiv
ret
fcomp
jl
daa
push
push
pushf
push
daa
dec
cltd
mov
inc
pop
mov
mov
sub
xorb
loop
pop
adc
scas
sbb
sub
in
adc
or
in
and
mov
sub
inc
cs
cmp
mov
add
test
xor
mov
cmc
sub
shll
lds
adc
gs
fndisi(8087
ljmp
imul
fistps
das
test
in
imul
cmc
and
ja
in
add
das
rcrl
sbb
daa
jl
hlt
push
mov
sub
popf
sti
nop
dec
jno
ret
fwait
dec
jp
jmp
xchg
dec
js
add
test
nop
lods
push
enter
rclb
or
jle
test
add
and
dec
into
mov
outsb
lea
jns
xchg
aaa
pop
icebp
xor
or
insl
xchg
jne
stos
cmp
lret
mov
inc
jg
sub
cwtl
scas
or
pop
mov
mov
shll
movsl
scas
or
pop
inc
aad
js
xchg
sub
push
adc
test
pop
out
jecxz
xor
lds
push
out
mov
push
inc
push
xor
push
mov
test
in
stc
idiv
and
xor
idiv
rorl
test
mov
xor
mov
pop
sub
cmp
adc
xchg
scas
scas
mov
push
add
push
dec
iret
adc
add
lret
pop
sahf
int3
xchg
mov
sbb
mov
pop
pop
dec
call
push
lds
jb
fidivrs
sbb
mov
das
fnstcw
out
or
and
hlt
outsl
gs
sahf
iret
mov
test
cmpsb
or
ror
in
jns
inc
ret
daa
mov
adc
push
rorl
sub
gs
movsl
push
ret
icebp
xchg
jl
in
adc
jnp
adc
adc
mov
mov
and
dec
dec
or
pop
cld
inc
shll
pop
pop
mov
jle
sahf
mov
adc
cmp
les
push
int3
jnp
ret
add
rorb
jle
aaa
out
dec
fldenv
mov
push
push
xor
xor
push
push
adcl
mov
mov
xor
and
dec
xchg
loop
movsl
arpl
inc
or
push
mov
cmp
pusha
jle
mov
clc
cli
jmp
cmp
fisubl
cltd
lahf
dec
sub
jnp
std
into
push
lds
fistps
mov
in
cli
stc
add
jl
xchg
xor
pop
adc
dec
loop
adc
or
dec
addb
fs
cltd
and
xchg
push
adc
sub
bound
sti
fwait
sbb
or
add
mov
inc
mov
cmp
bound
sub
call
sub
mov
mov
rolb
andb
mov
imul
aaa
push
jae
clc
pop
lahf
adc
mov
sbb
mov
add
xor
push
mov
sub
mov
lods
jg
jecxz
jmp
jecxz
iret
sub
cmp
sub
cmc
aas
push
ds
and
iret
inc
mov
inc
pop
cmpsb
pop
mov
pop
sbb
cmp
cmp
mov
dec
incl
mov
out
bswap
mov
in
outsb
in
jle
insl
lret
fs
cmc
aam
sahf
in
sub
fldcw
xor
inc
mov
ljmp
hlt
addr16
in
or
and
ss
scas
pop
xor
repz
movsb
je
xor
fwait
scas
movsl
inc
add
cmc
xor
cmp
push
xchg
fnstsw
dec
sbb
ja
inc
sbb
jbe
aam
pop
pop
or
popa
dec
cmp
mov
and
fs
mov
es
cmp
mov
int
mov
pop
bound
mov
lock
cmp
xchg
pop
lcall
mov
pop
mov
xor
leave
adc
mov
sbb
enter
pop
rolb
jmp
and
xor
xor
sti
xor
andb
push
orl
aad
add
push
mov
sub
ds
outsb
lret
cmp
mov
out
mov
fucomp
cld
xchg
adc
jle
pop
in
mov
mov
sarb
add
mov
inc
subl
dec
and
iret
jno
add
shlb
cli
xlat
and
jmp
leave
pop
or
pop
sbb
fldcw
rcl
daa
jmp
mov
cmp
ss
push
jns
nop
adc
cmp
movsb
or
dec
adc
add
mov
bound
jne
arpl
sbb
popf
popa
xchg
imul
sbb
lahf
dec
inc
cmpl
scas
xchg
xor
push
jns
lods
andl
inc
sbb
nop
xchg
ret
push
cmp
sbb
pop
mov
mov
sti
add
sub
cmp
mov
or
push
xchg
cmc
shl
cld
jge
addl
xchg
in
stos
mov
sbb
cmpsb
or
iret
lret
jmp
pusha
idivb
arpl
push
mov
ljmp
fstl
pop
lret
add
dec
mov
add
lret
cld
push
mov
repz
pop
xor
sahf
and
pop
pop
and
lds
fnstcw
outsb
dec
xchg
sub
in
ja
inc
ret
out
jmp
or
inc
add
das
adc
pop
dec
mov
daa
push
rcrb
xchg
add
mov
mov
sub
pop
sub
pushf
and
test
rcll
jecxz
pop
pop
shlb
mov
jl
cmp
fwait
xor
daa
xchg
pop
push
and
bswap
or
push
test
mov
pop
mov
fwait
sbbl
scas
cmpsl
outsl
out
mov
cs
mov
mov
cltd
pop
or
sbb
or
adc
addr16
test
push
popa
mov
inc
mov
lcall
xchg
jge
mov
adc
adc
jmp
xor
and
pop
repz
add
and
cwtl
pop
lea
mov
bound
cld
adc
push
push
cmc
cmp
inc
iret
pop
pop
add
call
lds
ja
xchg
inc
lea
xchg
ljmp
push
mov
hlt
dec
push
movb
xchg
jnp
and
clc
ljmp
insl
jnp
sub
lods
cmc
add
lds
push
sbb
iret
call
xor
mov
mov
add
fs
or
mov
cmp
or
mov
jae
xchg
jns
popl
xor
sub
add
pushf
xchg
dec
cmp
rcrl
dec
pusha
lret
jecxz
cmc
jno
or
out
jge
aas
or
mov
push
mov
cmpsl
call
push
out
ja
ja
add
mov
sub
jb
sbb
adc
popa
xor
add
les
dec
xor
mov
mov
jl
mov
sahf
push
jnp
cmp
imul
dec
or
andb
iret
cmc
enter
data16
or
add
push
xchg
adc
xlat
int3
adc
cwtl
movsl
xchg
sub
dec
bound
test
jmp
jae
cmp
mov
xor
inc
pop
xchg
xchg
xchg
sub
mov
sbb
push
add
out
arpl
sbbl
ficompl
sti
mov
movsb
jb
mov
add
inc
lock
jb
frstor
sub
pop
push
xchg
or
dec
repz
in
cmp
jecxz
sbb
sbb
or
lahf
add
aad
imul
dec
lea
outsb
sahf
call
jecxz
mov
jge
dec
jno
test
sbb
xchg
notl
lea
adc
jo
push
xchg
pop
jg
shll
aas
mov
push
mov
test
mov
call
cld
mov
or
dec
adc
inc
fs
cmc
pop
xchg
adc
jle
mov
jae
push
repnz
jp
and
xor
outsb
mov
movsl
jbe
ror
bound
gs
lods
shrb
nop
dec
ljmp
insl
mov
rclb
mov
ret
pushf
adc
mov
mov
fidivrs
sti
cs
fsubs
loop
mov
cmp
mov
inc
orb
movsl
add
scas
icebp
imul
addr16
rol
insl
jns
enter
repz
cmp
in
cwtl
aas
adc
fcoml
mov
inc
push
neg
inc
mov
sub
arpl
inc
out
mov
push
outsb
jb
popa
pop
or
rcl
fcoms
ljmp
adc
push
roll
fnstenv
xchg
and
mov
xchg
ret
cld
imul
jo
stos
and
loopne
sub
ljmp
pusha
ret
xor
insl
mov
xchg
cmpsl
in
adc
and
out
add
mov
imul
push
in
pop
dec
lods
fldl
mov
fcomip
test
push
and
es
jb
mov
pop
outsb
inc
lods
pushf
jl
aaa
jl
sub
fidivrl
mov
lret
out
and
popa
mov
dec
xor
icebp
es
sbb
jne
in
aaa
cltd
enter
cld
xor
lcallw
add
ret
adc
dec
popf
push
hlt
sbb
and
scas
sub
inc
mov
es
xchg
dec
pop
adc
cmp
movsl
daa
fisttpl
nopl
bound
or
aad
xchg
fidivl
lret
nop
pop
inc
lea
mov
ret
dec
inc
pusha
sbbl
mov
cmpb
bound
movsl
iret
fcompl
adc
ljmp
or
aam
das
jge
fsubl
xchg
xchg
xor
adcl
jmp
sbb
mov
xchg
neg
out
xchg
push
xor
mov
in
xor
mov
mov
scas
test
push
and
fildl
shlb
cmp
sbb
xchg
in
adcb
lret
addb
fcoms
dec
xchg
adc
mov
imul
scas
pop
out
scas
sahf
jmp
sti
sbb
test
sbb
xchg
push
mov
shlb
rclb
adc
jmp
jg
js
pop
sub
adc
inc
jecxz
sti
and
jno
push
push
cmpsl
sbb
out
mov
mov
inc
mov
sub
sub
push
es
clc
mov
dec
or
loope
adc
push
mov
jnp
or
push
xchg
mov
add
xorb
add
push
and
dec
cld
inc
cwtl
mov
hlt
aad
lcall
aas
inc
bound
sahf
inc
lods
scas
xor
mov
cli
fstpl
out
xchg
and
popa
sub
mov
stos
pop
adc
lea
inc
inc
or
push
inc
in
push
pushf
push
adc
hlt
ds
mov
adc
xchg
dec
inc
aad
and
shrl
or
fld
mov
adc
scas
or
dec
or
adc
jp
sbb
push
in
cmp
scas
mov
testb
inc
sub
adc
adc
push
push
out
sbbl
push
push
outsb
push
inc
jns
mov
insb
pop
cmp
mov
std
jno
adc
or
into
out
mov
in
idivl
jl
shl
dec
fnstsw
iret
cs
or
pushf
and
mov
add
add
cs
sub
testb
mov
lahf
aad
and
mov
pushf
mov
and
jb
mov
jp
push
addl
dec
mov
sbb
testb
mov
mov
popf
add
mov
mov
hlt
xorb
fisttpll
mov
sub
cs
pop
mov
xchg
mov
stos
movsl
sbb
adc
movsb
xor
add
and
popf
push
ret
xchg
fiaddl
fwait
aaa
add
imul
cmp
inc
popa
sub
lds
inc
test
cmp
pop
fildl
add
int3
negl
pusha
or
mov
mov
bound
fcoms
jb
ss
data16
and
loopne
push
cld
mov
cmp
insb
dec
repnz
xor
out
roll
in
mov
in
jge
inc
lea
adc
jg
pop
xchg
pop
jne
cmp
in
xor
rol
or
dec
fsubrl
jmp
and
xchg
shl
inc
out
es
sbb
or
and
jmp
scas
js
inc
scas
aad
insl
in
mov
cltd
adc
add
mov
test
inc
jp
lret
adc
sahf
loop
jmp
test
cs
jle
dec
ret
loop
cli
les
jg
out
inc
lods
adc
in
rorl
sbbl
fildl
add
das
cmp
mov
sbb
in
mov
sbb
sub
imul
scas
jecxz
push
xor
out
cmp
lea
mov
outsb
leave
mov
add
clc
gs
pushf
inc
clc
cli
sti
es
sbb
rorb
push
out
je
pushf
xor
xchg
mov
ja
lcall
cmp
push
sub
icebp
xchg
rcl
addb
lods
xor
or
and
push
mov
sahf
fcoms
mov
cmp
jo
sub
or
or
int
dec
cmp
xor
test
push
mov
sub
pushl
ljmp
inc
push
jl
or
push
inc
xlat
add
lahf
rolb
adc
sbb
adc
add
out
cmp
adc
push
sahf
xor
pop
cmp
sti
push
sub
inc
insb
push
jns
pushf
ljmp
and
xor
clc
nop
xlat
push
cwtl
icebp
ja
mov
arpl
pop
fsubrs
xor
sahf
pop
jnp
or
gs
push
jbe
sbb
mov
cmp
fists
sti
rol
dec
fwait
add
jno
popa
add
stos
rcrl
cwtl
pop
shll
adc
rcrl
clc
aas
sbb
xchg
sbb
pop
aad
std
adc
jl
jns
push
xchg
xor
das
mov
or
ret
xor
outsb
imull
add
out
pop
add
jo
fs
ss
leave
sub
xchg
and
pop
xor
cmp
xor
rcll
adc
test
cmp
in
push
xor
add
jg
sbb
test
sbb
sbb
daa
mov
sub
notl
jg
pushf
and
cmp
lahf
sub
loope
jbe
aaa
gs
sub
popa
mov
cli
mov
lods
and
mov
test
sub
lea
mov
mov
dec
sub
mov
mov
test
dec
and
addr16
cmc
mov
inc
loop
stos
pop
hlt
in
mov
mov
repnz
jbe
mov
out
push
sub
and
pop
push
rcl
icebp
adc
outsb
add
add
aaa
mov
mov
leave
push
xchg
sti
xor
lock
gs
into
adc
andb
mov
fnstenv
loope
arpl
sbb
lahf
cmp
mov
out
mov
cmp
and
pop
xlat
call
mov
hlt
jge
daa
xlat
jb
in
add
enter
test
or
mov
add
test
jbe
inc
jne
adcl
and
jecxz
sbb
lea
imul
jle
mov
inc
in
sub
cmp
jmp
and
inc
mov
pop
mov
iret
testl
cmp
sti
adc
push
mulb
cli
insl
dec
jecxz
push
jmp
enter
xchg
aam
lahf
test
sahf
movsl
or
sub
mov
mull
adc
daa
cmpsb
daa
cmpsb
jbe
fcmovbe
call
arpl
es
data16
xchg
jge
cmp
cmpsb
sbb
xor
out
and
ret
pop
lcall
pop
iret
notb
cmp
negb
loopne
pop
push
mov
sbb
imul
popa
shll
jge
xchg
lods
mov
jno
addr16
js
xchg
in
popf
inc
sub
test
fdivl
and
cmp
or
lret
icebp
hlt
test
lea
mov
jecxz
mov
aam
stos
or
jl
jle
adc
rorl
push
cwtl
pop
push
push
iret
inc
dec
idivl
cmpsl
sub
es
push
jns
je
sahf
adc
add
and
mov
stos
or
mov
pop
sbb
fnstenv
inc
std
inc
push
adc
stc
loop
jo
mov
insb
aam
imul
adc
xchg
cs
xchg
pop
dec
stc
mov
in
inc
stos
lock
nop
in
aaa
mov
push
lret
popf
outsb
jmp
rclb
or
test
cmp
mov
in
xlat
fidivl
lods
imul
or
and
jle
lds
sbb
push
push
jb
test
lahf
or
out
lock
test
mov
daa
add
inc
mov
test
stos
test
ds
push
xchg
sbb
add
dec
cli
jp
or
outsb
sti
loope
push
lods
xlat
xchg
push
mov
out
outsb
scas
sbbl
and
aas
testl
sbb
push
int
in
xor
sbb
jnp
sbb
sbb
inc
sti
mov
add
jne
and
and
xor
leave
push
fstl
cmp
jae
fcmovnu
push
out
fldenv
mov
cmpsb
fiadds
das
xor
arpl
scas
adc
push
aaa
xlat
aaa
out
in
sbb
adc
mov
or
out
movsl
clc
inc
mov
push
dec
add
sbb
icebp
dec
fwait
sti
cmp
daa
sub
mov
lret
mov
imul
movsb
sti
mov
insb
and
push
push
lods
shll
fstps
cmp
mov
mov
lahf
or
int3
in
inc
fcos
je
imul
inc
cmc
cmp
cs
ret
jge
xor
jae
shr
insb
dec
adc
mov
push
cmp
rcrb
cld
movl
cmpsl
pushf
inc
pusha
movsb
pop
push
sbb
sbbl
jle
cs
lret
imul
in
jnp
out
rorl
sub
inc
das
xor
mov
repnz
popf
daa
fbstp
loop
or
inc
pushf
mov
sbb
cmpsb
push
push
push
xor
pop
inc
imul
or
push
or
mov
cs
out
adc
inc
and
hlt
xor
fucomi
adc
jle
xchg
lcall
scas
das
movsb
and
in
jnp
xchg
mov
fiadds
or
mov
fildll
adc
adc
mov
mov
push
out
popa
out
les
cmp
inc
icebp
sarb
into
cmp
and
frstor
out
test
and
jno
test
lahf
pop
lods
xlat
push
shrl
inc
sub
imul
shr
negl
inc
popa
sbb
cwtl
in
ja
lret
pop
mov
or
fs
adc
hlt
gs
cmp
in
rorb
sbb
fisttpll
pushf
call
and
fcmovnbe
cmpl
or
vzeroupper
and
dec
cmpsb
push
cmpl
dec
mov
lret
or
clc
cmp
and
mov
cmc
icebp
scas
push
stc
sub
mov
aad
loop
pop
scas
push
hlt
aaa
out
xor
sbb
pop
jg
sub
sbb
ss
or
mov
or
xorl
js
lods
fwait
and
push
adc
lds
xchg
insb
fsubp
pop
sbb
or
jmp
jp
dec
adc
pop
loop
movb
adcl
push
pushf
jne
lcall
sbbb
out
arpl
std
push
and
lret
icebp
es
sub
xor
xor
cmp
loope
pop
or
xor
aad
adc
iret
cmp
rcrb
cwtl
push
xchg
mov
sbb
adc
daa
fcomip
insl
popa
dec
pop
je
hlt
ret
iret
sbb
dec
lret
clc
pop
or
pop
mov
push
cmp
mov
or
mov
xor
inc
cmpsb
sub
mov
outsb
stos
xchg
pop
hlt
mov
mov
shll
dec
mov
push
inc
mov
test
rorl
sti
inc
jp
lea
mov
mov
mov
out
pop
stc
and
mov
shll
sarl
cmp
movsb
xor
out
mov
xlat
push
je
dec
push
sti
push
call
mov
xor
scas
jb
icebp
jno
sub
xchg
sbb
bnd
mov
mov
push
lahf
fwait
pushf
rolb
or
mov
mov
or
dec
imul
sbb
mov
push
cmpsb
mov
int
or
js
jno
pop
inc
dec
arpl
sbb
mov
cltd
xchg
cmp
movsb
fwait
jmp
jo
dec
sbb
fadds
cli
out
dec
and
pop
cltd
mov
xor
sbb
lods
sub
fcompp
je
and
pand
dec
and
imull
pop
inc
xor
clc
add
call
lahf
jbe
test
mov
jecxz
inc
mov
push
or
pushf
movsb
loopne
in
aad
divl
movsl
jb
pusha
std
or
mov
mov
mov
mov
mov
sbb
bound
mov
jg
xchg
pop
lret
ds
loop
and
xchg
and
mov
mov
sarb
cmp
lods
add
loopne
call
loopne
or
mov
mov
mov
lods
lahf
push
xchg
js
mov
mov
test
push
mov
orl
mov
mov
adc
jno
lea
adc
int
push
add
lods
mov
push
inc
arpl
jecxz
mov
test
mov
subb
test
adc
ret
dec
mov
or
imul
mov
cmp
push
jge
xchg
pop
stos
inc
and
mov
jg
inc
lock
sub
movsb
pusha
fdivrl
fidivs
pushf
push
test
dec
clc
rcl
sti
mov
insb
int3
in
inc
and
nop
leave
popa
mov
add
notl
sbb
std
int3
mov
sbb
add
xlat
fnsave
in
dec
cld
xchg
mov
pop
arpl
decb
dec
jmp
xor
xchg
push
and
cmpsl
adc
xchg
cmpsb
pushf
ffreep
mov
icebp
xchg
push
fsubrp
lea
repnz
xor
aaa
xor
icebp
xor
add
jae
push
mov
push
popf
test
dec
jmp
mov
out
dec
jne
sbb
xchg
or
lret
stc
cld
mov
add
inc
jno,pt
sub
bnd
push
jge
push
lock
sbb
or
ds
xor
mov
loop
sbb
insb
cmpsl
sarb
add
aaa
jmp
mov
mov
cwtl
fwait
mov
dec
mov
xchg
test
pop
mov
mov
inc
add
cmc
movb
mov
ret
add
dec
fsubrs
imul
push
and
pop
mov
iret
adc
fistpl
mov
test
imul
xchg
mov
shrb
orb
dec
jle
loopne
out
call
cmp
push
and
rcr
cs
jl
inc
push
cwtl
imul
stos
mov
jo
and
add
adc
dec
push
adc
and
inc
cmpsl
push
pop
add
or
sar
leave
jns
loope
mov
sub
call
insl
arpl
cmp
rcl
outsb
jno
jle
scas
xchg
inc
repz
stos
xor
mov
mov
dec
aas
xchg
jp
pop
sub
xor
and
outsl
pop
sub
cltd
sbb
cld
test
jo
sarl
insb
in
mov
and
leave
stos
mov
inc
insb
roll
enter
jnp
mov
push
into
inc
nop
fbstp
sbb
lods
rolb
imulb
xchg
daa
lahf
gs
aaa
xor
imul
adcl
mov
jbe
dec
adc
adc
xor
dec
inc
mov
jle
test
data16
popa
je
je
repz
testb
loopne
xor
dec
js
mov
jo
fdiv
push
xchg
mov
notl
add
pop
scas
ret
jp
pshufw
lcall
mov
cwtl
leave
mov
fistl
mov
aas
loopne
push
cmp
add
jp
out
arpl
or
push
and
inc
bound
dec
shrb
mov
mov
jg
push
test
and
jge
cmpsb
xchg
movsl
mov
andb
cmp
in
out
jns
sbb
inc
sub
jns
cli
les
xorb
addr16
fnstsw
icebp
cmpsl
and
cli
xchg
pop
loopne
sub
cltd
mov
push
jbe
in
cmpsb
scas
popa
leave
outsl
pop
jl
mov
mov
push
negl
cmp
bswap
adc
out
xchg
aaa
fstpt
adc
je
dec
rclb
xchg
popf
nop
mov
in
je
call
lea
mov
ja
test
nop
test
test
push
xor
les
cmp
lret
push
lcall
cmc
in
out
out
or
dec
sub
ljmp
ss
mov
insl
stos
pop
cltd
es
push
mov
mov
cmp
pop
in
inc
mov
fisubl
call
adc
mov
repnz
xchg
aam
out
and
nop
cltd
insl
sub
pop
cmp
mov
push
stc
mov
ficompl
sub
jne
mov
push
pop
xchg
push
lret
and
dec
out
out
sbbl
sbb
inc
push
and
mov
movsl
inc
jge
add
push
arpl
aam
and
jno
push
push
mov
loope
aad
popa
clc
int3
nop
dec
clc
mov
repnz
cld
cwtl
test
mov
jmp
push
out
push
rcrl
es
shl
cmp
into
out
inc
cmp
les
mov
sub
push
xchg
pop
mov
xlat
and
loopne
mov
fcmovnb
and
and
push
mov
xchg
popa
or
jg
pop
fstpl
mov
push
mov
jnp
dec
lret
into
stos
xor
outsb
pop
lock
inc
push
xchg
mov
jle
mov
inc
inc
int3
push
insl
sub
dec
jnp
shrb
pop
scas
cmp
push
cwtl
mov
aaa
insb
xor
repz
sbb
mov
int
push
mov
sbb
sahf
sbb
dec
and
fs
test
jecxz
popa
or
pop
scas
lods
outsl
outsl
orb
pop
jnp
push
shlb
xor
mov
lea
xor
imul
push
movsl
lcall
push
das
xor
pop
mov
popa
js
xchg
xchg
es
ficoml
mov
test
movsb
imul
arpl
mov
jo
jne
pop
subb
sbb
xor
fwait
rclb
rorl
lods
jg
stos
inc
mov
aaa
bound
inc
or
inc
pop
loope
push
cwtl
dec
cmc
hlt
sub
jmp
push
mov
xorb
push
lret
lods
push
pop
test
jns
xchg
mov
lods
cld
imul
dec
mov
and
push
sub
mov
insl
fwait
mov
and
es
push
bound
dec
lds
mov
sbb
addr16
inc
sti
inc
pop
cs
sub
pop
push
pop
sbb
or
dec
cwtl
repz
in
fcompl
xor
ret
repz
adc
push
dec
gs
fcmovnb
inc
leave
repz
xchg
jmp
test
cmp
sub
lock
sub
mov
fwait
jp
add
adc
xlat
add
xchg
or
cmp
mov
out
jno
cwtl
iret
xchg
pop
ret
inc
cmpb
mov
popf
and
repz
xchg
add
mov
jns
jns
outsl
mov
jo
dec
pop
js
lds
push
add
jecxz
push
stos
ja
jne
push
paddb
sbb
ja
or
gs
fisttpll
dec
dec
gs
sub
out
out
dec
out
popf
lahf
mov
mov
jns
mov
sub
out
outsb
mov
jp
std
testb
jae
xor
movsl
pop
nop
mov
pop
ret
adc
push
lds
mov
pop
sbb
dec
sbb
es
loop
inc
push
sbb
daa
stos
mov
lock
aam
gs
stc
or
mov
sbb
jmp
jp
push
jl
xchg
pusha
aad
cmp
push
jmp
xlat
mov
jecxz
or
push
sbb
mov
and
mov
cltd
aas
xor
mov
mov
xchg
test
adc
xchg
cmc
push
sub
mov
adc
pop
cmpsl
inc
push
pop
inc
and
imul
mov
cwtl
mov
xor
adc
push
dec
js
and
mov
sahf
cmpsl
push
cld
jle
xchg
jl
cmp
into
sub
popl
into
out
aad
and
cmc
dec
mov
scas
movsl
xchg
or
sti
and
ret
gs
ja
and
addr16
jecxz
xchg
push
mov
fisubs
leave
xor
cmp
xchg
push
ret
inc
cmp
in
and
xchg
ss
and
pop
shlb
push
jb
rorl
mov
fists
jno
or
or
jbe
ror
popa
jns
push
imul
clc
mov
imulb
das
shlb
or
and
aas
gs
jle
jno
jge
push
push
jae
sub
or
loopne
int3
or
pop
mov
sbb
push
jae
addr16
cmp
rcrb
add
add
mov
xor
test
jo
adc
pop
data16
fnsave
mov
jmp
dec
push
clc
sbb
lret
inc
dec
nop
sub
jp
dec
ret
jae
dec
outsb
daa
add
inc
test
shrb
repnz
mov
push
andb
std
lahf
lret
adc
lods
repnz
enter
ret
sbb
stos
repnz
call
imul
pand
je
cwtl
dec
push
inc
decl
mov
pop
mov
or
pop
sbb
xchg
imull
mov
pop
addl
leave
mov
fwait
pop
or
push
std
xor
ret
test
cld
jo
cwtl
popa
pop
dec
or
lock
pusha
cltd
xchg
mov
mov
mov
cmpsl
test
dec
sbb
sub
scas
iret
repz
push
mov
pop
pop
add
inc
out
xchg
cmp
push
je
arpl
stos
push
or
adc
or
push
stos
add
cli
mov
push
xor
adc
add
cmp
std
sti
ret
jno
pusha
inc
leave
ljmp
das
testl
insb
leave
sub
test
ds
aas
cmp
mov
pop
mov
sbb
add
faddp
push
adc
ja
mov
mov
movsl
mov
fbstp
rolb
dec
out
addb
fdivp
ret
gs
divl
outsl
gs
filds
bound
pop
sub
int
xor
jae
sbb
cmp
inc
push
fcomps
mov
shl
mov
or
hlt
mov
pop
shl
arpl
dec
roll
adc
sbb
jno
int3
mov
push
cld
pop
xchg
adc
lock
mov
cld
cli
or
out
cld
cmp
stc
jmp
mov
mov
test
lds
aam
imul
nop
add
std
enter
mov
cmp
sbb
out
dec
mov
jns
pop
je
out
sbb
cli
sbb
pusha
add
inc
dec
push
xor
cltd
stos
aas
jecxz
jb
sbb
or
insb
or
push
jecxz
repz
dec
out
mov
sbb
sti
in
orb
shlb
xlat
push
add
or
ja
leave
jne
push
lahf
dec
outsb
dec
orl
jp
and
rcrb
pop
movsb
mov
lahf
mov
ret
stos
icebp
lods
mov
push
xchg
in
stc
aaa
inc
xor
mov
jns
and
lods
ljmp
pusha
leave
xchg
pop
movsb
jp
arpl
lods
sbb
mov
fstpl
jmp
stc
sub
push
sub
repz
mov
mov
fimuls
aam
xchg
inc
mov
jno
push
xchg
push
ret
xchg
int
sub
aad
mov
es
andl
aaa
aas
cmp
repnz
movsl
xlat
pushf
std
mov
sbb
movsl
xchg
out
jp
pop
inc
fsub
jl
sbb
ret
dec
nop
xor
jle
cmp
xchg
lret
popf
lret
dec
flds
mov
xchg
cld
mov
mov
dec
cmc
push
enter
ja
out
test
pop
mov
push
arpl
xor
insl
sbb
xor
mov
pusha
lret
xor
xor
clc
dec
imul
hlt
outsb
mov
fimull
xor
xor
lret
add
jp
adc
push
mov
scas
insb
add
test
add
xchg
jge
pop
mov
enter
inc
rclb
xorb
mov
loopne
loop
cmpsb
mov
mov
loope
pop
lret
mov
add
jle
push
popa
add
xchg
rorl
inc
mov
adc
scas
in
stc
dec
and
test
popa
or
sub
fldz
xorb
sti
call
sbb
fs
aas
imul
cmp
test
stc
lahf
ror
xor
inc
pop
mov
icebp
nop
inc
int
sub
mov
xchg
test
popf
sbb
push
test
cli
mov
mov
lret
adc
repnz
fiadds
imul
xor
outsl
sbb
mov
jbe
sarb
pop
insb
je
push
push
mov
xchg
jmp
cltd
mov
add
inc
cmp
pushf
or
pop
test
imul
and
cmp
push
or
in
xchg
inc
scas
cltd
xlat
daa
out
inc
mov
addr16
rorl
add
and
movsl
stc
jl
repnz
mov
nop
add
test
sahf
mov
and
in
popf
jg
out
ss
cltd
jle
sbb
cmp
jle
jle
jae
fiadds
and
movsl
jg
jl
hlt
cmpsb
dec
popa
cmp
xor
push
push
aad
clc
xor
xchg
adc
iret
mov
cwtl
mov
push
jp
mov
pushf
sub
mov
xchg
push
test
pushl
sub
sahf
mov
loope
push
mov
pop
xor
scas
iret
pop
js
push
or
jmp
inc
popf
adcl
cmp
xor
push
add
lods
test
int
hlt
push
push
or
icebp
enter
sysret
fsts
arpl
xchg
and
mov
dec
sbb
jo
jg
mov
sbb
add
cwtl
imul
push
arpl
add
mov
mov
jbe
pusha
xchg
in
clc
and
in
mov
clc
out
jle
jp
sub
push
sti
outsb
std
push
push
or
push
rcll
cmp
add
inc
ss
std
sub
mov
sbb
je
mov
out
jns
fcompl
add
mov
lret
lods
jbe
test
stos
cli
dec
popa
dec
jle
adc
fs
adc
push
push
sbb
sbbl
dec
sub
iret
sbb
pusha
sbb
add
in
or
ljmp
cld
out
rcrl
add
fisttpl
or
sbb
test
stc
bound
jecxz
test
daa
mov
dec
pusha
sbb
mov
lods
xorb
decl
rcl
cmp
shl
fcomip
in
jmp
repz
pop
xchg
fidivl
mov
mov
add
and
mov
imul
in
ljmp
add
or
sbb
es
stc
addr16
daa
push
std
sub
push
fcompl
jmp
lret
testb
or
sub
lds
addl
jecxz
mov
xchg
in
lret
andl
add
lret
xchg
in
pop
push
sarb
insl
stc
sub
andl
insb
push
mov
in
scas
sub
mov
or
testb
sub
push
loop
lea
enter
loopne
mov
sbb
mov
push
in
daa
and
in
jnp
xchg
call
insb
lret
clc
push
or
sbb
xor
lret
push
sub
pop
dec
subl
aam
inc
push
mov
in
and
ret
out
movsb
rcrl
pusha
jmp
push
rolb
jbe
push
sbb
add
movsl
xchg
xor
add
insb
mov
dec
jl
fwait
dec
enter
dec
call
not
cmp
lret
rorl
xlat
add
out
fbstp
aad
xchg
aaa
mov
stc
lock
cwtl
jl
push
mov
pop
in
xlat
dec
mov
repz
scas
mov
mov
add
mulb
xor
cmc
aad
pop
mov
or
into
add
mov
and
fwait
imul
mov
jno
cwtl
cmp
pop
jp
daa
lahf
ljmp
in
push
mov
push
mov
outsl
loopne
sarb
jge
mov
in
ja
fs
xlat
call
sub
xchg
add
mov
and
jmp
xlat
mov
pop
xor
enter
push
xor
adc
mov
sbb
xchg
lods
inc
add
pushf
jo
mov
inc
sub
xor
cmp
testb
icebp
pop
cmp
lods
cmp
push
mov
in
xor
adc
xor
scas
and
lock
test
add
or
insl
cmp
bound
and
lods
pushf
movsb
xor
xor
cmpsl
pop
or
push
mov
sub
push
aam
mov
xor
sbb
mov
adc
push
scas
fwait
movsb
fnstcw
insb
push
mov
cmc
mov
mov
ret
add
add
lds
iret
cmp
shrl
outsl
scas
adc
enter
add
xor
ljmp
movsl
lahf
push
dec
mov
mov
jne
xchg
sbb
je
inc
mov
rolb
or
leave
push
enter
loope
andb
sbb
jg
test
jg
enter
mov
jb
bound
fnstcw
jno
outsl
pop
cmc
movsb
cld
mov
pop
and
cmp
adc
inc
rep
fwait
imul
mov
mov
and
xlat
icebp
dec
xor
or
sti
aad
push
or
or
outsb
xor
mull
push
shl
cmp
adc
sbb
aam
outsb
lea
lods
js
mov
aam
pop
pop
pop
daa
scas
inc
lods
idivb
pop
push
fcoms
mov
sub
cltd
popf
pop
scas
cld
fsubs
add
cmp
and
popf
repnz
add
mov
xorl
jno
jmp
roll
xchg
int
sbb
dec
test
lcall
movsb
cltd
movsb
mov
outsl
iret
fisttpl
xchg
cli
push
test
xor
lret
mov
clc
sub
mov
sub
xchg
cmp
mov
scas
dec
mov
in
pop
push
test
or
filds
popa
inc
scas
cmpsl
sahf
mov
inc
jae
push
iret
mov
mov
push
xchg
aas
and
cmc
insl
ficompl
mov
xlat
int3
pushf
sarb
cld
enter
ljmp
xor
jb
jle
sub
mov
es
jb
out
out
xor
mov
jg
and
stc
leave
out
jp
popa
cld
insb
inc
pop
int
mov
mov
rcrl
ret
add
lret
mov
mov
push
enter
aad
mov
fdivl
scas
adc
push
adc
sub
andb
movsl
jns
mov
mov
sub
push
sub
xor
std
mov
or
dec
fisttpll
sahf
xor
out
rclb
and
sub
push
fs
jne
dec
pop
push
imul
sti
rcrb
xchg
cmc
test
sti
mov
aas
xchg
dec
pop
fs
sub
outsb
leave
adc
inc
mov
pop
xchg
and
push
loopne
mov
popa
jmp
sub
jp
aad
lahf
inc
mov
aas
inc
cmp
ret
pmaxub
pop
enter
out
insb
loopne
lahf
pop
adc
dec
vrsqrtps
lret
or
roll
popf
enter
scas
dec
icebp
in
je
rcrb
mov
pushf
jb
inc
rol
sub
imulb
shll
adc
jl
mov
push
pop
and
enter
fdiv
dec
je
push
hlt
in
loopne
jo
adc
addb
mov
mov
cli
or
xchg
jle
or
or
xor
sarb
sub
mov
xor
into
or
add
add
and
xchg
daa
lret
add
mov
outsl
push
mov
mov
or
out
pop
sti
scas
cld
movsbl
cwtl
icebp
adc
test
sub
scas
mov
jp
push
lds
fwait
dec
lret
int3
push
shr
jle
xchg
cmpsw
bound
mov
jns
fldenv
jg
pushf
adc
mov
push
ljmp
or
lods
or
inc
fwait
or
mov
cmp
xchg
js
notl
mov
ds
stos
shll
in
ja
xchg
jnp
pop
pop
pop
xor
pop
popa
movsl
sub
int3
add
ds
ret
mov
shl
push
sti
into
jmp
dec
push
pop
fisttpl
push
adc
push
shrl
jne
cli
jns
aam
inc
push
cltd
or
and
insb
sbb
jecxz
out
jp
xchg
dec
mov
stos
stos
jne
repnz
xchg
daa
xor
insl
ffreep
sbb
or
push
loop
fdivl
or
dec
jecxz
pop
ds
inc
sbb
jl
xor
jno
mov
out
mov
sti
mov
out
iret
mov
stc
lret
xchg
rclb
jns
xchg
pushf
fidivs
repnz
daa
pop
pop
xor
scas
aas
int
push
add
lea
in
xchg
lahf
jb
sbb
sbb
fiaddl
pop
fimull
pop
xor
clc
or
int
lahf
pop
jg
jns
dec
mov
pop
sbbb
inc
and
push
lcall
push
and
fldcw
inc
adc
xor
add
das
fidivrs
daa
insl
jb
mov
pushf
test
idivl
dec
in
dec
mov
xor
sub
scas
pop
arpl
lahf
mov
sub
fildl
insb
push
and
add
push
inc
vmovntps
pop
icebp
cmp
lret
pop
popa
popa
mov
jns
jo
out
data16
mov
les
cs
ljmp
xchg
xchg
mov
xor
in
outsb
and
sti
pushf
into
cltd
cmpsl
mov
add
jo
cmp
jp
mov
push
sbb
shrb
or
pushf
lret
mov
fadds
divl
push
jb
push
inc
pop
mov
cmp
fcos
sbb
enter
mov
mov
jmp
fdivs
mov
in
mov
leave
cmp
jmp
or
mov
and
cltd
into
fsts
cmp
pop
push
sbb
cmc
mov
adc
or
out
loope
sub
js
cmpsb
sbb
shl
sbb
popa
cmpsl
ds
sbbb
jl
ret
xchg
in
fucomip
popa
pop
mov
cltd
and
jnp
mov
pop
adc
clc
jg
xchg
cli
and
and
cvtdq2ps
icebp
mov
ret
sbb
mov
stos
sarl
sub
sub
sbb
xchg
call
and
xchg
inc
push
xchg
mov
outsl
jge
mov
sub
push
call
lods
shlb
and
adc
scas
dec
xchg
ficoms
aad
daa
mov
les
mov
sti
fnstcw
mov
inc
xchg
hlt
xchg
xor
or
es
inc
or
pushf
enter
lock
shll
xor
fwait
jb
arpl
xchg
xchg
adc
inc
jg
sbb
in
jnp
adc
xor
pop
arpl
repnz
or
mov
pop
pop
sbb
pop
lods
jb
sbb
popa
es
sahf
xor
or
test
dec
sub
jnp
nop
pop
jg
je
test
xor
push
xor
dec
test
flds
jl
fwait
inc
add
fsubrl
ficomps
cmp
int
dec
jo
leave
sti
sub
mov
subl
popa
pop
or
pop
add
push
push
aas
push
sbb
ret
imul
shlb
or
mov
mov
loop
pop
xor
enter
test
out
sti
or
adc
cmp
push
add
fucomi
xchg
sbb
lea
jne
mov
into
or
adc
pushf
ret
imul
xchg
mov
and
cmp
pop
lret
lods
lods
mov
pop
cmp
dec
or
inc
mov
test
out
jns
out
sub
leave
xchg
test
push
adc
mov
das
fidivl
adc
decb
mov
out
xor
xor
lods
jl
mov
rorl
sbb
pop
data16
sbb
cwtl
dec
cmp
out
fdivr
es
cmp
cmp
mov
lock
fisubl
scas
xor
popa
sbb
xchg
fwait
sbb
mov
sub
rcrb
ljmp
lods
add
pusha
aaa
popf
cwtl
pmuludq
insl
rclb
rclb
pop
sbb
les
hlt
cmpsl
jo
mov
mov
pop
push
adc
adc
add
testb
or
cmpl
sarb
ja,pn
push
adc
lock
mov
jb
pushf
fistpl
int3
out
push
add
mov
mov
in
shll
data16
cli
test
cmp
jle
cmp
fs
jl
movsb
in
mov
push
outsb
in
leave
pop
mov
pusha
jp
addr16
loope
mov
jg
push
pop
jnp
push
pushf
add
mov
or
add
into
outsb
jbe
pop
cwtl
or
push
nop
xor
std
iret
test
sti
pop
inc
push
out
fnstenv
sbb
sti
add
mov
xchg
xchg
ljmp
aas
lret
push
mov
sarl
xlat
repz
subl
js
xorb
imul
sbb
ficoml
adc
cmp
inc
mov
xchg
xor
mov
in
scas
rclb
rorl
loop
cmp
adc
pop
mov
pop
cmp
xchg
addr16
and
idivb
fcoml
notl
ljmp
mov
xor
mov
add
icebp
adcl
daa
test
leave
inc
aad
lahf
and
test
dec
cs
pop
test
lds
jbe
lret
mov
clc
mov
lret
push
ds
xchg
jno
sarl
mov
inc
stc
stos
pop
cmp
aad
xchg
lea
out
dec
xchg
or
mov
int
aam
jg
rcll
fildl
add
cs
mov
add
pop
jbe
and
xchg
shll
jmp
in
push
cld
lahf
into
sbb
fcmovb
test
add
jp
mull
int
out
cmp
cmc
rorb
and
cmp
jmp
ja
push
add
movsl
sbb
sub
push
outsb
and
mulps
pop
rol
ljmp
pop
enter
stos
xchg
push
rcrb
mov
lods
gs
cld
dec
xchg
shlb
cs
sbb
ret
pop
outsl
xchg
call
negb
add
mov
cmpl
inc
mov
xchg
xor
jmp
pop
leave
sub
mov
push
out
mov
xchg
or
ror
out
cmc
xlat
jae
lods
nop
iret
cmp
push
sub
or
das
inc
fwait
lods
iret
push
dec
mov
and
test
lahf
aas
adc
mov
pop
xor
mov
scas
add
mov
and
notb
add
mull
sub
arpl
test
cmp
jle
push
pop
fstps
or
mov
xchg
add
and
add
gs
jp
stos
cmp
cmc
lods
rol
mov
ret
into
jge
xchg
shll
mov
movsl
fnstsw
scas
sbb
dec
nop
cmc
pusha
into
das
sbb
lods
push
sub
dec
mov
xor
cltd
xchg
gs
add
mov
cmp
mov
push
fs
xchg
adc
and
subb
xchg
sbb
jge
jne
dec
lea
inc
cmpsb
push
mov
cmpsb
icebp
pop
sbbb
sub
mov
jle
cmpsl
jmp
dec
insl
fbstp
arpl
ds
fsub
rcrl
test
mov
push
orl
cmpb
cmp
cmpsl
xorb
popa
shll
xchg
mov
es
cmp
fdivrs
fwait
repnz
mov
rol
adcl
aad
movsb
daa
outsb
jmp
aas
in
or
inc
and
pushf
add
or
cmp
mov
sbbl
xor
lds
push
cmp
push
push
xor
cltd
jge
cmpsb
sub
mov
sbb
xchg
leave
mov
lahf
dec
push
sbbb
adcb
mov
loop
jb
dec
and
ret
push
fsubs
inc
mov
mov
mov
cwtl
repz
sub
jnp
fwait
repnz
jp
data16
ret
leave
and
jge
loop
mov
pusha
mov
mov
scas
sbbb
mov
adc
sbb
ret
or
int3
pusha
xchg
cmp
mov
aam
mov
gs
test
sbb
cmpsb
jmp
call
fadd
adc
into
add
and
js
jns
iret
repz
add
dec
shl
cmp
sbb
push
lret
in
fimuls
mov
shlb
fimuls
mov
add
mov
std
es
pop
ret
shlb
sub
outsl
inc
sqrtps
mov
dec
jl
int3
pusha
stc
lds
jg
jl
into
fwait
subb
das
mov
insb
jb
inc
fiadds
int3
jmp
xchg
dec
xchg
mov
xchg
outsb
jno
xorb
add
mov
repnz
jnp
pop
xor
xor
sbb
cwtl
repz
shlb
imul
cmp
cmp
xor
fs
adcl
pop
xor
or
aaa
dec
nop
cmc
cltd
pop
xchg
add
out
lret
xchg
std
jo
dec
pusha
push
aaa
cmp
or
and
mov
xlat
xor
pop
or
xchg
add
sti
leave
cld
xchg
cmp
xchg
dec
dec
dec
jns
outsl
sti
adc
out
push
mov
movsl
fdivr
data16
imul
ret
pusha
mov
mov
sbb
lock
loope
pop
or
mov
das
and
sbb
cmp
mov
mov
mov
roll
loopne
jb
sub
pop
mov
push
jmp
pop
cmp
sbb
adc
dec
jmp
adc
lahf
adc
sahf
in
inc
cmc
fnsave
mov
daa
out
mov
mov
cmp
insl
xchg
jo
inc
adc
xor
pop
add
mov
and
add
jl
mov
sub
add
mov
xchg
xor
call
inc
mov
repnz
fidivl
test
gs
sub
leave
mov
shrl
pop
loope
sbb
incb
xor
in
cmp
cld
test
divps
mov
xor
test
xchg
cmpsb
mov
mov
js
mov
push
shll
rolb
movsl
in
jge
xchg
sub
aas
jmp
hlt
les
sbb
mov
dec
jbe
push
out
pop
imul
dec
push
sti
pop
or
mov
nop
sbb
xchg
pop
xchg
push
je
int
fidivrl
insb
dec
dec
movsb
mov
mov
dec
sbb
sti
icebp
movsl
call
push
push
cld
ljmp
sub
mov
cltd
pop
sbb
and
xchg
out
cmp
and
stos
lret
cmp
add
clc
mov
lret
insb
clc
jge
mov
js
jno
push
test
adc
int3
ficoml
xchg
inc
ds
xchg
call
lahf
fdivl
repz
jbe
shlb
aam
inc
js
push
mov
adc
mov
or
aas
sbb
pop
loopne
cmp
xchg
sarl
bound
sbb
pop
pop
jge
mov
inc
cmp
pop
push
aad
icebp
jb
jnp
je
aaa
pop
pop
rorl
push
sub
jbe
in
jne
outsb
fimuls
jns
pop
or
popa
loop
stos
testl
sub
enter
jge
pop
call
dec
mov
xchg
fcomip
jbe
xchg
mov
lock
les
dec
fucom
push
repz
pop
lret
loopne
mov
or
dec
adc
xchg
testl
inc
sbb
fadd
fs
lret
sbb
jle
or
sbb
dec
stc
dec
inc
fsubrp
stos
and
sub
adc
aaa
sub
rcr
out
jmp
dec
sti
cld
cmpsl
push
push
xchg
inc
pop
or
addr16
fwait
lods
mov
jae
iret
dec
jecxz
cmpsb
out
outsb
pop
xchg
and
repz
inc
lcall
xchg
js
cmp
or
pusha
push
loop
pop
pop
mov
fdivrs
loop
std
adc
or
adc
ss
xchg
xchg
xchg
inc
cld
icebp
push
test
test
sbb
dec
enter
scas
push
stos
add
stc
push
inc
rcl
or
loope
adc
jecxz
xchg
pop
std
jmp
mov
cmp
gs
es
pop
in
cmp
xlat
cmp
push
add
icebp
mov
mov
xchg
clc
lea
lret
mov
pop
add
jmp
out
jno
insl
enter
lea
dec
lret
sbb
pop
pop
repnz
adc
dec
movsb
and
dec
mov
daa
into
pop
out
cli
jbe
inc
xor
push
xor
lcall
fcomps
jnp
xor
add
mov
aam
ret
fmuls
std
stc
xor
mov
inc
dec
push
or
insb
jb
push
inc
push
orl
sti
imul
push
pop
cmpsl
sahf
sbb
in
push
pushf
stos
mov
sbb
add
push
sti
int
mov
inc
aaa
push
cmp
fcomp
push
movsl
xor
andl
xchg
aaa
sbb
fwait
daa
add
shrb
mov
sub
cmpb
mov
or
setl
sarl
xor
into
lahf
das
pop
inc
push
mov
adc
int3
rorl
rcll
iret
jmp
nop
sub
mov
cld
add
cmp
jp
int
std
xor
pop
sbb
cmp
dec
pop
ficompl
pop
ret
inc
outsl
xor
jbe
push
push
xchg
sbb
fnsave
andl
into
mov
push
cli
or
mov
decl
and
push
push
fwait
or
nop
jmp
int
sbb
dec
ljmp
mov
xor
mov
push
jne
int
mov
aas
push
add
in
mov
inc
xchg
shrl
xor
iret
lds
dec
jnp
jmp
adc
pushf
adc
sub
adc
add
mov
xlat
andl
cmp
arpl
mov
insl
imul
mul
rolb
lock
roll
jo
and
gs
cwtl
cmp
pop
mov
mov
mov
sub
je
xchg
fs
mov
shrl
pop
pop
aas
mov
sub
sbb
lahf
ss
dec
add
xor
cmpsl
loopne
scas
ret
mov
lods
ret
call
clc
sub
insl
lods
fmul
nop
mov
inc
sbb
mov
les
inc
push
dec
inc
loope
mov
js
push
imul
hlt
cmp
inc
pop
and
nop
ret
push
push
xor
fimull
sub
jnp
test
cli
or
mov
sbb
cmp
addb
mov
inc
pop
pop
and
into
dec
sub
es
xchg
syscall
or
sub
aam
mov
push
dec
lcall
insl
mov
xor
sbb
and
jmp
test
in
aam
ret
rcr
xor
outsl
mov
inc
addb
js
sub
sbb
inc
nopl
in
push
push
popf
ja
dec
loopne
sbb
inc
xlat
cmp
in
sahf
xor
mov
add
mov
xchg
stc
mov
fidivs
jmp
and
mov
bound
pop
pop
jmp
mov
lcall
mov
pushf
push
sub
lds
rcrl
in
xor
data16
lock
ret
in
add
das
cmp
pop
cmpsl
imul
dec
hlt
loop
pop
iret
out
sub
aas
out
maxps
push
pop
cmp
sub
insb
jbe
dec
dec
lea
push
lds
out
repnz
push
dec
jbe
pop
repnz
mov
fs
es
dec
sub
loopne
fbld
inc
jle
leave
fldt
and
popa
pop
ret
scas
mov
pop
int3
xor
push
div
fistps
or
fs
out
out
aaa
push
outsb
lea
popa
inc
sub
out
mov
xor
add
stc
hlt
clc
or
jne
fdivrs
nop
mov
push
xor
jo
mov
or
ljmp
jb
shl
faddl
pushf
in
adc
mov
push
gs
pop
or
adc
outsl
cli
xchg
xchg
sub
jl
negl
dec
dec
xchg
push
sti
mov
adc
into
imul
pop
sbb
das
ljmp
imul
mov
nop
xor
mov
ret
inc
enter
icebp
fdivrs
xchg
adc
push
adc
and
iret
push
jns
sbb
jecxz
inc
mov
ljmp
fxch
outsb
rcrl
jnp
out
and
in
adc
icebp
mov
sahf
stos
xor
fwait
sti
pop
lods
push
add
sub
pop
ds
dec
inc
jg
jmp
and
inc
xor
lock
ds
xor
mov
lret
xchg
jecxz
outsl
std
cmc
inc
into
adc
xchg
jge
and
dec
data16
lahf
cld
sti
xlat
adc
push
iret
hlt
sti
clc
sub
test
sarl
jbe
inc
lods
cmp
in
xlat
into
dec
jbe
sahf
into
inc
or
xor
sti
lcall
mov
test
sub
ja
dec
lods
cs
ss
or
add
lret
sub
pop
sbb
insl
push
push
dec
mov
in
enter
aad
pop
inc
pop
jmp
sahf
shll
jbe
jge
jmp
into
sbb
add
out
jge
sbb
cmc
jns
div
pop
and
sahf
movsl
fldt
cld
aam
pop
das
movsl
lds
inc
push
add
push
ret
imul
mov
jl
and
rcrb
mov
pop
pop
std
stos
or
clc
addr16
daa
xor
push
mov
outsl
push
sbb
and
pop
dec
push
xorl
xchg
push
or
pop
shlb
aad
or
inc
pop
sub
pop
pop
scas
adc
iret
push
cs
xor
xor
ljmp
push
mov
dec
icebp
mov
ljmp
inc
cmp
cli
xchg
mov
push
shl
adc
loop
loope
push
inc
in
dec
cmpl
mov
inc
adc
hlt
aas
lds
mov
xor
js
xor
cmc
leave
push
imul
cld
sahf
mov
test
push
pusha
mov
gs
add
leave
adc
push
jnp
xor
cwtl
sub
mov
lret
stos
clc
mov
sbb
and
xchg
fadd
imul
sti
in
popf
pop
leave
arpl
dec
test
test
ret
sbbl
adc
cmpsl
movsb
push
test
pop
and
adc
imul
cmp
sahf
bound
mov
repz
pop
in
popa
sti
add
sbb
sbb
lret
pop
adc
jne
or
mov
aas
push
into
push
xchg
adc
push
add
jecxz
aas
call
sbb
mov
ja
fstps
dec
pop
dec
push
inc
mov
and
cmp
xor
ret
jmp
cltd
lea
out
jo
ja
adc
mov
mov
push
add
test
iret
int
or
in
mov
and
xor
xchg
in
je
sbb
ja
mov
outsb
jl
shll
fidivrl
mov
adc
xchg
ss
movsb
mov
cmp
in
push
sub
repz
jb
in
mov
mov
fsubrl
daa
int
fdivr
mov
aam
insb
cwtl
xor
dec
shlb
sbb
lods
mov
out
hlt
adc
cmp
adc
notb
jae
push
xchg
dec
sbb
adc
rcrb
jns
jg
aam
xchg
jp
clc
sub
cmpsb
addr16
sub
das
mov
push
jge
roll
mov
loop
mov
movsl
repz
cmpsb
add
cld
xor
ja
enter
mov
jp
inc
js
jg
inc
rorb
gs
mov
je
mov
or
out
cmc
shlb
jno
lret
push
fstps
add
test
push
loopne
push
pop
dec
repz
push
outsb
mov
pushf
fwait
pop
dec
call
pop
jne
add
cmp
jno
push
or
add
out
mov
call
xor
jle
jbe
shl
je
jmp
shll
mov
imul
push
mov
icebp
ret
mov
inc
and
rorb
push
cmc
push
ss
test
inc
rcl
out
addl
lcall
push
pusha
and
xchg
cs
and
aaa
xchg
cmp
jle
sbb
es
stos
xchg
lret
or
jae
inc
push
gs
pop
rep
ret
ds
xchg
int
xchg
mov
sbb
dec
xchg
push
test
sbb
iret
mov
imul
xchg
das
pop
push
xor
cmp
dec
cld
push
sbb
fcompl
pushw
xchg
je
mov
mov
es
sarl
mov
and
popf
xchg
mov
movsb
movsl
dec
xor
mov
lret
outsb
mov
mov
push
add
aam
scas
movsb
cmp
fwait
out
iret
std
pop
jns
pop
jae
pop
rclb
and
sub
pop
enter
adc
sahf
mov
mov
push
fisubrl
loopne
lret
push
push
fs
movsb
leave
aad
jmp
mov
je
lret
pop
and
imul
inc
jecxz
xor
pop
stc
mov
repz
jmp
stc
sbb
jg
ffree
fnstsw
sbb
mov
lcall
pop
out
or
mov
rorb
pop
sub
inc
and
mov
push
mov
out
lahf
pusha
neg
out
stos
mov
sysexit
sub
sbb
aas
cmp
rcl
dec
lret
loop
adc
and
pop
mov
int
push
pop
dec
ret
outsb
fiaddl
add
fdivrl
pop
cli
sti
je
jg
adc
ljmp
mov
es
movsb
cmp
lcall
pop
out
pop
ret
out
cmp
adc
xchg
push
push
cmpsl
lcall
dec
jp
jge
test
dec
sub
out
pop
or
das
jbe
mov
or
jo
xchg
dec
jo
mov
inc
mov
sub
sbb
jp
loop
pop
call
lret
xor
cmp
xor
jnp
test
mov
outsb
jg
mov
rol
mov
ljmp
stos
cmpsl
sbb
lods
and
mov
sbb
jo
cmc
mov
or
shll
repnz
add
mov
inc
loop
dec
and
je
pop
jae
xchg
push
testb
aas
xchg
mov
orb
xchg
scas
mov
aam
shl
jmp
add
int
xor
cmp
add
cmp
popf
cli
push
mov
bound
inc
or
push
fwait
subl
pop
push
push
jl
sub
adc
or
mov
movsb
mov
and
lea
xor
xchg
sbb
jecxz
fldenv
xor
mov
and
insb
mov
sbb
jne
ds
or
push
mov
mov
stos
std
push
or
dec
fidivl
xorb
jge
sbb
jb
cmp
addr16
jp
inc
add
pusha
pop
pop
dec
dec
pop
decl
mov
jl
jne
cmp
out
cmpsb
icebp
push
push
sysexit
push
or
add
jae
das
sub
add
bound
mov
add
pop
cmp
mov
and
mov
repz
sbb
cmp
adc
xchg
push
mov
mov
mov
in
sub
xor
dec
inc
adc
repnz
inc
cltd
test
jmp
out
dec
pop
daa
pop
shl
xchg
sbb
into
or
nop
jns
mov
jo
jo
and
rcr
or
fildl
xchg
mov
mov
fstps
mov
sahf
stos
cld
daa
dec
pop
adc
pop
sbb
lods
sarb
mov
cmpsl
pop
push
loopne
or
cmp
inc
cmp
into
vcmpss
push
xchg
adc
int
shlb
inc
rorl
mov
daa
ror
push
cmpb
dec
mov
test
js
das
rol
sarl
ret
mov
and
imul
and
test
fisubl
test
pop
hlt
in
xor
cmp
and
push
int
mov
sbb
pop
jg
ja
sahf
mov
popf
rcr
scas
ds
xchg
nop
stos
hlt
xor
mov
lea
xor
nop
sbb
sahf
rcrb
mov
std
or
clc
jle
scas
scas
aas
xor
mov
int3
in
adc
ret
decb
lock
or
mov
daa
ficoms
adc
enter
mov
sti
aas
aad
xchg
xchg
cmp
mov
inc
mov
nop
xchg
movsb
push
stos
cld
scas
dec
push
mov
jne
in
dec
in
jne
xchg
mov
mov
pop
sub
and
js
mov
push
or
cmp
hlt
mov
xchg
out
int
jae
stos
or
pop
adc
pop
sub
lods
and
cwtl
fnstsw
adc
add
pop
dec
lock
xchg
pop
hlt
shll
cmc
in
mov
loope
jb
adc
xor
lock
xor
inc
call
sub
adc
jb
adc
mov
cmp
jmp
out
ljmp
mov
adc
movsb
xchg
adc
mov
in
jmp
jo
ret
push
or
cli
loope
aaa
adc
xchg
fsubr
inc
pop
clc
pop
jae
jo
enter
aam
lods
ds
mov
xlat
pushf
xor
adc
sbb
es
lret
sarb
ljmp
sub
idivb
lock
js
fadds
xor
push
imul
mov
push
andb
or
shlb
ficompl
in
push
jmp
or
xchg
and
repnz
dec
push
lahf
mulb
xor
imul
cmp
gs
scas
outsb
dec
pop
mov
mov
scas
int3
out
pop
add
lahf
mov
sub
add
push
sbb
mov
adc
enter
ret
sahf
or
dec
fcomi
push
inc
test
push
sub
cmp
int
cmpsb
push
lods
insb
mov
imul
jge
int3
push
std
inc
fwait
std
pop
lea
ds
test
dec
dec
cmc
movlps
rorb
cwtl
jo
mov
scas
je
add
in
insl
aad
sbb
xchg
add
xchg
or
or
in
imul
std
inc
fdivrp
fwait
or
test
dec
fptan
or
jmp
xor
xlat
insl
imul
fwait
and
bnd
scas
aaa
mov
dec
ljmp
adc
jb
mov
xchg
rcr
ret
mov
pop
pop
fwait
stos
mov
int
dec
push
aam
cli
dec
mov
dec
in
insl
sub
lahf
divl
lea
pusha
repnz
xor
lock
mov
mov
arpl
adc
adc
xchg
in
in
mov
nop
xchg
jmp
inc
leave
dec
stc
into
mov
stos
push
sub
lcall
mov
std
jl
inc
add
aad
cmc
scas
sbb
sbb
sbb
fldenv
in
hlt
pop
xor
jo
andb
or
and
add
sbb
outsb
stos
jb
jbe
shlb
ja
add
sbb
adc
scas
pushf
add
mov
mov
dec
stc
loop
cmp
pop
mov
bswap
adc
ljmp
pop
test
xchg
push
pushf
xchg
and
mov
out
jne
dec
cmc
sub
aas
or
add
push
pushf
or
std
inc
jge
leave
mov
movsl
mov
jbe
insb
pop
pop
rolb
mulb
aad
or
std
aaa
enter
jg
test
sub
push
pop
push
and
cli
popl
jl
xchg
je
movsb
or
inc
jns,pn
inc
stos
dec
mov
push
adc
sbb
jae
pop
lock
cmpsl
xorb
jle
mov
inc
popa
lea
out
or
call
push
ror
aad
mov
imul
dec
ljmp
jb
cmc
sub
out
dec
lahf
xchg
mov
mov
add
mov
dec
push
and
rcrl
mov
sahf
fidivs
outsl
or
lock
cwtl
subb
sarb
xor
jl
sbb
adc
pusha
lea
fwait
mov
sar
cmp
push
jp
cmpsb
in
cmp
lods
pop
lea
ret
and
sub
jnp
push
shr
fimuls
push
in
ljmp
hlt
test
je
stos
and
add
jno
xor
iret
mov
cs
std
dec
xor
fimuls
hlt
xchg
and
sub
test
mov
dec
enter
jae
jae
lret
adc
xor
inc
pop
jmp
fdivs
inc
adc
push
outsl
call
dec
jnp
clc
gs
loope
push
push
dec
and
enter
xor
mov
pop
mov
and
or
xchg
xchg
enter
inc
mov
shll
andb
push
je
cmp
inc
fcomps
mov
sub
mov
aas
aad
popf
push
out
daa
mov
leave
popf
aaa
stos
xor
test
mov
pop
lds
shlb
jne
add
or
fdivs
outsl
sub
nop
pop
or
data16
mov
sub
ds
jl
dec
cmp
push
jp
fsubrl
cld
sub
scas
xor
cmp
out
popf
xor
ret
test
xchg
sbb
dec
dec
insl
adc
aam
fstpt
push
enter
addr16
fwait
cwtl
adc
ret
mov
inc
adc
pushf
xchg
mov
inc
xor
mov
pop
cmp
xchg
in
out
push
insl
cli
in
jns
pop
out
sbb
ss
nop
cmp
scas
jns
jl
sahf
mov
sti
cli
lret
sbb
pop
fsts
in
in
lret
pusha
and
pushf
and
lods
mov
dec
push
push
xchg
and
in
push
or
dec
pushf
in
mulb
add
movl
scas
popa
adc
dec
inc
aas
das
mov
and
scas
dec
dec
and
nop
hlt
ss
inc
in
aaa
xchg
inc
push
xor
nop
into
cmp
outsl
test
lret
adc
mov
xor
jae
dec
outsl
loop
sahf
xor
mov
adc
jo
ss
enter
repz
sub
xchg
ficompl
add
sahf
data16
mov
into
mov
push
dec
std
pop
clc
xchg
inc
ss
lret
stos
lret
movsl
rclb
imul
xchg
sub
js
sbb
mov
push
and
sbb
out
and
cmpsb
xor
push
inc
xor
aas
and
jo
add
pop
sbb
jmp
push
iret
pop
in
test
jle
addb
mov
out
iret
push
es
mov
shl
xchg
cltd
sub
imul
cmp
aad
int
into
fsubrl
out
popa
mov
sbb
mov
or
sahf
xchg
jmp
mov
push
lret
fildl
imul
icebp
mov
pushf
loopne
sbb
fwait
shl
jmp
lahf
cmp
insl
sbb
cmpsl
xchg
loope
mov
lods
lds
rorl
insb
sub
jle
pop
jo
hlt
fucompp
inc
ja
push
lock
test
push
dec
push
jl
adc
push
or
xchg
adc
lcall
test
jle
xor
nop
int3
pop
mov
mov
mov
adc
adc
int
pop
shl
mov
push
imul
push
mov
addr16
ss
mov
sti
repnz
addb
or
ret
sahf
mov
sahf
adc
dec
jmp
add
push
inc
jmp
outsl
scas
lret
lods
cmp
push
ds
fisubrl
aas
and
in
jno
add
ja
xchg
sbb
mov
insl
out
adc
addr16
pop
lods
pop
cmpsl
lret
or
jbe
jns
lock
iret
pop
loopne
pop
movsl
out
or
mov
out
push
sbb
fstpt
dec
mull
ret
sbb
test
push
scas
pop
mov
pop
sub
ja
push
xchg
push
sbb
or
jp
cmp
add
xor
dec
add
out
jne
mov
pop
adc
sbb
shll
scas
mov
pusha
adc
add
push
daa
mov
lock
dec
enter
mov
jne
jb
out
dec
test
mov
dec
ret
rcll
aam
lret
push
arpl
pop
cmp
jmp
mov
js
ret
and
cmp
dec
ror
popa
inc
add
sub
stos
movsb
dec
test
out
push
xchg
xchg
xor
or
xor
xor
or
in
shlb
xor
fistps
ja
mov
xor
jo
xchg
add
jp
fs
lret
imul
or
adc
and
sub
sub
out
add
hlt
xor
sahf
mov
push
sub
aaa
pop
cltd
sbb
cmp
adc
add
fsubp
push
xor
and
mov
or
ljmp
adc
cmp
hlt
inc
pop
stos
inc
push
out
aas
cmpsl
or
pushf
js
pop
and
les
test
pop
in
jbe
rcrb
adc
dec
cltd
mov
xor
cmp
mov
test
in
scas
mov
hlt
inc
jns
inc
push
faddl
frstor
mull
jns
xor
sti
lods
das
push
cmp
lds
sub
push
mov
xchg
pushf
icebp
xor
gs
int3
sub
in
push
mov
shl
test
ja
inc
movsb
sbb
push
pop
icebp
and
inc
mov
jae
mov
scas
mov
push
push
jmp
ds
outsl
ss
cmpsb
movsl
xor
stos
inc
push
aad
xor
or
xchg
lods
push
dec
je
mov
push
nop
xchg
mov
sahf
popl
push
jne
pop
ss
or
xlat
fwait
rol
xor
dec
lret
jl
add
cli
push
xor
dec
into
xchg
and
adc
sbbl
cmp
inc
jnp
aam
and
and
enter
push
inc
test
adc
sbb
arpl
pushf
adc
and
insb
cltd
jnp
aad
push
les
jecxz
xchg
in
adc
pop
sub
fnstsw
leave
cmp
out
and
and
cld
imul
mov
lret
sahf
mov
or
push
arpl
in
cli
rorl
mov
jmp
add
ljmp
hlt
test
in
das
or
push
arpl
stc
add
push
ss
out
shl
cmpsl
in
rclb
pop
jge
pop
mov
int
adc
out
sti
icebp
daa
enter
in
shll
int
inc
and
and
xchg
xor
stos
jb
mov
das
or
xlat
fsubl
sbb
loop
loop
in
ljmp
add
or
call
imul
cmpsl
ss
cmp
cltd
xor
mov
xor
scas
orb
jmp
pop
scas
pop
nop
inc
lcall
imul
sti
jbe
pusha
xchg
xor
dec
inc
mov
adc
movsb
pop
jp
jge
es
jno
aad
mov
add
sahf
in
lock
es
pop
xchg
testb
nop
fwait
sarl
sti
fsubrp
dec
inc
inc
mov
cmpsb
mov
push
dec
int3
push
iret
or
push
sub
outsb
int3
jo
cmp
adcl
rolb
mov
stos
xchg
mov
inc
fucomi
movsl
in
scas
mov
ret
adc
cmpsb
mov
scas
mov
ret
sti
jae
leave
movsl
fmuls
insl
mov
in
dec
xchg
inc
sub
notl
mov
adc
andl
je
icebp
jno
test
movsb
sbb
mov
pop
in
mov
pop
xchg
push
fstps
adc
add
push
inc
xchg
les
xchg
ljmp
sti
std
lea
rorl
lods
lods
cmp
cmpsb
mov
fwait
cmp
int3
jge
pop
cmp
xor
fs
mov
cld
std
arpl
imul
jmp
sub
pushf
es
xor
divl
jp
and
popa
mov
in
mov
fldenv
push
fcmovne
clc
iret
test
or
dec
mov
mov
movsb
pop
repz
cmp
dec
icebp
das
repnz
jp
sub
sbb
sbb
push
enter
inc
push
imul
int3
fisubrl
test
pop
jo
cs
xchg
add
outsb
jnp
mov
js
xchg
iret
ss
outsl
std
pusha
nop
xor
inc
push
ret
push
in
add
lea
jne
push
pop
je
movsb
sbb
jcxz
push
mov
push
loope
sahf
and
mov
xor
in
sub
mov
push
pop
stos
enter
lahf
cmp
jmp
add
cld
insl
mov
rol
iret
sbb
ja
gs
movsb
jl
push
pop
out
js
imul
cmp
mov
pop
mov
std
adc
mov
xchg
add
das
out
push
cmp
fnstcw
jbe
data16
call
push
outsl
js
pop
inc
test
jnp,pn
adc
push
jge
cmc
leave
cli
fs
xchg
cmp
and
jbe
ja
fildll
clc
lret
pop
cmc
andb
jnp
mov
arpl
lods
jno
jb
jo
imul
xor
inc
cmp
adc
dec
loopne
sub
or
jae
xchg
in
mov
les
inc
jno
test
aas
jmp
mov
aad
inc
adc
addl
mov
inc
dec
jbe
mov
das
push
jle
pop
sbb
fs
mov
outsb
arpl
mov
push
sbb
inc
outsb
push
xchg
adc
xlat
ss
xchg
test
or
push
bound
jg
dec
xchg
js
jne
lock
sbb
pop
xchg
mov
mov
out
lock
add
in
xor
mov
dec
ret
push
movsb
add
cld
push
out
mov
adc
lods
or
pop
sbb
scas
mov
adc
sarl
aaa
lea
pop
xchg
gs
adc
push
add
fmull
xor
repnz
and
enter
push
mov
jle
pop
mov
sahf
mov
push
mov
sahf
nop
out
adcb
mov
cwtl
jbe
add
lea
push
sub
std
push
imul
xchg
stc
stos
lcall
call
icebp
fwait
mov
dec
ss
fucom
dec
mov
loope
lret
jle
dec
je
pop
sahf
and
outsb
leave
rcl
pop
imul
cmp
jb
in
mov
loope
je
lea
popf
les
mov
fnstcw
test
mov
leave
lods
aaa
pop
pop
cs
mov
adc
in
aaa
nop
push
mov
ljmp
cld
gs
scas
xchg
xor
dec
mov
nop
ja
adc
xlat
outsl
xchg
jno
leave
mov
ljmp
inc
das
cmpl
leave
or
cmp
arpl
lock
daa
and
cmp
or
aas
pop
pop
loope
cwtl
adc
and
stc
or
pushf
cmp
mov
dec
sbb
inc
cwtl
push
sub
and
push
cmc
sub
inc
cmp
lods
imul
movsl
jl
rcll
pop
push
cltd
rclb
add
les
sbb
enter
cmp
inc
or
sti
mov
pushf
arpl
call
lret
mov
lahf
outsl
xor
in
mov
nop
mov
jmp
outsb
mov
cli
dec
loope
int3
or
lahf
jb
in
scas
push
leave
adc
icebp
test
cmpb
xchg
push
mov
lds
stos
jns
xor
cmpb
jno
mov
pop
mov
or
mov
mov
and
loope
inc
cmp
pop
jle
test
cmp
sbb
in
adc
iret
dec
jge
stos
pop
lds
movsl
sub
in
out
ja
push
cmp
mov
outsb
xchg
hlt
push
mov
ja
sub
pop
add
and
ret
js
push
daa
inc
cmp
shlb
pop
mov
xor
cmp
xchg
sub
push
cltd
fucomip
jo
jae
daa
bound
in
push
lahf
xchg
ficoml
mov
js
mov
sbb
stos
mov
js
leave
repnz
lods
inc
int3
xchg
in
push
lds
push
cmpxchg
dec
sbb
dec
shl
cmp
inc
pop
insl
adc
call
and
subb
je
insb
cmpsb
movsb
scas
mov
sbb
aad
lods
inc
fbstp
dec
sbb
lods
data16
xchg
cmpsl
movsb
movsl
jnp
fcoms
push
mov
ja
cmpsb
test
xchg
lret
sub
pusha
insl
out
dec
inc
lcall
pop
xchg
mov
push
loop
insb
es
pop
adc
jns
inc
js
int3
or
aaa
xchg
arpl
jb
popl
jecxz
lock
dec
lahf
xchg
out
jp
inc
jp
test
cmp
xchg
insb
gs
sub
xchg
lcall
stos
test
push
cwtl
push
pop
sbb
std
sbb
mov
lcall
lcall
jmp
cli
mov
mov
cmpsl
sub
cmpsl
ds
add
stc
pop
jo
outsb
and
pop
shrb
pushf
sbbl
fistpll
in
inc
jnp
xchg
xchg
xchg
fsubs
inc
jl
scas
push
cmc
cmp
cmp
mov
and
addr16
cmp
mov
and
xchg
pop
jle
sbb
mov
pop
mov
leave
dec
push
cmpsl
repz
pop
lret
pop
mov
xchg
inc
nop
xchg
outsb
dec
adc
nop
fisubl
nop
jl
imul
add
jae
or
or
cltd
mov
mov
bound
lret
push
outsb
xchg
aad
pushf
outsl
or
mov
shlb
xchg
sub
dec
fwait
add
inc
adc
xchg
pusha
mov
push
push
or
pushf
mov
clc
outsl
mov
inc
mov
push
dec
xchg
stos
sbb
push
cwtl
xchg
in
jle
mov
scas
sbb
ret
fistl
jae
mov
mov
in
inc
sbbb
jo
push
xchg
stos
jmp
jp
add
out
or
in
cmp
dec
loopne
shll
jns
xchg
pop
gs
cld
sub
cli
push
add
aam
fwait
sub
adc
dec
adc
repz
rorb
mov
jae
cmp
cs
call
outsb
int
pop
dec
pop
ja
repz
adc
je
and
dec
sbb
data16
fisttpl
add
xor
push
ror
push
icebp
aas
movsl
sbb
cli
fsubr
nop
jo
push
inc
ror
insl
fldl2t
sub
push
aas
outsl
jp
mov
shlb
sub
inc
pop
xor
pop
mov
sub
or
sub
sbb
mov
jmp
push
lds
sbb
cwtl
inc
dec
mov
into
adc
or
daa
enter
icebp
dec
call
or
lret
imul
xchg
lahf
dec
out
test
in
lods
aas
dec
sbb
xor
loop
xor
push
mov
or
mov
cld
aad
adc
inc
negb
rclb
pop
test
in
cmc
sub
lods
sub
scas
push
int
fdiv
pop
stc
mov
lods
jecxz
aas
jns
xchg
push
cmpsl
in
jno
xchg
xchg
outsl
pop
adc
ss
xchg
jmp
cmpsl
mov
mov
in
lret
jnp
aam
sbb
aaa
fisubrl
loop,pt
repz
enter
dec
pop
mov
adc
lret
pop
mov
iret
pop
out
xor
icebp
pop
lea
scas
aas
jnp
scas
jle
pushl
and
mov
mov
test
adc
int
adc
rorl
in
mov
and
mov
movsl
mov
scas
aas
stos
lcall
lahf
fisubrl
inc
ja
xchg
push
or
ja
mov
jae
inc
and
xchg
inc
sahf
xor
dec
imull
loop
jl
push
add
mov
xchg
les
je
clc
mov
dec
jae
filds
and
in
dec
mov
sahf
mov
push
cld
mov
aad
imul
mov
or
inc
mov
mov
sbb
sbb
sbb
inc
dec
out
xchg
ljmp
mov
and
inc
pop
mov
mov
lds
arpl
test
xchg
and
and
int3
or
nop
and
out
mov
aam
pop
mov
test
scas
popf
jno
push
mov
fwait
mov
testb
lret
movsb
cltd
inc
sbb
mov
enter
ja
mov
xchg
movsb
sbb
cmp
je
arpl
rorb
in
mov
lret
add
addr16
shll
add
inc
push
xchg
mov
adc
ja
sub
out
aaa
pop
out
icebp
shl
cmpsb
jmp
addr16
push
mov
fcoml
sub
or
test
jecxz
ljmp
je
ja,pt
fwait
xchg
out
ja
dec
addr16
push
and
lds
xchg
push
scas
shll
push
ja
push
push
mov
xorl
sub
test
ror
jbe
jl
daa
jo
sub
mov
inc
xor
aam
nop
fcmovu
ljmp
jl
frstor
negl
add
inc
push
push
and
out
ljmp
xor
and
fcomi
adc
stc
in
std
add
pop
sbb
inc
loopne
or
mov
push
sbb
xor
sbb
lret
ljmp
pop
pop
add
jnp
cld
aas
lret
mov
or
jmp
add
mov
jns
es
inc
mov
addb
xchg
inc
out
jmp
fnstenv
jb
jmp
mov
stos
inc
cld
jno
push
push
std
mov
push
ffreep
ja
sub
add
dec
in
loopne
sub
shll
pushf
clc
jg
mov
push
add
imul
xchg
sbb
cltd
call
push
ljmp
stos
mov
stc
pop
lret
sub
hlt
xor
daa
push
xor
shr
lock
inc
clc
push
add
adc
xor
cmp
jg
jmp
xor
jmp
aad
in
xlat
xlat
imul
jecxz
xchg
jne
push
mov
subl
inc
in
mov
pop
jns
rol
xor
rcll
cmpsb
lret
cmp
cmp
aas
lods
clc
mov
pop
pop
pop
test
pop
out
push
xchg
or
xor
aas
dec
lahf
mov
mov
icebp
daa
jbe
in
mov
cld
fdivs
jnp
jae
sbb
lods
jno
push
es
or
xchg
dec
iret
push
jnp
imul
shrl
cli
xchg
xchg
leave
call
add
adc
mov
sahf
mov
popf
or
jns
lock
daa
jl
xchg
es
mov
mov
out
push
add
roll
in
sbb
sub
dec
ret
adc
in
and
xor
imul
adc
rorb
call
and
fnstcw
push
or
les
jno
jae
mov
test
ret
movsl
xchg
mov
xor
out
cmpsb
dec
aaa
dec
fstl
in
cmp
testl
xchg
xchg
xor
lahf
aas
mov
jmp
sub
pop
mov
in
xchg
dec
dec
pushf
scas
movsl
xor
pop
insb
lock
out
mov
outsl
ret
sbb
fnsave
nop
mov
dec
mov
sbbl
loopne
cmp
xlat
dec
je
inc
push
and
cs
mov
jmp
inc
sub
xchg
mov
es
fisubs
stos
movsb
xor
ret
xchg
push
repnz
pop
push
les
jecxz
aam
sbb
clc
fsubrl
fcoms
sbb
push
mov
aas
clc
adc
iret
mov
mov
dec
and
shll
mov
faddl
cmp
and
int3
call
fnsave
jmp
movsb
std
mov
into
jge
in
jo
loope
out
std
cmp
mov
mov
add
xor
sub
out
.byte
.byte
sbb
add
dec
push
mov
or
lahf
mov
and
jge
gs
popa
inc
mov
or
pop
mov
repz
cmp
clc
mov
sbb
sbb
or
das
aad
lods
mov
mull
jb
out
mov
nop
test
dec
xor
dec
xor
iret
lock
nop
mov
addr16
mov
inc
sbb
dec
jno
jae
push
test
xchg
in
fsubr
loope
adc
or
pop
push
scas
fdivl
lret
rclb
or
fildl
mov
and
fldl
sbb
cli
dec
xor
enter
inc
shll
call
xchg
fidivrl
push
mov
pop
add
pop
dec
pop
add
mov
or
aas
mov
mov
mov
negl
push
push
fistl
adc
sub
aas
cmp
cmp
rol
xchg
cmp
cmc
pop
xchg
xchg
les
push
dec
xor
and
add
push
movsl
mov
xchg
cmpsl
in
dec
lods
adc
ror
cmp
in
xor
pop
rcl
imul
dec
xor
or
jl
fwait
adc
xchg
loopne
aam
push
pop
rcl
cmpsl
cmpsl
lret
enter
push
testb
in
out
arpl
sbb
jnp
sbb
fcomps
insb
inc
lahf
jae
dec
adc
sbb
fs
mov
hlt
mov
adc
sub
fildll
or
pop
mov
pop
mov
or
dec
mov
daa
movsb
and
or
repz
dec
pop
out
mov
push
cmp
dec
mov
daa
jp
mov
inc
sub
fwait
ja
lret
sub
or
les
out
pop
xlat
hlt
sti
jle
adc
nop
mov
sbb
fdiv
mov
xor
push
sar
xchg
dec
or
xchg
jnp
lds
mov
jns
adc
jl
psrlq
jns
dec
imul
mov
ret
mov
insb
mov
subl
jno
ds
jns
rol
loop
pop
lods
sbb
pushl
sti
rcl
lods
mov
xor
push
push
fidivrs
loope
adcb
push
add
fistpll
rcll
fwait
adc
sub
push
aad
icebp
adc
orb
and
lahf
inc
adc
fcomip
pop
mov
mov
jnp
push
mov
pop
or
dec
or
mov
into
fst
inc
repnz
ljmp
sub
adc
push
push
dec
div
lahf
cmp
data16
inc
adc
test
mov
inc
test
jge
sub
adc
adc
je
in
ss
and
cmp
shrb
mov
ja
cmp
adc
test
fmulp
add
or
inc
hlt
pop
in
ret
jo
push
pushf
enter
xor
shlb
bound
or
lret
cmp
test
xor
popf
out
mov
mov
call
insl
dec
push
not
test
xchg
or
sbb
mov
repnz
or
test
xor
mov
scas
outsl
mov
in
mov
mov
mov
mov
pop
insb
cs
in
sbb
jno
enter
imul
cli
popf
adcb
stc
push
mov
ret
lcall
mov
jge
stos
in
loopne
negb
mov
and
lods
dec
dec
icebp
inc
call
xorl
sbb
add
fstp
jo
jnp
stos
lods
sub
inc
icebp
sub
outsb
ss
int
divl
xor
inc
sbbb
add
hlt
adc
or
es
cmpsb
cmp
xchg
xchg
and
or
andl
push
inc
jbe
jg
push
ret
ret
pop
xor
inc
push
or
add
mov
xlat
js
mov
inc
out
mov
subl
ret
xor
into
lea
jb
jnp
imul
movsb
lret
std
cld
lret
jns
scas
ljmp
enter
shll
adc
out
mov
sarb
aam
sti
xchg
add
stos
jg
inc
add
lret
xchg
mov
mov
incb
cltd
rcrl
je
lcall
lock
mov
jmp
mov
dec
xchg
orl
cmp
fildll
shrl
add
inc
jp
fcoml
cli
pop
loope
fdivs
dec
dec
xchg
int
outsb
mov
clc
in
nop
jne
mov
mov
dec
ja
dec
jg
les
xchg
cmp
jmp
pop
pop
sub
pusha
and
adc
adc
inc
int3
fisubrs
dec
mov
sbb
test
popfw
and
lcall
clc
lret
xchg
or
es
pop
fcoml
jnp
rcl
xchg
inc
sub
pop
mov
ss
mov
enter
das
icebp
push
mov
fwait
nop
mov
inc
jae
mov
test
nop
or
mov
sub
test
cmp
jge
sub
sbb
fidivrl
adc
xchg
sti
jmp
gs
and
lods
adc
jno
dec
cli
and
outsl
stc
aaa
lock
fadds
lock
inc
xorb
cwtl
inc
shlb
xor
push
inc
icebp
mov
mov
sub
add
fcoml
ret
add
mov
xor
fcomps
or
xor
cltd
cmp
adc
popa
inc
fs
imul
cmp
aas
xchg
push
js
cmp
and
fstpt
testl
mov
xor
jg
xor
inc
out
fiaddl
repz
pop
xor
dec
and
or
repnz
ds
lods
and
fcompp
test
add
loopne
clc
sbb
pop
cmpsb
shrl
xor
sbb
enter
addr16
bound
mov
jp
into
scas
xchg
cmp
test
adc
sarl
bound
pop
outsb
pop
cli
mov
movsb
cmp
mov
and
xor
push
mov
or
jge
scas
pop
arpl
fs
mov
mov
loope
xor
push
xchg
sbb
aas
mov
pop
mov
adcl
mov
pushf
stos
movsb
std
cmc
cwtl
pop
push
mov
pop
and
sahf
clc
jp
inc
xor
mov
testl
push
pop
inc
push
push
xchg
cmp
gs
cmpsl
jb
sbb
jp
ljmp
mov
out
inc
into
push
cmp
xor
sahf
adc
mov
xor
int
jae
stos
dec
or
leave
out
or
enter
cmp
sub
push
shrl
jb
dec
std
jge
push
cmp
sub
xchg
imul
aam
pop
or
fisubrl
add
fisttpl
in
inc
rorl
push
xchg
test
aam
adc
js
inc
into
push
jno
add
scas
cli
sbb
dec
loopne
lret
int
push
test
pop
xor
ss
dec
scas
cwtl
jnp
fistpl
bound
jg
lds
mov
xor
sahf
out
imul
les
or
out
push
mov
fmuls
jl
dec
nop
int3
jmp
aam
mov
add
adc
dec
aaa
cs
cmp
aaa
jmp
inc
and
int
fwait
mov
out
adc
cli
jb
cmc
jnp
mov
sbb
jp
pop
out
sbb
cmpsl
insl
insb
pusha
mov
dec
nop
push
and
xchg
xchg
repz
add
push
ljmp
test
xchg
sbb
fwait
lcall
mov
enter
lret
sbb
mov
dec
adc
add
ret
sbbl
inc
sbb
xor
jge
bound
mov
lret
lcall
mov
lods
sub
mov
lahf
scas
jecxz
sbb
mov
in
loop
test
pop
in
lcall
mov
push
insl
add
cmp
mov
sub
jo
push
lods
popl
fstpt
and
add
les
ja
int3
adc
scas
je
push
cld
inc
pop
mov
in
fwait
nop
and
xlat
repnz
mov
cmp
int3
test
mov
and
jb
pop
dec
jns
loopne
xor
addl
adcb
mov
dec
add
adc
xchg
dec
inc
push
add
xor
scas
stc
ret
in
xrelease
out
jnp
or
pop
test
xchg
incl
xor
loope
popf
aas
test
fidivs
testb
adc
mov
inc
sbb
push
and
xchg
or
cli
sub
psrad
cmpl
push
in
sahf
adc
jno
repnz
call
loop
mov
mov
mov
push
xchg
repz
sti
jge
pop
inc
mov
pop
scas
pop
dec
inc
addr16
push
es
popa
mov
push
push
adc
inc
pop
jbe
insb
mov
mov
or
popa
jb
pop
cmp
cmpsb
adc
pop
lock
orb
cmc
popf
mov
mov
clc
je
fimull
in
leave
fs
icebp
pusha
aas
mov
popf
fldt
ss
mov
in
mov
test
fistl
in
ljmp
adc
cli
cli
sub
aas
push
dec
or
pop
icebp
mov
inc
or
dec
bound
int
pop
or
subl
fisubrl
adc
sub
pop
cmp
into
mov
jge
push
fists
fdivrs
arpl
aaa
decb
jno
dec
fldt
movl
add
cmc
fnstcw
mov
sbb
xor
dec
pop
mov
cmpsb
pop
lods
insl
ret
sub
mov
in
mov
lock
loop
lods
loope
fdivrs
enter
mov
imul
clc
jecxz
xchg
pusha
xchg
pop
ret
inc
dec
rcrb
inc
call
nop
mov
jbe
cwtl
sbb
jecxz
mov
popa
lret
xor
aas
inc
cmc
or
sbbb
fisubs
sbb
mov
loope
jecxz
loopne
mov
push
xchg
test
mov
jne
es
and
pusha
jge
mov
lcall
movsl
sub
fs
jbe
mov
adc
movb
push
aas
int3
dec
test
fadd
mov
sbb
je
cmp
push
inc
ss
les
das
mov
cltd
aaa
ret
jnp
xchg
lods
mov
jbe,pt
out
sub
bnd
dec
out
pop
in
out
mov
mov
rolb
xchg
fcomps
hlt
jne
dec
sbb
test
xchg
xor
dec
mov
scas
mov
dec
das
inc
push
idivb
shrl
dec
mov
movsb
or
mov
clc
dec
cmp
test
xacquire
xchg
pop
cli
je
jecxz
mov
sarl
pop
jns
leave
movsb
push
loopne
das
push
sub
fiaddl
sub
lds
pop
mov
sbb
lds
leave
imul
lds
loope
popf
ja
shlb
int
ss
lcall
jecxz
sub
mov
outsl
rclb
fwait
add
pop
push
lcall
jge
lock
orl
loop
xor
xchg
stos
stc
or
loopne
mov
sub
inc
push
fs
pop
push
add
aas
jb
call
adc
xor
scas
dec
das
addr16
inc
addr16
addb
stos
xlat
adc
inc
jmp
lcall
aas
jmp
add
mov
mov
pop
sbb
push
fwait
and
xor
push
ja
push
add
xchg
push
pop
call
popa
pop
jmp
daa
lea
lods
pop
sarl
sub
adc
push
cld
test
dec
sub
push
xor
not
mov
sbb
or
popf
dec
ljmp
sbb
jl
dec
rcrb
fisubs
cmp
into
lcall
xlat
sarb
sub
inc
stos
mov
cmc
je
sbb
imul
cmpsl
dec
out
push
lahf
fwait
add
cmpsb
js
xor
rcll
or
jl
add
mov
ret
lahf
fisubl
jl
ds
mov
jnp
aad
push
insb
cmp
mov
pop
cld
mov
movsl
aad
out
sub
push
imul
loopne
into
ret
adc
push
outsl
pusha
stos
daa
and
or
mov
add
sub
inc
jp
pop
sbb
filds
adc
push
faddp
aad
lods
jbe
xor
ljmp
js
and
mov
mov
add
adc
sar
xor
adc
data16
je
std
icebp
sbb
fsubrl
or
call
adc
jge
ljmp
dec
std
xor
and
sub
cmp
push
lret
xchg
mov
inc
fisubl
sub
andb
dec
inc
and
movsl
mov
xor
lcall
push
add
adc
cmpsb
add
or
jmp
push
sbb
icebp
icebp
or
cmpsl
jb
cmp
sbb
fldenv
adc
xor
call
dec
jecxz
mov
rorb
and
mov
cld
push
out
cmp
std
bound
repz
fsts
iret
inc
jmp
movsl
or
push
push
fsubrl
add
sub
stc
push
idivl
divl
jbe
jnp
xor
mov
adc
add
xor
out
aam
cmp
lds
jl
shrl
add
int3
popa
flds
addl
cli
insb
cmc
nop
and
push
push
jbe
xchg
in
cmc
and
in
nop
addl
add
icebp
dec
and
sahf
sbb
mov
ss
add
pusha
and
daa
out
popf
fdecstp
sahf
pop
xchg
daa
mov
xchg
fdiv
mov
mov
loopne
ss
jl
or
clc
push
jo
push
sarl
push
push
iret
dec
sub
push
inc
sbb
mov
dec
pop
les
inc
mov
xor
adc
lea
enter
in
insl
mov
mov
sub
mov
fwait
sahf
adc
cld
jo
cld
mov
xchg
lret
xor
sub
fisubrs
inc
jns
inc
sub
nop
pop
data16
repz
sbb
xor
out
lahf
push
jmp
cltd
repnz
xchg
pop
add
fbstp
xchg
adc
inc
leave
mov
fiaddl
xchg
lahf
push
loopne
inc
lcall
loopne
fcmove
mov
adc
cltd
and
leave
xor
or
push
mov
pop
inc
imul
mov
push
lods
ss
mov
mov
push
ja
dec
and
cmp
out
adc
arpl
push
je
mov
or
sahf
inc
mov
fs
out
fnstenv
js
xlat
std
jl
push
push
cmpsb
pop
pop
sbb
fwait
cmp
in
mov
incl
dec
fwait
xchg
in
insb
sbb
jno
shrb
imul
vpsubw
mov
sbbl
enter
mov
mov
cmpsl
dec
addr16
jae
sahf
push
add
repz
xchg
add
mov
imul
lea
mov
mov
add
int
pop
ret
out
pop
insb
pop
testl
loop
dec
test
cmp
test
pusha
or
stos
sub
lcall
add
leave
repz
loope
jo
fdivrs
arpl
xor
mov
sub
dec
add
xchg
aad
and
mov
mov
or
jne
cld
rcr
scas
outsb
xor
call
adc
add
shl
out
out
xor
pop
ret
fildll
sahf
outsl
dec
add
push
xor
sbb
xor
aaa
xchg
stos
push
insb
push
popf
sbb
lret
test
mov
pop
in
mov
imul
jo
mov
mov
push
cld
imul
jecxz
or
into
nop
inc
es
jbe
insb
mov
leave
sub
mov
and
pop
addr16
nop
mov
and
dec
jl
inc
or
mov
inc
cmp
inc
popf
clc
xchg
and
xrelease
sub
and
stc
xchg
fwait
mov
xlat
adcl
or
aam
in
imul
or
aaa
push
fadds
cmp
mov
js
add
add
push
ds
divb
cmp
xchg
jns
mov
fwait
jmp
mov
jno
dec
adc
jne
fwait
sub
cmc
cmc
mov
jno
pushf
or
dec
jae
addr16
aaa
sbbl
push
adc
rorb
gs
cmp
pop
es
loop
ja
mov
repnz
push
out
pushf
xor
push
mov
add
xchg
push
mov
rcrl
call
push
fs
mov
fcmovne
mov
gs
xor
gs
cld
add
pop
cld
out
into
sbb
bnd
mov
test
sbb
xchg
hlt
add
out
and
inc
dec
push
xor
add
xchg
outsb
push
mov
push
ud0
lahf
sub
jmp
lods
sbb
fistpll
insl
jno
mov
cmp
insb
mov
add
clc
cmpsb
push
dec
lock
and
movsl
pop
stos
inc
mov
lret
das
sbb
push
push
lods
mov
clc
xchg
cli
jl
add
je
das
push
in
outsl
mov
pop
and
pop
sub
repnz
jmp
adcl
inc
ja
xchg
xchg
mov
xlat
popa
pop
in
repz
inc
and
dec
mov
adc
inc
test
mov
push
mov
fbstp
es
mov
ss
pop
pusha
aad
out
sub
rolb
sub
roll
sbb
ret
push
int
add
lret
cmp
push
lahf
mov
pop
sbb
sub
or
jns
dec
cli
xor
dec
push
inc
lcall
cmpsb
mov
adc
sbb
xchg
or
aaa
mov
adc
idivl
arpl
mov
jae
movb
inc
clc
and
aas
xchg
mov
mov
int3
xchg
mov
jecxz
leave
aas
pxor
mov
fistps
pop
push
enter
test
rorl
mov
nop
add
dec
inc
divb
jnp
push
hlt
pop
mov
push
rorl
scas
mov
movsl
jge
or
push
fmull
cmp
xchg
mov
xchg
jl
adc
jns
es
lcall
mov
rol
es
pop
pop
out
sahf
mov
lahf
and
push
jne
loope
or
push
mov
repnz
popf
mov
icebp
sub
mov
inc
and
fwait
cld
daa
cmc
push
cmp
ficomps
xchg
mov
mov
and
xor
fistpll
ret
jg
and
orb
std
fistl
cmpb
shll
loop
cmpsb
lods
mov
call
mov
fst
xchg
loopne
add
shlb
sbb
mov
out
pop
inc
sub
push
dec
mov
dec
xor
mov
arpl
stos
fs
push
xor
xlat
in
jl
or
pop
cmp
pop
mov
sub
dec
dec
test
mov
dec
cmp
or
mov
sub
push
inc
xchg
es
sub
mov
test
mov
mov
stos
mov
cmpb
stos
fistpll
mov
int
fstpt
jo
sahf
push
fwait
loopne
pop
ja
lret
xchg
mov
and
or
mov
sub
cmp
shll
lods
jae
mov
sub
lret
mov
test
fdivl
push
mov
mov
loope
andb
sti
sub
ja
pop
fwait
jmp
xchg
scas
xchg
das
push
jl
and
cmp
pop
ss
push
ret
xchg
adc
popf
ljmp
cmc
adcb
push
jge
call
mov
sub
adc
gs
dec
or
sub
sahf
jmp
test
iret
xorl
add
repz
pushf
and
mov
mov
mov
sbb
lret
cmp
test
push
inc
loopne
inc
push
push
rcrl
xchg
xchg
cmp
popa
nop
sub
mov
lret
sub
mov
fdivl
repz
enter
xor
arpl
mov
cmc
insl
jle
sahf
cmp
mov
repz
hlt
stos
mov
fdivrs
mov
std
and
fisttpl
sub
xor
scas
add
and
sub
mov
jg
in
or
mov
sti
jae
pusha
imul
or
jbe
ds
in
mov
stos
jb
imul
sti
roll
out
test
jns
cltd
or
mov
insl
and
test
leave
repnz
cld
lea
xchg
xchg
imul
pop
jbe
ret
lods
mov
mov
jge
shll
inc
pusha
jmp
scas
repz
cmc
xchg
scas
jmp
gs
xchg
mov
stos
test
addr16
mov
mov
sbb
jmp
push
outsl
adc
dec
fadd
pop
jle
ja
jmp
push
sbb
sub
out
pushl
iret
xchg
lret
or
cld
int
mov
fbstp
out
test
aam
adc
dec
fwait
jb
enter
inc
sub
add
stos
mov
cwtl
cwtl
mov
in
cli
clc
mov
sbb
ja
outsb
and
mov
subl
nop
jl
pusha
idivb
push
test
inc
inc
dec
outsl
sarl
sbb
scas
cld
mov
aam
xchg
adc
push
push
xchg
and
aas
repnz
adc
andl
cmpsl
insl
test
aad
and
arpl
jne
mov
fs
repnz
or
loop
popa
std
loope
xchg
ror
sbb
mov
sbb
cmp
xor
mov
loop
xor
mov
mov
and
aam
mov
inc
ret
mov
loop
in
fimuls
add
cmp
adc
pushf
pushf
call
push
addb
sbb
orl
add
sub
xlat
movsl
dec
dec
jg
push
mov
mov
cli
dec
push
jnp
sbb
push
fsubrs
fwait
mov
push
popa
add
scas
sbb
sbb
mov
data16
ficoml
in
test
inc
hlt
cmp
or
rolb
test
mov
hlt
arpl
or
mov
stos
sub
aaa
dec
jne
xlat
lods
mov
loopne
sbb
ss
add
fbstp
dec
hlt
inc
aam
or
mov
test
outsl
pop
insb
mov
not
sbb
inc
pop
sbb
sbb
xchg
sbb
fimuls
fldenv
or
cmpsl
popf
sub
jo
addr16
movsb
mov
pop
or
daa
movsb
sub
mov
xchg
repz
sub
shll
arpl
cs
or
andl
int3
adc
rorl
mov
mov
and
out
mov
adc
adc
inc
js
lahf
leave
push
xor
push
lahf
in
ret
mov
test
pop
popa
push
cli
test
int
xchg
bound
mov
push
shrb
inc
xchg
add
int3
dec
cmp
lock
and
loopne
out
pop
mov
push
mov
test
stos
add
out
mov
dec
scas
std
mov
gs
addb
data16
jl
fmull
test
xchg
jno
out
cmp
rcll
sbb
sbb
xor
sub
out
outsl
jp
popa
inc
xchg
push
mov
out
outsl
mov
fcomip
cmp
and
jg
and
rcrl
adc
mov
sti
bound
mov
imul
push
push
and
mov
aam
incl
call
jae
insl
addr16
jmp
dec
push
cs
sub
test
cltd
fwait
test
inc
xchg
cs
sbb
movsb
add
cs
ds
ds
testl
dec
and
sub
mov
fmuls
push
out
in
addr16
pop
out
inc
das
inc
dec
sbb
in
arpl
in
xor
fs
inc
mov
jnp
sbb
imul
fistpl
stos
and
jp
stos
jle
mov
fidivrs
inc
cmp
lret
push
jmp
das
into
pusha
dec
lret
xor
mov
mov
arpl
movsb
cltd
sbb
rorl
mov
sbb
stos
fs
mov
dec
xchg
push
fnstenv
aad
xchg
jle
rorl
or
lcall
pop
popf
xor
lea
dec
lcall
test
ljmp
add
pushf
data16
lds
push
sti
sahf
notb
dec
int3
pop
incl
dec
jp
fsts
jmp
cld
xchg
je
xchg
fstpt
dec
in
ds
mov
xchg
dec
xchg
lret
xor
jge
jns
dec
dec
mov
addb
adc
lods
sbb
lods
int
xchg
sub
jae
pop
mov
push
imul
pop
sub
cmc
lock
push
bound
pop
push
inc
fnsave
xor
mov
sub
adc
push
mov
rcll
xchg
mov
sub
xchg
jno
loopne
xor
inc
mov
push
cmp
inc
shl
aam
cmpsl
mov
out
xchg
mov
clc
addl
pop
xor
push
mov
clc
aad
jecxz
xor
xchg
adc
loope
push
lea
imul
jne
sarl
int
stos
jg
lock
and
icebp
lods
das
out
dec
stos
xlat
and
out
xchg
decl
xor
mov
pop
inc
add
push
and
push
or
roll
adc
inc
dec
mov
mov
add
je
stc
or
jecxz
aaa
cmpsb
repz
sub
or
fsubrs
roll
mov
jae
cli
sarl
shlb
mov
inc
outsl
lret
fiaddl
cwtl
xor
fidivs
cmc
jb
aam
stos
cs
jns
pop
das
hlt
and
or
mov
movsb
loop
aas
xor
sbb
sbb
dec
mov
out
lods
push
mov
insb
rorl
sub
mov
jns
popf
or
mov
sub
push
nop
push
sub
xor
fimull
imul
xchg
stos
jne
test
je
in
jle
lcall
mov
bound
lret
dec
xor
mov
and
mov
adc
imul
mov
nop
fstp
sub
loop
cmp
dec
sbb
rcll
push
push
xchg
fldt
mov
xor
in
and
andb
aas
add
cmp
imul
dec
stc
sti
add
xchg
jmp
jmp
sbb
mov
and
push
add
cmp
pop
cltd
xor
jnp
push
jae
or
icebp
sub
mov
sbb
xchg
cmp
xchg
push
insl
and
hlt
test
popa
in
push
lds
imull
adc
pop
inc
xchg
pushf
fsubrl
inc
mov
mov
mov
dec
aam
fiadds
stc
outsl
idiv
xchg
push
xchg
popa
xor
push
imulb
inc
dec
loope
adc
fistpll
in
cld
loopne
je
xchg
pop
xor
cli
repz
pop
mov
data16
add
fisubrs
mov
sbb
sbb
lods
sbb
test
inc
adc
push
cltd
das
je
dec
fnstenv
insb
dec
aas
pushf
cmc
loope
addr16
pop
push
mov
std
xchg
push
add
mov
and
gs
mov
or
mov
sbb
push
pop
pop
cmc
adc
add
sbb
push
and
add
mov
cli
cmc
stc
cmc
sbb
arpl
lds
dec
mov
xchg
dec
es
and
popf
or
clc
mov
test
mov
push
push
sbb
lcall
mov
idivl
pop
or
in
int3
adc
ret
mov
pop
clc
aam
pop
mov
push
inc
cmpsb
lcall
mov
mov
stc
add
test
adc
jl
pop
sbb
cmpsb
std
or
enter
sub
out
sbb
into
sub
xor
ret
push
pop
and
mov
pushf
movsb
icebp
jo
call
mov
dec
nop
cmp
enter
ds
div
repnz
icebp
add
push
ret
push
sti
and
aam
jl
imul
mov
sbb
outsl
mov
adc
cmp
nop
mov
jno
jne
sub
in
loop
pop
mov
minps
mov
lret
imul
or
repz
mov
pop
das
lret
mov
and
repz
int3
cmpl
xor
faddl
mov
jo
cmc
xchg
pusha
mov
inc
arpl
cmovle
jns
in
call
pushf
mov
inc
stos
les
leave
arpl
in
inc
lcall
aas
sub
or
aam
sti
and
les
ss
sbb
inc
gs
jge
lods
push
std
outsl
hlt
mov
mov
clc
or
popa
daa
inc
into
fildll
pusha
mov
les
jg
xor
and
jle
popa
push
pop
fnsave
jl
mov
xlat
pop
loope
jecxz
lcall
xlat
incl
pop
cltd
dec
and
jmp
push
dec
cmp
inc
xor
pop
push
adc
mov
es
pop
aad
mov
shll
icebp
scas
iret
add
imul
mov
xchg
mov
enter
in
mov
mov
dec
xchg
mov
les
fcoml
jae
mov
add
lea
mov
cwtl
shrb
jae
pop
orl
outsb
xchg
rorb
cmc
xor
rcrl
cmp
data16
and
cwtl
int
adcl
dec
lahf
xor
lret
neg
popa
out
popl
call
adc
xchg
dec
fwait
movsb
xchg
adc
inc
icebp
outsl
les
test
movsb
cmpsl
js
or
fidivs
js
test
mov
lds
xchg
add
mov
stos
lahf
mov
lahf
lea
test
dec
popa
adc
or
std
and
inc
iret
in
xlat
sub
aas
cld
in
js
sub
popf
lcall
add
mov
push
adc
rorl
outsb
mov
jle
or
mov
xor
mov
or
loope
out
insl
popa
sub
sub
hlt
inc
adc
push
xor
test
cmp
jp
jo
xchg
fimuls
cmpsb
aam
outsb
ret
pushl
outsb
dec
dec
sub
les
mov
inc
stos
fiadds
pop
les
mov
inc
jl,pt
icebp
in
pop
dec
insl
outsl
add
mov
dec
popa
pop
daa
int3
test
xor
push
inc
popf
lock
xchg
lret
sub
and
xor
fwait
testb
cmp
lods
jb
and
jbe
stos
pusha
stc
sti
shl
incl
and
lahf
cmpsb
xchg
outsb
mov
outsl
clc
mov
pop
imul
lret
jnp
ja
mov
in
lea
pop
addr16
and
daa
call
or
sti
inc
sbb
and
adc
inc
pop
xchg
mov
xchg
inc
mov
iret
mov
dec
ret
sbb
test
lock
das
imul
popa
mov
int3
inc
adc
push
xchg
jge
mov
das
adc
dec
add
mov
popa
inc
lcall
ljmp
sub
mov
mov
enter
gs
scas
jl
push
insb
loopne
inc
xchg
repz
jmp
in
rcl
fsubl
mov
mov
lret
add
or
mov
lds
fldt
sbb
add
sahf
dec
jecxz
in
jmp
pop
dec
stos
data16
sub
and
call
lret
jno
mov
lods
in
shlb
in
sub
sbb
adc
cmp
mov
mov
loope
cmp
dec
sarb
pushl
fcomp
jb
push
jl
pop
sahf
cmp
mov
loope
in
sbb
out
push
out
cs
push
fldl2t
sbb
test
enter
or
aas
loop
rorb
xchg
or
cmp
aas
nop
xchg
fistpll
mov
cmp
add
mov
sbb
push
mov
aam
fisttps
adc
cmp
movsb
xor
data16
in
jmp
inc
rorl
or
loope
dec
mov
adc
call
lahf
neg
test
adc
sub
ret
je
pusha
lahf
aam
sbbl
ja
xor
or
pop
push
cmp
mov
andl
or
or
popa
shrb
rcrb
xchg
pop
jmp
push
jp
aam
ja
sarb
ja
pop
adc
sub
in
sub
addr16
sarl
daa
sub
jnp
mov
test
push
leave
scas
pop
divl
cmpsl
add
test
xor
out
je
jp
mov
popa
jne
outsl
xor
inc
bound
inc
xlat
pop
dec
mov
inc
lret
mov
jno
cld
jb
sbb
out
addr16
add
outsb
fidivrl
push
popa
pop
fidivl
mov
stc
hlt
je
stos
in
jmp
mov
pop
insb
pop
aas
cmp
jb
testb
pop
or
lock
roll
cmp
mov
inc
cli
xchg
mov
push
or
push
mov
mov
shl
jns
add
push
adc
adc
push
cli
xchg
cwtl
fstpt
cli
push
into
dec
mov
lea
ja
xchg
mov
scas
movsl
or
jl
mov
shll
xchg
add
cmp
and
mov
jo
push
mov
mov
cld
sbb
cli
fildl
icebp
hlt
xchg
out
dec
cmp
jnp
imul
mov
repnz
cmpsb
or
cltd
inc
add
jg
sbb
pop
cli
cmp
imul
push
iret
mov
xchg
adc
outsl
addb
mov
test
mov
push
push
imul
inc
sbb
cld
jnp
out
sub
scas
aam
mov
push
cmc
movsl
cmp
push
add
mov
insw
inc
push
aaa
cmpsl
int3
xchg
bound
pop
aas
mov
adc
adc
adc
lock
std
enter
or
fnsave
cmp
shrb
sub
aas
dec
out
popf
scas
and
ljmp
sub
sub
rcrl
add
int
xchg
inc
popa
sbb
or
mov
mov
repnz
out
mov
rclb
lods
mov
mul
add
jl
aam
pmaxsw
adc
or
pop
in
inc
test
rcr
or
mov
daa
adc
mov
data16
mov
push
clc
add
add
cmpsl
inc
cld
sbb
pop
pop
test
scas
pop
cmp
xor
and
loope
mov
xchg
push
addl
sbb
dec
loope
dec
push
xor
fimuls
adc
shll
push
leave
nop
push
sub
ss
out
adc
movsb
cmp
test
in
incb
mov
inc
dec
rol
loope
ret
dec
dec
es
aad
repz
repnz
popf
pop
mov
lcall
ret
pusha
mov
iret
out
adc
or
sub
out
pop
fisubl
fistl
pop
out
inc
cmpsb
fistl
or
mov
xor
fisubl
mov
test
cmpsl
xchg
dec
bound
pop
mov
or
adc
adc
hlt
jle
std
pop
inc
gs
shll
arpl
lock
jno
push
mov
aad
cmp
jnp
pmaxub
add
ss
out
cmpl
xchg
loope
mov
cmpsb
mull
or
xchg
push
adc
roll
or
xor
lods
cmpl
inc
push
mov
sub
sub
mov
push
mov
aas
mov
mov
or
or
clc
test
cwtl
adc
mov
pop
mov
dec
in
fwait
cmp
jge
and
mov
mov
sub
mov
add
sti
jnp
jo
out
and
outsb
popf
enter
lods
push
xchg
test
xchg
adc
mov
jmp
adc
or
cld
xchg
fisubrs
rcl
frstor
push
int
mov
daa
in
movsl
dec
icebp
stos
xchg
xor
jbe
rcrl
inc
sub
outsb
jmp
push
adc
cwtl
mov
mov
pop
adc
leave
pop
inc
sbb
aaa
lcall
cltd
fidivrs
jmp
mov
dec
insl
cltd
bound
int3
mov
popf
and
mov
sti
pop
dec
in
push
das
subb
jmp
pop
stos
jae
push
or
fcomps
mov
daa
or
stos
js
stc
add
aas
fwait
add
lock
dec
sub
gs
xchg
dec
mov
frstor
sahf
push
add
insb
mov
push
cmpsb
jo
adc
and
and
je
iret
outsb
xchg
in
jp
push
movsb
std
or
jl
or
xor
shll
xor
add
xlat
xchg
inc
and
inc
push
jecxz
or
lret
cld
ret
cmp
fistpl
dec
lds
jb
sbb
repnz
push
stc
mov
sbb
mov
hlt
in
add
or
aad
xor
adc
fiaddl
xor
fisubrl
xlat
mov
data16
mov
dec
pop
jecxz
inc
dec
rcrl
rcll
sbb
xchg
das
lret
xchg
push
cli
sbb
movsb
ljmp
fnstenv
popf
mov
sbb
fidivl
sahf
sbb
cmc
and
push
pop
jg
out
aam
int3
fstps
testl
pop
shll
and
jle
cmp
test
sti
jmp
popf
jae
lcall
lds
loop
xchg
pop
push
sbb
sub
loop
xchg
call
mov
prefetch
and
enter
inc
add
stos
es
lock
out
in
lea
xchg
test
push
or
sahf
in
shr
jg
inc
and
pop
mov
sti
pop
movb
imulb
jno
cmp
sub
or
movsl
sbb
in
into
in
push
dec
cmp
testl
xlat
shlb
orl
lcall
cwtl
mov
mov
inc
les
inc
sub
xchg
and
call
jl
cmp
dec
xchg
xchg
or
jo
pop
pop
lahf
enter
push
les
mov
jbe
xlat
js
jns
adc
lret
inc
insl
add
sub
jecxz
ja
je
adc
push
fldcw
push
test
pop
jp
scas
fwait
xor
ja
xchg
mov
loop
test
push
sbb
fimull
cmc
pusha
xchg
ror
insb
dec
and
js
ficoml
push
mov
test
dec
icebp
out
mov
outsl
lock
insb
fwait
ret
inc
das
lods
or
movsl
adc
dec
sbb
mov
dec
mov
xchg
pushf
lahf
fisttpll
arpl
mov
cmpsl
mov
dec
cmpsb
cmpsb
mov
or
xchg
loopne
mov
or
mov
in
mov
fwait
pop
out
out
je
xorl
sub
mov
enter
or
ror
sbb
loop
xor
add
lea
loope
add
pusha
rorb
int
cmp
jge
andb
lahf
addb
sub
push
push
xchg
shll
dec
leave
jge
inc
testb
add
shll
ss
scas
sub
lea
incl
push
je
adcl
push
pop
sub
jg
add
pop
jbe
add
in
out
xor
data16
je
push
pop
insb
bound
insl
imul
cwtl
out
imul
sub
cmp
cmp
push
ret
pop
pop
add
sbb
test
daa
bound
aas
imul
and
jle
ljmp
push
arpl
movsb
fwait
push
addr16
adc
dec
mov
aas
pop
call
fs
daa
call
sbb
insl
mov
jecxz
sbb
jo
xchg
out
pushf
lcall
dec
popf
arpl
pop
jne
int
xlat
cmpsb
rclb
sbb
pop
mov
sti
movsb
jl
lcall
inc
mov
push
pop
outsb
scas
jg
xor
call
leave
jle
inc
rcrb
dec
test
adc
shrb
inc
into
jns
cwtl
sti
mov
or
add
push
and
adc
mov
adc
ljmp
loopne
sti
mov
cs
dec
sub
ja
cld
in
adc
mov
xor
dec
inc
popl
lock
test
in
aam
mov
jge
lods
aaa
sbb
inc
sahf
out
add
enter
stos
shrb
xchg
cmp
loope
mov
ret
mov
ficompl
fiadds
xchg
add
adc
jo
rcr
sbb
dec
enter
ljmp
daa
dec
adc
push
push
dec
adc
out
call
loop
into
es
inc
ds
cmpsb
ds
sbbl
aaa
add
mov
and
ret
shr
and
aaa
add
add
hlt
rcl
push
outsb
jg
add
push
popf
andl
mov
scas
mov
inc
daa
icebp
pop
and
push
add
dec
fwait
xchg
fwait
jb
movsl
xor
or
fs
cmp
mov
rclb
loopne
popa
lret
test
push
loop
inc
js
push
flds
push
push
loopne
adc
fnstcw
sbb
push
cmp
push
imul
addr16
fldl
add
lds
out
aad
into
mov
mov
sub
push
cmp
aam
fcomps
cmp
lods
call
aad
roll
cmp
sbb
xchg
lea
outsb
sub
push
mov
aaa
fmull
jbe
out
arpl
fists
mov
xchg
loop
and
imul
jp
rorl
stos
mov
prefetch
subl
rclb
sti
idiv
xor
stos
and
daa
dec
inc
lret
int
or
outsl
shl
xchg
sub
pop
pop
stc
xchg
cmp
cwtl
outsl
popa
mov
int
pop
fdivp
mov
xor
sti
in
fisttps
mov
fsubrs
adc
je
in
push
inc
add
adc
jo
pop
xchg
mov
push
dec
sbb
and
negb
jne
loopne
xchg
dec
lcall
mov
xor
mov
mov
fildl
mov
ljmp
fimuls
mov
jp
call
push
mov
or
sbb
cmpsl
or
adc
into
xchg
or
sbb
sbb
push
shl
xchg
fld
jno
xor
inc
xor
push
int
or
mov
push
out
insl
js
pop
xchg
mov
stc
rorl
add
lret
adc
sbb
popa
jmp
dec
ss
or
sbb
push
iret
test
push
hlt
sub
cmpsl
push
stos
or
push
jo
jne
shl
cmpsl
and
imul
popf
sti
into
xor
lcall
je
push
aaa
cmpsl
and
cmpsl
popf
mov
jnp
mov
popa
pop
popa
rol
addr16
test
lret
out
mov
inc
sbb
xchg
testb
mov
aad
pop
lods
xchg
test
pop
int
pushw
push
sub
mov
sub
int
jl
inc
mov
pushf
ja
gs
pusha
jp
je
mov
lahf
mov
cmp
push
push
sbbb
stos
hlt
aam
test
lahf
cld
xchg
daa
je
cmp
mov
sbb
mov
dec
mov
jbe
shll
cltd
popf
xchg
xchg
stos
xchg
cwtl
jp
rorb
xor
jge
ljmp
push
pop
arpl
or
fdivrs
lea
add
shrb
popa
sbb
imul
scas
and
and
jg
pop
jbe
lods
daa
add
fmuls
jae
push
xchg
push
mov
inc
and
stc
xor
fucomip
xor
push
movsl
movsb
and
inc
sub
inc
mov
adc
add
in
add
or
mov
in
add
pusha
pop
mov
fnstsw
enter
sub
pop
outsb
les
cmpsb
cltd
or
out
stos
xchg
aas
fadd
mov
inc
pop
jb
test
xchg
sub
fmuls
cmp
jae
adcb
into
popf
sub
sbb
cmp
inc
test
push
shrl
mov
push
incl
hlt
and
mov
xchg
mov
test
cld
shlb
push
in
fcomi
jge
push
lock
mov
push
ljmp
pop
mov
lock
movsb
dec
xor
dec
test
add
in
inc
cmp
fs
stos
mov
mov
cwtl
lret
jg
xor
sbb
mov
int3
inc
arpl
aas
lds
loopne
push
call
jbe
test
adc
xchg
push
inc
push
lret
xchg
pop
sti
or
adc
mov
xchg
out
inc
test
pop
cli
lods
pop
xor
adc
pop
push
lahf
loopne
imul
and
fnstenv
sub
loopne
adc
pop
xor
fldenv
mov
das
notl
hlt
jno
cmpb
and
ss
sub
jb
dec
lea
scas
loope
and
imul
adc
iret
into
adc
jns
cmc
xlat
mov
mov
popa
insb
cmp
cwtl
sbb
stos
add
enter
dec
pop
pop
add
or
xchg
cmp
lahf
out
jg
sbb
and
sub
dec
movsl
stos
daa
and
or
sbb
fnstenv
leave
scas
cld
sub
das
dec
js
shll
lret
or
insl
xlat
jmp
xchg
fdivrl
movsb
sub
ja
pusha
sbb
push
pop
or
mov
xchg
outsb
adc
cmp
sub
ret
movsl
cmp
and
imul
movsb
repnz
and
and
cli
add
mov
pop
sub
out
daa
sub
fsubrs
stos
mov
fidivrl
ljmp
notb
sahf
subl
aad
xchg
decl
scas
xchg
addl
push
mov
adc
sub
mov
cmp
in
inc
iret
xor
xor
push
cmpsl
inc
bound
clc
faddl
or
int
sahf
push
dec
int
incb
loop
loopne
lea
or
paddusb
sbb
aam
push
and
jmp
scas
pusha
lds
xor
mov
clc
jnp
bound
sti
mov
push
cmp
cmp
and
ret
and
xchg
into
and
jb
lds
sub
adc
dec
dec
xor
outsl
xchg
out
xchg
inc
push
push
rolb
push
mov
jp
xor
test
sub
cltd
enter
shlb
pop
mov
and
adc
lret
mov
xchg
jp
xor
loopne
push
adc
mov
imul
in
xchg
push
popa
cli
and
and
rcrl
inc
test
mov
idivl
mov
adc
mov
cld
cmp
hlt
dec
daa
popa
sub
sbb
lret
lcall
outsb
jbe
outsb
fs
pop
sub
sub
sbb
int
xor
jl
cmp
insb
cmp
je
shl
jne
pop
pop
mov
ja
bound
cmp
push
xchg
rol
or
dec
imul
mov
xlat
xor
sahf
xchg
cmpsb
mov
mov
rcrl
mov
mov
jge
pop
aaa
sbb
out
repz
xor
push
and
xor
and
xor
or
push
lea
ds
push
dec
sub
inc
mov
mov
enter
adc
fistpll
sub
push
sti
mov
pop
xor
ret
pop
mov
js
add
cmc
mov
cmc
out
adc
sbb
mov
es
pop
xchg
sbb
sub
jno
push
sbb
std
sbb
mov
mov
mov
js
popa
fadd
leave
jno
test
sbb
sub
xchg
xchg
insl
jb
sbb
lcall
dec
cltd
sub
lret
aam
aas
sub
dec
jno
orl
fimuls
jno
jp
call
dec
lea
sbb
mov
mov
in
shl
shlb
loope
repnz
ss
rcrl
out
push
add
inc
std
jnp
sti
push
outsl
rcll
pusha
in
xchg
pop
andl
push
lcall
and
popf
dec
mov
aaa
push
jnp
lret
mov
xor
adc
cs
insl
push
inc
sub
dec
sbb
mov
xchg
inc
iret
mov
clc
lahf
fbld
lcall
lods
jge
orl
xor
adc
test
insl
out
inc
cli
mov
imul
ss
fsubrl
or
jno
fistps
push
ljmp
movsb
and
scas
in
arpl
int3
nop
push
sbb
mov
mov
or
push
clc
enter
jo
inc
cltd
inc
mov
and
xlat
xor
sbb
push
fs
cmp
jle
lea
sub
aad
enter
xchg
mov
jmp
jge
inc
into
mov
data16
ror
sbb
dec
stos
movsl
xor
dec
fnsave
pop
fsubs
divps
lock
mov
pop
std
mov
popf
mov
adc
mov
add
push
out
sub
mov
popa
jno
sub
fs
xchg
test
mov
loop
inc
inc
stos
inc
ljmp
jp
cltd
std
loope
lods
xchg
clc
add
es
mov
or
scas
cmpsb
push
cmp
loop
mov
push
inc
inc
fdivrp
arpl
mov
xor
xchg
push
mov
gs
dec
adc
sbb
andl
repnz
inc
in
cmp
xchg
sbb
lods
pop
cmp
in
in
inc
lds
jmp
xor
sbb
mov
cmc
cmp
add
sbb
mov
stos
fwait
mov
or
notb
or
leave
cmp
adc
mov
sbb
lea
add
or
cmc
imul
fsubs
clc
loope
movsl
push
fbld
mov
dec
mov
xorb
push
push
push
xchg
and
data16
ds
xchg
push
movsb
lcall
sti
in
pushf
or
push
gs
int
xor
mov
lock
inc
cmpsb
sub
shrl
jl
jns
adc
sbb
xchg
test
sub
cmpsb
xlat
stos
loopne
sbb
adc
adc
cmp
and
sahf
scas
outsl
push
lea
xor
xchg
xor
push
mov
xchg
ret
mov
mov
lods
jbe
mov
loopne
adcl
pop
xchg
adc
test
inc
mov
pop
fdivl
aam
xor
sub
mov
lret
push
ss
rorl
es
mov
ja
inc
sbb
mov
inc
insl
jl
jb
loop
xor
lea
add
dec
ficompl
mulb
ret
mov
fisubs
adcb
les
jns
push
mov
xchg
in
sub
lods
dec
hlt
lea
out
xlat
lret
rcrl
scas
jge
mov
mov
add
push
punpcklwd
fidivrl
mov
clc
imul
mov
adc
cmp
and
scas
adc
mov
or
ficoml
mov
loope
xor
cmp
pop
add
cli
sbb
loope
cwtl
add
ds
jp
pop
pop
ret
jmp
arpl
pop
ret
mov
cwtl
icebp
clc
mov
out
xchg
inc
shl
xchg
rcr
and
hlt
imul
add
jle
scas
cmp
mov
sub
fsubrp
leave
mov
gs
jp
push
push
cmpsb
int3
insb
xchg
fdivrl
bnd
popa
cltd
xchg
push
cld
popl
push
stos
lock
jo
push
ret
and
or
out
inc
mov
add
int
mov
sub
ret
sbb
pop
sbb
stos
xchg
sub
or
jmp
ret
out
imul
xor
add
and
and
je
inc
dec
stos
pop
or
inc
mov
adc
mov
leave
or
jmp
xor
out
push
push
inc
sbbb
sbb
ret
ds
mov
push
mov
stos
mov
mov
sub
stos
sbb
les
and
in
daa
add
mov
ss
pop
xchg
xchg
sbb
nop
jns
rorl
add
xchg
sarb
mov
xchg
dec
shll
sub
pop
mov
xor
sub
imul
pop
dec
xor
push
mov
out
jg
jmp
outsl
or
jnp
data16
fldenv
int
mov
insl
jb
rolb
lahf
and
rcrl
call
pusha
inc
out
mov
int
sbb
jb
loop
mov
icebp
ljmp
dec
cmp
push
int3
rorb
arpl
stc
repnz
sbb
shrb
dec
out
ret
sbb
pushf
add
push
inc
mov
mov
imul
mov
scas
pushf
cs
sub
mov
xor
jecxz
xchg
enter
pusha
jl
cmp
add
jp
hlt
and
ss
rcll
and
enter
dec
and
jne
clc
orb
stos
ffreep
and
dec
adc
dec
pop
test
inc
xor
loopne
push
outsl
sub
dec
pop
mov
push
imul
pop
int3
mov
jmp
cmc
sub
ja
sub
mov
fldl
loope
pop
shll
frstor
es
add
ficoml
add
in
push
push
mov
imul
mov
pop
inc
cli
clc
lods
rep
xchg
inc
stc
aam
adc
pop
inc
sbb
dec
ret
repz
push
xchg
cmp
mov
mov
dec
mov
mov
cmc
rcll
in
arpl
fs
xchg
sbb
in
aas
js
ror
in
aas
xor
push
addb
cmp
mov
ficoms
inc
lcall
cmpsb
repz
jl
fucomip
lods
mul
addr16
xor
dec
pop
push
lock
jmp
cltd
sub
xchg
dec
xor
sti
into
js
movsb
sahf
add
mov
adc
scas
subb
sub
fists
imul
mov
ret
add
xchg
cmp
mov
mov
in
cmp
test
jle
mov
aam
mov
in
and
int3
clc
mov
addr16
xor
aas
insb
mov
adc
aad
cld
sub
mov
pusha
add
xchg
sahf
negb
mov
ret
pop
test
les
sub
xor
test
ljmp
je
adc
cmp
fstps
jb
cmc
cmp
cmp
mov
enter
mov
pop
xor
jmp
sbb
cwtl
frstor
jo
rorl
jb
and
repnz
mov
cmp
jg
fs
adc
push
mov
test
lahf
jb
push
jmp
mov
mov
lds
lods
pop
cmp
jo
inc
jnp
ss
lds
push
stc
pusha
sbb
test
stc
insb
add
test
bound
jle
cmpsl
and
mov
lds
jb
pushf
jecxz
and
lret
lret
pop
leave
mov
call
clc
sub
sbb
inc
push
pop
fcoms
ret
flds
mov
jle
fidivl
or
add
ftst
add
dec
rcrb
out
mov
cmp
adc
xchg
addr16
int3
stos
jo
std
pusha
cmp
mov
repnz
xchg
cld
into
sub
inc
repz
pxor
movsb
mov
pop
out
sbb
clc
add
ljmp
mov
ss
jb
and
repnz
addl
scas
lcall
cwtl
add
clc
js
mov
inc
mov
ss
es
cs
jl
shlb
mov
outsl
sbb
sub
movsb
sub
adc
cmpsb
xor
arpl
ds
data16
pop
cmp
adc
scas
es
jae
push
xchg
push
and
jno
or
mov
mov
pop
push
test
inc
shlb
ds
pop
or
shlb
inc
rcr
js
aas
loop
adc
dec
xchg
xor
outsb
idiv
mov
mov
mov
pushf
pusha
mov
fstpl
add
mov
out
pop
mov
cmc
ret
popa
inc
sub
mov
add
xchg
jmp
pop
jne
xchg
adc
inc
xor
into
jb
sub
push
pop
ds
lcall
out
sub
jne
lcall
and
fcompl
and
std
push
cmpsl
pop
cmpsb
pop
stc
push
mov
test
dec
out
ss
xchg
cs
pop
sar
jbe
imul
icebp
fcoms
pop
mov
mov
imul
cld
jnp
mov
add
xor
cmp
in
or
jle
pop
mov
cmpsl
mov
push
out
cld
andl
mov
pop
mov
outsb
add
xchg
movsl
pop
push
rolb
inc
push
insb
inc
sub
jg
movsl
mov
jecxz
jmp
call
icebp
mov
cld
sbb
mov
loop
jge
lds
in
mov
std
mov
mov
bnd
repz
aam
movsl
adc
push
shll
lods
arpl
pop
out
mov
and
sbb
shll
mov
jbe
aaa
imul
jae
orl
add
enter
sbb
xor
inc
push
xchg
cs
enter
mov
dec
jmp
clc
pop
shl
cmp
mov
in
xchg
aam
or
xchg
push
adc
nop
jl
push
adc
scas
lea
push
inc
fbld
insb
xchg
sub
or
rcrl
cwtl
push
movsl
cmp
ret
jae
insl
loope
adc
xchg
out
and
sbb
mov
pop
lods
mov
shrl
es
xor
mov
add
pop
mov
rclb
xchg
out
pop
addb
mov
xchg
js
mov
ljmp
aam
mov
nop
imul
add
inc
jo
pop
insl
movsl
push
xchg
divb
lods
inc
cmp
fisubl
sbb
mov
in
mov
jmp
lahf
inc
sub
push
out
sbb
jo
xor
xchg
hlt
jnp
push
test
cmpb
add
push
imul
xor
cltd
pop
lods
sbbb
aaa
out
xchg
push
fsubs
insl
dec
std
xchg
add
and
test
andb
jb
sub
xorl
mov
ret
jnp
pop
pop
xchg
dec
jmp
lea
pop
adc
das
push
daa
mov
dec
fadds
sub
mov
mov
xlat
rcrl
xor
mov
mov
aaa
sub
and
sbb
inc
fists
dec
shll
imul
xchg
dec
mov
xchg
out
shlb
adc
sub
push
add
es
jecxz
add
call
cmpsb
sbbb
mov
jae
sbb
test
ds
mov
in
mov
cmpsb
int3
push
aam
out
inc
adc
call
loop
inc
sub
mov
sub
mov
xchg
hlt
sbb
in
les
sbb
ret
mov
pop
xchg
insb
cmp
mov
shll
and
jg
inc
push
add
ljmp
sub
dec
add
xor
testl
jp
xor
clc
data16
adc
sbb
enter
or
lods
into
icebp
jnp
sbb
sub
out
add
add
fwait
and
pop
sbb
in
cs
jb
xchg
pop
es
push
and
aad
jl
inc
ficompl
cmpl
push
inc
cmp
pop
mov
negb
rolb
ds
jno
scas
cmpsb
ret
test
jno
sahf
mov
inc
sub
scas
xchg
adc
push
xchg
rorb
push
shld
test
ja
add
lret
and
addb
stos
adc
shr
ja
nop
addl
fwait
xchg
and
nop
sub
out
mov
imul
mov
daa
pop
cmc
jge
scas
push
test
aaa
add
popa
mov
or
push
lea
das
in
mov
cmp
push
xor
cltd
dec
sbb
inc
outsl
test
xlat
shrl
call
fisubs
jecxz
pop
repnz
or
test
cltd
mov
inc
aaa
lods
sbb
fdivp
cwtl
das
loopne
inc
aaa
pop
sti
mov
sahf
mov
data16
cwtl
add
sahf
push
push
mov
mov
lods
push
out
in
adc
in
adc
aad
jmp
cltd
ljmp
xchg
mov
sub
push
or
inc
popa
repnz
test
fs
popa
imul
push
and
outsl
mov
or
cmp
jg
stos
sbb
pusha
xchg
in
xor
fxch
cmp
test
jns
cli
push
adc
cwtl
shrl
repz
jecxz
je
std
cld
idivb
in
fsubl
push
mov
rclb
in
nop
sub
mov
mov
test
mov
and
add
push
push
ficoml
cs
clc
fmulp
sbb
sbb
out
jne
data16
sub
dec
imul
adc
movsb
xor
or
rcrl
xchg
mov
loopne
pop
push
cmp
sahf
xchg
mov
pop
cli
jecxz
inc
out
aaa
test
xchg
lahf
mov
jecxz
and
int
fisttpl
out
sub
pop
lret
xchg
add
push
pop
adc
sti
and
push
dec
popf
rorb
xorb
pop
sub
insb
popf
adcb
mov
xchg
jmp
daa
enter
roll
faddp
ret
in
loop
in
inc
cmp
mov
push
arpl
push
cmp
test
decl
push
xchg
pop
cld
cmp
test
lock
sbb
imul
jno
lcall
cmp
rcll
outsl
mov
and
loop
and
jmp
mov
or
pop
std
fsubrs
jo
mov
jecxz
out
daa
pusha
adc
pop
mov
jo
add
jo
rcl
jl
es
scas
sub
cmp
jno
push
push
add
jl
dec
and
or
movsl
adc
mov
aas
inc
push
adc
test
rcr
mov
fiaddl
inc
or
sbb
lock
mov
push
pushf
add
xchg
xor
fidivs
jnp
in
add
adc
xor
mov
or
push
jle
fs
in
dec
mov
adcl
cwtd
cmp
loop
push
mov
ret
int
adc
nopl
add
mov
inc
sbb
shlb
inc
outsl
xor
aas
test
lret
in
adc
adc
aaa
jae
add
xchg
stos
push
aas
fistpl
or
jecxz
das
lcall
push
mov
and
data16
cmc
jl
inc
int3
dec
cmp
sarb
lods
mov
add
sub
pop
xor
inc
into
mov
mov
orb
mov
aam
das
mov
pop
icebp
idivl
mov
sbb
imulb
sbb
cmp
fwait
mov
add
in
lcall
pop
fsubs
and
cmp
pop
dec
or
insl
push
pop
stc
xchg
add
cmp
pop
xlat
pop
cmp
push
jp
js
daa
xchg
or
adc
xchg
fsincos
in
inc
sbb
cmp
xchg
test
sbb
mov
or
adc
pop
sarb
outsl
adc
mov
test
fildl
inc
sub
loope
xor
pusha
lds
push
mov
sbb
lcall
hlt
fistpl
or
scas
jl
imul
and
ss
outsb
dec
mov
mov
jb
repz
add
lahf
stos
fcmove
dec
je
repz
push
les
fcoms
sarb
sub
xchg
stc
jge
and
bound
push
mov
shr
adc
push
mov
pop
lods
std
loop
in
pop
mov
loope
leave
push
add
xchg
xor
and
aam
jnp
mov
mov
xor
add
mov
inc
mov
inc
ret
clc
sbb
flds
lret
sub
divb
pop
subb
fs
pop
pushf
popa
pop
in
cmp
int3
lods
fwait
dec
imul
outsb
mov
dec
aas
xor
insl
mov
sub
shrb
adc
das
test
xlat
mov
xchg
push
xchg
icebp
and
imul
ljmp
jbe
repz
mov
fisttpll
jge
or
add
mov
int
add
in
xchg
das
mov
inc
mov
cltd
mov
popf
test
xchg
iret
mov
sbb
popf
push
flds
jbe
aas
mov
mov
inc
push
cmc
push
lret
mov
add
lret
loop
mov
add
outsl
movsb
mov
mov
shlb
pop
push
inc
sub
sbb
popf
mov
mov
test
push
rcr
mov
std
inc
jns
sbb
call
cld
mov
test
xchg
pop
cld
adc
xchg
cmc
xchg
and
jecxz
and
xor
dec
sub
call
dec
pop
mov
or
in
mov
cli
sarb
xchg
das
jl
stc
rcll
test
daa
mov
ljmp
inc
iret
add
or
ss
push
std
mov
adc
mov
jno
xor
scas
iret
dec
dec
dec
sub
cmpsl
push
pop
outsb
adc
or
ret
outsl
dec
daa
lock
adc
cltd
out
test
out
call
cwtl
in
pop
aad
cmp
bound
andb
mov
into
cmpl
in
adc
subb
cld
test
adc
xlat
dec
inc
cs
pop
sub
addr16
dec
push
addr16
shlb
fwait
sub
adc
cmp
sub
and
xchg
or
push
stc
add
push
pop
sbb
fcmovbe
out
rclb
push
movsl
push
jmp
sub
or
fisttpl
aam
push
inc
mov
and
rep
negl
xor
adc
imul
and
repnz
adc
shrl
xlat
repz
test
rorb
dec
test
pop
xlat
push
jo
xchg
sub
into
push
pop
sub
push
jle
pop
or
mov
ss
pop
inc
rolb
adc
inc
jecxz
push
movsl
outsl
arpl
mov
jle
and
mov
in
mov
iret
test
pop
icebp
cmc
jb
xchg
inc
sub
push
je
cltd
mov
pop
xor
adc
mov
pop
gs
or
imul
lret
jae
cmc
ss
in
sbb
les
jp
lret
mov
pop
and
rorb
dec
push
pop
in
leave
rclb
mov
into
adc
stc
mov
push
jns
sbb
addr16
dec
sbb
stos
into
test
imulb
mov
inc
fbld
lahf
xor
popf
push
mov
push
dec
cmpsb
push
lahf
sub
mov
push
push
mov
dec
pop
andb
fmul
sti
mov
mov
enter
push
inc
movb
xchg
jbe
or
mov
jbe
test
jmp
mov
aam
call
shll
test
int
xor
cltd
dec
xchg
sbb
ret
and
mov
mov
out
lret
mov
dec
sbb
clc
cltd
lods
xor
test
jmp
lds
jmp
fcmovb
popa
push
mov
scas
sbb
fmulp
je
xchg
call
loope
jmp
aas
adc
in
push
rcrb
in
addr16
pop
add
outsb
xor
jle
adc
sub
add
in
or
pop
out
dec
fists
and
ss
sar
xchg
clc
dec
xchg
out
scas
xor
insb
dec
xchg
stos
lock
sbb
lds
jecxz
or
pop
scas
in
adc
sub
iret
pop
hlt
decb
shlb
aaa
mov
xor
and
sar
sti
or
lcall
cmp
addr16
sub
pop
out
push
cltd
lock
mov
pop
push
jne
cmp
imul
dec
das
aad
movsl
jb
mov
test
mov
insl
addr16
dec
test
cli
fldl
repz
or
add
lcall
cmp
pop
ret
mov
pushf
lcall
cltd
mov
out
scas
bound
jmp
gs
jge
cld
fmuls
lea
inc
stos
mov
jo
shlb
pop
dec
ret
pop
dec
add
lahf
adc
jne
int3
mov
ja
lods
adc
lods
into
jp
push
or
push
cmpsl
ficomps
push
ss
mov
xor
pop
pop
inc
pop
scas
out
insl
sahf
dec
inc
or
fwait
mov
lods
and
or
xlat
cmp
sbb
add
push
cmpsb
cs
mov
mov
cmp
out
dec
loope
rcr
fildll
popf
xchg
jecxz
les
push
sub
pop
out
push
repz
cltd
insl
jmp
xchg
stc
xor
arpl
cmp
das
movsb
in
push
out
sbb
mov
insl
mov
loope
or
mov
js
shl
fnstsw
test
mov
jecxz
add
cmpsl
dec
pop
insl
and
jp
stos
xor
cmp
mov
or
cmc
sbb
pop
jno
test
push
adc
iret
adc
mov
out
cmp
jl
mov
jb
movsb
cmp
pop
or
or
sti
aad
testb
jb
je
stos
inc
fldt
out
mov
and
aad
jo
repnz
cld
cmpsb
pop
mov
xchg
mov
es
mov
loop
pop
mov
sbb
ds
inc
pusha
lods
dec
cwtl
inc
lea
cmp
push
adc
leave
shl
xor
push
mov
cmc
call
push
aam
repnz
mov
push
jae
push
fcoml
push
clc
sti
pop
inc
out
mov
nop
or
jg
aam
sti
gs
pusha
fadd
mov
mov
xor
and
mov
out
andl
push
mov
seto
out
jb
push
addr16
lcall
add
pop
adc
stc
div
mov
je
xlat
outsb
sbb
lcall
mov
ror
scas
lret
jo
arpl
or
lcall
pop
iret
jge
ret
in
and
popf
lds
icebp
es
sbb
jle
inc
es
xchg
push
jge
cmc
pusha
or
mov
cmpsl
out
or
out
movsl
int3
ffreep
mov
add
testl
negl
cltd
movsb
sbb
je
popa
jns
in
xor
cwtl
mov
add
jmp
int
sub
loope
push
in
out
imul
call
add
push
out
rcl
lret
inc
mov
jp
sahf
mov
or
push
and
mov
cwtl
mov
cmp
or
pop
mov
pusha
test
shrl
sub
dec
stos
adc
mov
popf
test
std
stos
fdivrl
ret
call
arpl
xchg
sbb
mov
aam
fstpt
push
insl
push
jmp
fstpl
outsb
icebp
test
adc
xchg
xor
and
and
xchg
cmp
add
mov
pop
mul
faddp
sbb
jg
xchg
orl
or
jne
fimuls
and
jb
adc
inc
stos
cwtl
pusha
in
xor
cmc
and
test
jle
cmpsl
pushf
adc
nop
add
xchg
jne
xchg
in
adc
in
sti
dec
into
mov
xchg
scas
stos
mov
addr16
mov
int
lods
std
and
fisubrs
cmp
jecxz
aaa
xchg
shlb
dec
pop
subb
in
popa
lea
add
pop
adc
adc
xchg
cmpsl
dec
and
dec
adc
xor
sub
lds
cvtps2pd
lock
aas
adc
imul
mov
aad
xchg
pop
repnz
or
pop
das
xor
mov
aaa
dec
cmp
mov
jae
push
daa
mov
lret
cmp
daa
mov
push
and
mov
into
gs
dec
pop
scas
leave
es
jno
mov
aad
repz
cmp
loop
add
pop
pop
or
shrl
sbb
cmpsl
jnp
movsb
lock
push
cmpsl
popa
jp
adc
lret
xchg
push
popa
lods
stc
jmp
sub
test
pop
xor
out
cs
xor
stc
pop
pop
xor
dec
sub
inc
pushf
jne
negb
lds
mov
dec
jne
push
fsub
out
lcall
jns
push
dec
or
xlat
sbb
cmp
faddl
dec
mov
pop
ret
scas
les
out
xchg
jecxz
aaa
xchg
imul
mov
xchg
hlt
nop
sti
jae
mov
hlt
push
jnp
jo
lahf
jb
xchg
push
insl
sarb
movsl
sbb
mov
sti
mov
push
in
mov
mov
jae
inc
inc
fcompl
icebp
adc
fmull
sub
out
mov
je
sub
add
out
lods
dec
xor
inc
movsl
icebp
add
hlt
lock
dec
lahf
gs
daa
cmp
in
int
cmpsl
mov
notb
xchg
or
mov
mov
add
ljmp
or
and
add
in
xlat
push
lds
addr16
std
in
or
sbb
call
add
cmpsb
inc
xorb
and
add
inc
sbb
je
aaa
or
icebp
cs
addb
jg
dec
inc
fistpll
adc
dec
cmc
stos
xchg
scas
inc
lock
cmp
mov
stos
outsb
aas
out
or
into
out
fstl
mov
fcmovbe
jbe
xchg
dec
jge
push
ret
in
jo
add
jbe
pop
loop
sub
fdivs
ss
push
std
inc
scas
xchg
and
adc
or
ljmp
xchg
mov
cwtl
mov
pop
mov
or
add
lods
pusha
dec
inc
pop
cmp
jnp
das
inc
mov
pop
jns
or
mov
jo
push
or
push
in
mov
cwtl
int
cmp
inc
ret
cmp
insb
push
push
xchg
xor
mov
test
int
into
aam
fnstsw
int3
jmp
or
xor
subl
adc
dec
adc
dec
in
sbb
mov
lds
insl
and
push
jecxz
hlt
jecxz
sub
aad
cmc
push
loope
cwtl
sarb
and
mov
fwait
test
lock
pop
mov
icebp
hlt
push
sbb
mov
arpl
mov
or
fisttpll
repnz
jns
mov
xor
inc
and
sub
push
cmp
sbb
xchg
adc
xchg
shrb
sbb
inc
scas
adc
cmpsl
adc
mov
adc
repnz
push
loopne
ret
test
jne
mov
lods
call
dec
adc
add
push
jg
imul
dec
pop
roll
pop
loope
lret
pop
arpl
or
xchg
popf
xor
xchg
xlat
pcmpeqd
mov
imul
pop
inc
sti
fstpl
inc
lods
mov
jns
popl
inc
sahf
adc
xchg
mov
ljmp
jb
sarl
adc
dec
adc
int3
push
xchg
fnstsw
inc
scas
int
mov
cs
sbb
js
sub
sbb
lret
or
xor
in
jno
test
lea
js
inc
es
frstor
cwtl
or
jno
adc
add
out
fists
inc
fiaddl
adcb
push
and
pop
repnz
in
jb
loope
addr16
out
push
xor
nopl
pop
xor
insl
pop
lea
in
push
dec
scas
pop
lods
and
insl
mov
fisubrs
cmp
add
mov
enter
mov
sbb
mov
add
testb
aaa
sbb
mov
sbb
aaa
inc
arpl
jb
stos
sub
and
mov
sbb
movhps
fcmovnbe
push
sbb
imul
sub
mov
mov
inc
les
cmp
sahf
je
enter
rcrb
mov
fildl
shufps
push
dec
adc
cwtl
pop
mov
test
into
dec
ret
rcl
fldt
rcrb
and
lea
dec
adc
sub
je
and
loop
lock
mov
push
out
std
loope
mov
fimuls
sbb
shll
int
leave
mov
and
mov
in
test
mov
pop
mov
ss
push
xor
icebp
pop
cmp
mov
insb
outsl
sti
xor
dec
fs
jo
jle
adc
jns
adc
nop
push
jae
cli
mov
push
jge
jmp
dec
fsubs
in
or
imul
in
test
icebp
jb
inc
xchg
aad
lret
aaa
and
int
and
xor
cmp
lock
cmp
sti
jbe
inc
test
pop
test
mov
jbe
adc
inc
dec
repz
xchg
mov
mov
mov
and
jbe
jo
add
pop
pop
add
add
andl
jg
cmpsb
push
sbb
push
insl
and
outsb
out
sub
cmc
andb
lock
clc
clc
fidivs
sbb
cmp
rol
mov
addr16
lock
aas
pop
imul
in
ljmp
add
cmp
xchg
adc
daa
out
in
jnp
hlt
pop
pop
sub
push
arpl
push
mov
xacquire
pop
out
inc
push
dec
inc
jae
push
cmpsl
mov
imul
xchg
aad
sbb
adc
mov
ret
mov
push
or
rcll
dec
pop
jmp
add
add
push
and
pusha
test
in
pop
pusha
mov
jge
std
cmpsb
call
dec
fdivrl
sbb
jb
jmp
cld
in
das
out
push
pop
jne
push
stc
negl
rcl
pop
inc
nop
lds
inc
lods
jl
sahf
pop
scas
adcl
sbb
xor
in
rol
out
pop
jmp
push
fwait
inc
in
push
cmpw
dec
stos
jp
sub
cltd
insl
pop
pop
pmullw
stc
xchg
push
or
adc
xchg
dec
mov
int3
mov
mov
cs
mov
sbb
add
int
test
inc
stc
sub
loopne
cmp
push
push
or
sub
inc
mov
mov
and
jge
fld
dec
cmp
cmp
imul
aas
adc
ljmp
xchg
push
idivl
sub
cmc
pop
lahf
xchg
flds
cmp
jmp
aaa
addr16
repnz
jge
mov
dec
push
sti
mov
mov
mov
inc
mov
pop
fimuls
out
mov
insl
and
sub
loopne
leave
iret
daa
fisubrs
push
incb
scas
dec
pop
pop
aaa
push
imul
leave
push
mov
nop
dec
push
xchg
movsl
ds
xchg
into
jmp
mov
cmp
xchg
and
into
insb
or
adc
bnd
inc
hlt
jmp
lods
das
mov
gs
or
and
out
mov
xchg
idivl
xor
popf
and
push
inc
pop
pop
insb
fsts
adc
stos
enter
cmpsb
jg
push
xchg
nop
adc
pop
dec
lods
outsb
pushf
add
xchg
ret
inc
mov
popa
loope
iret
dec
enter
dec
cwtl
test
mov
and
rcrb
scas
test
stos
mov
and
data16
outsl
leave
movl
ds
jbe
or
jno
mov
dec
hlt
lea
dec
push
and
ret
jp
sub
sti
inc
out
pop
mov
add
cld
sub
insl
adc
pop
hlt
lods
xchg
or
sbb
xchg
xchg
js
push
push
imul
in
insl
fsubr
inc
in
int
push
xchg
ret
sub
testb
in
mov
popa
cs
push
dec
ss
mov
mov
push
fcompl
popa
out
inc
mov
int3
ficoml
fstps
leave
dec
lock
ret
rcr
mov
fcomi
adc
add
adc
imul
xchg
mov
push
xchg
fsubrs
cs
fisttpll
into
mov
adc
movb
push
cltd
pusha
adc
mov
mov
xor
into
in
pop
adc
hlt
add
mov
popf
data16
push
je
lock
jae
lret
inc
icebp
jg
jecxz
and
jge
scas
sbb
push
out
daa
mov
xchg
or
loope
cld
xor
xor
mov
and
adc
sbb
dec
push
push
shll
out
xor
sbb
scas
mov
xlat
movsl
dec
jp,pt
or
lock
divl
cmp
dec
or
xchg
adc
and
fiadds
lcall
bound
rclb
cmpsl
cld
sub
add
mov
lcall
jae
shrl
lea
mov
mov
or
cmp
jge
sub
mov
in
jmp
rorl
sbb
mov
pusha
cmp
push
pop
mov
adc
add
push
adc
in
push
xchg
ret
or
addr16
test
dec
aas
add
inc
imull
adc
fsubp
mov
push
dec
adc
sti
or
mov
pop
icebp
adc
cld
adc
mov
outsl
and
fisubrl
jp
fmul
push
cld
fcoml
test
and
xchg
lods
fs
mov
sub
shlb
pop
testl
js
mov
inc
cmp
mov
inc
das
rcrb
mov
lock
mov
mov
mov
adc
or
or
repz
les
adc
insl
sub
das
sbb
subb
testb
ret
sahf
mov
xor
and
inc
pop
or
push
cmpsb
xchg
sbb
lds
xchg
inc
adc
outsb
aaa
push
rolb
jbe
std
pop
lahf
push
roll
test
outsl
sarl
xorl
daa
push
cmp
xor
mov
pop
or
mov
cmp
jnp
out
jg
lock
scas
sub
out
mov
test
adc
pop
inc
pusha
cmp
pop
subl
add
push
mov
sbbb
cmp
mov
fsubs
inc
cld
sbb
jae
adc
sub
cmpsl
out
in
sbb
arpl
test
mov
jecxz
xchg
sub
subl
test
in
cmp
mov
popa
loopne
dec
andl
js
and
and
aam
sbb
rorb
lods
pusha
out
pop
test
pop
pop
or
stos
xor
and
pop
arpl
scas
inc
mov
push
imul
outsb
mov
popa
push
in
aam
arpl
cmc
inc
xchg
das
cli
cmpsb
sub
mov
mov
repnz
loopne
rol
inc
mov
pop
sub
mov
mov
iret
xchg
xchg
or
inc
sbb
mov
sbb
into
pushl
xor
fdivr
aas
call
loopne
xor
pop
jns
xchg
adc
cltd
sbb
notl
xor
inc
loopne
add
push
shlb
movsl
push
push
or
push
fistl
cmc
jae
es
adcb
jl
dec
cmc
mov
pop
and
fcomps
inc
fbstp
data16
call
xchg
ljmp
insl
int
xchg
sub
loop
jbe
and
xor
loop
mov
mov
lds
push
sbb
sti
sbb
sarb
and
jb
addb
gs
sub
das
cli
adc
mov
lods
call
int3
movsl
pop
pop
push
inc
movsl
jl
push
jbe
in
mov
imul
mov
xor
mov
push
in
sub
ljmp
dec
mov
fildl
negl
sbb
cmpsl
push
sub
pushf
outsl
fsub
inc
add
inc
imul
mov
in
and
or
sbb
imul
dec
xor
mov
aad
or
dec
insl
push
xor
xchg
add
into
sub
jb
in
int3
lock
hlt
dec
scas
mov
int
es
outsl
cmp
ds
std
shlb
or
lahf
popa
es
cmc
ret
mov
imul
mov
xchg
mov
pop
mov
add
dec
inc
pusha
outsb
xchg
fimull
pop
out
lret
cmp
mov
adc
jp
loopne
mov
add
push
xor
jae
fisubrl
dec
ret
add
test
jns
mov
dec
cmp
aas
and
jle
shlb
and
xchg
int
lcall
ja
cwtl
inc
insb
jnp
cmp
adc
dec
xchg
push
movsl
test
push
cwtl
sub
inc
gs
add
mov
orb
repz
xchg
mov
push
lock
mov
sti
call
jo
fisttpl
test
xor
mov
pop
mov
xchg
mov
inc
movsb
xchg
jp
and
inc
sub
xchg
cmpb
pop
enter
stos
lahf
xchg
mov
add
cmp
inc
loop
and
push
sbb
mov
mov
push
addr16
xchg
sub
in
cmp
xchg
adc
faddl
add
sbb
mov
pop
nop
pop
insl
push
in
inc
mov
mov
ljmp
fcomps
dec
pmuludq
cld
cmp
aad
jg
xchg
sbb
mov
cmp
sahf
in
push
int3
out
aaa
inc
cmpsl
rcrl
out
js
dec
push
mov
cmp
pop
fildll
adc
cli
push
addb
mov
push
xlat
mov
push
jge
fadds
test
iret
jp
cltd
shrb
ljmp
mov
iret
and
inc
and
xchg
rol
and
cmc
mov
mov
movsb
add
fmul
cmpsb
and
pop
cmp
and
mov
xor
sbbb
sub
xchg
push
in
clc
das
mov
adc
insl
sbb
mov
inc
stos
jmp
sbb
icebp
xchg
sti
xor
pop
fwait
int
push
loope
shl
sub
mov
rolb
cmp
lea
shrl
lcall
out
sahf
outsb
dec
xor
xlat
decb
add
jbe
and
lret
push
sbb
jecxz
pusha
sub
xlat
test
add
lahf
pop
push
addr16
xor
jmp
mov
or
jno
push
push
test
fsubs
icebp
sbb
xchg
cmp
push
mov
mov
aaa
das
dec
mov
or
sti
fcomps
scas
fldt
jl
rcrb
aad
out
push
sbb
adc
mov
add
xor
mov
repnz
out
pop
sub
cmpb
sub
scas
xchg
lods
stos
jae
pusha
cs
lods
xor
loopne
mov
cmp
jecxz
cld
sub
mov
shlb
mov
add
addb
clc
xorb
ja
sub
mov
sbb
testl
mov
bts
in
sbb
insl
push
push
imul
gs
lret
inc
or
jae
dec
mov
push
lcall
and
inc
mov
sub
aaa
mov
add
repnz
shl
test
sahf
mov
pop
cmpsl
inc
add
mov
xchg
movsb
and
jl
jnp
nop
arpl
cmp
inc
fneni(8087
jne
mov
add
shlb
mov
add
ljmp
add
test
inc
test
dec
mov
adc
fstpl
loop
mov
xor
hlt
movsl
push
dec
adc
lock
cmp
pop
or
mov
mov
jg
push
pop
dec
sahf
testb
pop
inc
mov
cmp
call
jge
xchg
push
pop
pop
push
sbb
loope
inc
aaa
cmpsb
ja
lret
dec
cltd
mov
movsb
ss
iret
in
andb
push
pop
lahf
sub
push
sbb
das
push
mov
clc
jae
cmp
dec
push
js
mov
gs
inc
xchg
pushf
mov
dec
ss
jbe
or
dec
add
adc
pop
push
sbb
movsl
cld
into
ja
rcl
gs
sub
inc
adc
mov
pop
cmp
mov
call
daa
mov
sahf
je
adc
cmpsl
test
iret
icebp
in
mov
lods
pop
inc
in
sbb
movsb
or
cmpsb
and
pop
inc
xor
xchg
or
add
int3
mov
mov
adc
sub
xor
sbb
sbb
dec
insl
pop
mov
rcrl
mov
sub
cld
or
ljmp
stos
popa
mov
addl
jne
inc
loope
divl
rol
roll
out
fwait
or
sub
push
rcll
mov
cs
inc
dec
test
xchg
cmp
cmp
dec
dec
pop
cmpsb
jnp
imul
inc
jge
pop
jmp
imul
popa
adc
pop
cmp
inc
cmp
rcpps
inc
xor
and
outsb
adc
mov
mov
dec
orb
pushw
les
dec
dec
inc
inc
add
popf
mov
mov
cwtl
pop
sbb
in
fwait
pop
mov
cmp
and
or
sub
inc
cli
aad
push
push
sbb
insl
push
mov
loope
mov
ja
inc
rol
out
out
scas
sub
mov
movsl
lods
inc
sbb
xchg
and
hlt
addr16
jecxz
sbb
xchg
leave
enter
in
das
sahf
fbstp
adc
pop
cltd
outsl
loop
mov
sbb
add
je
into
lea
cmp
or
mov
mov
std
cmp
std
fstpt
mov
mov
sbb
inc
xchg
cmpsb
dec
aas
imul
push
daa
mov
fisubrl
imulb
rolb
jno
cld
out
outsl
cmp
in
sub
or
or
sahf
ss
jnp
fldl
push
pop
mov
shl
pusha
or
mov
cmc
out
fnstcw
jmp
jl
js
popa
scas
mov
xor
icebp
lock
hlt
ljmp
enter
mov
imul
int3
fwait
or
loop
sbb
mov
jle
pop
pop
adcb
daa
jmp
mov
sbb
xchg
fiadds
ljmp
in
push
test
jmp
mov
fs
mov
repz
add
sub
cli
cs
addr16
lods
leave
mov
pop
fcmovne
mov
jb
push
shl
negl
das
push
out
jl
or
or
movsb
or
outsb
fildll
pop
or
mov
testb
jno
cmp
aam
enter
cmp
xor
insb
clc
out
add
mov
dec
push
lret
stc
leave
in
lds
jnp
jmp
and
xchg
jle
xchg
cmp
cli
xchg
es
lea
jge
test
rol
pop
cmp
rolb
or
adc
inc
popa
cltd
push
or
or
inc
imul
flds
mov
aam
or
sbb
fdivs
lds
out
xchg
mov
jae
mov
idivb
jecxz
inc
push
adc
mov
or
int
xor
xor
mov
add
outsl
int
cmp
dec
jno
popf
outsb
iret
pop
jmp
xor
shll
sarb
mov
test
leave
cld
clc
mov
jge
inc
mov
dec
jp
and
ret
and
mov
add
cmp
cld
int3
add
jbe
inc
cmc
lods
stos
les
fwait
call
adc
mov
ret
aam
mov
jnp
push
mov
sbb
loope
push
xor
dec
fidivrl
outsb
arpl
fs
repnz
pop
mov
jle
mov
jl
ret
insb
xchg
ret
mov
out
test
xor
lock
pop
mov
cmc
mov
pop
mov
call
adc
mov
mov
dec
sbb
or
sub
push
push
push
repz
fsubs
mov
ljmp
and
in
mov
fcoml
xchg
cmp
sub
mov
cld
adc
out
adc
or
mov
cmp
jns
sbb
add
jmp
repz
mov
jae
imul
call
loop
ficomps
ficoml
jno
xchg
cwtl
and
cs
sub
xchg
ffree
test
jge
dec
xor
and
mov
mov
icebp
pop
rcr
cmp
add
dec
jg
pop
push
sti
popf
pop
push
xchg
ja
enter
mov
dec
int
xchg
mov
inc
out
cmc
push
mov
sbbb
xor
cmp
adc
jle
xchg
inc
in
xchg
repz
add
add
fsts
and
sub
push
daa
into
mov
addr16
pop
dec
mov
inc
jmp
push
ds
in
cld
std
or
fcomi
mov
mov
mov
xchg
xor
mov
or
and
out
stos
rcl
sahf
js
sbb
mov
mov
ds
add
mov
cli
punpckhwd
inc
dec
pushf
push
xchg
stc
fmull
sbb
mov
fistps
jbe
cmp
iret
aad
jecxz
mov
cltd
pop
jmp
inc
clc
jb
or
xchg
and
mov
sbb
xchg
jmp
or
push
sub
pop
xchg
adc
sub
mov
lcall
test
lret
loopne
adc
jno
sub
or
lahf
push
negl
adc
lcall
loopne
ret
or
mov
int
or
cli
in
into
stos
cmp
faddl
jb
cmp
push
sbb
jecxz
jae
popa
mov
push
jo
adc
clc
and
sub
movsb
pop
sbb
enter
xchg
push
lods
pop
cmpb
and
shlw
mov
fisubrl
or
pusha
jg
fisttps
andb
ds
pop
leave
push
dec
out
sbb
addr16
mov
leave
data16
xorb
pusha
jne
inc
scas
mov
test
fistpll
por
fisttpll
push
cld
jne
aas
ja
jle
xor
insl
fsts
cmpsl
or
stc
inc
loop
inc
loop
cmp
mov
sbb
cmp
and
fistps
sarb
out
repnz
mov
pop
dec
mov
bsf
cli
shlb
mov
bound
iret
fwait
xor
and
ret
idivb
inc
test
sbb
cmp
mov
stc
push
jno
mov
lea
push
sbb
dec
les
in
andl
sub
pop
inc
outsb
ljmp
cld
xorb
popa
lock
es
fidivrl
push
adc
bound
sub
std
jae
mov
cltd
lds
leave
xchg
cwtl
jae
push
jno
xor
testb
fcmovbe
aaa
rcl
subb
xchg
add
pop
inc
pop
sub
in
jo
out
adc
jp
dec
sbb
fwait
enter
cmpsl
rorb
push
subl
jns
adc
pusha
jg
in
cmp
divl
push
adc
lock
pop
push
jnp
ds
and
jle
rorl
mov
push
add
dec
imul
lret
mov
xchg
adcl
inc
fsubrs
mov
ds
cmp
jns
and
push
aas
movsl
or
cmp
and
push
or
push
popf
mov
ffreep
jl
push
xchg
add
les
mov
inc
xchg
jne
push
inc
iret
or
aaa
jl
mov
fnstenv
out
arpl
or
inc
out
xor
sahf
push
movsl
aas
pop
shrb
sarb
pop
aas
aam
xlat
cld
ja
out
sub
dec
push
jl
in
xor
daa
lcall
pop
pop
adc
push
dec
cld
and
push
dec
cmp
jle,pn
out
cmc
jae
icebp
and
stos
sub
xchg
lds
or
aam
aad
or
aam
inc
push
sbb
test
aas
cmpsl
dec
insl
fimuls
dec
fstpl
sbb
sub
mov
mov
mov
fiadds
outsl
jle
jo
lods
mov
push
into
ss
sub
data16
outsl
scas
jnp
xchg
fisttps
idiv
mov
mov
add
xor
in
call
cmp
jbe
cmp
clc
aaa
or
push
push
dec
insl
pusha
fcomip
lds
xor
jb
mov
mov
jnp
jnp
sub
push
mov
lock
clc
pop
cmp
lcall
lret
jo
mov
pop
adc
or
push
clc
adc
leave
call
dec
and
cld
addr16
jns
inc
mov
negl
ds
fwait
out
push
test
push
fsubs
bound
jg
add
les
xchg
jge
imul
fildl
adc
sub
in
add
push
mov
dec
sbb
jns
jae
roll
dec
dec
xor
adc
pop
mov
lods
pop
or
adcl
stc
int
sbb
or
pop
test
dec
inc
mov
and
cwtl
and
imul
push
hlt
add
fwait
jo
jle
out
adc
xchg
and
fstl
rep
jge
addr16
fadd
jmp
mov
cwtl
out
pop
stos
repnz
clc
pop
and
ljmp
aam
fmuls
repz
scas
mov
sub
sub
sub
fs
or
fiadds
push
mov
loope
js
or
in
mov
ret
mov
xchg
and
fisttps
push
repnz
dec
xchg
in
jae
into
and
fs
and
mov
clc
or
xchg
pop
mov
mov
sbb
pop
sbb
cmc
inc
mov
jo
jns
out
xchg
lret
clc
lock
ficoml
mov
xchg
or
in
cld
xchg
mov
mov
and
sahf
jg
popa
xchg
mov
lret
gs
jp
xor
fs
adc
inc
icebp
decb
adcl
xchg
sbb
add
enter
daa
push
pop
jmp
lds
out
xchg
mov
adc
adc
or
jg
lods
mov
lahf
mov
or
fwait
xchg
add
cld
fcomip
dec
jae
or
pop
push
and
push
mov
pop
xchg
repz
adc
jmp
hlt
pop
xor
outsl
adc
pop
jo
mov
pop
xchg
iret
sbb
out
lea
dec
xlat
insl
sub
add
scas
adc
jno
jae
les
and
push
testl
push
push
test
jecxz
sbb
fwait
and
in
and
mov
enter
flds
and
in
les
addl
lods
lock
fidivl
sbb
mov
addr16
xchg
mov
xchg
push
mov
mov
ss
xchg
imull
sub
xor
or
jl
mov
insl
sbb
mulb
stos
sti
cli
arpl
shrb
cmp
pop
pop
xchg
and
pop
cmp
push
xor
mov
cmpsl
mov
jns
sub
insb
les
xor
push
and
popa
push
adc
lods
rorl
inc
fucom
pop
or
incb
inc
popf
rcrb
jmp
push
aam
divl
inc
mov
mov
inc
sub
rcl
lock
data16
pop
in
cmpsb
adcb
adc
in
outsl
fld1
stos
xor
mov
aas
iret
adc
jne
dec
pop
pop
jo
fidivs
or
call
lcall
mov
rorb
cmp
js
repnz
jmp
idivl
mov
loopne
or
popa
pop
cmpsl
cmc
aad
mov
pop
movsb
dec
cmpsb
sub
xchg
fadds
ret
cmp
pop
jns
jbe
or
dec
mov
mov
in
shrb
cmp
cli
xlat
fwait
andb
and
rcrb
das
xchg
or
xorb
and
pop
adc
fstl
push
cmp
mov
loope
test
and
je
add
push
scas
xchg
jno
push
mov
and
and
jns
repnz
rolb
in
out
push
leave
imul
cmpsb
push
into
inc
rcll
mov
ja
out
test
push
push
sbb
and
xlat
xchg
movsb
mov
add
sbb
ret
jecxz
add
or
cmpsl
or
push
loop
int
repz
imul
mov
je
cmp
mov
in
rcll
inc
fdiv
push
and
call
pop
fstpl
mov
jo
aam
test
imul
xchg
lret
stos
adc
xchg
sbb
add
outsb
aaa
add
xor
pop
and
sahf
call
lods
fwait
test
push
xorl
and
pop
mov
sub
push
andb
test
bound
fstp
lds
ss
shlb
jp
test
arpl
add
out
and
icebp
mov
dec
add
xchg
aam
xlat
outsb
push
repz
ljmp
push
add
test
dec
ret
shlb
cmp
repnz
push
es
add
lock
cmp
adc
cmc
ret
fdivrs
dec
inc
add
dec
xchg
insb
pop
adc
xchg
add
ret
jmp
imul
push
sbb
add
cmpsb
pop
call
adc
jo
xchg
int3
pop
xchg
lods
js
pop
fidivs
jmp
sub
lea
and
inc
fstpt
lret
jae
jbe
imull
loop
add
popf
cs
lods
repz
mov
rorl
mov
ja
outsl
addr16
ret
cmpsl
js
imul
fs
jo
in
xchg
xchg
mov
jbe
and
add
adc
pop
lsl
movb
lea
pop
aas
xchg
jb
pop
mov
mov
in
sbb
in
les
lock
mov
mov
mov
cmp
push
mov
popf
movsl
and
cli
add
rcrl
rcll
inc
outsb
push
and
push
and
or
lods
repnz
scas
pop
cwtl
add
add
aaa
lock
ss
lahf
and
xchg
inc
adc
loope
jne
push
pop
jp
mov
cli
mov
je
pop
cld
cmc
add
adc
lahf
mov
fdivrs
movsl
hlt
popa
cmpsb
sbb
push
sbbl
adc
jae
shr
loop
not
rolb
js
and
enter
mov
sbb
push
mov
mov
ja
sbb
cltd
repz
fildl
jp
push
out
cwtl
jp
test
push
sbb
pop
push
cli
pop
mov
xchg
dec
in
xchg
add
dec
in
xchg
pop
stc
sbb
or
xchg
cmpsb
push
out
mov
popa
push
shrl
and
inc
data16
push
enter
and
adc
repnz
dec
imul
pop
pop
mov
cs
out
xchg
cmpb
mov
mov
inc
lahf
bound
inc
xchg
xor
mov
xor
out
idivb
fsubrl
js
lret
cmpsl
gs
addr16
cmp
pop
daa
int
lahf
xor
lods
sub
outsl
pop
xor
mov
pusha
cmpsl
pop
cmc
jbe
rclb
nop
lock
pop
sub
dec
xchg
xor
arpl
insb
push
lods
mov
popa
dec
and
hlt
and
and
cmp
fisubrl
cmp
sbb
stos
push
popa
scas
mov
ret
fstpl
dec
jns
inc
dec
jg
push
stos
cli
dec
jo
mov
cmp
cmp
movsl
mov
adc
dec
mov
enter
pop
fnstcw
test
es
enter
mov
fldenv
sarb
ret
rcrl
cmc
push
xchg
nop
xchg
cmp
hlt
into
ficoml
out
cmpsb
pop
cli
mov
scas
sarb
pop
aaa
mov
mov
push
xchg
pop
xor
add
jnp
pop
sbb
js
mov
add
pop
jae
push
mov
mov
mov
add
int
das
or
pop
adc
sarl
jns
push
out
adc
lods
stos
or
es
sub
movsb
std
mov
sahf
add
or
sbb
pop
add
mov
jl
mov
or
add
sbb
lahf
dec
sbb
xor
xchg
es
mov
adc
push
or
inc
dec
mov
ss
ret
push
xchg
pop
sar
sub
push
xchg
data16
mov
dec
jnp
outsl
and
repnz
ss
ficoml
jp
add
lock
inc
cltd
test
icebp
iret
or
repnz
pop
jp
cs
cmp
jo
int
pop
into
xlat
subl
out
inc
je
shr
cli
ss
loop
lahf
jne
inc
pop
push
cld
loopne
cmpsb
stos
xlat
xor
push
scas
ja
pop
fstpt
and
mov
jp
fst
push
cmp
mov
sti
imul
sub
fucomp
adc
xor
fisttpl
hlt
mov
pop
cltd
mov
mov
stos
mov
mov
in
cmovge
insl
loop
add
shrb
sub
sbb
jmp
push
mov
pop
lahf
fadds
inc
fstp
mov
cs
cmpb
cmp
mov
mov
dec
lret
mov
cwtl
testb
ret
addr16
es
dec
xlat
dec
jle
test
adc
sbb
mov
stos
decb
aas
popf
xlat
icebp
ja
ret
lret
pop
jg
mov
push
push
xchg
das
lret
adc
xlat
sub
push
je
mov
hlt
dec
sbb
nop
jecxz
jg
lds
pop
add
scas
jge
jmp
and
orb
bound
bound
dec
push
jp
mov
xchg
outsb
lods
xchg
jb
add
and
es
dec
mov
out
inc
divb
inc
ficompl
or
jp
icebp
xlat
pop
pop
in
fsubrl
ret
xchg
or
or
sub
rorl
lods
push
packsswb
jge
xor
sbb
pusha
add
fimull
inc
or
call
xor
lret
xor
insl
fadds
ds
pop
dec
cmp
jmp
test
rcrl
lret
scas
dec
roll
mov
sub
pop
lret
and
push
mulb
jne
jl
negl
sti
push
enter
mov
fisubl
pop
leave
cli
cmp
mov
inc
mov
jne
loopne
daa
or
pop
fxch
mov
lcall
rclb
xor
cmp
cmp
push
add
cmc
addr16
mov
adc
lock
ljmp
jl
ds
jge
or
test
cltd
inc
xchg
mov
cmp
cmp
out
fwait
insl
cmp
jbe
jmp
cmp
mov
std
outsl
test
xchg
jp
mov
cmc
pop
fsubp
test
lcall
push
lods
mov
mov
scas
inc
jge
cli
xor
dec
ss
xchg
pusha
xchg
cs
cmp
aas
and
lods
mov
adc
jno
idivb
sub
jb
mov
jge
mov
shll
xorb
xchg
stc
shrb
dec
push
add
pop
das
rol
cwtl
data16
adc
test
cltd
or
inc
sub
xchg
xor
pop
stc
sbb
popf
js
scas
pop
jo
lds
outsb
and
pop
imul
jle
ret
pop
cmp
gs
xchg
mov
into
xchg
int3
add
xchg
je
das
ret
or
pop
dec
add
dec
jb
jno
mov
outsl
pop
rcll
xchg
sub
test
in
hlt
adc
ljmp
xlat
adc
add
xor
mov
and
hlt
shl
inc
pop
and
data16
dec
addr16
mov
xlat
adc
cs
push
ss
test
pop
icebp
loop
ret
mov
test
movsl
int3
jnp
nop
movsb
adc
dec
aaa
fiadds
cltd
fsubrs
mov
pop
jp
aad
sub
cmp
jae
fiadds
xchg
aam
mov
jmp
push
mov
ja
cmovns
cvtdq2ps
pop
fimuls
mov
jne
pop
idivb
push
scas
mov
jb
lods
xor
dec
mov
inc
cmp
or
test
bound
adcb
inc
dec
sub
xchg
mov
sub
sub
inc
mov
cwtl
pusha
mov
sub
lock
jne
idivb
pushf
adc
dec
jmp
cmp
push
dec
cmp
stc
adc
mov
push
test
stos
xchg
fnsave
and
scas
icebp
jl
mov
movsb
sbb
cwtl
clc
push
xor
add
jl
movsb
adc
sub
cmpsl
sub
push
mov
mov
pmaxub
push
sbb
jns
jb
push
sub
pop
sbb
dec
in
jl
mov
mov
add
push
andb
mov
mov
inc
push
sbb
or
xchg
mov
cmpl
xor
xor
mov
bound
mov
loope
fsubs
arpl
je
les
xor
aam
ljmp
sti
imul
or
push
push
test
sub
push
and
or
mov
repnz
or
mov
fisttpl
xchg
daa
push
addr16
xor
dec
mov
sti
dec
aam
mov
ja
adc
xor
fwait
cwtl
dec
and
push
xchg
cmp
or
filds
mov
pop
hlt
sbb
mov
cmp
jnp
movsb
push
mov
mov
ss
pop
xchg
mov
popa
cmpl
cmpsl
cmc
xor
ljmp
xor
push
and
sub
lahf
add
pop
addr16
mov
std
jbe
jne
add
xor
fcomp
faddl
fidivs
jp
sti
add
arpl
test
inc
loopne
dec
es
sbb
shlb
in
mov
jge
jge
adc
outsl
cmp
loopne
adc
addb
sbb
addr16
inc
add
pop
insb
inc
xor
pop
fwait
mov
sbb
pusha
enter
lods
shlb
sub
iret
dec
pop
jns
mov
sbb
in
pop
cmp
insl
push
gs
sub
jecxz
mov
pop
cs
mov
push
sub
mov
mov
cmp
cwtl
frstor
mov
xor
xor
mov
push
shll
dec
cs
adc
adcb
fistpll
mov
arpl
push
stc
and
cs
imul
ret
sub
stos
pop
cmc
cld
aas
sub
call
lock
out
and
xchg
or
push
jb
jo
ja
push
mov
je
dec
mov
sbb
inc
fwait
sti
pop
stos
arpl
mov
mov
mov
inc
pop
cld
lods
fs
test
popa
cltd
dec
push
xchg
sti
mov
stos
lahf
and
xor
inc
fstl
inc
cs
adc
xchg
jne
cwtl
jge
push
mov
movsl
sarl
mov
movsl
adc
sbb
and
nop
stos
cs
lahf
adc
xchg
fdivr
int3
push
lcall
mov
pop
pop
mov
pop
push
or
inc
loope
in
movzbl
push
pop
mov
or
mov
xchg
mov
pusha
pushf
mov
fsub
jne
xor
pop
dec
sahf
push
or
and
mov
sbb
dec
repz
jp
dec
dec
cmp
and
push
lods
dec
mov
sbbb
mov
or
push
inc
mov
mov
fsubrl
fdivl
hlt
adc
fildll
mov
adc
or
movsb
and
dec
jg
cmp
fs
xchg
inc
jecxz
add
scas
pop
lahf
pop
ret
sbb
lds
repnz
xor
sub
shll
xchg
dec
sbb
lret
sbb
cld
repz
jl
pop
sbb
rcll
dec
aam
out
adc
xchg
push
ljmp
mov
lret
push
inc
lahf
into
fsubrs
mov
and
imul
mov
aas
dec
sbb
jo
xchg
test
clc
xchg
add
inc
jbe
add
pop
dec
gs
cmp
inc
cmc
xchg
mov
roll
add
lods
inc
jmp
inc
mov
mov
sub
or
test
sbb
push
pop
add
inc
or
and
in
sub
sbb
test
cli
popf
pop
pop
fwait
sarb
test
cmp
jecxz
jecxz
mov
mov
invlpg
loop
add
rcll
testb
hlt
jbe
test
cmp
jecxz
xor
in
push
cmp
adc
stc
sub
stos
fadd
pop
subb
mov
adc
cmc
or
mov
fucomip
imul
dec
dec
mov
adc
cltd
call
test
mov
fldl
scas
movsl
jae
psrlw
shll
imul
mov
mov
lods
subl
mov
lods
cmp
movsb
xchg
push
xor
lahf
mov
call
and
mov
fdiv
stos
jne
test
nop
pop
js
mov
mov
cld
pop
in
ja
lret
push
push
ret
xchg
lods
and
pop
jo
mov
inc
jae,pn
ret
loopew
fcoml
aas
ja
jle,pn
xor
dec
jae
pop
cmpsb
adc
sbbl
mov
faddl
or
sub
sbb
xor
ret
adc
test
jns
filds
addr16
jmp
xor
out
roll
adc
push
cwtl
out
and
mov
pushf
xor
pop
sti
mov
orb
cltd
xchg
dec
dec
imul
and
out
in
cpuid
cmpsb
or
loopne
in
jne
je
and
add
adc
xchg
ret
iret
cmp
leave
cmpsl
push
xchg
pushf
outsl
test
out
movsl
mov
mov
pop
mov
into
push
std
lods
push
xor
cmp
add
scas
push
push
scas
dec
cmp
mov
std
shrl
dec
xchg
or
xor
xchg
xchg
pop
pusha
pop
push
in
les
movsl
nop
mov
or
or
mov
cs
cmp
pop
inc
fbstp
cmpsb
lds
imul
ds
outsb
sarl
cmp
mov
sbb
sub
xor
hlt
mov
jecxz
adcl
ja
cmp
xchg
out
add
hlt
stos
xchg
sbb
mov
sub
sub
mov
outsl
sahf
inc
lcall
test
loopne
add
mov
mov
mov
in
xchg
lds
dec
cltd
cmp
dec
ret
push
shll
sbb
fildll
notb
mov
sbb
mov
sbb
pop
fimuls
xchg
popa
loopne
testl
xor
icebp
cmp
or
int
mov
in
push
test
cmp
xlat
out
xor
mov
xor
js
and
sub
cmp
mov
push
call
shll
mov
out
rcll
sub
cli
in
jnp
in
subb
int
into
sub
aad
pop
mov
cmpsb
psllq
jmp
inc
push
arpl
xor
add
or
bound
push
mov
add
mov
jbe
shr
ret
shr
data16
out
xchg
aad
cmp
jns
mov
mov
fcom
idivb
mov
decb
push
pop
outsb
jmp
mov
and
jecxz
loope
and
xor
sub
mov
cmpsb
jbe
and
jp
pop
mov
pop
mov
cmp
xchg
addr16
inc
inc
loopne
ds
cmp
movsl
push
jo
insl
cmpsb
push
dec
enter
stos
nop
jns
loopne
or
push
inc
icebp
dec
js
or
mov
xchg
jge
sbb
cwtl
shl
in
icebp
jb
ds
negb
repz
cwtl
ljmp
sbb
jg
fisttpl
xchg
push
dec
shrl
jmp
jmp
lods
andb
jl
outsb
mov
and
pop
cs
mov
push
and
scas
je
das
adc
out
sbb
xlat
cmpsl
add
callw
mov
push
negl
lea
push
loop
push
or
lock
mov
jl
fnstcw
dec
xchg
sahf
pop
lea
inc
pop
mov
call
xchg
hlt
mov
sbb
cwtl
mov
sbb
jae
mov
ret
pop
mov
push
xchg
pusha
xchg
push
lret
fs
fidivrs
mov
in
lcall
int3
jbe
push
fnsave
outsb
arpl
lcall
push
pop
rolb
xor
mov
pushf
int3
test
gs
insb
mov
xchg
repnz
xchg
dec
ret
dec
add
in
xchg
outsl
es
icebp
mov
pop
test
test
das
sub
in
cltd
scas
aaa
add
xchg
push
cmp
fucomip
lahf
lcall
cmc
test
pop
xor
jbe
cmp
cmpb
or
adc
dec
out
add
xlat
add
cmpsb
int
push
into
fistpll
aaa
mov
jno
xchg
or
push
call
cs
fildll
lahf
cld
mov
pop
sub
mov
push
hlt
and
mov
mov
mov
aas
jmp
nop
ljmp
les
xor
sub
mov
repz
add
pop
vpcmpeqb
insb
xor
fidivs
inc
mov
insl
xchg
cwtl
push
push
insl
jb
insl
mov
dec
or
insl
lret
test
xchg
hlt
cld
data16
sub
jnp
cmp
xlat
sbb
int
imul
dec
icebp
outsb
fcompl
or
aam
fsubr
push
sub
in
insb
adc
js
sub
fsubrs
jnp
rcr
cltd
push
fs
stos
dec
decb
sbb
mov
dec
and
xchg
pop
cmp
adc
aas
jl
outsl
rorl
or
sub
or
test
add
or
repnz
push
gs
test
hlt
pop
xorb
popa
addr16
cmp
popa
jmp
dec
jmp
cli
push
adc
jecxz
push
sahf
pusha
pushf
fisubrl
aas
test
cmp
xchg
cmpsl
pop
loop
adc
inc
xchg
test
test
cmp
add
xor
jmp
jbe
dec
dec
cltd
xor
dec
out
test
xor
test
cld
jb
outsb
jnp
das
adc
mov
inc
cwtl
jb
lods
popa
loop
icebp
xchg
js
adc
stos
and
xchg
pop
xchg
std
into
dec
lods
cmpsl
test
mov
xchg
xlat
leave
ret
adc
testl
fnstcw
push
aad
inc
lds
dec
scas
in
mov
rclb
nop
add
dec
call
addr16
sti
push
lret
dec
cmp
add
loop
sti
xchg
push
repz
orb
int3
mov
xchg
or
sarl
push
add
lahf
pusha
pop
adc
cwtl
inc
xor
out
sub
mov
xchg
movsl
push
sub
and
orb
in
ret
imul
mov
je
pop
ds
sbb
ret
push
aam
push
add
daa
in
imul
mov
cmp
push
je
xor
repnz
out
loope
inc
xchg
or
and
jg
adc
jg
mov
and
cmp
loopne
in
add
dec
test
subb
xor
sahf
ja
pop
cltd
cmp
dec
cld
mov
push
inc
jne
and
mov
aaa
pushf
clc
scas
rcr
daa
push
adc
stc
mov
inc
xor
mov
cmp
shlb
sub
insl
xchg
xchg
push
loop
js
fdivrl
lock
dec
scas
stos
aad
inc
hlt
test
adc
mov
movsb
fsubr
jmp
mov
or
cmp
in
jmp
enter
cmc
insl
mov
fwait
pop
jo
fistpl
mov
mov
sar
icebp
lds
adc
mov
pop
pop
pop
test
pushf
dec
sbb
mov
rcr
or
add
pusha
fisttpl
jno
ret
push
pop
addr16
or
mov
push
call
enter
insb
repz
mov
jo
stc
jne
lods
push
les
out
mov
stos
jl
sbb
nop
xchg
cmp
movsb
push
out
push
js
into
loope
ret
mov
paddq
and
xchg
xchg
cmpsl
push
add
pop
xchg
jmp
addr16
nop
ds
or
gs
call
cs
test
xor
pop
subb
dec
arpl
or
cmp
call
mov
fcmovnbe
ret
movsl
mov
cmp
add
adc
xorl
dec
test
ret
and
push
out
imul
jp
add
mov
call
insl
rcll
pushf
nop
xchg
adc
or
test
mov
cwtl
fsubrl
js
sbb
inc
pop
imul
mov
cmpsb
sub
push
out
and
jno
sahf
fwait
mov
push
pusha
cmc
dec
fcmovu
lods
scas
rcll
aas
outsb
cmpsl
mov
mov
xchg
roll
ret
les
and
daa
fildll
inc
pop
imul
mov
mov
imul
cmpsb
nop
pushf
bound
dec
mov
pop
push
xlat
out
sub
sub
pop
pop
subb
inc
sahf
test
pusha
cmp
mov
add
mov
leave
xchg
mov
inc
lea
adc
mov
test
loope
addl
lods
xor
data16
add
pop
iret
jmp
enter
or
inc
jecxz
in
cmp
sahf
loop
add
nop
inc
imul
stos
sbb
lds
es
call
lock
mov
pushf
dec
leave
pop
xor
repz
push
filds
shrb
cmp
add
mov
cmpsl
int3
push
mov
xor
adc
add
dec
jmp
adc
fcomp
loopne
dec
leave
add
pop
aaa
xor
sbb
cli
stos
jbe
mov
inc
adc
adc
shr
test
stos
inc
es
sub
mov
js
ds
in
sub
imul
iret
dec
int
adc
inc
push
xor
arpl
or
sarb
fwait
mov
roll
jecxz
mov
xrelease
sbb
imulb
dec
jnp
dec
repz
push
pop
out
mov
cs
xor
push
pop
pop
aad
ja
and
or
push
int
insl
xor
sti
mov
push
adc
adc
cltd
pop
cmp
ret
xchg
adc
pop
lahf
jge,pt
inc
movb
adc
xchg
cld
aas
ds
lret
pop
repz
add
xchg
loopne
insl
mov
lret
or
push
pop
sub
inc
and
mov
pop
popf
jp
pop
mov
ja
ljmp
fstpl
fisubrl
pop
push
incl
movsl
inc
fs
pop
and
inc
pop
sub
and
push
cmp
add
addb
fsubrs
enter
sahf
xor
jmp
jp
push
shll
jns
xor
cmpsl
fmul
push
popf
inc
sub
stos
scas
pop
movsb
push
mov
dec
loop
clc
lods
popa
aam
cmp
test
xchg
adc
aam
sub
dec
lds
mov
loopne
jg
mov
mov
sbb
sub
out
pop
jl
lock
mov
arpl
inc
inc
sbb
shlb
jle
out
das
mov
mov
mov
push
jns
mov
sub
arpl
pop
jbe
repz
mov
ljmp
and
pop
hlt
mov
mov
add
mov
aas
adc
fnstenv
mov
mov
cmp
leave
jl
mov
pop
mov
aas
and
sahf
es
in
mov
pop
xor
lret
sbb
or
or
popa
frstor
dec
xchg
sub
mov
push
rcll
xor
in
aaa
es
repnz
out
imul
addr16
cli
xor
cld
mov
test
sbb
jbe
cmp
mov
ds
stos
pop
sarb
lret
clc
add
add
push
push
sahf
mov
orb
and
rcr
dec
adc
mov
adcb
jmp
sub
cli
add
pushf
mov
mov
or
lea
out
enter
cld
add
lds
fwait
sbb
push
xchg
in
xchg
ffree
and
sub
xor
or
push
mov
and
rcll
sbb
sbb
mov
xchg
enter
mov
push
cmp
mov
cmpsb
sar
cltd
ljmp
pop
or
pop
jmp
xchg
xrelease
test
mov
xchg
inc
cli
jnp
lret
xchg
icebp
scas
push
enter
cwtl
out
jo
ja
inc
nop/reserved
fstpl
rcrl
addl
cmp
pop
ds
stos
stc
inc
jo
insl
fnsave
in
mov
dec
jg
test
enter
ret
inc
icebp
mov
push
inc
inc
lds
les
leave
pop
pusha
popa
pusha
adc
fcoms
xor
add
adc
mov
mov
add
mov
dec
cs
sbbl
jns
xchg
orb
repz
mov
sub
push
jo
les
mov
das
pop
shrl
jo
sbb
xor
fidivl
adc
sub
rcl
mov
dec
test
cmc
pop
dec
mov
loopne
stos
cmovl
es
stos
std
cli
mov
retw
inc
or
mov
and
ja
inc
call
or
jp
jg
je
sub
movsl
inc
imul
imul
mov
fs
movsb
subl
ret
ret
insl
sub
xchg
pop
clc
scas
dec
sarl
ss
pushf
and
add
insb
push
add
call
sub
test
xor
dec
outsl
aaa
cltd
es
je
ror
dec
add
push
insl
scas
iret
add
xor
mov
out
enter
lock
pop
pushf
xlat
xor
and
cmp
add
das
pop
jmp
mov
sub
xchg
es
add
push
dec
stc
adcb
loop
inc
mov
call
lahf
shll
sbb
shrl
cltd
and
lds
sbb
clc
push
jecxz
insl
lret
decb
sub
xchg
dec
in
push
push
clc
mov
loop
inc
adc
add
or
mov
inc
xor
inc
push
outsb
fisttpl
add
pop
jae
js
pop
sbb
cwtl
cmp
fwait
jl
push
cmp
push
nop
sub
jnp
jbe
inc
sub
daa
pop
mov
pop
sub
nop
or
loop
outsl
loopne
lods
cltd
or
inc
adc
add
or
jno
bound
lahf
xchg
sub
shll
shlb
cmp
fadd
lods
dec
insl
enter
and
cltd
jl
lock
mov
arpl
outsl
cmp
arpl
loop
xchg
out
nop
mov
fcomip
stos
inc
sbb
push
push
jb
iret
pop
push
out
iret
xchg
cwtl
xchg
mov
aaa
adc
cmpsb
mov
jo
and
sbbl
popa
mov
sti
cmpsb
dec
pop
adc
pop
or
sub
notl
pop
in
cld
loopne
jg
call
jnp
pop
push
xchg
ljmp
shr
notl
lret
ret
mov
and
test
dec
imul
mov
std
sti
jg
daa
jge
pop
lds
test
imul
jnp
cmpsl
cltd
shrl
ror
imul
lahf
sub
test
adc
mov
sbb
adc
push
cmpsl
push
pop
js
or
xchg
push
ret
pusha
movl
je
mov
adc
sar
pop
shll
dec
push
push
sbb
sbb
mov
push
add
test
shrl
adc
ret
fldt
aam
jp
dec
dec
and
lcall
mov
stos
dec
cmpsb
es
insb
aaa
inc
fnstsw
stos
sbb
mov
jb
pop
xchg
push
mov
int3
add
adc
arpl
jecxz
insb
in
xchg
pop
notl
mov
dec
xchg
orb
scas
add
mov
xor
jns
inc
mov
mov
dec
push
cmpsl
filds
aam
leave
sbb
or
aas
mov
cmp
push
jecxz
add
mov
repnz
inc
jl
fadds
mov
xchg
xchg
movsl
and
pop
stc
xchg
out
sub
lods
inc
mov
xchg
sub
push
sbb
sti
mull
lock
cmp
cmp
mov
or
cmpsb
push
sti
and
xor
sub
loop
mov
dec
inc
mov
pop
mov
stos
mov
jg
inc
test
lcall
pop
cltd
cmp
mov
lods
sahf
or
sbb
pop
mov
xchg
xor
cmp
mov
mov
hlt
insl
adc
or
xor
bound
or
in
ror
or
push
test
push
jle
sbb
stos
in
insl
out
icebp
outsb
and
adc
gs
mov
and
in
test
xchg
in
cmp
push
push
push
sahf
nop
mov
dec
aas
cmc
mov
jno
push
sub
mov
in
lock
xchg
xchg
xchg
dec
imul
nop
das
sub
sbb
outsb
nop
push
mov
jecxz
push
jo
imul
xchg
cmpsb
hlt
les
mov
cmp
push
icebp
imul
jp
dec
fsubrl
lea
in
mov
adc
push
fucomip
push
add
push
iret
cld
gs
push
pop
pop
add
popf
js
mov
sar
dec
push
dec
dec
pop
jg
dec
mov
popf
jmp
xchg
out
orl
decl
xor
push
mov
pop
js
mov
pushf
pop
mov
cli
push
int
sub
sub
xor
mov
push
sub
fwait
out
insb
cmp
dec
sub
cs
in
fcomip
pop
ja
mov
pop
inc
fsubl
subb
test
icebp
xchg
push
mov
jnp
mov
outsb
cwtl
xor
mov
mov
xchg
push
mov
in
loope
sub
pop
xchg
sbb
pop
orl
jno
loope
add
cli
lret
lcall
mov
inc
fwait
popf
adc
inc
cmpsb
jb
repnz
out
inc
lods
clc
or
add
loopne
in
inc
push
fsubrs
pop
orl
xlat
stc
pusha
sub
fldcw
mov
lods
mov
inc
sahf
idiv
push
cwtl
hlt
adcl
fidivl
bound
movsl
cltd
jbe
push
sub
adcl
fs
arpl
push
pop
outsl
outsl
int3
ss
cmp
leave
fldenv
or
in
test
push
fdiv
dec
outsb
jae
ja
add
into
icebp
out
cmc
xchg
les
incb
in
out
xchg
bound
jne
fsts
icebp
leave
cmpb
cmp
and
cmpsb
pop
fimuls
daa
sub
jecxz
mov
jnp
jae
or
aad
nop
and
lea
mov
call
xchg
test
int3
mov
cmp
jp
loop
pop
imul
inc
add
mov
aad
jo
scas
mov
movsl
daa
lods
pop
dec
icebp
inc
push
ljmp
jp
dec
and
popa
push
pop
cmc
pushf
or
mov
popa
mov
stos
lock
int3
add
fbstp
mov
cli
add
and
int3
inc
and
test
xchg
xor
add
jbe
clc
cmc
adc
or
adc
insb
or
jg
pop
icebp
sub
mov
or
mov
and
inc
insl
loop
xchg
pop
insl
jo
enter
insb
test
cmpl
cmp
add
push
or
mov
sbbb
push
ret
shlb
cmp
dec
movsb
mov
stc
mov
in
adc
fs
pop
stos
lock
jmp
jb
shll
mov
mov
fsubl
movsl
or
hlt
push
cmc
adc
xchg
icebp
outsl
stos
push
fstl
adc
sub
into
push
sahf
test
pop
in
xchg
gs
sahf
mov
pop
push
mov
inc
sub
jp
pushf
dec
sarl
jnp
dec
dec
sbb
popa
and
xchg
neg
in
imull
pushf
add
jg
mov
cmp
pop
inc
test
push
and
inc
mov
dec
pop
xchg
pop
sbb
out
and
add
add
js
xor
mull
mov
repz
mov
or
ret
dec
jae
pop
pop
push
and
inc
sub
mov
jno
sbb
xor
scas
mov
imul
test
mov
fstpl
subb
push
lcall
mov
sbb
cmc
pop
stos
insl
mov
pushf
fnstenv
mov
xchg
mov
push
enter
stc
sti
cld
pop
dec
cmp
movsb
lahf
xor
scas
repnz
adcl
sbb
int
inc
add
das
std
stos
and
add
cmp
push
jle
ucomiss
sbb
imul
add
jmp
pop
dec
cmp
mov
aam
popf
scas
add
add
shrb
lcall
fwait
xchg
lds
cmc
in
mov
pop
sbb
call
fdivrp
in
in
fucomi
stc
cmp
aaa
xor
js
cs
decl
shl
lret
mov
and
xlat
sub
and
test
add
stos
popf
clc
sub
ds
lea
or
sbb
shrb
or
sti
sub
mov
push
push
dec
sbb
jmp
push
xchg
sub
imul
cmp
in
popf
andb
pop
lret
jne
je
jno
adc
in
enter
bound
stos
xor
out
xchg
rcrb
ds
pop
in
ffree
xor
rcrl
mov
xchg
inc
sbbb
sbb
or
inc
in
ret
pop
sbb
push
hlt
xor
mov
mov
push
ficoms
out
out
cmc
mov
mov
jle
jno
sub
dec
lock
test
inc
sub
cmp
insl
aas
or
dec
dec
inc
xchg
mov
cmp
popf
mov
inc
test
pop
jns
inc
lahf
push
addr16
inc
mov
imul
loopne
es
call
enter
int
in
sarb
push
and
jmp
adcl
gs
je
pop
jmp
sub
sbb
lock
shlb
mov
test
in
scas
mov
cmp
cmpsl
cli
mov
stos
ret
out
adc
pop
lods
addr16
shl
xchg
jae
dec
adc
sarl
scas
adc
xor
fs
or
push
sub
iret
fldt
sti
inc
lret
cs
cmp
inc
xor
add
add
in
push
mov
cmp
inc
push
out
xor
lods
call
js
push
rcrb
enter
scas
cs
dec
arpl
les
lock
shrb
btr
and
sbb
xlat
loopne
es
decb
sub
and
lea
jl
xchg
pop
fistps
mov
movsl
sbbb
es
bound
sub
jl
lcall
ds
pop
or
ss
adc
adc
jecxz
enter
jnp
mov
dec
push
scas
outsb
pop
inc
xlat
cmp
popf
cmp
shl
jno
dec
sbb
mov
sahf
sub
mov
stc
shll
je
popf
push
mov
dec
stos
sub
fs
xchg
cmp
push
inc
cmp
xchg
das
mov
pop
pop
mov
add
aas
loope
sub
pop
inc
scas
or
lea
add
test
stos
xchg
movsl
mov
clc
inc
mov
fstl
mov
dec
pop
je
push
clc
in
andl
dec
pop
test
jmp
je
das
gs
push
bound
xlat
loopne
adc
and
in
xor
jecxz
leave
cmp
mov
pop
add
mov
adc
mov
adc
xor
xchg
fdivrl
mov
stc
add
test
jno
lock
inc
ret
jl
cmp
pop
std
rorb
inc
pop
jecxz
cld
cli
icebp
pop
shlb
int3
mov
sub
clc
loope
push
pop
iret
jg
xor
pusha
push
mov
and
jbe
movsb
xchg
imulb
hlt
leave
mov
xor
out
rcrb
repnz
cwtl
cmpl
mov
xor
rcrb
hlt
mov
fldenv
sbb
push
xchg
dec
sti
xlat
xchg
add
jnp
push
mov
aaa
mov
sbb
dec
pop
mov
imul
lock
sbb
data16
and
fcmove
addr16
fldl
fisubl
test
sub
jge
in
and
mov
cld
jg
orb
jcxz
shl
or
cvtpi2ps
fsubrs
mov
scas
xor
clc
push
inc
dec
cmp
sbb
adc
pop
xchg
mov
jne,pn
in
mov
ret
jae
dec
cwtl
mov
loop
rcl
push
dec
outsl
xlat
cmpsl
fs
cmp
cmp
lcall
call
loopne
lock
pop
cmp
in
in
sarl
pop
push
cmp
mov
stc
mov
out
mov
cli
pusha
or
inc
xchg
push
mov
xor
test
adc
xchg
mov
frstor
es
enter
inc
mov
xorb
daa
sti
jge
jb
adc
out
push
ret
sbb
inc
and
sahf
sub
dec
rclb
cltd
jb
aas
cld
ss
or
jb
cmp
les
ds
mov
jp
mov
jmp
or
adc
aas
ds
push
xchg
shlb
icebp
adc
fiadds
in
fdivrs
mov
mov
sbb
aaa
loop
outsb
mov
cmpsl
or
loopne
mov
add
lret
mov
sbb
jne
xchg
add
mov
aaa
push
mov
fwait
out
shrb
sub
xchg
cmp
push
js
mov
push
adc
jge
xchg
push
shrd
rorb
jle
sub
cmp
mov
out
ss
pop
inc
lcall
mov
cli
pop
sbb
pop
adc
xchg
inc
pop
fs
inc
call
sbb
add
jbe
mov
xchg
xchg
jae
ret
aam
dec
lods
mov
scas
jge
jg
test
push
outsl
pop
fucomi
xchg
lock
or
sti
in
ret
push
cmp
jnp
lahf
inc
divl
js
stos
mov
aad
xchg
je
into
cmpsl
dec
xor
push
sbb
xchg
sarl
sbb
xor
dec
fcoml
iret
adc
shlb
or
call
push
jnp
ret
test
lahf
or
loop
mov
fadds
or
inc
stos
jle
jg
popa
outsl
das
jae
jmp
sub
push
ja
sbb
inc
aaa
lock
mov
jae
or
sub
push
mov
pop
sub
rorl
adc
stc
out
sub
mov
loopne
push
ret
pop
into
inc
test
popa
fwait
roll
imul
mov
imul
lea
enter
sub
and
inc
pop
cltd
enter
xchg
fmuls
cmp
movsl
cld
sub
sub
inc
pop
adc
mov
insl
sbb
jge
rcl
jl
push
xor
icebp
insl
xchg
mov
mov
roll
push
leave
std
in
mov
sbb
mov
outsb
je
inc
sbb
and
js
or
sub
pop
aam
sub
lcall
pop
jp
in
mov
xchg
pushl
dec
or
out
xchg
add
mov
jmp
adc
pop
mov
inc
mov
adc
out
push
mov
inc
or
das
repz
and
push
inc
xchg
ljmp
scas
sbb
lret
sbb
inc
repz
int3
pusha
jbe
sbb
in
and
sbb
je
jecxz
push
lock
mov
jnp
popa
call
in
push
adc
leave
add
inc
pusha
or
inc
enter
dec
sub
jecxz
shrb
pusha
ret
xchg
sbb
ficomps
and
jl
pop
inc
add
sub
jecxz
mov
and
imul
mov
stos
dec
cmp
iret
sbb
test
in
and
xchg
jge
sbb
fdivr
out
and
cmpsb
std
push
icebp
and
adc
addr16
push
mov
pop
mov
lahf
sbb
cmpsb
xchg
es
jle
stos
add
adc
imul
sarl
test
jg
pop
push
sbb
sahf
jo
je
popa
sbb
push
push
sub
xor
outsl
mov
daa
mov
sbb
or
movl
dec
jo
and
adc
mov
mov
test
sub
adc
push
or
sub
mov
mov
in
out
sub
jge
push
sub
mov
fstps
xchg
hlt
loopne
lcall
fdivrs
or
outsb
rcll
int3
cltd
jb
sbb
xchg
clc
lock
sbb
adc
dec
hlt
or
sub
mov
in
xchg
mov
stc
andl
popa
insb
iret
fxch
shlb
ret
repnz
in
xchg
hlt
ljmp
mov
cmc
divps
dec
adc
add
pop
or
rcl
jae
sbb
imul
les
lods
sbb
into
mov
lock
aaa
jnp
cmc
and
int3
rorl
cmpsb
adc
repz
loope
mov
test
je
xchg
mov
ret
jno
mov
adc
lcall
sahf
outsb
cmp
sti
pop
push
sti
mov
mov
lea
loop
push
push
sbb
call
mov
insb
mov
int3
insl
fucomi
and
call
mov
pop
repnz
jge
and
repz
mov
repnz
outsb
iret
movl
in
push
ret
std
gs
dec
mov
fwait
das
test
adc
leave
pusha
pushf
mov
nop
push
xor
xor
mov
inc
lea
inc
int3
mov
dec
aaa
add
mov
inc
out
enter
push
insl
cmp
shll
ljmp
fsubrl
mov
mov
mov
jl
or
push
xchg
xchg
inc
mov
push
push
mov
pop
lock
lcall
jae
pop
cmc
scas
cmp
or
and
jo
cltd
xchg
dec
xor
mov
fwait
sbb
ret
add
pop
adc
xlat
sbb
inc
jnp
cmp
and
sub
xchg
lock
jecxz
xchg
aad
sub
ljmp
or
cmp
mov
ss
aaa
call
adc
std
add
gs
lds
xor
js
mov
mov
sub
aas
push
push
jle
subl
ja
and
imul
ds
jbe
cmp
push
ljmp
push
out
and
js
dec
inc
jecxz
pop
sub
cmpsb
jo
pop
mov
dec
push
in
mov
or
lea
sbb
cmpsb
call
push
clc
jne
ss
test
inc
dec
xor
pop
jae
cmp
aam
xchg
adc
pop
mov
mov
out
pop
test
rcll
xchg
mov
mov
or
jns
push
mov
loope
push
dec
stos
cmpsl
rcrl
dec
inc
out
pmaddwd
jecxz
in
mov
cmp
lods
cmp
adcl
cmc
subl
mov
add
cmp
enter
lret
jno
xchg
jg
popa
out
pop
xlat
fnstsw
jbe
xchg
cmp
xchg
pop
xor
pushf
sbb
sub
push
enter
xorb
hlt
push
js
js
loopne
sti
and
sbb
les
out
orb
cli
mov
push
insl
lcall
fidivs
orb
popf
aaa
sub
mov
push
inc
test
shrb
leave
lods
add
xchg
les
mov
jge
dec
mov
adc
mov
xchg
sahf
mov
dec
scas
cwtl
popf
jmp
imul
rorb
aas
add
out
rcrb
ret
xor
and
enter
lods
xchg
sub
mov
test
jl
mov
js
daa
jae
add
add
xor
test
out
mov
lock
lods
outsb
data16
mov
cmp
xor
nop
repnz
roll
call
stos
cld
jmp
mov
push
mov
movsb
jne
and
add
sub
mov
cld
dec
dec
or
lock
xor
xor
push
sbbb
mov
add
test
imul
jb
pushf
dec
sar
mov
outsb
in
or
sub
les
push
jmp
mov
loopne
lret
or
push
lcall
insl
jmp
lahf
push
mov
ss
outsb
cmc
cmp
push
sbb
xor
fnstenv
inc
subb
subb
or
jne
inc
mov
mov
sbb
mov
mov
inc
push
in
movb
repz
int
dec
pop
cmp
or
orb
insb
into
out
sub
inc
hlt
jno
inc
leave
gs
lcall
sbb
mov
or
pop
add
outsb
jl
xor
sbb
notb
and
or
lahf
push
push
loope
adc
test
push
add
push
adc
adc
sbb
push
dec
test
jp
pop
aad
jo
stc
mov
jmp
out
cwtl
mov
das
push
mov
xchg
push
movsl
repnz
test
push
repnz
push
aad
cmp
test
ja
cmp
jl
xchg
bound
aaa
mov
cmp
cwtl
rcrb
int
rorb
add
cwtl
pop
mov
leave
and
mov
in
push
and
adc
out
enter
inc
pushf
or
mov
test
arpl
jecxz
mov
sbb
shll
push
icebp
jl
lock
mov
cmp
dec
aad
mov
in
movsl
lret
add
sbb
fldcw
add
movb
sub
fdivs
mov
jecxz
mov
or
sbb
push
dec
dec
test
inc
es
cwtl
cld
or
mov
push
or
repnz
fildll
into
push
pop
test
int
daa
shrl
sbb
add
pop
and
push
mov
aad
imul
pop
xor
test
mov
clc
pop
ret
push
xor
pop
stos
dec
xchg
push
jp
repz
push
clc
aad
xchg
add
dec
dec
add
clc
or
int3
scas
sbb
int3
pop
cmpsl
and
xchg
jnp
icebp
in
sub
cltd
fs
mov
jnp
lahf
mov
or
pop
push
cmp
dec
adc
mov
jmp
lret
cs
fnstsw
jg
jne
mov
xchg
in
cmp
inc
fmuls
faddl
jecxz
cld
jp
or
ds
xor
push
push
adc
adc
xor
rsqrtps
jo
add
dec
data16
in
mov
pop
jae
adc
cmp
shl
sbbb
pop
dec
dec
pop
aaa
xor
js
notb
in
mov
mov
inc
rorl
movsb
int3
rcrb
iret
pop
loopne
cwtl
hlt
sbb
outsl
pop
test
jb
loope
xchg
sbb
xchg
push
mov
add
add
lahf
push
call
cmp
dec
push
xchg
cs
rdtsc
push
xchg
repz
lahf
int
out
or
xchg
dec
je
adc
inc
mov
imul
mov
loop
add
stc
test
jecxz
fcom
or
mov
mov
mov
cwtl
mov
icebp
inc
jae
int
cmp
xchg
orl
add
ret
cmp
loope
push
cmpsl
daa
add
or
push
test
pop
xor
sub
shlb
push
push
stos
cmc
pop
add
pop
sub
mov
push
cmp
fsubrl
into
aas
sub
push
pop
shl
mov
mov
mov
adc
pop
inc
mov
mov
shl
pop
or
mov
iret
pop
pop
hlt
pushf
inc
push
jge
mov
sub
pop
adc
mov
sub
and
dec
add
and
sbb
jae
dec
jp
inc
popa
push
push
or
test
into
and
push
mov
jns
repnz
cmp
inc
push
mov
adc
xor
or
dec
pusha
out
add
inc
js
xor
mov
xlat
popa
insb
repz
sub
movsl
mov
cmpsl
imul
inc
lahf
imul
jne
push
in
and
in
stc
in
lock
fimull
data16
repnz
lahf
divb
fs
int3
dec
cmovge
into
ds
sub
mov
or
mov
cld
pop
aas
imul
insb
adc
add
aad
or
movsb
leave
push
sbbb
repz
aam
cmp
dec
insl
push
stos
call
jnp
icebp
fcomi
ret
addr16
in
repz
outsb
faddl
inc
add
jns
ds
sub
out
mov
sub
cli
lods
pop
lods
repz
shl
or
dec
and
jno
fcmovb
into
jmp
and
sbb
dec
push
imul
xchg
mov
jp
add
or
ljmp
sbb
jae
in
cmpsl
int3
inc
loopne
sub
dec
aaa
lret
pusha
sbbl
dec
jg
lods
test
mov
jge
sti
or
scas
sbb
cmp
hlt
push
xchg
movsl
xchg
mov
fmuls
jno
pop
mov
inc
iret
cltd
mov
pusha
and
ficompl
outsl
clc
mov
arpl
lcall
rolb
imul
jg
add
test
pextrw
sarb
rorl
mov
aas
and
lret
scas
jge
nop
aas
and
mov
int
ljmp
mul
or
adc
cltd
dec
jg
cmp
addl
dec
mov
mov
jp
mov
pop
adc
mov
adc
loop
fnstcw
jmp
aad
sbb
syscall
push
push
clc
mov
cli
xchg
jo
fcompl
xchg
mov
cmp
mov
dec
mov
or
gs
pop
or
inc
in
lds
and
jnp
into
jb
sbb
andl
pop
xchg
js
mov
stos
into
push
lods
int3
shr
fmull
add
fcmovnu
xor
pop
push
mov
xor
mov
cmp
mov
inc
movsl
aam
aad
hlt
fucomi
les
jae
loope
dec
push
cli
push
dec
loopne
sti
inc
icebp
xchg
lea
jnp
movsb
cmc
push
xchg
or
sbb
adcb
pop
dec
mov
insl
add
push
push
jne
mov
and
jge
and
repz
xchg
push
add
aad
mov
lods
lret
test
andl
mov
xchg
inc
ljmp
lock
adc
shlb
mov
push
mov
mov
xchg
jge
daa
mov
push
jmp
and
ds
adc
and
dec
lods
int
insl
pop
dec
fidivs
jle
test
cmpsb
sahf
lahf
pop
jno
adc
push
sbb
fcmovnbe
mov
mov
push
shlb
mov
rcrl
fldcw
mov
mov
out
sbb
mov
and
loopew
mov
and
or
sub
sarb
test
dec
repnz
into
jp
mov
insl
mov
test
or
test
popa
lahf
fs
je
lahf
xchg
sbb
sub
mov
fwait
sub
dec
sub
sbb
dec
cmp
sub
xchg
or
jb
cld
int3
or
lret
sub
jp
loopne
xchg
jno
scas
cmp
movsb
pcmpgtw
cmp
leave
or
neg
xchg
outsb
and
js
jae
lret
sbbl
sarl
or
cmp
test
insl
out
cwtl
and
pop
sub
inc
jbe
cmp
stos
sub
test
push
mov
cmc
or
pop
cltd
jge
push
push
imul
inc
mov
jo
in
pop
push
scas
push
andb
repz
mov
sbb
cltd
ret
sarl
sub
lods
xchg
je
in
mov
sub
xchg
cmp
jp
sbb
or
pop
jnp
je
stc
js
loopne
pushf
pop
test
loopne
bound
or
loope
fdivp
lahf
cltd
xor
xchg
xchg
xchg
and
out
mov
pop
xchg
or
in
lret
sahf
mov
fs
xchg
add
daa
push
mov
out
lahf
es
aaa
mov
push
aam
rcll
cmp
xorb
mov
dec
and
shrb
xchg
into
cs
repnz
jl
push
add
out
cmpsb
or
ss
idiv
add
jbe
rcll
add
sar
popf
cs
mov
inc
fwait
mov
mov
std
pop
inc
jo
lods
enter
jmp
xorl
mov
pop
and
lcall
out
xchg
les
mov
aad
jmp
fcmovbe
dec
jp
and
cwtl
mov
sbb
mov
stc
sub
cs
in
ret
in
mov
cmp
mov
test
and
mov
nop
cld
out
fcmovnb
shlb
leave
inc
loopne
mov
ja
pop
aad
mov
js
xor
stos
jnp
arpl
push
inc
xor
insl
pop
mov
aaa
mov
shlb
or
cmc
pushf
pushf
add
add
add
pop
dec
mov
xchg
sbb
cmp
xchg
and
mov
xchg
add
repnz
popf
divl
jnp,pt
add
jle
mov
cmc
push
cwtl
repz
sub
incb
popf
cmp
out
xchg
ret
push
adc
and
shlb
or
xcrypt-ofb
cmpsl
stos
sbb
xor
mov
in
insl
sub
pushf
jp
add
xor
dec
sbb
add
lcall
xchg
dec
shll
jl
adc
aas
xor
mov
or
mov
mov
dec
mov
in
xor
xchg
rcrl
cli
sbb
sub
mov
push
cmp
inc
pop
cmp
cmp
enter
and
mov
stos
jnp
adc
jmp
popa
clc
and
jl
push
xor
jbe
jae
rorb
mov
add
dec
les
add
mov
test
push
pop
and
test
fidivl
es
jmp
add
mov
mov
jmp
lock
outsb
sbb
imul
sbb
mov
inc
xorb
mov
repnz
mov
sub
fwait
in
das
pusha
data16
insb
enter
mov
push
addl
or
jp
in
popa
mov
out
cmp
xchg
xor
pop
stos
or
jnp
inc
adc
jns
shll
test
nop
enter
incb
cmp
dec
xchg
pop
adc
pop
sbb
pop
push
inc
cmp
xchg
lods
mov
out
push
outsl
cmpsl
ror
lock
sbb
mov
insb
ljmp
enter
aad
xor
cmp
and
jo
in
loope
or
incl
jmp
fucomip
mov
repz
sbb
pop
out
cmp
adc
jge
cmc
jno
xchg
mov
mov
adc
push
push
sti
aas
jae
popf
cmp
stos
mov
ret
xor
pop
das
push
test
fstl
push
cmpsb
sahf
sub
mov
fldt
and
popa
cmpb
incb
xchg
loop
loopne
fwait
pop
xchg
mov
mov
cmp
cltd
and
mov
jo
push
inc
cli
arpl
stos
ret
ret
aad
jge
add
sbb
pop
cmp
xor
push
inc
addr16
dec
fmulp
arpl
cmp
xor
push
and
inc
xor
bswap
decb
dec
in
arpl
mov
lea
pushl
jge
pusha
mov
lret
dec
mov
insl
jb
cmc
jbe
push
cwtl
cli
sbb
add
iret
mov
jge
push
push
clc
ja
and
jb
bound
mov
or
xchg
jg
scas
cs
jne
cmp
add
sahf
mov
hlt
add
imul
xchg
jno
shlb
js
mov
out
jne
pop
es
cwtl
push
inc
adc
test
lea
ja
ja
jne
jecxz
mov
pop
pop
les
repz
adc
push
lods
rcl
xor
js
dec
into
push
jne
xor
xor
xchg
cmp
and
arpl
insb
data16
out
ret
and
or
scas
bound
arpl
dec
xlat
adc
xchg
mov
mov
enter
dec
lret
push
stos
inc
es
out
pop
add
pop
shrl
jb
ficoml
fld
xchg
xchg
lock
and
mov
icebp
movsw
xchg
das
outsb
adc
inc
fldl
mov
cmp
jmp
pop
dec
enter
mov
iret
shll
xor
pusha
scas
rorl
in
cltd
popa
lods
movsb
stos
mov
pop
int
cltd
icebp
cld
es
mov
mov
repnz
mov
mov
daa
xor
xor
mov
rcrb
ss
cmp
mov
aas
sbb
call
shrb
inc
stos
fwait
out
sbb
push
ljmp
test
push
sbb
xchg
pop
scas
dec
clc
and
gs
mov
fwait
insl
decl
cli
pop
outsl
push
iret
mov
mov
cmp
ret
cwtl
es
loopne
add
loopne
sub
dec
xchg
push
and
test
shrb
sbb
mov
or
mov
adc
push
dec
ds
stos
fsubrs
in
jmp
adc
stc
icebp
stc
xchg
add
adc
adc
dec
ret
scas
xchg
xchg
das
dec
and
mov
dec
les
enter
cs
stc
in
scas
cmp
sarl
pop
inc
jae
clc
dec
mov
mov
repnz
bound
and
gs
mulb
push
xor
bound
fistl
mov
les
dec
pusha
pushf
lahf
adc
fildl
popa
xchg
rcll
push
add
loop
xor
scas
add
cmp
test
into
sbb
mov
inc
mov
mov
pop
xor
fsubrs
aaa
adc
inc
pushl
iret
inc
or
and
add
dec
pusha
mov
bound
es
in
jmp
fidivrl
cwtl
fwait
pusha
xchg
jo
or
push
pop
xlat
sub
lock
insl
fadds
sbb
push
dec
adcb
pop
push
lret
jecxz
dec
xchg
xor
pop
enter
push
and
mov
mov
mov
decb
loope
sahf
in
lahf
inc
das
stos
ljmp
into
inc
or
shlb
cmc
data16
scas
or
mov
outsb
insb
mov
jge
mov
sbb
lcall
call
jne
lods
and
imul
mov
sti
pop
out
mov
sbb
imul
es
adc
dec
push
jb
sahf
lret
jge
sbb
mov
and
xchg
mov
xchg
sub
lret
cmpl
sub
mov
movsl
les
mov
pop
sub
push
mov
enter
xor
pop
dec
xchg
ss
scas
jb
push
lods
pop
jl
fs
mov
or
scas
lahf
and
or
mov
repz
adc
sbb
and
fnstsw
xor
les
test
push
sarl
loope
or
pop
mov
shrl
sbb
mov
out
sub
and
fmull
addr16
adc
push
mov
mov
icebp
add
jb
icebp
mov
arpl
fstpt
dec
jp
push
clc
push
pushf
jbe
xchg
cmc
les
fcoml
mov
std
rorb
ret
shll
lds
or
fistl
repnz
adc
xchg
out
jnp
jmp
push
xor
cmpsb
lods
and
xchg
popf
xor
dec
or
or
push
mov
sbb
cmpsb
mov
xchg
clc
insl
jno
mov
mov
lret
shl
add
and
std
inc
add
jecxz
stc
mov
test
adc
int3
inc
mov
xchg
test
popa
into
sbb
lret
or
out
jmp
xchg
enter
push
aaa
insl
cs
mov
dec
out
xchg
xchg
mov
shrl
mov
mov
adc
fmuls
xchg
push
cli
test
sbb
sbb
testl
ret
into
and
adc
repz
sub
push
shll
xor
cmp
test
iret
mov
adc
inc
or
cmpsb
push
sbb
or
movl
std
data16
adc
lds
test
add
xor
andl
imul
mov
adc
and
mov
pop
and
mov
dec
sub
in
scas
leave
fwait
outsl
ret
movsl
add
mov
pushf
jle
pushf
fstpl
mov
mov
hlt
jbe
pop
cld
aad
jle
lods
adc
cld
add
jg
test
mov
lret
sbb
lret
idivb
fistl
add
pop
aam
sbb
mov
pusha
and
inc
cmc
subb
std
jbe
sbbl
stos
outsl
jb
rol
mov
or
loopne
mov
dec
dec
inc
pop
jle
or
mov
mov
popf
mov
jecxz
mov
shlb
xchg
sub
inc
push
or
orl
shl
jno
add
xchg
xchg
push
and
sbb
and
sub
sub
lahf
fnsave
fsubrl
adc
adc
lea
rorl
jnp
and
out
adcb
leave
inc
push
sbb
mov
aam
dec
in
jno
or
lcall
pop
cmpsb
jle
sub
out
dec
pop
gs
imul
test
cmc
mov
adc
mov
ret
jbe
mov
imul
test
jns
jle
mov
inc
movsl
inc
pop
lods
sub
mov
xchg
out
cmc
adc
inc
add
cmp
and
xor
sub
cmp
lods
popf
pushf
test
insl
pusha
jecxz
xchg
ds
lret
and
sarl
or
test
jbe
subl
dec
int3
xor
mov
repz
movsb
out
stos
aam
mov
stos
popa
mov
add
test
mov
push
pop
cmc
aam
std
lcall
mov
mov
cmp
cmp
js
adc
jno
aas
push
mov
repnz
push
incl
test
pop
jno
push
popf
ja
jne
rcr
fs
mov
pop
aas
pop
sbb
and
inc
sbb
xor
outsb
pop
sub
xchg
sbbl
movsb
call
ret
jbe
push
mov
sub
push
mov
mov
cmpsb
mov
cltd
and
stos
cmp
paddusb
sub
inc
mov
fildll
imul
aam
inc
mov
out
in
xchg
in
movsl
sti
sbb
adc
adcl
icebp
cmpsl
sub
mov
fcmove
pop
add
dec
xor
fcompl
pop
pop
out
daa
fisttps
or
adc
es
fmuls
lret
imull
jbe
mov
push
jns
sbb
add
mov
push
enter
lock
enter
je
lret
stos
call
jecxz
jno
inc
hlt
pop
sbb
insb
test
shll
icebp
jb
or
std
movsl
loop
sub
ljmp
mov
jb
cld
ficoms
adc
push
fwait
mov
adc
dec
test
ljmp
das
fnsave
ficoms
xchg
lret
xchg
inc
xor
jp
xor
pop
jno
int3
rcrl
sbb
mov
add
mov
icebp
mov
test
inc
inc
cli
inc
in
push
mov
subl
cmp
test
jnp
sti
dec
insb
dec
outsl
cmp
dec
loop
les
dec
stos
sahf
aaa
sub
addr16
cmp
push
mov
xchg
jecxz
subb
nop
or
dec
out
fdivs
fadd
dec
or
ret
push
sub
lcall
pop
mov
bound
icebp
cmp
mulb
mov
shrl
mov
adc
leave
jecxz
jns
xchg
int3
jl
ret
push
test
lods
loopne
jb
lods
movl
mov
scas
lds
jae
and
pop
push
cmpsb
shll
cmpsl
popf
cmp
mov
rorl
enter
lock
dec
cmpsb
xor
sbb
pop
sbb
push
pop
outsl
sub
out
stos
jo
sbb
cmc
push
into
add
jle
mov
xchg
jbe
dec
out
lret
sahf
mov
repnz
dec
subl
push
lahf
stc
fdivs
push
ret
aam
xor
loopne
ror
xor
pop
push
iret
gs
cld
push
inc
push
sub
push
jmp
test
adc
or
or
and
mov
in
push
jnp
outsl
jae
fimuls
pop
add
je
test
je
xor
sub
inc
mov
icebp
aas
mov
mov
cmp
rcrb
push
fldt
xor
lods
popa
pusha
mov
push
inc
inc
push
mov
mov
ja
sub
jge
adc
sub
iret
inc
test
ds
mov
jo
mov
xchg
mov
out
sbb
push
loop
inc
pop
mov
movsl
or
fs
mov
fs
cmpsb
push
cmpsb
or
dec
fistps
hlt
sbb
xchg
mov
adc
bound
mov
repnz
imul
jne
mov
out
in
push
dec
mov
mov
mov
cltd
and
aad
mov
shlb
notl
in
push
push
add
inc
sub
mov
and
paddb
or
adcb
adc
mov
adc
test
jge
or
jno
jns
cmp
xlat
je
in
cs
jg
sahf
mov
mov
dec
enter
sti
dec
in
xor
pop
in
mov
xchg
ss
xor
in
push
mov
and
inc
add
aas
ja
les
icebp
sub
xchg
frstor
and
dec
mov
add
dec
mov
rcr
inc
sbb
adc
mov
and
and
adc
ds
add
leave
out
adc
adc
out
cltd
nop
cmp
iret
jl
sub
and
jp
popa
in
std
push
ret
ret
cmp
add
aad
or
mov
imul
repnz
sub
fs
insb
mov
popf
mov
sbb
mov
and
mov
or
jbe
adc
pop
add
xchg
ret
push
and
out
cmc
jno
lods
stos
mov
popf
icebp
repz
addr16
pop
popa
jl
fwait
mov
std
aam
push
mov
adc
xchg
fdivs
test
repz
sub
lret
or
int
pop
ds
or
cmc
leave
add
mov
cmp
lock
lea
stos
sub
test
lea
xlat
iret
jmp
inc
dec
rclb
test
mov
xlat
orl
divl
jp
scas
iret
in
lock
add
dec
mov
dec
ffree
mov
cmp
gs
std
jae
les
stos
addr16
pop
sbb
jae
movsb
xchg
ret
andb
cld
in
mov
xchg
xchg
pop
insl
fmul
lods
pop
into
dec
adc
adc
iret
subl
xchg
mov
jne
dec
jmp
lea
stc
imul
mov
out
sub
cltd
lret
jmp
call
push
pop
and
dec
clc
push
cmova
pop
ret
xchg
mov
leave
test
aam
idivl
in
sub
bound
lcall
inc
in
popa
test
pusha
mov
pop
mov
fistpll
xchg
test
rorb
and
cmp
rol
sub
or
pop
adc
mov
mov
inc
rclb
push
dec
pusha
push
push
in
dec
roll
or
es
jg
fcomip
cmp
sub
push
arpl
movsl
push
fmul
pop
ss
pushf
dec
stc
mov
popa
js
dec
pop
xchg
mov
aas
xchg
cmc
sbb
pop
mov
in
add
das
cmpb
xor
mov
gs
movsl
call
adc
aas
fdivs
dec
lahf
sub
imul
mov
sahf
pop
mov
and
pop
repnz
mov
xchg
xor
out
out
test
sub
sub
adc
bnd
sarl
arpl
mov
push
xchg
arpl
dec
shrl
dec
jne
sbb
roll
lea
cmp
add
jb
push
mov
and
jp
inc
inc
addb
test
push
sbb
xor
push
aas
pop
in
pop
push
jge
mov
popa
mov
das
sarb
aam
outsb
push
jns
imul
pop
pop
dec
dec
call
pop
icebp
mov
push
popf
lret
cmp
mov
xor
mov
scas
adc
push
les
sti
push
dec
ds
fdivrs
mov
xchg
jle
std
push
fisubrs
out
repz
jne,pn
mov
rcr
stos
xlat
pop
add
or
pop
pop
mov
jbe
cli
push
adc
inc
dec
sub
pusha
test
mov
mov
push
leave
in
xor
ss
cmpsl
inc
sbb
jbe
sarb
push
and
js
pop
fbstp
jg
jne
pop
cmc
or
pushf
add
xchg
inc
ljmp
sahf
cli
mov
cmp
cli
xchg
cmp
pop
mov
mov
les
shll
sub
mov
mov
mov
pop
fwait
xchg
sbb
lahf
cmp
mov
pop
jns
push
jbe
and
stc
rolb
jns
mov
mov
mov
enter
pop
testl
sub
jecxz
ds
mov
fbstp
lods
sahf
adc
and
sahf
fildll
mov
ja
stos
aad
pop
ret
scas
addr16
das
mov
stos
ret
pop
lahf
cmp
mov
lcall
or
mov
jbe
fidivs
mov
outsb
jg
or
mov
push
in
aam
and
cmc
mulps
mov
mov
lret
push
mov
dec
sbb
cs
push
aas
movsb
push
fisttpll
dec
push
lea
mov
dec
out
adc
mov
or
jno
mov
cmp
stc
jecxz
testb
mov
push
adc
out
ror
rorb
inc
aam
dec
and
dec
lods
mov
es
push
or
pop
push
cmp
lock
adc
arpl
pop
pop
mov
aas
cli
lret
insb
decb
jmp
jno
scas
gs
std
out
loope
loopne
push
iret
outsw
push
adc
add
cld
stc
mov
lods
cmp
loop
add
js
adc
int3
or
cs
lock
imul
cmc
inc
mov
stos
ret
hlt
cmp
push
adc
sbb
xchg
push
outsl
scas
mov
and
shlb
push
loope
xchg
mov
push
ss
and
jno
mov
mov
mov
jae
pop
ljmp
mov
adc
push
dec
sub
fst
or
push
pop
push
pop
mov
arpl
shlb
jo
cmp
cmpsl
jecxz
cmpsb
xchg
pushf
es
adc
jnp
push
lods
adc
sbb
out
enter
pusha
ljmp
stc
movsl
push
lea
jb
add
es
adc
sbb
sbbl
stos
or
xchg
out
roll
and
push
mov
push
mov
xchg
ret
dec
mov
add
adc
dec
jg
mov
add
outsb
push
xchg
outsl
fidivrl
sub
push
rcrb
aaa
push
adc
clc
mov
inc
jnp
test
cs
ja
addr16
jecxz
sub
xlat
mov
cltd
jo
inc
inc
into
lds
ljmp
xor
cld
jne
outsb
mov
fcmovnu
movl
hlt
sahf
or
pop
leave
movsb
mov
shrl
fucomip
inc
cwtl
imul
test
stos
shll
ret
pop
test
push
sbb
loope
imul
cmp
add
xchg
idiv
inc
inc
out
dec
cmp
call
push
push
imul
sarl
add
push
xchg
gs
movsb
lock
jmp
xchg
fdivs
mov
mov
in
and
dec
out
push
inc
std
andb
loop
sbb
cmpsl
mov
in
cld
mov
jne
mov
dec
jns
mov
mov
and
add
aad
shl
jne
into
dec
pop
and
adc
inc
sarb
cltd
mov
mov
add
xchg
clc
js
mov
sub
pusha
sti
pusha
adc
sbb
and
loopne
enter
jle
aam
jle
inc
xor
clc
cltd
in
or
dec
popf
add
mov
mov
dec
mov
xor
sub
lahf
shrl
xor
arpl
shrb
mov
push
add
iret
xchg
sbbl
cmpsb
pop
xchg
xor
mov
sub
in
into
test
or
mov
in
jp
scas
pop
fidivrl
jmp
add
dec
in
jnp
jg
jge
into
das
nop
add
fprem1
add
rorl
jnp
pop
cmp
cmpsb
xchg
dec
jl
pop
push
sub
inc
xchg
jbe
jno
inc
into
mov
dec
push
ljmp
stos
out
mov
sahf
mov
jg
shlb
xor
dec
pop
xor
sbb
jle
mull
notb
or
js
lock
lret
push
jmp
push
and
jb
es
ja
lods
adc
jae
sahf
movb
ret
adc
js
into
xchg
pop
xchg
in
ss
fimuls
sub
pop
pop
and
sbb
ret
ds
popa
loope
cld
pop
cmp
mov
movsb
nop
es
xor
mov
ret
mov
xor
aas
mov
popf
insl
fs
inc
jae
push
enter
lcall
jecxz
int
stos
sahf
in
inc
adc
xor
test
xchg
cmpsb
std
xorl
cmpsb
les
pop
mov
pusha
jg
mov
and
xlat
cld
adc
mov
push
sub
jl
jmp
pusha
addl
std
xor
jge
push
insl
out
sarl
xchg
jne
xchg
gs
mov
out
dec
dec
xor
lret
popa
je
out
js
push
xchg
mov
shrl
sbb
sub
stos
gs
cmp
rcr
test
jno
push
std
imul
stos
jl
pop
push
add
movb
int3
bound
dec
mov
ja
add
fidivl
fs
mov
loope
and
cmpsl
loop
sbb
mov
lret
xchg
ss
testb
push
xlat
ss
fs
mov
iret
xchg
jns
pushl
mov
loopne
movsl
movsl
mov
in
mov
insb
mov
xrelease
mov
lahf
sbb
jg
loopne
sbb
push
divl
xor
fldl
rolb
sbb
out
pop
pop
sbb
sbb
cmc
subl
cmp
push
ljmp
push
mov
push
inc
mov
out
movsb
xchg
fbstp
fcoml
pop
lods
out
mov
rorl
xor
lods
ror
sub
pop
mov
or
popf
pop
mov
mov
mov
push
aas
aam
mov
ja
pop
sar
shrb
inc
and
mov
mov
mov
fucomip
stos
sbb
movb
mov
roll
fdivrs
in
call
push
out
sub
std
cltd
notb
dec
popf
xor
test
xor
cltd
insl
insb
cmpsb
fwait
sbb
jae
daa
sub
decl
sbb
mov
lcall
sahf
lahf
xchg
outsb
cld
jmp
insl
sarb
inc
scas
f2xm1
call
icebp
mov
iret
arpl
stos
sbb
pop
sbb
ljmp
repz
fists
in
mov
dec
js
xchg
cmpsl
add
ss
sub
or
add
inc
ret
jle
test
sbb
fs
adc
push
mov
aam
leave
out
cmpsb
mov
les
pop
rcr
mov
add
lock
pushf
in
gs
es
push
add
mov
push
leave
mov
or
std
pop
mov
lcall
push
sub
addr16
sbb
iret
into
out
mov
jle
orps
adc
sbb
inc
sub
sbb
scas
mov
in
pusha
test
cmp
xorb
lods
call
dec
sbb
mov
sti
or
inc
addr16
nop
ret
fstpt
or
jbe
mov
das
ror
jl
adc
test
lock
test
fiadds
push
xchg
js
movsb
data16
or
add
popf
ss
or
nop
ss
bnd
mov
das
mov
or
add
mov
pop
xor
push
adc
enter
fwait
mov
mov
adc
in
fs
in
sbb
testl
xor
int3
adc
push
repz
xchg
xchg
cmp
inc
add
add
scas
push
ret
xchg
data16
push
jno
pop
call
jns
pop
in
mov
sbb
xorl
lret
pop
push
lret
fidivrl
fs
cmpsl
into
jecxz
pushf
clc
mov
inc
push
iret
pop
push
sub
sbb
addl
add
sub
repz
pop
popa
push
movl
inc
sbb
or
and
push
jbe
aas
cmc
aaa
cs
adc
adc
cltd
inc
loopne
inc
jbe
cltd
cmovle
adc
mov
sub
adc
adc
imul
rcrl
push
rcrl
sbb
fmul
fadd
mul
repz
sbb
xchg
sahf
lods
or
or
imul
xor
fcoml
add
xor
out
mov
lods
out
lret
inc
inc
dec
pop
mov
and
and
adc
push
rorb
pop
adc
sbb
pop
imul
inc
or
xchg
sahf
int3
push
xor
in
data16
xchg
pop
and
sub
test
fsub
jmp
adc
addb
cmp
adcb
ja
adc
ds
loopne
mov
repz
adc
test
pop
insb
insl
dec
cli
inc
or
pop
mov
mov
js
ja
test
aas
mov
sub
sbb
mov
test
ret
test
xor
lret
mov
mov
mov
cwtl
es
popf
push
jnp
icebp
jns
in
daa
dec
sub
rclb
add
fs
les
fldt
push
xchg
fsubrl
push
xor
xchg
in
leave
andl
mov
adcb
and
push
roll
mov
cmp
lods
insl
nop
jp
or
frstor
mov
popf
push
scas
out
test
lahf
scas
and
jl
pop
jmp
shlb
jne
xchg
or
push
mov
cld
cmp
mov
fsubrp
insl
idiv
scas
adc
xchg
es
loope
mov
ds
push
jle
jb
lds
pop
mov
dec
mov
push
hlt
sarb
sbb
clc
cmp
sbb
dec
inc
or
out
ds
sbb
inc
adc
cmpsl
popa
jno
or
push
gs
pusha
mov
mov
push
das
xchg
adc
daa
push
test
fstpl
xchg
add
inc
pop
push
icebp
fidivl
cmc
cmc
pop
adc
aas
dec
jno
jb
fs
jae
xor
sub
or
mov
pop
pop
call
sub
pop
stos
or
inc
inc
jo
xchg
in
std
pop
xchg
xor
xor
outsb
and
bnd
sbb
cmpsl
fwait
scas
push
xor
jns
call
sub
mov
mov
movsl
aam
cmp
test
pushf
xlat
arpl
fwait
jge
sbb
outsl
clc
bound
cld
dec
repnz
xchg
or
jns
clc
ret
packssdw
and
loope
cmpsb
jl
xor
mov
cmp
xchg
je
jmp
xor
mov
ss
js
aas
cmp
inc
mov
in
mov
addl
out
and
xchg
jge
inc
and
cmpsl
out
faddl
lcall
je
dec
movsl
cmp
icebp
push
test
jnp
mov
test
mov
inc
icebp
push
mov
aad
sahf
lcall
mov
mov
cli
mov
fcmovne
fs
adc
in
or
js
adc
stos
cs
xlat
mov
push
aas
pop
leave
xchg
rcrb
fnstsw
scas
mov
fisubs
xor
out
sub
out
xchg
and
jp
sbb
pop
mov
mov
xchg
push
mov
ljmp
mov
inc
dec
dec
test
insl
push
mov
jns
fwait
push
inc
jno
and
into
addr16
lea
jl
insl
xchg
mov
mov
mov
sbbb
sahf
inc
test
pushf
and
push
add
dec
test
cmp
aad
xchg
cwtl
inc
nop
adc
or
and
push
std
xorb
stos
inc
ja
pop
lcall
pop
mov
jb,pt
push
sbb
fdivrl
stos
dec
jl
mov
iret
movl
subl
mov
pop
leave
movsl
lods
pop
in
pop
pusha
push
xchg
imul
mov
outsb
cmpsb
inc
mov
sti
fldcw
icebp
bound
mov
insb
xchg
mov
cmp
in
mov
jmp
xchg
push
icebp
mov
out
or
daa
jmp
test
pop
pop
jmp
pop
add
xor
movlps
call
out
insl
imull
dec
push
jmp
mov
push
and
cmpsl
dec
adc
in
inc
mov
dec
xor
cmpsl
mov
jmp
cmp
xor
or
hlt
mov
mov
cmc
jbe
cmp
mov
jno
loop
jae
in
repnz
out
nop
stos
mov
xlat
push
cld
inc
pop
ja
sub
inc
aad
mov
js
and
aas
jno
pusha
xor
lods
pop
loop
jo
lret
movsl
mov
xchg
call
sub
push
lahf
pop
push
sbb
addl
pusha
sub
and
nop
mov
js
jbe
cmpsb
mov
mov
cmpl
dec
push
xchg
ljmp
loope
fmuls
mov
mov
mov
pop
sbb
in
int
sub
mov
xchg
popf
push
add
sahf
sub
daa
out
rclb
into
shrl
gs
push
cmp
ja
mov
inc
xchg
sarl
dec
test
adc
adc
push
out
inc
pop
popa
inc
jl
lret
pop
fldcw
cmp
mov
mov
fsts
lods
sub
enter
mov
xchg
inc
out
jecxz
shlb
cltd
cmp
test
adc
xchg
jne
into
and
mov
or
pop
dec
adc
and
pop
jg
je
lods
sarl
scas
imul
add
and
xor
push
cmp
lcall
push
xor
cs
pusha
jo
imul
pushf
lods
adc
cmp
shl
xchg
inc
jle
aam
sbb
mov
fisttpl
pusha
lret
aas
mov
dec
in
xchg
shll
repnz
xchg
xorb
pop
addr16
mov
movsb
lods
rcll
add
lcall
sti
loop
push
cmc
fwait
pop
adcb
xchg
nop
sbbb
insl
dec
push
sarl
pop
leave
xlat
mov
pop
mov
mov
lods
dec
add
adc
xchg
inc
inc
imulb
fldl
add
out
loopne
mov
ja
push
jmp
mov
push
jnp
gs
dec
pop
in
imul
mov
adc
rorl
jne
xchg
xchg
ljmp
lret
or
cmp
adc
rcll
test
imul
mov
cmp
add
jae
scas
mov
leave
sti
mov
pop
adc
mov
jl
xlat
pop
inc
repz
sbb
stc
xchg
or
mov
in
fwait
xchg
xlat
cmpsb
fwait
push
imul
js
dec
lods
into
repnz
cmp
or
sti
insb
or
les
pop
icebp
rcr
clc
insl
nop
insl
cs
idivb
add
repz
and
and
cs
fsubl
les
mov
sarb
adc
and
pop
aam
sbb
inc
cmp
fists
rorb
inc
inc
sub
ret
adc
out
aaa
movsl
test
pop
imul
das
repz
xor
ljmp
jnp
mov
nop
iret
movsb
mov
daa
cmp
jae
or
push
out
lods
xchg
test
dec
pushf
hlt
mov
out
mov
sub
stos
inc
sbb
bound
cltd
int
sbb
faddl
push
ret
test
add
mov
test
bswap
std
adc
jmp
shl
sub
in
outsl
cmp
imul
aaa
inc
sbbl
pop
jnp
rcrb
arpl
cld
das
push
push
jecxz
and
test
push
jge
cltd
xor
sarb
dec
xchg
inc
mov
popf
aam
push
mov
pop
add
stc
clc
rol
pop
lcall
in
lods
cmp
pop
fcmove
push
mov
sub
repz
pop
iret
mov
sub
aas
test
sbbb
fisubrs
aas
leave
sti
jecxz
sahf
mov
sbb
jmp
int
push
and
jmp
data16
jge
scas
test
pop
lea
sub
push
xchg
mov
xchg
jbe
int3
mov
mov
movsb
xchg
add
add
or
arpl
jg
xchg
jp
cld
push
lahf
sbb
xor
adcb
test
add
out
daa
jg
mov
fs
fwait
inc
arpl
push
sbb
scas
rcll
cmp
aad
adc
jns
mov
sbb
in
push
dec
mov
outsb
arpl
pop
or
jne
xchg
cs
dec
cmp
cwtl
aas
xchg
sbb
in
dec
fdivrs
cmp
incl
and
cmp
jns
sub
int
in
pop
sub
push
sub
and
adc
in
leave
jle
sub
mov
out
push
xor
mov
dec
cmp
neg
decl
xchg
push
ret
cmc
jle
or
mov
in
push
aam
inc
jbe
dec
enter
shl
and
aad
pop
movl
mov
pop
jbe
adc
aad
movsb
adc
or
add
adc
enter
xor
push
xchg
xchg
loop
adc
in
push
int3
inc
add
mov
push
ja
inc
gs
fsubrp
inc
jns
pop
dec
fwait
ljmp
mov
push
sub
mov
push
dec
jb
add
pop
int3
mov
leave
aam
test
push
xor
lods
sub
pop
bound
rol
cmpsl
jno
test
push
xor
xor
dec
int
jne
mov
lar
sahf
dec
mov
pushf
push
jae
pop
lea
mov
mov
jae
inc
popf
xor
repz
mov
mov
xor
loope
sahf
xchg
out
push
flds
xchg
loop
adc
inc
stos
fcmovnb
loope
das
cwtl
pop
fstpl
or
insb
or
dec
xchg
ds
cmp
xchg
mov
inc
cmp
pusha
cltd
and
out
es
cs
jo
fs
enter
cmp
pop
dec
add
bound
push
pushf
push
dec
mov
aam
out
and
fisubs
popa
jne
cld
rorb
or
cwtl
jge
out
or
in
add
test
cs
adc
lcall
xchg
jge
in
xor
mov
mov
lahf
jbe
fwait
dec
aam
push
xor
xchg
mov
jnp
mov
roll
mov
push
inc
adc
or
xor
dec
and
sub
rorb
sahf
outsb
dec
jnp
stos
jo
ss
std
or
sbb
sbb
or
cmp
cmpsl
jecxz
mov
or
mov
xor
or
jb
in
hlt
push
shrb
push
aam
sub
inc
push
out
leave
into
push
les
lea
mov
inc
jl
mov
mov
push
outsl
cmpl
xor
push
js
aaa
repnz
push
mov
movsl
add
push
cld
outsb
lcall
and
insl
cld
and
pop
push
cmpsl
adc
pusha
and
cmovp
fwait
stos
or
mov
mov
add
xchg
out
movsl
xor
cmpsl
add
jbe
cs
iret
dec
sub
ret
jno
and
in
dec
cwtl
sbb
sub
mov
and
pushf
xor
mov
nop
pop
es
or
cmp
pop
addr16
and
fnstcw
mov
xchg
repnz
mov
sbb
ret
addr16
cmpl
push
shlb
xor
outsl
inc
sbb
cmp
pop
xlat
out
jecxz
mov
lret
mov
jl
mov
lahf
test
mov
push
lods
notl
dec
jo
pop
loopne
out
dec
jae
sub
decl
cmpsb
mov
scas
cmp
fildll
stc
mov
leave
rcr
mov
pop
int
test
add
lods
inc
sbb
aad
sub
outsb
mov
xchg
in
aam
or
ret
mov
in
loope
loope
push
jbe
fwait
arpl
sbbb
cmpsl
sub
mov
xor
cmc
jl
je
roll
lds
int3
scas
xchg
dec
inc
lods
inc
mov
inc
cmp
out
ss
bound
mov
pop
push
fldl
mov
push
outsb
sbb
jo
push
or
daa
dec
hlt
pop
mov
mov
add
lahf
imul
pushf
ja
cli
outsb
pushf
jmp
mov
add
sbb
xchg
sub
lahf
les
outsb
sti
jb
out
sbb
xor
cld
les
dec
sbb
into
mov
insb
pop
or
cmpsl
shlb
sub
xchg
or
adc
jns
lods
imul
insb
ss
jbe
xor
in
insb
bound
mov
pop
mov
jecxz
ss
pop
in
cmp
push
bnd
mov
cmpsb
add
std
mov
xchg
jl
movsb
ret
sub
adc
cmp
in
test
mov
and
mov
sub
cld
movsl
inc
inc
or
fmuls
xchg
ss
jae
rorl
push
push
jp
jnp
cld
sub
xor
xor
cmpsw
add
push
cmp
fs
jae
popa
cmpsl
mov
cmp
nop
ds
nop
lahf
ficoml
aam
scas
sarl
or
cwtl
shrb
test
xchg
push
and
std
insb
lahf
mov
xchg
fwait
std
cmp
mov
fisubrs
jnp
mov
imul
jne
inc
dec
and
mov
test
mov
jbe
in
mov
bound
add
ja
xlat
adc
inc
fs
lret
jmp
or
ja
fwait
push
cltd
test
fisubl
sbb
fisubrs
mov
sub
cmpb
xchg
inc
xor
pop
in
or
sbb
inc
mov
ret
mov
outsb
push
aaa
sbb
mov
outsl
lret
cmp
ljmp
push
push
push
or
add
pop
add
stc
or
xor
stos
push
out
lret
mov
and
lods
ljmp
add
movsl
push
mov
push
fisttpll
icebp
sbb
popa
ljmp
shll
imull
outsb
xchg
mov
test
popa
mov
inc
xchg
jmp
cwtl
ja
xlat
cltd
insb
and
out
or
adc
scas
lret
push
sbb
aad
xor
test
jo
xor
test
or
sbb
nop
mov
pushf
pushf
cmpb
adc
lds
fs
xchg
xor
sti
adc
hlt
out
xchg
clc
inc
movsb
sbb
stos
xchg
xchg
mov
mov
and
jne
pop
inc
jb
aaa
ja
in
sarl
lock
mov
mov
out
dec
and
cmpsb
or
add
mov
push
xchg
sub
scas
jp
mov
addr16
div
and
dec
jnp
xor
flds
iret
sbb
data16
mov
jecxz
cmp
int3
jbe
cltd
sarb
jns
push
dec
lcall
push
cmp
movsb
xor
lcall
xchg
dec
test
in
cmpsl
pop
and
rorb
inc
shl
cli
adc
push
jbe
test
jmp
ficoml
idivl
lret
xchg
dec
inc
and
cmp
cmp
fcompl
addr16
sbb
mov
and
leave
sub
pop
xor
nop
mov
cmc
adc
inc
shl
cmpsl
or
dec
adc
sbb
push
or
pop
hlt
int3
sub
rcrb
jns
and
inc
sub
cmp
inc
pop
int
and
test
imul
pop
les
xchg
or
push
addb
ja
cmp
xlat
adc
aam
pop
or
mov
imul
adc
dec
jbe
and
jo
lret
divb
add
inc
xor
xchg
dec
rcll
xor
cwtl
fdivrs
mov
inc
sub
inc
xor
xchg
jb
stos
std
ljmp
inc
push
call
inc
lahf
sub
xor
lods
je,pt
sbb
movsl
jg
and
fisubrl
mov
gs
fwait
xor
cmp
or
aaa
bound
pop
sbb
add
aad
pop
cmpb
leave
and
lods
adc
cmpsb
sbb
pop
mov
pop
scas
bound
test
call
cmpsl
inc
imul
in
adcl
inc
je
mov
pop
add
push
fdivl
outsl
lret
jecxz
dec
clc
insb
fcoms
mov
mov
mov
bound
cmp
and
cmp
in
sbb
xchg
subl
aam
xor
inc
std
loop
int3
dec
cmp
push
pop
test
aaa
pushf
dec
lret
sub
fimull
pusha
std
pmaxsw
fs
cmpsl
outsb
stc
dec
cld
mov
push
push
stos
inc
cmp
push
lret
aam
mov
gs
fimuls
adcb
mov
rcrb
push
inc
bound
test
imul
cli
in
fcomi
cmp
push
jp
sub
lock
jge,pt
scas
jmp
mov
xor
fdivl
iret
sbb
push
rcrb
repnz
sub
jp
lods
sbbb
inc
imul
insb
push
xchg
int
addr16
add
cmpsl
mov
or
dec
add
call
pop
ljmp
stos
sbb
xor
pop
sub
inc
fwait
jb
add
or
pop
popa
mov
movsl
lock
sarb
xor
and
pop
inc
popf
inc
cmp
insb
lret
pop
mov
fs
out
mov
sbb
test
inc
fistps
pusha
mov
imul
xor
fnstcw
popa
jg
push
sbb
push
sub
addr16
daa
adc
xor
fchs
rcrb
filds
nop
pop
ficoml
push
pop
jae
add
imul
dec
ret
jns
aad
pushf
ficoms
leave
imul
dec
or
xor
lea
xchg
inc
std
cli
cwtl
pushf
cmp
fs
mov
sarl
pop
lock
ret
push
cmp
imull
cmpsb
xor
std
test
movsl
aam
or
push
or
inc
test
out
aaa
sti
mov
and
imul
mov
lock
mov
mov
shlb
jmp
ret
adc
pop
pop
push
push
inc
inc
test
mov
jle
adc
push
aam
pushf
and
inc
xor
pop
push
fnsave
and
mov
stos
decb
sbb
mov
out
movsl
pop
sub
movsl
adc
jbe
sub
fidivs
sbb
addl
mov
lock
mov
scas
jns
sbb
repz
arpl
mov
mov
sbb
rsqrtps
mov
jge
shlb
rcll
mov
mov
push
pop
cmpsb
push
les
fs
scas
lock
xor
stc
leave
pushf
cmp
sub
or
push
daa
mov
icebp
imul
xchg
nop
aad
sbb
rorl
pop
loop
int
jbe
and
cmc
add
outsb
cmp
subps
xor
aad
sbb
lea
test
lahf
add
inc
sti
mov
add
cmpsl
insl
cltd
arpl
add
mov
and
push
xchg
inc
inc
xchg
adcl
ja
pusha
sub
stos
jb
mov
cmpsl
jp
aam
mov
fcmovnu
jecxz
pusha
push
jns
push
rcrb
adc
in
mov
jo
or
jmp
or
pop
mov
xchg
clc
jo
jb
repnz
mov
mov
sti
mov
xor
jbe
xor
imul
pop
and
pop
mov
mov
cld
testb
mov
jge
rorl
adc
mov
lahf
insl
jecxz
sub
jbe
rorb
ljmp
inc
xor
jns
add
out
rcll
nop
loop
dec
out
inc
jmp
fisubl
clc
hlt
popa
fsubr
push
ret
pusha
push
jecxz
jg
test
nop
xlat
ja
mov
jbe
ja
push
sub
inc
ss
or
lods
or
movsl
pop
or
cltd
mov
xlat
movsb
and
lcall
mov
jae
outsb
hlt
xchg
mov
in
xor
lods
jno
dec
call
mov
js
fucomp
inc
mov
incl
mov
int3
fsubrs
or
ss
sbb
mov
cmp
jo
pop
mov
adc
push
or
inc
dec
es
xchg
ret
ret
cmp
pop
jle,pt
mov
cld
dec
jge
xor
lahf
and
sbb
inc
and
std
mov
negb
xor
mov
cwtl
xor
cmp
mov
mov
mov
jbe
pop
sub
add
xchg
ret
outsl
lock
das
js
add
and
cmp
dec
and
repz
xor
test
sbb
stos
jnp
and
mov
sbb
push
sub
add
enter
gs
jo
push
sub
xchg
xlat
dec
andb
sub
xor
and
cmp
out
sti
push
and
lret
push
test
jmp
lret
insl
inc
and
outsb
jecxz
js
mov
mov
xlat
and
loopne
lcall
mov
pop
mov
leave
inc
cmp
xchg
pop
lods
mov
and
pop
push
jmp
fs
call
and
inc
shrl
in
aaa
push
xchg
mov
call
and
or
popa
movsb
idivb
movsb
add
xor
fiadds
test
sbb
lds
mov
push
insb
xchg
add
dec
roll
lret
cld
imul
shrl
push
mov
pop
xlat
out
cmp
jmp
lds
sub
mov
or
push
mov
sbb
repz
das
in
je
pushf
push
leave
fcomp
xchg
decb
mov
mov
sbb
sub
mov
lret
mov
jl
lods
add
loopne
out
cmp
icebp
cmp
sbbl
lahf
mov
sub
sub
mov
ret
jmp
sub
les
leave
sub
movsl
mov
mov
leave
mov
push
outsb
xchg
cwtl
mov
add
subl
scas
xor
cmpsl
shll
aaa
and
call
cmpsl
mov
std
aam
daa
push
pop
int3
mov
pop
sub
test
mov
push
sub
ficompl
ljmp
adc
enter
or
lods
sbb
adc
in
mov
aaa
pop
mov
in
push
shlb
dec
mov
push
sbb
sbbb
ret
jge
adc
shll
sbb
cmp
inc
lea
mov
push
sub
inc
inc
or
cmp
xadd
sbb
das
bound
cmp
imul
push
adc
sarl
pop
jmp
inc
daa
adc
dec
out
into
inc
and
xor
add
movsb
inc
mov
push
pop
sbb
fcmovb
sub
push
adc
or
and
out
in
mov
push
cs
sti
jmp
inc
jecxz
not
imul
icebp
rclb
cmpsb
or
cld
cld
loopne
jae
mov
jecxz
stos
dec
fwait
jge
adc
and
sti
lret
daa
aad
pusha
lods
and
pop
and
push
aas
jp
jbe
lret
cli
jb
xchg
inc
pop
out
shrl
movsl
jo
or
mov
in
jnp
and
jbe
movsl
jle
pop
inc
adc
or
cli
cld
add
ret
test
add
inc
pop
inc
cmpb
push
mov
loope
int
dec
xchg
push
addr16
test
test
add
mov
jle
xor
mov
dec
lret
dec
sbb
and
mov
mov
sbb
clc
cmpsb
push
call
jno
das
lea
fsubrp
lods
sub
pop
hlt
orl
arpl
and
push
rcll
sub
cmp
int3
jmp
mov
inc
mov
int
ret
jae
arpl
rcrl
and
fstpl
pop
lea
push
and
push
ret
pop
push
flds
add
mov
popa
mov
in
sbbb
pop
xor
jmp
fsin
mov
lea
shrb
popa
jecxz
imul
lods
fs
clc
xchg
rolb
das
pop
int
hlt
sub
dec
pop
sbb
push
repnz
sub
lods
sahf
mov
jmp
jnp
and
cmp
adc
add
add
dec
es
movsl
mov
mov
and
loope
cmpsl
scas
xchg
lret
test
mov
lcall
sub
dec
shll
in
aam
mov
mov
aam
int3
les
popa
or
insl
mov
aaa
or
scas
out
ljmp
xchg
aaa
lea
add
jno
cmc
inc
outsl
sub
xchg
cwtl
int
fcompl
or
sub
insb
popa
shlb
push
xchg
push
xchg
sub
pop
mov
inc
mov
sbb
aaa
aas
adc
nop
mov
pop
mov
inc
jp
or
insb
mov
arpl
push
fsub
mov
imul
das
jle
add
fcoml
leave
stos
and
std
mov
lcall
mov
mov
sbb
xchg
das
adc
loop
mov
pusha
mov
mov
jbe
cld
mov
lret
in
inc
mov
lret
inc
cwtl
push
push
cmpsl
add
add
lret
push
hlt
scas
pop
xorb
js
rcrb
pop
add
in
push
xchg
idiv
sub
mov
push
mov
out
je
ret
movsb
lret
mov
sarb
jb,pn
imul
fs
loop
scas
xor
mov
cmp
insb
ljmp
jb
inc
scas
jle
nop
xorl
pop
orl
mov
pmaddwd
cmp
push
pop
cmpsl
pop
xchg
dec
inc
test
test
xor
sub
mov
dec
sub
sar
leave
and
jge
stc
pop
sub
cmc
arpl
or
fsub
push
mov
xor
ret
xchg
ja
push
out
and
cwtl
pop
sbb
int3
push
mov
mov
adcl
das
or
fsubl
pop
out
test
outsl
or
sarl
in
pop
dec
loope
and
addr16
in
mov
xchg
jecxz
add
sahf
add
aas
insb
sti
std
popl
add
loopne
aad
inc
or
pop
scas
mov
push
stc
js
jnp
rorl
cwtl
iret
push
add
push
inc
cltd
jb
mov
ret
xchg
loopne
or
psubw
mov
outsb
adc
sub
mov
fwait
out
ret
adc
lea
cmp
xor
jb
push
call
cmp
mov
and
mov
icebp
pushf
mov
addl
xor
in
cmp
adc
dec
or
dec
mov
xlat
scas
leave
cmp
mov
movsl
sub
icebp
add
mov
in
daa
test
pop
out
ret
or
and
mov
inc
test
iret
insb
xlat
ss
mov
add
lret
push
hlt
fidivl
stc
mov
pop
sahf
mov
adc
jno
mov
or
inc
push
clc
and
data16
adc
in
dec
cmpsl
int3
add
data16
inc
clc
loope
mov
add
es
mov
sarl
popa
or
push
div
test
pop
hlt
aam
fmul
mov
add
in
sahf
cmpsl
inc
pop
daa
shll
sbb
fnstsw
or
outsl
sti
fs
sahf
paddb
mov
popl
and
dec
sbb
sub
add
lcall
std
mov
mov
mov
pop
pop
push
hlt
shr
or
testb
sahf
dec
add
and
nop
push
cmp
insb
nop
or
fcmovnb
push
movsb
dec
push
or
and
out
cld
arpl
and
popf
lret
rolb
sahf
mov
mov
cmp
icebp
inc
sysexit
loop
cs
mov
mov
mov
pop
and
jno
push
and
and
fwait
or
aaa
mov
xchg
sahf
mov
mov
adc
shrl
sbb
jne
or
add
cmpsl
inc
inc
xor
sub
insl
ficompl
xchg
and
xor
inc
mov
push
negl
jbe
loopne
mov
jno
and
outsb
xchg
jae
shl
push
sub
adc
loop
pop
out
xor
and
ficoms
sub
jno
dec
jg
dec
inc
mov
cs
ljmp
xor
mov
cmp
sbb
cmpsb
cmp
sub
shll
shlb
mov
sbb
imul
out
call
aam
es
outsb
in
flds
cwtl
cmp
jo
mov
mov
ja
inc
loop
pushf
ja
pop
dec
mov
lcall
fmuls
and
or
xchg
xor
dec
or
imul
fnsave
push
xchg
testl
ret
sbb
outsb
inc
cmpsb
or
loope
lcall
pop
adc
jne
and
pop
mov
mov
xchg
cli
repnz
data16
test
mov
icebp
fdivp
fcoms
cwtl
idiv
pop
and
cltd
cmp
ficompl
xorb
and
sahf
xchg
les
or
decb
sub
sarl
xor
jle
jmp
aad
pop
negl
std
sub
or
mov
pop
leave
add
push
push
push
xchg
lods
inc
ss
push
loopne
pop
hlt
popf
xchg
jnp
pop
cmp
ret
dec
jge
inc
jne
shlb
sbb
sbb
pop
movsl
push
es
jae
adc
jo
push
sub
push
sbb
fildll
push
sbb
jle
jl
push
jbe
jne
outsb
cmp
adc
push
push
repz
pop
int3
fimull
adc
sbb
push
cmp
push
push
outsb
pop
xchg
fldcw
pop
insb
mov
xchg
cmp
cmp
push
and
cmp
insl
mov
faddl
bound
ss
mov
call
push
scas
sbb
xchg
daa
in
jl
sbb
inc
rcll
fimull
and
jg
in
int3
insb
jmp
test
and
push
sysexit
rcrb
jl
sahf
das
dec
jbe
sbb
test
inc
mov
sbb
xchg
addl
lea
mov
pop
in
lcall
inc
xorb
adc
add
jg
sahf
dec
jno
lahf
mov
sbb
push
scas
mov
pushf
loop
nop
jbe
and
fsubrl
mov
mov
add
cld
outsb
jge
gs
pop
sti
mov
cmpl
movsb
and
push
leave
mov
sahf
mov
inc
and
popa
in
iret
ljmp
movsl
pop
clc
sub
adcl
add
jmp
and
rclb
shrb
jae
mov
cwtl
mov
imul
aaa
and
sub
testb
inc
jbe
mov
mov
mov
popf
xchg
mov
fldt
fwait
aad
jecxz
iret
test
xchg
add
cmp
push
and
scas
pop
jl
iret
sahf
cmc
cli
nop
mov
inc
out
scas
inc
pop
push
cmpl
test
js
imul
adc
push
insb
mov
push
push
push
cmp
into
sbb
cmp
sbb
fcmovne
ss
dec
or
lods
fs
push
adc
jbe
fmuls
sahf
cmp
sub
fwait
jb
sarb
inc
lods
das
shl
sbb
push
lcall
rcrl
fstpt
mov
adc
pop
sbb
cmp
cmp
je
mov
ret
or
fmull
mov
adc
call
inc
jo
and
enter
xor
push
mov
mov
lea
pop
call
xchg
insb
dec
cmpsb
cmp
xchg
cld
lret
dec
arpl
adc
add
lret
ja
cmp
lcall
loopne
loopne
inc
sbb
add
mov
mov
cltd
mov
push
sub
repnz
mov
add
or
sti
pop
jl
xchg
pusha
mov
sub
shrl
popf
mov
adc
or
push
pop
lds
mov
push
into
int
jmp
out
add
push
mov
cmp
pop
sub
sub
or
mov
sub
leave
clc
cmp
lahf
inc
fcompl
repz
cld
clc
mov
lds
dec
sbb
repnz
fisubl
mov
fdivl
add
xor
sbb
xchg
or
xor
and
sti
call
ss
out
mov
repz
xor
add
cltd
push
lods
in
inc
rcl
adc
xchg
fcomps
pushf
xchg
ret
mov
xlat
pop
imul
inc
lret
push
cli
imul
mov
push
or
jae
and
jb
mov
dec
fldt
xchg
and
xchg
jl
cmp
scas
outsb
adc
dec
jbe
test
dec
inc
jmp
pop
add
pushf
mov
mov
bound
js
outsb
and
xchg
push
cmp
andb
xor
lret
insb
frndint
clc
push
add
fwait
mov
sub
jnp
das
sub
add
mov
jmp
clc
add
adc
jmp
sub
cmpsl
cwtl
pop
cs
and
imul
inc
xor
mov
jb
vcvtpd2dqx
mov
stos
dec
or
adc
imul
xchg
pop
popa
mov
pop
pop
sbb
mov
cmpsb
insb
inc
ret
xor
xchg
cld
sbb
mov
outsb
mov
lret
inc
and
push
pop
inc
adc
pop
sbb
int
jo
roll
rorb
jo
and
movsb
adc
mov
jecxz
xchg
add
sub
mov
dec
mov
ss
xchg
movsl
rol
jb
adc
jnp
push
lods
in
iret
jns
aas
enter
jmp
mov
dec
rcrl
jge
fwait
or
sahf
jnp
lcall
out
aas
ret
out
pop
rolb
rcll
divb
pop
pop
adc
ret
mov
jp
aam
mov
add
add
jno
movsb
mov
cmp
enter
sub
or
je
mov
insl
out
cmp
enter
jle
xlat
mov
js
inc
fcomip
dec
push
or
cmp
shr
insl
sub
add
and
sbb
pop
xchg
add
inc
out
loop
je
cli
cmpsl
out
fisubl
out
xor
lods
pop
rorl
mov
mov
push
fwait
mov
in
popf
iret
mov
and
loope
xchg
scas
add
sahf
idivl
stos
jmp
adc
dec
and
sub
adc
sarl
push
xchg
rcll
add
stos
inc
flds
push
jle
lret
test
jbe
jle
ds
and
sbb
outsw
push
lods
pop
in
xor
mov
push
xchg
add
inc
je
pop
lea
je
sbb
rcll
subb
xchg
call
je
sub
lock
testl
sbb
sbb
xor
jge
push
jg
cmp
inc
jmp
or
mov
and
imul
and
and
jp
mov
and
xor
dec
ja
mov
adc
xchg
push
xchg
pop
insb
inc
sahf
xor
pop
pop
clc
jecxz
mov
adc
cvtps2pi
mov
mov
mov
rcrl
jbe
adc
cld
repnz
and
mov
or
adc
fisubs
and
ficompl
bound
fsubrl
jg
pop
add
push
jmp
jb
inc
scas
lods
and
mov
sbb
or
icebp
jno
rcll
dec
jecxz
and
aaa
fldt
ja
dec
scas
pop
jl
jmp
or
mov
mov
nop
dec
divl
stc
jg
aad
aad
cmp
pusha
movsb
add
dec
iret
pushf
leave
add
jecxz
mov
xor
push
stc
jl
mov
or
dec
xchg
imul
mov
xlat
imul
xor
lods
ficomps
fisubrs
pop
pop
lcall
jge
cmpsl
sub
lods
cmp
dec
addr16
cmc
stos
push
lods
ljmp
stos
and
mov
fisttpl
pop
loop
push
int3
adc
cmp
popa
stos
sub
lret
daa
pop
mov
xchg
test
arpl
adcl
pop
push
xchg
jno
les
aad
repnz
sbb
dec
ror
fidivrs
lret
je
repz
mov
xor
mov
negb
mov
inc
std
lret
dec
shlb
jmp
lea
pop
sti
loopne
and
and
and
or
sahf
dec
mov
outsb
rclb
fadd
lods
call
sahf
jle
clc
mov
mov
pop
jb
cmp
adc
add
cld
or
push
bound
mov
pusha
fwait
arpl
inc
dec
imul
mov
mov
cmp
test
jb
add
xlat
arpl
movsl
pop
sub
cmc
push
pop
jns
jmp
jnp
dec
jge
icebp
popf
test
push
es
out
xchg
cmp
into
cmp
mov
lret
lret
or
mov
jle
bound
cmpb
mov
xlat
push
fstps
inc
orl
stc
imull
lret
pop
negl
mov
add
iret
movsl
sub
aad
pop
repz
loopne
adcl
pop
fwait
dec
cmp
pop
call
xchg
push
stos
xor
addr16
mov
push
vmaxpd
cltd
sbb
sbb
jno
pop
or
mov
test
jb
sub
lods
xchg
adc
lods
push
cmp
mov
or
movsl
imul
sbb
in
cmpsl
add
es
cmp
and
lods
jl
adc
xchg
pop
dec
leave
dec
loopne
xlat
push
das
movsl
sbb
repz
les
mov
jno
imul
sbb
dec
xlat
ljmp
mov
lahf
addr16
insb
addr16
aaa
arpl
xor
dec
xchg
sub
clc
cli
sbb
aam
iret
mov
call
movl
pop
inc
jecxz
cmp
shll
clc
mov
or
shr
lods
pushf
fnsave
push
lret
dec
mov
mov
inc
sti
inc
loopne
sbb
sbb
loop
push
cmc
add
xor
push
xorb
cli
loop
iret
cmp
cmp
in
sub
dec
test
pop
mov
rcrb
dec
cmp
shlb
cld
pushf
scas
and
push
jo
push
ja
lret
pause
rcll
adc
mov
cs
cmp
fstp
mov
push
aam
outsl
gs
test
xlat
imul
lods
aaa
mov
pop
and
fcomp
test
cs
dec
out
sbb
jno
pop
fldcw
das
mov
out
getsec
mov
xor
sahf
pop
xchg
adc
cmp
stos
sti
mov
pusha
push
adc
jge
call
mov
mov
repz
les
lret
inc
lea
or
xchg
dec
aas
xchg
fwait
roll
int3
sti
insl
mov
test
std
cmpsb
mov
rolb
dec
sahf
xchg
mov
popf
pop
pop
bound
lods
std
add
dec
or
cmp
and
movb
xorb
ja
and
or
addr16
test
es
mov
xchg
loope
pop
sub
lahf
push
ficoml
mov
adc
and
push
dec
out
cmpl
pop
lods
xor
cwtl
notb
adc
mov
push
ja
lock
xor
inc
jle
lods
xlat
loope
dec
movsl
jb
jmp
mov
fwait
cmp
ret
movsl
lock
enter
in
dec
add
inc
sbb
cs
push
mov
das
push
rcrb
outsl
mov
inc
daa
sub
push
mov
dec
mov
push
push
data16
mov
mov
jne
mov
or
adc
filds
insl
inc
or
adc
nop
jp
in
ja
and
push
and
jl
or
ja
rol
add
ret
dec
pop
lret
shr
mov
in
sbb
ja
sub
xor
lods
xchg
ljmp
jmp
in
fwait
ljmp
mov
xorb
pop
adc
push
sbb
and
add
cwtl
outsl
inc
push
pushf
into
test
pop
mov
dec
outsb
pop
fidivrl
stc
xor
std
sub
mov
mov
push
pop
lret
lods
pop
fs
adc
adc
test
pop
pop
ja
cmp
dec
in
mov
mov
out
cltd
leave
push
cld
xlat
repz
adc
out
push
jle
sbb
lods
insb
pop
mov
iret
loope
fnsave
xchg
push
push
xchg
xchg
int
or
xchg
sahf
daa
mov
pusha
lcall
lock
clc
jnp
pop
fcom
push
dec
push
jmp
lock
push
adc
mov
dec
dec
cmpsl
pop
pop
mov
jne
jg
pop
arpl
lds
popf
stos
std
jle
pop
imul
or
lock
sbb
and
inc
add
ret
jo
pop
pushf
lret
push
adc
push
arpl
xchg
daa
mov
in
push
push
pop
and
dec
cmpl
or
sub
fsubl
in
and
mov
shrl
das
cmpl
sti
gs
sub
addb
sahf
xlat
jecxz
lahf
shrd
pop
jae
xor
mov
movsb
mov
sub
xor
pushl
sub
jo
rcrb
jle
in
xchg
jne
pop
sbb
daa
or
and
xor
jmp
mov
test
lods
cmp
popf
clc
xchg
pop
sub
stos
jmp
and
into
mov
adc
cmpsb
leave
xchg
fst
inc
clc
cld
test
sarl
inc
or
imul
js
jmp
cmp
and
fmull
inc
inc
ret
popa
mov
pop
xor
sti
aaa
and
cmpl
push
hlt
mov
mov
es
push
mov
and
jecxz
add
clc
or
int3
jo
movsb
fs
mov
lea
fdivrl
cmpsl
in
sub
pop
inc
and
call
jae
outsb
jae
push
pop
adc
dec
inc
push
lods
sub
sub
add
xchg
scas
add
sub
std
sbb
pop
sub
mov
cmpl
ja
pop
and
mov
cmpb
lods
mov
and
jp
inc
or
cmc
mov
push
lea
mov
cmpsb
ror
popf
out
mov
imul
fisttpll
xor
loopne
jle
inc
scas
hlt
mov
sub
sbb
xchg
jg
mov
fistpll
sbb
aam
fisubl
lea
mov
or
xor
cmp
sarl
xchg
in
loope
subl
dec
inc
xor
test
jg
ret
jne
imul
cmp
loop
aaa
sub
rclb
les
adc
dec
inc
sub
data16
push
push
arpl
aaa
insl
or
out
rcll
or
mov
mov
leave
aad
dec
sub
pop
mulb
or
mov
dec
jp
leave
mov
jae
ret
mov
and
rorb
xchg
add
xchg
call
jbe
xor
and
out
xchg
xchg
popa
cmpsl
fdivrl
xchg
and
mov
cmpsl
pop
gs
add
add
lods
adc
mov
aaa
push
xlat
xor
xchg
add
jge
jns
fidivl
mov
cli
adc
push
dec
ja
xchg
dec
push
dec
inc
ss
fisubrs
sub
xor
inc
mov
or
fidivl
iret
pop
xor
xchg
dec
jecxz
bound
fidivl
jmp
int
arpl
dec
or
mov
mov
xlat
test
cmpl
cmpsb
imul
xchg
pusha
bound
hlt
dec
jae
xor
popf
repz
stos
inc
cmp
mov
inc
fmul
sahf
mov
pop
xchg
scas
adc
psubb
jns
adc
pop
mov
das
scas
cmp
mov
ret
xor
notb
repnz
sbb
cs
sub
lea
dec
js
xchg
idivl
push
xor
dec
scas
popf
mov
dec
xor
mov
in
in
push
test
inc
xor
dec
xchg
mov
push
xchg
cwtl
mov
push
js
cmp
xchg
jmp
in
jle
lock
pop
sbb
stos
lock
fcom
mov
mov
pop
or
xor
inc
sub
cltd
mov
jmp
sub
lret
and
scas
lods
data16
test
push
neg
mov
pop
in
orb
jmp
int
xor
push
push
push
mov
or
lea
in
scas
or
cwtl
push
bound
xor
ljmp
pop
adc
aas
es
cmp
cltd
fwait
pop
mov
aaa
call
lahf
cmc
cld
pop
sub
pop
push
test
xchg
loope
vpmadd52luq
xor
fldcw
clc
dec
movl
xor
ficoml
push
mov
mov
adc
ret
jmp
pop
cli
dec
push
in
dec
cmp
mov
icebp
jae
or
lods
jo
sbb
data16
repz
sbb
sahf
xor
xor
push
out
pop
dec
xor
cmp
cmp
andl
cld
fdivr
mov
pop
mov
aad
cmc
les
mov
pop
sub
pushf
out
stc
sub
sbb
cltd
fs
movsb
ja
push
sbb
cwtl
ds
icebp
add
subl
add
icebp
push
sti
dec
push
rcrb
or
cmc
mov
nop
inc
xor
dec
xor
mov
nop
js
dec
lds
push
jb
daa
testl
and
clc
ds
mov
dec
push
cmc
movsb
loop
pop
inc
mov
in
incb
jg
inc
lcall
sub
popa
shll
rcr
push
add
dec
xchg
lea
stos
jae
jle
loop
xor
imul
mov
rorb
or
lahf
idivb
test
outsl
and
into
pop
popa
add
outsb
dec
push
jp
lret
cmpsl
lret
js
je
xchg
sub
or
mov
ds
pusha
pop
adc
or
pop
push
add
push
cmp
pusha
test
mov
or
sti
mov
and
sti
jmp
mov
mov
ja
pusha
sub
pop
ret
std
cwtl
adcb
into
xchg
adc
lcall
cmp
int3
mov
dec
sti
mov
in
push
xorl
lcall
xor
or
dec
stc
push
mov
movsl
inc
xchg
pop
shll
mov
aas
aas
sahf
aad
push
sarb
fucomip
test
jno
mov
cmpsb
popf
int
mov
loopne
cmp
test
clc
mov
movsl
out
cli
jge
adc
lods
imul
das
dec
pop
in
sbb
mov
inc
sub
pop
movsb
mov
add
in
repnz
cmp
sub
mov
test
movsb
add
push
test
mov
jp
mov
leave
jg
movsb
stos
push
repnz
push
imul
leave
scas
movsb
jnp
scas
lcall
jecxz
sarl
jmp
addl
popa
stos
xchg
sub
adc
nop
jnp
add
cwtl
movsb
mov
sub
cmpb
xor
aas
repnz
ret
xchg
jl
xchg
icebp
mov
pop
fimull
fwait
inc
test
mov
adc
xor
shl
add
les
in
dec
pop
pop
push
mov
or
push
fwait
and
mov
xchg
mov
xlat
mov
imul
cwtl
xchg
push
mov
xor
adcb
repz
dec
inc
ds
mov
insb
dec
inc
xlat
inc
mov
cmp
fnstenv
and
xchg
pop
pop
sbb
dec
std
imull
ja
enter
push
lock
adc
lcall
mov
js,pn
sbb
add
jp
test
enter
mov
mov
pop
shrb
arpl
mov
push
dec
jns
adc
mov
sahf
xchg
and
and
jo
in
jns
xlat
into
out
cmp
out
addl
fstpl
mov
ja
imul
xchg
or
notb
loopne
ljmp
sbb
add
sbb
pop
or
into
mov
or
push
aas
adc
stc
mov
loopne
or
test
repz
add
add
jno
xor
stos
sahf
repz
dec
mov
imul
xchg
loope
clc
push
add
clc
ret
inc
js
xchg
stos
or
sbb
jbe
roll
addr16
btcl
dec
dec
or
and
xchg
xchg
or
xlat
xor
mov
jne
leave
pop
sub
inc
out
test
xor
xor
sbb
adc
xor
dec
stc
je
cs
mov
sti
ss
push
push
out
push
daa
and
mov
dec
mov
movsl
cmp
pushl
loop
cltd
xor
sub
and
mov
loope
outsb
test
adc
push
inc
and
sbb
xor
or
lcall
shrb
loop
movsl
dec
mov
inc
xor
fbld
int3
add
les
or
lods
cmp
jecxz
add
das
and
adc
lahf
cmp
inc
mov
jl
cmpsl
test
arpl
sti
test
mov
cmc
jno
addb
movsl
sub
mov
sub
and
aaa
sub
mov
or
aas
scas
add
jns
inc
test
and
out
scas
loop
scas
gs
jnp
in
jmp
cwtl
std
inc
mov
adc
mov
gs
ja
mov
iret
add
loop
jns
mull
sub
add
pop
cmc
mov
ficompl
mov
mov
mov
pop
ret
add
sahf
or
call
cmp
lahf
jae
or
add
test
cmpsb
jo
scas
into
sub
repz
add
mov
xor
mov
shl
jg
sub
add
pop
les
test
gs
and
test
rcrb
or
inc
or
shr
stos
push
mov
xchg
xor
push
pop
aad
mov
popa
addr16
jno
jl
cmp
aam
push
aad
arpl
push
jae
ret
pushf
pop
bnd
pop
pop
push
sahf
subb
stos
fs
lock
shll
lcall
leave
stos
xchg
fldcw
inc
pop
adc
clc
jl
mov
mov
bound
adc
mov
sbb
sub
cmp
pop
mov
andb
mov
xchg
push
mov
cwtl
loop
std
fwait
xchg
mov
in
cwtl
cmp
dec
pop
out
jmp
std
pusha
stos
add
sub
fucomi
insb
loop
xchg
insb
test
cwtl
dec
pop
jne
aas
jmp
inc
push
outsb
and
xchg
or
add
pop
and
ret
pop
dec
out
lcall
xchg
pusha
mov
mov
sbb
dec
and
cld
addr16
das
push
pop
js
xchg
and
adc
xor
sbb
push
sub
in
sub
mov
subb
mov
ret
add
jae
jns
fcompl
sbb
adc
adc
pop
pop
lock
xor
aas
pop
jbe
cltd
cmpsb
enter
iret
shlb
push
and
out
pop
xor
jecxz
cmp
test
jns
shl
dec
imul
pushf
insl
rcll
loop
pop
mov
adc
xor
int
aam
inc
call
xchg
dec
mov
in
jmp
pop
stos
movsb
mov
pusha
iret
push
fwait
pop
rcrl
xor
mov
stos
sbb
loopne
ds
mov
xor
and
mov
shl
and
stos
pop
xor
das
cmp
scas
fwait
subb
xor
insl
sarl
out
loope
pop
pop
mov
call
lcall
or
push
insl
mov
es
sbb
jb
icebp
fs
hlt
lds
pop
or
dec
xor
pop
jg
cmp
imul
loope
mov
inc
loopne
or
jne
pop
stos
add
popf
roll
imul
add
decb
mov
xchg
jmp
aam
mov
adc
loope
int3
pop
iret
sub
dec
mov
ret
xchg
int
jmp
fcom
pop
sbb
push
test
adc
jg
push
pop
dec
test
faddp
stos
lea
out
hlt
adc
lcall
or
xlat
loop
popf
push
into
mov
xchg
imul
lahf
mov
test
or
push
sbb
in
test
ljmp
repz
std
loope
or
mov
cltd
aas
imul
inc
sub
pop
cmp
int3
insb
inc
pop
lret
adc
cmpsl
outsb
and
lret
push
or
and
mov
aad
or
rcr
pushf
call
inc
dec
jo
in
push
insl
mov
add
cmpsl
push
mov
insl
adc
testb
mov
push
out
mov
or
lret
push
cltd
stos
in
ds
sbb
add
data16
mov
addl
xchg
sub
mov
sbb
jg
cmp
cmp
jg
push
inc
bound
int
adc
dec
adc
int3
test
cwtl
jns
cmp
add
push
sbb
push
les
xchg
call
enter
loopne
notb
dec
in
cs
pushf
out
xbegin
mov
cmc
adc
mov
dec
loope
and
rolb
pop
adc
xorl
test
negl
or
lea
ret
loop
sub
or
dec
fbld
push
jmp
mov
iret
cli
mov
ljmp
mov
mov
mov
sub
fistl
jmp
and
or
pop
hlt
das
xor
sahf
hlt
fstpl
movsb
sahf
or
cwtl
inc
mov
std
jnp
pop
clc
shrl
lods
lods
in
inc
mov
imul
xchg
and
int3
xor
mov
fstpt
jmp
push
inc
mov
jle
notb
jbe
loopne
mov
rcll
lahf
cmp
xchg
or
ret
ds
lcall
push
mov
leave
dec
xchg
sub
xor
dec
pusha
icebp
imul
mov
fs
xchg
push
sar
sbb
mov
mov
out
add
cmp
cmp
sbb
jne
sbb
in
aam
add
int3
adc
popf
jmp
mov
or
movsl
push
cld
mov
rcl
cmpsl
int
sub
push
fdivrs
add
adc
mov
les
mov
stos
cmp
xchg
sub
add
imul
pop
mov
lahf
cmp
sub
dec
sarb
in
outsb
pop
jmp
cltd
enter
imul
or
mov
xchg
mov
mov
popa
push
bound
fs
jp
outsb
cld
hlt
xchg
in
jecxz
cmp
fdivp
outsl
push
sbb
sti
ss
push
jbe
js
push
repnz
inc
pop
jns
adc
cmpsl
xor
jl
add
shlb
adc
fcompl
orb
pop
notl
inc
lea
add
lret
push
mov
jnp
loop
out
ffree
pop
sub
pop
xor
out
xchg
adc
inc
cmc
test
sti
inc
sub
jb
push
ja
jp
lods
mov
inc
into
sub
jg
xor
sub
int
xchg
fisubrl
jl
jge
fadds
xlat
xor
jmp
rcll
mov
dec
mov
out
hlt
sub
sbb
mov
adc
adcb
fdivl
and
aas
cmp
and
ret
in
cmp
sbb
jns
repnz
cmp
pop
dec
fildll
fiaddl
es
mov
or
jmp
adc
xchg
adc
ficoml
jno
jo
jle
cmp
lds
enter
xchg
pushw
in
test
jne
adcl
jge
and
mov
mov
push
mov
cmp
inc
push
mov
mov
test
sarb
xor
xor
cmp
in
xor
addl
lods
xchg
adc
sbb
std
xor
call
xor
jmp
cli
movsl
jne
cmp
ds
in
mov
divl
and
shll
fiadds
rclb
adc
bound
gs
push
dec
lret
pushf
mov
out
mov
lock
ret
pushf
sub
dec
xor
lcall
stos
cwtl
mov
imul
xchg
jg
lods
das
ss
mov
inc
jns,pt
and
sbb
xlat
mov
leave
arpl
push
sbb
push
jp
xchg
or
xor
and
add
inc
push
or
je
fwait
test
push
and
test
inc
in
xor
inc
dec
and
into
adc
repz
mov
mov
mov
sbb
dec
mov
test
inc
push
rcll
lret
test
pop
add
add
sub
xlat
xor
lods
xchg
inc
mov
lds
test
ds
call
outsl
mov
cmp
mov
ljmp
sub
movsb
mov
faddp
inc
roll
sbb
jmp
lods
sub
addr16
cmc
pop
xor
cmp
hlt
mov
out
add
call
push
sub
cmp
sbb
jg
xlat
add
adc
inc
mov
pop
xlat
and
jecxz
inc
dec
ljmp
mov
sahf
adc
mov
lock
inc
mov
roll
shrl
or
pop
inc
in
pop
xchg
movsb
push
dec
pop
adc
shlb
hlt
pop
cmp
or
popf
ja
pusha
in
or
lcall
test
sbb
jge
hlt
mov
and
xor
ljmp
fbld
les
sub
xchg
negl
xchg
enter
inc
mov
clc
lea
bound
insl
push
and
and
and
fiaddl
inc
out
jge
sbb
push
add
inc
dec
jne
pop
pop
imul
cmp
xchg
es
inc
orb
pop
sub
xlat
and
aaa
popf
pop
xor
dec
xor
and
mov
popa
sti
jae
cmp
ljmp
loope
repz
or
pop
aas
stc
mov
cli
gs
jae
divl
jbe
sar
out
or
xchg
gs
mov
into
xor
inc
fldl
mov
sbb
movsb
pop
or
pop
cmp
shr
fsubrs
pop
lods
push
arpl
mov
fildll
jle
cmc
sbb
ljmp
into
push
and
arpl
arpl
inc
ret
lret
sti
or
dec
xchg
nop
ja
xor
fisttps
movsb
push
je
push
dec
aam
jae
movsb
test
sub
xchg
mov
sub
ja
aaa
imul
pop
or
dec
push
push
mov
leave
lcall
aam
ret
dec
mov
stc
test
sarb
lret
in
cmc
or
mov
add
imul
fistps
mov
jge
outsl
rcrw
pop
jle
and
scas
js
cltd
push
mov
push
test
xor
jns
outsb
out
cli
insb
daa
test
xchg
inc
xlat
jle
stc
xorb
stc
test
cli
sbb
data16
stos
adcb
pop
xor
fsts
adc
xchg
cmp
shl
or
mov
pop
jo
icebp
xor
imul
cmpsl
push
vmovdqu
sarl
sbbb
push
mov
daa
mov
lods
lsl
sahf
ss
sub
adc
fdivrl
outsb
mov
imul
sbb
xchg
cli
mov
mov
and
pop
jno
sbb
mov
scas
mov
inc
mov
push
cld
cmp
xchg
dec
fistpl
jmp
out
pop
mov
push
pop
mov
addr16
fwait
xlat
inc
pop
jle
push
js
mul
rcrb
icebp
mov
fwait
jmp
leave
push
imul
mov
lods
stos
cmp
outsl
mov
addb
ret
je
mov
xor
in
push
mov
fcoml
push
or
loop
pop
pop
imul
adc
in
xor
das
push
add
andb
mov
popa
cmp
nop
cmp
shrb
xor
mov
sbb
sub
or
out
mov
jmp
in
cld
mov
or
or
or
pop
xchg
mov
fld
and
dec
js
out
mov
adc
pop
dec
ret
scas
cmp
pop
ja
cmp
push
and
and
xchg
jmp
inc
jne
pop
add
in
xchg
sbbl
dec
mov
sub
cmpsl
cmp
lcall
push
scas
ret
sbb
dec
cmc
xor
fstpl
jge
cmpsb
push
xchg
push
cltd
daa
mov
mov
pop
lods
popf
xlat
inc
or
sbb
sbbb
and
xlat
int3
mov
push
xchg
push
dec
aam
arpl
and
stos
into
sub
and
dec
add
fildll
mov
jno
fucomp
push
xchg
jl
les
repz
sarl
or
mov
push
insl
cltd
rolb
mov
push
mov
lock
inc
jne
jg
sub
iret
leave
or
xor
adc
jnp
mov
enter
cmp
mov
icebp
movd
insl
jo
xlat
fs
bnd
mov
and
test
mov
movsb
imul
or
jle
scas
add
xchg
fwait
add
call
repz
inc
gs
xchg
dec
adc
je
sbb
jecxz
loope
mov
cwtl
sub
mov
ret
nop
push
pop
pop
dec
xchg
push
xchg
xchg
pop
adcl
jl
jmp
rol
cmp
mov
test
adc
and
mov
in
sarl
icebp
cmp
push
loop
test
pop
pop
clc
pop
push
push
mov
adcb
inc
mov
push
inc
dec
jecxz
int
ret
jmp
leave
jnp
aaa
jne
mov
je
inc
mov
mov
pop
inc
insl
fcompl
cmp
fcoml
cs
outsb
mov
pop
and
pop
and
pop
jbe
sbb
xchg
sub
lcall
jb
and
stc
push
add
sbb
imul
or
or
cmp
dec
mov
push
dec
bound
or
dec
cmp
call
sbb
mov
cmp
scas
inc
ss
pop
inc
repz
lahf
inc
stos
loop
push
out
jne
mov
fisubl
inc
iret
pop
mov
push
leave
rol
xor
mov
enter
ds
popf
mov
les
xchg
inc
inc
mov
stos
xchg
push
dec
adc
arpl
or
repz
test
cld
inc
or
icebp
insb
jle
jle
daa
not
add
sbb
mov
mov
dec
in
or
nop
pop
jge
fisttpl
jns
clc
xchg
dec
test
insl
add
mov
mov
xchg
pusha
test
insl
cmpsl
cs
pop
jl
xchg
push
inc
adc
neg
das
xchg
shlb
pop
iret
stos
or
ret
push
adc
dec
or
push
cmp
loop
aam
sub
out
jne
fsubl
repz
sysexit
push
insl
pop
add
pop
popa
mov
test
jg
mov
test
out
out
mov
icebp
jle
pop
in
and
sti
scas
ret
sub
mov
ja
les
outsb
in
fnstenv
jno
sbb
push
out
mov
int
push
inc
jo
cltd
fcoml
dec
mov
aad
test
cmp
cmp
call
jo
xor
out
adc
or
testb
mov
inc
dec
outsl
lock
adc
int
div
outsb
adc
je
dec
cmpsl
xlat
add
hlt
imul
mov
mov
mov
xchg
ja
in
faddl
jbe
add
es
roll
cmp
iret
enter
lock
das
mov
imul
insl
jecxz
pushf
popl
fisubrs
xchg
rorl
loopne
add
ss
jns
mov
fucomip
mov
fldenv
data16
leave
and
outsb
inc
fnstsw
or
sub
cmp
loopne
inc
cmp
jl
cmp
ss
or
jb
pop
rorb
lods
mov
pxor
clc
jnp
sbb
sbb
sbb
inc
jmp
lcall
inc
cli
ss
sti
xor
xchg
test
jbe
nop
pusha
xchg
stc
hlt
jge
pop
cli
aam
sub
js
inc
test
xchg
dec
mov
pop
add
xor
cmpsl
sub
jp
cmpl
ret
mov
sub
popa
pop
fildl
ljmp
repz
cli
ror
mov
mov
jg
sub
arpl
inc
pop
xor
inc
mov
lods
dec
xchg
dec
hlt
cmp
mov
jbe
xor
or
sbbl
outsl
leave
repnz
int3
int
lods
mov
arpl
mov
mov
cmp
into
lea
xchg
pop
loop
mov
arpl
dec
push
xchg
mov
pop
cmpsb
jp
in
dec
inc
stos
jmp
aaa
or
das
and
mov
jecxz
sarl
sub
insb
imul
mov
mov
daa
es
jne
orl
or
xlat
sbb
push
call
pop
xchg
jg
das
jg
scas
movsb
std
xchg
jnp
dec
add
das
dec
lahf
ret
leave
stos
out
test
jge
pop
push
push
mov
gs
gs
inc
push
cmp
dec
lea
lods
test
dec
mov
xor
stc
movsl
sbb
dec
mov
and
in
cmp
popa
mov
xor
lahf
push
leave
xchg
push
dec
hlt
cmp
mov
movsb
rcll
imul
mov
mov
in
cmp
loope
mov
add
push
mov
xchg
push
shlb
add
insl
jne
in
push
mov
mov
popf
adc
cli
cld
fisttps
sbb
jmp
mov
and
inc
cmpsl
je,pt
mov
orl
cmpsb
cmp
call
cmpsb
and
ds
js
dec
mov
in
sub
xlat
lods
mov
xchg
or
cld
xchg
pop
xor
dec
sbb
popf
jp
cld
xor
mov
push
jo
sarb
jnp
in
mov
fiaddl
out
pop
aas
cli
in
xchg
jnp
dec
popf
iret
jmp
jge
pop
or
inc
pop
outsl
jl
arpl
fistl
scas
andl
leave
mov
xor
es
sbb
into
movsb
or
ret
inc
enter
mov
test
pop
stos
sti
lods
lret
xor
xor
jno
inc
sbb
mov
popf
fcompl
test
sub
mov
sub
add
inc
daa
mov
cmpsb
loope
loopne
jno
adc
adc
loope
cwtl
inc
std
cmp
cmpsl
ror
out
jg
pushf
xchg
dec
in
lods
fsubrp
loope
movsl
lret
cmp
cmc
movsb
dec
cmp
and
aas
add
sbb
or
and
mov
pop
lret
lock
push
mov
loope
inc
jnp
jbe
ret
inc
push
dec
mov
lret
aam
add
push
add
cmp
push
dec
movsl
or
mov
rcl
hlt
out
inc
das
in
rcll
pop
jmp
js
inc
je
jns
aad
inc
ds
shll
int3
mov
push
pop
pop
xor
fisubs
pop
lods
je
dec
xchg
lods
jp
mov
mov
addr16
mov
xchg
fcmovbe
xchg
movsb
out
push
push
out
sub
imul
and
mov
and
scas
push
or
jnp
sub
add
incb
sbb
in
mov
iret
pushf
mov
sti
xor
xor
sahf
and
fwait
push
and
push
imul
movl
test
and
adcb
mov
addb
ja
jbe
out
es
shrb
add
test
push
pop
adc
popa
incl
pushf
aaa
fs
jns
sbb
mov
push
icebp
or
sbb
jmp
xor
stos
and
shrb
push
dec
mov
xor
pop
dec
iret
lods
out
push
sarl
or
dec
sbb
add
lods
xor
jp
cmc
pop
clc
add
outsb
rolb
std
in
inc
add
mov
and
ret
out
mov
fcompl
rcl
cmp
mov
push
jl
or
dec
sbb
dec
push
mov
and
xchg
sbb
cmp
sbb
fdivrs
sub
sbb
mov
into
decb
bound
push
jbe
dec
aaa
subb
cmp
daa
addr16
ja
xor
jg
xor
aam
insl
fimull
mov
fwait
dec
stos
pop
ficoml
mov
fs
pop
cmp
pushf
push
shlb
int
test
daa
mov
jmp
pusha
push
nop
push
out
outsl
aam
mov
mov
xor
and
fnstenv
mov
mov
cmp
adc
aas
push
imull
push
sbb
outsb
cs
lods
adc
mov
inc
mov
insl
add
aas
in
lods
push
sbb
idiv
aad
xchg
int3
mov
dec
scas
push
fadds
mov
aas
cmp
cwtl
lds
into
push
mov
sub
ja
inc
xchg
std
fsubs
sbb
arpl
pop
mov
xorb
mulb
dec
xor
mov
xor
std
aam
icebp
mov
cmc
sbb
lahf
data16
int3
jecxz
and
int3
jns
sbb
mov
mov
out
fisubrs
and
add
xor
loop
sub
mov
scas
mov
or
fldenv
jl
je
xor
ret
lret
mov
mov
shll
sarb
cmpsb
rcr
popa
in
jne
in
pop
aas
cmp
or
jno
xchg
ljmp
push
cmp
sbb
mov
xchg
pop
into
jg
add
mov
sbb
mov
add
push
call
add
data16
js
test
xlat
xor
mov
jno
dec
idivl
test
inc
mov
andb
movsl
mov
cmp
pop
adc
sti
lret
jno
and
repnz
arpl
mov
outsl
inc
int3
fdivr
cli
pop
cmpsl
sub
xor
mov
ficompl
sbbb
fcoml
pop
jl
sahf
flds
push
mov
popf
lret
subb
and
xchg
mov
and
jnp
fwait
gs
mov
rclb
cmp
out
inc
cmc
mov
enter
gs
xor
and
inc
jo
popl
mov
adcl
addr16
or
add
push
pop
outsb
fcoml
sbb
lcall
test
or
jb
in
ret
ljmp
test
pop
into
lret
ljmp
mov
lock
nop
in
mov
stos
mov
jb
mov
pop
push
sahf
iret
sub
leave
rclb
mov
in
push
adc
iret
adc
rcll
int3
iret
jo
add
lock
and
pop
flds
pusha
jmp
idiv
push
sbb
jbe
icebp
xlat
sbb
sub
pop
or
out
xorb
xor
iret
mov
jo
loope
jmp
pop
das
mov
fs
mov
pop
sub
int3
adc
loop
rolb
inc
fs
ja
cmp
ja
pop
jp
push
movsb
push
or
repz
bnd
in
or
movsb
cld
daa
pop
cmp
mov
push
imul
inc
mov
xchg
mov
aaa
jae
cmpsb
insb
xor
xchg
mov
aaa
mov
or
clc
adc
shrl
cmp
jnp
shrb
mov
push
sbb
imul
cwtl
push
cs
xchg
cmp
cmp
push
cli
push
push
xor
mov
xchg
jecxz
xchg
or
dec
inc
add
or
push
icebp
frstor
sti
in
aad
mov
mov
jl
push
inc
mov
push
sbb
cmp
daa
ret
xlat
mov
loope
add
out
mov
sub
jb
xchg
fsubrl
jae
popa
push
xchg
fnstcw
pop
inc
lea
pop
mov
xor
xchg
popa
sub
dec
addl
testb
jb
lods
outsb
in
cmp
rorb
out
fsts
pop
hlt
out
add
sub
mov
popf
cmovp
mov
or
cmp
repnz
or
jecxz
cmp
stos
inc
or
mov
add
xchg
push
and
cmp
loop
call
dec
cmc
adc
loopne
jg
mov
push
pop
cmp
xor
and
push
push
mov
adc
or
jl
jnp
cmpl
sub
rorb
and
adc
pop
out
arpl
jnp
jae
out
addl
mov
and
lret
loope
shlb
or
push
pop
cmpsb
loopne
scas
jmp
sub
in
sarl
and
mov
lahf
adc
xchg
aas
xchg
lret
negl
lahf
xor
or
mov
test
lret
and
fldl
sbb
mov
inc
inc
xor
icebp
cmc
xchg
mov
jle
adc
icebp
test
je
iret
sbb
push
pop
pop
out
insl
xchg
movsb
cmp
cltd
je
addr16
les
pop
out
and
repz
cli
xor
cmp
mov
in
cs
cltd
add
leave
ficoms
pop
sti
daa
jno
mov
ret
push
adc
sbb
fld1
dec
test
incb
cld
or
xor
xor
cmc
out
in
insl
pop
add
call
mov
div
xchg
mov
rorb
mov
loopne
aam
mov
cmpsl
popf
mov
xor
out
mov
movsb
icebp
or
lods
enter
add
adc
xor
dec
addb
and
lea
pop
out
pop
xor
test
lret
repz
sub
aad
push
push
add
push
aam
adc
jge
cmp
jecxz
cmp
xor
jge
test
imul
scas
fcoms
jmp
cmp
inc
xchg
and
lret
xchg
mov
dec
inc
inc
cmp
andb
xor
call
cltd
imul
stos
push
sbb
or
dec
mov
stos
xlat
or
inc
test
sub
or
adc
in
cmpsl
rorl
sbb
fcmove
dec
pop
clc
gs
sbb
push
shrb
push
and
add
enter
out
loop
xchg
pusha
fdivrl
imul
test
jle
and
ficompl
rorb
adc
fs
jno
push
mov
cmp
jno
pop
jecxz
testl
lock
mov
inc
lock
push
iret
mov
push
mov
inc
jno
icebp
test
and
push
xchg
lods
mov
pop
jmp
lock
mov
movsl
dec
sbb
mov
and
aad
push
cwtl
add
and
mov
ret
adc
mov
scas
push
dec
xchg
inc
and
mov
dec
ds
gs
test
std
aad
jno
imul
pop
mov
rcl
rcll
jmp
mov
incl
push
test
lea
sbb
jle
mov
lock
insl
hlt
jmp
pop
lods
nop
mov
push
fwait
repz
frstor
repz
out
cltd
xchg
into
mov
pop
jbe
not
push
xor
jns
aad
mov
movsb
mov
ret
mov
bound
in
add
jl
mov
or
test
lods
fbld
fwait
adc
ret
cltd
add
icebp
pop
inc
pop
int3
adc
mov
lods
or
dec
je
push
and
pop
sbb
lcall
sahf
loop
push
mov
or
jge
out
sbb
subl
incb
mov
mov
cli
jmp
outsl
dec
mov
aaa
xchg
push
sub
mov
pop
sarl
shr
rclb
dec
gs
mov
push
aad
nop
mov
mov
rorb
push
xor
and
pop
and
jns
sbb
mov
lds
mov
outsb
outsl
xchg
jmp
stc
mov
jb
xchg
dec
pop
mov
addr16
ret
stos
fistpll
push
dec
add
push
std
mov
or
mov
adc
pop
jl
aam
popf
push
sbb
cmpsb
push
cli
rorb
xchg
inc
push
lock
jmp
add
xor
pop
pop
loope
lcall
pop
mov
fildll
popf
add
je
scas
sbb
js
insb
push
push
ret
lods
pushf
in
mov
mov
fdivrl
or
imul
out
jg
cmp
dec
push
sbbb
push
lods
cmp
leave
cmp
call
xchg
into
xchg
je
add
icebp
cwtl
subb
ret
movsb
outsl
cwtl
cli
jle
in
je
or
xor
xor
cmp
mov
out
dec
add
add
inc
adc
sbb
pop
int3
adc
mov
xorl
es
push
hlt
negl
cmc
jbe
data16
cmp
adc
ds
push
or
push
add
pop
push
jne
iret
mov
xchg
movsl
loope
adc
insl
ja
fists
mov
aaa
mov
mov
bnd
cmp
adc
cmpsb
fisttpll
lods
loope
xchg
inc
call
outsb
outsb
sbb
jge
cwtl
and
out
fwait
pushf
cltd
adc
scas
jne
jmp
enter
fstps
rcr
mov
or
adc
mov
mov
mov
pop
arpl
cmp
inc
lock
xchg
fisttpll
cmp
popf
outsl
push
out
or
inc
inc
jbe
push
jmp
inc
add
push
pcmpeqd
fcoms
outsl
xlat
bswap
xlat
inc
and
ljmp
xchg
and
lahf
in
outsl
das
inc
sahf
pushl
dec
adc
jo
push
pop
lock
leave
fsubl
mov
mov
rorb
push
aas
loope
aam
mov
xor
cmc
lcall
call
adc
movsb
sub
mov
adc
div
hlt
inc
jl
sub
pop
loop
in
hlt
push
lea
jl
ds
in
ja
shll
inc
roll
and
and
cmp
insl
shrl
xor
hlt
cs
adc
mov
xchg
ret
leave
mov
out
jbe
cld
sbb
adc
cmp
cmp
jbe
and
ja
cmp
sbb
push
jnp
outsb
pusha
mov
out
jbe
adc
jle
inc
test
aas
mov
mov
cmp
sti
es
dec
jg
xchg
shr
test
jl
or
and
jae
movsb
mov
dec
int3
fimuls
add
push
sub
orb
lea
js
cmp
sbb
cmp
mov
and
adc
js
xchg
xchg
das
jp
dec
notb
pop
shl
or
push
adc
orl
aaa
jo
cltd
std
inc
and
dec
xor
dec
adc
mov
push
insl
mov
aas
hlt
jl
xor
sbb
into
dec
sbb
pop
xchg
mov
cmpsl
mov
pop
shlb
addr16
popa
icebp
sub
pusha
xchg
jo
dec
mov
push
adc
lock
mov
scas
inc
sbb
xchg
mov
int3
mov
cmp
es
in
jne
dec
data16
ficomps
sti
daa
xor
adc
stc
daa
shlb
fimull
imull
adc
mov
mov
or
push
cmpsb
popf
inc
subb
dec
std
inc
stc
xchg
arpl
and
arpl
mov
add
aam
out
in
mov
sbb
xchg
mov
das
lret
pminub
or
rolb
lret
aam
lods
into
xorl
add
ds
dec
sbb
movsl
test
push
mov
inc
mov
or
inc
fsubl
push
mov
adc
sub
push
push
add
sub
add
inc
or
imul
js
add
insb
std
loopne
adc
fdivl
stos
lahf
and
test
lods
push
repnz
repnz
mov
jp
pop
dec
je
pop
aad
push
xchg
inc
cmpsl
adc
data16
sbb
jbe
xchg
and
int
aad
out
dec
jp
stos
inc
pusha
push
inc
dec
mov
outsl
push
int
push
jmp
fdivrs
jb
lods
xor
ss
ss
cltd
xor
scas
mov
push
xor
outsb
jp
xor
pop
pop
mov
mov
sbb
or
pusha
ficompl
outsb
clc
mov
insl
mov
push
aas
mov
aas
ret
push
mov
dec
vpcmpgtd
rep
fisubrs
repnz
adc
jp
shlb
es
mov
dec
inc
dec
dec
mov
jb
push
pop
and
iret
cmp
sub
add
pop
scas
fcmovnbe
xchg
mov
test
int
popa
shrl
mov
jl
imul
arpl
mov
fmuls
outsl
jbe
xchg
imul
adc
enter
out
pop
push
es
adc
jne
movsl
cmp
loope
loopne
jge
sub
pop
sbbl
push
je
cmpsl
loop
leave
push
add
jmp
imul
xor
sub
mov
std
xchg
jae
jbe
sub
pop
or
iret
outsl
aad
cmp
mov
adc
inc
cli
or
xchg
jmp
sbbl
pushf
loop
add
xchg
fdivrs
lret
mov
rcll
pop
imul
imul
js
fsub
push
out
clc
xchg
lahf
stc
or
dec
jns
in
jb
neg
dec
icebp
inc
in
pushf
and
fstpl
pop
push
ljmp
mov
inc
in
cmp
mov
xor
cmpsb
aas
popa
pop
shrb
mov
pop
pop
cmpb
and
pop
adc
push
clc
fidivrl
daa
lds
or
cli
mov
loope
test
and
fwait
pop
mov
pop
xor
jp
gs
xchg
mov
xor
adcl
cmp
js
push
repz
dec
pop
jecxz
push
cltd
movsl
xchg
js
fwait
out
cli
mov
mov
and
push
mov
fdivr
adc
repz
in
fsubs
je
sub
sbb
xchg
das
and
test
into
mov
jbe
mov
or
aaa
daa
sub
sbb
xlat
into
fstl
cmp
or
cmp
pop
xchg
push
cltd
je
sbb
out
sbb
cmc
fs
imul
adc
es
adc
dec
dec
sbb
insl
test
dec
mov
nop
sub
lods
mov
dec
jle
pop
lea
dec
sar
ljmp
stos
in
daa
sar
shlb
and
mov
push
bound
and
popf
xchg
test
adcb
pop
fdivrl
jae
insb
cmp
in
insb
jge
imul
xchg
lock
mov
and
scas
gs
fists
ja
pop
lret
stos
js
add
icebp
mov
cld
xchg
repnz
imul
mov
xchg
adc
push
bound
sbb
and
add
jnp
push
xor
repnz
shl
aas
sub
addb
sbb
and
js
popa
and
mov
sub
xchg
sbb
inc
mov
lret
xor
jg
sbb
aaa
fidivl
push
fprem
mov
aaa
call
push
pop
scas
arpl
cltd
push
cmp
rcll
fmuls
inc
xchg
push
xlat
mov
fistpl
fmul
pop
mov
pop
shlb
inc
in
into
jl
andl
push
mov
jle
pop
data16
push
iret
stc
div
leave
jl
outsl
test
rcll
rclb
fnstcw
addr16
push
xor
pop
imul
pusha
iret
or
jg
or
mov
and
push
push
shll
mov
mov
and
mov
into
ds
push
xchg
push
in
sbb
xchg
add
fs
cmpb
mov
hlt
jae
aad
test
ja
stc
cld
cmp
adc
lret
adc
xchg
lds
jmp
jmp
int
notl
dec
testl
xor
or
mov
imull
cmp
push
mov
roll
sbb
jb
xchg
stos
out
scas
jp
cmpsb
fld1
push
jne
pop
xchg
lea
adc
imul
cld
xlat
dec
mov
cmp
outsl
dec
pushf
push
and
jl
leave
inc
and
jg
cmpsl
rcr
mov
sbb
inc
sbb
push
lods
cmpsb
fdivrs
jno
inc
movsb
shr
int3
cmpsb
adc
push
jnp
out
xor
sub
inc
cmp
cs
pop
xor
and
imul
cld
in
sbb
cltd
cmp
in
cltd
orb
cmc
pop
jp
mov
sbb
cmpsb
fwait
xchg
push
xor
lcall
mov
and
mov
jmp
push
or
mov
adc
pop
imul
icebp
ficoml
sub
aaa
and
nop
inc
sub
add
out
jl
sarl
pop
xor
jo
sbb
lods
adc
loope
orl
sti
imul
gs
ret
add
inc
jne
in
sub
lret
push
inc
test
pusha
adc
xchg
mov
sub
dec
xor
hlt
sarb
insl
adc
sbb
out
add
movsb
inc
lahf
or
pop
adc
fcmovbe
add
and
addr16
mov
xchg
movsb
rclb
lods
ficoms
inc
addr16
dec
push
daa
rcrb
lret
mov
pop
pop
loopne
sbb
inc
mov
aam
testb
dec
fwait
mov
inc
add
sub
dec
pop
or
xlat
fcmovbe
outsb
xor
lahf
insl
loope
sbb
add
test
xchg
pop
jp
pop
adc
inc
push
sub
fadds
jne
imul
jle
or
mov
lahf
mov
adc
cld
fdivrs
pop
mov
mov
sbb
push
mov
hlt
lcall
xor
inc
daa
daa
add
mov
out
pop
popf
ffreep
pop
stos
je
mov
enter
mov
pusha
leave
pop
jmp
loope
push
xor
clc
xor
enter
sub
cmp
pop
push
lods
cwtl
push
dec
lods
cmc
xchg
test
ret
pop
loopne
or
insb
shlb
push
mov
inc
inc
mov
add
mov
pusha
imul
pop
arpl
add
jp
jp
ret
into
ret
cmp
inc
aam
sbb
std
icebp
push
cmp
mov
imulb
icebp
inc
mov
les
mov
stos
lods
and
sub
lds
push
jle
iret
add
dec
dec
lret
dec
in
rolb
addr16
pusha
aad
stc
fucomi
cmpsl
lea
mov
out
decl
adc
push
es
push
xchg
je
xorl
cmp
sarl
imul
daa
inc
cs
or
pop
fisubl
lods
movsl
cli
scas
push
push
addr16
pop
cmpsb
rcr
ljmp
sti
xor
flds
sub
mov
mov
inc
fcos
inc
pop
jecxz
lret
jno
mov
addr16
mov
pop
xchg
mov
push
xor
xchg
or
int3
push
mov
jg
aad
aaa
cmp
in
hlt
rol
cmp
pop
loopne
adc
jne
dec
push
cmp
arpl
cli
inc
xchg
repz
jg
xorb
cwtl
jp
inc
mov
push
std
in
xor
scas
mov
cli
dec
mov
jge
add
sbb
addr16
and
or
sbb
xchg
jae
inc
or
fs
xor
inc
inc
jnp
push
jae
xchg
mov
sti
inc
pop
adcb
jnp
cmpl
mov
cmp
movsb
dec
sbb
test
cmpsl
and
in
pop
in
pop
jnp
sarb
icebp
sub
and
fisubs
xchg
inc
subb
cmp
jmp
mov
mov
xor
inc
mov
add
cmp
aam
jl
or
shl
je
out
add
test
push
push
cs
lods
adc
mov
dec
call
repnz
jl
aam
and
test
mov
mov
sahf
jne
jmp
jae
test
call
cmp
shlb
add
pushf
insb
sub
es
mov
fcoms
test
fcmovu
bound
dec
sub
dec
sbb
lret
adc
or
aaa
es
movsl
cmc
stc
clc
aas
dec
sbb
xchg
sbb
inc
test
hlt
int3
inc
ss
inc
out
leave
sbb
and
cmpb
mov
push
inc
mov
jl
js
mov
pop
into
lods
dec
xchg
lods
lcall
lret
inc
sub
addr16
add
dec
inc
xor
fnstcw
lds
lods
pop
xor
in
test
pop
jae
clc
leave
mov
out
push
xchg
and
mov
cmc
mov
sub
cmp
add
testl
lea
cmpsb
inc
mov
insb
addl
fnsave
mov
sarb
mov
sub
cmp
pop
mov
cli
sub
in
jmp
inc
mov
ret
test
cli
into
adc
jmp
or
sbb
cltd
clc
shlb
rcl
sbb
cmp
flds
sub
shlb
lods
into
pop
inc
cmp
sub
enter
mov
in
sbb
pop
xchg
dec
cmc
mov
stos
scas
xchg
push
jle
adc
repz
mov
fnstenv
fucom
sbb
pop
test
xor
inc
pop
mov
cli
adc
push
decl
pushf
stos
mov
jge
cmp
and
lods
shll
pusha
std
jle
rcrl
cltd
inc
das
lods
into
bnd
outsl
cltd
inc
test
jg
fldt
jo
sar
call
adc
subl
movsb
push
popf
sbb
pop
hlt
dec
scas
xchg
aad
mov
mov
push
push
lahf
add
aad
addl
adc
test
lret
mov
insl
pop
stos
xchg
xchg
dec
mov
test
add
repz
pop
cmpsb
dec
ret
stos
nop
aam
in
test
hlt
outsl
stos
test
or
test
bound
dec
scas
nop
xchg
jl
cmc
push
push
inc
cmp
int3
mov
out
dec
push
popa
mov
mov
xlat
lahf
pop
pop
adc
sbb
mov
pop
mov
mov
lods
add
movsl
mov
and
fs
jnp
imull
dec
popa
daa
or
int
and
rol
bound
or
loopne
leave
add
mov
or
jns
cs
adc
cltd
xlat
xchg
jmp
into
and
adc
out
aad
imul
movb
xor
stc
rcl
mov
mov
inc
push
mov
insb
arpl
loopne
sub
mov
mov
xchg
xor
jo
cmp
jl
mov
out
jmp
fsubl
call
cs
loope,pt
push
ret
movsl
jb
mov
sub
hlt
sbb
mov
pushf
cmp
inc
and
or
sbb
js
add
jg
data16
sub
or
mov
std
add
cs
mov
nop
mov
and
sub
sbb
sbb
aam
ss
pop
outsb
rol
imul
xor
push
movsl
ljmp
push
cs
cmpsb
rol
sbb
in
sahf
adc
in
sub
in
pushf
leave
gs
loop
inc
sbb
mov
jb
std
sbb
sbb
lret
shr
mov
insb
mov
dec
inc
xchg
mov
cmp
inc
xor
or
push
adc
mov
adc
aas
mov
mov
or
pop
add
xchg
nop
clc
vmread
sbb
int3
add
in
pop
xor
jno
out
xchg
mov
inc
cli
add
mov
lea
jae
mov
movsl
fidivrl
xchg
adc
mov
or
or
sahf
arpl
arpl
fisttps
frstor
cmpsb
sbb
dec
sahf
in
fs
rcrl
orb
loope
pushf
dec
xchg
scas
xchg
or
cmc
loope
ret
lds
clc
call
fwait
movsb
cmpl
cmp
insb
mov
das
dec
pop
push
movsl
push
xor
adc
or
or
stos
xchg
repz
mov
xor
inc
aaa
mul
xchg
push
jbe
dec
dec
fistpl
aas
out
sahf
adc
jnp
iret
lahf
lcall
mov
iret
adc
xchg
out
jge
ja
in
popf
repz
cld
jge
stc
movsb
shlb
aam
pop
cmp
movsl
cld
dec
cmp
cmpb
inc
popl
jmp
cltd
mov
jle
jnp
xchg
jmp
push
inc
dec
add
xchg
mov
pop
xchg
js
repnz
xor
push
mov
mov
mov
jmp
push
in
movsl
push
out
shll
ja
fiaddl
lods
xchg
popf
gs
cltd
test
fdivp
inc
jge
filds
adc
jge
repz
int3
jp
push
xchg
inc
pop
sub
mov
adc
cmp
xchg
aaa
pop
cwtl
push
sti
lods
xchg
out
mov
cmpsb
cmp
mov
xchg
dec
gs
ror
mov
xchg
add
inc
scas
out
inc
daa
sub
movsb
lcall
fldenv
lods
lds
mov
fadds
sub
jo
jp
fadd
mov
dec
bound
das
and
arpl
dec
sbb
push
shr
dec
adc
push
jp
dec
imull
xchg
pop
dec
jge
addl
pop
imul
dec
mov
inc
cli
rcrb
lcall
cwtl
and
sbbl
jno
pop
mov
cli
and
dec
popa
add
call
adc
in
adc
push
fdivl
dec
hlt
lret
adcb
adc
inc
push
cmp
pop
iret
mov
inc
or
movsl
loopne
fcoml
fstpl
les
out
push
sbb
out
cld
dec
fwait
vxorpd
lret
cli
cmpsl
data16
pop
popl
inc
adc
adc
mov
ljmp
push
insb
ja
in
in
pushf
jl
clc
gs
xchg
movsl
dec
mov
fsubrs
dec
out
daa
pop
dec
xchg
loop
cwtl
sbb
mov
cwtl
cltd
lcall
repz
into
jbe
js
lock
jle
xor
loop
xor
pop
test
dec
inc
inc
dec
adc
aaa
ss
pop
adc
adc
out
cwtl
les
cmp
test
push
mov
and
adc
xchg
fmuls
mov
sub
popa
dec
lds
xlat
sbb
fisubrl
in
daa
dec
inc
into
inc
fld
js
xor
cmc
xor
andb
cmpsb
mov
ja
jl
mov
mov
xchg
mov
pop
ja
or
jne
fdivs
inc
xor
enter
out
jae
jmp
cmp
sarb
mov
add
ret
cld
inc
in
push
sub
inc
daa
in
and
xchg
jno
hlt
cmovl
subl
push
fbstp
jle
fcomi
add
xchg
test
push
xchg
outsb
gs
stos
cmpsl
out
sub
mov
mov
leave
jne
push
jae
ret
jo
xchg
popl
adc
repnz
push
aas
ds
and
movsb
cmpsb
clc
jge
sbb
sbb
testb
adcl
arpl
add
icebp
shlb
loop
ficoml
or
and
sub
mov
movsb
rorl
div
or
imul
and
pushf
pop
xchg
cmp
jle
lds
lcall
mov
insb
jg
pop
and
jp
arpl
adcl
call
rcl
xchg
xor
add
adc
xchg
loope
and
xor
adc
jb
out
or
push
cld
push
setns
xchg
xchg
pop
orl
fidivs
ret
pop
aas
and
pop
mov
mov
pop
mov
or
popa
loop
xchg
test
lret
mov
dec
ds
in
call
sbbb
lock
fcomps
les
and
and
cmp
or
and
xchg
fnsave
dec
jge
mov
aad
inc
sub
jp
inc
das
mov
mov
test
push
fs
inc
add
adc
push
add
xchg
push
stc
imul
insl
and
in
xchg
lea
lods
inc
lcall
imulb
notl
mov
pushf
mov
enter
int3
shrl
jl
mov
xor
mov
inc
or
adc
adc
mov
pop
sahf
fdivrs
pushf
aas
xchg
sarl
outsl
mov
divb
xchg
add
pop
arpl
iret
xor
pop
inc
not
cltd
mov
adc
inc
push
testl
enter
sub
repz
jne
push
addb
sub
cmpsb
sub
test
xor
stos
pop
stc
mov
int3
fisubs
jns
pop
stos
xchg
mov
jmp
add
xor
jae
ja
xchg
mov
mov
jmp
outsl
dec
test
mov
int3
xchg
add
rcrl
xor
pop
out
add
fistpl
add
daa
fs
gs
push
popa
jno
pop
mov
xchg
xchg
popf
push
daa
add
push
push
jg
out
in
mov
sbb
push
sbb
aaa
call
clc
ret
scas
nop
fisttps
xor
jnp
ret
in
sub
jmp
inc
std
cwtl
mov
in
imul
mov
ret
rorl
xchg
jno
cmp
test
adc
jl
aam
mov
cmp
popa
sub
or
out
popa
aad
hlt
cld
insl
dec
adc
cmp
sbb
insb
std
cmp
into
ss
push
jbe
movb
mov
and
inc
ds
push
mov
loopne
push
dec
push
insb
lahf
int3
inc
mov
aas
rol
mov
dec
imul
imul
push
lcall
xor
or
sub
adc
outsb
add
adc
lods
fwait
xor
je
es
xchg
mov
xchg
pop
pop
pushf
mov
push
fidivrl
and
add
out
pop
lcall
sub
inc
outsb
outsb
fucom
fiadds
shll
and
push
push
into
jecxz
cmp
in
movsb
mov
sbb
jp,pt
fadds
mov
fdivrl
pop
cli
mov
jo
stc
lret
xchg
clc
imul
push
lret
aam
dec
inc
mov
adc
or
lret
jmp
ret
loopne
sub
ljmp
mov
ds
jecxz
xchg
shll
xchg
pop
mov
mov
int3
shrb
pop
sbb
push
jg
int3
repz
or
call
sbb
dec
sbb
jns
test
enter
mov
lock
imul
in
imul
bound
xchg
xor
fiaddl
iret
and
pop
dec
jae
es
nop
pusha
pusha
mov
fsts
dec
popa
out
or
ljmp
add
shl
imul
mov
lock
mov
int3
sbb
push
enter
les
je
sbb
cld
sbb
pop
or
xor
pop
stos
or
sahf
int
cmp
sarb
rcr
testb
and
add
clc
mov
dec
xchg
mov
xchg
mov
bound
inc
fldt
xchg
pop
jmp
ret
mov
test
fimuls
mov
add
int
xchg
outsl
jge
xchg
pushf
ljmp
jecxz
mov
insl
insb
outsb
mov
inc
cwtl
aam
jnp
dec
sbb
sarb
out
xchg
sub
imul
adc
scas
mov
xchg
out
shll
testb
daa
daa
xlat
fstp
pop
pop
mov
push
mov
inc
ret
nop
xchg
jp
fisubl
xchg
fimull
xchg
stc
push
rcr
push
into
mov
add
rcr
push
and
les
popa
sub
sub
xchg
cmp
movsl
ret
stc
je
adc
and
lock
or
add
push
repz
je
adcl
sbb
xor
and
mov
push
test
cmp
mov
sbb
sbb
cmpsb
call
orl
xor
daa
cmp
or
mov
pop
popf
lahf
in
loopne
fistps
aam
cmp
call
pushf
adc
pop
sbb
mov
fwait
out
or
nop
in
mov
stos
out
xor
cmp
mov
test
or
pop
stc
loop
xorl
pop
adc
adc
jle
pop
cltd
js
sbb
sub
mov
xor
sbb
fistpl
mov
sub
aas
stos
icebp
jmp
fs
mov
lods
cmp
ljmp
sub
repz
stc
jge
pop
jae
xchg
pop
push
rcrb
loope
mov
arpl
push
roll
das
pop
pushf
jnp
ret
popa
test
pop
adc
inc
mov
fst
mov
mov
inc
out
sbb
ficomps
jbe
push
jb
or
inc
mov
insl
sbb
xchg
push
inc
cwtl
cltd
dec
sub
and
xor
mov
pop
mov
movsb
xor
es
mull
sbb
cmp
test
pop
out
xchg
sbb
lcall
ja
pop
mov
aas
jne
xor
out
or
sbb
push
shl
jmp
xchg
clc
int3
popa
and
adc
fcoml
int
fwait
lea
mov
outsl
mov
fildl
mov
sub
mov
jle
shrl
xchg
sbb
mov
imul
sahf
pushw
jbe
push
cmp
inc
xor
movsb
inc
cmp
lret
inc
adc
cmp
mov
add
decb
out
lods
sbb
jne
mov
pop
nop
inc
mov
and
sub
add
mov
cmp
es
xlat
sbb
insl
jns
mov
pop
push
ss
pop
aaa
sbb
cmp
mov
lahf
cmp
pop
mov
cmp
daa
iret
cli
xchg
add
push
fucomp
pop
inc
xor
movsb
mov
bound
loopne
or
lcall
div
test
fst
mov
xlat
ja
dec
mov
xchg
popa
or
cmpsl
mov
jns
rcrl
aaa
inc
jle
sarb
and
movb
mov
shrl
pushf
add
jp
je
jo
aaa
push
dec
sahf
pop
out
xor
push
andb
and
in
adc
jmp
jne
and
cmp
add
popf
cmp
loope
test
push
cmp
into
pop
mov
loop
lahf
imulb
test
je
data16
push
out
and
insl
adc
cwtl
pusha
mov
fmuls
divb
fisubs
movsl
mov
aam
ja
or
pop
inc
xor
loop
pop
add
insb
and
out
jne
mov
mov
test
lcall
adc
ffreep
pop
test
or
arpl
call
loope
xor
lds
add
int3
arpl
sbb
and
je
and
cmp
es
push
jno
pop
into
hlt
rorl
jp
fistl
cmpsl
rorl
sub
push
mov
jb
jl
xchg
xchg
dec
loope
push
inc
dec
out
cmp
cmc
daa
pop
xchg
xchg
and
push
jo
or
push
cmc
ja
lods
cmpsb
lahf
xor
mov
mov
stc
stos
and
sub
xchg
xor
fisttps
sub
sub
push
xchg
imul
insb
call
inc
sbb
pop
les
insb
in
xchg
cmpsl
stos
dec
pop
mov
sub
mov
mov
les
ja
adc
and
aad
daa
cmp
add
and
lods
int3
mov
repnz
stos
aam
or
adc
cmp
and
sbb
hlt
popa
cmc
call
pusha
xchg
and
lock
cmp
sub
movsl
push
fidivs
sbbb
jne
mov
cmp
clc
test
hlt
mov
xchg
cwtl
push
mov
sbb
fwait
xchg
pop
sub
xchg
stos
push
inc
iret
fbld
into
lea
or
jbe
fcompl
mov
pop
lret
cld
adc
testb
adc
cmp
jge
divb
sub
pop
mov
test
orb
cmp
push
jnp
out
pop
les
push
in
ja
enter
dec
xor
out
inc
popa
lock
mov
rcll
adc
jnp
and
push
sbb
mov
cmc
outsl
in
ja
sbb
call
mov
jnp
xchg
or
dec
add
mov
insl
adc
popa
pop
ret
popa
fiaddl
push
out
inc
lret
test
mov
int
jae
movsb
stc
int3
fcoms
dec
xchg
jg
mov
hlt
movsl
sub
sarb
lods
push
cwtl
mov
mov
repz
daa
push
enter
aas
xchg
dec
push
imulb
loopne
inc
push
aad
pop
aad
sbb
add
out
push
push
push
popf
mov
jae
mov
dec
xchg
cmpsb
arpl
enter
mov
hlt
cltd
and
inc
and
int
push
int3
outsb
movzbl
mov
adc
pop
dec
not
cli
push
hlt
push
lcall
sbb
xor
stc
fsubr
push
dec
dec
cmp
sahf
ret
cwtl
jle
jmp
subl
jae
cs
mov
lock
mov
push
adc
mov
add
popa
adc
xor
dec
test
ficoml
inc
or
lret
sub
test
idivl
cmp
inc
push
push
repnz
or
push
ss
nop
movsl
mov
sbb
ret
arpl
rcl
push
mov
mov
mov
add
les
push
fs
cmpl
enter
mov
into
xchg
cmpsl
adc
popf
push
sub
xor
aad
adc
lods
pop
xor
shrb
sbbb
or
pop
push
jbe
jg
decl
stos
leave
enter
dec
gs
enter
out
stos
iret
shr
bound
and
jns
xchg
std
je
stos
paddb
push
aas
pop
add
lods
jb
jecxz
jmp
fcompl
pushf
xchg
rclb
xchg
aad
repz
call
pop
mov
pop
or
gs
jbe
pop
xchg
jnp
fimuls
insb
lods
xchg
mov
lods
scas
xchg
outsl
pop
aam
xchg
xchg
clc
push
pop
xor
lret
into
sbb
in
cmpsb
add
dec
aas
aam
xchg
das
addr16
fwait
mov
mov
aaa
dec
jo
nop
sub
scas
sbb
scas
jge
out
adcl
and
js
bound
jmp
jbe
dec
daa
in
pop
xor
dec
cmpsl
pop
push
jmp
shlb
mov
pop
sbb
insl
cwtl
stc
add
and
add
jmp
in
ss
sbb
mov
xor
andb
push
pop
jbe
sbb
push
nop
jne
lds
cmpsl
cmp
outsb
jae
cmpb
mov
pop
ss
repnz
sbb
ret
adcl
jnp
cmp
dec
sub
dec
call
push
ret
movsb
std
xchg
aad
call
dec
pop
fimuls
jg
aam
lret
cli
pop
inc
jb
and
mov
mov
fadds
adc
rclb
mov
shl
hlt
inc
mov
cmpsb
mov
loope,pn
xchg
jmp
repnz
add
inc
sub
jo
mov
cmp
ja
sahf
stos
out
mov
pop
adc
lcall
fmulp
cmpsb
and
lods
adc
in
or
es
fucomi
cmp
sti
jle
push
cmp
adc
cmp
fwait
and
push
sub
cmp
psrlq
and
dec
bound
pop
outsl
and
in
in
mov
mov
adc
mov
push
lds
lahf
js
ret
add
and
in
push
shll
lret
sbb
xor
andb
lods
pop
and
inc
cmpsb
in
sbb
js
jle
dec
mov
dec
mov
add
xor
popa
cltd
lret
test
pop
out
xor
into
mov
ficoml
mov
mov
call
dec
xchg
push
cmpsb
jl
into
add
pop
pop
pop
push
mov
dec
push
add
into
test
dec
push
sub
arpl
inc
or
cmp
in
lret
pop
inc
mov
ljmp
pop
pop
addr16
and
dec
test
fstps
xchg
loopne
daa
subb
jmp
add
pop
xchg
ljmp
or
into
xchg
clc
jns
fnstcw
mov
cmp
sbbl
inc
cli
push
inc
lods
push
fstpl
adc
fisubs
outsl
and
cmp
mov
cld
xchg
inc
mov
and
push
test
mov
mov
std
enter
or
push
mov
repz
and
sbb
jge
xor
es
movsb
inc
pop
das
mov
mov
jne
mov
mov
cltd
ljmp
out
test
ficompl
and
adc
jg
pop
roll
jge
jae
stc
add
dec
add
push
jge
jecxz
mov
cli
ds
aas
pop
inc
in
mov
dec
mov
xor
sbb
out
pop
arpl
adc
pop
push
inc
test
xlat
xchg
lcall
in
pop
pop
mov
lods
push
stos
xchg
push
mov
mov
enter
fs
test
mov
out
sti
mov
ds
mov
xor
and
mov
rol
sti
in
mov
scas
add
loopne
loop
lock
ret
icebp
outsl
out
jno
jno
int
and
mov
subb
add
orl
mov
push
sbb
loope
pushf
in
adc
pop
adc
mov
je
xchg
movsl
cmp
sub
leave
dec
divl
jbe
sub
repnz
adcl
loop
dec
jge
pop
xchg
fwait
ss
cmp
popf
jg
and
fildll
cmp
push
cmpsb
add
fs
fisttpl
fidivs
inc
roll
scas
fsubrs
mov
dec
ljmpw
push
jle
fwait
into
pop
inc
cwtl
push
jp
mov
pop
pusha
in
mov
sub
sbb
dec
mov
mov
or
adc
inc
jnp
jbe
pop
outsl
xor
into
push
mov
jo
add
sbb
sub
lds
xor
jns
mov
mov
and
fists
mov
outsl
mov
pop
adc
addl
push
push
jno
sbb
add
lock
insl
mov
test
imull
cwtl
jbe
lret
sbb
or
pop
push
stos
mov
xor
cmp
inc
mov
ja
mov
cmc
jae
inc
xlat
mov
pop
mov
in
aas
mov
push
not
push
xlat
gs
jnp
hlt
add
mov
aad
in
inc
cmpsl
cmp
adc
std
fnsave
add
xor
aam
leave
test
sar
and
mov
ret
push
test
jg
scas
xor
cwtl
push
jg
xlat
movsb
jb
or
cmpsl
repz
dec
mov
and
js
dec
inc
sub
sub
mov
fs
jns
inc
adc
in
ja
dec
in
jne
stos
push
jb
mov
mov
out
fnsave
pop
stos
lock
ret
pop
jo
ret
inc
inc
or
jg
mov
mov
xchg
xor
lret
mov
xor
ss
or
add
push
inc
cmp
pushf
lods
enter
and
push
xchg
sub
hlt
cwtl
insl
das
scas
mov
xchg
pop
mov
cmp
rcl
add
push
loop
push
cmpsb
cltd
and
adc
test
pop
aas
mov
adc
dec
or
pusha
jl
sbb
sub
int
out
fistpll
cli
push
cmp
in
jg
insl
out
mov
mov
pop
or
fsubl
test
mov
pusha
mov
cmp
out
cmpsb
test
das
andb
pop
loope
mov
jno
aas
clc
push
decl
and
push
pop
lret
out
cld
or
movsb
ffree
ja
add
jge
dec
test
push
mov
cmc
push
in
das
scas
out
dec
push
outsl
sbb
mov
mov
cwtl
dec
loope
push
loop
imul
cmp
sarl
ret
pop
cwtl
ds
xchg
xchg
insb
jl
sti
cmp
ret
mov
aas
pop
push
sbb
in
divb
xor
out
cwtl
push
ljmp
fsub
dec
ret
rcrb
xlat
xor
inc
inc
xor
pop
adc
ret
adc
lea
repz
faddl
jns
xchg
mov
lock
das
les
mov
loope
lcall
int3
xor
cmp
in
mov
pop
mov
mov
outsb
or
xlat
cmc
loope
dec
int3
pusha
cld
loopne
lea
and
jnp
xor
and
popf
add
push
adc
mov
or
leave
cmp
mov
or
cmp
mov
rcr
cmpsl
push
mov
lret
xchg
xor
cmc
nop
leave
in
mov
dec
stos
mov
pop
inc
xchg
cmpsl
es
jg
sbb
in
mov
mov
adc
xor
xchg
push
jno
cmp
push
pusha
pop
jmp
mov
shlb
sbb
repnz
and
mov
aad
and
or
inc
outsl
pop
jne
mov
pop
out
xchg
js
pop
scas
mov
and
leave
jg
aas
shr
ljmp
andb
adc
out
mov
aas
pop
leave
push
ss
mov
ja
adc
sbb
xchg
ds
rorl
rolb
xchg
negb
push
fdivr
fiaddl
sub
icebp
fisubl
cmp
xchg
dec
jne,pt
mov
in
test
cmp
push
loope
decl
fwait
pop
xchg
cmp
push
inc
pop
jecxz
cmp
shll
or
into
aas
cltd
fcoms
push
sbb
xor
dec
insl
xchg
das
adc
add
fsubrl
enter
and
xchg
adc
push
pusha
fs
and
out
mov
push
pop
jmp
mov
xchg
ficoms
loopne
dec
adc
into
lcall
dec
pop
gs
je
xchg
push
push
push
into
sub
mov
dec
cmpl
or
cmp
push
movsb
cmp
ret
ja
mov
mov
xchg
mov
add
cmp
dec
lret
and
popf
jg
sub
ds
mov
and
xor
mov
mull
or
jb
pop
and
ret
adc
and
sbb
repnz
pop
and
jbe
popl
mov
pop
adc
cld
mov
push
mov
sub
cmc
lods
sub
push
xchg
cwtl
imul
jns
sbbb
adc
outsb
sbb
pushf
pushf
jns
sar
push
movsb
jle
int3
loope
sub
repnz
adc
mov
pop
mov
fisubs
xchg
xlat
jno
test
in
icebp
ret
mov
repnz
mov
ja
dec
jmp
mov
mov
lahf
mov
std
xor
and
cltd
jno
mov
fwait
jge
sbb
int3
in
ret
dec
mov
jo
push
lea
mov
mov
add
int3
xchg
mov
cmp
jmp
push
int3
fldenv
addr16
test
leave
adc
imul
and
sbb
pop
rcll
inc
pusha
ds
mov
pop
pusha
jns
mov
and
mov
push
sahf
mov
cld
adc
pusha
xchg
push
sahf
fwait
int
mov
jmp
cmp
stos
in
cmp
inc
je
or
mov
or
pop
adc
cld
les
test
xchg
adc
inc
jnp
loop
orb
fsubrp
ja
enter
mov
cmp
mov
jb
fucomip
fsubs
ficomps
cmovnp
jl
hlt
cld
push
push
adc
or
jg
jg
call
dec
cld
cmpsb
inc
inc
imul
fwait
sub
fs
mov
xchg
fiaddl
outsl
pop
xorb
or
popa
push
insb
bound
aad
sti
sbb
movsl
cld
cmc
jge
lcall
call
inc
pushf
push
xchg
lds
testl
xor
jmp
mov
fs
and
xchg
inc
popa
cmc
mov
fs
jle
adc
jno
das
ljmp
xchg
mov
dec
inc
in
dec
mov
xlat
mov
arpl
jno
aad
push
test
mov
out
movsl
ret
push
enter
mov
fcmovbe
pop
cld
lods
pop
scas
pop
icebp
pmaxub
push
cmpsl
dec
xor
jmp
adc
sbb
test
ljmp
dec
adc
cwtl
xchg
or
ja
push
pop
orl
inc
or
sub
jae
jns
adc
mov
mov
leave
mov
push
test
or
pusha
pop
xor
pop
fidivl
fidivl
mov
lahf
xchg
jge
out
popf
aad
cld
cli
xchg
js
ficomps
lods
add
cmpsl
lds
inc
pop
repz
mov
dec
stos
std
or
push
mov
outsb
repnz
jg
scas
int3
divb
bound
scas
jecxz
imul
mov
pop
xor
test
shl
in
out
mov
xor
push
jo
or
lahf
scas
push
aas
insl
adc
rcl
and
arpl
push
xchg
jns
mov
call
bound
or
loope
push
cmp
mov
pop
push
int3
push
dec
mov
pop
push
pop
dec
leave
jne
mov
test
cmp
imul
mov
mov
lods
shll
mov
popf
insb
push
push
int
pusha
jo
stc
arpl
xchg
pop
inc
lret
call
lcall
adc
fwait
jp
pop
add
push
rol
sti
loop
and
adc
xchg
es
pop
xchg
jb
inc
gs
cld
test
sub
sub
in
add
jb
out
fs
sbb
loope
push
pop
scas
cld
fistl
xchg
and
inc
inc
aam
mov
xchg
cli
pop
imul
lea
dec
mov
stos
push
adc
xlat
sbb
aam
mov
and
sub
add
pop
cmp
aas
mov
out
shrl
sbb
enter
xchg
scas
test
xlat
and
ja
aas
mov
or
bound
adc
leave
lds
ror
cmpsb
outsb
stos
ja
dec
push
fcoms
int3
pop
pop
push
movsl
test
fsubrl
pusha
test
loope
xor
adcl
icebp
mov
dec
sub
repnz
pop
sub
in
cmp
pop
ja
shrl
adc
mov
test
cmp
in
or
aas
shlb
jl
out
mov
cmp
xchg
rorl
cmp
mov
orl
pop
insl
fbld
out
xor
sub
dec
mov
pop
inc
fildll
fistpll
fdiv
fldcw
sub
ud1
push
icebp
mov
ja
sti
jbe
nop
adc
add
iret
xchg
les
test
pop
int
cmc
push
fisttps
jae
gs
pop
loop
test
pop
add
aas
fs
enter
imul
pop
mov
inc
mov
xchg
in
pushf
mov
cmp
adc
pop
aam
jmp
aam
cwtl
mov
shl
or
mov
clc
mov
sub
mov
sbb
jnp
fists
sub
xchg
jp
xchg
pop
inc
jg
loop
cmc
mov
fildl
jbe
jae
mov
mov
mov
adc
bound
shlb
jb
int
xchg
add
mov
push
lret
pop
and
and
clc
mov
jb
cmp
pop
cmp
xchg
dec
out
xor
dec
pop
lock
idivl
dec
jae
in
aad
push
jo
fiaddl
aaa
and
notl
imul
ret
iret
outsl
fistpl
testb
imul
push
mov
repnz
mov
std
mov
mov
imul
int
and
inc
shrl
xor
inc
mov
scas
jo
push
aaa
mov
xchg
cmp
add
stc
cld
jnp
mov
inc
iret
push
jmp
shrl
dec
das
mov
outsb
daa
out
flds
fnstsw
cltd
in
adc
xor
lods
mov
push
adc
sarb
fsubr
cli
pusha
cmp
in
repnz
test
movl
jp
loope
in
mov
push
test
enter
test
leave
imul
mov
push
out
or
ljmp
sahf
mov
icebp
jl
stos
push
adc
adc
hlt
xchg
cltd
movsb
xor
jmp
push
mov
jmp
outsb
rorl
push
xchg
and
add
adc
aaa
int3
scas
arpl
add
sbb
jnp
sbb
dec
sbb
test
xorb
mov
mov
sti
sub
mov
or
imul
adcl
jge
jae
jp
cmp
into
push
dec
sahf
or
push
add
insb
in
mov
je
movsb
data16
mov
mov
inc
xrelease
sbb
xor
push
test
push
hlt
cltd
pop
push
inc
push
fcmovnb
pop
in
push
mov
lcall
arpl
and
icebp
inc
inc
cli
cld
or
jecxz
jae
mov
dec
mov
aas
jg
shlb
push
icebp
dec
inc
shll
or
orb
aam
loopne
aaa
pop
or
test
inc
adc
sbb
scas
jl
insl
pop
mov
test
insl
push
aas
test
shl
mov
dec
and
inc
xchg
adc
pop
mov
daa
xchg
xchg
or
aad
mov
push
loopne
pushf
sbb
lods
andl
mov
notb
cmp
in
and
dec
loop
or
and
lds
fs
testl
push
jmp
mov
jge
jle
repz
or
sti
pop
jp
mov
push
xchg
inc
inc
add
push
pop
pusha
push
mov
xchg
mov
lods
dec
repnz
ret
cld
cmp
das
out
mov
notl
inc
aad
test
adc
test
dec
cmp
mov
je
out
xchg
out
mov
inc
push
xor
out
dec
popl
mov
repz
dec
mov
sbb
and
repz
cmp
ja
mov
sbb
mov
inc
xor
jno
jle
push
fs
pushl
lea
and
xchg
dec
int3
jmp
lret
loope
icebp
inc
dec
xor
inc
mov
repz
mov
or
js
cld
jmp
outsb
inc
scas
dec
pop
fwait
mov
into
pusha
cmp
mov
faddl
stc
ret
lcall
xchg
cmp
sub
mov
push
jmp
call
inc
pop
out
call
adc
inc
push
and
sbbl
mov
and
bound
and
xor
mov
add
scas
push
xor
dec
test
fnsave
ret
mov
adc
lock
dec
push
or
inc
push
int
imul
dec
lcall
call
pushf
or
loopne
lcall
stos
icebp
call
jb
jnp
cmp
sbb
dec
ss
jmp
cs
outsb
pop
scas
popa
fiadds
pop
xchg
cmp
hlt
mov
mov
cmp
mov
xchg
inc
push
mov
mov
mov
sbb
jae
pop
and
cld
outsl
pusha
xor
test
loop
movsl
jge
push
inc
adc
xor
insb
andl
sub
mov
adc
fs
jo
sbb
sbb
mov
and
andb
cmpsb
push
mov
mov
sbb
jno
adcb
fadd
cmp
outsb
ja
ret
insl
add
imul
jp
pop
test
or
push
inc
mov
pop
in
daa
jbe
stc
std
xor
mov
jle
mov
pusha
inc
sbb
int3
mov
aas
mov
xor
pop
sbb
stos
lods
sarb
imul
aad
jl
or
fisubrl
adc
mov
divb
aas
mov
pop
xchg
jbe
das
loope
inc
jb
movsl
mov
xchg
pushf
jmp
rcll
pop
imul
addr16
cmp
cmp
push
clc
push
test
sub
jmp
cwtl
jne
mov
lods
in
jae
and
xor
stos
lret
and
push
mov
shrb
rcrl
mov
push
mov
or
shrb
inc
push
push
out
jno
test
outsb
cwtl
loope
jl
iret
lahf
inc
aam
inc
call
mov
push
out
popf
int3
icebp
cmp
and
cwtl
mov
xor
mov
inc
mov
jmp
jae
and
sub
js
and
xlat
pop
and
outsb
outsl
aaa
and
and
sbb
lahf
xchg
pop
cmp
dec
loopne
jae
repnz
xchg
inc
data16
in
and
aad
mov
into
testl
pop
or
insl
dec
mov
cwtl
fs
xor
fwait
pushf
push
inc
add
pop
aad
inc
sbb
inc
call
mov
lds
inc
push
mov
addr16
cmpl
in
pop
dec
push
ja
cmp
sbb
cmpsl
hlt
rorb
push
shr
mov
jp
gs
sbb
loope
mov
or
hlt
addl
punpckhwd
insb
sbb
pop
adc
mov
pop
shr
or
mov
out
nop
inc
pop
ljmp
into
dec
push
movsl
testb
into
lods
dec
or
movsb
out
sub
or
adc
outsb
xchg
loop
xor
cltd
adc
es
daa
shr
mov
mov
not
jl
push
testb
adc
test
push
xchg
push
dec
gs
mov
add
xchg
shrb
push
inc
test
pop
das
idivb
cs
bound
fsqrt
dec
stc
mov
sbb
xlat
dec
mov
leave
and
rorb
xchg
xor
insb
cmp
loop
repz
adc
inc
dec
std
pop
push
pushf
aaa
fwait
imul
dec
fldt
imul
lret
mov
mov
leave
mov
faddl
cmp
cli
pop
adc
push
dec
xchg
je
sti
xchg
sub
adc
repnz
sub
push
xor
pop
xor
ljmp
mov
jle
add
sub
inc
pop
xchg
inc
mov
enter
aaa
fwait
dec
push
pop
add
mov
rorl
pop
and
cmp
xor
mov
pop
push
int
loopne
cmp
and
pop
add
mov
or
mov
mov
test
pop
das
fucomi
sub
pop
sbb
int
loope
add
rcrb
xchg
fildl
xchg
adc
popf
dec
in
mov
fsubrl
pop
add
dec
rclb
pop
mov
insb
test
xchg
xchg
rcrl
lods
xor
mov
sub
ja
lods
adc
adc
cmpsb
sub
fs
popa
mov
push
jns
inc
cld
adcb
pop
jno
cmp
inc
jmp
or
dec
pop
mov
add
lods
xchg
bound
lds
push
pop
adc
xchg
and
call
jne
fstpl
stos
xor
idivb
aas
enter
mov
pop
jle
les
and
lret
pop
mov
test
mov
xorb
jbe
fs
mov
loope
movsl
pop
mov
loopne
clc
jmp
dec
cli
out
shll
inc
icebp
xchg
int3
inc
insb
sub
stos
push
mov
sbb
movsl
xchg
fidivrl
aas
xor
cmp
clc
sbb
adc
and
bndstx
jle
lds
add
jg
push
stos
idivb
mov
test
jmp
cld
js
enter
add
xchg
pop
sbb
jb
pop
sbbb
jbe
jne
sub
fs
movsl
cmc
in
sti
fldt
xorb
fiadds
out
clc
cmp
stos
test
or
stc
and
fsubr
rolb
jno
sub
jnp
and
ficomps
out
aam
pop
jp
pop
hlt
xor
dec
mov
iret
mov
and
stos
insb
inc
in
dec
fisubrl
cmp
daa
pop
insb
sbbl
push
sbb
adc
cmp
cld
mov
outsb
xchg
add
mov
lock
int3
push
mov
and
je
dec
or
pop
int3
jp
cmp
out
adc
pop
nop
lds
adc
data16
in
push
test
leave
and
aaa
loopne
jmp
or
or
push
mov
fildl
or
addr16
out
dec
jp
testb
mov
sub
lcall
pop
inc
test
push
sbb
rorb
sub
inc
out
inc
mov
add
xchg
sub
stc
mov
js
repnz
test
out
adc
or
push
add
imul
ja
jp
inc
add
jne
pop
es
jns
xchg
shrb
imul
add
hlt
and
xor
xchg
add
das
cwtl
int
mov
push
out
dec
mov
mov
fs
movsl
inc
add
subl
rorb
out
test
cli
int3
scas
lods
mov
xchg
test
in
repz
aas
rclb
adc
and
int3
shrl
mov
mov
push
jae
fmuls
xchg
mov
cmp
loopne
cmp
mov
push
dec
mov
dec
cmp
test
mov
cmpsb
cltd
div
push
test
aas
dec
mov
aam
dec
out
push
repnz
enter
movsl
ss
cmpl
sub
loop
pop
and
adc
test
fisubl
pusha
ds
sbb
pop
andl
or
gs
cld
jbe
test
and
inc
or
insl
outsb
aam
fdivrs
shll
or
pop
jne
push
outsb
cmp
adc
movsb
inc
int3
lret
shl
inc
adc
or
sti
cmp
pop
or
pop
sti
rcl
pushf
dec
loop
popa
aaa
pop
fld
xchg
mov
ret
cmp
add
xlat
pop
sbb
lds
adc
cmp
xchg
xor
repz
daa
sbb
call
cmp
pusha
fcmovnu
push
out
jge
mov
rolb
pushf
jmp
xchg
and
inc
xchg
fsubl
hlt
jl
mov
std
aad
xchg
mov
int
xchg
or
mov
adc
dec
xchg
jl
clc
dec
xlat
in
jg
push
cltd
fcomps
lret
pop
lea
insl
mov
lahf
div
mov
pusha
cmp
arpl
dec
add
mov
rcl
mov
pop
test
imul
repz
loop
push
loopne
rcl
push
mov
cmp
add
or
fs
cld
adc
addr16
hlt
push
cli
imul
xchg
shrb
mov
mov
or
jns
ds
mov
xchg
xchg
push
mov
sahf
xchg
push
and
adc
test
loopne
add
bound
scas
lods
and
adc
in
inc
test
pop
jmp
adc
jbe
pop
mov
std
cmp
adc
outsb
mov
lock
jo
stos
mov
icebp
mov
and
fwait
mov
xor
mov
or
fnstcw
cmp
sbbl
shrb
cmp
aas
sbb
dec
test
js
aad
arpl
mov
fsubs
jmp
test
imul
sbb
sbb
aaa
or
xor
movsb
imul
mov
sbb
pop
mov
aam
mov
mov
fs
push
jmp
enter
push
add
inc
pop
mov
cmp
sub
push
inc
loop
xchg
lods
sub
mov
mov
jbe
sbb
xchg
jge
dec
push
and
insb
mov
pop
pop
pusha
jne
fisttpll
cmp
mov
pop
fs
aam
lcall
or
sbb
lea
fnstcw
mov
pop
pop
mov
cmp
nop
mov
hlt
aaa
xchg
add
pop
clc
lds
jno
aam
subb
cwtl
inc
outsl
aam
sbb
add
fists
scas
cmpsb
mov
test
mov
mov
adc
ds
sti
mov
inc
mov
add
sbb
pop
and
ljmp
add
xlat
in
lret
push
sbb
fs
mulps
testl
mov
cwtl
int3
cwtd
testb
inc
push
out
cltd
lock
pushf
xor
pushf
and
add
ja
ret
mov
stc
push
xchg
enter
scas
cld
xor
stc
mov
sub
fdivr
and
sbb
mov
or
pop
lahf
jo
pop
fcomi
pop
xor
xchg
mov
daa
testb
dec
je
ja
rcl
add
jp
jecxz
loop
sub
test
sarb
add
mov
xlat
idivl
adc
call
xchg
xor
pop
cmp
and
cld
mov
sti
pop
xlat
outsl
ret
jmp
mov
icebp
lret
xchg
pop
adc
or
aaa
aas
xchg
aad
or
mov
adc
es
in
add
pop
dec
cmc
daa
mov
inc
and
push
adc
xor
or
test
mov
cmp
xor
pop
lcall
jbe
adc
inc
adc
scas
js
xchg
xor
divl
jae
pop
sbb
and
jmp
pop
jb
ja
in
mov
and
mov
cld
lea
adc
fcoms
xor
mov
negb
rcl
loope
dec
jnp
fcoms
lods
mov
sub
jo
mov
cs
jne
out
pop
cmpl
mov
loop
jnp
insb
stos
push
cmp
mov
jnp
dec
mov
aas
aas
push
aad
pushf
push
pusha
jmp
sbb
mov
inc
push
jae
daa
xchg
lret
insl
mov
or
fs
popa
int
adc
add
jb
stos
loopne
lcall
push
ja
push
jmp
mov
sub
insl
and
lea
test
push
cs
cmp
lcall
leave
mov
test
cs
jb
mov
jo
insb
mov
or
mov
dec
out
ds
in
in
push
das
cmc
lcall
es
neg
sbb
pop
aaa
in
cmp
test
imul
mov
ljmp
mov
shll
les
sub
add
xchg
jg
stc
xchg
out
mov
mov
adc
mov
adc
push
out
dec
std
inc
cmp
insb
mov
cmpsb
and
push
jp
sbb
sbb
stos
ds
jns
sub
out
push
fistps
mov
into
insb
or
sbbl
jl
dec
cmpsl
sub
sbb
mov
pop
xchg
adc
pop
lcall
xlat
jle
cmc
aaa
lret
xchg
in
mov
inc
in
faddl
lods
inc
sahf
mov
xor
fistps
les
repz
inc
fldenv
push
cmp
xchg
repnz
pop
je
mov
subb
es
scas
mov
mov
cli
sbb
ficompl
pop
or
mov
cmp
jle
add
xor
mov
mov
xchg
adc
sub
cwtl
jge
fcmovb
cmc
sahf
sbb
adc
aam
cmp
dec
lods
add
push
add
imul
add
int
and
jp
divl
or
iret
test
icebp
not
cmp
push
add
int3
inc
movsb
lahf
sahf
out
xchg
inc
out
cwtl
popa
mov
push
ret
in
jle
push
cmp
cltd
jae
mov
repz
pop
adc
and
mov
cs
lret
jg
inc
jge
stc
mov
jae
popa
insl
mov
fidivl
mov
mov
inc
cs
dec
dec
mov
outsl
cmp
or
sbb
insb
xor
movsb
sbb
in
mov
dec
repz
xchg
mov
inc
push
idivb
lret
and
iret
sub
sti
jae
xchg
fs
dec
pop
sbb
mov
in
data16
push
jmp
imul
jno
divl
add
pop
push
rep
mov
loop
mov
inc
ja
in
aad
mov
test
or
inc
dec
inc
ja
mov
push
inc
adc
insb
sub
in
mov
sbb
mov
in
mov
lcall
pop
std
xor
mov
in
test
icebp
xchg
notb
mov
mov
cmp
jns
das
cmp
scas
pop
pusha
movsl
outsl
lods
pusha
sbb
and
mov
dec
xlat
adc
mov
jns
mov
cltd
add
or
scas
pop
leave
cld
xchg
leave
sbb
into
pop
jae
fnstcw
and
push
push
mov
popf
pop
add
mov
es
insl
pushf
dec
imul
sub
sub
cld
icebp
fstps
mov
data16
les
mov
and
xchg
push
aam
inc
add
sub
int3
in
in
xchg
shl
mov
sbbb
add
jb
lds
push
push
es
lea
lods
add
dec
ret
js
xlat
mov
add
jecxz
pushf
mov
push
xor
popa
fstps
lret
outsl
loop
gs
cmp
add
and
jne
aam
stos
cmp
insb
xchg
iret
das
in
mov
aas
xor
inc
stos
loop
xchg
mov
cltd
daa
adc
repnz
mov
ffree
sub
and
cmp
mov
out
int
in
shlb
ja
xchg
jnp
icebp
xchg
mov
mov
daa
xchg
lea
out
inc
not
sbb
xor
je
jl
fdivrl
adc
data16
ljmp
push
test
mov
adc
cmp
jmp
mov
call
lds
jecxz
xor
adc
xor
or
sbb
lods
cmp
xor
xchg
mov
pop
rcrl
ljmp
ljmp
or
icebp
repnz
rorl
shlb
pop
jl
sbb
rclb
aad
add
jae
mov
jmp
cmc
pushf
xchg
jmp
mov
lods
cmc
jp
inc
jge
adc
pop
push
jae
cmp
jp
movsb
lods
jbe
dec
rclb
ja
bound
xchg
xlat
pop
sbb
jnp
iret
iret
dec
adc
fcoms
rolb
fs
frndint
call
mov
lret
outsb
inc
jns
cli
jl
lret
add
mulb
mov
lret
mov
adc
arpl
and
repnz
lock
jg
lret
lret
fisubrl
pop
and
xor
test
sbb
pop
sahf
mov
shrl
fistpll
shlb
loope
das
cltd
lahf
or
cli
rcrb
cmp
mov
imul
and
in
daa
sbb
mov
and
cmp
push
cltd
cwtl
imul
outsb
rcll
and
mov
addr16
call
push
ds
add
mov
cmp
pop
into
lea
or
xchg
or
push
sub
mov
outsb
scas
cwtl
sti
xor
popa
mov
mov
repz
cmp
dec
mov
inc
jb
add
xchg
or
int3
jne
xchg
aaa
jle
or
insl
mov
mov
fidivl
add
pop
xchg
jecxz
mov
add
pop
dec
insb
lret
std
mov
adc
push
addl
aaa
pop
inc
into
in
lret
mov
stc
cli
stc
add
mov
add
mov
xchg
mov
orb
mov
div
sbb
mov
dec
rcrl
and
cwtl
negl
ret
mov
mov
adc
cli
iret
xchg
fs
pushf
pop
cmp
xor
sub
mov
loopne
add
jb
aam
xor
dec
ja
aam
cli
xchg
das
jp
push
jnp
jne
pop
dec
mov
dec
in
lret
test
in
shl
inc
sub
push
jp
loopne
out
jno
mov
or
xlat
subb
outsl
dec
sub
cmp
or
mov
fildl
dec
pop
lcall
and
xchg
lret
mov
es
jle
orb
xchg
inc
popf
ds
sbb
mov
fsubp
repnz
divl
rclb
adc
dec
push
jnp
dec
pop
into
dec
stc
arpl
mov
iret
push
jge
dec
lcall
rcll
fcoms
jne
mov
fistpl
inc
scas
out
pop
jmp
in
adc
sbb
ret
std
pop
in
lret
lods
mov
stc
inc
mov
push
adc
outsb
mov
push
fisttpl
sub
push
and
or
mov
xchg
imul
nop
test
jge
dec
add
or
in
js
pop
stc
adc
mov
inc
fstpl
or
ljmp
ljmp
sub
leave
fsub
cmpsl
cmp
shl
cld
test
pop
loopne
xchg
or
outsl
pop
xchg
inc
mov
cmp
mov
aaa
mov
and
cs
jno
sub
mov
adc
repnz
call
pushf
jae
fidivrs
adcb
shlb
mov
adcb
int3
add
pop
and
mov
in
repz
and
dec
and
mov
scas
jbe
leave
mov
cmpsl
btrl
fldt
fbld
movsb
or
sub
inc
in
jae
data16
push
xchg
iret
sbb
mov
ss
dec
sub
xchg
inc
mov
or
mov
aaa
je
loopne
sub
lods
jecxz
mov
out
cmpsl
xor
out
push
jmp
or
push
cmc
and
jo
lahf
stc
dec
cmc
mov
cmpsb
sub
sbb
js
pusha
gs
sub
icebp
mov
cmpb
xchg
mov
ljmp
scas
es
sbb
int
and
gs
loopne
xor
or
enter
out
bswap
imul
scas
aam
aaa
add
push
popf
add
jl
sbb
jmp
sub
pushf
dec
addr16
inc
hlt
sub
cmp
call
ljmp
fdiv
mov
in
pop
into
sbb
jns
sti
idivb
repz
sbb
into
aam
arpl
push
sub
mov
jge
mov
in
sub
fimuls
xchg
cli
mov
pop
ljmp
test
aad
sbb
lret
sahf
dec
lea
outsl
out
inc
xchg
mov
decl
mov
test
movb
pop
aas
xchg
push
sahf
sub
stos
enter
pop
out
lock
or
in
mov
js
or
repz
xchg
cmp
inc
sbb
jge
adc
rol
mov
push
push
lods
add
bound
loop
int
lea
add
add
movsb
jae
pushf
pop
test
aad
xchg
cld
ja
orb
insl
loop
jb
mov
fxch
xor
and
inc
sbb
adc
mov
xchg
insl
int3
mov
clc
fsubrp
adc
xor
mov
int
push
aas
insb
lds
xchg
dec
fcmovnbe
subl
or
loop
je
adc
mov
std
shll
cmpb
sbb
ss
mov
les
adc
lods
insl
incb
jl
push
inc
inc
mov
cmp
xchg
and
cmp
enter
jbe
sbb
jg
aad
cs
lods
pop
push
outsl
add
pop
clc
pop
subb
lret
jecxz
scas
add
cmovo
xchg
jbe
pop
sbb
out
jno
stos
adc
es
lea
or
mov
xlat
add
inc
and
push
shll
jne
insl
push
lret
cmpsl
mov
jmp
cmpsl
jne
pop
push
mov
add
jge
cmp
aad
pushf
faddl
scas
mov
xchg
sbbl
xchg
out
and
popa
push
pop
decl
or
and
lock
xor
loope
ds
shll
and
add
pop
in
ljmp
pop
out
fiadds
push
jb
stc
xorb
inc
mov
xor
test
stc
das
popa
popf
mov
and
mov
adc
stos
rcrl
stos
lcall
lock
xlat
mov
mov
stos
je
jg
or
jl
bndldx
xchg
ret
in
leave
ss
cmp
push
sarl
xlat
lock
mov
pop
mov
fwait
mov
or
dec
mov
add
mull
bound
mov
add
int
jnp
mov
outsl
fcmovne
pop
mov
and
xor
cld
mov
or
cld
dec
xor
movsl
pushf
inc
sub
xor
ja
mov
adc
testl
jne
sub
roll
icebp
aas
mov
xlat
sub
mov
jmp
pop
insb
shlb
jae
out
jno
add
push
jl
in
out
adc
insl
call
loopne
lret
add
out
mov
jb
inc
out
sub
enter
sti
mov
pop
inc
cld
sbb
gs
sub
ljmp
mov
and
enter
add
mov
pop
aas
mov
cmpsl
mov
loope
loope
fs
sub
icebp
hlt
pop
aaa
cmpsb
in
add
xor
dec
xor
repz
pop
jecxz
mov
test
shrb
pop
popf
gs
pop
xchg
ret
repnz
push
call
xor
arpl
popl
xor
xor
jl
and
pushf
idivw
push
and
fcmovnbe
xor
and
or
and
inc
lahf
outsl
and
aad
adc
cmp
aam
xor
sarl
pop
imul
pop
test
outsb
jecxz
stos
sub
sahf
xchg
or
xor
add
hlt
xchg
mov
mov
movsb
pushf
mov
jmp
pop
pushf
scas
cmp
jmp
popf
inc
test
xor
xchg
stc
aam
inc
pop
or
and
sub
and
push
sub
push
push
scas
mov
or
stos
cmp
mov
cmpsl
or
sbb
and
or
out
lods
xchg
push
dec
cmp
test
adc
pop
xchg
mov
add
xchg
jo
mov
daa
mov
cltd
xchg
ret
cs
lea
js
ljmp
mov
cmpxchg
outsl
xor
mov
std
and
mov
arpl
mov
ss
leave
mov
mov
pop
mov
jecxz
add
repz
in
ret
test
addr16
lea
sub
cmp
ret
jp
movsl
lret
inc
push
pop
jbe
and
in
and
scas
push
icebp
lea
cmp
rcrl
xchg
xor
sub
and
jnp
outsb
cmpl
xor
lret
pop
xchg
aam
sti
outsb
jp
and
pop
adc
lods
sub
ret
xor
test
loopne
adc
je
inc
mov
add
mov
dec
lret
cmp
dec
repz
jge
pop
lret
adc
dec
xorl
jecxz
push
mov
cmp
cmpb
xchg
or
pop
out
out
ror
inc
daa
sbb
test
xlat
dec
leave
pushf
push
sbb
sbb
rcr
int
add
xchg
mov
in
xlat
imul
fs
push
xorb
xchg
int3
repz
gs
call
adcb
idivb
mov
jg
jnp
push
add
inc
sub
icebp
push
aas
fisubs
jnp
stc
ficoml
xlat
sbb
jmp
mov
fistl
mov
sbb
sub
or
pop
adc
daa
out
mov
fxch
sbb
cli
roll
cmp
push
pop
add
mov
push
sbb
rcll
lret
add
ds
sti
add
dec
lods
scas
sahf
inc
sbb
xchg
arpl
imulb
rorl
dec
fbstp
int3
gs
xor
movsb
inc
pop
popf
fdivl
cmp
shl
xlat
call
fdivrs
mov
ds
fbld
push
xchg
pop
icebp
xor
nop
mov
test
fsubs
nop
inc
lds
jge
jl
sub
cmp
mov
inc
scas
jmp
inc
insl
and
test
dec
mov
cltd
mov
push
loop
mov
je
dec
icebp
add
mov
adc
add
lods
adc
aaa
dec
sbb
lods
in
cli
aaa
add
mov
int3
sbb
cmpsl
jmp
mov
jmp
ja
or
mov
nop
jne
xchg
inc
xchg
in
mov
adc
clc
mov
sbb
and
or
cmpsb
enter
mov
in
je
fildll
add
cmp
sub
add
fwait
outsl
pop
daa
and
call
std
sub
lods
iret
pop
adc
mov
pop
and
fsub
clc
xchg
gs
div
cld
xorb
gs
in
mov
inc
inc
movsl
jg
outsb
push
xor
sub
dec
sbb
out
sbb
jo
aad
or
lods
jp
daa
mov
xor
pop
clc
orl
call
jno
dec
xchg
jns
ret
loop
or
xor
sbb
or
cmp
js
movsl
xor
or
mov
cmp
insb
xchg
es
add
call
loope
mov
cmp
pop
inc
add
les
jle
mov
add
add
pop
add
mov
adc
xchg
subl
lret
mov
jbe
mov
movsb
imul
scas
jecxz
das
cmp
mov
das
ds
xor
push
jb
repz
xor
ja
shlb
lds
daa
pop
cmp
mov
adc
jmp
stc
in
jo
mov
adc
pushf
xchg
pop
fldcw
pop
sbb
add
mov
shll
ret
cld
sub
test
inc
mov
xchg
pushf
ret
es
sahf
test
iret
scas
mov
lret
pop
stc
scas
push
push
test
jne
mov
or
dec
addr16
push
ficompl
or
stos
shlb
mov
dec
mov
xchg
jg
dec
dec
lock
loope
cli
mov
ljmp
sbb
dec
int
dec
cmp
cmp
fs
loopne
jecxz
notl
inc
je
dec
cmpb
mov
xlat
ret
mov
adc
nop
mov
cwtl
sar
addr16
stc
ret
pop
mov
mov
jo
cmpsl
xor
ds
mov
inc
and
movsb
mov
adc
xchg
in
std
pop
ficoml
push
test
mov
leave
cli
cmpsb
xchg
test
mov
xor
dec
lock
inc
adc
test
cmpl
xchg
or
pop
mov
mov
cs
push
test
stos
xchg
inc
mov
cmc
sub
push
mov
shrb
adc
rclb
cltd
shll
stc
cmp
mov
sahf
or
and
cmp
sbb
jg
orl
mov
jge
mov
fdivs
mov
iret
pushl
xlat
jg
into
cmp
or
addr16
sbb
ret
call
push
cli
data16
pop
clc
push
mov
push
sub
loopne
add
cmp
dec
pop
pop
xor
call
jmp
int
lods
movsb
and
push
outsb
daa
aam
xor
rcrb
out
cmp
sbb
cld
xor
aad
lods
adc
shrb
xchg
jle
push
mov
and
test
daa
and
movsl
imul
aad
jo
in
or
repnz
fidivrl
ja
xchg
test
fimull
jle
push
dec
sbb
das
clc
mov
rolb
mov
cmpsl
aas
ja
cmp
xor
or
sarb
push
push
xor
ret
out
outsb
pop
dec
mov
aad
lds
cmpsb
or
mov
adc
and
fmul
pusha
mov
push
in
cmp
mov
cmp
fisttpl
scas
ret
jp
pushf
jns
adc
mov
or
cmp
fdivrl
and
mov
jge
xlat
lahf
mov
xchg
out
dec
stos
add
push
shlb
fstps
mov
mov
test
jecxz
popf
repnz
cmp
push
lret
es
movl
in
or
sub
shrb
mov
or
or
mov
push
mulb
insl
inc
add
jo
sbb
cmpsl
ret
xchg
jl
jg
in
dec
aam
pushl
or
cltd
loope
add
fmulp
hlt
in
aas
mov
adc
lret
jae
push
mov
iret
mov
mov
inc
push
sub
jmp
or
cmp
jl
mov
mov
enter
mov
and
push
outsb
or
cmp
in
cltd
xchg
inc
mov
inc
stos
or
mov
sti
mov
dec
mov
in
fcoms
loopne
mov
inc
add
dec
adc
add
cmp
aaa
jmp
cmc
daa
add
lahf
sbb
xchg
jb
push
loop
sbb
popa
stos
inc
enter
or
enter
jge
lods
ret
push
outsl
dec
jns
mov
mov
ret
jns
lret
insb
pushf
pop
sbb
outsl
clc
mov
mov
mov
scas
mov
mov
jb
enter
dec
xchg
add
fisubl
je
xchg
popa
push
cmp
fcomip
add
repnz
lahf
test
mov
pop
das
sub
cmp
dec
push
orl
mov
and
test
outsb
stos
sub
andl
dec
or
rorl
loope
xchg
xchg
add
call
and
xlat
loope
adc
lock
sub
pop
icebp
jmp
inc
dec
push
out
push
adc
cmpsl
xchg
js
sti
pop
aaa
data16
and
imul
outsl
jae
cmp
clc
mov
rcll
sub
sbb
addb
fildll
jnp
cmp
cltd
xorb
and
add
insl
inc
xor
loop
mov
mov
push
pop
xchg
add
jg
ss
xchg
pop
lods
inc
std
or
mov
rorl
out
lret
lods
adc
xor
jg
mov
jl
cli
adc
int
inc
jno
push
in
fiadds
sub
out
sub
or
pop
dec
cmp
mov
out
fildl
adc
mov
fistl
mov
inc
xor
aam
ss
daa
loopne
or
repz
sbb
cmpsl
fmulp
push
mov
cmp
adc
fwait
adc
out
push
push
out
bound
cld
xchg
mov
out
lods
mov
scas
ret
cmp
fistps
xor
dec
xchg
cmp
popf
inc
mov
mov
sub
inc
and
sub
pop
add
jecxz
add
hlt
aam
or
gs
imul
or
popa
lahf
cmp
inc
adc
xchg
pop
xchg
nop
mov
push
imul
imul
insl
mov
sub
mov
jmp
xchg
mov
mov
mov
jl
test
push
mov
out
xchg
insl
pop
adc
jno
inc
jl
push
mov
add
inc
sti
mov
fwait
lock
mov
lcall
out
mov
push
cld
cmp
mov
mov
mov
pop
inc
in
adc
sbb
fidivl
sbb
push
sbb
mov
mov
and
cltd
test
mov
lods
xchg
ficomps
mov
inc
imul
insb
fs
or
stos
jno,pn
out
and
fistpll
insl
out
cmp
jbe
int
cmp
adc
into
xchg
mov
stc
in
sbb
fbld
sbb
inc
in
sbb
mov
sti
or
enter
sbb
fidivs
fs
mov
pop
ds
xchg
sub
aad
bts
jo
xlat
rorb
loope
xorl
jo
mov
sahf
jo
data16
or
mov
xchg
mov
cmpsl
dec
jg
les
inc
ss
mov
ficoml
arpl
subb
xchg
or
push
push
add
pushf
cmp
dec
mov
mov
int
mov
std
sub
fistpl
push
into
or
and
sbb
or
mov
mulb
popf
push
lods
fwait
mov
das
js
repz
in
test
int3
mov
dec
pusha
fs
fs
push
movsb
cltd
sahf
push
cmp
test
jmp
sbb
xchg
push
sysenter
popa
test
fmul
mov
andb
cmp
mov
call
xor
idivb
outsb
push
lds
adc
in
lahf
faddl
daa
les
xchg
mov
cli
int
mov
mov
sub
jo
loopne
pusha
sbb
andps
andl
xchg
cmpsl
and
sbb
lea
pop
dec
sub
push
pusha
add
fmull
pop
rclb
dec
mov
adc
shlb
push
adc
je
lods
mov
push
lods
dec
push
rcll
daa
in
mov
and
data16
js
aas
and
or
push
push
clc
insb
mov
cmp
push
bnd
xor
jbe
inc
sarb
xor
lods
sub
insb
aas
mov
push
in
mov
aam
adc
cmpsb
aam
into
inc
cli
push
sbb
sbb
push
xchg
jle
cmp
in
sahf
fcoml
cmp
lods
mov
push
lods
nop
iret
jp
inc
lods
out
xor
push
or
popa
add
sbb
fstps
fldenv
mov
aad
cmc
ja
mov
lret
mov
mov
mov
mov
mov
lcall
dec
sub
ja
bound
lcall
xchg
enter
pushf
ja
lret
hlt
clc
outsl
stos
dec
packssdw
push
mov
sub
and
cmp
std
dec
add
fisttpl
fidivs
pop
push
lret
callw
ret
mov
test
test
jg
push
out
mov
cmpsl
cwtl
gs
push
arpl
cmp
loopne
mov
adc
xchg
add
push
movsb
pop
sbb
jp
stos
xchg
ja
mov
das
fimull
mov
sbb
aaa
pusha
dec
in
gs
flds
rorb
mov
inc
stos
xor
loop
sbb
adc
hlt
mov
add
or
mov
cmpsl
fs
mov
jo
and
shl
rclb
pushf
sahf
scas
sbb
cmp
xchg
adc
les
in
cwtl
stc
and
fdivs
push
mov
adc
pop
pop
xor
and
sub
adc
sbb
out
mov
jo
jp
test
xor
jo
scas
enter
xchg
cli
pop
fldenv
mov
or
inc
shrl
js
inc
lds
push
aad
shll
cmp
push
out
adcl
mov
mov
jno
mov
add
call
mov
dec
xlat
sbb
aam
lahf
in
push
or
outsl
and
sbb
insb
out
xlat
sbb
andb
or
xor
add
js
mov
sbb
xchg
pop
sub
sbb
dec
testl
clc
lret
fs
in
btr
jns
inc
pop
daa
pop
sti
or
fwait
daa
push
add
ja
jbe
mov
cmp
xchg
and
scas
sbb
mov
jle
aaa
lahf
mov
inc
loop
jp
lea
or
popf
into
cli
je
add
push
repnz
mov
dec
and
imul
mov
adcl
or
and
lahf
xchg
fcoms
pop
or
push
lea
push
jne
or
in
jnp
cmpsl
add
cmp
mov
jae
in
mov
vmulps
inc
push
stos
imul
add
xchg
fs
jae
or
pop
mov
loop
lods
cmp
js
test
insl
mov
sub
pop
push
arpl
xchg
aam
out
jno
xchg
inc
mov
aam
mov
bound
xor
xor
je
inc
or
les
insb
adc
les
es
int
fsubr
jg
dec
dec
cwtl
push
sbb
mov
pushf
pop
hlt
jg
dec
rclb
jecxz
sub
stos
sbb
cmpsb
push
stos
mov
xchg
cmpsl
sarl
es
sub
in
lds
xor
pusha
pop
xchg
int3
into
stos
pop
cmpl
dec
sub
hlt
pop
pusha
fdivrp
cmp
imul
into
xor
push
xchg
std
xor
push
inc
mov
sbb
lods
rcll
pop
clc
pusha
mov
fistl
mov
jne
push
or
sahf
mov
imul
outsb
sti
xchg
pop
pop
fisttpl
push
mov
shrb
mov
divl
cs
mov
or
jb
jp
roll
mov
and
insl
call
jl
sub
pushf
xchg
push
inc
adc
loop
sbb
sbb
mov
stos
add
lock
movl
in
scas
mov
adc
xor
xchg
fstpt
in
pop
jae
cwtl
push
and
mov
adc
pop
ds
stc
rol
ret
cmp
pop
mov
in
rcr
mov
loope
insb
rcl
addr16
xchg
push
jmp
dec
fimull
sbbl
imul
push
cli
sbb
ja
divb
pop
fsubrl
or
and
jle
rorl
mov
lret
xor
add
insb
pop
in
and
shlb
stos
or
pop
fisubrl
pop
xchg
mov
cld
mov
aas
daa
adc
dec
insb
loopne
cld
sbb
stos
lahf
loopne
xchg
xor
movsb
loope
mov
in
test
lock
dec
sbb
shrl
incb
mov
fisubrl
repnz
rorb
scas
outsl
mov
stos
push
xchg
rorl
dec
pusha
cmpsl
pop
push
xchg
dec
mov
xchg
xor
dec
nop
or
and
imul
sbb
xchg
sti
xchg
js
jg
and
dec
inc
repnz
adc
imul
and
stos
sub
push
jle
neg
iret
fimuls
cmp
cmp
sbb
cmp
in
fcoms
into
shll
fimuls
dec
leave
push
xor
imul
andb
lock
mov
enter
adc
and
xchg
jmp
lret
mov
popf
push
inc
rorb
mov
mov
mov
pop
lea
cli
pop
fs
test
test
popa
call
fbstp
or
insl
out
int
les
mov
mov
ret
add
sub
aaa
bound
xchg
xchg
inc
outsl
mov
mov
insl
loop
adc
push
call
pop
cmp
cmpb
mov
or
shlb
xchg
pop
dec
pop
das
dec
hlt
shll
dec
mov
xchg
movsl
les
test
jbe
cmpsb
push
push
lods
or
cmpl
mov
cltd
inc
pop
jno
and
sbb
fsubp
jns
xor
icebp
aas
subl
cs
jl
mov
movsb
stc
stos
add
mov
and
loop
mov
stos
call
ss
inc
dec
fcomps
inc
arpl
pop
cmp
insl
and
or
frstor
out
mov
fildl
mov
aas
mov
and
add
out
int3
xlat
add
ja
push
lcall
inc
gs
jle
mov
and
lds
hlt
scas
push
add
dec
js
jb
mov
and
sbb
popa
stc
fidivs
int3
or
imul
arpl
int3
pop
xchg
adc
mov
fisubrs
xor
adc
cltd
dec
dec
sub
in
popa
jmp
push
bound
insb
add
cmc
sub
in
dec
cmp
jno
out
les
ret
jne
lahf
mov
xchg
mov
out
das
cmpsl
mov
adc
pop
movsl
lcall
daa
in
fiaddl
in
inc
iret
push
xchg
adc
adc
xor
pop
lds
stos
in
sbb
jae
or
rcrl
mov
stos
fs
adcb
jo
loop
movsl
dec
mov
xor
mov
jle
or
icebp
test
pop
insb
data16
jnp
vpmacsdd
mov
mov
xchg
fisttpll
mov
ss
jl
lods
sbb
adc
mov
test
pop
fs
pusha
mov
cmp
repnz
xchg
inc
xchg
jge
add
sbb
jge
push
mov
mov
or
xchg
cmpsl
and
jl
mov
pop
addr16
dec
jl
loope
push
sarb
cmpsl
dec
gs
jge
test
jne
imull
lret
sub
mov
jnp
dec
dec
cmpsl
xor
andl
dec
mov
jo
popf
into
mov
push
ja
mov
dec
or
addb
call
inc
cmp
mov
cmc
sub
sub
mov
mov
iret
fs
mov
ret
imul
lret
dec
mov
fldcw
push
leave
pop
dec
xchg
or
movsl
push
cs
pushf
jg
mov
mov
loopne
push
adc
push
or
mov
xor
jmp
out
or
bound
loope
in
scas
inc
lea
pop
add
lret
outsl
imul
scas
xchg
dec
sub
jg
imul
ret
ja
sub
loope
jl
inc
pop
inc
xorl
mov
xchg
pop
mov
call
fistpl
cmc
daa
test
mov
stos
outsb
dec
mov
movsl
in
adc
loopne
ljmp
cmp
xchg
mov
pop
fnstsw
mov
stos
xor
jp
fcmovbe
xor
sbb
jmp
dec
pop
in
leave
xchg
out
jl
and
add
dec
cwtl
add
shll
xlat
lret
cmp
lock
iret
inc
in
inc
aam
sub
xchg
fisubs
icebp
jge
adc
dec
repz
mov
sahf
ds
xor
rorl
scas
lret
nop
pop
bound
ss
hlt
cmp
adc
push
add
in
pop
cld
dec
testl
sbb
or
in
inc
sbb
out
out
pop
daa
xorl
xchg
xchg
mov
or
fldt
jmp
xor
rcrb
and
fcoms
sti
xor
lods
add
iret
adc
nop
and
stc
dec
pop
mov
inc
or
mov
insl
mov
jmp
push
or
mov
into
lods
and
adc
xchg
and
stc
pop
out
in
aaa
stos
test
xchg
jmp
loope
dec
insl
xchg
cmp
jl
jns
jp
fdivp
adc
jbe
bound
addr16
cwtl
outsl
rcrl
sub
jns
fcmovb
inc
out
push
add
outsl
and
mul
fdivr
cmc
pop
jg
mov
xchg
inc
fstl
in
int
mov
mov
sub
or
test
add
mov
xchg
jae
fdivl
inc
aad
sub
or
in
in
or
cmpsl
shrl
sbb
mov
out
add
jnp
mov
arpl
mov
sbb
clc
mov
and
addr16
out
sbb
mov
xchg
scas
into
mov
sbb
dec
xor
in
cmp
mov
lea
adc
and
test
adc
mov
push
fadd
dec
xor
repnz
or
scas
inc
mov
jle,pt
mov
inc
jnp
push
sbb
cli
or
mov
jns
push
stos
jne
mov
sub
fimull
clc
xorl
ss
and
int
and
mov
in
stos
sahf
mov
pop
stc
cmp
push
cmp
fstpt
cmp
push
pop
push
xchg
iret
les
sti
loop
cmp
xor
punpckhdq
loope
test
xor
mov
inc
mov
adc
pop
scas
lret
cmp
sbb
push
bound
fdivs
inc
push
pop
mov
hlt
push
sub
mov
mov
daa
sub
mov
mov
or
fldcw
imull
popf
and
mov
push
or
add
or
mull
sbb
bound
sbb
add
xchg
bound
lock
test
fistps
imul
clc
push
fs
xor
ss
jg
fsubrs
pop
out
jmp
sarl
cmpl
push
xor
repnz
cli
sub
clc
xchg
loope
push
test
or
int3
pop
inc
jbe
pop
push
rcll
sbb
fmul
imul
lret
mov
sbb
xor
or
mov
mov
mov
pop
jecxz
mov
in
idivl
mov
inc
mov
sbb
imul
jbe
lea
xorb
fldcw
jb
jnp
into
pop
aaa
mov
push
add
sub
mov
push
cmp
lret
pop
rcrl
andl
xor
dec
fs
dec
jo
push
cmc
jae
adc
iret
in
ss
int
daa
repz
xchg
sub
int3
enter
mov
mov
jne
jecxz
in
push
jmp
mov
sub
jge
lods
incb
mov
adc
pop
mov
pop
sub
fwait
sub
in
hlt
mov
add
inc
or
psrad
mov
popf
cmpsl
xor
push
aam
xchg
mov
loopnew
popf
repz
cltd
add
sbb
jae
mov
or
ss
in
call
inc
mov
pop
sbb
fimull
cld
jmp
loope
es
cwtl
push
jmp
add
into
test
orl
inc
xchg
addr16
icebp
adc
push
mov
mov
or
int3
mov
fmull
enter
fisubs
iret
int
sbb
fsubs
mov
and
cltd
fcmovnbe
sub
fcmove
or
inc
xor
cmp
jecxz
mov
sub
sub
adc
idivl
clc
movsl
movl
inc
lods
mov
add
sbb
cmp
test
out
repnz
pop
outsb
mov
or
dec
stos
outsl
adc
sub
mov
loope
mov
mov
mov
mov
pop
cld
inc
or
call
outsl
pop
pop
sbb
push
mov
js
lock
and
dec
subb
gs
lret
mov
ss
mov
arpl
fists
fldt
ret
pushf
cmp
add
sub
pusha
add
gs
iret
and
xor
mov
aam
xor
adc
vpcmpeqd
das
sub
push
jno
scas
fcom
push
shll
in
rclb
push
mov
jle
in
add
outsb
and
test
mov
stos
pop
repnz
test
test
xchg
mov
push
fcoml
lret
pop
pop
loope
fwait
pusha
outsb
xor
ja
xchg
cli
add
test
and
mov
sub
shrl
lods
leave
dec
fidivrs
loop
sub
add
mov
div
out
add
inc
out
cld
fnstenv
xorb
outsl
xor
daa
ja
sbb
jl
cmc
popf
push
or
gs
ja
mov
data16
bound
imul
test
in
pusha
inc
mov
fnsave
cmpsl
stos
bound
mov
cmp
and
rcll
pop
fildl
jnp
or
cmp
or
clc
mov
mov
imul
mov
cs
hlt
mov
loop
sahf
shll
mov
pushf
fsubr
xchg
mov
cld
and
fsubrs
sar
add
inc
das
gs
jbe
xor
lods
in
xor
ficompl
sarb
jle
mov
or
cmp
xor
cmpl
lods
xchg
lea
fimuls
cmp
mov
or
push
cmp
mov
xchg
gs
sub
mov
ret
scas
mov
cmp
push
es
shrl
mov
cmp
mov
push
movsb
add
dec
sub
push
jmp
push
dec
push
arpl
sbb
adc
adc
cli
add
sub
push
dec
add
int3
stc
xchg
or
sbb
out
push
or
adc
pusha
ss
fmuls
aaa
aam
xorb
fcomp
cltd
insl
xlat
ds
pusha
lods
mov
sub
mov
cwtl
das
lock
test
xor
adc
fchs
dec
sub
pop
or
imul
push
sbb
xor
adc
and
or
and
ret
pop
mov
ror
xlat
xchg
xchg
xchg
popf
dec
push
mov
aad
adc
mov
es
xor
jg
aaa
mov
jns
cmp
and
hlt
xor
pusha
mov
arpl
pop
sub
por
dec
fnsave
mov
vmread
sarl
stos
nop
daa
js
aad
bswap
fistps
into
pop
cmp
sbb
outsb
or
loopne
and
xor
gs
add
and
xchg
inc
xor
xor
pop
lret
gs
push
push
and
or
mov
jno
hlt
push
divb
xlat
jb
ds
sbb
mov
in
into
cmpsb
jbe
inc
and
push
and
arpl
sub
inc
mov
sbb
aad
lret
test
add
mov
in
xchg
sbb
fadds
imull
lahf
push
mov
cmpsl
sbb
bound
andl
fildll
xor
pop
xchg
xchg
mov
adc
or
inc
repz
and
mov
in
in
dec
inc
xchg
ljmp
mov
cld
std
jge
sbb
testl
mov
test
and
stos
mov
mov
icebp
sub
je
sbb
cmp
cld
lea
jge
xchg
mov
popa
and
pushf
lahf
dec
dec
leave
mov
mov
mov
jmp
test
xor
dec
stos
or
or
cmpsl
ja
dec
divl
sub
bound
mov
dec
push
inc
inc
dec
jge
cld
xor
fmull
push
add
cltd
ds
paddd
outsb
daa
addr16
sahf
lcall
lahf
inc
push
inc
pop
fisttps
aam
popf
mov
es
sarl
insb
icebp
stc
mov
jns
mov
push
xchg
into
pushf
xorb
nop
in
xchg
or
lock
bound
jae
xlat
outsb
lahf
push
lcall
in
xor
lods
and
fcomps
cld
inc
mov
test
xchg
cmp
sbb
jb
push
inc
incl
cmc
push
scas
pop
jnp
movsb
int
and
cli
cli
lret
adc
push
outsl
push
psraw
xchg
cmp
sarl
adc
mov
sarl
sbb
lret
push
add
push
test
mov
popa
xchg
sub
sub
mov
sahf
addr16
ljmp
pop
jb
and
cmp
inc
loope
icebp
rclb
insl
jge
xor
popf
sub
mov
aas
mov
push
sub
pop
aam
push
in
mov
lea
mov
push
or
fisttps
lea
lods
lods
in
les
push
mov
ja
xlat
in
bound
cmp
or
popa
in
mov
push
data16
mov
jne
addr16
aas
dec
cltd
cmp
in
loope
cmp
sbb
mov
xchg
pop
add
into
mov
jle
cltd
lea
lock
adc
mov
cli
xor
sbb
sbb
sub
fimuls
ud1
dec
pop
jb
adc
lea
dec
loope
mov
fnstenv
into
adc
cs
pop
mov
push
imul
add
ljmp
jecxz
mov
jnp
ret
mov
repz
repz
clc
ret
mov
sbb
xchg
sub
or
aad
xchg
jp
sub
sbb
dec
cmp
and
push
mov
in
clc
insb
sub
mov
out
cwtl
jbe
inc
jns
push
lcall
or
and
xchg
sub
sahf
jp
cltd
sbb
pop
sub
push
lcall
sbb
lock
aam
add
out
cmp
push
pop
or
stos
fs
leave
or
pop
xor
mov
add
xchg
cmp
icebp
stc
and
mov
mov
ficoms
call
cs
shl
fimull
lds
rcl
mov
push
out
mov
sub
fwait
lea
dec
pop
insl
ret
in
jl
cmpsb
mov
movsl
push
jp
xchg
dec
lret
movsb
mov
insl
insl
mov
or
add
xor
mov
insb
push
lds
pop
scas
rcrb
cltd
xchg
pusha
es
or
push
sbb
aas
jae
sub
xchg
push
pop
ret
mov
je
and
pusha
sub
ja
inc
outsl
loopne
scas
shlb
inc
xchg
and
sbb
and
cld
xorl
stos
mov
lds
icebp
add
adc
push
popf
sbb
and
xchg
jae
mull
bound
mov
loop
add
jnp
pop
aaa
dec
jp
add
push
adc
lahf
push
sbb
ljmp
lods
or
imulb
xor
inc
out
imul
add
adc
stos
lock
adc
or
jbe
add
nop
mov
jae
xchg
mov
ja
addb
lret
in
mov
mov
or
lret
jbe
adc
mov
test
xor
mov
or
cltd
xchg
and
xor
or
rorl
pop
ljmp
push
fsubs
lahf
adc
mov
loop
repz
cli
xor
inc
push
dec
inc
cmpsb
enter
dec
xor
xchg
push
xor
stc
ret
sub
xchg
icebp
pushf
stos
jne
in
jno
in
and
jle
loope
popa
xor
decb
pop
popf
rcrb
cmp
mov
mov
mov
push
push
xor
jb
or
out
subl
mov
pop
push
mov
pop
rorl
cmp
mov
out
jb
imull
dec
or
cmp
adc
jb
les
sbb
mov
or
mov
enter
sbb
icebp
pop
sub
sbb
outsl
mov
xor
push
dec
loope
andb
aam
cmp
adc
or
pop
sti
loopne
lahf
push
mov
imul
inc
jle
jp
xchg
flds
cmp
test
cmpsl
or
or
xor
addr16
fdivrl
iret
outsl
mov
fisubs
sbb
outsb
inc
movsb
imul
orb
out
or
dec
sbb
stos
sbb
pop
pop
cmp
int
sub
pop
lret
mov
xchg
ret
aaa
mov
gs
mov
mov
jle
mov
outsb
dec
daa
cmp
ret
cmpl
mov
repz
cld
push
push
inc
push
pop
lret
xor
push
imul
xchg
fmul
pop
mov
mov
jge
cld
rolb
jmp
scas
test
mov
cmp
das
dec
mov
or
ret
pop
cmpsb
push
test
pop
pop
js
adc
add
dec
mov
aam
fwait
sbb
clc
stc
out
cmp
testb
cmc
fldcw
das
dec
add
sbb
sbb
xlat
loopne
xor
mov
cs
test
add
mov
xchg
add
into
stos
mov
in
xchg
rorb
mov
mov
mov
jns
cmp
jno
outsb
add
mov
adc
add
mov
shrl
xor
loop
pop
rorb
mov
movb
jp
out
std
jp
mov
fsubrp
mov
es
sub
xor
mov
stos
cmp
pop
ds
sub
jae
cmp
xor
and
aaa
pusha
test
pop
adc
inc
mov
adc
sbb
cli
ja
dec
test
in
mov
mov
shrb
pop
cmp
dec
cltd
adc
imul
ds
xor
or
cltd
cli
arpl
pop
adcb
ror
scas
xchg
divb
scas
cli
dec
mov
xchg
adc
xchg
add
or
bound
push
mov
lea
mov
adc
sahf
les
test
adc
xchg
xor
jns
jbe
and
shll
mov
inc
adc
leave
subl
mov
push
loop
pop
out
or
mov
dec
and
jbe
stos
enter
test
lret
iret
push
ficompl
jg
adc
fiaddl
sub
fneni(8087
shl
subl
mov
rcrl
clc
shlb
popf
inc
inc
or
inc
out
pop
cmpsl
jns
lret
and
repz
lods
dec
jle
cwtl
inc
sub
jbe
jmp
addr16
lods
inc
and
rcr
dec
nop
aad
pop
rcll
mov
jge
xchg
call
jmp
mov
ljmp
adc
xor
lock
insb
push
mov
mov
sahf
sub
lahf
adc
loope
in
lahf
pop
negl
insl
push
jo
es
xchg
jnp
mov
push
jl
sbb
pop
pop
outsl
cmp
add
and
mov
adc
call
cmpsl
xor
sub
cmp
test
ret
jns
outsb
or
jmp
xchg
xor
iret
dec
mov
pushf
outsl
jmp
call
push
cmp
jle
mov
dec
lcall
aam
sbb
mov
adc
test
fs
xchg
jecxz
mov
lock
xor
sbb
cmp
inc
pusha
insb
ret
push
fisttpll
adc
add
adc
push
cmpsb
cmpsb
outsl
add
aam
lahf
mov
push
push
adc
push
lock
push
mov
push
mov
aaa
adc
or
inc
or
mov
cmp
repnz
pusha
xchg
jne
pusha
repnz
out
cs
add
ljmp
sbb
in
fwait
test
aad
push
in
push
sahf
sbb
scas
xchg
orl
lods
and
jne
mov
dec
ja
ljmp
jbe
push
bound
jo
test
fst
mov
repnz
shrb
and
mov
mov
jmp
cs
xchg
cmp
mov
lcall
jbe
ret
inc
ret
jnp
in
pop
lods
jle
mov
pop
ret
pop
dec
sub
sbb
push
mov
or
pop
sti
add
cld
scas
dec
push
pop
repz
jge
inc
subb
cmp
adc
mov
ds
in
lahf
stc
mov
xor
mov
jb
pop
xor
inc
mov
ficoms
fs
stos
cltd
stc
lock
lahf
push
mov
daa
repz
dec
pop
mov
xchg
fwait
lret
shr
mov
fsubrs
pop
ss
xor
jecxz
xor
int3
movsl
pop
iret
push
fiadds
sbb
mov
sub
or
leave
hlt
mov
jp
std
into
xchg
popa
insb
imul
mov
mov
repnz
adc
or
push
stos
mov
test
ret
mov
push
sbbl
flds
test
inc
scas
jl
pop
mov
adcb
jge
and
jl
mov
dec
mov
and
xor
bound
int
dec
add
xchg
jl
mov
repnz
pop
out
jmp
mov
or
sub
and
popf
ret
lahf
xchg
cwtl
fst
cwtl
popa
popf
bound
sub
mov
dec
mov
popf
pushf
sbb
pop
adc
mov
pop
fwait
mov
cmp
dec
dec
push
or
lea
pop
adc
mov
dec
sbb
mov
sub
jle
inc
bound
dec
fdiv
popf
mov
ja
popa
arpl
jge
dec
popa
dec
in
or
mov
pop
pop
push
and
or
enter
cmp
xor
out
insb
shll
push
mov
in
lahf
cmp
jbe
fildll
fisubrs
sahf
cmp
js
inc
xorl
add
xor
clc
push
pop
repnz
jae
xchg
pop
pop
das
jl
sbb
int
and
mov
cwtl
pusha
mov
dec
ds
cs
repnz
pop
pop
mov
add
sbb
push
mov
sbb
fs
pusha
jmp
aam
jno
inc
ffreep
mov
enter
jg
mov
push
and
sub
rcrb
mov
or
insl
icebp
incb
sahf
jmp
fs
xchg
std
aam
mov
repnz
mov
pop
outsb
lahf
lahf
aad
or
push
mov
sbb
xchg
imul
jns
lods
cmp
sbb
je
and
in
inc
xchg
xchg
or
insb
pushf
popf
sub
add
movsb
mov
out
jge
lcall
sub
lret
pop
mov
pop
in
jno
ja
mov
sarl
push
cld
sbb
or
push
push
fcmove
cmp
or
fnstcw
call
arpl
je
pop
inc
lods
ret
pop
cs
movsb
or
test
mov
cmpb
adcb
cmp
sub
adc
fdivrs
rcl
inc
xor
js
and
xchg
push
stc
aaa
sbb
int
cmp
shrb
dec
or
stc
adc
dec
cmc
or
mov
mov
mov
pop
ret
loopne
inc
lods
ja
int
sub
jecxz
add
mov
jo
xchg
ret
mov
or
jle
cmpsb
scas
int3
xor
js
mov
dec
scas
xchg
negl
mov
jg
jo
push
aas
iret
mov
sub
mov
mov
mov
jp
mov
dec
js
add
mov
ret
push
jbe
xor
leave
jb
add
pop
cmp
xor
cs
jae
jg
xchg
xor
in
fsts
xorl
mov
lock
add
mov
pop
xchg
rcll
jno
xchg
dec
add
xor
hlt
pusha
js
sahf
cli
pop
inc
test
xchg
pop
and
nop
jmp
adcl
sub
mov
adc
jbe
fs
adc
fistpl
inc
adc
push
popf
mov
mov
pop
clc
xor
out
sti
popf
add
dec
jmp
mov
dec
stos
jo
cltd
pop
mov
push
fisubrl
pusha
xchg
pop
mov
daa
popf
adc
not
shrb
shll
ds
pop
testl
push
popa
arpl
movsl
xchg
das
cs
push
inc
ret
ja
cmc
cmpsb
pop
pop
push
sbb
test
pushf
fwait
mov
fildll
sbb
lahf
shrb
dec
jno
data16
out
add
orl
mov
stc
xchg
outsl
ja
les
jecxz
xchg
add
das
sub
out
pop
sbb
subb
mov
inc
jne
xor
xor
sar
push
dec
push
mov
scas
adc
lret
arpl
call
int3
pextrw
sub
leave
bnd
jecxz
arpl
movsb
mov
es
or
sbbb
jp
loop
jp
jb
clc
call
in
out
dec
add
mov
adc
inc
popf
loope
and
aaa
mov
out
std
sbb
ja
fiaddl
and
mov
js
inc
mov
and
cwtl
mov
sub
pop
dec
repz
gs
out
scas
lcall
fs
mov
aam
push
scas
xlat
in
clc
je
adc
cmp
sub
or
jmp
push
out
xor
imul
aad
testl
inc
adc
dec
mov
mov
arpl
sarb
shlb
xor
movsb
loope
push
insb
xor
mov
ja
mov
call
cmp
fimull
xor
mov
leave
cwtl
pop
and
loop
out
mov
or
out
xchg
test
mov
and
in
and
es
iret
fwait
cli
sbb
pusha
mov
mov
dec
fstpl
jl
inc
pop
repz
sbb
popf
jns
movsl
cmp
aas
or
hlt
adc
xchg
dec
mov
cmc
das
adc
sbb
das
roll
cli
flds
mov
stos
mov
push
or
popa
insl
mov
cmp
das
loope
rol
addr16
hlt
pop
insb
clc
js
popa
dec
mov
sbb
fmull
pop
dec
adc
aad
or
xchg
cmp
cwtl
mov
or
aaa
mov
sqrtps
mov
mov
ret
sub
stos
mov
rcrl
fsubr
nop
push
push
ss
jbe
js
or
bound
shl
add
pusha
mov
push
call
fld1
mov
mov
push
call
jmp
popf
in
xchg
and
xchg
idivl
add
imul
add
sbb
call
jbe
insb
sub
mov
cmp
pop
fidivl
out
test
mov
pop
stos
in
xor
pop
stc
mov
arpl
mov
insb
xlat
xor
inc
mov
mov
adc
cmp
arpl
adc
sub
popa
loope
sahf
rorl
enter
pop
in
ret
mov
leave
es
sbb
cmovl
push
leave
jae
add
sub
ficomps
add
dec
push
aad
mov
mov
cmpsl
cs
cmpsb
push
fyl2x
testl
xor
or
rcrb
jmp
cwtl
pop
rcll
pop
call
sub
inc
ficoml
stos
movsl
push
rcrl
and
mov
inc
mov
mov
scas
dec
mov
adc
roll
jge
in
jge
lahf
or
call
popf
jne
mov
sub
loope
imulb
adc
mov
or
xor
aaa
sub
fcomps
stc
inc
fldcw
mov
aad
loopne
out
into
sbb
pop
xchg
pop
stos
pusha
pusha
pop
pop
icebp
mov
xor
sub
popa
pop
lock
ljmp
mov
movsl
out
sbb
xchg
pop
fnstsw
add
data16
jne
xor
fidivrl
push
xor
dec
imul
sbb
mov
mov
mov
out
push
pop
sub
ret
fcomps
mov
insl
int3
cmp
pop
and
int
arpl
mov
xchg
sub
jecxz
xchg
inc
dec
outsb
jo
adc
cld
ret
sub
pop
or
adc
scas
or
fcoms
jp
pop
mov
xor
dec
mov
jecxz
in
dec
stos
aaa
dec
mov
sbb
or
mov
gs
mov
hlt
stos
inc
adc
jbe
je
mov
xor
dec
loopne
int3
pop
cmc
loopne
dec
push
mov
pusha
push
hlt
ds
cmpb
sti
test
push
pop
push
clc
sbb
pop
inc
dec
sub
cmpl
sti
xchg
sbb
inc
inc
pop
jl
and
stos
dec
dec
in
adc
pop
cs
stos
lcall
lcall
xchg
push
jb,pn
push
imul
lret
jg
fstps
mov
and
mov
dec
test
push
lods
loope
les
loope
mov
xor
mov
andl
mov
cmpl
fmul
jl
aas
pop
gs
les
in
mov
addr16
aas
call
mov
mov
jle
ja
cli
pop
mov
sbb
pop
sbb
sahf
nop
push
sbb
cwtl
xchg
lea
inc
aam
mov
clc
inc
fs
andb
es
fdivrp
xor
xor
xor
arpl
jno
add
jmp
lds
gs
lods
sub
lea
int3
xchg
cli
mov
ret
pop
arpl
jmp
sbb
shr
sti
idivl
repz
sahf
mov
xor
imul
mulps
xchg
xor
clc
xor
ret
enter
jge
scas
pop
xlat
mov
adc
pusha
pop
cmp
mov
mov
or
adc
mov
test
xor
pop
in
pop
or
sar
or
dec
cmc
sub
mov
jae
int3
add
xchg
mov
or
lcall
ret
dec
into
xchg
ret
ret
insb
jb
or
stos
mov
push
pop
popf
lret
bound
stos
ffree
mov
pop
nop
ja
roll
lcall
mov
xchg
sbb
xchg
addr16
push
out
lods
cmc
push
into
push
addl
insl
xor
lahf
adc
inc
lahf
jge
sub
pop
mov
dec
leave
push
xchg
xchg
and
jnp
out
es
scas
cmc
and
xchg
adc
and
fmull
sbbl
xchg
push
sub
push
ljmp
je
movl
and
lea
ret
sbb
jb
in
imul
test
cmp
sbb
in
loopne
mov
je
dec
pop
mov
mov
arpl
xchg
add
xor
aam
push
cmpsl
jecxz
sub
mov
lock
insb
stc
movsl
lahf
inc
cs
ja
fucomp
ror
pop
cmp
inc
lock
mov
lret
cltd
adc
aaa
sbb
repnz
inc
pop
roll
cmpsl
or
aad
mov
scas
imul
pop
imul
call
xchg
cmp
gs
add
cmpb
mov
xchg
rclb
sub
jg
cmp
inc
push
sub
push
mov
fmul
xchg
cli
popa
cli
push
jg
cmp
dec
jno
add
enter
jo
stc
xchg
lock
add
mov
adcl
mov
or
inc
daa
adc
andb
mov
adc
jbe
std
adc
cmp
xor
test
xchg
cmp
mov
dec
pop
data16
sub
jae
sbb
sbb
sub
stos
gs
in
mov
and
mov
fldl
mov
inc
mov
jno
insb
adc
add
pop
inc
mulb
ret
cli
ret
test
cmp
imul
ss
shl
add
fs
push
sbb
pusha
and
pop
mov
cmc
andb
ret
push
jne
dec
cmpsb
add
adc
les
cltd
xchg
adcl
les
xor
push
jge
or
ret
stc
jmp
ljmp
and
enter
dec
lret
mov
aad
out
loop
subb
xor
push
daa
sub
push
xor
push
jns
arpl
jge
mov
fwait
mov
mov
pop
enter
push
mulb
mov
lock
xor
and
test
scas
shll
iret
repnz
mov
pop
sub
inc
gs
mov
mov
test
jecxz
xchg
test
jns
dec
jg
xchg
popa
lahf
imul
pop
mov
xor
cwtl
sahf
inc
leave
je
cltd
gs
dec
jo
add
or
cmp
xor
jmp
adc
and
adc
pop
out
mov
inc
scas
ss
ror
inc
ret
adc
scas
shll
cmp
inc
sub
jbe
jae
add
pop
mov
dec
jb
adc
pop
add
pop
xor
sub
or
clc
and
sub
inc
and
lret
bound
ja
scas
shr
and
mov
jbe
nop
jbe
mov
pop
jb
inc
loopne
mov
xor
aad
loop
stos
push
mov
dec
pop
jmp
push
add
subl
lret
stos
xor
xor
xchg
jae
mov
mov
aaa
mov
mov
rcr
xchg
lods
pop
out
mov
mov
loopne
repz
pop
mull
adc
fwait
repz
loop
push
imul
sahf
clc
imul
roll
sbb
ljmp
inc
inc
cmp
andl
dec
jp
rcrb
pop
test
movsl
xor
or
push
push
adc
mov
call
inc
ror
adc
scas
pop
inc
dec
mov
add
inc
dec
jne
mov
test
aam
sub
iret
or
scas
out
and
cmp
add
shlb
ffreep
lcall
in
in
jns
add
xor
pop
loope
mov
sbb
or
or
testb
movb
cli
cmp
add
std
xchg
mov
imul
mov
cmp
cli
jo
mov
jo
sbb
or
loopne
sbb
ds
dec
and
push
jle
mov
mov
push
aad
fmull
sub
movsb
cmc
mov
mov
mov
add
enter
pop
push
push
fwait
mov
cmp
mov
cmp
lods
jge
out
xor
sbb
xchg
mov
orl
xor
xor
and
int
cmp
cmpsb
ret
mov
jge
push
jmp
flds
out
lds
cmpsl
mov
pop
push
xor
and
or
or
pop
js
sub
ror
inc
outsl
rorl
outsb
jp
pop
adc
push
mov
pop
or
pop
jge
mov
call
xchg
xchg
jb
ljmp
xchg
nop
or
jno
pop
popa
and
imul
icebp
jnp
jge
repz
xor
outsb
stos
insl
push
xchg
dec
aaa
jle
jb
and
or
mov
mov
fadds
push
sub
jp
pushf
fadd
test
outsb
rcrb
fwait
test
fcompl
dec
das
add
popa
fnsave
popa
int
int
push
inc
inc
mov
pop
xor
xchg
jle
dec
stos
sub
adc
pop
jl
movsl
jne
pop
daa
or
outsl
aam
sbb
jg
sub
subl
or
and
lret
out
sti
sahf
fcmove
stos
cmp
pusha
push
ret
sbb
or
pop
or
mov
push
xor
pop
test
cld
fisubrl
cwtl
ds
loopne
test
mov
mov
adc
xor
pop
fisubs
fldl
sbb
sbb
add
xor
fwait
mov
lds
dec
mov
xchg
add
in
jl
cmp
sbbl
push
fisubrl
dec
into
fwait
xchg
dec
cltd
pop
sbb
push
xor
fwait
push
push
pop
rorb
in
aad
scas
ffree
fistps
daa
fsubrl
jg
push
mov
xor
addl
cmp
push
or
sub
xchg
mov
sbbb
push
cmp
rcl
in
mov
mov
xchg
jge
repz
pop
sbb
jg
adc
imul
fdivr
pop
cs
test
push
jmp
cmc
pop
dec
hlt
pop
aaa
mov
clc
xchg
add
push
jle
out
fnstsw
sub
ljmp
xor
data16
and
xor
mov
inc
adc
xchg
in
je
in
adc
lock
nop
fdiv
les
adc
mov
sbb
ds
jb
int3
or
imul
negl
aas
cmp
jb
jg
enter
and
fistpl
and
rolb
pop
xor
inc
fnstsw
scas
hlt
mov
mov
push
loop
or
enter
pop
sbb
sahf
idivl
cwtl
fucomi
xchg
jmp
and
add
aad
fimuls
cmp
mov
pop
ret
xchg
int
pop
lods
jnp
ljmp
inc
adc
call
lds
and
xor
sar
movsb
xor
xchg
fists
or
movl
sbb
add
in
nop
popf
rcll
in
inc
jo
mov
xchg
les
sub
mov
adc
cli
imul
mov
or
dec
cli
in
cwtl
jbe
push
inc
sarl
iret
pusha
ret
lea
dec
popf
cmp
push
dec
out
inc
imul
dec
sbb
dec
sub
hlt
aam
dec
rcll
push
mov
add
mov
ret
dec
andb
lods
mov
mov
mov
cld
adc
sub
cmp
and
mov
shll
hlt
adc
aas
into
or
cmp
lods
pop
cmp
mov
in
jno
adc
les
inc
cmp
pop
fisttpll
xor
imul
jl
aas
cmp
mov
subb
js
arpl
fldt
mov
int
jmp
call
and
iret
iret
fstpl
xchg
adc
push
mov
push
sarl
inc
jns
jb
jg
push
mov
mov
es
push
lock
xchg
adc
xor
jno
pop
inc
loopne
out
xchg
les
in
aaa
sbb
andb
or
shlb
cmpxchg
sahf
inc
mov
data16
and
lods
xor
xor
shll
sti
pop
and
fmuls
imul
test
adc
aas
lods
xor
fcoms
lods
pop
sarb
cmp
nop
xchg
cmp
sbb
or
push
cmp
or
test
pop
ret
mov
das
adc
add
pop
loopne
popf
jae
shrb
rcl
movsb
cmp
sub
push
lods
pop
lock
push
test
or
lahf
hlt
mov
mov
pop
lcall
imull
insl
scas
mov
xchg
cmp
or
mov
cmp
adc
or
mov
sub
dec
add
ja
cmp
fnstsw
mov
test
test
mov
in
xchg
jo
pop
or
popf
cld
jnp
orl
adc
xchg
add
sti
loopne
stos
data16
mov
cmpsb
mov
jae
std
lcall
fstp
sbb
call
mov
xchg
insb
mov
add
pop
jl
test
mov
mov
fstpl
and
mov
xchg
push
fldl
sub
mov
adc
std
mov
sub
dec
shlb
mov
mov
add
lods
and
aas
inc
cmp
xchg
dec
mov
movsb
jno
and
jp
int3
in
aad
insb
jb
sbb
sti
nop
and
adc
sub
js
mov
cs
es
adc
daa
xlat
fwait
jmp
push
mov
movsl
mov
cmp
cli
lret
push
in
data16
adc
popa
mov
inc
mov
out
mov
gs
fdivr
jge
or
mov
push
jl
cmpsl
out
inc
movsb
sbb
ret
repnz
add
adc
push
push
aas
enter
dec
or
clc
pop
ret
dec
shrl
jge
rorb
push
call
lahf
mov
movsb
iret
and
ljmp
push
sbb
sub
or
xchg
mov
xchg
unpcklps
push
mov
scas
xor
mov
inc
or
lret
xor
cmpsw
cmp
sub
mov
sub
xchg
fwait
pop
pop
add
ret
movsl
add
jl
dec
inc
iret
push
add
mov
jb
mov
and
push
cmp
out
xchg
lods
scas
jl
lea
inc
pop
test
xor
lds
stos
mov
nop
cmpb
jecxz
add
and
mov
push
and
fcmovne
popa
sbb
xor
xor
mov
loop
dec
or
pop
mov
add
cmpsb
loopne
push
push
iret
dec
mov
rorl
add
dec
hlt
mov
stos
mov
dec
setb
sbb
and
pop
outsb
lds
out
jmp
mov
mov
jle
add
pushl
pop
loope
rorb
bound
daa
xchg
or
ljmp
aam
xchg
pop
cli
ljmp
pop
outsl
sbb
sbb
out
shlb
sbb
pop
or
add
aad
mov
adc
rclb
dec
scas
jp
aam
or
pusha
xchg
je
cmp
imul
sti
xorl
sahf
jnp
push
inc
jbe
jb
xor
hlt
push
inc
mov
idiv
bound
ljmp
rorl
insb
or
and
or
fcom
imul
mov
add
test
addr16
add
test
les
cmp
cmp
jns
pop
jmp
or
sbb
mov
and
push
mov
stc
dec
inc
das
movsl
fldl
in
mov
jmp
fs
adc
mov
mov
into
push
insl
ret
notb
xchg
push
adc
scas
shl
loopne
adc
xchg
mov
in
pop
out
mov
outsb
lret
leave
movd
in
pusha
cmp
ret
sbb
stc
sahf
mov
aas
lahf
rorl
jbe
mov
cli
jle
mov
outsl
stos
add
cwtl
push
mov
daa
rcll
add
loop
mov
iret
jnp
daa
sti
lcall
push
mov
call
das
inc
push
push
repnz
sbb
and
in
push
xor
mov
inc
inc
add
test
sub
lock
mov
push
pop
xchg
cmp
push
jle
fsubs
jp
push
loopne
adc
xor
cmp
xchg
sbb
push
add
xor
cmpsb
outsl
pop
xchg
push
jae
bound
stc
push
negl
daa
notl
scas
inc
std
xchg
sarb
das
js
pop
test
dec
or
jae
push
dec
and
clc
mov
and
push
ret
imul
push
inc
pop
push
mov
mov
mov
mov
adc
shrl
mov
xor
movsl
scas
or
jmp
fildl
mov
inc
dec
dec
jg
pop
push
push
and
in
xchg
dec
xor
sbb
in
xor
mov
add
lods
push
testb
rcr
mov
aam
cwtl
mov
adc
cmp
pop
sbb
jo
fidivrs
dec
pop
jb
jns
or
nop
aam
lret
or
inc
shlb
cmp
sbb
shrl
dec
mov
pop
dec
fmul
pop
pop
ds
sti
sub
pop
and
xor
mov
dec
imul
into
ret
jle
into
loope
cmp
sub
addr16
xchg
bound
inc
xor
ljmp
lods
jae
sub
bswap
pop
jno
test
shlb
test
adc
jns
and
enter
cmp
cwtl
pop
in
inc
sub
movsb
subb
aas
pop
fsubr
jae
es
jno
test
loope
adc
or
paddd
lret
pop
add
cwtl
adc
cmp
inc
dec
dec
cmp
orps
test
add
mov
and
faddl
les
mov
inc
mov
mov
popl
in
adc
insl
cmp
test
sbb
pop
jmp
rorb
jp
rcrb
fsubrp
or
shlb
or
adc
pop
loope
mov
cwtl
jbe
mov
sbbl
jle
xor
pop
stos
jcxz
mov
addr16
into
fwait
and
stos
in
cmpsl
inc
mov
push
bound
inc
xchg
sub
fisubl
inc
mov
lea
scas
imul
dec
jns
xor
aaa
mov
cwtl
sbb
xchg
jg
test
in
cmp
lods
idiv
fs
mov
sahf
mov
xor
mov
fwait
and
push
andb
icebp
cld
inc
int3
inc
es
jnp
cltd
sti
sub
push
inc
cmp
psubsb
sub
xchg
out
jmp
jnp
push
mov
shll
ss
sbb
into
inc
inc
pop
mov
jl
aad
add
xchg
add
mov
dec
jl
movsb
int
aas
ret
cli
xchg
test
jb
mov
sub
adc
shrb
sar
rcrl
lods
test
in
int3
insl
mov
call
test
pop
gs
xchg
sarb
in
ds
cmc
out
bound
subl
and
pop
sub
sub
or
xlat
sbbl
add
loope
sub
pop
stos
out
mov
sbb
cmc
jg
jns
dec
and
inc
xor
ficomps
decb
pop
stos
xor
enter
add
cmpsl
mov
adc
loope
jno
adc
jno
les
and
inc
testb
xchg
sti
scas
aad
sbb
mov
ja
mov
fcoms
mov
into
testl
jns
test
cmpsl
outsl
cwtl
cmp
xor
hlt
leave
xor
scas
adc
ret
inc
xor
popl
out
lret
pop
mov
jmp
jae
mov
aas
jecxz
decl
push
arpl
repnz
sub
test
pop
dec
negb
cmc
mov
cmp
add
adc
loopne
les
mov
mov
lcall
pop
sahf
subl
repnz
or
loop
in
stc
adc
or
pop
cltd
inc
addr16
sbb
cmp
out
in
jae
orl
pushf
mov
and
pop
call
fs
xchg
daa
ja
xchg
stos
or
ja
loop
push
xlat
xchg
fucom
shl
lds
int
jae
jnp
repnz
stos
ss
xchg
gs
cs
dec
test
fs
rcr
push
insb
cmpl
add
mov
jecxz
mov
xor
or
notb
pop
mov
enter
clc
mov
mov
movsl
sub
ds
and
jne
jo
std
adc
out
dec
hlt
xchg
icebp
shll
sbb
inc
pop
insl
mov
mov
jo
mov
dec
jge
adc
mov
popf
aad
cmp
lcall
cmp
mov
and
push
lock
xor
jns
push
sub
xchg
sbbb
inc
jle
shrb
lock
sbb
sub
or
divb
mov
mov
mov
jae
dec
jle
mov
mov
roll
add
int
cmpsl
mov
xchg
stos
adc
outsb
ds
imul
repz
cs
in
inc
xor
test
ss
jb,pt
lahf
test
mov
inc
lds
stc
in
adc
scas
sub
js
push
clc
xchg
pop
nop
or
mov
mov
jg
push
adc
das
sbb
xor
jmp
cmp
insb
push
das
xchg
aas
mov
cmp
or
testb
and
test
in
rclb
cmp
dec
lret
es
sub
dec
mov
imul
xchg
movsb
xor
cwtl
pop
mov
cmc
enter
test
cmp
xchg
scas
das
push
sbb
or
into
mov
adc
sub
jle
jge
aas
push
xor
add
hlt
cmpsb
pop
pop
test
movsl
mov
cmpsl
xchg
iret
in
fldl
jb
ds
add
in
mov
rolb
pusha
aaa
xor
ror
pop
fiaddl
add
lret
jp
push
xchg
xor
fldcw
xor
sbb
jbe
loop
bound
jo
ja
inc
add
lret
and
sbb
gs
add
nop
shlb
fistpll
inc
mov
cmpsb
xor
sub
pusha
inc
sub
stc
adc
sti
in
add
pop
rcrl
sub
xchg
cmpsl
add
xor
mov
add
out
in
imul
push
imul
xchg
ss
cmp
sbb
jecxz
pusha
sub
repz
int3
dec
sub
xchg
dec
inc
out
lods
xchg
add
jp
icebp
sbbl
xchg
mov
xor
add
mov
pop
push
sahf
add
jge
aas
incb
mov
out
and
push
mov
push
lods
insb
leave
das
xor
sbb
cmpsl
js
test
outsl
mov
ret
inc
decl
arpl
mov
iret
inc
cmpsl
std
data16
adc
cmp
add
sti
mov
repnz
adc
mov
in
addr16
cmp
jb
sahf
fwait
out
mov
shrl
inc
add
mov
fwait
dec
mov
arpl
lahf
and
and
jns
add
fsubrl
imul
out
mov
mov
jne
out
icebp
loope
cld
mov
test
es
test
cmpsl
mov
jb
inc
xchg
repz
jecxz
push
out
les
out
test
pop
cmp
jle
sbb
and
or
imul
cltd
inc
sub
dec
rorb
adcb
sub
inc
sti
vpaddusb
insb
loopne
and
push
lds
fsubrs
jns
into
push
add
add
je
push
inc
jno
ss
stos
shl
adc
jg
xchg
inc
or
jmp
jl
xor
add
mov
dec
outsl
jne
add
fmuls
mov
fcomi
sahf
lret
add
xchg
sub
mov
sbb
sti
xchg
cltd
movb
icebp
sub
cmpb
sub
out
shrl
push
or
in
push
xor
mov
std
loopne
or
out
jne
mov
mov
popa
inc
iret
cmp
xlat
mov
push
je
push
add
filds
or
ret
cltd
outsb
xorl
ljmp
jmp
int
jl
sub
adc
shl
push
mov
inc
mov
insl
popa
cmp
imul
icebp
push
int
repnz
add
pushf
cmp
cmp
xchg
sbb
sub
mov
out
jp
pop
add
outsl
pushf
ljmp
mov
ds
dec
in
mov
jnp
test
push
push
pop
jo
mov
pop
out
pop
lret
mov
mov
add
fbld
xor
aas
mov
mov
clc
xor
call
adc
sbbb
in
rorb
idivl
xor
and
xchg
int
xchg
stos
sbb
mov
out
lods
inc
mov
das
cmp
sub
repz
icebp
adcb
les
adc
insl
test
sbb
pop
clc
sub
fmuls
mov
xchg
dec
dec
inc
jne
cmp
test
xchg
flds
xchg
outsb
es
imul
outsb
push
rorb
cwtl
pop
xchg
ja
rcrb
lahf
sahf
fidivrs
sti
jg
mov
or
imul
int3
mul
cld
ja
into
imul
aam
addl
aaa
les
notb
test
repz
jo
sbb
loope
call
and
inc
sarb
call
pop
xchg
out
mov
mov
pusha
adc
push
imul
lods
es
dec
push
pop
xchg
adc
ret
shlb
push
sbb
fisubl
ret
in
es
icebp
repnz
je
sub
in
pop
inc
test
and
add
lret
popf
push
pop
mov
jno
sarb
xchg
or
aam
jge
jno
adc
push
mov
test
repnz
jb
sub
cmpsl
jmp
push
mov
and
movaps
mov
lret
sbb
dec
rorl
jnp
push
jg
mov
adc
add
jno
aam
repnz
addr16
ret
repz
lods
mov
jp
in
cli
cltd
mov
lcall
aaa
std
xlat
adcb
cli
jo
in
add
jno
push
cmp
sub
mov
push
lods
push
mov
shrl
xchg
or
popf
das
icebp
leave
mov
mov
jmp
push
mov
flds
cmp
push
xchg
lds
push
mov
testl
sbb
lret
lods
aam
shl
add
mov
scas
into
stc
enter
xchg
fcoml
in
in
je,pt
repz
dec
stc
push
mov
mov
pop
test
push
cmpsb
jb
loope
popa
or
adc
sbb
cwtl
arpl
and
mov
mov
shll
add
jmp
shll
or
adc
add
jle
sarl
sub
fnstcw
lds
fistl
cmpsl
push
xchg
shl
pop
sub
aad
inc
scas
call
in
inc
sahf
repnz
lods
iret
pop
sub
mov
dec
xchg
mov
jmp
leave
add
mov
mulb
insb
mov
pop
mull
jo
enterw
pop
inc
jecxz
jne
imul
aaa
and
arpl
shlb
popa
testb
xchg
and
lock
mov
imul
push
cmpsb
jno
inc
dec
mov
mov
test
pop
pop
out
add
adc
sbb
sti
inc
test
add
in
repnz
push
clc
pop
icebp
push
mov
xor
sub
and
mov
cmpsb
dec
cmp
mov
in
fld
inc
mov
push
mov
lock
cld
test
push
fwait
jmp
popf
mov
push
push
orl
add
stc
mov
xlat
subl
mov
jmp
sbb
sahf
mov
lret
cmp
dec
xlat
and
fsubp
enter
pusha
wbinvd
test
movsb
pop
fcmovb
aad
mov
cmp
hlt
cmp
imul
pop
push
adc
pop
out
and
push
outsl
arpl
xchg
repz
inc
lcall
mov
loopnew
dec
ljmp
jnp
push
dec
push
das
fistl
mov
xchg
add
mov
sub
scas
sub
xor
and
mov
mov
jae
and
mov
sub
js
test
or
punpcklbw
mov
cs
dec
push
lret
push
pop
test
push
dec
push
xchg
lods
mov
mov
jne
jmp
sti
sbb
cmp
filds
pavgb
or
xor
sbb
fisttpll
aaa
push
push
and
loope
scas
adcl
subb
test
out
pop
mov
mov
pop
sti
cmp
mov
mov
mov
int
dec
mov
dec
das
push
adc
xor
cmp
arpl
fisubl
std
jo
sub
cmp
loopne
and
into
add
sub
lcall
lods
into
test
adc
inc
outsb
imul
cmp
mov
dec
lcall
pop
and
jl
int
vandps
inc
insb
loope
stos
scas
nop
push
inc
test
in
sbb
loopne
daa
ja
jl
push
aam
pop
sub
cmp
pop
dec
mov
inc
xorl
lcall
call
jecxz
sub
lea
and
test
cmp
adc
insb
mov
push
pushf
fisubrs
enter
lcall
cmp
lds
mov
cmpsb
push
andl
arpl
dec
bound
add
jne
and
push
mov
fists
je
cmc
iret
mov
dec
shll
pop
aas
mov
mulb
inc
in
lret
cmpb
or
mov
mov
icebp
das
loope
jmp
pop
dec
std
inc
add
cli
andl
mov
add
ja
cs
shlb
movsb
push
inc
dec
es
inc
mov
dec
adc
dec
jns
xor
sarb
xor
push
jns
xchg
mov
inc
inc
cli
and
xchg
stos
stos
xchg
xor
jb
mov
test
and
dec
cltd
jbe
es
cltd
stc
movsb
pop
xchg
hlt
cld
pushl
sbb
lret
jmp
out
add
adc
pop
push
jmp
xchg
lret
ret
leave
jmp
cmp
adc
mov
shl
jmp
lahf
ret
or
jae
xor
jo
xchg
sub
loop
fcomps
jle
das
mov
mov
jns
rcrb
adc
das
dec
mov
mov
cmpsb
xchg
xchg
stc
mov
out
pop
push
dec
int
leave
mov
xchg
and
push
shr
mov
fisubrl
xchg
mov
inc
pop
les
jnp
leave
mov
cmp
push
and
into
aam
test
ss
adc
jbe
dec
mov
and
femms
repnz
mov
rol
inc
add
mov
jmp
or
inc
rcrl
jg
arpl
loope
outsl
gs
dec
fwait
pop
sbb
shrl
mov
xchg
mov
push
jmp
push
push
push
and
jecxz
arpl
pop
mov
cmpsl
xchg
dec
shl
fstpt
lar
add
out
pushf
pop
popf
rorb
or
scas
repz
push
pop
dec
out
or
clc
mov
cmpsl
in
es
clc
add
ljmp
or
inc
add
gs
xchg
cwtl
inc
push
in
outsl
xchg
fiadds
add
test
mov
mov
cmp
into
and
insl
cld
inc
add
pusha
popf
sub
ret
in
jecxz
and
ljmp
sub
mul
cli
mov
sbb
pop
sbb
inc
negl
pop
call
cwtl
dec
fucomip
mov
aad
cmp
push
loope
lret
pop
cmc
xor
sbb
inc
leave
or
into
dec
adc
xor
pop
xchg
int3
jb
lea
leave
cmpb
xor
pop
inc
leave
mov
and
in
or
ljmp
jmp
rol
lahf
adcl
add
xlat
jb
jg
adc
xor
lock
aam
fsub
mov
movsb
dec
popa
push
push
mov
roll
dec
and
int3
enter
jne
test
outsb
out
sbb
push
jne
in
in
iret
jae
jge
lods
daa
jg
int
push
inc
js
cmp
xchg
call
iret
js
add
add
add
or
push
sub
xchg
xchg
mov
pop
mov
divb
aas
leave
stos
mov
jmp
sahf
or
out
sub
movsb
mov
cmp
shll
cwtl
jmp
lcall
fstpl
int3
jbe
into
jbe
fmuls
add
rcll
jg
cmc
mov
xchg
push
lds
inc
in
jnp
movsb
repnz
test
loop
mov
fwait
ja
leave
jmp
pop
mov
lods
sub
xor
in
pushf
mov
cmp
sbb
in
gs
lock
mov
inc
pop
test
sub
sbb
out
xchg
ljmp
aad
icebp
movl
ret
mov
pop
sbb
xor
daa
aad
fmuls
rep
outsb
push
movsb
sarb
psrld
lret
fistl
das
dec
xchg
int3
add
loope
lds
nop
and
ss
das
movsb
rolb
mov
xchg
add
mov
shlb
scas
mov
or
repz
or
mov
xchg
push
sbb
cmpsl
mov
pop
test
jecxz
fs
mov
push
and
adc
aas
sub
xchg
test
mov
mov
pop
mov
cmp
push
jns
ja
or
ds
dec
mov
xchg
pop
push
dec
pop
int
fcmovu
scas
inc
xchg
or
xor
jge
inc
push
mov
popa
jae
add
and
inc
nop
inc
sub
sti
jg
adc
mov
mov
test
lea
sbb
mov
jmp
cmp
mov
jae
shll
popf
insb
in
jmp
rcrl
sbb
shll
mov
mov
movsb
icebp
jp
test
xor
push
loopne
es
push
or
les
xor
pop
xor
and
test
icebp
pop
jle
add
push
ja
mov
mov
pop
pop
push
imul
cmpb
orl
cmp
call
cs
adc
ss
popa
ss
sbbb
ror
mov
pop
mov
test
dec
pop
lcall
sbb
pop
rolb
pop
jnp
xchg
stc
in
stc
testb
xor
leave
cmp
jge
push
xor
mov
pop
cmp
mov
dec
sub
fidivl
pop
mov
lahf
jmp
jecxz
mov
xor
lret
dec
push
dec
push
mov
stos
jecxz
xor
in
push
mov
sbb
call
ffreep
fimuls
js
fmull
and
orl
cmp
loope
push
dec
nop
in
push
aad
dec
stos
adc
add
jecxz
test
popf
push
inc
fldenv
pop
dec
mov
fcmovnb
pop
mov
mov
roll
ja
mov
mov
out
mov
add
popa
cli
lods
mov
sub
xchg
push
mov
cwtl
adc
mov
jnp
xor
dec
imulb
jbe
mov
mov
call
pop
adc
sbb
int3
sub
lods
and
loope
dec
jne
or
fwait
mov
icebp
push
mov
sbb
testl
movsl
and
inc
ss
gs
lock
cmp
les
adc
imul
dec
push
cmp
fwait
mov
dec
jp
or
and
test
stos
shrl
std
jecxz
xchg
push
out
or
ret
test
inc
cmp
popf
sbb
pop
nop
out
fcoml
sub
and
xchg
lcall
idivb
enter
adc
orb
mov
out
mov
das
test
sbb
push
mov
xchg
call
dec
push
test
sbb
aaa
into
xchg
mov
pop
arpl
cmp
dec
jge
imul
mov
js
fwait
insb
fcomi
cmpsb
scas
sti
jecxz
outsb
mov
cld
and
lds
fcmovb
je
lret
cli
das
sti
pop
pop
notb
mov
shl
enter
mov
cli
xorb
or
and
xor
push
arpl
dec
ret
pop
mov
sbb
inc
bound
repnz
ret
data16
sbb
test
lfs
sarl
test
insb
das
mov
inc
dec
push
hlt
mov
or
in
xor
scas
mov
inc
popf
faddl
vmaxss
jmp
jge
mov
or
cld
movsl
cld
and
insl
scas
mov
aas
leave
pop
xor
out
jp
stos
mov
es
leave
shll
nop
movl
repnz
leave
sub
sub
shl
les
jno
mov
ljmp
xchg
jl
jp
xchg
cmpsb
inc
fwait
mov
inc
in
sti
xlat
pushf
jg
cld
cmp
mov
or
sti
or
dec
aas
outsl
pusha
aas
shlb
int3
loop
daa
mov
push
push
mov
cmpsb
and
pop
xchg
aaa
das
or
inc
xchg
and
inc
adc
or
dec
loope
das
imul
dec
daa
movsl
test
adc
test
stos
wbinvd
aas
stos
mov
inc
repz
sub
icebp
loop
mov
jecxz
adc
jge
lcall
rcrb
sub
addr16
mov
sub
mov
and
mov
xor
popf
or
data16
mov
cmpsl
lahf
or
pop
sti
movsl
icebp
push
mov
dec
fsubrl
iret
pusha
pop
dec
xor
pop
pop
sahf
fbstp
outsb
xor
int3
pop
pop
lock
movsb
sbb
sbb
adc
js
mov
push
mov
cld
int3
mov
lock
les
sbb
push
cmp
das
test
mov
enter
in
add
out
lds
jnp
dec
cmpsl
sti
push
mov
mov
jmp
repz
adcb
mov
rcrb
ljmp
push
push
lds
lock
push
movb
pop
insl
jbe
ss
jno
mov
hlt
add
and
push
bound
lods
mov
push
add
rcll
gs
fidivl
pop
rclb
cmp
insl
loop
adc
idivl
inc
sahf
iret
mov
push
cmp
jg
ret
nop
fcomip
ljmp
cltd
cmpb
bound
mov
js
pop
dec
cmpb
or
neg
mov
and
bound
or
dec
or
xchg
or
fsubr
push
mov
test
scas
faddl
and
movsl
mov
and
ret
fwait
dec
ljmp
clc
mov
cmp
dec
dec
dec
scas
test
adc
inc
cmpsl
xchg
fisubl
aad
out
int3
mov
xchg
cmp
fidivrl
jle
push
jl
xchg
lret
mov
in
cwtl
into
sahf
mov
mov
fbstp
mul
adc
mov
dec
push
lock
lret
rolb
add
jge
push
lcall
push
popa
xchg
aad
aas
push
rorl
inc
push
or
jl
mov
add
push
sub
stc
nop
clc
enter
fbstp
ror
out
push
pop
cmp
mov
add
sarb
js
jg
bound
add
test
dec
lret
or
dec
test
jns
les
dec
rcr
inc
adc
outsb
loopne
lock
xchg
mov
sub
daa
pop
fmul
fdivs
inc
sbb
mov
adc
or
sub
jne
or
inc
arpl
bound
sub
jle
repz
pop
xor
mov
sbb
mov
gs
cmp
cmp
cmp
and
mov
adc
xor
cwtl
pushf
pop
popf
jns
sub
stc
rcll
jl
push
int
jecxz
and
outsl
repnz
xchg
adc
xchg
or
jmp
ret
popa
and
call
ljmp
and
ret
pop
sbb
out
lea
ja
sbb
dec
loope
push
popf
idivl
sub
pop
push
mov
xlat
or
les
xchg
cwtl
cmpsb
notb
dec
dec
test
mov
dec
xor
outsb
jle
jge
mov
mov
test
and
push
cs
push
into
dec
mov
xor
inc
pop
dec
shlb
sbb
addr16
lret
mov
scas
fisubs
lock
into
adc
scas
scas
mov
or
mov
rol
push
mov
push
cmp
push
and
lods
icebp
std
mov
dec
cwtl
mov
mov
fisttpll
or
sbb
jp
mov
fucom
pop
lahf
jb
mov
push
jne
outsl
hlt
insl
popf
mov
or
js
pop
pop
dec
mov
push
mov
int
push
loope
iret
or
sbb
mov
stc
dec
xchg
in
mov
int3
sbb
jne
or
sub
sbb
in
sarl
adcb
mov
cmc
jns
push
push
add
jno
out
lcall
movsl
sbb
push
lcall
cmpb
and
int3
inc
xor
clc
xchg
dec
popf
out
sbb
outsl
cwtl
pop
repnz
shr
sub
xlat
jg,pn
shrl
addr16
out
das
cmpsb
xchg
or
jo
mov
nop
push
rcll
mov
loope
jle
addb
mov
mov
pusha
jb
jle
movsb
push
out
xchg
leave
sub
xor
sbb
jecxz
mov
insb
clc
lcall
jnp
and
stos
mov
cmpsb
mov
mov
adc
and
or
bound
and
xor
jnp
out
sbb
ret
jp
push
jecxz
out
lods
loopne
xchg
adcb
ljmp
ljmp
mov
bound
xor
es
fcomps
addr16
sahf
push
jmp
icebp
or
inc
cmp
aad
stos
movsl
mov
test
jge
in
pop
and
jl
add
mov
into
jge
rorb
enter
popa
xor
mov
sbb
fnstenv
mov
lcall
jbe
push
je
sbb
or
aaa
pop
mov
add
cli
fwait
jo
adc
sub
ret
pop
push
add
ret
cmpsb
mov
out
mov
pop
movsl
or
lods
mov
js,pt
mov
in
ss
mov
mov
mov
pusha
popa
clc
movsb
call
adc
outsb
xor
mov
mov
mov
ficompl
stc
mov
scas
bound
stc
adc
push
push
fcmovu
je
aaa
int3
ret
sbb
or
xlat
adc
cmpsb
sub
jne
xor
ficoml
sbb
sub
inc
addr16
adc
cmp
iret
or
pop
cmp
mov
sbb
std
jecxz
mov
roll
push
xor
lahf
add
into
lret
xchg
mov
mov
ljmp
xor
cltd
in
or
pop
cli
inc
cld
aam
call
dec
adc
js
mov
pop
ret
fsubr
int3
aas
popf
inc
mov
lods
xchg
bound
or
pop
mov
pop
out
jg
sahf
cld
mov
sti
inc
cmpsl
ss
cmpsb
shl
mov
cmpsl
sahf
enter
ds
stos
dec
sahf
mov
mov
aaa
mov
or
and
ja,pn
jmp
mov
sbb
jae
add
pop
aaa
addr16
test
pusha
cmp
cltd
mov
sub
std
adc
push
push
xor
add
cmp
push
mov
mull
ficomps
popa
loopne
or
mov
popa
or
fs
mov
sarl
mov
push
inc
jo
inc
in
mov
test
sub
rorb
imul
adc
and
minps
in
jl
dec
xchg
out
scas
mov
and
mov
push
es
or
mov
enter
add
mov
pop
dec
adc
push
mov
fwait
in
jmp
adc
movsb
mov
loopne
sbb
push
out
lret
jbe
jmp
js
add
out
fists
repz
out
bound
push
pop
cmp
and
adc
inc
mov
mov
test
shrl
jb
fcomp
stc
aaa
arpl
xchg
fimuls
cmpsb
outsb
mov
aad
mov
scas
in
fisttpl
test
sub
xor
mov
push
jmp
xchg
addb
push
pop
add
mov
test
pop
cmpb
jo
xchg
sbb
mov
je
rcrb
and
sbb
cmc
mov
pop
aad
movsl
inc
jecxz
xor
in
cmp
sti
adc
inc
aas
mov
cmp
pop
push
dec
pusha
jg
cmp
push
fidivrs
add
stos
jbe
jae
pop
das
jmp
push
insb
push
cwtl
cmp
lds
sub
xchg
scas
repz
or
leave
adc
cmpsb
out
adc
add
cli
clc
push
mov
and
icebp
inc
xor
or
mov
adc
jae
fsubrs
mov
in
dec
lea
pop
arpl
sarl
dec
inc
cs
xchg
xchg
pushf
dec
xor
mov
lret
jae
inc
cmp
sahf
mov
xor
and
daa
idivb
call
out
adc
sahf
push
in
adc
xor
roll
andb
les
scas
mov
outsl
fwait
inc
sub
sbb
aad
sub
push
add
lret
clc
sub
add
inc
push
sub
pop
pop
movsl
out
mov
adc
add
push
adc
test
negl
cmpsl
lea
and
enter
mov
pop
inc
dec
cmpsl
mov
arpl
push
inc
hlt
xchg
adc
mov
dec
pop
test
test
inc
shlb
add
fs
sbb
les
and
loope
xor
fbld
leave
lds
into
sub
add
cmpsl
inc
loopne
xlat
bound
sbb
xchg
jp
xchg
dec
pushf
dec
xchg
lret
cmpsl
int
mov
test
dec
xchg
lods
add
pop
xlat
jle
imul
mov
cmpsl
or
sub
lock
xchg
push
iret
jae
pop
add
inc
loopne
or
cwtl
adc
clc
adc
cli
sarb
or
iret
mov
and
cmp
sub
cld
fisubl
mov
or
push
cmp
jns
or
lods
movq
jle
adc
les
xchg
push
cld
push
xor
push
and
clc
inc
ss
fnstcw
jne
imul
popf
cs
ficoms
dec
mov
loope
pop
xorl
jmp
clc
jmp
out
sbb
jno
lock
push
inc
push
lock
cld
fsubl
paddw
push
test
fsubrl
pop
in
test
cmp
push
lea
push
push
xchg
js
cli
stos
cbtw
test
xchg
fsubl
push
mov
ja
stc
enter
pushf
sbb
mov
adc
lcall
les
das
inc
outsb
jecxz
test
mov
inc
ds
jno
sbb
cmp
aad
push
jb
dec
cmc
mov
xchg
dec
out
and
and
les
mov
push
fwait
out
dec
jbe
add
ds
fsubr
lds
test
push
loop
sub
jae
ret
sbb
mov
rcrl
jae
push
inc
jae
daa
ficomps
adc
insl
cli
jns
and
inc
mov
add
and
rep
insb
adc
jp
sti
xor
pop
fdivrp
pop
test
fnsave
mov
cmp
cmpsb
xor
popa
xor
pop
mov
popa
inc
pop
test
jg
sti
insl
test
sbb
jb
inc
cltd
mov
and
push
cmp
xor
ficomps
movsb
aam
cmp
in
es
xchg
mov
out
sub
mov
lret
cmp
push
jne
popa
testl
cltd
cld
clc
jge
add
cmp
sbb
loopne
sub
ljmp
lcall
pusha
insb
and
cltd
mov
or
mulb
mov
les
das
fwait
in
pop
in
ret
cmp
inc
sahf
mov
nop
push
adc
xlat
addl
push
sbbl
das
jl
into
in
lea
xchg
fstl
pop
andb
mov
mov
imul
mov
push
mov
int
sub
insl
mov
or
cld
lret
mov
je
out
sbb
fcmove
jmp
rcrb
repz
hlt
xor
jp
mov
data16
lcall
sub
stc
decb
movsl
outsl
je
imul
lret
popf
or
out
or
cmp
push
adc
gs
pop
sub
es
or
jbe
inc
loopne
movsb
ljmp
fwait
xchg
add
or
cwtl
jae
imul
sub
push
enter
sti
xor
sub
pop
aad
push
adc
test
pop
jg
pop
outsb
jmp
add
pop
movsb
cwtl
mov
fcomp
mov
std
and
pusha
jl
pop
scas
inc
arpl
jno
add
xlat
dec
in
cli
pop
jae
fdivrp
dec
daa
mov
add
jb
sub
cli
scas
mov
push
inc
pop
sahf
pop
fs
inc
or
pop
int3
in
repz
lret
add
push
cltd
push
add
or
cmp
repnz
test
dec
lret
jo
loopne
jecxz
insl
in
mov
in
repz
xchg
xchg
xchg
adcl
xchg
cli
out
lret
push
int3
mov
add
fisubs
or
int3
jg
push
cmp
in
fucomi
out
pop
andl
imul
sbb
mov
or
imul
inc
mov
mov
mov
mov
test
dec
movsl
js
sti
jmp
cld
loop
push
out
and
repnz
inc
ja
test
or
push
andl
gs
add
pop
orb
adc
lods
into
push
inc
aas
cs
addl
jnp
push
mov
or
cwtl
ret
fcmovnu
jo
sub
ja
inc
jge
jns
loopne
sbb
mov
or
add
mov
out
enter
ret
leave
in
pushf
sbb
mov
dec
lea
cld
push
pop
jb
xchg
test
add
in
xor
mov
testb
sarb
ss
pop
mov
scas
dec
or
pop
dec
or
movsl
jg
pushf
pop
ljmp
rorl
push
mov
mov
dec
clc
fdivl
pop
or
xlat
sti
push
mov
clc
inc
mov
cmp
mov
add
xor
out
push
shl
cld
icebp
mov
into
cmp
repnz
mov
test
cltd
xor
sbb
jg
dec
loopne
push
jno
adc
dec
mov
or
ss
xchg
inc
loop
negb
inc
fldcw
jae
imul
pop
mov
jp
or
push
mov
mov
in
jno
roll
adc
mov
enter
loopne
cmp
inc
dec
add
cmp
enter
out
pop
shrb
jmp
jbe
dec
addr16
fmul
pushf
add
sub
shr
aam
icebp
out
pop
inc
shlb
sbb
xchg
int3
daa
inc
insl
insb
mov
xchg
inc
leave
ds
daa
and
fmull
mov
cltd
mov
inc
fnstsw
mov
fsubr
ret
dec
arpl
std
jno
pop
lods
shll
sbb
adc
inc
cmp
mov
mov
add
or
dec
push
fstps
stc
cs
adc
sbb
stc
jo
in
loopne
scas
mov
sbb
jecxz
xor
cmp
in
fistpl
jle
imul
sub
dec
mov
ja
cmc
xchg
push
sub
pop
xchg
std
cld
lahf
or
ficoml
jp
std
das
in
dec
negl
out
out
lea
xchg
mov
push
and
fisttps
aad
lods
mov
stos
dec
ljmp
dec
or
scas
fnstsw
cltd
outsl
pop
andb
add
or
xor
or
aam
sbb
shlb
xchg
arpl
mov
dec
add
popf
andb
mov
sbb
filds
in
je
cwtl
jo
test
inc
xchg
outsl
push
das
ret
ss
mov
mov
js
flds
push
jae
scas
jp
mov
inc
mov
mov
adc
pushl
adc
dec
xor
or
insb
ret
imul
xchg
or
ror
dec
orl
lods
call
mov
jp
test
xor
test
cmp
sub
cmp
es
int
dec
and
lret
mov
or
jle
insb
test
or
dec
aad
stc
mov
dec
pop
aas
xor
enter
das
pop
jg
mov
sub
aas
cmp
je
sbb
xchg
push
sahf
sahf
adc
fildll
push
dec
mov
or
or
popa
xorb
sub
mov
push
dec
mov
cld
sub
mov
dec
leave
std
jmp
dec
inc
add
out
test
je
or
mov
shlb
lahf
jns
notl
lock
idivl
scas
stos
and
xor
add
in
ret
dec
xchg
mov
pop
push
xchg
lock
popa
fcomp
mov
lock
pop
push
jno
lds
popf
fwait
aaa
nop
sti
cmp
lahf
sub
sahf
cmp
xchg
lcall
mov
add
lods
test
cli
out
mov
into
mov
inc
push
jp
out
fstp
mov
push
push
fwait
popa
sub
hlt
push
stos
das
sti
pushf
gs
jne
lods
lods
fwait
adc
fildl
call
repz
aaa
push
xor
dec
jg
stos
lods
mov
mov
push
jns
leave
xor
movsl
loop,pt
mov
dec
stc
adc
add
xchg
add
xchg
xor
nop
gs
ljmp
sbb
mov
mov
je
sti
adc
sahf
xchg
clc
sbbl
ds
cmp
in
and
jno
divb
arpl
testb
lcall
jns
stos
clc
leave
cwtl
xor
movl
test
fwait
mov
jno
pop
xor
in
push
adc
cmp
inc
mov
into
mov
insb
sub
pop
cmpsb
decb
xor
push
cmp
pop
testl
scas
rolb
mov
sub
leave
loopne
sti
je
dec
lret
adc
cmp
scas
mov
push
sub
insl
repnz
mov
fadd
mov
imul
leave
pop
test
xor
mov
es
xchg
clc
aad
out
das
and
mov
jb
xor
push
xchg
push
add
out
imul
mov
jge
popf
ficomps
loope
sbb
dec
ficomps
mov
lret
pop
push
jecxz
mov
fmuls
out
fsubrl
sub
and
cwtl
jbe
push
iret
jb
cmp
inc
cmp
push
arpl
cltd
cmpsb
enter
sub
pop
ud0
sub
or
das
out
repz
add
hlt
sub
sub
push
mov
adc
jg
mov
js
adc
jl
jg
and
adc
leave
pop
test
jl
loopne
mov
xchg
dec
sbb
push
cwtl
dec
push
imul
adc
mov
in
inc
and
sub
es
and
cld
pusha
in
rcrl
or
pop
loope
add
clc
mov
sbb
mov
mov
loopne
mov
xor
lea
cmp
insb
popa
xor
test
pop
adc
xlat
mov
mov
inc
mov
mov
push
or
leave
cmc
adc
adc
push
les
jl
inc
adc
xchg
push
loopne
inc
jo
push
inc
inc
mov
xchg
adc
adc
repnz
daa
jae
out
push
or
or
std
jb
push
inc
push
cwtl
rorl
jmp
int
sbb
fsubl
in
je
xor
mov
pop
fsubrl
cltd
adc
mov
add
ljmp
shlb
stos
rclb
or
jecxz
jmp
imul
pusha
add
mov
inc
dec
adc
jb
xor
nop
les
pop
addr16
out
out
outsl
jecxz
scas
test
cmp
mov
cs
sarb
xchg
dec
popa
mov
add
popa
test
adc
xchg
scas
popa
xor
mov
jns
outsl
cmpl
and
ret
loope
mulb
mov
jo
fst
dec
es
cmp
in
lcall
out
dec
sub
mov
pop
adc
xor
and
push
addl
rorl
mov
xor
xor
and
jle
lds
sbb
dec
lea
setb
lods
faddl
add
and
outsl
clc
rcrb
cmpsl
push
adc
data16
test
rorl
addb
pop
ljmp
or
lcall
insl
sbbl
push
or
nop
sbb
pop
inc
dec
mov
rclb
lea
or
push
xchg
cli
sbb
mov
rcrb
adc
sahf
pop
push
pop
hlt
xchg
push
test
jno
popa
mov
adc
fwait
xorb
push
gs
dec
sbb
rorl
mov
divb
cmp
or
sbb
cmp
je
or
das
test
xchg
xchg
daa
add
cltd
cltd
nop
mov
adc
inc
mull
in
sbb
loop
test
lret
or
mov
mov
loopne
pop
cwtl
or
aas
dec
mov
jnp
xchg
out
jb
sarb
sbb
ret
in
scas
push
dec
jo
add
pavgb
iret
jmp
pop
mov
sbb
cmp
jns
fdivrl
js
ret
mov
insb
rorb
cli
push
jmp
repz
or
test
sti
cmp
adc
sub
or
gs
test
rorl
xchg
aad
pop
das
adc
xchg
push
bound
dec
cmp
mov
enter
outsl
insl
add
cs
adc
sbb
scas
xchg
hlt
sbb
inc
cli
pushf
loope
lcall
dec
gs
xchg
in
fnstsw
fisttpll
mov
je
dec
imul
push
sub
sub
pop
cmp
or
pop
out
mov
adc
dec
mul
push
out
inc
pop
push
enter
out
icebp
adc
dec
dec
test
mov
jbe
dec
es
jae
lret
inc
test
shl
cmp
pop
xchg
sbbl
or
push
jo
cwtl
negb
mov
insb
jns
ds
adc
addr16
adc
rcr
push
sti
jnp
pop
lcall
aam
push
xchg
stos
pop
mov
mov
shll
pop
in
sub
dec
ucomiss
mov
cmp
mov
je
jge
scas
sti
push
xchg
loope
mov
fdivrl
jmp
adc
in
mov
ret
dec
jno
repnz
je
push
push
cmp
hlt
cmp
sub
fwait
ja
dec
and
loop
cld
jecxz
and
dec
loop
mov
dec
push
and
imul
and
lea
push
sub
sub
dec
or
and
and
fimull
lea
sbb
fnsave
js
or
push
xor
xchg
mov
mov
test
mov
or
mov
popa
sbb
clc
sbb
repz
cmc
jl
es
sub
jecxz
xchg
aaa
test
add
pop
scas
mov
adc
call
sub
std
jge
dec
sub
out
imul
shrl
call
pop
js
jg
sbb
lahf
mov
sub
sbb
xchg
dec
movsb
xor
movsb
rcll
arpl
mov
cli
sbb
fs
add
push
sahf
cmp
cmpsb
lret
xchg
stc
xor
adc
sbbb
push
cmp
fwait
lods
cmpsl
test
push
mov
sti
push
mov
or
clc
or
xor
or
push
jno
dec
loop
jnp
call
fwait
push
jmp
and
or
stos
gs
clc
xchg
pushf
in
push
mov
scas
idivl
popa
cmp
dec
dec
xor
aam
xor
fstpl
das
jp
jle
loope
out
add
arpl
sub
rcrl
pop
rcr
scas
imul
jne
lds
lds
or
and
lods
mov
inc
test
pop
mov
sub
jecxz
in
mov
mov
ss
or
mov
adc
fcoms
leave
cli
adc
jle
xor
popf
inc
inc
cmp
jb
mov
mov
leave
and
int3
push
das
push
insb
lret
aad
jne
dec
andb
punpckhdq
outsl
adc
loopne
arpl
stc
jo
mov
jns
or
insl
aas
ss
xor
add
aaa
mov
jp
xchg
dec
jno
sub
test
insb
dec
mov
or
jg
aam
dec
xchg
mov
sahf
push
pushw
sbb
cmpsb
inc
inc
out
sbb
sbb
cmp
xor
enter
pop
inc
cmp
mov
fbstp
push
lods
dec
push
into
pushf
cmp
pop
xor
jae
mov
inc
leave
lods
loop
jb
out
pop
and
div
and
dec
sub
dec
jbe
sbb
add
insb
mov
lret
std
cmp
loope
aas
repz
xchg
inc
pop
jne
adc
pop
cmp
insb
jo
mov
lret
aas
bound
cmc
mov
insb
adc
or
sub
pop
cwtl
fs
sub
jg
mov
imull
mov
loopne
addr16
addr16
rolb
ljmp
dec
pushf
xor
sub
mov
sbb
scas
xchg
mov
sub
xchg
test
cs
in
lds
gs
int3
aaa
add
fst
jbe
out
insb
cltd
push
outsl
test
mov
enter
call
shl
repz
jmp
mov
jmp
fldt
inc
cmp
out
sub
cltd
je
sbb
xchg
dec
das
cvtdq2ps
jae
test
xchg
lock
add
es
leave
sub
xor
or
mov
movsl
cwtl
ja
jg
push
cmp
sbb
xlat
int3
mov
sub
lret
in
push
aaa
inc
in
push
shll
lea
aam
in
call
dec
xchg
lods
loope
mov
sti
mov
sbb
fcoml
mov
mov
dec
hlt
stc
mov
mov
out
aam
adc
mov
in
inc
push
xor
push
ds
test
jmp
xor
lods
cmp
negl
test
add
call
fdivrl
into
mov
adc
push
clc
mov
mov
jle
mov
push
leave
add
out
leave
mov
xor
cltd
jp
xchg
in
jae
jno
inc
push
mov
int
or
inc
hlt
test
cmp
cs
lret
rorb
lods
xor
lds
jp
pop
test
jb
mov
dec
das
mov
cmpsb
lods
cmp
sbb
pop
imul
inc
add
into
scas
xchg
push
rcll
rcrl
push
sar
mov
pop
outsl
cmp
fldcw
mov
pop
shrl
ds
ror
shlb
and
sbb
loopne
xlat
pop
out
mov
jne
mov
add
add
adc
testb
icebp
push
aad
jle
cmp
mov
in
scas
adc
jns
cmova
pop
aam
mov
sbb
cmpsl
aas
lods
fisttpll
into
movsl
mov
adc
aad
or
mov
push
mov
pop
fists
ds
adcb
mov
cli
aas
inc
fwait
dec
or
bound
and
jge
ret
jl
mov
dec
out
nop
test
repnz
jl
cltd
dec
das
rcl
cmpsl
dec
aam
aam
bound
and
cmp
sub
mov
movsl
in
dec
dec
inc
hlt
pop
loop
pop
and
xchg
scas
jb
std
jg
inc
cltd
psubw
sub
aas
mov
rcrb
out
aad
or
pop
lret
inc
xor
mov
cld
pusha
popa
push
jg
xchg
inc
shl
outsl
outsb
mov
jmp
ret
xor
orl
leave
xchg
test
or
pop
loopne
cmp
mov
mov
mov
cld
pop
sbb
push
test
pop
adc
sti
inc
loopne
cmp
shl
popa
or
mov
xor
and
imul
mov
cmp
mov
push
xchg
cmp
pop
aad
mov
mov
jns
icebp
jg
jmp
divb
jnp
lcall
mov
xor
daa
js
iret
je
cld
lods
mov
stos
jp
xchg
mov
cmp
mov
mov
loop
mov
pop
jb
in
or
test
adc
pop
cmpsl
loop
aaa
lock
jle
xchg
adc
jg
in
jns
jae
jl
adc
test
aam
aad
cmp
cmp
mov
cmp
fcoms
loop
sbbb
sbb
push
jmp
jge
cld
and
fcompl
and
jae
or
dec
neg
push
out
idiv
cmp
mov
add
mov
cmp
scas
rorl
or
jnp
xor
mov
mov
mov
xor
mov
push
jae
add
jge
repnz
clc
ret
movsl
mov
jl
mov
dec
stos
repnz
aad
gs
mov
pop
adc
insl
lds
int3
adc
je
xor
lcall
mov
push
jp
inc
push
and
sbb
sti
scas
mov
jmp
push
call
fucom
jnp
and
in
pushf
scas
and
mov
adc
xchg
in
cs
ja
cltd
and
mov
jge
jg
lods
sbb
mov
lcall
lret
mov
rcrb
add
push
adc
add
mov
push
add
mov
add
xchg
add
jbe
in
lea
mov
outsl
mov
out
and
fcomps
test
push
xor
pop
push
mov
lods
sbb
leave
mov
jmp
pop
filds
inc
add
outsl
push
mov
sbb
xchg
rcrb
push
out
fs
cmpsl
sbb
sti
push
jne
fucomi
std
shrl
cs
sub
push
loop
insb
pop
or
addr16
push
ja
inc
idivb
nop
lock
popa
repz
shr
jo
lret
lea
dec
inc
outsb
and
imul
scas
into
pop
daa
inc
cld
jb
int3
fimuls
and
push
push
mov
sub
xlat
mov
ret
popf
mov
shll
dec
es
hlt
sub
xor
dec
in
inc
out
mov
insl
call
ljmp
shlb
icebp
ss
jle
and
add
xor
jecxz
enter
call
adc
sub
xor
in
sahf
jo
adc
loope
sub
adc
xor
hlt
sbb
inc
push
cmp
dec
daa
mov
dec
cmpsb
or
sub
and
cmpl
test
out
scas
pop
gs
jns
outsb
test
and
das
sub
mov
inc
push
and
js
stos
je
xchg
mov
xor
jle
fsubs
gs
pushf
or
sub
sub
dec
addr16
inc
and
xor
leave
loop
shlb
and
mull
aas
ret
aam
xchg
or
jmp
mov
jl
mov
push
or
sbb
mov
add
xchg
jo
sub
stos
repz
adc
pop
in
mov
daa
outsb
test
sti
arpl
xor
inc
cs
stos
or
lahf
push
mov
in
stos
ret
imul
mov
xor
int
gs
inc
outsl
add
sub
mov
cltd
push
adc
pop
sub
data16
cwtl
add
cld
mov
ds
jmp
sbbb
mov
push
jle
movsb
stc
mov
sub
mov
mov
stos
dec
jb
lock
shrd
cltd
pop
jae
popa
mov
add
js
and
cmp
or
rcrl
aam
das
gs
pop
xchg
adcb
rcll
push
mov
mov
outsb
or
scas
sub
pop
addr16
stos
cwtl
imul
add
test
push
inc
mov
popf
in
test
mov
stos
push
adc
push
sub
cmpsb
popf
lret
cmp
dec
add
mul
jnp
int3
popa
fdivr
sub
xor
cmp
inc
jb
mov
insl
movsl
jno
dec
mov
cmpsl
lds
cmp
aas
jno
sub
fldcw
cmpsb
das
mov
dec
dec
mov
popf
push
mov
or
in
incb
adc
xchg
hlt
add
inc
and
xchg
test
xchg
push
loope
enter
out
fnstsw
test
xchg
xchg
mov
push
ss
pop
cmpsl
ret
mov
jecxz
xchg
push
mov
out
push
mov
push
sbbb
xor
fcmovbe
shll
jmp
or
data16
mov
inc
sub
jno
mov
int3
xchg
mov
mov
xor
pop
xchg
aad
daa
shl
notb
pop
test
lret
testl
dec
subl
mov
add
xchg
sti
rcll
mov
xchg
push
int
sahf
xor
or
lods
out
pop
std
mov
xchg
sahf
fsubp
cwtl
arpl
mov
and
xchg
and
aas
push
push
mov
add
dec
test
inc
pop
fistps
mov
sbbl
xor
xchg
push
hlt
dec
gs
jbe
shl
mov
jnp
cmpsl
jae
imul
push
inc
fdivrp
loop
or
xor
data16
inc
xchg
dec
repz
cld
sub
testb
leave
ret
jl
fbld
mov
sahf
jp
imul
dec
fs
xor
inc
test
les
xor
fisubrl
insb
cld
test
icebp
js
or
clc
in
aaa
mov
dec
mov
mov
mov
stc
call
es
sbb
sub
pop
outsb
repnz
push
std
dec
mov
sbb
test
dec
or
sub
mov
lds
in
jb
lahf
sbb
xchg
in
sbb
dec
call
push
xchg
jnp
out
stc
aaa
pop
xor
push
xor
pop
int
push
inc
std
gs
rcll
xchg
mov
in
push
orb
aaa
jb
daa
test
or
xor
es
add
test
sub
pop
add
pop
iret
adc
or
mov
loope
incb
scas
aas
inc
stos
xor
push
mov
stc
add
hlt
jl
mov
xchg
je
fistpl
xorl
cld
jb
aaa
fstpt
add
es
xor
add
mov
push
xor
and
xchg
and
push
push
pop
in
dec
add
ret
icebp
or
stos
cmp
sub
cmp
and
imul
inc
insl
xor
cwtl
and
sub
dec
or
jnp
test
mov
jl
add
mov
mov
sbb
jecxz
scas
popa
movsl
xor
xchg
pop
pop
cmp
cmpsb
repz
outsl
popf
in
out
cld
movsl
ljmp
lock
fwait
icebp
mov
lret
inc
mov
sub
jmp
fistpl
and
out
adc
aam
loopne
fdivrl
sub
fiaddl
and
mov
mov
adc
aaa
cmp
mov
inc
pop
dec
lds
cmp
cwtl
mov
rorb
ss
xor
xorl
out
and
scas
xchg
mov
cmp
cmp
sbb
pop
scas
adc
fadds
pop
xchg
out
imul
cmc
ret
xchg
xor
sub
mov
in
dec
fs
rcrl
push
popa
loope
dec
int
mov
stos
stos
jo
cmove
enter
mov
mov
repnz
pop
push
xchg
jnp
inc
pop
in
sub
movsl
inc
clc
lds
ja
lock
sub
mov
mov
lds
dec
in
movsl
mov
xor
cmp
or
pop
xchg
lahf
or
sbb
adc
add
ret
test
movsb
cmp
shrb
fwait
xor
mov
hlt
lcall
out
push
mov
es
sub
and
iret
dec
sub
out
filds
or
aam
cmpsl
mov
dec
push
xor
lret
add
adc
jmp
and
or
in
mov
inc
into
nop
push
jne
scas
cltd
jge
pop
ja
mov
lods
fstp
mov
sbb
or
sbb
fldl
adc
arpl
lods
mov
pop
pushf
inc
push
test
imul
iret
rcrb
test
xor
dec
fcompl
cmc
xchg
xchg
or
cwtl
sbb
xchg
into
rolb
cmp
add
mov
sub
xchg
pop
or
dec
xchg
jbe
mov
jecxz
adc
jne
mov
dec
lret
fistl
pop
sbb
mov
dec
mov
dec
add
popa
lahf
out
int3
cmp
addl
pushf
in
and
dec
addr16
in
add
xchg
adc
cmovle
mov
int
adc
imul
push
out
rcr
or
fwait
in
mov
push
out
jbe
and
fisttpl
mov
pop
mov
lods
pop
jns
dec
or
ljmp
ljmp
pop
pop
inc
popf
outsl
sbb
jne
call
mov
xor
int3
xchg
adc
jmp
pop
insl
xlat
mov
rcrl
pop
push
xchg
pop
pop
pop
and
xchg
cltd
subl
jnp
sub
icebp
dec
adc
shr
inc
scas
dec
cld
mov
inc
lret
ja
les
xchg
in
cmp
out
and
xchg
dec
pop
cli
pop
cmp
or
shrb
call
cli
addr16
add
or
mov
repz
je
je
xlat
call
pop
lods
sbb
sbb
mov
imul
sbb
sub
out
pop
ss
mov
inc
push
jns
push
xchg
mov
jne
test
cmc
sbbb
lahf
clc
or
lock
jmp
cmp
mov
mov
jnp
mov
cmc
xchg
cmp
push
cmp
fnsave
movsl
cmp
dec
aad
mov
mov
lds
or
mov
cmp
mov
out
jge
mov
mov
push
xchg
mov
jecxz
out
xor
popa
imul
cmp
jecxz
fucom
cld
mov
or
sbbl
stos
in
icebp
mul
xor
mov
shrb
test
mov
lahf
mov
jp
sub
ljmp
shl
xchg
xchg
movsb
test
mov
pop
pop
imul
or
fldenv
mov
mov
mov
sub
stos
inc
cmpsl
or
repz
shrl
loope
imul
int3
mov
inc
mov
adc
pop
add
cmpsl
and
xchg
addr16
inc
shl
xor
test
loopne
lcall
testb
xchg
in
fiaddl
adc
xchg
stos
rcr
cli
into
jae
pushf
pop
mov
or
jle
xor
xor
push
pop
cwtl
or
jge
sub
cwtl
rol
clc
add
decl
xchg
or
and
ret
cmpsb
sub
dec
pop
andb
mov
das
pop
xchg
sti
push
adc
add
movsb
loope
lods
mov
lret
in
sub
jmp
inc
cmp
push
xor
test
push
rorl
inc
nop
inc
popf
push
clc
loope
adc
popf
push
mov
shll
fists
xor
jmp
stos
pusha
and
cmp
adc
insb
dec
inc
sbb
aaa
push
push
mov
fstl
repz
and
fsubrl
xchg
sahf
jo
test
cmp
adc
push
or
es
sbb
pop
ja
cmpsb
inc
shrl
nop
sbb
mov
lods
pop
loop
andl
mov
push
testb
pop
in
mov
clc
sbb
out
push
inc
repnz
in
push
lcall
or
enter
mov
push
lods
dec
cmp
lret
sbb
int
es
adc
daa
mulb
pop
jb
movsl
rcll
outsl
push
xchg
or
insl
sbb
mov
jle
int
push
push
ret
cmp
fsubrp
shlb
int3
lret
jns
fisubl
inc
in
xor
fnstcw
aaa
add
cwtl
add
idivb
repnz
xor
shlb
mov
nop
shl
jg
xchg
cmp
hlt
push
xchg
test
std
insl
out
movsb
fiadds
dec
jg
xchg
daa
cmpsb
push
cmp
xor
ljmp
cld
add
jnp
inc
cmpsl
les
or
add
sub
hlt
pop
pop
mov
add
enter
pushf
pop
movsl
mov
out
es
pop
sub
mov
sbb
sbb
leave
xor
imul
dec
dec
shrl
js,pn
sub
jae
mov
jnp
push
push
out
inc
xor
push
lea
lcall
jp
int
cli
ja
cltd
ljmp
pop
cmp
sub
shr
test
push
mov
xchg
sub
mov
in
add
repnz
rclb
into
jle
rorb
ret
leave
out
stc
rclb
out
das
ljmp
notb
jmp
pop
ds
inc
outsl
rclb
in
pop
mov
inc
or
pop
push
jns
movsl
rcrb
fmull
dec
mov
fsubrs
fmuls
mov
out
jmp
test
out
sub
cmp
mov
pop
stos
or
push
pop
adc
adc
shrl
orl
lea
jge
jbe
push
or
idivb
xchg
addr16
mov
mov
jg
inc
adc
aad
fs
pop
xor
fnsave
popf
jg
cwtl
inc
fs
dec
xchg
mov
inc
test
xlat
loope
test
mov
pop
mov
cmp
jcxz
std
sub
mov
jge
xor
jnp
xchg
psubusw
mov
dec
or
pusha
imul
fcom
push
ljmp
lcall
or
or
xor
lret
xor
std
aam
pop
or
xchg
minps
stos
cwtl
xchg
push
push
loopne
aaa
jbe
mov
lods
or
jp
push
xor
imul
and
pushf
test
lret
cmp
sbb
sbb
dec
daa
int
pop
push
subl
dec
iret
hlt
notl
insl
out
sub
data16
jg
push
enter
or
cmp
cmp
aas
pop
roll
pop
jo
dec
pop
sbb
lock
sbb
add
into
dec
test
pop
gs
aas
in
and
bound
mov
clc
pop
jge
sub
sarb
and
push
mov
aad
stc
and
mov
jge
repz
and
cltd
imulb
pop
jae
adc
inc
xor
or
inc
insb
xchg
sbbb
and
mov
in
insl
cld
ret
pushf
test
dec
mov
pushf
jb
xor
test
xchg
xchg
ljmp
pop
jle
add
mov
je
test
out
xchg
adc
xor
jmp
cmp
sbb
mov
mov
fdivr
inc
xor
sbb
mov
xchg
sub
notb
les
insb
lcall
ret
idivb
dec
sti
cltd
clc
pop
mov
pop
push
je
cwtl
scas
mov
pop
fwait
mov
lret
cmp
imul
sub
pop
jnp
jecxz
mov
dec
pop
sub
pop
xchg
jbe
js
clc
jno
pop
movsl
dec
jl
mov
mov
push
iret
fisubrl
mov
mov
xor
aas
xchg
cmp
aad
fildl
sbb
or
mov
out
fsubp
imul
mov
add
int
or
inc
scas
pushf
sbb
call
mov
push
jecxz
icebp
sarl
mov
cld
stc
fimull
fsubrp
add
xchg
cs
repnz
dec
pop
add
cmp
mov
xor
mov
sub
shll
loop
sbb
push
enter
and
mov
icebp
push
xor
ret
rcrl
mov
push
sarl
inc
mov
in
rcrb
add
mov
scas
pop
cmp
mov
mov
add
push
mov
mov
imul
and
roll
or
push
aam
sub
jmp
data16
in
rep
ja
jecxz
cmc
or
and
push
dec
push
jae
ja
cltd
out
rcll
ret
pop
out
pushf
sub
jl
cmp
imul
sub
mov
mov
adc
aas
in
jp
adc
add
sub
mov
sbb
or
mov
add
decl
and
pop
and
lds
dec
mov
decb
dec
jo
add
sahf
add
lret
loope
adcl
jp
jae
mov
sub
xchg
imul
psubsb
aam
mov
sub
xchg
cmpsl
pop
jge
mov
jg
add
and
dec
subl
sbb
loop
push
jg
pop
mov
mov
out
xchg
cmp
es
push
and
inc
pop
cmpsb
sahf
lock
int3
sbb
imul
daa
adc
adc
ret
rol
inc
scas
pop
mov
inc
aaa
mov
mov
xorl
test
test
negb
mov
in
sbb
dec
sbb
mov
into
jnp
push
andl
out
or
aas
mov
xchg
inc
aad
ss
icebp
jp
lret
mov
out
or
lret
ret
mov
nop
addb
add
mov
lea
or
mov
in
repnz
sbb
pop
push
push
inc
fdivr
xor
fwait
dec
xchg
mov
push
jmp
outsb
mov
fs
adc
xor
andb
add
mov
aam
lcall
lock
mov
iret
cmp
cmp
mov
lret
mov
and
push
xchg
adc
leave
mov
mov
mov
outsb
cmpl
adc
stos
mov
subb
or
mov
cli
cmc
pop
jmp
sbb
loop
in
negb
and
inc
push
stc
add
insl
insb
pop
aam
std
push
push
mov
jmp
or
xchg
or
mov
rcrl
push
dec
enter
add
mov
mov
filds
mov
or
cmp
cwtl
pusha
outsb
movsl
inc
sub
and
mov
cmp
enter
mov
pop
lock
mov
addr16
in
pop
shrb
stos
test
popa
shlb
leave
scas
movsl
cmp
icebp
xor
repz
outsl
jne
into
sti
mov
sub
sub
stc
mov
and
push
pushf
ror
xchg
inc
pop
xchg
ljmp
mov
cld
int
stc
xor
gs
leave
sub
mov
cmpsl
divl
stos
iret
pop
lahf
mull
mov
cld
sub
mov
aaa
or
ja
and
into
adc
loope
inc
mov
std
ficoml
mov
sahf
xchg
enter
xchg
test
stos
pop
js
mov
adc
scas
les
push
cmpb
fcompl
adc
std
repnz
jp
andb
cmc
xchg
jle
mov
test
loop
aad
xor
mov
stos
cmp
mov
and
inc
dec
and
xor
aam
mov
dec
mov
insl
inc
test
jl
pop
mov
nop
arpl
cmpsl
mov
fwait
sub
sub
int
test
dec
sub
pushf
lods
cli
inc
shll
xchg
nop
mov
repnz
xor
lods
loope
sbb
jne
jnp
dec
ds
nop
addr16
push
xchg
push
loop
fmull
mov
inc
jbe
es
imul
sti
or
cmc
and
gs
fcmovb
loope
imul
dec
pusha
mov
pop
in
fwait
sbb
lcall
add
and
repz
test
icebp
test
shrb
mov
or
xor
ss
mov
or
movsb
outsb
test
cmp
nop
and
imul
jmp
fistps
sti
jmp
inc
xchg
jns
out
jnp
sub
xor
add
repnz
add
adc
mov
mov
jmp
scas
push
in
cwtl
iret
dec
jg
cwtl
movsb
decl
incl
jmp
aas
add
mov
ffreep
jb
sbb
fs
mov
add
mov
inc
popa
dec
dec
arpl
dec
iret
push
push
adc
lret
cli
decb
bound
push
jbe
insb
aaa
ret
dec
mov
xor
xchg
mov
pusha
mov
fnstsw
cltd
pusha
mov
jg
mov
imul
and
ds
fistl
gs
icebp
jle
jp
imul
pusha
cli
mov
mov
adc
inc
mov
out
mov
call
sub
test
xchg
jecxz
cmp
mov
mov
and
lahf
lahf
call
mov
inc
jb
jecxz,pt
mov
insb
icebp
and
cs
adc
add
and
pop
fldlg2
dec
sbb
fwait
mov
sub
jge
or
call
test
cmpsb
push
aad
jne
or
rcll
jo
arpl
lret
fisubrl
lods
jnp
mov
xchg
or
inc
inc
andb
mov
leave
sub
data16
rclb
pop
sti
and
insl
add
icebp
push
frstor
das
js
out
and
sbbb
notb
test
inc
mov
dec
sbb
movsl
mov
imul
ja
cmp
fwait
ret
or
sub
int3
clc
mov
mov
fdivs
push
xchg
adc
mov
jp
hlt
stos
sbb
mov
cmp
vunpckhpd
add
cmp
neg
stos
mov
mov
push
jmp
imul
dec
sub
setne
push
aas
aaa
ret
jl
enter
loope
mov
or
inc
clc
push
fldl
mov
daa
mov
jecxz
pop
inc
and
sbb
and
ret
movsl
or
push
or
adc
jg
sti
xchg
test
push
inc
inc
mov
ret
loope
jno
xchg
outsb
rcrl
shl
lret
push
push
cmp
or
dec
leave
or
pop
and
xchg
cmp
add
xchg
lock
mov
xchg
les
pop
notl
movd
sub
mov
rcrl
mov
lock
xor
sbb
in
jb
cld
push
lret
jns
js
popf
js
jl
repz
push
inc
mov
lret
subl
stc
inc
insl
mov
add
and
ljmp
mov
loopne
inc
inc
in
xchg
out
xchg
sbb
pop
mov
cmp
mov
jge
pusha
and
in
sub
inc
sarl
aas
dec
aad
repnz
mov
sub
rcrl
inc
adc
jge
shll
xor
fwait
lds
out
lret
js
push
in
xor
outsl
push
add
dec
xor
jne
push
adc
jb
in
add
fldt
mov
pop
mov
stc
outsl
int
cmpsl
dec
bnd
dec
cltd
xchg
fwait
popa
out
or
adc
pop
mov
xchg
mov
fnstenv
ljmp
lods
jg
cmp
jo
rcl
cmpsb
fnstenv
sub
shrb
sbb
mov
aad
repz
pop
lret
push
les
cmpsb
pop
fdivrs
adc
sbb
cmp
mov
imul
scas
popa
cltd
lea
movups
in
jmp
incl
dec
xchg
ret
xchg
mov
movsb
sbb
add
movsb
insl
sarb
jge
jg
mov
data16
stos
cmp
stos
lret
rorl
in
mov
mov
xchg
pop
xchg
stos
push
pop
sbb
mov
mov
xchg
sar
mov
test
and
out
inc
jo
lock
push
jo
cmp
out
ror
hlt
outsl
bound
or
pushf
and
ljmp
xchg
adc
enter
rorb
lahf
xchg
mov
and
mov
or
test
mov
push
mov
mov
fwait
push
jg
ret
jp
and
int
dec
push
jmp
jne
fsubl
jg
sub
stc
push
inc
stos
scas
imul
cmp
shll
sub
mov
mov
pop
testb
stos
inc
imul
jp
xchg
inc
jmp
test
ja
pop
mov
fsts
das
shrb
and
in
clc
outsl
rcll
ss
inc
repnz
inc
lods
aas
bsf
outsl
sti
adc
pop
mov
xchg
dec
data16
xor
dec
push
jns
dec
xor
sub
add
arpl
push
stos
jno
cmp
pop
cmp
and
mov
loop
adc
xlat
add
mov
faddl
sbb
sub
inc
xor
dec
imul
aaa
into
fwait
in
and
in
icebp
dec
fsubl
data16
in
stos
push
int3
fdivrl
pop
mov
pop
push
scas
push
fisubrl
aad
push
out
data16
or
xchg
roll
insb
nop
insl
sub
adc
dec
std
rclb
or
out
pop
loop
inc
sahf
loop
test
dec
xor
shrl
in
arpl
inc
loop
lret
aaa
aas
scas
das
sbb
jne
and
test
xor
cwtl
imul
sti
and
add
xor
xor
jno
lock
or
and
mov
jno
loope
dec
pop
dec
push
jo
push
xchg
mov
xchg
sbb
mov
push
xor
mov
adc
pop
cmp
cwtl
mov
pop
lret
mov
jmp
sbb
sbb
push
rcrb
jp
movb
iret
fistps
cwtl
or
inc
jo
cmp
push
mov
jbe
xor
lret
dec
inc
divl
pop
add
dec
in
scas
adc
mov
push
les
xchg
out
orl
movsl
xorl
jl
push
mov
test
into
and
leave
int3
cwtl
fcmove
push
mov
into
and
or
push
mov
inc
push
cmc
das
cmp
cmpsl
int
add
jg
xchg
jnp
xchg
leave
inc
lcall
mov
mov
sub
ret
mov
addr16
inc
int3
add
ljmp
push
push
in
fstpt
aam
jae
sahf
cmp
sub
push
mov
aas
xchg
inc
push
dec
cs
and
xor
inc
testl
pop
lret
cmpsb
xor
xor
rolb
fwait
shlb
cmp
cmp
jecxz
outsl
insl
push
iret
in
in
loop
mov
repnz
std
adc
add
mov
inc
adc
stc
mov
adc
lds
mov
cmp
pop
add
sbb
add
enter
mov
leave
je
and
mov
movsb
cld
aad
in
aam
mov
mov
cmc
inc
xchg
cwtl
aad
ja
scas
cmpsl
xchg
subl
mov
inc
fs
sub
add
dec
bnd
xorb
sbb
popl
scas
xchg
add
addr16
push
mov
or
adc
pop
push
adc
stos
rorb
dec
clc
mov
mov
xchg
negl
aaa
cmp
lods
mov
mov
xor
push
pop
fiaddl
push
sub
pop
or
mov
mov
or
add
mov
add
and
push
call
pop
ret
jo
sub
dec
loope
mov
cltd
push
pop
xlat
rcll
cmc
mov
mov
popa
scas
lds
xor
sbb
adc
jp
sub
push
xchg
push
sub
cmc
fwait
testl
cmp
stos
mov
ja
cmpsl
popa
cmp
push
adc
mov
cltd
xchg
mov
es
lahf
aas
loopne
inc
pop
mov
and
imul
push
xchg
cmpb
add
fcomps
xor
sbb
xchg
push
addr16
sti
mov
clc
das
add
sbb
addb
cltd
dec
scas
cmc
test
mov
jnp
dec
das
cmp
fsubr
mov
das
insb
or
hlt
inc
icebp
mov
pop
lret
loopne
xchg
fisttpll
inc
imul
sub
mov
or
cmpsb
mov
fadd
xorl
popa
lds
push
mov
mov
pop
xchg
ret
pop
inc
adcl
pop
je
pop
pop
out
iret
icebp
scas
mull
sbb
pusha
test
inc
flds
out
jae
adc
sbb
in
mov
mov
xchg
push
mov
cmpsl
rclb
or
minps
das
fnsave
mov
sbb
add
sti
xchg
in
xor
xor
mov
loopne
inc
adc
or
int
movsb
mov
jb
fucomi
mov
jle
loop
rcrb
mov
pop
jp
sti
int3
or
jb
xor
jmp
pop
fsubs
dec
shrl
cmp
adc
cmpsl
outsl
les
dec
add
cmpsl
outsl
clc
xor
outsb
fs
mov
ss
and
pop
push
ljmp
jecxz
inc
pop
test
add
mov
push
js
xorb
pop
push
imul
sarb
dec
mov
cmp
sbb
mov
fisubrl
cmp
les
cmp
pop
mov
sbb
dec
into
inc
pop
push
xor
movsb
mov
in
cmpsb
push
xor
dec
adc
rcrl
adc
jp
outsb
daa
pop
mov
mov
mov
xchg
add
in
adc
adc
sub
push
xor
ljmp
dec
gs
out
cli
dec
das
std
xchg
gs
loope
add
insb
mov
mov
popa
dec
xchg
or
pause
cmp
push
les
pushl
mov
inc
popf
xchg
popa
in
inc
mov
or
add
outsb
das
movsbl
adc
cmp
bound
inc
les
lret
repz
fmuls
pop
movsl
push
xorl
in
nop
inc
push
xor
cmp
xor
jmp
push
and
jg
push
adc
or
gs
out
cmp
fbld
rcrb
imul
rcrb
adc
lahf
mov
aaa
xchg
cmp
mov
loopne
mov
leave
imul
push
mov
out
sub
adc
mov
pop
pop
and
daa
pop
ljmp
mov
mov
jnp
cwtl
fwait
inc
cmp
clc
cmp
addl
jne
aam
xchg
pop
sub
and
fsubs
lret
shll
movsb
add
mov
and
xor
and
mov
popf
enter
push
negl
lea
jns
in
mov
sarb
jnp
daa
or
lea
push
xor
cmp
imull
inc
mov
ja
shlb
jno
jge
inc
cmp
insb
daa
push
pop
xor
lock
rolb
push
mov
xchg
pop
scas
dec
std
call
fwait
jmp
sbb
dec
push
sahf
jb
mov
insb
push
mov
pop
sbb
push
rcl
int3
dec
xor
stos
cmpsb
adc
dec
dec
arpl
bound
rorl
aas
or
jle
jmp
xchg
sub
in
repnz
daa
adc
sbb
push
mov
mov
xchg
mov
sahf
mov
push
jecxz
sbb
and
inc
xchg
in
in
data16
and
mov
sbb
dec
hlt
addl
in
fdecstp
and
fstpt
fnstsw
addb
cmp
add
movsb
or
mov
adc
cmc
aaa
pushf
pop
scas
adc
fs
pop
ds
test
addb
mov
test
scas
fists
add
cmc
dec
mov
test
push
pushf
sbb
stos
cld
xchg
aad
inc
pop
push
fmul
lds
lds
sub
movsl
push
mov
adc
mov
decb
lret
xchg
addr16
pop
andb
pushf
daa
sub
or
mull
push
mov
push
xchg
addr16
lock
cmp
jl
sbb
mov
mov
repz
in
dec
adc
fs
fsts
pop
jb
cld
cmp
scas
sub
or
aas
jne
mov
add
in
ficompl
data16
call
inc
fdivrp
and
movsl
test
jg
cltd
mov
and
sbb
jge
in
push
repz
fwait
push
mov
mov
cmp
dec
xchg
psrad
inc
cmpsb
mov
shll
outsl
adc
fstl
jmp
jle
inc
jns
sti
mov
fnstenv
insl
and
cmp
dec
xchg
xchg
shl
sub
cmp
mov
stos
test
vfnmadd213ss
aaa
xor
mov
and
fisttpll
push
add
fsts
dec
push
adc
bnd
cltd
cmp
xor
scas
pop
mov
and
mov
mov
in
push
mov
in
popf
scas
inc
mov
cmp
mov
pop
icebp
std
repnz
inc
hlt
push
loop
cmp
test
dec
lcall
cmp
inc
es
or
cmp
rol
mov
mov
into
cmp
adc
repz
xchg
mov
xchg
subl
mov
fdivp
inc
pop
daa
sbb
xor
fwait
dec
jae
dec
xchg
and
scas
fs
inc
fiaddl
sbb
lea
adc
rclb
push
add
jg
js
and
mov
cs
pop
xor
pop
nop
jg
stc
mov
mov
lret
adc
push
lret
push
pop
in
mov
or
arpl
cmp
push
xor
or
ds
fstps
pop
cmpl
jle
mov
inc
mov
ret
lret
je
add
dec
dec
mov
jno
loopne
fsubrl
jne
xor
xchg
test
cmpsb
stc
dec
cltd
xor
lods
cmpsb
push
jmp
out
pushf
fisubl
imul
jnp
rclb
clc
or
adc
stos
pusha
or
out
jno
add
push
xchg
scas
jbe
stc
push
mov
stos
fcoml
inc
or
and
adc
test
stos
ror
rcr
jno
mov
inc
cmpsb
sbb
or
es
sub
sbb
popf
dec
xor
divb
jp
ret
mov
aaa
mov
icebp
scas
or
aad
cmpsl
movsl
xchg
push
sarl
and
push
jge
dec
sub
rorl
outsb
inc
pop
jg
aas
out
jb
push
dec
and
or
sbb
mov
loopne
add
inc
sub
pop
push
repnz
cld
push
repz
xor
mov
sbb
and
lds
xor
pop
ss
pop
adc
int
mov
scas
mov
sarb
shl
lods
sub
shrl
push
jns
aad
mov
mov
loope
outsb
mov
sub
jmp
mov
movsb
scas
dec
or
fwait
outsl
sbb
xor
mov
incb
nop
cld
xchg
fs
stc
adc
inc
ret
fidivrs
or
xchg
scas
sarl
adc
inc
inc
shr
aam
adc
leave
mov
cwtl
ds
cmc
mov
test
lahf
insb
fsub
nop
jnp
fcoms
nop
cld
push
stos
repnz
lret
rorb
rcrb
sbb
out
and
mov
lock
cwtl
imulb
inc
adc
shl
jle
mov
lret
cltd
pop
fildll
mov
mov
pushf
lret
das
popf
sbbb
fdiv
ret
fcomp
jl
daa
push
push
pushf
push
daa
dec
cltd
mov
inc
pop
mov
mov
sub
xorb
loop
pop
adc
scas
sbb
sub
in
adc
or
in
and
mov
sub
inc
cs
cmp
mov
add
test
xor
mov
cmc
sub
shll
lds
adc
gs
fndisi(8087
ljmp
imul
fistps
das
test
in
imul
cmc
and
ja
in
add
das
rcrl
sbb
daa
jl
hlt
push
mov
sub
popf
sti
nop
dec
jno
ret
fwait
dec
jp
jmp
xchg
dec
js
add
test
nop
lods
push
enter
rclb
or
jle
test
add
and
dec
into
mov
outsb
lea
jns
xchg
aaa
pop
icebp
xor
or
insl
xchg
jne
stos
cmp
lret
mov
inc
jg
sub
cwtl
scas
or
pop
mov
mov
shll
movsl
scas
or
pop
inc
aad
js
xchg
sub
push
adc
test
pop
out
jecxz
xor
lds
push
out
mov
push
inc
push
xor
push
mov
test
in
stc
idiv
and
xor
idiv
rorl
test
mov
xor
mov
pop
sub
cmp
adc
xchg
scas
scas
mov
push
add
push
dec
iret
adc
add
lret
pop
sahf
int3
xchg
mov
sbb
mov
pop
pop
dec
call
push
lds
jb
fidivrs
sbb
mov
das
fnstcw
out
or
and
hlt
outsl
gs
sahf
iret
mov
test
cmpsb
or
ror
in
jns
inc
ret
daa
mov
adc
push
rorl
sub
gs
movsl
push
ret
icebp
xchg
jl
in
adc
jnp
adc
adc
mov
mov
and
dec
dec
or
pop
cld
inc
shll
pop
pop
mov
jle
sahf
mov
adc
cmp
les
push
int3
jnp
ret
add
rorb
jle
aaa
out
dec
fldenv
mov
push
push
xor
xor
push
push
adcl
mov
mov
xor
and
dec
xchg
loop
movsl
arpl
inc
or
push
mov
cmp
pusha
jle
mov
clc
cli
jmp
cmp
fisubl
cltd
lahf
dec
sub
jnp
std
into
push
lds
fistps
mov
in
cli
stc
add
jl
xchg
xor
pop
adc
dec
loop
adc
or
dec
addb
fs
cltd
and
xchg
push
adc
sub
bound
sti
fwait
sbb
or
add
mov
inc
mov
cmp
bound
sub
call
sub
mov
mov
rolb
andb
mov
imul
aaa
push
jae
clc
pop
lahf
adc
mov
sbb
mov
add
xor
push
mov
sub
mov
lods
jg
jecxz
jmp
jecxz
iret
sub
cmp
sub
cmc
aas
push
ds
and
iret
inc
mov
inc
pop
cmpsb
pop
mov
pop
sbb
cmp
cmp
mov
dec
incl
mov
out
bswap
mov
in
outsb
in
jle
insl
lret
fs
cmc
aam
sahf
in
sub
fldcw
xor
inc
mov
ljmp
hlt
addr16
in
or
and
ss
scas
pop
xor
repz
movsb
je
xor
fwait
scas
movsl
inc
add
cmc
xor
cmp
push
xchg
fnstsw
dec
sbb
ja
inc
sbb
jbe
aam
pop
pop
or
popa
dec
cmp
mov
and
fs
mov
es
cmp
mov
int
mov
pop
bound
mov
lock
cmp
xchg
pop
lcall
mov
pop
mov
xor
leave
adc
mov
sbb
enter
pop
rolb
jmp
and
xor
xor
sti
xor
andb
push
orl
aad
add
push
mov
sub
ds
outsb
lret
cmp
mov
out
mov
fucomp
cld
xchg
adc
jle
pop
in
mov
mov
sarb
add
mov
inc
subl
dec
and
iret
jno
add
shlb
cli
xlat
and
jmp
leave
pop
or
pop
sbb
fldcw
rcl
daa
jmp
mov
cmp
ss
push
jns
nop
adc
cmp
movsb
or
dec
adc
add
mov
bound
jne
arpl
sbb
popf
popa
xchg
imul
sbb
lahf
dec
inc
cmpl
scas
xchg
xor
push
jns
lods
andl
inc
sbb
nop
xchg
ret
push
cmp
sbb
pop
mov
mov
sti
add
sub
cmp
mov
or
push
xchg
cmc
shl
cld
jge
addl
xchg
in
stos
mov
sbb
cmpsb
or
iret
lret
jmp
pusha
idivb
arpl
push
mov
ljmp
fstl
pop
lret
add
dec
mov
add
lret
cld
push
mov
repz
pop
xor
sahf
and
pop
pop
and
lds
fnstcw
outsb
dec
xchg
sub
in
ja
inc
ret
out
jmp
or
inc
add
das
adc
pop
dec
mov
daa
push
rcrb
xchg
add
mov
mov
sub
pop
sub
pushf
and
test
rcll
jecxz
pop
pop
shlb
mov
jl
cmp
fwait
xor
daa
xchg
pop
push
and
bswap
or
push
test
mov
pop
mov
fwait
sbbl
scas
cmpsl
outsl
out
mov
cs
mov
mov
cltd
pop
or
sbb
or
adc
addr16
test
push
popa
mov
inc
mov
lcall
xchg
jge
mov
adc
adc
jmp
xor
and
pop
repz
add
and
cwtl
pop
lea
mov
bound
cld
adc
push
push
cmc
cmp
inc
iret
pop
pop
add
call
lds
ja
xchg
inc
lea
xchg
ljmp
push
mov
hlt
dec
push
movb
xchg
jnp
and
clc
ljmp
insl
jnp
sub
lods
cmc
add
lds
push
sbb
iret
call
xor
mov
mov
add
fs
or
mov
cmp
or
mov
jae
xchg
jns
popl
xor
sub
add
pushf
xchg
dec
cmp
rcrl
dec
pusha
lret
jecxz
cmc
jno
or
out
jge
aas
or
mov
push
mov
cmpsl
call
push
out
ja
ja
add
mov
sub
jb
sbb
adc
popa
xor
add
les
dec
xor
mov
mov
jl
mov
sahf
push
jnp
cmp
imul
dec
or
andb
iret
cmc
enter
data16
or
add
push
xchg
adc
xlat
int3
adc
cwtl
movsl
xchg
sub
dec
bound
test
jmp
jae
cmp
mov
xor
inc
pop
xchg
xchg
xchg
sub
mov
sbb
push
add
out
arpl
sbbl
ficompl
sti
mov
movsb
jb
mov
add
inc
lock
jb
frstor
sub
pop
push
xchg
or
dec
repz
in
cmp
jecxz
sbb
sbb
or
lahf
add
aad
imul
dec
lea
outsb
sahf
call
jecxz
mov
jge
dec
jno
test
sbb
xchg
notl
lea
adc
jo
push
xchg
pop
jg
shll
aas
mov
push
mov
test
mov
call
cld
mov
or
dec
adc
inc
fs
cmc
pop
xchg
adc
jle
mov
jae
push
repnz
jp
and
xor
outsb
mov
movsl
jbe
ror
bound
gs
lods
shrb
nop
dec
ljmp
insl
mov
rclb
mov
ret
pushf
adc
mov
mov
fidivrs
sti
cs
fsubs
loop
mov
cmp
mov
inc
orb
movsl
add
scas
icebp
imul
addr16
rol
insl
jns
enter
repz
cmp
in
cwtl
aas
adc
fcoml
mov
inc
push
neg
inc
mov
sub
arpl
inc
out
mov
push
outsb
jb
popa
pop
or
rcl
fcoms
ljmp
adc
push
roll
fnstenv
xchg
and
mov
xchg
ret
cld
imul
jo
stos
and
loopne
sub
ljmp
pusha
ret
xor
insl
mov
xchg
cmpsl
in
adc
and
out
add
mov
imul
push
in
pop
dec
lods
fldl
mov
fcomip
test
push
and
es
jb
mov
pop
outsb
inc
lods
pushf
jl
aaa
jl
sub
fidivrl
mov
lret
out
and
popa
mov
dec
xor
icebp
es
sbb
jne
in
aaa
cltd
enter
cld
xor
lcallw
add
ret
adc
dec
popf
push
hlt
sbb
and
scas
sub
inc
mov
es
xchg
dec
pop
adc
cmp
movsl
daa
fisttpl
nopl
bound
or
aad
xchg
fidivl
lret
nop
pop
inc
lea
mov
ret
dec
inc
pusha
sbbl
mov
cmpb
bound
movsl
iret
fcompl
adc
ljmp
or
aam
das
jge
fsubl
xchg
xchg
xor
adcl
jmp
sbb
mov
xchg
neg
out
xchg
push
xor
mov
in
xor
mov
mov
scas
test
push
and
fildl
shlb
cmp
sbb
xchg
in
adcb
lret
addb
fcoms
dec
xchg
adc
mov
imul
scas
pop
out
scas
sahf
jmp
sti
sbb
test
sbb
xchg
push
mov
shlb
rclb
adc
jmp
jg
js
pop
sub
adc
inc
jecxz
sti
and
jno
push
push
cmpsl
sbb
out
mov
mov
inc
mov
sub
sub
push
es
clc
mov
dec
or
loope
adc
push
mov
jnp
or
push
xchg
mov
add
xorb
add
push
and
dec
cld
inc
cwtl
mov
hlt
aad
lcall
aas
inc
bound
sahf
inc
lods
scas
xor
mov
cli
fstpl
out
xchg
and
popa
sub
mov
stos
pop
adc
lea
inc
inc
or
push
inc
in
push
pushf
push
adc
hlt
ds
mov
adc
xchg
dec
inc
aad
and
shrl
or
fld
mov
adc
scas
or
dec
or
adc
jp
sbb
push
in
cmp
scas
mov
testb
inc
sub
adc
adc
push
push
out
sbbl
push
push
outsb
push
inc
jns
mov
insb
pop
cmp
mov
std
jno
adc
or
into
out
mov
in
idivl
jl
shl
dec
fnstsw
iret
cs
or
pushf
and
mov
add
add
cs
sub
testb
mov
lahf
aad
and
mov
pushf
mov
and
jb
mov
jp
push
addl
dec
mov
sbb
testb
mov
mov
popf
add
mov
mov
hlt
xorb
fisttpll
mov
sub
cs
pop
mov
xchg
mov
stos
movsl
sbb
adc
movsb
xor
add
and
popf
push
ret
xchg
fiaddl
fwait
aaa
add
imul
cmp
inc
popa
sub
lds
inc
test
cmp
pop
fildl
add
int3
negl
pusha
or
mov
mov
bound
fcoms
jb
ss
data16
and
loopne
push
cld
mov
cmp
insb
dec
repnz
xor
out
roll
in
mov
in
jge
inc
lea
adc
jg
pop
xchg
pop
jne
cmp
in
xor
rol
or
dec
fsubrl
jmp
and
xchg
shl
inc
out
es
sbb
or
and
jmp
scas
js
inc
scas
aad
insl
in
mov
cltd
adc
add
mov
test
inc
jp
lret
adc
sahf
loop
jmp
test
cs
jle
dec
ret
loop
cli
les
jg
out
inc
lods
adc
in
rorl
sbbl
fildl
add
das
cmp
mov
sbb
in
mov
sbb
sub
imul
scas
jecxz
push
xor
out
cmp
lea
mov
outsb
leave
mov
add
clc
gs
pushf
inc
clc
cli
sti
es
sbb
rorb
push
out
je
pushf
xor
xchg
mov
ja
lcall
cmp
push
sub
icebp
xchg
rcl
addb
lods
xor
or
and
push
mov
sahf
fcoms
mov
cmp
jo
sub
or
or
int
dec
cmp
xor
test
push
mov
sub
pushl
ljmp
inc
push
jl
or
push
inc
xlat
add
lahf
rolb
adc
sbb
adc
add
out
cmp
adc
push
sahf
xor
pop
cmp
sti
push
sub
inc
insb
push
jns
pushf
ljmp
and
xor
clc
nop
xlat
push
cwtl
icebp
ja
mov
arpl
pop
fsubrs
xor
sahf
pop
jnp
or
gs
push
jbe
sbb
mov
cmp
fists
sti
rol
dec
fwait
add
jno
popa
add
stos
rcrl
cwtl
pop
shll
adc
rcrl
clc
aas
sbb
xchg
sbb
pop
aad
std
adc
jl
jns
push
xchg
xor
das
mov
or
ret
xor
outsb
imull
add
out
pop
add
jo
fs
ss
leave
sub
xchg
and
pop
xor
cmp
xor
rcll
adc
test
cmp
in
push
xor
add
jg
sbb
test
sbb
sbb
daa
mov
sub
notl
jg
pushf
and
cmp
lahf
sub
loope
jbe
aaa
gs
sub
popa
mov
cli
mov
lods
and
mov
test
sub
lea
mov
mov
dec
sub
mov
mov
test
dec
and
addr16
cmc
mov
inc
loop
stos
pop
hlt
in
mov
mov
repnz
jbe
mov
out
push
sub
and
pop
push
rcl
icebp
adc
outsb
add
add
aaa
mov
mov
leave
push
xchg
sti
xor
lock
gs
into
adc
andb
mov
fnstenv
loope
arpl
sbb
lahf
cmp
mov
out
mov
cmp
and
pop
xlat
call
mov
hlt
jge
daa
xlat
jb
in
add
enter
test
or
mov
add
test
jbe
inc
jne
adcl
and
jecxz
sbb
lea
imul
jle
mov
inc
in
sub
cmp
jmp
and
inc
mov
pop
mov
iret
testl
cmp
sti
adc
push
mulb
cli
insl
dec
jecxz
push
jmp
enter
xchg
aam
lahf
test
sahf
movsl
or
sub
mov
mull
adc
daa
cmpsb
daa
cmpsb
jbe
fcmovbe
call
arpl
es
data16
xchg
jge
cmp
cmpsb
sbb
xor
out
and
ret
pop
lcall
pop
iret
notb
cmp
negb
loopne
pop
push
mov
sbb
imul
popa
shll
jge
xchg
lods
mov
jno
addr16
js
xchg
in
popf
inc
sub
test
fdivl
and
cmp
or
lret
icebp
hlt
test
lea
mov
jecxz
mov
aam
stos
or
jl
jle
adc
rorl
push
cwtl
pop
push
push
iret
inc
dec
idivl
cmpsl
sub
es
push
jns
je
sahf
adc
add
and
mov
stos
or
mov
pop
sbb
fnstenv
inc
std
inc
push
adc
stc
loop
jo
mov
insb
aam
imul
adc
xchg
cs
xchg
pop
dec
stc
mov
in
inc
stos
lock
nop
in
aaa
mov
push
lret
popf
outsb
jmp
rclb
or
test
cmp
mov
in
xlat
fidivl
lods
imul
or
and
jle
lds
sbb
push
push
jb
test
lahf
or
out
lock
test
mov
daa
add
inc
mov
test
stos
test
ds
push
xchg
sbb
add
dec
cli
jp
or
outsb
sti
loope
push
lods
xlat
xchg
push
mov
out
outsb
scas
sbbl
and
aas
testl
sbb
push
int
in
xor
sbb
jnp
sbb
sbb
inc
sti
mov
add
jne
and
and
xor
leave
push
fstl
cmp
jae
fcmovnu
push
out
fldenv
mov
cmpsb
fiadds
das
xor
arpl
scas
adc
push
aaa
xlat
aaa
out
in
sbb
adc
mov
or
out
movsl
clc
inc
mov
push
dec
add
sbb
icebp
dec
fwait
sti
cmp
daa
sub
mov
lret
mov
imul
movsb
sti
mov
insb
and
push
push
lods
shll
fstps
cmp
mov
mov
lahf
or
int3
in
inc
fcos
je
imul
inc
cmc
cmp
cs
ret
jge
xor
jae
shr
insb
dec
adc
mov
push
cmp
rcrb
cld
movl
cmpsl
pushf
inc
pusha
movsb
pop
push
sbb
sbbl
jle
cs
lret
imul
in
jnp
out
rorl
sub
inc
das
xor
mov
repnz
popf
daa
fbstp
loop
or
inc
pushf
mov
sbb
cmpsb
push
push
push
xor
pop
inc
imul
or
push
or
mov
cs
out
adc
inc
and
hlt
xor
fucomi
adc
jle
xchg
lcall
scas
das
movsb
and
in
jnp
xchg
mov
fiadds
or
mov
fildll
adc
adc
mov
mov
push
out
popa
out
les
cmp
inc
icebp
sarb
into
cmp
and
frstor
out
test
and
jno
test
lahf
pop
lods
xlat
push
shrl
inc
sub
imul
shr
negl
inc
popa
sbb
cwtl
in
ja
lret
pop
mov
or
fs
adc
hlt
gs
cmp
in
rorb
sbb
fisttpll
pushf
call
and
fcmovnbe
cmpl
or
vzeroupper
and
dec
cmpsb
push
cmpl
dec
mov
lret
or
clc
cmp
and
mov
cmc
icebp
scas
push
stc
sub
mov
aad
loop
pop
scas
push
hlt
aaa
out
xor
sbb
pop
jg
sub
sbb
ss
or
mov
or
xorl
js
lods
fwait
and
push
adc
lds
xchg
insb
fsubp
pop
sbb
or
jmp
jp
dec
adc
pop
loop
movb
adcl
push
pushf
jne
lcall
sbbb
out
arpl
std
push
and
lret
icebp
es
sub
xor
xor
cmp
loope
pop
or
xor
aad
adc
iret
cmp
rcrb
cwtl
push
xchg
mov
sbb
adc
daa
fcomip
insl
popa
dec
pop
je
hlt
ret
iret
sbb
dec
lret
clc
pop
or
pop
mov
push
cmp
mov
or
mov
xor
inc
cmpsb
sub
mov
outsb
stos
xchg
pop
hlt
mov
mov
shll
dec
mov
push
inc
mov
test
rorl
sti
inc
jp
lea
mov
mov
mov
out
pop
stc
and
mov
shll
sarl
cmp
movsb
xor
out
mov
xlat
push
je
dec
push
sti
push
call
mov
xor
scas
jb
icebp
jno
sub
xchg
sbb
bnd
mov
mov
push
lahf
fwait
pushf
rolb
or
mov
mov
or
dec
imul
sbb
mov
push
cmpsb
mov
int
or
js
jno
pop
inc
dec
arpl
sbb
mov
cltd
xchg
cmp
movsb
fwait
jmp
jo
dec
sbb
fadds
cli
out
dec
and
pop
cltd
mov
xor
sbb
lods
sub
fcompp
je
and
pand
dec
and
imull
pop
inc
xor
clc
add
call
lahf
jbe
test
mov
jecxz
inc
mov
push
or
pushf
movsb
loopne
in
aad
divl
movsl
jb
pusha
std
or
mov
mov
mov
mov
mov
sbb
bound
mov
jg
xchg
pop
lret
ds
loop
and
xchg
and
mov
mov
sarb
cmp
lods
add
loopne
call
loopne
or
mov
mov
mov
lods
lahf
push
xchg
js
mov
mov
test
push
mov
orl
mov
mov
adc
jno
lea
adc
int
push
add
lods
mov
push
inc
arpl
jecxz
mov
test
mov
subb
test
adc
ret
dec
mov
or
imul
mov
cmp
push
jge
xchg
pop
stos
inc
and
mov
jg
inc
lock
sub
movsb
pusha
fdivrl
fidivs
pushf
push
test
dec
clc
rcl
sti
mov
insb
int3
in
inc
and
nop
leave
popa
mov
add
notl
sbb
std
int3
mov
sbb
add
xlat
fnsave
in
dec
cld
xchg
mov
pop
arpl
decb
dec
jmp
xor
xchg
push
and
cmpsl
adc
xchg
cmpsb
pushf
ffreep
mov
icebp
xchg
push
fsubrp
lea
repnz
xor
aaa
xor
icebp
xor
add
jae
push
mov
push
popf
test
dec
jmp
mov
out
dec
jne
sbb
xchg
or
lret
stc
cld
mov
add
inc
jno,pt
sub
bnd
push
jge
push
lock
sbb
or
ds
xor
mov
loop
sbb
insb
cmpsl
sarb
add
aaa
jmp
mov
mov
cwtl
fwait
mov
dec
mov
xchg
test
pop
mov
mov
inc
add
cmc
movb
mov
ret
add
dec
fsubrs
imul
push
and
pop
mov
iret
adc
fistpl
mov
test
imul
xchg
mov
shrb
orb
dec
jle
loopne
out
call
cmp
push
and
rcr
cs
jl
inc
push
cwtl
imul
stos
mov
jo
and
add
adc
dec
push
adc
and
inc
cmpsl
push
pop
add
or
sar
leave
jns
loope
mov
sub
call
insl
arpl
cmp
rcl
outsb
jno
jle
scas
xchg
inc
repz
stos
xor
mov
mov
dec
aas
xchg
jp
pop
sub
xor
and
outsl
pop
sub
cltd
sbb
cld
test
jo
sarl
insb
in
mov
and
leave
stos
mov
inc
insb
roll
enter
jnp
mov
push
into
inc
nop
fbstp
sbb
lods
rolb
imulb
xchg
daa
lahf
gs
aaa
xor
imul
adcl
mov
jbe
dec
adc
adc
xor
dec
inc
mov
jle
test
data16
popa
je
je
repz
testb
loopne
xor
dec
js
mov
jo
fdiv
push
xchg
mov
notl
add
pop
scas
ret
jp
pshufw
lcall
mov
cwtl
leave
mov
fistl
mov
aas
loopne
push
cmp
add
jp
out
arpl
or
push
and
inc
bound
dec
shrb
mov
mov
jg
push
test
and
jge
cmpsb
xchg
movsl
mov
andb
cmp
in
out
jns
sbb
inc
sub
jns
cli
les
xorb
addr16
fnstsw
icebp
cmpsl
and
cli
xchg
pop
loopne
sub
cltd
mov
push
jbe
in
cmpsb
scas
popa
leave
outsl
pop
jl
mov
mov
push
negl
cmp
bswap
adc
out
xchg
aaa
fstpt
adc
je
dec
rclb
xchg
popf
nop
mov
in
je
call
lea
mov
ja
test
nop
test
test
push
xor
les
cmp
lret
push
lcall
cmc
in
out
out
or
dec
sub
ljmp
ss
mov
insl
stos
pop
cltd
es
push
mov
mov
cmp
pop
in
inc
mov
fisubl
call
adc
mov
repnz
xchg
aam
out
and
nop
cltd
insl
sub
pop
cmp
mov
push
stc
mov
ficompl
sub
jne
mov
push
pop
xchg
push
lret
and
dec
out
out
sbbl
sbb
inc
push
and
mov
movsl
inc
jge
add
push
arpl
aam
and
jno
push
push
mov
loope
aad
popa
clc
int3
nop
dec
clc
mov
repnz
cld
cwtl
test
mov
jmp
push
out
push
rcrl
es
shl
cmp
into
out
inc
cmp
les
mov
sub
push
xchg
pop
mov
xlat
and
loopne
mov
fcmovnb
and
and
push
mov
xchg
popa
or
jg
pop
fstpl
mov
push
mov
jnp
dec
lret
into
stos
xor
outsb
pop
lock
inc
push
xchg
mov
jle
mov
inc
inc
int3
push
insl
sub
dec
jnp
shrb
pop
scas
cmp
push
cwtl
mov
aaa
insb
xor
repz
sbb
mov
int
push
mov
sbb
sahf
sbb
dec
and
fs
test
jecxz
popa
or
pop
scas
lods
outsl
outsl
orb
pop
jnp
push
shlb
xor
mov
lea
xor
imul
push
movsl
lcall
push
das
xor
pop
mov
popa
js
xchg
xchg
es
ficoml
mov
test
movsb
imul
arpl
mov
jo
jne
pop
subb
sbb
xor
fwait
rclb
rorl
lods
jg
stos
inc
mov
aaa
bound
inc
or
inc
pop
loope
push
cwtl
dec
cmc
hlt
sub
jmp
push
mov
xorb
push
lret
lods
push
pop
test
jns
xchg
mov
lods
cld
imul
dec
mov
and
push
sub
mov
insl
fwait
mov
and
es
push
bound
dec
lds
mov
sbb
addr16
inc
sti
inc
pop
cs
sub
pop
push
pop
sbb
or
dec
cwtl
repz
in
fcompl
xor
ret
repz
adc
push
dec
gs
fcmovnb
inc
leave
repz
xchg
jmp
test
cmp
sub
lock
sub
mov
fwait
jp
add
adc
xlat
add
xchg
or
cmp
mov
out
jno
cwtl
iret
xchg
pop
ret
inc
cmpb
mov
popf
and
repz
xchg
add
mov
jns
jns
outsl
mov
jo
dec
pop
js
lds
push
add
jecxz
push
stos
ja
jne
push
paddb
sbb
ja
or
gs
fisttpll
dec
dec
gs
sub
out
out
dec
out
popf
lahf
mov
mov
jns
mov
sub
out
outsb
mov
jp
std
testb
jae
xor
movsl
pop
nop
mov
pop
ret
adc
push
lds
mov
pop
sbb
dec
sbb
es
loop
inc
push
sbb
daa
stos
mov
lock
aam
gs
stc
or
mov
sbb
jmp
jp
push
jl
xchg
pusha
aad
cmp
push
jmp
xlat
mov
jecxz
or
push
sbb
mov
and
mov
cltd
aas
xor
mov
mov
xchg
test
adc
xchg
cmc
push
sub
mov
adc
pop
cmpsl
inc
push
pop
inc
and
imul
mov
cwtl
mov
xor
adc
push
dec
js
and
mov
sahf
cmpsl
push
cld
jle
xchg
jl
cmp
into
sub
popl
into
out
aad
and
cmc
dec
mov
scas
movsl
xchg
or
sti
and
ret
gs
ja
and
addr16
jecxz
xchg
push
mov
fisubs
leave
xor
cmp
xchg
push
ret
inc
cmp
in
and
xchg
ss
and
pop
shlb
push
jb
rorl
mov
fists
jno
or
or
jbe
ror
popa
jns
push
imul
clc
mov
imulb
das
shlb
or
and
aas
gs
jle
jno
jge
push
push
jae
sub
or
loopne
int3
or
pop
mov
sbb
push
jae
addr16
cmp
rcrb
add
add
mov
xor
test
jo
adc
pop
data16
fnsave
mov
jmp
dec
push
clc
sbb
lret
inc
dec
nop
sub
jp
dec
ret
jae
dec
outsb
daa
add
inc
test
shrb
repnz
mov
push
andb
std
lahf
lret
adc
lods
repnz
enter
ret
sbb
stos
repnz
call
imul
pand
je
cwtl
dec
push
inc
decl
mov
pop
mov
or
pop
sbb
xchg
imull
mov
pop
addl
leave
mov
fwait
pop
or
push
std
xor
ret
test
cld
jo
cwtl
popa
pop
dec
or
lock
pusha
cltd
xchg
mov
mov
mov
cmpsl
test
dec
sbb
sub
scas
iret
repz
push
mov
pop
pop
add
inc
out
xchg
cmp
push
je
arpl
stos
push
or
adc
or
push
stos
add
cli
mov
push
xor
adc
add
cmp
std
sti
ret
jno
pusha
inc
leave
ljmp
das
testl
insb
leave
sub
test
ds
aas
cmp
mov
pop
mov
sbb
add
faddp
push
adc
ja
mov
mov
movsl
mov
fbstp
rolb
dec
out
addb
fdivp
ret
gs
divl
outsl
gs
filds
bound
pop
sub
int
xor
jae
sbb
cmp
inc
push
fcomps
mov
shl
mov
or
hlt
mov
pop
shl
arpl
dec
roll
adc
sbb
jno
int3
mov
push
cld
pop
xchg
adc
lock
mov
cld
cli
or
out
cld
cmp
stc
jmp
mov
mov
test
lds
aam
imul
nop
add
std
enter
mov
cmp
sbb
out
dec
mov
jns
pop
je
out
sbb
cli
sbb
pusha
add
inc
dec
push
xor
cltd
stos
aas
jecxz
jb
sbb
or
insb
or
push
jecxz
repz
dec
out
mov
sbb
sti
in
orb
shlb
xlat
push
add
or
ja
leave
jne
push
lahf
dec
outsb
dec
orl
jp
and
rcrb
pop
movsb
mov
lahf
mov
ret
stos
icebp
lods
mov
push
xchg
in
stc
aaa
inc
xor
mov
jns
and
lods
ljmp
pusha
leave
xchg
pop
movsb
jp
arpl
lods
sbb
mov
fstpl
jmp
stc
sub
push
sub
repz
mov
mov
fimuls
aam
xchg
inc
mov
jno
push
xchg
push
ret
xchg
int
sub
aad
mov
es
andl
aaa
aas
cmp
repnz
movsl
xlat
pushf
std
mov
sbb
movsl
xchg
out
jp
pop
inc
fsub
jl
sbb
ret
dec
nop
xor
jle
cmp
xchg
lret
popf
lret
dec
flds
mov
xchg
cld
mov
mov
dec
cmc
push
enter
ja
out
test
pop
mov
push
arpl
xor
insl
sbb
xor
mov
pusha
lret
xor
xor
clc
dec
imul
hlt
outsb
mov
fimull
xor
xor
lret
add
jp
adc
push
mov
scas
insb
add
test
add
xchg
jge
pop
mov
enter
inc
rclb
xorb
mov
loopne
loop
cmpsb
mov
mov
loope
pop
lret
mov
add
jle
push
popa
add
xchg
rorl
inc
mov
adc
scas
in
stc
dec
and
test
popa
or
sub
fldz
xorb
sti
call
sbb
fs
aas
imul
cmp
test
stc
lahf
ror
xor
inc
pop
mov
icebp
nop
inc
int
sub
mov
xchg
test
popf
sbb
push
test
cli
mov
mov
lret
adc
repnz
fiadds
imul
xor
outsl
sbb
mov
jbe
sarb
pop
insb
je
push
push
mov
xchg
jmp
cltd
mov
add
inc
cmp
pushf
or
pop
test
imul
and
cmp
push
or
in
xchg
inc
scas
cltd
xlat
daa
out
inc
mov
addr16
rorl
add
and
movsl
stc
jl
repnz
mov
nop
add
test
sahf
mov
and
in
popf
jg
out
ss
cltd
jle
sbb
cmp
jle
jle
jae
fiadds
and
movsl
jg
jl
hlt
cmpsb
dec
popa
cmp
xor
push
push
aad
clc
xor
xchg
adc
iret
mov
cwtl
mov
push
jp
mov
pushf
sub
mov
xchg
push
test
pushl
sub
sahf
mov
loope
push
mov
pop
xor
scas
iret
pop
js
push
or
jmp
inc
popf
adcl
cmp
xor
push
add
lods
test
int
hlt
push
push
or
icebp
enter
sysret
fsts
arpl
xchg
and
mov
dec
sbb
jo
jg
mov
sbb
add
cwtl
imul
push
arpl
add
mov
mov
jbe
pusha
xchg
in
clc
and
in
mov
clc
out
jle
jp
sub
push
sti
outsb
std
push
push
or
push
rcll
cmp
add
inc
ss
std
sub
mov
sbb
je
mov
out
jns
fcompl
add
mov
lret
lods
jbe
test
stos
cli
dec
popa
dec
jle
adc
fs
adc
push
push
sbb
sbbl
dec
sub
iret
sbb
pusha
sbb
add
in
or
ljmp
cld
out
rcrl
add
fisttpl
or
sbb
test
stc
bound
jecxz
test
daa
mov
dec
pusha
sbb
mov
lods
xorb
decl
rcl
cmp
shl
fcomip
in
jmp
repz
pop
xchg
fidivl
mov
mov
add
and
mov
imul
in
ljmp
add
or
sbb
es
stc
addr16
daa
push
std
sub
push
fcompl
jmp
lret
testb
or
sub
lds
addl
jecxz
mov
xchg
in
lret
andl
add
lret
xchg
in
pop
push
sarb
insl
stc
sub
andl
insb
push
mov
in
scas
sub
mov
or
testb
sub
push
loop
lea
enter
loopne
mov
sbb
mov
push
in
daa
and
in
jnp
xchg
call
insb
lret
clc
push
or
sbb
xor
lret
push
sub
pop
dec
subl
aam
inc
push
mov
in
and
ret
out
movsb
rcrl
pusha
jmp
push
rolb
jbe
push
sbb
add
movsl
xchg
xor
add
insb
mov
dec
jl
fwait
dec
enter
dec
call
not
cmp
lret
rorl
xlat
add
out
fbstp
aad
xchg
aaa
mov
stc
lock
cwtl
jl
push
mov
pop
in
xlat
dec
mov
repz
scas
mov
mov
add
mulb
xor
cmc
aad
pop
mov
or
into
add
mov
and
fwait
imul
mov
jno
cwtl
cmp
pop
jp
daa
lahf
ljmp
in
push
mov
push
mov
outsl
loopne
sarb
jge
mov
in
ja
fs
xlat
call
sub
xchg
add
mov
and
jmp
xlat
mov
pop
xor
enter
push
xor
adc
mov
sbb
xchg
lods
inc
add
pushf
jo
mov
inc
sub
xor
cmp
testb
icebp
pop
cmp
lods
cmp
push
mov
in
xor
adc
xor
scas
and
lock
test
add
or
insl
cmp
bound
and
lods
pushf
movsb
xor
xor
cmpsl
pop
or
push
mov
sub
push
aam
mov
xor
sbb
mov
adc
push
scas
fwait
movsb
fnstcw
insb
push
mov
cmc
mov
mov
ret
add
add
lds
iret
cmp
shrl
outsl
scas
adc
enter
add
xor
ljmp
movsl
lahf
push
dec
mov
mov
jne
xchg
sbb
je
inc
mov
rolb
or
leave
push
enter
loope
andb
sbb
jg
test
jg
enter
mov
jb
bound
fnstcw
jno
outsl
pop
cmc
movsb
cld
mov
pop
and
cmp
adc
inc
rep
fwait
imul
mov
mov
and
xlat
icebp
dec
xor
or
sti
aad
push
or
or
outsb
xor
mull
push
shl
cmp
adc
sbb
aam
outsb
lea
lods
js
mov
aam
pop
pop
pop
daa
scas
inc
lods
idivb
pop
push
fcoms
mov
sub
cltd
popf
pop
scas
cld
fsubs
add
cmp
and
popf
repnz
add
mov
xorl
jno
jmp
roll
xchg
int
sbb
dec
test
lcall
movsb
cltd
movsb
mov
outsl
iret
fisttpl
xchg
cli
push
test
xor
lret
mov
clc
sub
mov
sub
xchg
cmp
mov
scas
dec
mov
in
pop
push
test
or
filds
popa
inc
scas
cmpsl
sahf
mov
inc
jae
push
iret
mov
mov
push
xchg
aas
and
cmc
insl
ficompl
mov
xlat
int3
pushf
sarb
cld
enter
ljmp
xor
jb
jle
sub
mov
es
jb
out
out
xor
mov
jg
and
stc
leave
out
jp
popa
cld
insb
inc
pop
int
mov
mov
rcrl
ret
add
lret
mov
mov
push
enter
aad
mov
fdivl
scas
adc
push
adc
sub
andb
movsl
jns
mov
mov
sub
push
sub
xor
std
mov
or
dec
fisttpll
sahf
xor
out
rclb
and
sub
push
fs
jne
dec
pop
push
imul
sti
rcrb
xchg
cmc
test
sti
mov
aas
xchg
dec
pop
fs
sub
outsb
leave
adc
inc
mov
pop
xchg
and
push
loopne
mov
popa
jmp
sub
jp
aad
lahf
inc
mov
aas
inc
cmp
ret
pmaxub
pop
enter
out
insb
loopne
lahf
pop
adc
dec
vrsqrtps
lret
or
roll
popf
enter
scas
dec
icebp
in
je
rcrb
mov
pushf
jb
inc
rol
sub
imulb
shll
adc
jl
mov
push
pop
and
enter
fdiv
dec
je
push
hlt
in
loopne
jo
adc
addb
mov
mov
cli
or
xchg
jle
or
or
xor
sarb
sub
mov
xor
into
or
add
add
and
xchg
daa
lret
add
mov
outsl
push
mov
mov
or
out
pop
sti
scas
cld
movsbl
cwtl
icebp
adc
test
sub
scas
mov
jp
push
lds
fwait
dec
lret
int3
push
shr
jle
xchg
cmpsw
bound
mov
jns
fldenv
jg
pushf
adc
mov
push
ljmp
or
lods
or
inc
fwait
or
mov
cmp
xchg
js
notl
mov
ds
stos
shll
in
ja
xchg
jnp
pop
pop
pop
xor
pop
popa
movsl
sub
int3
add
ds
ret
mov
shl
push
sti
into
jmp
dec
push
pop
fisttpl
push
adc
push
shrl
jne
cli
jns
aam
inc
push
cltd
or
and
insb
sbb
jecxz
out
jp
xchg
dec
mov
stos
stos
jne
repnz
xchg
daa
xor
insl
ffreep
sbb
or
push
loop
fdivl
or
dec
jecxz
pop
ds
inc
sbb
jl
xor
jno
mov
out
mov
sti
mov
out
iret
mov
stc
lret
xchg
rclb
jns
xchg
pushf
fidivs
repnz
daa
pop
pop
xor
scas
aas
int
push
add
lea
in
xchg
lahf
jb
sbb
sbb
fiaddl
pop
fimull
pop
xor
clc
or
int
lahf
pop
jg
jns
dec
mov
pop
sbbb
inc
and
push
lcall
push
and
fldcw
inc
adc
xor
add
das
fidivrs
daa
insl
jb
mov
pushf
test
idivl
dec
in
dec
mov
xor
sub
scas
pop
arpl
lahf
mov
sub
fildl
insb
push
and
add
push
inc
vmovntps
pop
icebp
cmp
lret
pop
popa
popa
mov
jns
jo
out
data16
mov
les
cs
ljmp
xchg
xchg
mov
xor
in
outsb
and
sti
pushf
into
cltd
cmpsl
mov
add
jo
cmp
jp
mov
push
sbb
shrb
or
pushf
lret
mov
fadds
divl
push
jb
push
inc
pop
mov
cmp
fcos
sbb
enter
mov
mov
jmp
fdivs
mov
in
mov
leave
cmp
jmp
or
mov
and
cltd
into
fsts
cmp
pop
push
sbb
cmc
mov
adc
or
out
loope
sub
js
cmpsb
sbb
shl
sbb
popa
cmpsl
ds
sbbb
jl
ret
xchg
in
fucomip
popa
pop
mov
cltd
and
jnp
mov
pop
adc
clc
jg
xchg
cli
and
and
cvtdq2ps
icebp
mov
ret
sbb
mov
stos
sarl
sub
sub
sbb
xchg
call
and
xchg
inc
push
xchg
mov
outsl
jge
mov
sub
push
call
lods
shlb
and
adc
scas
dec
xchg
ficoms
aad
daa
mov
les
mov
sti
fnstcw
mov
inc
xchg
hlt
xchg
xor
or
es
inc
or
pushf
enter
lock
shll
xor
fwait
jb
arpl
xchg
xchg
adc
inc
jg
sbb
in
jnp
adc
xor
pop
arpl
repnz
or
mov
pop
pop
sbb
pop
lods
jb
sbb
popa
es
sahf
xor
or
test
dec
sub
jnp
nop
pop
jg
je
test
xor
push
xor
dec
test
flds
jl
fwait
inc
add
fsubrl
ficomps
cmp
int
dec
jo
leave
sti
sub
mov
subl
popa
pop
or
pop
add
push
push
aas
push
sbb
ret
imul
shlb
or
mov
mov
loop
pop
xor
enter
test
out
sti
or
adc
cmp
push
add
fucomi
xchg
sbb
lea
jne
mov
into
or
adc
pushf
ret
imul
xchg
mov
and
cmp
pop
lret
lods
lods
mov
pop
cmp
dec
or
inc
mov
test
out
jns
out
sub
leave
xchg
test
push
adc
mov
das
fidivl
adc
decb
mov
out
xor
xor
lods
jl
mov
rorl
sbb
pop
data16
sbb
cwtl
dec
cmp
out
fdivr
es
cmp
cmp
mov
lock
fisubl
scas
xor
popa
sbb
xchg
fwait
sbb
mov
sub
rcrb
ljmp
lods
add
pusha
aaa
popf
cwtl
pmuludq
insl
rclb
rclb
pop
sbb
les
hlt
cmpsl
jo
mov
mov
pop
push
adc
adc
add
testb
or
cmpl
sarb
ja,pn
push
adc
lock
mov
jb
pushf
fistpl
int3
out
push
add
mov
mov
in
shll
data16
cli
test
cmp
jle
cmp
fs
jl
movsb
in
mov
push
outsb
in
leave
pop
mov
pusha
jp
addr16
loope
mov
jg
push
pop
jnp
push
pushf
add
mov
or
add
into
outsb
jbe
pop
cwtl
or
push
nop
xor
std
iret
test
sti
pop
inc
push
out
fnstenv
sbb
sti
add
mov
xchg
xchg
ljmp
aas
lret
push
mov
sarl
xlat
repz
subl
js
xorb
imul
sbb
ficoml
adc
cmp
inc
mov
xchg
xor
mov
in
scas
rclb
rorl
loop
cmp
adc
pop
mov
pop
cmp
xchg
addr16
and
idivb
fcoml
notl
ljmp
mov
xor
mov
add
icebp
adcl
daa
test
leave
inc
aad
lahf
and
test
dec
cs
pop
test
lds
jbe
lret
mov
clc
mov
lret
push
ds
xchg
jno
sarl
mov
inc
stc
stos
pop
cmp
aad
xchg
lea
out
dec
xchg
or
mov
int
aam
jg
rcll
fildl
add
cs
mov
add
pop
jbe
and
xchg
shll
jmp
in
push
cld
lahf
into
sbb
fcmovb
test
add
jp
mull
int
out
cmp
cmc
rorb
and
cmp
jmp
ja
push
add
movsl
sbb
sub
push
outsb
and
mulps
pop
rol
ljmp
pop
enter
stos
xchg
push
rcrb
mov
lods
gs
cld
dec
xchg
shlb
cs
sbb
ret
pop
outsl
xchg
call
negb
add
mov
cmpl
inc
mov
xchg
xor
jmp
pop
leave
sub
mov
push
out
mov
xchg
or
ror
out
cmc
xlat
jae
lods
nop
iret
cmp
push
sub
or
das
inc
fwait
lods
iret
push
dec
mov
and
test
lahf
aas
adc
mov
pop
xor
mov
scas
add
mov
and
notb
add
mull
sub
arpl
test
cmp
jle
push
pop
fstps
or
mov
xchg
add
and
add
gs
jp
stos
cmp
cmc
lods
rol
mov
ret
into
jge
xchg
shll
mov
movsl
fnstsw
scas
sbb
dec
nop
cmc
pusha
into
das
sbb
lods
push
sub
dec
mov
xor
cltd
xchg
gs
add
mov
cmp
mov
push
fs
xchg
adc
and
subb
xchg
sbb
jge
jne
dec
lea
inc
cmpsb
push
mov
cmpsb
icebp
pop
sbbb
sub
mov
jle
cmpsl
jmp
dec
insl
fbstp
arpl
ds
fsub
rcrl
test
mov
push
orl
cmpb
cmp
cmpsl
xorb
popa
shll
xchg
mov
es
cmp
fdivrs
fwait
repnz
mov
rol
adcl
aad
movsb
daa
outsb
jmp
aas
in
or
inc
and
pushf
add
or
cmp
mov
sbbl
xor
lds
push
cmp
push
push
xor
cltd
jge
cmpsb
sub
mov
sbb
xchg
leave
mov
lahf
dec
push
sbbb
adcb
mov
loop
jb
dec
and
ret
push
fsubs
inc
mov
mov
mov
cwtl
repz
sub
jnp
fwait
repnz
jp
data16
ret
leave
and
jge
loop
mov
pusha
mov
mov
scas
sbbb
mov
adc
sbb
ret
or
int3
pusha
xchg
cmp
mov
aam
mov
gs
test
sbb
cmpsb
jmp
call
fadd
adc
into
add
and
js
jns
iret
repz
add
dec
shl
cmp
sbb
push
lret
in
fimuls
mov
shlb
fimuls
mov
add
mov
std
es
pop
ret
shlb
sub
outsl
inc
sqrtps
mov
dec
jl
int3
pusha
stc
lds
jg
jl
into
fwait
subb
das
mov
insb
jb
inc
fiadds
int3
jmp
xchg
dec
xchg
mov
xchg
outsb
jno
xorb
add
mov
repnz
jnp
pop
xor
xor
sbb
cwtl
repz
shlb
imul
cmp
cmp
xor
fs
adcl
pop
xor
or
aaa
dec
nop
cmc
cltd
pop
xchg
add
out
lret
xchg
std
jo
dec
pusha
push
aaa
cmp
or
and
mov
xlat
xor
pop
or
xchg
add
sti
leave
cld
xchg
cmp
xchg
dec
dec
dec
jns
outsl
sti
adc
out
push
mov
movsl
fdivr
data16
imul
ret
pusha
mov
mov
sbb
lock
loope
pop
or
mov
das
and
sbb
cmp
mov
mov
mov
roll
loopne
jb
sub
pop
mov
push
jmp
pop
cmp
sbb
adc
dec
jmp
adc
lahf
adc
sahf
in
inc
cmc
fnsave
mov
daa
out
mov
mov
cmp
insl
xchg
jo
inc
adc
xor
pop
add
mov
and
add
jl
mov
sub
add
mov
xchg
xor
call
inc
mov
repnz
fidivl
test
gs
sub
leave
mov
shrl
pop
loope
sbb
incb
xor
in
cmp
cld
test
divps
mov
xor
test
xchg
cmpsb
mov
mov
js
mov
push
shll
rolb
movsl
in
jge
xchg
sub
aas
jmp
hlt
les
sbb
mov
dec
jbe
push
out
pop
imul
dec
push
sti
pop
or
mov
nop
sbb
xchg
pop
xchg
push
je
int
fidivrl
insb
dec
dec
movsb
mov
mov
dec
sbb
sti
icebp
movsl
call
push
push
cld
ljmp
sub
mov
cltd
pop
sbb
and
xchg
out
cmp
and
stos
lret
cmp
add
clc
mov
lret
insb
clc
jge
mov
js
jno
push
test
adc
int3
ficoml
xchg
inc
ds
xchg
call
lahf
fdivl
repz
jbe
shlb
aam
inc
js
push
mov
adc
mov
or
aas
sbb
pop
loopne
cmp
xchg
sarl
bound
sbb
pop
pop
jge
mov
inc
cmp
pop
push
aad
icebp
jb
jnp
je
aaa
pop
pop
rorl
push
sub
jbe
in
jne
outsb
fimuls
jns
pop
or
popa
loop
stos
testl
sub
enter
jge
pop
call
dec
mov
xchg
fcomip
jbe
xchg
mov
lock
les
dec
fucom
push
repz
pop
lret
loopne
mov
or
dec
adc
xchg
testl
inc
sbb
fadd
fs
lret
sbb
jle
or
sbb
dec
stc
dec
inc
fsubrp
stos
and
sub
adc
aaa
sub
rcr
out
jmp
dec
sti
cld
cmpsl
push
push
xchg
inc
pop
or
addr16
fwait
lods
mov
jae
iret
dec
jecxz
cmpsb
out
outsb
pop
xchg
and
repz
inc
lcall
xchg
js
cmp
or
pusha
push
loop
pop
pop
mov
fdivrs
loop
std
adc
or
adc
ss
xchg
xchg
xchg
inc
cld
icebp
push
test
test
sbb
dec
enter
scas
push
stos
add
stc
push
inc
rcl
or
loope
adc
jecxz
xchg
pop
std
jmp
mov
cmp
gs
es
pop
in
cmp
xlat
cmp
push
add
icebp
mov
mov
xchg
clc
lea
lret
mov
pop
add
jmp
out
jno
insl
enter
lea
dec
lret
sbb
pop
pop
repnz
adc
dec
movsb
and
dec
mov
daa
into
pop
out
cli
jbe
inc
xor
push
xor
lcall
fcomps
jnp
xor
add
mov
aam
ret
fmuls
std
stc
xor
mov
inc
dec
push
or
insb
jb
push
inc
push
orl
sti
imul
push
pop
cmpsl
sahf
sbb
in
push
pushf
stos
mov
sbb
add
push
sti
int
mov
inc
aaa
push
cmp
fcomp
push
movsl
xor
andl
xchg
aaa
sbb
fwait
daa
add
shrb
mov
sub
cmpb
mov
or
setl
sarl
xor
into
lahf
das
pop
inc
push
mov
adc
int3
rorl
rcll
iret
jmp
nop
sub
mov
cld
add
cmp
jp
int
std
xor
pop
sbb
cmp
dec
pop
ficompl
pop
ret
inc
outsl
xor
jbe
push
push
xchg
sbb
fnsave
andl
into
mov
push
cli
or
mov
decl
and
push
push
fwait
or
nop
jmp
int
sbb
dec
ljmp
mov
xor
mov
push
jne
int
mov
aas
push
add
in
mov
inc
xchg
shrl
xor
iret
lds
dec
jnp
jmp
adc
pushf
adc
sub
adc
add
mov
xlat
andl
cmp
arpl
mov
insl
imul
mul
rolb
lock
roll
jo
and
gs
cwtl
cmp
pop
mov
mov
mov
sub
je
xchg
fs
mov
shrl
pop
pop
aas
mov
sub
sbb
lahf
ss
dec
add
xor
cmpsl
loopne
scas
ret
mov
lods
ret
call
clc
sub
insl
lods
fmul
nop
mov
inc
sbb
mov
les
inc
push
dec
inc
loope
mov
js
push
imul
hlt
cmp
inc
pop
and
nop
ret
push
push
xor
fimull
sub
jnp
test
cli
or
mov
sbb
cmp
addb
mov
inc
pop
pop
and
into
dec
sub
es
xchg
syscall
or
sub
aam
mov
push
dec
lcall
insl
mov
xor
sbb
and
jmp
test
in
aam
ret
rcr
xor
outsl
mov
inc
addb
js
sub
sbb
inc
nopl
in
push
push
popf
ja
dec
loopne
sbb
inc
xlat
cmp
in
sahf
xor
mov
add
mov
xchg
stc
mov
fidivs
jmp
and
mov
bound
pop
pop
jmp
mov
lcall
mov
pushf
push
sub
lds
rcrl
in
xor
data16
lock
ret
in
add
das
cmp
pop
cmpsl
imul
dec
hlt
loop
pop
iret
out
sub
aas
out
maxps
push
pop
cmp
sub
insb
jbe
dec
dec
lea
push
lds
out
repnz
push
dec
jbe
pop
repnz
mov
fs
es
dec
sub
loopne
fbld
inc
jle
leave
fldt
and
popa
pop
ret
scas
mov
pop
int3
xor
push
div
fistps
or
fs
out
out
aaa
push
outsb
lea
popa
inc
sub
out
mov
xor
add
stc
hlt
clc
or
jne
fdivrs
nop
mov
push
xor
jo
mov
or
ljmp
jb
shl
faddl
pushf
in
adc
mov
push
gs
pop
or
adc
outsl
cli
xchg
xchg
sub
jl
negl
dec
dec
xchg
push
sti
mov
adc
into
imul
pop
sbb
das
ljmp
imul
mov
nop
xor
mov
ret
inc
enter
icebp
fdivrs
xchg
adc
push
adc
and
iret
push
jns
sbb
jecxz
inc
mov
ljmp
fxch
outsb
rcrl
jnp
out
and
in
adc
icebp
mov
sahf
stos
xor
fwait
sti
pop
lods
push
add
sub
pop
ds
dec
inc
jg
jmp
and
inc
xor
lock
ds
xor
mov
lret
xchg
jecxz
outsl
std
cmc
inc
into
adc
xchg
jge
and
dec
data16
lahf
cld
sti
xlat
adc
push
iret
hlt
sti
clc
sub
test
sarl
jbe
inc
lods
cmp
in
xlat
into
dec
jbe
sahf
into
inc
or
xor
sti
lcall
mov
test
sub
ja
dec
lods
cs
ss
or
add
lret
sub
pop
sbb
insl
push
push
dec
mov
in
enter
aad
pop
inc
pop
jmp
sahf
shll
jbe
jge
jmp
into
sbb
add
out
jge
sbb
cmc
jns
div
pop
and
sahf
movsl
fldt
cld
aam
pop
das
movsl
lds
inc
push
add
push
ret
imul
mov
jl
and
rcrb
mov
pop
pop
std
stos
or
clc
addr16
daa
xor
push
mov
outsl
push
sbb
and
pop
dec
push
xorl
xchg
push
or
pop
shlb
aad
or
inc
pop
sub
pop
pop
scas
adc
iret
push
cs
xor
xor
ljmp
push
mov
dec
icebp
mov
ljmp
inc
cmp
cli
xchg
mov
push
shl
adc
loop
loope
push
inc
in
dec
cmpl
mov
inc
adc
hlt
aas
lds
mov
xor
js
xor
cmc
leave
push
imul
cld
sahf
mov
test
push
pusha
mov
gs
add
leave
adc
push
jnp
xor
cwtl
sub
mov
lret
stos
clc
mov
sbb
and
xchg
fadd
imul
sti
in
popf
pop
leave
arpl
dec
test
test
ret
sbbl
adc
cmpsl
movsb
push
test
pop
and
adc
imul
cmp
sahf
bound
mov
repz
pop
in
popa
sti
add
sbb
sbb
lret
pop
adc
jne
or
mov
aas
push
into
push
xchg
adc
push
add
jecxz
aas
call
sbb
mov
ja
fstps
dec
pop
dec
push
inc
mov
and
cmp
xor
ret
jmp
cltd
lea
out
jo
ja
adc
mov
mov
push
add
test
iret
int
or
in
mov
and
xor
xchg
in
je
sbb
ja
mov
outsb
jl
shll
fidivrl
mov
adc
xchg
ss
movsb
mov
cmp
in
push
sub
repz
jb
in
mov
mov
fsubrl
daa
int
fdivr
mov
aam
insb
cwtl
xor
dec
shlb
sbb
lods
mov
out
hlt
adc
cmp
adc
notb
jae
push
xchg
dec
sbb
adc
rcrb
jns
jg
aam
xchg
jp
clc
sub
cmpsb
addr16
sub
das
mov
push
jge
roll
mov
loop
mov
movsl
repz
cmpsb
add
cld
xor
ja
enter
mov
jp
inc
js
jg
inc
rorb
gs
mov
je
mov
or
out
cmc
shlb
jno
lret
push
fstps
add
test
push
loopne
push
pop
dec
repz
push
outsb
mov
pushf
fwait
pop
dec
call
pop
jne
add
cmp
jno
push
or
add
out
mov
call
xor
jle
jbe
shl
je
jmp
shll
mov
imul
push
mov
icebp
ret
mov
inc
and
rorb
push
cmc
push
ss
test
inc
rcl
out
addl
lcall
push
pusha
and
xchg
cs
and
aaa
xchg
cmp
jle
sbb
es
stos
xchg
lret
or
jae
inc
push
gs
pop
rep
ret
ds
xchg
int
xchg
mov
sbb
dec
xchg
push
test
sbb
iret
mov
imul
xchg
das
pop
push
xor
cmp
dec
cld
push
sbb
fcompl
pushw
xchg
je
mov
mov
es
sarl
mov
and
popf
xchg
mov
movsb
movsl
dec
xor
mov
lret
outsb
mov
mov
push
add
aam
scas
movsb
cmp
fwait
out
iret
std
pop
jns
pop
jae
pop
rclb
and
sub
pop
enter
adc
sahf
mov
mov
push
fisubrl
loopne
lret
push
push
fs
movsb
leave
aad
jmp
mov
je
lret
pop
and
imul
inc
jecxz
xor
pop
stc
mov
repz
jmp
stc
sbb
jg
ffree
fnstsw
sbb
mov
lcall
pop
out
or
mov
rorb
pop
sub
inc
and
mov
push
mov
out
lahf
pusha
neg
out
stos
mov
sysexit
sub
sbb
aas
cmp
rcl
dec
lret
loop
adc
and
pop
mov
int
push
pop
dec
ret
outsb
fiaddl
add
fdivrl
pop
cli
sti
je
jg
adc
ljmp
mov
es
movsb
cmp
lcall
pop
out
pop
ret
out
cmp
adc
xchg
push
push
cmpsl
lcall
dec
jp
jge
test
dec
sub
out
pop
or
das
jbe
mov
or
jo
xchg
dec
jo
mov
inc
mov
sub
sbb
jp
loop
pop
call
lret
xor
cmp
xor
jnp
test
mov
outsb
jg
mov
rol
mov
ljmp
stos
cmpsl
sbb
lods
and
mov
sbb
jo
cmc
mov
or
shll
repnz
add
mov
inc
loop
dec
and
je
pop
jae
xchg
push
testb
aas
xchg
mov
orb
xchg
scas
mov
aam
shl
jmp
add
int
xor
cmp
add
cmp
popf
cli
push
mov
bound
inc
or
push
fwait
subl
pop
push
push
jl
sub
adc
or
mov
movsb
mov
and
lea
xor
xchg
sbb
jecxz
fldenv
xor
mov
and
insb
mov
sbb
jne
ds
or
push
mov
mov
stos
std
push
or
dec
fidivl
xorb
jge
sbb
jb
cmp
addr16
jp
inc
add
pusha
pop
pop
dec
dec
pop
decl
mov
jl
jne
cmp
out
cmpsb
icebp
push
push
sysexit
push
or
add
jae
das
sub
add
bound
mov
add
pop
cmp
mov
and
mov
repz
sbb
cmp
adc
xchg
push
mov
mov
mov
in
sub
xor
dec
inc
adc
repnz
inc
cltd
test
jmp
out
dec
pop
daa
pop
shl
xchg
sbb
into
or
nop
jns
mov
jo
jo
and
rcr
or
fildl
xchg
mov
mov
fstps
mov
sahf
stos
cld
daa
dec
pop
adc
pop
sbb
lods
sarb
mov
cmpsl
pop
push
loopne
or
cmp
inc
cmp
into
vcmpss
push
xchg
adc
int
shlb
inc
rorl
mov
daa
ror
push
cmpb
dec
mov
test
js
das
rol
sarl
ret
mov
and
imul
and
test
fisubl
test
pop
hlt
in
xor
cmp
and
push
int
mov
sbb
pop
jg
ja
sahf
mov
popf
rcr
scas
ds
xchg
nop
stos
hlt
xor
mov
lea
xor
nop
sbb
sahf
rcrb
mov
std
or
clc
jle
scas
scas
aas
xor
mov
int3
in
adc
ret
decb
lock
or
mov
daa
ficoms
adc
enter
mov
sti
aas
aad
xchg
xchg
cmp
mov
inc
mov
nop
xchg
movsb
push
stos
cld
scas
dec
push
mov
jne
in
dec
in
jne
xchg
mov
mov
pop
sub
and
js
mov
push
or
cmp
hlt
mov
xchg
out
int
jae
stos
or
pop
adc
pop
sub
lods
and
cwtl
fnstsw
adc
add
pop
dec
lock
xchg
pop
hlt
shll
cmc
in
mov
loope
jb
adc
xor
lock
xor
inc
call
sub
adc
jb
adc
mov
cmp
jmp
out
ljmp
mov
adc
movsb
xchg
adc
mov
in
jmp
jo
ret
push
or
cli
loope
aaa
adc
xchg
fsubr
inc
pop
clc
pop
jae
jo
enter
aam
lods
ds
mov
xlat
pushf
xor
adc
sbb
es
lret
sarb
ljmp
sub
idivb
lock
js
fadds
xor
push
imul
mov
push
andb
or
shlb
ficompl
in
push
jmp
or
xchg
and
repnz
dec
push
lahf
mulb
xor
imul
cmp
gs
scas
outsb
dec
pop
mov
mov
scas
int3
out
pop
add
lahf
mov
sub
add
push
sbb
mov
adc
enter
ret
sahf
or
dec
fcomi
push
inc
test
push
sub
cmp
int
cmpsb
push
lods
insb
mov
imul
jge
int3
push
std
inc
fwait
std
pop
lea
ds
test
dec
dec
cmc
movlps
rorb
cwtl
jo
mov
scas
je
add
in
insl
aad
sbb
xchg
add
xchg
or
or
in
imul
std
inc
fdivrp
fwait
or
test
dec
fptan
or
jmp
xor
xlat
insl
imul
fwait
and
bnd
scas
aaa
mov
dec
ljmp
adc
jb
mov
xchg
rcr
ret
mov
pop
pop
fwait
stos
mov
int
dec
push
aam
cli
dec
mov
dec
in
insl
sub
lahf
divl
lea
pusha
repnz
xor
lock
mov
mov
arpl
adc
adc
xchg
in
in
mov
nop
xchg
jmp
inc
leave
dec
stc
into
mov
stos
push
sub
lcall
mov
std
jl
inc
add
aad
cmc
scas
sbb
sbb
sbb
fldenv
in
hlt
pop
xor
jo
andb
or
and
add
sbb
outsb
stos
jb
jbe
shlb
ja
add
sbb
adc
scas
pushf
add
mov
mov
dec
stc
loop
cmp
pop
mov
bswap
adc
ljmp
pop
test
xchg
push
pushf
xchg
and
mov
out
jne
dec
cmc
sub
aas
or
add
push
pushf
or
std
inc
jge
leave
mov
movsl
mov
jbe
insb
pop
pop
rolb
mulb
aad
or
std
aaa
enter
jg
test
sub
push
pop
push
and
cli
popl
jl
xchg
je
movsb
or
inc
jns,pn
inc
stos
dec
mov
push
adc
sbb
jae
pop
lock
cmpsl
xorb
jle
mov
inc
popa
lea
out
or
call
push
ror
aad
mov
imul
dec
ljmp
jb
cmc
sub
out
dec
lahf
xchg
mov
mov
add
mov
dec
push
and
rcrl
mov
sahf
fidivs
outsl
or
lock
cwtl
subb
sarb
xor
jl
sbb
adc
pusha
lea
fwait
mov
sar
cmp
push
jp
cmpsb
in
cmp
lods
pop
lea
ret
and
sub
jnp
push
shr
fimuls
push
in
ljmp
hlt
test
je
stos
and
add
jno
xor
iret
mov
cs
std
dec
xor
fimuls
hlt
xchg
and
sub
test
mov
dec
enter
jae
jae
lret
adc
xor
inc
pop
jmp
fdivs
inc
adc
push
outsl
call
dec
jnp
clc
gs
loope
push
push
dec
and
enter
xor
mov
pop
mov
and
or
xchg
xchg
enter
inc
mov
shll
andb
push
je
cmp
inc
fcomps
mov
sub
mov
aas
aad
popf
push
out
daa
mov
leave
popf
aaa
stos
xor
test
mov
pop
lds
shlb
jne
add
or
fdivs
outsl
sub
nop
pop
or
data16
mov
sub
ds
jl
dec
cmp
push
jp
fsubrl
cld
sub
scas
xor
cmp
out
popf
xor
ret
test
xchg
sbb
dec
dec
insl
adc
aam
fstpt
push
enter
addr16
fwait
cwtl
adc
ret
mov
inc
adc
pushf
xchg
mov
inc
xor
mov
pop
cmp
xchg
in
out
push
insl
cli
in
jns
pop
out
sbb
ss
nop
cmp
scas
jns
jl
sahf
mov
sti
cli
lret
sbb
pop
fsts
in
in
lret
pusha
and
pushf
and
lods
mov
dec
push
push
xchg
and
in
push
or
dec
pushf
in
mulb
add
movl
scas
popa
adc
dec
inc
aas
das
mov
and
scas
dec
dec
and
nop
hlt
ss
inc
in
aaa
xchg
inc
push
xor
nop
into
cmp
outsl
test
lret
adc
mov
xor
jae
dec
outsl
loop
sahf
xor
mov
adc
jo
ss
enter
repz
sub
xchg
ficompl
add
sahf
data16
mov
into
mov
push
dec
std
pop
clc
xchg
inc
ss
lret
stos
lret
movsl
rclb
imul
xchg
sub
js
sbb
mov
push
and
sbb
out
and
cmpsb
xor
push
inc
xor
aas
and
jo
add
pop
sbb
jmp
push
iret
pop
in
test
jle
addb
mov
out
iret
push
es
mov
shl
xchg
cltd
sub
imul
cmp
aad
int
into
fsubrl
out
popa
mov
sbb
mov
or
sahf
xchg
jmp
mov
push
lret
fildl
imul
icebp
mov
pushf
loopne
sbb
fwait
shl
jmp
lahf
cmp
insl
sbb
cmpsl
xchg
loope
mov
lods
lds
rorl
insb
sub
jle
pop
jo
hlt
fucompp
inc
ja
push
lock
test
push
dec
push
jl
adc
push
or
xchg
adc
lcall
test
jle
xor
nop
int3
pop
mov
mov
mov
adc
adc
int
pop
shl
mov
push
imul
push
mov
addr16
ss
mov
sti
repnz
addb
or
ret
sahf
mov
sahf
adc
dec
jmp
add
push
inc
jmp
outsl
scas
lret
lods
cmp
push
ds
fisubrl
aas
and
in
jno
add
ja
xchg
sbb
mov
insl
out
adc
addr16
pop
lods
pop
cmpsl
lret
or
jbe
jns
lock
iret
pop
loopne
pop
movsl
out
or
mov
out
push
sbb
fstpt
dec
mull
ret
sbb
test
push
scas
pop
mov
pop
sub
ja
push
xchg
push
sbb
or
jp
cmp
add
xor
dec
add
out
jne
mov
pop
adc
sbb
shll
scas
mov
pusha
adc
add
push
daa
mov
lock
dec
enter
mov
jne
jb
out
dec
test
mov
dec
ret
rcll
aam
lret
push
arpl
pop
cmp
jmp
mov
js
ret
and
cmp
dec
ror
popa
inc
add
sub
stos
movsb
dec
test
out
push
xchg
xchg
xor
or
xor
xor
or
in
shlb
xor
fistps
ja
mov
xor
jo
xchg
add
jp
fs
lret
imul
or
adc
and
sub
sub
out
add
hlt
xor
sahf
mov
push
sub
aaa
pop
cltd
sbb
cmp
adc
add
fsubp
push
xor
and
mov
or
ljmp
adc
cmp
hlt
inc
pop
stos
inc
push
out
aas
cmpsl
or
pushf
js
pop
and
les
test
pop
in
jbe
rcrb
adc
dec
cltd
mov
xor
cmp
mov
test
in
scas
mov
hlt
inc
jns
inc
push
faddl
frstor
mull
jns
xor
sti
lods
das
push
cmp
lds
sub
push
mov
xchg
pushf
icebp
xor
gs
int3
sub
in
push
mov
shl
test
ja
inc
movsb
sbb
push
pop
icebp
and
inc
mov
jae
mov
scas
mov
push
push
jmp
ds
outsl
ss
cmpsb
movsl
xor
stos
inc
push
aad
xor
or
xchg
lods
push
dec
je
mov
push
nop
xchg
mov
sahf
popl
push
jne
pop
ss
or
xlat
fwait
rol
xor
dec
lret
jl
add
cli
push
xor
dec
into
xchg
and
adc
sbbl
cmp
inc
jnp
aam
and
and
enter
push
inc
test
adc
sbb
arpl
pushf
adc
and
insb
cltd
jnp
aad
push
les
jecxz
xchg
in
adc
pop
sub
fnstsw
leave
cmp
out
and
and
cld
imul
mov
lret
sahf
mov
or
push
arpl
in
cli
rorl
mov
jmp
add
ljmp
hlt
test
in
das
or
push
arpl
stc
add
push
ss
out
shl
cmpsl
in
rclb
pop
jge
pop
mov
int
adc
out
sti
icebp
daa
enter
in
shll
int
inc
and
and
xchg
xor
stos
jb
mov
das
or
xlat
fsubl
sbb
loop
loop
in
ljmp
add
or
call
imul
cmpsl
ss
cmp
cltd
xor
mov
xor
scas
orb
jmp
pop
scas
pop
nop
inc
lcall
imul
sti
jbe
pusha
xchg
xor
dec
inc
mov
adc
movsb
pop
jp
jge
es
jno
aad
mov
add
sahf
in
lock
es
pop
xchg
testb
nop
fwait
sarl
sti
fsubrp
dec
inc
inc
mov
cmpsb
mov
push
dec
int3
push
iret
or
push
sub
outsb
int3
jo
cmp
adcl
rolb
mov
stos
xchg
mov
inc
fucomi
movsl
in
scas
mov
ret
adc
cmpsb
mov
scas
mov
ret
sti
jae
leave
movsl
fmuls
insl
mov
in
dec
xchg
inc
sub
notl
mov
adc
andl
je
icebp
jno
test
movsb
sbb
mov
pop
in
mov
pop
xchg
push
fstps
adc
add
push
inc
xchg
les
xchg
ljmp
sti
std
lea
rorl
lods
lods
cmp
cmpsb
mov
fwait
cmp
int3
jge
pop
cmp
xor
fs
mov
cld
std
arpl
imul
jmp
sub
pushf
es
xor
divl
jp
and
popa
mov
in
mov
fldenv
push
fcmovne
clc
iret
test
or
dec
mov
mov
movsb
pop
repz
cmp
dec
icebp
das
repnz
jp
sub
sbb
sbb
push
enter
inc
push
imul
int3
fisubrl
test
pop
jo
cs
xchg
add
outsb
jnp
mov
js
xchg
iret
ss
outsl
std
pusha
nop
xor
inc
push
ret
push
in
add
lea
jne
push
pop
je
movsb
sbb
jcxz
push
mov
push
loope
sahf
and
mov
xor
in
sub
mov
push
pop
stos
enter
lahf
cmp
jmp
add
cld
insl
mov
rol
iret
sbb
ja
gs
movsb
jl
push
pop
out
js
imul
cmp
mov
pop
mov
std
adc
mov
xchg
add
das
out
push
cmp
fnstcw
jbe
data16
call
push
outsl
js
pop
inc
test
jnp,pn
adc
push
jge
cmc
leave
cli
fs
xchg
cmp
and
jbe
ja
fildll
clc
lret
pop
cmc
andb
jnp
mov
arpl
lods
jno
jb
jo
imul
xor
inc
cmp
adc
dec
loopne
sub
or
jae
xchg
in
mov
les
inc
jno
test
aas
jmp
mov
aad
inc
adc
addl
mov
inc
dec
jbe
mov
das
push
jle
pop
sbb
fs
mov
outsb
arpl
mov
push
sbb
inc
outsb
push
xchg
adc
xlat
ss
xchg
test
or
push
bound
jg
dec
xchg
js
jne
lock
sbb
pop
xchg
mov
mov
out
lock
add
in
xor
mov
dec
ret
push
movsb
add
cld
push
out
mov
adc
lods
or
pop
sbb
scas
mov
adc
sarl
aaa
lea
pop
xchg
gs
adc
push
add
fmull
xor
repnz
and
enter
push
mov
jle
pop
mov
sahf
mov
push
mov
sahf
nop
out
adcb
mov
cwtl
jbe
add
lea
push
sub
std
push
imul
xchg
stc
stos
lcall
call
icebp
fwait
mov
dec
ss
fucom
dec
mov
loope
lret
jle
dec
je
pop
sahf
and
outsb
leave
rcl
pop
imul
cmp
jb
in
mov
loope
je
lea
popf
les
mov
fnstcw
test
mov
leave
lods
aaa
pop
pop
cs
mov
adc
in
aaa
nop
push
mov
ljmp
cld
gs
scas
xchg
xor
dec
mov
nop
ja
adc
xlat
outsl
xchg
jno
leave
mov
ljmp
inc
das
cmpl
leave
or
cmp
arpl
lock
daa
and
cmp
or
aas
pop
pop
loope
cwtl
adc
and
stc
or
pushf
cmp
mov
dec
sbb
inc
cwtl
push
sub
and
push
cmc
sub
inc
cmp
lods
imul
movsl
jl
rcll
pop
push
cltd
rclb
add
les
sbb
enter
cmp
inc
or
sti
mov
pushf
arpl
call
lret
mov
lahf
outsl
xor
in
mov
nop
mov
jmp
outsb
mov
cli
dec
loope
int3
or
lahf
jb
in
scas
push
leave
adc
icebp
test
cmpb
xchg
push
mov
lds
stos
jns
xor
cmpb
jno
mov
pop
mov
or
mov
mov
and
loope
inc
cmp
pop
jle
test
cmp
sbb
in
adc
iret
dec
jge
stos
pop
lds
movsl
sub
in
out
ja
push
cmp
mov
outsb
xchg
hlt
push
mov
ja
sub
pop
add
and
ret
js
push
daa
inc
cmp
shlb
pop
mov
xor
cmp
xchg
sub
push
cltd
fucomip
jo
jae
daa
bound
in
push
lahf
xchg
ficoml
mov
js
mov
sbb
stos
mov
js
leave
repnz
lods
inc
int3
xchg
in
push
lds
push
cmpxchg
dec
sbb
dec
shl
cmp
inc
pop
insl
adc
call
and
subb
je
insb
cmpsb
movsb
scas
mov
sbb
aad
lods
inc
fbstp
dec
sbb
lods
data16
xchg
cmpsl
movsb
movsl
jnp
fcoms
push
mov
ja
cmpsb
test
xchg
lret
sub
pusha
insl
out
dec
inc
lcall
pop
xchg
mov
push
loop
insb
es
pop
adc
jns
inc
js
int3
or
aaa
xchg
arpl
jb
popl
jecxz
lock
dec
lahf
xchg
out
jp
inc
jp
test
cmp
xchg
insb
gs
sub
xchg
lcall
stos
test
push
cwtl
push
pop
sbb
std
sbb
mov
lcall
lcall
jmp
cli
mov
mov
cmpsl
sub
cmpsl
ds
add
stc
pop
jo
outsb
and
pop
shrb
pushf
sbbl
fistpll
in
inc
jnp
xchg
xchg
xchg
fsubs
inc
jl
scas
push
cmc
cmp
cmp
mov
and
addr16
cmp
mov
and
xchg
pop
jle
sbb
mov
pop
mov
leave
dec
push
cmpsl
repz
pop
lret
pop
mov
xchg
inc
nop
xchg
outsb
dec
adc
nop
fisubl
nop
jl
imul
add
jae
or
or
cltd
mov
mov
bound
lret
push
outsb
xchg
aad
pushf
outsl
or
mov
shlb
xchg
sub
dec
fwait
add
inc
adc
xchg
pusha
mov
push
push
or
pushf
mov
clc
outsl
mov
inc
mov
push
dec
xchg
stos
sbb
push
cwtl
xchg
in
jle
mov
scas
sbb
ret
fistl
jae
mov
mov
in
inc
sbbb
jo
push
xchg
stos
jmp
jp
add
out
or
in
cmp
dec
loopne
shll
jns
xchg
pop
gs
cld
sub
cli
push
add
aam
fwait
sub
adc
dec
adc
repz
rorb
mov
jae
cmp
cs
call
outsb
int
pop
dec
pop
ja
repz
adc
je
and
dec
sbb
data16
fisttpl
add
xor
push
ror
push
icebp
aas
movsl
sbb
cli
fsubr
nop
jo
push
inc
ror
insl
fldl2t
sub
push
aas
outsl
jp
mov
shlb
sub
inc
pop
xor
pop
mov
sub
or
sub
sbb
mov
jmp
push
lds
sbb
cwtl
inc
dec
mov
into
adc
or
daa
enter
icebp
dec
call
or
lret
imul
xchg
lahf
dec
out
test
in
lods
aas
dec
sbb
xor
loop
xor
push
mov
or
mov
cld
aad
adc
inc
negb
rclb
pop
test
in
cmc
sub
lods
sub
scas
push
int
fdiv
pop
stc
mov
lods
jecxz
aas
jns
xchg
push
cmpsl
in
jno
xchg
xchg
outsl
pop
adc
ss
xchg
jmp
cmpsl
mov
mov
in
lret
jnp
aam
sbb
aaa
fisubrl
loop,pt
repz
enter
dec
pop
mov
adc
lret
pop
mov
iret
pop
out
xor
icebp
pop
lea
scas
aas
jnp
scas
jle
pushl
and
mov
mov
test
adc
int
adc
rorl
in
mov
and
mov
movsl
mov
scas
aas
stos
lcall
lahf
fisubrl
inc
ja
xchg
push
or
ja
mov
jae
inc
and
xchg
inc
sahf
xor
dec
imull
loop
jl
push
add
mov
xchg
les
je
clc
mov
dec
jae
filds
and
in
dec
mov
sahf
mov
push
cld
mov
aad
imul
mov
or
inc
mov
mov
sbb
sbb
sbb
inc
dec
out
xchg
ljmp
mov
and
inc
pop
mov
mov
lds
arpl
test
xchg
and
and
int3
or
nop
and
out
mov
aam
pop
mov
test
scas
popf
jno
push
mov
fwait
mov
testb
lret
movsb
cltd
inc
sbb
mov
enter
ja
mov
xchg
movsb
sbb
cmp
je
arpl
rorb
in
mov
lret
add
addr16
shll
add
inc
push
xchg
mov
adc
ja
sub
out
aaa
pop
out
icebp
shl
cmpsb
jmp
addr16
push
mov
fcoml
sub
or
test
jecxz
ljmp
je
ja,pt
fwait
xchg
out
ja
dec
addr16
push
and
lds
xchg
push
scas
shll
push
ja
push
push
mov
xorl
sub
test
ror
jbe
jl
daa
jo
sub
mov
inc
xor
aam
nop
fcmovu
ljmp
jl
frstor
negl
add
inc
push
push
and
out
ljmp
xor
and
fcomi
adc
stc
in
std
add
pop
sbb
inc
loopne
or
mov
push
sbb
xor
sbb
lret
ljmp
pop
pop
add
jnp
cld
aas
lret
mov
or
jmp
add
mov
jns
es
inc
mov
addb
xchg
inc
out
jmp
fnstenv
jb
jmp
mov
stos
inc
cld
jno
push
push
std
mov
push
ffreep
ja
sub
add
dec
in
loopne
sub
shll
pushf
clc
jg
mov
push
add
imul
xchg
sbb
cltd
call
push
ljmp
stos
mov
stc
pop
lret
sub
hlt
xor
daa
push
xor
shr
lock
inc
clc
push
add
adc
xor
cmp
jg
jmp
xor
jmp
aad
in
xlat
xlat
imul
jecxz
xchg
jne
push
mov
subl
inc
in
mov
pop
jns
rol
xor
rcll
cmpsb
lret
cmp
cmp
aas
lods
clc
mov
pop
pop
pop
test
pop
out
push
xchg
or
xor
aas
dec
lahf
mov
mov
icebp
daa
jbe
in
mov
cld
fdivs
jnp
jae
sbb
lods
jno
push
es
or
xchg
dec
iret
push
jnp
imul
shrl
cli
xchg
xchg
leave
call
add
adc
mov
sahf
mov
popf
or
jns
lock
daa
jl
xchg
es
mov
mov
out
push
add
roll
in
sbb
sub
dec
ret
adc
in
and
xor
imul
adc
rorb
call
and
fnstcw
push
or
les
jno
jae
mov
test
ret
movsl
xchg
mov
xor
out
cmpsb
dec
aaa
dec
fstl
in
cmp
testl
xchg
xchg
xor
lahf
aas
mov
jmp
sub
pop
mov
in
xchg
dec
dec
pushf
scas
movsl
xor
pop
insb
lock
out
mov
outsl
ret
sbb
fnsave
nop
mov
dec
mov
sbbl
loopne
cmp
xlat
dec
je
inc
push
and
cs
mov
jmp
inc
sub
xchg
mov
es
fisubs
stos
movsb
xor
ret
xchg
push
repnz
pop
push
les
jecxz
aam
sbb
clc
fsubrl
fcoms
sbb
push
mov
aas
clc
adc
iret
mov
mov
dec
and
shll
mov
faddl
cmp
and
int3
call
fnsave
jmp
movsb
std
mov
into
jge
in
jo
loope
out
std
cmp
mov
mov
add
xor
sub
out
shlb
iret
in
inc
into
test
and
fidivrl
xlat
or
ljmp
xchg
push
dec
clc
mov
out
and
cmpsl
pushf
js
push
insl
mov
leave
push
xchg
lahf
movsb
jns
rcll
adc
out
dec
test
push
aam
fstps
cmp
cmp
xchg
icebp
xchg
ja
or
test
mov
xor
lret
or
sbb
jle
jmp
testl
int
cmpsl
jg
inc
inc
insb
lods
adc
mov
push
ret
lea
in
adc
lret
movsb
dec
sar
pop
bound
pop
mov
out
icebp
mov
and
jmp
adc
xor
xchg
jl
jecxz
loopne
jb
push
mov
les
xor
push
jl
lods
or
inc
inc
stos
cmpl
sub
into
sub
cwtl
shl
mov
cmp
cmp
scas
mov
fcmovne
idivl
xchg
lret
sahf
fs
nop
sbb
inc
std
push
pop
test
fcompl
jno
cwtl
cmpsl
push
mov
dec
mov
and
xchg
add
sti
jnp
xlat
pop
fs
xchg
inc
mov
call
lret
stos
mov
xchg
std
call
pop
and
iret
or
fsubrl
add
ss
mov
test
xor
lods
repz
aad
push
xchg
xor
aaa
xchg
mov
arpl
pop
inc
xor
sub
pusha
sti
mov
std
test
dec
jecxz
push
mov
dec
adc
pop
mov
sbb
lock
inc
xchg
sahf
inc
sub
test
lock
mov
push
leave
and
outsl
shlb
jno
cmp
testb
xchg
popa
lods
xor
add
xchg
sbb
pop
mov
and
addr16
in
xchg
or
popf
jb
jbe
das
test
fwait
cmpb
sbb
loope
int
cmpsl
faddl
in
outsb
sub
push
mov
movsb
mov
inc
mov
push
lods
fdiv
jmp
orl
xor
adc
icebp
sbb
jle
push
or
mov
mov
loopw
sub
xchg
in
inc
lods
add
loopne
stc
loope
xchg
cmp
fnstsw
mov
addr16
lret
push
inc
push
cmpsl
fs
sbb
insb
int3
cmp
jno
insb
push
out
jbe
into
or
lahf
mov
push
jbe
lods
outsl
and
fsubr
xchg
sahf
clc
xor
mov
scas
jne
jmp
scas
push
bound
sbb
or
addr16
leave
loope
add
cli
and
jmp
sbb
mov
xchg
mov
fmuls
xor
jo
inc
push
lret
cs
add
mov
gs
adc
xchg
cmpsb
jge
jae
xor
decb
add
cmp
cmp
add
mov
jmp
sub
lahf
jl
mov
jb
ljmp
loop
or
push
out
mov
cmp
in
daa
dec
scas
test
or
leave
div
sbb
push
pop
aas
data16
cmc
inc
data16
mov
mov
mov
fdivrl
pop
data16
daa
or
adc
clc
test
dec
cmp
pop
dec
and
stos
call
inc
push
aad
scas
rcl
aad
mov
pop
sbb
mov
fs
mov
ljmp
in
inc
adc
push
data16
lret
xchg
stos
pop
andb
push
and
iret
pop
imul
nop
mov
popa
les
frstor
cmpsb
fsubrs
and
mov
mov
pushf
das
insb
ret
ret
mov
jns
not
dec
xor
sbb
push
in
mov
in
pop
lret
and
cmp
in
mov
iret
rcl
mov
fcmovu
ret
add
iret
out
fldt
sbb
xchg
stc
inc
loopne
push
mov
mov
push
inc
es
in
push
cltd
lahf
pop
jg
int
sarb
lahf
sbb
sub
mov
cld
ljmp
in
aad
and
cmp
test
xchg
in
dec
inc
sbb
sub
outsb
or
sub
and
int
lds
jno
adc
enter
negb
pop
cmp
xchg
lahf
add
cltd
ds
inc
hlt
pop
jg
jl
sbb
xor
jge
mov
push
subl
inc
mov
jb
scas
push
jg
jle
add
cmp
pop
mov
addr16
xor
pop
mov
xchg
mov
push
in
mov
mov
xor
pop
out
push
sbbl
fidivrl
add
loopne
sub
push
out
and
rolb
xorl
and
xchg
in
adc
and
xchg
push
scas
clc
or
xchg
jae
inc
inc
jb
push
jg
loopne
ja
js
das
adc
cld
jg
xchg
leave
cmp
daa
and
jmp
stos
mov
icebp
mov
int
sub
push
jp
mov
enter
mov
repnz
xor
or
adc
cmp
or
sub
mov
mov
push
ja
jmp
jns
inc
push
fs
mov
dec
arpl
es
cs
dec
pop
mov
shlb
push
mov
movsb
jno
shll
mov
xor
movsb
xchg
push
cmp
mov
lret
popa
mov
cs
inc
std
bound
stos
into
push
das
push
xor
test
or
push
ja
inc
int3
inc
push
push
inc
fnstenv
hlt
popa
lds
cmc
es
push
aas
fisttpll
das
mov
lahf
pop
mov
lret
shll
mov
xchg
dec
clc
sbb
jbe
mov
dec
mov
inc
scas
mov
push
ds
xor
pop
lds
dec
mov
pop
inc
jg
pop
mov
insl
dec
sbb
arpl
scas
jge
push
in
dec
js
out
ja
mov
push
mov
pop
mov
add
push
aad
and
frstor
shl
scas
push
adc
sub
rcr
mov
pop
notb
out
adc
pop
sbb
jne
popl
push
inc
mov
dec
ret
jmp
and
loope
sbb
ret
imul
aaa
cld
test
jnp
ja
or
orl
cwtl
inc
add
popf
push
sub
pop
mov
loope
pop
mov
xchg
xchg
or
and
push
sub
decl
sarl
sbb
and
pop
inc
push
ret
shll
mov
pop
movntq
imul
adc
data16
int
push
jbe
push
data16
xchg
divb
adc
ljmp
xor
jbe
pop
mov
iret
jo
or
fnstcw
jl
mov
dec
in
mov
add
mov
xchg
mov
nopl
es
loope
shlb
dec
xlat
mov
jno
fdivrl
sahf
jb
fsts
popl
jbe
pop
sub
xor
out
and
aad
or
andb
cltd
dec
stos
cmp
push
push
mov
int3
lahf
jns
call
negb
icebp
xchg
loopne
out
mov
popa
mov
cmp
insb
mov
xchg
cmp
in
popa
jle
adc
mov
add
push
jp
mov
sbb
jbe
xchg
arpl
inc
sub
in
xchg
add
orb
jnp
repnz
pop
lods
stos
insl
xor
fstl
popa
jns
arpl
lcall
xor
jno
dec
push
aam
cmpb
mov
mov
mov
cwtl
std
test
add
pop
jp
lea
sub
loopne
js
push
insl
pusha
enter
xchg
iret
outsb
insb
push
fs
jbe
and
sub
ss
push
mov
push
dec
cmp
fcmovnu
test
lods
loop
rorb
fstl
das
or
dec
pop
xor
mov
shrl
inc
xor
leave
js
mov
andb
lock
jne
sbb
adc
scas
mov
mov
pushf
jp
cmc
mov
inc
dec
jmp
inc
cwtl
aaa
fdivrs
aad
ret
gs
fistl
test
into
pop
adc
add
mov
ret
in
rolb
add
into
call
bnd
rclb
and
and
jecxz
or
je
mov
insl
clc
push
xor
ret
cmp
push
sahf
loop
mov
sarl
sbb
jp
cmp
dec
pushf
stos
cmp
das
sbb
lret
sub
ja
fldcw
ja
mov
push
enter
mov
jge
aaa
lods
aam
je
pop
popa
jb
xchg
xor
add
mov
in
aam
sub
xchg
mov
out
add
push
sbb
lret
imul
xchg
mov
mov
sbb
outsb
int
xchg
clc
sbb
and
aam
cmp
add
pop
push
pop
icebp
and
jecxz
xchg
pop
inc
sar
loop
sub
jl
mov
dec
fadds
aam
jns
test
jp
mov
cmc
sbb
imul
std
fistps
sbb
popf
das
mov
lret
or
dec
adc
insb
movsl
mov
fst
cmpsl
xor
xor
mov
dec
mov
popa
std
mov
ja
add
outsb
lds
mov
testl
and
popa
mov
pop
dec
pop
bound
jne
push
inc
cmpsl
in
test
xor
mov
push
xor
cmp
bound
divl
sbb
sub
aam
xor
js
mov
mov
or
inc
jbe
jecxz
or
pop
iret
mov
mov
jle
adc
movsl
cmc
xchg
pavgb
add
or
loopne
mov
dec
es
inc
push
shlb
addr16
test
mov
enter
or
cmp
fdivl
inc
incb
pop
pop
jno
pop
and
sub
xchg
jnp
jo
mov
add
enter
xor
push
insb
pop
inc
xchg
test
fisubrs
nop
ror
daa
rcr
fisttps
cld
hlt
jg
ret
xchg
add
test
xor
mov
xchg
bound
xor
fcmovbe
xchg
cmp
add
cmp
and
stos
and
cmp
aaa
scas
imul
pushf
sbb
pop
or
dec
push
and
xorl
dec
or
aam
sub
and
jne
pop
aam
adc
lahf
and
call
add
in
dec
jmp
adc
rorl
jp
push
loopne
fisubrl
outsb
arpl
std
mov
filds
mov
push
repnz
lods
aas
sub
push
push
inc
dec
xor
or
push
stos
push
cwtl
loop
mov
xchg
mov
cmp
jecxz
mov
dec
int
lcall
and
lock
aaa
push
repnz
rcrb
jo
or
std
inc
inc
mov
or
ljmp
jb
insb
adc
mov
out
cmp
ja
sbb
test
fdiv
in
push
mov
jbe
mov
shrb
sbb
sub
aam
adc
sub
in
ficomps
loop
cmpsb
pop
loopne
lods
arpl
rol
rcl
inc
ds
cmp
jl
xchg
mov
cltd
dec
lret
int3
arpl
icebp
mov
ret
daa
dec
mov
shll
rorl
in
adc
adc
xor
dec
clc
subb
aad
pop
lock
pop
push
push
cld
pushf
and
cwtl
adc
lret
fcomps
lret
insl
mov
mov
loop
mov
fimuls
daa
cwtl
jp
es
pop
pop
out
xchg
es
xchg
mov
out
call
loop
pushf
in
mov
push
mov
repnz
test
dec
jecxz
sbb
xchg
fiadds
dec
or
mov
mov
mov
filds
sbb
das
sbb
xchg
fxam
cltd
mov
cmp
mov
in
int
rolb
pop
dec
dec
adc
dec
js
push
imul
ud0
pop
dec
cmpsb
push
out
cs
movsl
lods
pushf
mov
leave
xchg
gs
stc
sub
sbb
and
pop
mov
or
mov
mov
movsb
dec
xchg
adc
add
test
xor
dec
add
pop
fisttpl
sti
out
mov
inc
scas
sub
dec
je
adc
js,pt
loopne
sub
jnp
add
xchg
test
out
mov
xchg
cmp
or
lock
inc
and
in
scas
dec
dec
pop
loope,pt
cmp
dec
or
add
mov
jns
mov
sub
loop
cld
cmp
mov
pop
repz
cmc
fistpl
adc
out
and
pop
rolb
mov
jae
xchg
out
lods
sub
jns
mov
or
enter
les
jbe
aam
arpl
fisttps
dec
mov
mov
cltd
sbbb
loopne
sbb
lea
addl
sahf
xchg
mov
and
sbb
ss
pop
shr
mov
jmp
add
inc
push
sub
dec
xor
jb
pop
clc
je
xchg
insb
push
lock
jno
mov
jno
sub
stos
out
rcll
push
jb
lret
jbe
xchg
into
outsb
icebp
je
xlat
cmp
cli
wbinvd
add
fidivs
cmp
jne
icebp
pop
leave
xchg
fsubrs
lcall
jg
pop
cwtl
gs
mov
push
shl
adc
xchg
push
adc
jae
xor
dec
ljmp
lods
pop
jb
mov
jmp
inc
add
add
cmpsb
or
sbb
sub
mov
pop
aam
or
in
inc
inc
daa
push
xchg
inc
dec
and
and
sub
aas
mov
mov
sar
or
push
mov
xor
xchg
push
ja
jle
imul
lods
xor
neg
ds
jnp
jbe
in
push
push
dec
add
mov
add
sub
mov
dec
negl
inc
or
jo
arpl
leave
filds
test
sub
mov
jp
jle
push
ret
adc
mov
inc
jge
jbe
cmp
in
xlat
test
repz
movsl
jge
xor
dec
and
or
cld
mov
andb
fcmovne
pop
subb
shl
mov
sarl
push
push
pop
and
pop
xchg
repz
push
lods
push
jl
imul
xor
cmc
lea
test
cli
mov
mov
xor
pusha
adc
in
push
add
jle
dec
movsl
divl
hlt
mov
out
mov
repz
adc
nop
jecxz,pt
jne
fwait
cmp
in
iret
mov
or
push
jle
lods
jp
pop
sti
mov
lods
mov
jnp
xchg
lret
mov
enter
mov
push
pop
imul
and
push
imul
sub
arpl
xor
or
mov
movsb
fdivr
pushf
mov
jg
cli
sbbb
int
mov
jae
mov
sbb
test
mov
xor
in
shrl
jnp
and
rcrl
inc
bound
lret
cwtl
das
out
and
jmp
dec
repz
jl
pop
out
push
cmp
in
inc
popf
jns
ret
add
mov
sub
mov
pmaddwd
adc
dec
into
icebp
leave
aam
gs
loopne
daa
cs
fldt
jge
bound
loopne
and
jne
fldl
loop
xchg
push
fcom
pop
cwtl
cmc
jmp
mov
insb
mov
mov
sub
in
dec
scas
dec
push
sbb
pop
mov
xor
xchg
add
loopne
addl
in
outsl
lahf
sbb
lret
add
aas
aas
rorb
int3
push
sbb
mov
rcr
andb
push
sbb
sub
push
xor
inc
inc
and
adc
sbb
and
gs
daa
and
and
lds
in
movsl
das
mov
rorb
push
jae
adc
mov
mov
adc
adc
cmp
dec
in
jbe
jmp
inc
mov
cld
lret
inc
mov
test
mov
ret
mov
lock
aad
stos
ret
and
sbb
push
lods
rorl
inc
xlat
sarl
mov
call
iret
mov
cli
fdivs
xor
push
dec
int3
ss
xorl
jge
jle
sbbl
dec
int3
cmp
cmp
or
and
or
pop
xchg
cmc
hlt
idivl
enter
sub
sahf
jae
imul
aaa
js
jle
mov
mov
and
ds
inc
sbb
pop
repnz
mov
or
popa
and
insb
addr16
popf
xor
arpl
push
enter
pop
in
mov
mov
or
sahf
xchg
cmpsb
push
sub
adc
ret
stc
frstor
pop
and
imul
jle
pop
or
sbb
and
lock
insl
stos
jno
in
mov
into
cwtl
cli
aad
xor
mov
or
je
cmp
and
or
jns
sbb
in
push
jle
jne
popf
cmc
mov
xchg
mov
xor
add
mov
loop
inc
mov
or
inc
jmp
dec
fldt
popa
adc
push
test
pop
out
nop
xchg
roll
mov
scas
out
ja
cmp
jno
inc
lds
add
pop
cwtl
jbe
in
jb
push
cmp
push
cs
movsb
add
jcxz
mov
scas
test
movsb
in
rolb
pop
imul
sub
std
jno
aaa
test
pop
cmp
imul
sub
mov
pop
pop
enter
jle
xchg
sbb
test
and
or
out
dec
and
in
arpl
sub
stos
test
das
ret
outsl
add
add
or
mov
mov
aad
lods
rolb
add
popf
mov
or
sub
dec
jno
xor
or
push
and
repnz
lcall
ds
cs
mov
jmp
inc
mov
pop
pop
in
aad
arpl
sbb
stos
push
arpl
mov
inc
push
dec
mov
clc
pextrw
js
or
lret
xor
imul
out
cmp
mov
or
je
xchg
xor
dec
jge
gs
xchg
rcrl
cmp
aad
loope
shl
clc
int
fdivrl
push
nop
aam
imul
pop
xor
cmp
fsubr
in
xchg
dec
cmp
cmp
mov
pusha
mov
adc
lcall
dec
repz
ficompl
loopne
int3
mov
lods
push
ja
idivb
sti
repz
test
loop
mov
cmp
or
jnp
and
adc
jp
js
repz
push
data16
jp
mov
sub
leave
fstps
push
mov
lret
xor
adc
pop
out
inc
data16
mov
mov
inc
push
add
dec
fsts
bts
into
or
fdivrl
push
out
sbb
xor
ret
xchg
cmp
xor
mov
jge
call
jl
insb
or
fcmovnu
mov
fisubrl
adc
xor
mov
pusha
leave
in
push
jge
jge
dec
jae
in
shlb
lret
cmp
iret
inc
adc
or
es
jo
fisubrl
pop
xor
xchg
sbb
sarl
pushf
mov
repnz
fldl
inc
mov
data16
mov
pop
push
cmp
in
js
je
adc
in
fidivs
and
xor
mov
cmp
mov
das
xchg
mov
cmp
ljmp
lret
repnz
pop
jle
xor
out
test
cmp
jcxz
mov
xlat
in
dec
or
push
lods
stc
push
cmpsb
shrb
scas
xor
cli
jnp
std
and
push
xchg
pop
ds
cmp
adc
jns
mov
vpcmpgtw
scas
jne
mov
xchg
shl
dec
hlt
mov
pusha
ja
hlt
repnz
sahf
mov
aam
and
push
cmpb
adc
stos
inc
push
mulb
xor
arpl
jecxz
mov
adc
scas
stc
jns
leave
xor
cmc
cmpb
xor
ss
sarl
cld
in
fcoms
add
rol
mov
out
aaa
imul
insl
mov
mov
into
imul
dec
sti
loope
cltd
mov
iret
pop
xor
ret
push
std
xchg
fistps
mov
inc
stc
cmp
inc
popa
sbb
and
add
fadds
pop
sbb
rolb
stos
xlat
out
xor
in
jecxz
jnp
fildl
inc
xchg
mov
imul
pop
jecxz
adc
sbb
adc
out
xlat
shll
and
dec
rcr
sub
cmpsb
out
fsubl
shl
hlt
repz
xchg
out
push
sub
jbe
mov
push
xchg
inc
aas
cwtl
add
test
ja
dec
rclb
mov
outsl
lahf
add
adc
sbb
frstor
enter
arpl
out
into
adc
push
inc
dec
push
rorl
mov
jmp
rolb
pandn
shrl
icebp
mov
popa
lods
addl
lret
adc
pop
inc
out
sbb
fdivs
out
mov
xchg
iret
mov
rcrb
lcall
out
imull
rcpps
les
aas
xchg
jmp
fistl
cmp
mov
in
and
dec
xchg
sbb
xor
jae
shrl
ljmp
cmpsb
in
rol
repz
mov
outsl
cld
mov
sub
inc
cmp
cmp
pop
cmp
in
iret
jle
in
sarl
inc
int
lea
lea
lds
adc
sti
adc
idivb
lahf
xor
mov
aaa
push
jge
pop
jg
test
jl
cmpsl
or
jne
jg
xor
mov
xor
dec
iret
push
rol
add
aam
stc
stos
jecxz
xchg
cmp
adcb
jl
xor
mov
jl
sub
jp
cmpsb
mov
enter
adc
xor
jge
push
jge
or
jno
adc
insb
xchg
cwtl
push
dec
insl
aad
cmc
ss
sbb
outsb
out
xchg
cmp
mov
aas
push
mov
cltd
fildl
and
fs
ffreep
call
cmp
inc
add
in
xchg
mov
es
das
cmp
dec
mov
sbb
cli
mov
dec
fistpll
xor
mov
cltd
sahf
fmuls
std
int3
frstor
rcrl
mov
xor
add
mov
into
mov
sti
test
push
cmp
cmp
sub
sub
insb
dec
scas
mov
mov
pop
jae
mov
in
inc
sarb
xchg
mov
jne
xchg
cmp
mov
test
lret
neg
xchg
insl
mov
imul
inc
inc
notl
xor
dec
stos
push
dec
scas
subl
into
dec
rorl
xor
cmc
jle
xor
push
mov
jno
add
idivb
mov
loop
fiadds
mov
lods
or
mov
mov
dec
cmpl
cmpl
jnp
xor
daa
in
mov
in
sbb
dec
insl
mov
mov
push
cmp
mov
pop
lcall
out
mov
mov
and
shlb
jmp
mov
mov
popf
adc
xor
mov
jbe
sbb
icebp
stos
in
pop
pop
sti
fs
subb
scas
sub
xlat
inc
mov
mov
and
fildll
xchg
test
addr16
xor
into
xchg
jmp
cmpsl
mov
shll
and
xchg
cmc
pop
push
mov
shrl
and
xor
pop
adc
pushf
xor
out
stos
jnp
push
jno
nop
sub
or
mov
imul
mov
xchg
popf
sti
imul
outsb
es
mov
or
mov
mov
or
dec
add
orl
lods
jmp
jo
and
cmp
sbb
aaa
push
add
or
jge
test
cwtl
sbb
and
outsb
inc
push
and
in
add
jo
push
and
add
push
push
rolb
je
out
out
aad
push
mov
dec
xchg
shll
test
sub
mov
add
rclb
xchg
cmp
ret
icebp
in
movsb
ds
out
mov
jnp
mov
jg
xor
icebp
js
push
cmc
cmp
mov
scas
pushf
jbe
lcall
ja
xor
cmp
mov
aaa
inc
jnp
jo
xchg
push
inc
clc
xlat
lcall
inc
sub
fsts
mov
call
arpl
mov
mov
mov
scas
test
dec
mov
sahf
pop
shrl
pushf
in
cmc
dec
btsl
or
jnp
jg
pop
subl
dec
inc
testl
xchg
pushf
cli
dec
fnstcw
into
cmpl
imul
jnp
push
cmpsl
mov
mov
das
movsb
sbb
pop
push
xor
mov
aas
add
stc
pop
testl
push
loopne
cmp
cmpsb
movsb
mov
mov
lods
addb
cmp
dec
add
xlat
imul
adc
iret
xchg
cmp
mov
inc
add
dec
idivb
das
ljmp
lret
mov
and
mov
sub
dec
bound
das
push
popf
les
icebp
dec
addb
sub
movsl
xchg
add
mov
add
cli
and
clc
add
inc
mov
jg
out
fs
adc
std
bound
xchg
stc
xorl
bound
in
jecxz
mov
pop
mov
push
jge
xor
mov
and
call
push
jmp
les
or
in
andb
stc
inc
or
jp
mov
pop
ret
lahf
clc
inc
pusha
or
and
lea
ds
ljmp
and
sbb
insb
loope
mov
push
push
mov
daa
test
popf
xchg
insl
ds
dec
inc
jo
loopne
int
movsb
and
leave
mov
data16
add
repz
adc
mov
repz
arpl
sbb
cltd
pop
lods
outsl
mov
and
gs
fsub
push
inc
pop
test
data16
ds
jns
sti
in
push
mov
sti
movsl
movsb
imull
xchg
ss
gs
xchg
shll
and
dec
mov
cmp
fsubs
movl
mov
movsb
nop/reserved
enter
cwtl
add
cwtl
xchg
adc
inc
int
cmp
mov
call
sti
in
roll
xor
adc
sub
xchg
data16
popa
inc
sub
and
xor
pop
imull
push
adc
xchg
mov
movsb
insl
pop
or
xchg
movsb
lea
pop
xor
data16
mov
cmp
mov
outsl
add
sbb
out
arpl
adc
jle,pt
or
sbb
bound
mov
jb
xor
insl
mov
jae
iret
leave
cwtl
mov
in
addr16
lds
adc
outsb
sub
fdivrs
mov
lods
es
mov
sub
int
dec
ja
js
adc
cmp
shll
fcoml
stc
mov
push
push
push
cs
sbb
xlat
dec
out
xchg
dec
leave
cwtl
sub
pop
in
daa
cltd
ja
sub
adc
mov
mov
aad
test
test
xor
ret
xor
adc
mov
daa
mov
sub
lods
jmp
and
fsub
push
frndint
cwtl
dec
mov
jl
mov
xor
test
rorb
xlat
in
repz
add
sub
mov
adc
push
movb
add
jl
dec
aas
pop
aam
aas
movsb
aas
add
mov
out
push
sbb
in
out
fwait
aam
shrl
mov
xor
sub
adc
push
jle
aad
add
mov
cmc
sbb
xor
push
pop
mov
clc
ss
lds
inc
xchg
notb
jle
sub
ljmp
jnp
sarl
mov
xchg
jp
push
rclb
sbb
out
rorb
mov
in
push
mov
bound
mov
inc
inc
pop
pop
jmp
ret
roll
out
mov
rorb
lock
movsb
mov
mov
pop
xchg
lds
rcll
jo
adc
add
fildl
stos
and
nop
cmp
mov
mov
jo
andb
add
hlt
insb
jae
pushf
clc
or
shrb
push
sbb
pop
jle
movsb
xchg
es
divb
inc
daa
push
clc
push
vcvtdq2pd
push
lods
jle
xor
xlat
adc
or
repz
ds
pop
xchg
icebp
in
std
daa
inc
cmp
mov
cld
and
and
dec
mov
sete
mov
cld
lret
insb
mov
or
lcall
lret
sbb
out
dec
into
sbb
mov
fcompl
imul
popf
rcr
add
aam
inc
lahf
stos
mov
jbe
outsl
dec
xlat
mov
lahf
mull
inc
roll
xor
hlt
ds
and
cmp
movsl
push
daa
stos
dec
mov
xchg
push
cltd
pop
ret
dec
std
push
scas
jnp
cmp
mov
cmpsl
jecxz
shrb
sub
std
xchg
xchg
daa
xchg
jnp
pop
cmp
inc
popf
lods
pusha
cltd
inc
lret
adc
mov
hlt
mov
imul
mov
sub
in
and
push
out
jmp
outsl
cmp
mov
movsb
ror
inc
mov
imul
fisubl
sub
xchg
cmp
das
cmpsb
mov
and
lock
scas
aam
mov
fldcw
mov
repz
addr16
cwtl
in
mov
cmpsb
pop
push
in
push
fsubr
bound
inc
mov
out
hlt
stos
add
mov
xchg
test
setg
arpl
inc
adc
pop
xchg
xchg
or
sub
test
jo
inc
inc
repz
cld
leave
adc
ja
jae
aaa
in
or
repnz
push
lahf
ja
jo
or
mulps
sub
gs
cmp
test
mov
out
je
test
scas
jnp
in
call
dec
sub
lods
push
dec
mov
mov
push
sbb
aaa
cmpl
pop
mov
mov
pop
stc
mov
jl
leave
and
adc
loop
sbb
js
xor
cmp
pop
pop
pop
cmc
and
sub
loopne
dec
jns
neg
data16
out
scas
lds
test
xlat
fisubrs
aam
pop
les
add
lret
push
adc
pop
xchg
ret
fcoms
push
and
in
lods
sti
mulb
push
push
add
stc
mov
jmp
cld
int3
sub
out
add
sbb
xor
add
xchg
xor
and
cmpsb
fwait
dec
sbb
dec
adc
push
mov
lret
xor
rol
movsb
mov
clc
and
out
dec
jg
push
xchg
scas
fdivrp
jle
shll
cli
in
int3
lcall
mov
sahf
loope
or
xor
inc
or
in
jns
js
or
xor
mov
fs
popf
shrl
jmp
nop
lods
insl
add
cmpb
jp
xchg
cmp
nop
stc
mov
push
mov
testl
and
xor
mov
fnstcw
xchg
xor
xor
or
mov
push
mov
push
lret
adc
or
ss
adc
push
xor
ljmp
shl
sbb
inc
mov
or
insb
sbb
je
jns
aam
jno
mov
fsin
cmp
shlb
dec
ljmp
inc
mov
adc
adc
fst
add
inc
mov
loop
aaa
jmp
adc
iret
push
ja
shll
jnp
push
clc
mov
mov
jle
pop
jo
cmp
subb
and
bound
pop
xchg
dec
xchg
aam
fistpl
mov
shr
scas
lahf
xor
out
scas
mov
cmpsl
outsb
imul
lret
push
cmp
push
sarb
fcomps
leave
arpl
das
push
sahf
pop
cmc
jle
cmp
jge
insb
je
pop
xor
pop
iret
xor
jg
dec
fmul
loope
ljmp
loopne
jg
sbb
incl
fscale
icebp
sbb
cmc
xor
push
adc
mov
movsb
and
scas
and
test
mov
mov
pushf
sub
imull
mov
fsts
aaa
jnp
idiv
inc
mov
dec
ja
xchg
mov
repz
aas
mov
dec
iret
xchg
pop
lods
dec
mul
lods
mov
fisttps
pop
loope
add
dec
jmp
mov
or
mov
or
leave
aad
jl
xchg
pop
popf
icebp
inc
pop
out
scas
testb
or
push
add
or
dec
mov
outsb
sub
add
cmp
fstpl
mov
ret
pop
outsl
xor
mov
sub
mov
mov
jno
push
fisttps
sbb
stos
popa
daa
out
cli
rorb
cmc
add
sbb
stos
cmpb
arpl
sbb
adc
or
push
nop
add
outsl
in
and
xchg
xchg
mov
mulb
mov
clc
cmc
das
shlb
add
pmulhw
dec
jbe
jbe
pop
dec
aaa
ds
inc
out
lahf
xchg
sbb
lret
cmpsl
push
or
out
dec
or
sbb
fists
push
clc
ss
jp
adc
rcrb
repnz
or
gs
test
movsl
cwtl
sub
pop
and
pop
sbb
lods
lods
mov
pop
fwait
cmp
cmp
pop
mov
mov
or
iret
popf
icebp
adc
xchg
aas
mov
inc
inc
dec
xchg
mov
cmp
pop
pop
aas
pop
push
push
iret
ja
in
push
jge
xchg
mov
jns
cmp
aam
jne
cld
jae
sub
pushf
jge
decl
pop
jp
mov
cmp
cmp
pop
repnz
popf
mov
or
mov
dec
ret
mov
ret
adc
dec
stc
clc
mov
xchg
xor
das
cli
outsb
lret
cld
and
rcrb
dec
ss
aad
inc
fdivl
add
rcll
je
inc
fcomi
xchg
push
and
adc
mov
pop
les
inc
push
andl
push
cmp
cli
dec
sbb
push
jnp
mul
rcrl
aam
rcll
cmp
sbb
dec
jbe
fs
jg
mov
inc
mov
loope
das
sub
insl
lods
je
jmp
enter
xorb
std
xor
in
jl
jns
sub
add
in
pop
or
push
mov
push
sub
je
outsb
adc
aam
dec
aad
mov
inc
push
adc
or
int3
jb
jg
lcall
pushf
data16
lea
loopne
das
mov
flds
sbb
clc
add
movl
lods
aam
das
sbb
sarl
jge
sarb
stos
xor
inc
add
jne
mov
mov
push
xchg
mov
fdivrl
cmpl
pop
les
test
stc
push
adc
sarl
adc
xchg
xor
in
mov
or
mov
cmp
push
aad
lods
push
mov
dec
inc
and
and
mov
or
sbb
lods
or
pushf
mov
lea
fcmovu
push
arpl
sbb
ret
pop
push
xchg
into
mov
add
push
ljmp
xor
test
pop
sub
add
movsb
and
sub
jnp
push
add
lods
and
pusha
enter
loope
mov
cmp
pop
inc
ja
mov
icebp
js
stc
jecxz
test
mov
loopne
insl
jae
scas
fs
outsb
ds
aad
pop
xor
cwtl
popf
pop
xchg
inc
call
inc
mov
inc
mov
jecxz
divl
out
push
mov
mov
push
and
inc
cld
arpl
dec
enter
push
xor
aaa
int
pop
cltd
enter
cld
test
popf
or
scas
ror
sbb
fwait
cmp
stos
iret
sub
lods
mov
movsl
and
lret
out
mov
jns
push
push
sbb
xor
and
decb
or
stos
gs
xor
mov
aad
jb
add
punpcklwd
xchg
or
adc
or
iret
das
loopne
dec
stc
ret
push
and
test
push
stos
or
cld
cmp
xor
sahf
adc
dec
push
mov
sbb
pop
sub
xor
and
pop
divb
sbb
aas
jmp
inc
popf
jno
jle
mov
ljmp
imul
push
xchg
dec
scas
mov
inc
push
jl
out
dec
mov
addl
leave
aad
inc
lock
in
mov
inc
push
ret
mov
mov
repnz
lock
and
stos
cmpsl
pusha
leave
je
push
clc
into
sbb
xor
popf
jnp
lock
lds
aam
ret
imul
xchg
nop
sub
or
iret
dec
stc
and
pop
test
out
pop
add
push
sub
adc
add
or
lret
inc
cld
nop
push
popa
xor
sub
das
repnz
pop
pushf
test
push
cwtl
mov
lcall
mov
test
jne
jle
jns
shl
adc
vpshufd
push
and
lds
xor
lods
or
jg
xor
sub
loope
in
subb
popa
gs
xchg
mov
xorb
inc
push
mov
lods
loop
hlt
pop
aad
ficoml
add
xor
and
push
xor
icebp
stos
scas
mov
test
sub
pusha
jle
sub
movsb
out
push
gs
sti
add
cmp
lods
fists
pop
mov
or
aad
ljmp
push
call
loope
xor
or
and
outsb
dec
sbb
push
sbbl
in
cwtl
cld
push
adcb
and
iret
mov
cmp
pop
jns
stos
mov
and
rclb
sub
and
ret
push
lret
subb
out
push
js
push
push
js
not
ret
lods
mov
cmc
es
xorb
jl
movsb
aad
cwtl
add
mov
push
rcl
lahf
pop
push
inc
cmp
jo
inc
push
call
jns
mov
cmp
or
in
mov
jp
insl
pop
xor
mov
lret
or
inc
leave
sbb
pusha
das
andl
in
cmp
inc
call
mov
in
mov
xchg
jo
outsb
mov
xor
jmp
xor
cmp
add
cs
or
je
fs
out
and
add
std
arpl
mov
pop
mov
sub
mov
subb
imul
mov
mov
mov
sub
jae
ret
adc
stc
and
sbbb
jp
mov
ret
out
outsb
jno
les
push
sbb
mov
or
arpl
sub
sbb
repnz
dec
mov
adc
cmp
test
push
inc
pop
js
pop
nop
adc
xlat
mov
xchg
xchg
call
pop
loop
pusha
pop
pushf
cmc
inc
out
jp
push
xchg
pop
test
mov
fidivl
movsl
scas
cmp
mov
rcrl
xor
leave
es
loop
sbb
jp
push
push
js
sub
addr16
pop
dec
ja
push
shlb
fdivs
pop
stos
mov
mov
push
lea
stc
test
rclb
inc
fnstcw
pop
rcll
dec
and
dec
fbstp
xchg
mov
lds
ret
mov
outsb
add
dec
xor
aad
les
daa
xchg
loop
sub
pop
push
cwtl
add
adc
jo
aad
cmp
arpl
mov
sub
fldcw
outsl
dec
or
or
in
mov
jecxz
out
push
push
ljmp
jge
cmc
stc
jb
mov
test
js
push
jo
dec
or
into
test
call
push
inc
jl
ficoms
aam
xchg
lock
xlat
test
or
mov
add
cmc
lahf
lods
lea
dec
mov
adc
pushf
ljmp
sbb
adc
aam
loopne
cmp
sub
sahf
das
pop
and
xchg
jl
xchg
push
and
mov
leave
outsb
clc
inc
out
adc
fsubs
push
daa
sbb
jnp
jp
adc
rcll
sbb
cmp
das
push
imul
enter
pop
enter
leave
pop
pop
repz
mov
mov
inc
lret
xor
add
in
pop
lock
lods
cmp
push
dec
adc
dec
xor
les
sub
mov
pop
mov
or
cmp
cmp
jns
out
sar
sub
cmpsb
scas
mov
pop
mov
lret
sbb
pop
pop
push
pop
mov
fbstp
xor
add
jecxz
dec
and
pop
dec
mov
sbb
daa
cmp
push
add
inc
fmull
and
and
outsl
mov
mov
add
ret
fcompl
push
shrb
mov
test
adc
ret
push
je
stos
mov
lods
nop
dec
fmuls
and
dec
sub
and
xchg
xchg
cs
cwtl
out
pop
jno
out
cmp
push
lods
mov
ret
loope
imul
mov
mov
inc
rcrb
cmp
adc
test
dec
cmc
jo
add
or
jp
out
pop
and
lods
insb
push
sub
jbe
add
nop
stos
cli
call
imul
sub
mov
mov
out
fcomps
nop
fnclex
out
adc
stos
dec
nop
mov
leave
push
jg
push
push
popa
loop
pusha
and
fdivrl
sbb
jb
rcrl
aad
test
sub
js
xchg
or
push
jns
mov
inc
add
dec
cmpsb
call
movsl
clc
pop
cltd
push
daa
test
fs
cmp
push
les
nop
subb
rcll
dec
fnstcw
xor
inc
imul
pop
push
iret
mov
jae
mov
cltd
or
add
pop
inc
mov
imul
inc
rep
sti
cwtl
adc
xor
cmp
loopne
mov
cmp
orl
nop
inc
pop
push
cmp
popf
sub
jbe
inc
push
addr16
add
xchg
pop
test
jbe
dec
fisubrl
push
es
shrb
aam
mov
outsl
sahf
bound
fadd
mov
add
out
adc
ret
loopne
push
lcall
xor
cmp
sbb
or
push
or
out
cmp
fwait
movsl
repz
sbb
dec
loop
js
shrl
adc
cmp
jo
movsb
or
dec
xchg
dec
aaa
ficomps
lock
addr16
test
stos
xchg
pop
mov
inc
jo
xchg
dec
in
adcl
dec
movsl
xchg
pop
inc
xchg
adc
movsb
fdivp
ret
loopne
stc
mov
add
test
cld
cltd
jnp
mov
rol
inc
push
and
test
rep
fstpl
mov
frstor
push
push
popa
aam
dec
js
add
cmpsb
sub
ds
jns
call
ret
lahf
test
adc
push
popf
mov
lret
andl
sub
iret
into
sub
mov
push
flds
xor
jecxz
adc
sub
aaa
arpl
arpl
addr16
cmp
cmpsb
mov
mov
xor
int3
fsubp
cwtl
mov
clc
and
arpl
lods
aaa
imul
or
lcall
dec
ja
cmc
outsb
lahf
insb
stos
push
jns
sbb
add
mov
mov
cmp
xor
push
in
dec
mov
xchg
and
adc
popa
shrl
dec
mov
pop
cmpb
and
xchg
cmp
adc
sahf
adc
jl
test
aaa
mov
inc
mov
pusha
andb
out
inc
aaa
jmp
aad
or
cmp
add
dec
cmpsl
repnz
sub
stos
xor
pop
dec
ret
in
fld
sbb
mov
mov
cltd
adcl
dec
add
adc
lret
jns
adc
adc
and
loopne
incl
fwait
jnp
es
mov
mov
addl
jb
decl
and
add
std
sub
sbb
add
adc
xor
mov
or
push
inc
lea
in
pop
sbb
or
pop
push
xchg
aad
xchg
inc
adc
fs
ds
sbb
jne
add
or
vcvttss2si
jmp
popa
pop
ret
and
movsl
mov
mov
pop
repnz
add
adc
jns
cli
loopne
mov
jae
push
shlb
adc
mov
mov
dec
pop
cmc
dec
xchg
in
jmp
jne
pop
sti
mov
or
nop
adc
cmpsb
pop
into
pop
frstor
sub
sarb
add
aad
pop
addr16
aad
sahf
sub
inc
shll
lds
idivb
add
fwait
scas
mov
mov
sbb
push
into
popf
mov
jnp
rcl
mov
mov
mov
mov
das
in
pop
popf
and
sbb
test
fsubr
sub
push
mov
jnp
pushf
dec
adc
mov
jb
push
mov
mulb
jns
movsb
cmp
lea
push
test
inc
push
repnz
cld
or
icebp
ja
fistpll
inc
je
mov
mov
decb
push
push
rcrb
pop
mov
inc
shlb
mov
ss
pop
stos
fisttps
and
jp
pop
adc
call
xchg
stc
es
push
xchg
push
hlt
xor
int
sbb
lcall
sar
subl
repnz
mov
push
in
nop
sti
test
pop
test
adc
xor
or
daa
add
jbe
xor
push
dec
sbb
jns
pop
lret
adcb
mov
dec
sub
fadds
jnp
nop
or
pop
cli
dec
daa
in
lret
int3
mov
aam
push
xor
mov
mov
or
xorb
mov
pop
ja
out
pop
imul
scas
jne
xor
jl
dec
lret
sbb
das
mov
add
and
out
jnp
push
and
jecxz
js
call
add
in
or
xor
cmpsb
mov
cmc
xor
movsl
mov
mov
popf
jo
lods
and
xchg
loop
mov
aaa
jb
lcall
fs
popf
jecxz
pop
dec
aam
hlt
jno
shll
es
cmp
sub
adc
jno
fwait
lahf
and
inc
cmpl
imul
cmpsl
sbb
je
lcall
ret
pop
xlat
stos
xlat
and
xor
jge
test
xlat
ret
outsl
sbb
cmp
jb
enter
xor
out
xchg
and
ss
push
fstpl
jbe
jne
lret
mul
sub
arpl
lahf
imul
jae
lahf
mov
filds
in
sbb
cmc
fisttpl
das
cmp
hlt
std
sub
int
das
cmp
dec
xchg
arpl
inc
push
and
movsl
jl
out
repz
scas
loopne
sbbl
sub
mov
sbb
scas
stos
scas
sbb
pushf
mov
iret
push
adc
pop
int3
dec
cmpsl
out
and
push
cs
cmc
fldl2t
imul
pop
ret
cltd
mov
test
in
bound
sbb
push
inc
dec
je
adc
xchg
es
decb
je
ret
cmp
jecxz
test
lods
pop
adcb
loopne
repnz
scas
mov
nop
mov
push
push
and
aam
scas
dec
xchg
mov
fistl
shlb
xlat
adc
fwait
push
je
xchg
cmpsb
mov
cmp
inc
call
mov
sub
dec
add
mov
adc
and
addb
jno
lahf
mov
rolb
xchg
subb
cmpsl
aam
cmp
xchg
or
or
mov
mov
xchg
es
in
jl
aaa
jno
aad
test
clc
aas
mov
cmp
xchg
sub
mov
imul
dec
adc
push
dec
bound
loope
dec
pop
test
sub
jmp
imul
es
push
lds
or
xchg
cmpsl
add
sub
sbb
or
and
cmp
hlt
adc
lahf
inc
fwait
ds
imul
sbb
ret
mov
cmp
xor
mov
add
lcall
int
imul
xlat
arpl
jg
push
data16
sbb
stos
das
inc
daa
or
mov
mov
sbb
mov
icebp
add
mov
adc
loop
fs
jbe
jg,pn
mov
fstl
fmull
stos
sbb
dec
push
dec
push
ficompl
in
sbb
xlat
sbb
cmpsl
inc
pusha
push
ucomiss
cmpsl
leave
arpl
xchg
mov
jecxz
add
imul
xchg
sbbb
nop
xor
cmp
out
out
cmc
les
in
fwait
or
push
out
out
mov
cmpsl
sub
dec
pop
or
xchg
lret
clc
insl
or
fnstcw
mov
dec
xor
push
adc
fwait
inc
ljmp
ret
pop
jmp
sbb
repnz
repz
iret
movsb
xchg
aam
andb
aaa
ss
clc
push
cli
outsb
outsl
mov
ds
sbb
sbb
subl
adc
cld
sbbb
cmp
outsl
addr16
adc
cmpsl
outsl
les
ja
pop
outsb
or
call
push
das
pop
filds
int
inc
xlat
sub
push
add
add
test
jecxz
jo
push
cli
stos
inc
push
lods
jge
or
inc
lock
shl
cmp
out
in
mov
push
aaa
ja
cmp
pop
daa
and
push
sub
jg
sahf
cli
out
mov
int3
scas
imul
jmp
stos
cs
and
pop
popf
push
inc
aas
xor
xor
jns
xchg
into
push
pop
mov
movsb
stc
subl
push
jb
mov
iret
inc
roll
jnp
dec
out
js
mov
sub
pop
lcall
js
outsl
mov
lods
lods
addb
cmc
xchg
daa
movsl
addr16
and
mov
mov
cmp
push
aaa
inc
aaa
mov
nop
mov
xchg
cmc
es
push
xchg
push
inc
push
dec
sbb
pop
es
push
and
or
jle
int
sbb
jb
out
cs
insl
pop
sub
push
ljmp
shlb
cmp
jmp
scas
loop
pushf
mov
dec
out
das
repnz
arpl
mov
add
fisubrs
cld
push
fstpt
inc
test
mov
fldcw
les
add
lock
push
pop
jbe
int3
shl
movsl
mov
iret
xchg
and
ret
push
call
ret
inc
inc
jecxz
xchg
cmpsl
mov
adc
mov
jg
pop
cltd
in
stos
xchg
sbb
add
decl
add
push
int3
andl
cmp
push
push
fsubrl
and
orb
loopne
aad
repnz
testl
decl
iret
leave
clc
cmp
test
jg
xchg
xchg
mov
test
cmp
pop
cmp
xor
sub
mov
push
pop
lods
pop
inc
mov
lret
lea
push
shlb
leave
jmp
leave
sbb
shl
fiaddl
or
inc
sub
in
sbb
scas
mov
dec
sub
lds
mov
lahf
out
sarl
inc
into
lods
mov
test
pusha
test
push
mov
pusha
inc
cmovg
sub
testl
dec
push
mov
ljmp
mov
stc
cmp
fcom
inc
cmpsl
fldt
dec
or
inc
xorb
sub
insb
lods
nop
outsl
popa
xor
insl
sub
arpl
test
xchg
test
mov
ja
daa
pop
xchg
out
fwait
popa
out
sbb
bound
mov
cmp
xchg
xchg
insb
enter
out
sti
lea
das
xchg
ja
hlt
in
in
out
jg
lods
icebp
fdivrl
mov
repz
repz
jnp
dec
pop
push
pop
mov
lea
xchg
adc
xchg
dec
push
lahf
aas
pusha
pop
pop
xor
addr16
jle
lock
dec
outsl
shlb
pop
loop
adc
add
iret
mov
jbe
jmp
cmp
jecxz
xchg
scas
sbb
dec
ja
shrl
xor
aad
ja
mov
or
cli
fcmovnb
mov
xor
dec
pop
inc
cmp
stc
push
jns
pushf
lock
adc
test
pushl
cmp
lods
addr16
sarl
xchg
mov
mov
and
sbb
scas
and
sarl
add
loope
fisubrs
mov
inc
jp
dec
dec
xchg
je
insl
cmp
test
int3
jecxz
sub
mov
sub
pop
pop
cmp
jmp
data16
cmp
outsb
hlt
jnp
std
mov
cmp
rolb
imul
fidivrl
push
cld
imul
insl
jg
das
lahf
repnz
fsubl
gs
repnz
mov
xchg
xor
cwtl
jp
fidivrl
and
dec
movsb
lahf
pushf
repnz
inc
xchg
and
ret
inc
bound
inc
mov
sbbl
pop
pop
mov
xchg
scas
ss
mov
push
hlt
lods
stos
pop
out
mov
js
add
jae
inc
mov
sub
lods
xor
mov
out
lret
mov
rcl
ret
mov
mov
repz
out
shlb
in
fidivs
jg
test
cmp
jne
ja
les
xchg
rol
push
fcoml
cmpl
or
mov
cmpsb
mov
xor
lahf
aaa
scas
xchg
xchg
and
inc
inc
mov
fmul
cwtl
inc
cmp
fcompl
xor
push
add
icebp
loopne
jo
inc
xor
notl
inc
mov
and
dec
push
mov
mov
inc
lahf
jo
mov
stos
insb
and
test
fwait
pop
clc
jecxz
add
movsb
adc
clc
pop
xor
mov
lds
shrb
out
ror
mov
jae
imul
sbb
push
lods
push
push
xor
push
mov
lea
out
int
dec
daa
mov
adc
mov
outsl
push
push
mov
rcrb
or
inc
sub
inc
add
stc
xor
xor
xchg
xor
int
sbb
pop
push
cmpsb
daa
outsb
lcall
xlat
mov
fadd
lods
push
nop
push
ret
add
mov
stos
fidivl
push
faddl
daa
fisubs
ret
and
ret
test
shll
or
in
out
xor
or
je
fiadds
addr16
cltd
cmp
mov
scas
cltd
cwtl
jl
ja
or
add
dec
outsl
and
pop
or
rorb
inc
cmpsl
stos
test
test
ror
lcall
nop
push
mov
inc
test
push
xor
scas
loop
orl
jne
dec
cmp
test
mov
outsb
lahf
loop
cmp
mov
adc
push
mov
inc
jecxz
cmpsb
pushf
xor
mov
js
mov
imul
mov
xchg
scas
mov
jae
fcoml
or
lods
loopne
insl
adc
fidivrl
lret
add
xor
mov
mov
int3
outsb
xorb
pop
mov
addr16
sbb
dec
adc
pop
or
and
popa
icebp
insb
or
test
roll
daa
and
adc
dec
xor
sub
adcl
std
loopne
jmp
int3
lret
cwtl
ds
loope
and
mov
sub
jbe
fisubrl
aas
mov
mov
lcall
and
inc
into
test
push
test
inc
ss
mov
xchg
xor
fisubs
adc
fwait
int
movsl
loopne
scas
push
call
cmp
outsl
addr16
pop
ss
data16
mov
push
fcomps
add
lods
into
cmpsb
push
adcb
sub
sbb
cmp
bound
aam
push
and
xchg
mov
loope
outsl
mov
dec
or
into
ds
rol
cwtl
adc
cwtl
es
push
xor
mov
in
dec
jo
ret
push
add
dec
pop
movsb
jl,pt
in
pop
imul
adc
sub
lret
or
loope
jne
aam
and
push
jb
sbb
mov
fs
mov
rolb
push
inc
lahf
pop
xor
cmp
inc
into
ja
sub
sar
pop
fldt
xchg
xchg
mov
cmp
sbbb
xchg
lret
mov
add
cmpsb
into
cmp
cs
ret
sub
movsb
mov
xlat
cmp
ror
std
loopne
cmpsb
xor
mov
push
adc
daa
and
inc
cmp
adc
jnp
and
inc
out
dec
sti
mov
cmp
shrb
dec
roll
xchg
push
pop
loop
xchg
mov
push
and
cmpsb
xlat
lret
mov
arpl
mov
dec
shlb
or
jbe
lcall
jmp
pop
jmp
loop
negl
aam
mov
scas
divb
jecxz
xchg
pop
mov
mov
and
repz
xor
out
rcll
sub
scas
mov
out
iret
fucomip
mov
add
negb
test
test
jecxz
adc
pop
sbbb
ja
lcall
ficoml
adc
movsl
mov
xlat
jne
insb
add
std
push
cmpsl
in
and
popf
fbld
daa
aad
cmpsb
addr16
mov
leave
stc
or
xor
pop
mov
jl
fadd
cwtl
lds
shrb
inc
push
dec
sbb
stos
lock
inc
cld
aaa
data16
or
lds
in
push
lods
mov
hlt
inc
les
stc
or
push
push
sub
rcrb
sub
mov
pop
push
sub
fadd
cld
jbe
sbb
and
jne
and
inc
and
fildl
test
sbb
adc
bound
es
jp
js
sub
or
jge
inc
sarl
xorb
cmpsb
or
in
arpl
mov
adc
pop
repnz
jno
push
sti
insl
adc
clc
sub
les
pop
das
fsts
adc
divl
xchg
fcoms
mov
in
lahf
adc
mulb
mov
sub
mov
scas
push
sarl
lea
stc
scas
out
movsl
popf
pop
andb
sbb
dec
cli
pop
movq
fildl
cmp
mov
or
dec
repz
cs
or
mov
push
jno
mov
and
or
data16
add
jae
iret
fwait
mov
cmpb
or
push
iret
xor
mov
and
aaa
sbb
xor
push
mov
mov
and
or
lcall
in
bound
popa
pop
xor
mov
sbb
scas
dec
dec
add
push
jbe,pn
cld
jo
adc
in
jle
mov
loopne
cli
add
cmp
cmc
sbb
xchg
roll
stos
movsb
sub
ja
je
mov
mov
sti
dec
push
xchg
in
xchg
xchg
cmp
mov
test
dec
pop
pop
mov
imul
icebp
pop
and
in
aaa
lea
dec
outsb
ss
pop
lahf
mov
add
bound
mov
jnp
or
push
orl
pop
into
xor
inc
fists
pop
cmp
xor
mov
mov
pop
out
lret
xor
xor
stos
stc
push
icebp
sarl
cs
icebp
shl
fcompl
test
pusha
lods
test
pop
notb
popf
adc
int3
sarb
mov
lret
dec
rcrl
add
xchg
pop
rolb
sti
mov
xchg
repnz
dec
xor
test
in
add
cltd
inc
sbb
push
pushf
pop
shll
orb
ret
push
jbe
loopne
movsb
adc
xlat
shrl
dec
out
jns
jae
cmc
fsubl
in
rolb
or
arpl
push
jg
sub
xor
imul
test
push
or
in
mov
inc
daa
outsb
mov
out
lock
mov
inc
or
outsb
int3
dec
mov
leave
push
jg
push
sbb
dec
lods
adc
leave
cmc
nop
int3
prefetch
or
enter
add
jecxz
xor
dec
imul
outsb
jle
push
push
xor
add
fmull
sbb
xchg
adc
out
adc
stos
pushf
mov
lods
fstps
pop
iret
loope
xchg
and
cmpl
ljmp
push
popf
repnz
aad
cli
out
mov
jl
pop
xchg
jecxz
shll
jnp
push
pop
xor
pop
mov
movsl
jb
andb
or
fs
repnz
fwait
add
mov
sahf
cwtl
in
jmp
or
lcall
dec
imul
je
inc
xchg
sbb
sbb
dec
out
adc
outsb
pop
shrb
ficomps
jo
inc
fdivrs
adc
pop
jmp
in
lahf
lock
inc
mov
push
fwait
decb
fsubl
add
lds
aas
push
adc
cld
rorl
xchg
xlat
pop
fcomip
pop
mov
imul
movsl
test
outsl
pop
inc
je
test
xor
mov
sub
icebp
popa
mov
mov
xlat
dec
jl
inc
pop
outsb
inc
xor
fimull
out
mov
mov
mov
sahf
add
in
add
xor
inc
add
cld
cmp
shlb
xchg
sbb
pusha
cmpsb
stc
in
mov
or
rcrl
test
add
shl
imul
dec
in
sub
loope
dec
mov
lcall
sub
push
xchg
daa
add
call
icebp
rorb
xchg
bound
in
lods
push
insl
in
mov
inc
jnp
adc
lea
inc
cmpsl
popa
insb
sbb
lea
pop
test
xchg
loop
in
aam
mov
popf
ss
hlt
and
testb
inc
fdivp
inc
push
sbb
xor
xchg
jmp
dec
jne
aas
mull
xor
pop
push
cltd
push
pop
es
xor
push
idivb
out
not
sub
nop
jmp
bound
cmp
fisttpl
mov
pop
cmp
mov
mov
push
sarl
ficomps
cmp
push
sbb
mov
jne
adc
push
dec
cld
mov
clc
jl
inc
mov
cmp
adc
loop
xor
xchg
stos
adc
and
push
jne
lock
lods
sarl
repnz
lods
mov
sub
jo
mov
cltd
xchg
mov
adc
test
subl
ja
fs
push
test
adc
adcb
add
mov
xor
mov
iret
fwait
leave
cmpb
out
adc
push
je
pop
adc
mov
push
cmp
sbb
into
data16
aad
lret
mov
push
imul
jp
das
popl
mov
push
xchg
jbe
rcrl
dec
enter
cmp
add
cmp
test
loop
pushf
mov
loope
cld
das
sub
jge
sub
xchg
mov
ret
nop
sbb
out
cmc
mov
mov
add
xor
outsl
mov
cmc
mov
add
ret
jl
lds
ficompl
popf
mov
fisubrs
inc
out
js
pop
std
je
jmp
xor
not
outsb
add
mov
loopne
test
sbb
push
ss
les
fnstcw
dec
nop
adc
imul
scas
lcall
shll
inc
and
inc
fdivr
das
rorl
mov
cmp
scas
ret
les
fists
scas
sub
add
outsb
out
lret
orl
pop
pop
dec
adc
jo
push
es
sbb
test
cmp
aam
or
adc
and
lret
push
imul
dec
std
repz
dec
mov
push
dec
inc
sub
mov
sarl
xorb
int
stos
movl
mov
pop
repnz
repz
mov
aas
mov
sarb
aam
inc
add
dec
pop
addr16
push
xchg
sbb
pop
xor
int
scas
aas
pop
setne
xchg
hlt
or
test
or
pop
lods
jecxz
shr
out
push
dec
inc
scas
or
arpl
inc
int
pushf
push
scas
into
sarl
fst
mov
pop
dec
jge
test
lcall
jno
shlb
xchg
mov
pop
sbb
fs
repz
jae
pop
in
in
cs
cltd
cmc
xor
push
in
inc
mov
ficoms
and
adc
loop
inc
cwtl
scas
movsl
cmpsb
js
push
lock
movsb
movsl
xor
cmpsl
shrb
add
pop
inc
xor
or
arpl
loop
sub
pushf
popa
fistps
in
adc
pop
loope
or
mov
dec
cmp
or
push
mov
add
mov
sbb
insb
movsb
scas
movsb
aaa
pop
int
insl
mov
daa
lret
cmpsb
or
adc
test
outsl
fdivrl
jle
push
pop
adc
mov
sub
mov
mov
repz
je
mov
aaa
xlat
mov
sub
sub
aam
je
mov
inc
sarb
lods
lcall
sbb
cli
ficoml
cmp
or
push
add
pushf
jnp
ljmp
inc
stc
fdivrl
mov
push
inc
xchg
loope
jl
adc
lret
push
inc
dec
dec
sbb
pop
outsb
sahf
mov
adc
movsl
add
jge
cwtl
pushf
pop
fldcw
nop
cmp
pop
loope
inc
std
push
pushf
das
jmp
xor
push
pop
cmpsb
pop
movsb
lea
xor
stos
pop
dec
cmp
mov
jne
inc
cld
movsl
hlt
or
pop
push
xchg
xchg
cmp
aad
mov
fisubs
xlat
add
data16
inc
int3
ja
and
iret
adc
ret
cwtl
movsl
ftst
movsl
sti
sbb
xchg
add
aaa
adc
push
iret
mov
fdivs
cld
cwtl
add
test
mov
xchg
outsl
jmp
add
stos
xlat
push
enter
add
fstl
pushf
cli
inc
in
cmp
pop
push
or
incl
imul
push
mov
in
xchg
mov
in
pop
data16
sub
notl
iret
loope
in
insl
filds
insl
fbstp
adcb
mov
xchg
sub
sbb
mov
fsubr
lods
loope
or
gs
imul
add
outsb
dec
cmc
jp
stos
push
adc
mov
jmp
orl
jp
and
sbb
test
aad
push
js
icebp
ret
cld
jp
add
scas
ret
pop
test
push
sub
int
mov
add
addr16
inc
xor
pusha
mov
pop
jae
subb
push
pop
inc
pushf
inc
or
pop
jno
xchg
xor
adc
test
push
sbb
sbb
fsubs
outsb
and
rolb
inc
pop
xor
pushf
mov
add
stc
jg
mov
das
and
sahf
and
or
mov
mov
lret
lret
inc
push
add
sahf
adc
lret
ds
mov
sbbb
push
ds
lret
inc
arpl
jmp
add
jle
scas
mov
cltd
sbb
pushf
inc
mov
das
in
into
mov
mov
je
push
movsl
das
mov
add
insb
mov
fsubl
shrl
mov
xor
mov
fisubrl
into
cmp
icebp
jbe
and
cmp
jl
dec
scas
or
xor
cld
lahf
mov
daa
notb
pop
cmpsb
insl
dec
pop
aas
cwtl
and
pop
lcall
lahf
jg
pop
mov
icebp
mov
xchg
fstpl
mov
or
addl
loop
add
pop
jb
xchg
sub
mov
loop
mov
mov
mov
insl
pop
hlt
daa
pushf
jo
daa
or
out
pop
sbb
inc
sbb
mov
repz
mov
or
cmp
mov
fisubl
xchg
cmp
adc
les
addr16
mov
int
imul
push
pop
sar
daa
jp
sbb
inc
cmp
int
lds
dec
push
test
ret
xor
mov
les
pcmpgtw
lret
ret
xor
inc
or
add
imul
push
and
adc
xchg
adc
add
push
sub
shll
jb
stc
sarl
sub
xchg
push
nop
jo
or
cmp
mov
xchg
or
dec
lock
cmp
cmp
popa
xchg
shrl
movsl
jg
and
pop
aad
pop
jae
mov
stos
loopne
mov
cld
mov
sti
in
mov
mov
pop
clc
cmp
push
rol
aaa
ja
cmpsb
shlb
insb
pop
inc
in
sbb
add
fs
push
test
imul
xor
xchg
into
jge
or
push
sbb
lahf
push
mov
mov
sub
push
out
jge
fbstp
outsb
outsl
add
aas
xchg
ja
ret
ret
lods
stos
aas
filds
push
pop
fsubs
rcrb
hlt
jmp
pop
push
mov
jns
in
push
in
mov
push
loop
mov
fsubs
decl
out
adc
ret
cli
iret
lea
das
stos
sub
or
cld
enter
aaa
popf
pop
enter
adc
mov
cltd
movsb
add
sbb
andb
insl
insl
aam
sub
sbb
inc
inc
movb
xchg
add
stos
std
add
fldt
sbb
mov
jne
bound
adc
icebp
lret
repnz
hlt
push
cs
es
mov
stos
xchg
push
aas
adc
dec
mov
scas
jmp
mov
mov
sub
pop
adc
and
push
push
scas
pop
scas
aaa
jp
or
push
dec
add
fs
outsb
cmp
jp
push
and
out
push
and
or
je
mov
call
sbb
jno
ljmp
mov
jg
adc
jb
sub
mov
ja
jo
call
ss
mov
ret
aad
inc
add
mov
dec
pusha
mov
fmuls
push
xchg
nop
add
mov
rol
cmp
push
fs
jb
mov
stc
cmpb
out
xchg
add
insb
mov
divb
int
aam
add
push
ret
jecxz
out
add
xlat
adc
int3
xor
xchg
or
xor
mov
aam
cwtl
sbb
arpl
cwtl
xchg
dec
mov
arpl
jp
sahf
int
cmp
cmc
icebp
push
sub
push
rol
mov
push
mov
lcall
adc
das
mov
movsb
leave
adc
lods
adc
xchg
cmpl
cmp
repz
arpl
sub
imul
frstor
inc
fdivrs
ljmp
clc
into
mov
int3
ja
mov
cmp
adc
push
pop
sbb
jb
mov
xchg
mov
cli
jbe
push
and
dec
sbb
adc
pop
add
out
and
ds
insl
cmpsl
imul
xor
sahf
std
cmp
push
push
lds
inc
mov
pop
and
add
sbb
pminub
lods
or
xchg
sti
adc
syscall
negl
in
shrl
push
push
in
xchg
push
add
leave
popl
daa
push
out
cmp
xchg
test
test
orl
jb
xor
arpl
hlt
hlt
jmp
daa
lret
fisubrl
pop
push
xor
mov
cwtl
push
dec
mov
inc
jecxz
mov
inc
cmp
js
pop
test
ljmp
xchg
insb
rolb
popf
sub
repz
fistl
adc
mov
or
xchg
pop
outsb
inc
andb
xor
dec
inc
cs
jle
aas
nop
mov
les
test
cld
xorl
sub
pop
push
jo
gs
mov
xor
and
je
sbbl
outsb
mov
add
dec
arpl
testb
jle
cmp
adc
mov
pop
movsl
js
mov
xchg
push
mov
std
pop
pop
leave
sbb
fsubrs
or
mov
dec
inc
bound
and
mov
jb
xchg
orb
push
arpl
cmc
mov
fs
sbb
xor
in
xchg
fiaddl
cltd
pushf
ret
mov
iret
mov
imul
pop
jo
xor
fidivs
mov
call
mov
in
loope
dec
int3
lods
mov
dec
stos
lret
cltd
xor
fstpl
adc
dec
out
push
lock
je
loopne
add
xchg
inc
and
fistpll
mov
mov
dec
mov
out
cltd
lods
arpl
popf
mov
movsb
xor
mov
andl
lds
adc
sbb
insb
in
pop
mov
sub
mov
jl
hlt
lcall
jb
xchg
adc
into
out
mov
std
dec
or
add
ror
test
dec
cmp
sbb
es
jle
or
pop
jae
inc
mov
cs
pop
rcr
dec
jb
cltd
mov
aam
lds
adc
ljmp
sub
xchg
movsb
xchg
xchg
addr16
cwtl
insb
ror
rorb
or
into
lods
ljmp
bound
js
dec
xchg
mov
pushf
int
dec
sub
push
loop
adc
sbb
mov
xchg
pop
test
sti
lcall
fsubrl
inc
jmp
pop
fidivrl
inc
push
inc
stc
decl
and
sbb
aam
outsb
mov
int
xor
cmp
cli
loope
pop
push
jae
nop
cli
movl
stos
cmpsl
pop
add
or
pop
fmuls
dec
lcall
push
or
js
push
dec
stos
push
mov
adc
push
sbb
dec
dec
repz
sti
dec
ss
xchg
inc
xor
cwtl
dec
inc
call
dec
mov
in
rcrb
mov
inc
sbb
cmp
jl
jae
inc
icebp
daa
hlt
push
icebp
adc
popa
out
or
stc
add
add
rcrl
pop
xchg
add
cmpsl
adc
jge
jne
leave
push
nop
pusha
mov
scas
adc
push
dec
test
daa
jl
adc
push
cmp
cwtl
cmp
adc
dec
add
mov
jb
cltd
ret
mov
xor
mov
pop
dec
jp
jbe
mov
lret
xor
push
jg
inc
scas
pop
dec
sbb
sub
lods
pop
lret
push
cmp
fwait
inc
push
test
push
jp
sub
test
mov
test
push
cmp
xor
sbb
fwait
jne
cmc
ds
repnz
shl
jne
push
xor
mov
mov
jmp
imul
cld
movsl
sbbl
insl
out
push
aas
lock
addr16
mov
cltd
in
movsl
imul
add
fsubrl
jge
xchg
push
je
js
dec
mov
loopne
or
pop
mov
cmp
dec
cmp
xchg
adc
mov
pcmpeqb
push
dec
mov
sub
mov
xchg
add
and
cmp
data16
sti
movsb
push
add
sbb
and
js
and
mov
int3
mov
aas
je
mov
push
and
mov
jmp
xor
push
or
and
mov
daa
push
rcr
dec
arpl
sub
push
jno
jecxz
lods
push
mov
lcall
rorb
cld
pop
sub
cmp
xor
cmp
pushf
pop
xor
mov
pusha
popa
jnp
cmpsb
test
in
pop
repnz
or
add
fildll
adc
jb
std
loopne
ja
inc
cmp
mov
rcrb
lock
sub
pusha
incb
pop
push
das
imul
lea
into
or
adc
popw
in
inc
pushf
inc
lahf
les
inc
fwait
ljmp
pop
or
sbb
xlat
aad
and
jecxz
test
sub
jno
stc
cwtl
mov
push
dec
data16
or
jno
into
cmpl
andb
jbe
inc
int
imul
stos
bound
ret
loope
test
or
mov
xchg
and
imul
repz
mov
dec
pop
mov
cmp
dec
icebp
adc
lods
leave
xor
dec
sub
cmp
arpl
cwtl
push
sbb
cmp
and
fsubrl
inc
aad
cmp
dec
jecxz
popf
je
adcb
loop
dec
xchg
testl
stc
imul
repnz
popf
test
mov
stos
subl
jno
inc
mov
xorl
mov
insb
xchg
adc
mov
add
mov
cmp
sbb
test
movsb
aas
out
sub
adc
out
mov
inc
fucomip
clc
je
pop
sub
aam
ret
lods
es
js
fstpt
icebp
je
js
lret
stc
jnp
jmp
fsubrl
lcall
mov
xchg
outsl
inc
cmp
out
jle
inc
lods
xchg
in
call
cmp
jmp
test
or
push
or
lret
push
jg
sub
mov
inc
xor
scas
xor
fistps
jb
or
jge
jns
in
add
sti
stos
mov
imul
insb
xor
sbb
push
repnz
cmp
cmp
movsb
dec
rolb
pop
and
repz
jmp
jnp
sbbb
dec
repz
dec
out
subb
dec
mov
pop
cmp
repnz
aad
insl
fs
push
sub
cmp
xor
and
mov
dec
lds
jmp
pop
cmp
mov
test
mov
mov
push
jne
sub
xchg
sub
sar
xchg
and
pop
fucomip
stos
and
ret
add
mov
lahf
inc
je
sbb
or
cmp
sub
dec
adc
dec
fcompl
jp
stos
mov
mov
stos
daa
iret
and
sbb
rorb
mov
inc
cmp
mov
xchg
sbb
pop
and
test
jae
jle
jns
add
xlat
lds
inc
sarl
sub
clc
in
adc
pop
dec
push
das
mov
xchg
pop
and
dec
sbb
ret
repnz
iret
jns
je
push
and
and
push
out
cs
hlt
incb
or
outsb
clc
sbb
stos
clc
in
mov
inc
jbe
push
jbe
xchg
fdecstp
leave
jmp
dec
dec
fstl
add
push
fldt
lods
cwtl
xchg
and
mov
lcall
adc
in
xchg
ret
xchg
es
adc
push
sub
lds
and
xchg
shlb
mov
sti
out
test
adc
add
or
movsb
or
lods
push
mov
pop
sbb
mov
test
stos
xchg
mov
bound
fistps
push
rorl
mulb
adc
aam
jne
cmpsb
mov
pusha
mov
es
lea
cli
inc
lods
push
je
stc
and
inc
add
adc
fucomi
sbb
ds
xchg
call
sbb
sub
inc
icebp
jno
mov
imul
dec
cmpb
xor
cs
and
sbb
data16
xor
push
sbb
jns
dec
adc
xchg
adc
mov
int
and
xchg
lods
mov
adc
or
mov
cltd
push
inc
loop
jmp
stc
dec
jb
je
loop
or
mov
jae
mov
add
and
and
in
imull
mov
js
fmuls
lret
ficoms
jb
inc
mov
sbb
data16
aas
pop
sbb
cs
orb
pop
xchg
and
sbb
xchg
subl
cmc
mov
inc
push
outsb
xor
mov
pushaw
mov
fdivrs
inc
jl
into
and
ds
xchg
imul
fsubrs
inc
jae
xchg
add
leave
lret
mov
jmp
fistpl
jge
adc
push
call
mov
and
scas
sub
ljmp
clc
sbb
xor
mov
icebp
sub
mov
or
or
cwtl
dec
xchg
push
fmull
sbb
cs
int
scas
add
add
popf
xor
negl
movsb
jp
xor
push
dec
jg
mov
mov
movsb
outsl
and
clc
loopne
clc
pusha
cwtl
dec
add
xlat
in
sarb
push
inc
fimuls
enter
push
ss
jmp
out
xor
cmp
jge
mov
lcall
dec
aaa
pop
insl
cmpsb
cmp
test
and
or
jae
fucom
enter
testb
jg
daa
imul
cmp
add
xor
or
jno
bound
pop
ja
mov
mov
inc
cmp
dec
cltd
fucomp
in
and
xor
xor
ds
pusha
fs
pop
sbb
and
inc
xchg
cs
add
rorl
push
fistpl
sub
das
xchg
fimull
push
or
jp
icebp
hlt
insb
mov
pop
adc
sbb
bnd
or
cmp
and
jecxz
je
inc
inc
sbbb
in
stc
pushf
sbb
lods
roll
xor
mov
stos
jecxz
fwait
cld
shl
adc
insl
ss
add
pop
fwait
push
xchg
pop
xchg
adc
subl
jecxz
adc
enter
jge
pop
stc
jmp
inc
js
jmp
stos
sub
pop
idivl
fisttpl
jb
sti
cld
test
lret
xor
rcl
bound
cs
mov
lods
push
js
xchg
and
pop
stos
aaa
jle
std
xor
nop
push
outsb
pop
stos
insb
xchg
gs
xcrypt-ctr
cmpsl
lahf
popl
inc
push
cmpsb
inc
out
mov
movsl
in
jge
mov
shrl
cld
jmp
enter
dec
or
adc
mov
dec
mov
mov
jecxz
xchg
cmpsl
into
xchg
or
sbbb
push
dec
pop
sub
mov
cmp
mov
xchg
and
mov
dec
add
insb
fisttps
shlb
mov
lock
xor
mov
mov
or
jmp
jle
dec
adc
mov
repnz
adc
in
pop
mov
xor
adc
adc
dec
pop
or
sub
lock
mov
pop
sahf
fdivrs
insb
pusha
adcl
ljmp
xchg
bound
pop
cmp
aas
lock
les
adc
inc
addb
dec
lret
aaa
dec
jnp
dec
dec
gs
mov
call
scas
mov
push
inc
pushf
pop
dec
shr
int
mov
ss
inc
jno
dec
jb
into
outsl
xchg
ja,pn
inc
jne
scas
mov
mov
pop
jp
test
repz
mov
cmpsl
adc
nop
pop
or
push
aas
js
stos
pusha
sbbl
pop
leave
xor
inc
dec
hlt
inc
mov
das
arpl
sbb
jmp
popf
pop
je
loopne
jns
mov
mov
mov
leave
fcmovnbe
xchg
jmp
xor
add
scas
mov
in
outsb
and
push
or
nop
mov
push
xor
lahf
jne
sbb
jl
cwtl
xlat
inc
jae
adc
jle
inc
add
sbb
ret
xchg
popf
data16
imul
in
xor
out
nop
xor
in
mov
pop
mov
pop
enter
and
pop
mov
lods
rorl
ds
inc
das
mov
mov
xor
dec
inc
iret
sbb
cmp
std
ret
jmp
insb
pop
adc
adc
roll
push
mov
xchg
imulb
mov
or
repz
xor
inc
and
nop
push
test
in
mov
movsl
pop
sti
orb
ss
test
subl
arpl
cli
cld
les
repnz
in
repnz
aas
xchg
test
xorl
pop
loopne
push
loop
inc
pop
loope
cli
jge
loopne
pop
xlat
dec
jge
lahf
insb
roll
mov
call
aam
fidivrl
dec
fwait
fwait
or
ret
xchg
sbb
mov
or
and
inc
push
cli
cltd
jae
add
sbb
rclb
decb
dec
rclb
xchg
fistpll
test
dec
into
mov
clc
sub
sahf
sarl
or
adc
or
or
dec
mov
outsb
sub
and
scas
cmp
mov
mov
movsl
xor
push
cmp
dec
lahf
sub
jl
aam
or
push
xor
out
jle
push
dec
mov
mov
enter
dec
or
movsb
fstpl
aam
aam
push
and
mov
xchg
dec
add
sahf
fistl
mov
pop
or
fcoms
fimuls
push
push
inc
movsl
in
dec
rcrb
xchg
xor
lret
sarb
sbb
push
stc
fwait
shlb
mov
es
xchg
mov
insl
gs
divl
push
xor
in
bound
jle
jno
call
imul
mov
cmpsl
adc
int
faddp
loop
dec
xor
mov
xchg
xor
aaa
cmc
sbb
jecxz
jns
xchg
and
pop
sbb
xchg
scas
sbbl
jge
icebp
sbbb
xor
sti
lret
divl
lock
pop
loop
cld
cmp
out
out
fadd
loope
jns
out
fcmovnb
test
jp
in
int3
scas
stos
jg
sub
ss
inc
jcxz
mov
xchg
jp
and
pop
sub
out
stc
insl
addr16
jo
shll
lock
sbb
lods
or
repz
insb
pop
popf
test
inc
cs
add
jecxz
shll
insb
push
lock
mov
inc
push
pop
xor
dec
mov
or
jo
dec
dec
dec
add
xchg
push
mov
mov
push
popf
mov
mov
adc
scas
cmp
or
mov
stos
push
fnclex
mov
loop
push
mov
and
popf
pusha
jmp
cmp
cmp
in
pushf
cmp
pop
mov
sub
daa
dec
lahf
stc
xchg
fisubl
clc
mov
rclb
pop
ret
push
add
sub
add
xor
les
ret
push
cli
leave
stos
jecxz
xor
sbb
stos
repz
mov
scas
lret
push
add
mov
popa
in
outsb
adc
cmp
inc
add
imul
bound
xor
divl
xor
push
sbb
ret
fidivrl
or
jge
mov
cmpsb
je
add
push
xchg
cmp
add
cs
mov
movsb
xor
lods
jl
aaa
mov
bound
fs
pushf
ljmp
insb
ja
shlb
fbld
push
hlt
cmp
jae
push
xchg
aas
pusha
call
jecxz
xor
aas
dec
and
inc
add
icebp
fdivl
mov
pop
sbb
sbb
jne
inc
pop
js
es
mov
divb
jge
flds
sbb
jge
loop
cwtl
sub
adc
scas
cmp
mov
pop
jae
arpl
dec
in
xchg
mov
inc
xor
jecxz
inc
mov
fucomp
stos
pop
lock
sahf
stc
or
push
inc
mov
aam
enter
push
inc
popa
shll
addb
insb
add
xchg
jb
daa
xchg
bound
push
enter
dec
pusha
xchg
fadd
jmp
add
push
je
adc
jnp
jmp
adc
sti
mov
mov
jbe,pn
or
jl
fistps
lcall
cwtl
adc
push
lcall
mov
push
jecxz
jecxz
gs
sbb
lock
outsl
shll
push
sub
xrelease
add
and
bound
xchg
loope
aad
rclb
xchg
mov
cmp
push
xor
aas
mov
rorb
pop
gs
sbb
ffreep
xor
jb
xor
out
movsl
mov
iret
ss
xchg
jbe
pop
inc
mov
dec
and
enter
jb
ss
lds
mov
sbbb
cmp
xor
jbe
add
mov
in
cltd
xor
fidivl
iret
fstps
icebp
mov
dec
push
or
dec
sbb
mov
dec
lods
adc
add
sti
xor
stc
xor
in
add
mov
fcmove
push
xchg
mov
or
push
cmpsl
loope
loop
nop
sahf
in
or
aaa
push
adc
xchg
decb
fistpl
and
jbe
push
cmp
jns
fldt
shrb
out
rcrl
mov
clc
xchg
test
push
add
push
cli
loope
sbb
jg
mov
sti
pop
xor
scas
mov
in
adc
sub
sar
mov
mov
rcrb
nop
mov
push
mov
add
loop
jno
mov
daa
js
addr16
xchg
std
movb
pop
adc
scas
dec
mov
inc
imul
add
lret
add
adc
pop
pop
cmpsl
stos
out
fsubl
repnz
ss
push
pop
xor
loopne
pop
mov
nop
daa
xchg
xchg
or
jne
and
pop
inc
aas
aaa
jnp
mov
jns
cmp
out
cmpl
mov
mov
imul
inc
xchg
jne
adc
pop
pushf
pop
mov
sbb
mov
popf
mov
mov
movsl
cltd
cmp
out
insb
aas
mov
fisubl
and
xchg
adc
adc
push
pusha
push
sbb
push
jmp
xor
dec
inc
push
adc
jl
push
iret
dec
pop
in
pop
fwait
xor
jge
scas
outsl
sub
sub
sbb
pop
jle
push
gs
les
in
adc
lret
sub
gs
xor
ret
test
sti
sbb
js
sbb
pop
inc
push
addb
xor
call
pop
jp
int3
cmp
in
mov
pop
lret
stc
xor
roll
xor
shrb
cmpsb
insb
add
fidivs
or
outsl
fldl
push
add
ret
mov
cs
push
jmp
dec
mov
arpl
push
std
and
add
leave
push
pop
mov
loope
pop
fsubrs
jnp
bound
cltd
pop
sub
and
and
addr16
jmp
mov
push
dec
xchg
pop
loopne
ja
pop
repz
icebp
mov
int
inc
inc
jecxz
scas
int3
cmp
pop
push
jno
xchg
mov
daa
cmp
jo
mov
sbb
addr16
jle
sti
notl
daa
mov
mov
sbb
xchg
js
js
jnp
dec
out
imul
mulb
jne
lret
pop
inc
sti
mov
repz
jbe
or
mov
mov
lret
pop
dec
xchg
mov
test
movsl
loop
sbb
aam
push
outsb
cld
andb
je
xor
data16
lahf
out
orb
repnz
sub
jp
xlat
mov
movsb
inc
lods
adcb
hlt
sahf
pop
or
pop
push
bound
or
fwait
jne
into
loopne
jno
cli
fsubs
dec
cli
push
gs
lcall
fs
add
nop
pop
xor
and
adc
adc
in
mov
lock
mov
mov
xchg
inc
or
shrl
dec
cltd
pop
fs
push
movsl
movsl
inc
xchg
pop
pop
push
jnp
adc
cs
jnp
add
push
imul
mov
xchg
inc
inc
cs
movl
cmp
adc
inc
and
movsl
shlb
dec
out
pop
inc
iret
sbb
ffreep
shlb
push
jecxz
popa
aas
gs
add
gs
movsl
mov
jae
mov
mov
int
inc
push
repnz
xchg
mov
rclb
cmp
pop
jbe
test
sbb
add
push
mov
setle
sub
js
jecxz
filds
inc
adc
lea
stos
dec
sbb
inc
push
sar
gs
push
out
mov
mov
pop
lea
inc
xchg
inc
mov
sahf
or
sbb
push
or
lods
sub
repz
xor
and
fdivs
dec
aad
push
jnp
cmp
jb
cmc
movsl
ds
cmp
pop
sub
filds
aas
cmpsl
push
mov
insb
xor
mov
xchg
mov
cmp
int
popf
dec
mov
and
sahf
insb
pop
insb
sti
push
inc
and
or
ljmp
jo
leave
jns
ret
addr16
pop
mov
pop
dec
popf
and
subl
mov
aas
push
es
cmp
lret
dec
lea
mov
vpmuludq
int
push
dec
pop
outsb
rorl
sbb
adc
in
cmp
mov
arpl
jbe
jo
aas
sbb
loope
push
cmp
in
frstor
inc
icebp
lret
rolb
aam
push
push
pop
std
addr16
cld
cmpsl
or
stc
mov
jnp
xchg
arpl
adc
mov
rcrl
test
sub
dec
mov
pop
cmpl
in
and
mov
xor
in
sbb
clc
ret
sbb
aam
mov
loop
insl
jno
adc
inc
bound
xchg
mov
jmp
mov
cmc
mov
outsb
mov
ss
cmpsl
sub
js
pop
jmp
les
push
add
fwait
sub
pop
mov
fidivrl
cmp
sbb
mov
movsl
xor
nop
sub
shlb
sti
sbb
lret
sbb
lret
int
add
imul
xchg
push
dec
or
test
sub
jb
mov
clc
js
jge
push
push
test
xlat
cmp
ljmp
pop
ret
jno
xchg
adc
push
push
sub
xchg
enter
repnz
mov
test
repnz
jne
cld
stc
cli
fwait
out
push
mov
inc
imul
imul
sbb
mov
mov
lahf
lock
mov
push
inc
jne
sub
pop
push
mov
mov
stos
test
pop
sahf
pop
enter
cmc
inc
cmc
sub
sub
mov
lods
cmpsl
outsl
std
stos
xchg
mov
cmp
repz
fimull
inc
dec
xchg
aad
add
das
scas
test
imul
dec
popa
push
test
mov
out
jno,pt
sbb
call
sahf
jl
repnz
sbb
adcb
jb
mov
cmp
jecxz
inc
push
lods
pop
push
ja
sbb
ret
repnz
int
lods
notl
mov
std
in
or
sbb
pop
inc
fldt
shrb
loopne
ficompl
push
mov
jno
mov
outsl
std
bound
push
outsl
lods
lock
subb
fisubrl
stc
in
call
xor
push
push
imul
test
mov
popf
jmp
dec
cmp
imul
adc
rorl
mov
xor
addl
add
gs
adc
mov
lods
stos
add
insl
lods
fisubl
pop
xchg
mov
repnz
imulb
nop
adc
mov
inc
sbb
daa
xchg
jge
mov
popf
addr16
xchg
scas
jp
xchg
rolb
sar
adc
out
pop
cltd
outsb
jb
mov
dec
fs
bound
jo
jl
or
ds
mov
popa
sub
int
mov
adc
xchg
mov
xor
mov
scas
push
inc
out
js,pn
incb
fsubrs
inc
mov
dec
inc
mov
ds
adc
xor
into
rol
mov
rorb
into
push
cmp
ret
fcoms
fistl
inc
adc
jmp
scas
push
sbb
jns
lahf
ret
pop
lods
rcr
xchg
xchg
pop
cmp
mov
pop
mov
sar
fsubrl
mov
add
adcb
inc
pop
test
lret
int
lret
adcb
scas
bound
mov
aam
cwtd
cmpsb
roll
rcrb
test
rorb
and
les
fwait
pop
cmpsl
ret
aam
insl
and
movsb
push
in
mov
js
dec
lods
jecxz
xor
xor
xlat
inc
cmp
clc
push
xor
dec
mov
sti
inc
test
lea
call
lahf
loop
leave
jp
rorb
sbb
push
mov
out
sub
fs
mov
fimull
cmp
scas
insb
lret
pop
mov
leave
mov
pusha
add
jge
jo
push
mov
pop
pop
and
xchg
sti
jne
push
and
add
imul
lahf
out
mov
cmp
repnz
orb
lahf
pop
xchg
leave
add
jbe
push
lock
and
leave
aam
ret
cmp
jne
or
cli
fnstenv
cmpsb
inc
int
fdivs
add
inc
mov
xorl
or
out
mov
sub
mov
or
push
clc
outsl
mov
or
in
cmp
mov
lods
mov
mov
lds
mov
shr
mov
fldl
rcl
mov
aam
shlb
cmp
aad
test
and
xchg
mov
mov
fsubrl
in
sub
call
insl
add
cmp
jbe
outsl
lock
xlat
sti
cmpsl
inc
sub
fiaddl
gs
inc
adc
aas
or
push
cmp
cmp
push
inc
ret
sub
out
push
out
into
lret
xchg
jl
jmp
mov
das
sbbl
rclb
bound
jns
cmc
sbb
mov
pusha
jle
subl
daa
cmpsl
adc
adc
xchg
add
lods
adc
pop
mov
jbe
cli
sub
mov
or
push
rcrb
int
push
pop
hlt
cwtl
sub
pusha
dec
xor
or
test
push
imul
dec
pop
andb
pop
iret
xor
ljmp
rorb
sub
jne
fists
inc
decb
jo
pop
fwait
jle
pop
xor
mov
repz
or
loopne
xor
adc
imul
sub
pop
mov
and
xchg
or
shll
es
and
cmpsb
lods
fs
jecxz
push
inc
sbb
mulb
jp,pt
mov
shlb
addl
add
inc
sbb
sub
jecxz
in
add
in
push
cld
xchg
sarb
and
outsb
arpl
mov
and
add
push
aaa
jge
mov
movsb
fimull
xchg
lods
dec
xor
cmp
testl
jge
adcb
in
shll
arpl
push
and
mov
jmp
mov
sbb
clc
cmp
push
rorb
mov
loopne
insb
mov
jmp
push
inc
xor
adc
data16
aas
mov
fwait
lods
loopne
scas
push
rorb
aaa
mov
out
pop
lret
sbb
xchg
mov
pop
clc
and
push
cmc
mov
fcomps
std
push
mov
mov
sti
insb
outsl
imul
aaa
push
andb
outsl
lahf
outsl
imul
jb
imul
dec
std
sub
xchg
adc
ds
enter
fadd
inc
inc
xlat
inc
testl
inc
repnz
jo
in
test
mov
jnp
xor
test
scas
push
jle
or
daa
enter
inc
sbb
insl
mov
dec
sbb
xchg
outsl
outsl
xchg
jbe
cltd
lahf
outsl
push
es
mov
adc
lret
lret
sbb
add
insl
iret
or
and
imul
movsl
scas
gs
fiadds
sbb
pop
roll
pop
push
adc
add
sub
push
imul
sub
pop
cld
flds
mov
mov
rcl
clc
repz
xlat
cld
int3
mov
mov
enter
mov
stos
clc
scas
mov
jns
xor
lea
sti
mov
mov
lcall
jmp
jno
shll
sbb
pop
add
mov
subl
fstpt
jns
cmpsb
movsl
hlt
jl
dec
mov
or
and
jmp
push
in
insb
ret
add
cmp
dec
cmpsb
cmpsb
mov
test
add
mov
filds
jae
pop
out
repnz
or
push
inc
inc
addr16
test
dec
cs
inc
aad
bound
test
xchg
jae
xchg
mov
pop
sub
inc
decl
push
scas
mov
roll
inc
outsb
ret
pop
sub
mov
out
xor
imul
inc
shlb
or
arpl
cmp
mov
int3
rcrl
cmpl
je
cltd
or
cwtl
or
add
clc
pop
cs
stos
mov
aad
outsb
or
dec
leave
xchg
mov
push
or
subl
rcrl
push
cld
add
or
ret
mov
push
cmp
jp
jl
or
outsl
lahf
idivl
cmp
sub
add
pop
xchg
clc
sub
pop
fnstcw
fwait
sahf
or
bound
shrb
loopew
lods
faddl
fsub
insb
lds
dec
push
pop
lret
jb
imul
push
push
insl
ret
fs
in
xchg
ja
addl
fcoml
xor
fcmove
and
ret
cmpsb
test
sbb
mov
sub
mov
test
xchg
xor
sarb
iret
bswap
or
adc
xchg
xchg
dec
cmp
cmp
mov
imul
or
pop
and
mov
das
or
aaa
scas
aam
dec
mov
test
out
loopne
add
scas
lds
mov
pop
pop
pop
lahf
pop
test
cs
adc
imul
stos
fs
xchg
outsb
xor
sbb
mov
inc
mov
in
add
fs
mov
cltd
inc
fsts
les
movsb
jns
add
push
cmpsl
clc
mov
pmovmskb
repnz
clc
cmpsb
lret
xchg
es
pcmpgtb
mov
and
push
sbb
dec
daa
lds
or
xchg
add
fnstcw
and
xlat
stos
aas
and
sahf
dec
lret
xor
dec
popa
cmp
and
add
loop
lea
add
or
or
push
mov
mov
sub
push
push
jp
inc
adc
jg
and
jnp
test
pop
aam
adc
lret
fwait
push
int3
xor
dec
fisttpl
cmp
jns
xchg
jne
cmp
jle
mov
lret
test
mov
push
mov
fidivs
adc
sahf
mov
aad
into
shlb
pop
xor
jg
inc
mov
out
mov
daa
dec
push
or
inc
test
mov
je
gs
cmp
add
mov
lods
adc
aaa
sbb
dec
daa
mov
aas
xchg
mov
push
idivb
fsts
mov
mov
jp
iret
cs
enter
lahf
xchg
mov
repnz
sub
dec
jo
pop
jg
xor
or
test
xor
mov
and
rcll
movl
mov
pop
dec
jns
pop
adc
mov
pop
ljmp
inc
push
mov
add
lods
mov
xchg
test
mov
mov
imul
mov
sahf
out
lods
notl
rolb
in
sbb
add
cs
cmp
int
loopne
inc
hlt
nop
stos
hlt
lahf
or
or
add
mov
inc
xor
sbb
mov
mov
lds
lret
inc
cli
add
inc
add
jg
mov
pop
push
jne
dec
ss
inc
rol
mov
xchg
dec
add
or
popf
cmp
shr
les
or
ljmp
popa
xlat
into
icebp
lods
push
ret
lret
ljmp
mov
loopne
inc
clc
stos
in
mov
inc
pop
sahf
pop
cltd
in
mov
std
or
mov
adc
sbb
push
insb
les
test
mov
mov
sub
sbb
pushfw
jnp
cmpsl
mov
sbb
or
dec
mov
insb
ds
jle
mov
out
pop
xchg
sti
dec
dec
lret
ljmp
sbb
xchg
out
dec
dec
sbb
insb
fstl
inc
jp
jmp
loopne
into
inc
pop
jnp
stos
mov
cld
sbb
arpl
fs
ret
jg
mov
pop
out
inc
in
sbbb
jns
sub
jns
insl
repnz
add
sub
idiv
andl
pop
push
testb
push
inc
dec
es
add
mov
mov
imul
mov
lock
rolb
or
adc
push
sti
mov
insb
add
jecxz
gs
cmp
and
into
sbb
imul
push
out
cs
insl
aas
shlb
std
mov
inc
insl
cwtl
faddp
std
insl
das
lahf
jl
push
cmp
jns
popf
bound
dec
cs
jp
dec
subl
sub
jb
push
pop
xlat
shll
add
mov
sbb
push
pop
dec
dec
in
jne
fbld
fistl
lea
cmpsb
bound
pop
push
popf
sub
mov
sbb
mov
push
xchg
test
dec
dec
inc
xor
jg
mov
lods
ljmp
popa
cli
mov
adc
pop
test
in
xchg
sbbb
or
adc
inc
loopne
pop
mov
jb
mov
mov
push
pop
in
imul
mov
inc
sbb
jg
movsb
add
jbe
scas
jne
sbb
sahf
mov
int
sbb
popfw
mulb
or
jo
aad
jbe
xchg
jno
xor
push
int3
mov
cmp
cmp
mov
ja
imul
in
cltd
jge
push
mov
push
movb
ds
mov
sub
adc
xor
or
movsl
frstor
scas
mov
mov
stc
inc
push
mov
daa
outsl
jecxz
sbb
jno
push
lcall
inc
cmp
movsl
das
mov
inc
adc
int
test
mov
out
lea
aaa
jne
xor
filds
push
lahf
insb
mov
les
sub
jnp
adcl
insl
mov
movsb
dec
enter
dec
mov
cmp
mov
movsb
inc
ja
mov
cmc
insl
inc
fwait
imul
and
push
jp
sahf
pop
sub
lahf
add
inc
sbb
ret
mov
je
sbb
aas
dec
mov
test
out
mov
mov
cmpsb
cmpsl
push
mov
in
xchg
ds
mov
jno
adc
sub
insl
sbb
notb
xor
push
je
cmp
add
jo
cwtl
mov
mov
subb
iret
sbb
fs
adc
js
sahf
mov
mov
cmp
jne
sub
pop
xchg
ljmp
ds
mov
mov
outsb
push
lock
jnp
daa
pop
les
jmp
stc
int3
ret
pop
imul
dec
or
mov
mov
js
mov
rcl
xor
or
in
nop
push
test
push
inc
cwtl
in
push
es
jnp
movsl
mov
jg
jp
sub
sub
sub
ret
mov
into
jne
mov
mov
in
jbe
fstl
aaa
mov
aad
in
inc
mov
mov
mov
daa
les
lods
mov
int3
aaa
xlat
cmpsb
movsb
xlat
push
xchg
fmuls
dec
repnz
fimuls
pop
xchg
fnstenv
rcll
jb
ficoml
fldl
fadds
repnz
cmp
std
jno
mov
xchg
dec
mov
mov
mov
mov
mov
push
xor
sub
dec
pop
and
push
fbstp
or
add
mov
lock
repnz
fcoml
inc
mov
cli
push
push
xor
ja
fiaddl
adc
mov
jle
xor
push
je
test
dec
mov
or
push
repnz
jae
movsb
xor
sbb
add
or
loop
push
out
mov
xchg
pop
inc
sub
mov
je
mov
cmpsl
aas
mov
or
ror
notb
and
aas
push
leave
push
lcall
rcr
mov
fcomps
add
cmp
leave
pop
jge
cmp
lcall
cmpl
sbb
xor
in
roll
test
das
je
insl
or
dec
jnp
imul
xor
lds
stc
mov
arpl
sub
pop
jno
addr16
adc
jp
sub
jl
pop
lods
mov
mov
push
lds
xchg
xchg
xchg
rcll
sbb
adc
mov
sub
push
in
xor
hlt
lahf
in
lahf
mov
andl
cmp
daa
xchg
ljmp
push
testl
xor
cli
xor
cmpsl
mov
scas
test
jg
xchg
pop
int
test
in
xorl
jo
add
xor
ret
lret
mov
lock
pop
loopne
add
dec
push
outsl
sti
adc
jns
and
fldt
decb
jo
sbb
cmc
out
rorb
lahf
adc
push
stos
xorl
shl
and
mov
js
or
repnz
subb
adc
jl
gs
iret
rclb
idivw
mov
cli
or
xchg
push
int
cltd
jnp
addr16
sub
sub
add
mov
stos
jns
mov
sub
aas
jg
pusha
rorl
xchg
mov
clc
jne
xor
push
jle
and
mov
and
adc
movsb
add
cwtl
push
inc
cmpsb
push
rcrl
cmpsl
mov
jecxz
js
cmp
repnz
xor
ret
das
mov
cmp
push
sub
int
pop
fldt
in
and
int3
mov
xor
sbb
stos
repnz
sbb
xchg
ss
and
sbb
inc
popa
out
fiaddl
and
loope
adc
jne
cmp
outsl
out
jecxz
add
mov
xor
mov
and
inc
shll
adc
in
mov
inc
push
icebp
jns
push
adc
push
call
sub
adc
adc
lods
mov
ret
fimuls
out
dec
stc
lods
cmc
mov
sub
mov
jle
or
jnp
add
pop
sub
mov
jo
or
sub
loop
mov
fbstp
jo
jmp
addb
ret
jnp
not
les
cltd
xchg
mov
lock
pushf
lahf
roll
push
jns
and
out
mov
mov
jo
add
sbb
jmp
pop
mov
lret
iret
push
mov
stos
inc
cmp
std
scas
inc
mull
push
movsl
jp
insb
in
mov
xchg
cmp
pop
fcmovnbe
xchg
fisttpl
lea
mov
dec
or
addb
push
leave
and
xchg
mov
aaa
push
dec
insb
mov
mov
pop
and
in
sahf
cmp
pop
insb
inc
imul
mov
ret
pop
pushf
pop
mov
gs
add
addr16
adc
lods
mov
cs
ret
sahf
dec
mov
lahf
fdivl
ret
add
push
sub
aaa
out
popf
sbb
pushf
push
lahf
cmp
xchg
sahf
popl
mov
inc
rcr
jp
jnp
add
jg
push
outsl
movsb
jnp
pushl
fistl
adc
je
pusha
aas
add
adc
and
add
push
js
outsl
popf
shll
jne
popa
scas
xchg
cwtl
push
adc
mov
out
jge
test
mov
pop
push
mov
jb
or
mov
movsb
ret
mov
dec
cld
sub
dec
sub
jnp
ljmp
adc
and
call
xchg
or
xchg
sub
es
push
pmaddwd
jb
shlb
xor
lcall
jge
cmpsl
ljmp
pop
test
out
inc
xor
mov
cmc
and
xor
mov
into
lret
stos
mov
xorb
fdivrl
xor
insb
mov
dec
xchg
sbb
mov
or
or
push
push
popa
lea
jecxz
pop
xchg
fwait
test
into
movsb
call
mov
subl
xchg
in
rcr
mov
imul
mov
push
shl
jno
mov
add
xor
pop
mov
push
in
insb
sbb
ljmp
scas
int
cmp
cltd
ds
sbb
push
mov
or
add
fidivs
push
faddl
push
xor
cld
sahf
mov
dec
mov
jbe
push
push
out
xchg
lea
inc
pop
dec
outsb
mov
adc
in
sub
fld
movsl
xchg
jno
lret
push
and
add
fisubl
and
sub
jl
sbb
and
hlt
lahf
inc
inc
mov
fadd
js
xchg
dec
jmp
push
push
mov
xchg
fstpl
pop
cmp
mov
aad
xchg
scas
js
inc
or
mov
inc
es
hlt
ffree
adc
hlt
mov
mov
clc
xlat
push
lds
imul
data16
in
dec
test
cmp
jno
dec
lea
and
pop
jae
cmp
insb
mov
hlt
fisttps
cmp
mov
pop
fildl
movzwl
loope
sar
xor
subb
loope
out
dec
push
inc
fnstenv
inc
stc
xor
push
xchg
sahf
arpl
mov
and
sbb
in
lods
stos
stos
sti
in
push
pop
dec
into
les
push
rcrb
clc
add
rolb
fcomi
pop
or
pop
aaa
lret
flds
icebp
pop
jle
das
mov
cli
in
push
cmp
gs
dec
xchg
icebp
cmp
inc
test
fsub
loope
bound
inc
testl
xadd
sarb
loop
aad
mov
sub
push
orb
shrl
xchg
insb
mov
add
pop
mov
div
or
addr16
lds
ds
pop
push
jne
outsl
data16
fwait
orb
cmc
in
imulb
xor
sub
jp
dec
push
hlt
jo
mov
xchg
inc
cmpsl
ljmp
push
daa
jb
andl
pop
mov
imul
sbb
iret
icebp
sbb
lret
sub
popa
scas
fidivl
dec
xchg
xchg
pop
aam
or
repz
rolb
enter
mov
aam
ds
sub
xchg
adcl
scas
pop
imul
push
cmp
push
sahf
or
int3
stos
pop
jb
push
jae
xor
sti
inc
repnz
inc
hlt
pop
fadds
push
aas
add
mov
jp
cs
xor
jno
ja
pop
pop
inc
mov
arpl
adc
shlb
outsb
clc
fistl
stc
mov
push
push
add
push
push
in
inc
lret
out
sbb
xor
lock
jg,pn
mov
adc
adc
testl
inc
xlat
out
ljmp
stos
jg
jmp
shl
lea
gs
pop
pop
fs
mov
daa
gs
mov
pop
cmc
ljmp
mov
fs
mov
mov
pop
or
outsb
fsts
push
jp
lea
or
pop
mov
and
outsb
call
xchg
cli
int3
dec
arpl
mov
dec
xchg
mov
test
sub
jg
leave
pop
push
fcom
xchg
dec
xchg
mov
adc
push
scas
cmpsl
cld
jno
sarb
mov
jns
lret
sbb
stos
xchg
jmp
pop
lods
push
add
pop
rolb
loopne
std
add
cmp
cs
mov
stc
int3
push
xchg
dec
pop
test
pushf
inc
adc
sti
rcrb
dec
lock
jns
xor
cmpsl
fists
fcomi
dec
dec
sub
sub
mov
imul
and
pop
pop
das
ret
mov
and
movsb
in
out
repz
rorl
mov
mov
rorb
xlat
pusha
aaa
mov
adc
adc
je
shlb
add
repz
sub
xlat
inc
cltd
mov
filds
cs
pop
lock
or
push
rcr
lret
enter
js
icebp
repz
mov
loopne
loop
insb
nop
jae
mov
gs
push
cwtl
call
in
add
pushf
cmp
lock
out
pop
mov
mov
xchg
cmp
push
out
sbb
sub
adc
cmp
dec
adc
or
hlt
pop
adc
cwtl
scas
jg
dec
mov
insb
nop
inc
rep
sub
pop
movsl
ljmp
out
pop
int
fists
jo
jae
adc
push
jge
pop
testl
pop
push
in
fstl
or
mov
aaa
dec
xor
outsb
shrl
std
lods
sub
dec
ficoml
pop
popf
int3
addr16
lds
rorb
aaa
push
push
push
popa
push
ja
test
or
seto
leave
dec
inc
cmpsb
loopne
cwtl
fidivrl
fdivl
aaa
imul
iret
sbb
cmpsl
int3
sbb
or
les
inc
xlat
lock
cltd
iret
orb
push
jmp
sbb
cld
xchg
sbb
adc
and
inc
hlt
in
arpl
ss
sahf
jno
ljmp
inc
xlat
dec
mov
leave
cmc
pop
fisubrl
lret
cmp
mov
in
stos
jecxz
or
jns
es
std
out
bound
stos
rcll
sub
push
lret
and
lcall
std
inc
mov
lahf
pop
jmp
adc
jmp
insl
clc
jae
shrb
rcll
popl
mov
outsb
cmp
adc
sub
sub
inc
sbb
test
mov
and
xor
lods
mov
xchg
inc
add
lock
or
insb
movsl
dec
stc
xchg
aas
sbb
push
mov
mov
mov
sbb
cli
jmp
push
push
std
cltd
sbb
mov
jp
sbb
dec
mov
and
or
movsb
loopne
and
and
test
fsts
arpl
inc
and
adc
scas
xor
mov
jb
adc
insb
je
xor
rcll
das
xor
lds
in
rolb
popl
or
roll
clc
sub
sbb
adc
dec
dec
pushl
subl
loop
imul
jmp
sbb
cmpl
jne
mov
jne
adc
addr16
push
xor
ds
add
push
adc
iret
aam
jb
pushf
jae
and
add
insl
and
inc
dec
dec
in
ja
dec
xchg
icebp
sahf
xor
je
mov
out
push
pop
pop
pop
out
lods
cld
push
mov
fisttps
jbe
mov
scas
mov
pop
sub
jno
lret
adc
cmovno
loopne
add
imull
and
add
mov
mov
popf
jne
fadds
mov
mov
mov
aam
push
or
fwait
sbb
xchg
jge
rorl
mov
stc
andb
mov
xor
dec
flds
adc
testb
cmp
xchg
aam
aaa
dec
outsl
addr16
popa
dec
fisubl
push
test
pop
and
sbb
in
aaa
loop
mov
mov
out
test
out
fdivrl
jb
xchg
popf
mov
ljmp
dec
fwait
mov
dec
aaa
fdivl
leave
adc
out
shlb
aaa
leave
inc
std
jle
movsl
xor
mov
mull
insb
jp
ljmp
mov
or
or
mov
push
sbb
into
add
roll
dec
lret
xchg
push
cmp
popa
daa
out
dec
inc
test
push
dec
mov
dec
add
jae
aaa
mov
mov
inc
add
sbb
xchg
or
sub
xchg
ja
insb
jbe
sbb
mov
pop
mov
sub
jbe
ss
rcll
bound
filds
test
push
pop
scas
jge
inc
insb
xor
inc
jnp
mov
pop
add
mov
and
adc
and
sbb
push
scas
cmc
add
sbbl
test
mov
pop
or
pop
cld
adc
out
sub
fildll
cmp
mov
cmc
clc
enter
cmp
movsb
leave
inc
add
pop
ffreep
mov
lods
add
jg
clc
cmp
call
fadds
cmc
inc
xor
cwtl
movsb
jae
hlt
outsl
lods
aam
lret
ret
fsub
fistps
div
mov
dec
push
jg
pop
sub
mov
hlt
stos
cwtl
leave
inc
jp
and
lds
dec
jle
sub
aam
pop
xor
cmp
icebp
jp
icebp
pop
adc
cmp
int3
mov
inc
popa
pop
mov
mov
loop
ljmp
xchg
mov
sbb
or
iret
xchg
or
or
or
das
in
mov
pop
rorb
xor
in
dec
rcrl
cmp
ficomps
push
ljmp
stos
jo
adc
ss
sub
jle
xchg
imul
les
jl
jne
or
aaa
lock
andl
jnp
cmp
cmp
xchg
inc
cmpl
sbb
outsb
dec
push
push
cmp
out
test
fstps
shll
ret
mov
push
or
pop
adc
push
cmp
sbbb
cmpsl
sub
out
mov
jg
ja
cmp
inc
push
sub
mull
xor
xchg
jp
mov
xchg
fiadds
lods
inc
inc
loope
mov
shl
mov
loope
pop
pop
cmpsb
add
sahf
inc
int3
pop
sbb
jge
jle
xchg
shlb
stos
dec
and
dec
sbb
out
hlt
je
cmpsb
jns
add
ret
jp
jnp
xchg
scas
lret
shlb
outsb
push
and
xor
scas
subb
mov
dec
xor
sub
sbb
test
push
stos
and
int
clc
pop
sbb
gs
and
jl
xor
cwtl
cmpsl
adc
mov
push
mov
jae
pop
mov
inc
adc
jne
sbb
mov
dec
nop
xchg
out
adc
pop
or
or
mov
jmp
inc
adc
mov
pop
xor
fisttpll
pushf
mov
cs
sub
push
roll
aaa
bswap
push
or
mov
inc
push
xchg
popa
lock
rol
cli
xchg
mov
mov
mul
in
rorl
xchg
mov
jmp
es
sbb
push
negb
in
xchg
adc
out
hlt
testl
xor
repz
cmp
pushf
mov
test
cmpsl
jp
mov
ss
sub
fisubl
sub
stos
insb
ds
nop
ror
enter
cmpsb
ljmp
fwait
mov
mov
adc
call
jmp
les
clc
xor
ret
sub
rcl
gs
aas
mov
or
ss
testl
ds
decl
sbb
neg
add
stc
adc
in
lods
movb
sarl
out
sub
test
adc
je
jge
out
ss
ficompl
dec
lcall
movsb
lods
sbb
sbb
mov
movb
push
out
cmpb
push
out
dec
push
rcll
mov
cwtl
inc
cld
push
pop
mov
stos
push
in
inc
int3
nop
adc
or
mov
xchg
cmp
push
int3
push
sub
dec
mov
mov
push
aaa
adc
add
lods
cmc
stos
dec
xchg
mov
or
cmpsl
aad
dec
in
add
dec
lret
or
rcl
and
push
xor
xchg
loopne
lods
sbb
push
mov
hlt
jle
push
hlt
popa
outsl
dec
ror
les
and
mov
dec
jae
bound
mov
mov
or
xor
dec
repnz
unpcklps
cmp
jle
aaa
and
push
dec
dec
mov
cltd
lret
mov
fisttps
mov
shl
xor
call
hlt
and
loopne
push
mov
xor
jle
mov
mov
icebp
xchg
insl
mov
mov
fcoms
pop
mov
push
jmp
mov
mov
sbb
sti
mov
dec
mov
test
push
std
call
pop
add
pop
test
adc
cmpsb
jg
jnp
cwtl
mov
decb
fimuls
dec
aas
sbb
dec
ds
out
lock
inc
cmp
loopne
jbe
jnp
jb
cltd
dec
cmp
xchg
mov
fistps
out
dec
cmp
cmc
cmpsb
jne
push
dec
xor
mov
adc
imul
incl
aas
cmc
ficompl
inc
push
cli
and
jmp
jns
sub
daa
stc
test
and
call
pop
jle
into
dec
enter
in
jg
pop
leave
je
js
sahf
daa
inc
dec
cmp
xchg
pop
mov
scas
mov
mov
out
push
out
xchg
lods
dec
mov
ret
fdiv
scas
aad
in
shrb
icebp
es
fistpll
stos
cmp
xor
sbb
test
ret
cmove
jo
movb
test
movb
push
push
das
movsb
aad
xor
andl
out
pop
sarl
lret
cwtl
addr16
jbe
push
out
mov
ficomps
scas
cmpsb
jl
cli
lea
mov
movsb
or
in
out
jb
jns
mov
cld
or
xchg
adc
es
pop
add
ret
or
inc
cmp
cltd
cmc
bnd
sub
sub
shll
and
jno
push
or
mov
dec
test
test
xchg
ficompl
xor
imull
jmp
mov
nop
xor
jg
mov
mov
hlt
in
fsts
jmp
jnp
xor
pop
sub
jnp
lods
adc
arpl
xchg
lret
cmc
cmp
aam
xchg
xchg
pcmpgtd
push
pop
add
sub
add
mov
mov
leave
and
and
fcoms
mov
jnp
lcall
out
xchg
push
jg
xchg
lods
negl
pop
addr16
xor
pop
lds
add
faddl
icebp
inc
xchg
sarb
addb
mov
frstor
mull
int
jl
pop
out
inc
imul
movb
mov
cmp
and
sbb
inc
sbb
pop
ljmp
mov
ret
popa
or
mov
cmpsl
add
jo
inc
jns
in
fs
mov
aaa
sub
adc
or
push
and
fs
test
mov
les
or
outsl
inc
scas
sahf
fists
fsub
xchg
xor
shrb
fisubl
les
insb
in
mov
push
adc
lods
mov
or
jecxz
adc
popa
push
jmp
sbbb
jo
mov
pop
leave
dec
sti
in
cli
lret
jbe
pop
dec
jb
pop
xchg
pop
pusha
cld
xchg
in
adc
and
popa
out
mov
lret
or
push
fisubrl
mov
icebp
insb
or
icebp
dec
test
lret
cmp
fsubl
xor
or
icebp
enter
xchg
xor
inc
je
pop
add
ja
dec
sub
test
jmp
outsl
ss
jmp
lret
jns
cmp
sbb
out
mov
dec
add
sbb
add
mov
jbe
add
add
sub
mov
pusha
gs
jmp
lock
loop
out
fdivrl
mov
aas
and
mov
xor
sub
cmp
add
stos
xchg
in
ja
and
pop
mov
cmpsl
lods
cmp
mov
into
pop
xor
sub
insl
jo
int3
mov
push
xchg
pop
mov
dec
dec
mov
cmp
aad
repnz
mov
mov
call
inc
mov
out
nop
cmpl
loopne
iret
out
xchg
sar
adc
pop
sub
jge
daa
mov
lahf
push
mov
cmpsl
cmp
xchg
cmp
sub
test
xor
cmp
bound
scas
push
and
cmp
jg
aaa
icebp
arpl
cmpsl
stos
push
push
loop
aam
iret
mov
xor
sbb
mov
out
ret
out
and
add
sbb
sbb
xchg
icebp
cmc
lods
jnp
dec
xor
imul
jo
pushf
push
sbb
jb
mov
sub
fmul
je
std
cmp
cmp
dec
add
and
pushf
xor
cmpsb
clc
clc
pushf
sbb
in
imul
daa
sub
jnp
rcrl
adc
cs
mov
xor
dec
xor
loop
sbbb
js
adc
out
shr
sahf
scas
inc
mov
push
lahf
popa
mulb
dec
cmp
mov
loopne
shlb
cmp
in
cmpsl
mov
stos
insl
inc
sbb
clc
push
arpl
push
mov
cli
inc
mov
and
mov
lret
xchg
adc
addr16
lret
jecxz
jbe
and
cmp
or
jbe
inc
jl
xchg
and
bound
notb
or
adc
xchg
loop
dec
mov
mov
lahf
mov
fiaddl
xchg
lahf
pop
add
mov
xchg
cmp
cltd
fbld
inc
adc
push
aad
divb
sti
aad
sbb
rol
and
shufps
data16
dec
xchg
xchg
add
leave
mov
push
in
inc
adc
js
popf
bound
sbb
dec
dec
popf
sub
sub
cmp
popa
movsb
stos
loop
rolb
mov
xchg
sarb
into
decl
rorl
aam
or
sbb
jnp
lock
std
ljmp
faddl
xor
rolb
dec
pushf
and
mov
fstl
scas
out
dec
out
cmp
loope
arpl
scas
sub
mov
pop
jmp
push
dec
inc
push
sbbl
sbb
xor
scas
test
dec
inc
push
popf
jle
add
scas
sbb
mov
jne
inc
push
xor
orb
outsl
std
nop
js
scas
scas
pop
sub
mov
jne
sahf
outsl
aam
mov
jnp
jg
and
out
mov
inc
out
xlat
pop
rcrl
sub
or
xor
xchg
iret
ret
add
lret
fwait
xor
adc
rcll
mov
xor
dec
iret
jp
cmp
sbb
jbe
testb
mov
in
add
popf
fidivs
fcom
fiadds
jns
or
sub
stos
cltd
dec
mov
test
cld
ret
push
mov
popf
adc
out
out
rol
ss
xchg
cs
scas
fldt
shl
push
pop
in
arpl
push
popl
lret
mov
lret
in
mov
push
mov
mov
push
mov
jg
lock
add
fldcw
push
and
xor
push
es
mov
or
stos
in
xchg
pushf
push
test
lds
aaa
and
jbe
or
mov
mov
outsb
test
aad
push
ficomps
call
fcoms
lcall
mov
pop
sbb
insl
clc
pushf
xlat
iret
xchg
mov
push
push
dec
movsl
lock
mov
lds
add
pop
pop
cmp
jecxz
fistps
push
add
xchg
mov
cli
fcomi
pop
xchg
and
xchg
push
add
cmpsb
lods
push
adc
cmc
ds
into
into
cld
sbb
stos
test
fdivrs
rcrb
imul
cmp
rorl
xor
je
test
repz
stc
inc
das
pop
es
cmp
push
iret
sbb
shlb
jo
stos
dec
push
dec
sar
dec
jb
out
lcall
scas
sbb
loopne
xchg
push
mov
adc
cmpl
push
jne
es
loopne
pop
dec
push
nop
cmp
mov
in
or
loopne
push
popf
push
fadd
cmp
push
xor
or
sub
cltd
sub
mov
mov
mov
inc
and
inc
fildll
arpl
ret
push
mov
add
clc
inc
sub
fsubrs
inc
mov
mov
adc
xor
out
popl
inc
pop
mov
push
pop
dec
cli
imul
lods
popa
pushf
cwtl
mov
push
sbb
sub
mov
and
jns
inc
sbb
adc
test
div
pop
aad
jnp
add
faddl
mull
push
je
xchg
inc
and
sub
dec
xchg
jne
sti
dec
jbe
movsl
loop
jge
adcb
xchg
dec
pop
xchg
mov
mov
in
int
xor
and
or
std
push
dec
das
test
aam
xlat
shll
pop
jmp
pop
out
imul
out
sbbb
mov
cmp
stos
push
fbstp
lret
or
jb
icebp
stos
inc
pushf
dec
jle
stos
negb
mov
adc
push
ljmp
lock
push
int
dec
mov
push
inc
pop
in
jecxz
cs
push
scas
iret
and
loopne
push
cmp
add
lea
lods
jne
shrl
push
cld
in
jg
push
xchg
mov
ja
push
jle
jne
imul
ss
shrb
scas
and
sbb
es
lods
mov
mov
fxch
sub
out
sub
lock
pop
lock
es
lods
add
fwait
icebp
jge
cmp
adc
mov
loope
cmp
punpckhbw
scas
mov
cmp
outsb
fsubrl
xlat
push
pop
bound
mov
rclb
ret
divb
rorb
or
dec
clc
seto
addr16
inc
popa
pop
push
lahf
adc
adc
mov
test
ficomps
xor
push
test
je
out
xchg
push
mov
or
xchg
cmpxchg
dec
scas
xchg
in
push
adc
jns
sbb
in
jp
dec
xchg
xor
pusha
cmp
and
push
push
into
fnsave
and
rorb
adc
pop
dec
bound
push
rcl
inc
sub
mov
cmp
cs
xchg
mov
shll
or
stos
cmp
adc
ds
lock
sbb
lea
inc
pop
rcl
popa
leave
std
lret
popa
in
jb
scas
je
lock
fcmovu
call
into
mov
and
push
in
bound
jp
leave
shll
pop
out
frstor
push
cmpsl
roll
int
fsubl
mov
jl
xchg
add
xor
popa
pop
hlt
ficomps
mov
test
push
popl
jns
mov
mov
mov
add
cli
fstpl
adc
cld
out
ljmp
jl
mov
test
movsl
stos
push
dec
xor
test
dec
out
iret
adc
jle
push
jg
out
pop
push
push
and
shlb
in
mov
mov
sbb
lret
mov
addl
mov
lods
xor
decl
adc
call
add
dec
imul
pop
mov
mov
xchg
push
push
movsb
xchg
xchg
sbb
dec
lods
ljmp
js
jmp
call
sahf
sar
or
repz
xchg
lock
inc
or
mov
dec
cs
xchg
pcmpgtb
int3
test
cwtl
pop
test
jno
or
pop
aas
shll
sbb
push
outsl
nop
aaa
push
ds
mov
int3
xchg
mov
aad
clc
mov
xchg
mov
sbb
aam
imul
mov
shll
mov
jl
push
sub
inc
dec
imul
inc
and
test
divl
lods
mov
jns
enter
xchg
pusha
mov
mov
pop
je
jle
xchg
jb
or
sbb
je
fiaddl
cli
lds
sub
sbb
add
cmp
dec
pop
stc
sbb
mov
bound
jmp
arpl
add
jo
xlat
in
mov
inc
fadd
xchg
dec
add
adc
jns
mov
icebp
xchg
mov
addr16
lcall
dec
jnp
sbb
fistps
test
daa
cltd
lods
bound
push
mov
arpl
mov
xchg
mov
add
add
sbb
pop
sbb
cmpsb
lock
loopne
mov
xor
and
xor
and
ret
sbb
xor
fcoms
dec
inc
push
js
inc
lods
mov
xlat
hlt
test
sub
ss
sti
jbe
mov
lret
leave
lock
stos
pop
pop
outsl
addr16
mov
pop
sbb
sub
fidivl
mov
pusha
inc
and
in
test
mov
push
stos
adc
ljmp
nop
dec
mov
and
mov
push
inc
xchg
into
andl
or
push
scas
jb
pop
push
out
imul
pop
lock
push
loopne
dec
cmp
ljmp
in
scas
xor
inc
or
daa
fucomi
out
pop
cmp
xchg
fs
dec
arpl
push
xchg
cmp
pop
into
inc
outsl
push
outsl
adc
add
aam
lods
rcl
xor
xchg
loop
jle
insb
daa
cwtl
mov
cmpl
sahf
addb
add
pop
movsl
push
out
pusha
mov
jp
ljmp
and
les
leave
lcall
loopne
in
fcmovnbe
unpcklps
and
mov
scas
pop
inc
sbb
add
mov
jae
push
cmp
mov
ja
sub
sub
and
dec
sbb
iret
imul
inc
shl
lcall
repz
in
adc
xchg
in
fcmovb
addr16
pop
sub
and
mov
jns
jns
pop
inc
pop
shlb
jns
mov
leave
pop
shll
dec
jo
aas
insb
and
pop
jb
dec
in
cwtl
sbb
xchg
shll
sahf
and
jmp
sbb
fs
sahf
xchg
arpl
pop
loope
add
test
lea
call
mov
decl
and
push
sub
fwait
mov
adc
jns
pop
sub
inc
nop
dec
push
aad
push
ret
rorb
push
test
imul
mov
and
insl
mov
int3
inc
push
lcall
add
jp
mov
test
aas
mov
pop
adc
cli
push
add
sbb
gs
dec
jl
xchg
ss
cli
out
pop
jns
pop
jne
pop
bound
ss
les
pop
adc
push
inc
cmpsl
out
push
dec
enter
fxtract
or
mov
cmpsb
push
mov
dec
adc
jl
fnstenv
es
ret
imul
or
inc
jnp
inc
in
xor
mov
xchg
lcall
and
cmp
dec
cmp
push
pop
push
test
je
cmpsb
sahf
sar
push
sbb
cld
cmp
js
cltd
divl
pop
scas
lcall
mov
and
iret
out
dec
xchg
incl
jp
dec
fsubs
add
addl
cmp
sbb
and
repz
fmul
dec
and
mov
pop
pop
cli
loop
js
xor
int3
shl
imul
mov
and
xor
test
sub
jae
pop
incl
push
lahf
add
test
xchg
nop
fdivrs
cmc
xor
adc
and
jbe
out
inc
pop
dec
push
add
adc
outsb
mov
xor
fdivl
jbe
cs
jnp
or
sub
xor
mov
push
sub
xor
or
gs
xor
ds
out
mov
jns
jecxz
aaa
lds
iret
push
lods
and
jns
popf
bnd
sti
psllw
outsl
je
ss
fsubl
sub
sbb
outsb
out
lods
ret
jb
rorl
pop
scas
push
mov
sbbl
sbb
and
imul
sub
mov
mov
mov
ret
cltd
test
lea
push
fiaddl
inc
cmp
mov
js
mov
mov
lods
imul
jns
pusha
mov
fnstsw
sbb
lahf
bound
jb
nopl
es
xor
std
outsb
mov
pop
das
sbb
pusha
pop
dec
xchg
xchg
mov
das
and
pop
insb
dec
jnp
cmp
cli
or
ss
push
jmp
add
mov
test
stos
inc
cwtl
jge
jns
pop
inc
movsl
cwtl
lret
and
mov
jp
sbb
or
xor
sti
fstpt
inc
inc
mov
pop
xchg
mov
inc
fsub
dec
sbb
out
fildll
inc
mov
mov
rclb
icebp
inc
dec
int
jo
mov
js
lods
dec
mov
push
addr16
pusha
mov
xchg
js
arpl
mov
jmp
pop
dec
or
lret
cld
cmp
jle
outsl
add
scas
stos
and
push
adc
sahf
xchg
sar
jecxz
push
pop
cmpb
jle
mov
sbb
or
dec
jbe
movsb
push
pop
test
mov
hlt
pushf
xor
fpatan
xchg
jp
jmp
movb
fdivs
mov
sbbb
pop
add
xchg
rsqrtps
in
test
pop
pop
ret
ret
out
mov
rcrb
bound
pop
out
dec
ret
imul
pop
fwait
jle
dec
daa
add
adcl
sbb
or
ja
inc
mov
cmc
mov
push
jle
xchg
outsb
dec
cwtl
xchg
lock
and
mov
and
add
sarb
push
adc
jp
aaa
dec
add
mov
lea
arpl
repnz
into
leave
sti
adc
arpl
or
push
add
nop
lods
es
inc
push
mov
xchg
jb
in
loop
pop
jbe
mov
mov
mov
fldz
pop
adc
xor
icebp
jb
or
test
lds
xchg
inc
leave
pop
dec
jle
mov
insl
add
btl
out
inc
push
in
aad
push
aas
push
pop
cwtl
xchg
ja
call
pushf
push
rolb
lods
insl
pop
or
mov
pop
into
lods
jg
mov
cld
js
cld
fnstcw
scas
xchg
cmc
hlt
cli
xor
aam
clc
nop
insb
mov
jmp
js
jo
push
insb
sbb
push
mov
fisubrs
aam
rorl
pushf
push
sub
bound
cwtl
sub
xor
push
sbb
push
divl
jp
add
lret
jge
mov
popf
out
mov
scas
es
stos
mov
gs
xor
popa
add
iret
dec
sbb
into
dec
leave
mov
jb
sub
mov
jnp
dec
out
or
ja
ljmp
notb
out
and
jecxz
xchg
lahf
mov
xor
adc
mov
mov
push
fistpl
scas
push
adc
inc
mov
shlb
fisttpll
push
mov
jl
jno
gs
push
arpl
pop
psubsb
add
mov
imul
jle
sub
add
loop
daa
jl
outsb
enter
mov
mov
cltd
or
pop
push
sbb
push
and
and
mov
pop
je
xor
out
test
mov
fbstp
jbe
dec
movsb
lods
pop
pop
jo
lock
cmpsl
addr16
adc
jb
repz
push
pop
mov
cmpsl
xorb
cld
sbb
cmc
pusha
pop
pop
mov
dec
push
fwait
add
jbe
enter
xchg
xor
add
mov
out
sub
mov
fstpt
mov
xor
xchg
enter
jle
sti
xor
add
ret
clc
xor
popa
pop
dec
push
scas
lret
pusha
repz
emms
ss
jno
les
dec
test
aam
leave
pop
pop
dec
mov
mov
adc
fldcw
int
gs
inc
lea
pop
nop
xchg
sti
mov
in
sub
test
call
dec
fisubs
xchg
dec
add
imul
xor
adc
sub
adc
push
imul
mov
mov
mov
and
lock
sub
movsl
xorl
push
jae
test
lret
jl
jg
aas
mov
hlt
into
fldenv
imul
jno
xor
lods
add
in
lahf
aas
mov
ljmp
hlt
test
outsl
push
or
jg
mov
sbbl
and
cmp
push
mov
xor
adc
push
lea
shrb
aam
lds
pop
ss
clc
js
adc
pop
mov
inc
fstps
roll
rcr
cld
mov
lds
icebp
or
inc
sbb
daa
cmp
cmc
sub
push
movsl
and
mov
pusha
add
cmp
jl
adc
lea
loop
cli
out
mov
adcl
cltd
xchg
push
in
mov
and
mov
adc
cs
mov
jns
mov
imul
cmp
fwait
inc
jns
dec
jge
sub
or
test
sarb
jo
int
insl
cmp
fstps
and
dec
mov
mov
repz
xor
jne
dec
scas
in
jge
pushf
stos
xchg
lock
cs
xor
mov
jecxz
cmp
lea
int3
adc
int3
popf
push
adc
cmp
clc
sti
into
stc
popf
cmpsl
das
adc
or
xchg
fnstsw
stos
mov
pop
cld
add
xchg
clc
orb
rcl
mov
inc
mov
lds
pushf
push
movsl
pop
or
jl
mov
cmp
out
jmp
adc
jb
mov
adc
sub
fs
jp
push
fsubr
mov
bound
sbb
sub
js
pop
fildl
mov
push
jne
out
stos
dec
sti
cmp
lds
adc
adc
fbld
das
lds
mov
cmpsl
aas
adc
cmpb
mov
mov
call
cwtl
daa
aas
je
int3
mov
jecxz
daa
aad
or
ljmp
popl
xor
jle
xchg
std
loope
xchg
in
or
imul
gs
mov
dec
and
in
popa
xor
lods
fisubs
repz
sbb
shl
add
xor
mov
pop
jp
push
in
mov
js
sub
std
mov
sbb
add
and
push
call
scas
or
orl
dec
outsb
fwait
sbb
add
aam
in
ficompl
lret
adc
push
cmp
lds
xchg
adc
pop
adc
sbb
fistpll
sub
in
jge
xchg
and
adc
cmpsb
dec
pop
dec
adc
js
jne
je
push
jge
or
push
and
dec
fldl
loopne
and
jecxz
pop
negb
push
mov
pop
outsl
mov
jg
dec
aaa
jl
out
mov
cmpl
push
sbb
dec
sarb
mov
jno
dec
loopne
lea
mov
sub
sti
aaa
mov
jle
mov
jne
inc
data16
fcomps
cli
sub
xor
jp
les
cmc
and
fwait
or
bound
add
ret
push
push
cmp
push
mov
and
ds
xchg
loope
pop
sahf
jne
adc
fbld
add
mov
xor
or
sub
adc
pop
inc
cmp
in
cmpsl
mov
dec
push
jno
int
lcall
repnz
pop
std
dec
mov
arpl
sbb
mov
jle
adc
push
pop
xchg
mov
xchg
loope
xor
xor
pop
sbb
pop
jbe
mov
xchg
out
push
call
sbb
lea
out
xor
pop
inc
dec
and
mov
not
ss
in
hlt
cmpl
pop
mov
lds
scas
imul
jno
out
jp
add
scas
cltd
xchg
cld
pop
mov
and
inc
dec
push
hlt
or
imul
inc
repz
ficomps
movsb
out
cmpsl
sbbb
pop
std
popf
xor
xchg
mov
pop
push
cmp
add
jl
mov
jnp
mov
clc
icebp
push
xlat
loopne
bound
sub
and
js
adc
sub
pop
pusha
aad
jecxz
mov
in
xchg
jnp
or
jg
decl
cmpsb
mov
lds
cltd
inc
scas
in
cmp
xor
add
call
sub
in
or
push
sub
arpl
je
xlat
jecxz
xchg
adc
aaa
cmp
mov
popa
xor
sub
leave
pop
outsl
shrb
lahf
negb
jno
push
or
lret
lcall
ret
cltd
ficompl
call
pop
popa
std
pop
xor
adc
stc
mov
es
mov
adc
adc
pop
cmp
add
xchg
pop
das
sub
cmpsl
cli
pop
add
pop
jl
in
les
mov
test
sub
sbb
fldt
ss
push
push
insl
repz
movsb
jno
imul
sbb
iret
pop
test
stc
fldenv
push
jae
mov
mov
mov
mov
jae
out
rcll
cmp
mov
push
jb
xor
dec
aam
jae
adc
or
push
sub
jo
lret
pop
hlt
aas
fldt
sub
add
fwait
orl
jb
jmp
ror
fcomp
aad
xchg
push
repnz
cmp
adc
pop
inc
add
sub
pop
pop
pop
jl
mov
mov
xchg
dec
inc
push
lcall
push
out
data16
stos
call
lret
push
imul
sbb
mov
xor
sbb
lret
adc
mov
cld
ss
mov
jno
mov
ljmp
outsb
lret
ss
xor
loope
inc
lock
scas
inc
in
and
mov
pop
stc
sarb
rcrb
mov
test
pushl
out
and
add
mov
and
mov
aaa
mov
testb
ljmp
push
iret
mov
daa
aad
sbb
dec
fnstenv
and
jle
add
stos
adc
push
mov
ficompl
jge
and
cwtl
ret
xor
pop
outsb
cmp
mov
push
dec
inc
mov
dec
into
jb
push
loopne
in
in
inc
push
repz
xchg
stc
leave
add
out
push
rcpps
mov
lret
ds
loopne
jmp
scas
fsubs
lods
xchg
lds
sarb
xlat
cmp
sub
out
xor
jo
jg
mov
test
into
sub
pop
mov
or
add
lgs
push
sti
and
inc
and
int3
inc
mov
adc
les
rclb
in
std
outsb
or
sbb
inc
std
xor
js
das
mov
lea
push
mov
push
sysenter
push
mov
syscall
andb
ljmp
dec
and
mov
aad
aas
jnp
hlt
jne
jmp
rorl
cs
mov
ret
lds
inc
push
lock
test
add
mov
popa
lea
cmp
ja
fwait
mov
xchg
repz
push
rorl
jae
pop
hlt
inc
js
mov
rcrl
pop
mov
dec
insl
mov
xchg
out
pusha
mov
jmp
testb
test
add
mov
out
add
data16
xchg
lret
pusha
add
ret
mov
inc
sbb
cli
lcall
daa
mov
sub
hlt
sahf
cmpsl
pop
push
and
or
mov
lea
push
mov
push
dec
xchg
ds
pop
mov
aam
jp
loop
mov
xchg
sbb
adc
or
out
nop
shrb
addr16
inc
mov
neg
mov
or
ss
or
add
push
addr16
shlb
mov
movsl
sbb
push
rorb
loope
mov
mov
stos
jne
imul
xlat
lods
add
addr16
imull
or
push
mov
mov
cmp
push
out
xor
adc
loope
test
insl
and
orl
mov
inc
dec
test
call
dec
insl
or
ret
xlat
jb
mov
out
cmp
mov
jl
or
adc
aam
lds
or
mov
outsl
mov
scas
cmp
and
jle
mov
imul
enter
test
and
jbe
sub
mov
out
sub
add
out
fildll
cltd
ret
test
mov
jno
enter
add
dec
in
es
add
insl
cwtl
add
lods
xchg
cmc
cwtl
mov
popf
inc
inc
xchg
or
sub
icebp
add
sub
sti
add
movsl
inc
pop
push
adc
or
push
cmp
cmp
mov
pusha
or
push
sti
add
xor
add
inc
inc
popa
pop
not
testl
mov
and
mov
clc
int3
lock
rolb
cmp
leave
mov
popf
mov
and
imul
mov
insb
mov
test
loopne
xchg
jle
mov
push
int3
push
push
frstor
int
mov
fcmovne
sbb
xchg
mov
jg
push
and
sti
cmpsb
sbb
sub
mov
mov
cld
loop
mov
inc
sbb
jb
and
sub
sbb
inc
mov
rclb
mov
repnz
jne
pop
rol
xchg
push
in
cmpsl
inc
or
pop
fs
movsb
inc
nop
lock
xor
sbb
addr16
clc
fsubs
ror
xchg
arpl
insb
pop
cld
in
mov
push
loope
orl
jg
inc
cmpl
pop
fstl
aaa
int
in
data16
jo
mov
xchg
mov
sbb
js
test
xchg
sub
test
pop
jno
push
cltd
jb
pusha
jae
cwtl
into
xchg
add
pop
jle
idiv
inc
adc
add
addr16
push
push
xchg
stos
popa
sbb
xor
and
push
leave
jb
ficomps
mov
dec
cmpsl
mov
jne
or
cmp
sbb
test
es
stos
sbbb
repz
dec
mov
test
inc
es
dec
fldt
data16
enter
cmp
das
mov
gs
cmp
push
sub
xchg
xchg
mov
testb
popa
stos
jecxz
or
inc
push
lods
dec
stos
imul
mov
push
cld
lret
inc
out
dec
mov
adc
lcall
xlat
xchg
adc
xor
dec
into
mov
jo
andl
add
cmpsb
data16
mov
mov
pop
scas
fs
clc
xchg
into
mov
sub
pop
and
jbe
mov
mov
aaa
inc
sub
bound
leave
jne
adc
jle
popa
jnp
xchg
gs
and
jl
push
mov
lea
les
xchg
inc
and
out
jae
cmp
movsb
mov
popa
ja
rclb
sub
lock
cmp
mov
imul
xor
in
cwtl
xchg
add
sub
inc
sub
xorl
sar
pop
mov
sbb
sbb
and
push
in
popf
mov
addb
xchg
xchg
in
xor
pop
loop
stos
adc
sub
dec
popa
bound
sbb
jl
inc
mov
shrl
out
lods
inc
push
xor
xor
sub
int
bound
sbb
push
mov
fwait
lret
push
mov
fidivs
adc
testb
fsubr
jo
out
xor
pop
push
inc
dec
daa
xchg
dec
inc
in
js
jb
xchg
xchg
movsl
dec
fistpl
mov
xchg
aaa
jb
pop
pop
mov
ds
xlat
rcrb
mov
mov
sbb
lods
lahf
clc
xchg
pop
pop
xlat
jmp
cmpsl
or
cmpsb
loop
roll
jge,pt
lds
push
jle
mov
testb
sub
jne
enter
sbb
cmp
mov
aad
and
bswap
in
push
dec
or
pop
aas
rolb
adc
aaa
xor
test
aad
popa
and
daa
fstpt
and
mov
lods
pop
jbe
xor
sbb
mov
js
imul
pop
rcrl
inc
cmpsl
cmpsb
pushf
pop
fcoml
adc
pusha
iret
inc
add
test
xchg
stos
inc
int3
cmp
mov
movsl
xchg
sub
movsb
cli
cli
imul
adc
pop
xchg
enter
filds
das
dec
cmp
sbbl
mov
cmp
test
add
mov
into
inc
pop
sti
lods
adc
daa
mulb
sub
dec
ret
mov
jb
cmp
ljmp
ret
lret
lods
xor
andl
pushf
fnstenv
aad
je
pop
mov
out
cmpsl
mov
xchg
add
lret
aaa
mov
es
sar
gs
int
pop
stos
in
int
int
repnz
cmp
into
xchg
push
in
sub
rclb
inc
add
adc
mov
sbb
dec
cmp
outsb
int3
xor
popa
sub
dec
mov
and
out
cmpsl
or
aaa
inc
out
xchg
sbb
test
mov
mov
and
inc
scas
xor
cmpsl
mov
add
movsl
dec
or
gs
jp
fsubr
xchg
loop
cltd
inc
pop
cli
stos
cs
xchg
rcrl
sub
adc
popf
int
inc
sub
mov
cli
inc
xor
je
pop
adc
sub
out
lods
pop
sbb
jnp
or
cmpsb
dec
sbb
pop
addr16
cmp
jnp
jne
push
lret
xor
lahf
mov
je
pop
fwait
in
mov
jns
lods
insl
xor
jmp
mov
mov
cmp
add
clc
mov
mov
aad
xchg
hlt
inc
ss
xchg
decb
sbb
or
push
mov
jmp
lcall
mov
ret
mov
rcrl
xor
mov
test
jmp
mov
repnz
xchg
pop
add
sbb
mov
fs
inc
push
pop
mov
xor
aam
jg
or
dec
mov
push
sbb
push
pop
add
cmp
xchg
mov
xchg
jns
mov
imul
sub
in
jbe
js
xchg
adc
notb
adc
and
mov
pop
inc
shll
and
sbb
pushf
arpl
cmc
popa
cmpsl
mov
mov
sbb
xchg
xor
cmp
mov
ret
fistps
ss
fs
stos
push
ret
arpl
mov
jp
roll
xor
gs
cmpsb
mov
in
add
cmp
in
insl
push
push
inc
faddl
mov
std
rol
lock
mov
icebp
adc
ret
push
scas
push
fsts
fistpll
pop
add
mov
xor
push
pop
shlb
sub
out
movsl
inc
jne
psadbw
mov
jnp
adc
xor
pop
and
jo
cmp
imul
dec
sbb
cmova
xor
xor
mov
mov
fxch
sub
fdivp
pop
pusha
mov
jg
adc
jecxz
jne
ss
je
in
icebp
jle
enter
jmp
inc
jnp
gs
inc
std
pop
or
adc
out
fcmovbe
pop
cmc
std
and
loope
cmp
ds
mov
sub
push
cld
fstpt
movsb
in
pop
jg
test
lcall
dec
xor
pop
mov
adcl
popa
inc
mov
in
sub
popa
or
and
jae
jge
repnz
stos
push
imul
or
into
inc
mov
mov
jp
dec
aaa
sub
push
lods
jle
in
lahf
or
test
and
xor
mov
jns
sbb
lcall
mov
jae
mov
mov
xlat
mov
add
sbbl
fisttps
clc
mov
push
push
inc
mov
mov
or
jmp
insb
in
cld
adc
mov
and
andb
shl
in
mov
outsb
mov
mulps
das
dec
stos
aam
mov
xchg
insl
xchg
movsb
inc
jo
sub
add
into
sti
pop
hlt
loop
imul
sbb
push
lock
xor
loope
cmp
mov
mov
gs
dec
mov
xor
jg
pop
cmp
rclb
push
arpl
mov
or
in
dec
xor
lods
inc
sub
ja
or
adc
jl
inc
cmp
pop
inc
pop
mov
les
inc
mov
mov
push
loope
lret
in
mov
mov
cltd
bound
insl
test
xchg
jns
pop
jo
mov
loope
insb
lcall
fdivr
cld
es
in
and
or
sti
stos
outsb
mov
inc
and
or
int3
repz
mov
call
xchg
pop
or
mov
xor
xchg
orl
aas
mov
rolb
loop
mov
sbb
dec
jmp
movsl
sub
aaa
or
cmp
hlt
mov
dec
hlt
mov
bound
push
loopne
jns
stos
jg
ljmp
addb
outsl
xor
movsb
push
icebp
cltd
fwait
ds
mov
cmpsb
movsl
test
lods
dec
sbb
addb
xor
cmp
or
ret
mov
push
repz
lea
or
in
sahf
pusha
cs
pushf
negl
stc
add
ret
inc
mov
dec
addb
mov
mov
aaa
int3
sbb
aas
jo
jbe
cld
test
xor
aad
inc
push
adc
into
inc
jge
fwait
push
pop
xor
dec
pusha
popf
fdivr
divb
xor
rolb
add
int
cltd
lea
scas
cli
popa
jo
icebp
adc
pop
cmp
cmpsl
ja
aad
pop
and
inc
adc
incl
popa
mov
mov
or
test
or
push
ret
lret
in
pop
inc
je
scas
mov
mov
jnp
dec
dec
scas
jl
and
cmp
jbe
sub
inc
hlt
cwtl
cmp
lahf
xor
push
jo
push
jg
xchg
dec
xorb
dec
or
lock
inc
mov
or
test
cmp
jne
push
dec
push
dec
fisubl
pop
add
jp
mov
inc
out
or
aad
aad
push
sub
arpl
mov
mov
aaa
into
adc
and
lods
xor
scas
or
lods
mov
jecxz
movsl
dec
sub
mov
push
inc
outsb
hlt
push
inc
rcrl
jl
and
cmp
pop
lcall
popa
mov
adc
or
sbb
orl
inc
call
std
cmp
divb
cmpsb
rcll
jge
daa
dec
in
xor
pushf
scas
divl
je
fadds
cmpsb
mov
gs
push
xchg
ljmp
fldl
pop
jecxz
test
enter
in
lret
add
call
loopne
movsb
xor
pop
in
jp
cmp
das
sub
mov
mov
and
jle
stc
es
or
scas
sbb
or
sub
dec
inc
xchg
mov
push
mov
sti
sbb
dec
leave
jmp
movsb
inc
loopne
int3
aam
push
pop
jp
xchg
inc
cs
int3
mov
xchg
gs
sbb
cmp
add
sbb
push
mov
adc
dec
adc
sbb
mov
fs
push
pop
pop
movsl
cmpsb
std
rcll
lea
mov
lcall
movsl
in
inc
xchg
outsb
xor
or
jle
rolb
pop
lods
test
xor
mov
movsb
je
or
push
xchg
out
xor
mov
iret
shrl
leave
cmc
jo
cmp
stc
dec
mov
movsb
jmp
in
cmp
mov
pusha
ret
sti
xchg
xchg
outsb
pop
xchg
mov
xorl
jmp
sbb
sbb
std
nop
std
test
fisubrs
push
ss
sarb
lock
dec
push
test
xor
xchg
fistpl
dec
std
and
repz
inc
cmp
xchg
int
jmp
jg
arpl
add
cmp
or
sub
mov
push
push
xchg
mov
stos
xor
mov
orb
in
into
xchg
inc
sbb
xor
cmp
ret
cmp
push
jb
xor
jo
push
icebp
ljmp
xor
jp
cltd
adc
jle
test
jb
or
lahf
and
cmp
stos
sti
lods
xor
pushf
shlb
rclb
adc
test
mov
fistpl
movsl
mov
xor
test
mov
jmp
sbb
add
cmpsl
sar
mov
and
pop
xor
sarb
gs
inc
xor
mov
xchg
movsl
xchg
sbb
or
aad
sti
mov
sub
jp
add
adc
xorl
sub
dec
ds
pop
imul
insl
out
mov
pop
dec
add
mov
mov
dec
jno
daa
stos
js
fimull
fidivs
mov
mov
js
shll
inc
je
push
movsb
xchg
rcll
addr16
sahf
jo
and
ja
clc
subb
cmpsl
test
out
jne
pop
push
inc
cmp
cmpsl
sub
pop
xchg
hlt
ds
lds
sbb
decb
outsb
or
mov
sbb
ljmp
fidivrl
fcompl
outsb
rorl
push
out
je
mov
inc
xchg
clc
movsb
jl
mov
push
aaa
int3
faddl
xchg
test
and
adc
push
imul
jecxz
cmp
push
adc
adc
arpl
jge
jnp
push
sbb
das
fidivs
mov
mov
in
pop
stos
pop
fnstcw
stos
lds
sub
mov
lock
mov
inc
or
fstps
sbb
inc
mov
push
or
cmp
and
push
or
cld
cmp
jl
push
xchg
jo
shl
cmp
in
int
cmp
stos
mov
mov
insl
mov
fldcw
mov
imul
mov
cmp
pop
das
rolb
jne
and
xchg
mov
pop
xor
data16
mov
leave
sbb
inc
fistpll
enter
aas
pop
arpl
sti
jge
test
ds
cmpsl
inc
mov
imul
test
js
cmp
and
adc
roll
int3
sbb
push
lret
xchg
stos
nop
mov
shl
cltd
scas
mov
jl
int
mov
popa
xor
xchg
xchg
jae
mov
jbe
sbb
pop
cmpsb
aad
jmp
scas
push
xchg
push
mov
std
mov
imul
or
test
sub
mov
xlat
popa
sbb
mov
roll
sub
inc
movsl
imul
insl
mov
or
test
scas
stos
repz
xor
jae
xchg
pop
ror
dec
loopne
inc
push
xor
mov
adc
or
xchg
jnp
xchg
dec
cmpsl
inc
into
js
fcom
xor
inc
mov
adc
mov
aas
js
js
sub
or
mov
xor
and
in
lcall
in
imul
xor
sbb
scas
sbb
pop
pop
cmpsl
inc
movsl
sbb
and
inc
popa
inc
mov
inc
in
cmpsl
mov
ret
aas
pop
fdivrs
cmp
xor
or
xor
dec
push
call
das
push
jg
xchg
inc
jns
sbb
std
inc
mov
and
jo
mov
sub
inc
mov
pushf
mov
icebp
imul
jne
mov
aad
xchg
notb
add
ss
sub
mov
jg
cmp
adcb
mov
jl
scas
je
dec
in
mov
and
enter
outsl
sti
test
fstpt
mov
in
ret
sbb
push
fisubl
cmp
fistpl
bound
adc
xor
cmpsl
mov
jmp
stos
bound
mov
faddp
pop
into
fs
scas
scas
push
cs
xchg
ljmp
js
stos
or
and
das
add
lret
fadds
push
mulb
jnp
test
cmp
ror
test
xor
sub
mov
sbb
push
fdivrs
cmc
lods
pop
and
cwtl
mov
jns
out
lds
sbb
xchg
push
xor
sub
test
xchg
sub
push
add
mov
and
hlt
mov
in
and
call
cmpsl
pop
insl
lret
xor
push
js
sti
sbb
mov
push
adcb
add
mov
rcrb
fs
lcall
repnz
adc
les
js
inc
adc
push
and
fwait
out
je
xlat
movsb
cltd
sarb
jecxz
mov
outsb
lods
cmc
xchg
cltd
or
mov
pushf
pop
in
dec
imul
dec
repnz
outsb
mov
fcomp
dec
cwtl
sbb
cmp
les
rorb
dec
xchg
dec
cmp
adc
hlt
fstps
sbb
adcb
outsb
dec
in
xlat
popf
xchg
jmp
lahf
data16
rcrl
jbe
mov
lock
mov
and
pop
mov
mov
out
sahf
jno
jg
fnsave
scas
push
cltd
and
sarl
adcl
stos
pop
ds
mov
pop
cs
popa
subl
push
mov
dec
lret
and
add
lods
lods
xchg
cs
loope
push
out
arpl
mov
xchg
test
mov
lcall
jmp
stc
rolb
test
jae
xor
nopl
add
imul
adcb
insl
out
cmp
sbb
push
enter
inc
jmp
add
dec
clc
dec
mov
cmp
lock
dec
inc
cmp
add
clc
loope
dec
repz
or
jno
loope
ret
in
inc
pushf
out
or
dec
xchg
sti
add
dec
subl
xor
in
ficoms
insl
add
inc
adc
loopne
sbb
inc
cmp
mov
out
add
and
jg
xor
sbb
cmp
mov
aad
push
xchg
jo
lret
dec
in
cli
xor
sar
cmp
mov
and
xchg
sub
xchg
scas
and
test
dec
mov
ljmp
pop
leave
mov
stc
pop
pop
and
xor
dec
int3
push
jo
mov
pop
hlt
jle
dec
inc
mov
sub
fwait
cs
daa
xor
sub
inc
cltd
pop
lret
fwait
xchg
icebp
mov
js
xchg
cmc
fcoms
xchg
subb
xchg
in
cltd
add
xchg
jo
mov
pop
out
and
je
ret
sahf
int3
fmull
lahf
pop
mov
lahf
inc
aad
insl
sbb
cs
cmp
jg
jg
jnp
xor
clc
arpl
ss
xor
addb
or
inc
mov
jnp
xor
stos
inc
jno
js
icebp
xchg
dec
push
sti
mov
and
in
add
dec
std
ret
inc
std
pushf
ror
mov
adc
movsl
daa
xchg
leave
xor
int
push
out
incl
jp
jl
xlat
push
inc
fs
popa
gs
mov
rol
mov
pop
push
and
cmp
movsb
das
fistpll
cmpb
pusha
inc
jmp
movl
nop
dec
decb
stos
xchg
pop
cmp
shlb
or
mov
cmc
adc
js
aam
pusha
das
fisttpll
mul
dec
cltd
pop
sbb
out
dec
outsl
pop
jne
or
or
repz
mov
fisubrs
xchg
cs
ds
jbe
dec
aaa
cwtl
ja
bound
adc
cs
mov
cmpsb
or
fsubrl
pushf
xchg
pop
fcoml
add
sub
les
add
inc
sub
ljmp
pop
xchg
mov
pop
sub
aad
je
in
jle
xor
mov
int
inc
jg
lds
out
xchg
jno
jle
push
divl
loop
pushf
rcr
and
stc
jo
or
sbb
push
inc
xor
sbb
push
out
jnp
imul
cmp
and
adc
xchg
mov
out
fs
push
lock
int3
and
andl
out
jg
lods
movsl
dec
sbb
push
adc
mov
push
push
rcl
inc
pop
imul
sbb
dec
cmp
mov
pop
movl
scas
loopne
pop
jo
inc
pop
out
stc
jecxz
jno
pop
fwait
cld
and
test
fdivrs
popa
loopne
icebp
pop
push
push
inc
pop
repnz
inc
mov
jno
insl
aaa
rcrb
lcall
outsb
lret
fistpl
xor
push
mov
jl
xchg
loop
outsb
xchg
cmovp
and
jmp
sbb
cmpsl
adc
xchg
fs
and
add
push
sub
mov
add
call
inc
dec
mov
inc
mov
pop
xchg
add
fwait
jmp
ror
test
or
cs
mov
shrl
out
add
repz
adc
je
aas
push
sbb
insl
jbe
and
lret
lock
inc
push
inc
xchg
sbb
jae
aaa
cmc
mov
aam
and
push
repnz
mov
cmc
notl
std
loopne
jne
lcall
test
orl
push
enter
leave
ds
xor
je
frstor
in
and
aas
push
loop
cmc
xchg
leave
jg
inc
xor
arpl
addr16
add
xchg
in
mov
es
popf
push
inc
mov
mov
ss
sahf
add
lods
and
clc
data16
std
sbb
xor
fdivr
cmp
mov
fmull
sar
or
lock
adc
int
fcomip
xchg
sbb
or
xchg
pop
mov
mov
ja
xlat
mov
and
cwtl
mov
and
inc
xchg
fs
mov
adc
roll
and
rcl
inc
mov
in
jge
ja
add
fdivrp
push
mov
mov
xlat
add
mov
int
pop
fnstcw
mov
mov
xchg
rcrb
test
xor
sbb
push
scas
ficomps
adcb
or
movsl
xchg
xlat
xor
mov
inc
jmp
ss
loope
fnstcw
mov
mov
or
shll
inc
mov
jge
aaa
or
movsl
addb
lahf
or
cwtl
jno
sahf
sbb
mov
jg
inc
out
cmp
inc
add
popa
inc
xchg
cmp
les
pop
pop
push
mov
vmovaps
mov
shrl
bnd
or
std
int
adc
pusha
xor
shlb
xor
push
repnz
cmpl
mov
or
stos
bound
testl
and
mov
or
pusha
arpl
mov
out
pop
push
test
mov
je
mov
mov
jecxz
jl
pop
mov
test
adc
jg
pop
add
xchg
sbb
or
in
sbb
sbb
and
mov
push
test
orl
sub
fsubr
and
sbb
sbb
dec
sbb
adc
aas
xlat
test
insl
sahf
mov
xchg
dec
push
addr16
inc
scas
cmp
in
inc
movsb
xchg
jb
push
mov
fwait
or
xor
jecxz
js
test
lods
test
sub
iret
cmpl
jecxz
cmp
fdivrl
pop
imul
dec
lods
movsl
xor
sbb
sbb
and
negb
lea
mov
jecxz
fbld
adc
loopne
daa
or
dec
sbb
pushl
out
ja
rdtsc
loopne
adcl
imul
lods
jecxz
mov
cwtl
push
lcall
sub
cmp
ds
pop
push
cmc
faddl
in
mov
stos
cmp
xor
mov
pop
iret
outsb
and
shll
repz
inc
scas
mov
es
mov
int
sub
je
mov
fsubrp
adc
sbb
popf
pop
test
dec
mov
test
shl
inc
push
movsb
sub
mov
pop
push
repz
in
ret
pop
int3
fdivs
mov
movsb
mov
stos
rolb
imulb
xchg
ja
fldl
call
stos
pop
cli
mov
cmpb
xchg
sbb
adc
xchg
fsubrs
cmp
sar
lcall
push
and
mov
mov
mov
dec
test
sarb
jg
xchg
hlt
ljmp
and
faddl
pop
mul
movsl
out
rcrl
int
sahf
dec
adc
lcall
or
out
fiaddl
ljmp
sahf
outsl
cmpsb
xor
and
lds
xchg
lock
fs
nop
arpl
mov
adc
mov
fcomps
push
mov
mov
dec
jle
inc
push
adc
in
cmp
pushf
enter
mov
mov
aaa
je
jb
or
gs
pop
dec
xor
or
or
ja
mov
jg
out
mov
cmpsl
sub
push
dec
outsl
mov
jg
push
push
ficoml
sub
lods
mov
mov
stos
jne
pop
mov
jae
cmp
sub
and
stc
cmpsb
out
sub
in
mov
and
dec
cmc
lds
out
mov
xchg
stos
dec
sti
jnp
fimuls
push
lahf
dec
test
int
mov
mov
ds
lret
jnp
pshufw
mov
aas
dec
out
or
sub
insb
mov
dec
push
and
push
addr16
mov
jne
out
sbb
fimull
mov
jl
jmp
adc
scas
ss
sub
shlb
mov
add
cltd
sub
and
jle
fcmovnu
jg
dec
test
push
xchg
pop
data16
adc
cmp
cmpsl
out
xchg
pop
fisubs
sub
int3
and
jns
in
ret
mov
sbb
loope
cmpsl
test
iret
in
jo
and
pop
pop
sahf
jge
cmp
fcomip
mov
push
cmc
mov
mov
dec
aaa
setl
nop
lods
add
je
xchg
lret
cmp
cmp
pop
mov
cmp
repz
stos
xor
xchg
inc
jle
and
or
lods
cmc
enter
jmp
outsb
rcrb
sahf
pushf
fcomps
outsb
ljmp
or
mov
jp
fwait
jg
scas
out
pop
shlb
out
jp
mov
pop
cltd
daa
lds
adc
pushl
add
sar
jl
shrb
les
pop
sbb
movb
testl
mov
or
jecxz
push
test
cs
cmpsb
pop
cld
aaa
and
mov
mov
push
xor
ja
mov
xchg
sub
jge
sub
mov
or
cmpsb
in
xchg
lods
push
dec
lods
cli
ret
mov
ret
xchg
push
mov
jp
in
loopne
push
pop
cmp
sbb
lds
inc
sbb
xor
dec
notb
inc
cmp
push
cltd
push
mov
pop
pop
mov
stc
fisubrs
lods
insb
clc
imul
xchg
sbb
rolb
mov
popf
push
xorl
mov
mov
fadd
xchg
xor
jnp
notl
adc
fdivrl
or
arpl
rorl
outsl
fst
mov
ds
aad
jp
arpl
jo
leave
mov
xor
into
mov
adc
sbb
fstpl
sbb
daa
out
mov
mov
inc
les
xchg
add
lods
add
arpl
fistl
sbb
mov
cmp
sub
sub
cli
or
push
bound
out
mov
fdivl
call
dec
adc
push
aas
jae
xor
mov
icebp
xchg
sbbl
shlb
iret
sub
pop
cmp
mov
sub
push
cmp
sbb
mov
out
adc
dec
or
or
inc
inc
xchg
sbbl
or
jne
inc
idiv
and
enter
dec
jge
lahf
sub
arpl
sbb
cs
pop
insb
cs
int
inc
sub
adc
pop
sarl
mov
aas
xchg
ljmp
mov
lahf
rcrl
mov
cmpsb
lock
xor
imul
cwtl
fisubrl
lock
mov
push
ficomps
xchg
pop
aaa
dec
mov
adc
pop
scas
fdivs
stc
xor
adc
cmpsl
lcall
jbe
sbb
inc
cmp
jmp
imul
add
mov
cli
cmp
cmpsb
cwtl
iret
rolb
shlb
jae
outsb
jle
imul
add
pop
xchg
add
daa
stos
or
sub
push
cwtl
jb
fiadds
aam
nop
pop
cmp
push
mov
and
ss
xchg
push
outsb
int3
fstpl
adc
xchg
fiadds
loope
dec
in
push
mov
sbb
in
cmpsl
sti
js
es
inc
popa
hlt
mov
lcall
inc
or
adc
push
nop
mov
jb
xchg
push
rcrb
inc
fdivr
sbb
fcmovb
mov
bound
push
int3
xor
je
xor
cmp
loopew
nop
pop
dec
insb
icebp
lcall
sbbl
sbb
sbb
cmc
ret
jno
mov
or
and
sahf
mov
gs
adcl
hlt
leave
sti
dec
insw
rcr
sub
pop
loope
int3
les
cmpsb
nop
test
fnstcw
sbbl
xchg
pusha
outsb
pop
cmp
dec
ja
dec
clc
ds
xor
ljmp
cmp
xchg
and
inc
push
mov
xchg
clc
sub
int3
ja
pop
push
sbb
add
mov
push
push
hlt
in
inc
xchg
sbb
lods
pop
adc
push
pop
push
int
aam
out
cmp
mov
int3
push
sub
pop
leave
lahf
dec
mov
inc
push
jmp
hlt
dec
push
add
enter
fisubl
shll
mov
jae
sarb
lret
mov
mov
push
dec
popf
movzwl
mov
and
inc
or
daa
mov
repz
jnp
adc
loopne
sub
lret
insl
fimuls
mov
lods
pushf
loop
roll
aad
xor
sub
out
jnp
or
lds
shll
xchg
cltd
popa
hlt
out
dec
scas
lds
jo
jg
push
sbb
jbe
push
push
sarb
push
cmp
lea
dec
pop
cmp
call
dec
mov
test
jbe
in
pop
out
push
and
sub
mov
je
call
loope
outsb
sti
sbb
ss
pop
mov
xchg
cld
xchg
xor
jae
lahf
iret
scas
add
fstpl
mov
and
jns
pop
stos
jecxz
dec
dec
js
int3
fwait
nop
sarl
xor
sbb
sahf
xchg
add
pmulhuw
dec
jo
popa
insl
call
sbb
pusha
pop
mov
mov
loopne
fcompl
push
aad
in
in
sbb
test
fisubl
or
fcomp
cmp
adc
inc
loop
mov
mov
push
inc
rsm
stos
cmc
add
push
ljmp
sub
pop
stos
mov
mov
mov
sbb
mov
add
dec
lret
jne
adc
sahf
mov
xor
mov
scas
mov
or
xchg
in
cli
cmc
cmpsb
js
addr16
xchg
and
rclb
mov
inc
scas
mov
add
push
jg
mov
xchg
xlat
repz
push
pop
adc
jno
push
cwtl
mov
cltd
ret
jns
cwtl
jb
mov
cli
mov
ds
pushf
aaa
xchg
mov
shlb
pop
lahf
pop
mov
push
dec
sbb
mov
jno
lahf
sub
inc
mov
xchg
or
shll
out
je
pop
shrb
adc
mov
xlat
sbb
inc
shlb
push
xor
data16
loope
iret
test
call
adc
movsl
test
cmpsl
xor
cmpsl
jecxz
js
roll
in
mov
push
imul
scas
jns
cli
rcll
subb
fbld
xchg
jmp
clc
cmp
pop
mov
and
daa
repz
stos
sarb
mov
mov
out
cli
lds
out
clc
or
and
shlb
add
hlt
js
push
aas
mov
add
aad
iret
leave
popa
xchg
dec
es
aaa
icebp
mov
and
nop
mov
nop
pop
jp
das
push
mov
pop
sbb
loop
mov
int
nop
push
test
fwait
lahf
sub
icebp
outsb
mov
push
or
pop
dec
and
adcb
adc
inc
mov
mov
in
add
cltd
push
and
cwtl
jnp
je
enter
add
jbe
sub
out
push
xchg
cld
loopne
push
inc
mov
mov
adc
xchg
cmpsl
daa
insb
pushf
pop
lcall
shrl
fcomi
sub
inc
push
or
nop
lret
dec
cmp
xor
dec
xchg
lcall
push
dec
popf
add
cltd
lahf
aad
ret
andl
sbb
sbb
lods
adc
addr16
mov
repnz
dec
iret
xor
int
out
inc
imul
pop
sbb
test
fisttps
push
sbbb
sbb
icebp
nop
jmp
xchg
nop
xchg
xlat
sahf
inc
jp
jecxz
mov
in
imul
outsl
leave
outsl
test
add
sbb
mov
cmp
imul
and
sti
push
pusha
in
aad
push
test
imul
mov
pop
sub
inc
cmp
adc
sub
in
xchg
dec
fisttpll
sbb
fmuls
movsb
lcall
jo
adc
sub
js
lcall
xor
inc
dec
xchg
stos
punpckldq
mov
mov
cmpsl
pop
mov
and
pop
rclb
add
out
mov
ret
jge
add
pop
xchg
or
test
ret
fadds
stc
adc
sahf
xor
ljmp
push
sbb
jae
clc
sbb
pop
mov
xchg
lods
xlat
mov
adc
lds
les
xor
jecxz
sahf
and
add
adc
inc
pop
ret
insl
inc
jge
icebp
cwtl
mov
test
into
movsb
dec
in
outsl
and
mov
adc
fisttpl
and
sarl
adc
jo
and
loopne
imul
inc
push
sub
movsb
sar
mov
repz
inc
push
lods
movsl
sub
arpl
dec
jmp
out
push
cmc
imul
insl
andl
jp
lock
mov
xor
filds
loope
aas
cmpsl
pop
repz
fsubl
jp
stos
rcr
sahf
aam
push
pop
lahf
mov
xchg
int3
xchg
cli
ja
mov
pop
sub
cmp
sti
cmpsb
xchg
lcall
pop
fidivl
pop
pushf
mov
vmovntps
negb
or
dec
push
cmp
fdivrp
push
ret
sub
jl
cmp
and
popf
shll
test
cld
std
call
pop
adc
mov
stos
sti
cmp
xlat
push
xchg
pop
sbb
lods
jg
notb
sbb
mov
push
sar
in
xchg
xlat
and
addl
jecxz
icebp
dec
sti
jge
inc
jmp
cmp
lds
insb
movl
add
aam
mov
popf
daa
cwtl
mov
ds
dec
pop
daa
fimull
testb
or
cmp
repnz
clc
xor
jmp
pushl
pop
jg
cmp
loope
movsb
mov
pop
ret
sbb
adc
outsl
stc
iret
jbe
and
adc
jecxz
popa
test
out
jmp
loopne
scas
xor
es
inc
add
fcomip
inc
loope
lea
cmp
inc
push
and
pop
fs
mov
xor
rcrb
outsl
jecxz
push
pushf
sub
or
out
xchg
hlt
pop
das
adc
jb
or
adc
push
stos
into
orb
xchg
dec
stos
or
pop
xor
das
push
push
rolb
xor
ret
fwait
inc
int3
xor
or
add
jge
inc
push
cmpsl
icebp
jo
popf
push
lret
mov
mov
in
or
enter
pushf
stos
bswap
fwait
mov
pop
movsb
inc
push
js
lock
std
mov
fiadds
not
jmp
xlat
sub
adc
sbb
cmp
int3
mov
jg
int3
jno
add
inc
xchg
fs
in
out
ret
cmp
push
and
out
jb
mov
cmp
mov
ja
pop
les
bound
fdivl
cmpsl
jmp
jecxz
inc
cmpb
loope
xor
adc
dec
add
mov
ss
mov
cmp
xlat
hlt
adc
and
and
xchg
stc
daa
mov
inc
sub
iret
xchg
or
add
sub
and
enter
lahf
dec
and
out
or
dec
and
int
mov
loope
sub
pop
sub
cs
and
adc
test
lret
cmp
stc
pushf
sbb
iret
mov
movsl
adc
or
pushl
je
jp
subl
inc
xchg
or
mov
loope
shlb
idivb
xchg
xchg
sbb
test
rolb
push
push
cmp
mov
pushf
clc
jne,pn
cmp
leave
popf
mov
in
addr16
xchg
add
stos
das
stc
xor
cmpsl
daa
or
mov
add
ss
insb
mov
or
clc
xlat
adc
or
add
dec
fdivs
in
lcall
mov
popf
cld
lahf
ret
sahf
mov
test
lock
rorl
das
fsts
shll
idivb
int
jmp
leave
push
repnz
in
jge
and
inc
mov
adc
pop
cwtl
test
rcrl
mov
in
push
mov
repz
incl
clc
xchg
stc
mov
rcrb
out
xor
sbb
js
or
mov
xchg
test
cmc
pop
pop
adc
add
in
cmp
movsl
xor
add
les
loope
and
mov
cwtl
mov
in
dec
ret
pop
out
test
fdivrp
mov
std
sub
mov
in
subb
pop
dec
or
repnz
inc
test
iret
mov
aas
pop
call
xchg
stos
xor
stos
xchg
int3
push
enter
mov
pop
xor
mov
cmp
sbb
popa
aas
sbb
adc
xchg
rolb
dec
inc
rolb
inc
mov
das
test
outsb
xor
insl
lock
lret
stc
enter
test
sub
xor
leave
xor
and
mov
and
scas
xlat
pop
jge
inc
lds
jmp
add
sbb
test
sbb
repz
das
mov
adc
xor
or
sbb
inc
sbb
mov
aad
mov
sub
ficomps
popa
adc
loope
out
pop
mov
popf
lds
sbb
roll
sbb
xchg
cmp
push
jge
jp
or
lret
and
add
js
pop
jmp
xchg
pushf
lret
push
sbb
mov
sub
mov
push
push
sub
imul
insb
push
and
mov
lcall
mov
and
icebp
mov
mov
rclb
jae
rorb
lret
aam
cmc
ficomps
adc
mov
hlt
mov
jnp
xlat
lret
mov
int3
fistpll
addr16
ljmpw
jo
rorl
cmp
mov
imul
inc
into
mov
xor
out
push
jo
cmp
add
and
mov
sbb
outsb
cltd
lock
or
pop
lds
sarb
add
mov
je
cmp
mov
mov
mov
lahf
in
repnz
sub
jecxz
or
mov
xchg
dec
adc
std
push
mov
cmp
imulb
lahf
les
cltd
leave
cmc
inc
cwtl
dec
adc
js
mov
je
cltd
xor
inc
inc
adc
icebp
dec
std
dec
push
test
sti
dec
or
test
aaa
jbe
sbb
pushf
fbld
xor
xchg
std
sahf
or
adc
xchg
std
daa
inc
inc
stc
adc
adc
push
dec
repz
arpl
push
test
sub
popf
dec
jecxz
dec
inc
loop
sub
dec
in
pop
fsubr
mov
xor
pop
popf
jle
xchg
shll
push
mov
dec
scas
ret
mov
je
call
ljmp
out
sub
xor
push
lahf
jb
icebp
mov
lcall
sbb
out
and
ss
xchg
xlat
mov
aas
in
cmpl
mov
insb
mov
or
inc
mov
jmp
stc
ds
cltd
cmp
shrb
das
std
fildll
jo
test
les
mov
ret
pop
and
inc
lahf
andl
mov
xor
into
mov
fistl
cmp
and
jno
jecxz
dec
jbe
cmpsl
pop
ljmp
arpl
push
ljmp
mov
xor
popa
push
aad
mov
out
add
inc
mov
mov
xchg
ds
jno
scas
lahf
ss
fdiv
fisubl
mov
dec
in
dec
hlt
aad
pop
sbb
cli
inc
sarb
rcrl
lret
loope
mov
adc
jge
mov
stos
adc
pop
shll
das
sub
popf
out
cld
push
and
mov
out
out
popf
jns
vmovq
push
arpl
xor
sbb
sbb
fst
loope
inc
aam
mov
or
xlat
sbb
mov
int
pop
and
and
jae
add
nop
out
pop
xor
lods
push
push
mov
test
pop
sbb
push
xchg
inc
cs
inc
in
push
cwtl
rcrl
mov
imul
je
mov
repnz
ljmp
inc
mov
roll
jbe
out
xchg
mov
clc
jnp
cli
push
stc
ret
sti
rorb
push
addr16
cmc
pop
popa
adc
or
xchg
data16
pop
mov
pop
xor
jbe
ds
test
push
cmp
insl
lret
mov
shr
notb
sbb
fs
sub
pop
xlat
dec
hlt
mov
xor
fidivs
push
fdivr
mov
iret
ret
cmp
clc
cmp
test
aas
jno
nop
mov
pop
adc
push
je
jb
mov
mov
icebp
cmp
inc
insb
ja
xor
je
lods
mov
popf
xchg
aaa
out
fcoml
mov
scas
dec
inc
inc
mov
jbe
sub
pop
jle
testl
and
repz
mov
fiaddl
loop
outsb
adcl
mov
adc
call
cli
js
ja
and
enter
loop
adc
cs
cmp
repz
sbb
jmp
xchg
les
or
push
inc
jl
jmp
fcmovbe
orb
ds
lahf
push
push
xchg
mov
shlb
jecxz
fistpll
mov
and
mov
outsb
lahf
lret
movb
cmc
adc
jl
push
xor
xchg
sbb
int
jae
and
and
es
mov
cwtl
jno
mov
jbe
push
loop
lahf
inc
rcrl
mov
dec
xchg
fildll
xor
lds
jmp
fisttpl
push
inc
adc
mov
cmpsb
fisttpll
inc
cmp
insl
cmpsb
dec
mov
dec
ja
inc
mov
les
imul
rol
xchg
sub
push
push
dec
pop
adcl
pop
pop
push
mov
loop
std
jne
cltd
cld
lret
jg
mov
sub
loope
fucomip
lock
lods
das
inc
pushf
jl
repz
iret
std
xlat
repz
xchg
cli
mov
push
cmpsl
dec
je
mov
enter
pop
pop
mov
push
cwtl
push
lods
add
jno
jge
imul
and
nop
movsl
jne
leave
ficomps
adc
or
test
jmp
aam
in
push
aad
test
out
pop
jne
pop
js
fldcw
cmpsl
jae
mov
cmp
js
fwait
loope
cmpl
adc
mov
and
fidivrs
lods
xchg
mov
jae
rorb
xchg
add
xor
dec
sub
pop
pushl
rcl
mov
sbbb
pop
popf
out
xchg
mov
xchg
call
ds
addr16
dec
in
xor
shrb
movsb
or
jecxz
scas
mov
ja
push
dec
and
les
aas
out
mov
test
mov
es
dec
loope
loope
adc
cmp
mov
sub
sahf
fnclex
inc
push
fucomi
or
add
mov
add
cltd
sbb
aam
push
mov
outsl
shl
jge
mov
fcmovnb
and
stos
pop
mov
sub
push
movsb
mov
mov
sti
mov
push
inc
inc
call
jae
in
aad
in
mov
lret
cmp
aas
sti
pop
shrb
dec
cld
or
mov
fdiv
sahf
lds
mov
in
jmp
fs
add
or
fwait
hlt
inc
or
and
enter
xchg
das
mov
xor
aam
push
mov
pop
pop
stc
cli
out
out
fldenv
xchg
and
dec
add
nop
rolb
leave
and
pop
push
ss
xchg
aaa
xor
rcr
pushf
lahf
dec
push
jecxz
inc
mov
xorl
lcall
inc
cmp
bound
outsl
stos
xchg
push
imul
push
mov
dec
fsubs
loopne
xchg
pop
ljmp
scas
rolb
or
mov
mov
test
in
insb
or
movsl
push
or
cmp
dec
and
clc
dec
je
mov
enter
jmp
and
rorl
stos
in
mov
and
sub
repnz
pusha
xchg
dec
inc
test
addr16
aas
shl
ljmp
adc
mov
push
outsl
sub
subl
fidivrs
pop
or
jmp
test
or
mov
cmc
fwait
sarb
or
insl
inc
xchg
mov
dec
sbb
push
mov
xchg
loop
in
sbb
adc
cs
or
inc
out
xchg
sub
mov
testl
inc
xchg
cmp
lock
divb
lea
stos
rorl
sub
jnp
mov
push
sbbb
stc
lods
dec
insb
and
cmc
jne
lds
push
lds
dec
ds
in
pop
push
mov
cmp
iret
dec
and
lods
outsl
je
pop
jae
fcoms
jno
adc
gs
push
mov
out
adc
xchg
pushf
fildl
adc
roll
andl
xchg
push
icebp
xor
adc
adc
int
mov
sub
and
test
adc
push
out
cmp
adc
jl
stos
mov
mov
xor
lods
outsl
pop
cli
sub
sub
je
cs
xchg
adc
add
pop
daa
sub
jmp
push
mov
jno
addr16
daa
mov
mov
shlb
mov
xor
lahf
popf
pop
and
repnz
add
pop
lret
sbb
jmp
cli
or
cmp
fcmove
repnz
idivl
fldz
loope
stos
sbb
push
pop
clc
sbb
and
mov
cmp
rolb
cmp
mov
sbb
mov
cmc
out
pusha
xor
shll
fucomi
sub
lret
xchg
push
sti
mov
cmp
push
push
adc
cmp
std
sub
movzbl
js
andb
cmp
gs
mov
mov
or
sub
sahf
out
jle
fwait
ret
test
rcl
aas
xlat
mov
inc
sub
in
mov
movsl
imul
out
test
xchg
rcr
dec
xchg
dec
sub
fwait
jg
adc
test
fidivrs
pop
dec
jnp
and
sbb
bound
movl
mov
inc
mov
jmp
movsb
xchg
lret
sbb
mov
out
xor
inc
test
lea
mov
ljmp
call
sbb
pop
push
jl
inc
popa
push
incl
push
orl
pop
or
lcall
push
prefetch
fsubs
pop
mov
xchg
jnp
jle
and
sbb
adcl
dec
jns
in
filds
pushw
ds
xchg
pushf
cmp
mov
fdivrl
lea
and
push
sbb
jge
rorl
add
mov
push
xchg
mov
out
cmc
or
and
and
inc
pop
inc
jle
mov
int3
xchg
in
xlat
pushf
or
mov
lea
push
lcall
adc
pop
push
fxch
or
fsubs
xor
adc
cmp
loop
or
cli
lock
lods
in
jo
scas
addl
in
cmp
jae
jecxz
sub
adc
pop
cs
pop
adc
in
in
mov
mov
pop
pushf
mov
outsl
or
mov
push
lea
mov
and
and
rclb
test
scas
inc
ficoms
jns
rorb
inc
push
insb
dec
jno
mov
inc
out
jns
mov
mov
jg
mov
push
insl
cmc
xchg
aad
or
xchg
cmp
xchg
outsl
add
stos
mov
push
or
mov
out
repnz
iret
pop
pop
into
into
xor
inc
stos
insb
xchg
mov
inc
fwait
push
dec
pop
xchg
in
jnp
jnp
inc
les
jg
lea
cmp
fwait
dec
and
lock
dec
mov
ret
add
pop
stos
cmp
ljmp
inc
pop
mov
pop
decl
xor
jle
loopne
stc
add
push
fdivr
xor
test
pop
enter
adc
ror
push
cmp
ret
lock
dec
xor
and
and
sub
shlb
std
fdivl
stos
test
push
fcmovnu
sub
push
sahf
daa
push
aam
pop
stos
sahf
push
jp
push
scas
xor
popf
mov
int3
lods
imul
add
aad
scas
inc
xchg
out
out
pop
dec
in
mov
das
pusha
add
adc
cmp
lds
sub
lods
jnp
mov
sarl
adc
and
xlat
sbb
cmp
pop
fists
and
rclb
testl
inc
add
fcomps
inc
test
or
jnp
mov
sbb
push
stos
mov
cmp
cmpsl
aad
mov
or
jl
insl
sub
and
shl
sti
push
jne
scas
ja
sbb
cli
lods
jno
xor
jle
jecxz
out
and
divb
sbb
jbe
mov
mov
scas
inc
jo
and
aas
adcl
movsb
negl
ljmp
xor
insl
es
das
or
sbb
jecxz
jo
into
push
pop
mov
add
fwait
add
out
mov
mov
aam
rorb
fmulp
dec
xor
sbb
add
fistpl
pop
sbb
inc
jno
cmp
rcr
aaa
roll
add
into
aaa
sahf
sarb
shll
and
jmp
jecxz
arpl
popa
mov
push
mov
stos
mov
int3
aaa
test
adc
xchg
rcl
in
cmp
test
pop
out
loopne
std
pop
imul
add
and
add
test
mov
int
jno
inc
cld
es
mov
sbb
out
inc
out
mov
xchg
push
adc
int3
lods
cmpsb
cmc
mov
push
sbb
xorl
xor
repz
ljmp
push
jmp
ds
mov
fsubrp
sbb
arpl
fisubl
fs
jnp
mov
mov
movsb
stc
add
mov
mov
ljmp
jmp
dec
mov
add
push
mov
mov
daa
mov
mov
dec
pop
pop
cli
fidivl
jp
jl
mov
or
inc
and
jp
xchg
add
inc
sub
movsl
sub
push
pop
cmp
pop
mov
add
dec
rcll
dec
das
mov
pop
in
dec
adc
hlt
lcall
mov
mov
loope
sbb
adc
out
stc
ret
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
nop
push
push
push
nop
add
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
