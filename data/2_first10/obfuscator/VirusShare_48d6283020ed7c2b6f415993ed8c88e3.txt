pushl
mov
rep
jmp
pushf
mov
mov
movw
mov
lea
jmp
not
pushl
stos
call
sub
lahf
rcl
mov
sub
pushf
cmp
add
cmp
add
sbb
mov
mov
test
pusha
push
lea
jno
je
test
pushf
push
sub
cmc
mov
cmp
lea
jmp
mov
shr
mov
stc
cmp
jmp
call
lea
jb
pushf
mov
pushf
push
pushl
ret
jg
mov
mov
sub
mov
loop
inc
cli
subb
or
adc
xor
arpl
scas
xor
data16
loope
jl
leave
push
lret
inc
dec
inc
xchg
insl
mov
out
mov
jp
and
out
or
mov
iret
xchg
nop
jo
jmp
dec
xor
int3
btr
lret
aas
rcll
rcll
call
sbb
movl
popa
cmc
sub
push
pusha
movl
cmp
movw
mov
lea
ja
pusha
imul
pusha
jmp
test
sub
js
mov
stc
test
pushf
pushl
pusha
pushf
lea
je
push
add
push
cmp
pusha
lea
jb
cmp
bt
push
call
dec
cmpsb
adc
mov
aad
adc
insl
xchg
sub
lret
jecxz
and
lods
stos
icebp
imul
out
or
loop
addb
dec
xor
dec
ds
pop
jge
mov
fwait
mov
pop
das
add
dec
mov
xchg
adcl
fdivl
lea
jne
movsbw
lea
movb
jmp
dec
push
not
aaa
mov
pop
arpl
out
add
sub
sahf
push
sahf
cmp
movsl
insl
push
ficoml
jecxz
sbb
jnp
jb
ljmp
movsl
out
inc
push
inc
cmp
sub
shll
and
aas
mov
inc
sbb
adc
dec
add
inc
push
inc
lcall
xchg
out
add
test
mov
and
loopne
popa
popf
mov
cmp
sub
in
push
stos
xchg
jae
mov
int3
sub
dec
cmp
fadds
gs
ss
shll
dec
imul
and
in
sbb
jb
stos
dec
xchg
xchg
mov
jmp
lea
je
clc
stc
test
pusha
sub
cmc
jmp
xchg
xchg
pushf
inc
sbb
jg
mov
inc
lods
aad
push
out
jae
addr16
push
xchg
enter
inc
daa
pop
je
cli
aam
jb
pusha
popf
add
mov
hlt
nop
iret
xor
lock
mov
xor
mov
faddp
movsl
fnstcw
xor
cli
hlt
sub
sahf
sbb
icebp
adc
data16
or
xchg
push
jbe
aaa
mov
roll
jg
add
test
repnz
pushf
jmp
pushf
call
xor
inc
sbb
mov
xor
call
xor
sahf
or
push
mov
pushf
xchg
insb
cmp
cld
jb
cmp
push
ja
xchg
cli
push
inc
inc
xor
cltd
adc
dec
jle
adc
es
cltd
notl
xor
mov
mov
mov
jg
mov
push
sbb
repz
xchg
das
inc
adc
xlat
xor
pushl
popl
test
test
call
lea
ret
clc
mov
mov
test
movw
pushf
lea
jo
pusha
lea
je
pusha
bt
test
pusha
add
test
test
cmp
call
xchg
sbb
scas
out
inc
fsubp
pop
jne
xor
sub
or
mov
add
sbb
ja
and
pop
dec
ret
loopne
notb
and
or
mov
pop
add
cltd
pusha
or
xor
pop
jae
jmp
scas
stos
inc
jbe
xchg
arpl
out
nop
mov
fadd
rcll
imul
fs
ja
bt
imul
bt
add
pusha
lea
jmp
or
xor
mov
sahf
xchg
mov
data16
xchg
int3
inc
lock
test
push
xchg
in
lret
ss
lahf
in
cmp
push
pop
xor
rcl
pushf
lods
xchg
in
cmp
lds
pushl
fcoml
cmp
aad
cmpb
push
es
lret
repz
mov
pushf
sbb
mov
dec
lret
jne
pushf
push
hlt
fsubrs
mov
push
cmpsb
mov
fcomp
jmp
sbb
mov
outsb
sbb
das
xlat
int3
faddl
and
add
icebp
push
adc
stos
ret
jbe
nop
fsubl
jmp
and
cltd
jns
push
or
out
mov
cmp
xlat
mov
imul
jge
mov
in
popf
je
inc
aas
arpl
inc
lret
and
pop
jmp
mov
pop
adc
xchg
inc
pop
ja
cmpsl
adc
mov
sub
loope
movsl
adc
xchg
outsb
mov
cmpb
pop
aas
fcompl
jo
inc
sub
mov
leave
jbe
icebp
icebp
inc
ret
pop
daa
shrl
repnz
push
mov
add
mov
xchg
addb
dec
call
subl
gs
roll
or
les
mov
mov
inc
lea
jne
aas
stc
sub
btr
mov
sub
dec
sbb
rcl
add
sbb
pushf
jmp
lea
jne
mov
movb
pusha
lahf
pop
push
mov
call
cmp
cmp
call
pushf
mov
pushf
pusha
pushf
pushl
ret
push
arpl
sbb
xor
insb
les
stos
insb
jae
add
nop
fcmovb
in
out
iret
aad
scas
push
mov
cmp
mov
in
sub
jl
inc
inc
mov
leave
lods
adc
inc
adc
or
and
in
loopne
mov
lcall
adc
je
jno
leave
jnp
mov
pushf
call
mov
mov
mov
jns
mov
push
jno
clc
andl
sub
clc
cmc
pushf
test
cmp
pushf
call
inc
mov
not
dec
inc
cmc
xor
sar
xchg
movsbw
inc
pushf
mov
adc
or
jmp
lea
jb
call
lea
js
ja
jg
call
call
clc
cmc
cmc
add
call
lea
je
cmc
cmp
pushf
pushl
pusha
lea
je
push
lea
jmp
mov
and
or
rol
mov
test
jmp
push
pushf
pushf
dec
pushf
jmp
cmp
pushf
sub
call
sub
clc
xor
lea
jle
cmc
bt
pusha
sub
pushf
call
mov
mov
jo
loop
es
stos
lret
pop
sbb
in
sub
mov
aas
lcall
mov
je
xor
sub
adc
fldenv
push
rclb
cmp
push
and
xor
sub
xchg
sbb
cmc
icebp
push
in
test
enter
movsb
scas
cmp
lret
arpl
inc
subb
pop
sbb
mov
std
sbb
inc
pushf
les
stos
orl
stos
adc
xchg
xor
js
jge
pushf
pop
xchg
push
daa
xchg
ljmp
jl
xor
jmp
sub
sbb
or
orb
lea
lcall
pop
jle
movsb
pusha
mov
ljmp
xchg
adc
adc
jmp
xchg
cmpsl
stos
lea
enter
lret
stc
jmp
inc
and
cmp
jmp
lea
je
pusha
push
lea
jmp
movb
jmp
movl
pusha
pusha
lea
jmp
pushf
inc
inc
pusha
push
inc
xor
inc
add
xchg
or
daa
neg
or
mov
xor
setae
mov
test
xchg
lea
jne
shrd
bswap
mov
call
ja
push
sbb
negb
outsb
gs
leave
popf
sbb
cmp
pop
test
cli
ja
enter
jnp
dec
fdiv
aam
fsubs
loopne
in
dec
scas
jecxz
imul
call
movl
jmp
pushf
mov
mov
pushf
lea
jmp
cmp
add
dec
clc
shr
rol
mov
pusha
jmp
xor
bt
sub
shld
mov
lea
setg
neg
mov
bswap
movsbw
bts
btc
add
btc
shl
shr
movsbw
mov
sub
add
pushf
mov
lea
pusha
call
inc
fwait
sarl
mov
out
push
lea
lods
gs
xor
rorb
sub
cs
int
cmp
rclb
dec
xor
scas
mov
sbb
cmp
push
inc
dec
inc
xchg
mov
fs
cltd
shrl
add
mov
lods
rcrb
shlb
jmp
in
leave
dec
dec
mov
addl
sahf
bound
testb
xchg
push
lea
je
pusha
mov
test
clc
cmp
pusha
pushf
jmp
sub
clc
pusha
mov
cmp
pushf
lea
ja
pushf
pushf
pusha
pushf
lea
jmp
mov
not
pop
push
jmp
lea
jne
movzbl
movb
pusha
setge
call
clc
fucomp
cmp
mov
call
pop
pop
scas
aaa
mov
pshufw
movsb
inc
mov
mov
bound
divl
sub
sub
mov
mov
xor
jg
out
in
xchg
in
push
jb
js
xchg
in
lret
arpl
addl
inc
cmpsl
push
test
add
into
dec
mov
dec
jb
and
sbb
adc
and
pop
pusha
pushl
popl
push
cmp
call
jmp
mov
pusha
mov
clc
jmp
rcr
cmp
mov
push
int
dec
add
lea
xlat
and
jo
fldt
push
scas
jo
int
gs
mov
test
mov
and
or
insb
xchg
xchg
inc
or
jge
mov
ret
ret
sbb
mov
bound
int
std
popa
add
mov
std
movsl
adc
inc
stc
movb
pusha
xchg
bts
aad
mov
add
shr
stc
and
mov
bt
jmp
hlt
mov
cmp
mov
mov
iret
mov
push
fisubs
popf
xchg
ljmp
adc
pop
mov
mov
imul
jbe
dec
je
pushf
push
cltd
outsb
jmp
mov
dec
add
dec
mov
test
fs
or
xchg
xchg
fdivrl
and
ret
repnz
sbb
jge
insl
xchg
cmpsb
push
xlat
xor
jmp
test
mov
pusha
sbb
fsts
in
je
adc
xor
sub
mov
pop
sahf
add
js
cmp
movsl
fcomip
dec
add
sbb
lahf
mov
sub
mov
xor
test
in
aad
je
out
pop
in
clc
push
adc
loopne
stos
jbe
bswap
fmull
cmp
mov
dec
xlat
pop
xor
arpl
shr
scas
aas
dec
in
sub
pop
in
and
leave
jne
movsl
insl
push
dec
adc
iret
sti
lahf
adc
cli
sbb
mov
xor
jno
lcall
test
js
or
int
in
dec
es
divb
inc
adc
repz
xor
mov
sub
dec
xchg
xchg
jl
repnz
cs
xor
xchg
in
sbb
or
fidivrs
out
sub
stos
out
dec
mov
repnz
lret
scas
jle
cmp
jecxz
xchg
roll
jae
jmp
sbbb
sbb
jne
adc
fcoml
clc
push
in
mov
sbb
enter
jno
mov
das
lods
dec
xor
and
and
adc
mov
mov
cs
jge
inc
loop
jno
mov
cwtl
fsubrs
add
adc
sysexit
rol
jnp
push
push
rcll
nop
les
and
adc
xchg
add
int
cmp
out
xor
push
pop
iret
outsb
and
xchg
out
jnp
les
cmp
insl
add
int
lret
scas
lret
mov
inc
in
negb
sbb
loop
notb
xor
inc
and
jo
cmp
or
add
divl
js
mov
stc
sbbl
test
loopne
pop
pop
adc
test
das
movsb
cwtl
adc
push
shr
push
mov
movsl
xor
loop
or
mov
mov
enter
bswap
enter
xlat
fsubr
sbb
scas
aad
xor
movsl
rorl
xchg
jl
movsb
cmpsl
aaa
inc
in
push
out
pop
in
xchg
mov
sahf
int
mov
mov
sbb
mov
inc
mov
pop
out
arpl
out
mov
lock
add
js
push
mov
out
xchg
cmp
xchg
ja
sub
ja
inc
loop
subb
xchg
pop
pop
movsb
mov
lods
fnstsw
cmp
cmp
mov
xchg
or
and
xchg
fdivrs
sub
pop
or
pop
pop
jge
movsl
jb
dec
test
mov
ret
jae
xchg
scas
xchg
xchg
repz
sub
jns
cmpb
call
mov
pushf
lea
jmp
movl
jmp
pushf
lea
ja
mov
inc
not
not
inc
add
not
clc
stc
xchg
jmp
pusha
lea
je
rcr
jmp
pushf
pusha
lea
jb
pusha
pushl
jmp
add
sbb
pusha
inc
dec
push
pop
negl
pop
inc
jecxz
nopl
sbb
push
stos
in
pushf
jl
dec
test
scas
and
mov
mov
xchg
cmp
xchg
cld
xchg
dec
adc
jbe
int
sbb
fwait
test
sti
sahf
adc
je
lret
mov
and
sub
out
mov
push
in
fnstenv
jge
and
into
popf
cmp
leave
dec
mov
cmp
pushf
push
call
test
bswap
shld
push
shl
rol
adc
or
mov
cwtl
rcr
aam
daa
sub
cmc
sar
push
aas
push
shrd
rol
rol
inc
push
adc
shl
neg
push
shr
btr
mov
cmp
stc
stc
test
pusha
pushf
lea
je
shl
mov
mov
stc
movzbl
clc
add
pushf
pushf
mov
stc
test
movw
call
cmp
cmp
jmp
pushf
movl
pusha
mov
jmp
imul
gs
xor
cs
insb
add
mov
in
adc
mov
lret
cmp
pop
and
push
push
aam
call
std
cmp
out
sbb
pop
pop
shll
sti
inc
fsubrp
and
movsl
or
int
std
clc
jno
dec
lds
je
cmpsb
cli
ja
mov
jle,pt
lock
stos
mov
mov
movsb
xchg
mov
cli
cmp
popa
push
call
test
cltd
mov
mov
fs
jno
pusha
movb
lea
je
jmp
mov
jmp
pushf
stc
mov
xor
clc
repnz
push
pusha
movb
pushf
lea
jne
shr
stc
stc
pusha
mov
shr
bts
shl
pop
sub
adc
btr
lea
jmp
pusha
mov
push
pushf
movl
lea
jmp
jmp
fidivs
sbb
nop
js
idivl
outsl
aaa
daa
adc
mov
pand
jno
cmpb
clc
nop
sbb
and
push
mov
into
enter
mov
mov
outsb
xchg
rcrl
xor
mov
inc
push
jg
mov
xor
jge
dec
lds
fwait
in
and
ss
ljmp
int3
push
movsb
js
orb
nop
in
loopne
lea
je
test
add
pusha
mov
cmp
movl
add
jmp
lea
ja
and
push
sub
or
setbe
dec
and
sub
add
btr
mov
bt
seto
shl
push
mov
movl
movb
stc
jmp
mov
pushf
rep
pop
mov
mov
lea
jmp
mov
shl
cmp
mov
cmc
bt
bt
clc
cmpb
pushf
lea
jne
push
mov
lea
jne
daa
adc
pushf
sub
movzbw
mov
inc
test
add
ror
mov
push
test
test
pushf
pusha
lea
je
test
pushf
sub
mov
movb
call
repnz
pusha
lea
jne
mov
pusha
pushf
movb
bswap
mov
call
push
movw
pushf
movl
lea
jae
jmp
lock
xor
mov
nop
cwtl
adc
jo
rcrb
rcr
pushf
je
sub
ret
lahf
dec
ror
out
mov
mov
nop
data16
in
sub
shr
mov
fsubs
fs
sbb
outsb
gs
xchg
or
out
mov
cmp
or
sub
dec
fwait
lcall
bound
icebp
mov
cmpsb
lds
pop
rolb
loopne
call
mov
mov
sbb
stos
sbbl
jnp
dec
xchg
dec
push
ds
clc
negb
int3
js
pop
imul
dec
je
dec
or
xor
jnp
scas
insl
add
and
mov
push
add
aaa
les
orl
fsub
sbb
add
out
push
xchg
mov
fcoml
aam
mov
xor
and
lea
xor
cltd
dec
cmp
mov
rcl
enter
cmp
jns
les
pushf
sbb
add
sbb
out
dec
jbe
insw
jne
xor
xacquire
ljmp
push
in
aas
cmpsb
iret
enter
aas
add
xchg
rolb
scas
jno
cld
jo
jmp
and
mov
jb
xchg
in
test
imul
je
push
shll
mov
ret
xchg
sub
out
xchg
imulb
ja
subl
push
mov
mov
pop
cmp
pushf
pusha
lea
je
pushf
lea
jmp
mov
pop
jmp
pushl
push
lea
jne
sub
bts
movsbw
call
enter
sbb
lds
cmc
pop
jne
cmp
or
and
cld
inc
xchg
bound
ja
inc
cmp
dec
mov
lret
inc
inc
insb
test
inc
mov
mov
jno
outsb
push
pop
xchg
loopne
cld
and
jecxz
dec
inc
jp
xor
inc
push
iret
out
jge
loopne
fdivrs
add
fistpl
mov
imul
mov
clc
cmp
mov
push
call
call
cmp
pushf
mov
jmp
adc
jae
sbb
xchg
scas
jbe
imulb
mov
pop
inc
cmp
jecxz
push
adc
mov
xchg
std
mov
sub
sbb
int
test
add
xor
push
cltd
popf
mov
lahf
ret
push
shl
jns
jno
push
and
xchg
fsubl
icebp
sub
gs
sbb
push
movntps
das
arpl
inc
mov
lds
sti
repnz
push
xchg
sbb
hlt
sahf
push
pushf
pop
xor
sbb
shrb
arpl
mov
xor
fcompl
pop
es
xor
sub
das
shrb
insb
mov
cld
sub
lea
addr16
dec
jle
movsb
rcrl
adc
lods
fwait
sti
out
pop
adc
out
add
add
les
loop
fstpt
cmp
or
addr16
push
push
xchg
jnp
mov
movsl
dec
pop
pusha
mov
aas
sti
fcomip
and
inc
mov
jmp
icebp
inc
stos
fstpt
push
pop
push
mov
aaa
fs
pop
sub
loop
lahf
test
stos
mov
jmp
xchg
mov
pop
scas
scas
xlat
mov
out
mov
sbb
lods
mov
xchg
test
stos
mov
add
call
cmp
test
enter
lods
arpl
stc
add
icebp
push
int3
dec
jg
scas
hlt
sbbb
inc
pop
jl
orb
outsb
into
or
popa
mov
leave
push
sub
adc
stos
das
and
xchg
adc
push
lock
cmp
sbb
mov
xchg
cmpsb
mov
or
dec
push
sub
out
jne
and
and
loop
je
sbb
xchg
imul
or
adc
or
xchg
movsb
mov
adc
dec
cmpl
or
jbe
loop
jne
fstp
dec
and
mov
mov
lods
je
xor
sub
sarl
sub
mov
cld
add
arpl
dec
xor
pop
imul
lds
cmpsb
scas
xchg
scas
ss
out
divb
cmp
jecxz
push
insl
or
jnp
es
mov
pushf
loope
xchg
and
push
ljmp
repnz
mov
pop
jbe
pusha
mov
mov
sahf
dec
mov
int3
in
pop
inc
jle
fcomp
push
cmp
mov
add
aaa
dec
add
fwait
into
mov
and
add
fidivrl
jmp
push
fidivl
rcrb
sub
cmp
test
cmc
cmp
pushf
pusha
push
jmp
xchg
jmp
xchg
outsb
xchg
lods
add
mov
das
sarb
pop
pusha
xchg
push
mov
emms
pop
mov
mov
jae
xchg
rorl
mov
and
lret
inc
insl
pop
aas
push
mov
inc
ret
pop
js
fsubs
lds
push
jmp
inc
frstpm(287
lcall
lret
adc
in
jne
lret
cli
push
stos
pop
cmp
cli
mov
scas
dec
test
inc
mov
ja
lret
sti
dec
mov
movsl
dec
fnstsw
loop
pop
lret
dec
fisubrs
jge
pusha
lea
je
jmp
lds
sub
mov
or
jno
rorl
ljmp
mov
mov
jnp
movntq
pop
xchg
pop
lret
lahf
mov
mov
mov
mov
subb
push
movl
mov
pushf
pusha
movl
mov
pushf
push
mov
lea
jmp
leave
inc
test
outsb
inc
out
out
aad
add
xor
aam
out
popf
jge
xor
aas
dec
add
mov
pop
sbb
mov
sub
pop
mov
stos
xor
stos
inc
lret
or
fs
aaa
pop
jmp
cmp
aam
pop
cmp
push
ss
mov
mov
nop
ret
daa
jnp
push
and
inc
int
sbb
fdivl
mov
sbb
xchg
int3
push
fcoml
js
popf
es
or
js
push
pop
xor
jo
sbb
shll
jb
or
std
mull
jbe
jp,pn
push
fs
rolb
mov
push
sbbb
and
mov
lea
je
pusha
movb
sub
jae
cmp
push
pusha
pusha
call
and
inc
sub
mov
jge
int
mov
sarl
sti
mov
jl
jbe
mov
adc
and
iret
adc
cli
push
cltd
ds
pop
push
adc
cmc
push
pop
mov
jnp
out
jmp
mov
xchg
hlt
xchg
fsubrl
mov
stc
mov
push
mov
push
add
setl
jmp
call
pop
xor
mov
jmp
or
fidivrl
cli
stc
inc
in
mov
dec
cmp
cmp
cld
inc
cltd
aam
dec
pop
std
loop
jnp
hlt
sti
cmpsb
push
addl
push
cwtl
sbb
push
js
pusha
in
pushf
shlb
push
call
lret
and
popa
jmp
rcr
and
xor
push
in
add
pop
inc
mov
stos
sub
pop
bound
ret
sahf
test
add
pop
popf
cwtl
std
adc
jge
xchg
mov
stc
out
addb
mov
mov
aas
sti
add
clc
jl
test
xchg
push
jmp
jmp
xor
mov
jnp
dec
shlb
in
cmpb
mov
xchg
cmp
jo
pusha
test
mov
mov
hlt
xchg
cmp
pop
or
jo
pop
xchg
push
mov
test
icebp
clc
mov
shrb
and
sahf
lock
dec
pushf
xchg
fnstsw
inc
imul
push
test
in
mov
cmp
or
mov
mov
ss
xlat
mov
push
sub
push
inc
es
mov
divl
mov
mov
mov
popa
stc
loope
cmpl
mov
add
insl
pop
add
cmp
lods
xlat
jne
push
gs
out
pushf
lret
lret
cmp
inc
outsl
outsb
dec
jno
out
decb
push
pop
popa
lods
xor
leave
or
mov
repz
movsl
inc
mov
cmc
mov
out
xorb
dec
xchg
out
scas
dec
clc
xor
push
sub
sbb
mov
add
xchg
pop
loop
out
mull
inc
cmp
das
movsb
push
and
jo
out
lods
js
fnstenv
cmp
pop
jb
mov
or
filds
scas
cmc
jb
scas
lods
sbb
imul
jp
push
test
aad
pusha
xchg
loop
xchg
xor
sub
mov
push
mov
or
icebp
add
push
jo
mov
inc
fidivs
loopne
and
call
lret
push
mov
mov
and
sub
lea
jae
push
cmp
pusha
lea
jno
pusha
lea
ja
jmp
inc
jmp
call
pusha
pushf
lea
call
call
xor
daa
sbb
mov
fcomps
sti
out
aaa
daa
add
xchg
pop
inc
xor
arpl
mov
mov
mov
test
mov
jns
mov
inc
mov
outsl
jle
xchg
aam
aad
in
mov
test
fmull
aaa
xchg
mov
dec
in
aam
sbb
pop
mov
xchg
into
sbb
stos
sti
inc
push
bound
push
add
hlt
or
dec
push
pushf
sbbb
shrb
sahf
jne
in
cwtl
adc
fnstsw
inc
push
jmp
mov
jle
pop
mov
lods
fimull
subl
sub
xchg
push
inc
push
stos
out
repnz
mov
enter
and
xor
imul
add
pop
outsb
xorb
sahf
adc
or
loopne
ret
mov
call
lea
jae
stc
pusha
cmp
pusha
call
nop
in
sbb
sarl
imul
pop
sbb
add
and
cmp
pop
fwait
pop
or
mov
out
dec
mov
push
or
aaa
push
pusha
outsl
add
dec
xor
cmp
add
in
pusha
mov
mov
test
sbb
mov
bt
sub
bswap
rol
test
dec
sub
add
bsf
mov
clc
sar
clc
mov
stc
jmp
mov
lea
jne
jmp
pop
inc
push
and
push
xcrypt-ofb
cmpsl
scas
inc
pop
inc
aas
jbe
xchg
push
imul
sti
pop
xchg
ss
out
sub
jg
jecxz
incb
clc
mov
pusha
xchg
daa
and
xor
gs
inc
xchg
sub
xchg
push
push
sbb
push
dec
fdivs
or
push
cmpsb
push
mov
pop
lea
add
sbb
pop
in
jmp
and
ja
jmp
call
call
cmp
int3
pushf
hlt
lods
adc
inc
jmp
sbb
aaa
insl
add
mov
pop
push
in
or
adc
out
sub
pop
dec
vpslld
sub
iret
leave
jns
syscall
das
mov
pop
mov
push
jno
jae
in
sub
xchg
adc
xchg
pop
and
into
bnd
scas
mov
mov
das
lret
jle,pn
scas
int
rcr
cmp
mov
mov
mov
shl
mov
pushl
pushf
call
enter
sbb
inc
mov
or
xchg
mov
mov
xchg
arpl
faddp
or
gs
sub
fdivl
gs
out
lods
jbe
enter
test
add
mov
lret
jl
sub
or
dec
loope
fwait
testl
cld
inc
lods
push
shrl
je
inc
inc
mov
mov
test
mov
popf
inc
and
clc
sti
dec
jecxz
ljmp
mull
mov
mov
mov
push
leave
adc
push
dec
mov
out
or
xchg
fldcw
cmpl
mov
loope
add
stc
cmpsb
in
or
or
adc
xchg
xor
lret
sbb
movsb
stos
ljmp
jmp
es
aad
and
pop
rcrl
stos
pop
lahf
jnp
push
push
mov
lea
push
cmp
xchg
popf
add
movsb
jmp
jl
in
loop
loop
bound
inc
dec
and
push
cmp
scas
in
ret
in
enter
pushf
call
jl
cmp
pop
push
push
ss
std
stos
ljmp
ljmp
pop
inc
pushf
xor
fadd
xchg
push
in
add
stos
push
jb
fcmove
mov
lods
jl
mov
js
pusha
movb
pushf
jmp
pushf
jmp
inc
mov
lea
jbe
push
inc
pushf
mov
lea
pushf
pushl
mov
pusha
lea
call
push
movb
push
pusha
adc
pushf
lea
jbe
jae
pushf
call
fwait
mov
add
data16
mov
and
frstor
and
in
data16
mov
push
inc
lock
push
loope
pusha
nop
bound
add
pusha
pop
add
and
and
dec
popl
mov
mov
pushl
adc
pushf
movb
pusha
pushf
lea
jmp
lea
call
loop
adc
subl
pop
xlat
out
cmpsl
out
daa
pop
or
clc
dec
decl
adc
cmp
imul
mov
fildl
fwait
sub
dec
push
sahf
pop
scas
sarl
lahf
sbb
mov
insb
in
std
xchg
jb
loopne
adc
add
dec
in
cmpsb
xchg
mov
mov
mov
push
mov
in
sbbb
xor
call
push
push
pushf
jmp
lea
jae
pushf
add
jmp
lock
andb
loopne
inc
mov
jp
xchg
and
lret
inc
mov
mov
push
addl
aad
xor
stos
ficoms
inc
push
scas
adc
adc
lods
mov
popf
xor
popf
jno
clc
cld
xor
out
push
ljmp
repnz
outsb
leave
fsubr
jns
pop
imul
push
jnp
and
mov
cmp
lods
int
push
pop
inc
stc
add
sub
mov
sub
in
in
fsubs
push
packuswb
in
int3
out
bound
xchg
leave
add
or
ret
in
sbb
and
sub
mov
fisttps
lods
xchg
jbe
int
roll
testl
out
mov
sbb
bswap
push
lahf
lea
call
inc
dec
pusha
inc
add
push
cmc
adc
xchg
mov
mov
inc
rcl
pushl
mov
cmc
cmp
mov
stc
lea
movzbw
pop
mov
pusha
sub
call
rep
pop
jmp
rorb
sub
mov
dec
mov
and
mov
clc
lret
push
std
dec
bound
dec
es
movsl
mov
cmp
shr
insb
add
cmp
mov
push
xchg
imul
das
adc
push
and
mov
mov
test
stos
jnp
sub
push
pop
out
adc
and
mov
das
negl
jb
dec
push
and
adc
cmp
test
cld
je
arpl
adc
mov
mov
push
mov
leave
in
dec
addr16
lahf
sub
cmpsl
arpl
pop
mov
hlt
mov
test
or
negl
in
or
orl
scas
jbe
pop
cmpsb
mov
sbb
sbb
mov
xor
mov
xchg
inc
mov
push
fstp
jecxz
shlb
mov
and
lods
shrl
push
add
cmp
stos
loop
pop
sbb
loope
mov
cltd
jo
orl
cmp
mov
xor
outsl
jl
jge
cmc
mov
mov
xor
xchg
xchg
iret
adc
cli
ljmp
imul
incb
jnp
sahf
pusha
out
dec
pushf
sub
xchg
lods
lods
loope
push
mov
jns
loope
clc
dec
jo
sbb
sbb
lds
adc
and
jl
in
adc
sarb
fists
add
lea
ja
pushf
sub
setle
sub
add
movzbw
rcl
lea
mov
rol
mov
cmc
pusha
cmc
pushf
repnz
pusha
call
imul
call
test
movw
xor
movb
jmp
and
mov
test
pusha
xor
cmc
call
adc
lea
push
pushf
pusha
call
lea
je
movsbw
rol
rcl
push
shl
sar
sub
bsf
shr
ror
jmp
fwait
mov
add
jbe
data16
cmpsb
mov
std
sbb
push
loopne
xchg
insb
cmpsb
xor
call
inc
cmpsl
push
lods
xor
push
push
gs
push
dec
int3
xor
pop
inc
outsb
lcall
incb
cltd
shl
fwait
cmp
adc
inc
fidivl
das
rorl
inc
fsubrl
outsb
cmp
cld
cmp
xchg
dec
pop
cmp
cmp
rcl
lods
loope
mov
icebp
scas
jbe
pop
push
jmp
add
movsbw
jmp
add
pushl
pusha
movb
lea
jmp
lea
jne
sub
shl
lea
mov
cmc
btr
sub
call
not
call
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
cmc
jmp
xchg
add
lea
jl
push
lea
jae
clc
cmp
je
push
lea
jae
pushf
cmp
pusha
movl
jmp
push
stc
stc
mov
dec
not
mov
movsbl
cmp
test
mov
test
je
cmc
or
jmp
pushl
lea
jb
jmp
mov
mov
mov
pusha
pushl
ret
lea
jnp
not
push
lea
call
pushf
pushf
bt
cmp
cmp
jmp
mov
mov
or
cmp
sarb
fiaddl
push
ret
cmpsb
out
push
mov
push
loope
jno
inc
mov
int3
xchg
les
push
repnz
test
sahf
shr
inc
shll
mov
xchg
insl
mov
imul
jl
pop
sti
adc
les
dec
leave
into
inc
outsl
lea
je
mov
pop
pop
inc
cmp
jecxz
mov
lret
xchg
sbb
add
or
imul
pop
pusha
or
repz
jmp
mov
cmp
cltd
in
adc
jle
das
aas
aaa
insb
push
push
inc
xor
xor
fisubs
mov
dec
inc
je
mov
aad
in
enter
iret
or
push
insl
jno
sbb
jne
sbb
ret
mov
jmp
sub
sub
stc
cmp
insl
loope
cmp
filds
mov
mov
cmp
mov
mov
loopne
mov
hlt
fcom
add
call
sbb
sahf
adc
adc
cmp
imul
inc
loope
pusha
mov
ljmp
in
out
pop
jl
shrd
mov
test
push
lods
test
inc
mov
xor
cwtl
fstpl
mov
sub
xchg
and
cld
and
fildl
rcl
les
sbb
ret
jae
cmp
filds
mov
dec
cmpsb
shlb
cmp
int3
fdivl
inc
sbb
cmp
cld
clc
data16
xor
in
adc
test
jmp
sbb
scas
inc
push
stc
dec
pushl
out
push
repnz
in
lahf
decl
pop
pop
pop
adc
mov
test
fildl
dec
lods
test
cltd
jmp
aas
ffreep
fsub
mov
roll
cld
cs
cmp
cmp
ja
cmp
sbb
adc
and
inc
xor
pop
dec
fstps
pop
stos
div
push
repz
lods
mov
cltd
in
xor
ds
xor
dec
hlt
cmp
mov
dec
cmp
into
xchg
dec
fcmove
fsts
dec
sbb
mov
cmpsl
je
ljmp
cmp
outsl
sub
sbb
cmp
jns
xor
outsl
inc
cmpb
stos
rcr
jle
ss
popa
push
sub
push
cmpb
iret
push
mov
fisubs
ljmp
insl
or
sub
sar
adc
out
pushf
fdivp
mov
mov
scas
cmp
mov
xchg
loop
cmc
sbb
mov
ffree
enter
pop
imul
sahf
jae
mov
xchg
lods
lock
fadds
mov
insl
fisttpll
rcr
loopne
int3
xor
cmpsl
mov
aas
fs
adc
push
push
testl
pop
lret
xchg
into
outsb
bnd
out
out
daa
js
push
inc
xchg
hlt
mov
jmp
ss
in
std
inc
leave
jnp
jl
or
daa
rolb
add
dec
gs
aad
mov
dec
fcompl
loopne
inc
cmpl
xlat
imul
push
push
cli
ror
fsts
push
mov
fs
and
jae
push
xchg
stos
out
or
test
sbb
cmp
dec
jo
adc
lcall
push
arpl
dec
gs
and
or
push
jnp
jbe
inc
test
pminub
daa
rclb
mov
mov
and
jno
mov
jne
mov
or
push
stos
inc
inc
movsl
std
add
xor
std
pusha
pusha
clc
cld
fistps
arpl
cmp
xor
ljmp
pop
lret
push
imul
cld
scas
mov
or
xchg
je
mov
into
and
mov
jne
cmpsb
fcmovu
fdivrl
loope
xchg
jno
clc
test
fwait
repnz
nop
mov
int3
jge
sarb
cmp
les
sbb
ss
sub
iret
and
mov
mov
in
and
or
mov
mov
push
shrb
js
adc
fcoms
pop
mov
cltd
jb
sbb
and
cmp
lock
mov
in
js
into
roll
inc
pop
sub
popa
fwait
mov
es
jbe
cmp
ja
xchg
daa
xor
mov
cmp
inc
es
sbb
popf
lret
dec
sarl
rorb
pusha
pop
sbb
roll
lds
icebp
dec
inc
movsl
loope
add
xchg
xchg
hlt
or
sbb
xor
bound
jae
xorb
adc
jl
inc
inc
loop
out
pop
jb
aaa
fstpl
cltd
inc
mulb
sbb
lock
popa
popf
hlt
das
mov
shlb
and
mov
enter
and
int3
inc
aas
inc
cmpsb
mov
adc
push
mov
dec
mov
das
push
pop
inc
inc
in
ljmp
mov
test
orb
xchg
js
adc
lret
jne
or
mov
mov
out
hlt
push
fdivrs
jbe
jle
dec
ss
xchg
mov
aam
cli
cmp
insl
ss
xchg
in
mov
pop
arpl
fdivrl
cmp
cmp
sub
cwtl
in
arpl
movsl
or
add
movl
pop
add
mov
lret
xchg
clc
pop
imul
outsl
pop
mov
xlat
jo
mov
insb
int3
push
lret
movl
loop
inc
lcall
out
jmp
adc
xchg
mov
shll
jae
out
or
cmp
ljmp
int
jle
int
stos
ljmp
adc
jmp
push
jb
es
fs
into
mov
pop
sub
dec
jmp
add
xor
lea
je
cmp
xor
ss
aaa
outsb
or
pop
out
loop
outsb
xor
cmpsl
stos
mov
jp
scas
mov
cmpsl
xor
mov
call
jne
mov
and
adcl
xchg
mov
add
negb
jl
daa
dec
lret
out
cmp
into
mov
mov
mov
and
ja
fsubrs
push
mov
sub
aad
and
mov
cmpsl
call
add
push
mov
adc
mov
jae
pushf
add
sbb
or
push
popf
xchg
jbe
or
xchg
push
stos
mov
push
or
mov
decl
repz
mov
cmp
dec
rorb
dec
push
mov
daa
rclb
stos
scas
lods
mov
rol
int3
les
mov
sahf
and
push
sub
jl
pop
aaa
inc
nop
mov
cmp
mov
jno
ret
es
jae
imul
outsb
inc
into
scas
repnz
mov
pop
mov
into
std
stc
cltd
mov
sbb
inc
xchg
cli
mov
inc
in
push
in
popf
xor
pop
les
addr16
mov
bound
xchg
mov
imul
xor
jecxz
xor
vpsraw
into
add
dec
in
in
or
adc
jmp
int3
shlb
aam
ja
dec
dec
jne
xlat
or
xchg
xchg
scas
pop
pop
push
adc
dec
mov
repz
add
pop
pop
std
movsl
mov
push
jle
icebp
sub
outsl
pusha
aam
and
pop
movhps
push
xchg
test
jb
jbe
nop
mov
xchg
add
jns
and
dec
mov
push
jns
push
insl
jns
sub
neg
call
ja
mov
xchg
cmpsb
fiaddl
and
xchg
ss
scas
jmp
inc
xchg
dec
inc
and
stc
pop
cmp
lods
loope
adc
xor
fsubs
add
push
or
lods
js
ret
je
int
push
xor
xor
pop
inc
xchg
mov
lea
mov
add
insl
pop
jb
pop
sbb
adc
scas
ds
sti
pop
test
push
inc
pop
lea
mov
int
test
dec
mov
loopne
push
js
repnz
int
int
or
mov
cmpsl
push
inc
mov
lret
xchg
sub
add
add
pop
js
sbb
fst
stos
aam
xchg
ljmp
arpl
sar
shrb
mov
add
cmpsl
sti
sbb
ret
aas
xchg
xor
rol
mov
outsl
movsl
loope
add
inc
dec
xor
push
jb
xchg
rcll
xchg
adcl
jp
inc
mov
ficoms
out
out
cltd
test
es
push
bound
mov
sti
out
out
out
or
fnstcw
sarb
and
pop
pop
sar
or
fcompl
push
inc
cmp
stos
sbb
sbb
adc
pop
and
int
into
lret
inc
cmpsb
push
popa
dec
out
call
in
iret
mov
in
pop
addr16
nop
out
jmp
inc
and
lret
pop
pop
jge
dec
add
lcall
lds
and
xlat
pusha
mov
cmpsb
ret
in
insb
add
fstp
jnp
fdivrl
data16
xchg
scas
lods
outsb
push
popf
adc
loope
push
fdivrl
mov
xorb
xchg
out
imul
add
xor
xlat
jl
adc
inc
icebp
pop
out
push
lds
push
movsl
mov
push
mov
xchg
loopne
or
jge
add
xlat
or
inc
or
and
pop
or
push
lcall
pop
jbe
jg
fdivs
in
ror
mov
pop
out
das
pop
mov
clc
or
jle
in
jnp
pop
mov
js
lret
pushf
jo
cmp
stos
add
enter
adc
push
mov
mov
in
adcb
jmp
decl
aaa
jnp
in
out
xor
aam
jp
stc
icebp
xor
xlat
inc
mov
jae
stos
lahf
xchg
mov
fwait
cmp
icebp
add
outsb
mov
aam
adc
leave
mov
xor
dec
test
pop
mov
out
ljmp
aas
rclb
in
movsl
push
inc
jnp
mov
mov
xchg
js
jb
cmpsl
mov
sub
insb
dec
orb
xor
jg
xor
push
fs
sbb
pop
pop
mov
jnp
into
pop
jmp
mov
fcmovbe
push
mov
fistpll
int
dec
aas
jae
push
insl
xchg
inc
out
lret
adc
mov
shl
and
and
imul
and
outsb
xchg
xchg
repz
jg
push
add
inc
call
xchg
mov
das
test
gs
icebp
add
aas
shrb
movsl
inc
mov
das
insb
ret
sti
xor
xor
lret
scas
jp
in
dec
dec
or
push
fcmovu
js
pop
adc
popf
lods
in
out
loopne
and
insl
pop
clc
in
pop
add
push
mov
push
icebp
shll
mov
sub
outsb
into
mov
mov
and
mov
insl
sti
mov
jae
jns
test
test
ret
sahf
push
gs
clc
xchg
stos
out
cld
xchg
notb
scas
repz
xchg
jns
xchg
lahf
aaa
mov
faddp
outsb
jle
movsb
test
fists
sbb
dec
cltd
cld
or
sub
add
aam
jae
jnp
subb
sbbb
dec
dec
leave
outsb
lret
test
xchg
test
pop
insb
mov
sahf
fnsave
lret
ret
icebp
sub
push
add
arpl
stos
in
gs
ljmp
insl
jp
stos
stos
add
pop
push
mov
subb
jb
cwtl
fbld
fs
xchg
push
and
out
loopne
jns
aaa
or
push
cmc
cmc
lods
sbb
and
and
and
cs
add
aaa
xchg
imul
inc
mov
gs
lods
push
mov
sbb
pop
and
pop
repnz
out
loop
jge
sbb
adc
aam
fadds
ja
das
mov
stc
dec
sbb
and
sub
push
cltd
fxch
scas
stos
or
and
xchg
movsl
pop
mov
loop
jns
fmul
and
popf
cwtl
cmp
mov
in
and
dec
clc
js
or
movsl
and
out
rorb
sahf
jb
jp
fcomp
cltd
stc
les
xchg
shr
pusha
mov
out
das
fstpt
je
jge
push
je
sub
lods
add
pop
insl
sbb
hlt
test
out
shrl
sub
xor
repz
rcrb
into
shrb
ljmp
pop
adc
push
dec
je
pop
mov
dec
or
lock
pop
cld
push
add
add
push
sub
jno
aam
lods
clc
inc
fwait
jge
outsl
loope
jns
in
lcall
mov
adc
mov
mov
and
push
repnz
add
push
mov
push
xchg
sub
mov
cmp
cmp
ret
pop
shlb
mov
test
iret
mov
in
sahf
lock
pop
stc
jno
xchg
in
clc
push
mov
mov
std
and
dec
scas
cmp
mov
in
daa
add
scas
fcmovne
ret
ror
addr16
scas
fidivrs
test
mov
fidivrs
pop
or
dec
jmp
cltd
and
xlat
push
ret
rclb
jp
int
push
in
xor
xchg
xchg
lods
jnp
repnz
jge
movsb
leave
hlt
test
jmp
dec
push
dec
stc
add
shlb
jae
add
js
cmp
shlb
fisttps
arpl
sbb
andl
mov
ret
inc
imul
xchg
and
jp
add
mov
jbe
push
xchg
stos
loopne
ss
insb
pop
repnz
and
es
push
arpl
jnp
sub
sub
cwtl
lahf
xchg
frstor
push
xchg
adc
inc
dec
fwait
xor
xchg
int
mov
ljmp
add
ficompl
mov
hlt
jo
sar
cmc
and
cld
mov
call
mov
jb
movsb
pop
shlb
mov
std
add
push
cltd
or
pop
pop
xchg
mov
fsubrs
cmc
cmp
adc
push
dec
jecxz
lcall
clc
jo
sub
test
jb
test
test
outsl
jnp
inc
mov
lea
data16
lock
aas
jle
imulb
xchg
mov
pusha
push
rol
sti
sti
fwait
repz
rcrl
data16
mov
clc
int3
repnz
lea
lea
fdivl
in
loope
dec
xlat
imul
push
cmp
mov
mov
jmp
nop
aad
cli
jle
xor
jae
xlat
and
movsb
leave
dec
aas
ljmp
iret
outsl
mov
xchg
xor
out
mov
jb
lcall
lretw
inc
push
xchg
or
divb
fs
out
cld
add
daa
sbb
and
je
cwtl
sbb
push
push
out
jp
popa
je
inc
in
clc
nop
mov
and
clc
mov
dec
repz
push
sahf
push
lock
xchg
or
lods
mov
xchg
mov
negb
push
es
mov
cltd
ljmp
ror
mov
xchg
or
push
arpl
dec
scas
aas
dec
out
pusha
pop
outsl
arpl
mov
adc
ret
xlat
and
xlat
aaa
pop
xor
jmp
daa
cli
movsl
movsl
enter
xchg
out
repz
jnp
and
imul
out
dec
add
jae
sahf
or
xchg
scas
xchg
mov
cwtl
cmp
ret
ror
sub
lods
mov
push
jnp
jbe
inc
les
push
mov
test
cwtl
ja
test
add
cmp
daa
insb
cmp
into
xchg
out
or
pop
mov
out
sarl
jecxz
jecxz
andb
cwtl
movsl
push
pusha
mov
inc
xchg
mov
in
push
out
add
mov
ret
mov
adcb
mov
roll
mov
sub
push
gs
jmp
dec
add
push
js
js
dec
addr16
clc
inc
mov
mov
adc
add
clc
pop
pop
mov
adc
adcb
jmp
pop
pop
cmpsl
test
cmpsl
xchg
xchg
inc
retw
fsubrl
ficoml
icebp
xchg
pop
cltd
and
inc
dec
dec
outsl
addr16
shl
inc
cmpsb
out
js
stos
xlat
outsb
push
inc
xchg
jl
pop
inc
inc
fstp
mov
movsl
cltd
cmp
lock
or
int
mov
pop
sahf
push
inc
dec
dec
or
and
jno,pn
jno
jne
cmp
idivb
pushf
jae
sub
xor
fisttps
sbbb
ret
add
dec
or
push
stos
jmp
mov
sbb
push
dec
out
out
cmp
mov
mov
jns
loop
fst
adc
add
int3
jecxz
test
cld
aas
fidivl
push
aas
mov
and
outsb
fstps
jo
mov
push
jg
les
cmp
xor
or
adc
ficomps
mov
jne
lods
sbb
rcrb
and
out
sbb
fcmovnbe
dec
mov
xchg
sub
mov
lret
jge
dec
cmpsl
and
sub
jle
pop
xorps
pop
popa
pop
mov
pop
lods
push
sahf
cli
rolb
js
out
out
cmp
test
pop
inc
jg
jp
cld
cmpsb
addb
iret
lock
push
dec
out
sar
fs
push
xchg
test
idiv
sub
cmpsl
pop
jecxz
push
scas
ret
sbb
ljmp
scas
and
jecxz
fnstenv
out
out
push
sub
mull
cs
rcrb
cmp
inc
lea
sti
and
inc
xor
enter
stc
cmp
ss
mov
pop
addr16
xor
mov
jecxz
icebp
ss
imul
fldenv
ret
movsl
mov
adc
inc
mov
sub
outsb
outsl
clc
push
inc
sub
xor
add
fistl
test
sub
push
into
xchg
or
hlt
push
decl
inc
jecxz
adc
enter
outsl
adc
loop
ja
addb
push
and
insl
test
int
lods
cli
in
stos
mov
jb
xchg
enter
mov
inc
lock
cmpsl
mov
inc
repz
out
sti
dec
inc
and
shl
shrb
test
mov
das
mov
adc
iret
lret
div
negb
cmpsl
mov
xchg
lahf
lcall
xchg
mov
mov
clc
setp
jg
mov
or
jo
fwait
push
xchg
jl
lea
rcll
xchg
sahf
inc
movsb
outsl
adc
cltd
out
popa
mov
pop
imul
push
testb
push
adc
add
addr16
push
cmp
sbb
lahf
xor
ret
xchg
movsb
mov
out
loope
repnz
mov
mov
test
push
xchg
mov
dec
daa
cwtl
and
sub
aaa
push
popa
bound
mov
push
xchg
mov
cmp
out
les
sbb
ss
imul
call
fwait
pop
adc
ss
and
nop
in
iret
mov
fxch
fisubrs
ja
aas
sub
test
or
xor
push
jo
mov
jmp
gs
push
mov
sbb
inc
cmp
movl
push
int
push
xor
aas
cmp
cltd
sbb
xorb
fimull
jo
dec
inc
and
aam
clc
push
mov
std
loopne
roll
daa
sbb
push
lret
stc
dec
pop
push
movsb
mov
cwtl
std
or
arpl
jbe
dec
pop
adc
cltd
aad
jns
scas
mov
cmp
mov
testb
cltd
fs
push
adc
mov
xchg
fwait
xchg
insb
fs
orl
xor
loop
cmc
je
dec
sbbb
repnz
hlt
and
lcall
addb
lods
iret
addr16
cmp
mov
mov
lds
pop
cmp
in
jecxz
fcmovnb
mov
pop
push
lahf
push
push
ljmp
sub
xor
push
cmp
lret
stc
mov
outsl
mov
rorb
pop
mov
push
sbb
and
push
aas
jo
sub
pop
stc
popa
pop
cmp
int
rclb
mov
add
cmpsl
int
in
mov
cli
cmpsb
pop
or
or
inc
jmp
enter
lods
sar
out
sub
or
xor
adc
call
or
xor
push
xorb
sbb
cs
pop
imul
adc
dec
fidivrl
scas
pop
and
xor
repz
popa
aaa
xor
mov
add
pop
mov
xlat
daa
inc
pusha
mov
push
adc
roll
dec
sti
ja
fadds
dec
bswap
das
outsl
pop
jnp
into
add
mov
xor
mov
xchg
filds
pop
sti
inc
call
ds
adc
filds
lahf
ja
aaa
xchg
xchg
enter
pop
mov
mov
sub
lret
out
sub
dec
pop
nop
sbb
adc
pop
dec
mov
or
shrb
push
lahf
sarb
mov
add
aaa
pop
pop
mov
in
xor
push
fimull
dec
stos
mov
push
mov
push
mov
js
test
repz
jnp
test
pop
jae
dec
les
push
stos
inc
pop
bound
lcall
and
les
xor
ds
dec
jmp
pop
fdivrs
cmp
xchg
insb
fnstsw
in
pop
fistl
fadd
lods
and
out
test
or
lahf
pop
mov
lock
jecxz
push
push
jne
mov
stc
insl
je
cwtl
xchg
rcrb
sub
sbb
mov
adc
mov
mov
push
sub
sti
lret
dec
out
mov
lea
je
xchg
xchg
push
shrd
cmc
add
ror
sub
shrd
bsr
shr
shl
mov
not
xor
jmp
add
popa
add
mov
add
add
add
add
add
or
add
add
add
add
pushl
popl
clc
cmp
call
push
dec
push
add
mov
mov
jecxz
jae
ret
stos
out
ljmp
adc
nop
and
lds
push
adc
mov
sbb
sub
orl
sbb
stos
pop
and
dec
imul
sbb
stos
loop
fs
jae
bt
test
pusha
cmp
movw
call
pushf
movl
movb
pushf
mov
push
push
mov
pushf
pushl
ret
cmpb
pushf
pushf
pushl
call
rep
not
mov
mov
lea
jmp
cmpb
push
call
movb
movb
pusha
lea
call
call
aad
enter
pop
push
push
stos
xchg
cli
repnz
cmpsb
ficoml
repz
incb
mov
lcall
xlat
jg
lahf
stos
mov
jbe
adc
mov
pop
jae
or
xchg
stos
jle
mov
jp
sbb
das
pop
push
xchg
out
data16
push
or
pop
imul
and
dec
xor
imul
pop
loopne
mov
push
mov
jo
fadds
lret
mov
xor
ljmp
enter
rcrb
popa
fcompp
or
add
test
in
nop
hlt
or
ja
in
or
push
sti
rorl
dec
and
jmp
jmp
sub
pushf
mov
cmc
and
movb
add
lea
cmp
bt
add
pushf
pushl
dec
call
call
bt
neg
clc
stc
clc
test
mov
call
stc
pusha
sub
pusha
cmc
bt
test
cmp
push
jmp
pusha
pushf
push
lea
jmp
xor
and
mov
sub
jg
shll
mov
sub
add
clc
out
movsl
add
add
inc
test
addb
mov
pop
jmp
add
clc
nop
in
add
add
cmp
and
mov
cli
enter
aaa
add
mov
add
inc
test
dec
leave
and
mov
xor
push
mov
and
mov
mov
cmp
mov
mov
xor
mov
mov
mov
mov
test
daa
mov
xor
mov
push
mov
filds
and
mov
mov
xchg
and
mov
scas
or
ret
cmp
sbb
popa
add
add
jo
js
and
or
fiaddl
bound
push
aaa
add
clc
jp
out
dec
aaa
add
jne
dec
add
and
mov
dec
roll
and
mov
mov
aaa
add
jb
inc
mov
aaa
add
adc
add
add
popa
push
test
add
add
add
push
xor
mov
push
loop
subb
mov
iret
and
out
and
mov
push
jnp
popa
sub
add
pop
xchg
addl
add
jo
aaa
dec
push
and
mov
add
mov
cmp
aaa
add
adc
cmp
and
mov
scas
mov
arpl
xor
mov
xchg
pop
inc
out
add
pushf
sahf
sbb
pop
into
push
dec
out
cmpb
test
lock
movb
pusha
pushw
popfw
mov
inc
jmp
mov
pusha
not
sets
call
cmc
cmp
jmp
pushl
lea
ja
bt
imul
bt
cmp
clc
push
add
mov
movb
lea
jmp
call
pushf
test
pushl
lea
je
cmc
add
test
cmp
push
mov
movb
pusha
lea
jb
call
xor
cmc
sub
cmc
bt
pusha
clc
not
test
cmp
shr
movb
lea
je
call
ja
stos
std
sbb
aas
xchg
packuswb
or
mov
out
aaa
jl
fwait
data16
fdivrp
dec
mov
out
xchg
pop
es
mov
sbb
push
dec
scas
xor
cmp
inc
jmp
jne
mov
or
inc
and
lods
or
and
adc
mov
call
jns
int3
cld
sbb
mov
shrb
add
xor
push
or
inc
std
addb
cli
jge
sarl
pop
mov
scas
mov
xor
jne
and
or
pop
mov
add
cs
loop
stc
out
insb
xchg
ja,pt
call
mov
repz
aas
shl
scas
adc
push
pop
pop
cmpsl
sbb
push
jb
std
sbb
mov
mov
ja
fisubl
xchg
popf
xor
sbb
ficomps
inc
xor
add
inc
add
gs
mov
push
arpl
pop
rdpmc
lret
mov
add
icebp
xor
dec
sbb
xchg
mov
fcoml
push
hlt
cmp
mov
mov
sbb
fs
out
jecxz
das
sub
mov
roll
cld
sbb
iret
ja
out
mov
mov
jne
mov
lods
shrl
push
adc
fisttpl
xchg
ja
or
jbe
fidivl
in
repnz
mov
cmp
sarl
sub
xchg
ss
repnz
adcl
fdivl
add
push
popa
orb
or
add
sar
mov
stc
sets
ror
pushf
mov
shr
bsf
stc
pushl
mov
jmp
sti
aad
cld
sbb
loopne
cmpb
subb
sub
movsl
jg
pusha
lock
or
into
lods
loope
adcb
jbe
xor
imul
cs
ljmp
and
cltd
sbb
mov
sahf
cmp
std
add
aas
xor
mov
jg
insb
mov
cmpsb
loopne
in
push
jne
add
adc
xchg
pop
jnp
pop
movsl
filds
mov
cmp
shll
cmc
adc
sti
sbb
jp
sub
mov
and
jg
jo
sbb
repz
sti
pop
out
inc
mov
push
dec
sbb
fcomps
jnp
xchg
adc
sub
ret
pop
popa
lods
shll
in
adc
cmp
aam
adc
sbb
test
sub
mov
jmp
loope
daa
inc
notl
inc
dec
inc
das
pop
das
or
pop
ret
lods
cld
jns
push
sahf
in
fldl2t
in
nop
push
inc
mov
and
addr16
mov
fdiv
nop
in
sbb
inc
dec
fdivl
outsl
shr
dec
jmp
clc
test
bt
cmp
jmp
push
call
pushf
mov
movw
movb
push
movb
pushl
ret
lea
jne
shrd
or
lahf
lahf
xor
rcr
bsf
test
rcr
mov
shl
rcr
cmp
shr
add
sub
mov
pusha
test
pushl
call
push
jmp
rolb
sub
jo
inc
clc
cmpb
shrl
and
inc
cmp
jecxz
inc
jmp
xlat
dec
and
jnp
pop
lcall
addb
aas
and
mov
les
test
mov
shl
pusha
adc
sub
mov
fs
shlb
cld
xor
imul
data16
dec
fwait
and
mov
loopne
xchg
dec
mov
sbb
adc
pop
out
cmpsl
lahf
inc
mov
movsb
das
scas
aaa
shll
sbb
mov
add
lahf
inc
in
sbb
dec
and
incb
enter
shlb
shr
adc
mov
jp
out
jns
push
add
fnstenv
mov
cmp
pop
xchg
mov
das
sbb
out
arpl
lods
aam
sarl
test
pop
sti
push
loop
pop
into
jo
dec
out
sbb
into
pop
pop
inc
and
lods
cltd
push
lods
mov
jmp
lea
ja
push
jmp
xor
xchg
cmp
pusha
bswap
xchg
btc
mov
xchg
mov
add
pushl
pop
bsr
mov
pusha
xchg
mov
shl
not
jmp
shlb
add
push
pop
out
pop
outsl
aaa
dec
fidivs
sub
mov
fwait
dec
pop
roll
cli
sbb
dec
out
dec
hlt
clc
roll
mov
es
lret
js
xlat
in
aam
cmp
ss
dec
andl
mov
cmp
push
xor
scas
lahf
and
mov
or
mov
inc
inc
and
sub
cmp
adc
in
loopne
push
cld
mov
adc
inc
and
sbb
push
ss
jbe
xchg
or
ret
push
ss
fdivl
sbb
or
jg
out
test
pop
out
xchg
cld
mov
movsb
xchg
sub
fwait
xor
xchg
jge
xor
int
push
or
jae
in
and
pop
jl
cmp
pop
xor
xlat
xchg
mov
sbb
xchg
add
jl
cmp
aam
sub
rcll
dec
xor
jg
repnz
negl
mov
icebp
dec
icebp
cltd
loope
add
mov
add
frstor
or
lea
push
mov
adcb
gs
xor
hlt
and
mov
sbb
dec
pop
outsl
fwait
jae
and
decl
shll
jle
arpl
and
loope
cld
fildl
js
int3
sbb
cmp
sbb
aad
mov
imul
or
dec
inc
xor
sbb
sbb
adc
mov
hlt
lods
xchg
addr16
xor
xlat
jae
xor
inc
fildll
jno
pop
cltd
fdiv
xchg
or
or
cld
stos
fisubrl
clc
aam
arpl
mov
ret
addr16
dec
pop
sub
fmull
lea
jne
push
mov
call
xlat
cld
or
sbb
cmpsl
sahf
inc
out
ss
cmc
int
ds
repz
xchg
fistpll
add
cmpsb
lods
out
jns
gs
aas
inc
cmpsl
in
pop
mov
imul
test
add
sub
movsb
es
movsl
jnp
stos
cmp
jo
cwtl
xor
popa
cmpsb
add
mov
jge
mov
mov
push
xchg
sub
pop
or
cmp
test
sub
pop
mov
sbb
das
negb
mov
lods
xor
adc
xchg
out
fistps
daa
arpl
sub
cltd
jle
daa
xchg
in
js
mov
loopne
nop
xchg
into
and
cmp
shrl
and
adcl
aaa
fwait
sbb
stc
sbb
test
adc
test
fmull
dec
stos
push
and
scas
mov
loope
jl
out
sub
daa
lcall
outsb
and
jecxz
cmpsb
iret
testl
add
jecxz
cmc
sbb
inc
fistl
mov
insb
adc
ror
jb
jmp
int3
mov
cs
gs
imul
in
pop
inc
pop
mov
fs
in
inc
addl
mov
imul
adc
adc
lahf
jmp
cmpsl
jmp
hlt
cmpsl
imul
mov
ja
test
pusha
lea
jae
stc
cmp
call
shl
rol
mov
ror
sar
test
sbb
mov
test
clc
pusha
cmp
repnz
jmp
repnz
pusha
mov
pushf
jmp
mov
not
mov
call
pop
xchg
push
sbb
xor
xor
inc
das
add
add
insb
inc
sub
and
pop
ja
popf
cmp
pop
dec
adc
sub
fldenv
push
cld
shrb
pop
aaa
sbb
push
repnz
xchg
cmc
sbb
mov
xchg
mov
or
push
hlt
inc
xor
push
je
lds
xor
sub
int3
shrl
inc
gs
rorl
mov
cmp
xor
lods
stc
push
rorb
cmpsl
out
sti
filds
test
gs
mov
fisttpl
xchg
data16
repnz
or
xor
mov
and
lea
jb
jmp
out
or
pushf
insb
and
push
jnp
pop
push
pop
mov
inc
jp
mov
push
jnp
push
shll
pusha
dec
outsb
xchg
bound
mov
mov
in
imul
push
aas
mov
jne
xor
dec
inc
inc
movsb
ficoml
push
push
rolb
dec
inc
js
mov
ss
lret
xlat
dec
bt
jnp
repz
scas
adc
dec
incb
mov
pusha
lea
jb
call
movl
call
pusha
mov
pop
mov
push
lea
jmp
movl
lea
jne
clc
mov
lea
sub
bts
shrd
shl
btc
mov
test
cmp
sub
clc
pushl
bt
cmc
clc
cmp
jmp
pushl
cmc
pushf
pushl
popl
cmc
clc
jmp
bt
stc
pushl
cmp
movb
push
pushl
lea
ja
push
jmp
mov
dec
repz
popa
cwtl
add
lock
cmp
mov
stc
cs
push
mov
xchg
cmc
outsl
jo
gs
leave
cs
inc
add
mov
cs
xor
or
xor
orb
in
stc
cmpl
xchg
pop
dec
lock
test
adc
je
cmp
enter
aaa
sti
in
push
pop
add
mov
mov
aad
decl
sbbb
add
je
and
and
pushf
xchg
call
stc
cmp
jmp
pop
cmp
repnz
mov
inc
out
pop
aad
aas
icebp
es
cmp
test
add
pop
lock
cmp
or
ret
mov
pop
lock
insl
icebp
les
cmp
mov
xchg
shll
inc
sub
fucomip
adc
roll
gs
cwtl
cmp
cmc
cmc
pushf
test
cmp
push
lea
ja
pushf
dec
pusha
setge
inc
jmp
cmc
call
fidivrs
add
sbb
sbb
or
cmp
pop
jecxz
and
jecxz
fwait
xor
ljmp
lretw
add
xor
cmp
adc
pop
imul
sbb
dec
pop
aas
cmp
cmp
andl
mov
lea
mov
mov
mov
dec
xchg
enter
out
neg
cmp
add
add
scas
lds
cs
mov
adc
cmp
mov
add
mov
pop
cmp
icebp
sbb
push
pop
xchg
push
jle
mov
jbe
lods
imul
lea
cmp
ljmp
jmp
or
mov
sbb
cs
jo
call
push
cmp
ja
and
or
push
jns
ja
lea
fstl
add
or
inc
cmp
push
xchg
mov
pushl
pop
add
add
sbb
or
not
mov
shr
sar
mov
jmp
lea
jne
movzbw
bswap
movb
movzbw
push
movsbw
push
movsbw
bswap
lea
pushf
push
movl
pushf
jmp
lea
je
pusha
stc
sub
call
bsr
movl
stc
movsbl
mov
sub
cmp
test
cmp
pusha
mov
pushf
pusha
lea
jbe
call
dec
outsl
jge
sbb
mov
jg
das
xchg
out
mov
iret
or
mov
mov
sbb
pop
dec
ret
cmp
shl
xchg
aad
cld
pop
jae
lcall
andb
lds
mov
pop
rcll
lods
imul
movsl
in
popa
es
push
iret
or
inc
aas
in
mov
rcrl
loope
test
jo
cwtl
cmp
mov
inc
ss
enter
jnp
sti
shr
inc
hlt
push
add
mov
sarl
cmp
jmp
dec
xor
adc
add
icebp
popf
ljmp
js
pop
inc
insl
or
cltd
dec
fbld
fcompl
mov
stc
mov
mov
xor
sahf
leave
shrl
outsl
flds
pop
js
jns
push
pushf
dec
and
in
out
pop
xor
jecxz
lret
mov
dec
xchg
adc
dec
fs
mov
jbe
inc
test
xlat
mov
sbb
adc
addr16
cmpsb
xchg
pop
sahf
rolb
mov
out
mov
jmp
test
adc
neg
mov
clc
pushf
mov
shrd
shr
mov
mov
cmp
sub
pusha
mov
rep
lea
mov
pushl
lea
jmp
mov
movsbw
call
aad
call
movsl
sub
arpl
jecxz
sbbl
ret
add
out
inc
fistps
add
aad
int
dec
xor
xor
xor
ja
pop
inc
mov
jle
lcall
notb
xchg
dec
push
cmc
mov
xor
mov
test
rcll
ds
fcmovne
push
xor
and
pusha
sub
nop
das
das
mov
repz
sub
loop
xchg
movsl
fdivrl
repz
sbb
nop
pushf
pushf
push
pushf
lea
jb
pushf
bt
cmp
pushf
lea
jae
call
repnz
call
pusha
pusha
lea
je
call
push
cmc
clc
stc
sub
mov
mov
test
push
btr
push
inc
push
jmp
mov
xor
test
inc
mov
cmp
pusha
cmc
mov
bswap
jmp
pushf
push
mov
lea
je
push
push
push
pushl
adc
mov
movw
mov
pusha
lea
jmp
lea
jne
movzbw
pushf
shrd
sub
movsbw
stc
aaa
mov
neg
or
add
shl
cmc
mov
bt
pushl
pushf
test
call
lods
xchg
lahf
in
sbb
test
in
add
sub
stc
loop
or
cmpsl
mov
xchg
jo
cmp
mov
pop
jmp
xchg
or
mov
add
xchg
in
pop
shlb
sub
cmp
dec
test
sub
sub
dec
jne
jo
shll
nop
pop
loope
adc
stos
cmpsl
jp
mov
cltd
in
loopne
cwtl
lods
inc
lea
out
mov
mov
pusha
pusha
push
movb
lea
jmp
ss
imul
int3
movsb
lods
inc
mov
xchg
jnp
mov
mov
sub
daa
ja
xchg
dec
jb
mov
xchg
fsubrl
adc
jl
repnz
xor
inc
xlat
pop
ljmp
aaa
rcrl
push
mov
scas
adc
mov
loop
lret
or
repnz
push
jb
cmp
mov
jb
into
fcmovnb
jbe
inc
movb
lea
jae
test
cmp
call
in
in
imul
sbb
lret
xor
sbb
fiaddl
add
xor
fwait
addr16
adc
mov
push
aas
daa
pop
mov
jecxz
mov
sbb
dec
adc
std
jnp
ja
int
ret
pop
cli
sub
mov
lds
cmpsb
push
mov
mov
stc
inc
aam
pop
daa
adc
fxam
stc
jbe
stos
sub
xchg
sub
in
insl
decb
sbb
dec
clc
ror
rcl
jp
negb
adc
pop
push
ds
mov
add
cmp
cmp
add
pushf
cmp
mov
mov
lea
jb
stc
call
je
stc
push
pusha
add
bt
stc
push
cmp
push
movw
lea
jb
pusha
call
push
pushf
pusha
lea
jb
pusha
movb
push
pushf
pushl
ret
mov
movsbw
setg
movzbw
lea
mov
movzbl
not
mov
mov
jmp
and
jmp
mov
sbb
imul
mov
or
andl
mov
fwait
out
subb
std
leave
xor
add
fistps
ret
add
adc
popf
inc
cs
mov
imul
ret
mov
pop
ss
stos
xchg
xlat
fistpll
dec
add
ja
jg
test
jl
fdivl
mov
adc
adc
sbb
out
movb
sub
push
and
pop
dec
aaa
push
pop
fisubrl
mov
push
shrb
sbb
cmpsb
popf
fwait
xchg
xchg
out
jle
cmp
adc
adc
inc
add
cmpb
jecxz
mov
cltd
cmp
movsb
ljmp
cli
xor
push
fsubr
lcall
add
cmp
icebp
mov
insl
loope
mov
lods
sub
fidivl
sub
add
mov
shrl
pusha
call
stc
pushf
jmp
mov
mov
sbb
lahf
addr16
cmpsb
pop
es
scas
push
inc
lcall
subb
xchg
or
inc
gs
adc
sbb
fwait
repnz
inc
xlat
jae
and
add
xor
movsb
in
mov
jmp
and
push
sbb
ljmp
xchg
dec
adc
or
arpl
sub
dec
jns
je
mov
inc
lods
xorl
adc
add
mov
mov
pushf
stos
push
movb
pusha
lea
jmp
push
nop
lcall
fists
pop
cmova
incb
dec
mov
push
in
orb
fistpl
jns
push
lea
cltd
mov
push
dec
movsb
addr16
ficoms
ds
mov
scas
jno
sbb
mov
scas
lret
inc
add
fiadds
neg
push
cmpsl
xor
imul
push
mov
and
inc
adc
adcl
push
mov
call
out
jbe
mov
push
out
and
mov
mov
daa
inc
adc
mov
dec
lcall
push
gs
cltd
testb
inc
and
mov
inc
mov
add
and
mov
mov
dec
add
repnz
lea
je
pushf
pusha
movb
lea
jne
lea
bswap
ror
mov
movzbw
add
or
lea
sub
lea
mov
pushf
sub
cmc
test
bt
pushl
popl
pushf
pushf
cmp
pushl
jmp
call
mov
cmc
fcoml
movsb
mov
mov
clc
stos
lret
push
adc
dec
inc
fisttpl
lcall
lods
push
insb
cmp
mov
add
mov
imul
insl
push
lds
lods
mov
popa
xchg
faddl
gs
call
inc
stos
jb
icebp
or
test
rcl
movl
cmp
cltd
and
inc
push
bound
repnz
sbb
jle
adc
shlb
jg
and
dec
lods
shl
in
mov
sbb
lahf
ljmp
and
lea
jge
call
push
call
movw
lea
jne
push
pusha
pusha
movl
mov
jmp
add
dec
outsl
arpl
inc
jb
gs
cmc
cmc
pusha
pushf
movzwl
call
and
btc
jmp
fsubp
icebp
in
mov
push
push
push
incb
faddl
loop
push
icebp
jno
push
out
cmp
ficoml
arpl
gs
loope
sbb
sbb
mov
add
icebp
in
cmpl
hlt
mov
dec
lcall
add
dec
mov
mov
test
lock
sub
sbb
in
scas
mov
fcmovu
loope
lods
add
add
sub
xor
call
sar
lret
shl
mov
bt
cmpb
call
pushf
stc
mov
sub
jg
bt
cmp
cmc
add
pusha
pushf
test
pushf
call
pop
xor
add
add
add
pop
aaa
add
aas
aaa
add
pop
and
dec
push
aaa
add
adc
add
add
add
cli
add
sbb
push
aaa
aas
ficoms
jb
shrl
jb
jg
scas
xor
cwtl
fdivrs
cld
mov
push
shrl
mov
and
shll
scas
es
mov
sub
movsl
ret
mov
push
insb
mov
scas
cltd
enter
and
mov
addb
dec
sbb
shlb
pushf
push
popf
insb
stc
pop
sbb
test
or
inc
stc
jmp
push
lea
jne
push
mov
test
pushf
call
jae
pop
in
mov
mov
test
dec
movsb
pop
and
push
fidivs
mov
mov
ror
clc
aam
lds
mov
data16
stos
cmp
and
jge
sub
movsb
lock
pop
cltd
lret
sbb
daa
cmovbe
or
or
inc
pushf
pop
pop
aam
cs
sbb
pop
mov
sub
jg
sub
mov
fs
jne
movzbw
movsbl
movb
mov
push
cwtl
lea
call
sbb
mov
sub
xor
adc
fs
sbb
jne
sub
je
pusha
addl
and
push
or
and
mov
rorb
fs
pop
cmp
shll
ret
inc
frstor
adc
jp
cmp
lock
xor
out
ffreep
scas
into
inc
adc
repnz
mov
sub
fs
mov
std
int3
addl
xchg
mov
dec
cmc
ror
pushf
pushl
neg
jmp
mov
pusha
push
movb
pushl
ret
and
ja
sbb
test
sbbb
push
cmp
adc
jns
subl
push
push
dec
in
xor
push
cmp
add
pop
cltd
and
add
pop
popa
je
insb
add
js
setno
jp
or
in
icebp
jmp
sbb
cmp
imul
pop
xor
cmpb
cmpb
mov
inc
add
sub
add
jmp
cmp
scas
add
mov
pop
cmp
imul
push
sub
sbb
std
or
jno
push
jmp
xchg
sahf
int
adc
insl
sub
mov
xorl
push
ss
cmc
hlt
loop
mov
jnp
jp
jmp
xor
dec
and
mov
sbbl
out
jg
shll
cmp
ljmp
sub
push
int3
ret
add
add
inc
fs
in
xor
movsb
roll
sub
clc
push
inc
mov
mov
aam
ds
inc
stos
in
sbb
call
mov
aam
fwait
sub
mov
push
mov
mov
loope
rcll
scas
sbb
cmp
sub
lea
not
call
sub
adc
sbb
mov
test
pop
jg
outsl
cmp
sbb
cmpsb
cmp
ss
sbb
ret
subl
shrb
subl
push
nop
scas
and
fs
pop
jle
fbld
test
data16
xor
fnstcw
push
or
mov
adc
inc
enter
movsl
ficoml
repnz
mov
ret
sub
lcall
popf
sbb
xor
scas
xor
sbb
jl
fdivl
aas
arpl
dec
aad
jno
leave
adc
sbb
pusha
shlb
inc
jmp
sti
push
push
icebp
lods
cltd
decb
mov
imul
test
jns
stc
je
sahf
add
mov
lret
mov
mov
mov
fwait
xchg
imul
lods
add
mov
or
jp
dec
or
iret
outsb
xchg
bnd
jno
adc
mov
in
dec
sub
out
add
cli
sbb
dec
push
adc
movsb
or
enter
dec
push
nop
cmp
imul
jg
mov
cmp
jb
and
add
xor
or
dec
and
imul
jle
push
sbb
je
jbe
pop
scas
sub
inc
nop
insb
mov
aam
in
xor
movsl
adc
cltd
mov
sbb
cmp
icebp
mov
lds
lea
add
pop
pop
mov
xchg
mov
stc
int
pushf
pusha
adc
pushf
movb
push
lea
jmp
cmc
call
push
lea
jl
mov
push
push
lea
jmp
out
pop
sub
repnz
icebp
cmp
and
fs
sub
scas
test
sub
jo
mov
movntps
push
out
mov
mov
test
jle
sub
stos
into
xor
sub
fdivl
out
imulb
pushf
lea
ja
shl
and
rcr
sub
bsf
call
lea
jne
shrd
adc
sub
pushf
pushf
inc
mov
shl
rcr
setbe
add
dec
cmc
stc
mov
stc
push
call
cmc
cmp
pushf
pusha
pushl
lea
ja
pushf
inc
setle
mov
call
xchg
push
pushf
call
fadd
iret
ficomps
mov
in
xchg
stos
xchg
lret
jecxz
inc
dec
cmpl
push
xchg
daa
cs
adc
dec
sbb
cmc
mov
inc
jnp
jbe
cmc
dec
jmp
add
sbb
push
and
int
push
xor
xchg
or
aas
jg
daa
dec
jmp
push
pop
ds
outsl
jmp
pop
ret
test
ficomps
mov
jnp
cmp
sti
and
orb
loopne
ds
adc
jnp
insb
clc
fnsave
bound
and
aas
mov
inc
adcl
sub
cmpsl
or
jb
fisubrl
xchg
mov
sbb
outsb
push
jl
or
stc
sbb
add
mov
inc
and
mov
in
stos
add
jmp
ljmp
inc
ss
xchg
push
idiv
adc
cmpsl
push
jle
jle
outsb
mov
scas
cs
loope
lods
cmp
push
gs
lahf
movsb
or
pop
inc
inc
add
jle
shll
or
xor
test
push
dec
cmpl
fcompl
sub
jno
shlb
xlat
add
inc
mov
cmc
sbb
cmp
mov
cs
mov
dec
data16
push
test
shrl
sub
sbb
adc
ficomps
mov
mov
xchg
mov
add
mov
xor
xchg
cltd
rcll
cli
xor
mov
adc
into
add
mov
std
sbb
test
popf
add
pop
push
push
xchg
jno
dec
or
sub
pop
in
push
jmp
adc
mov
repz
cmp
pop
xor
mov
sbb
es
mov
movsl
mov
fmulp
repz
cmpsl
xchg
push
pop
inc
xorl
fcmovb
cmp
aaa
pusha
cmp
pop
xchg
mov
and
xor
adc
xor
loope
es
mul
jnp
cmpsl
dec
sbb
pop
ss
xchg
mov
jns
xor
push
cli
fimull
jnp
push
fwait
push
gs
fiadds
arpl
inc
shll
adc
movsl
jmp
dec
xor
jecxz
cmpsb
cmp
movb
lea
jne
cmc
mov
btr
cmc
adc
sub
test
btc
mov
cmc
sub
cmp
call
clc
add
cmp
clc
test
call
movl
call
movb
lea
ja
clc
rcr
cmc
jmp
int3
adc
fcompl
mov
hlt
dec
mov
les
sbb
cli
repnz
push
aad
fnstenv
inc
push
fildll
dec
xor
andb
or
dec
xchg
mulb
and
push
scas
shlb
in
dec
jbe
xor
inc
imul
xor
mov
fiaddl
inc
inc
cmpsb
push
mov
add
int3
pusha
test
pop
lock
sbb
xlat
ljmp
out
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jne
jmp
mov
call
push
movl
push
pushf
pushf
lea
jmp
call
mov
mov
cmpsb
pop
sahf
push
dec
es
push
inc
fldcw
rolb
in
add
sub
add
pop
jb
out
mov
pushf
sahf
arpl
into
sar
sub
pop
or
mov
or
dec
mov
leave
lcall
mov
mov
mov
inc
adc
push
inc
sbb
call
add
ja
call
push
mov
push
out
push
mov
in
push
sbb
sub
outsl
shlb
pop
out
inc
sub
mov
pop
xchg
pop
add
mov
cmp
pop
addr16
adc
cmp
and
mov
cmpsl
cltd
add
inc
push
mov
jns
pop
repnz
les
pusha
in
cwtl
or
xor
ret
pop
pop
mov
jb
mov
js
fs
lock
lea
ja
push
pushl
pushl
lea
jmp
pusha
pusha
movb
lea
jle
call
push
pusha
pushl
pushf
adc
pushl
jmp
sub
pusha
cmp
call
inc
mov
inc
or
cld
add
add
stc
push
jnp
lret
mov
add
push
out
push
xchg
push
xchg
dec
push
in
jp
cmp
mov
mov
out
push
xchg
mov
lods
xor
inc
mov
rcr
ss
test
adc
out
and
enter
mov
mov
pop
cmpsb
push
ss
push
sub
mov
inc
mov
test
test
push
sbb
add
inc
rcrb
loope
inc
rol
add
ljmp
movq
shr
cltd
enter
sub
loope
mov
dec
sbb
push
sbb
dec
dec
movsb
inc
xor
push
dec
stc
sub
ret
out
stos
outsb
lret
aaa
dec
je
lcall
cs
pop
neg
in
jl,pt
add
or
mov
push
add
loope
mov
shl
push
roll
jl
fsin
int
push
out
jnp
cwtl
std
mov
ss
mov
lcall
movsl
stc
std
and
rcrb
insb
cmp
in
add
test
cmc
sub
call
pushf
rep
pushl
mov
push
pushf
push
pushl
lea
jmp
pushl
lea
jne
aaa
xor
bswap
inc
mov
rcl
add
push
and
stc
mov
push
stc
jmp
sub
pushl
jmp
movb
cmpb
push
push
pusha
lea
jne
rol
das
cmp
xor
add
aaa
test
mov
xor
and
jmp
adc
inc
fstps
mov
lods
mov
pop
shrl
pop
mov
push
add
adc
jne
scas
shrb
or
push
cli
dec
movsl
mov
xor
imul
xor
cltd
insl
enter
xor
inc
sub
je
xor
shll
sbb
xor
push
or
and
xchg
ret
aas
pop
pop
mov
sbb
mov
push
cli
outsl
fildl
and
pop
arpl
mov
mov
and
cmp
aaa
loopne
and
out
cltd
pushf
out
iret
sub
sub
xchg
lds
add
xlat
push
and
or
mov
jle
test
sub
movsl
ljmp
fisttpl
pop
in
test
mov
xor
lret
pop
sub
sarl
xor
pop
jns
mov
sub
bt
stc
jmp
cs
insl
fcomps
mov
dec
jb
xchg
or
rorl
fs
lcall
xchg
xor
push
pop
mov
pop
mov
loopne
add
pop
mov
push
popa
shl
pop
test
popf
xchg
push
xchg
shll
jns
jp
fisttpll
in
das
rcll
cmp
leave
clc
leave
into
das
stos
scas
sub
cld
movd
subb
mov
and
jno
loope
ss
inc
jg
cmp
xchg
cltd
jge
sbb
sbb
cmpl
dec
adc
mov
ljmp
cmpsl
jg
sahf
jbe
push
pop
es
mov
mov
repnz
cmpb
add
pusha
hlt
cmp
inc
adc
mov
inc
cmp
shll
xchg
pop
lods
fs
out
push
xor
cmp
in
xchg
fcmovnbe
ret
jb
dec
cmp
xchg
imul
or
aam
xor
clc
stos
out
xor
mov
stc
xor
das
repnz
sbb
push
test
mov
loopne
sbb
jg
jmp
mov
push
cmp
cmpb
movb
mov
lea
jne
cmp
add
or
bsr
xor
push
rcl
cwtl
mov
call
jmp
call
push
xor
sbb
cmpsl
das
outsl
daa
pop
ds
sahf
mov
sarl
xlat
mov
xor
inc
dec
ss
inc
cmc
testl
ljmp
dec
lret
sub
jns
add
psubsw
sysenter
lds
pop
or
je
ljmp
inc
mov
push
xchg
sbb
fcoms
jl
push
data16
lahf
mov
lret
shr
movsl
repnz
in
clc
ret
test
dec
data16
fists
dec
or
mov
popa
mov
jmp
xor
seta
cli
rcll
fdiv
push
sbb
jb
mov
mov
das
dec
les
pop
insb
mov
push
adc
daa
cmp
or
xchg
push
bound
or
and
or
jo
fs
scas
sti
ds
pushf
lea
je
stc
pushf
jmp
push
xor
aad
mov
mov
jp
fisubl
mov
push
les
pop
jno
cmp
sbb
leave
gs
bound
cmp
cli
ja
inc
idivb
sub
and
lcall
mov
test
lock
test
test
xchg
jb
push
push
push
popa
aad
mov
mov
xchg
insl
aad
in
push
adc
xchg
fmull
push
pushf
xchg
mov
inc
cli
sbb
inc
pop
pushf
xchg
lock
bound
mov
pop
fdivrl
fcoml
aaa
ja
lcall
xchg
pop
leave
repz
jnp
mov
outsl
jnp
inc
xlat
ficompl
es
push
cmpsl
mov
push
lea
jne
shl
mov
mov
mov
push
bt
sbb
sub
sub
shld
ror
lea
pusha
sub
stc
jmp
andl
jno
popa
or
dec
jo
mov
aas
out
lret
mov
pop
out
je
imul
jbe
xlat
in
jne
cmp
adc
repnz
std
inc
push
stc
inc
inc
and
xchg
jno
rcll
dec
sar
lcall
shlb
xor
fsubrl
jmp
adc
fwait
movsl
repnz
daa
das
fwait
es
or
ds
mov
xor
push
ljmp
lretw
and
add
inc
sahf
int
insl
test
lea
add
cmp
movzbl
mov
dec
mov
bt
call
sub
pusha
call
jge
nop
aam
mov
or
je
aam
je
add
loope
inc
push
pushf
lcall
pop
shlb
jl
iret
dec
addr16
xor
fidivrs
es
arpl
scas
dec
xor
cmc
test
dec
insb
mov
fisubs
ret
jle
cs
xchg
push
aad
or
add
mov
xchg
fldt
mov
addr16
jecxz
pop
mov
sub
icebp
fsubrl
sbb
cltd
rcrl
mov
mov
mov
out
jbe
xchg
jl
cld
fsubs
cmp
pop
lcall
add
mov
clc
movsb
jge
lret
clc
mov
ficomps
mov
stc
imul
adc
push
and
test
xchg
and
and
fstl
add
imul
cmpsb
lods
js
loop
lods
adc
jo
call
add
add
call
call
call
into
in
not
sbb
mov
mov
xor
mov
int3
add
or
fwait
xchg
sbb
imulb
xor
imul
lret
pushf
dec
jp
movsl
pop
leave
dec
inc
inc
sarl
dec
dec
jle
jbe
ss
ds
cmpsb
or
adc
jp
cmpl
lods
roll
mov
stos
mov
xchg
mov
pop
cmp
inc
adc
inc
jg
xchg
mov
mov
push
pusha
cmc
cmc
dec
fsubrs
adc
je
movsb
mov
stc
icebp
jo
mov
cmp
cmc
jge
or
xor
adc
xchg
lods
push
scas
movsl
ror
bound
insl
or
mov
push
adc
loope
mov
jbe
or
push
cltd
aaa
cmpsl
cld
mov
cmp
push
aaa
cmp
jl
fmull
sbb
cmp
push
jmp
pushf
pushf
lea
jae
push
mov
clc
mov
btr
mov
pushf
pushf
sub
pushf
call
call
shlb
dec
fidivl
push
aaa
push
mov
pop
adc
pop
sub
repnz
dec
push
pop
pop
adc
and
test
ficompl
cmc
popa
orb
je
aas
shlb
orb
repnz
iret
mov
mov
push
lds
repnz
pusha
push
das
pop
adc
out
dec
sbb
movsl
sub
jecxz
push
packssdw
out
dec
lcall
mov
mov
mov
sbb
aas
fstpt
mov
xlat
in
push
jle
pop
aas
mov
inc
incl
lea
lea
movzbw
mov
pop
movb
call
not
inc
push
inc
inc
dec
inc
dec
shl
inc
xchg
setge
rol
aam
bsr
mov
shr
jmp
pusha
pusha
repnz
jmp
test
test
mov
lea
je
pusha
jmp
pop
jl
rcrb
mov
popa
sbb
stc
jno
shrb
pop
or
daa
dec
xor
or
xchg
out
into
cwtl
pushf
xor
ret
mov
int3
fdivr
dec
test
daa
cmp
andb
popf
mov
mov
lea
je
test
sub
cmp
jmp
pusha
mov
pusha
push
call
pop
icebp
push
rcrb
mov
mov
inc
int3
test
test
rcrl
scas
aas
test
adc
femms
movsb
lret
sbb
mov
add
mov
mov
jno
mov
cmpsb
sbbl
sub
pop
inc
leave
or
xchg
pop
lea
pop
das
addr16
repnz
sbb
lahf
out
out
xchg
jmp
inc
jmp
push
fcoms
and
addb
cmp
cmp
pushf
ret
out
xor
js
sbb
lods
fs
cmp
jmp
push
sub
jle
mov
push
dec
push
out
sbb
les
sub
mov
cli
mov
adc
jns
xchg
inc
inc
add
mov
sbb
scas
inc
scas
xchg
pop
ss
push
mov
aas
push
adc
rol
cwtl
pop
push
or
push
ret
rclb
jge
cltd
repz
inc
fwait
in
arpl
pop
xor
inc
das
pop
scas
jae
sub
and
lcall
fdivrl
jl
pop
sbb
jg
inc
iret
sbb
jno
adc
mov
rorb
jo
jb
xor
adc
scas
cwtl
inc
push
adc
sti
push
stos
mov
inc
inc
sbb
fsubrs
mov
inc
mov
std
fidivrs
jg
scas
add
adc
dec
arpl
out
daa
xor
jnp
jecxz
mov
sub
pop
adc
mov
in
cli
int
mov
ffreep
das
das
scas
push
pop
jbe
decb
xor
jmp
mov
aad
gs
loop
jg
feni(8087
inc
xchg
inc
inc
sbbb
fidivrl
lods
xor
sbb
jno
call
pop
inc
shll
clc
fs
inc
xchg
pop
loope
cmp
outsb
aad
js
push
dec
fldcw
pop
out
movsl
fcmovnbe
mov
pop
jae
jge
jmp
jecxz
lcall
sbb
mov
or
jp
mov
mov
and
shll
insb
arpl
add
gs
add
cli
mov
add
data16
fidivrs
insl
fs
cmp
jo
cmpsl
sub
sbb
or
ret
pop
jecxz
cmp
mov
in
mov
push
bound
ljmp
inc
int3
mov
outsb
dec
insl
xor
jge
sahf
insl
sbb
mov
mov
inc
inc
and
addl
fs
jmp
push
jmp
push
lea
jne
xchg
pop
push
jmp
cmc
mov
or
call
add
cwtl
cmp
inc
sbb
js
xlat
fidivrs
mov
int
sbbb
push
test
stc
xchg
dec
rcrl
aad
pop
adc
int
mov
pop
pavgw
mov
leave
aam
pop
and
inc
arpl
je
jge
fildll
adc
enter
adc
js
nop
ja
xchg
mov
arpl
mov
leave
scas
sti
adc
mov
cld
aam
adc
push
mov
inc
pop
dec
fidivrs
mull
jbe
xor
jno
clc
mov
fimuls
inc
xchg
ret
fadds
sti
daa
mov
fs
movsl
sbb
icebp
popa
and
sub
mov
add
pop
jmp
pop
scas
xchg
mov
ljmp
ss
in
push
sahf
and
nop
mov
in
xor
jno
data16
and
adc
mov
mov
lret
mov
dec
jb
pop
loopne
add
lcall
stos
inc
adc
ret
cmpsl
xchg
jle
mov
sub
mov
cli
xor
popa
xchg
mov
out
mov
xor
xchg
jmp
jl
sbb
arpl
popf
test
and
push
mov
hlt
or
clc
int3
mov
fistpl
dec
aam
adc
push
add
push
adc
stc
xor
stc
sub
pusha
pushf
push
movb
xor
push
sub
call
xor
pushl
movb
dec
push
cmc
ror
mov
jmp
cmp
pusha
mov
test
cmpb
push
call
sub
call
lock
mov
sbb
jle
dec
xor
pop
movsl
jno
sub
mov
cmp
movsl
lods
mov
jnp
or
sbb
cld
xchg
rolb
leave
pop
inc
fisttpll
sub
clc
shll
outsb
or
xchg
shll
add
sub
adc
lahf
cmp
lock
sub
out
adc
push
cmp
icebp
sbb
pop
mov
addr16
push
mov
and
fidivrl
inc
xchg
cmp
xchg
and
cmpsl
icebp
div
mov
leave
sbb
cltd
adc
test
jg
jg
sub
scas
mov
rclb
cmovp
or
dec
gs
out
lds
stos
mov
arpl
sbb
stos
cmp
mov
cmp
pop
dec
jp
movsl
add
mov
inc
mov
mov
cmpsl
add
bound
xchg
outsb
mov
sub
mov
xor
pop
push
mov
mov
cmc
lea
movsl
pushf
fdivrl
mov
inc
leave
add
cli
sti
jbe
fidivrl
jnp
scas
and
loop
mov
je
mov
add
jmp
xor
cmpsb
inc
out
mov
mov
jb
adc
mov
mov
stos
jle,pt
or
pop
mov
vpaddsw
and
jns
call
das
fisttps
pop
fisubs
insb
and
jmp
push
push
lea
jne
not
mov
jo
pusha
cmc
push
add
pusha
cmp
movzwl
bsf
mov
call
pusha
call
add
leave
sbb
mov
sarb
adc
repnz
mov
in
push
adc
fucomp
les
xchg
cmp
pop
popa
sti
pop
ja
jno
int3
or
push
cltd
shrb
dec
mov
fnstcw
push
pop
cld
xor
push
and
xchg
incl
cwtl
mov
lea
jae
setge
lahf
lea
push
movb
jmp
sub
sar
movzbw
lea
clc
cmc
sub
movw
pushl
popl
pushf
jmp
pop
push
pusha
leave
sbb
insb
aam
les
and
movsl
or
xchg
sahf
data16
mov
jle
dec
xor
push
inc
add
gs
shll
out
insb
xchg
ss
push
xchg
jmp
or
and
fcoms
or
iret
dec
mov
jecxz
addr16
sbbl
push
push
jb
jmp
adc
push
add
xor
cmp
add
pushf
push
lea
jmp
push
push
jmp
dec
icebp
aam
repz
push
loopne
cmp
out
inc
repz
jno
and
arpl
cmovle
mov
es
icebp
push
bound
lock
push
stc
jo
adc
in
repnz
outsb
mov
into
sub
test
jmp
jo
cmp
mov
sbb
mov
pop
movsl
shr
div
imul
dec
arpl
jp
mov
cld
fnstcw
ljmp
nop
dec
push
outsb
pop
mov
leave
repz
and
loopne
repz
call
xchg
iret
dec
sub
cwtl
jecxz
dec
cwtl
mov
add
push
pop
idivl
mov
shll
dec
xor
jbe
mov
add
mov
iret
or
std
lock
cmp
sub
mov
mov
cmp
lea
mov
adc
jo
push
mov
lods
xchg
inc
or
inc
outsb
iret
icebp
lods
pop
jmp
popf
xorb
fmuls
mov
icebp
jne
and
rcrl
addb
fcompl
push
sahf
xchg
inc
mov
scas
xchg
mov
aaa
mov
mulps
and
repnz
ret
testl
mov
out
add
cltd
cmp
mov
xor
or
xor
add
sbb
out
push
adc
sar
mov
push
push
pushf
sub
mov
mov
jmp
mov
stc
int3
adc
fdecstp
dec
leave
and
dec
iret
dec
rclb
popf
inc
pop
sarb
clc
and
dec
icebp
call
pop
cmpsl
add
lock
push
push
pop
inc
add
cwtl
xor
ss
call
inc
sbb
outsb
inc
sbb
test
mov
mov
int3
test
jae
repnz
fcoms
mov
and
sbb
dec
or
xchg
dec
mov
and
dec
adc
jecxz
cmp
push
sbb
call
ja
xchg
xchg
xchg
outsb
cs
pop
popl
les
fwait
scas
test
jg
test
cmpb
add
mov
or
xor
insb
mov
and
dec
xchg
adc
fdivs
jg
jmp
inc
comiss
push
dec
repz
inc
std
jmp
test
pop
call
jl
sub
xchg
aam
out
sub
mov
mov
push
sbb
cmp
sub
mov
push
mov
dec
sub
addr16
push
cmp
lcall
sti
xchg
icebp
pusha
and
icebp
sub
push
pop
xor
scas
or
push
add
or
sub
dec
bound
fisttpll
xor
xchg
mov
scas
sub
dec
jecxz
or
inc
subl
mov
adc
xor
mov
jno
xchg
dec
lds
or
mov
mov
or
mov
scas
sub
jl
icebp
or
insb
dec
add
rcrb
mov
test
test
imul
or
mov
jg
push
adc
or
cmc
jns
dec
jp
or
or
call
or
pop
outsb
xor
or
les
push
or
sub
das
popa
addl
popa
and
adc
sub
or
jbe
jmp
push
ja
or
mov
jno
inc
adc
mov
bnd
fwait
dec
mov
push
adc
adc
dec
xlat
cli
xchg
xor
mov
out
mov
mov
icebp
adc
lods
sub
dec
subl
test
or
xchg
pop
mov
or
cltd
std
xor
mov
or
dec
les
sbb
lods
pushf
rcrl
lahf
jno
orl
mov
push
mov
sbb
add
adc
mov
inc
outsl
push
icebp
sub
mov
jno
adc
insb
or
out
adc
add
adc
adc
dec
xlat
outsl
xor
jno
pop
jl
or
cmpsl
or
mov
enter
mov
push
adc
movsb
iret
mov
add
adc
mov
mov
mov
dec
pop
arpl
mov
flds
adc
dec
pop
push
mov
mov
mov
inc
adc
jne
test
sub
dec
or
cmp
inc
dec
fisubrl
mov
mov
mov
sahf
add
repnz
sub
dec
jge
adcb
dec
mov
mov
add
adc
mov
and
aaa
sbbl
xor
int
dec
into
imul
decb
leave
add
add
adc
int
xor
rorl
or
or
repnz
or
or
dec
mov
or
fmull
adc
adc
adc
mov
imul
xchg
add
aam
mov
rcll
mov
jno
add
repnz
adc
rorb
dec
aaa
rorl
in
or
dec
adc
adc
dec
jmp
mov
ret
adc
or
dec
imul
jecxz
jnp
or
in
inc
enter
in
clc
add
mov
or
loopne
mov
inc
loope
ficompl
loop
mov
jno
add
repnz
inc
std
or
dec
push
decb
out
je
or
clc
add
mov
add
repnz
jp
repnz
or
dec
sub
or
cs
sahf
cmp
ljmp
repnz
adc
repz
dec
ss
les
add
ja
jb
cmpsb
add
repnz
or
dec
jl
or
add
orb
cmp
adc
adc
dec
in
bound
add
pop
orl
adc
inc
outsb
mov
cld
sbb
sbb
dec
sbb
push
push
adc
xor
add
repz
cmp
mov
jno
add
cmp
add
cmp
fwait
adc
repnz
adc
dec
mov
jle
test
mov
add
repnz
adc
or
dec
fwait
das
or
sub
push
mov
notb
pushf
sub
push
and
mov
pop
mov
or
add
add
add
add
adc
adc
xor
into
mov
fnsave
repnz
or
dec
sub
xor
push
xor
push
mov
jns
sbb
mov
jno
add
repnz
sub
dec
int
aaa
dec
add
jge
adc
adc
dec
dec
scas
or
dec
mov
popa
dec
jno
add
adc
inc
adc
insb
rorb
sti
dec
sahf
inc
or
int3
mov
pop
popl
rolb
mov
add
add
sbb
fmull
fs
cmp
xor
icebp
jle
icebp
dec
push
icebp
push
push
repnz
adc
repnz
insl
repnz
hlt
dec
mov
repnz
jno
pusha
lock
dec
add
and
xor
dec
xor
loopne
dec
loopne
jg
sub
cwtl
or
popf
imul
push
push
enter
adc
and
pusha
loope
repnz
jl
xor
dec
or
xchg
fnstcw
icebp
sbb
adc
or
sbb
das
mov
add
jmp
sub
sbb
js
and
ljmp
mov
add
sbb
repz
or
sahf
test
dec
jb
jl
inc
mov
sub
mov
add
loopne
mov
loope
cs
lret
dec
lea
add
popl
testl
mov
jmp
xchg
jo
fiadds
call
fldl
enter
sub
push
xchg
or
sub
jo
pop
sbb
repz
adc
mov
and
enter
sbb
xor
xor
rcrl
popf
adc
add
adc
adc
sahf
adc
lahf
dec
bound
xor
jno
pop
js
scas
sbb
lcall
adc
xchg
dec
jnp
mov
dec
pop
xchg
pop
rorb
mov
add
repnz
sub
or
push
repz
addb
dec
loopne
xor
loope
adc
pop
sub
or
jno
adc
xor
xchg
dec
xor
inc
dec
push
movsl
mov
jno
add
repnz
ret
cmp
pop
test
mov
xor
push
popf
mov
xorl
sbb
mov
sbb
shlb
fadd
adc
in
loope
fisubl
add
popa
in
jo
addl
notb
mov
or
mov
add
icebp
inc
mov
dec
sbb
adc
jmp
inc
or
mov
sub
and
mov
inc
mov
adcl
mov
repnz
les
or
movb
mov
dec
push
pop
sub
xor
pop
mov
adc
inc
iret
sbb
outsb
cwtl
add
push
sub
adc
sbb
xor
or
xor
loopne
or
jo
lret
add
mov
es
or
jnp
jo
xchg
lds
xor
rorl
and
flds
add
cld
add
xor
dec
sub
xor
inc
enter
scas
adc
dec
out
xor
push
xor
jne
in
dec
cli
mov
faddl
jmp
jbe
mov
adc
adc
fists
push
fmuls
mov
popa
push
mov
icebp
mov
icebp
add
repnz
dec
mov
or
rorb
or
rorl
jb
in
sub
jo
out
jno
mov
movsl
out
or
call
icebp
ljmp
xor
insl
xor
test
and
jo
loopne
mov
data16
xor
icebp
cmp
repnz
cmp
loopne
xor
dec
lret
push
fcoms
xor
pop
add
repz
or
adc
call
mov
stos
add
adc
cli
or
popa
pop
sti
icebp
icebp
hlt
mov
repnz
test
aaa
int3
scas
roll
mov
jno
add
sbb
or
dec
sub
inc
fmuls
xchg
push
or
or
adc
rcrb
add
adc
or
les
or
cmp
push
orl
mov
xor
sub
pop
enter
jo
popf
add
mov
xchg
sbb
call
or
adc
add
dec
jo
fisubl
js
xchg
cwtl
mov
or
icebp
sbb
sbb
insl
add
testl
sbb
pop
sbb
dec
loopne
xor
mov
mov
mov
pusha
add
and
or
mov
or
adc
dec
jecxz
xor
mov
scas
adc
jp
adc
mov
adc
adc
dec
cmp
xlat
sub
in
adc
xor
repnz
sub
dec
sahf
test
add
jno
mov
stos
sub
les
in
adc
inc
or
test
add
dec
fsqrt
mov
daa
rorb
jb
or
and
int
call
enter
xor
lea
adc
fwait
dec
repnz
imul
jg
mov
stos
cmp
mov
xor
aam
sbb
enter
popf
cmp
xchg
or
xor
push
cmp
clc
mov
xor
jne
mov
inc
bound
aaa
or
dec
js
or
xor
pusha
ja
fldcw
or
or
popf
mov
lret
das
js
add
das
mov
add
loop
incl
sub
rclb
sub
xor
xor
xor
mov
inc
jno
add
repnz
adc
insb
dec
or
dec
inc
jo
js
cwtl
mov
pop
push
fmuls
dec
mov
xor
push
push
or
mov
sbb
inc
jae
dec
sbb
cmp
aam
pushl
nop
pop
jno
add
pop
das
cwtl
mov
add
or
shl
jo
add
xor
enter
adcb
dec
std
or
pop
cmp
cs
popa
imul
push
add
fiadds
mov
inc
push
test
jno
add
sub
or
push
dec
push
lods
adc
test
add
mov
mov
push
inc
int3
push
loopne
sbb
filds
dec
cmpb
push
add
or
add
add
adc
test
cmp
test
pop
imul
sbb
loope
arpl
popf
scas
or
push
adc
fwait
adc
add
add
mov
pusha
or
popa
or
popa
cmp
arpl
ss
movb
xor
js
dec
jge
sbbl
jle
lldt
lods
sub
xor
bsr
fs
pop
js
push
or
xchg
mov
xchg
jp
loopne
jno
jo
je
pop
jbe
and
dec
sub
dec
shll
shlb
out
shlb
and
shlb
sti
adc
or
dec
jle
adc
xchg
adc
sub
mov
mov
adc
dec
ficomps
test
divb
adc
xchg
jae
inc
addb
or
jno
add
adc
dec
xchg
lret
mov
add
pushf
icebp
cmpsl
popf
bnd
dec
and
or
sub
sub
mov
repnz
in
mov
cltd
fwait
or
xchg
or
jg
fwait
dec
in
cmp
nop
fildll
xchg
or
push
lods
repz
test
xor
mov
aaa
mov
push
xor
lods
xor
in
scas
and
or
das
test
or
or
stos
add
ja
sub
adc
xor
cmp
movsl
adc
xor
aad
cmc
adc
push
repz
inc
pop
or
add
scas
or
shrb
sbb
sub
cmp
xchg
sub
dec
lret
mov
mov
stos
mov
sbb
cwtl
into
int
insb
les
fisttpl
or
mov
mov
pop
mov
or
pop
push
mov
sbb
add
inc
test
push
sub
xchg
enter
les
push
dec
and
push
or
sub
icebp
stc
adc
pop
adc
adc
adc
rorl
ret
ret
lret
or
adc
dec
cmpsb
jbe
fld
add
add
add
aad
popf
shl
repnz
xlat
or
dec
mov
flds
or
pop
mov
rorb
sub
add
add
adc
fs
or
dec
xchg
mov
call
lret
dec
pop
ljmp
jg
or
jb
or
mov
out
dec
add
or
push
incb
push
adc
adc
sahf
xor
mov
rorb
fistps
movb
cmc
repnz
adc
testb
hlt
mov
mull
adc
cmpb
lods
or
mov
jo
or
popl
int
iret
dec
cld
sarb
repnz
dec
xchg
or
int3
mov
or
add
dec
adc
push
adc
or
dec
fimuls
pop
mov
icebp
pop
add
inc
adc
or
dec
mov
jmp
pusha
add
or
pop
or
inc
add
adc
adc
xor
mov
jo
push
jo
pop
jno
add
adc
into
adc
adc
adc
or
hlt
adc
adc
cmpsb
add
add
gs
dec
jp
mov
mov
mov
sub
add
icebp
and
es
daa
out
or
or
push
dec
xchg
leave
dec
add
or
and
cwtl
mov
cmp
and
xor
mov
jb
push
adc
cmp
or
dec
fmuls
cmp
xor
mov
add
or
mov
xor
sahf
sbb
xor
insl
mov
add
adc
dec
or
dec
sub
mov
dec
dec
mov
jno
mov
pop
dec
or
add
xchg
and
sub
int
dec
iret
cld
xchg
jns
dec
mov
inc
add
or
mov
add
sub
dec
idivb
inc
jo
pop
jno
add
repnz
jmp
repnz
push
dec
sbb
sub
or
int3
cmp
bound
cli
mov
lea
adcb
dec
mov
loop
adc
push
or
and
or
icebp
add
stos
mov
or
or
pop
insl
les
push
jns
and
adc
jo
gs
add
sbb
and
cmpl
pop
jl
adc
mov
cmp
adc
idivl
jg
mov
out
adc
dec
orb
or
icebp
or
or
sar
adc
shl
and
inc
icebp
add
jnp
cld
or
sub
push
add
jne
adc
jbe
cmp
ja
mov
adc
xor
xor
or
add
mov
scas
add
inc
mov
xor
jno
ficoms
and
adc
mov
xor
mov
in
xor
xor
adc
or
inc
pushf
and
mov
popf
int3
jecxz
ret
sahf
or
cwtl
or
cltd
or
lcall
sub
adc
mov
dec
inc
rolb
xchg
fsts
fildll
or
inc
scas
dec
jno
mov
test
xor
stos
jno
add
jns
out
jnp
or
cmpsl
add
mov
cmp
mov
sbb
jo
mov
mov
mov
mov
sti
add
icebp
cmp
icebp
add
repnz
popa
jecxz
repnz
adc
repnz
repnz
test
repnz
or
adc
and
xor
testb
lret
dec
pop
fmull
push
mov
add
adc
fisttps
fmuls
daa
orl
jno
add
subb
mov
fildl
push
enter
aam
jg
lods
adc
aad
cmc
inc
xor
jae
xchg
shlb
add
adc
repnz
rorb
dec
jnp
movsl
dec
and
or
int3
testb
jge
adc
dec
lods
sub
out
cli
sub
dec
aad
xor
add
adc
adc
loop
xchg
int
cli
jecxz
xchg
cld
jo
std
jo
jno
adc
mov
jno
add
jo
or
dec
mov
rorl
or
xchg
mov
dec
into
add
addr16
mov
mov
add
mov
mov
mov
or
sbb
test
inc
add
mov
fs
mov
add
ja
enter
mov
or
xor
xor
sbb
adc
xchg
add
or
sbb
sbb
aad
pushw
jno
add
pop
repnz
dec
pop
sbb
testb
add
subl
mov
rclb
sbb
or
mov
popf
adc
sbb
adc
adc
bound
icebp
rolb
push
sub
sub
popf
sahf
adc
or
fmuls
test
dec
pop
cs
orl
mov
mov
jo
sub
sub
add
icebp
ds
jp
rclb
pop
and
sub
push
jge
mov
xchg
or
sbb
inc
cmp
jo
mov
lret
add
repnz
sub
dec
ds
or
mov
and
or
daa
loope
pop
adc
and
popl
adc
adc
ds
push
cwtl
xchg
aas
jno
add
filds
lea
sbb
cmp
pop
dec
jl
or
and
xor
fs
flds
and
ss
dec
clc
mov
aaa
or
add
pop
xor
or
adc
dec
pusha
mov
sbb
jno
add
addb
cmp
push
sub
dec
decl
popa
inc
pop
repnz
adc
int
inc
pop
icebp
jbe
bnd
xchg
add
push
or
mov
inc
push
or
push
or
push
int3
and
in
mov
push
add
cs
push
sub
dec
daa
insl
or
inc
outsb
add
subb
push
imul
arpl
ljmp
pop
dec
adc
lods
push
adc
pusha
cmp
rcrb
jg
mov
js
push
jp
mov
jnp
push
hlt
and
push
lcall
lods
add
add
mov
jo
dec
adc
cmp
xor
int3
mov
cmpb
mov
fsts
dec
mov
mov
inc
adc
scas
lods
or
xor
pop
xor
mov
loope
enter
or
xor
mov
or
push
xor
in
dec
mov
dec
int
and
into
or
jno
mov
jo
stos
dec
fdiv
mov
xlat
sub
std
adc
or
dec
mov
push
test
xchg
bound
mov
in
in
dec
incl
adc
adc
dec
fldt
cmp
jb
jno
add
pushf
repnz
adc
popf
insb
dec
or
dec
cmpsl
sahf
or
lahf
or
int3
dec
fs
adc
jns
fwait
add
leave
dec
in
test
add
or
xchg
or
xchg
add
adc
xchg
dec
xor
xchg
mov
clc
mov
xchg
jno
add
icebp
icebp
lods
repnz
lret
lea
scas
or
test
pop
test
stos
or
stos
add
movsl
sub
aas
mov
jno
or
mov
mov
aam
mov
mov
mov
mov
or
insb
mov
mov
fdivl
mov
mov
jo
mov
rorl
cmpsl
add
mov
ret
adc
mov
insb
int3
repnz
or
dec
lahf
subl
pusha
sbb
jge
or
push
cmp
cli
lret
lds
daa
push
out
orl
cmp
xor
sub
adc
repnz
sub
dec
mov
lds
fstpt
jo
jno
add
pushf
dec
cltd
in
mov
adc
adc
dec
xor
cs
adc
cmpl
ja
dec
mov
cmp
pop
test
js
jno
orl
sub
ficoms
sbb
or
call
pop
frstor
push
jns
rcrl
sbb
dec
xor
je
repnz
pop
push
data16
xchg
enter
repnz
pop
sbb
or
sbb
icebp
or
cwtl
inc
inc
xor
jne
or
lock
aaa
clc
dec
les
test
adc
out
dec
push
xchg
sbb
xor
inc
mov
jo
in
iret
shlb
mov
pop
adc
jmp
cmp
test
xchg
adc
or
dec
addl
in
nop
js
mov
loope
xor
int
or
dec
ror
sbb
call
dec
sahf
pop
adc
push
cltd
add
dec
sbb
lock
dec
or
or
mov
add
repnz
adc
adc
push
sub
insb
lods
or
adc
xor
in
sti
add
pop
repnz
adc
mov
or
adc
sub
sbb
push
sahf
cs
adcb
adc
adc
fbstp
clc
xorl
sub
dec
sbb
or
sbb
sbb
jge
xchg
xchg
dec
mov
popl
and
mov
clc
or
aas
and
inc
or
sub
or
shlb
or
mov
dec
sub
dec
int3
test
arpl
pop
cmp
adc
movsb
push
xorb
sbb
cmp
test
add
pusha
xor
subl
scas
or
xor
dec
je
or
adc
adc
xor
xor
mov
xor
dec
or
dec
cmp
mov
test
fsubrs
cmp
mov
subb
iret
sub
or
mov
jo
dec
test
mov
jno
adc
xor
xor
dec
inc
add
add
mov
pop
fstps
ror
add
add
and
sbbl
fs
leave
or
push
cmpsb
or
icebp
add
repz
or
adc
insb
xchg
or
mov
xor
adc
sub
daa
push
dec
mov
dec
push
dec
nop
xchg
repnz
and
cmp
dec
add
jmp
sbb
orb
insl
mov
or
add
bnd
push
push
jns
adc
imul
pop
mov
add
aas
pop
push
xor
jns
dec
test
gs
mov
dec
pop
icebp
add
adc
dec
jo
sub
jno
orl
xor
enter
cmp
jge
sbb
or
rolb
mov
lret
js
or
or
mov
js
call
mov
jp
or
ja
jns
dec
push
add
adc
int
jo
adc
mov
loopne
or
inc
push
adc
xchg
mov
or
lock
into
add
mov
js
mov
iret
arpl
orb
test
mov
sub
or
sub
dec
inc
cltd
mov
push
cs
or
dec
roll
popf
dec
add
pop
dec
daa
xor
sub
dec
mov
add
sahf
repnz
dec
das
cmpl
imul
add
mov
lahf
add
adc
jl
mov
cwtl
or
dec
in
push
inc
rorb
sbb
sub
jl
icebp
adc
stc
xchg
push
add
adc
adc
lcall
sbbl
or
adc
and
dec
addl
or
pop
dec
mov
inc
xchg
dec
cmpsb
or
xchg
outsb
mov
jp
xchg
dec
in
push
nop
add
adc
aaa
inc
mov
lds
or
xchg
dec
icebp
dec
mov
adc
lcall
jmp
or
cmp
dec
ret
inc
and
lea
pushf
add
adc
pushf
push
stos
lret
shrb
mov
and
adc
push
xchg
dec
pop
push
mov
shrl
pop
popa
insb
je
fwait
dec
test
mov
dec
icebp
mov
aam
shr
push
cmpsb
sub
mov
sbb
mov
xor
and
mov
push
out
mov
test
lods
add
shlb
adc
mov
xor
inc
xchg
add
sbb
mov
mov
dec
and
and
fisttpll
in
cs
cmp
dec
dec
inc
jmp
adc
les
adc
lret
arpl
dec
adc
data16
jns
faddl
add
repnz
iret
or
adc
enter
push
leave
add
ljmp
or
and
add
sub
adc
mov
sub
or
and
popa
dec
ret
add
rolb
or
pop
faddl
js
pop
fcomps
inc
or
sbb
icebp
rorb
and
xor
je
xor
pop
mov
xchg
sub
dec
loopne
or
add
add
fcomps
repz
push
adc
push
add
dec
rorl
sub
inc
sbb
jae
or
dec
mov
mov
pop
inc
or
adc
and
or
sub
sbb
or
inc
aad
dec
add
cmp
int
rorb
add
mov
popa
in
cmp
sbb
xchg
sbb
dec
dec
mov
pop
mov
sub
inc
or
je
xchg
and
call
fs
popa
push
jae
mov
sub
lret
rcrb
ficompl
sbb
insl
push
push
jno
loope
cld
sub
pop
dec
inc
sbb
rcrl
clc
and
lahf
adc
mov
push
insb
jnp
sbb
fwait
mov
mov
cli
ja
inc
andb
inc
dec
ds
xor
mov
test
daa
push
xchg
and
pop
test
out
loopne
mov
out
pusha
outsl
mov
pop
ss
sbb
jle
mov
and
stos
cmp
bound
pop
pop
inc
jno
test
inc
or
ja
and
jl
sbb
sbb
mov
in
fiaddl
cmpsl
in
rol
les
das
sti
fs
loop
scas
mov
sub
dec
mulb
das
push
xchg
xchg
sbb
mov
inc
test
int3
dec
adc
add
inc
into
jbe
xor
cwtl
add
and
lods
movsb
es
mov
sub
mov
mov
push
cmp
add
fistps
addr16
mov
in
sbb
mov
sub
inc
sub
loope
int
inc
cli
and
fsubrs
push
jb
js
ss
sbb
adcl
and
test
xor
ret
mov
inc
sahf
adc
aas
pop
mov
mov
aas
rcrl
mov
pop
cmp
js
xor
inc
sbb
add
test
outsb
les
sbb
sbb
outsb
xor
sbb
decl
hlt
and
arpl
xchg
push
mov
or
push
mov
dec
xchg
pop
repz
mov
or
jnp
mov
sub
in
sbb
cmpsl
in
cmc
jae
sub
cs
fcompl
pop
sbb
fadd
stos
sbb
js
loop
push
fs
push
and
subl
xchg
xor
sbbb
sbb
add
adc
pop
adc
test
cmpsl
sub
add
arpl
jo
jb
lea
fistpl
sub
lea
fadds
mov
adc
sbb
hlt
imul
pop
fimuls
and
and
and
add
fwait
jl
add
je
insb
sbb
sub
add
call
dec
push
or
into
test
scas
push
sbb
pop
push
stos
cmp
mov
outsb
in
es
or
jnp
add
push
add
add
jmp
ds
aad
xor
out
fwait
push
loopne
mov
or
adc
inc
sbb
sub
sbb
add
and
lret
sbb
sub
fmuls
or
xor
roll
jo
dec
into
adc
icebp
sahf
aam
and
add
sub
push
in
outsl
lret
enter
lea
dec
fadds
sub
pop
cmp
lret
push
mov
adc
mov
pop
sbb
fiaddl
mov
mov
push
and
cli
jns
dec
fmuls
cmp
cs
cmpl
push
outsb
push
jbe
adc
sub
push
aad
pop
fucom
push
andb
xor
loope
sub
cmp
movsb
je
testb
in
sub
add
xor
cmp
xchg
inc
inc
cmpsb
sbb
pop
daa
mov
cmpsb
fldl
xchg
push
fsubl
add
in
adc
xchg
gs
fdivrs
push
and
adc
mov
ljmp
mov
out
dec
scas
rorb
sub
or
inc
jnp
icebp
lret
ficomps
pop
xchg
xchg
sbbb
pop
add
insl
outsl
pop
or
mov
repnz
mov
out
mov
inc
mov
sub
inc
in
adc
add
inc
lret
sub
test
xchg
int
xchg
paddq
and
or
shl
mov
or
push
pop
push
bound
sbb
sbb
inc
bound
push
push
jl
push
cmp
jne
and
add
les
mov
lock
xchg
push
dec
test
imul
int
lret
cmp
inc
xor
fdivs
in
jno
movsl
and
add
stos
rclb
ret
addl
sti
push
jg
ss
pop
out
xor
bound
les
repnz
notb
xor
jl
or
pop
test
push
daa
cmp
and
inc
push
mov
sbb
add
push
or
mov
sub
inc
mov
cmp
test
and
add
adc
add
sub
pop
cmpsb
and
decb
mov
bts
or
jle
push
add
je
jne
adc
jo
outsl
or
sbb
mov
fmull
cmp
orb
sbbl
xchg
mov
nop
xchg
mov
lods
push
scas
pop
sbb
test
shld
cmpsb
cmp
or
mov
hlt
mov
mov
push
mov
xchg
lret
vunpcklps
fstp
and
aad
shlb
xchg
add
in
in
loopne
out
call
loopne
cmp
xor
stc
push
cli
sub
jg
adc
add
adc
into
adc
repnz
add
push
xor
movsb
push
or
pop
sub
dec
push
jne
sub
sbb
push
push
add
adc
mov
push
or
cs
scas
jbe
pop
rcrb
repz
add
sub
popf
jmp
or
sub
or
xor
bndldx
pop
push
xchg
icebp
sbb
test
push
mov
icebp
sub
adc
adc
je
call
rcrl
popf
sbb
shrl
or
or
adc
cmp
xor
add
sbb
sbb
sbb
test
adc
dec
push
add
pop
dec
or
mov
gs
add
outsl
roll
adc
das
sub
or
and
sbb
icebp
repnz
add
xor
dec
leave
cld
and
scas
xor
sub
adc
mov
adc
pop
jb
inc
sub
adc
add
or
xor
add
lock
add
or
call
mov
add
subl
shrl
mov
repz
leave
push
lcall
imull
rclb
xor
loopne
pop
repnz
pop
invd
adc
add
mov
loopne
icebp
out
divb
add
dec
mov
mulb
add
jo
push
ret
or
sar
icebp
inc
fs
test
cmpsb
lods
rcrl
push
xchg
cmp
arpl
lea
jecxz
pop
add
shrl
cld
shrl
popa
mov
setbe
push
jp
adc
mov
imul
aaa
js
xchg
scas
sub
adc
ret
cmp
mov
jl
loope
push
int3
mov
addr16
shlb
mov
push
sbb
mov
mov
push
gs
push
pop
sbb
cmpsl
pop
add
mov
iret
mov
sbb
ljmp
aas
test
mov
repz
adc
bound
xor
dec
out
fdivs
push
pop
in
adc
xchg
push
fists
mov
aad
mov
or
xlat
mov
lds
sub
xchg
addb
test
test
out
aaa
xor
sub
dec
cmp
jle
adc
add
mov
cs
fsubr
inc
mov
inc
cmpl
pop
lret
push
cli
pop
dec
dec
pusha
pop
mov
jg
mov
dec
sub
xchg
push
cmp
dec
daa
sbb
out
jecxz
sahf
cmp
mov
mov
push
mov
dec
pop
push
mov
pop
aaa
xor
mov
push
and
or
push
ret
add
in
inc
in
sub
fiaddl
das
mov
daa
dec
xchg
sbb
shlb
data16
add
sbbb
repz
pop
cmp
mov
mov
and
icebp
imul
and
jl
and
push
dec
push
pop
xchg
cmp
icebp
push
dec
inc
lods
mov
jl
push
push
pop
icebp
jns
or
mov
sbb
push
movsb
icebp
movsb
push
repnz
xor
outsb
bnd
repnz
mov
lods
out
inc
cmp
push
lods
adc
loop
inc
mov
add
popa
pop
jp
repz
jmp
out
adc
sbb
dec
or
stos
sub
jmp
out
inc
addr16
lea
repnz
xchg
fidivrs
mov
mov
out
push
push
xchg
int
std
sbb
lahf
lcall
push
add
leave
fisubl
std
adc
sbb
adc
or
and
cmp
mov
test
adc
adc
lods
div
jae
out
jmp
xor
jecxz
xor
jp
dec
fcomps
push
or
icebp
add
mov
mov
lods
or
xor
iret
leave
out
xor
repz
dec
dec
dec
shrb
test
and
iret
out
mov
aam
cld
les
jp
shld
dec
cmp
lods
scas
loop
mov
and
cmp
sbb
addl
sub
xor
int3
xor
pop
fbstp
fs
nop
loope
or
addl
iret
rol
sar
aam
lods
test
and
mulb
inc
or
or
dec
and
clc
imul
ljmp
dec
inc
cs
arpl
xor
sub
repz
jge
jnp
jmp
sbb
clc
dec
xchg
sbb
out
dec
std
adc
push
loopne
stos
out
out
les
add
sub
loopne
xor
stc
popa
sti
add
xor
lret
sub
or
sahf
arpl
test
sub
mov
notb
loopne
adc
sub
and
push
xchg
mov
xor
insb
add
add
sub
or
pop
adc
aaa
loop
repnz
cmp
mov
mov
mov
pop
add
in
cmp
cwtl
cltd
scas
repnz
test
adc
mov
pop
je
or
bnd
xchg
int
pop
sub
outsl
push
repnz
or
sysexit
repnz
out
shl
cmp
mov
pushf
repnz
add
sbb
popa
hlt
repz
negb
pop
mov
fdiv
bswap
repnz
test
dec
div
mov
dec
aam
or
repnz
jbe
jb
mov
xlat
shl
dec
lods
repnz
mov
sub
or
out
push
xor
and
dec
repnz
sbb
pop
sbb
add
add
nop
lods
test
and
and
call
sbb
and
notl
or
jle
shrl
push
push
push
mov
shl
sbb
adc
inc
iret
add
dec
shl
cmpsl
push
mov
and
sbb
pop
push
sub
mov
mov
push
cmp
fidivl
pop
sti
out
adc
push
pop
inc
xor
or
or
inc
pop
pop
repnz
sbb
pop
inc
lock
fistpl
cmc
pushf
sub
fdivl
out
loop
cmp
xor
clc
icebp
cmp
repnz
stos
popa
movsl
adc
idivl
mov
mov
cmp
or
sbb
repz
or
jo
push
je
jmp
push
push
ret
mov
inc
or
mov
insl
push
mov
repz
bound
imul
push
jg
jno
cmpl
insb
mov
dec
push
jno
test
leave
dec
or
fcoms
jnp
push
push
pop
pop
adc
cmpsl
push
icebp
enter
xor
sbb
and
prefetch
or
adc
repz
sbb
stos
sbb
aas
bnd
or
ljmp
push
js
repnz
pusha
mov
lock
pop
sub
and
sbb
adc
sub
jge
enter
fiaddl
repnz
in
sub
pop
mov
test
call
jg
cmp
nop
mov
or
mov
mov
or
push
push
or
mov
cli
sti
pop
cmc
add
hlt
pop
push
enter
mov
add
in
daa
and
arpl
lahf
repnz
orb
inc
mov
jo
js
in
je
jbe
jmp
mov
in
lods
fs
ret
insl
push
dec
outsb
lock
sbb
repnz
jge
cwtl
sub
lea
loopne
jecxz
or
cmpsb
push
jmp
ret
xchg
adc
xlat
shr
cld
or
lahf
xchg
nop
fcmovne
fsts
dec
sbb
add
icebp
nop
xchg
out
clc
stc
cli
hlt
inc
dec
adc
cld
xor
mov
in
xor
or
cld
xor
push
add
lds
dec
pop
in
orb
add
push
fdiv
fcomip
sub
mov
in
push
mov
jle
icebp
jnp
pushf
cwtl
cltd
jmp
sub
push
push
mov
cmp
ja
push
orb
outsl
nop
mov
pushf
lock
js
push
sub
cltd
xchg
fsubr
cmp
das
or
imul
or
sahf
sbb
subl
add
jo
jmp
sarl
sbb
or
imul
push
addr16
scas
stos
dec
notb
push
push
or
dec
pop
sbb
test
enter
and
dec
js
pop
call
xchg
or
jo
negl
mov
xchg
repz
or
enter
enter
sub
or
inc
cwtl
scas
cwtl
mov
push
mov
repnz
sub
xchg
std
or
jecxz
bound
ljmp
faddl
fdivrs
repnz
or
xchg
sbb
xchg
sbb
and
xor
mov
ret
cwtl
enter
repnz
mov
xor
sub
gs
loope
mov
adc
mov
pop
and
push
push
repnz
jo
loopne
inc
push
scas
pop
dec
leave
sbb
fs
das
fisttps
push
cli
insl
es
pop
sahf
push
cwtl
mov
add
push
cmp
lret
cmp
loop
push
pop
popa
pop
and
lock
and
and
repnz
mov
jmp
test
mov
pusha
or
repnz
sbbl
les
jmp
repnz
sub
push
adc
fsubrl
lahf
lcall
movsl
fiaddl
enter
cmp
sbb
jo
mov
out
call
repnz
xorb
xor
bnd
add
pop
dec
cmp
cltd
pop
icebp
add
mov
add
adc
stc
mov
pushf
out
orb
repz
data16
shr
mov
mov
push
sti
and
add
or
or
or
mov
inc
loope
pusha
fcom
sub
jecxz
test
inc
repnz
pop
jnp
jo
int
sarl
adc
ljmp
shlb
xor
leave
inc
xor
mull
je
icebp
sub
daa
sub
lock
pop
pop
pop
or
sub
pusha
push
insb
outsb
rcl
xlat
sar
mov
arpl
mov
clc
hlt
lahf
push
xchg
xchg
in
sub
js
subl
repnz
icebp
aas
aaa
xor
hlt
sbb
add
lcall
faddl
aam
sbb
mov
sbb
jecxz
cmp
repnz
pop
fildll
ror
pop
or
imul
loop
sbb
lret
in
ja
jge
mov
pop
shl
inc
or
repnz
add
cli
notl
lods
scas
scas
jmp
or
adc
stos
or
adc
mov
hlt
fisttps
aam
out
push
push
call
nop
repnz
leave
mov
repnz
js
xorb
enter
pusha
cld
es
cmp
popa
dec
jl
mov
dec
pop
popa
add
mov
rolb
test
lods
test
lret
jo
in
push
dec
bound
cmpsl
movsb
cmpsl
push
mov
movsl
push
cwtl
sub
js
xor
popa
nop
scas
adc
adc
out
dec
pop
lret
sub
dec
mov
push
add
mov
xor
repnz
test
sbb
add
test
daa
repnz
bndldx
icebp
pop
les
or
or
add
add
jo
push
jb
sub
repz
loope
push
jno
es
jno
sub
jo
test
cmpsl
mov
mov
add
cmp
or
sbb
sbb
cmp
adc
xor
test
rorb
test
push
push
insb
insl
mov
fmul
out
jo
lods
xchg
stos
mov
xchg
icebp
shll
pusha
out
inc
inc
iret
shrb
sub
ss
adc
inc
inc
xor
mov
test
ds
test
ss
mov
push
scas
cmp
rol
or
mov
loope
mov
xor
xor
jns
add
into
out
pop
repnz
sub
xchg
lahf
add
or
add
sbb
mov
sti
hlt
and
mov
cmp
lahf
xchg
aad
sub
sub
inc
push
mov
adc
pop
rclb
mov
pushf
sahf
cwtl
in
mov
dec
lcall
in
out
repz
mov
sbb
dec
mov
int3
add
test
or
mov
repz
pop
lock
mov
int3
out
jo
jmp
out
inc
popf
rcr
push
insb
shr
jge
repnz
rcll
lods
sub
clc
negb
push
outsb
outsl
push
push
push
stos
arpl
push
test
add
inc
arpl
xor
jp
xchg
loope
add
sti
les
lret
fnsave
aam
inc
hlt
mov
cmp
icebp
mov
push
das
or
push
push
push
repnz
lock
xchg
xchg
inc
in
in
clc
push
pusha
xchg
shl
sar
jg
mov
hlt
repnz
ljmp
std
jp
jb
and
out
bnd
rcr
sbb
loop
jmp
cmp
cmp
jb
out
popf
repnz
dec
pusha
mov
gs
popa
in
scas
stos
movsl
in
call
repz
loopne
addl
or
add
insb
xor
mov
ficoms
rcr
jbe
ja
pop
repz
and
mov
jnp
push
bnd
and
repz
lock
not
jno
rcl
loop
jno
inc
call
mov
mov
mov
cmp
clc
push
or
shlb
and
sub
or
add
mov
test
mov
cwtl
pop
mov
sub
or
or
add
add
or
push
in
sti
xor
push
ja
dec
sub
dec
enter
addl
xor
aas
lret
cwtl
push
xor
repnz
or
pop
stos
mov
xchg
mov
imul
pop
loop
daa
divb
dec
xchg
int
cld
out
jb
mov
scas
push
adc
dec
cs
punpcklwd
repz
or
or
jb
test
mov
mov
sbb
cmp
fsubr
or
enter
add
insb
fdivrs
jb
icebp
mull
in
mov
incl
cs
sbb
rorb
pop
xorl
sbb
or
pop
or
sub
clc
hlt
and
lods
or
not
adcl
and
jns
in
sub
push
cld
add
push
repnz
es
cltd
jle
add
cld
sub
push
repnz
cmp
dec
insl
cld
aas
or
inc
sub
xchg
insl
and
xorb
jp
mov
out
adc
loope
inc
or
jo
cld
fs
rol
xchg
mov
in
or
enter
adc
repnz
mov
into
aad
inc
mov
mov
nop
pop
inc
sbb
push
repnz
imul
xor
cmp
mov
inc
data16
dec
sahf
sbb
inc
pop
pop
cmp
fbld
neg
insl
rol
mov
data16
pop
or
jl
push
mov
jo
jmp
jns
cmp
clc
push
sub
mov
stos
add
inc
mov
inc
sbb
adcb
cld
mov
push
clc
lcall
stc
cmc
push
adc
or
dec
cmp
or
inc
push
jno
mov
mov
dec
mov
test
adc
dec
outsl
xor
repz
sbb
xor
shll
jp
es
push
fcmovbe
out
clc
leave
insb
out
dec
jl
lock
test
icebp
add
cli
sub
sbb
push
xor
mov
mov
aas
sbb
mov
cmp
int3
stc
je
pop
adcb
ret
xor
xor
pusha
adc
push
xor
mov
out
je
adc
xchg
test
std
xchg
shrb
or
cmp
mov
mov
repnz
xor
lods
sahf
cwtl
fsubrl
pusha
sarb
push
inc
lock
or
sar
lock
xchg
mov
je
cld
mov
jl
loopne
lock
sahf
pop
bound
lods
mov
adc
mov
xchg
ret
jmp
and
test
push
mov
repz
cs
add
gs
clc
mov
fmull
push
outsl
imul
pop
insl
and
dec
mov
xor
mov
fistps
adc
in
jb
and
sub
pop
dec
mov
sbb
cs
lock
xor
in
xchg
je
pusha
mov
adc
lock
jb
xchg
int
testb
insl
jle
add
loopne
popf
mov
js
and
sbb
syscall
lock
or
push
xor
and
insb
or
mov
aaa
movsb
push
sub
mov
ret
pop
and
scas
fisubrl
push
cmpsl
wbinvd
sub
jns
push
lods
lock
repz
xor
push
sbb
adc
add
push
add
cli
sbb
sbb
icebp
cli
push
stc
fidivrl
sub
cld
inc
mov
sub
or
je
xor
push
jo
dec
lock
pop
push
adc
and
add
sbb
insb
mov
or
in
ja
aam
out
stc
data16
fldl
in
loope
fcoml
dec
loopne
mov
add
jmp
pop
fmull
or
add
repnz
lock
ret
idiv
testb
cmc
cmc
jbe
or
ljmp
xor
stos
subl
mov
pushf
inc
sbb
jmp
or
adc
sub
clc
xor
mov
clc
les
pop
push
xor
loop
pushl
cld
stc
push
mov
fadds
xor
repz
cli
mov
in
pop
add
or
std
repnz
jg
sarb
xchg
pop
inc
cmp
repnz
mov
dec
push
pop
push
es
lock
insl
push
push
or
mov
incb
orl
popa
nop
call
pop
nop
outsl
imul
stc
mov
or
mov
loopne
repnz
sbb
push
sub
dec
je
xchg
add
add
sbb
popf
mov
adc
or
adcl
mov
mov
lret
loopne
xor
mov
mov
pop
nop
mov
je
pop
add
mov
and
mov
push
insb
int
imul
nop
imul
fiadds
imul
pop
sub
cmp
jno
popf
lcall
sub
dec
sbb
fs
icebp
pop
or
mov
adc
pop
or
shl
je
cmp
in
push
jo
subps
repnz
call
in
or
and
scas
int3
and
lock
popf
rclb
add
cld
std
xchg
sahf
xchg
inc
fisttps
or
and
push
enter
lea
add
cld
sub
or
xor
adc
repnz
shr
cld
negl
rclb
imul
or
or
repz
repnz
enter
add
sub
push
mov
lock
rclb
repnz
dec
repnz
dec
repnz
dec
repnz
push
or
scas
int3
sbb
adc
daa
dec
mov
pop
mov
out
icebp
jmp
clc
push
push
push
fnstenv
mov
insl
subb
les
mov
pop
pop
rcl
and
sub
enter
add
jae
ficoml
cmp
cs
push
xlat
push
in
movsb
shrb
std
mov
cmpsb
mov
jae
ret
mov
or
and
movsb
je
iret
dec
xor
push
js
std
sub
inc
cmp
push
mov
mov
xlat
jmp
int3
cmpb
insb
dec
xchg
ret
jo
lahf
outsl
imul
sub
add
rolb
nop
add
pop
mov
in
add
in
adc
push
cmpsb
dec
inc
adc
mov
icebp
movsb
call
outsl
pusha
jl
push
jae
dec
mov
andb
xchg
rep
fadd
fstp
call
repnz
jo
pop
out
sub
mov
dec
icebp
or
stc
jo
sahf
nop
lods
fdivrs
xchg
insb
aad
les
loop
jge
ss
mov
lods
mov
pop
adc
repnz
fdivs
mov
call
clc
stc
hlt
sub
lock
jmp
fsubs
cli
hlt
pop
push
push
insb
pop
fidivs
sahf
or
sub
repnz
fisttpll
int3
mov
or
adc
arpl
je
dec
push
push
in
pusha
sub
xchg
int
icebp
loope
push
outsl
push
dec
push
cmc
mov
cmpsb
jl
sub
stc
adc
sbb
rorb
adc
scas
shrb
mov
mov
cmp
rolb
loope
add
cmp
std
or
push
aad
daa
cwtl
mov
inc
addb
or
xchg
int3
sti
leave
adc
insb
js
push
inc
repnz
pop
push
sahf
or
jb
subb
adc
loop
popf
fsubrl
rorl
mov
lock
vpmulhw
jp
fcoml
push
fidivrl
into
lret
aam
sub
jb
pushf
loopne
push
imul
or
fs
push
add
sub
mov
mov
ljmp
imul
fmuls
xchg
daa
or
pop
cld
mov
cltd
xchg
shll
aam
add
das
or
in
shrb
lahf
ret
imul
lods
mov
or
mov
mov
in
lods
mov
mov
aam
inc
int3
std
inc
adc
jmp
loop
cli
stc
repnz
fcoml
out
js
enter
out
xchg
out
out
add
xchg
lods
scas
fcomip
movsl
mov
loope
and
cmpps
popa
shlb
ja
fcomps
rcl
cld
pop
xor
xor
push
xor
fs
add
insl
adc
push
hlt
movsb
pushf
add
cli
fidivrl
mov
sbbl
xchg
and
xchg
xchg
loopne
lcall
loop
mov
in
pop
inc
dec
fcomps
out
dec
xor
arpl
movb
aam
xchg
or
cmp
or
inc
inc
inc
insl
ficoms
fdivrs
push
scas
inc
fmull
daa
int3
repnz
pop
or
idivb
and
cli
mov
inc
test
push
dec
fcomp
push
pusha
outsb
adc
repnz
add
or
or
sub
push
repnz
sbb
or
or
or
subb
mov
mov
insl
int3
inc
jmp
ja
dec
push
hlt
sub
movsb
pop
jg
dec
test
aaa
ds
repnz
sub
cmp
push
add
in
imul
sub
mov
icebp
out
pop
mov
or
jg
mov
sub
or
jmp
fsubl
sbbb
pop
adc
call
jns
sub
cwtl
rcrb
dec
jo
es
fstpl
jge
xor
cmpb
jb
sbb
mov
xchg
rclb
movsb
jns
and
insl
mov
push
and
stos
cmpsb
mov
add
push
sbb
push
leave
movsb
daa
dec
in
lcall
push
out
jmp
xchg
lock
fucomip
loopne
idiv
stc
rol
jmp
ror
lret
shlb
jp
es
dec
jo
adc
adc
jge
and
xlat
leave
dec
fsubr
or
add
fcompl
pop
pop
xchg
or
sub
fnstsw
mov
xchg
or
and
js
pop
add
cs
mov
jg
das
push
inc
sub
scas
or
mov
pushf
or
mov
fwait
or
clc
in
pop
jg
dec
xchg
loopne
or
mov
in
xor
push
xchg
aaa
dec
mov
dec
ja
roll
icebp
mov
in
loopne
repz
clc
ja
inc
mov
repnz
xchg
ret
or
push
mov
in
icebp
jg
aam
mul
negl
or
shll
or
adc
bswap
loopne
pop
add
movsb
rolb
add
cmp
popf
dec
push
repnz
push
xor
push
iret
adc
lock
insl
push
xor
bound
arpl
pop
and
sbb
dec
aaa
push
pop
lea
jl
sub
jno
adc
clc
ja
pop
shlb
sbb
into
stos
jnp
jno
jnp
xchg
mov
adc
rcrb
cmp
mov
add
sub
inc
mov
push
dec
jno
mov
lret
test
inc
lock
nop
xor
xchg
ljmp
testb
or
daa
outsl
sbb
or
insl
xor
add
adc
sbb
add
lds
jg
dec
push
mov
xor
shrb
jle
imul
mov
repz
dec
jg
and
pop
das
enter
lea
adc
rclb
data16
and
cmp
jo
sbb
fs
and
repnz
and
mov
stos
xor
mov
cli
mov
cmp
sbb
push
jg
icebp
add
adc
push
mov
dec
dec
inc
imul
inc
nop
add
cmp
sub
inc
or
icebp
outsl
addr16
inc
inc
mov
das
or
add
cmpsl
jl
pusha
cmp
mov
repnz
outsb
insw
jle
add
sub
dec
cmp
insl
mov
push
xor
fcomps
xlat
bnd
add
pop
sbb
mov
add
or
and
and
add
cmc
add
mov
add
pushf
push
dec
and
jae
mov
mov
pusha
js
mov
aam
add
sub
mov
push
dec
sti
clc
outsl
fs
repnz
pusha
jge
sbbb
push
sub
dec
or
sbb
mov
fldt
jge
daa
adc
sbb
or
pop
push
sub
mov
mov
add
sbb
std
adc
or
inc
nop
sbb
sub
dec
pop
sub
pusha
and
pop
add
sub
inc
dec
and
aas
pop
or
mov
lods
adc
push
dec
push
enter
outsl
repnz
sub
lea
es
movq
sbb
add
adc
icebp
mov
fmull
mov
mov
test
test
inc
call
js
ds
and
addr16
add
mov
repnz
pop
testl
inc
dec
push
xor
mov
jo
mov
push
shll
adc
add
sub
xchg
in
jo
push
mov
dec
cmp
dec
js
inc
and
adc
mov
push
jg
mov
mov
mov
inc
jge
jl
push
inc
or
pop
jg
inc
mov
imul
cli
xlat
add
hlt
repz
xchg
push
add
push
mov
sbb
sub
add
pop
int
mov
jle
in
mov
sbbb
dec
dec
push
inc
push
popa
arpl
jg
bound
xor
dec
hlt
pop
clc
xor
pop
pop
arpl
sbb
gs
xchg
or
or
jl
or
mov
and
js
mov
dec
out
push
lods
lahf
jp
push
adc
js
dec
mov
test
test
jnp
adcl
incb
pop
mov
andnps
bound
dec
push
and
pop
xchg
enter
add
pop
cmp
push
inc
inc
jp
or
xchg
lods
pop
mov
loope
jo
addb
decl
push
negl
adc
sbb
ljmp
dec
imul
cs
jno
add
or
and
inc
insl
add
pop
lock
sub
rclb
add
sub
dec
and
cmp
cmp
push
dec
pop
inc
inc
bound
push
xor
fdivs
pusha
push
xor
shll
int
in
xor
pusha
dec
shl
cmpsb
inc
inc
cmp
cmp
push
sub
repnz
cmp
push
inc
pop
mov
or
lds
cmpsb
mov
sti
mov
icebp
repnz
repnz
mov
cmp
xor
icebp
rolb
es
jb
nop
nop
xor
stos
inc
xchg
lock
mov
aas
dec
or
xor
or
add
push
pop
or
or
add
cmp
mov
add
mov
pop
mov
ret
lcall
mov
sub
jb
bound
xor
in
lea
cmp
dec
add
outsl
inc
sbb
lret
adc
xor
push
pop
repnz
popa
int3
adc
adc
cwtl
dec
adc
add
aam
and
jge
cmp
pusha
les
punpckhbw
pop
push
xor
sub
add
cmpsb
cli
repnz
push
ret
and
jge
cs
dec
lea
shll
and
int
dec
and
sub
sbb
out
mov
jo
xor
getsec
add
sbb
xor
lea
sbb
xor
adc
test
push
cmp
sbb
adc
pop
das
add
and
je
movsl
lret
in
or
sahf
pop
inc
dec
push
and
dec
fsubrl
adc
lahf
push
lea
es
adc
jae
or
inc
inc
push
imul
push
enter
es
xor
xor
mov
push
mov
and
insl
push
xchg
mov
mov
add
outsl
and
mov
inc
pop
aam
and
aas
pop
cmp
int3
mov
loope
jbe
push
mov
test
jg
mov
testl
adc
xor
pop
daa
add
mov
cmp
or
sbb
dec
shrl
lea
dec
adc
inc
insl
cmp
jbe
and
push
inc
jl
in
cli
sub
sub
adc
or
inc
lea
mov
out
sahf
pop
call
icebp
add
cwtl
fdivrl
int3
add
popf
aaa
pop
adc
mov
cmpsl
rorb
inc
or
push
add
cmp
repnz
arpl
push
mov
movsl
mov
push
in
xchg
jl
shrb
movsb
dec
sbb
sti
fdivs
addr16
cmp
mov
insl
mov
adc
imul
jns
dec
or
dec
dec
pop
push
push
mov
dec
dec
dec
and
repz
fidivrs
dec
push
cmp
dec
xor
inc
icebp
popf
add
xchg
dec
or
and
add
nop
adc
cmp
orb
mov
cmp
dec
js
xchg
rcr
mov
or
xor
pushf
pop
and
das
test
sub
or
add
lea
adc
mov
jo
mov
scas
andb
mov
leave
inc
xor
dec
stos
fdivrs
ret
push
mov
push
ds
add
adc
inc
inc
dec
inc
cmp
inc
outsl
jns
movsb
push
or
push
cld
cmp
and
xor
add
sbb
dec
inc
mov
cmp
cltd
jmp
cltd
lret
insb
cmp
mov
xor
dec
rorb
sub
dec
sub
mov
dec
push
and
ds
insb
dec
fwait
scas
mov
cmp
rolb
cs
sub
sub
pusha
pop
shrb
and
dec
or
pop
adcl
mov
or
cmp
inc
out
sub
dec
movups
mov
inc
sub
sbb
dec
cmp
jo
shlb
aaa
jg
rcrl
or
or
mov
inc
push
add
fs
sbb
cmp
int
or
sub
add
repnz
pusha
scas
das
dec
dec
adc
or
das
pop
adc
bound
sbb
mov
sbb
stos
push
add
push
rolb
int
das
pusha
jl
and
cmpsl
mov
mov
jae
inc
or
lods
data16
sub
call
mov
and
shl
pushf
roll
lods
add
popa
rolb
sub
insb
push
lret
int3
and
jle
es
push
inc
insb
rcll
xor
and
inc
sub
int3
add
sub
adc
sbb
outsl
fidivrl
xor
mov
add
adc
imul
aas
or
rolb
adcl
leave
xor
cmp
jmp
and
inc
add
das
mov
mov
cmp
mov
mov
mov
in
repnz
dec
add
loop
arpl
jns
jo
or
out
xchg
fisubs
adc
sbb
xor
outsb
adc
sub
aas
call
xor
sbb
and
pop
or
adc
aas
add
pop
cs
xor
mov
mov
sbb
mov
dec
pusha
das
and
adc
jg
mov
push
inc
stc
dec
add
inc
mov
pop
or
dec
dec
xor
adc
pop
sbbb
add
mov
ds
and
dec
ds
inc
add
outsb
pop
mov
movsl
xchg
arpl
adc
sbb
adc
lcall
sbb
xor
sbb
inc
aad
mov
or
and
sbb
pop
adc
push
sbb
or
xor
or
inc
fsts
jb
sub
xorl
adc
jmp
outsl
push
or
jle
stos
add
in
test
push
roll
leave
or
xchg
sbb
push
popa
push
push
inc
inc
cmp
outsb
addr16
add
fimuls
das
or
dec
mov
or
push
dec
insb
inc
xchg
cmp
add
sub
adc
outsl
rolb
or
sbb
inc
adcb
inc
les
dec
xor
add
outsl
repz
sti
cmp
sbb
arpl
in
repnz
add
push
add
dec
fisubrl
in
das
or
dec
push
lea
sti
sbb
cld
icebp
rol
xor
or
inc
lret
inc
sbb
fcomps
inc
pushaw
cld
dec
adc
inc
or
or
inc
mov
jge
lods
cmp
fistl
pop
jge
xchg
mov
jns
pusha
or
pop
xchg
add
or
dec
push
xor
insl
xchg
jb
adc
ret
outsb
xor
aam
movsb
int3
outsl
mov
xor
xor
add
in
icebp
adc
pop
push
sti
push
xchg
fadd
or
mull
or
add
mov
repnz
outsl
imul
repz
mov
jg
cmp
and
shl
add
adc
add
mov
jo
repz
sub
pop
out
addr16
xor
fcoml
fs
push
jg
stos
jl
in
sub
mov
addb
add
inc
xchg
sti
testl
movsl
add
subl
xor
add
or
inc
orl
imul
repnz
pop
xchg
sub
invd
pushf
dec
xchg
aam
sarb
and
sbbb
popf
sbb
dec
fldenv
push
sub
mov
xor
cltd
js
push
lds
mov
insb
pop
dec
popa
pop
lcall
sbb
lcall
pop
adc
not
sub
aas
lahf
popa
xor
aam
inc
bound
xor
inc
or
pop
lahf
cmp
dec
dec
arpl
sarl
iret
loop
mov
in
cld
and
dec
mov
adc
jl
insb
and
ss
adc
add
mov
jl
in
cmp
xchg
mov
bound
xchg
js
adc
push
cmp
aas
or
icebp
fdivl
aas
icebp
or
dec
test
rclb
add
mov
dec
cmp
and
push
popa
repnz
leave
out
ret
call
add
jno
adc
icebp
adc
dec
inc
enter
add
or
sub
xor
sbb
cmp
add
xor
adc
dec
lods
enter
adc
clc
inc
xor
mov
add
ror
xchg
add
jb
jge
fs
mov
insb
subb
inc
sub
push
add
xor
and
mov
jle
mov
dec
and
mov
adc
cwtl
pusha
dec
fs
or
inc
les
dec
outsb
enter
dec
mov
fdivl
jo
testl
jnp
sub
and
or
call
inc
push
mov
pushl
cmp
adc
mov
outsb
sbb
or
cs
push
sub
shrl
cmc
daa
sbb
pop
xor
push
or
push
push
repz
xchg
or
imul
stc
mov
and
in
cmpl
js
adc
push
imul
insl
out
cmp
loopne,pt
loope
dec
or
inc
in
cld
hlt
mov
xchg
int3
pop
js
inc
cmpsb
addb
aaa
mov
inc
xor
mov
add
test
movsb
icebp
mov
inc
or
mov
rclb
xor
jb
lahf
mov
jae
hlt
jbe
lea
mov
push
sbb
call
and
pop
inc
xor
mov
mov
pop
adc
xor
jecxz
iret
mov
repz
sbb
adc
sbb
clc
mov
js
jno
pusha
repnz
cmp
je
cmpsb
je
icebp
push
jno
add
inc
or
inc
sbb
scas
insb
jo
test
int3
or
mov
jno
sub
jo
jmp
add
aas
add
adc
scas
hlt
add
or
repnz
out
adc
lds
sbb
int3
inc
mov
sub
pushf
and
lret
pop
push
push
hlt
pop
lret
hlt
jp
pusha
imul
clc
mov
fmull
loope
push
and
dec
mov
js
pusha
lods
lds
add
bnd
and
dec
and
inc
or
or
inc
cmp
mov
xor
pop
or
mov
pop
and
push
cltd
sub
sub
cmp
mov
dec
pop
cmp
adc
cmp
lods
js
les
jecxz
push
mov
or
push
sub
aam
xor
jno
add
jl
add
jns
sbb
data16
xor
adc
popf
pop
dec
test
adc
dec
aaa
dec
call
xchg
cwtl
shlb
add
scas
sub
add
dec
xchg
cld
add
insb
adc
dec
sub
push
daa
movsb
fisttpll
sub
mov
movsl
xor
rolb
add
js
les
aaa
or
pusha
add
jne
mov
dec
sarl
cmp
jno
adc
cmp
mov
shll
loopne
pushf
dec
and
out
ret
into
sahf
add
dec
adc
cmpsb
out
and
cmpb
inc
ror
fcomps
adcl
lret
sbb
stc
pop
mov
or
add
fisttps
hlt
insl
insl
adc
iret
rep
inc
push
push
add
mov
sbb
mov
xor
shl
data16
mov
les
lock
cmp
sub
lods
push
jl
xor
mov
ljmp
xor
and
das
jo
adc
lods
and
xor
stc
std
bound
lock
cs
test
xchg
sti
jle
call
pop
inc
pop
and
pop
mov
sahf
xor
push
cmp
sbb
addr16
cmp
push
cmp
repnz
or
mov
add
sub
dec
or
add
shll
jg
or
add
insb
add
sbb
adcl
inc
cmc
sub
adc
dec
icebp
enter
insl
push
insb
out
pop
sbb
jnp
outsb
fmul
shl
push
mov
inc
test
mov
out
dec
shlb
cs
dec
push
inc
add
xchg
cld
cmp
ret
push
sbb
js
pusha
outsw
and
inc
add
adcb
out
xor
and
jle
xor
pusha
mov
icebp
decl
hlt
fisttps
cltd
xor
cwtl
xchg
fs
ss
addl
inc
fsubrs
or
js
or
xchg
inc
add
xchg
adc
mov
sub
jns
cmp
cmp
and
sub
repnz
and
and
dec
mov
jb
sub
jbe
test
and
pushf
or
pop
or
fsubp
jb
push
add
mov
pop
sub
dec
jb
xchg
xchg
dec
mov
push
add
decl
fnstsw
cmp
cmp
xchg
push
add
mov
pop
add
cmpsb
loope
cmpsl
pop
pusha
xor
mov
jns
sbb
mov
sbb
lret
xor
int3
xchg
xor
xor
enter
clc
or
xor
mov
pushf
cmp
add
popa
int3
test
sub
bound
or
push
mov
cmp
xchg
test
xchg
test
adc
enter
bound
cmp
xchg
test
adc
cld
xchg
int3
movsb
bound
adc
dec
xchg
adc
rclb
and
or
jg
mov
mov
push
imul
xchg
fsubrs
mov
and
hlt
imul
hlt
outsl
add
aam
sbb
insl
mov
cmp
insb
test
inc
fdivs
or
rcrb
in
dec
popa
clc
pop
sbb
add
enter
bound
cmp
pop
test
adc
int3
test
dec
cmp
inc
test
adc
int3
fadds
mov
cmp
dec
inc
adc
cmp
in
push
xchg
cmp
adc
dec
inc
adc
popf
xor
pop
or
inc
pusha
sbb
jno
add
int3
push
push
int3
stos
test
add
js
cltd
jl
or
and
es
push
sbb
mov
mov
aaa
mov
pop
sub
and
adc
and
add
ds
in
or
adc
test
nop
sti
cmp
iret
inc
or
sbb
jle
test
inc
dec
adc
sub
and
add
enter
and
sub
add
xorb
dec
or
mov
mov
sub
adc
popl
and
enter
sub
push
fmuls
and
inc
enter
test
sbb
pop
into
or
sub
insb
rolb
dec
adc
push
je
and
mov
xchg
sub
dec
mov
pushf
mov
fimull
push
push
movsb
test
js
enter
adc
inc
pushf
mov
les
aam
cmc
add
mov
je
lea
push
push
fiadds
fdivl
mov
orb
add
or
add
fisttpl
adc
or
xlat
sbb
pushf
mov
adc
inc
mov
orl
xor
sbb
dec
add
js
cmc
add
push
jg
add
call
cmp
mov
jns
push
les
aam
sbb
mov
enter
xor
dec
in
es
cld
orl
xchg
adc
mov
cmp
adc
pop
dec
xor
les
enter
add
pop
cmp
pop
add
pushf
push
sub
pop
in
add
movsb
mov
in
ds
dec
mov
cltd
dec
push
jl
sbb
insb
inc
mov
add
inc
xorl
bound
adc
or
add
loopne
adc
vpcomuq
dec
add
pusha
bound
push
sub
jmp
jl
movsb
push
adc
push
loopne
je
and
dec
scas
mov
or
or
mov
loopne
sub
or
jmp
jno
mov
movb
xchg
bswap
mov
movd
mov
sbb
add
adc
andb
jo
in
or
in
or
dec
in
hlt
icebp
sbb
add
sub
dec
pop
adcl
mov
dec
mov
lret
dec
in
loope
testb
out
sbb
and
mov
or
pop
or
mov
xlat
mov
in
in
je
fs
mov
or
jl
mov
adc
jno
in
mov
icebp
rcrb
jno
dec
shlb
shrl
sbb
push
cli
int3
ljmp
mov
les
add
adc
out
je
mov
out
sub
loop
xchg
mov
test
xchg
sub
cmpsl
sub
dec
decb
xor
sub
adc
mov
nop
enter
jl
mov
xchg
adc
rolb
push
int3
aas
out
repz
inc
stos
mov
pop
enter
fsubrl
sbb
shl
shrb
hlt
icebp
or
fs
pop
rol
outsl
add
test
xor
pushf
pushf
add
stos
mov
jno
sub
mov
mov
fdiv
xor
sbb
mov
sub
inc
bound
dec
mov
orl
adc
or
sbb
and
cmp
add
xor
loope
dec
sbb
sub
or
inc
int3
ja
cmp
adc
outsb
add
mov
add
lods
das
mov
jns
out
push
adc
sarb
arpl
loopne
and
jae
jne
int3
sahf
ja
imul
sub
cmp
mov
add
cs
sbb
adc
adc
sub
add
adc
xor
sbb
sub
cld
repnz
test
mov
inc
or
out
or
mov
add
sub
dec
cmp
xor
mov
push
jle
xor
xor
dec
sub
dec
dec
orl
popf
cwtl
fadd
repnz
cmp
sbb
cmp
pop
adc
lahf
sub
fcoml
mov
dec
stc
shrb
sub
push
dec
test
xor
adc
addb
push
sbb
add
sub
dec
jnp
add
xor
push
in
enter
je
sub
xchg
jns
or
mov
sbb
ss
adc
aam
hlt
lcall
pusha
mov
sbb
xor
mov
or
push
xor
insb
inc
clc
bound
push
dec
mov
add
hlt
sub
adc
or
dec
sbb
shrl
arpl
and
pop
inc
xchg
and
insb
sub
dec
sub
clc
pushf
jl
fdivrl
inc
js
add
insb
je
inc
bound
sbb
adc
addl
adc
mov
push
enter
arpl
dec
add
xor
adc
jo
inc
adc
enter
xor
xchg
data16
adc
push
les
bound
jo
fcompl
xchg
enter
bnd
push
test
scas
sub
adc
shlb
and
add
cltd
js
adc
lret
inc
in
jl
adc
adcb
clc
pop
sbb
sub
inc
cmpl
test
cmpsb
nop
dec
cmp
sub
cmp
in
push
xor
dec
add
xor
xchg
aam
mov
sub
imul
enter
adc
mov
adc
out
aaa
js
adc
and
xchg
mov
adc
int3
cwtl
dec
sub
inc
bound
adc
add
lods
das
push
xor
dec
add
sub
bound
mov
inc
ss
lods
cltd
cmp
rolb
sub
push
pop
add
mov
adcl
xor
xchg
subl
enter
sbb
xchg
sub
adc
cltd
sub
pop
adc
addl
enter
adc
pusha
cmp
pop
add
sbb
enter
xor
xchg
xchg
adc
daa
bound
je
inc
sbb
sbb
aas
and
jo
inc
loope
sbb
inc
cmp
adc
into
inc
inc
inc
push
mov
shrb
lods
sbb
add
add
sti
xor
nop
add
test
xchg
adc
int3
pop
and
add
enter
add
xor
lods
enter
sbb
js
cmp
add
sub
popa
scas
js
mov
dec
int3
jmp
test
dec
mov
sbb
xor
inc
and
mov
inc
test
inc
insl
push
or
mov
inc
xor
dec
sbb
push
sbb
xor
test
and
xor
loopne
adc
int3
jl
bound
enter
insb
adc
insl
mov
les
and
mov
cwtl
jo
xchg
aas
int3
sub
push
mov
inc
aas
sbb
adc
mov
enter
xorb
mov
sbb
aam
dec
push
adc
add
enter
adc
mov
xchg
cmp
aam
mov
cmp
call
mov
int3
les
xor
in
and
adc
sub
clc
in
inc
enter
xor
dec
adc
clc
dec
xor
pop
adc
xor
cmp
add
and
add
ret
mov
push
inc
push
and
test
push
dec
enter
sbb
or
sbb
dec
sub
mov
push
insl
push
adc
adc
xchg
sub
hlt
in
inc
dec
sub
sbb
sub
adc
pop
adc
mov
in
push
sub
bound
pop
pop
add
adc
adc
sbbb
cmp
cmp
add
jl
add
sub
push
dec
les
je
pop
adc
inc
loope
sbb
xchg
pop
enter
dec
pop
in
cmp
insb
push
adc
add
or
pop
into
mov
pop
pop
bound
add
sub
adc
popl
imul
add
fadds
add
das
int3
in
dec
das
in
inc
bound
dec
jo
loopne
pop
adc
pop
loop
cmp
add
mov
cmp
sbb
mov
clc
arpl
nop
mov
lea
push
xchg
or
push
sub
or
cld
bound
sub
bound
or
add
mov
or
insb
in
or
xor
dec
rorb
and
inc
add
loopne
adc
int3
pop
dec
pusha
sub
enter
adc
mov
jl
jmp
sub
test
pop
fwait
test
js
xor
and
xor
je
dec
pop
add
and
inc
enter
xor
dec
adc
enter
shlb
xchg
sub
orl
add
or
test
and
sbb
inc
jbe
mov
mov
inc
push
sahf
add
pushf
nop
adc
pusha
and
les
outsl
cmp
shlb
aam
sbb
insb
xchg
bound
push
adc
add
sub
enter
adc
and
dec
lods
jg
mov
mov
inc
pop
cmp
inc
test
daa
loop
cmp
add
cmp
and
sub
xor
push
dec
mov
cmp
enter
es
and
sub
mov
pop
cmp
inc
dec
sub
or
loope
cmp
sub
adc
rorb
adc
rorb
inc
add
enter
xor
dec
cmp
js
xchg
jle
fs
nop
sub
cmp
add
aas
mov
loopne
cmp
mov
sbb
push
cmp
and
add
dec
or
insb
add
jbe
mov
mov
add
imul
dec
dec
sbbl
mov
popf
sub
dec
cmpsl
xorl
adc
cmp
dec
sub
and
ss
dec
pop
mov
bound
dec
test
mov
fisubrl
dec
cld
mov
cmp
push
adc
dec
sub
sub
dec
imul
add
adc
or
pop
add
cmp
addl
mov
dec
cmpsb
cmpl
hlt
adc
xor
mov
sbb
cmp
mov
push
sub
dec
sahf
andl
dec
out
jo
push
loopne
aam
mov
xor
adc
cmp
stos
popf
mov
sbb
in
daa
dec
icebp
clc
lds
icebp
pushl
popa
fiaddl
icebp
xor
push
dec
out
push
xchg
xor
icebp
imulb
mov
pop
lcall
les
test
sbb
pushf
mov
inc
cmp
fdivrl
push
hlt
hlt
fwait
xor
sub
fs
inc
es
mov
aaa
sub
popf
push
xorb
sub
ja
sbb
out
je
xor
sti
sub
addb
mov
jbe
aam
test
clc
and
js
inc
pop
push
mov
sbb
mov
enter
or
les
cld
push
jle
cmpsl
es
rcll
dec
insb
lea
cmp
cld
aam
divb
cmp
xchg
rcrb
hlt
in
notb
add
popa
sbb
mov
pop
adc
cmp
push
mov
dec
xor
mov
adc
in
and
pop
xorl
icebp
push
sub
js
dec
push
je
sbb
aam
mov
inc
jg
lock
cmp
loop
push
js
or
cmp
insb
in
dec
lcall
cmpsb
xor
sti
lea
xchg
js
insb
scas
js
pop
xchg
js
push
sbb
or
aam
test
mov
nop
push
pop
mov
aam
sbb
push
movsb
ficoms
clc
popf
insb
add
mov
and
adc
cmp
pop
clc
pop
adc
je
push
leave
rcrl
adc
lods
or
ret
les
loop
lahf
inc
pop
adc
cmpl
in
pushf
aaa
loop
pop
stc
in
or
stc
popf
fdivr
add
int
mov
xchg
sub
call
daa
sub
push
push
andb
push
insb
xor
mov
sub
push
jne
loopne
enter
mov
js
adcl
hlt
push
clc
xor
jbe
insb
mov
test
cmpl
or
inc
fdivr
and
push
insl
jnp
mov
int3
pop
in
pop
sub
sbb
push
int3
mov
pop
adc
enter
xorl
sbb
mov
lret
pop
adc
cmp
fs
lods
mov
and
inc
push
pop
insb
in
daa
xor
out
add
push
testb
cld
ss
sub
mov
movsb
pushf
fdivrl
lret
out
sub
xor
sub
movsb
pop
out
inc
or
data16
jo
xchg
out
xchg
mov
in
mov
xor
imul
lods
fsub
cmp
shll
das
inc
mov
insb
js
addl
or
pop
rorb
inc
and
scas
sub
cltd
enter
insl
sub
sti
sub
jns
daa
xchg
pop
inc
repnz
out
je
jg
mov
lods
inc
inc
jbe
push
push
lahf
ficoml
cmp
jl
mov
pop
dec
sbb
enter
es
dec
sbb
add
add
movsl
daa
mov
jmp
xchg
add
sub
fcomi
mov
das
dec
and
push
or
sbb
outsl
add
xor
mov
add
out
pop
adc
xorl
push
and
das
imul
sbb
cmp
bound
add
sbb
add
dec
mov
das
or
int
or
jbe
push
mov
push
pop
add
pop
outsb
mov
cmp
mov
xor
mov
add
jbe
notb
pop
jae
lret
adc
xor
testl
or
mov
call
jnp
sbb
test
cmp
dec
fsubrl
dec
sbb
filds
mov
add
out
and
cmp
or
adc
ret
sbb
aas
clc
mov
adc
adc
ja
add
adc
scas
mov
aaa
adc
xchg
arpl
test
add
xor
mov
test
incl
icebp
sub
sub
and
adc
test
iret
add
cmp
xchg
outsl
rclb
cmp
aaa
mov
outsl
js
movsb
arpl
or
dec
jge
arpl
mov
int3
jg
lods
sbbb
mov
sub
pop
add
popa
ss
insb
testl
mov
or
xor
adc
xor
fimuls
roll
mov
out
xor
sahf
das
jne
js
dec
test
push
repz
inc
push
add
loope
push
adc
shrb
adc
cltd
sahf
sbb
test
push
adc
test
sahf
push
xchg
cmpsl
xor
int3
lahf
and
jmp
test
adc
sbb
pop
dec
cwtl
outsl
repz
dec
mov
iret
or
pop
repnz
and
addl
pop
and
jo
and
clc
xor
push
jo
xchg
sbb
xlat
andb
mov
adc
xor
pop
test
xor
addb
xor
icebp
xchg
enter
dec
add
test
or
xchg
and
add
adc
and
jo
add
in
fimull
mov
cmp
adc
rorb
lods
and
mov
fs
enter
mov
dec
add
adc
int
and
shlb
mov
dec
les
fsubrs
inc
cmp
shrl
and
xor
aam
and
push
stc
sbb
add
icebp
xchg
sub
jns
pop
and
dec
dec
adc
xor
fmul
sbb
dec
jg
insb
addl
icebp
loopne
inc
mov
pop
aas
icebp
push
inc
in
fsubs
hlt
add
pop
enter
cmp
inc
dec
push
push
add
xchg
mov
pop
icebp
mov
xchg
mov
inc
cmp
lret
add
xor
or
dec
inc
enter
inc
pushf
mov
fs
je
out
xchg
fcompl
pop
sbb
or
push
push
pushf
cmp
nop
or
dec
push
pushf
sub
mov
lods
pushf
or
or
and
xor
cmp
stos
mov
aaa
imul
and
jns
inc
insl
and
xor
cmpsb
cmp
adc
inc
cmc
mov
sbb
inc
arpl
mov
sti
adc
mov
ret
fisubl
cmp
mov
sti
pop
cwtl
stos
or
or
sub
or
sbbb
add
icebp
push
mov
jmp
clc
outsb
lock
sahf
dec
mov
jb
ljmp
notb
and
fdivr
dec
test
scas
pop
cmpsl
mov
inc
ja
sbb
es
nop
push
or
sub
popa
mov
icebp
xor
pop
push
stos
outsl
out
xor
adc
fsts
adc
pop
outsb
jl
pop
push
cmpb
call
push
push
mov
cmp
ud2
ds
inc
movsl
popa
imull
or
or
les
hlt
or
dec
mov
sbb
mov
push
add
ds
stc
and
mov
push
ds
sahf
movsb
loopne
iret
hlt
or
dec
ror
pop
dec
inc
incl
inc
jae
jns
fadds
in
and
mov
jns
push
ficoml
int
js
push
mov
outsb
mov
test
pop
pusha
mov
dec
mov
dec
daa
test
addr16
sub
dec
inc
sbb
xchg
push
pusha
lahf
lods
push
fidivl
mov
aam
data16
sbb
pop
popa
sbb
es
test
mov
rolb
dec
ret
adc
pop
stos
lret
addl
inc
dec
stos
xor
mov
cmp
mov
gs
push
and
stos
cmp
stos
out
loopne
repz
dec
cmpsb
imul
inc
mov
sti
pop
or
sbb
insb
popf
je
pop
mov
pop
stc
add
repnz
insb
push
mov
insb
inc
cmpsl
inc
dec
cmpsl
insb
pop
mov
cmpsl
dec
out
out
cmpsb
out
les
sbb
or
rorb
mov
cli
push
popf
insb
mov
loope
inc
and
jb
and
or
jmp
fs
es
pop
jle
dec
lock
or
mov
or
sub
sahf
scas
or
xor
repz
loop
jo
cwtl
cmp
xor
pop
inc
mov
gs
dec
pusha
aas
mov
das
rol
cltd
cmp
jmp
push
dec
mov
xor
lcall
stc
pusha
scas
add
adc
sub
sub
xor
pop
add
loop,pt
push
ret
fimuls
sub
add
cmp
sub
xchg
pusha
test
mov
mov
mov
sub
pop
fnstenv
pop
ret
inc
in
sub
lcall
dec
cmp
enter
and
ds
sub
jno
push
lahf
subb
int
and
cmp
dec
in
pushf
cmp
ficoml
push
stc
mov
ljmp
inc
cmp
shll
mov
ljmp
lods
pop
xlat
popf
xor
dec
mov
xchg
mov
stc
pop
bound
loopne
dec
mov
std
movsl
es
push
lods
xor
iret
sub
and
dec
enter
adc
negl
sub
dec
mov
ja
pop
lods
aad
dec
lret
repnz
js
sahf
push
xchg
sub
or
sub
or
test
add
push
push
in
test
jl
sbb
sbb
mov
imul
fmuls
in
sbb
arpl
into
xchg
jo
icebp
or
push
sub
shrb
cmpsb
data16
cmpsl
push
add
xor
enter
mov
in
and
popa
dec
lods
adc
xor
xor
xchg
jae
mov
into
pusha
enter
ficoml
sti
jl
jns
pushf
xchg
mov
stc
mov
outsb
aad
xchg
jge
adc
cmp
je
test
dec
or
inc
int3
test
mov
loope
sbb
sbb
pop
jecxz
adc
sub
pop
cmpsl
dec
jl
adc
js
popa
test
xchg
mov
dec
xchg
lret
dec
cmp
dec
in
xor
sbb
inc
enter
push
adc
in
sbb
inc
pop
adcb
push
int3
les
clc
push
ret
cltd
sub
and
fcomps
adc
int3
jo
add
arpl
lods
cwtl
inc
inc
add
js
and
in
xor
orl
insb
mov
enter
push
jnp
sahf
add
addl
jnp
and
jp
movsb
mov
loopne
clc
adc
cmp
jle
xor
jnp
data16
pusha
cltd
inc
hlt
sbb
or
mov
inc
loop
cmp
or
xor
xor
int
inc
xor
dec
inc
adc
adc
sbb
sarb
fcomps
test
les
jge
push
dec
mov
jno
inc
pushf
jno
insb
enter
push
adc
mov
and
mov
mov
fisubl
xchg
dec
call
shl
ss
pop
dec
arpl
or
cmp
call
add
adc
dec
inc
and
sbbb
add
dec
enter
push
adc
xor
jecxz
je
push
lcall
and
jge
mov
bsf
add
mov
lds
in
xor
in
mov
arpl
lods
jl
jb
adc
mov
cmp
jne
and
in
jno
jns
loope
adc
dec
jecxz
push
dec
bound
int3
outsl
cmp
mov
xor
rorl
dec
inc
add
popf
mov
shl
mov
sbb
or
pop
imul
rcpps
inc
mov
daa
subl
mov
sub
or
dec
push
mov
lret
pushf
sbb
dec
adc
pop
push
push
cmp
insb
mov
add
cmp
sahf
add
push
push
loop
sub
je
push
movsb
outsb
pushf
clc
call
je
add
xchg
inc
push
jo
mov
adc
sar
icebp
aam
inc
and
repz
mov
xor
mov
dec
adc
push
mov
sub
dec
pusha
cmpl
mov
mov
dec
cwtl
adcl
mov
mov
int3
or
fmull
in
dec
call
dec
cld
clc
mov
sub
cmp
or
or
sbb
sbb
cmp
mov
add
pop
dec
pop
adcl
pop
clc
mov
loop
loope
mov
or
test
xor
adcl
rorb
loopne
cld
xor
lds
enter
adc
adc
mov
add
dec
inc
addl
mov
je
jo
mov
adcb
xor
cli
mov
cmc
imul
in
adc
mov
daa
sbb
mov
mov
dec
int3
xchg
inc
repz
lret
or
and
les
ss
inc
dec
xor
adc
test
pop
int
sub
in
lret
dec
movsl
push
add
lods
xchg
push
adc
mov
push
pop
push
add
adc
in
add
in
sarb
xor
sbb
add
or
fadd
dec
adc
xchg
int3
adc
inc
enter
jl
jno
jle
outsb
loopne
mov
enter
add
test
jne
dec
sahf
mov
pop
sub
and
fs
push
dec
fmull
sub
bound
inc
ja
dec
pop
and
and
inc
inc
adc
mov
pop
popa
lock
inc
adc
xchg
lock
mov
in
cld
popa
test
adc
dec
imul
pusha
xor
enter
sub
dec
dec
js
fcoms
or
adc
in
add
inc
adc
pop
adcb
jns
mov
xchg
sbb
pusha
cmp
mov
dec
adc
lods
push
xor
in
stc
push
inc
jbe
inc
nop
icebp
inc
and
in
icebp
jno
outsl
sbb
rolb
mov
sub
inc
mov
dec
dec
or
adc
add
xor
push
rclb
mov
add
lea
imul
cmpl
add
jp
adc
subb
adc
cmp
mov
pushf
gs
xor
jecxz
adc
sub
pushf
test
pushf
enter
int
mov
dec
mov
outsb
and
pushaw
jno
mov
xor
cmp
data16
jae
jb
out
cmpsl
adc
xchg
leave
repnz
hlt
lret
mov
icebp
loope
adc
ss
dec
faddl
cltd
arpl
insb
dec
pop
test
outsb
push
insb
and
imul
lds
sub
clc
dec
xor
jl
pop
in
xchg
sbbb
xor
lods
into
aas
loope
rep
dec
outsb
or
je
or
push
xchg
leave
repnz
sbb
add
adc
xor
scas
test
and
or
hlt
push
cmpsl
xor
adc
leave
push
imul
je
push
add
xor
cmp
mov
add
aam
mov
and
pop
pop
sbb
outsb
shlb
sbb
mov
repnz
and
lret
push
adcl
ss
dec
ss
add
ljmp
repnz
inc
outsb
jge
insb
and
cmp
cmp
and
fldt
dec
cmp
rorb
out
cmp
cltd
cmp
lods
loopne
arpl
jns
fnstsw
cld
jmp
lret
je
push
pushf
sub
adc
adc
insb
repnz
fwait
sar
flds
in
call
push
jg
sbb
push
outsb
sub
lock
push
sar
mov
dec
mov
inc
ror
inc
pop
movsb
fsubrl
out
mov
rolb
in
popf
jg
outsb
nop
push
popf
inc
jp
sub
shrb
cmpsb
dec
inc
aaa
cmp
jge
sub
pushf
fs
lret
pop
push
inc
nop
pop
jge
cwtl
and
iret
in
test
mov
xlat
dec
jl
add
ss
lcall
movsb
insl
dec
mov
fs
jns
loop
les
imul
push
xor
bound
push
cld
mov
mov
inc
sbb
ja
sbb
and
insl
js
xor
add
pop
inc
mov
dec
jnp
sbb
inc
repz
jo
test
pop
mov
mov
push
cmp
repnz
xchg
pusha
add
adc
test
addb
dec
add
orl
cmp
clc
insb
arpl
das
sbb
inc
cmp
popa
in
aam
sbb
xor
sbb
cld
movsl
pop
aam
jg
aad
dec
mov
dec
sub
enter
popl
xor
jle
lods
sub
pop
adc
sub
insl
pushf
fmuls
sub
dec
jno
inc
adc
test
xor
pop
ss
push
aad
js
test
andb
incl
sub
jge
std
or
fadds
dec
call
test
dec
adc
dec
pop
mov
and
push
lret
popa
mov
jno
push
rcrb
pop
and
cmp
adc
aam
pop
xchg
stos
mov
sbb
add
adc
sub
int3
add
fwait
fs
cmpsb
xorl
adc
test
adc
ss
push
dec
test
sub
lods
dec
sbbl
dec
in
dec
nop
mov
sbb
in
jle
bound
clc
push
das
jl
in
cmp
arpl
inc
cmp
cmp
add
xchg
inc
or
push
outsb
xchg
jle
scas
cltd
clc
push
mov
les
xor
jl
push
subl
fs
cmp
sub
popa
js
add
arpl
fmuls
stos
add
cs
mov
cmp
test
or
mov
jns
in
or
xor
cli
mov
push
add
xchg
in
lds
sbb
inc
or
daa
jg
or
push
inc
test
mov
test
push
imul
daa
jns
nop
dec
push
repnz
pop
add
stos
es
mov
out
outsb
cmp
xchg
cmp
xchg
or
sahf
cmp
jo
dec
pop
mov
lock
imul
int3
cmp
les
and
dec
or
arpl
sbb
or
xchg
lahf
and
outsb
push
adc
jl
lods
pop
dec
rorb
sbb
cmpsb
mov
mov
aam
in
cmp
xchg
pop
mov
imul
sbb
loopne
sub
int
enter
lret
adc
and
cmp
hlt
mov
aas
jo
ljmp
adc
sahf
imul
add
divl
repz
push
and
inc
stos
es
mov
rcrb
inc
push
mov
icebp
mov
pop
add
aad
push
fs
dec
fbstp
cmpsb
pop
or
ss
icebp
push
push
mov
mov
inc
add
cwtl
aam
mov
aam
imul
fcompl
fldl
orb
dec
or
jle
xor
pop
dec
lock
adc
fs
test
insb
inc
imul
imul
or
in
jb
push
xchg
xor
add
inc
and
inc
test
push
xor
sub
or
dec
mov
shlb
jno
jb
inc
jo
push
pusha
mov
cmc
jo
insl
pause
and
subl
jge
pop
mov
push
adc
sbb
int
fwait
jns
sub
jmp
cmp
inc
jnp
add
mov
jge
outsl
or
call
dec
adc
icebp
and
sub
scas
or
in
inc
inc
inc
or
int3
test
xor
inc
adc
push
xchg
into
pop
cmp
mov
xchg
cld
jo
outsb
mov
lods
movsl
or
sbb
pop
rcrb
dec
cwtl
and
jnp
and
inc
imul
outsb
and
jo
loop
xorl
fs
enter
mov
out
push
jp
in
push
jg
sub
lods
add
inc
andb
scas
or
andps
outsl
mov
test
xor
mov
mov
js,pt
mov
lcall
js
xor
adc
push
mov
dec
cltd
mov
add
cmp
push
fmull
inc
lahf
and
fcompl
push
out
jmp
cli
sub
adc
and
nop
inc
and
mov
sub
pop
or
leave
sbb
aam
adcl
jl
or
lretw
out
inc
hlt
mov
sbb
push
and
movsb
adc
cltd
dec
insb
push
and
sub
sub
push
xchg
add
lock
imul
cmpb
mov
insb
add
push
xor
lods
xor
cmpsl
mov
dec
push
inc
or
pop
lea
fmuls
jl
inc
in
mov
inc
cs
data16
in
push
test
inc
inc
or
mov
pop
sbb
add
push
mov
dec
add
cs
pop
stos
data16
or
push
cmp
mov
sub
xchg
inc
push
icebp
adc
sub
sub
insl
pop
pop
jge
mov
sub
lock
sahf
pop
jge
inc
pop
rcll
cmpb
add
adc
popf
cmp
sti
out
dec
int3
and
repz
imul
lret
inc
inc
jle
push
mov
in
adc
and
push
and
inc
in
mov
mov
dec
sahf
add
rolb
push
es
dec
sub
cmp
pop
dec
roll
cltd
xor
push
xchg
inc
cmp
pop
popa
add
dec
xchg
in
cmp
ljmp
jae
dec
xor
dec
or
push
jns
or
sahf
data16
push
inc
cwtl
bound
and
sbb
arpl
pushf
jo
push
aaa
cmp
sbb
fidivl
das
pop
mov
dec
and
icebp
and
sahf
add
enter
dec
inc
jo
pop
cltd
push
dec
lock
inc
popa
push
sub
lahf
sbb
int3
fistps
fldlg2
jg
sub
add
shll
stos
sbb
cmp
data16
or
mov
movb
push
fcoml
push
xor
test
or
inc
jge
push
stc
jns
or
pusha
xchg
rcl
inc
or
xchg
push
pusha
cld
push
dec
dec
or
mov
xor
push
push
inc
je
loop
je
dec
imul
and
sbb
cmp
push
jns
push
in
mov
pop
hlt
imul
or
jle
sbb
loope
sub
and
xor
or
inc
lods
push
mov
leave
push
decl
inc
mov
jb
jno
push
jle
lcall
push
lock
inc
xchg
jnp
jl
pop
mov
mov
mov
and
shrb
sub
outsl
inc
bound
insb
mov
or
inc
clc
adcl
imul
dec
cltd
xor
sub
js,pn
shlb
sahf
push
imul
orl
in
inc
adc
cmp
shrb
gs
out
bound
rorb
mov
ret
pop
es
push
sub
push
and
dec
inc
lods
adc
mov
push
and
sub
sbb
push
in
insb
mov
shlb
add
mov
imul
dec
sub
add
int
les
dec
in
inc
add
test
inc
or
orl
adc
imul
js
int
es
inc
adc
sub
jb
pop
or
adc
push
dec
leave
fdivrs
call
sbb
lcall
int3
mov
jbe
int
dec
sbb
int
sbb
adc
and
xorl
or
pop
cmp
jp
and
scas
je
pop
xchg
cld
inc
and
loope
adc
and
inc
inc
and
sarb
in
jge
clc
cmpsb
dec
pop
and
add
push
adc
cmp
shl
adc
inc
addb
sbb
jbe
stos
sub
pop
je
rclb
cmp
fsubrs
pop
enter
xchg
pop
mov
mov
pop
add
xchg
sub
pop
cmp
insb
cmp
push
stos
mov
in
cmc
repnz
pop
pusha
push
pusha
jle
add
and
mov
pushf
xchg
popf
ret
sbb
outsb
sub
and
sub
scas
or
cmp
fisubl
jo
repnz
cmp
or
xchg
test
ficoms
mov
lods
sub
cmp
enter
mov
test
dec
mov
jns
push
js
iret
insb
cltd
inc
sub
fnstcw
and
lock
inc
pop
xor
int
jle
stos
adc
sbb
jnp
int3
sahf
jecxz
mov
mov
xchg
sub
push
inc
inc
es
sub
fs
fcompl
dec
dec
das
sub
dec
jb
cld
lock
sbb
inc
dec
adc
mov
aaa
push
cmp
call
push
test
inc
fldcw
and
and
pop
and
xor
nop
sbb
pop
andb
or
insl
pop
adc
mov
push
fldcw
sbb
mov
pusha
sub
cwtl
pop
mov
ds
xchg
sub
push
xchg
sub
lret
faddp
cld
addr16
push
pop
push
mov
addl
insl
push
pop
and
stos
or
adc
andl
ja
inc
stos
inc
sbb
daa
inc
or
cwtl
cmp
jne
xchg
sub
or
push
mov
adc
mov
sbb
pop
dec
add
mov
and
add
fmull
inc
jne
xor
shrb
and
and
add
xchg
push
in
outsl
xchg
or
pushf
inc
inc
sub
nop
jg
push
pop
cmp
stc
xchg
inc
xor
loopne
loopne
and
or
dec
push
insl
cmp
imul
mov
jle
mov
mov
fdivl
int3
jo
in
fbld
fadds
ds
neg
inc
and
lahf
es
jg
inc
inc
pop
lock
js
inc
adc
and
out
test
sub
dec
pop
call
syscall
inc
daa
outsb
jp
push
add
jl
push
sub
mov
cmp
lcall
lret
jp,pn
inc
lret
inc
mov
repnz
xchg
push
pop
push
ljmp
cmp
and
mov
loop
adc
rorl
mov
mov
cmp
or
clc
cmp
movsl
adc
shrw
mov
adc
pop
jo
lahf
xor
loopne
test
and
lods
lret
sbb
int3
sahf
in
mov
mov
test
cmp
jns
adc
push
adc
test
dec
sbb
dec
mov
and
inc
cmp
and
add
cmp
incb
cmp
and
popa
and
in
and
dec
inc
jns
test
inc
push
mov
pop
insl
xchg
xor
jp
dec
xchg
popf
imul
pop
jbe
into
lock
mov
mov
dec
inc
mov
ficoml
testl
xor
pop
lock
jno
adcb
push
pop
js
and
shlb
hlt
inc
ret
hlt
pop
mov
pop
mov
movsb
loop
jge
and
sub
or
clc
inc
or
out
jl
cs
xor
cmp
xchg
rcll
lods
push
jns
and
mov
outsb
and
push
jo
lea
lods
dec
sbb
mov
sbb
das
sub
adc
pop
cmp
js
popf
out
adc
add
sbb
and
xor
sub
sub
leave
sub
xor
dec
xor
imul
cmp
jmp
out
jp
popf
in
clc
xchg
fiadds
xor
loop
loopne
sbb
mov
and
sbb
adc
push
cltd
xchg
loop
cmp
lcall
imul
mov
outsb
jb
add
adc
mov
js
popl
and
ret
lods
movsb
bound
inc
leave
sbb
adc
sub
add
stos
lcall
outsb
add
xchg
int3
lock
push
in
lods
dec
lahf
cmpsb
lock
popa
inc
dec
sbb
jl
lock
or
inc
xchg
jp
pop
or
addr16
mov
orl
dec
mov
rclb
lret
adc
pop
rcrl
aad
jbe
xchg
mov
imul
pop
xor
jl
add
enter
idivl
push
out
push
or
aad
adc
pusha
fsts
inc
leave
fsubs
adc
add
mov
daa
or
or
movsb
dec
push
xor
and
cltd
inc
adc
pop
andb
cmp
orl
sub
sbb
sbb
cmp
push
sub
movsl
insl
push
xorb
and
push
pop
push
jp
xchg
call
and
mov
insb
fldcw
lods
cmp
out
test
outsb
popf
and
or
addb
das
stc
jle
and
or
addb
inc
xlat
lods
cmp
xchg
int
nop
sub
outsb
mov
rcrb
and
and
mov
lods
jp
scas
pop
insl
mov
and
repz
insl
dec
shrb
pop
cmpsl
mov
push
add
cmpsl
int
xchg
and
scas
outsb
inc
push
dec
fdivs
daa
mov
adc
mov
rolb
fmul
inc
push
dec
dec
lret
pop
popf
repnz
jl
sub
xchg
mov
stos
pop
jmp
push
sub
add
push
push
lock
dec
xchg
fimull
mov
push
repnz
icebp
sbb
dec
xchg
cld
mov
adc
xor
enter
dec
pop
ljmp
in
gs
leave
or
jb
cmp
and
xchg
pop
xor
mov
mov
mov
outsb
xor
insb
or
ficompl
lret
int
inc
cmpsl
jno
jl
jp
add
pusha
addr16
add
inc
mov
lock
push
push
rcl
outsl
dec
lock
dec
mov
fimuls
add
adc
dec
xor
cmp
int3
mov
or
pop
push
mov
jnp
add
aam
call
pop
and
sub
dec
push
xchg
sbb
sub
jns
mov
cmp
xor
add
stos
jb
bound
es
sbb
scas
test
dec
mov
inc
imull
xor
ficompl
jl
add
push
push
js
lock
jmp
sbb
lock
or
pushf
push
xor
cld
jle
scas
into
cmpsl
movsl
aad
sub
stos
cmpl
adc
jae
pop
or
hlt
pop
mov
cmpl
lret
jp
mov
or
mov
ret
int3
xchg
test
adc
ss
sbb
push
push
adc
insb
jb
fnstenv
mov
inc
fldcw
daa
arpl
mov
or
xor
jnp
sbb
int
dec
or
inc
or
int3
jnp
lcall
out
hlt
pop
andb
push
mov
and
add
jle
pop
mov
mov
subl
push
hlt
mov
inc
js
mov
jle
das
int
push
popa
xchg
fs
mov
lods
pop
sbb
shlb
xor
pop
aaa
cltd
lods
sbb
dec
popf
xor
pushf
fsubr
bound
loop
dec
sbb
push
leave
loop
pop
push
scas
push
pop
mov
or
enter
jne
and
nop
dec
push
inc
idiv
mov
pop
adc
clc
sub
fsubrp
cmp
subb
push
je
adc
pop
cmp
add
xor
sub
movsb
xor
cmpsb
push
xlat
inc
lods
or
dec
adc
andb
sub
dec
jno
dec
mov
jl
clc
xchg
xor
shrb
and
xor
xor
xchg
add
pop
sahf
mov
inc
popa
or
push
sub
sahf
cmp
insl
mov
loop
cmp
fidivl
push
xchg
iret
cmpsl
and
fmull
push
in
pop
pop
dec
sub
xor
lcall
add
adc
stc
movsb
ret
daa
cmp
pop
enter
data16
sub
cwtl
add
xchg
dec
or
pop
mov
cmp
rolb
and
inc
xchg
sbb
mov
dec
data16
pop
cmp
lds
cmp
loopne,pt
pop
xor
clc
rcrb
sub
and
sub
pop
push
ds
shl
pop
inc
mov
cmp
es
add
orl
jle
dec
xor
add
pop
faddl
lret
sub
in
push
inc
xchg
imulb
push
jmp
or
cmp
dec
push
movsl
or
pushf
push
cwtl
pusha
xor
push
pop
pop
cwtl
pusha
sti
sahf
lock
jno
pop
and
negl
test
movsl
push
bound
fs
mov
bound
lcall
insb
or
ficoms
jg
sub
mov
cmp
cmp
inc
pop
shrl
pop
add
adcb
outsb
fcmovnu
xor
addl
ds
or
pusha
xchg
dec
jl
inc
adc
push
fisubl
test
inc
jle
pusha
jnp
fmull
popa
shr
mov
or
imul
sub
dec
cmp
push
mov
xchg
fsubrl
int3
sub
or
mov
mov
ds
inc
dec
lods
aaa
stos
out
and
mov
jle
inc
sub
push
and
mov
sub
adcl
subb
and
push
inc
call
popa
jne
mov
lods
sbb
adc
mov
mov
or
xchg
enter
adc
push
jne
cmp
pop
movsb
dec
lcall
subb
add
xchg
xchg
les
dec
mov
sub
inc
xchg
shrb
lahf
movsb
sahf
flds
pop
mov
lods
or
lods
inc
lods
mov
add
push
daa
push
mov
and
inc
dec
sahf
xchg
pop
jge
sub
or
cmp
stos
popf
xchg
mov
xchg
dec
adc
and
sub
or
push
rclb
sub
jo
pop
ficompl
pop
push
rcrb
outsl
fimuls
sub
push
mov
scas
sbb
leave
and
dec
sub
mov
cmp
cmp
or
movsb
enter
mov
inc
sbb
sahf
xor
test
and
jnp
dec
les
xchg
xchg
loop
dec
adc
push
daa
dec
scas
dec
xor
mov
inc
ret
adc
popa
mov
insb
jb
xchg
mov
sbb
jp
xor
sahf
mov
sub
clc
nop
sub
daa
sahf
jnp
cmp
daa
cltd
sbb
lret
call
xchg
jle
sub
inc
add
mov
mov
lock
dec
bound
inc
or
jge
popa
mov
cld
mov
push
pop
mov
sbb
mov
insl
xor
nop
sub
or
and
cmp
dec
xchg
adc
mov
out
mov
pop
lret
mov
jp
mov
pop
jne
mov
sub
ss
insl
ret
add
lea
icebp
pop
jno
jbe
pop
sub
lods
sub
insb
pop
sahf
enter
aaa
mov
xor
pop
dec
ds
lea
lock
fisubrs
std
aaa
cwtl
testb
adc
sti
cwtl
xchg
js
je
xchg
mov
int
mov
adc
lods
leave
lock
inc
call
repz
fwait
jge
dec
nop
in
jmp
or
sub
sub
add
dec
and
mov
add
jno
add
fchs
add
jbe
shlb
repnz
or
test
sub
jbe
test
ret
and
adc
add
dec
inc
or
jb
sub
jb
and
fadds
or
mov
add
cmp
adc
pop
scas
or
or
cmp
lods
stos
xchg
or
push
inc
or
jb
sbb
hlt
push
or
hlt
insb
or
adc
dec
adc
or
movsb
mov
or
mov
mov
mov
add
add
sar
outsl
adc
sbb
dec
mov
loopne
insl
cmpsw
lret
dec
xchg
add
or
mov
mov
clc
mov
fs
es
decl
xchg
mov
pop
adc
imul
push
jl
test
push
rcrb
loope
into
orl
rcl
cmp
imul
int3
pusha
push
xchg
rcr
inc
insl
push
enter
bound
mov
imul
enter
push
adc
data16
call
pushf
cmp
xchg
mov
stc
or
xor
add
mov
push
pop
out
jp
dec
int3
and
push
xor
mov
inc
xchg
out
adc
inc
push
jle
inc
loop
cmp
je
xchg
sahf
mov
pop
out
ret
dec
fcoml
test
mov
in
ss
add
xlat
lea
push
mov
lods
mov
adc
xchg
les
xor
cmp
js
dec
rolb
xchg
test
dec
testl
mov
dec
aam
xor
mov
stc
or
inc
bound
jbe
cld
jle
les
xor
xchg
es
dec
stc
rcrb
sarb
pusha
dec
xor
mov
popa
pop
pop
adc
dec
js
mov
insb
xchg
sub
xorb
adc
or
or
lods
jmp
sbb
pop
xor
mov
lods
insb
sbb
dec
xor
inc
divb
mov
mov
xchg
mov
in
and
insb
js
inc
mov
addb
pop
xchg
inc
xor
and
icebp
push
add
data16
mov
test
add
and
mov
inc
add
imul
rcrb
inc
pop
outsb
mov
shrb
icebp
lods
outsb
cmp
cmp
or
pop
outsb
bound
iret
in
add
or
js
pusha
push
sub
shll
add
xor
popf
add
out
nop
xchg
aam
repnz
nop
xchg
mov
lock
add
push
movsb
addr16
adc
jmp
outsl
dec
stos
insb
int3
rorl
mov
mov
push
cmp
and
xchg
or
test
or
or
or
jecxz
lods
aam
leave
dec
sbb
dec
xchg
add
add
sbb
cmp
xorl
testl
test
sub
xor
xchg
sub
and
adc
xchg
int3
cmp
xor
add
jg
xchg
and
insl
addr16
fimull
imul
or
sbbb
lods
cmp
xor
inc
pop
jge
idivl
jmp
dec
pop
dec
outsb
dec
and
push
inc
pop
pop
je
add
cli
push
lret
mov
dec
sbb
add
jle
sub
xchg
cmp
in
dec
dec
push
push
mov
mov
mov
xchg
adc
out
or
adc
subl
sahf
rol
aaa
lret
adc
clc
js
cmc
push
inc
aad
gs
jbe
add
nop
movsl
inc
pushf
add
push
in
out
pop
js
mov
or
addr16
push
or
mov
and
pop
pop
negl
push
daa
outsb
repnz
cmc
jo
mov
cmp
jne
call
push
adc
fidivrl
loop
mov
iret
out
insl
mov
sub
ret
cld
movsb
call
inc
subb
hlt
push
push
sub
pop
dec
stos
cmp
mov
int
std
stos
fistpl
out
and
fldenv
repnz
and
mov
or
push
je
cs
adc
fnstenv
sub
pop
pop
int3
inc
jnp
jne
dec
je
xor
inc
xchg
prefetchwt1
outsb
mov
push
add
pop
lcall
mov
sub
or
xor
adc
sub
pop
mov
ror
or
inc
pusha
jmp
push
inc
xorb
cmp
incb
jbe
ret
fnsave
xchg
push
sbb
or
push
sub
xchg
cmpb
pop
jo
sbb
je
adc
jge
mov
push
aam
jo
andl
imul
in
cmpsb
leave
inc
cld
stos
ret
and
mov
push
rorb
addl
push
les
je
lock
mov
pop
lock
mov
popa
testl
xor
movups
test
imul
mov
push
arpl
cmc
lock
jne
pop
stos
lret
ljmp
stos
adc
cmp
xor
xchg
gs
rcrb
push
adc
in
inc
in
push
ljmp
enter
mov
push
adc
movsb
add
sub
test
pop
data16
lahf
or
fsubr
les
pop
inc
or
test
xor
xchg
dec
dec
inc
inc
inc
insb
rorb
insb
push
xchg
sub
xchg
je
and
mov
fmul
lods
mov
loope
movsl
push
movsb
dec
mov
inc
in
inc
sub
inc
add
ds
je
push
lock
cli
inc
rcrb
shrl
fsubrs
and
subl
jl
mov
lock
les
outsl
in
push
xchg
pop
fstps
sub
jle
fwait
jp
orb
push
xor
cwtl
add
shrb
jno
nop
mov
and
push
mov
jnp
das
cli
jo
lods
push
and
push
inc
dec
pop
inc
sbb
push
fcompl
adc
lahf
fs
lret
sahf
pop
pop
and
xlat
int3
xchg
inc
cmpsl
fs
in
jp
push
mov
leave
lds
rclb
jl
pop
lea
jl
dec
pushw
and
inc
jmp
sbb
xor
sbbb
outsb
rcrb
sbb
inc
stos
in
adc
outsb
mov
mov
inc
mov
mov
and
adc
int3
xor
enter
mov
add
mov
pop
dec
xor
inc
ja
repnz
cs
mov
in
mov
push
push
inc
sub
pushf
mov
sub
inc
movsb
loopne
dec
add
cmp
arpl
pop
mov
cmpsb
push
lcall
push
jle
adc
lods
add
aas
mov
insb
push
fucomip
enter
les
pop
scas
lock
xchg
testb
ss
lcall
das
jns
jp
nop
and
lret
ret
and
ljmp
push
pop
pop
popa
mov
aas
inc
and
dec
ja
cmp
inc
lods
xor
cmp
ja,pn
push
cmp
mov
or
movsb
int3
outsl
stos
js
pusha
popf
sti
cmp
data16
mov
nop
mov
inc
int
add
bound
rcrl
inc
outsb
add
test
inc
movsl
xchg
lods
mull
arpl
xchg
scas
push
lcall
or
dec
pop
sbb
inc
movsl
xor
dec
andl
inc
xchg
add
ret
push
xlat
cmp
movsb
adc
or
inc
inc
ficoml
adc
lea
enter
fldt
addl
mov
sbb
lret
sbb
cld
cwtl
and
popf
adc
stos
or
cli
je
rclb
ret
or
sbb
out
pushf
out
push
sti
xchg
mov
lods
and
jle
and
outsb
js
fs
cmp
cld
adc
aaa
jb
popa
orb
inc
data16
mov
pop
jo
and
pop
jne
rclb
add
das
dec
and
lret
rolb
mov
fyl2x
sbb
mov
cmpsl
daa
push
dec
lock
out
jle
xchg
cmp
sub
out
jp
inc
adc
inc
or
ret
lock
rclb
lods
cwtl
je
jle
mov
mov
pop
push
subb
arpl
jb
sahf
inc
rcrl
jbe
and
inc
ret
pusha
sub
mov
sbb
pop
icebp
xchg
js
rcll
pop
and
or
int
jmp
sub
in
sub
push
das
mov
adc
adc
int3
add
mov
mov
test
f2xm1
inc
mov
push
and
pop
mov
and
sub
nop
inc
rcrb
jb
int
sahf
xor
push
stc
push
dec
push
ret
mov
push
cmp
out
mov
cmc
xor
mov
inc
pop
add
test
cli
movsl
sbb
mov
jo
mov
cmp
and
das
call
pop
mov
jbe
pop
cmp
or
insl
dec
dec
add
xor
insb
pop
pop
add
dec
push
les
inc
scas
sbb
xor
pop
je
aam
cmp
sbb
insb
fdivrs
sbb
xlat
mov
mov
cmpb
sbb
mov
ss
orb
cwtl
mov
cld
and
xchg
inc
in
xchg
or
bound
sub
xor
sub
sbb
mulb
pop
ja
lods
sbb
outsl
rorb
pushf
mov
mov
cmpxchg
push
in
push
push
push
stos
mov
or
inc
or
in
divl
icebp
push
mov
fiadds
dec
jo
cmc
and
pop
andb
dec
jo
push
adc
inc
xlat
bound
pop
pop
sahf
movsb
jl
push
das
insb
fstps
lods
sar
push
sbb
test
shl
pop
cltd
or
insb
adc
std
sub
imul
mov
jle
icebp
add
jl
pop
fsubs
ret
cmp
test
pop
add
adc
xchg
cmp
jl
adc
push
pop
js
cmpsb
or
test
push
pop
push
decb
cmp
sahf
xor
push
push
inc
push
add
gs
aad
inc
jns
sub
clc
adc
mov
sub
xchg
push
fbld
int
mov
jp
pop
imul
mov
mov
mov
pop
pop
hlt
test
lods
lods
dec
dec
shrl
sbb
dec
cld
pop
repnz
daa
outsb
aad
adc
ljmp
cmp
jle
push
xor
cmp
mov
sti
xor
xchg
mov
push
xchg
fildll
jb
mov
pop
jge
adc
in
dec
leave
cmpsb
cmp
scas
lea
dec
icebp
add
cmp
cmp
push
cli
push
lods
dec
push
xorl
aad
cmp
push
ret
cmpsl
ja
rorl
cwtd
inc
mov
test
sub
leave
stc
ds
hlt
add
scas
add
out
call
pop
xchg
andb
in
dec
pop
push
dec
in
inc
or
dec
ljmp
je
insl
pop
outsl
mov
pop
imulb
stos
cmp
dec
dec
cli
ljmp
push
mov
cmp
movsl
nop
jp
and
das
in
into
ret
sub
repnz
lds
inc
andb
dec
bound
jecxz
dec
ds
out
in
pop
add
mov
add
adc
jmp
adc
sub
stos
pop
test
push
pop
icebp
or
sub
push
fidivrs
movsl
stos
out
jp
or
pop
mov
xchg
inc
mov
or
mov
xchg
or
lahf
push
dec
inc
cmp
inc
xor
ficomps
int3
imul
jle
push
call
sub
inc
mov
xchg
fbstp
cmp
dec
insb
fbld
scas
jl
dec
stos
pop
xchg
clc
popf
inc
repnz
sarb
aas
xor
jecxz
in
adc
push
cli
imul
ss
sti
inc
flds
add
push
in
push
mov
movsb
adc
dec
insb
dec
cmp
sbb
das
insb
mov
xchg
jp
jne
adc
cmp
adc
pop
push
adc
sbb
inc
push
sbb
and
shlb
fcomps
cs
enter
xor
gs
aad
repnz
pop
popf
rcr
std
ljmp
pop
push
shlb
icebp
dec
movsl
add
movsb
push
jg
sbb
jle
pusha
outsl
insl
daa
jl
push
in
push
jns
sub
in
mov
lcall
cmp
xor
cwtl
inc
scas
rclb
inc
mov
cmp
adc
xor
xchg
mov
or
pop
inc
xor
dec
dec
int
movsb
test
mov
push
push
and
mov
pushf
stc
or
imul
jno
les
mov
cli
pop
pushf
and
and
xor
cwtl
cmc
ja
test
ljmp
or
call
stc
data16
pop
lods
mov
sub
pop
mov
insl
push
es
pop
or
pop
icebp
cs
sub
xchg
push
inc
pop
cwtl
or
sbb
or
dec
dec
cmp
ja
int3
mov
push
pop
or
mov
or
push
lret
or
cs
dec
stos
insb
jge
jp
es
sbb
call
inc
jge
or
test
jp
mov
or
adc
dec
pop
dec
inc
jl
mov
mov
fdivp
out
movsl
or
ja
les
cmpsb
pop
adc
pop
arpl
js
xlat
sub
jmp
les
push
mov
and
and
icebp
inc
or
subb
inc
leave
or
mov
mov
cmp
push
lcall
mov
imul
loop
ret
js
pop
das
flds
add
and
in
pop
pop
movsb
lods
mov
call
aas
add
pop
or
sbb
inc
and
jp
fwait
cmp
sarl
jl
sbb
cmp
or
adc
sbb
mov
insb
movsb
cs
inc
arpl
add
push
pop
out
ja
sub
lods
add
daa
mov
daa
outsb
cs
cmovnp
es
mov
es
loop
outsb
push
and
insl
pop
or
xor
and
mov
shr
xchg
sbb
or
or
ljmp
inc
mov
adc
aas
push
jmp
xchg
les
scas
inc
rolb
in
jl
ljmp
daa
daa
dec
add
push
mov
shlb
addr16
cmp
and
xor
xor
mov
es
mov
mov
dec
mov
sub
lret
jb
sub
test
sbb
cmp
jle
inc
add
les
pop
cmp
sub
and
fidivrl
jb
push
into
sub
rcrb
mov
sub
xor
dec
cmp
bound
nop
gs
push
ds
and
xor
mov
sbb
xor
pushf
and
lret
fnstcw
inc
jp
movsb
push
mov
aaa
cmp
les
loope
ja
pop
inc
insb
cmp
add
mov
std
add
jns
add
push
pop
mov
mov
lds
lahf
fdivrs
xor
jp
sti
mov
insl
pop
shl
stos
fs
nop
data16
adc
in
sbb
in
les
mov
fs
scas
jg
push
sub
mov
fsubrl
pop
dec
pop
outsb
pusha
lahf
push
test
data16
pop
in
jge
int3
leave
add
push
bound
call
mov
xor
adc
dec
push
inc
cmp
or
stc
cmp
movsl
mov
jns
sub
push
mov
sahf
mov
stos
gs
lods
pop
push
sarb
mov
push
cmp
gs
push
cld
and
cmp
sub
adc
push
pusha
dec
jns
loop
lds
and
test
jle
or
jmp
data16
imul
pop
adc
jo
xchg
shrb
inc
adcb
outsl
mov
dec
jae
xchg
inc
mov
jno
mov
sub
sahf
mov
sub
into
cld
mov
cmp
sub
sti
lods
ror
and
imul
dec
ret
mov
mov
adc
scas
or
and
dec
sbb
mov
repnz
inc
jb
inc
cmp
lods
mov
mov
xchg
pusha
data16
ljmp
adc
das
scas
lret
sbb
sbb
iret
test
add
aam
les
push
pushf
test
inc
cwtl
pop
out
inc
pop
cltd
dec
cmc
inc
add
enter
enter
push
xor
outsl
xchg
or
imul
stos
mov
mov
sbb
pop
mov
adc
inc
lcall
push
arpl
jg
imul
and
stc
jb
sbb
jmp
jne
test
push
sub
jg
pop
pusha
cmp
ljmp
sahf
inc
loopne
jmp
mov
dec
sub
fsubs
xchg
int3
xchg
pop
jo
xor
inc
insl
movsl
add
dec
mov
dec
and
xor
jns
ret
push
inc
jl
shr
dec
xchg
pop
sbb
mov
cmc
fnstenv
imul
dec
adc
dec
and
add
inc
arpl
lods
adc
out
aaa
rolb
and
sti
jge
adc
cmp
inc
adc
dec
inc
push
adc
outsl
dec
fisubrl
add
pusha
outsb
mov
sub
outsl
inc
outsb
jmp
in
sbb
xor
inc
aad
xchg
and
ljmp
aad
add
xchg
loop
xor
inc
sub
mov
mov
cmpsl
inc
push
cld
ss
sbb
jns
xor
push
mov
jl
sbb
fistpll
inc
pop
lret
insl
sbb
je
dec
shll
sub
les
pop
xor
sub
shlb
jb,pn
aam
xchg
ds
mov
mov
dec
jne
lods
pop
dec
lock
and
lcall
in
inc
insb
adc
dec
pushf
into
adc
nop
test
adc
xchg
add
jnp
mov
xor
push
and
inc
outsb
enter
mov
je
dec
adc
dec
pusha
push
dec
push
popf
cmp
pop
cmc
mov
rolb
inc
jge
inc
mov
dec
mov
dec
mov
pop
das
cmp
sbb
cmp
pop
andb
loop
je
add
pushf
adc
out
call
je
movsb
mov
dec
adc
pop
lret
in
pusha
subl
xchg
xor
push
or
fcompl
rcll
jo
aam
fs
dec
insl
imul
lret
je
xchg
test
imul
inc
jg
inc
and
xor
in
in
jae
jg
and
movsl
fsubrs
mov
cmp
inc
or
lea
mov
cld
cltd
mov
add
adc
ret
adc
sub
cmp
dec
push
int
xchg
mov
inc
pusha
sub
sub
clc
dec
cmp
movsb
movsl
mov
pop
cmp
jns
push
fs
adc
push
movsb
js
sub
sbb
movsb
bound
stc
push
sub
dec
ficomps
je
adc
ds
push
movsb
lret
inc
cltd
mov
mov
call
aaa
mov
pop
xor
out
sub
repnz
inc
pusha
outsl
and
popa
test
mov
xchg
popf
push
push
imul
outsb
and
xor
dec
rolb
jns
push
pop
fdivs
rolb
lods
inc
mov
je
ja
jle
and
in
inc
out
mov
cmc
jo
fisubrl
in
cltd
push
outsb
mov
jmp
mov
icebp
mov
jl
lret
dec
and
and
sbb
ljmp
popa
jp
outsb
aam
ss
popf
cmp
sub
xchg
mov
jmp
add
test
stos
cmp
xchg
mov
inc
mov
add
lods
xchg
ret
pop
loopne
pop
in
inc
push
inc
in
leave
mov
lods
dec
pushf
fwait
in
pop
and
ret
cmp
pop
imul
cmc
out
inc
dec
je
lret
imul
xchg
mov
cmp
bound
inc
push
sarl
pop
lods
aam
int
mov
mov
es
adcb
sub
outsb
int3
lods
xchg
dec
sbb
mov
insl
cmp
test
outsl
mov
lds
sbb
jmp
out
push
fwait
fs
inc
in
xor
dec
adc
xor
xchg
hlt
and
sub
mov
and
inc
inc
cmp
or
xchg
sbb
mov
push
sub
jnp
imul
or
push
adc
insl
icebp
push
and
sbb
xchg
mov
int
pop
mov
lock
inc
fwait
push
xor
inc
xor
js
aaa
fcoms
arpl
lcall
jnp
pop
mov
inc
aam
jbe
gs
xor
mov
inc
push
cmp
mov
sbb
inc
mov
mov
hlt
rep
cli
dec
inc
test
inc
subl
push
add
push
arpl
xchg
insl
sbb
jle
jg
jne
mov
inc
inc
and
inc
push
jnp
loopne
xchg
in
ss
add
xor
rcrb
sub
pop
and
pop
lock
fwait
test
movl
adc
xchg
mov
lea
flds
jo
cld
out
and
inc
shr
adc
cmpsb
test
sub
mov
jo
jmp
pop
sub
xchg
push
push
sub
mov
push
nop
xor
and
jns
jmp
loopne
je
call
mov
cmp
arpl
lods
cwtl
scas
push
mov
xchg
popa
outsb
in
arpl
into
in
adc
scas
push
aam
push
add
pop
add
jle
sbb
cmp
cwtl
cmp
mov
jl
outsl
pop
dec
xchg
hlt
sub
push
pop
cmp
lret
es
bound
add
pop
test
aaa
mov
mov
push
mov
cmp
insb
mov
in
mov
push
mov
pushf
ret
adc
test
addr16
scas
hlt
sub
sbb
stos
and
or
jge
inc
mov
ret
sbb
setnp
pop
adc
repz
sbb
pop
das
push
xchg
xchg
xlat
push
add
int3
and
mull
sub
push
nop
call
out
ds
sbb
push
sbb
lret
mov
mov
push
adc
adc
rep
xlat
dec
add
mov
sarl
or
rcll
scas
sbb
shrl
or
sub
loope
pusha
cmpsl
or
adc
adc
pop
adc
jg
sub
icebp
jge
out
in
repnz
pusha
push
rolb
shl
aaa
repz
sti
orl
fistps
mov
push
adc
lea
mov
adc
xor
cmp
xchg
lods
out
add
insb
sbb
adc
hlt
ja
inc
or
nop
sbb
inc
jmp
sbb
xchg
or
pop
sub
adc
dec
repz
mov
sub
or
sub
add
sub
mov
mov
das
mov
xor
dec
or
add
push
sbb
rolb
icebp
cmpsb
mov
push
mov
shlb
mov
fcmovnb
lahf
fimull
pop
jne
daa
push
jo
aam
fstpt
icebp
test
and
stos
ret
sub
addr16
into
or
out
clc
jbe
icebp
mov
push
cmp
push
mov
pop
mov
loopne
jg
jmp
adc
push
adc
outsb
fisttpl
cmp
int3
inc
and
jl
loope
repnz
mov
testb
push
jo
pop
lea
dec
push
adc
sub
adc
insl
pop
inc
mov
pop
xor
add
mov
jno
icebp
push
or
add
mov
sbb
dec
mov
sub
sbb
cmp
test
adc
and
inc
add
aam
in
pusha
xor
icebp
test
pop
mov
cmp
jg
jle
loopne
jns
repz
jne
jnp
push
in
cmp
jbe
fdiv
or
mov
test
cmpb
pusha
sub
sahf
cwtl
loopne
lcall
seta
test
dec
movsb
cmpsl
pusha
mov
cmpsb
mov
or
push
mov
iret
mov
add
mov
enter
enter
enter
fdivrl
fstp
arpl
fcomp
bound
xlat
sarl
aad
sarb
roll
in
in
xchg
out
call
xor
clc
shll
mov
add
mov
adc
bound
or
sub
push
add
push
mov
into
and
pop
sub
sbb
add
pop
adc
je
or
sub
push
inc
jbe
pop
xchg
sbb
pop
nopl
sub
fs
nop
pop
sub
lea
mov
repnz
sbb
daa
push
xor
sub
test
push
jp
icebp
sub
and
stc
or
push
xchg
cs
adc
sbb
mov
adc
or
adc
sbb
pop
fs
sbb
inc
and
sbb
sbb
xchg
sub
cmpsl
mov
adc
subl
adc
adc
dec
xor
icebp
sbb
sbb
add
pop
or
loopne
inc
adc
js
adc
mov
ss
sbb
in
das
or
in
jns
inc
jp
push
sbb
adc
add
or
shl
andl
add
cs
loope
add
mov
test
repz
adc
add
or
push
mov
maskmovq
jbe
or
dec
xor
loopne
pop
or
adc
push
add
clc
adc
outsl
hlt
or
push
rorb
aam
divb
add
test
repz
negl
mov
aaa
adc
ja
shr
icebp
xchg
test
sbb
add
cmpsb
dec
mov
pusha
popa
xchg
rclb
mov
xchg
push
mov
push
in
cmp
orl
mov
popa
in
inc
mov
push
lea
adc
mov
adc
xchg
mov
jmp
cmpsl
adc
jmp
cmp
pop
add
aaa
ret
int
xchg
sub
inc
add
push
mov
xor
push
adc
stos
mov
mov
lods
push
mov
jg
sbb
mov
fisttps
lcall
sbb
stos
adc
repz
sub
clc
scas
xor
sbb
xchg
push
pop
loopne
ret
dec
xchg
fdivr
adc
jns
push
sahf
inc
push
push
mov
jle
fwait
sub
push
fsubrl
mov
cmp
test
xor
dec
in
xor
test
dec
mov
xchg
and
cmp
sub
sub
rcll
mov
in
push
mov
addl
xor
mov
lock
push
cld
mov
sbb
mov
imul
lahf
or
push
adcl
jo
lahf
or
js
mov
mov
pop
mov
ret
xor
mov
sbb
sbb
dec
cmova
in
sub
mov
sbb
mov
daa
mov
inc
stos
mov
sahf
popf
sub
xchg
stos
mov
mov
cmp
mov
ja
cld
pop
xchg
jmp
ja
icebp
fidivs
cmp
call
adcb
cmp
dec
mov
fdivl
icebp
loop
or
mov
icebp
stos
push
sub
int3
icebp
cmpsl
mov
fcoms
outsb
int3
bnd
or
mov
out
inc
movsb
cltd
sub
or
sbb
repnz
cmpsl
cwtl
mov
ret
pop
cld
test
in
stc
push
out
adc
sub
pop
sbb
sub
or
out
stc
cltd
addr16
or
fidivrs
mov
mov
out
push
adc
int3
int
std
sbb
lahf
lcall
and
popa
leave
sbb
and
std
xor
sbb
adc
mov
mov
cld
add
popa
lods
mov
test
adc
shrb
in
out
jmp
jae
jecxz
xor
pop
jne
push
fsubrs
pusha
or
inc
div
roll
mov
popa
mov
int3
iret
leave
out
xor
mov
hlt
dec
dec
dec
ror
sub
leave
xor
and
out
xor
aam
cld
sub
or
sub
dec
test
lods
lods
scas
pop
loop
jb
aas
cmp
dec
cltd
dec
or
add
adc
bound
xor
in
addb
int3
popf
out
pop
pop
pop
fbstp
fs
loope
popa
or
or
repnz
addr16
cmp
rcr
decl
xor
sub
cmp
subl
mov
clc
imul
movl
and
arpl
xor
xor
sbb
pusha
faddl
js
jnp
jmp
faddl
clc
xchg
xor
inc
enter
lret
loopne
push
stos
out
out
push
mov
add
stc
or
std
loopne
xor
stc
sti
mov
xor
outsb
lret
sub
dec
ds
add
jb
sbb
or
inc
jno
dec
in
push
jnp
or
inc
sub
jns
inc
or
jno
or
popl
aam
int3
rorb
dec
ja
push
js
or
int3
cltd
scas
int3
repnz
test
or
sub
pop
orl
in
push
jg
xchg
sub
sub
lods
enter
or
and
xor
add
out
add
inc
pop
int
test
add
repnz
or
add
enter
repnz
sbb
mov
into
repz
adc
inc
repnz
idivl
mov
cs
inc
rorl
adc
repnz
jbe
jb
mov
add
shl
dec
repnz
shl
or
pop
cmpsl
mov
push
rcr
out
repnz
xchg
cmp
sbb
or
push
test
ljmp
movsb
or
sbb
and
ljmp
xor
push
imul
xlat
shl
pop
sbb
rcl
stc
adc
iret
add
repnz
cmp
dec
loope
and
or
lsl
pop
sbb
mov
push
push
lcall
and
sti
out
xchg
push
pop
xor
pusha
or
pop
repz
sbb
pop
inc
lock
dec
fldt
and
push
jecxz
lods
sti
test
adc
xor
add
clc
push
and
cvtps2pi
inc
stos
popa
movsl
adc
idivl
mov
mov
cmp
or
sbb
repz
or
jo
push
je
jmp
push
push
ret
mov
pushf
or
out
int3
mov
insl
push
mov
mov
std
bound
fimull
inc
pop
mov
push
push
add
xor
jg
jno
sarb
pusha
aas
push
into
insb
mov
mov
xchg
nop
and
or
call
push
pusha
mov
pop
pop
mov
sti
push
mov
rol
push
xor
lahf
push
or
repnz
sbb
xor
xor
sub
or
aas
repnz
jb
and
mov
cmp
cli
lahf
cmc
js
adc
imul
mov
and
pop
sub
and
pop
sbb
aad
jg
fiaddl
repnz
in
push
sub
pop
mov
idivl
ljmp
dec
dec
es
pusha
icebp
xchg
mov
icebp
mov
repnz
mov
mov
cli
sti
sbb
ficomps
sub
call
lock
mov
and
repz
orb
inc
mov
nop
jl
jnp
in
je
ja
mov
mov
in
fs
jecxz
insl
push
outsb
dec
lock
push
xor
sbb
repnz
pop
je
repz
mov
lea
loopne
jecxz
mov
cmpsb
mov
loope
adc
xlat
shrb
in
cld
or
lahf
xchg
nop
fildl
cld
push
or
mov
add
nop
xchg
out
clc
sbb
cli
hlt
dec
shl
cld
int3
cli
es
fdivl
pop
clc
pushf
repnz
or
cld
xor
push
outsl
imul
in
stc
or
dec
add
test
cmc
repnz
sarb
call
pushf
cwtl
add
test
push
push
cwtl
cmpsl
dec
repnz
cmp
dec
jno
push
pop
xor
or
or
push
sub
cltd
fadds
ljmp
das
or
sbb
inc
sbb
or
push
gs
cmp
nop
mov
push
out
or
ljmp
mov
adc
xor
imul
cmp
icebp
pop
push
addr16
stos
int3
notb
push
push
push
enter
pop
dec
pop
popa
dec
or
or
mov
add
ss
lea
ja
jo
adc
mov
xchg
adc
mov
icebp
push
nop
push
inc
cwtl
scas
cwtl
mov
push
mov
repnz
sub
xchg
std
or
jecxz
bound
ljmp
faddl
fdivrs
repnz
or
xchg
sbb
xchg
sbb
and
xor
mov
ret
cwtl
enter
repnz
mov
xor
sub
gs
loope
mov
adc
mov
pop
and
push
push
repnz
jo
loopne
inc
push
scas
pop
dec
leave
sbb
fs
das
fisttps
push
cli
insl
es
pop
sahf
push
cwtl
mov
add
push
cmp
lret
cmp
loop
push
pop
popa
pop
and
lock
and
and
repnz
mov
jmp
test
mov
pusha
or
repnz
sbbl
les
jmp
repnz
sub
push
adc
fsubrl
lahf
lcall
movsl
fiaddl
enter
cmp
sbb
jo
mov
out
call
repnz
xorb
xor
bnd
add
pop
dec
cmp
cltd
pop
icebp
add
mov
add
adc
stc
mov
pushf
out
orb
repz
data16
shr
mov
mov
push
sti
and
add
or
or
or
mov
inc
loope
pusha
fcom
sub
jecxz
test
inc
repnz
pop
jnp
jo
int
sarl
adc
ljmp
shlb
xor
leave
inc
xor
mull
je
icebp
sub
daa
sub
lock
pop
pop
pop
or
sub
pusha
push
insb
outsb
rcl
xlat
sar
mov
arpl
mov
clc
hlt
lahf
push
xchg
xchg
in
sub
js
subl
repnz
icebp
aas
aaa
xor
hlt
sbb
add
lcall
faddl
aam
sbb
mov
sbb
jecxz
cmp
repnz
pop
fildll
ror
pop
or
imul
loop
sbb
lret
in
ja
jge
mov
pop
shl
inc
or
repnz
add
cli
notl
lods
scas
scas
jmp
or
adc
stos
or
adc
mov
hlt
fisttps
aam
out
push
push
call
nop
repnz
leave
mov
repnz
js
xorb
enter
pusha
cld
es
cmp
popa
dec
jl
mov
dec
pop
popa
add
mov
rolb
test
lods
test
lret
jo
in
push
dec
bound
cmpsl
movsb
cmpsl
push
mov
movsl
push
cwtl
sub
js
xor
popa
nop
scas
adc
adc
out
dec
pop
lret
sub
dec
mov
push
add
mov
xor
repnz
test
sbb
add
test
daa
repnz
bndldx
icebp
pop
les
or
or
add
add
jo
push
jb
sub
repz
loope
push
jno
es
jno
sub
jo
test
cmpsl
mov
mov
add
cmp
or
sbb
sbb
cmp
adc
xor
test
rorb
test
push
push
insb
insl
mov
fmul
out
jo
lods
xchg
stos
mov
xchg
icebp
shll
pusha
out
inc
inc
iret
shrb
sub
ss
adc
inc
inc
xor
mov
test
ds
test
ss
mov
push
scas
cmp
rol
or
mov
loope
mov
xor
xor
jns
add
into
out
pop
repnz
sub
xchg
lahf
add
or
add
sbb
mov
sti
hlt
and
mov
cmp
lahf
xchg
aad
sub
sub
inc
push
mov
adc
pop
rclb
mov
pushf
sahf
cwtl
in
mov
dec
lcall
in
out
repz
mov
sbb
dec
mov
int3
add
test
or
mov
repz
pop
lock
mov
int3
out
jo
jmp
out
inc
popf
rcr
jg
cli
out
push
ljmp
sarb
cld
lock
clc
negb
lock
outsl
push
push
push
stos
push
out
push
jl
lds
scas
mov
out
or
pusha
add
mov
jp
xchg
loope
cld
cs
les
lret
fstp
cmc
mov
aam
sub
or
mov
outsb
imul
clc
push
push
int3
repnz
lock
xchg
xchg
in
lcall
int
mov
aad
push
hlt
repnz
fdivl
adc
std
std
sbb
push
or
out
call
test
and
in
repz
call
cmp
jb
out
sub
loope
andl
mov
jmp
in
scas
stos
movsl
in
ror
loop
in
pavgb
je
arpl
push
jbe
cwtl
fwait
sub
insb
jno
in
addr16
push
nop
fdivrs
ja
in
fmuls
int3
and
sbb
and
repnz
push
or
sub
lock
divb
loop
jno
call
sarb
mov
dec
cmp
clc
mov
add
mov
addb
and
dec
push
daa
add
shlb
movsl
mov
pop
mov
inc
cwtl
pop
add
sub
add
or
push
in
add
or
mov
and
jo
pushf
add
insl
xchg
addl
jno
fidivrs
sahf
cwtl
push
mov
xchg
cmp
or
pop
pop
pop
or
mov
imul
loop
in
testb
out
jb
add
scas
push
adc
cs
jae
punpcklwd
repnz
xor
add
add
add
or
test
mov
push
rorb
cmp
sbb
je
sbb
or
enter
sub
pushf
fmul
je
or
or
add
mov
cmp
inc
or
sbb
clc
shlb
aaa
jge
jae
sbb
or
pop
or
icebp
mov
cltd
hlt
and
dec
or
sarl
mov
and
sub
mov
repnz
push
loop
and
add
dec
repz
push
pushf
repnz
cmp
dec
lret
addr16
nop
sub
pushf
and
fs
adc
pop
cld
mov
out
std
pushl
loope
xchg
or
icebp
mov
fs
int
cmp
in
in
or
das
push
les
adc
xlat
or
pop
clc
mov
nop
nop
inc
push
sbb
or
jmp
or
fsubp
das
xchg
nop
repnz
movsl
cmpsl
fisttps
loope
or
mov
dec
pop
sbb
and
shr
mov
pop
ja
insl
insl
rol
mov
mov
loop
sub
hlt
jo
outsb
jmp
jns
mov
out
repnz
cmp
rorb
stos
dec
sbb
mov
inc
add
mov
cmp
orb
push
push
cld
repnz
not
stc
cmc
insb
push
adc
xchg
sub
or
jo
adc
mov
or
push
cmp
call
in
rcl
adc
xchg
sub
xchg
xchg
xor
repz
enter
mov
and
shll
jg
rorb
shr
clc
leave
out
mov
sub
icebp
sub
mov
push
jno
mov
fs
data16
sub
push
dec
xchg
sbb
jl
inc
int3
loop
mov
sub
rol
push
jno
xchg
nop
fiadds
and
aam
hlt
stc
adc
xchg
test
std
pop
nop
jb
jbe
ror
in
or
cmp
mov
outsl
mov
push
pop
repnz
push
jb
lods
sahf
cwtl
faddl
jno
gs
sarb
mov
xchg
lock
rcrb
lock
xor
push
jo
inc
je
cld
je
call
loopne
lock
jnp
pop
add
adc
xchg
xor
mov
test
js
jmp
cs
sahf
ja
mov
lods
mov
inc
repnz
add
loope
jns
test
add
imul
pop
and
imul
jnp
mov
lock
fists
in
or
and
lahf
imul
lcall
cmpsb
mov
cmp
push
or
jo
icebp
icebp
jb
xchg
mov
dec
mov
insl
in
sub
loopne
repz
push
sbb
syscall
icebp
pop
or
push
pop
jo
push
pop
insb
or
je
ja
push
sub
mov
ret
ss
xor
lods
scas
fiaddl
incl
adc
wbinvd
inc
adc
loop
mov
lock
repz
xor
add
adc
lar
sbb
adc
push
push
push
sub
cli
std
sub
jnp
sub
push
stc
mov
push
sub
mov
sub
or
fdivl
push
lock
inc
lock
push
adc
and
add
sub
call
in
not
lock
out
stc
data16
fucom
das
loopne
out
dec
fisttps
mov
lahf
loopne
mov
xor
lods
sub
adc
cmp
icebp
call
testl
xchg
cmc
jmp
loopne
ljmp
ds
loopne
cltd
int3
pop
dec
or
pushf
sbb
cmpsb
and
jmp
mov
loope
adc
mov
aad
xor
xchg
mov
push
loopne
pop
cmp
cli
loop
jp
jecxz
cld
stc
mov
leave
shrb
fwait
xor
repz
std
add
fadds
xor
ljmp
sar
sub
inc
mov
mov
push
mov
es
repnz
lock
insl
push
mov
or
incb
addl
fs
sbb
pop
nop
outsl
imul
mov
mov
push
add
pop
repnz
sbb
mov
je
xor
loop
sub
std
fsubrl
mov
mov
std
clc
pop
or
loopne
mov
in
and
loopne
jns
jbe
mov
pop
nop
nop
mov
je
pop
repnz
push
mov
mov
fcmovu
inc
sub
mov
aam
int3
cmp
jno
cmp
sub
repnz
out
or
sbbl
fs
mov
dec
push
test
add
shl
clc
mov
mov
jo
scas
pop
pop
repnz
roll
in
in
or
and
inc
int3
pop
sbb
push
fnclex
sub
xor
dec
pop
fisttpll
test
inc
cmp
push
or
or
add
cld
dec
icebp
addr16
or
push
loop
aam
in
cld
mull
mov
movsl
mov
in
icebp
imul
or
repz
repnz
enter
push
add
add
lock
shlb
int3
repnz
dec
or
dec
or
dec
or
push
or
xor
and
adc
daa
xorb
mov
out
jmp
in
push
push
push
fprem
dec
loope
dec
jne
or
sbbb
imul
and
sub
orb
add
into
fidivl
aam
cmp
fisubrs
repnz
popf
mov
leave
pop
rorb
in
sub
cmpsb
mov
jae
ret
mov
out
add
pop
je
iret
xor
adc
rorb
dec
loope
ljmp
mov
lea
mov
cmp
sub
leave
or
int3
xchg
lock
lahf
outsl
imul
xchg
stos
cmpsb
es
sub
dec
add
adcl
push
daa
adcb
sub
insl
outsb
lahf
adc
ficoms
dec
repz
bound
sbb
icebp
pop
push
call
outsl
pusha
jl
push
pop
ljmp
pusha
jo
xchg
xchg
lods
fadd
sbb
fucomip
and
dec
aad
rorb
sbb
pop
jp
dec
sub
mov
push
stc
lret
icebp
sahf
nop
lods
fadds
sbb
insb
aad
adc
loop
pusha
jge
loop
test
and
sub
mov
repnz
fcoms
mov
xchg
xor
pop
hlt
sub
shr
jmp
cltd
fdivr
hlt
jb
push
push
insb
enter
repz
and
adc
stos
mov
test
sbb
adc
mov
jns
fcoml
dec
push
and
push
pusha
fcmovnu
daa
mov
cmp
loopne
or
push
outsl
push
push
inc
cmc
or
scas
test
stc
inc
adc
sbb
rolb
rcrb
mov
adc
or
loope
add
nop
sar
push
push
push
inc
aad
push
cwtl
fbstp
out
out
cmc
jno
mov
adc
adc
inc
add
cwtl
pop
and
sbb
int3
lods
aaa
adc
pushf
mov
jb
shl
dec
mov
int3
in
jg
fcoml
sbb
fists
and
mov
lret
cmp
adc
xchg
loopne
imul
dec
or
loope
cld
push
addb
mov
mov
repnz
lock
push
inc
stc
int3
dec
stos
add
lock
xor
mov
clc
xrelease
ss
in
es
sub
xchg
in
mov
bnd
mov
cld
sbb
iret
dec
aam
inc
int3
lahf
test
xchg
add
out
cli
stc
scas
repnz
lock
out
js
enter
xchg
jl
out
out
jae
xchg
lods
scas
filds
xlat
loope
xchg
mov
jo
gs
xor
xlat
pop
addr16
punpcklbw
xor
rcl
cld
mov
lock
pop
aam
out
mov
pop
add
lods
int3
daa
stc
push
in
movsb
xchg
add
into
jbe
fimuls
test
in
and
sahf
xchg
xchg
jno
lcall
mov
mov
fcomps
or
cs
shr
add
jg
mov
sub
js,pn
inc
in
inc
push
inc
inc
insl
mov
mov
fdivrl
daa
repnz
daa
mov
fistpl
shrl
inc
ret
mov
test
loopne
sub
or
fcomps
push
pusha
outsb
adc
adc
insb
lea
mov
loopne
sub
sub
fisubrs
shll
and
sbb
das
imull
mov
loope
cmp
mov
ret
xor
loop
cmc
push
adc
fsubrl
dec
xchg
mov
ds
cmp
sub
sub
int
aam
add
sub
or
pop
rorb
jg
jb
stos
sub
or
or
pusha
sbbb
das
add
daa
cmp
and
pushf
in
repnz
stos
mov
sub
xchg
mov
pop
icebp
imul
dec
js
sub
sbbb
push
jne
ret
bound
in
repnz
insl
enter
adcb
push
repnz
stos
cmpsb
fcmovne
in
dec
icebp
mov
add
sbb
jnp
movsb
mov
mov
push
es
repz
lods
lock
roll
call
stc
xchg
iret
xorb
lret
rolb
jg
xor
mov
adc
sub
pop
fcompl
dec
ja
pop
faddl
inc
pushf
dec
dec
or
inc
pop
xchg
push
sbb
mov
je
add
js
js
and
repnz
mov
aam
push
xchg
and
pop
add
cltd
or
pop
push
pushf
lret
pop
jp
or
rcl
loopne
or
out
icebp
in
mov
roll
enter
adc
test
icebp
adc
and
repz
dec
pop
adc
dec
mov
repnz
lea
dec
hlt
jp
repz
pop
lret
or
insl
mov
pop
mov
push
xor
adc
insb
pop
and
mov
cs
movsb
mov
lcall
sbb
dec
inc
icebp
mov
xchg
repz
inc
jg
cmp
inc
adc
and
out
daa
shl
enter
repz
notl
xchg
inc
push
add
repnz
add
adc
shlb
nop
lea
mov
test
pop
or
stc
cwtl
iret
call
add
adc
or
insl
xchg
leave
pop
cmc
cmp
stos
push
push
sub
sub
int3
and
sub
sbb
mov
or
mov
and
mov
loop
jecxz
das
hlt
cmp
or
iret
dec
clc
push
xchg
add
mov
bound
mov
adc
lcall
pop
cmpsb
mov
lock
push
add
enter
or
shl
cs
xor
lods
dec
and
add
nop
pop
xor
les
iret
jg
mov
push
int3
inc
xor
xchg
add
mov
and
fadds
outsb
xchg
mov
mov
or
rolb
in
sub
test
or
or
adc
dec
and
inc
or
or
jl
adc
addl
test
xlat
or
dec
insb
xchg
dec
sbb
add
fwait
jmp
dec
out
fmuls
push
or
jl
sbb
xchg
sbb
dec
add
xor
mov
int
inc
fcompl
fs
jl
mov
or
loopne
dec
repz
inc
cld
cmp
and
inc
aam
cmp
dec
call
and
popa
in
dec
cmp
add
stc
push
dec
nop
mov
dec
mov
add
sub
mov
pop
dec
mov
cwtl
xchg
sbb
unpcklps
les
dec
les
sub
dec
sbb
fs
repnz
or
mov
popa
add
subb
xor
jno
cmc
push
pop
mov
sub
mov
dec
pop
mov
or
das
adc
xchg
sbb
sub
shlb
adcb
sbb
nop
dec
inc
enter
cmpsb
sub
pop
aam
dec
add
sub
ret
adc
or
push
mov
inc
fmul
push
xchg
push
add
fs
adc
push
hlt
add
mov
push
ds
dec
adc
fs
js
sub
dec
popa
cs
sbbb
sbbl
sub
inc
sub
push
dec
sbb
pop
daa
or
adc
adc
movsb
xchg
add
sub
rolb
daa
mov
dec
push
int3
cmpsl
sub
daa
or
icebp
cmp
fs
adc
dec
mov
dec
push
inc
or
andl
mov
inc
cld
mov
pop
sahf
cs
xor
push
pushf
dec
adc
mov
sub
push
xchg
adcb
xor
push
sbb
repz
icebp
adc
mov
sub
dec
xor
sbb
adc
icebp
and
outsb
rcl
inc
adc
dec
shrl
xchg
cmp
test
adc
or
les
rorb
in
clc
add
and
pop
and
sbb
inc
orb
xchg
mov
bound
test
dec
push
push
xchg
adc
adc
or
cmp
addl
or
fwait
hlt
add
test
jo
dec
xor
les
sbb
movsb
mov
lock
add
cwtl
inc
xor
aam
repnz
xlat
or
icebp
xor
inc
xchg
adc
xor
pop
push
icebp
adc
stos
and
or
pop
mov
push
xor
adc
sub
xchg
je
add
adc
jb
icebp
xor
add
sbb
add
test
out
scas
leave
cltd
add
mov
add
subb
mov
aam
sub
loop
test
icebp
pop
add
inc
jno
jb
pop
mov
cwtl
inc
lret
sbb
add
into
cld
lds
or
inc
dec
rcrl
and
inc
push
add
in
rcrb
shl
cmp
xchg
mov
shlb
inc
subb
jb
fadds
mov
inc
add
inc
pop
leave
or
imul
mov
xor
wrmsr
dec
sti
hlt
xor
xor
lahf
scas
sbbb
and
cmp
pop
cltd
sub
or
imul
test
cmpb
pushf
inc
dec
clc
mov
pop
repnz
sub
orl
clc
pop
jno
loop
hlt
xor
gs
and
mov
scas
es
clc
rclb
xor
xor
mov
inc
and
test
xorl
or
xchg
in
fimull
dec
jmp
sub
and
shlb
adc
push
int
xor
int3
inc
xlat
xor
jo
mov
loop
sahf
xor
icebp
add
movsb
adc
xchg
nop
sub
or
aam
dec
into
pushf
pushf
mov
enter
in
cmp
subl
adc
insb
jl
mov
int
push
dec
xor
fsubl
or
inc
adc
clc
adc
dec
inc
add
adc
or
inc
hlt
sub
icebp
decl
in
mov
mov
dec
xchg
push
dec
les
icebp
fisttps
sbb
fcomps
jo
dec
enter
dec
pop
pusha
or
sub
js
push
mov
or
inc
inc
pop
sbb
icebp
ljmp
inc
nop
sub
dec
dec
test
or
add
mov
cltd
sbb
fcoms
jno
inc
add
mov
adc
mov
adc
mov
adc
mov
adc
out
loopne
js
cld
cmp
dec
insl
jns
hlt
aas
add
mov
adc
or
insb
insl
arpl
bound
imul
stos
hlt
mov
xor
add
push
out
xor
outsb
mov
fs
pusha
je
inc
push
push
in
or
xor
mov
mov
enter
mov
sbb
or
arpl
jge
iret
into
lods
popf
pop
mov
insb
lds
adc
cltd
xor
movsb
lret
mov
shl
xchg
sbb
jge
push
dec
js
leave
push
sub
inc
enter
pop
stos
dec
js
mov
xor
inc
sbb
out
popa
ja
pop
bound
dec
mov
push
ds
arpl
or
lds
fsubrs
fldt
xor
and
clc
cld
and
add
lods
push
pop
les
xchg
pop
mov
data16
or
out
xor
cwtl
xchg
sbb
cmpsb
cmp
imulb
jmp
add
orb
xor
xor
ja
popf
push
mov
dec
fsubrs
push
js
or
push
adc
inc
push
xchg
outsl
cmc
arpl
sbb
xchg
dec
inc
lahf
cmpsb
scas
mov
pop
call
adc
insb
out
pusha
cmpsl
ficoml
pusha
add
dec
pop
xor
aam
add
repnz
adc
push
cmp
sub
mov
stos
outsl
adc
mov
push
stos
jle
mov
sub
inc
js
lods
xor
fsub
shrl
push
xchg
cmp
enter
sub
cmp
shlb
cli
jl
adc
or
push
test
test
jge
test
pop
fsubrl
mov
dec
ljmp
jns
push
pushf
push
push
fs
adc
les
push
push
pop
mov
jae
sbb
dec
xor
aam
sub
or
call
lahf
pop
pop
mov
iret
pop
dec
in
and
mov
icebp
mov
imul
insl
add
cld
mov
pop
cmpsb
repnz
testl
adc
repnz
and
out
xchg
pop
dec
repz
lock
inc
pop
call
shrb
les
test
sbb
xchg
sbb
icebp
test
call
incb
jne
repnz
mov
repz
rol
inc
call
xor
cmp
inc
adc
push
mov
jecxz
fcom
inc
inc
call
cmp
pop
mov
add
pop
xchg
xchg
ljmp
inc
lcall
pop
push
mov
lret
xor
sub
push
push
xchg
jb
int3
add
inc
dec
or
inc
fadds
call
add
sub
jo
scas
in
mov
pusha
push
dec
push
add
dec
add
enter
nop
inc
mov
pop
in
pop
sbb
sbb
sub
sub
xchg
stos
xchg
sahf
in
call
ds
add
outsb
sub
sbb
popa
in
sbb
dec
sbb
or
sti
jle
jg
push
je
gs
inc
sbb
loop
adc
xor
in
pop
lea
or
sbb
in
sub
in
fxch
or
lret
in
sbb
add
out
jle
mov
pop
push
in
insl
or
cli
adc
out
and
adc
xchg
adc
in
push
cmp
pop
call
adcb
and
inc
les
aas
adc
inc
pusha
add
movsl
cmp
sub
adc
xor
lahf
cli
adc
scas
enter
push
into
cs
add
push
jmp
adc
add
mov
subb
call
sbb
in
das
lea
lea
sub
mov
in
call
je
in
sub
jne
sub
sbb
jp
cwtl
addb
add
clc
jmp
pop
xchg
dec
and
in
and
andb
mov
stc
adc
fcmove
daa
pop
dec
pop
jno
fwait
xchg
insb
and
sbb
std
jo
ljmp
or
pusha
loopne
adc
push
xor
jmp
subb
and
mov
dec
ret
shl
insb
mov
cmp
ss
pop
mov
push
mov
sub
fldenv
and
mov
or
xor
jge
into
sahf
cmp
push
out
negb
push
pop
push
testl
daa
fs
fsubl
fldt
inc
push
adc
mov
aam
jp
and
pop
pop
dec
or
inc
push
lret
jnp
pop
xor
call
jno
repz
and
testl
je
sbb
or
addb
push
call
jl
enter
fildll
sbb
into
dec
adc
add
enter
push
repnz
sbb
mov
xchg
push
shrb
insb
sahf
inc
mov
xchg
or
xchg
mov
or
jb
cs
xor
or
xchg
in
mov
and
mov
nop
jge
clc
hlt
push
popf
sub
enter
or
sub
les
bound
pusha
stos
sub
mov
in
pop
lret
pop
leave
sub
jno
push
add
xchg
inc
push
and
pop
mov
add
ret
or
test
cwtl
inc
ret
call
mov
nop
les
add
jno
repnz
mov
or
mov
cmp
jmp
fdiv
inc
cmpl
rcr
jb
xor
lods
out
adc
inc
scas
loopne
stos
cmpl
rcrb
add
adc
inc
xchg
inc
push
dec
push
sbb
mov
out
insl
sub
bound
lods
dec
jp
xor
sbb
in
in
or
or
sbb
mov
dec
repz
dec
or
cs
pop
sbb
orb
test
lea
repz
mov
add
add
cmp
test
shlb
fcomps
dec
mov
jns
add
fmul
sbb
adc
lock
in
test
sbb
xlat
testb
or
pop
cmp
mov
cwtl
adc
sbbb
aam
mov
rorl
mov
dec
mov
inc
push
loop
sbb
sub
add
enter
or
and
xchg
pop
add
stos
dec
nop
lahf
stos
in
aas
xchg
push
loope
jge
pop
dec
rcl
push
mov
movsl
dec
pop
aam
push
test
pushf
mov
pusha
sub
pop
dec
popa
dec
lahf
xor
inc
repnz
pop
sahf
dec
xor
mov
call
xor
loopne
push
sbb
jmp
into
sub
push
faddl
call
out
sub
pop
mov
sti
cs
jle
pop
adc
push
add
adc
jmp
mov
leave
xor
inc
shll
add
mov
movsl
sahf
add
cmpsb
mov
push
jp
jne
mov
add
sub
roll
sub
jo
int3
inc
inc
mov
fsubrl
aam
mov
inc
jg
int3
inc
insl
add
hlt
iret
rcrb
jb
es
inc
adc
jle
adc
lods
mov
mov
pop
icebp
jns
xor
jmp
mov
test
in
add
mov
mov
inc
cwtl
add
dec
out
cli
incb
cmp
push
les
repnz
or
or
mov
and
cmp
mov
sbb
or
and
cmp
sub
cmp
mov
ret
xchg
sbb
push
inc
cmp
loopne
push
das
cmpsb
add
mov
les
cmp
xchg
pop
push
imul
jle
das
mov
popf
sub
mov
xor
jo
clc
adc
xorl
sbb
dec
fsts
lea
or
add
shrb
pop
dec
call
or
sbb
push
mov
aam
nop
mov
cltd
pushf
and
sub
dec
sub
dec
out
rol
lods
addr16
test
push
in
and
pop
dec
aaa
mov
fmull
inc
enter
mov
lea
sbbb
pop
call
cmp
iret
cmp
lea
sub
push
fildll
sarl
call
arpl
cld
addl
inc
pop
add
int
jns
lods
and
mov
mov
call
aaa
jmp
mov
test
xchg
mov
mov
aam
push
jo
pop
pop
pop
adc
xchg
or
push
fmuls
pusha
sbb
iret
nop
push
add
repnz
pop
adc
test
pop
repnz
sbb
adc
cmp
push
cli
dec
jns
jmp
adc
add
fwait
adc
inc
push
mov
enter
insl
mov
inc
dec
sbb
and
je
and
iret
popa
outsb
hlt
dec
or
mov
pop
sarb
das
xor
imul
inc
inc
ret
sub
lods
test
fs
cmp
pop
sub
sub
dec
sub
sbb
jnp
ss
or
subl
pop
inc
movsl
or
inc
push
call
insb
sub
xor
stos
sub
adc
sar
testb
call
cmc
push
insl
cltd
push
add
repnz
or
xchg
loopne
testb
fdivrl
add
sub
pop
jmp
or
xchg
mov
dec
rclb
cmpsl
pop
push
sarb
mov
mov
mov
lods
outsl
sub
sub
call
sbb
adc
ds
push
pop
adc
addb
inc
cmc
sub
pop
xchg
inc
inc
mov
lea
movsb
mov
push
adc
push
sbb
mov
sbbl
adc
xor
testb
ficoms
sub
insb
js
mov
push
pop
out
je
outsl
xchg
es
in
jo
mov
out
fwait
sbb
movsb
jl
dec
and
dec
jae
push
push
in
adc
insl
fbstp
call
xor
inc
jnp
add
sub
pop
out
les
into
pop
test
mov
test
push
mov
das
lods
ficoml
leave
fbld
or
add
push
es
icebp
cmpsl
icebp
adc
add
mov
adc
lret
inc
insb
nop
and
mov
or
push
mov
mov
xchg
scas
inc
pusha
sbb
repnz
xor
xchg
xchg
insb
in
nop
dec
cmp
rcrb
ds
mov
sbb
inc
lods
xchg
test
pop
sub
sbb
pop
scas
into
ret
adc
xchg
cmpl
loopne
data16
sub
mov
mov
mov
add
je
mov
inc
aam
inc
push
in
or
xchg
or
fadd
cmc
push
mull
cmp
loopne
mov
fdivl
js
mov
fscale
dec
outsl
mov
push
mov
inc
pusha
mov
je
xchg
inc
or
enter
das
add
mov
popf
or
push
dec
in
jle
sub
ret
mov
andb
nop
dec
lds
arpl
pop
jbe
popf
mov
fs
jae
jl
jns
fcoms
fsubl
insb
pushf
pop
lea
nop
in
fcomps
sbb
std
popf
or
adc
lcall
jle
mov
fidivl
call
and
dec
les
stc
lods
dec
sub
jg
xchg
mov
cwtl
inc
int
and
inc
mov
lea
ss
xor
inc
pop
popf
subb
ret
inc
jno
dec
pop
adc
push
fdivs
les
loop
neg
repnz
shlb
pop
push
push
addb
fmuls
jl
sub
mov
push
call
mov
fdiv
aaa
andl
sti
xor
lret
fxch
cli
test
or
cli
lea
dec
jae
cwtl
and
test
mov
mov
test
mulb
mov
cli
jno
cli
cmp
mov
and
push
mov
mov
cltd
les
push
jo
cwtl
jmp
jl
jbe
inc
fcoms
repz
call
stos
insb
mov
jg
mov
inc
mov
test
out
sub
shlb
jle
mov
mov
fmull
pushf
icebp
dec
or
call
leave
loopne
je
jnp
lcall
aam
fs
lock
icebp
mov
adc
add
xor
pop
xchg
sub
pop
repnz
call
pop
adc
or
or
xor
pop
add
inc
pop
and
xor
mov
push
cmp
jne
push
clc
pushf
cmp
sub
popf
lea
inc
cwtl
or
or
pop
or
xchg
test
push
push
or
adc
repnz
icebp
jge
rcll
mov
sub
andb
pop
call
push
pushf
mov
sbb
ret
jno
dec
loope
adc
mov
mov
inc
push
push
mov
pop
cltd
mov
test
call
pop
xchg
repnz
and
fs
popf
loope
fistpll
sub
cs
or
sbb
push
mov
out
sarb
mov
loope
mov
mov
call
pmuludq
jge
pusha
push
dec
inc
pop
clc
jne
movsl
sub
in
lea
xchg
and
pushf
pushl
sub
out
out
pop
aam
leave
jl
lahf
inc
push
sbb
cmpsb
jno
mov
fildl
jmp
mov
call
mov
adc
jmp
xchg
xor
xor
jge
push
shr
and
or
sbb
sbb
mov
or
adc
pop
iret
mov
inc
fldcw
inc
cmp
cmpsl
add
cmp
push
cmp
inc
mov
jbe
pop
mov
in
inc
mov
sub
rorl
mov
push
dec
add
xor
sbb
xchg
insb
mov
sbb
scas
xor
cmp
ds
push
shl
adc
fcom
cs
push
mov
sub
xlat
dec
sbb
incb
pop
push
sahf
cmp
dec
mov
movsb
movsb
fmul
lods
xabort
mov
push
outsb
pop
movsb
adc
mov
dec
cwtl
mov
call
lds
imul
int3
cmp
mov
push
cmp
scas
mov
mov
or
inc
mov
adc
lret
test
mov
pushf
xchg
std
adc
jle
mov
cmp
les
mov
dec
es
inc
les
enter
or
notb
call
inc
inc
inc
cmp
push
clc
js
mov
imul
push
push
cmp
push
call
fnsave
fiaddl
mov
sub
pop
xchg
add
int3
pushf
jp
aam
and
test
cmpsl
enter
or
adc
insl
mov
ret
adc
test
inc
int3
mov
inc
rcl
adc
jp
sub
sub
sbb
rclb
mov
dec
pop
scas
dec
stos
xor
pop
ja
js
push
inc
mov
jae
shrb
pop
add
mov
xchg
mov
pop
adcl
andb
or
add
shll
sub
cld
fnstenv
push
scas
mov
dec
or
sbb
mov
aad
pop
sub
pop
jb
inc
dec
pop
repnz
pop
call
inc
es
call
add
ret
cmp
mov
stos
jmp
arpl
es
pushf
js
add
mov
xor
cltd
pop
pop
mov
xchg
push
add
xor
mov
icebp
add
jle
xchg
int3
iret
jns
pop
or
fcmovu
adc
cmp
pop
or
jno
push
add
adc
jno
pop
lea
mov
in
lods
imul
adc
jne
inc
ficoms
lahf
test
inc
and
xchg
push
fyl2x
mov
scas
inc
test
enter
mov
pop
sbb
add
mov
cwtl
repnz
pop
mov
rorb
push
sbb
pop
xchg
stos
aam
mov
pop
cmp
movsl
push
out
mov
jl
test
cwtl
push
mov
in
pushf
sar
dec
and
popf
pop
adc
leave
sbb
and
push
jns
dec
mov
lods
push
fldt
sub
fs
std
or
mov
cli
mov
mov
test
push
out
add
stos
add
test
aas
jl
jns
or
and
mov
jb
js
cmc
pusha
add
rcrl
jne
cmp
and
dec
pop
int
dec
popf
dec
dec
adc
adc
pop
mov
stos
sub
add
js
stc
push
jle
dec
add
add
stc
hlt
mov
cmp
cld
gs
adc
xor
xchg
roll
lods
mov
xchg
xchg
cmp
jl
scas
mov
inc
fdivrl
insb
inc
out
out
mov
sbb
cwtl
xchg
cmp
push
sahf
pop
pop
insb
push
or
call
iret
dec
orl
jmp
and
dec
repnz
pop
adc
mov
fldt
stc
subb
and
mov
fcmovne
sub
inc
call
das
mov
push
xor
pop
inc
sub
repz
rorb
mov
lds
push
jo
sbb
or
loope
cld
movsb
sbb
rcrb
sbb
sbb
shl
or
pop
pop
dec
add
arpl
or
mov
shl
inc
je
or
incb
jno
repnz
pop
mov
mov
dec
push
dec
mov
ds
jo
syscall
mov
int
add
push
sbbb
cmp
inc
inc
sub
jl
test
sub
dec
xchg
mov
inc
inc
cmp
cmp
sbb
mov
push
mov
mov
mov
push
or
add
or
add
cwtl
stc
adc
pop
xor
dec
loope
add
aas
sbb
jg
sbb
xor
mov
push
xchg
jo
ficompl
ret
or
or
adc
scas
pop
divl
lea
ret
inc
mov
adc
enter
xchg
xchg
xor
push
xchg
out
jns
inc
nop
enter
push
push
pop
and
adc
xlat
in
pop
data16
stos
ret
cmc
jnp
xchg
mov
mov
mov
sbb
jo
dec
jnp
mov
push
xchg
sarl
add
mov
push
mov
xor
sbb
mov
and
mov
cmp
and
push
mov
sbbl
adc
ret
sbb
aam
inc
mov
mov
or
sub
sub
bound
fs
mov
push
push
insb
ret
aad
sub
mov
pop
stos
push
shl
test
lret
inc
dec
sub
imul
mov
push
insb
fdivrs
sahf
mov
and
rcrb
or
mov
xor
ja
push
shlb
andb
out
lds
mov
repz
icebp
pop
xor
add
hlt
das
or
jp
popf
sahf
dec
movl
dec
or
in
or
push
push
sub
or
xchg
sbb
or
repnz
pop
push
xchg
adc
jp
add
inc
test
push
jo
nop
adc
push
sbb
jo
adc
fmull
adc
inc
cmp
sahf
push
mov
xchg
mov
test
sbb
push
cmp
pop
push
mov
sub
mov
push
popa
or
or
das
lret
lcall
mov
ss
xchg
rcrb
sahf
or
mov
fisubs
xchg
mov
mov
or
call
add
out
xchg
hlt
sbb
mov
pop
adc
add
inc
add
adc
mov
xor
add
popa
stos
or
mov
dec
jno
cmp
pop
lret
enter
jbe
cmp
outsl
push
pop
dec
fdivrl
cmp
addr16
pop
adc
push
cmpsb
ljmp
xor
test
xchg
pop
lea
hlt
movsl
icebp
jnp
lret
add
cmp
inc
inc
pop
leave
sbb
bswap
clc
insb
adc
push
inc
xlat
lahf
push
addb
adc
and
rclb
mov
xorb
and
je
and
leave
cmp
mov
fistpll
pop
push
sbb
enter
lods
daa
mov
inc
mov
push
orl
pop
nop
add
cwtl
pop
push
mov
popf
pushf
mov
xor
inc
pop
cmp
bound
popf
adc
dec
imul
popa
out
jb
mov
les
cmp
jnp
lahf
lcall
movsb
cmpsb
nop
lahf
cmp
mov
sbb
inc
mov
fcmovnb
cmp
fsubl
int
cwtl
adc
xor
adcl
aam
and
int3
enter
adc
dec
jl
mov
int3
mov
out
xor
adc
dec
mov
and
xchg
mov
xchg
sbb
clc
enter
pushf
mov
orb
mov
nop
jl
jne
adc
inc
jmp
dec
mov
sub
cmp
test
add
mov
mov
mov
stos
mov
mov
clc
in
jl
lcall
xchg
sub
ljmp
jle
into
cwtl
sbb
mov
mov
popf
sahf
inc
mov
xchg
rorb
adc
cmpsb
sbb
fisubl
push
and
imul
add
addb
lea
push
jmp
push
enter
daa
sbbb
adc
push
add
lcall
or
fimuls
and
xor
in
pushf
adc
push
pop
cwtl
dec
xor
shrb
jmp
and
jno
call
push
cmp
sub
sti
pop
lea
or
or
jbe
dec
test
jmp
maskmovq
testl
data16
adc
out
out
jg
test
dec
ficoms
hlt
cs
and
outsb
xor
sub
pop
pushf
mov
repnz
fldcw
mov
or
push
loope
xchg
popf
inc
cmpsl
jne
movsb
fbld
in
ret
test
nop
mov
cmp
loopne
mov
cmp
cmp
daa
in
sahf
or
sub
add
dec
mov
lea
pop
pop
call
mov
insb
xchg
cmp
aas
sub
mov
add
mov
sti
dec
sbb
mov
pop
test
sbb
cmp
lcall
ret
push
das
push
adc
sbb
xchg
jmp
inc
push
stos
mov
stos
adc
pop
out
test
xor
cmp
pop
pop
fwait
rcrl
add
fsubrl
push
call
mov
sbb
loop
notb
fwait
adc
and
addr16
mov
mov
add
or
jo
add
pop
add
mov
fwait
mov
stc
lea
mov
sahf
xchg
xchg
sbb
or
aad
adc
clc
xor
inc
inc
call
stos
adc
loopne
les
push
push
icebp
pusha
out
jmp
divb
rcll
pop
inc
pop
cwtl
call
add
inc
xchg
andb
sbbb
mov
lret
pop
adc
sub
repnz
push
sbb
pusha
out
inc
repnz
ucomiss
daa
sub
lahf
test
cmpsb
imul
jae
lock
hlt
sub
testb
mov
xor
test
sbb
lea
or
nop
adc
rorl
push
mov
mov
inc
movsb
jb
rolb
aam
xchg
mov
test
je
sarl
outsl
xchg
jno
shr
sub
xchg
dec
loopne
push
sub
sbb
or
fcoml
test
lcall
fnstcw
aam
ret
push
nop
ljmp
cmc
cld
arpl
enter
or
sub
jl
stos
pop
xchg
pop
sahf
push
inc
fsubr
jle
popf
in
push
mov
cmc
outsl
fdivrs
pusha
push
in
cmp
fdiv
mov
add
add
xchg
push
rolb
push
fdivl
cmc
cmp
mov
fs
addr16
add
pop
inc
rorb
stos
insl
or
xor
cmc
test
bound
orl
mov
stc
adc
rolb
adc
pop
rcll
push
and
or
xor
sub
mov
jge
scas
inc
adc
les
ja
add
dec
lea
dec
lret
inc
jb
inc
pop
std
add
js
loope
push
lret
dec
adc
add
cwtl
add
mov
xor
addr16
mov
outsl
call
insl
data16
int
mov
mov
and
pop
mov
hlt
mov
lret
push
sub
dec
sub
mov
fstpl
mov
sbb
mov
icebp
add
jge
jge
push
adc
or
sub
add
adc
push
mov
rorb
xor
mov
and
adc
ror
cmp
loope
push
add
out
clc
add
mov
add
inc
cmp
adc
int3
inc
fistl
sbb
mov
add
pop
xchg
iret
ds
mov
pop
shl
movl
sahf
jle
sub
mov
fmuls
orl
mov
enter
insb
insb
or
add
pop
insb
pop
sub
adc
inc
adc
inc
call
adc
xor
adc
enter
outsl
fsub
add
enter
les
add
cld
stc
add
mov
in
adc
add
jl
add
lret
cwtl
lods
clc
cmp
sbb
test
push
mov
js
jp
lea
sbb
mov
xchg
insl
xchg
repnz
push
arpl
mov
lret
jns
push
push
xchg
pop
jg
adc
in
push
lods
push
stc
mov
mov
daa
ret
mov
inc
cmp
mov
add
in
ds
adc
loopne
clc
dec
sbb
sbb
adc
mov
fmulp
push
sbb
sub
rclb
repnz
iretw
add
xor
test
mov
je
pop
mov
pop
lcall
push
jmp
jbe
adc
adc
cmc
xchg
adc
xchg
push
or
jmp
mov
xchg
adc
sub
aam
shrl
push
icebp
psubd
pop
aas
aad
dec
fs
std
push
adc
sbb
icebp
adc
jge
repnz
inc
add
dec
dec
push
dec
cmp
dec
push
test
das
insl
data16
je
push
enter
or
pop
mov
ja
push
aad
and
ffree
int3
fdivl
test
xlat
adc
jmp
adc
add
mov
pop
aaa
lcall
mov
and
pushf
sub
mov
adc
and
push
nop
cmp
call
hlt
das
ret
cmpl
xchg
rorb
or
mov
cmp
mov
mov
cltd
mulb
inc
pop
pop
pop
inc
rcrl
shlb
fstps
push
mov
push
push
xor
test
xchg
pop
mov
loope
sbb
pop
jnp
push
decl
push
loope
es
pop
dec
and
call
pop
jb
pop
adc
jle
xor
ljmp
pop
cmp
adc
push
mov
add
icebp
call
stc
loope
negb
or
sub
sub
pop
or
in
dec
dec
mov
cwtl
lret
das
jb
fucomi
mov
call
fisttpl
int
fnstenv
mov
int
lods
push
es
sbb
leave
pop
aaa
mov
addr16
jno
xor
and
loope
add
xlat
xchg
outsb
add
adc
loop
std
fs
add
mov
movsb
pushf
aam
sub
xchg
mov
test
jnp
out
rol
mov
ss
inc
loopne
enter
adc
fidivl
pusha
call
jno
popf
cld
mov
hlt
cli
push
repnz
add
xlat
fistl
sub
mov
xchg
sbb
outsl
inc
ret
jae
add
call
xchg
les
pop
js
mov
call
lret
xchg
sti
mov
mov
inc
call
inc
cmc
mov
sbb
sub
sti
push
jl
test
sbb
add
loop
in
xchg
shlb
test
inc
sub
mov
mov
call
push
push
xchg
mov
dec
jo
in
jmp
xchg
sti
stos
mov
and
sahf
jl
xchg
sti
stos
mov
inc
repnz
cmpl
mov
jl
movsl
and
sahf
adc
outsb
test
sbb
jo
test
cmpsl
pop
push
mov
push
sbbb
and
mov
push
xor
lods
push
jnp
call
push
xor
cmp
xchg
xlat
test
inc
cmp
mov
adc
cmpsl
repz
and
sbb
xchg
jo
jmp
cmp
ljmp
mov
xor
xor
dec
xchg
ret
pop
pop
cli
lret
aas
mov
out
popf
leave
sbb
sti
scas
mov
shrb
push
xchg
mov
lret
sub
cmc
adc
or
push
xor
adc
das
rorb
scas
xor
fstps
pop
fimuls
popf
sub
int3
mov
call
inc
fwait
xchg
loope
enter
or
mov
test
adcl
data16
add
js
push
adcl
js
sbbl
adc
dec
mov
push
outsl
cwtl
mov
cmp
loop
dec
pop
adc
outsl
pop
jnp
push
add
in
dec
pop
fisttpll
and
sbb
dec
sub
sbb
addr16
mov
insl
adc
adc
mov
pop
pop
jae
xor
adc
outsl
lea
add
pop
mov
xchg
faddl
adc
dec
sub
jmp
dec
je
cs
out
dec
pusha
lea
jge
adc
mov
jae
add
test
rorl
or
sub
das
add
xchg
rorl
gs
sbb
jg
mov
mov
push
clc
hlt
and
mov
sahf
cmpb
push
imul
xor
inc
fists
je
sahf
rorl
loop
mov
mov
das
loopne
call
dec
leave
aas
cmp
repnz
fcoml
dec
pushf
jmp
sbb
out
fstp
loop
mov
xor
ret
mov
xchg
cli
sub
out
clc
xor
mov
bnd
das
mov
xor
lahf
ss
xchg
lret
jb
inc
stos
push
aaa
decb
add
mov
jns
add
jp
add
xor
int3
mov
pop
xor
icebp
dec
insl
xor
ja
cwtl
add
xor
adc
int3
push
xchg
scas
jecxz
dec
pop
imul
in
addb
sub
push
push
xor
inc
lret
push
adc
mov
pusha
clc
dec
cmpsl
mov
nop
or
dec
cli
xor
xor
mov
pop
clc
lret
rcl
adc
dec
cs
enter
add
add
mov
sbbl
dec
sub
push
or
clc
dec
cmpl
pop
xchg
and
hlt
imul
cmp
mov
rolb
mov
lods
xchg
dec
fdivrl
int
fndisi(8087
add
and
inc
push
sbb
or
call
out
add
sbb
lock
ds
ds
inc
mov
scas
outsl
jae
subb
inc
fs
xor
inc
lods
pop
push
dec
aas
inc
push
leave
or
jle
sub
out
fcoms
xor
sub
xor
cmovns
and
xchg
add
jno
jno
push
add
xchg
xor
adc
mov
data16
mov
push
xchg
or
in
aas
pop
mov
sub
aam
mov
xorb
fildll
call
adc
push
cld
fcoml
shl
js
insl
pop
data16
call
popf
xor
pop
cmp
xchg
pop
and
fiaddl
pop
testb
push
and
push
fdivrl
adc
mov
rclb
fstl
stc
add
fcompl
addr16
add
mov
clc
push
test
rcrb
inc
shlb
xor
inc
fimuls
js
int3
push
addr16
mov
pop
or
in
daa
int3
xor
es
mov
int3
adc
loopne
sub
repnz
xchg
cld
add
cld
rcll
enter
clc
push
test
in
jbe
xor
xor
adc
xor
cmovb
lods
fadds
or
movsl
loop
xchg
sbbl
int3
adc
mov
call
push
adc
faddl
enter
js
dec
mov
jecxz
mov
add
push
test
and
mov
int
clc
pop
cmc
mov
cmp
jne
xor
call
xchg
test
int3
and
mov
movsb
pop
in
jno
push
mov
sti
adcl
adc
call
cmp
jns
cmp
fsqrt
loope
shrl
shll
pop
push
popa
dec
or
sub
pop
movl
mov
nop
out
clc
outsb
mov
outsl
add
imul
in
cmp
adc
adc
pop
add
call
push
fimull
data16
cwtl
mov
shrb
dec
and
adc
xchg
pushf
js
int3
imul
cs
fistl
xchg
mov
adc
add
fiadds
call
cmp
push
pop
mov
mov
mov
dec
mov
int
js
cmp
mov
pusha
sbb
xchg
call
inc
sbb
xchg
xchg
sti
fstps
adc
aam
xor
mov
jo
mov
mov
inc
adc
sbb
int3
in
jge
cltd
jns
add
test
add
push
pop
int3
fdivl
sbb
loopne
add
mov
and
loope
mov
idivb
faddl
insb
test
scas
sbb
scas
push
mov
lods
outsl
mov
xchg
das
data16
lcall
insl
adc
bound
inc
lods
sbb
rol
push
jae
xchg
dec
test
sub
ja
arpl
jno
dec
stc
adc
ja
adc
pop
inc
je
rclb
sbb
adc
data16
push
stos
aaa
mov
jmp
js
xor
jge
mov
adc
fcompl
cs
fs
fimuls
js
int3
jle
push
nop
mov
inc
sbb
adc
mov
clc
jg
out
jnp
sbb
fsubrl
push
xorb
out
clc
js
shll
nop
lret
stc
mov
movsb
push
jns
or
xor
dec
sbbb
loop
pop
pop
insb
adc
jp
or
add
daa
enter
push
jg
je
jnp
cmp
mov
cmc
pop
sbb
loop
pop
pop
push
adc
shlb
sbb
aam
push
scas
mov
xchg
pop
mov
repz
popa
and
shlb
std
mov
mov
jecxz
test
and
pop
ja
dec
dec
pop
dec
cmp
hlt
dec
aam
jno
sbb
xor
or
movsb
mov
or
mov
push
popa
fdivs
sub
adc
fsubrl
dec
cmp
adc
add
jge
sbb
pop
add
mov
or
in
and
loop
cmp
adc
nop
push
mov
xor
ficoms
mov
dec
adc
rolb
sbb
mov
push
dec
out
clc
popl
mov
mov
cmp
adc
push
push
in
jo
mov
xor
int3
adc
inc
sbb
sub
cmp
add
mov
das
push
adc
ficomps
jg
je
mov
into
pusha
sbb
add
jbe
mov
out
clc
test
imul
cmp
out
clc
loopne
repz
or
push
or
bound
mov
adc
xchg
adc
dec
das
cltd
mov
mov
adc
mov
sbb
pop
add
push
adc
add
addb
fnstenv
sub
adc
int3
adc
jb
lds
sbb
lods
mov
rolb
call
repz
lea
sbb
int3
xor
movsl
loopne
xchg
pusha
pop
dec
gs
rorb
rcrb
loope
nop
mov
mov
sbb
incl
je
ja
push
push
adc
lea
jnp
mov
in
adc
dec
int
out
lcall
cmp
ja
lcall
adc
out
mov
pop
sbb
xor
enter
clc
lahf
lahf
gs
int3
repnz
pop
cwtl
scas
mov
stc
pop
rcrl
or
adc
sub
dec
push
shl
std
mov
sti
outsl
xchg
in
cmpsl
mov
mov
dec
push
lods
mov
dec
clc
js
int3
fwait
test
xchg
dec
ja
xchg
and
fsubrs
in
push
inc
call
adc
loop
cwtl
les
mov
jno
xchg
jo
push
sbb
lret
mov
mov
arpl
xchg
jb
jge
xor
mov
xchg
xchg
arpl
pop
mov
jp
pop
mov
call
adc
adc
mov
rclb
or
loopne
mov
movsb
lods
mov
xchg
pop
jno
and
mov
adc
mov
rclb
call
jg
call
push
adc
jmp
adc
xchg
pop
mov
or
sbb
mov
clc
lods
mov
jle
mov
or
mov
inc
dec
sub
adc
pop
pop
rorb
xchg
enter
xchg
cld
mov
adc
out
dec
scas
pop
cmp
fcom
mov
mov
repz
icebp
inc
call
lcall
dec
jge
xlat
fdivr
outsl
xchg
in
xchg
add
mov
fistpll
dec
fdivrl
int3
stos
jns
push
maxps
or
int3
sarb
dec
stos
stos
mov
add
js
int3
movsb
js
jae
stos
add
aas
dec
push
stos
ficomps
xchg
int3
movsl
js
test
and
mov
jl
push
insl
int3
jg
mov
mov
add
push
xor
cmpsl
xor
inc
cmp
xchg
mov
jno
dec
pop
dec
xchg
mov
mov
adc
inc
xor
mov
shlb
in
inc
xchg
and
mov
push
int3
in
xor
adc
dec
adc
xchg
sbb
stos
stc
mov
push
sbb
lahf
js
test
sub
inc
jo
pop
jae
je
xchg
iret
add
add
push
jle
fnop
sbb
lret
gs
xchg
pop
jne
dec
mov
stc
or
fadds
push
push
sbb
aas
pop
sub
jnp
je
push
pop
jne
push
js
mov
rolb
add
push
xlat
cwtl
mov
dec
mov
mov
or
loopne
pop
dec
adc
icebp
mov
push
ja
mov
push
cli
mov
fmuls
ret
jge
iret
nop
sub
or
push
fwait
cli
jbe
fcomp
loopne
xor
adc
sbb
jle
repz
ss
push
inc
cmpsb
loop
sti
add
mov
ret
cmp
xchg
add
mov
add
loopne
ljmp
adc
xor
dec
jae
cmpsb
add
pop
loope
adc
rorb
gs
push
mov
pop
mov
xchg
lret
sbb
mov
mov
mov
cmp
push
xchg
clc
mov
add
sbb
ljmp
mov
jmp
sbb
js
int
fwait
pop
pushf
stos
or
adc
out
xlat
xchg
loope
jle
out
loopne
xchg
xor
lods
xchg
dec
mov
int3
int
pop
test
aam
dec
mov
int3
into
js
jae
jae
sbb
fistpll
fcompl
xchg
popa
shlb
add
loope
mov
loopne
repz
in
sbb
js
int3
ss
int3
xchg
fwait
adc
dec
and
push
in
jl
mov
mov
dec
xor
pusha
js
int3
lret
cmpsb
xor
loope
or
and
mov
mov
ret
mov
or
push
vpinsrw
jge
adc
mov
mov
mov
adc
xchg
pop
mov
loope
sbb
mov
int3
push
jg
je
rorb
add
notb
pop
mov
rol
xor
push
xchg
push
int3
pop
jg
je
ret
rcrb
push
xor
inc
mov
rol
xor
sub
call
jmp
rolb
ss
int
push
dec
hlt
dec
dec
js
int3
fnstsw
mov
call
push
int3
dec
jg
je
fimuls
push
jmp
sub
xchg
dec
je
int3
fistpll
mov
xor
xor
fdivs
jo
out
inc
pop
sbb
in
dec
cmp
int3
fnstcw
test
mov
xchg
clc
fiaddl
cmp
fdivrp
cmp
andl
push
adc
lret
scas
in
xchg
pop
xchg
insl
in
push
call
pop
adcl
loope
push
popa
test
pop
inc
xchg
fdivs
clc
xchg
pop
repz
pop
call
sub
aad
jecxz
pop
adc
rclb
add
mov
add
into
movsl
sub
adc
loope
mov
hlt
jl
or
add
div
sbb
loopne
or
mov
add
daa
cmp
sbb
int3
ss
int
push
aas
sub
jne
int3
sarl
movsl
jb
pop
sbb
stc
add
rclb
add
sarl
adc
ficomps
adc
or
shll
ds
push
in
or
mov
mov
mov
int
not
adc
shlb
inc
stos
or
mov
hlt
dec
cli
js
push
enter
pop
or
ss
add
mov
jmp
cmp
rcr
cld
push
xchg
pop
add
rorb
push
lret
lods
lahf
xchg
loopne
rclb
add
shl
sti
cmp
mov
add
into
imull
in
mov
shl
xor
insb
shlb
call
adc
int3
jl
sbb
rcrb
sub
push
adc
call
push
in
sarb
mov
test
pop
call
sbb
aad
das
ret
sbb
and
jo,pn
xchg
loop
cltd
pop
ret
cmp
test
rorb
or
adc
jl
inc
jne
dec
adc
jge
pop
push
loop
xchg
sub
ss
out
imul
xor
sub
pop
dec
int3
sahf
cmpsb
xor
pop
pop
mov
fdivl
inc
hlt
sub
cld
xchg
pop
nop
sbb
stos
add
mov
xchg
int
in
push
dec
loopne
movsb
jl
test
cmpsb
push
cltd
nop
sbb
jg
jecxz
jmp
iret
movsb
movsl
fidivs
jecxz
mov
mov
in
xchg
mov
loop
and
mov
hlt
cmp
pop
xor
inc
xchg
and
and
adc
push
add
add
cli
out
movl
pop
fsubrl
sbb
ss
push
js
adc
push
in
cwtl
fucomip
cs
cmp
les
cltd
mov
sbb
xchg
adc
sbb
jp
xor
xor
mov
imul
ret
adc
jo
enter
adc
es
xor
inc
inc
in
adc
mov
pop
lahf
insl
lret
fcmovbe
sbb
cmp
push
dec
cli
xor
mov
mov
adc
pop
jp
sbb
test
pop
xchg
repnz
sbb
inc
push
lahf
stc
mov
je
inc
call
ljmp
int
fs
cli
subl
int3
xor
test
adc
add
and
pop
adc
mov
pop
sbb
mov
inc
lcall
mov
dec
mov
test
cmp
sbb
aaa
cmc
push
cmovno
push
inc
sbb
test
pop
mov
sbb
test
enter
add
dec
dec
decb
dec
adc
sbb
dec
int
aas
push
mov
pop
stos
test
pop
sbbl
rcl
cs
sarb
pop
push
daa
push
jmp
fstpl
popf
fldt
cmp
push
sub
and
push
push
ds
shl
icebp
imul
mov
xor
mov
mov
mov
repz
jo
es
sbb
sbb
lcall
test
adc
adc
sahf
adc
cmpsl
loop
fcos
mov
nop
scas
push
dec
sbb
cltd
jbe
xor
inc
xor
cmp
mov
add
sbb
popf
mov
adc
add
daa
shll
adc
sbb
jae
inc
push
jb
cmp
dec
sub
adc
int3
jo
shr
addb
add
or
jae
dec
xchg
out
xchg
sti
js
test
add
push
cmp
push
shl
mov
lods
loope
fs
call
daa
dec
sbb
nop
ljmp
mov
jns
hlt
inc
test
std
nop
pop
lods
adc
ds
enter
aam
popf
inc
clc
test
add
hlt
sbb
dec
rcrb
jno
sbb
jb
cwtl
popf
rcrl
rcr
inc
call
popa
mov
ja
push
fisubl
cmp
in
rclb
out
mov
std
adc
xchg
fistps
jmp
pop
icebp
or
mov
sub
mov
sbb
mov
cmp
jle
dec
add
test
mov
jl
imul
lods
push
test
enter
inc
jl
orl
adc
sbb
inc
jl
inc
push
sbb
repz
gs
xor
mov
mov
mov
jl
ret
jae
or
mov
jo
daa
adc
mov
pop
insl
sub
jg
mov
dec
pop
daa
and
repnz
add
mov
mov
jb
and
xchg
xor
mov
xlat
push
movsl
ret
adc
adc
adc
pop
pushl
sbb
inc
push
stc
push
leave
pop
or
sahf
xchg
sub
sub
pop
call
and
add
xchg
hlt
into
sub
insl
std
mov
pop
jbe
xchg
in
lods
xor
mov
call
pushf
sub
dec
test
popf
xor
cmp
xor
inc
inc
xor
push
jle
fisubl
jp
hlt
mov
test
push
or
push
mov
popf
cmp
dec
pusha
call
daa
xor
pop
adc
loopne
cwtl
mov
outsb
adc
fdivp
pop
sub
adc
add
cmpsl
or
lods
push
jg
into
adc
push
mov
sbb
loope
inc
shlb
movsl
xor
mov
sbb
lods
and
lahf
fdivs
stos
adc
push
arpl
repnz
push
or
lods
jmp
jle
lea
test
adc
adc
loope
fwait
or
pop
pushf
out
ficoms
mov
mov
icebp
jns
loop
out
cwtl
mov
punpckhbw
call
ss
adc
test
adc
xor
adc
cmp
dec
das
jecxz
lret
iret
mov
cli
jmp
fisubrl
sub
sub
and
mov
sub
pop
adc
stos
iret
pop
cmc
inc
loope
ficomps
dec
test
mov
add
mov
or
jle
xchg
movsb
adc
xlat
jne
call
inc
mov
mov
addl
call
cmp
adc
loope
inc
jmp
push
sbb
in
push
arpl
movsb
sbbb
insb
pop
jg
inc
jmp
gs
or
cmp
sbb
popa
pop
inc
adcb
je
out
cmp
xchg
jb
mov
fcompl
call
and
int
inc
dec
lret
mov
lea
inc
popf
das
push
call
enter
enter
dec
cmp
cmp
fwait
or
lods
sub
lods
mov
adc
sub
sti
jb
or
xor
sub
enter
sbb
xor
int3
cmp
in
loop
push
ljmp
cwtl
adc
jo
clc
xchg
cmp
int3
jl
mov
add
lea
fcoms
cmpsb
ficompl
cmc
mov
int3
enter
loope
adc
or
call
add
cmpsb
push
xor
jo
add
mov
cmp
es
push
push
or
pop
imul
adc
enter
incl
lahf
or
enter
imulb
pop
out
push
inc
out
mov
sub
outsb
push
movsb
push
fimull
dec
dec
inc
popf
ljmp
iret
sbb
mov
arpl
push
fmull
js
bound
sbb
sbb
ss
mov
test
cmc
cs
stos
loop
loop
mov
sub
mov
mov
insb
mov
sbb
imul
xor
lods
jp
inc
push
xor
push
inc
pop
mov
call
and
cmp
adc
xlat
push
add
stos
or
pop
push
mov
jo
add
sar
dec
push
mov
jbe
loopne
push
pop
sbb
sbb
jb
jmp
stos
fwait
cmp
cmp
and
movsl
gs
cmc
and
jmp
jmp
fwait
jno
call
sbb
and
cmp
sub
fsts
mov
push
ljmp
mov
fmuls
inc
mulb
enter
nop
sbb
xchg
mov
jge
es
xor
sbb
cmp
and
or
cmp
movsl
pop
adc
add
cmpsl
mov
rorl
inc
popf
jae
outsl
add
rcl
ss
std
jne
xchg
in
daa
add
jo
cmp
call
fsubrs
pop
add
sub
add
mov
faddl
inc
js
dec
mov
sub
xchg
orl
mov
ljmp
sub
and
mov
stc
mov
mov
test
inc
fcompl
hlt
stc
xchg
lcall
or
xor
adc
pushf
aas
jl
clc
stc
cmp
mov
nop
mov
or
cmp
jmp
testl
mov
fsubs
sub
imul
insw
sbb
dec
enter
mov
sbb
dec
mov
mov
rcll
cmp
or
xor
mov
inc
inc
pop
mov
sti
mov
test
arpl
and
add
lret
ljmp
mov
xchg
xor
mov
fsub
mov
mov
push
in
add
icebp
mov
ss
pop
mov
mov
jl
loopne
hlt
jl
jp
arpl
and
sub
call
sub
fdivrl
lods
sahf
cmp
hlt
mov
fmull
jmp
cmp
incb
xor
add
sbb
lods
sbb
in
and
fcmovne
add
adc
sub
ret
mov
ficoml
popf
lods
popa
inc
sub
pop
shlb
fcompl
cltd
sbb
pushf
sbb
iret
sbb
push
adc
push
pop
call
fisttps
adc
cs
mov
push
xchg
add
fxch
sbb
insb
sbb
cmp
mov
mov
sbb
dec
in
js
mov
jle
decb
outsb
pop
sbb
push
sti
inc
sub
sbb
or
sub
sbb
out
shl
add
insb
jle
mov
mov
mov
ret
add
xor
lds
aaa
mov
rolb
mov
aaa
cs
mov
pop
out
pop
jl
aam
xchg
lea
ss
adc
movsl
in
mov
repz
das
ss
and
es
ss
mov
nop
aaa
sub
xor
add
mov
dec
aam
fdivr
outsl
xchg
in
icebp
cmp
iret
jb
jg
dec
pop
faddl
jns
push
jo
daa
push
hlt
dec
sarb
xor
sbb
mov
xchg
call
popa
xchg
enter
inc
dec
into
mov
sbb
into
mov
int
sbb
dec
lea
xor
xchg
dec
stos
int3
add
int3
jb
xchg
push
pop
jnp
clc
jnp
xor
hlt
or
arpl
fsubl
outsl
imul
add
adc
repnz
call
xchg
xor
ja
adc
popf
sbb
shrb
mov
in
jmp
and
cltd
movsb
sub
mov
lret
dec
jno
das
subl
scas
push
xchg
jle
call
rolb
stc
and
divb
jno
inc
in
and
aad
aam
push
sti
scas
add
mov
push
xor
repnz
xchg
arpl
jae,pn
fmuls
pop
push
movq
jnp
sahf
and
jno
inc
add
mov
push
sub
and
and
xor
jno
call
or
inc
or
dec
jae
inc
mov
dec
inc
cmp
addr16
js
stc
test
sub
and
pop
sub
mov
fistps
mov
pop
jae
rcrb
sub
sbb
inc
push
inc
jno
es
push
out
ret
inc
mov
arpl
je
je
cmpb
aaa
mov
sub
inc
cwtl
add
call
dec
test
imul
scas
sub
pop
sti
sbb
mov
ljmp
je
xor
call
add
push
mov
call
stos
mov
xchg
mov
and
loopne
decb
xor
xchg
xor
mov
stc
in
sbb
push
sub
jae
pop
les
dec
rorb
andl
xchg
push
mov
sub
mov
mov
aam
mov
adc
lods
mov
call
and
es
pop
cmc
xchg
sbb
adc
pop
jns
dec
iret
add
loopne
xor
mov
xchg
xor
jmp
je
leave
cmp
push
pop
xchg
dec
mov
mov
sbb
mov
or
jmp
xchg
in
inc
nop
scas
sub
sahf
mov
pop
cltd
dec
dec
jns
pop
add
loop
inc
lods
xchg
add
outsl
add
das
outsb
inc
pop
in
or
cmp
and
adc
shlb
lods
mov
movsb
sub
adc
mov
inc
ja
inc
push
sub
js
jns
add
jle
ljmp
movsb
sbb
push
push
icebp
add
dec
lods
in
pop
xor
sub
repnz
enter
push
fstps
call
xchg
insl
je
or
popa
or
fsubrs
repz
mov
sarb
push
cmp
cld
pop
jle
lods
mov
lock
clc
dec
pop
xor
imul
mov
subl
aaa
dec
test
and
out
imul
call
and
stc
pop
js
ja
fmull
pop
call
dec
aaa
ja
loopne
sub
jno
and
mov
push
mov
sbb
push
sbb
leave
shlb
pushf
sbb
in
call
je
andb
in
sub
ljmp
sub
or
inc
rolb
lods
std
and
jnp
fadds
push
call
push
sbb
outsb
xor
mov
sbb
xchg
adc
repnz
jmp
jns
aad
lods
adc
fcmovnb
dec
shl
lret
shrl
or
xchg
push
cs
rcll
lea
lahf
aas
sub
ljmp
fdivl
cmp
shlb
clc
push
data16
sbbl
lahf
movsb
cmp
subb
mov
xor
mov
adc
and
js
xchg
ficoms
xor
dec
push
in
je
jp
sbb
mov
cmpsl
loope
cld
sub
push
jp
pop
insb
xor
call
pop
push
mov
xchg
sub
jmp
shr
fwait
nop
sahf
out
inc
cs
test
mov
cmp
jp
xchg
sbb
in
xchg
nop
ljmp
pop
rcll
mov
push
es
add
mov
cs
mov
roll
or
call
mov
dec
and
push
xor
fs
in
xor
call
mov
aad
lcall
daa
scas
sbb
sbb
repnz
jg
push
call
pop
mov
mov
fstp
xor
cmpl
mov
cmp
rclb
xchg
xor
and
stos
inc
cmp
xchg
daa
lds
mov
add
sar
or
or
adc
pop
repz
push
sbb
sub
lcall
xor
loope
jns
push
call
add
imul
push
mov
dec
stos
out
push
out
sbb
orl
arpl
mov
es
hlt
lods
mov
mov
sbb
loope
aaa
daa
or
fistps
pop
add
push
add
repz
repnz
aad
pop
stc
push
jle
pusha
movsb
leave
scas
inc
outsb
push
popf
sbb
adc
fs
test
add
dec
fldenv
mov
icebp
fsubp
adc
mov
fidivl
jae
test
movl
rcrb
sub
dec
test
add
in
mov
popa
add
xchg
sahf
or
or
or
scas
ret
icebp
sbb
in
test
test
mov
push
sub
mov
inc
cld
mov
jl
jb
add
mov
push
loop
inc
popa
in
add
in
mov
sub
push
lea
lods
and
and
inc
cmpb
pop
mov
sub
call
dec
jo
sub
andl
xchg
inc
nop
or
test
adc
dec
loopne
icebp
inc
fnstsw
inc
repnz
stos
inc
add
pop
jge
inc
mov
sub
jb
psubsb
leave
js
hlt
mov
add
inc
pop
adcb
xchg
negl
inc
mov
enter
call
xchg
gs
js
pop
adcb
add
sarl
xchg
sbb
cmp
mov
call
cli
stc
sbb
or
sub
add
jb
xor
aaa
sbb
push
adc
mov
and
dec
ja
roll
fldl
bound
sar
adc
mov
dec
arpl
or
sub
xor
jl
cmp
dec
mov
test
jle
call
mov
inc
stos
es
jbe
push
dec
je
push
rolb
fnstcw
xchg
fs
add
pop
stos
or
push
or
test
enter
js
mov
call
testb
nop
mov
loopne
movsb
jl
loope
mov
cwtl
and
sbb
sbb
test
xchg
sbb
pop
rorb
pop
inc
pusha
adc
mov
pop
jno
sub
fcompl
sbb
fs
adc
jnp
mov
repz
cli
fwait
bound
xchg
push
je
xor
or
mov
out
ret
adc
insb
adc
fdivrl
push
add
stos
or
cli
aas
faddl
push
adc
jbe
test
ret
cmp
lea
aam
inc
or
fmull
js
int3
ja
repnz
call
fcoml
add
push
mov
pop
cmp
adc
clc
call
lds
adc
xlat
f2xm1
popl
imul
inc
lret
loope
pop
pop
call
pop
jns
xor
insb
push
bound
cld
xor
mov
fbld
mov
inc
mov
imul
loop
movsb
or
mov
xchg
inc
popf
jnp
jne
adc
test
adc
push
lret
je
adc
pop
xor
mov
push
jnp
nop
and
mov
lret
jmp
mov
bound
daa
fnsave
call
and
mov
cmc
xor
or
rolb
xchg
out
data16
push
mov
pushf
jae
out
mov
adc
add
pushf
mov
dec
lock
fcoms
lock
pop
lea
or
addr16
push
lock
aam
call
mov
rcll
ljmp
cmp
sub
mov
insl
dec
mov
js
mov
mov
fdiv
fisttps
pop
scas
lcall
dec
mov
sub
mov
lds
add
mov
xor
pop
sub
ljmp
and
orb
js
xchg
lret
add
jbe
jns
adc
pop
mov
jmp
movsl
xor
push
mov
lret
add
inc
and
add
pop
sub
mov
cmpb
push
dec
push
mov
loop
inc
out
repz
je
pusha
sbb
test
faddl
sub
dec
aam
sub
out
cwtl
fisttpl
lea
cli
xchg
fwait
xchg
fmull
mov
pop
mov
sbb
adc
insb
adcb
pop
xor
mov
dec
enter
gs
xor
cmp
lahf
or
mov
dec
inc
cmp
es
mov
and
push
sub
xchg
jb
xchg
add
test
and
fadds
or
adc
and
andps
sbb
xchg
stos
mov
cmp
inc
lods
dec
sbb
lcall
pop
mov
inc
and
insl
addl
ljmp
or
leave
cmpl
cmp
jge
pop
ret
pop
pop
enter
adc
or
rcl
or
add
dec
sbb
ss
mov
je
mov
mov
inc
push
xor
dec
flds
push
xchg
mov
sbb
mov
and
mov
cli
add
sbb
bt
or
or
outsb
pop
adc
push
dec
dec
js
aaa
loop
ljmp
dec
mov
ljmp
sub
rol
and
in
in
and
cmp
pop
cs
push
mov
inc
add
push
icebp
or
mov
sbb
xchg
sub
push
hlt
aam
mov
mov
daa
dec
jno
aaa
jecxz
cwtl
nop
dec
sbb
movsl
xchg
jmp
call
xchg
ret
stc
loop
push
insb
test
addr16
orb
pop
dec
or
imul
sahf
add
cs
add
jge
sbb
cmp
hlt
xor
shrl
mov
out
adc
dec
adc
arpl
inc
cmp
inc
xchg
xchg
mov
mov
and
push
loop
lods
in
xor
loop
add
add
xor
test
pop
mov
add
shll
dec
lret
icebp
in
dec
jmp
in
dec
or
std
jmp
or
outsb
cld
sub
scas
in
icebp
pop
call
lret
and
out
sbb
stc
sbb
and
mov
aad
jge
cmp
mov
subb
scas
cld
repz
je
or
nop
rclb
call
pop
in
mov
hlt
add
xor
lea
xlat
imul
inc
cmpsl
loope
adc
push
decl
rcr
ret
jge
faddl
pop
sti
adc
ret
or
outsl
clc
xchg
and
dec
sbb
cmp
scas
in
ss
mov
cltd
pop
inc
lcall
xor
dec
sbb
sbb
js
pusha
cwtl
jnp
adc
leave
add
rclb
in
adc
cmpsl
ret
push
scas
pop
in
in
mov
push
fxch
in
inc
in
fs
pop
sbb
dec
mov
cmp
ja
subb
dec
push
xchg
pop
fsts
xor
push
jmp
lcall
adc
movsl
xchg
adc
mov
lcall
movsl
sub
out
add
adc
add
pop
int3
imul
adc
sub
loopne
movsl
shl
xchg
lret
test
aad
sub
or
mov
arpl
push
lahf
add
cs
outsb
add
adc
push
je
dec
addr16
out
sbb
dec
mov
das
fcompl
adc
scas
pop
out
xor
fsub
add
xchg
mov
inc
pusha
sub
dec
lods
int
or
js
jmp
ljmp
add
enter
add
hlt
cmpsl
add
ret
cld
cmpsl
in
mov
in
popf
sub
adc
stos
dec
sbb
mov
enter
mov
fildl
push
pop
subl
repnz
repnz
call
pop
xor
mov
pop
shr
out
pusha
add
push
iret
lea
sub
test
and
inc
sbb
or
dec
xor
dec
and
jecxz
mov
xchg
mov
les
loopne
das
push
push
lret
fs
inc
adc
dec
jne
inc
popf
xchg
fisubs
inc
daa
pop
cmp
fstl
aas
stc
mov
pop
jbe
pop
or
lret
jmp
inc
jp
iret
test
cwtl
push
and
push
jg
xor
pop
les
inc
rcrl
bsf
dec
xlat
dec
cmp
jecxz
xchg
push
sub
or
cli
pop
cmp
fsubrl
daa
in
notl
inc
or
lret
lds
or
call
pop
arpl
push
jp,pn
std
fmull
add
push
cs
fbld
inc
sbb
or
out
xor
cmp
adc
jle
inc
mov
leave
adcb
or
fadd
push
jge
rcll
nop
dec
fadds
add
or
lahf
sahf
mov
mov
hlt
push
dec
inc
cli
cmc
inc
mov
jae
mov
pop
push
adc
push
lock
mov
test
inc
mov
lods
out
lds
repnz
or
cmpsl
test
xchg
lret
xchg
jl
imul
cmp
and
or
cmpsl
mov
call
cwtl
pop
jl
dec
push
jp
xchg
jecxz
pop
fwait
push
aad
mov
jne
rorb
inc
jge
out
xor
sbb
out
add
lods
inc
sbb
lods
inc
imul
outsl
mov
pop
and
cwtl
xchg
subb
add
imul
aad
cmp
movsb
pop
xor
mov
subb
decb
call
sbb
cwtl
mov
mov
cmp
mov
or
jl
push
push
mov
lea
pop
int
jmp
test
cmp
fxch
mov
mov
inc
lahf
xor
insl
pop
subl
push
push
jg
jle
sub
add
jns
sbb
or
or
ja
loope
adc
jg
and
sbb
cmp
add
mov
mov
or
or
sbb
int3
subb
test
insb
jo
in
ret
sub
stos
sbb
adc
lahf
stos
sbb
push
inc
test
inc
andl
inc
jno
inc
sbb
mov
lret
pushf
xor
mov
cwtl
dec
dec
and
lea
in
jg
xchg
mov
repz
incb
mov
mov
pop
popw
inc
inc
mov
insl
xchg
mov
les
insb
or
int
mov
imul
cmpsb
rol
sub
pop
sarb
push
xchg
push
stos
insl
imul
mov
inc
fimull
add
mov
lea
std
fcomip
in
add
mov
sub
push
pop
jl
jmp
add
test
dec
or
ja
sub
xor
xorl
sub
sbb
mov
cli
popf
test
and
lret
je
adc
lret
iret
inc
dec
sub
aad
aad
or
xchg
shrl
sbb
aam
cmpsl
sbb
ja
sub
mov
lods
dec
inc
aas
sub
call
outsl
and
lods
mov
mov
lods
cmp
sbb
dec
jb
or
icebp
loop
add
call
add
insb
mov
mov
pusha
das
daa
loopne
loope
sub
shlb
cmp
mov
roll
inc
xor
pop
add
sbb
or
xor
add
imulb
or
xchg
inc
mov
stc
jnp
mov
fisubl
add
call
xlat
add
cmp
stos
xchg
jo
cmp
push
add
mov
dec
ss
das
pop
cs
aam
inc
call
fs
or
out
and
cli
adc
lahf
pusha
dec
cmp
mov
dec
je
lea
or
dec
insb
inc
dec
shrb
and
jp
push
rcrb
mov
xchg
ret
lods
pop
adc
or
js
and
sahf
mov
dec
mov
ljmp
outsb
pop
out
loop
sahf
inc
clc
mov
jae
push
ja
lret
push
jb
or
dec
test
movzbl
sub
inc
push
sub
enter
call
sarb
push
sbb
int
lahf
enter
lods
lods
mov
or
insb
xchg
aaa
inc
and
and
push
sub
sbb
mov
mov
das
pop
pop
mov
fadd
ljmp
dec
mov
add
in
test
sahf
add
xchg
xchg
add
and
rclb
movsb
inc
das
lods
mov
sbb
cli
adc
mov
aaa
mov
or
push
lods
or
arpl
sub
dec
fiadds
leave
sbb
cmp
maxps
sbb
or
movl
adc
lods
enter
mov
pushf
in
orb
insl
lar
cmp
and
adc
or
pushf
clc
call
sub
lods
or
cmp
or
lods
cmc
orb
xor
je
pop
std
add
add
pop
adc
adc
dec
or
mov
cmp
loope
push
pop
push
push
mov
jns
popa
je
sub
push
pop
mov
add
adc
and
imul
mov
loop
pop
mov
ret
xor
daa
repz
stc
sbb
pop
aad
imul
inc
push
add
adc
adc
mov
add
or
in
jo
call
mov
mov
ljmp
push
shll
jle
pop
mov
ljmp
test
jmp
mov
mov
xchg
lods
stos
movsl
loopne
push
or
xorb
ds
mulb
pop
outsl
pop
lret
pop
and
test
jge
push
in
jno
sub
rorb
pop
jns
fldcw
push
pop
sbb
cmp
orb
clc
notb
call
mov
xor
imul
pop
mov
xchg
cld
fnstsw
add
mov
add
or
push
pushf
leave
mov
dec
sbb
mov
jns
mov
dec
les
jg
xchg
push
push
inc
cwtl
xor
sbb
test
sub
push
jno
cmc
sti
cmp
add
addb
pop
xchg
xor
cmp
rcrb
xor
fcompl
call
pop
push
pusha
dec
mov
cld
fs
in
loopne
into
mov
inc
std
test
aam
shr
add
mov
in
sub
jae
sbb
or
mov
and
mov
fistps
arpl
and
sbb
push
push
sbb
repnz
testl
mov
push
mov
popf
mov
ja
sbb
jl
adc
add
mov
adc
sub
sbb
or
cmp
cwtl
sub
test
mov
mov
fbstp
inc
addb
sub
mov
xor
inc
daa
out
sbb
imul
adc
mov
adc
nop
test
sub
inc
or
fdivr
inc
je
dec
sbb
push
les
roll
repnz
adcl
sub
pop
ja
or
popf
ja
lcall
orb
mov
push
adc
adc
push
dec
mov
mov
pop
out
test
test
adcb
scas
popl
shrb
insl
nop
out
rclb
sbb
push
sbb
pop
cmpsb
paddsw
cmp
stos
mov
shl
adc
mov
popl
pop
movsb
sub
fsubs
and
pop
fnstenv
ja
push
imul
inc
pusha
xor
add
pop
jb
or
pop
ret
shll
or
mov
ljmp
inc
pusha
inc
test
xchg
dec
sbb
sub
dec
int
pop
sub
and
add
enter
imul
or
sbb
jb
add
nop
bound
faddl
mov
jp
inc
mov
cmp
js
inc
rorb
xchg
in
mov
add
loop
adc
sbb
jle
sbb
shll
jge
adc
ds
cmc
dec
sub
clc
push
fadds
sti
sub
stos
cmp
outsl
cmp
cltd
movsl
out
aam
or
cmp
fsts
pop
ljmp
xor
push
pushf
divb
or
pop
jne
jg
loope
dec
nop
dec
call
and
pop
hlt
adc
lahf
aad
movsb
lea
mov
dec
jns
js
mov
jl
xchg
arpl
ljmp
lock
lods
jne
push
insl
mov
add
push
jb
mov
add
xor
push
popa
push
shr
div
sub
pop
inc
pop
sarl
test
fcmovnu
xchg
fidivl
push
push
aam
inc
inc
pop
mov
push
cwtl
push
stc
or
pop
shrb
jno
sbb
test
or
pop
or
or
insb
adc
scas
jl
cld
add
xlat
scas
sbb
shl
mov
data16
sbb
clc
dec
cmp
out
add
or
rcrl
loope
or
xchg
and
lods
dec
dec
add
xchg
ja
sub
cli
gs
and
jl
leave
pop
mov
daa
push
lret
mov
arpl
bound
mov
dec
dec
sub
mov
cmpb
ja
adc
inc
dec
orl
dec
and
push
add
pusha
push
stos
add
pop
pop
call
mulb
leave
sub
mov
mov
fildl
and
aam
jns
or
pusha
xor
lods
outsb
mov
popf
es
jo
sahf
sbb
cmp
dec
pop
xchg
adc
and
ret
cmp
xchg
pop
bound
into
sbb
rol
push
and
test
and
mov
dec
call
cmp
dec
dec
cmc
sbb
data16
fsubl
dec
add
mov
jns
ret
or
sub
add
aad
xor
test
xchg
xchg
mov
sbb
clc
mov
sbb
mov
mov
decb
jae
add
insl
push
mov
lret
leave
or
cmpsl
inc
pop
ret
adc
pop
add
xchg
add
push
pop
stc
or
adc
pop
mov
addl
or
cmp
add
call
jnp
fadd
adc
jge
jbe
lcall
stos
int3
inc
xor
popf
mov
push
cmp
mov
shl
mov
mov
xchg
int3
push
inc
add
cli
add
jmp
jne
pop
call
leave
mov
xor
jnp
mov
cmpl
adc
test
adc
testl
and
xor
cwtl
cmpb
push
sbb
fldt
mov
jge
cs
sbb
push
dec
mov
icebp
fists
test
pop
mov
mov
aam
cld
inc
cmp
lods
xchg
or
dec
sbb
xchg
jae
mov
lcall
sbb
loope
mov
pusha
sbb
sub
inc
adc
cld
add
ss
out
cmp
adc
ss
lea
fsts
hlt
push
xchg
fldcw
xor
jg
jb
inc
aad
jp
testl
mov
mov
lret
lods
and
adc
gs
sbb
inc
test
ret
fnstenv
adc
shlb
inc
push
sub
jmp
stc
or
and
push
adc
sub
sbb
adc
ret
lods
mov
pop
push
xorl
mov
icebp
pop
call
cli
mov
call
or
jns
mov
enter
mov
mov
daa
mov
push
cmp
aas
pop
mov
adc
and
clc
je
dec
repnz
loop
xorb
repnz
mov
sub
call
lods
int3
dec
jne
xchg
adc
pop
call
xor
das
dec
aam
call
ds
dec
sub
and
pop
jl
pop
das
adc
mov
lcall
loop
xchg
test
xchg
adc
sbb
adc
mov
adc
sub
sbb
scas
pop
and
sarb
loopne
dec
lods
cltd
loopne
add
pushf
sbb
jbe
cwtl
pop
push
xor
sti
mov
add
and
pop
sbb
add
les
inc
insb
es
push
sub
in
nop
daa
jmp
pop
shrb
inc
push
pop
mov
adc
or
test
movsl
jge
les
mov
movsb
inc
xchg
adc
lock
and
xchg
out
mov
icebp
adc
pop
push
add
pop
xchg
jo
add
stos
or
orl
jmp
dec
jne
test
cmpsb
and
test
push
lret
sub
jge
pop
mov
xor
adc
in
dec
jl
dec
dec
insb
sub
adc
es
mulb
mov
pop
xor
and
test
or
rorl
jne
xchg
or
popa
pop
or
enter
push
push
inc
fimuls
fdiv
outsl
rorl
pop
rol
sti
xchg
or
xchg
or
jmp
test
dec
jo
mov
xchg
inc
scas
or
push
test
call
dec
lock
jg
or
lahf
xor
sbb
inc
sub
mov
outsl
mov
add
movsb
xor
je
xchg
cmp
mov
mov
pushfw
adc
nop
dec
sbb
push
add
data16
sub
add
push
xchg
cli
inc
nop
mov
pop
mov
dec
daa
daa
pushf
imul
enter
mov
xchg
jbe
mov
push
dec
inc
sub
out
stos
push
inc
jmp
xchg
mov
andb
hlt
sbb
cltd
lret
mov
clc
and
push
adc
mov
mov
dec
sbb
inc
mov
mov
cs
fcomps
push
lret
or
inc
push
dec
fs
add
xor
lret
dec
push
add
dec
adc
lea
inc
scas
fdivr
mov
add
call
or
push
mov
rsqrtps
adc
dec
xorl
test
in
sub
push
int3
in
push
mov
sub
xor
xchg
test
test
cmpb
or
inc
bound
push
popf
fnsave
mov
aam
out
pusha
xchg
push
inc
xchg
xor
popf
popf
and
and
popf
or
xchg
inc
mov
rcrb
call
cli
test
or
mov
inc
das
sub
in
sbb
enter
or
inc
jmp
fidivs
jne
aam
ret
push
popf
shlb
cli
scas
mov
inc
lret
lahf
sub
mov
inc
sti
dec
stc
lods
icebp
dec
mov
mov
gs
mov
adc
xor
pop
push
call
iret
into
je
add
mov
test
cmp
dec
in
ss
push
cmpsb
insb
pushf
ds
stos
push
sbb
mov
add
mov
and
add
mull
jae
add
pop
bound
push
xor
cmp
inc
mov
call
xchg
pop
mov
push
xor
add
repnz
int3
xchg
or
or
or
dec
xchg
fiaddl
fldenv
iret
sbb
adc
call
mov
cmp
sub
lea
std
xchg
sub
test
daa
sub
aad
subl
fs
xor
dec
fistps
dec
lret
cmp
dec
int
out
outsb
adc
and
push
mov
mov
push
andb
pop
shrb
add
mov
das
inc
cmp
cmp
push
pop
adc
xor
test
call
fimull
and
aad
inc
jp
cmp
popf
fidivs
mov
call
jle
jge
xor
mov
pop
sbb
enter
in
leave
jp
fcoml
and
movsl
bnd
loopne
clc
sbb
push
imul
inc
push
pop
sub
dec
xchg
and
popw
sbb
cltd
push
cmc
mov
mov
sub
cwtl
xchg
push
or
mov
xchg
in
xor
data16
cmc
pop
cmp
push
js
mov
mov
movsl
in
lods
mov
sub
lock
xchg
mov
mov
pop
xchg
pop
push
xchg
mov
out
mulb
xchg
xor
and
push
mov
xchg
leave
xchg
sub
xchg
fcompl
mov
lret
and
ret
mov
dec
and
xchg
xchg
test
in
add
or
mov
pop
fcomps
aam
sti
lods
and
xor
add
pop
bswap
xchg
cli
or
out
and
into
or
adc
in
daa
xor
or
movsl
cmpsb
testb
or
cld
movsb
shr
xor
xchg
sbb
xorl
mov
jns
adc
mov
sbb
testb
dec
pop
hlt
push
int3
or
outsl
aaa
add
add
lret
add
leave
imul
call
aad
jge
popa
fiadds
pushf
jl
sbb
xlat
push
sbbb
mov
inc
dec
add
pop
aas
sbb
out
and
sub
imul
add
mov
mov
popa
movsl
inc
dec
mulb
dec
loop
stc
pusha
or
sbb
or
jnp
sub
mov
sahf
sub
dec
fidivrs
je
mov
stc
rcrl
shrb
cli
js
imul
data16
cltd
push
fstpt
sbb
add
mov
mov
pop
shlb
push
pop
in
adc
rcrl
jmp
adc
stc
ret
fs
xor
push
mov
ss
stc
push
ds
addl
ds
mov
mov
subl
cmp
xchg
inc
icebp
cmp
xor
cmpsb
mov
jecxz
stc
dec
popf
sub
cmp
xlat
stc
jg
xor
or
call
stc
adc
inc
sbb
sub
jbe
andl
mov
in
nop
fisubl
lahf
inc
sbb
adc
dec
outsb
add
aas
push
cs
cmp
sbb
sti
mov
stc
js
movsl
imul
sbb
pop
rclb
outsb
sahf
dec
cld
or
pop
and
jne
popf
jmp
xchg
jp
and
jne
imul
jb
test
adc
cli
pop
ficompl
push
lret
test
lods
mov
inc
scas
mov
mov
add
repz
jmp
clc
int
in
or
test
orl
sbb
arpl
mov
leave
push
mov
jnp
iret
orl
loopnew
add
dec
adc
push
lods
call
jne
pop
pop
test
push
cmp
jg
popa
aas
test
jae
add
cmc
sbb
pop
mov
scas
pop
int
push
sbb
lods
inc
stos
xchg
mov
cmp
adc
pusha
push
aad
mov
add
nop
in
call
out
pop
outsl
in
movl
leave
xor
push
scas
xchg
pop
ss
mov
and
push
outsb
mov
add
or
mov
adc
nop
adc
call
cmp
mov
rcrb
stc
inc
inc
mov
repz
pop
add
loope
arpl
mov
nop
stc
scas
dec
dec
out
adc
adc
dec
jb
xchg
dec
sub
mov
je
sbb
pop
sbb
add
pop
mov
pop
mov
std
mov
xchg
mov
mov
popf
inc
mov
add
mov
clc
xchg
popa
inc
pop
push
cmp
fidivrs
mov
pop
dec
pop
fs
pop
bound
or
mov
jmp
fadds
jmp
in
add
nop
and
cmp
push
jl
pop
adc
xchg
in
pop
pop
jmp
mov
pop
add
je
loopne
pop
dec
mov
test
adc
push
enter
repz
push
xchg
jb
mov
sti
xlat
sbb
mov
imul
call
push
jo
dec
and
xorl
mov
mov
test
sbb
cmp
test
pop
add
sbbl
xor
ffreep
or
adc
push
cmp
adc
js
jmp
fucomp
inc
sbb
jecxz
pop
pop
push
add
lahf
mov
cmp
mov
xor
mov
jo
or
popf
call
jne
jl
push
fwait
mov
cmp
mov
adc
inc
cmp
dec
cli
pop
dec
jo
or
enter
sub
out
scas
jmp
imul
or
insb
imul
out
jp
imul
mov
cmp
xchg
mov
xchg
add
mov
lods
cli
xor
lock
xor
arpl
xchg
cmp
add
and
mov
push
out
lea
lret
daa
cmp
mov
mov
cmc
sbb
adc
mov
xchg
lcall
aas
sbb
scas
jno
mov
enter
mov
push
addb
adc
call
push
mov
or
mov
pop
mov
lret
and
cmpsb
incb
js
pop
dec
mov
enter
mov
jne
gs
add
daa
pushf
add
push
andb
inc
jmp
jo
ljmp
sbb
rorl
mov
aam
lods
lea
sarb
add
icebp
or
mov
xor
inc
imul
sbb
pop
inc
ret
es
fnsave
mov
ror
pushf
mov
add
mov
jl
sbb
dec
inc
idivl
stos
sub
pop
mov
adc
inc
addr16
int
repnz
out
out
mov
jbe
incl
pop
test
out
inc
pushf
xchg
lcall
fsubs
pop
pop
mov
xchg
rclb
mov
mov
xor
aam
in
notl
movsb
xor
bound
dec
xor
cmp
inc
leave
pop
xlat
jns
push
rolb
lods
mov
or
sbb
cmc
in
adc
ret
push
js
ljmp
imulb
fsubrl
sti
xchg
frstor
out
jo
xor
sub
scas
lcall
inc
enter
ljmp
pop
orb
xorb
or
data16
inc
mov
in
or
cmp
fadds
test
call
add
shrl
jg
mov
ret
and
push
stc
mov
sbb
dec
ret
or
add
out
arpl
and
aas
add
add
stos
addl
adc
mov
push
sub
mov
mov
jl
jne
inc
dec
or
call
dec
xor
xor
mov
mov
or
repnz
adcb
sbb
aam
ja
xor
cli
jb
inc
sub
adc
xchg
and
lcall
inc
icebp
or
pop
adc
or
mov
icebp
push
push
inc
outsb
jae
bound
sarb
pop
add
test
cmp
out
inc
lea
mov
adc
dec
leave
outsb
lret
jno
cmpsl
aad
mov
lret
push
das
inc
push
shrb
xchg
push
sets
test
scas
ret
daa
jno
fdivrs
scas
mov
stos
add
pop
cwtl
pop
dec
dec
shl
repnz
sar
fimull
inc
cld
cmpsb
xchg
push
xor
pop
mov
int
jl
pop
in
add
pop
call
pop
aas
in
mov
call
es
je
adc
cs
insb
insb
jl
in
mov
loop
jno
pop
adc
ret
popa
mov
cli
scas
je
cwtl
pop
dec
in
cmp
push
inc
aam
lret
int
sbb
mov
xchg
jmp
sbb
pushf
xor
sti
sbb
inc
mov
jbe
jns
sarb
jnp
out
ret
and
fcomps
test
xor
pop
int
push
add
shlb
push
daa
fmuls
dec
mov
mov
mov
sahf
addl
jg
cltd
mov
mov
movsl
or
insl
cmpl
shrb
fldt
pop
cli
gs
sti
xor
rcl
or
lods
jmp
ja
pop
sahf
adc
mov
mov
xor
sub
push
shrl
hlt
sub
dec
pop
shl
xchg
jmp
and
mov
lahf
stos
and
nop
push
inc
sub
push
enter
js
and
cmp
push
dec
ljmp
mov
xchg
mov
daa
hlt
sar
es
inc
mov
movsl
js
loope
add
push
dec
mov
shll
sbb
dec
adc
mov
cs
lea
pop
bound
sub
jge
imul
scas
inc
adc
push
mov
mov
test
in
or
fldl
push
data16
orb
roll
fdivl
mov
in
ret
mov
ret
faddl
adc
and
gs
rolb
fimull
cmp
mov
dec
pushf
enter
jo
lea
aaa
fimull
call
cld
jp
adc
pop
lea
mov
and
mov
aam
inc
outsl
je
push
in
ds
test
js
jp
jl
jb
or
or
adc
lea
sub
imul
mov
call
dec
lds
sbb
xor
dec
sub
pop
jae
mov
pop
jo
repz
addb
sub
adc
lea
adc
mov
and
xchg
or
xchg
int3
jb
or
scas
dec
inc
mov
add
fwait
mov
pop
lods
inc
roll
pop
stc
xchg
sbb
scas
push
ljmp
or
sarb
les
sbb
out
mov
mov
lds
push
xchg
push
lea
adc
mov
ss
imul
dec
pop
stos
pop
imul
xchg
stos
add
xlat
add
add
call
xchg
cli
popa
push
push
pop
ret
push
rorb
sti
sbb
mov
jmp
cmp
jo
cmp
jl
cmp
cwtl
inc
push
inc
jnp
cwtl
aam
sbb
jo
pop
orb
xorb
push
sbb
jo
in
xor
testl
add
mov
and
mov
push
ljmp
sub
and
fidivrs
xchg
leave
shrb
shrl
sbb
pop
into
xrelease
call
pop
int
imul
push
cli
push
mov
push
jbe
mov
and
dec
xor
push
xor
xchg
mov
sub
sbb
int3
jl
cmp
cmpb
mov
sbb
mov
shrl
cmpsb
fiaddl
mov
cs
cmp
adc
add
pusha
push
ret
loope
icebp
xchg
and
adc
push
push
cmp
xchg
cs
adc
addb
dec
sarb
push
adc
push
mov
adc
ss
das
call
cli
es
adc
push
sbb
adc
decl
inc
test
and
inc
pop
ret
adc
es
mov
adc
xchg
cmpl
insl
adc
sub
fisubrl
adc
add
and
sbb
cltd
adc
insb
sbb
xchg
adc
sbb
shlb
xchg
cmp
addb
cmp
push
fsubrl
fimuls
xchg
cmp
mov
jle
and
mov
lods
pop
pop
test
adc
xchg
mov
mov
mov
xchg
repz
xchg
mov
repz
icebp
cmp
cs
jl
stos
xchg
dec
ljmp
adc
ret
inc
les
fsubrs
mov
loope
adc
mov
jno
jae
out
add
lds
shlb
call
cltd
leave
mov
mov
lahf
or
dec
mov
add
adc
mov
ljmp
call
cmp
test
movsb
jg
ds
maxps
xor
or
jge
rolb
xor
ljmp
adc
add
jns
sbb
xchg
mov
aam
and
adc
xor
aaa
repnz
call
dec
jmp
sub
xor
push
fcomps
flds
in
jl
call
es
lods
in
hlt
das
faddl
lods
scas
movsb
hlt
add
loope
imul
adc
enter
addl
fnstenv
shlb
bound
mov
cmpsb
lods
xor
pop
incl
dec
add
stos
in
push
mov
pop
imul
test
adc
jecxz
mov
sbbl
cld
mov
xchg
xchg
outsl
push
out
lock
jae
push
das
int
sbb
jecxz
int3
sub
add
dec
jmp
inc
out
push
sahf
outsl
outsb
mov
xchg
shlb
sbb
repz
pop
dec
dec
push
fcomps
lret
aas
add
sti
adc
add
fwait
mov
rcll
mov
jne
and
int3
mov
pop
adc
xchg
notb
enter
push
xchg
rclb
pushf
inc
bound
add
pop
push
leave
mov
pusha
test
mov
xchg
or
inc
rorl
sub
push
daa
mov
pop
adc
or
js
pop
xchg
popf
xor
xor
dec
adc
cli
sti
mov
xchg
enter
rcrb
cmpsb
in
pop
lods
dec
enter
mov
sub
jns
sbb
mov
es
pop
xor
pop
pop
shll
pop
add
sub
pop
pop
or
cmp
xchg
enter
rcrb
test
sub
pop
pop
es
rcll
sbb
sub
pop
pop
adc
call
lods
mov
outsl
adc
ret
dec
or
xor
addl
jb
lods
pop
xchg
jne
ss
hlt
notb
push
mov
cmc
mov
data16
inc
out
hlt
cmc
xchg
xor
mov
jl
imul
push
sub
or
leave
addr16
clc
push
scas
rcrb
jb
xor
mov
iret
hlt
call
add
or
incb
test
push
popf
cld
hlt
adc
or
hlt
pop
inc
cs
mov
sub
jmp
mov
fistpll
std
test
xchg
sbb
mov
nop
hlt
pop
loopne
js
and
call
daa
mov
mov
jle
orl
loopne
inc
mov
mov
ret
and
test
dec
xchg
jbe
dec
mov
ljmp
enter
test
incb
or
dec
pushf
pop
ret
lcall
lcall
push
push
and
dec
mov
dec
cld
mov
adc
push
aam
jp
test
cmpsb
sbb
loope
adc
mov
das
push
insb
mov
dec
adcl
pop
call
aas
cwtl
and
jmp
sti
out
pop
test
jle
sub
inc
pusha
dec
out
in
repnz
adc
std
push
dec
mov
sub
les
lds
add
xchg
mov
cmp
filds
loopne
jae
push
and
cmc
test
sarb
shlb
lret
inc
data16
cmp
dec
sub
xor
jmp
add
cmp
call
dec
mov
dec
jmp
jb
rcrb
mov
add
lret
pop
jnp
push
aaa
inc
lret
out
mov
sub
das
popl
lock
call
xor
in
pop
adc
ljmp
aam
xchg
or
stc
mov
and
js
mov
pop
push
sbb
xchg
mov
outsl
inc
xor
scas
mov
xchg
imul
xchg
xor
mov
dec
push
adc
cltd
xor
loopne
mov
mov
xor
push
call
mov
shlb
xlat
mov
pop
rorb
jo
pusha
stos
mov
push
and
pop
xor
mov
or
imul
dec
xor
test
fs
cld
mov
cli
add
lret
dec
js
jg
sbb
shll
mov
mov
popf
aaa
rcr
cmp
aaa
inc
push
push
sbb
add
mov
shrl
mov
and
dec
js
loopne
ret
jecxz
xchg
jge
sarb
pop
and
push
mov
in
int3
pop
push
pop
les
push
push
addr16
stos
push
and
jmp
and
push
add
test
add
xchg
rcrb
sbb
shr
mov
sahf
int3
jg
les
fsubr
pop
cmp
dec
cmp
jo
mov
pusha
adc
popf
stc
inc
xchg
jl
dec
fsubl
fcomi
sbb
sbb
mov
adc
iret
ror
cmp
fs
dec
push
daa
iret
lret
cmp
mov
out
mov
pop
sbb
adc
adc
pushf
lret
mov
xchg
jg
inc
cs
scas
std
push
inc
xor
mov
xchg
push
ds
jae
mov
add
cmp
sahf
mov
push
lea
xor
and
and
add
lret
jmp
in
mov
stc
mov
das
les
bnd
sbb
add
xor
mov
inc
loopne
sub
ret
out
jno
fmul
pop
sub
lahf
jnp
mov
mov
int
cmc
inc
rorb
dec
insb
push
push
packssdw
ss
push
dec
je
sub
pop
adc
and
call
mov
pop
sahf
pop
testb
cmp
gs
pop
int3
sub
test
mov
adc
popf
inc
shll
add
aaa
cmp
push
and
cmp
enter
mov
and
inc
push
mov
sub
hlt
outsb
les
dec
pusha
jae
xchg
pop
inc
xchg
pushf
insb
sbb
out
sbb
dec
and
insl
jg
sub
pop
pop
into
jae
xor
mov
or
pop
ljmp
mov
sbb
nop
mov
movsl
mov
mov
push
ss
cmp
inc
dec
lods
sub
inc
or
sahf
pusha
call
fistps
xchg
lds
repnz
sub
daa
int3
insl
dec
fs
push
ljmp
mov
add
mov
out
cmp
sub
pop
and
or
or
jno
fisubrl
pusha
jmp
pop
mov
iret
and
fstpt
or
std
mov
scas
xor
mov
into
push
pop
dec
cmp
pop
mov
jmp
cmp
cmp
movsl
sub
push
stc
dec
int
das
inc
cmp
dec
mov
xor
scas
enter
outsl
jne
loopne
insb
insl
or
imul
jmp
lahf
std
lcall
fs
pop
pop
fadd
mov
sub
xor
mov
xor
pop
inc
mov
push
sub
jmp
sub
mov
mov
or
orb
xchg
dec
pop
push
add
iret
repnz
call
cmc
mov
pop
and
push
dec
inc
lods
out
hlt
push
call
cltd
ja
in
aaa
and
arpl
inc
loopne
jecxz
rcll
inc
leave
jl
stc
pop
imul
sahf
adc
test
mov
pop
test
sub
add
scas
cmpsb
lret
mov
or
push
stc
jns
sbb
add
and
pop
call
mov
inc
push
outsl
lock
mov
das
sar
cmp
hlt
jae
inc
or
scas
jo
hlt
loope
adc
aad
xorb
adc
fdivrs
stc
xor
shrl
pop
in
jae
cwtl
jae
xchg
stos
xchg
loope
xor
ret
inc
sub
hlt
scas
bound
mov
jg
xchg
add
pop
out
adc
out
pushf
jne
push
pop
adcb
mov
push
outsb
push
mov
sub
ret
sbb
cmpsb
and
ss
and
or
cwtl
aas
pop
popa
loope
pop
subl
fimull
dec
pushf
icebp
outsl
mov
mov
pop
or
hlt
clc
loop
sub
mov
mov
cmp
mov
mov
push
mov
mov
pop
dec
dec
divl
mov
mov
lea
ret
mov
cld
popa
mov
lahf
sbb
out
mov
jbe
cmp
sbb
fsubr
push
les
push
lods
mov
test
add
in
movsl
sbb
jl
out
outsb
or
xchg
out
ficompl
inc
mov
pop
add
lds
push
enter
lcall
rol
mov
pop
inc
dec
in
cmpsl
mov
mov
dec
outsb
mov
loopne
or
shr
sti
mov
sub
lock
pop
call
dec
mov
mov
adc
cmp
sbb
pop
stos
add
jbe
js
out
add
mov
mov
pop
call
mov
insl
pop
jb
adc
inc
pop
rolb
stc
cmpsl
stos
jp
pop
loope
stos
insb
cwtl
lcall
outsb
stos
add
mov
insb
push
lcall
dec
jge
mov
test
inc
fstl
data16
add
loope
pop
shr
rcrl
popa
cmpsl
stos
jp
pop
clc
enter
aaa
inc
push
adc
inc
lods
notb
fstpl
mov
push
aad
cli
icebp
stos
mov
es
call
test
lds
mov
pop
mov
enter
xchg
jnp
ret
pushl
stos
add
stc
icebp
stos
int3
shrl
mov
stos
insb
add
push
js
stos
hlt
ficoml
pop
enter
hlt
call
add
sbb
mov
sti
cmp
sbb
xchg
adc
fsubl
xor
fisubl
cli
test
jbe
sbb
cli
or
loopne
cmc
add
adc
push
xchg
or
lea
stos
out
xor
push
stos
sub
fiadds
xor
adc
dec
mov
daa
test
lock
stos
int3
push
aaa
arpl
call
add
adc
or
push
out
dec
stos
jle
pop
loopne
aaa
dec
pusha
add
mov
xchg
sbb
hlt
fiadds
ss
sbb
add
pop
add
imul
and
dec
xchg
add
nop
cltd
stos
stos
jb
xchg
add
hlt
in
sbb
rcl
jge
imul
movsl
ror
xor
cli
ljmp
sub
int3
sub
pop
sbb
push
cwtl
or
xchg
stc
sub
fstl
test
loope
xchg
pop
mov
push
xchg
sbb
inc
add
icebp
mov
push
dec
nop
mov
cmp
pop
cmp
sbb
jmp
and
rclb
push
push
and
mov
jl
mov
loop
cmc
push
add
lods
test
mov
int3
subb
mov
add
mov
sub
je
movsl
adc
in
jns
and
jmp
xor
stos
cmpsl
enter
or
lcall
shlb
xor
sub
cmp
push
cmpsl
sub
jge
repz
pop
jno
popa
lahf
out
jb
stos
xor
insb
pop
andb
mov
js
sbb
push
popa
lock
push
xor
and
mov
mov
lea
sbb
xor
xchg
jb
call
pusha
sub
mov
test
fbld
scas
insb
ss
sbb
addr16
nop
cmp
fcomps
movsb
fisubrl
dec
dec
jl
add
cmp
and
subl
rorl
mov
push
xchg
cmp
xor
sub
jmp
mov
das
xorb
outsl
jns
cli
or
sub
in
dec
rorb
and
cmp
or
orl
jb
mov
scas
sbb
mov
mov
call
int
out
jg
loope
call
shlb
pop
in
inc
pop
mov
mov
pop
movsb
out
leave
out
add
es
ja
mov
inc
scas
pop
xchg
inc
jno
or
cld
ffree
jo
adc
shrl
sub
inc
loop
ret
pop
stos
shlb
scas
sbb
icebp
and
cmp
stos
jmp
xchg
or
ljmp
xor
and
sub
scas
insb
popa
aam
add
in
or
mov
xchg
mov
mov
test
push
out
out
mov
inc
xchg
add
push
cld
insb
xlat
sbb
call
adc
cmp
xor
pop
xor
or
fisubs
sbb
sbb
movsb
mov
fidivrl
cwtl
sbb
push
aas
or
and
xchg
pop
daa
xchg
dec
dec
mov
test
das
data16
mov
mov
pop
loope
imul
add
sub
mov
dec
cmp
adc
jge
sti
not
jb
add
mov
xor
outsl
xchg
in
stos
pusha
jmp
imull
mov
pushf
mov
stc
inc
add
mov
movsb
test
lods
orb
aaa
mov
add
and
add
mov
aas
pusha
stos
add
mov
or
test
mov
test
lahf
pop
mov
icebp
dec
test
call
hlt
cmp
mov
fdivrp
pushf
inc
and
repnz
insl
insb
lds
xor
hlt
adc
mov
mov
fcompl
hlt
stos
sub
fiadds
inc
jg
adc
call
xchg
inc
movsl
xor
pop
xor
dec
dec
sub
das
test
xchg
mov
mov
push
sbbb
cmp
mov
push
inc
adc
stc
les
stc
outsl
inc
add
cmp
sar
sub
in
cmp
push
ror
out
adc
lcall
repnz
pop
je
movsb
add
cmpsl
add
inc
mov
gs
mov
dec
adc
vpandn
mov
push
test
xor
xchg
out
enter
mov
out
cmp
adc
mov
rep
lcall
sbb
fmull
jg
into
pop
dec
lahf
mov
mov
lret
or
mov
inc
and
mov
test
lret
sub
inc
xchg
outsl
lds
mov
mulb
cmp
add
sbb
dec
adc
loop
sub
cltd
mov
nop
in
mov
push
sub
pop
sbb
xchg
mov
js
jb
call
dec
jmp
test
sbb
sahf
fcomps
daa
clc
push
ficoml
mov
pop
int3
adc
call
or
cmp
inc
jo
insb
cltd
push
movsb
or
rep
jle
adc
add
or
mov
pusha
aaa
push
mov
xchg
into
jge
int3
mov
loope
mov
push
mov
leave
mov
ljmp
add
divl
mov
nop
and
loopne
push
mov
out
lret
gs
xchg
inc
pop
inc
sbb
cs
push
test
or
pop
shrl
ret
jb
cmp
in
sub
and
dec
sub
shr
cmc
in
pop
aam
sbb
std
mov
sub
jo
insb
movsb
adc
mov
imull
out
sahf
popf
arpl
mov
cmp
xlat
push
shll
fsts
out
pushf
dec
sbb
cld
call
bound
filds
aad
sub
or
add
sarb
push
sbb
sbb
ljmp
xchg
lea
in
lods
fistps
dec
pop
add
lods
test
sbb
push
leave
or
std
xor
js
pop
shlb
fs
mov
aam
les
push
decb
push
les
stc
test
sub
mov
mov
pusha
adc
sub
mov
mov
pop
cmp
push
or
into
cld
mov
mov
push
add
jb
daa
push
mov
call
push
leave
loop
mov
add
mov
sbb
cmc
lret
nop
push
outsb
js
add
sbb
mov
in
jecxz
nop
add
orl
add
and
xor
jb
popf
dec
or
sbb
push
sbb
mov
or
sub
rcrl
dec
cwtl
mov
push
sarl
xlat
cmp
das
arpl
push
adc
je
inc
jp
roll
adc
sahf
cwtl
mov
xor
xor
mov
adc
roll
xor
jecxz
add
add
sbb
scas
add
or
mov
or
xor
cmp
enter
insl
add
mov
jns
test
add
mov
inc
nop
ret
lods
adc
int3
or
call
movsl
aas
mov
sub
cli
dec
shl
mov
mov
bnd
sub
test
add
addr16
add
lahf
xlat
sbb
test
lcall
ret
cmp
and
je
or
add
hlt
dec
in
ss
pop
add
sbb
lahf
inc
out
xchg
sbb
jns
fwait
xor
stc
push
int3
js
lahf
dec
sbb
mov
cmpsl
push
mov
mov
scas
rcrb
add
je
mov
mov
adc
mov
int3
nop
jp
stos
or
push
dec
mov
pop
push
test
stc
push
lods
cmpsb
cmp
sub
or
mov
sub
incl
mov
add
mov
fsubs
push
cli
xchg
xor
stos
inc
inc
mov
scas
dec
cwtl
or
test
test
pop
mov
mov
arpl
xchg
das
jl
mov
sub
mov
adc
aas
jg
ljmp
mov
and
xchg
or
dec
les
call
dec
je
test
jae
in
lea
nop
push
lahf
push
or
push
mov
or
dec
test
mov
sub
pushf
sub
sub
rclb
clc
divb
imul
mov
adc
add
aad
push
test
sub
adc
subb
mov
xor
hlt
stos
sbb
lods
cmp
movsl
mov
jne
mov
fwait
cmp
imul
scas
cmovs
or
cmp
js
test
pop
jae
fstp
jge
cmp
call
popf
mov
xor
incb
sub
fldl
in
adc
mov
jp
add
and
sahf
or
or
or
adc
jnp
adc
pop
je
and
in
inc
fwait
call
add
data16
add
jmp
in
out
lds
mov
ljmp
insb
add
mov
cmp
mov
dec
inc
dec
test
push
and
out
int3
adc
sbb
sub
jbe
push
or
pop
dec
aam
xchg
cmpsb
lock
enter
add
sbb
and
pop
mov
push
mov
hlt
and
or
inc
loop
sub
test
push
xor
mov
test
enter
mov
or
movsb
icebp
jae
lahf
clc
sub
pop
out
pop
js
pop
xorb
xorb
pop
repnz
adc
add
daa
jle
jp
aad
rcl
mov
std
js
es
fwait
or
jnp
subl
popf
adc
sbb
push
push
in
lods
out
fisttpl
mov
xchg
cltd
xor
subb
xchg
push
inc
imul
idiv
lcall
pop
and
dec
xchg
pop
mov
test
pop
int3
inc
sub
sbb
pop
xor
jne
mov
push
inc
push
or
insb
sub
mov
jg
call
cmpsb
fdivs
fstps
pop
aad
sbb
inc
pop
sarl
pushf
lret
pop
stc
cwtl
lods
cltd
out
xchg
or
in
inc
or
sbb
in
mov
out
xor
pop
pop
iret
dec
xchg
scas
roll
cmp
movsb
inc
pop
xor
pop
sbbl
pop
sub
push
lock
xchg
add
pop
xchg
jno
and
leave
mov
cmp
imul
sbb
imul
sub
push
mov
sbb
or
mov
mov
loopne
incb
cltd
inc
icebp
jnp
push
or
int
loopne
insl
loop
mov
sar
or
mov
push
lods
mov
popa
sub
dec
mull
movl
sub
rorb
daa
pop
in
push
sub
add
lret
cs
rcl
mov
pop
xchg
mov
jl
mov
sbb
fdivl
loope
scas
push
outsl
cwtl
or
lret
inc
xchg
sub
xlat
or
ljmp
adc
cld
add
pop
add
pop
inc
push
rcrl
dec
pusha
pop
sbb
lds
bound
mov
jge
es
pusha
adc
dec
sbb
xchg
add
leave
hlt
mov
aaa
lds
int3
inc
xor
das
add
ljmp
sahf
jmp
fs
fcoml
mov
call
insl
test
cmp
insb
mov
ss
push
pop
cwtl
adcl
jmp
xchg
pop
bound
or
mov
fs
test
bound
out
and
pop
lahf
mov
cmc
and
and
xchg
nop
hlt
or
mov
ds
rorb
jge
mov
imul
clc
xchg
enter
int3
clc
lcall
or
insb
fucomip
std
movsl
fwait
imul
hlt
and
cmp
pop
xor
adc
imul
imul
adc
lods
imul
ja
test
mov
adc
xor
repnz
int
dec
adc
adc
xor
daa
sbb
pop
daa
adcl
lods
idivl
scas
push
mov
and
sub
mov
call
mov
je
push
popf
lods
dec
mov
out
mov
repz
stos
sar
inc
test
xor
mov
daa
pusha
adc
push
inc
push
or
insb
sub
shrb
xchg
mov
popl
ret
mov
dec
scas
roll
fcoml
add
daa
push
pop
int3
iret
lea
mov
hlt
fistl
pop
sbb
add
bound
cmpsl
cmp
std
inc
inc
fdivl
cmp
pop
call
mov
mov
das
or
cmp
or
push
dec
mov
mov
xor
push
jge
push
andb
xor
mov
mov
aaa
lahf
or
inc
js
cwtl
push
sti
es
nop
pop
int3
pop
push
sub
daa
sub
lods
xchg
shll
rcl
lahf
fldt
and
js
pushf
inc
lret
adc
dec
leave
gs
mov
shll
incb
out
xchg
or
xor
cmp
mov
cmp
pop
ss
inc
ja
call
mov
enter
fnsave
stos
shrl
lea
mov
adc
add
mov
mov
lea
pop
stc
or
testb
jl
js
lea
sbb
lret
testl
xchg
out
iret
lods
mov
sbb
mov
gs
loop
cmp
in
mov
shrl
sbb
jnp
inc
mov
adc
jb
or
call
jno
push
dec
fdivs
dec
jo
cmpsb
adc
cmp
push
and
adc
sbb
cmp
adc
jecxz
add
fldcw
sub
sbb
repnz
mov
pop
nop
int
pop
pop
or
sbb
dec
add
push
inc
sub
jge
cmp
loopne
adc
popl
shlb
in
mov
stc
push
jbe
jo
lret
ss
mov
dec
popf
test
sarb
addr16
xor
pushf
out
push
mov
mov
lea
pop
mov
jbe
and
cli
clc
shll
call
sub
sti
mov
or
jg
push
dec
xor
clc
pop
pop
dec
lods
lods
stos
je
jae
jne
and
sbb
mov
call
enter
mov
jle
jmp
push
xchg
scas
leave
mov
dec
push
xchg
pushf
or
stos
aam
and
or
call
daa
or
popa
fwait
xchg
iret
test
or
xchg
out
fdiv
mov
cmp
jl
push
push
outsb
mov
ds
push
push
repnz
call
les
aad
lea
incb
and
imull
pop
lods
pop
sbb
inc
push
mov
aam
lahf
dec
jg
mov
sub
xor
mov
xor
xchg
adc
outsl
xchg
mov
stos
cmpsl
mov
xor
dec
mov
ret
and
adc
xchg
dec
add
mov
scas
jmp
dec
xchg
mov
push
inc
mov
sub
jmp
fcompl
cmpsl
mov
mov
mov
lods
inc
and
lret
inc
pop
iret
mov
sub
push
fistl
xor
xor
scas
xchg
mov
icebp
push
mov
xchg
push
xor
xchg
lahf
add
and
sbb
mov
fcos
fistpl
lret
xor
adc
jl
rorb
mov
jl
cmpsl
mov
mov
lahf
nop
mov
add
and
ret
inc
aaa
stos
xor
pop
shlb
data16
adc
pop
cmpsl
pop
pop
cli
and
dec
jnp
js
add
ljmp
sub
inc
int
xchg
mov
xchg
mov
jl,pn
clc
add
sbb
shll
pop
mov
test
mov
sub
xor
scas
or
adc
inc
add
popf
mov
pop
or
mov
scas
lods
push
xchg
mov
pop
sub
push
mov
das
nop
fstl
js
fwait
push
xor
cltd
in
stos
mov
es
and
inc
dec
inc
mov
call
xchg
pop
mov
inc
pop
aaa
jo
sub
mov
test
mov
pop
add
call
testb
bound
add
notb
jl
test
mov
ret
das
inc
cli
dec
movsb
cmpsl
xchg
fstpl
jnp
pop
xchg
dec
hlt
testb
mov
mov
andb
and
icebp
mov
mov
call
je
fidivl
cmpsl
add
mov
mov
int3
cld
imul
cmc
inc
lods
fdivrs
push
jnp
jmp
sbb
lahf
int3
faddl
push
add
out
stos
or
test
jnp
sub
or
sahf
fsubl
and
lcall
xor
dec
mov
popf
or
test
clc
xchg
cmp
push
inc
sbb
xchg
inc
sub
push
lods
sarl
mov
fildll
push
in
push
mov
cmp
add
pop
lock
cmp
mov
xlat
lret
int3
sub
mov
rolb
mov
mov
xchg
hlt
mov
xchg
xor
cmp
lahf
pop
push
xor
shlb
dec
sbb
add
cmp
or
call
pop
popf
arpl
mov
addb
mov
jge
fwait
mov
cs
fwait
popf
fcoml
loopne
lods
mov
sub
pop
movsl
es
popa
scas
jne
mov
jbe
or
jmp
mov
ss
bound
mov
lds
or
scas
cld
push
or
pop
mov
mov
cmp
xchg
loopne
pop
shrb
mov
push
enter
roll
repnz
push
xchg
adc
xor
jg
dec
jnp
sbb
test
inc
sub
das
pop
out
sbb
or
dec
xor
adc
lahf
cld
shll
testl
add
mov
in
pusha
call
fdivrp
jge
loop
and
mov
inc
cwtl
and
stc
movsb
mov
movsb
sar
and
sbb
cmp
call
aam
bnd
sub
push
imul
testl
pusha
addl
inc
mov
sub
lret
fwait
popa
pop
dec
jmp
sar
fisubrl
je
cld
xor
cli
sub
dec
sbb
xchg
cltd
out
dec
movsl
ja
sub
clc
outsl
leave
jne
pop
and
nop
out
inc
mov
pop
jae
and
std
ljmp
or
pop
pop
jb
xchg
xchg
pop
adc
inc
aaa
mov
inc
sub
or
call
mov
xchg
add
in
mov
cmp
xor
add
mov
int3
aam
jbe
pop
stc
add
or
shl
lods
cmpsb
scas
mov
filds
jecxz
in
pop
cmpsb
lret
cmp
int
repnz
fbld
xchg
pop
sbb
cmp
cmp
and
jge
andl
test
pop
addb
fidivrs
imull
push
pop
cli
push
pop
push
cmp
sub
xchg
psubsb
xchg
pop
or
imul
xlat
xchg
or
sub
xchg
ret
sti
sahf
lcall
xchg
sbb
cs
push
mov
inc
sbb
mov
lock
shr
int3
jns
xor
inc
test
subb
nop
stc
fmull
push
cmp
icebp
adc
outsl
imul
or
adc
push
nop
push
add
xor
cltd
mov
cmp
mov
scas
inc
test
sub
int3
cmp
int
cwtl
inc
cmpsb
test
or
adc
sbb
sub
ss
xchg
and
mov
movsb
popa
cltd
add
mov
cli
and
inc
test
sahf
ljmp
ret
inc
xchg
mov
mov
ret
jmp
xor
jne
pop
sar
fwait
aam
rclb
lret
adc
loope
add
enter
jbe
xor
stos
adc
adc
scas
push
or
neg
inc
push
fadd
adc
call
fidivl
xor
pop
pop
push
sarl
push
xchg
loop
jbe
cmp
mov
jge
in
mov
and
popa
les
xor
ljmp
lret
enter
fsubrs
xchg
xchg
add
loope
cld
sbb
in
mov
xlat
xchg
push
cwtl
or
inc
aaa
hlt
fs
cmp
push
xchg
or
insb
enter
jne
push
loop
cli
stos
into
pop
ss
js
xchg
push
or
jbe
insb
js
je
pop
jo
subl
add
repnz
add
and
cmp
lcall
ret
xchg
movsl
push
icebp
data16
sbb
lret
sbbl
mov
int3
lods
popf
jo
ret
xchg
mov
loop
in
mov
out
mov
mov
pop
call
stos
adc
dec
mov
lahf
ss
addr16
or
cmp
pop
bound
imull
jbe
fsub
sbb
test
adc
push
gs
sbb
mov
sbb
shr
push
popa
xor
mov
int
test
mov
test
int
or
adc
js
or
push
sbb
mov
fidivrs
notl
mov
call
adc
push
adc
push
sub
add
xor
negl
sbb
shl
and
btr
push
or
mov
adc
int3
mov
ds
imul
stos
inc
adc
call
add
rdmsr
jne
mov
mov
push
roll
fbstp
lret
pop
dec
nop
cmpsb
fimull
inc
add
call
inc
adc
xchg
lods
inc
insb
xchg
mov
ret
cmp
ret
inc
cmovne
mov
les
lahf
jg
push
rcrl
xchg
out
push
aad
testb
inc
add
push
dec
jbe
inc
call
push
mov
aam
call
xor
inc
mov
sti
or
jb
mov
nop
call
test
dec
fmull
out
mov
lcall
addb
mov
cmpsb
sbb
mov
je
out
leave
cmp
xor
mov
insl
mov
out
dec
and
mov
aaa
mov
sub
and
add
inc
mov
call
mov
cli
and
imul
insl
loopne
xor
fcompl
mov
insb
jmp
les
hlt
jl
imul
popa
repz
sti
pop
dec
xlat
daa
sarl
out
inc
gs
ljmp
gs
aaa
jno
jb
mov
rorl
and
daa
sarb
xchg
xor
sbb
lcall
popf
pop
and
rorb
lcall
xchg
sub
pusha
pop
call
mov
leave
adc
or
jge
repnz
popa
xor
decb
leave
sbb
popf
test
push
add
addr16
xor
or
jle
repnz
movzbl
mov
add
int3
mov
add
ljmp
subl
out
data16
mov
movsb
push
jb
test
int3
in
push
adc
sbb
lods
jmp
inc
mov
mov
push
call
ret
jmp
cmc
adc
sub
jle
fcoml
or
xchg
enter
loop
add
repnz
call
cli
or
xor
inc
sub
add
cmc
das
aam
pop
int3
subl
gs
or
mov
jne
mov
or
lahf
dec
out
push
inc
inc
cmp
stc
sbb
sub
add
mov
pop
adc
xchg
rcrl
cld
cmpsb
hlt
dec
dec
cmpsl
lret
loop
fmull
in
push
dec
mov
rolb
inc
xchg
mov
inc
xor
aaa
sub
add
pop
adc
les
cmp
iret
andb
or
mov
das
hlt
call
or
lock
or
sbb
cs
xchg
in
adc
pushf
mov
mov
inc
cmp
dec
imul
cld
lea
xor
cli
and
xor
das
les
cltd
cmc
inc
dec
mov
pop
pop
and
push
sub
aam
cmp
ret
cs
and
test
cmp
xor
dec
or
push
or
imul
push
dec
into
in
adc
inc
sub
fbld
call
push
sbb
shlb
sbb
pop
jae
sbb
cmpsl
lahf
jl
ficoms
or
add
roll
jg
test
dec
pop
add
xor
cmp
addl
add
daa
or
add
in
out
out
nop
int3
enter
pop
add
mov
loop
push
outsb
jae
add
rolb
dec
dec
mov
call
cld
lahf
sahf
jne
negb
inc
out
faddl
sbbb
fcomp
or
cmp
pushf
fs
aam
and
rorb
mov
adc
add
mov
and
jmp
push
leave
push
mov
test
push
das
ja
add
jge
stc
lods
xlat
mov
nop
test
sbb
inc
sub
cwtl
sti
daa
jmp
aam
nop
sub
jo
call
out
or
cmc
and
repnz
cmp
sbb
daa
jmp
and
dec
jmp
popa
mov
movsb
orb
pop
mov
xchg
call
mov
push
sbb
mov
in
sub
lods
sub
stos
xor
filds
push
sbb
pop
cmpsb
sbb
and
and
call
je
add
negl
dec
dec
adc
mov
orb
es
mov
std
cmp
add
pop
call
je
cltd
lea
xor
loopne
out
mov
call
out
ljmp
adc
xor
arpl
sti
cmp
or
hlt
fwait
push
pop
popf
mov
add
pop
mov
xchg
ret
and
or
add
dec
sbb
in
xor
jecxz
shrb
call
aas
xorl
adc
or
xchg
in
loopne
popf
xor
mov
adc
sub
mov
adc
pop
jle
dec
dec
push
pop
xor
sub
push
pop
jne
adc
sbb
mov
je
sub
fisubl
cmp
jmp
ror
and
pop
jne
enter
nop
ficomps
or
cli
cwtl
or
nop
add
mov
mov
call
cmc
mov
xor
es
testl
lea
mov
in
mov
mov
pop
inc
repz
inc
addr16
mov
nop
sub
jne
adc
sbb
stc
int3
ljmp
mov
push
inc
xchg
adc
dec
adc
cmp
cs
ss
call
fidivrs
dec
test
xor
dec
mov
add
push
mov
movsb
das
xchg
outsb
cld
scas
and
lods
dec
pop
insl
mov
inc
jb
sbb
pop
mov
in
dec
sbb
and
lret
and
out
inc
lods
repz
mov
adc
sbb
xchg
push
subl
lea
xchg
adc
dec
movsb
mov
cmp
push
xchg
dec
cmc
test
clc
jle
xor
push
mov
imul
push
pop
out
xchg
xchg
add
ret
mov
and
mov
loope
out
push
fs
loope
cli
lods
mov
icebp
fstpl
mov
jns
jae
call
sub
adc
outsb
xor
push
adc
add
or
fadds
cwtl
js
xor
mov
sub
xlat
mov
mov
fsts
xor
jecxz
xchg
push
call
mov
addr16
mov
es
fs
fsubl
add
lretw
push
stc
adc
test
adc
dec
inc
sub
and
lahf
pop
ret
and
dec
sbb
push
or
push
pushf
loope
fs
das
pop
xor
lea
push
cmp
xor
push
xchg
push
imul
faddl
ficoms
fisubrl
xlat
sub
mov
test
andb
sub
adc
lods
dec
add
sar
xor
mov
mov
fsubl
xchg
dec
mov
fs
mov
pop
into
add
sarb
lods
pop
inc
sub
js
dec
pop
sahf
ljmp
lret
repnz
mov
add
mov
adc
daa
dec
mov
mov
push
fcompl
pop
xor
dec
roll
call
fcoms
loope
dec
das
pop
leave
or
push
fs
icebp
and
pop
popf
mov
cs
test
adcb
pop
test
das
pop
sub
pop
stc
lea
sub
jmp
mov
adc
mov
mov
jmp
xlat
repz
xor
mov
xor
xchg
mov
push
mov
mov
xor
xchg
and
mov
mov
clc
nop
sbb
and
movsl
pop
sbb
dec
lods
push
test
cltd
shrb
and
adc
outsb
mov
push
cmp
dec
lahf
xor
popa
dec
push
divl
nop
inc
push
push
enter
ret
mov
loop
jbe
lods
mov
andl
enter
inc
pop
adc
ret
lcall
fs
cmp
repz
call
daa
fsubrp
sub
mov
mov
mov
into
rolb
mov
testb
ss
mov
int3
fmull
test
fnop
push
ret
mov
cmp
mov
xchg
push
pushf
sarb
pop
or
rcrb
push
jmp
outsl
pushf
sbb
mov
xchg
xchg
pop
pop
sub
mov
in
stc
ss
push
mov
push
decl
xor
xor
leave
xchg
pop
pop
sub
or
push
push
lret
push
adcb
jbe
add
inc
mov
dec
movsl
pusha
adc
and
lods
xor
sub
sub
jmp
aam
mov
out
or
jge
or
or
lea
pop
cwtl
pop
fdiv
roll
sbb
outsl
sbb
arpl
or
and
sbb
inc
aas
adc
ljmp
adc
jp
mov
xchg
sbb
push
inc
jae
notb
ljmp
aas
sbbb
subb
xor
test
ja
xlat
das
outsl
sbb
sarb
stc
dec
lock
popf
pop
dec
scas
lock
cmc
ficoms
in
jge
rorb
push
xor
pop
ficoml
xor
xchg
sbb
orb
and
das
std
sub
cmp
mov
pop
or
call
daa
ljmp
jl
and
or
push
lods
je
stc
loop
push
jns
mov
rolb
mov
insb
pop
and
mov
imul
jmp
mov
in
fidivs
mov
fdivrs
sub
insb
sbb
rolb
xchg
inc
push
insb
xchg
or
or
fldl
mov
repnz
pop
sub
nop
roll
sbb
jb
push
ja
jecxz
push
pop
mov
pop
pop
sbb
xchg
add
mov
push
sbb
add
fs
shrb
add
xor
mov
push
xchg
jecxz
cmc
and
mov
data16
cmpsb
lret
test
bswap
outsb
sbb
fmulp
gs
lods
fnsave
or
gs
pop
daa
stos
imul
fisttps
popf
add
add
outsb
mov
mov
add
out
movsl
cli
sub
mov
lea
mov
pop
cmp
daa
test
popa
jg
pop
mov
test
call
jno
ljmp
orb
mov
add
push
lcall
fstps
push
and
lods
push
mov
cmpsl
jo
insl
repnz
mov
into
xor
sbb
shrl
cmp
test
call
pop
cmpsl
clc
fmull
cltd
sbb
adc
movsb
mov
test
mov
scas
xchg
imul
test
cld
inc
or
mov
xor
adc
call
inc
addr16
int3
cmp
mov
shl
and
cld
xchg
mov
std
adc
hlt
xchg
push
roll
mov
bnd
jns
movsb
mov
push
or
es
jmp
cwtl
pushf
inc
jb
jp
xor
mov
inc
mov
sub
cmp
adc
jne
pop
es
xchg
inc
xchg
fbld
adc
and
sbb
jo
push
repnz
in
int3
jno,pn
sub
fisubrl
jb
inc
jecxz
int
lcall
outsl
push
cs
mov
test
push
push
outsb
jecxz
inc
test
stos
mov
jo
dec
and
push
sarb
sbb
lds
sbb
cltd
pop
mov
xchg
fiadds
adc
jl
cmp
daa
loope
pop
and
jmp
test
mov
loope
js
cli
mov
mov
test
scas
ss
shrb
cmpsb
flds
jne
pop
loop
sbb
adc
dec
cmpsb
mov
mov
aad
xor
mov
call
les
mov
pop
mov
icebp
test
cmp
or
or
cmp
sub
pusha
dec
adc
push
sbb
outsb
jl
xor
sahf
je
lea
inc
adc
fstl
jle
arpl
shlb
add
cli
lds
sbb
fmull
outsl
dec
insb
repnz
lods
scas
xor
aam
push
cmp
fiaddl
pusha
add
and
cld
xor
lsl
mov
int3
sub
arpl
leave
adc
imul
dec
in
inc
dec
enter
dec
add
push
sub
addl
jl
mov
sub
popf
shll
inc
imul
sbb
pushf
inc
xor
in
loop
scas
test
jb
fdivr
inc
add
jl
fisttpl
fs
lods
or
add
push
outsb
aaa
jl
mov
xor
test
and
imul
xor
dec
mov
cli
in
xchg
mov
popf
aaa
dec
xchg
adc
ss
fldl
imul
inc
stc
icebp
push
xor
orb
mov
xor
dec
or
pop
cmp
lock
push
mov
mov
cmp
rorl
inc
stos
pop
arpl
insb
push
pop
cs
je
sbb
jb
imul
jle
push
aas
xchg
sbb
pusha
test
lret
pop
mov
frstor
scas
cld
and
cmp
cmpl
pop
je
loopne
test
mov
push
lea
out
cmp
xor
sbb
mov
cwtl
shr
cmp
sbb
mov
stc
push
or
sub
leave
xchg
aam
dec
es
daa
dec
arpl
insl
les
inc
xchg
adc
loope
or
std
mov
dec
pop
dec
loop
inc
cmp
add
jmp
mov
enter
call
adc
mov
xor
pusha
adc
dec
add
push
in
out
adc
add
xchg
sahf
jmp
ja
sub
repz
and
movsl
jle
call
int3
jmp
ljmp
and
xchg
dec
movl
repz
and
xor
sub
int3
test
popa
sbb
hlt
hlt
dec
dec
js
or
sub
enter
jne
mov
sub
push
dec
fistl
mov
rorb
movsl
mov
test
js
cmp
pop
push
sub
or
jg
mov
mov
enter
xchg
mov
in
xor
mov
jnp
daa
push
dec
int3
jo
cltd
mov
jo
call
movsb
jae
sub
call
mov
movl
cmp
add
es
push
repnz
cmp
add
clc
fcoml
add
lds
dec
pop
cmp
mov
repz
icebp
dec
jns
add
push
mov
mov
pusha
adc
dec
or
add
add
sbb
xchg
pop
out
ret
loop
aas
mov
lea
movsl
ja
daa
scas
mov
push
dec
sub
rclb
dec
cmpsb
xchg
push
adc
sti
jle
pop
cmc
ds
sarb
int
pop
sahf
out
movsb
cmp
cmp
xlat
xchg
lret
pop
popa
and
call
sub
into
repnz
sub
daa
das
mov
hlt
pop
int3
call
add
jmp
clc
lods
out
sbb
movsb
imul
sbb
lea
movsl
or
or
xchg
xchg
fmull
es
sub
inc
xor
cmpsb
cmp
cmp
xchg
push
cltd
lods
pop
pop
and
pop
dec
insb
mov
and
int3
fidivl
mov
xchg
adc
lret
pushf
inc
out
adc
ss
lods
add
pop
repnz
mov
and
and
movsb
sbb
call
add
cmc
or
dec
gs
push
jle
xchg
pop
test
imul
call
ss
hlt
pop
inc
push
lahf
and
fisttpll
test
mov
jle
imulb
cmp
mov
add
popa
push
jg
divl
in
xchg
popf
and
pop
repnz
adc
mov
sbb
lods
dec
mov
add
cmp
adc
sbb
mov
out
xchg
popf
fsubrl
mov
sbb
lea
add
addl
cmpl
xchg
add
cmp
dec
insb
sub
adc
cmp
aas
daa
insb
push
test
test
add
stos
xchg
cwtl
fildl
dec
pop
and
push
cs
stos
shrb
insl
hlt
xchg
shr
jp
jge
and
icebp
ja
xor
fdivs
lahf
mov
sbb
lods
idiv
sbbl
fimuls
jmp
jno
repz
mov
js
movsb
gs
adc
xchg
mov
mov
out
adc
or
pop
xor
cmp
jns
movsb
aam
nop
mov
lods
pop
inc
mov
sub
push
mov
jge
fwait
dec
jmp
lret
or
pop
enter
call
int
xor
add
jns
sbb
rcrb
gs
aad
xor
pop
jmp
cmp
aas
into
inc
add
shrl
cmpsl
in
es
test
pop
cwtl
mov
lret
out
test
mov
nop
arpl
dec
add
hlt
or
repz
cmpl
mov
popa
orb
xchg
sti
xchg
lret
dec
ja
out
stc
push
jmp
icebp
and
sbb
insb
mov
adc
movsl
sbb
int
inc
xor
add
pop
icebp
add
mov
push
test
xor
pop
cmp
adc
mov
jne
cmpsl
adc
cs
mov
sub
ss
call
neg
adcl
jne
inc
nop
repz
filds
mov
out
sub
les
js
xchg
ds
cltd
ds
and
or
push
sub
dec
dec
std
dec
cmp
movsb
sub
lods
mov
add
mov
adc
and
outsl
inc
xor
sahf
xchg
xor
mov
nop
out
dec
inc
or
xchg
mov
mov
xlat
js
dec
test
sub
js
lods
roll
xor
out
shll
addl
inc
adc
inc
xchg
jnp
and
sbb
mov
cwtl
jmp
sti
xchg
inc
ljmp
push
fs
dec
dec
jae
ljmp
adc
xchg
loopne
aam
pop
jo
xor
cmp
mov
call
jl
dec
xchg
test
inc
inc
js
movsb
inc
mov
cmp
std
xor
mov
sbb
xchg
sbb
andb
shl
adcb
push
jl
dec
cmp
ret
pushf
mov
bnd
mov
imul
mov
iret
ljmp
push
call
or
mov
outsl
test
xchg
adc
dec
xor
dec
sti
stos
fsts
negl
push
or
nop
mov
bound
sub
pusha
nop
xchg
mov
sub
pop
int
adcb
mov
add
dec
pop
mov
lea
lret
call
aad
cwtl
lahf
hlt
push
loopne
adc
or
push
outsb
sbb
rclb
in
fidivl
lock
shr
xchg
jle
dec
sbb
das
pop
rolb
push
fsubr
xor
repz
push
js
loopne
pop
popa
push
dec
mov
lods
lret
mov
ret
out
dec
imul
pop
xchg
fisttps
mov
int3
xor
test
mov
lods
cltd
sbb
or
dec
js
mov
adc
clc
div
mov
loope
mov
cwtl
xchg
jne
in
mov
lahf
xor
icebp
or
repnz
int3
jmp
pop
arpl
insb
pop
push
jnp
mov
push
fwait
dec
insl
in
insb
sarb
adc
or
loopne
mov
mov
mov
daa
mov
daa
pop
mov
adc
inc
push
lcall
mov
add
call
ret
add
loop
mov
cmpl
ret
jmp
das
xor
cwtl
movsb
mov
ret
ror
push
ficomps
cmpsb
push
stos
es
fisubrs
adc
or
sub
loop
add
inc
adc
cltd
xor
push
sub
les
inc
imul
push
call
push
addl
ret
sbb
inc
jge
std
addr16
inc
mov
rcr
je
rcr
dec
add
out
sub
out
cmp
dec
inc
mov
sbb
adc
pop
cmp
dec
inc
mov
xchg
mov
inc
cmpsb
jns
inc
inc
or
js
xchg
dec
sbb
aam
lea
fsubp
das
inc
fdivrs
test
call
add
es
adc
inc
dec
pusha
sbb
bound
inc
inc
aas
imul
fs
cli
mov
cld
jecxz
enter
cltd
sar
xor
cli
mov
sub
xchg
and
push
or
xlat
fisttpl
imulb
add
test
jno
pop
rolb
sub
sub
aam
mov
add
adc
mov
test
js
add
sub
loope
pop
pop
sbb
cs
out
sbb
sbb
sub
shrb
cmpsl
rclb
repnz
xchg
dec
ficomps
mov
dec
cmpsb
adc
xchg
mov
icebp
sbbb
sub
push
repz
push
push
sbb
je
dec
leave
inc
mov
das
shl
sti
loop
out
loop
daa
and
daa
lret
fxam
jns
push
in
cmp
outsb
mov
or
xchg
fisttpl
jl
pop
or
mov
vrsqrtps
and
ret
cld
dec
or
pusha
pop
mov
sbbb
lea
sbb
rcll
stos
xchg
leave
movsl
in
xorb
ljmp
call
fnstsw
add
outsl
adc
and
sbb
jno
push
fsubl
mov
and
and
imul
nop
jle
nop
in
jmp
mov
cmpsl
xchg
mov
pop
loop
test
shrb
jne
cmpsl
fld
lock
sbb
inc
xor
movsl
inc
and
fbld
jecxz
inc
pop
mov
add
imul
jbe
movsl
popf
jge
add
add
popf
push
xchg
movsl
pop
mov
push
ret
push
sti
or
in
sub
xor
les
pop
mov
mov
arpl
lret
icebp
orl
mov
ja
push
shrl
sbb
push
les
adc
loop
sarb
xor
lods
inc
push
cmp
jb
or
jb
or
scas
push
lods
or
ds
sbb
cmp
stos
int
ficoml
and
mov
and
mov
mov
push
pop
mov
out
imul
mov
jmp
mov
enter
mov
cli
push
sbb
jmp
mov
repnz
jge
mov
int3
int3
nop
jns
and
fildl
cmpsb
xlat
xchg
inc
hlt
nop
rorl
mov
xchg
dec
xchg
mov
movsl
push
mov
in
cld
sti
insb
xor
or
fcoml
pop
ss
aaa
loop
push
jge
loopne
fisttpl
push
call
inc
popf
jbe
or
xchg
inc
xchg
push
shrl
add
push
or
mov
cmp
mov
jle
cli
xchg
loope
arpl
xchg
sbb
xchg
ret
xchg
push
aam
xchg
sbb
pusha
jmp
pop
arpl
mov
push
add
xchg
aad
mov
lods
dec
das
xlat
and
lods
push
xlat
sub
mov
and
dec
mov
testl
adc
call
and
fstps
in
xchg
jbe
cmpsl
xchg
add
lods
out
test
fucomip
inc
mov
mov
mov
adc
lds
bound
orb
shr
and
jns
mov
movsb
lret
cmpsl
inc
imul
sub
enter
push
lret
sbb
insb
mov
mov
jae
add
mov
cmpl
fdivl
out
faddl
leave
stos
cltd
xor
cmpb
dec
stc
mov
lods
inc
fisubs
aam
cli
nop
call
sub
push
je
fs
inc
pop
jl
sti
sub
pop
aam
xor
jmp
cs
dec
test
mov
rolb
jecxz
inc
lods
addb
xchg
push
ljmp
imul
pop
mov
out
pusha
or
aaa
add
in
sbb
call
dec
insb
nop
mov
mov
xchg
pop
test
inc
inc
pop
sti
cmp
decb
push
rorl
xorl
jne
shll
mov
loop
and
fcomp
or
and
jge
mov
test
lahf
cmc
out
jle
mov
push
ja
mov
jb
push
sub
adc
adc
mov
int3
jnp
sbb
sahf
cmpsl
jnp
pop
pop
mov
loopne
mov
and
test
stc
hlt
lcall
push
dec
out
push
adc
mov
xor
imul
movsb
ffree
dec
xchg
inc
sub
ret
lret
jge
stos
in
mov
lahf
mov
daa
shrb
or
xchg
call
jp
sbb
arpl
dec
popf
jl
xorl
orl
or
xchg
inc
in
xchg
cld
out
jge
imul
gs
lea
je
or
stc
jnp
pop
test
lret
dec
add
add
cmpsb
push
hlt
stc
pop
fnstcw
dec
mov
and
mov
xchg
pop
xchg
aam
aam
loopne
push
add
push
call
rclb
aam
fcomp
jno
repnz
or
xchg
add
mov
and
cld
fiadds
repz
daa
xor
mov
testl
je
shll
lahf
ljmp
xchg
cltd
test
pop
mov
jno
fadds
ds
jo
and
cmp
adc
jbe
cmc
mov
jb
insb
push
or
sbb
call
cmpsl
add
lea
mov
repnz
call
or
jb
je
pop
sbb
ret
push
jecxz
adc
mov
add
lock
xchg
mov
and
mov
popf
mov
dec
stos
aas
inc
pop
rcll
icebp
cli
enter
or
test
xorl
enter
xchg
fldt
dec
add
leave
rclb
pop
add
popf
sti
pop
sub
inc
add
dec
pop
push
mov
pop
mov
dec
or
mov
xor
test
jno
stos
dec
cmc
jp
mov
popa
inc
inc
mov
dec
cld
imul
es
pushf
fidivrs
cmpl
jmp
push
ljmp
mov
sbb
add
xorb
jcxz
daa
cmp
jbe
and
ljmp
nop
inc
dec
or
movsb
lea
cld
rcrl
sbb
cmovo
and
pop
cmp
mov
pop
pushf
cmp
cs
mov
push
mov
mov
ds
sub
mov
in
daa
adc
and
xchg
hlt
sbb
cmpsb
ss
sub
sbb
and
and
mov
mov
fld
push
dec
add
ds
dec
pop
jbe
add
dec
or
in
lahf
sahf
or
filds
mov
or
push
in
push
imul
dec
in
int3
inc
and
rclb
jae
and
idivl
jg
aad
ficomps
into
dec
aad
outsb
les
fdiv
jae
imull
fisttpll
jmp
test
test
sub
mov
jb
rorl
sub
mov
sub
cs
fisubl
sub
js
push
shrb
clc
sahf
jae
mov
mov
sub
repz
jns
or
xor
scas
push
mov
dec
andl
ds
or
sub
test
dec
dec
mov
mov
call
and
xchg
xchg
mov
mov
pop
dec
xchg
in
xor
xchg
or
cwtl
jl
loop
pop
scas
xchg
rol
jge
out
icebp
pop
inc
aam
int3
sti
pcmpeqd
call
pop
aaa
add
adc
adc
xor
out
pop
and
sub
xchg
stc
pop
or
push
mov
inc
add
movsb
dec
jge
jnp
fiadds
call
cmpsb
add
push
jmp
ds
jmp
push
into
add
xchg
das
daa
mov
lcall
loope
dec
pop
mov
pop
xchg
in
cmpsl
push
xchg
adc
jle
jmp
int
xchg
and
leave
add
nop
add
xchg
popa
cmp
jl
ljmp
icebp
aam
xchg
inc
rcpps
push
int
push
cli
push
add
xchg
push
fcomip
lret
cmp
in
inc
cmpsl
jl
mov
xor
xchg
pop
pop
adc
push
pop
in
mov
sbb
adc
hlt
mov
hlt
dec
hlt
lods
pop
sub
adc
lret
lods
inc
insb
sbb
mov
cmc
sbb
dec
or
ja
ss
sub
cld
insb
call
in
jnp
lret
sub
xor
push
sub
imul
and
mov
lret
jmp
xor
les
add
daa
sub
inc
fdivr
or
mov
dec
rolb
insl
fcoml
inc
ljmp
cmpsb
mov
mov
jge
ja
pop
dec
cmp
inc
pop
inc
popa
sarb
jb
add
mov
inc
cwtl
adc
or
cmp
inc
repz
repnz
push
sub
adc
sub
les
pop
sbb
mov
nop
add
testb
inc
push
xchg
scas
mov
inc
cmpsb
xchg
jnp
mov
sub
pop
xchg
push
xchg
fldl
sub
inc
mov
adc
outsb
cmp
mov
or
repz
shlb
xlat
dec
mov
cmp
ja
icebp
pop
aam
andb
mov
xchg
mov
fdivs
into
inc
add
sbb
in
mov
jmp
push
sbb
fcoml
cmp
inc
mov
sub
movsl
ljmp
mov
or
sahf
aam
pop
and
popf
pop
push
pop
repnz
loop
inc
jns
and
mov
pushf
xlat
mov
sub
mov
and
sbb
lea
pop
mov
cmpsb
sbb
xchg
xchg
cmp
movsb
addb
sbb
mov
mov
orl
leave
popf
xor
in
pusha
adc
inc
adc
dec
sub
add
mov
xor
mov
sbb
add
outsl
popf
lods
imul
xchg
repz
popa
stc
out
popf
je
in
pop
imul
jb
dec
push
popf
pop
mov
cwtl
fnsave
arpl
xlat
pop
add
int
pop
cld
sub
jl
and
jecxz
mov
sbb
jbe
add
jns
jge
fsubl
pushf
je
scas
mov
cmpsb
xchg
scas
enter
js
jo
and
bound
xor
jne
sub
sub
cmp
scas
mov
and
xchg
cwtl
out
js
jo
inc
sbb
jmp
test
xor
mov
stos
adc
sbb
and
cmc
out
jns
or
out
inc
add
jmp
jb
xor
cmp
push
icebp
adc
sbb
pop
push
pop
xor
xchg
inc
in
loopne
lret
pop
mov
bound
push
rcrb
hlt
sub
mov
stos
adc
cld
xchg
sarb
jl
in
clc
jmp
test
aas
push
push
xor
rcrb
stos
addb
das
jp
push
pop
or
hlt
negb
xor
sub
mov
mov
orb
in
push
xchg
jmp
and
cs
add
popf
mov
or
fnstcw
dec
mov
mov
mov
sub
addb
jo
adcl
pushf
sbb
movsb
or
jbe
inc
xor
fsubl
lods
mov
jp
lret
mov
fldl2t
lcall
pop
scas
into
xchg
in
jle
mov
loope
dec
rcrl
jb
jl
pop
jns
mov
popa
pop
test
mov
push
pop
out
mov
inc
xchg
lods
ret
mov
pop
test
or
push
add
inc
jg
or
in
stos
call
shlb
pop
out
inc
pop
enter
add
push
pop
daa
dec
adc
inc
sbb
sbb
les
inc
insb
fcomp
cmpsb
adc
sbb
xchg
imul
repz
mov
xor
icebp
jmp
push
push
cmpsb
adc
or
add
add
test
sbb
jo
daa
cmc
push
xchg
dec
push
mov
or
popf
mov
pop
arpl
in
hlt
mov
push
pop
inc
sub
mulb
hlt
xchg
xor
xchg
sbbb
in
hlt
xchg
rcl
out
js
push
adc
das
sbb
stc
imul
mov
sbb
xorb
pop
xchg
fptan
pop
call
jge
popa
and
pop
xor
dec
inc
dec
xor
xchg
sti
adc
pop
add
add
push
dec
adc
int3
push
test
mov
aam
mov
adc
aad
dec
jecxz
pop
mov
fmuls
mov
cld
add
add
cmp
mull
mov
push
sbb
mov
cmpsb
inc
rolb
notl
or
sub
sbb
push
lcall
inc
pop
mov
test
dec
push
pop
adc
inc
les
push
lahf
loope
dec
pop
inc
int3
inc
cmp
mov
jne
pop
data16
mov
in
cs
and
dec
fs
jp
dec
mov
jne
and
int3
sbb
mov
jmp
adc
lock
call
imul
mov
or
xchg
or
jle
fsubr
hlt
popf
push
in
imul
pop
mov
and
lahf
shlb
shrb
push
hlt
adc
pop
ds
xchg
clc
jb
sub
in
ljmp
pop
xchg
sbb
mov
and
mov
jae
fwait
xlat
add
inc
jb
fsubrs
orl
cwtl
cmc
daa
cmp
repz
and
xor
pushf
loope
cwtl
jecxz
xchg
jecxz
push
call
xchg
inc
sbb
sub
adc
sti
je
or
dec
test
dec
cli
pop
mov
popf
and
lea
or
and
mov
add
loopne
mov
dec
mov
sbb
fwait
xor
sbb
xor
loop
shr
dec
shrl
xlat
addb
push
jne
or
sti
adc
fstps
add
test
jo
jne
icebp
je
sub
lcall
jo
addr16
call
pop
sbb
mov
push
add
call
lods
dec
cmpsl
lods
mov
mov
sahf
jmp
push
mov
fisubs
mov
pop
call
push
xchg
sub
xor
repz
hlt
and
sbb
add
cmpsb
rcrb
hlt
or
and
fimull
pusha
test
movsb
roll
cli
pop
jbe
push
bound
aad
pop
ss
lcall
add
pusha
add
mov
inc
dec
out
mov
jmp
arpl
sbb
push
xor
sub
mov
addr16
sbb
icebp
cltd
jns
inc
or
jle
push
inc
call
xchg
lcall
xchg
xor
inc
fisubrl
pop
cmp
push
and
or
fildll
pop
push
inc
test
or
cmc
popa
lds
mov
out
cmp
inc
pop
in
dec
pop
ret
sub
mov
xchg
jns
mov
out
cwtl
cwtl
out
xchg
cltd
ja
pop
lods
sbb
mov
insl
in
adc
in
mov
push
push
add
jbe
mov
mov
push
push
adc
xchg
mov
mov
insb
sbb
jbe
dec
imul
lea
xchg
enter
lret
xor
mov
xor
xchg
cmp
test
dec
cmp
jl
mov
jl
mov
jo
xor
jo
rclb
hlt
push
pop
pop
xchg
imul
add
int
push
jl
loop
test
in
int
mov
add
or
int
sub
pusha
xchg
and
jecxz
add
es
je
sub
sarb
int
mov
inc
push
int
mov
pop
xchg
call
push
mov
jbe
int
lea
push
dec
insl
dec
sbb
pop
adcl
and
jecxz
int
sbb
mov
jnp
int
lea
inc
jge
pushf
icebp
xor
mov
inc
int
lea
mov
adc
xchg
push
out
sub
iret
inc
and
popa
dec
arpl
and
pop
pop
fcomps
daa
dec
enter
xchg
or
sub
loop
sbb
jge
call
dec
mov
add
push
xor
inc
int
dec
mov
xor
js
inc
mov
adc
inc
xor
jmp
push
sbb
adc
int3
je
adc
adc
cmpsb
adc
push
loop
add
mov
daa
lret
mov
hlt
nop
leave
outsl
xchg
inc
sbb
leave
and
mov
push
clc
pop
call
clc
pop
jle
adc
lea
cltd
xchg
lret
or
sbb
stos
leave
stos
lods
int
nop
lock
das
rcrl
xor
mov
push
jo
subl
sbb
sbb
mov
call
lahf
xor
dec
adc
and
rorb
mov
es
dec
push
les
adc
int3
mov
adc
xor
mov
icebp
movsb
fsubr
js
lahf
rclb
mov
adc
clc
inc
in
ret
mov
rorb
lea
inc
jb
pop
push
push
pop
frstor
out
pop
dec
mov
adc
adcb
pop
lret
cwtl
adc
pop
or
adc
jnp
fsubl
in
repnz
sbb
mov
xorl
dec
mov
iret
pusha
cmp
mov
mov
jecxz
sbb
dec
aam
fmuls
mov
push
fisttpll
int
out
popf
in
lods
dec
xchg
movsl
push
add
movsb
nop
in
mov
mov
loop
sarb
add
xchg
cmp
int3
and
test
fidivrl
inc
lcall
jb
pop
inc
adc
int3
mov
jae
rorb
in
pop
dec
rcrl
pop
push
loope
and
int3
je
cmp
add
popa
scas
pop
dec
shrl
xor
adc
adcb
jns
repnz
dec
pop
mov
and
lea
lea
enter
push
adc
js
sbb
push
sahf
sub
add
imul
cwtl
cwtl
sub
jp
ret
mov
inc
andl
popa
fimuls
insb
gs
jg
cs
push
je
fistps
lods
pop
sub
push
jmp
pop
ss
js
or
das
popf
xor
scas
add
lods
aam
pop
js
pop
jns
bound
add
push
or
sub
movsb
std
xor
mov
imul
cmp
ja
dec
or
or
push
pop
add
mov
popf
dec
sbb
push
sbb
lret
call
or
push
sbb
sub
sbbb
data16
sub
xchg
rorb
pop
loope
adc
pop
int
clc
test
movsb
mov
adc
subb
das
push
lods
xchg
mov
jp
inc
call
xchg
int3
cmp
and
pop
popa
mov
aaa
fnstenv
fidivl
dec
pusha
xchg
sbb
int3
sub
xchg
push
inc
jnp
xchg
xchg
jle
xchg
rcrb
int3
ss
and
in
test
inc
add
mov
jg
je
and
sub
mov
sub
int
dec
insb
es
sbb
dec
add
in
jmp
test
test
or
sbb
rclb
add
mov
sbb
dec
or
int
fistl
dec
pop
or
lret
push
stc
mov
mov
adc
les
push
cltd
pop
rolb
mov
mov
push
and
jg
das
jae
jbe
or
and
das
cmp
movsl
jmp
dec
add
mov
loop
fistpll
inc
lcall
sbb
xor
mov
add
and
mov
repnz
pusha
sbb
dec
xchg
inc
mov
add
clc
push
clc
lock
cmp
dec
sti
js
sbb
inc
pop
insb
aas
mov
sbb
jge
lret
stc
jge
push
pusha
and
sub
lret
mov
mov
mov
sbb
mov
sbb
push
loop
mov
cmp
ja
popf
fwait
add
pushf
int
subl
int3
test
icebp
xchg
cmpb
or
add
inc
lcall
or
inc
adc
fneni(8087
clc
sti
test
shlb
imul
sti
or
call
popa
add
or
pop
pop
aam
adc
cmpl
add
mov
lea
sbbl
mov
pop
fbld
rcrl
push
mov
cmp
cmp
call
mov
in
shlb
nop
add
push
xchg
or
adc
push
ss
sti
xor
test
movsb
pop
or
inc
das
insl
inc
iret
mov
cmp
stos
je
movsb
xor
scas
in
cltd
mov
mov
push
xor
fiaddl
pop
pop
sbb
mov
pop
enter
adc
sbb
loope
sub
cmp
xor
and
or
cmp
push
pop
test
ljmp
pop
xlat
popf
push
push
out
popf
inc
iret
mov
jb
fldl
add
sbb
loope
cmp
outsb
mov
test
arpl
push
aad
or
outsb
enter
dec
mov
mov
add
pop
xchg
cmpsl
das
mov
cmc
mov
js
jle
cs
add
les
jbe
mov
data16
int3
push
mov
mov
out
xchg
in
movsl
stos
mov
mov
adc
nop
int3
lods
push
test
cmp
push
addr16
pusha
stos
cmp
rcl
loopne
or
inc
mov
or
mov
cmpsl
dec
ljmp
dec
ja
imul
ret
sbb
pusha
xchg
icebp
mov
and
add
popa
add
fwait
test
jb
dec
mov
icebp
test
mov
mov
mov
dec
sbb
or
push
in
call
or
sub
or
lods
push
mov
inc
in
call
sub
push
leave
into
sub
rcrw
mul
add
jmp
xchg
and
clc
js
xchg
out
sbb
mov
pop
push
movsb
test
and
inc
pop
sbb
popf
or
or
or
add
add
push
in
push
lahf
xlat
or
mov
or
or
pop
int
nop
mov
ficompl
mov
and
jg
icebp
imul
mov
dec
fcoml
sbb
clc
leave
add
repz
adc
ret
stos
loopne
js
xchg
jg
add
decl
pusha
stc
repnz
out
aas
jg
jp
and
or
imul
cmp
pop
pop
adc
pop
jl
in
test
mov
push
xchg
push
nop
xchg
sbb
add
jnp
cmpsb
dec
add
jecxz
inc
dec
dec
rcll
cmp
int3
ret
js
pop
mov
ss
movsb
in
adc
jns
inc
mov
fldl
mov
jno,pn
pusha
mov
sub
psubsb
ret
dec
dec
in
xchg
mov
test
pop
jg
mov
add
pop
mov
xor
scas
mov
pop
xor
inc
inc
rclb
xchg
push
adc
and
jle
loop
mov
add
fcoml
call
lods
mov
sbb
mov
adc
add
push
xor
aaa
xor
lret
pusha
int
scas
int
daa
gs
fdivr
push
ja
jne
mov
mov
subl
jl
dec
sbb
cld
cmc
and
hlt
call
or
and
cmp
daa
cmp
loopne
pushf
pop
inc
push
mov
in
mov
test
sub
sbb
lock
fisttpll
xchg
cltd
and
in
dec
sbb
mov
xchg
push
add
and
aaa
push
jg
fbld
sbb
inc
mov
and
in
sub
sub
add
subl
fstpl
ret
jns
jecxz
jae
out
je
pop
sahf
mov
and
loop
and
clc
ret
shlb
push
jno
repnz
sub
fidivs
int3
mov
aad
out
pusha
inc
dec
add
xchg
jb
les
sub
mov
xor
aas
in
pop
test
mov
push
add
mov
sbb
add
les
inc
inc
jne
gs
cmpl
mov
lea
push
jb
sub
mov
xor
js
mov
insb
fcomp
sti
test
shlb
mov
pop
and
pop
int3
pop
push
sub
mov
pop
mov
fmull
pop
cld
repnz
pop
fistps
pop
movsl
loopne
sub
pop
cs
dec
mov
test
enter
push
pop
in
mov
mov
das
cvtps2pi
jmp
push
pop
mov
clc
jge
and
pop
popf
mov
add
xor
mov
lret
jnp
call
xor
in
mov
pop
cmpsb
out
xchg
inc
mov
xchg
or
shr
fcoms
call
jl
mov
sbb
call
mov
mov
lods
test
sub
xchg
jecxz
and
nop
add
and
jmp
lret
int
mov
cmpsb
dec
cmp
mov
mov
mov
push
scas
jbe
adc
cmpsb
or
insl
inc
movsb
in
or
int3
mov
imul
test
jo
push
imul
jg
mov
jecxz
lret
push
mov
mov
cmc
lock
sub
inc
mov
push
out
pop
sbb
insb
ret
fiaddl
int3
mov
mov
and
call
xchg
dec
add
call
mov
int3
shr
and
js
add
push
push
push
fldl
jmp
inc
or
push
outsl
gs
je
sbb
rcll
aad
push
xor
push
cmp
lods
psubq
add
jbe
sub
je
test
ljmp
dec
fists
stos
xchg
sbb
test
sub
adc
ffree
xchg
xchg
mov
mov
lahf
or
outsl
call
and
sbb
shl
inc
xor
aaa
addb
push
dec
adc
sbb
and
adc
in
dec
xchg
andb
movsb
mov
test
sbb
adc
lret
in
dec
dec
adc
xor
lea
dec
and
push
xor
enter
add
mov
xor
xchg
inc
popf
jl
mov
inc
icebp
adc
mov
jg
sti
test
call
das
sub
pushf
rolb
fcmovbe
loop
pop
into
mov
dec
mov
mov
push
out
mov
inc
and
imulb
call
and
add
and
xor
dec
jp
sbb
add
aas
lds
out
dec
adc
push
add
test
int3
in
iret
add
aam
popf
pop
shr
int3
in
mov
fs
or
out
cwtl
scas
push
pop
xor
mov
xor
mov
jecxz
lret
ss
cltd
cli
add
dec
push
xchg
cmp
pop
daa
loop
add
mov
adc
xor
xchg
push
or
imul
sbb
ss
movb
xor
or
cmpsl
outsl
rcl
and
dec
sti
js
sbb
mov
pop
xor
jbe
pop
int3
loop
jb
push
cld
pop
xchg
inc
xor
inc
xor
sar
out
add
lret
mov
pop
pop
mov
xchg
loop
cmc
fisubs
jb
lret
pop
mov
mov
ss
test
addr16
adc
xor
cmp
outsb
ret
mov
xchg
mov
dec
loope
push
add
adc
cmp
dec
xlat
add
and
sbb
xor
loope
xor
xchg
dec
sti
scas
int
out
push
and
js
in
jmp
add
and
popf
outsl
add
jg
mov
call
push
cmpsl
loopne
pusha
mov
cmp
test
popf
cltd
rcrl
aad
fiadds
mov
inc
pop
or
bound
and
cld
mov
mov
in
jo
push
mov
fnstenv
dec
mov
cmp
push
mov
adc
pop
mov
mov
stc
push
jo
add
fadd
out
pusha
add
inc
jge
xchg
cmp
inc
fcomp
sbb
cmp
jg
test
in
or
xchg
push
add
add
push
adc
mov
lret
xor
hlt
testb
call
pop
jg
push
sti
jno
sbb
mov
xchg
jns
push
mov
mov
in
repnz
ljmp
add
roll
and
jae
inc
xchg
push
push
push
adc
add
scas
add
add
inc
push
rcl
decb
repnz
orb
inc
mov
push
and
lret
imul
or
xchg
icebp
and
int
cwtl
jp
or
sbb
or
test
call
pop
or
aas
mov
push
loope
or
decb
push
shl
jno
push
mov
adc
push
lods
repnz
cwtl
mov
fadd
rclb
int
or
lret
scas
add
push
lret
adc
jecxz
pop
cli
pushl
ja
xor
dec
jno
inc
popa
push
out
int3
adc
popf
cmp
fs
add
pop
add
lcall
inc
push
call
subl
push
test
mov
lcall
sub
rcr
lods
loopne
pop
bound
pop
nop
sbb
subl
mov
icebp
push
inc
pop
add
testl
xor
push
insl
sarl
dec
cld
xchg
mov
dec
or
push
pop
in
pop
and
lock
int3
pop
mov
dec
in
dec
add
ret
add
loopne
enter
mov
rorb
dec
mov
int
adc
filds
mov
xor
in
sub
xchg
popf
jge
push
mov
sbb
and
cltd
push
test
in
and
dec
cltd
xlat
pop
mov
mov
mov
nop
call
dec
xor
push
add
dec
mov
jnp
ss
xor
dec
cmp
xchg
push
add
dec
mov
mov
mov
push
ret
mov
sub
es
dec
mov
popf
add
or
jo
dec
mov
insl
movsl
push
sub
and
std
nop
movsb
add
nop
pop
lcall
pop
fldpi
sarl
lds
mov
pop
sub
push
or
addr16
sbb
orl
or
outsb
push
out
fadds
and
or
sbb
or
jno
xchg
add
ret
adc
or
lahf
sub
cmp
xchg
mov
cwtl
jnp
out
jo
xor
push
ds
push
mov
add
sub
mov
js
mov
data16
sub
sbb
insb
test
add
and
nop
pop
pop
pop
call
test
stos
enter
ljmp
clc
mov
pop
dec
daa
xor
or
or
cld
or
xchg
or
dec
mov
or
sarb
or
fidivrs
rcrb
jnp
mov
popf
mov
movsb
mov
pause
movsl
xchg
sub
adc
push
mov
xor
insb
inc
xor
inc
mov
and
div
call
ret
pop
xor
aam
mov
pop
add
push
and
sub
lahf
outsb
mov
in
out
sub
add
mov
call
ret
or
xchg
out
repz
mov
mov
rolb
cmp
mov
or
mov
cwtl
pop
sub
lods
repnz
dec
in
inc
mov
int3
cmp
jns
bound
imul
pop
test
pop
out
inc
xchg
jg
or
xchg
adc
decb
mov
push
movsl
add
inc
sarb
cmp
test
add
xchg
add
add
xchg
dec
in
and
lret
sbb
or
pop
mov
cmpsl
adc
or
sub
pop
and
sbb
mov
dec
lret
gs
ret
repz
call
inc
popf
or
adc
push
call
xor
pop
repz
call
imul
xchg
xchg
or
sahf
cld
popf
push
or
icebp
or
call
pop
fmuls
or
pop
scas
or
pop
or
sbb
xchg
cmp
or
push
scas
jo
in
inc
sbb
repz
jno
push
loope
cmp
cs
pop
pop
mov
or
cmp
repnz
sub
mov
js
or
xchg
ljmp
xchg
adc
sti
or
pop
fmull
pop
inc
pop
mov
aam
add
cmp
xor
add
inc
add
out
addr16
mov
pop
adc
aas
roll
adc
push
decb
call
adc
sahf
cmpps
jl
ss
cltd
mov
sahf
jo
or
or
cld
mov
jle
imul
xchg
xlat
aaa
rorb
movsb
add
xor
mov
xchg
in
iret
mov
xor
or
mov
gs
fistpll
gs
idivb
cmp
fdivs
push
push
mov
add
mov
and
adc
mov
xchg
mov
fs
fsubl
xchg
je
cmc
dec
push
lods
mov
mov
xchg
mov
sti
aad
add
jge
xor
dec
repnz
jmp
in
and
icebp
dec
inc
pop
pop
push
shrl
inc
push
popf
xchg
mov
push
cmp
add
cmpsb
pop
int
push
notb
lods
mov
cld
jo
push
sbb
dec
dec
pop
inc
aaa
dec
xchg
xchg
push
shll
int
fmul
jmp
std
cmpb
sub
ret
or
clc
adc
add
mov
in
push
add
leave
jo
xlat
inc
cmp
add
aas
enter
mov
add
push
mov
popf
lahf
fsts
push
call
jno
pop
jl
xchg
jl
hlt
nop
test
push
sbb
int3
cmp
ljmp
add
cltd
mov
mov
nop
out
shr
out
pop
mov
dec
sub
addr16
clc
mov
popf
adc
mov
andb
ljmp
scas
test
movsb
and
cld
ljmp
insl
add
decl
pop
pop
in
and
add
xchg
push
xchg
xor
xor
fsubl
push
loop
cmp
mov
lret
scas
xchg
xor
outsl
sub
call
sbb
cmp
dec
mov
sub
in
push
nop
andl
movsb
popf
mov
popf
ds
test
jae
cmpsl
aaa
xchg
dec
loope
or
outsb
popf
or
andl
ds
js
sbb
call
sub
add
ret
mov
push
lods
les
lret
adc
call
loopne
das
andl
inc
cmpsb
sbbl
aad
pop
xor
cwtl
xor
stos
lahf
inc
cmpsl
push
ret
xor
mov
call
ret
jae
sbb
lea
cld
cmpsl
popf
add
lret
mov
adc
push
jp
out
cmp
or
pop
or
cwtl
dec
jp
dec
sbb
icebp
jcxz
mov
les
sti
subb
mov
scas
daa
push
out
gs
aaa
lods
arpl
adc
sbb
cld
jmp
mov
fwait
cld
fimuls
test
and
and
sbb
lods
add
xchg
stos
mov
call
xor
add
inc
pop
scas
push
data16
ret
std
xchg
cmp
push
jo
movsl
out
sbb
xchg
test
dec
jl
mov
adc
and
fs
nop
xlat
xchg
adc
xor
leave
jl
into
cmpl
je
adc
sbb
fs
loop
lods
loop
orb
add
into
fwait
xor
sub
jbe
cmp
int3
mov
xor
mull
stos
mov
movsl
addl
mov
mov
xor
loopne
mov
sbb
sub
xor
adc
call
loope
mov
mov
or
jbe
hlt
adc
dec
push
xor
shr
in
clc
pop
das
ss
outsl
and
adc
adc
sbb
and
mov
repnz
movsl
jbe
aam
sti
xor
jb
call
mov
lret
cmpsl
call
xor
ret
faddl
es
push
add
or
lret
out
hlt
cmpsl
clc
call
pop
in
hlt
or
loope
dec
push
adc
push
mov
cmpsl
mov
mov
jmp
push
jp
adc
fwait
lret
mov
cmp
leave
pusha
sbb
sub
frstor
sbb
loope
dec
int
outsl
dec
mov
dec
sub
push
out
push
enter
cmovae
pop
xchg
sbb
pop
or
add
arpl
testb
nop
xchg
bound
push
xchg
add
pushf
adc
data16
push
cmc
jmp
les
aad
lds
and
jmp
es
pushf
mov
cmc
bound
xchg
lea
shrb
xchg
and
inc
cmp
pop
dec
push
insb
xchg
fadds
enter
cmc
imul
mov
repz
call
call
mov
cmpb
fidivrl
fcos
sahf
sub
call
aaa
sarb
or
addr16
insl
sbb
ret
ljmp
and
jle
cmpb
xlat
mov
cwtl
or
pushf
fwait
ret
cmp
inc
clc
sbb
sbb
adc
das
jbe
or
andl
mov
loopne
mov
or
pop
jmp
or
aam
clc
pop
mov
xchg
lcall
dec
or
out
shr
mov
loopne
add
xchg
lds
call
fdivrs
and
testl
jo
lahf
push
shll
fxch
sub
mov
shll
lds
or
and
mov
mov
sub
push
into
pop
dec
add
cmp
nop
test
mov
mov
enter
sbb
sar
rorb
test
sbb
testb
mov
popa
lds
push
repz
inc
push
cmp
xor
push
jge
push
iret
mov
and
daa
aas
fstps
adc
or
lds
adc
pop
xor
cmpsb
and
push
inc
pop
cmc
add
add
imul
fstl
hlt
mov
jp
out
popl
lahf
push
lds
sbb
or
xchg
xorb
ficoms
or
jne
push
xchg
outsl
outsb
test
rcll
cmp
mov
dec
xor
lock
mov
lahf
xor
or
pop
sbb
mov
gs
movnti
or
push
ret
jp
rolb
xor
orb
out
lds
sbb
test
mov
xchg
leave
sub
lds
sbb
dec
and
lahf
sbb
aad
loopne
incl
pusha
sbb
fsubr
dec
inc
insb
xchg
cmp
mov
jo
add
mov
push
dec
fcmovnb
jae
out
add
and
cmp
dec
movsb
shll
xchg
outsl
inc
push
pushf
xlat
sahf
sbb
test
jb
cwtl
push
lds
shlb
lods
mov
push
add
loop
sti
adc
or
add
xor
push
sbb
call
or
mov
call
add
xchg
jae
imul
and
es
sub
loop
pop
mov
adc
push
nop
call
xor
lahf
push
or
dec
sarb
fsubs
add
lds
or
mov
in
insl
or
imul
xor
xor
sub
mov
out
mov
add
out
out
mov
mov
jl
push
mov
mov
pop
xchg
arpl
ror
in
mov
xor
call
mov
cmp
xchg
lds
pop
pop
add
mov
or
xor
adc
je
adc
sub
jns
add
lahf
inc
loope
and
push
sbb
fdivrl
pop
xchg
mov
pop
push
clc
das
sub
call
xor
mov
sbb
stos
iret
adc
sti
mov
or
sbb
or
mov
popa
lcall
fsubrl
popa
mov
add
jns
or
dec
rcr
adc
or
add
loop
add
lock
cwtl
loope
lret
pop
mov
pop
ja
add
push
push
roll
adc
xchg
mov
add
or
jecxz
add
sbb
xor
jnp
ja
incb
aaa
or
je
push
mov
or
jb
adc
push
pop
inc
ja
xchg
repz
sub
mov
xchg
test
and
mov
push
std
rolb
sbb
mov
enter
test
cmc
xchg
xchg
xor
cmp
lahf
in
in
nop
cmp
jns
cmpsl
xor
or
add
decb
dec
sbb
pusha
mov
pop
mov
lahf
dec
mov
sti
mov
lahf
test
pop
loope
ss
or
push
ret
push
dec
and
add
cmp
add
xchg
dec
mov
hlt
inc
push
mov
mov
jp
xlat
add
dec
mov
jb
adc
lds
stos
gs
int
adc
lahf
aas
pop
sahf
cli
fldt
int3
mov
lods
mov
jg
add
ljmp
fnstsw
add
lcall
and
pop
lret
mov
jae
filds
jb
ja
lret
mov
aaa
sbb
mov
jae
das
pop
pop
pop
inc
jns
out
adc
ds
and
mov
jbe
push
sahf
dec
and
xor
adc
cmp
mov
stc
fwait
sbb
push
cli
mov
xchg
jb
lret
push
and
or
nop
xchg
call
push
aas
cltd
add
push
loop
pop
sub
pop
inc
icebp
into
jg
scas
mov
sbbb
sbb
fimull
fwait
push
pop
fstpl
sti
add
xchg
mov
jmp
rdmsr
add
shlb
ret
push
int3
pusha
jg
jbe
call
mov
mulps
pop
icebp
clc
sbb
into
loope
push
or
xor
mov
xchg
lea
ret
or
jge
test
sti
xchg
xchg
lret
mov
imul
ja
fs
fidivs
or
stos
incb
add
call
fldcw
fs
shlb
lea
pop
popl
pop
pop
imul
mov
ss
mov
aad
fsts
jno
and
sub
pop
and
fcomps
xchg
pop
je
stos
gs
push
cld
mov
pop
pop
xor
adc
xchg
daa
pop
mov
pop
cltd
mov
adc
add
cmpsb
push
enter
je
add
push
lea
cmpsl
push
mov
mov
mov
and
or
mov
orb
testb
adc
or
fistps
jp
call
and
mov
pop
icebp
dec
jg
insb
rorb
test
add
or
mov
mov
pusha
sbb
scas
popf
icebp
shlb
sbb
maxps
test
testl
cmp
loope
pop
push
call
and
mov
inc
and
aaa
mov
add
sbb
mov
mov
inc
push
dec
enter
fcom
sbb
jb
cmp
xor
sub
enter
adc
fs
stc
xor
sbb
pop
and
jno
outsl
add
cwtl
push
xchg
push
cmp
pop
push
jl
lcall
jnp
fidivrs
icebp
es
adc
sbb
adc
std
xchg
scas
movsb
js
loope
dec
mov
xor
pop
sbb
jg
loopne
mov
pop
icebp
lea
cmpsl
outsb
das
mov
pop
aaa
mov
inc
inc
xchg
add
mov
lret
popf
mov
gs
je
lcall
sbb
icebp
in
mov
add
mov
sbb
call
dec
and
xor
mov
or
push
jb
mov
sub
xchg
rcrb
mov
pop
lret
subb
loopne
mov
adc
cmp
lds
xchg
mov
sarl
scas
sbb
mov
push
fcompl
push
sbb
dec
xor
and
xor
mov
add
inc
inc
out
insb
mov
mov
mov
mov
test
adc
adc
je
lods
cltd
iret
movsb
imul
cmp
popf
mov
jl
mov
daa
fstps
pop
mov
pop
push
cmp
sbb
add
adc
mov
sbb
shlb
sub
cld
arpl
jo
or
stos
or
mov
dec
adc
push
sbb
rcrb
xchg
jmp
push
push
inc
jmp
test
sub
ds
sub
sbb
jne
and
jmp
dec
nop
sub
movsb
lret
jecxz
xor
call
pop
lahf
call
das
adc
mov
push
sbb
and
push
outsl
out
adc
in
pop
mov
dec
ja
jnp
jecxz
jo
or
popf
addl
adc
and
adc
addb
testb
in
aam
aaa
mov
cmpsb
cmp
fisttpl
test
adc
pusha
pop
add
pop
call
sahf
mov
sbb
enter
test
call
shlb
call
push
cli
ds
push
lahf
insl
loop
mov
and
pop
xor
test
inc
or
into
cmp
je
incb
jne
leave
in
pop
stc
rcrb
sub
dec
mov
cli
inc
leave
adc
add
loopne
lods
jecxz
cmp
aad
je
in
sub
add
ja
int
push
or
jb
int3
jbe
push
inc
jnp
dec
int3
es
das
or
push
std
push
dec
repnz
cmp
adc
mov
call
std
dec
ficomps
sbb
jnp
mov
adcb
and
inc
inc
jne
adc
ret
jo
stc
mov
push
inc
jbe
dec
test
lahf
in
jmp
inc
push
mov
sub
jno
ja
mov
ss
pop
fwait
cmp
push
sub
lods
aam
mov
test
mov
stc
popa
sbb
mov
mov
inc
jb
jl
decl
xorb
test
xchg
lahf
orl
insb
icebp
add
inc
jecxz
int3
movsb
xchg
jae
icebp
pop
fldl2e
ja
rcr
repz
aam
inc
mov
lea
inc
inc
xor
addl
lods
jbe
fimuls
sbb
cmc
shrb
es
mov
pushf
lcall
add
std
sbb
mov
xor
nop
and
test
cmp
lods
dec
roll
mov
push
mov
test
sbb
divl
in
or
sub
mov
ja
sbb
sub
mov
out
cmp
sahf
jno
movsb
sti
add
dec
and
xor
sarl
faddl
sbb
insl
xchg
fstl
xchg
pop
sbb
pop
rclb
jns,pn
pop
int
and
arpl
mov
jbe
insb
nop
bound
lret
add
ss
in
dec
shl
dec
cmpsb
popa
add
int3
fs
cld
in
sub
fidivrl
jb
aas
dec
xor
test
dec
sbb
shlb
shll
ja
mov
mov
in
loopne
adc
add
push
push
lds
movsb
sti
xor
test
xor
call
xor
jmp
push
mov
mov
daa
sub
pop
int
lea
sbb
pop
loope
in
push
das
or
push
das
inc
jbe
aam
jbe
repnz
adc
jle
mov
clc
hlt
dec
loopne
inc
fsubr
sbb
rorb
sub
mov
test
nop
lea
cmc
andl
shll
dec
jno
inc
mov
push
insb
dec
and
scas
mov
lea
insb
and
lea
dec
mov
add
shlb
lea
or
fdivr
adc
mov
dec
mov
add
mov
push
imul
push
xor
bound
mov
push
xchg
push
xchg
stc
add
andl
and
add
test
rol
into
rclb
mov
jge
pop
std
push
mov
dec
enter
sbb
insl
bound
clc
enter
sbb
dec
rclb
mov
inc
out
or
insb
cli
xchg
ljmp
les
fiadds
cmc
or
mov
add
hlt
add
cmp
sbb
dec
cltd
mov
enter
sbb
inc
xchg
fadds
mov
push
popf
aam
inc
mov
cmc
imul
xchg
call
pusha
dec
addr16
dec
mov
in
and
mov
mov
jo
inc
xchg
add
pop
hlt
cmp
in
nop
nop
aas
call
sub
xchg
xchg
cwtl
or
rolb
xchg
sbb
add
in
inc
test
pop
andb
xchg
in
addr16
pushf
hlt
add
je
rolb
mov
and
xchg
rorb
ljmp
xchg
shr
adc
mov
inc
adc
sti
add
mov
add
pushf
in
xor
add
leave
add
out
inc
mov
cmc
jnp
xchg
sahf
push
inc
mov
repnz
sbb
cmp
shl
mov
cmp
sub
push
addr16
add
in
shl
sbb
sahf
mov
mov
cs
dec
mov
outsb
dec
push
pop
mov
inc
nop
sub
mov
and
push
in
cmc
sbb
cmp
pushl
movsb
sti
test
jecxz
jb
call
call
xor
jns
loopne
out
pop
sub
stos
mov
or
cltd
incb
mov
dec
test
jo
dec
fistps
add
cmp
sub
or
out
jp
leave
int
negb
jo
mov
mov
jns
lea
adc
testl
dec
ja
cli
xchg
ret
test
jno
or
add
int
movsl
mov
ss
dec
enter
inc
rolb
ret
mov
jno
dec
jle
lret
loopne
lea
rorb
jge
mov
mov
ret
pop
jo
int3
repnz
or
daa
mov
dec
out
gs
xchg
pop
jp
sbb
les
or
xchg
mov
pushl
pop
je
inc
xchg
xchg
jg
add
int3
jns
lea
sbb
mov
lea
sbb
jl
lea
push
xor
mov
rcl
mov
jo
xlat
fiadds
pop
pop
cmp
std
sub
and
add
inc
rcll
mov
fwait
xor
mov
adc
shl
add
lea
jg
call
mov
pop
mov
mov
xchg
cwtl
xchg
mov
imul
push
movl
call
push
daa
jmp
add
fmuls
rcll
lea
loopne
cmc
pop
arpl
mov
xchg
push
inc
jg
add
and
call
sub
mov
adc
lods
jo
notl
adc
sub
stos
jp
mov
or
ja
lret
enter
mov
lea
xor
cmp
rolb
stos
pop
je
sbb
pop
jg
and
cmp
jge
aad
pop
mov
in
lret
cmpsb
dec
sti
xchg
cmp
outsb
mov
pop
repnz
dec
xchg
outsb
or
pop
inc
xor
mov
jge
sub
cwtl
adc
or
es
insl
int
ja
mov
enter
loope
or
test
jmp
imul
pop
mov
aaa
lods
inc
ja
cmpsb
insb
jo
sarb
aad
pushf
lods
pop
inc
or
mov
xchg
mov
pop
stc
dec
push
movsl
pop
cs
xchg
pop
dec
add
rcl
lods
pop
sub
je
and
push
rolb
push
cld
push
lret
jb
insb
rorb
mov
mov
mov
xor
jae
cmp
out
popf
mov
jno
fwait
test
jb
mov
pop
dec
fsubr
xchg
stos
adcl
cmp
addr16
stos
mov
jno
inc
push
insl
popf
incl
jo
or
dec
cmp
inc
sbb
int3
repnz
dec
jns
outsl
adc
out
mov
mov
xchg
and
dec
pop
lret
aas
dec
sub
mov
cld
pop
pop
rorb
je
cmp
and
add
js
or
insb
push
scas
pop
xchg
into
into
inc
cmpsb
dec
mov
xor
dec
sti
sbb
mov
push
adc
sahf
fs
lea
lret
out
mov
xchg
jo
sub
pop
sub
or
jae
and
aam
cli
mov
sarl
cmp
movsb
add
out
sub
ds
xchg
insl
sbb
jnp
adc
aas
test
movsb
loope
or
popf
add
add
inc
push
push
call
lods
fnstsw
dec
in
out
xor
dec
and
and
adc
out
lea
add
add
add
sub
aad
cmc
cmp
mov
je
es
adc
movsb
sub
lods
and
jp
push
cwtl
addl
jb
mov
nop
or
cs
mov
push
xchg
adc
sbb
jmp
jo
mov
jl
rcll
scas
sub
lret
jns
ljmp
ror
ljmp
cmpb
mov
cmp
iret
add
sbb
push
mov
cmpsb
lahf
ljmp
pushl
scas
shr
mov
movsb
lea
sub
mov
mov
cmp
mov
loopne
add
jp
or
or
inc
add
repz
fisubl
das
add
push
lcall
negl
jns
add
popf
pusha
stos
lcall
dec
shrb
add
sbbl
orl
mov
sarl
outsl
cli
mov
call
aas
cmpsl
scas
jo
pushf
or
push
add
and
cmpsb
ljmp
mov
sbb
cli
cmp
mov
mov
push
mov
push
jmp
ret
cmpsb
das
stc
cli
xlat
into
aas
cmp
pop
in
and
add
adc
jae
jo
pusha
add
test
subl
ja
pusha
popf
rorb
clc
das
adc
faddl
sbb
mov
dec
rcrb
mov
loope
mov
mov
sub
popl
xchg
lret
sub
mov
inc
adc
jl
mov
add
pop
pushf
cmc
push
ret
mov
inc
lret
xor
or
shll
adc
insb
popf
sub
neg
dec
ror
movsb
xchg
push
add
mov
cmp
pusha
mov
mov
add
mov
sub
fcomp
es
call
dec
mov
adc
loopne
cmp
adc
popf
mov
adc
je
mov
add
pop
mov
mov
dec
cmc
sbb
int3
sub
test
mov
sub
add
scas
jne
aam
sub
or
xchg
push
sbb
imul
sbb
int
push
adc
test
sub
adc
test
je
xor
jp
les
or
pop
icebp
enter
sub
hlt
inc
sbb
lcall
xchg
fsubp
loop
sbb
outsb
hlt
leave
or
leave
ja
push
mov
push
stos
and
sub
inc
sti
xchg
or
xor
js
leave
popf
shlb
sbb
movsl
in
daa
cmp
scas
call
push
push
xchg
sub
mov
scas
sbb
or
mov
pop
sub
cwtl
pop
call
push
adc
test
mov
nop
mov
movsb
xor
js
mov
adc
insb
xor
test
popa
mov
mov
add
pop
mov
adc
pusha
jl
pop
push
xchg
add
sub
dec
mov
inc
and
lea
lret
xchg
mov
push
dec
test
cmp
push
clc
pop
push
rcrl
fs
mov
push
or
add
cmc
xor
xchg
es
sub
jo
in
xor
push
scas
sbb
imul
pop
mov
mov
lods
adc
stc
or
push
or
jp
mov
leave
test
icebp
mov
cs
or
inc
sbb
xchg
icebp
in
add
outsb
aam
jns
adcb
xchg
mov
and
jns
push
andb
dec
push
aad
stc
inc
sbb
mov
xchg
add
les
cli
cltd
es
dec
setb
jecxz
les
shlb
mov
loope
jns
xor
inc
lret
shl
int
xchg
std
dec
cmp
lahf
jp
stos
dec
shrb
lea
pop
hlt
jmp
pop
add
lods
scas
sti
fsubrp
push
add
fstpl
fisubs
repz
popa
adc
lods
push
gs
push
sbb
mov
push
dec
fistpll
or
dec
call
add
mov
dec
xor
dec
ss
inc
jae
adc
ss
int
push
or
mov
ss
sub
cwtl
mov
mov
mov
shl
pop
call
test
insb
or
jecxz
dec
dec
imull
or
imul
movl
mov
lcall
scas
xchg
xor
cmp
rclb
xor
sbb
out
in
push
lods
adc
dec
cmp
int3
adc
push
xor
aas
das
sbb
stos
loop
cmp
sub
xchg
scas
pop
jle
pop
xchg
and
rclb
add
sar
repz
adc
adc
shr
cmp
fnop
pop
or
daa
shrb
int3
adc
cmp
push
adc
mov
adc
mov
shrb
cmp
popf
fistps
cmpsl
sub
pushf
xchg
or
cs
adcl
add
pop
roll
call
xor
fwait
inc
add
loop
adc
ret
inc
hlt
xor
add
jecxz
push
mov
and
stos
movsl
incb
pop
mov
pop
call
ficoml
lds
add
inc
sub
mov
add
pusha
daa
fdivrs
add
sub
mov
insb
nop
cmp
and
adc
int3
bound
or
lods
arpl
and
out
add
imul
cmpsb
stc
push
mov
mov
add
outsb
lret
jb
je
test
add
dec
pusha
add
dec
cmp
into
incl
sbb
sub
enter
das
insl
mov
sub
or
insl
testl
sysret
mov
js
xchg
sub
sub
push
adc
lods
push
clc
push
jbe
test
bound
fsubrl
push
out
cmp
inc
inc
enter
adc
das
push
mov
or
add
cltd
inc
aad
sbb
adc
popf
sbb
xor
lock
jmp
add
mov
cmp
das
adc
dec
lods
pop
cmp
xor
stc
cmp
aas
mov
testb
das
and
or
js
decl
xchg
jne
sub
ljmp
out
sbb
adc
scas
into
hlt
xor
push
jnp
jg
fidivl
nop
sbbb
xor
adc
mov
scas
pop
push
cmpsl
incl
adc
add
fwait
dec
adc
xor
or
icebp
push
pop
jae
pop
lret
adc
dec
test
inc
mov
push
add
das
cmp
xchg
outsl
xchg
jae
enter
inc
cmp
or
cmp
ret
push
jo
insl
jge
cmp
fidivrl
loop
repnz
sarb
ljmp
lret
call
sbb
fsubrs
jl
loop
cmp
sbb
or
pop
adc
cmp
stos
repz
ds
adc
jns
sbb
pop
cmpsb
mov
xchg
add
mov
and
pop
mov
lods
push
jb
pop
inc
or
sarb
adc
jmp
pop
pusha
repnz
mov
jge
adc
js
add
dec
cld
mov
add
call
inc
cli
xchg
adc
call
ds
and
mov
add
cmp
sbb
or
add
mov
pop
and
xchg
xor
cwtl
ljmp
dec
cmpsb
fldenv
sub
mov
cmp
sub
imul
mov
xor
mov
loopne
iret
mov
cmpsb
adc
dec
das
inc
fldt
pop
call
cli
cld
dec
cli
push
daa
push
cmp
in
pop
hlt
stc
ror
cmp
xor
cmp
push
or
dec
or
sbb
cld
ja
push
adc
mov
aas
inc
jo
mov
ja
adc
lea
mov
addr16
jmp
adc
outsl
sahf
addr16
push
adc
cmp
mov
fistpl
xor
jbe
and
sbb
inc
push
pop
mov
movsb
push
and
jb
clc
dec
mov
or
mov
jae
and
outsl
mov
sub
inc
pop
inc
jp
daa
test
or
ficomps
call
jno
iret
lods
mov
cld
xchg
sbb
pop
call
aam
int
mov
insl
mov
icebp
addr16
pop
sub
mov
lahf
xchg
dec
ret
mov
into
out
filds
nop
cmpsb
xchg
pushf
dec
sbb
std
repnz
and
insl
ud2
mov
ds
lods
jmp
call
repz
push
inc
inc
repnz
lods
push
mov
cs
pop
mov
out
dec
mov
push
std
test
mov
sub
push
adc
fs
push
call
imul
lea
test
xchg
dec
nop
inc
call
inc
jl
mov
or
out
xor
lods
jns
jae
jbe
out
addr16
cmp
cmp
pop
call
sub
jp
inc
pop
sub
mov
dec
insb
or
or
and
arpl
inc
out
popa
or
mov
inc
adc
insb
inc
call
jno
jmp
dec
push
xor
loopne
sbbl
pop
mov
inc
notb
add
int
fcos
jmp
pop
movsb
jl
loopne
push
call
out
push
sbb
jg
or
pop
lds
pop
or
mov
mov
xor
aaa
sbb
std
pushf
add
jae
xchg
fwait
mov
inc
and
rol
rcrb
outsl
sub
sbb
pop
dec
jb
sub
insb
or
or
test
sahf
je
and
shrl
fwait
pop
jb
jno
and
pop
jge
adc
adc
mov
mov
mov
push
and
and
call
mov
dec
push
and
dec
fptan
pusha
adc
mov
leave
pop
jle
ficomps
sub
adc
rorb
mov
mov
or
jo
add
es
xchg
xor
adc
xchg
adc
std
scas
into
sahf
gs
sub
pusha
pop
xor
pop
negl
out
leave
outsb
xor
add
out
clc
push
stc
xor
fists
lahf
adc
cmpsb
pop
xor
jmp
iret
mov
into
and
test
sarb
int
fwait
insl
xlat
cltd
fwait
outsb
ret
adc
test
and
pop
insl
push
adc
and
pop
call
adc
rcl
adc
jbe
dec
dec
adc
pop
mov
and
addr16
mov
sbb
enter
call
rcll
mov
sub
sbb
cwtl
sbb
call
es
adc
pop
inc
dec
call
std
sbb
mov
pushl
lea
mov
lahf
out
xchg
sub
push
fs
mov
add
movsl
pop
push
or
dec
cmp
sbbb
inc
pusha
orl
dec
sbbl
and
or
xor
je
pusha
call
xchg
xchg
pop
xor
in
repnz
sbb
sbb
push
pop
cmp
andl
pop
jge
pusha
cmc
daa
jecxz
dec
jecxz
fsubs
int3
add
pop
test
inc
movsb
or
sbb
pop
mov
mov
xor
jge
call
mov
jmp
out
nop
mov
sub
nop
out
adc
cli
or
fldenv
call
dec
enter
jg
movsl
dec
stos
dec
pusha
popa
xchg
jo
test
mull
cmp
inc
xchg
mov
inc
inc
xchg
mov
push
filds
pop
fsubrs
pop
lods
jo
mov
stos
adc
test
outsl
jo
xchg
push
clc
movsl
inc
inc
xchg
repnz
dec
or
cmp
mov
xor
jecxz
mov
in
mov
xlat
loop
mov
ficomps
jo
imul
cmpb
mov
data16
rcrl
sbb
or
inc
jp
xchg
mov
cmp
adc
in
fwait
outsl
adc
popf
add
dec
lods
call
add
push
aaa
andl
inc
sbb
insb
xchg
xchg
jae
outsl
rclb
adc
sbb
inc
mov
pop
pushf
mov
bound
outsl
adcl
jno
add
sbb
ror
subl
jb
lret
and
call
imulb
push
push
inc
pushf
pushf
mov
xchg
addb
rcrl
mov
dec
decl
iret
pushf
push
jns
cmp
addl
mov
mov
jbe
lret
mov
shll
outsl
movsb
mov
in
pop
mov
insl
push
add
lcall
movsb
mov
push
inc
sub
sub
or
insl
sub
add
shll
call
mov
mov
mov
cmp
in
sub
popa
sub
adc
push
mov
or
jmp
outsl
ret
adc
push
aad
or
mov
pop
xchg
sahf
mov
scas
xchg
aas
insb
mov
loope
rorl
adc
testb
and
pushf
mov
lock
insb
rcrl
aaa
mov
ret
xchg
sub
aam
mov
sbb
and
outsb
add
test
cmp
inc
sahf
sub
mov
rorl
nop
call
subl
loope
testb
js
cmp
inc
and
or
jbe
sbb
leave
imul
scas
scas
inc
add
lahf
inc
push
or
pop
add
orb
sub
jle
enter
xor
xchg
add
outsb
push
add
cmpsl
pop
mov
xchg
adc
mov
adc
sbb
scas
pop
xchg
mov
dec
imul
mov
xor
dec
adc
testb
cmp
cmc
clc
add
fisubrl
xchg
pop
adc
sub
push
movsb
mov
add
sahf
adc
fcoml
mov
adc
or
inc
orb
and
dec
sbb
rorl
or
rclb
shll
cmp
add
or
pop
add
adc
pcmpeqb
add
lds
jns
add
xor
jle
adc
inc
les
lcall
mov
scas
fldt
repnz
jg
loopne
cs
adc
dec
cmp
enter
mov
rcrb
cltd
outsl
in
popa
shrb
movsl
data16
or
insl
push
push
jno
push
faddl
push
push
daa
sbb
mov
mov
es
bound
addb
and
dec
xchg
int3
sti
repz
cli
insl
outsl
leave
push
orb
fildll
call
sbb
daa
test
inc
cmp
enter
out
pusha
mov
dec
push
mov
adc
push
xchg
cmc
xchg
lods
daa
add
jnp
or
pop
jg
test
mov
jp
out
mov
pop
adc
dec
sbb
mov
push
scas
ss
sbb
and
sub
pop
loopne
inc
addb
in
xorb
pop
call
aad
or
mov
mov
ljmp
fisttpl
push
ss
adc
add
inc
push
rcl
stos
add
inc
data16
lea
sbb
push
stc
jecxz
push
popf
mov
jge
sub
xor
aaa
lret
or
add
call
mov
add
pop
mov
mov
jle
in
cwtl
jmp
inc
sub
popf
call
lods
adc
mov
fistps
dec
cld
mov
in
push
xor
mov
mov
jge
mov
bound
hlt
xor
imulb
test
xor
lahf
arpl
call
or
adc
push
or
lods
or
call
out
mov
fildll
ja
mov
push
xchg
stc
pushf
lods
cmpsl
sbb
add
insl
pushf
xor
push
push
in
push
dec
mov
cmc
or
cmp
xor
push
and
push
push
pop
cmp
dec
jns
and
add
stc
test
pushw
cmpb
aaa
pushf
popf
std
in
lds
arpl
inc
pop
sub
fisubrl
jle
in
cmp
sbb
push
xor
dec
pop
xor
adc
insb
and
lds
iret
and
cli
and
mov
add
outsl
push
mov
outsl
ret
lods
jmp
adc
xorl
add
add
int
loope
fs
mov
lret
push
add
sub
mov
xor
mov
add
inc
stos
adc
out
mov
cld
stos
lret
and
xor
nop
aad
scas
movb
xchg
pushf
push
xor
or
lret
addr16
loopne
adc
clc
mov
test
iret
mov
push
ljmp
add
inc
pop
fcmovnbe
push
lcall
adc
push
jb
xchg
inc
outsb
je
notl
mov
mov
sbb
add
mov
repz
mov
inc
or
pop
cmp
call
in
data16
add
stos
rcrl
bound
mov
mov
jne
xlat
inc
mov
mov
out
ret
ret
aad
cs
or
pusha
add
add
xor
pop
call
jp
enter
in
jno
mov
add
cli
mov
mov
push
mov
sbb
fldenv
dec
push
fcmovnu
dec
fnstcw
test
ret
pop
imul
scas
pop
iret
sub
aam
xor
imul
cs
fisubrs
and
and
subb
adc
xor
enter
and
cli
adc
push
loopne
sub
cli
adc
fcoms
cwtl
popf
rcrb
xchg
pop
sbb
mov
mov
mov
cwtl
xor
subb
lea
pop
push
push
bound
dec
roll
push
and
and
mov
gs
lods
xor
pop
dec
mov
push
loopne
sti
push
das
sbb
addl
jp
dec
mov
and
dec
mov
mov
das
xchg
push
fmulp
xchg
mov
sbb
fldcw
insb
mov
jo
push
addl
adc
xor
pop
je
rclb
cmp
mov
push
xchg
imul
sub
stos
dec
lods
and
sbb
je
mov
mov
loop
leave
clc
je
pop
push
addr16
aaa
or
int
cmpsb
loop
mov
xchg
push
mov
mov
paddw
jmp
xlat
push
aas
or
add
add
sub
xor
pusha
movsb
mov
dec
cmp
adc
or
hlt
cmpsl
loopne
inc
adc
shl
cmp
mov
or
xor
add
hlt
or
mov
add
mov
aaa
notb
add
pop
dec
pop
cli
aaa
mov
test
and
mov
nop
add
inc
popa
test
enter
adcb
icebp
jnp
add
push
cs
push
add
orb
mov
pop
xchg
dec
aaa
add
lods
or
xor
mov
jbe
adc
push
int
adc
movsb
add
xchg
inc
into
dec
sbb
nop
aas
mov
add
push
jmp
sub
add
aam
cwtl
shrl
push
hlt
add
mov
sub
cs
test
jmp
sub
call
jo
inc
xlat
xor
pop
or
ja
fisttps
sbb
pop
xchg
and
std
cmpsb
add
pop
fs
mov
mov
arpl
add
rolb
cltd
sub
sahf
push
mov
sbb
xor
sub
cmp
adc
sarb
pop
xorl
push
sub
loopne
pushf
out
push
dec
jbe
nop
push
add
jb
icebp
pop
js
outsb
fadds
dec
push
loop
cmp
cmp
call
or
dec
add
mov
xchg
push
and
repz
in
xchg
cmp
cmp
jns
enter
aam
and
gs
js
mov
mov
mov
jne
sbbl
int3
inc
int3
mov
or
pop
xor
cmp
pop
sbb
ffree
xlat
fs
das
dec
outsb
or
notb
xlat
xchg
pop
add
aad
out
fdivrs
add
lret
and
add
or
out
xchg
mov
xchg
mov
mov
inc
in
aam
mov
push
xchg
sub
cltd
jl
jb
push
adc
xor
adc
jbe
cmp
xchg
add
inc
cmc
mov
mov
jo
mov
sbb
cmc
dec
cltd
sub
ret
cmc
ret
ds
stc
shlb
je
test
pop
xchg
inc
fcomi
pop
sbb
adc
push
sbb
and
mov
adc
adc
or
inc
cmc
mov
out
pop
mov
sahf
cmp
rol
xchg
xchg
popf
dec
test
rorb
inc
push
dec
pop
insl
or
push
push
in
or
cmc
mov
or
sub
ljmp
gs
in
cmpsl
mov
xchg
sub
adc
sub
shl
test
nop
lea
insb
orb
in
lahf
sbb
fwait
sbb
xchg
push
call
cmp
pop
add
leave
mov
sti
add
xchg
inc
stos
pusha
mov
dec
pop
dec
xchg
pop
in
movsb
mov
add
mov
xor
or
inc
mov
cmp
popf
mov
xchg
cmc
into
add
adc
daa
popf
nop
lds
pushf
inc
imul
cli
dec
push
and
leave
icebp
into
addb
mov
xor
fstp
enter
sbb
pop
mov
out
add
pop
data16
push
clc
sbb
and
jo
aaa
or
pop
stc
xor
pusha
adc
push
xor
mov
adc
pop
sbb
mov
jbe
fs
call
push
inc
pop
sbb
and
xor
aaa
mov
stc
lret
andb
cwtl
ss
xor
adc
add
test
xor
adc
pusha
dec
add
dec
loopne
int3
or
or
fdivr
hlt
mov
cmp
sub
adc
cli
mov
hlt
mov
jb
rorl
andl
ja
les
mov
stos
lret
dec
nop
adc
add
pusha
add
test
addb
arpl
xor
test
shrl
pop
add
inc
orb
mov
push
pop
adc
test
pusha
outsl
test
addr16
push
cmp
xorl
jg
mov
add
fnstenv
bound
add
sbb
pusha
push
sbb
divl
and
push
mov
sbb
daa
daa
imul
fisttpl
mov
rdtsc
popf
clc
mov
xor
or
push
outsb
adc
push
adc
mov
and
sub
cmc
adc
jp
sahf
frstor
ret
cmpsb
lret
add
pop
in
xchg
jle
orb
out
data16
jo
fwait
jmp
aas
mov
insb
sub
notb
mov
test
adc
aas
sbb
jmp
inc
loop
push
pop
addb
sbb
nop
sub
bound
stc
aad
add
push
mov
mulb
je
movsb
mov
ret
in
xchg
xchg
repnz
xor
sbb
jmp
ja
jbe
shll
jle
push
or
in
out
sbb
test
out
pop
and
mov
dec
or
or
xor
cmp
sub
mov
xchg
inc
or
nop
fwait
push
sahf
inc
push
mov
pop
push
mov
pop
clc
cmp
sub
rcrb
pushf
stc
cmp
push
and
push
in
mov
xor
or
mov
scas
add
scas
pop
je
xchg
inc
sbb
cmpsb
mov
fisttps
ret
xchg
cmp
xchg
daa
out
daa
push
fdivrs
sbb
popf
pop
jecxz
imul
mov
cs
dec
sbb
cmp
popf
sbb
lods
incl
lds
js
xor
add
lahf
scas
sbb
sahf
add
cwtl
mov
cmp
aaa
jl
adc
push
or
xor
aam
cltd
cs
add
mov
repnz
daa
lcall
adc
fwait
and
aam
inc
fsubrl
pusha
adc
rolb
pop
test
lahf
mov
mov
cmp
aam
adc
jbe
cmp
adc
rcrb
popf
dec
ret
fxch
addb
sarb
push
sub
call
inc
mov
loop
pop
mov
lahf
ljmp
mov
int3
xchg
jbe
sbb
dec
jmp
xchg
mov
fwait
mov
mov
sbb
cmp
jle
add
jmp
fstpl
xor
mov
add
pop
add
mov
nop
fstps
int
jmp
test
jo
call
lods
pop
in
add
pop
pop
mov
mov
mov
sbb
rcr
pop
inc
xchg
lock
loope
stos
sbb
adc
sub
lret
cmovge
jecxz
dec
rcrl
and
scas
ror
sub
jp
mov
addb
or
inc
mov
ret
sar
out
cmp
gs
pop
pushf
push
xchg
push
mov
xchg
mov
add
sbb
dec
sub
mov
cli
jg
push
or
dec
xor
dec
fsubl
push
inc
call
stos
dec
lods
adc
pop
inc
xchg
mov
ss
cmpsb
popf
gs
mull
cmp
mov
lret
test
sarl
mov
jo
jnp
mov
ljmp
jmp
and
lret
xor
mov
adc
push
sbb
sub
xor
push
leave
movsl
mov
jo
mov
or
add
mov
dec
cmpsb
jne
cmp
or
push
push
add
mov
rorb
popa
push
dec
dec
bound
out
sbb
jge
xchg
outsl
sbb
inc
es
jmp
adc
jp
es
sbb
out
adc
adc
dec
jbe
int3
mov
xor
addr16
mov
sbb
scas
cmpb
int
sahf
das
mov
inc
nop
lds
jbe
inc
stos
sub
and
add
jecxz
mov
sarb
mov
xor
cmp
mov
sbb
dec
jg
pop
cmpsl
pop
nop
fld
mov
andb
mov
lahf
sub
mov
pushf
push
or
or
repnz
lcall
fisttpll
adc
mov
dec
or
sbb
inc
sub
mov
in
movsl
mov
inc
mov
imul
rcr
adc
call
cs
test
mov
repnz
sbb
andb
xor
test
and
cwtl
andb
add
or
scas
pop
cmp
std
jb
mov
iret
sub
test
adc
mov
and
loopne
add
orb
sub
sub
int3
jo
mov
mov
and
push
lea
add
test
xor
pusha
xor
sub
sub
out
imul
dec
mov
pop
call
cmc
aaa
fwait
sbb
lods
jp
adc
xor
mov
add
jg
les
call
into
rcll
sub
pusha
aam
jns
add
inc
inc
push
daa
mov
sbb
mov
adc
push
cmp
add
in
xchg
nop
or
call
std
jmp
loop
fsubrs
mov
fstpl
xlat
lods
das
mov
fsubs
xchg
mov
fisttps
push
in
jb
in
add
mov
data16
sub
push
rclb
js
add
push
test
pop
andl
xor
mov
pushf
jp,pt
xchg
call
es
pop
jne
push
jle
push
in
xchg
das
rcl
icebp
adc
push
sbb
or
mov
cmp
scas
pop
add
pop
dec
jecxz
scas
imul
repnz
stos
and
loopne
aaa
fs
add
out
mov
clc
jl
pop
mov
cmp
into
xchg
cwtl
xor
push
xorl
push
andl
add
inc
cmpl
inc
enter
cli
mov
leave
ret
xchg
hlt
sarl
xorb
fwait
out
inc
add
sub
adc
dec
push
jmp
xchg
inc
and
xchg
dec
dec
sub
ficoms
out
pop
xchg
sbbl
stc
cmpsl
and
mov
jl
push
call
xchg
fs
pusha
jp
fimuls
jbe
add
and
mov
cwtl
pop
out
dec
sbb
mov
orb
xchg
ds
sti
out
inc
adc
std
mov
add
loope
std
lods
mov
std
mov
xorl
dec
push
or
popf
mov
nop
jb
mov
fisubrs
in
nop
push
aam
sub
mov
ds
adc
mov
inc
adc
fisubrs
into
xchg
sub
cmc
add
rorl
cmpsb
pop
call
mov
sti
mov
lods
mov
roll
add
test
fisubl
outsl
push
shlb
sti
loop
lea
dec
aad
cmc
add
jp
push
mov
testb
and
mov
mov
mov
add
loopne
dec
fistpll
inc
jo
push
jecxz
jmp
xor
in
das
jne
addr16
subb
adc
test
insl
cld
pushf
jne
popf
ret
mov
sub
xor
add
or
sarb
push
shrb
movsl
and
test
test
add
nop
ret
loope
mov
push
andl
das
lcall
push
pop
aaa
fwait
adc
mov
add
loop
xor
mov
mov
lahf
sub
mov
push
pop
cltd
in
fsts
pop
mov
cmp
js
mov
or
push
xchg
or
adc
push
and
xor
adc
xor
jmp
and
sub
cmp
cmpsl
xor
lods
add
int3
mov
insl
popf
sbb
rcrl
scas
add
mov
xlat
and
jo
fadds
js
push
je
or
hlt
js
testl
sbbl
stc
adc
mov
hlt
add
hlt
mov
adc
add
sbb
scas
mov
loope
fs
mov
or
pop
xchg
or
repnz
push
fstl
popf
pop
cmp
mov
int3
mov
xchg
test
cld
dec
mov
shl
mov
fmul
sbb
mov
aas
push
rolb
adc
inc
sbb
and
mov
pop
je
cmpl
adc
repz
cwtl
add
enter
adc
enter
dec
les
enter
mov
add
mov
or
inc
subb
adc
jns
imul
push
cwtl
sub
shlb
push
stc
xlat
out
maxps
cmp
pop
mov
mov
pushf
cmp
test
lods
push
ret
gs
icebp
das
add
push
les
add
xchg
xchg
or
test
stos
xchg
ret
mov
loope
jb
fstpl
mov
push
and
incb
xchg
sub
sub
mov
pop
push
mov
call
sub
sahf
add
rorb
or
arpl
imul
je
ret
push
fcmovnb
lret
add
xchg
test
add
push
xor
outsb
pop
shll
mov
pusha
or
mov
push
dec
jnp
inc
pop
mov
push
call
scas
rorb
enter
or
sub
pop
aam
xchg
test
orl
or
push
push
pop
add
insb
hlt
aad
addb
hlt
pop
pop
out
imul
xchg
pusha
pop
xor
adc
pop
xor
dec
lret
pop
rorb
sbb
adc
int3
rclb
and
sbb
sbb
cli
sbb
sbb
test
and
jo
int
jmp
adc
stos
sub
stos
add
sub
clc
dec
adc
int3
stos
aaa
jge
ja
sarb
call
sbb
add
fdivs
out
xchg
jb
mov
jo
call
out
mov
repnz
adc
fldcw
movsl
fisubl
pop
sbb
xor
xor
mov
pusha
xchg
push
sbb
aaa
or
lret
movsb
inc
js
inc
lahf
mov
je
dec
jg
inc
mov
aad
mov
mov
jmp
push
daa
test
movsl
out
push
sbb
xchg
add
and
dec
xchg
cmp
xor
cmp
in
int3
adcl
push
aad
cmp
jp
push
and
call
xchg
hlt
fcmovnb
xchg
add
and
aam
dec
ljmp
stc
pop
jbe
std
ja
cld
lea
add
scas
sub
xor
sub
sarl
add
das
adc
loopne
xchg
push
xchg
xchg
loope
dec
add
push
adc
es
sbb
bound
clc
cmp
clc
mov
xor
mov
sar
push
push
mov
adc
shrl
mov
shrb
fstps
jge
mov
push
dec
sbb
mov
mov
lcall
or
adc
jl
pop
shlb
dec
fisubs
push
popf
leave
mov
and
lds
jmp
flds
cmp
and
mov
nop
call
fwait
jle
int
pop
mov
adc
mov
pusha
popf
ja
addr16
mov
movsl
mov
mov
jo
mov
push
xchg
pop
mov
aam
call
data16
call
sbb
add
out
xchg
sar
jno
mov
mov
xchg
movsb
jg
je
call
adc
mov
lahf
aas
jmp
jnp
sarb
inc
es
fidivs
mov
adc
sbb
mov
add
ss
mov
push
add
ljmp
jge
sub
push
or
jnp
adc
call
and
mov
dec
rcl
dec
lret
out
aaa
test
mov
insl
out
mov
hlt
call
test
and
fcomp
rolb
inc
daa
scas
dec
loop
lods
imulb
pop
mov
mov
pusha
mov
jmp
dec
cmpsl
fldenv
dec
sbb
cs
jl
lret
popa
and
call
mov
xor
add
adc
cld
cmp
mov
call
int
call
daa
lahf
in
add
jmp
push
imul
dec
mov
fmuls
lret
loopne
leave
xor
sbb
mov
pop
fldenv
mov
fisubs
add
das
in
cmp
or
movsb
pop
rclb
popa
pop
jb
cmp
jmp
push
adc
cmp
dec
mov
lcall
inc
dec
or
pop
lret
aam
jecxz
xchg
adc
cmp
psubsb
add
mov
cmp
cs
push
sti
aad
sar
mov
mov
jle
push
jae
cli
js
push
jecxz
push
call
pop
push
insl
cld
jg
mov
push
inc
jne
lcall
push
outsb
mov
mov
pop
xchg
addr16
xchg
cmp
pop
hlt
sbb
nop
pushf
cmpsb
div
sbb
insb
xchg
push
inc
sub
or
cmp
jge
sub
test
call
ret
pop
int3
daa
sti
call
ficompl
fisttpl
mov
lock
xchg
loop
fwait
pop
xchg
aam
sbb
lods
fidivrl
sbb
or
fisubl
orl
insl
sbb
jbe
pop
call
std
inc
fiadds
sbb
inc
inc
inc
inc
ja
lret
out
clc
jp
adc
sbb
add
iretw
or
out
in
add
xchg
jns
push
leave
mov
insl
sarb
mov
mov
jo
imul
jne
aam
jo
pusha
and
outsb
sarb
stos
shrb
xchg
xchg
lock
push
mov
pop
call
jecxz
ljmp
fsubrs
mov
or
popa
dec
xor
dec
sbb
mov
inc
xchg
xchg
mov
popa
push
push
or
mov
adc
dec
setge
ja
adc
je
push
xchg
dec
xor
sbb
push
inc
or
outsl
sbb
sub
xchg
xor
shlb
cld
cmpsl
adc
jl
fdivrs
sbb
add
adc
ss
mov
add
icebp
jmp
pop
popf
add
call
data16
hlt
andb
or
and
mov
add
xor
xor
call
in
sarb
inc
stos
mov
inc
xchg
in
xchg
adc
pop
ret
icebp
pop
pushf
mov
cmp
icebp
lret
aam
aas
sub
rolb
push
or
call
cmpsb
imul
sbb
mov
nop
int3
outsb
mull
in
aam
and
mov
movb
dec
push
sbb
les
jmp
sbb
xor
dec
fs
call
push
and
mov
mov
arpl
and
mov
sub
sbb
ljmp
daa
ds
mov
jl
inc
cmovns
push
shrb
mov
cmp
enter
and
int
hlt
loop
add
cmpsl
jle
cmp
cmp
xchg
cmp
shl
xchg
add
call
aaa
dec
adc
or
in
sub
jg
add
pop
sub
mov
push
mov
add
cli
cmp
push
push
aam
call
sarl
int3
jg
ret
jb
sbb
add
rorb
push
mov
jns
xor
aam
push
ljmp
push
int3
lcall
int3
pop
sbb
icebp
outsb
jo
push
cmpsl
adc
pop
push
aas
and
sbb
cs
mov
clc
out
mov
push
rcrb
mov
dec
lret
push
sar
int3
sbb
sbb
push
cmpsl
adc
adc
xor
jge
inc
push
mov
call
push
repz
rolb
mov
test
or
or
stc
mov
fidivrs
push
jo
cmpsl
cmp
sbbl
or
call
cltd
mov
add
or
out
mov
dec
cltd
hlt
divps
pop
cwtl
sbb
add
sub
xchg
push
adc
push
or
and
adc
add
icebp
xorb
add
cltd
rcrb
sbb
or
jge
incl
xchg
je
jmp
insb
and
jns
adc
int
pop
jb
sbb
or
test
push
ja
call
subl
sub
add
pop
adc
xchg
leave
adc
xlat
cmp
push
push
outsl
int
adc
xchg
mov
lock
jno
pop
stc
cs
pop
popf
sti
sub
mulb
or
sub
mov
add
sbb
int
pushf
mov
jbe
stos
mov
sbb
dec
mulb
inc
mov
rcll
add
pop
icebp
scas
mov
sbb
icebp
test
cli
xchg
pop
sar
push
adc
mov
cwtl
nop
dec
bound
repnz
pop
fwait
rorb
mov
pop
int3
sub
cmpsl
lcall
sbb
mov
jo
or
add
shl
clc
mov
clc
shlb
add
nop
mov
in
inc
xlat
sbb
mov
sub
mov
add
dec
ds
mov
mov
aas
sub
push
mov
jge
cmpsl
cmp
sbbl
mov
ljmp
sub
scas
mov
add
sub
clc
sub
andb
fnstcw
jne
addb
mov
addl
loopne
xchg
ljmp
sub
or
xlat
xchg
rcll
inc
add
xchg
inc
daa
in
push
xor
lea
aad
jo
aam
or
test
jmp
loope
add
xchg
cmpb
adc
jne
ss
jbe
test
mov
inc
mov
inc
bnd
mov
xor
add
icebp
stos
sub
inc
xor
out
push
mov
fs
lcall
mov
in
adc
mov
push
call
leave
and
dec
insb
test
add
dec
jle
push
icebp
ja
popf
push
call
jmp
push
pop
push
loope
or
lock
loop
mov
jg
jns
jp
sub
shrb
inc
sub
stc
into
in
mov
lods
mov
push
lods
xor
sub
mov
nop
or
and
les
add
mov
and
adc
icebp
or
outsl
loopne
aas
aam
xor
icebp
fcmovnbe
jmp
push
sub
cmp
mov
into
mov
mov
mov
aaa
scas
dec
push
dec
push
js
out
pop
cmp
jnp
lods
cmpsl
es
mov
testb
adc
lods
fistps
sub
ljmp
call
inc
test
popa
aad
push
adc
mov
repnz
call
lahf
out
jbe
pop
mov
lea
repz
push
or
mov
xor
mov
sub
loop
lods
bnd
mov
lea
xor
data16
call
add
cmpsb
jge
sub
shl
pop
xchg
adc
pop
sahf
in
jno
add
jb
pop
out
xorl
xchg
inc
cmp
hlt
fyl2xp1
or
fld
or
xchg
mov
sub
lods
add
sbb
sub
in
jbe
in
ficomps
mov
sub
fs
testb
push
add
fists
sti
popf
addr16
mov
push
inc
add
and
adc
mov
lahf
ficoml
int
icebp
lahf
iret
pushl
mov
or
rolb
jns
call
or
sbb
fwait
push
fsubrl
xchg
mov
shl
xor
cmp
mov
mov
repnz
sub
xchg
cmpsl
add
pop
or
je
push
pop
loopne
fcompl
scas
je
fnstenv
stos
fs
inc
call
sti
or
mov
sbb
imul
xchg
add
xchg
add
mov
pop
and
in
inc
xor
enter
xor
test
xor
popl
xor
pop
adc
push
xor
mov
mov
inc
mov
je
or
cli
testl
mov
mov
inc
cwtl
jb
call
loope
xor
jl
inc
call
pop
loop
std
mov
out
push
mov
in
negb
mov
lods
jp
fisubrs
into
pop
pushf
or
xchg
jle
sahf
cwtl
sub
sbb
divb
gs
bound
mov
mov
cwtl
jg
sbb
xchg
adc
loope
xor
or
pop
dec
lods
or
dec
test
cltd
cmpsb
fcomps
out
inc
jns
xchg
sbb
add
insl
repz
mov
sub
xorb
inc
add
cli
jl
sti
mov
xchg
inc
into
in
mov
add
dec
xchg
jl
outsb
jne
jle
mov
xor
add
movsl
sbb
jl
mov
js
test
std
add
insb
jo
add
and
ss
stc
shrd
xor
dec
aam
pop
insb
pop
mov
or
rcr
jge
inc
xchg
pusha
xchg
xor
test
lea
negl
fs
push
jne
test
sarb
add
call
cmpl
pop
xchg
lods
cld
popa
adc
cld
or
mov
fsubrl
aam
pop
push
and
sbb
mov
leave
inc
mov
cmp
jb
jg
cmc
jp
test
rolb
orl
test
push
fsubr
cld
bound
imull
mov
and
jb
jp
out
nop
out
sub
aam
insb
lods
shrb
push
inc
inc
stos
jmp
xchg
xor
mov
mov
cltd
mov
adc
scas
push
push
add
mov
pop
shlb
fadd
pop
jmp
jae
push
je
add
je
add
out
mov
xlat
iret
icebp
jmp
cmp
inc
pop
cmpb
and
jl
test
xchg
test
sub
lret
pushf
push
add
adcb
mov
fisubs
jecxz
imul
and
sub
jecxz
inc
adc
sub
out
out
inc
mov
out
pop
cmpl
ds
fucomi
mov
out
sub
sbb
xchg
rcrl
sbb
mov
xchg
push
xchg
cld
xor
adc
out
mov
sbb
push
jmp
jae
call
mov
mov
sbb
std
out
cmpsl
pop
sbb
daa
insl
and
cmpsl
scas
jo
sub
stos
jp
jne
cmp
jb
xor
ds
mov
fimuls
sbb
sub
jbe
push
jne
push
and
push
imul
push
push
xor
mov
mov
pop
adc
cmp
icebp
pop
sub
add
cmpsl
sub
mov
cmpsl
adc
push
mov
xchg
mov
adc
imulb
mov
dec
shrl
pop
imul
js
shll
or
call
stos
inc
dec
mov
frstor
push
enter
icebp
sbb
mov
stos
push
jp
mov
loope
insb
pop
sub
aad
fidivrs
in
adc
dec
sti
stos
xor
sbb
rcl
pop
pop
mov
call
rcr
sbb
push
sbb
lea
xchg
xor
cmc
repnz
pop
hlt
jle
mov
mov
dec
bound
rcrb
imul
fildl
lret
sub
jmp
inc
xchg
mov
add
push
fisubs
int3
repnz
dec
xchg
fiaddl
insb
push
jne
sbb
or
push
stc
fs
or
and
sbb
divb
popf
and
inc
jo
add
xor
push
and
ja
jnp
push
icebp
ds
idivl
lods
or
jae
pop
repnz
call
mov
nop
add
or
imul
mov
push
sub
cs
mov
xchg
mov
out
xchg
loope
hlt
int3
mov
push
int3
or
aas
push
loopne
dec
sti
sbb
int3
sub
nop
xor
je
or
nop
sti
xchg
loopne
add
mov
call
dec
xchg
jle
jo
imul
inc
pop
imul
xlat
rcr
fisttpl
lret
call
and
not
xchg
mov
loopne
call
sahf
sahf
mov
sarb
fists
faddl
out
shlb
lret
dec
sbb
cs
icebp
mov
sub
cmpsl
pushl
mov
fcoml
nop
push
icebp
clc
sbb
and
imul
sub
or
adc
lcall
mov
pop
mov
sbb
shrb
mov
cmp
mov
push
sub
xor
or
mov
int3
mov
imul
cmpsb
mov
xchg
adc
inc
jge
int
add
jge
mov
negl
push
es
cmp
dec
mov
xchg
pop
outsb
dec
pop
mov
not
push
inc
rcrb
fs
cmc
fwait
mov
dec
mov
xor
add
xor
or
xor
mov
orb
mov
mov
mov
mov
push
and
jg
test
int
imul
adc
mov
int3
and
add
mov
lret
adc
insb
add
lcall
inc
mov
call
sub
inc
push
pop
jbe
or
aad
jl
test
outsb
aad
inc
divb
push
xchg
cld
aad
addr16
cs
movaps
es
mov
imul
dec
pop
sti
mov
call
pop
into
mov
lods
mov
jge
cmpsb
push
xor
pop
mov
adc
jb
jne
in
cmp
fwait
xorb
sti
jl
stc
sbb
xor
out
das
push
pop
mov
pop
repnz
ret
jne
shr
sbb
add
adcl
xchg
fildl
add
out
movl
leave
pusha
add
xor
lea
push
mov
mov
mov
jb
jl
xor
dec
ficomps
scas
pop
js
mov
jle
cmp
aas
jp
inc
inc
inc
insb
mov
push
enter
rdmsr
dec
sbbb
fsts
cmc
push
scas
pop
loopne
fidivl
sub
pop
loopne
cmp
jp
sub
mov
sbb
push
jge
mov
or
mov
push
out
pusha
sti
dec
fs
jle
test
loop
sbb
adc
add
loope
cmp
in
popf
dec
and
leave
dec
outsb
shll
mov
mov
add
mov
clc
dec
mov
add
xor
leave
and
and
call
pop
fistpll
std
jo
add
add
adc
add
pushf
jno
inc
xlat
dec
mov
sbb
inc
lret
adc
dec
call
adc
dec
jl
xchg
jle
imul
andb
cmp
inc
pop
das
adc
rol
das
movsl
aas
aad
int
pop
adc
int3
subb
sbb
pop
call
pop
outsl
xchg
test
inc
out
adc
popf
add
daa
jne
mov
call
jg
and
adc
mov
and
rorl
sub
and
sub
popf
cmp
xchg
aas
rolb
xchg
push
cmp
xchg
pushf
adc
ljmp
mov
in
sub
mov
std
insl
or
sub
mov
hlt
push
inc
sub
js
push
and
cmc
sbb
xor
pop
sbb
dec
add
sbb
jbe
popa
adc
lret
sbb
js
rolb
icebp
xor
pop
sbb
add
mov
nop
xchg
and
jmp
cwtl
and
fdivr
sahf
arpl
mov
nop
mov
adc
mov
mov
cmp
je
daa
jp
adc
jg
jbe
mov
fidivl
or
test
out
stos
inc
outsl
push
xor
sbb
mov
fmuls
cmpl
push
inc
idivl
sub
sub
xor
xchg
xchg
add
pop
lods
sub
adc
xchg
sbb
int3
mov
xchg
sub
pop
hlt
xchg
mov
pushf
test
jmp
rcrb
pusha
add
repz
clc
leave
aas
mov
mov
aad
hlt
adc
mov
int3
add
hlt
cmp
mov
adc
rcrb
adcl
sbb
adc
xor
add
cmp
dec
dec
and
sub
xor
cmp
hlt
in
repnz
mov
sbb
fcomps
inc
call
adc
lea
mov
inc
cmp
movsl
adc
cmp
or
jl
pusha
call
fimuls
adc
and
dec
add
lods
iret
orl
cld
sahf
push
xor
mov
mov
push
lret
je
or
mov
or
mov
push
xchg
xchg
cli
je
inc
push
outsl
ljmp
mov
out
fldt
popf
or
xor
sub
in
inc
ss
and
pusha
mov
cmp
adc
lahf
mov
xor
push
loop
ljmp
std
inc
xchg
xchg
add
test
call
add
xchg
sub
shll
das
add
frstor
ss
xor
popf
add
or
add
int3
sub
sbb
add
cltd
xor
mov
pop
in
testl
call
cmc
addr16
sbb
sub
and
bound
or
rorb
mov
mov
rclb
jbe
jp
out
push
test
push
xor
xor
testb
ficompl
adc
sarb
jle
inc
xchg
fwait
sahf
dec
sarl
inc
adc
es
mov
sub
and
cmovns
pop
or
ret
mov
jp
mov
test
dec
or
mov
mov
mov
test
nop
insb
fmuls
insb
shlb
nop
add
jo
mov
mov
sub
mov
xchg
xchg
jmp
mov
cld
mov
ret
mov
pop
dec
add
mov
or
pushf
cmpb
pop
enter
mov
dec
out
cltd
not
push
and
xor
lods
fidivrs
orl
xor
or
bound
imul
rcrb
cmp
subl
sub
and
and
jg
loope
add
mov
shl
test
rcrb
xor
xorb
cmc
add
int3
mov
mov
mov
sub
call
jg
in
and
mov
rolb
mov
sar
rcrb
xor
test
xlat
insl
das
adc
mov
and
sub
ljmp
jmp
adc
add
popf
lahf
rcrb
xchg
addr16
cmp
neg
jbe
mov
or
cld
mov
push
stos
mov
mov
pop
movsl
outsb
mov
aam
flds
stos
in
out
mov
xor
into
fiaddl
mov
and
movsl
add
shl
call
das
ja
xchg
xchg
jg
call
jns
popa
pop
dec
mov
xor
testl
pop
jno
add
push
mov
test
mov
cmp
and
push
dec
jbe
adc
sbb
mov
xchg
daa
rol
sub
dec
cli
add
jae
call
nop
dec
jbe
mov
mov
xchg
pop
adc
mov
pop
add
add
push
call
adc
not
pop
mov
das
arpl
or
cmc
mov
test
inc
das
outsl
inc
jns
dec
fdivrp
push
jnp
add
imul
cmc
adc
or
mov
xchg
adc
jl
out
inc
nop
adc
sub
push
add
add
pop
xchg
fmuls
call
sub
push
cmc
mov
xchg
aaa
stos
hlt
jg
insb
sbb
imul
bnd
ja
sub
call
aam
sub
sbb
sub
dec
popa
fisubs
bound
or
sahf
or
hlt
xchg
imul
pop
inc
xlat
fstpt
bound
add
div
jns
jp
call
aas
add
adc
je
sbb
pop
mov
mov
fucomip
sbb
add
jns
outsl
add
mov
cli
xchg
xor
lahf
stos
add
fwait
mov
test
adc
test
sbb
lahf
add
mov
mov
push
adc
mov
and
and
and
mov
test
mov
test
xorl
mov
mov
fsubl
js
orb
mov
test
cmpsl
pop
hlt
sbb
sbb
sbb
mov
test
push
or
sub
pop
inc
addb
mov
dec
push
mov
js
das
pop
mov
and
in
mov
enter
mov
test
push
adc
in
sbb
jnp
cmp
dec
mov
cmp
jns
mov
test
xchg
or
xor
jl
mov
test
push
adcl
int3
xor
and
add
loopne
or
rorl
dec
addl
fdivrs
push
xor
das
pusha
mov
in
dec
out
inc
sub
call
std
popf
cmpsb
repz
nop
jns
dec
loopne
and
in
add
cli
pop
sti
mov
shl
cmp
call
cmpsb
gs
mov
dec
mov
adc
mov
addr16
pop
pushf
sbbb
rcr
mov
outsb
push
adc
pop
scas
sbb
gs
mov
pop
jle
sub
jecxz
or
xor
add
nop
add
sub
cmc
sub
mov
lcall
add
sbb
dec
shl
das
call
add
push
sbb
push
loopne
adc
pop
test
aad
or
sbb
xchg
xlat
hlt
xchg
mov
stc
sub
xorb
jne
dec
aaa
lods
cmc
sbb
xor
ret
cltd
repnz
sbb
out
xchg
sub
pop
and
mov
cmp
int3
dec
nop
test
inc
popf
fmulp
out
jbe
lods
dec
push
or
pop
jbe
add
sbb
enter
subl
popf
mov
call
xor
test
lcall
cmc
int3
and
cmpsb
xchg
pop
xchg
push
add
nop
das
pop
or
sbb
inc
daa
repz
and
jne
xchg
pop
mov
pop
out
enter
adc
mov
daa
inc
fwait
dec
stc
or
or
cmp
xchg
or
mov
clc
jmp
dec
dec
repnz
or
test
or
cwtl
je
sub
cli
testl
dec
enter
iret
inc
mov
es
int3
pop
sub
cwtl
scas
lcall
mov
xchg
sti
push
stc
add
repz
mov
push
dec
les
clc
inc
jo
mov
xchg
sbb
lods
xchg
mov
jecxz
mov
pop
sbb
je
inc
sahf
dec
out
das
inc
je
loope
sbb
xor
mov
fadds
lea
xchg
mov
fcoml
test
popf
jbe
orl
or
mov
sub
mov
es
das
sub
in
add
sarb
add
mov
jo
outsb
push
arpl
sete
mov
pop
mov
push
leave
pop
in
iret
push
inc
stos
cmp
push
and
mov
addl
and
cmc
inc
inc
enter
ss
adc
pop
minps
push
aaa
add
pop
adcb
adc
sarb
out
iret
inc
scas
push
int3
loopne
and
sbb
or
iret
imul
lahf
sub
ret
pop
dec
inc
push
xor
dec
push
out
neg
mov
inc
cli
xor
jmp
out
arpl
imul
in
mov
imul
call
jo
in
pop
pop
xchg
leave
pop
aaa
cmp
pop
adc
mov
ror
cli
sbb
insl
mov
imulb
mov
mov
imul
add
pushf
pop
into
out
pusha
mov
xchg
xchg
jmp
sti
xchg
sub
enter
fdivrs
in
int
mov
lods
mov
cli
xchg
and
je
push
xchg
int3
fcoms
push
movsb
xchg
xchg
or
add
inc
int
inc
pop
and
movsb
pop
movsl
mov
mov
mov
mov
adc
ja
add
mov
test
and
in
push
insb
sub
sbb
pushf
jmp
mov
push
ficoms
iret
pop
push
mov
jo
cmp
inc
push
bound
cli
dec
pop
inc
cmc
xchg
int3
sahf
push
mulb
dec
fildl
push
out
pop
into
ret
and
pop
call
xchg
mov
sub
out
or
mov
int3
inc
imul
pop
outsb
addr16
roll
xchg
arpl
and
mov
mov
insb
pop
out
movsb
cmp
add
add
dec
xor
jno
add
xorb
js
enter
push
cmovg
push
or
mov
jge
outsl
es
shll
inc
sarl
sbb
pusha
popf
mov
add
adc
test
cmp
cmp
loop
imul
pusha
test
adc
add
jg
xchg
mov
out
outsl
adcl
lcall
call
push
add
mov
pop
lods
adc
out
add
leave
inc
shll
popa
dec
addr16
push
lea
es
int3
add
daa
mov
sub
fstpt
fildl
sbb
push
add
add
mov
pop
mov
mov
pop
mov
dec
into
insb
push
scas
adc
arpl
push
ud2
dec
xor
shl
enter
cmpsb
sbb
mov
push
push
movsl
in
add
push
fidivl
add
fistpll
or
adc
sahf
orb
or
sti
scas
adc
sub
int3
cli
jge
sub
out
inc
xor
loopne
add
xor
mov
sub
or
mov
jecxz
add
nop
push
leave
das
iret
add
push
daa
clc
in
cltd
adc
notl
movsb
js
rcrb
or
lret
test
sub
mov
lea
jo
fiadds
or
add
movsb
jle
push
sbb
push
sbb
rolb
sbb
or
fmuls
aam
test
xchg
shr
daa
add
das
pop
and
pop
inc
popf
call
cmpb
cmp
mov
out
jb
insl
sbb
cmc
imul
adc
jl
cmp
xor
xchg
pusha
add
lcall
lods
add
call
lods
adc
dec
push
mov
push
dec
nop
jge
repz
stc
push
popl
add
jns
clc
xchg
mov
jmp
nop
mov
push
jle
push
pop
sti
mov
insl
inc
push
enter
dec
cs
and
push
and
sti
aad
jne
imul
sub
sub
add
jmp
push
pop
xchg
sbb
popa
jg
lret
push
enter
add
jnp
inc
pop
mov
rorl
in
sub
mov
add
jle
lret
cld
push
int3
mov
push
loopne
adc
cwtl
lds
xchg
aas
cmpsb
add
mov
pop
shr
cli
push
xchg
mov
cmp
mov
or
dec
adcl
rclb
mov
mov
and
push
pop
cwtl
mov
lea
aas
loope
or
push
nop
push
pop
adc
ss
pop
enter
push
or
cmp
add
je
test
push
pop
call
xchg
xchg
mov
enter
push
xchg
call
ljmp
jae
jecxz
push
jb
sbb
xchg
test
cmp
add
and
call
lea
lret
aam
sbb
mov
aas
push
pop
pushf
imul
add
jge
jns
mov
cmpl
jno
ret
jae
mov
sub
jecxz
das
xchg
inc
aas
shr
xchg
subl
aas
loope
icebp
and
add
sahf
stc
add
out
and
cmp
or
aad
in
add
aas
shr
pop
fwait
leave
ret
aas
loop
aas
loop
pop
add
sbb
outsl
xchg
test
test
inc
cmp
xchg
inc
aas
adc
hlt
js
lret
enter
aas
out
call
xchg
inc
aas
pop
add
test
xchg
push
jbe
cwtl
or
mov
sbb
jnp
sbbl
lahf
pop
fdivs
in
or
push
mov
jle
xor
lahf
xor
push
push
gs
orl
in
scas
lret
pop
inc
dec
nop
and
cmpsb
sbb
mov
mov
cmp
jne
fdivrs
int3
sub
or
ret
push
mov
push
sub
lods
sub
sbb
jne
mov
cs
mov
dec
pop
mov
or
or
out
mov
pushf
adc
sub
enter
mov
es
xchg
cmpsl
add
and
and
dec
adc
loopne
lahf
fisubrl
sub
sbb
fnstcw
movsl
dec
js
or
adc
mov
add
call
adc
jg
or
cmp
sahf
xor
dec
and
rorl
iret
sbb
xchg
dec
sub
popa
sbb
cmp
imul
dec
jl
int
pop
adcl
jg
mov
sbb
fiadds
and
inc
mov
fs
jmp
call
mov
int3
jb
bound
adc
pop
cmp
mov
call
adc
js
add
mov
mov
adc
xchg
pop
push
push
stc
pop
add
xchg
push
in
hlt
fs
testb
xlat
int3
cmp
cli
sbb
xchg
mov
mov
or
movsb
les
xor
lds
push
cmpsb
add
jb
fstps
aam
cs
int3
xlat
roll
jbe
cmp
mov
rcl
add
dec
mov
and
adc
sub
and
insl
inc
add
lock
dec
adc
add
xor
std
in
pop
dec
pop
add
call
and
repnz
xchg
cmpsl
sbb
or
aas
mov
es
adc
sbb
dec
mov
adc
sbb
mov
jge
ret
or
push
scas
jge
addb
and
popf
jecxz
mov
push
pop
ja
or
mov
dec
jbe
stos
insb
jp
test
sbb
push
or
and
les
dec
inc
xchg
pop
iret
push
push
push
cmpsl
popf
rorb
les
scas
aas
add
bound
movsl
and
cld
mov
mov
xchg
rcl
sbb
fs
add
add
scas
test
jb
pop
push
rorb
jl
into
xor
adc
sbb
mov
add
movsb
sti
mov
ret
insb
negl
outsl
push
notb
inc
mov
call
lods
or
cmp
pop
mov
aas
fninit
pop
dec
cli
rorl
call
cmp
add
xchg
mov
insb
divl
ja
std
sbb
ljmp
mov
std
dec
outsl
pop
das
into
mov
sub
cmp
test
mov
mov
xchg
push
sbb
lea
inc
xchg
inc
and
rcll
cli
sub
outsl
leave
andl
cmpsb
imul
cmp
and
pop
call
adc
mov
in
xchg
jno
inc
ja
mov
aam
call
push
hlt
mov
push
xchg
scas
mov
push
andl
das
push
push
fiaddl
xor
call
leave
repnz
in
orb
rolb
mov
dec
pusha
inc
xor
add
and
sbb
cs
call
pop
lods
jp
outsb
lcall
cmpsl
hlt
push
lahf
and
lds
stos
hlt
sahf
lds
add
outsl
jbe
test
xchg
or
or
push
lret
sbb
mov
add
add
rcr
xor
inc
ret
mov
mov
ret
test
xor
cmpsl
dec
push
lea
xor
pop
jb
sbb
jb
rolb
mov
mov
xor
or
push
and
pop
push
fwait
push
inc
add
subl
popf
stc
dec
shrb
adc
cltd
clc
lds
not
in
push
aam
push
inc
ret
call
inc
sub
in
xchg
ffreep
pop
aam
rcll
into
xchg
out
outsb
sbb
push
lahf
xor
add
adc
mov
dec
aam
adc
int3
fdivs
orl
js
add
xor
pop
call
sub
xor
lahf
test
jb
sar
orb
jb
scas
les
xor
and
jno
in
aam
mov
loopne
sub
pop
pop
popf
scas
jbe
push
or
cmp
fsubrl
add
faddl
ja
xor
xchg
mov
xor
mov
mov
notb
bnd
and
dec
popf
or
pop
push
mov
xorb
mov
and
das
faddl
mov
add
and
mov
cmp
pop
cmp
mov
mov
or
cli
jp
clc
enter
sbb
add
rcr
dec
mov
lcall
xchg
and
xchg
aas
jmp
les
inc
push
gs
cmp
add
mov
mov
mov
pop
xor
pushf
mov
xor
or
push
cs
cmc
cmp
stos
scas
in
scas
sbbb
loopne
call
stos
pop
xor
loopne
test
or
pop
xlat
and
xchg
bound
or
dec
mov
lea
mov
rorl
mov
adc
cmp
xchg
pushf
hlt
lahf
add
addr16
or
xor
add
add
lods
in
pop
and
lahf
lock
cmp
adc
push
inc
idiv
das
lock
orb
mov
add
je
lock
sbb
jo
add
xor
int
push
faddl
fidivs
jge
lret
add
adc
daa
lock
rolb
mov
lock
add
add
adc
mov
xchg
into
aas
les
and
xchg
fbstp
clc
adc
cmc
mov
mov
add
das
fs
mov
pop
pop
addb
sbb
ljmp
xor
call
mov
mov
and
mov
call
stos
sbb
add
add
call
arpl
add
jmp
mov
test
push
mov
jns
scas
mov
push
jecxz
add
push
dec
or
and
add
outsb
jl
push
icebp
pop
mov
out
dec
stos
lret
jno
or
pop
cmp
add
push
sub
add
mov
ja
fldcw
sub
mov
sub
insb
aam
inc
inc
jno
call
inc
pop
fs
sbb
push
roll
fs
mov
lea
popf
push
fwait
jnp
scas
notb
mov
icebp
js
test
and
cmc
inc
call
pop
int
cmc
mov
push
cmp
mov
push
dec
sub
jmp
mov
push
out
or
and
cs
cmpsb
lods
sbb
mov
rclb
add
xorl
jmp
loopne
cli
mov
enter
dec
test
shl
pop
or
rcrb
andb
mov
pop
lods
in
cmc
inc
lds
adc
inc
cmp
sub
inc
shr
cmp
in
sub
aam
cltd
sbb
push
sub
cld
test
call
adc
mov
sarl
pop
cld
pusha
or
sbb
sub
add
mov
mov
push
cli
add
hlt
rcrl
popf
sbb
sbb
add
lods
adc
xchg
insl
cli
adc
xchg
inc
inc
ror
bound
fstp
xchg
popf
rcr
leave
add
aam
jnp
popf
adc
hlt
cwtl
push
add
add
das
ret
lods
xor
ret
xor
mov
neg
push
cmp
paddd
pop
iret
inc
xchg
or
ja
dec
dec
fs
push
dec
or
xor
mov
add
inc
enter
leave
cli
xor
mov
add
and
rolb
mov
push
lret
lock
call
hlt
sub
pop
call
cmc
cmp
jae
xchg
adc
das
or
aas
test
push
pop
xchg
or
jnp
in
xor
sbb
or
in
in
loopne
insl
or
xchg
in
iret
loopne
out
cld
cwtl
out
clc
cwtl
imul
sub
scas
or
lea
je
pushf
dec
pop
adc
icebp
ret
mov
sub
mov
push
xor
cmpsl
mov
mov
in
fimull
mov
shll
and
arpl
mov
mov
xor
add
add
cmc
lret
test
outsl
test
jl
adc
lods
in
shrb
mov
test
push
fisubs
push
or
out
cmpsl
mov
out
clc
adc
insb
scas
pop
xchg
push
rorl
or
pop
mov
mov
sbb
xor
adc
pop
sbb
stc
fidivrs
in
inc
mov
filds
scas
xchg
add
fadds
leave
dec
push
ja
lods
fdivrs
adc
je
out
add
mov
mov
pop
xor
jno
and
iret
in
xor
xor
js
jns
jecxz
sbb
cmpsb
decb
add
inc
sbb
jae
push
sbb
pop
lahf
jno
das
in
push
pop
test
mov
hlt
negl
loopne
int3
push
cld
cwtl
insl
popf
add
daa
cmp
aam
xor
jno
call
sar
pushf
scas
jno,pn
sub
je
pop
pop
repnz
cmpsl
mov
ja
and
pop
fstp
dec
xor
push
int
int3
in
xchg
or
call
inc
adc
out
push
or
push
ret
dec
jecxz
jne
and
dec
mov
mov
pop
std
js
int3
sub
sbb
outsl
pop
cmp
cmp
mov
sub
add
dec
mov
adc
dec
in
and
add
push
mov
pop
push
jo
repnz
push
sbb
aaa
out
je
sbb
stc
push
sub
jb
ja
je
pop
adc
mov
insb
test
cmp
inc
sub
push
out
cmp
cmp
add
pop
xchg
imul
ficomps
popf
popa
adc
dec
sbbl
popf
mov
daa
out
dec
add
repnz
insb
lods
xor
in
test
test
test
add
pop
jo
addb
jno
mov
and
lcall
mov
mov
mov
mov
cmc
ljmp
in
mov
pop
adc
mov
fidivrl
cmc
daa
or
or
sbb
adc
jne
sub
dec
sarb
in
sub
and
ret
xchg
repz
std
loopne
std
cli
fprem
imul
int
movd
mov
xor
adc
popf
jg
enter
lods
pop
rorb
sub
cmpb
adc
dec
adcb
fadds
cwtl
movsl
or
push
xchg
aas
fists
xor
push
rclb
out
mov
or
xchg
dec
add
in
xor
xchg
cmp
cltd
inc
inc
inc
movsl
xchg
push
jge
sub
dec
and
jg
mov
fisubrl
dec
sarb
adc
or
fdivr
stc
test
shlb
and
push
rcrl
and
daa
mov
test
add
add
mov
cmp
jge
push
pop
clc
mov
xor
scas
sbb
mov
or
pushf
arpl
scas
lods
mov
cmp
nop
push
aaa
pusha
sbb
mov
call
cmc
and
dec
int3
mov
js
dec
pusha
add
push
mov
dec
stc
js
sbb
aad
pop
mov
or
jns
xchg
je,pt
ss
int3
ljmp
jge
cmp
adc
mov
xor
jae
rolb
je
sub
sti
push
inc
addl
adc
mov
mov
repnz
imul
adc
int3
cmp
out
loopne
lods
sbb
test
lods
xchg
call
mov
fcomps
dec
add
dec
add
dec
adc
rolb
mov
xor
repnz
rcr
popf
in
xlat
cs
cld
and
adcl
cmpsb
mov
inc
xor
jo
add
lcall
stc
lret
lret
pop
mov
gs
stc
ret
mov
sub
sti
or
rcl
shlb
or
and
push
call
loop
push
sbb
popf
test
or
mov
and
pop
add
sbb
cli
lret
pop
fisttpll
pop
popf
aas
fisttpll
dec
je
fmull
js
xchg
mov
jecxz
push
mov
dec
xchg
fadds
loope
pop
inc
xor
cmp
add
mov
call
xchg
dec
xchg
cmp
call
dec
pop
adc
add
pusha
test
xchg
pop
mov
mov
jmp
sbb
out
leave
push
sbb
dec
leave
jbe
sbb
or
cmp
movsb
add
dec
mov
test
sbb
inc
sbb
call
push
mov
xchg
and
mov
jl
inc
fstp
mov
xlat
sbb
add
push
mov
fimull
pop
xor
lcall
int3
xchg
push
dec
lea
xor
adc
jno
imul
ret
sbb
jnp
repz
call
ss
mov
repz
add
lea
pop
incb
sarl
js
adc
mov
sub
loope
jb
sub
or
lods
mov
sahf
rorl
add
das
inc
cld
and
adc
rorb
add
enter
in
scas
bound
jmp
push
sbb
fnstsw
cmpsl
mov
inc
cli
cmp
dec
aam
sbb
imul
mov
adc
mov
dec
call
in
inc
push
jno
daa
pop
jle
xchg
enter
call
imul
lods
push
mov
jp
jo
testb
push
pop
cli
call
jne
sti
sub
pop
mov
leave
mov
mov
stos
movsl
cvtdq2ps
test
add
xor
adc
xor
jne
xchg
call
or
add
push
call
jnp
jnp
xor
xor
adc
sti
pop
out
cmpsl
insl
stos
jmp
out
sub
sub
sbb
cmp
int3
fs
add
and
cli
sbb
lods
mov
push
add
dec
rcll
add
call
test
mov
cmp
je
add
imull
test
pushf
aas
fcmovne
or
int3
nop
insb
clc
dec
scas
pop
mov
arpl
mov
aas
jbe
adc
push
lods
pop
out
pushf
cmc
pop
hlt
xchg
scas
dec
loopne
call
sub
insb
add
call
pop
es
ds
and
in
repnz
dec
lds
inc
inc
bound
lret
pop
xor
pop
add
adc
in
inc
xchg
jge
dec
test
mov
stos
push
add
loope
fistl
cmc
push
cmp
cmp
rcrb
loop
and
loop
xor
loopne
jo
sbb
mov
std
sub
cmpl
adc
add
scas
xor
xor
xor
cwtl
cmp
add
rclb
add
mov
repz
dec
xor
in
nop
jg
jne
pop
call
repz
call
cmp
enter
pop
and
repz
push
stos
mov
loopne
lret
loopne
leave
and
xchg
js
mov
rorl
jecxz
mov
pop
hlt
movl
ljmp
fstpl
cmpsb
or
mov
push
jmp
fisttpll
jmp
dec
push
inc
mov
add
loope
mov
jg
push
mov
repnz
push
sbb
cmp
mov
push
cwtl
push
in
mov
inc
mov
push
aam
mov
mov
xchg
pushf
cmp
sub
repnz
push
enter
call
pushf
int
xor
or
xchg
loopne
or
xchg
stc
enter
mov
lret
out
sbb
cmpb
repz
or
and
loopne
adc
jo
call
fs
jbe
out
or
das
jbe
leave
jge
jmp
test
mov
mov
jge
rcl
and
fstps
add
sub
popf
sbb
loop
sbb
sbb
mov
add
add
aad
xor
add
out
je
dec
sbb
sbb
in
mov
stc
cmpb
mov
int
lahf
mov
pusha
mov
sbb
call
sub
jb
inc
mov
lahf
sub
mov
pop
daa
out
dec
sub
inc
jb
mov
dec
mov
xorl
push
xor
test
ret
in
mov
xor
stos
gs
lods
mov
loope
sahf
cmp
pop
pop
flds
adc
aas
dec
outsb
mov
jo
jne
xor
iret
or
dec
nop
popa
cmc
icebp
add
andl
add
xor
adc
jp
andb
pusha
cmp
jl
cmp
scas
dec
inc
in
adc
push
xchg
aaa
cmp
pop
or
lret
pop
add
jg
sahf
stos
mov
and
mov
add
push
or
cli
pop
dec
mov
pop
repz
push
add
mov
push
xchg
negl
shrb
les
enter
iret
xchg
js
aam
insb
js
dec
lret
inc
xor
cwtl
or
push
mov
inc
icebp
inc
inc
inc
and
shrl
sub
call
inc
mov
imul
and
aad
fmuls
aam
movsl
rcll
in
adc
sbb
je
jmp
pushf
fbstp
pushf
lea
lea
or
xchg
clc
popa
push
adc
adc
or
sbb
inc
repnz
icebp
dec
inc
inc
sbb
popf
dec
fimuls
fisubs
jle
lss
add
adc
sbb
cmpsl
mov
add
or
fmul
add
mov
inc
jne
jnp
push
dec
fcmove
enter
rcll
popa
je
fsubp
call
fldl
inc
adc
bound
add
repz
sub
sbbb
xchg
adc
shlb
dec
call
push
jg
xchg
aam
cmp
loope
mov
stos
mov
lcall
orl
inc
push
es
or
in
dec
dec
jg
xchg
je
jle
mov
js
call
adc
stc
pop
mov
jg
or
call
xor
cmp
in
sub
fdivl
lea
test
xchg
inc
negb
stos
and
ja
inc
das
jns
rcll
insb
rcrl
aaa
test
xchg
popf
fcoml
repnz
jno
xor
inc
sahf
add
fisubrs
mov
mov
mov
test
int
mov
leave
dec
add
lea
xor
and
rcl
mov
push
int
in
rcl
jge
rorb
xchg
int
xor
mov
xorb
sub
pop
push
mov
or
inc
mov
add
adc
inc
add
and
aad
sub
xchg
add
mov
cli
les
cmp
or
dec
mov
lret
cmc
inc
sbb
sub
movsb
mov
push
imul
dec
cli
bnd
jge
fildll
push
jo
ret
ss
mov
sbb
fildl
imul
insb
push
ja
pop
push
mov
lea
pushf
fisubs
adc
movsl
mov
out
test
call
push
call
hlt
jne
sub
pop
pop
call
sub
and
push
mov
or
std
cli
dec
pop
stos
lds
mov
les
or
sbb
mov
inc
fisubs
push
fs
sub
inc
cld
pop
nop
test
pop
out
inc
mov
mov
and
out
insb
inc
adc
mov
pop
xor
and
sub
dec
pop
icebp
call
cmp
push
mov
scas
adc
jmp
jmp
jp
mov
push
dec
aam
cmp
dec
clc
leave
rcrl
nop
sbb
inc
repnz
lret
mov
in
pushf
pop
mov
xor
dec
test
lret
stos
mov
adc
or
add
pop
xchg
mov
jge
push
in
add
mov
orb
push
enter
xchg
in
sbb
jg
jl
pusha
dec
mov
adc
or
notb
xchg
pop
mov
fsubrs
lea
fnstcw
lret
sahf
sub
add
sub
sbb
aaa
imul
xchg
pusha
sub
mov
fmul
add
hlt
icebp
cmpsb
or
cmpsb
and
xor
test
shrb
add
out
icebp
pop
js
xchg
pop
cmp
sbb
sub
stos
add
inc
inc
mov
decb
sub
loopne
pop
ret
jmp
inc
inc
and
dec
sbb
jbe
mov
push
das
adc
icebp
lods
add
pop
jo
xor
xor
mov
jb
inc
jg
iret
pop
cmpsl
push
call
mov
add
mov
cmp
push
mov
mov
aas
out
mov
sti
aam
subb
add
adc
jnp
call
pop
mov
mov
repnz
inc
stos
mov
jo
mov
adc
inc
dec
dec
or
test
mov
sub
jo
jge
adc
sbb
push
mov
je
or
mov
and
fadds
adc
imul
or
icebp
je
jae
jmp
popf
movsb
aaa
push
or
pop
shr
fstps
cmp
add
scas
xchg
cwtl
nop
pop
rclb
pop
and
mov
pusha
adc
fildll
iret
outsl
sbb
add
in
or
int3
or
add
flds
aam
jo
pop
add
daa
inc
mov
icebp
xor
ja
adc
or
jge
inc
es
fnstsw
mov
inc
sbb
dec
lret
xor
push
sbb
cmp
push
mov
jecxz
or
mov
arpl
push
sti
push
mov
inc
arpl
xchg
and
and
jbe
inc
pop
sbb
loop
xchg
es
add
cmpsl
cld
cwtl
mov
dec
mov
outsb
and
cmp
call
cmp
and
fadds
shrb
mov
clc
add
lock
dec
enter
pop
imull
movl
mov
inc
andb
sub
ljmp
dec
sbb
rclb
les
pop
or
xchg
scas
push
dec
or
dec
or
mov
add
sbb
sbb
repz
dec
sbb
pop
outsb
mov
mov
loopne
inc
lea
pop
adc
xor
das
jl
in
nop
mov
or
cmp
test
rcrl
lea
imul
les
and
adc
cmp
mov
add
cmp
push
loope
das
sahf
cmp
adc
les
loopew
or
mov
mov
in
imul
addr16
xor
pop
test
rorl
jno
push
cmp
inc
add
addl
insl
imul
mov
inc
pusha
push
mov
pop
in
sub
negl
repz
out
rorb
es
pop
sbb
lahf
sbbl
daa
jae
dec
xchg
sub
inc
js
inc
insb
into
cmpsl
aaa
in
ljmp
push
push
repnz
fldcw
jecxz
mov
outsl
clc
dec
pusha
mov
sub
xchg
test
popf
cmp
mov
stos
fldenv
cwtl
pop
in
mov
jmp
pop
lret
enter
lea
push
in
sbb
loope
mov
cmp
lcall
rcrl
scas
mov
insl
lea
idivb
inc
inc
test
xlat
shl
inc
sbbl
xchg
adc
xchg
loopne
lods
and
and
and
loopne
lods
adcb
mov
ja
jecxz
fidivrs
sbb
enter
mov
out
scas
scas
ret
test
mov
push
cltd
push
sahf
dec
cmp
jge
stos
cltd
xor
xchg
sub
les
fstpl
pusha
inc
rcrb
xchg
jno
shl
inc
pop
sub
or
lahf
in
inc
push
push
cmp
mov
or
sahf
std
cmp
and
jne
xor
push
and
mov
movsb
dec
in
out
sbb
pop
movsb
out
test
xchg
xor
mov
ss
shlb
scas
into
cmp
mov
repnz
int3
sbb
rorb
das
int
popf
leave
xchg
std
cld
clc
mov
xchg
cltd
insl
loopne
jno
xchg
xlat
or
jecxz
mov
xchg
incb
jge
push
push
or
add
movsl
xor
sahf
rol
adc
mov
mov
mov
mov
outsb
xor
call
jmp
bound
movb
mov
mov
mov
push
test
inc
mov
push
sub
push
push
inc
cwtl
insb
mov
sbb
movsl
into
jg
adc
mov
xor
or
es
sub
pushf
xor
add
sbb
xchg
xchg
jne
pop
fisubrs
mov
cmp
fildl
adc
nop
bound
int3
inc
and
or
add
push
xchg
dec
bound
dec
jmp
push
adc
push
dec
dec
push
add
mov
and
les
add
add
inc
add
sbb
add
inc
sub
push
andb
add
les
lahf
mov
mov
ret
add
test
sub
jl
into
fnstenv
push
mov
insl
xor
push
repz
or
mov
sub
or
jmp
mov
lods
dec
push
add
pop
dec
pop
pushf
xchg
and
xchg
add
inc
xor
push
dec
sub
xor
add
mov
mov
rcl
cmp
sahf
in
inc
xchg
adcl
imul
mov
test
mov
xchg
pop
icebp
push
flds
or
stos
xchg
fdiv
adc
fsubrl
and
mov
jge
or
push
pop
add
fcmovbe
addl
pop
call
push
lret
shrl
mov
xor
inc
mov
or
pop
xor
in
pop
cmpsb
lock
mov
shrl
mov
mov
mov
add
sahf
stos
es
rcrb
std
mov
inc
adc
ret
lods
cli
sbb
sub
jb
jnp
aaa
sub
aad
test
push
shlb
cmp
inc
mov
mov
push
mov
dec
inc
pop
out
mov
sbb
leave
mov
imul
push
xchg
pusha
addr16
cmp
sbb
mov
push
aas
mov
add
out
mov
jne
mov
mov
inc
and
mov
mov
mov
out
call
addl
pop
sahf
inc
ss
in
or
and
sub
jp
xorl
pushf
sbb
mov
sahf
pop
mov
jae
mov
mov
xchg
mov
xor
ret
or
inc
int3
notl
popa
jno
fistpll
dec
subb
loopne
rorb
mov
mov
cmp
divb
dec
xor
cmp
ljmp
js
xorl
lock
mov
cmc
xor
enter
fadd
lahf
adc
jo
addr16
jno
imul
or
or
mov
cwtl
js
push
fisubl
mov
sbb
inc
movsb
flds
jl
pop
int3
and
iret
push
sahf
es
ljmp
bound
mov
inc
add
shlb
pop
roll
jno
or
adc
or
lea
insb
adc
adc
add
dec
and
cwtl
aas
push
lret
jl
movd
icebp
jge
scas
jns
and
add
xlat
or
clc
bound
mov
pop
iret
jmp
repnz
add
sbb
enter
jno
int
sub
mov
jno
inc
mov
insl
inc
mov
inc
mov
es
aad
cmp
push
test
lea
push
inc
cwtl
pop
cmp
add
mov
call
sub
out
cmp
jnp
jmp
imul
stos
add
loop
mov
pushf
push
pop
cmpsb
or
jecxz
lret
sbb
std
ja
mov
cltd
push
inc
je
add
sub
call
jp
and
push
mov
andl
xchg
mov
js
test
icebp
jnp
inc
add
test
xlat
adc
cli
js
dec
adc
bound
sbbb
or
xor
jmp
mov
mov
push
add
mov
lret
lahf
adc
jo
mov
mov
rorl
popa
push
fiadds
pop
mov
fwait
dec
cwtl
cld
xor
add
sbb
mov
rcl
pop
jmp
fidivrs
enter
insl
rcrb
jecxz
nop
mov
dec
push
mov
les
or
ja
inc
mov
and
sbb
push
cmpsb
jns
add
imul
movsl
mov
dec
js
pop
xor
aaa
movsb
jg
loop
in
int3
mov
push
inc
inc
aas
sub
movsb
mov
hlt
shlb
mov
mov
movsb
jbe
push
adc
sbb
aaa
orl
lahf
xchg
or
lds
frstor
fdivrl
pop
imulb
mov
dec
fildl
je
xor
cmp
lret
mov
mov
enter
out
push
dec
adc
popf
cmp
fisubrl
ret
cld
pushf
add
movsb
and
push
sbb
pusha
or
jns
je
nop
dec
jo
adc
mov
sub
outsl
xchg
add
and
jb
int3
into
mov
add
xor
popf
xor
sub
jl
addr16
jp
fadds
outsb
mov
or
jo
push
fmuls
jbe
cwtl
sbb
inc
std
sbb
push
jo
test
adc
cmpsl
sbb
push
mov
xchg
dec
dec
cmp
xchg
clc
jge
push
call
and
jl
and
mov
and
sub
inc
data16
cltd
pop
push
adc
ret
int3
sbb
cmp
jl
int3
test
imul
xchg
and
mull
or
ds
insb
fildll
cwtl
sbb
pusha
add
pop
xor
adc
jg
mov
pop
or
jns
cmp
test
nop
mov
pop
pop
int3
int3
leave
dec
and
pop
cmp
sti
test
push
mov
lods
repnz
inc
fcomps
dec
repnz
pop
test
cld
mov
xor
adc
add
add
sbb
sbb
pop
sbb
pop
and
clc
add
or
loop
and
pop
fnstcw
add
add
icebp
ja
adc
add
hlt
call
add
xchg
add
mov
int3
and
mov
into
add
loop
and
pop
leave
pop
jb
sbb
push
adc
aas
push
xor
call
jl
or
dec
push
push
in
test
cld
cli
jno
push
sbb
jo
jge
int3
add
cltd
ss
enter
insl
or
or
sbb
pop
push
shrb
jns
lods
push
fwait
push
pop
das
aam
call
or
pop
mov
inc
inc
shr
sub
adc
call
xor
negl
cmp
push
fadds
div
call
jno
repz
aaa
push
mov
or
cmp
mov
and
movsb
je
pushf
mov
repz
incb
cld
or
or
mov
pop
call
movsb
inc
lcall
or
xchg
push
dec
out
add
xor
notb
add
pop
clc
frstor
inc
sar
lds
inc
sbb
sbbl
mov
fildll
movsb
dec
mov
jle
lcall
inc
jb
call
dec
outsl
jl
adc
and
fstps
pop
inc
inc
adc
lcall
sub
add
repnz
test
imul
push
ret
popf
mov
fidivs
lds
bound
data16
inc
or
scas
xor
adcb
outsl
ret
ficoml
sahf
xchg
push
inc
xchg
mov
inc
stos
dec
loope
pushf
xchg
shll
les
cmp
and
inc
inc
xchg
insb
pushf
lea
fs
nop
cmpsl
popf
pop
dec
mov
pop
xchg
dec
pop
bound
popf
popf
and
dec
xchg
call
popf
enter
add
pushf
pushf
imulb
or
adc
dec
cmp
out
mov
lds
push
jmp
mov
in
inc
sub
push
stos
stos
ret
xchg
lds
mov
adcb
sub
jno
jae
add
adc
mov
jb
mov
pop
dec
push
scas
xlat
rcrb
insl
mov
and
add
dec
aaa
aaa
imul
xchg
pop
or
jecxz
mov
pop
out
sub
cltd
repz
lods
jno
jp
inc
test
fs
mov
pop
aaa
jl
aad
sub
sti
sub
dec
fldl
repz
pop
or
fwait
pop
sub
aam
or
bound
dec
int
xor
push
mov
sahf
xchg
cwtl
xchg
out
hlt
and
pop
xchg
mul
outsl
subb
sbbb
mov
xor
ret
ds
sbb
cwtl
or
sub
movsb
sub
sbbb
scas
or
popf
in
push
cld
lds
sub
cmpsl
mov
mov
aam
mov
and
pop
sbb
in
mov
cmp
dec
sub
test
cmp
and
inc
bound
dec
jns
or
insb
test
mov
or
call
sbb
fbstp
fadd
std
mov
jecxz
jo
dec
inc
sub
test
add
jg
sahf
rclb
rorl
push
dec
mov
mov
cmp
sbb
dec
enter
stos
in
out
fmull
pop
pop
mov
or
movl
cmp
or
call
jb
movsb
notb
lods
and
pop
jg
subb
or
cmc
and
sahf
or
adc
adc
inc
test
lahf
jno
ss
mov
mov
mov
and
mov
mov
int
leave
push
sbb
or
dec
sbb
or
xchg
and
adc
fsubrl
and
test
cmp
dec
std
aaa
ficoms
or
xor
cmp
mov
popf
cs
mov
lret
out
adc
mov
pop
or
fdivl
inc
pop
sub
cwtl
mov
sub
mov
fsubrs
cli
inc
lea
les
dec
pop
sbb
xor
mov
lods
or
and
sub
adc
sbb
add
or
inc
push
dec
and
sub
jbe
dec
icebp
add
loop
or
arpl
adc
mov
inc
dec
stos
insl
rclb
movsb
jbe
inc
inc
dec
add
xor
pop
fcmovnb
mov
aam
sub
pop
mov
stos
push
mov
fdivs
in
cmp
orb
and
pop
jecxz
xorl
rolb
sub
jp
pop
or
xor
popa
pop
xor
shll
popa
call
mov
sub
add
or
movsb
std
loop
and
arpl
movsb
cmc
mov
mov
loopne
fdivrl
xor
and
push
push
mov
push
in
push
sbb
scas
shr
jbe
je
xchg
test
xchg
pop
je
shll
push
add
mov
mov
mov
pop
pop
aam
xor
les
cmp
jbe
ja
jmp
push
mov
push
adc
jo
mov
pop
sbb
sti
jne
cmp
jae
or
lret
lret
push
dec
mov
aaa
dec
jnp
call
andw
sub
shll
dec
int3
fadd
mov
pop
ret
or
xchg
xchg
jb
out
mov
push
fsubrl
or
xor
lret
xchg
add
adc
xrelease
fbld
ret
shll
ljmp
xchg
mov
es
and
sbb
adc
fistpl
adc
lds
mov
push
push
cmp
push
test
adc
cmpsl
cmp
mov
mov
push
sbb
aaa
inc
pop
orl
xor
add
call
sbb
mov
enter
or
or
int3
jge
xchg
xchg
dec
dec
rcrb
push
mov
icebp
mov
icebp
pop
pop
pop
stos
bound
add
sar
lahf
or
xchg
negb
sub
stc
pop
mov
cmp
mov
addr16
push
das
insl
fs
lods
ljmp
mov
scas
loopne
sti
mov
mov
pop
fcmovnb
lahf
cmp
fcmove
cmpsl
xor
mov
pop
lods
or
xor
repnz
nop
inc
fcoms
test
movsb
lea
mov
fadd
pop
or
clc
push
adc
stos
inc
aad
or
inc
pusha
sbb
inc
pop
xchg
sub
or
or
sbb
pop
aaa
loop
notb
mov
int3
pushf
mov
loopne
mov
insl
lahf
mov
or
or
add
inc
popf
je
loop
test
hlt
scas
adc
call
lds
add
clc
mov
mov
sub
or
imul
rcrb
sub
adc
adc
sbb
or
rdmsr
adc
icebp
xor
add
cmp
addb
dec
insb
cmp
sub
sbb
or
adc
testb
enter
and
xor
pop
insb
dec
and
sub
sbb
xor
mov
add
enter
adc
add
enter
adc
xor
add
enter
adc
add
enter
push
mov
je
stc
add
enter
adc
add
ficompl
in
aas
enter
adc
add
enter
adc
stc
jle
stc
add
enter
adc
add
enter
adc
xor
add
enter
adc
add
enter
push
mov
je
stc
add
enter
adc
add
ficompl
in
aas
enter
adc
pop
mov
insb
sbb
mov
cmp
sub
sbb
or
cld
std
cmpsb
outsb
rcl
mov
je
stc
add
jl
insb
mov
pop
adc
enter
and
cld
into
cmpsb
push
loopne
push
mov
je
stc
add
enter
adc
add
jecxz
mov
xlat
adc
add
enter
adc
add
mov
add
enter
adc
add
enter
adc
xor
push
pop
dec
cmpsl
imul
push
daa
pop
add
sbb
add
push
pop
jae
adc
pushf
mov
orb
call
inc
aam
xchg
cmp
jbe
push
inc
inc
push
pushf
rorb
mov
adc
push
lds
sbb
xchg
push
fnstenv
ret
dec
mov
paddw
xchg
xor
popa
add
mov
add
and
pop
xor
adc
mov
jbe
pusha
add
dec
and
or
call
test
ficompl
and
cltd
or
lods
inc
mov
sbb
arpl
and
jle
push
add
adc
sub
dec
inc
call
cli
cltd
fmuls
or
fwait
dec
pop
dec
or
adc
call
dec
dec
xchg
adc
add
lds
mov
adc
inc
xorl
sub
add
in
imul
ret
cld
jno
push
mov
call
or
sub
adc
repnz
or
movsl
in
mov
push
shlb
jmp
pop
fnsave
iret
jb
scas
lahf
and
rolb
dec
popa
call
dec
sbb
sub
movsl
mov
mov
pop
add
mov
and
sub
mov
inc
pop
inc
and
lea
sbb
enter
and
xchg
jb
push
fldenv
out
xchg
fcoms
hlt
mov
mov
dec
popa
push
pop
call
out
push
and
xchg
inc
jnp
stos
rcrl
xchg
lret
dec
cs
or
push
mov
xchg
push
shr
jnp
lret
add
or
dec
iret
push
out
mov
mov
movsb
pop
sub
ret
lods
push
or
xor
lret
xchg
cs
add
pop
call
cmp
fs
popf
js
mov
orl
sub
inc
test
mov
jnp
or
push
pop
lea
mov
cmovb
les
mov
dec
mov
adc
add
mov
sbb
xorb
sbb
popf
fs
iret
insb
sbb
int3
scas
push
mov
arpl
test
call
loope
mov
imul
jl
dec
repnz
xchg
mov
mov
lea
mov
mov
adc
mov
pop
incb
push
add
xor
mov
adc
and
or
hlt
xor
pop
xor
add
aam
mov
int3
add
mov
mov
mov
enter
mov
sbb
jl
xor
adcl
inc
and
add
or
xor
sub
adc
pop
sbbb
insb
or
hlt
std
bnd
popa
dec
and
shlb
add
enter
and
movsb
add
mov
movsb
sar
add
popf
je
test
enter
xor
cld
mov
push
mov
and
sub
adc
add
push
or
addr16
aad
mov
push
add
fdivrl
push
clc
inc
cmp
dec
xchg
enter
pushf
addb
test
push
xor
loop
pusha
add
ficompl
repnz
popf
xor
test
enter
xor
in
dec
fs
add
or
hlt
jecxz
movsb
pop
adc
xor
in
aam
add
aam
inc
aad
mov
add
aam
inc
aad
mov
insl
add
insb
test
mov
je
adc
mov
jb
fs
mov
add
enter
and
insb
and
sub
adc
test
sbb
add
xor
hlt
loop
test
cltd
mov
or
ror
fs
add
mov
int3
adc
movsb
enter
dec
in
pushf
and
or
mov
jl
subb
adc
pop
insb
inc
and
sub
or
in
loope
xor
xor
or
add
push
sub
add
icebp
inc
or
jge
pop
sub
add
popa
adc
inc
inc
add
add
sub
add
mov
jmp
jns
int3
pop
cmp
imul
cmp
or
cmp
clc
subb
lea
daa
add
mov
int3
sbb
in
xor
adc
cld
testb
call
adc
in
testb
int3
mov
testb
in
mov
jnp
insb
mov
add
data16
adc
xor
insb
aas
iret
call
dec
jl
pop
int3
insb
and
cmp
pop
call
xchg
sub
dec
insb
sbb
or
push
call
jmp
cmp
cld
xor
enter
cmc
sbb
fmull
or
inc
sbb
int3
lods
aas
add
mov
cmp
sbb
xlat
xor
std
and
mov
sbb
lea
fmul
insb
popa
int3
add
lea
rorl
aas
insb
cmp
lods
mov
sub
sbb
jno
stos
ret
pushf
scas
aas
xor
mov
hlt
sbb
in
lods
data16
or
lea
in
mov
icebp
int3
pop
bound
pushf
insb
mov
call
xor
mov
jl
sub
xor
imul
or
sbb
orb
cmp
adc
inc
call
je
sbb
or
cld
dec
or
cmc
sti
outsb
cmp
or
sbb
inc
aas
in
dec
sti
imul
push
fs
mov
call
sub
mov
jle
xor
push
call
sub
insb
jl
insb
test
adc
mov
adc
insb
adc
popa
aam
out
adc
aam
dec
adc
lea
or
ret
xlat
or
aas
out
cmpl
add
sub
add
push
adc
mov
jne
add
pushf
adc
in
jecxz
mov
or
add
fdivrl
insb
insb
cmp
mov
pop
enter
loope
pusha
mov
aas
insb
cmp
lods
mov
sub
sbb
push
fadds
mov
or
pushf
orb
sbb
stc
lea
in
xchg
or
sub
fdivr
insb
insb
and
push
dec
mov
out
inc
pop
inc
aas
lods
popl
dec
enter
sbb
lea
cmp
jl
inc
sub
insb
lea
sar
dec
mov
int3
or
cmp
dec
sub
cli
mov
or
inc
cld
loop
xor
in
loop
or
and
clc
mov
fwait
add
sub
aas
mov
clc
pop
int3
add
dec
clc
insb
cmp
pop
sbb
enter
shrb
test
xor
lret
insb
mov
out
jl
adc
jno
jb
nopl
aas
adc
and
cmp
enter
rolb
inc
aas
sub
add
aam
or
call
popa
adc
jmp
mov
jmp
fstp
loope
adc
add
int3
adc
or
mov
das
sbb
mov
loope
pushf
cmp
xor
adc
fstpl
pusha
loope
xor
mov
insb
jmp
mov
mov
rorb
pushf
mov
sub
jge
inc
cltd
mov
shlb
int3
sbb
sti
outsl
pop
js
mov
insb
mov
hlt
mov
mov
mov
adc
or
insb
call
and
sbb
idivb
pop
mov
mov
adc
leave
dec
jns
les
cli
and
push
clc
and
clc
subl
sbb
push
mov
pop
adc
dec
jl
daa
sub
sub
hlt
or
jo
je
and
les
jle
inc
add
and
jl
jp
sub
lahf
pushf
inc
xor
xor
push
js
sbb
jp
jne
inc
dec
inc
adc
jp
jo
inc
cwtl
rorl
shlb
in
and
shll
test
call
or
mov
ljmp
pop
test
inc
jecxz
push
outsl
nop
mov
and
inc
push
cmc
fldenv
call
sbb
inc
das
jl
pop
aam
testb
in
and
int3
sbb
loope
add
or
fcomi
adc
call
dec
fsts
loop
pop
cli
cmp
or
adc
fsts
xchg
and
jecxz
lcall
fcompl
insb
loopne
call
test
int3
jle
lea
cs
inc
mov
shrl
call
pop
jne
xor
in
insl
xchg
add
pop
mov
jg
adc
or
inc
push
test
repz
mov
pop
cmp
mov
pop
mov
clc
push
add
bound
mov
pop
iret
cmpsb
cltd
push
sti
pop
out
out
sti
add
xchg
pop
lahf
mov
mov
aas
add
je
fiadds
add
shl
jl
outsl
les
inc
push
inc
or
out
leave
mov
lds
dec
adc
cld
jno
filds
adc
sub
dec
inc
mov
dec
inc
cmp
ror
sub
add
data16
mov
push
sub
lcall
loop
push
test
popf
pop
cltd
out
aam
xor
add
adc
roll
xor
jp
mov
movsb
pop
jno
pop
adc
xor
lea
pop
fsubr
cs
dec
clc
cmp
call
inc
mov
sub
mov
lods
fldcw
rcrb
in
daa
ss
inc
nop
cltd
cmp
sub
jae
adc
xor
pusha
repnz
insb
sub
shll
cmp
and
xchg
fwait
jne
aas
push
fs
mov
repz
mov
mov
aam
mov
inc
fcomp
mov
leave
stos
es
mov
sub
mov
div
xchg
mov
dec
mov
cmc
les
xchg
pop
push
sti
lret
dec
pop
lods
out
inc
fnstenv
lcall
rcll
lahf
add
sbb
or
lahf
pusha
test
ds
fdiv
sub
mov
sub
xchg
push
cld
mov
or
out
int3
mov
inc
fidivrs
decb
int
in
mov
push
mov
jno
and
outsl
push
call
dec
jg
mov
push
sbb
or
xchg
or
xor
aam
dec
and
mov
cmp
enter
push
pop
mov
add
rorb
cli
sbb
and
call
and
int3
int3
cld
mulb
mov
in
imulb
pop
cmp
negb
push
jne
mov
mov
mov
adc
movsb
addb
call
icebp
repz
push
jmp
sbb
ja
mov
fiadds
mov
sbb
faddl
test
adc
cmp
mov
push
insb
and
xchg
pushf
sbbl
add
mov
mov
stc
sbb
add
cmp
dec
push
pop
sbbl
xor
jns
dec
mov
fcompl
in
lods
sbb
cli
sbb
sub
enter
push
pop
and
test
push
mov
fmull
or
add
out
pop
loop
and
test
sub
mov
jb
int3
int
adc
or
hlt
ret
sahf
fstl
mov
insb
add
sbb
and
in
dec
sbb
cmc
xchg
sbb
xchg
sub
cmpl
lock
push
pushf
and
int3
adc
pop
in
fisubrl
adc
sbb
sub
cmp
dec
and
insb
test
push
test
sbb
test
adc
sbb
sbb
jbe
sub
cmp
dec
sbb
push
int3
adc
add
inc
mov
movsb
mov
xchg
adc
movsb
cmp
add
pusha
mov
xor
push
pushl
rcl
rorl
insb
mov
or
jl
cltd
sahf
sub
mov
adc
movlps
sahf
stc
jo
push
push
sarl
xor
mov
mov
inc
sbb
dec
ja
add
sahf
sbb
fcompl
mov
push
push
lods
mov
jmp
sti
add
lea
sti
repz
out
ljmp
lret
add
rol
es
cld
imul
int3
subb
pop
ret
out
dec
sbb
jmp
shrl
cmp
mov
pop
call
adc
imul
mov
mov
scas
nop
loope
add
dec
cmp
imul
dec
push
push
or
imul
leave
fisubrs
push
cld
adc
or
les
shlb
xor
hlt
xchg
ss
mov
sub
pop
push
loop
hlt
call
lods
xchg
movsb
ljmp
jae
sbb
imul
pop
shlb
xorb
cmp
inc
dec
xchg
dec
orb
mov
sbb
mov
pop
push
sbb
cmp
xorb
cltd
add
addb
mov
or
loopne
push
or
adc
ret
inc
mov
cmp
adc
shlb
mov
flds
adc
subb
inc
mov
mov
add
adc
add
and
call
mov
subl
push
dec
aam
in
sbb
popf
test
out
dec
daa
adc
mov
rclb
dec
test
or
out
xor
add
jne
xchg
popf
jb
mov
push
stc
mov
push
dec
mov
xor
testl
rorb
sbb
pop
dec
orb
mov
inc
mov
mov
cmpsl
jb
div
sbb
ror
push
cld
cwtl
push
clc
test
leave
fisttpll
dec
test
mov
repz
cmp
xchg
inc
jl
xchg
jl
push
sub
pop
inc
popf
xor
adc
insb
int3
dec
fsubrs
or
das
adc
jnp
mov
test
add
sbb
iret
loope
fldl
dec
add
inc
popa
inc
mov
aam
inc
scas
bound
sub
popf
rclb
add
test
test
fmuls
mov
das
or
pusha
das
mov
outsb
jae
sub
pop
add
dec
mov
inc
repz
cltd
cld
sti
shl
inc
jno
cmp
jmp
or
movsb
adc
lea
mov
and
mov
popf
adc
out
mov
mov
xchg
sbb
sub
inc
hlt
inc
imulb
dec
inc
imul
jb
ret
cwtl
push
push
fidivs
lret
gs
push
ja
pop
fs
fucomip
lret
sbbl
dec
or
push
loope
and
or
pop
dec
clc
add
aam
div
xchg
shlb
xor
stc
test
add
push
lcall
loopne
cld
inc
clc
sbb
pop
add
repnz
cld
pop
sbb
int
outsb
inc
ljmp
dec
and
stos
fidivrl
inc
cmp
and
dec
mov
mov
ss
mov
roll
pushf
xchg
adc
add
cwtl
not
adc
fs
mov
loope
add
int3
push
pop
add
addb
ret
stos
dec
fbld
mov
or
dec
movsb
paddusw
adc
loope
mov
dec
pop
sbb
sbb
cld
mov
push
mov
or
int3
adc
ret
cmpsb
push
or
or
mov
cs
xor
bound
cltd
scas
pushf
add
or
rcrb
mov
lret
sbb
mov
sub
sbb
pop
dec
nop
sub
xor
cmpsl
stos
mov
stos
mov
testl
insb
xorl
int
mov
cmpsb
cmp
inc
inc
and
mov
rclb
sub
mov
add
ss
push
mov
xlat
push
inc
sbb
mov
fisttpll
adc
push
out
scas
fstpl
xchg
cld
xor
cmp
movsl
jnp
idivb
push
js
or
pop
and
testl
xor
sub
or
inc
inc
lea
loop
xchg
add
mov
inc
mov
cs
pusha
test
lods
and
dec
pop
js
lahf
mov
mov
mov
test
lahf
pop
dec
xchg
rorb
cli
xchg
add
ljmp
leave
std
xchg
xchg
mov
xor
lea
mov
daa
cltd
pop
sub
stos
jb
jge
ret
jo
and
sbb
shlb
inc
pop
ljmp
mov
loop
loopne
push
push
add
shll
push
xchg
fidivl
cltd
add
adc
mov
inc
movl
mov
or
call
or
mov
and
inc
aaa
jecxz
and
xchg
xor
dec
mov
mov
push
imul
sub
mov
or
das
pushf
jb
jecxz
jnp
daa
dec
mov
dec
mov
jg
mov
dec
fsubl
dec
mov
mov
gs
sub
lea
jo
stos
mov
test
jb
xchg
test
xor
adc
pushf
pop
push
shlb
jmp
jle
xchg
pop
mov
and
cmp
fnstenv
iret
mov
sub
lret
pop
mov
pop
mov
bound
mov
cs
xor
or
dec
sti
or
inc
testb
xchg
fisttpl
loop
les
incl
cmpsb
daa
mov
jp
shl
jno
les
pop
add
mov
nop
cmp
xor
aas
mov
mov
mov
insb
negl
mull
sbb
nop
les
popf
or
jl
pop
sbb
sbbb
pusha
mov
insb
push
cmpsb
iret
icebp
mov
add
adc
test
adc
aas
add
pop
mov
add
insl
divl
mov
jl
imul
and
roll
xor
imul
mov
sbb
nop
adc
or
movsb
lret
jb
insl
bound
or
imul
imul
fucomp
repnz
cmp
add
in
fstl
add
add
lods
cmpsl
mov
mov
enter
push
jg
add
adc
incl
sbb
xlat
in
jecxz
inc
mov
sub
test
add
clc
addb
push
jg
scas
fistps
stos
add
daa
sub
pop
cmpsl
into
mov
add
loope
imul
ud2
jecxz
jg
mov
or
dec
xor
shl
mov
inc
hlt
sub
inc
gs
stc
loopne
add
adc
push
xor
pop
add
jo
loop
lret
mov
mov
data16
and
and
pop
je
inc
push
sub
push
dec
rcll
jo
fsts
out
or
orb
int
jmp
or
adcb
loop
xor
or
push
sbb
push
pop
push
or
repz
jle
sbb
xor
mov
call
sub
push
mov
and
roll
push
push
push
nop
insb
xchg
sets
xchg
sub
inc
push
outsb
ffree
in
mov
xor
call
or
mov
nop
and
int3
mov
or
call
jne
sahf
out
fcmovu
pop
test
push
jo
arpl
xor
popa
adc
scas
es
cmpsl
jns
test
shlb
in
mov
push
pop
dec
fisubrs
adc
add
pop
icebp
shl
jo
cli
inc
lahf
nop
das
or
or
pop
shlb
dec
add
sub
jo
adc
add
inc
cwtl
cli
mov
xchg
adc
cmp
inc
adc
xchg
push
and
or
pushf
mov
cmc
loop
add
orb
push
or
int3
or
xor
in
lea
inc
cmpsl
scas
out
sbb
hlt
ficomps
mov
lods
aad
movsb
xor
push
dec
in
mov
out
pop
aam
dec
cwtl
adc
sub
clc
insb
mov
jae
or
je
add
mov
add
pop
sub
flds
in
je
lret
push
inc
mov
xor
leave
sub
push
xchg
add
jmp
outsb
in
xchg
cmpsl
fwait
aam
dec
cwtl
adc
dec
fsubp
lcall
jle
add
pop
arpl
sub
cs
in
jne
lret
jmp
pop
xchg
in
stc
das
lret
pop
aad
rcrb
mov
mov
jb
fwait
cmpsl
mov
and
popf
in
or
stos
pop
or
or
adc
adc
pop
jns
enter
call
jg
add
jnp
xchg
lret
cmp
in
rolb
jne
and
cmpsl
pop
add
add
int
mov
add
into
add
and
xor
jb
or
stc
push
pop
into
rorb
inc
inc
in
je
lret
inc
cmpsw
loope
fsubrl
or
jge
cmpsl
or
or
or
push
push
mov
cmp
mov
inc
pop
sbb
push
leave
scas
cwtl
xchg
inc
andl
in
jmp
jbe
jno
cmp
xor
inc
test
mov
lret
cmpsl
sub
int3
pushf
add
ljmp
xor
add
adc
decb
maskmovq
negl
jg
pop
jmp
sub
jp
jo
aam
push
dec
loopne
mov
les
sub
movsb
idiv
insb
les
push
pop
daa
aam
pop
dec
movsb
movsb
fmul
aad
add
dec
dec
mov
dec
cmp
adc
mov
les
add
jp
stc
lahf
in
popf
insl
pusha
popa
pop
or
fdivs
movsb
xchg
cltd
bound
and
iret
cmc
dec
addr16
aam
les
xchg
movsl
cs
inc
xor
pop
mov
pusha
call
inc
testb
adc
ljmp
jno
std
in
push
push
outsl
push
mov
enter
ljmp
mov
xchg
and
mov
call
mov
dec
or
jns
push
push
mov
enter
mov
stos
inc
jmp
lds
sub
lret
sbb
lods
xor
imull
mov
mov
mov
xchg
xchg
cwtl
daa
sbb
addr16
stos
inc
add
inc
and
push
rolb
popa
in
ss
add
rcrl
inc
add
ss
iret
or
xchg
or
test
adc
sbb
jecxz
clc
sub
or
leave
add
ss
cld
xor
mov
jb
jle
ss
jnp
jno
or
call
xlat
adc
call
mov
add
lods
rorl
and
pop
cmp
or
shrb
loopne
das
call
loop
stc
mov
pop
inc
daa
faddl
inc
pop
call
sub
aam
sub
xor
sbb
adc
cmpb
xchg
jge
pop
pop
scas
inc
loope
inc
xchg
in
test
add
lret
inc
dec
xlat
adc
push
sbb
xor
dec
repnz
inc
adc
adc
test
and
mov
add
and
out
addb
xor
inc
xor
ja
adc
or
rolb
cli
xor
xor
emms
inc
rolb
sbb
mov
cli
xor
shlb
fsubrl
cmp
inc
or
pop
mov
popf
xchg
inc
flds
sub
movsl
je
sti
push
add
cmp
mov
inc
push
and
and
adc
sbb
fmuls
fisttps
popa
lahf
sub
or
or
add
xchg
xor
xchg
inc
mov
lret
fadds
push
in
das
inc
xor
mov
adc
pop
inc
das
lret
and
fsubrl
sbb
adc
mov
mov
subl
test
jae
jecxz
mov
cmp
lea
adc
xor
push
push
push
loop
xor
aam
cmp
xor
sbb
sbb
add
cmpsb
fwait
jp
jecxz
shlb
add
mov
jl
orb
push
jle
sbb
xchg
fstps
adc
push
lea
lret
mov
call
incl
loop
push
scas
mov
dec
add
outsb
imul
fdivl
push
addb
cmp
subl
loop
add
pop
xor
leave
cmpsl
les
fmulp
leave
xlat
jns
lods
lds
push
lahf
nop
ljmp
mov
int
inc
cmpl
in
push
movsb
cmp
outsb
mov
sbbb
mov
or
pop
sub
mov
sub
or
wbinvd
dec
dec
aas
add
pushf
mov
sti
testb
imul
mov
ret
or
out
dec
add
jno
call
xor
in
xor
cli
adc
les
aam
insl
xor
repnz
and
inc
test
hlt
mulb
sbb
xor
sarb
cld
aam
popf
mov
lret
sub
sahf
xchg
sbb
mov
repnz
mov
les
jno
adc
sbb
aas
pop
push
add
cltd
les
or
cli
mov
lret
data16
mov
mov
in
ljmp
andl
or
xchg
rcrb
aad
inc
sub
test
jb
popf
lea
pop
cli
aad
push
pop
ss
cltd
les
cld
sub
xor
test
leave
insb
or
push
inc
or
inc
adc
idivb
mov
sub
fsubrl
cs
inc
pushf
hlt
sti
adc
cs
xchg
jne
sub
pop
hlt
shl
sarb
leave
mov
add
dec
or
add
push
xchg
mov
jns
mov
jg
ja
jnp
sub
scas
movsb
dec
loope
imul
inc
sbb
fwait
push
jmp
mov
jb
mov
push
sahf
repnz
ror
add
mov
enter
mov
sbb
fisttps
and
mov
adc
push
xor
lock
xchg
into
ror
mov
mov
push
daa
add
mov
add
notl
xor
aam
mov
add
add
cmpl
pop
cmp
push
fcmovb
mov
jno
inc
mov
xor
inc
xor
xchg
jo
push
push
xorl
mov
mov
enter
add
sub
je
test
xchg
adc
test
loopne
mov
add
adc
xor
out
lret
popf
add
and
pusha
sbb
shrb
mov
and
push
xchg
pusha
cmp
repnz
mov
or
mov
es
js
inc
dec
xor
dec
inc
push
pop
add
cmp
js
or
mov
push
inc
mov
xor
outsl
pop
mov
ja
sbb
cmp
fucom
mov
pop
xlat
xor
cmp
lea
jmp
mov
push
shll
fst
lahf
mov
xlat
imul
mov
lcall
sub
mov
hlt
pop
adc
dec
adc
aad
ds
insb
ret
inc
call
dec
lcall
push
push
in
ret
rorl
jecxz
xchg
mov
xor
jp
jmp
pop
inc
repnz
test
repz
call
in
jns
pop
sahf
cmpsb
adcb
cmpsb
pop
push
subb
stos
popf
lret
je
push
dec
insl
push
jnp
sbb
pop
jbe
and
ficoms
mov
enter
popl
sub
mov
insl
add
enter
std
mov
sahf
inc
mov
push
outsb
dec
pushf
push
int3
mov
cmp
cmp
add
faddp
and
push
call
xchg
add
mov
dec
sbbb
in
sbb
jmp
repnz
es
pop
mov
add
mov
les
push
js
lcall
adc
cmc
gs
lret
ret
add
mov
out
add
add
pushf
jnp
sub
mov
dec
add
mov
rcrb
cmp
scas
mov
inc
xor
lods
adc
popf
inc
and
push
dec
and
dec
or
mov
shl
loopne
test
adc
pop
and
or
cmp
adc
push
add
and
sub
loope
or
inc
and
push
cld
imul
mov
mov
add
mov
or
mov
aas
mov
dec
js
das
inc
sbb
and
ljmp
lahf
inc
cmp
inc
or
xor
in
cmpsb
adc
cli
leave
xlat
pushf
pop
dec
inc
jno
xchg
add
pop
mov
mov
add
push
mov
sbb
or
add
jmp
js
pop
sbb
cmpsb
ret
mov
clc
testb
cmp
mov
add
pop
jb
fwait
adc
fwait
shll
add
subl
aas
jmp
imulb
mov
adc
pushf
jbe
popf
dec
sub
aam
dec
imul
lods
mov
cltd
cmp
rcll
or
fs
add
fdivrl
daa
xchg
sbb
cld
xor
adcb
cmc
es
mov
lahf
xchg
mov
mov
movzbl
sbb
mov
adc
scas
in
dec
cmp
das
mov
mov
xchg
ds
sbb
dec
fdivp
adc
aad
imul
clc
jnp
mov
xor
int
xor
sub
orb
or
xchg
mov
pop
cltd
or
les
mov
or
call
mov
dec
mov
sub
or
data16
mov
cmpsb
jbe
in
loopne
orl
inc
xor
test
ret
movsb
adcl
or
insb
inc
pop
and
mov
jno
pop
xchg
aaa
push
pop
and
dec
pop
movsl
filds
scas
cs
add
sub
popf
fs
mov
movb
pop
sub
cwtl
sarl
in
add
xorl
sbb
jo
daa
or
and
lret
loope
push
jo
lea
push
inc
jb
sub
jo
push
call
lahf
into
or
add
xor
sbb
add
xchg
sub
pop
jo
out
xor
and
or
cmp
xchg
call
faddl
add
add
xor
mov
sbb
int
sbb
in
repnz
jo
add
test
cmp
popa
push
sbb
divb
mov
jae
popa
out
mulb
jae
decb
sub
shlb
mov
pop
jo
mov
push
pop
add
mov
or
adc
dec
mov
nop
cmp
mov
mov
ljmp
mov
test
mov
sub
pop
sarl
mov
jb
sbb
pop
add
inc
nop
jnp
movl
adc
movhps
inc
jo
add
xor
xor
xchg
enter
loop,pn
push
lea
repnz
adc
and
into
pop
pop
push
dec
pop
xchg
insb
arpl
les
mov
stos
lcall
pop
sub
add
inc
ficoms
inc
adc
in
aaa
aaa
pusha
sbb
inc
daa
psubusb
or
ficoms
push
shr
shr
sub
mov
call
and
push
sbb
lods
imul
sbb
mov
mov
mov
adc
sub
popf
xchg
xorl
and
outsb
dec
sub
loope
xor
inc
filds
cmc
add
push
or
dec
rol
xlat
testb
lds
js
fsts
adc
testb
sarb
pop
adc
gs
mov
xor
or
mov
mov
mov
push
jp
mov
or
adcl
xchg
out
daa
sub
outsb
jmp
fcoml
mov
sub
lret
jnp
scas
aam
inc
pop
push
ret
inc
xchg
add
mov
faddp
shrl
int3
rolb
push
imul
mov
or
or
mov
push
pushf
mov
aad
aaa
and
hlt
insb
je
je
mov
gs
cli
lret
push
inc
mov
mov
or
pop
scas
andl
dec
sbb
push
sub
jns
or
add
fcoms
je
loope
scas
test
sbb
pop
dec
pusha
sbb
mov
sbb
lret
ret
mov
inc
mov
rolb
test
and
lods
lret
outsb
fs
test
sub
movsb
jg
mov
test
addb
fcomi
jecxz
add
stos
repz
mov
add
loop
leave
fcompl
loop
pushf
dec
movsl
or
inc
mov
pop
sub
inc
push
dec
mov
cmp
xchg
cmpsl
ret
pusha
lahf
mov
dec
ss
cmc
xchg
xchg
mov
mov
insl
fisttps
xchg
mov
xchg
inc
mov
cmp
enter
pop
aad
mov
icebp
jo
stc
xor
fisubs
shrb
iret
push
or
xchg
jne
jecxz
adc
les
sub
sub
push
adcl
shl
and
sbb
nop
notb
mov
or
sub
aam
int
add
adc
add
adc
or
or
xchg
inc
arpl
cmp
push
push
jp
into
pop
mov
fcom
and
push
out
dec
and
xor
and
xor
loopne
and
rcrb
int
cmpsl
sub
mov
call
shlb
sub
sub
xor
cli
inc
outsb
adcl
push
mov
jg
or
add
xchg
test
stc
cmp
daa
mov
in
sub
or
sbb
sub
push
jmp
sbb
inc
sarl
cmpsl
sar
js
sub
mov
mov
imul
inc
pop
mov
scas
cmp
cmp
fsubrl
inc
push
mov
add
dec
sub
ss
push
roll
adc
jno
ja
outsl
jb
xor
push
pushf
mov
or
sti
xlat
inc
or
jne
mov
loop
pushf
adc
xor
mov
push
jno
scas
into
lahf
into
mov
lret
add
jmp
les
pop
dec
es
or
or
mov
jmp
or
adc
mov
mov
or
data16
inc
fs
out
mov
sbb
add
ret
sub
jno
test
add
ret
xorl
sub
inc
and
sbb
into
outsl
pop
mov
xlat
dec
mov
jp
cltd
lcall
popf
jns
scas
fisubs
bound
add
enter
xor
sbb
adc
out
pop
out
adc
int
add
ret
test
pop
mov
inc
int3
push
jp
pop
incl
mov
jae
in
imul
fstpt
repz
jmp
dec
jbe
sbb
jg
mov
dec
push
les
test
ret
cltd
xor
pop
jl
loope
daa
mov
scas
jnp
dec
push
test
and
dec
arpl
adc
ficompl
mov
int3
pop
sub
aam
add
int3
adc
xchg
add
mov
adc
fstl
inc
inc
xor
call
sub
negb
mov
call
out
arpl
cmp
ljmp
dec
inc
fdivl
push
loope
roll
xor
mov
lods
loope
dec
ja
mov
cwtl
jg
jmp
push
das
jge
lods
jae
dec
xor
or
sahf
jno
les
cmpsb
adc
das
stos
pop
decb
push
outsb
sbb
aad
scas
mov
and
lret
imul
call
jo
lret
pop
aam
stos
aam
xor
cli
testb
int3
cs
fisubs
lcall
fiadds
cwtl
mov
decl
int3
mov
xchg
jge
testb
test
loop
xlat
call
xchg
sub
or
jne
mov
idivb
and
test
sbb
fstl
enter
fdivrs
add
xor
enter
loopne
sbb
inc
inc
enter
test
xchg
mov
mov
int3
push
lret
outsb
dec
pop
or
pushf
push
lock
pop
cli
ds
xor
fcomps
pop
or
out
add
or
fsubr
in
outsl
std
imul
pushf
sbb
hlt
cs
fsub
mov
cwtl
leave
jno
and
push
cmp
inc
cmc
ss
mov
and
out
in
stos
aas
dec
outsb
rorb
xor
fcomps
fbstp
dec
call
adc
insb
dec
movzbl
mov
lods
aam
aas
je
adc
or
push
jo
rorb
cmp
xchg
xchg
cltd
pop
cmp
pushf
test
loop
sti
inc
test
ret
pop
add
shl
das
loop
repnz
mov
aaa
jp
stos
and
jmp
repnz
push
pop
xchg
daa
ja
and
or
pop
nop
enter
lcall
jge
or
inc
xlat
leave
outsl
mov
call
dec
push
jns
fistps
mov
loopne
subb
sub
xor
cmp
lods
xor
push
ss
shrb
add
hlt
aad
cmp
push
xchg
inc
xor
push
jb
call
aas
jns
adc
outsl
shll
call
mov
int
movsl
pop
out
pop
ror
lock
push
adc
dec
pop
dec
fldt
adc
les
xlat
jb
push
xlat
stos
add
or
enter
fstl
lock
fs
aad
add
adc
add
mov
adc
jbe
pop
sbb
scas
rol
push
mov
int3
jb
pop
cmp
sbb
xchg
pop
xor
add
or
andb
cmp
jle
dec
push
cmpsb
ret
sarl
lds
xchg
fs
xor
shrl
test
imul
or
popf
adc
mov
push
fisubrs
add
rcr
add
add
rorb
dec
sbb
call
pop
sar
cmp
inc
sub
or
rcll
rorb
je
call
dec
rclb
sub
mov
shl
popa
and
add
shr
pop
xor
ret
lret
rcr
int3
push
lea
mov
sbb
dec
cmp
repnz
sub
push
and
pop
xor
je
pushf
jno
push
push
mov
iret
mov
dec
mov
mov
out
cmp
adc
mov
scas
mov
sub
dec
or
clc
repnz
pusha
add
in
cmp
mov
add
dec
test
pop
mov
mov
adc
xchg
out
movsl
in
insb
std
inc
pop
cs
xor
pop
push
call
jno
inc
call
mull
fcoms
sbb
adc
addr16
cmp
pop
push
je
jl
jno
ljmp
adc
pop
jne
jae
addr16
into
jo
adc
pop
mov
push
xor
push
pop
outsb
mov
mov
fsubs
jle
and
int3
cs
mov
call
outsl
pop
cmp
mov
call
lahf
xchg
add
shl
enter
inc
mov
loope
jmp
popf
dec
or
lret
mov
call
pop
adc
pop
inc
mov
lds
dec
sbbl
jne
das
ljmp
dec
divb
add
sbb
and
jae
repnz
popf
mov
mov
add
cmp
adc
ficompl
ret
mov
mov
sarl
in
dec
or
pop
pusha
inc
jmp
shr
pusha
push
pop
and
clc
ss
sbb
enter
imul
loop
add
add
aaa
add
cwtl
and
xchg
clc
call
test
jo
test
loopne
dec
cmpsb
loop
and
push
clc
int3
addb
xchg
dec
rcrb
add
lahf
idivb
int3
push
jb
mov
inc
repnz
mov
sub
cmp
lock
jae
push
pop
pop
nop
sub
and
ret
out
push
inc
sbb
jle
mov
fbld
data16
xlat
add
nop
and
inc
xchg
sti
xchg
ja
stos
sbb
imul
in
mov
dec
mov
cld
bound
cmp
adc
sbb
shl
sbb
mov
or
push
lahf
neg
fisubl
cmp
std
call
mov
mov
push
mov
mov
xor
sub
loope
cmp
xchg
jmp
sbb
nop
or
lods
add
sbbl
or
std
and
sub
call
jbe
std
mov
out
sahf
inc
mov
call
lret
mov
sub
and
push
es
in
jge
or
cmp
push
mov
rcrl
and
push
lods
addl
jmp
jecxz
inc
sbb
leave
rorb
mov
pop
xchg
out
mov
jo
pop
xor
les
fcompl
mov
loopne
adc
sbb
movb
inc
or
mov
or
adc
jmp
mov
mov
inc
aad
dec
mov
cltd
lret
fisubs
lea
add
or
and
iret
lcall
sbbl
ret
xor
cli
pop
jp
test
sti
xor
and
movsl
dec
push
dec
aas
pusha
cmp
adc
popa
or
sbb
sub
mov
inc
add
nop
call
dec
push
hlt
mov
lret
movswl
cs
add
push
test
rorl
fmuls
sub
or
jecxz
push
dec
sub
repnz
loop
sbb
sub
cmpsb
repz
jo
cmp
add
imul
dec
mov
cwtl
pusha
int
sbb
int3
pop
insl
rorl
mov
faddp
loope
jne
mov
loopne
push
or
and
lea
jle
inc
add
sub
lock
test
pop
js
jno
rcr
xchg
sbb
mov
push
in
fcomps
rolb
or
into
jae
add
in
cltd
cmp
out
dec
sbb
jge
jecxz
rolb
push
push
adc
xor
stc
push
shrb
adc
inc
lret
icebp
mov
dec
mov
and
pusha
mov
in
pop
daa
loopne
in
popf
jecxz
dec
dec
cmpsb
push
pop
push
or
repz
mov
test
mov
pop
jecxz
pop
jne
mov
sbb
pop
sbb
cwtl
out
add
sbb
es
or
imul
leave
jb
int3
xor
xor
sub
or
push
test
enter
mov
fldenv
pop
or
imul
dec
fs
cmp
mov
cmp
push
xchg
cwtl
push
cwtl
inc
sbb
cmp
jae
idivl
sbb
mov
and
adc
pushf
imul
inc
fiadds
movsb
clc
sbb
inc
and
jne
add
mov
push
mov
add
jge
xchg
xchg
cwtl
ja
icebp
cltd
push
lahf
call
mov
cmpsl
mov
sub
popf
mov
scas
inc
mov
adc
call
sub
cmp
pop
clc
sub
aaa
xor
inc
push
inc
gs
adc
test
push
cli
mov
dec
push
sarb
test
jmp
mov
or
xchg
pop
lret
movsl
pop
stos
adc
jle
mov
jmp
cmp
add
or
sbb
roll
adc
icebp
adc
add
inc
sub
rcl
sbb
subb
mov
bound
or
jae
rorb
xor
dec
pop
add
imul
inc
adc
or
nop
xor
or
sbb
iret
dec
adc
jno
xchg
jae
jecxz
jb
rorl
mov
pop
lahf
inc
sbb
push
sub
or
sub
or
push
push
call
push
adc
xchg
dec
insb
sub
push
inc
inc
movsb
sub
das
ret
test
adc
xchg
sbb
sbb
lahf
jae
repnz
mov
xchg
mov
jl
mov
pop
mov
inc
call
dec
daa
dec
inc
sub
jecxz
mov
sbb
jg
imul
sbb
mov
jl
xchg
test
push
pop
loop
dec
fmuls
and
test
stos
inc
fldl
adc
mov
and
repnz
and
adc
mov
jl
sub
outsb
dec
mov
imul
adc
dec
repnz
or
stos
ja
xchg
jb
add
jg
cli
sbb
fwait
mov
es
cwtl
pop
cmp
xchg
add
push
pop
xor
sbb
insl
fs
jmp
nop
jl
lahf
cld
xchg
jl
xor
sarl
hlt
mov
xor
les
xchg
xchg
sub
dec
push
cmpsb
cmpb
or
xor
mov
jae
in
inc
push
in
sub
and
pop
pop
decb
stos
out
inc
sti
push
mov
pop
inc
add
hlt
das
in
push
jbe
xchg
pop
shrb
pop
rorb
ljmp
imul
dec
lret
lahf
mov
call
and
imul
pop
movsl
dec
cmp
jns
subb
xchg
leave
lret
outsb
pop
mov
add
sub
ljmp
mov
sub
sub
sbb
sub
enter
inc
icebp
fstpt
adc
enter
adc
xchg
adc
je
mov
je
mov
inc
inc
sub
je
push
mov
pop
cmp
and
cli
push
rolb
cmp
es
mov
aad
test
fisubrs
test
mov
mov
push
loopne
inc
jg
cmp
adc
test
xor
test
mov
add
movsb
lret
jge
js
test
add
jno
in
push
mov
add
test
mov
cmpsl
sub
addb
repnz
mov
test
sbb
or
out
in
jecxz
iret
incb
sbbb
fsts
andb
mov
xchg
test
mov
sub
daa
mov
cmp
test
fisubrs
leave
sub
mov
and
sub
push
es
and
adc
jo
jmp
test
orb
pusha
dec
data16
sbb
insl
cmpsb
sub
cmp
or
or
outsb
inc
inc
sub
push
jmp
call
sub
mov
pop
jno
repnz
cmp
dec
lea
jg
call
daa
or
sub
push
in
insb
mov
cld
xor
add
rcrb
jg
cmp
xorb
push
xchg
shl
shrb
nop
mov
and
aam
adc
popf
icebp
lods
je
add
sbb
stos
adc
xor
or
jecxz
or
test
nop
sbb
sub
pop
cs
adc
loope
or
fisubs
pop
repz
jl
jns
mov
sbb
inc
pop
inc
mov
popf
add
mov
cmpsl
cli
dec
insb
pop
sub
cli
test
add
or
pop
test
xor
xchg
xor
icebp
pusha
jl
clc
mulb
sbb
mov
icebp
aad
pop
daa
adc
xor
push
fsubs
mov
push
call
pop
pop
in
fadds
adc
out
in
sbb
xor
arpl
xchg
jl
pop
dec
add
sbb
js
sbb
mov
and
add
repnz
call
or
adc
inc
sub
mov
inc
xor
icebp
cli
push
add
pop
mov
shl
xchg
and
test
xchg
jg
xor
dec
sub
lods
mov
lea
pop
cmp
js
add
push
add
icebp
pop
and
es
jmp
jecxz
push
inc
outsl
clc
jns
loope
sbb
add
adc
xor
and
fdiv
push
loope
outsb
rcrb
inc
xor
aam
adc
testl
aam
int
fstps
loopne
sahf
aad
xchg
push
je
je
call
test
cmpsb
add
icebp
jecxz
xchg
mov
lock
pushf
hlt
mov
idiv
icebp
leave
or
mov
in
push
dec
push
inc
insb
xor
add
mov
loopne
or
mov
mov
lahf
arpl
cmp
cmc
repnz
loope
je
add
int3
bnd
lahf
ja
cs
xor
test
rclb
push
stos
test
daa
scas
jne
sbb
xchg
or
or
call
lcall
mov
dec
loopne
leave
cld
shll
repnz
dec
imul
call
test
sub
mov
lret
fcompl
imul
mov
inc
jo
inc
lods
jge
lea
inc
scas
lds
mov
cmp
mov
jae
test
or
push
pop
inc
lods
pop
adc
leave
cltd
mov
cmp
and
xor
ljmp
loop
cmp
je
xor
push
outsl
mov
mov
std
sti
jae
inc
cwtl
adc
js
pop
pop
mov
pop
mov
lods
mov
pop
fsubl
xor
jmp
daa
cwtl
ret
lea
mov
aam
nop
pop
test
jmp
es
sub
int3
pop
adcb
movsb
jl
jnp
insb
inc
repnz
push
outsb
push
out
divb
test
sbb
ljmp
sbb
mov
mov
xrelease
jbe
push
fldl
mov
or
mull
jecxz
cld
or
xchg
scas
shlb
mov
xchg
push
jbe
fstl
push
pusha
in
lahf
pop
or
push
ret
iret
xor
sbb
xchg
adc
add
js
popf
lret
mov
mov
pusha
shll
decl
xchg
mov
mov
lods
daa
or
dec
dec
mov
push
mov
shll
loope
inc
add
daa
push
or
pop
and
add
outsb
subl
lods
fdivrs
pop
sbb
cli
push
sub
pop
push
add
push
mov
and
sbb
push
repnz
pop
cmpb
inc
add
push
mov
jge
and
int3
out
rclb
cmp
mov
pop
sbbb
scas
adc
mov
imul
sub
sar
or
icebp
popf
pop
pop
mov
andl
ljmp
mov
adc
add
xor
or
jmp
add
push
test
or
icebp
mov
stc
sbb
sub
les
cmp
cmc
cmp
jg
sub
push
dec
jge
mov
ljmp
mov
jg
mov
lea
jb
push
outsb
sbb
mov
jo
pop
mov
cmp
repnz
daa
hlt
xor
add
mulb
cli
flds
inc
jae
xor
mov
push
repz
idivl
rcrl
fsubl
fnop
sub
mov
cmpsb
or
mov
jl
adc
inc
mov
push
out
loop
add
jge
clc
cltd
ret
enter
xor
or
repz
dec
adc
mov
orl
pop
pusha
clc
cli
roll
orl
dec
dec
xor
push
lea
fwait
mov
inc
add
hlt
dec
call
imul
inc
jp
mov
leave
pop
dec
jbe
sub
cmp
call
push
sahf
fbld
insl
xor
testb
push
pop
out
das
lcall
xchg
insb
lds
call
pop
shrl
push
or
or
pop
adc
dec
sbb
jae
push
mov
outsl
sub
push
or
add
incb
addb
cwtl
fcoml
push
nop
test
push
imul
loop
or
xchg
mov
in
mov
add
xchg
mov
sub
lcall
mov
daa
movsb
push
lcall
push
mov
dec
sar
or
das
js
fisubl
aad
frstor
cmpsb
aam
pop
pushf
jns
pop
fmull
push
repnz
mov
mov
popf
call
or
or
sub
inc
je
mov
je
dec
inc
insl
repz
jne
les
popf
sub
inc
push
mov
dec
cs
jbe
push
inc
inc
or
and
adc
es
pop
mov
lret
xchg
and
lret
aad
mov
cmpl
cmp
and
aaa
jbe
aad
shll
sub
cmp
or
scas
mov
sbb
sbbl
mov
ret
ror
mov
inc
out
sub
ret
add
mov
inc
push
mov
lea
dec
mov
mov
mov
loop
mov
adc
mov
cmp
inc
add
push
lods
dec
and
bound
jbe
addr16
cmp
iret
movsl
mov
inc
push
pop
mov
ds
dec
jp
call
mov
dec
call
jbe
mov
xlat
mov
xchg
inc
loopne
inc
xchg
out
shlb
sbb
pop
sub
xor
insb
or
pop
sbb
loop
fdivs
imul
or
sbb
adc
sub
and
and
xchg
adc
or
icebp
mov
mov
andb
test
push
and
es
or
add
lret
xor
jbe
int
rorb
cmp
sahf
insl
pusha
jo
add
cltd
aas
cmp
insl
jns
mov
mov
stos
jb
cmp
adc
ret
xlat
pushf
test
inc
lret
add
pop
fbld
cmp
jge
push
cmp
xor
mull
inc
loopne
out
push
jle
in
cli
outsl
dec
arpl
xchg
dec
cwtl
movsb
push
pop
pop
test
cmp
je
scas
inc
jns
pop
add
je
movsb
cmpsl
aad
push
cmc
or
add
fstp
cmp
not
adc
bound
scas
add
sbb
or
mov
mov
cli
hlt
xchg
scas
aas
xor
mov
loop
dec
ss
mov
push
insb
outsb
mov
mov
add
jmp
xor
popf
rorb
jle
dec
inc
add
sub
repnz
movsl
xchg
mov
jae
in
or
add
jnp
xor
cs
xor
and
pop
dec
mov
icebp
lea
call
int3
cli
movsb
inc
cmp
nop
int
push
inc
inc
lea
adc
hlt
addb
pushl
fstps
gs
or
inc
inc
leave
dec
cmpsl
cltd
inc
aad
adc
pand
fsubrs
jp
inc
mov
push
inc
test
mov
inc
push
push
push
add
rcrb
inc
jb
and
sub
add
push
call
cmpsb
rclb
sub
movsb
out
sahf
in
mov
mov
jle
xchg
mov
inc
imul
neg
pop
hlt
js
popf
push
mov
xor
xor
and
jge
fdivrs
sub
insl
cs
dec
or
mov
xchg
mov
sbb
push
movsb
call
je
dec
jo
add
mov
mov
inc
aad
sbb
mov
popf
push
and
and
mov
rcl
cld
je
mov
add
movsb
adc
inc
or
mov
sbb
movsb
xorl
pusha
xor
or
add
popa
in
add
add
data16
test
mov
mov
mov
sbb
repnz
loopne
jb
pop
jl
imul
adc
popf
pop
lcall
popf
pop
cwtl
je
cltd
inc
or
add
popa
push
dec
pop
sub
out
sub
mov
neg
push
push
dec
movsb
adc
sbb
add
in
aas
mov
pop
pop
adc
sub
or
jne
jne
cltd
lods
movsl
adc
pop
or
sbb
call
lods
int
jno
add
test
dec
data16
push
repnz
test
dec
dec
cld
cmc
es
xchg
jae
out
sub
out
enter
gs
sub
mov
sub
sub
sbb
mov
add
add
add
pop
pusha
imul
mov
rcl
jge
pushf
in
popf
push
adc
sub
mov
inc
cmp
inc
add
fldt
pushf
cmc
mov
dec
insb
and
das
pop
fisubrs
jns
push
mov
enter
cmpsl
test
xor
mov
add
adc
shll
sbb
pop
add
jae
ss
add
test
scas
mov
pushw
in
pushf
sub
mov
in
xor
sub
sub
call
vandnpd
or
adc
push
lods
push
and
jmp
or
pushf
mov
insb
aam
sbb
or
testl
les
addr16
push
xchg
imul
mov
insl
push
sub
jg
cld
pop
gs
fnstcw
push
sbb
add
inc
push
call
in
test
or
add
mov
mov
mov
and
sahf
push
xor
adc
int3
in
call
pop
add
sbb
lcall
adc
push
or
or
popl
fcoml
mov
or
or
mov
xchg
enter
sbb
mov
or
loop
sbb
push
adc
or
xchg
or
scas
add
sub
out
flds
add
mov
inc
mov
push
xor
mov
dec
or
mov
cwtl
inc
dec
daa
add
mov
xor
sub
xor
lods
adc
pop
sbb
popa
inc
test
add
add
add
mov
cld
lret
pop
pushf
add
xchg
pushf
enter
jb
repz
sbb
mov
mov
loopne
test
loope
adc
mov
or
mov
sub
stc
fmull
mov
jae
call
add
mov
xor
out
int3
inc
mov
in
int
loop
mov
sub
sarb
and
sub
inc
addr16
mov
add
stc
mov
data16
ja
inc
add
adc
mov
jnp
cs
dec
adcb
mov
rclb
lahf
inc
pop
jl
in
lret
inc
mov
mov
xchg
lret
int3
je
sub
outsb
mov
push
in
pop
push
movsb
sahf
lds
and
stos
es
addl
xchg
or
loop
pushl
mov
data16
test
push
sbbb
sub
mov
aas
or
nop
or
enter
aaa
or
call
sbb
inc
sbb
shlb
lcall
lods
cwtl
push
ret
cmp
fiaddl
mov
addl
out
clc
and
xchg
pop
pop
push
push
loop
mov
in
push
push
test
add
dec
insl
mov
in
call
or
lret
data16
shlb
sti
inc
repnz
xchg
jbe
jp
xor
jno
rclb
dec
iret
add
adc
jmp
jmp
cs
mov
lret
ja
adc
scas
sub
mov
mov
icebp
fisttps
sarb
xchg
add
rorb
dec
addl
call
push
ja
cld
jmp
xor
rorb
aam
xor
fs
add
test
int3
andl
sbb
addb
ret
loope
cmpsl
dec
mov
and
pop
jo
dec
lea
adc
inc
mov
mov
pop
dec
ljmp
arpl
jbe
shlb
jl
les
test
xchg
cmp
ljmp
dec
adc
mov
dec
adc
filds
js
pop
sub
fdivr
and
dec
mov
and
xchg
adc
inc
imul
pop
call
out
arpl
xor
rcrl
add
jne
mov
neg
cmp
cmpsl
mov
loopne
adc
xor
lcall
cmp
xchg
dec
mov
and
pop
ja
enter
popf
hlt
mov
outsb
cmp
pop
pop
scas
push
push
jnp
xchg
sub
add
pop
push
into
fdivl
es
js
add
adc
or
or
stos
sti
out
mov
cmpsl
adc
push
mov
movsb
mov
incb
pop
jmp
frstor
xor
sub
hlt
das
rorb
sbb
orb
sahf
cmp
jne
std
repz
les
sti
shl
jne
repnz
fs
pop
cmp
fsubrp
sub
dec
icebp
call
leave
jge
les
sub
aaa
or
sahf
movsb
or
pop
rcll
or
push
jmp
inc
nop
xchg
call
loop
clc
cmp
mov
sub
mov
loopne
xor
mov
pop
mov
xchg
dec
pop
pop
sub
push
mov
repz
int3
ss
shrb
fwait
sbb
and
ret
ss
inc
or
cmp
insb
rcll
adc
add
sub
sbb
fisubl
mov
sub
mov
pop
xchg
add
popf
pusha
fcoms
xchg
mov
inc
dec
mov
loop
mov
mov
icebp
jl
enter
xlat
dec
ss
mov
mov
add
fimull
sbb
fsub
int3
repz
imul
lods
jmp
lea
dec
mov
pop
lods
fsubrp
cmp
subb
stos
pop
daa
mov
push
sbb
push
dec
inc
fucomp
pop
dec
cmp
or
pop
push
lods
fildll
popa
loopne
lea
cmp
inc
iret
mov
add
movsb
or
test
sahf
add
out
or
fsubrl
movsb
add
mov
lods
push
jae
mov
sub
dec
sar
fidivs
jmp
sub
cmp
adc
loop
int3
and
das
sbb
pop
iret
xorb
xorb
mov
unpckhps
push
mov
outsl
sub
cmp
push
pop
popf
mov
mov
outsl
push
mov
add
jl
cli
xchg
dec
dec
stos
dec
mov
jl
loopne
js
or
in
add
dec
jo
cwtl
movsl
sub
inc
xor
test
or
shl
inc
add
sub
popa
or
dec
jle
mov
aad
sub
lea
push
popf
mov
arpl
repz
mov
add
inc
xchg
jl
cmp
add
push
sbb
aaa
jbe
mov
mov
or
aad
push
nop
cmp
add
cmc
insb
addb
jnp
mov
arpl
sbb
test
ficompl
push
pop
xor
pop
or
enter
pop
hlt
mov
pusha
dec
cmp
jge
mov
jb
out
insb
xchg
es
cmp
dec
xor
or
fs
jge
idivl
out
enter
xchg
jne
cmc
pop
pop
stos
cltd
daa
aaa
adc
adcl
stos
dec
incl
pop
pop
push
sub
inc
push
je
jle
push
xchg
clc
adc
fs
out
push
enter
out
cmp
cs
cli
test
mov
rol
fadds
jno
bnd
sub
filds
push
iret
sbb
mov
adc
mov
add
das
xchg
call
and
sub
xchg
sbbb
push
push
fistpll
adc
or
add
dec
faddl
push
testl
cmpsl
jp
xchg
into
pop
cmp
test
pop
call
inc
lds
rcrb
lcall
testl
divb
xor
add
lds
xor
dec
mov
pop
xchg
pop
pushf
clc
jb
cmp
ljmp
inc
adc
sahf
lea
or
push
or
xchg
les
dec
andb
test
mov
shll
dec
mov
cwtl
incl
mov
or
hlt
push
sbbb
sub
addps
mov
out
pusha
loop
push
daa
sub
add
icebp
push
hlt
int3
in
push
inc
pusha
or
and
inc
add
or
inc
xlat
mov
mov
leave
jl
jle
nop
mov
dec
std
mov
or
lret
mov
fcomps
fcoms
xor
lret
loop
mov
xchg
inc
dec
popf
lea
xor
cltd
xchg
lock
xchg
call
decl
add
mov
jmp
pop
iret
adc
push
jno
jl
jmp
mov
icebp
int
mov
lods
jp
movsb
lret
lea
push
stc
sbb
jg
int
or
cmp
movsl
mov
mov
push
xchg
in
pop
or
sbb
push
subb
fnstcw
mov
xchg
pusha
and
mov
adc
push
fisubl
inc
jo
enter
inc
shr
inc
icebp
pushf
data16
xor
push
xor
mov
addb
andb
lret
lds
arpl
jbe
or
xchg
add
lahf
ljmp
shrb
pop
mov
out
pusha
jecxz
sub
xchg
pop
pop
xchg
bound
dec
dec
ljmp
jle
mov
dec
testl
jmp
inc
sbb
dec
mov
mov
pop
orb
sahf
push
push
insb
xlat
jns
outsl
add
push
sub
and
fldt
and
pop
add
les
and
jae
es
push
loopne
sub
mov
push
jge
jecxz
dec
pop
xchg
sub
xlat
cmp
push
orb
aam
dec
test
inc
fistps
push
outsb
lahf
ret
in
aam
xor
pusha
add
stos
mov
xchg
inc
pop
add
add
push
cmp
clc
call
push
cmp
rcll
or
repnz
call
testl
out
xchg
or
bnd
mov
or
out
sub
pusha
push
add
cmp
out
sbb
test
sbb
or
jg
daa
adc
and
pop
or
dec
sbb
sbb
mov
and
mov
push
and
js
or
xchg
add
xor
and
adc
sub
lods
jmp
ljmp
or
fcompl
cmpsl
fsubp
insb
repz
mov
push
sahf
aam
lds
lea
pop
sbb
cmp
sub
sub
cmpsb
nop
xchg
adc
mov
or
sub
ret
sub
dec
rcl
jge
pop
outsl
repz
mov
xchg
rolb
sbb
xchg
xor
inc
inc
xchg
mov
rorl
cmp
and
call
pop
mov
mov
sub
mov
pop
cmp
pushf
push
in
pop
xorl
inc
xchg
mov
lahf
sti
fsubrs
dec
add
out
dec
pushf
push
push
fdivrp
sbb
adc
sahf
add
xchg
js
enter
add
mov
xchg
call
xchg
xor
pop
ljmp
mov
mov
jmp
cmp
fnstcw
jne
and
test
jne
jo
ss
mov
popf
inc
leave
popa
clc
sub
push
inc
fdivr
add
mov
inc
push
loope
sub
push
test
add
rorb
push
lret
ds
mov
jo
repz
pop
dec
cmp
jnp
test
push
enter
inc
push
xchg
sbb
jle
sub
mov
lods
cmp
sti
jmp
sahf
mov
dec
lods
or
cld
pop
jmp
shll
stos
enter
movsl
lcall
adc
xorl
adc
adc
adc
mov
mov
xchg
adc
mov
or
mov
fistps
lds
push
pushf
loope
mov
adc
call
push
fiaddl
aas
xor
mov
daa
mov
xchg
adc
push
sbb
jae
fiadds
jb
dec
add
pop
inc
ficomps
loop
insl
aas
int3
lcall
pop
enter
fimull
sahf
mov
ljmp
in
daa
or
push
and
in
outsb
jb
dec
lret
and
sub
cld
cmp
cmp
inc
mov
in
inc
push
faddl
mov
test
xor
pop
shrl
add
xchg
stc
xor
inc
int3
cmp
or
sbb
pop
adc
dec
dec
xor
ljmp
jl
xchg
adcl
stc
inc
mov
call
or
or
mov
jmp
adc
pop
sbb
or
push
in
pop
bnd
mov
xor
xorb
xchg
push
stc
mov
add
mov
push
sub
adc
flds
test
sbb
mov
or
aas
test
pusha
das
jle
shll
push
aam
or
stc
jae
add
cvttps2pi
fmuls
mov
inc
dec
cmp
push
mov
mov
xor
dec
mov
fmuls
or
sub
mov
dec
popa
sbb
mov
int3
push
rcrl
mov
lahf
push
add
les
cmp
pushf
mov
sbb
call
or
jo
hlt
and
lret
add
adc
mov
rorb
les
inc
lret
loope
ret
jnp
js
icebp
test
push
add
and
push
push
sub
mov
jbe
nop
ret
inc
call
dec
xor
push
adc
pop
stc
push
pusha
or
xchg
xchg
xor
inc
xchg
cmp
sti
in
jmp
pop
jb
pusha
cmpl
mov
mov
cmp
mov
add
out
push
dec
mov
pop
sbb
xchg
xchg
ret
add
sub
adc
mov
mov
lret
jge
rclb
xchg
pop
test
decb
xchg
cmp
push
loopne
iret
lods
outsl
in
sti
popa
out
xchg
dec
out
int3
lret
sbb
add
dec
add
cmp
jl
mov
or
jb
jmp
xorb
jbe
popf
xchg
add
lods
mov
or
je
leave
and
inc
in
fnstcw
dec
movsb
jp
popa
inc
mov
les
jmp
pop
sub
jne
movsb
or
test
lret
insb
adc
sbb
dec
jno
pop
lds
push
dec
adc
or
push
ficoml
data16
push
mov
push
xor
int3
sbb
roll
sbb
dec
cwtl
repnz
pop
out
mov
call
icebp
lea
xchg
aam
bound
xchg
inc
or
adc
adc
jle
pop
lods
stos
mov
jno
pop
xor
push
mov
push
cs
aad
dec
stos
pop
dec
ds
in
jo
inc
loop
adcl
push
sbb
rorl
dec
gs
add
add
popa
push
ret
jl
and
dec
add
dec
jl
mov
dec
and
xchg
cwtl
xor
jecxz
jo
hlt
sti
pop
xor
test
and
pop
cld
gs
push
daa
cld
lods
add
fcoml
fcomi
dec
mov
dec
bound
sbb
or
mov
ljmp
inc
jg
jbe
movsb
cmp
and
and
jge
mov
adc
mov
fcom
fdivs
push
addr16
sub
hlt
aad
push
in
adc
jl
call
rclb
test
dec
mov
test
sbb
push
push
subb
vpmacsww
jmp
sbb
test
inc
and
cmp
andl
mov
adc
and
pop
mov
push
mov
pop
dec
jl
and
push
cmp
jecxz
nop
add
adc
adc
sub
cmp
adc
out
or
or
pop
dec
dec
inc
dec
mov
dec
pop
dec
sahf
clc
int3
roll
sub
popf
psubsb
mov
inc
sub
mov
mov
push
sbb
nop
stos
fsubl
add
cmp
mov
adc
rolb
bnd
push
xor
xor
dec
cmpl
jle
mov
add
and
xor
lods
rolb
jmp
dec
jb
dec
int3
cmp
push
mov
jge
cld
pop
mov
adc
cli
loopne
lret
xor
dec
cmc
or
jb
add
or
rcrl
dec
push
dec
jbe
insb
inc
mov
pop
stc
pop
lds
rorl
xchg
cmp
dec
popf
je
pusha
pop
push
leave
xor
inc
adc
or
xor
push
jae
dec
xchg
daa
mov
or
fnstenv
fwait
sbb
or
cmp
mov
inc
xchg
and
or
lds
ja
mov
dec
loop
test
cmp
or
outsb
insb
or
push
popf
pop
fdivp
call
sbb
jecxz
push
movb
aaa
xor
sub
cmpsb
push
cmp
clc
fsub
jnp
cmc
notb
add
xchg
mov
int
add
fdivr
push
add
ljmp
mov
xor
std
sub
fbstp
cltd
push
inc
mov
inc
stos
fs
or
or
jle
jne
pushf
cld
jnp
inc
cld
and
lea
push
pop
mov
cwtl
xchg
or
int3
jmp
das
cmp
xchg
add
push
aam
push
jmp
inc
sahf
ljmp
imul
jbe
adc
test
fidivs
xchg
test
dec
jecxz
add
dec
shll
jmp
xor
shlb
sub
les
aad
out
dec
lcall
inc
push
pop
js
inc
xchg
xchg
in
stos
mov
inc
ret
in
sub
or
ljmp
sbb
add
dec
nop
cmpsb
lock
mov
xor
mov
pop
stos
dec
pop
xchg
mov
add
cmpsb
sub
pop
repnz
sbb
cmp
adc
das
pop
xlat
mov
or
ret
mov
mov
out
adc
jne
cmp
dec
pop
adc
mov
lods
pop
and
pop
push
ret
xchg
mov
push
mov
jnp
pop
mov
das
push
jo
lods
push
or
add
in
rorb
inc
xchg
xchg
pop
insl
imul
push
js
cmp
push
je
sbb
push
jne
test
daa
clc
dec
movsb
add
inc
mov
rolb
call
adc
je
pop
mov
push
adc
es
test
sbb
loop
jp
cmpsb
pushf
lods
insb
and
ss
test
andl
jge
lret
sbb
mov
leave
sbbl
lds
roll
sub
mov
cld
lahf
xor
sub
sbb
pop
jmp
imul
das
out
mov
xchg
or
mov
sbb
add
ror
in
sbb
iret
lea
pop
stc
or
adc
mov
aas
movsl
jns
mov
dec
dec
dec
negl
int
jl
pop
cmp
add
cmpsb
xchg
add
icebp
lods
repnz
mov
jnp
mov
notl
cmpl
jmp
pop
hlt
test
je
lods
push
orl
lds
push
cmp
hlt
mov
repnz
sbb
and
scas
out
sbb
nop
std
inc
lret
fs
imul
ret
popa
int3
pop
or
push
cmc
repnz
nop
jbe
negl
push
add
pop
dec
addr16
pop
push
push
in
jae
imull
or
call
out
fcmove
jae
pop
pop
jae
mov
jne
inc
and
adc
or
fsubrs
push
rolb
mov
sub
jl
mov
mov
scas
add
mov
ret
aad
sar
incb
and
mov
dec
sub
or
gs
jo
jno
nop
sbb
clc
or
lahf
js
enter
adc
stc
sub
std
xor
xchg
jnp
and
xor
and
or
and
fdivrp
cmpsl
lcall
push
push
or
pop
adc
mov
jo
pop
mov
cmpsl
insb
cmp
mov
in
sub
xor
xor
sarb
pop
insl
and
mov
inc
pop
addb
inc
shrl
xchg
sti
jecxz
cwtl
jbe
sub
mov
vrcpps
mov
xchg
cmpsb
in
orb
cwtl
stos
mov
jno
inc
test
dec
out
pusha
sbb
xor
add
leave
repnz
mov
dec
jl
repnz
insb
inc
or
inc
mov
or
mov
inc
xor
cmpb
pop
adc
and
outsb
mov
xchg
xchg
adcl
push
stos
inc
mov
cmp
sub
cmp
and
xchg
sar
jecxz
pop
dec
mov
push
jmp
aam
adc
dec
and
stos
dec
mov
jae
les
dec
mov
rcl
cmp
or
test
testb
dec
movsb
push
fsubl
jmp
sti
mov
cmc
pop
cwtl
xor
call
add
jno
decl
incb
add
cltd
sub
jo
cmp
in
add
in
sti
popf
decb
aas
pusha
js
js
and
test
subl
sti
add
jmp
jecxz
orb
and
sub
add
pop
iret
cwtl
stc
pop
cmp
dec
jno
mov
xor
cmp
mov
jge
cmp
dec
mov
dec
test
movsl
dec
add
repnz
sbb
sbb
sbb
movsl
mov
inc
mov
in
call
pop
jmp
in
push
outsb
notl
in
dec
xchg
mov
pop
cmp
mov
cmp
out
shlb
jno
mov
dec
dec
jb
dec
aad
shrl
test
lock
or
loopne
push
sub
dec
in
in
push
stc
and
in
jecxz
in
mov
clc
fadds
mov
movsb
outsb
xchg
lcall
aad
das
adc
adcl
mov
jno
cs
gs
add
in
std
mov
daa
dec
or
sbb
push
nop
data16
test
test
mov
lea
out
inc
pop
mov
test
jbe
and
mov
insl
dec
push
push
pop
enter
fsub
sbb
mov
mov
cli
aaa
mov
out
add
or
pop
mov
in
stos
ret
rcll
mov
sub
loop
sarl
xor
and
rcrl
scas
enter
push
jmp
mov
lods
cmp
call
xchg
arpl
lods
fldl
dec
jnp
dec
jl
and
sbb
dec
bound
jmp
je
mov
push
add
xor
divb
mov
pop
push
pusha
sub
add
adc
subb
inc
cmpsb
mov
cmp
jp
jbe
mov
pop
xor
aaa
test
mov
call
mov
bnd
adc
pop
add
mov
dec
mul
jecxz
push
aaa
ja
sbbb
inc
testl
or
pop
fdivl
or
push
adc
pop
xor
sbb
sub
dec
push
gs
xor
int
hlt
popf
mov
inc
inc
in
sahf
lahf
sbb
aam
sub
test
shll
jg
nop
cmpsl
push
fisubl
lea
mov
fstps
and
push
call
or
jne
fsubrs
fldl
jbe
movsl
dec
xchg
sbb
add
add
rolb
sub
out
jne
frstor
cli
call
mov
pusha
imul
outsb
jae
jo
outsl
adc
cmpl
inc
or
ja
adc
addr16
cs
inc
pop
or
push
movsl
mov
dec
mov
push
jb
rorl
dec
ss
faddl
sbb
mov
mov
push
loopne
dec
pusha
mov
mov
arpl
push
outsb
jae
inc
out
fmuls
out
add
movsl
in
pop
inc
icebp
mov
adc
add
mov
shlb
cmp
out
ret
xor
fnstsw
imul
mov
mov
cld
daa
cli
cmc
dec
mov
popf
stc
nop
jmp
mov
addr16
add
pop
cmp
pusha
adc
inc
jmp
arpl
cmp
fnstcw
cmp
pop
pop
jne
sti
adc
or
mov
mov
mov
fsubrl
insl
movb
movsb
lock
adc
push
dec
popa
adc
push
adc
dec
cmc
inc
and
jne
adc
shl
cmp
cmp
sar
jae
test
sbb
sub
clc
cmp
sub
insb
inc
sub
out
lods
add
cltd
enter
pop
or
mov
repnz
push
mov
pop
lret
out
in
and
roll
pop
mov
sbb
pop
mov
push
in
dec
mov
sub
mov
in
push
jecxz
sub
xor
mov
or
mov
cmpsb
lret
adc
jbe
icebp
xchg
dec
rclb
mov
add
lods
jae
pop
ljmp
pop
jne
cmp
mov
test
daa
jge
int
and
jne
sub
mov
push
test
inc
inc
mov
xchg
cmc
fs
sbb
dec
adc
push
mov
mov
das
jbe
cltd
inc
add
sahf
enter
cmp
pop
rcl
cmp
mov
or
movsl
or
jmp
cmp
or
adc
mov
add
jo
jl
fisubrs
inc
and
xchg
dec
cld
loop
clc
jno
in
mov
in
ret
push
icebp
and
daa
fsubr
insl
iret
mov
mov
shll
mov
ljmp
ss
dec
dec
and
mov
ss
inc
imul
rolb
test
cmpsl
jecxz
nop
push
lcall
shrb
pop
sbb
popf
push
out
jmp
out
lods
cmp
sub
andb
lea
xor
dec
mov
hlt
js
sbbb
mov
and
or
adc
or
cmpsl
adc
or
test
and
inc
inc
and
push
ret
es
aam
pop
divb
adc
ret
lods
mulb
aad
sbb
push
shr
mov
in
sbb
mov
dec
push
imul
fdivp
andb
out
or
sti
and
add
or
inc
scas
or
adc
ss
pop
lcall
call
repz
fmull
jno
cli
jns
add
mov
sub
std
inc
nop
and
out
movsb
pop
mov
mov
inc
dec
adc
lods
pop
sub
nop
fdivs
repnz
sub
xchg
enter
pop
pop
mov
jl
andb
or
mov
decb
cli
mov
and
cltd
fists
out
xor
adc
loop
popf
std
repnz
shrb
aaa
cmp
xchg
mov
inc
call
dec
jle
adc
js
repnz
mov
mov
mov
pop
cmpsl
mov
xchg
mov
mov
lcall
jns
iret
cmp
inc
adc
repz
rcrb
fsubrs
insb
pushf
push
addb
jmp
test
rcl
pop
add
mov
cmpsb
enter
push
cmp
filds
imul
loopne
cmp
repz
pop
fisttpl
sub
faddl
js
mov
cli
adc
gs
repnz
pushf
xchg
insl
hlt
cmpsl
aam
sub
push
mov
xor
add
inc
inc
add
cmp
sub
sub
rcrb
jnp
pop
aas
inc
mov
dec
mov
repnz
subb
in
inc
repz
enter
push
mov
pop
mov
pop
mov
push
sub
or
aas
push
add
sbb
add
subb
repnz
pop
pushf
mov
dec
mov
sub
dec
fisubrs
jmp
sbb
add
mov
push
pop
int
adc
cwtl
out
clc
mov
daa
lret
in
aaa
jecxz
sub
out
xchg
and
dec
cmp
out
loopne
or
and
jno
pop
and
mov
push
pop
outsl
clc
pop
or
push
add
xchg
and
sahf
fidivl
jno
pusha
inc
popa
mov
add
sahf
repnz
out
pop
add
leave
orl
or
pop
or
or
push
jge
mov
in
lods
jecxz
xor
js
enter
xchg
movb
insl
into
xchg
inc
inc
sahf
in
and
xchg
jmp
pushf
sub
sbb
sbbl
fwait
jmp
cmc
loope
std
sbb
or
or
mov
dec
adc
out
jle
adc
inc
sbb
jbe
in
mov
add
es
sub
xchg
int
popf
push
ljmp
add
pop
outsb
out
add
xchg
push
shll
sub
enter
pop
add
add
add
in
cmp
dec
cmp
lods
adc
mov
imul
les
push
out
mov
cmc
cwtl
sbb
std
lds
adc
and
pop
dec
add
cmc
mov
sti
or
sbb
cmp
rol
andb
and
or
fbstp
xor
lods
lret
pusha
mov
nop
in
xchg
mov
fsubr
subb
dec
fdivrl
jg
out
repnz
mov
jb
fstpl
adc
mov
dec
jb
les
int
push
push
sbb
fsubr
cli
xor
mov
lret
xchg
xor
sub
repz
mov
xchg
fstpl
idivl
jmp
lea
ljmp
jo
xchg
dec
scas
cmpl
add
or
adc
dec
pop
push
mov
mov
dec
cmpsb
test
xchg
mov
add
or
enter
bound
cli
add
orl
xor
outsb
add
dec
xchg
andl
add
repnz
inc
inc
cltd
inc
fldl
movsl
js
inc
sbb
pusha
or
sbb
andb
or
adc
pop
insb
lret
inc
fiaddl
in
or
mov
out
sbb
and
jg,pt
xor
push
or
sbb
and
sub
enter
fimull
add
and
out
push
sub
dec
cmp
fs
mov
lcall
adc
dec
call
jno
add
sub
dec
inc
subl
add
test
dec
mov
inc
iret
mov
cli
or
push
loope
enter
outsb
adc
or
xor
inc
mov
or
sbb
sbb
add
sub
jb
pushf
orl
mov
les
lea
rol
in
or
mov
jno
cltd
sub
or
add
pop
dec
outsb
cltd
cmp
jle
mov
inc
xor
stos
sbb
les
insb
add
in
sbb
or
xor
adc
and
xor
push
sub
or
sbb
outsb
jbe
mov
insb
push
cltd
mov
imul
repz
or
xor
mov
outsb
sub
inc
imul
add
adc
sub
aam
push
std
sahf
clc
or
mov
dec
mov
into
or
outsl
jle
pop
insl
imul
adc
push
xchg
test
pop
lea
push
adc
divb
cmpsl
sub
pop
pop
mov
stc
adc
cmp
inc
pop
push
mov
ss
ds
mov
call
xchg
orl
jmp
mov
fs
sub
inc
or
xchg
xchg
sbb
pop
and
aaa
mov
and
add
jae
inc
call
or
or
dec
or
jmp
addr16
push
dec
nop
ret
data16
cmp
shrl
enter
outsl
jmp
or
into
mov
lods
mov
mov
mov
add
push
or
add
mov
push
sar
dec
or
jl
or
pop
mov
sub
fmull
rclb
jge
sub
fs
std
stc
outsb
cwtl
mov
ja
icebp
xchg
push
xor
add
jae
or
sub
dec
inc
xchg
push
mov
add
cwtl
push
jae
in
dec
jmp
test
mov
pop
xchg
or
jmp
lods
test
adc
stos
pop
clc
dec
pop
loope
aaa
inc
out
inc
je
jmp
scas
dec
adc
adc
add
add
sub
out
test
adc
dec
xchg
outsb
lret
mov
adc
inc
ss
or
insl
or
fadds
xor
push
sbb
pushf
iret
mov
adc
jno
adc
lds
adc
dec
add
add
xor
cs
inc
test
push
push
jae
in
pop
and
shl
or
mulb
mov
call
jmp
mov
rolb
bound
jbe
push
sub
imul
xorb
ret
mov
and
jmp
jl
and
clc
pop
cmp
loop
in
movsb
jo
enter
sub
push
sbb
adc
loopne
andps
pop
test
dec
pop
jmp
cmc
xchg
dec
xchg
add
out
add
push
pop
xchg
or
xchg
adc
lahf
sbbb
xchg
in
gs
call
and
les
dec
nop
mov
mov
and
jno
cmp
divl
pop
or
xlat
popf
or
pop
xor
push
lock
or
test
fimuls
call
xor
push
or
mov
out
inc
dec
cmpsl
push
inc
jmp
dec
dec
or
loope
divb
xorl
in
jno
call
sbb
xchg
pushf
negb
aaa
mov
in
pop
lahf
add
push
sub
shl
addl
pop
cs
call
iret
or
sbb
enter
push
iret
or
dec
inc
int
or
adc
orb
aaa
test
mov
push
testl
sub
inc
adc
add
stos
mov
enter
pop
fbstp
mov
aam
fwait
test
das
sub
mov
outsb
xchg
mov
mov
adc
lods
out
je
pop
xor
push
mov
dec
sbb
jg
fsubrl
ljmp
xchg
mov
push
and
icebp
xor
rorb
jg
jne
add
clc
dec
pop
add
ret
dec
std
test
fcoms
mov
mov
and
leave
dec
cmpsl
cmpsb
outsb
pop
outsl
or
push
pop
push
cmp
push
xor
mov
add
and
jmp
or
fidivl
sub
inc
adc
xor
dec
lret
sbb
mov
adc
in
and
aas
adc
insb
xor
mov
dec
or
insl
pop
or
lahf
cmp
fimull
sbb
cmp
pop
hlt
jo
mov
movsb
lcall
xchg
push
sbb
lds
ljmp
leave
out
xchg
dec
scas
call
test
outsl
je
rorb
sub
adc
jae
scas
arpl
or
fisttpl
dec
jb
push
pop
sub
pop
jb
pop
lods
lea
mov
fimull
lea
inc
ret
inc
mov
pop
adc
and
cmpb
aam
cvtpi2ps
sub
mov
sub
sbb
cmp
cmp
or
roll
pushf
lods
mov
or
adc
pop
mov
mov
int3
sub
iret
inc
adc
rol
mov
xchg
mov
repnz
jns
cmc
push
jns
push
fidivrs
mov
sbb
pop
push
sub
jmp
int3
ss
data16
in
int
jo
popf
lret
outsb
lock
hlt
pop
lret
jb
scas
lret
stos
xchg
lcall
mov
insl
or
or
xchg
iret
orl
fistps
test
xor
push
popf
mov
fstpl
shrl
rcrl
dec
repnz
lods
ret
dec
cmp
add
push
adc
inc
mov
movsl
movsb
sub
icebp
push
xchg
inc
lods
add
mov
repnz
in
xchg
jne
dec
ficoml
mov
loopne
mov
les
pop
jbe
xor
cmp
or
repz
sub
movsl
lahf
and
mov
xchg
ja
scas
outsb
test
pop
jmp
es
into
icebp
outsb
out
pop
cmpsb
lds
cmp
mov
adc
call
pushf
mov
xlat
push
lods
push
test
mov
jno
xchg
adc
dec
test
pushf
dec
fdivrs
cmp
push
clc
stos
cwtl
jge
in
inc
add
jae
adc
xor
not
inc
push
dec
lret
xchg
xor
dec
in
mov
add
incb
sub
std
subl
jmp
push
dec
arpl
fistps
adc
repz
fidivrs
xor
popf
and
mov
dec
inc
xor
or
adc
stos
dec
inc
jae
cld
sbb
mov
enter
int
sbb
popf
xor
xor
add
sbb
outsl
ret
pop
dec
xchg
ret
loopne
sub
xor
sub
jno
aaa
test
xor
repz
jmp
mov
jbe
adc
sbbb
xlat
lods
andb
adcb
aad
es
push
mov
xorl
or
or
mov
and
stc
outsb
push
rorb
sub
push
cmpsl
sbb
xor
or
enter
shrl
xor
and
icebp
or
scas
in
sbb
and
arpl
cmp
adc
sub
sub
cli
xor
pop
lret
pop
lcall
sbb
xchg
jno
cmp
clc
lahf
mov
push
out
and
and
pop
and
pop
inc
xor
jnp
jmp
mov
popf
or
xor
lret
cs
leave
dec
sub
dec
arpl
push
mov
stc
pop
cltd
int3
sub
out
and
cmc
sub
addb
aam
and
or
pop
fwait
cs
adc
mov
mov
pop
mov
test
call
insl
mov
add
es
push
or
ja
sahf
mov
jno
and
mov
nop
int
clc
mov
inc
push
outsb
add
mov
inc
xor
push
and
sbb
bound
loope
fcompl
dec
or
xchg
adc
add
push
sub
cmp
xchg
stc
decb
popf
sbb
notl
std
mov
push
inc
push
jo
repnz
inc
repz
mov
jmp
push
ds
inc
pop
out
xchg
adc
pop
pop
ret
into
lcall
xchg
sbb
out
or
stc
mov
jno
in
push
adc
mov
pusha
enter
pop
lret
ret
test
push
mov
nop
push
jmp
inc
push
mov
sbb
lods
insb
mov
test
jns
in
or
idivb
push
icebp
pop
outsb
cmp
ret
fildl
cmpsl
fdivrp
ret
xchg
hlt
subb
cmpl
jo
xchg
jb
add
xchg
jb
jmp
push
or
push
mov
hlt
int3
adc
or
roll
iret
hlt
and
cmp
sbb
mov
test
jne
sub
pop
mov
adc
jns
rcll
cmp
lock
lret
bound
xchg
call
dec
xor
mov
pusha
call
lea
jae
not
call
inc
xchg
xor
mov
add
add
sbbb
mov
cwtl
lods
into
insb
dec
dec
adc
pusha
hlt
mov
je
mov
mov
in
add
out
test
cltd
add
xchg
xor
cltd
popf
jno
stc
pop
jo
inc
adcb
test
jmp
lea
je
clc
pushf
add
jmp
add
test
pushf
test
call
pushl
mov
pushl
pushl
ret
push
push
mov
lea
call
bt
bt
push
cmp
pushf
lea
jae
clc
cmp
pusha
lea
jae
push
mov
movb
test
cmp
pushf
pusha
push
mov
lea
ja
call
mov
bt
jmp
ror
add
rcr
bswap
rcr
movzbw
add
lea
stc
mov
pusha
bt
shr
jmp
movl
call
call
jmp
repnz
mov
push
popl
sahf
push
scas
cmpsb
adc
sbb
xchg
jmp
mov
jnp
sub
or
pop
scas
loopew
dec
gs
cld
nop
pop
xlat
xchg
pushf
add
inc
ds
xchg
dec
or
fcomip
cmpsb
ds
fidivs
loope
add
test
das
xor
rclb
outsb
mov
xchg
push
je
sub
cmpsb
jle
mov
pushf
lea
jne
push
pusha
call
call
cmp
xor
mov
ss
out
push
std
add
lea
cmc
lret
pop
xor
adc
repz
add
inc
cmp
dec
mov
dec
push
mov
jae
fcoml
test
sti
mov
adc
ljmp
and
push
test
stos
rorl
enter
arpl
mov
sub
movsb
sub
xor
pop
push
jmp
leave
mov
testl
cltd
add
loope
adc
loopne
cmp
inc
pop
imull
cli
aas
fcomip
cmp
aaa
arpl
ja
dec
pusha
xor
adc
xor
inc
push
leave
in
call
mov
ret
rorl
ss
lds
movsl
test
out
push
fnstenv
shrb
xor
or
pop
dec
popl
imul
aad
shll
lea
jbe
jmp
add
aaa
xor
mov
je
xchg
jl
in
je
test
repnz
popa
lret
mov
popf
jae
sub
xor
sub
rcr
ss
push
inc
adc
xchg
outsl
pusha
inc
xchg
ficoms
ror
je
sub
cwtl
sub
sub
add
fnstsw
add
call
lock
mov
dec
dec
cmpsl
mov
test
stc
pop
inc
xor
insb
aaa
inc
test
inc
pop
repz
test
jmp
shrd
call
dec
pusha
neg
or
mov
stc
pusha
pushf
cmpb
mov
mov
lea
jne
aam
sub
bsf
btr
ror
mov
pushf
test
call
jmp
lock
pusha
push
or
or
js
sbb
test
jecxz
adc
or
cmc
mov
push
and
inc
jb
nop
mov
aas
pop
cmp
cmp
sahf
jne
push
in
in
cmpsl
inc
dec
nop
in
xchg
pop
dec
mov
test
adc
inc
addr16
out
sub
xchg
das
dec
sti
das
es
jmp
mov
mov
cmp
adcl
cs
xchg
sub
inc
mov
loope
pop
mov
cs
push
mov
movb
pushl
pushf
pushl
ret
sar
bsf
mov
test
cmp
and
cmp
add
push
pusha
lea
jmp
movb
mov
push
pushf
pushf
pushl
ret
shl
mov
call
test
pusha
lea
je
bt
sub
cmp
clc
cmp
pushf
pushf
mov
lea
jmp
cmp
or
jmp
add
mov
stc
mov
bt
call
push
xchg
pushf
das
sbb
fldenv
sbb
cltd
mov
xor
and
loopne
imul
push
xchg
mov
into
pop
mov
scas
lea
clc
add
pop
fisttpl
fimull
cld
xchg
xchg
and
inc
sub
push
imul
imul
insl
lret
mov
lret
rclb
jmp
in
or
jae
cmp
pand
mov
ljmp
negl
pop
push
scas
int
dec
sub
lods
aad
lods
or
daa
jae
iret
mov
lret
pop
das
mov
pop
pop
repnz
rolb
in
rcll
pop
insb
fidivl
aas
sbb
dec
mov
jl
inc
enter
xchg
mov
hlt
in
test
call
cmp
jmp
mov
movb
movb
call
shl
cmc
sub
bswap
lea
pushf
mov
not
pusha
movzbw
mov
bswap
mov
mov
pushl
mov
lea
jae
not
pop
push
call
inc
sub
push
shrd
mov
sub
xadd
adc
shl
mov
sub
clc
rcr
mov
ja
mov
pushf
call
mov
mov
jmp
sbb
sub
cmp
stos
push
pop
sub
adc
ss
cltd
clc
sbb
add
cmp
leave
jb
gs
dec
jecxz
data16
fcompl
lret
sub
mov
pop
pop
jae
roll
outsl
mov
stos
xchg
push
cmp
push
jl
pop
push
and
ret
aas
fldcw
les
testl
stos
push
xchg
mov
mov
imul
into
cs
cmpsb
push
push
int
cmp
cmp
mov
mov
mov
scas
mov
push
cs
and
inc
xchg
sarb
pusha
mov
call
mov
and
or
push
ds
je
mov
aad
push
dec
dec
cmp
lock
pop
pushf
outsl
adc
jl
push
popf
push
mov
clc
cmc
sub
call
pushf
lea
jae
clc
push
cmp
cmp
push
call
call
pop
cmp
sbb
jo
lock
pop
pusha
sub
jecxz
dec
cmp
xor
fs
sbb
cs
dec
gs
ret
xlat
and
push
inc
andl
push
mov
das
jl
push
bswap
out
mov
mov
jge
push
mov
cmp
adc
int3
push
cmpsl
fisubrs
jno
movsb
pop
lods
mov
mov
jnp
loopne
daa
daa
bound
test
jl
or
fs
ja
call
pusha
jmp
shlb
sub
mov
mov
xchg
gs
xchg
sub
mov
push
stc
stc
adc
shr
nop
cmp
hlt
aas
mov
push
icebp
stos
ficomps
dec
fisubrl
popf
test
mov
and
sbb
dec
lods
mov
and
jb
repnz
popf
sub
mov
sbb
sub
or
and
stc
sub
stos
jne
popf
or
test
or
shrd
mov
cmp
add
call
push
lods
cmc
test
movb
clc
xor
call
pushf
not
add
cmc
mov
call
lea
call
push
movb
adc
call
pushf
lea
je
jmp
jmp
jmp
call
cmc
mov
bt
xchg
mov
shrd
mov
jmp
pushf
lea
jne
xadd
shl
mov
not
xor
jmp
test
test
jmp
xchg
and
mov
jp
sbb
or
mov
arpl
std
and
mov
and
lret
gs
push
jno
sub
xor
imul
mov
sub
sbb
sub
fmull
fidivrs
addr16
jl
and
dec
mov
arpl
out
mov
movsl
shlb
int3
mov
fs
ja
jmp
cmp
pusha
mov
push
push
lea
ja
pushf
clc
bt
imul
call
pushf
cmc
test
jmp
jmp
not
bswap
mov
clc
test
bt
cmpb
pushf
lea
jne
test
or
btr
shl
sub
bsf
aam
mov
and
shl
add
and
xor
clc
sar
mov
cmc
jmp
not
jmp
pushf
sub
jmp
aaa
stos
sbb
jns
sub
and
mov
push
pop
pop
shlw
fistl
pop
push
fwait
xchg
sbb
orl
mov
aas
push
loope
pop
push
or
mov
cmc
jnp
mov
sbb
mov
and
xchg
xor
pop
in
inc
lock
popf
mov
inc
js
shl
sbb
mov
out
mov
inc
lock
movsl
add
add
jmp
sbb
sub
mov
sbb
inc
push
lahf
xchg
mov
jbe
xor
int
fstps
fistpll
mov
xor
add
aaa
cmp
adc
fadds
insb
shl
inc
inc
or
ror
push
mov
sbb
adc
jl
dec
and
movsl
sahf
fcmovbe
fdivrs
ja
cmp
les
test
sarb
pushf
add
fwait
iret
mov
sub
mov
pop
gs
push
push
xrelease
xchg
mov
sbb
in
lret
roll
inc
or
or
fucomi
popa
sbb
mov
divl
adc
xchg
pop
or
mov
jb
test
jmp
imull
addl
divb
mov
lock
mov
or
lahf
mov
clc
jae
int
cltd
cmp
call
in
mov
std
test
mov
jo
nop
test
clc
loopne
mov
punpckhbw
es
push
push
cwtl
std
call
imul
push
lods
xchg
xor
push
sub
jecxz
popa
mov
sub
jo
cmp
sti
sub
sub
iret
add
mov
add
aaa
out
or
enter
jbe
into
pusha
or
lods
mov
dec
iret
outsb
mov
mov
mov
adc
add
mov
push
sarl
sub
xchg
mov
dec
or
jmp
pop
xchg
out
inc
stc
add
shl
dec
or
jl
lods
test
sbb
jne
cmp
daa
test
mov
pop
repnz
cld
int
or
pop
lock
or
dec
sarl
mov
xor
jp
sub
repnz
xchg
shll
sbb
aas
add
jbe
dec
jns
jl
add
dec
mov
pop
rol
test
fildl
out
push
add
xor
push
movsb
mov
mov
sub
or
xor
mov
mov
mov
repnz
popa
movsb
lret
out
push
or
outsb
mov
shlb
icebp
nop
inc
testb
jge
adc
repz
sub
adc
jmp
add
mov
xor
sbb
aaa
rcl
cmp
or
ret
push
sub
push
push
aad
lret
jb
dec
push
pop
fisttps
popa
sbb
int3
lods
pop
dec
stos
dec
mov
loop
sbb
mov
hlt
mov
psubusb
movsb
mov
dec
repnz
mov
cmpsb
mov
cmp
inc
insb
out
incl
test
sbb
test
pop
inc
push
jmp
lea
and
and
enter
fcoml
repnz
push
cltd
std
cmpsb
addl
in
ja
or
lds
nop
test
jecxz
outsb
lock
fidivs
mov
mov
je
add
or
sbb
add
mov
or
jmp
mov
mov
movsb
xchg
jl
test
dec
inc
sti
jo
pop
mov
lahf
aad
mov
xchg
mov
stc
mov
call
std
icebp
xor
or
hlt
jmp
popa
loop
cmp
jo
mov
es
xor
cmp
fidivrs
pop
xorb
push
cmp
mov
fisttps
fdivr
stos
and
sub
add
dec
sub
mov
or
mov
iret
add
test
fcomip
push
push
jbe
or
and
mov
cmp
sbb
js
jo
or
add
leave
and
stos
mov
mull
inc
mov
sbb
dec
ja
cmc
inc
shlb
iret
cmp
int
inc
lock
add
xchg
sbb
mov
add
aaa
xor
sub
inc
xor
jge
jbe
rcll
faddl
dec
leave
in
adc
movsl
xlat
mov
or
inc
mov
xchg
test
mov
push
mov
or
xor
test
call
sub
adc
test
push
or
mov
xchg
lock
lret
push
pop
jbe
adcl
and
cmp
scas
das
aas
cs
daa
mov
pop
and
call
inc
add
add
and
or
in
lahf
lds
add
out
rcrl
push
xchg
xor
jle
in
pop
xchg
mov
cmp
dec
fcompl
fsubs
ljmp
cltd
mov
jmp
sub
lret
jmp
sarb
lock
adc
dec
or
push
fldcw
loope
lret
inc
stc
sbb
mov
and
adc
jmp
push
push
push
inc
push
sbb
pop
mov
ret
mov
les
insl
divb
call
ret
sbb
int
call
jo
arpl
imul
mov
repnz
pop
fisubrs
cmp
push
or
jecxz
push
xchg
mov
push
sbb
aad
out
inc
jmp
sbbb
lea
adc
cli
test
cmp
in
sbbl
or
push
int3
and
les
mov
or
xor
mov
in
dec
sub
jo
enter
pusha
stc
jns
test
out
icebp
sub
add
mov
in
addr16
cli
or
xchg
mov
cld
jo
sbb
call
lret
pushf
into
and
mov
mull
lret
mov
iret
pop
add
shrb
stc
das
fucomi
dec
add
add
cmp
adc
or
sub
pop
pushf
cmp
ds
push
cmp
in
add
add
xchg
outsl
mov
mov
adc
xor
imul
lds
mov
and
add
stc
in
or
aaa
clc
iret
bnd
or
cs
lods
mov
call
mov
dec
out
or
sbb
lea
mov
jl
mov
cmp
data16
into
push
mov
mov
jne
dec
xchg
adc
and
jb
pop
mov
pxor
jp
push
sbb
inc
hlt
sahf
xor
push
nop
lods
sbb
cwtl
test
or
pop
mov
cwtl
push
sbb
xchg
push
lea
fwait
jmp
pop
inc
call
xor
or
mov
enter
jmp
mov
dec
fsubr
into
mov
and
push
add
or
sub
call
cmp
jmp
pop
adc
enter
sahf
popa
subl
pop
ficoml
call
lret
sarb
inc
jmp
dec
stc
sbb
push
leave
cs
mov
dec
mov
jnp
sub
hlt
jmp
es
lea
std
sub
jnp
movsb
loope
out
mov
je
mov
ret
sar
repz
insl
or
or
shll
pop
js
jo
js
enter
sbb
mov
sbb
ss
call
xchg
jecxz
std
xchg
filds
add
popf
ds
or
cmpl
into
mull
and
adc
sub
lock
xor
pop
mov
sub
dec
fimull
and
call
dec
xchg
sahf
push
sub
pop
inc
push
std
lods
mov
add
push
sbb
and
lcall
xchg
in
push
daa
adc
das
dec
inc
scas
sub
mov
pop
je
xchg
add
xor
jecxz
loopne
dec
mov
sub
shlb
sub
push
das
xchg
clc
ds
rorl
inc
cmp
subb
fildll
loopne
dec
push
adc
lret
inc
iret
mov
or
sub
cwtl
xor
add
add
and
pop
jae
roll
dec
push
sbb
dec
add
jno
rolb
xorl
cmp
push
jecxz
adc
mov
jp
ficompl
shl
xor
jmp
fs
les
outsb
ret
bnd
test
sub
mov
lret
mov
push
clc
sbb
loopne
dec
repnz
mov
addr16
repnz
mov
xor
mov
inc
sbbb
test
add
sub
or
jno
jp
out
sub
fdivrl
sbb
mov
negb
adc
leave
test
hlt
addb
add
lods
jno
gs
adc
loopne
jbe
testb
lret
push
pop
out
pop
sub
loope
insl
pop
hlt
fst
pop
and
pop
out
push
xor
lock
incl
xchg
int3
mov
jmp
rorb
sbb
out
test
sbb
testl
cwtl
mov
inc
push
mov
and
outsb
xor
iret
mov
orb
enter
push
push
mov
popa
mov
xor
and
add
sbb
sub
lret
cmpb
into
fcomps
cmpsl
sahf
and
mov
and
cli
push
bound
jae
or
nop
cmp
xchg
loopne
addb
icebp
notb
jge
in
push
fcoms
out
call
push
gs
dec
cltd
lret
mov
jge
xchg
lods
fldcw
mov
outsb
push
loop
dec
sbb
pop
clc
notl
cs
stc
addb
push
pop
sbb
dec
call
cmp
stc
test
sbb
shrb
or
pop
mov
jge
sbb
rorb
or
xor
in
nop
mov
and
mov
adc
loop
fistpl
pop
je
in
mov
lcall
icebp
cmpsb
and
cltd
int
clc
rolb
pop
mov
xchg
pushf
mov
cli
jo
ret
jo
pusha
jp
mov
jno
xlat
into
xor
loope
jecxz
mov
xchg
mov
aaa
pop
dec
push
outsb
addb
sti
call
mov
or
and
fwait
pop
mov
mov
aad
orb
subb
pop
adc
div
mov
dec
mov
pop
or
daa
push
stc
aas
cmp
sbb
dec
xchg
mov
jecxz
cmp
jo
push
sbbb
push
or
inc
stc
ljmp
std
pop
ja
mov
xor
call
adc
mov
xchg
mov
xor
clc
fsts
clc
mov
andb
mov
push
hlt
je
or
mov
cmc
push
insb
xchg
hlt
push
inc
enter
call
jmp
xchg
add
jno
xchg
lahf
cmc
mov
xor
jae
xor
xor
fs
bound
dec
xchg
nop
icebp
sbbl
sub
pop
loop
mov
cwtl
scas
xor
xor
into
adc
stc
mov
sub
jae
or
call
or
mov
icebp
and
das
lret
push
lods
in
inc
addr16
call
add
mov
repz
push
push
push
outsb
ret
int
filds
or
pushf
mov
sub
jmp
out
orl
jecxz
loopne
jo
push
add
xor
ret
flds
or
mov
lcall
xor
jae
cmp
cmp
lock
fnsave
or
pusha
in
jg
jns
cwtl
xor
mov
jmp
fstps
mov
or
and
mov
ss
mov
cmp
cli
push
lahf
sbb
je
mov
stc
cmp
dec
inc
xor
cmp
jmp
inc
xor
mov
lea
xor
inc
into
fstl
pop
repnz
xchg
mov
ficoms
mov
sbbb
mov
fisttpl
mov
pop
std
int
xchg
mov
idivb
sub
xchg
xchg
mov
imul
leave
dec
cli
fisttps
in
jmp
lods
jns
push
xor
std
or
dec
cwtl
dec
rorb
adc
mov
mov
jno
cli
or
and
push
cltd
inc
lea
mov
lods
add
pushf
jl
int3
cwtl
inc
subb
push
ds
jae
icebp
adc
daa
mov
in
pop
jmp
push
mov
sbb
aam
add
jmp
fisubl
jmp
and
jge
dec
fildl
jo
and
mov
fmuls
int
and
int3
call
mov
adc
sbb
mov
pop
jo
mov
pop
jno
aad
mov
jp
and
shl
add
push
hlt
das
fcomps
or
les
mov
cmc
sub
loop
lods
push
jle
mov
popf
dec
mov
mov
xchg
mov
jecxz
jo
test
test
popf
stos
cmp
xchg
movsb
scas
cs
mov
movsl
pop
orb
sbb
iret
mov
mov
icebp
pop
push
sub
sub
adc
jge
or
dec
push
icebp
insb
jne
push
or
das
cmove
push
add
test
jl
xchg
jae
sbb
pushf
and
mov
ja
pop
jns
imul
aaa
xchg
in
mov
mov
add
sahf
repnz
divb
rorb
xchg
or
sub
jmp
cmp
fwait
insb
enter
cmp
push
mov
test
sbb
dec
push
or
sahf
jae
lcall
pop
repnz
test
mov
mov
jp
inc
std
add
add
pop
xor
inc
adc
push
or
xor
cwtl
cmpsl
push
cld
ret
cmpsb
clc
test
xlat
or
sbb
sti
icebp
adc
pop
mov
loope
sbb
or
out
sub
or
ss
sbb
stc
pop
cmp
mov
testl
add
inc
jo
adc
dec
push
mov
push
push
or
xchg
or
mov
je
mov
sub
cmp
js
and
pop
sbb
in
enter
mov
mov
jb
add
mov
push
mov
test
mov
mov
and
lods
fs
lods
orb
jo
dec
xor
aam
xor
add
mov
in
mov
insb
cmp
cld
loope
inc
sbb
aam
and
or
lea
sub
sub
add
lcall
push
dec
lock
sbb
mov
xchg
sbb
sub
sbb
adc
inc
push
xor
mov
push
push
mov
hlt
add
lcall
push
inc
xchg
dec
sbb
xchg
in
inc
jo
add
mov
push
mov
xchg
mov
andl
push
fadds
test
xor
push
scas
andl
dec
pop
push
or
xor
pop
repz
cmc
outsl
mov
loopne
pushf
inc
les
cmpsl
and
add
xor
in
sub
adc
jo
jl
shlb
pop
mov
jl
mov
sub
lret
insb
dec
in
xor
int3
int3
pop
pop
cwtl
lock
dec
push
loope
sub
xorb
lods
add
call
inc
adcb
add
xor
add
mov
test
adc
adc
dec
pusha
sbb
pop
xchg
mov
push
push
outsb
testl
mov
jmp
pop
push
xchg
push
sub
pop
mov
popa
in
pop
fsubrl
pop
jmp
mov
pop
pop
pop
or
mov
cmp
add
insl
lea
lea
mov
pushf
and
fcomip
pop
push
jns
mov
popf
xchg
jno
or
rcr
in
icebp
stc
sbb
mov
inc
add
cmp
jmp
repz
cmp
dec
inc
mov
in
push
outsl
call
sbb
pop
or
fwait
out
imul
or
inc
mov
adc
cmp
push
testl
mov
aad
mov
dec
lea
cmp
fcomi
popa
test
sbb
ret
add
mov
jle
sub
loop
xchg
pop
repz
aaa
mov
insb
xor
sub
mov
mov
cmp
jmp
lods
or
call
pop
cmp
xchg
psllw
or
add
cmpsl
addl
dec
mov
mov
test
imul
inc
das
int
nop
mov
sub
sbb
mov
ret
fs
dec
add
dec
loope
iret
fwait
decb
inc
cs
lock
std
outsb
cmp
and
pop
sub
push
or
mov
leave
subb
loope
call
inc
loope
inc
jmp
jbe
push
add
pop
test
and
movsl
add
or
aam
pop
mov
pop
cltd
lcall
mov
divl
pop
or
fld1
xchg
repz
xchg
push
ffreep
mov
adc
add
mov
or
idivb
scas
adc
mov
les
in
stc
std
jb
mov
stos
test
je
outsb
push
dec
pop
xor
push
cmpsl
push
mov
mov
cmp
fs
out
es
test
aaa
not
adc
inc
cli
pop
pop
repz
mov
push
inc
inc
push
mov
cld
jmp
lcall
mov
inc
mov
loopne
cli
push
or
sub
bound
notl
fdivrl
mov
das
fisttpll
cld
inc
stos
xchg
in
cmp
cmp
xor
ja
fcomps
or
xor
adc
ss
subb
test
stc
or
jge
mov
sahf
mov
stos
add
outsb
sub
add
mov
lds
addr16
xor
or
call
jmp
and
popa
dec
sbb
std
and
push
clc
call
inc
xlat
and
lods
loope
loop
xchg
add
mov
jb
mov
jle
dec
sub
sbb
in
add
loope
sti
sbb
mov
cmp
shll
jns
add
aaa
mov
sub
pushf
mov
jnp
ficompl
call
ss
jae
popf
jge
pop
fdivl
cmp
mov
ljmp
ret
call
sbb
leave
jmp
ret
mov
out
xor
mov
lcall
jnp
dec
arpl
mov
orb
cmc
cld
loop
fwait
loopne
mov
ret
jmp
stos
loop
mov
mov
or
push
xor
push
lods
inc
jmp
test
test
jno
mov
sub
das
popf
lock
mov
rsqrtps
inc
jo
fdiv
ss
cmp
mov
or
stc
jmp
lret
scas
pop
cmpb
das
add
mov
lock
and
xlat
jae
xchg
pop
inc
call
sbb
bound
mov
lods
mov
aam
or
adc
pop
in
xor
sub
mov
push
hlt
fsubs
jecxz
xchg
movsl
sbb
or
push
mov
jno
int3
inc
mov
mov
fwait
add
cmp
or
in
jnp
imul
dec
popw
or
push
mov
push
or
call
maxps
loope
roll
ss
xchg
jo
dec
ljmp
insb
and
lret
fsubs
lods
pop
rcrl
loop
lods
mov
push
or
movsb
out
div
loopne
mov
push
es
sub
sbb
orw
js
dec
lods
mov
and
int3
mov
sbb
mov
mov
sbb
das
push
add
push
adc
nop
xchg
js
imul
jmp
gs
inc
popf
jb
and
adc
lock
int3
test
andl
inc
enter
push
shrd
xor
push
jmp
mov
rolb
xor
inc
hlt
xor
xchg
rorl
cmp
sbb
mov
push
xchg
push
in
fdivrl
cs
mov
mov
ret
ljmp
inc
or
loop
daa
dec
dec
adc
push
mov
sbb
cli
cli
repz
pop
or
mov
sbb
or
fsubrl
push
dec
push
jmp
dec
mov
lods
cs
cwtl
hlt
or
jmp
sti
mov
mov
roll
xchg
or
xchg
cltd
gs
enter
sbb
push
cmp
jno
call
add
out
hlt
je
push
int3
mov
movsb
es
pop
push
icebp
push
and
inc
sub
or
mov
mov
ret
ret
dec
push
or
pop
in
push
loop,pt
or
nop
pop
inc
mov
call
jmp
cmp
pop
cwtl
nop
cs
adc
cwtl
andb
cmp
call
pop
fmull
pop
inc
leave
jb
push
je
scas
popf
sbb
jns
sub
mov
test
add
addb
in
and
out
mov
pop
andl
xchg
cli
add
test
jae
mov
sbb
mov
hlt
and
or
insb
inc
push
ja
inc
inc
call
mov
dec
or
xchg
clc
cmp
add
xchg
pop
cmp
or
and
sub
loopne
mov
xchg
xchg
or
repz
scas
pushf
and
addl
and
dec
cli
lock
cmpsb
sub
movups
sbb
test
movsl
jl
pushf
scas
lock
into
int
loop
jo
push
inc
xchg
lock
ja
xor
cwtl
jo
dec
or
xlat
fimuls
pushf
lock
test
push
cli
loop
jo
mov
inc
repz
mov
pop
mov
pop
fidivrs
xor
repnz
arpl
lock
out
jns
xor
adc
je
enter
dec
adc
insb
push
pop
inc
jo
xchg
mulps
cli
loope
pop
jo
add
orl
dec
mov
cmpsl
adc
xchg
sub
repz
dec
lret
push
xchg
xchg
iret
insl
lock
adc
bound
in
dec
push
sbb
xor
add
orl
lock
jp
pop
lock
sub
pop
xor
mov
loop
jb
mov
and
mov
add
aaa
adc
push
inc
pop
mov
iret
fldcw
and
mov
mov
sub
add
push
dec
gs
push
daa
cmp
dec
dec
icebp
pop
int
xchg
sbb
xor
or
sti
bound
sahf
inc
test
sub
lock
inc
dec
xor
cmpsl
dec
cmp
add
sbb
adc
adc
jbe
lock
sbb
or
subb
iret
and
aas
cwtl
lds
orl
lock
cmc
add
sub
pop
jb
mov
push
sbb
jmp
divb
jmp
loopne
dec
xor
aaa
sbb
mov
lock
wrmsr
pop
push
ja
xor
out
sbb
push
xchg
hlt
mov
rcrl
or
pop
adc
icebp
or
in
out
mov
push
mov
pop
repnz
lock
pop
pmaddwd
push
jno
mov
add
push
sbb
push
xor
sub
mov
adc
call
ds
or
add
pop
or
ja
ljmp
cmp
std
jo
hlt
push
es
loope
jecxz
pop
insb
out
adc
out
add
lods
push
add
dec
out
lret
fisttps
pop
and
add
mov
inc
das
in
xor
mov
icebp
add
stos
scas
jmp
sub
iret
out
mov
addl
xor
add
pop
xchg
sbb
xorl
sarl
loop
jo
cmp
cmpsl
add
dec
aad
loop
mov
fstpt
repnz
or
add
loopne
pop
iret
xor
sbb
adc
dec
pop
dec
ret
lock
out
pop
inc
fcoml
add
movsl
xadd
test
bound
outsl
adc
popf
lret
inc
into
mov
leave
add
sub
dec
iret
and
add
ja
or
jo
mov
add
mov
aas
sti
insb
dec
cmp
add
jbe
rorl
pop
xchg
mov
mov
xchg
xor
or
ss
lock
sbb
or
or
and
dec
mov
cmp
inc
mov
scas
sbb
stos
sub
test
dec
daa
daa
loop
xor
lret
insl
cmp
iret
scas
pop
jo,pt
test
xchg
jb
inc
js
add
nop
adc
mov
iret
xchg
jmp
and
in
xor
fs
sbb
cwtl
add
push
dec
loop
and
sahf
add
mov
subl
popl
fwait
xchg
dec
xor
or
iret
test
add
adc
pop
push
mov
adc
mov
pop
and
mov
sub
iret
mov
int
mov
clc
shr
pop
sti
and
cmpsb
dec
push
ja
mov
jg
xor
jmp
xor
sqrtps
mov
pinsrw
push
imul
xchg
xor
jl
ja
pop
daa
in
punpckldq
push
addr16
push
sbb
push
int3
xor
in
icebp
pop
ret
call
push
jns
dec
outsb
adc
jns
dec
insl
jo
xor
mov
push
push
sub
insb
iret
push
por
pop
out
push
add
aad
xor
sbb
dec
pop
sub
or
jo
pop
jo
js
ret
clc
jp
pop
lock
xor
adc
inc
mov
pop
cmovno
pop
mull
aas
jno
and
cs
inc
les
stos
mov
cli
movl
ja
xchg
lea
ret
push
iret
dec
iret
sti
jmp
jo
out
aaa
sub
fdivl
in
jns
and
push
repz
jmp
fwait
sbb
jmp
push
lds
push
pop
cmp
inc
cmp
sub
ds
ret
lsl
mov
and
pop
gs
lcall
sub
mov
xadd
sub
subl
cwtl
or
loop
mov
test
pop
bound
adc
or
inc
push
jo
sbb
iret
xor
mov
or
sub
out
push
inc
xor
adc
in
sbb
jae
sbb
mov
push
test
rclb
leave
xchg
sub
or
push
lcall
movsl
stos
mov
jnp
leave
jno
push
add
imul
add
push
jp
jns
push
or
push
fildl
lock
into
sbb
aaa
mov
sarb
pop
dec
leave
mov
nop
jmp
movb
jns
push
into
div
sbb
inc
faddl
das
jb
sub
push
xchg
mov
scas
push
mov
cmc
jecxz
cmpsl
sbb
rdpmc
icebp
test
adc
stc
add
or
loop
out
dec
addr16
adc
pop
jp
outsl
addr16
xchg
push
xchg
sahf
nop
push
test
mov
clc
jmp
imul
mov
mov
mov
mov
add
cmc
mov
mov
sahf
iret
cld
mov
out
out
and
mov
decb
enter
cli
fimull
lret
stc
lods
or
stos
add
push
xor
or
sub
push
das
gs
stos
or
inc
mov
out
ss
xor
xor
out
dec
dec
and
nop
insl
pop
mov
sub
jne
and
mov
add
mov
xor
inc
cli
insl
add
dec
inc
add
repz
add
and
aas
sub
dec
cmp
jo
loope
sub
das
loop
cmp
mov
xor
repz
call
sub
cli
out
punpcklwd
mov
call
jmp
adc
cli
push
or
push
call
pop
mov
mov
inc
jp
pop
mov
sbbb
xorb
rorl
pop
inc
inc
pop
das
cwtl
pop
pop
pop
xchg
call
push
jecxz
xchg
add
lods
fnstcw
push
sub
sub
mov
sbb
lea
add
mov
inc
in
xchg
das
je
inc
or
jl
add
aas
mov
inc
or
out
das
mov
push
mov
lret
mov
je
movsb
loope
loopne
les
lret
icebp
sub
cmp
jnp
pop
imul
add
dec
add
or
cmpsb
pop
nop
repnz
adc
jno
jmp
xor
enter
adc
iret
mov
out
fsts
shr
jecxz
nop
cli
test
jno
xchg
movsb
lds
std
jmp
sbb
addr16
add
inc
pushf
adc
mov
repnz
push
jno
pop
mov
jne
dec
sbbb
sahf
js
inc
pop
test
imul
pop
shr
popa
or
jmp
stos
pushf
cld
pusha
sbb
jne
lcall
push
fwait
lret
mov
test
adc
call
xchg
mov
incb
pop
fdivrs
test
pop
sbb
js
int3
or
adc
push
mov
shl
mov
ss
addb
leave
mov
rclb
js
dec
mov
mov
outsl
pop
sbb
fiadds
mov
jmp
ret
cmpsl
dec
rcrl
fiaddl
lcall
test
jmp
pusha
mov
and
jb
mov
push
push
mov
sarb
mov
push
mov
cwtl
js
mov
pop
out
xor
push
ror
std
cmpsb
or
shrb
test
or
sti
jns
push
cmp
bound
dec
mov
xor
xor
jne
push
push
dec
out
aaa
sub
insb
or
inc
xor
std
push
dec
roll
xor
push
repz
cltd
rolb
insb
loop
inc
add
mov
xchg
test
inc
push
push
sub
sbb
subb
fsubl
xchg
int3
mov
out
adc
aaa
int
mov
stos
das
jmp
sbb
loop
cmp
push
ret
add
lds
or
je
popa
xor
add
sarb
lahf
in
xor
lret
dec
mov
mov
fadds
aas
mov
mov
adc
add
mov
fs
add
mov
add
inc
aad
jb
insb
call
lahf
mov
xlat
stos
movsl
mov
subb
xrelease
mov
mov
push
inc
fs
inc
daa
dec
pop
insb
sub
sbb
dec
lahf
insb
sbb
and
cmp
scas
hlt
inc
mov
int
fcomps
push
popf
inc
cld
sub
fld1
push
dec
xor
adc
rolb
imul
mov
imull
pop
xlat
dec
icebp
loopne
mov
sbb
push
jge
xor
shll
clc
jb
pop
inc
add
les
inc
mov
pop
xor
scas
sbb
or
fistpll
dec
mov
mov
mov
add
jmp
int
arpl
cmp
clc
roll
stc
pop
mov
xor
mov
jge
adc
cmp
pop
ljmp
pop
movsl
push
cmpsb
or
cmp
jmp
test
repnz
dec
cwtl
cmp
add
jbe
lahf
test
pop
pop
shr
sub
mov
dec
dec
pop
rcl
aas
shlb
xorl
mov
or
cld
movsb
or
rol
cwtl
pop
in
daa
rcr
mov
subb
repz
roll
cld
icebp
lret
cmp
mov
push
in
jp
pop
mov
add
push
or
pop
loopne
add
jge
mov
in
outsb
insl
pushf
or
xor
add
or
pop
mov
scas
je
sbbl
in
pop
call
lea
fwait
pop
lea
outsl
iret
mov
test
inc
repz
aam
dec
jae
inc
lods
and
dec
sub
mov
push
in
cs
ret
lcall
dec
jbe
cmp
inc
lret
sub
push
pop
fisubrs
inc
mov
push
or
sub
stc
les
insb
xor
bound
xor
shrb
sbb
mov
jg
dec
and
xchg
add
nop
sbb
push
call
imul
xchg
mov
jg
mov
ja
lods
adc
mov
add
aas
fimuls
inc
das
adc
neg
inc
adc
sub
mov
sub
jmp
repz
sbb
test
push
sbbl
xor
mov
out
adc
xchg
dec
or
clc
dec
or
in
mov
mov
push
pop
andb
dec
dec
nop
repnz
ror
movsl
sub
inc
loopne
scas
mov
mov
shr
pop
stc
mov
inc
mov
mov
mov
fldl
inc
ljmp
inc
punpckhbw
or
ljmp
or
dec
jbe
lock
add
push
insl
in
sbb
push
fisttpll
mov
int3
add
jo
mov
jecxz
sub
xchg
add
mov
mov
dec
adc
and
cmp
hlt
mov
jb
inc
repz
lcall
pushf
xor
mov
mov
xorb
fcomps
push
leave
stc
or
mov
repnz
cmc
xchg
call
loop
sbb
popa
dec
xor
dec
stos
test
pop
movl
pop
cmpsb
adc
nop
mov
nop
test
insl
and
insb
es
or
pop
jl
iret
icebp
lahf
dec
or
push
sub
push
or
outsl
sub
loopne
nop
add
dec
shrb
mov
cmp
or
or
iret
add
push
nop
pop
jne
pushf
inc
shr
push
stc
adc
push
pop
lds
adc
dec
lret
and
popf
ljmp
ret
sbb
jmp
leave
cmpsb
or
cmp
sarl
inc
push
jp
pop
loopne
inc
push
xor
call
fwait
mov
aam
cltd
sbb
rolb
outsl
call
sbb
inc
dec
mov
cs
jno
add
insb
es
and
ljmp
adc
mov
add
cld
pop
lcall
and
test
adc
cmp
jmp
xchg
dec
insb
jmp
sahf
outsb
sub
cmp
xchg
lock
jmp
push
xor
cld
and
inc
rolb
xlat
jle
xchg
pop
cwtl
mov
cmp
cwtl
mov
enter
or
mov
push
pop
or
dec
jmp
xchg
inc
out
pop
adc
sti
push
lock
adc
int3
cmp
jne
cmp
or
sub
jmp
lcall
add
adc
mov
mov
sahf
pop
pop
jmp
outsb
inc
cltd
mov
lahf
cmpsb
ss
push
add
inc
lods
xor
test
xorl
push
js
and
xlat
fadds
push
xor
pop
xor
xor
call
ljmp
jno
jmp
repz
mov
mov
imul
pop
jo
sub
push
rol
test
add
mov
pop
test
sbb
insl
or
lea
movsl
sbb
push
mov
and
bswap
or
jecxz
adc
mov
pop
lock
pop
xchg
jl
test
dec
mov
cmp
insl
sub
mov
push
push
push
and
jo
xor
add
test
or
leave
add
cmp
insl
xchg
out
movsb
cmpsl
cmpl
rclb
mov
jmp
push
test
mov
sbb
ss
xorb
or
popa
add
outsl
mov
in
or
pushf
mov
and
xor
add
orl
ret
push
cs
pop
mov
adc
not
sub
xor
push
fiadds
test
push
imul
xor
add
ret
xchg
dec
call
lahf
cmp
jmp
loopne
mov
rorl
sub
je
lods
lds
mov
orl
adc
ret
or
mov
jmp
in
push
orb
arpl
pop
pop
mov
lea
test
adc
sbb
or
push
and
jle
pop
jo
mov
sti
adc
insl
xchg
inc
repnz
dec
or
cmp
jnp
mov
xchg
or
call
and
movsl
mov
stc
call
pushw
cmp
daa
movsl
repz
jp
cmp
mov
cmp
xorw
int3
inc
cmp
lock
and
rcrl
jmp
add
xor
rclb
or
ret
dec
dec
pop
add
mov
or
or
adc
or
pop
pop
xorl
in
or
das
xor
xchg
adc
inc
out
sti
sbb
inc
mulb
add
mov
lret
sub
filds
into
inc
mov
push
mov
call
imul
fidivl
fistpl
mov
repnz
cmp
pop
stos
push
jo
push
or
sbb
shlb
inc
sub
push
or
cli
push
icebp
sar
call
push
adc
mov
dec
inc
xchg
xchg
rorl
enter
mov
mov
and
xchg
pop
out
or
repnz
addr16
ja
aaa
and
xor
loop
push
das
jl
jmp
mov
je
jb
push
mov
pop
lea
es
xor
or
shlb
push
test
mov
stos
bound
jb
call
fists
xor
jb
jno
icebp
inc
jmp
pop
xor
xlat
and
or
fmuls
xchg
sahf
icebp
fwait
cmp
fists
mov
mov
sub
add
jb
lods
and
dec
and
repnz
mov
nop
fimuls
in
mov
adc
or
dec
cmp
leave
mov
jne
pusha
cmp
in
add
xchg
leave
fildll
mov
data16
inc
mov
pop
xlat
add
sbb
jge
repz
pop
int
push
pop
add
jnp
jl
pop
jbe
shll
enter
lcall
jmp
mov
ret
jmp
adc
inc
mov
and
nop
mov
cmp
or
jns
mov
out
insb
jle
pop
mov
fmull
dec
leave
mov
push
lea
pop
inc
and
inc
or
mov
call
test
mov
push
dec
jecxz
mov
mov
dec
dec
dec
stc
push
shrl
mov
and
jmp
mov
sub
dec
add
or
les
cmp
push
mov
mov
mov
sahf
mov
ret
das
push
jge
add
or
adc
cmp
dec
mov
lock
and
imul
sbb
mov
ret
inc
lret
ror
test
inc
inc
mov
dec
or
mov
fs
xchg
aas
cmp
hlt
arpl
cmc
bound
push
cmp
push
push
andb
push
movsb
arpl
jp
shl
jno
mov
mov
fisttpll
mov
sbb
daa
sbb
or
out
arpl
cmc
out
xchg
sbb
outsl
into
mov
mov
rcrl
test
push
lods
push
stc
or
adc
add
inc
mov
sbb
sbbl
cmpsl
and
mov
mov
push
push
or
sbb
cmc
sub
inc
cltd
sbb
pop
aad
dec
or
mov
add
sarb
mov
loop
leave
test
movsb
mov
xchg
daa
pushf
inc
mov
mov
mov
push
lods
ja
jno
pop
add
mov
mov
ja
repnz
in
pop
add
pusha
enter
and
sub
sub
jne
jge
stos
adc
ja
or
lods
jne
mov
dec
mov
cmpsb
leave
add
push
sbb
push
fwait
shl
push
mov
imul
mov
lds
mov
call
xchg
push
pop
xor
popf
rorb
mov
ret
das
cmp
aad
push
jb,pn
inc
lea
or
ret
jo
mov
dec
int3
jae
js
sbb
inc
js
xor
sub
push
push
sub
cmp
adc
cmpsb
inc
or
lock
xchg
repnz
rcrl
into
repnz
bound
inc
sub
movsl
or
fsubl
add
add
js
xchg
in
xor
push
stos
pop
fxch
or
dec
aad
jge
push
es
ret
or
jne
insb
sub
das
add
push
sahf
inc
sbb
push
fmull
adc
mov
sarb
sub
push
cld
inc
dec
and
xchg
xchg
cltd
cmp
xor
loope
cmp
loopne
cmp
cmpsb
mov
stc
fdivr
add
and
jecxz
stos
mov
ljmp
push
cmp
mov
jmp
repnz
cmpsl
add
add
fbstp
setae
inc
pop
jle
and
and
shlb
or
sahf
hlt
mov
mov
sbb
or
stos
jge
push
sub
add
das
sbb
nop
call
enter
sub
aad
jecxz
ss
sti
jb,pn
rorl
repnz
jle
pop
xor
pop
lahf
jno
out
or
or
pop
sbb
jns
mov
jg
cmp
sbb
mov
out
hlt
jae
sbb
ja
ret
mov
adcl
insb
push
or
out
push
or
lock
jmp
mov
xor
iret
adc
dec
mov
jb
mov
or
imul
cmp
call
jo
dec
sbb
ljmp
sti
leave
xchg
mov
sub
pop
adcb
xchg
das
sub
dec
inc
add
fmull
in
lock
jno
clc
dec
repz
mov
or
stc
pop
lea
mov
adc
jmp
mov
stc
add
addl
clc
mov
sbb
aas
pop
jmp
int3
pop
sahf
add
orb
mov
or
and
cmp
jnp
pop
xchg
int
push
adc
test
adc
or
mov
pop
mov
inc
jmp
push
pusha
dec
fmuls
jnp
popf
lods
into
and
repz
bound
xchg
or
out
add
push
xor
add
fucomi
je
sarl
jno
ljmp
arpl
sbb
mov
inc
sbbb
jo
xchg
lret
mov
or
int
scas
add
mov
cld
or
dec
shll
or
sub
cmp
repnz
and
roll
xorl
jb
xchg
or
lock
loopne
inc
dec
push
mov
call
dec
push
push
test
add
sbb
bndldx
dec
jg
or
jl
icebp
sub
cmp
scas
push
movl
mov
mov
cmpsb
xor
dec
fsubrl
pusha
testb
cmp
jle
imul
repz
movsl
push
push
sbb
ss
in
cmp
jae
stc
jbe
sbb
adc
sbb
or
or
test
cmc
jne
push
jb
imul
sbb
mov
test
in
xchg
fs
dec
je
push
and
ljmp
and
test
loope
dec
outsb
add
cmpsl
sub
daa
mov
movsb
arpl
outsb
out
or
xchg
insl
mov
bound
mov
mov
pop
mull
adc
add
xchg
add
pop
pushf
inc
mov
test
fwait
pop
mov
ret
outsl
jmp
orb
adc
movsb
jo
mov
push
ret
mov
xchg
xor
icebp
fnstsw
rolb
incl
xorl
movsl
xor
call
mov
mov
or
lea
lods
loopne
sbb
shlb
sbb
dec
mov
sti
dec
lods
jmp
movsl
pusha
and
push
push
lds
imul
or
pop
hlt
and
sub
lea
add
enter
bnd
stc
rep
lods
and
mov
cwtl
mov
mov
cmp
jmp
mov
mov
sahf
pop
xchg
push
sub
sub
inc
xchg
cmp
das
dec
enter
add
pop
xchg
push
fucom
iret
mov
fistpl
push
mov
mov
mov
jp
fisttpl
or
dec
jo
push
jge
cld
insl
xor
lock
pop
outsb
xor
jns
inc
add
pop
imul
or
push
add
mov
cwtl
fidivl
jg
xchg
mov
xchg
popf
pop
in
sti
or
lods
testb
xor
adc
mov
fsubr
das
xchg
std
fs
dec
pop
lahf
push
jnp
repnz
pop
fnsave
push
movsb
jo
pop
pop
xchg
mov
mov
and
das
into
call
or
into
scas
dec
xlat
xchg
push
int3
inc
sbbb
or
fcompl
call
and
fists
lea
mov
xlat
cmpsl
scas
in
inc
data16
or
mov
test
orb
mov
inc
mov
nop
sbbb
lds
loop
adc
sbb
in
insl
mov
aad
cmp
mov
lods
or
pushf
roll
sub
pop
inc
cwtl
xchg
inc
push
lods
pop
sbb
mov
inc
test
jmp
mov
ja
push
leave
mov
xchg
sbb
je
xchg
add
mov
pop
es
xor
stos
push
jp
fwait
pop
add
inc
push
int
or
cwtl
xor
and
jbe
jo
in
jecxz
popf
adc
test
xchg
xor
or
stc
or
lahf
dec
shrb
bound
mov
xchg
mov
lahf
std
pop
jecxz
jp
and
ficoml
iret
test
test
xor
mov
fcmovne
jno
popa
pop
push
insb
outsb
roll
mov
xchg
loopne
add
or
mov
movsb
dec
loop
popa
add
push
imul
sub
aam
push
sarl
dec
or
sub
sub
lock
dec
in
jge
push
cmp
int3
movsb
or
or
cmp
movsb
outsb
cmpsl
daa
xchg
lods
inc
lods
loope
push
push
mov
add
dec
mov
adcl
push
std
repz
sub
sub
mov
adc
inc
xchg
das
or
mov
mov
push
into
adc
push
out
mov
mov
lods
or
dec
xchg
jmp
or
shl
jl
inc
loopne
mov
xor
xchg
mov
or
or
adc
popf
mov
inc
and
mov
push
xchg
dec
inc
clc
call
xchg
les
into
xchg
or
icebp
mov
or
mov
dec
xor
push
push
pop
ljmp
das
jmp
fabs
insl
mov
test
call
addb
cmpsb
push
mov
xchg
clc
or
aas
jo
adc
les
out
cwtl
and
or
inc
adc
loopne
pop
cwtl
mov
in
fcomps
aam
cmp
jae
mov
add
pop
mov
cs
mov
mov
mov
inc
sub
popf
repnz
mov
icebp
xor
ljmp
movsb
sbb
mov
into
aas
inc
or
push
sbb
call
push
enter
daa
jg
dec
fdivs
jno
stos
pop
jno
adc
or
nop
mov
sub
pop
lea
inc
jb
add
shrb
imul
push
out
cmp
data16
cwtl
data16
pop
and
mov
js
insb
lcall
mov
pop
insl
pop
xchg
pushf
inc
fs
jb
mov
ja
push
movsl
aaa
push
sub
iret
cmp
ljmp
hlt
pop
stc
inc
push
xor
repz
scas
jmp
subb
add
cmp
mov
add
push
push
mov
inc
jne
outsb
rcll
push
jge
mov
sbb
loop
inc
xchg
or
push
sbb
push
stos
cli
sbb
stos
js
jns
push
addr16
cmpb
and
sbb
add
mov
insl
dec
lcall
into
mov
push
dec
push
test
ret
add
add
ss
sbb
cmc
in
test
clc
mov
jp
or
adc
dec
add
and
es
sahf
sbb
mov
sbb
jmp
mov
pop
xchg
and
loope
pop
or
jbe
punpckhbw
sub
inc
call
dec
daa
fyl2x
dec
sahf
and
inc
leave
mov
xor
mov
lret
sbb
scas
adcl
rorl
jecxz
out
xchg
repnz
mov
cmp
sub
mov
divl
dec
pop
aam
jno
push
subb
or
sbb
mov
orb
lods
lret
dec
ljmp
dec
add
dec
adc
or
pusha
call
jmp
adcb
arpl
mov
jo
fiadds
sarb
in
sub
push
test
push
filds
in
push
push
adcb
je
add
push
lds
fdivl
adc
mov
mov
jns
mov
addr16
sbb
mov
insb
shrl
inc
arpl
call
fwait
mov
lods
in
ds
push
fcmovne
int
call
cwtl
std
lea
rorl
push
js
sub
loopne
push
test
aad
inc
push
pop
and
xor
testb
or
adcb
fwait
sbb
clc
fmuls
mov
fcmovnb
nop
cld
cmp
jmp
push
loop
ja
jl
mov
jo
mov
xlat
cmp
mov
fisttpl
mov
repnz
push
loope
cltd
xor
push
sarl
cli
sub
mov
push
jb
int
aaa
imul
dec
cmp
movsb
xor
leave
leave
rorb
dec
and
inc
int
mov
push
stc
cmp
and
lret
mov
mov
mov
ss
call
adc
mov
mov
pop
pop
cs
es
jmp
call
addb
lds
adcb
or
push
mov
xchg
adc
icebp
dec
mov
mov
in
mov
loopne
mov
lods
std
int3
pop
mov
dec
jg
enter
or
sbb
inc
mov
mov
loope
inc
xchg
sti
push
xor
xchg
fidivrs
xor
add
dec
pushf
test
hlt
data16
add
lods
pop
movsl
mov
in
fsubrs
repnz
jmp
mov
ds
hlt
loopne
ljmp
push
push
dec
mov
mov
andl
bound
jl
adcl
xchg
sahf
xor
mov
bound
xchg
orl
repnz
aad
mov
mov
push
imul
fsubr
stc
je
lock
cmp
pop
pusha
mov
pop
mov
push
sub
push
call
test
mov
xchg
push
or
jno
in
into
pop
add
sbb
cmp
cmp
xor
jmp
cltd
sub
lock
inc
leave
pop
ss
xchg
fidivrs
lahf
outsl
mov
icebp
out
cltd
ljmp
or
push
inc
rorl
ret
adc
lods
mov
inc
pushf
xchg
mov
cld
pop
cmpsl
mov
es
jle
xor
sbb
cmc
add
popf
pop
aaa
repz
pop
push
or
into
rclb
mov
addb
mov
cli
push
pop
mov
orl
add
call
cmp
cmp
data16
push
lret
sub
es
sub
scas
adc
or
test
cmc
lahf
jae
and
orb
or
nop
mov
lods
inc
sbb
adc
icebp
mov
sub
jbe
daa
call
sarb
adc
imul
enter
inc
and
xchg
nop
xchg
add
pop
scas
fwait
jge
lds
test
add
add
sbb
lods
inc
inc
das
mov
outsb
fucomip
pusha
jg
mov
cmp
repnz
jmp
xchg
rclb
dec
add
push
add
xchg
pop
adc
push
cwtl
xlat
fmuls
mov
fcoms
xor
mov
jo
mov
or
out
call
clc
arpl
stos
cmp
outsb
sahf
cmp
sbb
rolb
pop
sbb
pop
or
add
dec
dec
mov
dec
push
or
cltd
pop
icebp
mov
daa
repnz
push
dec
int3
mov
das
sbbl
adc
cmp
jno
fimuls
or
sub
inc
lcall
imul
jae
dec
or
div
add
pop
cltd
movsb
out
or
dec
fmulp
test
mov
mov
pushf
adc
push
and
sbb
je
nop
lcall
inc
mov
jo
xor
sub
xchg
jno
fwait
mov
sti
loopne
mull
inc
fimuls
xor
mov
into
dec
leave
xchg
xchg
pop
into
jo
push
xor
sarl
addb
cwtl
sub
cmp
xor
pop
mov
push
mov
inc
adc
jmp
jl
nop
jno
clc
mov
mov
insb
dec
inc
pop
sub
or
cltd
jb
lea
pop
scas
repnz
xlat
std
dec
in
xchg
pop
adc
imul
imul
leave
jae
sub
pop
into
mov
ret
out
jns
rcll
cs
aad
mov
jno
fmull
sahf
insb
lahf
push
dec
mov
andb
shlb
test
sbb
rcrb
dec
mov
dec
ret
xchg
adc
icebp
or
xor
add
int
inc
call
mov
jne
sbb
push
call
je
mov
add
xlat
int3
xchg
adc
xchg
cmp
jno
push
pusha
test
adc
or
popl
add
sbb
xor
mov
inc
bound
lahf
jb
lods
jb
fcmovnu
cmp
or
imul
xchg
stos
mov
scas
push
push
xchg
add
jne
mov
jnp
das
mov
int3
sbbb
adc
adc
js
lea
arpl
pop
call
mov
stos
xorb
pop
sbb
jle
daa
pop
fistl
cmp
mov
aaa
pusha
rep
or
jmp
sti
add
in
fnstenv
xlat
cmpsl
fidivs
in
push
mov
fcom
movsl
hlt
push
jle
and
lock
f2xm1
sbb
call
push
pop
pushf
imull
aas
mov
xchg
sub
xchg
ret
out
shlb
call
xchg
add
xchg
push
movsb
ljmp
fisubl
nop
ss
lds
mov
aaa
add
add
outsl
inc
test
cwtl
mov
jo
cmp
insl
or
arpl
lock
js
or
sbb
icebp
mov
mov
les
insb
jp
mov
inc
add
add
dec
mov
enter
mov
addl
in
push
add
mov
fsts
popf
icebp
nop
mov
jbe
or
push
sbb
sub
repnz
arpl
lahf
sub
add
jp
aas
adcl
mov
gs
dec
stc
mov
mov
dec
sub
mov
testl
pop
outsb
or
jmp
lds
sub
add
jle
ret
adc
push
pop
sub
cmpsl
or
fildl
push
mov
and
jp
inc
hlt
dec
lret
or
mov
cmpl
jo
mov
lret
or
jmp
pop
pop
xchg
xor
xchg
jne
cmpsl
pop
repz
jg
push
adc
pop
pusha
sbb
loop
loopne
fdivr
or
pop
push
icebp
outsb
mov
add
int
xorb
pop
adc
loopne
ss
lret
push
test
loope
call
pop
jmp
xor
xor
xchg
pop
pop
das
add
jb
push
sub
int3
mov
repz
sbb
aam
mov
movsl
cld
inc
or
jl
or
or
xor
cmp
cli
out
fnstenv
sub
xor
mov
hlt
push
mov
imul
xchg
shlb
enter
mov
sbb
and
jl,pt
or
or
dec
jmp
push
sbb
call
sbb
test
int
scas
loopne
das
sub
push
sub
js
push
jmp
add
inc
dec
mov
add
or
aas
sti
xor
jns
inc
sbb
mov
ja
and
cli
imul
add
sub
jno
dec
pop
jae
xchg
ret
je
cmpsl
adc
sub
je
movsl
pop
sub
cld
xchg
push
mov
pop
nop
cmp
jg
adc
and
inc
mov
lcall
push
in
xchg
stc
pop
ret
and
lret
sarl
scas
pop
push
mov
scas
ljmp
andl
test
lahf
call
and
inc
xchg
loope
sub
jb
sub
or
mov
pop
pushf
popf
pop
lret
sbb
xor
aas
push
repnz
mov
inc
inc
test
cmp
add
clc
js
cmpsb
add
xor
jnp
cltd
cwtl
repnz
jp
adc
or
nop
mov
pop
adc
xchg
test
fisubrl
mov
pop
jo
pop
mov
and
inc
cld
jno
sbb
push
sbb
das
test
jmp
enter
insl
stos
xchg
dec
ret
and
subb
lds
mov
mov
cmpps
push
icebp
or
aam
cmp
mov
sbb
mov
mov
mov
nop
out
jmp
mov
jmp
inc
mov
cli
push
popa
rorl
insb
pop
shll
rclb
es
in
inc
icebp
jp
rcrb
stos
out
jno
xchg
repnz
lods
mov
ret
inc
mov
mov
mov
mov
sub
stos
mov
loop
cs
pop
adc
lock
lds
test
cmpsl
ficoml
jo
mov
cmp
roll
setb
pop
or
loope
fwait
inc
jecxz
dec
sbb
and
or
mov
lcall
dec
xlat
insl
mov
inc
inc
jo
mov
sub
pop
cmp
test
xor
sar
or
xor
adc
mov
add
fs
inc
arpl
ret
sbb
push
and
adc
mov
icebp
sbbl
psubsw
and
mov
fidivrs
xchg
push
rcrb
xor
jo
and
call
bnd
mov
stc
dec
inc
sub
clc
out
lds
shrl
sub
mov
push
mov
sub
jl
add
cmp
mov
inc
jecxz
push
aaa
or
push
mov
imul
mov
mov
mov
ss
sbb
outsb
jmp
dec
and
fisttps
ja
jae
add
mov
hlt
sub
inc
pop
lret
lret
fcmove
decl
inc
push
testl
inc
add
mov
dec
sbb
adc
pop
push
sub
pop
xchg
mov
and
ret
mov
mov
inc
repz
xchg
jo
xorb
push
pop
mov
push
inc
call
adc
push
mov
or
cwtl
cmpsb
add
minps
sbb
rolb
xchg
xchg
push
xchg
jo
push
into
adc
test
push
sbb
mov
sbb
jns
loop
pusha
out
push
mov
pop
lret
xchg
outsb
push
mov
dec
push
xchg
fbstp
fsts
push
call
std
inc
sbb
jl
push
push
aaa
ret
pop
mov
loop
xchg
mov
sbb
sub
sarl
arpl
mov
or
ret
in
in
sahf
cld
or
push
int3
cmpsl
icebp
popf
nop
cltd
mov
into
add
and
pop
and
scas
rorb
push
jo
dec
pop
repz
outsb
je
mov
and
loopne
and
mov
mov
in
insl
leave
inc
les
pop
sbb
repnz
inc
or
and
orb
push
cld
pop
add
call
and
mov
and
adc
pop
sbb
lahf
lcall
mov
mov
das
loope
mov
inc
cld
push
and
sbb
sub
pop
decb
xor
daa
sub
fs
jae
sbb
push
push
push
outsb
cmpb
jle
pop
dec
jne
sti
into
jl
mov
or
add
push
mov
repz
ja
out
lcall
mov
fucom
cld
pop
mov
xchg
cmp
mov
imul
or
cmp
dec
repz
movsl
loope
push
inc
mov
call
pop
std
xchg
cmp
mov
mov
or
pop
inc
dec
or
lock
mov
insl
repnz
cmp
mov
rcll
pop
pop
push
jle
add
xor
mov
push
cld
xchg
or
sbb
or
test
std
xchg
xchg
sub
cmp
out
xchg
sub
xchg
dec
cld
push
xor
mov
lds
rorl
jnp
dec
scas
pusha
in
lock
mov
nop
outsb
repz
popf
mov
inc
inc
pop
filds
cmpsl
sbbl
pop
mov
lods
inc
inc
cmpsl
and
insb
and
or
add
push
cld
mov
cmc
mov
int3
cli
mov
jbe
mov
repnz
filds
fisubrs
lahf
cmpsl
sbb
dec
adc
fucomp
popf
dec
jb
mov
movsl
push
adc
push
int3
xor
mov
les
xchg
xchg
lods
cs
jmp
jp
push
or
test
cmp
xor
cmc
adc
fdivrl
add
or
es
int3
mov
dec
cli
insl
add
fnstenv
cmp
movsb
lcall
test
push
mov
bound
outsl
hlt
data16
mov
lods
addb
and
dec
pop
call
pop
and
adc
mov
sbb
xor
push
xchg
mov
pop
jae
pop
int
push
mov
jle
dec
xchg
jecxz
leave
or
clc
add
out
or
or
in
adc
sbb
shl
push
data16
leave
test
sti
xor
ret
mov
push
cmpb
push
shrl
mov
pop
cmp
pusha
imul
dec
add
daa
test
sbb
jo
jmp
sbb
cmp
out
push
jmp
std
add
fcoml
sbb
lahf
lret
stos
dec
adc
movsl
sub
jecxz
arpl
mov
pop
add
xor
push
mov
or
call
dec
cld
orb
dec
int3
test
jno
xchg
fcoms
push
push
xchg
mov
push
iret
add
add
insl
mov
subb
or
dec
cltd
addb
jnp
mov
xor
pop
jmp
ljmp
scas
sub
jb
test
repnz
decl
enter
loop
xor
add
push
and
add
mov
sbb
xchg
in
aaa
jo
lahf
popf
outsb
mov
jnp
push
movsb
xchg
push
movsb
fiadds
or
push
or
movsl
sbb
test
stc
icebp
lret
push
fcoms
loop
jmp
dec
cs
loope
add
ret
jbe
sbb
popa
add
sbb
ficoml
mov
push
loope
pop
xchg
out
vphsubwd
xchg
or
fidivrs
pop
adc
adc
push
test
negb
pop
fs
or
pop
int
pop
mov
pop
stc
lea
call
fcom
insb
sbb
call
xchg
pushf
push
bnd
xor
stos
xchg
or
cmc
and
out
xchg
stc
scas
add
jle
dec
icebp
fstp
call
push
mov
scas
sbb
xchg
mov
sub
push
mov
sarb
lods
mov
push
or
sbb
mov
pop
mov
dec
scas
aas
add
popf
dec
inc
nop
inc
xor
shll
and
call
inc
jmp
or
lret
into
jmp
es
pop
mov
imul
imul
sahf
or
and
jno
std
fiaddl
xchg
push
jb
cmpsb
xor
aad
mov
xorl
xor
rclb
shl
sti
push
sub
and
xchg
sti
sbb
mov
imul
add
outsl
pop
mov
inc
clc
clc
sbb
jle
call
scas
fadds
lock
call
scas
int3
or
repnz
sar
int3
shl
call
aaa
mov
cld
push
call
test
lret
pop
das
push
mov
or
andb
pop
pop
mov
sub
testl
mov
jmp
int3
xor
lods
sbb
xchg
ja
pop
push
or
test
lret
push
pop
jmp
dec
push
jae
sbb
mov
ds
sub
stos
fisubs
imul
jnp
push
cmc
add
cmp
aam
push
mov
push
in
pop
jo
es
ds
push
mov
and
das
aam
xor
pop
push
out
test
adc
lea
call
sub
jmp
cltd
dec
repz
dec
mov
push
cmpsl
icebp
or
add
or
stos
das
insb
adc
pop
cwtl
sub
pop
cmc
call
test
add
and
shlb
push
push
sub
cmc
fsub
dec
mov
xchg
sbb
sar
jecxz
loope
or
inc
popf
add
xchg
les
xor
stc
aam
xchg
rorl
cmpb
rcl
cmp
mov
int
icebp
xchg
mov
and
jae
out
in
icebp
xchg
push
cmp
inc
pop
pop
mov
mov
jmp
mov
pushf
pushf
aad
xchg
xlat
icebp
add
push
cltd
notb
mov
dec
addr16
xor
mov
adc
inc
jecxz
cs
movsl
shrl
cmp
sbb
pop
inc
sbbb
pop
xchg
xor
data16
pop
xchg
int3
pop
int
pop
ret
mov
xor
call
leave
test
sbb
cmpsb
add
xor
or
lret
push
pop
push
or
orb
and
loope
mov
pop
add
cmp
pop
stos
sub
andb
or
and
mov
lea
pushf
jb
addl
add
aam
push
daa
or
xchg
push
jbe
pop
sub
mov
sbb
call
pop
mov
push
push
movsl
jmp
mov
in
insl
call
mov
mov
mov
and
mov
stos
or
aas
loop
test
inc
cmc
sbb
or
das
xchg
push
push
mov
pop
ret
pop
stos
xorb
mov
lods
int
and
mov
test
or
adc
notb
push
mov
add
cmp
movsb
cmp
adcl
mov
lock
repz
and
jl
mov
xchg
movsb
mov
leave
jnp
pushf
outsb
inc
mov
sti
xorb
xchg
mov
fsubp
xor
daa
mov
sbb
and
cmp
push
jno
leave
dec
sbb
mov
xor
dec
xchg
or
or
cmp
ja
push
and
fistpll
hlt
inc
fimuls
imul
add
adc
or
sbb
fidivrs
and
and
add
sbb
data16
fsubrp
sbb
or
mov
call
pop
call
pop
mov
mov
jge
pop
pop
inc
pop
jmp
xor
inc
stos
dec
sub
neg
pop
mov
jb
push
jmp
or
testb
adc
inc
stos
push
push
daa
pop
xchg
and
call
mov
add
or
es
mov
sbb
out
dec
mov
xlat
mov
pop
cwtl
sbb
mov
fnstsw
jmp
pop
test
leave
mov
gs
dec
dec
jnp
mov
nop
or
icebp
cmp
push
cmp
mov
sub
jmp
mov
jmp
dec
das
xor
fsts
mov
cmc
aaa
adc
jne,pn
or
negw
jmp
xchg
bound
pushf
mov
repnz
and
popa
pop
lcall
xchg
scas
add
faddl
pop
or
bnd
push
pop
add
int
dec
inc
es
dec
lahf
jae
ret
or
sbb
cmp
loop
inc
mov
sub
or
dec
mov
pop
inc
mov
cmpl
stos
push
and
aas
jmp
sahf
and
repz
leave
testb
shlb
lret
or
or
mov
negb
jmp
fimuls
xor
cwtl
mov
loop
fs
mov
outsb
lcall
call
sub
repz
add
or
xchg
pop
mov
loope
xor
or
mov
nop
lret
jmp
or
out
lcall
arpl
jmp
daa
inc
and
mov
or
psubw
ret
add
push
mov
decl
jnp
and
rcr
arpl
mov
loopne
mov
jb
cs
sub
pop
aam
es
mov
mov
jns
test
mov
xor
add
jecxz
jb
rolb
mov
sbb
pop
movsb
mov
es
add
lahf
sub
mov
adc
movsl
std
pop
je
lds
lods
fs
mov
push
dec
xchg
sbb
and
push
add
xchg
push
insb
pop
lcall
inc
jno
aas
call
dec
and
mov
je
or
xchg
and
sbb
xchg
test
in
or
inc
test
stos
push
out
mov
xor
pop
in
mov
cltd
xchg
and
sbb
js
and
inc
push
shrb
xor
xchg
fcomip
pop
mov
enter
sti
add
jnp
pusha
out
bound
dec
sub
push
jg
ficomps
pop
jmp
lahf
pop
hlt
add
lods
jbe
xor
push
and
mov
mov
mov
std
sbb
add
adc
xchg
cld
or
sbb
roll
cmpsl
inc
xor
stc
lcall
out
addb
xor
sbb
sub
cmpsl
test
ja
or
or
in
orb
or
xlat
repnz
call
sbb
mov
fldcw
loopne
pop
insl
sub
inc
out
mov
addr16
mov
sub
mov
das
pop
mov
mov
insb
mov
xor
and
and
adc
mulb
stc
pop
mov
int3
js
fistpl
fldcw
ret
retw
or
jmp
add
pop
bound
das
push
out
xchg
adc
call
jnp
mov
push
mov
push
mov
or
inc
iret
cmc
std
push
adc
inc
push
sysret
enter
mov
mov
imul
inc
pop
fimuls
push
je
dec
or
jnp
sub
add
add
cmp
xor
popf
clc
push
pop
testb
push
lahf
push
rolb
subb
push
mov
and
sub
push
dec
lea
loopne
sbbb
fwait
pop
jmp
mov
push
push
push
push
mov
add
xlat
xor
icebp
loop
sub
fcompl
les
sbb
jg
jne
mov
call
mov
dec
cmp
out
out
data16
pop
scas
push
fistps
int
xor
push
push
cmp
sbb
mov
orb
pop
subb
scas
dec
js
jp
sub
mov
orl
mov
push
pcmpgtd
xchg
add
dec
jle
psubsw
addr16
xor
scas
xor
push
pop
lods
or
enter
fiadds
mov
ret
inc
push
bound
jno
xchg
imul
or
cmp
push
xchg
data16
nop
or
shlb
xchg
dec
test
or
jp
mov
sub
pop
xor
das
daa
sahf
loop
or
je
sub
pusha
or
fnstenv
pop
sbb
popf
mov
push
sarl
xor
or
jp
mov
jb
inc
daa
mov
sub
mov
sbb
imul
xchg
mov
adc
daa
adcb
and
push
cmp
xchg
sub
fildl
imul
mov
sub
xor
jb
and
jle
pop
cmp
sbb
mov
jmp
cmpb
cmp
cli
pop
mov
and
cmc
fnstenv
push
xchg
outsb
mov
and
push
or
ss
scas
sub
repz
mov
cmp
mov
ret
pop
push
or
mov
sub
xchg
movsl
test
jle
jl
out
mov
dec
sbb
push
or
jl
jbe
inc
jo
mov
xor
xor
sahf
addb
aaa
jle
xlat
or
jmp
imul
nop
enter
xchg
icebp
clc
add
or
stos
fcomps
dec
jae
xor
mov
bound
mov
fldl
jo
in
adc
sbb
pop
lret
cmp
loop
inc
mov
or
xor
or
lahf
pop
loope
sub
fcompl
ret
nop
push
or
rcr
lds
dec
addl
rorl
pop
call
xchg
in
cmp
xchg
add
lret
int3
mov
xor
aad
push
jne
andb
int
xchg
mov
pusha
dec
sbb
xor
nop
div
jb
pop
pushf
movsb
jo
mov
sahf
pop
and
pusha
div
fwait
add
cli
movsb
push
mov
dec
roll
push
adc
mov
pop
fwait
scas
pusha
sub
mov
mov
xlat
in
ret
xchg
lods
sbb
mov
mov
loopne
paddb
jae
or
or
ss
xor
adc
call
push
inc
dec
or
imul
call
aaa
xchg
cmp
test
call
mov
and
jae
cwtl
xchg
and
ja
push
or
loop
push
scas
aas
sbb
xor
and
mov
or
add
xchg
lds
call
loop
or
sbb
xor
call
jmp
test
or
shlb
das
inc
fwait
sub
rcrl
mov
lahf
push
sbb
cwtl
mov
cltd
add
ficoml
cmp
add
xchg
lds
dec
and
test
mov
cmp
dec
xchg
push
je
js
jno
xor
shr
imul
push
dec
ret
jo
mov
mov
inc
scas
push
mov
xor
call
lea
ljmp
loop
sarl
mov
or
mov
sbb
adc
mov
into
mov
pop
lea
mov
cmp
rclb
imul
mov
mov
dec
rcl
cmc
push
add
pusha
push
lcall
outsl
jo
lea
and
or
jmp
lahf
subb
push
push
into
fiadds
addr16
test
or
adc
mov
subb
ret
je
fstps
test
mov
cmpl
dec
repnz
and
lods
mov
mov
push
dec
cmp
push
xlat
aad
mov
sub
xor
push
jnp
sub
test
lods
les
push
test
std
cli
shrl
jg
jecxz
mov
fdivl
pop
add
push
testl
mov
mov
jbe
sub
dec
cmp
cs
mov
dec
outsb
testl
inc
jo
jmp
fcoms
or
add
inc
jg
sbb
cwtl
cmp
cld
cwtl
inc
inc
xchg
push
mov
cmc
cmp
out
mov
fwait
es
ja
ds
pop
sti
sahf
mov
dec
add
rorl
inc
and
jle
popa
dec
pop
mov
mov
add
or
aas
es
or
pop
cmc
xor
pushf
scas
out
mov
dec
call
inc
sbb
or
jp
push
add
std
call
jp
test
jmp
mov
inc
pop
cltd
iret
loopne
aam
lock
ret
mov
mov
or
popa
pop
das
mov
adc
mov
loop
or
push
or
inc
add
out
lahf
mov
dec
adc
dec
and
lods
sbb
inc
dec
push
sub
push
mov
pop
jmp
iret
inc
add
sub
js
xchg
sbb
or
adc
pop
cmpsl
sbb
cmp
xchg
xchg
icebp
jnp
pop
mov
mov
out
and
loop
dec
inc
sub
inc
ss
or
enter
adc
sbb
pop
pop
jle
mov
pop
jmp
mov
xchg
jo
fwait
cmp
or
fsubrl
jmp
out
int
push
lret
mov
jmp
out
data16
int
mov
sbb
or
add
and
xor
jno
in
pop
dec
dec
or
xchg
arpl
repnz
repz
jmp
aas
shrb
push
dec
mov
je
pop
mov
mov
imul
sub
test
mov
leave
inc
and
pop
call
xchg
out
cmp
js
enter
sbbb
pushf
sub
leave
dec
std
or
xor
jg
adc
subb
push
sbb
or
mov
arpl
pop
xor
icebp
mov
xchg
cmp
mov
inc
inc
mov
or
cwtl
lods
add
enter
js
cmp
or
xchg
popf
jmp
mov
daa
or
stos
mov
push
pop
push
loopne
scas
in
imul
and
shl
or
cwtl
mov
mov
lahf
clc
inc
or
xor
cmp
xor
add
dec
sbb
ret
movsl
inc
pop
cmpsb
jo
inc
pop
jmp
pop
outsl
fld
scas
pop
repnz
inc
pop
jp
mov
xchg
inc
mov
int
jne
sbb
jl
in
fcmovne
fadds
test
hlt
cwtl
scas
sub
add
add
jecxz
pop
sub
arpl
push
mov
mov
lea
adc
mov
inc
gs
andb
mov
sbb
pop
ret
lods
jo
notl
pop
test
inc
lahf
ret
adc
sub
decb
icebp
pop
leave
mov
mov
out
es
ja
sbb
imul
scas
lock
and
push
mov
outsb
out
add
jecxz
or
in
dec
inc
sbb
std
lods
dec
gs
or
mov
push
pop
rolb
daa
clc
int3
or
cmp
and
sub
imul
xchg
mov
mov
stos
dec
or
pop
test
fbld
mov
adc
sub
out
ret
pop
mov
mov
inc
pop
dec
std
push
dec
or
push
nop
jmp
call
jo
jo
push
inc
jno
cs
dec
test
cwtl
divb
xor
jmp
imul
repz
lods
lds
mov
inc
sarb
xor
push
push
mov
aad
test
mov
popa
cmpsb
sbb
sar
incl
xorb
jg
mov
test
dec
jbe
or
outsb
lock
imul
enter
mov
jecxz
jle
shlb
mov
add
in
cwtl
xchg
mov
imul
repnz
dec
orb
xchg
adc
xchg
pop
addb
test
inc
test
xchg
pop
push
int3
inc
or
add
pusha
test
add
xchg
adc
popf
jle
mov
add
mov
xchg
mov
xor
lods
jns
pusha
fisubs
xchg
lahf
adc
xchg
clc
push
sbb
lret
ljmp
push
cmpsl
xor
pop
test
mov
sarb
xchg
or
push
das
andb
add
push
cmp
push
fld
dec
movsb
fistps
std
mov
mov
pop
loop
pop
push
out
pop
or
stos
mov
scas
adc
outsl
fcmovb
push
loope
or
sbb
enter
inc
cltd
or
in
or
subl
and
push
imul
popa
dec
xlat
push
je
pop
sarb
push
loop
mov
insb
pop
bts
test
mov
cmp
mov
mov
dec
or
pop
add
and
push
call
jle
add
fcmovnb
mov
mov
repnz
mov
outsl
xchg
loopne
inc
push
addb
adc
enter
dec
xor
aaa
test
dec
add
cmp
inc
data16
xchg
mov
gs
fistpll
cmp
xor
push
repnz
popa
pop
sub
inc
imull
inc
mov
xor
jmp
negb
cmpsb
xlat
mov
fistl
loope
add
sub
jbe
jb
adc
mov
xchg
mov
mov
pusha
cmp
push
push
pop
push
sub
jo
mov
test
jmp
push
push
sbb
and
or
pop
jb
out
loopne
push
pop
mov
cltd
into
mov
sub
hlt
push
adcb
pop
leave
sub
sbb
lods
int3
mov
addr16
adc
pop
push
cmc
mov
adcl
jge
pushf
imul
and
lea
xor
mov
mov
ret
icebp
jmp
xor
dec
cwtl
push
push
iret
push
xor
aam
lock
imul
push
cltd
add
aaa
jno
mov
ljmp
leave
add
shl
mov
in
mov
and
pop
or
jnp
push
out
mov
in
dec
out
pop
push
push
jg
shlb
sbb
shll
jge
and
cmp
pop
cwtl
dec
dec
mov
fsubr
data16
sbb
adc
cmpb
int3
ficompl
jmp
les
jnp
and
je
push
mov
mov
adc
mov
stc
xor
je
or
cmp
push
pop
rorl
shl
iret
push
adc
mov
dec
xor
enter
movsb
mov
or
inc
lret
pop
adc
ss
jmp
fimuls
stc
in
jmp
movsb
jo
xor
push
or
shr
xlat
push
sbb
fisttpll
mov
push
lods
scas
cmp
call
aam
sahf
and
xor
and
sub
push
inc
adc
sbb
xchg
out
inc
repz
dec
es
mov
add
push
loop
add
aaa
jbe
add
or
xor
or
inc
sbb
rorl
and
mulb
fbstp
fs
popa
xchg
shrl
negl
dec
loop
int3
insb
enter
dec
cmp
movsb
fldl
mov
xor
clc
and
sbb
icebp
and
idivb
add
and
into
sub
or
dec
lea
mov
lret
push
in
shrl
das
push
sbb
add
loopne
pop
cmc
bound
add
xchg
mov
mov
leave
sbb
add
pop
mov
lds
jmp
fs
int
test
mov
xchg
dec
int
push
jge
jmp
jg
xchg
xchg
cmp
lods
mov
pop
das
push
mov
add
and
sbb
mov
sub
jno
imul
mov
sub
out
cld
test
add
insb
stos
icebp
sbb
das
out
lods
push
mov
aaa
xor
push
push
inc
mov
jmp
sbb
adc
mov
or
pop
jmp
fmuls
mov
dec
pop
or
fdivrs
cmp
and
mov
cltd
jne
lock
orl
pop
or
jnp
ss
test
xchg
jmp
mov
inc
or
pop
add
mov
mov
jmp
lcall
test
adc
movsb
and
or
or
dec
shll
cmpsl
mov
dec
pusha
jb
imul
imul
insl
lods
jb
jbe
or
pop
test
sub
xor
aam
es
pop
rorb
add
ret
pusha
jmp
xor
push
add
mov
push
pop
cmp
cmp
mov
xor
repnz
int3
in
push
mov
jnp
mov
pop
sti
xchg
push
popf
sub
scas
ljmp
push
inc
push
adc
or
orl
fdivs
cmpsb
mov
fnstcw
sub
rcrl
dec
inc
movsb
into
or
xchg
pop
xchg
imul
push
jae
mov
inc
jo
mov
jle
and
rcpps
sub
pusha
or
add
lock
or
pop
inc
mov
fcompl
js
dec
inc
push
imul
jae
xchg
iretw
pop
add
xlat
add
lods
or
or
push
adc
loope
pop
incb
dec
imulb
add
cmp
cltd
dec
cmpsb
xchg
xchg
ret
sbb
sbb
xor
xor
imul
dec
test
daa
and
fnstenv
add
rol
lods
popa
xor
mov
sub
roll
out
or
ljmp
sahf
inc
pop
mov
sbb
fisubl
shll
push
mov
jns
test
jbe
add
lcall
loope
mov
hlt
aam
lds
iret
idiv
call
pop
mov
xadd
loopne
push
ss
sub
jb
or
in
and
add
inc
or
or
or
test
jmp
test
jo
sub
push
mov
adc
mov
or
nop
stc
mov
mov
xrelease
les
int
jne
test
icebp
xchg
cmp
shll
pop
adc
mov
mov
inc
call
sbb
push
fs
push
and
or
loopne
test
stc
xchg
jp
int
push
aad
and
rcl
lahf
mov
test
cmp
mov
inc
xchg
lock
xchg
lahf
loope
pop
push
mov
push
xor
adcb
inc
pop
pop
mov
ret
jle
cld
into
adc
push
call
pop
lods
cmp
mov
adc
call
dec
or
inc
cmc
add
dec
xchg
dec
imul
cmc
test
pop
repnz
and
pop
sbb
xchg
mov
addb
mov
in
repnz
jg
dec
aam
jns
repz
or
jnp
in
lods
adcl
jns
das
lock
push
fs
dec
pop
lds
lret
inc
dec
xor
xor
inc
test
mov
inc
sub
push
mov
je
dec
or
data16
sbbb
mov
jbe
push
jnp
push
out
or
fbld
dec
mov
mov
flds
shlb
jp
shlb
js
mov
ljmp
inc
mov
daa
or
popa
lret
stc
or
mov
wbinvd
dec
xchg
je
sub
dec
add
mov
mov
mov
lods
lret
icebp
enter
xchg
push
cwtl
mov
pop
lret
mov
sbb
ja
mov
scas
or
pop
mov
push
cwtl
push
pop
sbb
pop
jmp
frstor
cmp
or
ficompl
sbb
insl
clc
rolb
std
sbb
sbb
frstor
out
xorl
sub
dec
imul
test
addr16
push
movsl
sub
pop
stc
mov
stc
cs
adc
push
push
call
xor
mov
jecxz
add
mov
test
addr16
repnz
dec
daa
jno
xchg
mov
push
cmp
das
mov
or
das
or
inc
scas
mov
icebp
shll
repz
lods
push
iret
or
pop
pop
jns
lock
test
mov
sarb
xchg
enter
xchg
jae
add
clc
jl
xor
mov
bnd
call
shll
sub
mov
test
pop
outsb
ret
jo
stos
jae
xchg
mov
mov
inc
pop
sbb
sub
add
dec
pop
insl
add
out
call
xchg
jmp
lds
jl
dec
xor
dec
lods
mov
jl
ficomps
ss
imul
mov
xor
ret
add
sarl
test
dec
push
call
jge
sub
pop
cli
add
sub
aad
dec
cmpb
mov
inc
and
enter
mov
push
mov
sbb
mov
adc
adcl
cmp
push
push
es
int
lods
pop
add
xor
fbld
jle
sbb
push
cltd
mull
je
or
xor
pop
nop
sbb
sar
lret
sub
int
test
mov
loopne
ss
adc
mov
lahf
mov
sub
xor
pop
faddl
or
cmp
adc
repnz
push
mov
jo
ja
pop
inc
inc
int
js
push
push
add
lods
inc
jl
imul
jno
push
jbe
loop
jns
cmp
xor
pop
jmp
lcall
dec
jb
js
inc
dec
into
out
lods
mov
call
clc
inc
pop
mov
mov
jge
inc
inc
pop
and
push
pop
or
rorb
sti
or
jmp
das
pop
jns
lock
ljmp
or
and
mov
push
testb
mov
inc
test
dec
lret
into
inc
roll
inc
test
or
sbb
lret
xor
mov
mov
sub
inc
push
or
in
dec
pop
xchg
or
cmpsb
mov
dec
cmp
xchg
dec
cmpsb
arpl
push
inc
icebp
push
adcb
sub
xchg
fmull
test
add
jne
xor
sbb
sbb
jle
popa
jge
mov
je
or
jecxz
movsb
mov
icebp
inc
call
cmpsb
mov
js
and
testb
orb
cmc
mov
adcl
sbb
add
mov
pop
and
test
jp
popf
xor
pop
and
call
or
dec
lock
jmp
ds
jl
or
cmpsb
stc
jae
mov
add
bnd
pop
pop
adc
movsl
mov
xor
push
lea
inc
mov
mov
xchg
dec
int
adc
clc
cmpsl
int3
out
mov
and
pusha
es
fsubr
jp
shr
clc
sub
or
jmp
mov
or
xor
jb
mov
faddl
push
shr
cmp
cmp
andl
xorb
ficomps
icebp
pop
push
xchg
call
stos
push
and
dec
mov
ret
movsl
ds
test
insb
repnz
mov
or
movsb
mov
jae
xlat
jg
push
mov
adc
jecxz
dec
jp
push
dec
add
jg
call
jae
add
or
jmp
mov
repnz
enter
dec
das
or
call
into
xor
pop
std
and
loopne
mov
adcl
or
jle
daa
inc
sbb
popf
inc
shrb
mov
test
mov
je
mov
addl
cmp
or
jmp
call
lods
sbb
mov
hlt
add
push
push
xchg
dec
xchg
xchg
mov
mov
loop
or
mov
icebp
sub
incb
aas
sbb
lea
sub
pop
pusha
leave
and
jle
jecxz
sub
fmuls
adc
ss
das
call
sahf
mov
jp
and
or
jno
cltd
addb
into
and
sbb
mov
fs
aam
sub
sti
testb
dec
jle
cmp
lock
call
test
dec
in
fwait
mov
pushf
pop
imul
icebp
push
mov
gs
add
inc
lahf
sub
mov
insl
mov
or
xor
mov
das
sahf
sbb
push
das
mov
adc
ljmp
out
xor
pop
lea
pop
jbe
int
repz
inc
mov
mov
in
addr16
pop
popf
fnstcw
iret
mov
lret
mov
push
cld
add
les
or
int3
lcall
jb
dec
ja
xlat
nop
shl
call
out
popf
add
fldt
pop
cmpsl
dec
scas
or
mov
pop
test
jno
adc
or
mov
dec
enter
inc
pop
dec
and
push
mov
or
aam
sbb
add
pop
jb
sti
sbb
and
jle
frstor
loop
mov
cmp
adc
shld
mov
jmp
pop
mov
mov
push
hlt
jmp
cwtl
imul
ret
in
loope
or
or
pop
fistpll
xor
call
inc
aad
mov
daa
or
in
pop
mov
mov
mov
dec
pop
pop
mov
je
cmpsb
fisttpl
in
mov
test
call
sbb
cmp
jo
hlt
push
imul
and
enter
jnp
push
nop
add
loopne
leave
loopne
repnz
fwait
lock
inc
test
loopne
inc
mov
ds
nop
cld
or
decb
sahf
mov
add
pop
bound
xor
mov
jb
or
pop
or
jge
ret
or
xchg
in
outsl
fistl
cli
mov
insb
roll
inc
pop
insb
sbb
pop
or
push
adc
mov
pop
cld
xor
imul
push
adc
cmpsl
pop
or
jmp
push
inc
xor
stc
xlat
psrlw
or
xchg
mov
cs
push
mov
fstps
call
icebp
pop
inc
pushf
out
jl
into
push
dec
or
adc
xchg
jg
nop
cli
add
sub
testb
pop
mov
add
nop
pop
push
jmp
push
add
mov
mov
sub
sti
sbb
shlb
jge
jg
jne
stc
ljmp
sub
jae
test
mov
fcomi
repnz
push
rorb
clc
dec
lods
push
test
icebp
loope
jmp
in
scas
dec
dec
or
test
lahf
int3
jmp
and
cmp
das
cmpb
mov
in
lea
pop
das
and
jle
xor
dec
adc
loop
lcall
jp
bnd
enter
sub
dec
daa
or
movsb
jns
jo
dec
cmpsb
hlt
icebp
jp
add
into
mov
push
std
xor
pop
subb
jle
jl
mov
inc
lcall
ss
fnstcw
adc
js
pop
adc
insb
in
call
push
xchg
sarl
mov
add
cld
imul
or
mov
gs
ret
je,pn
stc
jae
sbb
jmp
mov
xchg
out
call
pop
xchg
clc
adc
pop
pop
xchg
mov
rorl
inc
inc
xor
jae
add
mov
push
jle
imul
in
jge
out
sub
lods
into
push
ljmp
ret
movl
call
pop
jbe
scas
out
add
shr
repnz
inc
pushf
sub
call
ja
sbb
xchg
aaa
bsr
movsb
das
lods
mov
sub
sub
shl
add
inc
mov
xorl
mov
pop
cmp
outsl
xor
or
aas
or
mov
hlt
jb
pop
icebp
shlb
call
xchg
push
loope
fcom
xchg
push
lcall
enter
xchg
lods
mov
in
mov
jmp
clc
stos
fdivp
enter
push
subb
cli
jmp
stc
adc
popf
inc
mov
jmp
cmp
int
es
dec
repnz
bound
mov
cmp
subb
xor
jecxz
inc
or
lcall
xlat
inc
and
inc
in
push
fldenv
dec
add
call
mov
push
bound
cwtl
loopne
and
or
je
inc
push
sti
push
or
jbe
xlat
test
or
shll
sub
sahf
std
ucomiss
out
dec
fmuls
bound
cwtl
test
dec
das
movsl
aam
lods
imul
daa
xchg
jns
sub
popf
rdpmc
jmp
test
mov
mov
subb
sbb
mov
or
test
repz
dec
dec
or
mov
add
mov
ret
pushf
or
mov
sti
loop
push
push
int
in
add
in
cmp
ja
roll
adc
xorps
or
dec
mov
in
rclb
jns
inc
outsl
jecxz
out
mov
xchg
jmp
movsl
mov
loop
popa
mov
outsl
xor
pusha
adc
xchg
xchg
mov
xor
dec
insb
shlb
cmpb
xor
sbb
lahf
clc
call
sub
inc
or
btl
pop
insl
xor
bnd
repnz
push
fimuls
jmp
adc
popf
jecxz
xchg
xor
sub
mov
xchg
dec
movsl
mov
out
sbb
xorb
mov
jmp
sbb
dec
dec
mov
xchg
jmp
jmp
and
aas
xchg
call
inc
add
sarl
enter
inc
rorb
mov
sbb
decb
jle
sti
xchg
pop
mov
outsb
pop
mov
adc
lret
push
repz
outsb
hlt
jmp
jl
cmp
mov
rorl
jg
lea
jl
roll
mov
jg
push
xchg
sub
sbb
mov
pushf
dec
lods
xor
dec
cmp
add
xchg
call
and
add
cmp
mov
cwtl
xchg
adc
mov
repnz
adc
out
inc
lahf
push
xchg
xchg
ljmp
dec
cmp
pusha
jo
repnz
nop
mov
in
decb
mov
add
inc
add
or
js
cmpsb
and
test
inc
push
xor
out
out
aam
int
rclb
scas
add
add
xchg
inc
shrb
ds
cmp
sbb
js
mov
sub
out
arpl
xchg
lds
cmp
inc
pop
sbb
loopne
aam
xorl
and
lahf
adc
mov
cmp
dec
scas
popa
mov
sbb
jl
mov
xchg
jb
mov
daa
lahf
cwtl
push
lret
mov
dec
sbb
push
adcb
mov
pop
mov
and
sub
push
loope
aad
and
jmp
mov
fidivl
xlat
mov
punpckhbw
ret
pop
sub
adc
leave
adc
sub
jne
mov
mov
mov
cs
cmp
push
sti
les
cmpsl
pushf
jae
cmp
into
aam
out
popa
popf
addb
int
pop
call
or
fldl
lcall
mov
push
jp
cmp
in
xor
icebp
jmp
stos
pusha
pop
dec
testl
popf
fisttps
out
enter
mov
fucomip
push
sti
push
jl
push
add
or
dec
out
sub
cmp
scas
rol
mov
lds
inc
dec
xchg
pop
cmp
das
insl
or
xor
cmp
and
push
std
push
jbe
call
subl
cmpsl
addb
movsb
xchg
fcmovb
pushf
fwait
dec
pop
jecxz
or
push
pop
xchg
xor
mov
xchg
in
push
inc
mov
mov
cmp
cli
sbb
push
fyl2x
xor
mov
aaa
fmull
fcmove
add
pop
and
pop
adc
sti
mov
cmpsl
aad
push
or
fdivrp
jl
es
lcall
mov
rolb
sbb
xchg
pop
add
pushf
mov
rorl
movsl
pop
xor
add
pop
call
sbb
xchg
out
sub
cltd
fisubl
test
push
popf
mov
push
pop
leave
fcoml
sbbl
dec
ja
and
sahf
outsl
mov
cli
lahf
jo
pop
xor
add
hlt
in
rcrb
push
andl
or
xchg
out
cmpsl
xor
ds
pop
and
and
movsb
mov
stc
test
lea
fadds
test
mov
sub
shlb
dec
das
imul
or
dec
xor
jp
and
test
dec
xor
push
lods
pop
push
add
xchg
adc
cmp
pop
fwait
int3
xchg
mov
sbb
mov
leave
or
imul
mov
lea
ja
repnz
push
loopne
cmp
push
cs
mov
in
dec
shrb
cmp
push
std
jl
push
inc
aaa
lods
mov
dec
adc
mov
stos
enter
push
mov
jl
es
mov
or
fs
cwtl
inc
sub
mov
pop
inc
cmp
sbb
and
call
cmp
add
pop
inc
inc
adc
pop
push
mov
mov
out
jnp
insb
lea
push
cmc
into
jno
cltd
orb
adc
cpuid
pop
or
call
mov
dec
into
pop
mov
sub
idiv
cmpsb
xor
push
jp
cmc
pusha
js
pop
dec
mov
inc
sbb
call
mov
and
push
and
cmp
add
push
bound
cwtl
out
xchg
idivl
or
mov
jl
mov
pop
or
xor
mov
jne
mov
add
xchg
xchg
ss
jbe
jb
test
lret
add
mov
add
daa
push
or
dec
sbb
add
mov
lods
xchg
xchg
cmpsb
call
cmc
or
ret
sub
or
roll
lcall
dec
cltd
mov
mov
xor
fwait
mov
popw
je
cmp
daa
inc
nop
das
cmp
jne
pop
xor
jmp
cmp
outsb
pop
lahf
sub
and
and
or
cmp
testb
mov
or
cmp
cwtl
or
and
std
clc
loope
mov
or
and
pop
jmp
push
call
sbb
loope
insb
push
or
or
dec
int
jo
fmull
fidivrs
repnz
lret
loop
daa
pcmpgtd
xchg
aam
sub
in
call
xchg
das
in
in
xor
push
lret
push
and
sub
outsl
inc
sbb
lea
or
lods
cmp
mov
jns
sub
mov
lds
jmp
or
sbb
adc
rorl
jno
in
push
mov
push
add
or
and
sub
fcoml
push
adc
movsl
mov
push
sbb
and
insb
cwtl
xchg
outsb
push
sub
add
and
dec
mov
sbb
imul
pop
jmp
sub
mov
sbb
enter
inc
incl
imul
add
xchg
or
mov
std
cwtl
xor
jl
jb
pop
mov
mov
aaa
loope
jp
lea
sbb
jbe
stos
das
adc
mov
cmpb
sbb
xor
or
mov
out
sbb
out
or
mov
jb
pop
or
orw
jge
jno
cmc
jno
sub
mov
xor
les
mov
and
xchg
stos
bound
rclb
jbe
jae
pop
adc
push
push
les
push
push
lods
xor
or
out
call
pop
movsb
mov
cwtl
xor
mov
mov
push
adc
sub
out
mov
hlt
test
xchg
andb
sbb
mov
pop
xor
mov
cmp
incl
adc
in
adc
call
lds
ret
push
xor
push
sti
jno
dec
or
adc
imul
xchg
xchg
push
iret
in
push
push
out
push
mov
mov
xchg
add
xor
adc
jmp
mov
dec
nop
cmp
mov
pop
xlat
repnz
stos
scas
mov
in
jl
lods
xchg
dec
fld
lods
js
cs
inc
imull
jp
cmpsb
into
xorl
xchg
or
das
daa
sbbb
xor
ljmp
xchg
push
add
stos
in
jb
push
in
sti
jmp
pop
push
shr
ss
pop
mov
test
fimull
out
js
ud0
stos
push
adc
dec
mov
shrb
test
or
sbb
fimuls
in
je
xchg
fldenv
fsubl
push
ds
mov
outsb
adc
sbbl
fildl
mov
push
call
cmp
or
or
push
das
mov
jo
sbb
push
cvttps2pi
hlt
arpl
jo
testb
decb
or
sub
enter
pop
mov
fisubrs
or
xchg
lahf
xchg
repnz
pop
adc
in
push
std
dec
push
mov
sbb
xorl
repnz
movsl
sbb
xchg
mov
imul
inc
sub
adc
insb
and
mov
sbb
testl
incl
int
mov
mov
inc
mov
push
les
das
push
push
pusha
cmp
in
icebp
repnz
mov
fdivl
outsb
inc
das
xchg
pusha
pusha
mov
test
call
imul
push
push
mov
or
jo
mov
inc
xor
movaps
cld
xchg
outsb
sub
mov
sub
mov
fisttpll
xor
stos
icebp
andb
in
xchg
xchg
pushl
push
sub
add
daa
mov
sahf
push
lahf
icebp
fistpl
push
and
cwtl
scas
cltd
jno
iret
pop
rorb
push
jg
xor
fisttpll
mov
ret
push
fnstenv
lret
mov
cmp
test
repnz
and
push
test
sbb
push
popa
and
cwtl
aas
jae
stos
dec
dec
push
aas
cmp
in
push
mov
or
pop
fwait
mov
pop
cmp
cmp
cltd
dec
js
sub
mov
xor
test
or
inc
push
or
cmp
repnz
js
icebp
push
int3
xor
push
cs
adc
loop
dec
dec
loopne
repnz
repz
push
adc
inc
mov
lea
icebp
out
sti
pop
mov
mov
jg
jmp
xor
in
jno
adc
mov
xor
and
mov
mov
push
es
lcall
mov
pop
jne
shll
js
cmp
loop
mov
pushl
cwtl
cmp
loop
inc
stos
repz
jb
into
jno
lret
scas
inc
sti
fwait
xchg
out
push
pop
sub
cmp
sbb
xchg
andl
ds
adc
jp
sbb
pop
testl
dec
je
jmp
rorl
subb
popl
dec
dec
popa
int
addr16
dec
and
jp
add
adc
pusha
fmull
dec
dec
adc
out
icebp
lods
es
jo
or
mov
pop
scas
movsb
movsl
jnp
lods
repnz
push
xchg
jmp
push
pusha
in
cltd
test
mov
jae
cltd
mov
inc
je
scas
mov
and
cmc
std
mov
ffreep
or
imul
xor
dec
jecxz
pop
loope
sub
les
inc
and
mov
mov
xchg
js
pop
jmp
xchg
addl
jecxz
or
jmp
mov
or
stos
cmp
push
clc
sbb
mov
sub
scas
in
dec
mov
fninit
test
or
mov
pushf
gs
int3
push
pop
pop
jmp
aaa
fcomip
test
stos
xchg
xor
gs
xchg
dec
ss
sti
or
test
cmpsb
out
nop
add
pop
adc
hlt
pop
insl
outsb
jecxz
pop
jmp
inc
mov
mov
cltd
incl
call
add
adc
loopne
mov
xor
andb
sub
jne
addb
scas
xchg
pop
add
pop
xor
or
call
movsl
dec
daa
test
adc
jno
jp
sub
sub
mov
out
movsb
repz
call
and
nop
push
rcrb
jbe
popa
dec
lret
out
mov
sub
dec
mov
imul
es
stc
loope
rcrl
push
xlat
push
sub
mov
jmp
mov
inc
mov
clc
call
data16
mov
fisubrs
push
xchg
push
hlt
xlat
jmp
jb
sti
jp
jb
ds
ret
sub
xacquire
pop
add
add
xchg
dec
loop
rorl
hlt
xchg
lahf
int3
inc
stos
inc
and
loope
or
mov
fidivs
pop
in
daa
mov
div
mov
push
mov
jnp
pushf
sub
test
sahf
cmc
sbb
inc
call
dec
imul
mov
add
lret
in
lods
imul
sbb
pop
add
or
mov
xchg
mov
cs
mov
dec
loopne
mov
mov
mov
mov
xor
mov
add
dec
nop
pop
cmpsl
orl
into
lret
sbb
imul
or
inc
insb
aas
cmp
mov
aad
imul
sub
push
fyl2xp1
data16
pop
push
sub
mov
rolb
ss
not
test
xor
mov
pop
sbbb
in
test
jl
pushf
mov
mov
leave
sbb
sbb
or
mov
rclb
ret
adc
add
shl
or
cltd
mov
popf
jbe
out
xor
mov
fildll
dec
lahf
icebp
inc
loope
push
lret
adc
mov
fwait
cmp
inc
inc
in
test
movsl
icebp
scas
mov
push
inc
cmp
pop
call
in
mov
xor
jne
jecxz
mov
and
cmp
sub
add
fisttps
call
ja
stos
jb
cmpl
out
cmp
push
xchg
mov
ss
outsl
ret
pop
nop
pop
push
aam
lds
mov
sub
ret
inc
popf
fwait
test
and
call
jecxz
in
adc
dec
pop
shr
and
fwait
mov
movsl
or
in
nop
push
and
push
movsb
dec
push
subb
addr16
shll
lea
push
adcl
mov
sbb
add
mov
mov
insl
xchg
daa
inc
xor
lcall
idivb
lods
xchg
sahf
lcall
jbe
mov
jmp
test
sub
les
push
mov
sub
or
cmp
repz
mov
and
adc
test
push
mov
repnz
outsb
sbb
pop
mov
push
popa
cmc
and
pop
call
pop
dec
cmpsb
int
adc
and
jns
lods
push
push
nop
and
xor
mov
sbb
jo
push
mov
jmp
pop
and
push
sbb
mov
es
push
cmpsl
jbe
int3
add
js
push
cmp
or
mov
sti
and
movsb
fdivl
dec
aam
popa
dec
cmp
adc
xorps
add
rcrl
insl
ret
cs
adc
add
cmc
jae
cmp
mov
addb
jno
push
xor
inc
or
mov
mov
push
push
sbb
and
test
sub
push
jo
jmp
jb
scas
mov
loope
and
jne
hlt
adc
call
mov
xchg
shlb
stc
mov
xor
fdivl
imull
or
push
ss
mov
dec
and
xchg
pop
lret
push
imul
sub
ficoml
int3
inc
push
mov
and
push
xchg
mov
loope
jae
xor
push
sub
jo
cmp
pop
inc
enter
popa
pop
mov
push
pop
scas
fstpl
inc
mov
js
fsts
xor
jo
sarb
cmp
rcr
cmpsb
adc
test
jge
or
mov
xor
mov
fistpl
call
mov
push
cmpsb
repnz
or
xlat
dec
lock
push
dec
cmp
mov
or
xchg
mov
pop
cmpsb
and
hlt
frstor
xchg
insb
cmpb
sbb
inc
repz
jle
inc
inc
cmp
push
ja
pop
call
test
add
dec
frstor
ret
adc
lahf
or
sbb
inc
mov
push
push
mov
stos
test
and
xchg
lret
xor
push
mov
mov
int
mov
pushl
ds
fdiv
test
and
icebp
clc
push
inc
psubsb
test
or
orl
aas
dec
stc
rolb
adcb
xchg
cltd
mov
or
inc
push
cmp
push
mov
and
mov
jg
test
mulb
sbb
pop
in
push
pop
loope
inc
sbb
cli
cltd
popa
lret
ficoms
movsb
rcr
aad
dec
mov
push
jecxz
aad
mov
test
mov
and
dec
add
push
add
mov
mov
or
mov
mov
adc
fisttpll
sbb
lods
clc
jae
mov
or
push
fsubrp
mov
les
dec
mov
cwtl
ret
jb
inc
pop
push
inc
into
icebp
cmp
sub
fwait
sbb
pop
test
and
or
ljmp
cld
adc
pop
jne
fidivl
mov
lock
into
fstp
sub
sub
push
sti
je
xchg
cld
outsl
and
call
and
pop
jp
jge
xor
cmpsl
out
and
add
neg
sbb
or
push
icebp
xchg
jmp
inc
call
push
add
mov
xchg
xor
mov
lods
xchg
leave
pop
pop
dec
out
sub
cmp
and
ja
mov
out
pop
xchg
cmp
mov
jb
add
subb
in
dec
stos
pop
sub
inc
inc
push
xchg
jno
call
or
sub
sbb
sub
daa
movsl
lea
cmpsl
and
pop
xchg
jp
mov
addl
cmp
shl
sbb
mov
push
sbb
push
loop
or
test
jp
push
mov
push
popf
out
nop
sub
outsl
jmp
lret
mov
out
inc
ds
fdivs
add
mov
push
or
or
mov
call
into
test
fistpll
jo
push
call
out
mov
jb
mov
push
dec
fs
lahf
xor
aaa
int3
daa
xchg
aam
movsl
push
mov
pop
mov
push
faddl
orb
pop
cmp
aam
inc
mov
jne
sbb
rcrb
mov
sar
ljmp
or
xchg
js
pop
rcll
add
mov
test
mov
ret
call
jne
or
out
pop
stos
xlat
cmpb
mov
lahf
pop
pusha
ds
insl
sbb
dec
inc
fsubr
mov
xor
add
pop
mov
leave
jp
or
aad
leave
jge
mov
xchg
jno
xchg
xor
bound
inc
dec
movsb
lock
outsl
dec
outsb
scas
scas
or
sub
fdivrs
sbb
inc
pop
or
icebp
xchg
aam
mov
jo
and
mov
daa
xor
repz
or
lods
into
inc
outsl
mov
out
mov
push
and
pop
je
sub
pop
adc
sbb
cld
mov
xor
inc
sbb
xchg
dec
fsubs
fsubrs
pop
push
jb
lds
movaps
iret
adc
xchg
sti
sub
dec
jmp
rolb
fisubrs
test
push
jl
in
jmp
or
call
jmp
push
insl
lock
push
adc
daa
pop
lds
lea
xchg
dec
push
lods
insl
xchg
add
jg
mov
idivb
insb
divl
ret
incb
sub
add
aas
push
andb
aaa
or
sbb
push
add
adc
adcb
jbe
or
jmp
test
mov
or
int
orb
gs
popf
insb
mov
pop
rclb
sahf
mov
mov
lods
or
pop
add
cld
nop
mov
adc
lahf
sub
mov
cmp
or
movsl
adc
mov
add
hlt
sub
jns
dec
pop
cmp
dec
mov
test
lea
push
add
xor
fnstenv
andl
xlat
jb
adc
or
mov
push
dec
fiadds
lock
adc
mov
xor
sbb
pop
les
insb
lods
in
ret
xor
in
mov
push
arpl
call
sub
mov
cmp
sub
rcll
mov
push
mov
dec
cltd
sub
mov
sbb
dec
pop
push
push
les
jo
ja
repnz
xchg
and
mov
pushl
popf
hlt
dec
push
and
mov
add
call
push
cltd
xchg
imul
add
dec
loop
repnz
shlb
dec
xchg
hlt
mov
addb
xor
add
cwtl
add
xor
cmp
imul
sarb
loop
imul
repnz
and
or
mov
ss
mov
jmp
and
out
ljmp
roll
pop
push
or
and
fs
mov
fs
jo
pusha
sub
adc
lea
and
mov
sti
andl
lret
or
lret
out
dec
mov
lahf
xor
mov
and
pop
jno
mov
jb
fnstenv
cltd
cmp
arpl
dec
dec
pop
add
xlat
add
cli
dec
inc
cmc
mov
inc
push
push
push
sub
in
adc
sub
jb
mov
xor
jp
dec
xor
lahf
mulb
inc
xchg
cmp
jge
loop
mov
mov
daa
jmp
jle
scas
int
pop
sub
xlat
jp
mov
js
or
or
cld
enter
cmp
hlt
pop
int3
mov
jmp
cmp
cmp
or
out
repnz
add
test
shll
pop
cs
pop
imul
cli
ret
ljmp
mov
insb
inc
cmpb
adc
jp
lea
sbb
sbb
jno
and
or
fistpll
mov
push
sbb
jb
lea
sub
or
lea
sbb
lock
mov
mov
out
into
cmp
das
in
dec
fs
sbbl
jo
int
dec
inc
mov
cmp
cli
jl
cmpsb
and
push
nop
mov
add
pop
cld
pop
in
mov
mov
sarl
or
incb
and
int3
pop
lock
push
mov
das
stc
ss
mov
jle
or
orb
mov
push
stc
push
dec
mov
xchg
or
jmp
ret
dec
push
inc
sub
xor
mov
add
popf
xchg
xor
shr
fstl
loopne
movsl
inc
mov
enter
jmp
push
cmc
sbb
in
mov
pusha
stc
test
inc
sub
pop
lahf
fisttpl
cmp
call
scas
outsb
xor
cmpsb
cmc
cmp
mov
xchg
or
mov
push
add
dec
xor
inc
std
and
sub
insb
pop
lock
pop
mov
int
mov
pop
add
jmp
cs
addr16
and
add
jo
mov
lods
notl
repnz
ret
bound
in
icebp
repz
or
mov
gs
sbb
pop
cmp
dec
jo
call
add
dec
out
push
sbb
xchg
xchg
mov
adc
in
in
push
or
pop
add
int3
pop
mov
pop
pop
jmp
xchg
testb
xchg
ds
xor
aas
bnd
xor
out
add
push
cmpsb
imul
mov
loop
lcall
lret
dec
mov
rclb
cs
call
xchg
cwtl
outsl
jno
daa
dec
or
xor
test
mov
or
jns
pop
inc
cli
das
loope
jne
aam
or
cwtl
xchg
adc
call
inc
imull
in
and
add
sbb
mov
call
sarl
popa
pop
pop
int3
dec
sbb
pop
inc
jmp
pop
inc
cmp
or
dec
or
dec
dec
mov
push
and
dec
dec
out
test
mov
cmp
adc
sub
mov
jo
sub
iret
xchg
je
xchg
mov
push
jmp
xor
mov
fsubs
call
mov
cmpsb
sarb
cs
or
adcb
rol
push
popf
in
mov
jo
lret
call
xchg
pop
cmp
inc
jmp
push
movsl
pop
lods
scas
xabort
push
insb
xchg
imul
mov
push
push
shll
popa
fdivrl
test
and
rorl
cli
jg
push
cmp
pop
pop
mov
push
mov
dec
hlt
sbb
adc
stos
fdivrp
hlt
popf
imul
push
lods
into
mov
lcall
sahf
mov
in
jmp
sbb
ljmp
sbb
push
aam
leave
cmpsb
mov
add
stos
das
pop
or
scas
or
cmp
fstpl
jmp
mov
xor
pop
loope
lea
outsl
inc
mov
inc
pop
sub
mov
pop
mov
repnz
call
xor
and
das
arpl
xchg
cltd
push
jo
movsl
add
pop
cli
ss
fcmove
inc
mov
lcall
lret
fldenv
icebp
push
xor
inc
rorb
or
xchg
push
push
lods
inc
popa
push
and
push
inc
in
sarb
mov
jmp
imul
sub
jb
cmp
cwtl
iret
or
pop
addb
push
rcll
adc
out
inc
daa
adc
call
jne
or
mov
out
ss
loope
inc
jb
sbb
imul
lods
stc
je
mov
xchg
stos
lret
and
sub
jmp
mov
mov
in
cmp
ud0
add
call
or
mov
or
pop
mov
or
loop
ss
shrl
inc
fmull
icebp
int
call
cmp
or
mov
lret
xor
cmc
cmpsb
jle
idivl
inc
test
lret
sub
js
push
pushf
mov
mov
cwtl
or
in
je
jo
in
and
sbb
push
push
mov
and
jno
mov
js
push
pop
movsb
add
stc
aas
jl
insb
mov
add
cmp
icebp
cmp
rcl
dec
cmp
jp
push
mov
shlb
sub
sbb
filds
add
jmp
pop
xchg
cmp
enter
cmp
inc
stc
mov
sbbl
insb
sbb
and
sahf
cmpsb
ds
cmp
call
call
aam
fdivrl
and
inc
idivb
or
int3
jbe
jae
inc
hlt
cli
dec
fisubl
mov
leave
mov
enter
and
xchg
dec
xor
sub
jmp
in
enter
sub
pop
jnp
or
test
mov
pop
xchg
sub
sub
mov
jp
fisubrl
mov
lock
mov
sahf
mov
mov
or
jmp
fwait
sbbl
in
mov
xchg
movsb
push
pop
lahf
mov
out
pop
outsl
loope
subb
push
out
pop
leave
bnd
andl
mov
out
popf
ret
push
push
test
addb
je
stc
xor
and
dec
pop
data16
call
and
mov
and
mul
scas
xorb
ds
pop
pop
pop
movsb
cmp
mov
sahf
leave
inc
add
cmpsl
or
sub
sbb
and
aas
cli
add
mov
pop
cmp
push
push
adc
popa
icebp
jo
ljmp
jle
ret
add
push
scas
cs
stos
dec
jge
mov
fsubr
pop
cmpb
pop
int3
mov
fisubs
rorl
mov
add
ret
aas
in
dec
jecxz
add
xchg
mov
xchg
jb
jp
dec
xchg
popf
push
xor
sbbb
add
pop
in
jae
xor
fucom
fptan
mov
inc
mov
imul
pusha
inc
xor
imul
push
scas
out
outsl
push
sarl
enter
cmpb
repz
lcall
inc
outsb
xchg
pop
int
rorl
mov
xchg
and
iret
div
jmp
ficompl
enter
add
push
andb
mov
sbb
or
mov
add
mov
push
jl
lret
or
fs
push
orl
jne
add
or
mov
or
sub
mov
in
addr16
cmp
gs
sbb
clc
decb
jno
mov
adc
repz
repz
push
in
push
sub
cs
sbb
in
lcall
inc
and
movsb
add
inc
mov
shl
lods
inc
addr16
add
int
adc
fldl
jp
dec
or
add
ret
mov
sbb
repz
out
daa
lahf
pop
pop
dec
mov
cwtl
insb
push
ss
jb
pop
xorl
mov
pop
jl
jmp
mov
ja
movsb
repnz
into
repz
or
fldcw
dec
inc
sub
loope
push
xor
cmp
mov
ror
clc
mov
and
mov
call
inc
mov
inc
aas
out
xchg
mov
dec
js
ds
and
add
in
mov
sub
fadd
xchg
in
push
test
add
lock
push
jmp
jg
or
jns
mov
sub
test
test
jmp
inc
icebp
sub
mov
sbb
mov
mov
int3
mov
lods
mov
imul
rorb
test
jge
dec
addb
int3
inc
test
inc
xor
and
je
mov
call
stos
out
cmp
in
mov
pusha
adc
ret
jo
xor
pop
xor
repnz
cmp
lods
iret
sbb
mov
out
cmpl
push
pop
sbb
repnz
push
mov
scas
jo
subb
lods
insl
int3
xor
lock
xor
cmp
imul
pop
jae
add
xchg
scas
push
push
jmp
pop
cmp
pop
test
lret
xor
sbb
or
adc
or
jo
iret
sub
and
and
inc
rorl
jge
mov
mov
adc
pop
das
jmp
movzwl
bound
pop
pop
mov
rclb
and
enter
push
push
xor
inc
cmovge
sar
inc
rorb
mov
xchg
push
rolb
dec
ljmp
xor
sbb
push
and
push
shlb
mov
xchg
stos
and
ljmp
jg
clc
ret
andl
and
mov
in
sub
dec
call
mov
dec
or
xchg
popa
scas
or
call
loop
push
mov
add
mov
mov
inc
sub
inc
fisttps
call
and
sub
mov
adc
andb
push
sub
add
out
in
loope
stos
cmp
add
call
cwtl
lock
mov
repz
or
in
addr16
jl
adc
mov
call
sbb
insl
adc
lahf
pop
outsb
xchg
and
bound
push
or
lcall
or
inc
cmpsl
stos
inc
pushf
movsb
pop
mov
shl
push
push
mov
inc
inc
jns
and
xorb
add
fs
inc
fsubrs
mov
call
mov
es
dec
sub
lds
dec
sbb
arpl
loopne
lods
sbb
cs
xor
jnp
xor
xchg
or
push
popf
xchg
test
repz
dec
ret
mov
enter
add
fnstsw
in
or
xor
adc
mov
ret
xchg
repz
and
add
mov
cmp
or
fwait
push
leave
fiaddl
movb
lds
out
push
insb
mov
ja
pushf
aad
imulb
push
jl
mov
int3
mov
test
hlt
cmp
xor
int3
xor
or
push
cmp
outsb
pop
inc
xchg
cltd
cmp
scas
enter
or
inc
fsubrl
enter
mov
mov
scas
orl
out
leave
mulb
xchg
sbb
sarb
and
mov
inc
pop
pop
sub
pop
add
ret
jae
push
sbb
ja
sbb
dec
xchg
mov
loope
std
and
test
inc
and
cmpsl
insb
imul
or
ss
push
dec
adc
sbb
or
mov
mov
jnp
dec
mov
jb
push
aaa
push
adc
push
sub
cld
out
icebp
push
push
push
push
lods
and
dec
std
sub
sbb
cmp
mov
push
in
pop
mov
mov
mov
sahf
icebp
lcall
jno
mov
aas
or
call
push
mov
jmp
adc
push
mov
repnz
mov
adc
addb
inc
fistps
jb
pop
sbb
jl
push
mov
sub
fildll
mov
in
adc
jae
jl
add
lds
push
in
lock
hlt
cld
mov
mov
or
rorb
xor
pop
xchg
iret
jecxz
push
and
push
in
mov
int3
shl
stos
xchg
mov
dec
arpl
das
dec
pop
lcall
mov
and
lea
mov
test
test
dec
push
bound
mov
jnp
mov
scas
call
or
inc
mov
or
add
add
xchg
in
pop
call
push
cmp
cmpsl
cmpsl
jbe
xor
push
adc
data16
dec
pop
or
xchg
pop
outsb
sbb
in
out
sbb
add
leave
popa
call
or
cld
mov
test
inc
jo
push
test
popf
loope
test
xor
dec
scas
cwtl
xchg
adc
pushf
data16
inc
imul
pop
push
gs
inc
mov
xor
sub
jae
pop
repnz
add
xor
stos
les
aad
sub
xchg
adc
cli
xor
in
jle
push
add
jmp
lods
popa
frstor
push
xchg
xchg
cmp
xor
xchg
into
inc
repnz
xor
adc
loop
dec
nop
inc
decl
test
lret
adc
cmp
or
jmp
push
test
or
cwtl
sbb
xchg
lahf
divb
cmp
push
inc
push
or
pop
dec
ret
cmp
jno
xorb
test
jg
mov
out
cmovns
cmp
nopl
call
cltd
insl
inc
aaa
pusha
js
fstp
push
push
pushf
inc
pop
inc
jno
push
dec
mov
mov
lock
lcall
mov
or
dec
xchg
mov
jb
bound
stos
or
mov
mov
adc
ja
cmp
dec
xchg
pop
push
or
sahf
out
stc
pop
pop
xchg
bnd
pop
dec
jl
cmpsl
js
sub
xor
mov
les
xchg
and
or
inc
jne
daa
sbb
or
fmul
push
push
sub
in
cwtl
mov
leave
jb
in
test
pushf
and
pop
or
pushf
sbb
add
xor
push
mov
cltd
dec
in
jecxz
mov
jb
push
mov
std
leave
lods
call
jbe
jmp
mov
add
xor
pop
pop
push
or
mov
call
inc
mov
mov
adc
pop
mov
add
pop
repnz
nop
int
or
addb
and
subb
jb
xchg
bound
psubsb
xchg
push
lahf
daa
sbb
lahf
out
xchg
lods
or
adcl
inc
add
cmc
xor
loopne
sbb
lods
add
ret
daa
jp
rclb
jle
push
call
sub
pop
mov
inc
aad
loop
or
mov
mov
push
push
dec
inc
push
push
push
mov
adc
or
mov
jbe
push
pop
dec
call
icebp
stos
repz
jecxz
cltd
xor
jno
scas
in
icebp
pop
icebp
daa
shlb
add
lret
push
int3
popf
fidivrs
popa
push
jns
and
add
mov
shll
inc
dec
xor
cmpsb
jnp
and
jl
test
rcrb
xor
push
loop
or
mov
sbb
aad
nop
test
cmp
xchg
push
jns
test
stc
inc
outsb
leave
ret
adc
inc
bnd
cmp
jle
jbe
or
add
fdivs
inc
xchg
add
inc
mov
mov
cmp
pushf
mov
cmp
mov
cmp
sub
testl
or
mov
cmp
mov
fsubr
or
imul
jge
call
sub
stos
sub
mov
test
inc
push
sbb
jns
xchg
popa
or
sbb
mov
call
add
push
or
xor
je
push
out
mov
neg
dec
or
sub
sub
or
test
and
push
or
sub
lea
scas
lock
cmp
mov
or
or
popa
xor
dec
imul
outsb
das
lods
loope
jl
jge
jbe
in
cmp
xchg
scas
fcomps
inc
xlat
mov
or
or
outsl
mov
enter
xchg
movl
fyl2x
cmp
inc
or
cld
das
ret
jmp
je
xchg
hlt
gs
pusha
dec
je
cs
dec
jge
add
shrl
mov
lahf
subb
mov
enter
adc
jns
push
and
mov
pop
fdivl
push
pushl
or
push
mov
stc
xchg
mov
lock
mov
jbe
cs
pusha
sub
jo
push
dec
sbb
xchg
lea
negb
sarl
into
or
hlt
mov
fwait
rcr
push
push
aaa
dec
fiadds
xchg
cli
icebp
mov
push
shll
pop
mov
xor
jnp
and
ljmp
jo
and
jge
add
mov
scas
call
xor
mov
mov
mov
push
add
inc
xchg
xor
adc
std
sub
fsubp
imul
ret
sbb
test
lods
or
xlat
test
popf
cld
ljmp
mov
xlat
push
mov
mov
xor
stos
pusha
call
dec
add
test
ret
call
or
xchg
mov
fsubl
push
lods
xor
imul
xchg
push
ja
push
mov
rolb
mov
test
mov
cmp
repnz
cwtl
xor
cli
and
imul
inc
jmp
inc
xchg
jp
mov
stos
and
out
sbb
inc
jmp
popf
mov
add
inc
push
in
ret
xchg
pop
or
push
imul
dec
sub
xor
aam
leave
jecxz
ss
cmp
cmp
movsl
test
sbb
lahf
sub
lret
aaa
or
decb
subb
and
or
and
or
mov
pusha
xchg
stc
andb
mov
xor
cmp
mov
or
call
cli
mov
out
test
and
mov
jmp
aad
cmp
cmp
aad
outsb
add
cmp
cwtl
dec
inc
lods
into
jbe
push
jl
and
add
cmp
xor
cmc
cld
dec
cwtl
jno
stos
fidivrl
sub
add
push
push
outsb
das
call
pop
int3
pop
jp
jg
mov
xor
mov
cmp
jmp
inc
test
mov
pop
jmp
jbe
test
adc
pop
test
jb
pop
jge
add
in
mov
adc
nop
xchg
or
mov
dec
shlb
cmp
inc
mov
repz
or
nop
mov
dec
adc
mov
xchg
out
sbb
std
and
xor
ret
xor
ss
out
dec
pop
sahf
mov
jo
loop
or
push
cmpsl
jmp
add
lds
and
movsb
enter
push
repnz
or
mov
xchg
mov
call
sti
sub
pop
mov
stos
or
inc
and
sbb
je
mov
dec
xchg
xor
pop
pop
out
push
push
dec
xchg
inc
ficompl
lcall
int
ljmp
xor
cmp
add
mov
cmc
mov
push
mov
sbb
pop
push
and
inc
jge
repnz
xlat
out
adc
icebp
lods
cmp
daa
repnz
fcmove
xor
leave
xor
sbbb
lcall
pop
dec
testl
icebp
dec
inc
mov
dec
lret
dec
xchg
sbb
lea
lret
inc
out
mov
fwait
int
in
shr
or
pop
inc
std
out
lret
out
ret
cmp
int3
clc
cmp
mov
push
and
daa
scas
xchg
jle
xorb
out
daa
adcl
aaa
mov
scas
or
cmpsl
mov
mov
xchg
mov
fnsave
lods
push
in
mov
adc
pop
ds
adc
add
mov
add
add
jle
cmpsb
jecxz
stc
arpl
add
push
fcompl
and
les
outsl
push
mov
mov
pop
clc
and
notl
int3
mov
xlat
mov
push
jge
adc
dec
sbb
dec
push
mov
testl
pushf
je
mov
icebp
push
cmp
add
movsl
sbb
jb
or
les
rcrb
or
stc
dec
mov
mov
mov
jnp
loop
mov
xchg
jg
inc
imul
mov
je
push
cwtl
xor
cmp
xchg
movsl
cmp
cmc
or
pop
jns
xor
add
push
call
cld
sub
jno
sub
lea
mov
rolb
xchg
add
sbb
cltd
push
push
test
imul
push
mov
paddd
sbb
pop
pop
jp
pop
lock
mov
xchg
fidivrl
or
pop
add
add
mov
pop
sbb
mov
sbb
fldt
jno
and
inc
mov
or
jo
pop
mov
xchg
dec
dec
test
push
ret
clc
enter
aas
movsl
popa
nop
mov
out
cli
or
insl
cli
cs
repz
mov
ljmp
aad
and
add
pop
adc
mov
xor
shl
add
pushf
ja
pop
inc
je
mov
mov
imul
ror
jns
lods
push
sbb
call
jae
inc
sub
or
xchg
mov
or
inc
scas
fists
or
nop
xchg
shll
jp
or
xor
mov
add
cmpsb
sbb
adc
rorb
int3
call
mov
and
jbe
imul
push
xor
xchg
popf
and
pop
ret
cmp
pop
mov
adc
les
insl
and
insb
or
pop
inc
xor
sbb
test
lea
mov
push
adc
popl
jns
loop
push
mov
fwait
mov
rclb
sbb
hlt
wbinvd
and
xchg
test
jl
push
push
inc
mov
mov
and
inc
lods
dec
pop
test
mov
adc
fsubr
in
shlw
sbb
rorb
or
shlb
cmp
nop
das
mov
add
lahf
sub
clc
jmp
cltd
call
inc
stos
sbb
sub
and
ja
ret
xchg
add
or
mov
mov
mov
push
jno
imul
push
ljmp
cmp
mov
mov
int
add
push
clc
dec
jecxz
add
xchg
mov
xor
repz
rcll
sbbl
mov
mov
jb
fsubrs
sub
xchg
addr16
xchg
cmp
mov
and
in
imul
cmp
and
in
cmpsb
push
push
xchg
gs
cmc
jbe
ret
xchg
pop
jnp
pop
aam
or
imul
xor
lock
fidivrs
pop
das
lahf
mov
sbb
xchg
xorb
xor
sub
adc
or
push
aad
repz
movsb
push
mov
aad
aad
imul
mov
push
and
mov
sbb
cmp
xchg
jmp
lods
jge
pop
lods
sbb
enter
int3
leave
mov
loopne
repnz
data16
cwtl
lock
movsb
xor
jmp
aam
or
dec
or
aad
add
adc
loop
inc
stos
adc
mov
xchg
mov
inc
push
mov
stc
mov
xchg
clc
lahf
and
cmp
mov
fxam
lods
ja
pop
aam
dec
mov
test
add
push
outsb
iret
int3
or
xchg
cmpsb
in
sbb
inc
push
and
mov
and
in
pop
jne
sbb
vmovshdup
mov
inc
sub
cs
and
call
mov
jo
adc
call
popa
pop
mov
hlt
dec
jo
or
addl
lret
pop
and
ljmp
psubusw
jecxz
pop
cwtl
jno
fildl
dec
jb
aas
es
or
xchg
sbb
andb
test
mov
xchg
int3
ja
push
and
sbb
loope
jb
cmp
and
in
lea
cltd
or
shll
clc
shrb
aad
dec
lahf
adc
bound
or
jle
out
mov
pop
pop
fdivs
and
dec
aam
ljmp
ret
dec
or
adc
mov
mov
sbb
pop
mov
xchg
and
sbb
pop
mov
jo
mov
or
xor
dec
add
call
cmp
jns
cmp
aam
or
loopne
movsb
test
mov
movsl
or
mov
pcmpgtb
outsb
push
call
rcrl
inc
xor
lahf
repnz
das
rcl
add
mov
sbb
mov
daa
cmc
cmp
xchg
out
mov
pushf
movsl
pop
pushf
xor
push
xchg
ja
jmp
or
xchg
les
xchg
arpl
scas
in
std
mov
loopne
pop
jp
cld
lds
mov
mov
mov
sub
sbb
repnz
out
dec
repz
inc
xchg
fldt
xchg
popf
fsub
dec
movsb
xor
jmp
dec
mov
jb
push
pop
repnz
mov
cld
add
cwtl
sbb
shll
movsl
jb
push
sbb
jmp
mov
pop
add
lea
inc
push
out
out
sbb
dec
ds
je
add
repnz
jecxz
push
pop
pop
or
imul
cmpl
lcall
inc
les
jno
jae
cmp
push
pop
cwtl
or
call
icebp
sbb
dec
mov
fnstcw
xor
jge
mov
push
cmp
push
xor
cmpb
test
data16
test
lahf
mov
jmp
lea
sub
test
xorl
cmpsl
jo
adc
scas
cld
xchg
popa
cmp
lock
mov
pop
jnp
dec
inc
in
lock
clc
inc
pop
push
popl
adc
xlat
insb
mov
jo
es
pop
roll
loopne
lcall
mov
dec
dec
jno
sbb
adc
pop
jle
pop
mov
mov
shrb
popf
cmp
call
and
repz
inc
pop
sub
mov
pop
daa
shlb
pop
test
pop
out
adc
in
pop
adc
push
xchg
mov
pop
push
dec
cmp
inc
cld
cli
lods
inc
pop
mov
cmp
xor
add
mov
push
repz
lea
sbb
mov
int3
dec
loope
jmp
add
pop
dec
xor
in
popf
lahf
cli
loop
rcrl
loop
sbb
das
cmp
inc
mov
addb
ret
or
scas
or
cld
jae
lds
pop
scas
jo
imul
fs
xchg
pop
push
mov
mov
scas
pop
lods
push
or
movq
cmp
rorb
ret
mov
jno
test
repnz
mov
jae
iret
dec
push
es
sti
insl
outsb
movsl
data16
mov
dec
jae
mov
push
jb
xor
push
lods
inc
inc
call
lret
mov
xchg
pop
add
in
jmp
xor
out
add
fldl
or
xor
push
pop
mov
es
sub
std
cmp
sarl
dec
push
add
sub
add
outsl
push
pop
jle
pop
mov
test
pop
daa
mov
clc
push
icebp
sbb
adc
shlb
daa
repz
stos
push
jns
js
adc
cwtl
das
add
ficomps
dec
cmc
cwtl
xchg
adcb
cmp
xchg
mov
or
mov
mov
mov
xor
push
sbbb
shll
xchg
hlt
dec
mov
mov
insl
jg
pop
daa
sub
xor
paddw
pop
outsb
mov
push
add
das
cmc
lods
push
leave
mov
decb
push
or
mov
push
dec
stos
cmp
sti
lods
cmp
enter
fisttpll
or
and
mov
inc
inc
mov
jo
stos
notb
jne
jmp
adc
test
push
setp
fdecstp
add
cmp
mov
push
gs
adc
adc
xchg
test
mov
lret
test
sub
movsb
mov
fdivl
xchg
dec
mov
enter
sbb
pop
mov
push
add
mov
push
and
add
mov
scas
das
or
push
mov
loop
push
push
gs
fs
mov
hlt
cmp
mov
mov
push
push
insb
dec
idivb
pop
push
cmp
in
mov
sti
inc
popa
insb
lahf
mov
mov
adc
mov
cmp
repz
popf
mov
movsb
jmp
add
push
inc
lock
dec
stos
dec
xchg
cmp
andb
jns
sbb
push
mov
sub
mov
movsl
icebp
imul
xchg
jmp
fs
pop
aas
pop
call
loope
enter
add
ljmp
jns
push
maxps
inc
and
cld
out
dec
sbb
and
shr
int3
inc
not
cmpsl
call
fwait
jmp
jnp
js
mov
sbb
mov
xchg
pop
cmp
mov
and
sbb
xchg
test
dec
dec
sub
mov
cmpsb
aaa
and
bnd
or
mov
mov
call
call
pop
std
push
xor
rcr
popa
in
movsb
es
sahf
lea
xor
push
dec
dec
cld
sbb
sbb
subb
enter
and
sub
and
mov
iret
dec
inc
inc
cmpsl
jecxz
or
cwtl
cld
mov
scas
xchg
cmpsl
inc
rsm
push
addr16
cmp
dec
xchg
jns
jnp
sahf
mov
or
icebp
notl
mov
aam
sbb
bnd
decl
stos
xchg
mov
insl
mov
add
les
xchg
pop
negl
and
mov
nop
fidivs
aas
or
sub
loope
fs
cmp
rclb
loope
jmp
xor
jg
or
gs
or
or
or
mov
pop
jb
push
cmp
xchg
xor
dec
inc
leave
call
ja
xor
jno
jl
call
jg
sub
and
repnz
sub
pop
push
test
loope
dec
and
sub
xor
mov
sub
xchg
xchg
into
lahf
lock
in
pop
iret
js
lret
adc
orl
cmp
icebp
call
and
rorb
push
mov
es
xchg
cmp
aaa
pop
xchg
jae
mov
addr16
std
call
addl
ja
and
ret
dec
push
cmc
cwtl
pop
fistps
inc
ljmp
dec
les
arpl
mov
adcb
sub
adc
pushf
mov
pop
push
add
fadd
in
shl
addr16
pop
jmp
mov
loopne
aaa
and
fs
xchg
inc
leave
sbb
flds
in
adc
shll
mov
es
jp
mov
call
jno
inc
sbb
xchg
loopne
das
push
add
mov
mov
pop
mov
jle
testb
mov
mov
pop
out
je
loop
mov
adc
push
xor
popa
sub
mov
mov
inc
xor
push
xchg
xor
add
xchg
out
sub
jb
push
cld
bound
sbb
xchg
pop
inc
test
mov
dec
repnz
daa
add
cmpb
inc
leavew
mov
fs
hlt
dec
adc
jle
fs
rcrl
cmp
icebp
pop
test
mov
stc
dec
mov
imul
pop
out
push
push
sbb
sub
pop
jb
fnstcw
adc
mov
icebp
cli
jle
test
ret
and
adc
push
mov
push
fldcw
daa
adc
jmp
jmp
pop
sti
or
test
decl
or
jmp
idivl
in
out
xchg
cmp
mov
mov
add
xchg
pushf
mov
or
jecxz
shlb
loop
mov
hlt
scas
and
pop
push
hlt
mov
movl
push
pop
int
dec
test
stc
cmp
lcall
mov
add
inc
jmp
cmp
sub
fwait
into
repz
lret
sahf
lock
mov
testl
mov
dec
add
filds
lea
call
or
jmp
data16
or
adc
out
dec
xchg
add
push
sahf
xchg
incl
cmp
out
sub
jmp
scas
ret
aad
sub
cmpsb
loop
or
ret
inc
xor
ds
in
push
dec
dec
call
mov
mov
out
and
loop
dec
pop
in
int
popf
in
push
mov
shrb
jmp
mov
aam
push
sbb
enter
push
inc
pushf
loop
pop
add
fxch
out
leave
or
lea
call
push
or
popf
add
jl
inc
sti
mov
pop
sbb
call
and
out
int3
out
pop
push
pop
and
pop
pop
xchg
lods
js
sub
push
dec
cli
ldmxcsr
or
nop
and
xchg
out
mov
cmpsb
xchg
push
aam
jge
and
xchg
cmp
xor
ljmp
mov
sub
inc
jae
or
loopne
fidivrl
fprem
repnz
jnp
pop
cld
add
das
or
mov
mov
sbb
xchg
jl
lods
and
add
les
or
inc
sub
cmp
pop
adc
jp
mov
mov
xchg
sbb
push
jb
cmpl
pop
or
daa
or
lahf
repnz
mov
pop
mov
call
repnz
push
push
mov
push
push
cmpsb
dec
inc
loopne
je
movlps
repnz
add
or
shrb
mov
test
stos
or
mov
jp
mov
icebp
and
adc
cs
das
sub
std
insb
pushf
sar
sub
add
movsl
xchg
jle
cmp
jg
lret
push
push
inc
cmp
fcom
or
mov
cmpsb
add
call
mulb
je
push
mov
mov
mov
into
test
mov
pop
enter
and
stc
pop
pop
inc
rolb
cltd
sub
push
mov
repnz
mov
xor
sbb
pop
jns
jno
fcoml
mov
addr16
pop
mov
push
arpl
mov
xlat
push
adc
push
push
aaa
mov
into
call
inc
mov
dec
cmpsb
adcb
or
dec
jae
out
jno
pop
xchg
inc
shll
mov
addr16
jb
mov
or
jmp
mov
test
test
mov
insl
sbb
pop
mov
popa
adc
inc
jl
mov
jb
xor
jle
lea
mov
add
xchg
and
sub
inc
dec
and
inc
ja
mov
cmpsb
pop
adc
or
sub
jbe
xor
xchg
scas
test
shll
sub
sub
jecxz
mov
mov
outsl
rcll
popa
add
cli
ljmp
pop
sahf
lea
dec
cld
pop
jle
pop
mov
push
mov
bound
pop
inc
sarb
cmp
adcb
cld
add
mov
popa
das
push
mov
sbb
push
xchg
push
std
aaa
mov
and
xchg
dec
rcll
ja
test
popa
pop
mov
inc
push
jp
mov
sbb
sahf
xlat
shlb
lret
jmp
stos
pop
add
xchg
or
je
dec
cmp
jg
pop
inc
cmp
dec
mov
mov
sub
pop
pop
push
mov
or
adc
cmp
xchg
das
or
adc
aas
cld
bound
xchg
das
adcb
mov
sbb
stc
fcoms
pop
inc
adc
pop
ds
or
fmulp
xor
arpl
jno
out
push
sub
add
shrb
jecxz
sbb
bnd
out
xchg
cwtl
adc
sbb
fldcw
mov
out
mov
loop
cmp
mov
nop
jmp
aad
cmpsl
scas
xchg
adc
pop
ja
call
ss
jno
xchg
dec
inc
pop
mov
repz
add
xorl
push
jmp
xor
jmp
cmc
or
inc
sbb
lcall
or
inc
or
jns
pop
mul
jp
jl
arpl
sub
or
iret
push
sbb
pop
or
mov
clc
adc
mov
jo
mov
pushf
inc
xor
jb
adc
or
icebp
push
mov
cs
aad
jl
cmpb
lahf
imul
or
sti
add
or
adc
cmp
adc
xchg
add
sbb
inc
add
rorb
subb
fmuls
or
add
mov
and
call
sub
roll
in
jno
jns
jne
call
inc
mov
jo
out
cli
pop
mov
pop
xchg
int
out
xchg
push
jp
jo
or
jmp
mov
jge
adcl
fwait
push
adc
es
add
mov
push
xchg
addl
pop
out
and
pusha
mov
mov
mov
dec
stos
sbb
mov
push
daa
movsb
adc
data16
mov
pop
jae
push
push
cmp
and
incl
call
mov
cmpsl
repnz
outsl
or
leave
mov
shrl
cwtl
in
mov
cwtl
lods
pop
mov
inc
adc
divb
dec
or
push
aaa
addr16
xchg
fdivrs
insb
sub
inc
jecxz
or
dec
js
adc
xor
dec
mov
add
frstor
les
or
xchg
or
and
bound
or
enter
mov
sbb
popf
or
fisubs
mov
mov
leave
sbb
out
sub
and
add
push
cmpsl
xor
or
push
loopne
xorb
and
sub
xor
mov
mov
xchg
mov
sub
es
xor
mov
rorb
push
mov
xor
dec
call
cmp
aam
lret
in
pop
mov
test
in
aas
or
mov
addr16
leave
add
iret
dec
rcr
or
hlt
fwait
mov
data16
or
xchg
inc
movsl
cmpsb
cmp
aas
dec
imul
push
repnz
adc
push
cmp
mov
mov
pop
xchg
imul
dec
xor
inc
mov
sar
dec
lds
jb
push
add
or
jge
lea
or
inc
repnz
sahf
shll
mov
jmp
and
in
pop
lahf
xor
push
pusha
mov
pusha
mov
cltd
test
or
aad
movsl
adc
jmp
in
aam
xchg
scas
add
jnp
jp
jns
subb
sub
imull
lds
test
pushf
cli
and
adc
xchg
mov
and
js
add
nop
inc
cmp
enter
ja
sub
or
sbb
push
pop
call
adc
clc
xchg
or
sahf
push
mov
imul
out
adc
sub
sbb
lret
jb
imul
je
icebp
push
xchg
in
xor
jbe
pop
pop
mov
das
dec
out
lret
sub
into
push
dec
mov
in
nop
test
mov
orl
mov
xor
xchg
mov
lock
addr16
call
je
cld
imul
pop
pop
jecxz
dec
mov
stos
mov
add
or
xlat
mov
test
lods
and
fbstp
mov
pop
add
sub
or
cmp
or
pop
leave
adc
imul
sbb
push
mov
ja
and
inc
mov
or
mov
jno
jne
or
lock
call
psubw
test
xor
push
jnp
mov
cmp
hlt
xchg
arpl
ds
sarb
lods
adc
pop
adc
mov
sub
dec
pusha
in
xor
nop
xor
jge
insb
lock
pop
repnz
test
mov
out
insl
mov
pop
call
add
sbb
ss
loop
and
out
mov
mov
enter
cmp
loopne
jp
in
fidivs
push
cmpsb
std
push
adc
jnp
aam
mov
push
jecxz
xor
jno
aam
pushf
punpckldq
cmc
sbb
jo
mov
test
adc
jg
sbb
mov
lock
push
pop
inc
fildll
lock
addl
lahf
pop
jl
dec
inc
jmp
outsl
or
sbb
imul
inc
push
push
sbb
jg
sbb
push
ret
repnz
xor
jl
add
mov
fisubrs
or
add
es
pop
call
fwait
jnp
mov
sub
cmp
inc
xor
outsl
pushf
mov
mov
ss
add
mov
lret
xchg
xor
sub
sub
push
je
pop
adc
adc
popf
rcrl
xchg
dec
out
or
inc
xchg
fiaddl
pop
repz
in
lahf
and
insb
jno
dec
sysret
jnp
sub
clc
aam
fmulp
call
add
ss
or
xchg
dec
mov
aas
sbb
xor
dec
scas
iret
mov
cs
les
test
xchg
out
ja
call
shr
aas
mov
adc
add
jno
stos
scas
pop
sub
jge
xchg
icebp
push
icebp
xor
xchg
inc
loop
popa
adc
into
or
sti
or
sub
lea
push
std
mov
loopne,pt
aaa
mov
pop
sub
fidivrs
ds
add
aaa
pop
wbinvd
int3
pop
add
fdivs
cld
xchg
mov
jmp
pop
pop
mov
out
sahf
les
sbb
mov
or
call
repnz
fildll
xchg
loopne
fmull
inc
mov
dec
inc
shlb
or
test
sbb
call
lahf
push
lds
mov
dec
xchg
cmp
fpatan
sub
pop
insb
fwait
movsb
jnp
jmp
lods
int
xor
mov
adc
sahf
push
hlt
mov
lea
add
dec
mov
or
jmp
pushf
ljmp
jae
fldl
sbb
inc
inc
mov
adc
xchg
mov
lods
rorl
movsb
adc
pusha
jp
pop
add
or
in
xchg
xor
sub
cs
push
sbb
fidivrl
fs
jge
jne
and
xor
mov
mov
cmpsb
adc
add
call
test
push
stos
sub
xor
mov
mov
punpckhbw
xchg
mov
dec
cwtl
inc
fadd
cmp
pop
daa
inc
cwtl
sub
lahf
cwtl
movsb
mov
fsubr
lret
xchg
pop
mov
dec
cmp
mov
jmp
adc
cli
loope
jge
in
lcall
inc
sub
loop
dec
aas
mov
xchg
push
mov
popa
sbb
and
or
jmp
cmp
jnp
sar
pusha
add
xor
ja
xchg
xchg
pop
repnz
pop
jmp
in
jp
fcompl
pop
mov
fldl2t
add
pop
js
repnz
pushf
mov
add
inc
inc
movsb
scas
dec
pop
jbe
push
and
mulb
mov
jne
mov
pop
jge
lahf
jmp
repnz
lret
pop
push
popa
dec
insl
pop
mov
notl
mov
push
jae
push
mov
xor
dec
jae
and
nop
push
xor
lret
iret
fs
adcb
out
aas
dec
mov
add
dec
lea
dec
jo
mov
mov
jmp
pop
push
shlb
icebp
sub
fidivrl
insl
daa
or
sarl
xchg
lods
psrad
or
or
push
aad
dec
ret
mov
xor
add
negl
push
lret
mov
or
ja
push
test
fwait
nopl
jge
xchg
mov
xor
inc
jo
andb
mov
out
arpl
mov
dec
data16
lods
sahf
adc
jg
and
mov
shll
or
ret
jg
scas
sbb
pop
mov
add
xchg
push
xchg
mov
loope
dec
pop
lcall
or
sbb
aad
fucomip
lcall
rcl
pop
cmp
jo
test
ret
sahf
or
sbb
inc
sbb
rolb
test
and
xchg
lahf
add
sar
ljmp
jmp
lds
dec
lret
das
cld
sub
cmp
mov
lcall
outsb
adc
adc
in
push
sub
xor
mov
cmp
mul
and
push
or
fildll
fistl
jge
and
adc
insl
dec
test
ret
xchg
xchg
inc
xchg
mov
ret
adc
mov
pop
jbe
mov
pushf
iret
mov
dec
dec
and
ret
gs
sbb
pop
cmpsl
and
xlat
ja
xor
daa
pop
lcall
push
adc
ret
add
sbb
or
loopne
push
cmp
and
orl
rep
sub
push
push
or
mov
push
rcrb
jle
ffreep
and
daa
sub
mov
mov
push
in
xchg
lret
mov
lods
sti
hlt
sbb
shll
jmp
sbb
and
clc
sti
adcl
cmp
lods
mov
mov
pop
pop
cltd
mov
or
mov
adc
fwait
cmpsl
adc
out
scas
xor
lea
bound
or
jmp
or
lds
cmp
add
add
mov
push
push
dec
mov
push
data16
loope
pop
jb
push
push
call
out
xchg
or
dec
pop
je
test
and
xor
ret
gs
fdivp
pop
or
leave
clc
adc
mov
pushf
ss
or
jmp
xchg
mov
adc
ljmp
mov
fisubrs
nop
test
or
xor
mov
cmp
aad
call
or
jmp
pop
cltd
mov
aaa
adc
negb
in
mov
xchg
ja
mov
or
iret
xor
nop
push
push
mov
cmp
xor
call
cmp
lods
push
les
jo
addb
inc
in
and
stos
pop
ret
das
jno
repnz
rolb
xor
mov
das
mov
add
lcall
xchg
or
push
in
jmp
insl
xor
out
sbb
or
call
clc
ss
shl
inc
enter
inc
adc
jae
cmp
fisubl
pusha
inc
push
inc
movl
mov
xchg
dec
pop
mov
adcl
lds
adc
ljmp
push
outsl
mov
push
aas
mov
popa
aad
ljmp
mov
imul
pop
mov
add
mov
adc
addb
adc
int3
xchg
cmpsb
test
push
inc
mov
jp
movsl
es
aaa
lahf
pop
mov
outsl
andb
inc
adc
push
fsubrs
adc
out
mov
jmp
imul
sbb
add
dec
xchg
or
movsl
mov
lahf
jmp
decl
or
or
xchg
pop
pop
ret
xchg
int3
les
clc
loope
xlat
inc
and
jno
pop
add
dec
dec
es
dec
scas
cwtl
mov
and
jmp
mov
movsb
out
and
fcompl
pop
dec
daa
sub
pusha
pop
add
jbe
lock
call
test
or
jp
pop
negl
push
shlb
jmp
inc
or
inc
add
xchg
jae
jae
out
repz
cmpsl
subb
loopne
cs
jns
cld
and
xor
jecxz
add
out
sbb
cli
push
das
mov
movsb
mov
cmp
and
jg
add
fcoml
lds
mov
sub
fimuls
xor
push
mov
mov
mov
lock
mov
mov
push
mov
lea
push
aam
in
mov
xchg
ds
frstor
jg
lret
lock
clc
cltd
push
xor
pop
mov
fisubs
jne
push
or
icebp
mov
sub
ss
mov
sti
cmp
xchg
lea
leave
xor
mov
aad
test
push
lea
push
xor
add
inc
icebp
dec
or
ret
imulb
or
aaa
push
dec
mov
pusha
push
sub
jle
rcll
mov
mov
mov
sbb
jae
dec
pop
dec
pop
sub
adc
and
rcrl
sub
mov
data16
and
xchg
jmp
jecxz
ja,pn
push
pop
sbbb
and
jnp
js
or
aad
jno
mov
xchg
cli
push
push
inc
hlt
mov
sub
cs
movsw
lock
push
xor
loop
and
add
fisubl
sub
push
bound
jmp
and
js
and
imul
jg
in
mov
jno
mov
jbe
jp
call
leave
push
and
or
cmpsl
or
int
inc
aas
sub
push
sbb
jno
lahf
lret
rclb
pop
aas
jecxz
dec
or
ret
push
jmp
or
lds
es
sbb
jne
sbb
pop
xchg
dec
test
daa
nop
cmpsl
jb
mov
pop
dec
sahf
cltd
dec
ficoml
fisubrs
inc
adc
aas
cli
mov
add
out
adc
push
mov
adc
call
daa
inc
inc
pop
pushf
stc
pop
cmp
test
mov
das
aaa
push
ds
xchg
mov
jnp
sti
xchg
xchg
mov
sbb
or
ss
in
mov
sti
adc
nop
not
xchg
loope
pop
aaa
movsb
mov
cmp
and
mov
xor
mov
test
push
lahf
icebp
out
jo
xor
mov
stc
xchg
ret
icebp
mov
jmp
loopne
pusha
push
mov
and
es
lcall
or
dec
or
shlb
mov
fwait
mov
cltd
push
fadds
out
lods
cmp
leave
leave
fstpl
loop
sbbb
fistpl
call
mov
xchg
pop
inc
test
mov
xchg
shr
mov
dec
pop
xor
mov
xchg
lahf
pop
stc
inc
cmp
outsl
cmp
dec
mov
incl
inc
out
clc
sub
icebp
push
sub
jae
lahf
call
lods
xor
mov
add
cld
sub
bound
pop
pop
sub
ja
add
dec
fdivrl
daa
fisttpll
dec
jmp
ss
iret
rolb
sbb
rorl
lods
in
mov
jo
xchg
mov
pusha
hlt
add
cmpsb
push
xor
and
addb
in
test
sub
sti
xor
mov
xchg
loop
push
mov
movsl
add
fdivp
add
out
das
shr
jbe
jne
cld
mov
and
outsb
jge
sbb
test
rcrb
imul
test
push
call
sub
clc
loop
in
out
push
pop
inc
call
cmp
cmp
inc
push
out
fsubr
es
iret
or
pop
or
pop
sarb
sbb
das
stos
cmovno
scas
or
push
and
xchg
popa
jae
pushl
add
std
loop
sahf
adc
dec
push
add
mov
enter
push
mov
dec
in
test
movl
bound
mov
jb
mov
adc
inc
frstor
popf
insl
xchg
or
in
xchg
mov
aad
push
xchg
mov
sbbb
add
mov
xor
inc
push
push
in
mov
or
xor
and
or
sub
jb
push
cmpsl
mov
jmp
xchg
enter
scas
loop
and
push
mov
fcmovbe
or
les
xor
dec
int
pop
leave
cmp
das
push
repnz
mov
hlt
aad
out
cmp
mov
mov
xor
adc
xchg
lds
std
rolb
lods
es
and
sbb
jmp
jmp
lahf
leave
mov
add
mov
xchg
or
leave
rcrb
mov
scas
xchg
jb
inc
or
insb
mov
movsl
mov
dec
add
push
jmp
daa
xchg
add
pusha
jmp
xor
icebp
cmp
negl
sub
xchg
test
fdivrl
push
test
sbb
mov
and
aaa
and
mov
int
stos
xchg
mov
push
jb
or
jo
into
iret
sbb
sub
je
rolb
pop
mull
mov
xor
es
adc
test
cmp
int
inc
mov
mov
cmp
or
mov
lahf
add
imul
fsts
and
xor
cmp
fs
shlb
or
test
inc
ss
add
jae
mov
inc
stc
das
je
loop
in
mov
jmp
jno
movsb
fadd
inc
movsb
mov
mov
mov
shrl
and
mov
jmp
arpl
jo
sbb
adc
or
add
repnz
orb
sub
push
out
inc
jmp
in
xchg
jp
sub
sbb
mov
lahf
shll
cmp
test
repnz
xchg
push
push
add
lods
adc
enter
out
xor
xchg
js
lahf
inc
cwtl
xchg
push
insl
dec
hlt
push
sbb
jne
in
sub
pushf
pop
push
mov
add
fcompl
shrb
mov
adc
add
lahf
pop
sub
xlat
or
imul
enter
fwait
iret
shlb
dec
sub
rcrb
and
lret
data16
inc
jge
repnz
mov
mov
enter
sahf
inc
add
js
andb
lahf
clc
mov
jae
ficomps
imul
addr16
repz
imull
mov
hlt
mov
pusha
mov
pusha
fs
repz
sbbb
and
add
sbbl
sahf
jmp
lret
data16
xor
or
mov
pop
call
mov
dec
jmp
adc
daa
imull
in
nop
lods
mov
adc
hlt
inc
das
cld
or
add
jge
mov
mov
adc
xor
sbb
ret
jmp
xchg
add
mov
push
lahf
in
std
cld
jb
dec
insb
mov
push
adcb
test
prefetch
or
sti
and
lock
mov
enter
push
fucompp
ja
or
push
xor
or
cmpsl
enter
jl
fstl
add
outsl
out
clc
mov
out
clc
ficoml
add
mov
push
mov
ja
adc
leave
xor
sub
sbb
cmp
pushf
lock
pop
test
clc
xchg
frstor
lods
stc
add
mov
mov
je
into
in
loop
negb
add
cmp
xor
xor
xor
or
mov
push
pop
and
push
out
lea
dec
cmp
jecxz
dec
pop
mov
lcall
or
or
mov
jnp
inc
in
fcompl
mov
sub
in
mov
mov
push
or
push
xor
mov
ret
addr16
test
imulb
fucomi
addb
mov
cmc
add
sbb
mov
dec
sub
lods
cmp
push
or
sbb
ljmp
fs
mov
fdivr
sub
out
pusha
jmp
insb
scas
nop
loopne
imul
push
or
pop
cmp
int3
ss
mov
sbb
mov
in
jle
les
sub
adc
dec
repz
or
ficoml
adc
jns
pop
and
cmpl
inc
aam
mov
movsb
jnp
test
call
mov
das
inc
dec
inc
jmp
adc
xlat
dec
and
sub
jecxz
push
xchg
push
das
add
daa
or
std
addr16
and
stos
bound
sbb
in
xchg
es
stos
sbb
sub
add
inc
fidivs
mov
dec
insb
stos
aas
pop
or
inc
push
lock
sbb
jp
push
mov
aas
or
or
xor
mov
adc
push
sub
pop
push
xor
popf
add
das
push
or
mov
sub
add
push
das
sti
or
xchg
into
in
mov
mov
sub
fdivrl
sbb
movsl
xor
call
add
mov
mov
dec
addr16
nop
sub
pop
or
lea
fstl
cs
sbb
insb
jno
call
sub
push
or
mov
and
inc
movsb
movsl
int3
cmp
js
and
pop
cmp
xchg
out
movsb
add
cltd
add
jmp
je
sub
or
orl
cltd
mov
jmp
jl
imul
and
adc
roll
mov
fadd
mov
and
push
outsb
push
cltd
add
or
movsb
inc
aad
or
call
fwait
pop
or
sbb
mov
ljmp
lock
jmp
cwtl
mov
and
adc
lock
push
xchg
sub
outsb
pop
sub
test
mov
dec
xchg
xchg
sahf
fdivrl
or
adc
shlb
das
fildll
loop
push
mov
arpl
pop
mov
aad
sahf
pop
andl
sub
lahf
pop
and
pop
jmp
in
inc
andl
adc
and
jle
jl
dec
mov
aad
mov
cmp
ret
fs
xchg
jae
push
sti
or
xor
ds
cmp
stos
faddl
xchg
and
or
outsb
sub
xor
sbb
outsl
push
pop
push
sub
sti
mov
push
xor
aam
outsl
jne
in
fs
mov
sahf
jp
and
mov
cmp
fwait
pop
int
out
xlat
sub
mov
jp
xchg
lea
cmp
cmp
mov
mov
cmc
mov
lea
imul
push
ja
sbb
ret
rclb
mov
inc
in
add
inc
mov
hlt
add
inc
pop
lahf
iret
pop
ljmp
cmp
subb
dec
jnp
push
mov
ret
push
loop
sub
add
je
fdiv
hlt
add
xor
sbb
and
mov
jg
icebp
in
jae
cmpsb
dec
into
and
call
jmp
aaa
add
repnz
imull
cld
repz
mov
mov
int3
push
das
test
sbb
and
sbb
nop
fucomip
xlat
mov
cmc
mov
xor
or
ds
ret
push
jmp
or
iret
mov
adc
pop
pop
mov
dec
clc
cmp
inc
xorl
imul
icebp
jmp
out
inc
push
outsb
call
arpl
or
ljmp
fisttpll
mov
jl
imull
decb
dec
or
sbb
cwtl
add
imul
inc
out
or
test
add
mov
or
andb
sub
rcl
frstor
fbstp
in
imul
pop
adc
out
sahf
iret
pushf
add
xlat
jl
sub
test
add
cmp
test
stos
lahf
clc
lcall
lods
or
and
mov
jns
lahf
icebp
lahf
pusha
add
inc
pop
dec
add
insl
or
cmp
mov
or
jecxz
push
aad
and
pusha
cmp
dec
mov
dec
or
sbb
xchg
insl
cmp
jmp
in
jno
dec
push
in
push
in
jmp
lods
jge
xchg
fisubs
jnp
int3
adc
xchg
shrl
repnz
stos
inc
adc
cmp
lcall
push
push
in
mov
push
ret
pop
xchg
mov
jecxz
cmpsl
pop
sbb
mov
mov
xor
push
mov
mov
ret
push
mov
add
push
bnd
adc
or
jo
mov
add
in
stc
int
scas
rclb
push
xor
jg
or
xor
fsubl
adc
cmpsl
mov
add
mov
addr16
out
push
inc
add
repnz
push
fcmovnbe
scas
sub
mov
add
lds
cmp
push
push
adc
icebp
fisttpll
dec
mov
icebp
mov
ss
jae
jp,pn
and
shlb
pusha
sbb
mov
cltd
outsl
cmc
cmp
pop
xchg
fsubp
leave
jno
loope
xchg
sub
les
adc
test
lods
cwtl
subb
cmp
repz
loope
shl
in
stos
mov
leave
add
dec
das
nop
scas
lret
enter
ljmp
mov
into
movd
pop
outsl
out
or
out
roll
mov
adc
ja
and
mov
push
mov
mov
jg
popf
scas
dec
jp
sbb
sbb
push
mov
and
shr
push
fwait
mov
pushf
scas
lds
add
or
test
push
and
call
js
call
sbb
push
jbe
cmpb
pop
inc
imull
movsb
fcomp
out
dec
and
xor
mov
mov
mov
push
inc
cmpsb
and
mov
in
nop
negb
and
inc
sub
inc
shlb
lods
pop
inc
pop
xchg
je
xor
icebp
jns
rcrb
or
lahf
adc
mov
out
mov
push
pop
mov
or
lds
jmp
sub
nop
push
cmp
mov
lret
sub
popf
or
roll
repnz
sub
mov
test
cwtl
mov
lret
push
add
mov
xor
mov
int3
add
pushf
loope
jo
sarb
jl
push
test
int3
jmp
sti
jle
add
lahf
or
xchg
dec
add
push
pop
push
mov
call
movsl
jle
add
or
leave
push
ja
xor
lret
cmpsb
mov
or
sahf
aas
sarl
in
js
mov
sub
xchg
enterw
test
inc
pop
xchg
outsb
add
sbb
push
xor
pop
sbb
bound
mov
pop
cli
inc
and
pop
push
sub
and
fnstenv
stos
sub
inc
lahf
loopne
repnz
clc
jo
ja
pushf
popf
push
popf
bnd
cmp
push
call
pop
sub
jmp
js
inc
dec
jg
pushf
sub
leave
pushf
je
xchg
cld
xchg
push
insb
or
mov
dec
sub
and
mov
mov
addb
pop
cwtl
movsl
sbb
call
cmpsb
repz
je
cltd
mov
mov
rcrl
jne
jmp
mov
pop
cmp
repnz
daa
fisttps
push
or
scas
lods
push
out
fisttpll
sbb
jo
aam
mov
mov
mov
push
push
pop
repnz
xchg
test
test
test
pop
into
mov
mov
les
xchg
daa
into
add
adc
pop
inc
pop
cmpsb
mov
jno
sbb
mov
pop
push
es
and
xchg
or
aas
xchg
mov
push
or
inc
mov
pop
inc
icebp
and
sub
adc
push
inc
mov
mov
sbb
or
push
mov
rclb
adcl
mov
jmp
jl
rcll
dec
int3
xor
fisttpll
js
pop
jl
jb
cmc
das
decl
ljmp
call
rorb
cmp
or
dec
mov
lock
inc
pushf
jmp
add
call
pusha
call
push
sbbb
or
and
loope
pop
or
mov
mov
fwait
mov
cltd
and
mov
mov
repnz
mov
mov
inc
push
fbstp
jmp
push
pop
loopne
ret
dec
dec
jns
xor
imul
rclb
lret
repnz
daa
int
popa
shll
add
dec
fildll
call
xor
mov
ret
mov
push
in
ret
addb
xor
xchg
xor
ljmp
push
cmpsl
sets
call
pop
pop
lods
fwait
jo
sub
in
sbb
ficoms
add
dec
scas
mov
mov
sub
xchg
cmpsl
test
lcall
not
call
add
out
adc
fdivrl
stos
jbe
shrl
bound
out
ret
mov
or
sbb
push
add
movsl
fisubrl
rcrl
sub
jns
mov
rol
leave
add
adcb
shrl
pmaxub
push
add
push
mov
pop
cmpb
adc
dec
xchg
scas
icebp
aam
enter
mov
add
call
leave
nop
iret
loope
xchg
loope
adcb
add
ljmp
cli
dec
pushf
sbb
icebp
cmp
movsb
sub
leave
and
aaa
inc
mov
and
jno
adc
push
call
das
lods
mov
jecxz
dec
pusha
mov
fs
arpl
and
jbe
dec
arpl
mov
aas
imul
adc
cld
mov
imul
jmp
inc
dec
cltd
xor
inc
push
mov
call
xor
sub
inc
lret
dec
sahf
or
jns
jge
sti
aad
std
xchg
lods
stos
add
pop
fwait
dec
sbb
jno
jae
loopne
sbb
test
repnz
adc
sahf
sti
xor
mov
mov
loopne
inc
push
cmpsb
insb
push
mov
sub
insl
pop
xchg
jg
faddl
test
pop
sub
xchg
in
and
hlt
xor
inc
push
mov
mov
inc
inc
dec
fcompl
xchg
dec
popl
lcall
addb
mov
pop
call
push
dec
test
xchg
mov
test
sbb
pop
jb
in
nop
fcompl
stos
mov
mov
sub
lcall
in
dec
inc
jbe
pop
pop
pusha
je
loop
pop
push
test
or
dec
inc
inc
mov
dec
nop
subl
cmp
add
rclb
rcrb
jmp
inc
sti
add
sbb
xor
sbb
mov
cmp
int3
push
push
out
lods
add
xorl
push
incl
flds
fisubrs
test
push
lahf
in
sarb
pop
xorb
in
push
hlt
mov
push
mov
xor
inc
int
jnp,pn
push
repz
lds
out
or
dec
inc
repnz
stos
push
in
pop
cmc
cmp
cmpsb
jb
popa
addb
pop
dec
cltd
sub
rolb
std
mov
xor
mov
lods
jne
xchg
pop
dec
sub
mov
call
jmp
pop
mov
repnz
mov
insb
icebp
add
pop
add
ret
mulb
shr
mov
inc
call
enter
jno
daa
aam
jmp
rcll
xchg
cmpsl
xor
mov
dec
push
hlt
mov
iret
int
pop
dec
in
gs
ret
cwtl
pop
mov
leave
sbb
pusha
fs
lcall
call
sub
or
jo
mov
sbb
mov
into
dec
fadd
pusha
in
into
dec
andl
inc
fwait
ret
fimull
pushf
inc
lahf
push
dec
sub
mov
js
xlat
mov
cmp
adc
pop
ljmp
cmpl
sbb
stos
aam
stos
imul
std
in
inc
or
sub
and
jmp
push
xchg
cli
and
inc
call
mov
push
cmpsl
adc
test
fcoms
ds
in
lock
rcl
xchg
mov
push
out
push
das
sti
jb
lahf
fstpl
xchg
xor
xchg
cmp
aad
aas
mov
jb
lahf
push
adcl
xor
addb
inc
jmp
ja
je
dec
inc
shll
push
mov
jg
pop
pop
mov
daa
mov
add
enter
pop
sbb
movsl
xchg
mov
fisubs
les
cmp
loop
xchg
lea
test
addr16
mov
lahf
shr
daa
cmp
mov
adc
repz
cmp
lret
or
fidivl
adc
roll
or
mov
pop
mov
inc
sarl
or
sbbb
loope
jmp
dec
in
jns
dec
mov
call
sub
pop
xor
addb
icebp
inc
push
data16
inc
ja
lods
lea
xor
mov
push
lret
inc
repnz
mov
push
dec
orb
out
push
add
fcompl
jns
or
pop
sbb
jg
fldl
mov
xchg
imul
por
or
pop
add
or
popf
add
outsb
shrb
stos
inc
jbe
adc
add
rclb
inc
xor
jge
addb
fs
push
mov
loop
das
pop
cs
xchg
sub
fwait
loopne
xorl
jmp
inc
pop
add
outsl
push
test
dec
add
adcb
push
sub
fnstenv
incl
lock
inc
rcrb
add
mov
dec
aaa
stc
mov
add
fimuls
lods
push
jl
outsb
push
orl
xchg
lods
dec
fstpl
stos
inc
dec
xchg
fwait
rcll
push
adc
je
imul
cwtl
js
pop
mov
xorl
push
xlat
jo
iret
add
sar
mov
iret
mov
cli
loop
mov
pop
jno
and
stos
mov
cmp
loopne
cmpsb
jge
outsl
xlat
cmpb
adc
std
pop
push
sub
or
or
out
outsb
shlb
xchg
dec
sub
mov
or
cmp
mov
add
pop
in
clc
or
ja
into
sub
lock
mov
jg
test
mov
jmp
mov
lret
cs
add
and
and
pusha
cli
inc
xor
sub
adc
rorb
dec
add
push
test
mov
loope
daa
sub
mov
pop
or
rclb
mov
or
loope
jecxz
jecxz
dec
out
divl
mov
popa
mov
iret
int
inc
stos
fptan
ret
jg
mov
js
cltd
mov
dec
inc
sbb
andb
call
jmp
pop
pop
cli
jo
sub
lods
xchg
mov
lea
or
mov
jmp
orl
and
jmp
fsts
push
xlat
stos
xchg
add
jno
cmpl
jg
enter
in
les
adc
enter
sahf
dec
or
insb
loop
icebp
sub
add
stos
xchg
push
xchg
add
std
out
jns
jae
andl
das
jp
mov
dec
sbb
xor
lcall
test
jge
jb
push
lret
std
mov
loope
leave
mov
lods
sbb
sbb
cmp
mov
leave
cld
call
mov
pop
dec
push
cmp
mov
mov
and
stc
push
and
sub
mov
dec
and
mov
mov
adcb
scas
lahf
push
clc
mov
cmpb
inc
cmp
mov
xor
ljmp
cmpsl
ds
push
xor
add
adc
jp
add
pop
push
mov
das
popl
xorb
cld
movsb
leave
ficoml
xchg
popa
pop
push
xchg
or
pop
dec
lds
ss
adc
jno
test
jp
dec
aad
in
hlt
lock
jnp
out
pop
xchg
pusha
xor
mov
xor
or
cmc
mov
cmp
push
mov
sub
push
add
mov
or
in
lods
or
add
pop
pop
dec
push
sbb
cmp
cmc
sbb
das
clc
and
xor
or
sbb
mov
cld
test
lret
xchg
cmc
or
ss
or
jne
enter
sbb
cmp
fiaddl
mov
test
repnz
mov
mov
adc
or
jmp
fcompl
imul
insl
sbb
jne
pusha
sahf
jp
cwtl
call
dec
loopne
bound
dec
add
ja
sbb
popa
push
adcb
pop
jbe
mov
cmpsl
cld
pusha
or
push
or
mov
xchg
test
sbb
xor
dec
pop
mov
cmc
dec
add
or
push
call
fwait
sub
dec
popa
mov
xchg
xor
je
jle
dec
mov
pusha
ja
cmp
mov
xor
pop
sbb
xchg
out
sub
and
sub
or
rorb
mov
das
cltd
pop
sbb
jae
jno
loop
inc
inc
mov
jns
sbbl
in
mov
pop
bound
cwtl
jne
ret
mov
jl
sub
xchg
mov
pusha
adc
addr16
pusha
sbb
pop
mov
add
dec
cmc
add
jmp
fsts
sbbb
dec
xor
repz
mov
into
test
push
jbe
lea
fisubl
and
inc
inc
call
jmp
mov
divb
jns
add
mov
add
inc
mov
fs
or
pop
xor
out
pusha
or
out
lods
subb
jno
jmp
pop
cltd
ret
pop
push
test
add
dec
stos
and
and
xor
sti
das
cmpsb
or
popa
pop
xchg
testl
das
mov
shll
mov
test
sbb
fscale
lods
push
inc
mov
push
or
test
jo
rclb
lahf
push
pushf
mov
add
icebp
or
jg
pop
sub
push
cmp
jmp
sub
stc
mov
dec
in
jecxz
mov
inc
movups
mov
mov
insb
out
pop
sub
mov
adc
enter
and
mov
push
decl
fs
stc
repnz
sbb
fiaddl
push
sbb
mov
cmpsl
xor
mov
pop
or
cmc
fidivrs
lock
inc
push
mov
jecxz
xor
in
xorb
call
mov
mov
xchg
mov
rcll
and
sub
cwtl
pop
push
call
xor
adc
int
popa
xchg
sub
xor
or
mov
inc
lret
fnstenv
inc
mov
sub
test
cmp
fs
or
in
xor
lea
lock
loopne
push
or
mov
mov
add
fldl
int
xor
out
pop
fmulp
movzbl
popf
jbe
pop
stos
idiv
dec
rorb
inc
je
jo
push
pushf
outsl
cmpsl
ret
jg
push
jmp
or
mov
icebp
clc
jge
insb
repz
mov
jmp
mov
dec
or
xchg
push
pop
push
pusha
mov
js
mov
ljmp
stos
mov
cs
push
jnp
add
aas
push
mov
inc
cltd
in
mov
sub
sbb
jnp
lahf
stos
jmp
cmpsl
or
mov
stc
and
mov
sbb
sar
adc
mov
add
test
cmp
pop
mov
pop
fnstsw
enter
adc
add
pop
xchg
call
inc
js
cli
cmpsl
popa
pop
pop
mov
enter
and
cltd
cmc
inc
pushf
popf
je
lods
popa
arpl
jmp
jg
add
mov
cmp
dec
jge
push
mov
mov
mov
xor
dec
shr
and
xor
cs
jge
data16
leave
lods
sbb
std
and
xchg
jmp
mov
fnsave
add
daa
ljmp
repz
test
popf
dec
aaa
jl
xorl
sub
pop
push
fs
movsl
sbb
add
test
inc
or
jl
testl
jns
repnz
pop
popf
fstpt
icebp
xchg
dec
movsl
repz
pusha
add
and
fidivrl
lahf
test
aaa
add
add
jl
mov
ss
out
pop
jmp
call
add
sbb
psrlw
push
mov
add
jge
stos
cs
cli
incb
pop
mov
icebp
pushf
iret
mov
rcrl
fdivrl
out
push
sub
ficoms
faddl
inc
bound
rcll
push
mov
xlat
sbb
push
daa
scas
mov
add
rorl
add
xchg
adc
inc
jg
adc
jmp
push
cmpsb
pop
add
xor
popa
fs
inc
push
pop
dec
stos
adc
mov
xchg
pusha
dec
insb
pop
dec
add
mov
pop
add
sub
lea
xchg
push
popf
stc
mov
je
push
rorb
adcb
rorb
cmpsb
fnstcw
add
or
sub
adc
sahf
xchg
adc
jl
push
call
mov
push
stos
push
mov
jg
shl
fs
inc
jecxz
shll
les
lcall
and
jb
fldt
sub
sbb
inc
ja
xor
fstps
dec
loopne
test
insb
fldt
int3
push
lods
in
sub
icebp
fstpt
pusha
inc
xor
jmp
add
push
cltd
or
pop
aas
mov
xor
and
fdivl
mov
aas
std
iret
add
pop
and
out
popf
inc
or
into
inc
and
pop
mov
and
aam
add
add
dec
xchg
lea
xchg
test
xor
jae
add
mov
push
leave
xchg
inc
mov
push
jg
jnp
outsb
fdivs
or
xchg
sub
test
mov
mov
int
cld
xchg
imul
sbbb
push
loop
faddp
fidivs
inc
inc
imul
push
test
lods
pop
outsl
ret
jnp
inc
pop
pop
jle
jmp
xor
inc
push
popa
ja
cmp
jbe
xor
insb
ss
push
push
adc
shlb
ja
and
push
xchg
mov
or
adc
ret
mov
loop
add
in
lods
cmpsl
roll
xor
inc
call
or
jl
negb
stos
jb,pn
pop
in
push
push
push
cmpsb
repz
jno
jge
sub
adc
pop
mov
dec
inc
lock
push
push
cmpsb
xchg
mov
or
push
call
or
fcmovne
fwait
inc
mov
shlb
or
push
push
adcl
cmp
cli
sub
inc
push
mov
push
or
out
cmp
inc
inc
xchg
xlat
xchg
push
in
outsb
dec
pop
popf
cmp
dec
or
pop
aam
mov
xchg
adc
addl
dec
cltd
outsl
insl
fbstp
dec
ljmp
mov
mov
pop
or
adc
loopne
mov
or
shlb
or
out
jmp
jb
sub
shlb
push
push
cmp
out
inc
fidivl
sub
scas
cld
pop
xchg
pop
push
movsb
ret
mov
or
imul
movsl
dec
sub
nop
mulb
cld
sbb
mov
shll
xchg
maskmovq
imull
clc
jmp
jo
jle
pop
mov
enter
dec
andl
mov
or
je
in
mov
pop
mov
dec
jmpw
mov
xchg
dec
mov
adc
inc
or
hlt
mov
repnz
test
dec
lods
mov
lcall
lock
sti
mov
mov
or
jbe
dec
ja
sub
cld
out
leave
pop
or
or
pop
or
cli
adc
mov
jp
pop
sub
mov
repnz
addr16
jge
jo
jno
mov
mov
subl
mov
push
mov
jmp
push
jmp
dec
call
jmp
daa
inc
sahf
or
ljmp
mov
or
das
pop
sub
mov
popa
add
mov
or
iret
insl
notl
xchg
imul
cmp
leave
mov
adc
mov
out
fmull
mov
jge
in
lahf
movsb
loope
mov
lea
mov
mov
mov
xor
loop
pop
shll
adcl
inc
jmp
xorb
movsl
or
xchg
divl
inc
filds
add
fisttpl
pop
mov
jae
pop
leave
inc
ss
xchg
imul
or
jmp
clc
jle
test
push
add
jne
add
xchg
or
mov
cmp
or
and
sub
cli
jb
adc
jle
mov
add
jae
ret
sbb
sub
arpl
into
or
jmp
insb
pusha
xchg
and
pop
jmp
popa
pop
push
cs
les
jno
rcl
das
add
repz
call
lds
in
mov
popa
outsb
or
mov
cli
push
or
aas
in
xor
pop
or
dec
pop
call
xchg
jbe
test
adc
leave
enter
xchg
popf
jg
cmp
cli
repz
sub
daa
jae
hlt
je
call
mov
sub
inc
dec
enter
popf
cmc
orb
stos
dec
in
mov
into
daa
dec
mov
sub
std
adc
sub
daa
lahf
cmp
ucomiss
jno
mov
pop
dec
dec
push
add
enter
sbb
ja
imul
mov
sub
stc
sub
fistps
mov
xchg
mov
sbb
xor
jo
xchg
bound
xchg
orb
mov
jo
aad
ret
push
pop
cltd
scas
inc
mov
or
cmp
pushf
jbe
add
mov
das
push
pop
lods
xchg
outsl
or
xor
push
push
je
sub
iret
xor
leave
popa
dec
clc
shrl
dec
outsl
and
add
insb
sti
ljmp
adc
hlt
sbb
xchg
adc
outsb
outsl
inc
int3
sub
xchg
inc
push
in
mov
sub
adc
enter
fldt
jno
mov
sbb
je
sbb
mov
and
push
push
aad
adc
lods
fdiv
orb
and
inc
add
fdivr
jg
mov
add
xchg
mov
sbb
hlt
outsb
data16
mov
dec
xchg
scas
inc
call
mov
add
jmp
stc
and
ret
jecxz
add
jmp
sbbb
mov
in
incb
cmp
inc
call
push
repnz
imul
dec
xor
sahf
pop
out
dec
movsb
imul
aad
mov
movsl
push
push
or
push
push
lret
fldcw
xor
pop
shll
pushf
push
ret
dec
sbb
sub
inc
je
xlat
and
stos
movsb
dec
mov
jmp
repz
daa
in
inc
sbbl
xchg
xchg
mov
mov
inc
fcoml
fsub
xchg
sub
shrb
sub
mov
xor
scas
testb
jmp
push
pop
jns
loopne
xorl
dec
push
lahf
xchg
and
mov
in
mov
stc
sbb
mov
in
pop
rclb
xor
sub
sbb
inc
mov
cltd
or
pop
add
shl
jecxz
repnz
dec
dec
ret
mov
xchg
fsubp
xchg
dec
fstpl
loopne
fistps
leave
adc
dec
push
repnz
jo
inc
mov
jo
or
lahf
adc
lret
mov
inc
add
xchg
dec
out
gs
daa
pop
stos
faddl
popa
pop
mov
or
pushf
sbb
enter
inc
aad
push
inc
dec
call
push
mov
mov
sbb
movsl
pusha
add
repz
leave
push
dec
cmp
xor
pop
sub
or
ret
shll
cmp
cmpsl
mov
aad
xor
int3
or
clc
insb
icebp
inc
repnz
sub
inc
mov
cltd
ljmp
dec
insb
fldln2
shll
cmp
mov
push
rol
jbe
leave
push
in
popf
leave
movsb
mov
aas
test
push
push
jg
jns
repz
dec
rolb
xor
loope
pushf
or
fnstsw
mov
jle
add
shl
jmp
lret
jl
xchg
addr16
sti
xchg
mov
xor
mov
js
fsubl
mov
add
mov
or
leave
fcmovnu
fistl
fwait
call
out
cmpsl
cltd
cmp
fistl
or
addr16
bnd
repnz
rclb
gs
mov
fisubrl
adc
mov
cmp
inc
add
test
add
cmp
and
fwait
add
mov
push
inc
mov
in
andb
lahf
icebp
cmpsb
iret
push
icebp
test
or
es
inc
push
pop
aad
sub
jo
in
mov
fs
push
scas
mov
call
and
repnz
xor
mov
sbbl
loope
movsl
sbb
pop
ja
fidivs
js
jnp
repz
and
jo
ret
mov
daa
and
cld
mov
sub
lret
loope
mov
mov
pop
xor
sub
adc
sub
push
mov
out
sub
insb
lods
jno
xor
cld
cld
ret
movsb
or
out
push
maxps
aas
movsb
decb
dec
or
stc
pop
lds
call
popa
cmp
mov
rcl
jmp
pusha
xor
mov
push
pop
lea
fdivrl
repz
in
into
out
inc
sbb
in
mov
xchg
or
popa
adc
fildll
jp
and
lahf
cmp
pop
pop
mov
adc
and
mov
sbb
push
mov
pop
mov
add
and
xor
call
data16
push
add
dec
mov
adc
dec
add
fldt
scas
push
mov
add
xchg
jmp
aad
jnp
push
mov
das
add
test
sbb
insl
cltd
xor
int3
in
call
pop
or
or
mov
pop
imul
jnp
mov
in
mov
adc
or
adc
inc
push
xchg
dec
ljmp
call
pop
lret
inc
dec
movsl
mov
imul
dec
sub
mov
pop
inc
xchg
notb
xchg
call
adc
xor
in
jmp
iret
enter
push
sbb
xchg
xorb
inc
repnz
mov
push
dec
add
lea
cmp
sub
stos
clc
pop
cs
jecxz
pop
mov
cmp
lock
test
mov
pop
cmp
mov
jo
inc
call
and
jp
in
adc
cld
pop
ds
pop
push
insb
push
and
repnz
sbb
stos
imul
call
ret
cld
in
ret
push
sub
mov
fisubrl
lds
stc
or
xor
sahf
movsb
incb
xchg
insb
and
repnz
repz
pop
sub
mov
push
cmpl
in
call
lahf
out
cli
pop
jmp
xchg
out
cmp
cmc
clc
add
or
mov
cwtl
jl
ja
dec
inc
iret
ret
mov
adc
inc
inc
in
mov
lods
push
pop
pop
jmp
mov
pushf
repnz
shlb
mov
jl
mov
sbb
push
push
je
daa
fwait
pop
insb
out
add
shll
test
dec
in
add
sub
pushf
bnd
push
mov
push
add
cmpb
shlb
test
out
sbb
pop
loope
mov
pop
mulb
cmp
mov
cs
adc
int3
xchg
add
push
mov
cmp
pop
and
add
dec
xor
lcall
addb
xchg
mov
je
into
xorl
arpl
sub
push
mov
or
jno
or
pushf
jns
push
aad
andl
add
inc
jle
mov
mov
movsb
fs
add
mov
in
enter
lds
jb
push
fcomip
and
mov
sub
sbb
sti
jmp
sbb
mov
lea
xchg
or
ficomps
aaa
pop
jmp
mov
sahf
sarb
mov
jge
mov
inc
mov
adc
push
pop
and
dec
sti
dec
stc
mov
cmpsb
sahf
pushf
dec
xor
jne
push
lret
pop
fisttps
shlb
or
cmp
xor
mov
mov
stos
nop
or
enter
xorb
ret
ja
push
jmp
jbe
add
lds
clc
frstor
out
xor
out
ret
push
mov
push
je
popa
hlt
add
jno
int3
push
and
sbb
dec
sbb
daa
loop
inc
testl
mov
shl
out
pop
xchg
ret
jecxz
rolb
sub
icebp
mov
mov
jbe
mov
sahf
sub
ja
pcmpeqw
arpl
and
or
sbb
out
call
push
sbb
insb
pop
in
mov
dec
dec
sbb
sahf
arpl
shrb
aam
in
jnp
in
stos
push
push
push
fwait
movsb
dec
or
xor
adc
mov
icebp
sbb
push
ret
loope
fdiv
xchg
ds
mov
ret
rcrl
leave
aaa
or
aas
leave
cmc
adc
and
lret
adc
lea
into
fbld
or
iret
jno
pop
cmpb
fwait
or
cmp
mov
push
fsubrl
pop
pop
push
xor
xorl
or
push
aas
jns
call
insl
cmpsb
std
in
test
mov
shrl
daa
cmp
lret
scas
das
push
repz
push
lods
lahf
cmp
fdivp
call
push
dec
subb
test
inc
and
loop
je
lea
mov
mov
sub
and
hlt
mov
sbb
sub
incb
push
mov
or
in
xor
pop
inc
cmc
and
mov
add
push
mov
cwtl
inc
pusha
cwtl
add
repz
push
loop
repnz
iret
lcall
shrl
adc
xchg
subb
jo
adc
clc
pop
push
movsb
dec
out
pop
popf
lods
adc
leave
and
add
ljmp
jno
jmp
dec
sahf
mov
cltd
bound
add
fdivrs
jnp
push
test
jo
rorl
lods
adc
fcomps
jae
fistps
or
xchg
sarl
jne
ds
mov
icebp
data16
clc
divl
dec
push
mov
inc
jb
in
mov
and
mov
lsl
adc
das
roll
popf
cmp
lahf
fistpl
jo
push
add
data16
popf
std
mov
push
inc
testb
or
adc
adc
xlat
sub
mov
mov
mov
fsubrs
rcrb
or
mov
jo
clc
test
ja
lcall
mov
shrb
popf
inc
push
push
std
cs
mov
call
imul
fwait
pop
add
addr16
aam
sbb
push
push
dec
out
inc
cmc
cltd
xor
sub
xchg
cmp
fnstcw
xchg
cmp
lcall
js
sbb
xchg
pushf
push
mov
dec
sbb
and
pop
add
dec
mov
cwtl
cmp
xor
rcll
dec
xor
roll
gs
add
inc
movsb
xor
scas
push
popa
cld
test
aad
and
repnz
or
jmp
cmp
jge
mulb
mov
dec
pop
push
inc
dec
adc
dec
sbb
mov
cmc
stos
xor
or
or
ret
cltd
fcompl
pop
call
mov
adc
jmp
dec
jmp
lahf
shlb
pop
cmp
sahf
bnd
cmc
into
shlb
in
cltd
xchg
cmp
clc
push
enter
repz
fisttpll
ljmp
arpl
imul
out
ret
call
int
lcall
and
leave
cmp
xchg
pop
addr16
arpl
enter
and
jle
inc
push
mov
jmp
xor
insl
or
cmpsb
test
mov
daa
nop
xor
add
movsl
das
or
mov
xor
xchg
mov
pop
mov
xor
and
mov
pop
mov
or
ljmp
je
pop
adcb
pop
in
sbb
cmp
movsb
pop
fisubrs
push
mov
stc
mov
mov
out
cmp
cmp
ja
ss
pusha
xor
inc
push
int3
fsubs
insl
lcall
push
push
lahf
push
iret
in
sub
dec
add
push
add
dec
fbstp
test
pusha
add
inc
jmp
sub
aam
neg
outsb
pusha
adc
das
loopne
cli
test
movsl
cmp
leave
adc
call
pop
jnp
mov
mov
pop
push
push
add
stos
adc
test
mov
adc
das
stc
xor
or
fwait
pushf
sti
enter
inc
pop
cmp
dec
sub
push
cmp
jno
ret
daa
inc
and
jno
and
xor
mov
out
fcmovne
xor
cmp
fprem1
dec
sub
in
rorb
fldl
in
pop
cwtl
pop
mov
inc
cwtl
or
loop
pop
int3
mov
inc
in
push
pop
xchg
sub
jmp
ja
lods
das
adc
jl
xor
sub
shrb
mov
jg
jo
cmp
fisubrs
pop
rolb
mov
mov
mov
xchg
or
pop
lea
adc
xchg
ret
testl
dec
icebp
sti
push
int
mov
loope
inc
stos
pop
cmc
cwtl
cmpb
xor
mov
xchg
ror
shrb
xchg
sbb
fmull
add
sub
mov
jg
lahf
inc
enter
inc
sbb
ficompl
loop
and
push
mov
mov
add
leave
inc
push
popf
lds
rcrb
mov
mov
pop
out
shl
push
sbb
xchg
sbb
mov
test
mov
pop
repnz
ljmp
jmp
inc
enter
add
jmp
xchg
xchg
inc
or
inc
shr
arpl
jp
or
repz
out
cmp
cmpsl
sub
dec
call
cwtl
xchg
push
mov
lcall
fidivs
pop
cmpsl
lret
jmp
divl
pop
call
push
push
call
mov
push
mov
fiadds
cmp
stc
inc
mov
xor
repz
and
mov
jmpw
cltd
test
lea
push
popa
inc
pop
nop
jb
mov
jp
adc
dec
cmpsl
fisttpl
mov
adc
hlt
mov
cld
cmp
inc
jmp
divb
lcall
jo
lock
push
inc
inc
ljmp
xor
test
cmp
add
or
lods
sub
and
jp
dec
fimuls
in
cmpsb
xchg
orb
mov
inc
pop
lods
das
adc
fisubs
out
mov
outsb
loop
test
fwait
xchg
inc
push
jo
inc
mov
lahf
add
xor
and
pop
inc
repnz
cmp
mov
fisttpll
mov
add
or
add
xchg
popf
xchg
rep
js
adc
je
mov
adc
jg
push
lds
hlt
shll
daa
jnp
cli
dec
pusha
jo
or
and
jb
add
mov
arpl
push
add
add
leave
adcb
out
dec
cmp
pop
dec
and
and
out
add
mov
cli
test
push
jnp
leave
sbb
imul
cltd
aam
stc
lock
in
ret
mov
lret
add
add
ss
sarb
xchg
in
jnp
adc
sti
int3
movsb
sbb
hlt
repnz
add
fidivl
xor
arpl
es
shrl
sbb
imul
xor
push
jp
jno
ffree
scas
sub
push
push
jb
pop
xchg
dec
xchg
sti
or
popa
adc
xor
loopne
movsb
jmp
cmp
add
adc
pop
or
mov
bound
xchg
imul
mov
int3
mov
add
cmp
fimuls
xlat
dec
aam
add
insb
inc
adc
push
sub
pop
xchg
mov
sbb
fnstsw
mov
rcll
mov
sub
pop
or
loope
cltd
or
or
fdivrl
or
in
lea
dec
aad
cld
out
leave
iret
inc
push
xor
xor
mov
jmp
push
push
leave
sub
mov
pop
add
jge
clc
jo
call
cmp
xchg
xor
fstl
shll
jge
ret
xchg
enter
mov
call
cmp
lret
mov
out
enter
jbe
aad
and
loope
idivl
jo
leave
dec
repnz
rorb
push
sahf
adc
testl
fnstcw
aam
stos
rcl
fidivrl
or
cltd
in
push
call
insb
push
or
xchg
xchg
push
xchg
orb
mov
push
mov
mov
adc
sub
add
pop
pop
jp
jecxz
push
mov
les
or
jmp
in
mov
sub
or
std
sbb
das
aad
icebp
in
and
sub
xchg
and
jne
xor
idivb
or
ret
or
jmp
mov
js
in
outsb
or
mov
jp
daa
movl
aam
clc
or
divl
scas
lret
push
aam
sub
mov
arpl
xor
mov
push
inc
addr16
into
cwtl
bound
push
out
lods
mov
lahf
push
xor
and
inc
jg
jno
xchg
cmp
inc
lods
mov
mov
mov
in
test
mov
enter
andl
jmp
lret
pop
fsin
ret
mov
pop
fwait
aaa
shll
cmp
adc
lods
sub
cmp
push
dec
mov
inc
stc
mov
add
insb
repnz
mov
loopne
jge
les
call
mov
mov
pop
dec
mov
in
sarb
das
xchg
cmpsb
inc
inc
or
mov
hlt
into
add
adc
and
pushf
aam
xchg
dec
repz
xchg
xchg
jb
push
icebp
call
or
or
mov
mov
dec
push
mov
js
pop
les
nop
out
jmp
inc
inc
mov
fxam
add
mov
clc
xlat
inc
or
bound
idivl
mov
sbb
mov
popf
in
repnz
push
std
dec
mov
xchg
loope
jo
push
xor
mov
dec
jge
call
mov
aad
xchg
mov
fldcw
das
fwait
daa
pop
jbe
cmpsb
mov
leave
enter
mov
push
or
stos
loop
outsb
lret
mov
inc
pop
or
enter
sub
jae
jmp
add
jbe
outsl
push
mov
das
xor
mov
andb
es
xchg
sbb
mov
sub
mull
bound
loopne
and
fdivl
inc
cs
mov
mov
scas
xlat
or
scas
sbb
pop
lret
in
test
filds
jmp
and
add
insb
dec
lret
daa
loop
and
inc
mov
mov
ret
mov
repz
push
or
aas
cli
fwait
lea
lahf
pop
lods
and
sbb
add
mov
popf
push
sbb
adc
xor
pop
xor
dec
mov
jl
pop
outsb
and
call
mov
xchg
stc
sbb
jmp
mov
insb
mov
pushf
pop
and
push
imul
insl
mov
stc
add
popf
xor
push
mov
int3
mov
or
ss
cwtl
sbb
push
push
sub
adc
adc
cmc
cmp
mov
mov
test
mov
mov
mov
xor
movsl
jg
js
into
adc
iret
sti
mov
call
xor
leave
mov
cmp
inc
xchg
mov
icebp
xchg
sbb
xchg
mov
cwtl
add
xchg
or
popf
fcomps
rcrb
inc
xchg
and
jne
addb
jns
insl
mov
je
in
icebp
mov
mov
int3
xchg
andb
jg
sahf
xchg
int
mov
pop
in
jnp
pop
mov
jg
inc
cmpsl
sub
scas
repnz
nop
repnz
or
push
mov
cmp
sub
icebp
call
mov
dec
loop
test
ja
imul
xchg
push
popf
loope
movsb
flds
std
jo
push
clc
cmp
push
push
movsb
stos
adc
popf
mov
fnsave
jno
inc
cmpsb
and
xchg
mov
mov
push
lret
xor
sarl
shrl
mov
das
cwtl
mov
xor
jmp
stos
lret
sub
scas
aad
sbb
lock
mov
jno
shr
cmp
and
sarl
pop
scas
scas
das
pop
ja
mov
push
xchg
push
in
push
fiadds
std
dec
cwtl
sbb
int
out
push
outsl
mov
daa
xchg
pop
pop
scas
mov
xor
pop
sub
xchg
addr16
addb
push
cmp
roll
pop
jo
mov
lret
icebp
push
call
mov
in
push
test
and
push
add
cld
mov
add
xchg
popa
adc
aad
cld
xor
or
dec
jbe
inc
mov
adc
mov
loopne
leave
and
push
dec
test
jmp
out
mov
adc
jmp
xchg
xchg
push
sbb
cwtl
imul
xchg
and
cs
test
sub
outsl
out
sub
outsb
repnz
mov
cmp
enter
jl
push
fistl
adc
mov
cmc
add
mov
das
out
stos
push
and
stos
sub
inc
shl
test
inc
lcall
sbb
add
xchg
ss
mov
sub
or
orl
adcb
mov
mov
dec
mov
and
sub
gs
or
or
sbb
ret
mov
clc
shl
popa
push
mov
insl
cmp
cmp
mov
imulb
call
pop
dec
je
cli
out
or
cmp
pop
in
push
sub
enter
shrl
sub
cltd
pop
ds
clc
imul
inc
int
push
cmp
stos
jg
out
icebp
push
xchg
inc
sahf
repnz
xchg
sbb
push
cmp
loopne
gs
adc
fld1
pop
jno
or
fadd
call
pop
and
and
pop
add
call
stc
push
xchg
mov
insb
sub
or
jno
jmp
enter
call
in
icebp
jb
mov
adc
dec
sub
pop
push
jb
addl
mov
pop
pop
test
adc
xor
lret
pop
dec
pop
mov
cltd
sbb
sub
sbb
jmp
imul
or
mov
mov
sarb
inc
aaa
pusha
and
push
or
push
std
leave
pop
insl
sub
test
fwait
and
lahf
fstps
test
xchg
jle
mov
xchg
add
xorl
in
add
and
leave
mov
call
sahf
cmp
xor
imulb
push
arpl
push
outsl
dec
mov
mov
sbb
btc
sbb
into
add
addb
aas
push
shll
or
or
shl
pop
addr16
jp
cmp
ljmp
cwtl
and
sarb
stc
mov
lods
or
mov
cwtl
adc
dec
or
flds
mov
or
fsubl
dec
cmpsb
clc
fsubrl
push
push
pop
cmp
add
mov
push
cld
js
aas
add
loope
icebp
pop
popf
int
loopne
and
shl
or
lods
xchg
enter
andl
and
test
imul
add
data16
mov
mov
movsl
add
xchg
call
shl
mov
bound
aaa
pop
add
push
inc
sar
pop
xchg
add
rclb
scas
dec
sahf
or
and
xchg
jne
mov
jecxz
dec
mov
cmc
sub
mov
lods
dec
xchg
or
sahf
and
mov
push
sub
enter
cmp
mov
call
mov
mov
pop
mov
push
mov
jmp
pop
das
iret
cs
xor
jb
dec
inc
mov
push
or
and
mov
add
mov
call
int3
xchg
fcmovb
add
sbb
scas
mov
in
mov
jl
sub
bound
inc
dec
out
dec
pop
les
or
dec
mov
sub
jae
pop
cmp
stos
loopne
les
sahf
jb
mov
iret
scas
sbb
orl
cld
and
cwtl
or
pop
pop
std
sbb
out
pop
pop
push
inc
mov
mov
lret
outsb
xchg
xor
in
clc
inc
jne
xor
add
pop
push
push
in
pop
or
push
push
mov
out
icebp
mov
mov
adc
pop
nop
jp
xor
pop
add
cmpsb
xchg
aaa
sbb
pushf
into
push
call
inc
mov
xchg
repz
fdivp
sub
mov
add
sub
jo
lret
jmp
push
bound
sahf
clc
fs
mov
pop
pusha
sub
cwtl
sbb
frstor
and
cwtl
mov
repz
mov
cwtl
scas
xchg
and
js
add
clc
mov
sahf
testb
je
xor
cwtl
add
mov
ret
mov
ret
sti
loopne
pop
mov
cwtl
mov
dec
jmp
or
out
jne
adc
pop
add
inc
add
pushf
or
and
pusha
push
adc
dec
add
mov
int
cltd
mov
fwait
outsb
mov
ret
cld
add
mov
mov
xchg
mov
pop
sbb
cmp
pop
enter
mov
adc
enter
lcall
jo,pt
cltd
mov
in
xor
fs
add
push
scas
xchg
cmpsl
les
pop
xchg
testl
lea
or
push
outsb
ds
and
mov
or
aam
ficomps
fs
popf
inc
mov
pop
lret
roll
add
xrelease
mov
or
sub
fnsave
js
pop
mulb
daa
lods
cmpsl
dec
adc
push
mov
out
fmull
fstps
jne
lods
xchg
insb
or
nop
and
cmp
sub
stos
push
cmpsl
mov
scas
test
xlat
jno
ret
mov
faddl
sahf
mov
les
lret
cmp
call
jl
fadd
call
adc
jo
sahf
int3
mov
mov
mov
inc
sbb
icebp
push
add
mov
pop
adc
xchg
movsl
push
repnz
ror
dec
test
movsb
lcall
rorb
or
stos
arpl
sti
adc
mov
jl
jo
jne
sbb
push
push
pop
call
inc
jl
xchg
or
icebp
lret
cmc
adc
aaa
and
mov
mov
arpl
pop
nop
jge
filds
call
test
fcomi
lods
push
jge
pop
and
ss
jmp
dec
int3
push
cmp
lahf
hlt
dec
and
mov
adc
pop
adc
rcrb
jbe
and
icebp
pusha
jmp
mov
mov
add
jbe,pn
int3
lea
in
stos
xchg
or
xor
jmp
subb
pop
movntps
mov
jmp
sbb
mov
ror
sub
imul
insb
pop
ret
pop
ror
xchg
mov
push
jp
cmp
sbb
out
jl
xor
pop
mov
test
and
jnp
scas
push
or
push
add
dec
dec
add
shl
push
outsb
test
mov
out
test
and
lahf
call
add
and
les
adc
sarl
push
mov
dec
sub
pop
jmp
or
jbe
dec
push
daa
xor
push
add
dec
fcoms
clc
jne
mov
popf
push
push
pop
mov
sbb
pushf
xor
push
iret
pop
pop
sub
inc
push
test
mov
inc
or
jo
jno
sub
sub
inc
dec
mov
mov
pandn
push
mov
shrl
or
mov
mov
add
inc
addb
das
and
dec
jmp
mov
pop
cs
and
cld
ds
imul
or
sti
pop
mov
cmp
xchg
inc
cmp
and
repz
mov
pushf
xor
xor
xor
ret
loopne
lahf
jae
sbb
in
sub
shll
icebp
push
mov
je
mov
mov
mov
mov
pop
jge
push
sub
mov
inc
mov
fisubs
push
cli
repnz
pcmpeqw
mov
pop
fs
sahf
inc
inc
stos
aas
ja
sub
test
xchg
popf
cmp
insb
xlat
xlat
push
ret
inc
pop
fisubrs
jp
in
jg
inc
cmp
sbb
jecxz
mov
stos
lret
jmp
repz
addr16
xor
aas
repz
or
repz
push
movsl
sub
jbe
sarb
push
sub
and
push
pop
icebp
pop
int
or
popa
sub
inc
xchg
jns
add
mov
fists
aad
lret
cwtl
or
lahf
pop
out
push
and
and
xor
loope
adc
or
xor
xchg
mov
inc
and
hlt
jecxz
adc
cmpsl
push
es
push
mov
stos
adc
out
jb
mov
xor
mov
lds
cmp
push
or
dec
push
daa
int3
mov
pop
popf
push
add
ret
test
jl
ficoms
rol
and
dec
wbinvd
dec
call
or
call
pop
insb
add
mov
adc
push
xchg
mov
cmpl
inc
or
push
push
hlt
testb
adc
loop
fnstenv
jmp
adc
inc
jb
loop
and
and
xor
xchg
mov
fs
jg
cwtl
insb
pop
pop
rcl
mov
and
jb
daa
lret
or
push
fisttpl
xchg
inc
mov
cwtl
aaa
call
pusha
jb
mov
daa
test
push
cmpb
jns
or
rorl
jmp
mov
jno
push
insb
imul
push
sbb
out
mov
add
jo
mov
and
icebp
pop
pusha
dec
fidivl
inc
or
jbe
or
shrb
inc
loop
jmp
test
lret
mov
in
lock
cwtl
test
js
inc
enter
push
insb
inc
daa
sbb
add
inc
push
push
cmpb
jo
dec
out
jmp
lods
rcr
mov
out
inc
enter
sbb
test
sub
add
ja
idiv
add
push
subb
jmp
adc
mov
gs
mov
add
xchg
sub
sbb
and
add
or
jmp
mov
leave
push
xor
out
lods
dec
jb
out
xchg
push
add
fs
inc
aad
pop
inc
push
dec
fdivs
xor
jmp
inc
inc
cmp
jmp
int
gs
and
add
lods
inc
mulb
outsb
add
sub
out
jge
push
or
mov
add
stos
icebp
sbb
mov
and
add
lea
pop
mov
mov
call
pop
mov
ljmp
add
or
mov
adc
pop
inc
jne
inc
pcmpeqd
test
add
int3
loope
inc
outsb
dec
or
sbb
test
int3
movq
add
sbb
dec
mov
dec
rcrb
cli
addr16
lret
mov
sbb
in
xchg
mov
cmp
out
lahf
push
xchg
jbe
enter
inc
add
xchg
dec
std
mov
adcb
stc
cltd
fmull
cmp
xor
dec
jns
mov
mov
jg
aaa
sbb
mov
aam
in
in
sbb
or
nop
inc
mov
subl
sbb
ret
ror
call
mov
fidivrs
dec
and
xor
call
incl
cs
outsb
pusha
cwtl
jmp
rol
adc
into
gs
pop
xorb
insl
sbb
cmp
xchg
jo
push
lods
inc
pop
mov
mov
ja
pop
xor
or
in
inc
orl
cld
ljmp
and
iret
xor
stos
test
cmpsl
ror
dec
in
xchg
adc
jmp
addb
addl
sub
icebp
ficompl
dec
pop
jg
jnp
push
pop
mov
out
mov
add
jmp
inc
call
sbb
pushf
cmc
bound
dec
pop
pop
sub
dec
jge
sbb
repnz
icebp
push
jbe
mov
push
rol
mov
cli
sbb
adc
pop
in
and
mov
push
sarb
or
cmp
cmp
jne
scas
mov
or
inc
mov
push
push
sbb
call
cs
jbe
dec
inc
mov
push
or
or
test
push
add
jl
mov
inc
and
dec
ljmp
aas
daa
outsb
push
pop
lea
movb
mov
movb
xchg
test
notl
repnz
insb
jo
and
or
sbb
ds
adc
cmp
mov
sahf
shl
fisttps
call
fisttpl
repnz
xor
cmpsb
sub
push
mov
scas
sbb
pop
cmc
cmpsl
mov
aad
mov
adcb
hlt
jp
or
mov
cli
or
aad
xchg
arpl
pop
push
and
mov
add
and
sbb
js
or
and
call
jb
popf
pop
jo
push
outsl
je
dec
cmp
mov
loop
inc
data16
test
sbb
call
aaa
jmp
cmp
jae
push
outsb
add
or
punpckhbw
lds
jmp
adc
or
in
mov
lret
call
xor
push
and
mov
pop
xchg
fisubs
mov
daa
lcall
mov
sub
and
jo
scas
mov
in
test
add
mov
sahf
loopne
hlt
pushf
or
bnd
sbb
xchg
or
es
jg
xchg
pop
ss
xlat
mulb
mov
xchg
dec
js
ret
insl
fadds
cmp
inc
div
stos
mov
sub
je
cli
xorb
call
dec
jge
mov
shrb
daa
mov
dec
arpl
xchg
into
pusha
xchg
ljmp
testb
inc
pop
mov
sarl
inc
push
add
aaa
imul
cli
inc
mov
fsts
mov
jmp
cld
imulb
sbb
mov
test
mov
shlb
adc
pop
jge
add
push
push
out
mov
mov
mov
inc
call
cltd
gs
jae
sti
and
pop
inc
adc
xchg
and
add
cmp
sub
jge
xchg
shlb
jae
mov
dec
lret
inc
imul
out
pop
add
mov
xor
daa
mov
jns
packssdw
repz
and
pop
xchg
cmp
leave
jle
or
jo
into
ds
cmp
xchg
add
in
mov
mov
dec
sub
add
push
mov
mov
stos
dec
shrl
mov
and
sub
jb
mov
std
cmpsb
adc
call
sub
mov
add
hlt
and
shll
ljmp
dec
mov
xchg
and
dec
jge
dec
adc
idivb
mov
lcall
mov
enter
lret
rclb
inc
push
or
xchg
dec
push
xchg
sbb
mov
dec
loop
or
jmp
out
jno
shlb
fdivr
sub
shlb
jmp
stc
lods
mov
push
mov
adc
jmp
loope
or
pop
rol
dec
sbb
jecxz
lock
mov
repnz
or
mov
sub
fdivp
cli
sub
dec
dec
and
jmp
cmpsl
sub
outsl
jae
lret
lret
mov
outsb
add
rsqrtps
add
shr
xor
push
nop
pop
xchg
mov
int3
hlt
mov
sti
daa
push
xor
imul
dec
pop
in
mov
xchg
xor
mov
cwtl
mov
add
cld
cmpsl
mov
in
in
dec
mov
add
mov
enter
call
test
pop
jl
xor
dec
mov
and
push
xorb
mov
mov
test
scas
mov
data16
pop
xchg
idivb
incl
in
leave
jmp
fwait
nop
cmp
outsb
movsl
mov
push
dec
popa
enter
cmp
inc
pop
xor
mov
xchg
cmc
lock
pop
mov
shrb
cmc
dec
popf
aam
jmp
jg
adc
das
push
inc
repnz
call
jmp
mov
push
mov
xor
or
dec
push
jns
sub
fwait
jnp
call
or
pop
dec
cmp
out
mov
inc
add
cld
pusha
xor
jmp
pop
fdivrl
jae
fisubrl
incb
jb
push
in
inc
add
pop
bnd
and
jp
push
adc
icebp
add
mov
and
dec
and
cmp
data16
mov
sti
repz
cwtl
xor
ljmp
adc
mov
sbb
or
inc
hlt
xor
mov
push
push
cmp
rorb
adc
mov
outsb
fdivl
mov
ror
aam
push
or
sbb
xor
mov
mov
sbbb
cmp
dec
pop
rcr
clc
pop
out
and
sti
test
jns
push
add
lret
sub
in
cld
mov
arpl
sub
pop
pop
xor
cld
xor
pop
jl
ret
push
fstps
cmc
cmpsb
mov
fistpll
lods
loope
mov
push
or
insl
pop
cltd
xor
push
or
sbb
mov
dec
jns,pn
cli
dec
inc
jecxz
inc
or
dec
xor
movsl
je
add
pushf
pushf
pop
inc
jmp
sub
decb
mov
jmp
xchg
mov
leave
and
add
fldcw
sbb
sti
lea
cmpsl
mov
add
push
sbb
sarl
jo
test
sbb
xlat
sub
or
push
test
pop
mov
jno
and
ret
xchg
repz
mov
mov
lock
mov
cmpsb
jnp
into
popf
int
orl
leave
clc
shrb
mov
int3
jmp
loopne
push
popf
and
fcompl
xchg
mov
mov
dec
jmp
int3
cmpsl
test
call
push
lcall
pop
sahf
add
xor
jo
pushf
pushf
xor
jne
and
pusha
push
xchg
push
mov
call
push
xchg
adc
movsb
or
sub
xchg
imul
and
jmp
xchg
test
or
sbb
leave
addr16
mov
imul
fdivl
jno
mov
adc
jp
sbb
mov
or
mov
pop
leave
es
add
divl
subb
mov
out
or
add
cmp
jnp
mov
push
in
dec
or
dec
pop
adc
cmp
test
ret
push
push
add
sbb
mov
test
xor
test
pushf
jnp
mov
dec
add
aad
inc
jmp
push
push
sbb
aam
lods
fchs
mov
outsb
rcrl
xor
or
sbb
or
fwait
popf
shrl
filds
push
jb
adcb
das
cmp
xchg
inc
lahf
fcoml
or
stos
push
jle
xor
push
mov
shrb
test
jecxz
lock
lret
test
cmp
insl
mov
lahf
add
jmp
cmp
jno
je
daa
mov
out
mov
push
or
cli
sub
scas
pusha
ficoms
mov
mov
jecxz
push
push
xor
pop
fsub
sub
sbb
cmpsl
loopne
mov
aaa
sub
dec
les
out
insl
jge,pt
repnz
jmp
iret
ud2
push
sbb
cmpsb
shr
push
jbe
mov
pushf
mov
xor
shr
ljmp
stos
fs
call
fisttps
sarb
fstpt
jl
repnz
shr
mov
insb
pop
or
push
mov
pop
push
sub
lea
jno
es
inc
and
push
arpl
jmp
push
cmpsb
dec
addr16
cli
and
aam
mov
flds
cmp
inc
xchg
xor
sti
in
push
push
lock
mov
mov
in
rcrb
xchg
pop
jnp
pop
arpl
add
mov
mov
pop
or
aaa
xor
inc
imul
dec
push
repz
daa
adc
mov
popa
dec
and
dec
mov
cmp
ret
or
fisttpl
jmp
cmp
stc
push
jo
pop
aam
xor
mov
mov
add
pop
or
aam
dec
lahf
std
add
pop
lods
or
dec
lea
cmp
fsubrl
popf
jae
or
mov
repz
inc
dec
jecxz
rorl
add
push
int3
mov
push
inc
xor
xor
jo
cmpb
jecxz
jmp
out
sbb
pop
inc
xor
cmpsb
mov
push
push
mov
push
mov
jmp
lods
inc
mull
mov
cmpsb
sub
push
push
xchg
xor
jae
es
sar
push
seta
imul
rorb
dec
or
cmpsb
cmp
sub
rcll
mov
movsl
fcoml
xor
mov
sbb
xchg
xor
bound
sub
cmp
in
lahf
or
jmp
loop
movsb
lcall
adc
jae
cmc
dec
cltd
repz
int3
inc
stos
test
jnp
sub
xor
nop
push
mov
inc
mov
adc
or
sub
clc
mov
push
and
loope
daa
clc
xchg
add
sub
or
cmpsb
in
or
stos
push
pushf
pop
inc
sbbl
jle
push
std
add
mov
mov
lahf
adc
mov
dec
jg
shll
sar
popf
enter
je
jns
and
mov
mov
cmp
cmp
push
addr16
and
gs
pop
mov
mov
shll
pop
or
stc
add
mov
push
and
or
push
or
push
pop
xlat
xchg
jnp
lahf
push
test
movsb
xchg
into
inc
popf
shr
into
push
jp
ljmp
sub
jmp
mov
mov
into
sub
decl
xorb
sbb
inc
xchg
mov
lret
rorb
push
xchg
pop
idiv
or
jmp
mov
adc
push
mov
imul
mov
iret
jno,pt
jb
xor
xchg
dec
dec
inc
or
out
jb
stos
xchg
loopne
cli
inc
adc
push
bnd
hlt
or
jge
lods
pop
mov
mov
lock
jb
dec
xor
xor
or
ja
inc
pop
cld
jae
mov
add
inc
and
repnz
pusha
fisubrl
rcr
push
std
pop
or
scas
mov
fistps
cmp
out
std
add
loop
jge
mov
xchg
outsb
repnz
jne
pop
mov
cmovnp
mov
mov
loopne
mov
sbb
jnp
rcll
cmc
or
push
jns
add
leave
lret
and
repz
nop
and
jbe
xor
pop
mov
mov
add
scas
inc
sbb
ja
cmc
das
fsubrp
push
adc
pop
xlat
xor
jmp
jmp
rcr
pop
xlat
push
or
lock
adc
out
stos
lcall
fistps
int
fsubs
daa
mov
jl
ret
fisubrs
or
jp
pop
push
enter
add
in
aad
and
hlt
cwtl
subb
adc
mov
and
sub
inc
add
dec
mov
or
dec
mov
loopne
testb
pop
mov
ret
ljmp
fisttpl
xchg
pop
inc
out
stc
popa
stc
mov
das
jb
adc
push
test
pop
psadbw
sarb
or
xchg
or
and
jmp
nop
ljmp
mov
mov
in
movsl
mov
mov
popa
dec
sub
rorb
je
dec
pop
dec
xchg
mov
pushf
jmp
stc
pop
leave
sbb
jl
jo
push
addb
divb
mov
sbb
add
lock
inc
mov
and
mov
xor
jp
mov
iret
mov
stos
pop
aam
xor
push
jmp
js
aaa
xor
clc
mov
jns
movsb
loopne
adc
pop
or
and
sub
insl
mov
call
xor
sbb
add
movsb
loope
ds
aam
imul
lahf
lea
aad
es
inc
out
pop
dec
jb
pop
aam
jb
mov
sbb
aaa
add
adc
into
inc
icebp
mov
mov
mov
mov
les
pusha
in
insl
imul
imul
or
sbb
ret
push
loope
outsb
pop
xor
push
aam
jb
jnp
repnz
js
fstpl
xchg
out
xchg
ss
cmp
call
out
xor
push
push
out
add
pop
pop
mov
or
mov
mov
cli
jnp
or
dec
sub
or
xor
sub
shrb
dec
or
mov
mov
xchg
rclb
push
lcall
mull
add
sarl
mov
mov
cmc
pop
xchg
dec
dec
adc
scas
jns
sbb
loopne
and
lret
mov
fnsave
sar
sbb
dec
es
in
aam
adc
ret
push
mov
ljmp
xchg
ror
stc
add
mov
cmp
shll
loop
xor
insb
data16
call
stos
pushf
shrb
mov
mov
sbb
imul
popf
inc
mov
sub
jns
daa
inc
pop
jmp
cmp
sarl
subb
xchg
sbb
loope
mov
dec
fcoms
das
inc
and
enter
dec
test
xor
imul
fucomp
cmpsb
cmpl
jge
push
xor
push
jae
push
or
call
out
cmp
addr16
xor
scas
loop
cmp
and
lea
or
mov
lret
pop
push
pop
push
jmp
sbb
sub
roll
daa
pop
cmp
push
outsb
mov
xchg
lea
cmp
cpuid
pop
or
sbb
repnz
inc
xchg
or
sub
ja
mov
jg
cltd
pop
insb
jnp
mov
sub
stos
dec
mov
jo
and
js
dec
mov
orl
pusha
pop
ljmp
mov
fcmovne
mov
loop
xor
lret
push
add
or
call
mov
arpl
mov
add
sti
add
jo
cmc
or
pop
mov
sub
or
jbe
aam
adc
mov
and
push
ret
add
add
lds
mov
or
verr
jge
pop
inc
insl
sbb
inc
imul
ret
icebp
add
mov
shr
dec
mov
or
enter
daa
xor
cmpsb
pushf
push
push
call
dec
addl
gs
add
fldcw
int3
adc
add
neg
mov
pop
sub
outsl
inc
das
addb
je
inc
or
lock
mov
ret
pop
xchg
push
jl
inc
cld
daa
rorb
ja
mov
mov
cmpsb
and
jns
dec
punpckldq
movsl
add
xchg
adc
daa
pop
jns
jo
push
mov
mov
cld
sub
xlat
sub
dec
ret
or
jb
fdiv
idivl
mov
or
orb
movsl
adc
xor
adc
or
xor
jmp
repz
push
push
adc
jl
incb
and
jecxz
or
repnz
and
sub
mov
inc
pop
xchg
or
call
sar
test
das
in
mov
pop
mov
imul
or
adc
push
sbb
jo,pn
cmpl
add
xchg
add
rclb
xchg
mov
xor
jo
adc
xor
enter
ja
mov
cwtl
int3
jne
mov
cmp
in
jmp
and
push
sbb
daa
aas
jl
icebp
inc
xor
fdivrl
mov
mov
adc
mov
dec
inc
int
jo
push
pop
call
sub
dec
repz
push
leave
xor
je
adc
or
mov
mov
inc
or
dec
enter
push
or
sarl
xor
lods
scas
sbb
aaa
rol
test
dec
add
and
or
clc
mov
xchg
test
push
orb
pop
mov
cmp
sbb
mov
out
cmp
and
lret
ret
out
movsb
dec
mov
or
or
mov
mov
add
sub
lahf
mov
cwtl
add
addr16
mov
gs
mov
orb
jl
frstor
push
call
into
push
scas
push
cli
imul
cmp
icebp
push
andl
add
add
sbb
adc
fsub
dec
xor
push
inc
int3
lods
or
and
jmp
or
daa
repnz
mov
push
mov
imul
mov
std
xor
mov
jmp
pop
mov
mov
and
aad
lds
jecxz
jge
pop
mov
inc
mov
pop
sbb
or
lcall
std
pop
insb
aad
rdtsc
les
sbb
and
sbb
cmp
push
xor
data16
shlb
icebp
dec
inc
lods
lods
in
jle
das
mov
jg
dec
daa
and
xor
push
nop
mov
sbb
cmp
push
cmpsb
or
adc
and
or
addr16
mov
add
lret
aam
icebp
jmp
push
jae
jecxz
fisubs
pop
lret
jmp
push
xor
add
pop
or
inc
or
fildll
nop
sti
and
inc
pop
mov
loopne
xchg
or
fsubrs
outsl
movsb
dec
or
fisubrl
fldcw
shrb
mov
loop
mov
xchg
jmp
or
xor
idiv
push
pop
cld
dec
outsl
xchg
push
xor
push
repz
push
fcmove
test
test
pop
cwtl
push
xor
pop
pop
jmp
and
adc
jne
call
xchg
scas
decb
push
jle
fildll
stos
or
pop
loop
mov
pop
push
push
ja
repnz
pop
xor
rcrb
ss
aaa
adc
stos
lret
inc
inc
shl
aaa
adc
xchg
xchg
movsb
or
cwtl
and
movsb
pusha
lret
repnz
fiaddl
jbe
negb
int
jmp
mov
sbb
mov
add
into
xchg
jae
hlt
mov
imul
xor
mov
add
pop
lahf
mov
adc
pop
fnstsw
sbb
push
or
aas
push
negb
jmp
pop
jae
mov
pop
inc
mov
dec
lock
mov
fucomi
idivb
dec
or
mov
adc
scas
cmp
dec
je
in
and
imul
lds
scas
ss
outsb
or
dec
xor
mov
sub
fidivrs
xor
lahf
and
push
ja
xchg
ds
ja
xchg
arpl
pop
push
cmpsb
insb
das
stos
xchg
jmp
xchg
jno
inc
xchg
cli
pop
fdivp
leave
aad
xchg
add
xor
pop
mov
rcll
inc
daa
sbbb
cmpsl
nop
or
jne
xchg
xor
xchg
call
outsb
dec
jmp
sti
or
fwait
xchg
shlb
imul
loope
dec
pop
stc
pop
xchg
int
add
adc
and
jb
push
dec
loopne
push
push
test
add
sbb
jecxz
push
repnz
pop
sbb
push
push
es
xor
hlt
out
jmp
push
cmp
adc
das
clts
daa
into
sbb
bnd
insb
cmp
call
jmp
xchg
mov
or
aad
loop
push
xchg
loop
fdivs
sub
lret
into
mov
inc
and
sbb
jb
jo
jge
jne
sub
pusha
add
jecxz
jb
out
add
icebp
inc
stos
dec
repnz
out
add
pop
jne
dec
push
sahf
cs
aaa
push
sahf
pop
in
inc
lods
sbb
cs
inc
jnp
push
out
push
jecxz
jb
adc
outsl
jmp
push
jbe
imul
jmp
and
data16
fidivrl
mov
push
inc
pop
ja
dec
or
or
jmp
pop
sbb
call
cmpsb
xchg
and
int3
pop
jmp
mov
jne
popf
aad
inc
push
cmpsl
xor
pop
push
cld
xchg
inc
cmpsl
and
dec
ret
sbb
mov
push
dec
inc
xchg
mov
sbb
sbb
mov
push
xchg
sbb
call
ljmp
jge
outsb
sub
jb
in
fcoml
push
pop
shrl
aaa
addr16
in
in
mov
out
and
cwtl
mov
ljmp
test
es
inc
stc
push
jmp
test
pusha
cmc
ljmp
pusha
ret
mov
mov
and
xor
cs
into
push
and
jnp
pop
dec
aas
add
pop
enter
lahf
jae
pop
in
sbb
dec
jmp
repnz
pop
stos
pop
cwtl
sahf
pop
ljmp
or
dec
dec
sub
or
shll
jb
pop
fwait
jge
movl
frstor
or
ret
lock
cltd
mov
mov
sbb
mov
sub
adc
or
lock
jp
jb
clc
mov
xor
lahf
and
daa
mov
fcmovb
cli
orb
or
or
xchg
sar
xor
push
xchg
mov
xor
ret
nop
cwtl
dec
add
lret
sbb
inc
pop
cltd
jne
popa
mov
call
push
vaddpd
adc
jnp
add
adc
jns
pop
dec
pop
adc
sub
and
lret
push
sub
add
stos
adc
insb
cmpl
mov
cmp
iret
sbb
jle
pop
mov
cmp
push
ljmp
mov
or
fwait
sti
push
pop
xor
push
inc
push
xor
lret
pop
repnz
call
fcmovnbe
fisttps
mov
or
push
fcoml
pop
andl
add
sbb
pop
int3
mov
leave
je
mov
or
and
jecxz
or
enter
outsl
xor
push
mov
sub
fwait
mov
cmc
pop
push
ljmp
in
out
into
xchg
nop
nop
cs
mov
jnp
mov
arpl
cmp
fs
aad
fmuls
arpl
sahf
imul
or
mov
icebp
pushf
rcrb
sbb
pop
mov
out
daa
into
xor
mov
adc
xchg
pop
fldcw
push
jmp
cmpsl
enter
out
rcrb
adc
stos
repz
daa
loopne
push
cmpsl
popf
mov
aad
mov
outsb
rcrl
inc
cwtl
dec
adc
jmp
mov
stc
mov
inc
push
fidivs
shr
sbb
mov
das
lods
inc
nop
push
sub
xchg
push
aaa
enter
push
xor
sub
call
jmp
push
xor
mov
fcompl
aad
je
mov
sub
mull
int3
xchg
ljmp
xor
repnz
pop
imul
pop
sub
push
aad
pop
outsb
jle
cltd
sahf
popf
add
cmpsl
xchg
cmp
add
push
mov
and
subb
pop
xor
mov
into
adc
jmp
je
cmc
dec
fnstenv
sub
jmp
aas
fnstsw
xchg
jbe
leave
std
int3
push
mov
push
cmp
jmp
xchg
and
js
inc
mov
test
cld
ror
pop
jo
lret
insl
mov
pop
leave
jae
addr16
adc
cmp
mov
cwtl
lahf
test
movsb
xchg
pop
stos
push
lret
pop
or
out
mov
or
in
and
inc
push
cmpw
insb
int
inc
jg
cmp
cmc
jbe
jbe
stc
filds
das
sbb
inc
int
adc
mov
aaa
adc
enter
lock
pop
pop
lcall
jp
in
mov
int3
test
fistpl
mov
dec
cmpl
shlb
stos
sahf
jb
add
loope
rcll
jno
xor
lds
jmp
push
mov
pusha
pop
sbb
cmpsl
jae
cmpsb
sub
xchg
andl
jle
push
jle
or
mov
out
inc
push
popf
sti
ss
jp
mov
push
sub
inc
xor
pushf
je
orb
loop
dec
lret
nop
mov
mov
sbb
push
aaa
dec
scas
mov
inc
stc
mov
pushf
adc
cmc
dec
les
popf
jl
inc
inc
sti
jno
call
mov
scas
pop
push
daa
mov
mov
pop
pop
jg
mov
addl
inc
das
jecxz
int
mov
insl
mov
mov
dec
push
mov
mov
nop
movsb
pop
sti
mov
or
xchg
addl
sbb
fists
shlb
push
jmp
mov
inc
mov
pop
mov
and
ret
movsl
xchg
jbe
mov
dec
mov
jecxz
cs
jmp
nop
test
mov
mov
cwtl
pop
call
inc
mov
mov
lock
push
jmp
lcall
xor
jns
testb
sub
jecxz
test
sub
inc
dec
mov
adc
dec
push
add
stc
inc
stos
push
filds
push
adc
dec
jmp
call
std
jnp
xchg
movsb
mov
push
test
pop
test
jb
inc
pop
jge
imul
dec
mov
xor
inc
mov
inc
xor
adc
fisubrl
dec
mov
add
mov
xlat
fsts
repnz
cmc
sahf
mov
xchg
call
push
push
aam
shlb
loope
enter
push
dec
add
pop
enter
mov
xlat
negb
imul
jo
add
and
dec
insl
add
mov
imul
push
and
out
fwait
mov
aas
lock
imul
stos
test
jecxz
push
mov
stos
and
push
icebp
jb
fs
mov
cwtl
rorb
enter
mov
inc
jecxz
sub
loop
xchg
dec
popf
repz
pushf
jmp
push
push
adcb
insl
dec
pop
xchg
ret
sub
mov
pop
adc
push
add
or
push
aaa
cmp
push
mov
adc
scas
xchg
sub
stos
mov
adc
dec
addr16
pop
rcrl
inc
cmp
addl
xlat
add
add
hlt
pop
mov
pop
inc
or
cmpsl
and
xchg
hlt
lcall
pop
inc
sub
push
incl
add
hlt
jge
cwtl
jg
cmpsl
mov
int
dec
inc
loop
ja
outsb
notl
les
cli
sub
sbbl
inc
dec
notl
jne
and
or
jmp
lea
ss
jb
das
push
int
test
test
add
popa
repnz
out
push
xor
pushf
add
and
nop
repz
imul
xchg
pop
imul
out
mov
pop
jge
adc
lahf
push
inc
out
les
mov
pushf
mov
test
stc
sbb
inc
rorb
jmp
jl
cltd
loop
or
cli
insb
sub
push
jmp
xor
call
je
or
jbe
pop
ffreep
xor
cmp
mov
mov
mov
mov
mov
pop
adc
xor
fdiv
push
or
into
lea
jmp
stos
push
xor
ret
mov
in
lods
mov
inc
ja
sbb
sub
int
fs
jge
inc
test
cmp
stos
xor
outsl
adc
or
cmpsl
pop
mov
xor
jns
push
mov
sub
lods
mov
psubb
or
jmp
cmp
pop
mov
xchg
lods
or
pavgw
pop
int3
repz
ljmp
adc
push
ljmp
nop
mov
inc
mov
pop
jno
orb
or
subl
push
loop
jmp
mov
xchg
add
lods
inc
push
stc
cli
cmpb
pop
xchg
mul
cmp
jne
int3
push
pop
dec
subb
std
data16
call
sbb
mov
mov
mov
rclb
mov
dec
enter
mov
movsb
testl
add
mov
into
stos
insl
fildll
pop
adc
loop
dec
ljmp
repnz
das
jo
inc
dec
mov
shll
inc
jo
or
call
cmp
ret
xlat
xor
dec
int
mov
sahf
call
rorl
push
mov
pop
sub
or
bnd
out
pusha
aaa
or
mov
xchg
out
inc
aam
scas
bnd
jge
rclb
jmp
aam
cmpb
mov
jecxz
xor
js
das
into
add
push
jnp
mov
mov
cmp
popa
repz
pop
pop
push
xchg
cmp
xchg
div
xor
in
lea
push
fsubs
notb
mov
popf
jnp
or
or
dec
jno
mov
push
xchg
mov
cmp
shll
dec
adc
filds
mov
add
stos
add
sbb
mov
pop
imull
mull
mov
pusha
pop
stos
jno
sahf
mov
mov
mov
push
sahf
test
and
test
fisubs
mov
int
lds
inc
incb
push
add
std
test
mov
sarl
or
jmp
mov
mov
aam
test
nop
xor
push
mov
sub
push
loop
mov
and
add
jo
and
push
push
adc
pop
mov
test
xor
pop
bound
ss
shrl
sbb
xor
pop
out
or
dec
lods
push
lods
stos
mov
nop
call
mov
jl
xor
cli
scas
pop
movb
call
sbb
test
pop
xchg
push
dec
test
std
or
flds
je
pusha
jmp
or
xor
in
cmp
xlat
adc
in
cltd
int
adc
sti
xor
notb
inc
add
pop
call
out
in
punpckhbw
dec
sbb
pop
cmp
sbbb
mov
lahf
mov
daa
mov
decb
and
das
adc
je
cmpb
loopne
insb
mov
add
xchg
ret
mov
jmp
inc
and
jmp
add
push
inc
push
ficoml
mov
fmuls
inc
mov
mov
or
nop
ret
push
das
push
inc
xor
call
pop
adc
or
cmpsb
push
test
push
xchg
lahf
ss
push
mov
aad
add
ja
mov
mov
jno
mov
js
xor
lret
push
mov
jecxz
jle
mov
outsb
xor
or
jl
stos
mov
pop
lahf
iret
cltd
lret
pop
ss
test
push
call
or
push
mov
dec
push
stos
je
lods
aam
lods
std
lcall
mov
pop
stc
aaa
jno
call
in
lea
sbb
dec
sbb
test
dec
stos
push
mov
mov
push
xchg
and
arpl
popa
das
ret
cmp
xor
xchg
adc
inc
push
dec
pusha
loopne
das
iret
or
sub
mov
pop
repnz
and
jg
mull
cwtl
push
int
jbe
loopne
mov
hlt
fdivrs
sub
insl
xchg
test
dec
inc
pop
mov
sub
adc
cli
push
jnp
fdivrs
test
cmp
xor
and
imul
xor
std
andl
call
pop
out
in
xor
jecxz
jmp
and
repz
das
imul
cli
xchg
inc
jo
mov
loopne
add
xchg
and
add
pushf
sahf
rorb
add
repz
aaa
lods
lock
xorl
call
cmpb
mov
dec
daa
cmp
mov
fidivrl
sbb
shr
ja
gs
mov
mov
mov
xchg
fdiv
ret
das
sbb
xor
xchg
pop
dec
fs
xchg
push
pop
cmp
outsl
dec
adcb
sub
mov
add
mov
mov
leave
sbb
adc
jg
mov
sahf
push
ss
pop
mov
mov
outsb
iret
daa
cld
fistl
insl
mov
sub
int3
sahf
int3
push
xchg
sti
icebp
or
negb
arpl
mov
fs
add
jo
or
out
and
xor
push
fstpt
dec
xchg
adc
sbb
inc
inc
sub
pop
jmp
pop
fisttps
add
pmulhuw
dec
std
in
jmp
stos
sub
rolb
and
mov
xchg
test
pop
or
jbe
and
adc
mulb
mov
clc
jnp
sbb
sub
cli
jno
enter
sub
ret
or
mov
or
push
lds
leave
les
arpl
mov
aad
or
sbb
inc
movsb
inc
mov
mov
mov
mov
or
adc
int
or
adc
mov
mov
dec
rcrl
cmc
int
jbe
xlat
lahf
jge
inc
xchg
decl
or
push
jb
shl
mov
fptan
mov
mov
fisttps
ja
cmpsb
sub
mov
outsl
or
stos
push
test
repnz
popf
inc
clc
xchg
adc
jle
inc
push
loopne
sbb
daa
dec
ja
inc
bnd
pop
mov
sub
or
adc
push
xor
adc
loope
imul
lods
popf
loope
or
insb
pusha
imull
outsb
mov
ss
fdivr
jo
sub
jo
mov
mov
pop
add
call
add
jg
in
mov
adc
jmp
incl
fiaddl
sbb
fdivrs
aad
sub
pop
cmpb
nop
aas
leave
call
cmp
or
inc
mov
and
mov
xchg
call
test
lods
sub
xor
cmp
push
jb
push
enter
stos
jae
cmp
lcall
ljmp
test
or
or
fadd
and
xor
push
jo
jecxz
inc
mov
mov
mov
lahf
les
and
insb
push
pusha
pop
leave
addr16
xchg
daa
or
push
push
mov
imul
sbb
cli
pop
pop
adc
inc
loopne
jo
insl
xor
inc
icebp
repnz
add
jecxz
or
sbb
es
add
add
push
out
xor
loopne
mov
adc
sti
cld
sbb
les
sub
or
fistl
pop
test
repnz
cmc
push
ja
dec
ds
mov
xlat
mov
filds
or
popa
or
mov
call
or
cmp
ljmp
pop
add
es
in
inc
rcrl
push
enter
push
adc
repz
insb
or
jl
push
inc
mov
mov
clc
iret
mov
inc
inc
inc
cmpsb
and
pop
fnstenv
test
adc
mov
leave
push
or
push
mov
cmp
pop
mov
fisttpll
jno
or
or
int
sbb
xchg
orl
jle
push
daa
popa
inc
mov
cli
fmull
ret
mov
dec
mov
test
jb
inc
out
mov
xchg
rorl
out
dec
pop
inc
ret
add
push
cmp
xor
pushf
lahf
dec
inc
mulb
call
cwtl
or
sub
insl
add
push
mov
in
call
push
pop
nop
sbb
mov
push
repz
je
jbe
dec
sub
fsubl
popf
add
call
test
add
cli
mov
int3
sbb
mov
or
dec
repnz
cmp
push
sub
shll
loopne
mov
push
push
mov
mov
fistps
test
lea
int
fldl
mov
xchg
lahf
scas
mov
dec
jl
repz
stos
lds
fucomp
mov
and
movsl
push
daa
inc
call
jmp
sub
lds
scas
dec
call
mov
cld
es
sbb
lods
jge
mov
in
xchg
aad
inc
call
mov
jmp
cwtl
adc
mov
mov
push
cli
push
pop
mov
push
adc
push
mov
call
stos
cli
push
inc
xchg
pop
mov
adc
inc
movsl
bt
adc
dec
mov
or
adc
into
cmpsl
pop
push
lock
in
jg
pop
mov
mov
js
jbe
std
inc
and
pop
jmp
sbb
and
arpl
push
enter
inc
or
fadd
bound
jbe
jmp
xchg
shlb
popa
dec
dec
jl
scas
int
sbbl
ljmp
push
addr16
lahf
jle
imul
or
mov
or
test
in
xchg
push
daa
add
stos
pusha
jecxz
sti
add
mov
addb
call
push
pusha
push
xchg
xor
ss
cmp
gs
add
inc
xor
aaa
push
dec
push
jmp
dec
arpl
mov
ja
and
mov
xlat
mov
out
insl
sbb
fucomp
out
push
pop
pop
or
jmp
or
pop
jmp
in
arpl
lods
xor
out
or
cmp
les
sub
and
mov
mov
cmc
pop
addb
loop
jmp
mov
js
or
call
and
sub
fwait
jg
popa
jp
mov
mov
push
nop
push
mov
sbb
add
int
mov
jmp
dec
in
ja
mov
jae
cmp
test
xchg
or
std
in
mov
or
ret
sbb
jb
jb
lahf
ret
or
iret
addl
or
rolb
pop
pop
adc
int
ret
jno
lods
jmp
lds
icebp
mov
mov
icebp
add
rclb
test
test
sub
mov
aas
inc
jl
cmc
pop
das
jo
pop
xor
packsswb
movsb
mull
dec
in
mov
leave
pop
add
lods
and
mov
jmp
or
sbb
mov
outsl
add
movb
jae
sbb
pushf
fisttps
jne
stos
push
mov
and
int3
sarb
adc
pop
jg
gs
scas
mov
lock
out
sbb
mov
punpckhbw
adc
sub
sti
dec
jo
sub
push
pusha
lret
lods
movsl
repz
and
andb
icebp
lret
dec
mov
call
jl
gs
pop
insl
ret
sub
addb
sbb
mov
push
or
xor
adc
mov
dec
xlat
popf
je
xchg
mov
dec
lock
orb
inc
adc
or
or
pop
icebp
pop
cwtl
aaa
or
mov
sbb
lahf
mov
insl
mov
xorl
and
imul
jnp
cmc
lcall
daa
mov
mov
aas
imul
mov
loop
mov
call
adc
test
cmp
push
and
push
adc
push
xor
repnz
in
or
or
pop
sbb
popf
movsl
jmp
cli
mov
push
cmpsl
scas
mull
test
cmpsb
in
pop
add
fsts
inc
xchg
pop
fistpll
mov
pop
scas
insb
or
sbb
mov
imul
pop
pop
loopne
rcrb
push
mov
pop
add
cmp
idivb
xor
or
fs
cmpsl
push
test
cmp
pushl
jle
scas
dec
pop
stos
jo
call
add
and
dec
and
nop
mov
loop
or
lods
movsl
inc
xor
mov
aas
out
push
sub
ret
mov
mov
pop
mov
or
std
in
push
inc
or
adc
pop
call
inc
stc
push
xchg
sarl
jo
sbb
lahf
or
lea
add
sar
insb
push
daa
call
inc
out
cmp
test
mov
adc
insb
cmp
jmp
inc
inc
test
pop
call
loopne
or
lds
mov
dec
push
or
mov
loope
repnz
das
roll
cmp
dec
loopne
mov
jnp
dec
jmp
or
add
lods
sub
inc
fadds
mov
xchg
rcrb
xchg
sbb
lods
in
sbbb
mov
mov
sub
mov
insb
pop
push
sbb
inc
add
adc
sub
push
movsl
xor
jp
pop
into
or
test
cmp
mov
or
mov
push
addr16
cmp
jmp
out
or
add
xchg
push
sub
popa
push
or
push
inc
mov
adc
loopne
mov
movsl
pop
popf
inc
pop
mov
pop
pop
and
mov
dec
dec
sub
ss
lret
mov
andl
inc
mov
ljmp
mov
fisttpll
mov
repz
cmp
or
repnz
lcall
or
mov
lret
xchg
or
pop
mov
mov
lahf
subb
adc
jmp
pop
jmp
add
pusha
lcall
cmc
xchg
cmp
jg
out
or
dec
outsb
mov
idivl
and
push
call
iret
insb
or
scas
cs
xor
call
mov
fst
fnsave
dec
dec
pop
jb
mov
pop
mov
pminsw
shrb
call
rcrb
lock
cld
pusha
mov
sub
call
adc
or
inc
clc
out
sahf
dec
pushf
add
mov
orb
pop
std
dec
inc
add
lds
xor
and
push
das
cmp
lret
fdivrl
ljmp
out
pop
push
outsb
sub
ljmp
lahf
icebp
pop
sub
and
xchg
sbb
aaa
cmpsb
xor
mov
cwtl
stos
outsb
sub
and
add
dec
xchg
or
arpl
adcl
fstps
push
mov
add
pop
mov
push
push
add
pop
loop
sbb
cmp
jg
mov
or
xchg
xorb
or
cmp
pop
and
inc
cmp
push
inc
sub
ds
bound
frstor
or
add
nop
aaa
add
test
add
push
rcrb
rcrb
push
push
frstor
adc
repnz
es
push
xchg
aaa
add
or
adc
adc
cmpsb
pop
mov
fsubrp
out
cmp
loop
cmc
fs
cld
push
mov
repz
and
mov
push
fs
add
cwtl
pop
mov
call
xchg
sub
popa
mov
add
cmc
fnstenv
repz
or
stc
mov
dec
scas
dec
xchg
sub
test
in
adc
mov
orl
push
ret
out
add
sbb
icebp
cmp
mov
push
jge
mov
pop
push
xchg
movsb
dec
lods
jmp
test
cltd
enter
cwtl
ja
pop
xlat
aad
jno
xor
daa
jge
imul
call
and
dec
das
xor
mov
dec
lock
call
leave
jo
xchg
inc
mov
or
repz
cmp
pop
sub
std
lret
and
fwait
or
lea
std
inc
mov
lea
mov
push
push
shll
mov
outsl
fs
in
sahf
cmpsl
mov
sub
dec
gs
or
in
repz
pushf
push
repnz
jle
cmp
push
je
push
insl
adc
mov
iret
cli
test
pop
push
add
sahf
imul
sbbl
mov
mov
jmp
aaa
roll
pop
pop
call
jmp
pop
pop
push
xor
push
sahf
leave
and
cmp
inc
jl
mov
jnp
arpl
lods
push
jno
sub
das
call
or
xchg
repnz
outsb
enter
insb
mov
imul
sbb
stos
repnz
adc
jp
sti
pop
push
push
or
cld
sbb
in
scas
sub
shll
cwtl
jge
das
mov
cmpsl
nop
push
adc
lods
inc
or
lods
sti
repz
push
fs
sarb
and
repnz
and
addr16
add
add
inc
jmp
jmp
xor
xorb
in
stc
roll
clc
lock
andl
jmp
negb
mov
pop
call
adc
movsb
add
or
add
rep
hlt
fwait
sbb
xor
popa
or
pop
es
repz
xor
jmp
je
pop
mov
dec
or
movsl
repnz
mov
insl
out
addr16
cmp
dec
sub
and
les
jb
add
stos
mov
mov
push
sub
add
shrb
dec
pop
insb
pop
loope
icebp
fwait
sbb
mov
or
les
xchg
add
movl
std
or
inc
jp
popf
add
loop
popf
and
test
roll
pop
in
push
imul
ds
cwtl
push
jne
aad
inc
data16
push
test
jmp
fs
lret
sub
call
adc
clc
daa
mov
mov
jb
insb
fcmovb
dec
xor
add
pop
mov
sbbl
nop
movl
sbb
das
icebp
dec
cmpsb
cs
or
lret
dec
inc
push
ds
or
repnz
test
pop
mov
shr
xchg
pop
das
cli
or
push
cli
xor
push
lret
inc
xchg
jecxz
or
pop
daa
sarb
pop
negb
cmc
sbbl
and
fsubrl
inc
mov
xchg
mov
pop
dec
stos
cld
lcall
outsb
test
sbb
cltd
mov
push
outsl
mov
leave
pop
out
mov
fistps
add
daa
inc
fidivrs
cmp
movsb
mov
sbb
cli
pop
mov
fucom
arpl
mov
jl
ds
and
shl
pop
stos
xor
lds
xor
lea
xchg
stc
aas
mov
int
loop
cmp
jb
xlat
add
sbb
cmpsb
lret
mov
mov
test
popa
dec
imul
scas
pop
fistpll
and
sbb
jnp
cmp
cmp
loopne
xor
xchg
xor
out
sub
repz
imul
mov
daa
sub
hlt
das
leave
jb
xchg
int3
aad
sbb
mov
lret
dec
add
outsb
int
adc
xor
mov
or
sbb
cmp
fcmovnu
xchg
mov
push
popf
jl
xor
loopne
cmp
add
adc
mov
mov
or
cmp
push
fldcw
insb
push
dec
adc
js
fs
rolb
mov
mov
or
rcrb
and
inc
mov
xlat
dec
loope
ss
add
mov
es
pop
inc
in
jno
xchg
out
repnz
mov
stos
dec
inc
insl
push
fsubl
js
std
nop
jmp
xor
in
jno
or
mov
ss
mov
push
jl
dec
cmc
lret
fcoml
xor
mov
inc
push
pop
push
jmp
lock
mov
es
mov
and
mov
popf
push
and
mov
inc
or
mov
movsb
popa
jns
xchg
inc
ret
and
fs
ret
loop
mov
pop
seto
inc
dec
jne
push
pop
shr
sub
inc
pop
pop
icebp
push
cmp
sahf
sub
mov
call
push
xchg
call
mov
xor
mov
inc
pop
inc
in
sarl
add
sub
push
mov
dec
pop
cmc
adc
push
les
pop
cmpsb
lcall
or
mov
bound
cltd
push
add
push
scas
aad
xchg
roll
jge
iret
repz
test
sti
xor
loopne
xor
jl
push
xchg
mov
xchg
mov
xor
dec
out
cmpsl
and
inc
orl
hlt
test
inc
fdiv
dec
iret
addb
fisubs
adc
sbb
and
call
fdivrl
rcr
fisttpl
out
or
push
cmp
sbbl
pop
mov
cmp
repz
xorb
popf
in
mov
dec
imul
push
loop
mov
imul
push
insl
sub
mov
xchg
add
mov
outsl
sbb
gs
pusha
ficomps
push
cwtl
adc
mov
and
xor
stc
fmull
push
fcompl
cmpsb
js
movsb
dec
mov
pop
xchg
pop
cmpsb
sti
add
mov
or
and
cmp
add
lods
inc
sbb
mov
movsb
fmul
lret
and
dec
and
in
rorb
lahf
mov
iret
pop
iret
and
xchg
mov
out
test
mov
mov
or
add
xor
adc
cmp
and
leave
cmpsb
outsl
test
cwtl
push
jmp
into
call
push
cli
pop
inc
idivl
cmpsl
cwtl
mov
xlat
cli
dec
in
orb
loop
adc
and
ljmp
dec
loop
lret
mov
popf
outsb
int3
add
xchg
and
test
add
shrl
inc
adc
jnp
push
sub
lds
xor
mov
inc
or
gs
sub
ljmp
xchg
sahf
je
ror
ja
pop
add
jge
pop
mov
dec
add
ss
mov
xor
mov
push
in
push
lock
pop
popa
gs
add
mov
jmp
dec
inc
add
push
and
lods
or
pop
cwtl
xor
outsb
in
add
push
jg
sub
call
sti
xchg
jno
push
ss
arpl
xor
in
jns
lock
xorl
mov
cmp
popl
shlb
pop
push
lret
dec
jmp
mov
cli
xor
sbb
push
mov
sti
cmp
pop
imul
mov
out
fisubs
insl
inc
jne
lock
push
jl
pop
or
pop
adc
adc
pop
jle
or
mov
dec
or
cs
mov
jo
and
push
jge
cmp
jle
inc
outsl
mov
add
push
mov
push
jp
fcomps
data16
jns
subl
addl
mov
sub
mov
out
aaa
mov
call
fdiv
sub
loop
mov
and
lods
or
jne
dec
negb
ret
lcall
pop
jmp
loop
cmp
imul
pop
push
fs
inc
push
mov
push
lahf
push
add
outsb
test
jle
mov
mov
pushl
mov
fwait
jmp
pop
arpl
mov
inc
xor
lret
shrl
mov
jo
jmp
lahf
push
and
mov
das
icebp
xor
int3
movsb
popf
push
insb
into
cwtl
mov
test
mov
repz
and
cmp
dec
jmp
mov
inc
cli
out
cwtl
cs
xor
imul
int
or
rcl
dec
mov
xchg
sub
add
jecxz
jmp
jb
add
ljmp
push
jp
or
ret
mov
ljmp
repnz
mov
inc
test
or
into
mov
call
pop
or
imul
test
test
inc
ljmp
test
mov
or
or
fxch
pop
arpl
out
xor
push
sub
mov
mov
add
cmp
jmp
inc
cmpsl
xlat
lods
inc
sub
sahf
int3
pop
sub
add
aaa
mov
pop
cmovg
xor
adc
add
xchg
add
pushf
into
cli
leave
sbb
cmp
mov
mov
sub
inc
daa
call
fldenv
lea
addb
notl
stos
loopne
lods
mov
inc
dec
push
jnp
xor
jbe
pop
imul
mov
dec
je
imul
call
xor
inc
rcrb
dec
push
dec
mov
or
repnz
pusha
jo
ja
dec
add
or
dec
xor
subl
cld
jb
dec
push
mov
xchg
cli
xchg
outsb
pop
int
mov
cmp
cmp
movsl
aaa
ret
jns
and
out
inc
fisubrl
or
lret
adc
jp
cltd
arpl
andl
mov
cmp
imul
mov
lahf
cmp
inc
push
andb
xchg
orb
inc
aam
dec
inc
ss
jmp
push
cltd
cmp
enter
lea
jmp
fsubs
popf
aam
lahf
imul
inc
jmp
gs
imul
fdiv
test
inc
push
mov
in
outsl
loop
push
daa
and
lods
popf
cmc
jecxz
lahf
push
adc
add
cmpsl
add
outsb
push
or
int
enter
lock
call
inc
pop
mov
fmuls
loope
mov
imul
pop
sbb
and
cli
sub
ret
sbb
or
add
psrlq
shlb
sbb
test
jnp
out
cmc
sar
and
repnz
mov
mov
inc
sbb
pop
insl
std
int
cmp
add
lea
cltd
bound
cs
inc
add
jmp
add
incb
cmp
icebp
dec
inc
or
nop
test
cmp
jnp
mov
fnsave
mov
xor
jno
or
mov
pop
shlb
sbb
sbb
xchg
lcall
aaa
insb
jno
push
mov
push
call
or
insl
add
jge
leave
mov
es
test
jl
jae
aaa
dec
sbb
hlt
push
adcl
or
push
stos
jmp
mov
nop
cli
sub
sub
or
ficomps
or
mov
sub
mov
loop
pop
cld
out
cld
mov
into
sub
roll
push
out
mov
icebp
jg
enter
loope
enter
je
and
subb
or
cld
clc
cmpsl
and
or
dec
dec
scas
cmp
data16
int3
scas
in
shll
mov
repnz
dec
or
int
dec
inc
or
jecxz
out
sti
dec
repz
aam
outsl
loopne
jmp
push
adc
loope
adc
sbb
je
repnz
leave
jae
xchg
ja
in
mov
add
bound
lods
cmp
mov
fisubs
cmc
cwtl
xor
cld
je
push
cmc
mov
ss
mov
sub
cmp
sbbb
push
jge
popa
jo
icebp
sbb
sbb
fsub
or
in
and
cmp
or
mov
inc
lock
add
pop
inc
or
pop
repz
add
mov
xchg
dec
dec
sub
push
jmp
sar
pop
ss
push
add
pop
jne
inc
das
insb
pop
jmp
test
addb
clc
add
ljmp
sub
insb
test
les
push
jbe
xor
nop
push
das
call
cwtl
cmp
xor
mov
add
push
mov
daa
call
pop
andb
sub
stos
mov
hlt
cmp
scas
sub
jl
jb
pop
sub
mov
call
and
int3
push
lcall
sahf
and
clc
inc
std
pusha
fs
inc
divl
test
aad
fstp
les
pop
xor
test
xor
idivl
adc
dec
leave
jmp
sub
or
push
sub
push
movsl
sbb
dec
inc
mov
outsl
push
mov
xchg
lock
xchg
iret
push
jns
pop
xchg
out
jb
mov
or
push
xor
adc
adc
mov
ret
jmp
jbe
test
out
ja
or
mov
inc
setnp
in
fstpt
pop
push
test
je
cld
sbb
cld
inc
cwtl
xchg
popw
sarb
call
add
test
cmc
das
dec
shrl
mov
or
shrb
aaa
mov
sbb
repnz
or
jnp
ja
mov
xor
push
aas
push
rorl
mov
rorb
pop
sahf
cs
pop
icebp
nop
outsl
fimuls
xchg
outsb
cltd
add
and
lds
sub
and
jno
sub
mov
in
pushf
add
add
jl
jle
fs
pop
lahf
jg
loope
in
xor
push
sarw
addr16
ss
mov
xor
mov
movsb
scas
xor
popa
pop
pop
pushf
jge
and
and
push
cmpsl
and
jge
adc
imul
add
push
mov
push
call
jp
pop
rep
fsubrl
les
pop
xor
push
and
lahf
xorb
jb
push
pop
shr
sti
inc
mov
scas
cld
aad
pop
pop
divb
mov
xchg
mov
jmp
fwait
sub
pusha
sbb
xchg
into
fldenv
jo
cmpsb
ret
lret
adc
push
in
adc
cli
leave
insb
and
dec
mov
push
int3
cmp
xor
pop
call
js
daa
and
jmp
addr16
clc
testl
scas
insl
pop
jnp
call
imul
mov
dec
mov
dec
mov
call
dec
test
inc
daa
jo
jmp
aam
leave
imul
push
add
sarl
ja
pop
jge
push
mov
call
dec
addr16
popa
xchg
insb
stc
cmp
test
mov
add
inc
add
dec
dec
mov
ss
mov
dec
dec
popf
aaa
stc
mov
push
jb
les
and
sbb
fucom
in
and
push
push
mov
or
adc
mov
jno
push
call
das
les
add
outsl
xchg
jecxz
and
mov
cmpsb
shl
ja
pusha
dec
mov
jecxz
lock
or
rclb
adc
add
xchg
and
mov
push
xor
push
ja
xchg
xor
stc
popa
sub
cmp
ficomps
pop
dec
inc
or
jbe
xor
jecxz
negl
mov
dec
inc
jb
inc
jmp
add
sbbb
in
inc
orl
sti
xchg
pop
addl
stos
mov
push
out
dec
and
xor
cltd
push
sub
dec
inc
ljmp
iret
cld
xor
push
jnp
daa
je
mov
out
sti
fcoml
imulb
fstps
jno
ljmp
sub
pop
xor
xchg
jg
addr16
test
repz
movsl
add
jns
mov
das
and
sbbb
jnp
xchg
sub
lcall
lea
bound
add
inc
adc
or
mov
out
mov
push
jmp
cmp
mov
or
add
xor
dec
and
inc
pop
inc
jmp
adc
pop
mov
adc
dec
push
xchg
in
lret
sub
mov
scas
adc
mov
sarl
lret
sub
fwait
dec
pop
imulb
inc
orb
sahf
push
pop
into
or
fbld
jl
bound
call
lahf
dec
flds
jmp
cmpsl
clc
mov
push
mov
repnz
add
push
mov
add
mov
mov
jno
aaa
add
jo
and
mov
pushf
call
stos
in
jmp
mov
mov
addr16
dec
jbe
dec
gs
mov
pushf
mov
mov
push
jo
xchg
push
sbb
sub
add
jmp
out
pop
test
mov
repz
cmp
or
xchg
repnz
aaa
sub
xor
stc
mov
mov
lret
sbbb
lock
imul
cmp
jmp
pusha
mov
and
or
or
mov
into
jno
mov
nop
pop
cmp
mov
mov
sub
movsb
cmp
sbbb
adcl
mov
ret
mov
sbb
stos
call
inc
addb
in
pop
xor
sbb
jno
mov
shr
fisttps
or
adc
lahf
adc
inc
mov
fwait
in
cmc
jo
jge
lahf
inc
ljmp
add
cmp
xor
lahf
pop
arpl
and
cwtl
int3
xchg
xchg
xchg
add
mov
psrld
pop
inc
sar
and
adc
push
jp
or
stos
test
xchg
adc
mov
xor
int3
or
fldenv
pop
lcall
cmpsb
cmc
out
dec
fcoms
jb
mov
dec
jmp
mov
push
cmpsl
mov
xchg
xchg
in
push
orl
jbe
ss
cmc
xchg
or
add
and
or
jp
mov
icebp
push
sub
int
cmp
jns
push
push
mov
stos
xor
xchg
mov
inc
mov
add
inc
mov
push
loopne
cld
repnz
add
add
mov
daa
mov
lret
dec
cmp
gs
push
in
cmc
inc
jbe
jae
mov
mov
sub
gs
mov
cli
mov
in
add
imul
adc
test
subb
inc
cmpsl
add
pop
inc
adc
sti
mov
xor
js
adc
ss
sub
inc
insb
xlat
ja
call
scas
loop
jo
gs
add
lea
and
xchg
sub
mov
pop
push
shrl
or
push
xchg
sbb
mov
hlt
and
inc
pop
mov
pop
divb
push
data16
sbb
push
mov
xchg
out
mov
pop
fwait
cmp
dec
in
movl
frstor
push
aad
movsb
bound
cmc
jmp
movsb
cmp
cmpsl
sbb
push
and
mov
mov
mov
rcll
aaa
sub
call
addb
mov
mov
sub
xchg
adc
pop
xchg
cmpsl
stos
pop
and
rorl
jmp
fmuls
cmp
pop
enter
and
call
in
dec
or
xor
imul
xchg
push
cmp
adc
add
pop
cmp
in
pop
adc
or
mov
mov
mov
xlat
lods
cmpb
sbb
mov
sbb
mov
movsl
push
jbe
dec
outsb
or
neg
and
sbb
xor
popf
out
jmp
call
shrl
int3
int3
cld
fadds
rclb
jb
cmp
jg
xchg
outsb
inc
imul
sbb
jo
or
testl
std
mov
jb
xchg
pop
fwait
rol
jmp
pop
push
dec
sbb
jecxz
rcll
push
in
or
pop
stos
repnz
mov
mov
cmpsb
or
hlt
dec
fs
mov
rolb
test
addr16
push
fbstp
and
xor
ds
mov
fwait
inc
cltd
addb
mov
mov
jo
fwait
lods
pushl
loope
jp
push
push
jmp
and
inc
sub
testb
inc
popa
dec
nop
xchg
or
lods
cmp
push
inc
mov
out
add
or
xacquire
mov
xchg
fcmovnbe
add
mov
jmp
mov
pop
decl
out
andb
adc
jbe
jno
cmp
xchg
mov
inc
xchg
inc
imul
cld
dec
inc
lods
pop
push
daa
mov
fcomps
mov
lods
cwtl
and
repnz
push
icebp
pushf
sbb
out
xchg
mov
jo
adc
enter
jbe
mov
xor
push
lahf
sub
insb
sahf
inc
inc
call
incb
lea
sarb
cmp
push
cs
movsl
shlb
clc
in
xchg
repnz
adcb
xor
push
shr
xchg
popf
std
and
and
sti
cli
xor
je
add
mov
mov
scas
out
or
or
std
jecxz
or
insb
and
pop
add
shl
enter
rorl
cmp
icebp
aad
pop
adc
mov
push
or
pop
das
mov
pop
orl
or
push
movsl
test
std
ds
and
rorl
sti
xor
subl
xor
outsb
mov
xrelease
repnz
insl
popl
cmp
adc
das
arpl
repnz
jno
or
loope
jb
xor
add
insb
nop
jmp
orb
popf
cmpl
dec
xchg
aas
mov
add
jns
mov
push
xchg
push
pop
pop
sub
jmp
out
or
inc
jmp
mov
or
mov
dec
int
dec
mov
mov
fldt
loopne
addb
or
adc
xchg
jbe
add
adc
push
sub
push
ret
push
push
movsl
lock
adc
or
dec
fstps
out
and
nop
and
mov
push
hlt
mov
cwtl
mov
sub
mov
pop
jo
mov
sub
es
adc
mov
add
adc
pop
fistpl
mov
pop
shlb
outsb
fists
or
mov
dec
xchg
int
mov
mov
jne
fistps
jne
and
adc
fildl
inc
adc
add
bound
dec
sbb
mov
addr16
das
roll
fwait
lock
mov
stos
popf
cmp
iret
xchg
dec
mov
movsb
mov
and
rcrb
in
jae
sbb
call
in
add
push
stos
fxch
jge
cmc
pop
jp
shrl
mov
sub
mov
inc
mov
xchg
inc
dec
ljmp
cmpsb
mov
sbb
jl
jbe
jbe
inc
mov
and
jnp
jbe
adc
test
sarl
call
xor
cmp
cltd
sub
mov
and
xor
push
xlat
add
push
shll
andb
data16
or
sbb
mov
into
add
mov
mov
mov
mov
repz
or
jmp
push
push
out
cmpsl
xor
and
aas
lahf
imul
or
mov
sub
mov
mov
mov
mov
push
repz
and
in
sti
shl
xor
lds
add
jmp
mov
rorl
push
mov
inc
dec
cmpsl
sub
or
sub
dec
sarb
jmp
test
or
xor
or
loopne
out
stos
lcall
jne
push
dec
inc
xlat
lahf
jbe
dec
jae
mov
mov
mov
sbb
cli
sarl
divb
int3
mov
push
aad
jp
mov
shrl
cmp
inc
fwait
or
ja
adc
mov
mov
add
add
jns
push
inc
jmp
aam
push
jns
or
sbb
push
das
faddl
hlt
mov
sbb
and
repnz
sbb
inc
mov
cld
push
mov
push
aad
repz
inc
pop
leave
push
or
pusha
call
mov
js
cmp
add
movsl
nop
and
adc
lea
push
repnz
nop
mov
xchg
stos
jmp
cmpl
out
fdivs
push
pop
push
pushf
sub
mov
add
out
sbb
test
popa
leave
sub
imul
pop
insb
sti
sbb
add
cmp
xrelease
mov
clc
xor
lock
or
dec
mov
daa
push
std
test
xchg
leave
jno
jae
mov
adcl
jno
test
mov
adc
mov
out
push
in
inc
mov
mov
call
push
in
mov
mov
jns
mov
adc
xor
pop
mov
lea
push
popf
adc
bnd
pop
lcall
push
push
call
mov
aad
add
jno
jae
iret
pop
push
pop
push
add
fwait
or
add
push
aas
pop
xchg
mov
adc
ds
inc
or
fdivrs
rclb
jno
fadds
pop
lods
sub
je
and
hlt
ljmp
adc
in
jp
insb
push
mov
fwait
or
mov
mov
dec
pop
push
mov
adc
pop
int3
xchg
push
mov
adc
xorb
std
pop
inc
pop
push
shll
in
cld
push
aas
lods
sti
xchg
push
pop
or
add
mov
insb
pop
jo
jmp
push
jecxz
adc
mov
shrl
fimull
mov
leave
push
push
push
jmp
insb
pushl
mov
stos
jmp
inc
and
add
pop
pop
repz
dec
add
jle
gs
inc
pop
cmp
lret
xchg
push
push
lahf
stc
jmp
sbb
lea
fsubrp
and
inc
enter
das
push
add
and
lods
fdivs
adc
sub
mov
xor
cmpsb
test
push
dec
jmp
pop
mov
and
out
jp
fcom
lock
mov
outsl
ljmp
es
xchg
jmp
fildl
cmpsb
shld
fsubl
aam
push
or
sbb
nop
sub
and
popf
cmp
inc
mov
das
pop
lret
pop
cmp
sahf
icebp
adc
lock
and
sub
adc
mov
adc
dec
and
sbb
or
subb
xor
inc
int3
pop
push
je
jo
cmp
test
inc
rolb
sbb
fidivrl
lods
pop
lock
sahf
pop
notb
fcompl
pusha
xor
ret
lock
mov
cmc
incl
lock
pop
mov
add
ss
in
jns
clc
call
or
ja
pop
lock
dec
sub
jmp
push
dec
aas
inc
lock
into
pop
cmp
mov
push
arpl
xor
data16
dec
inc
cs
jp
pop
dec
loopne
xor
bsr
mov
clc
in
icebp
test
aad
enter
pop
lock
sahf
lea
dec
popa
repnz
push
jmp
lahf
jb
jle
cmp
inc
jl
push
fsubl
stc
xor
icebp
movsb
jnp
push
mov
lock
std
or
out
mov
add
mov
fistpll
cld
stos
lock
jne
lock
cmp
ja
inc
rcll
xchg
mov
pop
std
dec
div
jp
in
xchg
cli
idivb
pop
out
cmp
jno
insb
xchg
lcall
and
dec
push
and
adc
push
nop
mov
into
repz
lods
inc
lock
pop
fstpt
lock
or
jno
add
insl
dec
fimull
popf
adc
xchg
xchg
or
js
leave
dec
xlat
testb
dec
in
xorl
xor
shrb
adc
mov
push
jl
dec
push
loope
mov
add
lcall
jne
test
mov
sbb
stc
call
lock
cli
scas
lret
dec
mov
and
lock
ja
jo
outsb
arpl
out
mov
sbb
mov
shlb
push
scas
mov
popf
addr16
mov
push
jbe
pop
lock
xchg
fstps
mov
aad
out
in
icebp
test
jae
jge
loopne
push
int
lock
js
popa
insl
xor
push
addr16
xor
mov
lock
push
loopne
lock
sub
cld
xor
sbb
dec
adc
push
xchg
sbb
lock
imul
or
or
and
shlb
addr16
outsl
cli
lock
xchg
mov
inc
rcrl
mov
jae
stos
into
push
cltd
repnz
leave
lea
popf
stc
push
or
fs
ss
loop
int3
lds
cmp
xor
add
sbb
cmc
mov
push
mov
aas
fildll
xor
mov
adc
dec
inc
ds
lock
sub
ja
lock
cmpsb
inc
clc
aad
xor
jbe
sti
dec
mov
lock
mov
das
xor
jbe
lock
movsb
ds
lock
out
cmp
xchg
jg
cld
fdiv
cmp
sbb
ja
leave
and
test
fldt
inc
lds
lods
shl
stos
sub
xchg
cmp
inc
jmp
loopne
int
clc
in
sub
mov
xor
mov
bound
push
xchg
mov
lock
sbb
test
mov
jo
mov
pop
dec
lcall
xchg
jbe
frstor
add
mov
sbb
imul
mov
lock
mov
push
cli
xchg
pop
sbb
jno
movsl
sar
mov
emms
mov
inc
scas
push
test
fcomip
push
movsl
xchg
outsl
jmp
mov
mov
jecxz
jo
iret
shlb
push
stos
lock
pushf
pop
in
lds
mov
js
mov
lock
popa
inc
adc
cmp
call
fs
xor
and
jno
xor
lock
mov
leave
lock
jge
jnp
jb
icebp
cmpsb
sub
cmp
mov
lock
pushf
sub
pop
fpatan
jmp
mov
stos
sbb
outsb
add
add
pop
pop
dec
xchg
call
or
push
xor
test
or
mov
push
xorl
ret
pop
arpl
mov
scas
push
in
pusha
jbe
jmp
add
pop
repz
outsl
adc
sbb
mov
scas
or
xchg
fbstp
adc
mov
rorl
adc
cmc
lods
mov
dec
test
pop
sbb
stos
or
addr16
cmp
lret
xchg
dec
cmp
add
mov
add
sbb
inc
in
cmp
jle
xchg
jns
xchg
or
in
mov
sbb
mov
popf
adcl
icebp
or
mov
and
rcr
pop
repz
arpl
mov
xor
mov
dec
jno
repz
mov
adc
insb
fwait
push
xor
psrld
sbb
push
sbb
repz
push
cmpsb
fs
lock
imul
test
or
jae
lock
roll
orb
lock
std
mov
stos
mov
shl
xchg
mov
out
outsl
stc
mov
cmpsl
pushf
xor
loop
hlt
mov
outsb
or
imul
xchg
popf
xchg
les
lock
dec
loopew
jb
lock
sub
jo
xchg
lock
push
in
lock
adc
mov
jo
cmp
pop
fnsave
dec
nop
hlt
or
inc
push
out
lods
stos
push
mov
dec
jo
dec
out
sub
push
adc
sbb
outsl
jge
lock
push
enter
lock
je
stos
aas
negb
lret
jnp
dec
lock
add
xchg
xor
gs
outsb
push
shl
lock
mov
xlat
mov
and
jmp
mov
or
js
xchg
lock
outsb
mov
cmp
cltd
sbb
fdivp
lcall
jns
cmp
xchg
stc
mov
std
jmp
cld
xor
sbb
push
cmp
jmp
mov
pop
test
mov
cmpsb
inc
lock
jae
dec
into
xor
lock
xchg
mov
jecxz
push
push
lods
push
jb
sbb
jle
mov
cli
into
inc
jmp
pop
es
push
mov
mov
jp
push
sbb
lock
call
lret
push
outsb
sbb
aaa
mov
cmpsb
lods
enter
in
rclb
inc
mov
popa
orps
imul
rol
outsb
mov
fdiv
jl
pop
out
push
lds
aad
mov
repnz
ja
shll
pop
push
add
sub
jl
lock
inc
push
push
fdivp
mov
in
cmc
int3
and
lock
shlb
cmp
jo
lock
sahf
xor
sub
and
jb
in
push
lds
add
in
js
ret
insb
add
inc
xlat
adc
lock
mov
lock
cs
jbe
js
xchg
rorb
insl
mov
mov
mov
mov
inc
aam
insb
insb
sbb
movsl
or
push
test
lock
test
aam
jl
cmpsl
sub
or
pop
mov
lock
and
popf
sbb
in
hlt
imul
mov
test
jmp
dec
incb
lahf
and
addr16
notl
out
sti
mov
mov
xor
mov
lret
pop
push
aam
int3
mov
call
dec
push
jmp
loop
and
shlb
cli
das
out
test
dec
mov
mov
popf
cmpsb
bswap
lahf
adc
pop
mov
shl
cmp
xchg
psubb
imul
mov
fldcw
punpckhbw
xchg
jnp
inc
jno
call
push
pop
mov
or
xchg
xchg
adc
mov
dec
and
adc
sahf
pushf
inc
stos
rcrb
scas
mov
bound
mov
lods
adc
sub
stos
adc
pop
adc
mov
mov
mov
shlb
out
xor
push
cmpsb
push
xor
pop
jb
sub
leave
pop
jnp
push
test
jno
in
clc
mov
repnz
jne
jnp
jp
daa
arpl
jno
jns,pt
mov
mov
call
push
sub
sub
xor
sub
jo
out
bound
sbb
jmp
add
call
push
in
jmp
and
jo
jnp
push
push
ret
dec
scas
push
xor
jle
xchg
sub
hlt
call
pop
jo
mov
outsl
xorb
mov
call
jb
data16
xchg
aad
repz
or
mov
inc
push
pop
dec
stos
das
or
cmp
cmc
out
popf
sub
test
scas
sbb
xor
jecxz
or
call
lock
test
pop
cmc
jp
add
push
xchg
orb
pop
mov
or
jp
scas
dec
xor
pop
jle
imul
cmp
inc
outsb
xchg
insl
jecxz
mov
xor
mov
mov
in
daa
into
clc
divb
mov
xor
lock
decb
test
out
stos
enter
push
js
pop
mov
setne
mov
add
add
mov
lcall
xchg
pusha
or
xor
pop
dec
pushf
mov
lcall
call
xor
sarl
lock
cwtl
into
jmp
xor
push
or
into
cld
sbbl
mov
mov
mov
cmc
add
push
or
xchg
mov
outsb
mov
stos
mov
scas
mov
xchg
mov
xor
push
xchg
inc
into
test
adc
enter
mov
lahf
add
push
andb
xor
insb
pop
dec
test
mov
or
aaa
out
inc
add
js
add
scas
push
mov
mov
subb
cs
push
sbb
and
scas
sub
aaa
pop
cmpsb
mov
inc
mov
bound
cwtl
xchg
test
stos
inc
out
rcrb
or
mov
or
mov
add
mov
or
or
stos
add
icebp
adc
pop
lcall
adc
mov
jno
mov
inc
fsubs
lods
or
add
fidivrl
sbbb
adcb
jne
or
push
jmp
mov
xor
mov
das
fnstenv
icebp
or
rcl
shrl
shlb
push
out
mov
psubd
mov
mov
add
mov
mov
dec
add
sub
adcl
mov
dec
jle
outsb
scas
or
dec
jno
xchg
test
dec
cs
mov
mov
outsl
dec
ljmp
ret
int
roll
and
or
jb
cmpsb
mov
arpl
mov
cld
ss
pop
mov
cmp
mov
jmp
ja
push
add
cmc
add
jmp
sahf
or
mov
xchg
sub
mov
out
lock
aas
insb
test
call
hlt
gs
loopne
mov
or
jmp
mov
xchg
sub
jnp
pop
call
push
ret
push
jmp
pop
xlat
jno
mov
andb
notl
inc
cmp
js
fcomip
mov
pop
fcoml
call
add
int3
pop
sub
xchg
lea
bound
call
add
call
push
push
jecxz
je
cs
or
les
mov
adc
adc
in
adc
sti
cmp
mov
pop
xlat
add
mov
mov
call
sti
mov
divb
cmp
hlt
inc
shlb
cmp
or
ja
xor
sti
insb
adc
pop
cmp
pop
imull
lods
cmpsl
adc
jmp
jmp
testb
rclb
dec
mov
pop
mov
fs
xchg
sbb
push
cs
xor
inc
push
arpl
add
pop
call
cltd
ljmp
pop
mov
rcrl
mov
push
mov
popa
pop
daa
ficomps
jp
mov
jb
mov
xlat
cwtl
cmp
xchg
mov
jmp
test
pop
cmp
mov
nop
repnz
sbb
push
jb
lret
inc
add
adc
in
dec
repz
inc
inc
jge
fwait
sub
mov
xchg
or
push
in
push
inc
add
ljmp
das
push
jo
loop
or
push
lret
jle
adc
pop
jl
sbb
inc
fsubp
mov
jmp
sbb
jb
sub
leave
repnz
sub
js
fdivr
test
sub
out
aam
sbb
push
cwtl
add
int
inc
cmpsb
and
push
popf
jl
xor
pop
push
in
xlat
and
ret
pop
inc
lock
xor
mov
xadd
in
mov
jl
cmp
call
or
fldt
sub
fwait
int
jp
xor
aas
subl
ljmp
int
cmpsl
dec
pop
inc
ret
pushf
jmp
dec
inc
push
mov
imul
fisubs
jp
mov
push
imul
jmp
mov
testb
repz
mov
pop
hlt
loopne
sbb
or
lods
daa
scas
jns
sub
pop
xchg
icebp
ficomps
pop
jo
test
into
mov
pop
xor
sahf
pop
dec
out
add
pop
inc
pusha
into
call
jmp
fimuls
ret
inc
jecxz
lods
rorb
bound
dec
cwtl
xchg
mov
mov
or
sub
loopne
pushf
dec
imul
inc
jecxz
icebp
push
push
test
call
aas
stos
mov
jp
and
inc
cltd
lods
mov
out
pop
pop
inc
and
push
push
or
divb
loop
cmp
ret
jecxz
or
std
inc
pop
das
nop
in
push
addb
sbb
call
fisubrl
jae
mov
shrb
xchg
xor
xchg
push
adc
repz
test
push
popf
jne
clc
add
sub
or
in
push
gs
in
pop
inc
jmp
xor
push
sar
mov
sti
addr16
jnp
jl
lahf
int
mov
mov
xor
insb
inc
dec
sbb
loope
mov
xchg
cmpsb
loope
xor
sbb
mov
sbb
test
mov
add
pop
sti
adc
jno
fistl
inc
lea
lea
xchg
out
push
out
sbb
into
inc
jo
push
mov
aaa
pushl
or
cwtl
jl
or
push
call
cmp
repnz
movsl
popf
xor
lods
out
inc
xor
and
sbb
mov
shl
sub
dec
sub
add
repz
sub
push
inc
xor
fsts
shl
jno
or
add
pop
lods
sub
inc
inc
std
pop
xchg
cmpsl
cmp
sub
lods
pusha
aad
xchg
fdivr
popf
push
mov
fidivrl
lret
or
sahf
push
cmpsb
mov
mov
ret
xchg
test
shll
ret
sub
test
add
ret
sbb
push
push
sub
sbb
xchg
jmp
mov
push
push
and
stos
dec
adc
push
push
mov
pop
mov
dec
or
jo
or
enter
xlat
xchg
ret
jmp
push
imul
testl
push
or
fdivrs
push
sbb
jne
les
cmc
sub
insl
mov
aad
cmp
movsl
cmp
mov
mov
xor
in
cmovno
or
mov
sbb
and
das
cmc
test
pushf
loop
or
or
inc
jmp
inc
or
xor
jl
pop
sub
lcall
dec
mov
je
repnz
push
push
xor
jmp
mov
add
mov
sbb
movsl
push
dec
mov
or
pop
fstpl
lahf
into
add
pop
lea
jns
insl
pushf
loope
lods
push
xchg
push
jns
push
repz
insl
mov
cli
and
pop
repnz
cmpsb
mov
adc
dec
sbb
cmpl
in
or
pop
call
cmpsl
leave
leave
sub
rorl
popa
xor
dec
or
mov
xchg
fsubs
call
jge
add
int3
repz
mov
lahf
rolb
mov
fstps
rcrl
jnp
aad
push
or
pop
sub
sub
call
loop
add
mov
pop
xchg
out
daa
dec
inc
mov
or
push
xchg
push
push
cmpb
xor
lods
pop
pop
cltd
xor
aad
jo
pop
jg
les
pop
mov
fdivs
imul
push
sbb
or
push
inc
jo
inc
mov
push
cmp
or
cmp
adc
inc
pop
mov
cmp
stc
jb
pop
pop
pop
imul
fwait
mov
adc
xchg
aam
rorb
push
nop
loopne
push
adc
fmull
mov
push
dec
faddl
test
jns
lods
add
cmp
test
mov
enter
xlat
sub
jne
imul
cli
add
cmpsb
mov
or
sbb
ljmp
insl
jbe
cld
cmp
adc
lods
subb
repz
test
xchg
xchg
mov
ret
mov
xor
pop
push
test
shrb
dec
add
nop
inc
or
xchg
sbb
push
int
hlt
call
mov
insl
sub
insl
and
mov
scas
mov
inc
push
leave
lahf
and
aaa
test
outsb
push
and
and
or
fisttpl
jmp
push
cmp
push
ss
cmp
or
mov
or
movsl
push
pop
test
jmp
rcrl
imul
dec
cmc
int
lods
orl
sbb
dec
and
sbb
xchg
outsl
sbb
mov
out
push
mov
sbb
outsb
xchg
fnstsw
stos
aad
jl
push
shl
sbb
sub
xor
fsubr
add
dec
lods
pop
xor
stos
adcb
cmpb
xor
jecxz
fwait
fwait
xor
xlat
sub
dec
xchg
out
fbstp
scas
push
mov
push
jle
das
ja
test
out
rorb
jmp
sub
mov
pop
pusha
add
mov
scas
jp
sbb
dec
mov
fidivs
mov
cmp
or
icebp
sahf
stc
adc
push
ljmp
stos
repnz
js
pop
lock
mov
mov
sub
or
outsb
popf
mov
repnz
or
jge
test
pusha
sub
loopne
push
or
cmp
xchg
and
xchg
mov
notb
mov
mov
fnstenv
jo
inc
xor
aas
push
ror
jmp
mov
cld
mov
or
push
or
fcoml
pop
add
mov
mov
jb
push
xchg
jns
mov
cmp
pop
push
call
roll
xchg
int3
xchg
jle
dec
jo
cmp
sub
adc
mov
mov
je
pop
mov
mov
incb
lret
pop
push
cwtl
xchg
aad
inc
movsl
cmp
inc
pushf
mov
ss
aad
aas
jmp
xchg
ret
mov
shrb
imul
call
lods
xchg
in
shll
cmc
sahf
test
push
push
mov
ret
or
negl
enter
jp
les
leave
or
sbb
push
imulb
mov
test
call
pop
or
pop
imul
fstpl
insb
ljmp
push
out
aaa
lahf
mov
mov
add
ja
pop
pop
cmp
or
adc
adc
clc
xchg
sub
js
loop
data16
mov
call
pop
mov
push
xchg
sub
sub
repnz
insl
inc
jno
lea
leavew
add
push
dec
arpl
xchg
aam
enter
icebp
mov
inc
pop
dec
xor
jg
adc
jmp
or
mov
add
data16
loopne
adc
in
adc
sub
push
pop
stos
and
imul
lods
xchg
mov
mov
xchg
mov
ret
pop
sub
add
dec
cmpsb
cs
mov
cmp
or
les
lret
std
adc
and
out
aad
or
mov
sbb
mov
addr16
jno
pop
aas
sti
pushf
movsl
clc
faddl
mov
jmp
xchg
mov
addl
jo
mov
sub
adc
mov
or
aad
sub
push
lods
out
incl
pop
test
adc
xchg
int
cld
lds
adc
or
add
mov
aam
inc
in
iret
jmp
add
orl
iret
mov
pop
and
test
add
mov
pop
jno
push
mov
push
mov
sub
aaa
icebp
das
divb
or
icebp
mov
test
push
jbe
nop
xlat
enter
dec
xchg
shlb
sbb
dec
lret
shrb
pop
in
add
lahf
stos
push
dec
hlt
or
imul
mov
scas
mov
sbb
inc
or
push
push
fildl
sbbl
push
int3
shll
sbb
jmp
push
fsubrl
mov
adc
js
add
inc
insl
stc
into
or
push
cld
mov
cli
sahf
ret
dec
test
adc
lcall
iret
pushf
mov
in
sbb
xchg
loope
shl
jecxz
xor
or
cmp
pushf
push
sbb
das
dec
xor
scas
jp
bound
push
push
stos
mov
andb
icebp
stos
xchg
shlb
mov
int
cmpsb
cmp
divb
aaa
sahf
jo
or
sbb
fstl
mov
lock
adc
mov
ja
sbb
mov
cwtl
push
mov
jne
mov
xchg
ja
sti
mov
pop
mov
adc
xor
sahf
call
aas
push
lret
add
pop
mov
daa
scas
movsl
inc
adc
loop
call
jp
mov
daa
push
subl
dec
in
cmpl
lahf
jns
aad
add
add
aas
add
flds
lods
lret
mov
mov
andb
rcrl
mov
or
mov
dec
sahf
add
mov
inc
or
bnd
ja
sbb
push
mov
pop
jg
lahf
pop
pushf
out
push
pop
lea
mov
lock
cwtl
mov
inc
pop
jnp
xchg
into
in
notl
mov
mov
push
int3
push
cmc
fisubl
popa
cmp
xor
call
andb
xchg
add
repz
push
adc
pop
push
add
push
add
loopne
shll
inc
daa
testb
mov
cmp
mov
das
cld
nop
mov
pop
push
dec
out
sbb
mov
jmp
xor
and
loope
in
mov
or
sbb
sbb
clc
and
push
icebp
lcall
xchg
call
movsl
sub
inc
cmp
push
mov
adc
pop
call
stos
bound
fsubs
adc
pop
sbb
loop
shr
dec
inc
sbb
js
jb
pop
roll
inc
xorb
jae
jp
push
push
dec
int
nop
inc
aas
pop
mov
lock
lahf
dec
stos
mov
cs
data16
jge
adc
dec
cmp
dec
sbb
jae
shl
lret
cmp
enter
push
sar
jge
or
jo
int
cltd
cmpsl
sub
es
push
hlt
dec
out
mov
xchg
in
test
in
rcr
cmpsl
jmp
daa
xlat
cltd
mov
jne
lock
or
fsubs
mov
and
fadds
adc
jp
cmp
loopne
arpl
lret
sbb
cmp
mov
push
inc
inc
or
or
sarb
add
ljmp
jno
in
dec
adc
rolb
lods
jb
push
es
imull
aas
dec
mov
push
sbb
adc
lahf
mov
jmp
xchg
push
call
xchg
jge
cmp
adc
pop
repz
femms
dec
sub
dec
sbb
and
sbb
xor
mov
popf
pop
test
xor
dec
xchg
mov
rcll
mov
int
add
lret
imulb
lea
in
and
or
sti
xor
test
daa
xchg
xlat
add
adc
add
inc
sbb
outsb
mov
push
test
fldt
jnp
pop
mov
insl
add
cmc
or
in
jo
sub
sbb
sbbl
and
popf
adc
sbb
jmp
pop
lahf
rcr
push
or
imul
sbb
cmp
movsl
pop
lahf
pop
daa
xchg
add
adc
adc
lret
jne
push
jg
sub
xchg
fistpll
leave
jo
add
lret
inc
cmp
das
mov
jge
pop
jne
pop
or
mov
pmulhw
inc
mov
mov
sbb
repz
jb
adc
mov
and
sub
jecxz
and
cmp
jne
in
or
add
sub
sbb
mov
pop
cmp
xor
sub
ret
icebp
xor
add
mov
inc
hlt
and
js
push
jmp
mov
add
int3
cmp
ds
sbb
repz
pop
push
or
shrb
jp
add
or
in
inc
sti
dec
adc
negl
aad
push
cmpsb
roll
sbb
or
push
test
pop
sbb
xor
sbbb
xchg
pop
pop
pop
cmp
sahf
test
xchg
mov
xor
scas
loopne
fcmovu
adc
insb
insb
sbb
push
lret
sahf
push
leave
push
dec
imul
lret
adc
pop
adc
mov
pop
jg
add
stc
ljmp
mov
or
call
jmp
xchg
imul
jmp
sub
dec
push
mov
mov
int3
inc
and
pop
test
je
out
insl
pusha
cmp
push
test
outsl
sbb
aaa
jge
or
call
xor
rol
mov
xor
push
mov
mov
stos
and
adc
push
push
xchg
int
and
incl
std
xchg
scas
sub
mov
xchg
push
ss
into
dec
xor
xor
fsincos
push
and
jmp
and
je
xcrypt-cfb
cmpsl
jecxz
subb
call
loopne
repnz
loopne
call
out
aam
ret
xor
dec
push
pop
loop
fdivr
and
sbbl
xchg
xor
mov
xlat
lahf
scas
push
push
mov
mov
mov
or
lcall
loopne
out
push
xchg
nop
xor
jge
fwait
mov
dec
shll
cmc
inc
jno
aam
or
lahf
or
fs
or
dec
repnz
jmp
inc
push
push
sub
stos
mov
xchg
mov
repnz
lahf
or
loope
or
stos
jb
mov
mov
loopne
ud1
mov
sub
mov
jb
insl
repz
subb
and
jecxz
mov
push
and
cmp
inc
sub
call
mov
filds
dec
pop
imull
push
sub
add
int
xchg
pop
push
mov
call
fisttps
push
pop
jge
pushf
in
cmp
aad
push
push
xor
in
mov
push
cwtl
popa
dec
sub
aas
scas
and
inc
xor
add
push
mov
dec
mov
xchg
mov
xchg
jns
das
aam
je
sarb
xor
pop
test
scas
adc
jg
leave
mov
cmp
lock
cmc
shll
or
add
dec
addr16
sbb
sti
subl
push
xchg
adc
xchg
inc
addb
push
xchg
dec
dec
sub
hlt
repz
call
and
jmp
imul
sub
adc
jb
mov
pop
cmpb
popf
add
jmp
xchg
ud2
sbb
adc
or
mov
adc
cld
jns
add
mov
dec
sahf
sbb
mov
test
push
adc
lahf
lahf
add
or
ss
popa
lea
cwtl
enter
das
out
pop
in
xor
or
out
mov
cmc
mov
aad
mov
pushf
pop
inc
or
sbb
loop
or
jno
lock
andb
mov
repz
add
loop
out
icebp
xchg
dec
xlat
adc
jl
and
inc
jo
sahf
subl
mov
pop
out
push
adc
test
out
test
outsb
mov
pop
xchg
mov
lahf
or
daa
enter
add
cltd
or
sub
dec
fwait
or
aad
scas
sbb
mov
dec
or
jmp
mov
xor
jns
call
test
add
shl
or
das
shll
or
das
outsl
scas
inc
outsb
mov
repz
or
inc
cld
in
imul
es
cmp
repnz
enter
fidivrs
xchg
or
push
cli
aad
call
lahf
mov
loopne
sbb
cmc
dec
mov
or
dec
mov
xchg
push
jmp
or
cwtl
push
nop
ljmp
loop
jb
int3
add
rol
jmp
push
call
mov
push
in
test
or
and
js
pop
ljmp
xchg
daa
and
fnsave
es
add
cltd
ds
test
xchg
mov
pop
dec
cmp
hlt
adc
mov
imul
mov
call
inc
iret
push
leave
pop
add
sub
out
dec
adc
xchg
out
add
icebp
sub
push
lods
jmp
das
xlat
sbb
nop
and
or
push
pop
lret
pop
mov
or
push
ret
decl
or
or
jbe
cmp
jo
mov
cli
enter
cmpsb
cmp
adc
je
mov
popf
jno
mov
sbb
pop
int3
jnp
inc
iret
das
stc
push
mov
pop
daa
inc
enter
jbe
push
mov
cmc
xchg
mov
or
lods
scas
ror
hlt
sub
punpckhbw
lds
mov
pop
int3
adc
mov
lahf
pop
mov
negl
aas
inc
pop
fiadds
aam
jae
sbb
xor
daa
inc
inc
push
mov
xor
mov
call
movsl
cli
mov
push
adcb
jge
je
jbe
push
in
mov
adc
xchg
pop
xchg
lods
adc
pop
das
push
mov
bsr
xchg
push
jmp
std
ret
adc
js
mov
mov
jns
sub
xor
mov
pop
adc
int
into
fldenv
jnp
mov
push
push
jmp
pop
cmpsb
stos
sub
out
gs
enter
stos
mov
cmp
mov
adc
sub
or
sbb
mov
aaa
sbbl
or
cltd
add
jno
mov
push
xor
pop
dec
mov
cmp
pop
jge
lahf
mov
and
push
or
push
and
sbb
lds
mov
add
or
test
fbld
repz
or
les
repz
push
aam
test
into
repnz
int3
and
push
sub
or
cmpl
fsubl
mov
stos
das
inc
or
mov
add
ja
stos
repnz
pop
out
jle
jecxz
and
mulb
xchg
test
mov
mov
xchg
xor
cmpsl
imul
push
sbb
out
out
sbb
and
sbb
movsb
out
push
fs
std
lods
pop
add
loopne
push
jp
sbbb
mov
testl
mov
mov
and
dec
jle
add
push
icebp
test
adc
daa
xchg
lods
les
mov
cli
mov
lret
inc
add
divb
lret
add
cmp
jno
pop
std
les
imul
hlt
mov
loop
daa
pop
ja
or
mov
mov
jo
jecxz
xor
jecxz
adc
jg
mov
xchg
arpl
and
pop
jbe
inc
lock
call
mov
mov
std
pop
lods
xchg
xchg
push
push
cmp
or
inc
roll
aaa
mov
insb
push
out
or
test
pop
dec
jecxz
mov
xchg
sub
sbb
mov
mov
dec
mov
jp
aas
add
dec
fwait
into
cs
jle
shlb
xchg
dec
loopne
dec
push
mov
repz
push
dec
mov
aad
and
jmp
into
mov
xchg
or
stos
insl
pop
dec
add
inc
push
in
cmp
test
sbb
jmp
stos
and
sbb
pop
hlt
or
add
fincstp
test
or
gs
dec
xchg
mov
and
xchg
xchg
aad
xchg
fstpl
jo
cltd
int
mov
add
call
insl
js
lahf
cs
pop
mov
or
or
test
or
cmp
stos
ret
pop
push
pop
popf
mov
xchg
mov
push
in
fistps
xchg
cmpsb
adc
sbb
pop
out
lcall
xor
cs
jl
insb
cmp
mov
mov
loopne
ja
or
xchg
orb
out
dec
ds
jne
inc
call
adc
cmp
jl
btc
sub
inc
jmp
clc
sub
jbe
inc
mov
out
fildll
movsb
mov
push
push
mov
pop
dec
cmp
cmpsl
pusha
jle
and
add
push
ja
imul
sahf
std
sbb
call
and
adc
inc
or
jge
mov
xor
out
inc
jb
adc
daa
xchg
jnp
fcoml
fisubs
jg
ja
pop
mov
jmp
inc
push
push
sbb
rolb
dec
aaa
cld
insb
inc
das
cmpsb
mov
mov
in
jo
sar
les
dec
clc
aam
mov
ficompl
jmp
stos
adc
adc
sub
cltd
shr
adc
dec
aam
enter
and
push
mov
test
push
pop
mov
inc
inc
xor
inc
call
cmp
pop
outsb
stos
call
add
sub
or
dec
cmp
push
insl
pop
add
or
cmpsl
aam
jae
fstpl
mov
and
stos
push
lea
cmp
mov
test
mov
inc
or
call
aad
adc
cmp
push
or
or
ljmp
pop
dec
insl
pop
stos
enter
jge
push
and
mov
or
and
mov
inc
repnz
adc
cmpsl
nop
testl
mov
push
jmp
inc
jae
add
aas
add
js
pop
push
pop
add
adc
jno
out
sbb
imul
or
flds
orb
hlt
xor
sub
pop
stos
jb
jmp
dec
sbb
fmuls
stc
mov
push
mov
outsl
stc
cmp
ret
sub
test
xchg
lods
jae
in
add
mov
stos
mov
int3
jmp
add
repz
mov
bound
pusha
xor
add
test
loope
decl
mov
sti
lods
add
cmpsl
pusha
mov
dec
mov
sbb
mov
jmp
inc
mov
or
push
outsb
xor
js
add
shrb
call
xchg
add
cmp
fldcw
sbb
bnd
jmp
xchg
inc
enter
das
ss
inc
cmp
mul
xchg
pop
or
or
pop
mov
add
cmpsb
unpckhps
icebp
test
mov
mov
loopne
hlt
ja
je
add
enter
icebp
cmpsb
push
or
cwtl
jle
add
mov
sbb
or
jbe
adc
hlt
scas
iret
adc
mov
jb
jo
cmp
hlt
sbb
cmpsl
orb
outsb
ljmp
mov
stos
lahf
xor
dec
dec
adc
into
pusha
nop
mov
jp
xchg
lret
jb
call
push
dec
push
popa
cwtl
test
add
lods
scas
or
xor
inc
rorb
push
dec
or
daa
roll
andb
inc
push
loopne
sti
cmp
lds
lret
mov
icebp
pop
sub
xor
jno
xor
movsb
xor
call
movsl
inc
mov
stc
pop
test
lods
jb
into
loopne
cmp
lods
mov
pop
lods
shlb
cmpsb
jp
icebp
mov
sub
test
inc
or
repnz
inc
pop
aas
or
xchg
inc
add
sub
cltd
out
sub
mov
popf
jne
minps
pop
or
pop
cmp
jnp
sub
jmp
adc
mov
pop
ficoml
mov
cwtl
lods
imul
call
and
setbe
or
pop
in
push
or
pop
rorl
es
std
mov
mov
jmp
call
imul
jmp
addr16
lret
lea
test
sbb
sbb
and
pop
add
jl
jb
stos
mov
sub
sub
jge
ret
sub
mov
leave
imul
or
in
or
arpl
and
mov
xor
push
dec
arpl
addr16
xchg
std
loop
cwtl
dec
or
shl
adc
add
fmull
add
cmp
mov
add
sub
adc
stos
mov
push
mov
lcall
sub
push
out
xchg
cmp
les
int3
pop
push
mov
sub
push
sbb
lcall
inc
outsl
addr16
lock
fsubr
sbb
jecxz
inc
divl
enter
sub
inc
and
add
popl
sbb
mov
push
cld
push
incl
icebp
call
mov
xor
mov
xor
popf
enter
mov
push
sub
dec
pop
icebp
insb
add
or
xchg
movsl
call
mov
jmp
sub
ret
add
rclb
or
pop
push
not
rorb
add
mov
loope
div
movsb
fldt
and
and
inc
mov
rolb
add
ja
xor
adc
push
mov
cmp
and
sbb
inc
mov
aam
jle
jne
imul
jp
popa
or
push
out
ljmp
pop
dec
push
jae
mov
ss
into
lret
iret
cmp
cmp
adc
sub
cmp
cwtl
mov
or
xor
sbb
or
mov
pop
sub
lock
mov
call
stc
push
lahf
jns
pop
insb
aas
nop
fisttpll
add
popf
dec
and
sahf
adc
ret
lahf
negl
call
sbb
add
mov
pop
jmp
cs
mov
xchg
mov
mov
mov
sti
aas
movl
push
mov
add
out
jecxz
mov
rcll
and
loop
ret
jg
jb
jp
and
test
mov
fsubrl
push
xor
add
inc
loopne
cmp
rorb
mov
jne
cmp
jno
inc
testl
adc
inc
push
das
sahf
bound
es
mov
aaa
or
mov
xchg
jmp
call
inc
add
popa
rep
stos
jmp
ljmp
aad
and
loopne
stos
add
mov
leave
or
add
andl
xor
sti
push
xchg
idivb
lret
xchg
xchg
inc
inc
mov
push
mov
pop
frstor
or
jmp
cli
je
imul
add
test
jno
xchg
lret
ljmp
inc
testl
adc
jmp
add
mov
call
jp
pop
icebp
orb
dec
sbb
add
add
arpl
movsl
jb
lahf
or
out
dec
in
xor
dec
xchg
ror
sub
pop
or
xchg
test
push
mov
push
cmpsl
or
pop
je
insl
inc
ljmp
mov
add
fucomip
push
lods
mov
das
mov
jns
sub
data16
push
pop
stos
cwtl
movsb
mov
aas
adc
call
subb
int3
push
add
inc
push
sti
mov
cmp
mov
inc
lock
xor
shrl
sbb
int
lret
dec
in
pop
inc
mov
or
in
dec
dec
es
xor
iret
ficomps
push
inc
in
add
lahf
mov
mov
aad
add
jnp
mov
cltd
cmp
adc
add
and
mov
andb
xor
cwtl
mov
les
jno
and
push
xchg
bound
jmp
xchg
and
sbb
xor
push
xchg
jge
mov
orl
jge
pop
push
jmp
add
movsb
inc
les
inc
fsub
loop
sbb
pusha
lods
cmpsl
and
cmpsl
jmp
incl
cmpsl
push
leave
push
pop
pop
add
nop
jmp
daa
stc
mov
adc
jno
fdivrs
push
jmp
jge
sub
popa
leave
or
inc
scas
movsb
pushf
or
pop
or
in
xlat
inc
aad
xorb
add
jle
inc
inc
adc
scas
imul
dec
xorb
sub
and
or
cs
sti
cltd
out
cmp
scas
push
and
sub
in
cmpsl
pop
adc
or
into
sub
push
mov
verr
mov
je
mov
cmpsb
mov
pop
jno
mov
inc
xchg
add
daa
xor
pop
popf
aaa
sahf
int3
shll
jns
mov
pop
repnz
adc
add
shll
push
mov
jle
dec
inc
mov
mov
push
stc
loop
xchg
fs
call
jecxz
add
add
sub
xor
fidivl
and
push
sbb
js
or
movsl
out
xorb
jno
push
sbbb
dec
mov
adc
push
adc
hlt
xchg
int3
or
ja
divl
das
mov
push
iret
pop
mov
ficoms
pop
xchg
dec
loop
inc
lahf
push
push
push
sub
pop
inc
es
or
adc
addr16
shrb
aas
roll
add
movsl
push
inc
call
cmp
xchg
jno
enter
pusha
jmp
xchg
loop
or
mov
pop
out
jmp
pop
fistpll
ficomps
or
push
or
js
pop
cmp
lods
inc
fsin
add
imul
adcl
sbb
jmp
inc
fcomi
sub
xor
push
xchg
push
adcb
mov
jae
inc
inc
mov
pop
pop
stos
push
inc
xor
jge
push
imul
push
filds
push
stos
iret
adc
mov
cltd
mov
sar
call
clc
sub
mov
jmp
in
mov
and
lea
int3
jmp
adc
mov
mov
pop
popf
int
adc
pop
repz
dec
das
movsb
cltd
jb
push
nop
pop
fnstenv
fldcw
mov
push
mov
divb
lock
mov
jle
dec
xchg
insl
or
jge
and
and
sbb
mov
add
movsl
in
push
imul
mov
cli
pop
mov
shrl
mov
mov
fistpl
fldcw
push
repz
mov
cs
or
jmp
dec
lock
stc
les
xchg
in
push
xchg
mov
jl
stos
and
outsb
mov
ljmp
dec
pop
mov
cmp
xor
outsb
xor
mov
or
add
push
pop
cmp
mov
call
or
and
cmp
insb
in
aas
stos
test
inc
arpl
or
mov
fsubr
rcll
inc
popa
mov
lret
pop
add
mov
sub
popf
notb
jno
inc
rclb
test
dec
jl
jmp
in
aaa
repnz
xor
out
dec
clc
and
xor
cwtl
add
xor
jae
adc
mov
or
daa
mov
xor
out
fbstp
jnp
jmp
or
pop
mov
in
or
mov
insb
mov
and
mov
jo
pop
mov
and
pop
filds
push
call
sub
xchg
popf
jnp
push
jecxz
dec
lock
push
mov
mov
ss
push
ret
out
or
jmp
in
shrl
and
xor
mov
icebp
sahf
fsub
jp
push
add
sub
jo
mov
ret
mov
or
mov
pop
or
popa
adc
pop
in
add
sbb
outsb
jg
push
pop
xchg
mov
sahf
js
ret
test
adc
sbbb
out
leave
xorb
fistpll
inc
loop
sub
mov
mov
push
adc
push
sbb
push
shlb
inc
ljmp
dec
lcall
in
push
sbb
cmp
stos
and
test
int3
xor
js
cmpsb
or
cmp
mov
mov
std
dec
xor
mov
push
imull
jno
and
or
aas
sbb
js
aam
lock
and
out
cmp
mov
es
scas
cmp
loopne
add
shll
jnp
popa
xor
ja
xchg
mov
hlt
loop
adc
cli
add
jmp
popa
xchg
sahf
sti
add
aad
addr16
pop
xchg
add
pop
outsl
sarl
jmp
sbb
and
adc
repz
mov
sbb
push
test
scas
lea
or
mov
jmp
data16
int
xchg
push
sbb
outsw
mov
aaa
xor
add
cld
jmp
movb
call
inc
mov
push
jae
sti
test
sub
iret
or
into
xor
mov
data16
aas
pushf
add
or
xchg
adc
fnstcw
nop
add
mov
inc
mov
sub
mov
adc
or
sbbb
xchg
push
sbb
and
pushf
mov
cmp
xor
xorb
lock
clc
lea
mov
mov
jb
stc
inc
cmc
fnstenv
mov
add
push
call
idivl
addr16
mov
pop
iret
pushf
mov
repnz
adc
fistl
mov
mov
mov
sbb
stc
xor
int3
loopne
or
or
jno
or
adc
sub
add
xor
out
rorl
aaa
lods
rorl
pushf
into
outsb
inc
mov
jno
mov
mov
sub
sub
add
cli
cmp
mov
add
sbb
jg
push
add
xor
dec
add
xor
hlt
jl
xor
push
push
mov
or
ret
bound
add
inc
movsl
inc
cmp
leave
jg
insl
sbbl
push
call
jmp
shr
xchg
or
or
imulb
mov
sub
jp
lds
std
nop
out
or
cltd
jb
movsb
inc
push
adc
gs
imul
call
fdivrl
das
das
pop
int
and
in
mov
mov
stos
adc
or
mov
pop
push
loop
pop
and
xor
jmp
repnz
sub
inc
jmp
adc
fs
xchg
mov
sbb
ror
aas
adc
dec
jb
or
inc
ljmp
stos
cwtl
std
jmp
xchg
loope
and
movsb
aam
adc
mov
dec
or
sbb
rclb
fdivrl
xchg
xor
mov
add
inc
dec
lds
lea
lea
ja
mov
xor
test
out
data16
outsl
iret
inc
test
mov
mov
stc
movsl
jae
jno
sbb
push
xor
push
cmpsl
xchg
push
lods
int3
leave
jno
aas
icebp
sub
inc
and
sbb
and
jmp
or
jno
cs
push
aaa
setle
cli
mov
or
xor
in
cmp
movsb
mov
push
xlat
rolb
das
pop
adc
adcl
and
dec
repnz
push
dec
pop
leave
subl
dec
andb
add
xchg
xor
pop
lods
std
sub
lahf
push
jno
call
pop
popa
stos
and
sbb
aaa
lret
sbbb
pop
adc
call
inc
fsubr
mov
jmp
jl
mov
sub
lods
add
insl
jge
mov
dec
xor
xchg
decl
push
jns
xchg
cmpl
test
pop
lret
cmp
faddp
je
mov
sbb
or
xchg
pop
stc
inc
fadd
call
nop
pop
mov
jmp
sbb
in
in
pop
inc
call
test
sar
mov
mov
pop
cli
int
jecxz
xor
cltd
add
and
push
in
push
mov
sti
xor
xchg
or
pop
lahf
mov
mov
lahf
loopne
inc
sti
out
inc
hlt
dec
or
cld
pushf
scas
dec
fsubrp
ret
or
cli
jmp
pop
push
mov
pop
stc
xchg
pop
xor
add
ret
int3
sbb
mov
and
xor
mov
mov
pop
push
cmpsl
lods
or
call
fnstsw
movsb
sahf
jmp
mov
enter
mov
and
add
inc
mov
cld
inc
sbb
inc
push
mov
xor
mov
push
adc
cltd
sub
and
sbb
push
push
mov
push
movsl
adc
sbb
cld
jmp
pusha
gs
mov
in
cmp
cmc
jbe
pop
in
sub
pop
je
push
inc
xchg
shrb
xchg
mov
push
mov
mov
sbb
scas
and
xor
cld
inc
or
jno
jmp
outsl
ror
or
push
mov
push
push
mov
mov
mov
dec
dec
mov
cld
mov
dec
push
jae
mov
mov
cwtl
out
and
pop
cmc
addl
repz
aaa
mov
sub
dec
sarb
jmp
nop
enter
stc
xor
cltd
sub
or
aaa
xor
call
leave
adc
mov
cmp
pop
inc
mov
pop
call
faddp
out
cld
pop
mov
mov
xchg
xor
inc
jns
mov
gs
pop
lahf
jle
cmp
inc
sbb
jecxz
clc
clc
repnz
inc
jb
push
in
call
mov
or
or
mov
xchg
icebp
popf
pop
sbb
cli
ret
lock
mov
mov
inc
mov
les
push
add
insl
adc
jl
aaa
daa
push
push
xchg
push
sbb
mov
sub
dec
mov
pop
or
push
shll
imul
subb
je
jno
arpl
jp
repz
jno
dec
xor
sub
and
repnz
pop
insb
ret
mov
pop
or
cmc
mov
popa
int
jmp
fsts
inc
jl
divb
push
jo
iret
daa
in
cmp
notl
out
mov
mov
lods
cli
push
arpl
shrb
xor
mov
repz
push
incl
mov
sbb
push
pop
out
pop
popf
mov
pop
push
scas
sbb
push
jbe
dec
std
xor
xor
xchg
or
mov
mov
testb
nop
xchg
sub
ja
pop
mov
cmp
pop
or
or
rcl
and
lahf
xor
inc
push
sub
lahf
iret
pop
or
pop
push
jno
out
hlt
or
loopne
ret
ret
cmpsl
sti
test
mov
xchg
test
imulb
sahf
add
dec
push
push
aas
in
xor
subl
leave
iret
sub
xorb
jp
lods
popf
jg
loop
sub
mov
out
jo,pn
fidivrs
in
jmp
mov
xchg
int
mov
push
xor
sub
mov
push
outsb
pop
out
cmp
fildl
sbb
push
adc
sti
addb
push
icebp
call
sbb
aas
dec
in
out
xchg
rep
into
xchg
lock
push
call
mov
lods
cmp
in
enter
cmpsb
sbb
adc
cwtl
ja
jmp
fs
mov
xchg
repz
out
fisubrs
inc
rorl
mov
daa
ljmp
add
jae
mov
jmp
push
rolb
xor
test
inc
or
jmp
add
sub
dec
cmp
lods
stos
mov
jbe
dec
loope
add
jmp
mov
or
or
or
jmp
repnz
sar
lahf
into
popa
pop
xor
mov
cltd
sti
push
xor
clc
lods
inc
shl
inc
outsb
icebp
dec
dec
mov
jmp
pop
push
pop
sbb
adc
dec
adc
cmp
mov
repz
ss
dec
mov
js
in
mov
sub
and
mov
dec
push
dec
add
in
pushf
leave
and
jno
jbe,pn
fdivl
outsl
push
add
pushf
out
and
jns
in
add
mov
jge
clc
jne
fmul
xchg
dec
sub
repnz
scas
movsb
push
mov
fcomps
push
in
and
in
push
or
hlt
lock
fwait
int3
js
push
xor
rcrl
sub
and
mov
xor
test
pop
add
imul
comiss
les
add
inc
dec
mov
mov
push
or
cli
das
xchg
cltd
hlt
pop
xor
shll
aas
adc
sub
mov
mov
lods
pop
out
or
jno
cmp
sub
hlt
cli
leave
xor
orl
cmpsb
adc
adc
mov
mov
aaa
out
jecxz
cmp
jb
xor
sub
push
cmp
data16
mov
lahf
test
mov
mov
ret
mov
stos
adc
jmp
test
bound
push
jecxz
and
subb
gs
ljmp
push
movsl
and
es
aas
dec
fcoms
das
int3
scas
push
out
push
cmp
call
test
daa
fisttpl
push
iret
jmp
pause
mov
lret
in
ret
dec
sbb
add
not
adcb
mov
fucomp
sarl
mov
mov
jge
jno,pt
push
packuswb
mov
int3
daa
pop
xchg
or
cmp
inc
jmp
fisubrs
nop
sbbb
mov
lret
inc
and
out
popf
jne
xchg
loopne
adc
mov
nop
gs
xchg
dec
cmpsb
mov
add
in
cmp
jl
mov
mov
sahf
sbbb
lahf
push
jmp
in
lahf
adcb
add
jecxz
adc
scas
pop
ficompl
and
push
addr16
jno
inc
and
mov
adc
call
ss
inc
jmp
sbb
cmp
pop
jp
cmpsb
stos
mov
roll
mov
jae
shll
mov
fsubr
cli
and
mov
xchg
lret
jge
fs
mov
ret
aaa
in
sbb
insl
xor
xchg
push
sbb
repnz
lds
xchg
mov
inc
imul
lods
test
xor
cwtl
sub
push
sub
or
rol
cmpsb
fists
dec
and
loope
xchg
mov
pop
mov
add
push
mov
or
jmp
cmp
orb
mov
or
imul
pop
push
dec
aad
mov
mov
ja
lret
and
push
mov
jbe
mov
ja
pop
hlt
mov
mov
call
and
addr16
mov
sub
call
pop
or
loopne
sub
sub
dec
cs
mov
pop
cmpb
pop
push
push
and
mov
popa
dec
add
jne
push
push
movsl
in
mov
andb
inc
cli
sub
or
sbb
icebp
xchg
inc
cwtl
or
pop
fimuls
and
add
inc
leave
xchg
and
push
cmp
push
cld
mov
mov
mov
rcrb
inc
mov
testl
loope
adc
push
pop
cmp
xchg
cmc
push
out
mov
shlb
iret
xor
inc
insb
xchg
roll
inc
movaps
mov
add
jecxz
daa
and
jb
adc
pop
jecxz
das
mov
imul
in
mov
pushl
sub
mov
cmp
push
test
ss
outsb
mov
adc
mov
dec
cmp
xchg
inc
push
movsb
repz
aaa
jp
xor
fisttpl
sbb
push
sbb
in
mov
sbb
or
mov
adc
cmp
push
xchg
or
movsb
shl
test
mov
jns
xchg
out
xchg
aaa
jge
and
mov
pop
fwait
insl
sbb
mov
and
mov
out
mov
popa
mov
fbstp
xchg
sbb
stos
sub
pop
sbb
movsl
mulb
lcall
mov
sub
jno
popa
push
sbbb
fcoml
and
filds
cmc
dec
das
lahf
in
push
dec
cmp
or
jno
dec
stos
fcomps
out
adc
or
cmpsb
push
push
adc
loop
je
test
jb
adc
decb
shll
jp
into
xor
mov
adc
sub
rcr
notb
fidivs
pop
xchg
pop
shll
stos
jecxz
or
or
pop
shrb
dec
adc
call
jg
push
lods
jecxz
lea
push
push
aam
adc
enter
push
mulb
insl
pusha
test
subb
add
out
pop
xchg
or
call
into
inc
add
insb
mov
adc
jmp
test
sub
ljmp
xchg
das
inc
jle
lret
and
pop
pop
xchg
adc
pushf
das
inc
dec
in
arpl
mov
out
pop
lcall
sbb
fists
xor
cmpb
jns
aaa
daa
inc
push
mov
into
push
dec
je
bound
jmp
xorb
or
pop
mov
jne
dec
inc
inc
jmp
inc
js
ret
aam
mov
jmp
js
inc
sbb
pop
push
hlt
filds
cmp
jbe
mov
fisttpll
jl
insb
inc
mov
sbb
insb
mov
add
ss
shrl
or
or
call
push
popf
jmp
sub
xchg
into
cmpsb
adc
div
cmpsl
ljmp
repnz
or
sbb
ljmp
popf
cmc
sub
or
jl
jl
push
int3
pop
xor
insb
or
xor
nop
mov
dec
addl
nop
pop
cmp
mov
xchg
in
stos
pushl
jne
pop
aad
jb
inc
ret
call
cmc
xchg
lret
sbbb
push
pop
mov
push
cld
jmp
pop
dec
test
pusha
daa
mov
jecxz
add
mov
movsl
jb
out
icebp
xor
mov
cmp
fbld
nop
xchg
xchg
out
add
cld
sub
call
pop
jp
push
jbe
inc
xor
scas
jmp
or
mov
popa
pop
mov
and
adc
pop
pop
jbe
insb
xor
sbbb
aaa
or
mov
std
pop
pop
dec
add
push
sarb
cwtl
jns
out
dec
lret
jo
xor
mov
mov
ljmp
dec
jge
push
jl
pop
popa
sub
xor
mov
rol
ss
out
daa
rcrb
add
ffree
popf
jecxz
jl
pushf
lcall
stos
mov
lods
jecxz
ja
int3
int
push
std
aas
jg
push
mov
lret
jno
maskmovq
testl
int3
rorl
sbb
adc
adc
addr16
dec
dec
in
decb
mov
cmp
test
xchg
dec
push
fisubl
mov
lods
mov
in
jb
xchg
mov
xchg
push
iret
ljmp
xor
pusha
add
int
inc
add
lahf
loop
popf
clc
push
lahf
pop
cmp
xchg
les
sbb
xchg
or
lahf
push
pop
cmp
outsl
fwait
mov
scas
pop
sbb
movsb
xchg
and
imul
cld
adc
xor
icebp
lea
mov
or
std
pop
repnz
or
add
test
jp
pop
adc
int
das
jecxz
add
or
pop
mov
sbb
cltd
imul
mov
push
mov
sbb
inc
ret
push
lahf
andb
popa
or
xchg
inc
lods
mov
add
add
cmp
je
sub
dec
daa
push
adc
pop
sub
and
push
inc
push
mov
popa
test
xchg
stos
add
and
fmulp
sub
mov
repnz
dec
add
push
lahf
jg
pop
pop
clc
add
mov
jno
or
cmc
clc
imul
and
mov
out
rorb
jle
add
pop
scas
les
mov
fldl
lods
dec
sbb
jl
out
lret
mov
add
in
or
lret
loopne
jecxz
stos
les
out
or
int
adc
push
jl
ljmp
sub
ja
jle
xchg
scas
push
mov
decb
push
and
pop
cmp
xor
inc
push
inc
push
inc
mov
mov
es
subb
mov
dec
xchg
mov
mov
cmp
xor
call
fisttpll
inc
push
jg
sub
jge
push
sbb
jb
mov
and
inc
pop
push
or
push
aam
add
rolb
test
lods
adc
dec
xorb
sub
and
xor
cmp
ror
mov
ja
fstp
mov
sbb
lods
enter
mov
aam
test
push
call
or
mov
cmp
add
sub
in
daa
popa
xor
pop
lcall
or
add
sub
std
xor
call
inc
scas
lahf
pop
add
adc
divl
leave
pop
xor
mov
sub
xor
or
in
push
inc
mov
fistpll
lds
jmp
dec
pop
xor
mov
fcoms
call
xchg
jmp
popl
or
fdivrl
push
mov
cmp
lods
je
in
and
cld
adc
inc
das
repnz
mov
add
loop
xchg
clc
or
push
pop
sub
mov
int3
dec
loop
icebp
inc
movsl
scas
add
andb
pcmpeqw
add
push
popw
adc
int
int3
dec
stos
test
imul
jge
inc
xchg
and
and
inc
lds
mov
push
stos
pop
arpl
and
add
push
addb
sub
or
sbbl
xchg
mov
xor
inc
push
push
call
xor
pop
mov
cmp
mov
jbe
add
push
test
repnz
dec
sbb
and
push
mov
fstpl
jo
xchg
push
repnz
lcall
add
inc
les
add
test
cmp
pop
jp
les
push
mov
fimuls
xchg
daa
xor
fs
inc
call
xchg
mov
pop
popa
rclb
loopne
jl
insb
dec
jmp
mov
sbb
loopne
orb
call
xor
addb
dec
gs
xchg
insb
mov
into
inc
jge
inc
pop
jl
lret
or
mov
or
pop
cmpsb
jmp
fs
mov
lahf
push
inc
das
add
shlb
jle
ds
mov
or
cs
test
xor
jmp
fmull
xor
jo
dec
cmp
call
jg
pushf
loope
and
cli
mov
jbe
ja
push
xor
push
pop
add
addb
lahf
cli
mov
stos
adc
mov
fiadds
lret
rcrb
inc
add
sbb
notl
dec
sar
sarb
xlat
pusha
fiaddl
orb
aam
jo
jno
div
mov
sarb
call
xchg
pop
cmpb
mov
mov
jg
push
push
and
adc
or
jb
dec
xchg
in
or
push
mov
enter
inc
and
xchg
les
sbb
les
sub
orb
pop
leave
repnz
repnz
mov
roll
push
ds
test
mov
fs
loopne
mov
test
xorb
adcl
neg
sbb
push
lods
mov
jbe
inc
loopne
mov
add
pop
mov
push
add
daa
loopne
je
inc
sbb
mov
mull
inc
push
jp
and
rclb
jnp
push
rcrl
sub
in
insb
mov
jno
or
add
cltd
push
or
mov
cld
out
test
cmp
jmp
jp
repnz
jp
fwait
sbb
sti
pop
dec
cmp
jmp
pop
adc
lock
in
jl
jno
push
fcoms
and
dec
mov
xor
xor
mov
clc
adc
xchg
pop
jne
sarb
enter
jge
cld
xchg
jmp
inc
jne
jnp
jb
mov
insl
mov
push
mov
xor
pop
add
push
lret
hlt
roll
loopne
mov
les
push
cmp
jb
push
xor
xchg
scas
shll
pop
dec
push
out
push
and
std
jmp
pop
adcb
adc
lret
in
mov
push
inc
cmpsb
lds
repnz
out
pop
adc
jge
aam
jmp
push
cwtl
inc
dec
sub
xor
fsubrl
into
mov
repnz
add
push
pop
out
adc
call
and
pop
jmp
push
sbb
mov
xchg
pop
test
call
sbb
sahf
das
mov
in
leave
fucomp
mov
inc
add
fimuls
mov
cli
aaa
adc
fucomip
addr16
push
daa
mov
loope
cmp
or
jmp
or
inc
daa
mov
mov
shll
and
jnp
pusha
shll
clc
ss
outsl
dec
stos
idivl
pop
mov
pop
push
pop
cs
jo
call
cmp
jns
bnd
mov
daa
dec
out
jo
mov
sub
add
or
push
push
mov
mov
add
fldt
dec
mov
or
add
shll
pop
in
xchg
or
push
xor
add
popa
in
mov
in
inc
jmp
ja
lea
sbb
or
cmpsl
test
loopne
call
cmp
inc
negl
inc
inc
pusha
orb
push
inc
pop
pop
fists
and
add
cmp
inc
loop
dec
lods
jmp
shll
out
in
mov
add
inc
ret
adcb
fdivrl
pop
loopne
or
sub
mov
ljmp
call
add
movsl
sub
shrb
or
inc
das
jge
aam
repnz
mov
add
mov
xor
flds
shll
push
loope
cmp
call
mov
adc
insl
and
push
repnz
js
xchg
mov
or
xchg
xchg
and
dec
cmc
hlt
mov
mov
and
orb
psrlw
dec
and
loope
xor
or
cmpsl
mov
jb
pop
push
jle
dec
fwait
pop
xchg
addr16
dec
call
je
repnz
mov
in
inc
movsb
stos
sahf
mov
ret
push
sub
mov
mov
mov
mov
mov
sahf
call
repnz
lcall
mov
inc
out
xchg
xchg
jle
add
cmp
jbe
xor
fmul
cmpsb
xor
imul
mov
mov
dec
push
xchg
pop
mov
ljmp
inc
cmp
test
jo
aad
lahf
push
int
or
inc
xchg
cmp
adc
xor
jo
or
cli
dec
sbb
pushw
cmp
dec
mov
shrl
in
jge
mov
rcrb
and
cmp
in
xchg
push
divb
add
push
jmp
cwtl
stc
push
add
or
daa
rorb
aas
setg
dec
inc
mov
popl
insl
push
in
fs
or
call
and
jl
lret
mov
push
sbb
loop
push
adc
jns
sub
xchg
imulb
push
mov
shll
xor
xor
imul
adc
jle
mov
inc
push
inc
je
adc
dec
jne
lods
sub
xor
sbb
push
sbb
out
aaa
sbb
inc
ret
or
dec
fistpl
es
mov
fwait
into
insb
inc
and
negl
mov
mov
jmp
rolb
ret
and
add
lcall
imul
pop
dec
mov
aaa
add
sbb
sub
add
sbb
or
test
lret
push
xor
xchg
adc
addr16
jge
pop
popa
mov
pop
xchg
roll
mov
call
inc
dec
lods
mov
xchg
dec
sbb
pop
add
call
push
cmp
pop
pop
adc
push
dec
rorb
pop
pop
pushf
lods
sub
mov
jo
mov
jb
loop
add
sbb
andb
mov
or
movsl
adc
xchg
sbb
inc
push
inc
sub
mov
or
dec
xchg
add
mov
leave
ficoms
ret
stc
xorl
mov
jp
push
movb
push
loopne
sub
clc
ficoml
pop
iret
sub
push
push
mov
lds
lcall
rorl
sub
or
push
push
mov
jbe
sbb
adc
push
mov
jo
push
add
mov
fs
and
or
add
pop
out
lahf
push
addb
dec
dec
lds
pop
fistps
jg
cmpl
xorb
mov
mov
or
push
pop
xor
shl
add
xchg
int
aaa
movsb
xor
lcall
jbe
cltd
out
out
ljmp
daa
icebp
dec
dec
mov
push
out
add
pop
adcb
cmp
cli
lret
push
jne
or
xchg
int3
push
daa
fucomip
jns
push
sub
sub
mov
push
ret
dec
leave
arpl
ja
pop
addr16
scas
xchg
lret
pop
dec
xchg
popf
fbld
pusha
js
addb
gs
push
mov
pop
aam
push
pop
pop
in
call
pop
xchg
mov
sub
pop
adc
jle
and
orb
out
frstor
mov
or
in
add
stos
or
inc
cli
pushf
ss
push
inc
xchg
add
xchg
lret
push
push
inc
and
dec
xor
adcb
aaa
movsb
insl
sar
shl
jno
rcrl
out
int3
inc
cltd
adc
mov
insb
ficompl
je
ret
inc
cmp
jno
out
adc
pop
mov
mov
loop
out
or
dec
popa
add
mov
sub
adc
xchg
dec
or
pop
int3
pop
mov
cmpsb
jmp
add
repnz
jmp
sub
mov
push
mov
mov
sbb
mov
test
scas
loopne
mov
andb
xor
or
fcoml
daa
cli
faddl
jmp
ss
ret
stc
push
lods
rcr
and
mov
nop
jns
daa
sbbb
icebp
push
push
mov
jle
ret
sbb
xor
mov
icebp
mov
mov
pop
pop
stos
pop
push
xchg
push
mov
aad
inc
jp
inc
mov
xchg
dec
inc
dec
jmp
inc
pop
jmp
mov
xchg
add
xor
or
mov
and
hlt
xchg
fmull
push
sbb
jecxz
test
pop
or
push
mov
icebp
push
xor
xor
pop
scas
sti
or
paddq
mov
cs
or
or
jb
mov
or
xchg
call
adc
and
fcmovne
xchg
push
jns
das
xor
sbb
pop
push
adc
jmp
mov
xchg
popf
jne
iret
mov
jle
cmovs
loope
push
pop
es
clc
fsubs
movsl
lahf
out
dec
call
daa
cmp
pusha
mov
or
lods
xor
and
jbe
sbb
div
and
std
or
pusha
xchg
mov
jl
dec
out
jmp
push
sbb
or
std
mov
mov
int3
add
jo
push
inc
inc
push
sahf
inc
cmp
out
fildll
add
mov
dec
dec
aas
adc
rorb
inc
mov
mov
mov
call
in
rclb
out
das
call
and
ret
mov
or
xchg
in
sahf
push
dec
xor
data16
aam
jns
or
dec
add
mov
jnp
rorb
adc
lock
mov
mov
cmp
push
call
xchg
js
dec
stos
inc
imul
mov
sbb
cmpl
aaa
mov
test
repz
push
fisttpll
je
jns
push
pop
xchg
mov
int
call
gs
xor
sbb
push
jmp
or
imul
testl
mov
inc
sub
pop
pop
dec
mov
push
into
cmpsl
and
jo
xchg
dec
pop
mov
outsl
das
mov
push
adc
bound
fsubl
addl
daa
popf
scas
sbb
add
mov
loop
pop
mov
and
in
icebp
add
jbe
ljmp
pop
or
and
ret
sahf
mov
call
push
sub
jns
jp
adc
mov
sbb
les
inc
inc
outsb
pop
fisttpl
mov
sbb
lods
add
outsl
add
mov
test
push
test
mov
sub
push
push
dec
xor
mov
add
adc
roll
jmp
xchg
add
cwtl
or
mov
cmpsl
test
sub
dec
mov
xchg
jmp
dec
pop
cmp
aam
call
cmp
or
arpl
addr16
aad
jp
pop
ficomps
lock
sbb
jl
dec
and
cmp
in
push
or
je
cmc
idivl
scas
icebp
jp
rorb
fidivl
push
out
xchg
jmp
jmp
add
or
mov
jecxz
fwait
incl
mov
popa
push
sub
xchg
je
rcrl
adc
and
mov
imul
pop
call
popa
fmul
push
jmp
out
xchg
imul
mov
or
iret
dec
inc
pop
hlt
dec
nop
in
daa
xor
sbb
xchg
cmp
or
rcll
faddl
jnp
icebp
add
and
icebp
sub
and
pop
add
ret
or
dec
je
shr
in
call
jne
jg
out
push
pop
xor
or
jle
push
test
cmpb
jb
sbb
jns
sub
sbbb
lds
jmp
call
sub
cmc
int3
lret
or
jle
or
mov
adc
sub
pop
imul
add
or
xchg
and
push
jnp
inc
das
in
arpl
iret
pushf
scas
lcall
mov
in
dec
inc
mov
gs
test
inc
sbb
xor
add
ficoml
xorl
or
aad
arpl
movsb
out
sub
pop
push
adc
and
add
sbb
jl
adc
pop
pop
insl
xor
push
ret
xchg
loope
and
inc
jl
rcll
fmull
inc
sbb
inc
mov
and
pop
jmp
test
pop
mov
lahf
popf
je
xor
sti
das
not
and
repnz
call
je
orb
inc
std
loop
or
scas
xor
and
fisubl
pop
jne
call
cmp
jmp
cs
adc
xchg
jmp
push
push
mov
fimull
push
inc
or
int
mov
jle
jno
push
incl
add
sub
fistps
dec
push
mov
orb
sti
cmp
cmp
out
inc
sub
push
sub
jno
inc
or
adc
xchg
dec
push
push
mov
lcall
pop
cmp
pop
rcr
cmp
negb
orb
mov
or
decb
lock
pop
enter
loope
dec
sbb
shll
or
fcoml
popf
add
sub
icebp
pop
xchg
das
lret
pop
adc
or
mov
mov
dec
sub
and
cmp
sub
sbb
add
or
shl
jp
pop
stos
pop
popf
std
mov
mov
popf
push
fldt
pop
mov
mov
pop
mov
shl
push
cmp
jne
call
add
add
out
sub
mov
push
jmp
jne
call
pop
add
mov
inc
inc
or
jns
out
push
push
inc
adc
cld
jmp
enter
pop
adc
sub
push
loopne
test
arpl
lods
ficompl
test
xchg
leave
xor
push
clc
jmp
xor
push
bound
fsubrp
gs
loope
mov
pop
sub
lods
pushf
sub
stos
repnz
mov
fidivs
scas
xor
jnp
dec
aaa
shl
mov
jmp
add
or
out
sarb
stos
paddq
mov
lods
and
mov
mov
in
out
push
dec
lahf
mov
inc
je
inc
pop
cs
sbb
jmp
jb
jmp
fwait
cwtl
shrb
sahf
or
jle
jmp
push
mov
add
or
out
and
push
xchg
pop
add
adc
fdivs
cwtl
add
push
test
xchg
aam
jnp
xor
add
sbb
icebp
cmp
and
and
pop
andb
mov
pop
or
mov
inc
or
adc
scas
fcoms
xchg
adc
adc
stos
adc
dec
cli
jno
jno
addr16
mov
xchg
dec
inc
pop
pop
push
call
cmpb
mov
pop
xor
xchg
inc
sub
xlat
or
add
xor
fld1
imul
cld
insl
jmp
push
cmc
add
in
or
adc
sub
fcomip
sbbb
or
xlat
sub
or
sbb
sbb
lods
xchg
jecxz
jo
push
dec
scas
call
xchg
pop
mov
inc
mov
push
sub
ffreep
add
gs
stos
jl
push
sbb
or
cmp
mov
stos
add
repz
push
add
pusha
mov
push
fnsave
adc
inc
leave
xchg
push
nop
in
loop
mov
sub
jbe
xchg
clc
and
inc
sbb
mov
idivl
push
xchg
gs
inc
add
jb
inc
lahf
pop
fnstsw
push
sub
test
cmc
sbbb
add
in
xchg
jbe
sub
loop
and
mov
stos
cmpsl
sbb
into
repnz
pushf
dec
cmp
ret
dec
out
mov
out
cmp
pushl
int3
jmp
xchg
shrb
scas
movsl
mov
insl
cs
fwait
xchg
test
lods
adc
out
inc
mov
inc
push
sbb
mov
repnz
insb
xchg
les
add
push
mov
shll
call
repnz
adc
xlat
push
push
push
inc
mov
cmpsb
cmc
je
call
sub
push
jmp
sub
xchg
call
notl
inc
pop
push
fdivrl
dec
cmc
cmp
pop
xchg
jae
adcb
mov
xchg
lock
cltd
lret
repnz
dec
jecxz
xchg
xlat
lret
test
dec
add
push
enter
repnz
mov
stc
push
push
fwait
in
divps
dec
or
or
adc
mov
cmc
fs
sbb
out
int3
jmp
pop
movsl
add
mov
std
pop
push
addl
sub
into
jne
jp
mov
and
xor
or
pusha
mov
adc
out
xchg
dec
popf
shl
jle
xor
sar
and
les
fdivrl
aas
je
jbe
loope
push
insl
mov
adcb
adc
imul
int3
pop
xchg
pushf
imull
mov
in
pop
popl
sub
mov
mov
dec
xchg
in
fdivs
call
lock
cmp
cltd
jge
sarl
dec
andb
xchg
movsb
jecxz
cmp
je
push
or
es
mov
enter
aad
arpl
jle
out
fidivs
mov
jo
mov
into
sbb
int3
int
stos
mov
jb
adc
or
mov
or
jo
dec
jecxz
or
pop
cmp
mov
sub
and
xlat
imul
jae
fadds
push
aad
and
jmp
cmp
push
shrl
sub
hlt
iret
sbb
jnp
mov
and
adc
inc
jp
data16
movsb
mov
cmpl
enter
mov
sub
jo
call
inc
popf
mov
in
incb
orl
or
mov
jo
sub
dec
rclb
mov
push
mov
jl
addl
je
jl
jb
enter
iret
ja
pop
or
icebp
test
jp
cwtl
xchg
bnd
das
sbb
shr
repnz
clc
rorb
xor
dec
push
and
inc
and
mov
xchg
iret
in
jecxz
or
cltd
cmp
mov
test
xor
repz
or
and
inc
cmpsb
das
das
leave
sbb
pop
jmp
les
xor
loop
dec
cli
cld
xlat
mov
sbb
inc
js
add
fcompl
popf
jnp
or
rcl
xchg
adc
bound
int3
push
cwtl
add
inc
pop
sub
dec
lret
jmp
andb
fiaddl
rorl
or
jns
adc
adc
sub
and
das
mov
mov
adcb
xlat
inc
xor
adc
jge
loop
rcrb
inc
leave
mov
dec
or
push
push
add
ljmp
cmp
add
fldt
bnd
fstps
push
and
mov
push
adc
and
repz
mov
or
loopne
add
int3
xchg
or
dec
add
mov
in
fdivp
leave
int3
jnp
mov
out
jb
std
inc
les
outsl
push
daa
out
mov
adc
cli
mov
mov
inc
fidivrl
inc
mov
fsubrs
mov
or
or
xchg
nop
or
call
mov
xor
icebp
or
inc
push
pop
cmp
mov
mov
lock
push
jmp
adc
ljmp
xchg
pop
jmp
mov
jo
dec
xchg
sub
xor
add
jno
mov
sbb
sbb
mov
cmpb
push
repnz
xchg
push
sbbb
pop
xor
dec
xchg
int
cwtl
jbe
jmp
out
push
call
addr16
lahf
cmp
mov
sub
out
movhlps
pusha
xchg
jmp
out
cwtl
loop
sub
and
dec
or
arpl
adc
xorb
inc
shrb
add
xchg
in
test
adc
mov
stos
test
fucom
or
pushw
push
pop
jmp
pop
sti
cmc
xlat
jb
insl
cmp
inc
add
idivl
mov
mov
adc
jnp
or
cmp
test
jo
or
and
push
mov
mov
shl
cmp
inc
lcall
sub
cmpsb
cmp
cs
pusha
xchg
mov
mov
rcl
xchg
pop
cltd
adc
orb
ret
rorb
xchg
inc
push
sub
jl
jle
mov
pop
sub
fldcw
iret
mov
mov
fbld
dec
sbb
mov
mov
sahf
sub
cmp
push
ret
outsl
cli
aaa
cmp
xor
cmp
push
mov
repnz
scas
insb
sub
jo
xor
mov
push
fs
sub
or
fnstcw
cli
leave
adc
sbb
push
movsb
outsb
into
lock
inc
mov
cmpl
andb
repnz
cmp
sbb
push
mov
push
add
stc
mov
das
add
mov
sti
adc
mov
xlat
pop
cmpsb
and
popa
push
inc
adc
movsb
cmp
int
xor
adc
imul
movsl
orb
outsl
sahf
mov
mov
push
push
cli
adc
jmp
hlt
repz
punpckhbw
and
data16
xchg
loope
out
shl
push
stc
fmull
sbbb
loope
sub
xchg
sub
movsb
js
xchg
pop
pop
mov
inc
daa
push
add
pop
and
pop
sub
leave
xor
div
je
jo
xor
or
and
inc
mov
cmpsb
daa
adc
xor
dec
repz
jmp
cmpsl
mov
and
test
addb
sub
push
push
mov
cwtl
mov
js
mov
push
xor
jae
inc
gs
ds
mov
daa
out
imul
bnd
mov
mov
adc
into
icebp
test
xchg
fwait
pop
jno
mov
inc
js
mov
rcll
sbb
fadds
and
das
jle
inc
push
icebp
lds
xor
inc
sarb
jecxz
xor
mov
or
clc
mov
sbb
mov
pushf
aaa
call
mov
sbb
or
stc
inc
add
mov
add
addb
pop
fisttpl
lret
mov
mov
dec
add
imul
enter
xchg
rcrl
sub
dec
xchg
inc
outsl
orb
jle
fldl
mov
hlt
adc
pop
mov
jne
inc
push
inc
repnz
mov
mov
pop
rolb
out
mov
shlb
mov
add
aas
sub
mov
add
xchg
int3
mov
adc
call
cli
dec
xor
pop
test
dec
mov
jnp
fst
and
call
pop
xor
into
fwait
and
pop
sbb
push
sbb
push
push
movsl
cmp
adc
inc
or
int
inc
sub
ja
in
in
incl
jg
jo
loope
xor
jae
add
jmp
push
xchg
stos
sub
fsubrl
ret
xor
pop
jno
xlat
sub
push
ror
or
loope
push
jne
inc
repnz
push
cwtl
mov
add
inc
ss
ds
and
xor
or
rol
jmp
std
pushf
pop
add
mov
jnp
push
xor
mov
jl
or
fwait
or
subb
inc
adc
sbbb
jge
or
xchg
movb
test
jp
icebp
movsl
cmp
test
insl
xchg
je
insl
push
add
movsb
mov
jb
push
mov
das
mov
ja
mov
rcrb
push
out
xor
ss
movsl
jbe
inc
add
xor
push
or
mov
out
inc
fcomi
shrl
push
mov
mov
roll
mov
push
call
hlt
adc
in
jmp
mov
test
adc
notl
pop
lock
test
cmpsl
int
cmp
mov
sub
loop
jo
adc
jne
pop
xchg
jno
xor
dec
fisubs
pop
adc
jmp
call
pop
mov
ss
fldl
cmp
in
sub
mov
jmp
adc
test
fs
push
xor
ds
mov
bnd
int
icebp
stos
out
xor
push
add
mov
mov
test
or
xchg
push
or
lahf
cs
faddl
loope
sbb
test
stos
leave
jge
rdpmc
xlat
and
jecxz
mov
data16
or
dec
push
jo
mov
push
push
movsb
cmpsl
lret
jb
pop
xchg
xchg
loop
push
loop
dec
sarl
test
lods
add
pop
xor
pop
imul
mov
mov
and
lret
pop
jb
pop
je
in
int3
xchg
push
mov
and
or
sbb
pop
push
ljmp
in
sahf
iret
jge
push
mov
and
dec
mov
iret
pushf
popf
sub
dec
into
push
leave
jno
cli
les
push
adc
push
call
and
dec
push
xchg
mov
sarb
xor
pop
aaa
cld
mov
inc
loopne
das
pop
insb
imul
dec
insb
mov
scas
mov
push
pop
dec
adc
sahf
or
jg
in
or
stos
and
pop
and
cmc
ljmp
jl
cld
pop
call
dec
mov
pop
and
mov
mov
aad
pop
mov
mov
int3
mov
lahf
add
mov
and
or
fwait
pop
adc
stos
in
mov
sub
lds
add
int
stc
ret
dec
pusha
jo
fwait
cmp
push
mov
fimuls
inc
jmp
test
je
inc
inc
mov
xchg
cmpsl
ljmp
clc
or
xchg
adc
into
hlt
pushf
mov
loopne
jge
mov
cmpsb
std
in
in
mov
mov
enter
xor
ljmp
or
inc
xor
pop
shll
negl
iret
idivb
out
pop
pop
xchg
mov
cwtl
pop
addr16
test
test
outsl
popf
cmpl
sub
or
cmp
insb
fwait
or
enter
cmpsl
jmp
lret
or
xor
push
aad
push
pushf
cmpsb
mov
sub
iret
and
sub
inc
jno
nop
std
xchg
pop
inc
sbb
repz
icebp
push
adc
pop
mov
loop
mov
lods
ficoms
inc
xchg
xor
jmp
sub
cli
lds
dec
repz
pop
dec
jecxz
pop
sub
adc
xchg
dec
xchg
adc
std
insb
or
int3
sbb
mov
pop
daa
mov
iret
addr16
call
cmp
or
fldcw
test
cmpsb
cltd
shrb
push
cld
inc
scas
and
fwait
pop
mov
test
lods
sub
lcall
fisttpll
pop
mov
pushf
sti
or
fistpll
mov
push
dec
shl
pop
mov
jle
sarb
imul
pop
test
mov
clc
int3
leave
push
loopne
dec
sahf
rcr
arpl
pop
call
push
xor
jp
fimuls
lds
mov
int
hlt
insl
mov
add
mov
mov
js
std
sub
lret
ficoms
xchg
mov
mov
pop
lcall
xchg
xchg
data16
mov
push
loopne
sub
xchg
xor
push
push
and
sub
push
das
xor
or
mov
popf
loope
add
das
add
mov
mov
lret
fdivl
adc
push
or
xor
fidivl
orl
inc
cmpsb
pop
in
adc
adc
mov
xor
fadds
repz
push
mov
mov
push
push
popa
mov
push
jmp
test
mov
ljmp
mov
testl
mov
inc
sub
sub
pop
push
test
lea
pop
inc
cmpsl
add
mov
and
lar
mov
inc
stos
les
xchg
jns
jno
out
ljmp
dec
imul
push
xchg
lcall
ficompl
in
mov
std
adc
inc
repnz
mov
inc
hlt
or
dec
mov
pop
push
cld
lds
out
imulb
dec
or
mov
or
aam
sarb
les
add
pop
enter
jmp
jg
mov
dec
lcall
dec
gs
xchg
icebp
and
es
mov
minps
and
mov
inc
inc
mov
push
lcall
mov
in
add
xor
cli
out
icebp
mov
jns
cmp
xchg
sbb
or
fsubrp
loopne
out
les
xchg
test
and
call
sub
and
inc
push
mov
scas
int3
inc
stos
in
ret
mov
xor
lret
nop
lea
test
test
cmp
cli
sub
lahf
pop
adc
or
or
movsl
outsb
mov
and
nop
push
sub
mov
cwtl
sbb
sahf
pusha
out
shll
clc
lock
out
push
xor
mov
push
pop
sti
dec
in
filds
add
cmpsl
mov
std
mov
xchg
jno
test
dec
mov
xor
push
or
jo
int
repnz
cvtps2pd
push
sbb
cmp
arpl
sbb
rol
call
inc
xchg
push
gs
or
sub
add
pop
and
and
mov
imul
jecxz
and
mov
lods
dec
inc
ret
daa
shrl
movsl
mov
hlt
mov
pop
sub
pop
mov
cmp
or
aad
mov
fs
sub
test
add
sbb
and
repz
stos
fs
add
leave
aam
xlat
mov
inc
loopne
pop
cmc
jo
filds
cwtl
loope
and
cmpb
inc
repz
mov
cltd
add
pop
lock
daa
aaa
lock
aad
popa
test
inc
dec
jae
lock
or
out
aad
sbb
mov
push
and
xor
stc
sub
dec
adc
push
lods
sub
add
leave
cwtl
mov
jmp
sbb
out
jno
push
jne
inc
out
lret
and
sti
add
xor
dec
xchg
mov
imul
add
ds
add
mov
sbb
push
mov
jbe
insl
idivl
or
mov
inc
sub
stos
lcall
or
xor
dec
push
in
es
cld
es
dec
sub
jecxz
das
adc
test
nop
mov
sub
clc
inc
mov
xchg
mov
cmp
mov
jmp
mov
aas
push
notb
sub
inc
push
sbb
adc
mov
xlat
mov
dec
mov
cli
jno
mov
mov
add
xor
pop
pusha
lret
or
inc
or
add
mov
jbe
dec
bound
pop
dec
sub
push
mov
sbb
out
lcall
fimull
repnz
mov
lret
mov
stos
ret
scas
xchg
mov
adc
rorb
mov
push
add
lcall
pushf
repnz
stos
add
jns
push
cmp
add
or
pop
pop
fldcw
or
lret
pop
adc
push
lods
out
mov
mov
mov
mov
cmc
cmp
cld
std
sub
mov
or
xchg
pop
icebp
cmp
pop
popa
jle
test
add
pop
popf
int3
jge
jns
dec
push
lods
xchg
aas
int
ja
push
test
mov
call
or
stos
and
mov
or
pop
in
pop
mov
jl
inc
test
icebp
sub
repz
mov
scas
push
pop
lods
lods
push
inc
push
pop
je
fcoml
push
call
jmp
jbe
cmc
inc
adc
adc
out
pop
inc
cmp
sbb
jmp
inc
ret
mov
in
inc
xchg
popa
inc
xchg
ja
jle
repz
repz
xchg
mov
dec
loop
mov
xorb
cmp
movsl
mov
out
mov
lret
in
daa
jo
insb
and
leave
mov
ja
hlt
jno
orb
icebp
pusha
xchg
push
push
cmp
pop
mov
pop
mov
xchg
add
pop
test
arpl
sbb
outsl
cmovp
jae
bound
dec
pop
mov
jle
xor
mov
adc
and
clc
mov
xor
popa
pop
test
add
and
shr
mov
xor
es
repnz
jmp
pop
mov
mov
shl
aad
mov
add
sub
repz
in
movsl
cs
daa
add
pop
outsb
push
in
jl
and
hlt
mov
jbe
loopne
and
adc
inc
or
fwait
xor
mov
pushf
dec
push
and
orb
mov
enter
imul
dec
adc
xor
pop
push
mov
and
adc
mull
mov
mov
or
outsb
xchg
daa
sub
sub
mov
pop
push
xor
pop
das
cmc
adc
or
rorl
cwtl
aaa
cmp
jle
push
daa
inc
fldl
leave
jle
stos
pop
jbe
scas
into
call
inc
stos
inc
xor
iret
add
mov
jl
hlt
in
inc
sub
and
sbb
inc
inc
call
cmc
aad
aam
sub
dec
test
add
jmp
add
pop
mov
lret
stos
loop
and
mov
mov
mov
xchg
insl
jecxz
dec
icebp
lea
es
rep
sub
cli
push
in
mov
nop
fnstcw
jbe
and
or
inc
stos
aad
mov
test
adc
jb
mov
lods
dec
enter
push
out
cs
out
pop
or
jmp
gs
cmp
xchg
js
orb
pop
mov
pop
call
mov
fs
pop
or
inc
lods
dec
or
adc
popf
mov
fistps
clc
add
lcall
or
mov
jo
sub
jmp
jl
xor
add
mov
fidivl
std
sub
mov
xchg
ficoml
imul
data16
or
jns
cmp
popl
inc
mov
jb
hlt
mov
xchg
ror
push
repnz
push
mov
dec
add
add
je
lret
es
dec
or
rcrl
push
js
and
pop
jnp
add
inc
mov
inc
push
mov
jecxz
pop
cmp
daa
mov
mov
xchg
cmp
sub
filds
mov
pop
aaa
xchg
push
adc
std
adc
mov
mov
dec
lods
mov
inc
icebp
jmp
sbb
leave
mov
in
mov
pushf
xor
and
pop
push
and
and
movsl
lret
in
or
jg
add
sub
xor
pop
jmp
int
pop
test
leave
pushw
pop
cmpsb
lds
xor
adc
and
mov
dec
out
jb
or
adc
cmp
or
mov
cmp
daa
inc
mov
cld
shlb
or
lahf
out
jno
inc
xchg
jp
fcompp
fisttpll
ret
fisubrl
cmp
pop
mov
xor
pshufw
xor
and
fadds
jl
call
int
test
mov
pop
inc
jno
push
xor
shrb
push
jns
daa
jl
cltd
mov
push
mov
lahf
ja
pop
jle
in
and
lods
cmpsb
repnz
cmp
push
xor
push
loop
jl
adc
call
stos
mov
and
std
imul
pop
pop
push
lret
push
jmp
cmp
loope
aaa
cmp
stos
xchg
push
aad
aam
int
sub
mov
sub
cmp
adc
daa
clc
pop
repnz
push
fmull
repnz
inc
or
pop
and
cmp
outsb
cs
mov
jb
icebp
leave
out
jbe
je
jae
hlt
mov
fistps
and
mov
imul
in
ljmp
sbb
add
pop
inc
push
pop
jl
push
fistpl
push
arpl
dec
pop
int3
out
cmpsb
lret
cli
and
push
fimuls
aad
jns
aas
xchg
loope
mov
mov
push
icebp
rcr
fucomp
sub
sub
sahf
inc
in
mov
stos
mov
cmp
or
dec
jl
sub
jmp
fs
jae
pop
jge
jo
test
sbb
jmp
mov
inc
sbb
aas
jp
sbb
inc
pop
jbe
leave
inc
test
pop
sti
dec
cld
shrb
loop
cmc
insl
mov
inc
jmp
in
jno
xchg
cs
jl
loope
inc
shr
xchg
lods
fldl2t
jl
pop
negb
sbb
push
or
pop
pop
cltd
mov
mov
fidivrl
xchg
jecxz
pop
add
or
mov
add
das
insl
pop
jp
or
loopne
mov
dec
pushf
xchg
adc
push
mull
pop
mov
add
or
in
jmp
push
je
dec
je
add
mov
adc
ja
jg
mov
pop
mov
cltd
ds
push
push
mov
pop
and
lock
adcb
lods
out
jo
adc
or
sub
or
es
enter
insb
or
fs
mov
cmpsl
scas
push
inc
mov
xor
mov
stos
jne
pop
and
sub
int3
stos
repnz
push
leave
inc
pushf
mov
into
lret
and
outsb
inc
pop
fldl
push
fistpll
sarb
stos
sbb
inc
push
fs
shlb
cmp
push
jbe
jb
decb
xor
lock
sbb
dec
xor
movsl
dec
ret
loopne
pop
adc
fisttps
push
push
dec
gs
cmp
adc
sub
sbb
jo
inc
lea
xor
aas
popf
mov
jl
mov
cmp
dec
jns
and
mov
int3
inc
ljmp
lock
mov
jmp
ds
pop
out
xor
add
xor
add
jb
mov
rcr
jae
push
das
xor
fucomi
ret
jmp
outsb
andb
pop
repnz
xchg
push
test
insl
mov
sbb
loop
movsl
mov
cwtl
or
out
adc
or
movsb
bnd
popf
adcl
mov
in
or
xor
mov
pushf
pop
mov
dec
fstpl
into
inc
sub
mov
cmp
add
mov
movsl
cmp
xor
testb
push
sub
mov
rcr
stc
lahf
sub
rolb
jbe
push
add
je
ja
mov
mov
cmp
xchg
loopne
jo
xor
orb
add
or
push
mov
pop
push
icebp
mov
insb
pop
cli
and
call
jmp
mov
repnz
divl
lret
sbb
call
inc
lret
mov
sahf
repz
push
or
popf
hlt
mov
loope
cmp
mov
stos
icebp
adc
gs
inc
add
sub
add
out
cmc
nop
subl
adc
je
xlat
fs
mov
aas
or
dec
mov
out
mov
mov
cmpsb
mov
jmp
int3
sahf
jae
mov
pop
dec
adc
ret
aad
cmc
fistps
ljmp
cmp
xorl
or
aas
xlat
shlb
push
sub
push
ja
inc
or
pop
in
daa
pop
jb
pop
and
cmp
xchg
push
imul
in
mov
mov
das
mov
icebp
filds
mov
dec
add
rcrb
cmc
push
push
push
xchg
call
test
or
mov
icebp
cmp
mov
jp
fisttps
pop
pop
mov
pop
jb
clc
lahf
or
pop
pop
rolb
cmpsb
push
das
cli
sub
jno
xor
call
add
repnz
leave
dec
or
and
out
mul
jg
xor
add
xor
mov
dec
inc
daa
in
push
push
sbb
inc
dec
not
jnp
cmp
mov
xchg
add
leave
inc
and
mov
outsb
ret
cmp
imul
into
leave
or
push
mov
mov
push
ss
sub
sahf
andb
int3
mul
mov
subl
pop
std
sbb
cwtl
test
lea
push
xor
xor
push
ja
or
arpl
test
mov
mov
push
jo
shll
out
repnz
aaa
mov
lret
in
pop
and
pop
clc
add
jmp
outsb
es
or
dec
stos
and
add
mov
xlat
add
movsb
mov
pop
jmp
push
pop
jmp
out
fildl
add
push
cmp
pop
jmp
ds
call
dec
sbb
xchg
ficoml
and
call
jnp
cltd
popa
mov
mov
aas
adc
pop
testb
cltd
les
sub
sub
add
mov
sub
int3
inc
cmpsl
and
and
cmp
inc
cli
sub
push
lret
sub
repz
mov
mov
lock
test
movsl
mov
mov
dec
mov
lods
nop
insl
xlat
jo
arpl
push
call
in
mov
scas
push
mov
xor
push
push
jmp
push
adc
inc
mov
je
push
jnp
adc
lds
xor
ljmp
or
stos
setle
das
mov
into
enter
or
adc
sub
mov
lea
add
ljmp
push
mov
push
arpl
cmp
daa
test
ret
mov
inc
frstor
or
xor
jmp
jnp
sub
scas
gs
xchg
inc
stc
imul
lret
arpl
push
mov
and
jo
lret
pop
push
repnz
push
pop
call
mov
mov
or
add
stc
fs
pop
mov
add
shrl
or
in
add
mov
push
enter
pop
leave
sbb
xor
sarb
in
pop
jmp
aaa
sub
addr16
push
test
nop
js
cld
stos
jl
or
jmp
or
in
into
rcrb
push
pop
pop
mov
or
or
sub
nop
test
xchg
xorb
jmp
fnstsw
jmp
jmp
jbe
jns
or
push
outsb
imul
xchg
cltd
popf
sub
imul
mov
jmp
jo
add
jne
cmp
repnz
push
rorb
loop
xor
enter
mov
cwtl
mov
dec
cld
jb
clc
adc
pop
inc
inc
sbb
loop
es
sti
andb
mov
cmpsb
daa
sbb
pop
in
es
ficoml
jmp
xor
and
add
pop
lea
push
mov
mov
xchg
add
mov
inc
int
icebp
or
push
push
in
and
je
push
cmpsl
adc
xchg
cmp
xorb
xor
push
imul
sub
dec
je
mov
cmp
fisubrs
jns
mov
lea
es
sub
jnp
inc
pop
dec
push
or
lods
mulb
dec
or
inc
ljmp
jbe
mov
and
ret
push
dec
add
clc
ljmp
mov
inc
es
add
jbe
mov
inc
push
or
pop
testb
jne
ret
cmp
daa
mov
lods
jp
sub
pop
pop
repnz
gs
mov
pop
shlb
xchg
xor
and
pop
xorl
clc
or
inc
fsubs
mov
enter
pop
jl
std
adc
icebp
stos
hlt
test
inc
cmpsl
cld
call
fwait
dec
andb
test
jbe
pop
inc
dec
add
stos
call
adc
pusha
popf
je
xor
stc
xlat
lods
fstps
and
insl
mov
ss
jb
adc
or
xor
sbb
mov
sbb
mov
adc
ss
and
jge
mov
jmp
push
inc
sbb
push
mov
mov
leave
add
out
fistpl
leave
cmc
sbb
add
inc
lahf
or
cmp
add
in
xor
xchg
lods
aam
fs
orb
mov
push
fldl
inc
std
xor
lahf
sbb
xchg
dec
in
into
xchg
add
lods
mov
andl
in
stos
push
and
pop
cmpsl
mov
xchg
lahf
sub
and
ss
xchg
fimuls
aam
jb
jl
or
aaa
and
pop
pop
mov
pop
mov
rolb
jae
mov
ret
dec
subl
test
or
or
insb
rorl
nop
mov
mov
mov
imul
push
call
add
jae
loop
or
in
push
loope
or
xor
mov
call
jmp
xchg
cwtl
dec
sahf
mov
ret
jecxz
push
adc
cmp
popa
pop
nop
cmp
or
test
xor
add
jmp
mov
sbb
test
hlt
filds
mov
std
addb
push
cld
push
enter
mov
push
loope
push
daa
mov
pop
cwtl
cmc
jmp
inc
cmpsl
sarb
jecxz
ret
or
push
jmp
fistl
jns
mov
mov
mov
mov
or
and
push
xchg
push
push
repnz
out
lret
dec
pop
xor
scas
das
inc
outsb
testl
fnstsw
or
ret
or
xchg
shr
psllq
xor
pop
jmp
rcl
loop
sbb
or
stos
or
ljmp
in
or
int
inc
insl
es
das
sub
add
or
jge
popa
xor
cmp
push
loop
test
or
clc
mov
mov
xchg
mov
or
outsb
dec
push
sub
jo
enter
or
jecxz
jae
fildll
mov
jb
mov
orb
out
sub
leave
aas
cmpb
out
pusha
sbb
mov
ret
inc
adc
loopne
ljmp
cs
cmpsb
xor
scas
ja
je
push
inc
push
jnp
test
ret
jmp
out
and
or
jmp
push
pop
xchg
lret
pop
lds
pop
inc
jo
cmpsb
xor
adc
cmp
icebp
ds
lock
lret
sahf
cmpl
push
inc
in
sahf
les
dec
push
ljmp
push
xchg
test
lcall
pop
sub
lahf
xchg
js
xchg
or
leave
ljmp
jo
dec
or
cmpsl
inc
movl
cs
int3
inc
jns
pop
cwtl
mov
leave
and
jp
add
leave
jmp
cmpsl
imul
jmp
lods
push
in
in
mov
sub
push
adc
sub
call
inc
push
mov
lods
icebp
or
or
call
or
mov
int
jo
push
or
lcall
push
in
jo
addb
das
jmp
je
xor
call
adc
mov
inc
and
lret
pop
dec
pop
add
push
fists
test
iret
jne
mov
cltd
pop
out
leave
subl
std
push
xchg
inc
adcb
cmpsb
xor
hlt
lds
push
sbbb
fcompl
mov
add
lcall
jno
cmp
xorb
sbb
sub
or
xchg
mov
sub
push
or
push
sub
lods
lock
mov
and
fnsave
xor
inc
or
cld
or
ret
mov
mov
jg
add
push
fucom
shll
mov
stos
sbbl
add
push
dec
loope
negl
jmp
lods
pop
stos
mov
xchg
lret
cmp
mov
inc
mov
aas
add
lcall
roll
dec
mov
push
lods
pop
outsb
and
jns
fdivrl
fildll
ja
inc
jo
pushw
pop
jecxz
jmp
pusha
ljmp
adc
adc
loop
sub
test
daa
into
idivl
add
popa
sbb
mov
sbb
jle
rorb
int3
mov
ret
lret
sbb
and
sbb
mov
clc
mov
aas
movsb
adc
cmpsb
dec
fisttps
or
jmp
pop
pop
out
rorb
mov
js
clc
pop
jo
dec
ds
pop
mov
push
adc
add
inc
sub
cmp
or
js
add
gs
inc
push
mov
int
add
js
dec
push
cmpsl
insb
test
sbb
pop
mov
je
popa
adc
ja
daa
lods
hlt
sbb
lcall
push
fwait
mov
or
xorl
int3
push
lret
imul
popa
pop
adc
scas
pop
inc
sbb
cmp
pop
mov
dec
fisubl
int
cmp
xchg
mov
jbe
pushf
out
adc
mov
lea
mov
pop
cmp
mov
clc
pop
adc
pusha
outsb
pop
rorl
dec
fiadds
cmp
je
add
add
scas
pop
je
in
cltd
js
popf
nop
xor
iret
inc
mov
xchg
adc
xor
push
or
sub
in
es
addr16
jo
adc
icebp
bound
ficoms
lea
stc
jmp
or
cltd
jp
and
out
lahf
mov
push
je
push
sub
aaa
pushf
jo
adc
call
loop
cmp
rolb
adc
enter
sub
sbb
adc
jnp
pop
cltd
dec
pop
cld
ss
mov
add
adc
jecxz
or
push
or
fldl
andb
add
loopne
jg
and
cmp
mov
push
jae
cmp
sbb
cmp
jmp
icebp
dec
jp
adc
or
imul
fdivl
js
pop
aam
scas
adc
mov
or
test
js
sub
mov
sbb
movsb
cld
jmp
cmpsl
call
sub
jmp
fs
mov
or
out
repz
ret
xchg
ss
out
mov
and
and
jnp
and
inc
jmp
mov
mov
push
out
mov
jle
loop
push
cmpb
imul
nop
orb
pop
js
xchg
jge
cmp
or
mov
cmpsl
out
xchg
push
adc
mov
dec
fdivrl
clc
cmp
mov
push
gs
and
mov
inc
or
jbe
gs
adc
inc
cmpb
mov
fstl
jnp
push
jg
pop
les
out
int
push
sub
sarl
dec
data16
aad
inc
icebp
push
inc
inc
adc
push
stos
dec
mull
lea
lcall
test
sbb
xchg
or
sbb
les
rcll
push
fistpl
jno
dec
outsb
xchg
jge
cltd
inc
add
mov
popa
cmpsl
fists
mov
jne
js
lret
lds
out
and
popf
dec
pop
adc
mov
sub
cwtl
jo
fwait
outsl
inc
sub
mov
in
inc
xchg
or
scas
sbb
jmp
pop
sbb
cmp
repnz
mov
jmp
mov
mov
outsb
cmp
mov
mov
call
mov
dec
mov
pop
and
add
and
mov
push
sbb
data16
in
rolw
cmp
jp
xchg
fsubl
scas
xor
outsl
or
orb
sub
pop
fisubrs
leave
stos
jno
mov
pop
lea
daa
xor
jb
lret
scas
icebp
sbb
fucomi
mov
bnd
ret
or
push
hlt
or
vsubss
outsl
jbe
ret
nop
xchg
or
push
ljmp
inc
in
es
jb
cmp
lret
xchg
out
pop
dec
xchg
and
addr16
movsl
add
or
lret
pop
mov
hlt
mov
mov
ret
mov
shrb
and
xchg
lods
cmp
push
int
arpl
lds
mov
dec
cld
in
xchg
xor
xrelease
sbb
iret
add
push
add
add
aam
xor
shr
insb
push
dec
dec
out
mov
mov
lret
pop
pop
popf
xlat
add
mov
stos
ja
ja
pusha
mov
jno
jle
sbb
movl
test
sub
or
lods
mov
mov
cmpsb
sbb
int
push
mov
mov
mov
gs
loop
xchg
cmp
subl
xchg
or
jnp
addr16
popf
or
jns
pop
adc
stos
and
xchg
lock
xor
xchg
inc
jmp
js
repnz
add
lahf
mov
cs
pop
popa
dec
cmp
mov
lods
aaa
roll
or
dec
ljmp
nop
push
scas
mov
push
pop
mov
ja
fsubrl
and
ja
shrl
cld
and
insl
pop
cli
shr
sbb
ljmp
fs
cmp
xchg
cwtl
aam
push
fwait
add
lret
jmp
fimull
pop
jbe
imul
aas
insl
push
mov
gs
fiaddl
mov
fdivs
push
testb
sub
push
jmp
sbb
cmp
adc
cwtl
aam
movupd
jae
sub
les
mov
lret
xchg
mov
sbb
and
xor
or
cmp
subl
mov
dec
pop
jg
mov
sbb
push
add
test
adcb
cmc
add
dec
xchg
fbld
xor
sbb
aad
mov
xchg
mov
pop
jo
mov
mov
in
sbb
push
call
pop
mov
ja
or
movsl
in
frstor
test
mov
mov
dec
aad
xchg
add
ficomps
xor
inc
popf
or
fldenv
leave
outsl
jmp
add
adc
xchg
cld
dec
sub
jmp
loop
je
push
loopne
cmp
ds
pop
inc
cmp
inc
lret
mov
push
imul
shlb
sbb
les
pop
orb
and
std
out
mov
mov
in
lock
mov
in
push
mov
pop
or
xchg
insl
popf
iret
xor
fstpt
sbb
and
push
enter
add
mov
or
sarl
sub
push
std
insb
lahf
orb
mov
cmc
out
cmp
or
mov
test
xor
pusha
mov
lods
or
or
pop
out
stos
pop
mov
js
xchg
sbb
inc
cmp
mov
pop
popf
ja
mov
inc
sub
and
push
xor
jnp
push
insb
xchg
xchg
ret
xor
dec
mov
stos
mov
mov
mov
popf
dec
popa
push
test
jmp
add
jb
mov
stc
push
fmull
out
movsl
insl
sub
sbb
push
jmp
fstps
je
push
insb
ret
int
mov
shll
imul
xchg
mov
or
mov
lods
rorb
jp
and
sub
or
fdivl
cmpsl
mov
mov
cmp
push
aaa
jl
jmp
out
and
dec
jp
outsb
stos
mov
test
xchg
popa
sub
adc
dec
andb
daa
out
cmp
lea
add
cmp
clc
mov
and
dec
push
adc
push
sti
dec
mov
repz
jb
dec
jno
pop
push
mov
sub
testb
jb
add
sbb
push
fidivs
pushf
push
cli
pop
cs
jmp
stos
popf
fldl
mov
dec
stc
dec
sub
scas
mov
sbb
mov
lret
xor
sahf
or
sub
inc
call
test
pop
push
test
sbb
cli
hlt
js
mov
movsl
cli
mov
jo
call
or
or
sbb
cli
jne
lock
cwtl
test
dec
aam
daa
or
pop
xchg
mov
pop
ds
sub
pop
insl
inc
movsl
sbb
add
xor
fcoml
stos
cltd
mov
add
mov
mov
mov
lahf
hlt
add
fcompl
test
ret
mov
pop
cwtl
rorb
push
daa
sti
sbb
lahf
inc
les
push
jmp
push
add
inc
or
enter
es
test
loop
fdivp
or
nop
fidivl
or
shrl
pop
pop
mov
jle
jns
jg
dec
movsl
int3
push
lahf
mov
push
cld
cmp
xchg
shr
ret
or
jp
js
xchg
je
inc
mov
jle
negl
jmp
lcall
icebp
inc
ret
jo
aad
repz
jbe
in
leave
lret
sub
sbb
sets
pop
mov
loopne
jmp
push
cmp
adc
lahf
inc
loop
or
dec
mov
popl
add
pusha
add
mov
jns
pop
fcmovnb
lods
fists
aad
xchg
xchg
rcr
jnp
push
pushl
mov
test
lods
sub
or
push
mov
mov
sbb
fadds
pop
mov
dec
sbb
sub
mov
add
jns
rol
je
pop
add
add
add
mov
adc
int3
sub
popl
jmp
fistps
push
fisttpll
sbb
orl
and
sbb
test
icebp
mov
mov
sub
dec
xor
stc
xchg
test
hlt
mov
clc
lds
add
xchg
pop
or
jge
push
mov
sbb
call
push
sbb
enter
sbb
mov
push
jo
fstpl
add
xor
adc
mov
cltd
nop
out
dec
cmc
imul
rolb
mov
sub
xchg
pop
jmp
loope
in
push
lret
dec
sub
shll
or
jge
cmp
int3
pop
repz
jp
push
sbb
lcall
test
inc
outsl
cmc
mov
call
nop
dec
xchg
fdivs
xchg
inc
pop
into
test
jb
mov
stos
or
out
ret
push
jmp
push
and
and
loopne
int3
pop
push
mov
mov
sbbl
inc
insb
jo
sub
daa
cmpsl
cmpsb
jge
cmpsl
test
xchg
loope
adc
dec
or
mov
cmp
pop
or
aas
pop
dec
inc
inc
dec
mov
call
push
das
xchg
mov
jo
dec
pop
or
scas
and
inc
in
roll
cmp
or
cwtl
mov
in
pop
lret
push
mov
sahf
int
sbb
sbb
mov
and
and
sti
mov
mov
bnd
ret
repnz
daa
jbe
dec
cltd
or
push
mov
jecxz
ds
data16
sarl
lahf
or
mov
sti
data16
cmpsl
aad
ja
mov
daa
dec
es
cwtl
or
or
sti
psubd
xchg
jge
or
adc
test
shll
pop
jmp
xchg
nop
sub
sbb
int
pop
mov
outsl
in
or
std
pop
roll
pushl
ljmp
cmpsb
mov
push
dec
mov
pushf
inc
push
and
pop
lahf
lock
inc
xchg
mov
call
xchg
pop
dec
mov
fcmovnbe
lret
lret
push
call
fcomi
or
pop
ficomps
inc
mov
bound
or
jae
push
xchg
inc
in
mov
inc
or
mov
mov
jns
sub
pusha
jnp
idivl
lea
pop
test
push
movsb
ror
adc
xchg
pop
inc
das
fcompl
das
jno
loopne
pusha
into
test
test
inc
rcrl
pop
xchg
int
popf
pushf
dec
mov
mov
fldenv
mov
scas
jge
mov
stc
cli
jl
push
repnz
test
sbb
adc
mov
pop
std
stos
add
test
jmp
imul
jae
clc
clc
jmp
imul
sub
mov
movsb
mov
add
sub
test
sub
adc
into
mov
mov
xchg
inc
jmp
push
imul
jbe
and
mov
lods
sti
clc
movsb
iret
mov
iret
xchg
dec
pop
imul
cli
or
data16
hlt
insl
xchg
outsl
loope
sahf
dec
pop
shl
dec
inc
or
and
inc
testl
push
or
fs
mov
inc
push
outsl
popf
jmp
out
rorb
das
inc
push
sbb
xor
notb
rorb
fldl2e
jle
jmp
repz
pop
das
xchg
jb
mov
int3
mov
enter
dec
mov
scas
sbb
lret
lods
cmp
test
pop
fmuls
jo
jmp
mov
push
fstpl
xchg
mov
fdivrp
jno
inc
enter
push
or
dec
dec
inc
push
add
sbb
dec
int
xchg
add
clc
cmp
or
nop
and
lock
mov
fiadds
icebp
notl
mov
adc
mov
sub
test
aad
mov
xor
jb
lret
inc
stos
cmpsl
cmp
repnz
add
aad
aam
mov
rsqrtps
sub
cmpsl
pop
ds
push
pop
lahf
negl
pop
inc
mov
mov
popa
cmp
nop
pop
pop
je
shlb
or
and
leave
hlt
fwait
and
or
mov
addb
jmp
adc
cmp
shll
pop
mov
negb
pop
roll
and
mov
int3
inc
lret
pop
call
jo
aad
cltd
cmp
mov
das
jno
inc
pushf
jb
xchg
jp
add
lock
call
pop
adc
pusha
or
das
mov
jle
loope
popa
jb
sbb
cmp
fucomip
repz
pop
mov
sub
add
mov
ret
cmpsb
mov
or
push
loope
loopne
add
lret
add
pushf
mul
imul
negl
mov
xor
adc
icebp
addr16
adc
inc
or
repz
lret
mov
int3
xor
pop
push
pop
jbe
cmpsl
sub
xor
xor
jmp
cmp
pop
pop
inc
pop
daa
dec
pop
outsb
add
xchg
scas
sub
jns
pushw
push
mov
stc
xor
dec
dec
mov
mov
popf
sub
mov
insl
lods
aam
or
aaa
xor
dec
aam
loope
xchg
mov
mov
push
jmp
cli
cmp
sbb
jnp
mov
cmpl
pop
inc
add
lcall
or
scas
jmp
cs
rep
push
jle
add
mov
jg
and
dec
adc
jo
inc
pop
jo
std
xchg
test
test
pop
xchg
icebp
cmc
or
mov
adc
movl
jg
cmp
xor
test
ja
mov
adc
cltd
jmp
adcl
popf
cs
push
jmp
jp
inc
mov
lret
or
mov
and
or
outsl
or
or
mov
push
jmp
call
pop
lahf
mov
fwait
es
sbb
scas
dec
xor
cmpl
xlat
inc
ret
dec
or
and
je
idivb
xor
push
mov
das
mov
cmp
push
enter
shrl
sub
scas
stos
mov
cmpb
push
dec
shrb
imul
dec
es
scas
xchg
sub
fucomp
int
dec
sbb
out
or
mov
cltd
adc
shl
sbb
sub
jecxz
ljmp
dec
clc
insl
roll
xchg
add
gs
inc
call
cltd
sahf
insb
pop
jmp
and
addl
cmpsb
and
insb
les
mov
ret
add
ret
insb
xor
cmp
and
arpl
adc
call
sbb
xor
jmp
or
pop
sub
enter
jge
loope
stos
mov
int
jl
je
inc
push
das
jno
fistpll
daa
addr16
sub
div
call
mov
dec
push
repz
dec
popf
stc
or
lea
inc
mov
jmp
mov
push
mov
mov
and
or
dec
loopne
clc
pop
mov
dec
mov
adc
lods
sub
push
mov
adc
sub
xorl
test
scas
inc
adc
jae
insl
dec
jl
mov
add
shrl
inc
int3
mov
sub
call
mov
or
pop
push
push
in
stc
cmp
mov
ja
ret
mov
addr16
jecxz
sbb
inc
call
and
inc
pop
jp
mov
out
int
xchg
fnstenv
xor
dec
fisubl
pop
mov
push
inc
push
mov
leave
std
jge
sbbb
data16
loopne
adcb
adc
xchg
icebp
cmpsl
cmp
jmp
call
add
pop
push
mov
iret
cld
pop
jmp
xor
inc
aas
push
call
repz
loope
iret
or
jmp
xor
xchg
xor
or
xchg
or
mov
or
add
mov
movsl
lahf
inc
cli
push
pusha
and
test
jle
ret
lahf
inc
dec
movsl
add
or
or
fcoms
in
pop
sbb
add
adc
and
push
fisttpl
inc
inc
xchg
jo
xchg
lret
decb
push
pop
mov
sub
mov
outsb
jns
inc
sti
test
leave
pop
jg
pop
add
ficoms
orb
and
and
xor
cld
inc
adc
dec
pop
push
inc
mov
test
ret
test
adc
stc
sti
dec
mov
shr
mov
repz
pop
cli
cs
iret
push
inc
test
jmp
mov
mov
je
sbb
jno
ss
out
or
fstpl
xchg
std
xchg
sar
dec
in
mov
or
dec
push
push
das
push
hlt
enter
lahf
cwtl
add
movsb
xor
pop
stc
xor
test
repnz
mov
jnp
es
dec
jge
sub
sub
xor
test
in
add
adc
or
movl
jno
mov
xchg
fwait
adc
leave
jne
stc
jbe
call
mov
int3
cltd
push
into
loopne
sbbb
push
adc
notb
xor
xchg
repnz
leave
jae
cli
lcall
xor
fisubs
inc
test
ss
mov
mull
pop
and
lods
mov
out
add
cmp
popl
into
repnz
push
add
sti
xor
divb
std
mov
loop
mov
inc
push
pop
pop
lods
push
xlat
lahf
push
or
mov
inc
push
mov
xchg
jno
stos
push
mov
mov
add
and
pop
in
leave
dec
and
fistps
rcrl
push
jge
in
dec
and
jne
call
xchg
xchg
pop
or
dec
dec
or
sbb
inc
sarb
setge
cltd
push
adc
dec
push
and
mov
out
mov
xor
pushf
add
outsb
inc
loopne
daa
call
push
frstor
add
or
test
xchg
cmp
adc
dec
jmp
lea
sub
sbb
ljmp
push
jle
push
sbb
jbe
notb
sbbb
aam
xchg
dec
fsub
dec
loop
and
xchg
add
or
push
pop
push
or
adc
mov
cmpsl
inc
mov
in
mov
clc
sahf
and
add
rcl
in
dec
xor
push
roll
jae
xchg
mov
cli
sub
jno
loope
decb
pop
and
popf
je
dec
adc
jmp
int3
stos
sub
push
notb
in
or
fisttpll
mov
pop
pop
jmp
sbb
popa
sub
cli
or
and
aad
lcall
sbb
dec
push
mov
jmp
aaa
daa
xchg
loope
cmp
lock
mov
ss
ret
shll
mov
xchg
push
and
shll
mov
leave
mov
mov
sub
cmp
inc
roll
fld1
test
pop
cmp
pop
iret
sti
mov
xchg
mov
inc
jl
rol
out
push
add
mov
xor
test
int
push
cs
cmp
fildl
add
push
shlb
jne
nop
cwtl
data16
sbb
jo
aad
adc
or
xor
stos
mov
sub
nopl
or
ja
dec
cld
jnp
xchg
je
dec
out
leave
pop
add
scas
and
cltd
and
imul
pop
test
data16
pop
or
hlt
pop
pop
or
mov
jno
push
jmp
int3
sub
hlt
adc
pop
push
mov
enter
adc
jmp
push
pop
je
adc
sub
sub
rclb
mov
cmpsl
dec
test
mov
and
cmp
push
mov
popa
lods
aam
or
es
add
rcll
ss
mov
out
cwtl
mov
dec
mov
arpl
aam
shl
or
ljmp
push
insl
jb
in
cld
call
fisttpll
or
arpl
repnz
xor
scas
add
aad
ss
ret
adc
inc
mov
push
xchg
scas
mov
imul
push
insl
arpl
or
lods
pop
cs
jne
dec
cmp
in
cmp
repnz
js
call
cltd
inc
sub
inc
mov
ret
or
and
addb
xchg
notb
call
sbb
xor
call
adc
push
mov
mov
js
les
dec
push
stc
xchg
in
mov
and
test
add
xor
cmp
clc
push
or
sti
push
mov
cld
mov
cli
cld
stos
call
rcrb
cmp
fdivl
pushf
hlt
movsb
add
dec
inc
pop
or
insl
adc
sub
out
gs
stos
daa
push
ja
push
mov
stos
and
adc
jge
rcrb
bound
stos
test
scas
xchg
fsubrl
push
mov
rcrb
pop
insb
repz
push
lahf
jmp
je
mov
push
inc
inc
arpl
mov
xor
pop
aaa
mov
insb
xchg
mov
pop
adc
add
jle
mov
mov
cmp
cld
push
imul
push
and
or
test
inc
or
rol
test
pop
mov
sub
xor
rclb
jnp
adc
int3
icebp
mov
and
pop
outsb
push
dec
lret
lock
mov
out
dec
mov
mov
dec
push
stos
or
cs
pop
inc
add
jnp
repz
xor
cmp
aaa
test
xlat
xchg
aad
push
fisttpll
or
pop
test
or
fdiv
xor
pop
xor
lock
mov
mov
sbb
cmp
sbb
inc
mov
pop
into
pop
sbb
mov
jno
cld
fstpl
push
gs
xchg
xchg
jecxz
mov
cmp
addb
int
jnp
sbb
cmpsl
inc
nop
sub
out
xchg
sbb
jne
hlt
sub
call
xor
inc
movsl
mov
ja
sub
lret
mov
rorb
call
ror
push
add
scas
or
or
leave
imul
or
imulb
cmpsl
aam
xchg
sahf
xorl
dec
push
fs
adc
mov
dec
call
xchg
bound
push
xchg
add
adc
pushf
adc
jg
jbe
insl
or
cld
fmuls
sub
cmp
mov
out
inc
add
fcoml
data16
test
cmp
pop
inc
pop
xchg
call
lret
pop
pop
inc
jb
sub
xlat
add
inc
ret
stos
fsincos
jbe
pusha
mov
ljmp
call
sub
sbb
fbstp
mov
inc
js
xchg
jns
fisubs
inc
add
rcrl
push
cmp
mov
cmpsl
push
in
sbb
popf
xorps
pop
dec
add
mov
fldenv
sub
test
pop
dec
or
ret
out
xchg
mov
adc
and
or
mov
add
mov
pop
test
loope
scas
ljmp
daa
or
or
mov
nop
push
push
aam
and
dec
repz
sti
pop
lods
xor
lods
xchg
frstor
or
call
inc
sub
adc
dec
adc
push
int
jmp
jbe
test
movl
dec
testb
mov
pop
mov
fs
and
lea
loopne
sbb
punpckhbw
loop
mov
mov
xchg
sub
sub
jmp
sbbb
dec
push
sbb
adc
call
and
cmovs
adc
loopne
cli
jnp
stos
jg
lock
push
mov
and
ret
icebp
mov
call
push
pop
pop
loop
hlt
sub
test
inc
dec
sub
repnz
lds
ja
or
sbb
jae
fisttpll
jb
cmc
fwait
cmp
aam
in
mov
rcrb
inc
xlat
pusha
imul
mov
loopne
jae
xchg
mov
and
movsb
sub
adc
push
fists
test
mov
ficoml
ja
into
adc
dec
mov
dec
push
jecxz
sub
wrmsr
sub
push
push
add
daa
enter
push
or
inc
push
dec
lock
or
push
push
sbb
fsubrs
pop
inc
jns
rcll
lret
das
mov
shlb
ret
or
dec
stc
test
pusha
ret
vandnpd
es
pop
xor
jle
jmp
icebp
into
iret
pusha
jnp
aaa
sub
loopne
push
movsl
jmp
sub
lds
loop
bound
clc
add
sub
mov
sbb
pop
jp,pn
pop
shrl
bound
mov
or
lret
mov
lods
pop
mov
repnz
sub
dec
push
jl
push
jmp
in
mov
adc
jns
std
or
mov
fisubrs
xor
dec
test
xor
subb
call
jge
pop
push
into
lock
push
xor
mov
or
mov
and
xor
jne
sub
in
mov
inc
xor
invd
fcompl
ficoml
sbb
pop
mov
xor
pushf
mov
mov
or
xchg
pop
sub
push
ss
and
xchg
mov
int
inc
and
push
call
xor
inc
push
ret
xor
cli
leave
and
ds
scas
cli
iret
push
push
in
test
mov
sti
leave
pop
sub
jo
and
jl
and
adcb
out
in
clc
xchg
jno
sub
loopne
jp
std
inc
lahf
add
cli
scas
nop
xchg
xchg
xor
mov
fsubrl
mov
mov
push
lret
mov
cmp
push
mov
mov
pop
mov
fisubrl
in
pop
mov
xchg
mov
xchg
fmuls
fnsave
push
insb
andl
add
inc
inc
inc
repz
sbb
sti
addl
push
pop
test
jae
adc
mov
add
pop
pop
or
fidivs
repnz
cmpsb
add
jbe
in
dec
enter
hlt
ds
xchg
mov
sahf
push
cwtl
pop
aaa
add
mov
mov
les
pushf
stc
repz
sbb
adc
das
addr16
mov
pushf
or
push
pop
jo
mov
xchg
dec
aam
ret
stos
mov
out
es
cmpsb
xor
cmpsl
push
jle
sub
jle
push
mov
testl
dec
inc
cld
fldl
jbe
fld
pop
ss
xchg
push
cmpl
add
xchg
clc
aaa
push
adc
pop
inc
shlb
fmul
jg
mov
inc
call
lea
push
lea
inc
jo
xor
out
add
imul
wbinvd
pop
insb
jg
outsb
scas
daa
lea
shr
sbb
sub
je
adc
xorb
aaa
aad
inc
rclb
and
cmc
mov
mov
push
inc
and
mov
testl
outsb
jns
cld
mov
pop
push
shlb
push
push
xchg
dec
sbb
pop
mov
aam
jmp
push
lods
dec
lea
pop
jbe
or
adc
mov
or
push
mov
jno
sahf
lahf
int3
cmpl
pop
aam
and
xor
or
sahf
loopne
dec
inc
push
and
cwtl
scas
adc
shrb
je
adc
inc
popa
xor
call
dec
adc
loopne
xor
insl
lock
push
push
pop
add
adc
fmuls
inc
inc
jl
pop
inc
mov
test
mov
sub
sbb
call
out
pushf
jp
mov
repz
push
mul
outsl
mov
aad
inc
lods
xor
lret
fstpl
jmp
xchg
mov
add
imul
mov
je
cmc
mov
adc
out
and
or
pop
add
inc
test
dec
hlt
imul
pop
mov
mov
jmp
mov
xlat
add
xchg
ljmp
or
mov
call
dec
push
lret
dec
test
nop
aas
dec
je
addr16
ss
xchg
add
mov
bound
mov
adc
push
fiadds
test
in
mov
leave
adc
push
inc
inc
repnz
mov
pop
fsubrs
push
pop
fcmovu
sub
dec
pop
mov
sbb
add
add
mov
nop
push
in
mov
push
xchg
push
mov
xchg
push
mov
inc
repnz
and
stos
pop
leave
mov
ret
out
adc
cmp
mov
xchg
loope
lods
hlt
out
jns
add
testl
imul
sbbb
popf
repnz
mov
adc
pop
fimuls
popf
or
push
sarl
mov
and
mov
xor
in
cwtl
inc
add
hlt
jne
stos
sbb
cli
loop
repnz
jle
push
adc
sbb
lock
arpl
call
add
add
jp
test
das
jp
mulb
or
mov
or
cltd
test
or
out
mov
sbb
add
mov
ret
testl
or
mov
ja
stos
jbe
xchg
cld
aaa
adc
lahf
add
and
mov
call
inc
outsl
or
mov
push
sti
xchg
cwtl
stos
push
push
in
sbb
popa
sub
lods
jp
jge
or
adc
jecxz
lods
mov
or
loopne
inc
or
push
push
add
cli
adcb
lcall
call
sti
test
sub
dec
add
decl
je
sbb
stos
ret
or
std
and
mov
xchg
mov
fdiv
add
bound
dec
sub
cli
adc
rcrb
add
mov
or
cmp
pop
xor
sbb
nop
dec
nop
inc
inc
pushf
dec
jno
mov
push
jno
call
or
int3
sbb
or
int
fnstcw
add
and
lret
aad
push
mov
xlat
xchg
cmp
add
mov
mov
mov
call
push
mov
into
jno
and
pop
sbb
mov
lea
sub
jns
call
adc
push
xchg
inc
call
add
out
push
int3
test
jo
sbb
mov
scas
cs
ja
stos
lahf
das
dec
sbb
mov
mov
mov
mov
and
push
nop
or
mov
fistpl
scas
leave
mov
cmp
jne
jb
cmp
stos
ret
aad
jg
jge
xor
pop
fdivrl
scas
sbb
pop
jo
call
jbe
mov
out
dec
push
xchg
in
mov
mov
mov
orb
sub
and
push
jmp
call
lea
jns
cmp
jmp
add
daa
sub
cld
mov
pop
dec
xchg
icebp
xchg
cli
push
es
mov
call
inc
pop
enter
lods
push
mov
inc
pop
into
mov
xor
mov
mov
addb
dec
insl
mov
loop
shrl
adc
adc
push
addb
cld
mov
inc
or
roll
nop
insl
adc
add
push
add
mov
mov
inc
cmp
xor
call
fucomip
inc
dec
or
fwait
stc
mov
push
or
or
mov
ja
sub
adc
fs
fldl2e
and
test
arpl
sbb
rorb
popa
or
jle
xchg
add
xchg
mov
mov
jne
ds
jle
imul
xchg
mov
testb
push
sbb
jmp
pop
mov
pop
jle
inc
push
mov
or
push
add
and
add
xchg
add
outsb
mulb
int3
jb
lods
add
jns
inc
mov
das
loope
mov
mov
hlt
adc
stos
test
mov
dec
ss
rorl
mov
mov
xchg
cmp
flds
adc
or
jl
mov
cwtl
or
mov
rorb
mov
ret
mov
dec
loop
sbb
mov
xchg
lret
dec
stos
and
call
mov
and
sbb
xchg
call
and
adc
pusha
mov
jp
cmp
dec
xchg
clc
xor
add
mov
pop
fcoms
mov
or
jmp
repnz
shlb
mov
dec
popa
jno
out
daa
sti
xor
test
int
jae
hlt
rolb
call
inc
aad
push
fildll
test
mov
orb
je
jno
mov
push
xor
arpl
jo
sbb
addr16
mov
mov
ja
xor
popf
push
lods
jnp
movsl
popf
or
mov
xor
stos
jmp
insb
push
cmc
test
mov
pop
pop
xchg
int
jp
and
adc
addr16
jmp
or
insl
push
fnstenv
or
push
aad
aad
hlt
arpl
fdivrs
call
test
ret
and
add
jmp
push
adc
dec
cmp
lods
std
adc
jns
add
sbb
push
add
call
inc
add
ficomps
rorb
mov
fisubl
cltd
out
fists
into
call
out
in
addr16
and
xor
das
sbb
mov
mov
adc
jb
int3
sar
jmp
cld
in
dec
add
call
mov
in
call
or
push
or
jb
lds
cmpsl
insb
jl
cli
repnz
mov
mov
daa
mov
loop
add
scas
or
mov
cmp
cmp
mov
inc
cld
jge
sub
ret
push
je
mov
pop
and
mov
mov
add
test
fs
sub
into
shrl
in
jmp
call
xchg
pop
das
xchg
mov
lods
test
decl
or
popa
push
sbb
sub
or
sti
xchg
addr16
xor
xor
mov
xchg
stc
pop
fs
push
in
push
jbe
pop
movsl
mov
mov
cs
cmp
hlt
add
das
pop
mov
push
mov
sbb
sub
cmc
dec
shrb
mov
xor
pop
mov
mov
cwtl
dec
adc
addb
jmp
and
xchg
mov
cwtl
jno
adc
mov
jbe
lret
icebp
addl
ss
popl
into
lret
pop
cmpb
nop
mov
push
jp
repnz
jecxz
push
pop
and
test
mov
enter
or
sbb
add
cmpsl
mov
sub
pop
sbb
xor
xor
aas
es
lock
divb
adc
lret
insb
and
pop
xor
cmp
icebp
inc
push
push
adc
stos
pop
or
gs
addb
vcvtss2si
cli
add
pop
shr
das
inc
push
into
jecxz
cmp
pop
mov
xchg
dec
daa
fsubl
push
adc
adc
adcb
jp
push
dec
and
notl
mov
and
gs
xor
insb
xorb
mov
rcl
or
loope
lcall
daa
mov
dec
daa
xchg
add
mov
inc
or
inc
sub
cmpsb
notl
es
cmpsb
lods
cmp
cld
call
mov
xchg
adcb
jae
movsb
mov
adc
movsl
imul
mov
hlt
dec
or
jecxz
aaa
and
mov
faddl
add
inc
int3
cmp
mov
bound
inc
push
ljmp
inc
jbe
int3
push
lahf
mov
cli
pop
dec
pop
test
jecxz
fimuls
or
shrb
je
or
shll
loope
mov
or
xchg
mov
pop
mov
lock
add
stos
jp
mov
jne
jmp
dec
xchg
push
add
repz
inc
sub
push
jb
inc
push
fsubl
mov
sub
nop
mov
or
fwait
mov
mov
out
xor
lea
jns
or
inc
dec
pop
xor
dec
test
adc
cmc
imul
call
jle
xor
mov
pop
xor
push
gs
add
fbstp
xor
ficompl
inc
xor
daa
js
fiadds
addl
addr16
not
push
inc
xor
ljmp
enter
inc
stos
out
gs
jae
adcb
arpl
adc
push
shll
leave
jbe
imul
jmp
cmp
mov
call
fsubs
pushf
sti
and
je
sub
clc
dec
lahf
ljmp
pop
xchg
or
out
sub
or
repz
hlt
mov
pop
mov
mov
adc
or
pushf
out
test
inc
mov
mov
pop
inc
cmp
int3
adc
adc
call
out
sub
inc
test
int
daa
clc
rorl
add
lcall
jno
sub
pushf
lret
dec
jae
in
pop
call
xor
mov
pusha
jl
inc
push
or
ror
mov
dec
lock
pop
ret
js
inc
sahf
std
das
scas
add
cmpl
push
cltd
jno
jo
xchg
jmp
cwtl
ret
xor
loopne
mov
out
sbbl
cmp
inc
or
pop
rolb
call
nop
push
adc
ss
or
add
ja
sub
out
push
cmp
xchg
and
cmp
dec
hlt
sub
popa
negl
daa
push
mov
or
stos
je
mov
clc
mov
or
cmp
jle
dec
icebp
iret
or
repnz
add
mov
lahf
pop
sar
push
inc
cmc
adc
mov
ljmp
out
cmp
fldt
push
adc
test
cmp
dec
cmp
add
hlt
jge
jle
rclb
mov
push
jmp
pop
sti
shr
xlat
pop
das
ljmp
insb
cmc
enter
mulb
int
movsb
icebp
xor
add
dec
mov
out
repz
mov
mov
or
push
call
dec
push
dec
and
mov
inc
mov
or
sbb
dec
push
jle
test
mov
add
xor
sti
ret
test
bound
mov
push
cmp
out
xlat
push
repz
ret
pop
cmp
fimull
xor
popa
jb
jne
or
jo
jl
inc
push
rcll
push
sub
pop
out
mov
leave
aaa
mov
addb
lods
jo
inc
ret
int
sub
add
cltd
or
rorl
mov
rcrb
out
or
mov
call
out
xor
mov
adc
repz
inc
in
mov
push
lcall
fsubp
mov
std
movsl
int3
jmp
lods
dec
adc
adc
mov
pop
add
jnp
or
and
in
dec
inc
les
xchg
mov
loop
xchg
jmp
mov
mov
sub
or
aas
mov
add
insb
xchg
pop
cmp
mov
stos
sbbb
repz
cld
push
mov
push
test
ret
scas
adc
adc
icebp
inc
mov
push
or
stc
pop
adc
icebp
icebp
and
bound
and
addr16
loopne
add
sbb
outsl
and
popl
adcb
jo
push
cmp
inc
push
adc
sbb
cmp
mov
sub
nop
sbb
push
push
in
andb
xor
jl
adc
in
mov
rcrb
movb
es
push
mov
enter
ja
adc
adc
add
test
shlb
mov
dec
sahf
outsl
shll
test
sub
sbb
lods
pop
mov
mov
push
dec
in
adc
or
or
jmp
sti
cs
or
jge
push
pop
or
jbe
movsl
jg
push
or
push
stc
xchg
lahf
mov
mov
test
and
mov
mov
jmp
sbb
pop
xchg
mov
add
xchg
cmc
pop
fmulp
out
xor
repnz
fiaddl
fdivrl
call
lods
fldt
xchg
aaa
xchg
push
test
pop
jmp
clc
mov
mov
lcall
or
push
dec
outsb
adc
or
and
sbb
jg
lods
pop
fld
push
pop
sbb
xor
scas
push
mov
jne
push
aaa
ficompl
pop
inc
cmp
int
lods
push
filds
lods
sub
daa
lret
jmp
push
and
push
pop
or
pop
loopne
jns
xchg
add
cmpsl
adc
loope
movsl
sarl
add
mov
pop
movsb
lods
pop
jmp
mov
shrl
add
adc
add
push
aam
int
adc
aam
mov
fnstcw
mov
inc
pop
fadd
sti
shrb
scas
fstpt
mov
add
mov
or
enter
mov
xchg
sub
dec
les
mov
dec
test
xchg
stos
mov
cmp
divl
fwait
int
call
movsl
adc
clc
scas
arpl
dec
push
shrb
mov
push
test
cli
mov
mov
xchg
mov
sbb
daa
outsb
fidivl
add
sub
nop
jmp
and
lods
pop
or
in
stc
push
repnz
mov
add
mov
pop
dec
dec
mov
sbb
sahf
lahf
add
fisttpl
jmp
iret
jo
test
pop
inc
cmp
addb
icebp
test
cmp
sbb
roll
aad
or
mov
test
dec
jno
push
call
cltd
dec
loope
inc
bound
mov
lahf
shlb
push
mov
mov
ds
adc
sub
cld
xchg
popa
pop
and
xor
mov
mov
xchg
pop
jmp
mov
ds
xlat
mov
mov
or
dec
mov
call
xchg
repz
or
jnp
mov
inc
in
jno
stos
sub
mov
add
icebp
scas
or
call
add
push
fsubp
daa
push
mov
pop
jmp
test
inc
xor
push
repnz
lods
mov
and
mov
movsl
dec
add
mov
add
out
jg
xorb
sbb
mov
lods
pop
or
or
xor
mov
ljmp
call
cwtl
mov
push
mov
mov
pop
lcall
insl
inc
pop
lea
pop
xchg
add
repnz
fucomp
add
fucomp
testb
stc
add
imul
pusha
sbbb
std
xor
aas
pop
or
popa
and
cmp
iret
inc
aas
mov
es
and
mov
cmp
inc
cwtl
or
dec
push
cmc
dec
and
fiaddl
adc
mov
mov
fstp
jo
cmp
repnz
mov
add
inc
xchg
and
test
rclb
pop
xor
insb
push
insb
int
daa
scas
add
push
pop
in
xchg
add
cltd
cmc
adc
sar
repz
fdivs
or
popf
ja
into
and
cmp
adc
pusha
dec
out
adcl
jnp
inc
cli
inc
push
adc
dec
out
push
shll
out
pop
or
jo
mov
dec
mov
cltd
inc
sub
test
inc
gs
stc
call
sbb
enter
inc
fsts
sahf
push
inc
popf
pop
xchg
dec
inc
and
mov
cli
cmc
inc
shll
or
int3
out
push
call
lahf
cmc
sub
xorb
mov
ja
add
sarl
ret
push
std
popa
mov
repnz
fadds
sahf
mov
pusha
xchg
cmc
clc
or
fadds
scas
jl
mov
rorb
or
xchg
popa
mov
cwtl
pop
mov
icebp
adc
rcll
mov
mov
mov
in
mov
fbstp
xchg
mov
movsl
xchg
xor
mov
mov
mov
cltd
xchg
mov
hlt
adc
aad
es
add
mov
pop
add
or
push
jg
ja
adc
scas
jmp
fwait
add
imul
or
dec
jg
mov
push
add
adc
pop
xchg
popa
das
jge
inc
or
cmp
das
xchg
xorl
enter
orb
cs
call
int3
pop
and
sbb
cmpsl
stos
add
pop
and
ret
mov
mov
dec
js
push
sub
xor
imul
mov
dec
dec
enter
add
jge
xor
add
inc
inc
xchg
daa
push
icebp
lds
xchg
hlt
mov
xchg
into
or
or
xor
fwait
dec
push
mov
adc
jne
sub
push
jmp
dec
sbb
push
je
dec
shl
int
jecxz
outsl
rcl
mov
mov
inc
push
jge
add
enter
lods
inc
push
aad
cmp
out
fst
ljmp
jmp
insl
in
std
or
sti
aas
orb
je
dec
bound
cmp
lahf
repz
or
call
int3
jmp
es
stos
pushf
cmp
scas
push
mov
test
xchg
push
jbe
scas
jne
push
and
loope
jbe
enter
cmp
mov
mov
jmp
lahf
sub
pop
mov
ja
dec
repnz
je
jno
jmp
inc
mov
mov
iret
cmpsb
add
hlt
add
sub
test
xor
jb
sub
lock
aad
jmp
test
xchg
push
in
dec
dec
or
add
or
mov
jb
adc
inc
mov
and
call
xchg
jge
lahf
add
movb
adc
pop
xchg
pop
add
xchg
pop
jb
int
pop
jnp
dec
mov
jns
repnz
fstl
adc
lret
cmp
xor
imul
inc
dec
ret
dec
pop
mov
and
in
pop
es
sbb
mov
shlb
sarl
lds
lahf
std
addb
jp
jl
push
inc
and
add
adc
sub
pop
lods
mov
js
std
ret
loope
add
in
lea
jo
mov
push
lahf
jne
cmpsb
mov
mov
sbb
adc
adc
inc
jno
mov
rorb
mov
or
rcrl
divb
mov
lods
jecxz
or
jle
mov
in
imull
rcll
fidivl
jmp
fistl
out
enter
cltd
add
xor
dec
sbbb
icebp
pop
scas
add
mov
inc
int3
in
mov
jno
sub
cmp
jg
mov
push
mov
daa
jo
les
and
pop
jmp
popf
mov
add
dec
mov
pop
mov
or
je
mov
in
int3
xchg
push
add
fistl
mull
inc
push
xchg
cld
aad
xor
test
in
fs
aad
cmp
or
push
aad
lds
dec
shll
aaa
lret
xchg
inc
jle
xor
sarl
in
roll
mov
push
es
aaa
imul
pusha
fsubr
push
and
ljmp
pop
adc
add
mov
das
rol
pop
adc
stc
aad
mov
inc
xchg
lds
cmp
sub
mov
inc
subb
mov
roll
add
mov
mov
adc
xor
add
jnp
add
mov
call
or
imul
jmp
lahf
or
push
pop
hlt
js
jb
rcl
fimuls
das
push
pop
loop
xor
std
repz
push
inc
xchg
inc
pop
lea
add
mov
outsb
xchg
jne
sub
scas
cli
jb
pop
dec
inc
sahf
mov
sbb
fisubrl
pusha
push
mov
orb
mov
xchg
cld
pop
call
gs
xor
call
insb
mov
inc
call
pop
or
mov
or
mov
jnp
push
mov
cld
hlt
xor
dec
sti
add
int3
add
mov
pop
sbbb
or
adcl
dec
dec
shll
mov
push
push
mov
fs
push
in
outsb
pushf
outsl
movsb
or
mov
loopne
push
inc
ja
add
or
push
sbb
popf
aaa
push
jmp
add
mov
fwait
pop
call
and
sub
mov
sub
push
push
pop
mov
call
pop
push
and
inc
out
push
pop
or
inc
sarb
xor
shrb
sbb
rcr
int3
mov
fnstcw
pop
adc
dec
arpl
or
mulb
and
mov
sub
push
inc
mov
jmp
sbb
xor
adc
dec
enter
les
call
push
aas
sub
lock
xchg
mov
ja
addl
and
mov
pop
mov
xchg
mov
mov
mov
call
jp
gs
cld
adc
lock
call
repnz
fisttpll
sub
pop
aad
and
fs
gs
mov
in
xchg
dec
es
jge
or
js
add
icebp
out
jge
int
sub
aaa
sub
out
lahf
or
mov
out
pushf
out
mov
aad
jne
popf
jecxz
das
fisttps
repz
push
test
repnz
pop
mov
jl
out
leave
add
pop
dec
into
and
stos
jmp
pop
or
out
paddw
jne
call
lds
dec
pop
pop
mov
xchg
das
jmp
mov
pop
out
dec
repnz
xchg
push
inc
push
mov
andl
inc
inc
pop
inc
clc
xchg
nop
push
mov
push
mov
mov
ja
or
cmpsl
add
jb
lret
xchg
fbld
pop
mov
mov
cmp
mov
test
mov
push
pop
dec
jmp
stos
aas
inc
rclb
sub
icebp
divb
mov
and
and
mov
mov
sub
add
adc
out
ja
test
das
insb
dec
bound
sub
and
daa
mov
mov
sub
mov
jmp
popf
pop
mov
cwtl
or
add
adc
adc
sbb
call
cmp
pop
mov
dec
add
jae
sub
or
or
jl
insb
mov
sbb
insl
cmp
orl
fldenv
pushf
cld
and
push
repnz
sub
idiv
inc
or
add
xor
mov
pop
mov
movsb
mov
push
lods
dec
mov
and
xchg
ss
push
adc
adc
ret
jae
bound
pop
push
stos
push
aaa
push
inc
ret
or
icebp
shl
movsl
mov
sub
cmp
cmp
test
call
or
es
sahf
adcl
xchg
cltd
into
call
fwait
lock
mov
fidivs
sub
pop
daa
push
xchg
loope
add
scas
pop
daa
add
ror
push
ss
in
sti
or
les
sbb
jmp
jbe
aaa
addr16
out
xchg
shrb
stc
ss
rcll
gs
rorl
cmpsl
scas
cli
xor
aaa
mov
aas
xor
call
adcb
sbb
cmp
push
pusha
mov
mov
or
popf
jl
mov
xchg
inc
pushf
mov
mov
xor
pop
pop
mov
cwtl
push
cs
sbb
int3
adc
mov
jp
xor
mov
js
dec
mov
ja
mov
xor
add
loopne
xor
out
mov
cmp
cs
fstpl
mov
pusha
or
lcall
dec
cmpsl
push
loop
in
movsb
and
insb
subl
mov
mov
in
aas
dec
insl
dec
jno
push
pop
inc
cltd
icebp
push
sub
rolb
out
inc
mov
inc
inc
fcoms
andb
jb
push
mov
mull
mov
or
popf
int
mov
call
mov
loopne
push
inc
imul
push
ljmp
loopne
mov
cmp
out
pusha
or
push
cmpb
bnd
popa
xor
mov
fists
into
imul
mov
inc
or
push
andb
mov
sahf
faddl
add
mov
pop
aam
loope
sub
lret
adc
nop
cwtl
out
adc
arpl
movsl
xchg
sbb
push
mov
dec
sub
and
jmp
sub
aaa
push
push
dec
push
push
inc
push
out
ds
sub
cmpsl
test
add
cwtl
xor
or
cld
xor
arpl
and
rorl
aad
dec
repz
push
test
push
or
call
push
icebp
or
andl
or
pop
jo
call
cmpsb
xchg
or
scas
shlb
out
push
add
loope
push
test
ds
call
adc
and
dec
xchg
icebp
call
mov
leave
daa
es
pop
mov
xor
mov
pop
js
das
mov
ja
aam
dec
repnz
jmp
inc
push
pushf
push
or
fiadds
lahf
inc
inc
jge
hlt
orl
and
lods
data16
lock
sarb
enter
clc
repz
dec
cmp
cltd
lods
add
out
fmuls
ja
shl
adc
enter
push
cmp
dec
dec
testb
mov
mov
sbb
sahf
js
sub
ljmp
sbb
xchg
jae
cmc
sub
mov
pop
pop
shll
inc
daa
outsb
jns
cld
and
clc
stos
std
addb
dec
push
fcoms
push
pop
andb
push
js
repnz
mov
fists
in
push
dec
cmp
repz
cwtl
cmpb
ret
xchg
push
sub
repnz
xor
call
je
in
stos
mov
jns
test
insl
mov
jbe
aas
pop
xchg
insl
cli
loop
adc
and
add
push
hlt
mov
std
or
imul
cmp
mov
pusha
and
inc
call
dec
dec
aaa
mov
rorb
scas
xor
pop
pop
add
or
es
sbb
push
dec
pop
test
jecxz
or
xchg
cmp
sbb
jp
cmp
xor
js
repz
dec
incl
inc
mov
sbbb
out
sbb
ret
pop
fcoms
fidivrs
data16
ja
jge
pop
int
lret
cmp
movsb
mov
je
jp
push
stc
jmp
imul
cmp
bound
movsb
dec
cmc
loop
pop
inc
lahf
push
inc
inc
dec
fsubl
and
xchg
inc
pop
pop
cmpl
jl
cmpsb
inc
push
repz
lods
pop
in
or
inc
xor
mov
and
shrb
mov
bound
pop
dec
pop
xchg
push
mov
push
insb
sar
daa
mov
cwtl
add
push
repnz
jmp
jl
push
mov
dec
loopne
test
pushf
mov
push
or
jmp
or
or
out
nop
mov
jmp
out
jle
mov
rcrb
call
dec
dec
sub
data16
inc
jg
mov
mov
mov
repnz
divb
mov
inc
and
lahf
int3
push
push
xor
mov
es
in
pop
or
out
in
pop
add
lods
mov
xor
clc
adc
icebp
push
and
adc
js
dec
pop
sti
xlat
push
cmp
orb
loop
sahf
push
mov
jbe
mov
or
xor
push
nop
lret
dec
out
jmp
and
imul
test
or
xchg
stc
repnz
sub
enter
das
jnp
xor
jl
pop
dec
test
xchg
jle
inc
sub
pop
pop
subb
jb
test
imul
jmp
leave
jp
xchg
notb
mov
out
xchg
dec
mov
inc
mov
fs
mov
fstl
shrb
popa
pop
cmc
push
inc
xor
xchg
push
cwtl
stos
and
out
in
loop
push
stos
in
push
mov
insl
or
add
inc
dec
sub
dec
lock
sub
mov
out
lock
push
mov
test
sbb
mov
dec
cmp
add
inc
bnd
ljmp
push
inc
cmp
cmp
cmp
sub
insl
mov
sbb
cmpsb
mov
add
mov
out
test
mov
inc
jb
cmp
dec
add
mov
roll
pop
pop
pop
sbb
in
fisubrl
or
push
aam
mov
sub
pop
xor
pop
mov
push
lret
cli
push
pop
push
hlt
or
dec
mov
mov
and
lods
xlat
fsts
mov
sub
inc
pop
xchg
iret
fistpll
add
push
push
mov
sbbb
adc
lea
cs
mov
cmp
mov
push
jp
repz
push
inc
loope
inc
sub
aas
insl
pushl
test
icebp
jb
dec
inc
mov
filds
add
push
sbb
clc
sbb
jg
insl
xor
dec
sbbl
mov
mov
into
push
addr16
xlat
inc
mov
sahf
out
push
lret
rcrb
mov
and
lock
mov
inc
xchg
mov
mov
pop
mov
es
test
sbb
or
xchg
lret
or
cwtl
sbb
or
int
aam
pop
xchg
dec
xchg
in
sbb
cmc
xor
or
pop
mov
sub
adc
sbb
and
les
ljmp
arpl
pushf
adc
push
inc
adc
push
lds
xchg
xchg
or
leave
dec
loopne
ret
or
jbe
leave
cmpsb
xchg
pop
add
mov
mov
push
in
mov
ret
and
xchg
or
xchg
les
xchg
pop
sbb
mov
lods
add
aad
push
notl
pop
push
insl
inc
arpl
inc
or
jge
jb
push
jmp
hlt
sbb
repnz
mov
rol
pop
jo
call
ss
stc
mov
roll
cmp
jge
jo
ljmp
adc
mov
push
sub
push
jmp
add
adc
dec
add
pop
push
or
pop
jmp
mov
std
xor
xor
jmp
outsl
mov
mov
call
dec
mov
adc
add
dec
or
mov
push
dec
push
xor
mov
fstl
clc
jno
push
or
mov
das
in
mov
or
push
add
pop
pop
aad
loop
add
sub
andl
add
mov
push
or
mov
ljmp
jmp
pop
mov
clc
flds
pop
mov
jmp
lods
pop
ja
adc
outsb
cs
sub
cld
xchg
aad
inc
mov
add
call
sbb
sbbb
jg
mov
add
jmp
insb
sub
xchg
mov
pop
data16
mov
js
or
sub
sbb
adc
inc
cli
xlat
push
cli
pop
movsb
cli
mov
mov
push
pushf
insl
mov
inc
sub
cmp
jo
push
sub
mov
and
in
cmp
jne
xor
mov
jp
inc
mov
pop
jmp
and
adc
adc
leave
push
cmp
and
movsl
push
mov
push
and
or
pushf
and
xorl
stos
ret
andb
aas
adc
jmp
push
fidivs
or
enter
in
mov
xor
sub
shll
push
jnp
cs
add
adc
pop
or
adc
lods
das
adc
ja
cmp
xchg
xlat
nop
pop
pop
or
lcall
xor
fucomp
push
push
mov
inc
jbe
xor
call
pop
shll
jae
shll
nop
jl
pop
pop
adc
roll
or
jl
mov
in
roll
out
mov
rcr
repz
cli
inc
bound
cmc
inc
jp
push
addl
pop
test
sub
push
pushaw
movsb
sbb
cltd
mov
fwait
xchg
pop
sbb
test
cmp
add
mov
lods
jmp
sbb
pushf
call
test
and
popf
movsb
xchg
and
addr16
imul
movsb
xor
lea
add
fistl
jp
pop
jb
lods
lret
xchg
daa
sarb
or
jle
lods
js
push
sbb
push
sbb
in
sahf
or
adc
loope
and
jne
sbb
rol
push
ret
hlt
in
sahf
repnz
add
fimull
aad
or
stc
in
setg
and
int3
nop
pop
mov
in
test
jb
pusha
notl
testb
push
or
fs
inc
nop
cmpsb
jmp
daa
inc
pop
lret
mov
mov
mov
mov
lahf
mov
xor
call
out
mov
leave
add
das
push
lods
filds
jmp
enter
cmp
in
fsub
lret
xchg
xchg
addr16
lret
xchg
stos
fs
out
mov
xor
push
std
jmp
hlt
mov
sahf
pop
pop
insb
fwait
add
mov
bound
jbe
jb
jns
inc
xor
dec
ja
add
in
in
std
mov
pushf
mov
sub
leave
fcomi
add
aam
nop
test
adc
cmp
fldlg2
push
jnp
push
repz
mov
mov
pop
lahf
mov
bound
shr
sub
arpl
jno
jo
mov
test
push
push
lcall
cltd
mull
and
ss
orb
xchg
mov
inc
or
dec
fdivp
incl
add
mov
inc
mov
imul
and
pop
pop
xlat
lret
cwtl
gs
inc
enter
sbb
cs
mov
icebp
or
add
xchg
cld
test
push
adc
cs
ljmp
jecxz
dec
pop
lock
mov
push
dec
push
in
enter
sbb
sub
insl
mov
fcomps
or
lcall
adc
pop
decl
loopne
sbb
sbb
mov
lret
dec
call
mov
xchg
sub
das
insb
imul
mov
xchg
addl
mov
xor
inc
or
jns
pop
aas
ret
incb
cmc
notl
movsl
or
mov
data16
push
push
add
pusha
lret
arpl
or
mov
dec
xor
fiadds
clc
outsl
ret
repnz
sbb
pop
mov
sbb
mov
sub
mov
int
add
mov
push
ret
push
or
mov
inc
cmp
insl
jle
push
sbb
mov
dec
jp
or
roll
sbb
xchg
and
pop
mov
cs
shll
pop
mov
xchg
sbb
stos
enter
lds
rolb
and
sti
dec
inc
add
mov
mov
or
push
cwtl
xor
jmp
mov
enter
add
mov
xchg
jmp
call
push
mov
add
pop
jne
or
jle
mov
stos
test
cmp
fucomip
pop
mov
test
mov
rcll
cmpsb
je
ret
push
dec
popf
lcall
push
stos
xchg
scas
int
sbb
add
pop
test
cmc
imul
dec
test
jp
addr16
mov
jns
insl
dec
in
les
lods
out
icebp
push
call
xchg
ljmp
cli
jnp
int3
or
push
sbb
pop
ja
fldl
mov
jle
cmc
xchg
pop
adc
and
pushw
cld
mov
jmp
lea
or
call
mov
scas
cmpsl
jnp
sbb
jge
pop
mov
push
stos
aad
pop
add
sbb
jecxz
pop
inc
je
cmpsl
or
scas
sub
ficoms
and
pop
mov
shr
enter
and
mov
mov
out
push
xchg
xor
das
mov
push
jge
repz
pop
mov
add
lret
lea
loop
arpl
mov
imul
movsl
xor
ljmp
jl
or
xorb
pop
imul
push
jnp
fwait
orb
adc
aas
das
sub
xchg
xchg
test
or
xor
mov
push
mov
addb
lret
pop
call
xchg
jp
jne
mov
icebp
jmp
pop
sub
add
or
jl
insb
pusha
jg
pop
lret
xchg
cli
bnd
xor
mov
jge
mov
rcll
out
sbb
arpl
cli
fadds
mov
fptan
xor
mov
xor
jge
insb
aaa
cmp
maskmovq
divl
data16
pop
icebp
push
aaa
cmc
nop
rcrb
ficompl
mov
add
mov
int3
push
lods
repz
jl
mov
jmp
lret
add
inc
orb
lds
push
xchg
mov
daa
ret
mov
add
int3
out
mov
inc
jmp
jmp
repnz
dec
or
icebp
mov
or
repnz
mov
and
push
inc
xlat
adc
call
push
dec
ljmp
fists
jmp
pop
cli
cli
rolb
jmp
cltd
adc
xchg
xchg
stc
pop
mov
dec
sti
scas
lret
cmp
clc
inc
push
hlt
inc
jbe
sahf
push
cli
aas
lods
ljmp
mov
data16
sub
repz
mov
call
jecxz,pn
lods
pop
es
out
xlat
add
mov
pop
scas
imul
rorb
jbe
pop
mov
std
sub
popf
pop
push
sbbl
idiv
and
ljmp
loope
cmp
sub
pop
and
pop
loop
jb
ret
mov
mov
insb
adc
sbb
jmp
leave
outsb
push
mov
leave
mov
jp
jno
ja
and
jp
cmp
pop
icebp
out
or
pop
push
inc
xor
addr16
test
out
and
or
push
daa
sti
push
sbb
call
loopne
mov
mov
pop
in
dec
les
push
push
sar
hlt
push
dec
jnp
sub
scas
loopne
and
xchg
popa
popl
int3
insb
sub
pop
cli
mov
adc
or
xor
fmul
in
lods
pop
mov
xchg
and
ret
mov
inc
imull
dec
inc
stos
jb
fs
pop
mov
je
in
push
stos
icebp
and
std
dec
test
lahf
xchg
sarb
test
lods
add
loop
sbb
jbe
aaa
enter
mov
hlt
jno
fdivl
mov
or
enter
and
lock
adc
int
jp
pop
movsl
fcoml
sar
or
popa
inc
and
lea
mov
das
dec
stos
sbb
push
jle
out
ljmp
inc
or
push
xlat
mov
adc
mov
pop
psubsw
mov
push
out
or
xor
popa
icebp
mov
insl
xchg
mov
mov
adcb
lahf
stc
adc
push
mov
aad
cmp
inc
lods
mov
mov
pushf
or
or
je
shr
mov
icebp
mov
lret
jmp
jne
fadds
test
mov
out
sub
fmull
movsl
dec
negl
xchg
add
aaa
sbb
idivb
pop
sbb
add
stos
mov
test
scas
lock
in
mov
jmp
mov
gs
in
jae
sahf
xor
push
xchg
sub
add
mov
out
test
sub
mov
aas
pop
outsb
add
or
sbbb
test
push
pushf
add
sub
pop
push
or
or
dec
std
in
lock
mov
mov
loope
jne
mov
sti
sbb
rorb
push
cwtl
fcom
mov
pop
jb
mov
lds
and
pushf
cmp
out
mov
mov
push
js
popf
jl
inc
pop
loop
pop
test
mov
xchg
pop
jb
inc
cmp
jb
dec
pop
cli
test
ret
js
push
xchg
mov
jmp
sarb
call
or
mov
jb
popa
daa
jmp
inc
notb
dec
fldenvs
push
or
fs
push
lret
xor
adc
test
xchg
ret
pop
mov
cmp
test
movsb
inc
cwtl
jg
adc
jmp
pop
lret
mov
dec
lods
loope
mov
pushf
insb
mov
arpl
inc
inc
orb
add
jp
push
cltd
xor
cmp
cmpsl
xorb
stos
imul
mov
sub
dec
mov
repz
iret
add
call
or
mov
sti
repnz
mov
pop
outsb
push
pop
xor
xchg
das
inc
dec
aam
decl
fdivp
and
jl
xchg
pop
das
dec
jmp
push
jp,pn
insl
cmp
rorb
test
je
xorb
aas
cltd
mov
xchg
mov
repnz
lods
lret
or
stos
xor
pop
cmp
or
inc
or
jb
pop
pop
les
sbb
dec
in
inc
lock
insl
lret
mov
sarl
or
xor
or
mov
adc
push
and
mov
or
sbb
ret
addr16
push
or
out
push
das
leave
stos
adc
les
sbb
fsubs
pop
repnz
into
repz
ret
jae
mov
mov
cmp
lods
fs
dec
adc
sahf
push
sbb
rcrl
rcrl
jg
push
or
dec
loopne
or
jo
cmp
or
cmp
inc
push
pushw
cwtl
pop
jmp
faddl
movsb
rorl
adc
and
loopne
cmpsl
or
or
and
insl
and
jmp
xchg
jo
lods
popf
push
and
sbbb
jo
sar
mov
adc
mov
imul
aam
test
dec
cmp
mov
out
scas
std
orb
pop
pop
jmp
in
xor
pop
mov
les
jbe
xor
lret
das
inc
push
mov
dec
pop
pop
or
cli
int
negb
jno
mov
and
mov
loopne
inc
mov
mov
push
jp
lret
in
dec
mov
sbb
fsub
sub
mov
or
jbe
jmp
mov
stc
call
jmp
dec
adc
jo
xchg
pop
dec
enter
jmp
push
mov
inc
mov
jo
clc
adc
jle
das
pop
pop
pop
je
push
jl,pt
mov
or
add
xor
in
repnz
add
fsubrs
popfw
pusha
call
and
dec
jmp
pop
nop
inc
loop
fistpll
mov
xchg
pop
in
or
fdiv
dec
add
rcll
mov
lahf
xor
icebp
lret
mov
xor
xchg
pop
jmp
test
or
in
pop
js
xor
rcll
fstps
jecxz
xchg
or
lds
xor
jo
inc
or
mov
or
or
shl
popf
hlt
punpckhdq
xchg
fmulp
int3
imul
cmpsl
and
rcrl
sbb
push
lock
dec
js
int3
or
push
shl
jecxz
es
xor
xchg
lods
or
clc
andb
and
repnz
fnstenv
popf
gs
adc
jp
ds
shlb
jle
es
xor
fisttpll
dec
lock
lahf
push
and
stos
lea
sbb
inc
mov
lret
iret
and
pop
push
stos
cs
shrb
bound
mov
xchg
imul
mov
mov
push
push
add
xor
pusha
inc
and
dec
fstps
loope
inc
push
mov
xchg
add
pushf
sti
mov
push
cwtl
mov
cmp
mov
or
xchg
stos
les
sbb
jp
push
add
rolb
push
sti
xchg
jae
mov
add
les
mov
imull
inc
mov
or
call
daa
or
dec
icebp
fsubl
xchg
xorb
pop
test
lahf
mov
pusha
xchg
mov
paddsb
and
je
sahf
outsl
stos
jge,pn
ret
push
cmp
cmp
inc
stos
inc
outsb
inc
js
jge
cmpsb
lea
in
sub
mov
push
mov
push
or
daa
cmp
ficomps
or
subb
xchg
jp
repnz
sbb
lahf
mov
mov
ljmp
andl
or
aad
sub
in
xorl
dec
and
sbb
pusha
inc
or
bswap
and
or
rclb
sub
fdivl
add
jg
orl
and
stos
repz
outsl
mov
rorl
repz
sub
arpl
inc
add
sbb
mov
push
and
mov
cmp
fadd
mov
xor
in
pop
jnp
sbb
jns
sub
repnz
inc
and
xchg
jle
mov
stos
adc
add
mov
das
sub
jmpw
das
xchg
out
divb
inc
das
mov
cmp
and
cmpsl
push
sub
mov
push
push
xchg
xchg
and
icebp
fucomip
lea
and
and
inc
int3
cmc
pop
or
ja
je
dec
sub
mov
cmpsl
call
mov
aaa
fnstenv
ret
dec
daa
push
js
adc
inc
mov
add
ficomps
xchg
sbb
cmp
xchg
inc
ret
mov
xlat
ljmp
xorb
jmp
fldenv
fucomp
jo
idivb
imul
xorb
cmp
pop
outsb
mov
mov
and
ja
fucomip
xchg
cltd
pop
pop
add
popa
sbb
js
js
and
mov
dec
popl
or
inc
leave
pop
sbb
pop
mov
iret
nop
in
bound
jo
push
pop
push
mov
ja
fsubr
xchg
mov
or
jo
dec
adc
es
sti
adc
mov
jae
push
test
enter
pop
xor
push
popf
fchs
sub
pushf
rsqrtps
push
in
mov
loopne
sub
repnz
fnsave
mov
inc
dec
into
mov
shll
or
lea
loop
add
mov
sbb
add
mov
and
insb
mov
testl
add
cmp
xchg
lods
inc
stos
xor
push
inc
jl
mov
fidivrl
cmp
mov
inc
push
jmp
fcom
jmp
jl
dec
or
mov
mov
or
mull
or
mov
aad
jae
mov
dec
adc
loope
dec
movsl
rorb
or
jns
pop
push
rcpps
mov
loope
wrmsr
jae
out
rcrl
and
inc
mov
push
scas
inc
add
pop
xor
xchg
jge
out
mov
cld
add
mov
inc
mov
call
push
shll
cmp
jmp
movb
mov
cmp
rcrb
fstpl
loope
inc
dec
lods
jmp
call
fsubrp
dec
repnz
mov
xor
xor
mov
inc
mov
int
pop
mov
mov
mov
repnz
sbbl
je
test
jo
psllq
dec
icebp
mov
pop
ret
lret
das
pop
dec
fimuls
mov
fidivs
add
std
sbb
inc
lcall
mov
out
cs
fs
addl
or
jno
mov
hlt
push
pushf
dec
mov
stc
jg
xor
or
jne
fwait
idivb
xor
cmpsl
adc
or
clc
jo
cltd
je
pop
sbb
loope
mov
mov
jmp
mov
outsb
inc
pop
aam
insl
and
test
call
and
popf
loope
cmpsl
outsb
xor
in
cltd
adc
add
arpl
repnz
mov
fstps
add
ror
sbb
xor
mov
movsw
mov
call
imul
inc
sub
pop
call
jnp
cmpsb
fwait
lods
push
pop
negl
mov
enter
inc
or
dec
jne
mov
mov
out
das
add
movsb
les
out
mov
insl
and
and
rorl
push
xchg
insb
lcall
in
inc
cli
jl
leave
push
cli
stc
mov
pop
cmpsl
ret
sbb
lods
ret
dec
xorl
test
pop
push
pusha
jne
jne
jns
leave
inc
jb
or
mov
push
scas
jbe
subb
stos
leave
sbb
xchg
add
nop
cli
out
aad
aaa
add
and
push
pop
and
out
mov
mov
lahf
icebp
pop
xlat
repnz
fisttpl
ss
adc
gs
inc
xchg
jmp
push
or
in
mov
scas
add
lcall
mov
adc
ror
push
jb
je
pop
jb
shrb
jge
xor
cmp
fwait
vpmacsswd
cs
mov
mov
test
jne
stos
scas
insl
add
jmp
cmp
call
mov
sarb
dec
sahf
lret
fdivl
pop
pop
jnp
mov
std
xchg
cwtl
push
repnz
push
sti
push
or
repz
stos
or
imul
pop
push
or
xchg
loopne
lods
push
push
push
pop
call
push
cltd
cmp
movsb
leave
mov
int
into
push
dec
cmp
xchg
rcrl
xchg
daa
mov
inc
jbe
cmpsl
adc
fs
cmp
dec
ficoml
mov
cmpl
jp
mov
cmp
inc
or
adc
xchg
cmp
jns
xor
in
imul
inc
icebp
adc
inc
andb
rorl
mov
sub
pop
call
mov
xchg
movsb
mov
push
mov
xchg
mov
push
enter
and
mov
daa
push
hlt
cmp
dec
stos
cld
daa
or
push
jbe
ret
cs
imul
add
dec
push
adc
ljmp
jmp
inc
or
and
adc
xchg
xchg
divl
push
pop
push
mov
or
sbb
cmc
or
cmp
and
add
mov
int3
xchg
jmp
or
jo
push
imul
push
hlt
int
mov
ljmp
push
push
adcl
mov
int3
sub
push
or
add
js
rorb
call
adc
ret
icebp
call
gs
imul
mov
mov
fidivs
inc
cltd
or
lods
lret
push
lret
sti
mov
sbb
or
inc
aam
pop
xor
or
or
push
popf
cld
pop
mov
adc
das
xchg
jge
xor
nop
jae
xchg
mov
xorl
sbb
jne
rolb
lret
jnp
xor
inc
dec
jmp
jo
push
xchg
adc
test
call
adc
mov
fcmovnbe
mov
sbb
or
leave
not
or
fists
xchg
pop
mov
cli
daa
test
lods
mov
das
aas
cld
int3
div
dec
push
arpl
mov
cmp
orb
mov
jo
push
lds
orl
jbe
cmp
test
ret
push
or
inc
daa
mov
dec
ss
movsb
fs
mov
sub
addb
push
shll
in
push
lods
mov
test
das
pop
add
outsb
add
filds
jbe
jl
pop
jge
in
aaa
xor
pop
jmp
adc
adc
mov
lret
mov
popf
mov
cmp
mov
sti
stos
adcl
cs
add
or
add
popf
jge
cmp
push
les
cmp
fdiv
or
adc
or
out
push
add
jmp
ds
mov
push
lcall
pop
lcall
lcall
xchg
push
sbb
and
popf
lds
push
lahf
adc
inc
call
add
int
rcll
push
cmpsb
xor
stos
dec
pop
push
lahf
jns
movsb
mov
mov
sub
outsb
dec
xchg
mov
sub
sub
mov
xor
lock
pop
push
dec
inc
mov
int
mov
inc
add
pminub
adc
cmpb
cmp
push
pop
insb
call
loopne
ss
mov
dec
stos
mov
or
or
loop
ja
inc
or
dec
mov
in
push
xchg
pop
xchg
pop
jne
mov
loope
mov
fdivr
sub
lret
lods
xchg
lods
dec
add
jmp
mov
dec
dec
cmpsb
add
cmp
repz
icebp
xchg
repnz
ss
xlat
test
xchg
lods
cmc
sub
mov
jb
loope
ljmp
sub
out
ds
scas
cmp
mov
push
lret
nop
add
loope
or
sbb
les
xchg
cld
loopne
pop
jle,pt
int
push
cmp
cwtl
insb
mov
data16
mov
jbe
add
addr16
mov
push
cs
repz
mov
notl
mov
dec
push
sbb
mov
cmc
jnp
dec
out
inc
aaa
push
fistpl
pop
aam
mov
mov
mov
add
xchg
sub
sbb
cmpsb
xchg
dec
les
adc
add
push
cmpsl
dec
popa
jmp
jl
loope
andb
ret
fisttpll
outsb
add
inc
shll
and
stos
mov
xlat
js
pop
jae
mov
jmp
push
icebp
xchg
les
das
mov
sbb
mov
fucomi
lret
xor
xor
xchg
mov
add
icebp
cmp
xorb
out
push
out
mov
push
js
sub
or
into
jb
xor
cmovl
adc
lahf
or
in
cmc
mov
movsb
adc
sbb
cwtl
adc
leave
dec
push
and
pop
out
dec
xchg
sub
mov
insl
addr16
pop
inc
fdivs
jl
add
mov
ljmp
jmp
pop
pop
int
cmpsl
scas
sbb
jmp
sub
imul
xchg
mov
dec
xor
mov
imul
jg
sbb
fmull
or
pushl
mov
inc
movsl
or
xchg
add
fs
mov
push
in
mov
test
aam
stc
jecxz
sub
testb
dec
xlat
inc
subl
pop
xchg
iret
out
icebp
cmp
xchg
sub
mov
cmp
enter
push
mov
aaa
dec
lods
or
xchg
push
icebp
push
cmpsb
xchg
pop
jnp
aad
push
loop
maxps
in
jb
inc
sub
add
mov
adc
fucomi
inc
push
cmpsb
mov
int3
out
lods
mov
call
mov
pop
lahf
pop
push
dec
pop
xchg
nop
or
pop
and
imul
push
enter
fs
sub
sahf
jmp
scas
mov
out
mov
mov
push
pop
shl
call
call
popa
push
fwait
mov
daa
add
xor
or
inc
xor
fsincos
inc
jb
xchg
push
jp
push
mov
xchg
adc
rolb
fs
xchg
push
subb
sub
lret
loop
inc
daa
mov
scas
or
stos
dec
dec
xchg
jmp
adc
and
dec
shrb
fsubrl
jbe
fmul
inc
jb
cmp
jg
pop
jb
mov
and
and
adc
negl
jae
shll
mov
jp
inc
xchg
mov
push
ret
jge
popf
dec
scas
testb
cmpsb
test
mov
mov
pop
adc
add
push
and
addb
cmp
lods
add
mov
filds
or
and
pop
adc
xchg
pop
mov
pop
int3
mov
adc
fwait
jmp
push
loopne
daa
aam
pop
jp
jecxz
hlt
push
add
popf
dec
xor
lret
inc
ljmp
rcr
stos
dec
cmp
inc
imul
andb
push
jne
jns
pop
mov
mov
fdivl
in
cmpsb
enter
dec
rclb
dec
xchg
and
pop
mov
call
xchg
rol
jne
stc
insl
xchg
inc
popf
cmpsl
push
xchg
push
popf
jge
xor
xchg
xchg
aam
push
fwait
jns
mov
push
jmp
dec
and
into
xor
add
adc
mov
scas
or
xchg
add
lods
dec
ds
loop
jmp
mov
pop
jg
push
scas
fmuls
fmull
aas
lea
and
out
jno
push
push
jnp
sub
lods
push
loope
mov
cwtl
addr16
call
shlb
jp
jae
aas
stos
cmp
mov
out
push
clc
lret
push
adc
mov
rorl
inc
idivl
pop
add
movsb
popf
pop
jns
inc
mov
dec
lods
movsb
std
add
insb
or
mov
pop
pop
add
mov
sarb
shl
xchg
pop
mov
jl
test
pusha
scas
add
cmp
in
ja
popf
into
inc
repnz
dec
inc
xor
dec
repnz
movsb
dec
dec
dec
or
pop
and
into
clc
xor
das
fcoml
mov
or
pop
orb
lods
bound
imul
mov
push
xchg
jae
addr16
cmp
pop
in
cltd
fldenv
ljmp
and
or
xchg
push
or
add
insl
test
or
cmp
add
xchg
mov
andb
mov
mov
data16
mov
das
fistps
jb
into
lods
loopne
cli
popf
mov
lods
xchg
xor
adc
jbe
lds
sub
xor
xchg
jmp
pop
adc
pop
pop
pop
push
cwtl
pop
dec
mov
aam
or
ss
sarl
or
mov
pop
lahf
std
mov
out
test
ret
call
push
aad
test
and
stos
mov
dec
mov
inc
inc
add
adc
jmp
cmpsb
lods
sarb
popa
cwtl
add
pop
mov
mov
mov
add
dec
cmc
not
add
mov
mov
push
pop
and
aaa
jmp
call
negb
cmpl
pop
mov
pop
rorb
into
rclb
icebp
push
push
lea
adc
jno
test
es
lret
add
cmp
sub
ficoml
adc
in
push
cmp
cmpsb
jle
dec
or
stos
rclb
or
pop
in
mov
out
int
sub
sub
push
fwait
cmp
in
inc
sbb
push
dec
sti
cmc
xchg
mov
add
gs
in
icebp
loope
das
mov
push
out
inc
or
xor
inc
iret
inc
or
mov
add
sub
ret
or
add
adc
sbb
popf
lret
jns
das
insb
mov
sbb
pop
push
aas
dec
int3
or
cld
cli
push
cmp
jmp
or
or
xchg
fstl
in
inc
pop
xlat
sbb
mov
ljmp
dec
dec
cmp
mov
stos
movsl
sbb
cmp
push
out
dec
addr16
push
inc
cmp
push
jo
jae
fsubr
ljmp
cmp
mov
pop
fmull
push
and
fisubl
add
dec
inc
sti
xchg
or
or
js
icebp
cli
repz
and
les
jnp
fbstp
call
and
pshufw
js
sub
dec
subb
and
push
xchg
push
mov
mov
decb
cwtl
repz
adc
xor
xor
add
icebp
mov
es
mov
jmp
mov
ja
or
mov
jns
pop
sub
add
add
cld
in
mov
cmc
add
dec
testl
mov
inc
pop
push
or
les
cmpsl
scas
aaa
or
int
and
adc
sbb
inc
sub
in
sub
push
xlat
inc
fdivr
lds
es
minps
cmc
jp
aas
lock
dec
xchg
mov
aad
test
loopne
xor
pop
or
sbb
pop
sbb
lods
mov
push
icebp
pop
push
sub
in
mov
inc
xchg
pop
imul
stc
push
pop
rcrb
add
sub
das
sbb
add
mov
adc
sub
xchg
mov
push
jmp
repnz
jbe
inc
push
and
mov
mov
icebp
fisttpl
lea
xchg
xchg
inc
andl
and
cmp
into
or
cmp
mov
in
jl
dec
or
jae
sub
xchg
xor
call
nop
jp
test
lods
pop
jmp
xchg
cmp
outsl
loop
testl
fstl
int3
jg
test
add
mov
mov
xchg
mov
and
es
fbld
adc
loop
adc
repnz
jne
mov
popa
movl
imul
cwtl
gs
mov
iret
aad
dec
jns
repnz
sub
pop
xchg
mov
jl
mov
push
movsb
add
add
fwait
sti
sub
mov
add
inc
xor
and
inc
fwait
sub
iret
flds
popa
call
jge
dec
pop
pop
jbe
xor
je
dec
stos
mov
inc
xchg
dec
push
out
mov
insb
or
sbb
cmpsl
pop
mov
adc
lds
jb
ja
scas
stos
mov
ljmp
mov
pop
add
cmc
pushf
lea
subl
std
jl
jge
popf
push
pop
call
enter
incb
cmp
rolb
pop
test
jg
pop
jb
in
xor
dec
jmp
cltd
sbb
add
push
rcrl
pop
nop
pop
push
xchg
filds
cli
mov
mov
dec
adc
inc
in
jno
imul
and
jle
xchg
adc
mov
sahf
cmp
and
xlat
xor
hlt
push
icebp
mov
jb
lea
xor
popa
popf
mov
arpl
loopne
lods
xor
push
aam
inc
aaa
inc
jbe
xor
jb
popa
inc
sub
or
lahf
lret
and
imull
ss
insb
or
stos
in
sarl
lock
add
adc
stc
ret
mov
loope
mov
mov
aad
cmc
mov
lret
jbe
xor
cmp
fdiv
ret
repnz
mov
iret
mov
repz
inc
add
sub
add
addr16
xchg
add
fdivrp
adcb
jno
out
es
jmp
dec
ja
test
ss
shll
xchg
xchg
inc
mov
or
pop
jb
add
jg
in
pop
pop
push
fldcw
jnp
lods
insb
cwtl
and
clc
pop
jmp
pusha
mov
mov
jge
lret
pop
jge
add
adc
stc
out
les
lock
jmp
push
stc
cwtl
push
push
insl
mov
adc
mov
jo
pop
jo
repnz
xchg
xchg
cwtl
decb
mov
das
loopne
or
cld
sbb
sub
aad
add
and
inc
stos
inc
inc
mull
movsl
sbb
pop
insl
xchg
cmpb
in
stos
lods
pop
dec
pop
aas
mov
sbb
lret
or
xchg
cmpsl
inc
mov
xchg
pop
sub
mov
xor
mov
push
daa
xor
lret
imul
cs
repnz
out
addr16
xlat
shlb
in
fs
push
sbb
insl
inc
push
ret
stos
push
int3
out
xchg
jle
mov
sarb
dec
cmpsb
xor
repnz
sub
into
mov
lcall
xchg
xchg
pop
pop
mov
stos
jne
sbb
inc
stc
jo
or
ja
xchg
push
iret
or
ret
mov
sti
lock
out
jecxz
popf
lret
mov
cs
clc
dec
leave
inc
xlat
push
and
add
dec
mov
jne
icebp
adc
call
mov
insl
fsubl
cwtl
xchg
or
add
push
enter
inc
push
cmp
xor
xchg
xlat
outsb
pop
mov
jmp
hlt
xor
sbb
fisttps
push
call
add
shr
cmpsl
fdivr
push
sti
inc
jmp
cli
pop
pop
push
insb
scas
or
inc
ret
inc
adc
cmpsl
jo
jmp
and
jae
adc
xor
les
rcrl
and
push
faddl
or
and
mov
pop
fnstsw
lret
jo
xchg
aas
push
mov
add
pop
rcrl
lock
addb
or
shll
cwtl
fbld
jns
lods
jne
vpsubb
and
sub
pusha
stos
jb
les
or
mov
outsb
pop
mov
fstpl
mov
stos
adc
pop
push
inc
dec
xchg
out
jecxz
into
push
pusha
enter
fildl
dec
imul
inc
push
mov
cmc
push
xor
jbe
sti
call
pop
jmp
adc
mov
inc
jmp
mov
pop
cmp
shlb
push
icebp
std
cmpl
cld
movsl
or
add
sub
push
jb
cmpsb
dec
jmp
mov
mov
mov
sub
jae
sti
daa
loop
aaa
sub
ljmp
js
lret
mov
jne
mov
mov
icebp
or
sbb
or
mov
es
rorb
jl
andb
idiv
mov
popa
dec
sub
int
stc
jnp
jae
sbb
and
out
push
div
and
pop
sbb
xor
jmp
cmp
mov
fildll
dec
xchg
and
pop
jle
inc
call
ja
rcll
xchg
mov
and
or
ss
popf
or
lcall
pop
outsb
mov
mov
xor
ficoml
das
pop
stos
out
xlat
jmp
jmp
fdivs
shll
fdivrs
test
rclb
std
in
enter
dec
adc
push
ljmp
test
pop
fsubl
fidivl
int
and
insb
imul
inc
pop
cmp
and
cwtl
xor
mov
fldt
mov
fwait
out
inc
or
iret
or
jne
cwtl
sub
push
cmp
popf
push
jb
aad
add
loop
mov
movsl
dec
mov
dec
cli
sbb
orb
sbb
aas
ss
sahf
inc
xchg
inc
sti
cs
add
pop
repnz
repnz
and
outsb
mov
iret
nop
in
or
mov
adc
decl
push
test
pop
in
inc
jmp
jne
jle
test
insb
test
adc
or
test
sub
lock
pop
mov
call
ljmp
inc
les
mov
aaa
scas
shr
insb
icebp
push
lea
and
das
out
cmp
lahf
outsl
lahf
jne
sub
into
inc
add
add
mov
sub
call
testl
dec
pop
cli
dec
aam
or
xlat
lock
jmp
movsb
push
mov
fwait
insl
or
or
push
adc
call
cli
mov
push
call
movsl
pop
mov
jmp
stc
imul
mov
sbb
xor
push
ja
ja
jnp
jecxz
cmp
dec
cmpsl
sub
dec
mov
jo
hlt
stc
ja
sub
movsb
inc
loopne
dec
xchg
xor
xor
xor
inc
test
xchg
cmc
adc
pop
mov
movsb
repz
roll
loop
fldl
add
xor
mov
sub
and
imul
add
fmul
sahf
call
add
and
ljmp
inc
aam
mov
mov
leave
dec
and
add
mov
push
fldcw
andl
inc
cmp
cmp
ss
pop
call
cmc
jo
pop
leave
test
jmp
sbb
scas
sub
andl
movsb
shll
mov
insl
outsb
xchg
repz
inc
pop
mov
mov
pop
adcl
push
lret
mov
xchg
in
imul
jne
icebp
mov
xchg
mov
push
addl
or
mov
cmp
std
lahf
stos
fsubrs
js
mov
jno
jb
mov
add
dec
sbb
mov
cld
and
lahf
push
imul
call
pop
popl
repnz
into
push
cmc
push
push
in
push
int
sub
out
cmp
dec
rcrb
stos
imul
cmp
dec
loop
dec
test
loopne
jo
int3
xor
mov
call
aam
in
add
jle
subb
cmp
les
and
jno
adc
call
jmp
mov
xor
jae
or
fcompl
jne
lea
push
inc
sbb
dec
adc
orb
dec
add
xor
clc
sbb
es
fldl
cltd
sub
jmp
xor
push
cmpsb
sbb
or
cmp
push
xchg
mov
shr
mov
or
stos
mov
test
xchg
sbbb
rcrb
jl
fs
lahf
lret
or
ret
adc
and
dec
xorb
cmp
cmp
lea
ret
jmp
lret
jbe
gs
inc
adc
or
sti
cmc
pop
stos
mov
sub
test
movsl
iret
daa
negl
sti
adc
inc
fstps
movsl
ja
popa
shll
sub
add
cwtl
mov
std
or
arpl
xor
cli
flds
div
das
in
cmpsl
pusha
lret
or
cmp
andl
mov
push
fs
sbb
loop
lods
ret
call
jg
lret
arpl
cmp
mov
insl
cli
adc
push
and
std
sub
add
lret
inc
rorb
jge
mov
loop
mov
hlt
ljmp
dec
movsl
fs
std
cmp
jp
outsl
mov
adc
inc
aas
call
inc
outsl
lcall
daa
in
daa
imul
imul
fnstcw
test
je
popl
iret
mov
sub
int3
xchg
mov
call
clc
and
jae
push
push
lcall
iret
pop
popa
gs
call
or
jmp
insb
mov
iret
mov
sub
pusha
add
dec
sub
roll
in
decl
int3
stos
nop
mov
lahf
sub
out
lock
dec
int
mov
pop
jmp
leave
and
pop
or
jo
mov
xchg
cli
popf
into
sbb
jo
xor
lds
xor
mov
aad
gs
dec
jmp
add
xchg
xor
and
daa
xor
mov
cmp
lods
jb
sbb
adc
cmp
cmp
xor
xchg
mov
and
aas
sbb
stc
jbe
fnstsw
test
dec
xchg
cmc
sub
inc
push
dec
sahf
sub
jnp
jp
inc
xor
enter
and
outsl
cli
mov
call
xor
popa
mov
mov
inc
xchg
in
mov
add
xor
fisttpll
push
sbb
fildl
popa
mov
xchg
mov
mull
mov
sub
repnz
or
fwait
lcall
cmp
sarl
pushf
push
call
cmp
jno
mov
lock
jmp
mov
cmp
add
test
jo
je
or
jne
or
sbb
or
call
mov
addb
lcall
cmp
jno
jno
es
cmc
mov
adc
loopne
lods
xor
lcall
add
aad
lret
rorb
data16
jbe
ret
mov
cli
lahf
imul
rcrl
insl
in
enter
aas
addr16
int3
and
or
xorb
cmc
xchg
pop
add
mov
adc
xor
mov
push
scas
int3
mov
cs
in
iret
arpl
orl
iret
pop
loop
xorb
push
stos
adc
jmp
test
notl
jecxz
mov
outsb
jbe
cmpsl
add
mov
cli
pusha
jmp
stos
push
int3
lods
loop
mov
sub
out
sub
fisttpl
cmpsl
add
xor
push
cld
add
dec
inc
push
decb
push
ja
mov
gs
cwtl
popa
mov
das
xor
popf
jbe
xorb
pushf
mov
mov
add
in
nop
pusha
push
stos
shll
push
jp
cltd
xchg
repnz
popf
sbb
jge
sbb
jle
cmpb
icebp
or
mov
dec
mov
sub
inc
or
inc
sahf
lods
and
push
sub
mov
inc
jnp
xchg
repnz
outsb
mov
bnd
cmpsl
repnz
xchg
adc
clc
adcb
mov
mov
xchg
mov
stos
xchg
addr16
loop
cmc
push
pop
stc
sub
sbb
xlat
inc
and
insb
lods
lahf
dec
ret
jmp
adc
dec
clc
or
andb
mov
inc
ret
xor
jge
jmp
push
xchg
inc
pushf
xor
dec
rorb
jno
mov
xorl
mov
popa
idivl
pusha
push
sbb
dec
xor
and
dec
enter
push
bnd
add
enter
push
out
pop
mov
dec
std
fwait
mov
xchg
insl
shrb
jmp
sub
sbb
fsubrl
dec
mov
int3
sbb
out
loop
mov
push
mov
push
push
add
or
mov
and
cmpl
mov
pushf
orb
jns
repnz
movsb
cwtl
inc
jno
and
cmc
icebp
jo
sub
adc
or
jb
outsb
gs
fists
or
jg
test
pop
hlt
aaa
or
enter
mov
cwtl
in
jg
sarb
or
jo
cmp
outsb
xchg
int
int3
sub
leave
or
das
enter
jp
jmp
or
xchg
mov
xor
ret
xor
pop
pusha
mov
xor
mov
dec
je
popa
cmpsl
push
shll
add
add
push
mov
cs
cwtl
mov
sbb
std
dec
lahf
call
in
xchg
jo
sub
mov
pusha
or
ja
xchg
cmp
je
mov
or
dec
mov
jmp
daa
and
mov
add
movsl
sbb
inc
lahf
xlat
sahf
inc
icebp
pop
fwait
iret
jmp
adc
inc
pop
cli
std
mov
fcomps
or
lret
add
fidivs
addl
add
cmp
call
or
jl
movsb
das
mov
cmp
adc
xchg
imull
jmp
cmp
fstl
and
push
sub
mov
lahf
arpl
ret
push
pop
mov
popf
sbbb
cmpb
dec
rcll
mov
inc
stos
cmp
sbb
inc
sub
jne
or
jo
sbb
and
pop
push
jns
push
push
jmp
push
data16
addr16
daa
pusha
push
int3
inc
sub
inc
add
popl
mov
daa
push
testb
mov
pop
hlt
ljmp
mov
shll
fcompl
std
mov
lods
inc
dec
and
jle
mov
lods
out
ja
pop
xchg
push
push
inc
xchg
adc
xchg
mov
adc
dec
push
popf
add
push
icebp
call
mov
mov
pop
push
cs
ret
push
mov
dec
aam
add
call
push
mov
shlb
std
mov
sub
sbb
lret
jne
push
or
mov
in
push
pop
dec
push
scas
mov
or
push
mov
add
out
xchg
jmp
add
outsb
mov
xchg
ffreep
cmp
and
adc
pusha
cmp
push
cwtl
mov
or
xchg
or
in
popf
icebp
add
jnp
or
fdivr
jbe
dec
fdivrl
jmp
mov
in
out
ljmp
mov
fistps
adc
lods
jle
nop
int
jg
push
push
jnp
nop
xchg
mov
cmpsb
inc
push
jb
dec
aas
loopne
cmp
pop
or
inc
xor
cmpsl
push
pop
call
inc
adc
sub
xchg
int
out
cli
mov
js
std
nop
ljmp
shl
jns
inc
pop
shlb
mov
jo
fstl
lret
cmc
jecxz
or
divb
adc
pop
jg
sub
push
mov
mov
push
cmc
out
push
push
and
mov
rcrl
test
rcrl
call
jo
mov
sbb
rcl
jno
cmp
call
repnz
xchg
push
cli
or
xchg
or
xor
mov
aas
push
ret
stc
pop
shrb
call
xchg
or
mov
or
xlat
mov
call
and
pop
xor
mov
add
shr
push
mov
xchg
jmp
test
mov
xchg
or
in
and
leave
mov
xchg
mov
icebp
mov
mulb
rclb
mov
pop
subl
mov
sti
rcr
shlb
mov
cmp
aad
lahf
mov
int3
cli
movsb
loopne
jmp
pop
pop
std
mov
pop
xor
leave
inc
arpl
jle
sub
or
jb
mov
pop
dec
xor
jmp
repnz
paddusb
add
fmulp
in
push
mov
push
cli
push
cmp
or
jmp
call
xor
lods
pusha
push
popf
fs
orl
ficompl
jae
mov
cld
ud1
add
sub
xor
jmp
repz
sbb
icebp
popf
ret
das
push
xor
pushf
push
or
test
lea
fsub
mov
inc
push
call
xchg
hlt
addl
pop
cmp
mov
pop
call
lret
fimull
call
movsl
pusha
ljmp
inc
out
pop
or
jmp
iret
lret
loop
leave
dec
cmp
sti
sbb
daa
outsb
inc
ja
sti
inc
jb
xchg
fstl
mov
dec
sti
or
ds
lahf
stos
fstl
popf
xchg
push
call
imull
ljmp
jo
std
and
popl
pop
and
mov
sbb
push
cmpsb
testb
ja
push
push
push
loop
add
mov
and
out
jne
fdivrs
daa
inc
dec
pop
inc
push
dec
mov
pop
stc
lea
xchg
or
out
and
in
xor
outsb
imul
adc
gs
pop
adc
push
sub
cmpsb
xor
mov
push
cmp
push
add
adc
cmp
shl
out
or
xor
aam
inc
push
js
daa
jnp
xchg
popa
adc
mov
sbb
ljmp
dec
in
cs
xor
adc
adc
sbb
and
mov
das
sub
dec
cmpsl
aad
pop
xchg
or
les
test
push
enter
and
aad
xor
xlat
cmpsl
pop
cmp
or
lret
int3
mov
repnz
dec
jnp
and
in
movsb
jecxz
and
sbb
or
jb
movsl
mov
fcomip
and
cmp
leave
nop
hlt
push
cld
cmp
mov
sbb
mov
popf
mov
fisttps
lcall
daa
xchg
push
subb
repnz
lahf
mov
loopne
ret
outsb
sub
pop
les
jmp
loop
pop
mov
rcrl
push
test
jns
adc
cmp
push
mov
sahf
push
fldenv
out
xor
call
aaa
filds
mov
mov
shr
fs
adc
mov
push
pop
inc
pop
aaa
enter
sub
stos
and
cmc
daa
and
xchg
xlat
in
aaa
ss
sub
das
mov
negl
movsl
push
fstpl
dec
xchg
pop
or
cmc
jmp
dec
pop
sub
mov
pop
and
adc
and
dec
enter
push
jmp
push
xor
ljmp
or
inc
aas
pop
push
mov
inc
in
and
mov
pop
and
or
mov
pop
daa
and
jmp
mov
push
add
push
or
mov
andb
or
sar
mov
arpl
xor
pop
inc
pop
roll
out
sbb
or
jmp
shl
or
cmp
or
popf
jo
pop
sub
scas
ljmp
sub
add
mov
rorl
xlat
sbb
int3
popa
jmp
push
push
loop
dec
lock
mov
fisubrl
loop
push
movsl
cmp
pop
mov
mov
popa
hlt
xchg
fsubs
scas
cwtl
std
xchg
int
jne
mov
in
clc
jp
iret
mov
das
cmp
push
lods
lea
sbb
inc
jge
pop
lds
sub
xor
shr
cmp
mov
add
or
add
xchg
mov
cwtl
xchg
ficoml
movsb
xor
sbb
pop
rcrl
jns
cmpsb
pop
repnz
mov
icebp
sti
push
and
push
test
dec
add
mov
sub
outsl
pop
or
fbld
pop
movsb
insl
je
push
mov
mov
into
jge
andl
fsubrl
shrl
out
mov
jge
push
cltd
jbe
xor
sbb
dec
xchg
add
mov
sub
ljmp
cmpsb
inc
ljmp
inc
or
cmpsb
jl
mov
or
adc
fwait
jo
cmp
sub
push
aad
outsl
repz
and
call
xchg
into
jge
fs
mov
push
fcompl
mov
mov
pop
and
repz
or
sub
in
je
inc
pop
mov
movsl
test
popa
out
push
jbe
pop
add
push
xor
jg
push
ljmp
xlat
stc
jae
addb
mov
jnp
xchg
ret
je,pt
lcall
out
mov
lods
clc
mov
jns
rcr
push
jno
mov
xor
inc
retw
popf
mov
lret
add
push
sbb
mov
xchg
pushl
std
jne
or
mov
hlt
inc
das
dec
mov
hlt
push
orb
aaa
pop
movsl
pop
ja
and
pop
shlb
inc
push
mov
daa
mov
cmp
mov
lea
push
mov
addr16
repnz
mov
cmp
sub
aaa
mov
or
cmpsl
outsl
jo
insb
mov
xor
inc
dec
cmpsb
xor
popf
int
add
dec
sub
pop
mov
jb
leave
jns
sarb
pop
inc
cmpsb
shlb
ret
mov
xor
or
out
fsqrt
aas
cmp
sbb
leave
pop
mov
addr16
orb
jno
push
es
loopne
mov
jmp
mov
pop
mov
loop
add
inc
push
mov
adcb
std
call
cs
add
push
lods
sub
in
pop
pop
push
cmp
dec
mov
mov
shr
inc
jl
inc
repnz
pop
outsl
pop
incb
push
pop
xchg
fwait
mov
pop
stos
outsl
movsb
xchg
mov
jl
mov
push
sub
std
call
mov
mov
call
cmp
fdivrl
push
inc
pop
mov
or
and
mov
aad
pop
xchg
sbb
push
stos
or
cmpsl
das
push
mov
sbb
lahf
push
sbb
add
fisttps
test
cmpsl
scas
call
lea
add
loop
push
rcrl
xchg
sarb
or
cmp
mov
das
xchg
adc
mov
les
xchg
mov
mov
int
aam
pusha
imul
push
cmp
adc
test
andl
jle
add
cmpsb
mov
xchg
fidivrs
out
sub
lock
out
inc
repnz
adc
lahf
pop
fdivrs
mov
dec
out
dec
cwtl
xchg
sub
sahf
adc
and
aad
rorl
push
movsl
add
inc
sbb
fsts
mov
pop
inc
rclb
data16
int
ss
dec
movsl
pop
mov
aaa
jbe
mov
xor
das
sbb
mov
xchg
pop
cltd
movsl
rorb
shl
push
or
dec
and
or
call
roll
cwtl
jmp
lcall
jg
mov
pop
push
dec
dec
inc
inc
xor
hlt
mov
sbb
daa
sub
ror
xchg
jb
pop
out
dec
push
mov
add
repnz
stos
add
jno
sbbb
aaa
test
xchg
pop
push
outsl
inc
mov
pop
and
push
loope
shrb
fld
mov
lcall
mov
mov
pop
stos
adc
stos
mov
inc
adc
sub
cs
into
sub
daa
pop
or
dec
sub
inc
adc
xor
in
add
xor
inc
mov
jmp
pop
sarb
out
mov
sarb
or
mov
xlat
or
jmp
aam
call
dec
mov
out
test
adc
inc
mov
mov
pusha
add
call
mov
imul
fcompl
push
shr
mov
clc
idivb
inc
imul
sysexit
inc
test
jmp
pop
jae
jp
clc
pop
ret
imulb
test
orb
or
lods
or
dec
pop
adc
daa
ljmp
test
fstl
jp
das
or
hlt
dec
insl
add
push
dec
roll
xor
xor
jge
sub
and
call
mov
ss
fmulp
movsb
cs
outsl
leave
xchg
cmp
jmp
sbb
inc
mov
cli
jge
push
push
in
xor
add
mov
jmp
mov
pop
xorb
out
xchg
mov
cmpsl
and
orb
mov
adc
or
inc
das
adc
mov
or
mov
call
xchg
mov
mov
dec
lods
scas
insb
xor
xchg
int3
sbb
movsl
fldl
popa
push
push
mov
jne
jl
jecxz
or
mov
push
mov
stos
dec
ljmp
cmc
repz
pusha
out
push
xor
inc
xchg
inc
dec
add
repnz
inc
std
adc
sti
jmp
xor
mov
clc
or
push
push
inc
in
push
and
test
popf
inc
xchg
or
mov
pop
orb
sbb
cltd
shll
and
dec
and
icebp
sbb
jnp
mov
or
aaa
pop
jl
in
mov
inc
adc
jns
mov
pop
adc
jp
and
cmp
inc
fmull
out
rcrb
inc
mov
and
das
or
or
adc
pop
repz
lea
inc
stos
mov
inc
sub
test
lods
hlt
sbb
nop
push
push
or
lret
mov
pusha
or
mov
jbe
pop
cmp
mov
add
addb
les
daa
cmp
and
mov
imul
jne
pushf
jg
mov
aas
andb
xchg
xchg
mov
sar
sub
cmp
pop
mov
mull
cmp
xor
jb
push
cmp
adc
lcall
xchg
mov
add
movsb
dec
pop
and
inc
icebp
fisubl
cmp
lea
ret
rorb
mov
pop
aas
sti
or
loope
pushf
mov
xor
jno
jl
push
daa
rcll
icebp
jns
ret
sub
sub
mov
les
cli
mov
dec
adc
sub
pop
fdivrl
xchg
cltd
es
stc
sub
outsl
push
repz
test
jge
inc
adc
call
ja
aad
pushf
iret
sub
sbb
orb
jmp
add
and
les
repnz
xchg
addl
rolb
sbb
mov
pop
call
orb
push
movsb
dec
jb
mov
or
inc
mov
jle
sbb
fmul
ud0
push
shlb
sub
scas
push
daa
push
sbb
or
push
mov
enter
jmp
enter
test
pop
jbe
roll
inc
pop
inc
inc
out
and
ja
xor
and
enter
cmp
test
mov
push
mov
xchg
adc
icebp
push
and
sbb
movsl
mov
mov
sbb
ss
stc
call
cmpsl
cmp
cmpsl
mov
stos
mov
dec
adc
cli
mov
shrl
pushl
dec
in
push
mov
dec
or
cmpsl
pop
jmp
imul
mov
inc
fdivl
in
push
push
scas
cmpsl
sub
mov
sbb
dec
mov
insl
pusha
and
jmp
stc
loop
inc
aam
in
lea
jno
push
repnz
mov
out
xchg
or
sub
ficoms
fnsave
add
pop
test
popf
test
or
add
fcomps
js
and
mov
lahf
je
jmp
pop
xor
aas
push
adc
inc
jmp
data16
mov
push
orb
adc
in
push
inc
push
mov
into
lahf
jl
push
jne
test
sbb
int
outsl
mov
fsub
xor
mov
pop
jmp
mov
pop
subl
mov
int
das
js
mov
push
bnd
jns
fcoml
jno
leave
xchg
jl
mov
sub
nop
dec
sub
cmc
mulb
push
dec
rolb
je
adc
pop
or
int3
mov
movsb
into
daa
jnp
jns
das
les
dec
sub
repz
jb
jmp
cmp
sub
push
fxch
dec
xchg
gs
jnp
pop
jge
jb
pop
mov
jb
push
mov
nop
lcall
stc
pop
sub
call
imull
add
insb
pop
sbb
test
xchg
gs
pop
mov
aam
xchg
xchg
data16
xchg
ja
inc
or
fidivrl
movsl
pop
xorb
jnp
mov
xlat
orb
cmpsl
mov
call
xorb
cmc
mov
in
sub
add
jmp
lock
lock
int
push
push
enter
or
pop
mov
call
pop
jb
repz
lcall
enter
xlat
jb
call
fmull
mov
sti
mov
sahf
ja
dec
fs
pop
mov
lcall
push
fwait
push
adc
dec
push
aad
push
aam
mov
int3
fiadds
clc
int
into
iret
pop
cmc
cld
sbb
jns
jno
js
inc
sbb
mov
and
mov
cltd
int3
xchg
in
or
mov
inc
testb
addr16
fsubrp
and
mov
push
sbb
mov
lods
add
or
push
out
sbb
jne
sub
xchg
mov
push
inc
shll
or
ret
mov
xchg
cmp
fistps
addb
in
mov
dec
or
call
mov
add
aad
inc
pop
jl
push
add
jne
pusha
leave
pop
mov
push
jmp
pop
or
adc
cmp
mov
mov
jl
pop
xchg
imul
sub
ret
xor
mov
mov
mov
pop
or
in
fldl
xchg
into
sahf
mov
xor
add
inc
jg
dec
pop
xchg
inc
sub
sti
outsb
mov
sbb
pop
call
enter
fbstp
or
ret
mov
xchg
mov
adc
lea
mov
or
loopne
ljmp
rcrb
lret
or
xchg
mov
aam
or
mov
in
push
in
sub
pop
cwtl
xlat
xchg
push
popf
lahf
fcompl
inc
jmp
frstor
mov
push
add
jnp
cwtl
mov
rclb
in
xor
adc
cvtps2pi
cmp
adc
rdpmc
insb
cmp
out
je
sub
test
daa
aas
mov
mov
xorb
sub
dec
sub
in
test
cmpl
xchg
call
repz
push
stc
aaa
mov
pop
sub
xor
negl
shrl
mov
call
mov
mov
and
cmp
fcompl
enter
push
sbb
mov
movsb
mov
mov
lods
aaa
cwtl
add
stos
mov
pop
scas
ret
adc
push
adc
xor
js
test
popf
add
ret
lahf
filds
pop
sub
filds
inc
call
orl
sbb
lahf
add
cmpsl
jae
mov
pop
into
das
xchg
fptan
push
or
ja
or
cmc
ret
pop
andb
xlat
stc
inc
push
inc
jp
sub
xor
jno
push
cli
sbb
ds
lret
rcrb
loop
sub
push
out
faddl
push
pop
stos
and
and
mov
test
and
test
push
in
call
xchg
xchg
push
sub
or
sbb
mov
outsl
or
pusha
enter
ds
icebp
and
push
cmp
jne
dec
pop
imull
sti
int
mov
or
call
lds
loope
add
dec
sbb
sti
xchg
or
pop
int
mov
pop
dec
movsb
sbb
push
xorl
data16
fs
mov
out
bound
pop
cltd
scas
push
lock
xlat
call
cmpb
das
pop
xor
jae
push
mov
xchg
and
pop
jb
mov
lret
xchg
pop
hlt
mov
loop
repz
scas
xchg
adcl
dec
lret
xchg
testl
mov
mov
in
in
sub
test
inc
and
inc
enter
int3
dec
or
scas
ret
test
add
rcrb
xchg
jle
dec
add
cli
hlt
testl
mul
gs
ja
arpl
sub
or
push
out
sub
aam
xchg
inc
jmp
stc
decb
das
push
inc
mov
mov
push
pop
or
dec
dec
sarb
xor
stc
jmp
xor
jmp
mov
jno
cmp
sbb
in
bswap
mov
mov
xchg
or
loop
pop
jbe
cmpsb
jns
subb
leave
aaa
adc
mov
mov
mov
jle
decb
cmpsl
or
mov
rolb
sbb
mov
cld
mov
pop
dec
xor
lcall
aaa
cwtl
mov
call
cwtl
scas
jmp
push
popa
dec
sub
mov
or
movsl
ljmp
xor
clc
and
insl
sbb
fisubl
dec
cli
ss
pop
mov
sub
mov
in
inc
xchg
mov
fisttps
mov
stos
dec
adc
call
push
mulb
mov
mov
lods
loopne
mov
sbb
call
push
or
cltd
mov
call
or
fs
mov
pop
dec
pop
mov
jo
sbb
ret
sub
pushf
stos
or
push
xorb
push
add
xchg
sbb
pop
jne
in
mov
lahf
pop
dec
mov
inc
in
xchg
in
adc
fmuls
test
movsl
int
sub
clc
or
mov
ret
xlat
cltd
scas
mov
sub
push
movsb
mov
sub
cmc
scas
jb
mov
and
push
and
sub
mov
scas
clc
push
testl
call
fmull
push
sbb
int
jmp
decl
push
jmp
cs
or
mov
adc
adc
in
xchg
fstpl
ret
fbstp
jns
xchg
mov
xchg
sbb
lahf
jg
jbe
jne
mov
in
push
push
dec
arpl
aas
nop
xor
pop
das
jg
inc
push
add
or
lret
jo
out
add
imul
gs
repnz
lcall
jns
or
fmul
push
movsl
mov
loopne
cmp
aad
orl
std
jp
ret
fwait
push
push
lret
jge
test
call
add
inc
mulb
sub
sbb
mov
xor
sbb
test
dec
fsubrs
mov
ljmp
inc
add
push
or
inc
jo
push
mov
pop
ja
xor
fiaddl
cmpsb
test
add
stc
sub
mov
pop
or
jb
mulb
lea
lahf
inc
mov
js
inc
fwait
mov
add
add
mov
or
pop
adc
sub
mov
cli
cld
push
inc
or
xor
xchg
jo
jmp
mov
ffreep
push
dec
pop
mov
mov
xchg
daa
arpl
dec
jnp
mov
in
lea
jmp
call
mov
rsm
loop
push
inc
dec
pop
jo
mov
es
push
jne
call
popf
pop
dec
xor
jecxz
out
dec
clc
ja
call
leave
inc
cmp
jmp
jb
cmp
xchg
adc
movb
and
xor
scas
jmp
add
add
inc
movaps
cmp
ds
lods
icebp
iret
icebp
js
sbbb
call
pop
popf
pop
fdivs
and
mov
xor
fs
adc
les
and
cmp
push
mov
jmp
mov
xchg
in
stc
mov
icebp
test
lea
ljmp
clc
lods
lea
jge
push
lahf
pop
pushf
xchg
mov
pop
jne
jo
adc
mov
xchg
and
in
mov
mov
jl
in
inc
lahf
add
cli
jl
cli
test
cmp
shlb
sarb
cli
outsb
mov
fnstenv
loop
inc
ret
in
and
sbb
cltd
bound
hlt
mov
add
mov
hlt
xchg
scas
and
or
sub
stos
movsb
insb
outsb
xchg
iret
mov
jge
rol
mov
call
into
and
popa
or
bound
js
jl
and
push
mov
mov
mov
icebp
push
pop
cmp
or
sub
leave
rcl
jmp
les
test
insb
insl
test
cmp
push
icebp
add
ret
pop
jecxz
out
loope
dec
mov
or
repz
lods
sbb
or
dec
sbb
call
or
addr16
mov
pop
mov
out
push
cltd
or
adc
inc
xor
out
cmpsl
sbb
ja
mov
call
pop
test
inc
ja
and
add
push
aad
pop
adc
jno
dec
adc
dec
xor
mov
cli
sbb
fwait
mov
add
sub
and
daa
cmp
push
fsubs
dec
repz
inc
sbb
mov
ds
dec
adc
insb
xlat
cld
outsb
jmp
out
das
ljmp
sub
sub
shrb
ficomps
in
rcrl
out
cmpsb
sub
inc
inc
push
stos
inc
call
les
mov
mov
scas
inc
in
cmp
out
cmp
push
mov
cmc
sub
ja
jmp
inc
xchg
les
inc
pop
adc
inc
popl
imul
lret
lret
pop
ja
or
push
sbbb
out
ds
int3
shrl
rcrl
pop
dec
xchg
nop
mov
mov
int3
enter
icebp
jl
inc
call
ja
cmp
call
enter
xchg
rolb
mov
mov
adc
imul
lret
rclb
lahf
xor
push
ljmp
cwtl
iret
sbbb
pop
fidivrs
and
xor
lods
mov
xor
push
mov
mov
mov
adc
leave
xchg
sub
sub
stc
repz
sahf
mov
stos
dec
shll
out
pusha
stos
inc
xchg
mov
call
pusha
jge
xchg
sub
neg
mov
mov
jb
fwait
or
pop
jg
cmp
cltd
add
enter
pop
in
sub
mov
mov
js
repnz
pop
mov
in
jmp
sbb
int
shr
inc
rcl
das
icebp
lcall
jl
int3
push
imul
in
out
push
jns
add
jmp
push
and
imul
and
mull
fisubrs
add
in
push
adc
sbb
fs
out
xchg
ret
xchg
adc
and
xor
ror
call
dec
xor
decl
fmull
mov
cmp
sub
jmp
jb
xchg
jge
test
lret
scas
shll
adc
loope
sarb
cmp
inc
xorl
je
xor
xchg
mov
lea
test
or
sti
ja
sub
pop
cmp
ret
dec
xor
jb
or
addr16
out
aaa
lahf
orl
outsl
jae
xchg
imulb
and
cld
andb
popf
mov
jmp
aaa
lret
xchg
les
mov
push
nop
or
mov
pop
xchg
mov
jno
lods
push
add
push
or
dec
add
mov
xorl
or
jns
push
outsl
pushf
add
jno
ret
or
frstor
sbb
or
or
ret
call
adc
xor
push
insb
popfw
jl
xchg
adc
or
aam
mov
cli
mov
pop
dec
push
cmpsl
leave
stc
and
push
leave
inc
jo
int
mov
fs
adc
push
clc
ja
cmpsb
lret
add
adc
add
imul
jbe
sbbb
shlb
in
and
dec
ss
fdivl
icebp
insl
pop
shl
es
jo
jmp
xchg
pop
cmp
adc
inc
pop
mov
adc
add
jg
inc
cs
imul
push
jns
add
out
hlt
imul
and
jmp
je
and
xorb
pop
push
std
call
mov
xlat
inc
push
sbb
in
fucomp
cmp
add
xor
push
out
push
pop
or
cmp
jne
sbb
jmp
adc
inc
or
jmp
jb
jae
aad
stos
movsl
sbb
imul
call
pop
sub
mov
shlb
mov
mov
cwtl
imul
popf
leave
xchg
pop
inc
popa
ljmp
setb
dec
cwtl
sbbl
ljmp
jo
js
or
add
or
jg
jle
mov
mov
jmp
mov
ja
dec
sbbb
repz
or
mov
ja
subb
stos
repz
mov
repz
pop
call
jmp
cld
jp
mov
pop
sub
pop
mov
adc
test
out
dec
pop
fwait
mov
pop
jno
bnd
mov
test
xchg
sahf
inc
jnp
lock
mov
or
mov
push
jmp
stos
push
push
addr16
xchg
inc
jne
shl
imul
fidivrs
shrb
inc
inc
mov
shlb
nop
fdivr
aas
xchg
fs
pop
call
inc
movsl
out
jp
mov
xchg
pop
xor
icebp
stos
movsb
mov
mov
sub
push
movsb
daa
ret
sub
sti
mov
pop
push
or
cmpsl
fdivr
push
jmp
dec
popa
test
icebp
push
lahf
outsl
stos
lock
cli
jbe
pop
mov
std
or
push
pop
dec
ret
add
mov
push
popa
enter
imul
decb
inc
cmp
rcll
sti
mov
dec
test
push
lds
int3
repz
das
in
flds
jne
or
enter
push
addb
loop
or
call
enter
mov
adcb
push
mov
jge
and
and
iret
push
mov
cs
das
je
pop
xchg
sahf
lcall
jg
ficomps
mov
movsl
mov
inc
int3
dec
jmp
push
and
ret
repnz
mov
adc
sbbl
test
mov
mov
sbb
ss
jae
cmp
test
mov
and
push
jg
push
push
push
push
xlat
inc
xor
xor
loopne
add
xchg
repz
mov
and
sbb
fldcw
mov
insl
shll
popa
es
int
push
jo
inc
scas
or
add
cmp
iret
ljmp
or
aas
cs
loopne
stc
dec
call
loopne
leave
popf
pop
xchg
cmovg
fwait
pop
nop
inc
push
inc
call
pop
test
pop
movsl
push
inc
loope
sbb
or
jmp
cwtl
xor
pop
push
outsl
jne
add
jo
push
imul
xor
lds
jo
lret
jae
mulb
xor
push
xchg
loope
mov
add
dec
out
test
add
insb
jnp
loop
add
mov
les
mov
mov
fisttps
das
push
jnp
add
popf
push
subb
movsl
jg
mov
stos
fwait
int3
add
loope
jecxz
imul
test
inc
jg
or
nop
hlt
pop
das
mov
fsubp
ss
outsl
sbb
mov
jmpw
aad
dec
inc
pop
or
xchg
mov
or
inc
scas
gs
push
lds
xchg
jno
out
lret
loop
and
scas
xchg
add
mov
xor
and
mov
pop
sbb
sbb
mov
popf
inc
stos
inc
cld
push
das
jne
push
add
cmp
bound
hlt
iret
push
in
xchg
test
inc
imul
call
or
and
popf
push
or
inc
dec
mov
ljmp
jmp
imul
add
xor
lods
adc
jb
call
and
adcb
cmp
and
shll
lods
out
hlt
dec
shr
das
out
or
adcl
add
dec
adc
jmp
filds
inc
xchg
test
pop
push
sti
adc
movsl
or
orl
ret
or
out
loope
adcb
imul
outsb
mov
push
xor
cmp
mov
cmp
call
sbb
push
push
jmp
nop
test
pop
les
sub
rorl
sub
xchg
out
push
mov
in
icebp
arpl
push
insb
jo
dec
and
pop
ret
xchg
jl
and
rorb
mov
js
ljmp
jae
icebp
aam
and
std
adc
fdivr
mov
fstpl
ljmp
lea
inc
pop
add
xor
push
repnz
pop
jb
loopne
out
adcl
or
mov
out
inc
push
scas
call
xor
xor
cmc
sbb
xor
movl
mov
fcoml
jno
push
lret
cmp
mov
or
mov
in
adc
test
push
mov
call
clc
fs
mov
hlt
cwtl
add
loope
or
inc
cli
sub
push
inc
add
int3
cli
or
mov
jne
dec
or
insl
xchg
in
inc
jmp
mov
aam
out
or
sbb
into
xchg
add
arpl
dec
mov
cltd
xlat
dec
push
push
out
sbb
add
cmp
mov
jae
and
jbe
jge
or
fdiv
testl
fwait
sti
adc
jle
insb
movsl
sub
int3
arpl
mov
outsb
pop
cmp
dec
aad
mov
dec
inc
sub
loop
adc
and
in
cs
xor
mov
fcompl
jp
cmc
cmp
xor
push
push
pop
in
daa
pop
or
cld
data16
in
push
sub
scas
add
out
lds
aaa
in
fdivrp
adc
pop
pop
fldl2t
cmpsl
jbe
push
xchg
push
popf
push
inc
data16
adc
jno
add
sub
push
inc
mov
imul
xorl
jecxz
dec
pop
call
cmp
mov
lahf
popa
xchg
lahf
mov
or
insl
lods
mov
inc
inc
mov
sarl
xchg
push
cmp
call
dec
nop
inc
das
adc
cmp
push
jge
sbb
enter
movsl
aam
pushf
cld
mov
jbe
cs
or
aas
sbb
kandw
jns
and
leavew
mov
xor
jmp
add
add
xchg
insb
or
lahf
jne
xchg
jae
add
out
pop
sahf
mov
push
jae
into
ret
sub
icebp
mov
adc
fistps
sbb
loopne
ret
pushf
adc
leave
insl
mov
pop
loop
daa
mov
jb
out
aaa
push
adc
outsb
mov
sahf
xor
jecxz
pop
add
stos
cltd
shl
je
mov
pop
cmc
bnd
addb
adc
lcall
jns
and
mov
pop
xlat
cmp
mov
cmpsl
sub
rol
jmp
fisubrl
pop
sahf
push
xchg
and
mov
pop
pop
outsb
sbb
mov
jne
push
jmp
out
xor
call
inc
push
lods
hlt
or
add
push
sarb
cmpsl
or
cmp
mov
jmp
cwtl
mov
push
mov
in
push
test
fildll
sahf
cmp
sbb
aam
adc
lods
mov
jmp
lods
xor
pop
jo
sbb
push
sub
dec
movsl
sbb
mov
push
cld
mov
cmp
xor
jmp
jne
fdivrs
sub
lods
es
or
lods
pop
test
jmp
mov
or
xor
fs
fisttpl
xchg
int3
xchg
jecxz
stos
movsl
xor
dec
sbb
out
push
push
push
lods
and
mov
xchg
mov
pop
lcall
rorb
call
mov
push
mov
or
inc
cmpsl
mov
sbb
mov
mov
mov
push
or
loope
mov
faddl
add
call
ljmp
jno
push
dec
or
jnp
xchg
sbb
pop
fistpl
cwtl
cmp
jnp
es
inc
lods
pop
leave
pop
mov
mov
push
icebp
cmpsl
repz
xchg
adc
call
jae
and
ss
lods
insb
or
enter
ret
test
mov
add
dec
rorl
pop
mov
inc
cmp
aaa
das
push
movups
out
or
insb
xlat
push
addl
xchg
sbb
cmp
call
push
mov
clc
sub
cli
call
mov
testb
inc
mov
mov
in
mov
mov
mov
inc
or
jmp
dec
add
in
xor
and
adc
stos
subb
or
movsl
dec
pop
in
dec
repz
mov
mov
or
testb
mov
call
mov
add
pusha
xor
sbbb
jecxz
addr16
push
inc
mov
out
call
push
mov
dec
rcll
testl
mov
and
mov
or
lcall
jno
mov
xchg
push
cmp
sbb
xchg
or
pop
fmuls
pop
lahf
imul
movsb
cmp
mov
add
mov
ds
mov
enter
add
mov
cmp
std
ss
or
or
iret
pop
mov
xchg
mov
jae
repnz
fistl
mov
jg
xor
call
sbb
jae
out
xor
jmp
add
jmp
iret
dec
push
mov
pop
xor
inc
sbb
pusha
mov
popf
aam
jmp
fwait
cmp
push
jle
xor
dec
dec
daa
dec
sbbb
sub
mov
sbb
arpl
push
mov
xchg
mov
test
das
es
cmp
jae
mov
fsts
mov
xlat
rcrb
pop
dec
add
in
xchg
xor
cmp
jmp
push
inc
into
test
inc
xchg
push
adc
das
repz
xchg
xlat
imul
call
mov
mov
in
jecxz
das
xchg
insb
enter
lods
cli
push
out
pop
nop
push
mov
cmpl
or
arpl
out
fsub
lea
push
mov
or
pop
inc
jge
jmp
jmp
mov
into
mov
jp
fs
sbb
and
adc
std
push
xchg
leave
pop
jmp
jb
arpl
ja
das
jo
mov
xchg
insb
jb
inc
push
cmpb
lods
push
xchg
mov
inc
int3
inc
or
cs
aas
jbe
dec
mov
call
add
push
mov
sarb
jmp
test
and
mov
fsubl
jae
jmp
dec
push
sub
imul
mov
inc
sbbb
cmp
andl
adc
jge
das
pop
je
hlt
mov
xor
push
adc
xchg
add
psrlq
gs
ljmp
fcoms
ret
js
cmpb
outsl
les
adc
jb
add
popa
call
call
mov
xchg
pop
lods
pop
xchg
push
sarb
and
sub
inc
movsl
pushf
imulb
mov
jns
sahf
movsl
cli
les
aas
outsb
scas
lea
fiadds
push
mov
push
lcall
sbb
mov
mov
dec
xchg
sbb
sbb
shrl
loop
cmpb
add
mov
xchg
add
and
pusha
push
sarb
mov
push
movsl
enter
mov
adc
mov
sub
xchg
aad
push
pop
ss
pop
push
je
mov
sahf
repz
in
int
jmp
jns
xor
jns
in
int3
jb
add
adc
pop
inc
pop
push
adc
es
add
and
lcall
push
jg
shrl
aaa
fwait
hlt
call
ret
mov
jnp
mov
and
cli
jae
jle
lock
mov
dec
jecxz
pop
mov
mov
jbe
and
loopne
pop
mov
mov
popl
push
cmpsb
mov
in
xchg
dec
in
add
add
mov
sbb
mov
pop
xor
jbe
mov
repz
pop
mov
test
fsubr
sbb
in
push
lods
xor
imul
pop
cli
and
cmp
jnp
andps
and
xchg
cmp
scas
or
nop
popf
or
mov
out
gs
mov
sbbb
or
mov
pop
data16
jp
and
cli
and
sti
out
inc
cltd
repnz
cmp
or
and
or
inc
add
call
int3
cwtl
cmp
jg
jmp
or
idivl
xchg
in
andl
jns
lods
add
sbb
dec
xchg
mov
call
jbe
clc
push
xor
imul
add
data16
imul
push
jae
cmpsl
ljmp
push
sbb
and
mov
dec
push
fwait
jo
fsts
daa
mov
mov
je
jb
push
in
fbld
inc
add
cs
jbe
pop
call
in
movsl
in
dec
inc
add
out
pop
clc
rcll
call
pop
xor
sub
mov
or
iret
mov
call
add
dec
ja
out
push
clc
in
cld
pop
inc
dec
stos
jmp
aas
mov
fstps
arpl
jmp
xor
push
insl
inc
xchg
adc
dec
push
fisttps
popa
mov
pusha
jb
xchg
insb
je
push
incl
lahf
or
xor
and
cmpsb
das
mov
cmp
and
icebp
push
fistl
les
xchg
push
xor
mov
fsubrl
or
rcl
ljmp
pop
dec
call
cltd
or
jmp
insw
inc
or
mov
jg
sub
pop
jmp
arpl
mov
sbbb
push
dec
ljmp
enter
and
and
out
cmp
enter
mov
xchg
pop
xchg
mov
mov
jbe
pop
ljmp
xor
dec
mov
dec
push
jmp
js
iret
push
push
fxch
movsb
sbb
cs
stos
jb
mov
mov
adc
dec
test
dec
sub
sub
enter
fwait
mov
mov
mov
dec
lret
jne
adc
adc
sbbb
scas
jo
adc
sub
push
loopne
push
xchg
or
xchg
sub
pop
mov
aas
push
cmpsb
adc
mov
daa
aam
fadds
lods
fstl
fmull
mov
dec
adc
push
jmp
fsubs
xor
xchg
pop
inc
icebp
daa
pushf
movsb
mov
aad
push
adc
shrb
add
cmp
pop
scas
repnz
sbb
shl
and
cmp
mov
jg
pop
dec
mov
inc
nop
lret
cmp
push
add
jmp
int
mov
push
mov
test
popf
push
cmpsl
mov
sbb
push
clc
xor
mov
test
sahf
loop
das
xchg
popa
mov
pop
out
and
aad
sub
adc
inc
sub
pop
das
pop
mov
or
adc
std
jb
xor
adc
aad
ljmp
dec
inc
inc
in
shr
mov
imul
aad
inc
push
or
orb
mov
push
das
add
ret
inc
jo
pop
orb
add
popf
mov
jo
adc
insl
and
je
ror
mov
push
mov
or
jmp
jl
xchg
and
lahf
mov
loopne
cmp
adc
cmp
or
mov
adc
add
inc
fsubl
imul
cwtl
dec
sub
sub
add
or
pop
das
cmovns
int
xchg
xchg
neg
scas
mov
push
int3
das
push
mov
push
sub
xor
or
pop
insl
mov
in
scas
fmuls
pop
call
jne
mov
icebp
aam
inc
mov
std
adcb
jp,pn
or
insl
and
enter
hlt
rcll
outsb
add
dec
mov
mov
popf
mov
ret
loope
or
lret
imul
pop
inc
test
lds
repnz
jmp
cld
mov
mov
or
mov
cli
cmp
stos
test
and
xor
mov
push
xchg
imul
movsl
fucomip
mov
pushf
stos
pop
movsb
iret
das
cld
repz
ret
test
sbb
xor
jns
cmc
cwtl
push
imul
fadds
daa
in
dec
testb
pop
and
pop
push
or
gs
cli
and
xor
test
push
xor
jmp
push
and
cwtl
call
mov
pop
mov
push
stc
jo
loop
mov
mov
jg
and
or
jmp
insb
cmpsb
shlb
mov
jns
and
push
call
mov
adc
xor
dec
sti
push
mov
loope
enter
push
adcl
mov
incl
shrb
jmp
scas
add
neg
rorb
int
dec
adc
lods
push
xor
cmp
or
aam
test
jno
call
fsubrs
sahf
loope
push
shrl
jnp
movsl
jns
or
sub
cmpsb
xchg
sub
mov
and
cmc
mov
sbb
sub
xor
popa
scas
nop
mov
mov
int
pop
push
mov
dec
cmp
out
mov
xchg
push
cmpsl
jno
stc
insl
pop
mov
xor
sahf
jo
outsb
push
xchg
loopne
in
jo
xor
outsl
lds
lahf
icebp
dec
cmp
int
xchg
push
out
jp
xor
shlb
leave
xchg
daa
roll
cmp
sub
pop
leave
pop
add
aaa
cmp
outsb
cld
xchg
js
xchg
jge
fcomps
pop
mov
and
imul
andb
mov
and
repz
inc
add
rcr
les
sub
xlat
sbbb
subl
lea
jmp
add
or
ljmp
mov
pop
ja
aas
or
mov
int
mov
fists
not
pop
mov
push
xor
je
inc
or
xor
fucom
adc
mov
inc
sbb
jge
call
int3
out
lahf
or
sub
xchg
and
dec
les
push
xlat
lods
sbb
inc
pushf
cli
mov
mov
or
je
js
imul
pushf
add
loopne
call
test
dec
lods
inc
ss
mov
add
pushf
sbb
notb
push
pop
inc
cwtl
lret
aas
cmpsl
or
push
sub
jno
fs
xchg
or
or
mov
lret
xor
pop
adc
mov
pop
arpl
imul
push
mov
mov
xlat
movsl
aad
aad
add
cs
rorl
mov
or
fstpt
inc
stos
int
mov
add
xor
adc
mov
add
inc
xor
fcoms
mov
cs
push
into
and
xor
divl
stos
mov
cmpsb
mov
loopne
push
fs
mov
and
mov
js
push
cmpsb
insb
xlat
cs
mov
xchg
call
lea
xor
imul
cmpsl
xchg
aaa
divb
loope
dec
inc
nop
sbb
mov
pop
addl
in
mov
call
mov
lds
jecxz
lock
mov
sbb
or
sbb
aas
push
pop
fcoml
add
jmp
jno
cwtl
outsb
mov
mov
sub
or
lea
int3
pop
aam
mov
sub
push
lahf
dec
out
push
sub
mov
xchg
mov
dec
popf
add
shlb
inc
xchg
cwtl
jae
and
call
movsb
jno
fsub
xor
xor
call
cmpsb
jbe
sti
xchg
pop
dec
and
adc
mov
add
mov
loope
jecxz
mov
sbbl
dec
sub
sbb
jp
dec
jno
ret
fwait
mov
push
gs
cmpl
pop
and
jno
and
push
imul
pop
or
loopne
jb
ja
loope
mov
mov
inc
fisubrl
sbb
and
dec
repnz
xchg
inc
inc
jae
sub
mov
repnz
in
addb
jg
pop
adc
mov
fwait
adc
push
sub
fs
cmp
xlat
orb
pop
ljmp
lret
xchg
rorb
mov
fs
push
lahf
push
dec
lahf
push
jno
orb
xchg
ljmp
sub
or
or
pop
push
test
push
adc
call
fildl
jnp
push
cmpsl
lds
cmp
or
stos
mov
or
or
addr16
mov
adc
or
push
jp
ja
pop
pushf
xor
mov
jbe
insb
test
and
aam
cmpsl
movb
xchg
icebp
xchg
mov
mov
in
jo
pop
jae
mov
js
xchg
jo
daa
adc
lret
sub
cwtl
sub
mov
clc
lahf
cmp
fsubrp
cs
xchg
sbb
in
in
int3
fcomi
shll
pop
add
cmpsl
push
adc
add
mov
enter
mov
pop
and
inc
cmp
mov
fsts
nop
loopne
or
lea
into
jae
mov
lret
or
jmp
jecxz
or
or
fidivrl
xchg
int3
repz
mov
mov
fsubs
mov
arpl
cmpb
pusha
or
cmpsb
mov
inc
daa
call
xorb
mov
mov
test
mov
inc
add
push
xor
pop
mov
rcrl
loop
cs
loope
sbb
mov
cwtl
mov
testb
ret
mov
cmp
xchg
ds
push
mov
add
inc
and
imul
inc
out
fucom
stc
or
test
push
mov
fwait
fwait
push
sbb
cld
xchg
pop
cld
add
outsl
imulb
and
mov
repz
mov
or
mov
fldenv
xor
or
xchg
shll
or
jnp
pop
icebp
out
lret
mov
xchg
jno
mov
or
cmp
xor
push
push
lods
mov
call
push
mov
js
pop
rcrb
sbb
add
fsubrs
mov
jge
lret
popf
sub
lcall
add
and
popl
mov
mov
push
sub
imul
mov
xor
std
dec
mov
cwtl
add
mov
xchg
push
in
into
lahf
movsl
dec
push
lock
mov
jne
and
iret
in
test
or
push
loopne
jmp
cmp
popa
push
cltd
int
adc
das
and
mov
xor
mov
test
daa
loop
pop
enter
cmc
popf
icebp
testb
ss
push
mov
mov
in
sub
jno
xor
adc
add
jle
jne
lods
and
dec
inc
push
dec
fdivs
or
xlat
fnstcw
xchg
adc
in
jp
sbb
mov
cwtl
jb
mov
lds
enter
xlat
fisttpll
inc
pushf
sbb
pop
inc
insl
dec
mov
adc
xor
dec
dec
out
sbb
call
and
xchg
les
sbb
subl
repz
ja
pop
pop
andb
mov
push
xchg
pop
call
inc
call
or
call
add
push
or
mov
mov
or
leave
fwait
cmp
jge
out
jge
enter
adc
xlat
daa
mov
pop
sub
mov
push
test
push
pop
xor
and
push
push
mov
pushf
or
jnp
pop
mov
mov
pop
and
pop
mov
fstpl
stos
fdivl
call
pushf
push
sub
pop
stos
test
sub
loop
inc
lret
cmp
dec
stc
push
les
imul
notb
jae
test
add
mov
push
xchg
mov
pop
cmp
mov
jl
push
xchg
mov
mov
xlat
fs
push
movnti
outsb
lea
push
push
dec
xor
xor
das
jbe
int
cmp
or
dec
clc
cwtl
xor
or
xor
and
es
push
adcb
xchg
sub
inc
lret
mov
aad
or
adc
aaa
mov
cmpsb
lcall
pop
int
aas
inc
pop
and
stmxcsr
icebp
sbb
lods
lret
sahf
push
scas
dec
mov
and
dec
mov
mov
clc
ret
fsubrl
xor
xchg
cmp
popf
icebp
sbb
push
es
addr16
inc
test
add
mov
pop
push
ret
mov
call
lock
and
dec
xchg
mov
push
pop
xor
jbe
mov
push
or
aaa
inc
cmp
cld
sub
sub
mov
addr16
push
lock
push
outsb
mov
xchg
testb
je
or
test
mov
in
jno
push
subb
nop
pop
push
mov
stos
outsb
fimull
icebp
mov
lea
pop
add
mov
cmp
lea
aad
xchg
ljmp
inc
fidivrl
inc
addb
das
mov
sub
inc
cmp
pop
push
push
int
les
mov
sub
and
jno
fwait
inc
stc
pop
cmc
push
pusha
adc
push
jo
rcrb
push
call
mov
jno
pop
pop
cmp
sub
cli
xor
lea
push
jmp
lock
mov
out
adcb
sbb
pop
dec
or
mov
and
lcall
addb
sahf
dec
mov
mov
data16
xchg
stos
pop
testb
test
aaa
sbb
sarl
sti
sub
rolb
mov
addr16
out
jecxz
sbb
rclb
sti
and
jno
in
call
or
rclb
roll
out
dec
rorb
lahf
and
adc
pop
repz
cmpsl
mov
pop
fstpt
lahf
jo
push
xchg
out
mov
xchg
sub
sbb
insb
and
jmp
repnz
xchg
cs
scas
hlt
mov
add
adc
rcr
or
add
daa
sbb
leave
add
in
outsb
mov
push
adc
sti
mov
test
mov
jl
dec
lock
cwtl
xor
mov
cmpsl
jae
mov
and
xchg
xor
test
cs
xchg
in
dec
fnstsw
xchg
je
mov
lods
pop
out
cmp
sbb
add
dec
into
call
and
ss
icebp
loopne
mov
imul
iret
push
test
clc
pop
xlat
jb
mov
dec
cmc
into
dec
sub
dec
in
lahf
push
xorb
inc
dec
sub
test
jns
xchg
rclb
mov
imul
inc
mov
lods
sub
aaa
cli
lret
leave
pop
mov
nop
sbb
int3
in
adcl
add
cwtl
cmp
lods
jge
fdivl
or
leave
adc
fs
pop
add
adc
and
dec
pop
in
inc
add
add
hlt
sbb
mov
sub
pushf
jge
leave
fisttps
jo
xorb
push
repnz
fcomps
fistpll
add
enter
mov
nop
xchg
inc
push
inc
insl
das
push
xor
call
lret
dec
loopne
sahf
mov
stos
jb
dec
jge
inc
jp
cmpb
mov
aaa
sbb
sub
not
inc
pushf
int
orb
pop
xor
xchg
xchg
jno
sub
xchg
push
mov
or
test
xchg
call
lods
ja
sti
test
adc
jne
cltd
mov
ficomps
mov
mov
call
inc
mov
sub
dec
mov
jnp
add
push
test
shr
mov
pop
or
xchg
or
sbb
out
dec
test
push
loopne
push
add
mov
push
cmp
pop
shrl
mov
aaa
xchg
icebp
jg
clc
test
adc
jo
icebp
mov
scas
and
mov
sub
jg
mov
inc
push
or
adc
inc
popw
int
rorl
nop
pop
andb
lahf
add
push
sarb
cmpsb
mov
cltd
jno
inc
inc
dec
push
pop
mov
add
ja
cs
jmp
fs
push
int3
clc
mov
out
fwait
pop
inc
mov
push
add
outsl
icebp
das
fcom
icebp
ja
cmp
push
or
dec
testb
cmp
cld
or
popf
jg
mov
inc
testl
add
out
call
push
mov
int3
mov
es
and
es
ja
mov
ret
mov
xchg
aad
sbb
test
jge
jno
pop
jnp
xchg
mov
loop
and
insl
or
mov
and
sbb
insb
sub
add
dec
push
sbbb
push
lcall
fucom
pusha
inc
mov
xchg
insb
lea
call
xor
push
fs
out
popf
roll
std
out
mov
add
std
sub
dec
and
and
rorl
jmp
mov
aaa
xchg
sub
add
lea
xor
pop
dec
lods
adcl
push
push
dec
test
lret
add
push
icebp
xchg
mov
sub
mov
outsb
test
mov
or
call
push
xchg
stc
dec
mov
mov
mov
add
and
push
loopne
jne
fs
test
fildll
cltd
stos
lea
pop
call
xchg
scas
dec
push
test
dec
sub
push
loop
pop
sbb
test
and
rcrl
mov
sbb
movl
push
repnz
out
loop
daa
jmp
jne
pop
sub
sbb
in
arpl
pop
mov
pop
inc
mov
jb
imul
cmp
mov
xorb
repnz
sahf
and
push
fldl
inc
pop
in
push
gs
and
inc
pop
rorb
mov
sub
outsl
imul
mov
repz
repz
jecxz,pn
mov
sbb
cmc
sub
scas
cs
jb
jb
inc
xor
inc
adc
das
fmull
adc
jns
je
dec
fucomp
data16
loope
jbe
jb
xor
test
mov
cmpsl
inc
hlt
popl
cmp
in
inc
and
inc
mov
orb
mov
xor
add
bnd
push
call
or
jns
adc
leave
jmp
inc
ficompl
inc
icebp
test
xorb
push
subl
cmp
xor
jmp
sub
lock
jl
push
inc
pop
dec
xchg
mov
cltd
add
mov
pop
fstpl
lahf
int3
sbb
mov
xor
inc
out
cwtl
ljmp
mov
add
insl
cmp
movb
in
or
mov
movsl
mov
push
xor
inc
dec
bound
push
sub
pusha
fdivrs
in
pop
aaa
jp
popf
pop
xor
inc
lcall
or
shr
add
repnz
and
call
xchg
inc
popf
cmpsl
jle
pop
jl
rclb
je
sti
push
and
jmp
clc
mov
xchg
or
iret
stos
dec
fmul
aad
mov
push
repnz
add
lcall
mov
hlt
xchg
fisttpl
pop
jg
ss
aaa
mov
add
pop
mov
dec
lcall
add
jp
and
fisttps
xchg
loopne
xor
push
jge
sub
mov
imul
push
movsl
incb
call
andb
mov
ret
mov
pop
rorl
and
pop
cwtl
adc
sub
jbe
push
dec
xchg
jecxz
dec
cmpsb
adc
jmp
dec
in
inc
out
push
jmp
cmpsb
cmp
sti
icebp
lods
mov
stc
or
push
call
sbb
push
add
add
lcall
mov
test
pusha
sub
stos
movsl
inc
sub
or
enter
rolb
xor
jle
insl
xor
out
sub
xlat
jmp
mov
push
mov
add
mov
and
out
pop
add
fstps
rcll
inc
push
or
subl
jae
out
subb
and
loopne
outsl
fiaddl
xchg
xchg
inc
mov
mov
pop
or
push
push
xor
xchg
stc
ds
mov
mov
cltd
sbb
push
fcoms
repz
jnp
mov
jns
ret
fistpll
cld
push
shr
push
les
mov
jmp
jnp
adc
or
pop
in
mov
jmp
shrb
das
loopne
ret
xchg
cmp
inc
jmp
mov
test
and
lcall
mov
jmp
pop
mov
cmp
mov
mov
push
mov
xchg
pop
sbb
push
xor
ficomps
sub
cli
pop
in
mov
sahf
push
lock
int
adc
dec
lds
jl
nop
test
call
les
mov
hlt
jo
mov
inc
lcall
or
adc
sbb
or
adc
mov
lahf
decl
ds
xlat
push
adcb
icebp
inc
repnz
dec
loope
sub
dec
or
push
xlat
repnz
push
icebp
mov
shrb
fistpl
cmp
sub
adc
dec
mov
pop
mov
and
pop
sahf
mov
and
sti
xchg
test
loop
lock
int3
data16
xlat
add
mov
jo
push
pop
sub
roll
and
mov
out
jae
ljmp
mov
ja
fldl
dec
xor
push
add
and
sahf
inc
hlt
testb
les
mov
add
pop
mov
or
push
adc
sbb
jge
fdivs
js
sub
push
mov
xchg
and
subb
das
insb
pop
jae
jbe
pop
or
jecxz
dec
push
test
jge
pop
push
xor
flds
and
sbb
sub
mov
cli
aaa
jno
cld
dec
test
lcall
nop
and
add
cli
cmp
stos
xchg
or
add
inc
pop
les
insb
mov
movsb
mov
or
ret
cwtl
addb
call
pop
and
daa
jmp
jnp
jo
outsl
sbb
add
adc
add
xchg
cs
pop
lods
fisubs
test
pop
push
ljmp
xchg
dec
or
add
mov
cwtl
sbb
mov
call
push
or
or
loopne
sub
int3
cmp
les
push
pop
stos
sub
sub
mov
cwtl
int3
adc
push
jbe
mov
das
sbb
mov
add
add
ret
sbb
dec
dec
stos
out
dec
dec
or
sub
mov
inc
dec
shlb
mov
cmp
les
mov
ljmp
bound
inc
inc
sub
jb
imulb
xchg
int
dec
or
paddq
add
mov
test
mov
pushf
dec
test
jns
jb
das
fucomip
stos
xchg
xlat
dec
mov
scas
or
fsubr
adcb
aam
enter
test
jno
inc
mov
ss
and
xorl
call
add
leave
mov
jns
dec
repz
fadds
subb
scas
or
mov
jno
and
mov
cmpl
xchg
call
jmp
sub
push
push
sbb
ds
js
or
push
cmp
std
into
lods
movsb
outsb
sub
push
loop
pop
fisubrs
cmpsl
aaa
mov
aad
mov
jecxz
sub
add
push
insl
or
pop
push
daa
sub
sub
imul
dec
jmp
mov
pop
nop
mov
pop
test
iret
mov
in
pop
in
or
xchg
mov
jmp
pop
mov
ds
mov
mov
push
adc
pop
dec
jbe
jge
push
call
jge
or
xchg
or
inc
xor
mov
imul
add
xor
push
sub
out
or
inc
shl
das
arpl
jns
mov
aas
push
sub
jo
int3
or
stos
rcrl
or
mov
aaa
jmp
out
fucomip
pop
in
cld
sbb
xchg
in
add
cmpsb
adc
pop
ja
or
fs
repnz
ljmp
pop
push
dec
mov
ret
movsl
dec
cmpsl
scas
shll
push
rorb
mov
sub
shlb
jle
xor
or
xor
ja
push
mov
and
testl
and
xlat
sub
aas
dec
or
aaa
sarb
jo
test
rcrb
fmul
mov
sub
aam
push
test
dec
mov
les
jmp
aas
pop
adc
pop
addb
inc
fldl
add
into
rcrb
xor
clc
jle
es
mov
mov
xchg
loopne
inc
inc
xor
inc
mov
movsb
cmp
stos
push
pusha
mov
ds
push
lock
mov
adc
popl
test
mov
pop
push
into
loop
push
jmp
stos
mov
inc
insb
dec
pop
jge
repnz
add
xchg
fnstcw
xor
test
rorb
cli
push
add
xor
das
sbb
loop
cmp
shlb
or
or
das
fbstp
jbe
shrb
imul
ljmp
rol
ret
jns
in
add
xor
test
lods
imul
notb
mov
imul
pop
cwtl
push
sub
mov
rcll
inc
ret
mov
stos
std
nop
mov
jae
inc
adc
pop
jecxz
jb
pop
cmp
mulb
stos
xchg
mov
mov
sub
push
aaa
sub
popf
mov
mov
dec
loop
mov
push
push
fsubl
pop
icebp
pop
pop
call
addr16
mov
inc
lea
jmp
out
and
stc
mov
mov
ss
in
or
popf
mov
push
rcll
mov
dec
mov
movb
cmp
sub
imul
decl
mov
ds
mov
lock
cmpsl
xchg
mov
ret
mov
ljmp
and
add
push
xchg
jb
pop
fdiv
xchg
fistpl
jmp
jo
pop
inc
mov
sbb
ss
sub
sub
das
or
or
test
cli
rolb
test
sbb
adcb
adc
ljmp
jp
pop
cmp
dec
mov
call
push
pop
add
and
jecxz
mov
xlat
xor
pushf
mov
cmp
insl
pop
xor
insb
dec
mov
rcll
sub
jns
loop
loop
sbb
call
sbb
sarl
bnd
loop
inc
adcb
fistpll
lret
mov
lock
xchg
pop
hlt
or
inc
or
pop
xor
pop
repnz
xor
repnz
cmp
jg
fbld
jnp
mov
dec
pushf
jl
lret
inc
loopne
and
aam
stos
or
xlat
dec
pop
jp
xchg
adcb
mov
jns
push
out
dec
aaa
daa
sbb
sub
das
lods
xchg
pop
test
jle
in
adc
mov
lahf
sbb
fsubrl
mov
inc
sub
sub
sahf
ljmp
mov
mov
dec
dec
in
mov
arpl
ja
sub
or
cmp
inc
xor
jecxz
xchg
inc
call
sbb
fnstenv
loope
push
mull
jg
jbe
mov
inc
test
test
mov
inc
mov
popa
xor
cmp
lret
mov
inc
cmp
mov
setns
xchg
leave
xor
inc
pop
test
call
push
rcrb
lahf
outsl
enter
adc
mov
test
mov
jne
or
mov
add
adc
cs
xor
jno
cmp
rorb
xchg
cld
dec
mov
adc
cmp
sub
loope
xor
outsl
repnz
fdivrl
push
dec
push
daa
xchg
or
mov
maxps
cmp
dec
inc
fcom
ss
and
xor
loopne
or
outsl
aaa
int
lods
scas
pop
xchg
imulb
daa
cli
push
push
cmp
cwtl
mov
sub
jmp
xlat
dec
ret
mov
test
sbb
jne
movsb
loop
pop
call
inc
aad
cmpsl
fmul
ret
xrelease
add
and
loop
mov
add
pop
fisubs
xor
adc
sub
cmp
mov
dec
sub
comiss
je
xor
jo
jno
sbb
dec
lret
mov
loope
iret
jns
pop
xor
dec
adc
jo
repnz
fldl
jmp
sub
pop
mov
leave
call
xchg
mov
push
jmp
mov
cwtl
mov
rcl
mov
in
jl
xor
add
in
inc
in
sbb
inc
dec
sahf
in
shlb
loopne
pushf
sahf
or
mov
xchg
fdivr
mov
repnz
xor
adc
xor
mov
adc
sbb
sub
pusha
jae
pop
push
xchg
mulb
lock
aas
setg
jge
jnp
add
push
push
jne
pop
int3
out
adc
sahf
fnstsw
dec
clc
ljmp
sbb
int
push
ljmp
mov
lock
jnp
test
imul
add
sarl
push
inc
xor
mov
push
inc
std
dec
daa
ret
les
popa
push
test
sarl
push
jae
jnp
pop
pop
sub
xor
filds
or
call
jle
or
das
and
fsts
outsl
icebp
push
daa
jl
data16
orb
cmp
inc
cmp
xor
cmpsl
ljmp
jo
cld
or
dec
lcall
dec
sub
sti
les
sub
mov
mov
xchg
lock
mov
fcoms
mov
scas
jg
jo,pn
xchg
mov
dec
xor
push
xchg
add
mov
adc
daa
push
cmp
sub
cs
insl
jecxz
ret
incl
add
cmp
push
sbb
xchg
xlat
subb
mov
mov
clc
inc
repz
pop
add
xor
pop
bound
or
sub
mov
leave
sbb
addps
xor
xor
mov
xor
imul
inc
mov
sub
cli
pop
xor
fdivrs
xor
and
push
icebp
cmpsb
mov
mov
mov
pusha
adc
nopl
push
pop
sahf
or
repz
cld
mov
inc
outsl
fisttps
cld
jg
addl
cld
cwtl
pop
add
aaa
scas
pop
push
test
mov
xor
rorb
das
fmuls
cld
stos
pop
dec
cmpsb
add
sahf
sbb
loopne
stc
arpl
mov
sbb
jno
pop
mov
push
add
lret
mov
ss
jge
mov
scas
call
flds
hlt
sub
call
push
loope
aaa
incl
push
mov
mov
dec
push
pop
inc
push
sbb
jo
xchg
jge
xor
xchg
jae
xor
jmp
dec
xchg
fadd
sub
mov
out
pop
roll
pop
cmp
repz
sub
faddl
jle
xchg
xchg
subb
leave
lret
add
xchg
aas
dec
scas
push
dec
sub
jnp
das
jmp
cs
pop
aad
push
fsub
mov
repnz
dec
xchg
lock
inc
push
cwtl
jnp
mov
pop
mov
aam
lret
dec
dec
mov
mov
daa
xchg
push
cld
jmp
or
call
shrb
or
add
adc
sub
cmp
out
out
jno
fucomi
or
cmpsb
das
xor
insb
dec
push
in
push
sbb
cmc
sbbb
add
adc
push
sub
mov
dec
and
cmp
mov
fsubrs
dec
jp
stos
enter
imul
popa
sub
adc
push
push
jbe
sub
lcall
inc
mov
jmp
setg
mov
outsb
iret
cs
xchg
dec
lahf
inc
in
add
push
or
fiaddl
push
fld
mov
mov
jmp
fisttpl
sub
add
into
push
cmp
mov
dec
movsb
test
imul
mov
dec
scas
and
test
pop
mov
sub
cmpsl
sahf
stos
sub
cmp
push
add
arpl
rcrl
icebp
test
fcomps
mov
leave
xor
push
andb
pop
sahf
mov
es
enter
xchg
mov
mov
mov
mov
dec
pop
sub
jmp
aam
mov
xchg
enter
cmp
pop
or
dec
icebp
stc
cmpsl
cmp
ljmp
push
or
pop
push
repnz
bound
adc
cli
and
ja
inc
in
mov
cmp
cmpsb
test
clc
mov
mov
repnz
fldl
lock
sarb
jmp
add
pop
cltd
imul
sahf
call
cmpsl
push
xchg
push
adcb
add
mov
mov
jl
outsl
mov
lea
mov
or
pop
pop
xchg
jmp
stos
out
pop
popa
xor
ret
test
mov
repz
and
xchg
cwtl
cmpb
pushf
shr
cmc
inc
addr16
jecxz
ljmp
jb
lcall
sub
test
imul
repnz
sbb
adc
in
in
in
push
jbe
les
mov
test
ss
cwtl
xchg
adcb
fcompl
cmp
int3
adc
push
loopne
pusha
jbe
fnsave
jne
mov
pop
push
out
push
inc
outsb
and
fmull
or
fcmovne
mov
daa
ds
push
jecxz
inc
ljmp
add
pusha
or
in
hlt
sbb
repnz
or
lcall
and
dec
mov
or
dec
or
les
add
rcrb
or
xor
push
mov
inc
or
daa
inc
mov
out
lcall
jl
negl
lods
lahf
sbb
dec
mov
pop
jbe
lea
repnz
mov
fidivs
scas
ljmp
and
xchg
adc
dec
inc
jp
in
or
or
xor
xor
jne
push
cmp
stos
popf
jo
mov
jge
fidivrs
jae
add
push
jno
std
scas
sub
mov
push
fistps
push
jmp
repz
pop
call
fwait
mov
mov
or
lea
nop
inc
repz
or
or
sbb
mov
popf
or
shll
pop
push
xor
call
mov
mov
cmp
mov
daa
scas
cmp
jg
push
jmp
push
xchg
dec
in
inc
cs
aaa
in
pop
dec
test
shl
push
push
in
cmpsb
inc
lds
lret
mov
or
ret
mov
sbb
aad
cmpsb
sbb
mov
pop
mov
push
adc
push
test
test
jo
add
mov
or
loop
or
arpl
add
sub
in
scas
or
sub
xor
dec
add
xchg
cmc
xor
inc
push
test
pop
jmp
cmp
shll
cmpsl
loop
repnz
testb
lea
pop
xchg
aam
inc
stos
ret
mov
push
gs
enter
inc
sbb
lret
pop
jmp
shr
repz
stc
xchg
loop
xchg
add
insb
xchg
cld
xchg
dec
dec
dec
icebp
cmc
push
imul
push
inc
mov
nop
push
cld
pop
mov
mov
ja,pt
lahf
jge
xchg
cmpsl
or
jg
loope
jmp
negl
adc
jne
mov
rolb
outsl
mov
push
and
mov
xchg
pop
mov
ret
mov
mov
movsb
loopne
movsb
ja
mov
ljmp
xchg
dec
dec
shl
out
and
adc
jg
dec
or
jecxz
ja
das
ds
cwtl
pop
jae
push
addr16
xchg
stc
xor
xor
jp
and
fidivs
aad
dec
pop
std
or
push
adc
dec
xchg
mov
fcoms
cmpsl
xchg
lret
mov
and
adc
inc
pop
popa
in
cmpsb
cmp
jmp
fbstp
jo
repz
xchg
or
xor
or
cmp
fs
add
mov
and
or
into
cwtl
pop
fimuls
and
pop
push
jae
xchg
fdivp
fists
mov
sub
hlt
sbb
cli
dec
jae
das
popa
out
imul
jg
mov
loope
popf
shl
fsubrl
insb
scas
inc
mov
sub
dec
lock
or
jbe
jnp
rcll
in
or
pop
sbb
cmp
call
jg
lahf
mov
mov
movsl
mov
cmp
repnz
sub
dec
dec
jle
int3
and
cmpsl
cmp
test
test
mov
rcrb
jb
jmp
pop
imul
jns
mov
ret
adc
jns
loopne
sub
jg
jne
mov
jl
cmc
cmpsl
xor
or
sub
loop
dec
sub
inc
adc
bound
mov
sub
sub
lahf
inc
lock
add
nop
jmp
mov
mov
rorl
dec
les
dec
fwait
jmp
and
sti
scas
scas
pusha
popf
jne
cmp
pop
das
shr
add
xchg
sbb
std
andl
je
test
push
cmp
dec
jne
cli
mov
cld
dec
in
shlb
add
pop
add
ficoml
pop
mov
mov
push
mov
and
arpl
mov
pop
push
popf
hlt
mov
sbb
pop
and
nop
pop
mov
cwtl
add
ret
cltd
bound
inc
mov
out
enter
mov
out
sub
jo
jle
into
insb
adc
sbb
pop
leave
orb
fsubrs
add
stos
insb
dec
push
std
repnz
out
mov
insb
push
inc
xlat
fxch
test
call
mov
jnp
and
fdivrl
and
mov
lds
or
scas
mov
push
inc
ljmp
pop
push
insb
rcll
and
aad
mov
cmpsl
xor
sbb
adc
dec
xchg
loopne
adc
or
and
out
pusha
pop
mov
cmp
cltd
sbb
aas
mov
fisubs
scas
gs
inc
call
fimuls
mov
xchg
pop
or
cwtl
sbb
mov
push
je
sbbl
cmp
sti
xchg
inc
ds
arpl
jmp
dec
xchg
or
out
shlb
push
or
cmp
mov
mov
or
pusha
mov
and
add
sbb
jno
adc
xorb
mov
or
cwtl
mov
adc
or
xchg
rcl
add
rcl
jecxz
nop
movl
popa
repz
test
adc
sbb
ja
mov
pop
test
inc
call
out
leave
dec
cmc
stc
insl
andl
stos
pop
arpl
cmpsb
enter
in
xchg
lds
orl
rcl
pop
mov
sbb
or
pop
hlt
int
jge
add
test
cltd
lods
jmp
or
jg
xchg
mov
and
cmp
imul
adc
cmc
xchg
mov
mov
mov
int
shlb
pop
icebp
push
xor
std
stos
nop
push
mov
jmp
ret
movaps
push
loop
pop
fsubrl
int3
dec
mov
inc
je
and
pop
mov
in
rcrl
shl
fsubp
fildl
cmp
cmc
ret
mov
in
sbb
push
sti
pop
jmp
adc
pop
sub
mov
push
out
mov
in
cmp
mov
push
jmp
fbstp
cmp
aas
imul
pop
mov
pop
cmpsb
jecxz
push
mov
jg
and
ret
decl
filds
outsb
and
xchg
jecxz
or
movsb
or
jo
and
pop
addl
lea
mov
jo
inc
call
sub
insl
xor
add
insl
jbe
push
lahf
xor
lds
in
mov
cwtl
fdivl
jo
jmp
loop
in
push
cld
lea
insb
inc
popa
iret
xchg
dec
in
es
shll
push
sub
loope
sub
jp
or
addr16
stc
mov
or
adc
jb
aam
xor
icebp
leave
inc
add
jno
mov
and
sub
jae
jmp
cwtl
push
addr16
cld
jmp
jb
sbb
or
dec
adc
lea
cmp
ds
inc
push
jb
push
lret
cmp
lcall
not
cltd
and
cmp
imul
sub
add
insb
adc
lea
aam
adc
mov
jmp
xor
mov
pop
cmpsl
push
sbb
cmpsb
mov
lret
fucomi
jo
and
and
add
jne
mov
add
cltd
rclb
lahf
cmp
test
scas
bound
loop
popf
inc
push
leave
sbb
lret
jno
es
push
mov
arpl
adc
jo
add
into
cwtl
das
mov
xor
jp
cmp
movsl
or
out
mov
xor
cmpsb
lods
xorb
mov
lret
call
add
cmp
sub
addr16
int
in
jmp
lds
sub
pop
or
cmp
or
stos
jb
jg
xor
push
hlt
cmp
xchg
int
nop
and
aas
adc
mov
mov
pushf
sub
pop
push
mov
xchg
xchg
ret
cmc
xor
jno
call
add
mov
xchg
orb
or
filds
lock
cmp
dec
cmc
push
aad
std
push
ret
cmpsl
jl
mov
rol
and
jge
fcomps
xorb
cli
jns
sub
and
enter
pop
mov
or
push
test
and
out
xchg
cmc
stos
push
cwtl
xor
push
add
pop
jnp
xor
das
orl
push
mov
pop
jns
inc
stos
clc
pop
inc
ret
insl
xchg
iret
xor
inc
mov
ja
and
xlat
xchg
xchg
stos
and
xor
inc
aaa
arpl
mov
icebp
sub
dec
inc
mulb
test
lods
movsl
xchg
push
pop
cmp
cli
pop
jmp
int3
inc
dec
or
fwait
aaa
jno
mov
fnstcw
inc
cmp
add
dec
std
dec
mov
mov
adc
xchg
lahf
ret
push
jns
pop
shll
pop
call
lods
repz
sti
and
cld
je
mov
lcall
mov
insb
sub
push
inc
mov
jmp
ljmp
jnp
lea
pop
shll
js
or
in
dec
push
into
jo
mov
push
adc
std
or
mov
cmpsb
popa
cmp
pop
in
lahf
sti
and
fcmovne
push
fsubs
and
xor
xlat
jge
cs
inc
clc
lods
mov
test
jg
mov
fisttpl
shll
pop
or
flds
jnp
addr16
mov
xchg
and
jo
and
movsl
cmc
cmp
outsb
andl
fcomp
stos
pop
repz
add
add
jp
push
inc
popf
cmp
mov
das
clc
dec
fdivrl
inc
sbb
mov
jbe
mov
dec
add
inc
mov
pop
lahf
pop
int
and
imul
inc
enter
and
jl
sub
mov
pop
mov
adc
and
xlat
pop
adc
lahf
faddl
shrl
xchg
in
aaa
and
scas
ficomps
jae
orl
sti
and
add
movsl
lret
or
xchg
cli
idivb
jg
pop
mov
xchg
ljmp
inc
mov
mov
repz
mov
cmp
pop
sbb
mov
or
mov
dec
leave
pusha
and
mov
fmull
mov
cmpsl
loop
icebp
pop
xchg
mov
sti
les
mov
lock
outsb
push
mov
jb
push
imulb
xchg
leave
daa
test
addl
repnz
imul
dec
sub
push
stos
sub
adc
jp
sti
sub
mov
sbb
shlb
mov
mov
neg
insb
das
adc
push
stos
sarb
jl
or
test
pop
push
sbb
rcll
fcompp
pop
shl
repz
inc
adc
stc
call
pop
xchg
adc
call
arpl
cwtl
pop
cmc
push
pop
xor
pop
fwait
stc
inc
sbb
mov
mov
mov
loope
call
xchg
lock
cmp
mov
insb
cmp
sbb
mov
pushf
jg
inc
or
sbb
or
push
jmp
jae
fstps
arpl
pop
and
and
lahf
rcll
aas
idivb
sbb
out
adc
adc
in
daa
xchg
pop
or
les
loopne
push
xchg
mov
jo
sub
add
mov
lahf
fldl
roll
sub
out
lahf
int3
jnp
call
jmp
mov
push
cmp
shlb
adc
fsubrp
jb
rcrb
ficomps
stc
and
xor
sub
mov
xor
inc
jno
push
movsl
push
jne
adc
fldcw
aas
sub
inc
jecxz
inc
dec
fisubrs
jno
xor
jns
sbb
xchg
jbe
hlt
repnz
cmp
jno
push
repz
mov
lret
cmp
xor
cmc
mov
push
dec
jmp
mov
ljmp
cmp
mov
push
mov
pushf
pop
cwtl
adc
jno
and
mov
add
shrb
loopne
js
ret
jge
or
mov
sub
sub
pop
sub
sub
ja
scas
repnz
into
lods
inc
inc
jns
pop
cltd
stc
cmp
pop
ss
cmp
call
adc
int
ss
push
lahf
sub
icebp
push
dec
rcrb
jbe
iret
aam
imull
inc
adc
adc
or
out
ljmp
push
pop
mov
dec
push
mov
jp
imul
dec
sti
rep
xchg
hlt
cmp
cwtl
xchg
mov
jae
inc
jns
in
add
lods
iret
test
lahf
sbb
es
mov
pop
fiaddl
sbb
inc
in
mov
jecxz
lock
or
xchg
mov
aaa
daa
bound
adc
test
jmp
xchg
call
lcall
jecxz
sub
pop
int
repz
xor
in
jl
adc
fwait
xchg
pusha
shl
or
sar
push
pop
stos
arpl
or
cmp
addb
push
int
shll
inc
fs
leave
xor
jno
push
js
push
fs
jbe
sbbb
loope
sub
lahf
negl
test
ret
xchg
pop
adc
dec
cld
sbb
push
enter
jo
popa
std
jecxz
jmp
fdivrs
test
cmp
notl
fisubrl
adc
mull
mov
enter
pop
or
repz
cmp
cmpsb
jmp
sahf
or
fstps
aaa
add
repz
shrl
cmpsl
mov
sub
negl
sub
jnp
mov
inc
std
ret
pop
pop
push
test
stc
push
jmp
out
sbb
inc
adc
pop
lahf
int3
inc
pop
adc
inc
les
sub
popf
hlt
movsl
inc
jae,pt
scas
jl
mov
mov
imulb
mov
cmp
and
mov
fldl
arpl
push
mov
pop
mov
cmp
gs
test
mov
pop
push
xchg
dec
stos
push
push
les
int3
cmp
adc
lret
sbb
or
sub
inc
repnz
adc
push
aam
inc
pop
inc
cmpsb
add
sbb
jecxz
inc
add
jne
or
push
clc
jg
movsl
sti
loope
add
das
sub
push
jne
es
hlt
sti
inc
cltd
jb
dec
xchg
push
cld
shlb
pop
xor
or
mov
jge
or
mov
mov
xchg
popf
inc
fildll
enter
xchg
mov
repnz
push
mov
mov
push
adc
add
hlt
xchg
add
dec
pop
mov
repnz
push
pop
cmp
sub
and
sbb
jp
pop
pop
rcrl
push
test
out
or
push
inc
mov
jge
jmp
adc
sbb
insb
push
sbb
pushf
addr16
push
sbb
push
stos
dec
and
dec
and
or
test
test
or
mov
rcrb
loop
or
dec
push
or
inc
mov
jns
xor
adcb
cmp
cwtl
aas
pop
or
and
ret
cld
inc
or
sbb
mov
and
add
xchg
je
daa
xlat
mov
cltd
int
cmp
mov
and
in
inc
jne
push
pushf
xor
call
aas
sbb
pop
push
push
into
test
popa
and
xor
into
int3
pop
mov
std
sub
add
push
or
repz
dec
sbb
sbbb
testl
push
xchg
mov
pop
mov
jmp
and
push
pop
mov
pop
and
push
and
ljmp
push
popf
inc
and
jno
mov
enter
xor
insb
mov
jmp
push
lds
inc
addr16
je
push
lods
test
outsb
adc
scas
pop
aad
cmp
push
cmpsl
xchg
pop
sub
jle
or
cmp
sahf
pusha
push
xchg
adc
ud1
jne
jl
mov
add
add
das
aad
mov
movsl
insl
lahf
leave
lret
rorb
daa
pusha
sti
xor
mov
pop
or
push
push
sbb
sbb
dec
sub
push
test
cmp
dec
adc
add
scas
cmp
jb
and
push
push
xchg
xor
adc
push
pop
gs
xchg
sbb
cmp
sti
xchg
test
dec
jb
push
jmp
xchg
aaa
mov
rclb
fsubs
add
inc
mov
rclb
call
loope
lahf
mov
mov
out
adc
fadd
repnz
cmpsl
lods
push
or
xlat
dec
xor
sub
or
inc
outsl
or
jle
or
shlb
xor
je
rcr
pop
repz
xor
movsb
into
mov
add
psubusw
mov
or
jle
xor
add
popf
xor
dec
cmpsl
pop
sbb
popa
or
xor
aad
mov
or
dec
stos
stos
into
xchg
ret
push
inc
pop
inc
or
mov
or
in
fisubrs
sbb
mov
push
into
movsb
adc
in
daa
and
mov
cmpsb
shrb
or
cs
pusha
js
cmpsb
in
mov
call
add
mov
add
into
push
and
in
mov
jmp
shlb
sub
sub
repz
enter
imul
insb
xor
shl
cmp
push
sti
test
mov
jp
or
negl
xor
fdivrl
dec
push
les
call
loop
mov
xor
lods
psubsw
sub
cwtl
lcall
sysenter
or
sbb
jb
adc
pop
hlt
subb
or
push
loopne
sarb
pop
sbb
icebp
inc
leave
sbb
push
das
jp
cmpsl
fs
or
inc
les
inc
mull
mov
ret
repnz
jo
lea
fisubs
or
and
xchg
pop
scas
sub
iret
push
rorb
lock
call
test
mov
fdivrs
xor
mov
loopne
and
cmpsb
push
jmp
xchg
int
and
xchg
mov
mov
fstps
mov
in
das
mov
push
inc
pop
out
dec
sub
adcl
or
push
cwtl
inc
flds
jge
push
jbe
add
call
int3
ret
das
inc
aam
sar
into
aad
hlt
xchg
cmc
jge
push
dec
cmpsl
jl
push
xor
lcall
dec
dec
dec
mov
xor
or
xchg
or
repz
orb
mov
rorb
stos
dec
mov
in
mov
mov
inc
inc
add
lahf
inc
out
dec
pop
out
mov
lds
mov
repnz
mov
cmpsl
adc
sub
daa
rol
daa
pop
lock
out
sub
push
iret
and
xor
push
repnz
inc
pop
inc
ljmp
and
popf
testl
or
push
mov
mov
fdivs
adc
xchg
bound
and
jg
add
and
mov
cmpxchg
rorl
repz
cwtl
call
sub
dec
clc
movsb
cmpsb
andb
in
and
lods
movsb
sbb
test
mov
xor
sti
or
outsb
stos
mov
jecxz
xor
jmp
push
pop
mov
mov
sub
mov
mov
jmp
xlat
call
dec
xchg
mov
out
or
add
inc
or
pop
fdiv
fistps
int3
and
jo
insl
mov
mov
jmp
cmp
cld
jmp
test
mov
jnp
push
ret
lock
mov
inc
fmull
xor
push
rcll
dec
pop
scas
lret
test
ret
dec
stos
in
icebp
popl
adc
add
cltd
jmp
loop
and
ret
mov
idiv
sub
add
push
mov
hlt
jmp
mov
xchg
mov
add
dec
ds
xchg
imul
loopne
inc
mov
mov
lea
jp
mov
in
push
scas
aaa
push
pop
lods
test
pop
cmpsb
out
jo
push
dec
out
decl
aad
cmc
in
inc
pop
xor
or
push
sbb
out
enter
mov
push
sub
jmp
bound
call
mov
pop
ret
dec
sbbb
fcomi
or
or
or
xchg
mov
orb
es
out
out
cmp
orl
scas
jp
inc
mov
ljmp
out
mov
outsb
mov
les
out
dec
js
in
or
xor
add
jbe
aaa
notb
adc
cmp
lahf
push
sbb
lods
shrl
insl
dec
and
or
pop
imul
in
xor
mov
pop
jmp
cmpsb
inc
bnd
or
jne
mov
sub
jns
mov
repz
mov
sbb
push
hlt
push
lret
mov
test
daa
fstpl
mov
repz
in
test
cmp
push
inc
xor
or
cmp
mov
or
jmp
xor
leave
xor
xorb
mov
mov
lock
sub
pop
pop
orl
adcb
xchg
mov
pushf
lcall
mov
push
andb
sub
cmp
add
js
pop
push
loopne
shll
pop
or
lods
iret
mov
or
fbld
jg
xor
repz
pop
push
dec
add
cmpsl
js
adc
jmp
sbb
daa
mov
jmp
sti
movsl
jge
dec
fldcw
mov
sbb
push
pop
push
inc
mov
xchg
and
in
mulb
addb
add
jp
data16
or
push
std
sbb
loope
mov
dec
jmp
adc
and
popa
sub
stos
shlb
sahf
call
sbb
int
rorb
roll
ljmp
add
lret
lods
add
inc
stos
xor
jecxz
add
inc
mov
pop
push
cmpb
add
into
sti
daa
lea
iret
fdivl
int3
inc
stos
and
call
pop
clc
shlw
ja
inc
pop
xchg
mov
shrb
xor
mov
push
dec
pop
push
fildl
jp
inc
adc
addr16
stos
test
add
push
mov
or
je
cwtl
subl
mov
add
mov
mov
mov
and
xchg
fwait
insb
cmpsl
dec
or
mov
and
ret
push
stc
mov
jo
outsl
popf
or
mov
pushf
jg
sbb
dec
mov
xchg
andb
je
enter
mov
cmp
sbb
cmp
or
lcall
adc
fcom
jle
dec
add
mov
fbld
pop
push
mov
mov
and
ss
daa
pop
pop
pop
push
call
data16
jno
push
mov
sarb
jb
xchg
jl
clc
cs
mov
xchg
lahf
ja
and
into
test
mov
cmp
repnz
and
addr16
enter
jns
push
sub
add
add
sub
test
enter
icebp
mov
adc
andl
enter
stos
fistpll
add
jbe
adcb
inc
rclb
iret
sub
fmuls
jb
cmp
lods
incl
pusha
dec
xlat
dec
roll
cwtl
testl
sub
nop
cmp
sub
adc
shrl
in
mov
push
xor
jne
loop
push
fldl
jns
and
or
enter
or
mov
xchg
int
mov
dec
push
xor
testb
pop
aas
adc
std
nop
dec
push
mov
and
orb
fisubrs
dec
sbb
add
dec
scas
clc
addr16
and
loop
jns
scas
pop
mov
jno
pop
jmp
mov
jo
jb
inc
pop
aad
mov
std
inc
or
inc
adc
call
add
pop
cltd
pop
rclb
repnz
jp
rcll
out
push
sahf
call
mov
xchg
inc
hlt
cmp
dec
gs
add
and
ja
mov
sbb
inc
aad
mov
inc
jmp
std
outsl
push
imul
daa
adc
jnp
leave
cmp
rcrb
mov
icebp
cwtl
mov
pop
or
scas
or
cs
push
adc
pop
ret
add
push
in
scas
cmc
push
outsl
orb
inc
fstpt
pusha
lea
call
sub
lret
cmp
ret
sub
and
add
or
test
cmp
sti
push
jb
shr
mov
adcb
ja
pop
aam
push
lods
inc
imul
add
loop
jb
in
pop
notb
mov
sub
inc
dec
ss
dec
lods
ret
mov
mov
clc
out
adc
push
daa
idiv
stc
iret
mov
inc
add
stos
imul
scas
repnz
cld
aam
pop
std
outsl
sub
pop
lret
xorb
je
shll
rcrb
xchg
in
mov
call
adc
xor
and
mov
xchg
jle
mov
pop
mov
dec
mov
rorl
add
pop
mov
ret
mov
jns
jo
pop
aas
sbb
shlb
repnz
orb
inc
and
pushf
int3
lods
out
pop
xorb
cmpsl
and
daa
hlt
xchg
jp
fisubrs
push
adcl
or
fistpl
add
in
stc
sub
insb
or
in
jo
aaa
sbb
or
lds
sub
or
mov
or
shr
dec
repnz
jmp
push
inc
dec
cmc
and
jnp
mov
outsb
int3
enter
xor
and
push
stc
xchg
dec
hlt
push
add
mov
and
shl
lret
mov
sbb
mov
pop
push
sub
fwait
pop
cld
ljmp
pinsrw
xchg
in
dec
xor
add
push
push
push
mov
cwtl
lea
sbb
loopne
cmp
idiv
pop
pop
add
jb
jnp
push
dec
push
lods
aad
and
xchg
mov
ret
lret
sti
jmp
mov
test
add
mov
mov
sub
rcrl
mov
or
mov
or
dec
jnp
and
inc
clc
dec
cmc
push
or
dec
mov
shlb
out
fisubrl
scas
jno
or
repz
loope
lahf
repnz
int3
popa
enter
int
js
sti
mov
add
jl
dec
and
pusha
mov
mov
jp
xchg
mov
loope
int3
bound
jbe
aad
lret
std
sbbb
and
out
jmp
movzwl
pop
or
in
push
jb
cmp
add
leave
or
cltd
xchg
dec
ret
fdivrs
sahf
stc
inc
loope
cmpb
imul
test
out
jne
jo
dec
jecxz
inc
push
jno
inc
cmc
mov
mov
psllw
stos
movsb
add
push
push
outsb
leave
cmp
push
jmp
les
pop
mov
jb
jnp
pusha
shl
outsl
xchg
cmpsb
jmp
fldcw
popf
outsl
jae
cmc
test
mov
and
test
test
sub
cmpsb
mov
or
xchg
mov
mov
ret
daa
pop
test
int3
jo
mov
or
aam
lods
xor
in
popa
inc
sub
pop
test
or
pop
repz
adc
cwtl
mov
xchg
mov
push
push
push
jne
bound
testl
adc
cmp
jmp
push
lret
xchg
push
add
ljmp
dec
clc
mov
add
jp
jg
or
and
daa
mov
dec
sbb
and
jmp
mov
push
mov
dec
imul
or
loop
jne
popf
incl
xor
pop
shl
hlt
pop
lea
adc
repz
testb
cwtl
push
in
xchg
fistpll
mov
nop
xchg
push
gs
movsb
and
pop
mov
or
xchg
ja
mov
jmp
cmp
or
incl
into
divb
lret
mov
dec
inc
inc
cmpsb
fldt
push
push
mov
mov
dec
inc
enter
pop
out
int
jno
ds
jp
imul
lahf
xchg
sub
mov
cmp
ret
cmpsb
mov
cli
enter
jmp
cs
nop
rcrl
pop
sti
or
imul
mov
cmpsb
mov
mov
lret
sub
jbe
add
ljmp
pop
push
stos
sub
sbb
pop
mov
rorb
pop
jno
adc
mov
pop
push
int3
and
dec
jmp
push
ja
xlat
add
sarb
adc
leave
pop
inc
jp
add
sub
pop
xchg
clc
ror
mov
mov
rcr
cmp
jge
inc
std
daa
pop
mov
and
fldcw
mov
jno
cli
xchg
cmp
fadd
dec
add
xchg
mov
cmc
sti
mov
xchg
aas
or
mov
mov
aaa
or
imul
sbb
repz
mov
xchg
mov
call
jmp
jbe
rorl
call
not
mov
push
cs
fistl
xchg
mov
in
je
xor
push
pop
out
mov
xchg
or
pop
data16
jmp
lret
mov
xchg
cltd
xchg
jecxz
adc
jns
ja
es
mov
or
adc
out
xor
ss
sti
and
push
mov
mov
cmp
add
sub
cmpsb
rclb
mov
sub
inc
mov
es
mov
ret
push
out
pop
cmp
jle
aad
push
cmp
call
add
je
push
dec
xchg
andb
mov
popf
cmp
and
dec
jmp
cmp
test
or
mov
cmpsl
adc
jno
mov
sbb
lods
imul
jno
dec
outsb
out
mov
loopne
mov
xlat
aaa
cmp
inc
jne
mov
in
cmpsl
hlt
and
push
adc
pop
mov
scas
cmc
mov
pop
jno
je
jo
movsb
adc
push
hlt
mov
cltd
hlt
dec
push
mov
mov
daa
les
cmp
cmp
jo
dec
push
scas
loopne
aam
jo
call
push
shrl
pop
mov
push
mov
mov
and
enter
mov
popf
push
mov
cmpsl
cmp
repz
cmpsb
pop
sub
fsubs
push
pop
and
mov
add
mov
clc
mov
lds
xchg
mov
movsl
inc
push
push
test
sub
xor
inc
and
sub
outsb
inc
xlat
call
int
aad
ja
xchg
call
adc
inc
dec
pop
xchg
push
sub
mov
sub
or
mov
fdivrl
xchg
out
adc
jmp
and
popf
jne
or
push
test
xor
inc
es
push
mov
ret
mov
pop
xchg
dec
sub
pop
mov
push
insb
stos
and
notl
mov
mov
pop
repnz
dec
jns
xor
loop
cmp
aaa
add
in
loope
jp
mov
arpl
or
dec
mov
or
inc
pop
mov
sarl
dec
pop
mov
push
mov
leave
xchg
test
pop
cwtl
int
mov
add
push
mov
lods
call
out
cltd
mov
adcl
mov
movsl
aad
push
mov
inc
pop
enter
pop
and
mov
stos
cs
push
adc
push
repnz
xchg
call
dec
and
jmp
mov
fildl
lds
inc
lahf
or
xchg
ret
sbb
mov
push
mov
ret
inc
mov
push
xor
mov
sub
mov
jo
pop
mov
test
adcb
movsb
xlat
out
cmp
je
push
pop
mov
push
stc
inc
cltd
or
xchg
adc
test
out
repz
notl
mov
push
daa
js
incl
xchg
jo
sbb
lea
out
dec
mov
sbb
aam
loope
pushf
mov
fdiv
rcrb
adc
aaa
faddl
dec
sub
insl
sbb
xor
cmp
jmp
pop
adcb
out
inc
or
cmp
push
out
sub
or
xor
shlb
in
add
add
imul
std
mov
xlat
test
dec
inc
mov
jg
cmp
sub
jge
popa
enter
adc
push
adc
pop
imul
adc
roll
nop
push
cmpsl
insb
sbb
add
dec
mov
subl
and
dec
stos
in
test
es
inc
mov
out
pusha
sub
inc
adcl
xchg
xchg
lods
stos
or
mull
or
in
mov
stos
adc
pop
jo
fsubrp
pop
add
arpl
loope
xchg
dec
insl
xor
or
je
fcmove
inc
loopne
testb
sub
pop
fimuls
xor
movsb
call
call
mov
fucomp
pop
mov
dec
mov
pop
cmp
push
pop
mov
fildll
into
push
add
mov
pop
sti
lsl
icebp
movsl
js
es
sub
aad
ret
rcll
mov
inc
inc
and
pop
or
mov
scas
adc
lea
cmp
xor
stos
test
or
test
push
js
or
bound
push
sbb
dec
cwtl
mov
mov
pop
aaa
sub
ret
xor
stos
nop
addr16
mov
cld
shlb
sbbl
fisubs
or
sbb
or
insb
push
test
inc
and
mov
cmp
aam
adc
call
pop
push
pop
or
adc
push
into
pop
testb
jle
sbb
push
in
aad
sub
lret
mov
aaa
mov
std
sub
mov
pop
test
std
hlt
cmp
scas
sbbb
sbb
inc
sub
imul
fldcw
fildll
mov
jno
xorl
fidivrl
mov
in
in
stc
inc
mov
addb
divb
test
cmp
loop
lahf
add
mov
jle
lock
mov
clc
aas
mov
js
mov
std
jo
int
fdiv
lahf
cs
dec
or
jmp
mov
jb
call
int3
adc
mov
stos
les
adc
sbb
or
test
shlb
push
call
addr16
loope
insl
mov
pop
add
inc
sub
stc
aas
jo
push
lahf
negl
out
xchg
push
lret
leave
inc
cmpb
and
das
aas
call
add
int3
or
xor
lcall
call
mov
daa
adc
sti
and
push
push
call
xor
in
imul
orb
sbb
add
jno
or
arpl
leave
mov
outsb
mov
out
dec
pop
out
test
xor
push
test
lahf
dec
pop
lods
inc
cmpsl
inc
je
xor
push
cmc
stos
xchg
mov
rorb
pop
and
addr16
movsb
xchg
add
mov
inc
aad
imul
xchg
loop
and
inc
jmp
add
pop
popf
shlb
sub
and
pop
or
xor
jg
and
ljmp
or
lods
dec
or
nop
in
mov
cmp
test
or
lret
lock
lret
xor
shl
mov
aad
ret
lret
or
cwtl
cld
imul
test
pushf
mov
push
mov
mov
jg
sbb
das
push
adc
je
loop
popf
aam
fcomi
cld
mov
or
sbb
pop
cmpsl
and
ffree
lahf
mov
repz
mov
push
sub
loope
mov
jns
push
and
cmp
hlt
roll
xor
pop
push
jnp
aas
daa
jb
aad
cmp
pop
lahf
insb
stos
or
iret
lock
pop
push
push
push
mov
pop
lods
jge
imul
and
mov
or
pop
pop
sbb
inc
loop
fisubrl
xor
popf
push
mov
pusha
mov
mov
inc
and
fbstp
push
jne
sbbl
sub
sbb
inc
xor
iret
dec
icebp
jns
shr
sti
shl
repnz
dec
cli
sbb
loop
and
pop
push
jecxz
imul
or
push
jno
jg
or
cmpsl
icebp
movsb
ljmp
add
mov
cmp
loopne
add
leave
fisubrs
push
and
xor
lcall
scas
mov
lahf
xor
xchg
rcr
insb
ja
out
arpl
in
and
in
or
or
mov
jne
push
mov
jns
sub
cld
andb
push
cltd
fsubl
mov
enter
shlb
stos
repz
iret
test
inc
xor
daa
sub
jl
xor
leave
push
push
adc
int
pusha
mov
inc
test
les
mov
pop
sbb
mov
lods
popf
sahf
mov
or
sbb
cld
out
rclb
test
mov
insl
adc
push
ret
leave
lahf
sahf
int3
jle
out
or
cmp
popa
subl
jae
jbe
insb
cmp
orb
cwtl
mov
or
aam
andb
aaa
pop
lret
ljmp
pop
ror
inc
add
jecxz
mov
ffree
sub
pop
xchg
mov
push
fistps
mov
lods
hlt
push
mov
loopne
pop
mov
push
fmuls
lret
and
inc
mov
mov
push
cmc
aad
inc
inc
clc
mov
std
inc
outsl
daa
jae
repnz
pop
jno
jmp
fwait
jecxz
test
mov
push
xor
repz
fcmovnb
jmp
out
and
xchg
sub
pop
aaa
call
into
mov
out
ljmp
movsb
jg
inc
testb
inc
fdivr
les
dec
fiadds
mov
jae
int3
mov
loope
cmp
inc
xlat
jns
dec
lock
jge
not
cmp
ja
repnz
jns
inc
pop
add
mov
sti
mov
sub
add
jb
dec
push
or
cli
push
inc
or
movzwl
lahf
ljmp
push
in
lahf
popa
decb
cwtl
mov
add
mov
and
jp
das
rcrb
pop
jb
ss
dec
dec
xchg
andb
test
xor
xor
pop
inc
jle
push
add
mov
js
push
repz
cmc
mov
pop
add
or
xchg
pop
jp
test
lds
pop
jle
inc
or
adc
lret
sti
and
inc
inc
call
sub
push
test
push
rorb
enter
push
dec
pop
or
mov
das
fbld
sbb
aad
jg
jbe
hlt
mov
ja
dec
dec
xor
mov
loop
jnp
or
jmp
fldenv
jge
dec
inc
lock
sbb
outsb
in
or
or
mov
xchg
sbb
jp
and
xchg
fidivrs
int
adc
lods
push
mov
sti
sbbb
cmc
not
cmp
mov
popa
xor
test
dec
mov
pop
xchg
pusha
dec
pop
adc
push
in
add
mov
out
popa
es
or
fwait
iret
stos
xchg
push
sbb
sbb
pop
imul
dec
in
mov
adc
nop
fnstenv
movsb
or
cmc
movsl
ret
sahf
es
rcr
les
andl
addb
mov
into
aam
jae
jbe
aam
mov
ret
inc
add
jl
or
lret
daa
aad
xchg
rorl
or
popaw
push
jmp
out
dec
push
aam
mov
cmc
cmp
aaa
adc
mov
inc
sub
dec
xchg
jno
fbstp
fdivrs
and
fistpl
inc
ss
xchg
in
mov
mov
pushf
sbbl
xchg
push
loopne
sub
add
mov
not
test
add
cmpsl
mov
testb
xorl
lods
or
call
mov
pop
xchg
and
sarl
adcl
jno
shrl
xchg
inc
adc
aam
push
inc
es
es
adc
leave
call
inc
dec
inc
xchg
shll
or
in
jge
sbb
in
outsl
scas
out
add
sub
daa
inc
cwtl
pusha
mov
and
mov
bound
jl
mov
fs
rol
test
imul
sbb
pop
push
or
es
shll
xchg
es
pop
mov
jns
mov
mov
xchg
lahf
pop
adc
jns
mov
pop
mov
test
push
pop
push
and
push
into
mov
orl
call
test
jecxz
jmp
jae
daa
lret
or
and
push
icebp
call
cmpb
icebp
sbb
jecxz
push
rolb
and
or
inc
jl
push
fwait
in
bound
test
push
mov
sub
dec
pop
clc
or
loope
mov
dec
sub
xor
or
lret
insl
mov
fwait
inc
mov
and
popf
pusha
jbe
aam
imul
aad
sub
sbb
idivl
popf
adc
loopne
dec
xchg
cli
dec
adc
test
call
jnp
push
addr16
push
icebp
pop
or
push
sub
mov
pop
inc
ss
xchg
or
call
mov
aad
out
pop
lcall
sti
add
mov
and
insl
lahf
mov
mov
cmpsb
sbb
and
cmp
stos
call
fistpll
push
idivb
imul
mov
add
fimull
lods
adc
int
jno
sub
pushl
push
mov
jge
push
imul
ljmp
cmp
xor
pop
lret
ja
push
or
das
adc
sub
cmp
cmp
addr16
adc
sub
fildl
into
push
adc
inc
push
xlat
dec
adc
cltd
or
mov
cwtl
sti
repz
push
nop
sub
lods
xor
xlat
repz
or
mov
jno
adc
sub
push
cmpsb
jmp
notb
loop
mov
mov
xchg
mov
out
ret
enter
xor
inc
test
pop
mov
pop
arpl
loope
push
out
or
and
jle
mov
mov
cmc
or
aaa
push
in
inc
xchg
add
call
popf
jns
icebp
movsl
push
sub
cmpsl
jnp
ret
inc
mov
inc
dec
or
ljmp
ds
xchg
cmp
dec
sbb
mov
cmpl
sbb
mov
ss
push
push
xor
push
cmc
jmp
les
insb
cmp
push
sbb
cltd
je
inc
ljmp
rcll
adcl
inc
sti
pshufw
mov
push
mov
pop
xor
xor
pusha
jne
sub
mov
cmp
push
and
inc
ret
sti
or
inc
cmp
out
lahf
lret
repnz
call
pop
cmp
pusha
ret
loop
aad
push
in
outsb
dec
adc
popf
repz
push
icebp
cmc
ljmp
ficompl
subb
xchg
icebp
sbb
add
sub
les
mov
or
push
out
movsb
xor
jne
lea
rcll
shll
cmp
loopne
adc
dec
or
add
lcall
test
xor
popa
and
inc
push
outsb
movsl
sbb
mov
push
icebp
or
jle
sub
mov
and
inc
mov
mov
movsb
leave
push
in
push
inc
lock
mov
sahf
ss
adc
dec
jg
subb
xor
dec
sbb
mov
xor
pop
je
jge
mov
push
int3
ret
push
divl
xor
inc
in
sub
popf
xchg
or
orl
push
push
jp
mov
mov
in
cwtl
das
mov
aas
dec
jecxz
pop
sbb
adc
or
jne
cmp
sbb
cmpsl
adc
test
sbb
push
out
out
mov
fldl2t
xchg
add
shlb
jl
movsb
xor
test
jge
fwait
mov
in
push
add
dec
jmp
leave
les
pop
repnz
mov
outsb
push
jge
daa
sti
mov
cmc
dec
mov
or
or
add
ja
stc
jae
or
pop
sbbl
jmp
and
pop
push
outsb
sbb
jo
lahf
add
add
dec
push
fimull
pop
icebp
or
pushf
ljmp
stc
fisubrs
loop
push
lret
stos
add
xchg
aam
mov
inc
push
shlb
pop
jae
mov
jo
xor
mov
jmp
jbe
aad
dec
mov
dec
pop
xor
test
mov
dec
lea
mov
jmp
stos
or
jle
xor
sub
cmp
popa
jne
and
mov
pop
cli
mov
pop
jmp
cmp
sub
jge
loop
loop
aad
push
inc
inc
lahf
and
xchg
inc
mov
mov
xchg
xchg
dec
push
fwait
jne
add
filds
or
fcompl
leave
jmp
cmc
push
jl
inc
xor
fidivl
push
hlt
mov
xor
sub
pop
jmp
repnz
movsb
cmc
xorb
dec
or
add
test
rcll
jmp
ret
add
dec
and
test
mov
dec
mov
dec
mov
push
sarl
or
cmp
push
imul
adc
leave
in
adc
adc
orb
xor
cmp
icebp
push
test
shl
dec
pop
jo
fiadds
dec
jnp
inc
mov
insb
pop
xchg
fdivl
sub
or
pop
sub
out
jmp
inc
or
cmpsb
sbb
cmpsb
or
inc
push
add
setp
adc
ret
imul
sbb
xchg
scas
cs
or
fstpl
movsl
jl
xor
jecxz
icebp
popa
push
mov
in
imul
pop
sub
sbb
ret
pop
adc
mov
push
xchg
mov
loop
dec
icebp
mov
adc
mov
adc
stos
lcall
insb
out
outsb
dec
fdivrl
lahf
fnstcw
add
push
inc
add
jne
jb
jmp
dec
xchg
jbe
aaa
fucomi
popa
inc
jg
sub
mov
jp
test
ds
dec
or
inc
mov
pusha
pushf
not
pop
add
jmp
inc
cmc
sub
out
loopne
lcall
ja
sahf
xor
inc
add
lahf
outsb
lahf
int
stos
push
pop
cmova
ljmp
movsb
mov
inc
out
sbb
jb
repz
sbb
lcall
pop
dec
push
xor
adc
icebp
or
lock
jmp
outsl
mov
xchg
mov
sbb
push
cmpsb
mov
sub
add
cmp
lods
xchg
push
hlt
js
stc
pop
jecxz
mov
or
rolb
cwtl
push
daa
dec
adc
add
shlb
or
arpl
scas
pop
lods
add
pop
es
push
inc
gs
inc
lahf
pop
push
pop
call
cli
or
push
popf
ja
mov
in
mov
jmp
popa
push
test
pop
push
dec
mov
cltd
pop
test
xchg
cli
pop
push
push
ljmp
jmp
xchg
jnp
sub
pop
mov
enter
mov
xor
test
jmp
mov
jno
xchg
jp
mov
lods
ss
pop
leave
mov
sbb
mov
arpl
leave
es
call
inc
cwtl
and
jbe
pop
pop
mov
lock
pushl
jl
sahf
test
lods
pop
sbb
or
jmp
add
jnp
int
xor
es
cmp
lods
loopne
sub
sub
cmpsl
shll
dec
mov
jb
loop
ja
sahf
mov
mov
insb
sbb
call
or
adc
push
pop
jl
test
xchg
shl
and
andb
ret
inc
mov
mov
push
call
jg
and
mov
jne
sub
test
and
ja
inc
leave
xor
push
jp
cmc
outsb
sub
fiadds
test
in
cld
loope
mov
push
push
xor
cli
repnz
jno
jns
or
loope
or
mov
loop
repz
mov
inc
cmc
pop
loopne
pop
pop
pop
popf
pop
lods
sbb
mov
push
call
pop
jmp
and
in
mov
push
add
xor
xchg
or
mov
ss
jmp
dec
adc
lret
sbbl
fsubr
pop
or
push
dec
sbbl
cwtl
cmp
push
cmc
lret
cwtl
push
jns
push
je
ja
xchg
pop
dec
lret
dec
or
out
and
sub
lahf
shlb
pop
jmp
or
jno
pop
cmpsl
ljmp
cmp
pop
cs
stos
in
push
ljmp
inc
cmpb
jle
and
push
sti
cmc
lock
cmp
daa
lock
je
lock
xchg
ret
out
pop
or
in
pusha
inc
lock
test
adc
adc
setne
ja,pn
nop
pop
xor
sbb
push
dec
push
inc
mov
into
mov
out
insb
lock
stc
mov
mov
sbb
sbb
adc
jecxz
and
out
xchg
push
mov
lods
icebp
and
out
adc
insl
xor
adc
pop
les
repz
jecxz
int3
test
mov
popf
cmc
push
dec
pushf
jle
xchg
sbb
sub
xchg
push
lock
and
into
inc
repz
mov
rcrl
push
jo
adc
push
inc
fildll
mov
or
ss
push
cmp
call
out
push
pop
xchg
xor
push
adc
mov
cld
xor
pop
and
iret
ud0
xor
sbb
and
cmpb
ret
inc
mov
into
inc
mov
jle
bound
call
xchg
push
lods
ja
and
lds
cmpb
add
repnz
sbb
enter
mov
jbe
popf
jle
sub
or
jb
test
add
adc
call
jecxz
scas
xor
add
sbb
mov
div
test
daa
insb
ret
pop
fnstenv
xlat
pop
inc
jmp
cltd
repz
push
out
inc
sahf
outsb
push
xor
cmpsl
mov
ja
pop
fisttps
or
mov
int3
bound
push
fdivp
fisttps
cmp
notl
mov
cwtl
cmp
ds
mov
push
nop
adcl
in
arpl
inc
xchg
out
or
fdivl
push
jns
or
addb
es
or
sbb
push
fucom
fs
sub
and
das
pop
mov
addb
xor
clc
xor
mov
push
mov
ja
cwtl
std
ja
add
outsl
lds
sub
dec
jmp
push
movsb
orl
sub
sub
loop
push
ret
push
ret
out
out
adc
mov
dec
test
sbb
dec
fidivs
sbb
inc
out
out
sbb
push
or
test
mov
repnz
xchg
int3
test
or
cmp
xrelease
inc
xchg
mov
mov
xor
es
sti
ja
and
jg
insb
push
sub
pop
icebp
je
inc
inc
inc
pop
add
call
push
or
cld
add
inc
das
sub
repnz
mov
dec
mov
cmp
or
or
dec
lds
cs
pop
jg
lcall
sub
dec
or
mov
imul
jg
sbbl
mov
push
mov
sub
cmp
lea
fs
not
mov
stos
sub
xor
into
pop
xchg
das
mov
cwtl
ljmp
adc
fnstcw
sub
in
push
lock
mov
imul
jle
inc
insb
sbb
cmpsl
enter
pop
and
add
xchg
jp
loope
xchg
jl
mov
xlat
out
sub
adc
mov
fsts
add
jmp
jno
call
ja
mov
test
adc
mov
sar
movsb
pusha
dec
or
or
push
fisttpll
ret
mov
stos
and
push
mov
jb
or
jnp
or
or
adc
adc
subb
test
call
enter
cs
out
test
sbb
pop
pop
cmp
mov
xlat
ret
sub
out
or
mov
add
fimuls
or
fiadds
inc
je
aas
sahf
shrb
insl
inc
push
loopne
incb
dec
inc
cld
dec
or
cltd
loop
aaa
rcrl
lahf
sbb
mov
push
out
arpl
dec
xchg
and
pop
data16
jo
js
call
jl
shlb
sub
sub
repnz
test
push
xor
pop
jecxz
xor
push
sahf
mov
mov
bound
outsb
pop
aas
push
add
popf
stos
repnz
mov
mov
repz
aas
sti
aad
jb
orl
and
inc
jmp
int
iret
or
imul
pop
sbb
push
mov
call
jmp
and
lret
add
dec
dec
add
enter
xchg
inc
fldl
sub
sub
pusha
mov
pop
test
repz
mov
add
adc
insb
ret
orb
pop
push
push
push
xchg
lea
out
cmpsb
repnz
sub
in
mov
inc
xlat
mov
mov
mov
fcoms
sahf
xor
and
mov
adc
adc
mov
or
arpl
repnz
int
mov
rcrl
mov
push
icebp
mov
ret
inc
jns
or
sub
mov
pop
mov
dec
cmp
add
cmc
xchg
int3
mov
push
out
xor
cmc
sub
call
add
imul
xchg
fstps
push
mov
ret
cmp
test
or
mov
push
mov
loop
adc
adc
cmc
sub
dec
push
sbb
dec
jp
pop
enter
outsb
dec
adc
jmp
mov
stc
cmpsb
addr16
lds
mov
jo
jno
push
lods
inc
fdivr
in
jae
xor
loope
lret
loopne
fs
repnz
call
push
push
lret
or
and
out
lds
in
jae
pop
cltd
mov
shlb
mov
mov
and
jmp
dec
sbb
or
inc
adc
jo
jge
and
cmpsb
fildll
shrb
push
jg
movsl
lahf
cld
push
mov
inc
jecxz
or
push
das
jb
and
das
fsubl
xlat
add
movsb
or
mov
push
or
pop
jecxz
mov
jne
dec
and
mov
jg
mov
lret
cmp
xchg
in
lcall
test
cmpsl
add
out
pop
pushf
mov
adc
xor
test
pusha
repnz
push
lahf
stos
das
xchg
pushf
lods
mov
adc
jmp
jne
out
pop
test
shlb
jge
pop
xlat
in
aam
dec
push
push
flds
test
call
mov
add
mov
add
lods
mov
mov
xchg
cwtl
subb
or
mull
in
push
xchg
lods
sub
mov
sar
nop
and
aam
lahf
nop
xchg
mov
pop
lahf
idivb
and
sbb
add
ja
inc
shr
fcmove
dec
xchg
mov
jmp
sub
jns
xchg
lods
jno
movsb
mov
and
sub
mov
xor
push
jl
xor
stc
popa
adc
pop
jne
sarl
ror
imull
add
cmp
push
mov
sub
jb
das
ja
cltd
enter
push
add
xor
fists
pop
pop
out
and
mov
sarb
xchg
add
pop
sbb
push
fisubl
mov
aaa
add
mov
outsb
push
mov
and
nop
and
and
sbb
pop
lret
test
adc
ss
adc
subb
addr16
cmp
divl
enter
dec
sbb
divb
xor
push
pop
pop
pop
fwait
xor
fwait
loop
test
stc
ret
scas
pop
cmp
in
xchg
push
push
andl
popf
dec
jl
jno
xor
cmpsl
lcall
pop
test
adc
xchg
popf
pop
sbb
inc
scas
pop
dec
jmp
movsl
and
mov
mov
jp
mov
push
mov
sbb
dec
jae
jmp
sti
xchg
pop
mov
mov
push
sbb
mov
jle
inc
jp
lods
and
icebp
jo
ja
dec
add
sbb
push
lods
pusha
clc
lahf
xor
sbb
scas
push
nop
mov
mov
orl
dec
mov
rcr
sub
dec
mov
in
pop
insl
fcmovnb
push
sbb
aaa
jno
xchg
or
jp
xor
mov
testl
enter
aas
lods
fsubp
pop
inc
adc
xor
or
std
inc
stos
and
repnz
push
add
sbb
mov
call
rol
xchg
xchg
dec
sbb
push
lock
adc
jmp
and
sbb
mov
mov
stos
pusha
sbb
dec
xchg
xchg
xchg
pop
pop
or
hlt
fimuls
idiv
or
jo
xor
pop
mov
jns
and
lret
inc
test
fildll
aad
mov
jmp
call
xlat
xor
pop
lea
or
test
ljmp
and
cmp
bnd
aas
test
int
mov
decl
lds
in
decl
call
lahf
dec
or
call
xor
dec
add
or
fwait
and
lret
push
jecxz
xchg
jae
xor
or
sbb
push
ficoms
loop
pop
fdivrl
jo
leave
inc
test
dec
les
mov
push
pop
pop
loope
das
cli
push
idivb
stos
lods
stos
fnstenv
mov
sbb
mov
xchg
call
mov
adc
push
loop
sbb
aam
cmpsl
xor
rclb
dec
inc
sbb
push
les
ds
cltd
out
popf
leave
inc
aas
popf
and
mov
aad
add
add
movsl
lock
daa
loope
call
xchg
insl
push
neg
pop
pop
xchg
mov
popf
dec
adc
xchg
sar
repnz
jmp
jg
daa
out
and
mov
frstor
dec
cmp
jg
fstpt
push
call
pop
fistps
mov
mov
jmp
adc
or
and
and
fisttps
cmp
outsl
jp
inc
mov
mov
das
inc
cld
int
test
lea
movsl
mov
xchg
outsb
pop
dec
cmpsl
mov
add
scas
add
push
in
scas
push
shlb
not
and
xchg
sub
sub
adc
push
inc
pop
inc
xchg
pop
insb
mov
inc
movsl
out
cmpsl
jg
sbb
jl
nop
push
xchg
mov
add
mull
mov
imul
xlat
mov
idivb
jg
outsl
add
sbb
adc
insb
aad
jle
inc
test
icebp
mov
pop
std
insb
ja
sahf
cmp
lret
in
je
lahf
jmp
mov
imul
cmpsl
aad
adc
lahf
and
or
ds
leave
inc
aam
out
std
adc
call
aas
or
mov
fldcw
push
and
popa
scas
les
jbe
insb
add
or
scas
fdivl
adc
daa
sub
aas
gs
mov
imul
xchg
jno
pusha
fisttpll
icebp
push
pop
je
lahf
movsb
jl
insl
push
sahf
jp
xor
scas
bound
dec
cwtl
mov
xchg
test
adc
mov
imul
test
pop
inc
jmp
adc
stos
pop
test
stos
mov
les
pop
inc
adc
adc
mov
dec
inc
or
stos
cli
mov
push
loopne
shll
mov
aam
adc
insl
leave
lods
mov
sub
cld
test
sbbb
insb
hlt
mov
and
arpl
inc
dec
call
pusha
dec
sti
jbe
cs
pop
mov
bnd
push
das
scas
xor
jecxz
dec
dec
int3
inc
sbb
adc
aaa
push
or
jbe
mov
add
pop
into
fists
sub
cli
inc
enter
xchg
cmp
stc
pop
daa
push
adc
jns
scas
adc
add
pop
or
and
mov
daa
insb
mov
enter
nop
stos
movsl
add
add
jmp
xor
in
mov
fcmovnbe
lods
rol
sub
push
fsubrl
das
aaa
in
int3
out
inc
xchg
nop
fisubrs
pop
mov
xchg
cmp
inc
dec
xchg
and
cmc
not
sbb
jp
inc
inc
or
jle
popa
or
data16
loop
sub
xchg
je
cwtl
orb
aam
mov
mov
mov
sbb
sub
rclb
or
addr16
mov
add
outsb
push
inc
inc
pop
add
xor
push
icebp
push
imul
jl
mov
mov
loop
sahf
jo
cmp
sbb
mov
jae
pop
sbb
sub
xchg
push
lea
jp
imulb
xor
ret
imul
mov
push
pop
mov
call
mov
dec
jge
stos
jge
shl
cmp
mov
fcmovnu
or
nop
pushf
xchg
add
mov
adc
test
add
mov
daa
jl
push
mov
sar
mov
stc
xchg
mov
in
sub
mov
call
mov
out
push
mov
inc
mov
mov
jl
jae
pop
out
push
add
mov
push
dec
out
dec
hlt
lods
mov
testb
outsb
mov
addb
sbbl
push
test
push
or
xchg
fnstsw
or
push
mov
sti
jb
mov
and
jl
push
sbb
sbb
adc
add
roll
and
add
fcomps
sub
mov
xchg
fdivrl
and
ret
sbbl
push
loope
mov
jnp
mov
xchg
xor
push
xor
mov
xor
lahf
test
jle
cmpsb
repnz
xacquire
xor
lods
je
inc
repnz
pushf
sti
hlt
insl
test
xchg
outsl
pop
scas
leave
and
dec
je
sub
dec
or
adc
pop
stos
jno
sarb
push
movzwl
sbb
insb
push
jmp
mov
mov
nop
mov
xchg
pop
int3
test
lds
call
mov
push
in
or
or
push
nop
cmp
jg
mov
and
sub
adc
daa
call
leave
jp
mov
mov
or
rcrb
mov
test
jg
mov
add
je
jge
stos
test
movsl
in
icebp
inc
xchg
mov
cli
pop
std
leave
in
dec
test
pushf
push
push
push
inc
aam
dec
xor
xchg
lods
xor
data16
shrl
test
inc
pop
mov
push
cmc
pop
shrb
jno
stos
sub
in
in
xchg
jbe
add
test
or
int3
ret
popa
cs
jne
out
int3
inc
xchg
mov
popf
push
jg
or
adc
push
mov
hlt
and
jle
inc
mov
push
das
cmc
add
stos
daa
inc
adc
mov
icebp
ds
push
in
mov
sbb
fcoms
cmp
dec
or
cmp
inc
inc
pop
add
movsb
mov
leave
xchg
inc
adc
inc
jb
push
adc
in
add
xchg
ljmp
lret
sbb
cmp
mov
jb
xchg
lahf
jb
adc
ret
add
fisttps
ret
loopne
sub
and
sbb
sbb
fildll
add
add
mov
shll
dec
fsts
mov
jno
cmp
into
xchg
sahf
add
jp
es
jno
mov
jl
or
and
push
js
xchg
pop
popa
xor
inc
jnp
xchg
in
inc
call
push
push
hlt
std
out
pop
inc
inc
dec
push
xchg
int3
or
or
sub
add
std
out
inc
mov
inc
push
jnp
or
mov
pop
sti
cs
or
andl
loopne
sbb
sbb
xchg
repnz
in
aam
or
in
out
mov
ss
mov
test
jne
add
and
dec
jg
xchg
jnp
das
xlat
pop
dec
adc
pop
or
lret
sti
jge
mov
sbb
call
inc
call
adc
das
dec
or
fldcw
es
iret
clc
das
in
pop
into
cwtl
push
call
repz
pop
push
repz
cmp
push
aad
inc
pop
xor
mov
inc
out
sbb
aas
pushf
scas
sbb
insb
inc
cli
mov
add
lgs
mov
add
repnz
jmp
sub
push
fldcw
outsb
cmpsl
mov
lock
stc
cld
mov
cmp
add
int
sub
or
shlb
sub
add
pushf
sarb
rolb
adc
leave
mov
and
pop
xor
mov
pop
icebp
inc
lock
lret
ficoms
sbb
inc
mov
andb
mov
cmc
subb
loop
addl
stos
push
das
jmp
mov
jle
mov
fstl
sbb
and
add
rorb
push
cmp
das
mov
into
cmp
inc
xor
mov
mov
xor
and
mov
aad
or
sub
or
mov
mov
cmp
arpl
stos
fsts
out
in
ja
adc
mov
push
sub
sbb
cmp
mov
sbb
in
jl
aam
lods
pop
jg
adc
push
lahf
testl
pop
dec
fsubp
imul
pop
jnp
pop
mov
mov
insl
insb
imul
gs
mov
nop
adc
jne
xor
scas
and
mov
mov
je
in
mov
pop
or
inc
inc
or
lcall
cmp
lahf
decl
or
jo
dec
pop
mov
jno
inc
mov
adc
flds
pop
xor
jp
lcall
push
jne
xor
inc
lahf
pop
imul
test
push
jbe
push
push
clc
cmpsb
mov
imul
and
dec
jns
push
repnz
xchg
test
push
dec
sbb
mov
xchg
inc
daa
loope
jge
inc
jmp
fsubl
stos
add
stos
mov
mov
mov
fdivr
add
sbb
inc
mov
or
or
xchg
orl
push
call
pop
lret
sub
mov
sbb
je
frstor
pop
push
inc
and
gs
dec
pop
mov
jae
push
fs
loop
lcall
fdivrs
popf
lahf
call
sti
lods
lds
adc
je
adc
nop
jb
cmp
push
or
clc
imul
shrl
fs
test
ret
xchg
daa
sbb
inc
mulb
adc
lea
push
push
pop
dec
test
fimull
inc
test
sbb
outsb
icebp
jl
cmp
cmp
push
push
iret
pop
test
cmp
adc
stos
lods
fmul
sbb
es
adcb
repz
inc
insl
inc
jo
mov
test
cmpsb
mov
sub
push
or
sub
push
add
lock
push
pushf
mov
dec
pop
dec
sbb
adc
test
or
jp
pop
enter
or
jo
xchg
adc
pushf
inc
dec
inc
pushf
les
pop
sub
lret
or
jmp
repnz
std
call
or
pop
ja
mov
fstpl
adc
lea
pop
incb
in
jmp
cmpl
push
mov
sub
repz
inc
inc
dec
sub
mov
cmp
pop
sub
fcoml
lret
pop
into
fidivs
xchg
fsubrl
in
outsl
add
fiadds
adc
mov
ja
js
jne
in
lret
movsb
or
mov
xlat
daa
loope
cs
stos
push
addr16
cmp
fisttpll
adc
xchg
in
fisubrl
xor
push
nop
callw
int3
xor
xor
movsb
mov
in
mov
or
rcrb
sbb
int3
xor
jmp
sub
call
dec
push
in
jo
cmp
inc
and
scas
add
adc
jbe
imul
lahf
enter
pop
push
cmp
pop
imul
jbe
sti
add
stos
cld
or
aas
mov
out
cmp
pop
adc
aad
dec
pop
jne
push
inc
int3
push
popf
je
insl
fnstcw
jle
xchg
inc
mov
sub
addb
fimuls
cmp
dec
cmpsb
fdiv
call
jae
test
jb
pop
ja
add
fildll
inc
xchg
je
inc
ret
lock
inc
jns
mov
hlt
xor
push
cld
imul
and
clc
push
lds
cwtl
pop
call
or
repz
arpl
add
or
sub
sbb
inc
mov
nop
call
dec
stos
jno
jo
mov
pop
repz
xchg
dec
dec
testb
dec
sub
mov
and
aad
dec
or
or
call
mov
outsl
pop
cld
sub
iret
add
iret
pop
iret
push
add
call
push
xchg
imul
xor
jbe
pusha
push
mov
mov
jne
fiaddl
push
cmp
adc
cmpsb
mov
push
insb
inc
sub
jb
cli
push
pop
xor
mov
sub
push
mov
cmp
dec
xor
aam
inc
cmp
fwait
and
jo
inc
rorl
shll
lahf
xor
add
jge
lods
add
inc
call
or
pusha
leave
lahf
dec
jl
xchg
cli
and
or
mov
cli
jmp
sbb
and
or
push
movsb
mov
mov
aas
popf
xor
pop
jmp
iret
or
add
sbb
inc
sub
sub
stos
pop
xor
cwtl
push
or
push
inc
cs
call
sbb
out
mov
out
imul
and
sbbb
jecxz
or
in
rcll
mov
jb
mov
addr16
ror
or
mov
sahf
data16
addl
das
sbb
fdivrl
fcoms
mov
icebp
lcall
fsubr
cmp
mov
orb
dec
or
dec
decb
jmp
add
out
dec
in
sub
sbb
lea
ret
rcrl
int3
or
adc
lods
push
into
pop
push
dec
sbb
fs
push
mov
sar
inc
add
jns
jbe
inc
jmp
pop
out
mov
das
xchg
lahf
sbb
inc
xchg
add
daa
out
or
push
movsb
fstp
mov
inc
add
pop
cmp
sub
mov
add
ret
and
addl
imul
out
pushf
orb
mov
pop
outsb
mov
outsl
jne
imul
dec
outsl
adc
adcb
movntps
push
xor
or
mov
mov
xchg
stos
rcll
sub
imul
dec
add
push
sub
std
gs
dec
orl
sub
mov
std
xchg
popa
add
inc
lahf
mov
notb
jmp
add
out
loop
jmp
jmp
sub
jno
xor
icebp
inc
mov
js
fdiv
test
pop
mov
or
jmp
cwtl
call
jg
call
sbb
jne
mov
push
testl
jmp
push
mov
cs
mov
loope
sbb
xchg
lret
dec
mov
mov
sahf
imul
xchg
repnz
pop
xchg
cld
adc
cld
testb
mov
stos
bound
jle
lret
fcmovb
sub
xor
add
adc
out
sbb
dec
setb
aad
pop
mov
test
mov
hlt
bound
add
mov
test
in
ret
xor
daa
sub
pop
and
and
dec
xchg
call
mov
les
in
dec
repz
mov
jae
pop
mov
bound
xor
push
shr
pop
mov
or
jbe
xchg
ret
xor
jnp
cmpsl
sbb
imul
mov
fistps
and
pop
loop
out
cmpsl
insb
pop
cmp
jae
mov
jo
pop
call
jecxz
loopne
dec
inc
les
int
test
cmpsl
mov
fimuls
mov
add
es
mov
js
jnp
push
js
mov
mov
xor
inc
xchg
cli
mov
add
cmpsb
cmp
mov
or
mov
push
repnz
mov
das
loopne
loop
outsl
pop
ret
push
adc
cmpsl
lock
and
icebp
xchg
push
sti
lods
and
lds
clc
adc
adc
jo
mov
insb
pop
dec
push
and
or
scas
jmp
stos
push
sub
addr16
and
inc
xchg
add
addr16
or
or
mov
bnd
fidivrs
dec
movsb
cmc
imul
sbb
ds
ret
sub
mov
pop
fadd
pop
pop
mov
cmp
lock
add
js
sub
pop
jge
push
pop
outsb
loop
adc
rolb
xor
out
cld
jge
lock
jecxz
mull
ds
aaa
push
sub
push
xchg
jb
mov
mov
add
int3
fs
dec
xor
mov
mov
push
cmp
xchg
nop
sub
sub
and
sbb
jnp
cmp
jecxz
lds
popf
test
pushf
repz
lock
sbb
or
push
fnstenv
xor
sbb
sbb
inc
into
dec
cmpsl
je
mov
rcrl
and
push
lock
inc
fildll
repz
rorl
pop
mov
pop
jae
lock
fildll
push
or
jmp
lods
jns
notl
jo
es
jmp
pop
jl
or
or
pop
sub
mov
mov
lret
push
inc
mov
cmpsl
test
and
subb
mov
mov
xorl
ljmp
push
add
cli
shrb
clc
dec
push
cld
nop
xchg
hlt
andl
out
mov
xor
cmp
dec
xchg
or
je
das
jl
inc
pop
push
dec
scas
mov
or
scas
or
sub
sbb
pop
or
jns
out
jo
les
repnz
in
cmp
adc
outsb
sub
push
inc
lcall
sbb
adc
or
xchg
add
adc
popa
mov
push
test
out
or
push
orl
cmpsl
mov
mov
int3
push
jo
repz
mov
pop
and
in
sub
divb
mov
mov
add
arpl
mov
rcr
mov
roll
int
push
xor
div
mov
in
shl
popf
and
or
or
push
cwtl
jno
add
fstpl
pop
arpl
lock
in
mov
push
jae
pop
pop
lock
xor
mov
sbb
xor
lret
sti
cmp
and
or
mov
xor
push
jnp
push
adc
or
or
adc
mov
shrl
push
adc
mov
push
jp
jbe
sub
adcl
mov
pop
outsl
jnp
xor
xchg
inc
pop
cwtl
mov
pop
call
ss
mov
pop
sub
and
jb
jne
dec
sub
xchg
int3
mov
xorb
xlat
pop
add
push
pop
lods
lods
mov
enter
ds
or
push
je
push
mov
pop
movsl
bound
add
mov
cmp
or
xchg
sbb
sarl
jo
cli
xor
add
dec
push
push
xchg
jns
mov
sarl
fldt
movsb
and
movsb
jl
test
or
cli
jge
bound
bound
push
lds
pop
push
inc
es
dec
andb
pop
mov
cmp
rcrb
push
std
and
out
bnd
xorl
sub
dec
mov
je
mov
pop
lods
mov
aad
dec
sarl
loop,pt
lock
iret
ljmp
or
xchg
lcall
dec
std
xchg
mov
sub
nop
lock
push
popf
cmp
es
add
stc
mov
adc
mov
out
cmpsl
shll
push
rclb
bnd
and
out
or
add
and
jne
stc
mov
or
int
pop
outsb
int
push
popl
inc
jl
inc
ds
xchg
int3
jmp
jmp
dec
sbb
mov
test
push
mov
lea
sub
mov
xchg
outsb
addb
mov
inc
sbb
xor
push
pop
neg
pop
cmp
ja
pop
mov
call
ret
push
push
add
and
or
mov
dec
pop
pop
jne
stos
iret
jne
jmp
push
pop
pop
movsb
lods
add
ret
mov
mov
icebp
add
les
es
mov
lea
xor
push
mov
cmp
push
repnz
mov
std
inc
leave
test
cmp
sbb
or
std
push
add
out
aaa
add
adc
inc
repz
aaa
lods
fdivl
cmp
jmp
insb
mov
add
mov
sbb
xchg
nop
call
sbb
push
sbb
incl
push
jne
mov
movsb
cs
add
mov
sub
pop
adc
xchg
add
adc
enter
cltd
mov
daa
hlt
jne
pushf
int
jle
push
pop
sbb
ret
dec
mov
adc
jmp
jb
pop
inc
rcll
mov
test
int3
adc
push
mov
push
mov
xchg
idivl
insb
ret
cmc
xchg
dec
add
adc
cmp
roll
je
leave
es
xchg
xchg
scas
push
popf
cmp
sbb
adc
jo
pop
inc
cld
jg
jge
arpl
or
mov
dec
cmpsb
enter
jle
mov
mov
inc
inc
dec
repz
jmp
push
inc
jge
pop
pop
mov
push
sub
shl
inc
mov
adc
andb
dec
loop
or
push
push
cmp
jmp
mov
call
mov
cmc
pusha
pop
repnz
fsubrs
fstpl
lods
jns
outsb
inc
sbb
mov
adcb
jae
loop
jno
add
mov
cs
and
das
mov
popa
repnz
movsl
fmull
mov
or
cs
ret
lea
cwtl
into
xorb
es
sahf
test
lock
push
nop
adc
fsubrl
mov
enter
cmpsl
or
xlat
and
mov
stos
fmuls
lcall
inc
jbe
pop
mov
push
pop
lahf
imul
or
xor
push
cwtl
imul
mov
mov
jle
jbe
inc
out
loopne
adc
push
pop
pop
inc
jge
int
andb
xchg
les
sbb
cmpsb
sbb
sub
lahf
orb
bound
aad
mov
test
jp
iret
clc
mov
mov
inc
pushf
jmp
sar
in
mov
inc
mov
mov
mov
xor
negb
mov
icebp
fdivrl
adc
or
aam
adc
jae
sbb
push
pop
inc
add
daa
lods
popf
push
jno
ja
adc
mov
xchg
cmp
jno
stos
xchg
xchg
outsl
rolb
push
pop
xchg
jmp
stc
int3
fiaddl
call
pop
nop
pop
imul
adc
ds
inc
mov
mov
mov
mov
call
mov
xor
mov
popf
sbb
aaa
loop
fldcw
mov
shll
or
call
std
inc
cmp
mov
or
xchg
rclb
inc
call
cmpsb
rol
inc
xchg
sbb
push
out
leave
lods
aam
push
in
clc
sbb
dec
mov
or
jno
outsl
add
testl
push
or
divl
nop
mov
dec
xor
pop
jo
inc
inc
rcr
popa
jnp
add
sahf
aaa
pop
add
addr16
add
push
mov
icebp
mov
sbb
out
cwtl
add
lods
cmpb
mulb
out
cwtl
xchg
andb
mov
hlt
rclb
pop
lods
mov
lahf
shrb
pusha
stc
test
shrd
mov
scas
jbe
pop
sub
rorb
hlt
lods
int3
jge
mov
movsl
nop
fwait
sbb
out
sbb
test
fsubrp
push
mov
xchg
shll
loope
mov
es
das
cmp
lods
mov
and
jecxz
push
movsb
sub
fisubs
lret
gs
int3
cmp
mov
cli
lahf
cld
push
test
pop
js
add
bsf
and
or
add
pusha
sbb
imul
fcmovbe
fsubl
lahf
into
mov
mov
or
adc
hlt
loop
mov
push
mov
inc
mov
mov
fs
out
inc
repnz
bound
loop
sbb
in
and
mov
push
ret
jmp
das
faddp
shlb
mov
pop
adc
testb
mov
dec
add
rcrb
adc
mov
xor
pushf
sahf
pop
xorb
and
push
jmp
loope
cmp
push
and
xor
rol
in
mov
ss
or
and
lds
push
mov
and
cvtps2pd
imul
sub
fxch
mov
inc
xorl
sbb
xchg
and
sbb
popa
and
xchg
mov
loop
inc
imul
jo
jns
sub
ljmp
fistpll
xchg
mul
test
xchg
cmp
xor
push
mov
les
xchg
idiv
xchg
jmp
icebp
sub
or
jmp
and
cld
or
popa
jb
jl
cmpsl
lret
arpl
cmp
or
add
pop
mov
daa
negl
bound
mov
cmpsl
loop
call
or
ret
jb
jae
dec
sbb
jns
add
xchg
inc
jne
adc
sub
std
lods
jo
push
aad
pushf
and
mov
lods
add
arpl
xor
rorb
push
add
arpl
daa
mov
pop
sbb
dec
adc
xor
jnp
jle
sub
cmp
lods
adc
xor
jnp
cli
in
jo
sti
push
xchg
lods
push
sbb
mov
aad
xorb
xor
mov
imul
fcompl
mov
pop
and
mov
loope
lock
or
outsl
mov
push
not
int3
adc
push
stc
sub
mov
or
ljmp
aas
orb
xor
call
or
nop
lds
jnp
in
pop
lret
dec
and
sbb
cmp
es
sarb
inc
mov
jecxz
mov
inc
xor
mov
dec
sbb
mov
nop
xor
dec
jmp
mov
or
dec
outsb
rorl
orb
imul
sub
add
cmpsb
cmp
xor
and
or
inc
mov
lea
loope
mov
pop
orb
bound
and
dec
cld
aam
mov
divl
jne
dec
in
mov
inc
in
repnz
jmp
and
inc
test
ret
out
xchg
sahf
in
fmull
or
test
mov
inc
push
insl
xchg
adc
xchg
lods
xor
cmp
les
ficomps
mov
push
jmp
pop
sbb
xor
in
add
sbb
in
iret
mov
adc
test
lret
or
push
fstpl
out
pop
leave
sub
mov
je
int3
push
pop
sub
lods
cli
rorl
xor
push
icebp
sub
jge
ljmp
jmp
fidivl
scas
mov
stc
mov
jg
cwtl
mov
fcompl
imul
xchg
clc
sbbb
add
sub
pop
jge
jle
dec
popf
xor
dec
std
outsb
push
or
jmp
push
xlat
inc
inc
jp
pop
mov
enter
cmp
xor
gs
push
adc
add
icebp
fisubrs
and
pusha
push
or
test
xor
ds
mov
mov
push
sub
popa
fisttpl
fdivrs
push
add
adc
jae
jmp
push
pop
lods
je
or
ljmp
mov
xor
adc
xchg
hlt
xchg
pop
aas
adcl
or
scas
xor
sti
sbb
ljmp
in
test
mov
enter
xor
sub
fdivs
inc
mov
fsubr
out
clc
push
mov
in
mov
or
in
lock
mov
dec
inc
or
dec
dec
fisubrl
insb
cmp
jl
push
sti
push
jl
ja
sub
inc
pop
sub
stos
adc
pop
push
cmp
lret
test
mov
subl
and
jmp
mov
mov
lds
out
and
sub
adcb
sti
or
jnp
pop
aaa
test
dec
sbbb
xchg
clc
push
mov
mov
fwait
mov
call
xor
hlt
add
add
lahf
pop
push
loopne
push
movsb
out
cmp
mov
jnp
mov
xchg
lret
or
push
enter
adc
cld
or
inc
or
inc
fs
lods
inc
push
repz
cltd
pop
jnp
sub
inc
dec
mov
jmp
std
lret
pop
call
cmpsb
push
insl
mov
mov
push
cmpl
inc
in
jb
fmuls
pop
hlt
mov
and
sbbb
sahf
push
fsubl
nop
sahf
sub
sub
iret
ja
or
mov
mov
dec
insb
adc
cs
push
push
jbe
lret
or
sbb
mov
xor
gs
lds
jmp
sub
je
in
inc
lods
dec
es
pop
shlb
jmp
mov
xchg
int
xorb
pop
pop
sub
jle
cmpsb
sbb
mov
enter
pop
loopne
xchg
mov
mov
imul
lret
xchg
sub
js
lds
stc
jmp
mov
adc
lret
cmp
xor
ret
test
and
xchg
scas
push
inc
cmp
popa
lret
icebp
push
jmp
es
xchg
and
jae
test
lret
sbb
sbb
call
in
adc
xor
popf
adc
xor
std
mov
aas
sub
or
aas
sub
lds
scas
popa
xchg
popa
lds
or
sub
adc
mov
pushl
jmp
mov
nop
lret
and
adc
mov
das
out
jnp
popa
pop
mov
jmp
or
cmp
adc
sub
inc
testb
jmp
xor
pextrw
add
xlat
xchg
lock
idivb
popa
test
lea
push
mov
xor
push
mov
lret
push
inc
mov
push
and
mov
das
dec
mov
sahf
popf
mov
xor
pusha
lods
js
dec
add
mov
decl
jge,pn
xor
or
mov
inc
in
js
push
ret
jo
ficoms
xlat
in
sbb
bound
and
mov
js
dec
leave
loop
jae
mov
lds
bnd
into
adc
jo
jb
add
test
xor
call
into
push
dec
xchg
or
inc
in
or
cltd
jecxz
nop
or
push
aam
mov
push
out
lods
subb
pop
push
mov
mov
rcll
mov
and
es
or
imul
add
mov
push
jl
add
or
test
jmp
es
test
xchg
into
add
in
fsts
pop
xor
push
dec
jmp
xchg
pop
fisttpll
fcomps
push
mov
and
mov
mov
iret
lds
lods
xchg
xor
scas
and
and
mov
inc
repz
data16
dec
scas
fisttpl
push
push
fidivl
inc
mov
mov
mov
or
adc
enter
push
mov
cld
popl
xchg
aas
gs
and
dec
push
sbbb
lea
push
pusha
dec
cmpb
je
mov
aas
loopne
or
push
aam
lret
js
popf
and
pop
sarl
dec
out
xchg
pop
sbb
sbb
cld
mov
dec
mov
ret
std
mov
push
cmc
leave
mul
ss
jo
call
jmp
sbb
adc
jo
cmp
xchg
mov
cs
inc
cmpsl
push
nop
stos
jmp
cmp
xor
push
push
push
push
dec
xchg
lock
test
mov
xor
inc
jbe
cmp
jno
shrb
mov
inc
repnz
nop
push
ja
cmp
lds
or
pop
push
in
sbb
cmpsb
sbbl
push
jge
dec
inc
nop
pop
and
daa
lock
out
push
mov
dec
insb
sbb
add
movsb
cmc
pop
cwtl
daa
int3
pop
or
add
dec
std
call
leave
inc
sub
sub
idiv
popa
inc
data16
hlt
xchg
inc
xchg
sub
outsb
ret
leave
dec
add
int
pusha
into
xor
jmp
and
repnz
outsl
cs
call
mov
cmp
icebp
jl
or
addb
fnsave
out
sub
mov
dec
pop
call
jmp
add
or
hlt
push
xor
push
incb
sub
mov
je
xor
rorl
mov
ja
sbb
out
lret
mov
out
loope
int3
das
push
clc
or
test
repz
push
push
mov
ljmp
add
pop
jmp
push
adc
jbe
cld
movsb
std
les
int3
cmpsl
add
and
pop
inc
fdiv
sbb
stos
insl
test
pusha
cmp
call
mov
sahf
and
xchg
sub
popa
cmp
popf
add
xchg
add
pop
xor
repnz
push
push
ds
pop
or
jmp
xchg
jecxz
push
rol
popf
pop
xchg
mov
call
ja
pushf
rcl
mov
and
cli
lcall
xchg
push
sbbl
icebp
scas
lret
fidivs
subb
dec
adc
push
insb
mov
cld
std
or
push
imul
or
call
and
add
push
test
pop
ret
repz
test
push
aas
or
jmp
mov
lods
stos
lods
and
push
daa
jmp
aad
jl
or
lods
lret
or
mov
push
xchg
js
int3
in
add
or
jmp
repz
imul
jo
clc
dec
arpl
mov
jmp
popf
mov
or
ficomps
push
adc
pop
cmp
push
cs
cmp
and
cmpsb
rcll
xchg
out
das
or
jmp
negb
in
xchg
cmpsl
pop
popf
pop
mov
xchg
das
xor
mov
loop
cmpsb
inc
pop
inc
das
pusha
pop
repnz
bound
jg
fnstenv
testl
dec
std
dec
push
bound
pop
fbstp
lahf
loop
and
push
xlat
sbb
sbb
xchg
mov
rorb
inc
adc
aad
ficompl
xor
sbb
mov
int3
push
jmp
sahf
inc
mov
das
mov
adc
cmpl
cwtl
push
addr16
mov
rorl
andb
ja
sbb
inc
adc
inc
mov
std
sbb
mov
xor
lock
sahf
orb
iret
jno
mov
imul
sbb
jb
outsb
or
push
adc
xor
fimuls
lret
or
add
test
je
or
inc
or
jbe
xchg
jmp
xchg
cmpsl
out
push
adc
add
sub
xor
add
pop
xorb
mov
call
movsb
in
scas
fnstcw
loopne
mov
repnz
sti
jle
std
cwtl
out
incl
negl
mov
mov
jp
cwtl
aaa
jno
push
mov
pop
sti
jns
pop
push
jmp
dec
cmp
or
enter
and
mov
iret
mov
mov
mov
jno
sbbb
cwtl
lahf
jno
mov
aaa
jmp
mov
insb
pop
mov
pop
sti
and
popa
lahf
jl
jb
inc
jge
pop
mov
jle
enter
xchg
xor
jge
adcb
rcl
out
push
xchg
das
pop
or
cwtl
mov
sbb
push
jmp
out
mov
pop
inc
call
jle
ret
xor
xchg
adcb
jmp
inc
inc
sub
pop
scas
or
cs
adc
adc
sbb
mov
or
daa
dec
or
cmp
jb
mov
adc
xor
add
inc
pop
mov
dec
je
std
lea
adc
adc
cmp
mov
call
push
sti
xchg
outsl
inc
sub
cmc
cmc
icebp
pusha
push
inc
psubsw
loop
or
lods
in
xchg
aam
cmp
call
lods
jnp
adc
test
adc
jecxz
cmp
fwait
inc
push
xor
sbb
adcb
inc
popf
fsub
or
xor
imul
repnz
push
pop
xchg
pop
hlt
xchg
in
fwait
aam
repz
sbb
outsl
add
fsts
inc
loopne
sbb
push
pop
rolb
fs
out
xor
pop
mov
mov
lods
loop
testl
xchg
sti
cld
cltd
mov
sbb
ja
lods
sar
pop
jmp
cwtl
mov
dec
mov
push
inc
lods
fdivl
add
popa
mov
add
pop
sahf
mov
fcmovu
rolb
dec
xlat
aas
mov
stc
xorb
fs
xchg
out
sbb
fstpl
push
dec
and
pop
push
jb
enter
jle
or
cmp
das
movsb
cmpsb
fs
es
jo
push
mov
mov
subl
icebp
movsl
outsb
cli
das
xor
pop
ja
mov
sbb
sbb
cmpb
in
sbb
jns
shr
push
mov
mov
hlt
inc
sbb
pusha
or
orl
or
faddl
aas
dec
adc
or
pop
or
and
cmpsl
dec
aaa
cmpsl
insl
jge
bound
int
imulb
mov
leave
adc
mov
iret
dec
xor
sbb
subb
into
ret
push
mov
push
out
mov
out
add
adc
adc
xor
loopne
call
mov
rorl
sub
icebp
mov
and
sti
gs
cmp
sahf
fcmove
adc
ja
xor
ljmp
and
punpckhdq
mov
jns
insl
jae
outsl
mov
cmp
sub
leave
repz
cmp
pusha
enter
rcrb
push
inc
shrb
adc
fists
divl
sbb
fsubr
adc
xchg
addr16
jne
shl
test
sbb
cwtl
test
and
xlat
inc
dec
jno
sar
or
jp
int3
repnz
js,pt
inc
push
shr
mov
enter
push
pop
test
or
dec
call
cmp
lods
fisubs
mov
add
add
scas
lahf
pop
dec
sub
mov
icebp
fstl
out
inc
mov
inc
adc
repz
ret
xchg
push
cmp
lret
add
ror
mov
push
jp
mov
outsb
xchg
mov
mov
push
jle
pop
mov
xchg
pop
cmp
dec
xor
lea
dec
daa
out
inc
pop
andb
test
xorb
dec
push
jmp
arpl
xchg
int3
pop
repz
lea
out
xorb
pop
add
xchg
in
std
mov
pushf
test
cmp
jbe
inc
jnp
or
cld
mov
loop
ss
and
test
xchg
call
insb
or
lahf
aaa
push
pop
aas
mov
lahf
fdivrl
movsb
rorl
int3
sub
add
mov
push
mov
daa
xchg
lret
pop
mov
imul
clc
sti
push
enter
repz
adc
adc
test
lds
scas
loope
push
sbb
mov
xchg
lods
dec
fsubr
and
mov
popf
pusha
stos
adc
mov
xor
mov
xor
cld
inc
adc
ret
jo
dec
dec
mov
ljmp
and
push
hlt
arpl
enter
push
or
dec
jbe
fiaddl
lods
sub
sub
ja
pusha
repnz
adc
jmp
mov
pop
sub
and
cmp
test
inc
aas
jmp
pop
inc
mov
dec
adc
pop
jmp
push
add
cmpsb
jl
cmpsb
xchg
jbe
arpl
call
jmp
cld
movsb
addr16
sarb
repnz
rorl
mov
mov
inc
sbb
scas
icebp
repz
jne
fidivl
inc
inc
dec
inc
das
mov
pop
call
jecxz
mull
push
iret
pop
jmp
nop
xchg
jne
cltd
adc
leave
arpl
mov
in
or
and
push
ror
cmp
adc
sub
jnp
lahf
aad
mov
mov
lret
ficompl
sub
sbbb
push
gs
jmp
or
ljmp
inc
xor
sub
xor
hlt
dec
adc
or
fs
ret
sub
pop
ja
push
dec
out
repz
or
adc
mov
je
std
push
daa
xchg
mov
frstpm(287
or
xchg
repz
jp
inc
mov
sub
push
push
jbe
push
adc
dec
shll
ds
stc
cmp
fdiv
jno
mov
iret
xchg
cs
push
repz
jmp
inc
adc
outsl
mov
jge
jmp
and
icebp
test
mov
mov
mov
cli
cmp
icebp
cs
filds
sub
sbb
jmp
testb
push
lods
pop
sub
xchg
ss
rcrl
jge
or
dec
out
or
xor
movsb
sub
push
jge
mov
jnp
ret
fidivrl
or
sub
sub
xlat
shll
call
push
mov
hlt
or
and
xlat
or
sub
push
std
sbb
fldenv
sub
cmp
mov
mov
mov
into
and
ds
push
adc
dec
repnz
xchg
or
jne
ret
inc
pop
mov
daa
fistps
mov
push
idiv
inc
xchg
jle
inc
icebp
xchg
add
jne
xor
pop
sbb
scas
xchg
push
xchg
xor
movl
bnd
mov
jno
imul
jmp
sbb
ud2
shll
inc
insl
push
fidivl
movsl
test
jae
bound
xchg
adc
inc
xchg
mov
cmpb
jecxz
mov
pop
fdivl
pop
nop
mov
ret
loop
or
shll
mov
dec
mov
push
subl
lret
push
xor
or
inc
xchg
jo
shrl
loope
cmp
sti
jle
nop
popf
jmp
mov
xchg
je
imul
jmp
fdivrl
repnz
loope
jo
push
mov
lea
andb
flds
leave
sbb
js
jg
mov
andb
outsb
cmp
insb
sar
pop
push
cmpsb
dec
stos
and
pop
scas
nop
sti
push
dec
inc
icebp
mov
jb
test
fsubr
lcall
inc
sbb
sbb
int
mov
aam
sub
jae
js
jns
or
or
pop
lds
loopne
pushl
fwait
mov
pop
or
lret
inc
sarl
sti
inc
in
insl
std
jg
lret
jbe
das
dec
mov
jno
jmp
pop
cltd
mov
orb
xchg
add
mov
ja
mov
jmp
push
in
insb
pop
hlt
adc
dec
jbe
inc
lods
es
sub
xchg
xorb
sahf
test
mov
stos
mov
aaa
mov
pop
mov
sub
xchg
lcall
sbb
gs
das
outsb
mov
add
mov
addl
xchg
sub
ja
add
add
loopne
adc
call
inc
pushf
icebp
inc
xchg
push
jmp
rcrb
in
inc
cmpsl
push
add
loopne
jb
pop
enter
sar
cmp
movsb
loope
mov
dec
movsl
hlt
push
add
in
mov
jo
pop
addb
shll
popf
lea
adc
les
test
cmp
rol
push
adc
adc
mov
add
mov
cld
loop
gs
and
mov
xchg
lods
pop
mov
pop
daa
sbb
sahf
sub
mov
push
repnz
push
std
jmp
daa
jle
rolb
push
push
dec
push
std
mov
in
mov
and
fidivs
add
fsubr
lahf
aam
outsl
mov
pusha
xchg
enter
call
in
sub
ficomps
sbb
fsubs
ficoms
aas
aam
repnz
pop
push
or
std
jns
push
add
inc
push
ja
outsl
mov
and
orl
jae
mov
xchg
mov
scas
gs
test
push
jle
mov
xchg
cmp
sub
fmull
inc
push
sbb
mov
call
add
and
clc
xchg
cld
icebp
outsb
pop
add
mov
cmp
sbb
insl
xchg
loope
mov
jne
push
xor
mov
loope
xchg
filds
xor
into
or
push
ss
mov
rcrb
fs
pop
mov
rorl
jmp
dec
xor
es
jmp
es
ret
icebp
push
arpl
cmpsb
popa
cwtl
into
mov
iret
push
popf
incl
jmp
fdivrp
cli
ret
inc
bnd
add
fsubr
incb
sub
dec
movsb
popf
lods
push
ljmp
jmp
scas
insb
stc
gs
jge
push
aas
iret
jns
jb
push
pop
dec
aaa
jle
xchg
and
fistl
add
ucomiss
hlt
mov
pop
and
je
call
mov
push
pop
jmp
xchg
insb
mov
outsb
movsl
adc
mov
stos
or
xchg
cltd
ficompl
out
hlt
cwtl
mov
popf
or
or
imul
loop
or
mov
mov
xor
lods
pop
push
mov
xor
fstl
int3
mov
adc
and
xchg
je
jo
shrl
fwait
dec
out
bound
or
dec
or
jnp
jp
push
adc
ds
pop
cmpsl
pop
leave
sbb
fistpl
push
ret
push
dec
in
fnstsw
jg
xchg
dec
xchg
aad
jo,pn
mov
push
mov
xor
ret
imul
or
das
faddl
cwtl
fisttps
mov
jmp
loop
and
je
mov
push
jp
lds
or
mov
sbbl
add
fiaddl
icebp
aam
lahf
pop
adc
cwtl
incb
leave
mov
jnp
addr16
sti
insb
sahf
cwtl
rcll
jo
hlt
or
dec
daa
push
pop
sti
scas
shl
pop
mov
scas
fidivl
mov
sub
push
push
push
or
cmc
xchg
nop
add
push
xchg
jno
cmp
sub
fldcw
orl
dec
xchg
xor
jl
inc
pop
jbe
lea
dec
loopne
jecxz
inc
loopne
inc
add
cmc
divl
cld
add
adc
dec
icebp
hlt
xchg
mov
icebp
sub
call
pop
inc
out
lods
mov
call
push
ljmp
dec
mov
jns
scas
or
add
out
push
jmp
pusha
test
out
je
xlat
cltd
add
or
addb
push
adc
xchg
dec
cs
sbb
adc
outsb
sbb
pop
movsb
sbb
dec
mov
out
push
into
fadds
cs
pop
movsl
pop
and
lea
sbb
scas
fadds
adc
pop
push
shll
or
cmp
add
out
and
mov
push
mov
rorb
cltd
sub
scas
mov
jg
into
push
icebp
imul
lock
mov
mov
cwtl
mov
and
pop
pop
repz
add
xchg
shl
inc
imul
rcrl
adc
mov
cmc
add
aam
jmp
push
mov
mov
add
jno
and
mov
pop
fwait
out
jb
aad
popf
and
fisubs
negb
in
push
pop
addb
ret
sub
push
adcl
push
mov
xor
ds
or
push
outsb
xchg
xor
das
add
js
pop
fcoms
in
lods
mov
in
add
cmpsb
and
inc
cltd
test
jmp
test
adc
or
mov
adc
shrb
adc
sbb
int
dec
cmp
lcall
popa
repz
call
jno
cli
pop
add
pop
jbe
or
daa
ljmp
jno
cmpsl
gs
dec
and
fnstsw
xor
jl
adc
stc
inc
cmpsl
inc
mov
cmp
je
push
scas
xchg
cli
das
push
daa
iret
call
jmp
pop
xchg
hlt
xchg
imul
push
rolb
insl
lcall
mov
negb
add
inc
scas
push
and
jmp
enter
adc
xor
mov
fistpl
jo
dec
clc
lds
sarl
mov
dec
and
icebp
mov
ficoms
call
inc
notl
ss
int3
mov
sbb
shll
jmp
or
lods
add
repz
push
inc
jl
jecxz
inc
xchg
xchg
loope
cmpsb
inc
jne
repz
out
jecxz
lret
jecxz
push
mov
push
cmpsb
leave
sbb
cmp
pop
inc
sbb
popf
mov
mov
repnz
pop
call
mov
call
inc
popf
jg
mov
es
mov
cmc
jb
pop
lea
fs
sbb
mov
shlb
js
pop
or
mov
fcomip
pop
repnz
jno
and
lcall
adc
push
mov
dec
addb
or
daa
pop
pop
sbbl
cmpb
xchg
xchg
push
jb
rorb
das
or
dec
mov
mov
fdiv
push
jne
jns
cmp
out
or
pop
std
mov
cld
lahf
dec
push
aad
addr16
sub
xor
mov
and
lcall
or
adc
pop
int3
push
cmpb
jbe
inc
pop
jmp
stc
jg
scas
push
roll
dec
rcll
push
scas
sbb
movsl
inc
in
add
or
dec
inc
mov
out
stos
cli
inc
xorb
enter
test
jmp
or
in
xor
out
or
add
fdivrl
xor
loope
call
jle
seto
cmpsl
insb
inc
xchg
and
or
mov
cmpsb
mov
jns
mov
pusha
xor
inc
mov
pop
sub
sub
loope
push
mov
movb
out
xor
into
push
sbb
sarb
popf
outsb
xor
jo
xorl
jl
inc
das
ud1
xchg
sti
add
ss
dec
push
mov
pop
jns
cmpsl
popa
orb
mov
fcoml
pop
enter
pop
or
xor
test
mov
cmp
lret
xor
adc
mov
push
cmp
sbb
xlat
aaa
mov
cltd
and
xorb
sub
sub
sti
call
loopne
icebp
test
lahf
cmpl
sbb
dec
dec
test
mov
icebp
inc
mov
lahf
mov
aaa
movsl
loop
sti
pop
test
push
jb
cmp
lods
and
mov
mov
repnz
arpl
fistps
lock
lcall
inc
imul
pop
sbb
pushf
cmp
adcb
iret
mov
push
dec
jge
add
rcrb
or
inc
pop
or
push
add
cmp
hlt
jp
popf
mov
cs
xor
push
jns
mov
xchg
mov
filds
add
das
lret
add
les
cmp
push
call
fldpi
scas
push
add
sbb
inc
ret
mov
push
not
xchg
mov
pop
pop
mov
fisubrl
ds
jl
lret
push
hlt
or
jle
push
scas
pop
pushf
jmp
sub
pop
dec
cld
dec
push
jmp
dec
dec
or
lcall
mov
and
jmp
sbb
repnz
push
mov
add
jno
sub
call
outsl
movsl
int
mov
mov
xchg
cwtl
pop
lock
fildll
pop
loope
iret
cmp
pop
add
and
ds
scas
in
xchg
xchg
call
adc
ja
sub
lods
int3
jo
add
inc
clc
pop
mov
loopne
mov
call
lahf
push
andl
pop
outsl
mov
and
xchg
inc
or
inc
lock
ret
ss
fldt
and
leave
gs
add
or
fstps
ss
pop
and
jmp
pop
pushf
outsb
pop
xchg
inc
mov
nop
xchg
lods
add
mov
or
aam
jmp
mov
push
add
mov
mov
call
repz
jmp
pushl
cmp
mov
pop
call
or
push
scas
push
hlt
fisttpl
xorl
mov
mov
push
dec
rorb
lods
int
lock
cs
call
into
scas
xor
cmp
dec
cmpsl
lds
ja
xor
dec
push
fistps
sub
pop
jne
adc
xchg
pop
rcrl
or
adc
pop
dec
daa
xlat
push
push
dec
push
clc
xchg
jns
jno
or
call
insl
pop
cwtl
jne
dec
lret
jb
inc
ja
xor
dec
pop
cmc
scas
sbb
cld
sub
out
or
aad
fs
pop
xchg
mov
xor
pop
sub
pop
or
adc
inc
xor
push
in
mov
adc
enter
mov
sub
pop
cmp
sbb
xor
cwtl
cli
inc
push
subl
movzbl
mov
mov
xor
es
in
das
pop
jmp
sarl
shrb
pop
sub
mov
jmp
mov
jmp
insl
je,pt
movsb
or
call
lock
es
sbb
sti
int
adc
jns
dec
out
mov
popf
mov
xorb
jl
xchg
or
push
push
mov
dec
sub
fidivs
or
repnz
push
outsb
or
daa
bound
xchg
jb
insl
repnz
or
jb
mov
imul
jp
push
jmp
enter
dec
les
std
jge
inc
push
dec
or
and
adc
cmp
ljmp
mov
ljmp
and
pop
mov
pop
xor
jae
mov
jne
cmp
ret
popa
mov
xchg
xchg
and
dec
push
enter
stc
pop
xor
inc
pop
sub
mov
out
jbe
xchg
iret
or
fdivl
dec
xor
xlat
fldcw
mov
sub
sti
adc
lsl
rcr
xchg
insb
or
add
push
mov
orb
xchg
mov
ljmp
sub
scas
je
mov
push
pop
xchg
cmp
jl
inc
pop
mov
out
cld
aaa
mov
mov
inc
dec
and
lret
rorb
mov
roll
xor
mov
push
das
aad
jge
xchg
sub
cmp
mov
insl
and
push
add
ljmp
inc
call
test
xorb
pop
mov
rcl
jmp
mov
push
inc
dec
mov
in
pop
call
jmp
mov
and
sub
xchg
xchg
int
test
mov
cmp
cmp
cs
mov
mov
pop
pusha
scas
pop
cmp
sbb
inc
dec
daa
sub
inc
out
cmpsb
sbb
gs
pop
mov
sbb
pop
mov
iret
test
call
pop
cmp
pop
popa
es
mov
or
inc
aad
push
pop
dec
std
mov
mov
pop
push
aas
pop
es
out
js
mov
pop
inc
cmp
jg
mov
nop
push
push
clc
dec
lret
xor
icebp
mov
mov
pop
repnz
jl
mov
mov
or
adc
in
or
ja
cmp
cwtl
mov
inc
dec
mov
push
sbb
adc
cmc
adc
nop
enter
cwtl
mov
jmp
cmp
jb
jb
push
jmp
flds
push
add
cwtl
negl
leave
imul
add
and
sub
nop
cmp
mov
adc
cmp
repnz
popf
je
cs
or
ds
cmp
call
shlb
mov
es
cmp
mov
fcomps
mov
pop
push
dec
imul
mov
popa
dec
or
sbb
or
mov
sti
or
sub
mov
and
testb
pop
xchg
into
sub
mov
xchg
or
fst
push
dec
or
fdivrp
adc
mov
fdivl
lock
mov
stc
insb
sti
lea
inc
repnz
mov
daa
xchg
jnp
test
adc
out
pop
aaa
loope
sub
jmp
movsl
loope
jmp
cmp
push
dec
mov
dec
sahf
jb
push
cmpsl
xchg
ret
test
xlat
mov
pop
jb
jle
push
sub
out
jne
movsb
dec
jne
cmp
mov
add
xor
das
arpl
dec
mov
test
std
mov
es
call
cmpsb
das
or
sub
repnz
adc
mov
push
cli
mov
mov
xchg
in
mov
xchg
outsb
lods
repz
mov
fmul
or
stos
mov
push
call
fwait
jp
mov
jmp
into
pop
mov
or
fwait
add
popl
fs
and
push
push
mov
rclb
mov
call
adc
movb
mov
jb
repnz
and
adc
push
lcall
std
lods
out
push
sub
sub
mov
mov
shlb
es
push
or
pop
cwtl
jne
int3
pop
jo
jb
lret
sbb
inc
lock
sbb
mov
xor
rcrb
cmp
call
or
std
in
movsb
sub
and
repnz
push
call
or
aaa
inc
mov
iret
and
in
xor
repnz
xor
ss
xor
or
imul
shl
mov
insb
out
adc
inc
idiv
cmp
ljmp
push
dec
cmp
pop
inc
mov
xchg
cmp
data16
cmp
mov
pop
pop
bound
dec
aam
pop
mov
in
cmpsl
inc
ja
dec
jmp
insb
int
lret
call
rolb
das
movsl
dec
or
insl
mov
insl
push
into
outsb
lret
bound
and
lods
pop
xchg
rcrb
in
mov
adc
jns
lods
fsubp
push
add
rcll
xchg
mov
push
push
mov
xor
adc
cmpsb
sbb
ss
sbb
push
call
cmc
mov
cmp
mov
mov
push
sarb
popf
xor
jne
or
int3
dec
out
sub
lcall
xlat
fimuls
or
cli
in
jge
scas
cli
stos
mov
pop
jmp
repnz
pop
sub
jge
push
dec
stc
orl
inc
dec
or
xlat
sarl
mov
in
xchg
call
inc
ret
mov
sub
xor
insb
push
mov
test
add
sbbb
rclb
cmpsb
add
jmp
jb
add
and
out
fwait
or
cmp
jne
stos
shr
and
push
icebp
or
mov
dec
pop
sub
inc
lods
cmpsb
mov
stos
and
inc
in
or
push
sub
jae
pusha
scas
add
es
mov
mul
mov
fisubrl
out
jo
mov
enter
daa
and
mov
push
out
xchg
jmp
push
sbb
push
loopne
sarl
lret
jmp
cltd
add
pop
pop
pop
movsb
or
push
or
add
fucomip
add
jne
psubsw
dec
mov
mov
sub
push
or
mov
aas
jbe
dec
cmpsb
hlt
icebp
fistps
add
dec
je
orb
ss
mov
push
mov
pop
and
xchg
lahf
jb
fwait
icebp
jge
and
xor
popl
xchg
int
mov
jnp
cld
push
mov
ljmp
adc
insb
adc
daa
or
aam
mov
add
pop
jmp
add
repz
cli
or
pop
cli
les
bnd
mov
mov
call
sub
sub
pop
or
jmp
popf
cmpsb
mov
das
mov
jns
inc
jecxz
sahf
sbb
call
sub
sahf
inc
inc
sub
mov
cmp
fbstp
mov
repnz
mov
mov
in
push
dec
xchg
inc
sub
loop
repnz
call
jns
and
cmp
jo
int3
ljmp
cmp
repnz
mov
or
sub
mov
and
mov
stc
ds
jo
pop
subb
push
sub
pop
iret
jmp
int
sub
add
and
and
mov
iret
jns
push
pop
fwait
popa
inc
test
mov
mov
mov
mov
call
cmpsb
fadds
std
push
stos
adc
out
adc
push
or
dec
adc
pop
xor
pop
add
loopne
in
aaa
ret
aad
cmp
and
inc
out
mov
cmpsb
add
dec
mov
aas
push
fcomps
add
cmp
add
and
das
pop
es
mov
repnz
push
add
mov
add
jle
mov
dec
dec
repz
push
dec
mov
mov
test
sbb
das
mov
inc
mov
cmpsl
lea
mov
mov
sbb
test
mov
mov
xchg
cmp
hlt
xor
lea
push
jnp
fldcw
rorb
pushl
xor
add
inc
int3
and
icebp
dec
es
mov
cld
addl
sub
std
insb
divl
stos
imul
addb
cwtl
repnz
popf
int3
call
dec
mov
dec
push
add
lods
add
and
or
call
push
mov
into
dec
cmp
stos
in
pop
jmp
pop
inc
outsb
xchg
xorl
into
xlat
add
pop
in
and
or
rorl
bound
push
xchg
shrl
and
or
jb
rol
dec
fidivl
jns
sub
decl
dec
leave
stos
nop
sub
or
inc
or
dec
test
mov
push
mov
jae
cmpl
push
insb
or
test
xor
pop
dec
cmovb
mov
mov
cmp
shrb
cmp
mov
cmp
mov
inc
das
xchg
iret
xchg
inc
ljmp
pushf
xor
mov
sti
xorl
cli
mov
jo
js
addl
addl
push
dec
push
dec
sti
push
mov
arpl
or
push
call
jno
jmp
enter
lcall
repnz
mov
jno
dec
push
ficoml
bound
sub
or
cs
es
push
fistpll
push
mov
dec
cmpsl
push
push
jl
add
xchg
or
fdivrl
sbb
push
stos
lods
loopne
jmp
out
in
mov
and
sbb
push
or
sti
mov
or
pop
std
test
push
xchg
lods
jo
out
mov
push
fucomi
aas
xchg
push
cwtl
iret
jbe
or
push
call
outsb
xor
es
inc
lcall
push
ja
pop
aas
jmp
clc
rolb
bound
sahf
push
test
pop
pop
add
nop
mov
and
ret
inc
add
inc
lea
fs
std
insl
adc
call
cmp
cmp
or
push
sub
je
nop
ror
cmpsb
xchg
mov
loop
sub
or
push
dec
aam
imul
pop
push
xchg
jge
inc
inc
or
mov
or
js
xor
bound
jae
lea
sub
mull
pop
imul
and
and
or
mov
xor
hlt
pop
push
jne
dec
js
push
pop
sbb
data16
jg
mov
pop
lret
pop
adc
jo
in
push
add
sub
rsqrtps
dec
loopne
or
add
cmp
pop
out
lds
and
mov
into
xor
incb
insl
pop
mov
and
add
pop
cmpsl
adc
mov
sti
addr16
mov
push
or
roll
dec
mov
pusha
or
pop
and
xchg
subb
or
fs
setnp
xchg
add
dec
adc
push
outsl
push
adcb
and
jb
or
fs
xor
fs
stos
sbb
mov
cmp
or
or
push
and
and
mov
jmp
mov
test
ret
pushf
cmp
xchg
pusha
or
or
icebp
or
movsb
add
xor
jg
aam
dec
imull
pop
call
scas
inc
push
mov
popf
fimuls
and
call
mov
cmp
mov
adc
mov
out
mov
test
inc
push
mov
test
cmp
ret
push
inc
mov
xorb
ljmp
out
cmpb
repnz
shl
push
fsubl
pop
sbb
pop
in
insl
lock
mov
cli
cs
je
jo
push
popf
pop
pushf
push
or
xorb
sbb
jl
xor
sub
push
cmpsb
xchg
dec
add
repnz
movq
out
mov
pop
or
sti
adc
pop
dec
enter
rcll
xchg
enter
pop
cli
in
pop
test
pop
mov
into
loop
xchg
call
cmc
sub
and
aam
mov
mov
xchg
iret
mov
addr16
push
cmp
ss
lret
add
lahf
test
sbb
xor
mov
mov
mov
adc
lea
fcoms
sbb
sbb
mov
push
popf
aam
dec
pop
mov
and
mov
arpl
jmp
imul
bnd
xchg
pop
hlt
test
adc
in
or
or
bnd
mov
jmp
inc
xor
jae
mov
stc
jle
jbe
push
in
insb
aad
aad
arpl
pop
pmuludq
xchg
inc
ja
sbb
mov
shl
enter
cmpsl
ljmp
lods
dec
and
push
stos
incl
loop
push
xchg
enter
mov
mov
int
or
nop
cmp
dec
popf
hlt
add
jle
pop
pop
inc
inc
mov
or
test
lahf
add
rorb
pop
or
add
jb,pt
cmp
jno
int
or
xor
xchg
jp
mov
jmp
add
jmp
xchg
cli
sub
pop
sbb
stos
mov
and
xchg
mov
stos
sub
testl
xchg
clc
xor
jp
mov
pop
cmpsb
sub
repz
es
inc
popa
mov
pop
sub
loopne
cmpsb
dec
inc
cld
lods
mov
in
jmp
xor
or
or
push
jo
out
mov
test
xchg
mov
sti
xchg
add
imul
jb
add
pop
add
adc
sub
sbb
loopne
jmp
sub
mov
push
cmpsb
push
insb
dec
cli
push
inc
inc
xchg
push
aaa
jb
sbb
bnd
es
push
lret
adc
or
fisubrl
xor
fistps
int3
push
xchg
hlt
fnsave
in
in
dec
or
and
add
adc
xor
lret
imul
cld
jbe
inc
shlb
movsb
pop
lds
repnz
imul
shl
sub
xchg
mov
pusha
inc
add
jae
or
mov
aas
sbb
ljmp
pop
aam
mov
xchg
and
pushf
sbb
or
fnstsw
adc
leave
test
mov
pop
cmpsl
adc
int3
dec
inc
pop
mov
aas
idivl
push
ss
jnp
xchg
mov
icebp
hlt
add
cld
cwtl
pop
push
enter
dec
cli
inc
push
mov
sub
push
mov
bound
insb
lahf
shlb
adc
in
into
decl
and
mov
push
js
and
test
js
jo
pop
call
add
mov
jns
sub
mov
and
dec
test
call
xor
fistps
cwtl
cmc
sub
cli
rclb
pop
mov
pop
ret
ret
push
call
loopne
mov
pop
ss
or
mov
push
push
in
mov
inc
insl
add
push
xor
push
rcll
clc
add
add
dec
out
lahf
or
push
mov
adc
nop
push
sub
leave
imul
jmp
dec
inc
xchg
dec
faddl
add
je
adc
mov
les
pop
or
add
cmp
cmc
push
or
les
add
out
shlb
leave
and
or
or
mov
add
je
add
mov
sub
or
movsl
outsb
aas
sub
daa
cmp
inc
lcall
fidivrl
mov
mov
or
mov
imul
lods
pop
push
mov
sbb
pop
push
mov
sti
pop
or
dec
mov
pop
sahf
pop
fadds
aas
add
dec
lea
xchg
clc
xchg
push
rcrl
cli
xchg
movsb
daa
into
mov
inc
sub
int3
push
ljmp
add
sbb
mov
std
out
mov
mov
xchg
addb
push
cld
mov
mov
aad
test
xor
mov
mov
ficoms
outsb
jmp
in
testl
movsl
xor
xlat
lahf
in
and
test
pop
pusha
fidivrl
and
sbb
stos
jne
push
dec
dec
ljmp
pop
push
cmp
lahf
adc
xchg
lock
sub
xchg
test
sub
leave
and
cmp
jo
pop
dec
inc
lret
xchg
push
xor
call
or
or
push
icebp
inc
repz
jmp
dec
add
or
repz
insb
scas
mov
or
push
xchg
repnz
scas
pop
sub
add
daa
std
mov
call
lods
das
or
push
lahf
int
cli
sub
stos
cmp
icebp
cmc
xlat
sub
leave
inc
add
mov
pop
test
call
mov
lahf
ret
push
jmp
stos
xor
loop
inc
sti
les
add
xchg
dec
dec
in
jb
xchg
out
jle
repnz
test
fidivs
scas
dec
jbe
jge
sbb
lcall
lea
jg
jge
call
mov
cmpl
ficompl
mov
out
popf
rol
xchg
dec
push
sahf
dec
adc
cmp
stos
pop
add
mov
cmc
jmp
jmp
in
sarl
mov
out
dec
push
jmp
aad
sub
jmp
pop
pop
dec
inc
addb
fisubs
arpl
xorb
addl
mov
xor
leave
daa
sbb
notl
sti
data16
add
dec
or
bound
je
pop
cmp
or
loop
or
mov
cmpl
clc
add
daa
sub
xchg
lods
int3
repz
jno
mov
add
jg
testl
or
stos
or
orb
sub
sti
ss
data16
imul
out
repnz
mov
dec
sti
test
lret
and
fiaddl
push
adc
pop
or
sbb
mov
cmp
pop
dec
jmp
push
fdivs
jae
adc
mov
dec
xor
adc
xor
or
mov
xchg
sub
daa
or
shll
call
jle
test
cmp
orb
add
jg
jnp
orl
or
fldl
pop
add
sarb
mov
push
insb
jle
xchg
stos
mov
sbb
in
es
xchg
cmpsl
mov
cmp
cmpl
popa
lods
jl
jne
movsl
xor
sti
dec
in
sahf
shld
testb
gs
addr16
mov
jo
pop
mov
mov
inc
sub
int3
sar
xchg
jecxz
lret
repnz
push
pop
rclb
inc
add
das
or
and
pop
push
xor
insl
loopne
ret
or
out
pusha
or
mov
push
jb
push
mov
sbb
inc
call
stos
cmp
mov
cld
mov
rorb
dec
inc
fdivl
xchg
sub
mov
fdivrl
mov
sbb
jbe
cmpsl
dec
cmp
out
or
imul
dec
mov
cmpsl
nop
cli
nop
inc
jne
inc
add
mov
sub
out
cs
sub
and
sub
clc
orl
mov
jecxz
mull
dec
pop
jmp
mov
mov
arpl
in
testl
push
subb
mov
mov
inc
and
loopne
or
pop
push
popf
add
pop
mov
dec
xorb
pop
cwtl
push
les
adcb
sbb
mov
and
mov
dec
jmp
mov
mov
add
mov
pop
imul
jbe
adc
pop
fiadds
pop
push
inc
int3
popf
cld
in
test
xchg
cwtl
mov
pusha
aas
pop
hlt
mov
rcrb
fisttpl
sbb
or
sbb
xchg
push
pop
inc
inc
sub
sbbl
jmp
mov
stc
pop
js
push
loopne
into
sbb
cmpsl
and
or
adc
dec
out
fdivl
push
imul
scas
call
pop
sub
mov
and
test
inc
lcall
addb
dec
dec
shrl
popf
sub
in
inc
fsubrp
dec
testl
mov
xorl
sbb
daa
jge
clc
add
mov
add
dec
jge
and
xchg
cmp
fiaddl
aaa
sahf
or
or
negb
das
xlat
mov
insl
and
jl
ret
imul
mov
sbb
mov
jle
push
mov
push
adc
shl
gs
xchg
sti
inc
sub
adc
addl
mov
push
in
inc
hlt
cli
scas
mov
int3
dec
cmp
pop
aam
scas
inc
sahf
adc
pop
mov
jg
add
add
out
lahf
sub
xor
xchg
in
mov
cmc
ficomps
loopne
daa
cmpsl
lea
jo
ja
mov
pop
fimuls
cld
adc
imul
sbb
inc
cld
lret
dec
lcall
dec
imull
popa
push
pop
popa
adc
pop
ficomps
mov
add
stos
sbb
cmp
adc
aam
inc
hlt
hlt
pop
dec
cmpl
or
mov
jo
xor
or
data16
sarl
movsb
push
mov
push
notl
and
push
jle
push
mov
mov
jp
pop
test
in
dec
jecxz
aaa
or
data16
mov
out
mull
or
out
inc
mov
add
sub
lds
xchg
or
sub
xchg
sbb
clc
mov
stos
add
filds
sub
jp
jae
dec
repnz
fiadds
mov
call
mov
jg
mov
test
and
daa
add
shr
jno
aad
xlat
jns
and
mov
lahf
ja
lret
je
test
rorl
push
or
rclb
jb
or
jno
inc
cmpsb
sbb
add
std
vpmullq
pop
mov
scas
idivb
scas
mov
or
and
jge
pop
or
mov
mov
popf
insb
pop
or
add
rcrl
data16
pop
inc
out
loope
push
sub
sbb
pop
jo
stos
pop
mov
cmpb
test
mov
mov
inc
lret
mov
clc
ret
aam
lods
jmp
inc
xchg
js
lahf
push
mov
xorl
dec
fsubrl
xor
negl
movsb
adc
mov
push
popa
stos
mov
push
repz
push
push
adc
insb
iret
lcall
mov
push
inc
fmull
pop
and
mov
pop
int
add
or
fstl
and
ret
int
hlt
mov
pop
out
push
adc
xchg
inc
mov
sub
mov
add
mov
xlat
inc
sub
stos
rorb
add
adc
xchg
xchg
mov
jmp
movsb
jnp
xor
in
add
pop
repz
iret
xchg
adcl
adc
pusha
pop
or
push
lea
cmp
xor
popf
or
sub
jmp
call
jno
sti
xlat
in
loopne
jo
sub
pop
mov
lea
mov
andb
and
sbb
mov
xchg
sub
push
into
fcompl
adc
lcall
push
in
or
lcall
jmp
das
xchg
jp
jp
pop
xchg
cwtl
pop
add
mov
push
or
push
call
xchg
add
push
inc
leave
test
sub
lahf
mov
in
out
in
out
xchg
sub
xchg
dec
jg
mov
subl
insb
mov
jbe
test
or
mov
push
sti
jne
ss
fiadds
jecxz
inc
ljmp
or
and
cmp
push
cmp
jo
push
sbbb
mov
and
sarl
push
xor
or
outsl
add
es
movsb
test
cmp
out
daa
jnp
push
in
ret
dec
pop
addb
shrb
sbb
mov
xchg
arpl
mov
inc
dec
cmp
mov
aad
dec
cwtl
mull
das
push
cltd
dec
stc
jnp
movsb
or
mov
nop
lcall
iret
testb
jae
dec
sbb
cmp
xchg
stos
sti
mov
in
lods
sbb
pusha
or
fucomi
or
push
push
pop
push
mov
addr16
fisubrl
arpl
push
fstpl
adc
xor
inc
add
mov
testl
push
push
cmp
dec
in
call
jge
cli
dec
jmp
ja
cmp
dec
dec
lds
jmp
jecxz
push
xchg
mov
adc
out
push
cmp
xor
jmp
repnz
icebp
mulb
bound
or
cmp
mov
sbb
mov
dec
aam
pop
imul
sbb
xchg
rorb
mov
or
jbe
das
pop
dec
mov
addl
mov
push
imul
and
sub
and
xchg
shrb
adc
mov
and
pop
push
xor
pop
inc
pop
push
mov
xchg
sbb
inc
push
dec
lret
cmp
ss
call
add
sub
mov
push
pushf
mov
add
call
out
xchg
or
out
movsb
mov
or
call
xchg
lcall
subb
add
lock
push
daa
in
test
xchg
mov
loope
ss
adc
mov
push
jb
dec
or
jmp
cmpsb
fdivrl
and
ficomps
inc
mov
dec
pop
mov
scas
jp
pop
or
lock
inc
jmp
mov
lods
xchg
fldt
mov
pop
clc
lds
and
xchg
add
jns
inc
dec
inc
add
notl
xchg
cmpsl
sub
lcall
jl
test
fstl
pop
fnstenv
pop
outsl
jae
inc
inc
cmp
push
addr16
push
mov
or
hlt
insb
lret
imul
pop
jle
xor
aam
or
xchg
adc
inc
or
push
imul
mov
lahf
push
cwtl
xor
aam
sbb
lahf
repz
inc
lahf
inc
and
loopne
cld
dec
mov
and
and
xchg
cmpsl
push
stc
xor
sub
adc
test
jl
push
xor
push
mov
sub
pop
lds
and
sub
push
pop
imul
xchg
sahf
push
push
mov
in
inc
aaa
sub
sub
movsb
loopne
sub
stos
inc
mov
cmp
les
jb
push
pop
push
into
fabs
mov
fs
leave
mov
push
mov
enter
xchg
cld
mov
jle
lcall
dec
mov
or
out
and
jle
pop
data16
push
lea
mov
or
hlt
fsubs
xchg
fsubl
movsb
mov
cmp
lock
mov
mov
mov
vpaddd
pop
jmp
push
adc
or
int3
std
repz
clc
jmp
mov
mov
and
mov
scas
mov
idiv
jmp
cwtl
movsl
pop
push
adc
and
cmovl
fdivrl
shll
sbb
or
jne
jo
iret
cld
loop
and
sbb
jb
ljmp
call
mov
jb
movsl
sub
jl
dec
push
push
sbb
cli
xchg
das
sub
das
idivb
mov
clc
or
add
out
xor
call
push
push
mov
pop
jmp
mov
outsb
cli
idivl
frstor
lahf
dec
xchg
adc
aas
push
cmp
lret
stos
xor
pop
ret
gs
enter
mov
data16
rcpps
cli
xchg
sarl
cwtl
mov
and
mov
mov
clc
sti
jge
push
shll
cmpsl
adc
loop
jb
cli
or
mov
out
inc
add
cmc
sub
dec
mov
addr16
add
add
out
or
in
jae
add
outsl
cli
cmp
jo
and
sbb
data16
and
pop
shrb
idivb
roll
and
add
mov
cmpsl
out
lods
fadd
cmp
ret
mov
jno
out
cmpsb
hlt
push
insl
cmp
jmp
bound
sub
cmc
ficoms
fdivrp
clc
jnp
mov
add
icebp
lahf
mov
stc
repnz
lds
jno
subl
push
call
stos
cmp
popa
cmp
push
aad
sbb
mov
push
mov
add
mov
cmp
pop
imul
jnp
call
and
lret
nop
cmp
call
icebp
xchg
mov
orb
sub
or
sub
ret
pop
fisttps
jmp
pop
xchg
or
adc
lcall
mov
loopne
icebp
test
jno
frstor
cmc
pop
repnz
call
cmp
inc
xor
xor
out
lahf
mov
mov
sbb
pop
jp
in
cmovle
adc
scas
out
push
add
dec
mov
or
jecxz
popa
test
add
shrb
aas
mov
sahf
and
pop
jno
or
sarl
xchg
push
adc
daa
hlt
inc
dec
decl
in
insb
adc
add
clc
out
pop
popa
xchg
xchg
push
pushf
cmp
jge
pop
mov
inc
or
ja
mov
push
mov
cmp
add
adc
adc
jbe
dec
fucomip
lahf
inc
popf
loope
mov
jb
clc
pop
nop
out
cmc
mov
sbb
into
push
inc
or
jecxz
mov
inc
inc
xchg
jmp
ja
dec
test
mov
push
pop
jns
in
movsl
fcomps
in
int
cli
rolb
push
das
lret
pop
movsb
cmp
push
push
pusha
std
jmp
popf
fs
mov
jne
sti
ja
inc
insl
daa
pop
and
xor
sub
mov
mov
xchg
jl
push
call
addb
push
pop
mov
jno
jmp
push
mov
mov
pop
add
enter
or
ret
je
inc
sahf
sbb
mov
xchg
fisubrs
mov
scas
pop
inc
ljmp
or
leave
std
adcb
dec
mov
mov
loopne
sub
xchg
jmp
or
ret
idivb
pop
fcomps
loope
pushf
mov
jns
pop
in
les
sub
push
sub
mov
pop
repnz
test
sbb
movsl
pop
sbbb
adc
sbb
jmp
pop
mov
or
lea
loopw
sbb
push
cmp
sbb
ja
sub
pusha
das
jp
and
jmp
out
jmp
pop
sti
repz
repnz
xchg
ljmp
sub
incl
push
loopne
scas
sbb
stos
lods
pop
cmp
call
push
jb
mov
xchg
mov
pop
lret
popf
pop
fisttpll
mov
in
das
idivb
icebp
dec
cwtl
mov
adc
stos
mov
out
mov
into
adc
sbb
xchg
aad
sub
lods
and
cld
ds
loop
pop
insl
inc
out
fcompl
push
adc
adc
push
gs
push
fcompl
out
cmp
push
cs
sti
mov
test
hlt
push
call
push
out
push
inc
mov
pop
bnd
loopne
cmpsl
dec
sbbb
fwait
aaa
out
push
or
addb
pop
mov
scas
or
xor
push
mov
xchg
xchg
push
and
ret
mov
incl
jle
mov
mov
fisttpl
loop
dec
out
dec
scas
add
push
hlt
or
jo
mov
dec
cmp
adc
sbb
lock
cmc
notl
call
push
call
jecxz
or
mov
xchg
push
movsl
inc
gs
out
mov
mov
xchg
push
popf
jno
ds
imul
adcb
pop
test
cmpb
aas
stc
dec
or
lea
pop
hlt
das
mov
mov
xchg
push
adc
in
inc
push
sub
push
call
xchg
sub
in
jno
xor
cmc
add
int3
jecxz
dec
and
fdiv
inc
call
in
and
push
mov
nop
loop
pop
lock
jmp
or
mov
iret
adc
xchg
or
and
jg
call
stos
les
mov
or
xor
xchg
cmpsl
push
or
mulb
mov
test
xchg
icebp
pop
call
jg
push
daa
push
jg
gs
inc
loope
mov
jne
pop
es
and
cmp
jne
test
lret
push
and
mov
mov
dec
outsb
sahf
clc
pop
ss
jmp
mov
and
jmp
fucomp
cmp
scas
lods
ja
movlps
mov
adc
decl
enter
repz
inc
dec
or
sbb
iret
and
fmulp
aam
int3
xchg
or
xchg
inc
cmpsb
loop
xchg
push
orb
push
pop
and
incb
sti
push
jo
mov
and
xchg
repnz
fcoml
rcll
nop
inc
and
imul
movsl
push
test
cmp
and
in
mov
mov
xchg
jmp
pop
mov
fstpl
jmp
mov
xor
lret
outsl
test
lea
push
divl
lock
scas
mov
icebp
lahf
jl
dec
sarl
es
sub
push
push
fidivs
mov
call
imul
pop
dec
mov
pusha
jl
lods
inc
push
xchg
into
lods
jb
pop
and
xor
push
mov
clc
cmp
and
push
pop
cmc
lds
xor
rorl
loope
push
mov
cltd
and
ret
insb
out
insb
pop
cmpl
push
pop
dec
fmul
cli
mov
and
call
jno
cmp
out
inc
pop
or
push
mov
rcrb
jg
neg
and
and
in
push
xlat
outsb
lods
xchg
xchg
push
test
cmp
loope
and
jnp
jge
std
mov
scas
ss
test
push
idivb
jbe
mov
push
mov
cltd
mov
mov
jno
pop
sub
jne
repz
inc
sub
xor
jecxz
into
adc
pop
popa
dec
pop
cli
imul
adc
mov
xor
jmp
or
push
test
dec
stos
mov
jno
hlt
arpl
icebp
divb
add
stc
int
aad
sub
repnz
and
mov
add
popf
push
jmp
xor
pop
mov
xlat
xchg
repz
call
rorb
pop
inc
add
push
jno
mov
or
gs
adc
xchg
scas
push
mov
inc
xorb
cmp
lahf
push
lret
stos
sbb
ja
push
adc
mov
std
popa
or
into
divl
sbb
icebp
or
push
pop
push
mov
mov
leave
pop
es
fistps
js
sbb
lea
xor
aaa
hlt
jbe
gs
repz
cmp
addr16
leave
push
jne
jle
fcoml
jecxz
fmuls
push
sub
cmp
pusha
in
inc
mov
push
cmp
push
or
stc
out
jo
test
pop
or
call
outsl
push
and
push
or
or
or
scas
ss
and
xor
orl
aas
xor
cmp
out
stos
bound
push
xorl
repnz
cltd
call
mov
mov
adc
lds
mov
push
pop
add
jg
test
in
sub
lock
loope
sbb
dec
add
mov
cmp
pop
mov
or
mov
lock
xchg
and
xchg
mov
ja
xor
neg
scas
pop
mov
fmull
xor
dec
lahf
pop
testl
add
fidivl
call
and
stos
leave
fistpll
mov
sar
sti
movsl
jmp
pop
pop
push
jl
mov
add
clc
aad
loopne
dec
or
hlt
xchg
jno
jnp
push
hlt
pop
mov
bswap
movsl
fiadds
sub
loop
cmc
pushf
ret
jns
jnp
dec
sub
sbb
and
imul
jne
inc
fstl
cs
push
push
jb
mov
scas
sub
in
or
sti
je
enter
test
inc
lods
inc
pop
mov
or
lret
xchg
add
mov
sbb
adc
mov
pop
mov
lea
test
jb
jae
inc
imul
add
sbb
mov
dec
test
shlb
inc
push
sbb
and
sub
push
pop
std
adc
call
jbe
ret
xor
xchg
js
fsubrl
pusha
or
dec
orl
cs
rorl
mov
or
sub
in
ljmp
push
dec
push
push
pop
jge
pushf
ret
mov
jae
repnz
mov
sbb
std
shrb
cmc
pop
sbb
jl
in
xor
out
test
add
and
fcompl
sbb
loopne
loope
nop
call
mov
push
sbb
das
sahf
stos
iret
adc
dec
jnp
mov
test
and
lcall
repz
push
popf
sbb
jb
lcall
push
loope
and
pop
mov
mov
adc
jbe
add
push
xor
xor
jp
pop
mov
or
out
sbb
popa
cltd
aas
or
mov
ds
jbe
cmp
and
in
fadds
andl
xchg
bound
or
add
pop
outsb
call
pushf
ljmp
push
shll
fcmovu
xor
and
ja
cmp
in
push
cmpsl
in
dec
mov
cmc
xchg
dec
jo
xchg
push
ja
add
pop
ror
pusha
sub
cmp
stos
in
fidivrl
inc
and
cld
dec
add
out
mov
addr16
dec
sub
cmp
popl
xchg
mov
loopne
or
push
dec
dec
inc
push
repnz
out
inc
push
adcb
paddd
mov
in
ja
mov
adc
inc
xlat
fsubs
mov
sbb
pop
sarl
jns
dec
mov
or
loope
sbb
push
inc
pusha
cmp
mov
lcall
popf
testl
shr
xor
pop
jno
dec
xlat
cld
lea
das
mov
mov
adc
jmp
dec
sub
jne
insb
add
das
mov
jmp
repnz
inc
mov
mov
into
das
sub
imul
ret
push
inc
mov
dec
mov
sar
cmp
sbb
je
dec
sbb
lods
ja
jecxz
sub
mov
in
loope
dec
xchg
dec
jmp
mov
ss
movsl
or
cltd
loopne
or
into
cmp
jne
cld
pop
jp
cli
pop
loop
or
test
jb
insl
push
xlat
adc
test
ficomps
xor
cltd
cmp
std
pushf
testb
test
inc
mov
or
bnd
xor
xchg
inc
mov
or
shlb
and
mul
adcb
add
insb
jno
sub
mov
daa
mov
sbb
push
cmp
fstpl
insl
pop
jno
sbb
imul
and
loopne
clc
outsl
icebp
mov
and
mov
push
pop
sbb
mov
movsl
stos
push
jmp
jp
leave
in
cmp
out
test
pop
mov
call
inc
nop
insl
push
xchg
pop
push
or
mov
inc
stos
dec
repnz
inc
test
repnz
push
repz
xor
mul
inc
jnp
hlt
pushf
pop
cmp
nop
add
into
dec
xor
sub
dec
sub
int3
mov
mov
in
ret
sub
icebp
add
jbe
sbb
jp
push
test
jmp
data16
xchg
or
int
aaa
dec
inc
pop
lahf
dec
test
cmp
mov
movsb
in
das
cld
mov
inc
add
sub
mov
mov
mov
add
icebp
xchg
mov
pop
cmp
lcall
stos
pop
in
pop
or
push
test
inc
aaa
stc
sbb
fcomip
pop
adc
cmc
data16
push
lcall
clc
pop
xchg
or
jmp
push
sub
leave
add
xchg
sbb
test
push
and
and
out
add
mov
fbstp
psubsw
mov
pop
jg
jmp
adc
cmp
fstps
fs
mov
push
pop
or
dec
pop
loop
mov
or
inc
xor
and
pop
dec
fadds
call
sbb
sub
fs
cmc
divl
icebp
and
xor
and
popf
fsubl
pop
sub
loop
add
stc
push
add
push
inc
adc
orl
inc
push
or
pushf
incb
dec
enter
pop
mov
movzwl
dec
imulb
push
xor
aad
cmpsl
sub
loopne
andb
adc
sub
mov
or
in
movl
mov
insb
int3
push
jmp
cmp
and
sbb
xor
or
jg
repz
std
decl
mov
fmuls
orl
sub
out
jne
mov
jo
inc
inc
inc
push
jle
or
in
xchg
cltd
icebp
mov
loope
mov
xor
cmpsl
hlt
xchg
mov
sub
jmp
pop
add
or
dec
pushf
dec
negl
fcmovu
lahf
nop
sti
mov
sbb
xor
cwtl
mov
scas
dec
nop
jno
xor
fwait
div
mov
nop
call
sub
push
hlt
insb
lea
pop
cmp
push
pop
pop
jbe
jl
jg
push
int
pop
adc
push
sub
in
bound
mov
xchg
push
mov
in
aam
call
nop
mov
lds
inc
xchg
mov
jmp
and
mov
xchg
mov
cwtl
sti
pop
mov
xor
xor
dec
mov
push
jge
dec
rorl
push
pop
add
addr16
mov
sbb
jne
sbb
std
dec
cmpb
fwait
loop
pop
and
push
lahf
jb
mov
dec
rorb
cmp
adc
dec
mov
lcall
pop
adcb
inc
test
xchg
lods
lahf
xlat
push
lret
ljmp
imul
jo
daa
cmp
pushf
gs
jmp
lret
jnp
nop
movsl
xor
xchg
decb
jg
pandn
add
push
push
push
jb
inc
ljmp
movsl
cmp
lock
mov
out
fstpl
push
or
xchg
sti
test
fsubs
inc
mov
enter
mov
push
push
xor
les
or
call
sbb
dec
xor
pop
pop
ret
les
sbb
fsubs
push
jmp
dec
push
sub
add
sub
jg
mov
repnz
cld
call
repnz
int
ljmp
cmpsl
insb
loop
addb
xor
loopne
push
add
mov
xchg
stos
mov
cmp
cmp
jbe
ret
sub
mov
incb
mov
push
cli
jb
insl
xchg
jle
add
orl
jo
pushw
push
nop
pop
mov
shrb
cwtl
dec
xor
jmp
add
mov
dec
enter
inc
cwtl
fsubrp
cmp
cmp
sbb
loopne
adc
mov
cmp
shrb
jo
jne
jbe
int3
xor
lds
dec
pop
pop
pop
xor
and
mov
scas
inc
jnp
or
outsl
sub
lods
jg,pn
push
addr16
jb
out
repz
pop
and
mov
jae
inc
call
repnz
out
gs
adc
pop
iret
pop
ja
inc
jecxz
sub
test
or
stos
sub
inc
dec
sub
pop
test
mov
and
jecxz
divb
andl
sbb
or
cmp
adc
sbb
loop
and
mov
fiaddl
push
xor
outsb
aaa
dec
jg
or
aad
xchg
add
adc
inc
jae
call
cmc
xchg
mov
jmp
inc
push
jg
dec
lret
inc
push
sbbb
cmp
or
sbb
cmp
int
mov
sar
pop
mov
sub
and
cmpsb
jnp
mov
shrb
pushf
test
inc
xor
or
jnp
repz
or
arpl
mov
sub
outsl
inc
call
aas
scas
dec
pop
pop
jp
cmp
pushf
enter
pop
jmp
std
push
outsb
dec
xor
push
nop
jg
call
mov
cltd
pop
test
sub
mov
jne
popf
aam
or
jle
aam
cmp
inc
mov
sub
push
hlt
mov
inc
mov
pop
or
call
jge
ja
or
dec
shrl
daa
pop
jo
test
mov
pop
into
data16
mov
sahf
jp
cmp
dec
xor
xchg
ret
call
or
xor
pop
inc
add
xlat
jmp
rorl
pop
ja
sub
mov
mov
xchg
mov
dec
imul
fisttpl
push
jle
dec
test
adc
out
inc
test
mov
push
cld
hlt
push
loop
xlat
jp
or
mov
idivb
in
mov
imul
repnz
lds
loop
call
xchg
negb
jb
scas
inc
aas
xor
pop
or
xchg
call
jmp
add
xchg
mov
call
orb
sub
ja
mov
mov
test
and
and
push
adcb
lds
mov
aas
mov
cmpb
mov
cwtl
adc
dec
outsl
lea
shl
pop
adc
call
pop
pop
outsb
cmc
and
mov
enter
fucomp
fildll
xor
arpl
mov
mov
jmp
mov
dec
push
or
and
ljmp
int
xor
add
sarb
lahf
popf
pop
shll
rorb
sub
sti
mov
icebp
outsl
das
stos
movsl
jge
ljmp
cmp
loope
mov
push
popf
ja
xorb
xchg
xor
daa
mov
fwait
lcall
xor
and
incb
and
cwtl
in
inc
test
wrmsr
leave
aam
icebp
push
add
daa
mov
xor
xor
iret
dec
test
std
add
repz
aam
movsb
dec
pop
dec
mov
loopne
inc
or
cwtl
mov
pop
fists
scas
fstpl
sbb
jmp
sarb
mov
popa
fldenv
xchg
repnz
sub
test
or
jle
lret
int3
adc
or
ds
sub
aam
out
repz
jno
xlat
mov
lret
mov
xchg
cld
test
push
imul
mov
sbb
outsb
mov
fistl
adc
jmp
lea
xor
push
sub
and
std
dec
adc
faddl
adc
pusha
dec
scas
mov
popf
lret
push
repnz
movsb
dec
inc
pusha
jb
aas
jb
push
jbe
into
mov
and
push
mov
leave
mov
push
push
or
popa
pop
adc
or
sbb
xor
xchg
test
jae
or
jnp
data16
dec
dec
mov
loop
push
das
push
lods
es
sub
mov
scas
int3
aad
shlb
add
dec
cld
into
pop
jo
dec
nop
mov
and
dec
mov
or
push
out
push
inc
outsb
addl
jnp
mov
mov
mov
std
call
sbbb
jno
xchg
mov
aas
mov
cmp
int3
imul
in
or
pop
int
sub
inc
arpl
or
sarl
jge
lcall
inc
sbb
test
jo
mov
jne
mov
mov
fdivrs
pop
mov
gs
mov
push
imul
and
cwtl
adc
test
jmp
and
mov
or
cmp
mov
fbld
jno
ss
xchg
out
adc
mov
xchg
pop
push
xor
xchg
pop
sub
sub
dec
add
out
push
mov
mov
popa
adc
test
jecxz
in
push
jae
repnz
lret
fidivs
cwtl
bts
sbb
xchg
push
push
sub
mov
outsl
adc
insb
mov
addr16
cmp
push
repz
adc
inc
enter
xchg
sub
inc
adc
es
or
filds
mov
ss
jecxz
dec
nop
sbb
int3
mov
push
mov
cltd
dec
jp
jp
jmp
mov
add
out
hlt
fadds
lods
int3
or
pop
fstl
lods
xor
sub
xchg
add
push
ja
insl
int
push
mov
xor
push
imul
dec
push
mov
int
adc
xchg
inc
or
add
shll
pop
jo
cld
cmp
or
pop
xlat
int3
add
cmpsb
addb
sarb
jge
push
xor
and
pop
dec
mov
xchg
mov
mov
pop
mov
insl
pop
bound
lock
call
inc
cwtl
aam
test
xchg
dec
or
dec
or
sbb
push
add
adc
inc
pop
insl
cltd
push
cmp
cmp
add
cmp
xor
mov
pop
test
js
adc
mov
out
dec
lods
mov
icebp
add
mov
mov
cwtl
jmp
pop
mov
int3
adc
stc
pop
addl
fisttpl
cmpsl
mov
mov
mov
or
arpl
mov
int3
cmp
mov
sbb
or
dec
ret
scas
mov
dec
xorb
mov
pop
mov
call
dec
jbe
or
pop
jo
mov
dec
mov
into
enter
push
mov
enter
dec
bound
sub
sub
jae
outsb
jno
bound
test
and
pushf
pop
adcb
jp
in
inc
clc
cmpsl
fsts
in
lret
int3
addb
enter
test
xor
repz
pop
sti
jge
repnz
call
nop
lret
xchg
mov
mov
jmp
jb
xor
mov
pop
dec
or
mov
clc
mov
cwtl
je
jb
jae
js
rcrl
jmp
mov
add
sbb
cmp
sti
mov
xchg
jecxz
sub
gs
out
jbe
std
sub
and
or
push
mov
nop
adc
mov
inc
lcall
lds
xor
jo
push
mov
ds
or
lahf
add
cli
sub
pop
ss
cmp
xlat
push
call
stc
or
cmpsl
or
loopne
mull
cwtl
stos
pusha
jbe
rcll
add
into
in
out
sub
add
pop
adc
sbb
sub
or
sub
rcrb
mov
or
xchg
cli
xchg
dec
dec
adc
flds
push
add
jecxz
push
and
adc
jbe
ud2
mov
dec
fsubl
roll
out
push
fwait
add
fs
and
les
popf
jo
mov
push
int3
and
add
push
jno
xchg
imul
push
cld
adc
pop
push
lods
ret
push
or
push
pop
inc
dec
in
add
dec
das
xor
mov
lahf
aam
push
push
insb
stos
jg
testl
lahf
add
xchg
cmc
aam
adc
jns
adc
out
ljmp
fimuls
and
push
loope
mov
xlat
sbb
xchg
jns
xchg
adc
repnz
push
pusha
ljmp
xor
in
int3
dec
adc
int
mov
and
inc
xor
std
scas
jo
or
and
jns
shll
xor
mov
pop
pop
faddp
adc
sub
gs
test
movsb
mov
xchg
dec
sub
outsl
pop
cmp
mov
iret
mov
in
xchg
dec
or
mov
mov
das
sbb
inc
mov
addr16
push
push
jp
dec
sub
lret
bound
adc
cmp
and
xchg
out
pop
dec
push
mov
mov
es
mov
fdivs
or
stos
hlt
push
outsb
and
add
jo
pop
or
jmp
out
push
jo
pop
fwait
mov
add
dec
adc
test
jne
adc
mov
jg
sub
mov
mov
jecxz
cmpsl
push
pushw
inc
xchg
call
or
mov
cmp
dec
fists
or
sub
inc
jmp
push
mov
mov
ja
and
lods
jbe
cmp
lret
jmp
in
adc
mov
pop
not
out
je
lret
outsl
xor
pop
pop
push
shl
add
ja
cltd
jo
rcll
add
jmp
out
imul
add
movsb
test
iret
cli
lods
mov
pop
push
add
xor
imull
jo
mov
popf
filds
jp
mov
add
pop
in
test
shr
inc
gs
push
mov
decb
and
adc
mov
add
call
aad
and
and
bound
andl
add
out
dec
enter
pushf
xor
add
push
movsl
xor
jb
std
hlt
sub
xor
push
mov
xchg
cmp
dec
push
outsb
or
call
inc
dec
int
add
push
test
lcall
mov
shr
push
notb
pushf
test
sub
int3
pop
popf
lock
fimull
andb
mov
outsb
repz
bound
sbb
or
hlt
imull
std
aaa
cwtl
stos
outsb
mov
andb
or
ror
es
pop
or
jmp
inc
adcb
jb
push
inc
add
les
in
int3
in
and
cmpl
arpl
loopne
ret
incb
jmp
call
push
jge
add
insb
mov
or
notl
add
xchg
ret
cmc
jecxz
mov
jecxz
or
add
mov
daa
push
adc
push
or
jmp
data16
shll
or
push
icebp
call
xchg
hlt
ljmp
sub
jb
in
and
add
sahf
jp
dec
pop
loope
repnz
sti
cmp
daa
adc
das
cmp
inc
push
inc
aam
and
orb
add
fstl
bound
cmpsb
dec
jp
popa
out
mov
loop
dec
cmp
xor
lret
xchg
or
sub
pop
icebp
popa
jb
sahf
lds
stos
dec
jns
out
loop
xor
or
pop
cwtl
add
or
movsb
and
sahf
sbb
dec
or
push
push
jae
aad
xor
andb
lods
mov
ds
push
and
push
loop
sub
repz
jnp
out
and
ret
roll
or
and
jge
or
adc
insl
loope
les
notl
xor
ljmp
xchg
je
push
push
aad
shll
or
xor
add
test
inc
mov
mov
dec
dec
sbb
aad
mov
arpl
push
xor
add
orl
sbb
popf
push
cwtl
mov
sub
lret
dec
and
test
ljmp
xchg
mov
in
leave
repnz
dec
or
shll
in
pop
xor
mov
das
mov
pop
lret
aam
cmp
pop
lret
scas
call
sub
add
imul
fistps
adc
pop
insl
add
lods
dec
dec
push
test
je
mov
lret
push
or
lcall
inc
sti
andb
cmpb
jmp
mov
es
add
not
mov
test
movsb
xchg
mov
cmp
mov
xor
loop
pop
ljmp
mov
pop
pop
jnp
xchg
push
mov
cwtl
in
lret
popf
test
push
in
stc
std
ret
dec
rorb
or
fsubs
and
xchg
fsubr
sti
dec
cmc
movsb
sti
leave
sbb
or
cmp
fsubp
inc
mov
stos
pop
xchg
mov
lods
repnz
aam
dec
lods
sub
mov
cmc
stos
lods
out
and
adc
aaa
icebp
les
push
in
dec
adcb
mov
push
add
push
shlb
adc
jmp
pop
mov
and
xchg
lret
dec
inc
in
sbb
jb
adc
mov
scas
jg
cld
mov
rorl
jo
mov
sub
shlb
pop
mov
and
xchg
lods
and
repnz
negb
and
and
out
xor
mov
or
cmc
or
push
es
add
jmp
or
or
adc
cltd
addb
or
add
or
push
daa
stos
ja
inc
testb
mov
mov
and
insl
das
ljmp
lcall
lock
push
loopne
pop
aam
xor
sub
pop
jb
pop
rorb
mov
xor
jmp
mov
dec
cmpsl
pop
lods
jbe
sub
sbb
call
out
push
stos
enter
nop
das
push
inc
sahf
das
pop
xchg
xor
or
jg
mov
inc
hlt
push
xor
sub
sub
xlat
call
dec
cld
jmp
cmp
fldl
sahf
or
int3
xchg
mov
test
into
incl
cmp
pop
lea
pop
iret
out
dec
arpl
xchg
jmp
insl
push
call
fdivrl
mov
rorl
andl
leave
inc
enter
mov
sub
fdiv
inc
sub
mov
sub
ljmp
xor
shlb
pop
mov
cs
data16
mov
push
xorb
add
daa
mov
xchg
jmp
rcrl
orl
mov
mov
mov
and
or
iret
inc
push
test
sub
out
dec
jecxz
cwtl
pop
out
mov
imul
enter
popf
push
push
jmp
jae
pop
or
xlat
xor
and
lret
ljmp
sbbb
mov
dec
fs
pop
push
sbb
push
cmp
loopne
mov
jne
mov
rcrb
sarl
jne
adc
jns
xchg
add
sti
test
sbb
adc
add
pop
jl
test
sub
adc
jo
push
imul
pop
shl
dec
sbb
xor
jne
aam
dec
scas
push
mov
test
lret
mov
sahf
add
xlat
jg
inc
add
add
add
sarl
insl
addr16
jne
jp
mov
inc
loopne
cmc
int3
lea
mov
pusha
dec
psubsb
mov
mov
lock
cltd
add
pop
aaa
sbb
ja
push
xchg
jne
sub
push
sbb
inc
xor
sub
fcoml
push
imul
scas
mov
test
add
push
dec
mov
lock
ficoms
sub
push
lock
xlat
dec
jmp
adc
jo
jp
repz
lahf
push
call
nop
xchg
sbb
fcomps
push
xchg
inc
out
lahf
push
or
ret
loop
jmp
fidivrl
jp
pop
sub
jo
mov
call
lcall
lods
out
call
fsubrl
mov
fisttpll
filds
mov
fs
mov
pusha
inc
lods
add
push
xor
or
minps
lds
lahf
sub
les
mov
xor
pop
adcb
pop
std
sti
pushf
lahf
jmp
cld
stos
adc
push
sbb
xchg
mov
jp
imul
push
fadds
adc
faddl
xchg
cltd
imul
or
mov
aaa
xor
psubsw
cltd
inc
and
adc
loope
or
push
pop
push
les
lods
ja
or
test
mov
std
mov
jle
push
clc
cmp
cmp
jmp
mov
call
das
test
sarb
mov
leave
and
mov
mov
add
clc
in
cs
cltd
push
push
mov
or
sbb
xor
pop
imul
dec
into
movsb
and
test
push
fyl2x
mov
notb
mov
stos
push
mov
ljmp
ret
icebp
push
pop
push
jle
mov
xchg
enter
stc
test
xchg
sub
call
aad
sbb
and
push
add
dec
xor
in
jg
dec
or
out
clc
cwtl
or
mov
dec
inc
xchg
mov
cmp
xchg
push
inc
inc
sbb
rclb
out
es
inc
or
aam
mov
test
mov
lods
cmc
dec
mov
aad
mov
std
rorl
mov
cli
ja
repz
inc
push
jmp
in
jmp
dec
cmc
add
js
dec
or
adc
mov
xor
pop
call
sub
ret
scas
cmp
or
mov
mov
mov
pop
mov
jmp
and
in
jmpw
push
jnp
xchg
mov
xor
sub
or
or
lcall
dec
inc
out
or
insb
sbb
push
add
jae
mov
mov
sbb
repnz
ret
cld
js
and
dec
pop
cmpsl
and
mov
sbb
int
jb
fisttpl
cld
or
loope
cld
cmp
lahf
mov
sub
dec
rcl
jp
add
cli
sub
mov
jl
inc
mov
cmp
xchg
push
imul
or
ds
dec
xchg
sbb
jecxz
mov
or
and
push
dec
scas
pop
orb
addl
dec
or
ljmp
xchg
xor
or
mov
cld
add
ds
xlat
inc
lods
outsb
fwait
pop
pop
jmp
dec
or
push
or
lods
or
fbstp
fiadds
sbb
in
cmc
ret
movsl
add
xchg
hlt
lcall
pop
cld
js
lahf
push
mov
inc
aas
pop
push
inc
mov
pop
cmp
add
cmpsl
pop
jbe
mov
popl
xor
outsl
pop
adc
movsl
in
icebp
rcrl
test
sub
mov
jge
or
icebp
mov
push
ret
sub
in
in
int3
out
incl
xchg
dec
and
sbb
aam
test
out
push
xorb
xchg
mov
add
data16
sbbb
inc
loope
loopne
add
xchg
push
and
mov
push
inc
test
mov
icebp
adc
in
or
fisttpl
jmp
add
mov
pop
aad
jno
push
dec
test
mov
xchg
sub
or
into
add
sub
pop
pop
mov
fdivrl
jbe
push
fs
push
or
adc
inc
jp
mov
outsb
jecxz
mov
mov
icebp
dec
xchg
mov
jo
add
mov
fsts
daa
dec
xchg
mov
lds
rcll
mov
mov
dec
fmull
inc
mov
jmp
lock
fcomi
nop
dec
aam
xor
mov
inc
inc
mov
or
add
shll
iret
lea
and
push
fucomip
adc
sub
xchg
mov
enter
sahf
mov
adc
fsubr
xchg
mov
jmp
push
mov
fsubl
xchg
xor
fldcw
insb
add
mov
pop
out
imul
inc
add
dec
in
xchg
pop
lods
mov
sbb
imul
jbe
adc
cmpsb
pop
icebp
idivb
or
mov
pushf
and
or
and
cmp
xor
dec
rclb
cltd
cmpsb
xchg
jbe
mov
mov
setne
jecxz
in
push
repnz
push
mov
loope
mov
add
stos
outsb
int
addr16
and
xchg
fdivrl
mov
mov
popa
aaa
lock
push
dec
jmp
mov
jmp
dec
std
xor
ss
repnz
inc
mov
mov
enter
out
icebp
pushf
stos
mov
mov
imul
or
shll
pop
mov
mov
xchg
popa
xor
call
mov
sub
cmp
xchg
cs
pusha
repz
lea
xchg
xorb
in
subb
stc
jne
pop
or
mov
aaa
ljmp
mov
xlat
mov
push
int3
jne
sbb
add
in
xchg
out
pop
roll
ljmp
std
repz
lock
mov
aam
test
insb
in
push
roll
push
cmp
cmp
popf
call
pop
add
mov
and
push
call
jmp
mov
mov
inc
adc
dec
mov
pop
iret
cmp
out
out
sbbb
repnz
mov
and
or
jmp
xchg
and
push
push
sahf
mov
out
sub
and
push
int3
aaa
cwtl
xchg
cmp
and
dec
enter
out
mov
xchg
push
xchg
and
xor
adc
leave
mov
and
add
insb
scas
pop
sub
pop
in
mov
jmp
ja
add
inc
mov
in
leave
cltd
addr16
mov
adc
loopne,pn
sub
pusha
popf
pop
or
pop
insb
ficoml
pop
jno
push
and
fsubr
insb
mov
fisubl
jbe
stc
mov
and
call
lods
xchg
push
out
nop
mov
add
xor
movzbl
call
into
pop
mov
decl
xor
in
mov
js
and
and
mov
push
mov
loop
pop
repnz
push
iret
or
xor
dec
notb
sahf
xor
mov
dec
mov
pop
xor
call
rorb
sarl
mov
out
ficomps
in
shl
clc
mov
jae
icebp
sbb
push
lcall
and
xor
mov
js
mov
add
hlt
cmp
in
push
call
push
addb
xor
stc
cltd
incl
mov
jp
in
ja
adc
and
outsb
dec
aas
aaa
shll
cmp
jno
cld
movsl
cmp
inc
xor
stc
inc
outsl
sub
or
mov
jo
cs
cld
push
jb
sub
sub
xchg
or
fmuls
inc
xchg
sbb
lock
mov
adc
dec
repnz
testl
push
mov
mov
inc
sub
adcl
xor
sti
pop
das
xorb
push
sbb
sbb
repz
adc
fcomps
mov
pop
or
push
cmpsl
into
push
inc
push
dec
xor
adc
mov
or
hlt
aaa
outsl
pop
test
not
cmp
push
mov
add
and
in
add
dec
jecxz
dec
or
xchg
jmp
aas
insl
in
mov
insb
add
cmp
adc
mov
lock
mov
int
jle
jmp
cmpsb
push
cmpsb
sub
scas
jae
data16
jnp
sub
call
decl
ret
mov
imul
inc
pop
mov
xor
xchg
or
outsb
lds
sbb
aad
je
int3
loope
mov
rclb
dec
testb
xor
sbb
add
dec
push
dec
mov
push
add
sub
xchg
push
pop
das
push
pop
addb
jl
pop
stc
pop
xor
hlt
pop
in
int
inc
mov
push
add
es
cmp
fisttps
or
add
dec
xchg
xor
mov
xor
mov
sbb
jae
fiadds
iret
sbb
inc
jbe
or
jmp
daa
jl
bound
scas
clc
pop
fs
adc
sbb
popf
fmulp
inc
jnp
into
jecxz
and
clc
pushf
adc
dec
inc
scas
or
xor
into
mov
cmpsb
in
sbb
pushf
xcrypt-cfb
cmpsl
loop
fisubrs
repnz
fs
pop
mov
mov
lahf
mov
or
movl
or
insl
xchg
dec
sbb
lahf
pop
push
pop
lock
and
mov
call
mov
movsl
imull
addr16
or
or
lods
add
inc
mov
xchg
sar
enter
or
mov
pop
pop
call
test
mov
jmp
adc
push
sbb
test
addb
mov
jne
xchg
mov
dec
xchg
pop
push
cld
arpl
push
pop
mov
popf
cs
popa
test
call
insb
and
jmp
mov
push
jmp
adc
rol
jne
dec
andb
adc
jae
lock
xchg
fistpll
or
outsb
cmp
in
lock
dec
rcrb
mov
test
adc
or
mov
into
xor
xchg
jbe
jo
addr16
or
out
push
scas
pushf
lock
push
aas
cmp
and
sarl
icebp
xorl
psrlw
add
dec
mov
or
stc
out
lock
jno
push
aaa
pushf
lock
sbb
xchg
pop
sub
sbb
and
test
xchg
jns
xor
jno
pop
pop
lock
adc
mov
push
dec
clc
stos
les
stc
ja
add
sbb
mov
xchg
pop
imul
mov
add
xchg
movsl
mov
int3
mov
adc
imul
out
popa
jb
sbb
xchg
lahf
sub
call
mov
inc
loope
rcrl
push
sub
pop
cmp
xchg
xchg
out
enter
push
pusha
scas
xchg
repnz
cs
and
insb
xor
mov
and
jmp
add
add
insb
or
mov
idivl
xor
xor
mov
adc
jmp
jns
test
push
inc
jmp
xchg
pop
or
push
cs
inc
and
push
jmp
pop
mov
mov
or
mov
in
push
lods
mov
sbbb
sbb
push
inc
lds
mov
fs
sbb
inc
js
dec
mov
or
sti
and
popf
mov
dec
movsl
fmuls
call
or
repnz
bnd
xor
jmp
sti
popa
imul
je
cwtl
mov
lods
push
or
xor
pop
cmpsl
pusha
sbb
cs
aam
scas
lret
imul
inc
repz
jo
pop
push
mov
cmp
adc
jo
pop
stos
shr
ja
push
aas
xor
xor
jb
lret
xor
cmpsl
jecxz
ja
adc
xchg
mov
xchg
pusha
in
and
push
and
movsl
incl
sub
lds
std
mov
shl
enter
mov
xchg
clc
sub
das
sub
push
decb
int3
mov
addr16
movsb
pop
pop
cmp
jbe
or
inc
xlat
mov
xor
jmp
xchg
sub
js
sub
push
mov
ficoml
cltd
mov
insl
sbb
adc
push
cmpsl
lock
adc
and
or
xor
or
sbb
or
jae
aad
in
sbb
std
cmpsb
lea
popf
jg
aad
dec
loope
add
gs
sahf
dec
loopne
push
aad
push
pop
data16
xor
das
pop
sbb
sub
or
cmpsl
aam
dec
add
outsl
mov
xchg
add
mov
mov
btc
cmp
inc
jnp
inc
bound
or
jge
fsubl
dec
scas
and
ss
inc
mov
out
mov
stos
jl
adc
fidivs
xor
cwtl
mov
jecxz
int3
mov
jmp
sbb
and
pop
ret
data16
mov
mov
mov
dec
test
pop
call
sbb
add
dec
enter
dec
add
nop
xor
mov
cmpb
lahf
aam
das
pop
out
cmp
ror
cwtl
inc
cmp
xor
or
hlt
test
lock
push
mov
ss
mov
into
cmpsl
hlt
pop
es
or
es
aam
mov
sub
icebp
outsl
notb
mov
mov
jge
cmp
aad
cmc
xchg
or
into
ljmp
ret
test
in
lea
fstl
xchg
mov
add
or
mov
and
repnz
jp
fwait
sbbl
hlt
icebp
stos
pop
nop
shr
gs
test
sbb
cli
repz
outsb
mov
sub
or
jb
fisttps
mov
sahf
xor
and
dec
aam
pop
jge
fsubs
and
js
or
add
or
push
mov
subb
mov
or
or
mov
xor
xchg
sub
loopne
mov
outsl
popf
loop
pop
call
xor
mov
push
push
pop
cmp
xlat
in
pop
out
leave
pop
bound
shll
adc
das
pop
repnz
jnp
mov
or
test
jb
pop
push
push
shufps
mov
sub
cmp
rorl
stos
or
lea
fucomi
xchg
mov
or
mov
cwtl
add
dec
aaa
mov
aad
daa
mov
cwtl
addl
addr16
mov
fisttps
mov
adc
nop
inc
xchg
repnz
lret
xor
sbb
mov
pop
xor
fisubrs
pop
pop
mov
imul
lcall
es
test
sub
sbb
fcom
sbb
cltd
ja
shrl
cmp
xchg
inc
xor
push
int
negl
adc
mov
mov
add
enter
movsb
sbb
inc
sbb
js
dec
call
enter
add
les
push
inc
fstpl
ljmp
icebp
push
jl
imul
outsl
or
push
mov
mov
sub
inc
xchg
stos
mov
inc
sahf
pop
mov
ss
push
pop
dec
insb
and
sbb
pop
inc
or
mov
inc
pop
subl
add
push
js
mov
adc
mov
dec
sub
mov
jp
test
ret
mov
outsb
jmp
insb
mov
add
arpl
movsb
or
out
shl
xchg
push
inc
adc
les
sbb
sub
cwtl
notb
dec
or
jno
jnp
inc
cmc
das
cwtl
lahf
sar
sarb
fwait
sbb
jae
xchg
aaa
mov
sub
mov
sbb
ss
dec
add
mov
jmp
mov
jecxz
mov
repnz
jmp
dec
pop
mov
icebp
or
int3
mov
lret
xchg
or
cmp
loopne
xchg
mov
cld
add
jmp
daa
lret
shl
and
jnp
inc
test
ja
dec
sub
andb
cmp
add
mov
push
pop
ja
stos
test
movsw
fiaddl
call
arpl
dec
sarb
nop
rcrb
adc
and
inc
adc
sarl
call
imul
mov
icebp
fwait
jmp
repnz
cli
inc
push
jns
sub
sub
push
xlat
xchg
sbbl
mov
pop
pop
or
test
push
bound
sbb
das
jb
leave
jnp
or
cmp
xorl
movsl
mov
pop
inc
lods
pop
outsl
shll
bound
jno
xchg
insb
sub
adcl
ret
mov
pop
jmp
dec
dec
aaa
lock
mov
mov
nop
popa
das
lahf
sbb
and
jmp
into
mov
push
jne
or
add
dec
mov
sub
dec
jmp
mov
adc
loopne
sbbl
fs
push
inc
ret
dec
enter
mulb
clc
adc
pop
ud0
inc
pop
addb
fwait
or
repnz
call
fs
fadds
out
lret
xor
cwtl
adc
mov
lock
push
test
sub
js
repz
test
dec
addr16
in
leave
inc
add
dec
adc
pop
lahf
xchg
add
cwtl
sub
iret
das
rcr
dec
xchg
pop
ss
nop
sub
sbb
bound
mov
xchg
cmpsb
leave
pop
cmp
ds
mov
iret
cmpsl
mov
arpl
lcall
or
or
das
xor
sub
inc
adc
sbb
and
mov
fcomps
jno
scas
jbe
das
repz
sub
pop
inc
mov
xlat
in
push
push
jmp
xor
pop
in
push
cmpsb
push
cmp
sub
cmp
pop
out
mov
mov
fwait
orl
addr16
call
and
push
mov
popf
rclb
mov
cwtl
cmc
mov
cmp
mov
push
mov
or
outsb
jl
ret
sbbl
pop
mov
push
mov
mov
pop
xor
and
pop
push
pop
xchg
daa
rcrl
div
mov
leave
decb
std
ret
cmp
or
jne
fldl
stos
xor
sbb
rcrl
inc
inc
stos
pop
out
push
divb
sti
enter
insb
icebp
push
sbb
add
and
inc
xchg
add
or
gs
push
push
out
and
iret
nop
les
cmovnp
xor
dec
mov
or
cwtl
dec
mov
popf
push
xchg
lcall
adcb
push
inc
lret
ret
jo
dec
fbstp
pop
mov
test
cmpsl
rcrb
jne
push
lret
push
mov
pop
xor
loope
lods
pop
sbb
pop
jbe
das
ret
loopne
cli
push
lret
and
out
inc
cmpsb
out
mov
shr
jnp
cltd
in
mov
mov
pushf
mov
lods
xchg
pop
cmpsl
lods
xlat
insb
lahf
mull
fstps
xchg
shl
mov
jmp
sti
lcall
fwait
inc
rcl
xchg
call
mov
dec
inc
or
push
repz
xor
pop
mov
jb
or
pop
mov
or
aad
cmpb
das
jge
adc
push
mov
jmp
cmpsl
loope
add
int3
xchg
cli
imulb
or
xor
mov
fs
or
dec
dec
loope
xor
loope
add
hlt
xorb
mov
xchg
push
sar
test
push
xchg
mov
jge
push
xor
dec
hlt
and
lock
xchg
or
shll
pop
movl
imul
and
push
mov
fldl
push
jb
or
lahf
sti
sub
inc
adc
outsl
mov
sahf
sbb
mov
test
lods
or
sub
test
das
xchg
mov
inc
popa
daa
subb
test
xchg
lahf
jge
sbb
enter
mov
cli
push
lcall
xorb
and
sbb
or
jmp
mov
xor
mov
jns
popa
mov
fsubrl
sar
mov
out
push
mov
push
pop
enter
leave
lock
cmpb
add
inc
xchg
fwait
mov
push
inc
dec
xchg
mov
sub
xchg
popf
int3
push
jno
fnstcw
cld
cmp
lock
pop
repnz
sbb
dec
and
fldcw
pop
sti
and
outsb
sbb
cmp
jne
lods
sbb
sahf
mov
and
call
fsub
cmpsl
lahf
push
push
aad
sbb
pop
jle
mov
cmp
pop
andb
fcmovbe
cmp
push
pop
movsb
mov
inc
mov
or
adc
je
shll
pushw
mov
cmc
lret
clc
loop
fimuls
xor
jmp
add
inc
dec
push
insl
pop
lret
xor
data16
mov
mov
pop
into
mov
inc
mov
jecxz
xchg
jns
push
mov
mov
jbe
adc
sbb
imull
shlb
mov
mov
and
sbb
pop
shl
xchg
sub
out
mov
inc
adc
fldt
fldenv
iret
aad
or
xor
clc
jb
inc
push
sub
popf
sbb
fabs
lea
dec
xchg
jb
mov
shll
add
mov
dec
cli
push
sub
push
xchg
mov
in
out
xor
cmp
aam
jecxz
pop
cmp
cwtl
push
sub
xchg
or
push
es
sarb
adc
call
xor
aad
sub
inc
pop
or
call
rorl
andb
mov
pop
clc
shrl
dec
or
xor
cwtl
xlat
repnz
stc
ljmp
mov
sub
xlat
sub
cwtl
mov
cmp
dec
push
mulb
jl
xor
mov
insb
mov
in
pop
mov
xor
xor
lret
lcall
sbb
jo
push
call
gs
sbb
cmp
jno
popf
icebp
popf
inc
mov
xchg
xor
mov
fisttpll
adc
add
mov
std
push
dec
ds
nop
pop
xchg
jns
dec
mov
jle
inc
fisttps
jmp
push
loopne
les
addb
jo
sahf
imulb
iret
mov
sahf
push
pop
mov
dec
jo
int
imul
orb
sbb
test
andl
sbb
es
sbb
pop
lret
stos
out
push
cld
nop
jne
push
out
test
dec
clc
out
mov
pop
mov
int
inc
rcrb
or
mov
popf
dec
or
je
push
xchg
push
jmp
push
adc
mov
cmp
cwtl
out
test
mov
push
mov
push
idivb
xchg
xchg
inc
packuswb
mov
pop
jo
aas
mov
cmp
out
adc
ljmp
push
xor
fists
xchg
xlat
bound
pop
pop
mov
neg
mov
inc
ret
lret
ds
jmp
jb
rorl
stc
inc
inc
mov
imul
jno
xchg
dec
pop
mov
mov
loop
dec
pop
into
xchg
leave
push
add
sahf
xchg
or
pusha
or
or
xor
out
push
hlt
in
xlat
enter
cmp
stc
dec
and
inc
lret
aaa
leave
or
testb
xor
shrl
inc
mov
xchg
mov
insl
fcmovb
inc
sub
jge
in
push
into
pop
pusha
imul
insb
xlat
das
or
orb
mov
ja
int
imul
nop
dec
jne
aas
sti
cwtl
dec
inc
xchg
popf
xchg
and
mov
sub
rorb
sub
test
inc
push
jg
push
jmp
sbb
call
jle
test
cwtl
jmp
lods
aam
mov
cld
pop
xchg
int3
xchg
out
push
xchg
sbb
sub
push
mov
xor
sbb
add
std
cmp
jnp
out
mov
ljmp
xchg
mov
push
xor
js
mov
pop
mov
push
fmull
mov
pop
mov
or
xor
mov
dec
jbe
push
inc
add
les
pop
mov
mov
into
xchg
push
xchg
lods
call
ds
lret
xor
mov
lahf
rorb
cmp
movsb
push
lods
stos
and
call
jnp
add
jnp
mov
jbe
cmpb
jmp
cmp
out
mov
add
popf
sbb
adc
add
aad
jo
loop
sub
push
or
test
leave
xor
dec
pop
aam
adc
in
leave
cli
pop
or
mov
test
mov
jb
ljmp
and
cmpsl
jb
out
add
xorb
jmp
mov
xchg
aad
xchg
mov
pop
test
nop
jmp
push
fmull
pop
ja
aas
mov
or
pop
scas
add
pushf
inc
xor
movsb
lcall
test
or
push
insl
sbb
insb
pop
push
push
aam
sub
out
cli
sbbb
bound
jne
adc
addb
push
arpl
mov
mov
das
lea
dec
and
xchg
or
rcr
cwtl
mov
xchg
out
inc
fnstcw
mov
dec
aam
mov
ja
mov
nop
outsb
inc
or
xor
xor
adc
add
push
dec
dec
sub
repnz
test
adc
in
bnd
and
inc
mov
aas
push
adc
sahf
repz
xchg
cmpsb
push
dec
mov
fnsave
ss
test
mov
rorl
add
jnp
jle
in
xchg
lahf
jno
in
cltd
or
aam
push
mov
lock
addr16
repz
mov
mov
pop
call
push
clc
or
lds
push
fsubrl
mov
daa
in
sub
mov
add
or
xchg
adc
in
movntq
aam
sub
enter
jmp
and
push
inc
sbb
xor
decl
mov
cld
movl
pop
adc
xchg
push
pop
sbb
mov
mov
popa
jmp
sahf
push
test
pop
repnz
pop
push
xchg
loop
push
addr16
cltd
xor
or
fdivl
pop
out
cmp
repnz
pop
inc
test
jecxz
sbb
jmp
es
xorps
movsl
push
sub
sti
push
scas
lcall
mov
das
inc
jb
inc
inc
jo
inc
test
inc
fimuls
loopne
je
push
sub
xchg
divb
mov
sbb
aad
xor
add
jnp
xor
rorl
fldl
repnz
lahf
mov
shlb
jae
push
insl
inc
test
daa
jo
pop
pop
orb
mov
call
in
mov
inc
outsb
inc
repz
in
movsb
push
fisubrs
lods
mov
hlt
add
sub
popa
pop
lds
sub
xchg
mov
in
or
xchg
sub
or
or
or
inc
jge
and
call
sub
xchg
repnz
mov
push
or
push
adcb
adc
in
jo
mov
inc
mov
mov
push
loope
mov
pop
cmp
xchg
fidivs
inc
pop
sub
push
je
jp
ret
aad
add
mov
out
push
shrb
cmpl
fnstsw
push
jmp
mov
adc
lea
icebp
dec
lods
addr16
nop
mov
cmp
gs
add
shl
jns
lret
push
cmpsb
add
mov
aad
aad
pop
mov
jmp
lock
mov
daa
cmovge
dec
imul
inc
das
add
fists
sti
mov
mov
pusha
or
repnz
fsubp
inc
adc
shrl
push
bound
std
cmp
lock
or
stc
cmp
add
fisubs
loope
jns
stos
rol
dec
jne
stos
test
lahf
imul
fdivr
imul
mov
out
ds
jnp
push
sub
xor
mov
shl
aad
in
mov
sub
xchg
mov
scas
push
dec
lret
inc
xor
mov
call
cmpsl
add
test
rorl
xchg
xor
popf
mov
pop
addl
dec
dec
out
push
clc
inc
xchg
cmp
lret
bound
lds
ja
pop
mov
aad
repz
sbb
xchg
popf
int3
fs
add
push
xchg
jp
mov
cwtl
jmp
or
repnz
ret
rorl
xchg
cltd
jge
xor
adc
adc
and
pop
xor
xlat
stos
dec
das
pop
adc
sub
outsl
xor
pop
lret
popf
sbb
sub
out
popf
cld
mov
aad
mov
ljmp
cmpsb
and
push
in
cld
pop
jb
arpl
outsl
push
enter
call
mov
and
sub
cmp
lods
add
sbb
inc
jg
add
and
push
out
mov
mov
outsb
cli
sub
mov
mov
das
inc
mov
dec
xor
inc
cmp
fwait
leave
loop
fildll
clc
popa
pusha
icebp
xor
imulb
movsl
mov
mov
mov
inc
push
xchg
ja
sti
sub
je
or
pop
push
scas
nop
mov
push
and
lods
adc
lods
or
lea
mov
fidivrs
add
sub
mov
imul
repnz
mov
js
push
push
bnd
adc
insb
mov
jo
or
movsl
sub
addr16
and
repnz
xor
xchg
or
cmp
dec
add
sbb
push
xchg
push
enter
add
out
pop
mov
aad
mov
xchg
jmp
xchg
mov
std
push
loope
jne
xchg
shrl
fs
push
test
popf
xlat
repnz
dec
xchg
stc
mov
xchg
repnz
push
jo
fists
rol
nop
popl
adc
or
fisubrs
pop
or
xchg
aam
or
cmp
push
test
fs
loope
addb
out
dec
loop
sub
jecxz
aad
loop
cwtl
loope
mov
push
mov
dec
adc
pop
lock
sbb
push
clc
sub
cmpsl
adc
xchg
inc
rcrb
mov
leave
xor
ret
sti
dec
stc
cmp
call
leave
mov
stc
hlt
push
in
jb
stos
push
jl
dec
inc
orl
sub
or
cmc
xchg
js
rep
and
adc
mov
fistpl
lahf
lods
jle
dec
fdivl
cmp
inc
jl
fcmovbe
data16
test
pop
mov
loop
dec
mov
mov
repz
xchg
mov
popa
mov
sbb
icebp
pop
mov
je
mov
scas
das
ret
cmp
pop
test
jae
ret
fmull
cmp
out
fucomp
out
pop
push
xor
dec
scas
sbb
repnz
cmp
sbb
loop
out
or
sti
out
xchg
jae
loopne
or
jo
xchg
push
hlt
jmp
lods
jbe
push
ljmp
lahf
mov
push
incb
push
repnz
call
pop
lret
pop
push
mov
fbstp
testb
mov
push
or
loope
jo
push
xor
pop
sub
or
movsl
andl
in
repz
test
mov
jns
jmp
insb
je
sbb
repnz
inc
fstl
lea
cmp
subl
xchg
mov
pop
dec
adc
xchg
mov
andl
shll
push
sbb
jl
pop
repz
or
add
sub
or
mov
xor
call
xchg
lods
or
je
scas
jge
dec
jg
lods
lcall
pushf
fistpl
xchg
xorl
push
pop
pop
mov
scas
sub
ret
and
mov
xor
add
ljmp
cmp
fld1
ljmp
sbbl
add
push
sahf
into
or
add
loop
das
call
cltd
lods
fidivrs
push
ss
jmp
sbb
jge
clc
lea
inc
lret
mov
jae
push
inc
dec
mov
inc
lret
shll
xchg
mov
lahf
fstl
ret
mov
bnd
fstl
out
dec
mov
add
mov
mov
mov
xchg
mov
imul
push
in
dec
jne
lea
scas
dec
pop
xlat
repnz
pop
xchg
push
jbe
dec
cmpsl
data16
repnz
imull
pop
shlb
add
test
pop
lret
push
stos
shrb
pop
jmp
adc
loop
imul
pushw
cmc
fdivl
lret
rclb
xor
out
and
cmp
jae
xor
add
xlat
mov
dec
dec
pop
rclb
adc
lahf
cmp
and
push
call
mov
sub
pop
negl
lret
fwait
pop
nop
nop
fisubl
adc
mov
sub
outsb
mov
sub
and
int
mov
inc
jb
push
push
insl
dec
xlat
and
xchg
adcl
jmp
roll
mov
int
push
sbb
repnz
cmpl
cld
out
jge
cwtl
out
lods
dec
pop
cmc
enter
stc
iret
add
cmp
in
pop
jnp
mov
or
nop
inc
or
jmp
add
xlat
mov
testb
outsb
test
dec
xor
shld
cmp
dec
mov
ja
push
aad
lahf
pop
js
push
into
pop
adc
jl
cmc
and
pop
jle
das
aam
inc
xor
mov
cmp
dec
push
pusha
cmpsb
inc
xchg
jbe
jae
jmp
push
sar
aad
aam
call
int3
pop
je
sbb
test
cmpl
insb
xorb
pop
je
dec
js
sbb
push
mov
cld
push
or
lcall
leave
xacquire
xchg
lods
mov
dec
or
nop
lock
std
aaa
adc
dec
xchg
icebp
mov
movsl
lea
or
inc
cmp
inc
or
push
and
inc
mov
sbb
cli
aad
sbb
addr16
das
push
fs
ja
add
sti
popf
int3
add
lea
jo
pusha
dec
dec
inc
cmp
loop
daa
adc
cmpsb
push
out
mov
cmp
mov
mov
jp
jmp
or
mov
sarb
repz
clc
xchg
xlat
stos
cmpsb
jp
sbb
daa
sarl
lea
xor
shl
xlat
stc
mov
sbbl
shlb
cmc
mov
jecxz
mov
enter
jbe
pop
lods
stos
movsl
add
les
sbb
test
mov
sub
pop
cli
in
cmp
mov
mov
es
inc
movsl
pop
mov
push
lea
cmpsl
fldcw
repz
imul
or
popa
cmp
mov
loope
sub
pop
arpl
inc
in
pop
jae
fdivrs
clc
scas
push
or
dec
or
push
add
mov
mov
jmp
add
testb
and
lea
xor
repz
mov
lahf
shlb
xchg
std
outsb
adc
outsb
pop
inc
aam
mov
xchg
imul
daa
movsb
mov
enter
inc
mov
idiv
dec
leave
adc
int3
dec
or
leave
dec
mov
add
sti
add
pop
add
sbb
xchg
mov
loopne
jmp
xor
stc
mov
push
pop
dec
add
add
in
addr16
icebp
test
push
mov
iretw
ret
movl
int
rcll
push
sub
sbb
fisubrl
les
movsb
sub
addr16
sti
xchg
pop
mov
cmp
cmpsl
xchg
sbb
out
call
xchg
sbb
sbb
in
mov
jmp
xor
inc
repnz
jle
mov
call
jg
add
test
or
add
leave
subl
cmp
jg
add
push
outsb
mov
dec
mov
nop
or
mov
cltd
rcr
or
cli
mov
lods
mov
dec
xchg
test
dec
pop
hlt
add
fdivr
ret
mov
pop
sti
xor
jmp
jb
jecxz
xchg
mov
and
xor
repnz
dec
popf
cmc
stos
rcr
xchg
ss
mov
inc
sarl
fs
enter
add
sbb
xchg
pusha
jns
shl
loopne
mov
mov
cmp
sbb
leave
movsl
jns
dec
cmpsb
test
push
jmp
sub
mov
jbe
mov
sub
adc
sbb
stc
mov
inc
mov
frstor
xor
stos
dec
pop
rcll
xor
or
mov
pop
jo
orl
push
test
in
out
mov
ret
pop
dec
mov
rclb
mov
adc
xchg
sarl
push
jb
insl
push
jp
add
inc
dec
add
fdivs
dec
adcb
xchg
lret
jl
fmull
cmp
sub
pop
or
cmp
lret
push
jae
cmc
sbb
loopne
jno
inc
int
aad
jo
jge
pop
movsl
push
mov
mov
add
push
dec
ljmp
aaa
cmp
or
fsubrs
lcall
mov
lds
xchg
es
dec
jmp
bound
jl
fnstcw
or
rolb
fcoms
hlt
xchg
leave
push
fucom
shrl
adc
push
icebp
push
jmp
stc
lea
adc
mov
out
jo
pop
sahf
lods
mov
popf
imull
nop
push
scas
add
dec
dec
repz
push
add
and
bound
and
pop
inc
clc
testl
into
imul
jne
sub
out
jne
inc
add
mov
and
mov
sub
int3
inc
lahf
jp
xchg
jne
cmp
add
popa
jb
icebp
fs
pop
pop
leave
movsl
stos
or
fwait
psubb
mov
push
icebp
icebp
shll
in
pop
movsl
daa
inc
mov
dec
dec
push
mov
outsb
jae
mov
sub
testb
xchg
adc
das
call
cwtl
lock
arpl
and
jo
xchg
out
and
notb
test
inc
mov
jp
inc
mov
jb
shl
test
pop
xor
mov
mov
jge
lock
inc
fadds
das
sub
add
inc
inc
lock
sub
lock
jno
xchg
jns
int3
repnz
sbb
lock
push
pop
add
fnsave
push
cmpb
movzbl
sub
push
ss
in
sbb
nop
sub
mov
daa
push
cmc
jg
cs
push
xor
dec
stos
push
pop
adc
xlat
enter
and
or
mov
popf
add
push
push
adc
jecxz
or
lahf
mov
xchg
fs
sbb
popa
dec
hlt
pop
push
or
jo
dec
xchg
daa
xchg
inc
and
cmp
pop
xor
mov
inc
pushw
enter
pop
jb
mov
popa
or
or
dec
inc
daa
xor
adc
popl
fidivs
dec
lods
or
xchg
mov
daa
jmp
mov
divl
arpl
mov
daa
xchg
stos
push
and
xchg
inc
mov
imul
mov
dec
mov
inc
mov
pop
call
test
loop
inc
add
lret
push
out
insl
ret
jg
mov
call
mov
dec
dec
ljmp
lcall
cmp
pushf
arpl
cmc
inc
pop
mov
out
adc
jmp
ds
jp
and
out
sub
and
mov
sub
dec
jecxz
test
shll
xor
xchg
outsb
popa
mov
push
xchg
test
xor
jl
lret
add
inc
in
scas
add
add
or
test
lods
leave
dec
and
inc
mov
pop
scas
push
popf
bound
test
gs
dec
fs
cmp
pop
test
mov
arpl
jae
cltd
pop
cmc
fmul
mov
jb
add
aam
aam
push
mov
call
dec
sub
test
shr
sbb
pop
lods
mov
add
xor
dec
sub
jae
loope
xchg
fs
jb
inc
fcomps
jle
xor
cmp
add
mov
out
pop
mov
cmp
and
subb
filds
mov
mov
test
rorb
movups
dec
jno
lret
fmuls
cmp
cs
xor
xlat
insb
fs
rcrl
or
daa
fcomi
pop
sbb
ret
or
pop
mov
bound
loopne
dec
xchg
cs
lods
fcoml
dec
push
loopne
add
lds
adcl
or
sub
repz
pop
comiss
mov
pop
mov
jbe
insl
or
aaa
rolb
xor
xchg
mov
aad
addb
es
cmpb
ret
icebp
mov
inc
ss
or
adc
outsb
push
pop
dec
cmp
sub
pushf
mov
mov
jl
jl
cmp
add
lcall
mov
das
or
dec
sbb
sub
mov
xor
lahf
shll
cmp
inc
cltd
popa
and
jle
xor
leave
mov
inc
lcall
jmp
mov
ss
mov
or
cmp
push
lock
push
pop
xchg
jecxz
dec
dec
and
inc
push
icebp
cmp
test
add
xor
scas
es
xchg
push
inc
outsl
inc
mov
mov
divb
add
fsubrs
jbe
in
adc
daa
push
fcmovnbe
sbb
xchg
call
cmpsb
rcrl
ljmp
das
mov
fildll
or
bsr
aad
out
or
jl
xchg
and
add
cmpsb
sub
cmp
xorb
neg
jb
movsb
frndint
es
xorl
lcall
jmp
mov
testb
popf
add
call
push
imul
out
mov
fstpl
into
jmp
or
adc
adc
or
mov
cmp
xchg
stos
xorl
pop
std
out
gs
adc
jb
vmwrite
dec
jne
push
push
xchg
pusha
and
push
sub
or
loopne
or
ja
dec
mov
cmp
call
lds
cmpsb
and
or
or
mov
push
das
dec
icebp
data16
jns
add
mov
add
ja
add
pop
clc
inc
cmp
test
lahf
es
sub
push
mov
or
push
cli
loopne
xor
pop
xorl
dec
pop
inc
jecxz
inc
cltd
daa
rcr
add
imul
sub
xchg
fmulp
insl
mov
popf
jge
loop
cltd
xchg
push
lods
and
sbb
insb
addb
inc
or
ja
fisttpll
popf
pop
push
mov
repz
mov
pop
stos
leave
cmp
sbb
pop
push
sub
and
movsb
std
add
call
lcall
cs
mov
test
pop
mov
test
std
mov
mov
pop
sarl
out
cmpl
mov
out
or
xchg
mov
xchg
sahf
movsl
addb
push
mov
cwtl
aam
cmpsl
insb
and
pop
dec
mov
cld
sub
sbb
pop
rclb
inc
icebp
and
xchg
push
adcl
xchg
pop
mov
adc
or
pushf
ret
lock
call
shrl
test
jo
es
xchg
int3
fbld
lret
jmp
xor
xchg
mov
sarb
dec
xchg
rorl
stc
mov
mov
add
addr16
int
aas
or
sbb
or
scas
and
aas
jp
aaa
adc
or
outsb
cmc
jecxz
notb
dec
je
rolb
dec
popf
daa
rol
scas
mov
pop
pop
push
mov
mov
dec
or
lahf
sarb
enter
int
int
push
mov
int3
jbe
adc
adcb
pop
mov
or
or
call
dec
jne
jns
and
or
or
pop
in
add
popf
dec
call
xchg
cmp
out
adc
popf
push
loope
test
loopne
or
jo
xchg
jge
sub
inc
ficompl
sub
mov
mov
and
add
mov
pop
or
dec
dec
jg
imul
dec
add
dec
mulb
fdiv
push
push
jmp
jno
lods
mov
pop
adc
sbb
mov
mov
inc
mov
pop
or
push
sbb
push
add
push
mov
or
sub
and
jo
push
imul
dec
fadd
cwtl
push
jns
cmc
cmp
sub
movsl
inc
or
xor
out
insb
pop
aas
ljmp
push
insl
stos
dec
sbb
in
push
dec
int
push
sub
dec
imul
sbb
xchg
shr
mov
pop
fisubl
cwtl
lods
pop
inc
push
mov
pop
stc
rep
pop
or
jns
lock
push
lcall
cli
xchg
add
cmpsb
mov
xor
pop
xor
push
jae
cltd
ror
pop
inc
push
mov
mov
leave
push
ficoms
sbb
mov
mov
fnstsw
mov
push
je
outsl
and
mov
dec
and
or
sub
ret
inc
sbb
push
xor
xchg
enter
push
push
pushf
pushl
or
shlb
sbb
jae
std
pop
pop
sbb
mov
mov
aaa
xor
int3
mov
adc
scas
push
shrl
push
jmp
mov
out
pusha
fisubrs
or
mov
xchg
push
repnz
push
dec
push
inc
mov
mov
adc
inc
popf
lods
or
lods
mov
loopne
cmp
xchg
fcmovu
push
sub
jmp
pusha
loop
insl
sbb
jns
push
pop
call
loop
add
jno
js
es
adc
jle
add
xor
es
shr
lret
mov
or
pop
outsb
mov
jge
cwtl
lret
fsts
dec
shll
rorl
inc
and
push
push
call
adc
fwait
sbb
push
scas
cmp
dec
sub
mov
cmpsl
enter
adc
adc
add
sub
dec
xchg
jmp
xchg
adc
ret
push
xor
push
xor
or
hlt
das
push
xchg
xor
scas
hlt
dec
push
mov
or
hlt
das
cwtl
mov
add
ret
fildl
cli
sbb
inc
mov
mov
cmp
or
adc
sti
jg
adc
mov
test
and
roll
jnp
lret
inc
sbb
imul
mov
inc
test
sahf
adc
clc
jecxz
adc
cmp
dec
xchg
pop
aas
push
fnstcw
sub
and
inc
inc
inc
and
pop
loope
and
or
call
test
ja
adc
sbb
call
sbb
dec
mov
ror
dec
and
sbb
cmp
add
enter
mov
in
repz
mov
out
or
add
mov
xchg
fcoms
sub
ret
mov
cmp
sub
repz
dec
mov
mov
sub
push
lds
push
into
inc
mov
mov
insb
movsl
jl
scas
jle
pushf
mov
dec
mov
pop
movsl
test
out
lds
xor
ret
in
and
add
mov
ffree
loop
dec
mov
pop
call
repnz
shl
push
dec
andl
rolb
add
in
add
mov
inc
mov
jne
sub
hlt
mov
xor
adc
mov
shlb
pop
mov
lahf
pop
jo
test
ret
int
sub
pop
mov
sbb
scas
adc
jae
push
movsl
pop
inc
push
xchg
mov
adc
jae
adc
adc
or
dec
push
add
adc
push
add
cld
sub
mov
mov
cmc
push
xor
gs
lahf
jno
dec
cltd
cmp
add
add
adc
cmc
pop
sti
lcall
popa
cs
xchg
ljmp
pop
inc
cltd
or
movsb
ficomps
cmp
aam
test
dec
lret
loope
mov
sahf
dec
or
clc
testl
test
push
mov
pop
push
sub
xchg
pop
jae
add
call
lcall
and
dec
dec
negl
mov
inc
rorb
sbb
idivl
lea
mov
movsl
xlat
sbb
mov
ds
in
push
xchg
cld
out
xor
inc
sbb
sti
cs
jae
pushf
push
xchg
pop
dec
jne
outsb
enter
or
xlat
mov
imul
sti
xor
mov
subb
scas
loopne
mov
mov
call
aas
shll
push
das
dec
lods
pop
pop
movsl
jp
andl
push
aam
bnd
mov
repz
ret
mov
ss
push
ja
fs
cmpsb
pop
subb
leave
adc
xchg
sbb
or
pop
inc
push
repnz
outsb
lock
nop
sub
es
inc
lods
jmp
insb
mov
fsub
fildll
dec
loopne
sarl
mov
ja
into
sahf
or
loop
and
push
jae
push
jmp
lods
mov
add
scas
fidivs
cmc
jno
mov
insb
aaa
repnz
cmpsl
cs
aad
push
fcompl
and
daa
rolb
mov
leave
push
pusha
or
fsubs
add
popa
stos
das
mov
shlb
mov
or
das
arpl
sub
xor
shl
sub
dec
fdivrs
in
xchg
add
inc
and
rol
xchg
nop
pop
jns
xor
imul
xchg
nop
push
mov
js
lahf
fistps
mov
ret
sbb
inc
enter
in
and
and
frstor
xor
out
adc
test
popf
fidivrs
std
subl
mov
es
push
mov
aad
inc
xor
cmp
outsb
repnz
jle
testb
inc
inc
xor
psrlw
outsl
outsl
cmovns
sbb
push
leave
dec
scas
movsl
cmc
lcall
in
adc
popa
jo
cmc
loope
jnp
xchg
mov
mov
repz
cli
and
lods
sub
mov
push
stos
adc
jo
roll
sub
out
adc
lcall
shlb
mov
or
mov
mov
sbb
push
add
fildll
cmp
cmp
jno
ljmp
mov
and
dec
test
push
jb
fildl
or
imull
mov
repnz
insl
push
jns
addr16
out
and
call
cmp
xor
data16
enter
add
push
push
sbb
mov
fadds
dec
dec
pop
mov
stc
popf
sub
lock
sub
jb
mov
jo
pop
push
ret
xchg
scas
push
jno
pop
cmc
std
fstps
jbe
jb
pop
movntq
movsb
pop
das
xchg
adc
int
scas
in
inc
push
movsb
addr16
mov
pop
rorb
mov
mov
or
ret
xor
xor
jle
rcrl
popf
adc
leave
loop
lods
sqrtps
icebp
cmp
or
mov
pop
fsubs
xor
sbb
loope
pop
ss
mov
xor
mov
xchg
adc
insl
cmp
inc
call
jmp
inc
stos
dec
in
pop
lea
or
test
lea
adc
cmp
mov
or
leave
in
cmpsl
mov
add
out
mov
push
xor
out
pop
rcrl
lods
int3
jle
lds
pop
test
add
sti
mov
lock
cmp
sub
roll
add
daa
xor
rcrb
mov
jecxz
sub
cmp
pop
or
repnz
add
xlat
outsb
cmp
xchg
adc
pop
aam
cmp
test
jg
dec
loopne
inc
mov
repnz
add
sub
mov
jbe
aam
sbb
xor
popf
pusha
lcall
cmp
incl
jno
jns
jo
cmp
push
pop
addr16
js
sbb
push
jae
xor
out
sub
push
data16
lahf
outsb
sub
call
lea
cwtl
lcall
inc
fildll
sub
leave
dec
inc
adc
mov
leave
add
int3
push
mov
and
xor
test
mov
ja
jb
adc
std
xchg
movb
add
cmp
xchg
enter
inc
xor
sub
call
inc
leave
fstps
jmp
or
jns
mov
andb
xor
mov
mov
sub
pop
sahf
adc
dec
dec
and
inc
push
inc
inc
fimull
adc
in
adcb
rol
test
cli
mov
fstps
xchg
mov
and
cltd
cwtl
rcrb
jge
popa
add
lods
pop
int3
daa
mov
pushf
add
jg
cld
add
xor
pop
sbb
cmp
pop
or
sub
adc
mov
xor
and
inc
or
jecxz
movsl
push
subb
jb
xlat
mov
rorb
cmc
and
fldt
jmp
push
fisttpl
inc
cmp
sub
outsb
lcall
and
cmpsl
inc
xchg
sbb
adc
pushf
push
adc
add
or
mov
in
lcall
add
and
push
sbb
aas
loopne
and
xor
jg
inc
lcall
test
cld
ficompl
and
fnstenv
aas
inc
mov
rcrl
test
pop
or
scas
pop
daa
icebp
pushf
int3
mov
push
jo
mov
and
mov
add
mov
in
leave
adcb
and
xchg
sbb
ret
dec
icebp
push
push
lea
mov
lret
faddl
pushl
lret
push
lea
mov
dec
repnz
mov
enter
xchg
xchg
or
or
lds
sbb
xor
and
addl
xor
insb
adc
mov
hlt
lods
out
js
push
mov
hlt
enter
je
xor
int
mov
fmull
mov
sbb
xchg
sbb
repnz
add
xor
repnz
dec
mov
xchg
push
push
jmp
cmp
stos
xchg
pop
adc
jae
ficoml
or
rorl
lea
popf
out
out
push
call
adc
push
jl
xchg
fs
add
rorb
push
lahf
dec
mov
sbb
inc
cmp
mov
xlat
jge
pop
repnz
sti
mov
push
flds
sub
pop
mov
jmp
sbb
xor
std
jno
cld
push
call
mov
cmp
push
addr16
cmovb
insb
cs
inc
loope
adc
fstps
jg
or
dec
jmp
lret
addl
popa
out
mov
xor
jg
aaa
fdivrs
das
sub
sar
inc
icebp
mov
dec
je
sub
cwtl
jmp
push
fldl
xchg
inc
xchg
ja
jl
adc
bsr
orl
mov
lds
dec
jnp
dec
cmp
ret
mov
jmp
std
insb
stos
in
pusha
scas
js
lahf
inc
or
loopw
add
mov
out
push
out
add
sti
popa
ss
and
pop
push
ljmp
scas
sub
lret
jno
sub
ja
sub
sbbb
or
lret
push
out
fdiv
add
in
lea
cltd
push
jp
fiadds
xchg
mov
and
popa
jecxz
dec
mov
mov
ss
rorl
sbb
push
push
and
jg
popa
mov
push
daa
pop
push
stos
adc
sub
nop
and
mov
pop
or
push
loop
inc
arpl
popa
jle
adcl
sti
stc
pop
andb
xor
cmpsb
and
xchg
jge
mov
cmpsb
jecxz
sti
mov
pop
dec
andl
push
fcompl
xor
and
popf
maskmovq
test
mov
push
pop
xchg
jb
xchg
icebp
push
cmp
fidivrl
lcall
jbe
xor
pop
jmp
in
stos
mov
subl
repz
scas
add
jg
or
dec
xchg
cmpsb
enter
mov
addr16
xlat
stc
xchg
mov
lea
imull
repnz
ret
mov
pusha
mov
inc
mov
ljmp
sbb
add
sub
rcrb
inc
cld
mov
lahf
fs
pushf
iret
out
lods
mov
in
mov
sub
in
call
out
xchg
jbe
out
pop
mov
jmp
test
lea
in
dec
xchg
in
out
in
out
inc
pop
jmp
mov
testb
call
cmp
ret
ja
pop
xchg
out
sub
cli
lret
xchg
mov
pop
pop
ja
fwait
inc
and
cmp
mov
mov
push
cld
mov
fwait
xlat
add
pusha
jb
lcall
cwtl
and
xchg
inc
add
cli
roll
or
int3
mov
je
inc
enter
pop
movb
push
loopne
fwait
adc
pop
das
inc
cmc
data16
bound
xor
lods
lret
lahf
shll
push
mov
shl
dec
pop
inc
or
sub
int3
jno
add
mov
lret
pop
jno
xchg
mov
pop
enter
dec
pop
and
inc
and
pop
lock
jle
inc
inc
mov
lahf
mov
mull
shr
fdivrl
sub
call
pop
push
sar
add
lds
sbb
inc
sbbb
mov
dec
mov
rorb
mov
sbb
push
fcoml
or
add
into
and
jmp
jmp
ljmp
mov
aad
stos
call
mov
and
sar
xor
int
daa
mov
add
jecxz
or
mov
sub
dec
adc
or
mov
or
fs
cmp
add
ljmp
es
ljmp
inc
push
jo
push
dec
dec
pop
push
cwtl
mov
push
ljmp
out
sub
or
test
pop
jmp
cs
and
jg
sahf
cmp
daa
push
sub
out
inc
adc
ja
sub
mov
popfw
ljmp
mov
push
jmp
lock
sahf
inc
xchg
addr16
outsb
jecxz
add
xor
test
sub
xorl
or
adc
and
ret
aad
cmp
push
jnp
lahf
sbb
sbb
adc
aas
lahf
imul
or
cmpb
inc
pop
or
je
push
lahf
repz
rcrl
mov
mov
push
add
dec
xchg
pop
std
adc
sbb
cmp
cmc
mov
or
call
and
add
mov
enter
add
subl
push
int3
xor
int3
mov
jnp
push
ret
cmp
xchg
and
add
xor
call
lahf
push
scas
jp
shlb
mov
arpl
push
push
decl
aas
jg
xor
dec
xor
push
cli
dec
js
mov
sbb
adc
jb
daa
push
or
and
movsl
outsb
or
xchg
mov
fdivp
es
inc
mov
pop
and
mov
xchg
xchg
push
pop
lds
xchg
pop
pop
popa
inc
xor
jno
scas
out
pop
lret
jmp
call
test
add
test
ljmp
lods
sub
pop
mov
jge
ficoml
xchg
cmpsl
dec
stc
sbbl
lds
mov
fnstcw
cwtl
sub
jno
roll
jbe
rclb
and
call
sub
cmpsb
cs
int3
lea
xchg
xorb
sub
lea
daa
pop
mov
xchg
jmp
or
push
sbb
dec
mov
push
jbe
sar
adc
cmp
lds
mov
inc
mulb
movsb
cmp
push
mov
pop
xchg
sub
lahf
ja
stos
jne
mov
insb
xchg
ret
repz
or
insl
mov
dec
test
rcr
or
ffreep
int
stc
lret
add
xchg
inc
xchg
push
inc
mov
push
adcb
int3
pop
test
jno
xchg
cmp
or
leave
jge
mov
jbe
xchg
sbb
cs
mov
jns
jo
push
outsl
xchg
clc
mov
xlat
dec
cmc
fldenv
test
pop
je
dec
in
xor
dec
inc
or
ret
pop
add
stos
xchg
call
mov
or
push
jo
xor
pop
push
sub
out
pop
icebp
cmp
xchg
or
sub
negl
and
or
add
fsubrl
add
xor
shlb
cltd
pusha
insb
cmp
xor
filds
and
cmpsl
cmp
jmp
call
imulb
adc
jmp
call
mov
std
or
mov
push
aad
roll
or
dec
adc
orb
push
iret
sbb
mov
jge
lahf
sahf
popa
lcall
fs
dec
xchg
inc
cltd
out
lahf
pushf
aad
inc
lret
mov
pop
mov
inc
out
std
jecxz
scas
ret
cmp
dec
mov
popa
femms
add
xor
lock
mov
mov
ss
xchg
pop
mov
test
and
mov
jo
jl
mov
pop
ret
imul
mov
mov
inc
cmp
test
jb
in
add
hlt
idiv
mov
test
sbb
inc
in
call
data16
and
cltd
xlat
mov
mov
popf
inc
sub
into
sub
loop
daa
xor
mov
movl
fsubr
add
cmp
jb
mov
jl
addb
jmp
test
sub
in
dec
mov
mov
into
js
mov
lods
lds
ljmp
pop
js
fcmovbe
loope
pop
cmpb
sarl
subb
pop
add
push
je
sbb
sbb
xchg
bound
xchg
ret
xor
push
sub
mov
and
icebp
or
addr16
es
inc
pop
lcall
sub
add
std
mov
testl
bnd
jns
daa
jbe
dec
jle
int
sti
pop
xor
mov
inc
loope
call
push
jg
fwait
push
sbb
xchg
xor
pop
test
push
mov
clc
ror
lock
push
or
fisubrl
out
ja
jmp
in
xor
enter
or
dec
adcb
scas
shlb
nop
pushf
mov
dec
addb
sbb
fs
mov
ret
jne
pop
mov
dec
je,pn
rcr
ss
loope
int3
xchg
sbb
xor
into
mov
adc
or
popa
out
lea
lret
imul
add
sbb
xor
jmp
jne
or
insl
ljmp
mov
mov
aad
jge
jle
pop
sub
stc
out
lods
clc
add
addr16
in
inc
ja
lock
jmp
aam
mov
dec
mov
jmp
xchg
jo
xchg
subl
cmpsl
mov
out
or
xchg
call
mov
lahf
outsb
lock
insb
jl
xchg
aad
dec
repz
push
test
or
fcmovbe
adc
push
scas
shrb
andl
insb
int3
add
insl
mov
fiadds
mov
addb
xchg
in
or
mov
inc
out
or
mov
inc
jmp
popa
xor
mov
divl
call
xchg
and
pop
cmp
mov
add
or
test
dec
ja
mov
jge,pt
xor
aaa
sub
mov
jb
repnz
les
dec
inc
xor
ret
dec
rcll
mov
mov
sbb
out
int
dec
mov
jecxz
or
lret
xchg
jo
mov
clc
jge
inc
lahf
pop
cli
mov
inc
mov
testl
ds
jecxz
push
in
inc
jae
xorb
sub
add
subb
push
push
cmp
mov
loopne
lock
push
in
adc
lds
add
jp
push
and
or
inc
insb
mov
adc
lea
add
rcrb
movzwl
xchg
or
inc
push
rcrl
cld
cmp
xchg
cmp
inc
or
sti
pop
push
popa
ds
inc
sub
rcrb
in
addr16
loope
pop
jns
pushf
call
fbld
jmp
cmp
ror
pop
fisttpl
mov
test
stos
dec
pop
adc
fcompl
fs
sbb
push
sbbl
lock
xchg
adcl
add
xchg
add
xor
sub
call
scas
or
xchg
push
test
mov
adc
mov
pop
and
push
loop
imul
loop
hlt
fidivs
cs
sbb
or
daa
mov
mov
and
mov
jae
push
lds
stos
cmp
sbbb
xor
ret
push
push
adc
adc
ja
shlb
xor
jle
sarl
jb
repnz
xchg
push
gs
cld
cmpsl
inc
sbb
mov
call
adc
bound
push
dec
mov
scas
leave
or
xor
mov
in
sarl
lods
jl
push
ja
and
mov
jp
mov
or
jle
or
jmp
mov
cmc
add
or
fxtract
js
add
jl
xchg
test
test
mov
mov
ss
pushf
lods
cmp
cmp
movsb
dec
lahf
arpl
and
and
mov
push
push
rol
push
push
dec
hlt
pop
ret
mov
sbb
or
and
call
jmp
sub
pop
add
mov
sbb
fildl
mov
repnz
loop
subl
aas
dec
out
sbb
xchg
pop
dec
jae
pop
mov
inc
dec
and
sub
push
or
xor
push
cmc
es
shll
test
aas
pop
jl
adc
jne
repz
movsb
sti
jecxz
cs
insl
or
pop
add
fwait
push
or
cmpsl
ror
testl
pop
dec
imul
jbe
or
inc
pop
or
movsl
add
inc
jb
daa
hlt
cmp
insb
arpl
cmp
mov
jno
sub
xor
andb
pop
das
jle
lret
push
adc
jo
add
loope
out
cwtl
lcall
scas
push
int3
js
lcall
jo
xchg
mov
inc
xchg
lea
xor
test
out
mov
cmp
popf
pop
sub
push
jb
or
pop
outsb
inc
cs
idiv
shr
pop
movsl
rcrb
fnstenv
push
call
insl
jbe
push
addb
test
test
xchg
fsubrs
mov
shlb
jmp
jns
add
int3
jmp
repnz
imul
fadds
cld
jo
pop
mov
jne
in
lcall
or
jecxz
push
push
mov
sbb
ja
enter
lods
pop
mov
inc
das
lret
and
das
jge
pop
adc
addr16
pop
mov
adc
out
jmp
lods
dec
int
ja
shrb
rcrb
cmpsl
or
push
sbb
or
out
icebp
lods
mov
xor
ret
aas
jl
mov
fstp
pop
dec
or
lea
push
nop
mov
xchg
cmp
out
int
jo
jo
les
mov
pop
adc
lahf
cli
dec
nop
fcomp
pusha
add
mov
push
dec
pop
mov
ds
sub
jns
or
sti
jecxz
icebp
hlt
push
sub
pop
push
xchg
or
mov
or
inc
lods
lds
dec
dec
mov
push
jmp
mov
into
mov
pop
cs
inc
movsl
sbb
jb
addb
dec
jle
lods
xlat
sub
push
pop
jne
inc
rol
cmpsl
inc
mov
inc
icebp
xchg
pop
ja
fcmovb
pop
xchg
mull
jmp
arpl
jbe
scas
mov
adc
pop
icebp
or
cmp
mov
sub
or
into
xchg
movsb
jo
dec
inc
sbb
push
pushf
xchg
sbb
and
mov
lret
leave
push
add
mov
mov
fldcw
call
jp
stos
imul
or
jne
pop
rcl
push
and
in
ret
pop
mov
andl
or
mov
xchg
dec
pop
enter
add
or
cmpsl
mov
inc
pop
ret
mov
call
mov
jnp
daa
inc
mov
adc
sar
icebp
mov
insl
push
push
cmc
xchg
daa
idivl
test
push
jbe
outsl
jge
sahf
roll
into
and
inc
je
sub
pop
and
adc
repz
addl
fists
sub
lea
jge
or
imul
sahf
inc
dec
mov
pop
dec
sbb
xchg
adc
fadd
lods
aam
gs
or
inc
dec
xchg
inc
push
icebp
aad
movsb
inc
dec
sbb
and
mov
pop
push
add
xor
test
lret
mov
orb
add
rclb
sahf
and
sub
or
aam
pop
xchg
xor
jg
push
sbb
adc
in
ja
xlat
sbb
pop
daa
lahf
int3
out
push
sbb
or
add
aad
mov
mov
loop
pop
xorl
mov
push
bound
and
sub
or
dec
pop
testb
ljmp
cmc
inc
cmp
jmp
call
repz
jmp
call
cli
enter
aad
adc
popf
int3
push
push
icebp
fisttps
and
jae
adc
cmp
call
inc
adc
adc
shl
jge
push
test
aaa
xchg
push
sarb
sti
and
daa
jne
popa
dec
das
push
data16
sti
pop
mov
lods
sti
jnp
int
mov
or
adc
push
cmp
int3
push
jae
and
lds
arpl
or
inc
es
lret
shlb
popf
popf
push
and
lret
std
mov
sub
out
mov
jo
jle
ljmp
test
popa
or
inc
or
ret
daa
bound
ljmp
sub
daa
cmp
int
jns
insb
cltd
nop
mov
pop
fiadds
sub
jp
mov
pop
adcb
inc
mov
mov
pusha
dec
out
mov
notl
or
xchg
lock
ja
inc
jne
js
lock
stos
fcompl
inc
mov
call
lahf
out
outsl
lock
popa
mov
push
repz
jg
dec
shll
lods
xchg
pop
jo
push
or
rclb
xor
dec
lock
popf
loop
call
lcall
inc
sub
test
xchg
xor
mov
cli
or
lods
adc
sbb
mov
inc
or
cld
jmp
nop
imul
rcrl
add
dec
test
shlb
pop
mov
js
pop
mov
jmp
add
fisttpll
out
in
add
or
dec
jge
scas
sub
shrb
sub
push
iret
or
mov
mov
jb
jne
rorb
outsb
ret
sub
nop
lods
sub
std
call
dec
inc
jmp
daa
sbb
jne
jne
jp
inc
mov
xor
lcall
or
gs
shl
or
stc
lea
mov
xchg
je
jl
mov
mov
pushf
rcrb
sub
stos
stos
leave
call
inc
adc
ret
mov
cwtl
mov
xor
decb
pop
fcom
stos
dec
ss
out
clc
pop
add
je
aad
mov
adc
mov
cld
sub
ljmp
push
push
fwait
dec
and
mov
les
rol
mov
pop
push
int3
sbb
jmp
out
lret
mov
adc
les
sbb
sub
cli
xor
popa
jg
sub
mov
mov
fistpl
ljmp
out
sbb
fdivrs
inc
das
ret
add
push
daa
loope
aas
lret
jecxz
arpl
or
cmp
lods
mov
icebp
int
roll
sbb
mov
jne
je
push
xchg
push
mov
lds
xchg
xchg
pop
cltd
idivb
bound
daa
pushf
push
add
jmp
shrl
call
hlt
mov
sbb
in
cs
je
inc
jb
xor
icebp
sbb
imul
sub
xchg
jle
xor
dec
add
push
pop
or
xchg
shlb
and
stos
cmp
adc
pop
sub
pop
enter
and
lea
div
fnstcw
xlat
or
scas
pop
add
test
enter
stc
or
enter
ss
fwait
lahf
adc
std
sub
dec
or
loopne
adc
pop
xchg
cmp
mov
sub
xchg
push
or
jp
mov
test
ss
mov
push
xchg
inc
xchg
add
mov
stos
in
mov
cmp
push
mov
fstpl
andl
jns
stc
adcl
orb
mov
inc
fs
sub
cwtl
scas
inc
and
fstl
cmp
xchg
jo
mov
andb
sub
jmp
in
shl
mov
imul
ljmp
stos
inc
lcall
mov
ret
nop
mov
push
xor
int3
mov
xor
sti
imulb
sahf
and
and
leave
rcrl
cs
dec
sub
shll
loopne
or
xchg
punpcklbw
cld
dec
mov
cltd
jb
lods
dec
pop
fimull
cld
xor
xchg
adc
push
repz
pop
pop
call
xchg
aam
fbld
sbb
adc
pop
call
jp
jb
lcall
sahf
shlb
jmp
sub
inc
call
leave
pop
icebp
mov
pusha
push
sub
jmp
mov
mov
pop
mov
loopne
icebp
jae
mov
mov
inc
mov
jmp
push
testl
adc
xlat
ljmp
call
jg
adc
fistpll
fnstsw
inc
aad
cmp
sub
or
pop
jbe
loop
mov
adcb
mov
dec
push
mov
xchg
mov
adc
lcall
loopne
inc
or
ds
stos
cmp
daa
push
test
xor
push
stos
mov
in
jb
add
xor
jne
pusha
or
jbe
clc
or
das
je
jo
jmp
inc
cmpsl
out
jp
push
and
cmp
mov
xorl
inc
xor
add
lcall
jg
and
mov
nop
jno
cltd
jg
jno
adc
mov
outsb
cmp
mov
jecxz
or
jbe
call
cmp
movsb
out
jae
jmp
push
call
scas
into
or
mov
inc
pop
lock
cmp
xor
cwtl
subl
lahf
lea
jmp
xchg
scas
sub
inc
xchg
in
cmp
in
xchg
jge
cmp
repnz
inc
mov
mov
lcall
mov
dec
xor
or
xor
inc
test
lods
mov
dec
jmp
pop
cmp
dec
icebp
inc
sbb
test
pop
mov
mov
cltd
ja
pop
or
jnp
mov
xlat
dec
ret
ret
fucom
outsl
cltd
js
call
ljmp
and
icebp
dec
mov
adc
sahf
es
xor
fsub
sub
sub
pop
movsl
imulb
adc
lods
fwait
xchg
mov
decl
pop
mov
xor
test
notb
lea
in
cmpsb
mov
popf
mov
ljmp
jae
xorb
call
shll
ret
shlb
lods
das
inc
adc
fs
adc
cmp
mov
mov
in
lret
inc
xchg
dec
int
add
adc
mov
pop
rol
imul
or
push
mov
dec
mov
inc
jl
push
fldlg2
xor
add
lea
xchg
inc
idiv
aas
or
push
mov
pmullw
mov
adc
ljmp
or
sahf
xchg
xchg
dec
add
mov
adc
and
call
dec
push
out
push
lea
xchg
mov
pop
fdivrl
push
cli
dec
pop
ljmp
mov
mov
das
inc
hlt
pop
in
mov
jmp
sub
or
mov
inc
push
pop
mov
xchg
repnz
xchg
in
mov
jnp
call
push
pushf
in
pop
rcrl
xchg
jno
xor
or
jg
sub
dec
ja
shl
inc
xchg
arpl
mov
mov
fstpl
mov
and
outsl
lea
aad
cltd
xor
ficompl
rorl
mov
xor
push
gs
xorb
mov
faddl
jl
inc
cmp
pop
and
sub
out
sub
adc
add
adc
sub
fwait
or
push
push
je
fs
mov
mov
test
stos
clc
push
lea
stos
xchg
dec
rcrb
mov
dec
movsl
mov
lahf
movsl
shrl
call
or
cmc
std
aam
imul
call
call
pop
sbb
or
daa
repnz
sub
or
dec
cmp
es
test
aas
sub
mov
out
sbb
mov
call
sbb
jmp
add
lret
xchg
jno
cmp
inc
rcll
in
imul
mov
sub
clc
fisubrl
sbb
cs
dec
fwait
push
or
mov
jae
les
dec
xchg
in
lods
scas
dec
add
popfw
and
or
pop
cmpsl
in
fldt
inc
rolb
or
sbbb
jnp
adc
les
mov
adc
sti
jo
jp
jl
pop
lock
rol
or
jbe
arpl
pop
mov
mov
jne
xor
mov
mov
push
inc
mov
outsl
ret
push
out
mov
xchg
fstpt
ljmp
pop
popf
roll
lds
pop
xlat
mov
pop
hlt
mov
repz
testl
bound
leave
test
clc
cmp
jno
loop
sti
cmp
jnp
sub
and
data16
xchg
mov
mov
enter
aam
shlb
test
add
jmp
out
mov
pop
push
je
subb
mov
inc
xchg
dec
test
cli
xchg
pop
xchg
cmc
xor
fstpt
jmp
loop
das
std
push
sub
xchg
inc
loop
mov
cwtl
sub
or
push
fisttpl
je
inc
hlt
cmp
mull
dec
adc
xor
out
adc
test
sbb
dec
push
mov
or
xor
cmp
sti
push
arpl
sub
xor
sub
mov
dec
mov
test
mov
enter
lods
icebp
pop
mov
daa
inc
mov
out
pop
iret
out
leave
mov
mov
xchg
shlb
cmp
add
pusha
push
mov
add
dec
mov
mov
lods
fdivrl
or
int3
push
mov
mov
subl
adc
sub
mov
mov
shrl
std
fs
cwtl
xor
pusha
add
xor
lock
scas
jnp
xorb
bound
pop
shl
jge
xlat
lods
or
push
icebp
sbb
dec
loop
and
mov
ja
pop
inc
push
out
jno
xor
push
rcrb
fimuls
mov
jno
pop
jno
inc
inc
or
daa
cmc
xorb
mov
jno
rcrb
xchg
xchg
into
das
popf
dec
mov
test
push
test
xor
inc
insb
adc
into
std
and
cmp
repz
test
jmp
and
dec
sbb
mov
pop
mov
push
jg
mov
out
movsl
mov
nop
xor
in
dec
jl
call
pop
or
aam
fists
je
int
in
pop
sar
adc
and
enter
xchg
push
clc
push
mov
data16
mov
push
div
and
out
pop
in
push
cs
pop
sbb
dec
add
bound
xor
push
push
gs
jmp
cmp
push
cmpsl
loop
or
sub
xor
popf
scas
cltd
loope
sub
sahf
xchg
test
int
std
test
stc
xchg
or
mov
sbb
arpl
mov
mov
add
add
xchg
imul
fwait
inc
jbe
cmovg
mov
arpl
das
sub
or
mov
jae
hlt
pop
xchg
sub
stos
rcrl
and
xchg
push
cmpsl
inc
push
lret
mov
repnz
add
andb
push
adc
je
mov
mov
lods
call
push
les
xor
push
lahf
or
mov
pusha
pop
push
and
test
sub
call
pusha
jno
pop
test
push
cmp
inc
fnstcw
nop
mov
pop
les
aam
mov
mov
andb
or
xor
adc
sbb
mov
inc
arpl
lods
push
in
push
jo
ret
pushf
sbb
push
cld
jb
stos
dec
add
js
sbb
add
iret
add
shrb
call
in
incb
arpl
and
outsl
xlat
xor
pop
fistpll
push
test
nop
and
pop
fcomi
aas
aam
sahf
add
lds
cmc
cld
jle
inc
dec
inc
xchg
push
or
cwtl
sbb
icebp
pop
popl
adc
mov
adc
aad
fs
das
sub
push
push
adc
or
jg
add
pop
sbb
sbbl
popa
icebp
mov
xor
xlat
jecxz
mov
cmp
and
sub
mov
repnz
push
sbb
xchg
jb
jmp
out
enter
xchg
sbbb
or
inc
mov
jno
movb
dec
add
sbb
push
imul
or
push
xchg
push
inc
xchg
out
stc
and
dec
stos
shll
inc
cmp
add
and
fmull
cwtl
and
in
stos
or
orl
or
mov
push
xor
push
pop
push
out
mov
jp
pop
hlt
mov
xchg
lods
mov
inc
lea
sbb
xchg
mov
xchg
dec
sti
sbb
scas
loope
add
cmpsl
dec
jns
cmpsl
mov
push
push
cmpsl
push
icebp
mov
mov
cmp
rcl
sbbl
push
lcall
iret
adc
sahf
in
cmpsb
bnd
test
pushf
shrb
push
fldl
cwtl
scas
into
mov
test
sub
pop
mov
xlat
jg
aaa
push
pop
movsl
push
jne
xchg
test
out
scas
clc
pusha
push
call
jo
subb
or
xchg
inc
adc
psubw
lahf
jmp
cmovo
mov
outsb
int
call
push
push
dec
or
insb
xchg
cmpsb
and
ret
cmpsb
push
mov
iret
sbb
mov
test
xchg
aaa
mov
in
or
movsl
sahf
xor
fisubs
add
lcall
dec
add
cld
xchg
insb
mov
pop
adc
repz
jmp
call
fwait
push
test
nop
popf
scas
cmp
daa
call
jmp
das
push
mov
sbb
pusha
push
or
mov
stos
add
das
mov
aas
push
mov
out
ret
ret
push
shll
jbe
jp
loop
xor
cltd
dec
jnp
das
inc
call
cmp
jb
mov
inc
mov
dec
pusha
lock
jg
push
loopne
inc
mov
jnp
mov
cwtl
test
leave
imul
lret
add
imul
mov
push
pop
jo
mov
mov
mov
jb
cmc
pushl
mov
rcll
lock
xchg
in
dec
push
jns
fwait
cmp
add
psubsb
or
dec
lea
das
inc
stc
and
mov
push
leave
stc
or
movsb
mov
dec
pop
mov
dec
and
adc
sbb
stos
sub
jl
push
or
mov
test
sub
scas
pop
pop
hlt
inc
mov
ret
stos
sub
jecxz
inc
mov
mov
ficompl
add
sbb
fildll
out
mov
ret
rorb
movsl
jae
pop
sub
push
push
xorl
and
rorl
test
fisttpll
mov
int3
shll
dec
jmp
and
out
push
das
hlt
mov
fdivs
push
jge
cmp
call
dec
out
or
cld
inc
sbb
or
mov
shrb
mov
lahf
nop
mov
mov
cmc
shr
lret
ljmp
jb
leave
mov
and
cmp
mov
jl
push
push
inc
mov
cli
into
test
cmpb
stos
outsl
jae
lahf
scas
or
jle
imul
pop
push
inc
les
cs
popf
das
std
inc
loop
enterw
cwtl
outsl
xchg
sub
dec
or
sub
clc
leave
sbbb
or
ret
xor
imul
or
or
inc
mov
push
stos
adc
mov
jmp
inc
sub
iret
cld
sbb
add
or
sti
sub
sbb
or
call
cli
xchg
fdivr
dec
jg
js
loop
mov
jp
mov
or
dec
in
int
fsub
mov
call
push
out
sbb
sbb
sub
icebp
mov
jl
dec
mov
ljmp
add
inc
and
outsb
mov
fsub
xchg
int3
stos
inc
pop
cmpsl
jecxz
sub
sbb
adc
mov
lock
lcall
loop
mov
mov
sbb
fisttpl
outsl
jecxz
shll
push
cmc
add
out
jp
adc
mov
ret
fs
fldenv
sbb
pop
lret
push
push
popf
dec
sbb
fisttpll
repnz
cli
cs
push
fnstcw
call
push
sahf
dec
mov
mov
or
sub
sub
push
adc
aam
xor
in
bnd
testb
shrb
push
lret
call
adc
aaa
push
xor
mov
inc
mov
or
pop
sbb
or
loop
aad
mov
outsb
test
pop
testl
adc
sub
push
dec
and
pop
mov
rol
adc
das
mov
scas
ret
dec
mov
jbe
xor
test
fldt
jmp
pop
and
call
das
cld
inc
mov
sub
jbe
mov
imul
jmp
cmp
inc
mov
sti
ret
aad
dec
ja
dec
pop
mov
mov
fmul
cmpsl
cmc
loope
popf
je
and
pop
jmp
add
inc
loope
cmc
gs
enter
lret
push
cmp
les
dec
shll
xchg
pop
fcmovnbe
in
xchg
xor
insl
mov
cmp
in
repnz
testl
repnz
mov
lret
mov
mov
xorl
cmp
lock
xor
mov
pop
mov
mov
mov
lahf
je
mov
pop
ljmp
or
cmp
jg
adc
outsb
ret
sbb
cmp
loope
jb
inc
icebp
cmp
jmp
jbe
mov
xlat
jns
test
scas
sti
inc
xchg
push
inc
icebp
or
push
add
inc
fwait
push
or
stos
ror
ret
pop
ja
insl
cvtpi2ps
sti
mov
xlat
mov
adc
mov
and
sti
pop
jmp
jp
sub
js
mov
cmpsb
fmul
stos
scas
cs
js
xlat
out
dec
lahf
sub
pop
sahf
je
aad
loope
repz
mov
cld
mov
push
inc
push
sub
inc
pop
jg
xor
cli
push
outsb
jmp
stc
daa
mov
jle
add
sbb
pop
icebp
add
in
shlb
lods
jmp
lcall
mov
in
cmp
cmp
das
inc
in
daa
push
lret
insb
add
pop
outsl
stos
sbbl
cwtl
xor
and
cmc
jns
or
inc
loope
insl
add
addl
pop
jmp
dec
push
lock
test
aas
sub
xor
mov
adc
jb
dec
icebp
xor
inc
xchg
push
fs
xchg
popa
jle
cmp
lahf
sub
aad
xlat
call
xor
xor
and
dec
and
mov
or
mov
jns
xor
pop
pop
imul
pop
add
pop
or
xchg
cmpsb
rol
xchg
xlat
xchg
cmpsl
test
imul
inc
test
lahf
lcall
or
cmp
xchg
sub
dec
rol
sub
inc
mov
fidivl
mov
ja
imul
xchg
push
dec
cmpsb
les
push
xchg
or
aad
out
or
test
sbb
pushf
shlb
jle
fstpl
movsl
ret
push
xor
push
ja
and
mov
xchg
fs
adc
shlb
pop
mov
pop
add
movsb
notb
jg
lret
inc
cmc
or
imul
out
frstor
xchg
out
inc
pop
xchg
add
and
mov
imul
pop
in
out
and
repz
sbb
shlb
and
or
jl
cld
push
outsb
inc
call
repnz
pop
fwait
mov
mov
pop
push
mov
xor
call
les
dec
mov
mov
dec
outsl
lahf
xchg
inc
fmul
jge
aad
cmp
and
inc
loop
fsubs
cwtl
data16
push
iret
jmp
call
xchg
sbb
and
test
adc
xor
and
push
add
mov
dec
out
push
shlb
pop
bound
iret
push
jg
xor
dec
xchg
push
dec
xchg
mov
ret
mov
addr16
add
mov
mov
es
xlat
xor
push
jne
outsl
dec
rclb
or
add
loope
adc
add
fisttps
cli
andb
rcrb
test
nop
mov
inc
test
lcall
pop
push
mov
mov
mov
and
sarl
clc
stos
int
insl
mov
sbb
xchg
faddl
push
mov
sub
push
push
xchg
pop
test
mov
mov
dec
aam
inc
xchg
scas
mov
sub
bound
imul
das
les
and
cwtl
cwtl
aam
cmp
lahf
negb
push
fnstenv
imul
fcoml
jmp
clc
or
les
int3
jmp
add
repnz
jo
jmp
mov
das
xor
cmp
sub
dec
xchg
xchg
jmp
jo
push
adc
lods
imul
orb
and
test
aaa
mov
mov
les
inc
sub
call
int3
add
loopne
lahf
incb
lahf
add
mov
pop
subb
push
fcoms
hlt
notl
jmp
mov
jne
inc
inc
sbb
xor
mov
adc
mov
inc
mov
jecxz
je
cltd
push
lods
ret
jl
mov
sub
xchg
loope
add
ljmp
sbb
int
mov
push
leave
sahf
movsl
clc
call
data16
pop
jns
adc
cmpsl
or
daa
out
jl
jle
loopne
loop
pop
in
xor
scas
push
jb
pop
stos
icebp
call
push
inc
xchg
pop
mov
cmp
loope
cmpsl
push
aam
add
mov
pop
mov
mov
ret
push
pop
imul
test
xorl
jl
dec
cmp
mov
add
pop
dec
movsb
dec
lods
push
inc
sub
or
push
daa
inc
cmp
jne
es
jmp
cmpsl
leave
stc
pop
rorb
sub
in
shl
pop
pusha
call
fmuls
clc
repnz
cmp
scas
mov
lsl
addr16
push
push
mov
cmpsl
lahf
dec
adc
xchg
adc
lret
das
pop
add
cmp
inc
mov
add
inc
dec
cmpsl
mov
js
nop
push
stos
in
jns
movsb
push
or
and
clc
lock
mov
psrld
or
subb
cs
push
push
int
xchg
push
push
and
or
adc
shlb
push
outsl
mov
push
into
notl
jge
test
das
mov
icebp
imul
ret
mov
and
ss
push
cmp
mov
dec
sub
xor
rcrb
inc
inc
sar
repnz
je
jmp
push
xchg
mov
adc
dec
and
or
mov
jb
mov
int
stos
shl
xor
pop
test
mov
cmp
sbb
or
hlt
mov
out
lea
int3
pop
lea
stos
lahf
lock
ljmp
das
pushf
push
outsb
dec
add
add
aas
mov
jle
cmpsb
repnz
pop
pusha
call
stos
es
cmpsb
into
dec
lret
cmpsb
sub
out
data16
cmpsb
mov
mov
scas
out
loopne
insb
xor
add
mov
and
inc
les
xorb
mov
adc
add
int3
or
fs
adc
stc
add
xor
pop
or
movsl
adc
shll
xor
into
iret
dec
mov
push
rorl
inc
bound
lret
lahf
mov
inc
push
pop
mov
mov
push
mov
or
jmp
dec
call
and
and
sbb
jmp
ljmp
rcl
adc
mov
push
mov
es
mov
daa
fld
fcomi
repnz
repz
mov
mov
aam
lods
and
fs
adc
pop
push
stc
in
push
jbe
xor
pop
xchg
mov
or
aaa
pop
or
adcl
jmp
aam
jb
cs
mov
ljmp
insb
psadbw
inc
dec
jnp
aas
mov
or
cltd
push
pop
adc
aam
movsb
add
test
cltd
div
pop
pusha
movsl
xorb
ss
orl
add
out
popf
hlt
and
push
pop
ds
jge
out
clc
call
add
stos
xor
out
adcb
adc
dec
or
jb
lea
scas
pop
js
add
adc
jmp
xor
jb
dec
mov
and
je
jle
pusha
call
addb
lret
pop
push
mov
jmp
xorb
call
jae
adc
add
insb
push
sub
push
iretw
sub
gs
xor
mov
mov
fsubrs
movsl
pop
and
add
push
pop
cmp
das
loop
or
test
dec
inc
sahf
sbb
mov
push
or
mov
mov
adc
cmp
lods
stc
ljmp
add
sbb
sahf
push
push
pop
mov
push
imul
jne
adc
in
fnstenv
cld
jecxz
mov
jle
fisttpl
and
cmpsl
pop
dec
inc
add
add
ljmp
ror
sub
outsl
adc
sar
and
into
push
int3
jecxz
clc
rolb
pop
add
mov
nop
adc
push
xor
inc
fcmovnb
and
notl
jno
out
mov
scas
cwtl
push
add
data16
ret
mov
pop
or
repz
mov
fisubrs
inc
mov
insb
or
jne
nop
jne
and
mov
loope
jno
lods
in
inc
jnp
mov
ret
and
push
movlps
mov
add
mov
dec
les
mov
ret
cmpsb
or
mov
inc
div
jmp
add
jge
jbe
sbb
cli
and
cs
leave
jle
push
enter
ds
hlt
ret
mov
rclb
or
lea
mov
rcl
and
cmp
jb
dec
pop
inc
cltd
push
rorl
loope
pop
dec
push
sarl
dec
push
jecxz
les
outsb
mov
mov
loop
xchg
add
cmp
xchg
sub
adc
mov
lods
dec
jb
es
dec
movsl
sbb
mov
mov
or
movsb
dec
scas
outsb
sbb
or
sbbl
clc
xchg
ljmp
adc
fwait
dec
jmp
jmp
pop
xchg
xor
xor
jno
mov
fdivrp
sbb
in
lods
xor
fildl
leave
pop
jae
mov
xchg
push
sub
sbb
or
jle
mov
add
idivb
ds
xor
ret
inc
or
dec
or
stc
stc
inc
cwtl
push
or
int3
pop
sarb
mov
imul
add
fimull
push
xlat
xchg
lods
jo
jnp
repnz
addb
jno
inc
lret
mov
mov
cmpsb
push
loopne
cmc
sti
push
cld
sbb
imul
pop
leave
inc
cmp
mul
sub
mov
mov
loop
mov
pop
mov
flds
push
je
mov
mov
popf
pop
js
adc
lahf
ljmp
mov
call
ljmp
jb
mov
dec
arpl
clc
pop
test
jmp
jne,pn
bnd
mov
jmp
adc
push
pop
cwtl
xchg
jbe
mov
insb
rorb
xor
insl
adc
sub
sbb
sub
jo
out
shll
adcb
pop
loope
jno
leave
jbe
or
test
dec
and
ss
iret
test
jo
push
and
and
sub
dec
push
dec
cmp
mov
stc
test
pop
mov
or
dec
and
repnz
xchg
bnd
imul
lock
mov
stc
popf
mov
test
or
in
dec
inc
dec
in
dec
xchg
mov
in
or
sahf
shl
mov
hlt
pop
rolb
or
sub
shlb
mov
js
jge
dec
or
insb
and
mov
pop
mov
jmp
cli
add
pop
test
cmp
mov
loop
imul
test
sbb
adc
mov
or
aam
xor
push
push
xchg
ret
clc
sub
rcrl
add
call
leave
ret
xor
pop
mov
gs
xchg
push
insl
add
push
cltd
or
dec
fldl
dec
or
xchg
and
mov
lret
dec
imul
push
arpl
nop
call
dec
std
icebp
mov
sbb
fisubrl
mov
inc
push
jecxz
sub
and
jno
pusha
in
cs
jmp
fcoml
mov
repz
lods
mov
jo
aaa
daa
out
jle
dec
sub
fdiv
or
push
call
pusha
clc
jb
cmp
xor
int
push
add
scas
add
jg
inc
mov
aad
cmp
mov
pop
js
sub
or
stos
xchg
les
mov
cmp
pusha
inc
inc
add
subb
fs
mov
jnp
push
cmp
sub
and
scas
shlb
jg
arpl
arpl
mov
shrb
pop
pop
mov
dec
push
mov
sub
lock
pop
and
hlt
jbe
pop
inc
psubsw
adc
or
daa
jb
hlt
add
and
sbb
adc
cld
sub
or
adc
jle
sub
lret
cld
sub
mov
rorb
ss
mov
insb
sbb
mov
and
add
bnd
ljmp
add
xor
mov
cmpsb
sti
faddl
adcb
in
mov
jmp
xchg
cld
rep
add
mov
inc
pop
cmpsl
sub
push
testl
cmp
orl
jbe
xchg
popa
dec
add
repnz
imul
cmp
mov
jb
push
jge
cmpsl
xor
pop
mov
mov
push
sub
pop
dec
fstpl
nop
jge
push
push
push
cwtl
test
mov
cmpb
push
arpl
mov
and
lds
mov
sti
jb
aad
push
pop
cmp
das
and
pop
push
push
call
and
xchg
mov
dec
mov
jp
pusha
call
push
push
pop
orl
push
jl
rolb
cmpsl
cmp
int
lahf
pop
cli
les
inc
push
push
and
cwtl
jo
movsb
jp
clc
int
mov
xchg
push
cmpsl
mov
push
mov
insb
dec
add
and
jae
push
stc
movsb
test
push
ljmp
inc
or
and
adc
sarb
cmpsb
scas
out
ljmp
test
sahf
mov
mov
adc
es
xor
sub
adc
push
jo
sub
clc
out
fdivs
jge
and
outsl
pop
sub
or
push
cmp
int3
or
xor
sti
mov
orb
filds
cmc
in
cli
mov
mov
xchg
xor
test
jl
lahf
cs
jmp
stc
mov
mov
movsb
push
or
xchg
out
out
mov
pop
jmp
xchg
negl
mov
jle
mov
mov
mov
aas
xor
add
mov
jo
nop
push
xor
dec
repz
bound
add
hlt
or
mov
xchg
cmp
xor
sub
int3
sbb
xchg
xchg
out
adc
inc
shl
faddl
scas
sbb
btc
inc
clc
add
stos
call
mov
sub
lods
pop
mov
xor
cltd
hlt
add
pop
or
pop
sbb
int
rclb
ja
fistps
rorl
addl
xor
cmp
insb
pop
mov
mov
sbb
lcall
aam
mov
subl
gs
sub
dec
stos
mov
pop
je
jae
adc
daa
gs
pusha
pop
add
push
orb
jno
push
jnp
xor
mov
jns
dec
ret
pop
xchg
mov
rcrb
and
pop
sub
fdivrp
or
mov
sbb
shll
xchg
xchg
aam
pop
xor
arpl
rorl
test
or
loop
daa
push
mov
test
sbb
fwait
or
and
or
dec
mov
inc
or
rolb
popa
inc
orb
push
mov
scas
sub
or
scas
push
and
xchg
arpl
aaa
cltd
mov
pop
cmpsb
xor
pop
mov
jp
push
lahf
cmp
xor
outsl
or
push
repz
pop
or
in
or
int
icebp
add
jmp
les
bound
mov
adc
xor
jecxz
shr
add
sbb
sub
jnp
popf
or
pop
pop
mov
jmp
dec
and
lahf
lret
push
in
sbb
rcr
inc
xchg
add
push
cli
shl
ja
adc
fbld
call
fdiv
xchg
stos
lcall
xchg
mov
dec
pop
cmc
mov
lods
std
stos
inc
dec
bound
in
shl
sub
sbb
push
int
dec
sub
mov
sbb
negl
out
and
push
jle
sti
imulb
cli
jp
pop
inc
or
push
jbe
scas
xor
movsb
pop
push
cli
cmp
cli
push
sbbl
sub
sbb
in
add
dec
pop
jmp
mov
mov
mov
add
jle
cli
cmp
cmc
jne
inc
dec
sub
inc
out
xor
cmp
add
in
iret
das
push
inc
sti
dec
or
jp
sub
mov
dec
popa
and
cmpsl
addb
negb
pop
std
jns
lret
xor
inc
in
jnp
divl
dec
outsb
mov
test
fildl
popa
push
jo
pop
call
call
xor
jmp
add
or
je
xor
sahf
fdivs
jge
xchg
aam
dec
dec
mov
mov
icebp
dec
jb
addl
sub
mov
xchg
push
inc
jno
shr
or
fdivs
adc
jnp
jnp
movsl
mov
mov
mov
ja
lcall
mov
mov
inc
push
or
pop
mov
test
adc
xchg
or
shrl
imul
arpl
lret
mov
push
test
push
pop
lahf
aad
add
xchg
incb
jle
pushf
and
je
js
push
repnz
sbb
jae
clc
stos
mov
adc
sahf
sbb
sbbl
imul
hlt
test
lds
sub
stc
push
cmpsb
dec
loope
inc
lock
cmp
pop
repnz
cmp
push
push
jecxz
push
mov
xor
and
scas
std
jp
pop
dec
vmovddup
push
pop
jmp
add
in
mov
adc
jmp
mov
mov
jmp
test
jg
dec
cmpsl
adc
mov
pop
js
jns
sbb
jecxz
push
mov
dec
leave
mov
cld
jne
inc
push
test
fisttps
push
data16
lock
xchg
int
daa
call
je,pn
leave
mov
push
push
add
mov
and
sbb
sbb
lock
mov
push
add
sbb
cld
mov
push
cli
sbb
mov
lcall
sbb
xchg
clc
inc
xchg
xchg
std
mov
inc
push
lcall
fdivl
jle
or
pop
aam
push
pop
inc
or
or
dec
mov
jmp
add
imul
lea
or
adc
loop
lahf
clc
pushf
jns
mov
dec
test
cwtl
mov
mov
add
mov
inc
cltd
jmp
lods
clc
fstpl
pop
or
jmp
xor
negb
xchg
xchg
out
shl
gs
dec
xor
jecxz
xchg
add
icebp
cmpsl
insb
outsl
pop
mov
xchg
mov
or
and
mov
sbb
and
ja
call
stc
aad
and
sub
clc
dec
mov
out
cmp
sub
clc
pop
es
jne
pop
push
fsts
outsb
icebp
test
outsl
subl
and
dec
call
push
push
nop
inc
pop
pushf
into
mov
orb
cmp
sub
pop
out
dec
insb
and
add
push
xchg
add
mov
aas
dec
xor
mov
pop
lahf
jl
dec
xor
pusha
je
lahf
out
sub
dec
fwait
add
and
mov
test
mov
sub
pop
inc
dec
mov
addr16
das
ljmp
repnz
jb
loop
jg
in
jb
fs
fnstenv
jp
insb
xchg
cmp
popf
arpl
or
cmpsl
stc
push
or
pop
pop
aas
jo
call
dec
push
push
loope
inc
xchg
ljmp
icebp
jp
aad
mov
jns
pushf
loope
jp
arpl
mov
call
hlt
mov
movsl
sbb
pop
nop
lods
cli
stos
jo
out
fdivrs
mov
negl
cwtl
int
icebp
inc
push
adc
pop
mov
cltd
aas
sub
mov
lea
out
or
push
loop
add
mov
ror
and
dec
daa
clc
and
xor
decl
mov
dec
ret
adc
xor
xor
lea
pop
inc
out
adc
push
dec
stc
mov
cmp
jl
pop
pusha
pop
jae
fsubrp
lret
repz
mov
call
mov
jg
jo
dec
popf
repnz
and
cmp
sub
jno
sbb
gs
daa
cmp
lods
mov
xchg
and
jge
aaa
xor
pop
int
cmp
sbb
shll
mov
mov
arpl
mov
cmc
pop
sbb
adc
call
cmp
jl
inc
jo
pop
xchg
jmp
mov
lahf
imul
jb
sbb
mov
dec
cmp
xor
out
push
mov
and
js
inc
jno
push
fsubrs
jl
mov
repnz
mov
mov
std
add
jecxz
call
or
shll
pop
sub
or
sub
lahf
hlt
push
fisttpll
je
lret
add
nop
in
inc
pop
xorb
mov
jno
xor
sub
and
push
in
mov
data16
and
lods
inc
cwtl
dec
mov
sub
or
cmc
add
stc
mov
jmp
fcomp
add
or
mov
fcmovnb
cwtl
jmp
shr
mov
in
jbe
ja
mov
cmpsb
cmp
loopne
test
xchg
lock
mov
test
ds
xchg
adc
mov
and
add
and
jp
xchg
out
pop
cmp
sbb
roll
sbb
subl
fcomps
jno
in
adc
adc
sub
sub
das
idivl
jecxz,pn
scas
lock
leave
testl
cmpsl
gs
out
and
rclb
push
hlt
testl
jbe
lods
lret
xor
sti
and
inc
movsb
jl
cmpsb
push
jecxz
or
pop
push
rcll
jge
loop
pop
pop
nop
mov
stos
xchg
pop
or
mov
pop
repz
dec
mov
mov
push
jmp
enter
popa
mov
icebp
rorl
jno
in
int3
or
in
dec
add
mov
xchg
fs
adc
push
dec
mov
jno
pushf
leave
aaa
icebp
push
aam
mov
int
cwtl
arpl
subl
stc
faddl
leave
fstpt
in
lahf
sti
mov
addb
out
pop
pop
pusha
sbb
cli
cmp
add
xchg
dec
mov
jne
mov
lods
xor
cmp
fimull
mov
sub
dec
out
and
out
sub
aam
jb
call
cmp
cmc
ljmp
lock
mov
sbb
lret
aaa
arpl
push
mov
test
enter
push
dec
xchg
filds
push
jae
rcr
popf
into
sbb
jno
sarb
icebp
lea
jg
test
inc
in
inc
jmp
jne
mov
push
outsl
cwtl
call
es
pop
adc
gs
and
ljmp
mov
mov
dec
push
cs
ss
xor
jo
pop
lcall
orb
sti
and
or
nop
psraw
mov
fistl
pop
mov
jne
daa
in
icebp
mov
mov
jmp
jmp
push
das
xchg
mov
push
adc
push
out
jnp
mov
mov
mov
js
sub
or
xor
jns
lret
dec
stos
jo
aaa
imul
into
or
leave
dec
std
or
call
dec
sub
cwtl
push
push
mov
xchg
xor
or
or
cmpsl
sbb
dec
fwait
cmp
jae
jp
mov
xchg
cmpb
int3
cli
ja
xchg
lcall
add
iret
pop
in
mov
jmp
mov
mov
cwtl
jbe
mov
fistpll
call
add
mov
add
mov
or
int
aas
or
sbb
repnz
fsubr
pop
out
sub
lcall
xor
inc
ror
and
and
mov
push
lret
sbb
dec
jbe
push
cmpsl
jb
pop
jg
adc
sbb
fiadds
mov
loop
shl
imul
js
lock
mov
fidivs
in
mov
clc
ja
adcb
bound
adc
xor
fldl
pop
mov
ret
mov
push
mov
jo
xchg
rcrb
lods
scas
push
int
xchg
mov
sub
mov
popa
cmpsb
cmp
sbb
pop
pop
sti
les
ljmp
push
lds
pop
jge
das
xchg
xor
hlt
sub
or
ss
cmp
xchg
cmp
push
icebp
sahf
xor
inc
pop
or
pop
xchg
xor
sub
pop
adc
dec
in
jae
inc
mov
jecxz
lods
push
fnstsw
push
add
sub
in
jno
es
jmp
adc
out
out
jae
imul
cmp
fildll
pop
pop
push
sbb
mov
push
mov
xchg
testl
sbb
hlt
neg
dec
sti
dec
sbb
inc
sub
in
sbb
inc
mov
orb
cltd
data16
push
enter
movsb
add
cld
ret
sahf
inc
cmp
jg
scas
jns
jae
cmp
or
mov
cltd
pop
call
dec
mov
fstpl
push
das
fisubrs
sbb
mov
imul
sub
repz
lods
xchg
push
or
fwait
out
call
pop
je
out
xlat
dec
insl
sbb
xchg
dec
ljmp
cmp
jb
lods
pop
loope
iret
sbb
push
sarb
inc
jmp
dec
scas
sti
jge
mov
call
andb
inc
cmp
cld
ljmp
and
push
mov
es
pop
adc
test
inc
repnz
and
mov
loopne
push
fisubs
mov
lock
push
cmpb
daa
mov
stc
mov
call
push
xor
xchg
aad
jg
repz
lahf
jecxz
ret
pop
fstpl
frstor
mov
xor
or
dec
pop
mov
int3
dec
mov
lock
jbe
es
sub
dec
loop
and
dec
out
leave
imul
fisttpll
fs
xchg
or
int3
pusha
push
pop
setae
add
sbb
jl
adcb
pop
sti
add
not
orb
pop
repnz
push
lret
pop
insl
or
mov
mov
xor
fsubrs
notl
jmp
adcb
ljmp
insb
dec
lahf
loopne
push
shll
in
repnz
mov
insb
jnp
popa
shrl
imul
dec
jae
cld
mov
jg
add
add
dec
andl
int3
xor
pop
jb
pusha
add
int3
lret
jmp
jmp
nop
push
dec
push
sti
stos
test
push
loopne
cmp
push
mov
scas
push
cld
inc
stos
out
push
repz
push
repz
or
sub
sarl
in
adc
jns
add
cmc
mov
or
adc
or
cs
inc
mov
pop
mov
xchg
ja
cli
adc
outsb
or
jle
dec
addr16
mov
int
or
jo
mov
and
xor
mov
push
popa
mov
bound
ljmp
mov
adcb
or
pop
mov
sbb
push
or
ret
out
push
inc
bnd
test
mov
pop
fdivp
leave
in
jb
pop
xchg
stos
cmp
jo
push
call
sub
xor
ja
mov
fisttps
ret
mov
dec
mov
gs
jb
cwtl
lcall
xchg
mov
pop
insb
xor
adc
lea
imul
pop
std
pop
int
push
mov
notb
jl
xchg
cmpsl
adc
jg
mov
aaa
push
gs
mov
pop
int3
add
xlat
xcrypt-cfb
cmpsl
mov
mov
xchg
push
sahf
inc
mov
int3
stc
mov
mov
daa
test
xor
call
jo
mov
mov
addr16
mov
add
mov
xor
addr16
lahf
lret
cmp
div
inc
call
jae
or
fmuls
xlat
shl
adc
xchg
inc
jmp
sbb
fsubrs
mov
outsb
dec
aaa
call
push
mov
mull
ljmp
inc
jmp
icebp
pop
mov
and
push
sub
sub
sub
add
cmp
pushf
jmp
xor
or
test
pop
jae
lahf
mov
and
scas
fcomps
bnd
or
dec
xchg
loopne
inc
push
pop
pop
sbb
push
movsl
adc
lock
inc
sahf
adc
xchg
and
push
stc
fwait
jmp
neg
and
dec
test
ds
mov
orb
leave
mov
ret
fsubs
pop
cwtl
cwtl
and
and
mov
or
sbb
pop
xchg
cmp
dec
jo,pt
pushf
mov
xchg
xor
xchg
or
inc
pop
xchg
mov
or
cld
lret
and
mov
xor
lret
cli
and
sbb
incb
lahf
mov
jmp
imul
inc
call
mov
addr16
and
hlt
add
iret
and
sub
mov
sub
xor
xlat
cltd
lock
shlb
pop
int
aaa
sbb
fdivl
jmp
int3
aam
cmp
andb
ds
sbb
fdivl
mov
inc
aad
inc
test
hlt
or
in
and
push
push
cwtl
int3
mov
repnz
push
mov
ss
cmp
pop
insb
and
sahf
in
mov
mov
mov
inc
mov
push
push
movsl
mov
cmp
fcos
sahf
jns
push
cwtl
add
js
sub
jns
loope
or
xor
insb
pop
call
adc
jp
cmc
pop
cmpsl
test
mov
imul
mov
nop
jmp
xor
pop
sarl
push
inc
call
push
imul
xor
shlb
dec
adc
or
inc
insb
or
pop
cltd
mov
or
ds
or
pop
bound
test
ss
stos
test
sub
mov
xchg
inc
xorb
mov
dec
lods
push
lods
sub
gs
pushf
je
icebp
mov
push
mov
into
jmp
xlat
sbb
mov
popf
jae
sbb
in
arpl
into
dec
and
sub
repnz
pop
or
push
push
aas
gs
xor
cmpl
jmp
jb
xor
jnp
push
adc
cmp
je
and
or
mov
and
cmp
or
pop
loopne
cmpsb
shrb
test
xchg
xlat
pop
out
stos
lea
js
push
push
dec
hlt
or
shlb
cli
xchg
lret
xor
mov
jno
inc
cwtl
xor
cmp
mov
mov
clc
adc
out
add
daa
ds
sahf
cs
pop
mov
lret
movb
pop
andb
jae
outsl
ret
sbb
outsb
pop
or
lea
sub
jne
pop
mov
in
not
sub
lcall
movsl
mov
and
loopne
sub
mov
popf
push
cmp
add
cmpsl
mov
imul
mov
push
mov
mov
jnp
data16
sbb
mov
pushf
repnz
cmpsl
in
je
addr16
sbb
jnp
sub
rclb
shll
nop
shlb
or
jmp
pop
xchg
cmpsb
test
mov
jecxz
add
dec
dec
lock
jmp
add
xchg
dec
cltd
rclb
adc
imul
pop
js
nop
pop
and
sub
or
test
inc
lock
es
mov
push
or
or
sub
bts
adc
cli
insl
adc
cmp
jmp
in
push
shrl
or
pop
pop
mov
test
or
cld
imul
call
mov
cmp
lret
testb
and
sub
cs
sub
cmp
call
pop
and
mov
into
pop
xor
cmp
shrl
xchg
pop
or
lea
inc
sbb
jl
js
daa
push
and
or
xor
mov
push
popf
push
xor
add
mov
ja
xchg
int3
xchg
gs
ffreep
popa
aaa
pop
call
or
jle
xor
es
or
inc
movsl
xchg
sub
rcrb
cli
lret
sbb
push
pusha
push
popf
xlat
xorl
rcl
sbb
cwtl
xor
jbe
sub
filds
xor
in
stos
insb
dec
mov
scas
jg
imull
negb
call
or
or
outsl
jecxz
test
shll
mov
fcomps
pop
stc
jecxz
inc
icebp
icebp
jle
in
icebp
aaa
movsb
cmp
loopne
sub
mov
fcoml
lret
ja
shlb
mov
add
xchg
jecxz
lods
test
xor
pop
push
enter
mov
fs
daa
mov
sbbb
es
inc
xchg
jmp
xchg
loope
mov
std
xchg
sub
pop
pop
pop
mov
push
pop
cmp
das
jns
jb
sub
jb
ret
int
pop
mov
mov
mov
mov
mov
arpl
rclb
mov
lods
push
xchg
xchg
push
pop
mov
cs
cmp
or
push
cwtl
sbb
test
test
nop
push
inc
xchg
lods
mov
pop
jge
cs
cmp
shlb
out
prefetchw
and
and
lea
call
and
pop
std
jnp
out
and
inc
mov
daa
cmpsb
jmp
mov
sbb
add
out
or
add
mov
call
cli
fisubs
xchg
and
push
inc
mov
je
and
inc
mov
or
call
outsl
mov
mov
jb
dec
jge
xor
inc
aas
add
je
xor
push
pop
rorl
fstpl
mov
int
mov
jbe
je
test
jae
push
xorb
inc
jle
or
xor
mov
in
lds
inc
dec
orl
xor
call
sbb
add
pop
scas
xor
xor
lods
add
mov
inc
cmpsb
inc
mov
sub
jp
jno
in
dec
xor
cmp
cmp
xchg
into
lods
jge
mov
orb
lcall
pushf
cmc
std
push
icebp
or
jb
icebp
lcall
mov
jo
mov
mov
jg
pop
das
sbb
or
pop
adc
mov
mov
repnz
pop
pushf
sbb
sbb
jge
and
pop
aaa
test
jb
push
movsl
fimuls
cmp
stos
lret
mov
mov
shrb
sbb
mov
leave
sahf
lock
jae
dec
mov
imul
insb
pop
add
and
gs
push
rclb
and
jecxz
or
xor
stos
pop
stos
cs
mov
jecxz
or
xchg
add
mov
in
dec
stos
pusha
test
repz
xchg
sub
and
pop
mov
xor
fimull
std
push
dec
mov
xchg
sahf
sarb
add
mov
cwtl
outsl
push
sti
out
or
cmp
xchg
fwait
mov
mov
push
enter
xor
sbb
mov
cmc
mov
jle
repnz
xchg
xor
pop
stos
xchg
loop
inc
mov
sub
sbb
or
mov
jge
xchg
ret
jmp
lods
sar
jo
push
mov
test
sbb
mov
or
mov
mov
lahf
stos
ficomps
adc
and
and
cmp
ret
fiadds
sti
rcll
adc
jp
push
ret
sub
mov
pop
sub
mov
xchg
and
pop
push
pop
jge
aam
pop
cld
sbb
dec
mov
into
pop
lock
lcall
or
dec
inc
enter
mov
xchg
adc
jno
mov
add
cli
stos
repnz
jle
push
adc
loop
add
push
mov
pusha
mov
pop
call
dec
mov
add
nop
clc
lcall
mov
mov
rolb
or
jns
subb
mov
pop
jbe
pop
inc
arpl
neg
push
jb
xor
jo
push
mov
dec
push
xor
push
mov
inc
add
push
xchg
pop
test
ds
or
jp
mov
rcrb
jle
push
and
pushf
shrl
icebp
xor
popl
jnp
insb
leave
or
insl
or
mov
out
adc
and
and
xchg
call
in
pop
add
shlb
xlat
in
or
mov
dec
imul
lahf
das
mov
sahf
pop
pop
or
push
mov
dec
jmp
leave
sbb
xchg
jg
and
jb
or
jne
out
popf
xchg
je
out
push
jmp
adc
inc
dec
pop
inc
test
es
dec
xchg
add
aas
lcall
aaa
dec
jae
cmp
sub
icebp
pusha
jae
bound
and
loope
adc
jae
mov
jmp
push
adc
cmc
dec
popa
push
jno
adc
dec
mov
or
je
enter
add
jmp
pop
mov
dec
pop
or
shrb
repz
mov
dec
ljmp
inc
jmp
das
add
cmpsb
bnd
pop
cmpsl
mov
pop
mov
xchg
xchg
or
ja
add
rclb
push
mov
xor
std
inc
sub
push
sub
jno
mov
pop
call
dec
xchg
int3
test
repnz
mov
mov
daa
ja
push
loop
or
jno
sbb
repnz
cmp
push
add
add
scas
dec
adc
jp
icebp
xlat
inc
stos
xchg
mov
xchg
cmpsl
jbe
lock
stos
dec
call
daa
icebp
fsub
push
pop
aaa
inc
repnz
jae
push
xchg
mov
pusha
addb
adc
or
sbb
xchg
cmp
and
inc
add
ss
xor
lds
insb
jns
shll
cwtl
mov
fdivs
movl
mov
mov
inc
insl
inc
ljmp
mov
daa
pop
sbb
inc
push
pusha
mov
into
lock
fsubl
in
pop
push
cs
aad
ret
mov
or
pop
repz
fnsave
mov
les
add
int
xor
pop
testb
pusha
mov
adc
lea
nop
test
adc
rcrb
test
mov
xor
daa
sti
mov
cmp
push
push
int
int
stos
loop
and
dec
or
mov
push
xor
jmp
jmp
jge
popl
call
pop
push
dec
cvtps2pi
jbe
imul
push
dec
mov
mov
lods
xor
cmp
sub
push
mov
and
loopne
xchg
aad
pop
push
aas
shlb
xor
mov
idivb
dec
dec
push
lock
call
sbb
mov
pop
cmp
or
dec
push
stos
jo
call
jmp
test
movsb
rol
mov
lock
adc
add
dec
nop
jmp
dec
xor
push
out
loope
imul
imul
into
xlat
xchg
pop
cmp
jae
addr16
repnz
push
les
test
push
sti
mov
std
scas
cmp
pop
push
cli
inc
adcb
loop
cmpsb
das
mov
shlb
xor
or
cmpsb
jb
push
shl
mov
fidivs
sub
adc
cwtl
adc
mov
mov
movsb
xchg
xor
icebp
cmpb
sub
xlat
jno
repnz
test
inc
mov
in
push
rcrl
in
mov
add
inc
or
or
or
fiaddl
scas
ljmp
add
or
push
sarl
dec
int3
out
in
cmp
push
in
pop
ret
mov
mov
or
jl
push
and
sbb
aad
ja
fisubrl
ret
fadds
pop
data16
cltd
pop
pop
sub
or
xchg
jecxz
fidivrl
jmp
stc
xor
pop
and
jbe
das
dec
push
repnz
and
add
xor
jo
jmp
push
cmpsb
mov
subb
inc
push
daa
lock
sahf
stos
pusha
push
xorb
mov
dec
push
jo
pop
leave
daa
notl
repnz
ljmp
or
lcall
orb
ss
mov
lahf
aad
inc
lds
outsb
xchg
sbb
push
je
in
inc
lock
jmp
cmp
shll
pop
je
jecxz
test
xchg
cmc
jge
cmp
jo
pop
jmp
mov
inc
push
sub
sub
push
mov
jecxz
mov
stos
subb
clc
cmp
gs
pop
int
out
and
repz
push
insb
iret
xchg
push
cmp
sbb
jmp
push
sbb
mov
mov
lds
add
add
and
pop
adc
lret
inc
inc
das
add
rorl
adc
loopne
sbb
pop
xchg
popa
xor
jl
mov
adc
pop
dec
cwtl
shll
jle
mov
xchg
push
push
xor
call
test
outsb
inc
leave
and
adc
cmp
mov
out
jl
xchg
mov
movsb
aad
enter
mull
cmp
inc
and
xor
cs
xor
data16
sub
cmc
ret
and
mov
push
gs
test
dec
pop
aaa
out
mov
xchg
repnz
jmp
cmp
leave
dec
xor
sub
push
cmp
ja
lea
loopne
lcall
mov
pop
adc
jnp
js
push
xlat
push
dec
jno
jb
int
les
push
scas
in
add
jne
xor
in
add
insb
pop
out
sbb
mov
fdiv
or
int3
daa
sub
dec
ss
inc
daa
test
sahf
ds
xor
pop
sarl
mov
and
test
pop
xchg
mov
add
push
and
cmc
jns
int
lea
jne
into
push
add
jae
ret
add
lds
push
ljmp
jmp
jne
inc
xchg
and
inc
jp
and
mov
add
mov
lock
jg
fcmovne
sbb
mov
sbb
or
cli
inc
mov
enter
pop
adc
pop
inc
jp
jmp
xlat
call
sbb
jge
jp
adc
test
dec
ret
pop
sub
push
ret
lock
push
xchg
fbstp
in
mov
into
xchg
pop
dec
call
pushf
shll
call
add
and
cmp
push
lret
nop
je
call
inc
push
fdivp
fs
add
jmp
shrb
stc
shrb
lahf
pop
test
adcb
mov
mov
call
icebp
lods
jmp
fistps
dec
mov
jmp
call
push
inc
popa
dec
pop
adc
fwait
call
inc
and
rol
push
mov
aad
jge
call
mov
lods
xor
cwtl
mov
sbb
xlat
loop
fnstenv
es
xchg
xchg
cwtl
xor
dec
xor
imul
lahf
call
inc
inc
fs
sbb
mov
pop
inc
in
xor
sbb
ror
xor
or
std
cmp
sbb
push
pop
sbb
test
stos
repnz
int
sub
cwtl
cmp
or
dec
and
test
xor
insl
call
test
or
xchg
roll
int
or
mov
lods
fldl
mov
bound
adc
jb
pop
shlb
xor
inc
fucomip
stc
inc
lods
push
lods
sub
push
call
cld
mov
xor
fdivr
jbe
enter
out
xor
sarl
jmp
adcl
inc
fimull
xchg
loop
outsl
leave
and
push
pop
inc
jb
testl
or
xorb
push
add
repz
or
and
push
imul
test
sbb
popf
es
xor
pop
add
push
nop
filds
mov
mov
jecxz
shrb
or
pop
fadd
sub
scas
dec
xor
mov
sbbb
add
and
xchg
roll
int3
ds
inc
cmp
mov
push
call
push
jo
push
lahf
fildll
std
inc
outsb
or
sbb
aad
inc
mov
inc
mov
xchg
and
dec
pop
or
push
pop
cltd
ret
add
fimuls
xchg
repz
dec
xchg
pop
hlt
sub
or
or
dec
pop
adcl
push
sbb
cltd
mov
out
fwait
lea
iret
data16
lods
mov
icebp
stos
mov
decl
notb
dec
or
test
mov
repnz
cmp
jno
stos
roll
push
inc
sub
leave
pop
movsb
pop
pop
jecxz
pop
andb
cmpb
test
and
insb
push
cmp
sbb
xor
xchg
inc
xchg
arpl
add
lahf
push
repz
xchg
aas
out
jne
arpl
call
or
daa
cmc
movb
mov
push
xchg
mov
outsl
mov
or
mov
fildll
jg
sbb
jae
pop
cmp
cmp
daa
add
bound
mov
nop
cvtps2pi
outsl
imul
xchg
popf
or
add
int3
jb
add
and
jo
ja
loop
cvtpi2ps
xchg
icebp
mov
test
int
mov
sbb
popa
lods
insb
push
subb
cmp
aas
cmp
or
adc
adcb
pop
cmp
mov
pop
fwait
int
mov
rorl
popa
jmp
adc
add
popa
mov
add
xor
daa
xchg
inc
rolb
test
mov
push
std
ret
loope
push
lea
sbb
shll
cmp
movsl
stos
loop
lret
addr16
inc
sbb
leave
push
or
xor
insb
and
cmc
cmpsl
test
dec
fcomi
xchg
pushf
jmp
add
repz
fcomi
push
outsl
mov
jo
lcall
out
and
or
mov
fwait
lahf
mov
pop
ds
inc
daa
ja
int3
xor
inc
shrb
jmp
or
call
pop
fisubrs
test
jle
and
int3
and
mov
scas
icebp
sub
push
dec
sbb
fwait
in
dec
push
fcomps
aad
mov
dec
mov
call
daa
dec
mov
into
xor
adc
push
fwait
inc
xchg
mov
pop
dec
pop
ja
xor
jp
pushaw
sub
fistps
xchg
sti
lahf
lea
mov
cmp
xchg
rcrb
sub
inc
orb
sbb
mov
cmpsb
inc
cmpl
xor
jl
jmp
xchg
and
hlt
ljmp
cmp
cmpsb
shrb
aaa
mov
pop
mov
lea
cli
push
mov
popa
xchg
jp
cli
lods
dec
add
and
push
into
loop
or
ficoms
int
out
lret
add
jns
daa
ret
daa
inc
repnz
pop
aad
icebp
add
lahf
iret
mov
dec
dec
stos
in
sub
inc
ja
pop
inc
or
mov
or
dec
mov
mov
roll
mov
dec
push
call
ds
popa
pop
mov
frstor
or
call
mov
and
jg
jle
or
adc
jo
xchg
jmp
pop
ret
inc
cmp
in
jnp
fcmovu
mov
lret
pop
mov
movsl
shlb
outsb
mov
test
fnstenv
or
imul
test
or
push
pop
mov
jl
imul
push
jmp
mov
call
fwait
test
repz
mov
pop
mov
cli
jns
js
add
mov
and
dec
jno
test
es
adc
or
sbb
arpl
xor
out
sub
cmpsl
and
lahf
roll
out
adc
push
sub
sti
push
cwtl
cli
cmp
add
leave
fidivs
lods
aad
rclb
imul
movsb
and
cmp
xchg
mov
jmp
test
stc
fdivr
add
mov
cmp
cmpsb
pop
je
mov
push
push
xchg
mov
mov
inc
xchg
roll
ret
inc
sbb
ja
imulb
push
ljmp
jno
sbbl
inc
dec
imulb
leave
negl
adc
js
lea
sbb
xchg
adc
cmp
enter
adcb
int3
stos
lret
dec
aad
add
movsl
scas
mov
lds
push
insl
icebp
or
rorl
push
ja
mov
cmp
lods
ss
popa
or
sub
push
push
mov
lahf
shrb
mov
sbb
rorb
in
jae
ficoms
or
jmp
test
mov
add
mov
inc
call
mov
gs
aaa
lret
adc
add
push
mov
cmp
mov
sub
pop
lock
adc
and
dec
pop
pushf
pusha
daa
adc
fnstenv
scas
hlt
pop
push
call
xchg
pop
jmp
rolb
mov
dec
stos
in
dec
icebp
jmp
add
in
push
leave
jle
jle
adc
test
add
repnz
cmp
popf
fiadds
pop
out
xchg
or
call
mov
mov
mov
cltd
arpl
dec
fabs
mov
adc
nop
push
loop
arpl
repz
mov
aaa
cmc
pusha
repnz
jg
insl
cld
cmpsl
jno
push
call
fildll
push
inc
call
pop
mov
frstor
jl
add
test
xor
jnp
repz
and
mov
cwtl
mov
les
mov
push
lahf
adc
dec
sub
call
adc
mov
mov
xchg
xchg
jb
setle
pop
sbb
and
or
fistl
rclb
aaa
pop
call
negb
add
lret
inc
mov
sub
out
ljmp
ret
aas
xchg
mov
push
fisttpll
sbb
popf
and
cmp
mov
add
jmp
das
xlat
or
jp
mov
imul
cmp
dec
insb
adc
mov
pop
ljmp
nop
fs
jo
push
and
inc
cmc
dec
mov
rcrb
lods
lea
pusha
or
jl
loope
sbb
cmp
dec
pop
out
ret
jo
mov
adc
xlat
repnz
sbb
ljmp
mov
push
adcb
adc
mov
addr16
mov
inc
cli
xchg
jb
lret
mov
push
shl
lods
adc
mov
xchg
cmp
clc
and
mov
and
popa
xchg
push
mov
sub
push
and
dec
cmp
xor
xor
pop
ss
add
jmp
xor
mov
aam
dec
mov
mov
sub
add
scas
add
pop
sahf
and
cwtl
lods
jne
mov
push
mov
push
jnp
hlt
mov
push
xchg
inc
hlt
daa
mov
or
pop
mov
cltd
xlat
out
cmpsb
cmp
testl
or
sysexit
push
daa
clc
rcrl
call
pop
mov
movsb
add
mov
xchg
sub
loop
repnz
pop
mov
xor
loop
sub
add
mov
mov
add
fstpl
sub
int3
sbb
sahf
enter
sbb
inc
pop
loope
dec
push
cli
in
mov
or
adc
repnz
rcll
fdivrl
sub
ret
hlt
aam
and
bound
cmp
out
pop
sbb
cmp
aas
cmp
pop
cmpsl
enter
and
inc
jmp
xchg
xor
or
ljmp
sub
mov
sbb
stos
out
mov
mov
fcmovnbe
daa
jg
in
sbb
cltd
cbtw
pop
ret
and
mov
mov
push
pop
cltd
ss
movsb
cltd
mov
mov
push
xor
xor
push
xchg
es
adc
add
and
das
cwtl
add
xor
fidivrl
icebp
inc
mov
xchg
jno
out
mov
movsl
test
mov
mov
sti
mov
cld
mov
cmp
idiv
mov
jno
js
aad
fmul
fs
push
xor
xchg
sbb
cmpsb
and
mov
mov
pop
push
mov
std
sahf
adc
xor
inc
pop
dec
aaa
scas
push
pop
push
pop
cmpl
stos
pushf
pop
orb
test
dec
out
imull
leave
lret
repnz
push
jnp
adc
aaa
test
push
jmp
or
stos
out
outsl
fsubs
std
mov
cmp
outsb
movl
test
int3
pop
mov
mov
dec
inc
adc
leave
mov
arpl
sbb
pop
insb
pop
and
mov
jne
dec
or
lds
cmp
repz
inc
push
movsl
rclb
repnz
xor
cmp
mov
mov
stos
add
push
shrb
or
popf
and
hlt
push
push
cmp
test
fldcw
movsb
fcmovu
imul
xor
lahf
repz
xchg
repz
jp
fsubs
adc
mov
cwtl
push
cld
mov
adc
mov
mov
mov
mov
aas
or
dec
inc
dec
pop
sbb
rclb
mov
faddl
jo
or
add
sub
and
xor
es
pop
inc
enter
and
xchg
lea
xchg
ds
xor
loopne
lea
fistpll
aaa
mov
jmp
sub
fs
iret
mov
pop
ret
or
fldt
push
jg
cs
mov
sbb
cli
in
push
or
mov
daa
mov
sub
icebp
adc
cmp
mov
cmp
push
and
adc
cmc
and
mov
fdivs
mov
inc
ret
jmp
and
scas
mov
push
dec
in
sub
loopne
sbb
add
call
jbe
imul
or
rolb
adc
fidivrl
or
xchg
add
cmp
imul
out
and
out
es
and
shlb
xchg
lret
mov
sub
ret
loopne
add
sti
inc
lock
mov
das
mov
imul
dec
call
in
add
push
mov
sub
rcll
jle
jecxz
inc
dec
les
push
mov
lret
jle
pop
and
push
dec
sub
mov
sbb
nop
jmp
inc
bound
push
rolb
sbb
adc
dec
stos
xor
mov
sub
pop
sub
in
loopne
loop
daa
pop
ja
ss
aaa
shl
jns
inc
test
push
and
and
add
testb
ret
pushf
icebp
movsb
mov
popf
sbb
jg
push
inc
dec
xchg
xchg
or
adc
cli
notl
popa
andl
cmp
pop
cmp
lahf
ja
icebp
clc
aaa
mov
jb
inc
xor
pop
pop
dec
lock
sub
insl
inc
lods
ljmp
inc
mov
pop
call
mov
mov
sbb
push
mov
ja
push
fcoms
xor
scas
pop
inc
pop
and
lahf
pop
icebp
repz
mov
divl
test
ret
dec
inc
nop
cli
in
sbb
xchg
jl
enter
jg
xchg
pop
xchg
sahf
xor
or
or
test
mov
rorl
test
mov
mov
nop
push
jmp
adc
inc
or
jo
xor
xchg
or
sti
inc
add
shll
jo
push
sub
pop
xor
xchg
into
notl
daa
xchg
xchg
out
cmpsl
sub
sub
test
or
lcall
and
push
dec
aam
adc
inc
test
addr16
xor
sub
cwtl
push
push
pop
adc
arpl
push
push
rorl
jmp
pop
or
int3
add
pop
xchg
outsl
sub
pop
fisubrs
mov
es
mov
imul
adc
mov
orl
xchg
cmp
or
and
add
loopne
test
add
rcr
mov
movsl
pop
test
inc
call
push
mov
ret
cmp
int
mov
inc
cli
jecxz
sbb
mov
shrb
or
inc
call
mov
xlat
or
adc
add
movsl
testl
mov
daa
test
pushf
sub
xor
icebp
popa
xor
call
dec
sub
xor
sbb
mov
or
lret
push
dec
sbb
or
in
popf
push
sub
pop
mov
fwait
icebp
push
and
pop
cltd
repnz
out
or
ss
aas
aam
movsl
insb
int3
aaa
addr16
add
dec
jne
lods
xchg
cmp
or
xchg
and
pop
orb
jp
cmp
test
push
mov
mov
insb
mov
lea
jp
popf
jg
pushf
xchg
int
pop
sub
mov
sub
xor
push
cwtl
pop
fisttps
or
mov
test
mov
push
adc
push
adc
mov
repz
jecxz
jne
sub
scas
jbe
add
xor
std
stos
sbb
inc
in
add
or
shr
psrlw
push
sub
or
xor
jmp
repnz
nop
push
aaa
sbb
fnsave
scas
jle
mov
mov
mov
in
test
xor
pop
clts
adc
sahf
push
push
inc
or
je
pop
pop
xchg
orl
or
xchg
push
inc
stc
xor
pop
mov
fistps
or
sbb
pop
pop
mov
dec
fwait
sahf
ja
pop
jno
push
add
cmpsb
pop
nop
out
addl
movsb
ret
into
dec
jbe
mov
push
pop
call
out
js
mov
or
dec
cli
repnz
imul
out
test
xor
pandn
jnp
loop
and
push
js
lcall
dec
pop
dec
inc
adc
dec
jo
jbe
jno
mov
sbb
mov
mov
add
jmp
cmp
push
dec
stos
xorl
adc
sbb
ret
stc
cmp
imul
jmp
dec
inc
dec
cmpb
xchg
xchg
je
enter
xor
sub
push
add
and
jl
mov
adc
mov
sub
jno
sub
insb
sbb
jg
mov
dec
cwtl
add
inc
sub
adc
sbb
cmpsl
ds
adc
or
jle
imul
lock
mov
inc
dec
loopne
insb
dec
mov
push
aas
sub
fldl
sub
leave
popf
pusha
xor
rolb
shl
movsl
das
pop
ret
adc
out
push
inc
push
lcall
int3
jecxz
push
adc
ds
mov
mov
mov
daa
nop
data16
mov
fdivp
popa
xchg
push
mov
sti
cmp
push
mov
aaa
adc
mov
push
in
pop
sub
mov
push
cmc
leave
mov
cld
jg
in
xchg
insb
mov
adc
lret
or
sub
xchg
xchg
ret
mov
mov
rol
pop
push
in
inc
sti
sub
lods
cmc
inc
jae
pop
inc
inc
stc
loopne
jmp
pop
pop
mov
push
mov
sub
push
or
outsl
outsb
xor
test
cmpsb
xchg
insb
popf
cmpsl
nop
icebp
xor
and
fwait
clc
ret
daa
mov
mov
jmp
popa
divl
stos
shrb
call
aad
pop
cwtl
inc
pop
mov
mov
int
jae
mulb
stos
loopne
push
movsl
ret
dec
enter
in
cwtl
addr16
sahf
xchg
popf
aad
out
and
xorl
xchg
mov
sbb
insb
pop
dec
inc
mov
push
loopne
inc
mov
rclb
std
and
add
sbb
mov
stc
jno
jmp
mov
mov
data16
or
int
xchg
or
fcoms
insl
sub
mov
insl
mov
repz
pop
xor
rorl
cli
fldcw
cmpsb
or
std
dec
bsf
jg
jne
lds
push
pop
add
rorl
data16
dec
das
outsb
or
mov
lods
mov
jnp
insb
pop
mov
sbb
mov
jo
ljmp
test
call
inc
loopne
fwait
inc
or
gs
jne
or
mov
inc
mov
repnz
inc
rcrb
sub
add
mov
cmp
int
mov
in
push
push
leave
sbb
mov
dec
in
push
scas
lock
push
test
mov
call
adc
in
ljmp
dec
pop
test
and
call
mov
fsubrl
insb
int
or
or
mov
lock
icebp
mov
mov
xchg
mov
push
push
jns
or
jl
mov
mov
push
shrb
adc
cmc
adc
and
in
cmp
pop
xchg
push
dec
cltd
xchg
push
rol
add
in
mov
and
cmpsl
inc
or
in
xor
pushf
fs
shll
xor
cltd
xor
les
into
sbbb
push
inc
rcl
mov
mov
shlb
roll
sbb
addr16
shrl
sub
jg
jno
in
push
icebp
test
mov
mov
push
mov
test
xchg
adc
adc
jns
lret
cwtl
sahf
inc
mov
pop
loope
push
push
lret
pop
insb
lret
ss
popa
stc
push
xchg
jno
push
mov
jbe
cmpsb
cmp
cmp
fisubl
mov
sahf
hlt
xchg
add
lods
sbb
lahf
das
inc
popa
jae
out
int
inc
rolb
data16
stos
in
mov
cltd
sub
pop
adcl
ljmp
inc
add
adc
pop
mov
outsb
push
dec
xchg
mov
into
add
loope
xor
mov
call
or
pop
imul
and
adc
inc
sbbb
andl
adc
mov
mov
sbb
mov
mov
push
mov
test
pop
add
xor
imul
xor
mov
add
into
sbb
mov
sbb
jbe
or
loopne
subl
sahf
xchg
imul
mov
pop
scas
fistps
pop
push
fninit
daa
fcoml
rep
sahf
mov
and
test
lret
rcl
xlat
call
pop
jo
pop
or
outsb
rorb
iret
jp
hlt
push
or
mov
add
ljmp
or
sub
stos
shlb
outsl
subl
or
pop
mov
pushf
popa
bound
arpl
call
jbe
lret
xchg
add
dec
fisubl
stos
les
xor
xor
test
cmc
out
ja
les
push
mov
test
icebp
imul
int3
and
out
test
cmpsb
sub
cmp
call
in
cltd
punpckldq
and
sub
xchg
xor
xor
repz
xchg
jmp
fdivp
or
dec
lods
xchg
mov
jmp
sbb
cld
jmp
scas
ffreep
sbb
out
jbe
jnp
out
xchg
jle
lret
pop
or
scas
aam
movsb
rcrb
popf
inc
cld
mov
xchg
push
add
jl
xchg
push
sbb
popf
inc
out
ret
mov
push
push
daa
in
jmp
lahf
je
scas
lock
mov
stos
sub
std
jnp
add
shr
ficomps
imul
jecxz
fstpl
pop
clc
inc
enter
sti
sti
jno
pushf
cmp
mov
mov
pop
push
or
add
jmp
push
cmp
sbbb
inc
ficomps
ljmp
fmul
dec
xchg
outsl
cmpsb
ljmp
in
pushf
jp
push
repnz
imul
xchg
dec
aaa
icebp
jmp
or
adc
mov
outsb
mov
lcall
cmpsb
lock
push
cltd
lret
daa
pusha
adc
inc
dec
out
cmc
mov
es
addb
and
iret
stos
push
jp
aad
mov
push
lahf
fistl
cmp
fucomi
or
les
inc
mov
sub
addr16
jns
jge
xor
mov
xchg
das
mov
out
dec
dec
iret
loopne
mov
cmpsl
mov
adc
jno
mov
sbb
jnp
ret
rorb
mov
jmp
lahf
mov
mov
or
inc
mov
lock
lods
sub
jg
lock
sub
push
pop
xchg
sbb
in
mov
cmp
and
mov
jnp
and
pop
pop
cld
addr16
ror
pop
and
ret
stos
pop
sub
pop
mov
add
push
sbb
into
dec
cmp
adc
repz
cltd
fmuls
sub
fisttpl
movsl
xor
cmpsl
leave
dec
push
cmc
or
call
enter
dec
xchg
mov
lds
scas
fsubl
lret
ds
push
push
push
test
push
insl
cmp
shl
mov
inc
mov
adc
dec
and
shl
push
jmp
pop
call
xchg
lahf
xor
shll
loopne
add
sahf
loopne
or
sbbb
xchg
push
mov
mov
push
sub
ret
push
ljmp
lret
xor
lock
sbbb
push
or
jbe
xorb
psubsb
dec
lea
adc
fstpl
mov
jge
fistps
add
mov
inc
jbe
aad
jns
repnz
jmp
mov
mov
lahf
pop
pop
sbb
push
insb
inc
mov
arpl
repnz
push
jne
push
je
addl
mov
mov
push
pop
jne
loope
mov
mov
mov
fisttpl
push
test
xchg
cmp
addl
les
xchg
push
flds
cmc
fwait
ss
jge
adc
adc
cmp
push
arpl
mov
xchg
xor
repnz
cmpsl
out
shrl
and
mov
add
xchg
dec
int3
pop
movsb
sti
sbbl
stos
pusha
sti
jmp
add
sbb
mov
stc
aas
cmp
jle
inc
dec
xchg
jbe
lret
dec
push
out
arpl
pushf
movsl
mov
add
sbb
inc
andb
lock
jp
negl
repz
mov
sub
shl
pop
les
mov
in
sub
add
test
inc
jb
loop
orb
mov
mov
repnz
xor
dec
xor
leave
fildl
jmp
lahf
into
aaa
mov
scas
ja
mov
les
add
mov
int3
ficomps
xor
jmp
pop
rcll
dec
xlat
dec
into
std
inc
push
inc
stos
mov
es
mov
call
sub
and
pop
mov
jl
out
iret
mov
stos
or
mov
and
pop
call
cs
sti
and
int3
mov
loop
aaa
inc
dec
int
sbb
sub
outsl
pop
and
lods
mull
mov
mov
pop
addb
stc
daa
xor
in
scas
push
dec
push
ret
in
mov
cmpsl
jne
lret
shll
and
cmp
adc
add
clc
lock
sti
cltd
repnz
xchg
sbb
rolb
shl
lock
xchg
out
std
dec
add
daa
add
cmpsl
mov
xor
push
test
xor
imul
inc
pop
lods
notb
sub
icebp
into
add
roll
std
lcall
enter
out
mov
fnstsw
lcall
and
js
cmp
mov
xchg
mov
mov
int3
in
repnz
push
negb
jge
int
lock
xchg
int
adc
sbb
pop
imul
push
mov
cmp
push
flds
lods
testb
xor
cmp
or
pop
mov
loopne
pop
add
cmpb
or
adc
pavgb
int3
mov
fists
lods
dec
pop
daa
push
es
mov
pushf
pusha
push
mov
test
jbe
or
shl
pop
cmpsl
sub
sub
jbe
hlt
inc
mov
lock
mov
xchg
leave
adc
jb
cmp
rorl
add
cmp
repnz
ficompl
leave
sbbl
adc
lds
pop
add
out
pop
out
mov
push
in
aad
dec
movsl
aas
icebp
cmpsl
fsts
add
sub
aas
jo
mov
xor
xchg
jmp
jae
faddl
jg
dec
inc
adc
rolb
ja
in
outsl
outsb
or
pop
enter
push
mov
push
push
push
mov
cmp
nop
sub
and
jns
pop
leave
lock
dec
lret
test
rolb
or
movl
loop
jbe
push
lods
repz
mov
or
mov
or
or
mov
das
cmp
call
test
mov
in
inc
add
adc
sbb
and
popa
es
jno
xchg
xchg
fidivl
mov
sti
mov
test
or
pusha
popa
cmp
mov
sub
or
xchg
sahf
and
xor
popa
mov
push
push
sbb
rol
fdivrl
pop
jle
mov
jmp
mov
xor
fists
cld
imul
xchg
push
mov
pop
popf
pop
adc
mov
into
lahf
fsubrl
cmpsb
cli
test
push
lahf
pop
xor
aad
inc
in
inc
adc
push
pop
mov
mov
adc
pop
dec
ljmp
jle
lfs
dec
sti
loopne
or
mov
jge
mov
incb
xchg
push
inc
push
cmpsb
jl
cli
xchg
aam
and
jno
bound
mov
sub
mov
stos
sbb
jmp
pop
and
ret
adc
xchg
out
dec
and
or
shr
repnz
xorb
call
sti
cmp
xchg
mov
xchg
adc
cs
mov
repnz
aas
mov
inc
pop
es
mov
jl
sub
call
ljmp
mov
add
push
pop
cmovns
cld
xchg
imul
jmp
std
mov
lods
rcr
inc
in
lds
shrb
jg
ret
xchg
mov
mov
jmp
js
pop
call
popf
cmp
int3
xor
std
adc
add
dec
push
add
loop
pop
jo
cmp
xchg
aam
mov
cltd
dec
mov
or
es
enter
mov
dec
mov
jge
popf
mov
testb
xor
mov
bound
pop
push
jg
sub
inc
xor
mov
cwtl
adc
mov
inc
outsl
ret
ret
mov
sub
add
jmp
or
or
cmp
sub
repz
mov
scas
or
movsl
imul
aas
test
cwtl
leave
sbb
icebp
pop
int
test
insl
je
shll
sub
mov
es
das
insl
jns
cli
call
mov
mov
adc
mov
xchg
leave
pop
sub
add
xor
mov
cmp
mov
scas
fldcw
lea
push
push
mov
xor
mov
adcb
call
mov
fildll
sbb
sti
mov
inc
xor
push
xchg
call
loope
cmp
push
cwtl
jns
hlt
or
sbb
stc
jnp
pop
cmpb
scas
scas
in
imull
aad
aam
jmp
mov
jmp
mov
cmc
push
xchg
call
int3
mov
cmp
pop
cmc
cmp
adc
mov
cmp
test
jb
xchg
dec
inc
outsb
imul
mov
add
pop
into
pop
push
or
sub
push
ljmp
ds
pusha
cmp
xor
pop
int3
stc
inc
or
inc
pop
mov
or
dec
ret
repz
in
push
jmp
xchg
cmpsb
dec
lods
int3
mov
lcall
hlt
scas
jb
xchg
or
dec
inc
mov
mov
bound
sti
pushf
mov
std
imul
fistpl
mov
inc
xor
test
mov
sub
test
addr16
mov
gs
cltd
cmpsl
daa
ljmp
sahf
pop
dec
lods
jo
leave
push
pop
mov
test
mov
push
inc
jg
dec
repnz
xlat
shr
push
pop
mov
jo
call
mov
sub
icebp
stc
in
xchg
add
mov
fnsave
les
mov
fbld
dec
xchg
cli
sbb
cltd
mov
mov
or
cwtl
cmp
pushf
stos
fwait
scas
or
pop
push
ja
popa
mov
xor
cmpsl
jl
call
addb
ret
clc
adc
and
fldenv
jnp
call
bnd
orl
int
cmp
jmp
sarl
movsb
sahf
mov
sub
or
stos
lcall
jmp
pop
mov
jle
jb
call
mov
xor
sub
xlat
jb
mov
test
xchg
repz
sub
jns
push
popf
in
mov
aaa
lods
jl
mov
lcall
add
loopne
popf
pushf
daa
call
push
pop
inc
mov
orb
push
call
cmpsb
lds
adc
jns
mov
sub
or
mov
mov
addl
test
mov
jmp
mov
ds
sbb
jg
rcrb
dec
xchg
cmpl
stc
add
and
mov
into
jge
ret
pushf
insb
mov
orl
sti
cwtl
fwait
mov
popa
lock
push
lods
mov
jmp
adc
andb
xchg
insl
lods
mov
out
pop
mov
xchg
insb
inc
dec
cmp
dec
jbe
in
or
js,pt
inc
push
xorb
pop
and
in
out
js
dec
xor
inc
add
fs
dec
jns
jnp
lret
les
sbb
push
xchg
mov
jno
pop
mov
or
jno
pop
outsb
ret
and
loop
cltd
jecxz
add
icebp
cmp
push
add
sub
stos
xorl
mov
xchg
lcall
cmp
in
add
push
rcrl
push
dec
mov
mov
pop
mov
fisttpl
fstps
rcrb
add
xor
sub
insl
pop
push
dec
popa
jns
repz
mov
pop
dec
push
and
cmpsl
mov
popf
fbld
inc
push
dec
call
cmpsb
dec
in
dec
sub
adcl
xchg
mov
jns
pop
add
sub
cmp
divb
adc
testb
notl
subb
mov
lods
add
mov
gs
push
or
icebp
test
and
adc
or
call
aas
xor
mov
or
cld
stos
leave
arpl
or
sbb
test
dec
test
lret
jmp
mov
pop
mov
mov
inc
out
iret
daa
imull
mov
inc
outsb
cli
test
jle
push
pushf
sbb
and
lcall
jmp
jmp
cmp
dec
add
jns
xlat
sbb
push
popf
test
push
mov
lret
scas
rorb
pop
aad
js
mov
mov
cli
xor
xchg
push
xchg
ret
push
movsl
out
sub
je
into
jno
int3
cmc
adc
jmp
push
add
xchg
inc
ja
mov
push
pop
cmp
jb
fldt
aam
dec
xchg
dec
ja
jne
pop
lret
cmp
adc
xchg
mov
call
cltd
mov
ljmp
or
je
or
push
push
mov
pop
jle
dec
sti
jl
jg
lcall
adc
imul
ficoml
jb
adc
cli
adc
lock
ret
pop
in
or
bound
xchg
popa
jne
add
das
fadds
popa
add
pop
sarl
pop
xchg
dec
repnz
xor
stc
push
cmp
xor
xchg
xor
dec
mov
add
addr16
fnstcw
call
sbb
mov
enter
or
jmp
cmp
mov
imul
xor
inc
cmpsl
fbstp
pop
sbbb
xor
cwtl
out
cwtl
mov
sbb
lahf
pushf
shlb
out
ja
add
pop
push
mov
inc
push
into
movsb
xor
mov
mov
aas
rclb
or
nop
mov
pop
xchg
jnp
mov
cmp
dec
xor
mov
icebp
push
sub
cmp
sbb
mov
cmpsb
imul
test
or
dec
and
mov
stc
inc
jb
gs
aad
ss
xrelease
stos
or
push
cmp
out
loop
cli
pop
cmpl
jmp
loopne
or
push
cltd
gs
pop
outsl
setp
fstpl
repnz
push
fistl
push
push
xchg
fidivs
or
cld
jmp
sbb
sub
push
push
pop
mov
scas
dec
sub
repnz
inc
mov
into
out
jo
mov
xchg
bnd
ss
push
int3
or
insb
lcall
rorb
push
pop
push
adc
dec
cmp
xor
cld
adcb
mov
das
movsb
dec
scas
pop
movsl
xor
sbb
add
into
mov
jmp
push
test
fwait
mov
jmp
test
xchg
mov
push
out
jl
cmp
icebp
xlat
mov
fld1
sahf
leave
inc
out
pop
adc
pop
add
in
inc
mov
fldt
xor
jno
pop
ret
jp
xchg
xor
aas
cwtl
or
pop
pop
sti
push
fbld
insb
orb
add
pop
mov
je
pop
mov
mov
pusha
rorb
icebp
inc
and
notb
push
or
testb
test
movsl
dec
push
pusha
sbb
and
dec
mov
push
out
cwtl
sbb
xchg
aaa
pushf
xor
jp
popf
aad
dec
out
movsb
xchg
mov
leave
adc
adc
repnz
aam
lock
xchg
xor
mov
xor
xchg
dec
push
xchg
xchg
pop
cmc
ljmp
adc
jmp
std
pop
cltd
add
pop
pushf
or
xor
push
inc
clc
repnz
and
icebp
xchg
sti
lret
gs
jmp
add
lods
divl
pop
mov
or
repz
xchg
add
aad
adc
sbb
mov
sub
xor
icebp
cmpl
mov
lods
cwtl
or
sub
pop
test
icebp
mov
xor
mov
adc
imulb
inc
repnz
jo
imul
and
cld
repnz
pop
nop
mov
or
cmc
jge
ret
jne
lcall
in
bnd
lods
mov
fs
mov
dec
test
push
call
cli
aas
movsl
lods
lds
jo
push
push
jo
pop
sub
in
fistpll
pop
cmc
pop
add
and
ljmp
or
xlat
and
mov
dec
cmpsb
enter
push
xchg
icebp
jns
inc
jle
pushf
jmp
mov
xor
add
pop
fistps
rcll
int
add
imul
movsb
xor
movsl
call
mov
shrb
in
test
cmp
inc
mov
test
call
jno
clc
mov
dec
mov
ljmp
dec
push
add
sbb
enter
mov
or
and
shll
adc
pop
mov
mov
sub
inc
fstp
push
add
sub
subl
xorl
or
sub
sbb
div
inc
sub
test
dec
push
and
ljmp
and
gs
cmp
pop
xchg
ret
daa
mov
enter
jle
in
jmp
or
inc
sub
out
jno
sbb
icebp
imul
or
jno
idiv
xchg
or
xor
cli
inc
pop
jne
filds
stos
lret
inc
push
call
adc
iret
sbb
xor
mov
cli
insb
loopne
in
push
inc
jo
outsl
add
jb
lahf
xchg
mov
lcall
imul
push
cltd
insb
jo
movsb
and
shrb
push
fsubrs
out
mov
or
mov
dec
mov
cs
dec
xchg
stos
cmp
out
jo
mov
fcomip
inc
insb
jp
xor
scas
mulb
pop
mov
pop
mov
or
mov
adc
test
test
fmull
mov
or
daa
push
pop
data16
pop
les
int3
lea
mov
xor
pop
dec
icebp
push
sbb
cmpsb
rolb
mov
and
xchg
pop
call
pop
adc
xchg
jmp
adc
xchg
and
jmp
dec
cmp
stos
sbb
push
insb
notb
push
je
push
aas
sub
jecxz
ja
sbb
or
jmp
movsl
fidivrs
dec
imul
into
jo
and
mov
dec
negl
and
test
fsubp
ret
push
jno
rcll
sbb
mov
fldl
add
or
xlat
and
adc
mov
enter
loop
add
rclb
push
mov
ret
iret
lock
push
imul
mov
cld
add
pop
pop
mov
jne
lock
sarb
outsl
out
dec
shrb
jg
cmc
mov
mov
push
pop
push
pop
sbbl
push
sbb
hlt
lods
test
insb
jnp
cmpsl
hlt
repz
pop
jb
test
mov
aam
imul
xchg
fstpl
cmp
mov
arpl
mov
or
push
dec
test
nop
mov
je
lods
nop
jg
addb
mov
mov
les
and
dec
popf
idivb
jno
jmp
mov
insl
add
out
mov
mov
test
xor
inc
cmpsl
dec
in
mov
lea
mov
ret
shr
jb
cmp
mov
arpl
ror
sbb
mov
cmp
push
cmc
fiadds
inc
dec
daa
inc
lock
movsl
jno
push
mov
push
dec
hlt
ret
cli
xchg
mov
xchg
daa
movsb
and
jge
push
cmp
pusha
xchg
mov
fidivs
mov
aam
call
mov
out
add
scas
nop
push
insl
or
add
adc
push
les
les
inc
mov
adcb
xchg
loope
ss
xchg
mov
push
jle
jne
cmp
add
dec
movsl
add
loopne
mov
jo
repz
or
sti
adc
aas
add
leave
mov
cmp
sub
adc
das
or
fs
ljmp
cmpsb
dec
call
mov
or
add
aam
cmp
xchg
cmc
nop
mov
lahf
dec
cli
and
aaa
xchg
mov
iret
xchg
lahf
mov
mov
call
out
push
movlhps
and
push
add
ret
jecxz
and
fistpll
mov
push
xchg
lods
repnz
call
xor
or
popf
stc
push
or
push
idiv
or
mov
addr16
inc
push
dec
mov
pop
lcall
push
or
sbb
xchg
call
push
and
psubsw
push
repz
loope
jg
push
pop
shlb
sub
cmp
mov
adc
sarb
fadds
pop
stos
div
stos
stos
inc
sbb
push
les
jecxz
ja
lret
xchg
push
ja
fsqrt
pop
cli
push
pop
adc
aas
mov
lock
push
or
aas
or
clc
jmp
bnd
cmc
pop
jnp
rorl
mov
add
jnp
popa
dec
into
icebp
scas
push
ja
ja
pushf
mov
mov
idiv
mov
shl
das
xor
cmc
sbb
std
fists
pop
and
ror
jl
jmp
xlat
add
rcrb
jnp
or
push
mov
dec
xor
pop
icebp
ret
ret
repnz
sti
rol
add
push
aad
mov
pop
aas
adc
aam
lret
xor
add
mov
lock
jns
lcall
cmp
mov
pop
mov
push
jl
inc
inc
xor
jo
mov
add
dec
push
pop
ja
bound
cmp
mov
xor
daa
clc
dec
fdivp
inc
jo
xlat
dec
mov
ljmp
jmp
or
jb
nop
stc
jle
cld
jo
jp
or
dec
call
imulb
lahf
enter
lcall
jmp
stos
add
push
sbb
mov
lret
in
fcoms
mov
aad
stos
mov
das
std
cwtl
in
cmp
arpl
stc
mov
mov
pop
popf
inc
imul
add
inc
cmpsl
sar
sub
scas
jmp
sbbb
dec
push
pop
loopne
xchg
cli
push
call
push
push
bound
sahf
orl
aam
into
push
daa
adc
arpl
mov
cltd
hlt
or
and
and
cmpsl
pop
les
ficoms
pop
nop
mov
cli
push
lds
shlb
xchg
outsb
cmp
mov
or
daa
scas
pop
xor
loopne
sti
mov
xchg
xchg
dec
popf
aad
aas
mov
push
cmpsl
or
fwait
push
out
fcom
cmp
or
cmp
xlat
mov
or
lds
je
repnz
bound
mov
repz
pushf
inc
fbld
insl
inc
dec
repnz
jo
loope
jp
jne
mov
pop
out
sub
aas
negb
call
outsb
push
mov
adc
jg
cmc
enter
daa
push
movsl
inc
xlat
add
sti
and
mov
ljmp
popf
pop
adc
pop
mov
dec
imul
mov
mov
or
push
xorl
nop
jl
push
add
adc
in
sbb
shrl
ret
add
dec
movsl
jo
mov
and
daa
jno
inc
scas
adc
mov
inc
xor
clc
xchg
mov
dec
or
xor
or
xchg
mov
outsl
icebp
mov
dec
jo
push
xchg
sbb
mov
lcall
shrb
mov
lret
popl
fs
mov
hlt
mov
xchg
mov
inc
in
cmpsl
stc
pop
mov
dec
jnp
xchg
mov
aaa
sbb
mov
dec
inc
cmp
inc
push
jne
or
dec
enter
cld
mov
rorb
and
ljmp
lea
pushf
pop
ja
pop
dec
scas
mov
divb
fcompp
or
add
push
mov
mov
dec
dec
mov
stos
jecxz
jns
movsb
lcall
pop
dec
push
jmp
add
nop
call
aas
int3
arpl
mull
or
mov
xor
jmp
cmp
mov
push
cwtl
aas
test
jle
ja
mov
push
out
sbb
packssdw
jo
jmp
fmuls
pop
repnz
leave
int3
jb
add
pop
dec
leave
xchg
mov
xor
mov
cmpb
pop
add
popa
push
shl
popa
or
cmp
mov
outsb
fdivl
dec
or
inc
mov
xor
jmp
mov
testl
repnz
jo
cmc
dec
sbb
pop
or
cwtl
div
cmp
push
push
call
out
iret
int3
adcb
dec
sub
gs
test
pop
mov
lock
pop
pushf
add
push
fs
xchg
pop
jno
repnz
cld
sbb
xchg
inc
cmp
push
push
mov
push
in
adc
add
addb
sbb
loop
push
pushf
lods
ret
fnsave
add
sbb
jg
xchg
iret
jmp
xchg
pop
or
push
sbb
cli
scas
lods
sbb
test
mov
pop
push
xlat
rcrl
rorl
inc
jo
dec
sub
mov
sti
jl
xor
mov
push
jo
xchg
pusha
xor
inc
sbb
add
call
imul
mov
pop
dec
mov
dec
push
lea
mov
adcb
and
test
mov
or
shr
or
xchg
sbb
push
dec
mov
fldl
cwtl
xlat
push
mov
add
push
sub
lods
mov
adc
fnstsw
mov
sub
lds
hlt
mov
std
or
es
addb
mov
pop
cwtl
xchg
arpl
sysret
test
mov
push
shll
nop
sub
stos
jbe
push
dec
add
dec
xor
fldl
out
mov
adc
jl
sbb
movsb
pusha
fcomp
or
pop
adcl
pushf
fstps
xlat
cmp
mov
mov
lds
pop
push
xor
and
sub
shr
push
rol
mov
add
adc
in
push
inc
mov
jno
nop
mov
mov
push
fsub
andl
mov
push
sub
ror
xchg
fadd
decb
or
mov
or
pop
sti
outsb
xor
rolb
mov
lret
daa
or
pop
add
xor
push
roll
es
dec
jge
cmp
mov
loop
push
dec
movsb
cld
dec
popf
jo
push
xor
and
jmp
mov
das
cltd
jno
les
popw
or
lcall
testb
sub
add
cwtl
ljmp
ret
test
jo
jecxz
sti
testl
daa
sbb
movsl
xor
or
test
mov
sbbl
loope
pop
pop
test
adc
ljmp
orps
add
imull
add
ret
ret
cmc
pop
imul
mov
mov
xchg
push
std
int
daa
cmc
addb
push
mov
cmp
mov
sahf
pop
das
arpl
call
xchg
repz
dec
push
sti
int3
xchg
sti
cwtl
push
jl
mov
call
jecxz
fimuls
mov
xorl
enterw
pop
hlt
shll
push
add
ss
dec
orb
add
pop
mov
mov
iret
test
pop
mov
cmp
or
cmp
stos
insb
fdivp
lods
cmpsb
sti
mov
pop
cmc
sub
popa
sbb
mov
mov
pop
push
jecxz
addb
push
test
cmp
and
inc
cmp
mov
push
dec
dec
mov
xchg
and
pop
xor
push
ja
xor
lcall
xchg
jle
leave
aad
pop
scas
rclb
out
adcb
mov
jo
mov
mov
daa
xor
xlat
cltd
xchg
pop
pop
jmp
xchg
mov
adc
cmp
pop
cmpsb
movsb
add
lods
cli
cmp
inc
arpl
jmp
inc
into
inc
ret
movsbl
mov
adc
adc
pop
xchg
inc
mov
or
loope
or
lea
fdivrl
push
test
xchg
push
sub
mov
adc
fsts
stc
sti
aam
dec
sub
mov
subb
stos
add
test
cmpsb
push
jb
shll
and
cwtl
xchg
lcall
jae
cltd
pop
fmull
imul
or
pop
mov
sub
mov
psrlq
adc
nop
inc
dec
xchg
add
jb
shlb
jbe
inc
sub
jge
push
in
pushf
mov
dec
cmp
pop
jmp
mov
mov
add
test
mulb
xchg
mov
and
pop
insb
mov
lcall
icebp
rcl
hlt
or
ljmp
repz
mov
add
outsl
and
sub
cld
cmp
push
es
add
xchg
scas
pop
inc
jmp
shl
cmp
stc
mov
test
inc
cmpsl
jnp
xchg
push
mov
rolb
add
cmp
daa
mov
rcrb
or
ret
shll
push
hlt
pop
xor
fistpll
mov
sub
xchg
jo
xorb
fldenv
xchg
pop
dec
jo
push
lahf
sub
pop
ljmp
dec
dec
sahf
mov
bnd
xor
ret
xor
sbb
push
popa
repz
call
repnz
ret
cmp
stc
mov
sub
jbe
xor
sti
ds
dec
push
cmc
inc
rol
out
add
pop
push
popf
ljmp
xchg
es
test
inc
cmp
and
sbb
push
xor
mov
jge
or
push
jl
dec
pop
mov
sbb
pushf
stc
mov
or
lods
div
incb
dec
imul
mov
mov
fsubrs
outsl
imul
mov
divb
repnz
lcall
repnz
call
jge
jg
stc
int3
pop
jl
mov
mov
add
dec
push
add
jle
xchg
push
inc
mov
jge
or
jmp
hlt
or
xchg
call
loopne
mov
xor
data16
lods
sbb
mov
incl
push
sbb
pop
inc
clc
in
sub
push
xchg
sbb
daa
or
add
push
lods
jmp
dec
pop
out
movsl
push
xchg
out
dec
arpl
xor
mov
jnp
mov
shrb
jnp
cmp
dec
repnz
pop
mov
push
xlat
cwtl
mov
outsl
addr16
push
lea
aad
push
popa
add
and
sarb
movsl
or
cmpsb
dec
divl
xor
subb
or
jle
pop
mov
xor
sub
jle
aaa
pmaxsw
mov
sbb
mov
push
and
push
and
jmp
jnp
push
or
sbb
mov
sbb
lods
andl
daa
cli
fwait
lea
repz
or
mov
cmp
enter
and
jecxz
outsl
dec
add
jbe
movb
mov
loope
sub
or
pop
fistpll
mov
xchg
pop
xor
push
ljmp
shlb
call
scas
adc
or
fwait
mov
inc
jmp
flds
cmpl
jmp
orb
push
pushf
imul
mov
stc
mov
jbe
insl
inc
jo
pop
lcall
adc
xchg
shlb
mov
sbb
and
pop
xor
mov
xor
jp
loop
movsl
imul
add
xchg
push
fwait
mov
mov
mov
jo
pop
mov
jno
dec
mov
add
dec
mul
addb
add
test
test
dec
xlat
andl
push
pop
push
insb
ret
pushf
cmp
mov
dec
xchg
fidivl
rcl
cmp
mov
aaa
loope
or
fs
add
lcall
pop
dec
lahf
out
jb
xor
sti
push
pop
cs
in
add
mov
out
jo
pop
out
mov
iret
mov
ret
inc
xchg
repnz
testb
stos
jb
in
and
mov
popl
ret
pop
ja
negb
in
enter
jb
shll
push
outsb
insb
sub
ljmp
std
sbb
mov
jle
xchg
or
push
mov
mov
adcb
paddusb
imul
jmp
in
mov
pop
call
jg
fstps
movsl
add
sbb
in
rolb
pop
inc
aaa
mov
movsb
adc
pop
cwtl
les
xor
or
loopw
inc
add
dec
or
rorl
mov
test
inc
push
icebp
xchg
popa
pop
pusha
jmp
xchg
xchg
addr16
leave
inc
xchg
aad
sti
and
dec
out
jge
dec
pop
dec
loope
xor
push
cmp
cmp
dec
pop
mov
mov
sbb
sti
mov
in
wbinvd
ror
mov
cmc
cmp
leave
sub
push
and
and
into
jmp
sti
dec
jp
pop
pop
ljmp
xor
xchg
push
push
or
inc
mov
stos
pop
cli
lods
popf
popf
arpl
enter
dec
add
fimull
outsb
push
ret
add
pop
daa
cmpsl
stc
adc
jmp
movsl
popf
push
pop
or
adc
insl
mov
popf
mov
test
push
dec
mov
dec
push
sbb
xchg
xchg
or
cli
and
jmp
pop
mov
sbb
aam
imul
sbb
pop
jb
rorb
xor
inc
icebp
jae
and
push
jns
popa
or
sub
paddsb
fcompl
push
jo
push
sbb
sbbl
push
call
popl
scas
mov
or
lods
dec
cmp
les
jmp
dec
stos
mov
sbb
cmpsb
fcoml
pop
popa
lods
dec
sub
pop
push
cmp
fs
popf
dec
divb
jnp
aaa
shr
xchg
das
loopne
mov
pop
cmpsl
jo
inc
push
jle
sahf
jmp
jp
fdivs
inc
outsb
add
mov
fstpl
bound
mov
mov
fsubr
push
sub
or
jge
ja
push
and
daa
or
mov
in
test
int
sbb
or
xchg
lcall
sbb
pop
xlat
inc
dec
addb
mov
lcall
out
call
add
mov
or
stos
and
dec
loope
cmp
inc
call
jle
xorl
push
xchg
fbld
test
in
xchg
lahf
shrb
aam
and
idivb
mov
imul
sbb
jmp
call
cli
es
subb
inc
add
ja
sbb
cmpsl
test
mov
jo
push
or
push
in
mov
imul
test
out
or
adc
in
mov
or
pop
ljmp
jmp
gs
xlat
mov
out
setae
add
fdivl
jge
jecxz
add
and
adc
or
mov
xchg
xlat
jae
fldcw
imul
rcll
add
in
inc
push
sbb
sub
jns
push
call
lods
dec
xchg
hlt
mov
fmull
repnz
sbbl
call
add
add
adc
jne
shlb
or
mov
sbb
fimuls
jb
jo
leave
mov
movsl
inc
jle
xor
add
sti
adc
xor
dec
mov
xchg
sbb
mov
in
xlat
jno
add
jnp
daa
sti
sub
jmp
mov
mov
cwtl
inc
sbb
xchg
clc
mov
pusha
add
dec
push
add
sbb
and
fxch
lret
sti
outsb
jmp
and
fistps
in
xor
fadds
call
movsb
sysret
addr16
cmc
or
pop
ja
imul
jmp
iret
push
ret
lret
adc
xor
inc
test
testl
jmp
or
pop
or
cmpsl
or
ret
lret
push
cmp
loop
pop
mov
cmp
movsl
jb
mov
subb
pop
es
outsl
inc
call
add
cmp
popf
pop
lods
sbb
inc
mov
dec
sbb
pop
xor
add
imul
or
add
test
mov
rol
adc
cmp
icebp
call
xor
jp
test
add
hlt
dec
mov
jmp
ficomps
fcompl
jmp
xor
jb
push
mov
mov
mov
dec
nop
in
fstl
pop
push
mov
cltd
dec
popf
ret
pop
pop
negl
iret
shrb
xlat
fsubs
jmp
add
jb
pop
pop
sahf
cmp
loop
xor
lea
jne
movsb
mov
mov
pop
fisttpl
movsb
fwait
sahf
movsb
repnz
inc
cmp
loopne
lret
pop
sub
cli
outsb
mov
sbb
adc
out
ss
out
lahf
call
jl
pop
ss
add
add
pop
sbb
jge
daa
push
movsl
test
cli
pop
mov
incb
adcl
or
pop
xchg
iret
pop
imul
and
fisubs
mov
idivb
sbb
push
shlb
xchg
mov
adcb
xchg
pop
mov
movsl
jne
xchg
call
je
cmp
sub
cld
rcrl
dec
xlat
push
mov
sub
mov
int3
icebp
or
push
adc
addb
int3
insb
cltd
add
cmpsb
add
push
or
pop
cmp
scas
add
mov
sub
je
sahf
aaa
lods
sbb
cwtl
popf
in
jae
adc
jp
or
mov
movsl
nop
divb
jbe
icebp
cmp
loopne
jmp
xchg
fdivrl
or
cwtl
sbb
push
add
add
cmpsl
das
rcr
ds
add
mov
scas
add
daa
cmpsb
and
adc
xchg
in
pusha
daa
insb
repz
loop
dec
mov
mov
pop
mov
inc
or
mov
repz
push
push
out
push
and
inc
xchg
jb
lret
in
sub
xchg
sbb
pop
inc
lcall
insb
scas
fcoms
adc
aas
xlat
and
pop
pop
sub
or
jo
xor
cmp
jmp
dec
dec
ret
out
repz
gs
mov
ss
insl
scas
cld
les
pop
push
in
sub
jnp
push
inc
mov
mov
shrl
jne
or
dec
loopne
cmp
inc
dec
add
jns
repnz
push
sbbb
int
jo
mov
clc
in
cltd
push
and
or
sbb
xchg
sub
jo
push
sub
pop
out
fldenv
out
stc
jle
dec
cmpb
out
jmp
inc
mov
pop
mov
xchg
ret
ret
and
aaa
sti
or
shrl
mov
fs
and
mov
stc
or
ljmp
repz
mov
sbb
popa
int3
enter
push
cld
in
lock
scas
push
xchg
shll
in
add
jmp
add
dec
enter
push
imul
clc
add
lock
pusha
repnz
lcall
cmc
inc
and
arpl
add
cli
in
lea
cmp
sbb
dec
aas
fadd
loop
cld
jmp
add
mov
pop
addb
xchg
xchg
call
jne
repz
pusha
in
loope
push
xlat
mov
std
call
or
mov
in
pop
jns
mov
dec
cmp
sub
imul
jno
add
test
stos
inc
popa
ret
adc
inc
inc
sahf
push
call
repz
jns
mov
push
lcall
in
add
mov
xor
mov
sbbb
add
test
jmp
aam
ljmp
es
or
cli
ficomps
dec
mov
cmp
aas
fdivrl
mov
icebp
and
imul
call
repz
xor
jmp
lret
lock
jo
pop
je
inc
decb
lea
std
enter
sub
xchg
lods
push
push
jecxz
or
test
inc
mov
add
push
or
sbb
cwtl
mov
push
dec
jecxz
or
call
mov
mov
mov
jns
dec
cli
jge
cli
pop
cmp
mov
cmpsl
dec
add
cmp
stc
pop
hlt
ret
scas
adc
sub
pusha
hlt
push
jo
inc
cmpsb
cwtl
frstor
push
mov
xchg
call
or
cwtl
repz
adc
loop
add
sbb
jmp
sub
pop
mov
add
fnsave
mov
repnz
popa
mov
movsb
std
cmp
adc
jge
das
or
ds
std
loope
mov
sbb
inc
lea
push
push
in
and
mov
dec
dec
pop
cmp
mov
add
jl
subb
jle
inc
inc
out
mov
jbe
push
lods
cmp
lcall
jb
ds
cmc
outsb
nop
inc
or
test
fmulp
mov
cmpsl
dec
ljmp
sub
xchg
dec
sub
testl
and
jne
into
ret
ret
push
dec
cmpsl
xor
popa
mov
mov
xor
sahf
cwtl
xchg
inc
cli
test
xor
ljmp
lock
dec
jle
dec
popf
ljmp
or
and
add
xor
push
rorl
aam
call
in
adcb
aas
mov
clc
or
testl
lods
inc
loop
fcoml
enter
xchg
daa
jge
mov
mov
out
add
lods
inc
pop
enter
pop
inc
pop
mov
fstps
cmpsl
or
sbb
push
mov
lods
lods
add
jmp
and
outsb
push
mov
aad
lret
mov
lahf
sub
push
out
jl
call
lds
pop
jne
jmp
jns
lea
push
jmp
xor
push
subl
xor
mov
adc
notb
rcl
dec
adc
jmp
sbb
dec
xor
icebp
pop
mov
mov
mov
cmp
push
xor
pop
imul
xchg
fdivrs
ljmp
test
or
push
cmpsb
loop
ljmp
ret
sub
add
sub
jb
mov
mov
push
dec
pop
rorl
inc
pop
lods
mov
cmc
aad
movsb
mov
jmp
xchg
repz
or
mov
rcr
pop
aaa
cmc
hlt
inc
sti
and
clc
sub
mov
in
scas
xchg
adc
xchg
mov
cmpsl
cmp
cmc
push
lahf
xor
ss
pop
and
jmp
sub
jmp
fwait
sub
inc
scas
inc
dec
jae
pusha
push
adc
int3
stc
jb
call
adc
push
cmp
cmc
jmp
pop
pop
mov
push
mov
inc
stos
popf
or
call
and
mov
test
out
flds
dec
or
mov
sar
mov
int3
dec
mov
rolb
add
call
into
call
add
in
push
push
mov
daa
jns
mov
inc
xor
addl
sbb
mov
pop
mov
push
ja
aam
mov
cmp
dec
xor
jno
lahf
add
inc
iret
cmp
addr16
jmp
cmp
mov
repnz
pop
lods
xchg
das
scas
stc
mov
add
adc
pop
into
pop
adc
xor
bound
push
addb
ljmp
call
mov
dec
inc
ret
aam
lock
sub
out
ret
lods
sub
or
test
cli
cltd
daa
call
test
push
xor
pop
testb
test
pop
mov
add
mov
add
xchg
or
enter
xchg
mov
dec
pop
adc
mov
jl
jo
in
sbb
dec
push
sub
mov
movsl
push
mov
hlt
in
test
push
fld1
movsl
xor
icebp
xchg
adc
imul
xchg
rolb
jp
adc
aam
insb
push
test
out
xchg
push
inc
cwtl
push
aam
scas
das
rorb
das
sbb
nop
or
jmp
lret
adc
add
hlt
imul
mov
pop
scas
jns
cmp
push
mov
call
shll
sti
data16
cmp
stc
dec
or
sbb
or
cmpsl
dec
mov
jae
sub
clc
fidivrs
aam
push
xchg
inc
xor
repnz
inc
fcompl
dec
jmp
or
and
addr16
test
pusha
adc
jmp
addr16
sahf
jmp
xlat
out
aas
es
hlt
mov
outsb
sbb
lret
andl
jb
sbb
inc
repz
cmpsb
push
jge
pop
sahf
mov
shl
push
xor
add
adc
test
or
test
inc
imul
sub
cmpb
cmpsl
rorl
pop
cli
pop
orb
jecxz
movsb
jb
push
dec
in
repnz
mov
inc
cmp
fidivl
pop
sti
test
roll
imull
fstl
or
jno
clc
jno
lret
xlat
icebp
push
pop
cmp
fwait
leave
and
add
out
mov
sti
out
lods
push
out
dec
ds
dec
add
jge
jp
xchg
xchg
inc
in
sbb
fucom
jbe
or
arpl
call
popa
sbb
or
or
outsl
mov
popf
push
jmp
shlb
inc
sbb
pop
mov
mov
ficompl
test
icebp
pop
and
mov
inc
push
dec
or
jmp
add
out
jb
std
les
imul
xchg
sub
push
test
push
cli
and
daa
cli
test
jo
sbb
or
dec
rcr
aad
jo
sub
add
mov
xchg
stc
lahf
sbb
jmp
pop
jnp
imul
mov
out
loopne
mov
pop
and
add
xor
not
mov
xor
int3
ja
xchg
lahf
ret
rorl
sub
js
adc
xor
daa
enter
xchg
incb
shlb
repnz
mov
cmp
in
js
test
jno
fldcw
in
insl
pop
dec
mov
aad
cld
xlat
or
push
ss
movsb
push
rclb
imul
mov
imul
inc
orb
pop
pusha
repz
int3
xchg
xchg
mov
inc
fwait
es
loope
mov
or
dec
sbb
inc
xchg
sbb
jle
or
mov
add
mov
rorb
mov
enter
jmp
lahf
dec
aad
push
push
adc
pop
imull
dec
jge
jmp
or
in
repnz
jae
or
mov
ljmp
mov
test
pop
in
sub
push
divl
mov
xor
push
pop
fidivl
mov
push
lahf
test
mov
sub
pushf
xor
dec
pop
or
pop
pusha
or
or
wbinvd
call
lods
movsb
or
aad
cld
push
xchg
cmc
dec
mov
xchg
fnstcw
pusha
push
and
movsl
xor
jae
call
leave
subb
outsb
pop
pop
repnz
pop
mov
fsubl
mov
jl
js
mov
sub
lods
and
add
mov
int
fldl2e
pusha
loope
sub
push
hlt
xchg
xor
subb
xchg
cli
dec
imul
stos
in
sub
push
adc
sbb
pusha
idivb
xor
jmp
clc
call
stos
aam
push
sub
fisttpll
jg
mov
out
jnp
or
mov
into
dec
jecxz
sti
mov
roll
pop
mov
stos
push
cmc
mov
test
inc
jge
and
jb
call
jmp
mov
sbb
cwtl
mov
mov
inc
xor
lock
push
sarb
pop
jae
lods
in
mov
dec
or
call
lcall
xchg
jb
fst
pop
mov
xor
jno
nop
inc
std
das
loopne
mov
out
xchg
jle
inc
call
cmp
push
in
mov
loope
push
pop
push
imull
das
sub
mov
fmulp
shlb
pop
decb
roll
sbb
pop
jge
and
daa
fbstp
in
scas
sbb
popa
test
jmp
ret
jp
fnsave
jmp
adc
jns
ds
out
adc
das
ret
loopne
push
cmp
push
imulb
ret
stos
mov
sbb
pop
pop
fwait
iret
idiv
das
dec
fsubr
lcall
dec
imul
sbb
sub
adc
movsb
mov
xor
out
lahf
testl
mov
mov
mov
fwait
negl
in
aam
and
or
outsb
or
lods
mov
mov
in
cmp
call
jns
test
sub
shlb
jmp
mov
push
sbb
ss
int3
or
push
enter
jp
cltd
in
mov
or
and
ss
loope
adc
push
cmp
sbb
push
out
test
lahf
iret
or
daa
or
mov
in
push
lret
sub
mov
xor
push
sub
aaa
cli
and
in
push
push
push
add
ret
arpl
repnz
mov
jo
xchg
add
mov
cmpsl
cmp
popf
dec
jmp
add
repnz
mov
adc
add
add
pop
push
adc
call
pop
mov
xor
push
pop
pop
clc
push
ret
sub
add
xchg
cmp
das
sbb
pop
push
mov
add
flds
jg
in
stos
push
and
jmp
sbb
mov
push
mov
sub
cmpsb
jg
mov
cmp
or
rcrb
mov
dec
or
cli
dec
push
add
push
xchg
hlt
jecxz
or
jno
mov
push
sub
shlb
inc
add
das
jne
imull
add
mov
imul
mov
cmp
test
xchg
imul
fisubs
sbb
pop
mov
and
rorl
mov
cltd
pop
call
pop
je
jp
repnz
das
into
or
test
dec
pop
iret
mov
jb
test
jmp
or
cmp
add
pop
insb
rcrl
and
ficoms
icebp
dec
and
inc
call
lods
dec
inc
pop
fmull
sub
jmp
xor
xor
push
push
inc
insb
es
call
les
sbb
rcll
inc
or
mov
repnz
sbb
or
mov
mov
mulb
shr
or
xchg
mov
je
mov
xor
jmp
mov
cmp
jno
push
andl
movsl
movsb
cmc
xor
jge
testl
movsl
push
cmp
cwtl
icebp
repnz
pop
das
and
cmc
test
in
or
or
add
mov
mov
aam
push
dec
inc
in
lret
lds
xor
and
xchg
mov
ret
pop
call
mov
test
repz
insb
mov
push
dec
and
push
lods
or
pop
inc
ficomps
hlt
push
dec
sahf
sti
sub
xor
pusha
mov
nop
mov
loope
sub
lret
xor
xlat
sub
std
and
xchg
mov
bound
inc
insl
or
jne
dec
mov
fprem
stos
mov
mov
jg
insb
les
mov
popf
pop
push
cli
rcll
fsubr
adc
and
pop
mov
pop
cmpsl
fcoms
call
jmp
push
or
lods
push
sbb
cs
cmova
xlat
mov
or
jmp
inc
sub
sbb
and
push
mov
aaa
mov
pushf
ds
add
ljmp
xor
insw
repnz
or
or
dec
adc
jno
jmp
mov
hlt
cmp
fsubl
or
popf
into
fistps
rolb
xchg
push
call
jmp
xchg
jb
and
sub
xor
pop
xchg
out
push
out
pop
subb
test
inc
mov
mov
cmp
sub
inc
mov
mov
out
mov
mov
ljmp
xor
dec
shrb
dec
sub
mov
mov
sbb
test
jmp
lds
les
mov
mov
pop
repnz
push
sub
ror
fstl
fldenv
nop
jecxz
and
ds
mov
push
and
push
test
insb
mov
loop
lds
mov
push
mov
mov
jns
add
jnp
dec
jmp
loopne
cwtl
xchg
and
cli
movsl
xchg
call
jno
enter
push
add
shll
call
dec
or
ja
aad
std
sbbl
enter
and
mov
sahf
aaa
pusha
or
and
imul
cmpsb
jmp
into
cmp
mov
daa
nop
xorb
push
xorb
add
or
stos
fstps
jnp
imul
jp
clc
cmp
inc
les
sbb
dec
mov
add
mov
gs
sub
rorb
es
sbbl
sti
enter
ret
lods
not
pop
sub
or
incb
out
xchg
inc
xchg
add
jne
mov
and
mov
add
scas
pushf
das
mov
subb
sbb
addps
lods
adc
out
xchg
pop
xchg
mov
mov
clc
pop
jp
add
cli
mov
mov
fucomp
inc
push
repnz
cwtl
cli
icebp
nop
xchg
jp
jo
js
ljmp
mov
jnp
lock
mov
push
stos
sahf
js
push
xor
sbb
inc
bound
or
rcll
cmc
nop
or
inc
push
jns
mov
inc
insb
in
mov
out
repnz
dec
fdivl
and
or
and
cbtw
fiadds
and
repnz
push
cmc
outsb
imul
jmp
into
int
inc
mov
jge
push
xlat
ret
test
fucomp
test
cmc
push
sar
pop
insb
xor
xchg
cwtl
popa
sub
mov
and
test
add
mov
sbb
mov
inc
scas
add
dec
sti
add
mov
xor
mov
or
fwait
push
xor
fwait
test
pop
loopne
sub
jo
ret
shr
adc
daa
dec
fabs
out
push
dec
dec
data16
cmpsl
insb
int
push
hlt
ds
sahf
lret
adcb
imul
mov
in
in
stos
xchg
inc
xor
inc
sub
jne
add
sbb
adc
pop
fidivrs
or
and
jecxz
cmp
fsubs
jno
cmpsl
cmc
jg
sub
dec
aam
mov
fsubrs
or
je
jb
jmp
int
jmp
mov
sbb
inc
pop
stc
test
ffree
movsl
aas
or
shll
les
xor
jno
mov
jp
stc
add
dec
pop
andb
mov
dec
stos
icebp
dec
add
int3
sub
rorb
or
dec
add
int3
jns
add
imul
test
stos
mov
sub
mov
mov
icebp
cmp
ss
ja
nop
jbe
pop
push
or
out
mov
bound
jb
stos
outsl
push
aam
shr
int
mov
mov
adc
mov
push
outsb
fsubrs
punpckhdq
sbb
mov
pop
stos
call
repnz
push
adc
inc
inc
xor
test
xor
cmp
lock
adc
mov
andl
dec
cmc
push
ss
cltd
in
and
and
fstpl
and
test
cmpsb
xor
cmp
jmp
add
xor
int3
add
mov
adc
repz
fimuls
lock
mov
popf
push
faddl
dec
out
cld
icebp
jmp
mov
lret
aam
jb
shrl
mov
dec
cmp
sub
mov
mov
fsin
dec
fs
push
into
popa
cmp
les
xor
cli
mov
out
dec
mov
dec
add
roll
cmp
in
add
aad
scas
shll
xchg
push
dec
das
push
ret
enter
int3
inc
push
pop
dec
mov
inc
mov
jmp
repnz
dec
sub
cli
lods
jl
inc
sbb
jo
mov
lods
xchg
cmpsl
pop
pop
or
incl
test
or
test
dec
ret
jmp
lret
addb
into
negl
xchg
test
add
dec
xor
arpl
adc
pusha
push
xchg
jae
push
imulb
add
xchg
adc
mov
jno
loop
pop
sub
repz
hlt
out
sbb
mov
pop
or
test
stos
fistpll
ds
and
jo
adc
fadds
jmp
xchg
stos
adcl
adc
cmpsb
in
addb
loop
push
jmp
mov
sbb
and
movsl
pop
push
in
insl
adc
fnstsw
cmp
mov
xor
dec
pop
insb
pop
sbb
arpl
addb
mov
or
enter
xchg
pop
call
shrl
jno
push
hlt
mov
cld
jne
sub
loop
pop
jo
jecxz
pop
xchg
xchg
push
push
ret
pusha
mov
inc
jp
xchg
lahf
xchg
inc
aaa
lds
mov
mov
dec
fwait
pusha
fwait
sub
faddl
lahf
adc
in
mov
je
lahf
aam
lret
jno
or
jo
rcrb
sahf
and
dec
adc
jmp
xor
lock
mov
mov
push
loopne
jb
cmp
fidivrl
fisttpll
cmc
and
ja
sbb
xchg
or
cmp
mov
addr16
push
dec
adc
lea
sub
mov
sub
std
lods
cmpsl
enter
addr16
outsb
add
js
fstpt
loop
sbb
cmp
add
mov
pop
repz
sub
push
sbb
fdivrl
pop
sti
loopne
mov
lret
pushf
mov
roll
push
fsubs
cmovb
jo
call
mov
inc
jp
pop
mov
lods
adc
lahf
in
pop
mov
xchg
and
mov
scas
push
stos
mov
inc
jne
leave
xchg
jno
jmp
in
in
or
inc
out
cs
and
orb
dec
xchg
xor
dec
mov
mov
inc
mov
es
mov
or
push
cmp
jmp
mov
xchg
popa
xor
push
adc
repnz
data16
rclb
repnz
ret
mov
sbb
mov
mov
and
push
push
push
rcll
inc
cmp
push
cli
pop
aad
sbbl
push
mov
rorl
jmp
mov
cs
stos
mov
adc
xchg
inc
inc
push
out
mov
inc
fisttpll
xor
adc
add
rcrl
add
jmp
mov
add
imul
pusha
mov
dec
mov
inc
cmp
jmp
shrl
jae
sahf
mov
push
fs
int3
std
idivb
dec
in
sub
pusha
cs
jmp
notl
add
pop
cltd
daa
mov
jmp
mov
cld
mov
xor
hlt
out
xor
mov
out
push
add
xchg
int3
adcw
and
leave
pop
jge
jno
adc
cmp
and
hlt
and
and
aas
inc
out
fstpl
daa
nop
xchg
jns
mov
pop
cmc
rorl
mov
mov
jmp
ja
push
or
push
mov
cltd
mov
mov
inc
pop
sbb
arpl
or
or
loope
and
push
and
in
add
jne
ss
inc
popf
imulb
ljmp
sahf
cli
call
or
inc
out
fsubl
mov
push
pop
in
aaa
mov
repnz
fisubrl
dec
scas
cwtl
cmp
dec
xchg
mov
inc
inc
popf
sahf
lea
xchg
mov
bound
call
orl
stos
pop
test
inc
cld
mov
nop
and
pop
pop
jecxz
fcoms
sub
inc
push
inc
pop
push
push
dec
icebp
repnz
push
jne
sti
and
push
mov
leave
xor
fcoml
repnz
dec
lods
call
dec
lret
pop
sar
mov
or
mov
inc
or
xchg
sti
shlb
mov
pop
xlat
adc
sub
cwtl
insl
add
pop
pop
cmpb
push
jo
xchg
sub
stos
or
aad
int3
sub
pop
int3
cli
lret
out
pop
xchg
iret
mov
or
push
add
pop
lret
int3
add
dec
pop
icebp
out
divl
nop
cmpb
mov
rcll
call
les
jo
dec
iret
push
sbb
orl
pop
mov
jg
xchg
mov
imul
es
shr
and
call
inc
xlat
dec
insb
pop
nop
out
add
bound
sbb
inc
jg
and
sbb
inc
xlat
sub
lret
jno
mov
ficompl
decb
pop
xchg
aas
or
js
popa
fs
int
jno
decl
adc
mov
pop
cmp
mov
dec
lock
les
push
mov
je
add
sub
push
xchg
mov
in
add
and
ss
cli
filds
daa
inc
pushf
jge
outsb
jmp
fstpt
inc
lahf
sti
sbb
jmp
testl
mov
divl
dec
je
pop
xor
xor
dec
cmc
mov
call
xchg
dec
test
leave
or
ja
cwtl
xchg
cli
push
push
mov
sbb
rcrl
sbb
enter
ficoms
sbb
pop
out
xchg
jbe
jo
sbb
lea
inc
les
and
push
leave
sbb
lret
into
call
and
sbb
movsb
or
pop
push
mov
sub
cmp
loopne
inc
mov
fsubr
jmp
jb
push
mov
call
out
in
jl
andb
mov
jbe
out
call
xchg
mov
or
cmp
jb
and
loope
cmp
daa
mov
dec
int3
lock
mov
daa
js
inc
inc
popf
js
mov
mov
nop
inc
lock
call
idivb
lret
cwtl
int
or
mov
movsl
sub
jnp
insb
ds
inc
push
movsb
jb
push
lock
pop
jmp
mov
mov
test
daa
cwtl
mov
mov
or
outsb
push
inc
repnz
mov
push
and
or
addl
call
ljmp
jno
ret
inc
cmp
add
repz
inc
ds
je
push
lret
lea
popf
or
loopne
dec
stos
inc
aad
and
or
sbb
adc
addb
imul
pop
xchg
cld
scas
rclb
and
inc
mov
add
aaa
push
enter
mov
daa
cmc
or
jbe
xchg
into
hlt
pop
inc
jb
mov
jo
mov
jmp
adc
out
add
scas
jbe
adc
aam
push
pop
in
jge
jecxz
repnz
jns
adc
add
pop
outsb
mov
int3
sub
add
mov
imul
icebp
cmpsl
jb
dec
pop
rcrb
sbb
fsubs
xchg
cmp
inc
loopne
push
push
test
aam
mov
inc
sub
cmp
push
dec
mov
lods
test
cmpsl
lock
jo
stos
mov
dec
nop
clc
push
shr
fmuls
jb
jmp
mov
int3
ret
jno
jmp
fistpl
inc
ja
sbb
pop
jmp
mov
ljmp
js
dec
insb
ret
mov
sub
call
mov
mov
sbb
jge
and
je
mov
decb
pop
pushf
icebp
cmp
fsubl
xor
leave
mov
jno
inc
jmp
push
fs
inc
push
mov
in
cltd
notl
mov
std
daa
aas
sbb
cmp
push
repnz
pop
or
in
push
repz
lcall
inc
xchg
mov
push
xchg
inc
add
push
or
mov
mov
cwtl
xchg
sub
inc
scas
and
les
add
repnz
outsb
roll
std
mov
mov
and
mov
mov
cmc
orb
jbe
mov
das
jo
xor
lcall
stos
dec
pop
cmp
mov
add
inc
stc
dec
fwait
xor
test
fnstsw
push
push
stos
in
push
leave
mov
shr
cmp
pop
mov
inc
into
adc
and
pusha
je
or
add
pop
test
lea
mov
sub
int3
mov
enter
inc
pop
mov
push
pushf
and
pop
mov
loope
rorb
dec
or
loope
adc
jbe
cltd
add
nop
xor
mov
pop
sub
repnz
push
movsb
lret
jnp
in
std
and
jbe
and
cltd
movsb
divb
in
fildll
fwait
repnz
pop
sbb
aad
pop
jno
xchg
push
sar
push
mov
loop
out
xchg
lret
aad
jns
sub
and
dec
add
add
test
inc
xchg
cli
xchg
cs
jno
out
int3
add
mov
xchg
adc
bound
ja
cmp
mov
xchg
imul
dec
repz
mov
jmp
je
mov
xor
data16
dec
mov
xchg
xchg
pop
lret
cmp
cmpsl
push
jb
mov
jns
xor
push
sahf
mov
push
insl
sub
add
pop
pop
push
push
test
mov
orb
out
push
sbb
adc
adc
sti
or
mov
push
in
aam
push
lds
inc
call
and
lea
imul
in
pop
cltd
push
daa
cmpsl
xor
xor
mov
ja
add
push
mov
cld
movb
pop
mov
ret
jmp
push
sub
sub
in
or
outsb
mov
stc
shlb
xchg
pop
in
xor
inc
xchg
daa
adc
adc
xchg
mov
popa
lret
stos
add
or
mov
mull
add
mov
ja
sbb
mov
imul
repz
test
jno
jmp
lahf
test
mov
mov
enter
mov
addr16
dec
xor
inc
xchg
jns
mov
xchg
push
xchg
stc
or
adc
adc
cmpsl
xor
xor
addr16
mov
mov
cltd
int
inc
lret
xchg
dec
push
int
or
and
stos
in
mov
mov
sbb
inc
les
pop
push
jl
mov
sarb
inc
mull
mov
mov
or
stos
mov
dec
pusha
mov
inc
daa
cmc
or
mov
cltd
cmpsb
cmp
adc
jl
imulb
or
cmp
push
xlat
lock
push
cwtl
adc
test
adcb
sub
inc
in
sbb
dec
pop
bnd
call
and
pop
btc
icebp
push
mov
xchg
jp
jbe
frstor
cmp
ret
pop
mov
push
rcrb
lods
int3
sbb
ret
ljmp
es
adc
mov
scas
mov
inc
idivl
mov
adcl
pusha
inc
jp
xor
mov
fucomi
cmp
sub
xor
call
popa
ljmp
aaa
popa
lock
lds
jae
out
jmp
cmpsb
and
mov
icebp
jle
dec
or
icebp
arpl
mov
push
dec
pop
adc
imulb
std
lock
imul
mov
test
xor
nop
daa
cld
mov
mov
mov
addr16
cmp
add
xor
jge
cmp
in
pop
mov
loopne
mov
insl
stos
mov
jns
inc
dec
mov
dec
inc
sarb
mov
rorb
xchg
int3
mov
mov
int3
pop
jp
movsb
jecxz
repnz
mov
push
mov
inc
mov
xchg
inc
add
and
cld
aam
push
or
fimuls
inc
pop
lods
or
fldenv
jb
movsl
cltd
mov
sarl
aaa
ljmp
sub
mov
enter
sbb
cli
and
scas
sbb
xor
add
jo,pn
mov
sti
dec
or
movsb
loopne
inc
leave
std
fadds
add
inc
stos
cwtl
scas
mov
sahf
scas
imul
dec
test
lahf
xlat
pop
stos
xchg
push
push
xor
sub
jmp
sub
cli
stc
jo
loop
pop
loopne
or
adc
add
pop
cli
sbbb
mov
out
movsb
or
lret
test
add
xor
jmp
fwait
and
popf
pop
sub
cwtl
cmpsl
lods
adc
jp
pop
call
daa
cmpsb
fdiv
icebp
push
push
jp
cmp
mov
inc
test
add
push
xchg
fcompl
cmp
or
sbb
pop
les
jae
mov
and
mov
mov
mov
scas
pop
inc
movsb
je
js
daa
push
sbb
mov
fs
inc
mov
ret
outsb
pop
imul
sub
or
rclb
xchg
std
lcall
std
or
clc
fldl
sub
cltd
pop
and
aas
dec
dec
sub
divb
jo
psubsw
arpl
pop
leave
andl
loope
sub
pop
and
cli
sub
sarl
loope
pop
jl
ret
mov
mov
lahf
das
sub
in
das
xor
in
xor
incl
mov
cmpsb
arpl
call
adc
xchg
lea
add
or
adc
mov
test
push
add
jmp
inc
arpl
mov
fidivrs
sahf
push
lods
mov
push
sahf
mov
pop
fsubrs
loope
or
or
insl
std
ss
cmp
and
lret
ret
mov
pop
push
adcb
stos
outsl
int3
test
push
pop
aas
mov
out
or
ficomps
xor
inc
sbb
push
or
mov
pop
pop
mov
inc
jno
sub
js
je
nop
shll
inc
push
and
push
dec
in
ret
or
in
stos
lret
rcrl
jmp
push
ljmp
sbb
test
jb
adc
fadds
mulb
dec
stc
popf
or
lahf
into
es
add
cmpsl
add
loope
jno
push
mov
push
roll
sub
add
in
js
and
cmpsl
pusha
pop
mov
push
popa
negl
mov
push
cmp
inc
mov
lea
stos
lds
sub
adc
shrb
ja
push
sbb
xchg
mov
in
mov
call
dec
or
iret
hlt
pop
int3
cmc
sbb
idivl
mov
sub
call
mov
ss
or
data16
repnz
dec
mov
notb
mul
jp
dec
pop
xor
jmp
pop
dec
das
call
fimuls
pusha
dec
stos
push
xor
mov
xchg
push
shll
mov
test
sub
scas
sub
xchg
and
pop
inc
out
popf
pop
jns
jb
repnz
sub
fisubrs
push
lea
decb
and
cmpsl
fnstenv
es
jge
call
ss
jb
mov
add
mov
int
cld
inc
xor
xchg
sbb
fwait
sub
insb
or
mov
sub
xchg
rclb
push
pop
mov
inc
dec
push
inc
jbe
incl
adc
sub
dec
test
and
inc
cmp
push
mov
jge
sub
mov
adc
rclb
mov
ja
insb
ds
pop
pop
xor
out
jne
adc
fwait
subb
clc
sti
test
push
sub
mov
cld
push
push
dec
cmp
pop
push
testb
daa
dec
jp
divb
and
cmp
sarb
cmpsb
imul
xchg
pop
mov
dec
pusha
aas
sti
inc
inc
out
mov
jno
bound
out
mov
fstl
and
push
jne
pop
pop
mov
mov
repnz
inc
daa
in
jb
clc
lret
push
cli
movsl
mov
movb
out
fistpll
inc
add
popf
sbb
jmp
and
xor
adc
ss
pop
mov
xchg
push
cmp
cmc
lahf
aaa
mov
inc
fldl
ds
notb
push
cmpb
mov
cwtl
scas
xchg
xor
add
fisttpl
pop
je
test
scas
inc
lods
adc
cltd
int3
lahf
ret
inc
repz
cli
insl
jnp
pop
inc
lods
dec
in
popf
adc
in
xor
mov
mov
out
test
or
insl
std
add
imulb
mulb
int3
xchg
push
repz
push
mov
repnz
jae
push
push
dec
mov
mov
addb
popf
adc
xchg
dec
dec
imul
xchg
ljmp
push
sub
fisubs
cmc
push
ja
fwait
cmp
lret
or
push
ljmp
jle
fwait
popf
scas
pop
xor
sbb
enter
lds
cmp
addb
push
sarb
fisttps
or
jae
jmp
or
aam
in
push
test
fucomip
imul
gs
sbb
push
repnz
pop
call
ds
adc
hlt
fdivl
rolb
call
aad
xor
push
xorb
mov
outsl
add
lahf
lcall
sub
mov
test
cld
lods
push
inc
jmp
pop
movb
inc
cmp
stc
daa
pmaddwd
mov
das
add
je
push
jg
mov
xchg
sub
xor
in
jmp
jg
mov
lods
cmc
ret
adc
mov
push
jmp
pop
or
mov
cmpl
clc
int
jae
xchg
lea
sub
xorb
lret
inc
call
add
loopne
inc
or
popa
scas
das
jbe
inc
xor
jmp
ljmp
sub
fistl
call
xchg
fucomi
xchg
and
or
push
mov
push
or
in
add
arpl
ror
pop
ljmp
and
mov
pop
arpl
out
movsb
jp
sbb
sub
mov
dec
and
xchg
int3
mov
out
sub
push
xor
add
push
movsl
int3
out
js
sbb
jo
repnz
jmp
lahf
call
jl
mov
movl
ds
xchg
fdivrs
ja
test
in
bound
subb
cmp
push
nop
push
negb
faddl
aad
repz
add
call
call
pusha
and
scas
and
pop
test
movsl
add
jg
push
dec
push
adc
cmpb
adc
mov
sub
aam
adc
push
xchg
in
or
test
jge
and
jnp
rcl
or
pusha
rolb
xchg
sbb
pusha
sar
into
and
cltd
es
mov
std
stc
mov
lods
push
daa
lret
rorb
jo
add
in
enter
or
cli
adc
pop
pop
sbb
jge
xchg
jne
adc
in
fwait
call
xor
pop
insl
sub
ja
mov
orb
cmpsl
insb
enter
xlat
mov
mov
das
je
and
inc
mov
sbb
ljmp
xchg
into
loop
sbb
add
dec
dec
add
sub
xlat
cmc
test
jmp
clc
adc
add
les
sub
movsl
adc
xor
cld
pop
fxch
das
jge
push
xchg
jmp
outsb
mov
js
add
popf
rorb
and
ret
or
and
ljmp
add
pminub
fdivp
mov
mov
push
and
in
xor
xchg
sub
mov
out
dec
sbb
mov
pop
pop
lret
jg
lock
mov
xchg
xlat
sbbb
int
sub
out
xlat
mov
pop
jne
std
sub
adc
xchg
add
ret
inc
fcompl
push
cmp
daa
inc
fcmovnbe
push
call
inc
sbbb
jo
mov
jge
popf
xor
rcrb
pop
cmc
pop
or
scas
sbb
sbb
or
xor
push
leave
or
push
jae
push
bound
mov
outsb
jb
idivb
and
inc
push
or
mov
mov
cmp
imul
mov
lcall
lcall
sahf
fbld
fldcw
mov
or
add
leave
adc
mov
lahf
adc
sbb
sbb
fsubrl
test
or
pop
pop
cmc
cmp
mov
dec
and
xorb
mov
pop
popf
stc
dec
inc
mov
jmp
sbb
popa
inc
fsubl
mov
inc
mov
sbb
pop
jo
insl
mov
cmp
dec
cmp
or
inc
push
in
in
xchg
cmpsl
les
js
cli
dec
aas
and
adc
jg
cld
pop
sub
adc
enter
hlt
add
fisttpll
mov
lret
jg
call
jg
mov
mov
mov
adc
xor
addb
imul
pop
sbb
adc
aad
push
clc
xchg
sub
leave
cmpsl
jmp
in
mov
adc
add
bound
and
or
or
fs
or
loope
scas
mov
jle
shr
shll
divb
sbb
xchg
cwtl
mov
orl
testb
hlt
jne
roll
call
aaa
add
notb
mov
cmc
or
pop
cwtl
outsb
jae
push
mov
out
outsb
movsl
pop
inc
xchg
push
test
int3
mov
stos
int3
cmpsb
jmp
lret
adc
xor
or
mov
aaa
and
sub
xorb
xchg
incb
cmp
int3
daa
xchg
mov
rolb
and
or
add
mov
jbe
or
cmc
add
pop
adc
ret
sub
fcmovb
or
mov
push
mov
jmp
out
or
movl
inc
jmp
aaa
dec
xchg
int3
test
xor
out
and
mov
xchg
pop
xchg
jmp
mov
push
gs
es
jbe
or
mov
or
jle
fs
sub
push
pop
jge
sti
lret
fsubs
lret
and
dec
clc
das
pop
cwtl
xor
jae
sbb
rolb
add
jns
mov
xchg
mov
int
das
inc
xchg
or
jb
jl
add
rcr
lret
out
ljmp
jo
sahf
and
aas
sarl
and
or
xchg
or
out
cli
das
dec
scas
mov
addb
out
mul
pop
stos
or
push
mov
ret
ljmp
xor
test
cmpsl
lret
xchg
sub
mov
and
cmc
jo
cmp
jnp
xchg
in
xchg
andl
pop
in
pop
out
sti
mov
pop
xor
mov
sub
es
shl
xchg
sbb
loop
or
arpl
popf
mov
xor
rcrb
repz
dec
aas
mov
aaa
mov
idivb
sub
lret
dec
mov
pop
aas
es
pushf
icebp
fs
fdivrs
in
xor
mov
xchg
loop
add
push
sbb
scas
fisttpl
push
scas
xor
xchg
je
std
push
insb
pop
mov
rolb
xchg
bound
mov
icebp
add
xor
in
rorb
imul
mov
pop
inc
gs
xchg
je
mov
sarb
and
xor
mov
xorl
inc
in
and
fisttpll
bnd
jmp
xor
stos
jb
mov
pop
into
push
fisubrs
loope
sbb
int3
push
add
xchg
pop
loope
jg
sbb
jbe
push
lods
nop
mov
mov
push
icebp
or
andl
clc
dec
mov
lret
add
or
inc
push
ljmp
andb
test
jb
dec
jne
mov
jmp
mov
rcrl
xor
int3
out
lods
lds
enter
pop
into
inc
fldl
sbb
outsb
mov
adc
incl
xor
jmp
ds
cwtl
ds
pop
sahf
ds
lods
push
cltd
iret
lods
sbb
pop
adc
mov
cmc
inc
push
cmp
adc
or
push
ja
scas
sub
call
push
jmp
mov
mov
fs
and
pop
idivb
adcb
add
mov
xor
fistps
and
jno
inc
lahf
cmp
adc
mov
jbe
imul
mov
fsubl
mov
xchg
insb
cmpsb
bnd
pusha
pop
push
pop
in
scas
and
inc
in
jbe
cmp
lcall
mov
test
adcb
cli
adc
inc
das
aad
and
sbb
ja
inc
mov
cwtl
lret
mov
or
and
jb
or
shlb
mov
sbbl
pop
call
hlt
and
mov
hlt
xchg
fs
mov
cli
sbb
dec
out
stos
clc
or
cmp
or
sti
ja
jmp
push
mov
fsubrs
jmp
ja
insb
repz
mov
inc
insb
mov
push
ljmp
xchg
jecxz
adc
push
dec
mov
pop
movsl
xor
push
pop
ret
sbb
ret
imul
or
adcb
movsb
std
jae
mov
pop
and
or
mov
xor
rorb
nop
dec
call
jnp
dec
leave
inc
imul
push
incl
add
mov
std
push
icebp
icebp
cwtl
fdivrs
xchg
add
adc
pushf
or
dec
ljmp
mov
cld
adc
dec
je
sahf
mov
cmpsl
repnz
pop
mov
sbb
xor
sbbl
jb
call
jmp
mov
lods
cli
cs
add
lahf
push
das
push
fdiv
imul
push
fsts
aas
dec
mov
mov
es
stc
adc
dec
xlat
mov
push
mov
test
cli
add
mov
jno
mov
inc
jbe
or
hlt
cmp
popa
lods
xchg
sub
jb
push
or
call
mov
rep
insl
mov
push
pop
xchg
std
cld
imul
adc
adc
pop
cmp
out
inc
pop
out
andb
xor
mov
sbb
daa
mov
inc
fwait
das
fldenv
sub
dec
push
punpckhbw
ja
pop
cmp
push
fldcw
sub
jmp
and
xchg
ss
sub
sahf
loopne
jae
dec
adc
inc
pop
push
dec
call
mov
add
xlat
fcmove
pusha
insl
inc
cmp
cs
cmpl
xchg
push
fsts
movsb
test
or
sahf
mov
rcrl
sbb
aas
and
pop
xchg
or
mov
jecxz
out
mov
fwait
xor
push
dec
jmp
adc
adc
sahf
nop
decb
das
jb
xchg
jnp
jge,pn
inc
adc
stos
add
jmp
lret
ret
mov
jge
test
lret
lock
jae
jo
stc
test
in
jmp
add
ja
mov
pop
inc
sti
arpl
pop
movzwl
mov
loope
jmp
inc
jns
int
fisubrs
sti
mov
ret
and
xchg
inc
aas
push
ds
jmp
or
inc
negb
adc
xchg
ffree
repnz
or
and
les
add
ds
push
rolb
or
adc
int
push
fyl2x
or
jnp
loop
inc
mov
add
call
fwait
cmp
push
sbbl
xchg
hlt
or
jge
repz
clc
sbb
sub
js
jp
cs
mov
in
push
push
inc
loopne
lds
push
dec
ss
imul
mov
les
adc
sub
cmpb
mov
aam
ljmp
bound
nop
xchg
xor
mov
xchg
jno
fldenv
pop
aam
xor
mov
xchg
xor
lret
movsl
stos
imul
mov
call
les
stos
popa
int3
outsl
inc
or
xchg
mov
jg
pop
jo
testb
mov
dec
push
inc
xor
fimull
mov
xchg
js
sub
ja
pop
mov
jl
les
ds
lcall
lahf
hlt
loopne
mov
shll
arpl
inc
inc
or
pusha
rcrb
mov
js
not
out
sahf
mov
dec
mov
das
sub
adc
and
add
mov
es
call
in
dec
xor
jns
fistl
sahf
daa
xor
loop
repz
in
insb
repz
push
std
fisttpll
call
sbb
cmpsb
cltd
hlt
addr16
pop
fs
je
testl
mov
ret
notl
jb
flds
lock
dec
jp
cmp
aaa
pop
pop
jmp
notb
lock
ficoms
std
mov
dec
mov
cwtl
cli
push
aad
mov
repnz
sub
lret
pop
and
xchg
clc
xor
inc
cmpsl
add
jmp
mov
add
mov
push
push
jmp
jmp
push
push
out
ret
jb
int3
out
stos
call
test
inc
ja
xor
mov
and
cli
sbb
xchg
aad
icebp
popf
outsb
cli
xor
aas
push
or
cmp
ja
int3
push
lret
xchg
aam
xor
jp
std
mov
dec
dec
push
xor
jmp
jo
arpl
or
cmc
jp
cmp
shll
das
sbb
xchg
lret
jmp
or
add
mov
out
hlt
arpl
imul
iret
inc
mov
lcall
lret
cmp
mov
pusha
popf
push
mov
clc
pop
adc
psubw
loope
mov
jnp
add
sub
orb
xor
decl
dec
jle
sbb
sub
sbb
dec
imul
repz
loope
cmp
inc
xlat
add
dec
or
mov
push
cmp
fldcw
sbb
daa
adc
and
xchg
sub
inc
pop
jecxz
lahf
dec
lods
lcall
cmp
push
mov
and
push
adc
cmc
xor
mov
pushf
dec
inc
lcall
cwtl
jb
jne
dec
xchg
push
mov
cmp
mov
dec
push
sti
andl
loop
cwtl
mov
pop
and
jmp
push
mov
or
xchg
mov
xchg
data16
lds
outsl
pushf
aad
inc
or
and
call
loop
mov
divl
push
cmp
adcl
dec
fdivrl
ljmp
lret
ja
dec
mov
cwtl
mov
pop
pushf
nopl
cltd
xor
mov
push
and
jno
repnz
jns
call
mov
imul
sbb
pop
cmp
into
and
add
xchg
sbbb
mov
out
das
jmp
adcb
out
aam
xor
leave
and
in
mov
mov
dec
pop
clc
aam
call
push
lods
rcl
lret
pop
nop
lds
xchg
and
cmp
mov
and
imul
mov
fnstcw
add
lock
stos
xlat
jmp
mov
inc
inc
fwait
stos
sub
stos
dec
add
fistps
xchg
fidivrs
or
bound
pop
lcall
popa
push
add
jmp
cld
xchg
std
insb
outsl
das
push
xchg
pop
in
jl
call
cmpsl
out
xor
jmp
xor
push
add
jmp
testl
pop
mov
stos
add
mov
dec
adc
xor
or
mov
in
mov
add
xor
mov
jbe
scas
adcb
insl
repz
mov
mov
inc
pop
xchg
add
jmp
inc
repz
repnz
imul
mov
in
mov
push
jmp
outsb
or
sub
fcoms
faddl
jns
lahf
pop
cmp
scas
adc
mov
dec
lea
xchg
hlt
mov
ret
int3
je
jb
push
sbb
mov
repnz
add
push
int3
subb
adcb
jge
cmpsb
lds
sub
jp
push
xor
je
ret
cmp
test
cmp
repnz
cltd
idivl
fnsave
das
notrack
shll
or
or
jo
push
mov
adc
loop
movsl
inc
negl
mov
mov
test
jns
xchg
int
sub
inc
dec
push
dec
fmull
sar
es
add
mov
fs
mov
mov
jge
daa
adc
popa
arpl
sbb
jbe
mov
daa
pusha
pop
jmp
mov
call
xor
mov
ss
push
in
rcll
and
pop
xchg
push
mov
mov
mov
dec
dec
mov
and
xchg
mov
jb
jmp
out
cwtl
sahf
inc
sub
lock
jmp
leave
sub
cmpsl
sub
push
test
lea
cmp
aaa
or
jl
mov
adc
lea
mov
pop
mov
lea
jo
adc
inc
jp
lret
daa
cmp
call
mov
adc
add
mov
cld
dec
dec
mov
adc
xchg
pusha
jmp
orb
mov
dec
mov
out
jle
inc
xchg
and
sbb
dec
cmc
jecxz
add
jl
mov
sub
test
lret
sub
mov
push
dec
mov
or
jno
adc
jmp
ljmp
add
add
xchg
jmp
out
repz
movsl
push
sarb
lahf
js
and
loop
lea
repz
fmull
pop
hlt
lcall
lahf
add
mov
enter
insl
sti
push
add
jmp
xor
loopne
and
sub
push
aaa
call
inc
mov
jns
dec
mov
xchg
cmp
adc
std
in
adc
das
leave
cli
out
loop
inc
pcmpgtb
imul
add
andb
lret
pop
mov
sub
div
xor
mov
int
pop
adcl
mov
call
inc
bound
lahf
rcrb
lcall
in
sub
andb
outsb
push
cmc
mov
push
les
cmc
ja
and
mov
dec
outsl
int
or
jge
cmp
cmp
pop
mov
pushf
dec
jg
and
adc
and
mov
jnp
and
aam
insb
and
gs
fisttpl
movsl
xchg
push
out
mov
jmp
jbe
cmc
dec
leave
inc
pop
jge
jmp
sbb
xchg
cmpsl
adc
pop
pop
add
in
sbb
inc
inc
jmp
inc
mov
testb
inc
xchg
mov
pushf
or
call
cmc
pop
cld
cld
jmp
xor
jp
mov
add
shrl
inc
clc
lea
orb
and
dec
cmpsb
cli
les
mov
xor
push
adc
inc
je
sbb
fcmove
push
push
rcll
sbb
xorl
mov
loope
and
xchg
addr16
mov
or
add
jno
stos
mov
les
push
push
xchg
pop
loop
mov
in
xadd
pop
repnz
sub
movsb
and
fidivl
ret
and
dec
dec
and
mov
adc
sti
roll
cmpb
and
repnz
mov
lret
pop
mov
fisttpl
shll
sub
dec
sub
ret
push
cmp
and
fs
shrl
out
and
pop
daa
mov
xchg
sbb
add
mov
les
pop
lret
fcomp
adc
xchg
mov
out
rorb
clc
mov
fwait
js
add
shl
mov
push
pop
ja
pop
add
mov
fdivrp
inc
inc
aas
or
dec
lahf
fadd
rclb
cmp
repnz
mov
mov
test
stos
mov
testl
mov
scas
or
xor
jmp
mov
sub
xor
inc
aam
js
repz
lret
icebp
cwtl
inc
cmp
dec
call
and
shlb
push
pop
stc
hlt
out
and
ret
mov
xor
sbb
stos
cli
pop
daa
lahf
mov
sub
xchg
fsubrs
sidtl
jmp
xchg
leave
mov
jp
hlt
cmpsb
add
iret
into
mov
cmc
cltd
pop
repnz
das
cmp
or
xor
hlt
popf
push
and
or
ret
push
int3
dec
ret
lahf
lock
fs
jmp
jo
ret
enter
inc
xchg
jb
stos
mov
adc
xchg
sbb
cmp
push
mov
sub
inc
cmc
jno
inc
dec
inc
xor
leave
imul
mov
dec
dec
or
cmp
adc
hlt
or
jbe
lea
mov
scas
jno
mov
loop
add
mov
add
rcrl
fld1
int
ja
pop
in
dec
cmp
mov
or
cmp
insl
andb
rorl
lcall
fs
or
fstp
call
lahf
mov
enter
rcrb
jl
imul
sahf
popf
jmp
in
cmp
dec
cli
xor
fwait
call
mov
inc
insl
cwtl
mov
sbb
stos
call
dec
xor
rorl
inc
scas
dec
add
insl
mov
sbb
or
xchg
cmp
sahf
inc
add
negl
mov
push
repz
pop
push
nop
cmp
dec
push
filds
add
lds
lods
inc
sbb
enter
ds
add
scas
push
adc
das
sub
mov
adc
sbb
jae
fdivrl
or
dec
push
pop
dec
mov
mov
push
wbinvd
jo
jge
pop
inc
out
xor
sub
insl
call
push
popf
jmp
push
inc
call
mov
add
adc
lret
or
push
inc
mov
pop
jo
daa
lea
xor
clc
jo
sahf
sbb
lock
scas
test
popf
push
jns
pop
jp
iret
clc
sarl
or
out
in
sbb
imul
jne
add
mov
into
push
pop
popa
xchg
popf
outsb
ljmp
cmp
mov
test
inc
or
mov
test
xchg
cs
icebp
out
mov
xor
sub
inc
cmp
fisttpll
or
mov
push
sub
sub
addr16
icebp
orl
ja
cmp
xor
sub
xchg
jg
mov
jg
dec
add
sbb
mov
mov
mov
add
jno
or
sarl
push
cmp
lahf
mov
pusha
in
lock
jge
cld
lods
cli
leave
inc
push
mov
popa
loope
sub
aaa
jecxz
aaa
xorl
sub
jecxz
dec
and
cmpsl
jmp
mov
loop
inc
jb
dec
loope
inc
sub
mov
testl
or
jmp
shrb
sbb
push
jl
sbb
imul
cmp
bnd
jae
imulb
lcall
dec
lahf
adc
shl
mov
mov
movsl
push
cmp
push
movsb
xchg
and
jp
inc
imul
mov
lds
dec
sub
inc
add
or
inc
cmp
xchg
add
add
ret
mov
ss
hlt
retw
filds
sti
inc
mov
pop
adc
fs
or
mov
push
fucomp
cmp
adc
fucom
repz
call
test
leave
xor
movsl
popa
pop
es
lds
fabs
or
dec
sbb
insb
and
mov
lock
cmp
flds
fs
lahf
sub
xchg
sub
add
pop
jmp
pop
jl
jg
xchg
mov
jb
or
sub
or
lods
cmp
jmp
mov
inc
inc
arpl
push
or
mov
inc
jno
out
push
idivl
negb
cmpsb
adc
push
nop
int3
cvtdq2pd
lret
ret
jl
dec
mov
and
push
sbb
mov
sar
sub
or
aaa
notb
cli
cld
insb
mov
std
jb
stos
rcl
sbb
and
ret
shrl
jp
out
sarl
out
mov
cmp
push
stos
call
mov
daa
pusha
xor
dec
mov
nop
pop
add
or
add
mov
mov
test
cmpsl
shrl
in
mov
out
xor
xor
lock
shll
xchg
mov
out
pcmpeqb
push
xor
repnz
out
fisubrs
mov
aam
jb
pop
test
repz
pop
out
fcoml
mov
sub
ja
adc
js
or
lock
push
inc
call
loop
nop
test
sub
sarb
or
mov
cs
ss
mov
das
nop
jmp
dec
jg
mov
addr16
mov
rcll
sbb
cmc
cmp
call
pop
dec
dec
and
add
adc
mov
mov
sub
or
mov
or
mov
sub
flds
shr
ret
cli
xchg
arpl
add
mov
jmp
clc
cwtl
ret
pop
scas
and
add
xor
inc
icebp
inc
dec
test
mov
popa
rorl
mov
fbstp
int
inc
ret
or
add
test
das
cwtl
mov
pusha
cmp
sub
fcomp
icebp
dec
sti
xchg
push
dec
adc
int3
clc
mov
mov
or
dec
es
aam
pop
outsl
add
and
or
xchg
bound
or
imul
and
shll
cwtl
into
mov
icebp
inc
push
cmc
sub
sbb
sub
inc
pop
std
mov
mov
pop
ja
add
xchg
stos
movb
test
cmp
cwtl
fcmovnbe
scas
inc
and
lea
mov
mov
aad
push
fstl
mov
bound
or
add
pusha
push
mov
fisttps
sub
mov
sahf
jb
fisttpl
push
or
outsb
mov
dec
ss
insb
jge
arpl
lods
ja
inc
repz
jg
jmp
sahf
repnz
push
or
push
cltd
push
adc
hlt
pop
mov
icebp
lea
jmp
jp
test
das
movsb
imul
adc
fwait
mov
xor
mov
popf
fs
je
jnp
xchg
div
fcmovnbe
shrb
push
mov
mov
iret
xchg
inc
adc
cmp
faddl
jge
adc
js
mov
mov
dec
aad
std
les
sbb
add
push
add
fsub
mov
in
shlb
mov
mov
dec
repnz
mov
imul
sub
hlt
cld
mov
xor
adc
into
add
ds
rclb
sub
inc
and
cmp
pop
dec
sbb
xor
xchg
ret
bound
aad
sbb
mov
adcb
adc
jmp
mov
dec
in
adc
inc
cld
leave
sbb
dec
sbb
pop
push
ds
pop
mov
sahf
clc
addl
push
sub
adc
or
jecxz
inc
mov
mov
xchg
cld
inc
push
ja
pop
addr16
out
push
jo
push
adc
jg
dec
outsb
call
jo
mov
les
aaa
ss
cmpsb
mov
and
inc
sbb
or
or
push
xor
or
cmp
dec
jge
dec
sub
push
adc
add
into
ljmp
fdivrl
dec
out
push
in
or
jnp
aaa
lock
ret
imul
pop
movsl
pop
adc
pop
adc
pop
xor
inc
jmp
push
xchg
dec
pusha
or
push
xchg
jnp
and
xchg
push
div
adc
sub
cmp
out
clc
call
add
ljmp
fmul
aad
mov
sub
mov
push
aad
sub
xchg
pop
ljmp
je
sbbb
stos
mov
add
jmp
push
mov
scas
shrb
pop
loop
mov
cltd
mov
cwtl
test
add
pop
mov
push
xor
push
xor
xor
add
nop
or
or
arpl
or
add
jns
loope
std
ret
in
mov
inc
insb
push
call
loop
lds
sub
push
les
cltd
and
push
xchg
repnz
or
pop
xchg
jae
inc
je
mov
ja
and
sti
ds
in
inc
cltd
pop
xor
push
insl
push
jno
pushf
dec
dec
hlt
cmp
jl
mov
sbb
push
idivb
out
push
int3
mov
sar
jo
sarb
call
dec
dec
inc
sub
shrb
inc
aad
sub
push
sub
dec
mov
ret
mov
orb
xchg
negl
idivl
arpl
push
push
mov
addl
ljmp
call
jle
in
dec
add
sub
xor
add
jmp
call
mov
sub
push
pop
fsubr
jno
push
sbb
adc
add
out
adc
pop
mov
out
les
jo
jmp
pusha
sub
jecxz
xor
mov
stos
or
xorb
xchg
xor
dec
pop
xchg
mov
pusha
adc
xchg
mov
pop
push
push
sub
daa
sbb
cld
mov
cmp
mov
or
push
inc
in
outsl
add
xchg
cmp
dec
push
dec
cwtl
cli
mov
rorb
jmp
push
scas
mov
loope
sbb
mov
int
out
idivb
pop
insb
jmp
or
daa
push
sbb
sub
xor
push
imul
pop
sub
data16
add
imul
sbb
cli
mov
ret
add
xchg
dec
mov
push
lock
stos
dec
or
cmpsl
movsl
imul
dec
or
pop
fisubrs
cs
cld
xor
das
sbbl
lds
push
cmpsb
mov
adc
je
jmp
sub
xlat
xor
push
psadbw
dec
add
mov
sub
pushf
mov
cs
or
xchg
and
or
cltd
and
lock
xor
mov
mov
rcll
nop
stc
push
or
mov
repz
mov
sbb
add
out
and
lods
mov
xchg
adc
fisubs
xchg
and
pop
push
add
sti
stos
push
mov
pop
lahf
cld
mov
jae
push
jmp
test
shlb
dec
iret
cld
dec
push
jg
jge
gs
fcmove
sub
or
mov
dec
jno
and
jno
subb
pop
sub
ficompl
or
push
sbb
ss
mov
dec
push
jae
andb
push
mov
stos
repz
adc
daa
jecxz
addb
dec
mov
ficoml
rep
adc
inc
jmp
aas
nop
out
into
xchg
int
mov
sbb
push
mov
dec
sbb
or
xlat
das
sub
jnp
push
add
pusha
cmp
adc
add
adc
rcrb
or
test
cmpsb
in
pop
aad
and
cmp
leave
call
mov
or
outsl
fcoms
inc
test
in
xchg
adc
das
and
std
xchg
ret
add
cmp
mov
push
test
xchg
into
push
xor
sbb
lahf
pusha
inc
and
push
movsl
sbb
xchg
mov
mov
fs
mov
adc
jmp
add
pop
jne
mov
cmc
in
adc
lahf
add
fldcw
dec
cmpsb
jl
call
inc
dec
push
jl
push
pop
hlt
dec
into
dec
push
jno
fsubrl
pop
xchg
pop
call
inc
mov
mov
mov
js
call
dec
push
jmp
mov
or
sbb
repz
add
sub
xchg
shlb
mov
xchg
lahf
xlat
cwtl
shlb
mov
cli
ja
dec
lds
stc
clc
pusha
orb
xchg
pop
xor
scas
in
pop
sbb
mov
mov
cmpsb
xor
jmp
xor
sbb
mov
xchg
pop
push
push
mov
int
das
sub
loop
std
fsubrl
icebp
dec
and
jmp
subb
fidivs
jns
xchg
mov
mov
or
pop
roll
cmp
fidivl
fs
xorb
lret
out
icebp
jmp
or
add
fidivs
daa
or
fildll
push
popf
cmp
pop
mov
repz
fstps
push
add
rorl
inc
xor
jle
cltd
and
subb
cmp
data16
pop
movsb
jcxz
and
jge
sub
mov
xchg
stos
jo
mov
push
inc
into
vmovmskps
mov
push
stc
fildl
pop
adcb
add
js
pop
pop
push
dec
push
push
outsl
jmp
mov
js
in
mov
int3
pop
aam
and
js
clc
pusha
xlat
cmpsb
movsb
stc
pop
sarl
dec
icebp
mov
xchg
jmp
imul
adc
ss
mov
lret
lret
lcall
or
dec
add
inc
ja
outsb
jmp
sarl
out
out
test
data16
das
das
pop
popf
ret
ficoml
add
push
cmp
sbb
xor
jp
je
imul
push
lock
xchg
mov
push
push
xor
mov
es
enter
push
add
andb
mov
jbe
cld
lea
ror
push
or
xchg
xor
movsl
mov
jne
or
mov
or
ret
les
or
jp
ljmp
cmc
jb
push
fwait
xchg
cmp
sub
subb
cmp
push
cmpsb
lock
push
fs
daa
push
sub
sbb
in
leave
mov
fdivrl
stos
mov
cli
inc
mov
xchg
mov
cmp
cmp
jge
insb
js
jle
clc
std
push
pop
cs
push
push
push
loop
test
dec
xor
cmpb
jmp
mov
fst
push
mov
jmp
xchg
fadds
lods
imulb
clc
out
xorl
adc
xor
hlt
jo
lds
mov
cmp
pop
push
pop
movsb
dec
cmc
and
dec
aad
pop
dec
sbb
dec
push
pop
hlt
inc
jmp
in
dec
inc
mov
movsl
xor
dec
fsubrp
sub
cmp
cmp
enter
xchg
loop
fucomp
out
mov
mov
jecxz
negl
in
das
sbb
ja
jno
test
or
dec
outsl
pop
mov
push
or
stc
mov
sarl
dec
mov
xchg
sub
pop
dec
out
mov
decb
sbb
sub
dec
int3
jno
jg
xchg
dec
and
jp
ss
cltd
leave
in
js
jecxz
push
sbb
sub
imul
push
call
bound
pop
insb
inc
mov
std
push
ljmp
inc
std
outsb
mov
addr16
jmp
xchg
leave
cmpsl
pusha
ret
loop
dec
push
pop
jmp
mov
inc
inc
sbb
push
mov
sbb
or
bound
or
mov
repz
xchg
loop
cs
pop
mov
pop
inc
ljmp
imul
adc
xchg
mov
cld
pop
adc
pop
mov
cwtl
add
test
popl
or
xchg
repnz
in
andnps
xchg
xor
lcall
mov
mov
ss
std
pop
push
push
in
out
push
int3
xchg
cltd
call
cmpsb
mov
mov
enter
add
sti
xor
lahf
dec
inc
enter
pop
pop
inc
mov
cwtl
test
mov
mov
aaa
xor
ja
pop
hlt
jno
out
cmp
int
inc
or
sub
dec
shll
subb
mov
pop
jecxz
fldenv
sub
mov
out
push
fs
incl
jbe
fisttps
mov
xor
in
and
push
daa
mov
or
inc
ror
mov
pop
add
jbe
mov
mov
xchg
add
pop
loope
cltd
out
mov
jp
push
cmpsl
ret
fbld
mov
jns
repnz
lock
xor
repnz
push
std
in
jecxz
lret
lret
or
test
adc
rcrl
pop
lods
stos
inc
mov
lahf
jl
call
xorl
inc
xchg
jbe
sbbb
nop
xlat
or
icebp
sbb
and
sahf
and
in
push
push
or
mov
adc
inc
or
cmpsb
out
lahf
jle
cmovno
or
enter
push
sti
and
sbb
jl
pop
mov
mov
arpl
xchg
daa
cli
das
jnp
xchg
jnp
cmpsl
fldl
inc
xchg
xchg
loopne
pop
call
or
sti
sub
jo
dec
xor
mov
mov
adcb
mov
adc
mov
cmp
pop
dec
jns
outsb
lret
cltd
loope
pop
mov
pop
jns
or
mov
arpl
jge
cld
jo
push
mov
sbbl
dec
add
sub
jp
andb
add
xchg
add
in
xchg
mov
jnp
dec
into
pop
sti
lahf
stos
sahf
popa
mov
or
mov
shlb
dec
jp
testb
fsubs
xorb
add
ljmp
in
push
movsl
push
add
jb
jae
fcomp
aaa
mov
fistl
mov
adc
cwtl
push
in
adcl
pop
or
pop
xorb
pop
fbstp
test
jb
jmp
jo
or
cmovnp
xchg
je
inc
add
aad
inc
mov
lea
fdivrp
in
pop
xchg
dec
xchg
lret
xchg
xchg
xchg
dec
ret
dec
bound
pop
enter
aas
dec
inc
cmpsb
jbe
sbb
dec
mov
dec
sub
dec
jae
lods
mov
lea
call
pop
jmp
dec
mov
je
mov
dec
mov
sahf
mov
fsubrl
and
add
adc
pop
or
jecxz
cltd
push
rolb
ret
inc
and
ljmp
xchg
shll
imul
mov
inc
inc
cmp
rcr
cmp
push
pushf
sub
push
jmp
jle
jmp
xor
outsb
dec
filds
mov
or
mov
mov
xchg
daa
and
hlt
push
fsubp
lods
sbb
push
popf
mov
mov
fcompl
push
test
or
popa
mov
inc
aad
and
inc
and
cmc
inc
sbb
xor
das
inc
scas
xor
ja
sub
xor
jo
or
out
leave
sub
out
dec
add
xchg
test
repnz
xchg
dec
lcall
or
jb
mov
jne
mov
cmpsb
sahf
or
roll
or
add
jg
daa
test
dec
mov
inc
inc
push
mov
and
xchg
xchg
mov
std
or
mov
decb
mov
inc
orb
fsts
std
es
cmp
mov
or
test
add
pop
mov
mov
add
push
dec
mov
cmp
jae
ja
sti
and
lret
add
aam
mov
mov
push
dec
add
hlt
adc
push
push
mov
cmp
add
or
lcall
call
icebp
add
stos
pop
jecxz
daa
pop
subb
add
cmp
sub
push
cmp
and
pop
push
lcall
sub
push
push
ds
aas
insl
jo
mov
movsl
sub
jo
xor
repz
mov
sar
inc
addl
sub
adc
outsb
je
insb
insl
je
xor
xchg
int
pop
mov
inc
insl
jno
std
pop
add
adc
inc
testl
pop
adc
adc
test
movsb
add
sbb
pop
jb
xchg
jno,pt
sbb
pop
sahf
inc
pop
stc
and
rcrl
dec
shll
xorl
cmp
mov
xor
xchg
lcall
es
sbb
fwait
sub
decb
loope
out
out
mov
xor
lahf
mov
lea
sub
enter
cwtl
mov
mov
addr16
mov
mov
movsb
pop
dec
cmpsl
cmp
test
inc
push
dec
inc
dec
imul
mov
mov
inc
jmp
shl
loopne
mov
xor
imul
dec
sub
and
ss
cmc
nop
dec
ret
push
pop
inc
xor
call
and
inc
or
sbb
movsl
ret
filds
dec
or
mov
xchg
out
or
inc
fcoms
stc
fdivrs
pushl
shll
mov
ret
imull
inc
sub
jne
leave
add
mov
adc
dec
jmp
lea
out
mov
fiadds
lcall
repz
ss
and
add
or
or
jg
out
mov
push
fimuls
cmpsb
sbb
xchg
cld
bound
pop
jo
test
and
fsts
lock
fwait
sbb
hlt
jne
adc
xchg
jl
dec
or
jg
dec
leave
daa
std
scas
adc
int
mov
in
int3
and
push
fldl2e
subb
push
lock
lods
in
xchg
mov
mov
mov
add
jno
xchg
lret
lret
loop
or
mulb
call
lret
shl
or
call
das
xchg
hlt
dec
xchg
add
cld
out
cmpsb
inc
or
mov
xchg
pop
idivb
push
divl
pop
ljmp
push
inc
pop
enter
outsb
mov
inc
mov
pop
push
pop
or
call
push
adc
add
je
fimull
add
jg
mov
dec
xchg
pop
push
repnz
hlt
pop
mov
test
adc
pop
call
xchg
push
cmpsl
and
es
adc
rcl
or
mov
mov
pop
xchg
sbb
repnz
or
mov
xchg
inc
insb
push
sbb
mov
mov
xchg
xchg
cmp
insb
cli
clc
push
mov
pop
mov
dec
loope
ss
in
movsl
sub
adc
inc
push
cmp
pop
scas
adc
adcl
ret
pop
adc
imul
push
ja
aas
mov
dec
push
test
jmp
stos
lret
cli
test
sub
push
sub
loop
cmp
cmp
fidivl
inc
pop
xor
pop
xchg
pushf
add
mov
push
lcall
sbb
push
sbb
cmp
fwait
repz
push
cmpsb
nop
popa
xchg
and
push
roll
or
xlat
inc
cwtl
leave
mulb
jge
ds
xor
add
hlt
in
sbb
lock
push
jae
xchg
push
lods
cmp
xor
fdivrs
daa
xor
loope
dec
ja
mov
push
ja
lods
xchg
icebp
ror
and
popa
sub
sub
pop
mov
mov
stos
movups
dec
push
fldenv
add
ja,pt
xchg
push
js
mov
shrb
xchg
pop
dec
ljmp
out
call
ljmp
cld
cltd
imul
ljmp
jne
ja
enter
call
call
jae
inc
sti
mov
rcl
dec
mov
xor
pop
fmul
or
inc
xlat
fs
call
sbbl
cs
cwtl
shll
les
imul
pop
addb
add
dec
imul
fsubl
dec
sub
jmp
lock
xor
mov
mov
pop
mov
jmp
mov
cmpsl
insl
xor
addb
int3
outsl
xchg
rcrl
inc
lret
xor
xor
push
subb
cli
insl
add
dec
cli
or
xorb
inc
ja
cld
sub
in
into
and
xlat
jb
jg
jnp
jmp
jno
ss
mov
sbb
int3
ja
jo
pop
sub
or
js
mov
add
js
mov
adc
nop
cmpsb
enter
mov
call
xchg
notb
pop
push
mov
sbb
xchg
sub
dec
xor
add
add
add
xor
mov
subl
or
add
cmc
call
mov
movb
dec
dec
dec
dec
rcl
ficoml
push
test
es
ret
xor
lahf
adc
mov
movsb
mov
cli
mov
cmp
pop
dec
negl
addb
jl
inc
mov
mov
mov
hlt
std
insb
insl
icebp
adc
sub
in
popf
adc
lret
inc
jg
imull
sbb
lcall
cmp
test
inc
push
xchg
dec
or
pop
movsl
rcrb
jae
minps
push
inc
mulb
mov
div
loopne
or
dec
add
inc
add
push
mov
add
push
cltd
and
sub
xchg
add
adc
sbb
dec
or
lcall
sbb
mov
decl
cmp
push
add
es
and
lds
add
int3
fsub
adcb
fs
jmp
lcall
std
sbb
test
imul
inc
stos
xchg
mov
dec
adc
lea
inc
stc
insl
xchg
out
jl
mov
clc
imul
imul
stos
mov
push
push
and
jmp
mov
mov
mov
pop
scas
xchg
out
imul
jbe
test
xchg
xchg
push
bound
inc
enter
adc
nop
shll
xor
ljmp
test
cmp
xor
idivb
mov
adc
rol
loopne
outsb
hlt
cli
jb
xchg
jg
and
popa
jmp
sahf
int3
scas
jno
ja
pop
or
push
decl
pushf
movsb
or
pop
das
sbb
push
insl
lock
push
out
dec
or
call
imul
push
inc
adc
xor
push
leave
shr
flds
push
stos
lods
sub
jbe
insb
mov
add
sbb
pop
adc
or
add
xchg
jmp
ja
movsb
mov
sub
or
mov
xchg
cmp
xchg
jno
dec
push
frstor
pusha
scas
lcall
mov
test
hlt
insb
xchg
icebp
fstpt
jne
lret
in
sbb
movsb
add
and
pop
mov
dec
shlb
sub
jno
cwtl
rolb
mov
fidivrs
sub
hlt
mov
xor
pop
push
jge
pop
jmp
add
into
shlb
sbb
xchg
mov
mov
das
vminss
xor
dec
test
jecxz
cs
repnz
cmp
bound
and
sub
or
sub
sub
pop
jmp
xchg
pop
jno
faddl
imull
mov
fnstsw
sub
insb
test
or
in
jns
lret
mov
cmc
xchg
imul
addr16
loope
inc
mov
xor
aam
pop
or
xchg
rorb
sub
xorb
movsl
push
and
loopne
mov
loope
push
cmc
out
call
je
outsb
add
cmp
iret
add
or
mov
imull
call
loope
add
jnp
pop
nop
rcll
jmp
jne
mov
inc
mov
cltd
loopne
stos
aaa
fimull
lods
pop
aad
gs
or
jp
hlt
mov
mov
mov
out
add
das
dec
xlat
xchg
push
and
pop
push
xchg
or
push
push
test
and
mov
fdivrs
adc
adc
call
dec
mov
or
or
xchg
cld
ja
adc
dec
jmp
mov
inc
inc
and
xor
mov
clc
sbb
xchg
pop
mov
or
fisttpll
xchg
sub
inc
outsb
pop
inc
jmp
mov
sbb
pop
mov
push
jb
arpl
fmulp
or
aas
xor
inc
pop
jno
hlt
xchg
mov
and
mov
arpl
jmp
mov
jp
sub
cltd
stos
sarl
adc
out
mov
cmp
loop
mov
rcll
repnz
out
dec
push
or
pusha
nop
mov
stos
jecxz
das
inc
inc
mov
mov
add
outsb
adcl
out
mulb
mov
sub
mov
add
sub
jge
jbe
rorb
shr
fldl
into
push
xchg
sbb
mov
out
mov
decl
adcl
push
mov
pop
mov
push
add
xchg
imul
and
mov
pop
movsb
xor
jns
push
out
jnp
cwtl
pop
call
mov
inc
test
push
test
push
popa
lock
adc
xchg
pop
popf
loopne
popf
dec
stc
xchg
xor
jmp
adc
rcrb
push
insb
mov
popf
jne
mov
into
add
imul
mov
push
cltd
mov
aaa
xor
inc
add
or
call
push
mov
jae
rcrb
fwait
ja
dec
js
dec
jae
xor
cmpsl
cwtl
push
sbb
dec
call
fstpt
clc
pop
and
mov
push
idiv
sbb
mov
clc
sub
in
mov
cmp
stos
sbb
nop
imul
push
es
stc
jno
cli
testl
xor
push
mov
inc
out
pop
jmp
add
or
push
pushf
hlt
cmc
das
mov
call
mov
push
add
xor
sbb
push
nop
fwait
lret
repnz
and
and
dec
js
xor
dec
lcall
adc
ljmp
sub
out
mov
and
es
adc
test
daa
ret
sbb
ljmp
jb
imul
dec
fs
call
adc
jp
pop
icebp
test
xorb
lods
push
jne
xor
test
popa
inc
repnz
pop
fwait
mov
cwtl
mov
loope
jno
movsl
add
adc
adc
add
cmpsl
sub
leave
lock
loopne
add
mov
mov
sbb
negl
dec
push
pcmpeqd
jecxz
or
pop
mov
inc
shrb
pusha
int
pop
and
adc
dec
xor
js
ret
sbb
lods
scas
cmp
repnz
xor
dec
mov
pop
mov
mov
pushf
mov
aaa
leave
out
sub
jnp
inc
push
test
ja
lea
rclb
lret
or
or
js
sarl
cmp
mov
pop
push
sbb
inc
mov
jne
mov
dec
or
pushf
pop
inc
pusha
dec
add
mov
jno
ljmp
aam
lret
and
inc
xor
fucompp
pop
rorb
adc
rcll
xor
psllw
ljmp
sub
les
mov
shll
sti
lahf
jne
and
inc
fstp
push
icebp
and
out
dec
pop
cli
xlat
loope
dec
cmc
dec
rcll
inc
repnz
sbb
addb
add
out
jbe
cmp
mov
push
mov
and
lea
pop
scas
sbb
nop
cmc
imulb
out
mov
aad
mov
push
inc
movsb
rolb
or
xlat
mov
fwait
or
cmpsl
fcomps
dec
loopne
xchg
xchg
fs
push
leave
xchg
and
or
cwtl
push
mov
insb
dec
xchg
pop
mov
xchg
dec
mov
jecxz
jmp
fidivrs
xlat
pop
insl
scas
mov
pop
mov
pop
loop
je
leave
fucomip
mov
sub
jecxz
cmp
shl
xor
sbb
jnp
cmp
jb
imulb
cmp
sbb
push
mov
rcrb
das
dec
add
outsb
scas
pop
push
mov
ljmp
lcall
mov
aas
cmp
jo
pop
negl
add
sub
stos
jbe
mov
cltd
sub
and
xchg
lods
inc
push
pop
cli
cmpsb
lea
fsts
rcl
aas
xor
pop
and
sbb
lock
daa
int
sub
movsb
sub
loopne
dec
xor
mov
repnz
jmp
inc
les
mov
or
xor
repz
iret
or
add
pop
push
cld
adc
dec
jnp
insb
pop
jecxz
adc
inc
cli
mov
pop
sahf
xor
add
xor
pop
mov
mov
add
mov
je
ss
dec
mov
pop
repz
push
cwtl
call
jne
dec
jo
mov
pop
div
jne
in
orb
call
mov
inc
nop
or
scas
add
imulb
mov
mov
xlat
and
lahf
inc
int3
lea
lret
pop
xor
enter
xor
sahf
pop
outsb
and
fdivs
stos
loopne
or
inc
in
jb
or
fs
pop
je
cltd
cmp
sub
pop
mov
es
in
movsl
mov
inc
cli
mov
jmp
rcll
imul
adcb
and
sbb
xor
test
lcall
adc
sub
js
mov
test
and
in
inc
or
mov
inc
stc
push
lcall
loope
xchg
mov
mov
jge
jl
popa
cs
aam
out
adc
mov
xchg
insl
push
repnz
add
mov
pushl
dec
mov
pop
or
mov
push
cmp
enter
jns
xorl
pop
push
jmp
hlt
xchg
sbb
or
movsb
jns
pop
mov
je
int3
jmp
push
fcompl
stc
mov
push
add
arpl
dec
pop
imul
inc
cli
mov
push
cmp
or
mov
xchg
ja
xchg
push
out
test
or
sub
jno
pop
xchg
inc
or
jae
mov
mov
pop
jnp
sbb
clc
pop
jnp
outsl
pop
pop
dec
ljmp
lea
sbb
pop
mov
dec
adc
imul
add
std
cmpb
jmp
xchg
add
mov
cwtl
aad
mov
mov
dec
cltd
lahf
xchg
mov
mov
adc
fwait
cltd
xchg
mov
ret
out
jl
or
inc
loopne
stos
inc
or
dec
popl
xchg
mov
pop
lods
push
test
orb
pcmpgtw
jne
adc
dec
and
xor
inc
and
cmp
sbb
jbe
leave
pop
pop
jp
call
sti
push
jmp
call
xor
mov
ds
js
push
push
repz
lods
jp
mov
push
adcb
setle
lds
xchg
jle
adc
and
dec
push
cltd
pop
mov
fs
rorl
jmp
jge
das
pop
xorb
pop
jp
rol
jnp
jo
or
stc
xor
ss
inc
pop
sub
add
pop
and
mov
add
lods
mov
out
into
mov
add
mov
or
dec
int3
call
and
jno
mov
mov
or
sar
adc
pop
jno
xor
sti
pop
mov
sbb
jge
lahf
xlat
int3
fldl
ds
icebp
dec
cli
or
stos
nop
fstpl
cltd
push
jmp
mov
jb
inc
xor
rcrl
pop
icebp
mov
inc
or
pop
adc
cmp
ss
pop
adc
cwtl
mov
es
xchg
xchg
loope
dec
pop
stos
loop
adc
jne
sbb
ror
or
sbb
bound
adc
jl
jb
rcl
idivl
push
or
enter
dec
sbb
jmp
cmp
dec
mov
insb
ljmp
sti
scas
push
inc
lods
mov
shll
jne
pop
shr
xor
jns
or
add
xorl
xchg
addr16
push
add
daa
push
cli
fistpll
lret
push
mov
inc
pop
pop
mov
jle
mov
hlt
jmp
popf
jbe
dec
cmp
or
rorl
lahf
xchg
push
add
or
jge
loopne
dec
iret
das
icebp
test
mov
loop
mov
or
pop
mov
mov
punpckhbw
mov
add
popf
dec
orb
movsb
daa
or
mov
in
dec
inc
test
jns
pop
mov
lea
xchg
lods
repnz
pop
push
add
cs
jae
xchg
mov
cmc
and
mov
add
testb
popa
popf
jl
js
cs
adc
or
insl
and
stos
sub
xorb
sbb
dec
ljmp
cmc
cmp
add
sub
jae
add
call
popf
and
mov
sbb
std
mov
sahf
lods
pop
in
cmpsl
fsubp
push
xchg
test
sub
pop
pop
sbb
inc
jmp
inc
js
lods
les
jo
add
sti
out
or
loopne
out
push
stc
pushf
cmp
movsb
add
jo
xlat
mov
fwait
cmp
inc
call
xlat
das
xchg
xchg
repnz
jnp
push
push
pop
push
ljmp
or
test
pop
cmp
adc
and
or
jge
shl
add
mov
cmp
repnz
lds
lea
ljmp
jbe
and
mov
mov
xorb
aam
xor
inc
add
in
ljmp
into
data16
mov
aaa
and
cmp
pop
mov
push
rorb
int
aam
cmp
mov
mov
xor
mov
data16
mov
pop
or
hlt
add
pop
cmp
mov
dec
fdiv
mov
and
out
icebp
dec
out
popf
outsb
or
xor
and
push
add
shlb
jne
jae
mov
or
cmp
or
push
xor
daa
jg
lock
movsl
jmp
mov
je
and
pop
das
addb
mov
dec
test
icebp
push
pop
imul
lea
lock
push
inc
inc
nop
mov
push
enter
or
fildl
xor
mov
and
jmp
or
mov
add
inc
mov
mov
cwtl
jle
mov
xchg
xor
xchg
xchg
imul
fdiv
daa
popa
adc
hlt
xchg
icebp
xlat
in
sub
imul
enter
adc
mov
int
inc
rorl
out
push
and
test
filds
mov
mov
or
cwtl
hlt
cmp
inc
add
cmp
pop
jmp
inc
enter
jge
mov
aam
dec
repnz
fisubrl
pop
mov
popl
mov
mov
xchg
mov
pop
sbbb
repz
loope
ret
pushf
sarb
out
fbld
inc
jb
cmp
jo
mov
and
rcll
adc
push
mov
out
jge
divb
out
std
lret
insb
mov
jmp
push
call
shl
lcall
dec
pop
dec
push
inc
jbe
push
add
stos
jecxz
dec
pop
sub
mov
adc
mov
pop
sti
sbb
inc
lahf
mov
into
inc
mov
les
sub
aas
jnp
sub
mov
fwait
mull
pop
cmc
faddl
xlat
dec
lea
add
push
int
jp
dec
cmc
outsl
jmp
aam
dec
lret
mov
pop
das
in
pop
hlt
cmp
ja
jo
movsl
ret
pop
add
jecxz
imul
jp
scas
inc
xchg
pop
sbb
pop
cmpsl
cmp
mov
mov
sbb
out
jo
jmp
sar
stc
scas
sub
adc
mov
adc
mov
cmp
sbb
dec
insb
pop
jns
inc
inc
inc
cmp
rorl
push
fwait
pop
into
mov
jge
dec
mov
movsl
xor
cwtl
std
mov
call
and
cmpsl
push
je
pop
fcoml
sbbb
sub
movsb
and
push
inc
mov
mov
scas
jmp
lcall
fcomi
dec
xchg
mov
shl
test
shll
push
jb
cs
dec
aaa
dec
xor
lds
cld
pop
xor
jmp
xchg
rcrl
jno,pn
repnz
cltd
fucomp
sbb
cli
dec
pop
dec
mov
sbb
inc
mov
push
push
push
inc
sub
dec
push
or
pop
arpl
or
and
cmp
ficomps
push
sub
aas
xchg
in
push
aas
lods
jbe
pop
mov
outsb
decb
or
fdivl
xor
add
leave
xchg
call
movsb
inc
rcrl
fists
mov
xor
mov
mov
mov
inc
imull
ljmp
xor
imul
lods
jae
sbb
int
push
out
cmp
pushf
pusha
mov
in
gs
mov
jge
mov
rcrb
jns
add
icebp
dec
mov
call
pop
push
add
dec
aas
sub
loopne
call
ljmp
jl
jg
lods
xchg
mov
add
scas
cmpsb
das
pop
adc
ds
xor
mov
lret
mov
mov
pusha
or
pop
or
or
pop
aas
inc
pop
loope
adc
add
out
sbb
jmp
call
loopne
ret
jecxz
sbb
mov
xor
stos
sub
out
jae
gs
pop
and
add
icebp
xchg
xchg
mov
xor
testl
fildll
int
mov
pop
and
mov
mov
testb
pop
adc
out
cli
cs
cmp
cli
jne
sysret
orl
xchg
mov
fcoms
add
mov
nop
pop
subb
or
jg
sti
jle
andl
or
scas
out
subb
and
out
mov
aaa
imul
add
add
punpckhbw
jmp
aas
call
ss
les
pop
test
loop
test
lods
shrb
pusha
cmpsl
add
ja
in
ss
or
testb
es
andl
push
daa
jae
leave
jnp
mov
rorl
jg
nop
jmp
hlt
imul
push
cli
in
cmpb
mov
xchg
xor
int
aam
addb
je
cmp
stc
out
inc
mov
or
pop
lods
in
push
dec
pop
sbb
add
or
rcll
clc
xor
mov
xorl
and
nop
popl
xchg
add
aam
js
xor
scas
fnstsw
dec
clc
mov
sahf
dec
inc
xchg
xorb
imul
push
in
push
xchg
and
sbb
aas
rcll
pop
aam
dec
mov
jns
jmp
inc
mov
sbb
popa
sub
rorl
adc
rcll
or
xchg
mov
test
jnp
dec
popf
sub
mov
push
sbb
inc
cmpsb
mov
ja
rorb
lock
mov
inc
movsb
mov
ret
outsl
pop
inc
jmp
add
jmp
dec
fisubrs
mov
add
out
jg
jns
mov
and
jbe
fistl
mov
or
sub
aaa
pusha
das
aad
jle
xor
pop
or
push
xchg
sub
popl
rorb
xchg
mov
cltd
pop
xchg
cmc
xor
or
fdivrl
daa
or
dec
mov
adc
sbb
das
dec
ret
jns
sub
or
mov
and
inc
ljmp
sbb
pop
jbe
dec
fistps
test
loope
fsubl
inc
push
or
cli
mov
push
xchg
sti
iret
ja
xlat
into
xchg
or
call
inc
push
pushl
push
add
add
mov
popf
pop
jp
sbb
fisttpll
jg
push
fs
daa
pop
mov
dec
or
jmp
std
outsb
mov
or
adc
leave
mov
dec
or
dec
dec
or
stos
mov
dec
pop
fiadds
stc
jae
call
loop
add
push
scas
dec
jmp
lock
leave
fcmovnu
cld
adc
outsb
xchg
das
mov
pop
jmp
mov
fdivrl
xchg
ficompl
mov
mov
inc
and
outsb
jae
mov
lock
push
addr16
scas
jno
mov
jg
jnp
and
es
add
fwait
cmp
sbb
push
jmp
mov
ja
popa
cmp
push
push
cmpsl
and
aad
mov
xchg
inc
das
in
pop
scas
inc
call
or
cmpsl
cmpb
add
cmpsb
dec
pop
mov
lret
jno
push
push
iret
jo
mov
or
out
fsub
mov
mov
cs
out
pusha
add
imul
mov
in
mov
push
pop
test
xor
jmp
jl
shlb
pop
mov
add
mov
aaa
leave
inc
leave
sbb
ret
or
hlt
lods
dec
sbb
push
cmp
pop
je
jo
repz
mov
and
daa
mov
out
mov
int
test
jo
loope
lods
fsubrl
or
jp
inc
mov
pop
push
mov
cmc
push
sub
dec
sahf
mov
cmpsl
and
and
mov
fdivrl
pop
xor
inc
pop
in
or
iret
leave
push
ja
push
push
or
mov
fwait
and
adc
addr16
mov
mov
add
and
lahf
pop
xchg
mov
push
repnz
mov
and
scas
inc
cmp
xchg
dec
or
fiadds
sub
jno
or
mov
push
xor
pop
imul
jl
mov
inc
jo
jle
and
into
push
ljmp
sbb
sub
je
enter
ja
aaa
pop
int3
xchg
movsl
and
adc
aad
js
mov
insl
sbb
jb
pop
out
out
daa
mov
dec
mov
call
clc
add
sti
enter
stos
aas
mov
dec
mov
jno
cld
adc
jmp
adc
push
icebp
aaa
loop
push
js
int3
fs
inc
mov
adc
stc
and
jns
mov
cltd
xlat
hlt
dec
xorb
jmp
add
icebp
insb
inc
sti
push
loopne
push
ja
std
push
stos
mov
and
stc
movsl
into
es
insb
or
pop
test
jne
inc
scas
test
call
cmp
mov
sti
xlat
cmpsl
add
subl
mov
push
cmp
jmp
adc
pop
mov
out
inc
mov
pop
daa
cmpsl
and
or
jne
sub
gs
adc
lahf
and
mov
sbb
mov
or
mov
push
cmpb
fistpll
jnp
fsub
ficoml
js
loope
fsubl
pop
push
jg
mov
dec
sbb
incb
bound
cmp
pop
lret
scas
xor
mov
movsl
jle
leave
jo
add
movl
neg
jmp
rorw
dec
adc
and
call
in
lahf
cltd
addl
push
pop
pop
add
hlt
sub
test
andb
push
mov
or
in
adcb
out
iret
div
shll
push
ret
enter
jbe
pop
dec
mov
pop
hlt
adc
and
jecxz
test
rorl
jmp
push
ljmp
push
pop
xchg
int
adc
flds
xchg
pop
fsubp
or
ljmp
xchg
add
add
out
jne
jecxz
outsb
ljmp
push
add
sbb
mov
or
cli
inc
add
notl
inc
mov
mov
pop
mov
or
xor
mov
ja
hlt
pop
insl
inc
enter
cwtl
sahf
add
inc
push
or
test
add
imul
imul
xor
mov
push
mov
stos
flds
dec
pop
insb
bound
sub
sbb
inc
mov
jo
push
vmovdqu
push
aam
imul
add
push
loop
inc
subb
rcll
rolb
popf
dec
sbb
test
test
sbb
insl
xlat
inc
jp
cld
mov
mov
ljmp
pop
out
test
loope
xor
push
popa
xor
dec
inc
lahf
jg
sub
jbe
mull
mov
jmp
mov
jno
outsl
or
loope
popa
push
add
daa
xchg
xchg
pop
test
divl
jmp
nop
cmpb
lods
in
xor
and
std
jp
ljmp
pop
push
mov
clc
or
jo
sti
mov
lods
pushf
push
scas
inc
mov
imul
add
out
sub
mov
cwtl
test
cmpsb
mov
lds
mov
cmp
mov
popa
sub
mov
in
cmp
mov
pusha
movsb
pop
in
lods
decl
sarl
push
xchg
roll
push
cmpsl
push
leave
mov
inc
mov
inc
iret
pop
sti
sti
sub
adc
enter
es
lahf
pop
and
pop
stc
filds
mov
dec
out
mov
jnp
int3
mov
mov
push
push
int
jmp
insb
int
test
call
jle
jmp
out
pop
mov
adc
jg
hlt
xchg
mov
sub
xor
insl
int
pusha
inc
jbe
jno
xchg
lahf
or
loop
add
shl
mov
lahf
xlat
lcall
fistl
imul
test
mov
lahf
pushf
add
mov
popa
add
in
scas
jmp
stos
addr16
sub
mov
into
int3
lahf
jp
iret
inc
push
mov
jnp
and
dec
mov
sbbb
adc
repz
or
sub
inc
xchg
shll
xchg
repnz
push
fcoms
mov
notb
ja
loopne
dec
ss
push
clc
pop
sbb
cmpsb
mov
pop
int3
adc
stos
call
mov
push
xor
mov
add
or
ja
fbld
dec
je
mov
arpl
and
nop
mov
mov
dec
or
add
outsl
aad
cmc
repnz
jo
in
testb
dec
add
es
cmc
dec
cmpsl
repnz
jmp
inc
fsubs
sbb
pop
push
sbb
or
inc
out
mov
mov
add
mov
push
dec
je
mov
push
jle
pop
rcll
idivb
loope
mov
sub
call
fadds
rcl
jp
rclb
scas
mov
andb
and
movb
test
and
jg
lahf
pushf
test
pop
inc
notl
imul
cli
enter
aam
fiadds
mov
adc
orl
out
sub
leave
icebp
sbb
rcll
push
jmp
je
xor
xor
jno
mov
shr
jnp
xchg
out
and
mov
inc
lea
sar
ret
data16
jmp
sahf
cmpsl
addr16
push
jno
mov
pop
mov
xor
shlb
loopne
ds
add
mov
mov
adc
addb
lods
jbe
stos
in
sbb
mov
mov
jle
fistl
sbb
jns
mov
jne
std
outsb
jnp
in
cmp
lcall
or
mov
cwtl
les
iret
imul
les
push
cld
int
pop
dec
bound
vpslld
and
pop
or
cmpsl
mov
sbbb
xor
clc
adc
pushf
mov
push
pop
xor
inc
repz
aaa
clc
xor
push
aam
add
or
lods
push
add
mov
and
add
inc
sbb
and
add
loope
jo
sub
test
mov
call
mov
push
jo
int3
and
push
jns
icebp
repz
mov
sub
jne
inc
in
pop
xchg
xor
shr
test
lahf
push
pop
mov
pop
add
call
dec
je
add
pop
in
pop
adc
out
push
imul
jmp
cli
lock
test
push
sarb
sbb
clc
cltd
cmpsb
cmp
fcoml
add
jbe
testl
es
lea
je
ja
mov
in
and
stos
and
or
sub
sub
movsb
sub
xor
hlt
xchg
stos
fsubrp
imul
pop
mov
vpsignw
sbb
dec
xchg
cmp
repnz
ja
test
je
mov
daa
pop
push
shlb
mov
cmp
or
push
and
nop
mov
daa
xchg
sbb
mov
cmp
push
ret
mov
out
hlt
add
and
push
sub
jbe
or
sbb
mov
dec
std
cmpsb
mov
sarl
pop
pop
xchg
push
ja
pop
jno
call
sbb
lods
lock
ja
add
fldenv
xor
pop
dec
inc
jnp
movsb
cli
loop
ja
mov
mov
mov
repnz
jp
popa
jmp
inc
lahf
jle
add
stc
stos
xor
mov
es
add
enter
lret
mov
inc
insl
push
mov
or
adc
lock
test
bnd
fnstcw
cmp
or
pushf
sub
movsb
sbbb
cmpsb
mov
push
fistps
mov
imul
mov
int
push
pop
pop
call
hlt
jbe
iret
inc
mov
test
or
and
mov
pop
push
push
xchg
jmp
adc
dec
xchg
pop
cmp
cli
xchg
test
or
repnz
sub
cmp
fcomi
std
xchg
enter
jmp
jo
xlat
test
aas
int3
xchg
dec
sub
filds
inc
cs
addr16
js
or
fldt
xchg
psadbw
xchg
decb
lahf
roll
mov
loopne
dec
repz
and
cmp
addb
cmp
push
push
push
and
fisubrl
and
data16
add
jmp
mov
pushl
pushf
push
mov
dec
and
or
jo
dec
and
add
adc
mov
push
mov
cs
int3
pushf
sub
xor
repz
dec
mov
dec
pop
lock
cmp
mov
ljmp
sub
lahf
shlb
pop
fisubl
imul
dec
mov
dec
test
mov
mov
jb
int
fcoml
repnz
addr16
xchg
mov
cli
lahf
sub
pop
ret
add
ljmp
insb
jl
pushf
cmc
or
mov
mov
add
or
push
mov
jge
insb
jbe
cmpb
lods
cli
aaa
cld
pop
imul
xchg
andl
dec
sbbl
push
popf
xchg
mov
xchg
jmp
in
outsl
pop
pop
in
cltd
scas
int3
pusha
rclb
mov
mov
fstps
cmp
adc
imul
pop
xchg
shlb
sub
pop
adc
inc
sbb
sbb
arpl
xlat
adc
cmpsl
mov
and
xlat
add
xor
cmp
inc
addb
pushf
les
call
pushf
jmp
out
dec
jnp
jo
in
or
mov
jecxz
aaa
mov
mov
sar
outsb
test
jmp
push
jno
jl
je
pop
lock
push
mov
mov
pop
imul
push
pop
ja
das
xlat
pop
jge
and
enter
ljmp
popa
scas
jmp
int3
dec
rcl
mov
dec
dec
leave
addr16
inc
int3
sbbb
lret
aam
test
mov
add
js
cwtl
addr16
mov
adc
js
ss
pop
hlt
dec
int3
lea
leave
pusha
jl
sub
mov
pop
cld
jle
mov
mov
mov
xor
out
push
test
dec
jnp
or
and
int3
or
cmp
xor
daa
mov
ja
mov
sub
xor
in
repz
push
jmp
pop
sahf
arpl
mov
popl
sbbb
hlt
pop
dec
in
addr16
inc
xchg
movb
push
adc
pop
into
jbe
jl
push
push
push
arpl
and
add
cmp
pop
push
sbb
mov
icebp
mov
mov
inc
fsubp
outsb
or
out
push
jl
adc
lock
push
rol
xchg
jmp
pop
push
arpl
in
dec
and
aas
mov
sub
add
rorl
cs
dec
inc
aam
das
mov
ret
lahf
insb
faddl
call
dec
sub
xlat
and
xor
push
inc
xor
add
push
mov
in
ds
xchg
sbb
outsl
lods
mov
jmp
loop
call
int
faddl
mov
icebp
out
fwait
jbe
inc
cmp
pusha
jecxz
pop
and
adc
jns
mov
sbb
xor
mov
or
mov
push
mov
ss
push
in
or
in
sub
push
aam
mov
sbb
sub
and
xchg
lahf
add
inc
xor
sbbb
in
sub
push
out
or
pop
addb
or
dec
xchg
leave
jge
push
ljmp
or
loopne
mov
mov
and
repz
and
push
call
add
and
sub
inc
mov
movsl
stc
jne
inc
mov
aaa
xrelease
repnz
xchg
sbb
push
cltd
push
shrl
jmp
idivb
ret
xchg
inc
adc
mov
xchg
fisttpl
popl
xchg
xchg
ror
mov
rcrb
insb
or
jo
scas
movb
aad
insl
aam
loop
in
cmp
or
leave
mov
decl
sub
mov
sub
fmuls
rolb
aas
sub
cmc
mov
or
and
jp
mov
xor
test
enter
add
mov
das
push
add
sub
ss
pop
xchg
or
jbe
testb
test
jecxz
sbb
mov
dec
test
jne
lea
loope
movsb
js
xchg
std
cmc
xchg
rcrl
jge
sub
leave
ljmp
insb
lods
push
push
bound
xor
jg
sbb
mov
dec
xchg
mov
jmp
ret
scas
mov
inc
test
ja
insl
rcl
sub
or
mov
pop
je
jne
aad
push
inc
mov
cmp
imul
sub
push
sbb
add
jg
xor
daa
sub
in
xor
test
push
or
mov
or
imulb
call
and
stos
lds
jg
jne
push
xor
lcall
mov
pop
rclb
pop
lods
das
lret
sarl
call
xor
mov
cmp
add
outsb
add
mov
cmpsl
pop
jecxz
sub
jmp
add
dec
or
sub
or
jae
pop
popl
shrb
xchg
out
dec
adc
sbb
testl
cmp
hlt
dec
mov
nop
or
jno
push
pop
out
dec
mov
shll
int3
sbb
fisubrs
jg
xchg
jo
je
test
jno
push
test
and
push
int3
mov
std
inc
lahf
mov
call
imull
or
sahf
pop
push
jns
jmp
out
ja
rclb
orl
push
mov
jne
inc
sub
fxch
cmpsb
sub
mov
call
mov
adc
dec
jmp
leave
aaa
aad
jb
mov
jnp
vmovdqu32
loope
mov
or
shlb
jle
xchg
repnz
leave
hlt
repnz
mov
push
call
sub
psubusb
aad
push
inc
mov
int
jl
mov
add
movsl
cmp
or
jae
aam
pop
dec
sbb
adc
lret
xor
or
aas
call
jae
outsl
push
add
push
adc
mov
jecxz
das
ret
cmp
mov
cltd
mov
jmp
or
push
inc
out
imul
pop
inc
push
sti
xor
sub
jge
test
int
inc
cltd
push
cs
imulb
lahf
clc
cmpl
dec
inc
or
jle
orb
and
sbb
adc
jbe
sub
xor
cmpsl
les
or
add
in
jo
frstor
pop
cld
testl
fisubl
or
push
pop
cmp
aas
or
push
mov
pop
xchg
jecxz
cs
mov
cmp
mov
sbb
jbe
int
out
loop
sub
data16
test
lods
cs
or
lahf
mov
push
ret
xlat
dec
sahf
repnz
mov
add
rorl
stos
mov
gs
inc
mov
insl
push
push
and
ja
out
or
sbb
pop
stos
xchg
push
or
sub
inc
cwtl
adc
push
jmp
scas
mov
push
push
js
push
pop
into
cli
rorl
or
leave
mov
inc
movsl
mov
pushf
arpl
das
fsin
stc
sub
inc
fs
repnz
dec
notl
js
adc
stos
test
sbb
sub
jns
mov
sbb
xorl
outsb
call
pop
sub
cmc
aas
or
pop
mov
int
ljmp
orl
ror
xor
and
aad
cmp
adc
cmpsl
call
shlb
cs
cld
sbbb
jmp
add
idivl
push
out
add
ds
jle
mov
add
mov
jo
in
push
xor
lds
or
scas
mov
and
mov
inc
cmp
inc
jb
adcl
push
cld
mov
in
or
dec
sub
rorb
ret
imul
mov
pop
aaa
jb
add
setp
ret
outsl
clc
or
adc
push
and
icebp
testb
lods
mov
mov
xchg
std
lock
call
sub
movntq
push
mov
mov
xchg
test
jmp
jbe
mov
dec
out
call
jb
ja
rorb
movsb
rcrl
xchg
sbb
xor
dec
aad
test
dec
or
cld
dec
fs
sub
push
jmp
fidivrs
cs
pop
push
add
mov
ret
push
orb
sbb
divb
xchg
sbb
sbb
movsl
cmpl
push
or
mov
mov
push
sub
jmp
push
xchg
cltd
pop
test
mov
or
sub
mov
mov
ljmp
inc
pop
inc
test
add
fdivrl
iret
xchg
push
inc
lea
fnstcw
inc
xchg
dec
test
and
mov
int3
lahf
lahf
sahf
push
lahf
sbb
dec
lret
mov
cwtl
mov
orb
push
ret
xor
cwtl
mov
aad
rcrb
inc
dec
ljmp
xor
pop
sbb
sbb
or
or
and
inc
cltd
daa
push
cmp
pushl
pushf
pop
mov
outsb
jge
or
rclb
dec
shl
sbb
dec
push
mov
int3
int
test
fldenv
mov
mov
mov
lock
rol
xchg
out
jg
cmpsb
das
into
xor
add
inc
orb
xor
push
and
mov
mov
or
nop
pop
adc
out
or
ljmp
out
xchg
fnstenv
jae
mov
and
or
bound
xor
mov
xchg
call
mov
sbb
add
mov
push
or
inc
cmp
mov
imul
pushf
jmp
inc
pop
aas
hlt
lahf
jg
mov
adc
and
xor
lea
jle
mov
push
mov
enter
and
std
jmp
fidivs
ret
xor
enter
pushf
inc
popl
sub
repnz
adcb
in
hlt
lahf
test
pop
arpl
or
dec
mov
ds
sbb
imul
mov
jmp
fadds
call
or
mov
mov
mov
cmpsb
mov
jb
mov
pop
or
ja
sub
or
mov
cs
dec
mov
sub
lret
pop
fdivs
mov
fsubl
mov
dec
cld
mov
pop
push
fs
dec
cmpsl
or
lods
jle
int3
push
sub
xor
inc
sbb
dec
pop
add
movsb
sbb
pop
mov
adc
hlt
dec
pop
cmp
icebp
idivb
jno
cmc
les
arpl
jge
mov
push
movsb
add
jno
mov
add
loopne
mov
sbbl
sub
loopne
bound
repnz
sar
cli
mov
xchg
fiadds
int
mov
pop
roll
arpl
cmp
mov
testb
pop
addr16
scas
mov
dec
orb
push
xor
mov
pop
sbb
aad
fwait
imul
push
out
xor
adc
fstpt
xchg
add
ret
mov
push
mov
jg
xchg
dec
adc
add
add
scas
cwtl
cmp
or
adc
dec
movsb
sbb
fs
mov
ss
inc
add
in
xchg
pop
inc
cmpsl
xor
xchg
pop
pop
sbb
rcll
push
or
cmp
cmp
fwait
adc
fsubrl
xorl
cmc
lcall
fwait
jl
mov
cmpsl
inc
mov
push
or
std
inc
mov
fstpl
gs
sub
stos
jo
arpl
jge
mov
adc
sti
into
es
pop
inc
int3
add
pop
sbb
xor
mov
sbbl
add
das
sub
jmp
mov
fsubl
cmc
addr16
dec
and
movsb
shlb
fldl
push
out
into
leave
xor
jnp
cmp
mov
fs
mov
or
fidivl
push
mov
mov
aam
insb
or
out
cmp
inc
adc
mov
or
jns
lea
jo
inc
leave
out
je
dec
inc
addr16
ljmp
jae
orb
xchg
push
fwait
xlat
fcmovnb
repz
lcall
insl
jge
or
loop
xchg
int3
xchg
sbb
cwtl
in
and
loope
cmp
dec
fsubs
sbb
xchg
jp
push
push
adc
xchg
mov
xchg
jne
mov
aaa
icebp
sar
inc
mov
push
out
addr16
sbbb
xor
and
cltd
clc
cmpsb
enter
jno
and
movsl
das
fdiv
ja
and
mov
jmp
xor
sti
jge
out
cld
es
aam
pop
push
pop
cs
xorl
imul
int3
call
mov
push
mov
push
push
jmp
fwait
jg
mov
push
jmp
or
repz
push
dec
add
int
lock
mov
imul
push
lret
mov
or
mov
bound
arpl
aad
xchg
mov
pop
add
aaa
push
flds
sub
lock
push
jo
roll
inc
pop
sti
lods
pushf
push
fs
sbb
imul
mov
test
es
pop
roll
mov
out
cmpb
xchg
pop
push
mov
xchg
aad
repnz
cmc
outsb
scas
cwtl
mov
or
imul
in
sbb
movsb
or
jmp
std
mov
rclb
jo
mov
cli
fisubrl
insb
call
fistl
fsubl
add
jbe
test
mov
scas
jl
insl
xchg
out
mov
sbb
mov
sub
ja
push
cli
loop
lahf
mov
pop
jle
fsubr
pop
jp
xchg
push
xor
xchg
dec
sub
jmp
repnz
or
rep
lahf
repnz
insb
daa
add
mov
adc
cmc
daa
or
add
loopne
cmpsl
enter
mov
jmp
je
inc
fisubrl
in
inc
push
mov
jle
dec
cld
mov
xchg
ret
imull
loop
or
test
sub
fdivrl
fstps
jg
jno
xorb
pop
sbbb
daa
add
cli
lock
sbb
push
sub
out
cmc
aaa
mov
mov
mov
jmp
adc
mov
adc
jae
test
pop
sub
test
xor
push
mov
arpl
mull
cld
add
pop
fdivr
mov
xor
fistl
enter
clc
pusha
xor
pop
jno
fiadds
jge
shr
in
jae
punpckhbw
jg
bound
or
outsb
jg
cmp
or
add
lods
and
pop
enter
sbb
and
cwtl
lea
mov
lret
into
push
fmull
mov
xlat
punpcklbw
stc
imul
jmp
repnz
ret
test
mov
test
mov
rcr
pop
ja
out
adc
call
add
jmp
movsb
cli
push
pop
pusha
push
sahf
jb
dec
mov
ret
ficompl
loopne
cmp
cmc
sarl
mov
sub
inc
mov
jo
mov
pop
test
or
or
mov
fisttpl
jge
mov
pop
or
ds
mov
shl
insl
rclb
lahf
and
nop
test
lea
iret
mov
fcomps
sbbl
inc
outsl
fcompl
mov
inc
iret
pusha
cmc
popa
lea
test
adc
pop
lahf
inc
repnz
jmp
inc
int3
test
sub
pop
enter
mov
or
or
push
xor
aam
shlb
jno
xchg
mov
adc
mov
outsl
icebp
sub
mov
inc
out
mov
sti
lahf
insb
xor
fildll
mov
push
fistl
push
or
push
adc
sub
fcmovb
sbb
inc
mov
push
call
mov
fsts
in
sbb
push
xlat
sti
and
inc
add
or
jmp
into
ret
sub
lea
mov
cmc
test
and
test
mov
xor
in
xorb
sbb
pop
in
leave
jb
pop
cmp
cli
push
cli
mov
adc
push
je
scas
test
lock
inc
cwtl
jmp
jp
or
insb
push
mov
and
andb
andl
mov
js
jp
in
das
pop
repz
cltd
das
daa
loop
pop
cmp
fdivr
hlt
push
mov
ja
icebp
repnz
mov
adc
pusha
loope
sbbb
mov
inc
push
stos
mov
outsl
mov
adc
jbe
cltd
mov
mov
cmp
jg
call
dec
sub
add
push
mov
jl
fcompl
shl
ss
clc
push
ret
adc
stos
mov
push
push
loope
adc
cmpsl
mov
ss
jo
mov
aad
mov
mov
xchg
dec
scas
jmp
aaa
mov
xor
xor
push
jmp
sbb
mov
shl
mov
mov
xlat
push
mov
lret
dec
cmp
add
xor
pop
jae
fsubl
mov
pop
mov
and
negl
pop
mov
jno
dec
mov
inc
or
ret
hlt
repz
addr16
stos
jno
mov
mov
fsubs
cld
mov
sbb
pop
enter
jb
int3
aas
cmp
jecxz
loop
add
scas
mov
outsl
ja
invd
jbe
push
push
outsb
push
xor
jge
xor
sbb
jmp
or
mov
jmp
xchg
test
sahf
and
jl
out
iret
sbb
or
jbe
push
xor
dec
enter
xor
push
dec
mov
cld
movsb
es
jle
dec
addb
call
les
mov
xchg
sbb
popf
hlt
lcall
and
lods
sar
rclb
add
and
sti
jp
push
push
push
in
icebp
loop
daa
inc
pop
in
xlat
outsb
test
adc
das
int
push
sahf
es
shrb
sbb
inc
loopne
xchg
pop
adc
jne
loope
jno
cmp
cmp
adc
add
pop
mov
stos
nop
pop
sub
inc
ja
pcmpeqd
pop
xchg
test
stos
add
out
in
loop
inc
imul
jmp
pop
mov
sahf
inc
orl
test
cwtl
cltd
and
xor
fdivrl
ljmp
sub
sub
imul
out
das
pop
pop
or
repnz
jl
data16
stos
lds
cmp
and
dec
push
push
mov
std
es
lret
dec
gs
loop
mov
add
jae
push
test
adc
outsb
test
adc
xor
test
push
das
fidivrs
stos
hlt
je
rclb
inc
orb
data16
xlat
iret
inc
sbb
or
dec
lret
repz
pop
outsb
xlat
mov
sub
cli
add
sub
jo
and
ret
dec
adc
lahf
fdivr
or
add
fwait
add
sub
inc
dec
subb
or
and
stc
out
scas
in
ds
xlat
popa
lahf
cmp
pop
jmp
jae
jmp
jmp
mov
push
xchg
jge
adc
inc
in
mov
andb
add
fmull
mov
std
inc
and
add
adc
push
data16
enter
lock
mov
fdivrl
mov
push
mov
sub
dec
xor
lcall
fcmovbe
mov
fstps
call
sub
push
sub
adc
jbe
scas
sahf
lods
loope
sti
sub
rorl
and
jae
mov
lds
cmp
xchg
in
fidivrs
pop
xchg
or
or
mov
leave
lds
xor
xchg
dec
orb
lock
push
mov
cbtw
mov
jb
lds
jg
jno
es
imul
mov
call
cmpsb
fcomps
aas
cs
aaa
sub
jmp
mov
push
sub
es
test
aaa
inc
mov
jo
dec
pop
inc
clc
int
pop
lar
hlt
ja
movsl
sahf
mov
jne
iret
and
xchg
mov
arpl
jl
jnp
clc
mov
mov
out
push
add
push
das
in
icebp
inc
mov
mov
pop
add
mov
xchg
mov
cmc
shlb
ror
inc
das
sbb
and
jbe
repnz
xchg
add
std
dec
cmp
lods
cmp
mov
test
mov
dec
xchg
mov
cmpsl
xor
pop
inc
sub
incb
and
sti
mov
dec
out
leave
shrl
stc
ja
sbb
pop
mov
pop
int3
cmp
jmp
add
fs
and
les
call
mov
stc
inc
xchg
push
lcall
outsb
loope
popa
push
mov
mov
ret
dec
push
dec
add
popa
lret
inc
sbb
and
pop
xchg
popw
sbb
pop
flds
cmp
pop
cmpsb
mov
or
fdivrp
rcl
mov
insb
xor
sar
cmp
xor
jmp
insb
dec
dec
jo
test
mov
fadd
mov
fsubr
or
add
pop
push
bound
dec
loop
adc
sbb
xor
jae
dec
aad
inc
mov
cwtl
add
in
cmpsl
push
adc
add
ret
dec
cld
test
pop
imul
inc
xchg
mov
mov
rol
or
out
scas
push
cmp
cwtl
sbb
dec
incl
scas
jne
call
or
loopne
push
xchg
repnz
les
dec
mov
add
dec
mov
mov
dec
or
mov
icebp
cmc
mov
inc
js
mov
jb
ret
push
pop
fcmove
nop
mov
and
pop
sti
dec
sub
add
adc
push
push
mov
fnstenv
sti
and
xchg
inc
inc
push
fwait
push
daa
negb
and
adc
xor
daa
mov
aam
lret
js
jle
inc
repz
cmpl
xor
fdivr
sbb
lret
insl
inc
jnp
xchg
clc
shrb
test
and
not
movsb
call
push
push
mov
ja
mov
repz
jne
add
das
push
add
cmp
jle
je
nop
sub
sbb
dec
dec
addps
mov
mov
sarl
and
js
jp
cmp
into
mov
enter
add
mov
gs
int3
mov
push
adc
dec
popf
jns
mov
bound
add
lret
mov
hlt
inc
mov
push
or
ss
aas
nop
sub
mov
imul
sub
jmp
mov
mov
jo
mov
insl
popf
dec
mov
or
sub
or
mov
lds
mov
ret
mov
call
outsl
xor
add
inc
or
cmp
jns
cmp
ficoml
pop
imul
subb
into
ja
pop
mov
inc
stc
in
xor
fldl
fcmove
jne
or
les
dec
mov
mov
test
jmp
lods
cmp
jmp
test
xchg
testl
jl
cwtl
loope
pop
xchg
out
mov
jb
mov
icebp
pop
enter
cmp
inc
dec
sub
xor
sti
mov
push
popa
dec
test
pop
inc
push
call
inc
mov
xor
pop
push
mov
shrb
inc
bswap
fistl
enter
dec
mov
ret
insb
mov
adc
adc
nop
dec
clc
mov
xor
push
sti
push
loop
xchg
mov
mov
pop
mov
or
data16
inc
mov
and
or
call
loop
pop
test
mov
mov
xor
or
inc
sbb
fstpl
cltd
ds
sub
idivl
sbb
mov
loop
push
or
ds
imul
loopne
ret
jge
jmp
jp
icebp
lret
andb
fbld
fstpl
push
add
xchg
adc
cmp
pop
pop
jg
jno
call
test
sbb
fildll
or
out
icebp
push
mov
fdivl
jbe
adc
sbb
aad
inc
loopne
shr
out
ss
fnstenv
xchg
shlb
leave
push
lahf
loop
xchg
pop
pushf
mov
xchg
push
mov
jge
loopne
xchg
sbb
xlat
push
inc
push
stos
ret
fistps
push
fwait
add
lods
adc
fsubr
fsubs
push
cmpsb
add
mov
out
xor
icebp
shll
mov
lret
imul
jne
mov
call
inc
mov
jmp
xor
mov
hlt
dec
pop
mov
mov
ds
sarb
subl
int3
push
pushf
cmp
iret
call
push
sub
dec
sub
out
aam
pop
stos
mov
mov
movsl
mov
inc
lret
xor
mov
sbb
lcall
repz
xchg
mov
inc
or
test
xor
mov
js
or
sar
add
mov
jmp
jge
scas
push
mov
push
sub
add
adc
sti
lock
xchg
push
in
call
mov
cwtl
xlat
cmpsl
dec
dec
mov
cmp
xchg
sub
cli
xor
loopne
push
je
dec
xchg
pop
dec
movsl
pop
int3
add
mov
jg
xor
cmp
xchg
mov
lods
add
or
movsl
call
jl
int3
dec
sbb
xor
mov
sbb
mov
inc
push
shll
or
in
xchg
dec
mov
jb
arpl
dec
orb
bnd
aam
cld
cmpsb
nop
jae
xchg
lock
cld
adc
std
and
loopne,pt
je
int3
xor
xchg
jmp
jl
pop
jmp
rorl
clc
pop
sbb
packuswb
xchg
jnp
cmp
das
test
xchg
sbb
dec
pop
push
and
mov
subb
insb
fcoml
ret
or
or
xchg
or
pop
xchg
dec
push
lahf
in
std
dec
adc
push
mov
mov
push
mov
add
jg
call
fwait
sbb
fcomps
dec
les
dec
adcb
push
shlb
cwtl
enter
loope
jne
aaa
push
xchg
addr16
icebp
inc
jne
into
pop
cld
sub
rcr
pusha
xchg
pop
call
jmp
xor
unpcklps
leave
cli
pusha
pop
stos
cmc
js
inc
call
jecxz
and
ljmp
cmp
ljmp
mov
inc
mov
sti
outsb
sbb
jno
call
mov
subl
xor
push
xchg
xlat
jge
jmp
jl
jo
add
mov
std
cwtl
mov
dec
push
testb
inc
mov
insl
pop
cmpsb
mov
mov
roll
xorb
sub
jg
xor
popf
pop
jnp
dec
pop
inc
sub
cmp
or
scas
shll
sti
in
pop
mov
lahf
sub
shrl
cmp
sub
addb
xchg
fstl
add
or
or
and
xchg
cmp
xor
popf
pop
xor
and
roll
push
push
fmull
jmp
lcall
inc
add
insl
leave
pop
adc
subb
popf
fistpl
loope
or
xchg
pop
fmuls
loop
push
mov
hlt
test
inc
add
add
rolb
xchg
hlt
dec
dec
je
adcl
test
xchg
es
in
sbb
dec
clc
mov
test
xchg
cmc
test
jmp
or
add
push
mov
loope
pop
add
sbb
jecxz
jne
mov
fdivl
or
pop
jle
outsl
lea
pop
add
push
and
call
xor
pop
lahf
or
inc
call
xchg
shrl
add
pop
sub
xor
jo
push
out
movsb
addr16
bound
outsb
psllw
cmpsb
scas
test
xchg
faddp
push
mov
jge
push
imul
add
sbb
xor
icebp
pop
cmpsb
pushf
dec
mov
xor
xchg
mov
or
mov
sub
stos
inc
push
push
loop
shll
and
pand
jb
rcr
xchg
or
push
test
sub
outsl
mov
dec
mov
pop
cmc
cmc
mov
sbb
pop
es
outsb
mov
gs
insb
idiv
je
call
andl
or
hlt
cmp
and
cmc
xchg
das
sub
dec
dec
out
mov
pop
daa
les
pop
nop
jle
jmp
pop
or
andb
mov
mov
inc
jp
mov
cmpb
xchg
pop
shl
mov
mov
pop
jo
jl
push
xchg
jo
push
mov
sbb
call
clc
jmp
push
popf
inc
jo
jmp
in
inc
test
test
mov
push
xchg
inc
xor
push
dec
cmp
call
sub
ljmp
cmpsl
jb
call
jns
cltd
pop
mov
and
cmp
fcomps
sahf
out
mov
mov
cmpsl
inc
adc
imul
push
fnsave
dec
jmp
and
stos
push
lock
adc
mov
hlt
clc
inc
mov
inc
xor
xchg
mov
mov
out
fcmovu
xor
call
movsl
pop
sub
mov
mov
mov
and
inc
jmp
sbb
and
jbe
mov
mov
xchg
rcll
push
lret
ret
mov
mov
lret
pop
call
inc
xlat
loope
and
lret
push
mov
push
mov
push
popf
adc
xchg
jge
fisttpl
mov
fld
jbe
fstl
repnz
leave
stc
jmp
pop
pusha
xchg
call
mov
jne
ja
mov
dec
mov
sbb
dec
popa
rol
popf
fdiv
dec
sbb
rolb
pusha
mov
push
loope
and
pushf
call
roll
lds
inc
sti
xchg
jo
adc
clc
mov
scas
xlat
pusha
mov
dec
repnz
cmpsl
or
cmp
mov
jl
jl
pop
push
call
ja
adc
add
sar
clc
test
pop
mov
push
pop
adc
mov
push
push
outsb
and
adc
repz
xchg
out
pop
mov
arpl
mov
cmp
sub
mov
insl
and
repnz
push
mov
icebp
jno
jnp
jmp
pop
stos
and
adc
jb
add
call
repnz
push
andb
lahf
push
lret
jl
call
pop
outsl
sbb
stos
push
test
insb
insl
sbb
cmc
push
sti
dec
call
das
add
sub
fdivl
mov
int3
push
and
divl
inc
fisubs
pop
push
outsb
scas
lcall
push
stc
pushf
xchg
xchg
xor
movsl
pop
mov
cmp
inc
jmp
xor
cmp
jbe
push
popf
cmc
mov
mov
add
inc
das
xor
dec
and
scas
pop
imul
or
push
leave
cld
pop
jl
fdivr
jle
mov
in
inc
xlat
sbb
mov
and
xchg
or
or
gs
jnp
dec
fcomi
dec
mov
xchg
inc
js
scas
in
stos
jo
jp
sub
out
test
pop
push
push
pop
pop
or
push
popl
sbb
xlat
in
xor
mov
xor
rcll
and
pop
call
fwait
adc
cwtl
jnp
mov
add
add
imul
cltd
push
dec
shr
sbb
mov
push
mov
data16
and
loope
inc
sub
cmpsb
mov
pop
pop
xor
mov
or
call
mov
ret
pop
mov
mov
jmp
add
inc
mov
jbe
inc
dec
dec
out
out
cmpsb
and
jmp
dec
mov
cmp
inc
lods
int3
jg
icebp
inc
sub
test
mov
cwtl
mov
xor
push
lret
femms
stos
mov
es
jl
push
flds
fs
add
mov
ljmp
adc
nop
fldl
or
or
rcl
xchg
jo
push
loop
mov
sbb
int3
arpl
lcall
dec
shlb
jmp
mov
ss
mov
mov
popa
cli
es
jnp,pt
lods
into
repz
inc
mov
jg
xchg
dec
enter
fidivrs
sti
cld
andl
mov
xchg
scas
ret
push
pop
dec
test
jno
shrb
inc
inc
mov
add
jo
and
cmpsl
cs
mov
push
cmpsb
pusha
jmp
pop
jle
cmc
aad
fiadds
cmc
mov
adc
jl
mov
or
add
sub
mov
inc
ja
cli
or
mov
pop
push
push
gs
or
mov
sub
call
xor
decl
pextrw
aas
jp
adc
in
sub
push
cmp
inc
or
lea
leave
sarb
lahf
mov
leave
sbb
sbb
xchg
movsb
lock
add
jecxz
in
iret
add
jmp
pop
cmpl
in
push
xlat
lea
xor
mov
mov
imul
push
push
adc
or
jg
or
or
mov
push
adc
sub
push
das
addb
xchg
hlt
shrb
fs
insb
sub
pop
mov
mov
aas
ret
push
pop
inc
mov
ficomps
cmp
push
or
xchg
mov
push
fmull
mov
cs
out
jle
add
or
jecxz
jne
push
stos
ds
leave
pop
or
sbb
out
mov
or
jp
inc
dec
loopne
aaa
dec
xchg
call
fs
cmp
bound
pop
popa
sbb
inc
inc
pop
das
ds
dec
test
roll
int
xchg
add
cld
inc
nop
push
or
mov
xor
and
or
mov
movsl
push
dec
mov
pop
cld
jae
shrb
inc
xchg
jo
and
mov
sub
add
test
xlat
bnd
mov
adc
lret
xchg
mov
aam
xor
je
mov
jg
scas
repz
mov
roll
add
and
fisubs
adc
fnstcw
test
or
repnz
mov
aad
cmpsl
inc
lock
cs
jmp
mov
push
and
pop
or
mov
js
enter
mov
dec
cltd
testb
push
lret
push
fsubr
in
dec
cmp
mov
jnp
stc
mov
cmp
inc
arpl
sub
mov
mov
stos
insl
push
mov
dec
mov
push
adc
add
repnz
pop
je
rcrl
pop
sbb
pop
daa
and
sarb
fmuls
test
outsb
or
loopne
stos
push
jl
movsb
ljmp
fstpl
adc
lods
or
jmp
fistpl
popa
cmc
pushl
mov
fstp
add
outsb
mov
jp
add
mov
jo
dec
sbb
mov
xchg
loopne
and
iret
ret
mov
rcr
fwait
push
in
call
inc
pop
pop
mov
jl
sbb
jae,pn
sbb
jno
adc
cmc
jbe
clc
test
mov
cmpb
sub
cmpsb
sbb
daa
mov
subl
scas
jge
push
pop
xchg
mov
shrl
xor
std
add
out
inc
mov
sbb
insl
cltd
fdivs
loop
sbb
mov
push
pop
mov
push
push
xchg
cmp
mov
or
xor
pop
push
adc
add
lock
lret
call
sub
xchg
xor
pop
mov
mov
out
mov
pop
jle
insb
inc
mov
sti
sbb
out
nop
fs
sbb
rolb
pop
shlb
cld
hlt
movmskps
adc
sub
dec
pop
pop
add
das
cwtl
out
add
repnz
xorb
mov
loope
sahf
cmp
rolb
mov
sub
and
adc
cmpsb
sub
inc
test
dec
pop
or
cwtl
sub
sub
call
lret
ret
test
dec
jne
mov
aam
and
mov
adc
mov
inc
std
or
pushf
jae
sbb
mov
jg
push
xchg
inc
iret
stc
filds
xchg
and
push
and
push
or
lcall
sbb
inc
lahf
inc
xchg
movsl
loop
inc
fxch
dec
icebp
je
cmp
dec
jecxz
or
aas
push
and
enter
in
aaa
sahf
enter
and
wbinvd
lea
or
pop
int
sbbl
pop
jmp
jecxz
dec
push
fcompl
push
clc
dec
lods
or
mov
xchg
je
dec
xchg
sar
imul
fcompl
sub
das
sub
popa
mov
or
outsb
inc
adc
lods
mov
mov
ljmp
dec
or
das
sub
xor
lahf
jecxz
or
mov
jb
jle
or
and
sbb
ss
mov
adc
shll
ljmp
or
int3
xor
lcall
cmp
test
push
cmpsl
lahf
cwtl
push
scas
rol
and
xor
and
sarb
shrb
stc
cmp
lock
push
aad
jnp
push
lock
cmp
ss
or
and
mov
lods
insl
mov
sbb
shlb
xchg
add
xlat
jg
insb
inc
pop
cmpsl
inc
test
call
scas
cmovnp
bnd
jno
adc
in
xor
xchg
jp
lock
sbb
mov
jle
push
and
and
add
cld
int
cmp
lock
rcr
xchg
sub
dec
and
sbb
hlt
mull
ss
lock
push
xchg
sbbl
jg
in
lock
push
cmp
jae
out
lock
dec
jg
sbb
movzbl
push
jb
lock
inc
fildll
in
add
les
inc
loopne
fsubrs
jmp
push
ds
cmpsl
lds
mov
xor
sub
and
and
sub
icebp
push
push
or
and
fdiv
fsubr
ljmp
cmp
mov
lcall
jnp
mov
repnz
or
mov
jge
ja
jmp
jo
out
out
outsb
lds
adc
call
ja
mov
mov
test
mov
ret
mov
push
pushf
mov
inc
pop
shrb
cmc
pop
enter
int
inc
or
push
xchg
dec
mov
push
mov
cli
push
and
adc
fisttpll
pop
adc
jge
xchg
mov
jmp
and
mov
lds
jo
jl
mov
adc
lods
jmp
xchg
addr16
andl
push
jbe
scas
push
pop
cmc
out
std
inc
pop
push
sub
inc
dec
add
shll
sbb
inc
xchg
pop
jno
pop
pop
or
cmpsb
cwtl
imul
xchg
leave
add
jmp
pop
fwait
push
aam
bound
xorb
push
cmp
push
sbb
xchg
or
adc
sub
imul
lods
lods
add
lret
xor
add
into
in
rclb
mov
xchg
inc
test
inc
inc
jns
xchg
sbb
pop
xchg
cmpsb
adc
inc
xchg
inc
subl
cld
mov
aad
addr16
pop
lods
add
jg
push
push
cld
dec
sub
dec
mov
mov
rol
xor
call
mov
push
pop
pop
xlat
mov
xor
push
in
es
or
or
push
ss
xchg
neg
dec
fcomps
lea
cli
sub
loope
jb
outsb
mov
add
mov
dec
sbb
into
call
push
sbb
daa
mov
fstpl
xchg
push
mov
jnp
xor
cmp
adc
cmovo
and
sub
jno
test
dec
aam
scas
jbe
inc
aam
xor
adc
gs
add
incl
and
subl
mov
mov
out
rclb
out
push
stos
scas
je
addb
inc
inc
not
add
cmc
jb
fimuls
popf
dec
pop
push
daa
cs
fistpl
lahf
jle
jp
into
clc
xchg
mov
jo
cs
aad
faddp
push
xchg
pop
xchg
mov
dec
jl
stc
mov
pop
jnp
mov
or
mov
pop
jo
mov
mov
jle
or
cmpsb
inc
jns
sbb
push
mov
fbstp
loop
push
mov
inc
mov
mov
flds
adc
mov
xor
xchg
int3
mov
mov
enter
call
mov
addl
ds
call
dec
sub
inc
mov
pop
bound
dec
push
add
jp
lcall
xorl
add
mov
push
pop
adc
cmp
pop
xchg
pop
jmp
mov
dec
push
xor
inc
xchg
or
jbe
imul
out
pop
inc
movsl
lahf
repz
test
sub
insb
or
add
cmp
fists
add
leave
dec
mov
pop
out
sub
cmp
pop
add
or
loop
xchg
pusha
mov
push
clc
mov
popf
jb
cmp
call
xor
fldl
es
jbe
or
in
test
in
inc
jae
data16
pop
xchg
cltd
dec
shl
push
mov
jmp
int3
sbb
pop
pop
mov
push
push
jmp
outsl
sbb
outsb
or
mov
shl
mov
sub
xchg
cmp
cmp
aas
ldmxcsr
hlt
inc
nop
movsb
mov
nop
in
cmp
imul
pop
dec
imul
mov
shlb
addr16
or
aas
cld
xor
or
dec
js
sub
mov
adc
dec
sbb
iret
js
push
fimuls
push
xchg
mov
cwtl
addb
stos
lds
fistpll
cli
cwtl
call
aaa
lods
movsb
imul
stos
jo
jmp
inc
or
dec
adc
in
sbb
sbb
testb
test
xor
outsb
inc
test
and
mov
mov
or
lahf
xor
fcomps
add
cmp
xor
push
test
pop
inc
cmp
loop
aad
push
mov
clc
mov
xor
in
sub
sub
shll
pop
jb
shl
pop
cmpsl
sbb
jecxz
push
pop
jl
jmp
push
sub
pop
arpl
cmp
jns
xor
xchg
rorl
out
in
mov
cmpl
test
hlt
dec
mov
sbb
pop
xchg
mov
lahf
dec
xor
fiaddl
jns
jmp
or
in
or
push
bound
and
adc
test
mov
cli
mov
mov
pop
lods
shll
stos
mov
sub
orl
and
movsl
stc
leave
cmp
cmp
lret
loop
call
mov
mov
or
adc
or
rcrl
jmp
out
int
rol
xchg
lahf
pop
add
mov
arpl
add
loopne
mov
jb
js
cmc
outsb
fwait
aad
insl
loope
lock
les
or
stos
or
iret
or
dec
mov
std
jecxz
notb
imul
xlat
and
xor
push
xchg
pop
das
fdivr
adc
pop
inc
sbb
js
mov
cwtl
cwtl
imul
out
ss
inc
call
sbb
push
ljmp
inc
call
sti
mov
mov
and
pop
lock
push
dec
repz
lret
inc
inc
shlb
and
iret
out
sbb
jne
dec
and
and
adc
fstpt
cmp
je
cld
cs
jl
jmp
sbb
js
call
aam
cmpsl
fdivs
dec
and
adc
jmp
inc
push
mov
mov
icebp
mov
inc
ss
outsb
pusha
jnp
xchg
cltd
in
hlt
mov
xchg
adc
xor
cmp
pop
stc
hlt
xor
sub
mov
das
mov
xor
aad
subl
pop
jmp
mov
and
hlt
icebp
push
fcompl
imul
fsubp
push
add
loopne
stos
push
stc
mov
mov
dec
mov
out
lcall
xlat
stc
push
fwait
mov
pop
add
mov
shlb
mov
shlb
push
out
decb
dec
xorl
mov
clc
push
lret
pop
pop
out
fimuls
in
mov
jb
sbb
shl
pop
adc
mov
std
cmp
cmp
bound
pop
je
mov
cmp
jmp
xlat
xor
aaa
push
out
mov
and
mov
or
inc
or
jbe
out
cmp
add
pop
je
dec
out
pop
jmp
pushf
inc
and
and
lds
xchg
es
inc
sub
shlb
flds
push
inc
or
mov
jb
fwait
push
dec
leave
xchg
stc
mov
mov
rorb
mov
gs
js
jns
jo
insl
sbb
fiadds
data16
jecxz
es
lahf
sti
icebp
cmp
sub
lds
mov
sbb
sub
adc
xlat
cmp
push
push
or
test
loop
adc
jge
loop
mov
mov
test
scas
dec
test
inc
xchg
pop
jno
push
push
inc
dec
or
mov
push
fnsave
jbe
cwtl
lods
adc
cmc
sbb
add
or
in
and
sub
mov
imul
pop
jmp
cmp
xorb
add
mov
pop
sbb
jg
sub
or
pop
and
mov
outsl
pop
xor
leavew
xchg
jmp
push
mov
loopne
aad
adc
pop
jge
sar
bound
rol
cmp
mov
xlat
out
scas
adc
sbb
ret
mov
mov
jns
mov
jmp
cli
cwtl
mov
xchg
call
cs
pop
das
add
test
jne
xor
push
test
in
das
rorl
loopne
dec
add
daa
lods
movsb
shrb
cli
xor
adc
ss
or
inc
fnstsw
dec
push
cmpsb
adc
inc
mov
sub
push
std
pop
call
fdivp
mov
cld
popa
mov
xor
mov
mov
mov
inc
push
call
rolb
xor
mov
loope
stc
test
mov
into
jno
pop
outsb
cld
es
sub
push
mov
sbb
push
hlt
xor
adc
jo
xchg
jbe
dec
call
or
xor
xchg
xchg
push
and
lock
add
bound
sbb
push
mov
inc
lea
test
mulb
mov
lret
jbe
xor
sahf
decb
int3
adc
ret
push
shl
inc
sbb
xchg
mov
or
push
clc
dec
leave
pop
cld
push
in
mov
sub
push
mov
push
testl
nop
and
add
adc
jo
test
lods
rcrb
or
sbb
mov
aas
repz
xor
cmpsb
xchg
mov
or
sub
fists
por
push
add
sub
leave
mov
sub
mov
sub
out
push
lock
incl
sbb
jns
inc
divb
jo
imul
leave
jg
fisubrl
pusha
in
xchg
fs
imul
es
fidivrs
jmp
add
adc
add
cmp
xor
add
sbb
mov
les
mov
or
call
xor
das
add
adc
jmp
loope
pop
jae
int
jg
pop
pop
xchg
int
int3
hlt
xchg
sub
pop
xchg
xchg
out
repnz
cmp
mov
lods
mov
call
pop
js
xchg
or
testb
push
jmp
hlt
cmc
mov
cmc
negb
in
fnstcw
pop
leave
pop
add
inc
dec
xor
mov
xchg
adc
mov
mov
into
pop
sti
mov
inc
mov
mov
push
push
xor
mov
or
lock
pushf
jmp
out
pop
out
sbb
push
out
sbb
pop
test
out
hlt
xchg
out
dec
mov
sbb
inc
sbb
and
or
das
pop
loope
add
mov
or
dec
inc
cli
cwtl
fs
mov
jl
jae
dec
call
rclb
xchg
adc
insb
mov
dec
xorb
bnd
call
xchg
dec
les
add
mov
pop
jae
jle
ret
xchg
loope
in
pop
dec
adc
mov
mov
jmp
adc
fidivs
push
nop
les
fs
mov
jb
jmp
fcoms
push
mov
movsb
cwtl
and
out
sahf
insl
dec
add
cmp
sahf
scas
add
add
das
in
popf
jne
stc
call
filds
push
dec
scas
sub
inc
sbbl
lds
test
fistps
cld
repnz
add
push
or
in
push
mov
and
hlt
add
dec
aad
xchg
push
call
and
xor
jmp
pop
call
sub
pop
pop
andb
push
pop
fstps
jmp
loope
pop
sub
jmp
movsb
and
jae
sub
scas
add
and
and
loop
imul
jb
add
fbld
push
xor
inc
cmp
jno
jae
pop
imul
jecxz
mov
adc
and
cwtl
mov
xchg
outsl
loopne
mov
loopne
add
lret
push
repnz
cmp
mov
loop
inc
add
xor
and
stos
out
xor
scas
in
sti
dec
idiv
cwtl
sbb
lret
rol
xchg
lcall
lret
mov
loope
inc
mov
inc
ljmp
mov
movsb
lcall
add
scas
outsl
dec
add
push
push
fbld
and
pop
jge
addb
int3
outsl
mov
loop
sbb
aaa
jno
mov
outsb
mov
ss
mov
or
xchg
cmc
mov
movsl
bound
mov
cmp
jmp
pop
aaa
dec
push
mov
mov
jmp
push
add
push
clc
leave
cmc
dec
lahf
lahf
sbb
sub
xor
mov
jbe
addr16
ja
xor
loopne
clc
clc
cmp
inc
cmpsb
les
mov
push
mov
repnz
jecxz
or
adc
jmp
and
xor
push
mov
pop
bound
sub
test
imul
leave
shrl
cmpsb
or
in
imul
icebp
add
jmp
cmp
lea
and
imul
jmp
test
push
jo
mov
or
mov
jb
mov
rcr
or
mov
pop
xchg
inc
mov
imul
std
movsb
imul
xchg
xor
xor
push
mov
xchg
sbb
cwtl
lock
cmp
ljmp
rol
add
or
or
jge
add
mov
or
lcall
inc
dec
mov
mov
je
out
sarl
and
dec
xchg
out
inc
mov
inc
and
mov
push
call
cmp
fsts
jg
push
das
inc
dec
jne
mov
arpl
insl
adc
int
mov
stc
mov
in
push
xor
loopne
pop
mov
cli
hlt
mov
cmpsb
and
add
stc
push
lods
in
dec
pushf
push
mov
pop
insb
mov
push
sbb
inc
push
cwtl
int3
xor
cmp
jge
daa
clc
mov
hlt
mov
fwait
jmp
mov
imul
inc
stos
adc
add
and
orl
inc
ja
cmp
cmpsb
dec
aad
pop
mov
add
aam
repz
lret
inc
fsts
jb
pop
jmp
jge
sti
out
mov
mov
mov
fldenv
xchg
sub
mov
loope
mov
cmpsb
pushf
and
lods
and
popf
mov
sbb
jmp
fwait
mov
jge
mov
xor
or
fisubrs
inc
dec
add
push
ret
shrb
test
xorl
jns
psrlw
dec
jno
orl
lds
test
rclb
pop
cmp
jmp
stos
jb
mov
or
push
ljmp
mov
or
jno
call
or
pop
add
cmpl
test
jo
inc
jmp
pop
popf
sbb
dec
ljmp
cli
jb
push
sahf
les
or
sub
ss
inc
push
es
xchg
sti
lods
data16
clc
jmp
mov
mov
ljmp
mov
les
pop
lds
adc
testb
pop
jge
mov
addb
or
xchg
mov
mov
mov
call
inc
xchg
mov
and
pop
adc
push
popa
les
loop
mov
add
fs
pop
fwait
cmp
std
add
add
orl
mov
clc
aad
inc
stos
mov
add
pop
loop
ja
pop
jp
push
mov
imul
mov
cwtl
push
decb
pop
xchg
xchg
inc
mov
lret
xchg
mov
outsb
mov
adc
mov
adc
icebp
cld
aad
add
or
insb
mov
xchg
out
rcrb
hlt
dec
inc
inc
adc
test
xchg
sub
pushf
in
ret
push
adcl
enter
mov
lods
sub
cmp
xor
icebp
add
in
xor
push
inc
push
cwtl
ja
pop
mov
push
lock
push
jmp
insb
mov
addl
js
test
sbb
push
mov
aam
xor
js
testl
repz
insb
and
add
jno
pop
xchg
cmpsl
inc
mov
inc
or
lea
mov
and
add
mov
or
jo
jge
fldpi
movsb
fisttpll
mov
jo
add
movsl
fisubl
xorb
icebp
lcall
cmpsl
xor
stc
daa
aad
orl
cmp
jle
xchg
insb
stos
daa
mov
cmpsb
xchg
pop
mov
or
cld
or
xchg
aas
jg
and
hlt
sub
jmp
gs
ret
xor
fucomp
pushl
push
push
testb
shlb
jge
xchg
mov
insl
push
and
or
inc
outsb
movsl
outsl
pop
xor
mov
call
push
loopne
ljmp
or
insl
sti
adc
push
mov
mov
rol
mov
cmc
std
xchg
lahf
cmc
xor
cmp
inc
lock
push
fbstp
mov
pushf
push
adc
push
mov
imul
inc
repnz
adc
scas
adc
sti
jg
andb
sub
mov
insl
mov
popf
test
jg
movsl
aad
gs
daa
loop
sub
mov
dec
mov
adc
nop
adc
mov
pop
mov
sbb
pop
loop
loope
mov
mov
fcompl
pop
xchg
cmp
add
loope
test
stos
popf
pushf
inc
jge
inc
data16
insb
bswap
das
push
jae
daa
mov
sti
mov
mov
iret
inc
xchg
jb
mov
xor
cwtl
mov
add
mov
xchg
data16
cmp
pushf
sub
in
orl
popf
mov
mov
or
out
test
inc
xor
pop
pop
movsl
push
dec
adc
repnz
xchg
pop
repnz
pop
pop
jne
mov
xor
fyl2xp1
loopw
mov
shrb
push
push
push
dec
out
ja
in
adc
sub
cli
dec
hlt
pop
xchg
add
cmp
inc
in
rcll
mov
stc
cmp
fucomip
movsl
and
inc
in
mov
sbb
sub
add
sbb
mov
in
push
push
xchg
inc
dec
mov
mov
mov
xchg
std
lcall
push
daa
mov
test
icebp
or
push
jmp
add
pop
xchg
iret
cmpps
jo
inc
push
jno
out
ss
adc
jl
sarb
popf
aad
mov
jb
jmp
pop
loop
add
and
gs
dec
sub
test
rclb
xchg
ljmp
sbb
add
sub
add
lahf
dec
sbb
movsl
and
pushf
inc
cwtl
mov
jle
dec
testb
lret
adc
xchg
pop
loope
adc
test
pop
std
add
stos
lods
or
sahf
add
dec
or
jmp
mov
xor
mov
mov
and
sub
sub
add
mov
sub
xlat
fsts
lcall
rclb
jg
pushf
and
push
stos
stos
push
or
in
sti
scas
adc
call
sbb
pusha
pusha
xlat
xchg
arpl
call
lods
mov
adc
sub
add
gs
dec
es
dec
enter
shll
dec
lods
xor
lea
adc
jmp
iret
xchg
lods
pop
adc
cmpsb
inc
in
add
imul
mov
and
iret
cltd
sti
xchg
sbb
pusha
and
cmp
icebp
xchg
dec
out
cmpl
stos
icebp
mov
or
jmp
stos
mov
out
pop
repnz
call
inc
lcall
and
fdivr
repnz
stc
negl
pop
lret
lods
mov
stos
xchg
jnp
testb
lods
fdivs
pop
mov
dec
sbb
popa
sbb
test
push
sbb
add
js
xor
pop
pop
hlt
sbb
jg
adc
outsl
call
andb
mov
mov
cmp
inc
stos
mov
jb
push
push
xor
sub
popa
orb
mov
pop
rorl
orb
inc
lahf
xchg
movsb
cmpsl
ret
test
ret
mulb
inc
call
fdivp
xor
cltd
jmp
aam
sbbb
leave
push
jno
clc
inc
add
xlat
xorl
or
out
in
das
or
movb
pop
dec
inc
decl
notl
push
dec
outsb
mov
pop
in
jmp
mov
cwtl
cmp
push
inc
push
sbb
repnz
bound
or
jnp
push
adc
call
cwtl
je
and
in
frstor
out
add
pop
or
enter
cltd
cmp
cld
arpl
enter
cmp
pop
xor
fs
push
and
cwtl
dec
arpl
mov
shll
push
mov
mov
sub
xchg
inc
mov
jb
push
lahf
push
dec
jmp
jnp
xor
cmpb
lea
add
mov
aaa
xor
pop
cltd
out
movl
adc
and
xor
dec
jnp
jno
mov
inc
jbe
sbb
mov
inc
sbb
mov
out
out
or
push
and
jecxz
leave
add
in
mov
dec
shl
inc
cli
pop
mov
push
repnz
cmp
jl
dec
adc
mov
jmp
or
xchg
test
leave
daa
adc
lahf
or
pop
sub
mov
leave
push
shll
xor
mov
sahf
aaa
adc
fdivr
inc
mov
or
pop
and
or
jno
dec
in
mov
pop
rcrb
jmp
sahf
pusha
rcrl
je
es
scas
dec
dec
hlt
clc
mov
mov
and
js
jmp
or
pop
sub
aas
punpckhbw
sbb
jmp
scas
hlt
sbb
adc
xor
adc
pop
insb
aas
cmp
mov
movsb
or
adc
mov
loope
faddl
popf
js
mov
cmc
movsb
add
adc
mov
shrl
or
sbb
pop
pop
sub
faddp
push
shlb
pop
and
sub
xor
push
mov
repnz
push
jmp
dec
pusha
lods
jecxz
sub
mov
incl
xlat
imul
inc
or
xor
pop
cmp
and
andnps
arpl
pop
or
pop
push
xor
stc
dec
punpckhbw
insb
mov
adc
out
insb
cmp
lock
dec
fcoms
andl
clc
inc
rcr
daa
clc
cmp
cmp
ret
outsb
mov
push
mov
mov
int3
xchg
out
mov
out
or
ud1
xchg
xor
loope
mov
orb
push
test
mov
dec
sahf
es
mov
adc
xchg
or
sbb
stos
or
or
sub
sarb
outsl
pop
rorl
or
out
mov
ljmp
outsl
nop
fs
ds
push
push
pop
mov
ljmp
ret
xor
xchg
enter
aad
pop
add
mov
scas
fildll
or
insl
dec
fsubrl
xorl
or
call
push
cmp
mov
pop
andb
push
mov
mov
xlat
rcrb
mov
jb
call
jg
mov
cmp
scas
repz
cmpb
int
jno
call
repnz
push
xor
call
jno
pop
xorb
mov
out
inc
jmp
repnz
ja
cli
cld
mulb
inc
rcrb
sbb
lret
and
aas
mov
xor
stc
test
arpl
or
mov
and
and
or
nop
icebp
imul
add
in
lea
jae
pop
lock
push
dec
push
pusha
pop
pop
test
imul
sbb
test
aad
xchg
cmp
mov
jnp
dec
call
andb
lds
popa
dec
daa
fxch
cmp
push
push
pop
out
jnp
comiss
inc
pop
fmul
or
jmp
shrb
mov
mov
movsl
sub
sub
daa
scas
gs
rorl
xor
dec
or
mov
std
loope
and
xchg
sahf
ret
sbb
mov
call
lcall
jne
out
jb
and
mov
pop
and
mov
dec
ljmpw
adc
or
or
in
mov
ljmp
addr16
cmpsb
mov
xchg
jecxz
mov
and
popf
rcll
cmp
sub
call
add
pop
adc
add
or
iret
mov
lahf
std
sbb
cmp
int3
sub
mov
loope
incl
inc
test
leave
aaa
xchg
loop
jp
inc
adc
jno
adc
dec
cmpsb
test
pop
js
scas
jo,pt
popf
mov
int
movsl
ljmp
pop
sub
cmp
push
mov
fildll
pop
jne
adc
mov
rorb
fisttps
and
or
add
testb
repnz
icebp
outsb
jbe
ss
xor
push
mov
mov
inc
push
push
cwtl
or
repz
call
push
frstor
stos
push
cs
adcl
add
sub
das
mov
mov
je
cmpsw
sub
sub
xlat
sub
and
push
pop
test
pop
mov
outsl
cmpsl
ljmp
mov
hlt
mov
mov
xacquire
xchg
adc
mov
xor
pop
in
outsb
lret
lods
fnstenv
ret
pop
push
dec
data16
mov
popa
jge
jle
push
sbb
jne
jg
xor
hlt
inc
inc
inc
xchg
ja
cmp
popf
in
mov
push
pop
call
cmp
sbb
into
fldl
pop
lods
mul
xchg
js
es
and
orl
lahf
in
mov
ljmp
sub
mov
xchg
inc
mov
cs
add
enter
mov
cli
dec
lods
insl
inc
xlat
lret
mov
stos
xchg
jmp
mov
jge
pop
call
sub
inc
pop
sub
add
dec
call
cwtl
sub
or
and
mov
fidivl
rorb
sbb
jp
add
leave
inc
xchg
iret
sub
sub
sub
push
mov
ret
jne
loopne
inc
sbb
lcall
push
pop
orl
fs
mov
lea
ret
dec
mov
xchg
enter
clc
add
push
cmp
sub
cmpsl
and
jmp
movsb
mov
mov
pop
sub
mov
mov
push
call
lret
cmpsl
sbb
xor
fs
mov
jmp
cmp
gs
sub
or
insl
mov
and
test
sbb
outsb
xchg
mov
dec
or
jle
push
sahf
call
sub
jb
mov
jl
pop
mov
je
lods
add
test
daa
mov
icebp
pop
gs
repz
stc
ret
ds
iret
inc
test
xchg
lds
insb
cmp
cwtl
jmp
dec
adc
test
ds
out
dec
adc
movsl
adc
test
mov
mov
adc
xor
push
ret
xchg
out
repnz
add
call
or
pop
sarb
push
jnp
dec
mov
jmp
push
lods
insl
and
jno
mov
aaa
sbb
stc
movsb
inc
and
nop
jo
pop
mov
inc
push
mov
out
mov
cltd
sub
cli
add
faddl
das
imul
dec
cmp
cmpsb
loopne
jmp
mov
ss
jle
jns
std
add
xlat
je
push
inc
cmp
or
push
lods
xchg
mov
adcl
jle
ret
push
dec
imul
cmp
mov
xchg
inc
ja
fdivrp
push
jl
mov
loope
mov
lret
aaa
nop
incb
mov
and
shrl
mov
cli
pop
sar
popa
out
mov
push
or
call
repz
imul
adc
jno
cli
cmc
scas
xchg
jg
fwait
mov
mov
add
dec
aad
add
jnp
or
xor
sub
cmp
mov
out
mov
push
mov
sub
testb
dec
sbb
leave
test
stc
mov
mov
lods
pop
jo
fs
sbb
cmp
hlt
add
mov
lods
add
fnstcw
cwtl
mov
aaa
xchg
insb
out
sbbb
push
pop
jae
nop
mov
xchg
add
and
cmp
dec
sub
out
out
test
push
fucom
lds
sbb
iret
loope
adc
sub
push
adc
mov
inc
movsl
jecxz
add
repz
push
push
inc
cwtl
pop
ret
push
pop
mov
test
mov
test
cmc
add
out
mov
push
repnz
xor
out
pop
call
lea
cmp
mov
test
mov
and
mov
popf
int3
pop
lcall
sbb
mov
mov
icebp
pop
sti
fbstp
shll
fnstcw
add
adc
sub
mov
and
mov
pop
adc
cltd
orb
jmp
pop
ljmp
pop
xor
xchg
loope
lods
push
jp
mov
jo
loop
mov
icebp
rcrb
inc
cmp
or
out
or
mov
mov
icebp
subl
imul
and
jns
rolb
dec
add
or
jle
int
sub
sub
push
xchg
pop
sub
mov
or
inc
sbb
dec
test
push
pop
xchg
mov
xor
push
dec
jle
inc
ret
dec
mov
bnd
dec
in
scas
inc
cltd
jecxz
push
push
jo
xchg
int
imul
repz
mov
js
push
xchg
pop
out
inc
xor
cmpsb
and
jmp
cmp
cmp
mov
xchg
stos
mov
andb
xchg
inc
cmp
push
repz
push
push
mov
loop
or
xchg
stc
rcrl
mov
sbb
pushf
mov
aam
in
jmp
mov
mov
movsl
daa
push
lock
cs
sub
cld
loopne
test
or
xchg
mov
add
jmp
jp
jmp
fcomps
push
jo
sbb
outsl
bnd
pushf
movsl
ror
sbb
cwtl
int3
mov
cmpsl
pop
nop
scas
jmp
imul
push
or
bound
push
inc
aam
jmp
cmc
bound
aam
mull
imull
sbb
sbbl
xor
cmp
fidivs
sbb
mov
scas
test
mov
pop
aaa
sahf
mov
out
leave
fisttps
fstps
std
enter
xlat
or
int3
in
fisttpll
push
fmuls
imul
cmpsb
jo
cmpsb
pop
lahf
lahf
inc
rclb
lock
cltd
jbe
mov
shl
pop
in
mov
mov
jne
mov
cltd
xchg
add
pop
mov
in
decb
pop
add
mov
js
cmp
add
mov
sbbb
lds
shl
das
jg
sub
adc
cmp
into
add
pop
dec
scas
push
iret
out
nop
ret
int3
mov
out
mov
sahf
and
jmp
pop
jge
mov
push
into
xor
jge
sarb
add
fwait
ljmp
jge
popf
push
or
pop
mov
dec
xchg
push
adc
cmc
adc
or
mov
mov
pop
push
push
add
pushf
idiv
pop
cmpsb
mov
nop
jp
pcmpgtw
mov
test
aad
push
lret
pop
lea
popf
xchg
fcmove
xchg
iret
push
jl
sub
icebp
xor
jno
lods
pushf
rep
pop
sub
xchg
rolb
xchg
mov
mov
addr16
test
mov
push
inc
mov
mov
mov
lods
out
dec
ljmp
pop
or
ret
mov
jo
sahf
pop
sub
push
stos
adc
ja
in
ret
inc
clc
sbb
sti
rolb
adc
shrb
sbb
roll
into
mov
call
mov
shl
jns
cltd
add
je
add
out
push
cmp
idivb
and
lahf
jbe
gs
jl
insb
cli
lret
gs
and
push
xlat
jl
loop
adc
leave
js
pop
push
lret
inc
data16
push
xchg
js
loopne
addr16
hlt
mov
fld
insl
or
jo
fdivl
add
std
enter
rol
fimuls
mov
inc
pop
or
xor
negb
or
in
add
pushf
inc
xor
std
movq
ss
and
or
sbb
mov
int3
push
dec
or
outsb
fstl
xchg
cmp
mov
xchg
adc
jg
xchg
jmp
jo
adc
nop
lret
sbb
mov
cmpsb
lea
jne
scas
fimuls
lock
cli
sub
jbe
mov
ret
mov
stos
mov
hlt
jmp
sub
das
fldl
pop
or
pop
mov
or
call
xchg
sbb
and
add
shrl
dec
jl
xor
call
cmp
dec
inc
push
mov
sbb
call
push
hlt
xchg
adc
push
jmp
mov
push
dec
xor
xchg
dec
mov
mov
and
dec
test
cmp
xchg
outsb
xchg
pushf
inc
lds
scas
dec
sbbb
push
or
pushf
sbb
daa
jns
fs
dec
stc
sbbb
xchg
pop
sub
ljmp
inc
movsb
lahf
mov
mov
pop
jmp
add
xor
push
int
add
xor
shll
or
and
imul
fbstp
mov
jne
ret
aaa
cmp
cmp
mov
scas
movsb
roll
xchg
cltd
inc
rorb
fcoms
xchg
xchg
mov
enter
jbe
sbb
aad
mov
in
sbb
out
inc
jmp
pop
push
mov
push
mov
fdivrs
jmp
scas
lahf
and
das
dec
cmpsl
dec
or
or
es
mov
daa
pop
stos
add
out
divl
sahf
lret
out
cmpsl
mov
ss
call
subb
sbbb
fnstenv
mov
cwtl
xchg
int
adc
lods
or
sbb
cmp
sbb
jbe
dec
xor
leave
adc
add
or
xchg
cmpsb
jb
sbb
inc
and
out
test
orb
or
pop
jle
jno
jmp
mov
jecxz
push
and
cmc
popa
insl
or
mov
and
pop
int3
mov
out
push
mov
loop
xchg
test
movl
add
adc
push
test
cmp
pop
icebp
dec
push
and
xchg
pop
mov
testl
mov
adc
loop
sbb
shrl
shl
test
imul
in
out
push
nop
cmp
sub
lea
call
outsl
addb
mov
inc
stos
or
jae
mov
cmpsl
push
out
sbb
aaa
pop
sbb
and
repnz
lret
orb
in
jmp
xor
andb
mov
dec
xchg
mov
int3
imul
adc
outsb
inc
call
pop
add
daa
xor
mov
test
xor
loopne
dec
loopne
add
add
cmpsl
fdiv
mov
into
add
lds
inc
insl
popf
sub
call
mov
sub
int
stos
xor
cmc
inc
sub
fs
jnp
popa
or
mov
sahf
pusha
sbb
out
ss
andb
jl
adc
cwtl
ja
insb
mov
lcall
jg
or
jp
pushf
push
sbb
icebp
add
push
sbb
jmp
das
popf
pushl
add
popl
cs
in
sarl
pop
sub
ljmp
adc
pop
into
divb
pop
inc
mov
adc
aaa
or
fdiv
jo
push
mov
pop
fwait
add
mov
movsb
jmp
pop
and
and
sub
push
sbb
out
jo
sahf
pushf
jmp
xchg
push
mov
cmpl
jle
xor
or
jno
in
stc
mov
cs
in
orl
lds
cmp
mov
aad
mov
push
mov
mov
movsl
sahf
xor
jmp
je
xchg
push
leave
and
imul
mov
mov
xlat
push
in
xchg
subb
leave
jbe
mov
mov
adc
add
fmuls
nop
inc
dec
fwait
pop
jnp
jo
popf
nop
adc
insb
mov
imul
jmp
xchg
jl
add
jbe
mov
push
icebp
lret
sbb
mov
sbb
loope
push
sbb
inc
data16
dec
rol
int3
adc
popf
shrl
xchg
cld
mov
jo
inc
subb
daa
mov
mov
lods
inc
add
mov
dec
stc
lods
cmp
inc
pop
out
insb
or
push
stos
mov
insl
dec
add
out
sarb
cwtl
or
mov
call
sbb
imul
inc
xchg
prefetcht1
ret
mul
jns
xlat
add
dec
jo
xlat
push
sbb
loope
cli
pop
lcall
mov
pop
push
ds
pop
pop
cmpl
lahf
icebp
enter
clc
inc
mov
xchg
rorb
inc
add
or
xor
loop
fbstp
fistpl
sbb
inc
ja
bound
xor
xchg
stc
mov
fucomp
daa
mov
xchg
divb
sbbl
pushf
xor
cmp
mov
enter
mov
movsb
push
repnz
std
testb
xchg
cli
mov
jmp
jmp
jb
rcl
xor
adc
cmp
ret
mov
jl
popf
sub
sbb
inc
out
xor
iret
jmp
or
out
clc
jge
xchg
std
or
xor
adc
popa
mov
jmp
xor
pop
not
jno
push
movsb
mov
add
add
jns
xchg
mov
int3
pop
pop
pop
jae
xor
or
loope
repnz
stos
in
adc
fldcw
sub
aaa
scas
pop
loopne
scas
or
push
mov
call
push
jmp
sbb
fldenv
call
jb
neg
push
pop
push
mov
adc
xchg
call
jmp
or
mov
push
add
popa
sub
std
call
mov
scas
pop
out
insb
je
xor
out
sti
daa
xorl
add
stos
inc
mov
testl
das
call
gs
adc
push
adc
add
les
mov
popf
ja
out
scas
lods
sub
lahf
inc
or
jecxz
cmc
jg
or
push
push
ret
hlt
test
enter
in
mov
arpl
jns
int
test
mov
mov
out
in
orl
mov
mov
imulb
xchg
das
cmc
or
popf
ja
sub
icebp
pop
pushf
into
pop
mov
movsl
pop
loope
test
ret
addb
call
sub
mov
rorb
adc
push
dec
mov
imul
pop
adc
mov
std
cltd
cld
popa
mov
hlt
jo
mov
sbbb
cmp
rcll
jae
jns
push
pop
rcl
scas
jae
inc
loopne
cmc
mov
xor
cmp
loopne
dec
mov
pop
xor
mov
or
ds
nop
jo
les
lock
inc
dec
aam
sub
inc
pop
jecxz
push
mov
mov
lock
mov
add
enter
pushf
push
ds
mov
lock
cmp
inc
ret
or
xor
dec
sbb
neg
ljmp
push
stc
mov
inc
and
call
mov
pop
sbb
icebp
pop
pop
xchg
push
test
clc
adc
jae
jmp
out
xor
mov
cmp
rcrl
cld
das
cmp
and
add
xor
push
push
lret
jmp
das
fwait
aam
inc
add
cmp
loop
xchg
jle
or
sub
mov
jns
fcomp
cmp
nop
sub
mov
addr16
hlt
idivl
mov
mov
xor
sar
icebp
sbb
shll
xorb
sub
in
jmp
shl
add
jmp
insb
loop
adc
scas
call
push
jne
or
cli
mov
or
aam
testb
js
in
aas
and
mov
inc
or
mov
test
jno
xor
cmp
sti
jnp
hlt
orb
push
push
mov
push
pop
xor
inc
pop
adc
ds
push
insb
repz
mov
jb
les
cli
stos
lock
dec
stos
pop
call
scas
inc
mov
push
sbb
imul
out
mov
scas
out
mov
push
int3
lea
sub
lret
sub
out
push
mov
rcrb
xchg
es
add
push
insb
and
and
or
xlat
nop
push
pop
lcall
jno
push
sub
push
ficoms
movsl
inc
mov
pop
popf
imul
sub
loope
mov
fimull
ljmp
add
fnstcw
jp
dec
mov
add
adc
pop
dec
xor
jb
pushf
inc
cli
xchg
or
fsubrp
pop
push
jmp
mov
jmp
add
or
lds
mov
pop
dec
add
leave
jns
push
dec
jo
movsl
push
pusha
adc
mov
xor
sub
insl
daa
adc
frstor
dec
lds
adc
push
out
cmp
sti
cli
popf
jmp
or
scas
dec
lcall
hlt
jmp
cmc
or
fildl
fs
inc
pop
cld
xor
mov
dec
or
dec
out
xchg
mov
and
fidivrl
gs
or
jmp
stos
push
in
repnz
pop
mov
cmpsl
loop
das
mov
pop
fcoml
sbb
adc
cmc
lahf
mov
gs
mov
xchg
or
adc
jmp
out
adcb
sub
out
inc
int3
pop
add
sbb
imul
pushf
jo
push
and
sbb
jl
dec
mov
jno
xlat
pop
push
test
cmp
dec
inc
imul
shl
mov
popa
cmpb
adc
cmovp
nop
ja
mov
sbb
loop
push
inc
cli
or
inc
call
and
add
mov
pusha
push
fsubl
add
dec
pusha
xchg
seto
mov
mov
roll
adc
inc
adc
adc
shl
add
sub
or
fwait
jno
lods
loopne
or
push
jmp
and
movsl
mov
or
out
dec
es
xor
xchg
jg
dec
jb
fdivrs
scas
imul
sub
inc
push
hlt
jp
out
mov
lret
adc
sbb
lret
inc
cmp
negl
push
cwtl
xor
stos
mov
movsb
sti
and
int
or
fnstsw
inc
mov
xlat
ds
aad
test
sbb
and
jmp
mov
xchg
xlat
adc
test
adc
add
repnz
xchg
movsb
test
pop
cmpl
mov
and
push
je
sar
push
sbb
xchg
mov
xchg
dec
add
out
testb
or
test
icebp
jecxz
dec
imul
sub
stc
jmp
enter
inc
ja
stos
lret
rclb
inc
icebp
push
adc
sbb
dec
dec
hlt
fcoms
das
jg
add
outsb
pop
xchg
mov
dec
mov
push
aas
cmc
pop
and
lock
push
outsb
mov
flds
push
loopne
or
scas
cld
and
dec
rclb
aam
dec
jmp
jecxz
pop
mov
xchg
lods
jne
imulb
pushf
fucomip
jnp
xchg
leave
cmp
sbb
outsl
xchg
mov
inc
loop
cmpsl
pop
adc
adc
add
cltd
lcall
pop
lahf
std
shl
lods
inc
xor
mov
dec
icebp
inc
sub
repz
xchg
shll
add
pop
adc
or
dec
rcr
jge
push
andl
inc
addr16
xor
pop
inc
adcb
xor
inc
sub
clc
jg
pusha
push
jmp
or
cwtl
pop
push
rcl
out
push
xor
dec
cmp
js
stc
lea
das
ja
jmp
lcall
out
ja
jo
adcb
jb
jle
and
xchg
lods
inc
mov
push
inc
mov
jmp
mov
ja
test
rcrl
pop
das
lahf
pushw
mov
xchg
movsb
inc
xchg
inc
lahf
push
mov
push
sbbl
mov
imul
std
div
add
setg
and
ret
push
or
addb
push
cmc
adc
jo
push
pop
call
mov
cltd
pop
jecxz
lds
sbb
inc
mov
rcrb
sub
insb
xchg
cmc
pop
cmp
cmpsl
push
jg
outsl
movsb
or
mov
sub
xor
pop
sub
pop
xchg
mov
mov
cmp
add
cmp
fst
cli
or
fsubr
popa
mov
add
jmp
add
push
mov
fs
push
and
sub
movsl
jb
ja
push
dec
int
mov
dec
xchg
cmp
pop
mov
xor
or
bnd
fdivrl
je
sub
call
inc
jno
push
mov
pop
scas
inc
leave
rorl
mov
test
pop
hlt
xor
sti
mov
insl
pop
call
in
jle
mov
addb
loopne
sbb
and
lea
add
ja
pop
pop
mov
popa
dec
pop
out
roll
push
lods
pop
stc
repnz
push
or
inc
ljmp
pop
in
divl
lods
sub
push
push
pop
movsb
insl
fistl
scas
out
test
cmp
mov
add
mov
mov
in
mov
cmp
cli
mov
xchg
push
mov
mov
in
lea
sar
or
loope
ret
jne
cmp
rcll
enter
lcall
xchg
push
ret
sub
and
in
mov
dec
fsubrs
xor
push
sub
and
int3
mov
mov
movsb
out
xor
xor
outsl
inc
dec
cwtl
and
xchg
or
jne
xchg
ret
pop
mov
or
adc
decb
push
add
shr
ljmp
test
ljmp
or
repnz
cwtl
inc
mov
mov
fiadds
or
lret
push
inc
dec
adc
insb
and
xchg
shlb
mov
les
cmovs
fs
or
push
jmp
into
cmp
xchg
inc
mov
movsb
inc
lcall
fcoml
jnp
jle
jmp
push
in
pop
jae
pusha
cli
push
test
into
inc
sub
dec
insl
iret
outsl
jg
call
xlat
in
arpl
mov
nop
dec
fcompl
scas
cmp
jmp
dec
cmpsl
jae
pop
xchg
in
ret
pop
xchg
xchg
jo
lahf
xor
sub
call
jmp
sbb
adcb
adc
adc
pop
jmp
pop
adc
mov
inc
adc
repz
jns
push
sbb
mov
shlb
pop
enter
lods
jl
mov
adc
jne
loope
jbe
sahf
fidivs
adc
sub
cli
addb
sahf
rorl
fidivrs
ljmp
insb
pop
popf
push
out
fdivl
test
cmp
aam
cmpsb
xchg
xor
mov
add
add
cmp
push
jno
mov
clc
adc
setle
or
push
dec
cwtl
inc
jmp
shl
lret
ret
xor
mov
scas
or
add
incl
dec
into
and
shl
addr16
lods
out
cmpsb
push
ret
movsl
inc
call
je
adc
push
mov
int3
mov
cld
add
sbb
push
pop
mov
xorb
incl
xchg
mov
popf
lret
test
or
fisubs
outsb
imul
outsb
arpl
stos
pop
outsb
test
lods
sbb
xchg
mov
fisubrs
or
mov
out
xchg
lahf
es
and
add
sub
stos
xor
ljmp
push
call
addb
cbtw
mov
sub
mov
xchg
in
xor
loop
add
xchg
jg
rclb
ret
inc
push
test
jo
dec
pop
pop
movsb
call
cmp
jmp
sub
notb
adc
mov
mov
mov
mov
or
imul
mov
pop
ud0
sti
cmp
mov
inc
pop
insl
dec
outsb
and
add
or
add
push
sti
mov
test
xor
mov
jae
arpl
jge
call
loop
xorb
decb
repnz
push
aam
dec
pop
inc
pop
bswap
or
cltd
or
stc
adc
push
mov
sbb
in
jae
cmpsl
jno
cmpsb
cld
ja
pop
pop
mov
add
fstps
cmp
jp
std
inc
xorb
fstpl
push
ss
xchg
aas
clc
stc
inc
jl
lcall
inc
push
aas
stc
mov
rorl
movsl
pop
xchg
push
sbb
hlt
addr16
push
loop
sub
and
sahf
sti
or
aam
and
mov
mov
imul
ja
enter
stos
xchg
add
mov
or
dec
jno
adc
dec
in
das
and
loop
call
in
and
jo
aad
test
int3
or
out
jae
shlb
or
jne
cwtl
idiv
aaa
push
mov
loope
jo
movsl
lahf
js
mov
dec
add
jns
lods
and
add
push
fcoml
add
in
or
inc
call
xchg
fidivrl
sti
pop
xchg
push
adc
pop
sahf
mov
stc
cld
xchg
outsb
dec
repnz
loope
mov
aaa
xor
popf
fsubrl
lods
xchg
inc
add
push
dec
fyl2xp1
push
cmp
insb
mov
xor
hlt
inc
pop
jne
jo
jge
movsl
xor
clc
stc
int
js
sti
filds
mov
lods
add
sti
sub
adc
ss
dec
pusha
mov
lcall
mov
xor
mov
pop
andl
enter
mov
fs
nop
addr16
xchg
mov
out
repz
jp
adc
scas
add
mov
insb
cmp
lock
sub
jns
jo
scas
cmp
inc
mov
insb
xor
divb
push
loope
sub
test
loop
sub
popf
int3
orb
and
and
adc
cmp
test
adcb
sahf
js
ljmp
push
adc
xchg
push
sub
adc
jmp
shrb
imul
pop
mov
jo
stos
clc
popf
orl
les
push
mov
adc
pop
pop
incl
ret
addr16
jne
mov
mov
and
daa
or
rcl
mov
out
sbb
addr16
lods
call
or
hlt
cmp
ljmp
or
mov
enter
push
test
xor
xchg
gs
aam
rol
ljmp
hlt
loopne
mov
shll
dec
stc
dec
cmp
mov
test
popa
or
push
fdivr
sahf
xchg
sub
call
in
pop
push
cmpsb
push
ret
mov
jno
xlat
xchg
cmp
shrl
outsb
jb
jl
xchg
flds
or
pop
fmuls
pop
divl
adc
dec
mov
push
cltd
loop
leave
fcomi
or
out
or
cwtl
pop
push
pop
adc
in
xchg
pop
push
cli
push
fistps
sbb
test
inc
repnz
sub
lods
leave
cmp
test
jae
testl
popf
pop
repnz
sub
dec
loop
or
sar
in
fcmovnb
cs
adc
daa
xchg
dec
jmp
dec
out
iret
push
inc
push
sbb
iret
loopne
daa
mov
jb
inc
loope
push
dec
mov
push
xchg
push
or
mov
xchg
inc
push
mov
adc
sub
leave
ror
push
mov
cs
mov
incb
in
dec
mov
gs
stos
adc
call
and
sub
and
dec
sti
push
rcll
jge
stc
shll
bound
pop
ret
add
or
int3
adc
inc
fs
cmp
arpl
icebp
mov
pop
les
sub
leave
mov
rcl
mov
dec
daa
adc
fdivl
pop
mov
dec
cld
lret
cs
movsl
mov
out
push
dec
ja
adc
xchg
xchg
xchg
outsb
mov
mov
test
xchg
sub
inc
call
mov
mov
loop
mov
xchg
mov
push
fidivs
decb
dec
negl
jo
push
lret
mov
mov
out
aam
or
adc
xor
test
add
xor
inc
jmp
pop
imul
xor
and
lods
mov
mov
lds
xor
aaa
movsl
push
pop
mov
movsl
sbb
lret
add
es
dec
xchg
and
mov
out
dec
bound
xchg
test
xchg
sub
mov
mov
mov
push
mov
or
insb
int3
out
mov
pop
into
cmp
daa
inc
mov
orb
adc
cli
pop
dec
xor
adc
add
stos
adc
mov
cwtl
mov
jo
mov
sub
xor
jo
addr16
rorb
adc
sub
mov
insl
push
hlt
xlat
mov
movsb
or
jl
add
rcll
push
js
and
ret
xor
stc
cmp
repz
sti
sbb
cmc
in
dec
push
out
inc
cltd
cs
ja
jo
dec
adc
call
cltd
mov
cld
fisubrl
gs
clc
pop
nop
mov
cmp
enter
jl
pop
push
std
sbb
aaa
ror
cmp
push
insb
or
dec
and
mov
movsb
push
rcr
hlt
lret
fldl
lret
fistpll
out
sbb
mov
out
pop
cmc
stos
jp
popa
in
mov
sub
mov
or
jmp
lock
inc
inc
xor
jmp
popa
sti
add
repnz
or
push
fnsave
scas
push
push
cmc
jg
jecxz
clc
add
das
popl
orl
sub
cmp
fnsave
sbb
out
cli
lahf
pop
dec
xor
mov
dec
dec
push
popf
sbb
mov
jno
add
hlt
in
popf
repnz
lret
fmuls
mov
sbb
xlat
mov
jbe
daa
sbb
faddp
xor
add
pop
mov
out
pop
mov
or
andb
test
sbb
mov
mov
jb
sub
jns
pop
xor
mov
in
pusha
add
push
jg
pop
inc
jecxz
jg
test
mov
fdivp
repnz
pop
repnz
testl
mov
cwtl
test
insb
mov
rorl
xchg
add
scas
mov
pop
add
pop
stos
stc
fnsave
and
dec
pusha
cmp
lret
mov
in
and
stos
pop
push
push
cltd
xchg
shrl
sahf
ds
call
ret
add
dec
out
xchg
xchg
jns
jb
cmpsl
inc
or
sbb
push
call
callw
sub
sub
sbb
dec
add
repz
cltd
test
je
pop
jno
out
mov
xlat
repz
or
in
or
cs
adc
mov
cmp
fbstp
mov
inc
or
add
loopne
mov
jbe
jmp
add
dec
push
sbb
adc
push
push
and
pop
jle
ds
gs
sti
out
out
sbb
xor
aad
fistpl
lea
jo
push
xchg
fistps
rorl
push
ljmp
sbb
cmp
call
inc
mov
imulb
enter
inc
xchg
imul
call
cwtl
cmpl
call
out
adc
and
pop
push
out
jmp
int
or
xchg
mov
mov
outsb
mov
add
push
push
cmp
testb
add
push
or
mov
xchg
shll
mov
test
mov
mov
insb
dec
into
jp
jo
popf
dec
int
mov
jmp
notb
mov
cmpsb
jge
and
xchg
cmp
movsl
mov
and
fldt
cmp
repnz
je
gs
mov
cmp
xchg
inc
push
arpl
repnz
call
lret
negb
pop
popa
or
sbb
repnz
lds
push
insb
outsb
mov
and
fnstcw
rcl
push
push
sbb
mov
rorl
xor
xor
das
sbb
roll
mov
movd
dec
cmp
enter
dec
xor
dec
test
icebp
nop
negl
push
shlb
mov
movsl
pop
shl
scas
cmpb
ret
xchg
jmp
lcall
outsb
ss
pop
into
or
push
add
stos
mov
or
int3
jne
stos
mov
pop
es
sbb
xchg
orb
jns
xor
pop
mov
sbb
das
jnp
popa
fwait
push
dec
aad
addr16
push
mov
inc
aad
sub
and
call
cmp
icebp
imul
mov
scas
ljmp
pop
out
int3
je
test
xchg
jmp
cli
sub
cli
pop
ljmp
sub
loope
and
adc
stos
pusha
push
mov
imul
push
int
pop
lret
nop
loopne
daa
mov
fwait
add
inc
clc
push
mov
push
sbb
push
mov
mov
pop
cltd
ja
lods
jbe
cld
jge
into
mov
scas
pop
add
inc
cmpsl
dec
loop
and
xchg
adc
jmp
insb
ret
jbe
inc
or
mov
adc
insb
and
aam
and
inc
adc
sbb
pushf
xor
fisubs
and
jmp
mov
sahf
mov
cmc
dec
js
dec
test
mov
add
test
stos
lret
jmp
jecxz
cmpsl
cltd
and
xchg
mov
fs
dec
mov
jp
pop
pop
xor
mull
mov
stos
push
jl
fs
mov
xchg
mov
jmp
or
shlb
mov
in
mov
lahf
loope
xchg
sub
lret
in
xor
add
fxch
sbb
int3
pop
out
ljmp
mov
mov
loopne
in
or
loope
pop
mov
lock
enter
movsl
dec
sub
jle
hlt
inc
push
mov
in
pop
aad
enter
mov
fdivs
push
hlt
dec
loop
pop
mov
sbb
daa
pop
xchg
sbb
enter
inc
sarb
sbb
fildl
fidivrl
mov
insb
lea
call
pop
out
dec
sub
pop
jmp
inc
push
add
in
inc
mov
fldl
scas
push
sub
cmp
pop
mov
mov
ss
insb
jecxz
or
lods
mov
fsin
xchg
mov
add
inc
mov
mov
pusha
dec
mov
outsb
ret
or
push
nopl
push
pop
lods
or
pop
inc
pop
stos
enter
ret
push
sub
in
jge
mov
sti
arpl
adc
icebp
sbb
push
jge
or
mov
cmpsl
rclb
mov
mov
inc
or
test
or
mov
repnz
dec
in
rcl
imulb
add
sti
insb
pop
mov
xlat
or
ret
mov
enter
or
pop
lret
aad
or
xchg
out
movsl
or
rclb
sbb
sbb
in
mov
lea
xchg
mov
testb
mov
push
lret
push
addb
sub
xorb
xor
cli
cltd
mov
dec
push
add
cmc
cmp
push
adc
pushl
xchg
inc
push
mov
push
rorb
call
inc
fwait
add
sub
or
inc
rcrb
or
popa
push
lock
mov
cmp
push
or
lret
jge
and
pop
xchg
jle
mov
mov
pusha
add
pop
push
mov
aam
or
adcb
addl
mov
or
cwtl
sub
mov
enter
test
mov
or
adc
jg
jge
sbb
out
lahf
jge
enter
mov
push
lahf
cmp
call
xchg
popa
lock
push
push
test
jb
xchg
stos
loopne
adcb
lock
loope
outsb
jmp
jp
dec
or
mov
rcr
insl
ret
roll
lock
sub
sub
out
stos
mov
sub
inc
adc
jp
push
aaa
pop
sti
rolb
popa
mov
leave
dec
sub
xlat
leave
mov
jo
outsb
mov
cmp
xor
or
push
idivb
lods
fistpl
dec
push
fsubl
out
jnp
mov
leave
push
dec
jb
jmp
push
push
jg
popf
adc
fdivl
cmc
sbb
test
or
pusha
add
jo
clc
rcrb
mov
call
test
loope
pop
push
fldenv
and
sbb
sub
dec
ret
cmp
movsb
imul
mov
je
repnz
push
push
outsl
loop
add
pop
pop
jae
xchg
outsl
add
jnp
daa
fs
push
cmp
push
sti
xchg
mov
dec
add
repnz
sbb
push
xchg
pop
movsl
aaa
or
mov
clc
cmpl
in
aad
push
xor
jp
stos
or
mov
inc
or
dec
test
push
or
jle
dec
fs
rol
fwait
mov
movsl
out
or
mov
jmp
add
sub
jmp
sbb
jne
movsb
adc
xchg
fucomip
dec
add
cmp
xor
inc
jmp
iret
push
int3
aam
mov
mov
dec
cmp
into
cs
vphsubbw
cli
sbb
testb
sub
stos
shl
push
mov
das
dec
test
lret
gs
sahf
sahf
xchg
mov
or
pop
out
in
push
test
sahf
jbe
add
adc
fsubl
shll
sub
jne
mov
adc
testb
out
stc
jae
inc
lret
cltd
mov
add
cmc
in
fwait
lods
enter
jmp
mov
pop
sub
push
call
pop
cwtl
je
xchg
adc
scas
inc
jg
imul
lcall
push
popf
insl
push
mov
jbe
jb
insb
mov
leave
sub
mov
into
add
push
push
pop
push
xorl
mov
cs
or
addb
add
sbb
or
mov
pop
hlt
mov
adc
fcomps
filds
insb
jmp
mov
fistpl
xchg
stc
dec
icebp
and
shrb
mov
pop
pop
movsb
sub
or
loop
clc
loopne
dec
jmp
push
in
mov
imul
pop
movsb
mov
ja
adc
test
or
jl
jmp
cld
mov
jb
les
fistpll
and
enter
inc
mov
mov
pop
cmpsl
mull
das
negl
cmpsl
cmp
cmpsl
subb
scas
pop
stc
xchg
rorb
das
jbe
sub
mov
leave
dec
push
or
mov
xor
xchg
push
sti
adc
inc
push
sub
out
neg
stos
dec
sbb
dec
mov
mov
bound
sbb
sub
inc
leave
mov
jmp
xchg
dec
or
ret
lea
pop
mov
push
dec
cmc
aas
add
cmp
jmp
mov
cmp
push
addr16
pop
or
push
pop
fwait
iret
and
cld
mov
xor
rclb
jge
mov
repnz
pop
cld
lahf
jg
jae
mov
add
cld
test
pushf
mov
mov
scas
pushf
inc
mov
xor
jg
iret
cmc
addr16
int3
dec
shr
adc
xchg
or
xor
out
mov
or
mov
jb
pop
and
or
mov
xchg
mov
sub
mov
dec
cmpsb
test
pop
xor
lods
xor
fistl
daa
xor
xor
data16
mov
scas
dec
xchg
pop
mov
push
les
xlat
cmp
mov
pusha
test
mov
mov
mov
add
pop
test
pop
mov
fdivl
push
sub
pop
out
pop
mov
push
pop
sbb
cmp
mov
sub
push
jmp
mov
scas
add
popf
or
sbb
clc
movsb
nop
jmp
and
mov
cmp
and
or
test
mov
mov
push
stos
mov
js
mov
xor
enter
jb
or
xchg
push
subl
cwtl
or
adc
add
icebp
rolb
sub
faddp
iret
push
out
in
cmp
xchg
cwtl
adc
fldcw
lds
movsl
adc
pop
rolb
ds
ja
rcll
mov
sub
push
test
pop
dec
cmpsl
mov
dec
mov
imul
dec
pop
push
mov
and
inc
mov
lahf
dec
mull
mov
dec
popf
cmpsb
push
cmp
leave
cmpsb
repnz
jl
or
sbb
shrl
aam
imul
pop
dec
hlt
mov
lcall
inc
sub
repnz
stc
xor
subl
add
fistpl
mov
pusha
sbb
and
call
pop
push
and
xor
inc
gs
clc
lret
stc
inc
xchg
loopne
call
sbb
outsb
jmp
pop
outsb
adc
in
inc
or
jge
rolb
int
push
push
stos
popa
sub
pop
nop
outsl
cs
add
stc
pop
dec
pop
inc
xchg
insl
adcb
xchg
mov
das
lret
outsl
xlat
sub
jb
aad
cmp
inc
dec
jecxz
inc
jmp
lods
imull
imul
cmp
mov
mov
push
dec
xchg
xor
out
cmp
pop
stc
jo
ljmp
push
sar
test
in
pop
xchg
sub
rcll
pop
adc
mov
shlb
jmp
mov
testb
push
xchg
lock
jl
cmpsl
jl
mov
daa
mov
sub
enter
or
ljmp
push
fs
mov
pop
int3
jae
sub
push
and
std
sub
mov
pop
mov
pushf
push
mov
scas
jg
pop
jae
jg
inc
pop
add
push
loop
repnz
mov
xchg
lods
adc
push
cmp
push
mov
mov
pop
or
stos
cmp
insb
cwtl
mov
pushf
test
ljmp
cmp
or
loope
mov
mov
cld
pop
negl
pushf
test
ds
mov
int
dec
jge
not
mov
push
xchg
or
cltd
pushf
subb
xlat
jle
out
call
lret
and
jl
mov
sub
or
add
pop
mov
and
ljmp
jo
mov
or
or
push
ljmp
movsb
jp
sub
jo
sub
add
push
pop
jnp
cvtdq2ps
mov
or
push
pop
imul
adc
fdivl
sbb
or
int3
pop
inc
scas
sub
gs
sub
stc
xchg
enter
push
push
bound
push
aas
dec
pop
call
or
sub
jno
mov
iret
jb
scas
std
out
lret
fsubs
aaa
jle
add
pop
dec
out
int
or
cwtl
or
jge
or
movsl
sbb
lock
push
scas
dec
xchg
jae
lcall
dec
sub
sub
insb
push
push
or
shrb
std
or
call
int
xchg
loope
into
mov
adc
outsl
movsb
xor
pop
pop
enter
mov
mov
sahf
repnz
mov
movsb
inc
das
or
insl
xlat
insb
xor
xchg
push
or
jl
loope
out
mov
inc
popf
jbe
lahf
pushf
jmp
daa
push
outsl
push
into
or
lret
sub
js
loop
ret
je
xchg
mov
mov
mov
call
lea
in
sbb
jle
outsb
stos
cli
push
sub
and
pop
push
push
adcb
fadds
mov
insb
hlt
std
dec
dec
out
outsb
dec
testl
xor
xchg
pop
mov
mov
jp
outsl
mov
push
lods
xor
movsl
gs
in
loopne
adc
add
push
jmp
or
clc
fcmovnb
aaa
loope
add
sti
pop
add
inc
or
clc
das
push
xchg
rcrb
sbb
jge
stos
adc
jbe
orl
test
call
or
lcall
shlb
push
call
jmp
pushf
hlt
cmpsw
and
cmp
mov
mov
fcomp
xchg
and
add
xor
push
xor
int3
pop
and
out
xor
xor
pusha
mov
outsb
adc
mov
fwait
lea
cmpsl
mov
call
test
add
fisttpll
fisttpll
sub
das
mov
inc
and
andl
mov
lahf
dec
loope
jb
test
fiadds
aaa
arpl
imul
sarb
scas
lcall
or
jmp
inc
mov
mov
icebp
mov
std
scas
hlt
or
subl
cmpsb
int3
sbb
loop
sbb
aas
dec
xchg
cmp
xor
cmp
js
mov
cmc
xor
imulb
adc
inc
pusha
ljmp
or
mov
cmp
add
mov
sahf
lea
mov
mov
and
pop
adcb
daa
mov
fstpt
stos
lret
jl
add
or
das
inc
mov
cld
and
test
lahf
mov
dec
xor
mov
push
or
inc
ljmp
repz
fcmovbe
orb
clc
subl
sarb
dec
mov
xchg
dec
push
fcmove
cmc
push
mov
push
stos
call
jecxz
add
out
scas
lcall
mov
dec
or
jno
add
dec
jo
lods
sti
jbe
sahf
push
popf
cmp
mov
push
add
sbb
rcrb
add
in
cmpsb
std
subb
orb
les
jno
fwait
hlt
adc
cmp
shlb
or
jmp
lahf
aas
pop
mov
dec
cli
enter
jae
stos
cld
push
and
mov
lods
ret
call
je
hlt
stos
jbe
cld
mov
in
sbb
pop
lods
sbb
pop
pop
pop
dec
in
push
add
repz
pop
and
cmp
mull
mov
xor
andl
adc
push
push
mov
mov
or
sbb
jb
into
imul
xor
sarl
leave
into
ret
aas
or
insl
push
pop
in
mov
pop
aad
mov
popa
or
fistps
shrb
outsb
mov
pop
push
jb
jmp
dec
pop
adcb
hlt
sbb
push
mov
call
inc
adc
and
push
sbb
mov
mov
les
xor
iret
ret
fistps
jl
mov
push
add
fdivl
add
imul
cmpsl
xor
ljmp
in
imul
sub
ds
jbe
call
add
test
dec
adc
push
lods
push
dec
or
add
mov
icebp
lcall
cmpsb
icebp
testb
fsubr
mov
pop
pusha
or
pop
sbbb
int3
dec
mov
int
bnd
arpl
scas
pop
and
fldl
cmpsb
movsb
retw
inc
cmp
add
call
loopne
call
push
inc
daa
sub
mov
insl
cmp
push
lods
cmp
cli
lret
jmp
inc
adc
sub
mov
in
add
ljmp
jno
add
fwait
icebp
cwtl
and
jb
push
insl
mov
jmp
xor
lahf
push
adc
in
dec
hlt
out
jg
ljmp
pop
fidivrl
in
push
aam
lods
movsb
fwait
mov
add
mov
cwtl
cltd
mov
nop
push
jb
mov
push
xchg
es
sbb
push
pop
dec
or
clc
mov
call
pop
jne
repnz
js
jmp
mov
dec
ljmp
add
add
or
xchg
xor
sub
push
inc
pop
sub
push
fdivl
mov
ret
cmp
cmpsl
adc
dec
xor
xchg
pop
mov
pop
rcrb
imul
stos
js
mov
decb
add
sbbb
or
mov
xrelease
sub
dec
lock
xchg
mov
xchg
dec
stos
xor
scas
or
or
stc
cmp
sbb
or
adc
jp
std
scas
notb
cld
mov
push
pop
shll
lea
decl
daa
loop
pop
comiss
orl
les
mov
jl
pushf
fwait
stc
inc
dec
leave
pop
sbb
call
sbb
sti
lret
or
and
aad
das
nopl
addl
pop
mov
jns
push
cmc
insl
or
pushf
jmp
mov
push
push
mov
pop
sti
addl
sbb
inc
ret
int
sub
loope
xchg
mov
push
xor
mov
xor
stos
aas
dec
xchg
inc
xchg
stc
jp
and
movsb
pop
scas
shr
flds
test
mov
push
mov
push
add
arpl
and
dec
movsb
cmpsb
jno
movsl
neg
sub
jno
push
push
testl
outsb
pop
xchg
adc
add
es
lcall
test
jns
xchg
pop
enter
rcll
dec
dec
leave
cmc
aad
out
test
rcl
shl
insb
mov
sub
repnz
imul
cmp
add
pop
sbb
scas
shll
xchg
mov
sbbb
xchg
mov
sbb
cmp
jno
pushf
enter
adc
aaa
rcl
jno
jbe
dec
xor
jns
aam
add
lcall
sahf
push
jne
or
aam
adc
into
ja
js
lcall
mov
jnp
fwait
jecxz
jmp
fisttpll
or
lds
mov
xchg
push
lds
jns
xor
sub
inc
imull
mov
outsl
or
ljmp
and
repz
int3
inc
mov
and
xor
outsl
xlat
add
hlt
sub
xor
outsl
popf
in
mov
faddl
scas
in
repnz
pop
push
ljmp
cmp
or
fmull
loop
dec
loop
test
sub
jbe
lret
clc
int3
sub
mov
inc
dec
push
add
push
lods
insb
push
mov
mov
sub
mov
jbe
mov
movsb
jno
add
and
mov
or
jecxz
out
pop
out
fiadds
mov
pop
pop
fdivrl
imul
in
pop
repnz
or
jecxz
inc
push
mov
sbb
test
mov
fidivs
xchg
jle
in
lea
cmc
popf
sub
mov
mov
push
cmpb
sbb
test
push
dec
xchg
rclb
call
scas
lahf
shll
mov
orl
mov
fidivl
cmp
or
in
frstor
mov
or
adc
movsl
or
adc
jo
push
or
mov
sbb
and
int3
push
in
ljmp
cmp
add
xor
popf
cs
pop
xor
nop
imul
cwtl
jmp
cmp
mov
push
mov
rep
lret
pslld
jle
jbe
mov
jno
call
inc
mov
and
out
cli
and
jb
push
cwtl
fistps
inc
jge
xchg
shlb
lea
pusha
mov
mov
daa
not
mov
dec
js
push
mov
jmp
or
out
popf
ljmp
stos
adc
cld
insb
mov
jnp
pop
jns
leave
ss
jne
adc
mov
cmp
or
push
pop
jmp
dec
add
inc
fcomps
push
dec
sbb
dec
cmpsl
adc
adc
inc
inc
cli
out
mov
call
mov
clc
testb
mov
or
sbb
and
enter
idivb
xor
mov
in
orb
push
push
pop
mov
pushf
ss
jl
or
jecxz
ret
adc
cmp
or
push
mov
lret
rcll
or
mov
int3
jo
ss
shr
push
mov
test
mov
and
add
outsl
movsb
decl
adc
repz
mov
inc
pop
sbbb
pop
rcll
pop
mov
xor
push
hlt
lods
hlt
das
inc
xchg
jg
adc
mov
rolb
mov
sbb
cltd
mov
mov
loopne
mov
outsl
push
push
les
loop
pop
add
mov
pop
stos
and
in
push
icebp
jmp
inc
dec
nop
mov
dec
mov
push
jo
rolb
add
jmp
popa
aaa
clc
scas
push
mov
push
push
js
xor
pop
inc
test
add
jmp
pushf
mov
adc
mov
dec
leave
inc
icebp
outsl
sbb
int
mov
xchg
call
fistps
lret
or
je
push
add
loope
aas
add
int3
xchg
int3
pmulhw
repz
dec
xchg
jl
pop
pop
call
out
hlt
jo
cmp
test
mov
jl
mov
or
xlat
in
pop
cwtl
idivl
xor
sub
or
pusha
xlat
leave
out
push
paddd
push
mov
mov
mov
lds
adc
cli
jmp
movsl
push
lret
pop
pop
xlat
and
push
pusha
inc
negb
inc
push
ljmp
jne
pop
xchg
dec
pop
pop
cs
fistpll
mov
jle
add
popa
inc
add
andl
cwtl
cmpsl
arpl
pop
inc
or
cmp
cmpsb
jge
hlt
shrb
inc
icebp
cs
xchg
into
jge
and
lret
mov
sbb
inc
popf
jne
es
adc
mov
mov
insb
xchg
aam
shr
jp
es
jmp
rclb
adc
inc
mov
rclb
dec
pop
mov
xchg
jne
arpl
sub
xchg
jb
jmp
iret
sbb
add
push
icebp
sbb
cmpb
call
das
mov
mov
mov
rorb
xchg
xor
mov
mov
mov
push
pusha
call
std
repz
and
in
addr16
lods
loopne
sub
enter
xor
mov
hlt
pop
xor
rcrb
inc
pop
push
call
mov
lea
hlt
mov
jmp
xor
jmp
add
sbb
ret
je
dec
mov
mov
jb
lret
xor
push
jne
lock
jmp
rcr
insl
dec
shr
int
inc
stos
ror
in
push
xchg
call
lcall
jp
push
add
pop
push
sub
fistpll
sub
push
push
jo
jg
fidivrs
mov
imul
sbb
adc
cmp
jno
push
cli
hlt
mov
stos
in
call
pop
movsl
push
jmp
pop
sahf
mov
cwtl
mov
sbb
hlt
mov
jmp
dec
in
xchg
dec
jne
jns
inc
jb
aaa
dec
bnd
mov
sti
call
lock
dec
push
add
popf
mov
mov
sub
inc
add
scas
lret
stos
inc
or
nop
pop
loop
dec
ret
add
shlb
mov
das
mov
data16
jmp
sub
aam
cli
daa
push
ss
jg
inc
xor
jmp
mov
lret
push
push
lds
lret
dec
cwtl
jmp
add
push
inc
mov
call
rolb
fsubrl
mov
adc
test
dec
lods
sbb
test
and
push
dec
jmp
inc
sub
mov
popf
rcrl
sbb
jmp
push
lret
xor
xor
popf
sti
push
add
mov
mov
or
call
mov
jecxz
jecxz
push
pushf
sbb
in
dec
xorl
jno
mov
shr
ljmp
call
mov
jno
pop
mov
xor
dec
mov
sub
lret
cmp
pop
xchg
rcrl
add
lret
dec
pop
leave
inc
stc
das
push
inc
jg
mov
ja
inc
mov
push
jmp
jno
cmp
pusha
xorb
stc
data16
andl
mov
repz
les
in
mov
or
fistpll
mov
int3
and
fstl
sbb
mov
cmp
or
dec
add
and
sub
mov
pop
mov
pop
nop
in
lret
out
outsb
sbb
lea
dec
mov
ret
or
mov
dec
adcb
push
cli
ror
mov
inc
mov
insb
and
lods
push
cmpsl
fidivrs
mov
dec
adc
or
jb
pop
adc
fldenv
jge
ljmp
rcrb
lods
jmp
sahf
dec
fidivrl
pop
push
pop
das
sub
bound
add
mov
sbb
outsb
lcall
inc
popf
fbld
hlt
popf
pop
icebp
mov
lods
std
xchg
fisubrl
jmp
clc
les
dec
aad
jle
push
popa
nop
pushf
add
push
sub
cltd
sbb
mov
pop
jae
mov
repnz
jmp
and
outsl
jne
sbb
add
int3
jmp
lahf
shlb
aad
mov
in
scas
pop
repnz
clc
insb
leave
or
test
mov
pop
cmp
push
xlat
jecxz
or
lds
ja
jge
mov
mov
cmpsb
jmp
aas
push
popf
ljmp
xchg
cwtl
mov
in
aam
int
inc
or
sbb
fstps
divl
mov
jbe
lahf
adc
jne
mov
mov
mov
nop
loope
add
bound
and
or
call
rcrb
idivb
mov
mov
movsl
push
sub
enter
or
fst
push
daa
stos
add
lret
sub
push
imul
and
mov
stos
mov
js
cwtl
mov
push
jl
dec
pop
lahf
xor
add
dec
dec
pop
xor
xchg
adc
xor
push
xchg
ja
pop
add
mov
sub
and
push
fldl
jb
cwtl
jge
push
loope
sub
push
jge
mov
mov
dec
outsb
and
ret
jge
or
loop
orl
call
repz
xchg
push
add
mov
flds
fcmovbe
adc
jle
jmp
insb
xor
lea
sti
sarl
ret
push
int
enter
repz
mov
add
inc
and
leave
and
call
vpsrlq
inc
add
aas
xchg
icebp
enter
nop
mov
pop
pop
jae
data16
lods
stos
mov
outsl
je
jl
das
mov
lock
sar
clc
or
adc
cwtl
xchg
pop
inc
xchg
shll
ljmp
push
pushf
mov
fld
icebp
jmp
dec
sub
loop
pop
in
xchg
icebp
jecxz
ret
adc
mov
and
lahf
inc
shr
mov
pop
push
xchg
outsl
movsl
insb
aas
es
jmp
sbb
fcomps
out
adcb
loop
cmp
lahf
pop
addl
sub
addr16
mov
fstl
fdivrl
pop
mov
dec
mov
pop
mov
clc
addr16
push
jmp
movsl
roll
xchg
addb
inc
pop
dec
shll
add
xchg
pop
sbb
inc
jl
inc
push
cmp
or
inc
data16
push
sub
mov
sbb
xorl
and
imul
mov
shrb
insb
adc
sub
push
lcall
test
xor
mov
callw
pusha
or
mov
das
add
cmc
sub
mov
pushf
sub
mov
faddl
or
adc
dec
jo
aam
test
std
and
mov
les
or
mov
push
aad
cmp
push
jo
idiv
xchg
push
mov
cmp
or
mov
js
and
out
add
pusha
faddl
lea
inc
imulb
mov
shr
ret
mov
jb
push
shl
andl
mov
mov
int
js
sbb
call
pop
xchg
repnz
cmp
add
stc
lock
and
sbb
xchg
or
int
sub
xor
add
subb
repz
inc
aad
repz
mov
sub
inc
and
hlt
mov
roll
es
add
fstps
xlat
dec
xor
testl
dec
into
rclb
xor
test
int3
dec
adc
mov
aam
push
jmp
ja
notb
or
cmpsl
stc
jge
ja
jmp
imul
mov
lods
dec
add
or
mov
inc
cmc
jo
cs
icebp
sti
pop
shr
mov
mov
test
cwtl
push
jl
or
or
mov
add
mov
adc
dec
fstp
dec
mov
lods
add
push
mov
cli
jecxz
jle
rcl
add
jge
shll
or
insb
mov
gs
stc
shrl
outsb
mov
xor
or
pop
mov
and
mov
cmpsl
cmc
jnp
cs
outsb
add
jmp
mov
or
jns
xchg
fcomi
cltd
jmp
divb
pop
mov
xor
lods
ret
mov
push
or
pusha
repz
mov
repnz
sub
imul
xor
clc
or
in
jmp
dec
sahf
sub
addb
test
out
iret
add
stos
inc
insb
dec
pop
mov
fdivs
shl
mov
dec
pop
push
add
repnz
std
adcl
insb
and
xchg
jno
adc
dec
inc
pop
incb
and
and
aaa
and
jmp
fwait
icebp
sub
pop
lods
fists
movsl
dec
jle
or
sahf
adc
pushf
xlat
dec
cmc
mov
add
mov
jo
addr16
add
pop
shrl
minps
int
xchg
cmp
mov
or
out
mov
popf
xor
jne
inc
ljmp
repz
add
jb
adc
stos
js
or
cmpsb
lret
pop
pop
dec
xchg
div
stos
mov
stos
jge
lock
push
mov
test
mov
jo
lcall
xor
xlat
pop
sub
pop
mov
add
mov
mov
cltd
pusha
test
sbb
int3
jo
fdivrs
mov
sbb
cs
repnz
jl
jo
mov
xchg
xchg
daa
mov
iret
push
mov
pop
push
pop
cltd
dec
outsb
dec
xchg
sbb
xor
push
mov
fwait
or
rcr
int3
bound
or
lret
pop
or
shrl
fcomps
addr16
scas
inc
push
lahf
dec
or
adc
aam
push
popa
jae
aaa
xchg
jg
fsts
pushf
xor
jle
neg
shlb
sub
or
out
pop
mov
inc
pop
sbb
sbb
jl
lea
mov
popa
push
add
jl
or
movsb
aad
bound
push
push
popa
jl
fstpt
sbbb
push
xor
add
repz
scas
mov
jae
dec
cmp
mov
inc
push
sti
lahf
rorb
stc
xor
mov
mov
add
mov
push
cmp
sub
cltd
xchg
ja
and
sub
xor
call
jl
dec
aad
shlb
mov
or
dec
call
push
out
push
push
mov
push
rclb
ja
lret
pop
jno
push
sub
stc
fiaddl
add
cwtl
xchg
gs
cmp
pop
mov
push
lea
shl
cmp
rcrl
mov
popf
adc
nop
sbb
xchg
inc
or
adc
sbb
dec
cmp
repz
sub
out
xchg
inc
roll
js
mov
iret
xor
popf
pop
add
test
outsl
or
mov
jns
mov
push
dec
testl
ljmp
add
loop
mov
mov
pushf
pop
repnz
mov
push
scas
out
adc
pop
mov
mov
push
mov
ret
jmp
bsf
or
jno
daa
jmp
call
mov
jno
or
enter
ljmp
outsl
pop
xor
out
shlb
dec
sub
ficompl
outsl
pop
add
pop
cmp
push
pop
and
outsb
adc
push
push
dec
xchg
and
ljmp
inc
cltd
in
mov
imul
repz
sar
shr
sub
testb
push
jns
push
sub
push
and
add
or
mov
xchg
repz
cli
xchg
mov
sbb
or
lahf
xorl
dec
outsl
es
dec
stos
mov
pop
loop
fsts
push
lock
xchg
adc
xor
call
sahf
or
mov
imul
popf
testb
xchg
loope
dec
adc
jb
xchg
int3
xor
cmp
stos
lods
xlat
jmp
xchg
jle
xor
xor
xchg
mov
call
push
add
out
stc
stc
stos
pop
leave
lret
call
in
mov
nop
data16
ljmp
or
std
pop
push
or
pusha
rorb
es
dec
lcall
shll
or
dec
jl
dec
and
fadd
sete
cmc
dec
iret
mov
cltd
xor
subb
add
bound
inc
xchg
xchg
fcoms
sub
or
cmc
pushf
shlb
ret
test
stc
lahf
xchg
xchg
and
dec
sti
js
stc
lods
mov
or
repnz
push
add
aad
and
sbb
icebp
push
cli
adc
jmp
push
std
or
cld
jp
mov
fsubrl
fimull
jge
xchg
aad
lds
push
push
mov
and
out
jl
orl
sar
jne
hlt
aad
repnz
adc
mov
mov
daa
mov
jl
clc
jmp
dec
xchg
lods
icebp
retw
inc
xor
lret
and
add
int
dec
test
pop
add
lret
lahf
pop
ljmp
call
cs
push
mov
xor
aaa
mov
push
mov
shrl
sub
push
sbb
test
cmp
jl
push
ja
pop
sbb
mov
mov
popf
dec
xchg
test
inc
stc
sbb
sahf
lret
push
mov
cmpsb
int
out
movsb
cltd
xor
mov
icebp
mov
movlps
mov
call
neg
or
dec
mov
mov
test
inc
pop
cli
jne
cltd
adc
mov
and
xor
push
stc
les
pop
or
icebp
jmp
push
add
in
xor
or
xchg
push
cwtl
outsl
sub
jo
or
and
into
mov
insb
lret
das
cmc
sbb
dec
mov
jg
test
cmp
mov
adc
mov
mov
cli
mov
daa
divb
inc
mov
adc
jmp
adc
cld
popa
xor
jb
inc
add
pop
sbb
nop
xlat
fwait
push
mov
lret
dec
adc
roll
or
stos
xchg
sbb
out
cmp
mov
fldcw
pop
aas
arpl
xchg
mov
mov
mov
or
or
add
cmp
ja
psubd
idiv
insl
push
cmp
push
shll
push
fs
cmp
adc
fwait
ret
fnsave
mov
ss
sub
add
xorb
mov
jmp
shlb
loop
xchg
sub
sub
inc
incb
lds
dec
js
xchg
mov
clc
push
in
cmpsb
testb
jo
dec
ficomps
test
mov
pop
push
cmp
sbb
adc
movsb
es
cld
imul
cmp
dec
pushf
xor
cmp
jmp
mov
call
mov
aaa
pushf
rorl
add
cmc
dec
lods
jp
int
fnstenv
negb
or
ds
rolb
int
sti
dec
sub
push
pop
add
pop
lock
and
or
or
cmp
lods
xchg
jl
int3
add
movsb
icebp
inc
push
sub
sub
aam
jecxz
jb
call
mov
daa
jo
push
in
push
sbb
or
xchg
inc
popa
lods
push
mov
mov
ljmp
fisubrs
lds
sub
inc
not
stc
cmpl
mov
xchg
mov
cmp
xchg
fstps
push
inc
xchg
push
cltd
sub
lcall
test
rclb
out
or
fistpll
test
cmp
mov
cmpsl
jae
lret
in
pop
in
fistpll
fs
xchg
rcl
push
test
lret
iret
push
dec
mov
clc
xor
cmp
and
or
jo
mov
cmpb
call
sbb
dec
sti
dec
cmc
xor
sti
shll
pop
test
and
lahf
lea
jle
sub
mov
inc
imul
roll
jns
test
and
testl
pop
sti
xor
mov
sub
or
pop
xlat
or
out
rorl
push
movsl
mov
jne
xchg
inc
xor
mov
call
lret
repz
testl
add
aam
lods
int3
imul
add
sti
insb
leave
xchg
fidivl
test
imul
mov
call
add
xchg
xchg
dec
scas
pop
sub
or
ja
cmp
int3
sub
fdivl
jb
or
in
xchg
push
sbb
loop
push
inc
add
mov
shrb
les
in
mov
dec
fwait
shll
loope
loopne
hlt
sub
push
sbb
pop
dec
add
pop
sbb
movsb
int3
push
out
scas
pusha
pop
mov
cmpsb
hlt
jns
repz
or
lods
sbb
pushf
add
pop
pop
mov
dec
push
push
cmp
movsb
mov
mov
and
sbb
push
mov
sub
mov
sbb
lds
imull
push
mov
test
jne
inc
pop
movsb
data16
mov
test
shll
or
neg
packssdw
and
and
mov
add
adc
inc
sbb
or
mov
add
stos
cltd
inc
repz
pop
push
data16
mov
inc
or
dec
cmpsb
mov
jl
out
jns
jecxz
pop
lret
rep
ret
ja
jg
ret
stc
inc
imul
lods
mov
outsl
mov
mov
pusha
xor
push
dec
call
mov
jnp
push
lahf
pop
pushf
push
fisubl
xor
mov
enter
dec
jns
jmp
push
ja
test
loope
dec
and
das
jmp
push
aam
imul
jno
jecxz
jl
mul
pop
mov
int
in
adcb
cmpsl
pop
jle
inc
dec
sub
inc
lea
pusha
lret
loopne
push
insb
and
lds
scas
adc
mov
adc
pop
mov
and
fsts
ljmp
push
loope
lds
mov
mov
sbb
mov
or
add
or
mov
mov
in
popa
gs
and
int3
or
xorl
aam
mov
ret
push
adc
fwait
test
pop
cltd
or
fisttps
es
scas
cmp
jmp
cmpsl
and
push
aas
repz
sbb
add
lods
stc
pshufw
test
pop
mov
sub
lods
xor
lock
lahf
nop
addl
adc
icebp
cmpsb
jl
xor
xor
jno
movsl
mov
je
insb
popf
outsb
mov
xchg
inc
mov
cmp
inc
jmp
dec
jmp
test
sbb
xchg
mov
xchg
xchg
ja
mov
orl
pop
movsl
and
rorb
sbb
mov
test
and
std
sub
adc
test
je
mov
loopne
sub
dec
sub
mov
sub
or
and
mov
movsl
pop
mov
pop
inc
es
lds
mov
or
out
and
pslld
shr
sub
or
mov
xor
adc
pop
push
inc
mov
sub
jns
stos
mov
push
jg
aas
adc
fldt
mov
mov
sbb
cmp
jp
sbbb
call
mov
jmp
fmulp
sub
adc
xor
gs
in
in
and
mov
jmp
ljmp
jae
jne
inc
push
loope
cmpsb
push
sti
aam
cwtl
shrb
shll
xchg
xor
mov
push
pop
dec
lods
sar
fisubs
ret
pop
adc
jge,pn
pop
inc
movsb
in
rclb
mov
xlat
addr16
sahf
push
scas
xor
lea
mov
in
stos
sahf
or
aad
cmp
popf
stc
push
gs
cmc
sub
fistps
repnz
movsl
call
jmp
push
adc
lods
adc
mov
call
xor
jnp
sub
std
lahf
or
sti
sbbb
bound
mov
sbb
mov
pushf
cld
je
pop
fmul
aam
lods
in
pop
es
and
sarl
or
scas
mov
rcr
jle
imul
repz
jne
adc
test
push
mov
pop
cmc
aam
sti
cltd
sbb
mov
nop
or
stc
push
ds
adc
test
fcmovnbe
push
in
repz
xor
xchg
stos
dec
sub
jo
xor
push
jecxz
pushf
inc
xchg
lea
ret
mov
mov
cmp
mov
icebp
mov
xor
hlt
jl
inc
sbb
dec
mulb
rcll
or
adc
jge
mov
leave
or
push
cmp
notb
out
mov
pusha
push
jmp
jnp
ret
sub
inc
stos
and
les
test
mov
call
nop
adcb
pop
pop
mov
insl
stc
lcall
incl
sbbb
mov
lret
dec
inc
adc
shrb
xchg
out
push
push
mov
addr16
jno
stos
movsl
iret
mov
mov
call
in
loopne
or
mov
aas
lahf
in
pop
jmp
fidivs
xlat
and
push
xor
decl
mov
xor
je
cmpsl
out
push
or
push
adc
xchg
js
jmp
jmp
mov
lods
jl
mov
popa
cmp
adc
cmp
mov
in
ret
adc
jnp
fwait
ljmp
inc
ds
push
call
mov
loopne
dec
adc
test
fmuls
fistpll
rcll
xorl
xor
call
rcrb
sbb
les
cltd
mov
and
and
jb
xlat
mov
lcall
push
rep
sbb
mov
rcll
out
push
sti
cmp
ja
in
pop
fidivrl
shlb
addr16
fmull
mov
orb
int3
jbe
inc
push
arpl
add
lahf
popa
jno
xchg
or
loopne
lret
ror
dec
pop
das
lahf
mov
sub
xor
iret
sarb
popf
push
mov
jmp
sub
cmp
lea
cmp
dec
out
mov
push
sub
pop
cs
rcrl
add
or
cwtl
mov
xchg
or
push
sbbb
in
xchg
add
shll
call
das
clc
inc
repnz
xor
inc
cwtl
push
rcrl
mov
mov
jb
mov
mov
jge
popa
mov
jae
leave
int3
pop
xor
and
sub
orl
dec
mov
push
xchg
pop
mov
or
mov
or
rorb
xchg
imul
lret
cli
cld
xchg
add
mov
sbb
jle
pop
fdivr
jb
dec
inc
rol
in
add
mov
jmp
mov
dec
es
aas
xchg
ss
inc
pushf
imul
stos
notb
dec
test
call
adc
jmp
mov
jno
add
mov
push
mov
iret
dec
cld
dec
xor
jmp
fcoms
jp
call
xlat
mov
jns
repnz
xorb
adc
cli
das
insb
or
mov
int3
in
popa
push
outsb
mov
and
stc
loope
aad
inc
mov
mov
jbe
es
div
mov
and
cmc
add
sub
cs
movb
cmc
stos
mov
cmovl
test
mov
xchg
add
lret
pop
ret
test
xorl
test
xchg
stos
shrb
out
popf
into
call
mov
roll
mov
popa
jnp
repz
and
jg
shrl
mov
imul
and
sti
mov
push
pop
mov
in
mov
ret
testl
inc
insl
jo
aad
xchg
hlt
ret
dec
mov
sub
mov
or
sbb
cmp
mov
movsl
sub
mov
xchg
popf
xchg
ss
pop
sub
sbb
mov
inc
push
jmp
shl
mov
dec
jbe
cwtl
cmp
dec
stc
xor
inc
in
mov
das
popf
addb
call
shl
add
xor
mov
movsb
xchg
fmuls
xorl
test
and
add
stc
lock
jns
mov
push
xchg
add
inc
pop
and
pop
ds
mov
enter
repnz
jae
movsl
cltd
jae
aad
data16
data16
add
sub
dec
cli
mov
repnz
hlt
call
jle
push
lahf
or
adc
jle
loopne
lods
or
mov
hlt
or
xchg
jge
hlt
and
and
flds
mov
das
lods
xchg
add
cmp
push
xor
jo
das
add
leave
pusha
cld
movsl
pop
cmp
xchg
sbb
push
subb
xor
pop
in
xorb
or
mov
dec
call
cld
cs
lds
lahf
add
push
data16
dec
jmp
out
push
cld
mov
stos
pop
pop
lock
or
cmp
call
out
mov
ljmp
fistl
and
and
imul
call
repz
mov
xor
sti
and
mov
or
jb
loope
enter
add
out
dec
cmc
mov
mov
call
push
dec
jp
pushfw
pop
sub
aaa
sbbb
mov
sbb
out
sub
out
or
pop
mov
mov
call
pop
jmp
push
jmp
fwait
dec
out
aad
xchg
scas
xchg
call
adc
into
push
xor
jbe
in
jno
andl
lss
mov
scas
lahf
mov
dec
add
ds
sbb
add
xor
arpl
insl
bts
mov
pop
push
dec
sbbb
xchg
hlt
adc
loop
and
pop
ss
js
add
movsl
add
sub
mov
lcall
jnp
pop
fbld
mov
inc
xchg
mov
aad
jb
mov
les
push
les
inc
jno
int3
in
jnp
stc
or
jno
jns
daa
in
xlat
nop
cmpl
int
sbb
fsts
std
icebp
call
mov
adc
fcmovnb
lahf
iret
jbe
shlb
nop
mov
sbb
xor
insl
cwtl
xchg
out
jmp
mov
sbb
xor
jb
rolb
icebp
shll
daa
out
sbb
pop
or
ret
push
loope
xchg
xchg
ret
out
sbb
and
int
mov
inc
push
mov
xchg
ret
mov
xchg
insl
lea
int3
pop
add
mov
adc
in
jne
ret
out
mov
pop
xchg
cli
mov
pop
lea
push
into
xor
adc
xchg
lcall
imul
rorl
imul
add
dec
push
rcrb
adc
mov
or
pop
call
xor
xchg
jmp
add
repnz
inc
mov
dec
jb
mov
or
dec
in
sub
aad
or
std
cmpb
insb
sbb
add
sub
adcb
bound
adc
pop
push
ret
dec
xlat
mov
mov
leave
lods
sbb
or
fldcw
clc
xchg
push
mov
adc
pop
in
mov
imul
int
lods
dec
lock
rorl
adc
push
call
cmc
sbb
stos
or
sbbl
and
repnz
shrb
cmp
or
jae
jne
adc
ljmp
or
jmp
jb
mov
loopne
mov
insb
mov
imul
xchg
add
lods
inc
cmp
pop
mov
cmp
push
test
test
mov
jb
push
jecxz
sbb
cwtl
leave
mov
sub
or
mov
push
add
fwait
cmpps
jg
mov
ja
jae
clc
xor
mov
pushf
mov
aas
pop
cmp
ljmp
add
pop
sbb
mov
sbb
xchg
xor
or
adc
mov
push
push
or
insl
fwait
mov
xor
lods
dec
jo
push
mov
pop
or
cmc
mov
jb
daa
sbb
ja
call
fidivrl
mov
sbb
addl
sub
loopne
sbb
in
xchg
sbbl
push
or
cmp
jl
cmp
sti
test
lret
inc
mov
dec
mov
lea
sti
push
fisubl
cmpsb
push
mov
sub
xchg
lret
ljmp
inc
inc
mov
jmp
call
or
out
mov
mov
push
push
leave
data16
rclb
repz
dec
cs
aaa
loop
pop
movb
cmp
xchg
sub
fisubrl
adc
mov
inc
mov
push
dec
sub
movb
rclb
enter
push
notl
push
shll
jmp
lret
adc
sub
scas
jo
out
rorl
push
test
and
mov
jge
cmp
sub
xorl
cld
mov
orl
andb
test
adc
and
jmp
inc
push
call
jb
add
mov
adc
adc
jns
mov
dec
call
mov
shr
jle
mov
cmpsb
mov
mov
insl
hlt
rorl
test
pop
xorb
mov
dec
dec
pop
mov
mov
push
enter
test
andl
sbb
dec
jnp
mov
mov
out
sub
mov
and
loop
add
push
cs
xchg
hlt
lods
psubb
mov
ret
insb
sbb
nop
fadds
lods
adc
or
fwait
movsb
decl
fsubl
addb
orl
movsl
xchg
shrb
or
aam
cmpsl
xchg
adc
clc
push
lds
fdivs
arpl
nop
mov
daa
and
lea
mov
popa
lahf
push
dec
test
fucomip
ffree
repnz
sub
jmp
xchg
imul
mov
mov
or
jmp
aam
inc
popf
pop
subb
fcoml
int
std
xchg
xor
test
test
lahf
js
or
call
jge
aad
push
ffreep
add
stos
lds
adc
jle
pop
mov
mov
jmp
out
xor
movsl
popf
imul
test
ret
faddp
mov
insb
or
and
mov
cmpps
or
out
sub
daa
stos
mov
inc
push
jb
call
pop
sbbb
int3
testl
mov
add
int3
or
mov
daa
sub
add
call
pop
popf
sbb
xor
dec
stc
neg
idivl
pop
xchg
xor
mov
jp
test
xchg
xchg
sub
jae
enter
push
push
mov
jg
jmp
stos
mov
jle
or
mov
cmp
mov
adc
xchg
dec
js
notb
cmpb
adc
cmp
pop
mul
sti
jle
dec
lcall
in
add
and
adc
movsb
enter
lea
movsl
or
fisttpll
repnz
jo
movsl
inc
movsb
imul
aam
fcmovu
iret
icebp
into
inc
pop
pop
xor
fstpl
test
jmp
xchg
adcl
mov
movsb
cmpsb
das
dec
mov
sub
insb
jmp
imul
fstl
cmp
cmp
cmpsl
clc
adc
data16
je
out
mov
scas
or
ret
hlt
sub
pop
mov
sbbb
xor
jns
data16
dec
mov
inc
push
mov
cmpsb
xchg
push
sub
jne
sbb
test
mov
mov
xchg
lahf
ss
cmp
jl
inc
sti
lcall
orb
jl
mov
mov
sarb
add
idivl
inc
jmp
std
outsl
ljmp
stos
les
add
into
ljmp
mov
rclb
and
and
sub
leave
mov
arpl
addb
pop
jno
jmp
mov
loop
lods
inc
xchg
jge
mov
pop
inc
mov
test
inc
out
inc
pop
xlat
add
inc
mov
ja
aam
dec
mov
cmpsl
mov
loopne
fwait
es
ffreep
cmpsb
aas
mov
cmpb
jge
cmpsl
loop
mov
push
jb
loopne
pop
dec
fists
and
lcall
mov
mov
cmpsb
adc
sub
mov
int3
xorb
inc
dec
mov
add
pop
dec
bound
sub
leave
stos
mov
sub
fldl
mov
ljmp
pop
into
mov
or
leave
lock
xchg
add
pop
js
mov
sbb
push
mov
adc
shr
cmp
movsb
test
mov
inc
hlt
ret
cmpsb
dec
mov
fsubl
repz
aaa
lahf
or
or
inc
aas
repnz
mov
call
pop
mov
push
adc
and
cmpsb
push
and
add
in
dec
inc
scas
lret
inc
or
dec
call
inc
lock
or
ret
outsb
mov
ljmp
jmp
or
xchg
cmp
push
mov
icebp
push
sbb
mov
xlat
data16
sbb
aaa
cmc
push
test
xor
aaa
adc
mov
xchg
push
cmp
or
test
incb
xchg
das
cmp
std
add
xor
dec
or
pop
imul
sub
mov
out
in
cld
push
pop
cmpsl
rcr
lds
aam
fcompl
fcoms
sbb
dec
jo
cltd
pop
mov
xor
iret
scas
in
mov
into
call
aaa
push
jle
scas
mov
dec
pop
cwtl
sub
insl
mov
sub
cmc
pushf
jg
stos
adc
cmpl
push
inc
jl
insl
sbb
inc
sub
xor
cwtl
mov
mov
mov
out
push
jne
loopne
and
sti
fmuls
rcll
adc
nop
push
popa
mov
not
xor
mov
inc
push
imul
xor
xchg
sti
and
dec
call
out
cmp
or
push
stc
mov
lock
rcll
pop
and
ljmp
inc
sub
dec
or
mov
bound
push
hlt
rcll
ljmp
pop
jmp
popa
jge
stc
jge
or
lods
test
iret
and
mov
fs
cwtl
fldcw
push
mov
push
cmc
mov
mov
jbe
mov
pop
call
lds
xor
les
pcmpgtd
cmp
movsb
and
lock
ss
mov
pop
and
adcl
dec
ljmp
xchg
filds
dec
ja
ss
wrmsr
shlb
jo
or
add
in
shll
push
lahf
inc
dec
add
and
test
mov
jae
pusha
call
jmp
xor
sub
dec
movsb
jno
pop
cmpl
inc
test
or
repz
outsl
and
mov
and
es
int3
jecxz
sub
in
mov
rep
cmp
dec
mov
xor
negl
mov
push
and
mov
push
icebp
xchg
inc
dec
sarl
push
dec
jmp
sub
xor
test
inc
mov
jns
fdiv
add
imul
stos
dec
ret
shlb
hlt
add
clc
xchg
or
imul
pop
fldt
sub
xchg
jbe
pop
mov
repz
lods
fisubrl
mov
inc
cmp
mov
lcall
jnp
pop
inc
dec
xor
movsl
mov
mov
mov
data16
mov
imul
sub
mov
cmp
bound
sbb
mov
lret
sub
js
sbb
fisubrs
push
fmuls
jle
jno
xchg
inc
cmp
adc
aaa
insb
pop
lahf
mov
cwtl
cmp
and
cld
cmc
sbbl
incb
or
cmc
fwait
pop
ljmp
fsts
add
rcrb
and
pop
mov
fsubl
call
cmp
sub
pop
dec
mov
or
mov
mov
test
leave
lret
es
jnp
in
or
jmp
pop
call
inc
mov
mov
ja
or
pop
dec
xor
iret
sub
inc
lret
and
jmp
mov
dec
inc
push
xor
pop
int
lods
mov
add
add
ficoml
mov
push
push
repnz
xchg
mov
dec
jmp
cmp
test
outsl
movsl
add
add
xor
pop
sarb
mov
sbb
sahf
jg
pop
xor
not
inc
jbe
xchg
js
clc
push
mov
xor
xchg
sub
shrb
aaa
or
bound
stc
cli
mov
ret
stos
mov
addr16
or
fidivrs
movsl
push
mov
mov
push
pop
stos
jmp
dec
cmpsb
faddl
push
jnp
arpl
in
mov
ss
fstps
lret
pop
inc
add
cmp
inc
adc
stc
jnp
cld
mov
or
movsb
xchg
insl
xchg
xchg
xor
jns
xchg
mov
mov
push
repnz
das
sahf
sbb
fimuls
ja
sbb
and
dec
cli
pop
jns
mov
or
and
mov
pop
xor
lret
xor
es
push
mov
das
call
push
dec
movsl
inc
or
xchg
or
rcl
add
cmc
xorb
pop
and
jmp
outsb
sti
divl
int
lret
inc
jecxz
cwtl
inc
sbb
mov
sub
push
add
add
int3
jge
rol
dec
loop
push
jecxz
inc
xchg
pop
lret
pushf
movsl
and
movsl
fimuls
sti
add
push
mov
pop
or
push
nop
inc
mov
adc
movl
call
orb
arpl
mov
loop
add
pop
test
cwtl
cmp
pushf
xchg
ret
fisttpll
ficompl
push
loope
test
pop
or
mov
inc
ljmp
fcmovbe
je
lock
scas
rcrl
leave
xlat
dec
rolb
lret
negb
push
jmp
and
inc
adc
sub
rorb
pop
gs
sti
testl
xor
adc
into
out
mov
movsl
ja
sub
loope
addb
mov
sbbl
pop
mov
or
adc
les
mov
std
sub
pop
clc
push
mov
dec
cmp
xchg
int3
mov
pop
sub
sarb
out
pusha
xchg
std
mov
push
jo
jecxz
adc
addr16
push
dec
mov
stc
xor
pushf
sti
sub
imul
mov
push
push
ds
dec
xlat
pop
in
mov
insb
push
jno
icebp
pop
cmp
xor
call
mov
mov
mov
addr16
in
sub
xchg
dec
nop
repnz
lret
rorb
jge
loope
add
inc
pop
xchg
shrl
jae
xchg
pushw
inc
jo
push
jmp
ljmp
pop
shl
lock
aas
popa
sub
jp
lahf
jle
iret
push
mov
repz
cld
mov
clc
loop
repz
popa
dec
dec
dec
in
shll
add
xorb
sbb
mulb
adcb
jmp
test
stc
insb
hlt
int
mov
or
repnz
fisttpll
ss
test
xor
xchg
jns
rorb
inc
xchg
mov
bound
jae
mov
in
or
xor
xor
insl
setg
sti
xchg
cmc
adc
jl
call
sbb
push
and
clc
mov
inc
inc
shlb
mov
cs
mov
fs
mov
mov
je
test
xchg
inc
repz
fsubrp
push
ljmp
or
xor
testl
sahf
or
jns
xor
lret
jge
out
test
mov
add
lods
cmp
test
sahf
pop
mov
ja
mov
dec
xor
adc
das
jmp
int3
jbe
mov
call
cli
insl
dec
xchg
add
cli
cmp
xor
cmp
call
adc
dec
or
pop
cli
jle
jae
and
jmp
inc
xor
mov
inc
cmpsl
add
mov
lret
xor
nop
jmp
mov
mov
insb
mov
cmp
cltd
fnstcw
inc
gs
adc
mov
mov
fisubs
test
rol
adc
rcll
sbb
inc
xor
ja
andb
cmc
mov
into
mov
mov
sbb
into
lock
insl
js
push
or
pop
out
leave
adc
adc
jno
int
es
scas
jmp
sub
inc
adc
scas
imul
pop
into
xor
test
cmp
cli
sub
xchg
daa
adc
jmp
dec
test
fdivl
insl
sub
cmp
or
fnstcw
xor
add
cltd
movsb
fmull
stos
or
or
mov
pop
lcall
test
sbb
and
sub
and
cwtl
mov
or
aad
cmp
sub
clc
mov
leave
pop
mov
cwtl
mov
sbb
cmp
jo
jae
sbb
cltd
test
fidivrl
cmpsb
xchg
sbb
movsl
ja
or
cld
lret
std
imul
push
sarl
xlat
mov
or
mov
daa
mov
out
pop
or
inc
call
xor
ljmp
mov
adc
or
push
and
xchg
jg
or
jb
lcall
add
cmpsl
stos
and
adc
lret
jno
popf
pop
lods
xchg
xor
cltd
paddusw
xorb
mov
nop
hlt
add
and
mov
arpl
mov
jle
loop
pop
push
mov
jno
fsubl
xchg
fistps
xor
call
inc
fstps
dec
jg
movsl
sarl
jbe
std
in
sbb
add
aam
paddsw
xchg
outsb
sub
ds
shrb
out
movsl
mov
jecxz,pn
add
test
add
and
xchg
es
add
xor
mov
pop
loop
fdivr
ds
mov
lcall
push
mov
in
imul
mov
in
fistpll
mov
push
jnp
mov
or
orb
jmp
sub
sub
mov
lret
dec
inc
jae
push
dec
mov
adc
cld
in
or
xchg
adc
mov
and
cmp
sub
std
jecxz
daa
fimull
cld
mov
hlt
mov
lea
push
push
enter
and
cli
call
ret
imul
dec
lret
mov
or
mov
stos
addr16
fwait
scas
fstpl
cmp
sub
sub
pop
inc
or
mov
or
repnz
dec
sti
stos
fsubrp
sbb
sti
dec
fwait
in
cli
out
push
lea
xchg
mov
mov
dec
sbbb
sub
push
fmull
xchg
call
xchg
scas
inc
mov
mov
pop
inc
adc
popa
enter
fsub
mov
into
andl
xchg
stc
out
inc
mov
cmp
test
lock
into
adc
repz
jnp
repnz
pop
call
add
jbe
and
mov
adc
fwait
adc
xlat
outsl
insl
jg
xorb
ja
mov
aad
data16
adc
test
addb
popf
push
push
lret
add
icebp
cmp
pop
inc
or
or
jge
xchg
jno
and
push
lcall
mov
xchg
iret
add
pop
jmp
push
or
push
div
pop
push
adc
aaa
and
popf
jmp
repnz
mov
or
inc
stos
aad
jl
call
call
cmpsl
cmpl
mov
in
scas
ret
mov
adc
add
sub
cli
lahf
dec
cmp
dec
sub
rsqrtps
xor
push
sbb
test
cmp
daa
in
ret
dec
add
dec
out
sub
stos
lcall
mov
ret
sub
leave
inc
sub
mov
ret
fwait
xor
jae
loope
and
icebp
ja
mov
jo
xchg
ja
popf
loopne
push
mov
mov
xor
jmp
add
stc
mov
push
loope
mov
jae
out
push
popf
loopne
call
pop
jl
xor
mov
mov
stos
sarb
cmp
mov
adc
jmp
mov
pop
mov
dec
clc
mov
repz
addr16
out
sbb
roll
jb
sar
push
jle
xchg
or
xchg
dec
enter
mov
fildl
sub
mov
push
mov
push
arpl
jmp
and
gs
lea
pop
adc
sub
std
sti
sub
testl
loope
jecxz
stc
out
mov
cs
adc
mov
adc
add
test
call
ja
xchg
aaa
push
mov
mov
mov
imulb
shlb
bnd
int
les
mov
ret
inc
push
jne
out
adc
pop
mov
dec
pop
stos
cltd
inc
or
jns
fs
sti
mov
dec
pop
mov
jl
scas
mov
xor
sub
pop
add
mov
out
sbb
outsb
mov
lahf
addr16
out
call
lds
cmp
repz
mov
cld
in
mov
xor
sahf
bound
rdmsr
jge
dec
jbe
push
cmp
sub
ja
xchg
mov
mov
xchg
out
sbb
sub
enter
pop
mov
inc
bt
sti
imul
dec
mov
mov
mov
jb
sub
roll
mov
cmove
or
orb
cmp
jl
mov
sub
pop
test
push
mov
popf
adc
stos
test
cltd
or
push
cmp
mov
inc
sbb
or
dec
push
sbb
cmp
and
insb
clc
sub
mov
mov
pop
mulb
mov
rorb
push
aaa
xchg
daa
das
pop
jge
jle
imul
cmp
hlt
inc
clc
lods
adc
jmp
add
mov
lret
dec
dec
cmc
int
mov
xorb
movsb
mov
adc
mov
cmc
lcall
sarl
xor
bound
loope
or
xchg
jg
in
adc
or
sub
pop
xchg
aas
add
mov
jnp
mov
or
xchg
imull
icebp
int3
ds
in
rcrb
hlt
dec
nop
xchg
xchg
call
into
insl
mov
jmp
rorb
push
out
ffreep
int
lahf
push
dec
sub
loope
ss
stos
repnz
je
add
inc
add
icebp
sub
adc
mov
sbb
cmp
or
push
dec
sti
sbb
xchg
adc
repnz
adc
pop
pop
shll
push
adc
int
enter
adcb
popf
cmpsb
dec
ret
push
mov
jle
mov
pminsw
cwtl
xchg
and
int
pusha
movsl
stc
add
push
test
aad
sub
push
enter
push
xor
pop
jnp
gs
sahf
call
adc
jnp
fldcw
xor
mov
push
sub
jmp
push
adc
fistpl
add
adc
or
popa
cmc
stos
pop
lock
mov
sbb
add
mov
scas
add
outsl
or
rcr
mov
pop
punpckhbw
adc
pop
inc
xor
in
xchg
pop
push
cmc
inc
and
add
add
push
out
mov
mov
dec
push
ds
push
push
cmp
xchg
jmp
push
jmp
sbb
mov
sahf
adc
jmp
ret
sub
outsl
xchg
or
ret
test
leave
mov
inc
pop
rclb
xor
stos
fsubs
add
jmp
insb
mov
jno
jmp
fisubs
fisttpl
mov
push
xor
jno
inc
insl
mov
jno
cmp
ss
fisttps
das
stos
sbb
insl
add
outsb
lea
push
jnp
sbb
mov
jmp
mov
popf
bound
insl
rorl
ja
xlat
mulb
es
addr16
inc
push
popa
xchg
xor
push
jg
xchg
ss
jmp
mov
movsl
pusha
jmp
stos
dec
call
fnstsw
push
inc
mov
or
xor
and
pop
push
jl
shr
in
push
out
loopne
sbbl
fcomps
push
jae
mov
jno
inc
cmp
fwait
or
mov
sub
push
test
test
jge
or
dec
aas
sbb
rcrb
jo
pop
cmp
sub
mov
inc
fistps
cmpsl
pop
push
push
jle
xchg
daa
mov
jmp
out
sbb
mov
es
push
or
sub
sbb
mov
mov
jmp
push
inc
aas
mov
je
cmp
dec
cmpsl
testb
dec
mov
add
dec
mov
push
call
add
ss
icebp
and
cs
popa
in
dec
test
or
lcall
loope
stc
adc
faddl
movsb
xor
add
xor
lea
pop
cltd
aaa
sub
pop
cmpsl
add
enter
add
aam
mov
leave
mov
sti
fadds
daa
mov
pop
sbb
int
pushf
out
dec
mov
jo
mov
mov
lea
adc
xchg
add
mul
inc
mov
orl
dec
mov
cmp
inc
stc
repnz
andb
fcompl
dec
lods
std
dec
push
lcall
imul
es
inc
and
js
and
mov
push
in
cwtl
push
push
pop
and
inc
push
mov
es
cli
fadds
iret
enter
lods
sti
mov
xorb
into
cmp
mov
cmp
mov
loopne
in
enter
stos
movsl
lret
jnp
sub
js
add
aad
clc
jb
popf
fmul
lret
out
fistpl
mov
leave
test
push
push
mov
clc
and
lret
ret
mov
cmp
hlt
cmpb
lret
sahf
or
sub
pop
repnz
dec
mov
xor
shrl
sbb
adc
popf
std
add
fmuls
icebp
sahf
sbb
fsubrl
or
inc
ljmp
add
sbb
dec
cwtl
repnz
push
inc
mov
add
sub
adc
xchg
inc
mov
push
call
jmp
add
pop
pop
in
xchg
jmp
out
or
or
and
mov
sbb
loopne
lods
das
fisttps
and
sbb
xchg
sub
lea
dec
in
lahf
mov
mov
sub
mov
and
repnz
sbbb
and
jp
mov
mov
sub
leave
in
mov
sbb
lcall
aam
pusha
sbb
inc
arpl
cmp
stos
cmpsl
mov
jp
out
or
dec
data16
xchg
adc
jp
call
in
and
dec
xor
jns
push
call
ret
inc
arpl
pop
mov
adc
mov
mov
ja
jl
arpl
aaa
popf
fists
ret
movsb
push
je
inc
addb
mov
jmp
sub
add
pop
mov
mov
jmp
push
inc
add
repnz
mov
or
add
pop
lock
movsb
test
gs
mov
cmp
xchg
jo
fidivrs
stc
test
or
inc
stc
adc
xorb
or
push
test
in
mov
sbb
sbb
dec
mov
rcrl
dec
xchg
dec
ss
push
cmpb
ss
inc
jge
push
call
mov
fldt
gs
decl
add
pop
pop
test
add
add
out
mov
repz
push
pop
fs
lods
cmp
mov
sbb
jne
testb
cld
cli
jecxz
lahf
stc
sub
jge
and
xchg
pusha
add
and
inc
es
sbb
addr16
or
lret
and
mov
pop
shll
push
mov
loop
ds
mov
into
push
fnstsw
jns
popa
sbb
daa
stc
jecxz
xchg
cli
rorl
cwtl
jmp
into
mov
mov
dec
rorl
call
jecxz
std
cli
daa
mov
mov
mov
sahf
clc
mov
pop
sub
lahf
dec
inc
push
adc
mov
or
sub
or
pop
pop
add
daa
dec
pop
rcll
out
cmpsl
sub
inc
scas
dec
aaa
sbb
sbb
ljmp
mov
add
outsb
cld
or
test
lahf
pop
add
arpl
lea
pop
jmp
jp
test
add
hlt
dec
or
mov
int
movsl
ja
jno
sbbb
jmp
pop
lods
loop
inc
inc
inc
inc
cmpsb
inc
adc
xor
pop
leave
pop
jmp
call
xor
push
add
pushf
sub
dec
das
dec
mov
pop
xor
sub
cmp
in
cmpsb
inc
mov
jne
jno
mov
xor
inc
mov
lret
jmp
dec
mov
dec
int
call
mov
lret
jb
int3
icebp
add
fs
sub
or
push
lock
fmull
jmp
lods
sub
cmovl
inc
sub
inc
inc
xor
jmp
sub
sbb
or
push
xchg
pop
and
jbe
subb
cmp
call
adc
push
dec
xorb
or
xorb
xchg
pushf
add
and
push
sbb
pop
inc
call
push
mov
jne
arpl
addl
fstl
leave
daa
sub
mov
dec
mov
mov
xor
push
test
aad
pop
fmull
push
repz
outsl
or
lcall
outsb
and
inc
aaa
hlt
and
mov
pop
in
xlat
lret
pop
xchg
or
mov
in
pop
push
shll
cwtl
mov
dec
sub
clc
mov
sub
sbb
cmc
mov
cmp
push
out
mov
adc
lahf
int3
bound
leave
and
arpl
mov
and
adc
int3
stc
push
jns
sub
outsl
sti
mov
dec
movsl
in
sub
dec
test
fldl
icebp
push
sub
jg
mov
sub
jge
mov
cli
fcmovnb
lock
mov
aas
call
jecxz
pop
xor
pop
test
ficomps
xor
repnz
xchg
dec
filds
outsl
mov
jo
xor
or
cmpsl
jp
push
loope
mov
sub
rcll
or
dec
pushf
xor
inc
adc
in
pop
arpl
xor
clc
mov
lret
and
dec
testl
mov
arpl
pushf
add
and
push
add
or
in
testb
insb
rcll
test
xchg
cli
and
inc
ror
dec
cmp
jae
frstor
inc
arpl
ds
arpl
cmp
mov
cmc
test
call
popf
jg
js
loopne
jmp
pop
into
adc
ljmp
jle
push
dec
out
into
aas
adc
sti
das
sub
loope
add
enter
mov
push
push
test
shl
test
push
mov
xchg
xchg
sub
ljmp
les
jp
cmp
mov
stos
int3
sbb
sbb
dec
sub
mov
dec
xor
or
adc
flds
int3
int
call
cmpsb
xchg
jle
fiadds
lea
mov
add
jle
xchg
test
ss
mov
outsl
das
sbb
lock
push
cmc
das
sahf
add
cmp
mov
dec
rorl
or
mov
movsb
add
popa
adc
addr16
sub
jg
str
sar
push
mov
mov
pop
xor
add
fsubs
inc
add
lods
mov
mov
or
add
cmpb
lahf
xchg
in
push
dec
pop
sub
sbb
pop
jge
add
jmp
push
stos
jno
and
cli
daa
mov
test
icebp
imul
sub
scas
push
adc
jno
jmp
xor
inc
data16
mov
std
xchg
xlat
xchg
mov
fwait
cli
mov
push
adc
aam
dec
clc
cmpsl
xchg
xor
enter
push
insl
fcmovu
sti
mov
push
roll
pop
call
hlt
outsl
xor
mov
lcall
jns
mov
ljmp
loopne
ret
or
push
add
cltd
test
push
or
negl
fs
jp
jo
call
sti
pop
mov
aaa
fsubrl
into
push
sti
les
inc
arpl
call
scas
mov
fisttps
xor
repnz
mov
stos
push
scas
movsb
lods
jb
xchg
xchg
mov
push
adc
cmp
mov
pop
jbe
lcall
inc
mov
flds
xor
or
fcomp
adc
inc
scas
lods
lock
push
pop
sbbb
std
sub
iret
or
call
sub
rcl
jg
cmp
jmp
and
jge
or
mov
xchg
dec
cmpl
mov
in
inc
fiaddl
pop
dec
mov
cmp
roll
sbb
int
push
rcrb
cmp
lock
dec
sarb
dec
inc
sbb
add
jmp
fnsave
sub
dec
dec
mov
pop
jno
rcrb
pop
sbb
mov
mov
sub
aam
out
dec
std
loope
xorb
jae
lret
push
add
in
leave
shlb
lahf
and
pop
test
icebp
mov
shlb
mov
popf
ds
test
or
mov
mov
lock
and
xchg
jmp
sbbl
insb
push
adc
inc
push
mov
pop
daa
pop
lret
adc
stos
insb
test
or
fnstsw
add
mov
jp
or
mov
inc
pop
aad
dec
aam
inc
xchg
inc
push
dec
push
mov
sub
mov
test
jp
filds
sbb
lock
mov
lret
lods
call
stos
enter
ss
gs
sub
xor
call
rcrb
push
pop
sbb
sti
decl
pusha
add
popa
jbe
pushf
mov
mov
or
aaa
sbb
and
push
push
mov
mov
fdecstp
icebp
sub
mov
cmp
in
mov
les
mov
pop
out
xlat
mov
icebp
and
daa
cmp
stos
push
sbb
ret
stc
jb
cwtl
adc
in
xor
pop
cmp
ds
jmp
sbb
add
and
ret
pop
mov
jno
dec
push
inc
fcompl
mov
mov
jno
mov
xchg
subb
sbb
lods
notl
call
mov
je
xor
xor
bound
pop
jo
faddp
shlb
adc
sub
aas
sub
push
leave
scas
insb
sub
xor
inc
add
cld
mov
ret
push
jmp
in
mov
xor
add
mov
sbb
loopne
fisubs
jne
cmc
xchg
or
in
test
dec
sbb
push
jb
jecxz
mov
sbb
addb
jmp
sub
mov
cmpsb
push
mov
push
and
pop
or
mov
push
jg
cmc
int3
xchg
stos
mov
cld
divl
enter
dec
ja
mov
cli
push
fsubrp
push
xchg
jg
or
xchg
sub
inc
out
xchg
ficompl
nop
fcoml
cmpsl
mov
and
lret
sub
jge
xchg
cld
ja
sbb
andl
mov
or
push
cmp
and
ss
lahf
sti
mov
pop
ja
mov
mov
push
les
sarl
je
cli
mov
iret
js
jnp
push
jmp
ljmp
leave
pop
jno
or
subb
popf
and
mov
push
xchg
loopne
inc
mov
xchg
sub
adc
cmc
sub
inc
lahf
push
mov
leave
xor
loope
lds
and
inc
xchg
shll
mov
dec
sahf
jnp
testb
mov
sbbl
pop
or
leave
popa
inc
sahf
pop
sarb
out
jl
mov
xchg
pushf
idivb
fwait
movsl
loop
inc
out
jo
xchg
jmp
sbb
imul
repz
xchg
push
or
dec
js
in
adc
or
or
fbld
and
xchg
and
xchg
and
je
xor
fidivrl
jbe
jmp
pop
pop
dec
leave
fstpl
jl
outsl
push
sbb
or
xor
mov
orb
rclb
stos
pushf
or
push
shll
jecxz
push
inc
sbb
stos
dec
inc
add
push
mov
in
dec
mov
and
mov
pop
add
seta
movsl
add
or
mov
in
das
cmp
pop
stc
sub
mov
sub
scas
inc
lods
adc
pop
rorl
xorb
das
mov
adc
imull
loop
leave
sub
mov
repnz
out
dec
jb
or
mov
sub
jp
stos
mov
in
mov
cltd
sbb
aaa
add
mov
cs
xor
mov
or
adcb
cmc
push
sub
push
or
test
pop
mov
sub
les
aam
test
repnz
loopne
push
call
jge
pop
bound
jmp
testl
cltd
repnz
dec
fs
lds
punpckhbw
or
fiadds
dec
aad
mov
mov
aaa
or
xchg
pop
add
andl
mov
jp
ficoms
je
adc
xchg
inc
mov
cmp
xchg
push
or
jb
xchg
xchg
push
jno
ds
sub
push
or
dec
jno
jmp
imul
mov
rorb
xchg
icebp
mov
xlat
mov
mov
pop
sahf
je
and
popf
xlat
sub
roll
imul
jmp
ljmp
xchg
shl
mov
xchg
cs
sub
jmp
call
cmc
sub
mov
mov
pop
inc
lret
rolb
jbe
dec
stc
imul
and
std
and
push
adc
push
shlb
pop
pop
mov
test
sub
add
push
scas
sbb
pop
and
scas
repz
inc
mov
sbb
sub
lds
add
daa
sub
dec
adc
pop
imul
push
cltd
enter
cmc
fwait
mov
inc
add
mov
cs
sbb
jae
iret
xchg
jmp
in
inc
xchg
xchg
negl
pop
divps
sbbl
jns
or
mov
cmp
lock
lea
mov
xchg
enter
mov
int3
popa
aam
adc
jge
pop
push
push
pmaddwd
mov
mov
fsts
xor
sub
push
cmp
xchg
mov
push
inc
inc
inc
daa
hlt
imul
mov
mov
xchg
insl
dec
mov
fsts
inc
call
sub
clc
push
orb
lahf
jl
shl
push
or
fdivrp
sbb
adc
sahf
call
dec
cli
lds
stos
mov
mov
fsubrl
push
pushf
jg
sub
je
fisttpll
sti
mov
xorb
pop
push
sub
push
dec
pop
jmp
inc
mov
les
mov
mov
xchg
mov
lock
pop
cltd
int
orb
call
ds
je
dec
xlat
mov
ja
test
ret
orl
sti
popf
xor
inc
or
or
xor
xlat
xchg
call
sahf
pushf
clc
popf
and
fiaddl
sub
fildl
dec
test
insb
adc
sbb
dec
int3
into
or
pop
out
inc
or
orb
cltd
mov
testl
jno
xor
inc
pusha
js
xorb
mov
inc
repnz
pop
sti
adc
loope
dec
xor
sub
adc
mov
daa
fdiv
ror
push
sub
and
out
or
mov
cmpsb
adcb
aam
xor
mov
inc
insb
inc
fsubl
cld
imul
mov
push
sub
push
xorb
dec
sti
aas
loopew
jb
mov
jae
int
jb
jmp
mov
pushf
les
daa
loope
pop
incl
pop
mov
jg
sbb
leave
sar
jmp
insb
push
call
insl
mov
inc
xchg
jmp
cs
ss
lret
xchg
cmp
add
mov
pop
aam
imul
mov
daa
push
in
iret
rcrl
xor
mov
popf
jns
mov
ja
ljmp
or
mov
mov
aam
lret
in
xor
stos
inc
pop
mov
sub
add
mov
lods
or
ja
shlb
xor
popf
cli
hlt
pop
sbb
add
icebp
imul
xchg
pop
std
add
push
int3
sbb
das
pop
xchg
out
xor
mov
call
push
movsl
mov
add
mov
ret
and
dec
mov
push
roll
roll
out
or
dec
pop
dec
push
and
popf
add
add
dec
xchg
das
xchg
pop
popa
int3
addl
mov
out
add
jns
ror
test
sar
push
into
dec
ss
aas
inc
pop
arpl
loopne
mov
in
xor
push
lahf
lahf
js
mov
push
cmp
push
pop
jb
mov
push
sbb
popf
and
pop
enter
or
jbe
mov
push
sub
dec
inc
jmp
mov
jns
mov
ret
out
cmc
call
shlb
lahf
imul
or
movsl
pop
mov
mov
xchg
jne
test
in
icebp
inc
pop
lea
jo
push
push
inc
xor
or
mov
cld
mov
orl
or
add
push
sarl
or
mov
xor
pop
or
pop
adc
sbb
fucomip
xor
lods
pop
clc
pop
mov
push
aaa
inc
adc
add
data16
aad
xor
aaa
stos
and
and
lods
mov
jg
dec
ret
stos
jb
jno
add
sbb
push
adc
data16
inc
dec
mov
and
shr
xchg
pusha
push
add
test
popa
cmp
pop
arpl
je
test
pop
or
cmp
es
xchg
lea
and
and
mov
add
xor
cs
scas
outsl
rorl
adc
jg
int
pop
jno
inc
xchg
mov
insl
cmp
inc
cli
and
add
dec
jmp
sbb
stc
hlt
push
jmp
adc
mov
test
inc
fprem
dec
mov
std
jmp
xchg
xlat
das
sbb
pop
subb
cwtl
nop
in
mov
mov
mov
mov
cltd
lahf
add
lret
jnp
mull
pop
add
rcrl
sub
or
adc
dec
xor
pop
lock
movsb
scas
loop
and
and
dec
sti
mov
and
mov
sub
push
clc
data16
dec
mov
xchg
imul
adc
dec
inc
flds
fisttpl
jb
call
mov
mov
pop
out
insb
lods
cwtl
jo
push
adc
pop
lret
movsl
lcall
push
cmpb
mov
cld
mov
jns
pop
add
xor
or
jge
fiadds
mov
pop
pop
add
cwtl
mov
push
loop
mov
pop
cmc
inc
pusha
mov
adc
fcompl
call
fwait
jge
pop
push
lahf
call
daa
les
cli
sub
add
mov
in
rclb
std
dec
dec
sbb
xadd
and
fsub
xor
push
push
xchg
in
xor
lods
out
mov
ja
cmp
mov
int
out
cmpsl
cwtl
aam
inc
bound
lcall
sub
out
mov
sub
cmp
stc
jb
mov
jg
push
jns
jae
jecxz
mov
sbb
cmpsl
das
daa
rcll
insb
or
call
push
cmp
icebp
or
daa
sbb
sbb
sbb
or
call
in
std
repnz
test
jne
sub
or
mov
aad
mov
jmp
movsb
sub
stos
stc
fisttpl
std
push
xchg
bound
cmp
add
adc
aas
popf
xchg
lahf
call
aam
dec
insl
inc
xchg
jne
sbb
mov
ss
sti
loop
das
popa
sbbl
cld
not
push
mov
ret
mov
cli
pushf
outsb
lods
xlat
sub
scas
push
cmc
cmpsl
cmp
cmp
sbb
repz
aad
lret
inc
test
aad
loopne
xor
sbb
lret
sub
xchg
sub
pop
enter
shl
jg
sub
jmp
lods
lods
mov
push
push
jne
fisttpll
push
cli
loop
and
stos
hlt
add
iret
inc
shll
pop
add
ret
pop
movsb
cwtl
pop
jecxz
push
movsb
int
jge
add
push
les
pop
xchg
pop
jmp
fimuls
push
and
in
fidivrs
pop
test
movsl
loop
inc
ficomps
sahf
ds
stc
mov
lods
addl
rol
fcos
fildll
sbb
or
cs
and
nop
fnstenv
clc
push
pop
out
pop
or
pop
mov
inc
mov
cmp
mov
push
pop
mov
push
inc
xchg
add
mov
push
aad
xor
add
add
imulb
inc
fisubrl
sahf
std
daa
retw
repz
call
xorb
mov
push
rcl
fisttpl
dec
push
leave
inc
push
call
dec
or
sub
jb
jo
daa
sbb
add
fidivrs
in
push
xchg
sbb
sub
xchg
push
repnz
fisttpll
and
stos
push
call
jmp
xlat
loope
mov
sbb
rcrl
rcll
stc
fiadds
fistps
fstpl
xchg
lahf
push
loopne
ds
stc
inc
das
jmp
mov
adc
popa
inc
jbe
or
adcb
inc
call
inc
mov
pop
es
lods
in
xchg
jmp
loop
jmp
mov
jmp
jo
inc
movsl
push
mov
pop
cmc
pushf
leave
sbb
mov
inc
mov
in
fstps
fidivrs
sbb
ljmp
pop
dec
ljmp
in
lds
inc
inc
fsubl
sbb
cwtl
sub
call
jno
inc
loope
pop
dec
das
test
fdivrp
push
fmul
xor
jmp
dec
mov
and
popl
sti
lea
in
pop
push
roll
add
cmpsl
pusha
lock
xchg
adc
cmp
insl
dec
mov
fildl
ds
jns
add
insb
popf
ljmp
add
mov
dec
push
jns
mov
leave
jge
into
xor
mov
add
push
adc
pop
loopne
push
daa
and
inc
fisubrs
xchg
mov
daa
xor
faddp
insl
pop
sub
mov
icebp
mov
xlat
shr
jb
push
popa
sub
ret
aam
daa
testl
popf
lcall
mov
sub
cmpsb
clc
test
jmp
push
sbb
cld
mov
test
fwait
add
ljmp
xchg
fwait
aad
repnz
adc
mov
or
sbb
fwait
push
inc
xchg
xor
pop
out
rolb
and
das
push
or
mov
call
pop
lahf
fidivrl
les
js
and
andl
jb
adc
jl
or
insl
addr16
push
cmp
dec
mov
pop
dec
or
push
cmpb
add
and
adc
shrl
push
add
mov
or
mov
fdivrl
xchg
mov
push
inc
sti
jno
call
inc
jl
push
sti
push
push
jmp
fdivl
rolb
mov
cmc
pop
sahf
stos
leave
and
pop
in
in
inc
add
and
xchg
xor
in
and
sbb
jbe,pn
lahf
cmc
jno
dec
jbe
xor
xchg
sub
push
icebp
mov
out
inc
inc
push
or
xor
mov
inc
call
jo
inc
jb
andl
cmp
pop
scas
push
add
xchg
or
fs
mulb
xchg
mov
movsb
shlb
das
es
sbb
repnz
jae
int
add
cwtl
push
and
or
js
ficompl
out
orb
aaa
mov
loope
out
jmp
cltd
mov
sub
leave
and
push
dec
loop
les
mov
adc
rcrb
arpl
sbb
mov
and
jb
cltd
aad
aad
out
lods
adc
das
and
push
pop
xor
pop
push
or
loop
cmpl
inc
mov
inc
mov
xor
test
test
lds
mov
call
xchg
add
lds
es
inc
push
mov
das
xchg
inc
sti
and
aas
cmc
dec
fistpll
inc
pop
xchg
lds
mov
ret
inc
shrl
clc
notb
fildll
jo
out
aaa
enterw
inc
inc
or
roll
sub
insb
jo
dec
sti
sub
or
adcl
dec
aam
push
mov
mov
pop
loop
sbb
ret
mov
test
icebp
dec
filds
inc
insb
aad
xorb
cmp
arpl
mov
cmpsb
pushf
jmp
add
popl
jecxz
daa
ss
insl
loope
sub
ja
flds
pop
mov
sbb
lret
lahf
mov
rorb
or
in
popf
pop
cmpl
repnz
mov
adc
cmp
push
sbb
test
in
hlt
call
fstl
jae
push
scas
sti
mov
mov
subb
push
xchg
ljmp
push
scas
loopne
js
es
push
push
xchg
sbbb
das
psubd
fbstp
xchg
out
xchg
cwtl
lock
shll
add
inc
sub
loop
popf
dec
out
mov
jecxz
dec
dec
jns
enter
testl
jecxz
push
pop
xchg
andb
mov
es
enter
mov
out
test
mov
mov
adcb
pop
adc
push
sahf
and
fisubs
mov
lock
test
pushf
int
push
mov
aaa
fs
cwtl
jecxz
sarb
jl
addb
add
jbe
pop
rorb
stc
int3
cld
push
xlat
sbbb
repnz
xor
jmp
xor
mov
jns
sub
and
lcall
rcrb
std
out
push
movsb
cmp
loop
or
push
dec
xor
add
das
mov
outsl
xchg
rolb
lcall
jnp
ljmp
or
loop
adc
repz
stos
ljmp
loope
push
xchg
mov
mov
hlt
out
xchg
fwait
test
mov
test
stc
jl
jo
pop
pushf
int
outsb
sub
std
in
pop
pop
push
xor
into
inc
mov
ljmp
or
call
jo
sub
and
mov
mov
pop
xchg
mov
inc
mov
jg
notb
mov
test
dec
adc
xchg
cmc
sbb
sbb
mov
insb
lret
push
inc
mov
pop
cwtl
dec
in
add
mov
xor
mov
mov
call
adcb
or
pusha
mov
mov
lods
add
mov
fdivrp
pop
lea
pop
inc
imul
push
or
fcmove
push
jge
or
shlb
cmc
or
mov
pop
fwait
push
dec
mov
mov
xchg
fsubl
jae
in
dec
push
jne
ficompl
mov
nop
fcompl
cld
fstps
jge
shrl
inc
xor
rcrl
sahf
testb
adc
gs
push
lcall
aad
data16
jo
dec
mov
das
xor
ror
jne
inc
sub
sbb
test
inc
jp
push
pop
sub
push
out
insb
cmp
adc
or
push
call
mov
div
jmp
push
push
icebp
ja
sarl
and
pushf
pop
push
add
std
clc
outsl
jno
mov
jns
rorl
xchg
jb
int
not
mov
cwtl
xor
insb
mov
in
mov
pminsw
sub
pop
sbb
nop
sub
inc
sub
in
insb
mov
inc
adc
jo
and
ret
jle
icebp
sub
push
fs
push
mov
sub
dec
aad
dec
push
lret
dec
jge
outsb
shrl
xor
call
popa
dec
xor
pop
pop
push
sub
xchg
repnz
andl
lahf
lods
and
out
mov
lods
insl
clc
mov
in
pop
pushf
divb
int3
mov
push
and
adc
or
les
outsb
mov
shll
dec
mov
push
popf
jmp
fst
jmp
or
shl
stos
pusha
fldl2t
sbbb
popl
rol
testl
adcb
mov
lods
mov
or
lds
nop
bound
adc
subb
icebp
sub
jle
ss
das
and
les
dec
stos
ljmp
call
push
pop
cmc
and
cs
adc
sbb
and
rclb
dec
rclb
mov
mov
scas
mov
sbb
push
mov
or
mov
cmp
cs
inc
mov
push
push
jbe
mov
mov
dec
inc
into
add
movsb
push
pop
xchg
or
mov
dec
popf
icebp
arpl
cmp
or
push
jmp
pop
je
sub
mov
push
jmp
mov
push
push
jge
fdivr
pop
cltd
cmp
cmpsl
call
das
add
push
push
lds
or
dec
cmp
repnz
mov
clc
push
sti
adc
jmp
sbb
call
sbb
les
xor
mov
aam
cmp
xor
std
into
clc
sti
xor
push
popf
mov
adc
sub
sub
les
lods
int
cmp
mov
pop
clc
xlat
or
das
dec
in
adc
lret
xor
jmp
int
in
nop
leave
pop
jo
movsb
xor
jmp
repnz
lret
xor
cli
daa
jge
mov
cmp
push
pop
mov
pop
adc
xchg
dec
inc
rol
push
aad
inc
mov
pop
pop
mov
enter
aaa
pushf
xor
popf
rolb
cmp
inc
data16
test
xchg
scas
int3
xor
cmp
dec
xor
call
leave
add
and
data16
lahf
jno
add
mov
inc
divb
ja
mov
pushf
mov
push
scas
xchg
mov
jb
xchg
push
jge
push
shrb
add
sarb
insb
xor
call
and
or
lahf
mov
or
scas
push
sub
mov
stc
divl
fildl
push
inc
mov
push
lret
push
push
roll
addr16
mov
dec
sub
inc
xchg
and
and
cwtl
pop
jmp
es
inc
fdivrs
or
jmp
stos
test
pop
fwait
call
test
pop
dec
sbb
mov
aaa
inc
mov
push
xor
call
sbb
lods
mov
in
das
testl
sub
dec
sahf
sub
xor
push
mov
ror
mov
mov
dec
mov
lds
mov
dec
push
fdivs
sti
dec
and
ljmp
dec
xchg
jg
push
js
mov
out
jmp
push
sub
jno
lea
cmpsb
cwtl
pop
adc
pop
and
andb
mov
pop
pushw
adc
and
mov
or
or
xchg
nop
adc
mov
int
repnz
ret
aas
shll
lahf
lds
mov
mov
ss
subb
add
test
mov
adc
jle
lahf
addr16
vmovq
xchg
ljmp
jle
adc
sbb
ds
sub
rcl
add
cmp
dec
lret
por
sub
insb
mov
movsb
mov
dec
jle
lods
xor
popa
scas
dec
pop
loopne
das
pusha
xor
or
pop
mov
test
adc
in
pop
aam
and
decb
mov
push
lods
fwait
pop
dec
xor
call
imul
mov
push
iret
mov
into
mov
hlt
in
call
mov
out
int
call
bound
mov
xchg
dec
push
inc
in
pop
sub
loope
dec
sub
in
aam
pop
addl
int3
mov
xchg
call
pop
dec
or
icebp
stc
sub
daa
dec
inc
or
pop
clc
and
mov
or
repnz
das
dec
push
clc
cld
imul
iret
add
jmp
lods
das
and
push
mov
pop
or
jg
pop
adc
xchg
cld
xor
out
jge
fldenv
xchg
push
xchg
fwait
les
cmpsl
inc
adc
int
push
sbb
repz
ss
inc
call
or
leave
xlat
ret
sub
movsb
fsts
mov
das
aas
push
clc
or
aad
dec
xchg
into
test
loop
lods
pop
ljmp
rorb
pop
pop
add
push
and
push
fsubp
pusha
pop
jmp
mov
sbb
push
or
jbe
cwtl
scas
mov
ljmp
xor
test
xchg
fnsave
mov
or
or
jmp
inc
in
mov
out
into
leave
push
add
cwtl
popl
pop
push
or
int3
cmp
les
mov
push
jmp
mov
cli
jb
cmpb
push
pop
pushf
xor
pop
mov
sub
mov
add
cmp
call
sub
outsl
pop
add
lods
insl
sbb
aam
in
dec
mov
sbb
hlt
scas
call
xor
push
stos
mov
xchg
and
xor
mov
jl
jbe
and
pop
xchg
inc
icebp
mov
mov
pop
add
inc
and
mov
popa
repnz
call
mov
mov
inc
xchg
sbb
xchg
outsb
mov
mov
ljmp
inc
js
mov
loopne
xchg
dec
push
sub
inc
test
cli
pushf
imul
sbb
push
cmp
dec
ret
insb
and
imul
push
orb
fsubrp
pop
pop
sub
xchg
pop
jno
test
aam
cmp
in
pop
mov
fdivs
push
adc
int3
jbe
scas
sub
jb
jg,pt
fidivrs
mov
adc
mov
cmp
push
mov
jns
testb
aad
xchg
or
ds
or
mov
xor
les
push
mov
adc
ret
std
sahf
aas
lahf
testb
dec
ret
cmpsl
pop
addl
add
stos
and
cmpsb
pop
push
cmp
inc
xchg
outsb
das
and
stos
repnz
and
mov
push
xor
cmp
pop
mov
hlt
leave
test
popa
add
mov
decb
xchg
push
lods
das
leave
or
or
mov
clc
mov
incl
sub
xor
inc
js
aas
cli
out
pop
enter
mov
andb
mov
mov
and
jno
xchg
xchg
adc
adc
out
repz
sub
push
sbb
jmp
jo
add
fistpll
orb
dec
fistpll
mov
out
inc
rcrb
adc
adc
cwtl
cld
mull
movsl
adc
aas
push
jmp
subl
add
adc
mov
dec
mov
add
in
fnstcw
sub
jae
xchg
dec
ja
push
xchg
inc
jmp
pop
dec
pop
loopne
clc
mov
ret
add
xchg
pop
dec
cmpsb
leave
out
jl
mov
pop
arpl
sub
sub
stos
dec
call
lea
and
jne
xchg
and
sub
iret
mov
inc
std
pushf
fisttpl
scas
adc
in
clc
push
mov
and
or
jnp
push
pop
jmp
call
push
cmp
add
or
mov
add
sahf
dec
dec
pop
pop
push
scas
insb
arpl
icebp
pop
push
xchg
daa
call
data16
lea
sarb
adc
push
inc
xchg
push
shr
and
data16
jno
cwtl
sbb
xor
mov
or
pop
out
xchg
inc
scas
lea
arpl
jp
adc
cmc
push
mov
dec
xor
xchg
mov
cmp
add
cwtl
movzbl
sub
idiv
inc
and
push
jno
call
xchg
mov
rcll
pop
mov
loopne
call
mov
inc
shrl
ds
cmp
or
pop
mov
lds
call
dec
shrb
addr16
orl
jmp
jmp
out
ret
mov
icebp
icebp
call
fwait
psubsw
fiaddl
jns
mov
int3
leave
shlb
lahf
movsl
cmp
lods
fsubrp
rolb
jmp
int3
je
pop
lahf
addl
jl
movsl
cli
xchg
adc
rsm
movl
mov
jae
jno
push
jb
jl
outsb
aam
xor
repnz
inc
iret
add
lret
mul
or
xchg
and
pop
cmp
std
dec
les
mov
int3
aam
mov
add
out
push
int
jmp
or
or
arpl
mov
jb
inc
test
es
sahf
inc
xor
inc
push
cmp
test
xchg
fs
dec
add
popf
dec
in
pop
icebp
enter
jmp
sub
mov
dec
push
dec
xor
prefetch
or
pop
movsb
and
add
and
repnz
xor
sbb
xchg
aam
dec
das
or
mov
add
mov
cmpsl
leave
sbb
imul
pusha
std
xchg
mov
adc
loope
es
pop
mov
ja
popf
lcall
xchg
xchg
dec
repz
push
enter
add
jecxz
xchg
push
test
or
jmp
call
sub
add
inc
mov
or
popf
call
adc
pop
mov
dec
mov
pusha
cmpsb
push
push
std
call
and
mov
outsb
or
adc
pop
mov
and
push
push
sbb
sarb
jmp
inc
mov
ror
test
pop
sbb
test
push
jmp
call
cli
sub
call
lea
int3
imul
movb
dec
fcompl
and
mov
dec
pop
adc
shll
mov
push
outsl
jmp
call
test
xchg
scas
ja
imul
popa
test
jecxz
dec
adc
sahf
sbb
hlt
add
or
in
aaa
daa
push
je
stos
sbb
das
push
roll
out
lret
or
aad
daa
loop
insl
pusha
inc
mov
mov
push
xor
cmp
pxor
loop
stos
lds
icebp
addr16
inc
sub
adc
mov
pop
es
testl
jg
inc
sbb
pop
fwait
jecxz
mov
sbb
jo
aas
lea
pop
lods
fldl2t
das
mov
push
adc
inc
push
dec
mov
loope
lods
pop
insl
xchg
mov
add
les
pop
rorb
popf
jno
mov
jmp
pop
aas
mov
icebp
xchg
or
mov
add
jnp
scas
enter
enter
pop
dec
shll
repz
push
xor
into
imul
or
sbb
call
cmpsb
daa
pop
adc
push
mov
lahf
sub
and
and
adcb
xor
outsl
push
lret
dec
or
sub
add
shrb
rorl
cmp
sbb
add
mov
adc
je
sub
jmp
call
and
popl
add
mov
sbbl
pop
inc
push
adc
sub
adc
iret
push
jl
sub
ja
movsb
mov
movsl
iret
pop
mov
sub
stc
push
lea
sbb
mov
std
clc
insb
cs
stos
je
inc
push
push
xchg
jno
pop
mull
cs
pop
inc
mov
push
lds
xor
lahf
push
mov
adc
or
ja
xor
lret
call
inc
pusha
scas
mov
adc
dec
push
lret
addr16
insb
pusha
es
hlt
mov
push
mov
push
sub
xchg
xor
jbe
int3
std
ror
cmpsl
imul
sbb
mov
lret
das
push
jbe
jnp
insb
push
jmp
cmpsb
jns
cmp
mov
push
popa
pop
aas
or
xlat
dec
pusha
add
dec
jle
cmp
addr16
mov
fmull
pop
call
cmp
pop
xor
adc
sbb
push
dec
test
ja
fnsave
xor
push
jle
sub
out
pop
jbe
fwait
ljmp
popa
fs
fmul
scas
imull
ljmp
cmp
xor
cwtl
nop
xchg
push
test
fidivrs
rcrl
push
mov
movsb
push
sub
jbe
adc
push
jecxz
sub
or
popa
or
pop
lds
insb
std
sub
aam
call
orl
stos
jp
lret
rolb
mov
xor
aad
jae
mov
fwait
bsf
inc
xorb
int
xor
dec
cs
sub
aas
enter
mov
adc
call
or
adc
xchg
xchg
xchg
cli
cs
and
icebp
and
dec
pop
jp
mov
sub
das
xchg
lahf
dec
mov
daa
and
js
or
sbb
push
jo
sbb
mov
mov
push
pop
popf
pop
mov
lock
sub
adc
jno
pusha
fisttpl
lock
push
inc
xchg
mov
and
or
push
sub
xchg
rorl
adc
jne
rclb
jl
or
cmp
es
test
pop
mov
mov
mov
cmp
loopne
daa
les
bnd
cmpsb
pop
js
shl
dec
cmc
cli
sahf
out
std
and
sub
lds
add
test
mov
pushf
inc
iret
mov
lea
sub
loop
add
push
mov
sahf
subb
scas
add
pop
mov
subb
mov
and
and
adc
dec
movsb
cli
add
loop
mov
sub
ljmp
cmp
sub
ja
pop
cmp
ljmp
lea
jl
mov
jo
mov
popf
pop
adc
adc
jmp
stos
int3
cli
out
xor
inc
push
mov
es
xor
shr
loopne
or
cwtl
ja
pop
leave
ss
fcmovne
sub
das
fldcw
sbb
jno
mov
movsl
cmp
cmp
adc
repnz
std
mov
cmp
pop
fcoml
cmc
cmc
inc
or
das
aad
jl
jmp
call
movsl
xchg
jno
inc
mov
and
cmpsb
jmp
bound
xchg
mov
xor
push
jae
in
repnz
push
cmp
cmp
iret
dec
fdivs
ret
inc
dec
xor
je
jg
stc
mov
repz
jbe
loopne
fldcw
ds
pop
test
add
mov
das
mov
shl
lcall
dec
and
and
xchg
xor
jl
popf
jle
mov
lods
push
xlat
mov
lahf
or
cmp
sub
idivl
leave
mov
jge
inc
cs
adc
add
movsb
out
cwtl
mov
adc
jmp
ljmp
push
adc
in
adc
outsb
or
mov
xchg
mov
hlt
dec
lret
push
xlat
sbb
pushf
sahf
sbb
inc
f2xm1
sbb
shrb
mov
or
sub
mov
jmp
push
sub
push
or
jno
lods
adc
andb
pushf
divl
push
dec
and
test
push
mov
mov
addb
movsb
fs
arpl
sub
push
mov
clc
and
add
xchg
imul
mov
mov
pusha
stc
clc
add
pop
rorl
jmp
shrl
mov
adc
mov
in
xor
jnp
pop
cmp
mov
nop
push
cmp
cld
sbb
jmp
in
movsl
test
pop
inc
cmpsb
les
xor
jmp
jge
icebp
lods
inc
js
xchg
daa
sarb
xchg
add
pop
pop
call
sbb
call
into
ret
leave
mov
jmp
sub
add
les
or
movsb
inc
push
shrl
call
jl
or
lret
cmc
lods
sbb
dec
mov
adc
or
call
shlb
pop
xchg
cmp
jne
push
mov
lds
jno
sbb
push
test
daa
push
push
lcall
out
pop
rolb
es
mov
mov
ficoms
mov
test
loop
movb
jp
or
jmp
xlat
dec
inc
int3
imul
sbb
push
jb
popf
and
inc
rorl
rcrb
mov
mov
mov
repnz
lock
mov
inc
mov
or
das
pop
add
push
inc
mov
xchg
icebp
mov
jmp
mov
or
xchg
cmp
sbb
jl
jmp
push
mov
ds
sbb
subl
cmpl
fldenv
not
clc
bound
xor
adc
xchg
mov
test
mov
cli
insl
push
dec
dec
in
js
mov
int
cmp
icebp
dec
adc
fcomip
jp
adc
push
adc
pop
jae
inc
call
and
fadds
lret
push
jmp
mov
hlt
out
je
jmp
jge
and
cmpsl
hlt
jmp
sbb
cmp
sub
fnsave
sbb
jmp
rcl
push
jae
pop
int
jbe
xor
inc
mov
repnz
push
aad
imul
xchg
jnp
nop
mov
pop
popa
mov
inc
fsubrs
push
test
popf
push
pop
in
mov
imull
adc
jmp
lock
int
pop
cmpb
es
addr16
xchg
lcall
je
dec
in
cltd
push
mov
add
repnz
jns
scas
sbb
daa
cmc
cwtl
jb
push
adc
loop
jno
call
mov
and
mov
loope
nop
sub
adc
jmp
jnp
sub
xchg
addb
psraw
cmp
jne
pop
jmp
and
pop
mov
or
scas
call
push
jge
popf
jle
addr16
pop
stc
icebp
test
xorl
cmpsl
and
add
add
jmp
imull
push
mov
fcmovne
icebp
push
sub
dec
or
mov
adc
xlat
in
in
add
outsl
icebp
push
jb
sti
adc
bound
add
faddl
test
inc
pusha
inc
leave
lcall
or
mov
dec
dec
xor
mov
ret
sbb
adc
mov
in
repnz
inc
add
mov
rorl
gs
fdivrs
cmp
inc
mov
test
xchg
mov
mov
jmp
or
icebp
daa
jecxz
add
adcb
jo
sbb
ja
push
add
mov
mov
int
mov
jne
cmpb
xlat
cmp
mov
mov
jp
mov
mov
jl
xor
inc
dec
or
jb
dec
xlat
adc
mov
xor
scas
dec
jp
push
testb
adc
adc
pop
call
push
add
pop
mov
xlat
popa
and
xor
sbbl
jns
pop
xchg
add
mov
jne
jmp
sbb
dec
inc
pop
ja
pop
pop
cmp
scas
mov
pop
outsb
fldt
es
movsl
test
stos
jne
sub
notb
or
and
mov
ss
mov
loop
aad
pop
add
fcoml
stos
call
push
jge
dec
adc
fldl2t
sub
aad
scas
fisubrs
mov
test
inc
or
daa
out
sbbl
icebp
cli
jbe
mov
and
pop
insb
insl
in
push
add
add
test
xchg
mov
mov
add
lahf
and
add
or
call
pop
mov
imul
push
cld
iret
dec
xchg
aaa
push
cmpsl
aad
jbe
add
cltd
inc
aad
jl
mov
sub
fsubrs
popf
push
mov
inc
or
or
jmp
add
jg
fnsave
jmp
icebp
scas
push
jnp
push
cmp
inc
mov
and
setb
addr16
xchg
jo
xchg
inc
les
std
and
mov
mov
pop
xchg
inc
add
mov
hlt
mov
add
rcrl
enter
fwait
jo
insb
call
mov
sub
mov
fdivl
mov
inc
xor
push
inc
jg
ja
or
stos
jmp
lret
imulb
add
cmp
lock
jmp
add
xor
out
addb
jle
lock
mov
or
cmpsb
xor
test
xor
lret
mov
fsubs
stos
rcrb
clc
scas
cmc
or
dec
add
or
data16
jbe
testl
mov
mov
dec
inc
xchg
mov
cmp
push
roll
shll
loop
inc
in
repnz
push
inc
push
xchg
rcll
jp
std
cwtl
repnz
mov
inc
lret
and
xchg
mov
mov
mov
ret
stc
xor
stos
and
and
imul
push
sub
orl
xor
mov
sub
push
daa
cmp
out
adc
xor
cmc
sbbb
inc
mov
mov
xchg
sub
shlb
mov
jnp
ret
jns
xorb
cmpl
adc
push
stc
and
mov
jg
xlat
imul
pop
test
add
bts
cmpps
insb
mov
cld
ret
jmp
mov
rcll
mov
mov
pop
sbb
xchg
inc
jnp
sub
call
sub
jmp
ljmp
aas
add
mov
push
cmpsl
jne
outsb
sub
repnz
rcrb
push
mov
popf
jge
lea
movsl
clc
les
shl
ds
pusha
xor
mov
rorl
dec
mov
cmpl
inc
lret
inc
rclb
sti
lcall
fisttpl
sahf
adc
sub
mov
inc
mov
sbb
jge
sbb
rsqrtps
fucomip
xchg
mov
push
inc
jne
add
inc
loopne
push
jmp
cmp
push
add
pop
repnz
inc
xchg
call
or
xor
and
adc
xlat
add
fsubs
mov
mov
out
jns
lret
add
ret
xchg
push
sbb
add
clc
add
jne
xchg
cmpsl
leave
adc
sub
fcmovbe
mov
and
add
pop
xchg
cld
testl
inc
cli
mov
sub
or
ljmp
push
clc
pop
test
jg
in
pop
pop
mov
or
push
jge
sub
lea
jg
sub
add
clc
test
xchg
dec
hlt
add
pop
push
sarb
xor
add
rcl
dec
pop
push
pusha
dec
jmp
loop
loope
mov
jge
mov
lahf
sbb
push
adc
sbb
cli
mov
sti
adc
xchg
imul
cmp
sub
icebp
fmuls
mov
or
scas
jno
mov
call
or
mov
shrb
das
mov
cld
mov
lret
cli
test
add
jmp
xchg
ds
mov
or
scas
daa
mov
jno
cmc
aas
aam
jo
test
adcl
pop
dec
xchg
pop
adc
js
sub
loop
push
ss
out
es
mov
push
lahf
int3
clc
jne
cld
sarl
popf
mov
repnz
pop
rcrb
mov
xor
test
ss
rolb
mov
mov
out
mov
inc
std
inc
hlt
push
pop
popf
int3
xchg
call
jecxz
mov
lcall
out
jg
mov
lock
fsubl
push
jmp
add
iret
or
fwait
mov
push
or
inc
xor
imul
mov
shll
mov
jmp
push
call
xchg
mov
mov
ffreep
icebp
or
aad
xchg
mov
ja
jmp
stos
clc
shll
ja
inc
inc
lock
jmp
adc
dec
jo
cmp
lahf
pop
test
call
mov
loop
hlt
pop
inc
or
pop
jnp
push
add
sti
adc
pop
in
cmpsb
das
mov
enter
rclb
ljmp
and
pop
mov
jmp
push
jecxz
xor
test
or
mov
mov
daa
and
sbb
xchg
mov
cmp
call
mov
push
jmp
ljmp
and
rcrl
mov
rclb
aad
pop
es
pop
enter
pop
push
pop
mov
int3
inc
ljmp
mov
inc
or
jmp
nop
aaa
bound
mov
dec
mov
inc
mov
pop
imul
fsubr
pop
cmpsb
cmp
mov
test
add
jno
sub
aad
jmp
mov
ljmp
add
test
jae
fsubrp
insl
sub
lret
movsl
inc
add
pushf
mov
jbe
or
aaa
sbb
xchg
fxtract
sub
ss
xor
rorl
pop
sbb
and
inc
test
gs
add
mov
dec
rclb
imull
mov
dec
push
inc
jb
mov
mov
jne
jg
adc
out
je
push
add
dec
xor
xchg
dec
inc
in
sub
sub
inc
dec
insb
mov
call
dec
faddl
add
mov
xchg
jge
xchg
push
stc
mov
mov
push
int3
xchg
test
mov
pop
repnz
cltd
hlt
dec
inc
push
lret
mov
sub
add
lahf
add
jle
mov
xchg
pop
mov
dec
dec
fmul
popf
jbe
mov
inc
push
cwtl
push
mov
mov
sbb
cld
jl
sahf
inc
xor
dec
cli
dec
sub
pop
fidivrl
mov
dec
hlt
or
scas
or
pop
push
jg
add
adc
rep
call
sbbb
lea
in
or
call
ficoms
int3
jb
sbb
sbb
inc
dec
dec
or
mov
add
xchg
sub
push
mov
subb
movsb
dec
mov
fwait
das
and
sbb
inc
sbb
mov
pop
xor
cmc
push
mov
das
jnp
cmpsl
sub
pop
imull
dec
ficomps
das
or
les
call
sbb
pop
jno
pop
inc
xchg
fs
mov
nop
inc
icebp
enter
jmp
subb
dec
jbe
inc
es
leave
aad
and
in
int
lret
xchg
mov
insl
bound
sar
es
or
in
out
out
cld
insb
popf
adc
add
xorb
pushf
movsb
xor
jp
sbb
aaa
das
fidivrl
sbb
fwait
cs
lahf
mov
push
clc
pop
jmp
pop
mov
addb
xchg
sub
ljmp
int
and
mov
mov
mov
mov
dec
pop
push
pop
mov
aaa
push
in
jmp
mov
call
mov
fldt
push
or
into
cmc
sub
movsl
hlt
add
rcl
adcb
icebp
aas
pop
sub
shl
cmpsb
xchg
gs
dec
data16
je
and
das
mov
inc
shll
nop
jmp
sub
cld
jae
mov
addr16
pop
xor
lahf
fidivrs
push
popf
dec
cwtl
pop
jmp
test
xorb
shlb
jbe
outsl
inc
sub
pusha
xchg
mov
mov
loopne
sbb
sub
inc
imulb
cmp
push
shlb
inc
scas
cmp
mov
add
cwtl
call
xchg
inc
xor
fisttpl
push
aas
inc
pop
push
inc
pop
jg
aad
jmp
dec
xchg
push
pushf
lods
ja
mov
aaa
das
daa
int3
jae,pn
stc
jnp
mov
repz
pop
es
pslld
inc
jmp
push
xlat
mov
lods
adc
jo
sub
xor
das
jmp
jb
xchg
outsl
or
add
xchg
sub
xchg
ja
shlb
imull
and
mov
sahf
jae
fwait
dec
mov
inc
push
fldt
ja
cmpsl
call
not
or
pushf
lret
dec
add
mov
popa
cli
repz
sbb
enter
and
icebp
sar
sti
addr16
add
push
mov
push
mov
fdivs
xor
std
bnd
add
mov
jo
outsb
mov
push
sbb
mov
jmp
lahf
data16
loopne
add
pop
aad
xchg
jmp
jle
lret
or
sbb
push
lock
or
jno
inc
push
adc
pusha
mov
or
jne
inc
fucom
push
push
out
jb
dec
outsl
xlat
dec
test
or
mov
movsl
sub
sahf
stc
aad
push
pop
jb
in
call
and
push
cwtl
add
adc
cs
call
mov
push
cmp
dec
call
xchg
mov
inc
stos
mov
mov
mov
clc
sarl
push
xchg
or
je
lret
je
adc
and
loop
lock
addb
mov
call
cmp
push
lret
mov
sahf
or
jmp
leave
inc
clc
mov
jp
cmc
popl
sub
pop
pop
adc
or
push
mov
jge
jle
inc
pop
fisubrs
inc
xor
or
inc
jmp
xor
repnz
pop
aad
and
daa
adc
fwait
enter
sub
add
in
jo
mov
mov
inc
xchg
push
push
xchg
inc
jo
shll
dec
inc
bswap
add
mov
sbb
xchg
neg
cmc
mov
cltd
add
push
cmpsl
ret
icebp
hlt
inc
cmpsl
dec
push
cs
or
sub
sbb
movsb
mov
js
ss
jno
sbb
leave
mov
in
pop
fwait
out
adc
or
fistpll
inc
xor
inc
out
or
popa
fistpll
dec
mov
popf
into
je
push
or
xchg
push
push
repnz
aas
xor
pop
jnp
or
cwtl
lods
sbb
sbb
or
fimuls
dec
jge
inc
cmpsl
scas
rorb
jmp
add
out
add
in
cmp
pop
xchg
fldl
int3
dec
mov
dec
xchg
jnp
or
pop
lods
ja
jne
push
icebp
push
mov
pop
mov
in
ret
xor
jmp
ficomps
call
push
lods
roll
push
push
pop
mov
mov
je
pop
push
mov
or
fadds
push
loop
pop
sahf
xor
mov
pop
rolb
or
andnps
mov
lock
dec
shrb
mov
cli
es
in
insb
push
and
mov
pop
jmp
mov
hlt
lahf
subl
psubd
push
push
stos
dec
xchg
jmp
mov
and
ljmp
aad
cmp
push
and
mov
out
inc
cld
xchg
mov
shl
lods
sbb
fdivrs
push
push
dec
dec
stos
jl
mov
aas
popf
out
jmp
xor
jno
xor
xchg
mov
push
mov
push
jo
cld
push
jmp
xchg
in
fsub
push
xchg
push
je
and
and
inc
fxch
mov
pop
mov
fs
push
mov
fistps
std
inc
movsl
pop
push
gs
fsubr
pushl
mov
pop
add
in
dec
inc
movsl
adc
xchg
sub
and
xor
jg
and
xchg
ljmp
or
or
jmp
adc
pop
inc
jne
pop
jb
adc
pop
push
popf
jb
in
dec
push
lret
sub
sbb
mov
negl
mov
adc
addb
cmp
mov
mov
loop
imul
pushf
adc
scas
sbb
and
jecxz
cmp
bound
aaa
lock
push
mov
sarb
push
mov
adc
xor
cmp
sbb
rcrl
andb
adc
push
inc
sarb
sbb
loopne
cld
sbb
jns
xor
jmp
or
data16
sahf
mov
aas
test
or
adc
sbb
pop
inc
stos
push
hlt
mov
xor
xor
lock
enter
test
mov
lods
xchg
movsl
xor
leave
cmp
push
cmp
repz
add
mov
mov
push
lret
cs
sub
in
mov
mov
adc
movsl
sub
pop
bound
dec
jo
mov
xchg
in
fucomp
mov
lods
push
movsl
test
adc
jo
nop
sbb
inc
mov
test
jecxz
rorl
push
add
test
or
push
arpl
cwtl
cmp
fisttps
pop
clc
in
or
mov
shl
push
bound
inc
cmp
mov
cmpsb
das
sub
mov
push
push
shl
test
mov
das
sub
mov
fwait
cmc
sub
xor
mov
push
adc
les
enter
or
jmp
cmpsb
mov
popf
xor
or
or
push
es
mov
add
mov
mov
xor
xor
imul
mov
cmp
das
sbb
inc
out
dec
nop
push
and
shlb
ret
jno
push
test
pop
mov
xchg
popa
je
mov
xor
fsubrl
push
ss
sbb
jbe
call
jp
fcoms
icebp
iret
xor
subl
cli
fdivrs
and
test
fistpl
xchg
push
pop
sbb
sbb
ja
and
jmp
shll
cs
add
dec
adc
popf
hlt
mov
and
dec
jns
call
addr16
pop
adc
jge
repnz
mov
adc
jmp
pop
out
ja
fisubrs
stc
enter
out
pop
stc
or
xorl
mov
jle
sub
and
sub
cwtl
pop
fimuls
jo
test
pusha
mov
arpl
push
rcl
in
lahf
into
hlt
lcall
xlat
ja
gs
and
lds
push
notb
xchg
movsl
add
sub
fnsave
test
pop
fisubrs
mov
mov
xrelease
dec
push
icebp
loop
das
xchg
xchg
mov
sub
lahf
jle
xchg
add
sti
enter
std
or
ret
daa
lods
fistl
sub
add
dec
fisubrs
out
in
popa
popf
rorb
ret
insb
sbb
stc
cmc
jmp
imul
sahf
pop
or
sub
rol
jbe
mov
xchg
mov
sbb
cwtl
jno
jo
imul
call
inc
mov
icebp
inc
mov
ss
jl
ja
xchg
add
rorl
aaa
mov
insb
pop
sub
rcrb
in
jno
jmp
icebp
inc
call
jmp
arpl
add
mov
mov
xor
jne
cmp
push
fsubl
adc
cmpsl
inc
jp
int3
mov
or
stos
xor
jmp
jl
sbb
outsb
iret
jo
push
pushf
jbe
lods
leave
dec
addr16
or
in
jmp
clc
pop
mov
dec
cs
shlb
mov
out
xor
sub
popf
in
cmpb
pop
call
enter
dec
add
ljmp
adc
jnp
inc
int
mov
add
fbld
insb
push
jnp
and
cmc
add
jmp
addr16
sbb
cmp
stos
dec
xor
pop
mov
lret
jge
dec
sarl
aas
or
mov
mov
stc
rcrl
mov
xor
dec
pusha
pop
cwtl
add
cmp
pop
jo
xchg
test
push
inc
sub
mov
sub
push
mov
inc
ds
cmc
pop
cwtl
cli
mov
add
fistps
movsl
mov
js
addr16
cmp
or
cmpsb
addb
add
mov
divl
pop
jge
add
push
or
pop
push
dec
and
mov
int
pop
test
add
adc
call
add
mov
sbb
mov
mov
or
sub
and
ljmp
jl
mov
loop
push
pop
inc
lods
dec
lea
sbb
jg
sub
inc
mov
jo
rclb
iret
xchg
mov
clc
ret
jb
cwtl
pop
push
push
push
decl
lcall
push
rcrl
clc
cmpsl
xor
movsl
mov
je
sarb
push
cmp
lds
hlt
or
pop
cli
xchg
xchg
mov
jb
xor
mov
jno
rcrl
mov
scas
xor
ss
lea
sbb
out
mov
xchg
mov
jae
call
mov
scas
fildll
out
imul
inc
mov
outsl
into
movsl
xchg
rclb
stos
cmp
call
cmp
pop
loop
ret
sub
fisubl
dec
lods
mov
push
call
adc
jne
mov
or
repz
dec
jmp
pop
les
xchg
outsl
xchg
add
push
fs
aad
push
imul
mov
cwtl
in
mov
jo
jg
fcomps
std
pop
mov
xorb
inc
inc
mov
xchg
mov
pop
cwtl
lods
push
xor
sub
into
dec
add
jno
lea
sti
mov
xchg
repnz
push
cwtl
jne
out
daa
mov
inc
pop
jecxz
scas
sbb
pop
sbb
inc
cs
int3
sub
fisubrl
iret
das
cmp
inc
int
icebp
ret
orb
mov
mov
push
pop
jle
sbb
lcall
pop
inc
mov
or
fwait
stos
dec
ljmp
xor
mov
lea
cmpl
pop
mov
add
jbe
adc
cmp
aam
dec
mov
xchg
push
lods
jb
insl
sub
pop
push
inc
jb
adc
pop
adc
call
jnp
pop
hlt
or
sti
push
insb
mov
jle
sbb
xlat
nop
push
pop
in
fbstp
inc
xlat
mov
lods
out
icebp
rcrb
push
subb
or
jle
mov
divps
add
sub
mov
sub
mov
inc
add
sub
lret
or
or
dec
daa
stos
and
pop
inc
dec
pop
jo
js
shr
xor
pushf
cmp
jmp
sub
and
and
mov
aad
out
push
sub
mov
ljmp
adc
clc
jne
jmp
mov
sub
bnd
std
jecxz
mov
nop
mov
sahf
dec
ror
push
addr16
mov
loop
pusha
cmp
loope
in
dec
fstpt
xchg
add
mov
jbe
fwait
xor
xchg
inc
repnz
jns
out
inc
push
cmc
test
mov
inc
jmp
pop
fdivp
sbb
push
push
cli
add
cli
pop
xor
or
xor
std
sbb
jbe
or
mov
jmp
push
insb
and
aad
sbb
mov
inc
sub
adc
xchg
adc
push
jnp
and
xchg
cmp
inc
jmp
repnz
scas
sbb
sub
jmp
or
xchg
or
adc
or
mov
inc
mov
popf
fimuls
test
push
cmp
push
or
xor
fwait
mov
push
dec
mov
add
mov
or
xchg
mov
push
clc
or
addr16
aad
call
and
fists
jge
outsb
icebp
or
mov
mov
fstps
leave
or
sub
mov
ss
pop
fists
mov
das
cmp
mov
pop
xchg
stc
mov
jg
mov
clc
pop
in
and
mov
sub
insb
lcall
jnp
jmp
scas
cwtl
dec
cmp
xchg
cmp
inc
push
sub
add
fstps
xacquire
add
jne
mov
addb
or
dec
push
cwtl
add
cltd
mov
jb
jbe
pop
add
test
mov
and
xchg
xor
mov
or
and
xchg
pop
mov
das
sbb
or
stos
mov
pop
call
mov
xor
xchg
mov
pop
punpckhbw
loope
xchg
repnz
cmp
shlb
or
jns
lret
xor
push
mov
pop
mov
fstps
or
and
mov
sub
call
inc
aaa
cld
sub
xchg
pushf
shll
sarl
bound
jns
test
inc
xor
in
icebp
add
xchg
fimull
std
cwtl
cmpsb
inc
xor
add
cltd
or
shll
and
ss
cs
pushf
iret
fbstp
imul
inc
fimull
dec
sbb
fnstcw
addl
mov
or
call
add
testb
push
scas
push
pusha
inc
xchg
push
into
sarb
mov
pop
cltd
shlb
int3
mov
das
pop
pminsw
xor
and
es
ror
inc
add
out
push
xchg
xchg
inc
mov
pop
jge
mov
inc
push
jns
pushf
or
inc
push
sbb
fcompl
mov
pop
fs
lods
mov
inc
push
and
add
push
fdivl
aas
orb
mov
mov
cltd
jns
jb
mov
pop
sbb
aam
lcall
add
push
pop
pop
dec
iret
push
push
sbbb
add
pop
jmp
mov
adc
sub
lock
inc
jmp
mov
or
es
stos
push
in
or
int3
mov
pop
test
or
stos
adc
loop
cld
ret
or
jmp
and
add
mov
mov
pop
mov
pusha
call
std
sbb
test
jne
call
insl
mov
mov
sarb
adc
jnp
pop
das
inc
lret
loope
scas
ret
or
pop
mov
add
cmpsl
cli
cmp
stos
jecxz
add
push
mov
jnp
sbb
je
adc
pushf
aam
push
call
add
sbb
aam
push
ljmp
push
pop
mov
sbb
and
lods
fildll
int
jnp
push
sti
out
pop
dec
lret
aad
cmp
lret
dec
push
push
cmpsl
sub
xchg
xor
in
xchg
jp
mov
pop
mov
jecxz
xor
repnz
mov
mov
inc
or
cwtl
movsb
sbb
jl
movsb
push
push
bound
mov
jge
mov
inc
lcall
in
jns
dec
cmp
mov
test
lret
push
data16
ss
xor
sbb
dec
push
push
mov
ljmp
inc
stos
jcxz
daa
or
aaa
jmp
data16
bound
mov
fwait
xor
inc
fs
mov
xor
xchg
or
call
dec
cmp
enter
jne
push
or
lds
repnz
fucomp
mov
je
push
cld
push
cmpsb
xchg
ja
negl
popf
push
sbb
xor
jle
xor
aam
call
pop
repz
inc
hlt
add
and
and
sti
sub
nop
jne
cmp
pop
dec
in
dec
mov
fidivrs
push
and
fldenv
test
cli
hlt
icebp
lods
mov
repnz
pop
popa
cmpsb
dec
add
cmc
push
lea
out
and
push
dec
in
and
repnz
in
mov
scas
js
dec
test
xchg
or
cld
hlt
pop
imul
xor
rcrb
ret
dec
jb
inc
push
movaps
lahf
ljmp
fmulp
mov
mov
cmp
hlt
mov
pop
or
shl
push
add
imul
xor
or
or
add
xlat
jb
dec
sub
cmp
test
mov
or
cs
jle
lea
cmp
cmp
imul
dec
or
mov
scas
shlb
xchg
out
rcl
outsb
mov
pop
xchg
mov
je
cmp
and
rcrl
sti
push
orb
out
sbb
add
adc
cmpsb
clc
gs
adc
jecxz
and
stc
movntq
out
mov
dec
sbb
sahf
sbb
aam
jg
popf
inc
out
or
add
push
dec
push
jge
inc
dec
hlt
sub
daa
fdivl
xor
sub
addl
jmp
adc
mov
fidivrl
ret
je
or
cmp
lods
xchg
add
push
call
pushf
push
xchg
cwtl
add
pushf
and
out
sub
jecxz
and
inc
lods
jmp
out
stc
dec
ret
pop
call
sti
pop
jmp
dec
daa
rcrb
pop
mov
lahf
add
dec
mov
cwtl
dec
jmp
jge
in
daa
push
repz
mov
adc
jge
hlt
faddl
ljmp
cmpb
xchg
sbb
mov
mov
fs
stos
xchg
lods
popf
into
jmp
xchg
and
cltd
imull
mov
dec
or
stos
gs
xor
insb
es
les
and
mov
test
cmp
aam
lcall
sbb
cmp
mov
call
inc
pop
movsl
add
and
or
mov
inc
xchg
test
push
or
mov
xchg
sbb
ret
repz
fiaddl
pop
add
xchg
jae
test
adc
jnp
mov
cwtl
popa
mov
push
mov
nop
and
mov
inc
xchg
shll
xchg
mov
popa
clc
movsl
pop
xor
fstp
or
fisttpl
pop
add
iret
push
jmp
lcall
fimuls
mov
jmp
mov
inc
push
idiv
xor
mov
or
clzero
pop
pop
icebp
nop
xor
push
test
ret
and
mov
mov
jno
orb
int
or
mov
sbb
inc
inc
repz
sahf
xchg
xlat
test
scas
push
repz
sbb
test
sarl
js
test
lock
aas
sub
dec
inc
cli
enter
fldenv
or
test
cmp
inc
iret
imul
push
and
icebp
js
pop
aas
mov
shlb
mov
and
mov
pusha
popa
dec
xor
inc
or
mov
mov
xchg
dec
add
push
cmpsl
adc
sbb
lahf
push
cmp
pop
or
push
dec
pop
loopne
jmp
aam
dec
mov
mov
cmp
cli
adc
mov
mov
mov
fadd
insl
leave
push
inc
shl
pop
out
mov
push
call
jno
push
testb
popf
ja
mov
mov
mov
push
push
js
ljmp
mov
icebp
sbb
push
dec
cmp
dec
mov
test
mov
call
test
jge
xchg
xor
cli
adc
jmp
fwait
and
add
or
add
cld
loop
inc
sbbb
sahf
cmp
and
aam
sahf
cmpsb
jo
mov
hlt
pop
dec
test
mov
pushf
mov
pop
add
ja
cmpsb
stos
mov
stc
call
stos
outsl
ljmp
push
add
xchg
pushf
insb
sub
cmp
lds
fwait
iret
mov
cmp
mov
call
sbb
inc
lods
and
jmp
popa
and
es
xchg
iret
cmp
jg
call
aad
xchg
fdivl
into
aas
pop
int
pop
push
adc
fstpl
std
out
negl
cmp
sub
movsl
mov
mov
mov
ljmp
mov
subb
fistps
ds
mov
add
sahf
outsl
cmp
dec
and
mov
sahf
and
jo
int3
mov
mov
aaa
sub
ja
ret
clc
repz
inc
shr
xor
sbb
imul
pop
test
sbb
rorb
or
ljmp
and
shr
xchg
leave
jbe
and
fcompl
or
bound
adc
out
adc
dec
push
fisttps
xchg
mov
leave
push
xor
lods
test
mov
add
lcall
rorb
std
scas
mov
mov
push
stos
or
adcb
in
in
jae
pop
jmp
xchg
xor
and
inc
inc
ret
test
xchg
arpl
ret
pop
jg
mov
mov
mov
fistpl
sub
or
mov
sbb
inc
jbe,pt
jo
mov
ja
je
and
mov
and
dec
loop
or
mov
mov
loopne
xor
xor
jae
call
mov
andb
xchg
jbe
sub
int3
repnz
cli
hlt
fcoml
nop
jecxz
pop
push
jp
hlt
call
lahf
pop
xchg
mov
mov
jnp
jmp
call
or
and
push
jo
cld
push
in
sbb
and
inc
aas
push
ret
adcb
shrb
les
inc
xor
addr16
pop
pop
imul
out
clc
sbbb
cli
or
sbb
call
mov
sbb
jns
dec
dec
mov
nop
fwait
dec
jle
sbb
cmpsb
xor
mov
mov
sub
mov
andl
pop
push
or
shll
push
or
icebp
mov
int3
pop
mov
out
dec
add
call
dec
mov
mov
push
sbb
mov
mov
mov
pop
fnstcw
xor
cltd
test
out
xchg
xchg
and
pop
loop
in
clc
push
inc
dec
push
mov
add
adc
push
inc
cmp
popl
icebp
mov
addb
int
call
mov
mov
lcall
decl
clc
or
daa
or
movsl
or
mov
jae
bound
ljmp
inc
repnz
addl
cmpb
xchg
mov
add
or
adc
xchg
dec
lods
and
mov
mov
dec
jmp
dec
pop
add
dec
shrb
dec
jb
leave
add
adc
jo
sub
pop
inc
in
lahf
mov
mov
mov
movsb
test
mov
in
aam
push
jno
fwait
xor
mov
push
test
jge
xchg
cli
mov
decb
push
div
cmp
popa
sub
jno
iret
lock
mov
or
pushf
push
cmp
pusha
jb
jno
mov
mov
push
je
dec
cmc
adcl
push
pop
sub
and
sarl
and
inc
cmpsb
adc
icebp
push
cmpsl
das
enter
stc
sub
cli
lea
push
jecxz
mov
icebp
imul
push
and
cli
repnz
pmaxub
or
arpl
jo
scas
repnz
xor
sbb
pfacc
xor
or
jo
add
mov
mov
sbb
lods
rcll
in
arpl
fidivrl
out
lock
pop
nop
loopne
xchg
and
cmp
dec
icebp
pop
jb
push
rcl
aas
xor
mov
pop
dec
mov
test
cmc
lock
cmp
jnp
daa
lock
jne
in
repz
incb
add
inc
lret
pop
and
aad
incl
push
movsb
ds
sbb
lock
out
mov
lock
int3
inc
repz
repz
cmpsb
mov
mov
jge
push
lock
lahf
xor
lock
lret
xchg
or
pop
push
cmpsb
mov
testl
xchg
ljmp
sbb
xchg
add
jmp
ror
repz
fldenv
loop
icebp
dec
leave
dec
lcall
test
aas
mov
mov
lock
cmp
xor
imul
loopne
inc
adc
or
inc
or
mov
mov
jb
adc
mov
lret
mov
repz
cwtl
mov
pop
lock
ljmp
mov
mov
add
xor
movsb
pop
test
arpl
jl
lock
popa
xchg
mov
rol
add
jge
xlat
pusha
and
shll
mov
loopne
insb
sbb
jno
inc
sub
cmp
lock
pop
int
add
push
int3
pop
add
push
ljmp
jae
lock
xchg
ja
aas
push
and
push
nop
xor
stos
dec
xchg
sar
push
xchg
mov
fbld
jle
adc
lret
and
mov
loope
stos
fadd
lock
inc
xchg
pop
fstpl
pmaxsw
mov
and
xchg
cmc
scas
and
icebp
cmp
xchg
clc
int3
jle
dec
fsts
push
out
mov
mov
shlb
mov
pushf
icebp
mov
push
daa
clc
inc
aad
test
test
pop
xchg
imulb
sbb
cmp
fbstp
pop
xchg
imul
lock
mov
push
sub
sub
loopne
mov
pop
mov
push
pushf
lock
add
mov
lds
inc
rcll
repnz
mov
testl
dec
xchg
mov
call
pop
push
lock
insl
xchg
retw
push
lock
ja
inc
cltd
lret
lock
repz
stos
test
sub
pop
adc
dec
cmp
mov
jp
shl
cmp
divl
mov
fcompl
fsubs
lahf
lret
lock
pop
mov
fwait
repnz
loop
sahf
mov
pop
or
jecxz
lock
bound
pop
incb
lock
icebp
or
or
inc
test
shll
or
ja
jg
js
sbb
pop
adc
movsl
call
mov
dec
sbb
mov
aaa
lock
xchg
xchg
lock
add
sub
jbe
adc
pop
pop
inc
lock
add
cld
pop
cwtl
mov
shrb
leave
rclb
jp
and
push
mov
lock
mov
insl
push
in
cs
shl
mov
xchg
rep
ret
adc
mov
movsb
out
cld
call
sub
mov
mov
sbb
adc
popf
fwait
call
aas
xchg
notl
inc
lock
loop
mov
adc
mov
inc
lock
outsb
pop
sbb
xchg
icebp
jle
xor
leave
insl
test
leave
aad
mov
sbbl
pusha
dec
mov
in
mov
loopne
icebp
cmpl
lock
popf
mov
xor
aas
rolb
out
call
xor
lods
jecxz
sbb
fisubrl
dec
cmp
push
sub
test
lock
jbe
dec
xchg
jnp
movhps
pop
cvtps2pd
arpl
cmp
lock
movzbl
jo
insl
jbe
lock
dec
and
inc
test
jl
stos
mov
lods
mov
adc
push
es
cwtl
sbb
aas
pop
in
imul
mov
lock
je
sub
pop
inc
xchg
mov
aas
cmp
ja
repnz
sahf
test
aaa
mov
dec
push
cmp
mov
lock
fwait
cmpsb
test
aas
xor
mov
lock
mov
addr16
popl
jbe
lock
xor
ljmp
pop
jmp
fwait
es
enter
jae
cmpsl
mov
addl
cmp
adc
stos
dec
xchg
dec
repnz
inc
push
and
push
sbb
adc
cmc
arpl
xchg
je
xor
pop
adc
fistpll
test
jo
xor
nop
xor
sahf
div
sbb
les
cwtl
pop
mov
ret
mov
and
dec
jo
xor
mov
pop
push
inc
loope
sbb
incl
xchg
shl
fnstsw
push
into
sbb
mov
sbb
jo
lea
xor
sub
mov
inc
pop
mov
lock
lds
or
lock
mov
cmp
in
jnp
movaps
jp
sbb
or
xlat
shl
frndint
lock
push
mov
mov
fstp
push
lock
imul
xor
cmc
lds
mov
sub
mov
push
enter
lock
or
icebp
js
call
xchg
mov
pop
rcrl
push
cmp
push
xor
mov
in
int
pusha
or
lock
adc
rclb
fwait
loope
loopne
push
sbb
iret
lock
out
test
lock
inc
aam
lock
out
mov
or
imul
sbb
ja
sahf
jecxz
push
sub
enter
sarb
sete
push
pop
nop
jbe
jmp
sub
js
lock
in
dec
jp
mov
pop
lds
nop
jmp
cmovbe
jo
mov
mov
push
mov
dec
je
mov
int
pop
and
push
fucomi
scas
mov
sub
stc
jo
push
mov
ret
icebp
sti
jp
andb
int3
xor
repz
fcomps
push
jecxz
lock
pop
repz
jp
aad
es
add
lret
jb
mov
jns
push
out
test
ret
sbb
arpl
stc
cltd
daa
iret
js
mov
xor
leave
and
dec
jno
adcl
sub
mov
lock
cmp
sarl
xor
mov
cltd
inc
ds
or
ljmp
inc
jae
adc
frstor
cmp
jnp
lock
mov
dec
adc
jo
test
add
out
cmpsl
lock
mov
fwait
call
or
in
arpl
push
adc
add
add
mov
insl
mov
mov
imul
sub
xor
lahf
mov
stos
push
mov
jne
sbb
lock
clc
and
cmpsl
pop
jbe
lock
repnz
adcb
push
add
shl
xor
jmp
in
mov
lcall
jbe
sbb
jg
loopne
xlat
psubsb
mov
lock
sarl
push
es
mov
insb
and
repz
mov
mov
scas
push
add
lcall
pop
xchg
es
cmpsb
mov
hlt
jecxz
lock
xchg
lock
mov
add
add
mov
in
lock
sbb
aad
push
lock
push
imull
hlt
dec
enter
cmp
cltd
xchg
adc
push
or
les
in
mov
lock
cli
clc
std
mov
gs
cmp
in
jecxz
add
lds
ljmp
xchg
fldt
jne
pop
pop
daa
mov
jbe
lock
and
adc
incl
addr16
jmp
dec
mov
cwtl
add
hlt
push
lock
pushf
clc
mov
popa
enter
mov
hlt
loop
xchg
and
cmpsb
lds
dec
lock
push
push
jle
jns
xor
je
or
sbb
add
jge
dec
js
jl
inc
mov
pushf
lock
xchg
cs
mov
lock
stos
mov
iret
out
lock
adc
lea
lds
lock
jae
mov
scas
push
or
and
lcall
fldl
pop
or
clc
data16
icebp
push
adc
sbb
xchg
outsl
pop
add
or
push
js
icebp
dec
xor
xchg
or
lock
xchg
loopne
in
pop
sbb
lcall
dec
adcb
sub
dec
inc
jg
mov
jecxz
lock
cmp
xchg
aad
or
push
data16
mov
lock
cwtl
dec
xchg
dec
sub
adc
imul
lock
or
sbb
mov
sahf
ljmp
pop
mov
lock
out
incl
pusha
movsb
lock
cmp
pop
add
or
sti
and
imul
int3
jmp
inc
jg
push
or
jmp
je
in
inc
cs
or
cmp
test
sub
or
pop
dec
xlat
nop
enter
stos
cmpsb
repz
xor
scas
clc
negl
xor
arpl
push
xchg
sbb
mov
cmpsl
mov
imul
daa
or
call
and
or
inc
call
stos
mov
shl
push
fidivs
xchg
test
sti
push
repnz
call
jle
scas
push
int3
orl
cmp
andb
or
or
shlb
test
pushl
ret
int3
lahf
cli
cli
outsl
push
and
ds
mov
push
sub
or
mov
insl
xchg
or
dec
in
jmp
inc
or
sar
add
dec
scas
stos
jg
adc
pop
loopne
test
pop
sbb
push
in
mov
inc
xchg
rorb
xor
daa
or
dec
pop
call
mov
mov
pop
xor
out
dec
jno
int3
xor
push
sti
pop
cmpsb
lods
push
sti
xor
sub
jbe
xorb
xchg
pop
mov
or
and
push
dec
daa
js
push
sbb
enter
add
enter
dec
int3
mov
sbb
add
movsb
mov
bnd
mov
mov
push
lahf
imul
imul
in
das
jno
inc
jmp
cli
mov
xchg
xchg
sub
sbb
ret
push
sbb
xchg
jmp
pop
outsl
mov
and
pop
pop
xchg
les
push
leave
mov
xchg
mov
jge
push
or
pop
stc
imul
or
inc
add
cli
les
dec
dec
mov
popa
inc
mov
sbbb
pop
pop
lahf
and
add
mov
pop
pop
stos
dec
ljmp
sbb
cld
movsb
jae
call
scas
ljmp
mov
pop
imul
pop
add
cltd
jp
bound
cs
push
xchg
cmp
pusha
popa
lahf
jge
aas
imul
and
testl
lcall
lahf
adc
jecxz
cmc
repnz
or
sbb
push
stos
dec
adc
shrb
ljmp
sub
xchg
pop
out
call
sub
or
cli
inc
jg
mov
je
fsts
pop
inc
aam
ja
inc
shll
mov
sti
xchg
lea
js
jle
push
mov
jae
leave
mov
pop
sub
mov
jae
xchg
push
add
ret
lods
dec
call
out
cmpsl
shll
sub
or
sub
sti
mov
jmp
enter
cli
ret
popl
sub
fistps
xchg
pop
jmp
imul
mov
xchg
mov
mulb
imul
pop
xchg
push
push
or
lahf
lea
mov
mov
pop
pop
int3
fidivs
jb
dec
xor
inc
in
orb
pop
adc
icebp
fimull
adcb
int3
shrl
shl
sub
divl
push
push
in
mov
addr16
inc
xchg
dec
add
mov
shll
pop
pusha
mov
std
or
sub
movsb
gs
mov
test
mov
sbb
setne
cmp
orl
fwait
adc
add
push
pop
in
ret
sti
mov
fimuls
mov
push
push
pop
mov
inc
pop
decb
movsl
icebp
inc
inc
adc
cmp
jmp
pusha
xor
mov
sbb
xor
subl
xlat
fs
or
cwtl
adc
dec
pop
dec
fwait
ja
push
or
daa
cld
addb
mov
mov
sti
cld
out
mov
fwait
dec
shrb
popl
inc
push
mov
daa
mov
imulb
or
sti
ljmp
pop
scas
push
add
pop
repnz
icebp
popf
arpl
fldcw
fwait
stos
aam
push
nop
inc
in
mov
add
sbb
sub
leave
and
jno
mov
shll
jle
sub
jmp
mov
mov
jp
cmp
push
jbe
ror
leave
mov
lock
sbb
call
icebp
mov
mov
lea
rorl
or
lock
push
cwtl
mov
cmp
ja
xchg
lcall
out
nop
mov
popl
xor
pop
pop
mov
mov
and
dec
push
cmp
movsl
loopne
mov
mov
jle,pn
std
push
lret
dec
push
shrb
lea
outsb
dec
dec
and
stos
jge
add
mov
push
mov
ss
xchg
mov
mov
rcrb
ljmp
adc
jl
push
adc
lea
sti
mov
sbb
cmc
popf
int3
inc
cmp
jno
inc
mov
js
loopne
fisttps
or
or
mov
dec
sub
cmp
mov
adc
imul
mov
mov
mov
paddsw
or
ja
push
std
stos
and
insl
mov
cmpsb
add
mov
push
inc
mull
jmp
mov
dec
jp
popa
mov
test
sbb
int3
repz
pushf
pushf
into
lock
xor
xor
mov
pop
push
shll
inc
xor
mov
sahf
cmpsl
outsl
imul
or
add
or
hlt
mov
lret
fcmovbe
sti
scas
mov
dec
xor
push
ss
sub
xchg
mov
jmp
hlt
dec
clc
push
push
aas
mov
jno
inc
mov
insl
jge
inc
add
sbb
push
test
mov
leave
sbb
adc
add
pop
mov
cs
fdivr
call
cmp
pop
lods
sub
fsubrs
int3
xacquire
jmp
je
adc
inc
or
mov
ljmp
and
or
pop
mov
lds
call
jp
xchg
or
sti
push
inc
dec
clc
cmpsl
push
pop
loope
pop
inc
mov
xor
and
enter
scas
sub
xor
outsl
and
mov
sub
out
cmp
lock
mov
or
sbb
leave
or
cwtl
fs
inc
stos
cmp
dec
and
xchg
mov
pop
insb
ret
fsubl
clc
jg
cmc
stos
sub
cmpl
daa
xor
out
mov
add
sub
push
cmc
daa
mov
or
pop
xor
sub
sub
jge
es
jo
mov
jne
dec
cmp
mov
push
pop
popf
jmp
push
xchg
sti
add
jbe
pop
loop
cmp
add
inc
xor
add
xchg
int
loop
out
lds
push
xchg
imul
or
popl
cmpsl
add
stc
jl
mov
push
push
xor
and
push
lahf
in
daa
pop
ss
push
out
stos
pop
dec
addl
jne
adc
mov
mov
inc
call
fdivrl
outsb
pop
dec
dec
xor
pop
pop
pop
jmp
das
pop
loopne
daa
xchg
pop
xlat
adc
jmp
adcb
add
pop
mov
jae
or
dec
sbb
outsl
lret
push
jno
outsb
cmp
test
clc
call
pop
fmull
nop
dec
out
cmp
inc
rolb
hlt
lds
daa
sbb
ret
and
jmp
xor
stos
popf
ja
cwtl
add
xchg
mov
sbb
inc
or
dec
sub
push
mov
or
mov
adcl
repnz
xor
add
add
das
leave
xchg
repz
jbe
pop
xchg
pop
popf
jecxz
cmp
testb
inc
mov
rorb
mov
xchg
jo
js
testb
jmp
popa
std
inc
mov
dec
fstpt
dec
xchg
adc
into
cltd
sete
mov
or
scas
mov
imul
jmp
or
xor
or
call
mov
fstps
mov
push
std
flds
sti
or
push
mov
or
inc
jge
mov
pop
lret
sub
icebp
imul
cmp
inc
scas
scas
arpl
and
in
xchg
mov
mov
adcb
shlb
xchg
jmp
xor
cmpsl
push
mov
jmp
xorb
repnz
xor
into
std
ds
sub
jmp
test
cmpsb
andb
push
mov
ds
dec
dec
loop
or
jmp
mov
popf
mov
jge
mov
sbb
aad
popa
cmp
in
cltd
aaa
int
out
loopne
push
cli
pop
xor
pop
faddl
xchg
cmpsl
jecxz
xchg
sub
inc
xchg
stos
int3
sub
loop
or
dec
cmp
cmp
push
fistps
std
iret
add
jg
and
aaa
repnz
or
cmp
push
cmpsb
hlt
sahf
ret
incb
jo
out
mov
xchg
insb
std
cmp
xchg
pop
outsb
jo
mov
push
add
mov
mov
or
adc
loopne
jg
icebp
xor
aam
cmpsb
push
mov
iret
aam
imul
jp
rorl
add
xchg
sti
jb
fs
sub
arpl
sti
cmp
jo
xor
jmp
sbb
cmp
imul
mov
pop
negb
xor
cwtl
jno
ljmp
dec
adc
cmpsl
inc
mov
mov
stos
dec
enter
das
xchg
imul
and
jns
xorb
and
setl
mov
mov
popa
dec
sbb
dec
lahf
arpl
jmp
sbb
stc
push
sub
or
call
enter
lret
mov
jmp
pusha
push
push
xchg
xchg
outsb
sbb
mov
push
adc
mov
cmc
sub
xchg
lret
xor
pop
or
adc
ret
push
sti
sub
fwait
sbb
push
inc
and
or
jbe
scas
jle
push
daa
or
addl
cmp
mov
test
jp
xchg
popf
push
adc
inc
dec
pop
cmpsl
pushf
lret
out
in
inc
std
clc
xchg
dec
sti
les
js
add
or
xchg
call
push
add
repnz
push
mov
xchg
faddl
jmp
rclb
mov
fiaddl
les
pop
jo
pop
rolb
and
daa
dec
cmp
test
mov
cmp
jae
fldt
pop
out
sbb
in
xchg
cmp
dec
xor
dec
test
push
or
mov
inc
idivl
lret
stc
pop
and
aad
xor
stos
pop
xchg
mov
dec
mov
pushf
shlb
add
sub
jo
dec
inc
lds
push
scas
inc
inc
inc
jb
push
test
jge
clc
or
jmp
fldenv
mov
ljmp
daa
enter
cli
jmp
outsb
xchg
or
fimull
daa
push
repz
cmp
cltd
testb
test
gs
push
enter
cmpb
lret
mov
imul
shrb
fwait
sub
je
insb
adc
adc
xchg
icebp
mov
push
xor
test
pop
jns
fld1
mov
cmp
call
push
js
fbld
inc
dec
btc
inc
call
mov
inc
pop
nop
fwait
lret
mov
pop
ljmp
sbb
and
hlt
fwait
inc
inc
repnz
leave
cli
jmp
pusha
mov
mov
popa
fs
js
jb
movsb
stos
or
dec
jb
mov
ja
xchg
push
jno
faddl
sub
push
ljmp
pop
int3
adc
and
rorl
xchg
pop
jge
add
je
sarb
cltd
or
add
jbe
repz
mov
mov
sbb
cwtl
in
jb
test
mov
jmp
adc
int3
push
cwtl
sbb
add
test
ret
movb
stos
sub
mov
mov
sub
mov
mov
xchg
movsl
pop
cmp
imul
or
xorb
mov
jmp
dec
xor
and
sub
inc
mov
xor
imul
adc
sbb
pop
sbb
mov
inc
and
and
or
sbb
in
add
push
iret
lahf
adc
mov
pop
popf
cld
pop
les
inc
mov
outsl
cmc
adc
sub
mov
sub
or
and
test
lods
xchg
push
fneni(8087
or
daa
lea
in
sbbb
loope
movsb
dec
or
imul
sahf
add
pop
jns
mov
lods
push
jmp
mov
cmp
mov
imul
fmul
sub
push
pop
dec
push
lea
inc
mov
popf
pop
jmp
addr16
test
jle
lret
cld
mov
sub
lret
jl
call
inc
popf
popa
sub
data16
fld
cld
pop
sub
icebp
cli
aas
decl
dec
mov
aad
xchg
push
push
mov
and
mov
hlt
adc
pop
jb
lea
pop
dec
pop
pop
sub
push
xlat
push
sarl
imull
repnz
ret
or
inc
movsb
mov
cmp
clc
add
jbe
sub
jmp
cmpsl
pusha
lods
call
notl
mov
mov
mov
xchg
repnz
clc
testb
dec
jo
push
mov
outsb
adc
or
leave
aaa
insb
xor
pop
xor
adc
loop
add
jo
mov
insb
je
add
push
jp
xchg
inc
mov
test
add
xchg
mov
fwait
je
pop
mov
shll
xchg
cld
idiv
pop
stc
mov
mov
movsb
jns
jo
pop
xchg
xor
pop
sub
push
cmp
adc
faddl
nop
or
xlat
sub
clc
sahf
inc
pop
enter
fnsave
adc
adc
adc
add
sub
imul
inc
mov
fs
sub
outsb
decl
mov
hlt
jb
punpckhbw
dec
cmp
pop
int3
xchg
insl
outsb
orl
or
pop
call
mov
pop
dec
push
arpl
mov
mov
push
jmp
lea
or
call
jp
clc
xchg
loope
mov
fidivrl
xor
sbb
sahf
std
movsl
stos
xchg
cli
mov
cs
pop
xor
nop
sub
mov
stc
cmpsb
insl
popf
jmp
dec
push
jmp
dec
repnz
stos
or
and
mov
push
cld
sub
push
xchg
orb
lods
mov
jecxz
mov
add
sub
pop
lods
pop
mov
xor
bnd
inc
test
cmc
lea
xchg
or
or
test
xor
adc
xor
test
mov
call
xor
mov
std
add
or
pop
fisttps
jb
cmp
jo
call
sbb
cmp
pop
push
xchg
inc
in
xor
mov
jbe
outsl
or
dec
jno
push
dec
sub
out
out
push
imul
ret
xor
lock
ret
leave
lahf
dec
mov
insb
imulb
out
ret
inc
add
add
je
pop
fsubrl
mov
or
sbb
mov
xchg
call
jne
mov
int3
jbe
int
mov
cmpsl
enter
mov
incl
xor
mov
add
insb
jmp
test
jne
pop
int3
push
xlat
mov
inc
stos
mov
jno
call
sbb
mov
fistl
insb
test
repnz
add
jo
sub
pushf
scas
push
dec
jae
stc
push
and
fnstsw
add
add
jbe,pn
jmp
jo
jl
or
mov
stos
mov
push
cmc
aaa
or
out
cmp
in
dec
div
les
jmp
adc
dec
adc
adc
or
flds
add
mov
mov
sti
xlat
orl
shl
pop
mov
ljmp
dec
sti
jl
inc
mov
lcall
jo
push
mov
pop
fdivr
popf
sub
mov
xor
fidivrs
fadds
mov
and
or
add
cmp
out
cmp
or
mov
jns
cmc
or
fsubp
outsb
aad
dec
add
push
jg
sbb
mov
fdivrs
mov
inc
add
xor
mov
addb
mov
pop
out
push
movsl
in
dec
cmpb
imul
dec
out
xor
ds
and
or
pop
mov
and
push
sbb
ficoms
add
ljmp
testb
mov
fstl
repnz
push
adc
mov
fcoms
and
fcmovu
prefetchw
jae
mov
push
mov
les
sub
bound
fsts
adc
data16
adc
xor
push
cwtl
lea
fs
fnstcw
adc
hlt
mov
mov
jge
insb
mov
push
fmuls
mov
jmp
lods
pop
push
mov
pop
and
and
incb
adc
add
mov
mov
xchg
cmpsb
aas
sbb
out
adc
cmp
into
dec
test
add
imul
loope
jb
xor
push
test
dec
add
lds
sub
or
adc
xchg
ret
loop
addb
push
movsb
sub
mov
xchg
jmp
test
repnz
and
sbb
lods
mov
mov
fwait
add
add
adc
xchg
mov
push
fdiv
daa
and
outsl
inc
adc
mov
jne
jns
repz
orb
popf
cmp
or
shll
clc
aaa
and
scas
jp
jecxz
xchg
or
xorb
rcrl
xchg
inc
leave
sub
arpl
pop
cmpsb
decl
inc
jmp
scas
push
xor
mov
int
jecxz
repnz
imul
ljmp
sbb
iret
and
pop
ljmp
pop
jno
adc
movsl
sti
fnstcw
xchg
push
into
mov
sub
dec
out
add
imul
xchg
adc
mov
hlt
mov
adc
dec
cld
insb
inc
add
fmull
mov
xchg
repnz
mov
mov
lsl
xchg
dec
imul
cld
fisttpll
std
push
mov
xchg
xor
mov
hlt
movsb
pop
xchg
leave
pushf
pop
adc
repz
pop
sub
mov
mov
fldl
repz
jge
and
pop
xchg
out
mov
push
stos
and
dec
add
inc
jno
ret
pop
cwtl
xorb
das
mov
push
push
call
stos
xchg
jge
jecxz
jne
fimuls
mov
dec
pop
mov
ljmp
sbb
ss
sahf
or
mov
cs
add
jmp
and
mov
jle
push
jmp
xchg
das
loope
push
xor
pop
xchg
mov
jmp
xchg
mov
out
lods
dec
pop
mov
mov
ja
xchg
xor
mul
ja
scas
sbb
adc
and
es
push
adcb
stos
es
jge
ljmp
dec
cli
and
pop
ficomps
mov
mov
jo
ljmp
int
out
cmpsb
popf
xor
filds
inc
testl
xlat
push
scas
stos
jg
sbb
jmp
or
or
dec
mov
dec
jmp
mov
push
pushl
push
mov
pop
pop
and
cmp
das
jge
xchg
aaa
push
mov
lock
inc
inc
mov
cmp
or
push
push
or
mov
lahf
mov
ss
out
pushf
dec
lods
nop
push
xchg
add
jmp
cmp
call
sbb
and
leave
popf
add
sahf
movsw
push
adc
enter
pop
jae
mov
daa
dec
adc
cmp
notb
fsubrl
mov
add
repz
mov
in
xchg
std
lcall
add
lcall
je
dec
arpl
fsubr
push
mov
dec
mov
fsubrs
mov
mov
or
call
bound
das
cmp
sub
lods
clc
jb
call
lahf
cmpsl
or
cmp
dec
xchg
scas
clc
nop
add
neg
and
jg
pop
mov
int
inc
xlat
add
addl
mov
dec
je
adc
or
dec
jbe
or
test
out
call
addl
mov
push
sbb
movsb
sub
ret
and
icebp
or
adc
push
mov
mov
adc
pop
lret
aas
adc
adc
enter
cmp
push
add
inc
bound
movsl
insb
jo
push
cmpsl
jmp
or
sbb
scas
add
sub
push
sahf
xor
movsb
fcmovnb
sbb
cli
and
mov
sub
mov
mov
mov
imul
cmpsl
pop
insl
sahf
in
ljmp
les
sbb
lret
repz
loope
push
cmp
rclb
sarb
jns
in
pop
icebp
push
jnp
sub
mov
lea
mov
test
and
xor
adc
orl
pop
mov
mov
mov
cmc
lcall
mov
xor
in
setge
xchg
push
xchg
ds
jg
dec
pusha
mov
aas
mov
fsubr
cli
call
call
in
jle
mov
jge
arpl
push
sub
mov
mov
cmc
sbb
sbb
jmp
xchg
push
shrl
movsl
lds
les
lods
adc
and
lret
rorl
leave
and
dec
add
testl
inc
xchg
sub
aaa
jg
pop
and
pop
int
hlt
popf
iret
adcb
sahf
mov
repnz
cli
cmp
or
mov
dec
add
or
pop
sub
adc
ljmp
or
outsl
orb
cli
push
fldenv
pusha
sbb
xor
dec
mov
test
mov
testl
mov
cmc
inc
stc
shrb
jmp
or
pop
dec
ror
or
fimull
mov
clc
loope
cs
xor
inc
loop
dec
mov
or
jge
out
xor
sub
pop
add
inc
cmp
test
pop
jmp
pop
hlt
inc
test
mov
mov
cmp
jb
sbb
shl
sbbb
outsb
loop
jge
mov
stos
push
das
xlat
test
xchg
pop
loop
sarl
sub
movsl
add
mov
jge
sbb
rclb
inc
push
push
xchg
adc
jge
addr16
jno
add
mov
push
xchg
enter
aas
movsl
pop
aam
inc
fnsave
clc
movsb
repz
lods
sub
pop
jmp
mov
repz
dec
xchg
or
sti
mov
std
nop
sbb
cmpsb
push
sub
repz
fsubr
cld
dec
or
enter
inc
or
mov
test
add
inc
jmp
sbbb
adc
lret
daa
enter
sub
inc
sub
and
jl
fwait
xchg
ficomps
out
je
jmp
mov
cmp
jns
mov
push
sbb
dec
call
jno
dec
mov
push
push
fstpl
scas
push
sbb
sbbb
sbb
xor
lods
je
jle
pop
loopne
mov
sbb
add
enter
or
inc
fnstcw
mov
mov
imulb
pusha
jnp
ret
xchg
mov
dec
cmpsb
cwtl
enter
mov
mov
lods
stc
les
mov
inc
cmpsl
and
push
jle
nop
dec
jmp
push
adcb
push
mov
or
int3
mov
or
and
pop
popf
clc
jge
inc
push
add
push
add
orb
mov
loop
ret
repnz
stos
dec
out
int3
sub
orl
call
pop
and
add
mov
mov
jmp
enter
jo
inc
push
mov
fists
or
inc
push
sub
add
adc
inc
mov
dec
xor
jnp
push
and
cwtl
arpl
dec
pop
and
clc
cmp
inc
scas
pop
das
inc
movsl
call
imul
pop
xchg
lock
push
mov
sub
jecxz
jge
das
push
push
inc
push
mov
test
sub
popf
daa
mov
mov
or
xlat
jmp
aaa
sahf
dec
gs
adc
sub
mov
jne
movsl
je
fnsave
pop
pop
mov
je
jmp
cmpsl
dec
mov
or
cmp
cs
mov
imul
sub
dec
xor
jo
push
lahf
jle
dec
jo
push
mov
pop
pop
ss
mov
mov
push
pop
fwait
sub
xchg
mov
loopne
bound
mov
loopne
fstpt
inc
out
mov
push
jmp
cmc
mov
jo
pop
cld
cmp
nop
xchg
mov
lahf
cmp
ja
inc
hlt
jno
adc
push
adc
nopl
out
adc
adc
mov
icebp
add
lds
adc
pop
shlb
insl
decb
lea
mov
das
jle
imul
mov
push
and
or
jl
out
push
les
shll
jbe
fsubrl
jae
pop
dec
fwait
mov
test
push
loope
ja
push
mov
and
adc
pop
cli
cld
pop
mov
hlt
jp
and
or
xchg
sbb
scas
ja
jno
jo
in
out
push
or
aam
add
pop
cmpsb
adc
fstl
popf
push
mov
push
es
clc
repnz
inc
mov
push
mov
fiadds
mov
divl
push
scas
das
hlt
or
cmp
add
mov
push
pop
push
fistl
xchg
lods
das
jae
jae
test
pop
dec
mov
cmp
repnz
and
ja
jne
dec
jp
push
imul
push
sbb
jle
sub
mov
jo
cltd
jg
jae
sbb
imul
sbb
xor
pop
outsb
fstl
popf
jle
dec
leave
sub
mov
push
cli
mov
loop
insb
lea
bound
call
jb
or
push
sbb
xchg
add
cli
sbb
mov
stc
dec
loop
icebp
xchg
push
jbe
daa
xorb
xadd
xchg
dec
add
push
pop
jmp
shlb
ret
jl
int
stos
ret
mov
movsl
imul
js
dec
les
add
or
pop
mov
or
adc
sub
pop
daa
pop
aas
fmull
ret
cmc
push
ja
aad
cmp
push
movl
and
jmp
testb
or
sub
mov
sub
add
xchg
sbbb
sbb
push
stc
jge
jle
cmp
xchg
xor
cmp
xchg
imul
mov
mov
enter
push
jg
cmp
jae
jmp
add
jne
sub
lea
fstpl
adc
sbb
inc
cmc
xor
mov
daa
dec
lea
nop
xchg
jns
xchg
pop
or
mov
cwtl
adc
xchg
mov
dec
lahf
mov
rclb
mov
xchg
dec
mov
stos
cmc
pushl
das
add
and
call
mov
inc
daa
mov
repnz
pop
stos
lds
jno
push
adc
sbb
adc
lcall
stos
xchg
or
pop
mov
push
jae
cmp
sti
jmp
and
add
lret
cltd
int
cld
outsb
shlb
jmp
cmp
inc
push
pop
adc
inc
xchg
adc
cli
mov
es
outsl
je
les
pop
int
or
and
lret
mov
add
pop
push
shl
mov
and
mov
adc
mov
fcmovnb
mov
pop
sub
inc
add
jnp
stos
jb
lret
sahf
mov
mov
ret
test
cli
inc
xchg
nop
ret
push
sbb
xor
add
xchg
aad
xor
call
pop
stos
pusha
sbb
push
lret
mov
ds
outsb
push
jb
fsubrl
call
lods
push
fnstenv
lret
aas
push
mov
and
push
xor
lret
mov
ljmp
push
stos
enter
add
push
cmpsl
push
add
xchg
arpl
inc
clc
call
movsl
lahf
arpl
push
lret
xchg
adc
jae
lds
dec
add
mov
inc
repz
mov
cmp
sbb
cmc
insb
dec
mov
in
fstp
out
jg
push
push
lret
shl
jle
ret
les
inc
sub
cmpb
bound
add
jmp
iret
mov
call
rorb
jmp
in
addr16
adc
push
pop
popa
or
add
add
daa
rorb
sar
mov
sub
sub
je
inc
jge
mov
stos
jge
mov
hlt
pop
pop
pop
fldcw
mov
jmp
jecxz
stos
mov
push
imul
call
popa
clc
xchg
mov
xlat
mov
inc
lahf
xor
inc
sub
xlat
push
test
lea
sbbl
insl
mov
dec
inc
jl
pop
push
mov
mov
jns
flds
test
sti
jo
cltd
mov
shlb
mov
pop
inc
cmp
dec
insb
mov
mov
cwtl
add
and
and
push
ja
into
add
xchg
cmp
mov
andb
or
int
movsb
cmpsb
sbb
mov
cld
cld
inc
add
mov
mov
icebp
push
dec
add
xchg
loope
inc
jle
ss
repnz
inc
jne
adc
pop
push
push
mov
fildll
call
lods
pop
in
pushf
or
xchg
aad
aaa
ljmp
pop
stc
jne
push
xor
jmp
fimuls
or
and
leave
mov
mov
shlb
sbb
dec
pop
loopne
lret
add
mov
rolb
jge
and
xchg
fsubl
xchg
inc
aas
xchg
daa
adc
out
pop
or
aaa
xchg
mov
mov
cmp
loopne
mov
mov
jmp
subb
bnd
pop
call
jnp
or
inc
mov
out
push
loop
push
add
dec
or
xor
pushf
iretw
mov
fnstsw
adc
js
sbb
jns
push
adc
enter
inc
ret
insb
push
shlb
dec
xchg
dec
ret
sub
xchg
sbb
nop
lfs
adc
ljmp
add
dec
data16
shl
inc
push
pop
sub
arpl
mov
lock
movsl
addl
gs
sbb
push
xor
aad
and
std
dec
aad
mov
addr16
or
int
mov
adc
mov
xchg
cmp
pop
mov
pop
and
mov
add
loopne
sub
jnp
add
cltd
dec
pop
jle
int
stc
mov
or
repnz
mov
das
dec
stos
jg
lea
mov
sub
int3
inc
and
cli
or
inc
or
repnz
stos
loop
push
inc
sar
ret
hlt
hlt
xor
lea
mov
pop
adc
jb
call
aaa
sti
inc
push
ret
adc
mov
jnp
cmp
cmpsl
jo
loopne
or
shl
jl
mov
test
mov
dec
call
jnp
mov
cmp
xor
rcrl
data16
add
sahf
mov
push
repnz
adc
mov
jnp
hlt
mov
and
dec
jb
clc
or
mov
jmp
xchg
inc
inc
mov
and
int
out
test
das
add
pop
jmp
sar
jmp
dec
addr16
xor
push
push
adc
scas
xor
mov
and
movsl
sbb
mov
rolb
push
xor
sbb
mov
inc
dec
push
stos
sbb
add
cld
inc
ljmp
add
xchg
xor
daa
sub
add
outsl
mov
pop
xor
stos
in
or
call
stos
mov
pop
dec
pop
repnz
jmp
jns
scas
je
xchg
push
lcall
push
nop
movsb
gs
mov
pop
popf
push
add
pop
call
dec
or
cmc
jl
push
push
ja
mov
inc
frstor
or
jge
mov
jmp
cmpb
adc
icebp
push
inc
aam
jmp
cltd
dec
jno
pop
jmp
mov
push
xorb
sbb
mov
aam
inc
icebp
jp
out
aas
test
push
dec
loopne
push
dec
mov
cmp
pop
imul
mov
xchg
stc
fs
fadds
or
test
adc
dec
cld
dec
add
push
repz
mov
aaa
inc
dec
mov
push
shll
in
xchg
xor
mov
jns
push
pop
inc
inc
add
cmc
inc
arpl
inc
jb
rcrb
rorl
mov
xor
xor
dec
mov
cwtl
inc
dec
aam
add
shlb
mov
pop
jb
mov
cmpsb
xor
into
pop
mov
pop
popa
daa
sbb
push
and
push
jne
lods
in
cli
or
add
inc
rcl
inc
iret
or
xor
or
jmp
mov
cmpsb
mov
pop
push
mov
aas
imul
lock
call
xchg
mov
lock
push
lahf
mov
pop
or
rcr
dec
xor
push
mov
dec
lret
arpl
popf
sti
mov
outsb
push
loop
xchg
into
or
sbb
xor
mov
sub
jmp
add
and
push
call
ret
pop
xlat
scas
mov
sub
fwait
shl
dec
mov
push
in
mov
into
idiv
add
stos
test
dec
orl
aad
mov
mov
pop
pop
inc
and
enter
push
pop
inc
stos
jmp
sahf
xor
movsb
std
pop
ret
jb
pop
push
lea
lods
incb
icebp
js
xchg
adc
lods
xor
mov
adc
mov
mov
std
xor
bound
or
and
addl
add
sti
or
or
xor
sbb
inc
mov
mov
pop
or
std
xchg
pop
adc
cmp
mov
imul
xor
push
xchg
rcr
dec
rcl
xchg
test
sahf
mov
xor
cld
adc
out
add
and
inc
inc
pop
or
xchg
push
daa
enter
or
call
mulb
xchg
push
mov
sbb
or
pushf
into
mov
scas
scas
nop
daa
sbb
add
mov
push
jb
scas
mov
jp
out
in
loop
mov
jmp
mov
mov
lods
test
jge
icebp
push
addb
add
adc
mov
lcall
pop
idivb
inc
sbb
out
rcl
int
jp
mov
test
inc
push
mov
inc
dec
push
fsubp
mov
test
sub
mov
call
xchg
add
jmp
in
aaa
nop
lret
and
xor
mov
call
or
push
and
dec
inc
jb
addr16
adc
cs
in
hlt
inc
xchg
push
push
or
pushf
addr16
loope
mov
push
je
call
popa
xchg
pop
dec
add
jnp
test
ret
nop
dec
push
das
inc
int3
and
int
sub
push
and
ficoms
add
stos
mov
mov
rcrb
jo
or
push
inc
mov
js
pushf
sahf
mov
aad
insb
dec
cs
dec
loopne
pop
mov
arpl
subb
in
lret
mov
cmpl
lock
inc
fcompl
cmp
inc
push
ljmp
pop
pop
aaa
mov
cmova
stos
push
push
lods
sbb
jmp
add
test
dec
stos
and
iret
das
notl
pop
mov
ret
outsl
test
mov
add
mov
or
ror
or
inc
stos
rolb
mov
mov
rorl
or
fnstcw
jbe
in
mov
mov
dec
push
adc
lock
or
inc
and
insb
scas
aam
jmp
mov
push
dec
or
adc
out
in
inc
jg
inc
cmpsl
add
mov
push
fimull
lock
clc
ret
sbb
popa
ret
mov
lds
aaa
test
sub
or
xor
lock
push
mov
and
xor
mov
sbb
test
repz
aaa
or
and
mov
xchg
cmp
mov
jb
jmp
jg
insl
ret
push
adc
test
push
ss
shll
jbe
xor
push
push
dec
xchg
cli
movsb
xor
cmp
mov
sub
int
sub
outsl
les
in
mov
psubsb
icebp
push
cmc
pop
cld
in
jge
push
ja
fwait
shr
mov
cld
or
popf
rorb
sbb
fisttpll
mov
mov
xchg
mov
std
add
fsqrt
scas
pop
popf
insl
or
enter
mov
das
push
pop
nop
push
xchg
pop
mov
pop
out
add
andb
rolb
es
jmp
outsb
inc
popa
pop
lahf
aad
dec
pop
jle
int3
cmp
cmp
or
mov
push
in
and
add
sub
cmp
pop
stos
push
mov
faddl
movsb
lods
pop
adc
fsub
mov
call
sbb
xchg
and
adc
mov
inc
cmp
gs
call
insl
sbb
xchg
scas
adc
popf
mov
mov
lds
jae
cmpsb
ret
xchg
icebp
daa
push
call
jle
cltd
mov
sub
pusha
mov
lcall
cli
je
hlt
shrb
xlat
mov
jmp
test
or
enter
insl
xor
push
cmpb
cli
js
or
adc
adc
sbb
sub
push
jp
jl
and
es
pusha
sub
xchg
int3
popa
adc
mov
pop
mov
sbb
push
fstpl
push
divl
inc
push
daa
xchg
testl
roll
mov
xor
push
dec
mov
cmp
or
aad
push
fsubrp
xor
pop
rol
rcll
jge
mov
je
xchg
mov
sbb
push
cmp
out
jle
lahf
push
push
mov
repnz
test
mov
into
hlt
out
dec
in
test
xor
cli
push
decl
add
push
jo
cmpsl
dec
adc
hlt
call
mov
sbb
sbb
test
mov
jmp
stc
cmc
in
dec
aaa
rolb
das
mov
push
sbb
daa
sub
cld
add
cmp
adc
stos
dec
and
sub
xor
fcom
cmp
ret
pop
cltd
fcomps
inc
aas
in
mov
mov
adc
cmp
pop
cmpsb
jecxz
inc
dec
sub
scas
xchg
add
adc
test
mov
ret
jl
or
push
mov
mov
cs
xor
pusha
sub
adc
add
sbb
cli
loop
pop
rcl
inc
mov
into
jmp
adc
and
dec
daa
and
pop
dec
dec
ja
ljmp
jno
repz
mov
fmull
lar
sahf
or
sar
ret
mov
lret
or
push
push
pop
mov
repnz
jge
pop
or
nop
fs
add
xor
mov
das
fwait
or
cmpsb
adc
cmp
stc
ja
les
xchg
add
aad
icebp
fmuls
xor
mov
cltd
pop
cmp
shlb
dec
fidivs
xor
pop
dec
pusha
push
dec
in
lret
gs
addb
into
sbb
xor
test
mov
jmp
inc
subb
sub
iret
push
daa
test
mov
cmp
jne
xchg
mov
in
leave
pop
out
dec
sub
loopne
sub
mov
pusha
lahf
jo
pop
xor
sub
pushl
sarl
mov
dec
jmp
push
fucomp
or
stos
sbb
sbb
sbb
inc
add
xor
xor
pop
inc
cli
shr
call
je
add
jl
out
dec
cs
sarl
fmul
inc
dec
cli
enter
push
stc
decl
mov
sbb
test
cmp
jl
popf
add
and
mov
push
pushl
or
loope
call
les
jo
fs
xchg
jle
inc
iret
aam
xor
inc
jno
arpl
jb
xchg
sub
xor
loop
mov
rcrb
ret
inc
fldl
cmpsl
fsubrl
cmpsl
mov
cmp
adc
pop
or
xlat
int3
in
pop
out
cli
or
das
mov
pop
lahf
xor
hlt
dec
dec
stos
repnz
push
sub
or
loope
sbb
rcrb
call
and
adc
inc
incl
xor
pop
rcr
cwtl
and
or
sti
sub
cmc
enter
call
mov
push
push
or
mov
jmp
daa
jne
cmp
stos
jo
pop
sbb
shll
lds
or
cld
mov
mov
out
sub
adc
xchg
iret
outsl
pop
jno
xlat
int3
and
das
inc
pop
mov
sub
push
xchg
sub
add
dec
jmp
sbb
cmp
inc
loope
imul
jo
adc
in
or
adc
and
jne
jg,pn
enter
xchg
push
push
push
push
rolb
adc
fcoms
cwtl
and
into
fdivr
insl
pop
adc
repz
frstor
pop
std
in
lahf
push
or
rcrl
jmp
add
call
cltd
movsl
mov
jbe
sbb
jge
mov
mov
cwtl
fwait
ja
mov
add
adc
inc
xchg
sub
xchg
stc
dec
push
xor
xor
or
push
fcmovnu
scas
mov
hlt
cld
dec
adc
dec
inc
sub
or
push
xor
inc
xchg
mov
push
jbe
add
fs
jmp
add
hlt
mov
jae
lahf
jge
incl
dec
cltd
lahf
imul
push
loope
dec
in
inc
or
cltd
mov
rcll
push
ds
pop
add
xchg
test
jnp
cmp
std
cmp
mov
cmc
int3
jp
call
in
and
les
or
mov
push
fs
pop
popf
ds
call
mov
ds
sub
push
clc
fwait
sbb
rclb
filds
rclb
push
divl
dec
call
pop
hlt
dec
push
fwait
pusha
repz
sahf
dec
adc
jmpw
push
xor
je
fstpt
xor
mov
cli
xor
pusha
add
mov
xchg
push
or
jmp
dec
jnp
sub
inc
aad
mov
push
sub
outsl
pop
int
mov
andb
les
test
out
orb
pop
lahf
rorb
movsl
push
mov
orb
jg
or
mov
out
pusha
sub
add
push
sti
ffree
dec
mov
cmc
pop
xor
call
in
cmp
fld
addl
mov
pop
sbb
outsl
out
push
sub
adc
lret
mov
jb
call
pop
pop
mov
dec
lea
lods
shll
jmp
mov
mov
jecxz
or
lods
stc
ja
adc
addl
pop
mov
jno
jnp
test
inc
das
lahf
jb
fisttpl
in
xchg
mov
or
sub
push
hlt
subl
inc
sti
jo
lds
jbe
out
or
mov
std
adc
push
pop
hlt
add
adc
test
inc
jecxz
imul
shll
xor
mov
notl
icebp
cmpsb
add
inc
adc
sub
test
push
sbb
fucomp
es
inc
pop
pop
fsts
push
shrb
inc
add
ret
sbb
loopne
aad
ljmp
lahf
jne
xchg
push
cld
lea
icebp
xchg
icebp
lcall
movsb
repnz
cmp
push
stc
call
out
sub
jmp
dec
call
scas
jmp
xor
pop
call
dec
fimuls
daa
xchg
testl
lret
les
cmp
fistpll
jge
xchg
mov
jg
pop
pop
insb
cmp
dec
fldl
sub
xchg
sub
ja
shr
lahf
push
cmp
xchg
xchg
les
out
lahf
fldl
or
nop
sub
xchg
jmp
push
int3
sbb
or
icebp
mov
pop
fadd
jno
pop
and
pop
shlb
adc
lods
dec
adc
xor
pop
loope
mov
mov
dec
lods
ret
imul
pop
lret
insb
dec
mov
lea
sbb
mov
mov
pop
es
add
xlat
sahf
nop
push
jmp
jnp
push
hlt
push
imul
pop
movb
adc
sahf
push
cwtl
fcoms
xchg
repz
inc
mov
std
jmp
lds
lea
adc
jno
adcl
or
mov
fcompl
pop
ret
icebp
test
data16
mov
sti
fcoml
jmp
add
xchg
and
jmp
ret
sub
mov
pop
jl
sbbl
stos
mov
mov
and
jne
xor
movsb
decb
test
cmp
xchg
iret
dec
aaa
or
mov
add
mov
stc
cmpsl
sbb
jne
ljmp
loope
mov
or
jle
aaa
clc
fcmovnbe
push
xor
mulb
inc
add
jmp
out
xchg
dec
dec
call
pop
or
dec
hlt
or
mov
cmp
sub
mov
cmc
dec
cmp
push
mov
imul
inc
or
sub
dec
add
inc
nop
mov
push
jb
xchg
inc
mov
mov
or
push
ljmp
adc
jmp
or
xchg
jo
mov
mov
clc
push
pop
lds
mov
pop
mov
inc
push
outsb
dec
repnz
call
sbb
push
inc
bound
fstpt
lahf
xor
push
sbb
fiaddl
mov
mov
ret
call
add
and
pusha
inc
lds
orb
dec
mul
pop
or
movsl
mov
jo
mov
xchg
push
lahf
scas
push
mov
push
xor
movsb
sub
mov
nop
jmp
and
inc
jne
and
xchg
int
fstl
cwtl
idiv
xchg
insb
add
or
mov
dec
into
or
cmp
sub
xor
or
lret
stc
loopne
jmp
push
push
insl
dec
adc
push
dec
ret
scas
lahf
add
cmpsl
jmp
sti
xchg
push
xor
and
pusha
loop
jb
int3
sbbb
ret
mov
pop
decb
stos
mov
or
fsubrs
shlb
sbb
not
loope
lods
push
cmp
nop
fstpl
sub
outsb
mov
insb
mul
adc
inc
mov
push
mov
movsl
aad
shlb
call
push
stc
orb
mov
and
or
dec
push
mov
push
sbb
mov
test
push
push
popf
xchg
xor
iret
pop
push
mov
jmp
mov
push
and
test
xchg
fmulp
xchg
rolb
mov
repnz
and
push
stc
les
and
sub
xchg
in
pop
hlt
or
in
outsb
roll
cmp
pop
lahf
jmp
sahf
sub
push
pop
pusha
jo
lock
mov
stc
inc
add
xchg
jns
jo
shll
rcll
or
outsl
or
mov
enter
mov
jp,pt
sbb
call
je
jbe
and
fdivrs
aas
int
sub
jge
adc
mov
cld
inc
outsl
int
pop
sbb
loope
stos
negb
fnclex
sub
dec
sub
sbb
enter
rorl
movsl
mov
mov
rorb
inc
cli
xchg
push
jns
xchg
dec
shl
mov
orb
xor
mov
xchg
shr
pop
inc
popf
jbe
iret
push
mov
pop
dec
xchg
mov
cmp
dec
push
cmp
xchg
arpl
ss
sub
les
add
sub
into
xor
fisttpll
out
jg
stc
push
jno
cmpsb
cmpsb
sbb
or
ja
popa
sbb
push
adc
cmp
test
or
cwtl
cmc
sti
jl
call
shrl
jle
aad
notb
int3
mov
sub
and
inc
push
sarb
jmp
jb
or
cmp
sub
imulb
es
inc
or
mov
scas
test
out
xor
mov
xchg
iret
sbb
or
and
mov
mov
lods
mov
jne
adc
xor
mov
push
dec
mov
jns
or
iret
addr16
icebp
shr
stos
or
and
sbb
mov
and
dec
adc
mov
testl
cwtl
pop
cmpsl
dec
adc
les
inc
mov
subb
inc
dec
pop
mov
push
icebp
jo
addl
aad
mov
inc
mov
lods
popf
mov
dec
outsl
add
inc
pop
dec
or
sbb
inc
mov
hlt
and
push
add
xor
insb
pop
in
adc
push
mov
mov
adc
data16
push
pop
mov
les
mov
mov
in
cmpsl
lret
das
mov
mov
mov
mov
in
and
jge
out
mov
call
mov
ljmp
aas
nop
cmpsb
pop
test
push
jne
fcmovnbe
add
jnp
and
mov
jmp
sbb
xchg
lahf
jl
dec
insl
int3
mov
hlt
es
cmpsl
jno
call
gs
ret
inc
and
push
test
dec
xchg
cmp
sbb
inc
testb
das
jge
cmc
add
test
mov
dec
test
push
xchg
lock
add
inc
cmp
lods
fistps
outsb
faddl
inc
sub
jne
sub
es
dec
mov
mov
inc
ja
out
cltd
pop
xchg
pop
sub
test
or
push
insl
sbb
xchg
inc
mov
add
dec
or
xor
mov
dec
lahf
popl
inc
push
rcrb
sub
imul
sbb
jb
leave
pop
loopne
and
pop
xchg
or
pop
push
fwait
adc
aad
mov
adcl
mov
adc
add
cmc
cmp
std
pop
test
sub
pop
jo
dec
test
pop
push
test
xor
popf
push
cwtl
mov
mov
gs
adc
mov
adc
insb
ffreep
pop
dec
push
inc
leave
cmp
movb
sbb
jb
and
int3
mov
and
aam
insl
ret
stos
cmpb
sahf
fdivrl
cmpsl
mov
cmpsb
sarl
dec
jmp
mov
add
jne
dec
sbb
fwait
repnz
sarl
and
xlat
add
pop
in
ret
daa
loope
jmp
and
ljmp
mov
hlt
stos
push
jo
push
xchg
jle
lods
sub
loopne
in
inc
mov
stos
adc
pushf
inc
daa
mov
inc
test
aad
sub
push
inc
pop
inc
data16
inc
jmp
xor
cmp
sahf
push
add
adc
testb
test
push
aam
inc
ja
and
dec
jg
jo
jae
sub
bound
mov
adc
inc
out
mov
mov
adc
sub
xor
cld
jle
faddl
mov
jae
jl
jmp
insl
mov
push
insb
sub
mov
shrl
dec
or
call
leave
sti
add
insb
jg
roll
mov
call
xchg
stos
jmp
daa
and
insl
inc
push
push
xor
js
dec
insb
out
insb
xchg
inc
mov
push
sbb
out
fs
jno
jns
mov
push
add
dec
jbe
ret
cltd
adc
out
rorb
or
cmpsl
pushf
mov
ja
ret
jae
xchg
push
push
inc
mov
enter
push
sub
xchg
xchg
faddl
and
mov
push
push
mov
or
call
nop
enter
fldcw
or
insl
imul
mov
mov
sub
or
xor
and
push
push
popf
push
gs
paddq
adc
scas
aas
and
dec
push
out
dec
push
subl
mov
cmc
mov
push
mov
or
hlt
adc
das
and
insb
jmp
mov
push
mov
add
pushf
cmc
cmp
cs
jno
sbb
xchg
dec
pusha
ds
subb
xor
call
jg
bswap
mov
je
les
jmp
cwtl
push
int
in
dec
xchg
xchg
stos
xchg
jo
loopne
lcall
jmp
loope
ret
push
rcl
adc
or
movsl
mov
sbb
mov
or
mov
gs
jl
xor
cmp
xor
pusha
lss
add
loope
or
jno
mov
or
call
lods
fdivrs
xchg
imul
mov
ds
xor
mov
icebp
add
aam
xor
push
push
cld
inc
icebp
sub
in
xor
cmp
jmp
cli
ja
cmpsb
push
hlt
mov
cmp
lods
xchg
mov
bound
and
lods
jbe
stos
sub
push
imul
mov
xor
and
xor
push
in
insl
xchg
lcall
aad
inc
cwtl
outsl
xchg
negl
dec
push
mov
sub
fstl
repz
sbb
xlat
gs
adc
pop
pop
repnz
hlt
ficomps
fistpll
adc
std
inc
mov
adc
jmp
sub
in
sub
mov
pop
mov
mov
aas
push
mov
fdivl
hlt
lea
test
icebp
mov
and
fildll
jg
sti
sub
fucomip
xchg
push
popf
jne
cld
daa
arpl
icebp
mov
adc
std
outsb
stos
jo
cmpsl
and
sbb
lea
call
cmc
xor
sub
xchg
int3
jge
and
ret
arpl
mov
ljmp
pop
add
flds
out
pop
das
inc
jne
clc
call
jl
fdivrs
sub
cld
outsb
test
cmc
out
mov
imul
xor
call
mov
mov
pop
call
sti
push
and
add
jmp
mov
push
bound
test
mov
dec
dec
test
add
lret
fdivl
cltd
xor
aas
inc
xchg
push
and
out
cmp
call
ret
push
push
lahf
std
movsb
cmc
cmpl
inc
cmp
cmc
jns
fldl
outsb
pop
push
jle
mov
and
or
inc
ss
jmp
pop
mov
mov
jo
sub
insb
test
enter
sub
xchg
adc
mov
xor
cmpps
ret
fidivrs
inc
scas
out
sub
enter
pusha
add
mov
jmp
mov
and
sub
movsl
rcrb
sti
lock
test
jecxz
push
jmp
and
add
jns
daa
std
sbbb
inc
or
les
pop
xchg
aaa
lods
mov
in
mov
lea
lods
dec
repnz
and
push
shr
test
test
adc
stc
xchg
in
pushl
fdivl
push
inc
aad
jl
mov
dec
lds
xorl
sbb
inc
push
fildl
mov
hlt
enter
lahf
dec
out
imul
sbb
popf
pop
cmp
mov
frstor
stc
jns
repnz
sub
rolb
mov
jge
lock
scas
sub
and
sahf
imul
jo
enter
dec
jmp
lods
xlat
mov
pop
daa
xchg
aad
mov
adcl
sub
lea
dec
or
scas
inc
mov
clc
test
cmp
out
aas
cmpsb
in
inc
push
sbb
lahf
sub
imul
xchg
dec
nop
push
mov
aad
inc
or
leave
rcll
shl
pop
call
mov
mov
ficoml
ljmp
movsl
rorl
add
adc
xor
or
subb
das
movsb
jle
lods
fs
cs
std
and
add
lock
pop
lahf
testl
mov
jmp
pop
sbb
xor
cmpsb
or
inc
or
dec
gs
jmp
and
stc
mov
mov
push
sub
popa
test
sbb
add
cld
aad
inc
cltd
ljmp
mov
fbld
out
test
add
stos
enter
mov
stc
insl
and
push
mov
jg
xor
mov
sar
mov
movsb
out
in
in
push
sbb
cmp
outsl
out
add
inc
scas
rcr
lods
in
adc
push
pop
sub
call
mov
xor
sub
andb
mov
in
je
jmp
mov
sbb
cli
lock
call
daa
negb
pop
out
add
loopne
push
test
insb
pop
sarb
loope
dec
xchg
pop
pushf
call
sub
mov
enter
add
sbb
jae
dec
pop
insb
adc
outsl
std
es
sbb
call
xorl
jo
es
adc
pop
lahf
je
jb
mov
or
call
pop
or
mov
mov
xchg
lds
ret
xchg
dec
loope
jmp
addl
and
jg
test
dec
cltd
adc
sbb
cmc
jb
in
stos
mov
jp
inc
das
dec
and
cmp
repz
cwtl
inc
push
adc
loopne
sbb
jecxz
pop
mov
sbb
inc
and
cltd
cwtl
ds
lds
jge
movsb
cwtl
repnz
movaps
inc
leave
mov
data16
adc
push
mov
xchg
inc
mov
dec
dec
xor
dec
in
inc
jg
icebp
mov
mov
cmpsb
jne
call
xchg
pop
dec
sahf
pop
jmp
xchg
cmp
pop
daa
inc
icebp
lea
popf
out
test
sub
adc
and
jae
stc
pop
mov
cmpsb
dec
fldl
dec
pop
sbb
fdivl
inc
mov
adc
xor
jmp
mov
push
je
mov
test
or
jbe
movl
adc
pop
data16
shl
jl
and
jo
sbbl
scas
push
mov
stos
jne
roll
test
add
and
call
outsb
mov
mov
icebp
push
jnp
subl
int
outsl
pop
sahf
repnz
inc
push
or
out
test
lods
outsl
push
mov
xchg
call
xor
and
ljmp
dec
sub
dec
test
sti
pop
lods
add
repz
nop
xchg
rcrb
push
jl
xor
push
rorb
mov
push
lods
sbb
movsb
xor
lret
push
orl
sbb
repnz
dec
lcall
mov
daa
fistps
cmc
or
sbb
aad
cwtl
out
jne
xchg
jae
popf
ret
popl
lcall
mov
adc
popa
and
xor
mov
inc
les
aad
sbb
mov
jb
shll
or
dec
push
add
xorb
clc
fsts
scas
jp
mov
cld
jg
jbe
mov
add
cli
int3
push
jmp
jne
mov
aam
cmp
imul
push
or
mov
pop
jge
push
cltd
add
shll
sbb
xor
jmp
dec
decb
sbb
mov
cmp
je
mov
push
hlt
sub
xchg
jmp
and
add
ljmp
add
lcall
mov
das
mov
jp
mov
pop
jp
jns
es
shll
sub
rcrl
jnp
insl
jg
mov
sbb
add
pop
and
lock
add
sub
mov
cmpl
mov
jmp
sbb
nop
mov
psadbw
adc
xchg
test
or
sbb
push
add
pop
add
or
mov
sbb
or
pop
cmp
and
aad
mov
es
out
xchg
mov
dec
movsl
mov
mov
lahf
fimuls
jmp
fmulp
inc
loope
lahf
mov
dec
jmp
push
mov
sub
scas
pop
into
add
enter
mov
pop
insl
sub
or
push
repz
ja
test
or
xor
daa
adc
and
xor
and
imul
adc
add
iret
pop
ljmp
shrb
scas
test
orl
mov
jns
rorl
xor
ret
fdiv
clc
sub
inc
daa
jb
cwtl
icebp
xchg
shll
adc
xchg
jg
ja
push
daa
mov
or
lods
addb
inc
inc
cwtl
shl
dec
ljmp
jo
sbb
cs
pusha
push
call
aaa
idivb
idivl
scas
sbb
insl
cmp
or
jae
in
mov
sub
in
mov
aam
inc
sub
lret
imul
in
fisttpll
mov
pop
or
pop
jg
daa
movsb
add
sub
enter
sub
addl
inc
lea
mov
mov
leave
popf
jecxz
push
fistpll
add
repnz
adc
popa
lcall
in
cmp
cwtl
rcll
aam
and
mov
mov
xchg
add
add
cwtl
and
aaa
jecxz
je
push
outsb
jo,pn
or
mov
test
push
mov
ss
inc
or
mov
lahf
mov
call
mov
push
or
dec
call
push
xchg
push
fwait
xchg
sub
mov
insb
pop
out
mov
jg
jne
xor
movsl
pop
incl
lret
mov
ret
fadd
cmpsb
mov
mov
lock
jmp
js
mov
jle
pushf
sbbb
ret
pop
lock
das
lea
adc
mov
mov
lock
push
out
xchg
hlt
mov
std
mov
out
mov
fwait
inc
push
cmpsl
jge
mov
and
adcb
push
das
loopne
popf
les
or
add
int
mov
pop
dec
aam
enter
in
mov
or
out
xor
sbb
fstps
cmpsl
in
popa
call
jge
faddl
push
into
inc
xor
adc
lcall
cmpsl
jecxz
or
pop
lret
mov
movsb
lods
pop
mov
icebp
enter
jo
xchg
push
and
ja
xchg
mov
sub
inc
loopne
add
mov
add
cmp
mov
stc
sub
bound
inc
scas
xchg
dec
jmp
cmp
sti
dec
data16
outsb
and
adc
mov
enter
jmp
xchg
xchg
pop
mov
inc
movsb
adc
or
enter
sub
call
test
shll
shl
loope
int
mov
sub
loop
hlt
insb
sbb
lret
aam
cs
xor
jmp
xchg
push
or
dec
inc
adc
push
ja
daa
dec
and
inc
inc
lcall
sub
inc
cmp
or
inc
mov
and
pushf
arpl
roll
aas
xor
outsl
pushf
mov
pop
into
mov
adc
in
ror
and
outsl
xchg
xchg
std
and
in
mov
hlt
movsb
insl
or
test
popa
inc
int
mov
push
push
das
jbe
push
add
xchg
push
jmp
ljmp
cmpsl
popf
mov
scas
adc
or
dec
inc
in
loope
inc
adc
push
jns
pop
out
mulb
cmpsl
and
test
pushf
fidivs
mov
jg
outsb
xor
pop
xchg
push
cmp
je
pop
arpl
sbb
cmp
mov
ljmp
xchg
sbb
test
ret
mov
sbb
pop
sub
stos
and
or
jmp
or
call
add
clc
cmpsb
mov
add
inc
movsb
or
sbb
cmpb
push
pop
loop
add
xchg
mull
add
jg
inc
inc
adc
dec
lea
and
outsb
push
movmskps
jnp
xor
pop
push
inc
mov
xor
jbe
pop
or
cmp
popa
or
pop
test
in
push
xor
push
jne
or
ret
jge
jno
pop
insl
mov
adc
ss
imul
or
aaa
stc
mov
dec
cmp
mov
loopne
push
mov
hlt
lret
add
das
in
in
mov
test
xchg
lock
pop
inc
pop
insl
out
divb
test
mov
pushf
mov
aam
call
dec
or
inc
in
mov
in
push
jmp
loope
jp
add
frstor
adc
flds
jp
int3
je
adc
jmp
and
dec
and
hlt
icebp
push
es
jmp
cld
fsubrl
mov
fnop
in
aaa
add
add
test
sbb
inc
and
call
or
int3
jge
dec
lea
aad
rcr
sti
cli
cmpl
rcl
push
mov
lea
imul
jne
into
pop
shll
loop
lock
test
js
insl
imul
add
push
push
jne
inc
sbb
or
cmp
adc
es
lahf
xchg
lcall
sahf
icebp
leave
add
xchg
jmp
xchg
pop
add
subl
mov
rcrl
out
loopne
ret
xchg
es
subb
pop
out
xor
test
pop
push
scas
pop
adc
inc
mov
adc
mov
dec
add
dec
subb
sub
mov
sahf
jne
repz
and
inc
jae
pop
push
add
sbb
dec
mov
push
insl
call
xor
fistpl
leave
push
and
imul
sub
or
and
lcall
jne
into
or
sub
jns
mov
dec
call
cmp
mov
sbbl
dec
adc
call
adc
cmp
test
sarl
test
repnz
orl
add
icebp
mov
mov
dec
mov
inc
scas
or
mov
add
dec
jge
or
xchg
dec
lods
ss
xor
pop
test
and
mov
jecxz
stos
stc
aad
call
and
mov
mov
imul
js
and
sub
pop
mov
or
nop
bound
mov
or
xor
jne
and
stos
push
inc
lods
cmpsl
sti
loopne
xchg
xchg
andl
push
shl
mov
push
push
mov
mov
inc
jno
push
jge
inc
jge
fcmovu
pop
das
movl
dec
jmp
js
mov
mov
call
jmp
gs
cwtl
jbe
mov
push
call
ret
jne
mov
cmp
pop
or
lods
lret
ud1
jmp
or
xchg
jnp
sti
bnd
icebp
jne
aam
jbe
dec
mov
pop
sub
lock
push
ljmp
js
or
fucomp
or
cmpsl
pop
jg
jbe
es
add
adc
push
das
jge
dec
mov
test
call
dec
or
mov
ja
insb
push
mov
mov
inc
or
lahf
jae
jge
adcb
loope
sub
mov
push
mov
ret
and
xchg
test
loope
fnsave
stc
cmp
xchg
xchg
enter
jbe
rorl
fisttps
mov
clc
dec
call
cmp
enter
jne
aaa
add
mov
inc
mov
sahf
dec
mov
xchg
int3
xlat
icebp
ja
daa
mov
inc
stos
mov
pushf
xchg
or
mov
adc
jg
xor
xchg
and
mov
jp
push
negb
aas
call
cmp
pop
rorb
and
sarb
sub
adcb
bound
and
cmpsb
or
aaa
push
fs
jg
cmp
insb
imul
repnz
lahf
adcb
xlat
push
mov
test
jge
clc
mov
fsubr
xchg
push
hlt
dec
test
sub
in
orl
push
ret
xor
pop
je
inc
mov
dec
fdiv
in
add
aas
or
jo
lock
imul
je
negb
jno
in
dec
or
in
mov
push
jmp
out
mov
or
std
mov
push
xchg
sub
jb
lret
lret
mov
add
push
mov
mov
jg
xchg
or
pusha
mov
mov
xchg
inc
xor
fs
add
mov
enter
dec
stc
stos
jb
in
add
jge
and
inc
cltd
nop
adc
negl
mov
adcl
mov
mov
jb
inc
shrl
fisttpll
lcall
test
pop
imul
inc
pop
dec
dec
popa
or
push
push
mov
pop
mov
inc
lock
pop
jo
and
std
inc
xlat
clc
inc
fdivrp
mov
adc
pop
aam
sbb
xchg
dec
adc
mov
lods
mov
push
cld
jp
in
jnp
popf
rcrl
ds
add
mov
pop
xor
and
push
adc
jp
cmpl
add
shrl
and
cmp
or
fbld
and
xchg
and
xchg
jmp
xchg
sbb
mull
xchg
nop
mov
mov
mov
test
mov
cmpsl
int
stos
cmp
push
roll
mov
inc
push
and
or
and
sbb
inc
jmp
dec
pop
aaa
pop
int3
dec
aam
xchg
test
adc
popa
jnp
mov
bound
jg
fdivs
nop
pop
dec
lcall
add
mov
inc
dec
hlt
xor
mov
xchg
loop
leave
dec
mov
or
xor
push
shlb
cmp
popf
inc
test
inc
mov
cmpl
mov
lods
pop
mov
or
pop
xchg
test
scas
pop
int3
lahf
leave
sub
add
rolb
test
inc
je
icebp
mov
test
idivb
repnz
mov
icebp
jne
push
cmp
inc
sbb
lahf
and
and
lret
mov
jl
xchg
std
dec
mov
adcl
les
imul
xchg
mov
sarb
call
xor
cmc
jae
jmp
addr16
push
mov
imul
push
mov
push
jmp
push
ljmp
xor
pushf
inc
push
mov
sbb
mov
data16
pop
pop
shlb
lcall
leave
stc
mov
jl
push
mov
fadds
repz
dec
mov
jmp
xor
js
xorl
pop
data16
cld
or
testb
mov
sbb
or
inc
dec
add
test
dec
es
and
dec
mov
cmp
bound
ret
test
fisubrl
pop
inc
dec
pop
inc
add
sti
orb
mov
push
out
icebp
hlt
in
test
cmp
add
and
adc
popa
jmp
inc
cmp
push
fneni(8087
push
xchg
cmp
cmp
sahf
add
fwait
inc
inc
cs
or
xchg
shrb
mov
mov
movsb
test
sbb
xor
cmp
cmp
call
cs
add
arpl
cli
fsubs
push
rolb
mov
or
dec
in
sbb
jge
push
ds
pusha
or
rcrl
dec
pop
stos
jno
cwtl
in
subl
xchg
call
aaa
mov
bound
jns
push
ja
int
cmpsl
xchg
xchg
jns
ret
loop
sub
or
dec
mov
out
cmp
shl
jno
push
push
or
cmp
test
dec
lods
ficoml
push
pop
mov
add
and
aas
add
cmp
and
pop
and
mov
int
or
dec
mov
les
shrb
push
xor
pop
push
xor
or
push
pop
push
int3
insb
das
stos
in
cld
and
jo
add
jge
mov
dec
lods
subl
out
cmp
movb
jmp
int3
repnz
cmp
mov
and
fldenv
lds
daa
and
mov
inc
push
cmpsb
mov
adc
out
push
mov
das
jle
pop
js
push
insb
test
cmp
add
stos
push
mov
shl
pop
incl
sbb
push
xchg
enter
popf
cmpb
les
inc
xchg
cmpb
pop
lock
sahf
testl
xor
enter
dec
jns
lea
imul
aam
shrl
and
and
mov
mov
testb
dec
loope
fs
mov
inc
lds
out
fwait
inc
dec
dec
cld
bnd
or
jge
add
insl
dec
and
xor
adcl
dec
mov
je
cwtl
inc
and
sti
icebp
mov
call
mov
pusha
aas
testb
dec
xor
les
push
incl
sahf
or
adc
aaa
pop
fdivs
push
sub
adc
movsb
inc
mov
pop
lret
ss
enter
jge
dec
add
out
push
insb
jne
inc
pop
mov
loopne
mov
les
std
xchg
out
loope
jbe
sbb
or
in
jl
inc
mov
gs
rcrb
fisttpl
adc
mov
inc
nopl
clc
aas
inc
lods
fstl
stos
push
aam
call
jae
mov
mov
and
and
or
rcrl
push
jecxz
or
xlat
int3
repnz
call
imul
mov
dec
cwtl
and
call
das
dec
orb
dec
aad
sbb
xchg
outsl
xchg
aam
xor
push
jmp
push
movsb
mov
cmp
fdivrl
mov
xchg
lods
push
fdivrl
xor
js
mov
jo
xlat
sbb
fisttps
daa
add
push
dec
jp
push
lods
cld
fwait
mov
shr
xlat
sti
and
mov
dec
cltd
cmp
imul
stos
fsts
push
inc
cs
dec
and
mov
push
dec
dec
ror
or
in
lea
mov
push
jmp
shrl
cmp
movsl
push
dec
push
xchg
icebp
scas
cmpsl
xchg
mov
adcl
or
add
divl
sub
in
mov
rcrb
lods
adc
orl
addr16
imul
or
loop
push
int3
enter
jb
jae
adc
pushl
or
mov
daa
out
int3
add
dec
dec
mov
lea
stos
aas
addr16
and
movsl
out
lcall
and
sub
inc
dec
inc
and
inc
imul
xor
pop
cs
daa
push
jmp
xor
pop
mov
out
cmp
cltd
inc
jns
jno
leave
inc
mov
je
cmpsb
flds
test
into
fimuls
mov
inc
jno
fxch
inc
test
andb
fisttps
daa
pop
or
lock
cmp
test
xor
xchg
mov
mov
inc
sti
loop
nopl
rcrl
jecxz
mov
inc
adc
rorb
jmp
pop
lret
jae
adc
cmpsl
jl
fs
mov
popa
xor
inc
mov
pop
div
push
cs
xchg
cli
lock
int
call
das
dec
sub
push
test
cmc
hlt
mov
shl
push
dec
enter
xor
cmp
push
dec
jmp
mov
rorb
out
lds
xor
cli
mov
or
imul
xorb
lds
cld
push
push
mov
adc
inc
xchg
out
mov
mov
dec
andb
or
gs
repnz
lds
push
subl
or
xchg
pop
dec
cli
xor
xor
push
or
call
and
jb
gs
psubd
call
jmp
push
fdivrl
shrl
ljmp
mov
nop
pop
mov
jbe
cmp
cmc
mov
or
mov
dec
pusha
push
sbbl
pop
mov
leave
ficomps
popf
push
fdivrl
inc
leave
pushf
add
test
repz
loopne
xchg
stos
mov
jae
fsts
andb
mov
pop
lea
push
pmullw
mov
int3
push
test
jmp
adc
sbb
insl
push
loop
add
xchg
mov
test
fildll
cmp
idivl
divl
xor
stos
add
and
sbb
sub
clc
insl
sbb
enter
push
xchg
xorb
lock
ret
push
jb
decw
ja
jno
in
es
mov
sub
jns
scas
pop
je
pop
mov
push
repnz
scas
icebp
sbb
insl
enter
xor
loopne
mov
jge
icebp
call
fistpll
lock
add
shlb
icebp
jne
rolb
inc
push
loopne
inc
sbb
adc
daa
stos
movsl
lock
mov
mov
push
xchg
or
pop
and
jno
out
xchg
sub
mov
out
mov
call
mov
lahf
imul
mov
sbbb
mov
repnz
mov
in
sub
cmp
in
xor
mov
dec
xor
sarb
inc
fiaddl
in
rdtsc
shll
adc
push
xchg
mov
jo
add
sbb
pop
mov
lea
or
pop
sbb
add
add
stos
mov
add
jb
and
jg
pop
push
cld
incb
sbb
les
in
xchg
dec
lods
scas
das
or
xchg
jmp
cld
int3
loope
xor
fwait
jnp
jp
adc
cmp
pop
call
pop
xchg
mov
cmp
std
stos
jecxz
repnz
sub
xor
es
dec
sbb
jmp
mov
jmp
mov
add
call
pop
mov
push
imul
xchg
mov
stos
pop
cmp
push
loopne
cli
push
fsubr
push
aam
fsubrs
aam
lret
insl
mov
pop
out
loopne
mov
int3
cmp
mov
repz
mov
shll
testb
aad
xorb
xlat
mov
mov
dec
cmp
sub
mov
insl
sub
or
sub
mov
sub
push
es
test
inc
xor
ficoms
mov
mov
lock
add
ja
jne
xor
pop
orl
test
pop
int3
inc
and
jp
xor
call
das
imul
xor
or
cmpsl
sbb
ds
inc
mov
fld
or
in
dec
jb
pop
and
jae
jnp
mov
das
daa
or
sub
push
clc
ret
mov
adc
pushl
out
xor
pop
jns
repnz
dec
jbe
int
jb
jmp
rolb
or
movsl
pop
mov
and
jg
push
jl
cmpsb
leave
push
lods
inc
pop
xchg
mov
bswap
pop
add
sub
xchg
lds
pusha
add
call
mov
sub
dec
dec
mov
jb
jae
dec
dec
cs
and
adc
mov
test
fsts
pop
test
cli
and
inc
sbb
add
xor
out
icebp
push
push
pop
ljmp
lcall
jbe
sub
iret
lcall
clc
add
popa
cld
jnp
call
loop
loope
and
add
pop
cmp
add
xchg
xchg
add
push
mov
movsl
add
add
inc
jmp
insl
lea
and
dec
push
or
enter
pop
jmp
or
pop
iret
stos
push
bound
and
jmp
xchg
jmp
push
lods
adc
test
sbb
andl
xchg
inc
adc
cmpsb
xor
jne
cmc
add
stos
test
dec
in
add
decb
push
dec
mov
into
sub
push
mov
jle
stos
scas
xor
fisubl
xlat
lods
adc
out
push
int3
fcomps
enter
sub
sub
mov
into
fisubrs
out
lret
xor
cmpsl
mov
mov
add
or
idivb
data16
sub
inc
mov
mov
push
lret
sbb
daa
jmp
jnp
out
cmpl
hlt
pusha
mov
mov
sub
pop
xchg
bound
or
xchg
inc
clc
imul
iret
jo
test
dec
es
adc
jb
jmp
cld
iret
inc
mov
inc
pusha
lock
pop
mov
loopne
daa
mov
mov
mov
test
addb
jmp
jb
stos
aad
mov
xorb
into
cmp
stos
enter
aad
dec
sub
mov
and
mov
fdivs
sbb
stc
int
loopne
fildl
mov
daa
or
gs
sbb
sbb
or
jge
xchg
or
ss
ficoms
insb
into
mov
and
push
dec
icebp
ret
test
push
lcall
xchg
push
pop
pop
fs
call
shr
mov
test
fdivrs
orb
cmp
adc
fs
add
and
jbe
and
aam
jl
pop
jno
ljmp
mov
push
out
mov
or
jl
lods
jbe
inc
push
pop
jno
jg
cmpsb
fisttpll
int3
leave
adc
jg
xorb
mov
stos
mov
xchg
pushl
fldenv
push
movsl
test
sahf
in
inc
sub
cwtl
push
jbe
lea
mov
pop
sbb
lahf
inc
mov
mov
dec
inc
fistpll
mov
dec
imul
sbb
aas
loope
flds
add
nop
mov
cltd
stc
sub
cmp
sbb
sti
insb
pop
les
or
pop
gs
or
fdivrs
mov
and
add
insl
push
ret
movsb
or
sbbl
outsl
xchg
cmp
cmpsl
or
or
xor
push
adc
jmp
addb
mov
push
jl
xchg
mov
sahf
loopne
mov
cmpl
stos
roll
ja
mov
jge
icebp
jno
adc
jne
imul
push
jge
jmp
push
cmp
mov
test
pop
cmc
bound
xchg
mov
imul
dec
add
popf
or
jbe
or
or
xchg
pop
in
xor
lds
imul
push
movsb
ljmp
xchg
add
jl
xor
dec
sbb
ja
fs
call
dec
sub
or
inc
mov
data16
dec
sti
and
push
dec
inc
or
orl
bound
rcrb
lret
call
push
rcll
mov
pop
sbb
mov
xchg
jns
cmp
jl
lea
imul
stos
mov
cld
out
mov
lea
test
push
inc
adc
test
rolb
stos
testb
ja
sbb
push
inc
or
pop
cld
mov
pop
insb
sub
cli
jge
mov
mov
inc
xchg
fwait
cwtl
inc
aas
mov
push
mov
into
sub
pop
inc
jp
scas
js
test
xor
push
stc
daa
sbb
cmc
push
je
xor
in
mov
sbb
jge
imul
xor
pop
adcb
outsb
insl
dec
push
jp
test
out
call
jbe
loopne
mov
or
mov
pop
pop
pop
pushf
mov
sar
ret
add
out
sbb
call
pusha
inc
xor
xor
xchg
jp
or
jns
add
or
test
lret
subl
or
orb
repnz
xor
mov
insl
jp
jo
jge
dec
or
cmp
and
push
das
or
xor
scas
inc
out
nop
dec
lds
ret
mov
fisttpll
cmp
es
lds
jg
test
push
subl
hlt
imul
loop
inc
mov
call
addr16
jb
mov
in
sbb
mov
inc
call
aaa
mov
pop
push
testb
fcom
mov
fwait
daa
data16
jmp
inc
maxps
ret
fsts
call
mov
or
sti
xchg
mov
cmpsb
in
test
mov
mov
pop
sub
loopne
jp
cwtl
nop
das
lret
cmp
aad
daa
ljmp
stc
xor
call
add
pop
jo
add
cmp
aad
repnz
lods
push
mov
xor
leave
push
push
jno
aaa
jmp
fwait
adc
xlat
mov
and
dec
jne
mov
and
jae
cmp
mov
icebp
ss
out
xor
jmp
add
mov
insb
adc
int3
jae
cwtl
ret
jl
in
mov
mov
fisubrl
jmp
pop
xchg
test
push
in
cli
xor
xor
jne
push
stos
inc
jge
sub
jbe
add
test
popa
or
dec
and
mov
imull
or
adc
push
mov
xor
xor
pop
fnstcw
out
cli
daa
adc
pop
rcrl
scas
mov
enter
and
push
nop
sti
js
loope
mov
loop
shrb
sbb
xchg
cwtl
mov
mov
aam
testl
out
cs
sbb
pop
xchg
gs
call
mov
inc
add
sub
mov
mov
or
daa
or
lods
sbb
pop
jmp
loope
inc
and
ss
jnp
cld
leave
jge
aas
lock
push
call
add
pop
jnp
sub
sub
jb
mov
je
outsb
mov
lahf
inc
out
adcb
ljmp
push
sbb
mov
add
push
cmp
pop
xor
ja
push
add
jae
loopne
add
and
inc
xchg
pop
add
daa
sarb
mov
arpl
call
push
cmpsl
push
scas
pop
hlt
rcrb
xor
cmp
add
mov
cmc
or
scas
lea
stc
xchg
test
jp
ja
call
loop
aas
pop
jno
pop
sti
cmc
mov
into
and
in
add
rorl
and
or
shlb
fldcw
mov
add
cmc
push
bound
xchg
popa
mov
call
add
jecxz
insb
and
mov
xlat
sbb
mov
aas
rorb
jno
mov
sbb
xchg
push
test
subl
mov
mov
fdivs
nop
clc
sub
push
push
sbb
rolb
sub
mov
enter
inc
enter
aad
shll
data16
sub
push
sbb
pop
sahf
fnsave
fucomi
daa
out
jbe
imul
xor
push
mov
add
out
adc
push
sbbb
out
add
shrl
and
sbb
adc
fidivl
xchg
fisubs
pop
adc
push
xor
shlb
ret
ja
mov
fwait
imul
cmc
daa
cmp
or
or
add
add
xor
adcb
ja
and
mov
inc
data16
cmp
clc
cli
jno
sbb
push
out
push
or
or
push
xchg
cwtl
popa
add
jge
pop
dec
arpl
xor
xor
daa
or
fidivs
push
mov
mov
das
or
jle
mov
jno
mov
mov
pop
mov
addr16
sti
int
cmp
adc
cld
cs
xchg
sbb
inc
fsubrs
cmp
push
mov
stc
in
mov
inc
push
cmpsl
mov
iret
cmp
inc
call
orb
add
pusha
inc
mov
lods
pop
or
and
lcall
sub
pop
sub
lcall
sbb
sub
fidivl
outsb
mov
mov
inc
add
adc
xchg
xchg
pop
mov
sbb
adc
aad
pop
in
mov
sbb
jmp
lods
in
inc
stos
sub
dec
lcall
test
andb
cmp
lcall
pop
pushf
sbb
mov
das
es
aad
iret
ja
lds
ja
dec
lea
shll
and
pop
inc
mov
push
and
dec
into
bound
aam
mov
mov
sub
mov
mov
or
push
stc
imul
icebp
cmc
mov
mov
cwtl
cmp
cltd
popf
imul
push
mov
and
fimull
std
sbb
leave
add
js
repnz
push
rclb
mov
sub
sti
sub
inc
and
mov
repnz
cwtl
mov
fsubs
push
dec
jmp
and
dec
sbb
push
lret
rep
pop
int3
mov
or
cmp
ljmp
ret
xor
and
outsb
stc
sub
shr
frstor
ja
mov
pop
negb
and
ja
dec
mov
lock
pop
pop
dec
lahf
mov
lret
or
inc
jb
mov
xlat
loop
xchg
dec
subb
jmp
iret
call
dec
adc
mov
mov
cs
loope
mov
decl
jb
ja
fnsave
pop
or
scas
dec
mov
cwtl
jne
pushf
lahf
rorb
leave
pop
push
es
mov
pop
ss
loopne
imulb
movsb
imul
mov
mov
mov
outsl
mov
and
mov
adc
scas
or
outsb
inc
or
repz
in
push
mov
aaa
xor
dec
sbb
and
movsl
je
rcrb
xor
mov
aad
leave
dec
jle
fdivl
push
sti
push
inc
jo
add
pop
call
repz
scas
lods
cmc
mov
jecxz
xor
dec
and
fnstsw
mov
mov
inc
pop
pop
dec
xor
call
add
sti
fcomps
sbb
sbb
ficomps
mov
je
inc
lods
ret
cmp
pop
jmp
and
outsl
adc
xchg
add
and
push
test
call
dec
into
jmp
xor
sbb
cmpl
jmp
pop
inc
or
pop
push
test
inc
or
imul
jg
arpl
mov
sti
or
pop
fwait
iret
add
push
or
aaa
adc
sub
lock
fcomps
jmp
jge
nop
mov
and
xlat
xchg
and
mov
call
pop
shll
mov
and
fucomp
and
pop
jmp
adc
mov
call
adc
push
pop
add
fists
push
call
enter
mov
xor
pushf
pop
adc
mov
in
dec
mul
jae
shrl
push
cmpsl
repnz
and
sti
and
push
xor
xchg
pop
sub
adcb
loop
addl
jp
repnz
ljmp
adc
add
jns
cmp
sub
movsb
or
push
in
icebp
mov
push
inc
inc
and
aam
lahf
mov
add
stos
push
dec
mov
ss
inc
jae
loop
imull
add
xchg
xchg
push
mov
cmp
pop
pop
xor
jl
xacquire
adc
mov
xor
in
add
neg
test
aam
or
mov
sub
cli
lods
imull
jnp
mov
pop
cmp
ja
ret
test
mov
das
sub
bound
add
addr16
cltd
es
push
push
add
or
inc
sahf
mov
jb
push
fstl
push
sub
icebp
pop
sbb
lret
and
fistpll
sbb
sbb
jmp
fidivs
mulb
jo
pop
popa
mov
mov
xchg
fnstenv
leave
ror
ljmp
mov
aam
xor
push
inc
mov
mov
dec
mov
mov
mov
cmp
mov
js
pop
xchg
fs
addb
push
push
push
mov
loopne
jle
lea
add
test
mov
xchg
ficomps
das
inc
pop
outsb
call
xlat
cmpsl
mov
xchg
or
mov
inc
fwait
aaa
sub
jg
call
sti
mov
jp
add
sbb
mov
pop
xor
outsb
mov
cmp
data16
sbb
sub
xorl
pop
jmp
add
adc
movsl
insl
pop
push
xchg
or
jg
sub
or
push
nop
loope
mov
mov
sub
sbb
cmp
insb
inc
jmp
loopne
call
pop
add
psubb
mov
xor
jnp
gs
inc
jmp
int3
inc
jb
xchg
and
cltd
adcl
mov
dec
aad
adc
mov
lss
mov
les
pop
dec
dec
or
shl
pop
ljmp
xor
xor
sbb
and
lret
inc
popa
xor
aad
insl
jge
fsubrs
mov
imul
insl
dec
sub
loop
push
xlat
mov
notl
shrb
inc
fdivl
mov
call
mov
aaa
mov
pusha
popa
pop
pop
jo
xor
dec
push
xor
xor
or
sub
cwtl
push
cld
bnd
stos
or
xlat
out
mov
mov
cmpsl
inc
push
pushf
incl
pop
subl
or
call
inc
adc
pushf
inc
jmp
cwtl
add
xor
pop
mov
pop
cmpsb
lret
lea
sbb
dec
jb
scas
or
into
aas
sbb
lods
push
xchg
jmp
aam
and
jo
popf
mov
add
and
dec
pop
jmp
adc
push
adc
lea
orb
cmp
pop
jns
lods
insl
or
sbb
sub
hlt
sahf
lahf
insl
inc
ljmp
and
mov
and
aam
adc
jnp
cmpsl
xchg
xorb
ret
or
pushf
xchg
hlt
pop
jmp
inc
mov
pop
xchg
or
out
lahf
push
push
dec
fcomps
sub
ja
mov
jmp
mov
xchg
add
les
and
sbbb
call
popf
jecxz
push
or
push
mov
stos
addb
lcall
inc
push
clc
das
fwait
ja
pop
inc
jle
mov
test
mov
pop
add
push
loope
or
and
rorl
inc
xchg
pop
adc
cli
mov
repz
inc
mov
sahf
inc
sarb
into
dec
dec
mov
xor
xlat
icebp
addb
cmp
jmp
or
mov
or
scas
fbld
sbb
cmp
ret
sarl
sbb
shlb
ss
cli
mov
mov
sub
ss
aas
popa
add
dec
test
stc
loope
pop
sub
xchg
mov
popa
iret
hlt
ljmp
jb
loope
cmp
adc
std
mov
lds
jmp
in
inc
or
call
jb
push
in
cld
push
jmp
roll
cmp
mov
mov
inc
pop
ss
nop
jmp
cmpsl
push
jns
lcall
insb
pusha
or
out
icebp
mov
scas
cwtl
xchg
sahf
inc
lods
leave
jmp
add
xchg
cmp
bound
cmp
add
dec
inc
out
mov
fidivs
sub
jp
cmpb
inc
xor
mov
int3
xor
movups
cmp
or
call
push
cwtl
in
rcrb
sbb
leave
cmp
or
pop
push
test
xchg
fadds
pop
pop
jmp
push
mov
inc
pop
jmp
mov
xchg
pop
inc
sbb
jbe
mov
call
mov
pop
cwtl
int3
inc
pop
ret
jmp
inc
fists
out
dec
and
jne
out
aas
mov
aad
popf
pop
sbb
or
mov
fdivrl
dec
sbb
pop
mov
sbb
fiaddl
ret
xchg
mov
daa
xchg
aad
jmp
je
push
aam
lods
jbe
adc
inc
jmp
push
scas
outsl
mov
pop
lods
sti
orb
bound
inc
imul
add
push
adc
mov
outsb
mov
push
push
fmull
xor
add
int3
faddp
ds
imul
fucom
mov
push
int3
cmpsb
xor
sub
test
mov
stos
cwtl
mov
dec
jmp
mov
fsubrs
dec
mov
inc
add
pop
fisubrs
dec
inc
sbb
mov
js
fsubl
and
sub
push
lcall
pop
pop
mov
or
icebp
push
push
mov
jne
out
dec
sbb
push
push
or
pop
and
cmpsl
cs
mov
mov
jae
mov
xchg
fcoms
xchg
and
test
xchg
pop
lds
rcrb
outsb
push
adc
xchg
mov
icebp
in
jmp
xchg
sub
cwtl
mov
stos
clc
push
icebp
push
sbb
fsubr
mov
mov
mov
xchg
negb
jmp
jne
pop
mov
pop
dec
sbb
cmp
aam
rcrl
or
in
xor
xor
dec
pop
add
add
into
cmc
fs
mov
inc
gs
fstpl
and
xor
xor
rolb
sbb
or
dec
mov
shll
jnp
xor
shlb
and
icebp
push
pop
sub
inc
xor
sbb
pop
push
mov
and
pusha
hlt
imulb
movsb
pop
lea
and
adc
and
lock
fsubrl
incb
pop
iret
push
jo
jmp
jae
cmp
cmp
jmp
sarb
fmulp
xor
aam
and
rep
mov
inc
out
test
sub
and
inc
mov
rcrb
adc
push
pop
lods
inc
push
mull
or
fidivrs
dec
scas
shlb
mov
cmp
in
xchg
add
jmp
inc
into
pop
xlat
dec
in
jp
xor
cmp
jmp
xor
in
incb
out
mov
adc
cmp
fmuls
in
leave
jle
push
ljmp
push
popa
pusha
pusha
negb
push
pusha
xor
rolb
rorl
pop
mov
sbb
leave
or
push
xchg
mov
test
pop
jmp
sub
popf
or
push
leave
inc
push
in
fiadds
pop
mov
push
mov
mov
jg
push
mov
xchg
sahf
inc
or
cmp
movsb
mov
ret
mov
mov
shll
inc
and
add
sub
rol
out
lock
mov
std
pushf
pop
jp
das
js
pop
mov
push
dec
popa
inc
and
pop
push
xchg
repz
jp
arpl
jmp
xor
jle
jecxz
inc
aad
xor
or
mov
out
or
dec
iret
pop
push
in
jne
sbb
mov
cmpsl
fmuls
jne
lds
out
aam
fmull
mov
mov
gs
and
pop
addr16
stos
and
inc
addr16
add
inc
xchg
pushf
int
mov
jno
xor
ds
mov
sub
mov
xor
xor
jmp
nop
cmpsb
xor
enter
sbb
xor
push
inc
jmp
clc
cmp
adc
daa
pop
out
rorb
inc
cli
cltd
cmp
in
cli
std
fidivrl
mov
hlt
jb
ficoms
adc
ss
call
add
mov
pop
xor
int3
lods
mov
add
lds
mov
cmpsl
and
jae
enter
jmp
push
into
call
add
fadd
mov
mov
push
mov
jo
int
mov
inc
enter
add
divl
icebp
mov
xorb
or
pop
adc
test
fwait
adc
mov
notb
cmpsb
pop
insb
icebp
or
jge
subl
mov
fmull
movsl
call
push
dec
cltd
mov
mov
aas
mov
mov
mov
add
lcall
std
mov
sbb
and
fs
jle
xor
xor
mov
or
ret
int3
or
je
shrl
push
clc
test
inc
mov
pop
andl
jo
js
repnz
or
xchg
lea
lea
or
push
add
out
xchg
fcoms
pop
cmp
aas
fisubs
pop
rcll
mov
es
hlt
lret
sub
mov
pop
loop
icebp
push
in
ds
sub
fistpl
inc
sbb
cmpsl
xlat
add
xor
or
pop
ret
retw
enter
cmp
sub
popa
pop
push
das
mov
sahf
adc
jmp
hlt
lods
pop
push
nop
sbb
js
and
int3
adc
aad
mov
lods
nop
or
lret
imul
xlat
rcl
gs
ret
leave
movsb
mov
fwait
sbb
loopne
enter
popf
and
lods
inc
jno
and
shlb
mov
jmp
sbb
sbbl
mov
inc
out
imul
orb
or
push
lcall
outsb
jo
push
jmp
pop
sbb
xlat
push
cwtl
icebp
xor
inc
jbe
lret
and
movsb
add
xchg
add
or
sub
jle
out
push
or
stc
sbb
jl
push
push
push
mov
fldl
call
mov
cwtl
and
mov
sbbb
into
imul
mov
stos
mov
mov
call
flds
adc
jno
pop
in
pop
outsb
mov
iret
push
dec
mov
jmp
dec
dec
loopne
lahf
movl
out
ret
jl
jge
test
mov
push
and
test
sub
es
pop
adc
sub
push
jg
jg
fistps
out
ror
lods
jg
arpl
push
lret
fincstp
pop
shrb
lds
lds
aam
pop
add
inc
mov
sarl
push
cwtl
mov
mov
pop
adc
sub
sbb
xor
dec
sub
pop
mov
pop
mov
push
sar
cs
inc
lods
hlt
fmull
xor
in
mov
xchg
push
pop
push
jnp
push
mov
aaa
les
popf
mov
push
pop
xlat
push
out
jge
inc
inc
repz
add
adc
in
je
mov
jmp
jbe
test
cli
pop
xor
and
push
mov
std
popf
int
xor
shll
jno
in
xlat
mov
jp
push
or
mov
cmc
sbb
sub
add
fistl
mov
faddl
xor
adc
int3
sbbl
movb
subl
push
and
add
ljmp
pop
call
ret
fwait
leave
cmpb
cmp
setno
or
add
mov
push
pop
sub
pop
dec
mov
jmp
mov
jno
push
aam
repnz
xchg
mov
dec
mov
xchg
xor
pop
pop
adc
shlb
and
call
add
pop
mov
fwait
cmp
and
dec
sub
inc
inc
or
fstps
outsl
rcr
sbb
ficompl
ficompl
into
cmp
inc
cmpsb
mov
sub
push
cmpsl
xchg
lret
jl
push
bound
jae
push
push
mov
ret
sbb
pop
cltd
ljmp
arpl
clc
scas
sahf
cmpsb
aas
out
push
div
or
addr16
addb
and
mov
push
jmp
mov
pop
rcr
dec
dec
fisubrl
sub
test
ss
dec
mov
test
test
push
or
lock
aam
outsl
movups
mov
sahf
out
out
inc
pusha
nop
xlat
jb
lcall
hlt
push
mul
mov
in
jb
scas
xrelease
loopne
call
pop
dec
lahf
filds
jp
or
push
mov
repnz
test
call
leave
cld
out
mov
or
inc
aaa
dec
hlt
xchg
ret
neg
mov
jmp
push
test
divl
sub
pushf
out
adc
and
and
mov
inc
jnp
ret
pop
pushf
shll
in
sbb
cli
cwtl
sti
imul
jg
adc
push
jmp
fsubp
mov
dec
push
xor
xchg
inc
pop
push
sbb
cs
mov
inc
hlt
xchg
repnz
aaa
dec
and
and
cltd
repnz
leave
jmp
cs
or
icebp
rcrl
fisttps
jmp
andl
jmp
scas
clc
sub
inc
shll
sti
scas
sbb
mov
sahf
lret
cltd
loope
sbb
btc
loop
dec
mov
les
xchg
xchg
sub
push
jo
sub
xchg
lods
adc
cmpsb
test
dec
inc
mov
lods
nop
data16
adc
add
jp
jbe
push
push
jmp
push
int
test
jl
rcll
loop
xchg
sub
lcall
xor
lahf
insb
into
jmp
fadd
orb
sub
loope
pop
xor
sub
dec
cmp
sbb
stos
hlt
data16
jne
lods
call
sbb
xchg
mov
aad
ja
sub
lret
lods
sar
icebp
and
pop
arpl
jae
aad
loopne
ret
xor
call
add
mov
add
sbb
sub
pop
or
mov
inc
loop
aad
xor
adc
int3
mov
pop
pusha
or
pop
sbbb
outsb
push
std
push
or
fs
push
xchg
mov
push
adc
sbb
insl
mov
scas
pop
insb
push
cmp
and
jmp
or
and
dec
insb
pop
roll
mov
rcll
adc
mov
adc
xchg
lods
daa
repz
out
mov
dec
nop
in
mov
and
jbe
pop
call
stos
mov
leave
mov
pop
lea
jmp
arpl
xor
fidivs
ret
daa
add
xchg
and
jge
cmpb
and
jl
hlt
and
jnp
pop
outsb
call
pop
repnz
das
dec
xlat
xchg
cwtl
add
or
mov
into
test
jns
sub
xor
jp
inc
fnstsw
and
mov
das
or
mov
or
lods
xchg
jo
es
lret
lcall
mov
mov
loopne
mov
jmp
std
or
add
lahf
adc
sub
in
push
insb
sarb
sub
or
mov
mov
es
cmp
mov
in
inc
outsb
mov
jo
jge
dec
ret
gs
add
popf
push
hlt
loop
fwait
repz
sbb
std
xor
out
int3
in
ja
inc
xchg
into
pop
lcall
xor
loop
hlt
pop
dec
xchg
add
repz
cmpsb
or
mov
jp
pop
fs
sti
testb
scas
push
shl
stos
in
pusha
jle
aad
sbb
jp
mov
push
mov
mov
scas
xor
jmp
div
sbb
fucomp
cltd
add
jmp
add
add
ljmp
loop
mov
stos
mov
fiadds
clc
xor
mov
pop
pop
mov
pusha
xor
fbstp
jmp
pop
adc
sbb
xor
inc
xor
pusha
sbb
pop
nop
push
iret
icebp
in
jb
testl
adc
sub
push
int
adc
test
or
push
dec
adc
sbb
adc
std
xchg
pushf
add
hlt
test
add
pop
inc
mov
add
mov
shlb
inc
push
adc
mov
xchg
aas
in
mov
decl
cmpsb
in
adc
dec
out
inc
mov
jo
aad
or
inc
loopne
push
mov
and
arpl
push
addr16
adc
cld
mov
jo
leave
repz
or
or
cmpsl
ja
inc
mov
mov
clc
pop
sbb
mov
jmp
xchg
pop
add
or
out
sbb
and
data16
cmpsl
scas
in
stos
call
jo
mov
mov
stc
mov
inc
sub
add
add
loopne
jecxz
push
xchg
pop
or
test
rorb
jbe
or
in
pop
in
inc
pushf
push
mov
adc
lds
mov
mov
cmpsl
out
notb
outsl
cmp
icebp
sbb
mov
sbb
push
jmp
push
shlb
inc
mov
les
lods
shlb
sbb
mov
arpl
xchg
nop
fadds
dec
cltd
hlt
sbb
push
push
push
xchg
and
adc
jle
dec
push
fcomip
sub
inc
or
popf
mov
inc
and
add
je
rcrb
sub
call
push
jo
insl
mov
mov
fdecstp
repnz
xor
mov
stos
or
aam
adc
pop
inc
jmp
iret
jo
xchg
sub
in
imul
test
xchg
xor
outsl
pop
insl
and
and
lea
pushf
loop
stc
pop
sub
mov
and
mov
test
std
sbb
lods
repnz
movsl
aaa
jmp
xlat
sbb
push
call
dec
std
call
or
leave
cmp
push
pushf
sub
mov
sub
add
out
in
aas
jmp
inc
lock
cmpsl
push
mov
mov
mov
jecxz
push
xor
xor
lds
rorl
push
rorb
insl
xchg
out
cmpsl
mov
ret
mov
pop
cmp
jmp
and
mov
roll
das
jbe
sub
call
push
and
stc
lods
dec
shr
loop
fwait
mov
int
pop
loopne
cmc
xor
jecxz
and
ffree
or
push
dec
mov
notb
pop
inc
sbb
test
fsubl
lds
cmp
xchg
aad
and
cli
movsl
mov
pop
xor
xor
daa
cli
adc
inc
pop
roll
rorl
std
divb
lock
call
mov
jge
es
add
cmpsl
js
mov
pushf
outsl
loop
mov
jmp
ror
pop
dec
or
lret
cmp
call
cmp
add
push
jmp
mov
xor
cmp
out
imul
mov
jns
push
repnz
or
shrb
mov
insl
or
arpl
fstps
mov
call
cmp
push
mov
mov
push
push
mov
mov
das
jmp
xchg
inc
xor
add
loop
cmp
daa
or
bound
sub
lret
xchg
cltd
call
xor
lret
int
clc
sbb
ja
pop
rorl
and
sbb
dec
mov
add
jp
mov
pop
in
int
mov
xor
mov
pop
sub
cltd
out
negb
or
stos
sbb
std
int
mov
aad
cmp
push
pushf
pop
test
mov
mov
ljmp
cmpsl
aas
adc
pushf
mov
add
jmp
rcrl
jp
xchg
cmp
lods
movsl
jnp
cltd
jge
pop
dec
fmull
std
jno
add
enter
int
cwtl
lea
pop
daa
mov
jne
mov
mulb
pop
push
subb
push
fadds
stos
mov
push
sub
jle
les
and
pop
sbb
jmp
jno
out
in
imul
xchg
cmp
dec
jb
call
add
mov
lret
xchg
dec
push
cmpsl
lret
fs
add
call
mov
lret
pop
push
test
or
mov
mov
insl
fistpll
gs
adc
testl
cmp
in
bound
dec
cld
sbb
in
push
popa
icebp
dec
push
jg
lret
jb
minps
sbb
mov
clc
mov
stc
bound
add
dec
cmp
fisubrs
call
js
sbb
rcrb
cmpsb
cmp
cmp
addr16
stc
imul
std
shll
and
jecxz
aaa
lcall
fs
mov
sub
pushf
fdivl
inc
stos
call
std
sbb
pop
mov
stc
and
cmp
enter
aam
mov
out
test
mov
xchg
std
pop
mov
mov
mov
push
push
jne
aad
or
fisubrs
cmc
popa
or
ljmp
jmp
jge
aas
xor
lahf
out
or
dec
xor
out
lahf
das
sbb
stos
pop
pop
inc
jmp
or
dec
or
div
pop
movsb
push
cltd
out
inc
and
or
mov
cwtl
stos
iret
pop
mov
add
in
and
mov
cmpsb
aaa
xor
and
in
hlt
pop
shlb
dec
test
stos
mov
add
mov
stc
adc
adc
aaa
rcl
push
jne
inc
push
mov
sahf
repz
and
sbb
jns
dec
adc
cmp
fcmovb
imul
mov
inc
sub
imulb
sbb
lea
pop
xor
cli
jl
cmpsb
loop
repnz
jmp
mov
aaa
std
push
scas
and
inc
pop
orb
ror
sahf
mov
fmul
mov
jno
fstl
and
cmpsl
mov
mov
in
push
incl
test
mov
jmp
inc
lahf
fdiv
rclb
call
dec
dec
enter
es
xor
push
push
lahf
add
scas
mov
xchg
movsb
mov
out
mov
jl
pop
xlat
dec
test
pop
sbb
add
mov
sbb
call
int
ficoml
repz
mov
sbb
and
pop
mov
cmp
cltd
das
inc
dec
jbe
dec
jge
rcrb
fwait
xchg
jp
push
push
movsb
dec
sub
cltd
cmpsb
mov
leave
xchg
jno
pop
jmp
pop
and
cwtl
mov
push
pusha
pop
sahf
inc
adc
or
notl
fisubrs
ljmp
jle
add
mov
decl
mov
iret
dec
hlt
stc
or
mov
dec
mov
or
adcb
sbb
loope
or
orb
mov
icebp
or
pop
mov
and
adc
ja
dec
sysret
xchg
sbb
cli
mov
ficompl
dec
or
loopne
aaa
stos
lods
daa
adc
mov
sbb
insb
or
sbb
adc
std
xchg
scas
xor
stos
jbe,pn
and
loope
faddl
mov
mov
jmp
push
dec
mov
insb
push
adc
push
sbb
adc
inc
jle
lock
push
cltd
add
fcoml
leave
and
push
das
jbe
dec
loope
test
stos
out
icebp
and
push
push
xchg
add
mov
aad
fsubs
sti
sbb
leave
fimuls
or
pop
scas
into
imul
cmpsb
pop
push
inc
push
inc
xchg
mov
lahf
clc
call
mov
repnz
push
js
dec
or
lea
sub
mov
xchg
push
xchg
fisubrs
ljmp
jbe
jmp
pushf
or
dec
cld
mov
fisubs
cmp
inc
call
jg
mov
adc
ja
pushf
jp
jbe
and
mov
adc
popa
repz
dec
pop
sahf
lahf
sub
aas
add
pop
add
lock
scas
mov
mov
lock
adc
movsb
leave
std
in
xchg
icebp
xchg
call
int3
daa
add
mov
movsb
sbbl
mov
pop
dec
ret
inc
mov
rolb
xorb
inc
mov
mov
fsubs
xchg
mov
or
dec
repnz
dec
mov
ret
or
movsl
in
sbb
or
mov
xchg
and
mov
add
dec
push
lcall
inc
lahf
ljmp
into
stos
xor
lds
insb
bound
mov
addr16
or
inc
jne
lcall
popf
mov
mov
jb
and
dec
and
and
outsl
add
jg
mov
sub
insl
outsb
push
push
push
mov
ret
movsb
test
mov
push
cli
sbbb
xchg
or
cmp
mov
or
aad
mov
add
pop
sbb
or
leave
mov
mov
add
test
mov
repz
cltd
sub
enter
xchg
cmpsl
or
lcall
fisubrs
xor
pop
push
mov
xor
fwait
dec
inc
push
insl
iret
dec
test
pop
or
das
adc
sub
mov
push
imull
cmp
jbe
movsl
aam
pop
je
dec
mov
pop
insb
lock
mov
sub
and
out
and
sbb
add
jmp
clc
jo
dec
mov
or
jno
iret
inc
xchg
cmpb
push
fistpl
xchg
mov
xchg
adc
mov
aad
inc
sbb
dec
mov
sub
std
lock
pop
shll
aas
inc
int
stos
lock
and
call
mov
pop
popl
and
xchg
test
scas
mov
and
pop
pusha
xchg
xchg
std
sbb
add
xor
jo
push
adc
rolb
sti
push
dec
mov
mov
push
pop
test
test
jmp
push
test
and
xor
jnp
lcall
cmp
inc
inc
pop
or
push
sbb
mov
cli
mov
adc
jns
and
test
push
xor
sub
sub
cmp
nop
mov
mov
jle
fwait
test
adcb
sbb
imul
ja
mov
cli
dec
mov
xor
subb
bound
repz
push
sbb
enter
test
mov
sbb
clc
sub
push
loope
lcall
mov
call
fstl
mov
loope
xor
or
lods
rcrl
out
xor
aas
hlt
out
out
fsubr
and
fdivrp
jmp
add
imul
mov
mov
mov
fstcw
dec
mov
cmp
rclb
test
bound
mov
rorb
mov
adc
out
mov
mov
or
cmpsl
push
loop
jp
sub
std
es
adc
lret
dec
sub
jmp
inc
cmp
icebp
pop
fisubs
mov
and
add
add
inc
fldl
push
dec
dec
loope
roll
js
aam
cmovs
loop
xor
fbstp
mov
cltd
fistps
int
sub
dec
lret
jo
std
insb
fdivrs
in
xor
pop
lds
cld
imul
inc
repz
cmp
leave
testl
push
mov
sbb
jmp
test
mov
call
test
push
push
adc
adc
or
jb
jl
mov
add
lds
push
bnd
subl
adc
pusha
inc
and
dec
dec
mov
lock
mov
xchg
nop
adc
dec
icebp
int3
inc
mov
insb
pop
jnp
addr16
mov
lods
mov
adc
pop
cmp
pop
dec
in
sub
mov
push
push
mov
movsl
push
dec
inc
mov
lahf
fwait
notb
cwtl
cld
popf
fmul
inc
out
cmpl
mov
in
jb
adc
dec
dec
and
push
add
movsb
xchg
int3
mov
pop
fildl
xor
shrb
push
mov
imul
addps
xchg
imul
mov
jo
das
mov
sub
mov
cmp
mov
pop
xchg
repnz
das
mov
daa
dec
insb
daa
testl
sub
sahf
cmp
call
leave
xor
lds
dec
aaa
pop
dec
xchg
icebp
test
pop
insb
lock
filds
leave
es
jp
rorb
stos
and
mov
push
cmp
mov
push
insb
std
fstpt
jl
xchg
stos
pop
mov
mov
daa
in
out
stos
repz
sahf
sbb
jmp
mov
jg
push
inc
insb
fsubrl
orl
ss
in
test
lret
test
cmp
xchg
adc
xchg
mov
push
sub
insl
jno
add
insb
inc
movsl
and
sub
mov
pop
xchg
lods
outsb
andl
jmp
or
fisttpl
push
pop
cmp
outsl
jmp
shlb
mov
jmp
sahf
faddl
loopne
adcl
cwtl
into
shl
mov
aaa
or
hlt
sub
sub
add
push
enter
adcb
outsb
or
push
mov
push
pop
iret
popf
cmpsl
daa
pop
jne
and
mov
jg
jl
mov
inc
mov
scas
cmpsl
adc
out
cmp
sbb
imul
cld
fsts
jno
mov
jo
fcoml
cmp
xchg
push
cwtl
sahf
mov
stos
icebp
mov
or
and
xor
lods
sbb
mov
jmp
inc
or
sub
cli
add
shrb
movsb
and
pop
lahf
jns
jb
inc
pop
cwtl
frstor
mov
mov
ret
cmp
mov
icebp
mov
jno
push
and
pop
call
mov
movsb
aaa
jl
fidivs
scas
hlt
pop
or
cld
push
mov
fildll
fisubl
aad
loop
xor
leave
push
cli
push
popa
data16
xchg
inc
insl
and
ljmp
jge
mov
jns
and
dec
cmp
pop
ljmp
pop
mov
leave
imull
cmp
ret
jb
dec
push
addr16
push
push
add
push
out
pushf
dec
push
pop
in
sub
sbb
sbb
fwait
jmp
cwtl
nop
les
lock
mov
mov
add
pusha
jl
jno
cmp
cmp
out
cltd
pop
test
sub
nop
push
cld
add
pop
outsl
mov
test
fsubrp
adc
inc
aam
das
outsb
cmp
or
stc
cwtl
add
xchg
xlat
xchg
mov
pop
xchg
fstpl
pop
call
cmpsb
test
in
lds
and
lea
decl
add
mov
cmp
inc
xchg
js
repnz
sti
cmpsl
data16
lahf
pop
add
andb
jnp
hlt
jmp
xor
dec
pop
xlat
cmp
loopne
push
push
fbld
shll
xchg
xchg
cli
lea
dec
fdivrs
inc
push
fs
mov
rol
or
jmp
or
cmc
cwtl
and
pop
adc
push
test
push
push
xor
adc
jbe
inc
stos
and
call
inc
int3
push
pop
rcl
loope
insl
or
inc
lock
stos
fisubs
mov
test
xlat
or
cli
push
std
mov
arpl
mov
cmp
inc
mov
mov
sbb
or
les
repz
stos
fcoms
dec
xor
mov
sub
adc
jmp
movsb
and
push
ljmp
in
jnp
pop
pop
shll
call
mov
sbb
adc
or
ds
inc
cmp
lea
repnz
xchg
int3
out
and
test
mov
fsubs
dec
stos
lods
jae
inc
sbb
inc
sub
sub
popl
bound
mov
add
mov
push
lret
pop
icebp
inc
or
push
xchg
pop
shll
ret
fdivl
leave
lods
adc
std
push
mov
inc
lods
push
jb
stc
ror
sub
sbb
daa
xlat
sbb
mov
add
jp,pt
push
cmp
push
push
mov
icebp
bound
test
repnz
jnp
icebp
jle
iret
jmp
cmp
jge
add
jnp
das
mov
xchg
or
mov
mov
js
xchg
loop
fsubs
dec
xchg
testl
mov
jbe
mov
jmp
sub
inc
frstor
add
jb
mov
scas
je
das
or
call
out
scas
loopne
std
aad
inc
inc
bound
das
lret
lods
or
xchg
pop
rsm
lret
push
mov
or
xor
lahf
or
notl
icebp
leave
mov
jo
sub
std
xor
push
cwtl
int3
dec
pop
idiv
insl
pop
stos
xchg
sbb
ljmp
add
xchg
int
dec
jne
xor
divl
fdivs
mov
add
mov
mov
push
push
mov
mov
xchg
sbb
inc
xchg
or
mov
mov
jae
jp
dec
mov
sub
adcl
scas
or
xor
xlat
push
ficoml
hlt
jns
ljmp
push
or
jmp
daa
add
fsubrp
lea
jbe
cltd
mov
xor
mov
mov
dec
sub
scas
or
pop
mov
shrl
mov
push
sti
xchg
cmp
pop
imul
xrelease
notl
push
push
loope
call
sti
mov
test
stos
inc
sbb
sbb
xchg
xor
mov
movsb
or
cmp
and
leave
repz
xor
sbb
subl
popa
lds
xchg
pop
jge
jecxz
mov
xchg
mov
and
jno
fucomp
icebp
jne
sub
ret
push
jle
pusha
lds
int3
fs
aam
inc
and
xchg
sub
in
clc
sbbl
add
ljmp
inc
sbb
es
nop
dec
xorb
cwtl
mov
push
aaa
dec
mov
sti
and
ret
or
jns
popa
pop
in
cmp
loope
jp
xor
aaa
test
or
cmc
mov
mov
jbe
push
sub
out
xor
push
sahf
std
xrelease
sbb
imul
addb
test
adc
cs
out
insl
popf
inc
rcl
hlt
repnz
push
push
add
outsl
ja
out
fdivl
mov
inc
jmp
call
mov
mov
cli
inc
mov
push
mov
sub
cltd
filds
lret
in
je
icebp
jae
call
mov
push
jmp
mov
stos
mov
push
mov
mov
repz
sub
push
shlb
idiv
loop
adc
cmpsl
stc
aad
mov
mov
or
sub
cmpsb
orl
andl
adc
fs
shll
push
call
jb
push
or
add
loop
sahf
mov
cmp
inc
xor
mov
ss
shl
and
enterw
pop
stc
xorb
push
inc
adc
lds
clc
xor
lahf
jbe
test
xor
sub
inc
xchg
inc
jle
sbb
add
and
js
addb
jl
movsl
mov
daa
test
int
push
push
pop
in
inc
or
jb
cld
fadd
pushf
cmp
arpl
cmc
cmp
out
push
cli
cmp
cltd
jge
push
orb
stos
xchg
pop
ret
mov
pop
ljmp
mov
add
mov
call
and
rorl
test
mov
adc
outsb
push
ljmp
out
add
lahf
xchg
push
sub
pop
jecxz
add
enter
in
jae
jae
dec
insl
sbb
inc
sbb
test
inc
push
push
cmp
das
repnz
or
push
ret
or
xor
pop
enter
push
lahf
jg
xchg
sub
imull
outsl
mov
push
lods
cwtl
je
adc
add
fdivr
mov
push
rcrb
call
sar
add
or
sub
inc
pop
sbbl
mov
adc
or
xchg
mov
sti
mov
adcl
adcb
xor
fidivl
or
aam
or
jg
int
or
leave
or
dec
rcll
pop
movsl
mov
sub
stc
mov
sahf
leave
shl
mov
test
and
cmp
pop
daa
mov
jecxz
test
movups
cmp
and
repnz
cmp
cmpsl
into
mov
inc
in
ja
xchg
cwtl
ret
sti
lods
fisubs
add
jp
inc
popf
inc
sub
push
f2xm1
or
cwtl
or
add
int3
dec
jne
pop
les
out
mov
lcall
sti
ja
adc
or
dec
xor
ret
lds
lret
stc
fiaddl
insb
das
int
mov
push
daa
mov
insb
push
or
movsl
and
jl
sub
push
mov
jge
pop
add
je
stos
leave
inc
push
jl
js
fimuls
fwait
test
ljmp
jne
sub
shlb
push
bnd
adc
push
mov
push
xchg
mov
jge
daa
sbb
mov
jg
mov
xchg
add
lahf
jle
movsl
aas
push
pusha
push
mov
pop
cmp
dec
adc
mov
mov
or
je
push
cmp
push
inc
mov
dec
jmp
mov
jecxz
mov
sbb
sti
loop
int3
adc
out
pop
jg
pop
out
cmp
stc
popa
outsb
sbb
test
loope
std
add
push
orl
jb
add
cmp
sbb
pop
test
pop
addr16
insb
lret
jno
lgs
sub
adc
pop
push
jae
out
pushl
repnz
jbe
sub
dec
psrad
adcl
jns
sub
ss
jmp
jg
pushf
or
push
xor
sti
push
add
cltd
dec
dec
dec
adc
das
test
ja
notb
daa
sbb
ret
xchg
xor
mov
out
push
mov
sbb
out
inc
add
movsl
add
rol
xchg
daa
sbb
adc
adc
and
loope
and
in
adc
stos
rorl
and
call
dec
out
jne
add
sub
dec
jge
cs
cwtl
popa
pop
andb
fwait
mov
repnz
jge
fstl
pusha
sub
rcrb
enter
fldcw
std
dec
mov
adcb
xor
sub
cwtl
aam
daa
pop
inc
stos
cmc
cwtl
out
cmp
ds
xor
sub
sub
popf
push
inc
add
and
pop
mov
loopne
mov
push
jg
xor
mov
add
iret
js
imul
mov
mov
test
mov
jmp
and
xchg
fstl
sbb
cli
sbb
cwtl
push
push
aaa
xor
push
add
testl
ret
es
cli
inc
mov
inc
shl
sbbl
push
push
lcall
je
sbb
adc
add
push
sbb
xchg
xchg
lahf
xchg
shll
das
jns
or
jp
clc
les
fwait
pop
js
dec
scas
insb
sub
push
xchg
push
hlt
lahf
jns
xchg
and
mov
andb
dec
mov
add
loop
mov
push
scas
pop
dec
mov
cs
repnz
scas
lret
das
xlat
sti
push
pop
pop
cmpsb
shr
push
mov
cmp
shlb
mov
xchg
inc
mov
mov
add
push
test
cmpsl
jl
mov
xchg
icebp
push
jns
fsub
jmp
sahf
cmpsl
mov
not
mov
dec
sbb
pop
loop
mov
jecxz
push
enter
popf
mov
xchg
push
xchg
cmp
inc
leave
or
lcall
inc
push
push
pop
jmp
adc
push
push
or
jnp
test
and
or
sub
lcall
jae
sbb
ficoms
or
outsl
dec
cmc
pop
pop
add
mov
dec
and
pop
jae
mov
xor
call
xchg
cmpsl
xorb
out
add
xor
push
xor
pop
or
sti
aam
push
pop
dec
movsl
cmp
sub
mov
addb
sub
je
or
dec
jmp
xor
in
call
je
stos
or
in
jne
xorb
ja
cmp
fmull
mov
subl
add
or
mov
test
mov
mov
jmp
ja
jmp
mov
fucomip
cmpsl
enter
adc
addr16
mov
bnd
jns
sbb
mov
out
add
jmp
mov
daa
push
xor
dec
in
push
daa
or
mov
add
js
ss
push
push
das
in
shl
pop
push
mov
pop
inc
iret
and
add
pop
orl
popa
je,pn
xor
mov
mov
shlb
cli
inc
loopne
sub
lock
sub
inc
or
xor
pop
or
mov
jae
test
into
mov
pusha
sub
mov
andb
mov
fisttps
mov
push
loop
popf
dec
jmp
xchg
hlt
add
push
cli
outsl
pop
subl
shr
test
subb
cwtl
push
jmp
jbe
loope
rcrb
mov
inc
js
pop
cwtl
loopne
rolb
call
mulb
add
dec
pop
sti
addl
jmp
js
lods
lahf
in
daa
pop
into
stos
cmp
subb
mov
pop
add
nop
xlat
mov
mov
jg
add
out
jg
xchg
loop
lods
std
pushf
fstpl
push
into
ljmp
enter
stos
jmp
jnp
int3
xor
andb
sub
push
icebp
dec
dec
push
fldz
cltd
fmuls
and
jp
add
xchg
hlt
pop
shr
sbb
add
add
push
ljmp
nop
or
divb
pop
dec
mov
jge
out
jmp
sahf
jmp
iret
jecxz
out
call
jecxz
ficoml
je
pusha
cmc
insb
and
nop
fcmovnb
pop
xor
out
jo
mov
dec
notb
mov
rolb
jle
mov
sti
cmc
xchg
xchg
enter
mov
xchg
lods
push
sti
das
addl
add
or
add
repnz
clc
mov
mov
cs
jo
and
or
xchg
mov
or
add
jecxz
or
mov
scas
loope
push
cli
lods
inc
inc
xchg
pop
adc
mov
lret
or
push
neg
xor
fldl
ljmp
cmpsl
sti
pop
jl
push
sbb
xor
clc
mov
aam
jno
xchg
mov
add
mov
pop
xor
insb
mov
lods
push
arpl
jb
mov
fldenv
xchg
or
add
mov
mov
mov
sarb
pop
cmpl
inc
lcall
movsl
xor
pop
xchg
int3
call
cmp
fisubs
push
inc
xchg
pop
clc
inc
push
jo
pop
sub
gs
mov
movsb
dec
or
cmp
repz
push
push
or
orl
inc
mov
push
push
dec
pop
push
sub
sbb
mov
xor
cmp
adc
mov
idiv
daa
push
stos
ljmp
cld
xor
adc
repz
clc
sub
outsl
sub
loop
test
out
jp
pop
mov
pusha
or
inc
pop
insl
jbe
imul
push
call
xchg
pop
in
cwtl
std
mov
call
mov
mov
xor
rorl
outsl
cmp
lret
xor
push
pop
xor
lcall
les
test
sub
shlb
mov
jmp
rcl
data16
xchg
add
inc
jnp
jno
jmp
and
pop
xchg
xchg
jno
mov
jp
cmpsb
push
popa
push
push
cld
hlt
xor
fidivs
addb
pop
pop
mov
orb
test
push
jb
jmp
aaa
int
ret
dec
leave
ret
jmp
out
fistl
lret
notb
pop
or
pop
or
mov
lret
dec
mov
cmp
or
push
jmp
xchg
lret
fldl
dec
mov
add
popa
or
xchg
sbb
push
pop
icebp
nop
popl
mov
loop
enter
pop
push
jns
inc
dec
lahf
fs
pop
xchg
cmc
inc
lock
jo
jle
subb
sahf
jb
pop
push
loopne
cli
out
je
mov
call
mov
push
cmp
shlb
cli
and
inc
mov
add
push
cli
push
aam
inc
call
jmp
daa
psadbw
movsl
xor
add
cltd
jo
mov
push
mov
jbe
jnp
test
roll
pop
stos
fnstenv
push
insb
mov
mov
xchg
mov
sbb
mov
jbe
jb
imul
mov
sub
aas
cmp
add
or
shr
xor
mov
mov
push
xchg
cmc
add
mov
xchg
cmc
cmp
cmp
pop
mov
lret
add
adc
jo
mov
pop
inc
mov
fimull
rcrb
lea
and
inc
in
jle
adc
mov
jns
fldenv
ret
jmp
mov
push
cwtl
jecxz
pushf
mov
or
add
fcmove
jnp
stos
gs
clc
ret
nop
cmp
mov
inc
xor
mov
lahf
in
lcall
xor
sub
or
pushf
mov
pop
in
jmp
inc
push
and
mov
jnp
fucom
xor
loope
jb
pop
mov
sti
loope
dec
call
int3
repnz
push
mov
xchg
pop
push
pushf
mov
fldenv
inc
inc
mov
cwtl
and
mov
mov
sub
dec
add
push
in
icebp
cltd
mov
cmp
push
jecxz
aad
xchg
mov
aaa
push
jmp
cmc
xchg
and
mov
and
mov
mov
shrb
ss
ret
xchg
in
xor
mov
pop
jmp
addr16
xchg
repnz
hlt
inc
mov
sub
int3
xchg
rcrb
xchg
sbbb
sub
cmp
lahf
or
lock
jmp
sbb
dec
dec
dec
push
js
ja
inc
add
cmpb
add
mov
notb
pushf
daa
push
pop
push
lods
stc
inc
push
jmp
mov
ja
xchg
test
fldt
jmp
stc
and
rorb
jp
int3
and
ret
mov
mov
lret
fimull
mov
jle
mov
stos
loop
sub
inc
jno
sar
or
pop
jbe
daa
or
imul
pop
mov
push
add
or
cmpsb
mov
dec
hlt
sbb
push
cmp
push
sub
mov
adc
enter
in
hlt
jnp
jmp
cmp
inc
dec
mov
icebp
orb
mov
loop
add
xor
out
ja
inc
icebp
adc
push
scas
dec
lahf
jne
sbb
incb
cld
adc
repnz
push
mov
dec
je
cld
mov
cmp
test
ret
pop
push
clc
or
jmp
pop
add
inc
daa
testb
or
addr16
lea
insb
repnz
push
out
inc
pop
lods
aaa
hlt
mov
cltd
and
outsl
and
cwtl
sbb
inc
in
test
ret
and
and
xchg
dec
jno
jecxz
or
inc
mov
sub
mov
cmp
xlat
mov
int3
js
mov
fstps
js
add
sbb
mov
jns
pop
test
test
xchg
mov
movb
iret
mov
push
xor
mov
stos
jo
push
ja
adc
jns
icebp
mov
sub
cmc
add
loop
ret
push
ljmp
dec
adc
lahf
xchg
stos
and
iret
fwait
rcr
icebp
sbb
mov
call
movsl
mov
imul
das
jge
sub
xor
call
sub
mov
add
lods
ljmp
add
xchg
push
mov
cmp
jl
mov
adc
aad
dec
sub
leave
fs
mov
xor
popf
add
sub
or
mov
add
mov
popa
dec
popa
popf
mov
mov
bound
lock
jno
sub
mov
lret
negl
jbe
imul
pop
ljmp
jmp
dec
lahf
lret
adc
add
in
not
mov
xchg
mov
or
jb
xchg
add
dec
pop
les
dec
cmp
ret
xor
adc
fdivrs
insb
repnz
cltd
nop
arpl
ljmp
jbe
ss
call
or
push
rcl
call
mov
orb
popf
ljmp
sbb
addr16
mov
loop
and
xlat
xchg
xor
cvtpi2ps
pop
push
xchg
dec
or
popf
aas
jmp
div
xchg
fcoml
push
dec
or
outsl
stos
xchg
cmpsl
jnp
rorl
ss
or
push
into
xchg
add
pop
int3
push
cmpsl
out
mov
push
stos
testl
cs
nopl
push
xor
sbb
movsb
cld
test
adc
jge
mov
lods
out
xor
aam
shl
jmp
add
adc
and
mov
mov
cmpsb
out
push
lock
mov
outsb
mov
aas
enter
into
xchg
push
adc
lods
and
adc
push
dec
sbb
sub
pop
jmp
adc
cmp
push
or
fmuls
sub
in
jge
push
xor
pop
mov
sub
fiaddl
inc
xchg
mov
test
sub
shlb
scas
icebp
inc
mov
sub
es
dec
jmp
testb
pop
ss
push
pop
cmc
mov
ljmp
inc
push
in
mov
out
ja
mov
push
jo
test
add
outsb
jno
inc
dec
jo
jo
xor
jmp
mov
dec
mov
and
lock
cwtl
pop
pop
pop
popf
mov
cmp
fistpl
mov
popa
jg
dec
lds
es
and
cwtl
aam
mov
ljmp
dec
fucomp
stos
jbe
mov
push
xor
or
mov
je
push
dec
and
sub
adc
mov
jmp
inc
jns
outsl
push
dec
xchg
pop
and
dec
push
idivl
sub
int3
clc
push
xor
inc
mov
clc
in
xor
andl
outsb
or
jb
push
or
fistl
shr
inc
push
loopne
mov
std
imul
xlat
push
outsb
push
dec
jo
pop
mov
stc
orb
js
imul
add
aad
and
rcl
hlt
mov
push
arpl
negl
jge
and
adc
mov
popf
int3
in
enter
push
sarl
aad
sub
pop
scas
cmpsl
mov
xor
add
mov
sub
or
adc
or
nop
pop
aad
in
jg
rolb
jmp
int3
enter
jecxz
dec
minps
jge
xlat
xor
scas
xor
iret
arpl
aaa
jae
mov
int3
ret
aam
test
push
mov
hlt
mov
nop
jp
xor
es
lock
call
adc
ljmp
fwait
pop
xor
lret
cli
fidivrs
ljmp
das
loop
dec
xchg
hlt
jb
insb
lea
inc
push
stc
xchg
sub
jb
push
inc
pop
jne
pop
cwtl
xchg
xchg
movsl
mov
outsb
xlat
push
mov
shrl
enter
repz
xchg
lods
jge
cmpl
jb
mov
sbb
sbb
cmc
into
sahf
adc
daa
shll
dec
aas
inc
mov
std
daa
mov
daa
push
mov
testl
mov
ljmp
pop
and
xchg
and
push
repz
and
and
and
imul
int3
push
popf
fdivrl
addb
mov
loop
inc
in
hlt
repz
xor
inc
and
icebp
cld
icebp
js
cltd
xchg
ss
sahf
test
xor
and
rorb
icebp
sahf
mov
scas
dec
xor
xlat
cmp
cmc
std
mov
and
das
push
adc
call
mov
je
repz
cltd
sti
adc
imul
lcall
sbb
ss
xchg
dec
dec
mov
add
push
push
mov
cmpl
divl
jle
into
sar
sti
and
jno
std
add
pop
in
lea
ljmp
xor
push
xor
testl
cmpsb
xchg
add
fs
enter
enter
lods
jl
call
stos
lret
inc
sub
add
mov
inc
cmc
sarl
mov
dec
pop
jb
mov
pop
daa
mov
dec
call
xorb
mov
test
mov
inc
mov
divb
mov
sti
mov
lds
mov
ficoms
and
das
or
clc
ret
xchg
fistps
mov
mov
mov
pop
sub
lods
ret
ljmp
inc
hlt
ud2
mov
inc
dec
jns
xchg
dec
xor
adc
test
add
cmp
sahf
movsb
xor
xor
inc
fcoml
mov
add
call
lods
repz
xor
jb
push
or
cmp
pushf
mov
mov
sub
xor
aam
push
inc
mov
data16
xchg
sub
cmp
leave
add
fsubs
enter
imul
cmpsb
mov
lea
leave
divl
xor
lock
mov
repnz
arpl
das
test
je
add
inc
push
test
int3
xchg
loopne
pop
xchg
sub
pop
scas
pop
mov
mov
nop
mov
scas
outsb
sbb
je
xchg
call
dec
mov
mov
or
xor
popf
cltd
cli
repnz
or
push
mov
pop
mov
fdiv
aas
xlat
sub
mov
cmp
in
push
cmc
sbb
jmp
ds
dec
inc
jmp
and
notl
sub
xor
call
or
jae
icebp
out
icebp
xor
loope
nopl
push
push
roll
mov
or
int
pop
lcall
inc
and
popf
push
inc
subl
insl
repnz
jmp
jge
push
mov
mulps
in
adc
pop
repnz
adc
dec
icebp
call
js
ds
add
into
jae
add
mov
push
push
pop
aad
loopne
or
ljmp
jb
mov
push
adc
inc
pusha
dec
adc
movsl
or
cmovns
inc
repnz
push
mov
jns
lcall
clc
xor
ret
pushf
popa
ljmp
call
sbb
aad
call
lds
cmp
mov
lods
mov
jle
popf
aad
jmp
stos
enter
std
cli
mov
lods
rcl
nop
hlt
push
call
bnd
fs
add
add
test
sub
bound
test
cli
rorb
outsl
xchg
les
mov
add
push
xchg
loope
lea
sti
xor
shl
adc
imull
cli
mov
mov
mov
aas
mov
ret
outsb
push
ljmp
pop
jnp
mov
or
cmc
xchg
jnp
or
mov
dec
jmp
frstor
mov
jnp
dec
enter
jmp
pop
cmpsl
mov
ljmp
sub
cli
sbb
or
in
mov
push
xchg
aam
dec
inc
stos
mov
mov
stos
xor
call
dec
jg
inc
or
cwtl
mov
fnstenv
jo
push
xor
jg
test
out
add
pop
pop
inc
scas
lsl
or
int3
add
rol
in
sub
mov
js
mul
push
add
ljmp
aad
push
call
dec
pop
xor
mov
fistpll
scas
cwtl
xor
inc
fsubl
std
test
jo
mov
sarb
cmpsl
xchg
mov
push
stos
out
xchg
or
xchg
xor
movsb
push
mov
xor
sbb
mov
call
inc
mov
fdiv
outsb
subl
add
lahf
pop
cmp
rolb
sub
inc
hlt
psubsb
dec
xor
ret
pop
mov
das
sar
push
int3
je
or
in
sbb
push
rorb
xor
lock
jns,pt
into
xor
xchg
adc
sub
push
hlt
dec
mov
xor
and
sub
sub
divb
mov
lcall
jmp
les
xor
push
cmp
rorl
dec
lret
push
xchg
add
bound
loope
and
lea
xorl
in
jne
mov
iret
call
int3
andb
pop
addr16
imul
das
in
sub
push
scas
xchg
cwtl
adc
mov
pushf
push
iret
jne
push
mov
or
push
sti
in
mov
das
cmp
aad
out
in
cltd
or
stc
negl
inc
cmp
cli
sub
pop
jecxz
inc
push
lods
and
add
inc
or
lods
xchg
push
out
mov
xchg
testl
and
int
jp
lahf
mov
mov
in
or
out
cmpb
pushf
dec
dec
fisubl
push
call
jmp
test
mov
ljmp
and
xchg
pusha
inc
add
mov
dec
cmp
pop
mov
lret
das
inc
mov
nop
das
add
push
aaa
ret
shr
les
add
scas
repz
icebp
push
fdivl
and
inc
push
popa
jo
fucomip
ss
stc
lcall
jnp
jg
call
repz
xor
or
cmc
mov
mov
xchg
jne
mov
inc
cmc
or
es
cmc
stos
cli
jne
shr
sub
xor
insb
mov
outsl
jnp
mov
fsubs
lahf
mov
and
jnp
test
movsl
in
ja
push
or
flds
rcl
xchg
shlb
or
mov
sub
dec
adc
jl
mov
pop
mov
ds
mov
adc
mov
lock
and
out
ds
push
xor
jg
push
xor
cltd
js
or
add
js
xchg
cli
sub
mov
inc
add
pop
xchg
mov
ss
cmc
out
hlt
xor
inc
push
cltd
cmp
sub
pop
add
lret
pop
inc
or
jns
dec
inc
xor
sub
les
and
insb
adc
lock
jmp
push
dec
sbb
popa
jmp
repz
or
dec
ja
push
jge
rcll
cld
mov
leave
enter
or
xorb
subb
cld
dec
mov
rorl
clc
call
sub
nop
mov
outsb
sbb
push
mov
imul
test
mov
xchg
add
dec
lahf
les
jno
or
mov
dec
es
xchg
sub
push
call
mov
and
mov
adc
bound
mov
rcll
push
jmp
ret
sahf
adc
call
pop
data16
dec
adc
mov
xchg
popf
xlat
lcall
scas
dec
jmp
shlb
cmp
movsl
adc
repz
push
xor
or
pop
mov
pop
lods
xlat
sbb
jb
int
in
jmp
into
xchg
inc
imul
mov
js
mov
add
xor
stc
aad
push
cwtl
frstor
aaa
das
dec
call
mov
lea
js
cmpsl
in
ss
pop
mov
add
adc
test
add
xchg
fdiv
daa
fldl
mov
out
cmc
outsb
adc
mov
sub
pop
pop
hlt
jecxz
out
xor
jp
fiadds
xor
or
pop
push
sub
clc
mov
add
and
stc
mov
aam
inc
jmp
inc
fimuls
pop
fists
mov
push
cs
iret
add
pop
cmpsb
xchg
cmpsb
push
notl
jns
lret
or
sbb
cmp
out
jo
and
jns
add
sub
dec
test
sbb
xor
fistpll
xor
icebp
sub
gs
pop
decb
mov
xor
hlt
add
data16
pop
adc
mov
pop
sub
rorb
test
or
push
aad
jo
mov
imul
out
mov
mov
add
dec
mov
xor
loop
iret
mov
clc
in
pop
cli
inc
mov
jmp
sub
dec
call
fs
fcmovnbe
adc
cmp
fstpl
push
fsubrp
dec
int
cli
icebp
loop
dec
gs
pop
shr
xchg
subb
ret
imul
pop
pop
push
xor
mov
test
sub
push
cmpsb
lea
adc
mov
test
inc
dec
scas
out
nop
popf
daa
in
fsubrp
and
mov
iret
dec
sarl
add
add
dec
or
mov
pop
jb
int
psubsb
cmpsb
int3
dec
pop
and
fidivrs
das
pop
xchg
mov
loope
loopne
pop
hlt
in
sets
dec
pop
notl
dec
scas
fnsave
mov
leave
sub
out
jecxz
or
jb
loopne
pusha
into
sub
dec
shl
into
push
sub
cmp
movsl
adc
push
ret
or
dec
pusha
and
call
xor
adc
testl
rorb
cltd
andl
sahf
push
lock
test
push
mov
or
fildl
xor
mov
sbb
jecxz
pop
mov
mov
push
pop
outsb
arpl
imull
jle
cli
mov
push
pop
xchg
mov
bound
jp
call
cmc
push
sbb
inc
fs
or
mov
scas
fidivrl
pop
sbb
mov
or
fldt
adc
xor
push
stc
int3
sti
push
push
aad
mov
out
cmp
dec
adc
pop
mov
push
dec
mov
jnp
mov
repz
lods
fcoml
jmp
dec
aam
mov
or
or
in
add
and
pop
pop
mov
cs
mov
dec
push
push
inc
cmpsl
and
mov
add
pop
lea
dec
dec
pop
mov
std
inc
mov
in
xchg
mov
pop
outsb
enter
and
or
pop
mov
pop
xchg
aam
in
xor
pop
and
ljmp
xchg
mov
xor
mov
loope
xor
fisttps
push
iret
mov
std
outsb
loopne
lods
jmp
call
inc
inc
repnz
xchg
mov
bound
insb
push
sub
push
jns
adc
jl
cmp
xchg
fs
outsl
pushf
testl
movsb
push
rclb
push
adc
nop
mov
fmuls
sub
sti
dec
scas
pop
push
mov
ljmp
sbb
mov
data16
push
rorb
push
into
std
or
sar
pop
iret
cmp
pop
push
test
int3
call
mov
dec
xchg
jl
pop
mov
lar
jb
jbe
mov
int3
mov
cltd
add
jbe
lahf
push
stc
lret
mov
dec
out
aad
cmp
idivb
pop
inc
pop
clc
lock
xchg
dec
push
fildll
inc
mov
mov
aam
insb
scas
mov
aad
push
jo
pop
pop
fwait
leave
dec
pop
adcb
imul
sbb
mov
lock
pop
faddl
sahf
movsl
sbb
mulb
jp
mov
stos
ljmp
call
push
test
lea
or
mov
mov
decl
pushf
scas
pop
sahf
mov
aad
ret
repnz
adc
add
xchg
lods
inc
mov
ja
xchg
xchg
call
jns
mov
sub
pop
lea
push
nop
scas
out
sub
imulb
push
pop
out
sbb
shl
int
dec
popa
dec
jnp
das
inc
add
xchg
or
add
mov
mov
pop
ret
xchg
cs
loope
push
mov
cmp
inc
jmp
mov
or
sub
pop
das
cmpsb
adc
icebp
and
int3
mov
push
and
les
es
add
or
xchg
mov
dec
add
outsl
fisttpl
jns
xlat
outsl
and
shrb
lods
xchg
aaa
mov
or
xor
mov
pop
bound
jge
ds
dec
mov
stos
in
pop
orb
test
loope
stos
add
fadds
test
push
dec
xor
test
xchg
mov
inc
mov
cmp
pop
insb
or
mov
push
mov
test
xor
daa
mov
jge
iret
cli
jo
jmp
je
sub
dec
push
insb
mov
jp
lret
cmp
stc
std
shlb
divb
mov
pusha
xchg
test
inc
mov
out
sbb
dec
jnp
mov
sbb
andb
xor
or
push
jmp
iret
cltd
jge
pop
cmp
fnstenv
cs
stos
icebp
mov
cld
cmp
inc
movsl
pop
jo
jle
loopne
lahf
ret
repnz
adc
sbb
insl
xor
outsl
jge
mov
jmp
in
or
mov
cld
mov
inc
push
jmp
xchg
pop
jae
jp
in
xchg
mov
call
mov
jne
in
mov
stos
mov
pop
adc
jb
ret
pop
jno
xchg
sbb
xor
adcb
push
scas
pop
popf
mov
leave
call
fwait
mov
lods
jno
movsl
sti
stos
xor
popa
pop
or
cwtl
push
cmp
lcall
push
ret
jp
dec
aad
fsubrs
or
testb
sbb
imulb
inc
mov
stc
xchg
add
sahf
in
pop
dec
nop
aam
or
sbb
push
inc
mov
inc
es
aad
add
mov
enter
or
call
movsl
pop
call
or
mov
leave
insl
jp
or
mov
repnz
into
xchg
data16
cli
mov
xor
sahf
test
pushf
sub
or
in
outsb
outsl
and
push
jbe
int3
inc
inc
imul
mov
dec
imul
pop
iret
xchg
scas
xchg
or
sbb
mov
cs
pop
push
mov
shll
inc
mov
dec
lods
loopne
mov
imul
mov
add
jmp
dec
mov
mov
jl
stos
xor
std
lea
xor
sub
adc
lea
jbe
imul
scas
out
test
push
mov
xchg
test
push
push
mov
cmp
xchg
mov
dec
mov
ds
ds
repnz
scas
clc
xor
and
aas
xorl
sbb
mov
rcll
lcall
ljmp
dec
fdivr
outsb
xchg
hlt
loop
mov
push
and
aas
call
daa
hlt
mov
les
fimuls
cmc
mov
cmp
pop
dec
push
popa
leave
or
dec
cmc
sbb
pusha
inc
push
fisubs
and
ja
testl
enter
jg
adc
sbb
test
sub
cmp
push
sbb
mov
dec
repz
add
mov
mov
cs
sbb
lods
rcll
je
sub
dec
jmp
imul
xchg
stos
pop
popf
fidivs
jmp
into
and
cmp
push
andb
push
jne
mul
out
lcall
push
stos
lods
ds
pusha
ret
scas
add
nop/reserved
xchg
xchg
sbb
add
ficomps
inc
xor
push
mov
xor
jmp
dec
xchg
in
sahf
lods
jb
dec
lcall
das
mov
jbe
mov
fldenv
call
inc
push
in
adc
jae
cmp
or
pop
cld
mov
mov
in
aaa
dec
mov
cs
xchg
push
cmpsb
dec
hlt
lods
das
jb
sub
shlb
fistps
jecxz
enter
cmp
test
addb
xor
inc
dec
pop
xor
fcomip
popf
push
pop
xor
clc
or
repnz
adc
push
mov
or
je
xor
sub
cmp
daa
push
mov
dec
inc
cmp
test
xchg
in
or
mov
cmc
je
dec
mov
or
data16
repnz
inc
or
icebp
aad
dec
add
pop
popa
cmpsb
jb
dec
push
pop
add
push
mov
sti
movsb
add
lahf
out
add
inc
cmp
cmp
pop
or
rorl
cs
jge
insb
xchg
fs
cli
cltd
add
test
dec
out
mov
bound
xchg
jg
js
xchg
jmp
and
das
jecxz
or
cmp
ss
fistps
repnz
pop
mov
movsb
pop
je
cli
sub
add
adc
or
repz
loop
daa
cmc
add
xchg
sub
mov
loop
or
cmp
sbb
test
lds
mov
fiadds
xor
inc
repz
pop
mov
and
dec
mov
pop
sbb
pop
mov
push
lcall
lods
daa
and
inc
lds
lahf
pop
out
imul
xor
leave
pop
cltd
push
out
jg
fwait
cwtl
repnz
test
mov
push
cmp
test
icebp
aam
mov
iret
cltd
test
or
outsl
sbb
push
dec
jp
popa
daa
sub
das
dec
adc
xor
fistpll
fbstp
loope
add
dec
mov
jp
and
lret
push
mov
in
adc
sbb
or
arpl
push
mov
cltd
jg
inc
cmc
add
ret
lret
dec
pop
ret
push
enter
mov
mov
mov
and
adc
jp
out
dec
push
xchg
test
getsec
mov
inc
dec
aad
sbb
push
shl
pop
push
cmc
pop
or
int
scas
xchg
or
out
jo
and
mov
fucomip
or
aam
sbb
xor
clc
mov
dec
cmp
ja
rcll
loop
inc
dec
loopne
or
mov
mov
shr
mov
pop
jmp
sub
movsb
pop
xlat
imul
dec
push
lret
sbb
xor
push
mov
js
std
inc
sbb
mov
sarb
cmp
xor
inc
out
out
xor
jb
or
fcmovb
or
xchg
mov
jp
jo
in
mov
dec
cmp
pop
sub
inc
std
xchg
imul
sbb
add
pop
test
xchg
or
add
lret
pop
in
repnz
imul
scas
mov
jae
mov
add
in
pop
mov
dec
scas
jne
mov
subb
sub
and
aaa
sub
int3
jp
rcrl
or
fmuls
daa
lcall
leave
jg
sub
call
pop
mov
add
mov
cmp
stos
icebp
daa
outsl
sub
push
push
mov
sarl
icebp
xor
lods
or
imul
or
insb
dec
xchg
fidivs
cmp
xchg
js
imul
iret
scas
stos
fldl
std
mov
movsb
xor
nop
inc
test
or
lods
xchg
inc
test
jno
jo
inc
dec
call
mov
icebp
mov
or
push
jo
mov
xchg
push
mov
jnp
add
jb
mov
add
jge
mov
inc
pop
mov
jno
gs
and
cmp
scas
add
hlt
fldenv
std
mov
lcall
fdivrl
orb
mov
aam
mov
loopne
sub
sub
das
nop
inc
test
jo
xchg
mov
mov
andb
test
sub
cs
pop
sub
stc
aas
or
and
push
adcl
call
mov
add
ret
outsl
add
inc
push
sarl
xchg
push
in
dec
insl
test
add
das
mov
adc
dec
pop
lods
jge
icebp
or
gs
inc
call
jmp
pop
ficoms
xor
mov
and
mov
mov
mov
or
mov
fcoms
das
inc
pop
add
cmpsb
and
xchg
fisubrl
add
fistpl
cmp
inc
pop
test
jmp
pushf
pop
add
push
jbe
pop
jno
mov
fnstsw
push
inc
mov
jnp
mov
jmp
stos
and
call
jns
repnz
dec
mull
stos
movsl
test
lret
pop
movsb
loop
popa
inc
or
inc
out
lods
pop
out
inc
or
adc
add
jl
pop
sbb
pop
je
sbb
insb
lcall
jecxz
mov
das
jb
mov
aaa
aad
test
adc
ret
add
fsts
pop
out
xor
push
test
dec
jmp
std
jns
sub
xchg
xorb
jmp
push
imul
cmpsl
mov
cmp
movsb
jmp
push
add
push
push
jmp
mov
mov
lcall
mov
push
mov
aaa
test
fwait
cld
xchg
mov
add
mov
repnz
ja
aaa
aaa
lods
loop
cmpsl
ret
push
dec
repnz
adc
or
mov
mov
xor
subb
jno
mov
push
int3
jnp
outsl
or
sub
mov
shrl
cld
call
and
sbb
xchg
cld
adc
push
outsb
adc
push
push
xor
add
xor
pop
lea
imul
call
mov
add
add
dec
leave
pop
jp
add
pop
loop
mov
push
mov
push
addr16
cmp
jecxz
popf
push
mov
sti
cltd
addr16
xlat
and
pop
out
cmp
jmp
or
cmp
rorl
push
in
mov
dec
test
fwait
jmp
pop
iret
mov
jns
xchg
mov
xlat
scas
mov
xchg
repnz
jmp
cmp
jbe
out
es
add
or
jno
push
cmp
cmp
jmp
out
jecxz
stos
sbb
dec
jmp
mov
mov
cmpsb
push
iret
mov
push
dec
mov
addr16
popf
ret
add
adcb
mov
lea
testb
or
leave
dec
push
mov
jmp
stos
jno
je
push
xchg
ret
popa
sti
pushf
rolb
mov
rorb
mov
and
and
data16
jb
mov
push
sbb
mov
push
hlt
sbb
stc
loop
icebp
adc
aas
test
lock
test
loope
fcomip
sbb
sbb
xchg
push
jno
call
leave
test
sti
mov
xor
pop
mov
dec
jmp
in
loope
sub
mov
jno
xchg
and
es
or
or
aaa
lret
sbb
add
push
mov
adc
mov
dec
aas
or
insb
or
movsl
adc
sub
test
push
inc
sbbb
mov
dec
call
dec
pop
mov
mov
shrb
xor
mov
dec
add
sbb
push
test
inc
test
lods
ja
add
test
sub
or
imul
pop
lea
xor
aaa
ret
popl
ja
or
mov
out
or
add
cmc
adc
mov
lock
sbbb
mov
sbb
add
mov
jb
mov
jns
add
fsubrl
xchg
mov
push
dec
xorl
xor
andb
dec
fimuls
mov
sbb
out
adc
loope
out
dec
inc
mull
adc
xor
inc
arpl
lods
xlat
leave
mov
add
mov
ret
jo
test
clc
mov
test
call
pop
xchg
pushl
shl
mov
add
dec
dec
push
mov
call
clc
mov
insl
dec
mov
inc
repz
call
and
lcall
inc
aad
adc
jmp
in
mov
push
mull
stos
mov
scas
sbb
mov
fstpl
test
fsubrl
mov
pop
jl
xchg
in
call
cmc
adc
punpckhbw
jp
add
and
fucomip
bsr
js
push
call
enter
dec
test
fxch
xchg
mov
pop
int
or
add
pop
and
lds
cmp
fs
mov
mov
push
inc
push
cmc
fistpll
loope
xor
push
push
testb
ljmp
mov
add
push
dec
adc
sub
rorb
xchg
addr16
mov
imul
flds
call
xchg
mov
jne
pop
mov
cmp
xchg
ret
stc
aas
mov
add
mov
sub
sti
mov
repz
jp
pop
cmpb
bound
push
ret
and
or
sub
dec
movsl
mov
add
or
add
xchg
in
add
xchg
mov
mov
ja
mov
xchg
xchg
push
fisttpll
jecxz
mov
cltd
sti
jbe
mov
sub
mov
cmpsl
scas
adc
add
pop
xchg
mov
pushl
cmp
pop
call
adcb
jmp
and
call
shrb
mov
loop
fidivrs
cmp
test
pop
mov
cmpsl
lods
insb
movsl
adc
out
pop
dec
push
mov
int3
jnp
and
xchg
push
xchg
imul
push
push
cmpsb
ljmp
aas
clc
lahf
inc
and
pop
cmp
cmp
mov
cmp
add
jl
jle
das
scas
shl
stos
nop
int3
leave
xchg
jb
in
dec
lret
lods
push
repnz
mov
int
stc
clc
in
sub
ss
lods
push
mov
xor
sub
jmp
mov
ljmp
stos
loop
or
loop
cmc
test
dec
or
sarl
or
rolb
test
dec
jnp
jmp
and
shl
pushf
fmul
pop
int
call
int3
das
push
stos
jmp
shlb
fisttpll
dec
sub
ljmp
int3
dec
cld
in
fidivs
sbb
inc
rorb
sub
xchg
ret
into
jb
dec
lcall
sbb
sub
movl
jno
call
adcb
mov
push
add
cli
cltd
test
cwtl
cmpsl
jge
xchg
std
push
push
cltd
aam
push
and
xchg
dec
icebp
push
ss
out
mov
inc
cmpsl
and
cmp
lret
mov
push
adc
or
das
add
pop
mov
jb
mov
push
mov
sbb
mov
fwait
xor
or
pop
andb
je
in
inc
call
mov
cmp
test
cli
iret
push
inc
repz
js
lock
mov
add
adcb
fdivr
dec
or
test
dec
dec
push
or
mov
mov
out
popa
cwtl
je
or
push
in
or
mov
push
xchg
dec
data16
ret
or
insl
clc
pushf
test
ja
xor
imul
enter
addr16
cwtl
cmp
cli
int3
xor
scas
dec
ds
sub
jo
lret
jmp
xorb
and
sbb
add
or
jbe
sbbb
adc
pop
lcall
loope
mov
mov
aad
rorl
addr16
lret
fwait
mov
pop
adc
and
inc
mov
fmul
and
xchg
cmpsl
icebp
mov
xor
hlt
arpl
mov
lcall
int3
rcl
es
aaa
rcr
lahf
imul
pushf
xchg
jno
adcb
jle
ds
call
lcall
filds
das
call
out
mov
sbb
loop
or
jg
mov
test
jle
xor
mov
into
push
or
cmp
adc
and
lods
ljmp
mov
xchg
or
cwtl
mov
sahf
scas
shrl
jbe
pop
stc
sub
cmp
aad
daa
stos
add
cmp
push
icebp
adc
dec
sbb
push
cmp
mov
mov
inc
int3
clc
sbb
repz
mov
icebp
mov
cltd
jmp
pop
mov
rclb
pop
pop
xchg
jo
add
dec
xchg
inc
mov
xor
movsb
push
in
aam
out
testb
jmp
stos
movsb
pmaxub
ja
nop
loope
cmpsb
daa
fcomi
rcr
xchg
pop
inc
test
inc
shll
lods
jmp
pop
call
mov
andl
mov
mov
hlt
test
jnp
insb
xchg
jl
push
call
jge
inc
daa
stc
mov
xor
rclb
jle
adc
xchg
add
dec
inc
sub
mov
or
xorl
lods
add
jge
push
mov
sahf
dec
mov
mov
mov
inc
lock
push
inc
call
in
leave
je
psubsw
mov
ret
push
or
xor
push
jo
mov
mov
fld1
push
xchg
sub
add
into
cmp
pop
imul
add
pop
cmc
and
mov
dec
lods
or
mov
add
lahf
mov
into
repnz
fbstp
aas
bnd
leave
xlat
or
jg
rorb
sbb
sub
repnz
fwait
mov
and
ja
pop
sbbb
jbe
adc
sub
xchg
xchg
jp
repz
das
pop
add
pop
sahf
jle
pop
pusha
xorb
push
pop
mov
push
ja
pop
pop
cmp
loop
jg
jb
pop
pop
push
enter
mov
sbb
push
popf
or
sbb
fistps
lahf
sbbb
mov
mov
fidivrs
xchg
push
xchg
fisttpll
mov
aam
cs
xchg
jg
or
jecxz
repnz
fistpll
inc
adc
bound
adc
inc
rorb
in
call
jge
enter
es
jns
or
jecxz
sbb
fisttpl
arpl
sbb
push
xchg
inc
dec
mov
sarb
cld
pop
push
pop
mov
mov
data16
lea
js
cwtl
nop
test
fnstcw
or
mov
ja
fldt
xor
rolb
test
jb
divl
push
jbe
push
pop
iret
adc
cmpsb
and
mov
nop
xor
into
popf
inc
gs
xor
xchg
cmp
cmp
lds
and
leave
xchg
jns
movsl
push
cwtl
jne
mov
or
lock
xchg
pop
sahf
int3
nop
xchg
mov
or
rolb
pop
call
leave
js
pop
ret
mov
push
push
rcll
mov
push
hlt
out
jmp
fcmovnbe
test
sub
lods
push
xchg
mov
and
mov
or
hlt
shr
adc
xchg
and
test
cmp
dec
pop
addb
inc
imul
push
xor
sbb
outsl
sbb
lea
movl
sbb
arpl
test
lret
jmp
mov
mov
icebp
mov
xor
pop
add
lods
inc
ja
fdivrl
nop
imul
push
push
stc
mov
in
mov
xor
xlat
stos
sbb
cmp
mov
or
add
leave
daa
cltd
sar
sbb
add
xchg
push
loopne
adc
jmp
inc
inc
fisttpl
das
shl
push
movsl
and
jge
enter
mov
push
call
fstl
jbe
ret
cmp
cmp
mov
adc
or
insb
jbe
mov
fs
scas
in
xchg
add
fisttpll
rolb
pushw
mov
cmp
xchg
inc
aad
cmp
lret
outsl
imul
sbb
imul
cmp
jo
leave
adc
jp
sub
cmc
sub
or
hlt
negl
ds
lret
inc
xchg
push
fldenv
shrl
dec
mov
jg
pop
repnz
jnp
or
pop
add
xor
sbb
loopne
in
sub
push
sub
cmp
popf
push
sub
call
cld
loope
push
std
jmp
jbe
mov
push
mov
inc
outsl
mov
es
jmp
jae
cli
sub
int3
sbb
lcall
pop
fldl
jmp
xchg
test
mov
mov
cmc
sbb
loop
adc
mov
fisubs
inc
jle
shlb
idivl
stc
ret
rolb
mov
mov
movsb
aad
add
das
and
mov
adc
cmp
and
pop
mov
dec
loope
icebp
mov
inc
or
jmp
arpl
xor
push
cmovae
subl
lahf
jmp
icebp
push
mov
xor
ror
or
call
mov
mov
or
shl
dec
in
jg
jecxz
mov
fistpll
popf
mov
enter
xchg
dec
insb
mov
or
inc
mov
cld
mov
push
mov
mov
movsb
notb
push
icebp
add
cmp
call
in
and
ficompl
leave
dec
mov
ja
jl
sub
add
push
loopne
dec
xor
leave
cmpsb
inc
movsb
xor
inc
adc
pusha
mov
mov
jne
subl
jp
add
push
inc
fstps
sbb
push
jecxz
push
push
outsl
aad
scas
je
push
mov
xor
add
pop
pushf
pop
add
mov
or
daa
call
mov
push
jns
aaa
loopne
jne
xchg
cmp
lcall
jb
xor
fisubrs
idivb
mov
jge
pop
xchg
loopne
pop
xchg
mov
stos
sti
mov
push
stos
ret
jge
es
mov
sahf
cli
push
sbb
or
pusha
xchg
lock
stc
xchg
add
fiaddl
lock
insl
push
call
jae
xor
outsb
mov
movsl
scas
inc
sbb
adc
xor
mov
mov
xchg
jne
dec
push
dec
xor
lods
sbb
lods
inc
in
cmp
nop
dec
cli
lock
nop
and
xchg
pop
sub
and
adc
cmc
imul
call
mov
pop
jmp
jo
repnz
mov
and
mov
movsb
dec
pop
dec
sub
out
xchg
dec
adc
loope
pop
mov
ret
stos
jecxz
push
add
push
inc
sub
lret
xor
push
imul
xchg
pop
sub
jmpw
sbb
mov
movsb
sub
or
mov
and
dec
ja
sbb
or
push
imul
adc
xchg
mov
or
inc
test
dec
xor
and
test
inc
jno
cltd
xchg
pusha
mov
and
mov
add
jnp
iret
mov
mov
fwait
daa
and
call
mov
stos
repnz
or
sahf
pop
popa
subb
sub
fstpl
int3
test
jge
insl
icebp
adc
jnp
idiv
idiv
pop
adcb
ret
mov
jb
insb
repz
cli
das
dec
and
mov
pop
loopne
adc
out
adc
adc
ljmp
cmpsb
inc
and
push
inc
mulb
or
out
addb
mov
add
test
xchg
sub
ljmp
jmp
das
in
mov
lahf
inc
cmp
jmp
xchg
call
in
push
lret
sti
adc
sub
js
or
popa
hlt
mov
das
sbb
sbbb
js
mov
mov
pop
pop
jae
add
sub
push
adc
push
addl
cltd
cmp
fidivrs
mov
and
or
cltd
addb
dec
loope
add
scas
xor
jno
icebp
xor
cmpsl
mov
jmp
pop
sbb
xchg
sbb
ds
loopne
push
push
sti
cmp
inc
lret
in
pop
cmp
xor
dec
iret
jl
jae
dec
mov
subl
cmp
xchg
testb
inc
dec
inc
mov
ror
data16
pushf
pusha
or
add
js
clc
xchg
ficoms
ljmp
or
test
sub
push
mov
jmp
fstl
xor
addb
loope
cmp
pop
rclb
jne
pop
shll
add
aam
mov
cmpb
mov
popf
or
sbb
pop
and
sbb
push
mov
xor
ja
add
in
xor
mov
sahf
sbb
ret
pop
test
jb
dec
addl
popf
movsb
and
jmp
push
cmp
jmp
mov
add
cmp
mov
xchg
or
mov
das
pop
jmp
movsl
mov
ds
ficoml
dec
pop
mov
fisubrs
mov
xchg
fbld
sahf
sub
mov
pop
push
push
lret
push
xor
out
dec
add
std
aaa
aad
nop
push
out
xchg
mov
mov
in
adc
pop
stc
mov
push
call
sub
xchg
xorb
jl
xor
das
push
jmp
std
out
mov
sbb
sbb
push
movsl
test
imulb
sbb
dec
fsub
pop
sub
cmpl
or
sete
mov
stos
dec
rclb
cmpsb
adc
pop
inc
call
imul
fstl
push
call
or
test
and
in
fildll
pop
cmp
add
jmp
jne
lods
rorl
nop
jnp
push
and
cs
and
test
ja
cwtl
mov
or
xlat
ror
pop
call
push
inc
cltd
add
or
inc
mov
test
lods
push
popa
or
dec
popf
xchg
test
mov
mov
xchg
xor
scas
rorb
leave
cmp
fisttpll
pushf
or
fwait
sub
lea
cmp
mov
dec
enter
int
push
push
jo
mov
inc
xchg
mov
pop
fsubr
das
mov
fisttpll
sub
popf
jb
push
pop
push
je
fsubrs
outsb
mov
jle
sbb
jnp
or
mov
andb
cmp
sbb
xchg
add
test
cmp
test
ljmp
repnz
push
idiv
cmp
jmp
mov
shlb
call
xorl
mov
ficoml
xor
ds
divb
cld
hlt
ja
mov
mov
cli
sub
loopne
jmp
out
movsb
lods
lock
pop
adc
push
pop
jmp
sub
cltd
xchg
mov
adc
cmp
sub
mov
dec
dec
xor
mov
jae
sahf
shl
in
loope
pop
sbbb
mov
enter
out
sub
ficoms
cmpsb
and
push
inc
mov
push
daa
rol
clc
push
mov
add
add
mov
in
or
ja
xlat
cs
xchg
dec
out
mov
sbb
pop
xlat
inc
cmpsb
aad
adc
jmp
dec
xor
mov
add
mov
rorb
das
sahf
pop
adc
scas
sub
pop
testb
jno
sbb
push
pop
rcll
inc
popf
jmp
call
dec
mov
ret
scas
mov
xchg
mov
aam
cmp
adc
icebp
mov
push
fdiv
lea
xchg
call
xor
xchg
movsb
xchg
lods
or
mov
mov
inc
jmp
xchg
add
sbb
mov
cmp
repnz
mov
dec
outsb
xor
pop
xchg
push
insb
inc
dec
inc
jecxz
pop
inc
jmp
pop
add
out
xchg
mov
scas
in
cmp
push
std
add
lret
pop
xchg
sbb
bnd
test
xchg
push
inc
call
pop
push
loopne
mov
out
jp,pt
mov
mov
push
shr
cli
pop
or
rcrb
or
stc
rcrb
or
inc
sub
mov
inc
sub
mov
lahf
in
add
pusha
push
xchg
cmp
pop
push
pop
push
mov
add
popa
dec
inc
nop
shrb
push
hlt
repz
fucomip
lret
jle
inc
test
cmp
inc
jp
jl
xchg
pop
mov
jmp
jo
xchg
or
rclb
sbb
cli
data16
xchg
mov
call
ja
in
xchg
push
push
daa
mov
popf
icebp
mov
sub
test
test
xchg
sahf
test
sub
mov
pop
sub
negl
mov
aaa
repnz
adc
jns
sbb
fcmovbe
inc
jno
jmp
pop
or
inc
jge
rol
dec
sub
scas
testl
push
xchg
in
pop
cli
push
or
xorl
dec
jge
sub
test
ficoms
mov
or
pop
je
lods
jp
lock
mov
adc
hlt
mov
ja
cli
push
cmpb
push
lea
mov
add
sub
mov
push
int3
fnstcw
int3
fildll
cli
jg
popf
inc
loopne
inc
pop
aam
daa
or
outsl
daa
pop
add
mov
xor
sub
andl
push
fistpll
out
out
outsl
outsb
and
repnz
rcrb
gs
icebp
out
scas
mov
xor
push
idivl
stc
jecxz
and
lea
sub
adc
faddl
push
ret
test
pushf
fldt
mov
stos
or
out
sbb
mov
xor
call
and
pop
repz
add
call
int
mov
push
pusha
ret
jl
leave
xor
repnz
in
jge
and
lea
scas
mov
testl
fs
mov
test
imul
in
out
out
int3
and
mov
pop
add
cli
xor
mov
cltd
cld
add
adc
cmc
fs
mov
push
sti
push
cltd
jmp
mov
cmp
int3
mov
lea
push
push
in
imull
ss
pop
mov
mov
sub
push
adc
ret
loop
jno
imul
mov
and
pop
dec
jb
je
repnz
jno
sarb
lcall
daa
jbe
sbb
sub
movsl
sbb
repz
dec
mov
mov
roll
add
fildl
mov
pop
icebp
js
mov
nop
and
dec
or
adc
inc
cmp
mov
fstl
popf
sarb
adc
adc
and
or
push
pop
out
add
push
mov
pop
cmp
mov
rol
gs
cmp
mov
sub
icebp
insb
imulb
xor
jbe
xor
pushl
imulb
sub
or
std
xor
shrb
movsb
cs
mov
loope
mov
push
or
adc
adc
stos
sbb
pop
adc
sbb
dec
mov
or
jl
repz
rcrl
dec
test
das
or
dec
dec
add
xchg
dec
out
mov
gs
inc
aad
and
icebp
push
ja
cmc
mov
jne
popf
nop
mov
add
cmp
das
into
callw
fsubrl
xchg
iret
cmp
pop
sub
dec
inc
scas
add
pop
pop
mov
rol
sub
das
cmp
test
xor
mov
xchg
mov
xor
xchg
loope
inc
and
dec
and
hlt
mov
movsb
mov
call
add
out
lret
mov
pop
sbb
jno
jbe
adc
fists
rorb
int3
sub
sar
pushl
inc
add
jnp
sbb
jmp
jo
and
jg
inc
lea
push
push
sbb
pextrw
inc
cmpsb
les
mov
movsb
or
push
push
loopne
movsb
daa
aam
jge
push
adc
ljmp
enter
xlat
pop
sbb
push
add
or
rclb
outsb
dec
fnstcw
enter
xor
andb
push
popf
jb
dec
mov
xchg
test
cmp
jno
movb
out
jmp
pop
add
cmp
es
nop
xchg
aam
scas
xchg
sbbb
stc
cmp
push
and
stos
push
idivl
mov
enter
ja
jb
stos
imul
mov
aaa
push
out
fisttpll
adc
aad
inc
mov
jl
jmp
fmull
and
and
int3
mov
push
sbb
add
or
mov
sub
push
mov
mov
fistps
mov
xlat
pop
and
imull
fistl
daa
ds
adc
popf
xor
mov
mov
mov
lahf
xchg
and
std
sub
mov
and
mov
pop
fiadds
int
cmp
daa
inc
cmpsb
test
add
call
add
mov
jle
loopne
inc
daa
call
cmp
adc
orl
out
or
pop
bound
sub
cmp
nop
jno
in
fs
sub
in
xchg
xlat
test
jg
lea
mov
das
sub
lea
or
jl
lea
icebp
fsts
outsb
add
loope
jecxz
dec
mov
call
nop
divb
insl
mov
sub
stos
push
fadds
sbbb
cmp
pop
in
pop
jmp
cwtl
sbb
fdivp
pop
pop
outsb
mov
in
psubsb
in
test
add
push
add
shl
insb
mov
icebp
jne
fwait
and
mov
cmp
or
xchg
mov
and
int3
sub
mov
daa
push
sti
test
arpl
fsubr
enter
cmp
out
dec
icebp
xorl
cmpsb
jno
mov
push
mov
jmp
mov
jmp
xchg
lea
inc
jmp
fsubr
jecxz
subb
inc
pop
fiaddl
fmul
push
push
out
cwtl
scas
xchg
fdivl
pop
dec
mov
mov
inc
aas
and
shr
loop
inc
xchg
pop
orb
ret
std
pop
clc
lds
inc
xor
xchg
mov
addl
or
bound
jno
repz
xor
fneni(8087
cmp
mov
icebp
or
jl
jnp
scas
or
cli
jb
call
les
neg
inc
lock
jmp
insb
inc
rolb
jp
add
push
cmp
push
inc
shrb
or
pop
cli
and
pop
xchg
lods
sbb
pop
inc
sub
jmp
movsl
push
inc
das
outsl
call
sbb
jge
or
nop
cmpsb
dec
mov
dec
loope
xorb
push
jb
or
cmp
xchg
jg
xor
or
or
sbb
pop
sbb
xchg
cmpsb
and
xor
enter
dec
fld
sbb
enter
adc
push
aad
sub
cmp
lret
mov
xor
out
mov
pusha
cmp
lahf
xor
sub
jge
das
in
negl
cmc
cmpsl
adc
jle
sub
pop
sub
pop
xchg
sub
int3
pop
stos
call
mov
xchg
lret
mov
jbe
dec
inc
add
mov
push
into
fildll
call
enter
push
push
fdivrl
push
mov
jecxz
adcb
pop
sub
push
mov
shll
push
sbb
or
jmp
dec
or
jno
pushf
loop
movl
stos
popf
or
arpl
jns
add
jns
imul
in
jb
jmp
stc
or
adc
push
dec
mov
insb
das
out
or
adc
add
insb
sbb
cmp
mov
popf
mov
rcrl
xchg
insl
rolb
outsl
xor
mov
repnz
mov
lds
add
nop
jg
inc
mov
adc
fwait
xchg
pop
lahf
fnstcw
cmp
cwtl
sub
and
imulb
xor
push
inc
and
clc
mov
cli
in
hlt
xor
cltd
mov
jno
jae
cltd
mulb
cwtl
mov
test
addb
leave
stos
pop
flds
hlt
mov
or
sbb
mov
aam
rcrb
loope
sbb
mov
jnp
std
adc
adc
daa
out
push
mov
aas
sub
cmpsb
mov
pop
sbb
loop
loope
movsl
aam
jno
faddl
jmp
xchg
mov
xlat
and
jecxz
lods
adc
mov
or
add
adc
stos
aam
bound
xchg
sub
clc
xchg
lret
repz
mov
arpl
stos
inc
add
repz
mov
and
daa
pop
sbb
dec
aad
add
push
sub
ret
and
js
shll
mov
into
data16
or
stos
mov
pop
inc
in
and
cmp
es
cmpsl
push
cmp
sbb
and
pusha
inc
mov
jl
xor
cmp
add
sbb
mov
testl
xor
loop
repz
and
sbb
dec
aas
xchg
pop
sub
inc
sub
cmc
sbb
sub
sti
divb
sbb
fisubrl
std
mov
mov
adc
or
out
pop
push
push
mov
adc
pop
outsb
inc
mov
push
jp
retw
repz
jb
repnz
push
mov
sbb
push
jno
mov
mov
lcall
cmp
int
in
jno
jmp
xor
dec
mov
insl
je
inc
jno
aam
and
or
out
aad
mov
push
add
test
rcl
or
add
xchg
jecxz
push
xchg
aaa
ja
rcll
add
movsb
mov
xor
cmc
mov
pop
call
sbb
dec
testb
loopne
ljmp
lahf
xor
cmp
rorl
pop
cwtl
and
add
test
xor
lret
adc
repnz
lahf
int3
pop
push
push
sub
push
sub
xor
push
jmp
xor
mov
icebp
inc
js
icebp
fucomp
ss
je
add
jge
push
xchg
popa
aas
or
xlat
or
lret
and
test
cmp
jmp
shrb
cltd
jno
jno
push
sub
dec
std
decb
cmp
sub
cmp
xchg
cmp
push
sarb
jae
sub
mov
mov
xchg
outsb
xchg
sbb
ds
jle
sbb
jno
les
dec
cmpsl
movsl
push
mov
lock
or
sub
mov
inc
push
jle
xchg
mov
mov
xchg
pop
sub
cmpsl
pop
hlt
or
xchg
adc
insl
movsb
fadds
dec
in
pop
mov
test
cwtl
push
cmp
daa
jne
sub
pop
movsb
fldl
and
jb
dec
xchg
cmp
or
mov
sbb
incl
ds
and
icebp
pop
jbe
mov
cmp
mov
in
mov
mov
mov
jno
jle
inc
lods
mov
leave
adc
dec
data16
pop
jne
mov
rol
add
dec
movsl
rclb
pop
cwtl
jp
ret
jmp
inc
shll
cmpsl
loop
loopne,pn
push
das
inc
sbb
xorb
into
dec
arpl
movsb
mov
push
ret
test
mov
and
cmp
xor
xor
cli
mov
adc
pop
cli
orb
xchg
shll
in
ds
inc
pop
jno
push
in
add
or
pop
xchg
adc
fstps
or
aad
jp
pop
mov
xor
pop
test
popf
andb
popf
inc
out
adc
or
inc
testb
lahf
sub
cmpb
repz
out
sbb
sarl
test
xchg
pop
lea
ss
les
fidivl
and
jne
or
pop
cli
push
aad
jge
mov
testb
and
mov
loopne
add
sub
mov
cld
sub
mov
ss
cli
jmp
nop
pop
aad
inc
push
mov
cld
mov
push
insb
test
cmpsb
pop
fdiv
and
jmp
call
fdivrl
sub
outsl
xchg
xchg
int3
mov
jl
mov
mov
push
sbb
adcb
adc
fcoml
call
and
add
lods
ja
or
mov
test
mov
bnd
or
loope
std
or
cltd
fs
push
add
outsb
or
sbb
fbld
sub
lods
movsl
jge
call
js
mov
ret
pop
in
hlt
mov
jmp
xor
add
jecxz
call
xchg
push
fs
lcall
test
repnz
mull
adcb
mov
push
push
xchg
push
mov
daa
sbb
mov
js
or
or
jns
or
aaa
fxam
repnz
leave
mov
or
call
out
imul
mov
stc
aaa
jecxz
sbb
es
inc
sbb
mov
imul
clc
inc
cli
mov
fs
in
inc
adc
sub
or
xchg
mov
jno
andb
incl
push
cmp
out
lods
cltd
sbb
bound
das
jge
call
mov
jecxz
add
cltd
je
mov
sbb
clc
pop
in
loope
push
pop
jmp
xor
xlat
insl
sbb
fcoml
push
cmp
stc
sbb
fwait
pusha
pop
sbb
fbld
xlat
ljmp
or
shll
fmul
ljmp
out
inc
movsl
out
push
movsl
cmc
inc
int3
scas
ds
aas
sbb
or
pusha
pop
fwait
lahf
sub
popf
push
imul
add
es
lgs
xor
cmp
mov
add
sub
ljmp
movsl
test
push
loopne
pop
cmp
repnz
in
mov
fbld
flds
or
outsl
mov
and
cmc
and
rclb
hlt
and
int3
push
out
fsubr
mov
aad
sbb
jge
test
pop
jmp
jg
cld
and
push
mov
jge
test
jp
sub
call
mov
int
scas
or
aam
incb
sbb
mov
cmp
rorb
dec
call
in
or
inc
mov
jnp
mov
push
mov
call
sbb
faddl
or
stos
cwtl
fimull
mov
mov
add
into
sub
daa
add
and
fisttps
lds
xlat
sub
and
popf
push
fisttps
popf
stos
jl
xchg
cmp
dec
adc
cmp
xor
dec
out
dec
into
in
pop
scas
les
cmp
mov
movsl
mov
out
lods
test
dec
or
je
out
push
xor
pushf
pop
das
outsb
push
roll
filds
pop
icebp
mov
and
cli
daa
idivb
mov
push
test
add
fdivrs
xor
ss
nop
mov
dec
inc
mov
clc
cmp
rcr
inc
mov
jo
test
dec
cli
sub
mov
aam
rcr
stc
inc
push
dec
push
cli
inc
sbb
push
sahf
in
insb
lret
dec
outsl
push
cmp
clc
sbb
int3
std
and
bound
stc
sbb
data16
addr16
dec
or
xchg
jns
xchg
lcall
sahf
cli
adc
shll
fs
fbld
and
xchg
mov
inc
inc
stos
push
cld
sub
lret
xorl
add
test
into
mov
por
mov
sub
test
cmp
out
push
dec
pusha
mov
add
call
cmp
add
jb
xchg
cmc
mov
xor
call
mov
das
pop
sbb
jb
shl
stos
xlat
jns
dec
jge
or
inc
scas
movsl
lahf
aad
in
adc
add
xchg
adc
int
shl
cli
in
pop
push
pop
xor
adc
xor
fcomi
adc
shll
bound
ss
aaa
push
push
mov
xor
in
xlat
pop
into
nop
or
call
jo
jb
or
jnp
daa
cmc
sbb
aad
cld
mov
ss
das
push
pop
dec
sub
fsts
testl
sub
push
push
and
aas
xchg
sbb
xor
pop
leave
rorb
and
stos
clc
push
mov
jno
sub
rorb
movsbl
scas
jo
stos
rclb
test
xlat
push
nop
sbb
fiadds
lret
fsubl
rclb
outsl
arpl
insl
icebp
jp
gs
imul
js
inc
inc
mov
loope
adc
sahf
mov
sbbl
lret
jle
ljmp
icebp
mov
es
sub
or
ret
leave
sti
pop
mov
inc
push
inc
aas
mov
mov
sub
push
pop
lret
icebp
pop
mov
or
jl
insl
or
mov
push
mov
or
lods
aad
mov
mov
pop
psllq
cltd
mov
xchg
call
xlat
add
xor
lahf
sti
outsb
mov
out
popa
xor
push
icebp
or
callw
mov
or
fwait
push
pop
mov
insb
les
arpl
xchg
mov
shll
jp
push
call
loop
push
add
stc
cmpb
test
jp
sub
clc
notb
stc
daa
pop
jge
imul
je
xchg
cmp
xor
js
or
mov
inc
sti
cmpsb
insb
push
cli
test
push
out
jno
xor
add
popa
ljmp
repnz
out
pop
imul
stc
sub
push
daa
aad
dec
xchg
and
jmp
sti
push
fistpll
cmp
test
adc
roll
xor
pop
mov
and
outsb
sub
rcr
push
cli
jns
push
jmp
dec
or
imul
sub
add
add
mov
loopne
dec
daa
out
add
and
jmp
mov
lds
loop
inc
frstor
ss
pop
data16
sahf
jle
push
adc
or
test
pop
pop
dec
pop
insl
iret
movsb
cld
push
mov
icebp
jo
mov
fdivr
sbb
es
in
dec
pop
jmp
sbb
jl
sub
loope
cmp
iret
cltd
adc
cwtl
mov
inc
pop
jno
dec
push
mov
inc
addr16
js
and
stos
mov
pushl
test
mov
jecxz
jo
inc
adc
in
mov
add
and
enter
inc
dec
jno
insl
add
jne
push
mov
inc
inc
jmp
or
mov
out
mov
mov
add
lcall
mov
inc
jae
mov
daa
sahf
fistl
cmp
or
inc
mov
mov
jmp
push
fldenv
inc
sbb
sbb
rorb
mov
in
sub
call
js
sbb
adc
scas
xchg
insl
lods
scas
bound
es
adcb
insb
push
lods
int
push
out
mov
test
mov
daa
enter
in
lahf
and
ret
mov
into
jmp
inc
sbb
sub
pushf
sti
jg
jb
fiadds
pop
adc
mov
add
out
push
dec
mov
pop
cmc
mov
adc
cmp
das
insb
xor
mov
push
clc
pop
mov
outsb
lahf
push
jmp
jmp
lcall
and
sbb
pop
or
mov
aaa
aaa
xor
add
pop
mov
outsl
or
cli
pop
loop
push
xor
push
aaa
std
mov
push
lahf
jmp
sub
neg
jl
sub
sahf
jbe
popf
loop
repz
mov
test
clc
xor
pop
pop
xor
mov
out
push
pop
mov
mov
imul
mov
ljmp
mov
add
ljmp
in
xchg
mov
insl
jns
push
sti
rolb
bound
xchg
ljmp
pop
ds
cmpsl
stc
sub
mov
or
adc
fmull
or
shr
xchg
push
add
adc
mov
jae
cmpsl
stos
mov
inc
jmp
add
mov
push
js
mov
mov
pop
mov
ja
cmpsb
push
inc
popf
pop
repnz
inc
pop
lods
adc
sbb
mov
xchg
or
inc
stos
and
xchg
cmc
in
jns
xchg
inc
in
lret
jns
sahf
mov
mov
or
adc
mov
jg
leave
sbb
or
or
xchg
jne
iret
push
pop
lock
iret
test
cmp
xchg
sub
sbb
mov
xchg
popa
addb
or
mov
jb
xchg
inc
pop
out
in
icebp
mov
faddl
push
test
ret
dec
xchg
mov
or
rclb
jmp
call
rorb
push
lods
fadds
fs
cmp
jo
pop
call
fnstenv
mov
mov
push
mov
movsl
ss
fadds
cmp
insl
lahf
ret
pop
dec
and
fldcw
sub
pusha
loop
mov
inc
xchg
popa
dec
add
xor
shl
push
scas
or
mov
jmp
stc
mov
cwtl
add
pop
ds
cli
mov
icebp
push
push
sbbb
push
adc
xchg
or
cmp
xor
adc
push
add
push
push
cmc
or
daa
repnz
insb
ja
lea
mov
nop
mov
popa
pop
pop
and
dec
adc
sbb
ja
repz
hlt
leave
stc
jbe
mov
jp
das
and
lock
push
scas
aad
repnz
dec
inc
push
enter
xor
aaa
push
mov
out
loope
fmull
adc
cmpsl
clc
idivl
sarl
pop
insb
inc
cli
sub
pop
lods
and
xchg
mov
cmpsb
jmp
ja
ret
repnz
xchg
int3
orb
xor
pop
call
mov
push
cld
jno
roll
sub
push
cmp
jmp
dec
jns
frstor
push
and
call
ljmp
dec
mov
xchg
pushf
add
jmp
ret
mov
xchg
into
das
inc
fs
fprem
and
pop
push
das
xorb
pop
dec
pop
dec
push
enter
div
add
popf
lods
jae
shll
xchg
mov
push
test
jnp
mov
adc
pop
jmp
lret
sbb
fwait
adc
addr16
fwait
dec
daa
jecxz
out
inc
enter
inc
or
jmp
imul
rorl
or
mov
dec
inc
icebp
inc
jmp
mov
fbstp
mov
mov
dec
inc
jo
mov
jg
dec
xor
mov
add
call
inc
mov
dec
and
movsl
mov
xor
aaa
jb
inc
ja
push
add
insb
and
and
sub
xor
push
push
or
xchg
lock
push
mov
mov
adc
repnz
inc
hlt
jl
jmp
cltd
inc
cmpsb
and
adc
jecxz
sbb
icebp
inc
lcall
jmp
mov
pop
dec
jb
jmp
incb
andl
adc
or
sub
jne
mov
je
dec
loop
daa
popa
insl
inc
pop
add
mov
fiadds
jg
arpl
lcall
fcomip
inc
pop
mov
scas
or
dec
sbb
cwtl
inc
inc
mov
lahf
cmp
sub
inc
add
or
cli
lret
add
jne
call
push
pop
sbb
jge
xchg
add
jne
pop
mov
push
push
cmp
ljmp
and
jge
es
mov
push
mov
xor
xchg
flds
adc
mov
mov
lahf
sbb
or
xchg
mov
xchg
repz
orl
subb
mov
jae
pop
imul
mov
call
push
jmp
pop
pop
and
into
int3
mov
hlt
or
mov
push
jmp
rcrb
xchg
push
jb
mov
push
and
jno
inc
adc
movsl
mov
jae
rcr
andb
jo
push
aam
mov
inc
pop
adc
int3
in
int3
sub
xor
xor
cmp
sbb
addb
clc
jno
mov
pop
dec
testl
loope
ljmp
subb
push
fists
jecxz
fsubr
inc
and
jmp
inc
xlat
mov
inc
sbb
mov
subb
mov
pop
pop
xor
fadd
mov
ljmp
lock
pop
mov
add
int
je
xchg
jo
xchg
xor
cmp
add
push
cmp
ret
stos
mov
ficoml
cmpsb
adc
adc
xlat
push
inc
sub
out
mov
pop
dec
or
push
sbbb
push
mov
cltd
pop
and
leave
data16
mov
dec
xchg
mov
shll
mov
loop
inc
inc
mov
mov
sub
xorb
call
mov
xchg
rcrl
in
add
popf
mov
jne
mov
leave
shrb
mov
mov
ret
jo
out
mov
push
sbb
mov
push
je
outsb
sub
dec
fmuls
lea
cmpsb
pusha
adc
aad
pop
fisubl
and
pop
xor
cmpsb
xlat
fdivrs
ljmp
adc
mov
fisubl
xchg
mov
insb
repnz
or
cmp
orb
cmpsb
or
xchg
xchg
or
dec
imul
mov
xor
stos
test
addl
push
pop
push
jae
hlt
dec
pop
mov
icebp
hlt
loop
lahf
mov
jb
sbb
std
mov
lcall
and
dec
fnstcw
cmpsb
scas
lret
mov
dec
ja
dec
popa
fwait
jnp
clc
cmp
je
imul
mov
push
push
dec
mov
ljmp
sbb
dec
test
inc
push
loopw
mov
and
jmp
adc
add
mov
xor
jmp
sub
sbb
inc
mov
into
out
pop
pop
sti
inc
jge
popf
mov
push
popf
jae
pop
popa
les
lsl
dec
jnp
xor
push
std
add
sti
and
and
dec
jo
xor
in
cmp
inc
ret
add
xchg
mov
pop
loope
test
jne
jae
push
jb
pop
xor
cmpsl
sti
dec
test
push
jno
lret
iret
cmpsl
ret
sub
xchg
pop
adc
sbbl
dec
push
pop
inc
int
xchg
shll
pop
pop
sarl
adcl
dec
push
out
in
lcall
punpckhbw
jbe
into
mov
cmpsl
bound
decl
push
adc
call
orb
pop
subb
xchg
jge
fs
repnz
mov
fs
xorl
fidivl
leave
push
pop
testl
push
cmp
push
pop
testb
push
mov
or
ss
push
repnz
pop
add
shrl
std
cmp
ficomps
or
ja
mov
mov
je
ret
shll
push
scas
sbb
add
xor
test
sub
adc
xchg
ret
add
add
inc
pop
mov
sub
mov
add
dec
lds
push
fcoms
lds
sti
test
pop
push
clc
jecxz
mov
pop
dec
loopne
sahf
cmovl
adc
jmp
jmp
and
inc
and
or
mov
subb
xchg
insl
inc
or
add
xchg
popf
lret
repz
mov
adc
cmc
mov
aas
popf
aaa
in
add
repnz
sti
mov
sahf
mov
mov
aas
adc
aad
jo
push
mov
mov
out
push
insb
add
les
jne
mov
adc
or
mov
sub
and
sarl
push
stos
jmp
aam
dec
add
cmp
andl
pusha
mov
inc
mov
jl
and
sti
mov
or
xchg
aaa
subl
leave
aam
mov
mov
idivl
int3
mov
sub
inc
movsl
popf
fistpll
push
pop
push
xorb
inc
call
sub
push
cli
scas
stc
push
cmpsl
movaps
jecxz
clc
fldenv
nop
inc
mov
cmpsb
jge,pt
cs
mov
pop
aad
mov
repnz
jnp
adc
and
scas
xchg
mov
mov
imul
out
dec
cltd
inc
outsb
popf
xlat
sbb
sub
adc
call
inc
jmp
cli
mov
call
and
sub
cmpsb
js
movsl
pop
sub
adc
jo
push
lahf
shrl
or
loop
xchg
in
pop
and
sahf
ljmp
mov
sub
imul
decl
hlt
insl
xchg
dec
call
jp
rcrb
in
fsubs
popa
daa
sbb
mov
das
cmpsl
adc
pop
adc
stos
pop
jbe
mov
scas
popa
push
push
loopne
and
imulb
jmp
aaa
popa
decb
scas
cmp
lea
hlt
jb
or
lret
jmp
in
cmp
cmp
inc
or
and
lods
mov
sbb
xor
xchg
jmp
mov
cmp
call
lcall
push
jb
repz
xchg
add
rcr
cmp
movb
add
and
mov
imul
mov
cmp
sbb
fwait
out
push
inc
mov
sarb
and
gs
xchg
sbb
stos
and
inc
jb
sub
out
mov
lods
insl
inc
lods
testb
jg
or
mov
inc
push
movsl
xor
mov
lock
mov
jge
test
add
push
call
or
dec
es
outsb
pop
out
popf
out
repnz
push
xchg
shr
dec
inc
inc
push
enter
rol
ja
add
cwtl
lods
and
es
out
mov
or
jmp
xor
xchg
aad
pop
mov
jge
add
adc
xor
add
xlat
daa
fsubl
stos
xchg
in
bound
and
iret
xchg
in
or
pop
hlt
adc
idivb
insl
xlat
add
push
mov
and
icebp
in
sub
jno
aad
test
cltd
inc
loope
inc
cmc
lock
aad
push
xor
data16
mov
rcrb
aaa
push
sub
jle
aam
sub
cmp
orl
jl
stc
orb
call
sub
inc
pop
pop
xchg
push
inc
cmc
notl
imul
lds
inc
call
sub
push
loopne
sub
xor
das
and
lret
pop
dec
mov
add
add
cmp
stc
int3
mov
push
sub
cltd
clc
xchg
jo
add
sbb
mov
mov
pop
add
inc
xor
lahf
pop
mov
call
pop
mov
arpl
push
sti
scas
jnp
lret
dec
into
jae
les
in
lret
pop
insb
mov
mov
xchg
pop
insb
add
mov
mov
or
mov
jae
push
add
and
push
call
adc
stos
mov
imul
jns
push
aam
sub
test
popf
stc
test
nop
pop
pusha
ret
pushf
push
mov
jge
jmp
push
inc
leave
fisubrs
mov
sub
fisubs
jg
in
push
stc
sub
imul
dec
adc
dec
scas
call
mov
mov
and
pushf
xchg
jge
bound
shrb
mov
pop
xchg
leave
repz
call
mov
pushf
mov
push
imulb
addl
xor
aaa
shrb
sahf
movsb
jecxz
ds
ljmp
decb
repnz
xchg
add
pushf
test
mov
push
mov
sbb
inc
insb
js
or
dec
jmp
test
cwtl
mov
sub
push
pusha
call
scas
leave
ret
stc
jne
inc
sbb
fidivrs
add
mov
dec
push
and
cmpb
sbbb
jo
adc
sti
jno
inc
outsb
shlb
call
icebp
push
sub
daa
pop
jle
sbb
push
add
ja
es
jo
xchg
pop
mov
or
std
push
jb
dec
add
leave
cmpsl
adc
lods
into
add
lret
inc
jmp
das
outsl
or
and
dec
xor
mov
cmp
call
les
jnp
das
jg
mov
movsb
mov
jg
stc
out
mov
push
movsl
push
mov
jecxz
sbb
and
xor
xchg
dec
call
mov
push
jmp
push
mov
or
xchg
lock
push
sub
jo
jmp
push
out
push
sub
repz
inc
cld
leave
stc
jbe
negl
inc
pop
xor
inc
loop
add
dec
lcall
stc
xor
inc
call
add
push
pop
out
xchg
imul
ret
outsb
fs
loope
mov
add
sub
adcb
punpckhbw
ja
mov
jne
push
add
mov
mov
nop
cmpsl
mov
push
and
mov
das
push
test
ret
mov
xchg
loop
or
icebp
xor
movsb
sbb
sarl
xor
in
pop
ret
fwait
pop
mov
and
sbb
arpl
xchg
int3
out
and
mov
xchg
and
cwtl
mov
adc
daa
out
or
mov
pusha
and
sbbb
jmp
push
push
xlat
scas
or
and
rorb
add
fdiv
jmp
lods
cs
inc
or
xlat
out
in
fmull
in
and
xor
addr16
cmp
sub
mov
mov
push
sub
pop
jmp
ficoml
call
xchg
mov
loopne
sbb
fstpl
or
stos
and
sti
mov
in
stos
xor
pushf
and
sahf
or
push
int
mov
push
adc
dec
ja
pop
push
push
stc
xchg
aad
xchg
mov
xor
sub
sbb
movsl
dec
push
cmp
mov
sbb
scas
sub
repnz
cmp
xchg
nop
loopne
or
in
std
insb
daa
add
jmp
mov
movsl
cmp
push
and
jb
mov
pop
jbe
dec
inc
repnz
ret
jne
testl
nop
jle
sub
loopne
dec
jno
dec
jmp
dec
sti
inc
push
shrl
popa
in
shr
cmp
call
mov
pop
jns
das
repz
push
add
lods
mov
mov
push
call
pop
int
adc
mov
fsubs
mov
mov
imul
and
xchg
stos
jg
jmp
mov
imul
mov
mov
mov
inc
loop
inc
stos
fisttpll
mov
cs
pop
outsb
mov
xchg
jne
jno
cli
dec
inc
pop
pop
pusha
push
popf
push
or
out
cs
lahf
daa
popa
and
fnstcw
inc
sbbl
dec
dec
and
pop
mov
jecxz
movsb
jne
idiv
adc
add
jo
out
orb
lods
repnz
pop
into
outsl
fistl
jo
cmp
mov
push
xor
cmpsl
and
fcomip
loop
out
jne
inc
push
push
add
mov
aam
icebp
push
mov
push
lds
mov
movsb
outsb
mov
cmp
adc
push
es
pop
hlt
mov
cwtl
add
das
rcrl
cld
dec
lods
push
push
add
inc
fidivl
xor
lret
push
rolb
ljmp
xor
test
adcl
jmp
enter
imul
and
outsl
test
cmpsl
push
fstpl
jmp
stos
fimull
push
mov
dec
cld
push
mov
aaa
add
and
test
les
movsl
adc
rorb
lods
imul
xchg
std
inc
std
and
pop
push
add
sub
aaa
fldl2e
std
dec
cmpsl
cmpsl
inc
sti
sbb
and
sarl
loope
sub
jae
push
push
mov
mov
push
popf
pop
in
mov
dec
jb
movsb
add
in
and
pushf
mov
pop
inc
jae
and
add
jge
and
popa
and
movsb
out
icebp
push
push
xchg
and
jno
leave
fcoml
sub
pop
in
mov
dec
pop
lock
pop
cmpsb
ret
pop
inc
loop
or
out
sub
pop
mov
mov
lret
or
xor
cwtl
push
std
xchg
push
hlt
stc
enter
mov
mov
xchg
in
mov
inc
push
pop
lahf
pusha
scas
enter
fsubr
das
jbe
pop
loop
pop
sub
cmp
dec
jno
pusha
cmpsb
cmp
aas
push
movsb
icebp
ja
mov
mov
or
cmc
imul
loope
jns
or
cli
push
int3
jmp
test
push
pop
and
pop
fbld
sub
adc
std
or
jmp
cwtl
jnp
sbb
adc
pop
pop
xor
adc
daa
call
mov
and
stos
loopne
sbb
icebp
pop
out
fbstp
ss
pop
pop
lret
pop
das
mov
cmp
fisubrl
jb
cld
call
les
xchg
outsb
mov
sti
or
in
jne
outsb
mov
data16
rolb
cltd
pop
mov
inc
sub
xchg
dec
and
repnz
dec
push
icebp
jle
lahf
add
mov
jl
scas
mov
jnp
push
stc
rclb
divb
out
sbb
adc
pop
jb
xlat
leave
or
inc
jmp
jnp
jmp
add
testb
call
outsl
pop
sub
mov
cmp
mov
jge
adc
xor
or
mov
xchg
and
scas
mov
sub
xchg
xor
cltd
mov
scas
adc
test
or
mov
pop
dec
ljmp
mov
sbb
sub
in
ret
mov
jecxz
xor
jb
cltd
popf
xchg
loopne
sub
leave
mov
jno
jnp
sub
or
add
sti
and
mov
pop
fistps
push
adc
cwtl
stos
ja
sbb
add
or
out
jae
dec
inc
push
push
mov
xor
push
pop
push
ret
xchg
fdivp
or
mov
xchg
xor
jb
mov
sub
mov
and
nop
lods
jge
sbb
jle
mov
loop
xor
mov
xor
or
pop
pushw
das
aaa
jg
and
dec
mov
dec
mov
shl
mov
movsb
push
lea
push
mov
xchg
repz
data16
sub
lcall
call
push
in
hlt
pop
dec
cli
testl
repz
xor
cmc
inc
dec
jbe
out
sub
sbb
push
mov
push
repz
mov
and
cmp
fcoms
mulps
insl
popf
mov
push
pop
decb
or
mov
push
imul
scas
fsub
sub
call
add
jge
push
push
int
mov
icebp
add
xchg
add
jbe
decb
jae
push
into
andl
push
gs
push
add
add
add
popa
xor
push
imul
add
sbb
sahf
in
lahf
xchg
or
jg
clc
gs
inc
movsl
insl
pushl
shrb
data16
dec
in
xlat
and
mov
push
fsubr
jge
loopne
pcmpgtd
test
jmp
fmuls
jns
add
push
push
loope
inc
pop
xchg
fstpt
dec
dec
mov
cmp
mov
mov
and
ss
and
mull
clc
cmp
pop
inc
push
repz
sub
rolb
or
out
sahf
mov
push
pop
test
addb
popf
out
pushf
popf
lcall
loopne
fwait
xchg
lods
cltd
nop
pusha
stc
sub
sbbb
pop
mov
dec
fbstp
mov
mov
daa
sbb
subb
lahf
jns
in
lcall
sub
test
adc
jbe
push
cmpsb
and
jmp
test
rcll
repnz
cmpsl
xor
add
sbb
mov
out
rclb
fidivs
nop
scas
stos
mov
call
mov
lods
jb
mov
add
lods
jmp
sub
repnz
jmp
fisttpll
jmp
jmp
add
jno
daa
es
or
daa
mov
or
jp
inc
stos
mov
push
push
jecxz
sub
xor
and
mov
xorb
repnz
cmp
push
dec
xor
push
push
adc
add
add
mov
mov
mov
sbb
stc
aaa
pop
inc
mov
cwtl
lret
mov
mov
or
adc
mov
fwait
das
daa
jo
sti
xor
fmul
cmc
add
mov
ljmp
shlb
repz
xor
fs
jnp
popa
es
adc
call
sub
ret
repnz
mov
cmpb
add
sbb
or
mov
mov
cs
push
pop
jmp
out
jo
mov
or
lods
inc
fcoms
leave
shll
pop
sbbb
das
lds
lcall
xor
adc
insb
pop
fisubl
ja
mov
jb
push
cld
pop
sbb
jb
mov
stc
scas
jge
pop
dec
inc
clc
sub
hlt
lahf
xorb
mov
adcl
jne
lret
push
jmp
cmc
add
xchg
ffreep
mov
push
ljmp
adc
adc
mov
daa
sbb
nop
xchg
hlt
adc
xchg
mov
repz
mov
aas
dec
cmp
lods
or
dec
xorps
mov
push
dec
cmp
push
sar
lods
outsl
imulb
insl
sub
pop
test
stc
shlb
imul
fsubrp
adc
in
jns
or
add
mov
and
and
out
xor
adc
nop
lahf
repz
hlt
das
mov
jecxz
push
inc
push
negb
daa
add
sub
pop
jbe
dec
lds
xor
test
adc
jl
and
jo
mov
std
dec
scas
mov
mov
icebp
stos
in
lahf
mov
mov
in
push
jmp
aaa
dec
mov
fisttps
pushf
out
icebp
pushf
fwait
jb
loop
jns
mov
ja
mov
and
add
mov
ss
rcr
stos
shll
fdivrs
add
stos
pop
mov
fwait
jno
movsl
push
dec
pop
pop
push
lods
xor
mov
ret
icebp
insb
xor
xchg
push
mov
data16
loop
add
lea
fwait
cmp
daa
or
arpl
or
inc
in
movsl
into
sbb
das
push
mov
jmp
out
sub
sub
push
repnz
pop
sti
adc
rcl
or
shll
inc
mov
sahf
lcall
add
mov
popa
ja
adc
push
or
mov
out
fs
push
inc
push
out
mov
roll
mov
mov
lods
ret
lock
inc
fwait
pop
lret
mov
adcb
sbb
and
bound
int
stos
out
mov
mov
out
mov
scas
adc
cld
pop
push
xchg
sub
or
sub
mov
lahf
insb
test
add
cmp
mov
repz
jmp
adc
popf
lahf
inc
addl
xlat
dec
xchg
dec
and
clc
cli
mov
les
jmp
addr16
sbb
push
xor
pusha
add
jno
insl
inc
or
fnstenv
fcompl
pop
jmp
jae
xchg
int3
adcl
aas
int3
xor
mov
or
mov
enter
pop
aaa
loop
and
in
lcall
icebp
xchg
pushl
pop
inc
dec
cmpsb
adc
stos
scas
test
cmp
in
and
fs
push
jecxz
mov
and
pushf
lods
xor
fsqrt
adc
scas
push
adc
add
jne
mov
cld
cmp
fldcw
adc
das
aad
jo
cli
xchg
into
inc
adcb
inc
mov
mov
xor
sbb
adc
mov
push
stc
addr16
xchg
fldenv
out
pop
les
push
ret
ret
jge
inc
aad
pop
sub
pop
repnz
cmp
fdivl
insl
in
sub
repnz
call
dec
add
or
jb
dec
pop
negb
dec
mov
inc
add
push
sbb
or
sti
sbbb
pushf
xlat
inc
push
pop
cmp
push
jb
fcoms
and
sbb
cmp
or
xchg
push
cmp
clc
xchg
cmp
das
sub
inc
mov
mov
mov
inc
mov
test
imul
add
fistps
loop
adcb
lcall
pop
imul
je
ljmp
aas
and
push
sub
push
pushf
cmpb
adc
push
push
mov
push
pop
movsb
xor
mov
ljmp
inc
cmpsb
orb
adc
jmp
outsb
mov
sti
push
xchg
sub
iret
sahf
aam
or
cltd
call
pop
in
inc
out
jg
sbb
scas
or
out
sti
mov
rorl
push
mov
push
push
movsl
cli
clc
dec
lea
adc
cmp
cltd
hlt
inc
inc
mov
cmpl
push
sbb
mov
jne
mov
inc
jo
dec
sub
dec
mov
inc
fistps
xor
insl
cmp
addr16
jmp
fisttps
cmpsb
push
pushl
xchg
lcall
or
or
sbb
movsb
mov
loopne
or
ljmp
or
add
jbe
add
pop
test
rclb
xor
dec
sub
or
ret
int3
adcb
dec
fisttps
mov
pushf
cmp
fiadds
call
sub
lock
test
sarl
adc
mov
stos
lahf
ja
push
xchg
mov
and
push
inc
push
push
loop
inc
lds
xchg
or
enter
mov
int3
int
mov
inc
stos
in
cs
sahf
jg
add
or
lods
out
ja
out
pop
push
mov
mov
or
div
or
insl
mov
mov
popf
add
outsl
xchg
rorl
out
lahf
pop
sbb
ret
jne
lock
daa
or
mov
xchg
fdivrs
loopne
inc
add
das
jb
xlat
stos
fwait
sarb
subb
aas
movsb
jb
mov
jo
dec
mov
cmp
jmp
jp
jbe
adcl
jb
inc
or
dec
mov
or
out
jae
mov
mov
mov
pop
xchg
dec
cwtl
loop
mov
mov
mov
xor
mov
and
push
mov
es
sti
std
mov
rclb
nop
sbb
jmp
rcll
inc
lcall
cmp
popa
fcomip
push
inc
mov
pop
jmp
mov
pop
cli
lock
mov
call
add
insl
add
call
push
cmp
repnz
rcrb
btr
fisttps
or
mov
popf
xchg
xorb
mov
dec
dec
dec
push
in
cwtl
mov
sti
add
push
jp
test
push
add
loop
mov
lcall
adc
pop
sbb
jl
lret
lea
mov
pusha
inc
cmp
pop
push
in
or
add
and
rolb
pop
xor
or
mov
mov
imul
stos
les
xlat
dec
aaa
mov
mov
push
push
jae
mov
mov
ja
in
dec
jg
popf
ret
mov
hlt
mov
mov
adc
divb
jae
jo
mov
cmc
jo
lcall
mov
dec
pop
cmp
in
and
add
fstpl
out
sbb
push
mov
xor
xchg
clc
rdmsr
mov
pop
call
je
imul
in
and
push
xor
fs
mov
clc
mov
bound
xor
push
cmc
cld
xchg
int3
rcrl
adc
or
scas
pop
pop
inc
add
push
jp
sbb
test
push
aaa
hlt
and
cmc
mov
call
xchg
mov
fistpll
ret
cmc
loope
pop
hlt
into
fdivs
add
lods
add
mov
fidivrs
ds
mov
xor
test
sub
lock
int
daa
loopne
mov
or
xor
jo
push
loopne
out
inc
and
jp
push
test
jp
fwait
sti
mov
iret
out
ljmp
notl
pop
aad
push
jecxz
aad
add
fdivl
xor
test
lret
or
js
ljmp
lods
imul
mov
mov
adc
push
lea
repz
daa
dec
cmp
loop
call
imul
cmp
leave
insb
xor
lahf
jae
icebp
mov
imul
jge
stos
mov
ret
call
movsl
shlb
mov
movsb
jl
mov
sti
testb
out
fs
ljmp
mov
or
jmp
cmpsl
push
sti
insb
dec
mov
arpl
lock
sbb
dec
in
xchg
and
repnz
push
imul
rcrb
call
pop
or
inc
adc
sbb
push
sti
push
mov
push
pop
repz
sbb
cld
aam
push
lret
pop
mov
pop
push
sub
pusha
loop
stc
jnp
sahf
aad
ret
add
mov
inc
ljmp
jae
icebp
or
jo
ret
bnd
outsl
sahf
and
clc
xor
sbb
adc
mov
pop
das
fldl
aaa
jmp
es
add
icebp
test
cmp
inc
call
adc
mov
pop
push
addr16
mov
jecxz
mov
sub
cmp
pop
jecxz
add
push
xor
das
aas
pop
outsb
push
lret
pusha
repz
out
xchg
push
inc
xorb
pop
mov
sbb
lret
dec
xchg
mov
pop
push
nop
adc
cmpsl
jl
mov
inc
xchg
push
negl
xchg
call
nop
push
mov
rorb
adc
or
dec
in
adc
mov
push
cltd
lds
mov
jno
mov
sub
pop
sub
mov
push
inc
test
jno
xor
lock
popf
pushf
loop
dec
out
lods
xor
call
popa
cmp
data16
aaa
inc
loope
add
aad
inc
movsb
jmp
cwtl
mov
cwtl
hlt
or
adc
mov
cmpsb
xlat
insl
jmp
sbb
shl
ret
mov
hlt
mov
sbb
mov
cmpsl
in
sbb
xchg
addr16
add
stos
and
sub
add
jge
mov
call
and
jp
in
cli
mov
call
push
add
push
adc
gs
orb
push
ficomps
in
mov
dec
pushf
pop
or
mov
jmp
jo
pop
push
pop
jmp
xor
xchg
js
test
jae
sbb
jge
rcll
jp
data16
es
rol
sbb
out
xchg
std
dec
into
int3
sub
lahf
stos
dec
movb
sti
or
sbb
xchg
pusha
adc
lock
int3
lret
imul
xchg
cli
xlat
das
out
in
add
sub
dec
imul
jg
inc
mov
out
call
jmp
enter
shlb
pop
idivb
and
lea
cmpl
sti
dec
mov
fbstp
fwait
imul
dec
movsl
ja
push
mov
enter
shl
aam
xchg
outsb
and
addb
xor
pop
jge
sub
mov
or
dec
outsl
out
stos
jo
leave
cmpsb
dec
mov
or
mov
or
je
xor
mov
push
xchg
rcl
mov
cmp
jo
and
adc
sub
div
decl
pop
cmpsl
test
inc
jnp
fbld
test
jmp
or
fstpl
cmpsl
mov
jmp
sub
or
mov
and
cs
jle
loop
cmp
in
aam
xchg
filds
adc
push
cld
dec
incb
mov
lea
stos
repnz
pop
pushl
pop
mov
dec
xor
mov
fs
adcb
hlt
adc
lret
mov
push
or
loopne
shlb
xchg
ficoml
cmp
fildll
sub
enter
jne
adc
mov
mov
jno
push
jecxz
xor
je
inc
jg
pop
xor
test
push
fbstp
mov
mov
out
imul
jno
mov
stc
jl
jp
stos
repnz
call
sbb
aam
daa
idivl
pop
jmp
mov
xchg
and
add
jmp
sarl
cmp
mov
lods
dec
jl
dec
test
mov
push
push
ljmp
push
imul
xor
pop
jo
and
mov
mov
cmp
addr16
jge
xchg
jl
dec
push
in
adcb
sti
loop
push
int
or
cmp
or
dec
pop
inc
push
push
in
jecxz
adcl
sar
clc
mov
mov
aam
or
and
mov
mov
ficoms
inc
inc
cli
aas
ljmp
out
pusha
ja
push
sub
mov
mov
dec
xor
mov
add
stos
aam
int
test
sbb
inc
mov
shrl
stc
xchg
mov
inc
outsb
add
js
adc
loopne
inc
jno
dec
or
ficompl
xlat
ja
imul
daa
fsubrs
loope
inc
mov
ret
push
inc
xchg
mov
push
sbb
repz
jp
nop
adc
xor
repnz
mov
xchg
push
cmp
adc
mov
outsb
jp
cwtl
mov
sub
pop
js
ror
into
movsb
xor
add
push
push
jle
add
pop
aad
pop
pop
js
xchg
mov
std
xchg
lds
mov
jb
es
fwait
mov
addb
and
add
cmp
inc
aaa
call
pop
fs
imul
into
das
sbb
addr16
bound
and
jl
call
pop
mov
sahf
mov
push
mov
mov
xorl
outsl
movsl
add
insb
jmp
xor
push
push
icebp
push
xchg
cmpb
sbb
inc
fists
pop
sbb
dec
inc
shrl
cmp
repnz
out
aaa
test
push
and
jno
xchg
rcrl
js
mov
push
or
stos
jg
dec
cld
mov
add
push
or
inc
and
jmp
push
cmpsb
icebp
jae
fildl
gs
mov
pop
out
inc
and
jae
push
arpl
cmp
sar
repz
push
mov
sub
add
inc
rorb
cmpsl
out
imulb
sbb
in
jnp
or
pop
rorl
sub
dec
aad
pop
jg
je
int3
add
jmp
cli
ss
movsb
jo
add
pop
mov
adc
mov
adc
call
xchg
lcall
jo
aad
push
adc
xor
and
imull
mov
mov
and
out
outsb
dec
xor
cld
push
mov
js
insl
cli
out
popf
and
repz
adc
xchg
sti
out
add
imull
test
mov
daa
out
loopne
cmpl
daa
mov
shrb
rcrl
popa
or
push
lods
inc
mov
inc
test
sub
or
jg
push
shlb
mov
xchg
loope
imul
in
cmc
dec
popa
lods
xor
stos
cmc
mov
in
orl
aad
mov
loopne
jne
je
lods
and
jl
test
add
ljmp
outsl
insl
movsb
pop
push
xor
icebp
icebp
adc
adc
out
push
les
das
mov
push
or
popf
lea
sbb
js
dec
push
adc
rclb
gs
dec
push
enter
lret
xor
pusha
sbb
pop
orb
push
sbb
push
cmpsl
cwtl
jbe
gs
push
pushf
lea
mov
pop
inc
cmp
shlb
clc
popa
sub
shrb
xor
ss
call
dec
inc
or
lret
notb
paddb
test
mov
add
push
cmc
es
or
iret
sub
mov
std
jno
int
push
jae
push
inc
sbb
push
cli
pop
inc
mov
add
xor
loop
je
scas
jge
mov
jo
jns
cwtl
push
std
or
mov
clc
loope
sar
mov
inc
cmpsb
cmpl
cmp
cmpsb
test
dec
xor
jp
jmp
adc
fstpl
cmp
f2xm1
jbe
insb
adc
js
mov
cmpsb
imul
push
fcoml
das
dec
scas
jg
dec
jmp
in
call
mov
sti
leave
sbb
mov
lock
mov
sarl
sub
inc
scas
int
jmp
in
fdivs
add
lahf
inc
xchg
stc
pop
dec
mov
lods
ljmp
push
out
cli
xchg
dec
adc
and
call
jmp
adc
das
mov
loop
popf
es
pop
call
push
mov
into
stos
inc
push
dec
mov
inc
stc
push
mov
icebp
add
jmp
pop
or
mov
inc
cmp
xor
mov
lods
and
or
mov
call
inc
cmpsb
xchg
mov
fisttpl
mov
ret
nop
adc
dec
lret
bound
mov
jo
mov
int3
outsl
or
ret
dec
push
lods
xor
test
lcall
nop
stc
mov
push
ret
pop
jo
mov
pushl
inc
ret
xchg
and
xor
mov
or
daa
inc
fmul
jns
jae
icebp
or
clc
jp
or
test
icebp
inc
test
and
push
add
cmp
stos
clc
arpl
mov
adc
mov
pop
pop
dec
inc
rorb
mov
inc
xchg
jno
sub
cmp
movsl
sbb
and
movsb
sbb
lahf
xlat
sbb
push
clc
popf
es
adc
or
push
std
dec
pop
mov
jns
mov
push
call
or
mov
xor
mov
out
mov
fsts
pop
jo
push
sub
rcr
push
mov
xchg
es
push
test
fiadds
push
into
xor
xor
xor
lods
push
test
lea
and
jecxz
xor
mov
mov
aas
scas
mov
ds
and
xor
call
and
js
sub
push
les
push
lret
add
stc
aaa
in
mov
aad
and
mov
mov
or
test
inc
mov
mov
mov
stc
lods
adc
and
rolb
fs
or
jne
mov
mov
ja
stc
jno
push
jp
jmp
lods
xchg
das
pop
push
cltd
sub
hlt
in
push
lea
mov
pop
and
test
push
aaa
adc
ret
loop
jmp
dec
std
jno
bound
mov
pop
inc
sub
cmp
adc
or
push
fists
add
pop
cwtl
movsl
push
in
sub
shlb
test
mov
ss
or
jp
pop
dec
and
insb
stos
xchg
push
aas
add
add
test
cltd
dec
loopne
jae
gs
aam
insl
inc
clc
cmp
jge
dec
mov
sbb
push
sbb
dec
jecxz
push
daa
jge
pop
call
sub
nop
mov
jno
call
push
jmp
pop
fdivrl
repz
push
xor
or
pop
mov
ja
fistps
mov
xchg
das
pop
mov
outsl
push
repnz
andl
aam
mov
pop
mov
icebp
ffree
push
in
in
dec
cmp
cwtl
rorb
cmp
out
mov
mov
xchg
xorb
adc
cmpsl
dec
push
xor
cmp
mov
push
add
cmp
dec
test
adc
clc
add
loopne
mov
mov
jmp
lds
and
pop
fcmovu
pop
mov
push
sbb
push
xchg
sub
sbb
or
pop
repnz
jmp
inc
fidivrl
call
fistps
cmc
repnz
lcall
dec
fstpl
dec
std
int3
sub
mov
fs
stos
sbb
cli
cmpb
inc
test
jl
jmp
mov
lds
push
dec
dec
push
pop
out
js
jmp
pop
push
cmp
lcall
pop
add
imul
pop
call
mov
mov
mov
sbb
cmc
mov
pop
sahf
pop
ret
fcompl
xchg
pop
stos
fdivs
out
mov
std
dec
iret
hlt
neg
rcl
cmp
inc
add
and
sub
jbe
or
adcl
xchg
pop
sbb
movsb
int
jecxz
dec
sarb
leave
in
enter
in
fwait
sbb
data16
test
mov
jo
jno
bnd
inc
xlat
inc
cmp
cwtl
aaa
mov
inc
out
aas
insl
cmc
dec
cli
fmuls
ljmp
jne
imul
int3
andb
cmc
jecxz
mov
test
mov
cli
cmp
fcompl
rorb
lahf
push
push
inc
jmp
jo
xlat
adc
cmc
jbe
push
mov
push
inc
jle
push
fistl
pop
out
inc
rol
mov
inc
sbbb
lods
mov
arpl
inc
mov
sbb
lahf
shlb
jnp
mov
ror
mov
test
lahf
mov
jle
pop
das
inc
call
std
imul
ljmp
ja
pslld
lret
ja
or
mov
add
call
push
xchg
push
adc
std
in
int3
xchg
jbe
jmp
dec
pusha
add
pop
call
cli
or
call
fs
hlt
jp
iret
jne
fnsave
cli
icebp
dec
sub
fsub
cmp
dec
call
sbb
push
jg
pop
bound
gs
das
xchg
inc
lahf
xor
dec
jno
call
sub
int3
dec
xchg
bnd
les
sub
lcall
rolb
fdivl
and
fmuls
lods
leave
lods
outsb
push
xchg
jp
push
ja
mov
and
mov
scas
mov
int
movsb
lods
xchg
mov
jb
pop
sub
fs
je
mov
mov
adc
daa
int
cmp
or
mov
push
hlt
cmp
push
pop
divl
pop
mov
or
outsl
lods
and
out
and
mov
push
sub
fsub
dec
movl
adc
or
dec
xor
mov
test
ret
pop
jmp
xchg
mov
mov
adc
xor
cltd
sub
sahf
int
sti
testb
sub
mov
sarb
enter
jp
xchg
pop
lds
dec
inc
cmp
or
push
cwtl
cli
icebp
dec
cmpsb
hlt
icebp
jmp
add
mov
inc
mov
fwait
push
ret
decb
jmp
dec
and
jecxz
xchg
adc
fdivr
aaa
jl
mov
jb
push
aad
jo
ljmp
vandpd
repnz
inc
in
mov
mov
aaa
xor
push
xor
mov
mov
push
dec
aaa
add
lahf
jno
call
daa
mov
inc
int3
je
pop
sbb
sub
popa
xchg
cld
cld
jmp
sub
push
aad
outsl
or
pop
clc
cltd
sarl
ljmp
enter
mov
or
or
inc
pushl
dec
rorb
mov
or
fdivrs
jecxz
pop
dec
aad
bnd
add
filds
or
cmpsl
aas
push
and
movsl
inc
jle
xchg
shr
cmp
adcb
leave
cmpsl
rcrb
mov
add
outsb
sbb
mov
push
imul
popa
adc
inc
push
or
inc
outsb
cs
enter
pop
shrl
adc
add
adc
call
xchg
mov
dec
movsl
cmp
inc
pop
push
jne
lahf
push
arpl
xchg
rcrb
push
insb
mov
mov
pop
pop
imul
xlat
data16
call
jmp
call
or
pop
mov
loop
aaa
das
pop
jmp
cmc
push
jl
sbb
mov
push
inc
jmp
add
mov
test
push
xor
jge
call
inc
pop
orl
jne
add
jbe
rorl
xor
int
addb
rclb
xchg
cmp
aad
adc
js
xchg
pop
sbb
cli
js
nop
inc
flds
lock
mov
jbe
out
addr16
xchg
addl
mov
pop
fimuls
leave
xor
clc
xchg
mov
mov
pop
aam
ja
sub
dec
or
add
or
inc
scas
adc
jmp
call
das
mov
rolb
sub
xor
add
aam
jo
sub
jmp
ss
or
mov
aas
mov
mov
mov
sub
xchg
decb
mov
push
sbb
or
mov
int
popa
outsl
add
jmp
aad
test
dec
mov
aad
jg
fildll
mov
int
adc
cmc
lret
imul
jbe
dec
mov
sub
idivb
test
jg
les
pop
jmp
or
mov
xchg
mov
jnp
jno
cmp
fmull
out
push
ret
mov
lea
out
adc
inc
sub
dec
sub
notb
jge
mov
test
out
fincstp
add
lock
xchg
movsb
lahf
adc
call
jecxz
adc
push
xchg
xor
imul
cmc
daa
mov
xorl
adc
and
dec
mulb
fisubrl
push
mov
popf
ret
push
int
popf
sub
fs
push
add
xor
adc
sbb
cltd
inc
inc
xchg
in
fcompl
dec
mov
das
nop
xor
incl
test
sub
insb
sbb
mov
loop
push
cmp
push
cli
mov
lret
mov
lods
xor
icebp
inc
push
aaa
test
add
mov
pop
out
jge
shlb
jl
xchg
sub
dec
rcrl
or
sbb
mov
add
fldcw
and
pop
fmuls
popa
lcall
pop
call
es
push
inc
nop
int3
sub
das
jmp
dec
dec
sbb
dec
repnz
and
cmpsl
hlt
icebp
cld
inc
dec
jbe
scas
cmp
ds
xchg
mov
daa
movsl
mov
pop
inc
mov
mov
xor
pushl
jl
adc
aas
or
pop
sar
loop
icebp
adc
xor
inc
sub
imul
xchg
pop
push
test
ret
es
icebp
sahf
and
in
add
shlw
pop
notl
mov
jmp
adc
test
mov
mov
in
cmp
mov
ja
or
out
fisubrs
pop
jecxz
jmp
dec
test
jge
jnp
jecxz
das
pop
push
shlb
pop
add
xor
add
and
xor
and
push
sarl
pop
inc
add
mov
cmp
jg
lods
xchg
mov
add
fucom
sahf
and
jo
jg
idivl
daa
xor
shlb
icebp
rclb
repnz
out
lea
dec
cmc
imull
sbb
fmuls
adc
push
jl
sub
scas
bound
call
sbb
dec
pop
je
gs
test
pop
dec
stc
ret
or
dec
inc
jmp
mov
dec
stc
inc
cmc
and
or
add
add
pop
fs
das
adc
inc
popa
dec
cli
imul
add
mov
xchg
pop
jns
outsl
xchg
jbe,pn
jmp
sahf
dec
ljmp
sti
jb
sti
sbb
mov
mov
dec
and
mov
cltd
and
pop
pop
push
mov
or
cli
lds
lods
lcall
lret
pop
fimuls
pop
sub
dec
xchg
jmp
inc
jmp
pop
xchg
ss
loopne
rclb
push
mov
push
dec
andb
mulps
repz
inc
les
pop
sub
call
into
mov
mov
push
stos
inc
mov
lock
cmpsb
dec
xchg
adc
call
jb
jmp
and
imull
and
sub
nop
sbb
mov
aam
dec
je
sub
mov
clc
pop
pop
call
es
stc
add
mov
stos
lea
adc
call
mov
push
or
jmp
xlat
out
popa
sahf
gs
pop
int
mov
and
xchg
les
push
imul
adc
jmp
jo
test
repz
jns
orl
adc
bound
jg
leave
clc
stc
push
lret
or
lods
popa
cmp
cmp
pop
jmp
cmpl
sbb
mov
mov
aam
sub
xchg
mov
call
cs
cmp
imul
inc
dec
roll
push
and
or
mov
cmp
or
or
or
shlb
cmp
js
cld
push
hlt
sbb
adc
shlb
pop
jmp
rcrb
sub
shlb
or
inc
or
mov
mov
mov
mov
movmskps
popa
dec
dec
test
mov
or
dec
pop
mov
inc
clc
and
movsb
add
aas
dec
fsubr
fldcw
mov
or
or
cld
cmp
cmp
ljmp
fnstcw
mul
imul
inc
mov
or
scas
add
hlt
mov
inc
lods
notl
cltd
xor
adc
lret
mov
lret
mov
int
out
sub
sbbb
inc
push
and
push
das
sti
push
add
xor
jl
mov
imul
icebp
push
push
adc
sub
pop
mov
mov
xor
inc
repnz
addb
icebp
std
call
xchg
cmc
jnp
jo
addb
test
js
xchg
test
xchg
icebp
cli
cmc
lods
int3
xchg
repz
orb
inc
mov
out
sub
sti
sbb
add
bound
cmpsl
mov
add
inc
in
aam
test
or
rcrl
popf
jge
or
leave
fs
fidivs
push
push
jo
nop
inc
sti
push
inc
inc
fldcw
mov
push
test
roll
mov
out
mov
mov
pop
pop
push
xor
add
call
sub
pop
and
sbb
stos
dec
mov
sub
add
mov
xchg
fstpl
sbb
cmpsl
jbe,pn
mov
pop
mov
adc
pop
call
jl
mov
dec
or
adc
mov
int3
xor
push
orb
lcall
cmpsw
mov
add
sbb
outsb
cld
pushf
test
xor
in
daa
daa
ficoml
jle
xchg
jbe
data16
ds
and
jne
xor
sti
sbb
jno
aas
pop
sbb
leave
push
in
or
loopne
addr16
repnz
adc
je
mov
mov
popa
cli
push
and
repnz
mov
daa
dec
jmp
mov
rorb
pop
jmp
fs
cmp
and
pop
call
jb
sub
fstpl
dec
push
mov
stos
testb
test
rep
and
es
jmp
sub
mov
pop
jb
mov
mov
xor
stos
fcoms
mov
pop
orb
enter
adc
inc
bound
in
hlt
mov
call
test
mov
leave
shrb
add
cmpsl
scas
call
call
or
scas
nop
dec
and
ja
adc
dec
lods
xor
int3
xor
add
push
push
mov
adc
adc
cmp
xchg
add
leave
push
stc
mov
jmp
int
push
dec
cmp
mov
aad
push
xchg
xchg
sub
add
test
cmc
shlb
and
pop
cmpsl
mov
or
push
inc
out
sbb
and
xor
gs
ljmp
mov
sub
adc
jae
cltd
popf
ja
pop
sub
inc
addr16
ficoml
mov
dec
out
or
jmp
cmpsb
push
cmc
xchg
ret
repz
fists
push
scas
jmp
push
push
out
mov
mov
js
cmp
mov
and
inc
mov
or
test
imul
cwtl
jo
in
aad
mov
cmp
imul
or
push
sbb
aad
mov
aad
or
inc
jne
mov
cmp
leave
mov
sub
jb
inc
xchg
test
gs
add
adc
xchg
sbb
mov
ja
xchg
dec
cltd
xor
imul
sbb
cmp
xchg
ja
enter
sbb
movl
in
mov
and
loop
out
enter
mov
aad
sbb
call
rclb
sbb
jl
lds
sbbb
sub
push
out
cwtl
data16
adc
dec
mov
sti
testl
pop
adc
in
stos
cltd
push
cmp
call
je
imul
cs
jl
sub
or
fstps
je
adc
and
pop
and
into
lods
adcb
in
inc
adc
fbstp
mov
icebp
cmp
in
or
lret
jmp
pop
xorl
push
sbb
or
cmp
add
and
xlat
pop
inc
popa
adc
shlb
addb
lods
push
repnz
inc
std
pop
test
mov
mov
push
mov
or
and
aam
sbb
mov
sbb
movsl
loop
icebp
into
or
ja
bound
mov
mov
mov
out
xlat
fs
push
sub
repnz
dec
sub
push
aad
loopne
or
enter
stos
stc
xchg
cwtl
dec
adc
rolb
inc
nop
das
adc
call
popf
neg
dec
rcll
popa
lea
orl
add
inc
dec
add
add
sbb
mov
pop
cmpsb
inc
int3
stos
mov
xor
sti
out
inc
out
xchg
push
les
sub
fucom
mov
push
and
cmp
mov
cmpsl
clc
mov
inc
cmc
push
mov
mov
bound
call
xchg
push
or
in
jae
pop
cmp
fistpl
pop
imul
ja
cmp
jle
jmp
add
mov
das
sbb
and
pushf
repnz
mov
fwait
dec
jne
sbb
and
dec
mov
or
jmp
or
repz
into
icebp
insl
xor
jmp
call
dec
adc
mov
jmp
out
dec
inc
mov
mov
fldcw
fadds
xor
test
lret
jmp
loopne
adc
push
pop
outsl
rclb
movsl
repz
call
adcb
loope
add
cmp
sub
mov
fldt
enter
push
jae
xchg
stos
xchg
xchg
xchg
jne
inc
xchg
push
xor
xchg
fbld
adc
dec
push
in
push
lret
loopne
test
in
mov
pop
or
pop
pushf
sub
loopne
jg
lock
daa
shrb
inc
jns
mov
mov
call
xor
sbb
lds
sub
and
mov
mov
out
add
mov
outsl
jbe
push
mov
lds
pop
adc
xor
add
sub
inc
push
mov
enter
jmp
bound
in
hlt
mov
shr
push
sub
fisttps
sbb
cld
aam
es
cmpsb
lcall
sub
enter
adcl
cmp
cmp
or
lock
push
inc
js
or
adc
jb
mov
and
mov
mov
xchg
imul
andb
xchg
out
cmp
jmp
cmp
mov
mov
int
mov
inc
call
jmp
jne
mov
imulb
stc
scas
pop
jns
sarl
mov
and
sahf
ret
xlat
jns
mov
mov
jo
outsb
pop
clc
adc
call
adc
push
out
inc
les
jg
and
jb
or
call
jne
aam
sub
movsb
push
mov
mov
jbe
daa
pop
mov
call
out
vpavgb
lahf
lret
mov
in
out
scas
pop
ss
add
inc
cmc
xlat
out
std
cs
jne
jbe
call
dec
dec
std
or
mov
mov
jl
inc
int3
movsb
sub
pop
mov
fidivrl
pusha
movsl
dec
and
sub
mov
mov
icebp
sahf
or
dec
call
mov
pop
mov
call
mov
fdivrs
outsl
movsb
jb
popa
aaa
repnz
xlat
ljmp
pop
xor
push
sub
add
adc
sbb
cltd
add
push
mov
loop
das
mov
call
in
jp
bound
sub
loop
push
and
jmp
dec
cmp
shlb
shlb
dec
cmpsb
dec
fisttpl
jo
vpsadbw
xor
inc
xor
or
hlt
test
pop
jo
jmp
mov
lods
loop
jl
xor
xor
mov
scas
lods
and
mov
inc
jnp
or
call
mov
mov
nop
inc
xchg
xchg
or
add
daa
mov
jg
es
xor
sbb
and
lret
js
adc
clc
mov
sbb
xchg
bound
gs
or
pop
ret
xlat
leave
out
enter
test
push
outsb
mov
push
cmp
aas
lods
std
int3
inc
xchg
scas
jnp
daa
jg
shlb
ja
mov
mov
push
cmp
test
pop
cltd
movsl
sti
mov
cmp
pop
mov
or
call
add
mov
or
out
into
in
orb
xor
mov
outsb
fsubl
lahf
fs
mov
push
sbbb
xor
jg
xchg
sbb
pop
inc
fistps
test
inc
mov
inc
push
push
in
das
outsb
push
dec
inc
stos
mov
push
test
cmc
or
lods
clc
mov
sub
outsb
pop
insb
test
fmuls
add
pusha
mov
jmp
sub
scas
inc
imul
xchg
in
andl
rol
pop
pop
lods
dec
daa
hlt
nop
ret
icebp
mov
inc
xor
test
pop
lea
sub
aad
jo
neg
repnz
inc
cmp
adc
push
sti
jp
jo
sahf
daa
insl
adc
cmc
adc
aad
call
rcrb
mov
push
xchg
mov
jno
pop
les
or
dec
movsl
adc
rolb
sub
divl
inc
cli
cmp
call
cmpl
push
inc
jl
adc
sub
ljmp
sbb
imul
jp
jg
push
cld
cmpsl
jmp
fdivr
ja
and
mov
push
sbb
pop
dec
out
or
and
sub
lahf
loopne
cltd
cmpsb
xchg
jo
test
int3
pop
xor
mov
outsl
dec
test
mov
sub
cmpsb
and
repz
adc
es
jecxz
repnz
dec
aam
and
sbb
flds
jle
pop
aad
mov
andb
int
sbb
jmp
push
sub
push
dec
cld
sti
cld
les
sbb
lcall
pop
hlt
mov
jmp
ret
adc
sti
or
rcrl
insb
xor
xor
xor
jl
fcmove
pop
fucom
adc
je
jo
cmp
xchg
adc
jle
or
stc
subl
clc
ret
mov
mov
in
cmpsb
jmp
jae
clc
pop
sbb
push
adc
inc
jmp
in
pop
lea
stc
pop
xchg
cmc
mov
mov
or
out
jne
and
movsb
mov
fs
sub
dec
cmp
loopne
in
repnz
pop
mov
dec
leave
popa
data16
inc
loopne
push
test
out
push
lret
or
inc
fldcw
pop
jo
pop
outsb
add
cmp
cs
and
std
xor
arpl
pushf
mov
mov
cmp
call
scas
and
jmp
xchg
xor
ja
cmp
cmp
fucom
stos
inc
cmp
jbe
popf
jge
fisubrs
mov
mov
jl
mov
jno
or
pusha
cmc
inc
pop
call
xchg
adc
and
dec
mov
push
mov
pop
xlat
in
xlat
sarl
jo
push
mov
xlat
mov
aaa
es
or
xchg
roll
jns
xor
push
loopne
dec
ljmp
xor
loop
ret
shll
pop
add
andb
fmull
je
lret
pop
dec
cmp
in
push
loopne
sbb
pop
jne
fmull
leave
je
push
imul
and
sub
nop
xor
push
dec
xchg
push
push
sub
push
scas
addl
cmpb
dec
jo
and
fsub
andl
sub
xchg
mov
ja
pusha
mov
out
gs
jge
popw
xor
jge
aad
insl
nop
jmp
mov
das
sub
mov
ljmp
jle
pop
mov
adc
ret
hlt
sub
inc
aam
cmp
ret
sbb
jmp
subb
push
arpl
or
xor
or
and
repnz
sub
or
dec
mov
imulb
jmp
aas
push
ds
cwtl
or
into
cmp
sti
pop
pop
cli
rorl
mov
dec
scas
jmp
jb
add
iret
xchg
or
add
push
xchg
nop
add
xlat
or
mov
sbb
bnd
call
push
lahf
mov
mov
dec
ja
inc
pop
mov
fsubrl
push
sbb
dec
push
push
jle
shr
dec
sub
andb
pop
mov
jp
fnstenv
movsl
ficoml
or
mov
adc
repnz
notb
jae
out
sbb
jmp
aas
mov
push
push
sbb
jmp
out
mov
addr16
pop
inc
into
outsl
cmp
cs
int3
mulb
inc
pop
mov
lret
add
cs
pop
xor
inc
cmp
or
loop
add
imull
lea
mov
sub
call
sti
rcrb
xchg
stc
icebp
push
mov
test
jne
pop
cmpb
xchg
int3
cmc
sub
push
int
and
pop
lret
js
stos
leave
or
gs
pop
call
dec
out
daa
jmp
adc
push
sub
mov
cwtl
mov
sbb
push
inc
mov
jb,pn
cmp
icebp
repnz
push
adc
jge
loope
out
sbb
inc
mov
mov
fwait
pop
xor
icebp
lahf
inc
fisttpll
fs
out
mov
xorb
jno
push
push
sbbb
nop
mov
call
cmc
or
mov
jl
pop
mov
dec
pusha
inc
jnp
mov
pop
call
hlt
or
jmp
out
add
dec
pop
jmp
fwait
jo
lds
stc
rcr
test
inc
ljmp
push
mov
mov
test
adc
int
xor
imul
jmp
call
sahf
out
jp
or
adc
les
sbb
jbe
jmp
dec
fidivrl
push
xor
xor
fxtract
aam
dec
cld
loopne
mov
dec
dec
je
jb
mov
not
insb
xchg
push
outsb
push
xchg
movsl
mov
mov
shlb
sub
pop
icebp
notl
loop
in
push
or
in
nop
jmp
lahf
dec
pop
mov
sti
repnz
pop
mov
std
and
jge
or
rorb
aad
sub
dec
jne
inc
and
loop
sub
add
sti
testl
and
push
jmp
ret
pop
fadds
ret
out
sub
pop
out
and
mov
adc
pop
jo
shll
maxps
and
sub
xor
xchg
dec
dec
pop
cwtl
divb
insb
cltd
ficoms
inc
and
icebp
call
lcall
sub
mov
push
cmp
cmc
or
negb
or
in
ret
gs
out
int
incb
push
test
dec
lahf
loope
mov
mov
inc
xchg
lret
call
inc
stc
pop
out
lret
sub
popf
push
mov
movsb
inc
inc
lds
add
in
daa
lea
cmpsb
dec
add
rol
cmc
test
mov
add
ja
or
xchg
sub
test
stc
icebp
aas
shll
divb
or
adc
push
add
sbbb
xchg
fldl
inc
pop
imul
inc
lea
test
mov
jmp
inc
jge
lcall
cli
aas
lret
pop
jo
mov
mov
pop
out
push
adc
fimull
xchg
ja
sbb
jl
mov
mov
dec
adc
cmovb
loopne
or
adc
mulb
inc
push
fdiv
sub
add
in
inc
add
inc
bound
sub
jo
dec
mov
sbb
mov
and
jne
jno
push
popa
xor
mov
inc
push
mov
sbb
mov
shr
pop
js
and
adc
pop
push
jmp
add
push
push
in
je
add
pop
adcl
xchg
js
hlt
test
xchg
push
lock
loope
cltd
cs
cli
pop
test
jmp
fists
cwtl
into
mov
jae
cmp
cmpsl
jb
scas
cli
ffree
sbb
sbb
mov
adc
call
mov
clc
xor
imull
std
xchg
mov
ja
leave
hlt
cmp
dec
dec
dec
or
or
lahf
adc
mov
cwtl
and
loop
addr16
inc
or
sub
adc
lahf
lahf
pop
insb
leave
pop
hlt
ret
pop
sub
in
dec
mov
jns
out
push
mov
icebp
sbb
xchg
mov
call
repnz
pop
xor
sbb
mov
inc
mov
mov
les
rcll
pop
sbb
into
mov
shrb
sahf
sarb
sbb
sbb
push
stos
jge
mov
mov
add
dec
xchg
lods
fildll
push
rcrb
add
cmpsb
push
enter
lock
mov
sahf
fnop
adc
push
sub
pop
or
jmp
or
not
repz
int
or
cmp
mov
mov
or
mov
cli
lods
mov
mov
in
or
orb
mov
call
push
aaa
mov
xlat
inc
notb
jno
inc
das
loopne
xlat
push
push
popf
scas
stos
push
sub
xchg
push
shll
adcl
push
stc
lods
mov
fidivrl
xor
lea
ret
das
push
int
and
das
add
outsb
lock
call
pop
jae
test
and
mov
mov
test
sbb
imul
int
xor
mov
stos
cmp
imul
pusha
scas
jae
push
push
adc
test
mov
pop
pop
mov
sbb
xor
cmpsl
mov
jbe
cmp
icebp
pop
push
repz
adc
lea
lahf
enter
add
popa
in
shrl
push
pushf
push
mov
insb
or
shl
mov
std
mov
jle
jno
iret
in
xchg
faddl
add
push
int
aas
xor
test
dec
xchg
ds
mov
daa
fcoml
testb
mov
dec
or
test
xlat
shlb
or
push
test
cmovb
pusha
enter
test
push
mov
negb
xchg
push
loope
repz
xchg
outsb
xor
mov
pop
jge
lcall
pop
dec
cmc
xchg
xor
jo
jne
je
pusha
mov
repnz
cmp
pop
call
lahf
mov
lret
shr
jmp
push
sub
fs
cmp
adc
jmp
add
test
xchg
or
jns
adc
out
ficoms
das
loop
and
pusha
mov
lahf
jmp
sub
pop
fsubr
into
jno
ja
lcall
sub
lods
mov
jns
jno
int
shrb
jbe
add
mov
pop
inc
dec
jns
movsl
inc
icebp
jns
cli
pop
push
mov
pop
and
inc
mov
and
shrb
stos
ret
rcll
ret
arpl
adcb
daa
loopne
xchg
popf
fistps
sarb
imul
jge
aaa
mov
push
xor
inc
push
mov
push
stos
cltd
push
mov
sub
pop
and
ja
or
xor
in
xchg
and
xor
and
std
push
jecxz
addb
or
or
mov
sahf
jno
dec
cmp
fstp
and
daa
pop
add
in
inc
ret
jmp
add
push
sti
mov
and
std
push
pop
dec
rclb
mov
fcompl
push
cmp
aaa
xchg
jb
xchg
mov
clc
adc
jge
mulps
pop
fisubs
mov
subb
sbb
sti
adc
mov
sbb
cmp
lret
fildll
sbb
jbe
das
push
repz
into
mull
fdivrs
lcall
icebp
xor
push
repnz
jp
jge
sub
repnz
push
jmp
xchg
aam
out
daa
stos
pop
in
push
or
push
stos
movsb
jmp
jmp
rclb
or
arpl
dec
aam
aaa
xor
push
aam
push
pop
push
mov
into
xorb
or
jl
push
mov
test
incb
xor
add
or
push
fldt
xchg
inc
call
stc
pop
mov
loop
scas
cmpsb
insb
or
xchg
pop
in
mov
test
pop
adc
jb
loop
add
mov
shr
pop
xchg
shlb
loopne
inc
imul
cltd
cltd
push
xchg
xor
xor
inc
shrb
jns
and
mov
or
or
mov
xchg
in
cmpl
mov
sbb
mov
mov
gs
mov
xchg
aam
cwtl
dec
jp
cmp
mov
lahf
into
jnp
mov
pusha
mov
cltd
loopne
sub
adc
das
fs
push
mov
jo
mov
mov
inc
ljmp
inc
pop
movsb
sub
sub
out
dec
jno
daa
clc
add
test
inc
lcall
push
shl
jnp
pop
cwtl
lahf
jnp
xchg
jp
sti
sub
imul
hlt
call
add
ret
mov
xorb
pop
mov
mov
jecxz
xor
cmc
sbb
add
mov
stos
sahf
daa
or
xchg
mov
cmp
sub
mov
dec
ss
pop
jb
int
in
cmpsl
mov
inc
mov
lahf
loope
adcb
or
cmp
jne
insl
or
jp,pn
xchg
jbe
lea
call
xchg
andb
and
push
mov
cmp
jb
dec
jg
arpl
xor
xlat
shl
jmp
sub
or
jmp
adc
jmp
xchg
jg
mov
inc
jmp
jp
enter
insb
arpl
call
test
repnz
jbe
scas
pop
or
inc
xor
mov
inc
mov
xchg
je
mov
test
inc
pop
stc
shrl
sub
das
push
imul
scas
pop
je
push
xchg
mov
outsb
xchg
mov
or
cwtl
push
adc
mov
inc
popa
addb
jno
sub
inc
mov
lods
and
inc
xor
aam
mov
xor
fcomp
insl
lea
addb
pop
push
jmp
cmpsb
enter
mov
mov
scas
shll
pop
cltd
cmpl
mov
cs
lock
xchg
shlb
adc
enter
mov
in
or
lods
cvtpi2ps
call
push
push
or
ficompl
popf
mov
nop
mov
push
cmp
mov
call
cmc
xchg
fs
popa
ljmp
repz
dec
leave
mov
push
xchg
lret
outsl
stos
enter
stos
fistpl
add
inc
push
xchg
fistps
cld
cltd
sub
xor
pop
push
add
data16
mov
faddp
rcr
fstl
xor
mov
imul
call
stos
mov
das
ret
sbb
int
or
or
jno
mov
inc
insb
lret
push
pusha
add
mov
scas
and
add
xor
std
scas
jo
sbb
iret
rolb
or
mov
push
out
fdivs
fstpt
mov
jnp
jmp
sahf
jmp
or
ljmp
jmp
pushf
and
jb
jo
into
lahf
mov
sahf
clc
repz
icebp
pop
sbb
push
adc
xchg
dec
test
mov
xor
add
loop
add
jp
cmp
shll
push
subb
cwtl
mov
mov
push
and
sahf
data16
mov
mov
orb
inc
imul
addr16
imul
push
push
mov
dec
and
negl
add
in
adc
lret
sub
lock
idivb
negl
mov
xorb
push
inc
rolb
aas
add
and
sub
inc
adc
or
es
adc
add
sahf
dec
stos
mov
or
repnz
movsb
repnz
ret
rorl
inc
jge
inc
jl
xchg
and
fwait
xchg
push
subb
js
xchg
cmp
or
clc
lahf
aam
dec
pop
push
orl
push
cmp
pop
or
add
mov
mov
and
dec
sar
adc
xchg
cmpsl
cmp
inc
test
inc
imulb
lods
ficoms
ljmp
fiadds
cwtl
je
std
dec
repz
push
int3
movsl
dec
sti
mov
push
fwait
push
add
jmp
cs
cli
sub
mov
call
and
jns
dec
bound
push
adc
mov
outsb
fadds
sbb
cmp
sub
sbb
test
dec
jb
push
dec
jmp
push
xor
pop
adc
imul
adc
dec
and
push
pop
jl
adc
imul
dec
int
inc
decl
sbb
push
xor
mov
inc
cmpsl
sbb
sub
cmp
or
and
adc
dec
je
adc
std
sub
pop
add
jge
stos
shlb
ret
adc
push
in
stc
testl
movsb
mov
jecxz
dec
mov
inc
cli
pusha
repnz
xchg
mov
jecxz
pop
mov
mov
cmpsb
mov
xchg
dec
imul
jae
push
push
sub
xchg
cwtl
xlat
mulb
divl
push
mov
call
push
sbb
test
pandn
mov
mov
xor
and
popa
pop
call
int
jo
stos
cwtl
fdivs
mov
jecxz
mov
push
stos
int3
sub
mov
sarb
sarl
dec
push
mov
lret
adc
mov
cmpsb
scas
int3
pop
in
inc
cmp
scas
clc
xor
scas
cmp
fdivl
das
mov
jp
popf
into
mov
addr16
or
cmpsb
sub
adc
data16
aaa
icebp
and
xchg
push
inc
add
mov
cmp
fcomps
sbb
xchg
divb
test
dec
movl
mov
pop
and
xor
mov
pop
jnp
addl
repnz
or
mov
addr16
arpl
shlb
call
mov
cmpl
mov
pop
or
lahf
repz
fmull
and
sbb
insb
adc
sub
filds
push
mov
lock
daa
cmpsb
add
rolb
sub
icebp
pop
aaa
cmpb
xor
imul
push
stc
jge
enter
sub
add
mov
mov
cwtl
adc
fisubl
rcll
pop
gs
mov
jmp
ljmp
cmp
and
test
nop
scas
sbb
imul
dec
in
xor
inc
inc
test
ret
ljmp
lret
sbb
pop
add
mov
hlt
int
cmpsb
loop
ret
daa
insl
bnd
xchg
fdivrs
test
pushf
data16
add
addr16
ss
inc
mov
pop
jb
iret
js
idivl
addr16
pop
repnz
lds
mov
push
inc
rcrb
cmp
fldl2e
or
adc
xchg
push
cmc
adc
jmp
mov
sti
pop
or
pop
mov
mov
fidivs
push
rorb
xchg
clc
push
repnz
cmp
idivl
clc
hlt
inc
shrb
xor
jmp
test
jo
outsb
out
xchg
mov
push
xchg
mov
jle
push
rep
mov
jge
mov
xchg
mov
inc
jnp
fs
sub
out
int
out
shlb
pop
fs
shr
push
xlat
lods
notb
sahf
add
out
sbb
stc
inc
push
push
cmpsb
add
push
mov
ficompl
jne
jb
pusha
das
out
and
movsb
mov
clc
je
mov
dec
mov
jmp
mov
mov
call
pop
mov
stos
xchg
nop
and
loopne
adc
call
xor
mov
sub
jmp
or
pop
inc
ds
mov
push
cmpsl
bound
mov
xor
cmpsl
call
test
dec
bound
or
cmp
inc
andb
ret
addr16
sarb
mov
movsb
mov
mov
xchg
jl
dec
sbb
in
inc
push
cmc
or
jne
sub
rolb
roll
xchg
mov
bnd
ss
call
std
cli
hlt
dec
insb
pop
lock
push
dec
shrb
push
call
mov
fucomp
pop
sub
fisubrl
pop
rorl
lahf
jmp
roll
xor
or
repnz
and
push
pop
xor
inc
mov
and
or
dec
adc
and
movsl
jnp
add
and
pop
lahf
enter
and
push
pop
inc
and
inc
dec
jno
push
je
mov
mov
aam
jb
sbb
add
test
adc
test
into
adc
imul
jb
mov
jns
cwtl
and
push
das
pusha
mov
dec
mov
roll
xor
scas
mov
das
ss
pop
ljmp
test
repnz
dec
mov
sub
repnz
sbb
mov
mov
sarb
lret
pop
pop
xor
shlb
repnz
lods
add
push
cmp
loope,pt
std
out
add
jmp
jb
cmp
in
loopne
popf
in
push
add
fldenv
xchg
sbb
push
push
subl
aad
mov
xchg
mov
mov
call
outsb
inc
outsb
cvtps2pi
sbb
scas
clc
pop
cmpsl
xor
mov
push
xor
xor
pop
add
pop
outsb
dec
add
inc
push
dec
dec
popa
inc
int
adc
add
inc
xor
jp
xchg
cli
popf
and
adc
mov
inc
jmp
mov
clc
mov
sub
dec
out
xor
repnz
fisttpl
pop
in
repnz
sub
cmp
sub
and
or
addb
outsb
push
push
call
sti
insb
bound
js
hlt
aad
dec
dec
fnsave
mov
aaa
stc
shll
mov
daa
xor
jg
call
push
mov
dec
cmc
cmp
orb
in
ss
in
int3
in
pop
icebp
mov
mov
pop
fwait
jno
scas
sbb
cmp
cmp
inc
inc
push
push
fwait
inc
leave
or
stos
jg
cmp
stos
rcrl
add
aad
xor
flds
and
loop
push
push
into
call
mov
push
inc
adc
lock
cmp
and
imull
add
push
push
ds
inc
stc
or
jmp
repnz
imul
ffree
xchg
shr
ret
aad
mov
pop
push
push
loopne
jg
pop
insb
mov
icebp
mov
add
mov
push
or
push
xchg
sub
stos
mov
add
dec
or
icebp
movsb
mov
fstl
jne
sti
addr16
nop
cmpl
push
mov
dec
iret
push
fnstenv
mov
adcb
mov
lcall
in
int3
sbb
dec
dec
mov
arpl
ffree
dec
or
out
mov
push
nop
or
lock
pop
sbb
imul
das
cltd
lcall
fsubrs
jle
and
popf
cwtl
fidivs
dec
nop
jno
mov
dec
xchg
outsb
mov
das
call
mov
xor
or
lret
lret
shrb
mov
mov
dec
pop
out
rcrl
mov
sbb
xchg
inc
cmpsb
sbb
pop
lret
jae
fstl
cmp
dec
shrl
lea
xchg
mov
dec
movsb
pusha
pop
xchg
dec
xchg
add
dec
and
pop
and
or
mov
push
xchg
std
and
ret
es
fisttpll
or
push
mov
out
push
pop
fsts
fsubrp
mov
mov
clc
mov
mov
add
call
adc
push
mov
xor
out
rcrb
dec
ret
sub
subl
fsts
xor
insl
add
scas
xor
or
fsubr
sbb
les
loopne
std
pop
cmp
fwait
sbb
pop
push
mov
iret
hlt
mov
xor
ja
dec
jbe
jae
cltd
jae
and
lea
mov
xor
jnp,pt
sub
push
rcrb
js
and
cmp
pop
jp
mov
adc
repnz
imul
call
popf
imul
pop
adc
mov
sub
mov
mov
mov
rcll
outsb
cmp
push
inc
cmpsl
sahf
cmp
push
stc
mov
inc
xor
inc
mov
shlb
mov
jb
ret
cmp
inc
mov
add
repnz
xchg
inc
and
mov
xchg
out
and
push
in
loope
jne
out
hlt
stos
add
shll
mov
out
mov
das
pop
mov
sbb
inc
cmpsl
stos
cmp
mov
sub
insb
cmpsl
cltd
xchg
ret
aas
add
mov
sub
cmc
adcb
lea
or
call
pop
and
adc
lret
jle
xor
ja
add
adc
inc
mov
sbb
lods
pop
add
out
adc
add
std
repnz
cli
mov
sub
fidivl
scas
push
cmp
cmp
clc
shlb
inc
pop
in
orb
fidivs
mov
mov
sub
dec
divb
or
mov
add
xchg
add
push
aad
fs
mov
lahf
sub
pop
mov
aad
mov
or
repnz
adc
shll
or
push
fidivl
add
ss
insb
add
cwtl
call
xchg
addr16
dec
or
inc
test
push
mov
lock
and
push
mov
jge
mov
adc
mov
sub
and
jp
shll
jbe
loop
pop
mov
repnz
cmpb
outsb
mov
divl
bound
pop
stc
pusha
push
jae
test
imul
rorb
imul
and
filds
lock
out
inc
mov
in
mov
stos
mov
bound
xor
cwtl
fcmovne
inc
inc
mov
clc
mov
lods
jb
int
int3
adc
add
xlat
push
mov
adc
fs
cmp
subl
das
dec
stc
and
inc
outsb
dec
les
cld
incb
mov
dec
jmp
nop
es
mov
add
adc
mov
daa
mov
push
inc
dec
pop
fisubrs
leave
fmull
fxch
mov
jmp
jbe
cmpsl
adc
adc
sbb
call
mov
div
pop
lods
dec
pop
lods
cmc
in
inc
push
or
push
jle
test
xchg
fdivp
scas
mov
or
test
repnz
shr
dec
jmp
nop
xor
je
jo
push
mov
push
inc
loop
das
and
sbb
test
icebp
add
faddl
enter
dec
ljmp
and
in
xor
xchg
jo
adc
adc
fimuls
scas
pop
pop
leave
mov
cs
leave
xlat
dec
pop
bound
add
push
and
mov
insb
mov
push
dec
insl
clc
push
cmc
das
dec
stos
test
stos
jo
inc
push
cmp
lods
fdivs
jge
jb
fnstcw
push
call
fisttpll
ja
lcall
adc
mov
mov
enter
daa
stos
push
insl
pop
popa
pop
repnz
inc
or
cs
push
ret
jno
mov
in
scas
fs
or
dec
jge
jle
dec
call
test
rclb
out
sub
and
jge
mov
cwtl
mov
in
or
xchg
sub
out
test
mov
roll
mov
push
bound
inc
mov
lcall
push
sub
adc
mov
hlt
dec
js
sub
ret
and
negl
add
sbb
std
clc
pop
sub
xor
stos
ret
sub
int3
inc
aam
in
jbe
into
daa
scas
test
enter
jmp
jg
xchg
jecxz
fistpll
pop
popa
push
adc
jbe
mov
cmpsb
or
lock
mov
dec
stc
push
movsl
sbb
adc
sbb
aaa
inc
lahf
popf
daa
mov
nop
movsl
inc
popf
ret
aad
fs
call
in
lret
dec
jo
icebp
adc
sub
jp
das
inc
mov
mov
popa
mov
lock
dec
pop
mov
lcall
rorl
in
mov
rclb
jg
and
mov
das
shlb
loope
cmp
push
pop
xchg
out
repnz
push
sub
dec
mov
add
ds
xchg
ljmp
adc
inc
mov
out
mov
pop
imul
inc
xor
or
and
push
jns
sysexit
sbb
adc
dec
pop
in
orb
stos
mov
andb
xor
gs
or
mov
sti
jno
sub
inc
stos
mov
pop
mov
adc
nop
leave
push
test
mov
sar
pop
xchg
pop
sbb
push
jmp
rol
popa
mov
loop
cmpb
add
repnz
pop
cmpsl
mov
mov
inc
test
pop
test
mov
dec
daa
mov
repnz
incl
pop
push
mov
int
or
fistps
adc
cmpb
mov
or
pop
jns
mov
dec
add
push
mov
dec
dec
pusha
repnz
insl
xor
shrb
dec
cmp
orb
leave
pop
addr16
mov
sarb
sbb
call
push
jnp
or
dec
xorl
cmp
loop
jno
call
sti
outsl
aas
loopne
xor
pop
sbb
dec
inc
push
mov
pop
sbb
mov
in
inc
stos
mov
popf
out
mov
ret
shll
or
cltd
jae
shrl
hlt
ror
xchg
stc
fistps
xor
inc
lcall
and
stos
inc
fists
outsl
and
test
in
std
cltd
jo
add
das
jno
sub
push
and
lret
repnz
pop
movsl
or
push
jmp
adc
sbb
loop
mov
adc
loop
cwtl
iret
xchg
pop
out
mov
add
xlat
push
lahf
call
inc
xor
jle
push
pop
push
cmp
testb
sbb
cmp
iret
movsb
test
jbe
mov
mov
jnp
ret
inc
jbe
test
daa
push
and
push
adc
cmpsl
notb
inc
stos
xchg
mov
leave
sub
jge
mov
ret
xchg
lods
pop
cmp
call
xorl
jmp
sbb
pop
lods
mov
mov
add
mov
pop
xchg
cmp
mov
stos
mov
mov
sbb
icebp
mov
xchg
jl
push
mov
mulb
lea
cmpsl
xchg
stos
mov
push
cmp
dec
mov
sub
out
dec
clc
xor
adcl
dec
cmp
mov
dec
dec
dec
call
daa
addb
adc
ret
add
mov
orb
sub
mov
shll
mov
inc
jge
adc
cltd
outsb
pop
and
out
pop
pop
xor
jmp
lock
shlb
subl
cmp
or
call
scas
adc
adc
dec
mov
mov
pop
cmc
mov
cli
scas
das
dec
jecxz
enter
or
in
mov
mov
in
int
out
mov
fnstcw
ja
sub
and
adc
cmpsl
cmpsl
jnp
lcall
cmpb
mov
push
mov
cmpsl
xchg
adc
or
jbe
cmp
xchg
cmpsl
and
je
push
add
popa
je
lock
sbb
pop
call
add
sarb
pop
jo
mov
push
stc
cmp
mov
inc
les
shlb
add
sub
mov
ret
dec
xor
in
push
leave
xor
ljmp
pusha
xchg
sub
sarl
xor
mov
in
jmp
add
negl
into
lret
enter
pop
push
sbb
push
adc
and
out
leave
jo
and
inc
pop
jo
jmp
push
jnp
js
arpl
mov
dec
xor
add
cmp
ss
hlt
dec
imull
jmp
pop
scas
add
ret
add
shll
stos
sub
add
and
movsl
or
outsl
fsubs
loope
imul
gs
or
pushf
in
sarl
sub
and
xchg
or
inc
shr
and
aam
pop
pop
loop
pop
loope
notl
leave
mov
xchg
mov
add
add
add
call
sub
or
ds
xchg
je
push
rcll
mov
and
mov
xchg
mov
cli
repnz
cwtl
hlt
sti
repnz
stos
lret
jle
adc
adcb
mov
js
xor
leave
or
aad
sarl
inc
or
inc
push
mov
fistpl
inc
jp
jo
js
mov
adc
xchg
std
out
pop
inc
mov
add
or
jmp
push
xor
xlat
aad
lods
mov
jo
inc
or
push
andl
adc
jge
and
dec
add
sbb
jnp
pop
push
inc
xchg
pop
lock
inc
jmp
test
ljmp
fists
inc
test
das
ja
insl
pusha
mov
jbe
add
ljmp
ror
dec
std
mov
repnz
inc
xor
sahf
sbb
pop
inc
test
pop
fisttps
xorb
insb
xor
jp
fisubl
shr
jp
xor
cmpsb
sbb
fucomip
xor
push
hlt
paddd
push
pushf
outsl
mov
jno
sbb
push
push
sbb
stc
cld
aaa
test
and
clc
push
bnd
sub
xchg
leave
push
repz
pop
sbb
dec
adc
clc
inc
repnz
and
test
movsb
rclb
ficompl
out
gs
and
scas
mov
mov
jge
push
and
andb
icebp
push
imul
nop
pop
mov
dec
out
sub
js
mov
fists
fcoms
inc
dec
sub
clc
jns
xor
fstps
addl
test
add
mov
repnz
push
mov
dec
add
scas
int
test
dec
xchg
dec
sbb
xlat
mov
addr16
and
test
jnp
pop
mov
mov
inc
push
add
jbe
sbb
int3
mov
js
cltd
and
and
test
mov
jle
xor
fdiv
dec
pop
fildl
adc
mov
icebp
and
mov
ret
mov
mov
dec
or
cmpsl
les
loop
ds
push
loope
cmpsb
scas
fnstcw
adc
push
inc
adc
repnz
loopne
shlb
adc
push
mov
nop
jecxz
jns
enter
sbb
sub
inc
mov
out
adc
outsb
cmpsb
sbb
repnz
pop
push
cld
orb
out
jb
dec
push
xor
and
cmpsl
stc
in
cwtl
scas
mov
rolb
das
test
lret
jl
jp
pop
arpl
dec
inc
lods
jge
add
loopne
jp
push
ret
mov
xlat
rolb
fsubrs
inc
and
inc
movsb
les
cld
test
loopne
fsub
inc
das
sbb
lock
xchg
xchg
jge
dec
sub
sbb
mov
cmp
lcall
add
and
dec
add
push
or
fdiv
shll
lock
adc
xchg
push
cltd
dec
inc
mov
and
sbb
push
rcl
and
andl
xor
add
push
subb
jp
sbb
les
icebp
jns
pop
mov
xor
js
out
jb
mov
xchg
push
fmull
adc
inc
orl
inc
dec
sbb
jbe
rcl
add
mov
ret
les
cmc
add
xchg
mov
jns
inc
pop
test
add
bound
je
int3
add
mov
and
or
push
add
push
mov
movsb
fadds
repz
adc
repz
aam
cli
in
test
ljmp
enter
xchg
add
movsb
pop
xor
sbb
mov
cmp
lods
mov
xor
mov
and
dec
inc
add
outsb
mov
pop
inc
sbb
arpl
add
hlt
xchg
aad
sbb
xor
outsb
mov
pop
mov
push
repnz
lock
sub
add
lret
enter
or
mov
sbb
mov
in
push
stos
lret
push
loop
dec
mov
dec
sbb
divb
sbb
lock
rcll
add
out
and
loopne
decl
test
insb
sbb
xor
and
mov
clc
pop
cmp
iret
popf
xchg
dec
mov
push
mov
loopne
jecxz
pop
dec
loop
push
inc
xchg
icebp
mov
test
or
fsubr
filds
mov
dec
xor
testb
xchg
call
push
xor
pcmpgtb
ljmp
lret
sbbb
or
rcrb
or
data16
mov
pop
mov
or
inc
scas
sbb
sub
call
call
add
pusha
dec
dec
repnz
lret
cwtl
lret
pushf
and
mov
mov
leave
dec
das
mov
adc
push
rolb
dec
mov
cmp
jno
mov
dec
mov
cld
cmp
add
ret
dec
jne
pop
sub
adc
push
out
rolb
and
inc
sbb
pmaxub
dec
push
test
loope
adc
dec
test
aam
sbb
mov
fdivl
mov
sbb
add
icebp
lcall
fbstp
dec
je
repnz
mov
sub
lock
xchg
xlat
jle
xor
and
mov
dec
addl
and
sbb
xor
jmp
or
inc
adcb
add
icebp
mov
rolb
out
mov
ss
dec
and
xor
mov
pop
mov
addr16
leave
mov
loope
dec
into
mov
dec
test
jo
fbstp
dec
in
pop
push
mov
jo
fisttpl
dec
leave
mov
fldcw
jnp
insb
xor
sub
enter
hlt
push
js
mov
scas
mov
adc
pop
fisubs
sbb
jno
test
push
popf
pusha
push
xchg
je
stos
push
jno
in
cwtl
mov
lods
and
shl
push
dec
or
sbb
imul
ljmp
loop
cltd
aas
lcall
scas
pop
add
and
rcll
fwait
je
ja
fists
scas
test
aas
mov
pop
push
fs
xor
out
les
add
inc
es
in
xchg
and
rolb
mov
int3
dec
xchg
push
xlat
dec
loope
dec
pop
mov
mov
adc
adc
loopne
mov
cwtl
fs
rolb
ss
add
jae
jo
andl
hlt
out
push
gs
dec
adc
ss
adc
and
jg
dec
xor
xchg
mov
cld
icebp
and
xor
icebp
aas
sbb
pop
and
push
aam
mov
or
pop
lcall
mov
dec
das
cmp
mov
push
mov
or
repnz
mov
mov
nop
mov
movl
movsb
nop
fmuls
fists
cmpsl
pop
lcall
xor
jle
les
sbb
mov
mov
repz
mov
sbb
scas
add
repz
mov
movsb
lock
imul
loopne
repnz
dec
adc
mov
stos
cs
je
loop
pop
repnz
fstl
jecxz
or
push
xchg
mov
push
ss
pop
xor
lahf
sbb
add
sub
push
push
fiadds
or
push
and
sub
adc
test
inc
loop
and
xchg
scas
and
jbe
out
xorb
rorl
mov
mov
mov
cmp
je
xchg
sub
push
and
popl
inc
jmp
stos
jo
mov
aad
sbb
and
xchg
js
push
hlt
or
fdivs
ss
sbb
aaa
mov
les
adc
xchg
dec
and
xchg
aam
sar
dec
test
sbb
mov
xor
and
pop
cmpsl
xchg
ficompl
cmp
mov
mov
cs
jg
jno
jle
add
fistpll
popa
pop
imul
sbb
rcl
xchg
push
adc
push
cmp
addr16
jno
adc
repnz
and
pop
test
xor
pop
hlt
mov
mov
jp
mov
dec
add
sbb
sub
sbb
outsb
inc
add
jmp
pop
adc
call
mov
clc
push
arpl
inc
test
mov
fcoms
dec
jns
loope
sbb
leave
sbb
pusha
and
cmp
pop
add
rclb
nop
xchg
mov
je
test
mov
rorb
test
jo
loope
jns
mov
mov
sahf
add
inc
push
enter
jmp
mov
je
pop
add
aad
sbb
pop
mov
lock
dec
and
test
aad
cld
jp
ja
test
mov
sbb
sub
fimull
or
stc
mov
ja
push
movsl
and
pushl
shll
int3
push
in
mov
and
in
mov
xchg
and
jo
in
xorb
in
les
sub
sbb
insl
and
mov
or
push
test
xor
jns
jo
ds
or
mov
mov
lret
les
mov
xchg
rclb
iret
stos
mov
hlt
inc
imul
addb
push
mov
test
and
lds
addl
fcoms
xchg
in
into
sbb
mov
dec
cmpsl
xor
sub
adc
and
xor
xchg
cwtl
hlt
repz
test
loopne
or
test
dec
in
int3
fwait
add
stos
pcmpeqd
in
fiadds
push
mov
add
or
add
cld
pop
call
jl
test
cmpsl
or
ret
or
outsb
sbb
call
rclb
jno
icebp
movsl
sub
jo
sbb
adc
fmuls
mov
insb
mov
outsb
adc
insb
loopne
dec
inc
jl
inc
push
and
les
mov
adc
mov
push
sbb
jb
jmp
int
gs
dec
mov
repnz
push
fsub
in
leave
fdivs
cmp
pop
sar
mov
and
pop
mov
xchg
push
mov
testb
int3
js
and
mov
dec
repz
rcll
adc
adc
jb
cs
shlb
xchg
xchg
fwait
pop
jns
pop
lock
imul
xor
jno
xchg
xor
ja
cs
pop
xchg
cs
mov
lock
shrb
jbe
pop
jns
in
or
push
cli
push
in
or
sub
jae
andb
pop
js
adc
in
add
jbe
mov
in
lock
clc
mov
mov
push
pop
inc
or
call
push
jae
sahf
cmpsb
pop
dec
adc
lock
aas
mov
push
adc
mov
push
push
xorl
rcll
xor
icebp
inc
push
bound
and
stos
and
pop
jmp
adc
cli
cli
js
int3
sbb
fwait
mov
cwtl
repz
mov
sbb
push
push
mov
sahf
lret
inc
mov
imul
test
ss
mov
dec
push
insb
and
outsl
hlt
test
nop
std
inc
cmp
mov
insb
sub
cld
lock
test
pop
dec
xor
icebp
push
or
mov
xor
repnz
sbbb
sbb
into
xchg
sbb
push
jno
inc
dec
inc
push
repnz
enter
sbb
aam
js
repnz
out
inc
scas
push
lea
jno
les
xchg
je
mov
movsl
addr16
push
dec
aad
mov
mov
xchg
mov
cmc
dec
push
dec
mov
sar
mov
jo
aaa
adc
inc
call
rclb
and
inc
push
mov
pop
fidivl
callw
pushf
dec
pop
pop
ror
push
and
push
or
and
sub
and
fcompl
mov
and
repnz
dec
in
sbb
rcl
dec
and
mov
pop
aaa
cmpsb
inc
inc
push
dec
fidivs
xchg
es
negb
je
shlb
fcomps
test
add
xlat
or
add
jl
push
test
repz
xchg
sub
push
push
lock
mov
adc
arpl
dec
sbb
dec
pop
lcall
pusha
shlb
jecxz
and
and
push
fmul
pop
lods
ljmp
cmp
pop
f2xm1
adc
imul
xor
cli
pop
pop
mov
dec
sbb
xor
fs
push
enter
andb
dec
insl
push
dec
in
sbb
hlt
js
adc
or
lea
fsubl
push
xor
sbb
out
sahf
push
shlb
lock
jno
jno
cmpsl
lods
jns
fs
jecxz
jp
pusha
mov
xchg
or
fbld
jae
imulb
xchg
add
outsb
test
add
cmp
sub
push
mov
mov
insb
lret
lock
aaa
xchg
lock
bound
add
repnz
pop
dec
push
pop
in
enterw
push
and
pop
push
loopne
movsl
into
sbb
movsb
and
nop
das
testb
adc
push
xchg
icebp
jl
notl
adc
inc
lds
jo
dec
scas
sub
movsb
ja
inc
jne
dec
jmp
mov
movsl
mov
std
sub
and
les
jbe
sub
mov
jo
test
push
push
push
mov
ljmp
jo
inc
dec
sbb
int3
adc
enter
and
push
jnp
sub
dec
xor
jo
fs
loopne
jo
call
hlt
mov
roll
dec
jo
pop
les
sbb
out
ljmp
mov
fisttpll
jbe
leave
data16
andb
pop
mov
pop
lret
sbb
cmpsb
fs
fmuls
jle
mov
or
or
inc
in
jp
inc
and
ret
or
jg
xchg
inc
nop
int3
pop
push
or
rcrb
dec
sahf
inc
repz
cmpsb
orl
and
scas
fsubs
mov
push
cmp
push
mov
jbe
mov
and
stos
push
out
sbb
xor
mov
inc
xchg
jmp
iret
scas
add
pop
lock
fldl
rolb
lods
je
icebp
sbb
mov
lods
jo
scas
fidivrl
les
int3
scas
cmp
je
pop
fnop
jmp
jo
or
add
jmp
out
and
pop
or
ja
notb
adc
mov
or
movsl
inc
xor
xchg
add
pop
cmp
xchg
mov
test
jb
fadds
mov
dec
pop
daa
and
pop
hlt
je
fdivs
mov
push
test
push
or
push
jecxz
pop
int
dec
outsb
lret
mov
xchg
ficoml
test
mov
sub
inc
dec
mov
adc
ret
jbe
push
test
mov
es
pop
cmc
cmp
fidivrl
pushf
icebp
clc
fstp
fnstenv
mov
jge
mov
push
les
xor
sub
push
or
movsl
fdivl
or
enter
sahf
int
aam
js
call
cltd
ss
and
sbb
xor
mov
push
and
lock
lea
jle
push
cltd
nop
jo
sub
ss
xchg
cwtl
add
inc
xor
sbb
adc
push
and
inc
cmp
mov
mov
cmp
lock
xor
scas
ljmp
mov
orl
leave
dec
std
sbb
cld
repz
jne
adc
aam
sbb
daa
js
mov
or
cwtl
jp
popa
and
xor
mov
fiaddl
shl
cmpsb
xor
mov
sti
pop
subl
lret
rcrb
xor
aad
les
push
push
dec
mov
mov
js
jno
lcall
repz
mov
icebp
fwait
mov
push
jge
xchg
dec
decb
test
jp
pop
push
and
ds
data16
rcrb
test
mov
stos
sub
je
push
mov
jno
fwait
insb
sbbb
es
add
insl
gs
repnz
cmpsl
push
dec
loope
jo
in
scas
xchg
imul
pop
mov
nop
mov
push
add
fbld
enter
jle
adc
cmpsl
and
xchg
jb
push
xor
sub
add
jo
jmp
adc
cli
push
add
mov
push
aad
jp
add
mov
mov
push
sbb
adc
sub
lahf
xor
or
idivl
scas
push
sbb
in
sti
xchg
push
loop
popa
sbb
dec
addl
repz
loop
call
lret
ljmp
sbb
mov
pop
jnp
xor
sub
nop
repnz
xor
test
je
insb
fisubs
cli
mov
sbb
pop
ja
das
xor
push
lahf
rcl
lahf
shrb
add
inc
mov
mov
dec
xchg
dec
add
xchg
call
sub
sti
lock
sbb
xchg
and
movsb
mov
ret
push
or
call
mov
js
or
dec
or
pop
mov
mov
dec
lcall
inc
outsb
mov
insl
es
int
shlb
mov
sbb
mov
inc
jmp
cmp
jb
and
cmp
push
gs
icebp
iret
dec
cmp
xor
pop
ja
lods
aad
lahf
xchg
jge
cmc
rcl
mov
push
push
call
jb
xchg
push
inc
push
xchg
rclb
rcr
adc
mov
mov
imul
jge
inc
orb
mov
mov
call
jmp
pop
je
lahf
xchg
ljmp
and
int
adc
or
dec
sub
in
or
sbb
insb
shr
or
mov
lret
or
roll
nop
pushf
xor
mov
sub
mov
and
xchg
in
test
xchg
sahf
add
das
js
mov
push
call
push
mov
in
nop
subb
leave
fiaddl
clc
dec
ja
add
movsl
or
push
sbb
sub
mov
push
mov
pop
lahf
xchg
pop
jge
nop
and
or
jecxz
cli
lret
push
cmp
sti
jmp
mov
cltd
or
leave
sub
push
dec
ljmp
movsb
sub
shl
sbb
jns
jnp
add
sti
push
es
outsl
push
icebp
mov
sbb
push
and
inc
add
js
repz
out
sahf
mov
leave
lcall
imul
mov
push
lahf
jmp
adc
or
or
inc
cli
or
jns
mov
jno
push
fdivl
push
pop
xchg
inc
adc
roll
push
cmp
sbb
dec
enter
pop
icebp
lret
icebp
mov
aaa
das
mov
mov
mov
inc
mov
cli
shrl
xchg
mov
lea
xor
mov
adc
mov
fisttpll
adc
push
popa
push
sbb
or
or
pushf
jle
stos
inc
mov
negl
xchg
xchg
push
push
das
lods
repnz
hlt
pop
mov
push
test
sub
imul
jmp
loopne
jno
stos
cmpsl
dec
or
ljmp
xor
imulb
jae
mov
add
pop
sub
fimuls
popl
aad
aas
or
bound
sbb
incl
jne
adc
sarb
jmp
cmp
pop
divb
adc
ja
sbb
and
inc
push
xor
xor
jno
mov
shlb
fwait
movsb
jbe
add
xchg
inc
push
jne
xor
lcall
loop
lcall
mov
movsb
jle
hlt
je
into
inc
lahf
xor
push
mov
in
arpl
xor
jne
sbb
inc
loopew
roll
aad
lods
js
mov
fisubrl
pop
mov
xchg
call
roll
xor
ret
pop
imull
lcall
sub
inc
push
repnz
inc
push
sub
fcompl
jo
mov
daa
push
call
push
sub
add
in
icebp
cmc
int
mov
pop
out
mov
push
in
mov
xor
jp
ljmp
sahf
hlt
jecxz
push
sti
es
das
push
cmc
sbb
int
sbb
cmp
push
push
call
jno
mov
repnz
push
push
cmp
fstps
rolb
not
xlat
bound
cmp
movsl
pusha
test
fcomps
loopne
xor
aaa
adc
mov
push
mov
and
call
xchg
movsl
pop
sub
mov
hlt
lcall
jecxz
sbb
adc
or
pop
jmp
mov
mov
pop
sub
adc
or
mov
push
jge
mov
int3
push
pop
testb
cmpsl
mov
and
push
push
movsb
xor
and
mov
jecxz
and
cmp
xor
divb
in
pop
mov
notl
mov
daa
fnstsw
movsl
mov
jmp
insb
andl
stos
fmul
dec
test
fnstsw
and
stos
sbb
or
sub
pop
mov
jae
insl
dec
ljmp
inc
push
push
shrl
es
dec
or
fdivl
sbb
mov
test
jne
adc
cmpsl
sub
negl
push
pop
pusha
repnz
push
div
xchg
subb
hlt
jge
push
adc
scas
jge
nop
cmpsl
call
lahf
mov
jmp
loopne
loope
js
adc
mov
dec
mov
push
sub
jns
xor
sahf
in
ja
sbb
push
je
jbe
mov
test
ret
xchg
jmp
daa
xchg
jno
or
adc
lcall
jmp
popa
mov
aad
fdivrl
add
mov
insl
addr16
or
pop
enter
ljmp
sbb
adc
pop
dec
or
push
leave
sbb
adc
addl
dec
add
imul
cmpsl
jne
push
js
dec
cmc
ljmp
lock
and
popf
jmp
std
int
or
ja
mov
inc
jo
stos
push
mov
int3
sub
enter
push
icebp
or
insb
pop
sub
jae
and
faddp
mov
push
fyl2xp1
add
pop
mov
jno
mov
dec
int
fmulp
jae
repnz
test
mov
sbbl
mov
cs
mov
pop
add
ss
inc
push
push
mov
fsubl
insl
or
stc
scas
popl
dec
mov
push
rcr
loopne
pop
add
dec
test
sbb
pop
dec
addr16
cmp
pop
stos
int3
xchg
test
sbb
push
mov
pusha
fnstsw
aad
and
push
scas
in
cmp
cltd
stos
xchg
mov
repnz
call
and
shl
dec
jmp
mov
push
sub
repz
jo
pop
mov
sub
repnz
sti
mov
mov
jge
sub
add
mov
daa
jl
stos
adcb
inc
pop
fs
add
jns
jb
push
fdivs
fdivl
scas
xor
xchg
mov
jne
imul
xchg
inc
mov
jne
inc
inc
addr16
ja
or
sbb
mov
sub
ja
add
push
xor
stc
dec
neg
jg
call
xor
sub
repz
sbbb
push
out
cmp
mov
aad
mov
dec
decl
and
sbb
adc
adc
fldenv
outsl
aad
inc
mov
mov
add
sahf
cli
fmuls
cmp
sbb
and
leave
sub
minps
inc
inc
cmp
mov
ret
orb
testb
add
les
adc
imul
stc
scas
aaa
arpl
or
cmc
int
andl
mov
pop
lock
add
lcall
pop
cmpsl
xchg
rcrl
add
stos
pop
jns
mov
and
jbe
mov
pop
cmp
add
int
mov
pop
push
cmp
jmp
adc
or
pop
jns
imul
push
dec
dec
lods
inc
xchg
lods
fidivrs
add
jge
cmpsl
mov
or
fs
inc
adc
cmp
fisttps
clc
repz
fnstcw
inc
fstl
mov
out
aam
movsl
lods
cmp
sbb
adc
mov
add
sub
cs
xchg
pop
adc
cmp
mov
stc
addb
inc
and
pusha
popf
scas
lods
daa
jb
dec
sahf
mov
adc
test
xor
jo
mov
adc
leave
push
inc
push
mov
insb
aam
cmpsb
imul
mov
push
cmp
pop
push
xchg
lea
and
fld1
mov
or
sub
rcr
add
mov
or
xor
push
cmovns
xor
mov
imul
adc
mov
push
mov
jno
push
cwtl
sub
jns
shrl
in
ljmp
prefetch
or
xchg
test
lods
int3
neg
movsl
loop
jne
ljmp
cmp
pop
xlat
ss
jmp
daa
dec
inc
mov
pop
add
xor
pushf
dec
test
lods
jmp
cmp
inc
shlb
in
in
fmul
lahf
les
pop
pop
stc
cwtl
jno
mov
push
jge
dec
pushf
call
imul
inc
pop
mov
popf
cmp
add
rol
jle
popa
add
lcall
fidivrl
lock
clc
sahf
and
cmp
jmp
mov
push
push
xor
jl
mul
bound
lret
in
rorb
xor
or
mov
mov
jo
push
mov
rcr
inc
outsl
or
jnp
outsb
lds
pop
iret
cli
lret
mov
sub
ss
mov
push
popa
xchg
mov
push
or
leave
loopne
fcoml
mov
leave
fmuls
cli
arpl
and
add
rorl
enter
cmpsb
movsb
pop
nop
pop
mov
mov
femms
xchg
push
lock
call
shrb
pop
aad
stos
push
dec
clc
test
sbb
dec
push
jnp
mov
mov
loop
sbb
ret
test
cmp
jbe
cmp
dec
test
xchg
xchg
pop
mov
xchg
and
jle
add
nop
adc
push
pop
mov
cmp
filds
dec
xchg
lods
inc
ret
inc
jmp
lcall
adc
or
sbb
das
lcall
std
mov
inc
lea
in
mov
scas
ja
lods
jno
js
int
sub
inc
inc
push
pop
xchg
mov
sub
cmpsb
or
mov
call
push
push
aas
lahf
notl
adc
daa
in
or
ljmp
call
addb
adc
mov
rcl
add
jg
mov
push
mov
sahf
dec
xchg
add
nop
mov
pop
adc
or
stos
adc
or
push
movsl
and
add
lea
lds
push
mov
iret
mov
gs
mov
lcall
or
jl
lahf
stos
pusha
push
js
jbe
pop
aad
or
test
ja
and
jne
mov
dec
pop
fidivrl
bound
outsb
or
xlat
push
repz
mov
mov
dec
cld
xor
pop
or
mov
insl
mov
pop
lods
or
mov
outsl
jbe
lahf
xlat
mov
xor
insb
andb
les
jmp
mov
sub
mov
ljmp
xlat
pushf
inc
jne
ljmp
hlt
movsl
dec
cmp
mov
push
cmpsl
test
push
mov
lock
js
callw
mov
in
mov
lods
push
cmp
inc
cmpsb
rclb
add
lret
inc
or
mov
jae
call
inc
adc
xchg
xchg
inc
xchg
adc
mov
or
das
inc
mov
insb
stos
jmp
pcmpeqd
lods
xchg
add
and
or
arpl
mov
pop
insb
stc
and
and
cmp
in
lahf
jns
pop
jbe
ror
nop
push
or
xor
xor
xor
cmp
lret
cld
pop
sub
push
negl
test
jbe
ret
jge
mov
xor
test
jmp
je
stos
xor
push
call
cmp
out
repnz
out
push
cmp
adc
test
cmpsl
mov
nop
mov
cmpsb
cmp
pop
sub
adc
xorb
push
dec
daa
mov
lahf
dec
call
jno
cwtl
sti
or
aas
aam
xchg
pop
jmp
pushf
dec
test
add
xchg
in
loope
jecxz
hlt
mov
mov
iret
popf
icebp
cmpsl
sub
stos
xor
scas
in
adc
pop
add
insb
jne
jg
orb
test
lcall
test
push
push
pop
sub
or
dec
lods
popf
push
movsb
xor
testb
mov
mov
push
imul
xchg
inc
cmp
addb
scas
mov
lret
dec
mov
mov
mov
into
push
jnp
loop
inc
mov
loop
loopne
lods
inc
push
pop
aad
jmp
enter
push
push
in
fcmovnu
dec
cs
mov
lea
lods
es
jb
jo
mov
enter
pushf
adc
lret
fdivl
call
mov
pop
xor
std
sahf
mov
sub
mov
cmpsl
mov
inc
add
add
lods
or
stc
ja
and
push
sub
hlt
adc
mov
insl
push
mov
ret
out
js
add
fstps
xchg
mov
pop
push
psubq
cmp
adcb
faddl
les
mov
xchg
aam
add
push
mov
int
push
call
nop
test
test
lahf
outsl
ljmp
rcr
xorb
push
dec
or
xchg
mov
stos
sub
sbb
lds
fdiv
insl
mov
push
js
mov
jmp
dec
mov
mov
xor
sub
subl
cmc
or
sbb
jmp
and
adc
popf
jbe
dec
push
pop
jge
add
inc
mov
sub
mov
mov
loopne
xor
je
pop
inc
loopne
xor
pop
jb
pop
cli
std
mov
outsb
cmp
jl
dec
mov
int
out
ret
or
add
inc
aad
repnz
repnz
test
in
jo
sub
arpl
in
pop
cld
ja
cs
push
xchg
jl
cmpsb
popa
cwtl
add
push
jb
pop
lret
jecxz
jmp
or
div
pop
test
mov
arpl
dec
mov
aam
cli
call
xor
mov
addr16
cmpsl
jo
pushl
ss
or
inc
pusha
mov
mov
push
sub
je
mov
lea
xchg
xlat
jns
scas
push
outsb
xchg
in
ja
test
or
ja
xchg
cmc
stc
prefetchw
iret
dec
pop
shl
push
sub
inc
dec
jb
leave
jmp
jg
hlt
clc
push
ds
add
dec
inc
jecxz
jmp
lods
pop
mov
or
jmp
pop
sub
dec
push
mov
adc
rcrb
xchg
jecxz
xchg
mov
decb
call
fstps
jo
inc
cli
and
ss
repnz
xchg
movsb
pushf
mov
xchg
mov
inc
pop
out
mov
mov
jle
aam
adc
and
arpl
in
sub
stos
leave
ss
dec
ja
push
stos
sbb
rcrl
insl
xor
call
shrb
stc
push
xor
and
sub
xchg
jl
cmpsl
js
mov
mov
les
xor
cmpsl
jno
test
sbb
ljmp
iret
test
jb
and
incl
xorb
xchg
std
push
inc
dec
inc
jge
pop
sbb
call
ss
clc
out
lods
inc
rol
adc
jecxz
jns
add
dec
mov
push
jmp
and
call
std
dec
adc
push
pop
sahf
push
pop
push
scas
aas
cmp
lods
mov
stos
xor
inc
ficompl
lods
and
hlt
bound
add
sbb
push
movsb
pop
push
jecxz
dec
stos
adc
push
lret
insl
xlat
mov
jae
xor
mov
mov
push
push
add
subl
xchg
mov
or
std
repz
sarb
rcrl
mov
jne
stc
dec
push
pop
pop
mov
mov
cmpsb
mov
and
inc
testb
and
mov
sub
shlb
out
xchg
pushf
xchg
icebp
jb
mov
bndldx
add
std
xor
sub
push
xor
jp
sbb
cmc
push
lret
loop
cmp
in
sub
test
test
sub
inc
or
mov
or
imul
and
add
push
mov
adcl
inc
cmp
in
push
ret
add
xchg
stos
shrb
pop
mov
inc
push
and
jnp
popf
cmp
outsb
xchg
pop
popf
pop
stos
popl
push
add
jp
mov
cmc
xlat
sbbb
and
lods
std
imul
lahf
lods
mov
adc
shll
adc
dec
mov
mov
or
call
shrb
add
and
sub
repnz
mov
xorl
aad
fstpt
aam
repnz
daa
xor
add
arpl
cli
push
mov
imul
pop
call
or
sbb
out
cs
push
addb
adc
repz
fcompl
jb
loopne
into
popa
jnp
jge
cwtl
call
inc
test
push
out
cli
push
nop
mov
fwait
jle
dec
in
add
xor
lds
jge
or
arpl
cmc
adc
jbe
scas
sub
or
jecxz
dec
jg
xor
sub
xor
cmp
or
repz
leave
sahf
andb
inc
lods
std
insl
and
daa
pop
and
and
js
push
mov
sahf
mov
pop
shlb
fs
mov
dec
or
jno
movzwl
push
lcall
xor
repz
mov
idiv
push
enter
sarl
dec
dec
lcall
das
fcomi
add
mov
lret
sbb
insl
xchg
popa
lret
add
call
orb
outsb
mov
inc
cmpsb
dec
and
out
clc
rcrb
loop
push
mov
xchg
idivb
cwtl
out
mov
cli
rcrb
or
jg
or
daa
or
inc
inc
sub
push
leave
sbb
pop
or
cmp
and
add
cwtl
test
inc
jne
mov
call
xchg
cmp
mov
mov
push
mov
or
aas
adc
test
xor
or
lds
pop
mov
mov
pop
pop
cwtl
movsl
xor
xor
popf
inc
pop
inc
push
or
inc
xlat
xchg
subb
testb
push
clc
mov
mov
sti
icebp
inc
test
fwait
add
mov
pop
std
push
pop
or
les
outsb
in
int3
or
xchg
push
jo
xchg
call
mov
xchg
std
sbb
jl
call
dec
decb
push
jb
jmp
add
repnz
jb
rcll
decl
lods
pushf
xchg
nop
push
push
push
loope
das
leave
scas
xor
or
test
mov
cmpsb
jg
and
mov
fs
xchg
cltd
push
popa
xlat
xor
mov
dec
and
or
push
xchg
mov
pop
shl
lea
adc
popf
sub
rolb
push
pop
mov
pop
sub
add
daa
jle
pop
or
decl
fisubrl
nop
psrld
pusha
nop
das
push
jno
xchg
add
inc
dec
push
mov
push
flds
add
xchg
sbb
dec
dec
inc
inc
xchg
jecxz
decb
push
and
mov
cltd
pop
insb
mov
sarb
negb
lret
rcrb
pop
test
xchg
lea
cs
inc
jl
inc
inc
add
mov
jbe
hlt
dec
mov
sub
std
inc
es
or
stos
pop
stc
stos
mov
repnz
dec
scas
popf
pop
nop
inc
jmp
adc
fldl
cmp
jb
mov
mov
es
mov
adc
int
dec
push
inc
lahf
or
xchg
pop
pop
and
or
adc
mov
lds
sbb
rcrl
dec
mov
sub
test
or
push
mov
rorb
pop
cld
sub
pop
icebp
lret
test
xlat
jns
popf
outsb
les
mov
popa
adc
nop
ljmp
imul
add
call
cmp
or
out
aaa
jmp
daa
loope
insb
and
adc
mov
fmull
mov
repnz
stos
loop
jecxz
or
or
fcmovb
pop
pop
sbb
cmp
arpl
add
mov
cmp
daa
hlt
es
push
adc
repnz
lahf
mov
lret
das
inc
loop
call
inc
sbb
push
inc
dec
and
cs
imul
loop
pop
or
mov
sub
and
sbb
fstps
mov
aas
sub
ret
sbb
jecxz
push
mov
shrl
test
sub
and
jno
or
ss
mov
push
lahf
dec
je
xchg
inc
movsl
cmp
or
icebp
out
xchg
or
jg
stc
xchg
lret
test
sub
out
sub
push
rcrb
bound
sub
jno
or
adc
add
addl
adcl
sbb
sbb
jmp
push
test
mov
jb
sbb
inc
mov
dec
pop
fdivl
mov
pushf
movsb
mov
iret
xchg
or
popf
jno
mov
cmpsl
ficoms
fisubs
es
insl
call
sti
or
lods
outsl
jb
jmp
cmp
testb
lock
cwtl
call
jle
cli
inc
negl
jb
call
andb
rolb
fisubrl
fimuls
and
lret
inc
pop
dec
add
lea
cltd
xorl
bound
mov
or
and
inc
pop
and
loop
jne
das
stos
cmpsb
add
mov
ret
dec
cmp
xchg
mov
in
push
fs
add
mov
or
mov
sub
xchg
add
pop
lock
mov
or
enter
les
fimuls
lods
pop
inc
jae
repnz
insb
or
sahf
pop
push
mov
call
adc
add
sbb
mov
mov
lock
call
stc
std
jb
loope
cld
shrb
ds
call
mov
mov
mov
inc
loope
mov
sub
mov
dec
cmp
cmpsb
xlat
fidivl
pop
mov
stc
mov
decb
pusha
addr16
mov
inc
inc
xorb
dec
jle
xor
mov
in
sub
or
out
leave
cmc
pusha
pop
test
push
jmp
out
push
jl
mov
inc
mov
dec
insl
insb
xor
and
call
add
sarl
and
insb
mov
and
loope
jbe
cmp
dec
dec
jle
add
ss
cmpsb
divb
cld
pushf
push
inc
jmp
std
xchg
mov
cmp
sahf
xor
jmp
sbb
loope
and
lods
ja
cmp
hlt
in
popf
mov
pmuludq
das
sar
push
jae
dec
mov
cmp
sbb
in
inc
push
or
add
mov
test
clc
dec
add
xchg
mov
or
sbb
and
out
jno
leave
push
cmp
dec
ja
inc
mov
jnp
pop
inc
test
int3
aas
rolb
cmpsl
push
mov
jecxz
dec
push
mov
lcall
repnz
mov
adc
xor
in
repz
shlb
fstps
and
stc
mov
push
stos
sub
stos
sub
jmp
cwtl
popf
pusha
pop
mov
adc
mov
push
jne
sti
or
sbb
adc
fidivrs
inc
shrb
pusha
insb
inc
dec
add
popa
jg
cmp
in
dec
pop
inc
dec
sti
adc
fmull
and
arpl
adc
std
lock
push
mov
push
ret
testl
or
pop
sbb
call
mov
xor
sub
dec
and
in
mov
or
add
jne
ja
into
cld
mov
int
pop
idivb
mov
mov
jl
sbb
in
push
xchg
push
js
call
das
inc
mov
sbb
cmp
pop
dec
add
ja
xchg
call
cmp
mov
fldenv
cmp
call
hlt
lahf
inc
idivb
rorl
ss
xchg
je
jle
cmpsl
pop
stos
js
lods
jmp
pop
andb
insl
inc
push
inc
mov
mov
arpl
rorl
loope
psubq
mov
or
sub
mov
rcl
icebp
dec
pop
and
xor
and
xchg
mov
xor
pop
ss
test
adc
mov
jno
inc
cmc
sbb
sub
xchg
push
jmp
shll
call
into
sbb
lods
nop
xor
cs
in
test
es
add
jae
loopne
inc
jnp
jp
das
ficoml
mov
int
ljmp
je
fisttps
dec
xor
clc
insl
sti
sbb
aaa
loopne
xchg
add
push
scas
sti
andb
xchg
dec
or
mov
mov
add
subl
stos
mov
pop
negb
adcl
punpckhbw
leave
jb
aad
jl
add
mov
push
jne
push
push
daa
jb
cli
ffreep
scas
jo
pop
xor
pop
stc
xor
mov
add
add
out
lcall
ret
xchg
jge
insb
and
repz
hlt
loopne
outsl
std
inc
mov
popa
adc
push
mov
les
inc
and
test
xchg
int
inc
or
pop
mov
sbb
sbbb
dec
or
sarl
js
or
jno
inc
dec
fsubrp
xor
dec
dec
jno
push
push
sub
mov
jno
ficompl
add
pop
cs
pop
imul
mov
fiadds
orb
aam
fsubr
loop
pop
jmp
push
and
inc
xor
cmp
mov
jb
mov
shrb
call
mov
mov
push
push
andb
leave
and
jmp
inc
fcoml
or
pop
cmp
std
push
and
lahf
cld
sub
xchg
cmp
cltd
or
in
mov
xchg
imul
test
cmp
lahf
mov
mov
push
ljmp
in
scas
or
clc
cmpsl
fdivrs
movsb
push
or
adc
inc
sub
shr
sbb
add
sbb
out
pop
mov
add
cmpsl
cs
xchg
cli
das
xlat
mov
shlb
outsb
mov
cmp
mov
stc
mov
push
mov
lods
jle
into
mov
mov
cltd
xorl
xor
imul
roll
mov
stos
push
push
scas
pop
dec
jge
sbb
sahf
push
mov
loop
hlt
mov
xor
inc
pop
inc
inc
pushf
repz
mov
xchg
int3
mov
inc
jmp
sub
test
pop
pop
sub
push
fisttpll
pop
mov
stc
mov
pop
mov
call
xor
fdivl
lret
push
cmp
mov
inc
jno
sbb
imul
or
clc
int3
xor
jae
pop
and
cmp
dec
test
filds
mov
xchg
sbb
subb
and
mov
fdivrp
je
mov
test
dec
pop
out
or
xchg
shl
jge
add
rolb
std
hlt
lds
out
sarl
shl
or
gs
stc
adc
inc
fwait
mov
je
sub
repnz
dec
cmpsb
call
or
iret
imul
pop
fld
repnz
and
xorb
pop
test
lahf
imul
addb
mov
aad
scas
divb
mov
jb
mov
add
fwait
sahf
aam
fistpl
sub
repz
pop
sbbb
mov
iret
pop
dec
clc
mov
out
cs
inc
call
jo
push
orl
ja
mov
jmp
jmp
popf
filds
arpl
xor
shrl
aam
insb
in
inc
insl
or
jo
out
sbbl
inc
dec
lcall
sub
popa
dec
lahf
jecxz
scas
int3
pop
xchg
aam
repz
push
ljmp
and
addb
mov
mov
cltd
jns
mov
or
mov
sbbl
adc
push
adcb
call
push
push
sbb
sahf
mov
cmp
mov
popa
mov
adc
insl
clc
sahf
adc
adc
sbb
jne
add
fwait
std
xorb
sti
xor
cld
stc
imul
cwtl
popaw
xchg
sub
mov
sub
sbb
xchg
or
sbb
test
cld
test
xor
mov
fmull
es
inc
pop
or
test
lret
mov
adc
xchg
int
and
pop
sbb
cmp
dec
aad
pop
std
pusha
pop
jmp
mov
push
pop
subl
mov
in
mov
in
push
pushf
outsb
push
sub
in
lds
add
repz
aas
add
or
and
out
inc
dec
sbb
mov
or
out
movsb
dec
pop
fisubs
jne
mov
rolb
fucomi
fisttpll
mul
pop
sub
or
dec
out
movsb
aam
movsl
cmp
aad
mov
repz
xchg
inc
or
out
mov
loopne
cmp
fdivrl
in
inc
xchg
push
and
aas
cmp
hlt
pop
sbb
jb
mov
push
in
mov
rorl
add
mov
inc
fldl
xchg
mov
xchg
outsb
mov
xchg
iret
js
das
or
pop
dec
outsl
ljmp
pop
cmp
mov
stos
or
call
xchg
enter
xchg
daa
fstpl
cmpsl
in
xchg
add
ret
mov
fists
add
add
cmpsb
cmc
mov
insb
add
out
lahf
dec
sti
jge
adc
loope
cmp
mov
sbb
and
xor
and
add
add
cli
enter
imul
jo
cmp
out
int3
add
pop
addr16
popl
imul
mov
cmp
jmp
jle
ret
xor
sub
mov
in
fsts
inc
mov
pop
call
push
jno
mov
aas
xor
xchg
std
stos
mov
jp
mov
adc
mov
cmpl
inc
jle
add
jl
cmp
xor
jmp
cmp
gs
insl
xor
movsl
lcall
testb
xchg
jmp
mov
popa
lds
imul
scas
pop
testl
xchg
clc
mov
out
cli
call
es
xchg
popa
out
sub
pop
cmp
dec
psadbw
sbb
andb
mov
imul
decl
dec
or
mov
add
mov
pop
or
mov
push
pop
mov
cltd
popa
out
daa
jmp
ret
data16
out
cld
sbb
jo
call
punpcklbw
sub
ljmp
imul
inc
mov
cli
cmc
cmp
das
sub
or
fsubr
bswap
fbld
mov
sahf
xchg
ljmp
mov
mov
sbbb
test
outsl
enter
ret
repz
add
mov
mov
fstps
nop
popa
sub
cmp
or
pusha
and
outsb
mov
cmp
mov
mov
cld
pop
mov
outsl
mov
cmp
xchg
imulb
xchg
ret
mov
call
push
push
fnstsw
adc
pop
imul
pop
daa
push
add
call
pop
mov
aas
push
dec
mov
lret
sbb
lods
lods
aaa
inc
inc
lahf
cmp
dec
mov
ficomps
ljmp
xchg
jb
call
inc
add
mov
out
mov
ficomps
dec
jmp
xchg
mov
pop
mov
add
jp
mov
adc
inc
mov
daa
sbb
jb
insb
add
popf
addl
mov
add
push
clc
mov
add
out
push
lods
in
pop
jo
aam
push
mov
dec
es
inc
imul
inc
jb
sbb
mov
lcall
add
nop
cmp
add
dec
sbb
mov
mov
push
cld
fisttpll
das
mov
push
add
lcall
or
je
daa
add
mov
mov
dec
mov
scas
sbb
jmp
push
fwait
push
jp
inc
mov
popa
pop
test
in
push
mov
in
jg
mov
add
mov
call
cs
notb
and
inc
nop
push
mov
imul
dec
bound
xor
jmp
pop
xor
push
mov
int3
mov
xor
jno
ret
dec
push
push
mov
mov
out
sub
pop
adc
pop
jp
or
cmpsb
xchg
dec
mov
mov
frstor
loope
daa
xchg
cwtl
pop
inc
or
and
xor
mov
mov
nop
stc
sbb
mov
bound
enter
in
push
jo
sub
or
jbe
inc
out
jnp
lcall
stos
dec
es
into
sub
jmp
push
pop
fwait
jbe
cld
jb
subb
or
or
or
fidivl
inc
inc
add
pop
cmp
test
mov
cmp
jne
mov
repnz
ss
add
fistps
jecxz
lret
out
inc
or
idiv
or
push
mov
adc
test
insl
jnp
sub
xor
mov
stc
xor
jbe
xor
mov
sbb
xchg
mov
jg
push
and
mov
rep
test
out
mov
jno
push
fdivl
pop
icebp
mov
mov
xor
test
mov
out
lahf
arpl
adcb
clc
sbb
and
js
lods
sub
insl
aad
mov
sbb
in
dec
pop
imulb
and
or
repnz
loop
cmc
insb
sub
push
push
jo
out
mov
mov
dec
jo
mov
sbb
dec
sub
jl
idivl
inc
out
mov
loop
add
mov
imul
iret
imul
inc
xlat
sti
mov
andl
add
sbb
repnz
xchg
push
push
inc
jno
add
aas
xorb
mov
jmp
mov
aam
mov
pop
inc
icebp
cmpsb
arpl
and
dec
jmp
pop
inc
cli
and
mov
arpl
or
mov
stos
xlat
inc
dec
das
imul
mov
daa
cmc
sbb
lea
mov
or
les
and
pop
std
push
jmp
scas
dec
push
lods
cld
dec
and
rolb
mov
iret
stos
aad
and
ja
call
adcb
cwtl
dec
jo
pop
sub
or
inc
je
aam
jmp
adcb
arpl
adc
lods
decl
addl
jecxz
mov
push
push
or
mov
nop
fidivrs
mov
stos
fldenv
push
fnstenv
adc
pop
sti
sub
notl
fsubrl
sub
xor
rolb
mov
sti
mov
call
shrb
jmp
adc
in
add
mov
push
adc
hlt
pop
and
daa
add
frstor
scas
addb
mov
cmpsb
rolb
xor
addl
xchg
jno
push
mov
arpl
jmp
mov
push
add
daa
xor
jp
popf
mov
sbb
pop
mov
push
jge
cli
out
lds
xchg
push
mov
adc
inc
add
inc
or
mov
push
or
and
push
or
data16
idivl
cs
outsb
dec
mov
cwtl
adc
inc
jmp
aam
dec
xchg
loop
fsubp
inc
pop
jp
pop
pop
jmp
out
ret
scas
inc
add
in
int
sub
arpl
cwtl
repz
push
adc
dec
jp
test
push
call
scas
dec
jnp
mov
pusha
push
orb
mov
repnz
push
je
xor
push
dec
adcl
ss
mov
cld
push
cmc
pop
mov
jb
xchg
int3
push
cld
mov
jns
in
cld
pop
cmpsl
sub
push
loopne
pop
push
nop
or
or
idivl
inc
dec
pop
sti
and
aam
or
xor
mov
jmp
mov
pushf
subb
xchg
test
jae
adc
mov
repz
cmp
mov
push
int
or
xor
cmp
popf
out
inc
inc
xchg
mov
mul
std
push
pop
in
aaa
sbb
lret
xchg
or
sub
add
rorl
pop
add
loope
adc
mov
pop
rcrl
in
xchg
sub
or
shlb
sbb
push
mov
mov
push
in
adc
mov
push
jmp
xor
xor
notl
adc
cmc
lahf
sbb
inc
inc
dec
loop
ret
or
cmp
lock
xchg
fcmove
jmp
xlat
loop
push
or
lcall
stc
push
cli
popa
inc
xchg
inc
cmp
mov
es
jp
inc
sub
mov
in
mov
pushf
push
or
push
out
movsb
add
in
inc
or
jo
stc
sbb
jae
push
inc
add
sbb
or
push
sbb
jns
cli
test
mov
mov
add
jbe
push
mov
mov
push
outsb
mov
mov
mov
andl
fs
jge
mov
jmp
jns
leave
xchg
aas
mov
stos
jecxz
ja
imul
xchg
cwtl
in
jo
pop
push
popf
or
dec
mov
or
jmp
out
popa
lock
pop
cltd
dec
int3
stos
popf
cwtl
xchg
stos
sbb
adc
stos
xchg
loop
xor
xchg
add
scas
pop
daa
sub
and
xor
pop
ficompl
add
push
cmc
mov
xchg
pop
mov
jmp
jb
push
jle
xchg
dec
jno
inc
sub
dec
mov
adc
and
pop
xchg
push
ret
xor
out
testb
pop
pop
pushf
pop
sbb
inc
lcall
cmp
test
imul
shr
dec
and
dec
subb
sub
pushl
mov
lods
mov
mov
aaa
mov
daa
sbb
jns
sbbb
push
mov
imulb
loope
lods
in
testb
inc
enter
xorl
stc
int
or
fcomps
xchg
fldcw
loope
inc
call
out
mov
push
push
pop
xchg
es
enter
or
dec
pusha
jl
xor
fisubs
movsl
mov
mov
orl
jle
inc
jge
mov
mov
pop
mov
mov
pop
mov
in
faddl
std
sub
dec
or
movsb
arpl
imul
call
mov
push
mov
push
ret
sbbb
push
push
pop
add
add
push
test
dec
js
cltd
sub
fs
dec
cli
dec
sbb
ljmp
lcall
pop
clc
mov
push
sti
test
lret
xchg
in
jp
in
jb
adcb
mov
and
pop
inc
inc
out
mov
inc
movsl
loopne
clc
cmp
repz
jmp
aad
jecxz
jmp
and
xorb
jmp
cwtl
scas
call
repnz
pop
mov
loop
dec
xor
mov
push
dec
pop
jmp
les
daa
xchg
push
ret
mov
and
add
test
mov
imul
sahf
ffreep
les
jmp
lock
mov
add
push
fcomps
rcrb
aam
lahf
popf
insb
push
rclb
negl
rol
hlt
das
and
popf
pop
stos
fbld
mov
cmp
cwtl
mov
sbb
push
push
aaa
jmp
loopne
jmp
imull
cmp
xchg
and
andb
push
add
out
divb
lret
pop
out
xchg
je
dec
jmp
mov
inc
lahf
xchg
mov
sti
aad
ror
mov
dec
ret
or
cwtl
inc
pop
xchg
inc
pop
add
jb
mov
push
cmpsl
stos
ljmp
cwtl
jb
iret
mov
jmp
mov
jno
fmull
shrb
add
and
std
divl
xchg
mov
rcll
cwtl
sub
sbb
dec
adc
mov
ds
pop
lahf
fstpl
jns
sub
sti
inc
mov
push
cmp
sbbb
fdivs
or
mov
inc
cmpsl
push
pop
and
call
mov
jnp
daa
lock
hlt
push
test
test
popf
push
push
mov
mov
xor
inc
pop
mov
adc
mov
call
mov
jg
fsts
xchg
inc
ds
arpl
cmpb
jmp
mov
adc
test
lcall
mov
or
jp
into
nop
out
mov
ds
into
push
sub
xchg
mov
add
loope
lret
fsubp
mov
jp
mov
xchg
gs
std
dec
pop
in
leave
xor
push
add
cmpsb
adc
mov
mov
stc
inc
das
je
cmpb
pop
cli
mov
add
xchg
leave
pop
mov
and
or
sbb
insl
xor
popf
push
sbb
mov
add
lods
xor
add
mov
or
mov
mov
inc
repz
xchg
int3
mov
push
mov
push
aaa
jmp
je
push
subb
clc
mov
popa
fldl
and
sti
mov
call
jae
nop
and
jmp
pop
xchg
pop
adc
push
je
jb
inc
push
jbe
lret
push
js
mov
mov
in
push
jne
clc
clc
dec
pop
stos
inc
xchg
mov
mov
mov
fsts
dec
dec
push
mov
jnp
add
rorb
adc
inc
mov
jne
cmp
daa
xchg
sti
insb
dec
dec
or
fldenv
mov
repz
sub
insb
movsb
jno
sub
std
mov
fisttpll
jecxz
js
mov
pop
push
and
jp
xor
add
jp
xor
inc
mov
or
and
pusha
cmp
cs
mov
cmpsl
rcrb
or
dec
ss
jbe
add
loopne
xor
cmpsl
pop
clc
dec
ss
pop
jnp
lods
jg
out
std
out
dec
add
icebp
mov
rorb
movsb
popf
lahf
inc
push
pop
inc
mov
xchg
hlt
call
rclb
mov
cmp
test
fsin
xchg
aad
pop
push
push
nop
out
xchg
xchg
add
or
or
adc
xor
lcall
pop
insl
jbe
or
cwtl
leave
aad
jge
test
loopne
loopne
sub
mov
fistps
push
mov
pop
sub
mov
das
mov
push
cmp
cmp
sbb
jnp
xorl
cmc
mov
mov
std
pop
sub
add
not
xchg
enter
js
pop
and
jmp
movsb
mov
xchg
push
push
rorb
leave
push
call
sbb
lods
gs
sbb
movsb
test
cmp
mov
pop
cltd
enter
ja
xlat
and
cwtl
mov
jmp
jo
shl
sbb
pop
jmp
int3
xor
cli
test
jno
cmp
mov
subl
les
push
push
adc
outsl
into
or
inc
pop
cmpsb
roll
jae
and
adc
repz
pop
push
sbb
test
jns
add
mov
loopne
jbe
sub
pop
testb
jae
mov
mov
inc
mov
lahf
lret
aam
aad
inc
nop
adc
pop
inc
in
arpl
mov
jno
push
dec
clc
jmp
sbb
sti
push
mov
loopne
add
sbb
xchg
and
inc
cmpb
imul
js
lods
or
loop
icebp
inc
pop
mov
mov
shl
push
icebp
mov
mov
push
and
aam
lahf
repnz
iret
jb
pop
call
out
aas
rcr
push
inc
stos
cltd
scas
pop
imul
fld
loopne
jne
xchg
imul
jo
mov
sub
push
add
xor
aaa
mov
push
sub
pop
dec
or
enter
je
dec
repnz
imul
adc
adc
and
data16
cltd
int
jg
push
or
xchg
imulb
lahf
sarb
imul
in
jmp
lods
add
loop
icebp
cmp
jg
mov
pop
mov
aaa
aad
mov
mov
imul
mov
push
pop
rorb
pop
fs
dec
push
stos
lret
out
cmpsl
and
push
aam
mov
popf
xchg
mov
sub
mov
mov
sti
hlt
sub
pop
sbb
std
xor
inc
dec
mov
jmp
mov
mov
mov
inc
jno
jge
xorl
inc
jmp
jbe
mov
test
outsl
push
fidivrl
push
sub
out
adc
fs
std
push
inc
dec
sbb
inc
cwtl
lret
cmp
and
xor
cs
or
jmp
enter
inc
dec
dec
mov
mov
adc
imul
jle
frstor
add
std
mov
sbb
mov
or
push
mov
jle
aaa
fidivrs
fidivl
mov
adc
xor
mov
pop
out
and
dec
rorb
int
xchg
loop
xchg
inc
repnz
sbb
jge
add
xchg
shrl
repnz
jg
mov
inc
dec
loope
loopne
repz
cltd
int
mov
insb
mov
idivb
mov
ret
mov
addr16
inc
insb
fdiv
xchg
incl
adc
adc
mov
scas
mov
pop
mov
add
pop
clc
xchg
ljmp
inc
jno
shll
pop
xchg
mov
ds
sbb
pop
cmc
or
les
xchg
out
cli
push
fisubl
daa
jae
das
jmp
std
clc
lahf
fmull
movsb
mov
repnz
add
push
jmp
in
pop
inc
loop
cmp
loope
jno
adc
or
bnd
pop
outsl
push
pop
push
out
dec
jl
push
jae
mov
jl
mov
add
jmp
push
mov
pop
leave
push
aad
pusha
add
mov
mov
mov
std
inc
lock
cltd
ror
inc
pop
dec
push
mov
lfs
dec
push
inc
xlat
pop
mov
pop
stc
or
rclb
aas
int3
adc
inc
fnstenv
pop
test
xchg
repnz
sbb
mov
pop
jecxz
or
mov
or
mov
sub
or
movsl
xchg
jbe
mov
lods
push
adc
inc
jnp
pushf
outsb
add
mov
imul
push
jle
ret
xor
dec
cld
cli
mov
mov
shlb
pop
mov
bound
cltd
jno
push
and
jmp
outsb
sub
sub
add
push
fdivrl
dec
sarl
or
xor
and
mov
pop
ret
push
sub
enter
out
in
lcall
sbb
repnz
lods
call
jbe
lret
push
pop
add
mov
pop
lahf
icebp
push
fcoml
pop
pop
mov
popa
or
das
enter
xor
sti
ret
inc
jmp
push
fsubrs
mov
adc
jno
add
xor
idivb
call
les
je
das
frstor
imul
call
push
ja
and
sub
and
jno
leave
pushf
sahf
daa
insl
add
or
call
xchg
mov
add
sub
mov
incb
mov
scas
imul
sub
int3
push
es
and
xchg
shll
sbb
pop
xor
int
lahf
loop
pop
mov
cwtl
iret
in
add
pop
pop
rorb
add
shrb
cmpsb
lods
pop
jb
lds
popl
mul
mov
loope
jbe
in
add
push
mov
pop
hlt
sub
shlb
adc
sub
adc
lds
jo
fcoml
add
imull
mov
adc
lret
movsb
mov
mov
ret
jmp
push
pop
daa
add
mov
lds
in
inc
sti
lahf
sbb
stos
aas
push
inc
mov
fcoml
dec
adc
push
ss
mov
jae
out
testl
inc
mov
mov
or
shl
mov
hlt
or
call
movsl
dec
mov
cld
out
xor
je
jmp
roll
popa
cmpsl
ret
jge
mov
mov
jge
mov
inc
adc
xchg
je
int3
cmp
jecxz
lahf
xchg
iret
mov
and
aas
push
test
fwait
push
or
push
test
push
int
into
lods
sbb
insb
nop
out
pop
mov
aam
jmp
jnp
cmp
or
mov
push
push
dec
je
lret
jmp
shlb
add
pop
adc
sub
icebp
js
and
int
cmc
in
repnz
dec
sbb
jno
fcoml
fdivl
outsb
out
xchg
aad
mov
pop
inc
or
scas
cli
mov
lret
rorl
rolb
inc
dec
xor
mov
push
sbb
pop
out
js
adc
cltd
lods
popa
loope
jmp
push
ja
sbb
negb
xlat
mov
jbe
fs
out
adc
les
cmpsb
jecxz
or
jbe
mov
aas
mull
out
mov
inc
pop
push
fsubr
cwtl
stos
xor
jo
and
jl
pop
or
popa
dec
test
test
add
add
negb
daa
mov
std
add
fmull
add
dec
xlat
cmp
push
push
mov
mov
idivl
and
dec
stos
mov
fcompl
pop
push
rorl
dec
mov
pop
pop
push
sub
mov
pop
mov
stc
rolb
pop
push
orl
or
subl
icebp
push
xor
jg
fildll
ret
pop
mov
mov
stc
mov
dec
jecxz
in
imul
call
mov
in
fwait
mov
leave
fs
mov
xchg
cwtl
pop
or
hlt
sbb
jl
push
inc
pop
pop
imul
imul
inc
add
push
pop
adc
sti
jge
mov
stos
enter
shrl
push
enter
xchg
mov
inc
in
cwtl
mov
sbb
cmp
sub
test
sub
call
mov
mov
mov
dec
dec
mov
adc
addr16
fnstsw
mov
dec
in
es
test
pop
bound
mov
call
movsl
xchg
cltd
jmp
sbb
mov
inc
out
sbb
call
pop
add
nop
sub
adc
scas
push
lret
xor
addr16
add
push
mov
filds
jbe
nop
clc
adc
dec
inc
xor
popf
lods
in
cmpsl
pop
cwtl
inc
jne
icebp
jmp
adc
pop
xchg
fidivs
cmp
mov
add
out
sti
fdivp
pop
jmp
imul
push
js
push
sbb
jg
xor
clc
es
push
out
inc
iret
lcall
sbb
inc
or
ret
in
push
sahf
dec
add
fstps
mov
or
popa
fs
inc
stos
pop
lods
mov
and
jl
jae
jmp
fadds
or
sub
cmc
negl
add
pop
loopne
cltd
inc
jno
call
mov
sub
mov
or
or
repnz
jne
lret
and
pop
test
xor
inc
xchg
inc
in
aaa
inc
inc
mov
sarb
push
movsl
popf
rolb
das
lods
adc
std
jo
lods
imulb
mov
xchg
push
sti
dec
add
xor
push
or
icebp
pop
data16
and
clc
dec
and
movsl
mov
hlt
pop
int3
pop
mov
out
inc
adc
popa
or
in
push
mov
out
mov
cli
ror
or
lcall
mov
sub
mov
paddsw
rol
pop
in
cmc
or
clc
clc
xchg
lret
or
call
mov
push
jl
pop
sub
mov
dec
jnp
enter
loope
fdivrl
icebp
xchg
pop
int
test
pop
lahf
or
push
pop
sbbl
sub
mov
push
dec
jae
xor
inc
mov
dec
pop
outsb
and
jbe
pop
push
xchg
jns
mov
pop
inc
out
jg
mov
mov
inc
pushf
adc
jg
cmc
xor
fcomps
mov
mov
fcomp
mov
test
mov
or
stos
in
orb
test
mov
ljmp
add
testl
or
push
nop
mov
mov
lock
test
jmp
mov
jle
call
push
jo
mov
clc
and
jae
leave
pop
shlb
out
adc
nop
popf
sahf
mov
imul
call
lods
jo
shll
test
cli
idivb
icebp
sahf
and
jp
cmpsb
mov
fdivl
pop
jmp
jle
call
cs
xor
andb
add
out
dec
jno
lahf
ret
imul
push
mov
clc
fsubl
jno
jno
sbb
mov
push
xchg
mov
fildl
mov
push
std
sarl
mov
jge
ds
sbbb
sbb
sbb
cmp
cmp
orl
outsb
int
add
sarb
mov
add
and
lds
xchg
lods
popf
cld
push
mov
out
daa
mov
xchg
repz
mov
jnp
mov
sbb
and
push
push
fdivs
inc
ljmp
mov
jge
fcoms
fldcw
sbb
movsl
or
pop
popf
aam
lods
pop
out
mov
mov
or
mov
mov
pop
ljmp
dec
popa
add
aam
pop
stc
mov
push
cli
xchg
bound
test
cli
stos
adc
in
aam
repz
mov
mov
addb
push
movsl
xchg
repnz
mov
push
push
or
push
push
cld
jmp
pop
addr16
test
add
test
mov
notb
call
das
sbb
adc
sub
cli
outsl
dec
rorb
stos
test
mov
nop
mov
nop
jmp
pop
fldl
add
addr16
inc
add
push
repz
sbb
scas
sub
push
cmpsl
cltd
dec
gs
and
sub
popa
pop
xcrypt-ecb
cmpsl
or
aaa
bound
mov
mov
lahf
inc
xchg
rclb
aad
pop
popa
iret
data16
into
dec
add
fcom
add
aas
xor
sbb
mov
jmp
pop
shrb
push
cmp
in
mov
cltd
add
es
fiaddl
loope
jnp
or
dec
or
insl
ret
pop
test
push
add
mov
mov
pop
xchg
or
jo
repnz
sti
popf
dec
repz
jo
and
loop
push
push
dec
sub
mov
adc
dec
aaa
dec
minps
out
dec
clc
stos
cwtl
stos
call
in
or
pop
xorl
mov
aaa
fwait
imul
outsb
xchg
cmp
adc
mov
jne
ljmp
stc
and
mov
push
mov
punpckhbw
gs
push
mov
xor
rcrb
std
repnz
jo
push
sahf
nop
mov
sbb
mov
xchg
mov
inc
mov
mov
repz
call
xor
dec
jae
sub
mov
or
mov
adc
fistl
andb
and
jge
sub
cmp
in
mov
adc
lods
shrb
xchg
pop
icebp
in
push
cwtl
test
enter
nop
xor
jp
sub
mov
push
shlb
push
cmp
cmp
clc
cmp
call
adc
push
lret
inc
hlt
outsl
jb
inc
ret
push
repnz
cmc
les
test
cmp
dec
test
and
or
mov
mov
cwtl
std
xorl
inc
mov
jbe
xor
push
call
push
pop
xchg
mov
and
mov
mov
pop
lods
cltd
sbb
test
adc
jnp
and
xchg
loop
mov
xchg
push
or
mov
pop
mul
push
jb
fdivs
mov
push
js
mov
mov
cmp
push
and
cmp
and
test
mov
dec
ljmp
adc
call
dec
icebp
lahf
mov
jl
cmp
ret
mov
loopne
jecxz
mov
int3
and
sti
mov
icebp
push
mov
cltd
int3
fmull
inc
hlt
mov
or
pop
stc
outsl
mov
add
enter
fcmovb
sub
pop
push
mov
call
mov
mov
iret
in
fadds
into
push
jmp
pop
addb
and
sub
or
xchg
cmp
xor
mov
push
dec
fadd
repz
test
pop
fwait
dec
add
mov
cs
jmp
mov
test
jb
cwtl
inc
repz
mov
cltd
xchg
jne
cmp
cltd
push
popa
test
mov
and
dec
outsb
mov
dec
pop
sti
or
jmp
pop
and
shrb
push
into
ljmp
arpl
out
adc
test
insl
push
cmpsl
repnz
pop
pop
add
lahf
mov
ljmp
or
or
push
sarb
cmc
dec
push
mov
mov
xchg
inc
mov
mov
push
movsl
fsubrl
lock
pop
xchg
push
xchg
jle
ds
call
pop
add
and
sar
pop
daa
push
xchg
sub
jg
mov
xor
inc
jns
pop
inc
xor
push
mov
testl
pop
jmp
out
jmp
sub
imul
add
scas
mov
xchg
mov
push
lods
decl
inc
cli
aaa
movsl
testb
inc
mov
pop
or
and
push
test
lock
mov
cmp
lahf
mov
lahf
movsl
pop
outsb
das
dec
mov
adc
fimull
push
daa
movsl
jns
or
call
dec
dec
add
gs
push
mov
popa
jmp
add
sub
mov
sti
sub
and
dec
adc
jmp
repz
pop
xor
nop
lcall
les
cmpl
iret
mov
or
or
ja
and
xlat
sbbl
and
fstl
jns
call
loop
sub
test
mov
inc
push
dec
leave
rcrb
lret
mov
adc
call
and
imul
cmpsl
scas
adc
inc
xor
stc
gs
dec
cltd
jmp
mov
js
js
enter
sub
adc
scas
loop
and
jnp
xor
ret
incl
jae
out
jg
andl
ret
sbb
icebp
lahf
adc
popa
jecxz
shll
icebp
hlt
push
pop
sub
push
jmp
mov
rcrl
xchg
inc
lds
filds
add
sub
in
mov
mov
jno
sub
mov
das
jmp
loope
mov
shll
addr16
dec
and
mov
leave
xor
pop
mov
push
std
clc
cwtl
cs
mov
icebp
sub
xchg
outsb
mov
je
out
and
jnp
adc
xor
xor
cmpb
ret
push
mov
sub
repnz
scas
jle
mov
pop
dec
addr16
call
aas
push
imul
aam
mov
mov
nop
pop
xchg
jne
loop
and
or
xchg
jmp
jne
clc
ficoms
mov
mov
push
je
rclb
xlat
sbb
and
add
jo
lret
jb
icebp
sub
fisubs
push
out
aad
or
loopne
mov
mov
sbb
in
push
cmpsb
rcrb
mov
jae
adc
mov
and
mov
das
mov
xor
jo
incb
sub
fdiv
sbb
ss
xchg
jmp
clc
or
test
or
xor
mov
jge
dec
fs
mov
pop
ret
mov
in
mov
mov
bound
ss
dec
dec
mov
ret
loope
xchg
mov
aaa
mov
or
dec
cmp
loope
inc
addr16
xchg
outsb
cwtl
jmp
insb
ds
aam
mov
imul
jge
test
cmp
sbbb
test
xchg
jmp
pop
div
mov
out
mov
pop
mov
add
sub
sbb
rcrl
push
jge
xchg
fisttpl
loop
or
addb
push
mov
out
cmp
jl
imul
mov
movsl
call
dec
and
xchg
popa
push
add
cmp
adc
ljmp
mov
adc
fadds
mov
mov
inc
shlb
add
sub
leave
fdivl
push
into
repnz
jmp
cwtl
dec
call
loope
mov
jne
adc
and
es
cld
ljmp
cmc
sub
imul
push
mov
cmp
sbb
push
pop
adc
call
and
insl
or
popa
dec
sub
jnp
sub
imul
mov
or
pop
adc
and
push
add
mov
in
add
pop
sbb
testl
mov
mov
or
lret
das
shlb
inc
mov
xor
mov
dec
out
adc
pop
mov
fwait
inc
mov
das
jg
test
pop
ret
dec
movsb
inc
add
sbb
mov
enter
pop
icebp
xchg
test
sbb
mov
inc
cmc
add
pop
adc
mov
mov
sub
fimuls
icebp
cwtl
dec
outsb
es
push
xchg
pop
sub
int
push
add
dec
cmpsl
leave
dec
into
popa
orb
lcall
dec
pop
mov
dec
xor
xchg
xchg
into
jmp
ljmp
dec
sub
outsb
aam
push
or
jae
jmp
repnz
push
lods
scas
fstl
fldenv
das
jecxz
mov
sub
jmp
ret
sub
cmp
pop
fildll
and
lods
sub
pop
pop
negb
mov
adc
xchg
popf
xchg
sbbb
ret
or
movsl
out
lds
pop
pop
mov
xchg
dec
xor
stos
movsb
cmp
daa
or
xor
pop
outsb
inc
dec
inc
test
cmp
mov
jmp
cmp
inc
sub
jg
fldcw
andb
xchg
sub
fcmovu
cwtl
testl
in
int
or
leavew
sub
add
incb
and
std
or
ret
mov
jecxz
push
andb
mov
or
test
mov
or
add
dec
jne
mov
add
inc
and
cmp
mov
mov
adc
jge
mov
sbb
adc
dec
cwtl
and
pop
dec
or
push
loop
xor
or
ljmp
push
ret
aad
lock
iret
subb
out
sub
loop
or
mov
xchg
mov
mov
jp
mov
mov
sarl
mov
cmc
enter
jo
loop
push
mov
mov
nop
or
inc
insl
xchg
pop
sarb
cwtl
xor
shlb
sub
popa
mov
rcrl
sbb
pop
call
adc
outsb
xlat
mov
repnz
lret
pop
xor
mov
xor
mov
sbb
repz
pop
inc
mov
icebp
jmp
stc
xchg
movb
mov
mov
testb
sbb
pop
call
jb
push
jp
ljmp
push
cwtl
mov
repz
sub
push
jge
sub
inc
arpl
mov
pop
push
sub
call
es
push
aaa
loope
jb
mov
pop
mov
push
push
mov
cwtl
cmp
jmp
push
vmovdqa
mov
xchg
sahf
mov
ljmp
push
mov
or
rclb
add
andl
jecxz
daa
push
push
ret
add
rcrb
nop
mov
aam
gs
ljmp
and
das
dec
mov
push
out
dec
pop
inc
popa
inc
cmpl
xchg
push
test
les
push
pop
mov
or
add
cwtl
xor
mov
push
leave
and
jno
inc
mov
xor
inc
and
imul
xor
jb
mov
jmp
icebp
push
sub
xchg
xchg
orl
mov
add
aad
mov
pop
cs
push
icebp
aam
mov
dec
stc
ja
pop
leave
jl
movsb
sub
in
popf
cli
xchg
popf
int3
lea
pop
push
push
cmp
jno
cltd
adc
into
mov
fwait
or
das
mov
mov
jmp
mov
xor
out
ret
fwait
jbe
pop
mov
pop
inc
lret
xor
sbb
or
adc
and
jo
xlat
cmpb
push
jge
adc
or
insb
lock
int3
loopew
leave
push
mov
jmp
loopne
sub
jno
jmp
movsl
bound
in
cmp
jp
shll
sbb
pop
call
mov
int3
aaa
call
adc
jl
dec
cmp
scas
fcoms
inc
cmpl
add
aam
or
test
pop
mov
dec
fdivs
cmp
bound
std
popa
mov
mov
or
and
call
divb
push
cli
call
int3
mov
call
insb
aad
cmp
pop
jo,pt
push
dec
jecxz
cltd
push
cmp
inc
sbb
cmp
pop
test
mov
jb
insl
inc
sbb
movsb
fldl
outsb
push
addb
jmp
test
or
adc
lahf
loopne
adc
addl
mov
add
cmc
stc
lcall
or
popa
clc
ljmp
adc
icebp
sub
mov
shll
push
jmp
mov
stc
jb
inc
call
sub
daa
sbb
sub
shlb
and
mov
negb
jno
add
repnz
push
jmp
stc
mov
mov
sarl
imul
mov
leave
inc
inc
movsl
dec
xor
aad
cwtl
sbb
mov
std
loope
hlt
outsl
jge
inc
pop
jmp
push
xchg
cmp
movsl
cmc
jp
cmp
jmp
or
pop
inc
xchg
mov
mov
mov
xchg
insl
pop
add
cmc
int
push
popl
mov
leave
insb
jp
movsl
cli
in
popa
mov
out
in
xor
es
jmp
imul
sbb
repnz
stc
fdiv
dec
ja
jle
and
cmpsl
xor
das
push
jo
xchg
push
lock
enter
mov
cltd
xchg
and
and
rep
imul
fistpl
mov
stc
test
mov
inc
repz
scas
mov
sahf
inc
ljmp
jmp
cld
lret
in
xor
insl
aaa
lods
sub
fsub
cmp
fsubrl
mov
div
outsb
ljmp
mov
push
repnz
sahf
shll
shlb
sbb
jge
jecxz
or
leave
mov
aas
mov
test
mov
sub
ljmp
jg
inc
and
xlat
add
int
sub
movsb
lret
push
pop
jmp
mov
fsubrl
cmpsl
xor
call
out
cs
pusha
lea
imul
push
xlat
cmp
mov
sbb
pop
xor
pop
cwtl
stos
xor
xlat
inc
loop
and
dec
pop
clc
fs
push
or
jle
push
jmp
push
popa
ljmp
call
pop
negb
jno
push
sub
pop
test
mov
jmp
dec
adc
mov
lods
mov
aad
cld
cmpsb
pop
sbb
or
cli
mov
jb
fcmovnb
pushf
ljmp
loop
inc
or
sbb
mov
int
dec
sbb
les
std
inc
xor
adc
push
adc
pop
or
pop
pop
hlt
or
pop
push
mov
test
mov
sar
add
cmp
xor
mov
sub
dec
jmp
sarl
push
or
or
repz
or
aam
lds
and
jnp
cmp
add
xor
mov
rcr
add
shrl
jno
call
adc
pop
loop
call
and
lcall
xor
popa
push
lods
mov
mov
jo
nop
loop
xchg
xchg
mov
clc
cmc
shl
lds
xchg
dec
or
mov
xchg
notb
in
add
lcall
mov
roll
lods
in
daa
mov
mov
and
fiadds
xchg
mov
leave
sbb
icebp
sub
lods
ret
jmp
or
adc
and
cmp
push
data16
jo
pushf
dec
addb
push
call
imul
adc
insb
adc
or
lahf
iret
jns
add
lods
inc
sub
sub
call
cmpsb
ja
mov
jnp
daa
push
fdivs
cli
sbb
arpl
mov
lods
cli
pop
les
inc
push
aas
inc
repnz
inc
jnp
rcr
push
stos
cmp
int3
add
stos
lret
subl
and
pop
outsl
pop
jg
lds
out
inc
std
ret
int
and
call
lea
cld
dec
fs
mov
cmpsb
sub
adcl
call
daa
loope
jg
cltd
in
movsb
test
adc
arpl
mov
pop
mov
fwait
cmp
add
mov
xor
pop
rcr
loopne
add
in
mov
mov
push
lock
pop
or
ret
cmp
repnz
cmpw
or
xor
push
fiadds
das
push
add
cmc
mov
mov
into
xchg
xor
pop
ret
xchg
dec
sbb
dec
lds
shr
adc
insl
mov
adc
mov
mov
jnp
jae
inc
jg
call
aaa
or
sbb
xor
das
cmc
jl
inc
pop
fdivs
loopne
pop
sbbb
xchg
insb
jb
sbb
movsb
jae
test
je
xchg
and
xchg
sbbl
das
movsl
jne
popa
sbb
mov
fsub
and
adc
add
sbb
ljmp
rorl
pop
jmp
xchg
stos
repz
inc
dec
or
jmp
inc
or
stos
and
stos
nop
xchg
jns
mov
add
sub
push
dec
xchg
in
push
mov
lret
push
xchg
jge
daa
inc
loope
push
std
mov
and
ss
stc
or
adc
scas
xchg
xchg
fs
ja
shlb
jnp
cmpsl
sub
sbb
rolb
cmpsl
ja
dec
fxam
jp
mov
mov
jmp
jbe
out
mov
add
mov
mov
in
cmp
loop
adc
jge
cmpsb
lock
call
cltd
sub
ret
cpuid
jecxz
mov
xlat
into
sbb
mov
pop
int
xchg
jecxz
sbb
dec
push
mov
js
xchg
repnz
xchg
adc
pop
push
test
nop
mov
jmp
mov
and
call
mov
in
push
sbb
dec
pop
xchg
mov
xorb
into
push
jo
mov
push
pop
sti
dec
mov
push
test
inc
mov
loop
inc
xor
stos
add
mov
cmp
cld
push
sub
push
lahf
out
mov
inc
clc
xorb
insl
in
sub
xchg
inc
adc
stos
push
sub
jb
std
cltd
mov
inc
add
loop
in
mov
jmp
stos
repz
test
dec
flds
cmpsb
adc
dec
shlb
dec
fnstcw
sub
in
ss
std
sar
ljmp
jl
mov
adcb
push
or
inc
and
test
fwait
int
xchg
push
push
gs
sub
push
jecxz
add
pop
push
inc
mov
xchg
adcb
and
add
dec
hlt
xor
jmp
mov
cmp
xlat
int3
inc
lods
rcll
mov
pop
pop
cmp
idivl
icebp
add
jae
aam
iret
mov
mov
imul
das
lcall
test
mov
mov
scas
inc
push
rcrl
jl
mov
ss
jmp
sub
push
add
mov
dec
sahf
adc
lock
pop
jmp
inc
or
insb
add
mov
fdivrs
shlb
fxch
adcl
std
fbstp
jnp
cwtl
imul
les
shrl
push
pop
jnp
sbb
scas
jl
mov
mov
inc
cmpsl
dec
testb
jnp
bnd
sbb
sub
js
add
daa
xchg
dec
pop
lea
cmpsb
add
sti
pop
adc
testl
mov
push
and
cwtl
lahf
call
sahf
adc
sbb
fdivrp
ret
xchg
into
pop
mov
pop
pop
pop
mov
or
dec
adc
and
xorl
xor
mov
out
jecxz
stc
jne
adc
fs
cmpsb
mov
sti
cltd
push
mov
sub
dec
xchg
jmp
jno
xor
jo
fsubrl
sub
pop
pop
inc
or
jmp
dec
and
inc
push
or
fucomip
jbe
daa
movq
arpl
mov
pop
xchg
xor
js
sub
mov
scas
hlt
or
and
jb
mov
adc
movsl
sub
dec
pop
in
or
dec
test
sbb
das
push
mov
popf
and
outsb
cmp
adc
or
sarb
add
mov
adc
popf
jno
in
sbb
cmp
mov
into
cmp
push
vpunpckhbw
data16
mov
or
call
push
ljmp
lods
cmp
out
mov
stos
sub
or
sbbl
sub
imul
xor
incl
aaa
hlt
push
ljmp
push
int
xor
mov
ret
jmp
mov
push
filds
shrb
cli
fwait
sub
push
sahf
jae
pusha
push
lds
add
fcom
sbb
rolb
or
cltd
jb
push
inc
cmpsl
aam
jnp
jmp
icebp
stos
adc
push
xor
jno
cli
cmpsb
jmp
jbe
cmpsb
daa
mov
fldl
push
add
jae
and
push
add
pop
in
call
push
out
pop
or
pop
xchg
xchg
inc
sub
call
mov
cltd
jecxz
es
cld
ret
ret
jge
and
popf
fdiv
lahf
lret
mov
xor
jg
test
dec
jno
mov
mov
jle
stc
mov
addr16
mov
jle
mov
pop
push
cwtl
lret
cmp
pop
ljmp
xor
pop
mov
inc
push
dec
int3
inc
cmc
in
test
cltd
insb
or
pop
add
mov
or
add
mov
out
fwait
cvttps2pi
sbb
outsb
inc
inc
push
lods
mov
movl
cmp
pop
in
divl
add
lahf
xor
loopw
adcb
push
or
jne
xchg
stos
xchg
mov
or
fidivs
or
push
add
mov
inc
pop
mov
cmp
call
cmp
dec
push
jmp
jg
fwait
add
sub
lock
aad
mov
pop
inc
cmp
cmp
int3
stos
xor
int3
pop
jmp
jbe
icebp
xchg
jbe
dec
pop
mov
fsubrl
xchg
sbb
pop
das
cmpsb
bnd
mov
inc
test
pop
stc
iret
repz
inc
pusha
ja
mov
mov
or
pop
imul
push
out
es
push
jp
jb
outsb
mov
outsb
or
push
mov
ret
out
mov
xor
test
inc
mov
jne
and
and
jb
fdecstp
mov
pop
int3
adcb
and
mov
mov
push
loop
call
fnstenv
flds
rcll
or
add
call
mov
loop
mov
testb
out
mov
cltd
je
jbe
cmpsb
mov
add
xchg
or
out
push
add
repnz
repnz
sbb
pop
insb
popf
pop
lahf
hlt
sbb
add
ds
jae
movsl
shrl
jns
jno
sub
sub
xchg
hlt
inc
out
call
xchg
sub
leave
jo
movsl
fsubl
jno
push
pop
ds
fsubs
call
pop
sbb
xorb
mov
xchg
push
dec
cmp
loope
and
mov
sub
mov
push
repz
jns
jle
cmp
mov
movb
xchg
sti
scas
or
push
sub
ljmp
out
or
mov
scas
mov
ficomps
sbb
fisttpl
push
cmp
cmp
pop
push
jns
dec
stos
lret
sbb
pop
sbb
cmp
or
fwait
int3
push
push
lods
cmpb
pop
das
cmp
push
rcrb
mov
or
mov
arpl
fisttps
cmp
xchg
xchg
or
rcl
mov
dec
test
sahf
or
ljmp
xchg
add
or
add
mov
push
push
loopne
call
dec
xlat
enter
cmpsb
cmc
mov
push
pusha
popf
and
pop
jmp
cli
mov
mov
popa
dec
bnd
in
push
jmp
and
stc
and
dec
xchg
mov
jmp
repz
add
mov
scas
daa
int
shrb
mov
call
or
sarb
loope
mov
xchg
push
in
or
popa
hlt
mov
mov
xor
flds
sub
or
or
sub
loope
and
or
pusha
stos
jp
inc
pop
negl
mov
clc
and
add
das
inc
dec
imul
jmp
stos
adc
and
push
mov
popf
xchg
mov
xor
push
mov
pusha
mov
clc
test
and
sub
aam
cmpsl
and
lds
push
sub
pop
subb
pusha
inc
sahf
mov
sbb
in
lret
push
repz
mov
jecxz
test
and
mov
xchg
dec
aam
lahf
imull
adc
jg
sbb
mov
pop
mov
xor
sbb
loopew
dec
enter
push
daa
mov
mov
push
stc
mov
test
jmp
mov
inc
test
aas
adc
cmovnp
lds
stos
pop
dec
inc
and
or
jmp
push
add
clc
xchg
jns
mov
loop
sbb
or
das
xlat
dec
movsl
sbb
cs
or
adcb
push
aaa
and
xor
jbe
sarl
xchg
mov
pop
mov
jno
cmp
cmp
mov
ret
xchg
pop
and
mov
repz
popf
out
mov
or
add
xchg
jno
fmulp
mov
ja
or
imul
push
sub
xchg
jbe
jb
ljmp
loopne
or
jl
cmpsl
and
add
jecxz
adc
xchg
je
call
cmp
xchg
mov
mov
shlb
cmc
sti
cli
dec
loop
dec
jmp
fldl
jmp
pop
mov
push
push
or
mov
xor
test
in
nop
ljmp
push
je
mov
dec
dec
test
add
and
fists
out
mov
shll
pop
dec
pop
hlt
inc
fisttpll
dec
pop
sub
call
xor
xor
ja
movsb
sbb
fmuls
sub
out
pop
xor
jo
ds
in
andb
push
and
popf
sbb
jg,pn
push
loope
pop
mov
daa
jae
mov
enter
xchg
repnz
cltd
stos
mov
je
and
fsubrp
rcll
adc
lods
les
cmc
jge
ss
stos
add
mov
scas
cli
or
inc
jb
shl
testl
adc
xor
adc
sbb
jmp
test
sbbb
aam
lret
cli
mov
add
cli
jp
inc
fisttpll
rclb
inc
icebp
jne
jge
icebp
out
ja
cmp
push
cmp
rol
push
das
lret
icebp
adc
mov
jo
cmp
sub
xchg
xchg
sti
call
mov
mov
test
pushf
shrl
pusha
inc
mov
push
cltd
dec
xchg
inc
add
jmp
and
push
mov
sub
movsl
dec
call
pop
cmp
push
ljmp
inc
dec
mov
fisubrl
in
repnz
lods
adcb
mov
hlt
add
pop
add
mov
xor
dec
cld
mov
mov
das
jo
push
fstl
fsubp
mov
adc
in
faddp
sub
mov
rorb
ja
jl
add
lcall
cs
repnz
test
add
and
mov
xor
cmp
cmp
mov
leave
pop
aad
or
jbe
sub
repz
jecxz
ss
xchg
jmp
das
movsb
fidivrl
inc
ficoml
pop
mov
cmpl
sbb
mov
jnp
in
mov
xor
cmp
test
dec
xor
shlb
sbb
repz
push
ja
cmp
ret
xor
cld
mov
leave
mov
clc
pop
push
enter
inc
cmpsb
inc
scas
mov
nop
fists
sub
or
std
adc
mov
sbbb
insl
inc
lods
orb
sbb
fs
jae
or
outsb
mov
enter
repz
into
or
push
sbb
call
add
dec
lods
jb
sar
push
loop
pop
cmp
mov
mov
sub
xor
push
call
xchg
fisttpll
xchg
jecxz
push
movsl
dec
inc
pop
mov
jb
in
scas
push
cli
sub
aam
adc
jnp
pop
dec
test
xchg
mov
and
mov
icebp
shll
mov
jnp
or
stos
mov
pop
sbb
pop
pushl
in
dec
add
xchg
and
popa
rolb
jge
jl
sub
lods
cwtl
cmp
loop
and
xor
mov
leave
out
dec
addb
fbstp
in
bound
pop
or
fnstenv
adc
jo
dec
leave
ss
test
and
aad
pop
fistps
sub
mov
dec
cmpsl
popf
andl
and
inc
add
xchg
out
movsb
pop
add
dec
dec
mov
repz
cmp
int3
daa
push
stc
stc
mov
or
call
mov
sbb
pushf
imul
ret
filds
pop
xchg
or
dec
cmpsb
adc
scas
adc
xchg
outsl
loop
pop
mov
push
sbb
pop
cmpsb
or
mov
fdivs
popa
add
int
or
inc
jb
in
adc
jge
jne
or
aaa
lcall
movsl
sub
lea
sbb
sbb
sub
mov
push
loop
daa
iret
mov
or
jge
push
imul
repnz
mov
mov
sarb
mov
out
aaa
mov
clc
mov
ret
fldenv
mov
repz
push
cmpsl
or
xchg
jno
push
insb
nop
es
mov
pop
jmp
inc
sha256msg2
leave
push
jae
lcall
sahf
in
fildl
popf
mov
push
inc
mov
call
cmp
imul
fsubrp
bound
mov
push
xchg
je
jmp
or
xor
push
jl
es
add
test
add
sub
push
push
js
pop
add
push
fistl
and
fwait
or
ljmp
faddl
dec
or
sub
dec
cmp
jle
xor
cmpl
push
push
pop
pop
mov
fbstp
outsb
mov
shr
cwtl
xchg
fistpl
dec
rol
and
cmp
dec
call
sbb
std
push
ror
inc
aam
cwtl
cld
pop
mov
jb
into
inc
outsl
sub
or
mov
and
adc
es
pop
repnz
xchg
daa
pop
int
inc
nop
dec
jp
dec
fstpl
and
xor
mov
call
ret
scas
jae
aam
into
bnd
lds
les
mov
pop
movsb
icebp
push
mov
push
imul
movsb
jns
mov
int3
sbb
out
dec
jmp
ror
xchg
mulb
orb
pop
call
insl
inc
cmp
adc
add
jmp
adc
pop
xchg
cld
xor
cwtl
jns
mov
lock
adc
rcrb
call
into
shl
jmp
std
or
addb
fwait
push
into
xchg
pop
ret
xchg
xchg
push
pop
push
mov
pusha
sub
movsl
in
cmp
add
jno
pusha
push
add
jmp
adc
loopne
xor
hlt
push
and
mov
or
imul
das
ds
mov
test
imul
add
sub
and
sub
sub
jmp
out
out
popa
pop
cmpsl
adc
mov
xchg
out
ret
pop
leave
fdivr
inc
mov
cmp
loope
test
adc
and
or
sbb
push
jb
lret
test
pop
cltd
popa
std
xchg
daa
sti
outsl
out
rolb
lcall
mov
pusha
clc
movsb
lods
cltd
or
jge
pop
inc
xchg
outsb
jne
iret
loopne
jg
add
aad
popf
jge
rcr
inc
dec
jnp
cltd
jmp
test
sub
jbe
pop
mov
cmpsl
jg
fucomip
outsb
adc
mulb
pop
push
sbb
and
add
push
notb
je
inc
inc
xchg
je
mov
cmc
cli
es
ficoms
mov
inc
dec
inc
or
push
rcrb
jo
mov
lea
mov
dec
mov
mov
pop
and
mov
into
cld
jb
int3
xchg
mov
and
jo
add
ficoms
jmp
push
xor
and
insb
out
xor
fmull
shr
sub
add
mov
mov
push
mov
stc
push
dec
mov
divb
mov
push
mov
push
incl
sbb
rolb
inc
mov
pop
add
cmp
outsb
sahf
lods
mov
pop
call
pop
nop
and
mov
jno
xorb
sbb
std
pushf
dec
sahf
mov
and
inc
call
add
cmc
sbbl
jo
jno
mov
mov
nop
pop
pop
bnd
clc
add
sbb
mov
ds
movsl
mov
aaa
cmp
das
inc
jge
xor
scas
pop
mov
addr16
push
movsl
push
and
rol
call
inc
aaa
mov
mov
stos
rclb
xor
stos
fiaddl
xor
sbb
ret
pop
call
loopne
and
test
sbb
sub
in
test
push
std
mov
lea
jb
pop
mov
push
popf
dec
jge
pusha
rclb
and
mov
pushf
jne
mov
outsb
adc
mov
das
loopne
bswap
dec
fs
push
movsb
gs
movsb
lret
mov
ret
loopne
push
dec
jmp
call
stos
and
scas
pop
push
pop
jmp
fiaddl
sbb
inc
pop
jecxz
mov
mov
lcall
aam
and
xchg
pop
push
jmp
scas
lret
and
jge
mov
pop
adc
les
push
hlt
pop
or
mov
and
jo
aas
cwtl
inc
or
insb
loopne
jmp
adc
mov
inc
mov
jo
push
and
ja
mov
or
mov
push
test
inc
sbb
hlt
dec
jb
lret
jle
mov
loop
push
lods
imulb
sbb
outsl
call
mov
dec
mulb
xor
jg
xor
add
pop
sub
mov
push
popf
ret
dec
das
mov
push
gs
sub
dec
rcr
cmc
or
inc
jmp
fisttps
out
sub
mov
call
out
xchg
mov
or
push
or
pop
jb
sbbb
test
push
mov
pop
mov
imul
inc
inc
mull
mov
push
adc
faddp
lahf
push
push
mov
jno
jmp
fimuls
pop
adcl
sti
es
mov
jg
je
push
push
call
test
jmp
sub
ljmp
pop
push
into
loope
inc
hlt
ljmp
and
jle
lret
mov
mov
dec
shrb
dec
push
inc
enter
or
mov
repz
push
and
js
fistps
mov
es
ja
ret
int
sub
das
or
pop
add
pop
push
dec
ljmp
and
das
ffree
pop
mov
stc
jg
outsl
lahf
xchg
arpl
fwait
sbb
call
mov
pop
ljmp
jmp
pop
or
hlt
mov
test
mov
mov
fsubr
je
fadd
add
push
adc
mov
out
iret
pop
mov
sbb
shlb
stos
cmp
dec
mov
jmp
fdivr
mul
pop
pusha
mov
gs
xchg
push
push
andb
lahf
pop
add
mov
inc
cmc
jo
int
rcll
mov
mov
mov
jb
addb
repz
cwtl
pop
or
jo
div
mov
dec
add
orl
shrl
loop
or
cwtl
mov
es
sbb
pop
add
dec
add
jl
es
or
movsb
dec
xor
fistpll
fcmovbe
lods
mov
or
outsb
or
movsb
push
cmp
mov
mov
stos
xchg
xorb
push
dec
scas
mov
stc
repnz
fisttps
negb
into
cmpsb
push
loop
std
jle
mov
mov
xchg
cmp
inc
mov
inc
push
into
pop
mov
pop
or
mov
adc
mov
decb
mov
push
test
jl
imul
mov
movb
outsl
or
inc
loop
sub
ljmp
cwtl
and
xchg
outsl
inc
sbb
mov
mov
cmp
push
cmpsl
shr
and
push
call
cmp
inc
lods
dec
repnz
inc
pop
mov
enter
aad
out
pop
sbb
mov
push
xchg
mov
sbb
inc
test
xchg
pop
divb
orl
adc
enter
nop
jge
add
repnz
call
mov
mov
repz
fs
mov
jl
push
sar
fisubs
xacquire
cmc
pop
std
sub
js
leave
inc
out
jne
dec
popf
aam
jb
inc
call
mov
or
nop
mov
fbstp
std
jae
jmp
insb
mov
xor
int3
loope
xchg
out
xchg
imul
push
lret
aad
out
data16
adc
call
mov
lret
push
jmp
outsl
fstpl
pop
mov
jae
das
xchg
sbb
cmp
popa
fistl
push
xchg
push
and
sbb
test
inc
out
shll
lods
loop
dec
ss
and
call
mov
mov
imul
adc
pop
lods
fs
ljmp
cmpl
ss
adc
sub
sbbl
in
sub
pop
sbb
addb
notb
xchg
lret
insb
testl
stos
repz
inc
das
mul
stos
xchg
cmp
dec
clc
xchg
fwait
psubsw
fwait
in
fnstenv
pop
mov
adc
ret
dec
xor
add
test
stos
mov
push
aas
fxch
inc
and
cmp
jmp
fdecstp
stc
inc
inc
cwtl
pop
sub
loop
dec
sti
pop
or
and
incl
xor
mov
ret
or
or
jmp
lcall
jne
adc
int3
ficompl
dec
mov
xor
add
jae
or
push
mov
add
stc
or
hlt
mov
loopne
sub
mov
ss
mov
adc
rcrl
call
ja
dec
iret
adc
pop
dec
dec
cld
imul
mov
test
test
cs
in
pop
push
and
enterw
xlat
test
jmp
push
lea
test
imul
mov
adc
in
aas
call
fucomip
test
mov
adc
add
jb
int3
jge
ljmp
call
xor
xor
xchg
testb
sub
daa
or
data16
int
sub
pop
mov
icebp
add
das
leave
inc
cmpl
inc
leave
lret
scas
mov
jmp
cmp
adc
pop
adc
sbb
dec
mov
in
movl
cli
xorl
xor
mov
and
dec
mov
push
ret
mov
or
mov
or
jg
dec
mov
mov
or
sbb
fisttpl
hlt
mov
pop
das
cltd
ret
mov
in
lods
mov
mov
icebp
add
add
or
dec
push
cmpsl
call
addr16
shr
xchg
push
or
push
push
call
fs
popa
pop
movsl
loope
and
rolb
fcoms
shl
inc
fistpll
pop
push
movsb
mov
repz
push
xchg
test
push
mov
sbb
pop
jmp
jge
in
aam
ret
xchg
inc
loopne
push
gs
das
imul
mov
inc
adc
mov
xor
scas
mov
rcll
push
out
icebp
fadds
inc
call
mov
mov
dec
repnz
pushf
add
or
add
mov
xchg
xor
pop
gs
mov
jmp
mov
lret
jg
nop
mov
push
or
icebp
fimuls
sub
sub
aad
rolb
jns
jmp
xchg
push
pop
mov
cmp
fimuls
adc
and
xorb
addr16
and
mov
push
cmp
movsl
or
dec
pop
ret
push
push
cmp
mulb
test
leave
mov
push
sbb
or
pop
lea
mov
jecxz
or
add
jb
mov
or
pop
and
push
inc
clc
pop
jge
push
jmp
repz
icebp
rcrb
test
test
xchg
xor
inc
jb
fbstp
sub
add
dec
out
push
and
dec
int
loop
stos
dec
je
mov
cwtl
sub
hlt
xor
xor
sarl
mov
int3
mov
imul
jecxz
loopne
adc
fbstp
xor
js
sub
mov
fsubs
mov
jmp
jge
mov
xchg
in
inc
ret
cltd
or
xchg
sbb
inc
mov
push
sbb
out
les
mov
xor
pop
pop
mov
push
add
aas
dec
movsb
xchg
sbb
lcall
insb
rorl
jmp
lret
shll
jl
pop
xor
cmp
add
icebp
or
push
roll
leave
call
and
pushf
inc
shrb
pop
dec
mov
dec
jp
pop
mov
xor
cmp
aad
jecxz
or
cmp
fadds
bnd
sbb
lock
hlt
push
cmp
xor
repnz
test
test
mov
out
ja
xchg
lock
dec
cmpsl
ja
push
ds
clc
test
lds
push
adcb
add
subb
lods
ljmp
lret
pop
or
int
push
test
mov
cmpsl
xor
pop
pop
mov
out
push
sub
lds
sar
enter
inc
out
push
or
cmp
pop
ficompl
cmp
loope
incl
adc
mov
enter
cmp
out
mov
fdivrp
nop
mov
push
mov
aad
xchg
adc
mov
fnstsw
mov
mov
inc
push
sahf
out
insl
mov
mov
scas
inc
add
icebp
mov
xchg
daa
jp
into
sub
decb
xor
call
mov
dec
adc
push
jo
inc
push
mov
push
call
push
shr
inc
adc
fidivs
xor
or
dec
xchg
mov
mov
cli
jmp
orl
mov
add
sti
or
inc
mov
sub
pop
dec
ja
lea
jmp
clc
adc
mov
fdivl
hlt
movsb
cmp
sub
bound
inc
pop
jmp
rorl
cmp
push
add
stos
sti
scas
push
sub
imul
add
psubq
pop
pop
pushf
icebp
into
fidivrs
adc
fbld
push
clc
out
loopne
mov
test
shlb
fdivrs
and
leave
dec
push
mov
push
pop
xchg
lret
in
jecxz
mov
push
shrb
pop
imul
mov
xorb
push
mov
fisubrs
es
icebp
inc
cmp
push
repz
mov
pop
out
lcall
mov
aam
push
addb
mov
pop
leave
mov
and
repz
push
mov
andb
cld
jg
or
pop
sbb
fadds
or
notb
loop
sub
mov
popf
das
or
sub
pop
xor
out
jbe
inc
jns
pop
pushf
pop
push
jno
and
and
clc
and
imul
sub
std
jne
lea
xor
mov
dec
pop
inc
add
call
pop
scas
dec
ljmp
cmp
and
mov
and
pop
cli
aas
inc
or
mov
jmp
jbe
and
adcb
jp
push
gs
lock
and
out
pop
cmp
repz
stos
adc
xchg
cld
mov
stc
or
dec
lahf
loope
xor
adc
adc
or
pop
cwtl
pop
push
ds
jle
and
dec
cmp
stos
sub
or
sbb
jl
call
movsl
fs
hlt
cmp
int3
inc
mov
daa
fs
jmp
mov
repnz
call
mov
cmpsl
jno
push
das
inc
imul
sbb
movsb
or
xchg
jecxz
push
jb
push
pusha
fsubr
cld
add
pop
call
xlat
pop
fs
in
pusha
add
inc
mov
push
pop
push
int
and
push
xor
imul
pop
cli
jns
adc
and
fdivl
push
jl
mov
push
jl
fnstenv
inc
repnz
std
and
loope
adc
push
jmp
xchg
or
or
jle
jg
in
push
sbb
cmp
push
sbb
addr16
sbb
xchg
adc
mov
cld
or
adc
les
test
cmp
jecxz
bound
lret
add
data16
or
call
fwait
orb
add
sub
push
inc
or
sbb
clc
mov
inc
insl
pop
shlb
and
rcll
mov
je
or
out
out
push
pop
or
sub
cli
fidivl
mov
jge
lcall
adc
mov
jmp
aad
ljmp
inc
test
shrl
push
adc
mov
jmp
add
xor
out
xor
int
jns
stc
or
jp
sbb
out
test
popa
lahf
adc
mov
or
rclb
mov
sbb
test
pop
call
aad
jg
in
dec
dec
add
in
push
sbb
outsb
lods
mov
out
scas
ud1
xor
ret
inc
je
in
in
push
fidivl
jmp
popf
xor
lea
lods
add
mov
sbb
or
cmp
pop
js
jbe
repz
and
sub
cmp
lret
sub
mov
or
xor
cmpsl
cmp
and
jle
or
xchg
pop
cmpsb
test
jg
dec
movsl
aam
xchg
mov
add
addr16
push
jbe
add
out
je
fs
xchg
icebp
call
push
cltd
add
mov
jo
jmp
mov
sub
or
push
into
rclb
mov
dec
and
or
push
adc
push
insl
mov
cmc
inc
fmul
cmp
cmp
jbe
xchg
hlt
popf
pop
enter
arpl
dec
mov
dec
mov
sti
out
nop
mov
mov
pop
pop
mov
in
mov
inc
insl
dec
mov
ljmp
mov
int
mov
lret
je
adc
outsl
sbb
mov
int
mov
and
mov
cwtl
flds
mov
out
or
adc
mov
aad
mov
inc
mov
sbb
mov
xchg
mov
sub
cmp
push
or
dec
inc
dec
push
insl
jae
mov
andb
or
testl
loope
and
xchg
or
or
pushf
adc
stos
popf
pushf
repz
int3
cld
sub
leave
bound
and
add
sub
sti
andl
pop
pop
mov
add
scas
mov
lods
popf
sbb
enter
inc
mov
mov
pop
add
faddl
repnz
jmp
push
lds
or
push
sub
andb
into
adc
shll
cmc
or
jmp
ret
lods
pop
or
cmp
lcall
fwait
add
jo
sbb
popf
push
not
push
sub
popf
mov
int3
push
insl
ss
inc
hlt
leave
inc
stos
pushf
ret
shrb
push
sub
scas
pop
xor
jge
mov
mov
lods
test
bound
ret
inc
push
jmp
ljmp
scas
repnz
arpl
not
insl
sub
inc
in
ficomps
mov
xchg
xchg
mov
icebp
out
loop
js
pusha
sub
fisubrl
mov
jb
pop
in
fidivrs
jmp
pop
xchg
je
mov
mov
add
lods
mov
gs
add
ret
cwtl
dec
shll
cmp
stos
enter
sbb
mov
sbb
jae
rorb
in
mov
into
jnp
xchg
jge
call
pop
lods
push
add
xor
das
cli
cmc
inc
xorl
es
mov
pop
mov
dec
mov
jnp
jno
movsl
sub
call
adc
data16
xor
jo
out
idivb
icebp
mov
cmp
dec
shrl
fldenv
imul
call
xor
stos
icebp
fldenv
cmp
test
popf
dec
cmp
subl
add
mov
sub
sbbb
js
cmc
sbb
pop
into
mov
xchg
mov
gs
cmpsl
sub
andl
std
add
mov
ja
mov
pop
divb
gs
repnz
push
loope
scas
cmpsb
pop
cmp
inc
jmp
and
xor
jnp
js
jp
add
pop
pop
xchg
sub
mov
scas
cwtl
dec
adc
sub
xchg
push
pop
cwtl
mov
dec
jb
sahf
adc
xchg
or
jmp
or
add
or
ljmp
xor
aad
dec
inc
rorb
mov
data16
sub
lock
jno
xchg
fisttps
cmp
shrl
mov
mov
jo
xlat
fistpl
push
pop
sub
jecxz
add
cmc
pop
popf
pop
adc
fwait
adc
cmpsb
lcall
mov
test
int3
push
das
push
out
mov
xor
mov
inc
pop
scas
sti
test
xchg
sbb
icebp
call
xchg
add
sbb
out
outsb
fcompl
int
dec
mov
mov
out
mov
pop
add
jb
xorl
in
pop
out
loop
or
jb
mov
jb
lods
dec
dec
or
jl
or
fisubrs
js
ljmp
xchg
cmp
lods
sti
or
hlt
stc
daa
mov
mov
scas
and
and
add
pushf
test
mov
aam
xor
xchg
jns
dec
pop
mov
nop
rorb
mov
mov
xchg
jae
inc
jmp
sub
add
inc
iret
iret
and
add
imulb
in
dec
fcmovu
mov
mov
movsl
adc
sub
cmp
adc
cltd
and
ja
inc
dec
mov
imul
call
push
jmp
addb
cmpsb
mov
testl
mov
lahf
call
aas
ror
xor
cltd
incb
sub
jecxz
jl
jns
testl
jecxz
arpl
mov
gs
xor
mov
shl
push
or
imul
jp
mov
jg
popf
clc
out
and
test
cmpl
cli
cmp
mov
dec
push
mov
mov
cmp
xchg
cmp
ss
add
out
pushf
rolb
icebp
sub
xor
clc
jo
filds
and
mov
push
sub
pop
xchg
add
or
loop
push
jmp
lea
sbb
incb
sbb
loopne
fbld
fsubrp
xor
stos
cmp
xor
call
aaa
pop
or
shlb
jb
dec
xorb
pop
fldenv
dec
lahf
mov
or
sub
inc
pusha
pop
icebp
inc
mov
push
mov
imul
addl
out
bound
roll
repz
inc
jnp
sti
imul
jmp
cmpb
or
int
enter
jmp
and
aas
cmp
les
popf
jl
jb
mov
xor
cmp
aad
fcos
jnp
das
dec
xor
ret
fsubrl
push
out
fldcw
movsl
fldcw
fsubr
in
jae
into
fsubrp
gs
lret
andb
subb
lods
je
xorl
out
mov
jmp
lods
imul
or
jo
add
sti
jno
cmp
adc
jne
out
movsb
or
lahf
mov
or
loope
andl
mov
or
clc
loop
push
or
mov
loopne
mov
push
mov
mov
sbb
test
jmp
inc
dec
pop
or
fwait
mov
cmc
jp
xchg
or
mov
jns
ds
fmulp
cmpsl
loopne
xchg
dec
dec
and
jg
enter
aam
movsl
popa
inc
popf
jnp
push
in
jno
daa
and
ljmp
adc
lods
mov
clc
xchg
pop
ret
cmpsb
or
popf
or
ss
test
fdivs
and
adc
shl
sbb
dec
xor
sub
repnz
xor
lret
mov
lock
sbb
jmp
dec
pushf
aad
in
xchg
std
jge
xlat
movsl
mov
push
mov
inc
ja
lret
and
and
cmp
loope
in
test
inc
das
in
cltd
jo
and
addr16
cmovp
adcb
fldcw
mov
fs
rorl
mov
sbb
inc
mov
push
ret
jl
cmp
pop
mov
jne
jae
pop
test
das
loop
fcomps
fdivrs
mov
cmpsb
popf
adc
sub
test
jl
lds
daa
xchg
imull
jl
and
shr
scas
ljmp
iret
scas
pop
nop
enter
xchg
les
adc
mov
adc
jmp
dec
scas
adc
fldenvs
das
push
add
gs
or
adcb
jno
xor
cmp
cmp
int3
aad
imul
sub
jne
or
out
in
mov
push
mov
call
cs
insl
jmp
aad
jge
add
call
movb
xor
mov
dec
xor
push
inc
sub
loope
jp
push
lods
sbb
jae
inc
cmp
popa
xor
loop
andl
jo
hlt
repz
pop
jp
pop
rcrl
stc
sti
mov
jno
inc
push
jecxz
outsl
int3
push
sub
fdivr
dec
adc
jg
dec
loopne
adc
sbb
cmpsb
push
call
inc
test
pop
sti
int3
or
or
and
mov
xor
sbbb
add
stc
aas
enter
lock
push
mov
test
push
addl
add
divb
jo
jmp
call
das
and
push
aad
dec
pop
mov
xor
xor
jo
or
mov
xchg
cmp
mov
cli
ja
daa
call
mov
enter
or
inc
or
and
pusha
pop
inc
mov
int
jns
scas
push
dec
dec
inc
fdiv
in
scas
cmp
push
cmp
pop
sbb
sub
sbb
call
outsb
mov
fstpl
subl
sbb
inc
popf
mov
pop
imul
and
add
xchg
dec
cmp
jmp
sub
popa
and
xchg
inc
push
lret
call
out
sarl
jns
xchg
inc
or
sub
push
mov
int
cld
push
mov
pop
mov
jp
jmp
add
popf
lods
dec
dec
scas
ret
stos
test
fdivp
xor
xchg
add
inc
int3
sub
dec
dec
stc
rcrb
xor
sub
loope
xor
aad
push
test
mov
and
call
xchg
jns
sub
int
repz
jno
adc
inc
sub
sub
dec
mov
xchg
popf
pop
xor
cmc
and
inc
fcomip
push
cmp
mov
je
js
fstpt
add
push
outsl
sbb
push
movb
jecxz
adc
fcoms
cmpsb
movsb
cli
fwait
dec
or
mov
push
push
jmp
loopne
sub
subb
sbb
and
aam
pop
jge
mov
bound
inc
fisttpl
das
imul
push
inc
notl
inc
roll
shl
jecxz
xchg
dec
clc
push
or
mov
mov
pop
xchg
das
stos
jmp
ja
push
and
xor
adc
jge
aaa
lahf
cmc
add
flds
xlat
in
dec
pop
mov
repz
cmc
aam
jmp
in
call
pop
push
mov
movsl
into
jecxz
lods
cmc
sbbb
ja
bound
adc
xor
ret
icebp
push
mov
pop
xor
call
inc
insl
sbb
adcl
clc
fcomi
adc
xchg
dec
sub
cmpsl
test
mov
pusha
or
inc
push
xor
dec
push
repnz
mov
jg
andl
imul
mov
ss
inc
sbb
stc
mov
mov
std
mov
repnz
jge
pushf
imul
mov
cwtl
lock
fiadds
das
jne
pop
jge
hlt
lods
roll
pop
xchg
iret
mov
and
cs
sbb
dec
mov
out
aaa
adc
push
xor
loop
mov
das
pop
mov
fs
fnstsw
fsts
push
inc
mov
aam
cld
pcmpgtd
aad
cmp
inc
mov
sub
inc
xchg
shr
lret
mov
dec
xchg
pop
mov
and
ret
stos
jecxz
lea
adc
test
out
adc
mov
sub
cmp
test
out
divb
flds
push
xlat
adc
pop
stos
call
xorl
jmp
mov
xchg
xchg
fidivl
hlt
leave
shr
leave
pop
sub
sub
mov
icebp
aas
sub
cmc
daa
mov
popf
std
sbb
mov
xor
ja
mov
push
cmc
mov
pop
outsl
add
vunpcklps
cmpb
jmp
adc
push
movsb
mov
aas
ljmp
daa
dec
jp
dec
add
popf
push
add
mov
jbe
and
push
enter
ljmp
sti
pop
pop
push
jmp
je
or
add
sbb
leave
or
pop
movl
add
imul
inc
xor
adc
flds
xor
inc
pop
fs
sub
mov
and
lahf
in
add
jp
ret
cmpsl
cmpsb
mov
std
mov
cmc
pushf
das
sbb
sbb
leave
and
imul
push
jmp
lret
inc
test
adc
sub
jae
cmp
push
pop
jmp
inc
test
nop
sbb
inc
insl
adc
movsb
mov
repz
hlt
push
int3
insb
cmc
jmp
sbb
push
pop
inc
cltd
sbb
cli
jecxz
jmp
in
mov
std
in
std
add
aas
mov
hlt
inc
aam
xor
mov
dec
fdivrs
xchg
xor
cmpsb
repz
inc
pop
hlt
leave
int
xchg
dec
push
or
inc
enter
mov
add
cld
cmpsb
jmp
jp
addr16
pop
adcb
mov
push
stos
js
inc
bound
mov
out
and
enter
andb
add
cwtl
sbb
cs
enter
jbe
ret
mov
cmpsb
jl
ljmp
repnz
repnz
mov
fs
sbb
mov
insl
rolb
test
push
adc
sbb
sub
jo
jno
pop
jge
xchg
shlb
or
push
lock
inc
lcall
sub
push
test
mov
cmpsl
cwtl
test
dec
mov
stos
xchg
xchg
daa
add
mov
or
sbb
int3
cmpsl
or
mov
repnz
clc
stc
lret
insl
push
mov
aaa
movsl
jge
push
enter
dec
mov
div
cmpb
pusha
push
std
scas
fcom
popa
mov
mov
jae
or
add
addb
mov
mov
jg
sti
sub
repnz
in
cld
stc
pop
add
outsb
xchg
ljmp
xor
and
dec
cmpsb
jmp
mov
mov
or
and
jae
push
xchg
ret
loopne
test
lret
cmp
mov
sbb
in
mov
leave
mov
lods
clc
out
cmp
add
mov
imul
mov
aas
pop
xchg
mov
idivl
and
popf
jns
cmpsl
hlt
cltd
xor
rcrl
sbb
clc
jmp
cmpsb
and
sub
adc
das
insb
sub
push
in
push
mov
out
inc
ret
jb
fimuls
xchg
sub
dec
push
xchg
pop
cli
and
or
loop
sti
clc
aaa
push
andb
or
and
stc
aad
jnp
sti
je
dec
push
push
rol
fisubrl
jmp
sub
dec
push
mov
popa
les
xor
out
xor
or
xchg
repnz
push
sbb
sahf
or
shl
cli
cmp
int
sti
mov
xor
loope
push
push
push
jns
mov
adc
pop
push
ficoms
inc
jmp
mov
add
cli
loop
or
sub
cmc
jo
shr
mov
push
popa
sti
mov
mov
repnz
imul
clc
mov
mov
mov
add
int
sbbb
lcall
mov
mov
mul
sub
and
shr
cmp
cli
mov
xor
sub
jmp
mov
sub
inc
mov
lods
add
mov
xchg
int3
cli
xor
mov
aam
test
inc
jmp
in
stc
popf
notb
popa
pop
sub
dec
adc
outsb
push
rcl
ja
divb
cwtl
movsb
lahf
jg
or
lret
xchg
pop
sub
adc
fists
cs
imul
add
stos
mov
in
jbe
jno
push
mov
mov
adcb
push
pop
xchg
iret
xchg
pop
cmp
insl
dec
cmp
pop
dec
jecxz
imul
push
xor
xchg
and
lea
sbbb
je
push
jmp
call
ret
adcl
jae
aaa
push
dec
cmp
fnsave
dec
fimuls
mov
jmp
inc
repnz
call
push
lret
mov
ja
aaa
ds
addr16
adc
sbb
or
les
cmp
and
mov
xor
cltd
loop
xchg
mov
xor
scas
pop
mov
ret
cs
pop
mov
rorl
ret
inc
xchg
std
in
xor
jno
push
fisubrs
push
mov
mov
xchg
fstpl
jno
pushf
push
sbb
xchg
add
aad
dec
pop
dec
testb
pop
xor
cld
add
xchg
call
sbb
inc
stc
repz
mov
push
inc
jmp
int3
ficompl
mov
sub
xor
bound
xchg
imul
jmp
sbb
jnp
pusha
lret
call
in
lcall
test
sbb
or
or
daa
or
cmp
jae
adcb
fcmovu
xchg
cli
mov
loope
dec
negl
xchg
in
or
aam
sbbb
jecxz
xchg
mov
clc
mov
in
arpl
xchg
mov
test
mov
es
lret
inc
pop
sub
ds
sbb
mov
arpl
stc
mov
clc
mov
aam
sbb
mov
std
mov
movsl
nop
push
sbb
bnd
out
sarb
and
test
test
cli
pushf
lahf
sbb
lcall
mov
dec
sub
rcrb
xchg
adcl
sbb
xor
cmp
jp
sub
sbb
loope
cmp
mov
inc
inc
mov
xorb
jo
push
addr16
bound
hlt
int3
add
rclb
sbb
add
call
sub
sub
les
fwait
cmp
inc
jo
jmp
and
xchg
les
or
insl
and
lret
aam
repnz
cmc
jge
push
out
daa
push
enter
push
inc
jge
cmc
psubsb
dec
inc
fstpl
mov
xchg
jnp
or
ret
test
mov
or
call
sub
call
ja
pop
sub
adc
jo
fld
cwtl
lret
mov
and
jo
pop
or
xchg
into
ljmp
jmp
sub
nop
mov
vzeroall
enter
push
dec
mov
push
decb
incb
jo
fdivs
sbbb
xchg
jno
or
insl
cmp
xchg
cmp
stc
lods
in
pop
cmpsl
mov
pop
subb
inc
test
add
mov
mov
jle
sbb
pop
in
fcoml
inc
xor
loopne
js
popf
jl
xor
in
cmp
dec
mov
scas
mov
cmovs
adc
arpl
pop
pop
jae,pn
adc
and
push
int
xor
cwtl
das
adc
shl
in
pop
movsb
mov
pop
mov
mov
sub
clc
loopne
or
fbld
jb
dec
repnz
popa
xchg
push
mov
mov
xchg
repz
jno
or
addb
add
and
fsubrl
jmp
fnstenv
rcll
push
mov
std
test
cmc
add
mov
or
ja
mov
mov
inc
xchg
les
or
dec
adcl
sub
rcrb
ret
adc
loop
or
loopne
mov
mov
cs
dec
mov
mov
pop
add
sbb
mov
mov
in
xchg
push
push
mov
inc
arpl
pop
popa
repz
and
cwtl
mov
ret
xlat
test
ja
dec
out
inc
loop
xor
into
out
xchg
push
mov
stos
mov
jns
add
clc
testb
cmp
cs
adc
aaa
and
mov
outsb
addr16
mov
mov
shlb
cmp
outsl
div
mov
call
push
out
loop
daa
sub
movsb
fiadds
jmp
and
xor
fidivrs
jno
ja
jb
jmp
pop
bswap
cmpsl
inc
pushf
cmpsl
pop
pop
and
add
aaa
lahf
xlat
fcoms
cmp
in
mov
push
call
dec
ja
mov
rcl
mov
sahf
sbb
out
or
jmp
bound
hlt
dec
inc
and
ljmp
xlat
testb
pop
into
scas
or
mov
sub
dec
mov
mov
call
add
dec
arpl
mov
test
loopne
xchg
add
add
rolb
repnz
enter
push
stos
out
sub
jb
inc
enter
ds
cltd
add
inc
sbb
and
push
test
xchg
mov
stos
xor
ja
sbb
nop
sub
sub
fcoms
mov
shlb
pop
inc
add
push
sbb
inc
mov
stc
int3
mov
dec
sbb
xchg
pop
sbb
arpl
dec
icebp
ljmp
jle
pop
mov
pop
pusha
dec
jnp
push
jbe
adc
lcall
negl
dec
into
mov
mov
nop
test
cltd
insl
fwait
xchg
ss
xor
push
shll
loop
shlb
sbbb
icebp
cmp
jae
fcmovb
push
call
addb
cmp
jo
cmp
das
call
shr
jp
inc
push
rcrb
dec
fwait
ljmp
pop
cli
cmp
andl
xchg
push
loop
dec
push
mov
bound
in
stos
mov
jmp
sbb
pop
jmp
mov
subb
mov
push
xor
dec
je
enter
lock
or
sti
ds
rclb
push
test
leave
lock
push
js
xor
sub
repnz
or
rcrb
lahf
dec
dec
mov
and
repz
xlat
loopne
xchg
adc
in
lock
stos
dec
sbb
lock
sub
xorb
enter
sbb
dec
or
popf
push
push
add
ficomps
push
pop
les
push
pop
out
mov
fwait
jmp
cmp
lret
jb
daa
fdivrl
pusha
jge
xlat
popf
push
mov
pop
lods
jae
dec
add
ljmp
dec
loope
in
shrb
jmp
sub
inc
xchg
ljmp
xchg
jo
test
nop
cmp
ror
fildll
xchg
push
adc
xor
repnz
jne
add
mov
sub
negb
test
mov
mov
inc
pop
sub
orl
mov
inc
sub
add
sub
loop
and
psubusb
add
pusha
dec
mov
xchg
xor
popa
cmp
mov
test
out
jae
mov
adc
add
mov
adc
into
subl
dec
jle
and
js
imul
insl
testl
outsl
or
inc
jmp
ret
jp
inc
push
sub
sub
lahf
push
pop
jo
sub
jp
mov
fwait
negl
mov
andb
adc
call
dec
in
xor
jmp
adcb
pop
leave
je
lret
mov
pop
adc
stos
call
cmc
or
std
sub
daa
push
jns
sbb
jbe
pop
das
xchg
iret
xlat
adc
call
dec
or
ret
jnp
sub
aam
imul
mov
mov
and
stos
imul
lret
out
push
test
cmp
outsl
pop
in
pop
pop
aam
add
jmp
or
pop
cmp
jmp
mov
ljmp
outsb
dec
dec
and
adc
and
mov
pop
repnz
call
daa
stc
xchg
or
insl
adc
and
insl
or
sbb
stos
sahf
int
push
es
lea
xor
negl
sub
mov
aam
xchg
mov
lahf
or
call
ja
xchg
push
test
mov
mov
xor
loope
cmp
cmc
push
lea
cli
imulb
adc
nop
call
or
mov
aad
sub
xchg
int
or
fdivrs
call
test
aaa
sbbl
cmpsl
adc
adc
and
addr16
mov
mov
add
int
inc
mov
mov
dec
pop
pushf
add
iret
pop
inc
mov
pop
arpl
cs
pushl
into
lods
jns
nop
test
cmp
movups
jae
ret
fsubs
or
subb
mov
in
mov
shlb
jge
xor
loop
xchg
jge
int
cmpsb
pop
daa
call
cli
arpl
popf
stos
fs
icebp
insb
adc
push
mov
hlt
fadd
xchg
push
or
jmp
outsl
fidivrs
cmpsb
sub
mov
cmpsb
pop
inc
xchg
scas
xor
or
jp
pop
add
testb
xor
iret
dec
mov
fisubs
stos
fbld
jns
add
mull
ljmp
inc
popa
jmp
cli
fucom
jmp
loop
fwait
inc
mov
mov
sub
call
xor
inc
jmp
mov
ja
std
or
aas
aad
mov
or
jmp
sbb
mov
daa
enter
and
xor
loopne
xchg
mov
mov
rcrb
mov
rclb
jb
mov
and
pop
add
or
mov
lods
lret
add
jmp
shl
call
jg
jmp
pop
test
jns
xor
into
scas
jo
push
in
pop
sub
mov
lahf
fldt
jp
div
adc
test
mov
adc
mov
mov
mov
das
xchg
mov
ja
and
jl
fs
jae
jns
iret
test
stos
inc
imul
mov
mov
cmp
test
sbb
call
shlb
jb
add
pop
into
or
lret
jge
adc
inc
mov
cwtl
mov
add
push
sbbl
mov
add
xchg
ss
call
mov
call
dec
or
xor
inc
mov
call
fdivp
jmp
jb
dec
scas
movsl
lret
jnp
jle
xorb
icebp
inc
push
into
lahf
xor
xchg
popa
dec
jp
xchg
xor
sbbb
rcll
push
xor
jbe
cmp
add
test
addr16
arpl
inc
shlb
imul
lods
sbb
je
es
mov
xor
sti
movsb
test
mov
aam
dec
xchg
mov
xor
pop
dec
lret
loop
add
push
push
inc
xor
addl
push
stos
aas
int3
sbb
dec
inc
mov
jp
jns
loope
push
push
fisubl
sbb
xchg
jmp
sbb
jmp
pop
cmp
or
xchg
ret
outsl
sbb
dec
pop
mov
mov
push
mov
mov
pop
test
mov
push
shl
fcompp
push
cmpsl
aad
push
repnz
push
xchg
cmpsb
incl
test
pop
fsubr
xchg
daa
pop
repnz
sub
lods
adc
popa
adc
mov
inc
adc
cmpsl
cmpsb
mov
stos
ljmp
popf
adc
sub
mov
jne
cld
int
data16
sar
test
fucomp
popf
shrb
sub
xor
jge
cmpsb
in
or
jbe
sti
fs
test
mov
dec
inc
inc
and
mov
shrb
outsb
push
js
inc
out
lods
xor
xor
mov
mov
and
mov
jge
imul
call
sub
mov
push
insb
mov
mov
das
pop
jge
xor
xor
inc
jmp
jb
leave
jbe
sub
pushf
jb
and
mov
mov
xchg
dec
mov
in
cmp
sbb
cmp
mov
imul
cmp
xorb
test
and
jnp
mov
nop
mov
jle
mov
cmpsb
fldl
or
lea
jbe
adc
xor
jmp
das
fsubl
repnz
pop
loop
or
rol
repnz
push
or
mov
mov
pop
mov
sub
dec
scas
or
in
mov
ret
jl
aad
jle
adc
scas
dec
inc
mov
mov
add
movsl
xchg
xchg
mov
jg
mov
push
es
jbe
sub
lods
cmp
inc
insl
push
pop
lock
xlat
and
dec
pop
sub
mov
or
js
aas
push
xor
push
jne,pt
test
in
xor
lret
mov
test
xor
call
cmpsl
enter
into
dec
add
shr
pop
rclb
push
fsubrl
repnz
je
inc
out
or
mov
adc
mov
sub
sub
add
in
mov
sbb
xor
out
rorb
push
pop
jne
nop
mov
inc
adc
jmp
mov
pop
pop
mov
pop
stc
sarb
jb
sbb
frstor
call
enter
lock
adc
and
mov
insl
imul
pop
jle
mov
jle
push
es
jne
or
je
pop
je
push
fdivrs
stos
and
inc
mov
mov
adc
add
scas
add
mov
and
and
jmp
sub
xor
push
call
xor
sbb
idivb
pop
sbb
rolb
les
in
fcompl
jne
sar
inc
pop
nop
mov
jl
pop
shll
cmp
sub
int
cmc
add
and
mov
fldl2t
in
mov
pop
xchg
clc
sbbb
and
rcrw
xor
or
mov
pop
add
xor
ss
push
jmp
cmp
ret
ja
int3
pop
into
icebp
fldt
mov
fwait
push
push
das
xor
mov
push
out
test
pop
adc
out
push
insl
cwtl
stos
add
or
clc
jns
out
outsb
les
pop
dec
dec
leave
pop
addr16
int3
adcl
cmp
mov
jmp
mov
jbe
cmc
std
dec
push
sub
pop
fbld
pop
dec
pop
mov
pop
out
sbb
shll
add
cwtl
push
inc
pop
mov
popa
add
add
mov
pop
hlt
push
lods
jl
lods
pusha
or
push
sbb
loopne
pushf
add
out
push
xchg
pop
lcall
mov
aad
mov
test
clc
stc
inc
sub
jb
outsl
cltd
shlb
mov
lret
pop
sub
addr16
or
add
push
shrb
or
enter
test
xchg
or
lcall
sub
not
mov
push
fs
dec
cmc
or
sub
or
cmp
xchg
popa
xor
stos
sub
xor
outsl
pop
sarl
push
sbb
leave
orb
pushf
pop
xor
inc
call
dec
add
pop
jne
push
imul
rcll
sbb
imul
sbb
xchg
call
dec
and
sti
push
and
push
fs
mov
dec
pop
inc
pop
sbb
sub
push
jp
push
inc
mov
mov
pop
jns
dec
or
je
push
fisttpl
or
jmp
sub
push
insb
sub
push
stos
icebp
push
cmpsl
and
cmpb
inc
clc
jmp
mov
in
into
pop
lret
mov
jnp
push
pop
repz
rcr
mov
mov
ss
jg
shlb
lods
jmp
sbb
push
mov
aaa
pusha
mov
sub
ljmp
or
in
and
pushf
mov
incl
sbb
xlat
sbb
test
frstor
cmp
adc
lcall
xchg
push
ja
mov
orl
repz
call
jmp
or
rclb
xor
mov
scas
lock
cmpsb
pop
int3
add
and
ret
je
xor
lahf
in
push
mov
out
or
arpl
add
and
sub
aad
push
or
subl
addl
insb
sub
imul
mov
jmp
pop
dec
ss
xor
sahf
insl
shlb
jl
dec
cmp
insl
add
adc
xor
jmp
pop
rcll
orb
ret
outsl
sub
add
in
stc
call
inc
cltd
movsl
jne
mov
cmp
addl
std
rol
jle
xor
in
popa
push
shll
jo
mov
imul
clc
cmpsb
or
movsl
sbb
fsubl
out
add
pop
stos
in
cmpsb
in
lods
xchg
js
add
pushf
std
loop
push
loopne
fistl
pushf
call
jecxz
push
int3
xchg
or
out
popa
push
bound
jmp
jns
mov
daa
adc
push
jp
push
clc
xor
hlt
test
cmc
in
ret
data16
xor
sbb
into
inc
cltd
cmpl
mov
sbb
pop
sub
int
lret
out
shrb
mov
jg
xor
xchg
fisubs
push
clc
aas
in
bnd
push
push
mov
mov
inc
shlb
xchg
into
xlat
enter
mov
dec
or
add
int
lahf
insb
mov
jne
cltd
dec
repnz
shlb
xchg
mov
aad
lods
and
or
jmp
fisttpl
loopne
add
pop
jmp
mov
daa
sahf
push
and
mov
mov
xchg
sbb
sub
kxorw
in
mov
or
pop
call
ret
js
sub
push
call
dec
shrl
ljmp
negl
fnsave
icebp
fidivrs
add
push
inc
xchg
xorl
lea
mov
aas
fsubrs
adc
rorl
jne
call
shrl
fcom
lahf
and
fnstcw
call
shrl
shlb
lret
jmp
movsl
ljmp
cld
sub
sub
out
xor
in
inc
pop
daa
je
sbb
outsl
lahf
adcb
mov
pop
adc
sub
mov
enter
jae
jbe
pushl
data16
call
jns
call
jno
mov
fdivrs
daa
dec
pop
out
pop
sbb
cbtw
out
lods
mov
std
andl
sahf
imul
cmc
jge
enter
call
movsl
add
adc
daa
xor
shrl
daa
adc
hlt
sti
fwait
sbb
pop
or
aam
pusha
push
push
push
es
es
lret
xchg
dec
pop
mov
fsubr
and
add
sahf
and
pusha
divb
push
pop
mov
cld
pop
or
lret
dec
mov
push
pop
sub
ss
mov
divb
ds
fildll
jns
and
push
or
lea
sub
xor
lret
mov
sub
call
lahf
xlat
or
fisttpl
lds
push
pop
adc
cs
insl
daa
hlt
mov
pop
push
inc
xor
pop
dec
adc
stc
test
lret
push
mov
dec
xchg
push
loope
sarb
sahf
cmp
cli
aaa
adc
stc
mov
jge
aad
cs
imul
push
mov
gs
fbld
jbe
cli
cmpb
repz
push
aaa
push
mov
xor
dec
sbb
sbb
pop
subb
sub
mov
out
adc
loop
xor
cmpsl
push
xchg
inc
test
xor
test
xor
cmpsb
movb
push
jge
iret
jmp
mov
shlb
lahf
xchg
stos
ret
cmp
lcall
mov
or
ret
subb
cmp
test
xchg
inc
ja
testl
outsl
dec
or
jb
push
jp
and
lods
xlat
outsb
add
shlb
and
or
add
mov
xor
fdivrs
push
clc
sub
stos
mov
sahf
fcomp
testl
pop
fadds
sbb
push
and
jmp
pop
add
lods
mov
cwtl
shlb
and
push
outsb
xor
mov
fsubp
pop
xchg
mov
sahf
mov
cmp
add
jmp
adc
push
xor
rorb
scas
adcl
adc
and
repnz
push
mov
jbe
push
jo
sti
test
cltd
adc
loopne
pop
dec
sub
das
mov
push
mov
hlt
xor
xor
test
cmp
dec
sub
pop
jnp
scas
lret
jno
xor
test
arpl
lods
cmpsb
movsl
pop
jb
cmp
popa
icebp
les
mov
imul
jae
loope
sub
outsb
cmp
inc
inc
das
lret
pop
sub
and
movsb
enter
mov
out
mov
clc
fildll
sub
dec
xchg
punpckhbw
aaa
jl
notl
inc
das
adc
push
add
sbb
aas
aad
cmc
in
mov
dec
call
mov
pushf
jne
and
aas
add
lcall
imul
pop
xchg
imul
out
fadds
je
or
in
cmp
aam
das
hlt
lcall
or
sub
push
mov
add
or
mov
leave
jmp
pusha
push
shr
or
jmp
jns
shrl
movsb
sbb
ljmp
lock
es
mov
or
stc
cld
xchg
test
lods
push
or
push
ljmp
sub
stos
cmp
push
pop
jmp
call
test
movsb
popa
cwtl
insb
inc
out
mov
inc
xor
push
mov
dec
fimuls
mov
jb
sub
pop
jl
xchg
mov
xor
xchg
adc
sub
push
insl
xchg
xor
idivl
popf
inc
aam
addl
push
or
pop
cmpsb
jl
mov
faddl
mov
inc
or
sbb
mov
push
cmp
adc
jo
add
push
sub
inc
push
shlb
pop
adcb
test
jns
and
dec
push
cmp
or
arpl
mov
pop
inc
clc
je
jecxz
push
push
mov
sub
or
cmp
lods
sub
add
fwait
pop
movsb
in
add
push
sub
das
loop
adcb
cmpsl
pushf
fisubrs
sub
jg
lea
add
push
out
jne
or
mov
test
dec
lock
loope
scas
mov
jle
xor
dec
pop
pop
pop
test
mov
gs
mov
loop
pop
decl
dec
imul
jmp
push
cld
pop
dec
xor
cmpsb
sahf
xchg
xchg
inc
leave
push
sub
fisubl
cltd
mov
mov
int3
movsl
dec
je
mov
mov
ret
mov
repz
add
push
mulb
out
inc
int
jae
testb
in
cmc
jne
pop
mov
sti
rep
lods
adc
push
fidivs
lock
and
sub
lods
jns
pop
test
push
xchg
and
hlt
leave
push
add
or
jno
or
push
dec
mov
loop
add
sbb
push
xor
das
testl
sub
sub
rcr
sahf
out
cmp
xchg
pop
int3
ljmp
into
add
mov
jmp
dec
add
std
adc
adc
xor
cli
ds
repz
add
nop
pop
mov
push
lea
mov
imul
mov
inc
sub
cmp
cmp
push
dec
mov
cmp
mov
mov
ret
inc
stc
stos
xor
cmpsl
daa
pop
push
adc
les
jb
inc
in
and
mov
sub
dec
push
leave
and
sar
sarb
mov
push
pop
cmpsl
sub
stos
mov
sar
shrl
xchg
push
loope
sbb
in
push
andb
mov
or
imul
das
jb
rorb
mov
xor
push
lods
adc
daa
in
adc
inc
inc
inc
repnz
push
jl
leave
jb
clc
hlt
outsb
cmpsb
das
push
adc
pop
imul
mov
mov
dec
adc
jo
jge
sahf
repnz
sub
add
sbb
test
mov
ja
outsl
sbbb
adc
mov
lods
push
push
push
call
les
test
inc
or
sub
sbb
fs
lock
push
jle
pop
push
sbb
jmp
inc
inc
xchg
xor
push
adc
add
jnp
inc
es
or
fidivrl
add
inc
mov
test
adc
insb
xchg
pop
cmp
sub
sbb
jno
jnp
je
out
xchg
sbb
into
add
push
popf
xchg
jno
jmp
mov
adc
adc
or
popf
jecxz
pop
out
inc
pop
clc
mov
mov
push
or
sbb
incb
add
sub
loopne
add
xchg
call
jbe
sub
push
jae
pop
jb
add
cmpsl
ja
mov
or
or
inc
iret
je,pt
popf
push
mov
aaa
ja
lods
sub
dec
or
push
data16
fucomip
adc
rolb
and
std
aaa
imul
call
out
mov
insl
data16
leave
pop
pop
sub
aad
je
mov
shll
insb
lret
fistl
in
mov
dec
pop
jo
sub
xor
mov
mov
pushf
xor
jns
loopne
push
push
repz
fdivrs
lcall
adc
in
imull
xorl
adc
aaa
pushf
and
push
inc
push
or
pop
xchg
push
mov
sub
mov
lds
jo
test
icebp
mov
outsb
mov
or
shl
pop
mov
pop
jo
fwait
repz
adc
out
mov
rcr
sub
shll
and
repnz
fs
jge
in
xchg
xor
adcb
or
push
add
scas
outsb
icebp
push
call
stos
cmp
or
or
fstl
roll
jecxz
in
dec
add
movsl
fidivrl
and
and
dec
jmp
repnz
clc
outsb
cli
mov
mov
mov
call
push
test
loope
push
int
sub
inc
jge
inc
push
add
ret
hlt
imul
loop
jne
mov
fistpll
mov
xchg
inc
push
cmp
les
lcall
xchg
lcall
push
sub
mov
mov
fimuls
ficoml
xchg
cld
fstps
loopne
pop
cmp
addr16
add
pop
shrl
test
into
movsl
or
mov
xor
inc
sbb
fisttps
mov
xchg
nop
cs
or
imul
mov
or
and
mov
les
repz
jg
or
sbb
mov
add
push
jae
call
mov
pop
jmp
mov
push
sbb
push
jns
push
ss
imul
daa
xchg
jp
mov
sti
inc
mov
aaa
sbb
rclb
inc
cwtl
mov
in
pop
adc
shr
imul
imul
int3
mov
cltd
or
mov
jno
movsl
xor
push
add
xchg
jns
lahf
adc
nop
into
push
pop
divb
xchg
inc
sti
flds
adc
fldenv
enter
ret
shlb
xor
push
sub
or
pop
ret
hlt
xlat
mov
call
sub
cmc
cli
in
and
int3
fwait
popf
imul
cltd
jne
pop
lods
cmp
pop
mov
push
dec
lret
mov
pushf
xor
fwait
inc
ljmp
xor
ljmp
add
daa
push
mov
aaa
mov
pop
leave
xchg
mov
push
or
jno
xor
mov
and
loopne
or
lahf
pop
or
sbb
je
xor
fstpl
in
test
orb
add
push
scas
xchg
mov
jecxz
jb
inc
aad
xchg
or
test
push
loopne
mov
fldl
cmp
scas
pop
test
mov
mov
or
jb
jne
add
roll
push
mov
call
into
call
lock
outsl
fdivrs
cwtl
push
xchg
loopne
mov
fldl
pop
xor
das
jns
push
cwtl
jg
popf
add
jo
leave
xchg
fnstenv
test
mov
idivb
jmp
sub
repnz
push
xor
sbb
shr
mov
push
dec
js
xchg
push
xlat
sub
pop
mov
sbb
jl
pop
inc
xor
into
addb
ret
add
add
and
stos
xor
mov
lods
dec
aam
jno
jmp
movsb
mov
sub
scas
int3
or
xor
into
jns
pop
insl
jo
shl
jmp
push
adc
adc
xor
and
and
mov
push
mov
pop
add
fwait
mov
jns
add
mulb
push
stos
jg
push
push
shrl
mov
imul
or
sbb
ja
mov
mov
and
clc
mov
cli
outsl
jp
loop
xor
cmp
push
jne
cli
lahf
lret
sub
dec
push
cwtl
ret
sub
inc
cld
call
or
dec
insl
jge
int
in
jmp
dec
dec
sbb
stos
adc
sbb
mov
shll
adc
aaa
inc
pushf
jmp
std
stos
inc
js
test
in
add
add
sbb
mov
jmp
scas
jle
xor
test
and
jmp
cmp
lcall
mov
movsl
inc
popa
hlt
cwtl
addr16
mov
or
outsb
inc
pop
xchg
cs
push
imul
lret
sub
sarb
imul
insb
in
cmpb
fnstenv
test
ret
and
cld
xchg
imul
mov
clc
cmpsb
test
cmp
sub
mov
inc
inc
test
mov
xor
in
jmp
fisttpl
imul
or
mov
orb
add
negl
fstl
sbb
adc
inc
xchg
call
and
add
shrl
adc
pop
jae
xor
sahf
sub
and
xchg
mov
or
mov
movsb
add
inc
sbb
dec
fcomi
dec
mov
in
mov
sub
pop
das
inc
and
sbb
mul
or
cld
dec
scas
cmp
stos
push
add
ljmp
jno
mov
sub
sub
cli
lods
push
dec
push
lahf
jle
xor
int
jmp
in
add
stos
icebp
stos
adc
mov
sub
inc
outsb
or
dec
push
out
cmc
lods
inc
mov
sub
addl
hlt
rclb
shl
stos
int
or
adc
je
mov
stc
add
test
dec
test
cmova
mov
cmpsb
jae
scas
and
or
push
xchg
popa
push
bound
inc
fsub
notl
and
ret
rolb
jge
or
push
sbb
jne
ds
pop
imulb
push
sbb
add
jecxz
or
ss
sub
lock
add
call
insl
pushf
cmpsl
push
je
push
sbb
push
xchg
pusha
mov
push
or
xor
inc
lahf
das
and
jp
lahf
push
xor
xor
xchg
rcll
std
sarb
popf
lods
lret
push
test
pop
cwtl
xchg
mov
mov
dec
xchg
mov
push
xchg
popf
daa
xor
test
add
jns
mov
add
sbb
ret
push
movb
pushf
xchg
mov
cmpsb
shlb
clc
jg
mov
and
jae
icebp
ja
add
call
push
mov
daa
inc
add
pop
ret
jb
xlat
in
xor
or
pop
stos
or
inc
fnsave
mov
xor
mov
xor
add
ja
dec
push
inc
fisubrs
or
cli
or
call
push
inc
ret
pop
mov
loope
cmp
ljmp
xor
sub
cmp
arpl
push
in
lahf
jnp
daa
or
pop
sub
mov
roll
int3
mov
push
leave
mov
ja
and
mov
repz
jmp
inc
or
arpl
int3
addr16
xor
call
dec
sahf
sarb
push
sbb
ret
mov
mov
insb
mov
pop
push
cmpsb
bound
cmp
push
shlw
jmp
call
repz
cmp
stos
cwtl
and
mov
push
pop
filds
mov
xchg
loop
rorb
jmp
mov
popf
test
inc
mov
or
and
dec
mov
sbbb
in
push
mov
add
cld
test
adc
xor
sub
cmp
fistps
xor
mov
addr16
xor
push
into
pop
mov
inc
shlb
add
xchg
dec
repz
cltd
pop
aad
push
or
mov
dec
mov
fdivrl
lahf
stos
das
test
and
push
outsl
testb
xlat
or
mov
pop
mov
xchg
jb
inc
filds
or
or
xlat
xchg
das
jmp
ss
popf
dec
shlb
fs
adc
mov
jnp
test
and
mov
push
out
pop
cld
repz
dec
inc
mov
mov
add
xchg
pop
pop
sub
cs
add
and
out
subb
sub
mov
jmp
xchg
out
jmp
test
jge
int
ret
pop
lahf
lahf
sub
sub
add
mov
xor
aad
dec
ret
mov
lods
ljmp
pop
stos
leave
pushf
push
jno
xor
pcmpgtb
stos
jle
test
jle
fisubrl
mov
out
jns
push
or
jge
movsb
stc
ret
xchg
sub
insb
mov
pop
mov
jno
add
cmpsb
mov
sub
jne
loope
or
push
ret
lods
popa
addr16
adc
outsb
js
jb
fnstcw
mov
dec
pushf
dec
mov
test
jnp
in
mov
jp
call
test
mov
dec
push
movsb
mov
xchg
add
mov
pinsrw
outsb
adcb
xor
lods
jecxz
icebp
subl
or
fs
add
push
test
sbb
and
jb
mov
pop
jmp
mov
or
pop
push
cmpsl
jecxz
dec
lods
inc
adc
mov
dec
out
xor
andb
lods
cmp
add
iret
or
loopne
sti
xchg
sub
sub
dec
sti
cmp
or
inc
jbe
sbb
andl
and
add
mov
addr16
add
fildll
sbb
xor
add
sbbb
push
xchg
add
enter
rcll
mov
lcall
mov
arpl
stc
dec
xor
pop
call
testl
cmpsl
sbb
ret
ret
adc
pop
adc
push
ljmp
xchg
out
lret
fsubrs
jmp
outsb
pop
mov
fimull
lods
mov
lods
adc
fcomi
add
arpl
mov
jae
lahf
dec
jb
bnd
int
outsl
lea
mov
xchg
adc
daa
xor
inc
mov
add
cmpsb
les
add
call
mov
jmp
mov
cmc
dec
jmp
aas
push
rcl
and
or
into
mov
fmull
push
dec
ds
lret
jae
addr16
mov
lret
aam
or
jno
pop
cmc
repz
push
mov
daa
adc
outsb
and
unpckhps
push
add
sbbl
imull
daa
sti
dec
ss
mov
push
les
inc
jle
inc
push
sbb
mov
push
imul
stc
js
ret
insl
mov
rorb
jle
add
cmpb
out
lds
push
mov
fiadds
call
lret
fdivs
sti
lcall
call
adc
sub
adc
pushf
icebp
mov
xchg
call
sub
rcl
out
mov
dec
scas
pop
cltd
xchg
pop
push
aaa
scas
filds
and
outsb
loop
mov
lahf
imulb
popa
push
sahf
lock
sbb
movsl
call
jnp
xor
sbb
cmp
dec
in
call
cmp
clc
mov
cmpsb
jnp
pop
push
dec
mov
std
lcall
push
cmp
dec
inc
inc
cmp
and
xorb
popf
inc
loope
je
loopne
push
stc
aaa
push
xor
cli
sub
xorb
lock
or
cli
gs
or
sub
shl
ficompl
lea
dec
jmp
mov
rcrb
fbld
and
mov
aas
add
or
hlt
cmp
or
gs
jnp
roll
es
cmp
pusha
adc
push
push
js
icebp
inc
subb
mov
jp
and
pop
in
orl
jmp
or
jmp
sub
lea
psllw
data16
int3
add
mov
mov
pop
sbb
mov
insl
push
sub
cmpsl
aas
xor
jg
outsb
cmp
movsl
xlat
or
std
xchg
imul
cmp
xor
fisubs
ret
adc
insb
sub
sbb
pop
rorb
jne
mov
jl
inc
lea
mov
test
sbb
imul
fisttpl
or
pop
idivl
leave
add
add
popf
cmp
lea
cmpl
xlat
dec
aaa
test
mov
fstl
mov
int
push
loopne
mov
iret
xchg
or
push
call
popl
out
mov
cmc
pushl
ret
popa
mov
add
mov
push
test
xchg
aas
loope
pop
cmp
jmp
enter
lock
in
mov
jno
dec
lcall
call
je
in
mov
into
test
lahf
icebp
or
adc
or
add
push
mov
js
scas
jb
pop
inc
popa
pusha
or
je
mov
jmp
mov
pushf
aas
mov
rorb
js
jecxz
pop
popf
mov
ljmp
pop
lock
jp
out
xchg
popf
popa
adc
orl
push
loope
cwtl
cmc
jno
or
push
sahf
addl
add
pop
pop
test
and
xchg
jmp
mov
xchg
pop
or
icebp
sub
in
add
inc
dec
and
frstor
ljmp
sarl
jl
and
iret
mov
inc
add
pop
pop
inc
sbb
ja
jp
inc
sbb
pop
push
sub
lahf
lret
shl
inc
jmp
pop
cmp
imul
ljmp
pop
jbe
scas
loopne
movsl
pop
xor
lock
pop
jbe
and
xchg
mov
test
arpl
imul
testb
negl
jge
xor
cmc
sub
jmp
pop
pop
dec
push
xchg
jecxz
call
mov
mov
mov
sbb
lret
test
mov
sub
mov
mov
mov
cld
xor
das
std
imul
js
lahf
pop
dec
shll
push
arpl
and
test
inc
rolb
xchg
lock
and
jle
ret
add
lret
jno
mov
into
adc
loopne,pt
lds
pop
shll
pop
clc
in
ret
sbb
in
mov
ficomps
pop
arpl
and
push
or
xor
mov
pop
mov
jmp
insl
adc
mov
and
mov
jmp
fwait
dec
and
xor
clc
enter
mov
rcr
cmp
mov
nop
add
jae
xor
dec
pop
movl
enter
imul
jmp
sbbb
lds
lods
ljmp
jne
outsl
pushf
jno
fisubrs
mov
lods
cmpl
or
dec
jg
roll
push
enter
jge
cld
push
dec
lahf
ljmp
jp
add
cmp
mov
mov
int
stos
xchg
sbbl
stos
sub
mov
sub
hlt
scas
lret
insb
shl
daa
shlb
ljmp
cmp
jmp
mov
and
xor
in
icebp
mov
mov
popa
xor
adc
cmp
xorb
hlt
jmp
stc
pop
inc
mov
call
jmp
inc
addb
cltd
mov
lret
pop
call
test
add
lods
addb
lds
imul
or
popa
jg
outsl
push
call
pop
mov
cmp
add
rcll
and
mov
sub
arpl
add
xchg
mov
mov
jo
mov
add
inc
dec
nop
mov
call
cs
sbb
xlat
add
mov
aad
test
mov
popf
jne
or
pop
std
loope
leave
aad
notl
add
jge
xlat
movsb
sbbb
pop
das
nop
icebp
inc
pop
movsl
push
pop
lods
inc
jnp
push
scas
push
dec
xor
movsl
adc
mov
add
adc
fisttpl
sbb
push
rorl
mov
fsincos
mov
out
push
ljmp
js
add
jb
outsl
mov
inc
clc
out
out
mov
inc
insb
sbb
mov
xchg
aam
inc
sub
sbb
movsb
mov
call
mov
andb
call
inc
pop
mov
or
movsb
jmp
jmp
dec
cmp
inc
out
and
in
cmovs
or
daa
xor
push
pop
pop
cmp
xchg
mov
or
mov
popf
xor
jl
fisttpll
push
mov
scas
dec
mul
scas
cli
sbb
insl
je
scas
xor
jmp
push
call
cmpsl
rorl
dec
sbb
in
loop
push
add
sub
xchg
ret
andb
mov
and
hlt
jmp
ret
shlb
and
test
jno
or
test
and
or
popa
dec
loopne
pop
dec
stc
stc
mov
mov
movsl
push
mov
xlat
push
push
rcrb
inc
and
icebp
notl
sub
xor
cmp
or
jg
repnz
sbb
pop
sti
adc
mov
push
pop
xor
cs
icebp
in
std
ficoms
mov
add
enter
nop
pop
or
pusha
cmpsl
xchg
pop
fldcw
xchg
jmp
enter
mov
and
sti
das
cli
into
mov
nop
push
ljmp
pop
push
add
fstl
test
sub
mov
xchg
ja
jle
cmp
cmp
nop
test
lret
int
or
stos
push
jbe
sahf
repz
push
outsl
mov
and
pop
jo
dec
mov
mov
je
sub
das
std
xchg
jno
jmp
mov
lds
stos
fnstsw
add
cltd
aas
iret
das
mov
outsl
mov
jno
xor
sub
and
mov
cld
jmp
push
mov
add
mov
testl
mov
xchg
cld
pop
inc
add
push
push
or
push
dec
mov
add
test
adc
mov
inc
xor
std
into
xor
sbbl
sub
push
icebp
pop
call
int3
lods
cmp
leave
push
movsb
and
push
call
insl
movsl
pop
sub
pop
sbb
cmp
enter
lahf
add
jae
jp,pt
xlat
fld
jb
rcl
pop
jp
sub
add
or
int
inc
xor
test
sub
outsl
fstps
cwtl
cmp
dec
add
jo
das
sbb
shll
xor
add
cmp
jmp
fucomip
nop
data16
push
jae
mov
ficoml
sti
inc
daa
jmp
lcall
rcr
mov
shl
jae
jg
mov
mov
cmp
mov
das
inc
add
clc
mov
jno
inc
sti
mov
cmp
push
adc
subps
popa
loopne
sarb
mov
cmp
sbb
jmp
mov
test
pop
popa
xchg
adc
call
add
arpl
sbb
dec
xchg
int3
mov
sbb
ljmp
jl
hlt
loope
imul
push
js
sbb
cmp
adc
movsl
add
stc
orb
stos
dec
pop
push
jmp
xchg
divl
lock
orb
or
xchg
iretw
add
inc
dec
adc
sub
test
mov
xor
arpl
test
leave
mov
push
icebp
call
mov
jg
lret
js
pop
fldl
ja
xchg
mov
cmp
rorl
xchg
mov
xor
mov
push
jmp
int3
lds
call
std
jne
clc
ficomps
in
push
stos
or
jmp
cmp
sub
dec
stos
int3
les
jg
mov
adc
mov
lahf
push
push
lcall
aam
aad
es
call
lods
daa
pop
add
scas
jno
mov
fstpl
add
loopne
shr
inc
ror
das
dec
push
inc
pushf
sti
seta
out
insb
sbb
mov
adc
das
or
mov
mov
pop
or
or
dec
jl
mov
stc
orl
rorl
addl
loopne
std
loope
icebp
pop
pop
jae
daa
xor
mov
pop
mov
add
jmp
imul
xchg
mov
and
pop
pop
xchg
cmp
sub
push
fnstsw
dec
and
ljmp
je
xor
std
daa
mov
sti
pusha
repnz
aad
push
and
inc
xchg
pop
jmp
testb
fsubrp
lret
loop
cmp
rcrb
addr16
sahf
mov
mov
cs
sbb
mov
lods
cmp
or
clc
cwtl
sub
xchg
stc
in
adc
fs
cwtl
js
or
subb
out
ja
cmp
push
ljmp
imul
pop
hlt
jl
sbb
push
mov
jle
imul
push
jnp
popl
adc
imul
push
mov
pop
lahf
pop
xchg
jge
pop
pop
aad
aam
loope
lahf
imul
sti
repnz
inc
insb
addr16
mov
sub
inc
xor
adc
jecxz
sti
fs
enter
cld
adcb
pop
loop
leave
ds
fstps
or
mov
cmpsb
and
xchg
xchg
pop
xor
cmc
in
jo
mov
jmp
jo
mov
andb
mov
loope
pop
adc
test
add
push
cltd
jecxz
adc
sub
add
cld
push
xlat
and
xchg
sbb
push
test
repnz
out
orl
mov
call
push
lds
test
ret
push
or
jbe
sti
sub
jnp
jge
or
in
out
cmp
inc
mov
xor
or
cmpsl
xchg
add
push
mov
jg
aaa
adc
nop
push
insb
push
mov
push
pusha
add
adc
mov
push
loop
jbe
mov
clc
sub
push
lahf
scas
stc
push
ljmp
mov
pop
rcll
push
jnp
sbb
xchg
jmp
shrb
pop
stos
dec
cmpxchg
rolb
cmp
pop
pop
jmp
negl
call
jo
push
mov
or
push
js
movsb
arpl
xchg
es
or
adcl
add
addr16
in
sti
int
call
lret
sub
outsb
pop
das
push
pop
test
sbb
or
xchg
push
mov
xchg
inc
dec
sub
lods
call
loopne
lds
push
push
jae
jnp
pop
test
fisubrs
push
mov
jae
add
call
push
negl
pop
jae
or
mov
mov
add
andb
rcrb
cmp
mov
popa
stc
stos
jno
mov
jnp
pop
imul
mov
shrl
cmpsl
or
dec
mov
push
and
xor
sarb
xor
cmp
fmul
push
jno
sbbl
enter
mov
sbbl
iret
lcall
push
push
inc
in
je
xchg
and
cmpsl
and
pop
ds
int
mov
outsl
out
inc
loop
in
mov
out
pop
test
push
sub
push
fbstp
psubusb
shll
fimull
cli
js
sub
std
lret
mov
sub
pop
push
inc
push
mov
pop
aas
sbb
sub
iret
mov
mov
stc
mov
mov
stos
mov
movsb
mov
sbb
or
scas
hlt
inc
vpshlb
xor
jmp
sub
icebp
mov
sub
push
sbb
ss
orl
push
or
mov
jns
or
negl
daa
lahf
mov
mov
sbb
mov
xchg
mov
adc
dec
dec
sti
mov
int3
or
add
mov
aad
data16
jmp
sbb
sbb
add
mov
mov
or
inc
bound
mov
xor
cmc
mov
push
xchg
nop
xor
inc
sbb
push
add
das
fisubrs
sbb
test
push
pop
and
mov
sbb
xchg
dec
ljmp
out
cmpsb
lods
lds
push
jb
es
mov
insl
jp
or
mov
add
lea
or
cs
inc
push
test
cld
sub
xchg
dec
mov
mov
test
adc
mov
mov
aad
enter
xchg
cmp
inc
adc
jns
pop
xchg
jecxz
inc
cld
push
mov
inc
shl
mov
mov
bound
jbe
dec
nop
mov
or
cmpsl
xchg
div
fcomps
ljmp
or
es
xchg
jmp
addr16
ret
clc
ja
imul
daa
jbe
pop
jno
pop
pop
sti
cmp
roll
das
clc
add
mov
and
inc
cltd
or
push
jp
lahf
negb
mov
inc
mov
aad
sub
and
pop
jl
call
push
push
jmp
or
roll
enter
push
pop
out
iret
mov
sub
out
cmp
sub
mov
fwait
imul
and
push
xchg
in
pop
bound
or
jb
mov
pushw
repnz
iret
filds
cmpsl
or
loop
pop
fwait
jb
mov
insb
fsubs
sbb
cmp
add
pop
das
arpl
andl
sub
jp
in
xor
jno
lods
xchg
pop
gs
jo
and
sbb
mov
cmp
movsb
or
ljmp
sub
sub
and
es
xchg
nop
stc
sub
repnz
sbb
jb
xchg
pushf
aam
daa
out
dec
inc
xchg
hlt
sahf
mov
jl
jecxz
lods
aas
xor
int3
jmp
inc
inc
mov
jb
inc
push
pop
pop
and
and
pop
imul
xor
mov
push
inc
inc
jo
pop
mov
and
jns
imul
xchg
mov
lods
jbe
lods
ljmp
popf
testl
repnz
faddp
push
pop
jmp
add
lock
push
cmp
push
mov
add
mov
adcb
sbb
and
sbb
ret
lret
xchg
fstp
sub
insb
pusha
sub
movsl
in
dec
sahf
add
push
xor
cwtl
pop
call
sar
fldl
dec
mov
mov
mov
jbe
insl
fsubrs
inc
mov
sti
xchg
out
jg
in
inc
inc
sarb
push
dec
add
hlt
mov
pop
xlat
add
sbb
jnp
ja
cmc
or
in
imul
jo
inc
pop
into
loop,pn
or
imul
xor
lock
cmpsb
sub
mov
add
icebp
sarb
clc
outsl
mov
sbb
or
fiadds
or
and
idivl
mov
clc
pop
popf
jno
in
push
aaa
mov
sbbl
imul
push
jbe
xor
mov
or
xor
or
inc
push
pop
loopne
call
loopne
icebp
jmp
cmp
inc
call
adc
jg
mov
call
rcl
jp
jnp
sub
mov
mov
pop
dec
add
popa
es
mov
mov
pop
clc
movsb
push
add
xor
das
mov
push
xor
mov
inc
std
insb
push
xchg
cltd
jp
jb
pop
lcall
pop
daa
loop
mov
inc
mov
push
push
and
add
cmp
push
jmp
call
cmp
fsubrs
testb
or
push
inc
pop
add
pop
add
or
jmp
js
or
mov
adc
sub
mulb
sub
stos
mov
mov
call
pop
xchg
cmp
popa
movsb
popl
cmpsb
icebp
cmp
iret
js
cmp
add
aam
jmp
xchg
jl
inc
mov
es
mov
call
xor
es
mov
mov
pop
inc
mov
pop
popf
mov
mov
sbbb
out
or
xchg
mov
mov
in
adc
or
cmc
mov
pop
stos
mov
cmp
mov
es
int3
call
sub
pop
or
ficomps
push
movsb
push
call
clc
int
lods
sbb
out
cli
cmp
inc
push
push
push
out
sahf
fisubrl
mulb
inc
or
test
dec
cli
cmp
test
mov
dec
add
jge
mov
inc
jge
and
adc
jp
add
cmp
jmp
inc
adc
sahf
ljmp
hlt
push
dec
jle
ljmp
cli
xchg
jge
mov
rorl
leave
frstor
xchg
adc
lahf
ja
dec
ret
sub
icebp
rorl
or
add
inc
mov
cld
mov
fiaddl
mov
fcmovnu
lret
or
ja
inc
dec
mov
inc
pop
lahf
xor
gs
mov
pop
ret
jno
dec
mov
mov
ljmp
hlt
dec
leave
mov
decb
addb
testb
xorl
adc
mov
inc
mov
cwtl
cltd
popf
inc
xchg
push
pop
lahf
cmp
pushf
iret
sbb
cmpsl
pusha
insb
jmp
cld
sbb
jo
popf
int3
mov
rorl
lahf
jbe
xchg
sbb
xchg
jbe
pop
fadds
and
cmp
into
or
pop
idiv
dec
xor
int3
mov
xchg
test
jne
mov
or
aas
ja
ljmp
sub
dec
fisubs
in
and
cmp
mov
repnz
pop
aam
mov
pop
pop
mov
sbb
out
or
insl
cmp
mov
call
and
loop
mov
mov
clc
sub
jmp
and
adc
and
ja
insl
in
mov
mov
dec
movsb
xor
push
mov
xchg
fisttps
sub
cmp
jmp
inc
add
and
push
mov
add
dec
sarb
cmpl
stos
jmp
test
stos
call
mov
pop
mov
xchg
rolb
aaa
xor
and
int
inc
inc
pop
aam
mov
ret
xor
and
pop
and
sub
adc
das
roll
pushf
add
mov
sub
lret
jmpw
scas
push
call
adc
sbb
and
jmp
push
or
and
mov
mov
add
mov
call
pop
lcall
sub
add
fidivl
sahf
ljmp
dec
sub
and
pop
daa
ret
sub
js
stos
mov
sti
inc
stos
mov
mov
scas
setae
inc
sub
negl
push
test
cmp
cmc
push
and
jmp
test
push
sub
out
or
subb
sbb
cli
adc
cmp
inc
mov
pop
in
push
push
inc
or
sbb
pop
aam
and
cmpsb
and
outsl
jge
outsb
add
cmp
sti
sub
mov
shlb
xchg
stc
jo
push
push
push
call
mov
mov
sbb
add
pop
out
insl
mov
fmul
icebp
fwait
iret
pop
jmp
pop
mul
xor
mov
mov
inc
jno
incl
jge
fstps
ss
addl
and
lea
pushf
and
xorl
push
mov
sub
in
lock
test
pushf
mov
and
stos
call
jg
pop
and
aaa
or
fs
xorl
incb
popl
jmp
pop
sbb
shll
hlt
add
pop
sub
ret
rclb
mov
jo
pop
jmp
orb
test
pop
call
adc
icebp
in
xor
mov
adc
add
das
stos
inc
int
lcall
jle
push
mov
mov
aam
push
jno
mov
daa
ja
pop
xchg
mov
sub
jno
add
cmp
fmul
daa
push
mul
sub
add
push
lahf
fsubs
mov
adcb
push
mov
or
pop
inc
ja
cmp
add
subl
inc
leave
push
mov
sub
mov
cwtl
subb
out
insb
popf
add
dec
inc
adc
lret
pop
out
movsb
mov
jg
jno
jmp
push
cmp
cmp
paddusb
inc
bound
popf
mov
adc
pop
test
add
push
mov
sbbb
mov
das
sub
dec
aad
jecxz
cmpsb
sub
mov
push
ljmp
lret
popa
add
test
mov
xor
pop
or
push
adc
in
xor
cmc
adcl
adc
test
mov
lods
xchg
mov
jnp
gs
add
inc
push
push
add
sub
lds
jb
xor
jno
mov
pusha
outsb
call
inc
pusha
pusha
stos
jo
mov
xor
push
and
inc
cli
out
jne
negb
xor
pop
xchg
add
mov
dec
lcall
pusha
fstp
cmpsb
das
das
pop
or
dec
das
xor
popa
js
mov
loop
repz
les
pop
stc
leave
mov
jg
push
push
aad
and
test
pop
cmp
push
or
mov
das
imul
std
cmc
cmpb
sub
je
repnz
stc
xchg
add
loope
xor
inc
jmp
out
pop
mov
popf
dec
mov
pop
lock
add
movsl
flds
jl
dec
dec
sub
mov
stos
fcoms
push
and
or
pop
mov
enter
lret
imulb
ficomps
adc
popf
push
push
pop
mov
adcb
cmp
andb
sbb
dec
cmp
lds
xor
sub
adc
push
or
mov
daa
fmul
add
lods
mov
je
jb
outsl
hlt
pop
imul
std
sbb
lods
lret
cld
pop
mov
or
mov
jle
sbb
and
iret
repz
inc
hlt
push
inc
insl
fsubl
es
push
push
and
clc
mov
aam
jb
adc
xchg
mov
xchg
cltd
mov
popa
add
mov
inc
mov
dec
out
mov
cmp
or
cmc
sbb
in
clc
xchg
cmpsb
scas
insb
or
push
jp
jne
call
testb
pop
lds
jle
and
mov
inc
jecxz
loope
mov
jmp
xchg
div
adc
orl
jl
shr
add
and
inc
push
jo
mov
jp
xchg
test
mov
rcrb
mov
stos
and
jmp
mov
mov
cli
jmp
aas
fst
mov
and
mov
icebp
xorl
fs
mov
xchg
or
popf
imul
mov
addl
mov
push
dec
fcoml
repz
add
xchg
call
jae
fwait
dec
int
mov
xchg
mov
mov
call
cmc
in
repnz
cmpsb
stos
mov
loopne
scas
lcall
stc
cwtl
lcall
enter
repnz
mov
xor
adc
inc
mov
int
sub
stos
aas
cmp
mov
push
in
mov
cli
loop
addb
push
mov
lret
leave
push
mov
fildl
jb
into
lahf
stc
jne
int
push
jmp
aad
or
pusha
clc
and
or
and
mov
shlb
leave
notl
pop
jge
inc
ficoms
in
popa
imul
xor
lret
or
clc
iret
jno
movups
adc
push
test
jmp
mov
icebp
xchg
sahf
mov
sar
enter
dec
push
dec
inc
pop
fdivrs
and
jb
inc
pop
lods
or
sbb
sahf
mov
repnz
scas
punpckhbw
cwtl
inc
mov
inc
call
or
insl
insl
lock
subb
daa
dec
popf
xchg
imul
int
int3
sbbb
push
or
mov
dec
rcrl
clc
pop
add
inc
test
sbb
cltd
lods
pop
or
xchg
mov
lods
jb
ret
sub
sbb
push
jecxz
push
mov
incl
or
pop
fbld
pop
inc
aad
inc
int
or
repnz
jb
testb
cwtl
xchg
stos
outsb
fstp
xchg
cwtl
movsb
arpl
hlt
leave
cmpsb
daa
or
mov
cmp
push
cmp
jge
cmp
outsb
insb
jg
push
ret
jne
cmc
icebp
xlat
or
and
sbb
mov
jle
mov
call
dec
js
pusha
xor
jo
clc
mov
xor
push
repz
xchg
fistps
mov
js
aaa
fdivp
daa
adc
mov
jne
lret
xor
jo
inc
dec
mov
add
adc
xchg
sub
cmpl
cli
push
jb
mov
test
aaa
push
ja
cmp
cmpsb
push
stos
loopne
call
shll
cmp
pop
arpl
call
sbb
loop
inc
inc
adc
or
lock
mov
mov
sub
mull
mov
cmp
dec
aam
enter
hlt
mov
lret
inc
add
push
popa
sub
mov
clc
out
mov
jle
or
adc
leave
mov
sti
cmp
stos
test
add
xchg
mov
cmp
mov
jmp
mov
cmp
push
pop
add
or
test
decl
push
sub
push
sbb
jns
xchg
mov
jmp
push
addr16
mov
lds
out
cmc
xchg
mov
mov
push
pop
cmp
or
push
xchg
inc
mov
mov
fidivrs
addb
sahf
adc
ret
lret
shrb
sbb
push
sbb
push
and
jno
loop
mov
jg
in
mov
imul
cld
and
jo
push
xchg
inc
xlat
mov
cmp
mov
popf
push
mov
iret
dec
xchg
push
ret
mov
les
pop
insb
cmpsb
mov
mov
ret
inc
jb
jnp
sbb
repnz
call
pop
jg
jae
mov
es
or
lea
mov
movaps
push
push
xlat
sbb
add
outsl
addr16
jle
roll
pusha
lods
outsb
dec
movsb
or
call
jmp
add
mov
mov
xchg
mov
testb
or
in
cmp
lret
pop
jo
inc
mov
cmc
sub
add
aad
mov
add
cmp
insl
cmc
ficoms
mov
mov
in
addl
call
push
daa
lret
inc
das
insb
inc
leave
inc
xchg
mov
jp
mov
insb
jae
ficoms
call
mov
bound
add
cmp
popf
rorb
dec
icebp
xor
test
inc
cltd
clc
or
push
dec
or
cli
mov
lahf
ds
mov
mov
aam
inc
inc
aam
call
mov
ficompl
xlat
sbb
cli
test
in
push
or
sub
push
adc
and
je
stos
cmpsb
sbb
mov
push
notl
push
push
jns
insb
into
mov
pop
mov
lcall
pop
popf
jp
lcall
addr16
repnz
jmp
test
xchg
or
sahf
mov
add
add
push
lcall
jnp
inc
sub
xchg
jo
or
dec
mov
add
pop
call
or
ja
xor
xor
lret
xchg
je
out
cmp
jb
and
icebp
sbb
inc
jo
es
leave
sti
nop
imul
dec
clc
mov
rolb
lret
mov
cwtl
cmc
or
cli
movsb
push
lahf
test
inc
lds
xorl
jge
jl
call
stc
rorb
sti
imul
aam
xchg
xor
fimull
in
insb
push
or
mov
insl
jne
mov
std
fimull
mov
mov
jnp
jae
push
hlt
cmpsb
inc
cmp
filds
and
imul
dec
mov
decb
dec
cld
mov
dec
push
jg
pop
hlt
cmpsb
sub
hlt
test
xchg
jne
add
arpl
inc
test
and
aam
lods
aam
mov
mov
fsubs
fistps
push
fbstp
push
or
push
push
fucomp
sbb
xor
and
push
add
push
adc
sete
daa
inc
lea
addb
rcrb
mov
pop
roll
aas
or
mov
jno
inc
xchg
mov
jp
sub
mov
shr
jmp
sbb
sub
cmp
sbb
mov
push
call
cmp
test
movsb
pop
jne
ljmp
cwtl
xor
inc
mov
int3
or
add
dec
sub
daa
jge
jb
test
mov
mov
int3
and
cmc
fiadds
das
icebp
inc
iret
test
jmp
mov
and
xchg
stos
lcall
cli
rcrl
daa
popf
rorl
dec
add
xchg
inc
jo
loopne
push
and
cltd
push
push
rcr
mov
xor
test
and
jmp
out
and
jnp
mov
pop
xor
fsubl
loope
or
fwait
or
inc
dec
sti
mov
mov
push
push
pusha
mov
jo
pop
mov
xchg
movsb
jmp
sti
cmp
push
jmp
imull
fisttps
cmpb
sbb
push
mov
jns
sub
hlt
push
inc
dec
pop
lret
lahf
pop
xchg
fs
loopne
outsb
cmp
mov
lret
call
insb
inc
sub
icebp
add
and
xchg
aam
or
std
clc
notl
cmp
inc
cs
dec
int3
add
sarl
cmpsb
mov
je
jmp
dec
lret
inc
inc
ret
stos
decb
daa
fisttpl
movsb
fucomp
outsl
push
sub
daa
test
jb
test
jo
fs
dec
cmpl
pop
xchg
loopne
fwait
sub
xchg
pop
mov
sti
mov
jecxz
cs
inc
loope
lods
lock
lods
jns
add
adc
xor
sbb
insb
sub
add
test
pop
xchg
jno
dec
dec
push
cs
ljmp
jo
shll
repz
fildll
outsb
ja
stc
dec
push
ret
jmp
add
mov
shlb
dec
xchg
mull
mov
cli
mov
je
call
pushf
stos
sub
hlt
gs
loop
add
mov
cwtl
or
jnp
or
gs
out
loop
xchg
icebp
xlat
mov
pop
call
add
mov
subl
push
test
test
jne
sub
jmp
inc
mov
insb
popf
pop
dec
mov
rorb
out
xchg
std
inc
dec
push
pop
stc
jo
push
pop
mov
fst
fistps
push
push
cld
ret
les
ss
lahf
push
jp
pop
orl
push
and
xor
mov
push
add
jno
sub
and
inc
dec
and
and
adc
inc
cli
add
or
loop
inc
mov
mov
aad
mov
cmc
or
sbb
movsl
jmp
lock
xor
andb
pop
pusha
fbld
jge
sbb
outsb
scas
push
and
and
sti
pop
dec
mull
sub
icebp
out
mov
fdivrs
pop
mov
dec
xor
jae
pop
stc
cltd
aaa
mov
add
or
xchg
popa
call
insb
jae
cmp
mov
call
fwait
add
add
sub
adc
xchg
mov
add
jbe
jmp
pusha
xchg
adc
jg
sub
leave
push
and
push
in
mov
or
cmc
xor
pop
shrb
cwtl
mov
mov
xchg
push
xchg
in
pop
ret
cmp
sbbb
push
ret
jp
call
jno
dec
or
xchg
cwtl
or
add
push
dec
mov
ja
out
int3
xchg
push
call
rolb
inc
lea
test
dec
movsb
mov
shr
aam
iret
testl
push
push
call
push
mov
outsb
insl
fwait
leave
add
call
mov
je
lcall
xor
enter
ret
subb
jecxz
mov
jmp
in
and
pop
sub
ja
pop
andb
dec
js
call
or
int
nop
outsb
push
sti
xor
addl
lods
fists
ret
dec
xchg
aam
dec
xlat
stc
js
push
cltd
sub
jbe
nop
mov
lds
stos
aas
into
sbb
je
dec
mov
push
push
add
imul
cs
add
lcall
jl
stc
sar
fistpl
int
or
inc
xchg
insl
clc
shll
mov
mov
add
call
test
jmp
adc
sub
cmp
test
mov
cmp
cmpsl
out
test
shr
pop
lahf
push
incl
pop
into
push
fsubp
adc
call
sbb
xor
or
lods
ds
jmp
lock
or
add
and
jb
mov
jmp
push
push
test
or
add
jmp
fabs
fyl2xp1
jg
outsb
dec
cmp
mov
ljmp
jmp
sbbl
jb
and
movsb
inc
pusha
or
arpl
jmp
sub
xchg
pop
jne
fcompl
sbb
push
inc
mov
adc
cmpsl
test
xor
pop
rol
jo
es
in
and
cmp
pop
ljmp
cmp
push
inc
popf
push
stos
dec
pop
and
ja,pn
push
or
mov
dec
vphsubbw
sub
hlt
xchg
or
pop
mov
dec
jno
lret
mov
mov
mov
sti
sub
negb
or
mov
mov
fnstsw
popf
pop
xchg
lahf
stc
pop
hlt
mov
mov
jmp
scas
sub
and
push
mov
jb
outsl
pop
push
add
popf
add
std
pop
imul
xchg
push
pusha
xor
popa
mov
mov
popa
fisubrs
xacquire
mov
mov
ds
pop
shlb
mov
mov
ror
xchg
cmp
je
fdivr
aad
add
sar
and
adc
call
sub
adc
push
mov
jge
out
test
xchg
jl
cmp
inc
movsb
sub
dec
mov
xlat
push
mov
dec
enter
jnp
lahf
int
scas
ja
sub
mov
and
jb
std
popa
aam
pusha
adc
jmp
mov
mov
stos
push
and
xchg
or
jmp
in
jo
cltd
pop
loope
mov
pop
mov
pop
mov
mov
lahf
or
jmp
xor
push
test
mov
jmp
shrb
mov
pop
loop
sub
push
pop
rcl
sub
push
pusha
fldl2t
pop
adc
sarb
cmp
out
dec
jne
fs
jmp
dec
les
lock
or
xorl
aad
icebp
jmp
push
mov
stos
in
mov
in
xor
cmp
fs
dec
test
filds
mov
inc
ret
xchg
std
gs
push
int3
mov
dec
adcb
int3
mov
xor
test
cmpl
or
mov
bound
pop
loopne
or
notb
repz
and
jno
gs
sub
cmp
sbb
mov
xchg
fwait
mov
push
push
cmp
in
jo
xor
bound
jo
mov
lret
lret
enter
popf
dec
test
mov
mov
push
xor
xchg
mov
orb
lcall
adc
add
push
fiadds
pushf
int3
jmp
lahf
loope,pt
jb
add
pop
pop
mov
or
stc
popf
push
mov
imul
sub
test
push
mov
call
sbb
or
push
lods
ljmp
sub
sub
mov
test
es
xor
lret
and
xchg
rcrb
jb
mov
insl
push
fimull
push
ret
pop
pop
lds
xchg
cli
dec
sbb
jne
sub
xor
mov
je
or
in
mov
mov
or
lret
in
rcr
cwtl
sbb
adc
xor
outsb
sbb
js
push
xchg
sub
dec
loope
rcll
in
aam
orb
xlat
out
out
dec
orl
clc
and
stos
into
invd
ficoml
cld
xor
cmp
cli
jno
mov
xor
or
pushl
mov
daa
mov
or
dec
mov
pop
add
adc
test
add
inc
inc
jno
sbb
cs
xchg
cli
movsb
jg
loope
ja
loope
mov
xor
jecxz
pop
icebp
inc
push
cmp
jb
jmp
xorb
cmc
or
sti
sahf
adc
stc
popa
dec
jbe
cwtl
push
enter
ret
inc
pop
inc
jl
jecxz
dec
mov
out
xchg
mov
jae
mov
jecxz
push
gs
fmuls
or
pop
int3
stos
pop
add
jecxz
dec
xchg
push
sbb
orb
les
or
repnz
xor
rorb
or
loop
pop
jne
or
or
sub
int3
adc
sbb
test
cmpsl
aad
lds
push
pop
sbb
jmp
insl
dec
leave
sbb
xchg
inc
or
mov
jb
pop
fildll
mov
mov
enter
pop
je
fcmovnb
jmp
aad
cmp
repz
mov
cs
aaa
fisttpl
mov
in
jmp
out
xchg
add
cltd
xor
daa
loope
and
mov
pop
or
jbe
adc
adc
or
dec
and
icebp
jbe
imul
test
cmp
xlat
push
loop
pop
mov
adc
pusha
xor
xorb
pop
add
stc
aam
pop
cmpsl
and
dec
mov
fcmovnb
add
bound
mov
mov
pop
push
outsb
cmp
insl
out
out
sbb
lea
inc
addl
popa
dec
bnd
aam
dec
repz
out
cld
add
rol
add
or
pop
push
pop
testb
ficompl
cmp
sahf
repz
je
xchg
dec
movsl
test
aaa
insb
icebp
mov
lret
sahf
fcoms
pop
pop
pop
xchg
into
and
lret
in
das
or
pop
jl
or
pop
inc
jecxz
jo
sbb
push
jge
pop
and
sub
decl
leave
mov
pushf
add
sub
ret
loop
pop
mov
iret
mov
icebp
sbb
adcb
push
add
in
mov
dec
mov
mov
int
push
iret
jmp
sub
push
mov
inc
push
cmc
loop
hlt
mov
jl
out
loope
mov
std
fcmovne
sub
mov
xchg
cmp
add
sbb
aam
sbb
cs
sbb
xchg
push
pop
xor
insb
cmc
cli
call
int
repnz
and
push
ret
push
adc
cmp
xor
mov
faddl
cmp
call
and
xchg
fdivrp
inc
subl
push
inc
mov
push
cmpsl
cmp
loop
es
xlat
mov
dec
fsubs
sub
add
mov
inc
add
rcrl
and
cmp
mov
stos
cmp
push
inc
clc
dec
add
mov
mov
push
hlt
test
jl
xchg
jb
divb
outsb
test
rclb
pop
sub
repnz
jnp
push
add
mov
xor
mov
mov
in
xor
mov
mov
jns
repz
pop
adc
imul
push
out
arpl
in
sbb
push
rorb
je
push
mov
std
push
pop
pop
cs
outsl
jl
das
pop
add
sahf
mov
arpl
stos
mov
pmaxub
dec
jmp
fisubrl
inc
mov
xchg
mov
sub
leave
xor
or
lahf
fwait
xor
and
or
sbb
adc
inc
adc
inc
inc
lds
adc
lret
movsb
inc
inc
call
inc
xchg
mov
in
popf
je
push
lahf
xor
stos
dec
jo
cmpb
sbb
call
cmpb
sub
mov
leave
or
fldenv
inc
jmp
mov
out
lock
iret
ss
filds
fs
mov
outsl
loopne
push
insl
inc
cli
cld
fucomi
add
push
jmp
cmp
lods
lods
es
mov
sub
xchg
pop
fbld
cwtl
push
shll
movsb
pop
or
lea
mov
std
inc
sbb
inc
cmp
xor
inc
mov
aam
and
cld
cmp
lret
xchg
push
pop
pusha
out
push
xchg
stos
or
dec
xchg
mov
subb
lds
and
push
movsl
scas
or
dec
leave
add
lock
mov
push
sbb
push
frstor
pop
push
shrb
cmp
adc
jb
mov
lahf
fdivr
sahf
add
test
or
add
sahf
xrelease
sub
mov
or
mov
pop
orl
xchg
lods
lods
shrb
and
push
adc
in
repz
shrb
popf
push
xor
cmc
stc
sti
in
push
cmp
cs
lods
mov
inc
lahf
pop
adc
imul
cmp
xchg
int3
imul
mov
add
ret
pop
mov
push
ja
loop
inc
test
lods
in
testl
mov
push
pusha
inc
push
loop
nop
ds
shr
mov
loopne
fwait
and
cli
jns
jmp
imul
push
xchg
sub
inc
into
fdivl
sbb
cld
mov
fnstsw
xorl
dec
and
enter
cmpsb
stos
pop
fs
xchg
xor
fisttpll
sub
adc
mov
sbb
orl
std
lods
pushf
leave
jno
and
mov
out
adc
lods
sahf
add
and
or
mov
loop
movsb
xor
mov
dec
add
or
push
mov
test
bound
sbb
loopne
addr16
inc
fidivrs
call
fldl2t
inc
mov
je
pop
pop
stos
lcall
jae
std
mov
fsubrl
pop
lea
xchg
aaa
mov
and
mov
pop
adc
jne
out
sbb
aaa
jns
test
adc
sbb
mov
shlb
push
dec
push
adc
fsubr
shrb
ja
call
imul
cs
shlb
mov
xor
jae
int3
scas
movsl
xor
stc
inc
jmp
jns
daa
les
das
dec
inc
stos
enter
je
sbb
cltd
repz
popa
and
mov
add
inc
stos
xchg
pop
xchg
pop
mov
jne
and
sbb
jecxz
aam
out
xchg
loop
or
dec
ret
rorb
movsl
dec
inc
out
mov
cmpsb
loopne
ja
leave
lods
rolb
test
rorl
stos
cli
adc
inc
mov
movsb
js
cmova
jmp
mov
fnstenv
fimull
ret
decb
bound
es
adcb
js
cli
push
dec
dec
ljmp
popa
and
mov
sti
mov
mov
mov
xor
adc
dec
les
xchg
popf
jns
test
add
test
xchg
lcall
imul
xor
pop
popf
nop
aaa
jle
push
out
aam
push
shlb
xchg
ljmp
jnp
lods
add
push
clc
es
daa
or
pop
sbb
jne
or
add
mov
adc
pop
and
sahf
in
add
push
xor
push
mov
push
and
cwtl
addb
icebp
pop
push
call
lods
dec
cmpsb
mov
mov
xchg
shr
clc
inc
nop
cmp
or
in
sub
clc
and
and
mov
jb
loopne
sub
and
sbbb
sahf
mov
or
add
cmp
adc
arpl
mov
dec
jg
mov
xchg
stc
jge
push
add
pushf
int
mov
xchg
mov
aad
push
mov
jne
mov
roll
aas
lahf
addb
stc
fsts
loopnew
call
push
popf
call
lock
push
stc
bnd
jecxz
fsubr
pop
subb
sbb
mov
push
jno
push
push
es
cmp
in
stc
sbb
popf
mov
inc
sub
mov
or
stos
shll
addr16
test
popf
add
shl
orb
xchg
dec
in
pop
dec
insl
sahf
xor
mov
push
insb
call
std
push
cmc
pusha
les
push
inc
in
mov
jl
dec
mov
xlat
roll
inc
sbb
lcall
adc
rol
in
pop
pop
inc
jmp
adc
xor
xchg
push
nop
push
fucomip
sbb
test
test
jg
xchg
mov
jecxz
adc
cmp
nop
sti
mov
or
sub
std
pop
loope
cmp
notb
add
and
and
aaa
cmpl
jbe
pop
not
jl
xchg
inc
call
lea
cmpb
jmp
call
enter
repnz
out
xchg
repz
scas
daa
sahf
pop
les
sahf
pop
ss
add
rcll
xor
sub
cli
push
outsb
jae
xchg
sbb
test
cmp
push
movsb
es
adc
push
mov
dec
xor
mov
test
aaa
mov
cmp
imul
into
stc
or
scas
ret
push
push
push
mulb
cmp
loopne
cmpsl
sub
push
and
push
sub
imul
adcb
cli
xchg
pop
mov
incb
sub
adc
mov
dec
jmp
test
cmovnp
pop
and
mov
data16
mov
inc
and
push
inc
out
lahf
xchg
pusha
inc
mov
or
xor
test
and
sub
jo
jmp
pusha
cltd
mov
sub
mov
icebp
mov
jns
adc
jnp
inc
dec
jbe
or
mov
push
out
arpl
lods
pop
pop
fldt
xor
add
imul
cli
movsl
dec
sbb
adc
call
imul
sbb
movsl
js
push
call
or
aas
xor
push
cmp
cmpsl
inc
dec
into
movsb
inc
pop
push
pop
adc
das
or
lahf
dec
inc
ret
push
push
sti
inc
decl
xlat
push
and
and
dec
cli
sub
xchg
sbb
push
js
dec
pop
in
scas
aad
rcrl
pushf
mov
inc
dec
pop
call
mov
imul
mov
jne
inc
test
roll
push
fidivs
adc
mov
xor
push
scas
cmc
mov
stos
push
fidivrs
scas
rorb
add
add
mov
scas
sbbl
out
lret
jo
xor
adc
sub
dec
fcmovnu
pop
fs
adc
nop
cmp
shlb
loop
xor
add
sbb
mov
das
xchg
icebp
aam
dec
cli
fidivl
insl
dec
adc
shr
cli
mov
pop
dec
and
cmc
cld
std
int3
jno
and
xor
xor
movl
inc
into
pusha
inc
and
push
jne
fwait
add
enter
int3
jge
sbb
pop
pop
jmp
mov
cmp
push
int3
mov
xchg
and
sub
adc
pop
pop
std
stc
aas
sbb
cmc
push
ret
add
mov
xchg
leave
or
stos
xchg
arpl
repz
or
jge
xor
adc
mov
cli
sub
adc
mov
sahf
je
test
sti
loopne
adc
xchg
jecxz
mov
inc
add
out
incb
stc
cmp
leave
sub
adc
xchg
sbb
lock
ret
or
jg
fbld
test
fsubrl
inc
push
adc
add
mov
loopne
inc
lods
dec
test
push
mov
lock
mov
mov
sub
mov
push
call
sbb
fs
cmp
inc
and
xchg
mov
dec
pop
or
mov
lock
fidivs
xchg
inc
lods
or
fisubrl
xchg
lock
ret
cld
jecxz
lock
out
popf
aad
lock
inc
cmp
xchg
lock
and
inc
push
mov
lcall
into
dec
push
scas
mov
shl
pop
or
lock
fildll
jl
mov
mov
arpl
hlt
or
sub
xor
les
pop
sahf
int3
mov
adc
jb
lret
xchg
rcrb
in
cld
and
lods
xchg
pop
pop
mov
iret
sub
add
cli
aad
and
inc
sbb
and
stos
and
arpl
dec
xchg
call
mov
sbb
inc
jmp
cli
test
orl
adc
les
dec
cwtl
orb
mov
in
push
push
leave
cmp
and
stos
jecxz
inc
push
sub
mov
adc
xchg
stos
push
call
mov
sbb
push
cltd
jns
mov
xchg
xor
push
stc
outsl
add
push
imul
ss
test
into
sbb
movl
loopne
mov
outsl
dec
jo
cmpsl
mov
sub
jb,pt
or
cwtl
push
add
mov
push
mov
cmc
mov
push
unpcklps
int3
mov
mov
push
int3
scas
or
jg
adc
pop
aas
scas
dec
bound
stc
pop
icebp
xchg
mov
mov
add
lock
ret
xor
hlt
call
inc
xchg
or
push
rorb
insb
push
int3
mov
inc
add
xchg
mov
sbb
stc
fildll
mov
out
stc
in
mov
shlb
inc
inc
ficompl
xor
inc
xchg
addr16
scas
adc
push
dec
pop
cltd
and
cs
out
sub
daa
popa
jo
xchg
xor
mov
gs
push
mov
adcb
push
outsb
mov
lds
jbe
or
sub
cwtl
jne
or
mov
ja
loopne
or
outsb
sbb
insb
sti
pushf
das
lret
cli
jae
xchg
inc
xor
push
inc
xchg
aad
sub
mov
mov
sbb
or
adc
sarl
popa
push
in
fcomi
ljmp
sbb
push
xor
inc
mov
push
inc
call
mov
scas
sub
test
movsl
movsl
mov
fists
pop
in
or
shll
and
imul
jnp
dec
add
mov
adc
sti
enter
pop
cmp
and
mov
shl
icebp
ss
sub
add
mov
pushf
mov
loop
loope
imul
mov
mov
xchg
insb
inc
mov
movsb
xchg
hlt
mov
push
out
mov
inc
xchg
lahf
pushf
fidivrs
and
mov
js
jp
xor
mov
pop
sbb
imul
outsl
pop
mov
pop
cmc
push
call
and
jae
jle
push
test
mov
test
cmpb
iret
xchg
cmp
jmp
push
stos
mov
rolb
push
jge
mov
add
dec
mov
push
pop
clc
or
sub
mov
in
nop
jb
leave
daa
jno
arpl
ljmp
push
mov
add
je
or
es
jl
pushf
cmp
mov
inc
jg
mov
imul
or
adcl
les
xchg
clc
int3
int
jo
jmp
push
dec
insl
lock
pop
adc
pop
stc
mov
incb
jle
out
mov
das
sbb
and
dec
adc
pop
pop
test
pop
fdivrl
push
or
cmp
sahf
pop
inc
aad
or
cld
pop
stc
notb
test
or
add
pop
push
test
mov
cmp
int3
js
jmp
insl
pop
or
es
fisubl
ret
cmc
push
jmp
lods
mov
data16
mov
or
les
movsb
inc
mov
jmp
dec
jl
lahf
repnz
aaa
es
and
xor
cmp
pop
and
mov
enter
repnz
jle
je
imul
push
jns
push
lea
mov
ljmp
loopne
xor
jg
mov
push
scas
lcall
pop
dec
mov
push
mov
add
jnp
sbb
cmpsb
dec
pop
mov
fcmovbe
adc
xor
push
add
filds
add
inc
mov
or
sub
mov
or
pop
int3
aam
add
test
mov
pop
jnp
or
dec
push
hlt
push
cmp
dec
andb
push
inc
aam
add
mov
xchg
xchg
negl
cmpsl
je
mov
inc
dec
in
jae
pop
adc
and
add
or
das
inc
imul
sub
push
adc
push
xchg
mov
popa
sti
dec
call
fidivl
jo
pop
int
mov
call
cs
cmp
popf
loope
dec
inc
stos
mov
cmp
fimuls
xlat
fdivl
or
out
and
dec
and
jl
push
sub
push
inc
ss
cmpsb
bnd
dec
mov
faddl
sub
jae
adc
cmp
data16
popf
aaa
sub
xor
leave
sub
or
lcall
mov
dec
pop
bswap
invlpg
mov
in
or
mov
insb
mov
lahf
jg
xchg
sarb
xor
push
icebp
jge
mov
pop
sub
pop
add
add
jno
mov
hlt
xchg
xlat
xchg
cwtl
sbb
ja
shll
push
icebp
mov
clc
or
jmp
fidivs
dec
pop
shlb
dec
or
xor
jmp
xchg
mov
push
test
and
test
inc
push
jns
add
cmp
sbb
aaa
mov
cmp
jge
mov
mov
orb
push
pop
dec
xchg
stos
cmp
mov
in
icebp
push
popa
stc
cmp
insl
push
cmpsb
dec
stos
mov
int3
hlt
or
jbe
push
repz
sub
mov
pop
filds
clc
rol
pop
xor
push
pop
shrl
and
mov
xchg
fucomp
or
mov
mov
mov
sbb
pop
lahf
test
xor
lea
or
cmp
jp
test
aam
call
jno
mov
add
cld
test
lea
ret
enter
stos
ffree
cltd
or
js
mov
jmp
aam
or
sahf
dec
repz
lds
loopne
or
dec
das
jle,pt
push
adcb
pop
inc
xchg
dec
jp
jecxz
les
mov
jb
loop
push
sti
mov
dec
shlb
or
push
add
and
pop
lds
mov
jno
mov
mov
sbb
sbb
or
call
push
push
std
inc
popa
cltd
leave
ficoms
mov
sbbb
pop
call
xor
ljmp
hlt
mov
jnp
hlt
sbb
fbld
jle
enter
push
shll
xor
inc
mov
into
loope
shll
dec
jmp
pop
add
mov
hlt
push
xor
jp
cmp
mov
mov
cli
daa
mov
shll
add
das
cmp
rcrl
xor
jp
adc
lret
push
dec
push
jmp
fsubs
dec
pop
mov
mov
shrl
push
adc
out
fdivrl
sub
insl
cmc
xor
daa
jle
out
imul
or
scas
in
lea
dec
push
repnz
fisttpll
xchg
pop
add
call
hlt
aad
or
loop
xchg
outsl
jg
loop
out
cmc
test
leave
adc
addr16
popf
xor
push
dec
lock
inc
mov
adc
es
rep
aaa
mov
xlat
sub
jle
xchg
push
sbb
and
or
mov
jmp
adc
mov
in
add
pop
arpl
and
adc
into
add
into
outsl
stos
jo
call
arpl
test
xchg
adc
dec
pop
sbb
rorb
movsb
cmpsl
das
xchg
js
mov
stos
mov
fiadds
mov
push
dec
xchg
iret
lds
mov
es
add
pusha
das
int
dec
lret
push
orb
jmp
or
lods
xor
inc
call
mov
adcb
sarl
outsl
cmp
push
xchg
call
jne
and
mov
call
imul
mov
in
test
daa
ja
xchg
push
cmpsb
mov
and
cltd
scas
sti
cwtl
lock
adc
mov
mov
pop
jo
popa
popl
shll
daa
sbb
mov
mov
call
fs
adcb
add
popf
arpl
or
jne
out
in
out
push
or
sub
xor
cmp
or
adcb
das
xchg
aam
dec
xchg
out
adc
or
lcall
pushf
mov
stc
jnp
mov
mov
clc
jmp
dec
cmc
mov
test
fcoms
in
into
shll
adc
adcl
cmp
adc
cmp
xchg
add
repnz
out
push
and
dec
stos
loop
push
mov
sub
mov
outsb
enter
cmp
int3
jmp
test
cmp
call
mov
sub
popa
xchg
mov
push
or
inc
cmp
mov
inc
scas
shl
adc
enter
cmp
adc
and
rcl
pop
data16
lock
pop
idivl
aaa
out
cmpsl
jg
jnp
push
lock
insb
or
mov
pop
dec
cmp
fwait
and
push
mov
setne
ss
lahf
lock
cmp
adc
lock
fs
mov
jmp
lock
loopne
stos
es
addr16
push
mov
icebp
pop
mov
add
lock
rclb
push
lock
pop
mov
scas
jecxz
lock
imul
jnp
adc
scas
pusha
lock
pop
xor
aad
sbbl
mov
mov
xchg
push
imul
fwait
cmpsb
lock
xor
dec
xor
pop
inc
mov
jo
je
lock
pop
jp
dec
xchg
push
jne
cmp
lock
push
xor
lahf
jl
add
shl
shlb
out
ud0
push
cltd
or
test
pop
loopne
lock
pop
ret
lock
nop
je
lock
psllq
stc
outsb
adc
push
pop
cmpsl
rclb
mov
adc
daa
or
adc
push
jae
add
repz
enter
lcall
xchg
dec
outsl
stc
or
shl
shr
and
xlat
mov
out
lock
push
lock
xchg
hlt
lods
outsl
or
pop
in
dec
xorb
push
decl
dec
add
scas
test
popf
jo
or
inc
adc
push
dec
mov
jnp
cltd
sub
repz
das
cmp
lock
xchg
push
enter
adc
lahf
lcall
xchg
leave
test
fstpl
xor
sbb
cld
icebp
add
out
fcomps
cmpsb
jp
lock
push
nop
pop
mov
sub
or
test
push
lods
dec
pop
decb
cmp
adcl
cmp
xorb
sarb
loope
dec
jb
rcll
xor
insl
mov
insb
fdivp
inc
ds
arpl
int
shrb
icebp
loopne
sti
nop
icebp
inc
mov
lret
les
lock
int
sub
stc
lock
out
cmpsb
jns
rorl
pop
lret
enter
or
stos
lock
sbb
cmpsl
cli
xorb
icebp
insl
mov
mov
cmp
add
pushf
dec
rcll
je
mov
mov
push
mov
jne
or
lock
or
std
fimull
in
aas
xor
jp
and
imul
shlb
lock
in
out
pop
dec
lock
lret
sti
fsts
mov
sbb
jge
nop
jecxz
adc
lock
pop
inc
cmp
pushf
jp
lods
mov
xchg
in
cltd
cmp
mov
nop
dec
lock
scas
push
sti
mov
pop
leave
fcoms
xor
push
mov
mov
lock
xlat
andb
and
lock
jae
mov
lock
xchg
xor
xchg
outsb
xchg
arpl
ljmp
adc
push
adc
adc
into
and
push
sbb
rcrb
xchg
xlat
jnp
jge
inc
dec
lock
sub
inc
lcall
call
rcpps
lock
sub
mov
mov
jae
fisubs
shlb
das
mov
jns
loopne
lock
aad
ds
inc
nop
rorb
loope
sbb
lock
mov
je
lock
sub
cmp
mov
int
imulb
pop
test
xor
aas
push
sbbb
push
cmp
jo
mov
mov
pop
insl
lock
mov
inc
inc
int3
aas
lock
cmp
mov
adc
pop
lods
js
push
jns
pop
rorb
insb
in
fisubl
icebp
ljmp
dec
cld
sbb
icebp
sbb
outsb
into
push
in
in
std
or
adc
mov
mov
inc
cmp
pop
jno
or
rcrl
mov
jmp
or
in
jp
lea
cmp
lock
fdivrs
lock
push
dec
scas
icebp
hlt
fisttpl
cmp
add
in
cmp
sbb
ss
mov
xchg
sub
xor
adc
and
pushf
jge
adc
ret
xor
aas
cmp
jo
pop
call
cmp
push
pusha
repnz
out
push
cld
lea
sbb
adcl
ret
out
push
out
mov
repz
cli
fs
lahf
adc
lock
mov
outsl
popa
xchg
lock
mov
push
ret
jmp
aaa
push
sub
testb
add
enter
mov
push
cmpsl
orb
rol
add
mov
push
mov
cmp
nop
sarb
sub
mov
or
int3
arpl
sbb
jp
jge
and
out
das
pop
inc
cld
insl
jle
add
push
jnp
mov
call
sbb
movsb
xorb
jle
pop
xchg
daa
mov
in
xchg
sbb
mov
daa
ret
push
pop
xchg
movsb
inc
inc
mov
sub
aad
je
fsts
push
or
adcb
push
sub
in
adc
xchg
pop
dec
pop
sbb
jmp
or
test
push
jecxz
pop
mov
call
outsb
inc
cmp
jmp
pop
std
or
je
repz
int3
add
int
adc
out
movsb
cmpsb
arpl
movsb
dec
cmpl
mov
xchg
fs
push
jmp
out
mov
fldl
aam
xor
cmp
jge
or
ds
adc
jmp
cld
add
aas
push
imul
mov
sub
lods
clc
mov
pop
idivb
cmc
pop
pop
mov
mov
sub
lds
aam
or
daa
inc
movsb
bound
and
mov
jl
imul
mov
adc
pop
sbb
jg
in
bound
cmpsb
mov
popa
in
in
movsb
and
pop
rolb
mov
repz
mov
or
pop
dec
adc
mov
or
pop
int3
sbb
push
and
enter
popa
repnz
sbb
stc
flds
test
fisttps
xchg
addr16
loope
data16
sub
xchg
sub
mov
cltd
imul
mov
lahf
inc
lea
push
call
push
es
mov
iret
mull
testb
xchg
mov
dec
rorl
mov
push
repnz
xor
cmpsl
or
repz
into
jge
and
fldenv
jg
and
add
enter
popf
inc
inc
mov
loope
test
pop
lds
notb
addr16
mov
orb
push
in
cmc
das
lahf
filds
lret
cltd
repnz
push
push
cmp
inc
imulb
cmpsb
and
pop
mov
pop
inc
xor
call
jp
lea
icebp
mov
jb
push
inc
lds
mov
rclb
mov
mov
mov
test
test
mov
cmc
lcall
mov
scas
popf
aam
inc
jmp
faddl
call
inc
cmp
pop
push
inc
add
cli
sub
out
xchg
lea
ret
ss
mov
stos
sub
sbb
shrb
add
push
or
inc
clc
shrb
shrb
inc
xor
and
fildl
out
sbb
cmc
popa
mov
push
lods
adc
mov
gs
push
add
dec
shr
and
jbe
out
jp
stos
and
or
shr
adc
inc
test
ret
push
leave
xchg
xchg
mov
mov
inc
xlat
push
xor
mov
push
das
mov
les
fwait
pop
pop
adc
sub
lock
cmpl
or
insl
in
or
mov
adcb
add
mov
daa
sub
loope
add
lock
test
sbb
dec
jge
test
sub
loop
sbb
inc
jge
inc
aaa
out
sbb
mov
dec
push
inc
adc
ja
je
or
out
push
jmp
or
mov
cld
xor
or
and
sub
cmp
jno
call
test
lea
jbe
mov
jg
lds
jae
loopne
cmpb
jns
scas
push
add
or
rcrb
xchg
fs
dec
pop
es
sti
or
pop
rcll
testl
mov
adc
gs
mov
stos
insl
loopne
mov
lahf
shl
or
stos
out
into
push
pop
push
mull
out
rcll
mov
aaa
or
gs
and
iret
or
pop
cltd
xchg
adc
cmp
xor
fwait
jl
dec
mov
push
push
push
movsb
pusha
push
nop
movl
lcall
shlb
aas
add
into
data16
mov
icebp
imul
sbb
add
imul
addr16
sub
or
fnstenv
sbb
aas
sub
ret
push
xchg
lods
and
xor
jecxz
mov
cwtl
int3
push
xor
pop
andb
movsl
push
je
or
insl
xchg
sub
cmpsb
incb
sub
orl
mov
xchg
mov
adc
pop
inc
add
and
ret
mov
stc
popf
jb
das
jnp
jmp
int
mov
inc
inc
nop
cld
fwait
mov
shlb
or
std
lcall
pop
mov
and
call
push
mov
or
or
in
pop
ljmp
popa
repnz
mov
jl
mov
push
mov
jns
mov
or
sbb
mov
rcll
hlt
mov
or
or
add
mov
out
push
fmulp
js
xchg
xchg
shrb
mov
xchg
add
in
jne
dec
push
int
sub
add
movsl
mov
sub
sub
and
sub
jno
dec
pop
cmpsb
mov
sarb
add
and
or
xacquire
dec
rcr
or
es
or
mul
xchg
push
stos
jge
cli
mov
stc
shl
adc
inc
add
in
mov
pop
jmp
in
xchg
add
jmp
jo
and
sub
icebp
ffree
push
sbb
lods
repz
aas
or
sbb
jge
icebp
add
stc
movsb
clc
aaa
hlt
iret
mov
dec
push
push
xor
pop
inc
in
sbb
pop
mov
or
push
daa
ficoms
bnd
pop
or
orb
aas
jnp
add
mov
stos
sub
fdivs
sub
lret
loope
adc
mov
mov
icebp
inc
sbb
inc
cmc
inc
ficoms
push
call
test
int
clc
sbb
xchg
aas
or
int
or
cltd
jno
ja
dec
cld
imull
mov
rcll
and
xchg
fcmovb
add
cmp
push
jge
jg
jmp
in
mov
test
mov
loope
pop
ja
xor
hlt
arpl
cmc
notl
loope
mov
fimull
inc
pop
xor
test
dec
adc
jmp
cmp
fwait
push
mov
dec
lock
xchg
inc
jp
sub
push
aas
lret
into
fcoms
inc
int3
push
stos
mov
dec
je
das
movl
mov
pop
inc
and
sbb
mov
push
add
or
scas
popf
stc
or
add
add
push
les
stos
inc
sbb
lcall
testl
or
push
sti
sarl
adc
mov
mov
stc
sub
or
or
and
dec
sub
xor
and
jbe
js
or
sub
push
push
mov
pop
jne
mov
hlt
jno
sub
mov
mov
mov
adc
jb
aam
data16
add
ja
in
rolb
pop
lods
xchg
ret
push
and
dec
ss
add
int3
stos
mov
cli
rorl
mov
imul
popf
mov
inc
repnz
jno
push
je
adc
xor
jmp
add
pop
jae
lret
movsl
jne
or
and
sub
or
jo
test
rcrb
sub
stos
jo
mov
scas
mov
les
mov
pop
cs
sub
xchg
mov
aaa
repnz
dec
scas
push
jae
push
xor
lods
roll
inc
mov
aas
aas
sbb
sub
cli
repnz
add
insb
jb
or
inc
ja
movsb
inc
mov
sbb
out
fadds
orb
mov
dec
imul
push
neg
out
pop
adc
cmp
mov
dec
add
call
push
test
loope
sahf
arpl
test
sti
aad
ret
stos
fdivr
mov
sub
cmp
jno
out
lea
mov
enter
lahf
outsb
sbb
outsl
add
push
lods
adc
cmp
rolb
mov
ret
push
or
and
adc
xchg
mov
mov
sbb
pop
mov
add
stc
int3
jo
push
bound
mov
int
shlb
mov
mov
pop
fdivl
flds
and
xorl
lcall
and
fs
xchg
push
jp
jmp
jle
das
xor
sbb
popa
cmp
xchg
xchg
inc
clc
sbb
stos
mov
bound
add
or
fsubrl
pop
sbb
movsb
sub
push
inc
lret
pop
imul
leave
shll
in
or
xor
inc
push
or
jecxz
ljmp
xchg
ror
push
xchg
pop
ss
adc
fmull
sub
test
dec
jne
ret
scas
insb
push
jo
mov
and
sarb
sub
and
movsl
push
lock
rcrb
mov
jp
mov
mov
aaa
cmp
pop
adc
loop
mov
pop
mov
arpl
js
sub
cld
sbb
push
popf
adc
dec
mov
mov
sub
cmpsl
push
dec
jecxz
mov
hlt
sub
or
data16
push
in
subl
inc
xor
jmp
jo
dec
fstps
popf
push
insl
cmp
mov
test
push
add
dec
addl
and
icebp
pop
shrb
xor
sbb
inc
cmc
inc
jbe
insl
aaa
call
dec
adc
dec
mov
adc
sbb
aam
push
inc
mov
pushf
xchg
pop
enter
sbb
jmp
es
cmp
pop
stc
add
mov
lret
push
lods
cs
or
jg
mov
es
or
jmp
in
pop
repnz
jge
orb
xor
test
pop
or
dec
lock
mov
jl
mov
cmp
lock
sub
decb
xchg
in
es
ja
adc
dec
test
pop
lock
sub
dec
addr16
add
je
xorb
icebp
inc
xchg
mov
lock
sub
cmp
cli
hlt
push
mov
int
enter
and
jmp
lock
jg
lods
fwait
lret
mov
add
cld
jbe
vxorps
popf
xchg
or
lock
lock
add
jno
lock
pusha
adc
imul
into
jno
xchg
xchg
xor
jb
call
mov
cli
sahf
dec
std
clc
aas
leave
test
jb
mov
cmp
jae
jmp
xor
xchg
cmc
mov
imul
push
std
lahf
stc
js
jmp
or
sbb
scas
push
pop
push
inc
jmp
sbb
mov
lods
xor
adcl
fsubl
cmpsl
stos
jecxz
sar
push
ret
loopne
push
mov
jb
jmp
int3
mov
mov
mov
jns
sub
addr16
dec
push
mov
pushf
xchg
xchg
add
mov
or
mov
div
movsl
js
lcall
push
dec
jl
push
fldcw
repnz
mov
cwtl
scas
mov
xor
add
in
pop
dec
inc
xchg
movsl
and
and
add
mov
sbb
cltd
jo
and
push
loop
jecxz
setne
adc
dec
jbe
or
jmp
adcb
add
and
dec
cli
es
add
sti
push
sub
repnz
sti
sub
jl
mov
in
dec
jmp
jmp
xchg
scas
fbstp
stos
sub
push
mov
ret
fisttps
jg
sbb
loope
push
addr16
mull
mov
shl
push
mov
fnsave
fwait
sub
sbbl
call
xchg
insb
repnz
lea
cs
dec
ftst
xchg
pushf
xor
sahf
lods
sarl
mov
adc
in
push
add
stc
xor
adcl
push
call
inc
mov
insb
mov
ds
add
dec
setne
fs
jge
or
inc
xchg
or
mov
enter
mov
imulb
movsl
mov
jge
test
push
repnz
ljmp
lahf
add
mov
push
xlat
add
mov
negl
inc
js
or
or
out
aam
fsubrs
xor
cs
rol
movsb
inc
and
pop
call
lret
and
sar
enter
mov
cld
lods
jecxz
sbb
jmp
inc
push
fldcw
das
roll
sub
adc
fiadds
sbb
outsb
loope
jmp
fwait
addr16
and
fcomps
daa
js
dec
mov
sti
addr16
dec
cmc
mov
pop
xorl
jl
ljmp
or
insb
xor
add
call
cmpsl
xor
and
mov
or
sub
cmpsl
push
cld
fists
bnd
fmulp
mov
rorb
jl
loopne
sub
call
and
stc
mov
sbb
test
mov
cs
lods
icebp
push
es
into
and
pusha
mov
pop
mov
sub
roll
push
call
xchg
inc
inc
in
jno
jle
lret
fs
aad
movsb
daa
mov
pop
mov
lcall
in
xchg
sbb
add
mov
pop
test
iret
in
sub
cwtl
and
testb
mov
sti
mov
outsb
lahf
pop
xchg
mov
daa
sub
sub
inc
inc
ds
stc
and
fld
lds
ret
push
inc
pop
dec
pop
in
cltd
xor
mov
enter
jbe
jo
loop
sbb
sbb
insb
mov
shll
imul
mov
cltd
pop
push
cld
sbb
pop
stc
mov
xchg
ljmp
cmp
pop
call
inc
inc
sahf
adc
imul
push
add
jmp
dec
imul
jo
mov
out
insb
and
test
sahf
out
out
push
sub
or
xchg
enter
or
cmp
ja
icebp
add
or
daa
pop
sahf
pop
into
pop
cli
mov
add
std
bound
fimuls
jmp
rolb
es
repnz
cwtl
mov
and
sbb
xlat
repnz
jbe
xchg
jge
aas
xor
loope
xchg
mov
push
insb
xor
jecxz
es
dec
fadds
inc
loope
add
jle
outsb
push
dec
in
loopne
je
dec
jo
mov
stos
call
pop
jns
pop
gs
mov
loope
lret
call
adc
xchg
lahf
cltd
cmc
xor
int
inc
xor
or
mov
cwtl
sti
xchg
jbe
jns
into
jge
icebp
cmpsl
hlt
dec
into
inc
fists
in
orb
push
jle
jno
mov
inc
call
jge
mov
iret
and
mov
cli
cmp
and
cmc
fisubrs
xor
adc
push
mov
andl
das
jns
mov
cwtl
jg
test
jb
push
and
imul
xorb
cmp
push
pop
inc
out
push
or
arpl
push
out
pushl
pop
lret
mov
adc
mov
div
movsl
call
in
adc
xor
rorb
arpl
xor
jecxz
mov
cs
jbe
pop
mov
pop
xchg
xor
test
mov
cmp
jmp
pop
push
xchg
mov
insb
or
sahf
lahf
pop
movsb
mov
call
int3
sub
scas
sub
lea
mov
data16
jae
fimuls
popf
jb
imul
pop
fisubrs
xor
outsb
mov
xchg
ss
lcall
dec
sbb
mov
mov
mov
mov
mov
ret
mov
ja
push
pop
push
xor
cmp
ficomps
mov
lods
loopne
or
mov
jp
sub
xor
jmp
jo
sub
pop
add
inc
sub
or
lret
cmp
xchg
or
pop
call
sub
push
inc
mov
cmp
ljmp
and
daa
stos
ljmp
fildl
sbb
ja
outsb
cld
movsb
popl
cwtl
andb
jle
xchg
mov
into
add
out
cmp
add
or
fisttpl
add
xor
sub
inc
test
dec
xor
xchg
fbld
adcb
stc
and
sub
inc
or
sub
push
incl
imul
push
es
shrb
data16
xchg
cld
push
imul
loopne
xchg
stc
cld
js
mov
pop
into
scas
push
flds
push
jb
inc
push
xchg
je
nop
mov
lea
xor
lds
push
imul
xchg
xor
cmp
scas
sti
jecxz
popf
dec
int3
divb
out
push
inc
mov
xchg
xchg
sub
sub
sub
icebp
call
add
insl
ljmp
int
xor
mov
scas
lds
cli
or
and
das
jmp
in
into
mov
pop
mov
pop
call
test
sti
inc
mov
push
jno
dec
test
int3
aam
sbb
ds
pop
adc
mov
out
aam
fnstcw
push
or
pop
andl
mov
adc
jl
add
inc
addr16
lea
xchg
mov
ljmp
jno
jmp
sbb
out
fsubr
dec
fwait
xchg
mov
pop
jmp
popf
ja
push
xchg
and
push
and
dec
push
adc
sub
data16
repnz
popa
cmpsw
subb
negl
xchg
jle
dec
pop
cld
rsqrtps
imul
and
jmp
cmp
movb
lea
idiv
dec
test
xor
out
icebp
push
pop
das
cmpsl
inc
in
or
xchg
pop
subb
loope
mov
cmp
push
mov
fisttps
jmp
inc
ljmp
lock
push
subb
dec
cltd
mov
call
sbb
cmc
pop
jnp
das
lret
scas
or
mov
push
addl
inc
xor
xor
lret
scas
jp
jo
das
insb
lret
test
jmp
stc
mov
daa
loope
adc
add
or
aam
loop
popf
mov
add
scas
pop
add
mov
pop
lret
std
icebp
test
xorb
frstor
sbb
jge
test
jg
test
popf
xlat
and
push
mov
inc
jle
dec
push
adc
sub
add
or
jge
fisubrs
sbb
adc
sub
mov
bound
jmp
adc
pop
sbb
xor
aad
mov
mov
mov
popf
loopne
add
inc
push
sbb
xchg
jo
cmp
mov
mov
dec
or
pop
ret
jmp
xor
fldcw
std
in
cltd
jno
pop
cmpsb
lret
dec
or
daa
xchg
stc
testl
cmp
pop
sti
xchg
jo
js
xlat
mov
push
sub
gs
js
push
cmc
stc
cmp
stos
add
fidivrl
xor
rorb
fsubs
mov
adc
xchg
cs
mov
mov
adc
jb
push
out
dec
aam
lret
push
pop
pop
push
mov
dec
movsl
cs
repnz
mov
inc
or
ret
jge
inc
dec
xchg
mov
push
push
leave
and
lret
mov
stc
addr16
adcb
jp
dec
aas
mov
inc
popl
enter
xchg
sarb
clc
imul
mov
into
mov
sbb
ss
loop
pop
inc
stc
cmpsb
insb
into
jmp
testl
pop
out
out
cmp
jmp
inc
lods
dec
sbb
mov
cmp
das
cwtl
jbe
nopl
ret
mov
dec
stos
data16
lods
mov
jo
inc
jmp
jb
push
mov
inc
ja
inc
pop
add
cmp
sub
popf
das
in
sti
sub
push
mov
inc
fnsave
repnz
std
movsb
cmp
dec
stc
inc
and
jns
testb
push
bnd
cwtl
dec
lds
lds
jg
loopne
sbb
xor
mov
sbb
inc
or
jbe
mov
inc
mov
mov
in
dec
cmc
xor
mov
jnp
pop
int3
fsts
jmp
xor
jl
mov
pop
movsb
and
jp
mov
ljmp
cmpsb
lods
adc
repnz
loopne
and
sahf
cltd
xchg
add
dec
jo
pop
sub
fidivrl
fcompl
mov
jb
int
icebp
push
jmp
mov
xchg
pushf
and
loopne
xor
pop
imul
push
ret
jmp
push
cli
adc
adcb
add
lret
mov
and
ja
mov
lret
dec
stc
andl
or
cs
les
test
jnp
jnp
push
gs
je
and
fcomp
push
mov
sbb
jmp
in
popa
daa
xor
jo
cli
test
test
adc
shlb
xor
push
aaa
mov
pop
cmc
push
lea
xor
cmp
js
addb
pop
mov
sbb
cmp
pop
cmpsl
adc
push
mov
sbb
inc
cwtl
push
sub
or
cmpsl
in
les
jle
push
arpl
xor
add
jb
push
jae
popa
dec
subb
mov
inc
jle
mov
inc
sbb
popa
or
xchg
stos
into
ret
push
adc
sti
xchg
pop
loop
jo
pop
mov
mov
cltd
mov
rolb
add
popf
or
add
lods
aaa
ss
das
divb
popa
shll
jnp
shl
sbb
push
or
icebp
addr16
xchg
int3
shr
mov
jmp
mov
inc
bound
sbb
ja
aaa
and
hlt
out
aaa
jmp
cld
mov
or
fimull
add
cmp
negl
cmpsb
and
mov
mov
adc
mov
push
hlt
dec
loopne
test
mov
ss
push
or
sub
jnp
pop
mov
mov
lret
adcb
jle
mov
jmp
xchg
pop
push
shlb
inc
fcom
sbb
movsb
imul
es
ficomps
repz
test
lea
addr16
jmp
xchg
jne
das
enter
arpl
cmp
jno
xchg
sti
adc
sub
out
mov
dec
andl
inc
push
fisubrs
std
stc
or
faddl
loop
clc
inc
or
iret
popa
adc
pushf
nop
xor
orb
fwait
std
dec
mov
jno
daa
aas
jns
sub
inc
add
sub
sarl
es
lcall
mov
sub
sub
addr16
mov
inc
scas
bound
pop
sub
test
dec
cmpsb
jecxz
mov
cld
negb
cmp
or
dec
fldl
mov
cmpsb
xchg
roll
sbb
cs
xor
mov
fidivl
jne
add
mov
pop
mov
inc
fidivrs
push
jge
orb
adc
sub
inc
ret
push
pop
clc
mov
push
das
xlat
sub
and
pop
ja
pop
cmpsl
cmp
dec
scas
jmp
dec
popf
xchg
imull
inc
sub
push
and
test
push
ret
sub
lret
iret
xor
aas
xor
lock
movsl
das
aad
call
push
or
sbb
seta
jecxz
call
or
stos
lret
cmpb
inc
pop
ficoml
dec
push
stos
push
ret
push
mov
scas
xchg
aam
dec
pop
stc
and
test
add
cmp
dec
dec
ja
daa
mov
mov
cli
mov
mov
testb
sbb
xchg
push
loop
mov
enter
jmp
mov
aaa
inc
mov
add
xlat
lea
xchg
push
push
in
mov
insb
aaa
ror
ret
ljmp
call
lcall
cwtl
int
xchg
cmp
stc
adc
push
fnstcw
int
inc
cmpsl
mov
dec
in
leave
mov
push
mov
adc
lds
nop
call
flds
pop
jp
pop
inc
sub
sbb
sub
adcl
lea
adc
adc
lods
fisubs
mov
xchg
out
shll
fnsave
mov
mov
or
ljmp
inc
mulb
xor
mov
sbb
push
pop
js
inc
mov
push
cltd
mov
in
insl
imul
aaa
mov
sbbl
rcr
and
push
cli
push
fnstsw
xchg
sub
jle
pop
fdivrp
mov
cmc
push
xor
inc
sarl
push
xchg
mov
pop
icebp
lea
sbb
xchg
pop
sub
pop
sub
cmp
mov
lahf
in
pop
dec
adc
xchg
lods
push
insb
adc
pusha
dec
mov
pop
push
int3
xor
arpl
shlb
lock
aas
movsl
out
mov
daa
xchg
jns
jno
test
fnstsw
mov
in
testl
lret
mov
mulb
fwait
pop
sarl
mov
popa
clc
or
pushl
ljmp
jmp
rcrb
mov
clc
xchg
or
push
push
iret
dec
out
inc
mov
inc
jmp
decl
sub
mov
out
sar
mov
rcrl
push
sbb
jmp
sbb
fwait
cmpsb
or
mov
jecxz
push
mov
call
rcl
xor
call
cmpsl
mov
sub
js
imulb
mov
inc
mov
jmp
and
lds
jmp
ret
mov
rorl
inc
sbb
das
mov
lret
jg
mull
add
inc
subb
push
adc
andl
std
dec
jmp
enter
lock
adc
mov
jmp
cmc
repnz
cmpb
mov
faddl
xor
cld
addb
sub
pop
jo
cmc
pop
testl
xchg
jae
jmp
add
xor
lods
aas
mov
cmpsb
int3
and
inc
fwait
dec
sbb
loope
and
pop
leave
mov
sarb
sub
cmp
or
push
pop
cmp
adc
call
daa
and
add
xor
ret
push
je
data16
or
xchg
mov
addb
roll
outsl
stos
dec
sub
push
test
fs
add
lret
mulb
push
push
cmp
xchg
mov
jmp
mov
dec
enter
out
inc
pop
fs
leave
rcrb
aas
dec
mov
push
xchg
push
or
int
cmp
jno
cld
icebp
inc
mov
jns
mov
out
testl
ficoml
pop
in
mov
cs
or
add
or
stc
sarl
adc
push
pop
fcomip
cmp
ja
stc
mov
ss
cmpsl
xchg
jns
add
dec
div
inc
out
inc
data16
push
jns
aaa
call
mov
addr16
or
cwtl
cmc
xchg
jle
or
sub
jbe
ja
or
ss
insb
ret
fisubl
rorl
ds
mov
stos
mov
dec
mov
in
cwtl
push
test
mov
dec
dec
mov
xchg
dec
lret
fcmovbe
lods
xchg
into
xchg
sarb
push
adc
jo
pop
mov
mov
icebp
push
fsubrl
pop
or
stos
roll
mov
cmp
shrl
and
movzwl
cmp
jge
hlt
rcll
inc
adc
jmp
loop
inc
or
cli
cmp
call
mov
mov
jecxz
cld
jl
into
add
mov
popf
aam
mov
jge
pop
call
dec
push
jmp
cli
dec
call
sbb
sti
int
xchg
shrb
mov
and
inc
stc
les
mov
pop
cmpsb
xor
insb
push
fdivs
sbb
int
int
in
mov
dec
mov
add
push
dec
out
mov
sbbl
xchg
sub
fdivrs
mov
lea
sub
inc
mov
xor
daa
mov
out
sbb
jmp
int3
cmpl
lret
loop
add
and
dec
fimull
lods
faddl
mov
stc
icebp
and
adc
les
shll
ja
jae
pusha
sbb
cmp
push
jge
mov
jmp
jno
sar
jmp
pop
mov
pop
xchg
adc
sbb
dec
lret
leave
fsts
mov
movsl
pop
cmc
mov
icebp
mov
cmp
mov
out
ret
dec
sub
pop
and
lods
jne
daa
xor
cmp
push
pop
xchg
sbb
sbb
into
mov
mov
dec
push
ss
ficoms
add
xchg
add
cld
notl
inc
xchg
pop
inc
pop
jmp
and
ja
mov
call
loopne
or
stos
add
xchg
shll
lds
cmp
outsl
jmp
sahf
aas
lods
pushf
ja
int
jmp
xor
fdivl
xor
jg
cmp
mov
sbb
push
inc
jns
pop
and
out
mov
pop
or
push
popf
mov
xorl
cmpsl
call
sbb
xor
inc
dec
je
imul
pusha
movsb
lahf
into
cmp
orl
cli
call
cmp
popf
pusha
stc
fsubrp
enter
inc
xor
mov
stc
mov
or
lahf
in
fistpll
inc
popa
push
xchg
and
sub
xchg
dec
in
pop
iret
stos
and
dec
cmp
mov
pusha
jg
push
rcll
stos
rolb
movsb
lods
inc
xchg
test
push
test
shll
addr16
mov
jmp
jno
fbld
cmc
sahf
enter
sbbb
add
cmp
jp
out
imul
push
xchg
push
inc
lea
ss
out
shr
pop
sbb
pop
pop
xchg
mov
sbb
mov
jb
adc
leave
pop
inc
ffreep
movsl
mov
shl
orb
jnp
add
clc
daa
or
cld
pop
inc
jns
xchg
inc
int3
cmp
nop
mov
pushl
cltd
push
jmp
mov
inc
out
imul
std
fs
mov
push
jp
jp
aas
daa
hlt
lret
add
popf
cli
icebp
and
mov
xor
idivb
sub
daa
pop
xchg
cmc
mov
lret
cmp
mov
sbb
pushf
xor
mov
cmp
imul
dec
or
adc
push
jmp
test
loopne
add
call
lea
pushf
cltd
xchg
in
xchg
das
adc
gs
subl
sub
push
fists
add
sbb
dec
mov
jne
mov
int3
je
dec
mov
cmp
into
cwtl
testl
lret
sbb
ds
mov
dec
loope
pop
xor
jg
es
xchg
pop
xchg
subb
sbbb
mov
jl
pop
xchg
out
inc
pop
pop
ja
mov
xchg
jl
loopne
push
push
inc
jno
popa
mov
mov
sarl
test
pop
test
cld
inc
dec
test
stos
adc
inc
add
xchg
int
repnz
fs
aad
add
adc
popa
pop
inc
xlat
leave
push
pop
das
adc
lods
dec
jmp
add
daa
repnz
call
xor
jecxz
mov
jmp
add
lods
jae
inc
clc
leave
adc
das
push
cmp
movsl
push
cmp
mov
mov
stos
pop
push
cwtl
mov
mov
dec
pop
dec
inc
icebp
in
enter
mov
lret
scas
or
nop
pop
std
xchg
in
icebp
pushl
jg
mov
fcomps
mov
mov
add
adc
or
enter
pop
or
jge
insl
imul
sbb
and
outsb
mov
lret
mov
arpl
rorl
testb
pop
ds
jmp
sub
in
push
ljmp
push
cmc
mulb
js
mov
ret
mov
daa
and
or
int
mov
xchg
imulb
push
or
vcvtsi2sdl
scas
dec
xor
out
gs
xor
rclb
dec
inc
das
cli
aaa
mov
fbstp
jmp
icebp
sub
mov
inc
js
push
push
cmp
and
shrl
fsub
xchg
and
sti
ficomps
aad
mov
cmovl
mov
pop
pop
add
mov
sbb
rclb
fstps
mov
pop
cmpl
cmp
ljmp
jmp
sbb
jae
cmp
or
add
add
aaa
mov
pop
mov
loopne
push
test
fnsave
sti
cmp
cmpsl
mov
or
inc
cmpsl
mov
test
out
icebp
cmp
test
popa
push
add
and
dec
sub
or
add
inc
popa
in
inc
mov
or
in
pop
scas
aaa
pop
adc
push
jmp
and
fnstsw
clc
or
mov
lahf
sbb
pushf
pop
insb
iret
call
xor
pop
inc
loop
dec
stc
or
clc
xor
cltd
fdivl
and
sahf
mov
test
and
pop
mov
ja
idivl
pop
imul
jge
push
cmpsl
jge
sti
das
pop
cmc
sub
js
inc
or
call
out
jg
enter
mov
notl
pop
xor
inc
popa
push
add
mov
pop
cmc
mov
popf
dec
inc
popf
int3
iret
popf
cmc
sbb
push
xchg
xlat
sbb
mov
dec
xor
xchg
mov
shrl
adc
fldenv
das
loopne
inc
and
jbe
push
mov
subb
outsl
inc
pop
jo
and
mov
mulb
gs
mov
cmpsb
fcoms
dec
mov
fstpt
mov
cmp
add
lods
mov
sti
imul
testb
fldcw
fstps
lds
dec
test
add
xchg
test
pop
call
test
addl
pop
lahf
clc
cmpsl
or
lea
lea
sahf
fcompl
mov
dec
jle
or
pop
cld
mov
dec
dec
sti
xor
mov
outsb
mov
and
push
sub
sub
adc
mov
dec
mov
push
inc
fsts
xchg
xchg
or
sbb
push
insb
push
in
jbe
das
fwait
icebp
loopne
dec
dec
psadbw
cmc
xlat
imul
lods
fcomps
addr16
movsb
call
shrl
add
xor
arpl
lock
mov
cmp
ret
add
lcall
pushf
test
lea
push
mov
and
xchg
jne
sbb
js
push
xor
insb
cwtl
dec
cmp
or
and
adc
mov
arpl
xchg
mov
cmp
sbb
stos
xor
ja
notb
sub
call
mov
ja
add
inc
out
nopl
xchg
insb
push
adc
ljmp
mov
sar
data16
or
in
mov
or
inc
stos
and
call
cld
imul
inc
mov
add
jge
mov
adc
and
addr16
dec
int
clc
dec
push
ss
mov
mov
loope
jns
mov
pop
adc
sahf
iret
or
pop
ljmp
ret
mov
fdivr
pushf
lock
pop
cmpsl
jae
mov
pop
leave
mov
leave
cmp
loope
mov
inc
sub
bnd
jnp
bound
repnz
push
cwtl
jne
testb
push
or
inc
lock
movsl
rcrb
mov
dec
cmp
mov
or
or
xchg
push
mov
jbe
shrb
dec
leave
pop
jae
push
fsubrp
dec
fimull
sub
lcall
out
mov
stos
lret
jle
xor
add
push
mov
fbld
mov
xchg
aas
jp
dec
jo
call
mov
sbb
fldl
js
mov
hlt
mov
push
out
mov
dec
orb
add
sub
add
dec
mov
mov
jmp
test
push
mov
fmul
xorb
inc
incl
jecxz
sbb
pop
and
mov
or
fwait
cli
push
shrb
pop
mov
adc
in
add
popl
add
cmp
outsl
andb
pop
fisubs
outsb
in
mov
jmp
jmp
push
imul
fistpll
testb
push
ret
jb
pop
mov
xchg
test
mov
out
sub
outsb
cwtl
adc
js
sub
cwtl
sub
xchg
and
add
mov
sti
stos
les
lcall
xor
divl
xchg
push
push
pop
jnp
adc
enter
inc
shrb
cli
inc
inc
mov
pop
stc
and
jno
stc
jp
bound
mov
daa
or
or
loopne
push
xchg
mov
pop
fstps
out
addr16
push
adc
mov
call
das
mov
jb
and
imul
cli
add
sbb
gs
jmp
call
xor
mov
flds
inc
cmp
mov
arpl
jge
mov
jmp
pop
shl
xchg
bound
mov
xchg
shrl
cmp
icebp
stos
es
add
add
popl
jge
pop
sub
sub
inc
adc
pop
lcall
popa
ljmp
popf
mov
or
dec
je
daa
mov
pop
mov
std
test
or
mov
nop
push
pop
jmp
adc
mov
enter
adc
inc
mov
or
lock
xor
mov
mov
and
call
mov
or
jl
shl
in
mov
mov
inc
mov
cmp
xor
movsb
cltd
lods
in
pop
cmp
test
popf
sub
rorl
pop
xor
xor
ljmp
dec
mov
out
cmp
rcrb
pop
xor
dec
xchg
movsb
inc
sti
add
xchg
cmovbe
pushf
int3
xchg
pop
xchg
roll
rcrl
cld
cmp
and
std
lahf
lret
js
xchg
push
push
ss
xchg
xchg
cmpsb
fcom
aaa
pushf
jb
je
lahf
shr
jnp
mov
les
stos
mov
inc
push
inc
cwtl
mov
ret
mov
push
cmpsb
enter
shlb
mov
mov
jg
loope
and
gs
mov
sub
mov
mov
loopne
call
mov
int
mov
xor
out
or
cs
repz
mov
jnp
cmpsl
xlat
add
imul
pop
hlt
mov
notb
inc
popa
push
mov
outsl
bound
in
sbb
iret
xor
mov
mov
adcl
lret
das
data16
movsb
push
sbb
hlt
out
jne
stc
popa
add
testb
sub
or
sbb
ret
push
mov
std
imul
call
xchg
outsb
mov
mov
in
ds
pop
xchg
ss
cmp
push
inc
loopne
push
cmp
aas
test
cwtl
loopne
sub
sbb
or
daa
cli
push
mov
dec
mov
sbb
ljmp
adc
or
push
pop
dec
dec
xchg
icebp
arpl
aam
jno
push
call
and
inc
ret
test
cmp
sub
outsl
jnp
inc
jo
push
subb
and
aas
push
fdivl
mov
enter
lahf
push
orb
push
pop
mov
inc
ret
pop
test
adc
hlt
rolb
sti
mov
xchg
pop
lahf
pop
popf
mov
pushf
lahf
shlb
and
inc
push
xor
inc
adc
lret
testb
xchg
pop
cmp
adc
cmp
loopne
test
das
nop
pop
push
xor
xor
js
dec
movb
sbbb
icebp
xchg
push
adc
inc
out
in
or
mov
jmp
in
into
or
pop
cli
dec
cmp
mov
xchg
lods
daa
inc
notl
movsl
std
add
mov
jge,pt
hlt
aam
or
clc
cmpsb
mov
adc
cmp
negl
es
xor
stc
xor
add
negl
sub
mov
pop
sbb
dec
enter
outsb
mov
call
push
mov
inc
in
jmp
sub
and
xchg
push
cmp
mov
test
mov
or
push
sub
pushf
je
xchg
pop
mov
add
mov
enter
jge
out
jb
test
xlat
loope
lods
test
inc
std
loope
cmp
mov
push
push
mov
das
xchg
pop
jae
cmpsb
or
dec
push
push
or
push
sbb
push
xchg
dec
cmp
mov
test
mov
mov
enter
add
or
inc
mov
mov
xchg
test
je
lahf
fdivl
std
push
push
clc
daa
int3
sbb
push
fld
cmp
inc
jmp
mov
lods
stos
xchg
leave
stc
ret
push
sub
push
add
arpl
ss
lret
enter
sub
scas
adc
popf
into
push
or
dec
out
xchg
insl
pop
and
pop
ja
mov
ja
sti
or
loopne
xchg
bound
adc
popf
je
dec
orb
inc
pop
pop
in
and
mov
sub
or
sti
imull
or
pop
das
cmc
insb
jmp
inc
sub
bound
jle
mov
xchg
std
mov
sbb
xchg
scas
js
sub
arpl
push
jmp
inc
push
cli
mov
cmp
pop
mov
repnz
call
xchg
imul
inc
les
pop
fcom
test
or
mov
cltd
xchg
dec
repz
push
call
jbe
lahf
add
outsb
mov
test
dec
or
popa
xor
cmp
mov
dec
or
shlb
enter
stos
dec
jo
mov
and
mov
push
outsl
adcb
jnp
jle
into
cli
cli
arpl
cmp
lret
addr16
hlt
jo
mov
insl
js
nop
popa
ja
ret
pop
push
push
dec
test
loope
test
out
sti
mov
cmp
loope
es
jle
bound
ljmp
fstps
std
add
lret
xor
xchg
inc
cmp
push
testl
jb
divb
test
test
adc
daa
inc
pop
add
js
cmpsl
mov
jno
or
xchg
adc
divl
call
loope
adc
inc
dec
dec
or
cmc
fwait
add
loop
loop
or
xchg
pop
jae
or
jbe
sub
addr16
dec
pop
sub
fisubrs
sahf
cli
lods
push
clc
bound
stc
in
cli
adc
and
mov
jg
cmpl
pop
call
adc
xchg
leave
into
je
and
in
inc
cli
pusha
jge
lahf
xor
repz
jle
scas
xchg
call
inc
or
inc
das
adc
xchg
xlat
repnz
lds
pop
jb
andl
dec
and
xchg
mov
fidivs
adc
daa
mov
add
ljmp
mov
push
stc
fdivp
and
roll
hlt
pushl
sub
repz
sahf
xchg
testl
ficoml
adc
sub
cwtl
ljmp
movsl
mov
xor
inc
stos
xchg
inc
jne
jae
mov
shl
mov
test
push
push
cli
test
je
sub
xor
je
test
xor
inc
sbb
push
test
dec
or
cli
nop
add
orl
push
pop
and
xor
cli
push
shll
popf
imul
out
xchg
dec
or
push
push
push
xchg
mov
jmp
xchg
mov
fsub
sub
adc
cmp
mov
call
pop
cwtl
sub
rolb
jo
std
cmp
mov
mov
subl
shr
call
and
push
push
call
jg
std
mov
mov
pop
test
adc
xor
loopne
xor
push
push
add
xchg
jnp
and
adc
push
add
call
in
aas
in
add
fimuls
push
cmpsb
fcoms
xchg
xchg
mov
mov
or
inc
mov
jae
mov
jg
inc
jmp
call
popa
adc
push
cmp
hlt
call
aas
jae
ljmp
icebp
mov
jo
mov
add
out
lea
sbb
sub
dec
repz
pop
dec
enter
pop
xor
and
rcrb
sahf
pop
jmp
dec
mov
or
das
bound
xor
add
pop
adc
cmc
int3
push
mov
sahf
sbb
insb
jnp
iret
jmpw
push
jb
sarl
mov
adc
fucomp
push
in
repz
mov
test
add
das
mov
insl
push
aaa
adc
push
or
cmc
insl
sbb
push
call
dec
rcll
xor
jmp
mov
jns
int
push
mov
pop
xor
push
sub
jle
pop
pop
jns
push
xchg
xorb
sub
xlat
cmp
mov
orl
dec
adc
clc
dec
popf
loop
icebp
test
xor
shl
pop
sub
stc
fidivrl
sahf
movsb
scas
roll
ljmp
adcl
push
add
pop
inc
pop
andb
popa
scas
lahf
xlat
subl
push
daa
je
call
rcll
pop
orl
add
sub
sarb
mov
lcall
dec
ss
lods
adc
pop
lahf
hlt
pop
push
push
cmp
adc
lret
dec
out
insl
or
loopne
test
sarb
dec
fwait
xchg
mov
adc
std
test
icebp
xor
mov
cmp
cwtl
gs
inc
repz
inc
sub
mov
repnz
xor
ficompl
inc
stos
or
test
int
add
pop
es
sub
stc
aam
fs
adc
mov
jp
ds
pop
bound
lock
aaa
dec
fsubr
stos
cld
xchg
loope
mov
repz
out
stc
lahf
xchg
dec
sbb
lods
out
and
jmp
jl
insl
jno
dec
jb
adcb
mov
xchg
cmp
xchg
or
shl
dec
fsubrl
into
pop
jmp
aam
out
mov
dec
cmp
mov
fwait
mov
mov
sub
jae
push
and
add
mov
gs
and
mov
xor
movsb
out
jb
jmp
mov
mov
movsb
aam
push
lea
iret
push
xor
ret
adc
push
mov
xchg
hlt
int
rcrl
jb
ljmp
popa
inc
cwtl
shl
loop
js
sub
pop
inc
cmp
add
mov
lcall
pop
shlb
or
mov
sbb
inc
fisubs
cmp
lret
jmp
ds
or
loopne
mov
dec
cmp
mov
push
movsl
cld
inc
or
mov
pushf
jnp
mov
lock
in
sub
pushf
push
cmp
xor
cmpsl
ss
mov
movsl
fstps
sti
inc
bound
xor
sub
stos
das
lods
stc
testl
mov
push
pop
mov
push
ljmp
aam
xchg
or
push
xchg
push
loop
pushf
pop
pop
ja
in
jl
dec
dec
mov
inc
or
pop
out
or
hlt
cmp
jmp
xchg
mull
das
dec
hlt
fs
inc
inc
and
push
pusha
mov
jmp
fcompl
sbb
gs
cmpsb
nop
sub
jg
and
cmpsl
nop
and
pop
inc
stc
les
test
and
xchg
jo
push
and
shlb
add
cwtl
cltd
jg
jecxz
cmp
xchg
sbbb
push
jo
cmp
push
xchg
out
cmp
fsubrl
jae
adc
repnz
jae
lret
popa
popa
jb
sbb
lahf
leave
adc
xchg
xor
ja
or
mov
popa
loopw
xor
call
mov
cwtl
ljmp
sbb
dec
xor
push
pop
test
call
xor
das
jl
addr16
push
jle
push
push
mov
push
stos
fstpl
and
lea
mov
mul
in
lret
cmp
mov
push
jge
inc
mov
negb
add
xchg
mov
outsb
cmpsl
inc
mov
add
mov
push
cld
push
push
jp
or
or
lods
mov
xor
push
popf
pop
fsubrl
fs
xor
int3
push
daa
mov
call
out
in
fmull
stc
push
int
rcll
shrl
and
incl
out
or
xor
cld
jg
sub
add
mov
imul
call
add
es
cmp
push
mov
out
das
jmp
lcallw
out
or
mov
xor
xchg
mov
inc
in
pop
out
scas
mov
add
sub
cmp
jne
ljmp
out
pushf
gs
jae
pusha
and
scas
filds
fwait
jnp
pop
mov
lcall
insb
push
mov
cmp
xchg
mov
add
inc
or
prefetchw
mov
push
push
daa
in
test
loopne
cs
mov
mul
xor
push
out
sbbl
in
enter
mov
lcall
fldt
pop
aam
mov
inc
mov
sub
mov
sahf
cmp
push
dec
mov
jne
bound
pop
inc
xor
mov
add
int3
xchg
or
xchg
jg
aam
jns
stos
adc
shrb
ja
jge
add
rcll
fs
inc
cld
ret
jbe
in
jmp
mov
jb
repz
jne
adc
repnz
and
mov
sahf
xor
loopne
out
popf
into
jb
xor
add
les
stos
adc
jmp
adc
aad
inc
inc
aaa
dec
inc
pop
mov
ss
test
push
dec
push
sbb
inc
mov
fcmovb
pop
xor
add
mov
out
and
dec
in
sbb
or
popf
mov
pop
data16
dec
andb
test
aam
fwait
pop
mov
fcompl
fisubrs
das
cltd
xchg
repnz
sysexit
xor
mov
je
int
les
mov
sbbb
inc
xchg
pop
cmpsb
cmpsl
and
jmp
pop
mov
inc
add
mov
push
aam
adcw
in
jbe
icebp
mov
xor
je
jb
sbb
data16
jmp
jbe
inc
stc
hlt
xor
jp
repnz
jge
int3
cli
les
or
inc
call
das
or
jmp
sti
stos
sbb
cmp
adc
mov
lahf
hlt
xchg
sahf
enter
cmp
xchg
or
sub
xchg
stc
lahf
aas
pop
dec
mov
sbb
sub
cmp
pop
xor
insl
shl
add
shll
sub
jmp
decl
mov
push
dec
or
mov
je
mov
out
testb
xchg
insb
or
mov
xchg
and
xchg
out
cwtl
jp
mov
add
xchg
pop
aaa
test
leave
or
mov
je
lods
dec
jmp
add
mov
mov
call
fdivs
inc
mov
cmp
test
dec
xchg
daa
pop
jle
mov
stos
mov
or
pushf
jmp
adc
push
iret
subb
icebp
lahf
outsl
jmp
push
inc
dec
mov
push
test
int
cmp
enter
pushf
xchg
nop
in
mov
out
mov
mov
sbb
fdivrl
and
enter
pop
insl
loop
das
je
subl
adc
mov
mov
jae
jmp
lods
adcb
inc
add
or
idivb
fisubrs
icebp
xchg
gs
pop
push
sbb
push
or
jmp
enter
lcall
jge
popf
ss
push
pushf
mov
faddp
jge
dec
hlt
call
pop
mov
ret
or
loopne
or
cmpl
mov
leave
int3
push
fcmovnbe
and
or
fwait
ss
jg
push
and
jbe
mov
pop
pop
stos
or
mov
cmp
and
jmp
jae
insb
xchg
idivb
xchg
mov
or
aas
test
push
enter
shll
sub
jmp
lahf
mov
mov
std
mov
fwait
ret
mov
call
mov
pop
ljmp
sbb
push
jmp
jg
sbbl
and
xchg
adc
sarl
dec
jmp
aas
icebp
xchg
dec
xchg
jns
push
movsl
loope
test
sub
cld
sarl
adcb
nop
sub
ror
or
test
inc
pop
pop
push
push
push
or
in
hlt
rcrl
dec
pop
fwait
scas
xchg
xchg
push
push
mov
jmp
int3
cmp
in
ret
sub
aaa
mov
inc
cmp
pushf
int3
mov
fstl
xchg
call
mov
pop
jno
add
jns
jo
mov
movsl
pop
and
add
fs
mov
and
push
cli
lods
dec
cmc
xor
inc
ja
or
lahf
mov
pop
fistl
pop
lds
pusha
dec
or
add
inc
dec
andb
mov
test
push
jecxz
push
mov
data16
xchg
test
jmp
push
xor
repnz
mov
mov
test
mov
mov
mov
aam
repz
scas
fstps
popf
aad
in
mov
int
fisubs
or
sbb
push
or
pusha
inc
cwtl
mov
lahf
mov
pop
dec
mov
push
pop
cli
sub
pop
push
nop
jp
jae
call
fnstcw
xor
adcl
frstor
or
jnp
dec
roll
scas
repnz
ja
ja
xlat
dec
es
fcomi
pop
jmp
add
ret
and
sti
pushw
arpl
inc
mov
cmp
movsl
enter
adc
repz
push
sti
pop
push
ror
fdivl
mov
fstp
adc
loopne
jns
inc
mov
lock
jmp
xchg
xchg
nop
and
cmp
jmp
clc
add
and
bnd
arpl
mov
int
mov
xchg
ret
call
adc
clc
pop
leave
pop
or
pop
data16
xchg
out
idivl
cmp
out
mov
pop
call
gs
push
in
or
pushf
rcr
xchg
pop
shl
scas
push
or
fisubrs
shr
out
mov
pop
popf
int
in
mov
and
test
dec
repz
push
jmp
mov
push
xor
and
fs
loopne
fldt
and
or
adc
sbb
xchg
add
testb
push
aas
mov
sti
push
lret
loopne
arpl
ret
push
ror
pop
dec
sbb
add
push
or
imul
je
cmp
push
mov
data16
sub
sar
jb
pop
mov
movzwl
mov
andl
popa
xchg
fstl
xchg
stc
push
mov
inc
add
aas
mov
inc
out
add
or
xchg
dec
sub
fistpll
sete
test
out
fisubrl
cld
loope
xchg
sbbl
or
call
out
daa
cli
mov
pop
dec
lock
xchg
cwtl
mov
push
dec
in
push
hlt
loopne
cmpsb
dec
hlt
and
in
pop
or
or
jno
pop
inc
add
test
push
inc
mov
push
mov
ss
daa
lds
push
int3
pop
mov
push
jg
out
test
push
pusha
out
pop
jnp
xor
cs
xchg
ss
or
xchg
das
sbbb
mov
push
mov
das
decl
pop
inc
or
repnz
xor
std
push
nop
pusha
std
push
add
xor
dec
cmpsl
xchg
ja
imul
mov
sbbl
jo
cmp
jno
add
enter
or
nop
sbb
pop
jmp
sub
mov
push
mov
adc
mov
and
gs
push
call
out
cld
scas
rcrb
mov
cs
adc
push
repnz
pop
dec
inc
inc
in
icebp
and
bnd
cmp
mov
xchg
jmp
mov
jg
int3
mov
jg
mov
dec
adc
stc
mov
lods
dec
lea
leave
js
scas
repnz
cmp
push
jo
pop
loop
pushf
es
stos
lods
jmp
inc
decl
rorb
lahf
das
add
aam
enter
aaa
cmpsb
call
and
or
shlb
not
sbb
mov
cmp
push
movb
jg
movsb
imul
inc
or
adc
pop
faddl
std
push
push
call
sti
and
xchg
xchg
jns
dec
outsb
pusha
xor
mov
mov
sbb
jmp
cwtl
mov
sbb
in
mov
orb
das
rolb
mov
jg
movsb
sar
jnp
outsl
fisubrs
mov
mov
sbb
loope
ja
test
push
mov
add
hlt
mov
or
mov
aam
adc
xchg
insb
sub
mov
add
insl
sub
loope
mov
cmp
out
cmp
sbb
rorb
mov
mov
jo
cltd
mov
or
xchg
cmc
xchg
pop
out
loope
ss
outsb
add
popa
shlb
xchg
mov
or
dec
jmp
sub
testb
test
lock
pop
or
mov
add
ss
shrl
or
bound
xor
sahf
push
adc
mov
cmp
xchg
iret
cltd
mov
cld
enter
dec
cli
or
pop
into
and
sub
cmp
adc
repnz
icebp
push
jmp
mov
lods
sbb
mov
cld
sbb
mov
mov
mov
or
pop
sbb
lods
jl
push
push
mov
movsl
xor
sub
mov
imulb
cwtl
dec
dec
adc
xchg
outsl
cmp
jnp
mov
or
pushl
pop
cwtl
orb
xor
adc
push
mov
sbb
andb
in
cmp
out
adc
fistpl
call
pop
jmp
xor
cwtl
sub
jmp
jne
pop
push
or
inc
jge
mov
pop
push
dec
pop
test
in
sarb
cmp
adc
pop
mov
cmp
push
int3
leave
push
jae
push
outsb
ljmp
sahf
xor
insb
inc
or
sbb
dec
lea
sub
cmpsb
shrb
sbbb
adc
movsl
cs
add
cmp
lods
pop
scas
inc
xchg
or
jge
std
jl
push
inc
icebp
jle
scas
outsb
lahf
add
and
sbb
aam
repnz
lea
jne
out
xchg
lret
jnp
jmp
mov
pop
addr16
jl
jl
or
xchg
add
fadds
xor
add
dec
adc
stos
or
loop
sub
inc
or
roll
push
and
pushf
mov
inc
call
jae
outsb
fidivrs
rorb
in
mov
sbb
or
xor
mov
add
faddl
enter
push
jle
add
and
xchg
jl
scas
jne
cmp
or
aad
and
imul
xor
inc
add
fisubrl
adc
je
mov
add
bound
into
sub
fsts
and
dec
push
mov
push
int3
inc
lret
lret
popa
sub
andl
call
push
lea
xchg
sub
pop
stos
inc
xor
xor
lds
fsubrs
mov
int3
mov
ljmp
mov
int3
push
sbbb
adc
cmp
cmp
jmp
sub
repnz
stc
insb
mov
add
mov
imul
cld
cli
dec
inc
loope
mov
xor
mov
push
xchg
les
mov
push
xrelease
loope
mov
push
xor
dec
inc
inc
scas
jmp
mov
cld
in
mov
sub
scas
jns
dec
hlt
cmp
inc
mov
jecxz
incl
mov
mov
jnp
sbb
pop
jle
and
test
andb
andb
je
push
push
pop
jnp
sbb
lahf
fidivl
lahf
pop
add
mov
xor
aam
testb
jmp
push
pop
sbb
add
std
js
sahf
xor
jge
adc
fwait
jnp
mov
jmp
push
sub
stos
mov
jge
cmpsl
faddp
xchg
push
add
push
or
jmp
adcb
pop
test
arpl
xlat
sbb
dec
xchg
dec
test
xor
mov
xchg
sbb
loope
jae
dec
mov
fdivl
repz
or
stc
dec
cli
jne
loope
push
jmp
out
cmc
lock
outsl
aam
mov
jp
lahf
lret
leave
das
ss
sbb
mov
sub
pusha
mov
push
std
gs
xchg
mov
inc
mov
lcall
adcl
je
arpl
mov
jne
xchg
cmp
pop
popf
xchg
mov
das
data16
cmpsb
fsts
fucompp
cmp
push
pop
aam
nop
aas
inc
mov
jo
jo
aam
test
cmp
push
out
push
push
mov
dec
xor
xchg
rolb
xor
pushf
repnz
mov
push
jo
inc
mov
out
jo
dec
int3
dec
jo
jmp
adc
xor
pop
stos
add
push
and
ljmp
or
gs
xchg
lcall
call
nop
add
push
xor
or
xchg
push
mov
cmp
and
dec
pop
dec
hlt
negb
pop
adcb
ja
mov
jae
pop
int3
lcall
push
or
mov
lret
test
cmp
push
xchg
lock
vfmadd231ps
xchg
xor
fisttps
sahf
xor
enter
lods
cmpsb
fwait
mov
push
inc
inc
adc
jl
nop
jle
pop
call
jmp
or
ret
push
add
xchg
push
lods
cs
add
lock
push
clc
mov
loopne
clc
int3
out
mov
mov
add
adc
jbe
mov
push
das
sbb
dec
jmp
cmp
cmp
dec
mov
xchg
jmp
rcrl
cmp
cs
mov
cmp
inc
hlt
xor
xchg
stc
jne
sbb
mov
inc
gs
lahf
sti
jae
testl
fucom
out
adc
dec
add
jno
rcl
fidivrs
mov
cwtl
adc
out
cmp
outsl
add
cmp
stos
aam
cs
xor
inc
lock
test
lahf
push
cmp
iret
dec
mov
push
add
clc
pop
sbb
repz
testl
out
int3
cmc
mov
xor
out
xlat
dec
and
imul
in
shr
addr16
shlb
sub
sbb
fdivrl
fadd
dec
inc
pop
cmp
cli
lret
ss
out
mov
xchg
sti
dec
pop
outsb
sub
call
subl
inc
fidivs
xchg
adc
mov
test
je
out
stos
test
jae
adc
sahf
imul
mov
stc
jp
cmp
lods
lea
xor
dec
dec
adc
add
lea
mov
push
enter
pop
add
inc
pop
cmpsl
pop
icebp
loope
daa
push
sbb
pop
push
imul
sub
clc
insb
xchg
push
mov
mov
das
test
pop
popl
les
mov
jnp
jno
mov
cmpsl
scas
fistps
cmp
mov
les
inc
adc
push
mov
cmp
inc
fbld
cld
stc
addl
adc
sub
dec
and
pop
jnp
mov
jnp
sub
xchg
stos
xchg
sub
ficompl
in
popf
or
fwait
or
adc
mov
call
jo
ficoms
mov
lea
mov
xor
inc
mov
lret
or
pop
xchg
ret
dec
repnz
call
pop
lods
out
sub
ror
stos
mov
push
mov
mov
jle
repnz
adc
dec
add
leave
pop
jnp
fcomi
xchg
loopne
dec
cmp
or
jmp
or
fnstenv
xchg
push
cmp
xchg
mov
movsb
mov
fxtract
punpckhbw
mov
jge
pop
or
roll
and
add
pop
adc
test
mov
mov
push
aam
fwait
out
xor
test
mov
aaa
jecxz
pop
outsl
dec
stos
inc
or
inc
shr
pop
arpl
dec
or
loope
add
lea
mov
inc
stos
mov
pop
daa
sbb
pusha
subb
lods
rorl
or
lea
xchg
jge
cmp
cmova
mov
movsl
sbb
call
push
jnp
nop
sub
in
pop
jmp
or
mov
inc
sbb
enter
jne
out
call
cmpsl
mov
push
movsl
push
mov
inc
jb
cmpsl
lret
mov
lock
xchg
rol
add
add
cwtl
mov
pusha
push
mov
cli
add
ljmp
jns
xchg
adc
ja
dec
imul
cld
call
lods
in
lods
in
sub
fdivrs
pushf
sub
mov
jne
cld
movsl
pop
lods
xchg
and
xor
xor
sti
repnz
shll
mov
cmp
in
jmp
loop
fisubrs
xlat
mov
movsl
push
mov
pop
mov
sbb
mov
sar
sets
mov
neg
mov
leave
stos
repnz
rolb
call
orl
dec
dec
insb
fdivrl
mov
push
stos
loopne
call
jecxz
cmp
push
sub
jnp
inc
pop
mov
jecxz
pop
in
es
mov
mov
out
mov
xor
sub
mov
sbb
je
push
pop
in
orb
or
xchg
and
enter
das
or
add
and
xchg
pop
sub
sbb
mov
jb
push
xchg
rolb
cmp
test
je
cmpl
xlat
or
bound
ret
rolb
lock
xchg
test
dec
aam
adcb
repnz
inc
and
xchg
jge
popf
jbe
inc
dec
pop
pop
cwtl
fdivp
aaa
jb
mov
add
mov
inc
push
xor
pop
mov
add
int3
push
inc
loop
mov
cltd
hlt
outsl
mov
mov
xchg
je
xor
jb
jnp
xchg
inc
lods
icebp
inc
call
cmpsb
das
in
cmp
jae
ret
cmp
movsb
cmp
cmpsb
insb
sbb
and
push
in
pop
mov
leave
mov
sahf
mov
or
int
mov
fisubl
clc
leave
pop
mov
cmovl
cmp
pop
pusha
bnd
xor
jl
insb
pop
push
daa
add
cli
lock
mov
push
sbb
jmp
mov
cmp
and
stc
out
sub
xor
notb
or
lods
mov
cmp
fndisi(8087
clc
sub
scas
lcall
mov
es
loop
sbb
jno
or
or
adc
add
cmp
push
sub
or
jno
cld
into
mov
sbb
jp
mov
mov
imul
xchg
dec
clc
xchg
lret
sbb
fucomi
dec
fsubrs
fs
push
test
inc
rcl
int3
mov
jmp
fisttps
in
sbb
and
mov
xor
std
pop
sub
call
or
or
xchg
nop
repnz
lea
addl
pop
push
out
mov
xchg
ja
test
adc
cli
xor
sbb
sti
cmp
out
dec
or
push
aad
and
adc
mov
call
push
pop
or
insl
and
movsl
daa
inc
mov
into
jnp
add
loop
js
loop
xchg
aad
psubusw
out
ljmp
imul
inc
jmp
dec
aad
cmp
fldl2e
mov
insb
out
add
inc
adc
lods
push
add
mov
push
push
hlt
mov
or
cs
mov
iret
ss
push
ret
mov
movsb
cwtl
add
pusha
repnz
sub
sub
adc
clc
std
cmp
push
or
inc
pusha
sub
xor
jno
xor
and
or
pop
dec
xchg
mov
jmp
scas
das
popa
push
insb
cmp
push
push
addb
sbb
aam
rorb
xchg
push
push
aaa
and
orb
or
je
pop
das
push
and
sahf
stos
fimull
xor
lock
scas
nop
cs
xchg
rolb
xor
add
push
adc
mov
dec
faddl
or
push
mov
aaa
lock
or
ret
or
cwtl
icebp
cmc
orl
jl
xchg
pop
and
cli
lret
push
stos
xchg
das
inc
std
adcl
sub
dec
and
jg
int3
xchg
inc
xchg
xor
dec
aam
pop
subb
test
mov
and
sar
aad
in
jmp
jl
imul
sarb
push
push
bnd
les
xchg
mov
sub
and
pop
mov
nop
xchg
pusha
mov
ja
jne
push
int3
enter
iret
jne
mov
leave
stos
push
jg
xchg
push
jo
pop
mull
inc
push
push
xlat
movsb
sahf
sbb
cs
sbb
mov
cmp
sub
addb
out
stos
lods
aam
xor
fucom
inc
add
xor
jg
fiaddl
in
adc
loopne
xchg
dec
inc
scas
adc
push
ror
idivb
rcr
dec
pop
mov
test
mov
and
neg
daa
sub
adc
and
das
test
pop
lea
mov
or
sub
mov
insb
stos
or
ret
xor
and
cld
out
aaa
adc
movsb
xor
jns
add
push
push
adc
dec
loopne
dec
mov
leave
pop
mov
push
mov
aas
icebp
pop
scas
jmp
popa
jne
push
sarl
mov
pop
dec
les
out
jp
push
push
mov
fidivs
mov
jmp
mov
loop
test
add
mov
mov
cmpsl
enter
sub
push
gs
add
push
outsb
sahf
xchg
shl
mov
adc
ljmp
leave
adc
bound
xchg
insb
int
push
in
inc
add
cmpsl
test
fldl
mov
pop
lcall
iret
inc
xchg
mov
pop
mov
and
clc
fimuls
inc
adc
push
imul
mov
ficoml
inc
mov
fcoml
subb
das
inc
xchg
pop
dec
jle
lea
fs
das
inc
lea
lret
push
cmp
add
jmp
lods
sbb
or
push
sub
in
loopne
test
cmp
lahf
mov
xchg
cmc
inc
xchg
pop
sub
add
adc
dec
cltd
push
ljmp
dec
shll
jo
adc
mov
mov
xchg
add
cmp
mov
subb
repz
mov
pop
cmpsb
std
jb
leave
mov
jae
adc
xchg
in
data16
fdivr
pop
movl
cmpsb
lret
push
or
orl
stos
jb
negl
mov
int3
pop
mov
push
cmpsb
push
stc
dec
push
pushf
dec
inc
xor
push
inc
or
xchg
pop
xchg
imul
inc
sbb
xor
push
pop
pop
jb
sbb
mov
add
daa
sbb
inc
loopne
push
push
ljmp
pop
or
fnstenv
push
sub
adc
test
fnsave
push
test
repnz
jmp
xor
addr16
in
xchg
mov
test
test
je
mov
pop
test
dec
les
push
or
lock
xchg
jl
inc
testl
add
jne
push
push
pop
xor
leave
bound
pop
cld
fldenv
xor
pop
xchg
in
jbe
bound
js
add
push
cmpsl
movsb
test
ljmp
xor
xor
daa
push
xor
push
push
pop
cmp
push
mov
cmp
lret
adc
adc
cmpsl
mov
js
and
rcrb
std
add
adc
xchg
add
xchg
data16
lahf
movsb
hlt
mov
subb
fcoms
into
mov
mov
inc
xchg
or
xor
aas
jo
les
or
sub
orl
push
cmpsl
mov
rorl
jb
test
enter
pop
mov
sub
je
push
imul
aaa
mov
dec
hlt
jle
fsubrs
adc
sbb
push
push
int3
fwait
dec
and
push
test
mov
and
sbbl
icebp
pop
movsl
or
lock
or
dec
pop
into
xor
cmc
or
push
or
push
sub
scas
rclb
imul
mov
ljmp
jbe
jb
call
in
and
mov
sahf
mov
xchg
push
ret
add
dec
sub
push
inc
add
or
push
lock
call
dec
sbb
rclb
inc
cmp
push
jg
adcl
aaa
push
dec
xchg
inc
sub
dec
std
xchg
dec
jmp
movb
push
call
hlt
ds
cmp
pushf
call
leave
mov
push
sbb
in
mov
add
mov
dec
or
lret
sub
rclb
and
pop
arpl
enter
inc
stos
fadds
push
sbb
test
and
fisubrl
inc
aas
lea
xchg
jl
imul
jb
inc
jne
out
fdivrs
and
cmp
adc
call
jmp
xlat
inc
cmp
mov
das
out
xchg
jge
pop
lods
fiadds
dec
dec
ss
and
daa
inc
dec
mov
inc
scas
adc
push
jb
call
add
push
call
mov
out
pop
adc
aam
jnp
or
push
pop
mov
cmp
jl
adc
xchg
or
mov
scas
pop
or
int3
insl
cld
shlb
push
std
and
bound
lock
inc
adcb
dec
push
dec
mov
mov
fbld
nop
pop
and
mov
inc
leave
jns
or
pop
push
pop
mov
mov
inc
fcomip
cmp
xor
mov
scas
pop
stc
mov
add
mov
adc
xchg
daa
out
pop
mov
xorl
jmp
push
inc
or
inc
push
insb
rcrb
add
shlb
xor
push
fnsave
dec
and
adc
pop
sub
lods
call
jl
add
movsl
jns
lds
mov
inc
or
mov
mov
inc
enter
jge
lahf
ja
iret
fldl
sub
pop
mov
sbb
push
aad
cmp
pop
popf
ja
sub
jl
xor
mov
mov
add
add
mov
xchg
sbb
cs
bound
fwait
xchg
sbb
mov
dec
add
and
jae
push
xor
push
cmc
cli
and
mov
add
ja
push
sub
xchg
mov
mov
sbb
rorl
call
aam
push
add
ret
out
xor
clc
jmp
aaa
xor
repnz
rcll
jno
mov
insb
pop
dec
rclb
shrb
mov
rcr
outsb
mov
icebp
push
sbb
sub
loopne
mov
sbb
daa
cmp
or
push
aam
stos
xchg
loope
loop
or
clc
push
xchg
ljmp
daa
clc
aad
push
in
push
fbld
mov
out
dec
shrl
icebp
pop
call
decl
in
mov
pop
xchg
cmp
or
sti
aas
adc
lea
xor
in
iret
inc
push
mov
cld
daa
xor
pop
mov
stc
mov
mov
call
adc
or
cmpsb
femms
lods
shlb
and
jl
xchg
clc
imul
insl
and
cwtl
aam
sub
xchg
jo
xchg
cmp
jns
push
ja
sti
insb
push
pop
test
xchg
or
adc
fsubl
in
jl
xchg
and
test
jecxz
mov
loop
lret
imul
pop
enter
mov
jg
fdivs
insb
add
mov
mov
mov
push
stos
lret
xor
fs
dec
rcrb
enter
sub
adc
pop
hlt
sbb
add
mov
stos
sub
mov
lods
mov
xchg
pop
dec
xor
ds
call
mov
enter
push
or
xchg
rorb
xchg
into
push
mov
sub
les
insb
mov
rcrl
pop
push
daa
fdivl
daa
push
mov
jg
sbb
mov
jno
cltd
cli
inc
xchg
stc
repz
stos
arpl
call
pop
jns
dec
insb
das
sbb
push
in
sbb
cmp
and
lea
cli
push
inc
loopne
lea
sti
jo
mov
or
mov
outsb
jp
shlb
imul
cmpsb
rcll
aad
in
mov
push
enter
dec
xchg
cmp
fdiv
xor
outsl
cli
addb
idivl
mov
scas
xchg
dec
decb
call
xchg
jb
ss
fucomi
push
jno
add
rclb
insb
cmp
pop
push
aaa
or
in
push
push
lahf
fisttpll
adc
cld
push
sub
xor
addl
sti
cmpsl
and
or
je
dec
inc
mov
mov
mov
pop
lock
mov
jecxz
call
mov
xchg
mov
sub
sub
aaa
inc
push
dec
stc
loopne
add
mov
ret
xchg
adc
pop
aas
imulb
data16
test
mov
push
out
jmp
das
stos
inc
pop
pop
jl
popf
xor
es
in
aad
pop
pop
imul
aaa
push
out
pushf
pusha
cmpsl
inc
mov
lock
push
call
leave
xchg
xchg
push
daa
mov
les
push
and
mov
inc
sbbl
js
and
clc
insl
sahf
nop
mov
mov
adc
ds
mov
aad
xchg
int
rolb
jo
mov
pop
xchg
in
xchg
pop
mov
jge
sbb
jb
call
ficomps
jmp
mov
cmp
lods
and
int3
push
ror
add
pop
push
mov
xlat
add
sbb
in
xchg
fstpl
fcoml
iret
movl
and
push
or
sar
std
jecxz
loope
push
test
mov
cmp
cmpsb
pop
clc
adc
push
add
ljmp
fnstsw
daa
outsl
std
or
stc
and
mov
mov
aam
shrb
push
cli
adcb
in
jno
movl
nop
sub
push
mov
or
push
mov
mov
ror
sub
mov
or
mov
inc
repnz
sub
and
mov
jne
cli
xchg
mov
iret
ja
lcall
mov
mov
adcb
xchg
inc
mov
jo
push
arpl
push
mov
fisttps
mov
and
aaa
mov
jo
mov
jp
inc
jg
pop
in
mov
repnz
jle
xchg
adc
ljmp
pop
repnz
je
gs
ljmp
cmp
jmp
jns
dec
int
jg
inc
pop
insl
rolb
push
mov
js
push
ss
mov
scas
push
call
push
xor
call
or
pop
out
enter
mov
sub
add
int3
scas
mov
mov
sbb
xchg
clc
mov
push
jmp
mov
std
mov
call
insb
and
jp
rol
push
outsb
inc
movsl
scas
out
inc
shr
or
scas
jmp
popa
or
stos
test
xor
lret
mov
push
call
mov
ret
add
pop
push
jb
cli
push
dec
mov
jb
or
mov
andb
cmp
arpl
adc
mov
pop
push
sub
lea
call
push
loopne
mov
outsl
hlt
or
mov
inc
nop
aad
es
push
dec
fmulp
icebp
cmp
mov
and
add
stc
rcrb
dec
movzwl
in
inc
mov
jno
or
mov
mov
fs
cmp
mov
dec
and
or
adc
push
push
add
dec
fsubp
mov
dec
bsr
or
mov
mov
push
pop
into
call
addl
leave
jmp
sub
mov
lret
or
cs
xor
push
dec
mov
mov
sub
movzwl
mov
pop
inc
mov
add
aas
aad
ret
jno
sub
inc
fsubrp
and
push
orb
xchg
aad
sbb
mov
test
inc
das
test
mov
bound
add
dec
cmp
in
lret
notb
fwait
mov
popa
rcrb
pop
in
fcompl
lods
inc
xchg
xchg
mov
jae
lret
scas
cmpsl
arpl
into
out
cld
dec
inc
push
les
sbbb
sbb
or
xor
mov
outsb
or
sbb
lret
mov
bound
pop
xor
imul
xlat
bound
jo
inc
jmp
push
xchg
jle
insl
call
pop
jns
pop
dec
dec
repz
jne
popf
mov
add
push
jbe
lods
inc
dec
or
sbb
pop
rorb
push
mov
cmp
pop
inc
sbb
mov
mov
inc
int
lds
push
cmpsb
xor
test
outsb
fdivrp
scas
dec
ljmp
ja
orb
sub
mov
imul
std
sbb
icebp
call
cmp
cmp
cmp
or
push
fldl
mov
rep
inc
xor
test
cmp
push
sub
xchg
push
pop
pop
in
or
repz
mov
mov
inc
xchg
mov
or
add
push
in
xchg
inc
pop
icebp
test
mov
ffreep
shll
std
lahf
dec
xchg
pushf
push
sbb
or
mov
mov
insb
pop
inc
add
pop
adc
cli
lahf
mov
pop
lahf
int
dec
push
mov
push
nop
shrl
cld
test
mov
mov
js
ret
xor
lret
inc
insb
shlb
dec
ljmp
div
sarb
cmp
mov
lods
stos
enter
xor
and
xchg
out
push
pop
std
mov
mov
in
add
jge
jae
gs
mov
pop
test
js
movsl
xchg
or
add
jb
pop
xchg
sbb
dec
icebp
testb
mov
movsb
cmp
mov
pop
ret
test
mov
insb
dec
adc
and
cmp
and
adc
repz
dec
out
aam
dec
pop
inc
loop
sub
scas
aam
xor
scas
loopne
mov
lods
pop
inc
adc
gs
call
lret
fbld
push
jp
repz
add
mov
sbb
mov
and
push
mov
popf
lods
jno
pop
fadds
push
dec
dec
ja
mov
roll
inc
gs
dec
addb
mov
mov
cmp
mov
movsb
push
nop
jmp
xchg
fsubs
pop
fs
movsb
jb
mov
lds
testl
jge
mov
push
cmp
pop
mov
ds
push
or
fisttpll
mov
ss
icebp
es
cltd
sub
mov
jo
rcrl
leave
test
mov
lahf
pop
negb
adc
xor
sbb
cltd
mov
sub
addl
jmp
fadd
sbb
push
dec
inc
call
dec
xchg
xorb
push
adc
jmp
xchg
mov
xor
call
imul
jnp
adc
lahf
cmpsb
pop
rclb
jle
inc
mov
adc
sub
mov
les
sbb
addb
or
sarb
add
fsubrs
cmp
popa
rcrb
add
lock
lods
mov
lock
mov
addb
pop
lock
pop
dec
movsl
dec
test
repz
jmp
jge
sub
lock
xor
into
adc
aaa
push
xor
aad
les
or
dec
lock
out
cmp
lock
out
lock
cmp
loopne
rcll
and
aaa
test
insb
fwait
add
cmc
cmpsb
jecxz
iret
add
add
sbb
lock
push
flds
pop
jle
dec
jg
sbb
push
jecxz
lock
mov
lock
mov
sbb
arpl
movb
or
inc
decl
cmp
negl
je
mov
hlt
bnd
rcrl
rclb
or
pop
clc
rcl
inc
std
das
pop
jno
or
cmp
sub
xor
pop
xchg
mov
sub
and
pop
or
repnz
repnz
outsb
enter
mov
xor
popl
ljmp
rolb
mov
push
scas
and
xor
aas
fnstenv
je
mov
mov
or
cld
and
sbb
lret
xchg
push
add
push
jbe
rcrb
leave
mov
cmp
mov
lods
enter
jne
push
testb
scas
sub
insl
and
or
pop
std
dec
in
outsb
sub
inc
sbb
mov
jmp
sarb
jo
pusha
adc
out
popf
pop
mov
lock
ret
mov
mov
or
fdiv
mov
lcall
in
decb
call
out
sbb
push
clc
mov
lcall
jb
inc
pusha
fidivrs
cmp
or
mov
mov
inc
push
popa
imul
test
pop
les
or
add
mov
pop
add
pop
add
test
push
fsts
aad
xchg
add
push
jmp
mov
cltd
enter
js
icebp
negb
fmuls
mov
jmp
outsb
push
mov
sahf
adc
sbb
jp
inc
jb
pusha
or
push
or
mov
dec
cmp
mov
cmpsl
mov
call
add
out
inc
xchg
inc
adc
call
aas
add
insl
std
mov
or
movsl
ds
out
xchg
shlb
sbb
scas
or
lcall
or
jg
add
or
lahf
call
sbb
jb
jle
mov
cwtl
lods
das
fwait
das
jmp
std
inc
jg
push
mov
fisttpll
mov
sarb
cltd
push
test
xchg
mov
or
int3
sbb
call
loop
sub
clc
or
add
test
sub
sub
dec
arpl
cmpsb
add
add
outsl
iret
mov
pop
adc
scas
decb
add
adc
aad
mov
clc
cmp
mov
aas
rclb
sti
xchg
outsb
ds
mov
pop
out
xlat
int3
test
or
sbbb
outsb
negl
pushf
inc
inc
cmp
inc
stos
test
xchg
js
lock
ficompl
xor
pop
cld
jno
jnp
repnz
add
mov
fisttpl
enter
push
icebp
pop
call
mov
adc
cwtl
out
add
and
stos
push
sbb
mov
loopne
call
xor
mov
jbe
mov
cmc
cmpsb
add
cli
leave
xchg
sub
testb
fs
mov
sahf
enter
loopne
jno
dec
cmp
xor
and
lret
aas
add
add
call
imul
stos
add
push
rclb
rcll
cmpsb
or
adc
xor
std
xchg
or
cli
cltd
dec
push
stos
jl
in
test
mov
or
call
dec
sti
mov
push
fs
repnz
lahf
cmp
nop
mov
mov
mov
pop
mov
inc
stc
or
shlb
add
aad
push
movsb
repz
inc
dec
sti
mov
mov
add
mul
sub
test
add
or
xor
sbb
inc
leave
cmc
movsl
andl
hlt
mov
jmp
arpl
push
mov
add
icebp
sti
out
loopne
sub
ret
dec
xchg
xchg
icebp
push
jnp
push
or
in
jo
adc
add
adc
or
push
mov
test
xor
int
das
push
jno
lock
xchg
add
mov
lea
push
dec
aaa
movsb
imul
inc
jne
arpl
pop
jmp
dec
mov
inc
cs
sub
dec
jbe
mov
fsub
les
or
mov
mov
cmp
and
add
jne
test
cld
das
sub
test
rcll
and
fbld
xlat
ds
and
inc
pop
mov
or
jg
imul
inc
adc
mov
out
hlt
ret
mov
loopne
and
sbb
aad
shr
mov
xchg
mov
mov
sub
mov
cmp
cltd
or
call
adc
or
cmp
jecxz
outsl
mov
out
xchg
mov
or
jmp
lods
in
cmp
bound
test
sbbb
stos
adc
call
xor
lods
fisubs
xchg
lcall
ret
insl
ret
or
ja
icebp
hlt
out
aas
add
and
pop
outsl
xor
inc
jg
push
adc
mov
pop
cli
mov
and
es
inc
aaa
roll
mov
add
sbb
push
call
stos
pop
loop
ds
movsb
and
lea
xchg
mov
cmp
pop
xchg
sub
inc
inc
jmp
mov
push
mov
or
lahf
sbb
sbb
int3
jnp
fwait
cmp
call
dec
divb
xchg
sbb
repnz
inc
sub
addr16
add
mov
adc
mov
pop
repnz
adc
jmp
jecxz
sbb
push
loope
pop
add
mov
call
aaa
outsb
add
aas
mov
insl
ror
outsb
ret
dec
add
sbb
cmp
loop
or
cs
out
js
push
push
gs
cmp
push
xlat
jne
cmpsl
xchg
xabort
repz
int
stos
icebp
dec
je
or
hlt
std
jb
lcall
mov
push
test
or
cld
cli
push
repnz
or
das
sbb
roll
clc
cli
test
loope
sub
aad
add
cli
or
jp
in
mov
lcall
scas
jns
leave
js
mov
repnz
and
xchg
adc
test
xchg
jle
lods
popa
push
add
cmpsb
leave
add
inc
daa
call
sbb
ljmp
add
xchg
inc
lret
gs
cmc
adc
mov
dec
sub
test
aas
imul
xor
shrl
stc
pop
sbb
cmp
stos
hlt
aas
jo
mov
movsb
mov
jg
mov
movsb
cmp
jl
push
fildll
or
mov
add
mov
xor
loopne
lds
xor
out
push
xchg
data16
add
icebp
xchg
push
imul
jnp
mov
ret
jo
push
xchg
jmp
push
enter
loopne
sbb
or
pop
xorl
loope
pop
mov
aaa
dec
out
std
cmpb
dec
pop
mov
mov
push
mov
fdivrl
mov
jo
movsb
popf
jmp
mov
in
repz
fimuls
insl
adc
pop
jns
jb
cmp
scas
enter
es
mov
xchg
imul
sbb
pop
cmp
cmpsb
push
jmp
mov
cld
dec
data16
jnp
in
pop
jle
pop
mov
mov
out
mov
cmp
out
inc
jecxz
addr16
adc
and
stc
add
jb
add
jmp
xlat
push
mov
sub
lret
bnd
add
jo
cmp
mov
stos
mov
stos
test
mov
inc
adc
orb
add
outsb
out
add
push
xchg
adc
cmp
and
push
add
shr
pop
scas
outsl
and
adcb
incl
adc
mov
inc
jmp
sbb
mov
test
rolb
and
xchg
adc
lcall
inc
imul
repnz
sbbb
xchg
jo
add
insb
into
or
lret
cwtl
mov
scas
lods
add
stos
mov
movsl
cmp
pop
push
sbb
das
fdivp
mov
pop
inc
jp
fcoml
cmp
jb
lcall
pop
hlt
lods
pop
and
inc
inc
push
xchg
add
xor
repnz
bound
inc
std
add
nop
daa
or
subb
negb
push
ret
sbbl
sahf
mov
xchg
scas
mov
aam
mov
xchg
js
dec
jmp
dec
scas
xchg
test
jo
in
xor
or
lods
sarb
lret
icebp
or
add
and
add
pop
in
ficoms
dec
and
xor
mov
arpl
adc
cmp
dec
mov
sbb
enter
add
and
clc
push
mov
out
lcall
push
stos
adc
fsubrs
je
push
lcall
or
ret
lret
leave
jmp
jg
mov
call
push
cmp
int3
mov
push
mov
inc
fdivs
and
lcall
pop
sarb
xchg
shrb
aad
leave
adcb
adc
insb
lods
lock
cmp
mov
pop
loop
repz
cmpsl
add
xorb
add
adc
mov
shlb
daa
cmpsl
and
pushf
ds
add
adc
add
call
adc
xchg
inc
mov
icebp
pop
pop
add
stos
adcl
std
in
xchg
push
lret
dec
push
fistps
fucomip
shlb
dec
xlat
jae
ror
ret
dec
push
orb
in
frstor
test
push
call
jmp
mov
hlt
adc
jg
call
sarb
fucompp
pop
mov
mov
mov
jp
mov
adc
insl
push
outsb
pushf
pop
iret
pop
int
ret
stos
std
xlat
push
aad
jae
mov
jle
adc
add
loope
or
mov
pop
icebp
in
cmp
sub
sub
and
xchg
stos
repnz
shll
fisttps
cmp
or
jmp
enter
mov
dec
hlt
aad
mov
divb
test
xchg
sub
inc
ljmp
out
xchg
call
fstps
push
push
adc
div
lret
movsl
jg
xor
dec
xchg
jnp
or
daa
and
dec
or
xor
sbb
add
xor
sub
add
push
xchg
loop
dec
adc
imul
jae
fidivrs
adc
mov
xchg
cmp
push
dec
cli
adc
sub
sbb
call
push
outsl
jnp
or
cltd
in
xor
andb
or
adc
pop
ljmp
pushf
lahf
or
or
or
adc
das
adc
xlat
inc
mov
aaa
or
stc
int3
leave
push
jg
push
ret
rolb
mov
push
fnstcw
out
sub
add
push
vpshld
sub
dec
or
in
inc
test
or
cmp
xchg
mulb
jbe
add
dec
inc
add
fnstenv
mov
or
orb
cmp
les
pop
dec
add
pushf
jne
mov
cwtl
int
inc
sub
shl
lock
ret
or
mov
loopne
mov
out
ret
mov
or
das
or
cmc
and
mov
sbb
insb
addr16
lcall
call
test
mov
pop
inc
or
sbb
out
cltd
sbb
jnp
sbb
data16
aas
scas
in
leave
in
lods
mov
dec
or
loopne
xor
xchg
pop
lods
sbb
ljmp
xchg
inc
mov
pop
insl
pop
add
jae
icebp
out
adc
xlat
call
cld
repnz
mov
in
lret
sub
mov
and
or
adc
inc
fisttpll
xchg
nop
sbbb
dec
mov
popa
dec
adc
sub
push
and
repz
std
mov
push
daa
mov
and
pop
adc
inc
aaa
dec
sbb
mov
pop
fisttpll
int
sti
roll
lock
pop
push
sbb
or
stos
xchg
push
inc
leave
xchg
jge
adc
stos
or
pop
jmp
jo
js
addr16
pop
sub
fisubl
inc
pop
lret
sar
rolb
adc
mov
cmp
inc
jp
dec
lds
incb
fucomip
adc
faddl
popf
pop
orb
sub
xchg
je
jae
cmp
fildl
jo
cmpsb
mov
lea
sti
and
lds
pusha
dec
push
pop
es
flds
or
inc
add
pop
sbb
dec
inc
push
out
pop
mov
inc
fcoml
or
imull
adc
call
or
int
in
lea
call
ja
xor
movsb
xor
push
out
popf
and
push
fsts
inc
setnp
fwait
sub
cmp
clc
inc
mov
sti
xor
jnp
or
jb
adc
or
sbb
adc
mov
pop
nop
out
mov
leave
fcmovbe
dec
push
xor
cld
sub
hlt
xor
das
mov
lahf
mov
mov
push
insl
jl
rolb
mov
cli
push
or
pop
fstl
and
cltd
cmp
pusha
pop
ss
xor
aaa
leave
cmp
fisttpll
mov
add
mov
and
xchg
jne
imul
outsb
sub
popf
repz
mov
and
add
mov
jns,pn
dec
jp
lret
mov
adc
mov
cwtl
push
jmp
cmpsb
imul
cltd
out
sub
adc
call
or
in
out
mov
int
outsb
mov
jnp
js
testl
sti
push
inc
data16
jo
mov
dec
or
adc
jmp
or
loop
sbb
pop
repz
add
testl
faddl
rcrb
aam
and
mov
insb
xor
push
jno
pop
mov
out
lods
push
test
push
iret
pop
jne
adc
sub
cmp
call
and
leave
repz
ds
aaa
pop
pop
fsubrl
cld
mov
cmp
and
cmpsb
adc
rorb
dec
lds
pop
cltd
mov
and
daa
xor
in
scas
inc
or
addr16
ljmp
jbe
mov
out
dec
pop
xor
lock
mov
stc
addr16
dec
adc
hlt
pop
pop
xchg
adc
pop
inc
and
jns
xor
into
addl
push
pop
push
sahf
popf
decb
hlt
or
mov
pop
adc
sarb
popf
lea
jmp
aaa
mov
out
fidivrl
aad
or
inc
mov
out
fsubr
xchg
cmp
lods
sub
push
push
or
xor
scas
lds
cwtl
jo
mov
xchg
xor
stos
cmp
sti
fcomps
aam
mov
mov
jge
and
sub
test
jmp
pop
mov
jge
loop
push
cli
mov
fstl
in
xor
in
inc
inc
xchg
lods
add
mov
dec
dec
enter
pop
fbld
das
mov
and
in
xchg
inc
stos
je
fistps
aad
xor
push
push
sahf
add
shll
and
mov
xor
les
inc
pop
cli
inc
xchg
sbb
xor
xchg
mov
or
inc
out
dec
movsb
inc
aaa
mov
cltd
push
fidivs
add
cld
dec
cmp
or
std
xor
mov
adc
sahf
cmp
or
std
xlat
mulb
aam
jl
sbb
movsl
aas
cmc
sarb
ja
jl
repz
out
int3
cmpsb
arpl
push
adc
into
inc
and
insb
mov
mov
mov
mov
cmpsl
lahf
inc
adc
and
cwtl
lods
loop
daa
jecxz
aam
push
xchg
sbb
arpl
sti
jge
jg
push
cmc
or
imul
sti
inc
add
outsb
mov
mov
sbb
je
lcall
sti
jnp
icebp
nop
push
and
cmp
pop
pop
pop
jle
fidivrl
mov
adc
jns
or
loop
push
or
or
pop
repnz
loop
dec
call
dec
sar
insl
mov
dec
pop
cld
or
jmp
push
add
xchg
call
loope
add
adc
sbb
xchg
push
adc
and
xor
cwtl
pop
repz
mov
push
sub
test
fcoms
mov
pop
ljmp
mov
push
stos
push
inc
stc
fcomp
pop
mov
mov
test
pop
bnd
mov
clc
dec
es
sub
lcall
jae
mov
mov
jno
scas
sbb
insb
mov
sub
mov
and
les
jbe
sbb
jp
loopne
or
mov
daa
adc
cmp
shlb
inc
push
sbb
cs
sbb
int
sub
jno
scas
pop
testb
push
xchg
push
decb
ss
pop
aad
insb
pop
inc
cmpsl
cmp
stos
xchg
cmpsl
daa
out
pop
lea
sub
adc
mov
movsl
das
insb
xorl
mov
lahf
pusha
dec
mull
repnz
lahf
faddl
lret
lock
jmp
daa
sbb
mov
in
mov
fidivs
icebp
dec
mov
xchg
in
push
fldenv
movsl
xchg
into
mov
jmp
hlt
add
inc
jge
and
mov
call
pop
cmc
cli
pop
fdivl
testb
popa
sarb
push
sbb
scas
push
fucomi
shlb
mov
push
out
call
and
xchg
cmpsl
add
or
push
push
mov
inc
cmpsl
stos
icebp
lcall
outsb
cmp
lahf
sub
fimull
in
fcmovne
ja
clc
adc
in
or
jmp
pop
or
hlt
or
and
stos
scas
aam
mov
cmp
jmp
scas
mov
stc
shrl
jb
mov
or
sub
cmp
pop
lcall
and
or
loopne
ret
jge
repnz
mov
dec
or
lret
cmp
push
xchg
mov
sub
adcb
or
jno
jmp
cmpsb
lds
sub
inc
lcall
pop
xchg
add
clc
sub
out
test
popf
or
mov
aas
jmp
iret
jbe
pusha
popf
mov
xorb
xor
lea
or
or
jno
aaa
inc
push
pop
aaa
clc
shrb
add
xchg
nop
test
push
mov
jle
jne
mov
jb
cs
jbe
arpl
cmpsl
or
mov
mov
gs
xor
std
lcall
jb
pop
mov
jmp
sbb
popf
aam
imul
mov
mov
outsb
sub
sub
mov
lcall
into
scas
stos
xchg
push
in
call
xchg
sti
adc
sub
push
jmp
enter
enter
cmp
mul
insl
pop
xor
mov
cwtl
push
dec
inc
mov
mov
inc
sbb
popf
pop
xor
movsb
jmp
cs
xchg
pop
cwtl
imul
notb
call
dec
xchg
hlt
mov
jmp
cmp
out
sub
dec
sbb
ss
cmpsb
leave
nop
daa
stc
outsb
pop
std
addb
jmp
jp
add
loope
push
mov
aam
mov
je
std
or
ds
ljmp
enter
imul
mov
fistl
inc
cmp
lcall
xor
sbb
cld
and
jmp
jle
shll
jmp
push
dec
sahf
sti
pop
dec
xor
jmp
cli
stos
lret
sub
test
inc
and
jmp
in
repz
mov
xchg
and
mov
fistps
std
jg
add
sub
pushf
mov
dec
jmp
rcrl
aaa
repnz
fs
out
add
jnp
xchg
jns
add
cmpsb
mov
fisubs
lock
lds
test
xchg
xor
bnd
push
add
lea
push
jmp
popf
call
ljmp
cwtl
inc
pushf
mov
cltd
pop
int3
pop
mov
push
adc
call
or
push
mov
mov
mov
push
fldenv
ja
xchg
push
cmpsb
cmp
push
cmp
movsl
nop
lahf
loope
imul
and
outsb
jg
pushf
sbb
mov
sbbb
shrb
cld
faddl
jg
dec
stos
les
mov
es
mov
shlb
insb
in
ja
ffreep
push
jno
jp
and
add
repnz
mov
cs
sti
dec
pop
clc
cmpb
jg
scas
daa
xor
add
jg
movsb
lret
xlat
stos
test
sbb
mov
add
call
cmp
lods
inc
push
pop
xlat
jb
aad
xor
jno
cmc
aaa
sti
stc
stc
sbb
rcl
pop
sub
jo
dec
lahf
dec
clc
mov
clc
fcmovb
shll
mov
fisttpl
pop
fdivrl
adc
cs
pop
jmp
repz
push
mov
shll
fsub
inc
sub
mov
or
push
push
add
pop
dec
notb
test
repz
push
inc
add
sub
pusha
inc
lcall
bnd
adc
int
cmpsl
or
or
rclb
popf
ja
jo
jge
sti
aam
sbb
or
push
dec
jge
fisttps
add
add
xorl
push
in
mov
jno
push
cwtl
enter
rorl
push
push
loop
fisttpl
daa
roll
out
mov
or
aad
test
cwtl
mov
stc
les
or
push
cli
loop
sbb
inc
xchg
mov
xor
lret
push
ret
in
push
inc
mov
data16
inc
push
cmc
imulb
aad
clc
int3
clts
stos
mov
enter
push
xorl
or
or
pop
loope
mov
int
scas
arpl
sahf
xor
or
in
inc
outsb
push
adc
pop
inc
xchg
dec
push
xchg
jo
inc
mov
mov
mov
inc
shlb
cmp
mov
and
xor
xor
jnp
inc
cmc
scas
cmp
dec
repz
mov
fnsave
pop
pop
mov
clc
jl
data16
mov
pop
mov
cwtl
dec
push
cmpsb
push
xchg
ljmp
popf
call
ljmp
mov
inc
sub
dec
fdivrs
xchg
jecxz
xor
aaa
mov
jb
scas
hlt
in
adc
clc
mov
loope
in
push
lret
mov
insl
push
stos
dec
mov
push
sbb
jmp
sub
icebp
jb
jmp
push
fwait
lcall
dec
nop
andb
sbb
mov
pop
cmc
xlat
sbb
std
mov
ffree
xchg
les
mov
lods
stos
mov
push
cmpsl
sub
call
sbb
ret
call
repz
jbe
fbld
out
addr16
mov
test
push
call
bound
dec
sub
mov
jg
xor
xor
or
xor
push
out
popf
sahf
stos
movsb
shll
dec
aam
xor
rcrl
xor
add
cld
rol
xchg
jmp
cmp
or
inc
dec
inc
jmp
sbb
repnz
mov
cld
jb
pop
sbb
roll
ficomps
xchg
dec
cld
xor
adc
push
cs
mov
or
jle
aaa
jg
imul
stc
repz
sbb
push
lahf
inc
sbb
fsubrl
inc
bound
in
lea
or
sti
scas
test
mov
and
push
xorl
or
add
push
stos
add
mov
mulb
pop
test
popf
or
scas
xchg
add
mov
jl
jge
mov
sbb
add
mov
in
scas
loope
sub
enter
mov
mov
mov
aad
jae
and
into
jmp
icebp
jno
mov
in
xor
dec
mov
pushl
mov
cmpsl
cmp
sti
and
push
cwtl
sub
fs
popa
inc
stc
sahf
ljmp
sub
mov
push
and
xlat
int
adc
sub
push
cltd
cltd
scas
cmp
push
push
xchg
pusha
fistpll
rcrb
add
imul
fs
inc
add
cmp
adc
lock
mov
or
inc
cmp
es
sbb
aam
dec
imull
mov
mov
or
xor
in
push
mov
out
pop
incb
cltd
jns
xor
xchg
dec
lock
push
mov
dec
call
cld
iret
pop
mov
pop
pop
inc
cwtl
pop
xchg
stos
test
or
and
cld
adc
sti
shlb
mov
jp
loop
inc
test
int3
xchg
cli
and
or
mov
mov
movb
jo
rolb
jge
dec
lds
adc
push
jno
sbb
jmp
stc
lea
mov
mov
jns
scas
and
das
in
notb
push
or
and
dec
inc
push
fs
push
jo
mov
dec
sahf
pushf
jmp
xor
add
pslld
mov
dec
push
push
call
cmc
mov
and
test
out
push
sti
mov
cmc
mov
test
jae
filds
inc
inc
inc
jo
mov
adc
mov
jmp
cwtl
popl
insb
cmpsl
xchg
lret
mov
js
sub
test
mov
int3
fmull
jbe
iret
sbb
imul
xchg
imul
mov
les
daa
push
call
xchg
ret
push
dec
outsb
fstl
shrl
push
divl
jp
aam
mov
mov
cmc
ret
in
clc
jmp
or
add
sub
clc
fstl
test
push
xchg
jecxz
jns
jmp
xor
shrb
jb
repnz
clc
xor
dec
jecxz
int
cmp
cld
ret
loop
push
fisubs
test
sahf
xchg
movsb
sub
jge
adc
test
push
test
or
dec
aas
ret
repnz
adc
mov
dec
sbbl
std
mov
xor
mov
test
ret
mov
add
mov
pop
cmpsl
fnstsw
loope
or
mov
dec
mov
mov
mov
inc
jp
es
jmp
xlat
jo,pt
push
movsb
jmp
test
cs
lods
cmc
dec
sub
lea
pop
add
cltd
mov
pop
clc
mov
and
or
mov
xor
sbb
das
push
mov
mov
mov
lea
cmp
adc
dec
aas
add
js
sbb
cmp
inc
xchg
jns
cli
or
push
push
stos
test
fdivrl
push
mov
clc
jb
sbb
and
xorl
out
movb
add
stos
orb
push
pop
movsb
mov
mov
add
cmp
fldl
sbb
popl
and
mov
lret
pop
sbbb
cltd
mov
mov
pop
mov
mov
xlat
cs
jle
xor
insl
dec
cmpsb
add
xor
sbb
jl
fadds
lcall
divb
or
mov
xchg
cmc
repz
dec
or
adc
pop
mov
call
cld
cwtl
lock
aas
add
sub
sbb
mov
js
mov
shl
in
cmc
adc
inc
jg
sahf
mov
cld
jbe
ja
sahf
jbe
pop
pushf
repz
cmp
mov
rclb
push
nop
fadds
mov
call
jbe
pusha
repz
fisttpll
mov
call
fistpl
sbb
outsl
cmpsb
mov
jge
mov
stc
fldt
adc
xchg
cmpb
inc
xchg
mov
sarl
cmp
movsb
frstor
ret
int3
lea
or
pop
mov
rolb
int3
mov
cmpsb
push
xor
inc
sub
jp
jl
leave
fisubrl
mov
pop
aad
ljmp
in
mov
sub
mov
pop
pop
in
or
jle
out
rcll
adc
fs
pop
subb
test
nop
shll
cmp
jmp
outsl
movsl
pop
inc
cli
cs
xlat
mov
insb
sub
xor
and
push
xchg
and
ret
push
pop
push
fadds
inc
loop
adc
sub
jmp
push
inc
icebp
push
mov
icebp
bnd
aad
push
loop
dec
sub
mov
in
dec
out
in
push
mov
lea
stos
pop
mov
pop
int3
xor
push
fwait
test
sub
out
ret
popf
mov
outsl
cli
pop
inc
cwtl
nop
xor
sahf
or
add
std
inc
xchg
fstp
adc
or
xchg
ljmp
push
or
cmp
call
orb
cmp
sub
jmp
lods
mov
pop
aaa
mov
and
dec
rclb
call
xor
add
add
pop
mov
xor
in
cmp
adc
stos
enter
inc
shrb
sub
pop
add
cmp
jno
cwtl
xchg
mov
or
std
into
xor
popa
leave
and
inc
mov
pop
xor
or
pop
adc
mov
add
out
cmpsb
in
mov
sbb
inc
call
sub
daa
add
add
mov
mov
nop
cmp
mov
es
insl
or
test
sbb
adc
push
fidivrl
rcl
pop
sub
cwtl
sbb
mov
dec
xchg
rorl
into
or
cmpsb
push
sbb
pop
xchg
add
xchg
fsubr
xor
dec
int3
mov
mov
ret
xchg
xchg
inc
xorb
call
testb
adc
std
subb
mov
movsl
imul
rcl
daa
push
pop
aad
xor
mov
aaa
movsb
out
push
test
out
pop
push
ljmp
popf
scas
es
js
sub
mov
cmp
or
or
stos
shrl
add
mov
sub
dec
mov
jge
repz
jb
jb
push
add
fsubr
imul
sub
mov
mov
or
negb
push
daa
aam
lods
pop
add
sub
test
mov
dec
mov
pop
jb
mov
cmp
mov
repz
mov
and
mov
mov
ret
dec
ja
xchg
mov
xchg
lock
lock
mov
adc
in
aaa
test
cs
pop
jo
les
inc
push
adcb
call
push
mov
xchg
aad
inc
adc
loope
push
iret
cmp
pop
adc
cmc
mov
xor
inc
sub
mov
loope
xor
mov
jnp
jmp
or
adc
fcompl
outsb
mov
adc
mov
lret
xchg
std
cmp
xchg
sub
test
in
mov
call
dec
sub
hlt
lock
mov
jo
jmp
ds
jle
ja
mov
dec
inc
jne
and
int3
push
inc
inc
mov
andb
pop
repnz
jmp
imulb
add
fsubrs
mov
in
pop
ret
cli
or
inc
adc
enter
dec
push
cmpsb
in
sbb
faddl
push
inc
push
fadd
scas
and
cmp
mov
out
mov
pop
xchg
and
je
push
pop
mov
sub
hlt
addr16
and
jae
xor
dec
imul
cmp
jmp
mov
cmpsb
jecxz
ljmp
int3
xchg
or
push
mov
popa
xchg
add
icebp
popa
pop
or
cmp
push
sbb
mov
pop
repz
fcoml
stos
sub
cmpsb
iret
lea
shlb
and
pop
test
mov
adc
cmp
jb
jp
out
push
ljmp
ss
hlt
cwtl
repnz
xlat
flds
mov
sub
and
xchg
dec
jno
add
or
and
push
or
inc
fnstenv
in
rorb
push
mov
fsubr
scas
push
aad
sub
iret
xor
scas
in
orb
adc
mov
and
mov
dec
mov
adc
adc
rcrl
jp
call
dec
imul
or
out
and
cli
adc
inc
mov
jmp
daa
cltd
add
xor
call
sahf
mov
add
cs
and
mov
in
sub
rcrb
pop
idivb
movsb
push
cmc
jo
test
pop
std
notb
addb
cs
jmp
roll
ret
das
pop
jno
sub
stos
loop
or
ficoms
es
sub
jns
dec
aad
or
test
flds
adc
popf
push
add
mov
sbb
xor
push
xor
push
scas
neg
testb
pop
add
or
xchg
ret
je
and
dec
mov
inc
sti
xor
pop
call
popf
xchg
cmp
and
pop
push
xlat
add
cmp
xchg
bnd
idiv
jle
xor
or
cmpsl
mov
push
xchg
xorb
pop
daa
outsl
add
push
shl
pop
cmc
ret
into
mov
jo
faddl
ret
mov
outsl
das
ljmp
push
jl
test
jb
adc
jno
jmp
movsl
test
repz
push
pop
sbb
adc
inc
cs
dec
loopne
hlt
int3
push
jmp
xchg
xor
push
aad
test
mov
cmp
call
je
cmp
ret
lock
movsl
dec
inc
sub
jno
sbb
lods
mov
js
pop
cwtl
int
js
mov
and
jae
int3
jae
ficoml
ss
int3
add
cli
mov
jno
mov
loope
pop
icebp
push
iret
fsubrl
push
add
pop
pushf
sub
mov
push
lock
jmp
andb
jmp
add
call
pop
add
rcrl
ja
or
dec
filds
adc
inc
scas
in
jno
mov
add
mov
pop
insl
jae
cmp
push
popa
cmp
mov
repz
imul
xor
pop
imul
faddl
and
test
jae
inc
rcrl
sbb
xchg
pop
pop
sbb
xchg
inc
dec
xor
cmp
aas
dec
mov
cld
in
cmpb
rclb
and
sub
cs
xchg
in
imul
mov
repnz
out
in
and
dec
push
call
jmp
clc
pop
jne
daa
add
das
loope
icebp
cmp
adc
je
add
enter
jb
inc
pop
aam
dec
lock
ljmp
mov
mov
or
dec
dec
and
dec
sbb
lock
pop
mov
mov
repz
aad
icebp
pushf
test
aaa
rcll
addr16
out
xchg
repnz
lods
lret
xchg
sbb
mov
adc
ret
int3
scas
xchg
dec
xchg
mov
rorb
pusha
lret
jbe
add
jno
loopnew
or
aas
cld
lahf
and
push
fdivrs
popf
mov
in
or
shl
enter
jl
pop
inc
push
pop
mov
mov
loop
jg
std
stc
push
sahf
inc
out
imul
call
dec
xchg
cmc
andb
rcrl
ret
pop
mov
int
lock
mov
hlt
ljmp
mov
xchg
mov
dec
xor
xor
gs
fsubrp
jle
in
pop
mov
push
xor
dec
iret
rcll
push
mov
mov
fwait
mov
mov
adc
sub
sysexit
data16
adc
or
or
into
inc
push
add
pop
xchg
dec
lods
jg
mov
mov
sub
ss
add
call
jle
cmp
pop
xchg
cmp
lcall
xchg
dec
jmp
test
sub
shrl
ret
fwait
daa
filds
jne
lods
push
in
in
or
in
jmp
add
cli
lods
data16
push
jp
mov
mov
pop
jbe
repnz
sbb
xor
mov
es
jp
movsl
clc
lret
add
adcb
imul
adc
xor
jmp
sbb
inc
call
jl
test
pop
andl
mov
cmp
lods
jmp
mov
pop
sbb
push
pusha
lock
fidivrs
lret
xchg
into
sahf
mov
loop
push
inc
push
jmp
das
and
or
out
mov
pop
xchg
mov
inc
cmpsb
xor
pop
clc
stos
decb
pop
adc
dec
pop
mov
rcr
call
cwtl
lcall
roll
andb
lods
xor
push
and
sbbl
or
adc
inc
daa
aad
int
es
push
jmp
jae
test
mov
cmpb
pop
sub
mov
jne
mov
mov
inc
mov
in
dec
testl
mov
cld
call
jbe
add
inc
ljmp
mov
scas
stos
xchg
rolb
push
jbe
or
std
fldl
sbb
ss
insb
pop
or
in
pop
mov
push
cwtl
aaa
cmp
add
repnz
adc
enter
jl
cld
insl
sub
in
pop
add
lea
xchg
loope
push
cmp
mov
dec
aad
popa
scas
je
xorb
mov
dec
jp
stc
jo
cld
leave
mov
adc
fsubr
inc
ret
or
fldcw
xlat
leave
adc
sub
push
xor
or
sbb
repnz
mov
add
pop
pop
mov
adc
add
jmp
fwait
lcall
xchg
jl
scas
call
add
mov
pushf
cmp
sub
outsl
jmp
pop
in
mov
and
int3
push
mov
enter
js
mov
push
or
pop
std
mov
xchg
push
jnp
jp
push
push
push
int
cmpsl
decb
push
call
mov
arpl
enter
xchg
in
lahf
mov
in
xor
mov
jg
cli
outsl
inc
mov
js
or
mov
ficomps
test
je
js
mov
add
and
xor
pop
inc
jmp
cmp
sub
inc
add
lods
adc
jecxz
sub
xor
sarb
lea
mov
xor
dec
mov
inc
pop
movsb
leave
xor
add
push
call
daa
lods
cmp
sub
mov
add
outsl
mov
xchg
js
dec
or
sbb
sub
pop
adc
inc
jnp
jns
xchg
repnz
inc
pop
bnd
mov
inc
dec
xchg
rorb
inc
stc
cli
pop
lock
push
popf
inc
jae
test
adc
je
push
xor
inc
and
notl
enter
icebp
sahf
sub
in
mov
repnz
sbb
mov
mov
aam
jmp
out
lods
loop
jnp
mov
or
ljmp
pop
call
fsts
xchg
scas
lahf
push
pop
in
fst
mov
add
dec
sbb
sar
fs
and
lea
cltd
test
cmp
lret
or
or
ss
cmpb
into
cmpb
movsl
popf
dec
lods
add
and
in
pusha
push
imul
push
call
imul
call
lods
lods
jbe
inc
or
sub
sbb
daa
sti
ds
pop
mov
les
stc
push
decl
in
push
test
push
or
pushf
fcomi
jmp
scas
push
lcall
dec
lea
sbb
inc
push
xchg
in
mov
iret
fidivl
sahf
add
popf
mov
stos
mov
fisttpl
fcomps
mov
pushf
pushf
iret
add
and
sub
pop
sub
sbb
les
ds
cmp
nop
cmpsb
shlb
movsb
notb
clc
hlt
jmp
add
or
cltd
xor
sub
or
xchg
stos
sub
roll
inc
scas
sub
cmp
xor
nop
mov
test
movsl
ljmp
sti
add
aad
add
xor
icebp
cmc
dec
fisubs
mov
pop
bound
dec
add
outsl
cld
in
aad
dec
out
rcrb
cmp
jp
mov
add
fbld
pop
mov
movsb
mov
push
push
inc
and
movsl
enter
bound
sub
fnstsw
or
int
xchg
int
mov
fldl2t
cmp
inc
pop
lahf
ja
lock
daa
jo
jnp
aad
imul
int3
or
and
popf
fldl
jle
loopne
lea
sbb
push
ficomps
lods
outsb
adc
daa
or
shlb
cwtl
push
and
movsb
push
jae
xorl
xor
pop
mov
mov
leave
faddl
int3
push
mov
iret
jmp
inc
out
sbb
aam
insl
and
movsb
push
repnz
ret
aad
stos
push
push
scas
xchg
stc
arpl
aaa
jno
out
mov
and
and
mov
cld
notb
cld
sbb
sub
pop
lret
add
mov
orl
push
sbb
jmp
mov
sbb
mov
aam
cmp
stos
loop
ret
loope
or
sbb
das
cld
jge
inc
adc
insl
addl
pop
test
idivb
mov
aad
cmp
jno
fstl
and
cltd
call
and
jo
inc
push
push
push
sbb
dec
lahf
pop
and
or
mov
xor
inc
pop
fsub
push
shr
push
mov
jmp
dec
and
pop
aad
xchg
fmuls
jmp
push
movsl
test
das
push
pop
cltd
mov
inc
pop
xor
and
addr16
sub
ja
inc
popf
pop
fs
test
xchg
cmp
popf
call
add
mov
jle
mul
mov
hlt
add
add
mov
xchg
mov
pop
pusha
stos
mov
in
and
add
lret
shrl
sub
call
in
cmpsb
movsl
cmp
sahf
cli
push
sub
mov
popf
bound
mov
adc
xor
pop
inc
insb
ss
adc
sbbb
shll
icebp
jae
iret
idivb
or
cld
flds
push
pop
ljmp
or
mov
add
push
pop
push
mov
or
lods
mov
stc
inc
or
dec
out
and
mov
pusha
or
hlt
xor
jmp
xchg
stc
test
mov
jecxz
sbb
adc
out
push
xchg
dec
inc
in
jae
sbb
mov
outsb
andb
stc
jmp
sbb
sub
push
inc
movsb
in
adc
push
fadds
or
or
jecxz
rep
enter
adcb
dec
cld
adc
add
push
cmpsl
insb
cmp
jmp
or
mov
xor
xor
adc
sbb
fildll
and
or
push
int3
jmp
bnd
and
pusha
cmpsl
test
data16
aam
push
add
ljmp
push
leave
mov
adc
test
mov
mov
mov
dec
in
into
gs
fwait
mov
outsb
add
out
repnz
repz
loope
orl
rol
and
popa
adc
xchg
insl
pop
sti
shlb
push
cmp
xor
xchg
in
xor
shlb
inc
sbb
leave
jbe
loope
cs
push
mov
aaa
sub
fcomip
movsb
and
sub
enter
sbb
push
sbb
add
jecxz
pop
sahf
loopne
push
clc
int
xor
scas
scas
or
mov
jmp
xchg
mov
or
dec
cmp
out
jg
out
fmul
jmp
mov
push
call
je
xor
xlat
fstl
push
sub
pop
cmp
pop
nop
stos
bound
rorb
push
mov
add
push
adc
mov
jp
sub
xlat
lret
dec
nop
jne
leave
popf
loope
and
fistps
dec
subb
rolb
leave
mov
les
push
stos
or
loop
add
pop
ljmp
mov
sbb
les
mov
pop
sbb
sahf
clc
jnp
iret
mov
pop
lds
or
fidivrs
adc
pop
out
out
xlat
dec
jmp
mov
jo
push
jno
mov
mov
aam
mov
dec
dec
out
mov
add
cmp
sub
sub
add
out
xchg
loop
jle
cmp
xchg
jb
dec
cmp
fwait
mov
sbb
jo
adc
lret
jle
jnp
inc
mov
cmpxchg
push
pop
mov
int3
pop
daa
sub
inc
in
xor
push
inc
xor
jge
les
jp
or
mov
movsb
shl
les
in
popa
jmp
call
pop
inc
orb
push
push
fstpl
test
imul
mov
adc
and
sub
call
sbb
aam
or
or
jmp
data16
ljmp
jmp
call
mov
dec
xchg
push
jae
or
pop
cmp
mov
dec
repnz
sbb
pop
gs
pop
lret
iret
ret
ret
xchg
push
andb
hlt
ss
add
mov
jl
fadd
or
or
xchg
push
sub
dec
sub
shl
into
mov
and
push
adc
or
cs
adc
cmp
mov
fisubs
cltd
lods
leave
lahf
enter
call
aaa
test
cmpb
jno
lahf
cld
jb
lea
mov
push
jle
ret
xchg
aas
and
mov
dec
icebp
inc
jmp
xor
push
loop
sbb
ljmp
loope
call
call
pop
jno
ffreep
mov
push
xor
sbb
xchg
dec
sbb
dec
fcomps
ljmp
hlt
fisttps
daa
out
loope
mov
data16
js
fs
rclb
inc
push
inc
roll
xor
icebp
cmpsb
cwtl
sub
push
pop
lcall
movsl
cmpsb
or
jns
call
stos
and
sbb
cmp
cs
jo
cwtl
or
fdivrl
cmp
push
xchg
mov
test
add
out
std
add
sahf
jno
cmc
adc
mov
mov
xchg
inc
jmp
dec
insb
frstor
mov
in
enter
sub
dec
test
gs
sarl
jmp
cmc
mov
test
mov
fcompl
pushf
ljmp
mov
sub
mov
inc
xlat
push
pop
jl
in
mov
jb
pushf
clc
addr16
fstpl
icebp
xor
aaa
xchg
push
fidivs
scas
into
or
xlat
or
mov
sub
and
jecxz
or
out
dec
mov
test
xchg
xchg
icebp
push
popl
shrb
mov
sar
mov
das
sub
cmc
insb
outsl
xchg
pusha
std
int
mov
popa
push
ret
pop
pop
dec
das
mov
pop
cmpsl
dec
push
mov
std
mov
pop
enter
jecxz
jmp
jmp
add
mov
mov
cmpsb
cli
adc
or
cmpl
es
push
ljmp
and
sub
mov
pop
mov
ja
inc
add
mov
adc
inc
mov
insb
divb
lret
push
test
cli
sbb
shl
cmpb
mov
dec
add
hlt
lods
pop
sub
stc
pop
lahf
fs
xor
daa
lods
jne
sub
mov
sahf
dec
xchg
fisttpl
xchg
sub
jno
mov
xor
test
sub
mov
mov
inc
push
sub
jo
sub
push
imul
or
and
aaa
add
fucompp
subl
push
jg
shrb
bound
dec
es
sbb
or
add
in
lea
and
mov
lcall
out
lahf
pusha
repnz
insl
cli
jmp
or
inc
add
ficoms
lock
js
inc
repz
jg
imull
mov
les
out
rcrb
or
mov
lret
sahf
add
aas
repz
roll
dec
xor
or
mov
loope
lds
loope
or
xor
sub
or
sar
mov
cmpsb
dec
filds
jecxz
jp
mov
or
jl
or
ja
add
adc
in
inc
adc
inc
mov
call
bound
jae
jns
adc
or
adc
mov
repnz
sub
loope
add
call
mov
negb
adc
out
mov
sub
xor
test
call
mov
sahf
xchg
sbb
mov
push
mov
xchg
sub
popf
push
out
push
jg
pop
mov
repz
push
loopne
aas
sbb
test
repnz
adc
jne
jl
inc
xchg
stos
push
pop
aaa
or
scas
xor
dec
jl
mov
imul
pushl
insl
jb
mov
pop
pop
jl
imul
xor
xor
sub
cld
jle
cmp
call
jo
pop
cmp
jno
call
pop
adc
lds
mov
andb
mov
popf
pop
push
pop
push
jecxz
ret
mov
or
dec
insb
push
sub
xor
mov
sbb
scas
hlt
loop
or
dec
aaa
mov
xchg
in
mov
call
sub
sbb
mov
es
adc
jmp
daa
adc
push
hlt
testl
mov
pusha
pusha
jo
outsb
jp
aam
xor
dec
xchg
mov
jg
cmpsl
scas
push
jae
cmp
repz
and
ds
cmc
push
out
std
cwtl
add
js
rorb
or
adc
out
sete
lock
mov
or
hlt
call
imul
sbb
cwtl
pop
das
and
frstor
test
lods
push
test
mov
xor
dec
cmc
in
insb
gs
add
mov
and
dec
adc
ja
daa
pop
imul
add
dec
call
mov
shr
pop
test
push
shl
dec
clc
mov
pop
nop
pushf
iret
push
jne
push
mov
add
cmpsl
sub
or
and
test
inc
push
enter
pop
inc
adc
sbb
daa
cmp
sub
adc
mov
addb
jl
lods
jb
sbb
pop
lea
pop
in
lea
jmp
pop
pop
out
push
xor
int3
cld
andl
out
mov
or
lea
push
xor
xchg
das
and
fstpl
les
fisttpll
and
pop
pop
popf
jg
inc
repnz
decl
out
cmc
test
lret
push
pop
jp
mov
ficoml
pop
nop
cmp
lahf
out
jecxz
mov
icebp
or
add
inc
sarl
mov
dec
ljmp
or
jl
ja
xchg
mov
inc
cwtl
dec
xor
cld
enter
aam
add
jmp
and
sbb
fdivl
dec
pusha
cmp
mov
pop
icebp
mov
out
cmp
push
movsl
push
das
pop
mov
mov
pop
pop
pushw
or
push
jp
js
sahf
jmp
jo
call
xchg
test
rclb
sub
jb
push
pop
mov
rorb
stc
inc
mov
int3
sub
test
mov
int3
dec
loopne
mov
push
repnz
jl
push
cli
dec
sub
subb
mov
movsl
dec
mov
fwait
loopne
mov
fisubs
adc
iret
inc
jb
push
mov
sub
push
jbe
pop
or
outsl
addr16
mov
repnz
jecxz
cmp
ret
mov
pop
icebp
cmp
clc
outsl
lret
push
xor
pop
mov
pop
std
dec
xchg
pop
ror
pop
or
ds
cmpsl
jns
and
cld
pop
adcl
lock
push
mov
dec
call
and
add
mov
push
mov
std
jbe
test
cmp
mov
scas
out
xor
sub
lds
push
pop
mov
in
lcall
xchg
nop
shlb
pop
inc
sbb
lock
push
fsubrs
mov
lods
sub
in
imul
jmp
repz
loope
inc
fld
lahf
jbe
or
cmp
fstl
loopne
adc
cmp
xchg
push
and
dec
test
adc
repnz
leave
rol
sub
aas
ret
lea
push
ljmp
sub
dec
push
stc
inc
stos
int3
xchg
pop
sbb
je
out
jmp
pop
cli
in
push
mov
or
dec
subl
cmpb
mov
mov
inc
add
cld
pop
cmp
pop
mov
jb
enter
cmp
push
mov
cmp
and
jp
jnp
daa
pop
jmp
ljmp
push
int3
lds
inc
xchg
stos
scas
in
or
fwait
ljmp
and
dec
leave
ljmp
xchg
call
and
xor
add
xchg
xchg
inc
imul
aas
mov
sub
mov
dec
push
jmp
in
shlb
scas
xchg
jns
push
push
rol
xchg
enter
daa
mov
pop
push
or
je
les
filds
jmp
add
mov
mov
jle
shrb
das
mov
mov
mov
movsl
int3
ret
mov
adc
and
push
imul
inc
cwtl
ss
and
or
ror
repnz
addb
xchg
or
mov
in
popf
mul
loope
inc
push
fstp
push
test
jg
pop
jp
je
icebp
ja
pop
ljmp
fsubrs
inc
int3
sti
out
insb
lock
cmp
jge
xchg
icebp
xchg
mov
mov
cli
adc
pop
subl
mov
jmp
loop
dec
imulb
mov
mov
and
adc
insl
xlat
into
or
addb
movsb
jo
mov
jbe
push
or
test
std
sbb
es
cmpsl
leave
icebp
xor
and
rclb
test
jne
out
inc
call
test
mov
imul
pop
jae
fcomi
fcomps
test
bound
inc
add
xorb
sbb
popf
aam
testb
in
into
mov
adc
sbb
and
aad
cs
fcom
jmp
mov
in
popf
mov
cs
out
cli
iret
ret
clc
std
pop
xchg
push
jo
aad
cmp
jb
filds
pop
push
pop
insb
inc
lahf
std
lods
rolb
jmp
mov
inc
xchg
jl
add
popa
inc
test
adc
and
fs
push
dec
pop
push
rcl
cmp
neg
adc
inc
push
sub
and
pusha
adc
push
mov
dec
inc
push
inc
sbb
cltd
adc
inc
ror
negl
jg,pt
xor
pop
adc
jg
test
mov
cmp
insb
inc
sti
push
imul
rcr
lock
mov
adc
jne
mov
push
repz
in
and
cs
pop
movsl
mov
pop
stc
push
xchg
mov
push
fucomi
xchg
push
sub
fisttpl
psubw
jle
and
ja
add
cmp
in
pop
and
push
sti
pushl
xchg
xor
mov
jne
out
rcrb
cmp
in
sti
sbbb
test
push
or
pusha
cmp
popl
movsl
daa
jmp
bound
and
push
pop
cs
std
repz
sub
aaa
add
lret
stos
cwtl
das
push
sbb
sub
stos
push
in
or
push
dec
adc
sarl
scas
ret
cmp
sub
sub
mov
and
fcoms
xchg
clc
mov
sub
sti
sbb
test
lcall
pop
inc
call
xchg
scas
mov
cmp
cvtps2pd
xchg
jno
mov
adc
out
repnz
xchg
sbb
push
add
lods
sbb
test
pop
cmpsl
ficompl
jno
loopne
data16
cmpsl
xchg
stc
inc
xor
jmp
pop
mov
push
mov
lods
xchg
popf
pop
stc
imul
mul
in
cli
lods
stc
cmp
mov
xchg
xor
mov
add
lock
std
enter
call
inc
cmp
xchg
jle
mov
dec
mov
into
test
push
inc
stos
inc
dec
dec
nop
lret
sub
pop
sub
push
shlb
inc
or
imul
push
rorb
scas
cmpsb
dec
inc
fildll
popf
inc
mov
ja
popl
lret
loopne
jmp
popa
cmp
xchg
decb
sub
sub
push
push
mov
sahf
cmc
pop
fsubrl
add
jnp
nop
inc
adc
add
test
xchg
clc
call
filds
add
mov
push
out
daa
inc
cli
std
repnz
mov
xchg
sub
shlb
into
jge
stos
add
aaa
or
mov
lcall
mov
mov
stos
pushf
add
into
push
pop
inc
sbb
lcall
xchg
or
pop
add
in
sbb
in
in
and
jno
mov
mov
xor
mull
xchg
pop
push
popa
mov
nop
into
sub
mov
and
hlt
push
sub
sub
lret
rcll
pop
fbstp
dec
repz
les
scas
xor
test
push
mov
dec
cmp
push
inc
dec
mov
inc
cmp
xchg
mov
and
out
and
add
dec
xor
sahf
inc
add
lea
mov
pop
pop
mov
fwait
pop
sarb
mov
mov
jnp
push
add
xor
sbb
jbe
repnz
out
ret
pop
xchg
int3
adc
call
cmp
stc
inc
mov
or
adc
lods
inc
push
pop
xor
std
aaa
aad
push
or
lahf
test
mov
and
pop
jmp
mov
jb
push
notb
cs
jmp
add
iret
dec
push
bound
rorb
fucomip
rol
jmp
adc
jecxz
js
jae
fildll
sub
adc
and
adc
fsubs
loope
mov
into
dec
push
xor
jo
js
push
div
sub
aad
int
lock
call
add
enter
add
test
outsb
lods
pop
cmp
movsl
aam
xorl
stc
lods
in
or
aam
add
cs
pop
xchg
mov
xchg
xchg
out
rcll
in
shr
insb
int3
xchg
or
scas
cmp
add
mov
or
addr16
push
jl
adc
jae
pop
xchg
ret
lds
mov
push
mov
imul
mov
lock
push
push
imul
iret
jg
scas
xchg
lret
jl
out
mov
call
pusha
mov
fcoms
pop
or
jle
jg
idivl
inc
cltd
xchg
xor
ret
in
pop
ljmp
fs
loop
push
mov
fidivs
or
mov
cli
sub
dec
dec
imul
call
push
pop
ds
enter
divl
js
pop
xchg
dec
ds
adc
stos
push
jne
sbbl
inc
or
sbb
mov
adc
and
leave
lcall
loop
lcall
jbe
pop
sub
and
xchg
cld
bound
ds
call
mov
lds
dec
dec
repz
dec
popf
icebp
jp
idiv
mov
push
mov
pop
jecxz
push
inc
shlb
loope
inc
imulb
xor
ljmp
add
cmc
pop
jg
lret
mov
xor
push
ret
sbb
push
outsl
mov
ds
inc
inc
pop
inc
and
mov
cmc
mov
into
call
xchg
repnz
mov
loope
test
push
call
push
imul
sbb
sbb
xorb
sub
in
and
lcall
or
cmc
mov
scas
in
mov
cmp
xor
clc
icebp
pushf
test
fisttpl
xlat
into
adc
push
jge
out
jg
xor
aam
sub
pop
xor
mov
lock
dec
bound
fisubrl
and
mov
xor
mov
mov
js
mov
in
jae
xor
cmp
inc
ds
fsub
mov
fstpl
in
push
cltd
shll
aas
inc
je
jnp
insb
inc
cwtl
cld
fucompp
jle
mov
sub
xchg
push
repz
xchg
inc
pop
mov
pop
aam
pushf
repz
and
sahf
pop
xor
cs
aaa
mov
or
mov
lahf
ja
fdivl
pop
xchg
pop
daa
sbb
push
das
xorl
jmp
mov
adc
les
xor
lods
push
negb
cmp
xchg
loopne
dec
xchg
push
inc
gs
inc
mov
and
fists
inc
mov
hlt
mov
fucomip
pop
pop
sub
aam
mov
cld
and
mov
test
in
and
lcall
mov
and
jo,pn
stos
or
jb
rorb
pop
cmpsl
mov
adc
cwtl
int3
ret
lret
incb
jmp
and
xorb
sub
jnp
sub
add
and
jecxz
stos
adc
or
imul
xor
add
repnz
fdivs
fwait
push
fcom
mov
adcl
repnz
mov
aad
imul
out
mov
ss
or
scas
xor
jo
jmp
jl
out
or
add
dec
in
xchg
xlat
mov
imul
shrl
or
out
inc
jecxz
scas
xor
lods
jb
stos
inc
testb
enter
or
ret
mov
ja
int
sub
aas
ret
lods
pop
and
scas
lock
ljmp
das
fdivl
daa
xor
repnz
shlb
sbb
fisttpll
lcall
dec
pop
jmp
in
pop
mov
push
icebp
jb
and
mov
jmp
sbb
xor
call
dec
fisttpll
mov
out
call
fistpll
push
out
movsb
sbb
repnz
imul
jmp
pop
inc
add
imul
shlb
subl
lcall
mov
in
push
pop
lods
push
push
pop
outsl
mov
lahf
cwtl
pop
lahf
jle
jmp
sbb
std
lahf
pop
sbb
cld
lods
pop
pop
mov
pop
pop
or
jnp
punpckhbw
mov
fsubl
pusha
adc
jecxz
shr
outsl
inc
cli
xor
mov
pop
std
es
inc
ret
and
push
enter
mov
inc
cwtl
sub
in
push
inc
xchg
inc
lds
jmp
cmp
jne
pop
movsl
mov
jl
push
dec
shrb
sbb
inc
lret
sbb
lock
movsb
and
cwtl
jo
xchg
or
sub
push
mov
inc
inc
and
push
mov
jmp
dec
std
cld
jne
dec
push
fldenv
mov
mov
push
flds
lahf
add
add
ss
mov
push
mov
scas
mov
cmp
test
jle
push
push
call
pop
pop
in
cwtl
inc
in
dec
dec
xchg
and
repnz
sbb
add
jecxz
xchg
pop
ljmp
cld
ljmp
inc
lret
mov
les
aam
fisttpl
push
push
pop
jb
sarl
sti
adc
add
cld
int3
call
add
xor
orb
jo
orb
sbb
cmp
mov
shrb
mov
scas
inc
fisttpl
xor
push
mov
imul
mov
xor
arpl
and
xor
call
push
mov
repnz
cmp
sti
sub
lea
push
es
xchg
inc
nop
cld
cs
lahf
lret
xchg
lret
movsb
jo
mov
bound
icebp
mov
push
call
js
jmp
push
fnsave
ficoml
movsb
xchg
xchg
sub
std
add
mul
or
fisubrs
inc
jmp
or
test
pop
jb
sarl
ss
out
xor
frstor
loop
dec
mov
daa
int3
shr
cwtl
adc
mov
repnz
adc
loopne
mov
dec
push
push
popa
test
enter
sub
push
xchg
fldcw
and
inc
mov
and
sbb
fs
add
mov
or
std
mov
mov
loopne
cmp
xor
call
jne
cli
aam
popf
jg
mov
mov
insl
insl
cmpsl
jecxz
icebp
test
jnp
sbb
int
push
add
adc
mov
scas
pop
add
mov
in
inc
xchg
jg
add
test
movsl
push
pop
data16
mov
testb
mov
add
xchg
and
and
mov
sbb
jne
out
push
lcall
xchg
cmp
mov
mov
jmp
pop
ss
pop
out
addr16
mov
mov
int
movsl
and
xchg
aas
cmpsl
fs
add
test
ficompl
pop
mov
jmp
add
add
sub
cltd
xchg
add
mov
lahf
or
jmp
adc
lea
add
push
outsb
and
jmp
and
fidivl
shr
dec
jmp
push
add
shlb
psllq
mov
mov
and
out
adc
xchg
mov
push
dec
movsl
adc
ja
pusha
cmp
jl
push
enter
push
and
jns
or
cld
loop
push
jmp
ja
xchg
inc
stos
scas
enter
ds
imul
xor
mov
stos
pop
fmuls
add
mov
jecxz
aaa
cmc
pop
sub
shrb
jle
shr
cmpl
jg
repnz
ret
sub
mov
xor
mov
pop
shrl
mov
push
rol
xchg
icebp
push
sbb
mov
cli
and
cmpsl
add
dec
movhps
out
scas
add
ret
mov
test
push
insb
gs
xchg
test
mov
pop
push
jbe
push
stc
out
xchg
sbb
lahf
add
sbb
sbb
push
je
or
divl
cwtl
cltd
ss
andl
sub
add
jg
mov
ljmp
cmp
insb
xchg
pop
shl
push
sahf
sbb
div
or
push
imul
cmp
sbb
pushf
arpl
mov
pop
add
sbb
xor
nop
lahf
popa
ljmp
call
add
enter
adc
cmp
cmpsl
imul
pop
mov
jmp
ret
mov
call
cmp
fcomip
bnd
or
inc
push
push
dec
mov
loopne
and
sbb
jno
nop
xchg
call
mov
negb
adc
mov
stos
push
mov
push
jno
jg
movl
inc
shr
mov
cmp
dec
sub
popf
loopne
add
xor
or
mov
pop
push
mov
icebp
xchg
addb
mov
cwtl
inc
jmp
inc
in
push
push
sbb
mov
inc
mov
add
subl
movsl
adcl
ljmp
pusha
mov
cwtl
mov
out
mov
cltd
jp,pn
jo
insw
fistpll
jle
mov
fisubrs
push
icebp
out
scas
xor
push
cmp
or
fs
xchg
outsb
inc
enter
mov
adc
push
subb
xor
pop
push
or
bound
cmpsl
add
jl
and
sahf
fcmovbe
pop
clc
out
mov
loop
mov
pop
pop
dec
ret
push
inc
cli
aas
push
clc
lea
xor
sub
push
in
mov
mov
xor
dec
or
add
lret
cli
xchg
xor
pop
decl
xor
std
enter
incl
jle
int3
cmpsb
pop
fcoml
es
aam
adc
jmp
aad
int
push
nop
mov
xor
movsl
push
mov
add
loop
or
out
aad
add
data16
jns
nop
out
and
cmp
movsl
cmc
sub
dec
movb
xor
nop
xchg
sbb
jge
test
in
faddl
push
sub
and
sub
pop
in
testl
cmpsb
xor
xor
clc
mov
dec
inc
in
movsb
scas
jno
or
or
xchg
inc
pop
push
shr
imul
nop
fdivrl
cltd
lock
mov
inc
icebp
dec
out
xchg
sbb
js
mov
sub
call
dec
dec
adc
nop
testl
jmp
loope
jo
sub
out
repnz
filds
push
icebp
dec
jge
clc
cmpsb
dec
xchg
cmpsb
sbb
jmp
addb
jo
fs
push
ror
sbb
push
push
pop
out
icebp
pop
adc
mov
pop
mov
dec
cmp
divb
into
jecxz
mov
xor
dec
test
lea
out
mov
cmp
jno
pushf
loope
mov
enter
std
insb
lds
jmp
insb
xchg
popf
jle
dec
data16
xor
out
bound
push
es
sub
and
jle
sub
dec
aaa
ret
pushf
sar
pop
dec
jo
mov
mov
push
xchg
jbe
dec
hlt
xorb
test
addl
shll
std
xchg
sub
push
addr16
jge
je
dec
or
mov
fwait
cmp
popa
push
test
stos
in
leave
sbb
inc
pop
mov
or
hlt
xor
pop
xlat
pop
orb
xchg
std
inc
dec
cmp
xchg
test
mov
lds
loop
jb
mov
cmp
or
inc
test
sbb
pushf
out
cmp
lahf
and
adc
test
mov
loop
push
mov
dec
ds
mov
sbb
cmc
push
pushf
mov
sar
rolb
call
jmp
pusha
push
fs
add
jns
xchg
pop
js
imul
jb
mov
adc
adc
xchg
adc
leave
adc
jne
inc
orb
or
stos
add
jnp
sub
jp
fiadds
adc
test
sbb
in
sub
adcb
ds
insb
incb
mov
or
xor
adc
das
xchg
dec
jge
cltd
in
jbe
pop
sbb
movsb
xchg
test
inc
xlat
lock
pop
jo
daa
inc
neg
sbbb
pop
fsubs
mov
fisttps
jae
cmpb
xor
inc
sub
push
add
sbbl
icebp
xor
mov
jno
jmp
leave
xchg
push
push
je
mov
test
push
xor
dec
mov
movsb
xor
adc
popf
or
arpl
repnz
test
jbe
dec
push
js
inc
outsb
leave
adc
and
inc
cld
push
jmp
jge
ljmp
fcmovbe
frstor
sbb
jp
faddl
pop
xchg
mov
dec
pop
stos
mov
sub
dec
loope
sub
bound
jbe
and
xor
push
push
les
mov
and
cli
sub
out
shlb
aam
subb
xor
lods
jp
xchg
loop
push
call
clc
icebp
popf
js
mov
cltd
fxam
bound
or
cmpsl
and
jb
mov
or
lcall
sbb
shr
into
pusha
inc
sti
sub
mov
pop
enter
add
inc
out
jne
mov
push
xchg
jecxz
push
cld
ljmp
scas
sub
outsl
sti
sub
mov
pop
jg
dec
jnp
cwtl
or
add
dec
pop
loop
add
adc
sti
das
jae
and
shll
stos
xchg
ds
aaa
and
popf
jb
mov
and
or
add
or
int3
cli
push
orb
push
adc
shr
cmp
mov
push
pop
pushf
pop
call
xchg
rol
dec
xor
call
dec
cmp
sub
xchg
mov
dec
xor
dec
push
lods
hlt
test
pop
jns
jns
dec
movb
sub
sbb
cmp
push
nop
mov
push
loopne
xor
jno
xchg
mov
ljmp
mov
outsb
in
loope
into
out
xor
push
cwtl
push
jg
and
cld
cmpb
xchg
test
jae
jmp
inc
pushf
jno
orb
test
xor
xlat
sbb
jno
idivl
out
daa
dec
xor
xor
pop
fcoml
mov
enter
call
mov
loop
das
pop
js
and
cmpsl
not
xor
mov
sub
dec
dec
loope
repnz
mov
xchg
push
cmp
popf
hlt
adc
movsl
push
stc
pop
dec
fsubs
ja
call
push
outsb
xor
or
push
push
sub
lea
xor
call
jns
add
push
rol
repz
push
subl
leave
sub
cmc
sub
jge
xor
jge
push
mov
imul
mov
repz
inc
cmpsl
lds
push
insl
lret
aas
mov
popa
imul
pop
insb
jmp
mov
xchg
enter
mov
lcall
mov
out
fldl2t
cmpsl
mov
mov
pop
mov
gs
out
scas
fs
xchg
outsl
xor
sbb
dec
push
lock
inc
dec
and
mov
nop
pushf
jl
or
test
or
jnp
pop
push
adc
ds
mov
imul
add
or
in
or
hlt
fnstenv
in
xchg
pushf
and
add
dec
aad
adc
jo
add
out
pop
js
sbb
jnp
scas
push
push
push
xor
xchg
shrb
mov
xor
dec
imul
mov
or
push
and
sbb
enter
lock
loopne
fisubl
hlt
xchg
sti
lods
xor
mov
mov
lds
mov
test
inc
lock
jmp
je
aam
add
repnz
xchg
fdivl
cmpsl
stos
mov
ja
clc
pop
inc
testb
enter
xor
movsl
aam
mov
pop
int
pop
cmpsl
and
mov
rcll
test
inc
outsb
jbe
xor
push
mov
sub
pop
mov
lcall
cmc
testl
adc
fs
in
inc
push
lds
add
xchg
mov
cmpsl
rolb
or
stc
mov
call
les
jmp
or
pop
in
pop
mov
add
mov
rcll
mov
insl
sbb
jbe
in
jl
out
mov
stos
neg
cmp
cmp
mov
inc
testb
jle
xor
push
dec
fsubp
ljmp
cld
cwtl
lret
cmp
jb
testl
mov
mov
xor
adc
repnz
jne
and
adc
add
lock
in
jne
fldln2
lock
test
xor
sub
faddl
pop
push
iret
lock
sub
out
mov
mov
sbb
repz
or
stc
inc
jo
cmpsl
or
jns
lock
dec
jo
fsubr
xor
or
fildl
dec
jb
dec
dec
xchg
loopne
pop
jge
and
add
jmp
insb
clc
ja
mov
xor
aaa
jnp
movsb
std
ds
cmp
adc
mov
mov
mov
test
fcmovb
dec
pop
pop
or
push
movsb
push
dec
movsb
add
pop
or
bound
or
mov
and
xchg
fildll
sti
insb
mov
or
mov
mov
push
stc
js
loope
xchg
loop
add
or
adc
cs
mov
pop
or
cmp
call
cs
xchg
js
hlt
stos
push
scas
inc
dec
jecxz
test
xor
ret
push
fwait
or
clc
js
call
hlt
loop
hlt
ret
xor
pop
mov
sub
lret
or
enter
ret
push
jbe
cmpsl
addl
sub
repnz
push
adc
call
rolb
test
in
jns
adc
lret
push
call
mov
or
cmpl
das
push
or
stc
jae
ficoms
fildl
mov
push
pop
sbb
cmp
cmp
cwtl
or
dec
rcl
or
pop
push
push
dec
jmp
push
xchg
dec
shrl
sbb
inc
mov
mov
in
jo
mov
cwtl
jnp
add
sbb
mov
mov
daa
mov
mov
and
insb
fnstenv
vshufps
cli
out
mov
jle
xchg
bnd
imul
mov
cmp
push
xchg
sti
dec
ror
sbb
insl
push
lods
jg
hlt
int3
xchg
orb
fstpl
dec
pop
inc
xor
call
sub
and
xchg
pop
mov
and
js
dec
ficoml
mov
mov
popa
add
into
push
dec
sbb
inc
push
xchg
add
pop
scas
sbb
arpl
xlat
jb
call
sub
ret
jae
sbb
jo
push
mov
pop
sub
push
adc
aaa
mov
popf
pusha
jge
push
clc
imul
int3
nop
imul
les
imul
popa
push
and
call
cltd
adc
pop
add
ja
fiaddl
pop
pop
mov
cmp
inc
icebp
repz
inc
out
cld
in
mov
cmpsb
test
or
add
jo
sarl
jmp
rorb
dec
inc
stos
mov
jbe
xchg
push
mov
mov
push
scas
out
mov
push
std
sbb
dec
cli
clc
icebp
subb
or
out
xchg
pop
mov
dec
jp
mov
dec
dec
mov
adc
popa
bound
or
mov
sarl
jmp
sub
and
cs
push
cmpsb
enter
inc
pusha
jae
addb
push
pop
lar
adc
popf
repz
and
pushf
mov
pop
mov
inc
int
sub
pop
xor
je
push
lds
adc
or
add
icebp
test
mov
push
mov
test
aad
out
push
lock
daa
inc
push
std
add
and
cs
pop
jmp
out
push
or
mov
adc
sub
sbb
mov
and
sub
xorl
enter
dec
mov
inc
jecxz
inc
xor
mov
sti
in
ret
ds
jmp
jg
mov
std
pop
xor
jb
mov
cli
adc
jae
and
leave
add
cli
and
les
cmp
loop
sub
push
xchg
pop
sbb
push
push
adc
push
aas
jecxz
repnz
jb
pop
inc
dec
sub
add
popf
or
mov
popf
push
pop
xchg
ss
xor
push
sbb
cmp
stc
xchg
lods
inc
xor
xor
dec
xor
jmp
hlt
pop
lahf
add
ret
pop
mov
cs
dec
fucomp
mov
lret
pop
stc
sub
clc
loope
push
js
mov
mov
cmpsl
lods
test
ss
sub
mov
mov
out
inc
jne
pop
push
loop
and
and
xchg
movsl
loopne
and
mov
out
shrl
roll
pop
rorl
jle
push
repnz
test
dec
xchg
push
jge
outsl
int
stos
lret
push
arpl
bnd
push
mov
rcrl
imul
stc
or
lods
fdivrl
cwtl
push
in
xchg
cwtl
push
fldenv
mov
inc
popa
pushf
cltd
dec
test
mov
xchg
or
shr
cs
in
es
call
pop
xchg
adcl
xchg
adc
push
xchg
mov
dec
mov
cld
mov
mov
mov
loope
repz
push
cli
call
nop
xor
test
fisttpl
mov
cli
scas
sbb
daa
mov
lcall
push
push
dec
bnd
mov
xor
fwait
test
imul
pop
fistpl
loope
mov
pop
call
add
jo
insb
inc
std
roll
nop
push
int
and
xor
les
jmp
repz
ljmp
into
repnz
loope
mov
mov
mov
sub
das
mov
or
inc
mov
dec
stos
sbb
push
sahf
and
fimull
push
out
andl
cmp
nop
out
das
clc
loope
imulb
inc
sub
sti
push
inc
enter
fsubl
insl
sbb
mov
or
and
repnz
cmpsb
lahf
inc
lret
push
xchg
mov
scas
mov
or
inc
mov
cmc
inc
jo
push
and
add
sub
add
adc
pop
insl
cs
movsb
cmp
insb
xor
stos
or
dec
notb
cmpsl
lds
push
fsubrs
xchg
jmp
insb
sbb
call
dec
mov
shr
stos
jmp
mov
fcomps
jecxz
les
add
loopne
dec
int3
xlat
xor
stos
push
imul
adc
stos
add
cmp
pop
cmc
cmc
push
adc
fdivrl
push
pop
push
jp
jne
mov
push
cmp
mov
mov
sbb
cltd
nop
mov
push
cs
push
xorb
or
std
sub
push
push
mov
or
cli
add
sub
mov
scas
push
mov
repz
jae
cmp
push
dec
push
pop
nop
cmpsl
fnstsw
cmc
es
rep
mov
xchg
jecxz
pusha
add
lret
sub
jp
push
in
or
sub
sbb
insb
mov
sub
xor
xchg
cmp
jmp
or
inc
mov
iret
loopne
hlt
sti
push
icebp
movsb
aam
sub
or
xor
mov
jo
in
sbbb
aam
adc
inc
jmp
shlb
cltd
lret
adc
dec
push
mov
sub
enter
push
push
ret
enter
jmp
lret
out
xchg
jl
test
sbb
dec
pop
sub
and
outsb
inc
xor
pop
mov
jp
pusha
or
cld
xlat
mov
and
mov
mov
inc
ja
or
in
repz
dec
repnz
push
fidivs
imul
je
fildll
or
add
ljmp
outsb
adc
outsl
add
push
jge
push
adc
jmp
ret
sbb
inc
dec
sub
mov
dec
cmc
lods
popa
pop
bnd
jne
cwtl
xchg
inc
push
sahf
cmp
test
les
leave
ja
divb
gs
out
or
xor
inc
sub
in
imul
mov
orb
aad
pop
ret
mov
push
test
mov
pop
ljmp
mov
xchg
scas
add
push
xor
inc
lahf
stc
outsl
or
mov
adc
push
call
fisttpl
mov
pop
xor
jb
mov
ret
scas
sahf
push
les
aad
inc
xlat
or
in
orb
cmpsb
xchg
pushf
lods
fmull
arpl
and
jmp
xchg
add
cld
lea
rolb
pop
scas
clc
jg
les
push
pop
movsl
mov
inc
mov
test
mov
cltd
jbe
or
fisttps
mov
xchg
loopne
ret
dec
adc
imul
jg
cmp
cmp
push
sbb
add
mov
adc
cli
loope
dec
push
jnp
mov
jecxz
sahf
push
daa
inc
inc
movzbl
leave
pop
addr16
out
push
jmp
lret
insl
and
pushf
pop
sub
daa
lret
or
fst
outsb
lea
fsub
out
cmp
cmp
std
pusha
movsl
sub
or
adc
out
je
dec
rorl
pop
xor
pusha
jns
clc
popf
push
xchg
insb
jmp
jecxz
xchg
icebp
push
xor
and
add
xor
jnp
or
mov
testb
jno
xchg
jno
inc
call
out
lcall
subl
cmc
xchg
jecxz
pop
lret
movsl
mov
das
inc
xor
les
xlat
pop
mov
out
gs
lea
xor
cli
xchg
mov
mov
test
lcall
sarb
mov
clc
cli
and
jg
cld
inc
cmpsl
cld
mov
fdivrl
xor
jle
mov
jo
adc
js
repnz
lock
fs
mov
dec
cmp
inc
clc
sahf
push
mov
jns
sbb
ss
pop
inc
add
and
cmc
xchg
xchg
cli
fst
add
mov
push
cld
or
ret
xor
xor
mov
test
pop
idivb
adc
cmpsb
popf
push
mov
lods
cmc
sbb
pop
and
int
push
cmp
fists
or
xchg
test
jmp
scas
sbb
int3
mov
call
or
cmpsl
pop
jmp
fdivrs
lods
cs
scas
repnz
xchg
jnp
mov
stos
pop
or
mov
jp
or
bound
nop
push
sahf
xor
mov
push
pop
call
add
inc
ret
fnstsw
add
mov
out
or
addr16
cmp
rolb
xchg
loopne
jmp
inc
add
cmp
in
cmpsb
inc
mov
add
stc
pop
mov
push
gs
cld
push
jmp
call
jmp
xchg
call
jmp
xchg
test
div
lock
push
jmp
sub
adc
add
sub
jb
lods
insb
lods
dec
sub
inc
mov
push
test
lahf
jmp
iret
or
loope
jnp
test
or
push
jle
fimuls
in
sbb
push
into
push
add
insb
pushf
imul
out
xlat
les
jbe
push
push
jmp
aaa
add
aam
fimuls
jmp
pop
jp
and
push
pop
pop
or
lcall
pop
shlb
fs
push
adc
es
jl
mov
mov
xchg
add
mov
jo
shl
lods
sti
imul
mov
or
xchg
mov
jo
sbbb
push
out
jmp
xchg
ss
push
sbb
out
inc
jae
inc
mov
xchg
pop
pop
sti
pop
addr16
loop
mov
test
loopne
add
cmpsl
mov
pop
fidivrs
adc
mov
cmpsb
push
icebp
sbb
mov
fistps
fs
insb
insb
pop
cmpsl
shl
jge
in
push
add
call
xchg
and
jnp
repz
pop
aam
push
loopne
jae
push
clc
xor
filds
int
cli
arpl
test
pop
aad
jle
inc
mov
js
repnz
push
pop
xchg
jno
cmp
sbb
in
dec
das
and
sahf
lcall
cmp
imul
push
xchg
jmp
xor
push
test
rcl
sbb
fsubr
mov
pop
or
push
arpl
sbb
fistpll
pushw
mov
test
add
pushf
add
fsubrl
pop
or
subb
stc
test
mov
pop
and
ret
shr
jb
adc
jo
push
outsb
mov
cmpb
call
jg
mov
add
pop
lods
jge
popf
adc
mov
dec
xchg
ljmp
sub
inc
data16
dec
sahf
in
stos
fsubp
lods
add
sarl
mov
or
fdivl
push
mov
cli
aam
ja
jmp
mov
pop
jp
mov
insb
call
lret
test
repnz
xchg
ss
sbb
sti
out
pop
xchg
lea
mov
mov
jp
mov
lahf
int
or
shlb
fsubl
or
repz
dec
out
xchg
push
and
aad
lret
fwait
int3
outsl
jmp
insl
jo
push
add
mov
xchg
aas
xor
or
decl
xlat
outsb
lahf
repnz
mov
dec
loope
repnz
mov
fldl
adc
ret
popf
int3
or
pop
jb
testl
mov
fnstcw
pushf
add
push
nop
jo
xor
push
xor
push
push
jns
imulb
jo
mov
add
gs
inc
xchg
add
mov
rclb
andb
push
jle
sti
adc
mov
fcoml
xchg
add
or
adc
xchg
das
addr16
stc
push
loope
mov
push
sti
dec
call
sti
adc
lock
call
mov
pop
out
lock
cwtl
jl
add
sbb
cli
fdivs
mov
or
sbb
popf
shl
sub
adc
rorb
xlat
sbb
mov
pop
mov
popa
xor
push
cmp
push
inc
cmp
test
sub
xor
push
xchg
push
clc
pusha
ret
js
push
pop
add
sub
add
ret
shll
fistl
pop
cli
adc
movsl
fs
dec
mov
mov
pop
mov
pop
xchg
push
bound
inc
pop
pop
mov
mov
int
mov
inc
jle
jmp
or
mov
push
fimull
cmpsb
ja
jo
or
fwait
test
cltd
sub
mul
sbb
cmp
and
pop
dec
sub
mov
leave
or
stos
mov
lcall
jae
push
leave
call
and
xchg
xor
add
xor
jmp
xchg
js
loop
sahf
lahf
das
test
jb
dec
xor
lods
imul
fsubrs
sbb
in
leave
xchg
fisttpll
ret
mov
int
dec
add
in
insb
leave
add
ror
add
rorb
pop
test
jb
imul
movaps
pop
xor
pop
xor
movsl
mov
cmp
lods
mov
mov
lea
dec
xlat
mov
inc
and
call
scas
add
test
and
add
aaa
sub
or
call
dec
jmp
inc
jmp
jns
mov
mov
dec
push
cli
in
mov
xor
ds
pop
jmp
inc
xor
jg
aad
xchg
jge
sahf
push
lock
or
punpckhbw
dec
inc
fs
xor
mov
leave
jmp
rclb
cld
and
nop
in
xchg
push
adc
and
sub
dec
sbb
dec
sbb
inc
imul
in
adc
sarl
xchg
arpl
adcb
daa
jge
lahf
ss
fdivr
rclb
mov
adc
xlat
das
cwtl
mov
dec
stc
pop
mov
mov
lods
out
xchg
enter
in
std
das
cmp
cs
xor
dec
scas
and
jl
insb
push
hlt
jbe
xchg
dec
mov
dec
loopne
bound
pop
mov
repz
sub
push
push
in
lret
lock
adc
out
push
push
push
loopne
sbb
adc
or
cltd
or
xchg
mov
xchg
sti
test
subb
pop
fstpt
jmp
push
mov
fcomps
jns
push
jo
inc
push
mov
repnz
mov
bound
adc
mulb
stc
xor
jb
aam
jp
pop
sub
fldl
and
stc
rorl
ds
pusha
jns
pushf
fisttpll
and
sub
push
dec
inc
loopne
xchg
pop
fsubrs
xchg
pop
test
int
jb
ret
call
jb
inc
out
jecxz
fidivrs
shrl
std
imul
fwait
insb
shll
pop
mov
add
sbb
pusha
addr16
pop
pushf
insb
mov
aas
inc
loopne
mov
mov
or
cwtl
push
xchg
mov
inc
lret
mov
pusha
decl
mov
mov
fistpll
push
push
push
mov
pop
inc
sbb
hlt
out
push
jmp
pop
mov
push
push
rorl
fwait
inc
stc
add
pop
daa
ror
repz
mov
scas
idivl
jge
fistps
fs
and
aam
jg
lods
ljmp
add
mov
je
daa
lahf
pop
jb
sbb
adc
mov
scas
push
hlt
in
aad
fbstp
adc
jecxz
inc
fs
mov
fwait
xor
loopne
ljmp
ret
sub
daa
mov
lret
pop
jo
push
fwait
jmp
mov
inc
jmp
or
sub
jne
xor
add
icebp
repnz
hlt
sub
inc
adc
push
push
xchg
mov
mov
sub
fsubrp
test
test
mov
daa
jnp
testb
in
sub
mov
out
push
xchg
push
sub
jecxz
cmc
iret
fisubrl
adc
xor
pop
pop
movsb
mov
fisubrs
dec
xchg
mov
andb
mov
push
out
in
jnp
arpl
xchg
idivb
in
xor
inc
out
sub
jle
mov
ljmp
mov
pop
mov
incl
jecxz
fmul
mov
jbe
call
pop
loope
mov
fidivs
inc
repz
push
clc
jmp
mov
sbb
push
inc
test
or
fnstcw
popa
ja
test
cmp
push
xchg
out
lahf
test
add
outsb
cmp
or
inc
pop
push
xchg
mov
movsl
push
sub
push
pop
out
jmp
out
in
imul
sbb
xor
ret
pop
sti
sub
jo
add
jg
in
subb
je
push
call
sahf
inc
test
jns
into
mov
int
sbb
call
mov
and
insl
xchg
mov
pop
out
decl
cli
dec
scas
mov
inc
xor
fisttps
or
sarl
sub
clc
push
fsubl
inc
mov
xchg
or
xchg
push
cmpsl
and
push
mov
mov
dec
pop
inc
loopne
mov
ljmp
and
pop
sbb
pop
xor
jmp
jge
push
jb
popf
xchg
imulb
xor
mov
mov
in
add
push
shll
mov
push
mov
out
lahf
mov
in
push
imul
inc
or
test
pop
jbe
dec
das
xlat
sahf
sub
mov
sbb
mov
cmpb
cwtl
adc
jmp
xchg
xor
sub
in
xchg
adc
imul
in
add
push
stc
fcmovb
cmc
and
sti
sarb
mov
mov
out
push
push
movl
jge
mov
dec
pop
mov
loopne
sbb
icebp
es
sub
jmp
subl
push
rorb
pusha
push
push
stc
ja
es
mov
lods
mov
jmp
jo
in
jbe
subb
push
pop
xorl
mov
out
jecxz
addb
mov
insb
pusha
loopne
add
or
loop
test
mov
pop
lods
sbb
cmp
cli
xlat
in
ficoml
hlt
push
add
push
test
ret
and
sub
aaa
ud2
pop
rorb
add
sub
leave
jge
pop
lds
add
cli
mov
pop
enter
inc
sti
or
sbb
cmpl
sbb
push
lret
call
loope
daa
in
scas
fwait
adc
std
sbb
scas
nop
jle
es
pop
je
lods
mov
adc
jmp
cli
lea
lahf
addb
ret
mov
ret
push
dec
call
xor
es
stos
loopne
jmp
add
jecxz
and
mov
std
cli
pop
xchg
aam
dec
mov
dec
data16
js
mov
push
pop
mov
inc
fildll
or
push
mov
inc
inc
xor
gs
jns
or
inc
lret
pop
jle
push
sbb
cs
fsubs
aad
mov
leave
movsb
pop
or
push
xchg
or
inc
pop
iret
jb
cmp
in
or
stos
jno
or
arpl
mov
getsec
lods
int
test
in
and
je
mov
ja
push
mov
lahf
dec
inc
addb
and
aad
testl
mov
mov
inc
ret
std
arpl
sbb
dec
mov
xor
das
sti
jle
lods
loope
cmc
adc
mov
ror
imul
push
movsl
hlt
arpl
stc
push
imul
daa
push
push
test
adc
test
cmpsl
cltd
aam
out
xlat
stos
mov
jb
jmp
jge
push
xchg
divb
daa
adc
dec
repz
call
es
negb
mov
jbe
scas
jne
aad
push
cmpsb
push
mov
stc
sub
fisubrs
test
push
sub
test
call
dec
int3
orb
jmp
jmp
push
hlt
cmp
icebp
test
lcall
cmp
and
neg
loop
out
inc
push
imul
add
jmp
std
shll
and
add
mov
push
add
sbb
cwtl
cmp
or
pop
fldt
mov
pop
add
popa
lock
mov
inc
loopne
dec
inc
stos
daa
das
push
sbb
ror
sub
add
repz
out
fld1
dec
pop
out
and
sbb
stos
adcl
test
iret
mov
cmp
jo
xor
jb
lods
push
jno
out
pusha
mov
mov
stc
daa
stos
and
sub
iret
push
or
lahf
xchg
sar
aad
jg
xchg
mov
or
adc
mov
mov
xchg
mov
add
pop
add
je
dec
pop
mov
and
adc
push
push
ja
int
mov
mov
push
mulb
push
clc
testl
mov
dec
mov
cltd
jp
fs
lods
std
mov
arpl
push
hlt
mov
add
xchg
call
int
mov
xor
cmp
repnz
pop
cmp
js
pop
lcall
mov
cli
or
enter
cmpb
adc
dec
repz
sub
ret
xchg
dec
dec
and
lock
outsl
inc
and
fnsave
mov
sbb
cli
add
loop
ret
addb
fsts
mov
insl
push
arpl
les
and
mov
mov
lds
subb
cmp
add
sub
add
pop
add
push
xlat
cmpb
cli
popf
outsb
mov
imulb
jp
or
push
es
fwait
mov
mov
mov
pop
adc
mov
pop
mov
sbb
call
leave
scas
out
clc
mov
movsl
lcall
push
mov
adcb
mov
inc
add
loopne
cltd
in
popf
nop
in
push
mov
lock
mov
cmc
cmc
sbb
imul
cmp
cli
test
sub
and
push
out
mov
imul
pop
mov
div
and
inc
notb
cwtl
xchg
mov
dec
in
sub
icebp
pushf
and
sbb
jle
es
xchg
out
inc
loope
jnp
or
xlat
stc
pop
sbb
or
call
jmp
outsb
mov
mov
inc
jmp
push
daa
sbb
and
inc
call
insb
fiadds
xchg
and
dec
mov
and
aas
movsl
mov
jecxz
xchg
push
shll
outsb
mov
rol
pop
popl
hlt
int3
addr16
sub
addb
fsubr
sbb
xchg
fisubrl
aam
les
aaa
mov
xchg
cmc
mov
pop
je
das
inc
fisubl
jp
or
mov
mov
call
sbb
xlat
pop
sub
xor
push
rcr
imul
sbb
push
push
adc
lock
pop
sbbb
adc
repz
sbb
mov
cmp
sbbb
sahf
xchg
loope
sbbl
popa
fsubr
sbb
out
push
bnd
call
cmp
pusha
jo
clc
mov
xchg
sti
hlt
hlt
test
jne
pmullw
xor
lret
xchg
adc
inc
test
xor
enter
das
adc
push
inc
sbb
dec
add
xorl
rclb
push
mov
add
mov
pop
mov
std
jb
sar
shr
or
mov
sahf
or
jge
jo
inc
fs
and
outsl
dec
push
pop
mov
adc
jmp
xchg
sti
jge
adc
leave
jg
dec
orb
mov
pop
xchg
mov
xor
movsb
pop
inc
push
or
outsl
add
scas
into
xchg
cmp
cli
mov
xchg
mov
popf
push
xchg
jbe
push
adc
sub
inc
cmp
daa
cmp
dec
pop
cmp
and
js
std
mov
cmpl
cltd
jge
push
add
test
mov
sti
cmpsl
fsubs
adc
sub
nop
mov
push
cmp
jl
cmpsb
hlt
lret
leave
dec
mov
inc
call
pop
dec
repnz
xchg
fwait
aaa
call
pop
pop
dec
rcrb
pop
scas
insl
adc
xchg
sti
es
cld
hlt
sub
xor
push
clc
mov
rorl
xor
movsb
xchg
bound
int3
and
jmp
xor
cmp
sbb
push
inc
mov
jmp
call
rorb
aam
flds
pop
mov
mov
sub
aam
push
rolb
nop
xchg
adc
xorl
iret
cli
lahf
sbb
dec
imul
insl
jg
imull
push
out
andb
lods
jle
and
add
rorl
push
mov
cmp
ss
pop
push
push
mov
push
les
repz
aam
mov
lds
jl
mov
lahf
dec
dec
fwait
dec
aad
add
xor
mov
sub
pop
lods
mov
movsb
dec
aam
popf
call
jmp
push
push
orb
jp
sub
cmpsl
notl
cmpsb
push
push
xchg
push
and
mov
xor
jg
or
mov
jb
dec
enter
test
push
cmp
xchg
call
push
lahf
jns
repnz
lods
push
mov
ja
test
xchg
aaa
mov
loop
pop
neg
dec
sahf
into
addb
pop
lds
loop
fildll
push
jns
dec
pusha
shll
aad
cmp
pop
add
in
sub
daa
pop
pop
xor
pop
cmp
dec
jmp
mov
loopne
pop
or
cmpsl
push
arpl
mov
jb
popf
mov
test
sbbb
mov
imul
fisubl
das
stc
ret
and
dec
pop
out
inc
cld
xchg
test
adc
add
das
dec
mov
testl
mov
xor
popf
mov
in
jo
movsl
and
aad
push
mov
jl
sarl
push
xchg
inc
jl
push
pop
in
repnz
push
push
popl
lods
mov
dec
inc
xchg
leave
call
or
or
mov
call
mov
sub
hlt
movsl
jbe
leave
test
mov
mov
dec
repz
ss
dec
cltd
push
xor
imul
ret
cmp
pop
lret
clc
sub
push
pop
jecxz
jg
xchg
xchg
out
inc
cmp
insb
push
sub
lret
dec
add
push
mov
cld
stc
call
xchg
sub
mov
push
lods
push
sbb
ss
pushf
call
pushf
rcl
push
push
inc
push
add
xchg
mov
jge
inc
jno
mov
adc
sub
sti
rolb
icebp
inc
jg
rcll
into
pop
pop
or
inc
bnd
jl
repnz
xlat
mov
sub
aaa
scas
jmp
aaa
mov
mov
sub
call
push
push
push
stos
cmp
jb
lds
jge,pn
cmp
sub
ret
mov
test
mov
cld
gs
or
mov
in
inc
push
leave
inc
mov
test
ret
adc
jecxz
out
je
pusha
rcl
cli
test
push
fdivrl
pop
pop
push
mov
call
dec
cmpsl
aad
data16
pop
xlat
mov
push
out
mov
in
dec
mov
stc
adc
add
xlat
jns
pop
add
leave
mov
add
adc
pop
loop
icebp
les
mov
add
sahf
fiaddl
add
fdivr
lods
scas
sahf
xorl
rclb
add
data16
or
dec
mov
std
sar
cmp
jg
popa
fldt
icebp
and
or
add
adc
pop
dec
cmp
push
push
hlt
sahf
push
adc
lea
jmp
ljmp
mov
call
push
leave
loope
add
jl
sti
inc
aas
xor
rclb
sub
ror
ret
mov
flds
jbe
pop
push
stc
push
std
mov
cltd
inc
add
or
test
addb
add
add
call
xor
jbe
iret
sub
dec
mov
lret
pop
lret
lret
pop
stos
pop
lret
movb
lret
pop
add
cmc
add
pop
or
pop
repnz
jno
push
jb
imul
aaa
mov
push
mov
pushf
jge
loop
hlt
mov
pop
mov
mov
repz
cmpsl
icebp
ficoms
movsb
mov
das
in
or
xor
jmp
mov
or
sub
xor
fsubrl
es
sbb
inc
dec
push
push
leave
pop
fnstenv
inc
call
sti
les
cwtl
into
push
out
mov
push
sbb
push
sbb
and
cmp
pop
push
push
jb
dec
leave
clc
loope
mov
test
mov
movsb
rcrl
adc
push
and
mov
add
sbb
mov
xchg
mov
jo
mov
enter
pop
out
dec
sub
cwtl
add
inc
pop
xchg
mov
int
push
or
push
dec
mov
vcvtpd2psx
movsb
movsl
repnz
push
leave
jb
mov
negl
jecxz
add
nop
sti
jl
cmpsb
movsb
shlb
push
cs
ret
xor
popa
int3
mov
leave
cli
into
jne
repnz
loopne
insb
test
xor
and
cmp
mov
jg
cli
pop
cld
bound
mov
dec
dec
cmp
sti
pop
subl
lcall
mov
lea
mov
mov
loope
lret
mov
ss
scas
cmc
shll
fs
addb
push
sbb
cli
iret
pop
or
test
repnz
jbe
xchg
pop
mov
mov
pusha
and
push
jno
arpl
int3
mov
and
push
jmp
mov
mov
push
sub
inc
dec
or
jnp
mov
pop
xchg
or
pop
roll
repz
sbb
sub
xor
dec
add
call
test
sti
and
dec
pop
adc
imull
clc
mov
shr
cmc
xor
pop
xor
pop
push
cmpb
mov
and
jo
mov
loope
sbb
andb
out
movl
cmc
inc
imul
sbb
inc
stos
cwtl
xor
in
cmp
call
sub
pop
ret
adc
jmp
sbb
repnz
rclb
mov
mulb
pop
xchg
dec
mov
mov
popf
arpl
nop
fdiv
inc
das
xor
cltd
pop
jb
and
adc
call
cs
stos
popa
hlt
xor
xchg
test
or
xchg
fs
jne
pop
std
fidivs
repz
in
adc
xchg
hlt
outsl
hlt
push
imul
mov
jl
dec
sbb
sub
xlat
jno
push
fdivr
loopne
ret
xchg
mov
adc
clc
add
inc
sub
pop
mov
je
test
push
cmp
xor
pop
test
and
or
mov
inc
insb
ret
jecxz
xor
imul
pop
push
fldlg2
mov
jg
scas
stc
adc
shll
or
xchg
dec
mov
mov
sbb
and
neg
pop
jle
aad
inc
jl
das
jle
pop
push
cwtl
sub
inc
xchg
dec
andb
ljmp
adc
fsub
adc
pop
mov
mov
scas
xor
xchg
shlb
push
mov
jno
dec
dec
fstl
mul
loope
divb
xor
mov
push
sub
ljmp
out
pop
xor
push
push
push
add
sar
inc
jmp
cltd
mov
sbb
or
sahf
aam
std
jne
inc
stos
pop
jbe
mov
mov
mov
call
xlat
inc
xchg
pop
lret
ret
sub
lret
in
mov
sbb
inc
push
add
repnz
call
mov
inc
mov
add
test
mov
repz
out
or
xchg
inc
mov
sub
scas
mov
loop
test
lods
and
pop
or
mov
lock
aas
lret
dec
mov
int3
imul
cmp
adc
js
jg
pop
shlb
addr16
mov
jle
or
cld
testb
push
jp
ret
push
xchg
xor
jb
mov
sub
jno
jo
scas
insl
ret
xor
hlt
adc
mov
loopne
inc
mov
test
inc
sub
push
pop
add
test
mov
cmp
push
push
mov
mov
cmp
push
add
jmp
jo
pop
ljmp
adc
jmp
pop
mov
fimull
repnz
sbb
sub
ja
jns
push
dec
daa
sub
pop
push
fucom
fwait
lret
inc
jns
adc
dec
fs
dec
add
adc
popf
jmp
mov
lds
movsb
lock
lods
push
cmp
aad
mov
cmp
push
fdivr
lds
notl
int3
inc
or
aad
popa
imul
iret
mov
call
push
adc
call
insb
push
pop
scas
dec
or
mov
inc
or
cmp
jge
jmp
mov
test
xchg
or
dec
pop
fnstcw
shll
add
dec
mov
mov
aas
sbb
cs
push
jae
hlt
outsl
rcrl
or
jp
mov
je
test
scas
std
pushf
sbb
or
out
shl
jl
or
or
sbb
cmpsb
cld
cmp
js
jle
push
mov
add
xchg
mov
mov
jecxz
ss
stos
jg
enter
jl
mov
or
pop
int
push
sbb
in
xor
addr16
call
dec
insl
out
cmp
sub
cmp
int3
jne
arpl
pushf
sub
aaa
and
pop
inc
js
out
fdivr
lahf
aam
lahf
cmp
pop
jb
rorl
inc
jbe
mov
inc
lahf
push
cltd
xorl
sub
loope
cmp
or
in
sbb
pop
add
cmp
movsb
xor
dec
int3
out
call
inc
fnstcw
leave
stos
lds
inc
inc
adc
icebp
and
fwait
mov
mov
inc
jno
sbb
jmp
pop
jmp
push
add
lds
xchg
out
ljmp
adc
pop
xchg
ret
mov
mov
in
add
lea
aam
call
into
mov
mov
imul
cmc
fsts
push
das
das
faddl
jp
jecxz
sbb
inc
push
dec
jno
xor
cld
pop
stos
dec
or
adc
pop
clc
push
mov
cmc
sub
push
sahf
enter
cmp
adc
mov
lcall
push
in
test
jl
daa
incb
jmp
jl
test
mov
das
outsb
out
xor
sbb
fsub
ret
mov
daa
rcr
std
adc
mov
out
push
roll
cmpsb
test
mov
popa
adc
sub
repz
outsb
mov
fimuls
lock
test
lahf
outsb
ret
mov
sti
mov
xlat
sahf
add
fstps
mov
popf
adc
bound
mov
xorb
outsl
pop
jge
negl
imul
fisubrl
movsb
ss
pop
mov
mulb
jb
pop
mov
nop
cmp
sbb
mov
pop
in
sub
call
or
fnsave
push
inc
push
push
out
adc
mov
loopne
inc
or
popa
call
pop
data16
mov
sub
mov
lahf
cli
push
mov
aam
dec
cmc
orb
sub
das
xchg
pop
sub
jmp
cltd
jge
popf
jae
adc
es
mov
push
pop
stos
sub
test
mov
test
or
mov
xor
jbe
or
ljmp
mov
mov
popa
or
add
mov
aam
or
adc
mov
xchg
mov
out
push
and
int3
out
repz
add
mov
push
lea
push
int
add
test
sti
inc
xchg
fdivs
outsl
sbb
and
fiaddl
lahf
int3
adc
xchg
xor
xor
dec
jno
int3
and
jmp
lock
push
icebp
pop
xorb
dec
call
iret
xchg
mov
mov
mov
incb
pushf
xchg
addr16
or
jg
mov
mov
inc
repz
scas
je
les
jmp
pop
mov
sub
fldcw
shlb
popa
mov
xchg
cmpb
inc
sub
insb
dec
das
inc
ljmp
fstps
dec
pop
adcl
cmp
cwtl
div
mov
das
xor
outsl
mov
pop
popa
jmp
inc
cmpl
or
sbb
mov
loopne
rcl
pop
cld
add
fistps
and
mov
mov
sub
aam
lret
into
out
leave
in
ret
mov
pop
lret
rcrl
ljmp
cld
adc
xchg
mov
lods
daa
mov
sbb
nop
jg
push
xor
rol
push
xlat
pop
push
roll
jge
sub
adc
push
xor
jns
mov
ja
push
push
xor
jmp
adc
sub
fs
outsb
movsl
jo
xchg
inc
movsl
das
fcoms
sbb
lret
adc
push
dec
je
lret
pop
icebp
lret
cmpsb
je
inc
mov
mov
add
daa
xchg
mov
filds
mov
jno
push
fsubl
nop
mov
push
sbb
or
sub
fists
movsl
idivl
add
cmpsb
outsl
fists
push
popf
push
outsb
mov
xchg
cmpsl
stc
leave
ja
mov
addl
xor
dec
mov
mov
xlat
cmpsb
clc
sub
call
loop
mov
adc
push
cli
div
inc
rep
push
or
add
cmp
cmpsb
outsb
mov
push
adc
mov
flds
rcr
xchg
call
inc
stos
or
xchg
or
jle
imul
addl
inc
mov
jno
jo
pop
jmp
paddsb
sbbb
fisubrs
mov
push
or
sub
inc
cmpsb
push
mov
in
push
jmp
shll
adc
pop
jmp
mov
subb
movsb
fst
mov
adc
daa
hlt
divl
mov
pushl
dec
and
push
mov
xchg
inc
inc
mov
sub
xorb
popa
imul
dec
mov
jmp
xor
jl
mov
mov
imul
sub
inc
sub
push
inc
inc
or
cmp
movsl
call
xchg
cmp
dec
mov
in
imul
sbb
loope
sti
mov
jmp
movsb
xor
mov
dec
or
cmp
mov
xor
mov
jmp
cmpb
insb
cmpsl
loope
call
dec
cmpsl
adc
sarb
subb
ret
xchg
dec
jle
add
call
xor
mov
and
add
mov
jne
add
jle
jge
xor
enter
ja
ss
push
mov
std
or
xor
pop
jae
mov
mov
lcall
cmp
adc
cmp
cmp
push
sub
jnp
cmp
cmp
mov
mov
subl
lret
mov
and
in
clc
rcrb
jb
cmp
xlat
outsl
xchg
push
roll
or
sub
xor
mov
pop
inc
sub
lret
addr16
imul
iret
xchg
cmp
ja
fistpl
fs
ja
xchg
andps
mov
in
hlt
dec
dec
jecxz
sub
mov
test
push
call
sbb
ljmp
mov
ret
sahf
mov
in
movsl
adc
sub
insb
lret
add
or
lret
jp
in
mov
pop
add
mov
insl
das
loop
das
inc
ja
sbb
jb
jmp
jne
sub
pop
gs
add
sub
cli
mov
stos
out
bnd
jnp
outsb
in
and
ljmp
mov
mov
xlat
ds
movsb
xchg
cwtl
sub
inc
mov
leave
scas
push
repnz
in
pop
push
std
mov
pop
adc
rcr
add
dec
mov
loopne
cmp
push
push
pop
or
int3
cli
addr16
out
ds
repz
and
popa
xor
out
adc
jb
fiaddl
lds
lock
mov
mov
test
or
fiadds
sub
and
nop
dec
mov
cli
inc
cmp
icebp
inc
leave
imul
sub
jb
sbb
push
pop
sbb
push
ret
adcb
dec
ljmp
xchg
in
fisubs
sbbl
jmp
out
stc
fmuls
ds
int3
cmp
paddw
mov
xchg
jmp
cmp
add
xor
add
mov
push
xchg
mov
pop
lret
ficoms
xchg
jo
dec
or
jge
test
sbb
and
inc
in
mov
sbb
adc
push
or
std
inc
or
xbegin
jno
add
cmc
cmpsb
sbb
xchg
sbb
mov
cmp
movsl
xor
div
call
adc
adc
loopne
pop
xchg
push
add
ss
mov
daa
jae
xchg
fiadds
pop
inc
shr
xchg
call
aam
mov
sub
fdivl
dec
clc
stc
add
mov
fisubs
mov
orb
mov
xor
mov
inc
add
pop
mov
pop
fs
repz
adc
jo
imul
jle
sub
int3
fmul
and
push
div
push
test
insb
cmpl
xchg
pop
push
lds
jecxz
xor
clc
xchg
sub
xchg
add
call
adc
adc
and
aad
icebp
mov
or
sbbb
dec
fcomps
or
pop
mov
shlb
jmp
iret
or
cmp
xchg
sbb
push
data16
mov
sahf
aad
mov
push
das
or
addr16
call
mov
cmp
mov
cmp
stc
push
jnp
mov
stos
call
jle
sti
rorl
cmpxchg
dec
add
repz
jmp
inc
dec
push
adc
movsl
mov
es
es
jmp
mov
lods
pop
or
icebp
insl
or
ljmp
pop
mov
adc
mov
stos
lret
add
enter
inc
pop
std
cwtl
daa
mov
inc
dec
fsubl
mov
gs
psllq
mov
addb
imul
mov
sahf
jmp
add
outsl
jne
xor
insl
dec
dec
orl
jae
fldt
jno
imul
mov
add
jns
mov
ds
pop
mov
ss
inc
pop
leave
dec
mov
jo
xor
shrb
mov
add
lret
movl
repnz
mov
push
nop
aaa
jp
inc
sbb
ds
push
ret
or
push
mov
sub
mov
jo
outsb
mov
or
xchg
mov
pop
lods
cwtl
xor
clc
xor
int3
adc
ret
inc
sbbl
mov
js
les
rorb
cmpsl
shrb
push
daa
mov
inc
jmp
cmp
dec
inc
notl
mov
dec
cmp
mov
jo
or
dec
inc
movsl
push
push
mov
cmp
dec
jmp
push
dec
out
mov
ja
mov
fldl
sbb
dec
and
adc
cmpsb
dec
pop
mov
rcll
jle
pop
iret
sbb
push
subb
sbb
and
jge
jo
pusha
push
shlb
jle
pop
out
cmp
or
cmpsb
xchg
sbb
jmp
test
dec
xchg
add
rcrb
mov
cwtl
into
iret
sbb
test
jle
je
rcl
jge
int3
aaa
push
jmp
jmp
inc
push
cmc
orb
cmp
and
jb
and
shll
jp
nop
addr16
std
xchg
popa
sub
pop
mov
push
inc
into
cmc
lods
outsb
lds
fsubp
negb
bound
ljmp
jmp
sub
loope
or
sbb
adc
call
mov
arpl
nop
nop
inc
ss
loopne
pop
and
rclb
add
lds
xor
rorb
js
xor
and
jb
stc
inc
sbb
dec
mov
sahf
cltd
mov
ljmp
pusha
mov
in
xchg
xor
out
sbb
and
and
or
add
inc
pop
test
ret
out
dec
popa
testl
and
shlb
dec
mov
dec
mov
xorl
adcl
in
stc
cwtl
xchg
les
inc
call
dec
mov
cmpsb
inc
sti
mov
int3
or
cwtl
push
xchg
mov
sub
adcb
push
and
cmp
xor
push
push
adc
fidivrl
xlat
push
test
or
ret
loopne
fildll
mov
out
adcl
push
enter
and
loope
dec
push
and
or
inc
das
xchg
push
hlt
dec
int3
and
testb
rol
or
push
xchg
dec
inc
jmp
in
push
and
jnp
inc
ret
xchg
clc
xchg
hlt
and
xchg
addl
adc
add
jmp
mov
mov
mov
daa
and
cli
jne
sub
das
xchg
call
push
shl
push
cmpsl
lock
ret
add
pop
out
jmp
pop
jno
cld
outsl
fstpl
ljmp
xor
je
enter
cmp
push
je
enter
addr16
xor
bound
push
add
std
cmpl
adc
push
cmp
icebp
xorl
pop
call
mov
mov
push
jbe
mov
scas
push
insl
pop
xor
aam
and
mov
addr16
cmp
mov
inc
xor
inc
pop
ss
jge
cltd
testb
mov
mov
sub
push
mov
imul
movsl
cmp
iret
lcall
mov
js
mov
negb
inc
mov
int3
lods
in
testb
inc
push
cmp
call
cmp
insb
dec
mov
cwtl
and
inc
pop
jmp
loope
hlt
or
push
std
adc
xorb
mov
jns
mov
lcall
sub
dec
shr
and
stc
sbb
fstp
lcall
xchg
outsb
or
sbb
paddusw
repnz
shrl
sbb
cmp
loopne
hlt
das
sub
incl
add
push
in
add
sub
jo
jbe
sbb
mov
inc
stc
push
mov
cwtl
sahf
outsb
icebp
push
imul
jne
mov
dec
sbb
push
cmp
mov
outsb
jge
out
outsl
clc
rcll
std
test
cmp
jg
mov
dec
loopne
ja
cmc
call
sbb
jb
add
popf
loope
stos
sub
rol
icebp
sbb
sbb
bound
sub
clc
sub
faddp
ds
jp
mov
or
cmp
icebp
mov
cmpsl
lret
xor
xchg
cwtl
xor
and
adc
push
inc
fidivrs
and
pop
idivb
icebp
testb
sub
cld
loopne
mov
cmp
pop
push
or
push
mov
insl
mov
or
int3
jl
cmp
leave
dec
push
jle
mov
cwtl
imul
mov
mov
arpl
lea
xor
cld
pop
negb
or
sbb
or
es
inc
in
dec
mov
dec
mov
je
cmp
inc
mov
fstpt
mov
mov
mov
loop
and
jge
les
lods
idivl
stc
sbb
outsl
aad
fldt
mov
int
shll
sahf
ficomps
add
jne
ficompl
ret
mov
loope
sbb
out
xor
mov
jl
lea
loopne
mov
test
icebp
cmp
stos
stos
xor
mov
sbb
in
or
push
test
addb
ljmp
jbe
push
xor
push
inc
insb
add
lcall
cmpsl
les
inc
stos
mov
sbb
dec
xor
jle
orl
sub
out
push
sub
inc
cli
mov
mov
movsl
mov
mov
mov
lods
push
repnz
nop
in
push
xor
inc
aad
inc
stos
mov
mov
lock
addr16
mov
pop
scas
aam
sub
fisubrs
je
pop
pop
lock
fcomip
inc
mov
cmc
ljmp
aas
fildll
or
xchg
jg
test
cwtl
mov
add
mov
dec
insl
sbb
cmp
adc
sbb
fsubrl
and
jb
push
inc
setbe
sub
fcompl
add
inc
inc
jbe
in
cld
int3
in
jno
and
push
rcrb
push
cmp
sbb
jmp
inc
fisubl
and
cs
jge
leave
ds
dec
sahf
mov
vpunpckhdq
and
lock
stos
mov
cli
push
lret
cmp
mov
in
es
or
lods
mov
lahf
dec
mov
sub
cmp
imul
pushf
mov
test
je
mov
mov
lret
and
add
loop
js
pop
movsb
cli
add
push
dec
into
jmp
mov
cmp
xchg
and
cld
mov
sub
or
fs
daa
call
testl
call
lahf
into
sub
mov
ret
icebp
rolb
sub
xor
repnz
stos
aad
frstor
es
mov
fwait
sub
or
or
testb
daa
sub
adc
pop
pusha
dec
push
lods
lret
jbe
cmp
sbb
dec
mov
xlat
fsubp
scas
dec
adc
jge
rep
movsl
outsl
pop
les
dec
cmc
std
mov
sub
test
push
lret
xor
hlt
add
int
mov
test
jno
in
push
push
aaa
cwtl
in
mov
xor
rol
int
aam
and
cmp
dec
lods
inc
xor
mov
jmp
inc
pop
jae
mov
cli
dec
mov
pop
int3
clc
mov
and
mov
inc
in
stos
mov
push
jbe
leave
lahf
cmpsl
insb
push
ljmp
or
cmpsl
jo
rcll
rcrb
call
and
or
pop
movsb
popa
push
pop
xchg
push
or
mov
mov
les
lods
mov
xorb
xor
jecxz
negb
mov
xchg
int
and
daa
mov
ss
inc
pushf
xor
mov
fnstsw
jmp
lds
stos
dec
jge
inc
sarl
repnz
add
adc
pop
insl
jecxz
test
andl
adc
inc
je
int3
es
or
pop
fcoms
jmp
repz
sub
out
and
mov
xchg
adc
cs
sbb
fucomip
fwait
int
push
sbb
idivb
cli
dec
jl
push
jmp
popa
jb
dec
imul
cmp
jmp
mov
sbb
xor
mov
or
mov
pop
in
data16
jmp
cmp
or
xchg
add
mov
dec
and
push
adc
pop
sbb
cmpsb
test
mov
enter
jmp
pop
inc
pop
enter
cmp
add
push
pmaddwd
lods
xchg
ret
inc
push
and
push
pop
xchg
mov
daa
aad
lret
mov
ljmp
shl
xchg
leave
pop
sbb
cwtl
mov
push
das
mov
pop
dec
fistpll
clc
xchg
punpckhwd
mov
jmp
or
adc
aam
in
or
cli
dec
lock
push
jmp
sbb
ss
mov
jae
jmp
or
mov
daa
lods
sti
push
subl
ljmp
mov
sbb
imulb
loopne
xchg
jne
xor
xor
mov
std
aaa
mov
out
pop
add
adc
xor
xor
ja
adc
mov
pop
push
xchg
xchg
inc
test
fbstp
aam
ret
add
sbb
enter
in
xchg
dec
add
lret
push
mov
inc
lret
test
mov
mov
jb
mov
pop
mov
mov
int3
jg
jg
aad
and
mov
jmp
xchg
jno
push
mov
rorb
cltd
lahf
out
mov
int3
enter
std
daa
shrb
jle
jg
push
or
dec
xor
pop
dec
or
lods
pop
mov
mov
movsl
inc
leave
mov
and
mov
popa
int3
jnp
je
xor
stos
jp
fistl
inc
lds
xlat
sub
dec
mov
sub
push
daa
add
das
dec
shrl
inc
jns
mov
out
call
sbb
lods
ja
repz
pop
push
mov
jg
loope
stos
jecxz
cmp
ds
mov
pop
mov
dec
fistps
clc
sti
jle
jnp
cmp
push
lret
dec
js
in
mov
push
add
clc
rcrb
mov
adc
push
outsl
push
fistpl
mov
fisubs
pop
dec
adc
sarb
jbe
or
push
icebp
clc
mov
lds
hlt
sbb
aaa
mov
mov
jl
mov
jno
sub
or
out
call
mov
mov
mov
je
and
push
sbb
pop
xor
stc
vpcmpgtb
mov
inc
enter
sti
dec
call
mov
cmp
or
fildll
and
inc
xchg
loope
aad
bound
mov
outsl
cs
push
jo
sub
xor
stc
das
add
jo
fmuls
popf
jge
add
lock
cltd
imul
fs
adc
mov
jb
in
pusha
add
cmp
inc
orb
pushf
lods
mov
adc
cs
sbb
dec
jmp
icebp
mov
add
insb
inc
or
mov
out
lret
or
and
popa
int
fimuls
ja
xchg
loopne
in
mov
cwtl
xchg
or
das
and
xchg
out
pop
sub
mov
cltd
push
cmc
shrl
xchg
inc
sub
in
fwait
pop
sbbb
and
mov
adc
jg
xchg
xchg
test
mov
or
xchg
pushf
pop
fstl
mov
or
mov
push
add
loope
jp
adc
test
fcomps
dec
xchg
mov
jmp
fs
push
inc
fs
sbb
je
dec
insl
mov
jb
fwait
inc
inc
or
cmp
jmp
bound
or
push
push
mov
jmp
mov
xlat
shrl
inc
int3
sti
roll
add
adc
cmp
popl
cmc
dec
andb
outsl
leave
loope
adc
jl
jb
test
inc
and
gs
push
icebp
mov
push
pop
mov
shrb
fcomps
fucomp
and
mov
cmp
leave
ss
int3
add
jmp
ja
dec
icebp
or
dec
sub
pop
nop
call
orl
push
add
out
and
adcl
call
xor
xor
jo
ret
loop
jecxz
lods
push
hlt
cltd
jb
lahf
clc
insb
out
jns
pop
pop
or
andb
sar
dec
test
cwtl
lret
mov
inc
jmp
xchg
ljmp
inc
sub
xorl
repnz
pop
jns
or
addr16
repnz
addb
push
add
adc
aad
das
orl
shll
test
sub
das
mov
stos
out
addr16
popf
insl
mov
hlt
cmp
out
inc
xchg
stos
adc
filds
xchg
add
dec
add
scas
pop
jmp
call
in
xchg
arpl
lret
repnz
push
rcrb
movsl
inc
stc
rcr
daa
pop
loope
mov
test
inc
mov
mov
pop
jmp
mov
xor
or
xor
adc
add
sarb
das
ja
cld
xchg
inc
inc
and
rcrl
mov
push
sbb
orl
mov
jge
adc
dec
lea
jecxz
stos
icebp
bound
jle
mov
call
leave
dec
adc
cli
xchg
push
insb
pop
xchg
test
adcb
xor
or
mov
es
test
call
mov
mov
mov
icebp
call
or
jbe
dec
or
int3
mov
jp
mov
pop
enter
jbe
ret
std
add
pop
jmp
imul
pop
push
fidivs
xor
adc
push
cmp
add
fcoml
icebp
xchg
inc
mov
or
add
sbb
jb
xchg
cmpsl
daa
outsb
fidivl
jp
mov
insb
stos
sub
and
insl
shl
sub
mov
scas
push
push
call
ror
cmc
fs
push
into
lret
cmpb
jo
push
mov
mov
stos
or
inc
stc
or
call
orb
fnsave
stos
mov
div
aaa
dec
and
push
mov
jmp
xchg
sub
in
repnz
sbb
or
dec
dec
cld
stos
pushf
loop
or
imul
insb
ljmp
cmp
dec
test
loop
adc
and
xchg
push
test
jecxz
insl
cli
jmp
sahf
xor
jge
xor
jb
push
negl
lock
xchg
mov
inc
mov
int3
adc
stc
jnp
sbb
adc
and
fucomip
test
mov
jmp
ret
pop
pop
jge
popf
mov
iret
cld
sarb
sahf
pushf
xchg
fstl
lds
fwait
dec
in
notb
push
jl
repz
nop
stos
repnz
fdiv
mov
xor
loope
cmp
hlt
ret
mov
fcomps
call
adc
push
leave
popf
cld
jbe
push
pop
cli
jge
mov
add
xchg
fsubs
or
sbb
xchg
addl
inc
pop
repnz
lea
mov
mov
mov
mov
sub
dec
xchg
mov
arpl
mov
mov
ficoml
dec
fldcw
leave
dec
inc
das
mov
push
mov
mov
xchg
fwait
fwait
mov
mov
or
push
pop
jge
clc
push
mov
xchg
mov
ljmp
inc
dec
and
aaa
je
pushf
insb
cmpl
sti
hlt
mov
push
cmp
lods
cmpsb
push
mov
je
loope
scas
jecxz
lock
mov
ret
test
sub
jb
fs
nop
insl
mov
enter
jmp
mov
popa
icebp
fldl
adc
cmp
push
cltd
add
xor
mov
mov
dec
mov
sub
mov
cs
cmp
cmp
mov
adc
clc
xor
cmpsl
dec
loopne
push
xlat
mov
mov
xchg
pop
mov
jmp
push
xchg
scas
mov
aas
nop
sbb
mov
mov
icebp
pop
mov
clc
mov
cmp
mov
sbb
cmp
out
mov
std
and
mov
dec
add
push
jae
jmp
fisubrs
pop
xor
pop
cmpb
sahf
mov
sbb
pop
fwait
int
mov
add
sub
arpl
and
mov
pop
sbb
cmpsl
enter
pop
das
shl
jg
jb
mov
fidivl
stc
loop
and
sub
adc
mov
hlt
jo
arpl
xor
pop
pop
push
jmp
bound
mov
or
cmc
cmp
jmp
sub
out
movsl
mov
sbb
lea
push
bnd
jle
cmp
cmp
mov
and
push
sbb
or
push
bound
mov
in
std
adcl
adc
and
fs
fisttpl
cmp
das
sub
push
jle
mov
insb
cmp
out
xor
xor
sbb
pop
or
scas
notb
mov
or
cmp
mov
inc
cmp
fadds
shr
push
xchg
jns
push
fnstcw
mov
sub
mov
test
scas
shrb
lcall
clc
cld
mov
addb
pop
jle
pop
insl
cmpps
test
fldl
call
sub
dec
xchg
subl
push
int3
dec
jmp
mov
pop
sbb
pop
stos
xchg
sub
pop
push
or
jae
push
jmp
add
icebp
out
stc
aaa
mov
outsl
jecxz
loop
lds
call
push
push
fwait
cltd
xchg
loop
mov
dec
and
mov
mov
push
mov
aaa
dec
adc
fs
mov
push
stc
call
data16
xchg
pop
sub
in
jo
pop
push
push
push
jl
out
popa
sub
stos
pop
jmp
sub
or
out
or
mov
das
push
inc
add
jmp
sbb
scas
movsb
popa
add
sbb
dec
movsl
push
call
mov
jo
test
movsb
push
mov
push
jge
or
xor
out
dec
or
sti
xchg
stc
mov
js
cmpl
in
pop
push
lea
push
sbb
lret
int3
leave
sbb
lds
add
je
hlt
cwtl
jno
dec
in
pop
mov
int
add
push
call
loope
add
sub
in
push
cli
mov
jmp
call
negl
sti
push
mov
cld
aas
or
add
shl
inc
fs
adc
pop
imul
add
popa
jne
das
add
adc
repnz
mov
xlat
dec
jg
inc
hlt
call
jecxz
sub
aad
inc
push
or
sub
dec
fwait
mov
xchg
xor
inc
adc
mov
stc
int
in
xchg
fimull
xchg
negl
inc
pop
mov
sbb
pop
cmp
cmp
push
mov
fnstcw
mov
or
cmpsb
push
mov
cmc
imul
or
jbe
push
sub
lret
insl
jne
adc
loopne
mov
xchg
push
push
push
stos
fnstsw
sub
push
fistpl
adc
mov
pop
mov
push
sub
lock
mov
inc
in
mov
or
adc
xchg
stc
ret
xor
out
jbe
pop
into
daa
call
insb
adc
cld
jo
mov
ljmp
xchg
lret
jp
xor
mov
and
push
testb
jge
xchg
jns
sub
adc
adc
inc
cwtl
jbe
adc
aam
dec
mov
cs
and
pop
or
sbb
or
xchg
hlt
jecxz
mov
les
popa
dec
sub
out
pop
ret
fimuls
inc
cs
push
jb
mov
pop
or
pop
lods
mov
cwtl
or
iret
sub
push
fsts
out
mov
jo
sti
lods
pop
cli
stos
add
add
jmp
xchg
test
push
subb
das
nop
mov
addb
dec
lret
xor
xor
ljmp
or
jl
sub
inc
push
addr16
cwtl
and
inc
adc
clc
push
push
icebp
sbb
mov
xchg
fwait
lahf
into
ds
jne
scas
sub
out
pop
adc
sub
jl
cwtl
push
loopne
xchg
ja
mov
push
imul
sbb
push
repnz
fmull
cs
and
mov
addr16
xor
imull
inc
pusha
subb
les
xchg
inc
lea
sub
ja
sub
sub
decl
mov
out
jmp
testb
repnz
sbb
repnz
jns
pusha
adc
adc
jno
push
xchg
cmp
dec
insb
popf
jne
mov
pop
dec
mov
out
inc
push
or
loope
or
iret
arpl
test
movsl
jp
push
mov
fwait
xor
insl
pop
add
pop
pop
xchg
inc
mov
andb
mov
push
mov
inc
test
adc
movb
adc
cs
push
push
or
xor
call
and
mov
mov
inc
inc
lods
jmp
mov
mov
xchg
ja
push
ljmp
out
push
lock
sub
jno
dec
jecxz
pop
add
mov
das
mov
xor
xchg
loope
push
mov
mov
scas
cmp
xorl
fwait
push
ret
cmp
js
push
mov
add
mov
pop
lods
inc
call
icebp
or
sbb
sbb
mov
xchg
jbe
fdivrl
dec
ret
lock
int
dec
cmp
mov
pop
or
call
add
mov
sbb
mov
or
movsl
or
mov
test
lock
xchg
movsb
out
clc
lock
xor
or
test
mov
mov
pop
imul
push
ds
popf
icebp
push
mov
and
dec
and
mov
in
push
ja
jmp
pop
jge
mov
jl
mov
popf
xchg
jb
or
cld
mov
jae
sbb
es
int
cwtl
adc
jg
sub
jns
xorl
scas
pop
adc
rep
xor
dec
inc
sbb
jnp
scas
xchg
add
sub
mov
inc
loop
xor
cmp
arpl
loop
fcoml
xchg
push
dec
fdivrs
cltd
ja
jo
jge
aaa
inc
lahf
clc
testb
dec
xchg
sarl
test
nop
cmp
or
dec
or
push
push
sub
mov
outsb
or
cmp
xchg
inc
repnz
push
or
loope
push
sbb
lea
pop
push
adc
pop
push
mov
daa
push
mov
dec
loope
xchg
je
hlt
cli
mov
pop
cltd
dec
inc
hlt
push
inc
dec
lcall
arpl
push
jl
xchg
jb
inc
jne
icebp
nop
cmpsb
jge
outsb
jmp
inc
push
outsl
pop
shl
cld
push
pushf
scas
rorb
pop
mov
jle
mov
xchg
dec
push
sti
adc
xchg
adc
adc
mov
xor
jmp
mov
into
das
pop
lcall
icebp
adc
pop
mov
inc
mov
ret
cmp
mov
call
push
out
cwtl
clc
cmp
push
sub
mov
lods
ret
mov
jmp
sub
std
sub
ss
rcll
jmp
inc
movsl
int3
pop
hlt
pushf
or
adc
mov
popf
sbb
inc
repnz
add
loopne
in
imul
insl
xor
dec
or
sti
adc
insb
inc
icebp
dec
cwtl
pop
enter
jl
jmp
add
pop
insb
test
test
bound
pop
enter
adc
in
mov
cmpsl
adcl
inc
mov
sub
sbb
xchg
jmp
push
lods
pop
hlt
mov
add
add
push
mov
popa
clc
fmulp
aas
sbb
daa
das
push
pop
loop
aas
scas
cld
les
jmp
sbb
cmp
inc
pop
push
out
cli
mov
call
jns
shl
xorb
clc
shl
mov
sti
mov
cmp
out
xchg
movsl
sub
jmp
sub
push
lods
cmc
ljmp
xchg
mov
call
popa
out
lds
jmp
xchg
lods
or
fs
sbb
xlat
mov
jae
cmp
jb
mov
pop
outsl
adc
pop
fwait
int3
xchg
push
cmp
xor
mov
scas
mov
das
xor
sbbb
test
leave
xor
insb
into
pop
adc
pop
ljmp
xchg
repz
pop
push
ljmp
imul
push
je
lods
jle
bound
mov
and
inc
xor
mov
addb
or
enter
dec
jae
xor
mov
rclb
or
mov
adc
rcll
js
dec
cmpsb
dec
out
mov
and
outsl
add
lds
and
stos
lods
rorb
xchg
jg
les
push
test
mov
push
mov
scas
mov
push
das
test
dec
in
add
repnz
pop
jge
cmp
negl
mov
mov
lods
insl
hlt
jg
or
sahf
push
aam
push
mov
out
mov
cli
sub
in
mov
inc
out
cmp
cmc
cmp
pop
decl
pop
fldt
jmp
inc
dec
bnd
jae
mov
push
mov
mov
and
hlt
adcb
int
dec
xor
stos
mov
mov
aad
and
loope
xor
out
data16
xor
dec
iret
inc
xchg
adc
mulb
mov
das
icebp
push
ja
jae
imul
push
push
xchg
pop
xchg
jge
das
inc
lds
hlt
jb
xchg
je
xchg
test
repz
inc
fstpl
aam
inc
mov
ror
arpl
xchg
jmp
cmp
inc
hlt
push
dec
xchg
int3
hlt
adc
movsl
xor
mov
cs
push
push
sbb
mov
sub
xor
push
aad
popf
push
mov
mov
aam
push
adcb
inc
push
lahf
add
push
mov
repnz
mov
lret
sbb
xor
ret
and
push
cmp
push
adc
sbb
in
shll
movb
mov
jmp
sub
dec
sub
stc
out
or
mov
or
cld
idiv
jl
std
clc
xor
push
les
pop
stc
or
dec
clc
inc
js
fucomp
adc
daa
push
int3
sbbb
add
and
sbb
pop
and
inc
jmp
jl
rolb
jno
inc
ja
mov
repnz
cmc
insl
fs
dec
lea
arpl
out
pop
add
loop
fiadds
push
fisttpll
xchg
mov
out
std
jb
jmp
inc
call
jae
imul
jae
mov
js
icebp
jno
pop
cld
jb
fwait
push
jp
std
stos
in
push
push
test
mov
push
mov
repnz
push
jne
fs
pop
jb
add
lret
adc
ret
inc
hlt
sbb
jg
sub
cmove
xchg
fdivrp
enter
push
pop
inc
pop
cmp
lods
cmpsl
xor
rclb
add
subb
adc
dec
xchg
mov
addr16
push
xchg
jae
jo
or
fstpt
dec
push
adc
push
push
in
mov
jecxz
ret
xchg
mov
out
pop
popf
inc
lds
jno
call
push
cmc
push
iret
push
cmpsb
xor
mov
mov
ds
xchg
aaa
cld
mov
js
jne
lcall
and
pop
mov
pop
pop
sbb
cmp
jno
fsubs
sahf
lahf
pop
jecxz
inc
push
push
push
push
andb
dec
xlat
mov
addr16
call
pop
or
dec
xor
outsb
negb
push
dec
repnz
cmp
xor
push
xlat
xor
pop
xchg
and
adc
adc
ret
movsl
test
xorb
xchg
shl
sbbb
stos
stos
sub
pop
mov
adc
loop
xchg
or
call
stc
xchg
dec
repnz
jnp
leave
aas
movsl
xor
loop
sbb
data16
xchg
push
cwtl
ret
adc
adc
or
pop
psubusw
scas
push
les
ljmp
popf
or
dec
push
push
int3
ds
inc
mov
mov
test
int3
aas
jb
call
sti
jl
xchg
xchg
xor
jbe
test
inc
test
jmp
mov
repz
mov
icebp
dec
das
sub
jle
adc
xchg
popf
pop
vpshlq
daa
loope
push
fs
xchg
popf
aad
push
xchg
pop
pushf
push
cld
test
int
pop
repz
xor
into
sbb
repz
aaa
push
sbb
ljmp
lahf
or
sahf
push
cmpsb
mov
test
movsb
mov
push
icebp
ljmp
mov
and
or
gs
push
jno
pop
and
fbld
out
or
call
jno
repnz
idiv
xor
stos
notl
push
out
xor
addr16
jbe
gs
je
push
jmp
inc
adc
or
fldl
push
cltd
das
int3
outsb
pop
fs
xor
xor
xchg
js
repz
dec
cwtl
in
mov
jbe
mov
lds
fdivr
pop
dec
fnstenv
pop
xchg
sahf
pop
daa
int3
add
add
out
imul
test
adc
rcl
ss
push
xchg
in
adc
xchg
fnstenv
or
push
jbe
inc
rcll
mov
push
adc
jmp
aas
test
data16
jecxz
pop
movsl
aam
leave
jle
and
sbb
jmp
daa
clc
mov
dec
dec
xor
and
push
push
xlat
outsb
test
dec
pop
mov
cmpb
inc
or
cld
mov
mov
or
jmp
push
jmp
ljmp
fnstenv
jnp
stos
and
dec
xlat
fildl
add
cmovnp
jb
push
out
mov
out
int3
fwait
mov
add
mulb
loop
push
cli
mov
mov
shr
dec
fidivrl
inc
imul
sub
inc
ja
cmp
ljmp
cmp
push
jp
movsb
mov
add
flds
stos
jle
xchg
dec
or
daa
jmp
ret
ljmp
shl
dec
cmp
mov
jno
cli
mov
lea
sub
pop
icebp
push
jmp
aas
jno
xchg
cli
jno,pt
in
xchg
pop
imulb
data16
xor
aad
imul
jbe
daa
jns
lods
pop
iret
imul
out
in
jns
xor
insl
leave
inc
lahf
jnp
or
jb
test
or
or
stos
repnz
test
or
js
mov
mov
mov
sub
setp
and
pop
movsb
int3
xchg
adc
mov
orb
jg
jbe
sti
mov
push
mov
mov
stos
xchg
dec
jbe
dec
inc
xor
or
xchg
in
sub
pushl
sub
pop
push
stos
push
pop
jmp
or
sub
call
inc
rcl
ja
jne
pop
mov
shrl
xchg
xchg
insb
dec
in
mov
mov
cmp
cwtl
mov
decb
push
sbb
or
repz
mov
add
mov
in
xchg
dec
mov
jle
lret
sbb
mov
test
lea
inc
shl
xlat
adc
sbb
jmp
inc
pop
dec
nop
xchg
pop
or
out
fs
sub
popa
bound
dec
movsl
cmpsl
or
pushf
xorl
or
hlt
gs
or
inc
rorb
jge
pop
pop
repnz
push
mov
xchg
ds
lods
pop
cli
fldl
int3
or
push
nop
xchg
push
rcrl
inc
add
inc
or
lds
stos
adc
sub
lock
sbb
xchg
dec
aaa
test
gs
lret
sub
int3
push
inc
xchg
or
call
mov
inc
stc
push
shr
xchg
aaa
cld
jae
out
mov
sbb
sbb
lcall
fldt
popf
aad
lret
outsl
dec
testb
or
cli
mov
rclb
inc
in
mov
jo
and
or
push
add
data16
subl
andb
or
loope
sbb
push
add
aad
mov
ss
insl
or
fldcw
lea
cmpsl
bound
or
lds
jo
popa
sub
shrl
cld
dec
and
xor
push
cs
xchg
xchg
push
mov
jecxz
lahf
mov
ljmp
mov
xor
pop
cmp
mov
mov
sbb
popf
mov
cmp
ss
adc
into
call
mov
dec
and
mov
sub
cmpsb
inc
fwait
lret
std
jge
test
pusha
xchg
and
mov
fidivl
call
adc
inc
jge
stc
inc
mov
pushf
or
fnsave
stos
les
lea
inc
pop
repnz
popa
or
lock
sub
subb
jp
mov
inc
out
cmpsb
dec
rolb
call
test
ror
or
jmp
adc
add
add
mov
jne
jbe
stos
xor
xchg
mov
insb
cli
mov
daa
push
and
shl
cli
push
pop
mov
mov
sahf
and
mov
cmp
adc
jbe
lahf
xchg
jns
sub
and
lea
stos
xor
or
loopne
mov
adc
inc
cmp
xchg
push
sbb
cmp
jmp
daa
mov
adc
xchg
jp
mov
jp
rcll
icebp
outsb
addb
jecxz
mov
addb
mov
mov
push
ja
xlat
bswap
inc
mov
xchg
lret
adc
dec
pop
pop
in
lret
std
or
mov
pop
lret
sbb
and
xchg
or
xorl
push
out
cmpsb
pop
inc
pop
out
or
pusha
and
jb
arpl
pop
scas
daa
negl
ljmp
imull
cmp
hlt
add
dec
cmc
out
sub
cltd
add
test
sub
adc
and
mov
lock
push
loop
and
inc
lods
nop
lock
pop
adc
repnz
mov
stos
cmp
stos
aad
lock
icebp
cmp
fstpt
mov
add
jmp
push
push
sti
pusha
cmpb
pop
mov
and
sar
bound
add
fdivrp
shl
ja
dec
mov
scas
or
push
andb
adc
int3
pushf
xor
xlat
adc
test
push
adc
cmp
or
call
mov
pop
cmp
sti
mov
loopne
xor
testl
jo
lret
mov
arpl
loope
scas
outsb
test
in
lret
test
mov
mov
pop
jmp
shrl
imul
xchg
clc
or
stos
xchg
jno
sub
xchg
or
jns
adc
push
mov
out
out
dec
inc
mov
push
mov
xchg
mov
mov
insb
cmp
fistl
out
pop
mov
stos
or
push
mov
stos
fmuls
lret
lock
pop
or
std
repnz
arpl
aam
sub
mov
cmp
mov
inc
fsubrl
lret
lret
sbb
add
xchg
dec
jmp
xor
mov
pop
repz
rorb
sbbb
cmpsb
lds
sub
sub
mov
add
xor
cmp
or
add
push
int
pop
leave
int3
div
pop
inc
push
daa
mov
icebp
lcall
in
sub
cli
or
adc
mov
cld
repz
mov
loopne
inc
push
in
cli
aaa
mov
jl
adc
testl
out
push
xor
cmp
clc
adc
or
cmp
mov
mov
mov
sahf
sbb
jns
insl
jne
mov
gs
and
sbb
ds
add
or
and
mov
dec
xor
icebp
int
and
sbb
imul
outsl
mov
orb
mov
test
dec
hlt
sub
or
hlt
std
lea
mov
cmp
cld
inc
pop
xchg
add
mov
push
dec
fisubs
pop
rclb
js
dec
cld
or
fmuls
data16
in
pop
fwait
add
stos
sbb
sti
sub
push
adc
das
pop
inc
movsl
loop
pop
jmp
dec
mov
ss
test
cs
or
int3
jb
fwait
test
xchg
push
lods
sti
pop
test
dec
scas
cmc
in
incb
std
dec
mov
xor
fwait
inc
cmc
inc
xor
test
imul
mov
jb
inc
lret
icebp
mov
iret
adc
ret
or
repnz
mov
in
jo
pop
xchg
ljmp
outsb
sbb
xor
aad
scas
in
xchg
test
jo
push
sbb
iret
mov
lret
xor
sbb
push
repnz
mov
or
cs
icebp
out
pop
pop
mov
add
mov
and
inc
aam
sub
inc
cmpsl
mov
in
jle
sub
fldl
ljmp
or
cmp
lds
mov
mov
je
loop
push
stos
or
add
sarb
jnp
sub
imul
or
stos
mov
xchg
push
add
jmp
jns
or
test
test
pop
xchg
mov
dec
dec
icebp
neg
in
push
jb,pn
cmp
xor
jno
xor
notl
pop
pop
aas
push
call
icebp
adc
daa
add
or
lcall
jmp
cmpsb
leave
js
stos
jmp
pop
fstp
jle
cmc
int3
cld
or
jg
mov
sahf
ret
pop
mov
pushf
leave
inc
and
jb
data16
xchg
xlat
insl
and
inc
mov
sbb
das
loop
push
jmpw
popf
jne
adc
mov
scas
fnstenv
cmp
xchg
xchg
ljmp
divl
rorl
push
cmpsb
fiadds
fsubs
call
xor
dec
fdivr
adc
es
lods
icebp
sbb
insl
xlat
movsl
imul
scas
movsb
or
xor
sahf
xor
push
cmpl
lea
loop
call
or
ja
decb
insb
mov
je
outsb
stos
test
push
jo
sahf
cmp
call
aam
xchg
cmpsl
jecxz
sub
adc
call
outsb
jo
test
pop
mov
pushl
mov
push
scas
mov
lret
out
push
push
xchg
or
and
fs
bound
test
jl
dec
and
xlat
push
movsb
sub
test
lret
das
out
testl
je
sub
jmp
subl
or
push
jmp
imul
leave
dec
and
in
jb
ret
push
mov
push
push
and
and
pop
xchg
sbb
mov
outsl
notb
mov
in
scas
mov
mov
pop
out
fwait
cmpsl
mov
push
imull
and
call
push
pop
ss
xchg
ret
pushf
es
and
out
fmull
arpl
mov
cmp
pop
in
mov
fiadds
inc
sub
adc
add
ljmp
call
jmp
push
push
insl
loopne
daa
psubw
pushf
push
dec
repnz
ljmp
icebp
mov
out
cmp
xchg
push
sbb
sahf
push
push
jmp
ja
cmpsl
fs
pop
inc
call
lret
pop
or
cmp
sbb
ret
mov
mov
pop
fldl
cmc
icebp
push
pop
pusha
xchg
mov
mov
dec
inc
mov
pop
outsb
jb
add
add
mov
test
add
sub
ja
fwait
das
insb
fcoms
out
and
es
std
xchg
push
adc
xchg
lret
xchg
mov
sarb
xlat
add
xor
adc
dec
dec
int
icebp
mov
pushf
ret
stc
repz
mov
mov
mov
aad
fisubrs
and
cmp
or
call
aaa
popf
testl
pop
subb
xchg
jmp
imul
call
out
jle
mov
jmp
call
mov
inc
mov
fnstsw
cmp
jo
cltd
mov
jnp
into
cmpsb
mov
stc
negl
out
cld
mov
mov
fs
sub
inc
mov
dec
aam
fwait
stos
scas
dec
inc
mov
mov
imulb
mov
cmpl
sti
dec
lds
repnz
movsl
in
mov
rcrb
repnz
out
jne
and
aam
dec
cld
xchg
into
fucomp
xor
push
call
jnp
or
inc
ffreep
add
and
inc
xchg
mov
inc
in
sbb
jb
test
xor
sarl
clc
mov
inc
std
xor
decl
ret
out
xor
popl
aas
popf
push
dec
mov
push
aam
xchg
sub
repz
or
out
sti
sbb
jg
xchg
push
std
stc
loop
xor
je
sub
inc
ret
shlb
dec
mov
mov
mov
mov
push
push
cltd
push
in
dec
sbb
mov
ds
jne
pop
jge
or
imul
mov
out
scas
or
mov
int3
jecxz
or
sti
dec
out
adc
aas
adc
mov
or
pop
sub
adc
pop
xor
hlt
addr16
jp
sbbl
lods
sub
fstl
movsl
push
jl
xorb
aaa
jl
xchg
inc
inc
sahf
pop
popf
pop
andl
dec
nop
or
mov
pop
mov
mov
xchg
jne
leave
inc
mov
pop
pop
push
mov
sti
mov
cli
push
sti
jo
sbb
push
shrl
lea
les
mov
mov
es
icebp
and
inc
xor
sub
inc
pop
loopne
xchg
jmp
push
je
adcb
call
xchg
ja
push
je
push
push
adc
or
clc
mov
stos
out
mov
push
xor
fsubrp
pop
mov
lds
push
arpl
inc
test
pop
jmp
ljmp
sub
sbb
push
sub
push
push
repz
jmp
ret
ds
mov
push
fiaddl
cmp
push
push
mov
mov
testl
and
sbb
lea
mov
cld
cmp
ljmp
push
cwtl
js
add
mov
push
dec
dec
sbb
fs
std
or
fcomp
stos
clc
and
jno
add
sbb
jmp
xchg
mov
pop
xchg
xlat
in
sub
cmp
lahf
cmpl
sub
mov
sti
das
sub
add
icebp
inc
mov
rorl
fcomps
ljmp
push
repz
adc
out
rcrb
lods
mov
test
enter
repnz
out
dec
fmull
enter
inc
xor
out
sub
inc
jmp
and
xchg
push
sbb
xchg
mov
pusha
imul
das
cli
inc
xchg
andb
call
out
leave
mov
pusha
call
pop
mov
mov
iret
mov
enter
dec
mov
loopne
mov
into
mov
pop
insb
cmp
add
cwtl
adc
and
pop
rcrb
adc
insb
notb
inc
mov
mov
jnp
dec
icebp
or
lret
dec
or
negl
movsl
pop
sub
notl
jge
lods
js
and
dec
adc
popf
pop
mov
xor
and
inc
pop
jmp
mov
in
andb
inc
pop
inc
mov
rdtsc
out
leave
inc
mov
fistps
jns
cmp
je
sub
push
mov
mov
dec
lret
xchg
adc
dec
int
rcrl
mov
cltd
jmp
mov
add
mov
testl
xor
or
ja
pop
add
jb
loopne
icebp
call
push
pop
cmp
sub
inc
add
in
daa
or
xchg
inc
mov
xchg
jbe
pop
out
icebp
imul
mov
test
dec
fstl
js
cmpsl
sub
sbb
mov
icebp
push
xchg
cmp
fdivs
inc
dec
pop
sub
mov
cmc
sti
nop
jo
int3
pop
test
xor
adcb
jae
aam
fsts
repnz
mov
ja
cltd
jno
jp
repz
mov
fcompl
xor
leave
cld
int
in
out
gs
dec
nop
adc
cmc
mov
gs
cltd
loop
scas
push
das
das
nop
mov
popa
mov
lret
mov
ds
insb
fists
xchg
movsl
add
jae
out
jb
xchg
int
inc
and
jmp
sub
sbb
mov
jns
pop
punpckhbw
jo
loope
mov
nop
test
lret
inc
adc
inc
sahf
mov
stos
jo
pop
sar
mov
pop
pop
add
sbbl
pop
xlat
inc
movb
pusha
and
cmpsl
push
mov
push
push
aas
or
jmp
and
enter
enter
ja
popw
push
cltd
lods
movsb
inc
jb
push
xchg
push
out
xor
mov
cwtl
test
inc
rcrl
jno
loopne
sub
xor
add
enter
add
jge
pop
loope
xor
sub
stos
negl
movsl
stos
lahf
int3
fistpll
sub
sub
mov
and
stos
adc
add
mov
xchg
mov
std
xchg
outsl
xor
jae
stc
xchg
pop
xchg
cltd
add
inc
jmp
xlat
dec
jno
movsb
sti
push
ljmp
sub
hlt
out
shrb
xchg
pop
fwait
dec
mov
adc
or
jg
push
int3
fsubrp
outsb
les
fdivrl
inc
fldenv
fistps
add
cld
clc
mov
jne
add
push
ret
cltd
add
mov
cmpsl
inc
in
dec
cwtl
cmp
ror
and
or
lock
pusha
and
ret
outsl
les
pop
lcall
xchg
jne
sub
loope
stc
cs
sub
xor
mov
dec
insl
lods
clc
jmp
and
test
repz
inc
in
inc
and
lret
mov
arpl
movsl
inc
cmp
pop
add
inc
sub
fwait
test
imul
xor
sub
cmp
add
push
notb
in
ljmp
pop
inc
and
cltd
xchg
fcmovbe
nop
and
xchg
mov
cwtl
cmc
repnz
push
fsubrl
mov
mov
cmpsl
andb
xor
sub
dec
xchg
fldt
fcmove
shlb
jb
pop
pop
add
movsl
or
pop
mov
push
add
in
or
sahf
repnz
inc
notb
inc
mov
push
call
cltd
and
mov
dec
dec
push
xchg
push
sbb
or
mov
adc
push
mov
mov
cmpsl
clc
push
cwtl
lcall
les
call
stos
add
push
sbb
mov
icebp
cwtl
test
jbe
pop
cmp
dec
adc
sarb
mov
in
repnz
imul
lods
nop
decb
pop
xchg
pop
mov
mov
push
lret
bnd
xor
xlat
nop
cmp
in
push
cltd
mov
mov
gs
ds
jno,pn
outsl
or
lahf
mov
push
sub
jo
shl
movsb
fstpt
or
repnz
jmp
add
pop
popa
mov
enter
clc
imull
stc
daa
call
leave
sub
call
xchg
in
cmp
pop
rolb
decb
lcall
xor
cmp
idivl
dec
push
pop
jmp
xchg
ret
cmp
call
in
dec
xchg
xlat
jnp
sbb
pop
imul
cmp
add
mov
jnp
stc
or
sub
sbb
pop
adc
daa
fsubl
test
je
jle
cld
jmp
out
lds
mov
je
push
cmpsl
jae
test
fistps
adc
or
or
inc
stos
lret
push
xchg
insb
call
adc
xlat
movsl
dec
add
call
popf
cld
stos
mov
xor
xchg
insb
ljmp
hlt
orb
mov
inc
push
aaa
adcb
std
mov
gs
imull
xchg
xchg
addr16
mov
aas
jne
ret
inc
xchg
jo
mov
push
shll
subb
push
adc
pop
cli
aaa
mov
or
mov
call
xor
mov
outsb
pop
jecxz
fiaddl
add
jne
lods
and
pop
clc
jnp
jae
fistpl
aad
jbe
imul
xchg
jns
add
xchg
jae
adc
push
adc
mulb
mov
movsb
test
push
sbb
mov
dec
call
pop
dec
fistpl
push
out
mov
mov
push
xchg
mov
pop
jle
frndint
shl
xchg
cmp
stos
fldenv
xor
mov
xchg
or
shll
xor
push
lods
jb
mov
ja
adc
pop
ss
or
mov
scas
daa
inc
xor
pop
andb
jae
pop
xchg
cmp
mov
fdivr
adc
loope
ds
push
and
int
cmpsb
push
scas
hlt
inc
int
push
inc
or
jp
cmc
sub
xchg
fidivs
add
lret
enterw
jns
jo
loope
test
andb
mov
mov
mov
push
mov
mov
sub
dec
mov
insb
add
mov
jns
push
jle
jb
in
lcall
scas
mov
sbb
sahf
pop
sbb
add
mov
cmp
out
mov
js
mov
cltd
push
cmc
jns
shlb
das
les
mov
divps
jno
xor
xor
mov
push
push
outsb
sub
mov
xchg
sub
jmp
mov
xlat
cmp
push
pop
jge
sbb
mov
push
lret
or
aaa
and
call
sti
xor
aad
push
inc
xor
ds
test
or
mov
fdivrl
imul
add
test
or
jmp
cmp
sahf
or
push
nop
dec
add
sub
enter
call
xorb
out
xorb
lods
or
pop
adc
in
ja
push
xor
jmp
mov
ljmp
push
clc
xor
rcll
shlb
or
shl
cmp
shrl
sbb
adc
adc
popa
lods
jmp
inc
pop
cmp
testl
add
push
stos
test
mov
mov
mov
and
jl
jnp
or
aam
mov
pop
mov
cmc
adc
dec
mov
aam
lods
loope
sahf
jp
xor
sub
fsubr
loop
js
cmp
xchg
popf
out
xorl
fcoms
call
mov
out
andl
sbb
imul
pop
push
lret
pop
inc
stos
enter
xor
pop
xchg
pop
add
xchg
sub
addr16
int
idivl
out
mov
test
mov
loopne
mov
rcll
cmp
adc
and
pop
inc
mov
adc
push
ds
insl
add
fistpl
mov
cld
maxps
jp
int3
pop
cmp
in
and
inc
mov
add
inc
jmp
add
sub
dec
sti
sbb
pop
xor
mov
icebp
push
repnz
aam
push
cld
push
inc
inc
mov
inc
hlt
ss
jp
call
mov
jecxz
bound
add
mov
xchg
notl
push
jmp
pop
jmp
addr16
jl
mov
cld
aad
insb
nop
or
jmp
in
out
sbb
push
outsb
push
pop
push
nop
and
mov
mov
push
push
fucomp
adc
push
jns
sub
popa
xor
jp
cmp
dec
mov
mov
cmp
lahf
cmc
mov
push
jge
sbb
enter
inc
mov
jg
lods
or
inc
mov
call
pop
stos
adc
push
xor
sub
sbb
test
push
push
clc
fwait
xchg
rorb
idivb
dec
mov
xor
and
jmp
dec
ret
inc
cmpsl
adc
push
into
mov
dec
cli
xor
inc
dec
mov
pop
sti
mov
iret
divl
shll
dec
int3
add
cwtl
mov
mov
les
pop
and
mov
repnz
xchg
dec
test
mov
ja
jnp
push
add
popa
xor
sbb
sbb
add
push
loopne
pop
cmp
pop
add
jo
sar
sub
repnz
insb
xchg
or
cwtl
bnd
jbe
arpl
std
and
es
loope
or
negl
or
cmp
pop
ljmp
add
es
insl
cltd
dec
and
jo
jmp
outsl
xor
movsb
inc
xchg
sbb
lea
and
fwait
rcrb
jnp
jo
and
stos
sbbb
mov
addr16
mov
lahf
test
in
push
test
jb
rclb
jne
hlt
bound
inc
xchg
push
add
in
mov
pop
jmp
enter
add
xlat
daa
notb
jo
lcall
mov
movsb
xor
mov
mov
ljmp
xchg
rclb
dec
shlb
pop
rclb
jo
sub
idivl
mov
rcrb
and
bound
insb
mov
pop
outsb
xchg
pusha
mov
aad
das
test
mov
sub
jo
loope
es
pusha
out
mov
mov
jb
sti
push
pop
push
add
rolb
mov
call
add
pop
sahf
jmp
pop
xchg
rcr
enter
dec
sti
xor
dec
push
aad
xchg
mov
sbb
aas
mov
jns
or
ret
pop
cmc
dec
push
ljmp
push
ja
push
xor
in
negl
jmp
hlt
dec
lret
add
loopne
mov
and
mov
ja
dec
xchg
inc
xor
push
add
push
pop
das
add
cmp
ret
mov
cmp
cmp
push
fdivrp
push
ljmp
push
xchg
jae
mov
pop
lods
lods
leave
js
push
mov
sbb
sahf
or
or
push
mov
sbb
or
test
push
imul
js
sub
pushf
test
cli
mov
jno
sbbb
es
push
cmp
imul
test
sbb
lds
pop
jp
addr16
or
daa
loopne
loope
aam
mov
mov
jbe
addl
cltd
push
mov
inc
popf
mov
inc
cmp
pop
add
xor
outsb
test
mov
jmp
mov
inc
push
test
jp
dec
mov
je
scas
icebp
stc
and
mov
sub
out
pusha
or
imul
movsl
dec
in
dec
clc
jo
ja
mov
cmp
xchg
push
inc
mov
inc
int3
jl
mov
pushf
mov
cmc
rcrl
xor
jb
and
push
mov
rcll
or
add
ljmp
jo
fs
and
sbb
adc
sub
inc
cld
notl
cltd
fsubrl
pop
dec
inc
enter
les
dec
hlt
fwait
outsb
pop
inc
fldt
and
pop
movsb
and
push
sbb
daa
cmp
popa
mov
call
push
push
inc
cmp
push
pushf
ret
xchg
mov
ret
test
insl
shll
lahf
cmp
dec
pushf
xor
add
xchg
sbb
jl
sub
fcomps
mov
call
fxch
push
mov
or
scas
pop
push
nop
stos
cli
ss
cmp
xor
inc
icebp
mov
pop
mov
lret
jl
xchg
les
lea
call
xor
xchg
or
jg
jnp
imull
lahf
loopne
cs
xchg
addr16
test
jae
fdivl
inc
cmp
dec
pop
pop
adc
test
mov
xchg
push
fistpll
mov
dec
insb
repnz
pop
jne
dec
dec
mov
pop
out
les
add
call
inc
imul
jg
push
cmp
push
scas
ja
mov
mov
call
test
jno
xor
popa
in
pushf
cmp
js
push
mov
mov
cmp
mov
mov
scas
stc
je
jo
xor
ja
mov
pop
mov
cmc
lcall
js
daa
loop
out
push
pop
ss
mov
int3
test
loop
cmp
mov
outsb
mov
in
xchg
jb
cmc
jecxz
in
daa
cmpsl
adc
mov
add
push
sub
cwtl
mov
nop
aam
jmp
and
out
rcrl
sub
or
stos
xchg
in
test
aaa
fwait
mov
je
mov
inc
icebp
jmp
sbb
insb
das
xchg
cld
insb
jb
imul
jns
daa
push
sbb
push
pop
imulb
repnz
sub
hlt
push
xor
cmpsb
leave
xchg
pop
sub
daa
mov
xor
pop
addb
shrl
ljmp
pop
test
test
sub
jmp
daa
xor
orb
js
cli
pop
inc
dec
aam
sub
rorl
popf
xor
mov
push
mov
jmp
sbb
push
jle
lcall
lock
dec
push
mov
lds
mov
dec
repz
xor
lcall
dec
adc
push
cli
jmp
and
repz
cmc
test
xor
dec
imulb
xchg
shll
movsb
inc
andb
int3
sub
add
push
xchg
sub
int3
call
inc
ja
pushf
ds
push
inc
jmp
inc
sbb
popf
mov
es
fwait
xor
mov
into
xor
cwtl
pusha
and
mov
test
cmp
and
pop
inc
jo
inc
cld
sti
ds
mov
test
loopne
dec
mov
push
cmp
cltd
bound
loopne
add
mov
mov
mov
or
xor
or
lahf
outsl
test
inc
push
ffreep
mov
inc
sub
stc
sbb
repz
jnp
cmpsl
stos
inc
sti
inc
cmp
push
dec
insb
xlat
jb
ljmp
adc
out
add
jp
add
cli
and
repz
sti
in
mov
in
xchg
out
fistpl
in
repnz
mov
cmp
pop
xor
into
sti
mov
sbbb
mov
les
sbb
or
call
insb
lea
movsl
mov
jg
mov
movsb
and
pop
test
pop
cwtl
xchg
mov
sub
mov
das
cwtl
xchg
inc
pop
addl
mov
mov
aam
or
cmp
xchg
call
lret
pop
mov
mov
sbb
mov
mov
inc
flds
es
inc
jae
mov
movsl
pop
bound
add
xchg
mov
fistpll
mov
adc
call
subb
stc
je
sub
cmp
sahf
andl
mov
mov
sub
mov
lock
or
fistl
inc
sub
cmpsl
ret
andb
xchg
cli
jge
jmp
stos
sub
je
inc
cmpsl
repz
xchg
cmc
mov
xchg
add
or
cmpsb
cltd
push
dec
nop
mull
stc
inc
push
in
fwait
push
call
mov
je
mov
and
mov
divb
mov
pop
sbb
pop
push
sbb
mov
pop
cmp
sbb
adc
dec
in
xchg
pop
pop
aad
or
pop
cmpsl
xchg
lods
cwtl
hlt
cmpsb
jl
imul
call
mov
mov
jmp
mov
test
xor
dec
lock
mov
mov
add
sti
mov
bswap
jbe
xor
add
icebp
enter
dec
insl
xor
adc
jl
adcb
mov
cmp
pop
stos
and
lea
pushl
pop
stc
push
push
add
mov
call
xchg
pop
das
sar
cmp
movsl
inc
imul
or
mov
hlt
cmp
push
dec
arpl
or
outsb
or
loope
scas
jg
out
sub
jle
xchg
adc
loop
push
clc
cmpsb
sub
jmp
sub
mov
jmp
sub
xchg
pop
inc
sbb
or
ret
inc
cwtl
mov
mov
outsb
rol
and
fwait
scas
lods
push
sub
adc
pop
push
xchg
add
cmp
lcall
xchg
jnp
mov
adc
imull
or
mov
mov
adcb
add
shr
pop
pop
popf
pop
sbbl
and
in
or
dec
in
push
std
add
lahf
hlt
mov
mov
pop
mov
fsubr
mov
int
inc
jge
or
iret
xor
popa
shll
xor
pop
jecxz
test
cli
insb
xor
popf
mov
fcomi
xchg
jmp
mov
jmp
cmp
dec
and
dec
repnz
mov
mov
dec
push
nop
xor
cmp
mov
cld
add
test
dec
in
lods
lea
roll
adcb
in
pop
mov
xchg
mov
xor
pop
mov
shrl
pmaddwd
fildl
mov
movsb
dec
pop
pop
mov
mov
push
daa
sarb
fimuls
mov
add
inc
mov
cmpsb
inc
and
adc
mov
sbb
leave
clc
fadds
popf
jae
cmp
scas
das
or
mov
cmp
fcoml
pop
pop
std
lret
mov
into
fsubrp
push
ss
cli
sub
adc
jmp
jle
push
push
call
aad
and
mov
sub
or
sub
mov
in
int3
cmc
xorl
xor
leave
ret
data16
sub
ljmp
call
icebp
int
gs
push
int
fcmovu
loopne
push
lret
pop
mov
pop
xchg
pop
jge
xchg
addr16
cmpsl
sub
inc
push
adc
xor
repz
lds
jmp
mov
jbe
mov
xchg
xor
add
cmp
loopne
fxch
mov
sbb
sbb
mov
push
xchg
or
dec
pusha
and
leave
cwtl
rcrb
into
xchg
sub
push
or
mov
sub
fwait
leave
popf
ficoms
jmp
and
jno
xor
pop
sbb
ja
shlb
mov
mov
int
push
pop
add
test
cmp
inc
lods
mov
mov
pop
outsb
icebp
mov
add
scas
cli
mov
adc
or
xchg
stc
es
xorb
inc
loop
push
jbe
cmp
fwait
jecxz
sbbb
ret
dec
or
pop
sbb
jge
lahf
push
xor
sbb
es
outsl
add
xor
add
imul
adc
pop
adc
inc
jno
stc
ffreep
bound
cmp
sbb
sbb
scas
mov
lret
xor
inc
testb
in
dec
add
and
xchg
mov
jae
aad
push
push
out
push
leave
pop
xor
rcl
call
cmpsb
outsl
adc
cwtl
outsb
mov
pusha
iret
sbbl
hlt
jg
xchg
add
sbb
aad
cbtw
imul
ds
push
aad
daa
je
lret
inc
movsb
fcomps
xchg
daa
mov
popa
xchg
and
cmpsb
pop
lcall
or
cmp
loop
adcl
arpl
xor
or
inc
pop
pop
xchg
stos
test
push
sub
add
mov
repnz
lods
mov
loope
push
fsubrs
aad
mov
pop
add
lea
scas
sbb
pop
or
nopl
repnz
dec
xchg
and
dec
cmp
scas
push
push
out
ret
push
push
inc
mov
jmp
in
iret
dec
mov
and
sub
sbb
inc
push
mov
jb
fwait
je
sub
call
jae
arpl
das
pop
cmpsl
or
daa
ljmp
mov
sbb
cltd
jl
cmc
rcr
sarl
aad
pop
into
je
xor
mov
insl
rcll
mov
js
and
jbe
xor
jmp
scas
sub
nop
insl
cmp
jecxz
nop
aad
push
mov
in
inc
mov
push
imul
in
xchg
add
inc
dec
or
xchg
aad
mov
orb
jmp
pushf
insl
mov
int
les
and
push
push
jmp
xor
out
outsb
sbb
xchg
mov
and
into
sahf
fists
jbe
in
dec
mov
jge
add
sar
xchg
jne
dec
cmpsb
and
pop
or
push
cmpsb
into
inc
jg
pop
in
cwtl
lods
jno
inc
call
adc
inc
outsb
xchg
adc
jmp
shll
ja
scas
cmpsl
sub
pop
adcb
or
cmp
cmp
pop
xlat
or
sub
sbb
mov
flds
push
pop
adc
lahf
pop
sub
in
stc
cmpsl
add
inc
jb
push
cmp
mov
lods
inc
jae
mov
stos
rorl
sbb
xchg
pop
cwtl
mov
out
sub
out
mov
mov
lds
dec
dec
add
stc
sbb
nop
dec
sub
mov
std
dec
aas
mov
jmp
les
push
je
ljmp
mov
psrld
sti
addl
out
xchg
ret
cltd
xchg
inc
xchg
out
or
inc
fdivs
fucomip
sub
mov
enter
xorb
mov
sbb
xlat
das
push
cmp
pop
clc
pop
lods
lcall
sahf
inc
icebp
shlb
std
int
shrb
jmp
xor
sti
and
loopne
pop
sub
lcall
sbb
test
ss
dec
inc
mov
cmc
jmp
ja
cmc
push
pop
sbb
sbb
sub
xor
js
inc
aad
iret
test
lods
mov
inc
mov
jmp
ret
pop
jmp
les
cmpsl
mov
out
mov
insb
mov
sbb
pop
push
mov
push
add
jne
pcmpeqb
and
dec
sbb
shlb
ss
cmc
cwtl
popf
inc
addr16
in
addb
add
dec
or
mov
fcoml
lea
movsl
cld
iret
nop
in
xor
xor
mov
cmp
ret
cmpsb
loopne
movsb
cmp
rorb
lods
dec
add
mov
sub
push
xor
or
enter
mov
and
xchg
jo
jnp
loope
push
jmp
sub
jmp
pop
insb
sbb
call
je
jno
add
jno
mov
jecxz
dec
scas
mov
inc
outsb
cmc
scas
push
inc
cmp
xchg
sti
mull
sbb
or
stc
inc
out
out
ds
scas
int
cmc
cmp
inc
sbb
cltd
xorl
sbb
pop
pop
outsb
inc
jmp
jo
adc
lahf
aaa
shl
and
and
mov
out
push
in
sub
aas
push
outsl
pop
xor
dec
lahf
mov
add
and
rolb
sti
orb
cmpsl
jb
push
fiaddl
mov
stc
test
pop
cmp
mov
jp
or
mov
pop
cmp
movb
add
cmpb
mov
xor
cwtl
sub
xchg
mov
mov
jns
aam
push
call
adc
test
rorl
xchg
cmp
and
jmp
or
call
or
mov
add
xchg
xchg
outsl
icebp
xlat
sbb
call
shl
pop
je
lods
mov
test
in
test
mov
sub
out
xor
popa
mov
das
jmp
imul
enter
push
enter
xchg
mov
mov
sbb
jg
pop
clc
sbb
xor
testl
pusha
inc
js
inc
mov
icebp
inc
push
adc
jl
iret
movsl
stc
ljmp
cli
jge
lock
pop
xchg
test
jmp
xor
loopne
inc
sti
xor
dec
test
aaa
jmp
sbbl
jns
test
inc
out
add
inc
rorb
mov
mov
fsubp
enter
push
mov
outsl
or
pop
dec
and
adc
mov
movsl
push
mov
inc
xchg
or
lods
mov
mov
movsl
push
jns
add
and
or
adc
popf
xchg
movsb
dec
xchg
fisttpll
jo
mov
les
pop
jne
push
lret
stos
push
sbb
push
xor
in
mov
mov
iret
je
jns
xchg
or
or
imul
ret
lret
add
lcall
pop
jmp
hlt
fucom
sti
jae
rcl
popf
cmp
add
xor
out
jns
xor
push
pop
call
in
sub
lret
pushf
or
fimuls
inc
in
cltd
mov
mov
out
or
xchg
in
mov
pushl
wbinvd
stos
adc
cmc
sbb
cld
or
pop
jne
in
jmp
sub
shll
cs
jmp
inc
mov
test
dec
mov
or
nop
inc
stos
mov
cmpb
xchg
mov
fdivs
mov
sub
xchg
pushl
daa
ja
int
mov
or
sarb
addr16
enter
add
xor
ljmp
mov
inc
xor
ja
push
mov
jb
mov
mov
sub
test
mov
xchg
mov
push
fists
jbe
loop
mov
std
fdivrp
mov
mov
insl
xchg
adc
add
mov
pop
or
pop
test
stc
loope
sub
dec
and
mov
fwait
lock
xlat
gs
jb
jmp
out
pop
pusha
add
imul
xchg
movsl
out
cmc
shll
rcr
sbb
cmp
subb
dec
jle
in
fdivr
and
bound
cmp
sbb
rorb
notl
jo
jbe
shlb
dec
mov
inc
add
mov
movsl
or
lret
adc
adc
and
pusha
push
call
and
fisubrl
lret
insb
shrl
std
cmp
outsb
mov
xchg
scas
je
fists
rolb
jmp
mov
rcrl
les
test
mov
dec
inc
sbb
mov
cwtl
imul
or
mov
cwtl
and
aad
sbb
mov
dec
push
mov
fldl
push
cld
lret
sahf
stc
lods
inc
adc
push
in
mov
shr
cmp
sti
adc
lahf
xor
cmpsl
mov
jl
dec
mov
in
adc
xor
pop
adc
inc
jb
cmc
pop
je
adc
in
and
insl
repnz
lds
in
adc
mov
adc
add
vsubps
pop
sub
in
push
mov
or
cmc
jb
clc
mov
repnz
adc
inc
sbbb
xor
inc
mov
cmc
inc
loopew
push
mov
pop
inc
insl
add
jmp
repnz
mov
sbb
push
push
or
insb
loopne
sub
sbb
add
test
inc
pop
fs
std
cmp
dec
in
enter
lcall
mov
into
xchg
lahf
jmp
and
lcall
cwtl
sti
call
xor
push
pop
jmp
cmp
sub
inc
mov
dec
xor
lahf
sub
push
test
add
add
sub
and
xlat
sub
popf
int3
sbb
in
fs
jns
pop
and
icebp
aas
aad
call
fldcw
bound
in
mov
sbb
jle
inc
cltd
out
data16
lods
dec
sub
les
or
pop
add
call
test
add
cmp
add
stos
xchg
out
add
xor
push
pop
cltd
mov
and
addr16
add
pushf
jo
insl
push
adc
cltd
push
jl
mov
push
push
stos
mov
add
aas
in
mov
push
ds
jb
test
leave
or
aas
imul
add
pop
mov
jmp
out
mov
or
dec
push
in
lods
and
xor
jmp
aaa
mov
jl
leave
push
ret
mov
divb
mov
xor
jb
mov
fdiv
das
cmp
jg
pop
lods
in
pop
cmp
sub
movsl
mov
pop
out
jne
mov
ret
mov
cmp
ficompl
movb
lea
or
jmp
repnz
or
fiadds
jbe
shr
lods
dec
adc
fs
and
subl
mov
ret
loopne
popa
push
popf
sbb
js
push
pop
pop
and
test
sbb
clc
flds
int3
pop
dec
out
in
push
stos
pusha
fwait
push
sbb
mov
cmp
out
std
sbbl
and
inc
jl
sti
sub
mov
fdiv
push
and
int3
sbb
lock
jno
push
jmp
add
or
dec
mov
loop
push
xor
push
jg
stos
ret
push
testb
dec
add
adc
out
mov
roll
rorb
sbb
data16
dec
int3
int3
repnz
adc
mov
mov
mov
and
dec
or
xchg
gs
pop
das
loop
test
sahf
xchg
aaa
sbb
push
and
andb
cmpsl
stos
cmp
xchg
or
jo
in
stc
adc
pusha
test
cld
add
mov
inc
jmp
pop
lcall
fidivl
pushf
pusha
test
popf
lahf
or
mov
loope
push
dec
shr
and
imul
mov
popf
subb
in
push
inc
sbb
inc
mov
xchg
cwtl
aam
movsl
and
or
push
jmp
mov
cmp
sub
push
test
and
jge
push
stos
call
and
xor
pop
jmp
call
adc
dec
repnz
into
aaa
push
mov
loope
dec
leave
ljmp
das
cltd
push
ret
adc
xor
dec
fidivrs
call
jo
mov
bound
and
mov
cmc
lds
xchg
or
gs
rorb
dec
push
dec
xchg
repz
xchg
jge
nop
push
xor
stos
mov
push
sub
mov
iret
movsl
adc
mov
ret
cmp
mov
add
scas
dec
jecxz
sbb
call
lret
insb
xchg
add
push
cmp
mov
hlt
inc
fdivp
xor
dec
outsl
or
fsubrl
cs
dec
mov
dec
pop
icebp
dec
and
or
cmp
mov
lcall
sub
popa
push
fidivl
xchg
scas
jecxz
inc
fists
out
sub
xchg
mov
mov
mov
pop
jmp
loopne
das
mov
rcrl
xchg
mov
rolb
cld
stos
xchg
inc
cmp
mov
jl
lods
xchg
pop
out
loopne
push
in
lahf
fldlg2
sahf
sbb
pop
ret
adc
pop
pop
dec
dec
mov
push
out
mov
movsb
add
mov
mov
mul
xor
adc
xor
push
mov
imul
push
cmp
lcall
mov
jmp
jb
mov
iret
std
in
mov
pushf
lds
cli
jecxz
dec
mov
sub
pop
test
idivb
cmc
lret
pop
lahf
fcomi
in
aaa
mov
cmpsb
push
or
inc
mov
or
cmp
xchg
dec
cld
hlt
filds
insb
bound
lock
aas
xchg
push
pop
sahf
lret
or
pop
xchg
xor
mov
add
outsb
mov
and
call
inc
andl
std
test
lea
and
push
jne
cwtl
arpl
out
sub
jmp
sbb
add
subb
lret
inc
sbb
xor
mov
out
fisttpll
dec
call
xor
xchg
cmp
repz
xchg
jo
int
add
ss
scas
ror
aas
pushf
mov
pop
in
lods
inc
jne
jb
test
dec
xor
pop
fistps
and
mov
dec
inc
cmpsl
fidivs
out
sub
aaa
jl
stos
les
push
and
mov
imul
push
xchg
addl
mov
clc
pop
rorl
push
adc
cmpsb
andb
mov
xor
mov
shl
mov
test
loopne
cmp
jne
xchg
xchg
daa
fcoms
sub
lret
call
pop
shll
mov
cmpb
push
out
fisttpll
push
dec
inc
mov
mov
inc
lods
test
mov
mov
add
cmp
dec
or
clc
push
das
lcall
cmc
movsb
jnp
lods
aas
adc
push
ret
mov
sbb
xchg
lods
je
stos
enter
mov
push
add
add
shlb
push
pop
fidivrs
aaa
push
pop
mull
or
push
inc
stc
pop
insl
add
mov
inc
xchg
lods
lods
dec
xor
add
mov
int
loope
sub
out
ljmp
fsubrp
sub
lahf
xor
call
cmp
ror
jmp
pusha
pushf
push
cwtl
orl
adc
sub
push
addr16
or
adc
not
xor
call
sahf
sbbb
dec
int
cmp
mov
jno
enter
es
fimuls
sub
inc
xor
stc
xor
sub
movsb
xchg
sahf
xor
out
shll
fsubrp
shrb
mov
and
jae
xor
or
stos
fs
shr
mov
adc
ja
mov
in
aaa
ret
mov
mov
jg
mov
and
mov
rorl
adc
cmc
jp
popf
cmp
outsl
cmp
xlat
dec
mov
clc
subl
xor
inc
adc
cwtl
mov
mov
cmp
xor
call
bt
dec
mov
add
lea
lods
add
test
push
mov
popa
fwait
push
push
cmpsb
out
xchg
push
mov
cwtl
pushf
cli
add
repz
and
jg
inc
call
inc
les
sub
mov
mov
loop
push
push
test
lods
notl
jns
roll
jg
in
incl
arpl
sbb
lret
mull
jno
mov
inc
mov
pop
add
xor
shlw
jnp
mov
mov
pop
test
xchg
jnp
test
call
cmp
popf
sbb
bound
icebp
adc
push
mov
sub
sbb
dec
out
sarb
mov
loope
imul
pop
loope
into
push
repnz
insb
fildl
jmp
xor
icebp
hlt
cmpsb
push
inc
fildl
jo
mov
divb
fildll
inc
push
repnz
aas
shrb
mov
das
jns
push
pushf
mov
inc
push
js
jne
pop
pop
adc
push
xor
mov
inc
repnz
sahf
jb
arpl
xor
xor
lods
cmpl
cwtl
scas
ret
inc
jo
push
movsl
xor
sbbl
cmp
mov
cmp
int
cmpsl
fcom
adc
sbb
dec
in
or
ss
js
cmp
push
lock
in
jge
in
scas
in
je
out
movsb
add
std
cwtl
sarl
cltd
dec
pop
and
mov
pop
clc
pop
test
adc
xor
jo
mov
shl
fdivl
fdivrl
or
adc
outsb
out
jl
pop
mov
mov
dec
mov
leave
push
xor
mov
or
adc
je
dec
dec
add
inc
adc
xchg
or
ret
data16
outsb
ss
xchg
rcrl
imul
and
push
mov
cld
es
pop
lds
cmpsb
pop
mov
adc
add
push
ljmp
cmp
and
pop
xchg
fs
add
mov
adc
and
sti
ror
rcrb
inc
push
cmc
mov
push
sbb
add
je
repnz
cwtl
je
shrb
call
hlt
jp
and
jb
jecxz
test
dec
jo
jnp
adc
mov
hlt
int
jmp
ss
push
mov
stos
xor
int3
push
sbb
bound
scas
pop
add
in
push
call
cli
leave
pop
jl
pop
cltd
div
sbb
mov
push
jmp
pop
add
lods
call
mov
stc
popa
jo
jae
mov
bound
incb
add
add
loopne
stc
mul
pop
xor
out
loop
push
or
repnz
fildll
push
pusha
mov
mov
std
stos
outsl
dec
mov
pop
fwait
into
addb
pushf
out
pop
push
mov
inc
mov
adc
imul
mov
dec
sbb
aas
insl
pop
stc
and
jl
mov
push
mov
xor
daa
in
clc
call
adc
jmp
int3
push
daa
mov
andb
adc
call
in
mov
ficoms
add
sbb
cmc
mov
adc
movsb
and
inc
jbe
or
lcall
stos
mov
shll
sub
mov
and
mov
aaa
mov
repnz
div
fs
negl
lock
and
mov
notl
subps
sbb
jg
push
cltd
jle
mov
out
stos
sbb
or
dec
mov
add
mov
or
jno
sar
rorl
adc
inc
mov
inc
dec
hlt
testl
push
mov
aas
jae
stos
popf
mov
xchg
daa
cmpsb
mov
pop
stc
pop
jae
xor
dec
test
cs
in
sub
push
jbe
mov
icebp
lcall
loopne
loop
insb
fidivrs
and
std
mov
filds
xor
call
xchg
or
das
nop
dec
movsl
mov
add
dec
andl
pop
outsb
cmovae
fs
lahf
daa
push
ret
icebp
lret
out
int
dec
test
sbb
push
movsb
and
mov
mov
jge
or
sar
lds
sbb
sub
mov
out
cmp
fsubs
mov
cmp
add
sub
mov
or
inc
xlat
ret
mov
xchg
dec
add
add
jp
pop
out
out
xor
push
inc
xor
in
push
loop
push
sub
lret
cmp
call
aas
addl
inc
sub
call
jmp
div
dec
or
mov
jl
pushf
test
inc
into
mov
push
add
adc
pop
call
das
or
jmp
inc
and
popa
push
loop
mov
push
stos
stc
mov
mov
and
jmp
dec
repz
sub
lcall
hlt
or
fnstsw
mov
aam
mov
popf
dec
adc
add
aad
test
popf
dec
lea
test
vcmppd
add
test
movsl
push
xor
fisttpl
push
and
mov
jp
mov
jbe
ss
cmp
push
jmp
push
xor
ret
push
sub
mov
add
push
cltd
mov
xchg
stc
leave
fisubs
idivb
sbb
scas
mov
loop
in
xor
shll
out
mov
js
idiv
in
daa
push
push
mov
jmp
das
pusha
imul
adc
adc
dec
xchg
cmp
int3
lcall
xor
xchg
cltd
int3
push
sti
daa
mov
xchg
cltd
aas
das
hlt
xchg
or
jmp
or
pop
push
inc
pop
aas
ss
and
xor
or
clc
jg
popf
lret
and
cmpsl
add
ds
mov
push
sbb
push
sub
adc
mull
jmp
mov
jmp
daa
pop
out
pop
xchg
pop
lret
icebp
mov
cmpsl
pushf
inc
adc
mov
mov
xor
mov
jle
pushf
add
imul
mov
int3
or
in
cli
push
dec
and
jno
aas
cmp
pop
xchg
sarb
xor
xchg
pop
js
mov
orl
gs
in
iret
and
icebp
es
fnstsw
push
das
nop
mov
cmp
loope
or
or
out
jbe
bndstx
stos
loopne
inc
out
in
loopne
lcall
xchg
inc
cmpsb
mov
imul
pusha
pop
mov
ja
pushf
mov
pop
sbbb
mov
pusha
push
xor
xchg
push
cmc
jns
orb
dec
push
daa
bound
ret
xor
sub
shll
jl
lods
mov
das
jp
adc
pop
or
pop
xor
insl
inc
je
add
adc
std
loope
das
jge
fwait
insb
jle
and
loope
test
pusha
pop
mov
mov
sbb
insb
add
and
scas
std
cmpb
xchg
or
inc
jmp
ret
ljmp
mov
pop
cld
icebp
out
push
mul
or
or
in
xchg
popa
mov
add
das
xchg
mov
js,pt
cli
sub
jne
xchg
adc
xor
mov
mov
jno
dec
pop
xchg
incb
dec
loop
pop
int
sbb
out
fstl
inc
push
pop
sbb
or
shlb
out
or
pop
push
add
jmp
inc
sub
fcomps
fldt
push
inc
sahf
lcall
pop
jb
fcoml
dec
dec
xchg
jp
insb
pop
add
sbb
dec
add
and
aad
fsubs
sub
subl
xchg
dec
imul
xor
out
out
sti
push
push
jnp
hlt
pop
daa
pop
mov
fwait
cmp
push
mov
sub
test
shrl
insl
jb
test
push
ret
and
or
adc
ja
dec
pusha
and
sarb
add
fisubrl
and
bound
lea
mov
xchg
push
icebp
pop
pop
xchg
xor
jne
sbb
es
adc
sub
jne
or
stc
push
les
xchg
dec
stos
sti
pop
sbb
lret
xlat
sbb
sahf
add
inc
scas
scas
daa
push
xorb
movsb
adc
or
or
mov
test
cld
inc
iret
mov
mov
adc
mov
xor
leave
adc
xor
dec
push
jo
pop
xor
mov
adc
push
sbb
sti
in
pusha
and
sbb
and
xchg
mov
shlb
loope
adc
and
jp
loop
popf
pop
inc
xchg
push
add
rclb
lcall
lret
xlat
sbb
into
xchg
inc
daa
sbbl
test
adc
rcl
push
addr16
hlt
adc
xor
loope
sub
lahf
jp
pop
ljmp
movsl
jge
test
sbb
sub
imul
add
sbb
negb
stos
andl
adc
push
call
jno
fimuls
push
push
inc
sti
aam
rcrl
sahf
push
mov
mov
jo
or
fucomp
mov
add
scas
jbe
jp
dec
push
repnz
push
sar
repz
icebp
push
popf
enter
daa
pop
sbbb
stos
fmuls
ret
adc
mov
add
or
pop
inc
pop
sbb
jb
push
enter
pop
sti
movsl
addl
xor
cwtl
mulb
test
jb
out
mov
sbb
scas
mov
ja
ret
mov
imul
jmp
xlat
adc
cmp
mov
push
jo
cwtl
push
sarl
out
jl
add
pop
jmp
addb
aad
push
sub
ret
inc
adc
clc
dec
rolb
or
cmpsl
sub
stos
push
sbb
int
jg
dec
fsts
js
pop
inc
inc
jle
mov
inc
push
adc
add
xchg
pop
fimull
add
jb
jmp
pop
sbb
or
mov
roll
pop
sahf
int3
call
pusha
fmuls
inc
mov
mov
xchg
jo
push
repz
inc
cmpsb
jne
out
cmp
cwtl
enter
mov
mov
lea
dec
hlt
pop
push
lret
jecxz
mov
in
xor
ss
cmp
xchg
stos
sub
repz
rorl
cmc
pop
mov
stos
rcll
dec
stos
adc
jns
push
stos
dec
jmp
xlat
rolb
sbb
addr16
jb
sahf
repnz
add
fsubrs
adcb
xchg
mov
pop
inc
lds
mov
sti
jecxz
movsb
cmp
and
ret
lock
mov
mov
out
pop
stc
cmp
cmpl
jne
mov
mov
push
jne
roll
lds
pop
add
jns
icebp
push
sub
iret
xor
cmp
les
das
ja
mov
subl
test
rclb
adc
shlb
mov
cmp
xchg
and
xchg
mov
cwtl
xor
mov
movb
xchg
sub
mov
push
in
ljmp
cmp
int
adcl
push
cmp
repnz
sbb
adc
pxor
cmpsl
or
dec
lret
lahf
push
mov
xor
fxch
insb
adc
imul
out
xor
pop
ret
pop
int
cmp
cmp
sub
jo
fldl
add
rolb
ss
mov
sbb
jecxz
jge
mov
sahf
and
adc
popa
jg
or
inc
mov
das
xlat
push
fisttps
sbb
and
push
cmp
cmpsb
iret
jmp
adc
mov
mov
enter
or
imul
mov
mov
push
ljmp
repnz
jmp
sub
cmp
push
fucomp
add
push
popa
stc
or
loope
mov
inc
icebp
sub
sbb
xor
xor
aam
cltd
ljmp
fdivrl
and
add
xchg
mov
add
insb
inc
push
mov
ds
sub
or
cmpsl
pop
pop
or
add
or
sub
xchg
subl
lret
adc
adc
mov
adc
lahf
aad
lret
je
lock
je
es
mov
dec
fsubs
adc
nop
mov
repz
pop
out
testb
add
je
pushf
lea
call
xchg
or
bound
pop
push
sub
pop
mov
jge
mov
insb
das
pop
jge
lea
pop
stc
pop
or
cltd
repz
addr16
mov
es
rol
call
jb
push
push
insb
movsl
jmp
out
sub
stos
adc
fs
stc
repnz
pop
mov
adc
jg
pusha
out
xchg
sub
insl
pop
sbb
add
mov
jb
push
inc
pop
lret
daa
jno
stos
mov
sub
sbb
jb
pusha
pop
std
jp
xor
pop
cmpsb
test
imul
cmp
decl
ret
or
pop
in
inc
popf
dec
xor
stos
icebp
mov
lret
jne
sub
pop
mov
or
and
ljmp
pop
jmp
clc
mov
or
js
push
mov
enter
jmp
fstps
cli
pop
cltd
mov
cmpsl
mov
xor
jecxz
cld
mov
es
test
adc
dec
mov
imulb
ds
test
mov
iret
popf
insl
jecxz
sub
in
xor
test
das
pop
fucom
in
inc
jmp
or
dec
mov
adc
movsl
inc
adc
push
test
cmp
pop
jno
pop
aaa
insl
mov
mull
mov
scas
push
hlt
lods
xor
mov
dec
adcb
pop
rcl
jmp
stos
icebp
pop
xchg
mov
mov
dec
pop
pop
mov
int3
mov
sub
cwtl
aaa
cmc
aaa
nopl
je
pop
fldcw
jmp
jno
adc
dec
int3
or
ret
push
incb
push
in
cld
ret
adc
ja
mov
xchg
pop
jmp
outsb
movsb
push
sti
movsl
jae
xchg
in
jbe
add
pop
dec
add
mov
out
call
mov
add
gs
pop
xchg
add
inc
icebp
test
xorl
lds
inc
fisttps
mov
mov
jo
pushl
in
aam
xor
and
jae
push
loop
dec
stos
or
add
sbb
inc
lods
sub
xchg
mov
mov
inc
scas
cmp
mov
les
xor
lea
push
mov
dec
mov
addr16
scas
stc
inc
addps
add
enter
fmuls
adc
push
sbb
nop
loop
jl
xor
xchg
pop
inc
shlb
sub
testb
xchg
int3
call
mov
pop
icebp
hlt
punpckhbw
test
jbe
ret
xchg
cs
add
cmp
in
mov
call
cwtl
sub
push
mov
mov
fnstenv
add
repnz
in
pop
jmp
cmp
stos
shlb
cmp
cmp
sub
jmp
rcll
push
mov
dec
xchg
addr16
sarb
mov
mov
add
in
mov
imul
int
sbb
mov
jbe
mov
fsubrl
add
fsubrs
inc
fmull
lods
mov
inc
ret
inc
jmp
cmp
mov
mov
popf
xchg
jmp
pop
xor
cmp
pop
out
cmc
mov
pop
fwait
pop
pop
lods
jbe
sub
popa
or
add
add
nop
pop
adc
fwait
lods
cwtl
dec
dec
pop
mov
add
inc
inc
je
call
or
clc
add
clc
imulb
mov
mov
jno
push
dec
sarb
sbb
mov
jb
popa
inc
adc
push
inc
arpl
ljmp
or
mov
sub
push
jle
inc
popf
jno
sahf
dec
xchg
lret
push
mov
test
inc
push
cld
lea
cmp
loopne
outsb
push
push
loopne
outsb
insl
mov
push
or
inc
mov
inc
push
test
inc
inc
das
lock
mov
test
mov
lock
loope
add
sub
and
sub
lahf
jge
push
and
scas
test
fstl
cmc
repnz
cmp
adc
mov
sbb
mov
jl
add
lods
xchg
or
call
cmp
lods
cwtl
dec
add
jae
shrl
ljmp
sub
or
rolb
addb
jo
sub
popa
loope
xor
shrl
ljmp
mov
dec
aaa
mov
test
mov
out
mov
js
sbb
jle
hlt
pop
test
push
push
or
xchg
jo
inc
mov
sub
negl
add
out
cld
or
sbb
cmp
fistpll
repnz
lds
loope
fldl
pop
mov
cmp
lea
mov
sub
nop
aaa
loope
add
or
stos
jbe
enter
jg
inc
lds
mov
jmp
adc
and
repnz
stos
add
push
sub
rclb
push
inc
rcrb
aaa
mov
sub
cltd
pushf
sub
or
jns
inc
dec
aas
and
insb
insb
or
ss
popa
mov
cs
dec
sub
jmp
xor
jmp
mov
popf
dec
sti
push
cmp
enter
leave
inc
cmp
adc
jmp
ror
popf
psubd
jmp
dec
push
mov
setae
push
in
and
xor
adc
mov
cmp
out
mov
ja
fdivs
dec
pop
movsl
scas
lret
xchg
test
out
or
lea
mov
sub
cmpsl
pop
and
bound
ret
lods
inc
or
push
push
adc
sub
mov
je
outsb
xchg
cli
or
pusha
cli
jg
insl
pop
jl
jmp
jmp
popa
push
or
dec
orl
testb
cld
lcall
lds
pop
sub
shrl
frstor
test
xor
scas
loopne
xchg
nop
dec
hlt
cmp
mov
and
and
je
sahf
push
shll
inc
loop
pop
rcl
repnz
jmp
and
scas
inc
or
inc
xor
inc
shl
push
push
les
ret
pop
xchg
nop
in
jbe
or
jae
mov
js
push
mov
add
lods
fbld
push
mov
pop
sahf
jmp
stos
scas
das
dec
jecxz
ss
mov
addl
mov
and
lds
mov
int3
nop
or
popf
pop
dec
inc
sub
lret
sub
inc
mull
fistpll
push
insb
pop
mov
int3
xchg
shrl
sbb
and
jo
iret
inc
fdivrs
add
pusha
push
lods
leave
lock
int
jno
mov
divb
cmp
mov
jae
cmp
clc
icebp
sti
xor
dec
inc
pusha
or
push
daa
pushf
in
in
sbb
and
mov
xorl
xor
cmp
mov
and
sbb
in
xchg
adc
mov
and
mov
or
call
xchg
je
mov
xchg
stos
and
push
jge
jo
fs
dec
push
inc
xor
dec
jae
into
gs
or
add
test
call
or
movsl
stos
sub
mov
mov
mov
and
xchg
cld
movsl
into
lret
nop
icebp
gs
mov
lahf
cmp
mov
dec
and
ljmp
mov
aad
mov
std
pop
test
push
xchg
xchg
addl
cld
enter
out
cli
mov
push
jo
jae
dec
push
cmp
pop
jge
push
and
pushf
jg
cmpsb
ds
push
ficoms
xor
inc
shl
cmp
stos
sub
lahf
inc
fisttps
push
xchg
stc
mov
or
inc
jge
sarl
enter
test
inc
loopne
js
pop
push
mov
ret
out
cli
loope
ja
mov
icebp
push
call
ss
adc
int3
test
imul
shll
scas
or
mov
repz
mov
sbb
jmp
or
xor
test
test
adc
xor
push
lret
icebp
dec
dec
push
or
jmp
mov
call
loop
repz
push
ss
popa
pop
push
jmp
mov
sbb
sbb
stos
rcrb
sti
adc
jno
push
fcoml
and
outsl
lahf
aaa
inc
mov
fldlg2
out
pop
cli
cld
xor
out
cmp
stos
push
cmova
loopne
icebp
pop
xor
orl
or
daa
mov
pop
test
xchg
pop
lahf
jo
jmp
xchg
nop
xorb
mov
leave
scas
push
or
jmp
loop
mov
xchg
mov
or
xor
add
sub
aad
add
pop
insb
mov
push
xchg
inc
inc
mov
mov
das
call
aam
mov
add
pop
or
inc
inc
adc
push
add
push
xchg
mov
lcall
sub
lds
outsb
test
and
pop
push
sarb
iret
movsb
ss
jne
jb
or
mov
je
xor
into
dec
jl
sahf
loope
hlt
xor
fwait
mov
test
dec
daa
pop
cmp
adc
std
adc
es
inc
mov
inc
shlb
mov
sahf
insb
test
add
scas
icebp
jns
jnp
push
push
dec
pop
adc
fsubr
sub
pushf
xchg
jl
lea
adc
dec
adc
daa
cmpsb
sub
pop
xor
dec
cwtl
sub
lods
outsb
mov
cwtl
cmp
pop
push
sahf
mov
daa
notl
inc
outsb
xlat
push
adc
push
xchg
or
call
ss
inc
push
mov
subl
push
aas
repz
andb
in
stos
mov
out
sar
in
mov
and
sub
outsb
sub
or
jns
xchg
push
adc
xor
scas
test
add
in
xorb
inc
xchg
push
test
adc
sbb
pop
loop
das
inc
data16
ja
xchg
mov
add
pop
cmp
and
add
leave
cwtl
and
or
pop
scas
or
jno
idiv
sti
inc
xchg
jno
jmp
mov
and
mov
imul
jno
mov
cmpsb
jl
test
ljmp
test
mov
mov
daa
jae
inc
xchg
add
jo
pop
jno
loop
jb
or
je
daa
pop
jecxz
push
lahf
dec
mov
push
inc
stc
mulb
push
jecxz
jp
sti
pusha
jle
icebp
push
gs
rclb
pop
movsb
add
sub
sub
clc
push
jbe
and
cmp
daa
adc
in
int3
push
or
inc
pop
addb
daa
xchg
negl
jmp
or
push
xchg
mov
jmp
cwtl
pop
sub
pop
int
xor
shlb
mov
inc
or
leave
sub
inc
ja
fnstsw
inc
test
pop
loopne
daa
cmc
jp
jns
es
jne
sahf
and
dec
push
push
and
pop
xchg
mov
movsb
mov
leave
das
sub
cld
pop
test
inc
int3
push
sti
mov
sarl
mov
ljmp
pslld
inc
in
jb
test
mov
xor
jae
bound
cmpsb
or
loopne
push
in
xchg
fwait
into
or
push
pop
mov
cmc
xlat
sbb
and
cli
inc
test
xlat
into
aas
insl
add
mov
int3
add
pop
andb
mov
mov
xchg
mov
fldenv
lcall
xchg
movsl
xor
mov
push
jo
jae
imul
sub
inc
lcall
dec
jle
jmp
and
or
dec
jl
repz
mov
pop
bnd
test
mov
push
add
sbb
sub
cmp
pop
jmp
cmp
movsl
cmp
stos
inc
mov
lea
push
pop
jnp
push
mov
out
add
in
orb
jge
call
mov
fcompl
mov
jno
adc
loop
mov
movsl
lods
push
pop
hlt
jle
pop
repnz
dec
cmc
sahf
sahf
add
and
mov
loopne
xor
mov
loopne
ret
pop
repnz
sub
adc
loop
inc
xorb
ret
mov
mov
call
in
xchg
cmc
inc
movsl
mov
ja
mov
in
lds
push
js
cmp
mov
add
add
addr16
xchg
jo
and
hlt
xchg
imul
inc
pop
bound
mov
mov
adc
out
adc
repnz
les
enter
inc
aas
adc
xchg
jp
sub
imul
or
push
jp
cmpsb
les
bound
test
cmp
add
enter
lds
stos
mov
adc
adc
mov
icebp
mov
sub
push
loope
add
or
mov
incl
adcb
aad
nop
pushf
pusha
sahf
xchg
add
fmuls
imul
dec
loop
mov
lock
mov
inc
mov
call
movsl
imul
pop
or
cmpsb
test
mov
andl
and
and
shll
sbb
fs
lea
mov
adc
fcom
dec
mov
repz
sbb
push
test
mov
sbb
rclb
pop
jbe
sahf
int
rcrl
lret
mov
cmp
cmp
sbb
mov
mov
inc
repnz
pop
ja
jg
fistpl
test
push
or
call
loope
es
xor
dec
mul
push
add
in
lds
add
xor
adc
inc
xor
div
lcall
jl
and
mov
js
out
mov
cmpsb
jmp
test
xor
incl
ret
fistps
cli
xchg
pop
mov
movsl
mov
or
mov
xchg
jne
sub
fldcw
xor
xchg
outsl
inc
mov
inc
pop
jp
repnz
cmp
nop
cmpsl
push
loope
xchg
cwtl
stos
mov
sbb
jae
xchg
lcall
or
fimuls
ret
dec
rcrl
mov
test
cmp
lcall
mov
les
lods
mov
pusha
jecxz
or
pop
and
pop
mov
mov
mov
dec
or
call
or
mov
call
mov
adc
icebp
aaa
lahf
icebp
jae
movsb
insl
outsl
adcb
push
dec
add
daa
xor
xor
xchg
add
ss
shr
stc
ja
cmpsl
or
and
xor
test
mov
and
push
mov
test
movsl
test
enter
dec
and
push
inc
or
fsubr
mov
jns
jle
xlat
dec
xor
jae
mov
cmp
push
clc
add
or
pop
insb
popa
mov
push
pop
adc
pop
push
inc
dec
xor
pop
inc
cli
sahf
and
push
pop
pop
or
ret
lods
mov
xchg
inc
xchg
mov
push
xchg
imul
push
cwtl
sbb
push
xchg
out
pushf
hlt
mov
push
idivb
or
incl
fiadds
sarl
add
shl
add
stos
cltd
sbb
bound
or
outsb
pop
call
jmp
test
ja
addb
push
jb
daa
jbe
mov
xchg
imul
pop
icebp
ja
push
cmc
es
adc
push
jne
loop
repz
and
out
subl
sub
mov
ds
negl
pop
or
lods
xchg
and
fsubs
xchg
data16
mov
push
pusha
dec
xlat
imul
sub
stc
mov
fwait
add
cmp
mov
out
mov
mov
and
mov
push
mov
adc
inc
and
pop
mov
mov
cltd
neg
ja
daa
cwtl
or
cwtl
mov
rorb
in
scas
jbe
add
test
pop
xchg
fsubrp
sub
hlt
rorl
mov
fnstcw
repnz
fbstp
ret
mov
dec
cli
cld
pop
and
pop
std
dec
lret
inc
xchg
jae
lahf
iret
stc
mov
js
inc
xor
iret
or
xchg
push
mov
test
cmc
loope
and
push
cmp
cmp
stos
cmp
lahf
mov
addb
add
das
lods
sbb
jmp
cli
call
in
outsl
filds
sbb
subb
adc
jecxz
mov
sub
fsubrl
cmp
std
or
out
or
js
fs
pop
mov
jb
xor
enter
xchg
pop
or
mov
mov
leave
fsubrs
mov
xlat
cmp
dec
cmpsb
mov
xchg
add
push
pop
xor
mov
fisubrl
push
jl
rorl
pop
imull
dec
adc
out
xor
inc
mov
cmpsl
pop
insl
ret
inc
xchg
jno
insl
rcr
xor
test
mov
test
jbe
les
sbb
rol
into
xorb
add
mov
xor
pop
jne
hlt
mov
mov
jl
cmpsl
jb
mov
fimuls
push
dec
mov
gs
xor
mov
sub
cmp
jmp
mov
stc
mov
dec
mov
mov
xchg
adc
cwtl
loopne
adc
fnsave
ss
test
fwait
push
subl
jmp
add
scas
sbb
sub
dec
pop
clc
xor
mov
testb
adc
sbb
jb
cld
testl
ficoms
xor
mov
cli
xchg
stc
dec
push
cmp
xchg
out
push
push
mov
or
xor
cmpsl
mov
mov
call
push
dec
test
inc
filds
data16
or
imul
out
dec
mov
dec
repz
pop
mov
xor
push
mov
pop
inc
jns
xchg
xor
inc
dec
movsb
and
hlt
push
pop
xchg
pop
xor
gs
push
mov
std
mov
jge
pop
jmp
inc
ljmp
jne
clc
nop
sarl
sbb
mov
and
nop
and
pop
mov
sub
dec
add
push
icebp
and
ja
movsb
sub
fsubl
add
les
pop
xchg
test
fdivs
fistps
daa
cmc
cwtl
aaa
fcomp
mov
repz
mov
in
xor
adc
scas
or
push
cmp
pop
or
push
mov
in
pop
jmp
mov
in
aas
adc
int3
adc
loop
imul
cmp
mov
xlat
add
inc
xchg
pop
dec
arpl
mov
sti
pushw
mov
xor
jns
cli
mov
das
dec
pop
loop
das
xchg
in
inc
add
sti
cwtl
sub
dec
stos
mov
shl
sub
aad
xor
notl
shlb
pop
inc
lods
add
adc
out
ljmp
inc
call
int
insb
adc
das
mov
push
jno
sub
and
mov
icebp
xor
out
lods
repnz
shrl
into
jb
call
xor
and
and
dec
adc
lods
adc
xor
sarl
xchg
or
push
jecxz
push
xchg
mov
pop
xlat
lcall
addr16
or
cmp
mov
mov
sub
ret
mov
push
jge
and
test
call
imul
fwait
and
cmc
loope
dec
jg
cmp
push
push
pop
out
daa
test
aaa
mov
lea
and
adc
mulb
cmpsb
push
gs
popf
or
pop
in
int
subb
jmp
push
pop
shll
push
mov
fwait
insl
pusha
imull
push
inc
dec
nop
imulb
jg
sub
stos
mov
scas
mov
aad
mov
mov
in
jmp
out
adc
sbb
add
xorb
inc
push
ss
leave
out
mov
out
stc
dec
pop
sti
add
cmpsl
and
imulb
insl
hlt
fucom
lods
mov
jns
and
mov
clc
stc
fidivrs
mov
push
rol
mov
fldlg2
fistpll
sub
incl
lret
or
xor
out
std
nop
imul
imul
and
adcb
push
and
pop
call
and
pop
daa
mov
in
pop
cld
or
sub
ds
inc
ljmp
lods
outsl
xchg
cmovne
mov
clc
shrb
mov
scas
pop
adc
adc
mov
ss
out
test
call
orb
dec
fstps
adc
cwtl
push
xchg
mov
sub
fstl
mov
or
sub
xchg
clc
cmc
outsb
xchg
cwtl
sub
sar
dec
jb
xor
in
mov
outsb
pop
int3
sub
cmpsl
hlt
push
mov
inc
addr16
mov
and
push
xchg
sub
fidivl
insl
dec
inc
ret
mov
idivl
in
lea
aad
xchg
add
xchg
hlt
cli
mov
stos
lahf
pop
cmc
push
js
cmp
addb
int
sub
push
dec
xchg
pop
scas
or
mov
shll
es
fmuls
repnz
loope
add
xchg
sbb
negb
nopl
scas
add
pop
lret
ja
mov
addr16
push
outsb
scas
orb
adc
jp
mov
push
lret
sub
andb
cld
dec
mov
adc
cs
jecxz
add
inc
push
cli
mov
mov
incb
and
cs
or
sbb
test
fisttpll
mov
pop
or
out
xor
call
mov
inc
test
inc
add
incl
sub
pop
xor
inc
adc
jnp
lock
mov
pushf
mov
stos
cli
aad
icebp
icebp
and
outsb
mov
pusha
pop
call
mov
push
imul
test
sub
adc
jg
push
and
loopne
push
add
dec
jecxz
add
fnsave
out
adc
mov
mov
adc
mov
hlt
cmp
fcomp
into
push
add
cld
jae
xchg
xor
in
mov
test
jge
daa
lret
mov
in
xor
insb
cmp
cmp
outsb
call
inc
or
xor
xchg
inc
mov
push
rolb
outsb
xchg
or
clc
ret
push
or
insl
mov
cmp
mov
inc
ret
inc
andb
cmp
push
mov
sub
jno
jg
pop
mov
dec
addr16
xor
push
add
jmp
sbb
xor
jae
jl
push
sbb
addr16
stos
and
push
mov
inc
push
push
mov
mov
outsl
testl
mov
ljmp
jle
das
add
dec
idiv
sti
lea
pop
mov
adc
push
xor
mov
jb
push
popf
jle
inc
aas
mov
and
fstpt
outsl
daa
mov
jns
or
test
out
and
and
mov
jecxz
cs
lods
cmp
fistpl
mov
pop
call
push
or
mov
mov
les
and
int3
rolb
pop
sbb
insb
xchg
xor
adc
jbe
or
loop
jp
lret
push
sub
jp
jg
jecxz
mov
out
xchg
out
pop
cli
and
call
sub
mov
aam
dec
push
or
cld
push
dec
int
roll
insb
and
dec
add
cs
xor
mov
add
int3
sub
out
sub
sti
mov
push
stos
or
inc
xor
mov
mov
enter
jge
daa
mov
les
sti
and
call
je
xor
rclb
int
xchg
or
inc
lahf
dec
push
jg
xlat
nop
mov
jmp
or
or
or
insb
icebp
test
xlat
xchg
icebp
sti
jmp
test
je
adcb
loope
pop
push
test
inc
pop
dec
hlt
mov
cmpsb
sub
mov
hlt
push
or
cmp
cmp
pop
cs
rolb
cwtl
or
and
orb
ja
repnz
mov
das
js
pop
call
and
push
push
test
xor
mov
insl
ljmp
add
lods
popf
and
in
lahf
scas
and
jns
loop
ss
mov
mov
hlt
add
daa
arpl
loope
dec
sub
sub
or
mov
sbb
push
sbb
pop
stc
cmc
mov
mov
mov
mov
and
test
sub
arpl
vphaddubw
jnp
hlt
and
or
jns
or
pop
sbb
aas
aad
mov
push
mov
ljmp
enter
xor
shrl
inc
and
mov
mov
sub
hlt
es
pop
lret
or
push
pop
call
pop
inc
pop
jl
sub
stos
mov
movsb
jl
adc
fmull
mov
jg
adc
inc
rcrl
mov
icebp
add
rorl
fistps
pop
sti
lret
xchg
mov
and
xlat
mov
sti
jns
scas
in
jg
rclb
cmp
subb
push
rol
cld
ljmp
jbe
mov
pop
ljmp
and
xor
inc
call
rcll
lods
add
push
idiv
and
in
imul
sti
mov
add
test
insb
frstor
pop
sub
or
add
mov
and
movsl
sbbb
add
mov
andl
lahf
and
jecxz
dec
push
mov
or
cli
push
cs
sbb
sub
xor
sbb
stos
ja
sbb
add
inc
hlt
sbb
call
adc
cmp
jb
mov
inc
xchg
push
daa
loop
jno
aaa
daa
hlt
aaa
adc
sbb
mov
leave
mov
xchg
push
and
hlt
cmp
push
ja
inc
mov
jge
adc
fs
loop
xchg
push
lret
bound
push
dec
dec
jp
xchg
pop
xchg
cmc
or
push
clc
stos
mov
inc
pop
outsb
inc
jb
sbb
mov
div
dec
std
pop
adc
or
lea
push
ja
ds
mov
sbb
int3
dec
lea
and
pop
and
or
iret
pop
pop
dec
cmpsb
pop
xchg
cmpsb
push
fbld
shrb
pop
test
lcall
ds
clc
insb
dec
mov
and
cli
dec
outsb
xor
imul
xchg
add
xor
inc
sahf
ja
jmp
adc
add
adc
stos
lock
jo
fldl
and
xor
or
nop
mov
push
lcall
dec
leave
jmp
jmp
pushf
jns
out
add
cmp
js
or
push
pop
add
lcall
xor
idivl
addb
push
pop
icebp
xchg
push
je
dec
call
icebp
push
dec
mov
pop
mov
jae
out
lcall
mov
lahf
in
nop
ret
push
mov
adc
mov
cli
sub
ss
adc
bound
movsl
mov
out
movsb
sub
add
and
xlat
test
xchg
xchg
mov
or
out
mov
push
ljmp
and
push
std
jnp
push
xor
out
and
jle
call
sub
cmpsb
add
cmpb
mov
and
mov
das
inc
fldenv
in
sar
jb
shrb
rol
js
jo
mov
mov
daa
andb
inc
add
mov
sbbl
cmpsb
pop
mov
sub
imul
jb
int3
es
sbb
xor
xchg
jbe
push
mov
icebp
stc
mov
push
test
movsb
push
jp
pop
adc
cmp
js
movsl
or
sbb
add
cmpsl
pop
cs
repnz
mov
cltd
mov
clc
icebp
mov
jb
or
rolb
cmp
mov
lds
mov
out
xorb
icebp
jne
popa
jb
repz
push
sbb
lret
push
dec
xor
imul
cmp
mov
in
or
mov
mov
dec
leave
clc
mov
lahf
jo
jmp
ljmp
adc
xor
test
call
das
ffree
mov
dec
call
pop
dec
dec
and
jo
out
or
sub
add
fdivrs
pop
mov
sahf
jno
idivl
mov
push
test
jb
jmp
repz
lcall
pop
push
push
xorb
jb
xchg
sahf
lcall
imul
fnsave
lahf
int3
bound
hlt
iret
stc
adc
testl
dec
stos
pop
loop
adc
xchg
and
in
dec
pop
test
mov
sbb
fnsave
ret
push
adc
fsubrs
or
pushf
inc
loope
add
dec
outsl
fstps
or
mov
or
xchg
inc
ljmp
mov
mov
rcrb
jecxz
jb
mov
call
cmp
mov
je
ja
fwait
xchg
xchg
push
sub
push
pop
scas
rolb
sahf
pop
or
push
and
ret
negl
xchg
iret
pop
call
cs
out
stos
in
mov
and
sub
push
push
call
pushf
add
and
xchg
fs
es
cld
aam
jmp
push
push
sbb
inc
push
pop
into
scas
pop
mov
and
in
cmp
movsb
stos
in
mov
insb
bound
subb
xchg
movsb
push
pop
jno
scas
inc
clc
call
sbb
mov
lock
inc
push
xlat
cld
mov
into
jb
shr
rolb
arpl
or
fsubp
inc
inc
sahf
or
mov
sub
sbb
lret
cmp
ja
inc
dec
sbb
sub
mov
dec
mov
pop
add
mov
movsb
jp
push
out
push
or
das
push
sub
cmp
mov
mov
xor
and
cmp
int
cmpsl
sub
pop
in
cmc
jle
insl
inc
adc
mov
lods
ljmp
fmull
push
pop
imul
add
loop
or
mov
mov
popa
adcb
jmp
and
std
stos
rcll
pushf
daa
jge
mov
data16
popa
xor
popa
cmp
aaa
mov
rcrl
cmc
pop
daa
jno
stos
loopne
mov
sahf
ljmp
push
ret
push
xchg
add
aaa
fnsave
call
stos
pop
jl
sar
mov
movsl
jno
cs
or
insl
sub
cld
jle
fs
add
xorl
or
sti
shlb
push
or
cltd
mov
adc
and
daa
mov
fcmovu
mov
jo
mov
sub
mov
movsl
stc
cmpsb
push
lds
and
pop
pushf
push
pop
dec
sar
lea
lods
xor
inc
sbb
jp
mov
pop
in
sub
out
outsl
sarl
scas
fwait
push
pop
out
or
in
outsb
stos
lods
push
pop
call
cmp
out
sbb
add
or
fistps
push
pop
inc
dec
jmp
add
out
je
fxam
in
push
lahf
jmp
test
dec
mov
cmp
xchg
scas
idivb
js
fdivs
fcmovbe
out
xchg
sahf
mov
sub
jl
mov
cmc
xchg
loop
adc
das
mov
or
and
stc
das
sbbl
mov
or
xchg
mov
jo
pop
push
push
add
in
add
outsl
addr16
push
jp
inc
cli
jmp
mov
call
mov
cmp
test
shl
ljmp
jo
lret
sbb
inc
push
xor
xor
push
inc
cwtl
sub
inc
and
pop
jae
cli
rcr
mov
jp
adc
push
jmp
push
sarl
dec
mov
fiadds
mov
pushf
adc
call
pop
jmp
lods
cmc
lret
insb
and
xchg
push
imul
std
nop
xchg
push
lret
cmp
mov
call
out
mov
scas
push
testb
movsb
int
push
inc
pop
movsl
fisttps
mov
sbb
loopne
xor
imul
cmc
xchg
xor
call
pusha
rcl
jle
xchg
ljmp
sbb
cmp
fs
mov
push
jno
es
dec
jecxz
and
fwait
or
hlt
mov
ja
mov
loope
cmp
sbb
adc
testb
es
clc
push
mov
fwait
sbb
sub
mov
pop
xchg
in
sub
add
mov
push
add
pop
and
push
xor
rclb
pop
sub
add
pop
mov
cwtl
rolb
pop
xchg
adc
inc
repz
mov
imul
rcll
lahf
pop
insl
aad
cmpsb
aaa
dec
pop
das
out
xor
aad
jb
call
jbe
fcompl
mov
push
push
jecxz
repz
mov
in
jp
mov
mov
pop
inc
ds
aad
jb
ss
leave
xor
add
mov
imul
xor
mov
cmpsl
movsb
ljmp
lods
cmc
push
and
ljmp
xchg
nop
jmp
and
or
xor
dec
mov
test
call
insb
insb
loop
push
xor
and
es
xor
mov
adc
sti
add
jmp
xchg
fdivrl
fdivrs
pop
mov
push
cwtl
mov
sub
pop
jne
cmp
dec
outsl
hlt
in
dec
add
das
add
test
je
fucomi
gs
sbb
push
cwtl
or
mov
xlat
sti
mov
mov
cmp
test
pop
xchg
mov
or
mov
xchg
repnz
pushf
jle
jmp
andl
dec
ljmp
cmp
xor
fstps
arpl
pop
sub
dec
mov
sbb
sub
dec
and
daa
ret
push
out
mov
out
jmp
sub
stos
loope
push
mov
int
pop
dec
pop
jne
out
pop
mov
sti
rcrb
pushf
cwtl
test
push
testl
sub
fbstp
imull
cmc
lcall
xchg
cmc
sub
xchg
ja
insl
sub
jmp
pop
xchg
cmp
jbe
popa
iret
or
and
xchg
std
add
jle
imull
popf
add
sarl
sbb
pop
pop
frstor
adc
jo
pop
notl
sti
push
mov
test
movsl
adc
loopne
loopne
pop
mov
mov
outsl
lcall
outsl
adc
js
xor
cltd
mov
scas
xlat
adc
mov
shrb
dec
jo
sub
jg
sbb
xor
clc
call
mov
lret
push
pop
xor
lcall
test
mov
shrl
sub
cmc
clc
lds
ss
mov
xor
test
push
adc
adc
or
inc
ss
add
fstps
xor
jmp
in
int3
or
loopne
xor
xor
mov
pop
idivb
inc
outsl
les
cmpsl
test
loopne
or
insl
out
fcmovbe
enter
dec
insb
xchg
inc
pop
mov
repnz
dec
pop
or
rorb
lahf
push
sbb
fistl
xchg
shrl
test
fdivrs
outsb
mov
xor
mov
and
shl
scas
jmp
adc
sub
mov
ss
inc
xor
mov
push
movsb
je
negl
sbb
dec
daa
adc
fnstcw
jl
cmp
lret
pop
cwtl
mov
dec
clc
jns
aaa
adc
out
ror
xchg
and
inc
mov
xchg
in
addb
int3
cmp
repnz
das
jno
out
jnp
mov
push
mov
lea
pop
dec
xchg
cmpsb
inc
push
pop
lahf
enter
or
adc
fcmovnu
ja
inc
mov
pop
jmp
mov
leave
sbb
into
cmc
dec
jno
pop
cmp
inc
push
or
cmp
mov
xor
popf
jge
push
enter
add
outsb
adc
adc
sbb
in
hlt
inc
push
lahf
in
shrl
dec
push
push
ljmp
icebp
fs
out
mov
sub
insl
cmp
pop
pop
jmp
xchg
push
mov
in
sub
test
xchg
mov
xchg
icebp
add
call
test
cmp
fisubl
rorb
or
xchg
daa
pop
aad
sub
cs
imul
add
mov
faddp
ss
inc
inc
pop
jo
push
sub
lods
pop
lea
sbb
jp
imul
sub
imul
xor
add
aad
ret
mov
aaa
dec
movups
imul
sub
adc
call
jmp
cli
dec
aad
push
inc
and
sbb
jo
ret
xlat
into
daa
pop
mov
lret
insl
xor
jmp
xchg
push
pop
push
mov
ljmp
sub
sbb
punpckhdq
mov
rcrl
inc
shrb
es
aam
jmp
or
cmc
je
mov
ret
or
sub
movsl
loope
mov
cmc
add
pusha
insl
jmp
adc
cmp
push
fsubrl
gs
pop
xchg
test
mov
xor
pop
stos
jno
pop
xor
addl
adc
das
sbb
and
addr16
negl
ja
ret
rcl
jbe
out
xor
push
fstl
push
or
sbb
push
fpatan
sub
es
mov
sub
pop
inc
cmp
lods
sbb
addr16
adc
fs
adc
fisttps
ss
mov
sti
sub
ja
mov
ja
lods
xchg
popf
les
inc
mov
mov
clc
sbb
gs
add
inc
daa
pop
cmc
jge
cli
push
popf
inc
or
insb
arpl
mov
mov
inc
addr16
shl
sub
sub
jmp
movsl
int3
mov
stos
cld
or
dec
cmp
add
iret
dec
ret
pop
fwait
mov
inc
cmpsb
movsb
dec
ss
push
shlb
test
sti
test
in
lods
pop
insl
cmp
push
jmp
jmp
cwtl
outsb
add
mov
sub
jo
mov
pushl
adc
mov
movsl
mov
xorl
movsb
outsb
push
pop
clc
loope
or
ret
cmp
ret
cmpsl
repnz
call
or
and
adc
bound
lret
or
mov
or
jns
test
popf
dec
adc
mov
jmp
add
enter
mov
and
push
xchg
hlt
lahf
imul
lds
push
movb
loopne
sti
aad
ret
inc
jmp
xchg
into
clc
lahf
fistpll
sbb
pop
xchg
dec
movsb
je
add
pop
outsb
stos
rcrb
push
push
mov
test
mov
add
nop
inc
sbb
jnp
mov
lea
and
mov
jg
and
or
mov
adc
sub
faddl
inc
mov
out
popf
add
mov
je
dec
xor
dec
fisubl
clc
jno
inc
mov
pop
xor
lods
gs
mov
in
or
call
pop
push
dec
dec
repnz
mov
mov
jl
or
cmc
inc
cmp
out
mov
push
or
add
sub
and
mov
sub
or
push
xchg
jno
jmp
add
ret
dec
and
push
mov
or
call
cmp
loop
out
clc
jle
inc
icebp
mov
daa
out
mov
lahf
cmp
mov
scas
aas
jne
xlat
orb
arpl
popl
arpl
cli
aad
push
hlt
pusha
leave
sub
repnz
push
push
and
mov
jecxz
pop
sub
pop
mov
jo
push
cmp
pop
aam
jmp
sub
jge
jge
mov
pop
aaa
lock
dec
jmp
inc
add
push
xchg
dec
call
fs
int3
stos
cmp
cld
fidivl
push
lret
ljmp
dec
or
add
mov
cli
push
repnz
in
testl
icebp
xor
or
mov
sub
sbb
xchg
xor
mov
rclb
cmp
mov
enter
sti
mov
push
jns
int
xchg
xchg
dec
das
cmp
and
xorb
pop
jnp
sbb
pop
negb
repz
sub
push
xchg
adc
mov
adc
xor
daa
stos
and
enter
jl
in
xchg
cmp
mov
call
sbb
jbe
scas
mov
inc
ja
adc
jmp
or
pop
cwtl
xchg
cld
mov
pop
or
xor
ret
push
add
jae
add
jecxz
sbb
jno
or
mov
orb
repz
jne
popa
call
push
fbstp
movsl
mov
jl
or
pushf
dec
adc
pop
mov
ja
mov
xor
fmull
cs
dec
add
out
push
mov
jmp
jo
std
outsl
mov
push
adc
adc
daa
test
lahf
or
mov
sub
cmp
rolb
mov
call
jmp
sub
add
call
scas
ljmp
hlt
icebp
mov
cmpsb
sbb
int
rorb
push
test
and
adc
enter
fsubrs
mov
sub
lds
xchg
jne
in
pop
mov
dec
stc
frstpm(287
mov
mov
scas
repnz
daa
or
adc
sub
pop
popa
pop
adc
mov
das
mov
mov
sbb
cmpsl
mov
mov
cmpsl
adc
jmp
sbb
fcmovbe
popf
repnz
stc
inc
dec
mov
loop
cmpsb
inc
lock
mov
adc
xchg
shrb
adc
push
push
daa
xlat
mov
insl
gs
jecxz
adc
imul
xchg
out
xchg
call
sub
inc
xor
push
fisubrs
dec
push
mov
mov
std
or
ret
fildll
jae
push
std
jp
inc
xchg
jmp
fnstenv
adc
sub
dec
dec
imul
adc
xor
mov
mov
nop
outsb
mov
push
jno
xchg
loope
xchg
push
xor
pushf
and
lahf
cmc
inc
daa
pop
insl
int3
push
mov
xor
das
dec
dec
gs
mov
jne
mov
pop
in
and
or
call
mov
sub
repnz
jb
mov
outsl
call
outsb
sub
mov
clc
imul
or
into
cmp
dec
test
nop
cltd
sahf
push
or
inc
loope
xchg
push
xchg
adc
fucom
xor
jmp
test
and
dec
pop
mov
andb
dec
inc
jbe
jmp
scas
sub
pop
xor
aam
popa
and
jnp
inc
stc
add
imul
pop
or
or
movsl
imul
or
stos
int
xor
or
out
lahf
je
inc
push
mov
out
rcl
mov
push
mov
leave
nop
imul
mov
lea
sub
sub
stos
in
jo
push
call
cmc
outsb
imul
inc
inc
inc
xchg
out
push
pop
adc
jne
pop
or
or
fstpl
jb
pop
aam
inc
or
call
clc
adc
add
mov
xchg
add
das
sub
mov
lret
xchg
add
jae
jmp
nop
adcb
fistpl
hlt
sub
push
add
inc
dec
sbb
push
loope
dec
jmp
mov
pop
mov
pushf
outsb
jp
sub
xchg
repz
push
push
push
mov
movsl
mov
idivl
mov
and
or
mov
sub
mov
add
jecxz
loopne
add
fstps
dec
cmp
lret
inc
lea
bound
lret
fmul
cli
dec
ds
push
in
add
dec
aaa
xor
bnd
push
cltd
dec
inc
test
sbb
jne
and
imul
xorl
xchg
cwtl
push
mov
mov
mov
inc
sub
stos
jmp
and
inc
add
rorb
subb
pop
jmp
fwait
mov
pop
push
rolb
rorb
jge
lds
jo
addr16
mov
leave
std
mov
pop
dec
push
add
jmp
dec
mov
rcrb
call
or
xchg
xor
xor
push
repz
cmc
pusha
lahf
bound
cmp
test
jmp
lret
cmp
lea
jmp
aas
adc
sbb
test
mov
push
stos
cmp
icebp
push
inc
call
aaa
test
xchg
loopne
jle
mov
pop
push
mov
loopne
cld
sub
jmp
cmp
or
xor
add
sbb
mov
arpl
test
sbb
test
jmp
daa
inc
dec
push
mov
sbb
adc
lods
mov
aaa
push
mov
notb
arpl
flds
or
sub
or
imul
mov
fsubrp
pusha
sahf
imul
out
or
jae
stc
jns
mov
pusha
test
lcall
ljmp
lret
lods
or
xor
sbb
fwait
in
lea
sbb
xchg
lret
or
fwait
push
loop
das
movsl
add
aad
dec
pop
data16
add
and
push
loope
mov
xorb
cli
cmpsl
and
mov
pop
fwait
xor
jmp
add
and
pop
push
push
push
and
cmp
add
mov
stc
js
dec
inc
mov
jecxz
in
cmp
mov
enter
gs
aaa
jmp
cwtl
pusha
inc
and
sub
cmpb
pop
mov
cs
adc
add
dec
push
adc
mov
adc
add
adc
cmpsl
dec
in
mov
and
mov
call
mov
out
call
push
xor
or
mov
mov
jmp
add
sub
push
fcompl
jo
push
dec
in
dec
fisttpl
nop
mov
int3
push
and
div
push
pop
or
rcrl
insl
push
jecxz
adc
les
daa
cmp
adc
ljmp
push
insl
mov
or
aaa
stos
jmp
ret
leave
adc
dec
mov
and
out
mov
xlat
lahf
add
subb
dec
bnd
xchg
out
nop
push
enter
xor
pop
bound
jno
xor
jns
cmpsl
nop
mov
lods
inc
pop
cld
mov
sub
outsl
jmp
push
xchg
loop
sub
dec
scas
or
mov
popf
pop
aaa
adc
sub
adc
and
mov
mov
xor
push
and
fstl
testb
pop
push
dec
ja
cwtl
add
out
pop
add
inc
push
pop
repz
jbe
sub
in
jo
sub
xor
mov
push
and
hlt
shll
push
mov
push
mov
xchg
inc
sbb
int
icebp
xor
out
xchg
mov
cltd
popa
cltd
test
xchg
xchg
and
or
cltd
clc
xor
loop
or
inc
ds
mov
mov
pop
or
cmp
cmpsb
in
mov
xlat
dec
addr16
dec
pop
mov
xor
or
sub
shll
addr16
pop
or
sahf
in
mov
dec
fwait
add
sub
ss
jb
in
call
cmp
cmp
fistpll
mov
pop
mov
mov
and
xorb
pop
sbb
jns
add
mov
sub
sub
or
insb
scas
ret
jns
mov
sbb
lods
imul
mov
call
fsubs
jmp
and
jmp
cmpsl
adc
call
test
push
mov
push
cli
in
xchg
add
btl
xor
mov
mov
inc
cs
movsb
call
sar
les
stos
dec
int
ficoms
out
dec
mov
xchg
nop
adc
mov
mov
lret
mov
add
dec
jb
loopne
ja
lods
ja
fiaddl
mov
pop
and
add
clc
jb
shrl
add
dec
push
adc
ret
cmp
add
scas
pop
or
ret
loope
xacquire
movsb
cld
jg
lea
jb
mov
icebp
inc
dec
lahf
add
lds
dec
divb
outsb
jl
sub
daa
aas
or
test
or
shlb
mov
out
rolb
sbb
pop
arpl
mov
sbb
sbb
or
popa
sub
xchg
push
jbe
cmp
and
or
sbb
cmpsl
adc
hlt
dec
mov
fimull
jns
pop
call
in
lcall
mov
idivl
push
xor
call
push
push
popf
jge
repz
lea
sub
notl
pop
inc
bound
imul
mov
or
in
inc
dec
xor
jmp
mov
and
or
dec
call
repz
fadd
insl
aaa
call
mov
aam
xchg
jecxz
xchg
scas
cmc
pushf
sbb
dec
cmp
add
sti
test
inc
gs
rcrb
jmp
add
jbe
and
push
sbb
cmpsb
enter
and
xorb
jno
call
pop
cmp
mov
lea
stc
fistps
data16
rol
inc
in
mov
ja
xor
mov
add
add
push
add
mov
shll
lods
push
push
repz
lods
sub
inc
in
xchg
aaa
out
sbb
push
dec
mov
fstpt
cmp
test
pop
dec
leave
push
fimuls
nop
flds
pusha
lahf
lcall
xchg
inc
xor
movsl
push
orb
push
repnz
cmp
or
sti
jmp
or
in
int3
rcll
repnz
shlb
mov
or
or
push
les
sbb
testb
pop
loopne
mov
arpl
insl
sbb
mov
rcr
in
popf
jnp
cmpl
add
inc
test
inc
int3
inc
dec
daa
add
dec
and
into
and
add
push
mov
call
das
push
xor
adc
adc
loop
scas
mov
push
pop
mov
xor
ds
push
mov
push
shrb
xor
lret
addr16
inc
pop
cmp
scas
subb
nop
pop
incl
das
and
and
xor
push
xchg
popa
mov
sub
ja
pop
jle
movl
and
loop
mov
mov
nop
fstps
pop
mov
scas
inc
out
fwait
xchg
loopne
mov
orb
adc
adc
bound
pop
dec
adc
popa
aam
mov
mov
out
subb
push
or
ljmp
push
jmp
idivb
test
and
lock
imul
or
jmp
mov
mov
pop
lcall
jle
xor
jbe
push
outsl
xchg
push
mov
or
ret
jnp
loop
cmpb
enter
loop
sbb
or
std
movsb
mov
imul
in
fs
push
jnp
movsl
ret
jp
lret
sarb
pushf
cmp
out
add
fs
pop
loop
leave
sbb
pop
in
les
inc
adc
add
adc
jb
inc
cmp
insb
movl
mull
xor
les
mov
andb
jne
lea
mov
push
test
jecxz
jns
mov
ds
push
or
lods
cmp
jge
and
pop
outsb
add
mov
enter
cmp
jo
jmp
ficoms
add
insl
aad
in
sti
adc
jbe
push
into
xor
jmp
pop
mov
pop
negl
xor
adc
loope
popl
std
test
rolb
push
push
xor
dec
daa
mov
mov
add
mov
insb
pop
das
xchg
into
bound
out
out
lock
jecxz
shll
pop
mov
fs
cwtl
in
hlt
aas
pop
call
pop
jle
inc
into
adc
cld
mov
cmp
push
adc
or
sub
and
mov
inc
repnz
enter
ds
xchg
inc
push
fsubr
outsb
or
push
imul
jle
das
add
clc
push
mov
adc
out
inc
int3
inc
xchg
push
movsb
bswap
push
mov
lods
sbbl
mov
test
jo
jo
movsb
mov
xor
aaa
out
mov
sbb
out
std
or
nop
call
stos
les
mov
push
or
hlt
call
mov
cmpsb
sub
jno
hlt
sahf
cwtl
push
aaa
lods
or
test
addb
xchg
mov
inc
imul
add
inc
fldlg2
fs
dec
fwait
call
inc
add
mov
movsl
fsts
scas
jge
push
mov
out
pop
push
hlt
jmp
out
rorl
mov
mov
pusha
push
mov
add
movsb
pop
mov
jle
inc
dec
mov
adc
stos
imul
es
add
xor
loope
push
dec
popf
cwtl
xchg
jl
inc
std
mov
icebp
or
clc
pusha
xchg
in
inc
mov
stc
mov
xchg
pusha
push
push
inc
mov
mov
jae
dec
dec
cmp
enter
sub
cld
dec
xchg
jecxz
mov
xor
add
or
ret
xchg
pop
xor
mov
in
icebp
xchg
pop
popa
cmpsl
enter
dec
or
jmp
add
fistps
mov
pop
rorb
mov
and
imul
push
inc
push
add
push
xor
mov
test
mov
ss
int3
mov
push
ftst
es
xor
mov
inc
ljmp
push
jmp
nop
clc
int3
dec
mov
xor
shll
xor
rcr
cmpb
pop
hlt
sub
js
xchg
sbb
jns
fwait
xchg
jle
inc
jmp
pop
mov
pop
roll
mov
sarl
jns
jno
and
pop
test
inc
add
cmpsb
loope
std
hlt
arpl
repnz
pop
jb
ret
shrb
pop
test
pop
sub
pop
push
subl
cmp
inc
jmp
in
pop
push
daa
xchg
shrb
imul
bound
je
out
jmp
mov
sub
mov
push
xor
aaa
call
jge
jmp
mov
movsl
and
lea
dec
xor
mov
xor
inc
test
adc
cli
xor
ret
cmpsb
jecxz
xor
lds
repnz
cli
jecxz
sub
xchg
push
lahf
mull
push
push
call
xor
mov
dec
push
add
inc
inc
test
icebp
dec
mov
scas
out
mov
bound
test
dec
int3
ljmp
fisubs
adc
pop
mull
push
and
or
enter
pop
xchg
js
ds
repnz
inc
fwait
enter
xlat
aad
loopne
rorb
lods
push
jmp
and
fucomp
bsr
dec
xchg
lock
adc
push
inc
iret
adc
jae
cwtl
mov
or
pop
sti
push
rorl
or
xor
cli
push
add
jmp
xchg
call
pushf
cmp
fnsave
add
sub
flds
shl
or
mov
or
jne
push
xchg
mov
in
jno
mov
sub
das
cs
mov
xchg
iret
mov
out
adc
xor
and
push
clc
push
or
stc
xchg
fsubl
leave
jb
pop
in
or
mov
push
std
xor
push
sub
sub
xor
imull
jbe
or
push
xor
push
jnp
aas
xchg
inc
pop
ret
ja
adc
jmp
sahf
jmp
je
inc
push
cmpsb
popa
fcoml
push
call
lcall
xchg
jle
jo
push
les
out
sub
or
mov
push
lds
out
dec
test
fcmove
jg
popf
mov
mov
jmp
test
push
push
xchg
sub
stc
mov
nop
imul
mov
inc
dec
push
mov
testb
mov
std
test
pop
pop
call
mov
sti
lcall
add
push
mov
jno
xor
clc
dec
in
pop
loop
pop
push
add
push
and
lds
and
and
push
add
push
sub
stos
mov
call
xchg
inc
mov
shlb
scas
das
inc
sbb
inc
xor
add
fadds
xor
mov
mov
sbb
push
into
and
divb
lret
pop
sbb
testl
das
pop
push
push
or
inc
inc
or
pushf
pop
mov
ja
add
std
xor
pop
adc
imull
jnp
and
icebp
testb
pop
outsl
sbb
inc
adc
mov
or
xorb
mov
inc
jmp
mov
daa
shrb
inc
jb
dec
or
mov
cmp
mov
and
daa
les
stc
in
pop
addl
popl
xchg
jno
imul
pop
jecxz
pusha
push
push
inc
dec
sbb
sbb
jnp
inc
call
aas
inc
sarl
mov
xchg
or
aas
mov
popf
inc
lcall
pop
pop
xor
sar
test
dec
push
inc
mov
aaa
add
cld
inc
push
lret
std
addb
test
and
push
xchg
sti
jp
test
add
push
out
push
push
jmp
cmp
dec
sbb
jmp
jl
imul
adc
cmp
das
xorl
push
dec
aas
or
pushl
aas
mov
push
jnp
lea
fwait
adc
popf
inc
adc
or
fildll
jl
cmpsl
imul
jmp
mov
clc
jg
out
repnz
push
push
mov
or
mov
pop
dec
mov
mov
add
mov
scas
shl
movsb
icebp
mov
call
adc
push
lcall
xchg
ret
test
xchg
shll
out
lcall
add
mov
lock
insl
sti
imul
cmp
or
fcomi
fcmovu
ljmp
or
mulb
or
pop
lods
add
dec
stos
insb
pop
pusha
shr
bnd
out
sub
sti
loopne
ds
fldcw
pushf
cmp
arpl
lahf
sbb
ja
loope
push
rcrl
or
add
cld
inc
xchg
loope
sub
mov
push
dec
xor
pop
or
cmp
xor
mov
and
xor
lret
inc
adc
xlat
mov
inc
xchg
pop
in
lods
xchg
call
cmp
popf
adc
mov
dec
sub
cmpsl
cmp
vhaddpd
lods
std
sub
adc
xchg
jp
mov
jno
test
in
cwtl
mov
sub
gs
sbb
add
jg
and
cli
jp
mov
pause
mov
scas
jb
fs
pop
inc
mov
xor
xchg
or
mov
xchg
xchg
adcb
int
adc
mov
sbb
pop
repz
loope
sbb
add
push
adc
sbb
sub
xorl
push
divl
xchg
or
jne
std
pop
and
stos
xchg
and
mov
xchg
add
inc
xchg
mov
clc
xor
call
push
das
in
js
pop
cmpsl
xchg
xor
xchg
cwtl
add
xchg
push
adc
pop
mov
das
popa
xor
shl
xchg
mov
add
clc
push
inc
movsl
xchg
subb
mov
cwtl
jl
lods
sbb
cmp
add
xor
ss
and
and
dec
cmp
push
dec
stos
fcomps
roll
rcr
sub
xor
xchg
sub
testl
stos
adc
sahf
dec
cli
push
sbb
adc
jo
movsb
mov
push
mov
adc
leave
lock
mov
mov
mov
jmp
sbb
stos
sub
rolb
setne
jmp
pop
cmp
sub
jmp
aam
sbb
push
pop
mov
je
cmp
aaa
dec
and
repnz
ja,pn
xchg
sar
push
mov
xchg
pop
xchg
scas
jg
inc
xorb
xchg
loope
pop
push
mov
jmp
sbb
ret
add
jle
mov
and
loopne
dec
nop
movsl
sbb
cmpsb
cmp
fsubrs
add
fs
lods
inc
add
outsl
lods
nop
test
xlat
arpl
xchg
cld
je
push
cmpsb
pop
fadd
add
das
mov
hlt
mov
or
mov
sbb
sbb
mov
or
or
mov
inc
jp
mov
adc
mov
mov
pop
add
in
jbe
cmp
push
pop
mov
data16
mov
mov
loopne
rcrb
loope
xchg
add
push
or
mov
sahf
adc
pop
push
call
lods
mov
in
dec
or
je
push
pop
aaa
push
sbb
fxch
stos
mov
push
inc
add
push
or
sti
sti
xchg
addb
jl
sbb
pop
lods
lods
pop
out
xlat
xor
push
xchg
testl
add
mov
push
fisubs
sbb
and
dec
shr
mov
or
push
push
insb
xor
push
mov
sub
scas
sbbb
pop
cmp
mov
in
pop
lahf
int
ficomps
xor
pop
pop
push
ja
fdiv
jmp
xor
jle
xchg
adc
sub
mov
or
leave
add
mov
jg
add
outsb
jmp
cmp
enter
inc
xchg
jbe
insb
pop
enter
aam
inc
dec
inc
hlt
dec
mov
mov
stos
std
push
mov
sahf
xor
out
hlt
test
mov
mov
lock
pop
jmp
aad
lahf
push
gs
inc
lret
push
inc
xchg
push
ret
mov
popa
and
or
xchg
ljmp
rolb
sbb
mov
push
int
push
xor
push
mov
ja
add
test
and
sbb
jl
sub
cmp
test
push
jnp
pop
push
dec
stos
inc
inc
jmp
and
repz
push
cli
addl
xor
push
add
or
in
jno
ret
jae
jo
pop
sbb
jl
pusha
lock
addb
int3
cwtl
pop
mov
xchg
push
inc
rcrb
jg
insb
daa
mov
jo
loop
and
inc
or
je
dec
movsb
xchg
daa
pop
fistps
jge
ljmp
scas
jl
dec
jge
std
lahf
cmp
mov
out
lahf
pop
sbb
jecxz
nop
in
call
pushl
popf
jge
sbb
or
push
repz
das
cli
mov
cmpsl
jmp
lods
add
mov
jp
neg
push
pop
sahf
mov
or
rcrl
insl
pop
aad
iret
nop
imulb
lods
gs
test
lcall
xchg
jle
pop
dec
pop
sti
test
and
ret
sti
cmp
sub
pop
cwtl
xchg
sub
pop
cmp
sub
ficoml
movsb
adc
push
stos
xchg
cld
test
in
andl
insb
sbb
int
mov
aam
sub
push
cmpsb
repz
call
lods
mov
cmpsb
aas
fadd
out
in
outsb
xchg
pop
loopne
out
nop
fstl
push
mov
popf
dec
adc
add
aam
mov
cmp
scas
sahf
mov
push
sub
mov
rcrl
cmpsb
cmpsl
sbb
test
stos
test
aaa
dec
popf
or
xchg
mov
inc
addr16
enter
inc
je
jno
repz
pushf
push
loope
jne
aas
jb
jg
test
push
jp
add
inc
hlt
add
pop
insb
sti
or
inc
mov
sub
xor
jmp
jl
sub
pop
or
jmp
jb
aad
xor
repnz
ss
xchg
pop
into
popf
xchg
fsubrl
sbb
jmp
push
fldt
add
xor
inc
mov
pop
cs
dec
int
test
leave
lea
or
add
or
dec
xor
jnp
call
add
mov
and
ret
or
fstpl
mov
das
cld
push
lock
mov
sbb
mov
fbld
inc
std
inc
jbe
push
mov
mov
shll
pushf
imul
jmp
call
mov
pop
mov
icebp
or
enter
ficoms
mov
mov
push
aaa
jmp
decl
adc
ret
adc
mov
push
pop
aas
mov
dec
std
clc
lods
pop
pop
lcall
adc
addb
dec
sub
sti
xchg
into
dec
mov
pop
mov
mov
lret
in
jb
call
xor
jno
cmp
cmp
insb
fwait
sub
test
inc
xchg
or
popl
repnz
adc
xor
fsts
jecxz
mov
test
jmp
divl
out
add
mov
les
push
out
stos
add
call
or
jb
fisubs
stos
pushl
adc
lahf
xor
pop
repz
push
sub
push
add
and
das
jno
cmp
iret
call
je
dec
sub
call
cmpsb
xchg
loope
call
mov
cmp
add
or
mov
inc
xchg
or
dec
mov
das
mov
mov
cmp
mov
mov
mov
fcompl
sub
mov
ja
out
push
stos
xor
mov
pop
mov
or
insb
pop
testb
scas
aaa
ja
andb
pop
inc
mov
shl
ljmp
push
jb
out
icebp
sbb
add
outsl
or
push
inc
mov
rolb
cmpsl
cmpsb
mov
cli
pop
jmp
icebp
sbb
pop
je
outsb
push
push
mov
cli
sub
inc
inc
ficomps
cmpsl
sub
fsubrl
fisubrs
nop
add
lret
and
fs
rolb
xchg
adcb
mov
addr16
inc
sahf
rcrl
aad
addr16
ret
xor
daa
dec
pop
outsb
pushf
jmp
ret
jmp
subb
sbbl
xor
dec
xor
dec
cs
dec
dec
ljmp
or
add
or
sti
jp
cld
xor
repnz
pop
aad
pop
psubsb
data16
inc
push
pop
adc
movsl
adc
mov
dec
sbb
jo
xchg
outsb
iret
lcall
cmp
inc
inc
dec
testl
mov
imulb
lret
push
repnz
call
pop
in
inc
jmp
enter
add
mov
mov
xchg
cli
add
cmpsb
cmp
xor
loope
cltd
xchg
fidivrl
daa
mov
repnz
dec
outsl
aad
adc
cmp
mov
cmp
fdivl
adc
mov
mov
and
cld
push
xlat
jp
mov
addl
adc
cli
repnz
call
cmc
into
call
inc
push
stos
cmp
dec
out
cmp
or
cmc
push
pop
cmpsb
push
cmp
mov
xlat
test
mov
push
xor
loope
lahf
push
stc
enter
xchg
data16
inc
mov
shr
cmp
sbb
jmp
lahf
fiaddl
pop
pop
subps
mov
xchg
add
jl
scas
idivl
sub
mov
lcall
push
jp
test
jbe
test
jl
inc
xor
je
mov
sbbb
mov
jno
sub
imulb
and
jmp
insb
or
inc
inc
call
out
and
dec
add
sub
or
jg
xchg
pop
lods
cltd
scas
and
or
xor
scas
ja
testb
sub
loope
shr
jp
cs
cld
mov
inc
mov
out
xor
push
mov
sub
xor
mov
mov
sbb
popa
mov
pop
pop
sub
rcll
stc
jecxz
les
jb
arpl
push
rcll
jbe
repnz
mov
jb
aad
popa
xlat
scas
sti
or
mov
push
popa
jbe
jns
mov
les
xchg
push
adc
sub
movsb
sub
cmc
mov
push
scas
inc
add
mov
mov
mov
mov
jmp
xchg
push
jb
push
push
sbb
sti
call
int3
inc
adc
rolb
je
repz
shr
inc
inc
stos
or
xchg
cmp
aas
inc
icebp
fs
int3
stc
add
stos
mov
int
pop
jp
mulb
cli
push
pop
cmp
test
cmpb
lods
mov
call
dec
jecxz
sub
add
mov
addr16
cs
xor
jge
dec
or
lods
clc
data16
or
divl
cmp
cmc
xchg
outsb
sti
sub
cltd
add
add
lock
dec
jae
data16
jmp
call
or
loop
sbb
sub
enter
pusha
xlat
adc
inc
sbb
dec
jbe
pushf
add
pop
roll
adc
jg
pop
lods
fidivrl
adc
push
push
daa
push
mov
lock
push
jb
lea
jbe
xchg
mov
cwtl
insb
mov
push
pop
jg
xchg
lret
push
mov
mov
insl
sbb
push
fwait
mov
pop
inc
mov
lods
adc
std
add
pop
call
int
sahf
pop
dec
mov
mov
jge
addr16
and
mov
sub
sbb
repz
pop
fsubl
jmp
int3
push
mov
inc
mov
call
adc
jmp
popa
imul
jno
bound
sub
lock
cmpsl
push
lods
jo
add
comiss
int
add
lods
xchg
jo
xor
out
cld
sbb
mov
cltd
lods
push
jb
movsb
ror
mov
cs
adc
jecxz
nop
loope
stc
add
push
dec
push
enter
call
add
jg
push
and
dec
aam
aaa
repnz
mov
cli
ss
sub
jecxz
or
sub
cli
cld
out
mov
aam
lods
daa
inc
mov
dec
inc
mov
mov
push
mov
repz
call
and
cmp
aam
insb
sub
sub
xor
inc
sub
ficompl
icebp
xchg
int
stos
mov
inc
mov
imul
neg
fbstp
inc
cli
das
or
adc
call
sahf
pop
mov
sub
nop
add
inc
scas
adc
out
push
mov
cmp
shl
fbld
mov
ffreep
fldl
mov
jp
pop
movsb
arpl
pop
fdivl
sub
pop
lahf
dec
jne
sar
sbb
pop
icebp
fiadds
dec
mov
das
mov
mov
pop
mov
repz
sbb
lahf
dec
or
xchg
or
add
xor
outsl
fucomi
out
xor
fidivs
sbb
xor
or
lods
fwait
or
mov
jne,pt
cltd
xor
xor
inc
daa
pop
icebp
insl
sbb
inc
mov
xchg
mov
test
es
adc
mov
notl
ret
lea
xlat
addb
outsb
mov
xchg
sbb
mov
js
scas
push
mov
mov
fldt
sub
imul
int3
add
repz
aad
call
inc
daa
or
xchg
rclb
lds
out
mov
mov
or
call
push
add
or
ja
mov
leave
sub
int3
jl
mov
sbb
xor
mov
pop
xlat
or
sub
in
jge
cmp
sarl
in
push
dec
scas
add
sub
mov
sub
cwtl
clc
subb
lods
mov
adc
jl
aaa
sbb
jg
mov
test
sub
inc
leave
cwtl
sbb
nop
push
lcall
int3
adc
test
mov
inc
cmp
mov
mov
add
hlt
mov
sub
dec
idiv
push
adc
or
pushl
mov
daa
call
fcmovnbe
or
or
or
stc
mov
push
lea
dec
out
cmpsb
mov
das
push
daa
xlat
mov
cwtl
roll
dec
mov
mov
test
mov
xchg
lock
mov
dec
pop
or
enter
dec
ret
scas
xor
fisttpl
lock
test
aas
mov
push
jg
pop
add
data16
dec
dec
andl
or
std
in
mov
pop
sub
dec
xchg
jmp
cmp
cmp
xchg
stos
ljmp
inc
or
arpl
cmc
out
mov
shrb
sti
jl
fldenv
mov
cmp
cli
sbb
bnd
jne
push
inc
ja
insl
or
sbb
mov
inc
dec
movb
dec
jmp
ss
fcompl
jns
icebp
and
xchg
pop
pop
dec
ss
mov
sbb
loop
sbb
pop
xchg
sti
pop
push
dec
add
mov
sub
out
pusha
lret
mov
mov
cmpsl
icebp
xor
ss
daa
mov
pop
cltd
mov
cs
and
insb
push
sub
dec
gs
push
push
iret
mov
out
test
ret
mov
xchg
mov
andl
add
les
cmp
dec
lret
das
push
lret
imul
dec
push
push
add
cmc
mov
popf
int
arpl
pop
cmp
jge
fs
daa
pusha
xor
in
and
jecxz
push
mov
add
pop
out
or
movsl
vhsubps
test
shrl
push
pop
add
mov
adc
movsb
xchg
jmp
xchg
dec
lahf
push
mov
addr16
rorb
repnz
pop
mov
dec
aad
fistps
je
dec
fisubs
lahf
int
push
ja
loop
inc
jb
lods
cli
mov
nop
pop
jno
mov
push
jb
xchg
pop
pop
push
adc
jb
inc
add
fimull
cli
in
push
ficomps
xor
cmp
xchg
jne
xchg
popa
bound
jmp
in
inc
pop
mov
ret
lods
push
mov
pop
call
push
xor
js
inc
push
jp
pop
jns
daa
nop
mov
inc
call
push
or
fbld
mov
mov
sbb
fadd
mov
test
push
mov
cli
jb
pop
inc
lods
mov
jmp
push
push
out
mov
push
inc
or
add
mov
inc
std
or
jp
mov
ja
xchg
inc
fdivl
sub
mov
int3
or
out
scas
fnstcw
pop
adc
mov
pop
inc
call
out
sub
adc
cmp
scas
into
cs
push
cltd
repz
xor
sbbl
jmp
adcl
fdivr
pop
add
add
jmp
pop
subb
mov
icebp
dec
mov
jb
adc
in
push
adc
jp
push
mov
jmp
jb
fnstcw
rorb
push
sub
sub
popf
push
daa
cmpsl
add
dec
pop
adc
fidivs
call
dec
imul
push
mov
ss
pop
lret
adc
push
repnz
jb
jecxz
das
mov
call
inc
dec
je
test
sbb
sahf
push
xor
in
iret
jnp
test
push
jmp
in
mov
ss
push
icebp
mov
push
call
in
jno
les
sub
lds
sub
cmpb
call
add
arpl
xchg
sbb
test
and
movsb
shrl
mov
adc
ja
add
stc
or
jne
xor
les
popa
and
mov
dec
test
pushf
rep
mov
sbb
cmc
dec
add
in
aaa
inc
push
or
adc
mov
not
fidivrl
enter
inc
mov
mov
movsl
jbe
inc
scas
addr16
sbb
call
add
cld
jmp
lahf
ljmp
test
call
bound
pop
call
out
jnp
mov
movsl
mov
mov
push
and
call
aad
mov
scas
push
push
adc
pop
push
je
sub
cmpsl
push
dec
mov
cmpsl
out
jo
jo
addr16
jbe
pop
pushl
dec
repz
hlt
sub
daa
les
mov
xchg
sbb
test
mov
mov
lret
push
fwait
mov
xchg
inc
mov
scas
aam
or
push
mov
imul
sahf
inc
sbb
mov
and
sbb
and
jno
pop
cmc
sbb
sub
adc
xchg
adc
or
or
dec
fdivr
shrl
push
adc
dec
pop
pushf
and
popf
xor
addr16
push
dec
push
inc
stos
data16
mov
les
mov
mov
pop
or
scas
call
aas
add
push
pop
xor
and
dec
push
test
nop
call
stos
and
push
push
out
andl
inc
mov
popf
sti
pop
leave
cli
mov
loope
aad
daa
rcrb
out
push
jle
pop
mov
call
pop
xor
les
jno
xor
addr16
sti
add
pop
pusha
add
mov
in
jge
dec
test
sbb
xorb
xchg
mov
inc
mov
in
call
addr16
mov
push
test
mov
rolb
and
pop
jno
dec
fsub
cmp
and
sbb
aaa
mov
js
cmp
pop
mov
lahf
stc
pop
or
call
pop
add
cmpsl
lret
std
push
ss
jmp
repnz
mov
xchg
jo
push
sbb
xchg
nop
sar
xor
lret
andb
xor
inc
xchg
insb
sbb
xchg
mov
sarl
in
pop
push
inc
add
outsl
mov
cmp
or
push
xlat
dec
std
in
test
inc
es
mov
pop
out
int3
add
int3
daa
sub
push
jle
les
mov
call
push
adcb
sbb
loop
aaa
adc
push
inc
mov
inc
cmp
mov
push
push
rorb
das
repnz
lcall
push
insl
out
loopne
outsb
imul
mov
mov
mov
int3
mov
push
mov
or
shll
xor
dec
pop
adc
sbb
fists
push
sbb
mov
outsl
pop
imul
add
inc
lret
pop
jae
mov
pop
mov
int3
loop
in
inc
bound
stos
out
xor
fs
ret
call
test
loopne
push
xchg
ret
mov
cmpsl
rol
mov
loopne
je
pop
fldcw
jle
lods
mov
jge
addl
push
xchg
mov
mov
push
repnz
je
mov
pop
pop
sbb
jg
clc
je
jbe
or
aam
inc
or
mov
call
ds
das
sbb
cmp
push
scas
jns
jb
adc
hlt
push
test
sub
mov
pop
test
leave
psubsb
fsts
ljmp
pop
mov
fs
xchg
dec
sub
mov
push
inc
sti
or
movsl
xchg
xchg
push
xchg
sub
push
stos
aam
addr16
movsl
dec
call
stos
leave
mov
popf
movsb
xchg
or
pop
add
xchg
jmp
daa
or
in
jae
out
in
push
pop
sti
ret
decb
xor
inc
je
cs
test
scas
push
or
mov
js
cmp
fistpl
mov
fbld
mov
cmp
adc
xchg
mov
loope
das
push
out
ljmp
sub
inc
pushf
jae
cmp
or
decl
and
int3
fdiv
fiaddl
and
push
cmpsb
call
ficoms
dec
mov
sbb
sahf
icebp
pop
lret
lea
loope
pop
xor
inc
dec
insl
jb
mov
fs
inc
xor
in
imul
xor
jae
inc
mov
cs
jmp
shll
fldl
arpl
add
push
push
inc
imul
loope
faddl
mov
out
out
xchg
je
sbb
sub
mov
fisubrs
call
pushf
mov
jmp
stos
shrb
out
sub
cmp
out
xchg
mov
repnz
mov
jo
pop
call
daa
jnp
das
stc
add
push
sahf
movsb
les
sbb
add
adc
imul
jle
addr16
push
clc
xor
das
sbb
xchg
mov
xor
xchg
ljmp
cmp
mov
push
jno
sub
cmovae
ljmp
push
hlt
popa
das
ja
push
mov
xor
pop
or
in
adc
pop
jne
mov
xchg
lea
push
or
mov
or
cmc
sbb
out
dec
add
pop
add
cmp
cmp
inc
cwtl
add
sub
adc
and
jmp
and
loopne
ja
das
fisubl
push
mov
mov
push
mov
mov
mov
pop
sti
hlt
stos
or
pop
xor
adc
out
call
mov
call
add
jecxz
inc
sub
mov
push
or
xor
std
cltd
pop
xchg
push
dec
and
das
test
jb
fistpll
jmp
insb
lahf
mov
dec
shl
movsl
xchg
ret
inc
cmpsb
jmp
aad
jo
inc
lahf
jge
push
out
inc
pop
shll
dec
cmp
jo
nop
or
enter
lcall
cmc
lahf
or
bnd
fwait
outsb
popa
mov
xchg
xchg
cmp
jne
fstpl
jg
pop
push
sbb
xchg
mov
push
xchg
mov
push
js
sub
adc
inc
pop
push
leave
in
add
clc
push
bswap
pop
mov
out
repz
aad
pop
fsubrp
jb
rolb
push
mov
mov
mov
nop
mov
sbb
mov
repz
mov
lret
pop
call
stos
inc
jle
pop
mov
dec
loop
mov
cmc
in
andl
enter
gs
pop
cmp
xor
arpl
add
cmp
cld
xchg
ret
int3
pop
xchg
aad
or
decl
adc
daa
jl
lds
mov
bound
fisttpll
cmpsb
shll
aaa
mov
jae
orl
lods
and
dec
das
call
mov
inc
push
jmp
scas
iret
jmp
subb
mov
jmp
stc
faddl
leave
cmp
or
stos
mov
in
testb
xchg
or
loop
xlat
add
push
push
pop
push
push
inc
divl
and
icebp
mov
push
pop
pop
stc
ret
sub
xchg
add
sub
fstps
inc
repnz
dec
add
out
push
jns
jmp
ljmp
or
mov
xlat
jo
cltd
mov
jnp
dec
sahf
sbb
cltd
leave
sbb
mov
stos
dec
or
mov
jle
inc
jae
adc
sbb
lods
adcl
out
add
pop
fmull
xchg
stos
ret
leave
dec
out
push
pop
sbb
les
or
decl
loop
in
leave
cmc
pusha
mov
jge,pt
pop
jge
sahf
or
movsl
mov
mov
std
push
or
jl
outsl
or
or
hlt
sti
cwtl
les
cmp
cld
jecxz
fsubr
push
xchg
leave
lea
not
push
insb
mov
jb
subb
cs
xor
and
cmp
mov
dec
pop
mov
rclb
push
jne
lods
fwait
mov
xchg
add
or
add
sar
stos
shll
pop
orl
inc
mov
out
adc
push
test
dec
mov
push
jle
mov
sub
roll
ficoms
rclb
adc
inc
test
adc
incb
or
cli
sbb
daa
mov
jbe
push
xchg
or
out
clc
push
sbb
insl
iret
cli
outsb
cmc
inc
and
inc
jg
inc
mov
jno
je
adc
or
sbb
pusha
insb
call
mov
add
cmp
mov
lahf
inc
cs
mov
addr16
xor
lret
mov
mov
push
fcom
xchg
lock
jmp
data16
or
sbb
push
xchg
in
jb
insb
push
push
bound
add
cmp
lods
add
push
xchg
ret
call
jmp
imulb
fcoms
xchg
and
hlt
out
dec
mov
idiv
xchg
shlb
fadd
mov
repnz
subl
push
xor
jle
loop
jo
push
push
fnstcw
dec
adc
or
push
lahf
mulb
push
cmpsb
inc
loop
push
in
lea
adc
in
insl
dec
in
jmp
lcall
out
adc
testb
pop
call
pop
cmpb
aas
dec
cwtl
jl
adc
loop
mov
jg
mov
add
sub
out
int
push
pop
fs
mov
lcall
mov
dec
inc
jo
jmp
ljmp
das
xchg
jns
leave
jge
sub
inc
jle
and
add
add
das
enter
in
mov
sbb
icebp
sbb
and
xor
push
adc
mov
pop
jo
or
mov
add
sarl
lock
insl
inc
mov
mov
ja
int
xor
sub
or
mov
jne
jbe
push
add
into
mov
dec
sbb
sub
cmpb
sub
dec
dec
jb
faddl
cmp
jns
mov
add
sub
nop
dec
jnp
xor
divl
mov
pushf
fucomip
inc
mov
jle
mov
hlt
std
imul
mov
pop
shlb
incb
nop
imul
push
add
jmp
cmpsl
test
and
mov
push
idivb
ljmp
ficoml
pop
xchg
adc
in
xchg
mov
jge
cmpb
push
adc
jecxz
daa
inc
cmpl
sub
mov
cs
je
push
pop
ja
cmp
push
in
sti
insb
orb
jb
xchg
mov
dec
cltd
xchg
mov
add
nop
or
test
mov
mov
test
es
repz
repnz
fildl
jnp
add
jns
mov
rcrl
arpl
ror
cmp
inc
add
lret
call
pop
cli
fldcw
cld
jl
nop
mov
mov
dec
hlt
adc
sub
inc
jl
xchg
mov
pop
and
jg
sbb
testb
xlat
subb
mov
icebp
pop
cmp
jge
pop
mov
jbe
sbb
cmp
xchg
or
pop
cmp
sub
fistpl
cmpsb
jp
call
push
mov
and
inc
push
jg
popf
cld
or
and
sub
mov
pushf
clc
outsb
ret
daa
jo
push
popa
dec
mov
call
fwait
xor
es
mov
sub
adc
dec
dec
loope
ss
lods
cli
xor
push
aas
popa
out
push
and
ljmp
and
pop
push
jecxz
mov
cmp
lock
mov
test
adc
inc
dec
movsb
dec
sbb
mov
fmull
test
and
pop
cwtl
or
or
jnp
das
cmp
hlt
mov
sbb
push
clc
cli
jmp
push
mov
int
cli
subl
test
stos
inc
das
fildll
and
xchg
mov
mov
repz
cwtl
or
iret
or
push
or
add
xor
popf
aaa
movsl
addl
pop
clc
rorb
in
test
adc
call
es
mov
mov
outsl
popf
mov
jmp
into
dec
mov
mov
hlt
cmpsl
in
lcall
dec
out
aam
call
jns
cmp
inc
add
inc
mov
hlt
and
add
add
or
add
cmpsb
mov
pop
add
roll
add
lods
insb
aaa
xchg
sbbb
idivl
in
test
lcall
jmp
je
adc
pop
ss
lock
cmp
pop
repnz
out
loop
or
push
pop
jmp
sbb
add
cltd
or
iret
push
mov
mov
std
outsl
popf
sub
pop
mov
or
or
aam
add
stc
rclb
mov
sub
scas
icebp
es
sub
jmp
lea
and
popa
scas
es
add
xor
mov
int3
mov
lcall
push
fldt
ret
std
or
fucom
sbb
jecxz
cmp
stos
test
jno
jns
sbb
add
sub
add
pop
and
in
aas
cmp
sbb
xchg
roll
cli
clc
mov
sub
fimull
inc
or
iret
shrb
sbb
loop
movsl
mov
push
test
std
lock
adc
or
aaa
je
cltd
sahf
xorb
outsb
decl
pop
pop
call
stc
mov
es
cmpsb
and
cmp
add
loope
pop
add
sbb
adc
pop
push
notb
and
dec
and
xor
scas
out
sub
lret
dec
push
mov
jecxz
outsb
mov
pop
pop
push
sbbb
inc
or
add
jmp
sbb
push
push
sub
and
test
ret
out
mov
push
aas
enter
addb
jb
push
daa
lcall
aaa
and
push
xor
push
xlat
in
outsl
bnd
mov
test
cmpsl
jmp
jb
xchg
dec
jno
leave
cmpsl
repnz
lock
push
jae
es
pop
adcb
pop
mull
outsb
rcrb
push
stos
fcomip
jmp
fstpt
loop
dec
enter
mov
mov
push
push
loopne
mov
sbb
add
mov
jl
dec
lea
test
lea
mov
sub
movsl
sbb
loope
jp
mov
test
movsl
mov
push
mov
jmp
sbb
aad
fsub
jg
pop
dec
inc
icebp
addr16
sbb
fwait
xor
call
cmc
and
pop
mov
mov
mov
push
xchg
jo
jp
ror
dec
xorb
cmp
icebp
add
mov
scas
xlat
add
adc
orl
inc
sti
xchg
xlat
fimuls
add
dec
sarb
jmp
adc
or
sbb
cmp
jle
mov
jno
mov
push
sbb
in
and
jmp
mov
flds
test
mov
inc
cmpsb
cwtl
sbb
sbbb
sbb
xor
sti
xlat
sub
sub
lds
sahf
cmc
imul
or
daa
bound
xchg
xor
hlt
jmp
es
shlb
aam
xchg
jge
fistpll
outsl
or
xor
inc
das
pop
push
scas
xor
outsb
adcl
fmull
push
and
loope
mov
xor
adc
cwtl
andl
nop
stc
bound
cs
stos
xchg
inc
and
add
cmpsb
mov
imul
call
mov
jae
pop
add
sub
push
push
fistpl
mov
or
pushf
push
mov
pop
nop
cmpsb
or
dec
add
lock
fisubl
xchg
insb
or
xlat
fstps
and
add
into
int
cmp
jno
jo
sbb
fs
jno
jmp
push
movsl
int3
in
pop
mov
movsb
jecxz
in
and
jmp
in
aad
clc
and
inc
mov
mov
pop
lods
adc
inc
push
cli
repz
jmp
test
sub
call
pop
push
xchg
rdtsc
mov
pop
jbe
aad
push
sub
pop
or
mov
fsubrp
addb
loop
sub
icebp
pop
test
ss
xchg
inc
adc
aam
add
lret
testl
adc
jmp
std
cli
inc
sahf
xor
ljmp
mov
inc
dec
pop
stos
les
dec
mov
shlb
jle
push
push
call
pavgb
jecxz
inc
rcrl
and
pop
popf
mov
ret
jge
fsts
cmp
aam
pop
mov
xchg
pop
icebp
xchg
sub
push
jb
call
int3
mov
into
ja
mov
mov
and
fcomps
int
test
ljmp
add
clc
in
cmpsl
rolb
jle
lea
dec
dec
cli
movsl
in
cld
addb
sbb
xchg
mov
into
or
or
mov
jb
cmpsl
pop
xor
jae
aaa
addb
add
sub
mov
ljmp
jns
jle
jbe
jle
loope
or
xorl
loope
mul
jl
jmp
xchg
pop
loopne
dec
xchg
jb
ljmp
mov
cmpsb
push
pop
fucompp
add
mov
inc
mov
call
int
mov
mov
divb
push
pop
dec
int3
add
push
adc
std
into
mov
cmc
add
pop
dec
mov
jbe
mov
mov
or
shrb
pop
mov
push
mov
sti
or
xchg
and
nop
adc
lcall
lret
std
stos
add
repnz
push
adcb
sub
cmp
clc
or
out
negb
test
mov
rcrb
xorb
dec
dec
push
and
enter
mov
insb
jmp
es
fnstenv
flds
int3
fdivp
xchg
imul
inc
mov
push
sub
and
inc
mov
int3
es
dec
hlt
pop
inc
mov
test
xorb
test
insb
stos
lret
out
movb
divb
pop
call
adc
xor
inc
pop
xchg
inc
lods
movsl
mov
shll
push
test
gs
rcll
call
pusha
push
pop
push
mov
insl
outsb
daa
or
cli
popf
add
push
stos
add
or
jmp
xchg
sti
mov
clc
mov
mov
xor
stc
shlb
sub
dec
mov
nop
sbb
les
mov
jmp
fidivs
xor
stos
push
ret
xchg
aaa
insl
sub
ljmp
fistl
js
clc
out
js
pop
mov
dec
jle
cmp
push
add
dec
mov
mov
mov
cs
add
mov
add
out
loope
cmp
je
push
push
test
jmp
rolb
cltd
jecxz
add
and
sbb
mov
and
dec
push
mov
fidivrs
mov
xor
aam
das
push
and
test
cmpsl
lahf
fisubrs
jns
cmp
cmpsl
jae
mov
in
jb
dec
loop
inc
or
lods
pop
jle
jmp
sbb
or
sbb
inc
mov
imul
out
jo
adc
pop
dec
cwtl
negb
jle
sbb
sub
xchg
mov
das
or
inc
movsb
pop
jp
vprotb
add
frndint
ljmp
add
lds
mov
std
inc
jae
add
imul
test
shll
lret
repnz
loope
or
fldcw
and
lods
out
icebp
pop
jmp
xor
cwtl
sbb
push
mov
mov
mov
dec
mov
adc
add
pop
in
cmpsb
enter
xchg
loop
pusha
sbb
pop
scas
fs
dec
test
shll
mov
mov
add
xchg
pop
or
rolb
repnz
dec
jmp
loopne
js
dec
std
jg
adc
or
rolb
mov
adc
fst
dec
insb
mov
adc
outsl
mov
adcl
cld
aaa
scas
jmp
sti
test
call
lock
mov
pop
daa
mov
lea
jmp
xchg
sti
xchg
test
loop
xor
push
out
pop
jmp
fnstcw
xor
loop
hlt
inc
jmp
dec
pop
inc
xchg
fistpll
into
sbb
push
pop
cli
jge
jno
jmp
mov
jo
mov
arpl
push
dec
rolb
cmp
cli
outsb
xor
pop
or
and
dec
jb
call
cltd
cmp
xor
inc
fcoms
daa
pop
pop
sub
test
call
sub
fwait
pop
jmp
mov
mov
divb
in
repnz
jns
jnp
jb
xchg
pop
lret
in
add
arpl
or
out
jns
jmp
inc
imul
call
mov
mov
sub
ret
scas
inc
pop
dec
cmp
lcall
jg
mov
out
cmc
js
arpl
cli
daa
dec
mov
cs
sbb
jmp
mov
inc
mov
repnz
push
pop
sbb
dec
fisttpl
push
aaa
mov
shrl
cmp
popf
out
mov
pop
cwtl
call
xchg
repnz
mov
ds
pushf
daa
and
xor
push
inc
cld
push
call
into
jmp
test
push
push
mov
aam
sbb
dec
nop
test
call
pop
and
mov
push
inc
mov
push
push
mov
lcall
push
loopne
inc
pop
aas
and
jo
int3
fprem1
into
cmp
or
out
adc
mov
js
add
add
or
mov
aam
push
lret
pushf
fisttps
cmp
gs
gs
ret
dec
in
dec
dec
sahf
shrb
and
ja
testl
mov
sti
pop
lahf
and
pop
xlat
pop
lds
pop
mov
aad
lret
decl
dec
mov
shl
push
mov
dec
mov
cmc
push
stos
mov
pop
inc
andb
mov
out
mov
test
aas
stc
add
jo
ret
inc
lock
push
fnstsw
mov
add
popa
divl
adc
or
mull
iret
lock
xor
xchg
testb
jp
repnz
hlt
cmp
mov
dec
xchg
sbb
xlat
mov
cs
fldl
mov
sub
push
mov
stc
andb
jnp
sub
hlt
mov
add
and
hlt
pop
and
jg
mov
leave
sbb
adc
dec
push
mov
ret
mov
mov
movsb
in
mov
push
mov
inc
orb
push
lods
pop
adc
lds
add
xor
ds
mov
cs
lock
adc
pushf
xchg
push
jbe
pop
ret
mov
add
xor
cmp
das
inc
sbb
bound
enter
push
mov
imul
add
ss
mov
out
out
jne
dec
sub
mov
sub
xor
mov
sub
mov
and
mov
fisttpll
ret
adc
std
xchg
stos
icebp
mov
sbb
test
sbb
jbe
repnz
popa
adc
push
stos
adc
add
jmp
pushf
lea
jecxz
and
push
push
cmpsb
adc
je
notl
das
fsqrt
jge
movsl
push
movsb
lds
sub
addr16
leave
rclb
cld
dec
inc
lret
push
pop
push
sub
or
pop
push
js
daa
int
jb
inc
inc
std
and
pop
iret
and
imul
imul
into
jo
mull
aad
push
in
and
or
push
cwtl
fsubrl
gs
lahf
add
xor
mov
fcmovnbe
out
and
or
mov
dec
sahf
dec
movsl
lock
push
call
psubsw
mov
jnp
ss
cmc
pop
cmc
lods
shrb
js
add
push
push
xchg
out
jb
push
leave
dec
and
push
int
sti
xchg
cli
addr16
pop
ljmp
mov
hlt
orb
roll
xlat
repnz
leave
fbld
mov
or
add
push
mov
movsl
mov
cmpsb
adc
pop
lock
mov
stos
dec
loop
add
lret
movl
dec
sbb
leave
fdiv
aam
lret
sbb
xor
cmp
mov
inc
pop
push
insb
mov
call
mov
imul
cli
push
and
jbe
xchg
fucomip
cmpsb
cltd
cwtl
daa
daa
mov
adc
in
inc
push
pop
mov
rorl
mov
pop
repz
call
xchg
stc
sti
inc
sbb
jns
pop
mov
shll
pop
jns
cmc
adcb
pop
ss
push
mov
and
mov
and
jmp
push
mov
call
subl
and
stos
and
loope
jbe
into
fstl
sarl
daa
in
lea
inc
in
icebp
mov
pop
inc
mov
into
loopne
push
add
inc
push
mov
jmp
ret
call
pop
test
mov
clc
insb
xchg
and
sbb
xchg
inc
pop
cli
into
pop
mov
or
mov
fdivrs
mov
mov
mov
adc
aad
clc
cld
xchg
insl
je
mov
or
cltd
xlat
jnp
scas
enter
bound
call
das
adc
or
push
pop
push
mov
add
or
dec
subb
aas
nop
je
call
pop
mov
int3
sub
or
or
xchg
es
jbe
sub
stos
pop
xor
pop
add
pop
add
mov
stc
repz
or
in
xchg
xchg
xchg
jl
mov
mov
mov
insb
loop
pop
xor
call
stc
sahf
jns
mov
xchg
push
cmp
rcrb
sub
pushl
fs
pop
ret
mov
call
dec
mov
out
mov
cld
sahf
imul
cmpl
xor
sub
inc
fistpll
je
stos
les
push
xchg
notb
imul
popf
ret
push
cmp
pop
and
adc
xchg
push
iret
push
mov
sub
add
test
xchg
sbb
popf
jbe
push
enter
dec
dec
adc
xlat
sbb
call
pop
xor
int3
xchg
mov
or
shlb
add
mov
idivl
movsb
into
push
outsb
addl
xchg
test
add
addb
push
adc
setns
inc
and
push
jo
dec
add
test
jmp
jno
mov
add
pop
call
sub
add
xchg
push
movsl
call
pop
jo
aaa
movsl
xchg
fdivr
inc
stos
mov
pop
das
sub
mov
test
mov
mov
sub
ret
pop
add
push
jns
mov
ds
ja
cmp
test
jmp
cwtl
mov
cmpsl
ja
shll
sub
inc
cld
or
mov
cmp
push
adc
inc
shld
add
adc
or
xchg
ja
ss
push
sbb
cli
xchg
pop
call
pop
and
sbb
jmp
ret
stos
xor
pop
or
dec
cmc
sub
les
jo
cld
mov
adc
aaa
push
pop
mov
stos
or
scas
sbbl
mov
xor
aam
or
call
cmp
cmp
in
dec
xchg
lock
clc
mov
sub
fldl
jbe
and
add
xchg
cmpsb
test
inc
mov
sahf
bnd
jo
push
outsl
push
jno
cli
cltd
inc
daa
jecxz
add
rorb
test
mov
mov
and
mov
dec
push
lods
loope
nop
jle
push
lahf
lret
aad
testb
fdivrl
inc
pushf
lock
jo
cwtl
iret
mov
mov
fs
adc
add
nop
mov
test
inc
out
cld
mov
repz
or
inc
addl
leave
push
stc
xor
pop
pop
ljmp
pop
sbb
mov
add
pop
jmp
lret
daa
insl
data16
aam
xlat
loope
and
ret
xorb
mov
jb
inc
fstl
out
jmp
loop
sub
sub
mov
ret
hlt
sti
fdivrl
sbb
adc
adc
and
int
mov
and
inc
rol
pop
jnp
mov
movsb
jge
std
add
push
shlb
bound
push
jmp
aam
sbb
jb
jmp
inc
mov
mov
inc
push
xchg
push
jg
mov
add
and
add
mov
or
clc
leave
or
pop
lds
hlt
shrb
insb
mov
clc
push
adc
jle
fwait
mulb
xchg
cwtl
jne
push
insl
pop
add
dec
jne
sub
adc
fistps
addb
jmp
cli
sbb
jo
aad
movsb
mov
xor
das
popf
ficoms
push
mov
ds
stos
jno
mov
pop
imul
push
push
mov
mov
xor
jnp
xchg
pop
aad
mov
mov
stos
and
xor
call
sub
arpl
mov
ret
adc
cli
xchg
xor
xor
ljmp
dec
movb
ljmp
and
hlt
sbb
fsubrl
mov
adc
adc
push
faddp
cmp
mov
addb
mov
mov
rcl
repnz
insb
out
jmp
jg
sub
sub
stc
cmp
sti
push
jmp
pop
jno
mov
xchg
mov
mov
sub
jnp
and
cmpsl
or
icebp
jle
inc
in
imul
sbb
push
dec
sbb
pop
xchg
into
nop
pusha
dec
inc
or
out
jae
lahf
sbb
lea
pop
push
cmpsl
cmp
cmp
push
push
cli
or
xlat
dec
pushf
inc
jo
mov
mov
xor
rolb
enter
jae
lea
imul
rclb
pop
les
hlt
dec
push
cmp
and
inc
ss
stos
cli
lea
sub
les
pop
pushf
dec
pop
call
es
inc
scas
xchg
sub
es
mov
inc
mov
add
sbb
mov
cmpsb
inc
sbbl
inc
mov
sub
test
lret
jbe
aaa
sbb
adc
fcom
cwtl
call
loopne
jmp
jno
xlat
inc
adc
push
or
inc
and
pop
xchg
shl
ficomps
xchg
mov
sbb
lret
mov
or
call
lock
sahf
sbb
mov
rcrl
lds
lock
mov
mov
leave
repnz
into
jg
cmp
sub
xchg
das
or
add
mov
int3
sub
dec
lea
fwait
push
test
xorb
adc
repnz
xor
pushf
cmp
popa
dec
or
es
pop
ljmp
jg
xchg
fdiv
cmc
mov
push
call
xchg
inc
arpl
inc
aas
adc
loope
cmp
mov
jno
add
adc
fisttps
leave
out
lock
mov
mov
lahf
sub
mov
add
mov
add
mov
xor
js
cmp
stos
mov
test
mov
mov
or
and
clc
lds
mov
xchg
mov
dec
push
push
pop
repnz
scas
xchg
and
cmp
jb
mov
xor
mov
or
sbb
jmp
and
push
sub
add
jb
pop
dec
inc
sbb
stos
mov
pop
inc
jnp
mov
testb
xor
hlt
cwtl
adc
sbb
dec
mov
dec
mov
mov
pop
call
jmp
or
gs
adc
out
mov
or
jmp
push
pop
mov
adc
fwait
int3
xchg
lret
cld
icebp
xor
call
adc
les
pop
inc
loop
mov
iret
push
sub
cmp
fadds
adc
mov
jae
call
push
fdivrl
push
movsb
push
subb
jae
into
test
xchg
pop
cli
pop
stc
les
aam
mov
inc
insl
daa
adc
inc
or
hlt
cmp
mov
sti
add
xchg
add
jmp
pop
cld
or
inc
mov
or
mov
loopne
jge
jmp
and
mov
push
mov
jmp
shlb
call
inc
add
mov
fmull
sbb
mov
adc
sub
imul
adc
sub
jno
dec
rorb
int3
mov
jns
xor
mov
mov
subl
pop
movsb
push
ret
jmp
mov
addr16
or
into
lock
jb
sub
dec
std
repnz
leave
into
add
push
call
jns
jmp
shll
dec
repnz
imulb
rolb
iret
mov
icebp
sub
mov
jno
push
and
adc
loopne
in
mov
xor
sti
decb
sub
adc
ss
lds
loop
lock
and
test
cmp
jge
fnstcw
sbb
dec
inc
aas
fcompl
mov
inc
pop
daa
test
sub
sbb
pop
addb
inc
push
pop
push
push
insb
push
lcall
dec
sahf
and
test
movsb
jnp
add
sbb
and
lcall
or
dec
pop
nop
test
ds
mov
inc
inc
mov
and
xchg
aad
iret
js
ret
or
test
es
xor
jmp
xchg
lea
mov
push
pop
andb
add
imul
lahf
pop
xchg
push
mov
xchg
int3
rolb
add
cmp
cmc
fsubp
mov
cli
and
adc
fmull
outsl
stos
xor
mov
enter
in
mov
push
sbb
je
call
inc
outsl
cmp
mov
dec
call
or
adc
pop
dec
add
push
adc
inc
mov
and
adc
ror
cmp
push
iret
sbb
shr
sar
mov
clc
fbstp
xchg
push
xchg
adc
xor
inc
ret
cmpsb
pop
jecxz
jb
push
test
pop
stc
pop
lock
mov
add
enter
cmp
in
nop
mov
inc
mov
fcomp
ja
push
mov
movsb
lock
sub
imul
xor
int3
cmpsl
lret
xchg
rcrl
or
add
rcrl
mov
sbb
sahf
xor
push
test
xor
out
push
fstpt
jge
jno
mov
mov
in
test
test
dec
push
sub
add
pushf
aas
int3
pop
into
lahf
or
test
xlat
and
jb
adc
pop
fimull
int3
insl
cld
pop
dec
xchg
int
cmp
aad
and
push
pop
or
in
jo
add
fsts
inc
push
push
sub
dec
and
dec
xor
jmp
and
mov
lret
pop
cmpsb
das
dec
cmc
jp
pop
mov
lcall
test
fwait
lret
mov
pop
dec
enter
pusha
clc
mov
mov
pop
mov
mov
pop
xor
inc
pushf
lret
mov
sarb
loop
es
add
or
ss
push
xchg
imull
dec
jmp
mov
xchg
popf
cwtl
mov
xchg
push
add
mov
push
xchg
push
ds
xorb
cmp
push
incl
lret
mov
or
sbbb
fldcw
push
stos
int
mov
repnz
pop
xchg
sarb
push
add
mov
xchg
jb,pt
test
imull
add
pusha
lea
lret
mov
jo
cmp
sbb
cmp
jo
mov
inc
add
stc
icebp
and
cld
adc
pop
fdivs
call
bound
flds
xchg
out
add
jg
test
xchg
arpl
mov
fs
dec
movsl
xchg
pop
sahf
mov
aaa
les
add
repz
push
les
je
inc
into
test
out
sbb
lret
pop
mov
lods
pop
push
mov
stc
rolb
das
jo
inc
push
cs
pop
dec
dec
test
fldl
or
pusha
cmpsl
and
aam
xor
arpl
pop
jle
rol
inc
nop
xor
xor
les
fidivrl
inc
push
dec
and
sub
test
pop
mov
pop
mov
movsb
xchg
lods
inc
xchg
mov
or
outsb
mov
jmp
fisubs
push
sbbb
jg
movsl
push
cli
lock
in
icebp
test
dec
push
mov
insb
jp
sub
add
pop
cwtl
insb
sub
clc
enter
popf
jb
and
fists
lahf
daa
push
dec
popa
fildll
cmpsl
out
or
pop
ljmp
jo
lret
jle
dec
js
nop
dec
push
xchg
sub
inc
dec
jno
xchg
inc
icebp
and
add
adc
hlt
cmc
push
inc
xchg
imul
dec
fs
adcl
ljmp
mov
repz
and
adc
test
or
xorl
mov
pusha
enter
or
sbbb
mov
dec
pop
call
mov
scas
lret
cmpsb
into
lahf
mov
leave
lock
cli
xchg
lahf
fstpl
aas
mov
add
xor
push
or
jno
subl
lret
and
add
fsubrs
push
or
mov
stos
sahf
idiv
adc
xchg
cltd
or
mov
cwtl
mov
xchg
rcrb
inc
push
push
das
mov
push
ret
test
bound
lahf
cmc
sbb
push
cmp
mov
insb
fwait
sub
call
fsubl
stc
jae
les
xor
mov
sahf
lret
mov
mov
push
inc
test
enter
dec
pop
mulb
out
sbb
shll
data16
xor
std
pop
mov
icebp
pop
jmp
clc
out
pop
sbb
jge
mov
pop
push
pop
jmp
test
fnstcw
pop
js
inc
pushf
push
test
push
sbbb
push
cmp
xchg
sbbb
add
jae
jl
xor
rorl
sti
in
and
or
xchg
sub
call
add
mov
pop
pop
and
call
cmp
jmp
hlt
cmc
leave
data16
shll
mov
mov
inc
mov
xchg
popf
sbb
push
lods
pusha
sbb
clc
int
jp
aam
xchg
nop
fs
xor
pusha
push
mov
cmp
jne
out
in
sub
adc
pop
or
mov
dec
std
jmp
repnz
mov
pop
xor
pop
mov
loop
sarl
cmpsl
and
xchg
mov
int3
mov
shrb
ss
outsl
test
dec
shrl
hlt
dec
loope
imul
push
fmuls
lahf
dec
aad
loope
adc
outsl
mov
in
push
inc
lahf
inc
in
add
or
mov
repnz
mov
push
in
pop
clc
test
pop
push
int
xor
scas
pop
sub
jo
pop
mov
adc
mov
push
mov
jl
jno
xchg
jecxz
pop
bound
sbb
add
pop
adc
aad
cmp
out
sahf
fsubs
or
xor
pop
mov
mov
dec
std
lcall
mov
adc
inc
pop
pop
popf
or
sub
test
mov
imull
cmpl
in
ljmp
mov
outsb
adc
mov
jmp
dec
cli
or
mov
lahf
hlt
pop
mov
push
ds
cmp
in
pop
xchg
sbb
leave
push
jge
int3
pushf
jmp
repnz
xchg
shr
inc
bound
add
adc
jecxz
fs
push
call
pop
leave
dec
aam
mov
mov
pop
mov
insl
pop
jnp
pop
mov
pop
mov
fimull
mov
frstpm(287
sub
out
repz
mov
bound
xchg
dec
jle
xor
fstps
lock
push
mov
push
or
add
out
jne
jg
rorb
mov
ja
cmp
xor
ss
xlat
ret
inc
sbb
lahf
test
sbb
cs
jne
mov
or
pop
dec
enter
pop
call
jo
mov
scas
inc
mov
jmp
movsl
push
outsb
adc
mov
aad
sbb
cmpsb
and
jg
mov
cmc
add
xchg
subl
cmp
pop
mov
insl
sub
or
aad
cli
loope
mov
negb
pop
inc
dec
dec
test
test
xchg
pop
push
sub
mov
push
sti
mov
push
cld
rcrb
lock
xor
push
out
push
pop
or
or
test
pop
std
push
in
dec
sub
das
or
mov
and
adc
inc
sahf
add
xchg
mov
aam
das
dec
lds
inc
ja
sub
imul
loopne
stc
cmp
aaa
fdivr
mov
cli
mov
xor
or
cmp
jg
inc
fisubrs
pop
lods
dec
xchg
mov
mov
pop
inc
pop
push
adcl
das
or
sub
faddl
das
fs
or
pop
push
stos
lahf
aad
in
icebp
add
jmp
mov
enter
push
ljmp
leave
hlt
ljmp
neg
fsubrp
and
cwtl
pusha
push
loope
push
addb
jg
or
push
out
or
sub
repnz
hlt
idivl
or
xchg
xor
mov
mov
push
lcall
push
pop
out
or
data16
mov
cmpsl
fnstenv
mov
jae
jo
in
adc
cmc
insb
and
bound
aam
dec
imull
mov
lahf
jl
push
mov
jno
mov
icebp
sub
fstps
xchg
or
or
lret
inc
imul
pop
sub
mov
iret
jg
repnz
ds
scas
loope
decl
call
push
cmp
rorl
dec
dec
cwtl
or
sub
mov
cmpsl
out
mov
adc
adcb
pushf
fdivrp
jb
fs
int3
xchg
call
stc
pop
data16
lock
out
xchg
je
out
jne
or
mov
ficoml
aam
inc
inc
sbb
inc
add
loop
js
or
roll
mov
dec
sub
xor
jns
cmp
cmpsl
sub
ret
popa
or
xchg
mov
shll
jne
clc
push
push
adc
inc
mov
int
shlb
cmp
jge
push
arpl
mov
mov
xchg
stos
xor
or
loop
hlt
aad
fistpl
arpl
dec
popf
test
mov
xchg
add
call
cmp
and
call
or
push
adc
cli
das
add
inc
push
in
ret
ret
push
cli
or
or
or
fnstsw
xor
mov
push
aam
stc
inc
dec
mov
les
scas
sti
cmpsb
sub
dec
cmp
shlb
in
xchg
xlat
dec
pop
mov
jb
pop
mov
or
lret
pushf
fwait
sbb
mov
cld
add
das
jl
xchg
lahf
imul
mov
pushf
pop
pop
js
mov
adc
mov
push
lods
das
aad
pop
add
mov
inc
into
fdivl
xor
xchg
loopne
out
mov
lea
sub
push
inc
add
int
mov
cmpb
xchg
mov
sub
sbb
pusha
aad
pop
cltd
int
xchg
mov
jnp
push
sahf
or
icebp
mov
call
pop
pushf
sub
xchg
and
inc
push
mov
mov
stos
xor
adcb
andb
sub
in
sbb
add
push
lock
push
adcb
stc
jb
xchg
cmp
sub
and
movsb
mov
daa
xorb
scas
clc
movsl
loopne
fbld
add
dec
popf
call
scas
mov
into
sbb
mov
pop
lret
cltd
mov
jne
or
nop
les
dec
push
cltd
cmp
daa
pop
popa
mov
jl
and
cmc
cmp
sbbb
insl
clc
adc
mov
adc
push
arpl
das
lcall
cmc
mov
dec
popa
cmp
mov
or
jo
sbb
mov
shll
fistpl
add
nop
add
nop
pop
mov
pop
mov
adc
pop
orl
cld
inc
out
das
in
sti
sbb
add
pop
repnz
jmp
xor
push
clc
push
inc
sahf
mov
or
adc
out
lcall
adc
or
push
or
mov
adc
das
jl
xor
fwait
andb
pushf
int
std
mov
scas
nopl
movb
jbe
mov
cs
inc
sbb
adc
out
jbe
daa
cmc
mov
insl
sub
inc
inc
mov
inc
xchg
movsb
or
dec
push
sbb
add
inc
xchg
insl
inc
test
sub
mov
jg
leave
mov
add
inc
xchg
cli
and
push
rol
push
cwtl
test
dec
aam
mov
add
mov
jne
aam
lahf
ja
or
outsl
cmp
mov
test
jmp
in
iret
xorb
popf
inc
shll
repnz
xlat
push
push
cmc
cmp
xchg
mov
testb
mov
jle
inc
xor
or
push
or
call
fdivs
cs
pop
inc
sub
in
jle
mov
cli
jmp
sub
insb
cmpsl
pop
add
outsl
dec
aam
dec
push
adc
xchg
mov
or
loop
or
jecxz
mov
sbb
out
das
clc
jns
cmpb
test
mov
bound
cmc
sti
aas
sbb
ret
jne
dec
and
or
mov
adc
inc
shrl
sbb
add
lea
call
mov
inc
cs
mov
out
stc
adc
mov
xchg
pusha
mov
fwait
test
inc
or
xor
mov
mov
ja
mov
mov
xor
enter
inc
pop
mov
jb
push
sbb
insl
inc
jbe
es
xor
insb
lahf
mov
fmuls
loope
sar
data16
add
cmp
hlt
or
mov
push
sub
xor
mov
mov
stc
lret
pop
dec
mov
or
push
sbbb
push
leave
sbb
addr16
cmp
lea
clc
add
dec
sub
test
jmp
xor
daa
testl
mov
ret
mov
add
xlat
lret
dec
add
push
jb
mov
daa
inc
out
lods
stos
das
enter
subb
jmp
push
int3
xchg
call
adc
aam
mov
inc
or
jle
lcall
sarl
mov
daa
pop
fisubrl
fisttps
lock
mov
pop
dec
ja
and
icebp
mov
jb
mov
jmp
lds
or
sti
xchg
dec
xor
scas
stc
mov
orb
adc
rclb
inc
mov
dec
shll
pop
jmp
add
or
insb
dec
not
inc
inc
add
push
add
repnz
out
mov
inc
stos
call
push
fs
inc
leave
les
or
inc
lods
push
xchg
push
dec
pop
push
rorb
mov
lock
xchg
inc
aas
mov
jecxz
pop
ljmp
xchg
pop
mov
into
inc
clc
mov
clc
mov
inc
xchg
and
xchg
jno
call
in
inc
push
sti
repz
sbb
and
out
jne
xchg
mov
lock
adc
call
or
lods
jg
test
adc
mov
jb
into
mov
ds
js
or
or
sahf
imul
xchg
add
mov
hlt
int
leave
inc
xchg
pop
pop
dec
inc
leave
int
jecxz
in
repnz
fs
xchg
js
mov
xchg
push
jb
imul
stos
lds
in
js
dec
jle
xchg
insb
lahf
and
or
cmp
out
mov
cli
test
mov
bound
xchg
cmpsb
repz
sub
mov
pop
inc
mov
shlb
pusha
call
or
inc
cmpsl
mov
cmp
push
push
call
cmp
jo
and
leave
fmuls
test
or
test
cmpsb
jmp
in
punpckhbw
dec
lcall
orb
xchg
lcall
test
leave
or
push
sbb
push
mov
xor
lahf
scas
xchg
add
rclb
call
xlat
aas
mov
insb
push
std
jl
rorl
out
sbb
mov
sub
test
push
sbb
imul
add
test
call
js
aam
inc
push
jmp
cwtl
cmp
xchg
mov
push
stc
test
arpl
mov
ret
clc
or
out
mov
xor
fisttpl
in
imull
mov
sub
ljmp
and
nop
mov
call
pop
out
pop
push
inc
cmpsb
xor
sub
lret
add
outsl
adc
jge
push
in
dec
out
adc
lds
ljmp
das
pushf
pusha
add
data16
and
adc
or
ja
sbbb
push
insb
test
mov
mov
inc
pop
sbb
dec
xlat
sbb
stos
adc
xchg
pop
insl
push
lods
mov
andb
jp
push
add
lret
cli
dec
shl
jo
inc
call
jg
push
cmc
sbb
lods
fwait
mov
push
jmp
dec
mov
push
mov
mov
xor
mov
dec
xchg
orb
jg
xorl
dec
addr16
dec
clc
cmpb
les
mov
fisubrs
sbb
jge
or
pop
mov
sub
clc
enter
enter
mov
sub
inc
cmpsl
xor
mov
pop
xchg
call
dec
push
xor
jge
dec
jmp
inc
jg
pop
or
or
jae
mov
cmp
push
sbb
jmp
ljmp
mov
loopne
inc
inc
test
jmp
inc
dec
fwait
insb
cmp
call
jno
adc
insl
outsl
shll
negl
push
or
or
cmp
pop
xchg
push
bound
pop
rolb
push
mov
iret
ds
inc
scas
mov
add
je
add
xor
pop
push
subl
mov
mov
sbb
lods
xchg
sbbb
test
ds
sbb
imul
jmp
pop
test
cmp
insl
outsb
mov
push
mov
rolb
cmc
inc
dec
mov
sub
stos
roll
pushf
adc
aas
push
dec
out
jo
sti
xor
iret
jge
insb
in
xor
or
inc
xor
dec
mov
add
sar
add
and
test
and
test
pop
xor
mov
or
addr16
lret
inc
adc
or
ret
ret
and
pop
mov
mov
jle
imul
jne
cli
and
cmp
testb
dec
test
mov
adc
mov
orb
mov
mov
shll
call
and
mov
jno
sub
or
push
mov
ss
pop
xorb
std
push
and
test
xor
pop
sub
cmp
lods
and
xchg
pop
sbb
repnz
xor
mov
test
frstor
clc
mov
pop
xchg
int3
adc
jmp
push
inc
rorl
neg
stos
inc
mov
add
jae
mov
dec
mov
call
ja
fadds
dec
push
movl
push
mov
jns
or
lahf
divb
lds
pushf
pusha
loop
ret
jmp
sub
xchg
dec
mov
ret
or
inc
in
leave
adc
sbb
jo
and
mov
es
jno
ss
lods
xor
and
push
loope
jnp
out
notl
adc
adc
or
push
mov
xlat
movsb
and
or
push
testl
inc
cmp
push
add
push
fdiv
call
xchg
and
push
lret
push
outsb
aaa
mov
adc
iret
subb
cmc
mov
lods
sub
pop
cwtl
mov
enter
push
fwait
in
lea
push
mov
jno
pop
xchg
inc
pop
mov
mov
xchg
sub
pop
jo
xor
scas
sub
jo
and
push
mov
cld
xor
adc
mov
inc
or
scas
mov
ret
add
add
leave
adc
lea
cmc
stos
xchg
xor
mov
popf
jle
sub
mov
mov
and
aaa
fdivrs
xor
add
mov
pop
insl
or
jb
push
inc
dec
pop
call
sti
pop
or
imull
lret
mov
dec
xor
xor
or
mov
ret
push
or
jmp
adc
or
loop
or
call
inc
lock
jmp
dec
mov
and
lods
jb
test
xchg
or
faddl
push
cmp
daa
mov
ja
lds
mov
cmp
cld
pusha
cmpb
dec
jg
mov
sub
sub
mov
nop
ja
or
fsubrp
test
stos
lock
mov
outsl
inc
cmp
loop
fcomps
imul
pop
mov
mov
bnd
int3
cli
dec
or
inc
mov
lar
push
add
mov
jg
jge
push
sti
or
xlat
daa
pop
xchg
push
pop
add
lds
in
fimuls
imul
push
nop
cmovp
nop
lds
stc
ljmp
jnp
push
push
push
out
lds
in
leave
or
lcall
add
mov
or
sub
mov
adc
jle
imul
push
add
adc
push
cs
popa
cmp
and
push
jmp
cmpsl
lock
test
punpckhbw
mov
into
lods
adc
and
add
inc
jmp
call
and
sbb
popf
insl
call
add
clc
xlat
xor
cwtl
daa
jb
out
lds
loop
inc
sbb
xchg
push
sbbl
into
fistpll
fsubs
xchg
psllw
and
jmp
scas
xor
mov
adc
pusha
inc
movsb
mov
addr16
sub
pop
xchg
fidivs
add
cld
jl
xchg
pop
jbe
add
pop
dec
in
aad
repnz
or
push
dec
imulb
nop
and
andl
jb
push
out
jb
xlat
sbb
inc
mov
mov
cmp
xor
cltd
sub
push
neg
inc
push
sub
push
int
in
sub
fstpl
ss
sub
mov
xor
loope
outsb
or
xor
push
jmp
cbtw
lret
mov
ljmp
cmp
sarb
sarb
mov
ss
mov
pusha
pop
scas
sbb
inc
ljmp
imul
into
and
push
or
fisubs
mov
push
mov
fistpl
and
and
or
push
popa
sbb
pop
mov
sti
sub
and
cmp
or
mov
jecxz
xchg
insl
std
in
xchg
out
rcrb
dec
jbe
mov
je
arpl
jo,pn
jae
fs
sahf
fmull
das
jne
adc
addr16
and
mov
stos
lock
sub
push
fcomip
icebp
movsb
sub
or
ss
jmp
jns
call
mov
ficomps
subb
loop
popf
cld
jo
pop
icebp
cmp
es
fldt
cwtl
mov
insb
xor
test
shl
adc
cmpsb
sub
sub
cmp
and
dec
inc
fisubrs
jecxz
mov
mov
mov
leave
jno
ret
repz
call
adc
jg
inc
ja
mov
fldl
dec
shrb
mov
popf
sbb
repnz
loopne
jne
cli
mov
pop
add
leave
mov
xlat
or
sub
adc
lcall
fldenv
inc
int
ret
cmpsb
dec
or
cmp
pop
movsb
pop
xchg
push
int
or
jmp
das
out
push
loopne
cmp
dec
or
sarb
jp
and
call
int
test
mov
fwait
stos
adc
jecxz
mov
daa
jg
mov
movsl
jae
in
push
xchg
push
mov
pop
call
pop
and
mov
es
push
sbb
lods
pop
nop
or
outsl
sub
push
jg
fiaddl
cmpb
outsb
outsb
call
aaa
repnz
fwait
xor
fldl
ret
dec
inc
xchg
and
push
push
push
add
shl
xor
and
orl
sti
fidivrs
and
dec
inc
fsubrl
push
push
fimuls
push
sub
mov
lret
hlt
adc
sti
sbb
xchg
imul
cmp
testb
inc
jmp
mov
pop
push
ret
ds
lret
xchg
mov
jb
pushf
and
inc
and
sbb
int
mov
jnp
out
popf
jl
dec
inc
mov
jecxz
es
shrb
cmpsl
push
dec
push
ljmp
imul
xor
add
inc
mov
or
test
dec
pop
xchg
stc
add
fwait
or
jb
mov
pop
or
test
mov
add
push
andb
push
test
pop
stc
mov
fstpl
inc
cld
xor
xor
dec
mov
cmp
push
fstl
cmp
gs
sahf
and
jmp
fs
call
or
stos
imul
adc
lahf
repnz
xchg
jno
bound
leave
xor
imul
push
mov
mov
mov
popf
pusha
inc
or
dec
aad
imul
xchg
cmp
xor
cs
dec
inc
xor
mov
mov
sbb
or
adc
sub
dec
lret
nop
notb
inc
cmp
leave
jne
adc
movsl
imul
das
mov
ficoms
fldl
push
cmpsl
or
jb
xchg
rcr
and
pop
outsb
jmp
popf
daa
loopne
sbbl
pop
nop
les
xorl
and
in
inc
inc
pop
clc
stc
push
jnp,pt
inc
imull
call
push
cmp
pop
test
dec
adc
push
das
loop
xchg
push
sbb
hlt
jne
lods
stos
dec
ja
sub
xchg
testl
mov
icebp
dec
jl
popa
and
inc
test
mov
xchg
or
mov
ret
push
test
and
lods
push
and
ret
inc
fdivs
test
es
orb
sbb
and
cmp
inc
movl
xchg
rcrl
fs
sahf
mov
mov
movsl
and
scas
movsb
jl
popa
pop
mov
lcall
sub
dec
jmp
mov
add
mov
pushf
adc
fcmovne
cmpsb
adc
cmp
adc
xor
scas
mov
adc
push
inc
jne
xchg
cmp
fcomps
aam
fldt
and
inc
je
shll
clc
nop
mov
mov
push
mov
add
lock
sbb
pop
pop
add
sti
pop
dec
in
mov
and
jnp
outsl
inc
mov
fcompl
adc
cld
stos
push
lock
test
clc
or
or
push
mov
mov
fbld
stos
adc
inc
test
pop
or
xchg
into
sbb
dec
ret
sbb
sub
and
stos
shlb
pop
aam
pop
xor
pop
jne
mov
or
push
push
out
inc
push
imul
push
lods
divl
or
xor
js
jno
mov
pop
js
lea
inc
push
cs
jnp
in
das
loop
enter
inc
push
cmp
dec
clc
cld
out
pop
ret
hlt
sub
pop
test
jmp
ret
adc
inc
int3
stc
mov
lret
jge
xchg
outsb
pop
jge
ds
fimuls
dec
adc
imul
mov
push
push
ss
xor
pop
out
xor
sarb
or
inc
adc
inc
xor
mov
mov
pop
cwtl
xchg
enter
cmc
mov
mov
cs
pop
inc
mov
inc
mov
insl
and
sbb
call
jecxz
and
push
mov
stc
xor
icebp
sarl
and
mov
arpl
jge
ljmp
cmp
stos
pop
jne
ss
pop
stc
add
das
roll
aam
dec
je
mov
jl
jb
rcrb
add
cmc
int3
push
cli
loop
aaa
lret
add
cmpsl
mov
sub
pop
adc
dec
inc
push
sbb
xor
push
call
mov
push
nop
sub
fs
std
rcl
xchg
js
sub
test
xorb
cmp
lcall
js
xchg
cltd
lret
mov
dec
fsubrl
xor
shrb
jae
lds
mov
clc
cmp
jl
cmpsl
cmp
mov
or
dec
outsb
jmp
js
loopne
xor
xsavec
jno
jo
incl
sbb
adc
sub
or
pushf
movsb
jb
mov
or
mov
mov
xchg
enter
sbb
jl
je
call
or
mov
and
lea
fmull
dec
cmp
jmp
mov
push
jns
mov
inc
pop
xchg
xchg
hlt
pop
jne
xchg
aam
jmp
int3
add
pop
mov
push
fiadds
sbb
leave
mov
clc
inc
or
dec
cmp
loope
pop
mov
call
test
int
add
loope
sub
enter
pop
sbb
mov
cli
add
mov
bound
sbb
loopne
bound
pushf
daa
jne
sbbb
imul
mov
lret
pop
out
rcll
dec
mov
lods
jmp
filds
dec
fiadds
cmp
sub
inc
in
pop
inc
hlt
dec
mov
jl
xor
xor
push
in
imulb
out
adc
jb
push
call
xor
decl
adc
pop
cmc
hlt
inc
jb
pop
cli
ffree
addl
adc
test
sub
fs
xchg
mov
xor
lds
sbb
ja
or
add
jmp
call
ret
sub
add
lds
inc
pop
add
pop
out
addb
js
lock
lock
pop
mov
sets
xchg
xor
jl
scas
push
outsb
repnz
fisttpll
icebp
push
sub
dec
loop
icebp
jecxz
mov
lret
clc
ja
xchg
jne
movsb
in
fwait
pusha
sbb
sub
icebp
push
call
jnp
cmpsb
cmp
and
fidivrl
pop
jmp
inc
pop
dec
sahf
or
call
aad
rep
add
push
fucomi
adc
sub
into
or
xor
jge
and
mov
push
aad
sti
sbbb
cmpb
sub
mov
xor
jo
popf
mov
and
inc
stos
mov
mov
popf
push
mov
pop
add
call
cwtl
ja
sub
ret
xchg
lods
push
push
loope
mov
add
cwtl
repnz
mov
out
fs
dec
add
sub
loopne
jmp
jns
jo
adcb
in
xchg
xchg
aad
outsl
sbbl
xchg
or
add
hlt
ja
xchg
mov
fucomp
jno
xchg
jbe
mov
pop
repnz
xchg
and
test
out
lods
test
sbb
inc
adc
add
dec
push
dec
mov
sub
sub
mov
mov
add
dec
push
lods
jae
xchg
xchg
test
fidivrs
xor
enter
jne
and
mov
inc
sub
lahf
sti
mov
pop
fldl
mov
sub
jb
mov
or
sub
out
cli
mov
push
pop
push
repz
mov
push
pop
sti
sahf
jbe
add
outsl
fs
sub
ficoml
sbb
inc
out
das
loope
mov
ficoml
jg
gs
les
push
fdiv
jecxz
fisubrs
orb
clc
xor
in
ficompl
or
mov
xchg
inc
pop
sarl
insl
fimull
lret
movsb
fbld
lret
fistl
push
lods
std
mov
sbb
outsb
stc
cmp
xchg
and
inc
mov
in
mov
fucomip
jle
rolb
jo
push
inc
subb
pop
jle
incb
pushf
ljmp
fbld
cmp
std
cmpl
jl
jp
cmpsb
xchg
popa
push
fidivl
add
xchg
call
jp
push
mov
sub
stos
test
inc
pop
pop
mov
cmpsb
pop
daa
xor
in
add
cmpsl
test
ja
popf
dec
cmc
arpl
daa
xor
inc
and
mov
sti
jp
inc
popa
repnz
cwtl
mov
fcompl
add
into
xor
mov
ja
mov
jmp
cmpsl
xor
enter
cmc
add
or
cwtl
outsb
add
in
mov
dec
repnz
mov
and
jne
pop
clc
inc
pop
xchg
push
std
paddb
daa
sarb
mov
push
add
mov
cmp
test
and
push
mov
fnsave
mov
data16
xlat
ret
inc
fisttpl
icebp
bound
jp
adc
or
ret
push
stc
movsl
xchg
sbb
lods
push
jecxz
pop
shl
ja
rorl
in
subl
jmp
dec
or
and
or
lods
cmpsb
sub
inc
mov
out
arpl
insb
mov
push
repnz
shll
popf
inc
inc
movsb
std
pop
aas
ljmp
or
lcall
and
cs
jo
mov
push
sti
stos
cwtl
and
mov
mov
adc
dec
sbb
stos
pop
xor
inc
cwtl
lock
dec
dec
jge
lcall
shr
dec
fldl
xchg
cwtl
mov
xchg
call
aad
or
xchg
xor
lock
ljmp
cmp
lret
lahf
add
pop
shrl
jae
sbb
sub
push
push
fmul
add
push
inc
mov
push
add
push
outsb
pop
sbb
sub
daa
fcompl
lret
cltd
or
add
pop
mov
add
mov
roll
stos
mov
aam
hlt
sbb
sub
scas
or
jb
jne
test
sub
icebp
sub
cmp
pop
mov
fwait
jmp
add
cmp
std
lea
sub
mov
ret
xchg
stos
ss
stc
std
rcrb
testb
test
jno
lods
stc
sbb
pop
test
stos
daa
push
mov
or
bound
jne
ss
xor
jbe
jge
sbb
aaa
mov
sti
adc
add
jb
xor
mov
mov
mov
push
pop
push
mov
mov
ja
sbb
es
xchg
xchg
adc
je
popf
subl
xor
lret
insb
jp
adc
test
sub
call
enter
jo
jle
insl
outsl
cmp
fwait
inc
clc
jo
inc
adcb
cwtl
movsl
call
repnz
scas
movmskps
shl
cli
add
jb
clc
jmp
iret
adc
mov
ja
push
out
gs
mov
inc
adc
pop
xchg
adc
pop
mov
push
jmp
add
mov
add
dec
sti
mov
add
ljmp
sbb
push
mov
and
hlt
or
mov
les
mov
cs
cwtl
adc
inc
push
sbb
dec
pop
xchg
lcall
lret
adc
cmc
jno
std
and
mov
and
push
or
push
inc
inc
inc
not
cwtl
inc
or
mov
cld
dec
sub
addr16
mov
out
fisttps
dec
fwait
push
push
push
xor
call
push
xchg
sbb
scas
add
pushl
movsl
sbb
test
pop
xchg
lods
cs
scas
adc
pop
mov
add
cmpsb
ss
cwtl
addb
mov
nop
out
stos
xchg
jl
mov
lods
pop
mov
dec
mov
cmp
jg
dec
xchg
cmc
xlat
imulb
in
das
ficoml
jmp
inc
leave
jne
jns
push
mov
das
mov
dec
sub
adc
xchg
movsb
dec
addr16
sahf
out
mov
ret
cmp
dec
push
in
es
rcr
mov
mov
shll
dec
ret
inc
mov
sarb
repnz
mov
jb
fstpl
imul
ret
shlb
push
push
stos
inc
es
out
popa
or
scas
clc
xor
cmc
jno
jge
mov
push
ret
mov
adcb
push
push
stc
lods
test
push
cs
outsb
mov
xchg
cs
jge
pushf
cmp
cltd
cs
cmp
mov
scas
jo
cmpl
mov
xchg
mov
jo
mov
enter
test
xchg
sub
and
cmp
cmp
pop
mov
stos
inc
sub
pop
mov
lgs
mov
inc
push
fiadds
addb
push
mov
enter
loopne
ljmp
sti
push
icebp
cmp
push
inc
cmp
sub
push
loop
add
out
aam
enter
mov
frstor
lret
andb
mov
xchg
test
mov
pop
cwtl
mov
sti
int
ficoml
push
out
ja
and
sti
fisttpll
xchg
mov
adc
jbe
mov
and
int3
xor
xchg
pop
dec
or
and
sti
push
dec
std
sbb
movsl
test
into
daa
ja
mov
ja
out
pop
adc
in
cmpsl
jbe
inc
pop
jmp
xchg
ds
cmp
dec
mov
inc
cli
adc
inc
mov
adc
jo
fnstsw
icebp
mov
sub
out
shlb
mov
mov
lock
aas
jnp
lahf
fwait
cmc
fdivrl
test
movsbl
xor
addl
xor
adc
loopne
inc
cmc
leave
shlb
shll
jae
mov
sbbb
dec
or
loop
xor
mov
add
lds
jmp
mov
push
nop
call
mov
stos
addr16
sub
test
scas
ret
call
jp
push
mov
mov
ljmp
cmp
mov
jg
xor
decl
fsubrl
std
jnp
push
and
loop
adc
mov
loop
in
popl
and
jb
pop
mov
push
cli
pop
adc
ljmp
dec
push
idiv
cmpsl
sbbb
adc
pusha
sub
loop
sarb
sbb
inc
sub
inc
inc
negb
add
mov
in
jg
mov
sub
push
push
insl
sbb
inc
adc
xor
call
pushf
andb
xchg
inc
mov
mov
xor
lock
or
rolb
fwait
sub
or
push
or
cmc
outsb
std
sub
adc
push
dec
mov
ja
adc
adcl
gs
out
dec
lahf
jp
cmp
mov
xorb
pushf
stc
mov
mov
fidivrs
mov
movsb
aas
dec
mov
outsb
ja
addl
jmp
pop
cmp
fsub
das
fldl
jle
call
mov
hlt
test
add
jbe
lods
rorb
sar
daa
out
je
xlat
outsl
stc
test
push
and
jb
push
mov
cmc
inc
cmp
push
test
push
cmpsl
repz
sbb
jb
xchg
push
or
fwait
and
int3
sbb
adc
mov
and
xchg
mov
hlt
clc
xchg
cld
sub
jns
cmp
mov
or
push
push
xchg
mov
inc
xchg
pop
push
xorb
popf
xchg
leave
sbb
xchg
add
pop
call
or
std
adc
ja
mov
repz
clc
ds
inc
data16
lea
stc
test
faddl
leave
pop
and
loopne
mov
sub
sub
xor
cltd
xlat
out
ret
cld
aam
jo
mov
add
sub
dec
in
std
flds
call
stc
es
mov
xchg
xorb
ss
cmp
xchg
std
pushf
and
and
push
or
cld
jge
pop
dec
pop
sbb
xor
inc
sub
xchg
mov
out
and
xchg
cmp
mov
dec
xor
js
cmp
push
mov
stos
repnz
in
inc
jno
push
mov
mov
inc
movsb
mull
add
xor
or
aas
jg
pusha
sub
inc
loop
mov
fidivrs
push
call
add
sub
mov
popa
sti
mov
popa
sub
xchg
scas
daa
jbe
push
jl
movsl
add
xchg
flds
push
fnsave
or
pop
xorb
mov
ret
pop
les
sbb
add
inc
dec
sub
pop
popa
popf
sbb
sub
jge
cltd
mov
adc
push
pop
jle
jno
call
call
icebp
js
jne
push
mov
pop
jae
sub
repnz
in
test
bound
mov
inc
xchg
js
mov
sub
sbb
push
mov
sub
ljmp
mov
decl
xchg
testb
pop
sbb
rcr
popa
shrb
clc
and
xor
arpl
xchg
jle
inc
hlt
dec
pop
loope
mov
push
xor
cmpsl
pop
push
inc
dec
in
sbb
ljmp
lds
jp
xor
cmc
hlt
cmp
mov
mov
lret
shrb
jbe
mov
cwtl
mov
cmp
lea
xchg
xor
fxch
movsl
or
mov
iret
jo
add
xor
int
fistl
in
sub
sahf
lds
jo
ficomps
mov
push
mov
cli
out
mov
push
sub
cld
clc
cmp
xchg
imul
stos
add
adcl
insb
es
cmp
inc
xchg
mov
inc
mov
pop
cwtl
decl
xchg
lock
sbb
stc
mov
dec
mov
or
cli
inc
lods
in
mov
imul
rclb
test
int3
add
sti
lret
jo
mov
jmp
icebp
xchg
dec
mov
lods
rol
sub
inc
push
stos
fwait
enter
call
and
xchg
xor
insb
jne
inc
imull
hlt
mov
lret
mov
lds
cmp
xor
jmp
xchg
add
push
jp
push
stos
andl
xor
orl
insb
call
mov
jg
xchg
mov
int
popa
jae
fsubrs
mov
and
test
test
pop
xchg
push
scas
lds
icebp
daa
push
es
lret
out
popf
pop
pushl
pop
int
push
mov
xor
repnz
jl
jecxz
add
rorb
push
aaa
hlt
mov
xchg
mov
add
out
hlt
fiaddl
cmp
mov
ljmp
and
push
sarb
inc
mov
stos
pushf
out
mov
cmpsl
xchg
and
mov
lahf
pop
mov
insl
adc
rcl
mov
sbb
dec
push
jnp
xchg
je
jb
mov
and
pop
jb
sbb
jmp
std
push
movsb
dec
jo
loop
mov
dec
neg
sarb
and
sbb
cmc
and
pop
or
ljmp
cmpsb
cmp
push
inc
xchg
or
xor
pop
ror
jne
cltd
mov
fwait
jnp
or
pop
push
and
cld
dec
mov
fistps
jae
jmp
or
incb
sbb
out
ja
mov
out
lods
sub
ret
push
mov
jb
dec
fdivr
test
dec
xchg
mov
cmpsl
pop
cmpb
pop
repnz
sbb
mov
push
jmp
push
cmp
call
mov
sub
mov
clc
mov
xor
filds
lcall
mov
pop
xchg
lods
sarl
push
cmp
mov
or
orl
xor
xchg
xchg
clc
cmc
cmp
dec
pop
pop
mov
lods
pop
push
fidivs
fimull
cmp
inc
inc
inc
or
leave
das
pop
add
sub
call
or
or
pop
pop
sub
pop
testb
and
les
sbb
push
push
mov
popf
std
jb
daa
and
mov
pushf
pop
cmp
jecxz
pop
cmp
in
jne
cmpb
stc
mov
out
andb
sti
in
mov
test
cs
mov
aad
adc
out
nop
fcmovnb
bound
inc
sbb
xchg
pop
rorl
cmp
cmpsl
scas
repnz
lret
dec
push
sbb
inc
and
mov
aam
ja
out
in
aaa
push
mov
inc
xchg
jbe
test
adcb
jg
sbb
cmpsb
loope
daa
insl
lds
cmp
int
or
xchg
cwtl
jb
push
jl
sub
sub
jb
sub
adc
imull
pop
cmpsl
adc
cli
sub
mov
jmp
xor
test
faddp
add
jno
mov
std
mov
lea
shrb
scas
pusha
imul
jo
fst
aam
test
cmp
in
pop
sahf
negb
jbe
fiaddl
mov
mov
pop
loope
and
test
xor
add
filds
xor
mov
jb
js
cmc
rolb
test
inc
daa
push
cmpsl
pushf
mov
sbb
mov
jg
add
sub
xor
jae
pop
sbb
mov
adc
fidivrs
ljmp
stos
fprem
add
xor
sub
xchg
mov
icebp
or
sbb
push
loop
pop
xorl
bswap
test
sub
inc
mov
adc
sbb
cmp
jecxz
xchg
jns
or
push
repnz
add
mov
mov
mov
push
shl
fisubs
inc
jbe
and
pop
hlt
repz
xchg
pop
mov
daa
xor
push
ret
pusha
stc
push
jns
sbb
mov
jo
pop
repz
mov
push
jmp
mov
hlt
sub
pushf
push
outsb
xchg
iret
or
inc
icebp
dec
jg
ja
rorb
bound
scas
sub
out
and
std
inc
xor
inc
push
je
in
movsl
cmpsb
aam
into
add
fdivs
sbb
into
mov
cs
fmull
mov
in
push
mov
push
testl
mov
pusha
xchg
dec
sbb
jmp
cmpsl
rclb
les
jnp
xor
mov
scas
test
fwait
or
lds
xchg
sarl
mov
adc
imul
rcr
je
dec
dec
pushf
sbb
push
sub
push
jnp
push
in
jle
jnp
add
mov
call
sbb
dec
mov
pop
mov
popf
jb
enter
sbb
pop
or
out
pop
add
mov
mov
mov
and
mov
or
sub
mov
imul
std
sbb
dec
stc
inc
fisubl
mov
mov
push
cmp
cmp
sarl
dec
leave
outsb
pop
repnz
fdivrs
inc
ret
or
lahf
inc
cmpl
pop
lods
adc
inc
sbb
sbb
stc
aad
cld
and
mov
mov
and
mov
and
push
ret
jle
addr16
pop
and
inc
ret
pop
icebp
inc
scas
loopne
addb
and
jl
repnz
jo
hlt
insb
lea
icebp
mov
jbe
pop
cmp
or
mov
cmp
test
lahf
push
mov
in
pop
dec
sbb
pop
jge
test
fiadds
mov
orb
xorb
pop
jbe
jbe
sbb
rorb
cli
sub
jmp
in
outsb
hlt
sarl
pop
lahf
notb
jno
jge
jp
jns
jb
call
dec
adc
jne
jle
jge
dec
stos
xlat
xor
jno
push
and
xor
std
mov
jns
or
andb
dec
xchg
ljmp
cwtl
dec
mov
push
mov
cwtl
mov
inc
or
add
add
clc
cmp
push
jne
mov
rclb
xor
mov
jne
fstpl
mov
hlt
lea
add
call
push
std
stc
adc
fnstsw
xchg
push
inc
mov
jb
outsl
mov
in
popl
sbb
lods
incl
cli
pop
outsb
pop
or
jnp
fisubrl
dec
add
sahf
mov
ljmp
outsb
icebp
inc
cmc
sub
mov
cmpsl
lods
shlb
mov
fstpt
pop
push
stos
dec
out
les
pushf
cs
es
cmp
cmp
lods
repnz
test
in
push
ss
cmpsl
or
mov
adc
call
xchg
sti
mov
adc
inc
jmp
jp
popa
mov
xor
sbb
xor
dec
shll
add
push
push
adc
scas
out
cltd
jle
lock
stc
push
mov
xor
sub
cmpsl
insb
in
inc
pcmpgtb
cmpsl
loopne
and
cld
mov
mov
in
cmpsl
ds
fsubrl
jmp
or
fidivl
sbb
fmuls
imul
inc
push
lods
std
pop
fmull
xlat
sbb
mov
jno
or
push
in
push
or
or
cmp
fmuls
or
mov
or
pop
int3
fistpll
or
filds
xorl
push
mov
pop
xlat
out
dec
sbb
xor
cmpsb
test
xchg
xchg
jns
scas
push
repnz
rcrl
mov
jmp
xchg
aad
adc
leave
sub
cli
mov
pop
jecxz
sti
and
xchg
cmp
arpl
sti
lret
dec
ret
xorb
adc
mov
jnp
sub
ficoms
pop
roll
daa
adcl
sbb
xlat
pop
ja
jmp
lea
out
movsl
or
add
pusha
pop
lahf
jl
push
push
pop
call
imull
mov
or
cmc
daa
ljmp
adc
inc
cs
push
sbb
inc
push
push
adc
imul
or
das
add
adc
push
inc
mov
dec
clc
add
loop
dec
jb
push
cmp
jae
scas
das
fists
push
or
mov
push
pop
mov
aam
sub
aad
and
das
stos
push
in
fucom
bound
mov
scas
pop
outsb
push
cmp
popa
pusha
or
sub
jbe
and
jns
stc
mov
push
shrb
jmp
jmp
fsubl
adc
leave
repnz
push
dec
mov
jnp
pusha
cli
mov
inc
pop
adc
lahf
push
loop
xchg
lahf
stc
add
hlt
pusha
dec
mov
les
jnp
ret
mov
sbb
pop
sub
lcall
cli
jg
bound
mov
shr
fiadds
xchg
daa
mov
sbb
xor
mov
push
addr16
mov
sbb
dec
sub
loope
cmp
and
or
mov
sbb
mov
mov
ficoml
pushf
mov
push
pop
cmpsl
add
int3
xchg
testl
sbb
pop
mov
inc
orl
inc
insl
mov
test
sbb
mov
pop
test
jg
mov
daa
cmc
add
lahf
int3
movsb
pop
jae
scas
dec
out
adc
adc
fs
sarb
mov
mov
jmp
push
cld
jp
gs
inc
arpl
push
xchg
test
push
push
cmc
movsl
filds
dec
stc
push
movzwl
push
pop
lods
insb
mov
pusha
xor
adc
sbb
adc
add
push
jmp
xchg
imul
dec
cmpsl
xchg
pop
enter
pop
push
fcomp
cli
in
sub
aas
pop
int3
push
imul
pop
xor
dec
push
cmpsb
mov
mov
orl
push
jb
pop
sbb
test
jle
call
jns
mov
imul
ss
fsubrl
mov
inc
or
xchg
sbb
aam
sahf
or
jmp
push
das
mov
jno
repnz
mulb
push
iret
xchg
dec
loop
and
leave
aas
dec
iret
lods
jg
aas
cmp
call
iret
mov
pop
mov
push
pop
out
stos
sahf
outsb
lret
add
push
loop
mov
push
mov
mov
rorb
loopne
jmp
jmp
mov
jle
add
mov
fstpl
popa
xor
movsb
mov
nop
xchg
loopne
es
mov
cmp
out
outsb
shrb
lods
sahf
jecxz
fcompl
repz
ss
fcoms
dec
sti
test
sbb
and
jmp
pop
dec
cmp
push
or
stc
mov
stos
cs
xchg
ljmp
mov
andl
arpl
insl
or
pop
fucomip
push
push
rep
sub
xchg
call
and
sbb
call
mov
in
push
pop
mov
push
push
mov
add
mov
mov
push
sub
xchg
test
xchg
or
pop
ja
xor
in
int
dec
call
mov
ljmp
popa
dec
jns
lea
cmp
sbb
loop
aas
es
inc
sbb
fmulp
pop
add
bound
or
xor
das
fdivl
insl
sub
mov
mov
sub
ja
add
fadds
and
or
sarb
cs
and
fdivl
into
xchg
xor
pop
jp
or
jo
or
inc
mov
fstpl
aaa
clc
jmp
adc
imul
mulb
mov
addr16
test
scas
btc
shlb
call
xor
cmp
adcb
arpl
xchg
into
faddl
mov
enter
sbb
xchg
ret
pop
fldl
or
loopne
pushl
push
push
add
pop
mov
outsb
stc
shrl
scas
es
or
sti
cld
xlat
or
dec
rolb
mov
or
add
je
fldcw
imul
loopne
mov
jge
pop
pop
int3
ja
je
push
mov
in
jl
mov
jge
cmp
mov
lahf
jnp
aas
cmpsl
scas
rcrb
mov
push
into
mov
rcrl
sbb
stos
icebp
push
and
call
lret
cmpsl
leave
lcall
mov
shlb
addr16
sahf
ljmp
cmp
fbld
mulb
xchg
sbb
add
pop
nop
mov
cmp
jno
lahf
out
cmp
push
icebp
mov
adc
xor
stos
or
fsts
hlt
mov
dec
or
shrb
xchg
add
repnz
jae
or
cmpsb
subb
popa
mov
dec
add
push
cltd
out
dec
push
sbb
and
xor
into
test
lcall
push
mov
pop
adc
mov
sbb
dec
lea
data16
push
test
xchg
mov
mov
dec
ret
inc
inc
adc
stc
push
mov
xchg
cmp
xchg
ds
cwtl
and
rclb
xchg
mov
and
cmp
jo
scas
sbb
inc
test
jmp
das
xchg
shr
das
movsb
adc
or
push
js
pop
mov
pop
icebp
mov
nop
pop
insl
inc
das
or
xlat
mov
aad
pushf
add
insb
insl
dec
filds
mov
xlat
repz
test
or
aam
stos
aad
js
or
pop
pusha
mov
xor
jmp
loop
sub
test
inc
fsubl
adc
pop
ss
adc
and
call
int
shlb
adc
call
cld
jae
outsl
dec
outsb
cld
pop
pop
and
adc
hlt
sub
push
call
push
add
sbb
stos
ljmp
lahf
sti
pusha
or
push
inc
xchg
jg
rorb
cwtl
jae
push
mov
subl
aam
mov
lret
pop
jge
sub
xor
lods
out
add
add
in
dec
loop
and
pushf
lea
jmp
inc
pop
std
lahf
rorl
and
and
call
stos
push
pop
cmp
add
add
sbb
sbb
jno
insl
fsts
add
and
sti
movsl
imul
in
enter
gs
call
int
outsb
popf
addr16
sarb
imul
stos
push
add
aad
clc
lret
outsl
xor
popa
movsl
jb
add
cli
and
ret
add
ret
loope
sub
test
or
jo
xchg
and
stos
inc
pop
cwtl
scas
adc
fisubrs
or
movsd
jae
adc
xchg
ljmp
lods
mov
pop
fbstp
stc
inc
jg
and
jg
xchg
inc
dec
out
into
dec
popf
in
jae
adc
loop
call
js
mov
subb
add
mov
ds
add
dec
ds
mov
cmc
pop
xor
fadds
jbe
jbe
or
ja
jle
add
xor
inc
add
xorb
mov
xchg
xor
dec
push
ljmp
pop
push
xor
cmpsb
stc
lods
mov
jns
xchg
aad
aad
pop
dec
pop
test
mov
mov
push
xchg
cltd
or
push
push
inc
pop
inc
mov
or
pop
out
or
mov
clc
shlb
inc
jmp
and
jge
inc
mov
pusha
cld
xchg
insb
or
mov
out
xchg
lds
pushf
clc
cmpsb
jae
cmpsb
push
shrb
jmp
lea
sub
or
lea
icebp
or
loope
fbstp
adc
ss
mov
popa
inc
ss
add
mov
inc
sbb
dec
dec
push
hlt
sub
jg
inc
mov
add
insb
mov
in
fildll
jno
addb
jmp
jmp
data16
movsl
push
inc
icebp
std
enter
jbe
fistl
lock
pop
push
daa
sub
adcl
mov
xchg
mov
jns
sub
lock
mov
sub
mov
sub
lods
jle
psubq
xor
insb
pop
les
stos
les
sbb
outsl
sbb
enter
fistpll
jmp
outsb
sub
mov
add
fsubl
xchg
mov
inc
and
jmp
iret
dec
mov
leave
das
imul
cs
cwtl
pop
les
test
or
xchg
dec
daa
loopne
leave
dec
popa
mov
insl
or
pop
and
pusha
xchg
adc
aad
test
jno
daa
in
int3
mov
mov
or
xor
test
inc
fcmovb
inc
push
cli
dec
sar
fidivs
fdivl
stc
inc
jmp
call
dec
add
jg
mov
cwtl
dec
jmp
gs
pop
out
or
push
mov
add
imul
dec
cs
lds
imul
call
push
rcrl
cmp
loop
in
into
stos
push
mov
or
or
es
nop
je
mov
call
arpl
push
jp
or
inc
sar
shrl
push
cmp
adc
jge
ja
sti
xchg
into
into
clc
movsb
inc
push
mov
call
out
sub
cmp
outsl
inc
add
stos
test
dec
push
data16
jno
dec
inc
jmp
repz
mov
rcrl
ja
push
mov
imull
test
out
xor
cmc
or
mov
decl
jmp
mov
inc
mov
jo
push
mov
or
test
mov
jmp
push
jg
sub
loope
lcall
inc
fidivs
stos
and
stos
xor
add
mov
jns
mov
notl
add
inc
stc
sub
inc
and
in
push
and
fstpl
jl
push
inc
stos
adc
ret
mov
and
inc
inc
out
call
sub
jno
inc
xor
xchg
mov
add
test
mov
cmp
mov
jns
jb
call
popf
dec
dec
mov
repnz
push
lret
mov
cld
mov
pop
cmpsb
lds
sub
sub
loopne
push
push
add
sahf
or
es
pop
sarl
imul
mov
add
inc
and
gs
add
mov
mov
cmp
adc
stos
in
push
lods
call
shl
mov
inc
cli
inc
and
pop
push
ja
add
movsb
xchg
lret
mov
testl
stos
test
imul
add
xor
dec
nop
scas
jb
mov
daa
rorb
sbb
xchg
and
std
sbb
rcr
jmp
push
mov
adc
mov
fsub
mov
fdivrl
sub
push
lcall
dec
je
jmp
lret
xor
cmp
and
pop
add
mov
pop
out
add
cmp
ljmp
call
push
inc
mov
out
adc
inc
and
and
inc
pop
mov
cmp
jbe
xchg
cmp
add
add
leave
xor
cmp
xchg
pop
sbb
outsb
push
lcall
push
sbb
sub
das
add
xor
jp
push
sbb
push
xor
mov
sbbl
jae
add
adc
mov
cmc
mov
inc
mov
addl
shll
in
fsub
and
sub
mov
filds
sarb
or
mov
jge
add
or
cmpsl
jmp
mov
paddq
leave
adc
rcrl
xlat
and
sub
adc
mov
pop
dec
rorl
sub
fnsave
xchg
mov
and
loope
jae
mov
cmc
sbb
add
imul
adc
pusha
orl
das
inc
inc
mov
insb
sbb
clc
sub
mov
sbbb
cwtl
mov
pop
xor
call
mov
xor
in
push
jmp
in
pop
jo
iret
mov
mov
xchg
and
clc
xor
mov
insb
pushf
sub
imul
mov
or
daa
sub
hlt
sbb
in
jno
notl
aas
xor
pop
adc
lods
test
sbb
xor
adc
inc
call
push
push
cli
dec
das
jmp
data16
outsb
pop
jg
or
xor
sti
sbbl
xchg
add
lcall
mov
add
and
sbb
cmp
cltd
mov
lea
je
xor
call
sub
inc
shrb
push
sbb
push
repnz
push
call
repnz
sbb
ljmp
pop
loop
jg
loop
push
call
jae
insb
les
lcall
jmp
push
cli
sub
push
mov
stos
ja
inc
pop
xor
std
inc
sbb
xchg
push
cmpsb
push
pop
xor
test
and
mov
pop
jno
push
sub
aam
repz
fwait
mov
or
pop
rclb
lea
cmc
inc
aaa
pop
movsl
or
pop
shll
pop
sbb
mov
pusha
or
mov
cli
das
add
cmpb
sub
scas
mov
adc
movsl
rcrb
fildll
sub
loopne
push
adc
adc
and
sarb
dec
xlat
jo
scas
sbb
cs
sbb
sbbb
inc
loop
mov
push
pushf
loopne
call
cmpsb
mov
in
lret
popf
pop
pushf
inc
imul
xorb
addr16
mov
cmp
sbb
jno
xchg
cmp
addr16
stos
pop
pop
add
or
hlt
jae
je
push
pop
cld
in
dec
add
fidivrs
jp
cld
push
mov
jmp
add
ficomps
sub
movsb
test
pop
incl
xor
int3
jo
inc
repz
ja
pop
enter
lods
sbb
rcr
imul
lea
mov
jo
call
mov
mov
xor
std
jns
and
inc
add
out
sti
mov
jne
sbb
or
pop
sub
loope
mov
out
push
je
test
inc
scas
ds
xchg
dec
adc
lock
fidivrs
and
lahf
or
daa
xor
or
shl
dec
imul
pusha
dec
lods
push
push
mov
sbb
pop
xor
out
leave
mov
mov
xor
arpl
scas
jns
cli
adc
test
orl
inc
or
inc
popf
inc
adc
pop
sbb
int
orl
xlat
shr
lods
sbb
xchg
xchg
mov
decl
inc
lahf
dec
push
add
ds
adc
jl
call
or
xor
push
cli
shlb
pop
int
mulb
mov
cltd
mov
nop
or
xchg
les
stos
and
push
adc
dec
idiv
fdivp
xchg
sahf
push
add
xor
aad
sbb
xlat
dec
inc
es
icebp
or
fidivrs
xor
mov
pusha
lahf
rclb
repnz
and
push
jno
outsl
jl
aam
inc
mov
xorl
inc
add
and
adc
or
jmp
lahf
xor
jbe
xor
jns
push
xchg
in
mov
stos
dec
inc
aam
inc
sbb
out
mov
sbb
cs
sub
mov
sbb
sub
xchg
mov
out
push
dec
enter
xor
sbb
lods
sub
mov
clc
mov
push
push
movsl
mov
lret
lret
add
cli
mov
jmp
or
dec
lret
push
add
or
sub
mov
cmp
mov
mov
ja
inc
xchg
or
loope
aam
push
insl
gs
test
jmp
pop
inc
shlb
xchg
xchg
mov
inc
and
add
in
dec
aaa
mov
ja
cltd
jge
jp
jbe
pop
mov
mov
jo
cs
adc
mov
xchg
mov
xchg
sub
sub
push
je
or
sub
les
lahf
into
sbb
push
arpl
das
or
fwait
call
jmp
mov
loopne
xchg
mov
in
sbb
adc
loop
or
adc
cmp
std
insb
in
xchg
inc
push
inc
cmp
xchg
sub
sub
daa
add
push
popf
push
pop
xchg
ss
rol
dec
int3
inc
mov
rclb
mov
addb
pop
ljmp
jecxz
dec
ret
jge
jno
push
mov
stos
ret
xchg
sbb
mov
andl
xor
push
xor
jle
call
xchg
pop
mov
andb
call
or
fldenv
sbb
mov
std
xor
andb
cli
imul
jmp
mov
and
cmpsb
pop
jae
mov
xchg
dec
testb
jmp
out
call
mov
js
inc
cli
cld
push
pop
pop
add
mov
lcall
dec
cmpsl
adc
add
adc
or
push
aam
jbe
lock
xchg
mov
cmc
add
mov
lock
arpl
loope
cmp
xchg
call
sti
dec
or
or
cmp
mull
inc
jge
xor
ret
ja
ret
jns
das
ja
mov
adc
mov
cmp
pop
push
call
push
cs
inc
inc
mov
mov
aas
xor
outsl
xor
sar
pop
mov
cmp
pushf
aas
test
fildl
in
int3
adc
pop
mov
jl
mov
sbb
adc
fdivl
pop
pop
jmp
clc
adc
mov
mov
push
xchg
icebp
xor
movsl
inc
das
add
sti
or
jmp
mov
xchg
add
xchg
xchg
scas
pop
sub
or
fwait
jb
lret
lcall
repnz
and
ljmp
push
adc
xchg
dec
adc
sub
mov
inc
dec
dec
or
lock
andb
mov
lock
or
pop
cmpsb
iret
clc
in
mov
add
sub
pop
cld
lret
rcll
lods
jo
push
mov
loopne
leave
sbb
out
dec
loop
inc
leave
dec
aaa
hlt
cmp
std
sbb
xor
lea
add
inc
mov
dec
lods
pop
mov
in
mov
add
stos
jb
pop
outsb
jge
in
ljmp
mov
sub
hlt
sbb
or
arpl
call
jecxz
jge
xor
je
and
iret
call
rolb
fists
cltd
push
adc
call
movsb
xor
push
mov
jl
sbb
and
cmp
mov
loop
cmp
inc
cmp
and
jmp
mov
jp
fistps
pop
aad
xchg
lret
test
inc
dec
popf
add
inc
mov
cmp
adc
cmp
lret
pop
ss
pop
jl
mov
lock
enter
repnz
xor
test
in
pop
push
mov
hlt
aaa
int
mul
jo
push
dec
adc
or
sbb
mov
stos
or
bnd
jmp
call
mov
rcll
jecxz
pop
mov
push
push
call
out
add
shrb
imul
push
mov
inc
cwtl
pop
addb
sub
mov
ja
popa
out
test
jae
movsl
and
xorl
inc
in
jo
aad
xchg
dec
sub
dec
dec
jg
jmp
popf
call
inc
xchg
sahf
sbb
jno
cmp
mov
mov
mov
pop
test
flds
sub
stc
mov
jae
mov
rcll
push
rclb
mov
int3
add
in
mov
mov
mov
sub
fildll
icebp
or
jp
xor
xlat
or
mov
cmpsl
mov
mov
jb
mov
imul
bound
js
ja
xlat
in
ret
lahf
or
mov
xchg
inc
ja
and
jp
xor
add
sub
in
lods
push
sbb
fcomip
push
mov
adc
dec
pop
fldcw
aad
in
sete
xchg
dec
ja
fldt
cmc
loopne
push
jns
dec
push
loope
push
push
mov
and
mov
add
sti
ss
adc
push
jmp
and
in
ror
jbe
fnstenv
es
popf
daa
ret
xchg
pusha
jecxz
sub
xor
pop
loop
push
leave
jns
or
in
push
push
orb
mov
dec
jns
cmp
ret
test
call
push
jno
push
imul
dec
out
jmp
aaa
mov
xchg
or
lock
sbb
orl
clc
cmp
sub
ljmp
scas
cmp
push
out
dec
jnp
and
rolb
orb
mov
sub
popa
push
pop
mov
aaa
lock
dec
cmpsl
mov
pop
pop
add
sti
fldcw
in
cwtl
sahf
adc
mov
mov
jmp
daa
inc
jl
cmp
adcb
mov
daa
sbb
jp
dec
jmp
cld
or
inc
lds
jne
test
jb
jb
fwait
daa
js
in
hlt
cld
xchg
test
cmp
add
lret
mov
or
push
pop
es
js
mov
sub
cmp
jge
test
pop
mov
pop
icebp
iret
mov
repnz
dec
call
dec
popf
in
inc
mov
cmc
fs
cltd
lahf
mov
jno
loop
lock
cmp
mov
loopne
mov
add
xchg
pop
or
cli
call
int3
imul
pop
cli
icebp
je
movsbl
adc
pop
insb
fnstenv
filds
int
push
jo
pop
jmp
fldt
and
lcall
pop
push
cli
data16
sahf
pop
mov
push
test
and
sti
dec
test
andl
imull
ret
fstps
sub
dec
push
xchg
add
sbb
jmp
add
scas
lock
mov
out
outsl
inc
cwtl
test
jmp
pop
mov
cli
or
mov
pop
dec
div
push
jmp
push
add
mov
push
push
insb
pop
daa
lret
cmp
sbb
or
or
icebp
or
and
cld
or
popf
clc
outsb
bound
addb
xchg
xor
jecxz
jp
push
rep
call
fdivp
imulb
and
popf
into
mov
arpl
std
mov
adc
mov
inc
jmp
pop
sbb
pushf
rolb
aam
sarl
inc
lods
inc
sahf
add
xor
out
out
adc
hlt
inc
mov
mov
cmp
stc
mov
inc
cmp
xor
add
int
cmpsb
mov
icebp
and
std
mull
jmp
out
adc
mov
jl
shrl
lods
fnsave
cwtl
and
test
adc
int
in
lds
lock
push
add
jp
loopne
push
mov
lds
or
adc
push
or
shl
add
add
xchg
mov
xchg
inc
sbb
push
add
cli
les
push
cmp
mov
xor
fucomip
loop
pop
mov
orb
inc
cmp
adc
fadd
mov
sub
jne
mov
lds
xchg
cwtl
inc
and
mov
mov
lcall
mov
call
call
inc
pushf
scas
mov
dec
aad
cwtl
dec
ficoms
xor
pop
dec
inc
sbb
inc
repnz
inc
insl
sbb
dec
pop
mov
mov
mov
loopne
jnp
sub
pop
inc
push
mov
mov
out
jo
adc
fiadds
push
lods
or
pop
sub
ret
adc
push
mov
stc
sub
les
das
dec
mov
or
stos
call
mov
and
loopne
ret
imul
insl
repz
mov
repnz
cmp
sti
bound
dec
xor
jae
inc
sbb
adc
dec
iret
dec
scas
push
mov
outsb
adc
addb
pop
fsts
push
and
mov
dec
jno
insl
xchg
cmp
or
inc
xor
movsb
jp
outsb
fistl
insb
dec
scas
pop
das
nop
jmp
aad
clc
sub
pop
iret
push
pusha
data16
xor
cmp
xchg
add
mov
inc
inc
dec
out
add
inc
xor
ja
and
sbb
daa
jns
jl
dec
sbb
mov
arpl
hlt
mov
jmp
mov
xchg
shlb
insl
jp
cmp
and
shlb
mov
xor
push
jmp
xchg
push
es
bound
lret
lods
mov
mov
cld
int3
repz
xchg
push
into
outsb
push
inc
lods
call
jle
mov
fst
sbb
and
mulb
mov
adc
jno
sub
sub
or
scas
xchg
and
test
call
jmp
push
sbb
push
inc
divps
mov
loop,pn
inc
dec
push
in
jns
dec
aam
xor
pop
in
ja
fmull
mov
push
sbb
xor
mov
or
test
sbb
cmp
jnp
fs
mov
dec
push
test
aad
mov
std
lcall
cmp
jmp
das
je
or
loop
movsl
sti
or
mov
lea
or
add
xchg
sbb
sbb
cld
push
mov
sti
ss
pop
add
fwait
rorl
and
mov
mov
sti
sub
loop
or
in
and
mov
sbb
es
stc
loopne
dec
and
pushf
and
sbb
cmp
mov
xchg
cld
shrl
lock
xor
das
mov
mov
push
jle
call
push
xchg
push
add
jo
cltd
pop
push
sub
add
imul
inc
adc
jbe
cld
nop
addr16
repnz
stos
xor
fnsave
cmp
pop
push
icebp
xor
fcomi
jno
cmp
xor
pop
or
push
das
popa
mov
or
inc
sbb
in
pop
cli
sti
sub
mov
push
inc
mov
loope
pop
cmp
xchg
rcll
sbb
push
jmp
cmp
aam
and
loop
and
push
cmp
sbb
adc
jecxz
hlt
mov
mov
jp
sbb
out
adc
inc
je
enter
aaa
fldl
xor
ss
or
call
pop
mov
mov
xchg
and
call
inc
push
pusha
leave
adc
pop
cltd
xor
push
scas
or
bound
stos
add
pop
xchg
inc
xor
xchg
int3
sbb
rolb
mov
dec
mov
jo
call
xchg
fcoml
inc
or
ret
mov
das
pop
fwait
cmp
or
loope
jno
push
jo
mov
inc
dec
addl
push
xor
scas
rclb
cmpsl
lea
roll
push
mov
sub
xor
mov
jmp
mov
push
lods
into
enter
inc
in
inc
stos
dec
push
pop
mov
pop
outsb
mov
aas
inc
push
push
push
hlt
punpckhdq
cmp
mov
jp
inc
or
push
inc
repz
mov
inc
std
fistl
sahf
enter
pushf
sahf
or
xchg
jns
sub
scas
xchg
ljmp
add
mov
pop
sub
ja
and
or
das
mov
popa
test
fcmovu
jg
xlat
outsb
fwait
pop
cmp
xchg
dec
fdivr
ds
repnz
lock
push
jle
lods
add
movsb
jbe
shll
mov
icebp
in
and
pop
dec
sti
fsubl
out
add
lea
lock
push
mov
test
clc
xchg
fidivl
cwtl
mov
mov
adc
in
mov
fnstcw
lds
fs
leave
cmp
and
inc
fldt
jne
xchg
adc
out
or
in
das
cwtl
ljmp
repz
push
mov
xor
negl
sub
pop
nop
adc
movsl
mov
dec
mov
mov
sbbb
adc
push
and
or
push
std
pop
leave
icebp
pop
je
clc
popa
mov
iret
xor
insl
sub
push
cmp
jmp
xchg
sub
mov
mov
pop
mov
mov
mov
cs
sub
lea
sub
fucomip
jne
jo
idivb
mov
add
mov
xchg
cli
xor
incb
lahf
xor
xor
mov
sbb
stos
int3
sub
test
clc
jbe
pushf
jecxz
dec
sub
push
push
sub
jmp
add
popa
or
imul
cmp
push
ss
arpl
jge
fsubs
jnp
jno
mov
add
data16
stos
inc
inc
mov
js
dec
xor
jecxz
and
jbe
sbb
call
aad
fmull
pop
loopne
xorb
mov
dec
push
push
xor
sub
mov
or
push
xchg
sti
adc
ljmp
incl
jae
aam
in
hlt
sbb
movsb
out
outsb
jecxz
cmpsl
mov
fldl
dec
pop
jg
cwtl
data16
mov
in
cs
xchg
hlt
mov
cmp
dec
sti
or
pop
mov
mov
repz
faddp
push
mov
inc
lods
xchg
or
mov
dec
aas
clc
mov
outsl
xchg
mov
int3
pop
fistpl
out
mov
pushf
jmp
adc
mov
flds
sub
jmp
pop
pop
fwait
lcall
mov
push
lods
mov
and
filds
rorb
ret
push
push
cwtl
adc
adc
call
mov
das
mov
scas
or
add
shlb
addl
test
push
insl
jle
incb
push
lds
mov
dec
insl
mov
aad
cmp
ret
dec
or
fsub
insb
mov
add
push
cmp
dec
call
repnz
test
fmuls
and
push
lods
loop
pop
fstpl
sub
stos
dec
xchg
and
mov
add
loop
ficoms
das
mov
push
stc
testl
xlat
xor
popf
jo
inc
lods
sub
ret
lret
push
fists
fucomp
out
sub
inc
or
in
xorl
push
push
or
xor
jns
std
xchg
jnp
sub
cmp
pop
mov
mov
jb
and
fs
xor
stc
filds
dec
sub
inc
pop
je
jno
inc
mov
or
ret
mov
cmp
or
dec
xchg
cmp
sub
sahf
mov
sub
mov
xchg
push
call
cmc
and
add
jmp
stos
loopne
xor
or
scas
pop
jge
push
scas
out
shlb
lahf
mov
addl
and
es
xor
inc
rorb
sbb
test
xlat
addr16
add
add
or
mov
pop
pop
nop
shr
pop
or
mov
popf
mov
xor
dec
mov
pop
and
repnz
jl
xchg
call
test
repz
fidivrs
leave
fdivrl
push
lea
fisttpll
cmp
inc
outsb
cmpsl
push
cmp
cld
xchg
call
int
loope
add
js
sbb
addr16
inc
mov
add
or
daa
adc
jne
data16
popa
insb
in
test
stos
xor
add
cmp
pop
or
dec
jg
fmuls
lods
pop
pop
out
shr
add
test
aas
clc
loope
jbe
fildll
cmp
jg
in
adc
addl
int3
je
pop
dec
lock
jmp
test
jmp
inc
and
xchg
inc
jmp
fucomi
mov
pop
mov
mov
push
aad
dec
shlw
pop
xchg
test
and
test
out
ja
in
push
cmpb
xor
sub
cli
inc
data16
adc
icebp
mov
movsl
orb
ljmp
sbb
mov
push
jle
rclb
sti
rcr
das
pop
jns
addb
data16
jle
sub
icebp
cwtl
mov
or
mov
popa
pop
inc
repz
fdivl
ret
std
pushf
mov
dec
mov
inc
add
mov
sbb
and
rol
sbb
popf
xor
jnp
cwtl
test
js
and
push
xchg
lds
jno
movsb
imul
sbb
outsb
xchg
push
dec
inc
mov
lods
mov
cmp
fnstsw
mov
faddl
sarb
sbb
xor
jb
inc
popa
inc
lea
nop
lds
jo
nop
fnsave
pop
pop
leave
rcr
pop
ljmp
jns
iret
and
shll
jbe
stos
pop
rcrb
sarl
jmp
xorb
std
xchg
inc
sub
mov
jge
and
jbe
mov
lahf
sahf
hlt
aaa
hlt
enter
add
aad
into
pop
lret
sub
ds
cwtl
jmp
push
pop
cmp
imul
ror
pop
or
testb
jbe
loopne
or
data16
imulb
xlat
shlb
xor
mov
ja
add
and
ret
sti
popf
das
out
dec
push
sbb
jge
push
pushf
or
mov
xor
jmp
out
jecxz
push
pop
out
jmp
jmp
mov
lock
mov
xchg
sbb
les
sti
cmp
testb
adc
rol
mov
sbb
xor
jmp
and
inc
push
jo
ret
call
add
jmp
sahf
insb
enter
xchg
mov
xchg
ja
push
or
pop
adc
call
stc
test
sub
stc
adc
imul
fwait
lsl
xchg
movsl
inc
mov
test
jbe
paddq
out
push
sbb
pushf
pusha
popf
popa
inc
push
ljmp
cmp
test
sbb
mov
fs
rcrb
jns
xchg
loope
mov
push
cs
mov
in
inc
lret
mov
enter
dec
imul
jl
xor
mov
sarb
sbb
cmp
xor
cs
and
jb
adc
pop
or
rcrl
nop
dec
loop
popl
xchg
xlat
dec
push
mov
xor
dec
jb
fsubrl
xchg
into
fsubrl
mov
push
pop
mov
xor
outsb
pop
loop
fwait
jae
pushf
push
rcrb
call
pop
mov
jmp
mov
lcall
jno
sarb
inc
ds
mov
enter
popa
gs
mov
fstl
xor
imul
mov
jae
pop
sbb
sbb
or
lods
inc
mov
dec
ficoms
aam
mov
fwait
and
sub
call
pop
dec
pop
jmp
xchg
push
mov
mov
dec
jge
adc
or
inc
inc
mov
ljmp
jmp
inc
sbb
inc
dec
hlt
dec
in
mov
lret
push
xchg
pop
jecxz
sub
faddl
jmp
mov
xchg
lds
mov
sahf
xor
clc
and
pop
mov
or
adc
int
push
xor
jmp
in
mov
addr16
push
icebp
and
mov
jmp
lcall
pusha
push
mov
and
pushw
stos
mov
out
shl
xor
push
in
orb
dec
pop
sbb
sub
mov
loop
stc
add
stc
mov
fmul
xor
shr
into
rol
pop
out
insl
aas
lahf
mov
mov
pushf
push
pop
shlb
xor
push
movsl
sub
cmp
pop
rclb
push
xor
jne
test
sahf
scas
lret
add
stos
sahf
jmp
cmpb
mov
jo
and
sub
jns
cld
addr16
out
enter
int
pop
movsl
jbe
mov
mov
cmp
and
xchg
fildl
pop
mov
cmp
pop
ds
fxtract
adc
adc
test
fcompl
dec
xchg
or
add
push
call
shl
mov
sub
test
mov
gs
shrb
push
clc
scas
jmp
push
test
pop
xchg
jbe
cli
push
frstor
mov
std
xchg
sub
or
hlt
or
sub
xchg
jns
and
mov
or
hlt
adc
rorb
inc
mov
push
pop
jp
mov
sbb
lds
loopne
jo
mov
cs
imul
pop
faddl
hlt
je
jge
ret
sar
mov
pop
add
xchg
notb
js
testb
mov
push
add
je
imul
aad
xchg
fstps
push
int3
out
dec
xlat
or
test
push
aad
mov
mov
jnp
cmc
or
add
inc
stc
std
fs
or
je
add
in
lahf
push
shll
xchg
push
mov
mov
mov
xlat
xor
mov
push
out
testb
test
psubsb
iret
sub
cltd
sbb
sahf
in
imul
add
scas
push
xchg
dec
jo
inc
add
and
aam
xchg
push
dec
push
add
into
fdivs
shlb
bound
xchg
sub
aas
leave
xor
push
xchg
mov
fcoms
inc
jmp
xor
hlt
filds
mov
cld
push
data16
sti
call
lock
mov
dec
xchg
mov
adc
incb
xchg
loop
xchg
bound
mov
and
faddl
jmp
xor
cmp
xchg
dec
lods
pop
lock
cs
dec
or
jmp
push
cmp
sub
lret
add
sub
stc
xchg
inc
das
aam
dec
imulb
and
jnp
dec
cwtl
lds
jb
sbb
icebp
idivb
clc
sub
sub
lahf
jle
roll
xor
jecxz
add
andnps
dec
jmp
cwtl
cltd
or
out
add
sbbl
outsb
cmpsb
les
pop
test
push
test
and
mov
daa
stc
add
xchg
mov
fcompl
fwait
add
mov
xchg
cmp
dec
cmp
jge
inc
adc
fs
push
and
test
sub
inc
push
bound
dec
xchg
xor
or
subl
jne
mov
cmp
int3
mov
aad
or
loope
subl
jae
dec
cmpsb
icebp
add
inc
mov
repnz
sub
loopne
sub
mov
out
fnstenv
movsb
adc
data16
ror
rcrw
aam
inc
loope
add
jecxz
mov
xor
xor
xor
mov
mov
push
xchg
jbe
lahf
pop
mov
inc
call
mov
lods
push
mov
shl
jo
stos
xor
movsb
incb
jbe
lcall
sub
notl
cmp
subl
bnd
push
hlt
or
mov
jbe
dec
mov
sbb
mov
push
pop
pop
pop
push
movsb
mov
or
xchg
dec
cli
pop
stos
inc
cld
cmpsb
daa
push
lods
or
lods
mov
xchg
pusha
in
dec
call
sahf
insb
filds
out
orl
das
subb
pop
push
or
dec
das
incb
sbb
sub
loop
xchg
sbb
out
imul
sbb
push
sahf
ljmp
jle
push
mov
push
cmp
scas
or
shr
push
sub
test
icebp
lret
dec
ret
adcb
or
or
dec
pop
stos
jmp
rcrb
cmp
inc
xor
lret
jno
movsl
cmpsl
xor
jg
add
jo
xor
hlt
lret
mov
lds
test
and
pop
pop
or
cmp
pop
push
in
jns
mov
or
pop
dec
sub
mov
jo
es
xchg
sarb
cltd
adc
lock
aas
cmp
mov
xchg
sbb
or
mov
gs
jo
push
mov
ds
movsl
test
push
push
dec
add
pop
lds
sbb
cmpsl
mov
xor
nop
add
test
sub
push
jmp
cmp
movl
or
pusha
out
out
cwtl
shlb
aas
test
mov
mov
fisttps
mov
mov
xor
jmp
push
add
xchg
jle
inc
in
mov
mov
jp
inc
push
mov
pushf
or
xor
adc
push
adc
jb
mov
mov
add
lret
xchg
mov
or
jle
add
jae
fisttpll
mov
push
jo
push
test
dec
call
testb
cmp
shll
es
mov
jb
into
dec
pop
push
mov
push
pop
inc
inc
rolb
leave
pop
enter
jb
push
dec
mov
adc
add
adc
mov
fcompl
mov
cmpsb
clc
push
std
stos
les
jge
xor
inc
pop
mov
movsb
rcrl
daa
das
stos
push
pop
dec
dec
jmp
imul
mov
lret
add
mov
dec
test
les
or
or
fstpl
jo
leave
sahf
sub
filds
call
pop
or
loop
push
mov
xchg
hlt
cld
icebp
pop
lahf
inc
mov
jo
out
mov
push
mov
dec
ret
stc
loopne
ljmp
jmp
mov
dec
jb
shl
out
lea
stc
int3
cwtl
jmp
daa
mov
stos
push
xchg
stos
sub
mov
mov
setp
or
xor
in
sti
dec
adc
pop
cmp
insb
rclb
pop
sti
sarb
sub
push
push
xor
push
cmp
negb
push
mov
jl
xchg
les
cs
jecxz
add
add
pop
dec
mov
dec
shlb
dec
push
push
les
xchg
fisttps
bound
imul
mov
daa
pop
mov
sub
mov
aad
leave
stos
jmp
fs
mov
lods
add
jp
dec
sahf
ficoms
sub
in
test
lock
add
lahf
jl
mov
xor
or
inc
jle
loopne
mov
adc
add
outsl
sbb
call
inc
nop
mov
mov
ret
js
sub
in
sub
xor
push
data16
jbe
pop
push
sbb
push
push
movsl
negb
cltd
shlb
mov
ljmp
roll
or
or
stc
stos
xchg
mov
insb
aam
and
popa
popa
pop
sub
jle
sub
inc
push
inc
and
inc
call
sbb
mov
in
hlt
add
sbb
lahf
jbe
pop
outsb
es
lahf
inc
jmp
ds
cmp
adcb
int3
sti
call
sti
rcl
pop
call
call
fbld
inc
in
imul
popf
push
xchg
call
mov
cmp
push
nop
mov
imul
stos
and
fisubs
jb
cmpsb
sbb
idivl
lret
sub
daa
das
xor
mov
insl
repnz
int
push
mov
cmp
sbb
mov
jle
insb
lock
mov
aad
out
adc
xor
icebp
leave
fcmovbe
stc
icebp
adc
push
pop
push
xchg
mov
sahf
mov
pop
jb
jmp
nop
hlt
mov
ret
push
inc
mov
add
insb
mov
pop
or
jb
fsubl
in
call
orl
push
mov
push
jmp
add
mov
in
cmp
mov
mov
push
hlt
pop
js
sub
negb
xor
loop
loope
xor
jmp
insb
xchg
pop
pop
xchg
les
or
sub
pop
js
add
test
xchg
mov
jo
shr
xchg
xchg
adc
repz
shrb
adc
add
sub
sub
or
jmp
outsl
sub
int3
jecxz
addr16
dec
dec
xchg
pop
out
cmp
clc
loop
imul
cmc
lods
pop
fwait
dec
push
into
mov
aas
jge
in
pop
jecxz
ss
fwait
add
cmp
jmp
enter
ja
cmc
popf
arpl
push
mov
repnz
jp
mov
mov
scas
nop
stos
jmp
loope
cmpsb
icebp
cld
push
mov
add
mov
pop
sbb
sub
add
pop
in
test
jmp
and
inc
aaa
adc
test
jo
push
push
inc
pop
xchg
shr
shll
sub
mov
aas
aad
je
inc
push
ja
and
mov
rcll
ljmp
pop
fcom
or
out
adc
test
push
sbbl
jnp
lock
test
xchg
popf
inc
pop
repnz
ret
das
pop
xchg
adc
rcl
or
or
xor
outsb
scas
and
das
aas
rcrl
inc
push
fdivs
cwtl
mov
lods
push
sbb
jne
pop
sub
push
mov
cmp
xor
push
mov
js
sbb
mov
jle
sub
xor
add
cmpb
icebp
rcr
not
cmp
mov
cmpsl
push
gs
mov
scas
les
inc
lds
dec
stos
and
push
add
xchg
fists
scas
and
push
cli
sub
adc
add
mov
stc
in
xchg
sub
jmp
sbb
adc
push
inc
inc
mov
mov
pushf
pop
adc
int
inc
add
cs
sti
xchg
ljmp
and
jne
jae
leave
mov
mov
or
fbstp
ja
mov
jecxz
popa
jnp
jmp
sbb
pusha
mov
sub
ss
mov
jp
enter
jmp
jo
mov
loop
push
dec
ja
jo
push
sub
cmp
loop
or
sub
xchg
out
inc
stc
dec
scas
call
cmpsl
mov
repnz
add
cmc
fstps
stc
bound
insb
pop
fsubr
jno
and
popa
sub
push
pop
inc
pusha
ljmp
pop
insl
push
mov
mov
pushf
mov
imull
fsts
jp
and
lahf
mov
pop
xor
cmp
push
xorl
xchg
push
int3
inc
jns
call
out
lahf
or
testl
lret
inc
insb
lods
dec
out
aaa
call
push
mov
in
mov
fidivrl
jg
shl
jecxz
mov
sub
jmp
add
mov
adc
jg
out
xchg
push
mov
cmp
xchg
inc
jb
rcrl
cmpsl
or
push
mov
pop
push
into
and
push
add
jmp
das
mov
in
negl
js
xchg
daa
inc
inc
ja
imul
adc
jecxz
outsb
stos
and
and
out
dec
stos
jmp
mov
shl
mov
ljmp
sub
out
cs
xor
xchg
sub
jge
leave
cmp
mov
fimull
mov
hlt
dec
jge
jmp
scas
pop
adc
mov
icebp
pop
test
cld
testl
adc
inc
cmp
push
dec
push
cmp
mov
cmc
jno
hlt
outsl
mov
das
js
rorb
cmc
and
aad
jp
cmp
shr
mov
inc
rcr
out
push
call
arpl
das
jb
out
stc
aad
add
addr16
stos
into
push
enter
shl
inc
mov
sbb
push
ljmp
or
push
jge
fldenv
jo
sahf
xchg
rol
adc
cmpsb
and
jge
xor
icebp
jbe
jbe
call
lret
sub
sbb
mov
fwait
mov
jmp
fnsave
fs
or
xor
cmp
xchg
loopne
enter
stos
xchg
inc
cmc
xchg
sub
or
sub
cmc
sub
sti
and
pop
sahf
push
jecxz
fbstp
push
call
movsl
push
push
cs
fisubs
aaa
ljmp
hlt
xchg
loope
adc
fstps
cmc
xchg
and
jnp
out
cwtl
lock
data16
adc
or
push
dec
or
rorl
mov
or
test
fidivrs
mov
es
add
jbe
add
cmp
sbb
imul
push
je
mov
lea
mov
pushf
lods
loope
sbb
adc
inc
ds
lret
fdiv
push
mov
mov
lcall
sbb
lcall
in
insb
insl
xor
lea
test
repnz
lret
adc
lds
lock
test
xor
test
notl
jbe
jb
jmp
ja
adc
dec
inc
icebp
mov
xchg
inc
xchg
ja
jg
push
fistps
aaa
test
sbb
mov
les
test
add
call
adc
cmp
xor
mov
or
sub
mov
mov
fisttpll
shrb
sub
mov
mov
inc
pop
push
inc
adc
sbb
xor
cld
jb
xor
imulb
rolb
sbb
sti
push
cltd
cmp
mov
push
mov
add
jnp
aad
adc
fwait
scas
pop
pop
fcoml
mov
dec
popf
loope
sbb
popf
mov
sbb
gs
adcb
push
sub
sub
rcrb
pop
sahf
and
jmp
inc
fldenv
mov
iret
xchg
icebp
mov
push
xchg
sbb
cmpsb
adc
mov
ljmp
scas
stc
mov
push
cmp
xchg
into
lods
jbe
sbb
cmp
popf
jno
call
insl
add
cmpsl
lahf
clc
cmp
mov
repnz
mov
inc
outsb
push
loope
cmp
xor
pop
sbb
mov
lock
inc
push
sub
hlt
push
je
mov
pop
rorl
jmp
cmp
and
xor
jge
aas
rorb
stc
lea
jmp
mov
xchg
inc
xchg
or
xor
les
mov
std
inc
mov
push
push
add
sbb
mov
push
inc
mov
fldcw
mov
push
xor
mov
adc
cwtl
or
jns
aad
stos
mov
cmpsb
jge
movsl
pop
inc
out
repnz
or
addr16
dec
mov
dec
mov
inc
neg
inc
pop
mov
daa
cmc
pushf
add
mov
and
notl
shr
cmp
out
data16
into
enter
sahf
or
movsl
inc
repnz
daa
dec
sbb
jg
subb
ja
call
jmp
jb
mov
call
push
sbb
jl
jg
into
daa
mov
sarb
sub
popf
insl
xchg
movsb
cld
dec
pop
out
adc
outsb
mov
loopne
popf
clc
or
jge
ret
loopne
scas
ss
cld
xorb
sub
fidivrl
mov
and
and
mov
push
stos
push
add
sarb
mul
mov
pop
sarb
xor
mov
mov
test
add
enter
nop
mov
jle
dec
lahf
aaa
pushf
clc
push
sub
sbb
call
inc
push
in
fldt
cmp
push
incb
lcall
dec
fidivrs
pop
jb
int3
rcr
inc
jmp
test
add
sub
push
aaa
adc
mov
lret
jmp
lock
cld
fidivrl
hlt
aad
mov
push
mov
test
aaa
jmp
sbb
mov
push
in
jae
sbb
push
or
and
pushf
pop
sahf
cmp
mov
xor
es
xchg
mov
fiadds
xchg
rolb
nopl
aas
and
icebp
cmp
pop
test
insb
lea
pop
call
add
fnsave
push
inc
push
stc
xor
outsl
add
jne
stc
aam
insb
jp
fisubrs
mov
ds
pop
add
or
call
jmp
js
xchg
push
adc
sub
test
xchg
pop
subb
stc
mov
jae
scas
das
xchg
ja
mov
sahf
fdivr
mov
push
dec
out
orb
jb
out
jae
adc
dec
ss
enter
mov
insl
jmp
repnz
push
aad
add
int
imul
pop
out
sbbb
cmc
add
push
sbb
ret
ret
push
add
pop
clc
mov
mov
leave
pop
push
orb
and
aad
fsubr
mov
outsl
mov
pushf
push
pop
jge
jl
push
icebp
shll
dec
das
mov
sub
sbb
mov
dec
lods
adc
mov
push
inc
dec
xchg
mov
xlat
in
xchg
mov
sub
std
mov
shlb
adc
adc
inc
xchg
inc
jne
cmpsl
jle
cmp
fldl2t
jecxz
push
mov
mov
pop
fisttpll
das
push
test
stc
idiv
sbb
mull
sub
scas
jnp
mov
int
push
mov
or
pop
xchg
mov
xorl
inc
scas
in
mov
push
aas
xchg
into
and
sbb
mov
out
xchg
pop
xorb
out
pop
sbb
inc
jecxz
or
out
jno,pn
adc
nop
pop
xchg
inc
mov
sub
decl
out
hlt
ljmp
xchg
inc
addl
scas
adc
inc
sbb
and
xchg
aam
dec
or
mov
mov
scas
or
std
xchg
imul
out
bnd
adc
or
and
mov
dec
pop
repz
dec
pop
inc
ret
out
aam
xchg
mov
mov
fcoml
pop
and
xorb
push
mov
jbe
stc
inc
lret
pop
fnstcw
mov
mov
mov
hlt
xor
dec
xor
pop
jmp
in
mov
add
sub
daa
ss
leave
or
cwtl
divl
jmp
insb
push
and
call
push
popa
repnz
add
in
jo
or
cmp
xchg
inc
xor
das
cmp
jb
cmc
stc
push
push
dec
hlt
jp
sbb
or
stc
add
add
lea
ljmp
sbb
sahf
xchg
sahf
xchg
push
xchg
sub
rorl
call
stos
pop
sub
xchg
fldenv
ljmp
rcl
stos
mov
sbbb
inc
add
adc
cmp
dec
jecxz
mov
inc
fimuls
call
pushf
aaa
into
orl
test
rolb
mov
js
lds
int3
and
cmp
add
mov
std
sub
dec
dec
mov
lahf
cmc
and
jge
stos
pop
add
cmc
adc
sub
mov
out
rorl
xchg
mov
or
inc
insb
loopne
cli
xchg
or
and
jmp
cmpsb
in
mov
icebp
lods
and
es
or
fcoms
jnp
ljmp
jl
mov
mov
divb
hlt
je
jge
scas
ljmp
and
sbb
add
push
sbb
sarl
inc
jne
push
cmpsl
popa
rorl
or
add
je
mov
sbb
dec
out
add
mov
mov
jl
lahf
stos
add
dec
cli
push
push
aaa
adc
xchg
add
rcrb
sbb
xchg
bswap
push
out
push
lcall
or
stc
movsl
jl
add
push
imul
inc
sbb
andl
xchg
loope
jbe
lret
and
clc
mov
jns
cmp
test
push
mov
pusha
dec
clc
mov
fsubrs
out
std
aad
mov
cmpb
xchg
xchg
xchg
lods
jmp
call
mov
cmp
or
jle
insl
pop
aam
push
scas
call
stc
outsl
repnz
and
js
daa
fwait
cmp
fimull
xor
pop
mov
jge
push
xchg
mov
in
cmc
dec
add
pop
imul
sahf
dec
adc
sti
xor
xor
jecxz
in
daa
push
or
js
xchg
sahf
cmp
call
mov
addb
test
inc
ret
jmp
add
mov
clc
hlt
ljmp
dec
xchg
ret
push
add
js
jno
call
add
fimull
and
aam
ja
push
stc
add
fs
mov
je
xchg
mov
or
mulb
xor
push
xchg
addl
popa
notl
mov
loope
or
sub
push
leave
fwait
ret
inc
hlt
mov
xchg
std
orb
add
jne
fwait
idivb
and
or
mov
inc
jnp
notb
dec
dec
dec
daa
loopne
add
or
jmp
mov
cmc
loopne
push
jmp
xor
xlat
jae
or
pop
push
and
ljmp
pop
xchg
jns
mov
out
adc
mov
mov
pushl
push
cld
cmp
popa
enter
xchg
sbb
and
and
push
or
push
int3
int
test
mov
call
mov
pop
fistl
pop
mov
mov
aaa
mov
add
inc
add
add
imul
mov
adc
inc
pop
outsb
out
loope
testl
sub
mov
cmp
pop
std
sbbb
mov
loop
add
aas
sbbb
xchg
orb
les
bound
je
mov
or
jmp
push
lds
cld
jne
cli
push
sub
sub
xchg
into
push
ficompl
jge
jp
mov
data16
and
push
gs
in
adc
jo
dec
lods
mov
shrb
das
sbb
aas
lcall
lahf
inc
aaa
mov
adc
popa
xchg
std
mov
call
sti
add
rclb
xchg
je
sarl
fxch
mov
cwtl
adc
shrl
mov
cmpsl
xchg
sbb
lcall
das
push
push
pop
jecxz
xlat
outsb
sbb
mov
jmp
cwtl
adc
push
or
mov
dec
and
dec
daa
dec
add
jmp
lods
test
adc
add
xor
pop
fs
loop
mov
ror
repnz
mov
mov
xchg
es
outsb
mov
popf
scas
push
nop
or
lret
popa
jge
or
adc
imul
xchg
jae
je
or
dec
test
adc
ret
xchg
pop
xchg
or
mov
add
add
add
xchg
xor
jp
cmp
sub
shlb
lock
test
adc
pop
adcb
inc
jmp
into
ljmp
call
pop
dec
test
jmp
stc
addb
incl
mov
dec
inc
movsb
dec
sbbb
push
inc
stos
push
add
and
mov
imul
cmp
push
mov
lock
dec
mov
sbb
add
cld
sub
cwtl
pop
add
add
daa
cld
xchg
xchg
clc
xor
jb
cltd
ljmp
jnp
mov
jne
dec
pop
pop
mov
pop
mov
sbbb
sub
out
rcrl
fwait
cld
push
sub
add
add
cmp
xchg
mov
push
cmc
add
inc
dec
rcll
lock
call
mov
push
pop
test
out
idiv
sarb
sbb
aam
push
push
ret
outsl
adc
inc
je
fs
dec
stc
notl
cwtl
divb
into
cld
mov
or
mov
std
sbb
pop
je
xor
sti
inc
jge
repz
into
mov
loopne
call
push
insl
xchg
sbb
lods
fcmovu
stc
imulb
sahf
xchg
stos
mov
mov
ljmp
test
dec
ljmp
lcall
inc
mov
inc
dec
cmp
mov
ds
adc
dec
xchg
enter
add
pushf
mov
scas
push
push
ss
pop
test
inc
sbb
stos
push
out
cmpsb
lahf
stos
and
jl
sub
shl
pop
cmp
movsl
cmp
scas
add
and
out
cmp
cmpsl
leave
xchg
cwtl
mov
pushf
jo
movsl
aaa
xor
mov
insl
xchg
movsb
repz
stos
fstpt
mov
outsl
outsl
or
testb
sahf
fistpl
lods
sahf
mov
arpl
icebp
mov
jecxz
divb
jle
mov
and
data16
lock
mov
push
mov
mov
lcall
dec
mov
in
pushf
push
add
pop
mov
cld
xchg
sar
xchg
push
mov
push
insb
rorl
rcrb
hlt
scas
addb
lods
adc
nop
sub
pop
es
je
xor
addr16
cmpl
push
jg
les
jge
or
clc
mov
xchg
fldcw
mov
pop
add
mov
jno
pop
daa
ljmp
dec
xor
pop
sbb
push
jge
call
jns
shrl
add
js
add
mov
daa
ficomps
adc
pop
cmc
cmc
mov
sub
pop
ret
mov
push
in
fcompl
test
sbb
test
pusha
pop
int3
clc
xchg
pop
cwtl
daa
popa
bound
add
inc
imul
std
sub
scas
or
mov
mov
mov
push
push
dec
imul
xor
dec
push
enter
frstor
scas
xchg
mov
rcrb
pop
iret
out
mov
arpl
rcll
mov
ret
inc
adc
insl
mov
cld
outsl
adc
mov
ss
aam
in
cmpsl
pop
mov
xor
xchg
mov
jmp
cmpsb
movsl
and
bound
or
push
orl
cwtl
shr
loop
inc
outsb
cmp
pop
inc
dec
aad
mov
dec
roll
lahf
xchg
or
mov
sub
insb
sbb
xchg
fst
fldt
das
jnp
xchg
jns
xchg
lds
popa
pop
mov
or
jne
dec
mov
das
cmc
int3
jmp
mov
and
cpuid
ret
call
pop
mov
roll
or
bound
lods
mov
push
repnz
push
dec
or
cmc
xor
jmp
cmp
push
mov
psubb
mov
out
pop
inc
sub
jns
mov
xchg
or
mov
and
test
xor
data16
push
mov
or
out
jns
pop
xlat
pop
pusha
mov
dec
xchg
pop
pop
mov
cmpl
pop
and
or
sub
outsb
dec
push
cld
pop
das
xchg
inc
pop
lret
sbb
push
xor
jmp
ficompl
adc
data16
mov
sti
mov
adcl
popf
push
add
stc
or
inc
loope
ret
int3
cmp
test
push
xchg
add
and
inc
push
pop
andl
leave
fisubl
out
mov
cmp
push
ret
test
mov
mov
and
jns
sbbb
pop
enter
sub
in
or
jge,pt
imul
mov
mov
icebp
repnz
push
daa
imul
sub
out
mov
mov
bound
out
sub
fstps
jg
cmp
adcb
in
inc
pop
pop
loope
jo
and
mov
jmp
cmc
ficompl
shlb
dec
jle
loop
enter
add
in
es
adc
and
mov
push
pusha
mov
sub
mov
data16
xchg
rcl
mov
cmp
sbb
shll
or
push
pop
mulb
push
xchg
sub
fwait
or
test
push
repz
inc
decl
or
ret
les
jno
call
sti
pop
push
jmp
push
xchg
push
jne
js
jmp
jno
call
mov
push
jmp
pop
sbb
ja
sbb
xchg
movb
shll
cmp
push
push
negb
mov
inc
movntq
jecxz
adc
mov
jmp
mov
mov
sbbl
out
or
jne
repz
cli
and
mov
mov
xlat
push
negb
xor
xchg
push
add
call
fists
repnz
clc
inc
popf
fidivs
out
xchg
sub
cmovno
rclb
mov
push
pop
pushf
inc
out
sub
sti
cmc
push
daa
out
sub
inc
cli
inc
mov
in
jne
daa
std
mov
push
cmpsl
loope
mov
push
inc
fs
inc
sbb
mov
lea
cli
or
sub
notb
push
call
xor
pop
fcmovu
inc
inc
push
jno
push
imul
rcrb
das
es
or
lods
pusha
and
test
js
xchg
push
cmpsl
bound
sbb
mov
xchg
mov
jmp
cs
add
hlt
insl
enter
call
mov
sbb
add
inc
or
stos
das
xor
mov
icebp
sbb
xchg
inc
fidivl
cli
lds
decl
sbb
pop
je
icebp
mov
push
adc
add
sub
xchg
jns
xchg
outsb
and
arpl
pop
mov
mov
adc
sub
test
add
xchg
xchg
imul
push
add
mov
test
dec
fmull
push
sub
push
clc
outsl
mov
ret
cld
push
sbb
pop
dec
inc
mov
add
mov
stos
mov
or
cmp
mov
shlb
pushl
movsb
pop
cmp
sbb
daa
cmp
cli
inc
or
sti
xorb
push
test
jns
insb
and
pusha
inc
dec
cmc
sub
ss
shrb
cmpsl
cs
mov
fstpl
ret
loopne
pop
mov
mov
popf
xor
pop
jecxz
test
decb
sbb
loop
adc
mov
cltd
loope
fldt
jecxz
pop
mov
or
or
jne
jnp
call
push
mov
std
pushf
mov
add
aas
dec
andl
cmp
aam
mov
shlb
dec
push
sbb
dec
out
insl
ja
jp
and
int
jnp
jmp
xor
xchg
dec
loopne
idivb
dec
shll
push
xor
or
loop
dec
jb
mov
in
dec
imul
push
jmp
and
fwait
xor
xchg
aad
stc
mov
and
inc
pop
daa
test
pushf
pop
testb
clc
or
test
push
push
dec
add
push
hlt
mov
testl
add
iret
xchg
call
dec
enter
inc
cmp
xchg
pop
xor
int
mov
and
fcompl
xor
mov
shll
vaddsubps
dec
cwtl
mov
test
xchg
lret
aam
jge
xor
pop
jmp
or
add
testl
dec
shl
push
out
xchg
int3
stos
sbb
clc
dec
dec
repnz
inc
jle
outsb
jne
ret
jae
ret
and
cmc
ljmp
sti
mov
cwtl
std
pop
call
and
popf
jge
lret
or
mov
push
stc
xchg
inc
mov
jp
lds
rcrb
insl
hlt
pop
pop
into
aad
push
cmpsl
cmp
or
loopne
adc
movsb
in
add
inc
sbb
mov
addr16
fbld
ja
push
xor
out
ja
mov
xor
push
or
adc
lahf
inc
pop
popf
jns
and
xchg
mov
mov
decb
imul
repz
pop
push
xor
xlat
daa
repnz
cmovnp
icebp
ja
cmpsl
xor
imul
and
mov
xchg
outsl
inc
xchg
sub
xor
fldt
cld
dec
sub
adc
mov
movsl
jne
cmp
lea
push
adcb
adc
push
adc
inc
push
mov
daa
scas
pop
call
sbb
mov
daa
stc
scas
cmp
shrb
cmp
cmp
jmp
inc
call
adc
push
or
sbb
jecxz
inc
push
or
decb
adc
dec
and
pop
push
in
pop
inc
je
pusha
add
xor
inc
cmc
adc
pop
movsb
mull
inc
sbb
icebp
and
mov
fs
sbb
mov
mov
mov
ret
je
rol
mov
mov
push
mov
negl
add
xchg
out
movsb
sbb
out
stc
inc
push
ficompl
sbb
jecxz
xchg
cltd
xor
add
repz
jmp
in
bnd
popf
pusha
test
rcr
scas
aas
or
inc
lahf
lods
ror
and
mov
mov
xorb
push
xor
lcall
rolb
inc
jge
loop
orl
imul
mov
jmp
xchg
cmp
lock
inc
cmc
lahf
jns
mov
fdivs
loop
push
mov
sbb
in
lock
mov
jns
repnz
popa
dec
dec
jne
movsl
imul
mov
inc
jecxz
repz
fiadds
adc
test
lea
adcl
jle
xor
xorl
jo
mov
xor
xchg
mov
fcoms
repnz
call
xchg
sbb
push
in
fsubrs
loope
jae
mov
fstl
adc
loope
sahf
mulb
inc
inc
dec
dec
stos
les
mov
std
in
shrb
mov
dec
test
add
imulb
mov
lea
push
inc
hlt
jno
fnstenv
mov
sbb
xchg
adc
cwtl
xlat
adc
and
popf
adc
fiaddl
mov
mov
sbb
inc
call
mov
in
pop
cmp
cs
insb
dec
sti
repnz
dec
cwtl
push
rorl
notb
popf
lods
jmp
std
push
xchg
mov
cs
push
adc
pop
hlt
out
int3
ljmp
pop
bound
xchg
repnz
fcompl
enter
mov
sbb
push
jo
jmp
or
mulb
fwait
addb
cmpsb
and
outsb
push
mov
adc
mov
xchg
test
inc
cmp
mov
mov
idiv
test
call
push
inc
xchg
or
pop
ret
jmp
inc
push
cmpsl
fisubl
add
out
iret
xchg
push
jle
jo
push
inc
inc
cli
mov
arpl
in
add
add
scas
in
push
imul
sti
mov
test
in
imul
pop
pop
xor
and
repnz
pop
push
test
jmp
lcall
call
notl
mov
mov
fs
push
ljmp
add
fadd
lret
sub
ds
lods
enter
push
or
ljmp
jmp
repnz
fimull
pop
repnz
out
clc
inc
shrb
call
movsb
pushl
repnz
leave
mov
not
sub
or
adc
jmp
cmp
clc
adc
mov
dec
nop
sub
cmpsb
mov
lahf
cld
divl
dec
mov
rcl
inc
mov
adc
mov
ja
xor
add
lret
ljmp
mov
stos
adcb
inc
inc
loopne
push
out
out
add
xchg
jmp
lahf
jecxz
das
push
stos
add
cwtl
rcrl
cmp
imul
sub
adc
add
sbb
push
cmp
es
xor
add
pop
sub
adc
or
adc
arpl
ja
ret
mov
cmp
int
xchg
ret
sub
insl
and
pop
mov
jecxz
xchg
mov
push
adc
mov
sbb
outsl
les
fstl
xchg
mov
cmovg
xor
in
xchg
mov
stc
mov
adc
mov
div
cltd
mov
mov
js
addr16
sub
or
cmp
ret
sub
mov
lds
jbe
insl
push
pusha
aas
xchg
mulb
subl
jle
push
xchg
dec
idivb
push
lcall
pop
jmp
lcall
xchg
int3
int3
in
mov
push
in
fstpt
clc
cmpsl
clc
dec
sub
lock
inc
cmp
dec
add
sti
mov
neg
dec
jbe
stos
mov
mov
lret
mov
adc
into
jp
popa
dec
mov
sbb
pop
add
call
jle
test
cwtl
jbe
mov
mov
inc
call
mov
dec
mov
push
ficoml
or
loop
add
movsl
xor
jge
jnp
lret
push
xor
iret
jb
fldl2e
mov
cli
stc
mov
adc
adc
mov
lods
cli
pop
loop
lock
lods
call
gs
movsl
dec
adc
cmp
add
popf
add
cltd
imul
test
ficoms
jp
mov
inc
dec
add
push
or
add
data16
or
ds
rcrb
loope
fdivl
xchg
xlat
mov
sahf
inc
arpl
xchg
add
inc
loop
push
int
cmpsb
xor
int3
movsb
cli
push
pop
jl
dec
mov
dec
loope
push
ret
pop
test
adc
int
pop
cmpsb
nop
mov
add
sbb
out
add
push
das
leave
xchg
lcall
or
cmp
call
or
add
cltd
sub
in
es
add
cmp
and
filds
push
std
xor
push
aaa
xchg
pop
sub
xchg
jne
mov
xchg
fnstsw
testl
jp
push
rsm
jmp
test
in
jmp
cmc
xchg
pushf
mov
inc
jmp
adc
pop
mov
push
xor
push
cld
or
xchg
xchg
xchg
cmpsb
mov
cmc
mov
sbb
jo
out
xchg
jne
pushf
ja
jge
mov
push
push
and
jb
ljmp
sbb
insb
push
in
add
mov
sbb
adc
xor
and
ret
mov
mov
push
mov
mov
cmp
cmp
aas
xor
movsl
sti
aam
xchg
mov
lahf
inc
mov
dec
and
cmp
cmp
push
jmp
lods
in
ror
cmpsb
lds
jbe
inc
xchg
loope
aas
push
inc
fwait
dec
xchg
fnstenv
insb
out
loop
dec
pop
stos
mov
dec
dec
fcoml
sbb
jecxz
dec
sarb
ret
leave
mov
leave
push
and
in
sbb
lret
and
aad
ljmp
fistpll
insb
jae
pop
adc
sbb
sub
push
pop
cmp
cmp
jno
popa
les
sbb
push
ret
loop
out
into
mov
fiaddl
mov
adc
outsb
cmc
sub
mov
or
sti
or
cmp
jmp
lods
push
jo
mov
and
loopne
int
out
cmc
jo
lds
divb
jge
icebp
sbb
aas
stos
mov
jns
dec
sbb
mov
fmulp
dec
sbb
out
dec
int3
dec
repnz
or
sbb
sbb
push
push
push
call
jge
adc
jb
shr
adcb
or
pop
push
sar
inc
jge
dec
clc
shll
call
xor
inc
sub
mov
testb
lods
mov
add
loopne
pop
std
adc
xchg
and
call
lock
mov
ljmp
or
cmp
lock
int3
add
mov
push
lret
hlt
and
enter
cmp
aad
pop
mov
mov
movsl
mov
jnp
cmp
jno
dec
je
push
movl
xchg
jnp
sbb
pop
clc
adc
sti
mov
pop
das
test
cmp
and
mov
jmp
jne
test
je
xor
push
push
js
cmpsb
xchg
lea
jge
loopne
mov
es
push
jmp
fdivrl
mov
push
test
pop
hlt
pop
xchg
xchg
out
push
push
in
lods
movsl
call
mov
jg
in
inc
xchg
jl
outsb
pop
ret
or
das
inc
les
and
adc
cmp
into
sub
mov
daa
pop
jbe
xor
mov
xorl
roll
jb
dec
push
mov
xchg
and
dec
sahf
jae
out
negl
push
dec
push
daa
ja
push
aad
aad
mov
popf
imul
add
pop
jmp
jg
int3
jo
mov
mov
push
jmp
add
mov
mov
xor
pop
aaa
jmp
xchg
std
inc
mov
stc
xchg
insl
dec
xlat
lcall
mov
inc
and
mov
lcall
loope
adc
mov
sbb
repnz
jo
jbe
xchg
fbld
int
ret
xchg
call
jnp
mov
cmpsl
in
or
xchg
adc
divb
add
and
in
jns
call
idivb
lds
aaa
sub
sbb
mov
push
invd
dec
or
add
push
aam
jmp
orl
rol
nop
xor
xchg
repnz
or
cmpsb
aaa
out
fmull
lahf
in
mov
jb
jb
inc
mov
push
jo
jle
ds
mov
mov
cmp
mov
adc
jmp
call
jns
test
mov
cmp
and
pop
ret
lods
push
adc
add
add
sub
test
sti
mov
fiadds
pop
cwtl
mov
mov
add
fcoms
out
mov
and
test
pop
in
or
sbb
out
loope
mov
dec
and
push
fcomi
mov
loope
idivb
inc
in
pop
stc
xor
insb
sub
xlat
add
or
xchg
pop
pop
mov
xor
xor
fucomp
lods
pusha
icebp
popf
sbb
call
jge
cmpsb
sbb
sub
ja
cli
add
repz
in
xchg
or
pop
add
outsb
pop
or
mov
lahf
movsb
mov
xchg
cmpps
test
dec
sbb
and
sbb
pop
xchg
push
into
mov
loopne
add
ret
icebp
repnz
es
dec
cwtl
leave
jb
lret
inc
pusha
pop
and
lods
inc
call
pop
stos
sbb
fnstenv
pop
adc
sub
xor
sub
mov
jg
addl
push
repz
daa
lods
das
sub
shlb
cmp
push
nop
popl
mov
out
call
andb
pop
in
mov
movsb
rolb
stc
sbb
or
add
mov
jo
sbb
aaa
adc
cli
pop
inc
leave
jmp
cmp
xor
cld
pop
or
gs
in
stos
mov
xor
in
ljmp
test
sub
movsb
in
mull
mov
sbb
xor
jge
bound
cmp
cltd
add
cld
loop
test
test
es
xor
mov
les
or
and
sub
cltd
nop
jns
int
and
mov
lds
cld
dec
push
jp
cs
sbb
movsl
and
cmp
insl
idivl
jmp
mov
add
xor
arpl
pop
rorb
pop
sbb
int3
cmc
xchg
hlt
sbb
lret
cmc
jmp
add
imull
cli
jg
cmp
pop
add
scas
es
and
aas
insl
les
jg
notb
dec
adc
cmp
sub
xchg
push
sub
push
inc
jb
xor
inc
cwtl
xchg
jmp
imul
lds
pop
gs
dec
das
ja
neg
outsl
xor
mov
movsl
inc
inc
stos
mov
pop
call
xchg
sti
push
jle
dec
xor
adc
xor
dec
in
pop
les
cmp
jmp
or
lods
ss
adc
test
mov
cmp
popf
push
push
fsubrl
pop
lods
sub
bound
test
mov
idiv
pop
outsl
add
lods
in
jp
xorb
test
hlt
lret
mov
jnp
adc
jl
dec
outsb
cld
mov
xchg
inc
sbb
sub
stos
cld
fs
in
mov
repnz
movsb
jbe
or
ret
xchg
jo
mov
mov
and
cli
inc
xchg
mov
jb
lahf
mov
mov
pop
push
push
ud2
mov
ljmp
call
cmp
add
pop
repz
mov
aas
pop
mov
mov
popa
xlat
dec
pop
xchg
je
dec
ficomps
je
xchg
push
es
sub
lahf
loope
movsl
sti
shrl
xlat
out
jmp
cmp
jmp
orl
test
xchg
or
mov
out
dec
mov
mov
cwtl
aad
call
inc
mov
lahf
jns
mov
or
jmp
enter
pop
shlb
push
mov
pop
cwtl
daa
mov
mov
dec
mov
mov
mov
popa
scas
add
sub
add
arpl
filds
scas
repnz
gs
jno
insb
mov
daa
adc
add
in
loop
inc
fdivl
andl
jl
or
call
xchg
les
adc
jmp
and
pop
loopne
mov
adc
and
pop
stos
dec
stos
clc
loopne
nop
ljmp
push
fs
sub
mov
stos
shr
dec
les
call
pop
bound
sub
out
and
rclb
mov
or
rclb
or
inc
mov
lea
lahf
dec
sbb
stos
mov
push
push
push
push
jb
mov
insb
push
js
es
mov
pushf
out
pushf
mov
and
dec
lahf
adc
or
adc
inc
ds
xchg
addr16
jge
sub
test
xor
sub
lock
call
in
mov
lret
ret
mov
out
sub
push
push
adc
adc
pop
inc
xor
xchg
xchg
pop
adc
adc
cwtl
jnp
lahf
rorb
and
xor
dec
andl
rcll
bound
cld
call
pop
jp
fildll
push
inc
mov
mov
stos
adc
pop
jmp
negl
or
mov
add
cmp
call
je
das
pusha
mov
fsin
push
xor
jns
xchg
mov
cmp
add
sbb
popf
jmp
std
dec
cmp
mov
fst
ljmp
jmp
add
cmpsl
cmp
rorl
adc
cmpl
test
jbe
bound
jmp
mov
cmc
xor
push
das
pop
adc
sbb
pop
shll
pop
fs
fstl
sub
dec
cmp
movsb
inc
incb
dec
out
push
call
icebp
lret
repnz
add
inc
add
int3
xlat
adc
ljmp
clc
cmp
and
lahf
das
cmp
jl
loope
daa
ret
jb
ss
nop
mov
push
xchg
mov
sub
jl
inc
outsb
mov
push
dec
cld
jmp
insb
or
sub
inc
call
sahf
mov
mov
sbb
in
nop
or
mov
sbb
and
pop
daa
lahf
in
push
je
hlt
pop
add
inc
subl
add
dec
sbb
pop
sbb
call
xchg
xor
roll
cmp
add
rcrl
call
push
cmp
out
cmp
add
mov
ljmp
imul
mov
dec
pop
movsb
repnz
loopne
push
fimull
addb
rcrb
jl
stos
test
mov
xor
cmp
pop
fistps
mul
sbb
and
lds
stos
mov
dec
mov
push
addb
pop
fildll
shlb
stc
cmp
or
xor
lret
movsb
pop
std
popa
push
sbb
push
inc
mov
int3
hlt
das
cltd
or
xor
call
rcrb
ror
data16
inc
pusha
jae
and
ljmp
or
inc
insl
jecxz
and
in
mov
cwtl
and
dec
xchg
das
icebp
cmp
dec
lods
movsb
xor
xchg
xor
repnz
xchg
add
jg
scas
fcmovu
ja
bound
jp
pop
dec
sbb
jmp
pop
cmp
movsl
mov
out
jo
xchg
inc
out
dec
stos
dec
clc
outsb
jmp
dec
imulb
mov
dec
scas
pop
xor
je
push
mov
push
cwtl
test
mov
dec
ljmp
jmp
sub
pop
mov
jecxz
mov
add
cmp
dec
sbb
test
mov
aaa
pop
std
or
jge
clc
mov
call
dec
add
xchg
push
mov
jb
sub
mull
js
or
ja
pop
movsb
ret
or
into
shl
stos
leave
ljmp
jne
sub
fdivrs
out
imul
enter
jl
and
mov
push
mov
insl
addb
loop
add
add
call
in
hlt
xchg
or
pop
push
mov
insb
int
hlt
and
mov
mov
or
stc
pop
clc
or
add
mov
sbb
jecxz
scas
fldpi
and
jo
adc
mov
xchg
jo
pop
xchg
pop
sbb
aas
dec
xchg
jo
cld
mov
rcrl
jecxz
adc
jecxz
add
jl
xchg
repnz
mov
mov
sbb
dec
xchg
add
pop
ljmp
stos
and
cmc
dec
test
jo
mov
inc
scas
or
inc
cltd
insb
je
mov
xor
cmpsb
sub
arpl
nop
cs
hlt
push
mov
add
mov
adcb
cmc
jo
ret
test
mov
sub
xor
loope
fcoml
scas
cmp
xchg
or
les
push
inc
pop
notb
mov
mov
pop
addb
sub
mov
cmp
mov
je
xchg
sub
pop
mov
dec
shlb
ja
jecxz
repnz
cltd
push
sub
movsl
cmp
test
icebp
leave
test
sarb
or
lock
js
cwtl
mov
mov
int
aad
push
mov
mov
pop
pop
ss
sbb
pop
add
pop
mov
jnp
mov
xor
mov
pop
cmp
or
neg
fsubrl
mov
mov
inc
call
adc
xor
icebp
push
cmp
rorb
and
fwait
adc
and
pusha
adcb
adc
rclb
popa
lods
or
xchg
sbbl
rol
xchg
jp
in
mov
rorl
mov
sbb
subb
and
in
mov
pop
cmp
inc
cmp
inc
sti
jmp
sub
sbb
pop
mov
fmull
jmp
adc
or
and
or
aam
ret
ljmp
jp
xchg
hlt
mov
push
sbb
lret
fwait
adc
dec
add
movsl
sarb
cmpsb
cmp
cmpsl
lcall
xchg
mov
jl
xchg
pop
inc
or
mov
or
outsb
dec
xchg
or
xchg
and
jbe
add
sub
push
xchg
je
xchg
pop
adc
jle
popf
call
sarl
icebp
mov
ret
cmp
es
out
orb
inc
lods
or
xchg
adc
call
mov
sahf
inc
push
inc
push
inc
adc
ljmp
mov
jo
outsl
adc
push
xchg
jmp
lock
cwtl
add
mov
xor
test
fdivrs
ret
add
add
jmp
push
aaa
stc
ja
stos
and
push
or
call
jmp
out
push
shlb
mov
cld
inc
xor
adc
mov
stos
imul
or
movsl
sar
mov
subb
out
jp
xchg
adcb
mov
ja
imul
mov
pop
stos
push
jbe
imulb
mov
cmpsb
mov
rorl
es
andb
fs
push
test
push
inc
stos
lcall
jae
or
add
inc
push
xchg
cli
push
ljmp
sbb
pop
jge
scas
jmp
sub
jl
or
lcall
stc
mov
cmp
inc
jae
in
mov
add
lods
adc
mov
xchg
dec
mov
jae
stos
in
imul
into
call
cltd
inc
or
cs
ss
dec
dec
inc
xor
pop
mov
sbb
mov
shlb
mov
insb
dec
repnz
push
push
mov
xchg
jecxz
or
imul
faddl
in
test
int
popf
cmp
nop
cld
lret
mov
jge
ret
dec
cld
xor
jg
sub
jne
adc
fsubl
leave
mov
dec
push
or
movsl
lcall
mov
dec
ret
lahf
mov
hlt
mov
jle
fs
mov
adc
or
mov
fmull
mov
or
and
sub
push
rcr
scas
repnz
jecxz
or
fs
inc
dec
jge
xchg
add
pop
push
mov
mov
popf
pop
and
jmp
mov
jge
push
inc
or
cmp
stc
dec
pop
inc
aam
fcomip
mov
add
sub
jecxz
xlat
xchg
jmp
je
lock
inc
fldl
add
cmpsl
mov
shlb
mov
idivl
adc
test
push
push
and
lods
pop
cmp
aaa
inc
mov
inc
cmp
push
int3
scas
mov
cli
jo
inc
call
repz
mov
pop
pop
in
cmp
pop
xor
outsb
sbb
adcb
fmull
jo
pop
push
icebp
push
and
jecxz
cmpsb
push
mov
jns
pop
aas
or
push
adc
test
mov
and
sub
push
stc
inc
negb
mov
mov
dec
repnz
pop
jbe
dec
pop
lret
sub
or
dec
mov
and
and
inc
pop
push
or
lods
cltd
lret
xchg
mov
add
jmp
clc
mov
je
dec
lock
lret
insb
adc
rorb
fisttps
lods
xchg
iretw
jmp
or
pop
pushf
mov
mov
cmpsl
shlb
jl
cmpsb
sbb
mov
enter
mov
sbb
push
rolb
fidivl
stos
cltd
dec
popf
cmp
jge
add
out
jne
cmpsb
lahf
or
ljmp
dec
ds
movsb
push
sub
popf
inc
lods
es
jp
pop
jmp
push
nop
mov
in
cmc
loop
mov
out
fsubr
daa
push
mov
aaa
stc
adc
sub
fptan
repz
outsb
test
mov
push
pop
dec
dec
mov
xchg
pop
leave
imul
dec
or
fwait
jns
push
idivl
and
jb
lret
push
int3
outsl
mov
xor
js
lea
mov
in
push
hlt
adc
lret
outsb
bound
sub
pop
add
mov
nop
pop
dec
cld
insb
adc
mov
xor
mov
dec
adc
inc
push
call
icebp
out
sub
cli
cwtl
rclb
pop
mov
jb
mov
or
mov
mov
stos
pop
hlt
cmpsl
mov
inc
push
xchg
fcoms
cmpsb
cmp
and
mov
roll
std
sub
testb
fwait
dec
inc
iret
daa
iret
dec
out
out
inc
int
icebp
pop
rolb
xchg
fcoms
rcrl
pop
rcl
fistl
mov
js
jp
and
sub
sti
addl
ret
or
out
jo
loop
lahf
call
sbb
xor
insl
ret
adc
dec
mov
fs
sbb
cmp
out
leave
lahf
cltd
data16
mov
xchg
cmp
popa
int
add
icebp
sbb
inc
pop
repz
shlb
out
pushf
lea
movsl
mov
push
aad
adc
ljmp
mov
loop
cld
pop
bound
push
lret
inc
test
dec
mov
hlt
push
es
lock
jmp
cmc
xor
xchg
or
std
cmp
lock
xorb
lahf
xlat
sbb
and
imul
cmp
sub
cmp
xchg
clc
mov
in
add
add
mov
jno
call
mov
out
aam
add
pop
movsb
xorb
lret
inc
in
lea
icebp
movsl
nop
pop
je
mov
addr16
sub
aad
jg
stos
fmuls
nop
in
sub
jmp
add
or
rcrl
add
jge
sbb
sti
push
inc
mov
sbb
pop
cmp
out
gs
jno
sub
or
or
movsb
mov
add
push
cmp
jb
idiv
and
and
sub
mov
testl
pop
add
in
test
pop
mov
aam
in
movsl
mov
sbb
das
orl
jbe
decb
add
ds
mov
inc
fsqrt
jge
or
mov
pop
jmp
scas
ds
inc
ret
stos
add
xor
push
and
int3
push
bound
xchg
or
pop
jae
mov
fldcw
call
mov
jle
add
nop
push
xchg
sbb
loope
ja
sbbl
insb
loop
adc
das
cmp
push
mov
addr16
dec
jne
lock
jmp
addr16
lret
cmp
vphsubbw
adc
mov
dec
adc
sbb
push
es
push
outsb
inc
lods
mov
hlt
sbb
or
insb
adc
fwait
nop
flds
mov
mov
clc
dec
add
stos
clc
outsl
in
popf
jle
fadds
ljmp
sub
into
in
js
mulb
ds
sbb
push
and
rorb
lahf
mov
loop
push
shl
mov
cmp
jo
xor
sub
push
or
cmp
pop
in
and
add
sahf
mov
int
ret
add
aaa
fdivrs
sub
jo
cmp
push
fcoms
ja
inc
dec
mov
mov
mov
adc
jbe
push
in
jnp
jbe
jnp
enter
mov
jmp
sbb
pop
call
nop
inc
call
les
sar
in
xchg
mulb
jge
xorl
mov
imul
mov
dec
mov
es
inc
push
mov
rcl
mov
or
dec
jp
xchg
shrb
inc
sti
mov
dec
loope
movsb
xor
and
push
mov
add
enter
push
xchg
mov
cmpsl
mov
pop
inc
in
mov
pop
xchg
sub
out
pop
and
sub
loopne
dec
jl
adcb
inc
xchg
fcoml
mov
fstpl
sub
jnp
adc
add
inc
mov
addb
rcll
xchg
push
or
add
mov
hlt
pop
pop
cwtl
mov
in
daa
pop
adc
lret
push
sbbb
and
loopne
jge
mov
popf
adc
lea
ds
mov
lods
jno
stos
lods
mov
loope
sub
fcmovnb
adc
sub
sahf
ja
mov
jnp
push
and
add
test
jae
jge
aam
repz
dec
std
call
jmp
jne
mov
scas
xlat
sub
pop
data16
int3
cmp
sbb
aaa
leave
scas
imul
enter
lea
push
cmpsb
push
and
adc
push
push
push
cmpsl
loopne
loop
test
ret
shlb
push
fwait
sbb
push
shll
jae
out
rcrl
je
subb
pop
xor
jmp
clc
das
fdivrp
shlb
pop
mov
and
dec
jmp
jae
jno
jl
adcb
xor
ja
xchg
je
lea
cmp
sti
cmp
mov
movsb
lods
pusha
sbb
adc
lods
out
jecxz
leave
xchg
es
mov
and
jmp
xchg
add
fisttpl
andb
dec
cmp
orl
xor
notb
pop
cli
cs
inc
dec
adc
mov
loope
add
sbb
sarl
mov
dec
mov
or
ds
js
and
insl
inc
in
push
xlat
test
cmpl
loop
shlb
inc
loopne
pushf
insl
out
enter
push
mov
roll
nop
fnstsw
inc
mov
inc
or
pop
xchg
rorl
cli
call
mov
mov
cmpsb
add
hlt
clc
inc
imull
sub
adc
mov
push
cmpsb
and
push
mov
clc
stos
jo
cmp
dec
xor
test
cltd
sub
stc
stos
add
rcrl
je
int
fisttpl
aas
xchg
ret
repnz
push
rorb
rol
testb
mov
xlat
cmp
lods
pop
xchg
push
cmp
add
lret
cmpsb
xorb
mov
bound
xlat
jl
mov
push
and
push
or
jecxz
pop
das
adc
add
pop
sub
push
mov
sahf
cmp
pop
aas
adc
push
inc
call
scas
cmp
xchg
outsb
mov
cltd
mov
fcoml
lea
pop
cmp
mov
jbe
bound
push
jge
icebp
push
inc
push
pop
jp
testl
lea
jl
inc
pop
pop
xor
divb
arpl
test
out
adcb
and
addr16
decb
rcrb
cwtl
subb
test
fsqrt
or
divl
insb
out
sub
je
mov
test
data16
push
xchg
into
pop
mov
testl
insb
div
aam
dec
adc
xchg
stos
cmpsl
fcompl
nop
dec
call
pop
bound
mov
pop
fwait
add
and
jmp
add
xor
mov
sbb
add
jbe
push
push
mov
jle
mov
lret
sti
cmp
jb
xchg
es
push
jo
std
push
out
call
jmp
push
call
or
sahf
cwtl
add
and
push
adc
mov
lock
mov
push
pop
mov
adc
xor
pop
es
jge
mov
je
daa
pop
inc
mov
mov
jg
adc
mov
sub
test
dec
xchg
lahf
pop
add
out
jg
or
sbb
aam
scas
cmp
movsl
mov
les
stc
jg
jae
jae
jg
call
test
and
cwtl
setp
movb
cmpsl
jns
sub
lods
dec
xlat
mov
nop
js
jns
push
jge
clc
clc
lahf
jg
sbb
fmull
clc
sub
loop
dec
inc
repnz
add
add
pop
mov
push
jmp
aad
jno
outsb
testb
push
sbb
outsl
mov
daa
lahf
stc
push
or
lea
adc
idivl
cmpsl
ljmp
inc
mov
add
xchg
mov
out
jge
mov
jnp
jnp
lods
pop
ja
jmp
aad
cwtl
cmc
outsb
xchg
cld
pop
or
and
or
sbb
push
enter
sub
push
std
inc
mov
push
cmp
lds
leave
cld
inc
xchg
jae
xchg
mov
pushf
xchg
out
cs
rol
shll
scas
das
push
fidivs
xor
popf
call
ds
fdivr
leave
adc
xchg
mov
stc
pusha
cmp
clc
aad
pop
addr16
fsub
xor
dec
mov
mov
test
or
imul
push
inc
sahf
or
lods
push
and
sbb
push
or
sbb
shrb
push
pushf
lret
xchg
imul
xchg
dec
inc
pop
addb
add
faddl
inc
popf
or
mov
pushf
add
out
out
mov
fsubrl
pop
xchg
lods
fldt
inc
pop
sub
jb
pop
inc
stc
les
inc
inc
and
std
out
cmpsl
add
nop
cmc
in
or
fldt
sti
or
add
cmp
push
jno
push
mov
pushf
stc
push
or
loope
sti
seto
xlat
mov
xchg
add
push
jmp
mov
cmp
fs
xchg
xchg
cmp
or
js
push
in
les
inc
pop
subb
mov
call
or
pop
iret
dec
je
pop
lods
ret
add
test
call
mov
hlt
test
mov
mov
aad
inc
mov
cltd
std
or
lret
sti
lahf
inc
push
test
and
mov
adc
mov
or
mov
lock
pop
mov
add
les
repnz
out
xchg
pop
imul
cmc
ret
mov
lret
movsb
stc
ret
mov
adcl
stc
adc
sub
mov
adc
pop
lock
test
icebp
pop
fwait
bound
orl
ret
lds
stc
xchg
push
call
imul
jp
gs
rcrb
loop
mov
add
pop
xlat
push
push
shll
add
cmp
add
int
mov
cs
wbinvd
jmp
fldl
xor
pusha
sub
popl
mov
dec
pop
stos
ds
and
insb
fs
inc
mulb
push
pop
call
enter
outsl
xlat
mov
stc
sub
mov
pop
les
dec
cld
inc
xchg
fnstcw
xchg
iret
pop
push
add
mov
divb
jmp
movl
insb
es
push
shll
sarb
and
adc
xchg
or
popl
loop
and
push
sub
sub
mov
test
push
es
or
jnp
inc
dec
mov
inc
enter
test
loope
sbb
mov
jns
mov
testl
adc
sub
sbb
mov
arpl
roll
and
je
add
mov
ljmp
dec
jno
bnd
push
sub
xor
cli
cmp
cmp
mov
les
ret
push
push
add
jbe
jmp
mov
inc
xor
lods
xchg
addr16
sub
test
inc
inc
mov
push
mov
ljmp
push
pusha
mov
mov
push
xor
mov
cmp
je
idiv
mov
popf
push
and
into
insb
xlat
mov
rcl
pop
inc
mov
stos
jmp
cli
aad
pop
in
xchg
ror
dec
pop
pop
inc
test
ljmp
mov
mov
adc
pop
pop
outsl
mov
lods
cmc
mov
insb
push
cli
hlt
push
sub
sbb
jbe
add
adc
mov
pop
sub
icebp
mov
in
add
in
ja
mov
push
nop/reserved
loop
or
sub
hlt
sub
push
js
nop
jl
cmpsb
ret
loopne
nop
pusha
call
mov
or
adc
inc
sbb
movsb
jo
inc
subb
and
call
test
xor
test
push
ss
inc
loope
scas
cmc
hlt
sub
inc
lods
rorl
jns
repnz
out
leave
push
js
add
stos
adc
arpl
dec
cwtl
jmp
cmp
xchg
cmp
or
sahf
push
lahf
shll
fmul
nop
mov
inc
in
dec
incb
mov
sti
dec
inc
andl
jecxz
push
adc
sahf
inc
xlat
mov
fucomip
adc
push
jmp
call
xchg
jl
imul
movsl
dec
aas
cs
jno
sbb
cmpsl
lcall
xor
leave
inc
je
push
inc
mov
test
outsb
sub
mov
cmp
inc
out
es
cmc
test
inc
pop
loopne
mov
add
enter
xor
lcall
cld
aad
cli
mov
inc
mov
out
sahf
fisttps
cltd
and
fldl
mov
pop
pop
mov
mov
loop
les
inc
jg
push
sbb
popa
mov
pop
inc
inc
inc
stos
idivl
cltd
inc
xlat
enter
inc
push
push
dec
mov
pop
ret
xchg
sahf
call
cmp
call
ss
add
ja
jmp
outsb
sub
imul
jb
jg
add
inc
fmul
lods
inc
add
mov
testb
imul
inc
scas
or
cmp
fimull
cwtl
mov
or
add
repnz
lds
sti
pop
sub
pop
cli
mov
lahf
or
addl
push
add
inc
sub
pushf
dec
xor
test
test
rorl
xchg
sbb
jb
pop
adc
mov
out
jno
les
outsb
xchg
jg
fsub
mov
jmp
jno
and
dec
sbbb
call
test
or
insb
xchg
jge
xchg
aaa
xchg
cld
stos
hlt
cmp
cmp
push
mov
bound
mov
mov
mov
inc
daa
out
lahf
cld
xchg
or
sbb
dec
mov
jae
test
scas
dec
xchg
lock
call
and
ret
int
shl
leave
xchg
popa
movsb
sub
sbb
add
xor
cmc
ljmp
xchg
rolb
cmp
or
mov
test
and
and
xor
nop
or
test
push
mov
mov
inc
loop
cltd
lret
loop
inc
cmp
dec
clc
jecxz
jbe
xchg
xchg
or
aas
hlt
stc
idiv
cmp
push
and
nop
mov
daa
pop
push
add
adcb
jp
imul
cmp
aam
jle
mov
jp
into
hlt
sbb
mov
jge
xchg
push
sub
fiaddl
and
cmpsb
pop
mov
add
jbe
push
jo
sub
jo
roll
add
fnstenv
adc
inc
adc
cld
add
cmp
cltd
sti
pushf
lods
test
and
imul
jle
xchg
cltd
add
sarb
add
in
in
or
loop
or
nop
jl
or
mov
insl
cmp
mov
sbb
mov
push
pop
jmp
pop
pop
lcall
jno
data16
les
sub
or
cmp
jne
dec
loope
stc
and
call
xorl
mov
in
loopne
cltd
cmpsb
push
inc
iret
orb
dec
jne
or
jbe
xor
or
push
movsb
inc
cmp
and
mov
xchg
ljmp
test
add
not
call
das
call
dec
add
jbe
out
inc
rorl
dec
push
ds
cli
mov
je
andl
shll
adcl
push
in
das
shrl
sti
cmp
sbb
dec
loop
stc
pop
movl
lds
pop
push
aaa
cltd
mov
repnz
cli
and
xchg
sbb
call
fucomi
mov
xchg
sti
aam
inc
pop
fwait
xor
xchg
call
jmp
inc
mov
xor
enter
push
ljmp
add
mov
and
movsl
xchg
jp
inc
test
and
divps
xchg
call
subb
frstor
push
in
and
sub
xchg
out
and
dec
mov
sub
pushf
inc
xchg
xchg
and
lret
subb
inc
push
cs
out
mov
and
in
adcb
jnp
popf
cmp
dec
pop
mov
fwait
mov
adc
fdivr
cli
ret
cld
out
push
push
xchg
xor
fdivl
jmp
or
jne
rcll
adc
call
mov
repnz
sub
inc
shr
or
arpl
pop
jmp
jmp
hlt
test
std
andb
push
push
mov
pop
adc
xor
call
lret
inc
insb
sbb
pop
mov
dec
sub
or
jge
jne
push
xchg
cmp
xchg
sub
inc
mov
enter
push
repnz
jmp
add
mov
push
mov
mov
sarb
or
mov
inc
add
jb
push
dec
and
sti
jne
mov
in
out
enter
in
xchg
cmp
push
das
stc
pop
xor
fldl
repnz
insb
mov
mov
aas
xchg
sbb
subb
mov
inc
pop
imul
xchg
mov
inc
lods
and
sbbb
jns
cmpsl
cli
lds
cmp
jne
in
xchg
call
add
mov
cmpsl
insl
mov
fldenv
add
jmp
adc
cltd
movsb
addr16
enter
mov
pop
or
mov
decl
pop
sbb
ficoml
add
repnz
test
add
inc
jmp
orb
int3
cwtl
stos
leave
add
sahf
scas
adc
pop
push
add
hlt
pop
cmpsl
insl
or
mov
dec
enter
rcr
test
in
sti
lea
mov
insb
sahf
cmp
mov
dec
nop
mov
or
sub
aas
xor
sahf
fcompl
push
pop
inc
and
sbb
push
das
call
mov
clc
cmpsb
pusha
jmp
inc
mov
ds
inc
hlt
cltd
lea
test
cmp
push
fcomps
add
repz
inc
hlt
lahf
push
mov
mov
or
into
das
fldl
inc
mov
stos
jns
gs
movsl
stos
sar
outsb
pop
sbb
mov
mov
std
loope
icebp
jge
push
ss
cmpsl
sbb
dec
jl
cwtl
dec
imul
dec
cmp
xor
arpl
jno
repz
std
inc
cmp
jnp
int
mov
inc
mov
loopne
sbb
sbb
xor
bound
mov
test
dec
testl
loope
mov
or
jns
xchg
loope
jg
adc
cmp
std
cmc
dec
mov
pop
cmc
jbe
dec
and
mov
and
mov
adc
push
es
adc
pop
or
sbb
sahf
repnz
loopne
test
shl
mov
repz
pushf
lods
sbb
jnp
pop
jge
outsb
dec
mov
std
jmp
jp
dec
jmp
push
mov
mov
adc
cltd
pop
lds
sub
test
mov
mov
inc
push
pop
sub
inc
push
fstps
ja
pop
sub
sub
into
rorl
mov
xchg
mul
jno
dec
ret
or
pop
mov
push
adc
xchg
stc
out
movsl
and
mov
push
inc
adcb
ljmp
jp
int
call
sbb
lahf
jno
jnp
pushf
cmp
fcompl
shrl
push
push
pop
mov
cmp
sti
push
and
or
adc
jp
fisubs
dec
pop
mul
mov
aas
jmp
adcb
call
jge
shr
pop
mov
das
push
paddd
pop
ret
push
jge
dec
and
test
aad
out
and
andl
jecxz
jp
mov
jae
mov
mov
inc
pop
cmpsl
jp
ljmp
xchg
mov
rorb
call
notl
push
and
movsb
lcall
sub
sub
sub
arpl
nop
jae
test
jbe
mov
mov
mov
xor
mov
mov
mov
std
leave
clc
mov
mov
ret
xchg
pushf
xchg
dec
sbb
pop
ja
jmp
xchg
aad
mov
xchg
cwtl
pop
aad
ret
dec
mov
andb
filds
cli
mov
adc
repnz
push
push
lea
push
icebp
int
in
push
int
mov
mov
mov
test
push
jne
mov
mov
popf
mov
jmp
cmpl
sbb
adc
aam
xor
fs
xchg
inc
inc
sub
shl
mulb
inc
pushf
mov
cmp
loope
aaa
add
jmp
or
or
call
pop
mov
mov
pop
imul
subl
jle
dec
dec
stos
push
pusha
cmc
int3
mov
mov
movl
test
jmp
adcl
cld
sbb
jmp
dec
fsubs
add
outsl
or
cmp
dec
repnz
cmc
dec
pop
push
inc
or
add
jae
pop
and
test
pop
dec
jmp
xor
jo
add
and
dec
sti
aad
mov
mov
nop
or
hlt
add
fcom
movzwl
loope
cmp
mov
hlt
pop
daa
cltd
push
or
sbb
jmp
inc
js
pop
or
pop
xlat
dec
and
testb
push
add
inc
sti
or
cld
fbstp
add
clc
popf
pop
and
ret
data16
cld
repz
mov
es
test
scas
sub
or
lods
adc
xor
scas
adc
cs
inc
or
push
jb
fcoms
loope
mov
cmpsb
nop
sti
call
mov
leave
imul
mov
mov
push
testb
xlat
xor
repz
xchg
sti
push
push
push
rcl
sarb
in
jecxz
xchg
push
cmc
arpl
out
stc
sub
adc
imul
popf
outsl
lods
aas
gs
pusha
inc
mov
add
sahf
mov
pop
rorb
inc
leave
sub
jp
sbb
add
mov
dec
inc
test
mov
bound
xacquire
sbb
inc
or
iret
inc
int3
enter
cwtl
push
or
mov
aam
and
or
repz
aam
in
mov
cmp
pushf
cmpb
ss
cmp
lods
clc
clc
sub
pop
test
mov
fnsave
add
jo
adc
push
dec
inc
pop
push
mov
scas
cmc
cmc
ds
or
cltd
clc
cmc
mov
stc
dec
mov
xchg
inc
xchg
negb
xor
cld
mov
dec
push
in
inc
or
out
inc
sbb
mov
nop/reserved
fsub
fwait
in
sub
pop
lret
mov
lret
lahf
lea
lret
and
in
pop
inc
pop
jmp
hlt
clc
xor
sub
mov
sbb
or
xchg
loopne
inc
add
add
repz
mov
xchg
int
sbb
ret
fiaddl
inc
js
jge
pop
dec
inc
cmpsl
mov
aam
mov
loope
sarl
cs
outsb
mov
shl
cmp
mov
xor
stc
in
lcall
sbb
mov
stos
mov
mov
pop
sub
mov
pop
xchg
dec
idiv
test
in
int
inc
filds
pop
mov
dec
jns
dec
or
pop
cmpsl
leave
insb
sbb
mov
jno
xchg
ds
icebp
adc
add
and
mov
cltd
jns
adc
sbb
les
sahf
ret
inc
mov
ret
nop
mov
xchg
jmp
inc
lea
imul
and
and
cs
push
mov
es
lret
leave
push
jbe
or
mov
sti
and
jmp
sbb
push
pop
add
mov
loopne
bound
mov
sub
gs
clc
and
enter
pop
sbb
inc
xor
cs
pop
daa
into
lahf
or
fimuls
jo
inc
mov
or
sbbb
mov
mov
jl
jmp
pop
mov
insb
lea
jnp
xlat
movntq
out
jns
dec
cmp
pop
jns
cmp
fmull
enter
rorb
loope
xlat
jno
call
xchg
add
cwtl
clc
mov
test
stos
call
sub
mov
div
mov
lret
mov
pop
xchg
mov
mov
jle
fcompl
xchg
sbb
mov
aad
add
stos
outsl
pop
lret
pusha
add
add
mov
ret
xor
jl
rorl
sti
jmp
xlat
add
mov
lods
and
add
sahf
clc
subb
ret
jle
xor
std
fwait
mov
hlt
mov
pop
mov
sub
and
call
std
adc
ljmp
push
xchg
lods
in
xor
leave
sbb
pop
call
push
ja
or
adc
test
xchg
shrl
sti
cmp
imull
out
call
inc
cmpsl
and
sub
and
mov
adc
clc
pop
jno
call
std
pop
xchg
and
dec
jg
les
fsubrs
idiv
inc
jmp
xor
das
in
xorb
jecxz
push
lea
ss
sub
fucompp
aad
mov
pop
or
mov
sbb
test
je
or
loopne
inc
push
scas
jo
push
xchg
mov
gs
xor
mov
test
ret
add
mov
sub
push
leave
add
jmp
popf
cmc
mov
rorb
ljmp
xorl
xchg
scas
iret
das
mov
jo
mov
add
inc
out
push
jecxz
andb
cli
and
std
lcall
cmp
push
or
adc
out
dec
xor
fisttpll
cmpb
jmp
xor
popa
or
lds
enter
add
shlb
enter
xchg
jle
cltd
sub
adc
or
mov
sti
stc
xlat
dec
jo
daa
jnp
std
adc
ja
push
mov
cmc
mov
and
xor
push
push
arpl
scas
andb
pop
call
xor
sub
test
push
test
dec
mov
push
sbb
pop
push
xlat
xor
jl
into
das
idivb
mov
fildll
inc
pop
mov
or
imulb
leave
aam
jmp
xor
mov
or
sbb
cmp
xor
lret
sbb
imul
call
or
push
outsb
push
andb
mov
int3
pop
pop
lret
adc
fisubs
xlat
push
mov
das
and
jb
or
pop
imul
xor
push
push
mov
jne
lods
paddusb
mov
pop
cld
cmc
or
cmp
rcrb
es
or
cwtl
jmp
pusha
stos
or
cwtl
flds
mov
inc
popa
add
lcall
adc
testb
leave
push
xchg
bound
das
sbb
fiadds
dec
jg
jmp
jnp
icebp
lgs
push
addr16
xchg
ficompl
mov
mov
jge
pop
call
cli
pop
jp
pop
stos
sbb
je
add
movsl
add
mulb
xchg
jnp
mov
pushf
or
mov
rcr
push
or
adc
data16
push
add
in
add
pop
lods
pop
and
mov
std
fs
addb
sbb
mov
mov
fdivs
repnz
jmp
pop
lods
jbe
scas
adc
xchg
shll
imul
sti
adc
jl
jmp
inc
inc
fsubs
punpckhbw
pop
xor
stc
pop
dec
hlt
xor
test
jne
pop
and
fsubl
insb
jae
xchg
or
cmc
cld
out
mov
or
ds
xchg
cwtl
shl
xchg
imul
push
ljmp
fdivp
xchg
jg
ficompl
xor
popf
dec
repnz
loope
or
fimuls
loopne
jmp
mov
sub
lahf
stc
rorl
mov
call
pop
fwait
iret
xchg
nop
cld
and
jb
mov
adc
cld
or
lods
xchg
call
addr16
fstps
xor
lock
lcall
jmp
pop
aam
sbb
push
xor
mov
jg
lret
loop
mov
bound
mov
cmp
testl
inc
call
je
iret
lea
movsb
cmp
fstpl
mov
push
mov
or
add
push
imul
push
lret
and
add
sub
cld
subl
mov
or
ret
sub
sbbb
std
lcall
xchg
inc
push
jmp
pop
idiv
js
pop
mov
repz
jbe
imul
xor
mov
lret
jbe
cmp
or
mov
sub
sub
mov
push
leave
jle
xor
stc
xlat
inc
andl
popf
insb
inc
add
mov
icebp
xor
cld
or
fcoms
call
jmp
xchg
out
add
jp
pop
cmp
pop
push
push
mov
inc
inc
adc
jns
sbb
dec
and
mov
neg
inc
aad
fsubl
mov
out
loopne
shrb
cld
popf
arpl
jmp
test
jmp
call
push
jmp
jecxz
loop
mov
shrd
xor
fiaddl
scas
out
sbb
cmp
cmpsl
pushf
jae
cwtl
test
jbe
adc
sub
jno
hlt
or
or
bound
and
gs
loopne
or
xor
inc
hlt
cli
out
sub
out
dec
lret
mov
aam
es
rcrl
shrl
adc
cmc
inc
push
pop
mov
add
jae
cmpsb
fildll
rcr
adc
or
pop
push
pop
xchg
or
pop
js
cmp
lea
inc
or
jle
cli
jmp
aam
loop
inc
mov
inc
xchg
sub
mov
ficomps
bound
push
push
jle
decb
repz
mov
xchg
dec
cmp
fldenv
cs
ljmp
add
or
pop
mov
mov
pop
add
add
inc
sub
xor
test
inc
mov
mov
add
les
and
jnp
shrb
push
add
fsubrl
jecxz
cmpsb
std
xchg
fiadds
push
xchg
inc
pop
xor
sbb
shlb
cmpsb
stos
fdivr
mov
mov
mov
or
call
jns
xchg
sub
xor
lock
mov
imul
xchg
jle
inc
rcrb
push
mov
stc
inc
outsl
jae
mov
xchg
imul
aad
arpl
das
sahf
xor
push
lahf
cltd
fildl
ss
xor
movsb
mov
and
lock
ljmp
mov
mov
mov
das
mov
hlt
xlat
scas
fmul
or
push
xor
push
sub
or
icebp
mov
mov
push
mov
out
ljmp
cwtl
lea
mov
imul
xor
jge
fisttpl
scas
ja
sbb
push
jecxz
adc
lahf
fiaddl
lods
push
das
mov
cmp
jecxz
int3
insl
mov
xor
cmp
push
mov
popa
repnz
mov
iret
jge
mov
or
and
and
sar
sbb
call
test
jae
gs
xchg
jecxz
test
pop
push
jmp
add
out
popf
xor
xor
sub
daa
mov
pop
aam
sub
cmpsb
jmp
repnz
push
sub
in
or
mull
inc
sahf
daa
xor
shrb
mov
cltd
call
lret
pushf
add
fwait
sarb
dec
pop
ljmp
loope
ret
add
push
cmpsl
test
mov
out
dec
fdivr
mov
mov
cmp
inc
dec
mov
inc
and
mov
jl
daa
or
xor
push
sub
data16
mov
inc
or
push
call
or
mov
cmpsb
popf
or
loop
sub
push
scas
ret
orl
mov
add
lcall
dec
or
in
sub
jl
outsb
dec
mov
addb
shll
push
add
jge
inc
push
mov
loopne
cwtl
pop
loop
int
ret
or
xchg
test
jb
jecxz
push
and
sub
rclb
inc
add
jmp
js
aam
xor
cmpb
sbb
xor
cmp
scas
scas
push
imul
rclb
out
movsb
sub
loop
xor
and
dec
xchg
aas
push
pop
mov
call
adc
scas
and
pop
pop
fstl
ss
cmp
jge
pop
jge
sti
stos
and
ret
cli
cmp
mov
test
inc
mov
ret
testb
fimull
jb
pop
jmp
mov
inc
jb
xorl
test
pop
cltd
xor
sbb
sbbl
inc
repnz
add
fcomps
xor
inc
repz
pop
push
ss
mov
sub
icebp
push
jns
pop
testb
add
jns
sub
movsb
adc
addb
dec
je
push
push
into
sub
lcall
in
sub
les
sub
test
cmc
jge
mov
cli
add
push
mov
mulb
cli
sub
aam
leave
add
push
ret
xchg
xor
push
nop
mov
sub
push
mull
pop
xchg
adc
sbb
clc
mov
pop
mov
dec
xor
or
xor
jle
gs
test
xchg
cmp
cltd
lahf
aas
jbe
icebp
movb
adc
or
pop
push
or
jns
pushf
mov
sbb
dec
mov
out
cmpsb
cmp
fidivrl
or
pop
mov
pushf
dec
int3
xchg
jo
jno
fdivl
mov
fmull
mov
pop
mov
inc
stos
add
sub
das
cmp
rcll
push
push
loop
sahf
mov
clc
test
subb
negb
mov
out
call
bound
and
mov
iret
inc
sbb
push
test
jo
sbb
and
aas
xchg
inc
inc
push
popa
loope
aaa
movsl
adc
daa
aad
cld
daa
jne
add
out
lods
or
icebp
daa
ja
sub
mov
insl
cmp
cmpsl
test
call
cs
lret
dec
fildll
int3
adc
into
push
mov
and
movsb
adc
cmp
sub
mov
notb
int
data16
mov
sbb
sbbb
cmpsl
mov
jae
jecxz
add
mov
arpl
push
xor
std
je
aad
andb
pop
mov
lret
mov
inc
testl
imul
inc
sbbb
pusha
movsl
mov
or
loopne
xor
mov
and
stos
cwtl
jne
sub
repnz
xlat
mov
or
outsl
mov
mov
dec
aas
xor
cmpsl
out
and
pushf
cltd
lea
jne
or
inc
add
xor
jmp
jecxz
pop
inc
pop
mov
jecxz
in
add
xor
add
sbb
mov
and
aas
xchg
adc
movsl
pop
dec
adc
and
test
addr16
jb
adcb
push
std
jb
call
pop
fcom
jp
std
stos
dec
gs
test
leave
push
adc
stos
repnz
add
shr
xor
loop
into
dec
xor
jmp
test
into
sbb
cwtl
dec
jge
inc
xor
jge
pop
mov
xchg
mov
push
nop
add
fwait
or
lods
push
ja
fisubs
popa
in
add
pop
lea
negl
daa
stc
and
pop
xlat
cmpsb
movsb
inc
xchg
fucomip
jo
push
mov
movzwl
or
sti
loope
sub
div
pop
pop
call
inc
subb
mov
cmp
inc
aaa
ret
mov
outsb
and
cmp
inc
fwait
aaa
mov
add
add
or
xchg
nop
push
cld
stos
adc
adc
fdivrl
sub
fwait
mov
cmc
mov
adc
or
int3
iret
cmpsl
xor
in
add
jmp
cmp
xor
call
add
xor
icebp
mov
pop
jb
rorb
adc
dec
inc
in
jmp
or
testl
imul
jno
sbb
cli
cmc
xchg
xor
ja
mov
mov
sub
mov
cmp
std
mov
pop
cs
test
push
push
mov
outsl
sub
leave
pop
fs
push
xorb
ret
xor
out
inc
addb
mov
push
pop
or
imul
xchg
cmp
push
xchg
push
pushf
fimull
pop
in
int3
loopne
adc
sbb
xchg
cld
dec
sahf
mov
in
mov
jg
mov
divb
aad
stos
in
jg
jae
cwtl
add
out
or
dec
call
in
addr16
push
add
pop
nop
into
ret
scas
push
dec
divl
jns
pop
stos
cmc
insb
sti
ljmp
add
call
push
hlt
stos
call
call
cmpsl
cmpb
mov
lods
mov
ds
inc
pop
xchg
inc
or
lods
adc
hlt
out
jo
mov
pop
or
push
lods
jo
push
xchg
push
stos
lock
jmp
xor
sub
scas
xor
sub
clc
add
sahf
lcall
jo
push
pop
shlb
ret
repnz
xor
scas
std
adc
hlt
cmc
sub
xlat
repz
cmpsl
push
mov
out
mov
stos
out
popf
ficomps
inc
inc
dec
and
inc
xor
adc
aaa
push
add
or
sbb
push
lahf
xchg
sbb
xchg
or
loop
scas
aaa
mov
scas
or
ljmp
sub
cmpsb
xchg
push
push
lret
xchg
pop
insb
and
mov
xchg
pop
test
sub
loopne
call
roll
sbb
add
adc
mov
mov
mov
gs
pop
test
lea
dec
notb
push
mov
mov
fwait
aas
bnd
jp
test
mov
or
xor
or
mov
subl
inc
cwtl
out
jnp
mov
push
xchg
xorb
lret
xor
decb
mov
mov
orb
mov
mov
popf
inc
lock
pop
push
push
jle
inc
jmp
mov
push
call
jo
pop
stos
push
dec
imul
add
out
cli
jge
fmull
push
sbb
fwait
sahf
clc
ret
dec
scas
add
or
mov
inc
or
xchg
pop
mov
mov
mov
pusha
lahf
js
or
mov
pop
movd
jae
adc
clc
ljmp
cmp
cli
mov
test
push
mov
sbb
cmpsl
mov
data16
cmp
xchg
addl
lods
out
jmp
test
clc
cmc
mov
cmp
mov
sub
negl
daa
clc
les
outsl
daa
dec
mull
inc
aad
or
jle
es
push
jns
das
and
imul
jae
jb
push
not
adc
xor
in
movsl
scas
pop
dec
or
sbb
daa
mov
pusha
imul
mov
mov
push
xor
loopne
inc
mov
sbb
data16
jl
scas
lret
das
subb
xchg
cmpsl
dec
lock
and
movsl
inc
mov
or
mov
or
fdivl
push
sub
jge
inc
adc
jbe
popa
jno
add
dec
mov
push
imul
daa
aas
enter
les
popf
in
jmp
subb
popa
fsubl
mov
inc
push
adc
lock
mov
pop
nop
clc
mov
gs
neg
imul
sbb
xor
pushf
cmp
inc
insl
icebp
aaa
dec
out
insb
out
pop
call
and
xor
mov
int
and
pop
mov
sbb
jb
add
add
or
aaa
dec
sub
sub
dec
add
leave
jmp
jbe
in
mov
adc
push
mov
jno,pn
rcrb
pop
pop
insb
xchg
cmp
push
fucomi
sar
imul
xor
jns
cmpsb
cmovb
mov
stos
dec
je
pop
orl
nop
ret
stos
andb
addb
sub
data16
lret
cli
jne
push
xchg
cmp
pop
stos
or
icebp
push
mov
pop
stos
movsb
push
xor
pushf
imul
mov
push
jmp
and
out
bound
add
jbe
test
hlt
hlt
mul
addr16
xor
inc
xor
jmp
sub
rcrb
push
push
cwtl
or
pop
js
mov
sti
lahf
mov
lret
iret
mov
call
mov
movsb
das
xchg
int
jle
nop
jmp
pop
out
jl
das
cld
adc
test
inc
push
and
add
cmp
and
mov
sarb
xchg
mov
sahf
mov
sbb
jne
call
or
test
jecxz
andl
test
adc
jmp
mov
fstl
xchg
mov
mov
inc
test
mov
sbb
enter
mov
loop
and
gs
mov
sbb
ficoms
push
mov
imul
dec
les
mov
push
xchg
movsw
xor
repnz
cmp
test
stos
in
mov
paddw
outsb
xchg
xor
mov
and
mov
and
hlt
mov
lock
adc
xor
stc
sub
inc
or
loop
pop
add
test
lods
mov
mov
dec
add
push
cmp
and
iret
ret
cmp
jb,pn
or
add
inc
jae
add
and
mov
push
arpl
or
les
call
inc
add
cmp
jg
loope
in
sti
shll
xor
mov
sahf
push
pop
pop
push
push
cwtl
xor
cwtl
iret
test
in
insl
pop
out
push
push
cmp
popa
ret
inc
repz
arpl
fcomps
xchg
cmpsl
jecxz
fiadds
xchg
and
scas
fistpll
std
mov
jb
test
mov
xchg
dec
sbb
out
xor
add
rolb
jmp
or
mov
xchg
call
sbb
jge
sub
mov
push
rcr
sbb
icebp
cld
mov
daa
mov
aas
rol
and
dec
inc
addl
insl
or
and
hlt
inc
adc
loop
or
cwtl
dec
js
lahf
and
lock
pop
jnp
cmc
mov
and
imul
cwtl
movsb
or
dec
pop
mov
pop
mov
lods
pop
stos
or
jp
adc
stc
jno
sub
mov
mov
pop
lahf
sbb
sarl
mov
jl
divb
and
sbb
push
rclb
rolb
hlt
test
jmp
cli
and
and
push
push
mov
push
pop
mov
mov
cld
lahf
stc
inc
xchg
test
repnz
xor
repnz
mov
dec
pop
imul
cwtl
sbbb
js
jmp
or
inc
not
sub
mov
cltd
ret
pop
test
imul
pusha
jnp
fidivl
xchg
adc
xchg
dec
mov
inc
and
sbb
xor
adc
fwait
movsb
sti
sub
dec
nop
add
lods
fbstp
fists
jo
push
jp
aad
inc
jmp
and
fucom
rcrl
test
loopne
pop
outsl
xchg
pop
jo
inc
sbb
in
inc
or
pop
pop
mov
jns
test
imul
jge
mov
add
and
aad
mov
mov
push
call
jge
repnz
sbb
je
mov
dec
mov
mov
lds
dec
into
push
and
cmp
in
cmp
cs
mov
add
and
data16
jmp
ror
inc
les
xlat
adc
add
push
xchg
lods
jb
hlt
in
loopne
sub
mov
add
into
shlb
movsb
out
ret
rcrb
jne
orl
cld
lret
mov
icebp
sbb
cld
sub
repnz
ret
mov
int3
mov
rol
push
or
insl
add
push
xorl
fldl
mov
cmp
ficomps
mov
add
inc
imul
push
out
call
popa
call
clc
mov
icebp
dec
xor
dec
popf
sti
pop
lcall
xchg
push
push
sahf
mov
cmp
xor
push
data16
aas
add
add
sub
mov
adc
xor
or
outsl
aad
mov
loopne
in
and
addr16
xchg
mov
mov
add
das
dec
xchg
pop
jmp
lds
jne
adcb
inc
pop
lods
outsl
dec
push
xlat
mov
dec
sbb
xor
adc
imulb
push
fs
clc
xor
ja
jl
xor
sahf
cmc
enter
cmp
sbb
mov
mov
aam
xor
lret
dec
out
or
fistps
mov
bound
mov
add
xchg
ret
repnz
lods
mov
mov
je
adc
pop
mov
and
mov
cmp
pop
pushf
daa
jns
mov
inc
pop
adc
cmc
or
push
dec
or
ds
pop
jle
in
addb
cld
cli
pop
mov
jle
mov
mov
or
mov
lret
add
icebp
mov
fstpt
sti
and
divb
push
sbb
mov
sbb
test
dec
scas
sti
cmpsb
das
movsb
mov
cmc
ret
pop
mov
sub
xlat
dec
lods
repnz
aaa
push
enter
xor
fwait
add
ret
add
ret
jmp
sbb
mov
fnstenv
add
and
adc
cmp
loope
cli
sub
imul
daa
loopne
jae
lret
sti
mov
add
adc
imul
cmp
xchg
movsl
pop
add
sti
pop
or
pop
inc
pop
fmuls
adc
inc
testl
sub
test
push
xchg
jbe
ljmp
cmp
ret
or
pop
adcb
pop
push
stos
sub
dec
call
jo
test
popa
jmp
imul
jns
lret
add
add
test
sarb
cmp
insl
sbb
test
loop
xchg
ficoms
mov
test
rcll
call
cltd
setnp
test
add
xchg
inc
jmp
pop
stc
pushl
or
xchg
jmp
jb
inc
and
fsubs
popf
push
cwtl
insl
xor
decb
or
addb
les
mov
pop
push
xor
call
fs
loop
adc
aam
imul
es
insb
jmp
scas
adc
mov
lea
int
testb
and
dec
mov
jae
negb
scas
in
cli
f2xm1
jl
adc
jmp
xor
insl
testl
cmpsb
ds
ret
push
jns
sbb
pop
xchg
jle
movsl
std
add
fnsave
lret
push
mov
mov
dec
push
mov
fcompl
mov
cltd
inc
std
mov
mov
scas
or
into
inc
inc
cwtl
mov
or
or
mov
fstpl
mov
jnp
mov
call
je
in
or
push
pop
sub
mov
xchg
fucom
int
lods
iret
mov
rcll
adc
push
notb
add
das
push
lcall
rcll
rcrb
xchg
aas
pop
xlat
cmc
fiadds
dec
dec
call
jl
inc
rorb
mov
or
pusha
pop
xchg
ficomps
imul
add
jmp
rol
cmp
cmc
inc
test
mov
push
testl
les
jnp
daa
cmpl
fbstp
add
inc
stos
stos
mov
data16
imul
repnz
mov
cltd
es
sbb
je
nop
push
shr
lds
mov
push
xchg
ds
push
xlat
lahf
mov
iret
add
std
adc
std
es
mov
adc
push
xchg
loop
aas
popa
in
push
inc
pop
inc
or
mov
cmc
add
aam
int
push
mov
sbb
loopne
out
xchg
or
xor
xor
sub
insb
mov
out
cwtl
or
popf
imul
dec
cld
rorl
outsb
push
mov
cmp
cs
push
push
outsb
dec
pop
enter
push
cmpsl
clc
xor
push
xor
adc
jmp
push
cld
in
iret
mov
jecxz
add
xor
mov
cld
shrl
mov
ret
pusha
dec
mov
sub
pushf
sub
mov
aas
lahf
mov
scas
push
and
cmp
cmp
xchg
cmpsb
inc
fninit
xchg
sahf
stc
jecxz
inc
mov
gs
xor
cs
call
xchg
in
xor
xchg
cwtl
out
insb
test
jecxz
mov
out
fcoms
jo
push
call
push
xchg
aad
shr
dec
imul
cmp
fcomps
scas
cltd
or
push
hlt
icebp
aas
mov
xor
test
out
cld
sub
lcall
icebp
dec
sub
or
call
repnz
jnp
inc
stc
or
lahf
aad
int
pushf
repnz
push
pop
mov
lahf
cmp
in
mov
cs
clc
add
lahf
bound
dec
adc
pop
ljmp
pusha
cld
out
pop
mov
xor
clc
xor
loope
inc
pop
xchg
std
add
adc
jge
and
and
call
xor
data16
sub
lahf
mov
pop
push
pop
and
mov
sbb
ret
test
push
es
popf
dec
hlt
dec
add
pop
jbe
das
or
dec
gs
and
fcompl
cmp
mov
mov
test
jno
call
sti
lret
mov
mov
je
jg
mov
imul
cmp
ds
xchg
jge
in
jge
jne
cmp
jo
sbb
mov
mov
add
jo
push
jbe
fdiv
and
imull
pop
flds
in
leave
jp
push
repz
lea
xchg
mov
test
sbb
repnz
sar
xor
cmpsl
xchg
rol
int
add
mov
pcmpgtd
ljmp
push
and
or
jo
inc
jb
pop
ds
mov
bound
out
ret
and
adc
jge
sub
enter
mov
push
inc
mov
orl
fimull
mov
addl
call
fldl
pop
in
mov
pop
inc
fdivl
xor
nop
fldl
adc
imul
das
xor
dec
mov
dec
dec
inc
cli
sub
sub
in
sti
lods
in
inc
int
pop
push
mov
push
ljmp
ja
push
or
mov
scas
push
lods
xor
testb
pop
mov
jmp
inc
jno
int3
call
sub
mov
aaa
cmpsb
push
ja
daa
sti
ret
ja
sub
mov
stos
and
push
adc
repnz
insb
loope
push
push
aaa
push
loopne
mov
sbb
push
out
push
pop
jo
mov
sbb
xchg
jmp
int
sub
jo
test
popf
dec
neg
jno
popa
mov
xchg
jp
mov
mov
or
cld
mov
push
push
or
test
jmp
nop
fcomps
adc
jb
pop
xchg
jp
subb
ss
and
add
push
cmpsl
cmp
add
fildll
fcoms
hlt
jae
enter
pop
add
mov
pop
jne
pop
cltd
push
push
and
loopne
mov
mov
lods
mov
or
jo
push
stc
jmp
loope
scas
push
push
popa
mov
add
adc
das
rclb
push
push
inc
in
shlb
jge
sbb
fists
mov
jmp
xor
jo
cld
dec
push
pop
jmp
jbe
nop
cmpsb
pushf
sbb
movsb
or
pop
loopne
stc
add
out
push
add
dec
repnz
xchg
das
test
pop
ret
clc
ret
ja
push
push
mov
jl
insb
std
das
mov
jmp
mov
jle
repnz
fists
pop
jne
rolb
mov
in
sub
mov
subb
xor
andb
mov
cmpsl
pop
dec
scas
adc
push
test
shll
mov
or
imul
mov
in
jbe
inc
notb
insl
dec
movsl
cmp
jle
cmp
divl
hlt
xlat
adc
fsubrl
les
push
sbbb
outsl
call
cmpsb
dec
lock
pop
jmp
outsb
and
sub
lahf
leave
jae
aam
push
or
dec
js
mov
pop
test
out
stos
or
or
mov
dec
in
gs
add
aad
add
pop
call
mov
cli
pop
popf
daa
fmul
leave
pop
loope
or
fstps
push
add
mov
aaa
pusha
adc
ljmp
nop
sub
inc
inc
pop
in
jecxz
xor
daa
push
jp
cmp
out
jmp
pop
sbbl
add
scas
inc
sub
or
jb
push
mov
add
xchg
pushw
mov
mov
fs
adc
cmp
mov
int
shlb
enter
push
add
mov
push
xchg
mov
fisttps
stos
jbe
sub
loope
sub
add
into
movsb
icebp
sbb
push
and
sbb
ror
cmpsb
insb
mov
clc
addl
mov
sti
jecxz
dec
divl
push
sbb
in
paddsb
pop
sub
lcall
loop
pop
sub
and
in
or
testb
aam
repnz
and
pushl
pop
cmp
jmp
push
sub
data16
adc
push
fwait
push
cld
daa
inc
ret
mov
dec
imul
inc
push
and
mov
faddl
dec
jle
dec
jmp
mov
mov
adc
lods
xor
adc
jo
push
cmpsb
push
jmp
mov
push
and
mov
inc
dec
dec
inc
mov
dec
insb
jmp
lret
add
and
inc
test
popf
iret
sahf
mov
xor
mov
xchg
rol
call
pop
add
sbb
cmpsl
inc
mov
in
push
fistps
cmp
mov
in
aaa
push
adc
dec
nop
mov
inc
mov
pop
int3
xor
leave
mov
mov
mov
cwtl
dec
mov
push
adc
scas
adc
mov
mov
sub
cmp
push
xor
addr16
and
jg
sbb
add
jl
fdivrl
dec
insb
pop
sub
mov
xchg
sahf
fidivs
leave
out
shr
adc
mov
inc
pop
out
imul
lock
sbbl
bound
and
mov
mov
add
rcrl
pop
mov
dec
and
push
mov
dec
mov
les
imul
inc
in
mov
pop
mov
cmpsl
roll
inc
adc
jp
pop
mov
xchg
mov
popa
mov
mov
inc
pop
mov
in
dec
push
test
adc
cmp
es
cld
mov
fnstsw
inc
pop
aam
adc
repz
in
jge
pop
mov
mov
jne
shlb
xchg
fmuls
adc
jbe
inc
cwtl
mov
loop
and
lea
lds
rolb
lods
mov
dec
xorl
das
or
pop
dec
cmp
and
inc
dec
bound
push
mov
fstpt
push
sub
nop
bound
pop
adc
jmp
mov
xor
push
jno
pop
outsl
or
mov
push
out
in
xchg
mov
sub
popf
jecxz
push
dec
jp
lods
adc
in
enter
dec
in
xor
and
and
jg
sahf
xor
adc
jo
stc
es
pop
addl
xchg
sti
and
addl
int
call
push
pop
popa
mov
daa
faddl
insb
mov
xlat
add
test
inc
jle
lret
xor
sarb
in
sub
sbb
popf
filds
ret
jge
rorb
test
popl
add
or
inc
bound
aas
push
in
das
or
push
es
cmp
lods
xchg
dec
sahf
fisttpl
ret
fisubrs
mov
pop
mov
inc
sub
jmp
push
dec
mov
fisubl
inc
inc
imul
std
jno
jmp
push
push
into
out
xchg
mov
test
push
mov
mov
dec
loop
pop
push
lcall
es
loope
add
push
sub
fcmovb
cmpsl
sbb
sub
mov
jb
pop
sti
aad
pop
mov
pop
jg
in
mov
lods
jp
mov
out
fstpl
add
test
mov
cmp
lods
pop
push
out
addr16
test
sarb
inc
mov
mov
push
pushf
repnz
fxch
ja
loopne
cwtl
nop
mov
stos
xor
and
call
cmp
ja
inc
jmp
outsl
mov
dec
stc
sbb
xchg
mov
jae
icebp
and
movsb
dec
mov
jnp
int3
sbb
cs
xchg
dec
roll
add
out
xchg
pop
inc
in
push
popf
call
iret
adc
ja
pop
pop
loope
adc
inc
fwait
test
imul
push
dec
jmp
xor
and
or
aaa
sub
xchg
lods
icebp
jb
sbb
xor
xlat
mov
push
call
arpl
sbb
sub
mov
sbb
jg
lahf
mov
sbb
xor
mov
mov
call
fwait
movsb
fmull
jmp
aam
mov
sbb
cltd
mov
mov
int
sub
jbe
jo
call
out
push
jae
dec
ljmp
rcr
imull
mov
add
lea
or
pop
subb
arpl
fnclex
add
mov
clc
cmp
aas
lcall
hlt
xchg
xchg
outsb
xor
shrl
ss
testb
push
cmp
pop
mov
or
jnp
xchg
push
mov
jl
or
cmp
movl
loope
ja
dec
mov
dec
xor
lea
dec
push
lret
fistps
mov
cmp
mov
cli
or
inc
jg
mov
icebp
rorl
aaa
movsb
mov
lds
lcall
sbb
pop
mov
fists
mov
call
push
clc
push
mov
push
sti
jmp
mov
push
xlat
xchg
xor
out
mov
ret
add
adc
insb
lock
cmc
addb
je
and
dec
push
jno
inc
insb
pushf
xor
les
cmp
jecxz
ss
lods
loop
adc
or
arpl
sahf
mov
fildll
or
out
mov
xor
js
add
mov
and
add
cmc
stc
mov
rorl
mov
movsl
mov
mov
dec
push
stos
fdivl
pop
xchg
mov
lcall
add
and
and
push
test
cs
mov
lret
lds
ficompl
call
fcomps
cmpb
pusha
stos
rorb
jnp
push
pop
jmp
mov
in
out
xor
jmp
mov
ljmp
popf
lods
sub
cmp
lods
mov
xchg
cld
inc
xorl
pop
fsubs
xchg
xchg
push
add
sbb
nop
mov
push
call
out
dec
hlt
push
adcl
stc
arpl
addr16
mov
cli
jno
pop
lcall
subl
aad
mov
sub
jns
xor
mov
adc
or
push
or
push
cld
push
dec
add
call
loopne
in
aas
jae
or
jmp
jl
sahf
sbb
adc
out
xchg
and
pop
dec
pop
jo
insb
loopne
jmp
push
jg
push
mov
jge
stc
mov
push
sbb
movsl
sub
int
hlt
int3
dec
aaa
cmp
sub
mov
mov
rorb
add
stos
and
mov
sub
mov
movb
loop
cwtl
aaa
out
mov
push
xor
aas
cmp
loopne
add
repnz
cmc
into
sub
jmp
ret
outsl
mov
sub
imul
adc
cmp
jp
pop
jecxz
stos
mov
inc
dec
xchg
call
inc
les
adc
mov
or
jb
xor
fdiv
cmc
outsb
sbb
call
pop
pop
out
push
inc
inc
inc
in
or
dec
cmc
pusha
inc
xchg
mov
dec
mov
out
mov
bound
sub
loopne
mov
imul
push
mov
adc
push
fucomi
mov
jl
adc
adc
call
xchg
leave
das
fs
or
jb
cwtl
dec
add
movsl
mov
rcll
adc
imul
test
lahf
mov
and
out
mov
cwtl
es
and
push
outsl
ret
jb
dec
popf
pusha
sbb
xchg
aam
sbb
rol
sub
mov
addr16
jmp
add
imul
stos
sub
es
mov
xchg
jg
unpcklps
push
cmp
sub
mov
xor
sarb
ds
lea
mov
mov
imul
inc
scas
stos
leave
cli
daa
int
mov
xor
jo
cwtl
jmp
ja
aad
pop
shrb
xchg
cmp
mov
push
stc
xor
mov
insb
repnz
test
pusha
xor
scas
mov
xor
xor
inc
arpl
cmc
in
add
sahf
mov
jne
decb
inc
mov
pop
or
mov
sbb
cli
sbb
std
jmpw
mov
add
stc
jge
ret
sub
pop
cmp
in
pop
xchg
lret
fistpl
sub
addr16
sub
or
aam
push
addr16
jno
pusha
iret
push
test
sti
dec
jmp
rorb
pop
pop
lahf
mov
lds
mov
enter
sahf
sub
jecxz
bound
orb
add
add
mov
rcl
sarl
fstp
out
aam
xor
pushf
or
mov
aad
xchg
int3
fs
jge
incb
test
call
sub
ja
and
in
mov
rclb
mov
int3
flds
and
rcrl
in
inc
mov
jmp
and
stos
and
xor
cmp
pushf
int
inc
lods
or
or
daa
mov
sbb
lock
out
je
repnz
pop
fidivl
dec
aaa
insb
mov
add
xchg
test
ds
mov
xchg
jg
daa
mov
sub
test
xchg
sub
mov
sub
hlt
push
mov
dec
nop
push
rolb
loopne
jae
ljmp
ss
adc
fists
fcomps
xor
cmp
or
mov
inc
faddl
test
dec
subb
pop
call
or
add
test
mov
dec
sbb
xor
push
pop
mov
dec
fldl
pop
ret
ffree
jne
aam
xor
cmpsl
rcl
jno
mov
addr16
jb
fnstsw
jecxz
aad
test
cmp
test
cld
push
js
sub
int3
pop
sti
mov
nop
and
stos
loop
push
pop
sahf
insl
mov
in
cmova
cmpsl
lcall
pop
cmp
pop
xor
mov
jg
inc
cmc
addr16
pop
out
pop
add
jg
inc
adcl
sti
imul
push
sbb
fdivs
sahf
in
es
movsb
popf
sub
hlt
xor
mov
pop
fdivrl
int3
xor
cmp
or
mov
mov
sarb
cmp
fidivrs
mov
lret
mov
sub
das
pop
xor
jmp
push
data16
xor
and
fstpt
test
loope
popf
in
mov
call
jne
stos
and
mov
cmpsb
mov
inc
dec
push
ret
test
pop
jb
call
add
enter
push
or
lods
sub
repnz
mov
inc
in
fsubrp
and
rcll
dec
or
addl
imul
and
lea
push
dec
cld
xor
add
stc
add
pop
add
jle
inc
pop
out
push
imul
aaa
add
lock
repnz
adc
pop
pop
js
add
jecxz
or
loopne
jne
dec
lahf
sbb
call
mov
jne
jo
inc
mov
pop
mov
lret
jg
cmc
int
push
cmp
ficoms
jmp
out
in
dec
mov
cmp
in
js
jb
mov
aad
xlat
in
pop
test
scas
xchg
call
mov
shr
cmp
inc
outsb
jno
mov
xor
fidivl
lods
jo
jge
jmp
cltd
pop
and
mov
jmp
mov
outsb
mov
aas
jmp
lods
pop
mov
pop
lods
add
outsl
pop
enter
shl
add
push
addr16
lret
cld
sbb
sbb
dec
cs
fmuls
ss
aam
and
lea
std
out
gs
cmpsb
movsb
movsb
mov
fprem1
and
adc
dec
daa
test
sub
or
test
jne
dec
ja
add
jle
sti
sub
dec
mov
stos
xchg
test
pop
jmp
icebp
sbb
lods
incb
movsb
mov
lods
and
mov
jle
push
call
mov
adc
xchg
ret
pop
mov
cwtl
cmp
das
test
aam
loopne
das
and
fcompl
add
and
aam
cmp
mov
pop
mov
ret
xchg
jb
sbb
push
int3
insl
daa
shl
les
lea
fcomps
sahf
jae
scas
cmp
outsb
or
lds
call
pusha
jns
mov
cwtl
and
fstpt
add
fxam
imul
leave
cmp
pop
dec
and
cli
out
sbb
cmp
std
adc
popf
adc
mov
and
icebp
dec
xlat
sbbb
repnz
mov
sbb
sub
jb
or
in
mov
cmp
xchg
mov
sub
adc
enter
push
xchg
mov
popf
shll
bound
testl
add
mov
pop
xor
adc
pop
fs
lea
mov
or
popa
push
jnp
mov
fcmovu
stos
adc
add
es
cmp
sub
dec
aad
add
add
mov
sbb
mov
mov
daa
mov
int3
jmp
push
jg
rorb
jp
inc
pop
fbld
movsb
sbb
sbb
cmpsb
jno
inc
out
inc
pop
clc
mov
push
fdivrl
repnz
jge
sub
lcall
sbb
sub
pop
shr
push
cmp
cmp
or
and
outsb
mov
lods
inc
mov
pusha
incb
icebp
sbb
das
fdivr
popa
add
call
sub
repnz
and
jl
mov
call
xor
adc
dec
push
inc
push
fstpl
adc
sbb
inc
into
ficomps
in
adcl
call
mov
fwait
das
filds
inc
out
jne
aaa
jle
arpl
cmc
mov
sti
lds
pop
mov
and
fwait
into
stos
in
ja
mov
sub
and
out
sub
pop
jmp
push
std
jb
call
push
movsb
fs
add
shl
mov
stos
jmp
mov
inc
repnz
and
dec
dec
bsr
xorb
fsubr
loopne
add
lods
mov
call
addl
ljmp
call
inc
sbb
stc
addr16
and
aaa
mov
test
xchg
mov
rcr
aam
ljmp
sbb
pop
cmpsb
push
mov
inc
movsb
mov
push
inc
and
push
fistps
movsb
arpl
cmp
mov
or
mov
and
add
pushf
icebp
stos
jecxz
pop
rolb
inc
jg
je
cmp
mov
repnz
lcall
out
or
js
jp
dec
daa
test
inc
cli
adc
xchg
sbb
in
and
fstpl
cmpsl
int3
mov
stos
loopne
lahf
cmp
xor
xor
icebp
push
sub
shlb
cmp
test
jle
imul
call
mov
mov
insl
xchg
daa
div
mov
lods
inc
dec
pop
lds
mov
ret
and
push
test
out
cmp
xchg
das
aas
adc
insl
push
or
scas
pop
es
imul
sbb
leave
pop
lds
rcrl
and
and
jno
repnz
int3
mov
ja
and
push
out
jno
scas
push
xchg
and
repnz
out
call
enter
cmp
or
rolb
cmc
dec
pop
fcoms
mov
fsubrs
mov
test
enter
lahf
xor
je
mov
mov
stos
cwtl
int3
ret
or
push
js
sub
push
cmpsl
add
xor
and
xchg
nop
adc
std
shlb
jo
aaa
push
ja
xchg
mov
sahf
out
xor
or
sub
cmp
push
xor
add
cli
mull
out
xchg
movsl
sub
scas
or
loope
mov
lock
into
mov
adc
mov
fists
and
dec
sub
or
rorl
cli
fwait
icebp
incl
mov
movsb
xchg
sahf
xchg
rolb
lcall
stos
les
mov
or
pop
push
lcall
jmp
mov
xchg
sbb
push
xor
jb
icebp
movsl
jmp
repnz
add
pop
adc
push
mov
jecxz
sbb
xor
jne
pop
xchg
and
adc
mov
jle
mov
sbb
xor
mov
jecxz
xchg
fwait
loope
and
iret
insl
addr16
add
mov
ror
xor
jmp
push
sub
iret
dec
mov
mov
stc
pop
cmp
and
add
dec
inc
xlat
shl
mov
lods
pop
xor
pop
push
or
cli
popf
xor
sub
in
into
test
stos
stos
add
mov
push
xchg
cmp
jp
or
push
fmuls
out
pop
cld
insb
cmp
pop
and
jae
ja
lret
out
cmc
add
or
daa
aam
mov
loop
out
add
aas
mov
ret
jbe
scas
pushf
mov
cmpsb
nop
stos
mov
pop
mov
lock
das
mov
xor
xchg
lret
orb
inc
mov
daa
sbb
mov
daa
xchg
loopne
and
cmpsb
orb
pushf
mov
cmp
or
cld
and
mov
add
pop
jmp
xlat
in
dec
lds
pop
fisubrl
jb
pop
ja
ja
inc
aaa
cltd
pop
jge
inc
cmp
xor
ss
testb
mov
das
inc
into
push
add
inc
in
fcomi
xor
popa
repz
xchg
cmc
pushf
mov
mov
sub
and
jno
pop
ljmp
xchg
mov
cltd
add
shl
testb
mul
iret
push
jge
in
sbbb
mov
lahf
jecxz
pop
xchg
add
das
adc
or
cli
mov
and
call
dec
repnz
jb
cmp
xorl
call
ja
aas
inc
aas
sbb
mov
cmp
icebp
mov
xor
cmc
std
cmp
cli
cld
push
sub
sahf
rorb
pop
xchg
jmp
fdivrp
sarb
jmp
push
insl
mov
jl
mov
fs
lods
imul
mov
cmp
push
adc
mov
shl
das
out
cmpb
arpl
icebp
push
mov
icebp
sub
push
jl
orb
out
push
rclb
cmp
sbb
testb
inc
pop
xchg
loopne
mov
cmpsb
inc
cmc
cmp
std
stos
jecxz
adc
push
inc
and
cs
repnz
mov
dec
idivl
mov
arpl
push
into
add
inc
shlb
pusha
xlat
jmp
mov
dec
cwtl
lock
xor
mov
leave
inc
jo
pop
mov
mov
enter
stc
pop
xchg
sub
jge
jg
subb
adc
xchg
es
dec
mov
or
pop
stos
xchg
sti
push
flds
cmp
shll
call
jmp
lret
imul
scas
push
and
push
daa
sub
xor
daa
pop
ds
dec
mov
int3
push
xchg
ss
mov
std
ds
push
xor
jl
in
pop
dec
pop
xlat
pushf
in
call
pushf
ljmp
icebp
js
xchg
js
mov
icebp
fstpl
je
test
daa
sbb
add
push
movsl
xchg
das
out
jns
mov
fwait
jne
or
jl
dec
mov
add
pop
out
mov
push
mov
mov
push
fstps
nop
js
daa
pop
in
xchg
inc
into
mov
mov
test
pop
xor
adc
cmpsl
mov
sbb
mov
out
cmp
test
lret
adcb
hlt
push
pop
push
punpckhbw
pop
pop
cld
aam
shrl
adc
ljmp
out
mov
jo
cmpsb
stc
mov
nop
jae
xor
pop
or
pop
test
inc
push
dec
hlt
push
xchg
filds
rcrl
out
shrb
gs
cld
inc
xlat
dec
and
mov
push
aam
or
gs
pop
pop
jmp
xchg
mov
xor
test
ret
andl
popa
add
inc
icebp
addl
repnz
hlt
cld
cld
jno
test
nop
mov
ret
push
jge
mov
aam
push
aad
and
xchg
mov
mov
cmp
cmp
pop
and
cld
loope
test
pusha
xlat
std
or
insl
inc
cltd
xchg
cmp
inc
lea
fistpll
insl
mov
ss
stos
clc
fdivrs
aad
lcall
jmp
inc
int
sub
lret
and
push
out
cmp
rcl
movsl
mov
inc
insl
inc
in
cmp
dec
jmp
sbb
jecxz
inc
pusha
or
push
into
adc
rclb
in
int
inc
cmpsl
and
xchg
jne
ljmp
or
push
out
and
jo
lret
cmp
pop
ss
mov
inc
push
stos
ret
xlat
in
incb
or
xchg
or
jb
xor
mov
clc
mov
out
sti
mov
test
cli
out
jge
arpl
std
mov
pop
ret
jae
add
test
push
push
icebp
inc
pop
sarl
arpl
and
mov
nop
xchg
and
jg
or
pop
in
hlt
xchg
std
cwtl
mov
adc
inc
pop
sbb
push
lock
call
push
sub
fmuls
bound
les
xchg
jge
mov
jbe
sbb
in
push
adc
push
pop
mov
int3
xchg
imul
pop
addb
dec
out
mov
mov
jbe
mov
cmpb
push
pop
out
jo
xchg
sti
add
shr
dec
cli
test
hlt
xchg
mov
add
pop
scas
daa
inc
inc
push
int
dec
mov
daa
xchg
xor
jae
xchg
jb
lret
push
add
roll
popa
xchg
ja
or
dec
inc
out
cs
sub
xor
sub
lret
lret
mov
and
cmp
push
xor
fneni(8087
lock
xchg
ret
or
mov
dec
loop
dec
mov
jns
sahf
mov
cmp
lock
push
sbb
popf
idivb
jmp
inc
andl
or
hlt
popf
jecxz
mov
dec
and
mov
jne
stos
xchg
test
pop
js
cld
outsl
pop
fildll
sbb
mov
iret
add
push
or
adc
repnz
jmp
loopw
jnp
cmp
mov
jmp
mov
stos
loop
add
js
pop
cmp
cltd
add
addb
mov
dec
fistl
jmp
xchg
jnp
divb
mov
sbb
mov
sub
pop
ret
mov
mov
gs
xor
sbb
subb
push
cmp
inc
call
mov
andl
mov
cld
push
int3
icebp
jp
lret
vpmacsdd
jge
stos
cwtl
mov
dec
adc
fcompl
push
push
sti
adc
pop
push
add
add
ret
in
mov
push
inc
xchg
daa
pop
mov
ret
cmp
or
rcrb
push
cli
dec
movl
mov
call
sub
mov
mov
jmp
push
ret
insl
or
ds
cld
push
and
sbb
das
test
sbb
dec
in
arpl
scas
dec
cmp
inc
add
int
repz
mov
scas
pop
jnp
cli
xchg
or
jg
movsl
dec
fsubr
std
cmc
out
jbe
nop
cmp
xor
pushf
dec
test
sbb
inc
and
lcall
fistps
rolb
add
jge
adc
jmp
mov
lcall
insb
lret
jmp
xchg
jecxz
mov
add
mov
fsubr
mov
dec
iret
repz
xor
test
lea
or
imul
inc
jmp
es
mov
loopne
jne
xchg
addb
insl
cmc
or
sub
or
pop
sti
or
push
cmp
fcom
cmp
xchg
clc
add
cwtl
mov
lret
mov
leave
add
or
add
jp
add
mov
xor
and
and
rorb
xchg
add
cltd
les
xchg
mov
adc
mov
jl
hlt
in
std
stos
test
mov
lret
sti
adc
sbb
cmp
fdiv
mov
add
aad
clc
mov
movsl
dec
or
add
mov
lock
cwtl
movsl
mov
pop
dec
ljmp
and
jmp
mov
inc
mul
mov
mov
in
lock
outsb
mov
insl
push
repz
push
mov
into
or
and
rcrb
lea
leave
cli
jbe
xrelease
push
sbbb
lock
je
sub
lods
std
movsl
popa
call
sub
call
or
sbb
aam
lahf
xchg
mov
or
loope
lods
push
and
ret
adc
clc
or
call
xchg
je
or
fcoml
iret
fwait
lcall
dec
mov
sub
pop
addl
push
negb
mov
jns
pop
xor
scas
mov
push
data16
jmp
sbb
inc
lock
sub
sahf
xchg
stc
je
in
movsb
mov
insb
add
xor
adc
sub
adc
cmpsl
or
xchg
xchg
pop
popa
push
pop
cmp
lret
pop
xchg
movsb
movsl
mov
jmp
or
insb
addr16
cmp
push
and
sti
test
pop
int3
repnz
push
inc
sbb
das
push
mov
xchg
inc
call
xchg
pop
icebp
cmp
outsb
push
mov
jb
dec
mov
push
sbb
sbb
fsub
dec
and
mov
lret
popw
ds
inc
xor
dec
mov
movsl
cmpsl
and
push
ret
push
mov
cli
int
push
das
add
sub
lea
mov
addb
js
leave
inc
rcl
jae
push
in
in
inc
pop
mov
outsl
call
lods
imull
or
idivb
lcall
cltd
mov
push
or
adc
jmp
xchg
in
push
adc
aas
rolb
daa
fst
lds
stos
fimuls
rorb
jbe
popf
pop
adc
scas
adc
ss
jae
adc
arpl
jge
call
stos
dec
lods
int
jmp
stc
xlat
inc
dec
or
mov
add
lret
pusha
ret
pop
sub
outsl
sub
ret
repz
push
dec
movsl
push
mov
jo
fistpll
xchg
mov
cmpsl
ror
mov
jns
leave
fdivr
xchg
adc
push
pop
or
jb
in
in
jl
pop
xchg
rcl
dec
jg
sbb
push
push
iret
push
test
mov
mov
cmp
movsl
fstpl
int
dec
fildl
inc
pop
fdivp
stos
adcb
fdivrs
lcall
cmpsl
mov
addl
or
inc
sbb
daa
pop
fwait
in
inc
or
std
dec
push
add
pop
clc
or
addr16
cmp
mov
sub
xchg
loop
stos
shll
add
das
test
mov
bound
and
popf
xchg
adc
and
movsb
add
dec
or
sbb
loop
mov
push
mov
adc
ret
shll
sbbb
cwtl
adc
adcb
test
scas
push
or
fimuls
jg
sbb
mov
jne
clc
popf
jg
je
mov
lret
das
mov
adc
loopne
inc
mov
push
dec
test
les
mov
push
test
inc
jg
aad
lods
or
or
mov
repnz
cmpsl
jne
lods
or
push
pushf
mov
in
scas
loope
cmp
inc
jno
add
pop
jbe
mov
es
and
ljmp
xchg
pop
dec
xlat
pop
mov
addl
es
int3
inc
ja
mov
push
add
imulb
js
jmp
rorl
or
add
pop
or
jno
xchg
inc
inc
addb
mov
inc
cmova
orl
rorl
xor
sub
xchg
inc
add
arpl
or
imul
xchg
test
push
adc
decb
mov
dec
add
sbb
fdivr
push
adc
jle
inc
push
in
sbb
add
out
scas
pop
pop
jge
jno
push
fbstp
adc
jp
cs
shlb
call
mov
insb
clc
leave
pop
pop
fcoms
sbb
jno
fildll
and
xchg
les
cmpsl
or
dec
ret
jle
adc
ljmp
jbe
scas
js
add
loopne
test
test
enter
pop
push
aas
call
mov
ficomps
in
add
outsb
mov
lahf
fnsave
popf
sub
push
stos
ret
push
pop
cwtl
inc
jl
std
in
pop
mov
or
sub
cli
lea
shll
mov
and
push
shll
int
mov
cmp
icebp
xchg
jle
push
push
test
lret
push
pop
in
popf
loopne
scas
mov
fimuls
fisubrs
sub
add
sti
idivl
out
fdivrp
jle
cmp
cli
push
adc
push
adc
add
push
stos
adc
jmp
daa
pop
sub
cltd
ja
outsl
daa
xchg
cs
mov
pop
xor
cmp
cmp
mov
stos
test
jbe
pop
cmpsb
adc
ss
stc
dec
icebp
jmp
jle
stos
test
cwtl
or
fs
inc
enter
dec
jmp
int3
jns
out
test
fmull
jl
xor
xchg
push
into
clc
and
call
mov
mov
cld
inc
mov
shl
jmp
out
adc
popf
clc
pushf
push
loop
cmp
cld
mov
and
cmpsb
imul
lds
loop
adc
fmuls
mov
repz
frstor
dec
mov
cmp
push
mov
cli
call
dec
jmp
addb
or
mov
adc
pushf
imul
leave
add
cmp
inc
mull
pop
xor
xorb
jle
dec
sbb
inc
mov
stos
mov
xchg
or
mov
call
daa
les
imul
pop
popl
mov
pop
dec
adc
loopne
pop
in
orb
pop
or
mov
cmp
mov
fildll
ds
xchg
cmp
jmp
ds
loope
js
dec
sti
jge
out
or
in
push
test
je
jle
mov
notl
nop
xchg
mov
dec
inc
mov
mov
mov
add
xchg
cmc
and
mov
jecxz
inc
call
fincstp
sbb
or
movsb
pop
add
push
stc
add
add
jmp
je
ds
dec
andl
or
ljmp
jmp
push
addr16
mov
cltd
inc
int3
dec
pop
mov
cs
out
loopne
movsl
mov
add
xchg
sub
pop
mov
pop
jo
orb
cmpsb
mov
mov
mov
call
sub
dec
in
lret
dec
sub
mov
vmovhpd
movsl
xor
pushf
cli
orl
pop
insb
sub
adc
and
test
stc
cmpsb
xor
push
sbb
shrb
ss
xchg
nop
stos
mov
add
mov
or
insb
clc
sahf
cmp
or
xor
push
into
cld
xchg
in
outsb
mov
cmp
push
adc
xchg
or
mov
adc
shlb
push
roll
rcrb
adc
je
push
jecxz
mov
push
mov
std
es
call
fnstcw
call
sbb
xchg
inc
mov
jne
add
pop
lods
insb
sub
pop
mov
push
or
dec
hlt
dec
jno
jl
call
insl
xor
xchg
test
mov
jbe
mov
mov
pop
push
mov
iret
jmp
xchg
mov
pop
push
push
dec
shrl
hlt
das
jae
cmc
daa
adc
push
insb
push
dec
pop
xchg
out
cmp
cli
add
xor
dec
loope,pt
insl
test
and
leave
aaa
jl
out
jl
add
bound
int3
jmp
mov
je
inc
cmpsb
pushf
or
or
pop
xchg
push
mov
je
into
add
mov
push
loope
xor
adc
adc
jp
ret
xchg
fdivrp
mov
mov
xor
sub
or
cmp
xchg
dec
in
pop
or
mov
idiv
stos
xchg
loope
push
test
cmp
in
dec
movsb
inc
mov
pop
out
jnp
bound
roll
dec
xor
dec
mov
and
fidivl
or
shll
stc
inc
out
fwait
dec
mov
movzwl
pop
dec
add
mov
inc
cli
inc
mov
iret
shlb
adc
mov
sbb
xlat
dec
add
pop
xchg
inc
xor
aas
loope
jl
into
push
out
push
or
in
fnsave
movsb
lods
jb
dec
test
pop
jmp
lret
cld
xlat
pop
mov
xor
lods
push
add
push
lret
lahf
dec
data16
xlat
mov
add
add
xchg
lret
mov
faddl
ret
or
jmp
mov
or
and
icebp
shl
addr16
mov
push
popl
jb
jns
mov
loopne
xor
xorl
call
cmc
mov
jp
mov
into
aaa
scas
jb
add
leave
mov
imull
add
repz
mov
stc
test
xchg
jle
jg
or
mov
xchg
movsl
sbb
fdivrl
repnz
push
xor
mov
stc
mov
lret
mov
adc
add
outsb
push
pop
inc
push
lret
or
mov
inc
mov
aas
fbstp
sbb
rolb
or
jo
mov
lahf
pop
xchg
push
sub
xchg
sar
flds
add
mov
mov
and
notb
or
mov
jbe
sti
fs
les
sub
test
in
pop
fisubs
loop
xor
stc
inc
cmpsb
loopne
lods
pop
mov
mov
push
adc
stos
pop
sbb
sbb
pop
leave
cltd
mov
mov
insb
pop
ja
jmp
pop
mov
mov
push
into
loope
ljmp
sub
jg
sub
in
add
pop
int3
xchg
int3
xor
sti
stos
test
es
out
pop
ret
xchg
sbb
mov
xchg
scas
xlat
or
loope
and
shll
or
jl
jno
push
adc
or
mov
aaa
or
stc
pushf
sti
sbb
adc
mov
cmpsl
and
mov
mov
enter
lret
pop
lcall
dec
leave
pop
push
sbb
inc
inc
lods
jmp
mov
insb
pop
xchg
or
mov
jbe
mov
aam
mov
pusha
mov
push
xlat
shll
sbb
icebp
mov
push
pop
pop
sahf
cltd
int3
sbb
scas
xchg
pop
push
rcr
out
mov
inc
xor
fistps
cmp
mov
push
dec
pop
or
or
sti
insb
mov
ss
inc
sub
fdivp
mov
iret
mov
cltd
inc
pop
fstpt
loope
jmp
outsb
je
inc
xbegin
xchg
imul
mov
scas
test
cmp
lcall
mov
test
sub
in
and
idivb
sbb
dec
rolb
ss
and
iret
dec
jo
std
sub
jge
pop
adc
add
cltd
les
sub
mull
mov
and
push
je
or
jmp
lcall
jmp
mov
jns
add
fsubl
cmpsl
jno
adc
xchg
hlt
jmp
sbb
scas
icebp
js
jmp
stos
xchg
testb
clc
cmp
jp
jge
mov
or
jno
adcb
insb
mov
call
mov
sub
pop
vpaddusb
roll
int
or
add
jb
fcmovb
lods
or
aad
cmp
add
ss
sbb
sbb
sub
je
pop
mov
or
inc
xchg
inc
jbe
xor
push
dec
adc
inc
call
jb
loop
jg
push
adc
nop
mov
mov
cmpsb
jb
inc
imul
cwtl
mov
jbe
push
testb
cmp
mov
jno
pop
pushf
fwait
mov
iret
loopne
mov
aas
cli
sub
addr16
stc
mov
mov
shlb
fdivp
dec
sbbb
cli
add
pop
inc
sti
xor
out
hlt
js
lcall
ljmp
add
mov
loope
sbb
dec
jno
adc
or
lea
out
pop
jb
int3
mov
jno
ret
stc
xor
mov
lret
je
stos
out
aad
cmp
dec
inc
mov
jmp
daa
stc
aad
mov
inc
clc
mov
fisubrl
mov
enter
mov
lock
sbb
mov
test
pop
mov
call
jmp
xchg
mov
fistpll
scas
push
inc
stc
sub
stc
cmp
in
sbb
subb
cmp
es
xchg
fcoml
or
sbb
fcomp
jbe
add
lods
outsb
lds
or
dec
adcb
cmpb
push
cmpsb
dec
loopne
lock
mov
xor
cs
movd
sub
shlb
decl
lock
sbb
mov
and
sbb
mov
mov
loope
in
aas
cmpsl
and
adc
sbb
jnp
loopne
add
xchg
jecxz
into
sti
rol
popf
mov
pop
pushf
enter
pushw
test
sub
jbe
fldl
int
test
jg
sbb
mov
dec
rcrl
push
lock
inc
fildll
jb
add
je
push
inc
push
or
test
xor
add
adc
or
icebp
xor
cld
cwtl
xchg
xchg
inc
insl
mov
and
mov
dec
lcall
and
es
sub
push
mov
inc
jno
dec
mov
fadds
sub
je
nop
pop
pop
popf
mov
pop
mov
mov
call
shll
sub
paddusw
jb
jecxz
testb
xor
popf
adc
insl
lcall
jge
sub
xor
subl
xor
mov
inc
mov
cli
mov
mov
xor
adc
mov
xchg
in
dec
cmp
stc
xor
pop
sbb
aam
mov
pop
jo
popa
loopne
jno
jg
or
hlt
mov
mov
aam
mov
xchg
int3
dec
popf
fimull
cmp
push
in
ret
push
stos
push
or
gs
lds
shll
test
ja
xor
negl
lds
test
mov
leave
addr16
js
rolb
icebp
cwtl
fcoms
out
add
or
outsl
cli
dec
mov
adc
jl
add
pop
stos
add
cwtl
push
mov
push
test
data16
test
push
fisttpll
adcl
fwait
in
or
out
movsb
imul
fdivrp
mov
pop
jb
dec
jns
cltd
aaa
cmp
sbb
add
ja
jb
call
jg
sub
add
in
int
fmull
sar
cmp
jg
xchg
seta
das
xchg
ret
js
push
loope
mov
or
pop
pop
push
rorb
push
jl
xlat
shrb
lahf
inc
mov
mov
clc
in
pop
mov
xchg
nop
sub
fs
mov
push
or
dec
mov
lret
insl
ja
cli
stos
mov
push
hlt
addb
jb
in
add
loop
add
adc
test
and
lret
mov
or
mov
dec
add
inc
and
inc
mov
dec
loop
js
call
repz
pop
test
test
inc
pop
xor
stos
push
or
push
out
mov
lcall
push
inc
dec
or
mov
ret
sub
xchg
sti
pushl
push
sti
and
sarl
pop
int3
jecxz
add
push
cmpsl
lret
hlt
xor
test
lea
xor
inc
jmp
jl
imul
enter
imul
repnz
xor
fildll
ret
inc
xor
push
js
mov
sbb
int3
in
test
adc
clc
xchg
sahf
jmp
pop
push
loope
and
sub
enter
loope
sbb
push
pusha
mov
out
imul
jmp
cmp
jb
inc
pop
mov
incl
out
jno
xor
sbb
dec
pop
xor
int3
mov
das
lock
jg
add
and
ja
stos
mov
loop
in
aaa
ss
fbld
or
xor
cwtl
or
hlt
test
cs
mov
cld
lcall
loopne
rcll
testl
and
inc
nop
cli
adc
pop
dec
cmpb
jb
and
adc
test
cmc
jp
or
add
dec
inc
or
fsubrp
mov
call
mov
dec
fs
pop
dec
insl
lcall
inc
test
inc
add
jbe
jnp
or
xchg
cmpsl
cmp
push
mov
repnz
mov
shll
and
ds
data16
sbb
stc
and
jmp
gs
repz
addb
xlat
icebp
div
pusha
and
and
mov
les
inc
xlat
sbb
add
nop
adc
mov
scas
mov
mulb
mov
mov
das
or
incl
or
adc
add
sahf
stos
dec
sub
pusha
adc
pop
add
fs
das
fdivs
mov
xchg
sbbl
pop
loopne
sar
nop
mov
pop
movaps
push
fmul
and
popf
sub
or
jmp
mov
and
mov
lock
mov
xchg
mov
call
jg
ret
in
call
push
out
or
cmpsb
enter
or
das
not
xchg
jmp
aaa
or
jb
je
mov
push
call
mov
jg
xor
mov
jns
add
out
fildll
out
xor
movsb
mov
lahf
dec
or
cwtl
mov
fnstcw
scas
and
jns
add
loop
cmp
jmp
adc
fs
xchg
rorl
mov
mov
push
shrl
adc
push
xchg
or
jb
movsl
add
pop
popw
xchg
lahf
cld
push
or
xlat
jns
mov
mov
xchg
and
jmp
jns
sub
or
add
pop
decb
adc
push
and
js
repnz
mov
jmp
repnz
in
jne
cmp
and
sub
mov
call
ljmp
lcall
mov
cld
fildll
scas
sub
lahf
fstpl
dec
dec
sbb
jecxz
xor
rcll
mov
hlt
cmp
pop
jmp
and
gs
pop
sub
mov
push
mov
pop
cmp
std
mov
ds
clc
or
repz
loope
add
popa
jle
or
sub
xor
loope
lods
dec
or
pusha
inc
idivl
sbb
mov
popa
test
and
push
stos
cld
fs
jecxz
xor
pop
testb
mov
sar
test
jae
scas
and
inc
sbb
int3
pop
inc
test
jae
xor
xchg
jmp
fisttpll
shlb
rorb
xchg
mov
xor
dec
daa
or
mov
mov
cs
dec
std
test
sub
and
add
xlat
or
jmp
and
or
mov
xchg
xchg
pop
pop
dec
add
mov
ss
xchg
mov
les
in
xor
loope
sub
mov
iret
cmpsw
jle
cmp
test
or
sbb
mov
repnz
cmc
out
lcall
jb
je
fdivrl
icebp
push
sub
push
mov
and
mov
sti
jle
pop
sbb
xchg
push
jbe
or
imul
insl
jae
push
popa
mov
fidivrs
xor
ljmp
adcl
inc
xchg
je
mov
rcrl
cmp
stc
sbb
sub
dec
sar
pop
add
adc
push
mov
pop
inc
pop
xor
mov
es
into
enter
or
mov
jb
adc
dec
jb
cmpsl
stc
xor
mov
sbb
push
aaa
or
inc
jmp
jmp
sbb
clc
and
sub
mov
incl
sub
mov
push
push
jmp
test
mov
inc
icebp
sahf
loop
jns
cwtl
test
pop
enter
jne
add
add
ja
es
xchg
lret
jb
call
mov
pop
push
sbb
add
stc
jns
call
add
and
leave
inc
inc
fstpt
out
aam
fisttps
mov
ja
sbb
stos
xchg
cld
push
pop
dec
push
jno
ret
xchg
pop
adc
jb
dec
jg
and
loope
cmp
js
pop
cs
sub
jmp
jmp
adc
ds
in
lds
inc
mov
adc
nop
outsb
dec
and
dec
stos
popa
shlb
cmp
jo
fisubrs
pop
pop
ljmp
in
or
pop
sub
popa
cmp
jmp
movsb
or
leave
pop
adc
dec
jb
xlat
push
int
cmovb
pop
movsl
mov
adc
roll
daa
iret
pop
adcb
jb
jns
inc
sahf
sub
push
xchg
jbe
xchg
adc
std
fs
in
jb
arpl
notl
xor
xlat
xchg
xchg
call
jge
push
xor
out
lahf
xchg
jmp
fstl
mov
push
clc
jno
ja
ja
roll
bnd
mov
test
aam
jge
pop
jne
dec
loop
mov
mov
mov
mov
inc
sahf
dec
icebp
mov
jp
cmpsb
dec
pop
lock
subb
fdivr
popf
or
ja
mov
lcall
cmp
mov
xor
and
and
hlt
push
push
out
jno
cmpsl
enter
enter
loop
imul
jne
pop
bound
out
adc
jmp
sti
pop
xor
dec
sarb
dec
dec
or
or
loop
mov
testl
rcr
lret
test
mov
pop
adc
out
sbb
or
xor
jmp
cld
mov
and
push
dec
test
jmp
mov
int3
shrl
dec
lahf
lahf
or
jno
je
lods
inc
cwtl
cmp
cs
or
dec
aam
jno
cltd
add
ss
ss
mov
add
in
mov
adcb
adc
dec
add
daa
push
xor
jnp
ficoml
sub
sti
loop
imul
dec
mov
fsts
add
enter
jb
ds
aad
inc
loope
inc
push
in
jl
inc
stos
adc
lret
das
fidivl
and
xchg
push
jle
add
aad
lret
add
push
xchg
rcll
push
mov
dec
xor
or
cwtl
add
lahf
popa
jle
mov
sbb
hlt
je
insb
dec
and
rorb
or
lods
push
leave
fsubrs
aam
or
xor
orl
mov
lcall
add
inc
push
sbb
pop
dec
loop
and
jae
lock
mov
add
jge
das
dec
add
push
or
in
hlt
fs
fildl
std
sbb
mov
mov
pop
cmp
imul
or
jp
pop
ret
or
ficompl
push
mov
shlb
popf
dec
adc
cmpsl
dec
and
pop
mov
scas
mov
call
add
jbe
mov
test
test
pushf
clc
cmp
xlat
bound
or
out
setnp
jmp
xor
flds
shr
dec
and
call
aas
jo
test
fmuls
cmp
test
ljmp
sbbl
add
sarb
cmc
stos
les
dec
call
cli
sub
push
xchg
insb
sbb
mov
jmp
dec
xor
call
js
pop
mov
push
add
push
shrl
sahf
push
out
stc
les
xlat
lcall
push
xlat
inc
lds
out
push
call
mov
cmc
pop
ret
mov
test
neg
arpl
shr
lret
mov
or
add
mov
inc
incl
lahf
push
inc
sub
xor
loop
scas
push
and
insb
xlat
cmp
addr16
xor
in
roll
sub
pop
jmp
sarl
pop
xorl
mov
shlb
pop
call
xlat
loop
icebp
and
mov
les
xchg
or
mov
lock
mov
xor
call
pop
daa
test
push
inc
int3
cmc
pop
mov
je
dec
and
cmc
mov
stc
push
ljmp
subb
outsb
inc
ljmp
push
and
call
inc
out
push
jnp
lret
mov
test
push
pop
nop
int
enter
jmp
xchg
cmpsl
loope
lods
jge
sub
jae
mov
mov
cld
call
mov
cmc
call
xchg
loope
pop
push
ja
cmpl
fs
push
ret
and
jns
adc
mov
push
jmp
and
mov
std
in
insb
mov
dec
push
mov
xor
push
dec
xorb
pop
jne
xchg
jg
xor
mov
fstps
push
pop
into
lock
push
fimuls
and
pusha
or
mov
jnp
pop
push
fchs
sqrtps
mov
es
jl
dec
xchg
xchg
clc
adcl
fucomi
pusha
out
mov
push
cmpsb
insl
cmp
lods
call
mov
test
and
ret
pop
int
push
in
add
sahf
lcall
insb
daa
outsb
pop
jp
dec
sar
imul
data16
lahf
pusha
movsl
cli
iret
xchg
jo
je
inc
jmp
fs
jne
or
pushf
sbb
inc
sbb
or
loop
xor
jge
mov
pop
push
mov
test
cmpsl
mov
lret
pop
call
jmp
das
stos
jecxz
mov
mov
mov
out
loopne
push
mov
inc
xor
push
mov
sub
stc
mov
fsubl
jno
call
lahf
ret
fstl
jnp
mov
mov
push
std
sbb
movsb
sbbl
insb
or
add
xchg
jle
sahf
jbe
add
add
mov
mov
xchg
stos
push
jp
inc
sub
das
jmp
jg
lds
out
sub
cwtl
pop
rcr
sbb
sahf
lret
inc
lahf
and
add
jb
sti
shl
cmpsb
nop
pop
loopne
and
push
sti
push
cmp
xchg
fs
push
and
jp
xchg
movsb
and
dec
add
dec
mov
push
mov
adc
pop
call
pop
dec
leave
xchg
xchg
pop
cld
insb
dec
mov
push
cld
sub
cmp
in
cmc
sub
iret
and
lahf
ja
out
adc
std
cmpsl
insl
int3
cmpsl
sbb
fcomi
into
je
in
mov
sbb
icebp
sti
mov
mov
call
stos
test
cmp
jecxz
pop
pop
ljmp
pushf
push
add
xor
or
enter
or
sub
js
sbb
test
fwait
add
push
sub
inc
or
pop
sbb
push
mov
jmp
lahf
inc
adc
pop
jp
xor
clc
jo
jo
adc
loop
lds
mov
inc
adc
push
pop
cwtl
sbb
mov
add
popa
inc
fstpl
pop
bnd
sub
and
xchg
incl
imul
addb
xchg
inc
ja
or
sub
or
outsl
loope
fcompl
sbb
fists
pushf
dec
adcb
or
movzbl
pusha
xor
mov
push
sub
call
push
cmp
push
call
pop
mov
add
mov
out
and
rorl
cmp
std
and
inc
lret
repz
mov
sti
ljmp
jle
push
call
add
aam
nop
imul
enter
pop
xchg
js
jge
add
test
std
fiadds
lcall
adc
push
pusha
adc
std
and
sub
int3
fidivrs
and
mov
inc
out
mov
jl
scas
sbbb
xchg
loopne
call
sbb
cmp
or
mov
cmp
fsubl
cmp
jb
mov
idiv
sub
lds
mov
jmp
rclb
sub
cmp
pop
and
enter
mov
cmp
cmp
mov
lret
inc
incb
in
inc
cli
cmp
and
xchg
mov
adc
push
add
enter
add
lods
mov
mov
add
lea
daa
notb
int3
inc
js
out
cmp
int
sbb
or
sar
mov
and
xor
ljmp
sbb
sbb
fisubrs
icebp
lret
lods
cmp
xchg
sti
fmull
add
sub
sbb
enter
sub
cmp
aam
das
in
rol
cmpsb
or
movntq
or
icebp
lcall
mov
push
inc
clc
and
movsl
arpl
or
dec
or
cmp
sbb
out
call
neg
push
push
add
mov
mov
movsl
movsl
clc
jle
ds
cmpsl
xor
call
inc
les
fisubrl
dec
push
out
repz
mov
jo
test
or
fisttpll
bound
push
dec
add
xor
aas
daa
jne
mov
mov
adc
icebp
rorl
sbb
call
jns
test
xchg
adc
and
mov
mov
mov
add
jg
sub
cld
jae
pusha
sbb
xchg
hlt
cmp
daa
cmp
push
stos
test
nop
sti
insl
inc
scas
cs
inc
jo
loope
sub
cmp
ljmp
dec
or
call
ljmp
adcl
imull
and
push
dec
mov
adc
xorb
mov
fnstcw
adc
cmp
sub
mov
pop
aaa
pushf
call
cmp
xchg
dec
cli
repnz
mov
imul
mov
mov
add
cmp
shrl
mov
cli
xchg
stos
xor
adc
inc
out
mov
push
int3
test
roll
cld
cwtl
push
cmp
cwtl
repnz
popl
notl
xchg
pop
adc
fsubs
arpl
fcomps
sbb
repnz
hlt
pushf
lods
loop
add
es
rclb
add
mov
push
pop
or
shll
in
sub
rolb
mov
mov
xchg
fidivrs
ja
mov
or
stos
push
out
sub
xlat
pop
mov
pop
orb
inc
dec
das
sbbl
int3
or
inc
push
push
cmp
das
sbb
pop
and
lods
loopne
das
push
push
xor
dec
cld
jp
mull
and
mov
loope
jp
jae
hlt
fwait
ret
ljmp
inc
or
shl
lret
fucomi
dec
or
adc
lcall
fdivrs
or
ret
jp
inc
movsl
pop
testl
lahf
sbbl
mov
imul
leave
inc
jnp
or
aad
dec
cwtl
inc
pop
mov
ret
or
call
sub
loope
jno
and
inc
out
rcll
dec
lahf
xchg
mov
fmuls
cmp
sbb
jmp
int3
push
xchg
pop
adc
rclb
xchg
fs
sbb
and
popa
inc
mov
jb
cmp
jns
into
add
jo
dec
clc
mov
in
outsl
push
leave
mov
add
repnz
cmp
scas
add
leave
xchg
ljmp
aas
popf
movsl
adc
shrl
xor
cmp
arpl
inc
sti
inc
test
insl
andb
jne
pop
sahf
add
ljmp
jecxz
xchg
fwait
cmp
and
out
mov
cmp
fsubrl
sti
cmp
or
cwtl
out
bound
jbe
scas
push
push
stc
inc
mov
push
call
adc
cmc
adc
mov
mov
inc
push
pop
roll
push
int
stos
xlat
add
ljmp
cmp
rolb
out
xor
lods
and
xchg
add
and
mov
pop
mov
inc
shrb
dec
or
call
xchg
pop
jnp
adc
push
dec
mov
push
cmc
pop
popa
pop
push
inc
sub
int
pop
fdivl
mov
cmpsl
and
and
jmp
insb
xor
or
ljmp
or
mov
fisttpll
mov
adc
xor
enter
rcrb
cs
rorb
mov
stc
dec
xor
aad
js
arpl
mov
jbe
pmulhuw
push
add
sbb
sub
sbb
adc
test
adc
adc
or
loope
sub
mov
add
test
cmp
push
dec
or
outsb
dec
mull
or
int3
dec
sub
push
movsl
mov
loop
sub
mov
pop
lcall
mov
sti
orb
popf
push
jmp
je
decl
xor
jmp
add
pop
sub
mov
jle
push
add
jecxz
loop
sub
mov
lds
xchg
adc
jmp
cmp
and
add
cwtl
cmp
xor
es
lgs
xor
inc
pop
mov
orl
cmp
mov
xchg
sbb
aam
nop
popf
push
or
cmc
bound
cmpsl
shr
ja
cs
and
or
inc
imulb
leave
xor
ds
out
repnz
sti
ss
and
add
ljmp
clc
lcall
call
add
pop
pop
imulb
push
mov
hlt
push
mov
add
jbe
push
inc
push
mov
inc
clc
adc
in
pop
loopw
js
mov
orl
jae
sar
xchg
ret
dec
insb
jge
adc
jl
leave
and
dec
dec
push
mov
lret
mov
inc
cmc
mov
std
flds
shr
out
dec
scas
out
push
ret
repnz
test
sbb
pop
nop
inc
shr
push
xor
jne
push
push
mov
add
jo
enter
outsb
lods
mov
mov
push
and
or
xchg
inc
xchg
inc
repnz
dec
xor
add
fsubrl
push
les
or
pop
arpl
mov
cltd
insb
imul
jmp
push
push
jg
pop
add
cmpsb
ljmp
std
movb
sahf
xor
es
jmp
push
sti
repnz
popf
int3
ja
jecxz
inc
repz
xor
pop
outsb
sarl
mov
addl
xorl
cmpsb
mov
nop
shl
popf
inc
test
stc
das
xchg
inc
mov
leave
xchg
cmp
data16
fbstp
cmpsb
jno
leave
dec
pop
inc
jmp
sub
mov
push
jb
dec
xchg
mov
lock
mov
mov
add
inc
xchg
aas
loope
cmpsb
inc
mov
or
sbb
pop
mov
jle
mov
fsubrl
test
mov
add
sub
repz
mov
mov
push
sub
xor
hlt
sbb
bound
stc
and
ljmp
sub
fildll
or
mov
outsb
mov
test
push
into
call
mov
xchg
stos
add
mov
cmpsb
and
clc
mov
fs
and
inc
xchg
stos
cmp
mov
adcb
push
inc
dec
mov
data16
cwtl
sbb
push
push
fwait
or
xchg
in
add
daa
idiv
loop
dec
mov
stos
mov
out
dec
rorl
sbb
dec
lock
js
add
repnz
cs
pop
add
pop
xchg
xchg
insb
push
leave
xchg
cmp
ficompl
into
and
pop
pop
push
call
daa
test
into
imul
xor
adc
aad
dec
pop
out
xor
rcr
imul
cmpsb
push
cmp
mov
dec
mov
jb
adc
pop
and
jl
mov
mov
call
xlat
popa
sbb
mov
jno
adc
stc
popf
sbb
pusha
or
sbb
inc
inc
mov
ja
ljmp
inc
adc
jmp
or
outsb
std
pop
divb
sbb
xchg
add
int3
mov
add
and
dec
inc
enter
and
fistps
add
mov
fs
push
gs
inc
inc
mov
mov
or
or
test
mov
daa
xor
jmp
out
sub
sete
dec
and
popf
jns
push
pop
cmp
adc
mov
and
addl
fwait
out
push
push
sub
sbb
subb
xlat
dec
rorb
call
stc
mov
sbb
call
ret
jmp
stos
out
cmp
fistps
push
inc
ja
ja
loope
mov
mov
inc
pop
mov
lret
jo
sub
push
addb
adc
aam
cmpsl
cmp
push
mov
jno
push
call
xor
sahf
mov
xor
push
cmp
jmp
leave
mov
or
or
and
cmpsl
pop
test
out
test
repnz
and
mov
lret
jmp
sub
push
xor
adc
adcl
decb
test
repnz
xorb
mov
lcall
dec
pop
fdivl
mov
jne
pop
sbb
push
push
xchg
lea
mov
movsb
movsb
out
push
or
aad
xlat
ret
mov
pop
ja
ljmp
test
shl
mov
jmp
or
push
fdivl
lcall
loop
and
fbld
test
mov
dec
in
rclb
xor
adc
in
mov
cwtl
rol
dec
adc
mov
xor
xchg
dec
sub
sbb
adc
mov
mov
mov
jnp
movsl
inc
data16
push
sbb
inc
jnp
push
adc
jo
mov
mov
es
mov
cmp
sub
or
pusha
fldl
movsb
dec
std
cmp
out
pop
fwait
into
adc
movsl
inc
adc
outsb
adc
idivb
xchg
jg
insl
mov
gs
xor
cmpb
dec
adc
mov
lods
std
push
mov
lock
pop
mov
scas
sahf
repz
out
cwtl
xchg
dec
jb
xor
inc
mov
sbb
mov
test
sbbb
sub
adc
outsl
sub
push
ljmp
mov
dec
lods
jno
adc
sub
add
adc
inc
aaa
sbbb
scas
aad
jmp
cltd
jne
jp
xlat
or
push
pop
mov
xor
mov
adc
icebp
add
popf
mov
push
inc
sub
inc
jle
adc
add
das
or
jbe
inc
sbb
nop
out
fldt
cmp
bnd
outsb
xor
shrd
cmpsl
adc
lock
dec
mov
mov
mov
and
cwtl
into
mov
cmpsb
adc
mov
dec
mul
fsubrl
mov
fdivl
or
in
inc
add
add
pop
xor
add
pop
mov
cld
call
mov
mov
pop
inc
test
ds
push
clc
fisubs
test
mov
dec
rcl
jo
sbb
mov
icebp
and
outsb
aam
fcomp
in
das
aaa
adc
frstor
push
fwait
xlat
sub
xorl
mov
push
stc
and
das
pop
add
push
stos
hlt
inc
inc
sbb
and
mov
or
scas
inc
subb
sbb
jge
jae
push
cmp
fistl
push
jmp
dec
push
sbbb
push
das
pop
repz
outsl
dec
addb
jb
inc
add
movsb
push
aad
adc
push
adc
mov
sbb
mov
das
sbb
mov
dec
pop
adc
dec
daa
pop
add
mov
nop
lea
inc
push
dec
sbb
and
jl
xor
shlb
cli
xchg
lcall
adc
jge
test
xchg
cmpsl
fldenv
add
mov
pushf
pop
or
xor
xlat
add
call
add
neg
mov
sti
push
rcrb
jmp
cmpsb
movsb
fisubrs
lods
aam
mov
sub
sbb
cmp
adc
mov
jne
add
into
sahf
sub
mov
daa
repz
mov
xchg
pop
outsb
add
adc
mov
add
push
lock
subb
mov
and
inc
mov
ja
xchg
jl
mov
out
add
xor
sub
dec
xchg
int
cwtl
lock
pop
or
fnstenv
jmp
enter
lock
and
jo
stos
jge
and
in
jns
ret
adc
pop
fnstcw
push
add
icebp
int
std
cmp
jge
cli
push
iret
push
add
gs
pushf
test
call
jae
insl
sarb
fildll
shll
sbb
push
jmp
mov
and
sbb
mov
mov
dec
lods
js
jo
jo
cli
xchg
push
jo
insb
int3
ss
mov
out
testb
int3
xchg
mov
jae
rcrb
inc
push
cli
xor
jno
push
push
ss
stc
mov
push
pop
or
or
dec
adc
cmp
ss
push
fcmovb
jmp
js
mov
or
out
mov
pop
mov
and
jecxz
scas
dec
fstpt
ret
mov
cmc
test
and
dec
sar
jo
cmpsl
add
scas
int3
cmp
mov
mov
stc
dec
lahf
and
adc
pop
xchg
and
mov
add
pop
iret
inc
xchg
cwtl
mov
icebp
push
pop
xor
push
das
cmpsl
jp
dec
in
cmpsl
and
jmp
daa
jmp
les
pop
orb
mov
sub
add
test
add
dec
xchg
ret
or
push
add
pop
push
inc
xchg
clc
mov
nop
inc
mov
lret
xchg
xchg
mov
xor
sbb
mov
sub
stos
or
pop
cmpsb
mov
dec
xor
and
mov
enter
fsts
inc
push
cmp
cli
bound
aas
adc
or
jmp
or
bound
popf
rcrl
jnp
xor
sub
into
adcb
popf
in
and
dec
je
fdivl
jnp
xchg
insb
adc
mov
je
pusha
mov
push
mov
jge
lret
sub
imul
imul
inc
imul
adc
adc
or
jnp
loopne
xchg
stc
dec
das
incb
mov
or
cmp
das
rcr
mov
cmc
push
mov
sbb
add
les
and
int
sbb
xor
xchg
fs
lods
cli
adc
mov
lret
imul
xchg
repnz
mov
cmp
inc
loop
mov
inc
push
aam
jp
lcall
jo
pop
mov
addb
pop
mov
jbe
das
stos
cmp
movl
or
adc
ror
nop
and
ud2
aas
mov
adc
pop
push
and
pop
sub
jle
and
call
sahf
repz
pop
xorl
xchg
das
push
inc
int3
dec
push
xor
pusha
call
aaa
jo
mov
or
enter
rclb
pop
mov
insb
pop
fisubrl
mov
fidivs
call
iret
andb
jecxz
das
inc
int3
inc
lahf
shll
out
aas
stos
ret
mov
and
sbb
xchg
sub
add
jge
push
push
movsl
jg
sub
xor
rcrl
or
adc
shl
sub
lods
push
imul
jmp
inc
push
mov
fidivl
mov
cmp
jg
cltd
mov
mov
call
and
push
outsl
loopne
mov
das
jge
mov
shll
jns
mov
pop
xor
nop
adc
nopl
ja
sahf
dec
in
out
arpl
add
stc
jmp
icebp
and
xchg
or
xorl
push
xor
xor
faddl
push
int
and
mov
inc
xlat
mov
les
or
sbb
and
add
and
add
push
fldt
xor
daa
xchg
pop
mov
dec
hlt
js
das
cli
xchg
jl
xor
imul
fsubrl
jns
sub
in
mov
lcall
adc
das
xor
into
cmpsl
adc
xlat
lahf
es
sub
xor
jmp
lds
loop
cmp
scas
adcb
cli
sub
jmp
insl
inc
loop
sub
jmp
mov
xor
adcb
adc
ret
enter
fiaddl
leave
and
notb
inc
ret
adc
inc
jb
outsb
mov
or
or
jl
scas
stc
and
jecxz
mov
xchg
mov
and
aad
fldcw
jo
mov
rolb
jae
jge
aad
mov
mov
stos
dec
sbb
or
xchg
mov
mov
scas
shr
sub
mov
loop
mov
inc
addr16
shll
hlt
in
jno
mov
and
add
shl
lock
fmuls
stos
cmp
call
nop
scas
pushf
pop
mov
jnp
test
rcrb
mov
rorl
rolb
cld
sbb
or
pop
fmul
pop
dec
dec
inc
dec
mov
inc
sarl
or
and
jmp
pushf
push
orb
push
popf
fstps
or
push
fists
add
es
jmp
call
dec
in
enter
in
sub
mov
cmpsl
jo
push
mov
dec
rcl
xchg
inc
int
addr16
fsubs
jno
sarb
clc
lcall
pop
mov
sbb
add
es
mov
mov
sahf
inc
in
sub
or
sbb
lea
push
push
push
push
stos
mov
test
push
shll
mov
mov
fwait
push
sbb
pop
push
fwait
or
push
sbb
mov
pop
pusha
jbe
jae
lahf
call
call
movsb
inc
cltd
and
lcall
movsl
test
push
mov
pop
loop
fiadds
stos
cmp
fld1
lock
sbb
mov
pop
inc
nop
insl
cvtps2pd
cwtl
cli
les
push
sbb
daa
push
in
or
xor
test
xchg
fsts
jo
inc
xor
rorl
test
stos
mov
cmp
xchg
push
mov
jnp
outsl
inc
xor
call
xchg
push
add
cmp
or
or
loope
xchg
mov
test
cwtl
push
in
daa
mov
jp
lret
inc
lcall
xlat
das
add
inc
or
pop
mov
lock
call
imul
popl
js
icebp
mov
shr
fsin
jge
iret
dec
cmc
jge
imul
jp
and
mov
cli
imul
fs
addr16
popf
or
inc
pop
pop
mov
leave
push
jne
fbstp
movsl
push
ja
repz
mov
idivb
push
lods
cld
sbb
push
sub
stos
xchg
inc
cli
popf
push
adc
dec
push
fsub
nop
mov
dec
xor
dec
out
js
push
adc
movsb
cmp
jns
dec
jge
aam
jecxz
outsb
mov
rcrb
push
jmp
push
sub
inc
call
mov
push
rorb
bound
push
xor
sbb
in
xchg
and
scas
lcall
in
xlat
in
bound
dec
add
mov
dec
lds
adc
dec
push
inc
jp
sarb
push
jno
mov
pop
std
jecxz
sbb
sbb
pushf
xchg
mov
divb
add
mov
push
mov
mov
jecxz
cmpsb
cmp
adc
xchg
imul
jl
add
add
hlt
push
lods
dec
push
sahf
test
or
inc
pop
jmp
inc
pop
test
cmc
ss
adc
mov
add
mov
adc
mov
fmull
sbb
dec
dec
movsb
adc
insb
and
pop
ljmp
jp
je
loopne
or
cmp
addr16
xor
xor
call
sub
mov
dec
mov
ret
sbb
imul
dec
adc
cwtl
fcmovb
imul
dec
bound
arpl
jecxz
outsb
mov
fbstp
fcompl
lea
pop
pavgw
enter
repnz
jbe
mov
lahf
inc
mov
add
cmp
ret
mov
dec
ret
xor
imul
lcall
in
pop
lods
pop
add
mov
lret
mov
popa
mov
ret
rolb
inc
sub
dec
test
add
cmp
dec
xchg
lcall
imul
sbb
sbb
movsb
mov
inc
mov
test
jno
jo
mov
icebp
shl
push
aam
int3
xchg
add
stos
adc
xor
aaa
jo
add
outsl
pop
mov
pop
ret
mov
xor
jnp
sbb
pushf
popa
das
mov
lret
orb
mov
inc
test
pop
push
mov
jg
call
aas
mov
inc
inc
cmp
mov
cs
mov
data16
mov
sti
cmp
sbb
icebp
rolb
push
call
loop
jmp
rclb
pop
insb
int3
mov
lods
cli
inc
inc
or
dec
les
loopne
outsl
pop
pop
jmp
push
addr16
fstps
pushf
add
jb
inc
inc
fldl
sbb
inc
inc
cmpsl
cmp
jmp
shlb
ja
and
pop
call
xchg
shrl
push
outsb
out
stos
inc
inc
adc
mov
daa
mov
mov
fbstp
jmp
gs
cmp
dec
and
pusha
rorl
cmp
sbb
insb
pop
jmp
test
mov
xor
mov
orb
hlt
jae
adc
pop
jge
enter
orl
pop
mov
jmp
mov
das
xor
jno
xchg
adc
fnstcw
xlat
ret
call
stos
ret
call
push
xchg
je
repnz
rcrb
dec
inc
dec
xchg
xor
mov
lds
push
xchg
sub
inc
popf
jbe
imul
jnp
mov
push
sbb
inc
push
xchg
cmp
push
rol
dec
aam
jmp
dec
and
lds
push
inc
sub
cmp
das
xor
dec
sub
or
xor
mov
movsb
push
shr
hlt
push
lret
xor
lcall
je
leave
ffree
mov
mov
pop
mov
adc
cmp
jecxz
dec
out
xor
mov
mov
addr16
std
add
fwait
mov
sub
jmp
inc
repz
pop
inc
data16
fadds
cmp
mov
mov
insb
sbb
je
mov
ret
out
push
add
js
das
std
mov
dec
cmpb
mov
sbb
mov
test
push
sbb
repz
lret
rorl
inc
add
aam
mov
aas
push
adc
shrl
adcb
cmp
pusha
push
shrb
jmp
lcall
mov
cmp
xchg
mov
lahf
shlb
xor
stc
add
jg
icebp
ss
mov
addr16
push
sub
repnz
jge
cld
mov
xchg
ljmp
pop
rolb
pop
leave
daa
into
pop
jle
js
ja
lea
pop
jns
sbb
mov
imul
call
jmp
pop
lock
mov
mov
cmp
lahf
mov
sbb
push
or
inc
push
sub
push
add
aam
ljmp
adc
and
clc
mov
subb
pop
xchg
xchg
mov
arpl
loop
cmp
push
sub
addr16
push
sbbl
fisubrs
out
shr
daa
pop
pop
push
xchg
ficoms
adc
ss
pop
adcb
daa
xor
fcomps
jecxz
add
loop
lret
mov
repz
dec
mov
add
ss
mov
add
nop
ljmp
les
sbb
dec
mov
xchg
adc
xchg
and
xchg
lcall
std
and
mov
or
sbb
pop
sub
adc
lods
fisttps
in
dec
add
adc
neg
pop
mov
rorl
push
add
or
in
out
xchg
xchg
mov
push
shr
imul
cmc
mov
cltd
test
fidivs
pop
jae
daa
mov
scas
add
test
mov
imul
pop
lea
mov
cmpsl
sbb
roll
push
push
push
jo
push
cwtl
mov
pop
xchg
outsb
cmp
or
xor
movsl
and
xchg
stc
cmp
mov
dec
pop
in
inc
les
sti
int3
jecxz
enter
mov
push
fisubl
pusha
dec
and
les
outsb
pop
sbbb
push
ljmp
ja
jae
ss
leave
mov
insl
sub
cmpsb
icebp
ror
call
xor
sub
movb
mov
outsl
mov
lret
mov
jne
popf
call
inc
adc
outsl
pop
sbb
jl
mov
aas
cld
test
mov
add
pop
add
fwait
aam
popa
or
fiadds
adc
mov
rclb
stc
fcoml
mov
repnz
vpsadbw
mov
xor
pop
testb
mov
pop
leave
mov
lds
dec
cs
insb
imull
push
outsl
sahf
dec
stos
enter
push
repnz
mov
pop
add
call
nop
push
movsb
scas
adc
or
jmp
fwait
dec
mov
xor
pushf
dec
in
mov
push
sar
push
ss
les
fsts
sub
and
imul
xor
push
repnz
pop
sub
add
add
idiv
sub
aad
shll
pop
jle
sarl
inc
mov
insb
das
fimuls
dec
out
lock
in
xchg
jle
xchg
jnp
scas
inc
je
push
xchg
out
orl
ret
inc
or
adc
jnp
sub
and
inc
jbe
mov
or
cli
push
inc
pop
cmp
sub
or
jp
pop
dec
leave
in
push
repz
inc
loopne
data16
jg
lret
loope
mov
decl
loopne
xor
or
sbb
sub
push
or
mov
cld
xchg
sti
inc
push
mov
in
dec
decb
dec
mov
ljmp
lds
sub
fs
or
sub
call
scas
xchg
lods
jp
xchg
xchg
mov
xor
jno
pop
scas
clc
icebp
xlat
inc
cmp
push
jo
mov
outsb
out
inc
jecxz
jle
sbb
and
xchg
xchg
stos
icebp
inc
call
and
enter
push
lods
jecxz
sbb
ljmp
fadd
cmc
cli
test
inc
inc
add
in
push
jbe
loopne
pusha
mov
pop
jns
movsl
call
clc
movsb
sub
loop
adcb
lcall
adc
stos
data16
adc
inc
wbinvd
sar
push
dec
leave
popf
push
dec
stc
push
lcall
loop
divb
sub
cmpb
ss
ror
fcoms
lahf
fldl
lock
clc
jmp
ficomps
mov
call
jae
pop
dec
mov
cmpsl
test
mov
and
sbb
mov
nop
divb
xor
mov
push
loop
enter
cmp
mov
dec
jb
pop
call
mov
sti
dec
aas
or
inc
das
ret
ret
out
jmp
int3
or
add
cmpsw
sub
int
mov
mov
jno
in
loopne
mov
xchg
fwait
scas
push
inc
loop
mov
and
imul
inc
pop
int3
adc
pop
mov
ret
cs
pop
adc
add
adcb
jne
pop
jecxz
imul
test
jno
stc
and
jbe
pop
jmp
ja
push
mov
xor
sub
test
int3
sbbb
mov
sub
lahf
cmp
xchg
pushf
stos
stos
das
outsl
bound
push
cmp
add
insb
mov
jl
in
jbe
mov
mov
jo
rclb
js
ljmp
insb
ljmp
iret
mov
ficompl
rolb
jns
ret
cltd
ljmp
push
push
dec
fucomp
jbe
push
add
addb
pop
jg
sbb
add
add
cmpsl
clc
lods
jno
outsb
sti
ja
dec
mov
cs
or
insb
adc
ret
adc
mov
pushf
and
jne
adc
sub
push
call
fisubl
jg
pop
push
mov
dec
dec
push
and
mov
les
test
mov
test
jge
test
jl
in
jge
fs
dec
dec
jbe
fwait
out
mov
rol
and
mov
push
cmp
jns
int
jo
stc
pusha
jae
sbb
sub
push
jge
jno
ret
movsl
adc
ret
jae
fidivrl
dec
jns
in
or
push
call
ja
xchg
int3
and
pop
jb
pop
sti
cmp
in
jnp
lea
mov
xchg
push
and
test
iret
sti
movsb
xchg
movsl
adc
mov
jmp
sahf
add
inc
mov
jb
add
cwtl
es
mov
fbstp
imul
inc
pop
jmp
mov
int
mov
pop
pushf
test
sub
inc
cld
mov
out
lret
mov
jb
xorb
adc
into
mov
fcmovnbe
icebp
fcompp
es
mov
and
ret
dec
jmp
jmp
daa
enter
push
xchg
xor
aad
fildl
pusha
adc
in
clc
lahf
loop
xchg
mov
es
mov
mov
bound
cmpsl
ud0
insb
cmp
mov
mov
inc
loop
adc
icebp
mov
jmp
mov
or
or
mov
push
addb
ret
testl
and
jo
iret
xchg
push
mov
jge
mov
faddp
push
loop
enter
cmp
sub
scas
push
test
and
xchg
daa
pop
popa
push
and
fwait
inc
rorb
pop
jno
insl
push
xor
mov
adc
and
jae
out
xorb
sbb
push
push
mov
inc
call
insb
das
pop
mov
mov
push
inc
mov
push
lods
mov
adc
imul
push
lods
in
and
pop
js
dec
xchg
pop
in
mov
xchg
adcb
mov
push
jne
xchg
mov
pushf
in
xor
and
in
ds
js
popf
ja
adc
orl
loope
xor
hlt
repnz
xor
pop
popf
int3
push
pop
sbb
cmpsl
mov
xorb
pushf
jmp
aaa
dec
sub
push
sub
xor
push
dec
in
inc
stos
lds
inc
mov
mov
mov
pop
jp
loopne
ja
adc
jne
or
mov
mov
pusha
in
add
inc
sub
mov
or
xchg
cmp
pop
pusha
lods
inc
ffreep
outsb
sub
roll
aad
nop
mov
xchg
xor
enter
sbb
sub
sub
adc
mov
adc
sti
movsb
dec
xor
mov
rcll
jo
shrl
pop
or
shrl
xchg
jge
mov
xchg
cli
jnp
cwtl
mov
stos
sti
out
rcll
dec
add
or
or
sbb
mov
add
stos
jno
xor
cwtl
cmpb
sub
mulb
or
pop
pop
lret
cltd
dec
imul
mov
std
aad
pop
dec
loop
sub
adc
xchg
mov
test
add
push
leave
inc
or
sbb
in
and
repnz
mov
dec
lahf
jge
dec
jecxz
pop
fld1
out
sbb
inc
mov
xor
sahf
test
push
pop
leave
xchg
cli
inc
aad
push
jmp
jp
jge
lods
add
jmp
daa
mov
mov
xor
filds
lahf
mov
cs
or
sbb
xor
pop
xor
dec
mov
dec
xor
inc
sbb
imul
aaa
or
push
and
xchg
popf
mov
xchg
add
fucomi
xchg
sti
rorb
dec
mov
daa
jmp
inc
mov
nop
test
push
xor
mov
adc
inc
test
inc
repz
roll
pop
mov
mov
push
call
xchg
int3
jmp
lods
leave
mov
push
jmp
push
ljmp
aad
int
repnz
clc
push
test
mov
in
cmp
push
mov
and
je
out
outsb
repnz
xchg
mov
xchg
leave
outsb
enter
pop
add
repnz
out
push
repz
or
int3
rol
negb
mov
mov
daa
int
test
dec
test
jae
jbe
inc
xchg
push
push
sub
icebp
fnstcw
mov
inc
jmp
inc
lret
sahf
jae
and
das
rcrb
inc
mulb
sti
in
xchg
dec
mov
icebp
mov
enter
mov
xor
filds
mov
mov
stc
lea
dec
cltd
sti
test
push
test
dec
inc
add
popf
loopne
push
imul
subl
push
fwait
jmp
arpl
clc
xorl
jge
or
xchg
mov
sub
insb
cmp
jmp
aam
jne
sbb
and
ja
cli
add
cmpsb
push
clc
xchg
mov
cli
jp
lods
jmp
xor
lock
cmp
fbstp
pop
sarl
mov
push
test
push
andb
testl
popa
stos
iret
push
push
adc
cmp
cmp
mov
lods
dec
mov
fbstp
rcrb
or
cmp
or
fildll
sub
add
fucompp
push
cmc
dec
dec
and
add
mov
daa
pop
aad
sub
mull
stc
mov
push
sbb
add
jns
jnp
sub
add
pop
sti
or
fcoms
in
sub
test
pop
xchg
lock
pop
push
subb
add
pop
out
mov
inc
add
pop
incb
rcpps
or
outsb
inc
push
xchg
mov
inc
cmc
cmc
mov
int3
add
jbe
xor
add
mov
mulb
js
or
insl
das
mov
xchg
cmp
imul
call
adc
jno
jae
jb
rcr
lock
or
shl
pop
les
ret
jbe
cmovbe
testl
mov
cmc
mov
cld
pop
pop
xor
ror
movsb
xchg
push
mov
lea
inc
cmc
int3
ret
lahf
loope
movsl
andb
repnz
mov
inc
adc
cmp
pop
pop
mov
push
mov
pop
xor
mov
dec
add
lahf
outsb
inc
call
jecxz
xor
push
leave
push
adc
push
and
inc
aas
cmp
test
and
jb
and
shlb
mov
push
xchg
or
gs
or
add
adc
popf
repnz
in
push
jg
xchg
xor
jns
cmp
and
pop
xor
xchg
int3
imul
add
pushf
push
adc
call
and
mov
mov
adc
imul
sbb
scas
dec
test
iret
or
pop
jmp
xor
pop
jnp
xchg
cmpsb
dec
pop
lock
push
lcall
jno
bound
mov
dec
repnz
jae
pop
daa
shlb
sbb
jns
jb
fcmovnb
bound
xor
jnp
lods
decl
add
lea
push
das
jle
pop
jnp
push
sbb
les
push
in
pop
jb
mov
lret
shlb
sub
enter
stc
cmpl
stos
popa
inc
mov
insb
xchg
aam
iret
rorb
mov
and
repnz
call
or
cld
or
sbb
mov
es
xor
pop
pop
or
cltd
or
cmpsb
inc
pop
test
lret
mov
test
push
andl
aas
jno
mov
adc
sub
pop
sbb
loopne
dec
pop
mov
or
push
cmp
scas
push
jb
hlt
jecxz
call
cmc
in
add
xchg
mull
mov
call
inc
cmp
loopne
pop
sub
int3
add
mov
pop
mov
dec
jecxz
arpl
jo
ja
outsl
call
sub
in
or
xor
jbe
pop
sarl
inc
push
out
push
call
test
rcr
xor
xchg
adc
sub
pop
or
into
ljmp
adc
or
rclb
and
inc
aad
loope
xor
sub
xor
sub
mov
stc
insl
cmpsl
pusha
jns
and
push
rorl
push
push
add
jno
mov
mov
and
pushf
xor
test
ret
lds
pop
rclb
notl
cmc
adc
addl
sub
dec
dec
cwtl
out
xchg
lcall
lods
mov
daa
mov
pop
insb
bound
mov
stc
cmpsl
into
jb
mov
lret
test
mov
roll
adc
pushf
add
ljmp
call
jecxz
int
pop
insb
ja
mov
pop
lret
insl
xlat
xor
sub
adc
xchg
mov
lcall
cmpsl
and
mov
mov
call
out
nop
cld
sbb
sub
pushf
mov
mov
sbb
cmpsl
jl
sub
mov
sub
daa
sub
out
jo
in
or
xchg
jbe
dec
lods
jo
test
nop
sti
enter
dec
sub
push
fidivs
adc
add
cmc
mov
push
or
jl
fbld
or
inc
or
loopne
push
inc
cs
pop
cmp
and
outsb
call
loop
mov
fistl
pop
and
xchg
sub
xor
xor
addr16
cmpsb
adc
pop
mov
lock
outsl
adc
push
fisubs
cmpsb
and
mov
mov
in
jecxz
adc
jne
stc
fmulp
inc
mov
stc
mov
lods
icebp
mov
iret
test
inc
cmp
js
ret
ss
sbb
mov
jo
mov
outsb
dec
push
inc
jl
imul
lcall
addr16
aad
xchg
cmpb
adc
mov
bound
pop
add
jg
add
scas
inc
jmp
dec
or
xor
or
sub
mov
out
repnz
pop
testl
dec
repz
sub
or
lahf
xor
insb
mov
lods
cwtl
in
mov
std
lcall
push
xchg
sahf
cwtl
sbb
push
pop
call
xchg
rcrb
fadds
subb
daa
movsb
pop
out
decb
inc
and
jb
ret
lcall
pop
xor
sbb
std
cwtl
or
jmp
push
jnp
int3
pop
sub
lods
pop
mov
adc
dec
jge
dec
lret
jge
mov
jmp
mov
js
fstps
cmpsl
in
pop
jp
cld
loopne
or
sbbb
shl
daa
in
jl
mov
inc
inc
jmp
cmp
repz
ret
push
sar
xchg
inc
xchg
stc
cmpsl
rolb
hlt
mov
imulb
movsl
inc
aam
popa
jmp
lcall
shl
sti
adc
and
outsb
xchg
cmp
cmp
je
lahf
mov
lret
push
sbb
xorb
ret
rcl
cld
lods
pop
xor
outsl
pop
hlt
add
in
adc
lea
int3
lahf
cmp
cmp
mov
push
lea
jg
sbb
pop
xor
cmp
orl
jg
pop
mov
les
xchg
xorl
xchg
rolb
inc
pop
lret
rclb
in
inc
mov
inc
das
add
push
ret
mov
lahf
dec
inc
in
rcrl
lcall
mov
mov
gs
in
leave
pop
popa
dec
sub
jmp
leave
sbb
pop
cmpsb
ret
jecxz
pop
mov
ret
call
int
xchg
imul
sar
test
ds
or
insl
stc
loopne
mov
mov
lods
dec
sub
ss
cs
call
and
in
or
leave
jbe
andl
into
push
out
fcomi
push
mov
call
push
call
mov
lods
lret
test
dec
cmp
mov
jo
adc
mov
cmc
repz
mov
int
sbb
out
cmp
xchg
shll
inc
jmp
loop
cli
push
jnp
add
sbb
or
mov
clc
adc
pop
imul
imul
pop
roll
daa
xchg
mov
sbb
mov
jmp
mov
shlb
popf
push
pop
ljmp
push
cmp
movsl
push
inc
stos
fistpll
cld
stc
push
push
sbb
push
add
insl
mov
mov
in
test
jbe
out
insl
daa
leave
mov
daa
adc
fdivrp
mov
outsl
shlb
jl
loop
aaa
mov
insl
cli
add
in
loope
lds
adc
inc
jl
mov
xchg
out
and
and
repz
bound
dec
test
jp
and
cld
fs
call
adc
aad
ror
inc
test
stc
mov
vcvtss2si
in
punpckhbw
dec
add
test
cli
mov
loop
call
inc
divl
loopne
mov
orb
cwtl
inc
jbe
clc
mov
or
jb
xchg
inc
loop
jg
pusha
das
imul
xchg
jmp
pop
dec
scas
cmp
mov
sub
inc
cld
aaa
and
dec
lret
loop
cltd
mov
out
jge
xchg
into
pop
sub
push
mov
out
jo
push
out
push
enter
stc
xchg
or
mov
jge
inc
ss
inc
lret
in
jmp
cmp
test
ffreep
das
pop
fldcw
jbe
imul
sub
xchg
out
mov
push
xchg
mov
pop
sar
mulb
push
mov
push
inc
jg
and
mov
pushf
pop
jbe
out
clc
dec
das
fdivrp
sbb
inc
addr16
lret
mov
xor
rolb
dec
adc
fiadds
adc
enter
jnp
cmp
leave
lret
mov
inc
jg
mov
xor
inc
mov
sbb
cmpsb
nop
cmpsl
cmp
jg
fstl
outsl
push
cmp
add
jp
pop
ret
aam
mov
mov
inc
icebp
jmp
sub
cs
adc
xchg
ljmp
mov
test
cli
mov
cmp
sub
and
mov
into
xor
mov
push
push
ret
imul
or
cmpsl
jne
and
and
icebp
lods
testl
jb
rclb
mov
loope
sub
fwait
add
jmp
cld
xchg
loope
jae
jmp
sub
es
jo
lods
rcrb
inc
jmp
push
outsb
mov
jl
repnz
outsl
pop
pop
repnz
pop
enter
mov
call
jg
add
dec
rolb
jmp
pop
pop
test
push
loopne
xor
cwtl
inc
jnp
ss
js
add
jbe
sti
sarb
adcb
das
scas
cmc
int3
fcomps
imul
pop
aaa
fwait
decb
mov
inc
mov
sub
pop
jmp
mov
add
jno
call
pop
pushf
jl
mov
push
aaa
lret
leave
paddsb
pop
sti
mov
stc
stc
pop
jb
aad
dec
fcompl
push
xor
jo
call
or
scas
jp
inc
je
insl
das
xor
shlb
xor
push
mov
pop
inc
sbb
jge
jnp
test
xchg
outsl
push
sahf
mov
in
in
push
jecxz
dec
les
es
jmp
pushf
adc
fwait
into
stc
sub
insl
push
cmpsl
cmpb
inc
lea
pop
xchg
test
push
xchg
push
ljmp
cmp
adc
lds
push
mov
push
scas
mov
insb
lea
pop
scas
mov
mov
ljmp
test
nop
test
and
out
cwtl
pop
nop
rorb
lret
es
add
out
xor
out
mov
mov
mov
std
test
sub
leave
aad
xchg
lret
lods
out
call
dec
sbb
cmpsl
repnz
or
lds
or
pop
mov
and
mov
cmp
cmp
push
push
out
or
call
add
fmuls
xchg
cli
cld
test
dec
sbb
pop
or
mov
push
divl
fnstcw
xchg
call
xorb
mov
ljmp
cli
mov
ret
jmp
dec
flds
popa
xor
or
dec
fsubl
or
jmp
mov
stos
bnd
sbb
dec
push
inc
out
xorl
test
es
out
push
cwtl
repnz
fisubs
cmp
jae
mov
lcall
orl
xchg
insb
dec
mov
xor
pop
mov
dec
daa
or
call
cmp
lods
jnp
stos
xchg
jae
xchg
cwtl
std
repnz
dec
bnd
stc
push
pop
and
dec
cltd
lahf
stc
enter
fimuls
and
sub
sbb
mov
sti
ret
cmpsl
and
or
clc
push
je
xor
int
movswl
lods
fisubrs
push
cltd
aaa
sbb
cld
into
loop
cmp
inc
movsl
adc
mov
aaa
dec
fadds
cmp
loopne
cmpsb
jnp
mov
pop
mov
push
js
stc
add
xchg
test
mov
mov
adc
loope
fdivrs
imul
imul
popa
gs
sar
or
es
fwait
lret
lds
add
mov
jbe
sti
mov
mov
mov
cld
push
lcall
push
pop
insb
bound
mov
dec
sti
icebp
push
sub
dec
pushf
lret
iret
mov
or
inc
sarb
out
cmp
outsl
mov
push
push
xchg
pop
rorl
dec
call
out
mov
std
cli
xor
mov
push
fwait
test
mov
enter
add
xor
jo
mov
jo
leave
icebp
push
ss
scas
and
movsb
adc
cwtl
mov
sub
mov
out
or
lock
push
inc
mov
xor
push
sub
loop
xchg
sbb
or
jne
into
cmp
popa
shlb
xor
mov
jecxz
adcb
add
mov
test
cld
lret
dec
xlat
leave
pop
cld
pusha
cmp
jp
in
add
mov
push
lods
loope
xor
push
arpl
mov
adc
or
call
icebp
cmp
loope
mov
nop
out
adc
in
adc
or
jg
lret
mov
xor
pop
es
inc
add
adc
jnp
clc
pop
or
popa
out
hlt
mov
outsl
stos
jbe
daa
jbe
leave
push
mov
xchg
jmp
popf
mov
les
mov
jmp
ret
js
jecxz
add
aas
jle
imul
xor
mov
jmp
mov
jbe
or
cmpl
pop
xchg
mov
pop
rol
cwtl
rcrl
mov
call
in
add
add
add
mov
mov
add
mov
sub
imul
push
test
call
imul
loop
sub
out
xchg
mov
adc
inc
pop
test
and
jae
stc
or
push
test
mov
jb
cmp
fdivrs
inc
sti
incb
inc
mov
mov
cli
fwait
add
out
dec
add
mov
insb
test
cli
jbe
xchg
xchg
divl
ret
push
add
loop
cmp
mov
mov
jmp
push
push
ja
adc
shlb
adc
cmp
push
fnstsw
lret
jecxz
jmp
lcall
add
dec
mov
movsb
jns
xorl
xor
data16
push
lea
fcomip
into
popf
cld
test
aad
push
push
xchg
mov
and
insb
or
or
dec
lcall
inc
cli
mov
xchg
xor
loopne,pt
icebp
leave
test
mov
test
add
jno
inc
test
push
dec
out
add
and
hlt
jb
hlt
or
xchg
test
pop
mov
shl
mov
aam
push
xor
push
jmp
je
frstor
adc
call
insb
mov
sub
call
sbb
or
sbb
movsl
sbb
mov
adcb
adc
jmp
leave
rorb
jbe
mov
mov
mov
dec
adcl
pop
sub
mov
mov
js
das
cwtl
aam
testl
push
into
int3
leave
sbb
mov
mov
lret
loopne
ret
or
adc
pop
add
stos
sub
btc
adc
cwtl
xchg
jnp
fcmovnb
pop
adc
cmc
add
in
jb
push
cwtl
mov
mov
js
fcomps
hlt
fnsave
mov
or
int
mov
pop
inc
sbb
gs
dec
filds
aad
add
or
add
out
inc
clc
sub
dec
fildll
cmp
adc
outsb
dec
push
out
cmc
jb
push
push
xchg
push
inc
push
in
adc
cli
movsl
sub
lods
add
addl
fidivrs
inc
call
pop
mov
into
or
call
lea
pop
and
adc
lods
imulb
fcoml
adc
out
std
cli
cmp
stc
pop
ret
out
repnz
xchg
hlt
add
das
sbb
popa
sti
cmc
cmp
sbb
scas
cmc
add
mov
mov
call
out
sub
sub
inc
fisubrs
cmp
dec
aam
and
or
ret
add
paddb
mov
cmp
stc
mov
pop
mov
xchg
icebp
jbe
aam
mov
dec
mov
cli
movsl
js
cwtl
and
fsubs
mov
mov
xchg
sub
mov
das
into
imul
mov
lods
stc
aaa
ret
jno
mov
add
loope
out
and
repnz
rorb
or
jecxz
sar
ss
inc
shrb
mov
movsb
daa
jno
jo
out
cmp
subl
cmp
lds
stos
sbb
cmpsl
aad
icebp
mov
cmp
adc
pop
les
mov
imul
pusha
jp
negl
out
cld
jg
daa
movsl
rorl
std
sti
lret
mov
mov
mov
sub
cmpb
out
ss
add
adc
inc
cmc
scas
pop
jnp
std
pop
mov
popf
jb
aad
jo
add
mov
scas
sbb
pop
sbb
daa
cmpsb
and
inc
jge
push
pop
xlat
in
add
mov
jp
mov
xor
mov
loop
pusha
mov
enter
dec
pop
pushf
int3
jb
mov
ja
dec
outsb
sbb
jl
push
mov
and
pop
repnz
dec
add
pop
jmp
lock
and
loope
sti
cmp
mov
mov
push
call
jge
lods
and
xchg
sahf
sbb
cli
cmp
dec
inc
jp
mov
mov
call
sbb
in
call
lret
test
xor
nop
pop
xchg
negb
pushf
lahf
jno
leave
adc
sub
inc
mov
andb
sub
mov
mov
mov
pop
dec
insb
pop
notl
ljmp
call
int3
xchg
pop
lods
lret
ja
sub
jnp
popf
fsts
pop
mov
scas
sub
inc
cltd
cmpsl
add
incl
inc
dec
pop
push
lods
scas
add
ret
sti
sbbb
mov
cmp
and
dec
xchg
push
outsl
movsl
lods
lret
aaa
inc
dec
xchg
cs
xor
mov
xchg
aam
mov
adc
fldl
and
test
mov
cmp
and
or
out
sbb
pop
insl
jmp
mov
xchg
lret
hlt
lret
or
pop
push
or
aam
inc
popf
rcll
mov
inc
mov
add
mov
mov
sub
or
fidivrl
pop
mov
or
jb
jmp
insb
dec
xchg
cmpsl
mov
add
insl
or
in
inc
subb
mov
jmp
mov
jle,pn
push
subl
out
push
mov
cli
adc
flds
pop
rcll
pop
push
cmc
rorb
orl
test
sbb
push
sbb
or
xor
xchg
in
or
orb
sub
mov
xchg
sub
add
imul
call
stos
jl
mov
pop
test
rcrb
sarb
push
fisubl
loope
repnz
std
mov
dec
push
mov
dec
xchg
or
xor
mov
in
testl
jbe
xor
xchg
xor
push
dec
pop
jno
in
push
lea
adc
xchg
in
jb
push
cmpsb
subb
and
les
clc
sahf
mov
pop
or
sub
pop
push
call
xchg
int
cmc
loop
sub
jmp
push
sub
or
rcr
in
jg
add
adcb
ljmp
add
faddl
out
push
inc
mov
mov
inc
call
jne
push
sbb
lock
fs
xlat
adc
push
push
outsl
jmp
es
repz
jae
das
popf
dec
xchg
mov
add
add
mov
mov
inc
xchg
ret
xor
xchg
call
jge
das
bound
push
std
push
sbb
fnstenv
inc
mov
shlb
testb
sti
les
xor
xor
addr16
mov
inc
mov
dec
mov
lcall
das
or
mov
add
inc
nop
mov
adc
loope
cmp
or
je
add
nop
pop
xchg
xlat
jp
sbbb
push
adc
call
inc
in
push
pop
dec
xchg
lea
mov
rorl
push
test
and
xlat
enter
clc
mov
ss
add
jb
std
cmp
lds
sbb
adc
pop
std
xor
or
adc
repnz
clc
add
mov
add
bound
divl
mov
inc
test
lea
pop
test
mov
cmc
pushf
jo
scas
sub
orl
imul
dec
xchg
out
and
roll
dec
push
cmp
adc
mov
out
dec
cs
nop
call
xor
xor
sbb
dec
int
fimuls
aad
les
aad
sub
mov
cltd
and
subb
pop
repz
shlb
lret
and
jnp
testb
cltd
stos
jp
fadd
mov
mov
jbe,pn
in
jbe
in
int3
jb
mov
aad
pop
lcall
in
or
xchg
xlat
lcall
adc
ja
xchg
adc
out
or
mov
enter
xor
hlt
call
lods
sub
cmc
dec
adc
or
data16
cmp
jmp
adc
call
add
inc
mov
aaa
fnstenv
and
sbb
push
inc
cld
mov
leave
mov
jno
jno
mov
push
pop
add
fwait
por
hlt
add
lds
cmp
dec
or
ja
jle
or
ret
pop
lahf
popa
nop
dec
push
pop
into
push
test
inc
sahf
or
cli
mov
xor
mov
les
nop
cmp
ficoms
stos
shl
loop
in
clc
rorl
xchg
adc
and
lock
call
lods
dec
jmp
adc
sub
push
je
loop
sbbb
jge
sub
test
dec
add
pop
mov
inc
loopne
mov
adc
call
stos
repz
jmp
ljmp
mov
mov
ficomps
fimuls
das
mov
in
ret
sbb
jnp
nop
pop
push
stc
mulb
mov
jno
aam
cmp
and
gs
dec
mov
cld
mov
add
loopne
mov
sbb
mov
repnz
adc
sti
ss
push
or
es
jno
lahf
scas
mov
fcom
ret
das
mov
add
pop
decb
int
stos
mov
lods
arpl
sub
sti
fsubs
pop
inc
dec
jmp
repz
test
lods
cmp
add
sarl
das
push
sub
scas
dec
pop
jg
inc
jg
daa
clc
xlat
xchg
push
jmp
pop
xlat
dec
enter
mov
in
jle
or
xchg
repnz
mov
fisubrs
test
pop
xor
sub
test
jl
add
mov
outsb
dec
cmp
sub
cs
mov
mov
xor
xor
stos
or
and
mov
pop
xchg
jg
dec
mov
dec
or
jns
xor
mov
xchg
cli
ret
inc
cld
int
mov
fcomip
sub
cmp
popa
repz
fsubr
push
mov
xchg
imul
mov
bound
or
xlat
fwait
mov
sub
or
jmp
mov
push
subb
sub
mov
jmp
lea
test
inc
pusha
sub
aaa
test
cmc
sub
inc
shlb
add
loopne
arpl
mov
je
sub
popf
testb
mov
loop
dec
repz
mov
cmpsl
mov
call
mov
and
dec
lock
cmp
fst
sub
ss
pop
cld
int3
adc
cli
call
rorb
adc
movl
inc
and
roll
mov
lods
outsl
loopne
cmp
mov
dec
cmpsl
cmpb
adcl
repnz
and
lahf
adc
push
and
inc
mov
jge
hlt
out
andl
call
out
mov
lss
int3
icebp
loope
out
xor
dec
xor
mov
sti
mull
sub
adc
loop
dec
jno
pop
mov
adc
add
lods
loopne
mov
fildl
call
or
mov
int
ja
or
mov
jp
cmp
ss
je
fdivl
mov
pop
dec
imul
mov
xor
cmc
leave
add
imul
and
jbe
dec
or
mov
xchg
rcr
adc
call
repnz
jns
xor
cmp
jne
or
xor
mov
enter
test
sub
cmp
inc
pop
push
mov
push
jno
jmp
int3
mov
add
push
sbb
fsubrp
js
lahf
jno
mov
cld
cmp
sub
dec
sahf
inc
push
mov
adc
pop
mov
data16
jmp
das
sbb
push
xlat
cltd
sbb
and
mov
mov
xchg
in
xchg
add
adc
lcall
mov
call
pop
sbb
xchg
xchg
jmp
nop
inc
negb
pop
push
mov
data16
cmpb
sub
insb
adc
js
daa
test
gs
push
or
rcrl
xchg
les
mov
push
cmp
shlb
notb
in
jp
loopne
jge
repz
sbb
jle
sahf
shr
mov
das
pop
or
xchg
int
popf
jmp
out
loope
popf
daa
jp
clc
aad
cmpsl
subb
jo
push
popf
roll
mov
cmc
adc
loope
or
mov
push
sub
ffree
leave
add
dec
frstor
les
rclb
pop
movsb
push
pop
test
out
or
xchg
mov
xchg
cmp
fsts
not
test
xchg
pop
xchg
test
std
mov
fistl
cmp
cmp
or
mov
mov
scas
adc
sar
dec
mov
or
out
jmp
mul
mov
lcall
scas
sbb
inc
shr
int
int3
push
xor
cmp
xor
fadds
or
inc
or
in
mov
and
inc
jmp
inc
sarl
sub
or
stc
test
fs
hlt
sub
cmpsl
sbbb
jbe
add
pop
call
dec
sbb
mov
mov
out
xor
xchg
idiv
leave
sbb
out
sbb
negl
ljmp
add
lcall
jns
fwait
neg
sub
inc
cmp
stc
lods
mov
ret
inc
cwtl
xor
and
add
xor
out
ja
test
or
loopne
into
std
inc
inc
ljmp
imul
lock
mov
or
fidivrs
mov
xchg
mov
add
mov
xor
fldl
enter
mov
inc
push
sbb
jecxz
rorl
loop
add
test
clc
clc
test
jne
fimull
fwait
or
mov
cs
sti
xor
imul
mov
jecxz
cmpsb
shll
mov
leave
or
add
add
jmp
cmp
push
in
enter
cld
dec
scas
cld
shlb
mul
dec
dec
cwtl
mov
rol
cmc
mov
shr
mov
mov
aaa
pop
jl
call
jge
xchg
std
and
les
adc
clc
mov
std
ja
jmp
push
inc
cmc
daa
dec
xor
js
std
or
sbb
bound
xor
push
pusha
lods
and
cwtl
aam
mov
sub
mov
xor
pop
in
or
insb
ret
mov
and
popa
mov
nop
lahf
add
jno
jmp
loopne
call
test
scas
out
dec
xorl
inc
repnz
sbb
pop
adc
push
or
pop
mov
or
in
scas
testb
push
mov
sarl
rorl
add
ljmp
pop
enter
ror
push
std
dec
push
mov
jmp
mov
int
mov
xchg
cmp
xor
push
es
cld
jae
jnp
stc
addb
pop
mov
inc
fiadds
das
adc
push
loop
and
rclb
dec
mov
sbb
fdivs
scas
cmp
jle
sub
inc
xor
mov
popf
pop
or
mov
pop
cmp
test
data16
pop
add
push
push
call
cmpsl
jbe
movb
mov
or
out
je
movsl
mov
and
loop
sub
andb
mov
dec
js
inc
out
jno
or
or
div
fucomip
call
xchg
pop
call
ja
mov
pop
and
dec
mov
sub
pop
hlt
adc
in
push
divb
inc
mov
jmp
enter
sub
insb
jo
mov
mov
mov
ss
fsubs
pop
xor
sub
out
xchg
fmul
push
push
xor
jp
sbb
adc
insl
leave
xchg
dec
push
pop
orb
aad
xchg
mov
test
repz
jl
xchg
out
xchg
add
xor
fsubrs
jnp
mov
cmc
in
push
lock
fldl
inc
test
adc
call
pop
jmp
iret
push
les
sbb
adc
xchg
dec
lea
mov
adc
jmp
mov
lahf
mov
fwait
push
fwait
test
xchg
sub
dec
sbb
insb
jo
add
cmp
mov
out
pop
loop
pop
mov
xchg
pop
jecxz
test
pop
jo
xor
inc
getsec
pop
mov
cmp
imul
jecxz
sub
mov
jp
xlat
add
ficompl
push
insl
sub
push
add
cmpsb
mov
mov
inc
pop
sub
mov
adcb
push
imull
push
and
pop
inc
cltd
subl
shll
push
push
adc
add
adc
push
je
jp
pop
mov
adcb
sub
adc
out
int3
cwtl
jmp
ljmp
js
adc
mov
sti
mov
mov
xchg
imul
mov
ljmp
xchg
popf
inc
jne
stos
pop
repnz
aas
imul
mov
pushf
jb
jno
lahf
stc
leave
jae
dec
movsl
jecxz
ds
push
cltd
mov
pop
jecxz
outsl
push
rorb
xor
mov
hlt
sbb
adc
mov
out
iret
sub
shlb
mov
sub
cmp
push
sbb
jnp
or
or
xchg
call
pop
fdivs
loopne
gs
push
sub
cmp
test
dec
adc
gs
mov
in
daa
fucomp
mov
ljmp
mov
aaa
mov
repnz
xchg
data16
ja
scas
or
cmp
sbb
push
cmpsl
cmp
lods
jbe
jmp
inc
mov
mov
or
jmp
hlt
mov
jmp
push
jno
out
cmp
and
jmp
and
adc
out
pushl
and
fmull
add
sbb
rclb
fwait
sbb
bswap
aad
cmp
inc
adc
push
sbb
cmc
push
jmp
add
or
inc
cmovno
ja
clc
aaa
mov
mov
add
jg
clc
mov
hlt
push
mov
mov
xor
imul
xchg
pop
or
pop
test
inc
jno
es
sub
aam
mov
ljmp
add
outsl
fdivrp
cmpsb
aam
sbb
insl
add
mov
sub
mov
les
jecxz
mov
adc
mov
filds
xchg
dec
add
das
cmovl
sti
add
lea
adc
push
cmpsb
loop
mov
mov
and
scas
shr
push
data16
cmp
adc
fldcw
call
push
push
popa
push
sub
or
divps
in
rep
mov
test
adc
and
dec
add
orb
push
mov
jmp
adc
in
fwait
sti
outsl
jl
xor
pushf
sub
mov
mov
cmp
movsl
lahf
imulb
out
xchg
sahf
stc
gs
call
jb
repnz
sub
xchg
or
or
push
xorb
hlt
mov
push
inc
mov
icebp
mov
jecxz,pt
sti
lret
fs
sbb
inc
pop
stc
ficompl
dec
testb
adc
jmp
call
sti
xor
sub
cmp
lock
add
cli
lds
repnz
iret
lahf
push
xor
sub
out
leave
pop
pop
mov
inc
adc
push
mov
push
lods
enter
inc
push
push
jae
push
mov
test
imul
cmc
data16
outsb
pop
xchg
into
jno
cltd
mov
lock
lret
mov
jmp
mov
cmp
jg
std
dec
sub
sarl
xor
jmp
into
jno
pop
ja
adc
repnz
xor
testl
mov
pop
inc
jnp
addl
mov
and
mov
push
mov
inc
aad
ja
pop
repnz
jmp
fs
jo
jb
stc
add
inc
je
sbb
push
sbb
xchg
stc
inc
pop
sbb
inc
loope
cmp
bound
loopne
fidivrl
or
std
jg
loope
call
push
in
add
inc
jbe
dec
push
jecxz
jl
mov
les
pop
and
xor
jmp
add
imul
jae
xchg
dec
or
ds
jb
dec
clc
in
lock
call
cmpsb
bound
pop
loope
or
pop
mov
dec
jecxz
jg
sbb
sub
push
dec
dec
jno
stos
loopne
inc
xchg
ficoml
dec
pop
xor
call
movsl
cs
sbb
xchg
jne
pop
xor
movsb
pop
mov
mov
stos
cmp
xchg
cmp
cli
pop
nop
mov
aam
ficoml
mov
pusha
cmp
xlat
or
pop
jmp
lahf
mov
mov
dec
fmul
lahf
push
xor
push
iret
add
inc
call
int
insb
sbb
aam
xor
dec
cmpsl
adc
push
sbb
cmpsb
mov
push
lahf
test
fmull
sub
jg
push
lret
mov
dec
add
jecxz
movsl
jns
push
sbb
dec
mov
test
add
pop
daa
int3
dec
cmp
in
mov
imul
sub
mov
dec
loopne
jno
mov
lds
into
loope
mov
cmp
xchg
mov
pop
mov
dec
push
bound
adc
int3
cltd
sbb
idivl
cmp
aaa
pop
mov
sbb
inc
inc
call
sarl
or
push
fnstcw
adc
pop
push
dec
xchg
or
xchg
mov
sti
aam
mov
pop
or
in
pop
out
dec
adc
mov
daa
test
pop
rcll
mov
xor
cwtl
mov
jmp
mov
mov
push
roll
push
mov
mov
ja
cmp
xlat
dec
push
aas
inc
lret
sub
stc
lock
cmc
jo
xchg
dec
in
sub
jo
bound
mov
aam
loope
cmp
push
mov
in
call
mov
int3
jmp
lock
xchg
xor
stc
add
sbbb
jne
and
loope
push
mov
cli
sub
cmc
mov
aas
dec
stos
mov
std
shlb
popf
jg
icebp
jmp
and
out
nop
repnz
mov
std
cltd
pusha
or
pop
and
ret
clc
stos
cld
mov
sub
lds
or
add
inc
sub
jmp
fimuls
xchg
testl
fadds
mov
push
or
shl
or
adcb
mov
hlt
xchg
call
mov
mov
xor
cmpsl
clc
adc
movsl
mov
loopne
dec
dec
add
mov
popf
dec
push
cltd
or
lret
mov
testb
and
inc
scas
sub
push
push
dec
cltd
inc
cmpsb
aam
movsb
cmp
pop
and
add
ja
pushf
mov
sub
adc
loopne
lcall
lea
push
cwtl
mov
int3
mov
mov
pop
int
out
mov
fdivrs
push
call
leave
push
fisttps
std
xlat
dec
loop
push
pushl
call
rcrl
push
jmp
push
movsl
enter
xor
mov
lods
inc
ja
les
cmp
test
jns
pop
push
jne
jmp
int
jmp
xchg
pop
fs
call
add
push
jl
push
popf
filds
mov
add
fsubrs
sub
jecxz
in
rorl
mov
orb
cmpl
and
pop
sbb
clc
lea
and
pop
out
popa
cmp
xchg
in
cmp
or
add
lret
push
dec
jmp
push
divb
int3
lret
test
pop
inc
aaa
dec
inc
mov
fisttpl
ljmp
push
mov
int
pop
or
sub
jae
cwtl
xchg
inc
into
sbb
pop
jns
testl
call
cmp
xchg
dec
enter
adc
shll
pusha
jge
cmc
inc
dec
cmpsl
xor
inc
call
loopne
push
xchg
rcl
lea
mov
in
aam
dec
loop
stos
push
cmpsl
inc
cmp
push
std
pop
out
push
push
or
pop
inc
push
cmc
int3
push
cli
and
xor
pandn
rol
xor
push
pop
cmp
jg
lcall
sbb
inc
mov
mov
insb
mov
dec
jo
sub
data16
ret
arpl
dec
mov
xchg
ljmp
popa
add
mov
in
cmp
nop
pop
rcl
sub
cwtl
inc
mov
rclb
mov
xchg
fsubrl
dec
loope
jnp
hlt
push
jmp
shrl
into
jle
insl
dec
popf
cli
enter
inc
loopne
js
loopne
aaa
sbb
loop
notb
mov
ret
pop
mov
push
fadds
push
and
sar
lods
add
cmc
icebp
addl
jns
push
lock
lds
mov
ljmp
add
add
dec
dec
adc
jmp
add
cli
jb
mov
push
pop
pop
inc
incb
push
cmc
add
jge
mov
out
imul
aaa
mov
xlat
out
push
mov
pop
fstps
ret
xchg
out
daa
pop
shrl
mov
call
in
push
sub
adc
call
cmp
push
inc
dec
dec
shll
xor
push
adc
jmp
aam
int
adc
ja
mov
out
out
dec
xor
or
and
insb
add
inc
popf
adc
inc
cmpsb
mov
rorb
stos
shll
or
dec
cmp
push
pop
das
xchg
aad
call
in
and
xchg
popa
jg
add
imul
push
std
sub
mov
mov
xchg
cmp
mov
rorb
les
repnz
repnz
je
lds
bnd
push
xor
or
cmpsb
or
shl
out
push
lea
stc
lret
in
jb
rcll
adc
pop
xor
jl
push
pushf
dec
add
push
clc
mov
jecxz
mov
ljmp
jo
xchg
or
jmp
dec
sbb
and
repnz
pop
bnd
leave
cld
sbb
daa
repnz
pop
pop
mov
dec
fstps
sub
or
inc
or
sbb
inc
mov
push
mov
xlat
inc
int
popa
test
mov
lea
insb
stos
aam
and
mov
mov
dec
sbb
push
add
icebp
lahf
cmp
test
pop
loop
adcl
sub
jecxz
jecxz
inc
lret
or
test
dec
jbe
mov
in
cld
cmp
and
sub
jle
scas
lea
data16
mov
adc
imulb
cwtl
cld
or
sub
add
inc
int3
xor
jae
cmp
in
pop
shr
cli
popa
mov
adc
push
or
aas
pushf
arpl
mul
and
xchg
adc
sub
or
sti
sbb
movsb
pop
xchg
dec
cwtl
int
jl
inc
daa
jmp
push
popf
cld
ret
ja
sub
ja
pop
inc
mov
insl
scas
jmp
mov
adc
fsubs
xchg
pop
shrl
push
xor
sub
mov
add
cmp
pop
add
dec
mov
jp
call
fs
xlat
outsb
stos
or
out
rcr
imulb
push
cmc
cmpb
dec
loope
faddl
mov
testb
and
enter
insb
or
cmp
jg
lods
lods
test
cs
pusha
cmp
ret
roll
fwait
lock
int3
arpl
push
or
mov
mov
mov
test
mov
push
dec
loope
faddl
int3
sub
dec
lcall
xlat
mov
adcb
xor
imul
mov
popf
xor
fists
in
xor
and
mov
adc
call
mov
mov
lret
jp
adc
divb
sahf
ja
mov
cli
add
arpl
inc
jae
pop
mov
pop
call
add
jp
into
lret
pushf
jae
mov
ret
popf
push
cmp
inc
mov
jmp
jmp
inc
mov
call
pop
dec
lcall
test
in
jmp
aaa
mov
cmpsb
movsl
rcl
jo
jmp
loop
dec
imul
jg
cli
fistpll
stos
pop
and
or
jmp
push
shl
fadds
ja
or
fwait
out
cltd
push
stos
mov
xchg
test
aaa
mov
lea
xor
call
jo
icebp
fisttpll
add
jbe
xor
xchg
jne
pusha
push
pop
xor
nop
mov
popf
ficomps
push
add
clc
jno
mulb
mov
mov
cmpsb
aad
cmp
dec
xor
popf
jne
repnz
xchg
sahf
js
divl
mov
sarl
lret
pop
mov
in
pusha
test
add
ss
into
jecxz
scas
jne
movsl
push
lret
call
add
add
pop
cltd
mov
or
xchg
push
xorl
rcrb
and
addb
das
pop
jmp
push
sbb
jb
xlat
dec
or
jo
jle
repnz
mov
insl
call
mov
xchg
imul
xor
inc
ljmp
andb
popf
cs
add
subb
inc
push
mov
mov
popf
adc
stc
jp
and
sub
jmp
adc
mov
gs
inc
push
mov
mov
iret
sbb
push
mov
ljmp
cmpb
and
xor
enter
cmp
call
fistpll
icebp
movsl
repz
jmp
stc
fistps
xchg
add
xchg
sbb
addr16
popf
in
jp
fldl
iret
test
cmp
fiaddl
mov
aam
sahf
outsl
push
cmpb
out
stos
inc
dec
testb
ljmp
inc
xchg
inc
or
aam
pop
into
fiadds
jno
push
pop
int3
or
leave
outsl
xor
inc
out
test
call
push
lcall
inc
mov
lds
cmp
adc
fcomps
adc
dec
ljmp
xor
faddp
hlt
xchg
adc
js
sub
dec
jge
xchg
shll
rcrb
cmc
outsb
neg
sbb
or
ljmp
dec
or
or
push
sub
scas
mov
test
cs
pop
xchg
insb
out
loop
fimuls
cs
mov
repz
fs
jl
sub
and
mov
mov
xlat
cltd
dec
ret
lahf
mov
dec
or
mov
pop
pop
call
in
into
clc
fwait
xchg
loope
scas
mov
xchg
mov
push
test
inc
pop
push
and
es
jmp
scas
jecxz
das
pop
add
dec
dec
mov
dec
or
push
bound
xchg
cli
or
adc
andb
fdivr
jecxz
sti
cli
dec
loopne
stos
and
dec
insb
inc
or
push
stos
push
mov
xlat
jecxz
mov
or
pop
loope
mov
scas
jg
in
imul
xchg
or
mov
mov
hlt
gs
adc
or
jbe
mov
fcmovnu
pop
sbb
mov
lret
and
push
addl
mov
xor
add
sub
xor
or
fs
ja
inc
sti
mov
pop
jp
jl
arpl
jge
mov
push
dec
mov
adcl
pop
jb
shrb
lods
lods
add
adc
sbb
sub
negb
test
dec
xor
push
imul
out
jb
pop
push
inc
sahf
es
je
sbb
dec
sub
cs
mov
jecxz
call
inc
push
sbb
ja
mov
adc
inc
mov
and
xor
cmp
loop
and
and
xor
stos
mov
mov
pop
mov
fildll
xor
insb
dec
lret
leave
fstl
or
dec
inc
data16
add
push
je
and
push
les
sbb
leave
dec
mov
pop
cmc
clc
adcb
into
xor
xor
mov
cwtl
or
mov
fisttps
pop
daa
xor
pop
adc
out
adcl
inc
fwait
mov
xchg
add
loop
push
push
adc
daa
dec
les
cmp
mov
mov
jae
fucomp
inc
imul
and
cmp
jno
xchg
push
cmp
cmp
jmp
and
push
push
fs
std
mov
and
xchg
and
xchg
mov
cmp
dec
inc
push
popf
aam
mov
nop
dec
mov
or
dec
lods
cmpb
mov
lcall
adc
mov
jg
orb
inc
daa
in
mov
call
mov
insl
adc
cld
cli
rcll
pusha
call
add
push
out
or
dec
cmp
pop
mov
or
xchg
ret
push
fistpl
bound
cmp
xchg
mov
push
xchg
jl
rcrl
mov
mov
sub
clc
ja
lcall
imul
and
addr16
push
iret
cmp
xchg
push
bound
std
or
mov
addr16
sbb
inc
adc
dec
jae
movsl
hlt
or
test
cmp
out
leave
or
rcrb
mov
cli
lods
lahf
add
icebp
adc
fcmovu
lds
clc
jl
mov
or
popf
mov
clc
xchg
out
aad
mov
test
inc
inc
jecxz
aam
movsl
aad
dec
imul
aas
push
jge
rolb
es
jae
mov
jo
call
adc
mov
xchg
pop
addb
jo
lret
data16
call
das
jnp
mov
popa
mov
xorb
mov
fs
aaa
mov
jns
mov
add
stc
call
in
inc
cmp
mov
popf
icebp
pushf
push
inc
jns
stos
movsl
ret
mov
test
inc
jg
push
pop
inc
jnp
cmp
sarb
cmpsb
adc
fcoms
leave
test
in
or
sub
mov
stos
out
jnp
push
and
ret
jge
out
add
mov
je
faddl
mov
push
sub
pushf
and
ss
inc
cmpsl
cmp
mov
mov
mov
cltd
inc
lds
into
or
dec
add
adc
mov
out
push
jb
pop
adc
add
call
cs
jge
mov
cmpsb
or
inc
jo
sti
jl
insl
adc
insl
adc
inc
xchg
sub
pushf
xchg
dec
or
ljmp
fwait
cmp
xchg
rcrl
add
stc
adc
xor
aad
mov
cmpb
std
sbb
mov
scas
jne,pt
stc
das
inc
sbb
in
mov
in
fldcw
xchg
and
xchg
cmpsl
std
or
and
push
sub
cmpsl
rcrb
ret
test
and
mov
ja
jge
cmp
pusha
inc
call
xor
jae
mov
dec
stc
xchg
push
mov
xchg
push
out
sbb
and
cltd
cmp
andb
mov
ja
popf
jge
inc
aad
mov
stos
iret
adc
stos
das
arpl
and
cltd
addr16
leave
ret
fsubrs
push
adc
xor
mov
jmp
push
pop
outsl
ud2
pop
jo
sbb
std
bound
pusha
xchg
mov
push
adc
dec
cmpsb
or
pop
xlat
les
adc
fsubrs
sbb
cwtl
lods
push
jmp
dec
or
fcmovne
shll
rorl
inc
jmp
das
push
inc
xchg
mov
orb
dec
das
out
push
push
inc
lods
push
add
mov
add
jno
mov
or
push
jl
dec
mov
insb
mov
pop
sub
clc
mov
jge
add
push
cs
pop
or
rcr
adc
aas
enter
out
and
mov
mov
gs
sub
mov
or
mov
mov
add
in
mov
pop
andb
adc
mov
add
jl
stos
mov
or
mov
js
push
int3
fsubrl
or
stos
icebp
loop
icebp
inc
push
sub
mov
dec
inc
dec
arpl
mov
and
jle
insl
mov
pop
scas
or
lret
shll
dec
test
lds
pop
mov
xchg
pop
in
pop
jnp
enter
int3
mov
dec
jmp
pop
cmp
stc
push
inc
mov
mov
in
int
pop
sti
lret
mov
push
mov
test
sbb
bound
push
mov
sub
int3
mov
inc
xchg
xchg
xor
out
and
adc
push
xchg
xchg
daa
int3
push
or
or
or
shrl
xchg
mov
sbb
dec
or
mov
lods
inc
xchg
inc
stc
ficompl
in
fsubr
aad
adc
clc
mov
ja
daa
inc
call
insb
lea
jmp
xchg
rep
lret
or
pop
out
ficompl
mov
fnstsw
adc
cs
mov
or
fmuls
icebp
inc
ja
cmpsl
add
or
sub
lret
std
ljmp
pand
lods
fmuls
jmp
mov
in
int3
dec
and
sub
mov
push
push
pop
xor
jne
lds
testb
call
lods
addr16
dec
insl
lea
mov
or
xor
les
popf
loope
mov
fmull
push
fisubrl
out
or
repnz
push
cli
movsb
push
jle
push
and
popa
roll
or
popf
out
xchg
int
push
loop
pop
pop
xchg
pushf
idivl
jmp
lahf
pop
test
inc
mov
dec
pop
sbb
add
jb
es
test
sti
testb
jecxz
ret
cwtl
call
jg
or
fistpll
pop
call
adc
push
or
adc
push
insl
xor
mov
mov
fiaddl
andb
stos
mov
das
in
fildll
pushf
or
sbb
mov
iret
push
cmp
call
and
enter
adc
jg
add
scas
ljmp
sarl
adc
pop
xchg
jge
or
jl
sahf
mov
cmp
push
push
repnz
inc
cmc
lods
mov
in
lods
rorl
stos
push
push
jmp
in
dec
out
mov
jo
lret
mov
ja
xchg
xchg
inc
mov
dec
or
inc
loopne
or
push
int3
stos
dec
push
or
sbb
iret
push
xchg
test
lret
jmp
call
fistpll
xchg
jno
out
or
adc
lahf
loopne
std
jno
fidivl
add
cli
popf
insb
cli
cmc
and
and
pop
mov
mov
or
addl
orb
mov
mov
mov
sub
aaa
dec
mov
sub
and
stc
jae
into
jp
pop
sbbb
adc
dec
leave
sbb
cs
outsl
push
imul
ds
jmp
lret
pushf
pop
cmpsl
cltd
int
out
pop
jecxz
and
cmpsl
in
mov
fldl
mov
sbb
dec
movsl
sti
jle
jle
mov
repnz
call
icebp
mov
adc
sbb
add
push
add
cmpsl
and
and
rorb
add
pop
cmp
adc
push
jl
push
repz
icebp
sbb
or
and
inc
add
push
cmp
or
push
dec
sub
push
aas
push
cmp
cmp
andb
xchg
in
adc
cmp
xor
xor
xor
fs
inc
dec
adc
and
and
adc
and
and
cmp
leave
test
or
bound
rorl
call
leave
mov
xor
arpl
adc
inc
bound
aaa
mov
sti
and
adc
roll
sub
mov
cmp
cmp
jae,pt
xchg
adc
and
cmp
insl
cmp
xor
enter
and
roll
addb
inc
xor
and
and
mov
jmp
push
cmp
xchg
push
adc
xor
ds
mov
addr16
push
cmp
mov
cmp
cmp
cmpsl
call
xor
cmpsb
inc
jecxz
sbb
and
and
in
cli
call
repz
subb
movsb
push
add
pushf
fdivrl
fdiv
mov
mov
pop
cmp
in
aam
push
cmp
sbb
cs
push
and
and
and
cmp
dec
push
or
sub
xchg
sub
add
movb
xorl
push
mov
shr
cmp
dec
cmp
push
test
xor
xor
aaa
movsl
pushf
mov
dec
adc
and
xor
mov
jno
cmp
leave
xor
stos
fadds
sti
or
popf
xor
jo
lret
in
fistpll
cmp
ss
lods
xchg
xor
addb
enter
xor
jmp
sbb
xchg
andl
push
gs
mov
cmp
dec
imul
ljmp
sbb
cmp
cmp
mov
stos
ss
pushf
and
bound
scas
inc
into
adc
bound
or
cmp
xorl
aas
push
cs
xor
bound
cmp
xor
xor
xlat
shrl
add
cmp
xchg
push
adc
cmp
pushf
mov
fbld
pop
shlb
dec
cmp
test
lods
aas
push
cmp
adc
cmp
adc
popf
in
adc
push
push
and
inc
in
jae
and
adcl
in
adc
and
cmp
mov
dec
leave
mov
fmuls
sbb
xor
gs
out
adc
std
loopne
mov
insb
loope
add
dec
subl
push
call
lcall
aas
jne
mov
lods
cmp
cmp
adc
xor
jg
pushf
inc
ret
add
orb
in
clc
jmp
push
add
and
in
cmp
xchg
out
or
xor
cmpsl
push
loop
inc
cmp
das
dec
out
cmp
ds
in
loopne
cld
dec
js
push
cmp
fwait
dec
jbe
inc
dec
push
cmp
mov
adcl
aaa
cwtl
mov
add
call
push
sub
dec
inc
inc
xchg
and
enter
cmpb
loop
cmp
cmp
cmp
cmp
int3
xchg
sarb
xor
in
test
addl
push
in
loope
lods
xor
cmp
jl
pop
push
nop
lods
cmp
movb
cmp
hlt
xchg
leave
orl
hlt
test
sbb
xchg
out
sub
cmp
fs
and
xor
push
cmp
inc
push
xchg
inc
inc
mov
ds
sbb
or
aas
aam
cmc
bound
cmp
push
ret
xchg
adc
xor
or
mov
inc
and
shrb
and
cmp
inc
cmp
mov
aas
push
enter
dec
pop
jl
or
gs
sub
inc
das
test
push
dec
cmp
iret
rcrb
bound
leave
jle
cwtl
mov
adc
jno
mov
xchg
int3
mov
mov
les
push
xchg
and
xor
test
xor
cmp
pop
cmpl
mov
sub
call
xor
sbb
pop
das
fwait
dec
sti
outsb
cmp
and
and
addb
jle
and
pushf
cmp
bound
cmp
sbb
cmp
mov
sti
sub
dec
inc
outsl
gs
lea
enter
shlb
daa
mov
das
sti
xor
and
enter
inc
cmp
cmpsl
loope,pt
inc
fsubrl
xor
cmp
leave
call
enter
pusha
jl
adc
xor
daa
ss
adc
aaa
scas
subb
out
xor
and
mov
cmp
cmp
es
js
inc
cmp
jae
bound
jl
pmulhw
sub
sub
iret
or
pop
ss
iret
dec
lcall
or
and
addb
xchg
push
jns
fldl
ret
or
call
xchg
les
loop
pop
nop
xchg
mov
out
and
test
loop
cmp
cmp
xchg
pop
sbb
and
test
add
push
cmp
push
and
mov
jp
scas
imul
adc
cmp
pushf
inc
test
jl
mov
andb
jae
adc
dec
xor
pushf
inc
adc
sbb
jge
or
push
and
xchg
dec
lret
daa
adc
aas
pop
cmp
adc
ret
movsb
arpl
icebp
adc
xchg
in
sub
or
ds
repz
and
and
and
sub
cmp
je
bound
cld
enter
jns
lds
daa
cmp
cmpb
addb
cmp
loop
inc
xor
leave
mov
rclb
xor
or
cltd
adc
adc
jo
jmp
push
cmp
jmp
lods
add
or
sub
xorb
sbbb
sub
cmp
cmp
adc
cmp
jno
cmp
ror
xor
fnsave
pusha
call
call
and
das
push
push
pop
cmp
fcmovnb
neg
popa
cmp
jne
cmp
das
push
cmp
push
cmpsb
mov
call
icebp
mov
sub
xchg
cmp
pop
in
imul
pushf
insb
add
mov
mov
cmp
in
jmp
cmp
inc
cmp
jbe
idivb
stos
cmp
orb
dec
or
xor
sqrtps
daa
cmp
bound
jl
adc
cmp
popf
cmpb
jl
sbbb
jl
cwtl
int3
adc
ss
xchg
cltd
cmp
repnz
add
mov
and
lahf
jmp
lcall
sarl
inc
pushf
nop
pop
sbb
adc
cmp
xchg
mov
jle
and
cwtl
mov
stos
cmp
nop
jmp
call
orb
xor
adc
and
adc
xchg
xchg
pop
gs
aas
or
sahf
andb
cmp
and
cs
aaa
imul
in
lcall
icebp
and
xchg
cmc
cmovb
sbb
bound
sbb
fisubrs
pop
pop
xor
cmp
jno
pushf
adc
xor
jno
xor
les
or
jge
addl
shrb
xchg
mov
pop
and
enter
jl
repnz
dec
mov
int
les
insl
adc
cmp
mov
cmp
mov
xor
movsb
bound
pusha
inc
xor
sti
pushf
mov
iret
inc
add
stos
rolb
test
cmpl
pop
pop
es
push
and
lea
rorb
mov
xor
jl
inc
in
cmp
popf
sub
shlb
adc
or
inc
mov
inc
sbb
adcb
dec
in
jns
out
xor
add
bound
cmp
cmp
cmp
cmp
jle
mov
sub
add
jb
jae
and
and
in
call
mov
push
adc
xchg
fisttpll
adc
js
xorl
xor
aam
xor
aaa
pop
xorb
repnz
adc
stos
sub
in
cmp
aaa
cmp
icebp
and
and
ss
and
inc
and
mov
mov
add
in
sti
call
cmp
mov
mov
push
xor
mov
call
mov
mov
and
test
mov
dec
dec
adc
scas
aas
int
cltd
cmp
cmp
adc
jge
mov
xor
ljmp
dec
fmuls
mov
mov
jg
movsb
and
adc
outsl
leave
mov
mov
gs
or
sub
dec
movsb
insb
fists
lcall
in
dec
xor
ss
in
scas
mov
adc
mov
push
push
push
pushf
jae
and
into
inc
lock
xchg
repz
aas
xorl
dec
pop
mov
dec
clc
or
mov
sahf
sub
pushf
stos
wrmsr
cmp
xor
xor
push
fidivs
xchg
sahf
std
mov
pop
dec
xor
vrsqrtss
sub
and
cmp
cmp
cs
subl
aad
xchg
pop
sub
inc
inc
loop
test
daa
xor
cmovp
aad
pop
push
mov
stc
cltd
addb
shll
and
hlt
add
mov
adc
jle
mov
xor
mov
cmp
dec
gs
or
cmp
js
jl
movsl
inc
push
mov
inc
push
xor
rcrb
and
pop
jnp
fbstp
xchg
and
movb
pop
adcl
inc
pusha
bound
mov
stc
sub
cmp
xor
mov
aaa
insb
orb
mov
sar
xor
and
jl
jle
or
and
cmp
sarb
in
cmp
rcrb
popa
cmp
inc
cmp
dec
mov
mov
lods
rcrb
mov
cmp
pop
and
mov
mov
pop
and
leave
lret
rcrb
sti
std
js
sbb
cmp
repnz
cmp
cmp
xchg
les
insl
dec
push
movsb
sbb
pop
dec
jp
subb
and
cmp
jg
cmp
push
or
sahf
jae
aas
xchg
lahf
mov
bound
lahf
icebp
adc
jno
xor
xor
test
mov
aaa
jae
cwtl
push
adc
and
xchg
cmp
push
xchg
pushw
mov
fisubs
out
adc
mov
and
push
mov
in
jl
andb
jno
sbb
ror
and
bound
addr16
adc
cmp
add
jne
dec
mov
fcoms
in
enter
shlb
mov
jb
sub
jl
dec
lds
ds
mov
aam
icebp
cmp
mov
push
adc
stc
arpl
xor
xor
ss
xor
push
and
ret
sarb
add
ss
cmp
cmp
fsubr
jne
aas
in
push
xchg
adc
das
cld
xor
pop
jl
pop
pop
xor
jo
xorl
adc
repnz
sbb
pusha
pcmpeqb
xlat
adc
and
xor
lahf
leave
fld
push
cmp
lcall
fidivrs
mov
jl
bound
or
inc
xor
xor
cltd
pop
jo
sbb
sbb
adc
stc
and
call
aas
std
enter
leave
adc
cmp
xchg
loope
pop
pop
pusha
push
fsubrs
jae
xor
andb
sahf
into
adc
cltd
push
jo
repnz
adc
xor
inc
mov
repnz
andb
in
pop
cmp
cmp
cmp
push
cmpl
aas
mov
mov
adc
cmp
xchg
adc
dec
inc
xor
push
adc
leave
xlat
rcll
nop
nop
fwait
cmp
setp
int3
adc
and
incl
test
add
cmp
push
movsb
jae
call
lock
outsb
mov
add
mov
and
sub
mov
out
sbb
cmp
cs
adc
xchg
inc
icebp
cs
aas
adc
imul
cmp
inc
enter
inc
in
jb
cmp
pop
rolb
and
inc
xchg
mov
push
mov
and
adc
test
xchg
and
aam
xchg
jno
dec
ds
aad
clc
fnstcw
xor
daa
cmp
jecxz
sahf
and
test
cmpsb
lret
add
sbb
les
pop
and
mov
fsubs
inc
mov
inc
bound
mov
imul
sub
cmp
cmp
cmp
js
xchg
subb
sub
cs
fimuls
cmp
and
in
cltd
cwtl
in
das
and
inc
and
enter
sti
inc
mov
adc
ds
sbbb
cmp
cmp
out
mov
jno
pop
xor
and
loopne
call
xor
and
sub
ret
jmp
dec
mov
adc
jno
add
bound
dec
dec
mov
sub
out
pop
or
push
sbb
icebp
mov
adc
and
jae
out
adc
stc
inc
dec
lret
push
sub
into
dec
sub
sbb
std
mov
aaa
lret
mov
jmp
es
out
and
jecxz
push
and
cmp
insb
add
push
ds
aas
xchg
dec
enter
inc
mov
mov
icebp
cmpsl
xor
ljmp
push
and
enter
mov
leave
xlat
rolb
inc
pop
sbb
sbbl
adc
xchg
mov
push
sub
daa
push
push
mov
jmp
sti
sarl
lahf
in
jo
xchg
mov
arpl
repz
and
mov
mov
inc
mov
in
xchg
jl
mov
cld
adc
sub
or
ds
inc
loop
insb
jo
xor
in
call
cmp
xor
cmp
adc
aas
lea
adc
ljmp
cmp
xor
movb
ss
inc
aad
and
dec
inc
repz
and
xorb
adc
pop
jle
ficoml
jno
mov
aad
aaa
cmp
leave
in
push
rcrb
out
jo
sbb
and
jo
fisubrs
jo
xor
and
fbld
xor
sbb
lret
or
aas
dec
shrb
ja
xchg
enter
xor
push
xchg
push
enter
push
cmpsl
aaa
mov
pusha
push
and
leave
js
dec
cli
mov
cmp
neg
bound
xchg
pop
adc
jb
add
bound
xchg
jle
adc
aas
fs
test
and
jge
mov
insb
cmp
add
cmp
cmp
daa
call
sub
movsb
jb
sahf
xchg
in
std
call
loopne
push
bound
ljmp
outsb
leave
inc
push
cmp
xchg
bound
cmp
sub
dec
test
xor
adc
js
inc
sub
mov
pop
and
jb
hlt
shl
rolb
jp
push
sub
insl
add
mov
movsb
jle
dec
and
mov
mov
xor
adc
dec
sub
adc
popa
and
sub
ret
dec
cmpsb
mull
cmp
jne
pop
adc
or
pusha
mov
cmp
cmp
or
cwtl
xor
adc
mov
cs
push
mov
mov
inc
orl
adc
cmp
xchg
les
aas
jle
mov
js
inc
andnps
sub
xchg
loopne
cmp
andl
and
cwtl
sbb
cmp
adc
xchg
in
clc
cmp
cmp
icebp
lods
cmp
test
rcrb
pop
mov
add
ss
mov
call
push
xchg
mov
fdivs
and
pushf
add
nop
sub
in
inc
ljmp
sub
in
hlt
icebp
xchg
mov
mov
insl
ss
dec
les
and
jb
mov
in
cmp
and
mov
push
out
add
mov
xchg
jle
push
cltd
jb
add
jl
adc
cmp
xchg
clc
or
cmp
ds
daa
daa
or
cli
mov
sub
push
push
jmp
inc
push
jae
mov
mull
aad
sbb
xor
ss
mov
add
jno
das
and
out
insb
pop
call
hlt
mov
sbb
jb
pop
xor
inc
ret
enter
pop
sbb
xchg
ret
xor
xor
jle
adc
mov
and
dec
add
test
pop
and
loope
and
cmpsl
inc
sahf
stos
pop
push
jno
push
leave
mov
fs
cmp
inc
movsb
cmp
push
cmpb
inc
loope
sub
adcl
xor
cmp
sub
rcrb
movb
inc
push
shrb
sbb
mov
hlt
ja
mov
cmp
mov
mov
push
das
pop
dec
cmc
push
xor
gs
mov
xchg
ret
push
mov
and
adc
and
pop
lea
lock
push
ret
push
test
jl
testb
aas
push
fidivs
cwtl
or
jp
icebp
bound
or
xor
jl
insl
jnp
xor
and
je
jno
and
sub
sbb
ret
aas
mov
dec
cmp
in
jmp
bound
cmp
mov
fisubrs
sub
fld
repz
bound
in
cs
dec
cmp
and
scas
js
or
cmp
cmp
or
popa
lea
mov
cmp
adc
dec
aaa
or
repz
ret
orb
in
das
addb
movsb
xchg
pop
pop
and
pop
rclb
xor
mov
cmpsl
orb
adc
xchg
incb
or
adcl
dec
or
cmp
inc
scas
or
int3
cmp
mov
pop
xor
mov
and
push
out
pop
enter
inc
xor
and
xchg
in
int
cwtl
lahf
or
cmpsb
mov
jno
push
leave
data16
adc
cmp
or
in
push
sarb
inc
test
mov
hlt
test
mull
push
and
and
pop
mov
shr
cli
jmp
cwtl
add
xor
icebp
cmp
adc
cmp
mov
cmp
mov
nop
ss
jno
lret
xchg
add
push
add
push
and
adcb
shlb
sub
or
mov
cmp
inc
cmp
cmp
fs
fs
lahf
lock
aaa
aam
inc
cwtl
jl
repz
insl
and
ret
mov
test
es
dec
xchg
out
mov
mov
or
test
rclb
lock
mov
call
inc
push
push
and
xor
stos
and
mov
push
cmp
and
into
jo
pop
cmp
popf
jo
idivb
xchg
sbb
aas
xchg
mov
into
sub
add
dec
xor
out
cwtl
mov
jo
sbb
xchg
lods
push
xchg
movsb
push
push
jl
mov
dec
aas
test
xchg
repnz
pop
ret
cmp
xchg
mov
and
int3
in
out
hlt
leave
test
and
cmp
push
adc
xor
adc
lods
add
enter
pop
sbb
adc
jnp
push
dec
cmp
xor
cmp
sbb
xor
or
fmuls
cld
jb
and
add
outsl
and
das
call
or
inc
subb
jnp
pop
adc
dec
aas
mov
push
xchg
mov
inc
in
mov
fcomps
dec
inc
mov
pop
mov
sti
leave
subl
leave
sub
push
in
xchg
sbbb
pop
jl
jle
adc
cmp
movsb
cwtl
and
out
sbb
adc
xor
dec
dec
ss
insb
aaa
out
inc
or
cwtl
push
jb
xchg
pushw
mov
rolb
add
icebp
loope
push
adc
or
cmpsb
xor
cmp
cmpl
loopne
cwtl
lcall
pop
push
jl
inc
add
adc
and
lahf
dec
xlat
adc
adc
das
xchg
dec
rcll
fmul
idivb
cmp
das
imul
push
dec
xchg
xor
sub
push
or
adc
xor
and
and
movsb
js
mov
aam
scas
sub
push
leave
jb
popa
push
cmp
add
xchg
sub
clc
sub
aaa
xor
or
popa
adc
ret
xorl
ss
cmp
cmp
leave
subb
or
and
rcl
movsb
push
and
sub
xor
cmp
adc
pusha
inc
pop
or
jo
leave
idivl
pop
in
cmpl
pop
test
je
in
inc
pushf
int
and
pop
jb
in
or
das
das
push
xor
cmp
in
xchg
jbe
push
pop
mov
or
enter
mov
out
inc
loop
xchg
push
add
leave
jno
fsubl
dec
add
dec
cmpsb
xchg
or
add
jl
adc
cmp
imull
xchg
push
push
scas
and
adc
dec
enter
outsb
and
pusha
loope
and
mov
loop
or
cmpsl
adc
orb
mov
pop
sub
and
js
mov
into
push
pusha
push
fisttpll
jb
and
add
and
clc
sbb
adc
cmp
add
adc
lods
xchg
or
pop
call
or
jge
mov
lea
push
adc
cmp
adc
jae
pusha
and
into
mov
lods
movsb
adc
insl
xchg
out
or
cmp
cmp
jbe
adc
movsb
jl
mov
cld
test
fwait
push
nopl
fwait
das
mov
cmp
popf
in
mov
xchg
mov
cmp
inc
sbb
jb
nop
imul
cli
in
jl
cmp
test
aaa
mov
pop
insb
orb
adc
ss
imul
xchg
cwtl
das
xor
inc
in
mov
rcr
pop
cmp
stc
cmp
nop
into
xchg
call
mov
ret
sub
fmuls
aaa
pop
mov
adc
and
jo
test
das
mov
dec
mov
mov
sbb
mov
jo
cmp
jg
or
mov
stc
pop
add
in
fsubr
popf
sub
fldcw
push
mov
dec
xchg
dec
xor
adc
dec
and
mov
and
leave
cltd
push
call
cmpsl
mov
popa
ds
shrb
mov
cmpsb
adc
inc
call
mov
mov
test
inc
call
and
or
mov
paddusb
mov
sub
and
inc
das
mov
test
pop
xor
mov
adc
cmp
test
push
lahf
or
clc
nop
dec
sub
call
jl
pop
mov
or
ret
rcrl
les
jl
test
fistpl
xchg
test
adc
arpl
in
repz
add
cmp
rclb
push
ss
insb
xchg
cmp
pop
call
scas
lahf
lea
mov
push
xor
sbb
push
in
enter
out
addb
mov
aas
pop
mov
and
xchg
jp
jae
dec
cmp
cmp
dec
xchg
fisubrl
sbb
lods
push
pop
jge
or
movsl
xor
js
int3
shlb
bound
adc
aas
ret
lahf
cmp
adc
push
add
fwait
cmc
movsb
and
js
es
jae
in
fisubs
adc
and
aad
inc
cmp
test
xchg
stc
pop
dec
xor
mov
push
stc
sbbb
jl
imul
push
or
and
insb
jge
jg
pop
cmp
mov
loop
sahf
adc
xor
cs
in
mov
hlt
push
mov
xchg
xor
push
cmp
and
sbb
rcl
mov
bound
sub
xchg
pop
repnz
test
add
push
cmp
mov
xor
push
inc
dec
xor
or
inc
repnz
mov
mov
cmc
pop
and
test
xchg
sub
cmp
loop
mov
add
mov
jle
lea
mul
ret
or
adc
pop
mov
xchg
pop
add
mov
call
adc
dec
call
adc
fdivrs
mov
dec
xchg
arpl
adc
orb
and
and
xchg
jecxz
push
add
xor
adc
xor
jae
jmp
add
cmp
iret
and
xor
insb
cmp
sub
mov
inc
mov
data16
enter
repz
inc
or
pusha
xor
push
inc
cli
bound
mov
fs
enter
jnp
cmpsb
add
xor
stos
jl
and
in
outsb
in
popf
mov
sub
rcrl
xor
cmp
subb
andb
add
jmp
sti
loopne
bound
stos
cmp
cmp
fimuls
cmp
xor
ret
sbb
xor
mov
and
repnz
push
cmp
rolb
movsb
mov
inc
mov
mov
fcoml
mov
pop
inc
out
jo
xor
xor
shll
push
cmp
mov
fsubl
sub
dec
addb
cmp
mov
push
xor
bound
push
xchg
xchg
addr16
cs
xor
out
mov
ss
test
and
aaa
bound
mov
cmpl
orb
mov
mov
xor
xorb
into
loopne
xchg
adc
jno
test
sahf
sarl
pop
mov
adc
mov
xor
fisubrl
dec
fnsave
jp
adc
aad
xor
xor
push
cmp
or
push
les
xor
scas
sub
cmpsb
mov
cmp
pop
das
stos
jno
das
aaa
push
leave
xchg
jge
or
sahf
and
daa
rorb
femms
aam
cmp
lods
sub
int3
inc
lret
sub
xchg
das
xlat
or
mov
mov
dec
and
sub
in
bound
lods
in
mov
inc
add
and
mov
mov
push
mov
outsl
sub
pushf
cmp
mov
cwtl
or
adc
cmp
or
push
in
jecxz
push
jbe
push
cmpsl
jno
gs
into
leave
xlat
arpl
or
and
hlt
inc
or
mov
lcall
cmp
lahf
push
outsb
je
xchg
sbb
sarb
push
cmp
sbb
hlt
bound
js
ss
les
add
and
mov
iret
and
imul
mov
sbb
push
mov
loop
psubusb
adc
cmp
xor
push
add
and
add
in
or
and
clc
test
mov
dec
cmp
adc
xchg
or
ss
cwtl
xor
int
jecxz
mov
pusha
cmpb
leave
or
xor
movsb
loopne
xchg
mov
test
add
bound
inc
jae
loopne
dec
inc
or
or
push
push
inc
xlat
sarl
or
mov
outsl
cmp
aaa
jp
cmp
popf
push
enter
cmp
jle
xor
fsubrs
ficoml
mov
nop
xor
ret
and
cmp
or
add
or
sub
or
sbb
push
cmp
sti
or
xor
mov
inc
jl
add
nop
push
sbb
lods
and
xor
mov
jmp
sbb
add
or
adc
xor
dec
xor
out
sub
jne
out
arpl
mov
inc
dec
test
and
add
ljmp
emms
adcl
ds
jnp
in
pop
dec
mov
add
dec
jl
adc
jb
dec
stos
test
xor
and
imul
fmulp
js
push
inc
or
loopne
push
repnz
cmp
dec
ss
jo
sub
xor
iret
lahf
call
dec
sbb
ljmp
push
add
cmp
sub
mov
loopne
loop
pop
jp
cmp
jl
dec
ljmp
jmp
push
lds
or
pop
lea
cmpb
cmp
cs
test
pop
loopne
push
sub
lret
adc
and
cmp
jnp
ljmp
das
pop
mov
and
push
fs
pusha
inc
dec
sbb
fs
stos
sub
push
in
pop
or
les
or
aas
inc
loopne
jle
insb
cmp
sub
sub
mov
test
bound
jle,pn
js
sbb
leave
cwtl
nop
repnz
scas
lahf
mov
and
xchg
nop
mov
push
cmp
in
jbe
push
loope
and
cmp
sub
xchg
cli
inc
fimuls
pop
and
inc
jmp
es
sahf
mov
xchg
mov
clc
cmp
test
rcrl
jb
cmp
xchg
add
sbb
dec
adc
sub
xchg
push
dec
inc
jo
xchg
mov
and
and
or
enter
and
inc
jge
push
test
xchg
fcompl
cs
xorl
test
fsubrs
mov
call
add
les
sbb
jbe
xchg
daa
mov
setbe
aaa
or
adc
sbb
repz
ds
cmpb
ss
movsl
bound
inc
cmp
cmp
test
mov
xchg
iret
push
add
adc
and
mov
mov
xor
xchg
xchg
add
jno
jo
add
xchg
xchg
push
mov
dec
clc
xor
cmp
out
xorb
push
sub
mov
sbb
in
mul
xor
push
fsubs
sbb
and
ja
clc
xchg
clc
sbb
mov
jbe
scas
in
adc
push
jg
or
bound
cmp
ret
fsubrp
push
shll
xchg
xor
daa
push
insb
je
sbb
xchg
jo
add
and
inc
xor
add
cmp
cmp
or
push
or
pop
cmp
and
les
popf
orb
and
mov
dec
mov
mov
jmp
mov
js
or
and
fdivl
pop
cmp
push
push
sbb
bound
inc
imul
or
xchg
andb
xchg
scas
mov
in
xor
sbbb
lret
test
enter
dec
and
mov
cmpsb
pop
and
mov
cs
xchg
aas
pop
js
pop
push
cmp
sbb
mov
push
ret
mov
dec
pusha
test
scas
push
loop
dec
jne
cld
enter
dec
jo
mov
in
push
and
push
cmp
out
ds
into
or
cmp
push
inc
mov
ficomps
dec
pause
cmpsb
lcall
ret
sub
nop
es
add
or
mov
mov
insl
and
sarb
inc
cmp
inc
pop
mov
pusha
mov
mov
sub
sti
push
adc
mov
rorb
arpl
ret
aam
lds
dec
cmp
mov
sbb
push
jg
push
add
xor
jb
ret
sub
xchg
or
outsl
lahf
adc
xor
inc
test
and
pushf
adcl
pop
mov
bound
cmp
push
mov
sbb
bound
daa
cmp
jno
pop
jbe
mov
lods
mov
mov
sub
insb
mov
jl
and
pop
cltd
nop
mov
mov
lahf
in
pop
and
dec
cmp
leave
stc
jnp
dec
push
dec
fidivrl
setl
push
aaa
jge
dec
adc
insb
adc
cmc
addr16
inc
add
pop
testb
xchg
inc
and
fcmovb
push
adc
cmp
push
nop
mov
aas
add
movsl
fs
push
dec
cmp
out
pop
push
bound
ds
in
xorb
mov
in
movsb
repnz
int
and
dec
mov
test
push
mov
cmp
lret
or
mov
bound
mov
faddp
cmp
mov
mov
ret
fidivs
push
call
xor
pusha
mov
bound
test
fbstp
push
in
pop
test
cmp
orl
add
and
fdivl
add
mov
into
nop
xchg
jno
add
stos
push
add
fdivl
dec
inc
xchg
dec
daa
addr16
shrb
push
cmp
push
mov
adc
jb
xor
clc
ljmp
sub
jae
jl
sahf
and
pushf
jo
mov
repnz
aas
or
js
ret
push
pusha
push
and
cmp
addb
cmp
mov
fidivrl
pop
ja
mov
les
sub
mov
xchg
femms
add
lahf
jecxz
sub
or
mov
es
nop
aam
call
or
jl
push
or
xor
adcl
fdivrs
mov
push
push
rorb
xor
and
aam
pop
adc
js
or
inc
addl
adc
mov
daa
mov
cmp
in
push
sub
mov
fdivrl
cmc
mov
insb
adc
sub
push
dec
cwtl
lds
pop
add
les
mov
add
or
dec
nop
int3
rorl
cmp
jl
jle
dec
loop
push
xor
add
jle
dec
dec
and
sbb
or
and
out
in
cmp
movsl
inc
push
insb
scas
sarl
mov
inc
pusha
lea
cmp
and
cmp
adc
lds
pushf
aaa
ror
movsb
add
les
mov
and
mov
pop
cmp
loopne
inc
cmc
clc
and
insb
jecxz
rep
mov
jmp
aaa
and
popa
inc
lret
cwtl
xor
jb
pop
push
adc
and
pushf
leave
shrb
push
fcmovnbe
sbb
es
aas
loopne
jl
jg
push
leave
and
or
fsubrs
pop
jo
jne
fucomi
pushl
xlat
add
sub
nop
adc
inc
js
fcoml
stos
cmp
push
icebp
cmp
test
cmp
dec
or
pusha
jb
adc
icebp
das
xor
ss
add
jno
add
jp
je
xchg
sbb
les
xor
push
cmc
and
and
mov
cmp
pop
movsb
jb
int3
push
jmp
push
lret
inc
das
adc
push
or
dec
pusha
push
xor
cmp
in
lds
cwtl
mov
repnz
push
cmp
sub
adc
mov
inc
je
das
fnstenv
dec
cmp
cmp
sbb
es
mov
aam
adc
rolb
repnz
stc
fsubrl
inc
shr
jmp
iret
popf
mov
stc
movsb
adc
push
cmp
and
nop
ds
mov
insl
sub
mov
repnz
cwtl
push
or
cwtl
clc
dec
push
mov
pop
inc
and
add
or
dec
sarb
jge
js
movsl
adc
cmp
and
sub
js
push
sub
and
pop
or
cwtl
add
lods
and
lcall
addb
or
jl
or
and
cmp
mov
movsb
shll
cmp
or
mov
cmp
sbb
loope
ret
xor
jo
mov
or
dec
xorl
das
and
shr
xorl
mov
push
xor
mov
std
fcoms
cmp
mov
clc
sahf
bound
inc
test
rcrb
rcrb
jl
adc
and
adcb
shrb
pop
ljmp
push
mov
daa
popl
sub
and
or
addr16
add
xor
xor
inc
mov
add
nop
and
out
ret
mov
fwait
orb
and
push
sbb
pushf
mov
adc
jle
movsl
ss
adc
dec
pop
and
push
and
aam
in
clc
sbb
mov
ficompl
pop
movsb
and
ds
dec
nop
fs
aas
pop
rcll
fidivrs
stos
sub
hlt
int3
jg
lea
int
test
push
mov
rol
filds
sub
shlb
sarb
or
das
shrb
cmp
sahf
mov
pusha
and
insb
cmp
inc
nop
rcl
jno
mov
push
sarb
xchg
loopne
and
mov
xor
test
stos
inc
pop
mov
pop
xchg
mov
movsb
jbe
mov
ds
js
xor
push
and
cmp
jmp
insb
and
and
cmp
dec
mov
scas
adc
adc
cmp
and
pop
test
je
cmp
clc
mov
dec
nop
mov
cmp
in
mov
mov
inc
and
cmpsl
in
aam
adc
xchg
add
xchg
ljmp
cmp
cmp
xor
bound
rclb
in
and
xor
lahf
mov
nop
aaa
fnstcw
sub
pushf
or
xor
in
and
and
ficomps
xor
cmp
jae
cld
inc
xchg
shrb
lahf
rorl
sub
push
cmp
cmp
sbb
or
mov
jns
popf
and
icebp
mov
in
insb
das
shll
mov
xor
and
lahf
jl
sbbb
xor
jp
call
loop
xor
inc
mov
push
xor
pop
mov
cltd
es
cmp
leave
faddl
loope
push
pop
test
cmp
xor
xor
inc
or
aaa
adc
je
lods
lods
push
inc
lods
inc
add
jecxz
or
repz
dec
and
pop
ds
sub
add
or
shrb
cmp
inc
cmpsl
or
and
int
jb
arpl
fimuls
xor
loop
adc
dec
fs
pop
nop
dec
aam
jbe
sahf
mov
movsb
dec
sahf
mov
jmp
add
mov
ds
loopne
nop
in
mov
adc
sub
ja
stc
ss
orb
sbb
lcall
xchg
xor
cmp
bound
or
lahf
loopne
jg
jns
pop
je
mov
push
add
mov
outsl
xor
lahf
shr
enter
push
stc
or
add
mov
pop
or
outsb
lret
loopne
jle
inc
je
test
in
notl
bound
pop
stc
push
push
inc
dec
mov
cmp
and
lcall
sbb
cltd
cmpl
cltd
and
add
js
mov
xchg
addb
icebp
mov
add
push
ret
mov
in
or
mov
adc
test
push
std
jb
xlat
fdivrl
sbb
pushf
bound
jae
jl
test
daa
nop
adc
cmp
cmpsb
in
test
add
cmp
mov
int
lock
idivl
inc
shll
mov
fdivrs
lahf
mov
js
and
hlt
pop
xor
insb
lods
or
dec
xchg
fs
pop
les
push
dec
clc
das
sbb
stos
dec
int3
test
cmp
mov
mov
dec
scas
je
adc
inc
mov
mov
xor
or
mov
adc
adc
pop
cmp
dec
lds
xor
ja
mov
ja
aas
and
or
lahf
pusha
lret
dec
stos
mov
sbb
cltd
mov
dec
pusha
pushf
lret
pop
test
aad
or
in
lahf
hlt
pop
push
orb
out
cmp
fnstenv
jp
mov
sub
mov
push
cmp
push
jo
lods
sahf
dec
shll
adc
das
cmp
sbb
bound
lahf
dec
jo
rclb
cli
or
nop
add
adc
inc
mov
lds
push
dec
leave
shll
lret
nop
adcl
fcoms
inc
stos
loopne
test
cmp
jb
dec
xor
loopne
dec
xchg
iret
lods
imul
pushf
and
sahf
cli
add
movsb
jns
cmp
dec
inc
repz
mov
fsubrl
cmp
xor
data16
icebp
cmp
fwait
das
cmp
fsubr
dec
mov
cmpb
push
pop
arpl
cmp
daa
ss
hlt
mov
adc
inc
repnz
sub
add
push
pusha
in
scas
test
pop
cmp
jl
pop
ja
pusha
and
fdiv
js
inc
add
lcall
lret
scas
shll
addr16
mov
fiadds
jb
inc
pop
cmp
mov
cmp
pusha
sub
aas
pop
or
xor
cmp
inc
test
xor
mov
cwtl
nop
mov
fs
mov
pop
sub
dec
add
fdivl
movsb
lock
and
mov
shrl
adc
mov
das
jns
ss
adc
or
cli
repz
into
sbbb
inc
xchg
or
es
js
adc
mov
ja
jo
rolb
daa
loopne
gs
cwtl
mov
or
cmp
repnz
sub
popf
inc
add
push
into
inc
cmp
mov
loope
mov
cwtl
pop
lods
cltd
inc
cwtl
xor
jmp
jle
in
push
pop
mov
or
pop
mov
test
add
sub
cmp
mov
nop
sub
aaa
adc
stc
jge
push
mov
lock
mov
and
mov
bound
push
shl
sahf
cmp
sbbl
imul
repz
adc
and
pusha
adc
or
xchg
js
adc
and
das
pop
inc
fcompl
mov
mov
or
lea
rolb
dec
vzeroall
or
jle
xorb
xchg
je
adc
xchg
push
or
and
stos
push
cli
ficoml
mov
gs
xor
fmulp
mov
xchg
loopne
fsts
or
adc
stc
dec
mov
je
mov
out
or
xor
or
nop
add
pop
mov
push
cmpsl
clc
push
xor
mov
ret
repnz
mov
popf
mov
sbb
cwtl
dec
rorb
sahf
mov
cmp
and
sub
int3
ret
stos
or
rclb
into
and
push
add
rorb
push
jne
orps
pop
cmp
mov
or
ds
mov
cmp
xor
sub
psllq
adc
test
nop
cmp
inc
and
xchg
ficomps
stc
inc
clc
fwait
pop
or
push
sub
and
xor
in
ja
push
and
leave
test
sbb
hlt
dec
adc
adc
sahf
clc
js
add
cmp
aad
push
repz
in
cmp
xor
int3
insb
push
push
mov
call
rolb
push
and
movsb
in
push
insb
fbstp
add
mov
dec
push
mov
push
out
stos
jbe
or
or
repz
cmp
push
xor
inc
pop
test
je
shrb
in
das
inc
push
loopne
and
jl
inc
mov
jp
mov
mov
mov
bound
or
shlb
sub
test
jmp
or
test
iret
fcoms
xchg
outsb
shl
push
cwtl
adc
mov
in
inc
xor
sbb
mov
push
pop
movsb
mov
arpl
pop
bound
inc
imul
add
popf
popf
push
dec
sub
mov
ret
cmp
jb
data16
sbb
and
cmp
jns
clc
mov
addr16
cmp
fsubl
pusha
push
jl
sbb
addl
mov
cli
xchg
test
mov
push
clc
bnd
adc
aas
rcrb
jmp
cld
lea
aam
stos
outsb
icebp
adc
cmp
push
cmp
or
and
mov
cmpb
fdivs
dec
push
add
sub
mov
jb
ja
fmul
adc
cmp
pop
cmc
scas
xorb
jl
mov
jl
stc
and
and
mov
pop
fs
mov
xor
pmaxsw
push
and
andl
jne
and
cmp
nop
shlb
dec
in
cmpsl
popf
mov
push
ror
imul
repnz
add
xor
inc
xor
pusha
mov
lret
testl
cmp
lods
and
repz
pushf
mov
pusha
cmp
sub
nop
cld
push
das
cmp
into
adc
loopne
mov
pushf
jb
xchg
jg
cmp
ss
jl
mov
fidivrs
pushf
inc
dec
mov
inc
bound
and
xor
movsb
inc
fsub
rolb
rcll
in
pop
leave
cltd
sbb
into
cwtl
add
inc
mov
shrb
mov
pop
js
rorb
repz
adcb
insb
and
mov
xchg
inc
lock
push
dec
adc
push
or
aas
xor
pop
cs
hlt
sahf
jp
shlb
insl
sub
das
dec
pusha
test
out
fdivs
ss
int3
xchg
xlat
add
nop
cmp
push
outsl
xorb
imul
mov
cmp
aas
out
dec
jge
in
cmp
mov
push
cli
xchg
and
sub
cmp
jo
sub
inc
ja
and
nop
lcall
stos
push
hlt
sti
mov
xchg
enter
jae
sbbb
adcb
or
pop
mov
pop
mov
call
or
aas
lcall
sub
fisttpll
cwtl
xchg
xchg
in
push
jecxz
xor
adc
xor
insb
insb
jl
hlt
sbb
andl
das
cmp
clc
mov
jb
sbb
les
mov
sar
rcrl
cmp
or
fs
jl
int
lahf
rcrl
push
mov
out
sub
mov
and
or
pop
mov
je
testl
repz
cmp
sub
int3
inc
jo
jb
aas
dec
fcomp
inc
lea
pop
jnp
mov
push
cmp
ss
push
loopne
in
mov
sbb
popf
or
push
inc
sar
pop
js
and
cmp
adc
mov
imul
or
ss
or
and
or
pop
cld
mov
aaa
jl
orb
aas
and
mov
dec
cmp
inc
push
inc
pop
sub
adc
cmp
mov
sbb
stos
jne
xor
int
lret
cli
fbstp
fidivl
popa
jl
cmc
mov
pop
add
call
cmp
xor
jl
dec
std
lret
addr16
jnp
push
xor
sahf
push
loop
ret
call
sbb
push
xchg
lods
imul
push
mov
fs
add
aas
je
daa
fdivl
in
cmp
in
dec
mov
or
cwtl
stos
repnz
xor
mov
outsl
jl
add
loopne
xchg
jecxz
lock
pop
or
dec
adc
fiadds
mov
aam
adc
sbb
pop
test
das
sbb
jl
dec
mov
dec
jge
pusha
daa
jbe
mov
inc
shr
lret
mov
leave
test
dec
pop
sub
xor
xor
leave
aas
cmp
pop
mov
xchg
push
adc
andb
cmc
leave
xchg
rcl
add
shrl
xor
and
stc
xor
loop
das
pop
xor
iret
rcl
out
inc
inc
mov
shrb
pusha
inc
nop
jl
inc
mov
xor
aaa
or
or
fsubrs
cld
or
add
sar
adc
andl
pop
insb
insl
loopne
cmc
popf
mov
nop
or
enter
mov
xchg
xchg
cmovae
sub
push
dec
ds
test
xchg
xorl
adc
dec
xchg
pop
fadd
jp
pop
inc
jb
pop
fdivs
nop
je
in
push
mov
jns
ss
dec
pop
mov
lret
dec
clc
shl
push
cmpxchg
jae
repnz
and
pop
inc
or
dec
or
mov
and
movsl
cmp
jb
or
loopne
dec
xchg
insl
jnp
call
pop
aas
leave
roll
sub
bound
shlb
jl
push
push
cmp
movsb
and
ficomps
stc
and
rclb
int3
sti
nop
fidivs
sub
mov
pop
sub
xor
mov
and
jo
inc
fs
loop
aas
or
lcall
xchg
enter
and
popf
add
or
xlat
push
in
popa
lahf
call
jnp
out
dec
sub
rorb
fbstp
sahf
add
jb
and
bound
jl
leave
loop
inc
imul
ljmp
jg
aam
mov
xor
ss
out
sahf
mov
add
xor
lock
or
cmp
xor
sub
pop
aaa
aas
sbb
cmp
cmp
cmp
dec
or
ss
movsb
push
and
call
jl
push
pushl
add
and
mov
lret
in
and
leave
movsl
imul
jl
pop
scas
dec
subb
pop
cmp
pop
lcall
xor
pop
aaa
push
ds
test
inc
cmp
jge
out
push
mov
lods
ficoml
xor
push
push
push
fnstsw
shll
leave
leave
je
cmp
repnz
xor
xor
or
pop
loopne
sub
push
mov
nop
addb
push
sub
sub
xchg
mov
push
xchg
sub
hlt
push
pop
pop
jno
lahf
cmp
adc
mov
je
aaa
dec
imulb
int
pop
ja
mov
mov
pop
insb
push
shlb
inc
leave
rolb
in
push
dec
ljmp
pushf
pop
push
pusha
mov
sti
push
lods
mov
shl
enter
sub
xchg
mov
arpl
or
lcall
push
or
sarl
scas
add
cmp
repnz
or
inc
xchg
inc
fucom
jb
mov
push
enter
xor
pop
xor
mov
ds
or
inc
jp
dec
jb
push
clc
jo
fs
or
sub
test
jl
xchg
cmp
aad
xchg
pop
mov
mov
inc
cs
aam
adc
cli
add
bound
jno
js
mov
ss
xor
insb
test
clc
sub
rorl
add
lahf
andl
fldcw
xor
push
mov
hlt
or
pop
enter
and
in
test
insb
mov
or
cmp
aas
cmp
movsb
sub
daa
cmc
pop
jo
or
xor
and
jle
fwait
add
mov
out
stos
push
insb
adc
insb
lods
mov
and
and
push
inc
arpl
aam
or
xor
mull
add
cmp
jae
push
xchg
and
push
add
cmp
xor
stc
das
dec
loopne
push
pop
jb
add
mov
adc
sbb
jge
mov
dec
andb
sub
and
or
das
stos
push
sbb
js
nop
sub
in
cmp
movsl
adc
adc
cmp
jl
in
cld
pop
addr16
push
xor
nop
push
stc
dec
es
fdivrs
mov
jo
das
cmp
mov
lods
add
jb
jno
cmp
or
scas
sahf
les
dec
shlb
xor
jbe
js
in
in
call
xor
scas
dec
shrl
sti
adc
pop
out
cmp
push
aas
cmp
clc
nop
pop
repz
adcl
lret
sahf
aad
ss
xorl
pop
push
pop
add
and
popa
adc
and
pop
add
add
mov
leave
aas
xchg
cmp
std
or
inc
sahf
int
pop
pop
mov
ds
dec
orl
push
movsb
push
dec
jb
mov
test
les
mov
sbb
inc
sbb
lods
out
popf
push
sahf
push
mov
inc
aas
bound
xchg
inc
mov
les
sbb
pop
xchg
mov
scas
pop
stos
repnz
xor
fisttps
sub
mov
push
repnz
jne
ret
pop
lea
pop
shrl
push
loopne
xor
aas
lods
mov
loop
add
and
imul
dec
dec
pop
dec
xchg
inc
dec
or
jo
xor
andl
in
and
jno
adc
jl
mov
fbstp
cmc
leave
xor
jl
xchg
jno
aas
add
add
cmp
cmp
or
mov
xchg
pop
mov
bound
shrl
push
nop
dec
xor
mov
pop
push
dec
fdivs
sub
pop
cmp
jmp
aam
sub
pop
stos
pushf
fs
mov
cmp
pop
mov
mov
bound
aaa
push
loope
ret
adc
mov
or
and
and
and
sub
mov
pop
movsb
jp
fwait
push
jb,pt
mov
jnp
cmp
inc
pop
or
lret
mov
not
or
or
push
push
das
sub
clc
addr16
rcll
cmp
mov
push
cmp
rclb
sbb
jle
orb
mov
clc
sahf
xor
pop
lea
cmpsl
loopne
dec
mov
push
fdivs
xor
popa
sbbb
adc
mov
into
rclb
or
jns
mov
jge
inc
fistl
pop
mov
loope
ret
aad
jl
test
adc
lahf
mov
aam
mov
repnz
fldenv
pusha
mov
pop
ss
cmpsb
mov
clc
and
enter
dec
cmpsl
xor
cld
fs
mov
aam
leave
pop
or
push
nop
add
cmp
add
call
inc
cmp
or
xchg
inc
jl
or
fsubp
dec
push
xor
and
sahf
pusha
clc
ljmp
or
inc
cmp
loop,pt
iret
push
loopne
xor
xor
icebp
les
ret
xor
cmp
faddl
xor
cld
push
jnp
adc
ficompl
add
js
cmpsl
aaa
push
ret
jb
out
pop
cmp
scas
xchg
in
cmp
push
sbb
add
xchg
aam
andl
add
ljmp
setp
adc
dec
mov
je
or
push
mov
or
and
daa
mov
ss
mov
add
bound
adc
cmp
pop
xor
xor
adc
xor
loop
insb
add
and
mov
jle
mov
add
cmpb
and
call
jb
insl
xor
cmp
fbstp
imul
leave
cli
daa
mov
arpl
gs
test
pop
adc
sub
jp
cld
shll
nop
cmpb
cld
ja
dec
xchg
or
push
das
xorb
test
dec
aad
and
inc
pop
jg
add
and
cmp
mov
jb
aaa
negb
addr16
mov
das
stc
mov
xlat
es
imul
or
xor
inc
andl
sub
es
jp
mov
xor
and
mov
dec
shl
cmp
sub
jns
dec
outsl
test
inc
loopne
daa
xor
sub
inc
cmp
mov
mov
and
subl
adc
jl
or
lock
test
push
call
sub
clc
jmp
jmp
mov
cmp
push
out
push
outsl
data16
mov
and
jle
jmp
xor
imul
pop
in
cmp
xchg
push
imul
mov
test
imul
fistps
and
ja
and
in
add
xor
pop
inc
pushf
push
in
lock
jo
sbb
dec
cld
or
je
adc
xchg
sbb
jnp
cli
imulb
add
ljmp
adc
add
inc
mov
xchg
pop
add
mov
sbb
cmp
aam
inc
adc
repz
aaa
lret
das
push
push
dec
dec
stos
enter
andl
xchg
into
cli
mov
jae
out
lahf
test
mov
lea
sti
or
arpl
adc
ficoml
cli
xor
xor
dec
sbb
pop
dec
mov
xchg
inc
gs
jmp
and
mov
adc
mov
mov
push
xchg
leave
les
sbb
xchg
xchg
dec
adc
and
push
adc
inc
ja
clc
inc
xchg
sbb
fucomi
ret
adc
push
cmpsl
inc
add
neg
or
and
add
shrd
mov
shl
mov
clc
pushf
clc
pusha
repnz
jmp
pusha
call
pusha
cmc
pusha
cmp
call
jmp
push
lea
call
test
pusha
cmp
jmp
sub
jmp
jmp
pusha
bt
mov
add
pushl
pushf
pushf
pushf
lea
jmp
lea
jae
jmp
bt
cmp
movb
push
pushf
lea
jb
cmc
jae
bt
cmp
push
lea
jae
sar
jmp
out
sbb
or
sti
jae
adc
jae
add
out
dec
shll
cmp
mov
imul
pop
mov
xor
int
lds
mov
jns
adc
mov
test
lea
arpl
fcom
and
adc
lods
ficoml
lea
rcr
mov
aad
std
loopne
enter
fidivrs
or
clc
mov
add
cmp
mov
pushf
stc
call
mov
lea
call
pushf
pushl
call
pushf
rep
movzbl
movzbl
mov
pushf
lea
jmp
push
lea
call
pusha
push
mov
push
pusha
lea
jmp
scas
inc
mov
or
push
mov
xor
fwait
aaa
add
mov
out
out
imul
inc
outsl
sbb
and
pop
xchg
or
mov
gs
sub
pop
gs
inc
outsl
iret
adc
pop
add
or
jecxz
push
fimull
cld
in
sbb
sti
dec
fidivrs
xchg
mov
sbb
or
and
cmp
sub
mov
push
lock
or
out
cli
repz
bt
cmc
pushf
sub
movb
pushl
mov
rep
pushl
pop
pop
mov
movb
pushl
pushf
movb
lea
jmp
cmpsl
int3
or
mov
jne
push
in
aad
test
loope
ss
xchg
and
movsb
ljmp
push
mov
ficompl
sbb
cli
push
push
dec
fs
data16
push
pushf
fs
and
je
pop
jl
mov
mov
pop
les
push
lcall
jae
xor
frstor
pop
sbb
jge
xchg
sbb
cmp
jl
jg
inc
ljmp
or
xor
pop
call
bt
pusha
repnz
call
xor
and
push
test
mov
mov
cmpsl
jg
dec
aaa
xor
cmp
bound
lods
push
inc
shll
gs
dec
adc
sub
mov
int3
mov
push
mov
pop
fsubrs
add
jp
aas
push
jge
push
pop
shrl
cld
out
inc
sub
lret
mov
pop
fisubrl
push
cmpsb
pop
dec
mov
mov
add
jae
data16
or
jae
adc
fwait
mov
sub
or
jo
add
and
sarl
js
and
fisubl
lods
insb
enter
xor
jbe
repnz
cld
fcomps
ss
jns
push
cmp
pop
jnp
sahf
shlb
jl
mov
ret
sub
sub
inc
mov
pop
add
dec
adc
add
nop
cmp
sbb
cmp
lods
lock
jnp
roll
outsb
mov
call
mov
pushf
mov
movw
mov
pushl
ret
cmp
xor
stc
mov
jmp
xchg
das
xchg
testl
stos
xor
repnz
lcall
shrb
and
add
jecxz
es
gs
inc
popa
roll
lcall
das
and
pop
cwtl
push
neg
mov
pop
lcall
inc
sarb
xchg
lcall
test
shll
pop
in
and
rolb
push
imul
shl
jmp
mov
xor
imul
mov
mov
adc
insl
dec
dec
xor
mov
ds
adc
mov
pop
call
adc
stc
clts
mov
xor
test
leave
mov
bound
ret
mov
mov
mov
jne
sarl
jbe
pop
xlat
lahf
mov
pop
or
mov
dec
adc
pop
in
imul
mov
scas
lock
jmp
push
push
testb
jmp
call
outsb
data16
push
xchg
iret
lock
jge
add
in
dec
movsl
dec
insl
push
dec
xchg
ds
sti
sbb
sbb
fs
sub
pop
push
testl
xchg
std
jo
pop
and
pop
dec
inc
adc
fwait
aad
insl
int
mov
hlt
or
mov
loope
jmp
sbb
xchg
push
fcoms
mov
call
mov
jl
cli
fdivp
lds
inc
mov
sbb
push
insb
ret
icebp
pushf
cmpsb
xchg
adc
popa
pusha
xchg
xchg
mov
inc
mov
int
pop
sub
scas
adc
sub
ret
mov
jp
sub
dec
imul
pushl
push
pusha
movb
pushl
ret
lea
mov
push
lea
jmp
clc
clc
sub
cmp
cmc
cmc
xor
bt
cmc
sub
call
repnz
jmp
pushf
bt
pushf
cmp
pushf
push
pushf
pushf
lea
jmp
arpl
cmc
mov
mov
das
mov
push
mov
push
push
inc
pop
stos
mov
popf
lds
mov
mov
shlb
add
mov
mov
mov
add
or
jae
repz
fwait
insl
in
mov
sub
push
imul
stos
push
add
mov
outsb
notb
sahf
push
lea
ja
in
rolb
mov
mov
adc
fwait
incl
dec
dec
arpl
outsl
mov
and
pop
sub
mov
pusha
setge
lods
test
cmp
xor
jmp
lea
jne
inc
test
sub
btc
cmc
bt
mov
dec
push
pushf
add
bt
test
inc
add
mov
cmc
test
jmp
add
inc
js
je
jb
arpl
jae
cmp
pusha
movw
lea
jae
shld
movzbl
seto
cmc
mov
clc
bswap
setle
mov
btc
btc
call
jmp
js
stos
repnz
adc
shrb
or
in
xchg
push
cmp
push
mov
jb
daa
hlt
loop
cli
lret
scas
xchg
sbb
cs
adc
pop
aas
jle
sub
mov
loop
hlt
ficompl
jno
and
sub
sbb
inc
lret
out
lret
xchg
aas
push
rolb
pop
jecxz
xor
dec
jp
call
pop
jge
lcall
push
push
arpl
jne
xchg
adc
pop
mov
lea
ret
clc
in
hlt
and
daa
pop
mov
sub
and
adc
packsswb
dec
sbb
cmp
jmp
ja
enter
dec
adc
sahf
inc
mov
xor
cmp
leave
cltd
fs
mov
sbb
push
mov
leave
mov
lahf
xchg
mov
fsub
andl
rcrb
rclb
icebp
sub
mov
addb
cmp
jno
out
inc
cmp
pop
sub
mov
sbb
pushf
lock
mov
popf
cmp
enter
clc
call
mov
jecxz
ret
cmp
pop
mov
sub
or
out
inc
push
mov
push
jnp
sbb
push
or
xor
fstl
mov
andl
int3
push
add
lret
into
xor
pop
out
sub
pusha
cwtl
ret
enter
mov
pop
and
xor
add
push
dec
cmpsl
sti
and
insl
dec
out
mov
stc
fcompp
mov
stos
lret
inc
cs
gs
es
arpl
dec
inc
fxam
in
pop
xchg
mov
ja
sub
and
sbb
add
cmp
pop
add
cmp
ja
jne
inc
adc
scas
xor
sub
pop
jp
adc
fists
xchg
xchg
cs
pushf
and
in
aam
es
inc
xor
adc
sub
inc
add
xchg
xchg
pop
jbe
dec
in
push
pop
clc
cwtl
xor
es
out
stos
cs
sbb
cmc
pop
xchg
jge
imul
andb
push
jns
aam
aas
mov
ret
lock
push
sub
xlat
dec
xchg
push
lret
pop
xlat
pop
push
ret
sarb
xchg
sbb
js
hlt
fistl
push
xor
adc
dec
mov
adcl
ret
mov
xchg
pusha
sbb
rorl
pop
inc
repz
sbb
xchg
cmp
cwtl
dec
or
fisubl
xchg
ret
jp
pushf
sbb
mov
push
xor
std
adc
or
cmc
lea
sub
xor
insb
cmp
insl
lock
and
in
pop
xor
mov
loopne
fnstsw
inc
movsb
jo
pusha
mov
fcoml
or
mov
outsl
adc
loope
jno
mov
dec
xorl
sbb
adc
mov
int
mov
leave
jge
test
pushf
inc
add
je
or
xor
push
cs
call
mov
mov
lret
arpl
shrl
push
sbb
nop
adc
adc
cld
clc
sbb
aam
hlt
fcoml
je
pushf
out
mov
sbb
pop
fisttpll
fsub
mov
inc
leave
dec
lds
stc
pop
int3
or
pop
out
xor
cmp
repz
adc
aaa
add
out
stos
jmp
lock
xchg
pop
adc
lds
cmpsb
jecxz
movsb
jae
inc
lea
rorl
xor
xor
movsl
and
xchg
dec
adc
adc
or
fdivrs
pop
jae
imul
cmp
fs
jne
setp
ror
btr
sub
cmc
shld
aad
btr
mov
and
add
not
sub
sub
xor
mov
jmp
jmp
jmp
andb
or
sbb
ret
pusha
outsl
loopne
ret
aam
jg
mov
add
and
adc
mov
dec
out
rcr
dec
call
shrl
or
xchg
in
sub
xor
stos
pop
jae
sbb
ljmp
leave
add
shrb
jl
inc
push
pop
loop
fstpt
mov
mov
sbb
xlat
pop
aas
add
clc
movsb
cmp
ja
nop
imul
or
pop
bound
and
loope
idivl
xor
aam
xor
mov
xchg
dec
out
fidivrs
and
mov
dec
lret
fs
movsb
fdivr
mov
cmp
adc
imul
adc
call
xor
mov
bt
cmc
cmc
cmpb
pusha
jmp
add
movb
pusha
lea
jne
not
pushf
not
pushfw
popw
dec
bt
rcl
add
mov
movw
stc
cmp
xor
pushf
cmc
cmc
stc
sub
bt
xor
stc
test
pushf
cmc
sub
jmp
mov
mov
mov
bound
lock
lahf
pop
pop
mov
cmp
push
or
mov
insb
test
adc
add
mov
or
fstpl
cmpsl
push
jmp
into
pop
popa
and
add
movsb
into
stos
adc
sahf
jmp
cmpsb
lret
cmp
inc
xor
pop
sub
mov
daa
pop
push
das
push
lret
or
mov
or
lahf
mov
cmp
xchg
or
fxam
dec
pop
int
loopne
or
lods
push
sub
pop
xor
inc
mov
xchg
iret
mov
ds
int
loopne
lods
sbb
and
gs
clc
xchg
jle
fwait
push
adc
dec
inc
dec
cmp
aam
lea
ljmp
jmp
sub
flds
ds
adc
lcall
pusha
arpl
cmp
hlt
test
outsl
mov
sub
mov
mov
and
add
or
jb
loope
inc
leave
add
xchg
arpl
sarl
mov
jmp
gs
icebp
jmp
imul
adcl
fs
mov
inc
cs
push
rol
pusha
sbb
inc
dec
cmp
jno
cli
nop
icebp
lret
movsb
gs
loope
or
cld
loope,pt
mov
ret
xor
sarb
add
daa
dec
out
roll
sub
cmp
fs
test
xor
imul
adc
in
or
dec
cs
std
xchg
jge
pop
xchg
mov
imul
pop
dec
sub
scas
popa
scas
jmp
dec
shrl
or
inc
fmul
mov
imul
xchg
rcr
sub
je
fcmovnbe
pop
sub
xor
and
test
in
repz
out
mov
or
icebp
jne
insl
or
inc
in
movsl
jecxz
jg
or
mov
mov
aaa
das
daa
jg
outsb
into
inc
fdivrp
scas
sbbl
and
cmp
rorb
cltd
aad
xchg
cli
pop
cltd
jae
adc
xchg
lods
clc
dec
adc
out
push
xchg
aam
jno
xchg
add
xor
pop
das
jno
pop
stc
gs
fcmovu
xchg
add
leave
dec
adc
in
lea
push
pusha
cmc
aad
movsb
xchg
int3
fwait
jle
adc
mov
cmc
cmc
call
pop
ds
jmp
mov
dec
adc
das
iret
pop
outsl
negl
movsb
cmp
mov
mov
jl
imul
sub
aam
push
repz
outsb
pop
cltd
jo
inc
repz
cmp
push
imul
dec
gs
pusha
lea
jae
shrd
mov
movsbw
mov
shld
setns
pusha
mov
movb
clc
bt
push
sub
cmp
pushl
bt
jmp
xor
pushf
repnz
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
test
call
lea
jmp
pushf
jmp
pusha
shr
xchg
adc
neg
bsr
shl
mov
call
stc
repnz
jmp
push
inc
lea
push
lea
je
call
pushf
adc
pusha
lea
jge
pushf
lea
call
jmp
mov
movsbl
mov
pop
pusha
push
pushf
pushl
pushl
ret
call
pushf
push
mov
movb
pushf
pushl
ret
call
mov
insl
test
or
int3
in
cmp
sahf
test
mov
adc
sbb
int
lods
movsl
loope
xor
mov
mov
push
xchg
xchg
aas
in
add
shlb
lahf
cld
pop
in
push
push
dec
les
mov
jb
and
xchg
and
stc
or
jb
movsl
add
scas
cltd
mov
jns
fcoms
and
or
into
fidivs
xor
lds
push
sub
sti
data16
jg
daa
popf
and
jb
xchg
bndldx
fwait
push
orl
xchg
dec
push
push
mov
mov
add
stos
lcall
mov
adc
or
xchg
addr16
dec
cmp
stc
cmp
xchg
jbe
jmp
xchg
push
mov
inc
out
jp
enter
jae
aam
cwtl
fcmovne
stos
and
loope
sbb
gs
cwtl
cmp
ds
cmp
stos
xor
out
and
repnz
leave
ret
imul
repz
cltd
ss
xor
sti
lret
lea
in
adc
xor
int3
mov
cmpsb
ss
mov
xchg
pcmpgtd
mov
out
bound
sub
orb
insl
mov
adc
sub
mov
inc
daa
xor
mov
fstl
xchg
mov
aad
ljmp
aam
sbb
clc
cwtl
add
fmull
iret
addr16
sti
lahf
xchg
cmpsl
stos
das
xor
jns
fcompl
sub
xor
test
icebp
decl
mov
lock
fadd
inc
incl
pushl
mov
lahf
movzbw
pop
mov
lea
pusha
movl
pushl
jmp
pop
adc
out
mov
filds
dec
mov
es
outsb
jae
or
lods
xchg
adc
mov
mov
bound
jbe
add
je
pop
cltd
dec
xchg
cmp
fisubrs
sub
dec
inc
roll
lea
pop
gs
mov
fldenv
and
jmp
jmp
call
jmp
ja
mov
or
mov
and
pop
pop
sub
xchg
add
adc
dec
mov
pop
out
pop
lahf
addr16
es
iret
dec
lahf
pop
mov
mov
pop
lea
imul
movsl
loop
cltd
sbb
xor
sbb
popa
add
enter
sub
cwtl
mov
mov
mov
mov
cmpsb
add
cmp
rcll
jae
jmp
js
ja
xchg
jg
mov
mov
popa
lret
pop
cwtl
sub
xor
pop
mov
push
sbb
addr16
pop
xchg
std
or
int3
pop
push
adc
loope
cwtl
and
jp
inc
xlat
inc
xchg
fisttpll
lahf
popf
hlt
xor
sti
cmp
nop
out
fstpt
xorl
and
gs
cmp
xor
int3
jo
mov
les
pop
xor
jecxz
popa
lea
ja
sbb
or
and
sub
pusha
rcl
lea
add
btc
shr
mov
movzbl
mov
inc
mov
test
bt
push
repnz
pusha
lea
jne
bswap
movsbw
bswap
movb
pushf
pusha
mov
call
push
pusha
lea
ja
push
jmp
movw
mov
lea
je
call
loopne
loopne
or
cmp
inc
sbb
aad
mov
loopne
and
ds
cmp
and
call
sub
cltd
push
cmp
cltd
daa
cmpsb
sar
inc
mov
or
cmp
test
je
lock
orb
in
shll
dec
mov
xor
imul
and
dec
lods
mov
fcomps
push
insb
in
mov
xor
imul
sti
iret
push
dec
sbb
movsl
mov
dec
sbb
or
jl
dec
scas
pop
dec
fisttps
mov
ud2
push
push
or
inc
or
mov
sbb
add
stos
pop
xchg
add
jmp
rcll
lock
scas
iret
out
mov
xor
hlt
adc
inc
add
mov
dec
push
cmp
adc
jl
scas
out
cmpsl
mov
jle
jbe
mov
sbb
fs
icebp
inc
and
cmp
pop
mov
cmp
pop
loope
xlat
mov
fs
jge
dec
sub
xor
adc
dec
jl
mov
adc
mov
out
and
in
and
mov
push
cmc
mov
cmp
cltd
pop
nop
sbb
mov
daa
gs
sub
and
lods
lcall
jg
sub
loop
and
test
stc
jbe
cmp
hlt
sbb
lock
mov
test
or
xor
xchg
dec
mov
inc
js
insb
stos
out
inc
rol
jmp
int
mov
adc
mov
daa
jnp
ret
or
sbb
sbb
iret
dec
lahf
faddp
inc
and
sti
dec
cmc
shl
pushf
not
lods
stc
xor
pushf
jmp
lods
sar
add
shr
xor
cmc
cmp
sar
sub
and
xor
shl
xor
shl
jmp
xchg
cwtl
cmpsb
loop
mov
lret
push
sti
and
jae
adc
ret
or
sbb
data16
mov
xor
loopne
inc
jnp
outsl
aad
dec
inc
adc
mov
insl
mov
inc
push
fs
dec
mov
roll
or
ja
jno
xor
sbb
std
out
test
pop
mov
lock
adc
sbb
test
ja
loopne
mov
push
rcrl
push
ds
fs
mov
test
setae
mov
call
xchg
jecxz
mov
test
or
subl
cwtl
push
sbb
xlat
daa
and
cmp
jg
xchg
xchg
jne
xlat
mov
push
mov
sub
mov
dec
out
sbb
jbe
aas
pop
xchg
pop
inc
xchg
dec
jp
and
jg
int3
cltd
inc
xchg
adc
xchg
filds
and
sub
dec
push
loopne
pop
test
dec
sub
mov
std
adc
and
loopne
clc
xlat
mov
js
test
xchg
enter
mov
xor
aas
andl
sbb
push
and
cmp
mov
and
and
mov
cmp
adc
add
ret
cld
in
enter
mov
push
sbb
arpl
rcll
jnp
sti
cmp
cltd
xchg
jg
insb
popa
pop
enter
ss
lret
mov
movsb
pusha
inc
cmp
pop
aas
push
outsb
testb
adc
add
std
lods
xchg
test
and
stos
fildl
mov
sub
or
filds
sbb
inc
fisubl
inc
mov
insb
nop
aas
fiadds
test
imul
nop
lods
lds
cltd
and
jg
dec
mov
fsubs
ds
cmc
sbb
and
call
cwtl
jae
xchg
push
es
inc
and
mov
dec
xchg
insb
mov
push
in
jecxz
ret
jnp
jg
sarb
inc
icebp
imul
cli
push
mov
fldl
or
repz
fs
mov
sbb
jnp
loope
or
fyl2xp1
adc
xchg
nop
and
jo
dec
lea
mov
stos
inc
mov
sub
out
push
pop
fs
aam
filds
mov
sub
adc
jae
add
test
mov
and
pop
push
cld
xchg
es
pushf
pushf
lea
jne
pushf
bswap
setg
movb
pushf
lahf
movsbw
setne
mov
not
pusha
lea
call
mov
jmp
pushl
lea
je
call
adc
and
bnd
cli
adc
loope
nop
enter
push
and
or
pop
movsb
sti
sub
push
adc
add
sub
testl
adc
loope
stc
fstl
cmc
mov
cmp
mov
pop
xor
mov
push
pushf
pusha
lea
jmp
ret
fisttps
mov
cmp
pusha
clc
incl
iret
aaa
dec
daa
pop
push
bound
daa
out
jmp
mull
gs
inc
lds
xchg
cli
std
mov
adc
pop
cmp
jecxz
mov
mov
pop
es
pushf
push
jno
sub
cmp
cmp
imul
push
hlt
mov
xchg
jecxz
ficomps
jne
push
hlt
aaa
ja
pop
iret
jmp
pop
mov
mov
inc
push
lret
cmpsl
sti
out
push
sbb
and
sti
add
or
icebp
clc
mov
call
lea
jne
or
bswap
mov
mov
pushf
pushf
clc
add
pusha
clc
movb
movzwl
rol
shr
mov
cmp
mov
stc
add
clc
bt
call
mov
mov
incl
int
std
inc
popf
inc
push
pop
xor
loopne
mov
stc
data16
fstpl
push
aad
les
test
je
adc
sub
fs
daa
pop
dec
mov
fmuls
mov
push
xor
cmpsl
jb
sub
stos
sub
jecxz
push
outsb
sbb
repnz
lcall
or
icebp
fdivrl
pop
xchg
mov
pusha
pushl
ret
dec
jl
or
fldenv
aaa
push
pop
jle
push
pop
sub
mov
lret
or
xor
fistpll
repnz
pop
mov
or
scas
inc
imul
cs
outsl
adc
pop
or
ficoms
xor
fdiv
inc
push
sub
mov
loop
loop
orb
stos
sarl
push
imull
mov
xchg
ds
push
jle
int
pop
ds
pop
imul
sbb
mov
scas
fs
rolb
dec
shlb
loopne
sub
add
xchg
out
push
jmp
jle
mov
push
loopne
fisubl
inc
loopne
xlat
mov
stos
jns
ja
and
std
add
fimuls
mov
in
xchg
fstl
popf
je
je
dec
sbb
pusha
int3
or
sub
hlt
test
inc
gs
rclb
imul
jb
dec
inc
lods
or
mov
mov
xchg
mov
jae
das
ret
mov
mov
pop
ret
stos
or
sbb
call
repnz
mov
dec
dec
dec
mov
movsl
dec
shrl
repz
js
or
les
mov
sahf
idivb
testb
push
jmp
xchg
adc
adc
inc
gs
add
inc
sbb
jge
stc
inc
mov
rolb
inc
and
sti
pop
and
fisttpl
ja
mov
dec
shll
cmpsb
or
mov
mov
inc
and
scas
jge
movl
lea
jae
jmp
mov
mov
mov
into
es
inc
insl
in
in
and
jecxz
outsl
ljmp
cmp
mov
ja
cmp
outsl
jnp
insb
ljmp
repz
sub
shrl
xor
insb
mov
xchg
mov
add
sub
movsl
imul
jge
call
xchg
pcmpeqw
or
lcall
in
jns
fidivs
mov
int3
stos
movsb
test
clc
ja
and
outsl
or
or
icebp
andl
xor
je
fmul
jo
push
dec
call
in
ja
cmpsl
out
shll
fmull
mov
hlt
in
xchg
mov
sub
sbb
mov
add
sahf
test
dec
shr
adc
dec
xchg
sahf
or
lea
arpl
movsl
das
lret
pop
fistpll
pushf
lahf
pusha
mov
lcall
jmp
dec
daa
aam
and
pop
cmpsb
push
sahf
fistl
mov
push
fdivs
scas
xor
inc
ret
int
insl
jo
clc
in
mov
sub
and
xor
inc
jp
mov
mov
bswap
mov
lea
pop
call
call
ja
sbb
mov
adc
insl
jne
add
mov
xchg
sub
add
jecxz
push
pop
dec
xor
sbb
ss
aas
sub
gs
xor
pop
inc
stos
out
inc
in
pop
mov
dec
push
imul
or
inc
jbe
mov
xchg
shll
inc
dec
pop
sub
sbbl
popa
add
push
xchg
dec
xchg
sub
movb
pushf
mov
pushl
ret
stc
lea
pushf
call
inc
cmp
cmp
outsb
repnz
popa
divl
mov
icebp
xor
adc
pop
mov
lds
mov
pop
push
pusha
bound
outsl
push
gs
push
dec
popw
inc
jl
push
insl
cmpsl
jge
cwtl
imul
rep
insl
es
dec
xor
xchg
jbe
or
or
xorl
xor
adcl
popf
pushf
sbb
adc
xchg
add
sub
imul
inc
xor
cmp
or
push
sbb
jo
adc
mov
int
rcrl
jecxz
and
add
adc
aaa
or
and
dec
xor
aaa
xor
xchg
pop
or
pop
jo
mov
push
add
sub
test
and
lods
push
xor
sub
and
pop
es
insl
js
nop
pop
or
repz
bound
pushf
xor
sahf
hlt
xchg
mov
das
or
enter
sub
mov
bound
push
cmpsb
in
xor
sub
jle
inc
pusha
dec
push
dec
icebp
inc
scas
inc
dec
push
cs
inc
dec
and
loopne
arpl
xorb
sub
mov
inc
and
sub
test
sbb
ror
or
addr16
add
adc
sub
cmp
inc
icebp
out
addl
jo
sbb
sub
sbb
or
insl
dec
sbb
dec
in
adc
xor
arpl
insl
gs
fs
mov
sysexit
adc
outsl
cmp
xchg
sub
and
ss
outsb
jl
out
cmp
and
adc
pop
imul
push
cmp
and
es
ss
xor
xor
and
outsb
inc
addr16
in
lods
cmp
jge
and
imul
sbb
lds
jle
fs
aas
dec
js
mov
push
hlt
adc
loop
jg
xchg
mov
push
test
xchg
mov
xor
xor
daa
jbe
xchg
cmp
add
insb
insl
pusha
push
jg
cmp
add
shrb
jbe
xchg
pop
ds
adc
pop
jno
jg
loope
and
inc
push
gs
inc
cmp
pop
adc
sbb
cmp
adc
cmp
loopne
stc
sub
xor
jge
xor
shrl
xchg
scas
out
dec
test
sbb
ds
mov
dec
in
jns
sahf
push
arpl
and
cmp
dec
cmp
hlt
jecxz
add
addb
out
and
mov
icebp
jge
lock
sahf
mov
inc
push
mov
scas
adc
lock
test
jmp
call
fstpt
xor
push
push
aas
outsb
mov
xor
das
mov
add
test
xchg
and
pop
lods
lock
and
push
push
rorb
add
mov
es
sbb
ss
xchg
test
fldcw
xchg
inc
dec
push
cmp
ret
cmp
js
lock
fisttps
sub
lock
mov
xor
push
mov
pop
jae
xor
sbb
lahf
sbb
imul
push
in
lock
pop
xchg
idivl
andl
outsb
iret
push
dec
add
hlt
dec
stc
lock
jo
add
inc
movsb
call
mov
pop
fwait
mov
cmp
jo
sbb
push
mov
sub
cmp
call
shl
sub
pop
or
adc
mov
les
fsub
adc
rclb
mov
push
mov
loop
mov
ljmp
jno
dec
jecxz
movsb
dec
mov
hlt
popa
mov
adc
out
push
icebp
shrb
sbb
jae
jo
pop
inc
fs
xor
lock
ret
inc
or
sbb
push
push
jg
call
insl
mov
scas
push
lock
adc
lock
test
lahf
adc
fbld
inc
shl
lock
shlb
addb
xchg
or
loopne
dec
add
jle
inc
and
sub
je
call
and
pop
clc
pop
iret
inc
out
inc
or
mov
xchg
jo
pop
call
cmp
popf
adc
jb
fimuls
fnstsw
adc
xchg
les
xor
sub
mov
sti
scas
inc
fidivl
cli
cmp
es
dec
gs
mov
mov
mov
mov
repnz
dec
repnz
shl
jnp
push
jo
dec
sahf
cmp
bnd
pop
pop
outsb
sbbb
push
cmc
pusha
xor
lods
std
add
mov
push
lock
out
das
rorb
mov
mov
pushf
cmp
and
xor
cld
add
fwait
div
lock
bound
call
lret
setle
imul
xchg
fidivs
jnp
icebp
lret
dec
out
mov
mov
aam
xor
nop
lock
lods
xchg
rorb
lock
sub
les
add
repnz
xchg
mov
icebp
daa
pop
add
sub
add
cltd
int
adc
enter
out
outsb
mov
cmpsb
js
cld
xor
in
movl
pop
push
cmp
lret
jnp
pop
loopne
add
ret
in
shll
lock
inc
js
mov
cmpb
fnstsw
fdivs
fidivrs
adc
je
cs
nop
mov
sbb
frstor
insb
fisubs
adc
out
push
mov
lock
mov
fcom
daa
ret
ret
jg
push
cmp
into
or
mov
lock
sbb
lock
sbb
cmovne
int3
pop
add
lock
mov
imul
push
scas
cmpsl
shlb
pop
je
icebp
sub
pop
and
xchg
xor
fwait
xchg
lock
cld
sbb
xchg
arpl
jo
mov
inc
cli
xor
cmp
xor
dec
jnp
push
inc
ja
in
dec
cltd
jo
mov
fucomi
mov
out
mov
jbe
lock
inc
cli
push
lock
in
xlat
lahf
out
jp
mov
ljmp
xchg
arpl
mov
imulb
ret
lock
inc
pop
lea
push
jno
xor
test
jmp
loopne
mov
movsb
lock
inc
push
sbb
mov
jo
add
dec
xchg
mov
xor
xor
iret
pop
lock
jecxz
mov
cmc
popf
je
repz
sbb
push
rcl
jge
xchg
mov
lock
push
and
push
lock
xor
xchg
or
orb
and
add
js
xchg
and
aad
stc
movsl
int
pop
cmp
stos
into
push
push
insb
xor
jb
ret
mov
lret
shl
add
repz
jmp
xchg
into
push
or
mov
icebp
or
xlat
jmp
inc
add
or
fwait
mov
mov
adc
loopne
sub
dec
mov
repz
mov
repnz
roll
sbb
push
ud0
clc
cwtl
fdiv
ret
push
es
icebp
xor
push
xchg
push
pop
or
call
test
js
pop
sti
and
in
lock
subl
cmp
mov
lock
dec
add
cmp
lock
aad
fldt
ret
imul
pushf
addr16
cmpl
lock
out
xchg
pop
sub
sbb
lcall
scas
push
icebp
icebp
or
inc
les
xchg
jae
ret
sbb
outsb
insb
ficoms
add
mov
outsl
loop
push
int
mov
xor
jnp
cmp
xor
shl
movsl
and
in
rcll
hlt
je
xchg
shrb
sub
inc
push
lock
add
sbb
scas
ljmp
push
sbbl
aas
pop
shlb
xchg
sub
push
mov
stos
mov
sub
into
repz
xchg
loopne
lret
mov
cmc
xor
and
lock
jno
enter
add
cs
push
icebp
sahf
test
out
lahf
xor
das
mov
add
or
rolb
sub
and
xchg
mov
sbb
adc
pusha
cmp
loop
fwait
mov
andl
lods
cmp
cltd
inc
icebp
adc
dec
xor
aam
in
cld
jle
outsl
fwait
lock
cmp
inc
xchg
ja
sub
cmp
in
add
lods
icebp
add
aam
mov
sub
jo
fldcw
stc
push
lcall
pushaw
push
out
add
test
cmp
cld
sub
or
pushf
mov
les
ljmp
negb
sahf
adc
lock
or
loop
movsl
out
fwait
fs
mov
mov
lock
loope
pop
orb
in
xlat
push
mov
xor
sti
push
in
jg
cmpsl
daa
jge
rolb
mov
and
mov
mov
xchg
mov
call
js
or
pop
movsb
or
xor
pop
hlt
and
mov
call
popf
cmp
adc
in
add
lea
and
lock
jne
add
jmp
or
xchg
push
jb
aaa
dec
push
mov
sub
mov
dec
jne
push
push
dec
pop
lock
cmp
jle
mov
cli
jne
ds
nop
lock
pop
ljmp
jae
inc
loop
lock
jle
adc
test
in
dec
std
inc
dec
lock
iret
lahf
nop
jle
mov
dec
or
lock
mov
sbb
xchg
mov
xchg
sub
repz
in
sub
mov
sahf
push
loopne
lock
mov
jb
jmp
lcall
loop
push
loopne
daa
jb
mov
xor
jae
pop
jb
xchg
in
data16
lea
sbb
mov
pushf
lock
fwait
test
or
or
cmp
and
or
ss
mov
jne
pop
lret
jae
shll
jp
lock
pop
pop
lock
in
outsl
rolb
pushf
hlt
nop
mov
andl
cmp
jmp
mov
lock
sar
cmp
lock
mov
dec
mov
push
fdivl
mov
pop
hlt
into
repz
xor
scas
clc
sub
int
cltd
mov
inc
rcrb
cmp
shl
mov
sub
movsb
ss
scas
sbb
jne
clc
cmp
jb
cmp
in
pop
lock
pop
mov
cmp
inc
cmpsb
test
enter
push
inc
mov
pop
mov
jae
pop
mov
dec
xor
lock
ret
or
jb
pop
sbb
xchg
jae
cmp
scas
loopne
jmp
call
lock
mov
inc
out
sbb
in
cmp
hlt
outsb
nop
or
data16
jae
push
push
lret
lahf
xchg
mov
xlat
call
jbe
pop
jo
jno
or
dec
cmp
nop
xchg
and
aam
lahf
pop
clc
addr16
pop
sub
cvttps2pi
add
xor
mov
mov
jge
iret
arpl
jl
sbb
out
sahf
cmp
popf
pop
outsb
mov
cmpsb
addr16
lock
outsl
xlat
add
push
cltd
cwtl
sub
or
push
pop
mov
insb
mov
mov
mov
inc
stc
lock
std
sub
icebp
xchg
ret
imul
jmp
sub
xchg
jnp
inc
pop
scas
out
push
icebp
cli
push
lock
mov
pop
jo
jg
mov
scas
mov
pop
lock
jb
pop
cmp
pop
jo
shl
subb
sahf
lock
call
cmp
mov
imul
mov
sbb
xchg
and
mov
bswap
lret
mov
iret
pop
xor
pop
rorb
mov
dec
and
jns
pop
out
jge
add
lds
repz
stos
cmp
subb
ss
pop
adc
sbb
aas
lock
jno
loopne
mov
lock
mov
jbe
mov
les
aam
rcrl
adc
pop
insl
aad
xchg
mov
pop
sahf
xchg
lock
mov
ret
sbb
loopne
scas
js
mov
cmp
test
loop
jle
cmp
lock
test
cli
cmp
in
pusha
mov
nop
add
sahf
push
cwtl
je
mov
xchg
cld
jge
ja
pop
orl
pop
mov
mov
xor
sbb
aaa
es
fstpt
aas
bswap
lock
or
insb
out
jbe
nop
rcrb
mov
sbb
mov
gs
push
mov
jle
stos
sahf
pop
lock
pop
sub
out
xchg
jg
mov
fbstp
xor
and
adc
enter
lock
imul
aaa
jle
icebp
stc
test
scas
in
aam
mov
jmp
lock
fimuls
inc
sahf
or
mov
fsubs
pop
adc
cmp
pusha
mov
outsb
cmpsl
sbb
dec
mov
pop
ds
mov
shrb
ret
dec
ljmp
in
shlb
xchg
faddl
enter
shl
outsb
mov
sbbl
or
mov
sti
mov
mov
dec
shl
pop
add
js
repz
mov
mov
cld
out
xchg
lock
pop
jg
xor
outsl
nop
popf
shr
lret
cmp
or
push
outsb
pushf
mov
push
sbb
dec
lock
pop
sti
mov
and
xor
jo
idiv
mov
nop
mov
xchg
push
cmc
inc
dec
aaa
pop
and
add
repnz
push
and
xor
daa
xor
ret
dec
jno
loope
adc
add
popa
dec
lock
into
or
orb
icebp
xor
push
jmp
ljmp
aam
mov
into
inc
vmovaps
fdivrp
or
and
or
js
xor
sti
cmp
pop
push
pop
dec
push
pop
fs
xchg
mov
jmp
inc
lahf
test
mov
pop
shlb
pop
inc
int3
mov
in
jb
mov
cmp
lock
fs
pop
mov
pop
push
dec
pop
push
stc
mov
fwait
adcl
int
insl
pop
ret
xchg
push
addr16
mov
clc
jmp
insl
movsl
push
lcall
jle
out
jge
lahf
xlat
loopne
icebp
push
cmp
lea
shlb
mov
inc
test
cwtl
add
icebp
lcall
repz
loopne
jb
rorl
lock
adc
lock
xlat
in
mov
in
mov
push
cmpsl
orb
dec
mov
xor
pop
lock
mov
lea
data16
and
rclb
into
imul
sbbb
leave
js
lock
push
xchg
xchg
lahf
repz
jne
lock
sub
pop
sahf
lock
mov
cmp
xor
je
or
jecxz
aad
lock
xor
pop
add
pop
insb
mov
or
add
jne
ror
lock
call
repz
pop
dec
mov
mov
push
push
lock
into
pop
sahf
loopne
sbb
pop
dec
out
psrld
jnp
mov
lods
xor
add
xchg
xor
enter
sahf
mov
in
xchg
outsl
fs
and
fists
jnp
enter
lock
dec
xchg
and
lock
outsb
into
inc
repz
loopne
cwtl
fdivrs
mov
test
repz
fwait
xchg
xor
in
sarb
lock
daa
push
ja
icebp
xchg
gs
mov
push
cs
das
lret
lds
insl
lock
pop
cmpsb
in
in
and
xchg
mov
lock
mov
sahf
adc
ljmp
xchg
xor
out
pop
shlb
std
movsl
into
mov
js
and
pushf
jne
jns
push
adc
push
pop
fwait
test
mov
xorl
lock
pop
inc
xor
lock
lds
lock
pop
xor
mov
inc
push
jno
sub
ret
push
insl
xchg
push
lret
or
jmp
je
inc
mov
cmp
lock
clc
rep
jle
push
and
data16
cli
sbb
aam
imul
clc
daa
cwtl
lods
in
jb
out
scas
xchg
repz
shlb
mov
lock
xchg
rorb
lock
bound
lock
push
enter
xor
lock
push
fld
or
insl
lock
test
push
into
leave
lock
mov
pop
repnz
nop
adc
fld
icebp
cs
mov
adc
jo
jmp
lock
cmp
mov
fs
je
xor
lock
push
xorb
scas
lock
orb
pop
cmp
add
fiaddl
xchg
xchg
mulb
int3
repz
mov
push
and
pop
nop
repz
daa
lahf
push
cs
dec
mov
iret
cwtl
sbb
xchg
lahf
or
out
jnp
lret
repnz
movsl
inc
mov
mov
or
or
cmp
jg
lock
jae
pop
insl
lock
es
push
icebp
sub
jne
mov
and
repz
lret
pop
fstl
lcall
test
lods
or
xchg
pop
sub
or
dec
push
jmp
push
pop
mov
nop
jl
adc
push
cli
shrl
mov
xchg
adc
xor
sahf
lock
out
sbb
xchg
ret
popf
mov
adc
mov
xorb
cwtl
or
jo
or
test
mov
mov
cwtl
cmp
lock
mov
in
call
push
cwtl
sti
mov
lock
sub
pop
push
movsb
or
bnd
mov
xchg
cmp
push
xchg
aas
and
mov
daa
jle
jo
test
shlb
lock
into
popf
push
pusha
lock
xchg
mov
aas
icebp
adc
mov
cld
subb
xchg
inc
pop
in
daa
jae
sahf
pop
fcompp
retw
xlat
lock
outsb
test
jae
push
jo
ljmp
push
mov
shlb
out
add
sahf
inc
cmpl
push
lock
lea
test
clc
lock
pop
mov
inc
lock
std
mov
adc
aas
out
adc
rcrl
lock
jne
and
lock
shlb
loop
jecxz
pop
or
mov
ret
dec
mov
loop
mov
xchg
push
xchg
jo
clc
cmp
shl
push
mov
in
in
push
into
sub
lods
mov
shl
sti
aas
fidivl
or
daa
repnz
pop
sub
enter
cmpsb
cltd
pusha
push
lock
and
push
mov
out
sbb
xor
orb
dec
pop
outsl
sbb
clc
mov
mov
fcomi
ss
scas
cmpsb
sbb
pop
jmp
adc
xor
sub
adc
or
in
imul
out
lock
ret
shll
lock
aaa
dec
outsl
lahf
xor
adc
das
xchg
add
pop
rcr
out
xor
xchg
lret
lock
jmp
cmp
pop
outsl
pop
sbb
lcall
lock
cwtl
test
xor
popa
lock
movsl
mov
cwtl
cmp
cmp
xor
jbe
cld
or
cmova
lock
pop
and
lock
rcrl
loopne
add
sub
and
mov
test
cltd
dec
mov
lock
cmp
inc
lahf
mov
pop
pop
fdivr
jecxz
aas
jne
sbb
mov
dec
mov
jbe
lock
cmp
jl
lock
sbb
jl
pop
aam
lock
cli
pop
sbb
push
out
test
ret
repnz
sahf
imul
dec
jbe
pop
pop
out
jb
pop
xor
pop
stos
jae
jo
push
pop
dec
pop
lcall
push
ficomps
fldl
pop
loopne
adc
lock
mov
test
pop
push
addb
shll
push
xchg
aad
lock
or
jne
lock
in
push
loop
mov
lock
sub
pop
dec
mov
aam
or
aad
lret
pop
mov
lock
sbb
adc
add
add
lcall
lock
cltd
xchg
jg
push
jge
lock
jb
outsb
lea
add
pop
cltd
aas
add
cmp
jo
xchg
daa
scas
cwtl
pop
shl
inc
lahf
mov
cmp
pop
sub
push
shl
daa
cld
pop
js
sti
testl
xchg
lock
mov
cs
mov
shlb
adc
divl
adc
out
jmp
movsb
repz
inc
clc
out
ret
ljmp
pop
lret
sub
push
sub
popa
mov
push
add
outsl
dec
repz
iret
das
jg
push
cmp
ljmp
mov
icebp
adc
mov
push
jbe
jns
iret
in
mov
pop
pop
inc
xchg
lock
gs
mov
jb
pop
arpl
popf
xchg
xchg
sub
subl
cmp
jne
out
mov
nop
pop
xor
loope
dec
outsb
lock
push
jle
push
inc
int
sbb
loop
xchg
and
inc
icebp
outsb
repz
add
push
call
push
xor
mov
adc
repnz
cld
test
jl
jb
push
lock
fwait
out
jmp
lock
inc
and
lahf
icebp
in
out
mov
inc
cmp
push
fwait
mov
cmp
and
dec
mov
jbe
push
leave
std
nop
rdmsr
pop
lods
xor
dec
jno
imul
mov
fdivp
minps
les
enter
aas
sub
daa
pop
adc
push
cmp
add
mov
pop
mov
pop
fcompl
leave
popa
xchg
scas
lock
aam
mov
or
and
shll
mov
dec
xchg
mov
aas
sbb
mov
dec
cmp
pop
adc
cmp
repz
stos
out
mov
pop
cmp
sahf
dec
lret
icebp
xor
dec
pop
lock
add
push
iret
divl
call
or
adc
insl
ss
push
lock
shrb
lret
sbb
jnp
call
lock
add
xchg
popf
lock
ficoms
outsb
pop
insb
lock
test
lock
pop
adc
lock
jg
jge
rcrb
mov
cmp
rcrl
xchg
or
lock
insb
outsb
sbb
ja
lock
popa
int
mov
je
icebp
sub
mov
cmpsb
and
lock
pop
push
idivb
add
maskmovq
negl
xor
in
add
sahf
pop
push
xchg
ja
cmp
lock
fistpl
nop
mov
dec
je
lahf
jne
lock
add
xor
hlt
js
rcr
icebp
dec
loop
xchg
pop
jecxz
lea
and
pop
jne
pop
sahf
lods
imul
cwtl
push
scas
in
inc
mov
imul
outsl
loopne
sub
sub
ds
dec
mov
push
and
cmp
xor
inc
jbe
pop
pushf
jns
lock
psrlq
das
lock
out
fwait
push
icebp
push
dec
sub
pop
jo
and
shl
clts
cmp
js
mov
pop
and
lock
shrl
out
adc
mov
xchg
lock
cwtl
repnz
add
in
xchg
insl
ljmp
mov
inc
xor
sahf
cmp
pop
call
xor
test
hlt
and
cmp
loope
das
hlt
subl
roll
or
push
iret
ds
out
sub
mov
jmp
dec
jge
lret
in
xchg
add
mov
pop
or
data16
movsl
je
lock
iret
push
inc
stos
and
jp
sbb
sub
sbb
cltd
pushf
ljmp
jno
outsl
fistpll
in
aam
lock
adc
ja
pop
repz
push
adc
mov
or
sub
lock
test
mov
rcll
sahf
ljmp
jmp
push
push
stc
xor
pop
cmp
xchg
pop
cld
and
lods
push
lock
cmp
dec
xor
in
outsb
mov
lods
push
fs
dec
roll
or
adcb
push
cmpsb
rol
sbb
filds
push
cmpsl
xor
in
adc
push
or
shll
icebp
inc
jp
and
push
push
ror
push
comiss
sahf
rcl
add
mov
pop
or
cwtl
std
sub
in
mov
inc
push
dec
cmp
lock
adc
sbb
test
pop
jbe
dec
xor
data16
jns
ljmp
lock
aas
push
dec
sub
dec
lock
ret
xchg
xor
push
repz
pop
cltd
andb
xor
pop
lret
jns
pop
fmulp
outsl
xchg
nop
jne
out
js
mov
aas
xor
sub
popf
clc
test
stc
je
xlat
in
cwtl
jmp
sub
incb
lock
inc
xchg
xor
xchg
insb
xchg
popa
lods
repz
or
mov
jne
xor
fidivl
lock
loop
adc
push
pop
push
sub
sbb
or
lock
lea
push
and
mov
push
pop
icebp
adc
out
mov
lock
psllq
inc
push
dec
mov
push
das
lea
mov
cli
es
lret
xchg
sti
push
lret
push
lock
rcrl
cs
stos
push
lock
daa
ja
adc
notb
pop
dec
loop
lock
jnp
xchg
std
lock
cmp
adc
mov
out
push
test
cmpsb
lock
inc
pop
mov
sbb
ss
sti
ret
stos
movsb
cs
jnp
adc
push
inc
enter
das
icebp
repnz
lea
jmp
lock
sti
jnp
insl
push
jns
loop
lock
in
orb
nop
mov
jno
shrb
pusha
or
cwtl
pop
daa
lock
mov
dec
lock
arpl
jno
xorb
pushf
push
cmp
push
int3
mov
cmp
lock
xor
ljmp
sub
mov
xor
mov
xor
mov
dec
test
sar
push
cmp
add
ja
mov
mov
push
mov
mov
mov
pop
repnz
xchg
insb
es
push
bound
jbe
push
jne
imul
xchg
or
push
popf
push
fs
jnp
pop
ret
xor
rcrb
sub
pop
jae
jb
in
xchg
cmp
push
cmp
pop
jo
shl
or
and
mov
pop
adc
lock
xchg
or
pop
jle
xor
cs
adc
sub
or
outsl
lock
fcmovnbe
push
xor
mov
not
movsb
lock
lock
or
es
das
jbe
mov
jae
dec
cmp
xor
mov
sbb
dec
push
shl
jb
fwait
aas
out
xchg
lock
test
lock
pop
or
dec
lods
in
lock
dec
enter
decl
test
pop
pop
xchg
lock
insl
into
push
rcrb
jp
js
popf
pusha
xchg
mov
pusha
inc
out
repz
mov
inc
mov
aaa
jg
xchg
mov
push
int3
mov
das
lock
andl
inc
lret
xacquire
shl
out
roll
cmp
xor
mov
sub
std
lock
and
and
push
nop
lock
inc
fsubl
jg
lock
jno
rorb
xchg
popf
cmp
mov
sub
pop
and
adc
shl
fs
aas
fstpl
adc
pop
mov
inc
pop
xor
mov
push
out
lock
enter
mov
lcall
and
jns
xchg
jo
mov
es
or
or
shll
cmpsl
jb
lock
jle
movsb
mov
add
xor
call
je
into
icebp
xor
mov
jb
ret
mov
dec
mov
cmp
scas
push
jmp
mov
aaa
push
inc
mov
dec
mov
and
pop
in
das
sbb
repz
out
icebp
push
dec
push
rorb
daa
repnz
mov
adc
jae
mov
mov
add
jbe
pop
push
or
push
divps
mov
lock
imul
lock
mov
adc
lock
adc
es
dec
repnz
icebp
push
mov
outsl
les
pop
lock
sbb
mov
xchg
cmp
adc
lock
js
jg
lcall
sub
cmp
mov
clc
jb
mov
ljmp
out
mov
out
adc
or
rclb
jns
lock
xchg
jge
imul
ret
or
pop
xchg
es
enter
sub
or
push
aad
nop
sub
lahf
lock
add
mov
xor
rorl
mov
xchg
push
pop
xchg
mov
rolb
icebp
push
jge
les
daa
mov
sbb
cld
cmovle
mov
jmp
nop
shll
sahf
ja
lock
pop
sub
mov
xchg
xor
into
in
mov
jns
push
add
scas
mov
mov
jge
test
test
dec
xor
hlt
sbb
jmp
lock
xchg
xor
ret
popf
rcl
in
pop
lock
inc
loopne
adc
scas
lock
push
dec
and
pusha
sub
incl
rcrb
out
mov
mov
lock
mov
mov
xor
lock
mov
mov
and
xor
sub
repnz
sbb
pop
lock
jl
std
pop
adc
lock
or
popf
and
fwait
outsl
add
jae
and
std
or
mov
push
loopne
sub
xchg
pop
pop
mov
and
push
std
pushf
int3
pop
add
xchg
lcall
pop
lods
out
adc
movsb
dec
cld
cmp
add
pop
or
sbb
enter
sub
stos
push
repnz
jbe
jo
out
add
jnp
pusha
inc
lock
divb
lock
lret
mov
pop
imul
or
outsb
fnstcw
mov
jnp
movsw
jns
fwait
xchg
sahf
sbb
cltd
adc
pop
insl
mov
arpl
hlt
outsl
into
add
xchg
cmp
cs
pop
popa
lds
jo
xchg
push
aas
pop
pop
rclb
push
lock
lods
lahf
scas
call
lea
outsb
aam
ds
dec
push
movsl
inc
das
jle
lock
out
int3
push
test
repnz
imul
fsub
cmp
dec
pop
xchg
push
mov
mov
pop
fcmovnb
into
push
cmc
mov
in
add
dec
lock
jge
pop
cwtl
aaa
fwait
test
xor
dec
test
ja
ja
icebp
lcall
cld
iret
jne
adc
sahf
lea
scas
inc
test
push
xchg
cld
mov
lock
imul
sub
fiadds
insl
lock
or
loopne
jle
lock
lea
jl,pn
ja
repnz
push
mov
sbb
add
int3
jbe
out
jne
repz
repnz
or
cmpsb
push
pusha
lock
mov
add
test
ds
ljmp
es
insb
hlt
repnz
push
pop
loopne
mov
popf
dec
xchg
adc
test
ds
rclb
mov
push
lds
dec
mov
dec
push
fcomps
lods
in
into
lock
in
fs
inc
push
mov
lea
mov
xchg
fcoml
mov
push
add
xchg
mov
mov
add
add
popw
lds
dec
or
aad
mov
clc
outsb
push
in
decb
shlb
or
push
xchg
pop
sub
sbb
pop
add
jle
clc
sbb
lock
mov
sbb
or
lea
jns
insb
jne
icebp
rcll
mov
test
mov
xor
lahf
add
aas
mov
repz
test
mov
dec
cmc
sti
cltd
fisubrl
lret
dec
lock
call
data16
add
push
lock
jb
and
jne
mov
lods
pop
push
sub
shlb
xchg
adc
cwtl
es
xchg
jecxz
rcr
mov
inc
xchg
dec
test
scas
lock
xorl
jge
or
cld
push
lock
lds
xlat
xchg
repnz
pop
pop
add
loop
lock
xchg
popf
ljmp
aad
in
aaa
mov
sbb
cld
ret
pop
cmp
jae
rorl
daa
dec
lea
and
cld
outsb
dec
lock
xlat
dec
test
sub
cwtl
js
push
xchg
fmuls
lock
mov
pop
lock
in
movb
xor
inc
pop
lcall
aad
adc
adc
rcrl
jne
lock
inc
push
outsb
andl
adc
inc
xchg
lods
aas
cmpsb
jle
mov
je
cmpsl
pop
jno
test
xorl
loop
mov
movsb
lock
or
jbe
repz
sbb
xchg
xor
mov
cmp
dec
data16
push
outsb
loop
or
pop
fdivr
popa
jno
xor
hlt
pop
syscall
cmp
push
xor
sbb
lock
insb
jmp
cmp
fsubs
das
lock
dec
push
cld
dec
lock
insl
inc
mov
sbb
test
mov
bound
push
dec
shl
push
lock
sbb
lock
lahf
mov
and
sub
push
adc
sti
lock
push
je
mov
push
outsb
jno
stc
sti
test
shr
scas
lock
std
addl
mov
lock
rorl
movzwl
ss
jo
cmp
xor
sti
insl
aas
das
jge
lock
mov
scas
jae
sbb
add
ljmp
xchg
sarl
add
leave
lahf
adc
sbb
lock
sub
jle
inc
sub
cli
aaa
inc
mov
mov
mov
jg
xchg
fwait
mov
push
scas
test
lock
mov
or
mov
inc
mov
mov
xchg
insb
sbb
add
mov
insl
lock
nop
mov
loopne
sub
inc
cmp
scas
in
xchg
insb
jbe
call
cmp
mov
je
popa
rcll
push
clc
movsl
lock
push
dec
jmp
orb
imul
loope
out
movsl
add
mov
fmull
mov
and
mov
xchg
push
inc
sub
lret
test
jno
lcall
in
lock
xchg
push
out
or
fisubrl
mov
mov
mov
inc
int
mov
sbb
movsb
aaa
mov
loope
test
ds
push
add
outsb
cmp
subl
ror
sbb
cltd
push
mov
xor
push
lahf
ss
pop
cmpsb
in
mov
add
into
jecxz
call
je
mov
scas
pop
jnp
icebp
xchg
lea
mov
xor
push
jp
lock
std
and
lock
lea
sub
das
int
call
ficompl
lock
push
rcrb
repz
jns
insl
les
xor
add
fsubl
mov
out
or
jnp
fnsave
shlb
mov
sbb
push
repnz
je
mov
lahf
xor
test
mov
ret
fucomp
pop
lock
xchg
data16
or
pop
lock
adc
out
push
rcr
sahf
adc
lock
dec
mov
andl
xor
push
push
lock
icebp
adc
in
lock
and
out
insl
mov
xchg
and
psrlw
bound
adc
dec
sbbb
sub
xor
cmp
insl
xchg
push
push
pop
lock
mull
ret
lock
out
arpl
outsb
int
xchg
mov
adc
jo
shll
sbb
xchg
repz
sbbl
jno
or
popa
and
xchg
lock
repnz
add
insl
or
inc
lock
mov
icebp
cli
dec
push
xchg
scas
mov
aas
lock
jns
fdiv
leave
mov
jne
divb
mov
mov
test
jae
and
mov
xchg
lahf
lock
fnstenv
inc
or
sub
lock
mov
dec
xor
jp
frstor
cltd
nop
arpl
filds
mov
lock
cmp
cwtl
and
pop
lock
out
fnstsw
mov
lock
cmp
mov
je
mov
lock
ljmp
dec
or
cmp
pusha
xchg
pop
mov
pop
fadd
adc
cltd
data16
ja
lea
fdiv
in
shll
je
lock
mov
lock
in
ds
mov
or
jo
inc
das
pop
mov
push
movsb
fs
stos
js
lock
mov
xor
icebp
enter
push
sar
pop
add
fisubl
imul
add
adc
xchg
outsl
lock
push
push
push
lock
jmp
jp
mov
aad
adcb
inc
push
jno
cwtl
inc
lock
dec
sbb
repnz
or
arpl
push
mov
push
lock
xchg
cmpsl
mov
bound
mov
sbb
repnz
data16
into
and
cmp
dec
jb
jecxz
ja
popf
mov
adc
divps
repnz
xor
pop
daa
add
push
addr16
int
lret
arpl
shufps
inc
scas
rcrb
mov
lock
or
and
jae
xchg
lock
aam
dec
inc
inc
lock
push
lds
dec
setg
icebp
out
adc
cmp
lock
pop
das
imulb
popa
insb
push
clc
lock
repz
pushf
icebp
aaa
mov
cmpsl
orb
arpl
xorb
hlt
xchg
dec
cmp
insb
mov
jo
xchg
mov
dec
jbe
movlps
mov
mov
push
insl
pop
mov
mov
jge
pushf
mov
lret
sbb
js
pop
and
imul
xchg
ret
incb
lock
out
add
lock
in
mov
fcomi
and
xchg
inc
fdiv
mov
in
jae
fwait
xchg
pop
dec
int3
cld
pop
adc
inc
mov
movsb
movsl
out
mov
dec
add
in
lods
mov
sub
test
iret
jno
pop
or
rcr
lock
inc
cmpsb
push
pop
mov
inc
inc
lea
xor
xchg
jo
xchg
rcrb
dec
lret
mov
mov
sbb
mov
push
loop
lock
inc
xor
lcall
cmp
or
push
adc
push
xor
mov
in
mov
repnz
mov
adc
popf
mov
imul
xchg
and
dec
sbb
iret
sub
shl
lret
fdivr
xor
clc
lods
insb
xor
inc
sub
xchg
jno
xchg
mov
int
repz
dec
clc
mov
sub
cmpsl
leave
or
insb
shl
jno
lcall
dec
jge
and
mov
loop
cmpxchg
enter
sbb
pop
subl
in
shll
clc
cmp
inc
dec
cmp
lods
sbb
mov
cltd
xor
insl
mov
idivl
sub
cmp
lock
daa
or
lock
fisubrs
in
xor
pop
jae
icebp
out
sub
jl
lock
jno
add
lock
inc
ja
jns
sbb
fsubr
popa
mov
jg
dec
outsb
jmp
mov
mov
mov
xor
mov
jnp
ds
cmpsb
jo
jo
std
lods
sbb
ja
cwtl
lock
pushf
cmp
lods
or
xchg
lock
inc
dec
in
ret
lock
xor
cmpsl
xchg
cli
sub
ret
sub
clc
mov
adc
push
jecxz
std
out
mov
push
push
loop
lahf
pop
xchg
lock
mov
das
xchg
dec
test
lock
jne
pop
scas
or
sti
out
in
dec
or
adc
mov
cmp
jb
daa
mov
mov
lock
jmp
xlat
adc
pop
jg
in
test
lock
xchg
mov
pop
sahf
inc
sti
repz
cmp
aad
filds
xor
aas
push
and
popf
fisubrs
ja
lock
sbb
fsubrs
out
nop
scas
mov
repnz
xlat
loopne
mov
push
sub
cs
fimuls
inc
adc
mov
mov
mov
mov
psrlq
or
out
jb
mov
push
das
mov
cmp
mov
iret
mov
lock
mov
lock
sbb
mov
and
push
sbb
mov
xor
jmp
data16
lcall
push
lahf
mov
push
sub
mov
ffreep
fcomp
jbe
lock
stos
push
mov
test
sub
bound
sti
push
xchg
pop
push
cs
jae
sbbb
lock
or
push
lock
imul
inc
cmp
jg
out
jnp
cmp
sub
pop
loope
lock
pop
push
mov
sbb
or
cmp
xchg
aas
incb
cmp
aaa
sub
sub
and
lret
daa
sub
enter
lock
arpl
dec
jge
orl
scas
lock
and
nop
lock
dec
je
push
xor
call
lock
sub
ja
nop
jb
popf
loopne
or
cli
lock
push
jmp
and
pushf
add
icebp
lods
test
fadd
cwtl
lock
cs
and
xchg
pop
mov
je
xchg
add
shrd
mov
repz
dec
lea
icebp
mov
or
int3
sar
add
dec
mov
sub
movsb
pushl
sbb
outsb
jb
adc
lea
test
div
mov
dec
or
lock
lods
inc
lock
jecxz
test
jl
fcmovnbe
or
mov
xor
jb
rcrb
enter
les
mov
xor
lods
loope
jo
out
xlat
insb
lock
mov
pop
or
xchg
mov
fcmovnu
lock
scas
lock
mov
push
test
fs
mov
add
or
stos
jno
adc
nop
subl
notb
mov
out
adc
push
mov
lods
pop
out
mov
pop
xchg
and
mov
lock
movsl
dec
insl
ja
sbb
xchg
adc
mov
xchg
dec
jne
cs
pcmpgtw
add
addr16
inc
or
jno
sbb
fsubl
ss
sbb
movsl
xlat
add
ljmp
cmp
or
pop
adc
stos
inc
lock
pop
xor
pop
xchg
push
lock
cld
es
cwtl
dec
insl
lock
jbe
mov
xor
push
data16
repnz
sbb
xchg
fstpt
lock
mulb
daa
mov
xchg
addr16
scas
icebp
mov
cmpsl
mov
or
bound
rcrw
inc
lock
leave
jb
dec
pmullw
inc
loop
scas
inc
sub
test
aam
xchg
push
f2xm1
into
sarl
sbb
push
dec
pop
pop
lock
test
sub
sbb
add
lock
dec
cmp
fisubrs
push
lock
and
imulb
scas
add
push
push
dec
mov
pop
mov
xor
xor
add
iret
pop
sbb
shl
negb
mov
xor
fisubs
add
icebp
xlat
into
mov
enter
mov
out
stos
outsl
push
lods
inc
test
jb
sub
mov
inc
push
push
lock
sbb
fdivs
les
jb
push
jne
cld
test
xchg
lock
sub
imul
mov
sarb
push
in
enter
cwtl
xchg
jo
push
icebp
push
ficoml
daa
and
sub
fisttps
adc
mov
les
ss
lock
int
dec
loopne
xchg
sbb
cli
out
xor
jo
dec
movsb
aad
lock
fdiv
xchg
lock
aas
adcb
bnd
lahf
pop
inc
fcom
xchg
imul
int
aam
mov
lock
pop
outsb
pop
stc
mov
out
shl
cwtl
ret
jmp
sub
inc
sbbb
lock
fnstsw
fidivrl
jo
inc
push
out
insl
lock
je
gs
or
scas
xchg
push
loop
out
cld
bound
outsb
fcomip
push
adc
mov
dec
lock
out
and
jg
and
ljmp
sub
lock
into
or
cmpsb
jo
inc
pop
lock
addr16
les
js
xchg
lock
ret
sub
inc
mov
or
pop
or
push
add
fsubs
leave
sar
adc
xor
scas
lock
or
cmpsl
icebp
inc
pop
push
out
jmp
lock
add
dec
popa
push
loopne
out
lock
les
or
pop
pop
pop
dec
icebp
fsubrl
inc
into
and
pop
cmpb
push
fistpll
arpl
data16
cmpsl
cmp
jo
das
xor
faddp
icebp
icebp
mov
jle
pop
push
jge
rclb
cmpsb
inc
xchg
push
cmp
mov
adc
cmp
xchg
call
push
mov
lock
adc
adc
es
pop
insb
aas
jb
xchg
lds
jo
mov
jns
push
jnp
aas
push
shll
rclb
icebp
sbb
jl
push
in
push
xor
xor
enter
bsf
and
cmp
sarb
dec
movl
fimull
xchg
cmp
push
fdivrl
icebp
insl
out
mov
add
loopne
push
xadd
and
sbb
fwait
jb
mov
mov
clc
xor
pop
rorl
and
mov
mov
es
popa
lock
mov
test
loop
cmp
xchg
lock
in
xor
mov
jae
jmp
lock
lock
sbb
test
das
addr16
lock
stos
gs
dec
aaa
js
lock
out
ja
hlt
or
fwait
jo
jb
imul
push
adc
mov
in
dec
xchg
push
mov
out
lock
repz
mov
addr16
std
pop
outsl
or
nop
mov
add
addr16
or
and
mov
sar
into
out
lock
mov
or
lock
mov
lret
rolb
aas
mov
test
cmp
enter
into
jmp
jne
or
nop
mov
shrb
mov
icebp
lea
movsl
adc
icebp
lock
dec
and
xchg
sbb
xchg
adc
loopne
push
fs
mov
wrmsr
sub
inc
dec
sbbb
lret
in
negb
clc
inc
jle
or
inc
jo
pop
call
out
mov
ss
mov
add
pop
repz
xchg
test
mov
shl
imul
add
add
lcall
shl
das
jno
fcoms
ficomps
fisubl
test
pcmpeqw
fdiv
mov
xchg
popf
cmpsl
or
add
sti
mov
push
scas
rcll
lock
sbb
cmc
pop
fidivrs
lock
ds
fcomip
cmp
f2xm1
addl
scas
sbb
adc
cli
movd
js
cmp
or
aam
xchg
scas
icebp
gs
int
xchg
cld
add
mov
pop
repz
gs
fcomi
cmpb
push
push
ds
mov
push
jl
lock
out
or
push
adc
and
pop
mov
or
lock
rcrl
rclb
and
lea
in
hlt
lds
daa
fstp
push
gs
and
repz
jb
lods
pusha
nop
push
jbe
lock
or
lock
cmp
jle
pextrw
sub
das
mov
xchg
mov
jns
repnz
daa
mov
in
lea
jmp
inc
cmp
lock
sahf
jecxz
and
push
outsl
je
xchg
xlat
movsb
gs
jbe
sahf
lock
xchg
pop
out
xor
push
add
fidivl
loop
xor
faddl
call
sbb
scas
lock
repz
pop
lock
mov
cmpsb
mov
lcall
icebp
ljmp
out
xor
in
mov
out
inc
loop
mov
minps
mov
sbb
mov
cmp
mov
mov
out
push
ret
sbb
cmp
aam
pop
dec
cmp
icebp
adc
cli
sub
xor
scas
lods
test
mov
cmp
xchg
inc
xchg
sub
imulb
lea
mov
call
fsubl
inc
add
or
xchg
mov
mov
shrb
push
sub
push
cmpb
arpl
dec
inc
sub
pop
mov
dec
cmp
lock
or
mov
jl
xor
mov
pcmpgtw
call
cld
arpl
es
cmp
push
orb
xchg
scas
mov
lcall
jo
dec
xor
pop
and
and
lock
bound
shl
lock
push
sub
lock
adc
cs
push
sbb
lret
push
jge
cmpsl
jb
pop
js
xchg
adc
lock
imul
outsb
call
push
and
push
adc
shl
cld
imul
in
push
mov
mov
insl
shrl
pop
xchg
xor
sub
cmpb
lock
or
pop
add
jge
lock
hlt
mov
scas
inc
mov
sub
outsb
xor
jl
inc
pop
sub
mov
repnz
jmp
int
out
mov
dec
lock
mov
imul
lock
dec
jns
inc
ret
push
mov
mov
cmpl
xacquire
rorl
sbb
push
loopne
mov
push
fstpt
lock
or
or
out
jae
inc
popa
andb
mov
les
push
dec
jb
cmc
outsl
xor
ret
jo
or
sysexit
popf
fiadds
or
adc
int
mov
movsb
hlt
stos
inc
mov
and
std
cmp
pop
mov
lods
pshufw
add
repz
xchg
fwait
int3
lock
fsubp
and
mov
icebp
test
sub
mov
addr16
or
jno
lock
xor
jecxz
loope
sahf
sbb
push
lock
out
push
sbb
or
lahf
shr
or
add
push
xor
pop
jb
and
push
jae
cmp
mov
jnp
sub
iret
mov
fcomip
push
scas
cmpsb
cmc
cltd
lods
rep
mov
mov
fwait
jo
push
mov
and
aaa
insb
lock
push
cli
lock
xor
push
pop
dec
adc
icebp
add
push
lock
sbb
cmp
mov
jmp
icebp
and
je
addr16
inc
test
out
push
cli
in
lock
add
sbb
dec
ss
and
lcall
into
or
in
mov
inc
cmp
jo
dec
mov
lock
xchg
mov
lock
cwtl
lea
lock
mov
dec
sbb
ljmp
lock
dec
or
loopne
repnz
scas
xor
push
mov
push
mov
call
lock
shl
lret
adc
and
das
mov
jecxz
mov
cmp
ja
and
or
xchg
xor
or
add
popa
in
lock
mov
icebp
aad
dec
pop
jnp
dec
fmull
lock
sub
push
loope
mov
pop
xorb
mov
lock
les
xchg
aad
cs
add
mov
lods
jb
push
ljmp
in
sub
enter
fcom
je
lock
shll
lock
pop
dec
sub
mov
fidivrl
icebp
mov
int3
jmp
xchg
inc
loopne
adc
lds
mov
push
ja
sbb
jmp
pop
jae
xor
sti
push
jmp
shl
ds
push
and
test
mov
jo
push
add
repnz
int
ficompl
rol
and
adc
rol
inc
mov
in
push
insb
addb
in
pop
int
mov
adc
xchg
xchg
pop
inc
add
outsl
mov
cwtl
inc
add
lock
test
loop
lock
xchg
add
mov
imul
ret
lea
lock
addr16
lock
data16
inc
sbb
jae
jne
repz
adc
sub
fcomps
imul
mov
and
or
adc
push
pop
pop
in
scas
jge
add
pop
xor
xor
xchg
insb
ret
lods
mov
pop
js
repnz
test
and
adc
fwait
aad
lock
adc
push
sub
dec
cmp
mov
cmpl
imul
pusha
pop
sub
and
adc
lcall
loope
adc
sub
icebp
mov
or
popa
push
lock
pminsw
xlat
shrb
out
jmp
push
je
push
mov
pop
popl
adc
xor
stc
test
dec
and
lock
int
ret
lock
mov
mov
xchg
dec
add
sbb
push
jb
enter
push
push
dec
push
into
mov
loope
lock
outsb
jns
add
and
jg
rclb
in
mov
cli
jnp
xor
jo
xchg
xchg
mov
inc
push
lock
lock
pop
sub
sub
test
repnz
xor
data16
leave
mov
push
dec
divb
dec
int3
jl
lock
into
push
imul
lahf
bound
les
push
je
or
inc
mov
cltd
xor
lock
aas
dec
pop
mov
mov
and
dec
push
sbb
push
jno
push
ret
lock
sub
pop
fnstcw
jo
repnz
jge
sub
fisubrs
mov
mov
dec
fs
jae
aam
shl
mov
icebp
arpl
in
in
or
pop
or
xor
push
sbb
push
sub
loop
lcall
pop
daa
xchg
icebp
in
xorb
jg
push
adc
into
int
mov
add
inc
dec
push
inc
ficoms
mov
icebp
loopne
addr16
lret
jnp
sbb
shlb
popa
dec
or
jo
hlt
xorl
mov
aaa
push
jno
xor
inc
fwait
jae
loopne
popf
sahf
lock
inc
enter
xor
add
inc
movsl
xor
out
mov
lock
pop
test
pop
rorb
insl
test
lahf
mov
mov
and
mov
dec
divl
mov
cwtl
push
out
push
add
rcrb
hlt
pop
icebp
dec
sbb
aad
cmc
inc
lock
call
inc
add
lock
jge
add
test
cmp
movsb
test
xchg
dec
lods
inc
or
mov
or
and
ljmp
mov
std
orl
icebp
pusha
inc
jo
cli
pop
jno
imul
lods
cmp
fwait
push
or
std
mov
movsb
dec
xor
lret
insb
in
cmpsl
shll
sub
ds
push
and
movzbl
jnp
add
sub
lock
out
lods
adc
mov
mov
push
ss
lret
in
jge
jecxz
inc
sub
imul
pop
inc
sbb
loop
test
in
adcb
fs
rcrb
insb
lock
xor
xchg
decl
jns
lds
mov
jo
lods
jmp
pop
loopne
fadds
cmp
popf
int
cwtl
pop
repz
mov
cmpsb
lock
mov
out
in
sbb
mov
and
jne
loop
icebp
pop
cltd
mov
in
or
lock
scas
sbb
xchg
divl
mov
aam
jge
cmp
insl
imul
jmp
add
imul
stos
inc
sub
data16
mov
out
jnp
or
test
pop
push
pop
push
push
popl
and
iret
div
outsl
dec
mov
push
aas
lock
cmp
dec
lock
mov
in
push
jle
sbb
cli
std
push
subb
addr16
orb
mov
lret
or
mov
xadd
test
mov
sbb
hlt
scas
int3
adc
push
clc
xchg
lock
pop
sub
cmc
or
xchg
fidivs
adc
mov
add
push
push
mov
fistpl
add
mov
insl
scas
loopne
outsb
icebp
call
mov
pop
into
test
inc
fmul
dec
mov
jl
notb
push
jb
int3
bts
jae
pusha
insb
jns
mov
mov
pop
loopne
jo
jne
push
push
stc
dec
das
mov
out
cmp
stos
adc
test
push
pusha
lock
pop
mov
shl
test
rol
lock
jle
lock
fbld
es
unpcklps
aaa
jl
lock
subb
push
lock
push
lahf
pusha
icebp
popf
in
cmp
int3
cld
test
mov
hlt
fs
popf
pop
in
lock
in
pushf
mov
cld
sbbb
icebp
out
repnz
ss
scas
pop
gs
mov
lock
sahf
push
jns
fisttps
repnz
ret
and
std
jns
lock
hlt
test
jge
out
lock
cmc
in
lock
sahf
stc
mov
lock
cmp
subb
aas
adc
es
xchg
inc
jge
div
enter
or
adc
int
sbb
leave
repnz
pop
push
dec
popf
and
sbbb
inc
jb
lock
mov
mov
pop
movsb
lock
sbb
f2xm1
test
cmp
push
repnz
xor
js
mov
gs
addb
out
pop
mov
aam
adc
repz
daa
dec
adcl
dec
cmp
je
addr16
jo
gs
mov
repz
sbb
pop
xor
xchg
out
push
jae
push
loopne
mov
aad
xchg
es
mov
mov
stos
movups
add
adc
das
lock
pop
fcom
jle
lock
cmp
ds
psrld
ffree
pop
dec
inc
mov
lock
sub
add
sbb
icebp
je
xchg
cmp
jb
sub
mov
lock
and
mov
xchg
mov
or
aas
stos
lock
fwait
bound
pop
jne
rclb
dec
jno
or
cs
jmp
out
popa
jb
or
or
pop
adc
shlb
mov
lock
fidivrs
bswap
cs
scas
popf
out
adc
lock
push
repnz
les
mov
xchg
jmp
adc
mov
repz
dec
shlb
cmp
push
into
jnp
push
dec
add
fstp
xor
pop
inc
add
sbb
lock
mov
mov
adc
outsb
hlt
push
mov
packuswb
jmp
rcr
lock
movsb
in
adc
xchg
push
outsb
dec
test
out
add
inc
add
lea
lret
leave
inc
icebp
sub
xor
xlat
push
jnp
lock
gs
mov
fs
iret
inc
mov
cmp
mov
icebp
sbb
mov
dec
dec
push
xor
insl
popf
lret
dec
icebp
jecxz
sbb
scas
scas
inc
pusha
js
lock
cmp
movsb
xchg
icebp
pop
mov
js
sbb
nop
mov
repnz
and
mov
push
sbb
jge
pop
lret
dec
mov
outsb
adc
aas
lock
pop
xorl
push
inc
xor
inc
lock
mul
stos
and
std
lock
inc
add
mov
call
adc
sbb
xchg
cmc
lock
sub
sbb
xor
lock
insl
daa
or
jle
icebp
bound
ror
jae
or
jmp
out
mov
repz
xor
test
mov
sti
pop
jb
cmp
lock
xchg
insl
add
ret
cld
push
repz
popf
lret
data16
sub
xchg
loope
or
dec
int3
movsl
cmp
mov
enter
or
pop
lcall
les
out
aam
pop
xor
js
jo
sbb
xchg
adc
mov
add
pusha
mov
test
sub
adc
lock
and
pop
popa
jae
xchg
push
je
repnz
pop
mov
into
shlb
lock
pushl
ret
aam
add
push
cli
rorl
jmp
and
pop
lock
cld
pop
aas
mov
sbb
pop
dec
xor
xchg
addr16
sub
xchg
lock
and
outsl
outsb
fs
pop
movsl
lea
or
lock
pop
push
inc
cmpsl
ss
lcall
pop
out
mov
rorb
lock
notb
adc
popa
push
and
or
mov
xchg
decl
sbb
movsl
xor
lock
in
test
lock
pop
dec
lock
ljmp
icebp
pop
jg
cmp
out
mov
jbe
jne
shrb
fdivl
call
adc
adc
xor
cmc
lock
les
pop
sbb
icebp
ds
scas
add
lock
movsl
jns
adc
stos
inc
pop
mov
sbb
lock
jp
sub
clc
lock
push
pop
stos
sti
adc
push
or
pop
mov
jmp
mov
scas
clc
lret
les
lock
sbb
dec
add
popf
in
dec
lock
jno
popaw
imul
aad
fdivrl
stos
mov
in
ret
lock
add
inc
das
add
lock
jns
rcrb
sub
adc
mov
fisttps
shlb
xchg
mov
mov
ret
cmp
lock
adc
add
lock
int
mov
les
aas
xchg
push
jne
add
sbb
adc
pop
pop
rcl
add
pop
popf
fidivrs
inc
lock
sbb
out
add
lret
sub
push
rcll
xlat
jge
mov
or
xchg
lock
scas
out
lock
scas
shl
rcr
icebp
rolb
les
push
mov
sub
dec
loopne
repz
mov
int
adc
fnsave
enter
push
jo
inc
cmpsb
push
icebp
sti
into
aas
hlt
hlt
daa
sarb
out
lock
imul
lock
lret
popf
fisttps
lock
and
xchg
jmp
in
call
adc
mov
xchg
lock
out
testb
in
mov
icebp
pop
in
sbb
or
push
les
enter
inc
fs
push
fwait
mov
nop
xor
cmp
outsl
sahf
and
stc
in
ljmp
lods
notb
stos
jmp
pop
daa
mov
arpl
scas
ud1
lock
cmp
outsb
or
lock
inc
loopne
es
mov
testb
scas
repnz
mov
adc
scas
gs
cmpsl
sarb
insb
lock
fnstsw
iret
cld
mov
lock
mov
push
repnz
and
mov
negb
int
mov
mov
repz
adcb
xlat
pop
or
mov
rclb
cmpsb
clc
pop
pop
lock
mov
mov
mov
push
lock
dec
js
lock
nop
pop
mov
inc
pusha
scas
cmp
js
lock
xchg
pop
daa
in
pushw
nop
xor
mov
loopne
push
cmp
lock
das
jo
stos
cmc
repz
push
or
cltd
data16
mov
fwait
sbb
cmp
push
aas
mov
xor
je
jmp
cmp
lahf
cmc
dec
out
pop
pop
ret
lock
xchg
adc
dec
pop
or
sub
jg
cmp
fistpll
call
in
lods
mov
out
or
mov
in
pop
cmc
sub
shll
inc
pop
mov
jae
pusha
jle
insb
adc
adc
pushf
xchg
icebp
lock
cmp
ret
mov
xor
loop
icebp
gs
test
inc
movsl
in
dec
adc
push
shl
mov
lock
sti
xor
icebp
arpl
xchg
mov
mov
mov
das
xchg
sbb
js
rorb
add
imul
pop
lock
jno
out
mov
mov
mov
repnz
mov
cmp
ret
mov
pop
mov
inc
mov
push
adc
mov
push
jecxz
cltd
inc
pop
lds
imul
sbb
mov
push
scas
fisubs
mov
repz
xor
adc
sub
or
lock
mov
cmp
ds
xor
js
mov
and
xor
jne
shl
dec
mov
lcall
dec
movsb
lock
pop
sbb
fwait
pop
aaa
xchg
mov
mov
push
cmpsl
sub
sahf
jp
loop
push
lock
xlat
mov
inc
dec
mov
mov
lock
push
repz
and
daa
jg
data16
mov
iret
xor
sbb
pop
jno
pop
aaa
lock
sbb
jae
in
dec
jge
stos
shlb
lock
inc
repz
pop
and
lock
lea
push
push
insb
dec
and
pop
sbb
outsb
adc
mov
pop
xchg
mov
push
lock
movsb
sbb
xchg
mov
lock
into
enter
scas
outsl
mov
add
push
mov
add
lock
int
sbb
je
push
lock
lock
in
jo
inc
adc
or
shlb
clc
xor
test
aaa
out
push
or
push
mov
xchg
jmp
jbe
and
and
in
out
lock
dec
je
jb
loop
xor
sbb
aam
xor
push
mov
xchg
push
fldl
stos
popa
sbb
and
sbb
sub
cli
push
jnp
pop
xor
adc
cmp
sbb
mov
std
dec
movsb
adc
push
xchg
cmp
and
or
stos
stos
or
in
adc
mov
xchg
lock
sub
icebp
dec
push
push
dec
mov
aam
inc
adc
ficoml
loop
lea
push
imul
lock
outsb
and
clc
lock
push
jno
into
jecxz
adc
sbb
sbb
jae
xchg
or
dec
xor
lock
pop
dec
lock
ds
lock
xor
inc
jnp
lock
ljmp
popf
mov
daa
mov
push
bt
nop
shll
in
lock
ret
sbb
cmp
adc
adc
repz
mov
xor
mov
psubsb
rolb
loope
jp
and
cmp
xlat
jp
repz
insl
cmp
loope
stos
ss
mov
cmp
push
xor
aam
mov
or
push
stos
test
lock
fnstsw
xor
or
shrb
into
mov
in
mov
in
xchg
dec
lret
cmp
jo
loop
stc
cmp
mov
xchg
pop
jl
pop
xor
mov
push
adc
popf
xor
or
jecxz
mov
xchg
lds
lock
mov
loop
lock
mov
std
mov
or
aaa
mov
xor
and
mov
or
fcoms
aam
jo
adc
sbb
push
push
push
adc
push
fdivs
and
inc
mov
dec
lcall
arpl
sbb
das
clc
lcall
cmp
jl
sarl
mov
sub
dec
imul
outsb
cmp
cmpsb
and
int
push
sbb
jp
pop
add
push
lock
lret
rorl
js
lock
cmp
aas
push
icebp
push
lock
adc
test
lock
es
mov
imul
seto
inc
cwtl
sub
lock
or
lods
mov
push
das
fucomip
test
imul
sbb
lock
decb
lock
pop
jae
sahf
jne
test
ret
jecxz
lock
mov
inc
lock
cmp
and
mov
ja
xchg
jl
add
mov
mov
nop
fdivp
pop
or
sbb
lock
pushl
jp
adc
and
fcoms
lret
sbb
add
pusha
push
dec
add
mov
push
dec
jle
fists
xor
or
mov
fsubrl
lock
fdivrs
xchg
add
lock
xor
push
adc
mov
test
and
cmp
xor
es
js
lods
lret
rclb
xchg
jecxz
insb
push
cmpsb
add
or
fldl
mov
loope
inc
aas
mov
cmpb
dec
lock
jo
push
push
sahf
push
xchg
or
sarl
loop
lock
outsb
hlt
fs
lock
push
sub
push
sbb
mov
std
or
cld
lea
jge,pn
lcall
inc
inc
loop
and
in
out
insb
sbbb
pop
mov
fsts
xor
sbb
out
add
jb
aam
fwait
or
jo
mov
scas
lock
nop
mov
iret
test
into
pop
jb
xchg
icebp
dec
call
inc
in
mov
icebp
jg
or
stos
movsb
ds
cmp
xor
aam
xor
gs
outsl
adc
lock
xchg
lock
inc
add
popa
mov
dec
lock
into
or
cmp
loope
pop
lock
mov
xor
jae
jno
clc
push
fs
lcall
adc
and
jbe
mov
icebp
lea
inc
in
xor
in
leave
mov
cmp
imul
lock
inc
out
es
pushf
loop
lock
outsl
gs
jmp
dec
movsl
cmp
add
scas
inc
jo
addr16
add
aam
lret
pushf
test
ret
lock
and
cmp
jo
add
mov
mov
out
lea
cld
in
pop
scas
mov
outsb
pop
rclb
fnstenv
lock
mov
adc
cmpsb
push
sbb
mov
jmp
repz
xor
mov
lock
cmp
lock
mov
out
popf
shl
roll
xchg
mov
rcr
xor
push
out
xor
mov
dec
dec
jp
je
jno
imul
enter
nop
mov
shr
lock
fwait
or
xor
jg
mov
lock
popa
or
ss
mov
lock
xlat
push
mov
insb
arpl
sahf
pop
mov
mov
mov
or
int
cmpl
jmp
xchg
inc
repz
addr16
pop
call
sub
lock
jge
out
icebp
mov
pop
cmpsb
and
pminub
push
xor
leave
adc
int
scas
xlat
jmp
push
dec
aaa
jns
lock
fisubrs
push
in
jbe
mov
or
xchg
mov
adc
push
in
rcl
in
ja
jle
lock
xchg
out
into
fldl
xor
shll
lock
push
adc
in
sub
xor
aaa
cmp
inc
lock
stos
and
jno
stc
jo
mov
mov
xor
aad
and
icebp
dec
int
negl
sbb
andl
in
ljmp
scas
xor
stc
sub
push
mov
pop
jle
add
mov
push
cmc
sbb
jnp
dec
cld
mov
cmp
or
pop
clc
sbb
out
in
fwait
lock
mov
lock
ja
cmp
xor
dec
or
mov
lock
inc
inc
test
xorl
lock
sbb
and
jg
mov
decl
lcall
dec
mov
jb
fsubrp
sbb
xor
mov
xor
mov
and
pop
cmc
fcomps
lock
enter
call
jp
inc
lock
push
mov
xor
mov
movd
lock
outsl
jmp
mov
ja
sbb
in
bound
ffreep
ljmp
je
push
mov
sar
lock
dec
outsb
call
adc
icebp
out
push
mull
or
inc
aaa
lock
arpl
xchg
mov
adc
mov
pshufw
repz
je
hlt
mov
and
adc
or
mov
mov
xor
movsb
jo
out
cld
ror
inc
movsl
pop
cmpsb
mov
lock
pop
lock
push
popfw
pop
mov
mov
push
enter
add
cmp
push
std
mov
add
iret
sbb
xorb
lods
lock
ret
and
pop
push
mov
mov
das
icebp
push
repz
mov
loopne
aas
shl
mov
fisttpl
inc
movsl
add
push
mov
repz
pop
adc
test
imul
dec
lock
jge
cld
test
mov
pop
ja
pusha
lock
push
jle
mulb
xor
dec
lods
xor
xor
insl
push
sbb
adc
mov
in
mov
shrb
test
mov
mov
insl
add
mov
adc
das
push
imul
sti
mov
nop
lock
pop
shll
and
cmp
push
lock
gs
jmp
clc
lock
mov
lods
dec
in
je
jbe
xchg
xchg
push
mov
mov
mov
or
xor
jg
and
dec
mov
mov
sub
mov
sbb
test
jle
xchg
lret
jp
lock
fidivs
jg
lock
pop
outsl
into
add
lock
mov
push
fnstenv
mov
fdiv
cmp
mov
fwait
mov
pop
pavgw
fldcw
mov
pop
and
cmp
mov
jle
lock
mov
js
test
icebp
cmpl
into
pop
aam
jle
pop
jmp
jbe
jo
insl
adc
mov
lock
aam
mov
sbb
addr16
mov
lock
or
shl
lcall
outsl
jo
or
cmc
jp
sub
sldt
test
popa
sahf
or
or
sbb
repz
test
in
cwtl
mov
aaa
cli
cmp
fidivrs
lock
imul
insb
sub
mov
outsl
lea
inc
cld
hlt
dec
fs
xlat
push
mov
test
rol
lock
push
call
stc
rolb
adc
cmp
mov
xor
lock
cli
andb
mov
pushf
push
add
ja
lock
ss
mov
or
push
mov
inc
add
lock
lcall
and
sbb
lock
in
movaps
shrl
or
pusha
dec
jb
hlt
lock
sub
dec
js
mov
mov
lahf
jae
loop
testb
mov
or
lock
pop
xchg
insl
mov
dec
inc
lret
pop
fdiv
xchg
xor
jecxz
mov
pusha
mov
je
mov
scas
movsl
mov
into
sbbb
push
push
mov
lock
lcall
addl
mov
mov
inc
sub
xor
mov
sub
repnz
lock
jns
imul
in
lock
popf
xchg
jp
push
xchg
pop
fildl
add
lock
syscall
mov
inc
stos
mov
lock
mov
sub
pop
shrl
rcl
cmpsl
xor
and
dec
aam
mov
bound
les
iret
cmc
fsubr
cmp
xchg
ud2
cli
lcall
xchg
cwtl
jp
lods
jbe
or
aam
js
and
sbb
test
lock
jb
push
mov
and
push
in
loop
jns
ret
lcall
cmpsb
mov
lods
xor
sbb
add
xor
adc
sub
cs
mov
lock
cwtl
dec
add
jns
lock
fsubs
out
or
movsb
inc
cmp
dec
inc
les
daa
xor
sti
subb
cwtl
pop
lock
pop
and
inc
iret
stc
aam
gs
mov
pop
cmp
lea
jne
cs
repz
xchg
xor
lock
maxps
mov
pop
call
sbbb
add
fxch
test
push
lock
pop
andl
repnz
cmpsl
lock
sub
mov
sub
and
adc
pop
es
dec
adc
or
or
repz
mov
pop
mov
and
lock
push
sub
test
dec
jecxz
lock
xchg
push
lock
roll
push
int3
das
jno
and
mov
mov
lock
out
and
xor
push
jo
xchg
ljmp
mov
mov
inc
pusha
push
imul
inc
sbb
ja
xor
xlat
loop
scas
lock
sarb
mov
lock
negl
nop
sub
mov
inc
aas
or
lock
incb
mov
push
clc
mov
lock
lods
xchg
jmp
pop
mov
shll
cmp
sub
scas
lock
ret
or
popa
loop
icebp
jg
orl
mov
or
sbb
or
pop
ds
fiaddl
ret
or
xchg
push
enter
xchg
jbe
xor
xchg
adc
push
lret
cwtl
add
lea
xor
mov
sahf
adc
xchg
jne
add
mov
push
mov
push
xor
cmpsb
dec
int
repz
sbb
jbe
push
cwtl
cmp
cmp
xchg
mov
pushf
lock
ja
cwtl
dec
popf
insb
jbe
icebp
clc
pop
push
cmp
stc
ljmp
pop
aam
dec
lock
sbb
lods
fsubrs
daa
mov
xor
icebp
lcall
adc
jbe
js
ja
lds
cmpsb
or
add
pop
icebp
or
xor
call
mov
dec
inc
jge
lock
subb
out
xor
lfence
outsb
ljmp
lock
lods
jae
rorl
pop
mov
mov
lret
pop
fbstp
mov
pop
cmpb
push
jnp
iret
mov
ret
lock
push
test
je
andl
mov
movsl
repz
inc
clc
aad
icebp
xchg
xchg
jo
add
adc
inc
imul
popa
jmp
mov
lock
push
lock
mov
icebp
xchg
mov
adc
jbe
lock
cmp
jno
stos
loop
mov
mov
push
pusha
rclb
jecxz
lock
mov
sub
int
test
idivb
push
lret
push
insb
lock
cmp
lahf
mov
sub
xchg
ja
lock
jle
or
stc
mov
mov
in
inc
pop
lods
ret
jo
cmpsl
and
jbe
xorb
dec
mov
lock
push
xor
lcall
outsl
xor
enter
mov
movups
and
scas
dec
ret
xor
lock
inc
xchg
popa
or
dec
icebp
mov
lds
xchg
lock
and
pop
mov
xor
repz
fwait
jl
pop
mov
mov
mov
xchg
add
dec
cwtl
bound
mov
lock
jnp
pusha
ja
push
mov
inc
dec
and
mov
test
inc
loop
lock
fwait
cmp
mov
ljmp
mov
add
xor
cmpb
adc
xchg
mov
push
lcall
adc
add
mov
sarl
xor
pop
jo
xchg
jne,pt
in
push
pop
vlddqu
test
movsl
outsb
push
repnz
inc
sbb
fldcw
ja
jmp
push
repnz
divl
xchg
mov
ja
jge
xchg
sbb
in
lock
jne
dec
dec
dec
pop
fiadds
mov
cmp
lock
inc
xchg
loope
jo
lock
mov
pop
stos
lock
test
and
testb
adc
insb
cli
lock
orb
daa
mov
jae
inc
sub
xchg
js
popf
mov
sub
adc
push
sbb
inc
movsl
pop
push
mov
dec
cli
ja
loopne
pop
jge
jbe
outsl
add
cltd
ret
roll
mov
shlb
mov
jns
icebp
out
pop
in
stc
adc
pusha
ja
lock
inc
jbe
or
add
popf
movsl
lcall
lods
mov
or
aam
pop
and
adc
stos
out
into
ja
lret
gs
mov
lock
cld
and
stos
mov
and
loop
out
scas
jo
lahf
inc
push
sbb
outsb
loopne
jb
test
icebp
dec
jno
mov
mov
ret
adc
pop
in
ss
ja
sarb
mov
cmp
test
insb
add
lods
movsb
data16
shrb
jbe
dec
cmc
push
lock
pop
mov
bound
repnz
and
cmp
jo
xor
adc
push
into
cmp
data16
in
lock
mov
mov
sbb
mov
aad
fcompl
lock
rcrb
mov
sbb
jo
mov
push
xor
aam
xor
inc
outsb
add
pop
xor
repnz
test
mov
cmpl
push
mov
test
lock
xchg
and
and
mov
or
insb
xchg
xor
test
jge
adc
or
or
sarl
test
imull
gs
enter
lock
lcall
lock
jb
int
inc
fwait
bnd
cmp
mov
sbb
jno
fidivrs
jae
or
lods
nop
imul
pop
add
lret
insb
sub
inc
xor
mov
pusha
popf
xchg
cmp
cmp
outsb
inc
lock
adc
push
jbe
or
hlt
mov
outsb
pop
jmp
xor
sbb
loopne
lock
cmp
xchg
ljmp
insb
xchg
mov
loop
repnz
cmpsl
mov
lock
pop
mov
or
lahf
out
rorb
add
mov
dec
pop
stos
aad
adc
fnstsw
subb
aam
mov
in
ror
fdivrs
cli
add
jne
adc
out
xchg
lock
xor
dec
pop
adc
push
out
mov
pop
iret
mov
or
nop
adc
pusha
addr16
lock
sbb
pushf
lock
daa
xchg
xor
lock
jnp
mov
cmp
sbb
mov
mov
rcr
lock
or
aam
mov
cmp
pop
icebp
mov
shll
lock
push
push
cmp
out
test
jmp
lods
adc
fucomip
insb
mov
xor
pusha
repnz
rcrl
shlb
push
out
das
pop
pop
add
push
adc
fistps
cli
adc
push
call
out
mov
xchg
movsl
das
in
cmp
ficoml
dec
cli
andl
stos
xlat
push
dec
mov
jmp
push
and
lret
pop
enter
jp
lock
cld
pushf
pop
dec
test
mov
inc
and
clc
imul
data16
into
lock
mov
xor
xor
sahf
jg
xchg
addr16
fdivp
call
jae
add
xor
jmp
lock
mov
popa
loop
add
jne
shlb
lock
pop
fisubrl
lock
mov
mov
mov
cmp
add
ret
int3
push
shll
movsb
in
cmpsb
aad
jbe
pushf
mov
sbb
jnp
lret
rorl
jmp
jle
das
pop
push
push
in
or
lcall
push
pusha
divb
cmpsb
mov
mov
lock
pop
pop
dec
std
lock
mov
add
pop
pop
jmp
and
push
fidivl
xor
fwait
icebp
jp
jne
mov
pop
or
sub
dec
dec
xchg
push
add
mov
sub
shll
xchg
sub
dec
pop
mov
mov
stc
pop
cmp
dec
lods
loope
lock
out
and
aas
lock
scas
dec
in
jge
je
push
ficoml
aam
andl
bound
cmpb
pusha
mov
adc
mov
cmp
mov
out
sarb
ficoms
test
inc
xor
in
sbb
sti
repnz
mov
les
jnp
and
cmp
ja
in
mov
mov
lret
push
mov
out
xor
push
fabs
cmpsb
lock
subb
lea
add
repz
sub
jmp
mov
mov
lods
jge
fisubrs
insb
ret
push
repz
loopne
outsb
aam
sub
fwait
inc
aaa
jns
add
mov
sbb
popf
ja
lock
test
mov
pushf
or
mov
shrb
lock
lahf
dec
push
cmp
mov
lock
shrb
aam
pop
dec
cmpsl
adcb
dec
popa
inc
lock
stc
or
lock
mov
or
data16
mov
mov
sbbl
rorb
aam
addr16
inc
addb
pusha
xor
mov
leave
push
mov
fldenv
cmpb
rolb
lea
cltd
cmp
enter
xchg
lahf
cs
scas
movsl
lock
add
and
cli
shl
xchg
clc
fstpt
sub
cs
ret
pop
mov
sbb
jp
jae
andb
xor
lock
in
fsubs
mov
test
testb
cltd
lock
cmp
sbb
lea
mov
lock
test
adc
adc
sarb
mov
jp
cwtl
mov
movl
cmp
prefetch
adc
xor
xlat
std
cmp
mov
popf
mov
jns
lock
ret
es
cmp
push
mov
out
push
lret
adc
lock
xor
push
insb
lock
icebp
adcb
dec
mov
ss
jne
lds
mov
mov
mov
mov
pop
jo
push
fiadds
jb
sbb
pop
dec
cmpsb
add
sub
dec
and
jns
icebp
xlat
rclb
dec
fdivp
jg
mov
jbe
push
test
fwait
cmp
xor
sar
lock
cmp
mov
in
nopl
je
lds
mov
lock
pop
in
cmp
dec
iret
cmpsl
adc
inc
fldcw
sub
inc
lock
ds
mulb
int
into
mov
mov
or
js
lea
shl
dec
lds
mov
adc
and
cltd
xor
into
push
clc
mov
hlt
or
dec
fistl
mov
pop
aad
push
lret
andl
lock
mov
lock
push
cmc
fdiv
dec
inc
lock
mov
cmp
dec
incb
mov
fcomip
nop
push
sti
adc
xor
movsl
push
lea
mov
jge
mov
stc
clc
jmp
icebp
ret
xchg
pop
int
push
and
stos
adc
xor
shl
mov
imul
xchg
lock
insb
cwtl
or
insl
sahf
adc
lea
out
add
inc
lock
es
lret
int
push
xrelease
imul
fcoml
lock
mov
lret
out
mov
aas
cwtl
sbb
cmp
movsl
dec
mov
movsb
fcoml
testl
sahf
aad
lods
mov
daa
xchg
sub
mov
cmp
popa
bound
fwait
jae
fcomip
in
cmc
stos
mov
mov
mov
sub
dec
das
push
jmp
out
mull
sub
out
shl
pop
lea
mov
shl
xchg
pushw
pop
jbe
repnz
add
push
push
in
mov
mov
xchg
dec
push
nop
xlat
mov
fcomip
pop
lock
or
jmp
lock
adc
lock
test
sub
outsl
jmp
cmpsl
test
xchg
mov
mov
xchg
sbb
xor
or
in
orl
fsubrl
test
cmp
or
mov
pop
add
stos
or
fwait
hlt
pop
cltd
lock
or
incb
loop
cmpsl
mov
adc
pop
mov
cmp
jg
pop
rcr
lods
nop
adc
pop
out
dec
xor
jb
imul
je
repz
lock
mov
out
mov
jae
jo
out
ja
cmp
dec
hlt
inc
dec
push
orl
ror
jge
lock
sbb
hlt
xlat
lret
cmp
fsts
cwtl
cmc
lock
in
xchg
mov
xor
lock
mov
push
aaa
lock
in
hlt
dec
push
xchg
aam
pop
jne
xchg
sarb
addr16
out
fnstenv
lock
xchg
lds
addb
jle
pop
pop
xchg
mov
call
adc
js
xchg
pop
cmp
push
push
xor
test
in
dec
add
push
cli
pop
or
jae
lahf
or
or
dec
mov
lcall
cltd
jp
js
loopne
lock
push
pop
enter
mov
jno
pop
jne
test
rorl
pop
lock
adc
push
stos
add
popf
cld
dec
mov
lock
jmp
and
stos
insl
lret
lock
xor
fadds
pop
xor
push
in
hlt
addl
sahf
pusha
jle
mov
xor
push
jo
mov
adcb
pop
lock
mov
daa
add
mov
pop
inc
repnz
lock
or
push
shl
pop
cmpsl
mov
push
cvttps2pi
lds
fucom
mov
out
lock
ret
push
xor
dec
xor
sbb
push
outsl
in
lock
in
shrb
ficompl
xchg
dec
jno
testb
or
loopne
repz
fwait
lods
orb
pop
jge
les
add
mov
or
sub
adc
xchg
shlb
in
test
push
out
jae
jb
nop
mov
xchg
lock
xor
jecxz
test
repz
mov
scas
lret
lock
lods
sub
xlat
lock
outsl
aam
cmp
lock
int
ret
xchg
out
rcll
loope
cmp
push
fucomi
cwtl
mov
dec
xor
inc
filds
sti
jle
cli
push
cwtl
test
daa
mov
test
lock
popf
subl
sbb
jge
pop
xlat
fwait
lock
insl
popf
pop
add
loope
xchg
out
jne
lock
test
cwtl
sub
inc
or
jb
jo
sti
in
lock
leave
push
add
jge
and
xlat
lock
cmp
or
test
icebp
cmp
lea
insl
adc
xchg
jo
cld
push
mov
xchg
and
lock
xchg
dec
xchg
outsb
mov
sbb
divb
push
pop
dec
push
repnz
mov
push
jmp
icebp
sbb
mov
movsb
cltd
adc
mov
sub
les
adc
into
or
push
fnsave
pop
pop
push
and
bound
leave
xor
jb
mov
push
adc
and
push
xor
inc
lock
mov
aaa
lock
jbe
insb
dec
mov
xor
setb
mov
dec
jmp
scas
testb
mov
repz
adc
or
xchg
lock
xor
into
lock
pop
xchg
loopne
inc
fdivrs
xor
test
aas
sahf
out
lock
sbb
adc
push
mov
pop
xchg
xor
push
clc
int
sub
push
lods
xchg
sbb
mov
mov
adc
jecxz
xor
inc
xor
xchg
shlb
pushf
jns
add
mov
adc
or
inc
ljmp
cmp
push
lock
out
ficomps
push
aad
jb
fldcw
dec
mov
fstl
add
adc
ret
pop
xchg
out
out
push
cli
jo
mov
dec
lock
pop
addr16
imul
test
jo
mov
push
sbbb
call
sub
lahf
cmc
cli
movsb
pop
lock
mov
cmp
push
push
into
jge
mov
les
jne
sub
add
push
pop
mov
fcom
mov
adc
sub
mov
lret
xor
xchg
push
dec
mov
in
or
gs
daa
mov
pop
in
mov
insl
inc
cmp
in
jmp
hlt
cmpl
shl
lds
jne
xchg
test
mov
mov
cld
push
aad
mov
lock
push
push
inc
int
add
sti
popf
enter
inc
mov
pusha
es
lock
and
outsb
pop
mov
std
push
insl
push
in
lock
jle
pop
or
arpl
mov
adc
call
in
xor
cmp
mov
les
pop
cli
mov
pusha
cmc
insl
filds
subb
dec
add
and
pop
jno
or
jne
int
rolb
add
xchg
sbb
lock
adc
xor
add
pop
lock
push
xchg
xchg
pop
xchg
adcl
repnz
pop
lock
movsb
loopne
xchg
add
hlt
jecxz
int3
rclb
lock
or
in
hlt
lock
pop
stos
lock
xor
sbb
loope
leave
mov
loop
incb
pusha
mov
jbe
inc
jp
dec
mov
shl
and
inc
pop
dec
or
inc
lock
lock
push
xor
pushf
push
and
or
ret
jb
jg
cmpsb
mov
jns
or
push
or
cli
add
jbe
pushf
test
lock
sub
insb
sahf
push
scas
psubusw
out
xchg
pop
jno
pusha
jge
lock
data16
ss
repz
xor
adc
pop
fbstp
lock
loopne
xor
shl
lahf
in
pop
jo
je
inc
out
and
sbb
cmp
push
enter
sub
cs
sbb
push
insl
push
pop
push
js
leave
lock
push
mov
and
jmp
pop
or
mov
lock
push
lret
notb
ret
xor
cmp
loop
jmp
aam
xor
push
in
cli
lock
add
dec
sub
pop
icebp
icebp
jecxz
jnp
sub
lock
es
iret
lds
xchg
negl
ljmp
mov
iret
and
ss
mov
lahf
mov
and
adcl
fsubp
sbb
pop
lock
xchg
repnz
leave
pusha
and
push
scas
or
or
mov
arpl
pop
xor
mov
aad
not
mov
ror
loopne
and
cmpsl
insl
xchg
add
push
jns
lods
pop
jno
lahf
clc
sub
lock
xchg
mov
les
iret
es
neg
gs
add
sub
lock
xlat
ljmp
aaa
popf
cmp
mov
cmp
and
jne
cli
shr
sub
lock
inc
cltd
lock
jnp
ret
pop
push
lock
iret
pop
insb
mov
pop
aaa
xor
aam
mov
add
ret
les
in
mov
lahf
addr16
fcomip
incl
cwtl
inc
or
rcrb
add
jle
push
push
lock
adcl
xor
mov
sub
add
aam
aaa
mov
xchg
jae
jo
cmp
std
fcomi
insb
xchg
and
mov
cwtl
push
inc
inc
mov
jg
and
pushf
lock
sub
and
push
or
push
mov
lock
mov
jnp
lock
sbb
and
pushf
cld
add
xlat
adc
ret
mov
inc
lock
pusha
shll
xchg
loop
lock
dec
jg
fstpl
dec
cmp
sub
sbb
lock
mov
and
mull
std
ds
push
lods
dec
lock
dec
test
inc
out
lock
cmove
cmc
mov
inc
inc
mov
and
scas
test
add
repz
push
push
inc
pop
rcrb
popf
and
pop
in
lock
scas
enter
and
outsb
cltd
lock
je
sub
imul
inc
xchg
lock
sbb
jno
dec
mov
lock
mov
fdiv
aaa
mov
das
fcomip
ret
xchg
popa
paddw
xchg
mov
or
aas
jo
lock
lock
mov
cld
sbb
jns
push
mov
and
xchg
ss
jp
or
rorb
rcrb
int3
lock
inc
sbb
jbe
and
or
pop
xchg
test
push
cwtl
out
movd
mov
repnz
das
mov
pop
arpl
lock
shrl
in
orb
xchg
cmp
xor
mov
icebp
jbe
push
mov
sub
mov
cli
sub
pop
inc
enter
lock
cmovnp
lock
push
lock
ss
shll
dec
lock
pop
mov
jg
call
insl
dec
lea
ret
sub
daa
lock
mov
or
lock
jno
enter
lock
shll
andl
cmp
mov
fiaddl
push
xor
xor
cmp
pop
mov
xor
iret
mov
lock
mov
movaps
shl
xchg
or
dec
dec
cmp
int3
outsb
imul
sbb
iret
icebp
push
cmp
clc
sub
mov
out
lcall
mov
lock
cmp
push
sbb
lock
repz
shlb
jae
in
and
push
xchg
mov
mov
cwtl
sub
orb
lock
scas
mov
dec
mov
jb
icebp
jmp
lock
insl
mov
mov
cli
pop
stos
lock
in
lock
push
dec
stos
jge
pop
xor
lods
clc
pop
aas
sbb
insb
add
mov
push
add
aam
xor
xor
mov
subl
icebp
mov
sub
in
or
into
or
psadbw
loop
mov
lock
xor
incb
lods
push
mov
adc
jl
inc
mov
xor
mov
xchg
movsb
test
jb
push
loop
lock
and
mov
fmuls
pop
lock
les
orb
sub
mov
fwait
cmc
push
xor
inc
out
jecxz
sbb
xchg
push
in
cli
push
mov
fsubl
mov
or
xchg
jne
test
packssdw
cld
sahf
mov
div
lret
mov
add
negb
jmp
jo
jb
xchg
js
sbb
movsb
test
add
sahf
pop
pop
repnz
scas
or
cmp
jo
imul
fsub
pop
jg
mov
in
pop
mov
sub
lock
ja
femms
mov
adcl
fsubr
stc
add
jno
addr16
mov
inc
adc
push
fbld
icebp
scas
cltd
cli
mov
ret
dec
add
or
popf
mov
jne
icebp
rcl
jle
mov
mov
mov
xchg
pop
movsb
pop
psrad
lock
adc
mov
mov
sub
xchg
daa
pushf
dec
invd
mov
xchg
mov
dec
jno
repz
sbb
sahf
push
lock
into
insl
and
mov
xchg
dec
add
int3
cmp
mov
lock
rcrb
mov
add
adc
push
test
or
pushf
jo
mov
clc
xorl
test
push
jb
lock
jmp
sarl
lock
fdivrl
lock
inc
sbb
pop
and
pop
mov
std
ja
mov
out
or
lock
mov
adc
clc
dec
bound
outsl
hlt
mov
lock
mov
jecxz
fldenv
mov
mov
mov
stc
cmp
mov
cmp
cmp
mov
scas
cs
pop
add
lock
xchg
xchg
popf
fdivrl
jl
push
daa
ret
out
sub
cwtl
jle
rorl
clc
pop
lock
subl
jge
lock
aas
lock
test
insb
and
lock
push
icebp
lock
sbb
test
cmp
mov
out
xchg
decl
mov
jne
lock
xchg
or
pop
jmp
pcmpgtb
xchg
add
jecxz
mov
cmp
mov
pop
insl
nop
adc
adc
pop
push
pop
and
xchg
adc
pop
dec
add
shr
fdivp
nop
xchg
dec
xchg
push
add
lahf
ss
pusha
sub
push
pop
inc
nop
mov
or
inc
adc
cli
test
pop
arpl
clc
pushf
lock
mov
dec
push
popa
aaa
lock
xchg
pop
add
xchg
lock
test
and
repz
pop
popa
mov
mov
mov
mov
cmp
sbb
icebp
mov
shlb
lock
lret
push
mov
insl
icebp
pop
jb
or
clc
push
pop
addb
xor
adc
xor
mov
pop
sbb
pop
push
mov
imul
or
fadds
jo
sbb
lock
dec
aaa
and
lock
sahf
imul
das
out
cmp
lock
daa
add
lock
lds
sbb
repz
adc
insb
push
lock
mov
rcl
jg
insb
xor
lock
out
mov
shlb
xor
dec
test
iret
aaa
nop
insl
cli
scas
or
mul
cmpsl
test
add
mov
stos
xchg
or
int
repnz
sub
mov
lock
popa
and
adc
icebp
test
xor
bound
lock
jmp
cmp
lock
push
xchg
adc
adc
mov
dec
es
mov
lea
leave
and
ljmp
js
scas
or
adc
xchg
popa
mov
rorl
sub
lock
scas
sbb
movsbl
mov
push
outsb
mov
xchg
icebp
add
out
mov
in
icebp
sub
lret
sub
xor
je
fsubs
mov
fs
shrl
mov
xor
shlb
dec
aam
mov
inc
iret
sbb
cmc
sbb
jo
loope
inc
test
push
push
rorb
outsb
mov
lock
sahf
ret
push
lods
shlb
lods
jmp
imull
lock
aam
push
imul
mov
pop
test
test
push
sti
into
imul
addr16
lock
pop
cmp
jno
pusha
lock
rolb
or
imul
lret
out
lock
xor
mov
sub
stc
cmp
push
data16
cltd
jle
mov
mov
push
or
je
das
push
outsb
popf
jnp
mov
fcoms
push
jle
clc
sti
lock
insl
mov
adc
and
or
mov
lock
movd
outsb
jnp
lock
out
push
jne
insl
lock
repz
cld
movsl
imul
cmp
cwtl
outsl
jo
push
lods
fldt
xor
mov
inc
sbb
out
test
push
xor
ljmp
popf
push
aam
ds
xchg
out
push
mov
cmp
dec
mov
and
in
or
aaa
popa
scas
xchg
mov
ljmp
xchg
cmpsb
lock
sub
and
push
insl
dec
orb
push
xor
lock
imul
je
mov
jne
outsb
leave
addr16
mov
shl
cmp
inc
lock
scas
sahf
pop
ret
add
lea
fsubr
and
jnp
lock
dec
jmp
jp
lock
call
and
movsb
jp
dec
pop
cs
test
pusha
jae
ljmp
or
lahf
shr
insb
in
das
lock
jp
test
mov
lock
loope
mov
std
sbb
cs
jbe
gs
pop
mov
in
dec
aaa
pusha
icebp
aas
jp
aaa
shlb
mov
inc
push
les
jno
cmpl
mov
inc
andb
std
add
call
loopne
sub
dec
outsb
scas
imul
jb
lock
xor
out
jne
clc
lock
sbb
into
lock
add
les
insb
in
mov
imul
outsl
test
cli
pop
mov
fisttpll
pop
call
dec
sub
push
add
push
xchg
xchg
incb
inc
jg
or
icebp
fdivr
and
sbb
lock
push
mov
out
xor
jbe
push
repnz
sbbl
fldt
sbb
xchg
iret
fwait
dec
and
pusha
into
dec
fnstenv
lock
mov
inc
mov
mov
lea
test
dec
pushl
mov
dec
test
xor
inc
push
int3
xor
or
das
jp
imul
lock
fsubrs
ljmp
arpl
aas
imul
lods
jno
push
icebp
add
stc
test
das
push
jno
cmp
dec
lock
mov
fildll
or
ret
lock
in
jmp
xchg
sbb
movsb
add
push
pop
not
sbb
cli
popf
and
icebp
sbb
loopne
mov
push
inc
push
xchg
shl
cmp
and
add
jb
mov
jp
inc
jns
call
cwtl
mov
insl
aad
xor
or
pop
lock
or
sbb
repz
mov
shlb
es
push
cmp
mov
insb
lock
into
cmc
popa
cli
mov
or
inc
jnp
data16
and
jb
or
shrb
shlb
jae
inc
das
rolb
dec
add
dec
lea
outsl
scas
sub
mov
xor
lock
push
std
and
cmc
push
call
inc
lods
lock
gs
inc
lock
jbe
adc
out
outsb
xor
out
xchg
into
inc
xchg
cld
call
push
sbb
pushf
push
ljmp
pop
push
sahf
push
arpl
xor
mov
es
jmp
cmpsb
jno
les
adc
cmp
push
push
orl
icebp
push
jo
jae
xchg
sub
scas
pop
sarb
sahf
icebp
int3
cwtl
out
push
outsb
es
mov
dec
push
mov
mov
sbb
into
pop
sub
mov
lods
push
lea
out
loop
jno
movsl
test
jne
enter
ss
popa
cmpsb
fnstsw
js
push
insl
mov
xor
xor
movsl
jle
lock
sub
fcmovnb
lock
add
cmpsb
rclb
push
or
loop
push
cltd
mov
sahf
pop
mov
mov
outsl
cmp
add
movsb
pop
pop
outsb
inc
lock
dec
push
ss
mov
call
popa
jmp
ret
andb
lock
xchg
js
shufps
ds
ljmp
adc
push
jno
ud0
lock
mov
lcall
mov
push
push
stos
pop
dec
mov
pop
pop
fisttps
pusha
jge
lock
sbb
push
outsl
sub
lock
gs
rcll
inc
push
dec
repnz
jae
fs
shlb
xchg
sub
cmp
pop
jo
jb
je
xchg
icebp
or
and
decb
pushf
push
lock
xor
mov
jae
lock
mov
cmp
into
jno
mov
jns
arpl
and
lock
insl
lahf
jle
lock
test
mov
outsl
bnd
sahf
push
lock
mov
jns
add
lock
fnsave
aas
xor
xchg
filds
jne
outsb
jo
fwait
test
lds
ljmp
jge
repz
clc
mov
xchg
jne
lock
sbb
lock
punpckhwd
lea
shlb
cmp
lret
in
add
jne
pop
orb
into
pusha
and
cwtl
idiv
sbb
xchg
jne
outsl
std
pusha
in
inc
repz
dec
je
lret
fdivs
out
push
test
addr16
push
adc
pop
push
mov
add
in
jb
lock
pop
imul
cmp
gs
out
icebp
mov
les
adc
enter
lock
or
push
ja
divb
push
jb
scas
and
push
sti
push
sub
int
mov
scas
outsb
call
cld
push
mov
sbb
movsl
imulb
lea
adc
into
jo
movb
xchg
lds
mov
popa
je
subb
repz
rcr
movsl
xor
sar
fdiv
xchg
add
pop
xchg
fldcw
jo
inc
enter
mov
cmp
sbb
dec
lea
lock
xor
xchg
mov
dec
lock
das
icebp
pop
pop
cmp
fsubrs
clc
and
jne
aaa
sub
lock
hlt
sub
push
mov
lds
and
out
lock
je
jbe
adc
outsl
adc
into
mov
lock
inc
xchg
cmpsl
push
jp
lock
or
lock
cmp
ja
or
inc
enter
into
cli
out
cmp
sbb
sub
jo
jbe
lock
clc
repnz
nopl
pop
mov
gs
dec
repz
dec
cmp
and
jno
jmp
fs
cmp
mov
and
sbb
push
or
xor
dec
ficomps
gs
mov
mov
xor
pop
jbe
mov
jo
cmc
mov
dec
call
shll
and
test
hlt
out
pop
lock
mov
jae
push
int3
mov
popf
loop
lock
call
sarl
xor
or
and
xchg
out
pop
adc
and
in
sbb
test
dec
add
jle
add
xor
cmc
mov
xor
dec
insb
push
jmp
sub
pop
or
cli
jb
adc
dec
sub
mov
sbb
iret
mov
inc
mov
fs
test
out
push
and
and
inc
sbb
shlb
popf
lock
xlat
sub
lock
dec
lcall
jp
data16
loopne
pop
cmp
mov
xchg
dec
frstor
mov
test
icebp
jecxz
cmp
add
movsl
push
mov
or
iret
inc
jecxz
clc
cmp
push
insb
jmp
jle
mov
jo
xor
les
xchg
cmp
fdivrs
jae
add
fcomps
pop
mov
dec
lock
insl
mov
push
out
lock
fimull
lock
pop
push
add
dec
add
or
or
dec
add
mov
mov
lock
dec
in
push
xor
data16
lock
xchg
adc
mov
adc
lock
push
mov
lods
in
lock
pusha
mov
mov
push
adc
pop
mov
data16
loopne
jge
sub
movsl
dec
and
cld
lock
add
dec
xchg
add
repz
test
xor
cmp
sbb
pop
cltd
lahf
push
push
add
lock
in
inc
jae
sbb
lock
adc
lock
outsl
repz
lret
mov
dec
push
into
in
lock
shl
mov
lcall
in
leave
repz
pushf
mov
bt
sub
sbb
inc
and
je
aaa
imul
stos
cmp
add
lret
ljmp
rorl
jg
mov
and
aas
out
ret
push
addr16
aad
adc
jl
test
shlb
shlb
out
lea
bound
adc
mov
mov
setp
test
mov
aam
sub
mov
push
cwtl
nop
lock
call
push
sub
inc
sbb
or
adc
lock
arpl
dec
xchg
jbe
lock
lea
int
and
mov
mov
clc
adc
sub
lahf
adc
push
mov
lock
xor
mov
pop
sub
xchg
arpl
lods
push
nop
push
and
loop
cli
sbb
out
pop
add
lock
mov
fildll
and
in
fstps
shlb
cs
sbb
lock
mov
gs
icebp
push
adc
pop
jl
fdivr
adc
call
stc
mov
mov
bound
cmp
pusha
test
push
adc
popf
xor
sub
lock
mov
mov
adc
in
es
aaa
lock
sub
rcrb
adc
clc
add
jae
sbb
sarb
flds
cmp
lods
jbe
pop
xchg
mov
jo
fucom
js
lock
repnz
mov
or
lea
dec
xchg
and
aad
add
loop
ja
push
cwtl
leave
or
pop
xchg
lock
or
dec
aam
xor
xorb
inc
mov
sbb
push
movsb
sbb
jle
out
test
popf
and
mov
cltd
in
adc
fidivrs
mov
xlat
lock
push
mov
xchg
xchg
mov
lock
or
xor
dec
jo
loopne
jmp
cmp
add
sbb
stos
push
test
pop
leave
out
in
push
mov
or
and
out
enter
or
mov
sbb
xor
xchg
sti
into
and
pop
sbb
jo
push
mov
rol
xor
dec
pusha
push
lock
inc
daa
cmp
sub
lods
popl
lea
std
sub
adc
pop
jnp
push
lock
xchg
imul
dec
xlat
jno
fisttpll
aad
in
fs
pop
xor
loopne
repz
enter
or
mov
popa
lock
addl
adc
pop
fadds
lahf
mov
pop
lock
out
xor
and
xchg
mov
out
lea
push
add
push
lock
jl
lcall
jbe
mov
lock
sub
negb
stc
les
lock
lahf
or
icebp
inc
xor
aas
mov
xor
in
in
or
dec
divps
xor
sbb
pusha
dec
sbb
prefetcht2
and
dec
xchg
and
mov
lock
in
jl
mov
xlat
cli
and
dec
outsl
lock
xor
repz
fcomps
outsb
hlt
sub
incl
and
mov
lock
and
jl
lret
jp
int3
iret
cmp
lcall
jmp
lock
jo
or
sarb
ja
movlps
cmp
movsb
incl
dec
mov
repnz
push
addr16
lock
mov
xchg
pop
and
out
ss
lock
data16
ss
inc
lock
loope
or
imul
fcoms
sub
mov
jl
es
lcall
adc
lock
stc
push
push
sub
cmp
mov
outsb
push
mov
sbb
lock
sub
dec
lock
in
je
cld
add
div
push
mov
jno
mov
in
fnstenv
into
or
outsl
iret
jo
arpl
push
xchg
arpl
loope
push
add
xor
mulps
mov
outsl
mov
enter
sub
adc
jo
lret
xor
inc
xchg
lock
cmp
loop
lock
jne
je
sub
rorb
lock
mov
aad
mov
out
inc
fiaddl
imul
adc
cmp
ds
ljmp
jge
mov
jg
fisubs
int3
lea
sbb
lock
adc
pop
lods
jo
lock
ret
mov
jno
push
out
mov
aaa
daa
loope
push
scas
cmpsl
neg
cmp
aad
sarb
lock
mov
in
lock
cmpsb
dec
inc
rcrl
xchg
or
cmp
and
jmp
stos
jne
push
shll
enter
rcl
incb
lock
lahf
and
sub
mov
enter
icebp
lock
push
xor
push
leave
popa
shl
dec
cmp
xor
mov
sbb
and
js
sbb
lock
lds
push
imul
add
ja
lods
data16
jbe
lock
dec
push
push
lock
int
sbb
in
inc
lock
jno
mov
lock
clc
cwtl
cmc
sbb
test
mov
ficoms
push
or
cmp
push
jle
xor
idivl
pop
mov
movsl
outsl
pop
add
cmpsb
ret
in
ja
push
shlb
xor
addr16
mov
or
jle
pop
mov
lock
sbb
imull
or
mov
loopne
loopne
icebp
mov
adc
pop
mov
cmp
in
pop
sub
xchg
adc
into
je
push
dec
inc
add
iret
push
ffree
sbb
jo
out
sbb
jb
mov
mov
into
call
lock
iret
jno
cmp
out
lock
xchg
jle
cmp
xor
pushf
sub
lcall
pusha
add
test
push
cmp
inc
push
lock
cmpsb
push
std
xchg
lock
pop
pop
out
icebp
addr16
adc
cltd
lock
xor
test
jb
ds
mov
jo
xor
mov
xor
ljmp
sub
lcall
dec
adc
pop
inc
je
cmp
sti
adc
popa
in
pusha
mov
xor
cmpsb
icebp
push
lret
sar
test
jecxz
lock
adc
lock
push
xor
movsl
jbe
repnz
inc
mov
push
pop
rorb
xor
aaa
push
int3
xor
in
loope
cltd
nop
lock
adc
clc
inc
lock
sbb
cwtl
jle
in
in
sub
lock
push
jg
pop
mov
mov
xchg
fnstenv
or
or
adc
jb
lds
lock
jne
ret
cwtl
cmp
repnz
insl
xor
mov
and
or
jno
xchg
hlt
xchg
aaa
pop
pop
push
faddl
dec
lock
cwtl
push
jne
ss
jecxz
roll
mov
lock
mov
call
mov
ss
faddl
lock
jnp
insl
in
lock
or
mov
cmp
add
adc
fstpt
mov
ljmp
in
cwtl
fbld
lock
mov
scas
xchg
push
dec
xchg
stos
pop
pop
lock
mov
fwait
pop
jmp
lock
or
sub
push
mov
mov
scas
cld
xor
or
add
fdiv
cwtl
jno
jg
lock
push
fwait
mov
mov
mov
cmpb
int3
in
scas
fwait
mov
cmp
scas
pop
sahf
sub
mov
mov
mov
xor
jge
sahf
mov
mov
sbb
mov
jmp
mov
mov
scas
in
lock
lock
and
mul
lock
sub
fisttpll
fisubl
jo
cmc
sbb
cmp
jo
or
div
in
adc
push
xor
repnz
std
mov
shrb
mov
and
repnz
lock
pop
mov
andb
lock
pop
jmp
pop
lock
add
jb
adcl
int
sti
push
imul
xchg
test
repz
call
data16
sti
jb
out
lret
inc
lock
sbb
mov
hlt
into
repnz
popf
push
out
clc
mov
in
divl
lods
enter
push
loope
repz
divl
aaa
sub
or
push
jbe
xchg
insl
push
cmpsl
cmpsb
lock
inc
dec
je
cwtl
mov
in
dec
pop
pusha
lock
test
cltd
aad
insb
jge
insl
fldt
cmp
mov
mov
jle
pop
test
mov
pop
jbe
mov
daa
lods
lock
lock
js
mov
dec
dec
lds
mov
pop
sub
mov
clc
mov
mov
cmc
lock
js
rcrb
mov
lock
ds
lock
pop
and
insb
adcl
aas
xchg
dec
shll
pushf
sbb
enter
call
shrb
push
pop
mov
pushf
out
lcall
jae
cli
or
in
mov
shrl
fisubs
into
pop
jno
dec
mov
pop
negb
xor
mov
enter
xchg
add
lock
cmp
pop
sub
loop
sahf
push
and
sub
dec
clc
jle
jnp
maxps
mov
loopne
push
mov
xor
jbe
ljmp
xor
dec
pop
xlat
dec
add
push
inc
mov
mov
out
jo
push
xchg
and
call
and
pop
mov
mov
add
or
jo
jmp
push
js
lret
mov
testb
into
xchg
and
mov
mov
fwait
std
pop
outsb
movsl
or
push
mov
loope
sbb
test
lock
push
les
js
push
xchg
pop
in
sahf
xchg
push
push
lock
push
mov
fsubr
scas
mov
mov
xchg
push
mov
xlat
ss
cwtl
ja
lods
cmc
out
jae
jmp
pop
hlt
andb
test
or
lea
add
insb
mov
and
lock
cmpsb
mov
sti
xor
mov
cmp
mov
sbb
dec
jno
into
cli
negb
or
enter
pop
ret
adc
pop
jno
int
pushw
mov
lock
mov
in
push
lock
push
mov
mov
repz
insb
sahf
and
lock
mov
mov
loopne
fucompp
add
imul
lret
cmpsl
paddsw
inc
cwtl
push
call
rcr
inc
and
inc
aas
inc
shll
lahf
testl
mov
outsb
adc
add
fildll
add
mov
mov
cmp
hlt
fists
xor
lock
mov
dec
mov
sub
addr16
add
loop
pop
xlat
jmp
mov
fucom
ja
adc
pop
sbb
xor
push
icebp
sub
sti
lock
negl
push
outsb
adc
cmpb
loopne
pop
lock
mov
mov
xchg
out
out
lock
enter
xchg
or
fwait
dec
loopne
cld
clc
mov
pop
or
sahf
xchg
add
jo
xchg
lahf
cld
insl
repz
xor
adc
subl
inc
mov
repz
sahf
lock
repz
mov
mov
dec
rcll
sub
and
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loopne
mov
mov
mov
test
jo
lcall
cltd
pop
stc
mov
dec
loopne
movsb
xorb
rcrl
std
sbb
aad
pop
push
sub
lock
into
push
or
int
fstl
mov
jmp
jecxz
movsb
push
lods
jg
adc
cs
arpl
mov
jo
mov
push
mulb
popf
mov
jbe
lock
rorl
pop
mov
movsb
in
shlb
dec
leave
enter
repnz
fsubrs
lods
push
mov
cmpsl
mov
mov
xor
cmp
adc
mov
lods
leave
fwait
aaa
dec
scas
jo
mov
lock
push
imul
lods
in
xor
or
mov
lock
xchg
pop
mov
and
jecxz
sub
cmpsb
adc
sub
imul
mov
mov
adc
lock
sub
data16
xchg
mov
mov
or
hlt
loop
int
sub
std
lock
pop
lahf
mov
addr16
ljmp
sub
jae
sbb
loope
mov
psubb
xchg
add
dec
sub
xor
out
adc
dec
sar
pop
xchg
inc
mov
hlt
sbb
cmp
repnz
lret
cmp
sbb
jns
cmp
lods
add
ficoms
repnz
jmp
xchg
in
mov
or
ds
bound
insl
sbb
push
push
xor
divb
adc
xor
adc
push
jge
rep
mov
pop
dec
icebp
arpl
mov
sub
loopnew
cwtl
sbb
xor
divl
mov
lds
loop
dec
jae
push
shl
xchg
loopne
adc
dec
insl
push
push
cmp
push
sub
jo
jo
push
outsl
add
leave
sbb
adc
push
fistl
sbb
out
mov
xor
inc
lods
cltd
pop
movsl
mov
stc
jno
leave
div
xor
divb
iret
addr16
pop
test
iret
dec
pusha
clc
fdiv
icebp
cmp
push
jp
lock
mov
inc
cmp
clc
shlb
or
jae
icebp
outsb
icebp
stc
std
mov
jae
adc
mov
push
dec
adc
and
shr
jb
mov
add
mov
cmp
fucompp
imul
std
jo
push
stc
dec
add
icebp
add
add
call
orb
mov
dec
ret
mov
or
or
jb
or
mov
inc
je
popa
dec
and
jb
or
mov
mov
daa
xor
adc
cmp
repz
or
mov
cmpsl
and
and
inc
movsb
andb
jmp
rep
adc
bound
insb
adc
dec
divb
cmp
lods
data16
mov
je
aad
and
jns
and
cmpsl
ljmp
push
push
sbb
ds
pop
idivl
test
fwait
imul
inc
sub
push
jg
data16
jl
and
mov
xchg
insl
lock
mov
int3
pop
addr16
scas
inc
jbe
mov
bound
cli
lock
dec
je
lock
adc
popf
in
lock
push
push
mov
cli
sub
push
popa
sbb
add
dec
cmp
add
sbb
mov
iret
addr16
outsl
cs
mov
adc
faddl
pslld
mov
and
jl
adc
pop
mov
push
out
inc
shrb
enter
aas
jecxz
orl
lock
xchg
sub
lock
in
lock
addb
ljmp
testb
jle
and
mov
scas
rep
or
leave
shll
pushf
dec
pop
mov
sbb
push
dec
shlb
xchg
pop
ret
inc
cmp
int
and
popa
cmp
mov
scas
and
pop
int
rcrl
push
hlt
mov
jno
shl
cwtl
stos
insl
in
inc
jmp
xor
mov
or
or
psrlq
push
rcl
pop
xchg
mov
xchg
iret
filds
clc
call
pop
and
out
repnz
and
bound
mov
scas
ja
lock
or
popa
add
xchg
lock
dec
bound
cvtps2pd
stos
cmp
aad
xor
adc
bswap
fsubrs
movsl
lock
push
ret
cmp
push
cmpsb
xor
xchg
pop
sbb
cmp
adc
pop
xor
sub
je
jmp
sub
sbb
mov
xorl
lret
cmp
sub
mov
dec
inc
push
add
lock
add
xchg
lock
in
inc
or
mov
mov
int
iret
fists
lock
jnp
in
jne
lock
pop
icebp
lea
int
stc
aam
xor
cmpsl
notb
or
jmp
lock
jb
push
ja
mov
fisttps
pop
mov
icebp
push
xor
in
cs
inc
jmp
addr16
add
push
xlat
repnz
loop
mov
lock
out
pop
lock
jle
push
inc
repnz
pop
stos
outsl
iret
mov
adc
add
cmp
pusha
test
cmp
test
shl
ds
filds
popa
dec
fcomps
jecxz
repz
sbb
lock
fstps
lock
int
ja
xor
mov
sbbl
mov
loopne
xor
test
addr16
push
dec
out
mov
dec
stos
fisubrl
and
mov
xor
outsb
mov
mov
lock
pop
stos
push
xchg
cmp
push
xor
mov
add
aad
xchg
fsub
lock
or
fs
lret
mov
fcoms
test
aam
enter
mov
hlt
sarb
loope
inc
pop
jae
mov
sti
mov
mov
cmp
jg
cmpsl
cmpsb
out
jb
jae
out
clc
jmp
rolb
add
mov
push
mov
sub
mov
or
add
cmpsb
add
cmp
sub
mov
or
aad
and
icebp
pushf
xor
cli
jp
pop
push
pop
jno
jns
int3
lock
repz
fdiv
outsl
pop
inc
push
mov
pop
lock
popa
dec
pusha
jo
lock
or
fstpl
outsl
cmp
xlat
jae
ss
cltd
adc
shll
ds
jle
xchg
mov
and
mov
mov
insl
jge
mov
loope
mov
ficomps
arpl
scas
xchg
mov
lock
insl
loope
movsl
and
gs
jo
mov
outsb
push
sbb
mov
mov
repz
push
into
add
xchg
das
and
or
push
stc
icebp
clc
mov
rorb
add
cltd
adc
mov
sub
push
pop
cmp
jmp
pop
bsr
loopne
sbb
dec
push
fs
pushf
test
movsb
fdivr
sbb
jle
cli
push
ret
lods
jmp
and
mov
sub
mov
cmpsl
mov
loop
mov
or
jno
fsubrs
lock
push
test
mov
and
add
mov
aaa
filds
je
out
dec
icebp
cmp
push
out
hlt
cli
shrl
aam
jmp
sbb
ja
lret
lock
pushf
mov
nop
aam
cmp
lock
fcomip
fwait
push
jmp
push
insb
add
dec
repnz
stc
mov
sub
int3
adc
push
fadds
enter
aas
pop
dec
lock
cmpsb
mov
push
and
cmp
push
mov
std
lret
sub
mov
aad
cmp
xor
jl
int3
push
jno
mov
jae
xchg
mov
jnp
pop
pop
scas
cmpsb
fcmovbe
mov
xor
imul
ljmp
lea
push
adc
xor
sbb
fdivs
cmp
adc
outsb
xchg
repz
outsl
add
pop
fsub
jno
sbb
fldcw
aam
icebp
ss
inc
adc
mul
and
femms
sbb
jae
xchg
repnz
test
ficoml
lea
test
sbb
jne
in
and
jno
outsb
cmp
push
orl
sub
xchg
push
cld
adc
xor
jb
cmp
sub
dec
pop
lock
test
pop
lock
dec
lds
dec
xor
or
fstpt
daa
adc
jecxz
lahf
clc
sbb
dec
xor
divl
push
jae
sbb
in
or
aam
adc
call
mov
icebp
jo
jg
mov
mov
daa
repnz
clc
pop
stos
fcomip
adc
jle
data16
mov
push
scas
inc
lock
sbb
mov
and
xchg
xor
iret
mov
or
inc
lock
jno
inc
imul
sub
push
in
in
inc
lock
jmp
push
and
int
in
lock
lret
sbb
loope
mov
cli
mov
fwait
pop
cwtl
sub
cmp
adc
dec
xor
popa
icebp
ficoms
rolb
mov
dec
pusha
mov
arpl
add
jb
pop
mov
xor
aam
mov
popa
nopl
icebp
add
in
xchg
ljmp
pop
jg
ret
inc
cli
xchg
lock
jp
mov
jle
jne
lock
nop
das
sub
jg
or
loopne
gs
cmc
xor
mov
movsl
nop
iret
mov
xchg
pop
dec
pop
popf
sub
fstps
push
repnz
outsl
adc
cltd
pusha
pushf
adcb
fwait
dec
ret
out
pushl
mov
adc
mov
es
cli
mov
sbb
add
push
loope
je
dec
jp
xor
push
rcrl
mov
lods
pop
cs
jl
push
in
and
subb
addr16
adc
scas
pop
mull
iret
arpl
cmpsl
dec
lock
or
mov
hlt
setb
addb
push
ss
ds
lcall
inc
inc
adc
pop
sub
rcrl
es
add
arpl
les
pop
inc
pop
xor
push
pusha
das
leave
mov
insb
rorl
lea
push
fs
push
into
aas
dec
div
ror
mov
sub
nop
test
add
in
push
sarb
adc
test
mov
mov
jmp
cmp
push
mul
std
fldenv
test
decb
pop
mov
push
clc
icebp
mov
fdivl
out
sub
in
mov
in
adc
ret
adc
nop
sub
ret
xchg
mov
push
sub
adc
into
inc
ja
test
jp
jmp
push
stc
std
inc
iret
add
mov
push
xchg
adc
mov
sbb
push
push
xchg
adc
repnz
ljmp
jmp
xor
in
cmp
xor
scas
ret
add
jae
mov
mov
jmp
xchg
repnz
popl
push
out
mov
rorl
push
imul
ror
lock
mov
pop
mov
sbb
xor
jmp
mov
adc
push
add
jnp
aas
sub
ds
lods
call
ds
lock
insl
jl
addr16
dec
mov
pusha
xor
lods
sub
mov
pop
data16
jns
sti
imul
pop
insb
mull
test
mov
cmp
ljmp
jns
out
cltd
dec
fs
adc
push
cmc
xchg
arpl
cli
jo
pop
cmc
dec
cmp
cmpb
bound
in
into
fiadds
lock
lods
lock
mov
in
jp
lock
or
pop
xchg
lock
xchg
ror
jmp
daa
ja
fbstp
jnp
pushf
lock
mov
insl
icebp
sbb
insb
mov
ret
inc
push
push
cmpsl
out
xchg
adc
testl
jnp
clc
decb
push
repz
or
pop
inc
sbb
lock
sub
test
repz
aas
xchg
or
xor
out
clc
push
adc
push
cmp
sub
jmp
add
sbb
rcrl
add
push
outsb
mov
mov
mov
mov
mov
pop
dec
or
lods
mov
scas
pop
adc
adc
lret
xchg
inc
addb
cli
sub
ds
sahf
mov
repz
repnz
dec
fcmove
pop
ret
sub
outsl
lcall
lock
mov
popa
arpl
pop
lock
dec
rorb
cli
pop
lock
ficompl
cmp
pop
xchg
xor
stos
add
out
out
or
mov
inc
test
mov
push
xchg
push
xchg
loope,pt
out
lock
int
ffree
push
rorl
test
inc
push
sbb
fiadds
dec
sti
add
mov
mov
lock
std
insb
or
adc
sti
mov
movsl
adc
pop
inc
push
jns
pop
imul
push
sbb
repz
les
xchg
jo
pop
xchg
pop
or
sahf
mov
das
shll
icebp
aad
movsl
xor
div
filds
out
xchg
lret
lock
cmp
pop
icebp
fcmovnu
push
inc
or
repz
repz
std
pmulhw
pop
xchg
sbb
lock
imul
cld
sahf
js
pop
nop
jge
or
push
jle
push
xchg
or
xchg
loopne
lcall
mov
jae
addl
mulb
adc
lock
cltd
lock
subl
out
rolb
mov
lock
inc
push
jge
sbb
mov
loope
notl
jo
xorb
lock
inc
xor
lock
dec
std
jbe
and
pop
dec
lahf
cs
push
sbb
pop
lock
stos
cmp
lock
pop
aad
or
or
shl
test
cmp
fcmovbe
repnz
mov
shl
xor
lock
in
and
addr16
mov
sub
outsl
mov
jp
jmp
inc
jl
lock
push
sbb
out
int
adc
into
bound
sub
fildll
clc
mov
jge
test
lds
cmp
movsb
xchg
sub
call
bswap
mov
adc
ret
daa
in
decl
jb
inc
imull
or
lock
and
dec
movl
mov
adc
xchg
std
xchg
ret
iret
adc
shr
call
xchg
jo
xchg
clc
push
repz
stc
hlt
iret
adc
into
or
in
xor
shlb
cmc
loope
aad
jecxz
mov
jmp
jo
lret
fisttpl
jno
testl
cmp
jle
pusha
bnd
lock
mov
dec
aaa
mov
xor
xor
xchg
add
sbbl
sub
movsb
roll
test
leave
jo
fisttpl
or
adc
sar
repz
lods
fmuls
push
jae
icebp
or
and
and
test
sbb
and
pop
dec
push
dec
lock
ss
pop
mov
dec
push
cmp
leave
rolb
dec
int
xor
mov
lock
xchg
std
data16
sti
dec
loop
lock
mov
inc
push
imull
aad
and
push
pushf
mov
sub
pop
push
pop
insb
mov
push
jl
sarl
repz
mov
fidivs
xor
lock
xor
stos
mov
cli
icebp
dec
scas
ss
cwtl
int3
lock
adc
cltd
lock
aam
lock
jge
cwtl
pop
xchg
ficomps
into
jb
cld
and
mov
js
icebp
dec
jl
daa
sub
push
mov
sti
lahf
lock
pop
cs
or
lock
mov
outsl
imul
mov
icebp
jae
leave
mov
sbb
lock
mov
sbb
jmp
xor
lock
or
lock
mov
adc
mov
fbld
push
out
sub
cwtl
jmp
sbb
pop
bound
pop
mov
in
das
jbe
shrb
or
lock
mov
shlb
das
jnp
gs
loope
sub
popf
xor
test
repz
sbb
decl
fucomi
imul
rol
rcl
mov
aaa
lret
add
int3
adc
fcomi
jmp
insb
scas
aas
add
push
inc
call
push
mov
jns
pushf
ficompl
add
inc
mov
inc
lret
es
adc
jno
pop
test
inc
sbb
pop
mov
mov
dec
rorb
jmp
adc
push
lds
mov
inc
xchg
adc
push
shr
adc
and
jno
jecxz
sub
mov
jae
sub
or
cld
adc
mov
fdivp
maxps
mov
add
icebp
cmp
cmpsb
rcl
adc
sub
pop
icebp
insb
and
in
cmp
add
popa
xor
stos
sbb
adc
repz
std
test
pop
test
xchg
xor
je
and
adc
or
adc
sub
cs
pop
mov
repz
test
imul
jle
test
lock
cmpsl
jbe
sbb
adc
sub
push
xchg
test
push
xchg
clc
xor
mov
push
mov
scas
xor
dec
nop
mov
outsb
cmpsb
cmp
mov
adc
jb
or
pop
into
enter
jle
das
cs
mov
inc
push
cmpsb
jle
push
pop
cld
sbb
in
pop
repz
cmp
jmp
mov
loopne
dec
dec
icebp
cmovg
jl
inc
shlb
test
mov
shrl
leave
and
repz
mov
pop
dec
les
lock
inc
add
insl
lock
adc
scas
push
addr16
xorb
rorl
ret
inc
mov
js
or
jecxz
ja
jne
popf
cmp
and
lock
dec
test
lods
jno
imul
std
xor
pusha
xchg
test
std
sbb
js
jl
mov
iret
add
shlb
les
lock
cmpsl
xchg
mov
cltd
adc
inc
out
mov
xor
orl
jb
aas
lock
mov
mov
push
mov
je
xor
lret
mov
outsb
or
xor
ljmp
push
lock
gs
cmp
mov
testb
push
lahf
cmpsb
testl
jge
push
in
js
mov
lret
dec
pop
push
push
sbb
xor
jo
mov
dec
xor
les
add
icebp
mov
push
sub
es
lock
lea
inc
aas
ret
or
xor
lcall
add
lea
test
fisttpll
mov
fisttpl
mov
sbb
fidivs
jae
adcl
mov
in
xchg
xor
mov
xchg
into
ret
rorb
xchg
pop
loopne
and
mov
cli
adc
cmp
mov
mov
lock
inc
add
or
sub
jo
out
lock
ret
mov
iret
jge
cmp
lock
inc
push
gs
or
dec
sti
fistpl
lock
ja
into
cli
inc
mov
fildll
dec
cmp
push
jo
lret
jns
sbb
add
xor
fists
lcall
jb
test
push
in
mov
cmp
jnp
xchg
xchg
ror
add
and
test
imul
repnz
pushf
faddl
push
mov
and
mov
sbb
daa
inc
lock
lahf
add
lock
mov
cmp
push
test
call
shrb
adc
adc
cs
mov
lock
adc
fsubrl
and
push
fmuls
rcr
punpcklbw
sub
push
repz
cmc
in
jle
fucomip
pop
lock
shlb
arpl
lock
lcall
push
push
and
jl
fidivl
push
push
jge
out
iret
adc
lock
insl
mov
fsubrp
jp
ljmp
sbb
cmc
cld
lock
mov
push
lock
std
adc
mov
pop
mov
inc
test
push
pop
nop
sub
rorb
data16
jecxz
nop
or
icebp
xor
jge
repz
xor
cmp
loop
sarl
popa
pop
and
inc
stos
adc
inc
lock
mov
jge
sub
ja
mov
mov
jae
mov
mov
and
jno
mov
fucom
sub
enter
mov
in
dec
repz
add
fdiv
cltd
push
sub
icebp
or
mov
cmp
mov
jo
or
xor
inc
icebp
icebp
jno
inc
es
cld
mov
repz
lods
xor
xchg
lock
ljmp
sub
xchg
xchg
sub
cmpsb
scas
push
jmp
xor
dec
xor
loope
jae
cmp
jmp
push
mov
pop
inc
shll
and
sbb
dec
lock
cmp
std
call
add
xchg
push
inc
mov
xor
adc
cmp
push
jp
testb
mov
cmp
or
popf
sub
icebp
outsb
jo
jge
and
test
lock
push
push
movsl
out
push
push
clc
enter
je
test
fsub
jne
ficoml
adc
lock
pop
notl
out
in
push
outsb
loop
jo
stc
xchg
inc
pop
movsl
pop
sbb
psubusw
push
and
int3
jae
push
mov
cwtl
xchg
loop
xor
cmp
sbb
jae
lock
ds
outsb
adc
arpl
into
jle
stos
cmp
mov
das
inc
xor
jmp
or
pop
mov
decl
xchg
clc
lock
jmp
jo
test
cs
je
ds
jmp
je
int3
rcrl
ret
fsubrs
mov
mov
nop
stc
mov
fnstsw
mov
enter
stc
mov
repnz
addl
jno
mov
cmp
pop
inc
jo
jmp
mov
xor
orl
xor
cmpsl
mov
push
cmp
push
dec
jbe
fisubrs
lock
mov
xchg
int3
repnz
jmp
dec
cmp
call
push
sbb
cmp
jmp
outsb
sti
lret
mov
xlat
push
rcl
xor
daa
sbb
mov
lock
ret
jp
or
jmp
or
movsl
adc
enter
dec
sti
stos
popf
add
jmp
mov
xor
loope
test
pop
ljmp
enter
pop
jb
dec
fidivl
repz
inc
into
or
jmp
and
mov
or
add
hlt
lds
mov
mov
js
aad
mov
mov
sti
sbb
movsl
xor
cmp
xchg
nop
das
clc
push
cmp
movb
jo
cli
int3
aaa
pop
pop
sbb
pop
movsl
shll
adc
sub
call
roll
repnz
pop
mov
das
dec
divb
mov
mov
mov
rcrl
icebp
into
sti
fidivrl
mov
pop
mov
inc
xor
push
mov
or
cmp
jmp
call
and
ds
push
lret
jae
loopne
outsb
push
jno
mov
pop
into
jmp
data16
inc
addr16
insb
ret
outsl
xor
movsb
xchg
cmp
leave
lahf
or
sahf
hlt
xchg
jge
add
ret
psubw
jo
cmc
push
cld
or
cmp
test
cmp
lock
inc
and
sbbb
std
sub
sbb
dec
xorl
or
or
orl
mov
repz
push
push
and
jo
cmc
mov
outsb
push
call
inc
xchg
icebp
iret
inc
out
in
repz
aad
int
add
or
fisttps
pusha
js
add
mov
jb
add
xor
dec
rol
lock
inc
mov
sahf
adc
test
repnz
aam
sub
or
and
pusha
and
xor
and
lahf
add
cmp
xchg
adc
ror
pushf
push
insl
lods
xor
aaa
lock
push
data16
add
ss
sarl
or
shl
add
adc
lock
and
push
push
mov
cmp
push
sub
push
pop
std
push
pop
jo
fisubrl
or
xor
xchg
filds
jne
adc
pop
mov
xlat
push
cmpsb
lds
inc
xchg
mov
daa
mov
mov
lahf
and
rcll
xchg
fmull
lods
push
mov
lock
in
cmc
roll
mov
stc
not
mov
mov
fwait
push
lods
and
loop
sub
jbe
pop
ja
aad
lret
loop
loope
sub
dec
loop
movsb
or
into
inc
in
xor
add
lock
add
scas
ljmp
mov
dec
lock
xchg
inc
push
push
fwait
pop
mov
xor
je
les
es
xchg
adc
test
jp
movsl
xor
notb
out
push
mov
mov
push
cli
mov
test
xor
push
rclb
add
fldl
pop
in
jo
scas
or
pop
rclb
jbe
mov
testb
mov
and
bound
xchg
push
mov
pop
scas
mov
mov
shl
push
mov
imul
push
push
adc
repz
lahf
dec
cmpl
loope
inc
fs
pop
dec
push
jmp
jge
dec
mov
or
gs
outsb
mov
sub
pop
inc
xchg
xchg
or
push
sbb
stc
and
ljmp
rorb
and
mov
push
cld
pushf
mov
lret
call
arpl
std
adc
mov
ss
xchg
xchg
mov
imulb
ljmp
mov
xchg
pop
jo
pusha
loope
lock
xchg
data16
popa
jmp
in
cs
icebp
enter
adc
icebp
ljmp
pusha
add
lock
sbbl
cmp
ret
clc
test
in
pushf
push
shrb
mov
lcall
cltd
scas
or
push
lock
jle
mov
rcrb
aam
mov
stos
mov
add
xchg
lock
jg,pt
outsl
idivb
jne
jp
cs
or
cmp
mov
enter
icebp
jbe
rorb
mov
mov
xchg
xchg
es
xchg
dec
data16
aaa
test
push
in
adc
jle
jo
xor
inc
in
dec
lret
scas
lret
mov
add
sbb
and
add
pop
jmp
xor
lds
add
pop
aas
xor
roll
movsb
push
ss
mov
fnsave
lock
xchg
push
in
movsb
push
lock
xor
inc
repnz
inc
pop
loope
jae
loopne
clc
jae
pop
mov
pop
test
stc
jne
in
andb
xor
bt
xor
fs
lods
dec
sub
jge
test
jae
add
leave
les
popa
push
int3
jmp
push
mov
and
mov
adc
ljmp
cmp
lret
out
fmul
clc
in
lods
and
sarl
in
sub
jo
jmp
mov
mov
lea
add
jecxz,pt
and
push
test
add
dec
dec
inc
inc
and
cmp
cmp
push
scas
stc
or
lock
push
sub
mov
ret
mov
add
je
xor
idivb
jmp
stos
sub
pop
das
aaa
push
push
outsb
lock
test
mov
add
lock
icebp
push
pop
xchg
call
jo
add
xchg
lock
add
out
mov
push
jmp
dec
xchg
pop
xor
or
nop
cmp
aad
sub
test
shl
sub
jl
xor
push
jmp
sbb
lret
pop
lock
daa
adc
leave
shl
add
movsl
in
adc
movsb
dec
popa
clc
push
shll
popf
daa
push
shlb
jecxz
lahf
inc
push
jnp
addr16
fs
cmp
pop
lock
or
roll
mov
jo
cmpsb
jb
adc
mov
pop
xor
outsb
mov
icebp
mov
stos
fdivl
cmp
ret
sub
clc
inc
mov
sub
es
mov
cmp
dec
mov
push
xlat
sbbl
lock
mov
jnp
clc
and
inc
jmp
mov
shr
or
ret
aas
cltd
mov
mov
and
sti
xor
xor
rorl
mov
cs
clc
and
sbb
ss
jmp
pop
lea
mov
lock
pop
cwtl
setae
cmp
push
lock
test
shrb
pop
cmpsb
inc
pop
ljmp
adc
xor
dec
lock
loopne
test
das
pop
icebp
movl
xor
lock
mov
pop
data16
sub
out
aas
rorl
adc
notl
jae
lock
pop
cltd
xor
outsl
lock
cwtl
adc
pop
hlt
mov
adc
loope
cmp
mov
in
inc
or
add
call
pop
push
jo
dec
das
mov
sbb
out
xchg
fwait
into
mov
and
jmp
sub
out
fwait
xor
xlat
cmp
out
adc
or
andb
into
lock
push
icebp
jns
pusha
add
jg
pusha
add
js
dec
rolb
into
icebp
in
repz
xchg
test
mov
jo
cmp
xor
push
xor
pusha
and
test
das
add
fdivrl
or
mov
shl
std
data16
pop
nop
push
scas
out
xor
jbe
push
js
lock
sbbb
jp
push
mov
jns
fcomip
rcll
int3
insb
call
cmp
push
mov
ficoms
out
push
sub
add
mov
lock
outsb
mov
mov
lock
faddl
in
repz
pop
xchg
xchg
lock
pop
ret
xor
imul
pop
loope
lock
mov
cmc
addl
mov
mov
repnz
int3
popf
in
ret
cmc
pop
cli
push
sub
push
fs
push
jmp
cmp
or
dec
sbb
inc
mov
inc
sbb
loop
sub
jmp
lock
call
ret
mov
das
pop
mov
popa
clc
icebp
jno
out
outsb
mov
subb
call
int
push
outsb
adc
lock
mov
pop
add
call
jno
js
jl
cmp
mov
pop
std
push
lock
sahf
mov
test
lock
cmp
ja
push
push
pop
repz
lods
cmp
scas
and
lock
jne
xchg
inc
mov
push
dec
andl
lock
mov
lock
cmpl
cmpsl
test
pop
mov
adc
stos
mov
icebp
out
jl
add
shlb
popf
push
jae
push
pop
mov
jle
into
ja
jne
push
lahf
sbb
pop
xorl
shl
in
cmpsb
push
jns
lock
outsl
inc
pop
jne
roll
cs
lock
icebp
shll
cmp
jo
push
xchg
mov
pop
mov
fidivl
or
cmp
lahf
lock
scas
mov
xchg
arpl
fwait
mov
xchg
jp
sahf
insb
jnp
lods
data16
std
lock
aas
cmc
fistl
test
cld
lea
lock
sub
mov
pop
push
repz
lock
mov
mov
dec
inc
loopne
out
loopne
rol
or
mov
sarl
ret
jb
xor
std
push
mov
xlat
and
or
sbb
or
shlb
fldenv
mov
repnz
jno
loopne
cmp
pop
inc
cld
pop
jo
jno
mov
vpsubusw
sub
movsl
xor
add
dec
cmp
push
and
or
dec
addr16
jecxz
mov
mov
pop
popa
lock
addr16
test
cli
add
inc
or
pop
xor
mov
push
leave
rcll
and
repnz
mov
mov
int
nop
repnz
testb
adc
inc
lock
xchg
mov
xor
jge
ret
fisubs
cmp
repnz
call
mov
adc
jae
repnz
adc
icebp
nop
cmpsl
das
adc
aam
push
xor
subb
inc
xchg
jno
push
jmp
or
imul
xchg
cli
es
add
or
std
stc
in
icebp
push
jno
clc
lcall
cmp
icebp
ret
mov
add
xchg
mov
in
xchg
xor
cmpsl
nop
loop
ljmp
add
xchg
adc
add
aaa
dec
leave
dec
sbb
or
pop
pop
push
push
adc
cmp
push
out
sub
rcr
popf
das
es
mov
jmp
mov
mov
loopne
mov
into
iret
and
or
dec
push
scas
dec
dec
jge
mov
jecxz
std
mov
addr16
call
sbb
dec
ja
insb
decb
dec
push
fdiv
pop
loop
es
lock
pop
or
pop
dec
imul
jg
pop
iret
inc
xchg
cmp
repnz
push
sub
into
das
fildl
xor
mov
mov
push
and
inc
push
js
pop
mov
fstpl
lock
cld
lods
mov
lock
jbe
scas
es
jge
lock
insb
pop
fcomps
lock
frstor
popf
inc
test
mov
les
xchg
popw
pushf
lock
lods
push
jns
dec
mov
cmc
jo
cli
or
pop
repnz
ret
loope
xor
outsb
nop
mov
movsb
outsl
out
stc
mov
adc
aas
dec
mov
add
mulb
sarl
js
and
in
push
icebp
or
out
lods
es
cmp
xorl
push
clc
adc
outsl
or
mov
scas
ret
repz
adc
das
pop
lock
in
pushf
push
xchg
mov
les
mov
pop
addl
cmp
adc
add
lock
dec
or
pop
sbb
lock
iret
mov
add
or
mov
lock
xchg
aaa
inc
mov
jp
mov
out
stos
addl
dec
mov
ret
ret
arpl
stos
aas
or
ja
lret
jae
rclb
or
push
pop
xchg
cs
divb
imul
cmp
lock
jo
mov
add
cld
cmp
xor
dec
loopne
mov
pop
lods
mov
xchg
mov
pop
call
sub
or
int
inc
outsl
int3
inc
test
push
mov
mov
lock
adcl
shll
outsb
lock
test
xor
xchg
adc
cmpsl
dec
ret
jg
stos
aaa
jmp
stos
lock
std
ror
shr
or
jno
cwtl
or
mov
lods
and
pop
hlt
add
xchg
or
adc
mov
shrb
add
and
xchg
lock
and
xlat
sbb
xor
imul
loope
out
fwait
dec
ret
pop
test
aad
shll
mov
std
mov
mov
pop
lock
aam
sbb
sbb
gs
cwtl
mov
dec
mov
or
pop
mov
sbb
cmp
loope
mov
in
push
pop
push
movsb
sti
xchg
into
pushf
mov
mov
movzbl
sub
repnz
xchg
push
dec
mov
push
or
sub
nop
dec
das
inc
insb
call
jmp
cmp
push
jecxz
push
dec
inc
xchg
or
mov
ss
xchg
jbe
add
xor
fldl
pop
dec
bound
cmp
out
push
mov
sbb
out
das
inc
cmp
notl
int3
dec
jg
pop
adc
xchg
in
xchg
mov
cmp
or
aad
push
loop
push
add
xlat
imul
lock
or
jle
lock
sbb
jge
lock
sub
sub
lods
or
push
mov
jmp
pop
cmp
repnz
xchg
call
loopne
add
or
mov
sbb
cmp
clc
push
dec
jmp
imul
hlt
lock
imul
mov
pop
xchg
mov
fsubr
fstpl
push
xchg
sarl
negl
out
movzbl
stc
sub
inc
or
pop
mov
ljmp
out
sbb
stos
mov
lock
or
adc
add
lock
push
mov
inc
hlt
mov
das
lock
ss
add
loop
cmp
xchg
addl
and
inc
xor
lea
xlat
test
mov
push
xor
cmp
mov
dec
stos
mov
daa
cmp
andb
or
dec
dec
jne
push
jg
mov
xchg
mov
icebp
rcrl
dec
aaa
pop
in
rcl
lock
cmpsb
cmp
subb
mov
sarl
push
mov
subb
lret
or
out
mov
jmp
or
xor
jmp
jmp
ret
mov
jnp
cwtl
adcb
dec
cmp
jo
push
std
mov
or
sbbl
test
push
push
and
dec
add
cmp
std
sbb
mov
mov
xor
xchg
push
insl
or
cwtl
mov
arpl
jl
lock
hlt
sub
loopne
inc
pop
pop
mov
pusha
sub
daa
lret
gs
cmp
arpl
lock
adc
pop
jne
enter
sub
fdivp
pop
scas
ds
shrb
les
sub
aas
pusha
cld
sbb
test
pop
repnz
not
push
or
or
fstps
inc
xor
add
sbb
aas
cs
pop
push
outsb
lds
pop
std
or
sbbb
jg
xchg
das
repz
lock
cmc
imul
add
rclb
mov
fucomi
xor
xchg
cmp
xlat
push
jmp
pop
cmp
aam
in
adc
test
loopne
and
popa
nop
out
pop
and
xchg
pop
or
iret
inc
push
xor
mov
out
or
xor
inc
lock
adc
sbb
inc
cwtl
mov
jge
arpl
push
push
cmpsb
push
out
lock
or
movsb
int3
lock
xchg
or
xor
lock
pop
and
outsl
fwait
cmpsl
fcomi
pop
dec
imul
pop
jo
inc
add
sahf
lock
mov
icebp
ret
sbb
mov
fmull
mov
jne
adc
xor
push
int3
xchg
mov
subl
loopne
pop
adc
dec
fwait
mov
or
stos
cli
sbb
lcall
lock
fmul
lahf
lock
xor
pushf
nop
cmpsl
scas
sub
lock
pop
cmc
ss
pop
outsl
ja
sub
cmpsb
or
inc
aam
mov
cltd
adc
push
cs
cmp
sbb
leave
imul
dec
xorb
lods
bound
jmp
inc
clc
nop
in
sbb
add
iret
fwait
sahf
and
pop
add
popa
push
cltd
mov
enter
mov
fsubrp
lock
mull
mov
loope
add
and
pop
sub
inc
lahf
int
sbbb
inc
hlt
lods
xor
jae
dec
xor
push
sbb
mov
push
cmp
xlat
mov
lock
or
dec
sbb
jnp
mov
or
push
dec
test
movsb
add
lock
test
cmp
mov
test
fs
iret
push
or
jp
inc
push
lock
jmp
push
aad
fisttpll
cli
dec
ret
outsl
sbb
push
roll
and
test
js
test
add
sbbb
or
sarl
cli
gs
adc
mov
data16
jecxz
repz
sti
sbb
popf
lock
fmuls
hlt
cmp
xchg
jo
ja
add
nop
out
push
call
inc
leave
cmc
arpl
mov
or
mov
or
fwait
nopl
pusha
mov
popa
xchg
call
clc
or
fsubrs
int
add
dec
repz
push
test
push
inc
lea
jo
mov
jo
cmp
push
xor
push
icebp
mov
xor
jmp
inc
in
add
or
mov
pop
out
test
cs
stos
inc
fisttpll
pop
or
push
push
sbb
pop
insb
or
cmp
pop
movsl
xor
or
cli
jp
or
dec
clc
push
aaa
and
std
xchg
adc
and
mov
add
ret
or
pop
dec
outsb
and
shrl
fisubs
xchg
xchg
std
lret
mov
and
pop
lock
jno
and
pop
jmp
mov
lret
add
jge
mov
jo
jecxz
pop
push
push
push
xchg
pop
add
sub
sub
xor
mov
or
scas
std
outsb
pop
jo
repnz
es
leave
or
call
xor
nop
lock
push
push
or
and
push
lea
lds
mov
stos
call
xor
mov
and
addb
mov
repnz
ret
ja
adc
loope
int3
push
mov
push
or
jo
add
fsubrl
fadds
pop
fs
lods
push
xchg
mov
dec
push
push
inc
shrl
mov
adc
and
dec
or
mov
incl
dec
push
inc
test
xlat
repz
int3
divl
xor
fildll
cmc
push
mov
and
xchg
lock
cli
clc
iret
ss
rcrb
movsb
test
cmp
pop
rcll
cwtl
out
mov
xchg
mov
adc
pop
stc
mov
mov
jb
mov
data16
test
cmp
adc
jb
pushf
lock
testb
f2xm1
enter
cwtl
xchg
pop
stc
lock
adc
in
arpl
jo
mov
jae
lock
loopne
lcall
lock
adc
push
enter
mov
cvtps2pd
xor
movsbl
pop
adc
fcoml
cmp
pushf
xchg
or
lock
cmpsb
cmc
add
in
sbb
stos
push
mov
mov
cltd
jo
clc
adc
sbb
push
and
mov
insb
loopne
pushf
dec
xchg
dec
or
adc
push
mov
mov
sub
mov
loop
pop
mov
into
xchg
push
dec
sbb
fdiv
push
hlt
fwait
or
push
clc
xchg
test
mov
pop
mov
cld
pusha
xor
adc
xor
push
push
lret
mov
mov
fidivs
lock
push
jmp
mov
dec
cmpsl
mov
int3
hlt
clc
jae
add
ljmp
add
mov
jb
pop
ljmp
jg
adc
add
int3
dec
push
jge
or
sbb
cmc
jo
inc
imul
xor
xchg
lahf
dec
enter
cmc
cmp
rolb
negb
bound
mov
aad
insl
movb
or
lock
xor
movsl
pop
xchg
rcrl
and
lock
mov
mov
cmp
adc
repnz
pushf
and
hlt
xchg
insb
or
jno
lock
push
gs
lock
push
adc
xor
xorb
mov
dec
popf
xor
and
inc
cwtl
adc
jmp
and
mov
xor
insl
test
outsl
int3
loope
pop
icebp
dec
imul
push
xchg
push
lock
fwait
loopne
dec
sub
lock
std
mov
cmpsl
cmp
fs
dec
pop
push
insl
clc
add
mov
push
xchg
int3
add
scas
push
repz
jo
xor
xchg
fwait
repnz
or
filds
ja
iret
jae
lahf
loope
das
fisubrl
out
inc
add
adc
or
push
and
std
push
sub
cmc
fmuls
mov
pop
out
leave
mov
hlt
in
mov
jns
xor
mov
sbb
sbb
or
lock
jl
jecxz
adc
rolb
sti
or
xlat
jae
stos
pop
jo
mov
push
movsl
mov
repz
adcb
aaa
lock
jg
imul
out
mov
mov
jae
xchg
btr
cmp
ficompl
dec
cmc
jne
or
out
out
bound
jg
and
lods
movsb
test
push
adc
lock
icebp
popf
add
hlt
xchg
mov
xchg
stos
aaa
mov
idivb
outsb
lcall
push
mov
mov
popa
push
pop
in
dec
adc
rcrl
pusha
fwait
inc
lock
and
je
mov
mov
pop
lock
pusha
push
or
mov
scas
repz
mov
add
ror
dec
inc
lock
stos
outsb
sub
adc
js
or
into
rolb
shll
pop
add
lock
cmp
xchg
lods
push
lahf
out
mov
jo
cmpsl
lds
lock
xor
and
dec
je
and
xor
shr
clc
fistps
xor
mov
dec
cld
inc
in
add
js
jno
jmp
int
in
daa
mov
sub
xor
fmuls
int3
add
mov
inc
in
lock
pop
pop
roll
nopl
jo
jmp
cmpsb
mov
dec
xor
xchg
sub
test
lock
fstpt
push
mov
adc
rcll
in
pop
shlb
icebp
cmp
push
ljmp
rcr
lock
xor
mov
stos
adc
out
lock
inc
mov
or
dec
lcall
dec
push
iret
pop
icebp
and
data16
shr
cmp
fdivrl
neg
call
cmpxchg
mov
lock
xchg
icebp
das
xor
or
into
push
call
or
pop
je
dec
jo
mov
mov
test
gs
cltd
xor
lcall
mov
cmc
data16
and
ljmp
inc
lock
js
adc
mov
scas
icebp
nop
stos
movsb
in
and
xchg
cmpsb
ds
mov
xor
jg
push
or
sub
ret
or
jb
mov
or
lods
sub
cs
shl
jnp
push
push
lret
fcomi
insl
mov
xor
inc
pop
lds
repnz
mov
pop
es
daa
subb
push
out
mov
and
dec
push
loopne
icebp
xor
jno
leave
loope
int3
sub
dec
mov
out
dec
shlb
xchg
mov
mov
fisubl
rclb
mov
repnz
scas
jle
addr16
and
sub
pop
xlat
or
test
fcoml
jb
xchg
stos
mov
lret
and
push
lret
sbb
cwtl
mov
cmp
dec
ret
jno
fdivl
fmuls
mov
inc
mov
sub
jne
pop
movb
sbb
pop
fwait
dec
je
repz
pop
int
dec
or
adc
push
daa
iret
sbb
loop
mov
jmp
cmpsl
and
pushf
xor
push
push
inc
rorb
or
call
enter
mov
push
sub
call
stc
xorb
ret
mov
or
sti
popf
ret
arpl
call
pop
sub
push
push
fs
insl
test
fmull
testl
in
push
fdivs
and
mov
cmc
pop
nop
add
and
bound
push
and
movsl
or
push
dec
jp
mov
cli
add
push
movsl
pop
jp
out
in
repz
int
push
push
sarl
call
shl
sysenter
mov
adc
aam
mov
push
sub
adc
sahf
jecxz
sbb
jno
adc
das
rolb
dec
and
mov
mov
call
sbb
adcl
xor
jge
sahf
fcmovu
sbb
je
mov
ret
push
pop
pop
sbb
sub
xchg
aad
pop
push
inc
jo
cmpsl
mov
dec
sbb
je
test
out
push
inc
push
push
rcll
adc
dec
addr16
adcb
cmp
push
jns
lods
push
sbb
sbb
add
push
xlat
adc
inc
inc
lock
mov
push
inc
and
clc
pop
and
sbb
and
out
lret
daa
rorb
pop
int3
fwait
outsb
cli
push
jl
cwtl
out
push
push
xchg
dec
sbb
sbb
loope
shl
jecxz
in
and
xor
xor
arpl
pop
adc
xor
in
aad
jno
in
loop
outsl
mov
insl
add
loope
xchg
mov
dec
xchg
fs
jecxz
fdivrs
lock
insb
xchg
or
adc
test
in
inc
xchg
repz
stc
je
and
sbb
add
mul
andb
cmp
push
lods
xchg
push
orl
mov
cmp
addl
sbb
stos
adc
scas
add
push
aaa
sbb
jo
add
jae
sbb
sti
stos
test
xlat
cwtl
jns
push
cmp
or
lods
sbb
repnz
sbb
add
movsl
int
ffreep
push
adc
and
pcmpgtw
add
mov
jo
call
js
adc
fnstenv
repz
dec
xchg
pop
push
add
sbb
mov
aas
sub
stos
fs
pushf
cmp
aad
and
lock
mov
push
ja
inc
xchg
adc
aad
xor
adc
rorl
pop
mov
adc
mov
lock
bound
test
adc
aas
js
sbb
dec
cmp
int
mov
popa
xchg
icebp
pop
xchg
or
xor
icebp
stc
icebp
xorl
xor
mov
testb
aam
mov
jne
rcll
mov
out
icebp
pop
adc
and
xlat
arpl
adc
mulb
push
insl
lock
mov
push
test
std
sbb
inc
js
ljmp
cli
adc
and
loopne
and
lock
fisubrs
lock
jb
xor
add
in
hlt
push
dec
lock
icebp
inc
pop
push
push
rolb
adc
outsb
xchg
xchg
sub
jl
mov
sbb
cld
lock
and
mov
pushf
lock
inc
aam
addr16
lea
lock
sbb
mov
icebp
xchg
sub
jg
sbb
pop
mov
in
ret
call
xchg
fwait
add
mov
inc
push
out
adc
aas
and
clc
je
mov
ret
lcall
f2xm1
jne
xchg
sub
push
loop
sbb
out
push
mov
xor
adcl
sub
in
cmp
icebp
add
or
iret
fldcw
lock
shl
cmp
lock
shl
xchg
and
inc
call
dec
jmp
or
xchg
xor
xchg
js
jae
pop
push
mov
or
lock
stos
xchg
jno
pop
dec
lock
add
iret
stos
fstl
lock
data16
pop
pop
in
xor
loope
jb
jne
cmp
fmull
scas
add
ret
mov
repz
mov
cmp
out
cwtl
mov
repz
push
sbb
mov
ja
adc
test
gs
lret
lock
cmp
xchg
xor
enter
or
sbb
repnz
je
icebp
and
jns
in
cmc
push
mov
lock
mov
cmpsl
adc
das
mov
mov
lock
insb
xor
xchg
out
lock
mov
push
cmp
jo
jbe
sbb
pop
push
sub
or
push
sbb
mov
xor
pop
dec
cmp
loopne
dec
mov
push
mov
cmp
stos
mov
fiaddl
xor
mov
in
cmp
inc
jge
jne
mov
sti
les
lock
test
lds
mov
jo
mov
mov
mov
call
out
icebp
stc
jo
cmp
mov
in
std
in
inc
daa
call
int
cmp
hlt
jmp
ja
jo
mov
xchg
fnstcw
cmpsb
arpl
sbb
dec
sub
dec
jo
jbe
movlhps
daa
test
adc
mov
stc
subb
sbb
aad
cmp
call
xor
sbb
test
push
lds
jns
xchg
add
lock
lds
and
jnp
icebp
xchg
fnsave
loopne
inc
add
cmpsl
fsubl
jae
insl
mov
dec
loop
lock
adc
lock
mov
scas
pop
or
lock
stos
cli
mov
cmp
adc
pop
jo
loop
jb
ficompl
mov
xor
lods
push
sbb
jne
int3
cmp
ret
aaa
dec
adc
push
std
int
pop
shr
enter
push
jae
add
push
rorl
inc
pop
lahf
sub
push
jmp
mov
lods
in
addb
test
popa
inc
lock
sub
in
inc
inc
xchg
pusha
mov
aam
lock
and
cmp
ret
xor
cmp
mov
lock
cmpsb
jne
lds
out
in
inc
dec
xor
outsb
xor
xor
add
lock
cmpsb
mov
or
int
mov
lret
pop
pop
push
mov
sahf
in
stos
or
and
sub
push
add
adc
gs
imul
gs
jp
repz
ja
xor
shl
es
addr16
lock
pop
stc
mov
out
je
lock
push
rcl
add
cmpsl
das
sar
cmp
push
mov
adc
das
enter
push
aam
pop
fcmovbe
scas
addr16
jae
adcb
xorl
jmp
jae
add
adc
or
icebp
daa
jbe
push
inc
lcall
jecxz
dec
loop
mov
xchg
cs
add
adc
addr16
aad
data16
sbb
mov
fwait
push
bnd
rolb
ret
mov
or
cmp
mov
js
mov
adc
sub
xor
test
mov
icebp
shr
loope
ret
adc
xchg
enter
push
adc
mov
jo
fisubl
orl
dec
imul
cli
std
xchg
or
stc
dec
jmp
lock
dec
divb
lret
jne
loope
adc
gs
xchg
jg
pop
lods
lock
cli
lock
mov
leave
lock
add
iret
jmp
fisubl
jnp
lret
lock
cld
xchg
test
pop
push
lahf
dec
stos
or
stos
mov
out
adc
sahf
clc
lea
int3
mov
ud2
pop
mov
fwait
add
mov
repz
shll
sbb
ljmp
inc
shlb
jb
repnz
xor
push
sub
or
sahf
lock
push
mov
pop
mov
xor
fsubr
push
mov
sbb
ror
cwtl
mov
in
movsl
xor
ror
in
rcrb
ljmp
inc
out
decl
mov
mov
repz
lock
sub
cmpsl
push
fwait
sub
ret
dec
leave
push
jge
jp
lock
adc
push
dec
cmp
test
fldt
dec
int
lock
cltd
call
cmpsl
imul
lock
add
lcall
pushf
push
mov
aas
loop
cmp
push
cmp
icebp
mov
aam
mov
cmpxchg
sbb
in
sahf
xchg
test
add
sub
sbb
loop
stc
andb
mov
leave
mov
push
or
mov
add
gs
lock
imul
repnz
in
fbstp
arpl
lock
bound
icebp
shrl
pop
cld
mov
mov
cmpsl
mov
jg
dec
inc
jo
movsl
jp
cwtl
lock
pop
in
fs
test
mov
pop
add
and
mov
imul
xchg
and
xlat
or
loop
adc
shlb
lock
cmp
fsubr
adc
pop
je
mov
arpl
sub
cmp
or
shr
mov
pusha
mov
outsl
jcxz
add
sub
andl
das
fistpl
fcompl
adc
in
and
stc
pop
repnz
jmp
in
xchg
bnd
aad
xchg
loop
push
xor
xchg
dec
ret
jge
out
sahf
pop
adc
leave
call
jo
outsb
pushl
mov
leave
lea
je
add
shlb
push
jmp
rorl
mov
inc
iret
lock
aaa
incl
gs
mov
mov
nop
mov
xor
data16
iret
lds
sbb
jmp
inc
lret
clc
dec
bnd
xchg
pop
sbb
aas
daa
enter
ss
jmp
data16
lahf
in
add
xor
dec
push
adc
mov
fcomi
jl
sub
mov
out
jo
movsl
ds
mov
cld
sbb
adc
mov
inc
dec
lods
sti
lock
hlt
and
jns
cld
ds
lods
jo
or
popf
sub
and
dec
fistps
jecxz
in
aaa
clc
cmpb
and
inc
lock
loope
loopne
dec
push
lock
aas
out
or
daa
and
punpckhbw
es
dec
divl
daa
ret
push
add
incl
mov
inc
inc
pop
xor
inc
cmp
hlt
sub
xchg
push
ss
iret
adc
xlat
or
enter
jb
lods
in
mov
xchg
sub
aas
clc
mov
mov
push
test
mov
clc
test
sbb
cs
mov
and
call
push
jo
xor
ret
and
jae
cmc
jo
jo
loopne
loope
pop
sbb
sar
ret
ljmp
mov
jbe
xor
jns
sub
call
or
hlt
and
xchg
rclb
xor
cld
jo
xchg
test
aam
cwtl
aad
mov
fidivs
push
lock
repz
xchg
ret
adc
cmp
movsb
mov
jno
repz
push
xor
pop
inc
es
imul
lret
pop
orb
aam
xchg
jg
lock
pushf
add
or
inc
cmp
jl
cmp
dec
xchg
pop
mov
push
sub
jge
jge
and
sbb
mov
and
pop
das
jg
adc
xchg
push
push
push
or
sub
xor
das
clc
mov
iret
outsb
mov
mull
repnz
and
pop
adc
loop
in
inc
arpl
jecxz
and
icebp
hlt
cwtl
out
jg
mov
push
test
inc
push
repnz
and
adc
sbb
add
pop
repnz
xchg
adc
or
mov
lods
sub
lock
fmuls
inc
mov
ss
jno
mov
lock
popa
sti
push
push
add
ret
leave
add
stc
xchg
mov
and
or
lds
mov
jl
lcall
movsl
inc
xor
xlat
subl
add
adc
imul
ja
dec
popf
cltd
dec
cmp
sub
repz
jge
cs
adc
sub
data16
int
and
jmp
cmpl
mov
loop
add
popa
xorb
xchg
add
adc
lcall
and
ss
xor
push
sbb
xor
sbb
outsb
out
add
pusha
sti
lock
and
inc
iret
push
mov
push
lcall
pushf
inc
mov
push
and
int3
add
out
mov
popa
jp
lock
sbb
pop
jno
stos
add
push
and
xchg
lcall
movsb
inc
jne
mov
cmp
test
mov
popf
clc
xor
xchg
pushf
push
repnz
cmp
mov
inc
push
pop
jp
or
jl
out
adc
mov
xlat
sub
fcomi
add
adc
pushf
les
sbb
fbstp
mov
adc
int
lock
inc
push
mov
push
call
test
and
or
dec
xorl
pop
mov
fidivl
movsl
ss
sbb
testb
add
inc
lock
push
repnz
inc
mov
mov
sub
popa
int
pusha
xlat
ja
jb
cwtl
pop
adc
sub
jne
xchg
aas
sbb
jae
nopl
mov
subb
outsb
fdivrs
jno
add
sub
mov
iret
cmp
and
add
lods
sti
or
pop
lret
ret
mov
xchg
repz
push
sahf
decl
es
ljmp
test
lahf
xchg
lock
inc
jns
cltd
inc
fstps
xor
sub
outsb
add
mov
imul
cli
jo
cwtl
adc
mov
out
xchg
leave
std
mov
jmp
sub
out
mov
inc
sub
push
call
dec
xchg
mov
je
mov
addr16
ss
mov
les
lcall
jl
cmp
sub
mov
inc
aaa
loop
cmpsl
data16
inc
std
or
arpl
or
call
cmc
sub
push
aad
faddl
add
jns
movsl
hlt
or
int3
insb
rcll
insb
jp
lock
aam
xor
ja
jb
push
mov
lock
rcrl
dec
test
js
or
in
mov
mov
xchg
xor
cs
jb
cmp
in
adc
inc
decb
aam
pop
test
xchg
lret
dec
rcrb
leave
sbb
les
dec
inc
scas
mov
enter
cmp
popf
adc
push
movsl
js
jmp
mov
mov
or
popf
mov
mov
aaa
in
das
jp
mov
rol
mov
in
mov
lock
test
jmp
sub
and
nop
dec
punpcklwd
nop
jo
push
lock
fidivrs
adc
repnz
inc
cmc
sub
inc
insl
gs
int3
mov
adc
jmp
jbe
mov
test
jae
mov
bound
mov
aaa
pop
jge
outsb
repnz
add
or
add
std
stos
push
stos
jns
popf
fmulp
pop
add
in
cmp
or
jmp
pop
add
and
pop
jb
ds
lahf
call
and
dec
jo
pushf
mov
push
fdivrs
xchg
push
lods
jbe
mov
mov
flds
rcrb
fisttpll
pop
push
xchg
jo
add
dec
outsb
or
daa
jo
sbb
jnp
push
ja
mov
jmp
push
loopne
add
daa
mov
clc
lods
cmp
xor
fs
pop
push
or
mov
dec
enter
shl
in
mov
dec
sbb
xor
je
mov
mov
es
in
out
mov
push
mov
lahf
push
lock
mov
pop
lock
mov
ljmp
jns
jge
mov
cmp
jo
fstpl
mov
icebp
xchg
fiadds
xor
lock
lea
push
pusha
cmc
mov
pop
lock
xor
icebp
inc
jae
icebp
pop
stos
push
push
xchg
dec
into
enter
mov
push
jae
pusha
sbb
dec
icebp
xchg
sarl
cli
sahf
dec
mov
push
sbb
loope
clc
cmp
and
and
ret
xor
add
call
lret
shrb
dec
push
in
daa
dec
sub
sarb
jle
pop
gs
push
aaa
pop
dec
js
push
or
mov
or
sub
xchg
aam
cmp
adc
mov
cmc
xor
clc
cmp
call
push
fbstp
xor
shrb
push
mov
repz
push
in
add
inc
rcll
outsl
jg
lock
cwtl
jl
jge
mov
cmp
mov
pop
push
jo
arpl
std
add
out
repz
xorb
lock
repnz
repz
shlb
mov
cs
push
mov
pop
hlt
xchg
lock
addr16
push
pop
xchg
lock
xlat
sbb
pusha
xchg
push
mov
push
pop
xor
jne
push
cmp
sbb
imul
in
mov
push
and
push
ss
clc
mov
movsb
inc
sub
cmc
lock
cmp
pop
inc
scas
inc
icebp
repz
aaa
jmp
stos
xchg
and
lock
jno
fdiv
pop
jnp
add
testb
and
dec
cmp
arpl
push
aaa
push
push
mov
in
mov
and
ret
jns
test
jo
fs
xchg
adc
int
lea
mov
inc
in
cmp
xchg
mov
and
cmp
add
dec
ljmp
scas
dec
insl
test
xchg
xor
inc
xchg
vpsubsw
jne
push
sub
xor
lock
pop
ror
pmulhuw
loopne
jae
fdivp
repnz
mov
mov
mov
cwtl
pop
repnz
fcoms
ret
push
sbb
pop
jg
popf
rol
data16
cmpsb
sti
lock
subl
xchg
push
adc
xor
repz
loopne
jo
cld
cmpsl
sub
lock
xchg
cmp
cs
sbb
push
fs
pusha
add
nop
into
xchg
in
mov
adc
adc
gs
and
push
add
nop
xchg
retw
loop
xchg
xor
mull
pop
jbe
mov
scas
push
adc
out
fnsave
or
jno
or
xor
lret
sbb
or
jg
mov
adc
imul
pop
add
jge
adc
lock
in
add
test
cltd
xor
mov
lcall
xor
mov
fidivl
bound
mov
mov
push
cmp
mov
mov
mov
adc
lock
add
mov
and
js
lock
scas
pop
lods
enter
lock
add
cmp
loope
xor
shlb
or
loopne
nop
lock
mov
mov
lahf
sbb
mov
mov
mov
jnp
repnz
pop
stos
cmpsb
mov
sahf
mov
push
rorb
mov
outsb
pop
shl
push
orl
das
stc
test
push
or
test
and
sub
add
xchg
clc
mov
push
xor
fidivs
scas
and
adc
mov
push
add
movsb
into
repz
ss
icebp
dec
cmpsl
aad
push
addr16
stc
sub
cld
inc
xor
std
jmp
xchg
call
jns
jo
cmpsl
lcall
jmp
aas
inc
jae
cli
mov
outsl
pop
mov
in
iret
or
mov
jg
or
and
mov
imul
or
test
movsl
jno
icebp
jno
mov
repz
mov
in
cmp
xor
xor
mov
lcall
test
pop
call
cmp
repz
mov
or
jp
adcl
pop
jno
imul
jl
dec
xchg
jo
push
xchg
push
jno
jp
mov
xchg
or
repz
or
push
popa
or
cmp
mov
rolb
test
mov
ja
or
xor
fcom
push
movsl
loope
ret
mov
jl
addb
xor
inc
cs
mov
mov
pop
sbb
loopne
ljmp
roll
stc
cmpxchg
jmp
push
mov
mov
lods
ret
outsb
and
dec
add
das
inc
pop
fdivrl
repz
pop
test
adc
xor
aad
insl
jmp
movsb
rclb
pop
cmp
inc
xor
or
dec
mov
cmp
out
mov
into
sub
aad
push
mov
and
fcom
shl
mov
add
sti
lds
ret
stc
sqrtps
icebp
iret
std
addr16
je
dec
adc
mov
mov
call
mov
fmull
mov
mov
push
adc
push
aam
mov
add
loop
ja
ljmp
add
jmp
cmp
jle
cmp
xchg
xor
jno
pop
dec
aad
dec
pop
mov
stos
inc
dec
in
inc
inc
das
insb
push
bound
xorb
push
or
bound
add
call
dec
lret
sub
mov
push
xorl
ss
add
ss
rdpmc
xchg
add
mov
mov
bnd
cmp
mov
add
rcl
lock
pop
lret
jae
push
jle
popf
shr
lods
xor
popa
mov
mov
into
ljmp
pop
jns
push
arpl
cmp
cmp
mov
cmp
xchg
cwtl
push
xchg
push
rorl
gs
sbb
cmp
or
push
sub
inc
xchg
and
jp
sahf
das
outsl
mov
cmp
loope
sub
mov
add
call
inc
xchg
add
adc
xlat
dec
andl
call
imul
js
adc
mov
mov
outsl
shlb
outsb
lock
aaa
xchg
mov
xor
mov
lock
pop
popa
stc
test
fmull
pop
in
lahf
insb
nop
inc
and
icebp
inc
lock
test
xchg
sub
adc
or
gs
sbb
in
push
inc
lret
mov
daa
ss
mov
pop
out
sbb
or
outsl
xlat
fdivp
mov
push
repz
test
test
cmp
push
lea
dec
lock
jnp
jmp
jne
clc
imul
xchg
enter
xchg
stos
push
inc
repnz
mov
rcrl
or
jnp
pop
xor
cmp
int3
pop
ret
loope
gs
mov
jno
std
dec
nop
add
in
ret
pop
repnz
or
ja
hlt
adc
jo
or
scas
pop
and
push
add
mov
dec
jle
jno
mov
jp
es
sub
call
xor
sub
xor
inc
or
addl
or
mov
jmp
xor
sbb
ror
ja
sti
mov
or
mov
lods
out
orb
xor
std
inc
mov
lret
fwait
pop
aas
das
dec
fldcw
dec
push
js
lret
in
and
mov
mov
mov
std
xchg
shrb
and
or
stos
ljmp
sub
push
xchg
sbb
push
mov
sub
inc
sbb
icebp
push
in
test
lahf
xchg
movsb
xor
cltd
enterw
repnz
cwtl
mov
rclb
vcmpss
adc
and
in
ljmp
test
jo
lock
adc
add
mov
out
sub
adc
call
pop
int3
je
icebp
dec
mov
mov
push
mov
inc
xchg
dec
sbb
fwait
jp
mov
shlb
mov
lretw
mov
fidivrl
mov
xchg
pusha
xor
mulb
sti
movsb
iret
mov
xor
cmp
nop
neg
rolb
jnp
sub
inc
adc
sbb
lock
int3
sahf
lods
cmp
push
or
shrb
outsl
aaa
jle
sub
loopne
mov
movsb
xor
nop
lret
aam
lock
aas
stos
adc
nop
pop
push
sar
lods
leave
lock
popf
xchg
dec
pusha
f2xm1
addb
loopne
jl
push
xchg
mov
xchg
mov
xor
out
loopne
lock
in
pop
outsb
adc
xchg
fmuls
inc
int
movsl
mov
cmp
in
lock
cmp
lock
mov
lret
ljmp
xor
std
stc
call
mov
mov
or
fisttpll
pop
xchg
mov
lcall
dec
inc
mov
and
cwtl
sub
sbb
and
ret
xchg
mov
xlat
gs
aad
divb
xchg
clc
shl
push
mov
fildl
sbb
je
adc
pop
dec
jo
aam
sbb
pop
in
lock
inc
das
cli
rcll
lock
repnz
push
sbb
dec
lock
es
movsl
mov
shl
sarb
xchg
mov
pop
mov
lock
jg
lock
mov
decl
imul
lock
pop
movsl
scas
lock
idivl
fsubrs
test
enter
pop
adc
icebp
dec
ret
dec
movsb
movsl
sbb
or
xor
fdivs
bound
test
mov
syscall
sar
das
mov
push
mov
inc
in
adc
adc
jns
mov
loop
add
aas
stos
ret
ret
fisttpl
push
pop
movsl
mov
clc
push
nop
push
insb
xchg
jmp
scas
mov
movsl
or
add
in
adc
cld
repz
andb
push
int3
pop
inc
rorb
mov
adc
mov
mov
pop
jns
sub
js
or
jne
xchg
mov
push
xchg
inc
cwtl
rorl
pop
pop
pop
mov
add
fmuls
test
stos
mov
mov
adc
jmp
dec
in
cmpsl
sbb
addb
inc
push
adc
fcmovb
inc
or
dec
gs
pop
out
das
mov
dec
push
repz
into
imulb
sub
icebp
push
xchg
pop
mov
jo
dec
movsl
hlt
sub
ficoms
insb
jl
mov
xlat
jo
dec
popf
cmp
mov
jo
push
inc
fisubl
fidivrl
jae
jmp
mov
sbb
or
mov
adc
push
jo
add
mov
into
movntps
or
lock
lock
aad
imul
push
cmp
inc
rclb
adc
inc
jecxz
add
cmp
lock
fisubrl
pushf
setb
testb
fmul
js
lock
cltd
mov
and
or
and
lret
icebp
mov
push
je
pop
adc
scas
inc
push
push
xlat
add
icebp
fldcw
dec
repz
cltd
in
push
push
mov
shrb
xchg
ds
pop
pop
jae
and
push
push
mov
es
and
clc
stc
andl
fsubrl
jbe
jmp
ret
cmp
ret
mov
lret
cmp
push
cld
enter
push
adc
xor
or
out
pop
xchg
jecxz
adc
sub
mov
add
insl
ror
push
mov
leave
std
popf
fisubrs
push
jbe
in
icebp
inc
jle
stos
mov
scas
ret
out
add
mov
pop
shr
repnz
mov
push
rclb
adc
push
sub
mov
fdivp
inc
xor
sahf
cmp
add
mov
lret
mov
or
and
enter
xchg
vhaddps
lock
mov
aas
adc
jecxz
pop
mov
repz
ret
in
dec
or
sub
dec
mov
dec
fcoms
or
movups
fsubrl
mov
ja
sub
loope
push
pop
mov
jmp
gs
imul
roll
jb
mov
notb
int
fistl
or
push
mov
call
add
test
mov
rcl
repz
mov
cmp
mov
out
jo
mov
lock
inc
push
test
repz
jl
cmpl
cmc
xchg
sbb
adc
hlt
dec
jmp
cwtl
lock
pusha
test
in
jo
cmp
jnp
and
push
es
in
data16
lock
and
mov
cwtl
cmp
push
cmpsl
repnz
outsb
lahf
lock
sbb
mov
pop
fdivrs
iret
sbb
push
cmpsb
movsl
jne
sar
xor
aam
inc
and
clc
mov
cmpsl
sub
orl
popf
rolb
mov
cmc
lock
lcall
jge
mov
cmpsb
mov
mov
jb
xor
lock
inc
sbb
pop
out
lock
mov
jnp
shll
sub
data16
jo
ds
adc
jl
fdivs
xor
icebp
pushf
test
enter
pusha
and
mov
push
movsb
mov
fnsave
insl
lock
inc
lcall
hlt
add
stos
pushf
mov
pop
jno
mov
lds
xor
lock
mov
les
xchg
jns
lahf
push
jge
rorl
pop
and
sub
aaa
mov
and
inc
outsl
dec
lahf
dec
inc
add
jnp
mov
lcall
push
jo
int
sbb
mov
jecxz
daa
ret
jg
stos
inc
lock
orl
jge
insb
or
lock
mov
add
ss
into
sbb
mov
adc
sub
add
sub
mov
mov
xor
sbb
jno
or
lock
dec
dec
js
ret
sub
cmp
dec
jecxz
mov
outsb
jne
cmp
icebp
lock
inc
push
mov
cmpsl
notb
fiadds
pop
and
jnp
ret
imul
push
cs
lock
out
arpl
fcmovnbe
int3
sub
jno
xchg
int
inc
add
xorps
sbb
adc
mov
pop
jae
das
xchg
repz
aaa
adc
call
xor
aas
mov
aas
mov
mov
pusha
arpl
pop
lock
mov
or
push
cmp
jg
sub
sbb
mov
xchg
adc
sbb
xchg
jl
add
mov
cwtl
jl
pop
fisubs
subb
xchg
add
jge
hlt
pop
sbb
xor
and
mov
pop
or
dec
out
movsl
scas
roll
push
imul
out
inc
pusha
fnstcw
ljmp
popf
mov
pop
xor
xor
push
add
cmp
dec
add
das
inc
pop
sub
ficoml
aam
mov
mov
and
pop
ja
into
icebp
push
push
jb
daa
jbe
into
push
mov
pop
jne
cmc
pop
push
or
lock
xor
in
pop
add
mov
leave
call
lock
jl
or
dec
cmpsl
or
or
ret
inc
icebp
push
cmp
mov
loopne
push
icebp
in
add
cmc
sub
fisttpll
add
dec
inc
stc
enter
or
not
aaa
mov
das
push
fcompl
lock
mov
repz
das
lods
inc
push
or
clc
or
stc
xchg
pusha
jecxz
jo
add
lds
insb
push
pusha
dec
sbb
mov
inc
arpl
stos
lods
in
sti
mov
xor
pop
inc
push
or
pop
insb
xor
pop
mov
das
je
sub
lret
push
mov
repnz
xchg
lock
shr
ljmp
arpl
fisubl
mov
icebp
filds
leave
enter
mov
imul
push
arpl
aam
and
std
stc
repnz
mov
je
adc
jl
icebp
fcoms
adc
mov
cwtl
iret
lock
inc
jb
in
int3
jl
fwait
pop
outsl
loop
loope
pop
xor
ja
or
jl
jae,pt
fisttps
push
inc
imul
insb
das
bound
cli
pop
lock
push
clc
test
aaa
aam
inc
mov
popa
fcomi
xor
jmp
dec
xor
adc
and
in
adc
sar
in
sub
and
daa
cmp
push
jl
into
jbe
mov
dec
pushfw
inc
jno
mov
pop
js
xor
ret
popa
adc
xorb
leave
mov
rcrl
clc
test
nop
push
rcll
std
and
bsr
bound
pushf
stos
clc
arpl
jl
ficompl
call
clc
fnsave
icebp
mov
xchg
xor
sub
jno
mov
fsubrp
std
jle
popa
xchg
fisttps
movsb
int3
xor
je
lock
add
mov
sub
xchg
movsl
in
lret
scas
sub
xor
sbb
mov
lock
mov
jnp
stos
aas
sub
ret
stc
dec
lock
push
mov
imul
mov
jno
pop
adc
inc
inc
push
mov
dec
lock
cmpl
cmp
mov
ljmp
add
aas
sub
or
push
xlat
jae
packuswb
cld
int
pop
cs
lock
sub
cmp
and
hlt
mov
in
xor
dec
js
cs
lock
pop
inc
imulb
push
or
adc
ja
sbb
pusha
lock
dec
jp
adc
mov
rcrb
mov
pop
cmp
sbb
icebp
sti
mov
xor
inc
mov
int
pop
mov
sahf
fists
cmp
fcmovu
sbbb
dec
rolb
mov
bound
lock
add
decb
push
repz
inc
stos
ds
cld
lea
jecxz
dec
shll
ljmp
gs
out
das
mov
imul
repnz
mov
sub
aad
push
cwtl
cmp
mov
dec
adc
addr16
fildll
mov
loope
jno
push
and
inc
stc
lock
sbb
xor
inc
mov
xchg
out
or
loope
or
push
inc
mov
stc
lock
dec
cwtl
enter
ljmp
jo
mov
add
cmp
xchg
inc
cmp
sub
sub
test
lock
add
icebp
cmp
ret
xchg
in
daa
fists
fisubrs
idivb
mov
push
outsb
pop
add
and
xchg
pop
xor
push
or
and
dec
push
divb
and
dec
push
lock
rcrl
cmp
popa
ret
mov
cld
or
mov
test
mov
rep
mov
shlb
mov
add
cmp
fnstsw
xchg
push
inc
jg
mov
flds
jns
lret
bsr
in
sarl
xor
scas
xchg
adc
add
fistpl
mov
mov
setb
push
push
mov
or
jae
int3
cmp
in
lds
leave
mov
jmp
rorb
push
add
jo
cld
movsb
or
aad
xorb
jg
je
cs
mov
iret
stos
lret
rcrb
xor
repz
int
insl
in
push
out
cwtl
mov
leave
imul
push
push
addr16
icebp
imul
mov
lock
sbb
lock
or
adc
subb
repnz
arpl
mov
sub
mov
add
std
inc
fimull
adc
xchg
jo
notl
idivb
test
arpl
lock
lods
out
decb
jns
xor
mov
jb
cld
in
icebp
jg
clc
push
daa
aaa
les
pusha
sbb
mov
ds
leave
cwtl
or
cmp
jns
ja
addr16
cmp
lods
insl
xchg
cmpsb
jo
adc
push
es
loop
lock
fstpt
sbb
dec
lock
loop
jecxz
sarb
lock
jb
outsl
addr16
push
sub
mov
lock
fs
jno
lock
out
aaa
pop
loop
mov
add
icebp
movsb
jne
dec
jmp
mov
out
dec
add
mov
pop
and
sub
push
out
jbe
cmp
ss
xchg
push
inc
add
xchg
fsubl
cmp
cli
pop
scas
loope
rclb
or
lahf
clc
lds
lock
cmpb
stos
ss
fs
pop
jecxz
sbb
mov
shrb
ret
dec
leave
dec
es
mov
and
aas
mov
lock
mov
outsb
lock
subl
and
sti
add
scas
mov
mov
test
and
jno
xor
adc
lock
jl
into
test
cmpb
inc
sub
add
cmpsl
loopne
ja
pusha
divl
sub
adc
xchg
jno
and
inc
push
mov
fsub
jg
loopne
xchg
imul
dec
jae
fwait
dec
lock
rorl
loope
fnstsw
lock
fwait
mov
pushf
shlb
loopne
xor
push
xchg
or
mov
lock
in
lods
xor
or
mov
das
stos
outsl
jecxz
mov
or
mov
aam
dec
lret
jo
sub
je
sbb
dec
cld
nop
iret
push
in
mov
push
add
fnstenv
xor
in
loopne
sub
test
push
mov
inc
lock
or
xorb
push
xor
push
call
or
jo
sar
cmp
sahf
lea
ss
insl
sbb
xor
jno
adc
or
insl
adc
add
mov
cmpsl
fisubrs
icebp
mov
call
popf
shlb
push
mov
cli
push
mov
pop
or
je
sub
cmpsl
cwtl
adc
test
inc
inc
xchg
add
jg
and
fdivl
or
dec
jo
and
xor
pop
sbb
pop
push
or
sbb
dec
sti
adc
xor
mov
lock
add
sub
mov
mov
test
lock
stc
mov
hlt
je
ss
jno
xlat
adc
pop
pushf
insl
push
fcompl
stos
aam
outsb
xor
stc
pop
push
jmp
pop
sbb
add
pop
xadd
sub
xor
mov
xor
pop
jge
shr
jno
inc
loopne
popa
sub
fisttps
xchg
lock
xchg
cmpsl
push
divb
add
scas
enter
js
and
mov
rorb
push
add
movl
les
mov
icebp
loop
or
sub
inc
cld
ret
jp
jg
adc
fmuls
push
or
mov
lods
movsb
lret
ret
lock
push
outsb
push
xchg
mov
test
es
idiv
lock
push
arpl
mov
pop
es
xchg
mov
jns
or
shlb
mov
cmp
xor
jecxz
jg
or
icebp
scas
cmp
dec
shrb
adc
mov
int
inc
in
addr16
xchg
dec
lock
inc
or
push
and
mov
test
dec
outsb
fldcw
in
add
inc
lret
or
enter
push
push
stc
daa
mov
cmp
xchg
dec
adc
cmp
dec
sub
lock
mov
jo
rcrb
pop
xchg
inc
stc
xchg
nop
mov
mov
aas
pushl
push
jmp
fidivs
stos
sti
popf
mov
movsb
add
mov
clc
sbb
pop
int3
mov
in
cmpsl
lock
mov
nop
fcoml
fs
lock
adc
lcall
mov
push
dec
out
out
push
push
gs
inc
lock
mov
adc
cmp
pop
mov
call
inc
pop
scas
or
into
sub
mov
nop
mov
stos
popl
and
lock
addr16
jge
lock
jb
andb
loopne
sbb
or
rol
adc
sub
negb
adc
add
scas
inc
pop
adc
push
add
jae
in
lock
mov
les
stos
xchg
mov
fisttpl
jmp
cmp
mov
mov
mov
js
test
test
cld
push
into
cmpsl
cld
pop
xor
cmpsb
sbb
or
leave
sbbb
mov
fstp
in
adc
call
xor
lods
jecxz
mov
mov
cwtl
shll
pop
mov
jo
push
test
pop
jg
lock
pusha
jl
test
cmp
clc
pop
cmc
pop
mov
jge,pn
idivb
mov
mov
fucomp
or
inc
insl
popa
jno
lea
xor
add
fcmovb
nop
loopne
xor
cmp
lea
pop
cmp
movsw
hlt
mov
aad
and
outsl
fbld
popa
sahf
test
out
sbb
int3
push
xor
mov
sahf
lret
js
jmp
ret
pop
jle
push
adc
es
inc
rolb
mov
enter
pop
daa
pop
or
je
add
cmpb
mov
jmp
inc
ror
xorb
imul
mov
cmp
pop
lock
sti
jge
push
mov
cwtl
ss
or
or
lods
nop
jae
les
es
push
imul
iret
and
jno
sub
mov
orl
mov
fcom
mov
mov
jp
xchg
mov
jp
sub
add
shlb
or
inc
push
push
in
pop
or
icebp
push
xchg
out
push
sub
cmp
mov
mulb
lret
mov
mov
push
jl
popl
push
or
call
ret
dec
pop
in
lock
int
adcb
mov
rcll
into
out
fimuls
and
inc
mov
lock
mov
lods
flds
xor
ds
xor
jo
fbstp
cmp
add
nop
xor
lock
xchg
mov
out
inc
xor
mov
jg
pop
ret
sub
pop
lock
mov
mov
clc
push
push
push
shl
inc
pusha
lock
lcall
ja
iret
push
sti
sahf
repnz
rcrb
leave
clc
movsb
mov
das
jl
sbb
xor
popa
adc
inc
dec
pop
outsb
loop
scas
popa
sub
push
andb
inc
arpl
sbb
arpl
adc
sbb
jmp
mov
push
es
ret
push
repnz
fxtract
or
pop
mov
inc
adc
ret
int
jl
lock
sbb
subps
add
and
mov
lcall
int
loopne
jo
sub
xor
repz
scas
ret
out
out
mov
sbb
jne
jnp
push
in
and
movaps
inc
lods
dec
shll
lds
ss
jle
xorl
jg
mov
mov
lods
pop
xor
dec
push
es
mov
and
mov
aaa
push
std
mov
dec
xchg
icebp
adc
iret
sub
xchg
and
lods
les
pop
cwtl
jp
lds
pop
sti
insb
sbb
pop
sub
add
adc
jo
mov
data16
stc
clc
and
lock
call
or
pop
xor
ret
xlat
inc
inc
movsb
fistpl
test
jmp
cmc
push
mov
enter
push
xor
sbb
bsr
cmp
and
or
icebp
out
cld
xchg
cmp
jmp
ret
push
mov
lock
inc
or
sbb
xor
cwtl
pushf
in
cmp
mov
sub
sub
xchg
and
mov
sbb
or
jg
sbb
cmovg
lahf
fwait
addb
fisubl
out
mov
push
sbb
push
fadds
ja
push
dec
adc
lods
bnd
adc
lock
add
sbb
stos
icebp
and
sbb
fwait
pop
jg
lock
daa
cmp
les
sub
insb
add
inc
or
jnp
icebp
xchg
es
cmpsl
imul
lea
dec
testb
mov
frstor
jg
cwtl
pop
xchg
adc
addr16
in
jno
pop
cmp
jb
loopne
outsb
int3
or
push
sub
scas
fidivs
mov
testl
andb
inc
test
and
or
ret
pop
push
mov
pop
cmp
sub
imul
add
fcmovnbe
or
ljmp
and
or
dec
cltd
sbb
jmp
jo
lock
push
insl
cmp
sti
seta
push
xor
enter
lock
mov
das
mov
xor
arpl
xchg
nop
scas
lock
mov
dec
fwait
sub
orl
lock
push
pop
sbb
sbb
adc
fadds
dec
mov
jbe
xchg
lcall
repz
repz
fnstcw
ljmp
and
addb
lock
push
cld
clc
push
mov
xchg
lock
orb
lret
push
sbbb
pusha
jmp
jo
or
mov
jl
clc
push
lock
loopne
push
call
add
and
lock
cmp
xor
f2xm1
ja
cwtl
in
ljmp
mov
aaa
pop
inc
scas
jle
adc
xor
lahf
ss
mov
inc
jle
ret
call
es
pop
fldcw
cmpb
in
cmp
xchg
test
or
sahf
cmc
iret
dec
push
enter
cli
cltd
ret
dec
je
sub
lahf
lock
mov
jge
sti
xor
pushf
or
pop
daa
mov
sub
test
pop
xchg
lret
pop
xor
lahf
mov
js
lock
or
lock
shlb
jbe
out
pop
test
jo
dec
lahf
nop
repz
daa
ljmp
xor
adc
out
jb
mov
add
lock
xor
sub
xchg
xor
out
loopne
adc
xor
lock
int3
roll
jle
lock
cmpsl
aam
mov
cli
pop
jg
push
js
and
hlt
push
xchg
lock
mov
xorl
cmp
sub
xor
xchg
add
mov
adc
lock
popa
out
ja
or
repz
inc
xchg
sbb
into
add
es
popa
insb
lock
mov
cmp
xchg
or
pusha
cmc
stos
rep
lahf
data16
ds
inc
lock
mov
in
rcrb
popa
addps
clc
mov
dec
and
shll
fsubs
push
out
adc
push
hlt
insb
cli
cld
pop
pop
sbb
jo
xchg
or
sahf
inc
mov
pop
mov
call
das
pop
and
cmp
dec
mov
mov
and
iret
mov
jnp
insl
mov
lcall
push
sbb
rcrb
cmp
or
fmuls
push
push
ss
adc
fmulp
in
jg
pop
or
lahf
xchg
ds
or
dec
in
out
mov
lock
fnstsw
and
or
push
int3
or
lock
repz
jl
adc
nop
jle
push
lock
dec
out
call
push
movb
push
in
sub
pop
and
add
mov
lret
sub
repz
push
pop
aam
xchg
pop
inc
xorb
xchg
mov
loopne
dec
data16
lock
lahf
lock
stos
test
stc
push
imul
push
ficomps
test
rclb
jle
jo
test
xor
testl
xchg
loopne
test
jo
jle
xchg
ret
iret
mov
imul
xchg
push
xchg
or
dec
icebp
cmpsb
jno
xchg
stc
hlt
ret
cs
jae
lahf
out
sarb
into
lock
ljmp
jl
xchg
inc
loope
repnz
andb
lock
int3
inc
xor
jp
cs
pop
or
scas
lock
jae
enter
cli
sbb
adc
sub
push
push
push
lock
adc
push
inc
lock
repnz
jb
icebp
push
xchg
adc
js
aam
ret
adc
mov
dec
fisttpl
inc
mov
push
push
insl
outsl
pop
lock
pop
repnz
mov
jnp
sahf
xor
cmp
push
call
jecxz
loop
mov
mov
scas
jbe
jg
ret
cmc
or
jno
jb
jecxz
add
push
sbb
sub
push
jl
sahf
push
mov
mov
mov
call
xchg
adc
jae
or
dec
test
push
adc
aad
mov
fcomi
sahf
sub
popa
mov
mov
aas
lock
mov
mov
bnd
xor
pop
lods
cmp
mov
mov
jle
icebp
gs
subl
adc
push
push
lcall
inc
sbb
or
jle
sub
push
lock
nop
sub
mov
adc
test
mov
and
bnd
cmp
fiadds
jmp
jecxz
jp
jo
lock
push
pcmpgtb
addb
lret
mov
repz
push
movsl
in
shrb
push
push
sub
mov
lahf
adc
push
popl
push
shll
dec
xchg
inc
mov
xchg
les
inc
sahf
push
push
movsb
outsb
lock
rsqrtps
sub
ja
or
popl
in
inc
mov
lock
test
mov
cmpsl
or
xor
scas
jo
xchg
loopne
repz
push
and
push
add
mov
repz
test
xchg
into
adc
sti
js
rclb
sbb
mov
sbbl
mov
push
outsb
adc
xchg
repz
test
call
add
les
lcall
jle
lock
outsb
rcrl
or
in
mov
imul
nop
mov
cwtl
push
push
movsb
xor
dec
ljmp
lock
addb
cmp
add
icebp
or
pop
cmc
popf
push
add
pop
dec
in
push
leave
push
iret
cmpsl
and
mov
mov
pushf
xchg
push
or
dec
lock
sub
xor
jmp
hlt
cld
jno
icebp
rorb
stc
popf
test
js
sbb
sub
xchg
xor
leave
mov
movsl
in
xor
mov
push
stos
dec
xchg
jb
jmp
fsubrl
addr16
pop
xchg
jo
rorb
aas
stc
cmp
ja
int
movsb
std
pop
xchg
pop
add
movsb
fimuls
je
sub
push
std
mov
push
inc
and
dec
sbb
pop
mov
push
xchg
or
mov
jno
shrl
jmp
inc
push
mov
jo
je
loop
xchg
xor
inc
mov
ss
lds
scas
sub
lea
mov
outsb
ret
jl
xchg
fisttps
mov
subl
clc
fcmovnb
shl
shlb
push
dec
cwtl
clc
call
cld
out
pop
pop
ret
mov
adc
test
xchg
imul
je
std
inc
hlt
movsb
outsb
and
add
mov
test
loop
adc
popa
pop
push
jle
xor
pop
pop
lock
pop
in
add
nop
test
out
lock
mov
inc
and
cmc
dec
jo
dec
out
inc
lock
adc
adc
xor
lods
repz
add
mov
lock
adc
shlb
lock
out
cmp
sub
rdtsc
mov
in
cmc
mov
adcb
notb
clc
cmpsb
push
std
mov
divps
mov
cltd
jmp
jmp
addl
pop
out
and
js
sub
xchg
notb
fcmovu
dec
js
pop
mov
cltd
xchg
dec
jae
mov
inc
adc
fcoms
push
adc
xchg
cmp
lahf
in
sahf
dec
repnz
cmp
jmp
cmc
cmp
add
insb
xor
adc
popf
dec
pop
xor
xchg
xchg
cltd
mov
xchg
movsl
mov
ja
lcall
andb
push
add
mov
daa
mov
jle
sub
dec
popf
call
inc
mov
ret
or
fs
loop
add
inc
callw
loop
lock
cmpsl
push
mov
sbb
add
test
xor
call
and
fsubrl
sub
xor
inc
mov
adc
mov
loopne
mov
sub
adc
cli
add
movsl
xchg
in
add
pop
lock
jbe
test
lods
jmp
pop
sbb
mov
repz
xchg
jl
sub
mov
mov
mov
xchg
mov
bnd
pop
jbe
loope
repz
leave
test
jge
xorb
dec
mov
out
popf
jmp
push
into
divl
shr
add
mov
popa
lock
out
or
sbb
cmpl
push
imul
fwait
xor
jb
xor
enter
leave
loopne
pusha
xor
and
int
nop
xchg
or
mov
xchg
dec
cmc
icebp
leave
mov
loop
jmp
or
push
push
cmp
mov
dec
lock
jle
stc
jae
repnz
push
adc
jmp
dec
shlb
adc
xor
sar
mov
mov
clc
jns
push
jne
mov
lea
add
sub
test
jae
xchg
cmp
dec
les
add
and
xchg
push
mov
loopne
add
push
mov
jmp
dec
jp
inc
int3
xlat
enter
ds
mov
and
xor
add
call
xchg
rorb
and
or
xchg
adc
mov
call
mov
enter
clc
fisttps
pop
cmp
jno
xchg
loopne
or
stos
pop
fwait
mov
inc
sbb
and
sub
or
cwtl
add
mov
icebp
test
mov
out
fcompl
mov
outsb
push
imulb
cmc
jns
sub
pop
in
or
pop
sti
mov
mov
xchg
mov
jmp
outsb
jmp
or
inc
in
jne
outsl
sarl
dec
sub
das
pop
in
stos
adc
push
loop
loop
cmp
ja
lret
xchg
lcall
jl
dec
xchg
mov
or
add
jge
sbb
jne
fsubl
mov
nop
xchg
push
pusha
call
clc
jmp
cmp
mov
iret
jmp
into
add
mov
push
pop
fisttpll
push
adc
sbb
adc
jb
cwtl
jo
xor
jns
leave
add
and
or
and
repnz
cmp
push
sbb
xchg
cli
xchg
adc
mov
lahf
repz
or
inc
or
addb
call
push
xchg
dec
xchg
out
xchg
sub
mov
addr16
push
add
mov
pop
aad
sub
es
sub
ret
call
enter
fxch
add
mov
sub
jae
mov
push
test
jbe
scas
adc
inc
mov
pop
jb
loope
xchg
jmp
fstps
push
jp
roll
dec
push
aaa
inc
std
sub
sub
mov
gs
and
and
mov
stc
aaa
push
jmp
or
mov
jns
and
mov
xor
out
flds
je
and
aas
roll
push
cmp
pop
dec
pop
repnz
loop
and
or
cltd
xlat
sbb
pop
or
out
hlt
jl
add
or
sti
add
and
or
test
popf
sub
cmp
add
pop
cli
add
out
cmpsl
loopne
cmpsb
jns
int3
xor
push
inc
or
adc
and
pusha
adc
dec
loope
push
insb
add
add
sub
sbb
cwtl
add
lods
and
or
cmp
pusha
jae
loopne
subb
decb
loope
or
or
xor
mov
pop
jl
movsb
in
mov
push
out
push
xor
insb
xor
testb
repz
or
popa
lods
cmpsl
in
or
adcb
repnz
out
dec
icebp
xor
fucomip
or
enter
jo
xchg
aam
or
push
movsb
add
xor
inc
out
add
xchg
jb
add
movb
lods
pop
nop
xchg
add
mov
push
and
lods
xchg
shrl
mov
dec
mov
hlt
xchg
mov
cmp
or
enter
dec
push
jge
inc
je
enter
sub
push
xor
aam
add
push
pop
cmp
sbb
and
inc
add
add
and
lock
inc
insb
jb
inc
js
adc
mov
nop
in
and
jno
xor
lcall
xchg
pop
adc
cmp
fucomp
rcrb
pop
int3
xchg
mov
adc
dec
movsl
leave
and
inc
js
cwtl
pop
test
mov
sub
cmp
sbb
jnp
lods
or
add
sub
sbb
clc
cmp
pop
mov
js
loop
and
mov
or
cmp
add
jmp
scas
dec
push
sbb
add
pop
sar
jmp
mov
repnz
push
mov
lock
rolb
cmp
jmp
or
cli
repz
dec
xchg
insb
dec
hlt
dec
push
jmp
sbb
clc
add
pop
push
cmp
icebp
mov
jmp
lds
cmp
add
lret
cmpsb
addl
or
fldl
push
cmp
mov
lock
or
out
jae
or
notb
clc
push
outsb
mov
sbb
push
shrl
jb
mov
push
not
mov
clc
xchg
cmp
pop
test
push
pushf
cli
or
shll
pop
aas
jmp
loopne
dec
inc
call
xchg
pushf
leave
inc
mov
es
sbb
mov
pop
aas
cmp
cmp
lods
movsl
fdivp
dec
enter
out
out
ret
ljmp
test
pop
or
jno
and
cmp
or
mov
cli
repz
mov
mov
mov
rorb
mov
add
mov
rorl
ret
cmc
fiadds
xchg
or
jp
es
imul
div
mov
lcall
inc
nop
inc
in
fucomip
shr
sbb
es
sarb
mov
hlt
jmp
cmp
out
pop
add
cmp
mov
shll
xor
jmp
mov
mov
inc
ret
sbb
push
xchg
inc
inc
sti
jae
xor
test
dec
das
mov
repnz
mov
stc
jo
mov
cmp
jb
jmp
repnz
add
push
hlt
jo
fsubrl
fisttpll
or
lds
xchg
dec
and
push
enter
push
cmp
sub
orb
pop
jmp
add
out
pop
icebp
scas
call
push
out
and
and
sub
adc
outsl
cmc
cltd
sub
fmull
clc
mov
xor
dec
mov
add
pop
jns
dec
mov
and
jle
sub
sub
adc
int3
roll
daa
or
adc
inc
pop
xlat
dec
lcall
mov
stos
movsl
push
jno
or
test
call
adc
call
mov
or
in
dec
xchg
loopne
orb
add
adc
enter
pop
mov
or
pop
push
sub
jp
jmp
call
push
adc
pop
xor
out
xchg
andb
leave
push
mov
mov
ficoms
enter
push
xchg
mov
nop
sti
or
inc
mov
lock
mov
aaa
ret
jo
adc
in
fsubr
jnp
add
cmc
push
pop
xchg
dec
jo
push
add
add
add
or
push
jp
jno
push
xor
lock
cmp
cli
shrl
loopne
cwtl
xor
xchg
and
rclb
jmp
scas
lods
les
push
or
xchg
sub
sbbb
in
or
loopne
pop
or
xor
mov
lcall
cmc
mov
jae
sbb
mov
test
movsb
mov
std
sub
add
sbb
or
xchg
cmp
inc
movsb
mov
dec
jnp
icebp
mov
fsubr
aad
movl
pusha
es
imul
cmc
mov
push
inc
xchg
cltd
lret
daa
fimull
push
add
inc
jmp
ljmp
dec
fldl
push
mov
icebp
pop
xor
pop
sub
lock
stc
and
jmp
xchg
lahf
sbb
lahf
xor
testl
add
ds
mov
and
sbb
push
xor
mov
mov
inc
dec
dec
xchg
inc
sahf
mov
xchg
je
dec
xchg
lods
jge
fistpl
pop
xor
push
ret
js
lret
sub
pop
idivb
and
push
jmp
scas
xor
or
cmpsb
or
das
lock
dec
idiv
mov
jmp
mov
clc
pop
lea
fcoms
cli
in
rclb
sbb
mov
movsl
sub
xchg
adc
jmp
das
repz
or
inc
mov
mov
lock
pop
std
jae
icebp
movsb
call
or
inc
cmpsl
loop
lahf
jbe
lods
mov
popf
sub
leave
pushf
sahf
gs
cmpsl
repnz
mov
pusha
and
pop
cmp
rcr
and
es
scas
out
add
inc
sti
lahf
sbb
insl
rclb
add
mov
rolb
dec
push
adc
mov
test
or
xor
int
mov
pop
scas
orb
dec
mov
xor
inc
mov
sbb
adc
dec
out
push
mov
hlt
xchg
ljmp
test
sub
jl
push
xor
mov
or
and
jo
and
mov
jnp
push
inc
imul
sub
pop
mov
cmp
icebp
nop
js
lock
pop
and
jo
or
xchg
pop
adc
movsb
jp
pop
pushf
lods
jg
cmc
adc
and
test
push
clc
fsub
cmp
dec
inc
pop
mov
sub
test
or
cld
adc
adc
sbb
clc
jp
add
add
mov
cmpsl
or
repz
movsb
jle
push
pusha
movsl
or
and
or
sub
lds
repz
mov
adc
insb
fistps
stos
clc
ret
or
sub
sar
mov
push
or
scas
pushf
xor
repz
rorb
into
or
addl
mov
pop
fidivrl
jmp
xchg
or
stc
jb
std
pop
std
jp
sbb
xor
cmpsl
mov
inc
in
or
stc
cmp
mov
out
in
or
lods
xlat
jns
cmp
mov
jne
iret
or
mov
push
sbb
or
add
popl
and
or
push
jmp
lcall
push
out
into
or
sbb
or
fcmovb
mov
in
leave
imul
xchg
cwtl
inc
shrl
lods
push
mov
cld
mov
mov
jmp
sbb
inc
or
adc
out
push
pusha
cltd
add
and
jb
fildll
pop
dec
icebp
cs
xchg
enter
imull
sub
inc
negb
and
icebp
fnsave
out
jmp
xchg
and
xlat
stos
ds
pusha
mov
in
push
iret
cs
xor
test
lods
loope
enter
call
add
sbb
pshufw
pop
or
xor
fwait
adc
decb
pop
loope
mov
adc
bswap
fildll
pusha
cs
push
ret
pop
int3
dec
jmp
fucomi
sub
out
nop
jae
call
xchg
rolb
mov
mov
repnz
inc
adc
mov
or
enter
xchg
mov
call
or
mov
sbb
dec
xor
aad
aam
or
pusha
repz
jmp
aam
inc
and
sahf
adc
or
leave
daa
addr16
add
dec
lods
cmp
or
ds
sub
jno
pop
ret
mov
into
cwtl
lods
cmp
add
loope
adc
dec
das
mov
push
ret
xlat
sub
enter
call
pop
mov
mov
fcomps
lcall
lock
push
push
sub
sbb
cs
pop
imul
xor
xchg
jnp
loope
mov
mov
test
call
pop
and
popf
push
mov
sbb
adc
mov
cmp
jecxz
mov
mov
or
add
pslld
mov
repz
cmp
and
pop
enter
or
sbb
xor
jno
rolb
call
pop
xchg
sub
push
adc
insl
ret
int
mov
mov
arpl
or
notl
adc
stos
fdivp
idivl
das
pop
add
jmp
jae
shr
test
and
fldl
add
or
add
jno
and
xchg
xchg
adc
adc
mov
push
add
out
inc
int
mov
adc
loope
pop
pushl
push
jno
movsb
or
fisttps
ljmp
cli
ret
sti
mov
cmp
and
stc
or
cmp
and
dec
jmp
mov
xchg
ficompl
movsl
and
dec
in
push
add
mov
jne
jne
call
repz
hlt
xor
pop
ret
adc
add
or
cltd
test
test
push
push
mov
das
jl
call
push
sub
ret
xchg
sahf
clc
loop
cmp
ss
pop
sarl
dec
dec
add
popa
mov
mov
xor
xchg
or
push
mov
xchg
rorb
call
int3
mov
movsl
sbb
push
or
inc
sub
mov
mov
jns
cs
xor
lods
testl
nop
mov
or
nop
jno
movsb
rcr
sar
insl
xchg
adc
cmp
js
rorl
jo
add
pop
icebp
dec
adc
push
sbb
call
mov
fnstsw
roll
sbb
add
mov
xchg
jle
mov
punpckhbw
ret
ss
std
es
xchg
or
push
jo
lods
and
add
std
pop
or
sbb
sub
fwait
test
jmp
dec
call
nop
cmp
add
or
loop
sub
mov
popa
bound
xchg
test
rcrb
add
fdivs
addr16
ret
insb
movsl
sar
mov
or
cld
xchg
pushl
jo
sbb
out
dec
in
inc
or
push
or
test
aaa
loop
pushf
adc
imul
imul
xchg
or
inc
add
and
xchg
sbb
add
pop
loop
add
mov
dec
mov
pop
call
shlb
mov
idivb
in
sub
push
pop
cs
mov
inc
xchg
loope
dec
in
hlt
dec
ret
push
adc
loope
pop
jp
add
in
inc
xchg
pop
adc
pop
push
sbb
add
push
divl
aad
jmp
jmp
and
mov
xchg
cli
push
aam
jecxz
or
xchg
loopne
stos
movsl
ja
xchg
adc
movsl
inc
push
jmp
mov
sub
rcl
pop
addr16
nop
cmp
std
shrl
adc
fmulp
cli
insb
cwtl
mov
mov
fstpl
mov
cmp
and
xchg
inc
mov
lods
loopne
or
bnd
iret
test
lret
mov
jmp
popf
or
movl
sbb
mov
or
call
jp
cmpb
in
mull
rolb
pushf
cli
mov
imul
pusha
sti
pop
and
push
add
sub
incb
xchg
xchg
sub
lods
adcl
stos
push
xchg
popf
scas
iret
xchg
sub
or
xchg
pusha
pop
mov
push
rcrl
loopne
jmp
push
jne
cmp
xchg
pop
adc
sahf
stos
fdiv
mov
pop
jmp
mov
mov
aam
dec
aas
test
out
mov
jmp
adc
and
sub
pop
mov
add
pushf
pop
sbbl
jl
mov
xor
mov
sub
clc
repz
icebp
fsubr
shl
popa
mov
sub
ds
xor
push
mov
mov
into
test
dec
stos
mov
ret
les
ljmp
or
jecxz
inc
jmp
imul
lcall
out
and
fisubl
decb
mov
cmp
repnz
pop
clc
sub
lahf
mov
jne
es
jmp
call
nop
fsubl
dec
scas
aam
mov
test
or
repz
data16
loop
push
adc
xor
jp
dec
pop
push
push
call
out
pushf
daa
mov
lret
push
mov
pushl
clc
jmp
popf
pop
stc
stos
or
in
idivb
mov
jmp
jo
inc
popf
pop
cmc
xchg
loope
into
and
lahf
sub
clc
mov
andl
push
daa
jo
pop
cmp
mov
inc
movsb
int3
fwait
call
fwait
int
inc
ret
inc
inc
push
pushf
sub
sti
jne
add
jmp
xor
dec
dec
lds
mov
sub
lods
das
mov
dec
mov
popa
inc
mov
jno
and
or
push
jae
shl
jo
out
pop
adc
mov
les
mov
es
fcmove
rcrb
or
cld
call
push
insb
sub
inc
orb
mov
addb
push
push
push
fldl
frstor
push
sub
and
dec
test
dec
leave
popa
clc
jp
nop
sbb
pop
push
xchg
sub
mov
mov
std
adc
fwait
dec
adc
mov
xor
jle
icebp
xchg
inc
inc
call
jbe
mov
mov
dec
mov
dec
popf
clc
insb
inc
and
ret
mov
cmp
stc
mov
std
jmp
mov
xchg
add
pop
dec
jae
iret
cmp
dec
xlat
add
enter
xchg
cli
or
jno
in
test
adc
int3
enter
or
in
dec
jns
movsl
inc
xchg
leave
cwtl
call
in
std
lcall
lret
out
inc
jmp
and
shll
call
hlt
jno
dec
sbb
stc
mov
scas
mov
in
mov
clc
or
das
mov
pop
jnp
xchg
call
push
repnz
push
std
loopne
add
testb
stc
int3
mov
mov
loopne
mov
add
sarb
cwtl
lods
std
mov
mov
and
xchg
jae
xlat
push
dec
lcall
sub
cmc
mov
jmp
call
push
push
jmp
mov
push
ljmp
and
add
or
cmpsl
je
lret
xchg
das
jl
int
lods
adc
push
data16
xchg
mov
das
push
outsb
testl
xchg
rol
xor
pop
mov
pop
clc
push
jno
pop
icebp
sub
icebp
stos
mov
ret
aam
test
jo
adc
pop
dec
mov
repz
cmp
jmp
loopne
mov
mov
pop
clc
add
mov
int3
fistpl
sbbb
cvtdq2ps
outsl
nop
mov
or
mov
leave
xchg
dec
jno
mov
fnstenv
insl
mov
xor
mov
ret
shr
fistpl
outsb
jmp
adc
mov
xor
mov
fiadds
mov
iret
call
push
ficomps
inc
mov
shl
ret
and
and
mov
pop
jecxz
mov
xor
add
and
mov
stos
or
dec
popa
pop
xchg
pusha
jle
dec
sbb
icebp
pop
xchg
jmp
mov
stc
decl
add
rclb
adc
xor
jmp
mov
push
out
movsl
lahf
inc
dec
pop
add
and
pop
cmpsl
and
push
test
inc
pop
cs
loop
xor
mov
mov
add
fisubrl
xor
in
jmp
loope
sub
outsl
loope
mov
rcrb
or
andl
repz
sub
lret
add
jg
xor
sub
pushf
mov
int3
cli
and
sub
in
or
test
mov
mov
mov
push
push
mov
jb
shlb
lret
dec
mov
clc
rclb
sub
push
cwtl
call
push
imul
push
icebp
mov
and
inc
mov
fmull
inc
dec
mov
xor
push
or
outsb
adc
inc
jge
test
mov
mov
in
sub
cmp
mov
fdivs
mov
fcomps
testb
push
int
daa
scas
and
test
lret
testl
mov
jmp
or
add
or
das
xchg
jmp
rcll
jecxz
pushf
lahf
pushf
nop
movsl
jbe
shr
dec
dec
push
in
das
repz
imul
sbb
adc
bound
pop
sub
stc
or
adc
dec
push
xor
cltd
inc
es
fs
mov
push
jmp
out
pop
icebp
in
call
stos
sbb
push
call
xor
gs
shl
pop
push
mov
sti
insb
fxam
lahf
adc
jmp
add
xor
add
add
mov
pop
and
fists
pop
jne
xor
gs
sbb
or
aaa
ret
mov
test
pop
lea
cmp
fucomi
ffree
jge
repnz
or
mov
mov
push
sub
push
pop
mov
xchg
dec
dec
ds
pop
scas
into
mov
mov
add
test
in
cmc
sbb
add
or
dec
xchg
std
in
dec
mov
adc
fwait
push
jne
aaa
leave
jle
mov
or
and
leave
popa
dec
in
cmpsl
cld
popa
and
xchg
mov
or
rcll
adc
xlat
aam
fbld
xchg
sub
inc
sbbb
mov
je
dec
adc
lea
lret
clc
cmp
sahf
and
repnz
mov
lock
push
push
pushf
and
in
in
pop
ret
or
jp
in
mov
mov
and
or
sti
aaa
clc
daa
inc
clc
mov
push
aas
sub
loop
jno
lock
mov
or
pushf
loop
pop
mov
adc
pop
dec
mov
mov
mov
add
add
jmp
das
xchg
cld
xlat
mov
add
cld
or
fcoms
mov
or
mov
cmp
xor
or
test
push
xchg
adc
shl
and
or
jmp
testb
pop
dec
lods
stc
push
jmp
mov
xor
aad
jo
xchg
pop
ja
sti
movsl
stc
dec
out
xor
das
sar
and
ss
pop
mov
mov
push
sub
and
call
xchg
jp
jbe
pop
sub
dec
add
std
jle
ljmp
and
and
jnp
ret
dec
xor
fsubrp
and
add
inc
sbb
call
in
add
xchg
mov
sbb
adc
stc
aad
and
dec
lea
and
add
pop
repnz
pop
mov
pop
icebp
test
and
and
cmp
cmp
xorb
pop
cmp
pushf
scas
cwtl
iret
xchg
out
xchg
movsb
push
loopne
add
sub
mov
xor
and
imul
adc
andl
xor
cmp
lahf
or
push
mov
pushf
or
loopne
cmovge
inc
and
repnz
mov
and
popf
in
in
pop
cmp
xor
inc
sub
aas
sbb
mov
icebp
cmc
lods
ffreep
lock
shlb
fwait
mov
fcomp
push
or
test
clc
jmp
or
pop
clc
in
mov
ss
sub
and
fstps
inc
clc
call
es
lock
xor
mov
cmovno
mov
clc
sub
mov
sbb
stc
mov
adc
mov
lods
je
mov
insb
xor
pusha
mov
leave
nop
push
aas
insb
lea
and
pushf
push
and
sub
cmp
pop
push
jle
int3
jo
add
jmp
loopne
in
add
mov
aam
or
sub
es
mov
xchg
inc
jo
sub
loopne
add
pop
pop
subb
mov
enter
clc
fsub
add
subl
loopne
dec
icebp
sub
lock
pusha
roll
mov
lock
call
clc
jo
cs
sarb
and
cmpsl
mov
pop
xchg
test
clc
lcall
xchg
dec
call
inc
mov
mov
ljmp
push
jle
push
stc
cmc
push
nop
clc
ds
sub
in
imul
addb
mov
adc
negb
and
xor
add
scas
testl
jl
rolw
inc
mov
push
jmp
repz
call
inc
lcall
cltd
add
sub
jle
shl
cli
add
aam
xchg
pusha
lock
adc
sub
es
jae
push
jno
jno
jmp
icebp
fdivp
cld
mov
je
inc
mov
nop
pop
lock
loop
xchg
add
loope
dec
imul
sbb
mov
std
inc
lock
push
ret
add
mov
out
lock
inc
sub
pop
out
sub
jno
lock
lods
jecxz
movl
jo
stos
dec
inc
aad
arpl
icebp
xor
lock
stc
std
xor
mov
sbb
cmp
jle
lock
sti
call
imull
lods
frstor
adc
insb
sbb
lock
fisubrs
push
dec
out
lock
add
loop
mov
push
aam
jo
dec
popa
cmpb
mov
scas
cmpsw
cmp
or
pop
ss
push
clc
push
lock
dec
mov
push
repz
push
cmp
call
cmp
mov
cwtl
out
movsl
sarb
lar
jle
insl
mov
lock
nop
push
mov
xcrypt-ecb
cmpsl
dec
ds
pop
mov
cwtl
mov
in
cltd
add
mov
lock
icebp
movsl
lods
lock
nop
js
mov
rclb
dec
xchg
lock
jle
movd
mov
cmp
popa
mov
mov
pop
rorl
fdiv
inc
lock
ds
lock
stos
lahf
insb
fistps
mov
movsl
movsb
sahf
repnz
ljmp
rclb
lock
sub
jno
pop
pop
psadbw
jo
jl
lock
repz
lock
sub
out
mov
xlat
add
push
inc
or
popa
lock
mov
pushf
mov
xor
push
xchg
lock
fists
cmpl
push
fidivrl
mov
pop
lock
xchg
adc
push
inc
add
enter
shlw
xor
jb
aaa
lahf
loopne
push
je
pop
sbb
jmp
add
jge
lock
jp
stos
lock
sbb
dec
mov
cmpsb
mov
aam
lock
push
cli
lods
in
mov
push
inc
jb
jo
cmp
cld
lock
mov
nop
fwait
mov
pop
push
test
dec
mov
scas
fcmovne
jo
add
xchg
jbe
lock
xchg
shll
loopne
lock
xchg
icebp
or
push
scas
fnstenv
in
out
lock
inc
nop
rclb
mov
lahf
or
jge
lock
fimuls
dec
push
xor
push
cmp
mov
addb
ljmp
jge
stos
cmp
or
jmp
push
lods
lcall
jne
leave
icebp
push
mov
addr16
and
and
enter
dec
mov
push
pop
jmp
mov
adc
sub
push
bound
lock
xchg
adc
fldcw
sbb
pop
cld
and
sub
pop
mov
xchg
lock
aad
pop
xchg
je
testb
add
fdivrl
and
mov
cmp
xchg
inc
scas
aam
pop
fcom
lock
sarl
mov
adc
add
lock
cmpsb
scas
pop
lret
mov
cltd
fwait
or
lcall
mov
or
xor
pop
roll
test
ds
xor
and
mov
dec
xor
lock
cld
or
ret
cli
add
cwtl
mov
push
mov
popf
test
aam
cs
pusha
fsubl
popa
cld
jnp
mov
les
lock
mov
xor
pushf
mov
pop
hlt
jmp
mov
dec
in
lock
and
mov
sub
or
shll
pop
hlt
fs
mov
xchg
shll
pop
movsl
or
fidivrs
lock
rolb
sub
or
addr16
pop
xchg
pop
mov
and
cmp
stos
inc
cmc
ss
and
test
setl
jno
lock
cmpsl
test
in
sbbl
sti
sbb
gs
fmull
imul
icebp
mov
cmp
fmull
cmp
pushf
and
xchg
sbb
aad
cmp
lock
push
mov
ljmp
mov
dec
and
xchg
pop
mov
cmp
dec
shlb
fcompl
out
sahf
dec
pop
mov
fs
fwait
into
and
push
test
inc
mov
push
dec
mov
dec
fwait
lock
lock
test
inc
fpatan
sarb
fwait
loop
pop
jo
mov
shll
int3
lock
stc
adc
shrl
cmp
fisubrl
test
pop
hlt
mov
into
sti
lods
push
repz
jae
scas
aam
ret
lock
pop
sahf
mov
mov
cmc
sti
mov
fcompl
js
nop
test
jg
xchg
repz
test
mov
test
popf
lock
repnz
adc
ljmp
cmp
pop
stos
mov
dec
mov
sub
out
je
in
or
rolb
dec
emms
xchg
out
xor
jb
xor
pop
inc
lock
jle
call
push
jo
stos
xchg
mov
lods
lock
popf
push
jge
sbb
test
pop
mov
jmp
lods
inc
mov
mov
cmp
sbb
mov
mov
pushf
adc
cli
out
dec
or
and
subb
add
adc
mov
xchg
or
test
and
dec
daa
push
add
dec
xchg
and
incb
lock
out
popf
push
pop
dec
lods
xchg
lock
movsb
icebp
cmp
or
fiadds
sarl
pop
mov
pop
cwtl
into
jge
lock
jmp
cmpsb
ret
test
pop
and
mov
mov
cmp
lods
lock
nop
and
mov
mov
aam
lock
jmp
and
cmp
or
jne
movsl
inc
sahf
push
fs
mov
mov
cmc
mov
lock
mov
jmp
pop
mov
sbb
inc
test
daa
sarb
push
mull
sahf
pop
int
out
adc
push
or
cli
pushf
lock
xor
fiaddl
dec
or
lea
sahf
mov
jae
fstpt
adc
xor
lods
loopne
cltd
aas
add
rcrl
call
pushf
cmp
mov
xorb
cmpsb
sub
mov
int3
stos
prefetcht0
xchg
mov
pusha
inc
sub
and
movsb
mov
mov
adc
xor
lock
rolb
shl
jg
fdivrs
fimuls
repnz
xchg
enter
sub
iret
jge
hlt
add
jp
test
movsb
xor
sbb
jle
shl
jne
pop
pop
pop
out
lock
xlat
sbb
push
lock
jge
in
test
pop
sbb
pushf
inc
dec
sbb
lret
sahf
push
loop
je
mov
jl
sbb
mov
int3
lock
inc
push
xchg
jb
and
push
nop
push
call
add
pop
xor
push
je
adc
hlt
scas
cmp
pop
xchg
pop
xchg
les
lock
mov
sub
cmpb
xchg
xor
ja
lock
sub
aam
xorb
stos
xchg
jbe
xor
lahf
bsf
call
aam
or
pop
adc
push
divl
mov
add
sbb
lahf
lret
xchg
lock
push
rorl
jns
jge
mov
orb
sti
mov
mov
lock
jg
ret
aaa
vpsubsw
mov
mov
out
add
cwtl
xor
lcall
mov
lods
sahf
add
std
cs
jge
sbb
xor
test
sbb
mov
cmpl
nop
and
and
hlt
cmp
cmc
repnz
in
lea
lock
iret
mov
rol
lock
lods
and
mov
in
jo
scas
aad
lock
scas
dec
inc
or
out
jns
rcrl
push
or
stos
mov
lock
sbb
cmpb
pop
ja
repz
andl
xchg
lock
jp
rclb
pop
push
scas
jo
sub
divb
dec
lock
adcb
mov
iret
lock
jb
imul
aad
push
out
lods
jl
push
mov
rolb
icebp
outsb
add
int3
xor
repz
cmp
sahf
cmpl
cmp
sub
lock
ret
jle
lock
sbb
add
pop
pusha
lock
mov
cmp
stos
sub
lock
ret
ret
call
push
aam
je
icebp
mov
fs
clc
mov
sbbl
cmpsb
mov
hlt
push
pop
xor
fwait
outsl
iret
xor
mov
pusha
lock
repnz
gs
xlat
out
mov
js
outsl
sbb
mov
sub
fisttpl
movsb
cmp
imul
arpl
or
inc
lock
lds
pop
push
lods
sbb
aad
jmp
popa
xor
xchg
xchg
dec
mov
loop
dec
push
push
add
fistps
push
mov
mov
xor
sub
imul
mov
or
cmp
sbb
mov
cmp
sahf
in
lock
clc
pop
add
adc
bound
mov
imulb
lock
aas
scas
jl
jns
adc
ljmp
cmp
lock
and
lock
fsubl
rclb
test
loope
popf
mov
lock
jl
enter
sbb
pop
xor
or
xchg
xor
xor
push
pop
pop
ljmp
xchg
inc
fnstcw
mov
add
push
sub
push
cmpsl
ss
mov
sbb
xchg
lock
pushf
fisubl
sub
mov
xchg
sub
mov
scas
popf
mov
test
add
push
lock
xchg
sub
xorl
aas
mov
fidivrl
subl
fistps
xorb
ja
add
push
adc
out
es
stos
pop
out
lock
fnstcw
pop
sub
je
and
in
xorl
int3
cmp
push
adc
scas
lret
cmp
push
cwtl
iret
mov
cmpsb
mov
stos
bound
lock
mov
mov
out
lods
jne
and
jns
lahf
pusha
shl
pop
xchg
lret
mov
je
lret
xor
sbb
sub
pop
mov
sbb
rcl
xor
pop
mov
cld
jo
lahf
push
lock
lret
lock
js
cltd
add
lods
test
fs
int
test
fidivl
fcomip
dec
inc
sbb
lock
int
es
add
pop
loop
push
dec
mov
lock
cmp
std
adc
scas
inc
nop
icebp
mov
ss
es
cmpl
cld
mov
insl
lods
add
test
insb
cmp
dec
imul
js
pop
push
lock
cmc
pop
fwait
cltd
jne
lock
scas
push
stos
dec
les
or
mov
mov
addr16
lcall
push
lods
xchg
xchg
cltd
fbld
sahf
xlat
popa
lock
gs
push
inc
sub
lock
mov
adc
loop
lods
pop
mov
repz
fstpt
and
adc
sti
add
lahf
and
pusha
lahf
movsl
cmp
jge
cmpb
mov
addr16
fst
icebp
lea
les
leave
cmpsb
mov
loop
and
cmp
mov
lock
mov
lock
jo
jmp
pushf
fistps
or
adc
add
popa
adc
hlt
cmp
sahf
push
mov
jmp
or
test
or
lock
lea
mov
ja
repnz
stos
xor
shr
xchg
jne
mov
lods
fdivp
hlt
cmp
cmp
mov
adc
repnz
add
fidivl
repz
xor
ja
nop
or
fs
lcall
popf
cmp
and
push
loopne
lock
aam
or
push
pop
inc
test
cmc
mov
mov
pushf
inc
and
or
icebp
sti
cmpsb
mov
inc
lock
pop
and
cmp
xor
jle
inc
rcrb
mov
lock
jmp
sub
sbb
mov
sarb
mov
cltd
mov
mov
mov
clc
loopne
fisubrs
sub
xchg
add
push
mov
lcall
jo
jns
pop
out
pop
lock
imul
pop
int
hlt
pusha
dec
les
mov
mov
outsl
clc
mov
mov
push
lock
cmpl
mov
push
shlb
push
leave
fidivl
test
mov
pop
icebp
inc
lock
pop
roll
inc
pushf
ret
jg
lock
bound
xor
mov
inc
addl
fsubrl
add
adc
aas
jge
or
aaa
mov
dec
dec
lock
xchg
and
arpl
mov
lock
rclb
lock
push
jmp
xor
test
lock
adc
adc
stos
dec
repz
lods
jb
pop
test
or
lea
cmp
lock
mov
sbb
ljmp
cmp
lret
lock
das
inc
inc
jbe
lock
lea
dec
push
sbb
inc
pop
add
lods
mov
sbb
cli
xchg
mov
fwait
sbb
fdivrs
jbe
dec
xchg
mov
adc
pushf
sub
and
mov
xlat
pop
xchg
add
mov
fs
pusha
pop
adc
pushl
jp
pop
shrl
mov
repnz
mov
test
lock
test
or
pusha
movsl
lock
adc
enter
cwtl
push
or
inc
mov
pushf
push
xchg
jb
mov
cld
cltd
lock
pop
lea
push
out
pop
lock
xchg
ds
push
sub
pop
pushf
psubq
push
jle
arpl
icebp
dec
clc
or
push
sub
test
sub
jp
add
jae
sub
clc
je
and
aam
or
and
lock
cmc
xor
xchg
xchg
je
cmp
fdivl
sub
push
pop
aas
cli
hlt
jp
stos
andb
call
or
sbb
mov
push
push
pop
std
aad
in
dec
repz
cwtl
insl
test
test
inc
arpl
fdiv
adc
sti
xchg
fmulp
xchg
shl
jl
ja
lock
jge
dec
push
cld
pop
inc
aam
adc
dec
adc
pop
mov
lock
int3
popf
xchg
test
dec
add
pop
xchg
mov
push
inc
gs
jle
jl
js
xor
lock
test
incl
sbb
test
mov
test
jmp
fnstenv
lock
add
xchg
cltd
fsubl
sub
lods
sahf
push
pushf
fdivrs
push
sahf
aas
aam
xlat
jge
sub
pop
or
add
dec
mov
cmp
repnz
jnp
push
daa
push
add
bsr
inc
loopne
rorl
mov
cwtl
aas
and
rorb
lret
push
rcrb
les
fwait
xor
add
push
adc
add
lock
sub
jnp
inc
cld
invd
adc
pop
or
xor
pusha
loopne
fidivrs
push
push
pop
ljmp
ja
scas
into
add
lahf
adc
dec
rcr
call
mov
push
pop
insb
ljmp
and
xchg
jnp
cld
mov
cmp
lock
or
je
aaa
int3
stos
jo
in
nop
hlt
jg
add
push
sarb
push
iret
js
mov
mov
pop
or
xchg
shlb
iret
mov
dec
shlb
sbb
in
mov
fistl
cmp
lret
cmpb
jge
lods
in
mov
ja
jo
popa
xchg
adc
or
cwtl
mov
jne
daa
fistps
inc
lock
and
aaa
sbb
cmpsb
adc
scas
aam
inc
clc
fdiv
out
add
call
jae
inc
in
push
js
jge
subps
loop
in
add
add
test
mov
es
lock
add
jae
mov
lock
jl
xchg
out
add
test
push
stc
inc
sbb
adc
enter
jo
nop
add
mov
and
push
lock
sbb
gs
arpl
test
sub
or
clc
es
or
pop
pop
sti
cmp
inc
pop
jae
cmp
loope
fs
mov
sarb
jg
lret
aam
mov
pushf
lock
push
mov
icebp
aas
addb
mov
into
hlt
xchg
sub
add
insb
jo
xor
aas
cmp
test
pop
xchg
mov
sbb
test
inc
sub
xchg
sub
ret
sbbb
mov
fdiv
test
lea
lock
add
lret
out
lock
mov
lcall
dec
int3
lahf
jecxz
loopne
icebp
pop
setne
adcl
push
rolb
test
popa
enter
shl
in
mov
clc
imul
in
lods
mov
fdivs
pop
cltd
test
adc
fisubrs
push
lock
sti
adc
lock
out
stos
icebp
mov
popf
movsb
fdiv
pop
ret
daa
lock
inc
mov
lock
aam
fidivl
mov
fcmovne
rdmsr
push
xchg
mov
xor
cmp
jl
lock
fadds
cwtl
insb
lods
sbb
xor
lock
mov
ret
lock
popf
dec
mov
ljmp
lock
jmp
scas
in
icebp
test
ret
sbb
cmp
pop
jge
and
cwtl
lock
push
xor
push
gs
dec
lock
mov
push
or
sbb
pop
enter
mov
pop
xchg
push
and
test
push
mov
mov
into
cmp
add
lahf
daa
je
icebp
pop
icebp
sbb
lcall
mov
xchg
push
push
add
lock
ret
movsl
mov
xchg
cs
xlat
orb
dec
xchg
rolb
es
push
mov
pushl
xchg
cltd
lock
jg
lcall
hlt
ss
lock
pop
xorb
xchg
das
int
lock
mov
nopl
xchg
or
jmp
pop
bound
icebp
out
dec
adc
mov
inc
or
or
imul
add
icebp
pop
rcr
fwait
mov
gs
and
inc
sbb
scas
jo
mov
mov
clc
nop
push
jl
lock
test
lods
repnz
push
in
es
pop
lock
je
fisubs
sub
add
xchg
push
sar
adc
lds
shrb
hlt
dec
lock
xchg
mov
mov
xchg
dec
insb
lds
lock
mov
xchg
cmp
bnd
je
inc
addb
in
mov
jl
jmp
add
xor
or
rorl
dec
xchg
lock
sub
mov
popl
lock
add
arpl
test
out
ret
jns
lock
lock
add
stc
xchg
lds
mov
jbe
lock
jne
ficompl
movsb
jo
xor
loop
add
xor
adc
or
fistl
mov
mov
add
dec
jb
and
xchg
sub
lock
aad
pop
lock
cmp
add
xor
clc
inc
pusha
or
lock
dec
push
sbb
out
in
jae
fs
lock
bound
int
cwtl
or
out
cltd
call
lock
in
out
rcrl
lock
lret
and
mov
test
xchg
fisubrl
mov
cmc
lock
xchg
hlt
cmp
lock
in
shrb
lock
nop
push
pop
lcall
out
cmp
ljmp
mov
sbb
or
jne
in
mov
sub
lock
loop
icebp
push
cld
pusha
pop
mov
cmp
repnz
pop
lock
daa
out
inc
fs
mov
dec
lock
ss
adc
aaa
popf
leave
fsubr
jo
int3
cwtl
mov
push
and
push
pop
addr16
mov
xchg
stc
rcll
mov
pop
pop
ret
mov
icebp
stos
add
mov
orl
aad
ret
test
ret
sbb
icebp
fisubrs
in
out
sbb
cmp
xchg
lea
mov
or
pop
fsts
cwtd
fiadds
addr16
jo
mov
cmp
xor
iret
div
dec
enter
stc
aad
lock
xchg
in
jmp
rorb
mov
enter
sub
out
jl
mov
push
lock
std
jo
stos
lods
add
ret
and
push
aam
pushf
lock
mov
sbb
mov
bound
out
shl
test
add
mov
push
sbb
jae
dec
cmovo
sub
test
mov
addr16
pushf
loop
sbb
lock
xchg
and
sbb
movsb
sarb
js
stos
lock
cmp
lock
movsb
sub
test
lock
sbb
lock
jg
pop
leave
sbb
addr16
repz
stos
xchg
shll
add
movsb
and
lock
inc
add
push
outsb
jnp
mov
out
ss
add
jmp
dec
mov
push
mov
std
test
jns
adc
movsb
rclb
ja
or
addr16
sbb
adcl
cmpsl
dec
popf
lock
ljmp
movsl
inc
jo
jne
fs
lock
pushf
add
dec
movsl
lock
hlt
shll
icebp
orb
shr
mov
fwait
push
call
push
scas
iret
out
ja
inc
in
mov
fwait
mov
cmp
add
inc
in
inc
lock
push
xchg
sbb
rolb
repz
in
bound
and
rcr
fistpll
out
sub
xor
cmp
push
icebp
adc
mov
jl
ficompl
pop
repnz
pop
push
add
adc
mov
xor
ret
pop
gs
repz
lock
add
pusha
lahf
inc
mov
adc
cmp
stc
mov
xchg
and
mov
xor
stos
cmp
inc
imul
sti
xor
cmp
mov
in
cwtl
pop
dec
add
cmp
mov
test
enter
sarb
sbbb
rcrl
pop
icebp
cs
lock
inc
mov
ljmp
bound
and
cmp
lds
test
sbb
add
jmp
icebp
sbb
std
push
arpl
scas
call
stos
fwait
jb
sbb
sub
enter
xchg
call
mov
jns
icebp
fistpl
out
xchg
mov
insl
pop
mov
imul
xchg
ljmp
or
je
or
popf
push
fnstsw
push
lock
shlb
lock
and
mov
push
push
icebp
jns
aaa
subb
adc
lock
mov
shl
jecxz
add
mov
lock
jp
popa
cltd
inc
pop
dec
adc
fs
jo
push
psllq
cmp
xorb
mov
lock
movsl
ss
lods
cmpsb
shl
mov
clc
dec
pop
mov
lock
sbb
jnp
mov
mov
mov
dec
lock
lods
jge
imul
add
adc
lahf
mov
jno
jp
fisubrl
adc
movsb
mov
mov
xchg
lock
mov
pop
jg
stos
lock
push
ljmp
je
test
lock
lock
rcrl
fistl
test
cwtl
and
adc
test
jo
mov
into
push
jp
scas
cmp
movsb
jge
jo
imul
les
lret
aam
mov
imul
pushf
lock
cmpsb
mulb
sbb
dec
dec
adc
mov
xlat
movsb
lock
mov
movsl
sbb
fnstenv
scas
inc
lock
movsb
inc
xchg
test
lock
rorb
lock
stos
rorb
test
daa
scas
sbb
rcrb
lock
cmp
mov
lock
pop
les
sti
xor
sub
add
stos
icebp
add
ss
js
ss
mov
subl
movsb
lock
sbb
ficompl
clc
inc
test
cwtl
mov
adc
or
xor
shll
pop
lock
gs
jp
in
jmp
ljmp
clc
lcall
aaa
jle
popf
cmp
movsb
cwtl
call
pusha
sbb
movsl
fs
jbe
icebp
xchg
lcall
stos
sbb
in
ja
sub
mov
sub
mov
es
sub
fwait
clc
dec
shlb
js
js
lock
pop
cmp
inc
push
dec
movsl
push
dec
push
jg
mov
and
sbb
pop
add
notb
sbb
loop
and
mov
lock
stos
fnstsw
dec
adc
mov
lock
inc
cmpsb
push
or
xchg
jmp
jo
inc
fwait
jp
lock
inc
jecxz
lods
test
sub
fs
or
push
test
sbb
lock
mov
popf
lock
cmp
push
leave
pop
lock
call
mov
dec
xor
fs
push
jl
pop
mov
add
add
lock
push
movsb
lock
push
scas
aaa
into
jp
aam
sbbl
mov
mov
push
jl
sub
cwtl
lock
mov
icebp
xor
xor
or
sbb
add
lock
cs
ret
inc
lock
fstl
test
dec
and
sbb
cmp
inc
mov
pop
adc
pop
in
lret
mov
push
lods
or
lock
les
loop
out
pusha
or
pop
ds
xchg
mov
sbbb
add
mov
lock
inc
push
rolb
push
add
push
test
leave
lock
loopne
fsts
sahf
lock
xchg
lcall
cmp
lock
aad
pop
mov
lods
inc
dec
movsl
sub
ljmp
stos
sbb
push
push
out
jecxz
aam
repz
out
shlb
sub
jo
gs
fsubl
pop
lcall
push
mov
inc
fdiv
mov
mov
stc
adc
sub
adc
lock
pop
inc
mov
sbb
mov
out
mov
dec
mov
out
add
loop
lock
pop
out
lock
scas
icebp
out
xor
repz
orb
pushf
add
out
jg
xor
dec
pop
test
lea
loopne
lock
imul
lock
xor
jmp
inc
mov
dec
test
or
inc
mov
jo
lods
mov
lock
and
sub
xor
mov
adc
pop
lret
sub
sbbb
push
inc
ja
shlb
inc
test
cmp
and
add
lock
les
ret
adc
jb
sbb
push
lock
inc
call
adc
pop
popa
lock
or
cmp
jge
mov
jb
test
jo
sub
ja
inc
mov
dec
rcll
jl
test
jo
js
aas
sbb
push
lock
push
sahf
mov
mul
lock
cmp
cmc
lock
stc
inc
es
lcall
lock
mov
lock
pop
add
lock
add
xor
in
mov
jp
es
sub
dec
lret
lret
lock
rclb
or
lock
adc
push
dec
xlat
push
clc
test
lock
push
lods
sub
outsb
aaa
cmpb
ret
dec
iret
pop
jge
popl
jg
cli
ljmp
pop
in
in
jp
fwait
pop
xchg
mov
push
mov
fdivp
xchg
pop
mov
xor
pop
xchg
insb
hlt
inc
lock
inc
push
jl
and
mov
sahf
in
mov
mov
jecxz
jmp
dec
or
lock
xchg
jbe
mov
and
fwait
or
push
pop
jmp
shl
enter
les
fdivr
lock
imul
nop
stos
mov
xlat
dec
cmp
lock
pusha
sub
lock
fidivl
pop
push
and
lock
fbld
lock
jns
addr16
lock
add
dec
ja
lret
lock
mov
jl
shrb
mov
xor
mov
lock
pop
div
gs
mull
lock
stos
cmp
lods
lock
xor
adc
xchg
push
jo
shrl
cmp
je
fildl
mov
mov
add
mov
outsb
lock
insb
mov
sti
jp
push
mov
lock
push
dec
lock
jmp
pop
in
fsubs
rorb
lock
popa
mov
sub
adc
push
push
aaa
inc
mov
in
sbb
leave
or
push
clc
inc
sbb
xchg
inc
xchg
scas
cmp
jecxz
lods
imul
unpcklps
fistl
mov
xchg
jns
mov
xor
mov
cld
xor
push
sahf
push
mov
sbb
jg
cmp
pop
pop
sub
dec
push
rorb
adc
ret
test
mov
shl
jnp
je
mov
test
xchg
lock
cmp
insb
aad
push
lock
cmpsl
popf
and
bswap
pop
mov
in
or
xlat
or
loop
int
jo
dec
cmp
and
jl
push
jle
jo
cmp
and
mov
icebp
cmc
mov
adc
insl
push
lock
jge
xchg
lock
add
adc
popf
mov
test
cltd
loopne
push
or
in
test
mov
lahf
mov
movsb
mov
fsubr
lcall
pop
icebp
adc
pusha
jecxz
repnz
xchg
pop
add
cmc
adc
xor
cmp
and
adcb
out
pusha
inc
lock
popf
loop
push
sub
adc
add
mov
xchg
out
addr16
idiv
or
aad
mov
lock
test
je
rolb
dec
gs
divl
mov
sub
and
test
out
shlb
xlat
jno
mov
les
shl
psubd
or
jp
lock
dec
or
int
test
sub
out
xchg
push
cmpsl
push
lock
mov
add
jno
sahf
stc
insb
lock
ret
lahf
mov
pusha
cmp
jo
xchg
out
dec
push
add
stos
loop
lret
and
mov
adc
mov
add
lock
test
sbb
lock
les
popa
andb
sub
movsl
out
fisttps
iret
sahf
frstor
lahf
pop
or
cmp
pushf
ret
scas
mov
inc
jp
cwtl
mov
ja
fisttpl
cmp
xor
and
sarb
lock
dec
fmull
stos
lock
stc
or
lock
ret
lods
out
jbe
sub
imul
xchg
add
mov
lock
rorl
or
pshufw
cmp
adcl
stos
adc
pop
mov
cwtl
aas
cmp
idiv
inc
inc
pop
dec
and
lock
mov
aad
jno
lock
cmp
lock
inc
or
subl
jo
outsl
dec
rorb
dec
dec
mov
rorb
ja
ret
scas
js
jl
fcomip
pusha
or
loope
test
insb
cwtl
rclb
loopne
lret
xlat
lods
int
je
insb
or
repnz
cmp
xor
pop
lock
enter
mov
ja
xchg
cmp
test
lcall
jae
loop
and
sub
lock
pop
xchg
dec
insb
lods
sbb
out
push
jg
xchg
xchg
imulb
jbe
xor
sbb
dec
shlb
mov
push
stos
and
ret
sub
out
shlb
dec
mov
sbb
adc
arpl
aad
lock
or
add
push
repz
mov
jp
cmp
popl
fs
pop
inc
xchg
aas
xlat
push
mov
ljmp
div
mov
inc
insb
mov
das
pop
inc
or
xchg
pusha
fchs
lock
repz
mov
aas
xor
out
mov
prefetchw
popf
shl
and
repnz
icebp
jo
fs
dec
cmp
jno
cmp
int
insb
jo
pop
scas
cmp
out
pop
sub
aad
pusha
push
pop
cmpsb
adc
or
mov
xorb
push
or
mov
and
enter
sub
rorl
mov
push
jge
mov
pop
inc
pop
cmpsb
enter
adc
xor
lock
out
test
lock
test
mov
lock
in
mov
sbb
dec
movsl
cmpsl
lock
add
xchg
nop/reserved
lds
cmp
lcall
sub
fisubrl
into
gs
mov
pop
mov
cltd
mov
ss
lods
data16
pop
stc
out
pop
xchg
sbb
addr16
inc
lock
loop
aad
cmp
mov
fadds
and
mov
push
lock
inc
lock
mov
cwtl
or
lcall
adc
sbb
mov
lock
or
mov
mov
sar
std
sub
pop
cwtl
adc
cmp
jne
dec
bsr
push
mov
clc
jae
jl
rcrl
lock
push
and
bound
lock
in
in
aas
dec
pop
movsl
push
cmpsl
mov
jp
sub
jle
jns
lock
xlat
inc
inc
pop
mov
rolb
dec
rorl
lcall
jae
xchg
xchg
xchg
push
pushf
sbb
divps
repz
cwtl
pop
pop
sub
rcrb
in
jne
xor
and
lret
test
xchg
pushf
int
shll
push
push
std
or
and
mov
lock
test
fdivl
imul
das
fs
test
repz
enter
femms
incb
arpl
lock
lea
icebp
jl
in
push
push
pusha
cmp
repz
andb
jle
lock
call
pop
popf
lock
push
icebp
cmc
sti
mov
mulb
pushf
fs
sarb
lock
arpl
lds
loop
mov
lods
inc
lock
push
aas
sahf
fldt
pop
lock
int3
addr16
and
ja
lock
mov
push
stos
pushf
dec
add
fcmovb
loop
lock
arpl
mov
sbb
add
xchg
pushf
shll
jo
sbb
xchg
jl
xor
bound
and
inc
xchg
xor
jo
cmpsb
ljmp
lahf
or
xchg
in
adc
lock
jnp
adc
add
js
movsb
lock
and
cli
loop
icebp
std
dec
mov
jbe
pop
in
cs
add
pop
nop
add
or
cmp
push
lock
inc
andb
pop
cmp
mov
jg
and
or
notl
xor
ja
add
icebp
movsl
sub
push
in
xor
lock
popa
jno
jmp
in
stos
fnstenv
nop
pusha
push
icebp
iret
repz
or
dec
pop
jo
movsb
daa
loop
aaa
jl
sbb
adc
mov
xor
jo
push
or
mov
sub
sbb
jae
push
loop
psrad
inc
mov
sbb
movsb
xor
xor
dec
add
xlat
stos
call
pusha
rorb
cltd
push
adc
xor
mov
and
pop
es
lock
lods
cmpsl
inc
mov
add
mov
cs
dec
adc
jo
add
addr16
or
mov
bound
ret
clc
ljmp
dec
lock
std
push
data16
jo
push
addb
mov
xor
mov
movsb
loopne
jno
cmpsb
or
shlb
mov
inc
lret
fcomp
dec
loop
lock
sbb
or
movsb
outsb
lock
sbb
jnp
icebp
aad
sbb
ret
mov
mov
out
das
clc
mov
jns
xor
jle
imul
cmp
loop
mov
pop
fbstp
sbb
mov
gs
addb
mov
add
sub
push
dec
jbe
xor
idiv
xchg
pop
lock
movsl
or
lock
popf
dec
add
jmp
add
mov
adc
push
dec
jo
test
insl
ds
lock
movsb
sbb
stos
cmp
movsl
jle
push
mov
out
dec
jae
or
aam
arpl
mov
jecxz
adc
aam
push
mov
in
add
jle
lahf
and
aas
mov
ds
lock
and
dec
pop
mov
fnstsw
pop
add
xchg
xchg
sub
mov
xor
jo
gs
push
bound
xchg
inc
or
xchg
lea
aad
or
mov
lock
out
divl
cmp
sub
jns
lock
jmp
mul
cli
icebp
mov
mov
in
add
repz
call
sbb
push
clc
int3
aaa
xorb
cmc
dec
lock
cmp
mov
fcomps
scas
add
jmp
paddq
and
scas
rorb
std
cmc
mov
arpl
add
filds
js
sahf
icebp
movsb
push
lock
stos
movl
sbb
jne
lock
dec
iret
jg
mov
mov
movsl
add
lock
or
xchg
mov
sbb
pushf
les
test
add
push
lds
sbb
push
ficoml
push
mov
dec
inc
arpl
jge
xor
sbb
adc
fistl
lock
xor
stc
jge
push
repz
je
sbb
pop
pop
ja
in
pop
mov
ljmp
sub
into
cli
enter
mov
sbb
lock
shl
jbe
frstor
test
add
xor
outsb
lock
jnp
ret
mov
inc
fwait
sahf
test
repz
rorb
pushf
jmp
out
cmp
xchg
mov
pop
lahf
push
test
in
test
inc
lcall
test
mov
pop
mov
or
loopne
imul
inc
and
push
mov
xchg
test
push
mov
clc
sub
ljmp
pop
in
vmptrld
bound
orb
xor
ret
adc
arpl
cmp
adc
inc
sub
lock
int3
fmuls
call
adc
stos
cltd
pushf
lock
loope
repz
stos
xlat
push
lock
pop
decb
lock
movsb
xor
fiadds
inc
mov
push
aam
bt
jo
mov
enter
lock
pop
mov
loop
cli
sbb
lock
repz
fs
dec
pop
repnz
iret
jae
std
notl
jl
popa
call
dec
push
icebp
or
stc
jo
push
xor
mov
js
jo
pop
inc
sub
jmp
adc
lock
dec
dec
loop
idivl
clc
dec
mov
and
aam
and
inc
inc
pop
out
lock
jmp
ret
sti
stc
adc
iret
push
mov
or
js
in
cmp
jnp
push
add
bnd
repz
push
push
out
shll
adc
xrelease
push
daa
push
fcoml
fucomi
sub
jg
mov
or
cmp
sub
push
lock
ds
outsl
lock
pop
ret
mov
lock
scas
hlt
mov
push
test
in
mov
lock
insl
cs
fwait
and
loopne
dec
popa
inc
or
sbb
adcl
pminsw
xchg
rcr
fs
jnp
or
mov
lock
lock
inc
lock
bound
mov
xchg
push
sbbb
push
xchg
push
mov
lock
mov
mov
sbb
adc
icebp
inc
dec
sarb
push
pushf
and
xchg
push
sub
mov
das
inc
cmovne
cwtl
adc
xlat
inc
push
dec
lock
inc
push
inc
mov
inc
lock
je
mov
push
jp
lock
mov
mov
mov
inc
test
lods
add
or
aad
mov
lock
int
adcb
imul
xchg
sti
out
fisubrl
sbb
outsl
pop
cs
and
pop
jb
out
lock
inc
data16
ljmp
notb
add
bnd
pushf
add
inc
incl
xor
xchg
xor
bound
outsl
mov
mov
testl
pop
lock
inc
int
mov
lock
sar
push
mov
xor
std
lock
fstpt
sbb
or
mov
push
call
xor
out
bnd
jno
sbb
inc
lret
adcb
call
loope
es
jne
mov
nop
jnp
inc
adc
bt
jecxz
push
mov
mov
mov
loope
mov
test
add
push
sub
and
push
icebp
cwtl
lock
jns
cld
pushl
push
dec
mov
mov
push
loopne
xchg
sub
lock
popl
pop
mov
lock
dec
pop
push
lock
iret
arpl
je
cmp
push
mov
cmp
lcall
push
mov
or
addr16
inc
mov
or
xchg
arpl
mov
out
or
nop
mov
xchg
push
test
xchg
pop
pusha
repnz
lock
mov
shr
lock
call
push
test
iret
test
add
lock
mov
lock
jl
test
mov
lock
adcb
mov
adcb
hlt
cmp
fs
mov
jge
mov
sbb
adc
inc
mov
in
mov
pusha
pcmpgtb
pop
or
cld
jg
fstpt
xor
inc
sahf
inc
mov
fxtract
mov
mov
lods
xor
jl
movsb
xchg
bound
push
xor
xchg
gs
lock
shll
jmp
xor
in
sbb
pusha
cmp
test
test
nop
push
xchg
xlat
loopne
repz
shll
lock
jge
movsb
sub
lock
out
cs
jge
mov
lock
bound
jg
lock
aad
mov
lock
scas
sarl
test
mov
cld
clc
inc
out
lock
adc
add
mov
push
mov
lock
rep
subb
loopne
imul
and
js
xchg
jno
loopne
mov
lock
sti
cmpsb
mov
lock
pushf
lcall
clc
adc
rcll
int3
mov
test
fs
mov
sti
nop
add
sbb
icebp
faddl
mov
adc
cmp
sub
pop
sbb
xchg
clc
lock
or
movsb
call
and
dec
push
out
test
sbb
lock
mov
lock
stos
leave
in
add
sbb
mov
fdiv
dec
push
xlat
test
into
jl
push
add
movaps
jno
or
pusha
stos
movsl
cmc
or
xchg
mov
das
inc
and
movsb
or
lods
xor
fs
and
clc
and
gs
lahf
or
lock
stos
popf
push
mov
push
inc
xor
cwtl
rcll
mov
test
aam
lock
enter
add
stos
sti
cmp
push
movl
jg
lock
ret
sbb
lock
sub
lock
lcall
push
cmpsl
xchg
inc
sbb
scas
repnz
push
mov
pushf
repz
push
jbe
rol
sarl
js
test
jl
xor
movsb
shl
hlt
inc
fisttpl
fidivs
in
nop
aad
adc
stos
jmp
cmp
lock
cmp
stos
sarl
lock
fs
ds
push
cmpsb
cmpsl
repnz
not
pushf
xchg
xchg
sar
and
arpl
lock
gs
and
jl
lock
jns
cmpsl
xor
adc
sbb
into
mull
mov
push
lock
jecxz
xchg
lock
or
icebp
jno
xchg
sbb
stos
xor
mov
es
mov
xchg
xchg
shl
adc
stos
test
push
add
in
lock
test
jnp
lock
mov
shl
jle
inc
ja
inc
jl
repnz
lret
lock
push
fsubrl
sbb
lock
jno
repz
add
mov
lock
xorb
dec
je
add
fistps
mov
sub
fs
icebp
lock
mov
xor
or
cmp
jo
in
mov
mov
icebp
aas
aaa
icebp
sbb
pop
clc
lret
gs
insb
imul
mov
fwait
inc
cli
pop
xor
stc
pop
xchg
mov
mov
sbb
repz
push
push
icebp
inc
sbb
cmpsb
movsb
lock
mov
test
lock
movsl
xchg
xor
cmp
aad
pop
and
cmp
cmp
sbb
jb
or
movsl
rcrb
lock
movsb
dec
push
lcall
sub
push
add
cmp
xor
lock
mov
push
sbb
xchg
pushf
dec
mov
jae
movsl
ja
jp
adc
xor
dec
add
dec
icebp
stc
scas
and
mov
into
aas
lock
add
sub
pushf
inc
fwait
lods
push
and
punpcklbw
lcall
sub
movsl
sahf
push
pop
inc
int3
arpl
lock
int
jecxz
sub
push
fs
aaa
mov
sti
or
add
xor
inc
test
cld
xchg
pop
movsb
icebp
jge
test
clc
jg
repz
pop
cmp
shl
call
stc
aas
dec
jl
test
mov
push
mov
lock
out
xor
lgs
inc
les
rolb
jns
icebp
mov
jecxz
inc
loope
jl
pushf
popa
out
notl
mov
js
xorb
dec
mov
xor
fcomps
arpl
nop
push
stos
xchg
mov
sub
push
sub
roll
call
lock
outsl
call
xchg
dec
push
dec
lock
xor
cmp
mov
aad
mov
lock
or
inc
push
lahf
mov
xchg
lock
sar
icebp
sub
dec
mov
pop
mov
jle
push
addr16
push
or
jl
inc
lock
gs
and
dec
jbe
mov
pop
sub
jns
leave
mov
icebp
jg
or
mov
mov
imul
and
mov
add
inc
mov
jl
and
int
pop
xor
lock
call
adc
xchg
sbb
mov
lock
inc
js
lock
adc
lock
jge
ja
jne
data16
imul
dec
sbb
in
repz
inc
loop
adc
or
lock
or
movsl
ljmp
sbb
pop
jne
in
insb
dec
fwait
shr
lock
push
stos
adc
and
xchg
sarb
and
xor
dec
pusha
mov
push
lock
test
lock
lods
aaa
adc
leave
popf
test
jo
xchg
test
cli
lock
gs
ret
lret
dec
icebp
loopne
pop
je
addl
test
ljmp
mov
push
push
xchg
js
xlat
fsts
adcl
lock
jno
pushf
and
lock
sbb
lock
test
mov
dec
pop
xchg
push
fs
bound
add
repnz
dec
in
sbb
mov
sbb
sub
jbe
sub
nop
jno
add
cmp
pop
in
mov
jae
mov
pop
adc
sub
xchg
lock
xchg
jmp
icebp
jo
repz
fsin
xorb
xchg
mov
shl
lock
and
movsl
pop
adc
cmp
push
jne
and
mov
push
ja
arpl
cmp
repz
or
clc
mov
cmp
adcl
cmp
push
mov
add
mov
or
adc
mov
pop
cmp
or
cwtl
rcrb
pop
movsb
add
sbb
sub
data16
and
lock
scas
mov
lock
mov
iret
ljmp
push
sahf
fcomip
cwtl
lock
inc
xchg
jmp
pop
pop
lock
pop
ja
out
dec
jns
lock
lods
push
lock
xor
sarb
cmp
lock
popa
or
pop
lock
lods
mov
lock
or
xor
xor
icebp
hlt
shrl
clc
pop
mov
leave
cmp
sbb
je
lock
gs
repnz
add
xor
in
out
fwait
xchg
add
sahf
imul
or
jo
jg
outsb
mov
push
ljmp
daa
or
pop
das
add
cmpb
loopne
xchg
sub
pop
or
jp
loop
aaa
mov
jo
inc
and
ficoms
aaa
fisttpl
pop
lea
dec
shrb
pop
push
shl
imul
pushf
jo
sbb
fwait
lock
test
push
lahf
mov
lock
pop
adc
lods
mov
jmp
movsb
lock
dec
cmp
or
jp
or
jmp
lock
dec
rcr
push
pop
je
out
into
adc
fwait
mov
cmp
xor
push
lock
addr16
pop
lock
outsb
mov
pop
fidivl
lock
in
sub
inc
cltd
test
lock
mov
jl
mov
int
mov
dec
or
mov
shlb
xchg
je
ds
lock
pop
test
and
push
mov
sarl
push
popa
adc
shll
mov
inc
clc
dec
lds
sub
adc
lock
add
stos
adc
mov
leave
cvtpi2ps
mov
sbb
pusha
mov
jo
push
mov
mov
fmuls
test
popf
je
and
in
out
cli
mov
inc
add
jl
adc
pop
pop
icebp
mov
cld
das
fdivp
xchg
xchg
mov
in
movsl
jnp
lock
dec
lock
and
mov
dec
xchg
or
pusha
inc
pxor
test
rcll
or
pop
jmp
jne
and
pop
in
or
xchg
mov
cmp
pop
push
shl
add
mov
fisttpl
pop
vunpcklps
xor
shl
sbb
cmp
test
cmp
clc
test
sub
pop
shlb
scas
pushf
in
or
sub
xchg
daa
lock
dec
mov
lock
xchg
nopl
sub
mov
pop
lret
aam
sub
lock
cld
or
in
xor
jmp
ljmp
sahf
sbb
adc
out
mov
loopne
mov
xor
lock
sbb
push
pushf
movsl
aaa
xchg
pop
jo
cmp
sarb
sub
cld
mov
fwait
nop
mov
lock
test
push
cltd
inc
jbe
lock
dec
stos
mov
push
sbb
adc
jge
ja
out
lock
adc
pop
repz
adc
xchg
rclb
fcoml
lods
in
xlat
add
mov
inc
push
push
jo
aad
lock
mov
icebp
adc
or
in
pushf
dec
psrld
out
or
push
aad
insl
pop
push
repnz
pusha
lock
testl
and
sarb
xchg
xor
dec
lock
adc
pop
lret
mov
test
repnz
mov
popf
call
add
loope
repz
rorb
lock
in
nop
mov
lock
sub
jge
lock
adc
popf
cltd
xchg
lock
jge
dec
mov
pop
mov
xchg
nop
dec
add
aam
adc
and
imul
lock
sub
cld
add
add
iret
fdiv
insb
lock
add
push
lock
dec
or
or
xor
or
lock
cmp
incl
mov
lock
insb
rorl
lcall
push
in
pop
lock
xlat
jne
scas
dec
jecxz
movsb
cld
add
inc
push
lds
jae
dec
clc
adc
pop
aas
out
setns
adc
mov
lock
pop
mov
cli
push
icebp
mov
jb
dec
popa
push
in
mov
lock
jp
mov
lock
leave
aam
ja
fldenv
xor
mov
mov
les
mov
fs
jne
ja
lock
push
sbbl
sub
adc
lock
mov
sub
or
popa
fildll
in
push
xor
leave
repz
enter
nopl
cmc
popf
movb
mov
dec
add
dec
addr16
jb
nop
adc
cmc
or
loop
jo
test
pop
orb
or
xchg
mov
addr16
lods
xchg
lock
out
inc
dec
jg
out
push
mov
pop
test
sar
cmp
lock
stos
stos
fcoms
int3
lock
adc
les
ja
sti
ret
mov
mov
in
xor
test
maskmovq
notl
js
dec
std
lock
lahf
test
lock
and
cmp
pop
push
lock
adc
push
sub
loope
xor
in
xchg
test
mov
std
push
or
gs
hlt
mov
lock
mov
jae
jl
rcll
mov
stos
cmp
stos
jl
out
fmull
shlb
cli
into
lret
das
sbb
movsb
mov
or
mov
mov
push
gs
bswap
sub
lret
aam
icebp
mov
out
or
pop
mov
mov
cmp
bound
icebp
xchg
scas
into
jecxz
outsb
aam
cmp
cs
mov
je
repz
lock
imulb
inc
sahf
inc
mov
add
shll
push
mov
insl
scas
stos
sub
inc
sbb
jo
mov
inc
repz
hlt
out
sub
jae
pusha
add
xchg
sbb
inc
call
fwait
add
and
xchg
pusha
daa
and
ret
push
je
mov
int
notb
out
mov
xor
aas
int3
cmp
add
repz
in
or
loop
jmp
xchg
imul
test
xor
push
add
scas
xor
lock
inc
lock
adc
and
jecxz
inc
cmp
out
lock
sbb
sub
inc
lea
scas
into
call
imul
std
jno
mov
push
push
out
inc
mov
nop
and
cmp
cli
cld
inc
sbb
cmovno
cmp
inc
pop
or
lock
sbb
mov
add
cwtl
mov
push
test
out
sarb
push
je
loopne
std
lock
nop
or
clc
mov
pop
inc
cmpsl
jl
add
or
call
or
xor
lret
mov
daa
mov
push
jb
mov
lock
pop
mov
push
mov
jecxz
jbe
dec
xor
les
psrlw
in
iret
and
push
xor
lock
repz
lock
addb
pop
xlat
es
aaa
dec
lock
cmp
aam
push
cs
and
repnz
shl
xchg
das
movsb
lret
test
cmp
inc
rclb
sub
stos
lock
divb
xor
mov
mov
jbe
pop
inc
fstpl
and
int3
mov
lock
xor
xchg
ja
setl
imul
jo
dec
lock
xchg
and
lods
cmp
xchg
mov
out
lock
mov
push
mov
xor
je
popf
cmp
mov
pop
icebp
in
sub
fldenv
adc
test
call
push
adcl
mov
add
loopne
xor
in
lock
and
lahf
pop
lock
in
enter
jo
out
cmp
in
bound
cwtl
sbb
cli
insb
xlat
lock
mov
mov
mov
jns
sbb
fwait
dec
ljmp
cmp
push
test
shlb
aad
mov
icebp
je
addr16
mov
leave
pop
sub
js
rcr
lret
lock
or
out
fdiv
adc
cmp
sub
shll
scas
push
test
mov
push
mov
xor
shll
mov
mov
inc
lods
fildll
xchg
in
mov
aam
dec
pop
inc
sbb
lock
jbe
push
cmp
jo
stc
add
lock
fisubrs
lds
daa
movsl
lock
cmp
sbb
and
in
gs
hlt
add
adc
les
push
inc
lcall
push
bswap
cmp
ljmp
lock
jnp
pop
lock
dec
sbb
cmp
and
lock
and
cwtl
mov
jo
or
stos
sbb
cld
xor
nop
sti
lret
jle
push
jae
cmp
fwait
mov
test
add
jns
icebp
lock
orl
pusha
leave
jae
push
shl
add
lock
adc
inc
iret
movsl
lock
popf
push
movsl
hlt
mov
loope
js
push
outsb
inc
jo
and
mov
je
mov
lea
repz
fdivs
mov
pop
cpuid
push
xor
sub
pop
mov
outsl
repz
add
ret
scas
push
jo
and
fidivrs
mov
mov
ja
adc
aad
add
push
adc
xchg
lock
ja
cs
lock
push
lock
roll
clc
lock
sbb
shl
or
push
icebp
and
adcb
arpl
push
or
xor
mov
pop
inc
jo
stos
inc
stc
mov
adc
lock
xor
push
popf
sub
mov
nop
rcrb
mov
and
jne
lock
xchg
add
mov
lock
inc
imul
je
mov
mov
repnz
adc
test
repz
les
ds
adc
pop
test
lock
xchg
shr
jge
push
dec
mov
flds
cwtl
xlat
lock
stos
inc
ja
out
lds
and
inc
setg
or
clc
add
push
pop
lock
mov
scas
mov
sbb
lds
push
and
inc
and
lock
mov
jg
jle
dec
addr16
popa
mov
enter
fisubl
adc
add
rolb
sub
lock
mov
or
dec
or
inc
lock
mov
sbb
lret
add
outsb
jns
adc
sbb
add
cmp
mov
es
ljmp
sub
adc
and
xchg
jo
imul
lock
repz
ror
lock
popf
jns
add
lock
push
test
xor
sbb
inc
cli
lock
add
pop
inc
pop
lock
mov
or
std
lock
push
lods
inc
and
lock
test
sti
rclb
pop
lock
test
outsb
pop
lods
sbb
pop
cli
cmp
pop
imul
fdivrp
jge
push
insb
inc
or
xchg
cmp
adc
shl
push
xor
into
lock
mov
in
lret
lock
scas
pop
sbb
shl
mov
dec
jno
dec
repnz
jno
lock
lods
lcall
scas
out
aad
xlat
jo
pop
stos
add
addr16
shl
bound
inc
adc
cmp
add
aam
lock
aas
and
jo
sbb
lock
xorb
lcall
jne
push
sbb
ret
add
cld
xchg
dec
lock
pusha
test
mov
adc
xor
jecxz
push
pop
test
sub
xor
test
mov
scas
orl
cmp
pop
jle
lret
lock
fcmovnb
mov
stos
bound
push
fwait
rorl
or
lods
addr16
adc
dec
lock
mov
std
lods
lock
xchg
daa
jbe
or
test
out
pop
pop
jge
mov
shlb
sbb
faddl
add
outsb
loopne
mov
inc
lcall
xchg
push
push
adc
jo
setge
jne
les
icebp
inc
fcompl
mov
cmpsb
lock
scas
lock
cmp
mov
push
iret
movsb
jecxz
pushl
les
rcll
push
and
fisttpll
xchg
dec
lock
shl
or
push
fs
xlat
pushf
fdivs
dec
jbe
repz
sahf
fildll
lock
dec
mov
xor
in
stos
inc
aad
jo
lret
xchg
lock
mov
rcr
sbb
push
nop
cmpsl
mov
loopne
icebp
js
shrb
xchg
movsb
lock
lds
shl
and
fbstp
and
push
sub
loopne
mov
adc
lock
iret
call
and
gs
js
inc
movsb
movsl
sbb
lock
dec
push
fwait
lock
lock
movsb
lcall
inc
int
dec
mov
xor
cmp
sub
rcrb
or
mov
in
mulb
sub
inc
pop
fldcw
arpl
lock
mov
insl
std
lock
addr16
push
xor
pusha
aas
loopne
lock
ljmp
mov
fstpl
jmp
lock
push
or
lock
sbb
fdiv
movsb
scas
icebp
int3
in
ds
push
jae
xor
push
shrl
adc
sbb
imul
jmp
mov
inc
in
sbb
mov
mov
xchg
mov
inc
mov
lock
movsl
test
lock
rol
mov
movsb
dec
mov
xor
ror
xchg
sbb
maxps
mov
in
sub
adc
pop
xor
dec
jo
xchg
add
fwait
xlat
add
inc
lock
fnstcw
fdiv
or
jno
aas
jl
and
sub
movsb
add
repz
xor
aad
in
enter
lock
insb
and
bound
les
push
movsb
mov
ljmp
mov
add
movsl
push
stos
xor
mov
daa
lock
int
xchg
xchg
jge
aaa
nop
cmpsb
cmpsl
in
mov
lock
ret
test
pop
lock
push
loopne
push
popf
and
sbb
xchg
push
arpl
daa
fwait
adc
ret
test
mov
int3
icebp
and
ret
add
leave
lods
mov
jae
mov
jle
jg
stos
out
add
fdiv
mov
push
jne
jge
lock
mov
or
xchg
test
cld
xor
pop
sub
sub
cmp
mov
jb
aam
push
or
arpl
adc
mov
jnp
mov
sbb
jno
cli
in
repz
shll
and
movsb
rorb
nop
adcb
lock
mov
mov
out
je
pop
xor
stos
pop
cmp
lods
lock
imul
cmp
fldt
xor
adc
stos
lcall
mov
loopne
sti
lock
add
add
xchg
jb
push
leave
sahf
loop
icebp
call
addr16
jno
repz
mov
lock
in
sub
repz
push
shll
cwtl
pusha
movsb
shl
add
lods
sub
mov
jecxz
adc
out
dec
xor
mov
das
in
rolb
add
mov
inc
bound
lock
dec
pop
andl
xchg
or
lods
clc
test
lods
add
xor
int
shr
lea
lcall
inc
pop
jnp
mov
vmovsldup
and
leave
cmpsb
lock
dec
movsb
fidivrs
setae
sbb
pop
add
repz
dec
sub
pop
lock
lret
clc
sub
les
dec
mov
lock
adc
mov
movsb
jns
insl
in
test
cltd
sbb
sub
push
mov
add
out
fistpll
jo
xchg
lock
icebp
fs
imul
adc
add
stos
inc
xchg
cmp
int3
cmpb
cwtl
push
lock
fmul
mov
dec
outsb
cmp
push
mov
jo
mov
loop
lock
inc
jnp
xor
jnp
lock
in
inc
out
cwtl
fs
loop
icebp
mov
add
dec
into
or
mov
or
repnz
fisttps
and
nop
xchg
cmp
aam
pop
sbb
mov
lock
jb
dec
into
inc
jns
xchg
icebp
int3
mov
inc
pop
insb
out
cmpsb
mov
add
mov
jle
mov
and
mov
push
jno
push
xchg
test
out
mov
repnz
cwtl
data16
lock
mov
icebp
in
repnz
inc
lahf
js
loopne
lods
lock
mov
or
mov
pop
push
out
in
add
clc
mov
sbbb
inc
data16
js
test
fxch
sbb
lock
adcl
cld
xchg
jbe
adc
dec
stos
push
sbb
mov
or
into
jecxz
ficompl
in
pop
xor
fldt
enter
lock
mov
jns
ljmp
arpl
sbb
shl
mov
daa
stos
mov
js
mov
leave
lock
mov
adc
lock
push
in
mov
imul
add
or
or
xchg
add
test
or
shlb
lret
pusha
inc
inc
mulb
xor
lock
gs
bnd
call
jo
add
push
imulb
leave
lret
dec
in
xor
pop
cmp
lahf
jg
fdiv
xchg
sbb
add
nop
f2xm1
xor
adc
loop
jge
loopne
xor
sbb
std
jo
outsl
fs
adc
mov
lock
lods
lahf
jge
xor
push
xor
mov
add
lock
insl
pop
lock
je
push
sub
std
mulb
xor
jo
and
es
jno
jbe
rcr
lock
xchg
xchg
push
inc
inc
lock
sub
xchg
lock
sub
jne
sbb
pop
es
loope
lock
push
sub
data16
lock
mov
je
loopne
lock
cmp
hlt
and
mov
sbb
xchg
or
lahf
cld
xor
filds
shlb
mov
add
xchg
pop
add
inc
icebp
popa
es
xor
cmpsb
or
jecxz
or
sbb
nop
inc
adc
sbb
test
sub
or
cmpsb
sub
and
xchg
jo
icebp
ds
sti
out
loop
xchg
lea
loope
enter
icebp
cmp
xchg
in
call
mov
ss
lcall
ja
std
push
pop
cmp
cmpsb
stc
mov
xchg
lock
cld
push
adc
les
or
mov
scas
test
mov
loop
lock
cmp
loope
or
mov
jns
mov
js
outsb
adc
iret
enter
test
lock
adc
and
psraw
dec
dec
cmpsl
sbb
lock
ss
in
push
jg
aam
pop
lahf
xor
lock
inc
jae
lods
je
aaa
dec
push
mov
fwait
cmpsb
dec
mov
es
mov
lahf
pop
ja
xor
pop
xchg
add
stos
xchg
mov
dec
jo
in
mov
adc
mov
jb
mov
leave
cvtps2pd
shrb
push
lock
sbb
icebp
insb
jns
xor
outsl
movsb
lock
pop
and
pop
sub
repnz
or
xor
insb
lock
pop
les
push
aaa
push
andl
xchg
xchg
les
popf
into
dec
aaa
aas
cmp
add
pop
lock
xlat
iret
inc
lods
addr16
sub
aas
daa
push
lock
lock
lea
xor
mov
movsb
lock
cmp
mov
dec
test
nop
loopne
mov
inc
lock
adc
lock
cmpsb
les
sbb
or
lock
int3
shll
sub
or
mov
mov
out
outsl
mov
lods
js
mov
xor
mov
add
mov
add
adc
popa
push
lret
ljmp
xor
enter
lock
sub
or
mov
fsubrl
cmp
jo
rcrb
stos
stos
ret
fsubrl
inc
mov
sbb
mov
xor
ds
dec
push
jmp
mov
inc
mov
mov
or
in
add
cmpsb
push
mov
pop
sbb
repnz
mov
mov
movsl
sub
sub
lock
out
js
xor
dec
push
lock
les
push
hlt
lea
sub
lock
pop
or
stos
test
ret
aam
inc
repz
jb
int
cwtl
jnp
imul
and
fists
hlt
andl
mov
mov
fwait
xor
stos
xchg
jno
les
jg
repz
mov
loop
mov
movsl
or
addb
push
out
adc
cmp
loopne
stos
arpl
icebp
loop
pop
cmp
enter
shl
cli
fidivs
pop
imul
movsl
jg
lcall
pop
stos
push
push
jns
push
imul
lock
movsb
dec
or
sbbb
movsl
xchg
mov
push
mov
loopne
push
jno
xchg
sub
test
push
jo
dec
fldt
lock
push
mov
into
lock
loope
stc
mov
std
pop
adc
rorl
dec
mov
mov
popf
loopne
xlat
lock
mov
pushf
xor
ss
adc
mov
pop
nop
sets
leave
xor
test
cmpsl
das
int
aad
fs
lods
xchg
out
testb
jg
mov
cmpsl
pushf
mov
movups
mov
into
mov
or
jno
xor
out
xor
or
mov
sbb
addr16
xor
test
pop
outsl
and
call
lea
int
test
cmp
lock
pop
mov
xor
inc
lock
scas
fisttpl
enter
jmp
mov
or
pusha
pushf
aam
jne
adc
push
addr16
sub
test
add
mov
out
jae
cmp
mov
pushf
repz
push
sub
xor
shrl
fstpl
rcl
fmuls
lock
and
lock
fsubrl
int3
lock
stos
clc
imul
mov
inc
xchg
inc
lock
fs
jle
lock
aaa
sbb
popf
adc
xchg
and
mov
mov
dec
mov
adc
or
fucomip
cmp
push
add
adc
mov
popa
mov
leave
jno
mov
loop
icebp
push
xchg
sub
in
lock
daa
and
sbb
push
lock
and
aam
or
dec
or
xchg
lock
push
test
lahf
icebp
stos
dec
loope
add
jge
cli
push
lock
xchg
mov
pop
mov
sbbb
decl
and
icebp
cmp
xor
inc
rolb
lock
cwtl
mov
in
dec
mov
cld
cltd
xor
pop
jl
inc
xchg
or
ljmp
mov
mov
in
leave
rcll
popa
lock
sbb
push
jp
lock
lahf
inc
mov
std
push
repz
stc
push
popf
ljmp
cmp
dec
dec
in
xchg
into
or
and
add
adc
out
push
icebp
mov
cmp
pushf
movsb
repz
fsubr
pop
pop
xchg
add
int
popa
push
lods
roll
adcl
or
sub
xchg
mov
cwtl
pop
mov
shll
les
roll
lock
in
xchg
cmp
hlt
sub
push
lock
sarb
inc
mov
lock
pop
cmp
xchg
fstpt
jae
dec
dec
icebp
jno
lock
sub
lock
je
mov
dec
xor
lock
mov
movzbl
imul
lock
cmp
mov
scas
sub
inc
lock
fsts
adc
fs
popf
cmp
movsl
push
es
pop
mov
xchg
mov
adc
lock
lods
sub
and
cmpsl
lock
es
jle
icebp
mov
cmp
stos
mov
inc
xchg
scas
bswap
xchg
dec
fsubl
testb
mov
cmp
jo
shll
cli
mov
lock
sahf
xlat
push
stc
insb
and
je
lock
enter
out
jmp
test
arpl
pop
lock
xor
popl
mov
jno
add
xchg
leave
repnz
shlb
daa
or
cmp
sub
xor
inc
incl
xlat
pushf
push
lock
test
int3
sub
and
fcompl
push
ret
subb
add
sbb
inc
shlb
mov
mov
loopne
push
lcall
mov
xchg
imul
lock
mov
arpl
push
lock
test
out
lock
daa
jmp
in
clc
popa
js
shll
stos
add
or
in
add
insl
dec
call
or
sbb
jg
push
mov
jo
inc
inc
in
mov
mov
insb
or
sub
cmp
push
shlb
gs
and
lock
push
cwtl
xorb
push
jo
loope
or
es
lock
out
mov
loopne
aaa
ficoms
pop
scas
ljmp
and
orl
unpcklps
aam
sub
mov
mov
fs
cwtl
in
lock
xorl
jp
jge
pop
adc
popf
gs
mov
lods
outsl
cmp
lock
dec
mov
add
test
in
xor
shll
push
pushf
mov
xchg
mov
aad
mov
push
cmp
push
inc
gs
xchg
push
call
jg
sbb
in
mov
pop
mov
adc
xchg
fs
cmp
sbb
pop
push
lcall
mov
jb
ja
fs
mov
jle
jne
in
cwtl
add
test
int
mov
sbb
test
fstpl
dec
cmpsb
insb
push
pop
inc
pop
mov
dec
aaa
add
imul
int3
xor
lret
lock
add
mov
ret
lock
or
or
sbbb
dec
test
inc
adc
push
movsl
rclb
fimull
dec
lock
cmp
xor
sbb
and
cmp
lock
leave
dec
sub
rcrb
fdivrs
adc
lock
inc
daa
add
cmpb
fadd
jns
sub
adc
mov
pop
gs
je
lods
popl
ss
mov
pushf
out
lock
aam
add
sbb
jle
sbb
cmp
push
lahf
and
jmp
dec
add
xchg
lock
push
movsb
sbb
add
insl
leave
icebp
mov
hlt
fcomps
inc
ret
test
mov
cltd
sub
pop
mov
sbb
jo
arpl
lock
pusha
jnp
movsb
in
loop,pt
mov
stos
mov
insl
jno
in
dec
hlt
jge
cmp
mov
movsbl
test
mov
out
or
arpl
fstl
mov
out
les
inc
cmp
mov
pusha
outsb
pop
popf
mov
sbb
in
mov
loop
jns
test
cmpsb
shl
push
out
and
sub
sar
rorl
lret
jmp
or
loop
repnz
shrb
in
testl
or
lods
cwtl
out
inc
or
aam
lock
lock
jae
mov
lock
dec
add
jbe
shrl
pushf
dec
add
and
inc
loope
jno
aas
adc
jl
loopne
mov
or
jo
mov
sti
pop
sbb
test
jl
mov
or
adc
or
cmp
xchg
lock
inc
add
or
adc
or
rcll
cmp
pop
test
lock
aad
rorb
icebp
adc
lock
mov
jg
push
dec
jno
lock
cld
mov
repnz
and
jo
fldcw
inc
mov
cmp
xchg
jg
jb
lock
xor
fisubl
add
test
icebp
add
or
je
sahf
lock
mov
sub
fmul
xchg
out
repz
xchg
push
dec
mov
mov
daa
shr
out
stos
jl
mov
icebp
and
repnz
sahf
inc
xchg
sub
addb
lods
push
xchg
dec
loope
mov
cmpsb
lahf
in
lock
or
je
mov
xchg
dec
mov
jg
mov
dec
cltd
into
out
xor
xor
mov
add
clc
lock
cld
punpckhdq
call
xor
xchg
cmp
push
pop
push
mov
lea
mov
out
ja
cs
push
add
lods
xor
lock
scas
aaa
sahf
and
lock
test
gs
and
jns
loopne
adc
adc
pusha
pop
mov
mov
shl
mov
inc
clc
dec
pop
push
lock
lcall
mov
sub
in
lock
push
pop
mov
jb
shrl
jae
mov
cmp
xor
lock
jl
scas
repz
lock
pop
sar
clc
arpl
pusha
sub
fimull
ret
fcompl
je
xor
sbb
or
repnz
sub
lret
ret
in
mov
and
fcoml
aam
out
nop
adc
repnz
cmp
cs
dec
insl
inc
adc
test
jo
ret
mov
addb
jmp
shrl
xchg
pop
scas
iret
popa
lock
iret
dec
repnz
testb
cmp
negl
and
sbb
sub
cmp
fimuls
push
pop
mov
push
mov
push
jecxz
pop
pop
mov
add
in
cmp
icebp
dec
xor
loope
test
fisttpl
pusha
ficompl
xchg
lock
hlt
jmp
cld
stc
sbb
in
jo
push
cmpsb
lock
adc
out
test
sbb
movsl
ss
push
shl
cmpb
icebp
sbb
in
in
fdiv
sub
mov
ret
stos
lock
int3
add
loop
cmp
ljmp
pushf
mov
pop
icebp
nop
int
xor
and
sub
movsb
sub
jp
xor
mov
inc
dec
lcall
fisubrs
xchg
sbb
inc
cmp
inc
lret
mov
icebp
pop
mov
xchg
or
out
sub
mov
mov
or
shlb
std
push
stc
xor
fbld
sub
call
add
dec
inc
xor
shl
testl
jo
cld
out
or
sub
or
xor
inc
icebp
jno
fidivs
jae
push
repz
cltd
repz
mov
xchg
dec
fcomip
mov
adc
pop
lock
addr16
xchg
movsl
cli
lock
push
mov
and
mov
or
shll
lock
push
xchg
pop
movsb
shll
pop
sahf
arpl
es
pop
pop
xlat
ret
pop
pop
push
xor
jo
lock
adc
mov
jnp
enter
sti
cmp
push
jo
nop
aaa
ja
sbbb
push
fsubs
xchg
jb
inc
push
icebp
fisttpl
and
jge
mov
icebp
adc
fldcw
dec
inc
mov
into
ret
sub
es
les
pop
inc
jge
lock
jne
movsb
pop
xchg
arpl
pop
dec
xchg
ror
test
out
dec
in
icebp
loop
mov
fs
popa
lret
in
icebp
nop
adc
cmp
lock
out
add
in
jp
push
lock
scas
or
or
lret
inc
jmp
adc
jl
jbe
adc
mov
movsb
js
jge
inc
inc
lock
call
loope
lock
adc
daa
mov
movsb
mov
sbb
inc
nop
jae
cs
jae
call
mov
fldpi
sarl
fisubs
lods
scas
pop
call
lock
mov
stos
push
sbb
mov
jno
xchg
pop
add
ljmp
mov
mov
or
and
push
mov
test
lods
add
and
pop
cmp
cs
lahf
repz
lock
inc
jg
push
sbb
ss
aam
xor
push
inc
sub
dec
inc
push
bound
stos
scas
mov
and
mov
insl
repz
jo
in
xchg
sbb
push
fsubl
dec
andb
fcomip
inc
adc
mov
mov
out
sub
shr
pop
mov
jl
cmp
jmp
jns
icebp
stos
loop
sbbl
in
lcall
mov
arpl
sub
push
jmp
int3
adc
stc
js
lock
sub
test
jl
and
mov
pop
lahf
fiadds
xchg
or
in
sarl
lock
hlt
lcall
movsb
pop
and
xchg
cli
xor
repnz
lock
iret
leave
mov
imul
subb
rcll
lock
movsb
mov
aas
lock
adc
std
ret
es
or
fcmovne
mov
jno
scas
call
icebp
adc
imul
or
mov
cs
dec
insb
mov
jp
lods
add
push
and
push
xchg
mov
out
leave
bound
pop
lds
nop
movntq
xchg
pusha
mov
movsb
arpl
jecxz
in
xlat
ljmp
push
add
scas
pop
movsl
sub
sub
out
clc
cs
xor
adc
dec
movsb
ds
pusha
dec
aam
aas
pop
aam
or
scas
getsec
frstpm(287
dec
jo
lock
jle
xchg
lods
je
lock
mov
xchg
movsl
hlt
lock
loope
lcall
xchg
jo
lret
leave
mov
bnd
lahf
cmpsl
and
dec
lock
and
jo
movsb
mov
push
fmulp
in
cmp
sti
mov
enter
lock
mov
inc
sub
and
push
insl
pop
jb
lock
addb
sti
and
scas
lock
add
movsl
lock
fsts
icebp
cmp
pop
imul
add
in
movsb
outsb
sub
push
jne
dec
adc
shlb
in
cltd
jle
lock
cmc
cli
push
es
or
jmp
ljmp
lods
inc
aaa
movsb
jmp
lock
testl
pop
les
dec
rcr
movsl
lock
lcall
jns
lahf
mov
loopne
icebp
xlat
inc
xchg
adc
fisubs
sbb
les
and
scas
and
or
dec
or
xor
inc
sub
lock
xchg
inc
pop
mov
faddl
jg
jbe
loop
mov
mov
or
dec
xchg
mov
mov
inc
je
lock
xchg
ds
push
jo
sbb
jl
mov
push
xchg
aam
stos
ror
push
negb
icebp
inc
shrb
xchg
andb
daa
xor
adc
sahf
shlb
or
sti
jo
push
loop
lock
pop
imul
lock
and
mov
xor
lock
push
jmp
popf
pop
lea
add
cmp
pop
lock
int
xchg
fnstcw
pop
rcrb
in
mov
adc
xor
movsb
pusha
daa
adc
mov
push
pop
cmpsl
and
inc
jge
or
lock
xchg
in
jno
and
adc
add
lret
lock
lock
in
xor
movsl
add
nop
sbb
scas
xchg
adc
xor
xchg
push
push
into
cwtl
test
pop
cmp
hlt
in
push
mov
jle
pop
enter
add
mov
lock
and
sub
ret
or
loop
adc
push
movsb
fcomip
clc
mov
pop
testl
add
lcall
insb
enter
testl
lock
scas
sbb
or
xor
adcl
sbb
bound
and
js
lock
dec
pop
js
stc
mov
repz
cli
lahf
in
lock
fs
les
lods
cs
lods
mov
outsl
cwtl
xchg
mov
inc
push
sbb
sbb
mov
clc
push
lock
mov
negl
cmp
inc
in
icebp
xchg
xchg
jno
or
or
lock
test
std
jo
inc
lret
add
push
cmpsl
mov
jl
orl
adc
mov
lock
cmpsb
sub
enter
push
outsb
xchg
es
adc
lock
stos
xlat
jmp
lock
cmp
lock
in
xchg
das
test
cmc
movsb
mov
sbb
lock
dec
insl
test
test
sbb
bound
jo
sub
lock
lcall
lock
aam
lret
pop
inc
loopne
xor
inc
dec
push
cmp
shlb
xor
mov
lock
test
lock
mov
lock
pop
add
and
xor
movsb
fwait
arpl
outsb
add
insl
xor
into
std
push
or
divl
testb
fwait
add
xchg
xor
jge
sti
lock
sarb
mov
arpl
adc
movsb
imul
lock
movsl
popf
jbe
clc
lock
inc
lods
enter
lock
push
dec
push
xor
lret
push
shl
call
jb
and
pusha
mov
push
movsl
adc
push
mov
xor
jle
push
iret
pop
mov
mov
dec
inc
sub
stos
cmpsl
xor
dec
lock
cmp
dec
jns
adc
add
inc
adc
xor
lea
add
out
fadds
ss
add
and
scas
or
cmp
in
icebp
mov
cmc
cld
xor
fcom
lds
add
xor
and
loop
lock
lcall
lock
add
je
gs
sub
mov
enter
lock
fucom
pusha
mov
stos
lock
pop
xor
lock
mov
pop
pop
out
sub
mov
or
lods
mov
fisttpl
pop
hlt
jb
dec
jno
jp
call
sbb
pop
arpl
lock
and
lock
add
or
push
loop
icebp
lods
bound
jns
imul
cmp
adcb
inc
xchg
add
adc
std
lock
mov
loope
scas
lock
inc
movsb
gs
mov
or
pushf
add
cltd
addl
lret
ret
cvtps2pi
xchg
lock
lods
push
mov
dec
es
push
mov
je
pop
lock
xchg
inc
jae
nop
lea
ds
sbb
lock
cmpsb
insb
icebp
loope
call
pop
and
xor
mov
push
mov
cmpsb
lods
sub
stos
cmp
fwait
push
mov
cmpsl
pop
xchg
lock
sbb
lods
sbb
repnz
mov
push
xchg
fcomi
in
pop
dec
xchg
roll
fistpll
push
jne
and
and
ja
lock
dec
mov
or
outsb
xchg
out
cmp
push
aam
sbb
xchg
mulps
mov
out
addr16
mov
es
imul
call
out
lret
sbb
sbb
mov
lock
subb
bound
jbe
jmp
cmp
xor
and
cmp
or
mov
dec
into
jo
fnstcw
lock
xchg
sub
cmc
movlps
fs
repnz
sbb
test
pop
shrb
mov
int3
insb
gs
in
jge
pause
mov
lahf
or
enter
sub
xlat
test
cmp
pop
inc
pop
push
mov
addl
mov
lock
sti
inc
push
mov
sub
or
lock
pop
das
fidivs
loope
call
sub
lock
mov
add
ja
push
icebp
ljmp
clc
bound
lods
fwait
adc
lock
mov
and
push
js
cmp
movsb
scas
pop
cmp
testl
mov
mov
mov
inc
mov
lcall
mov
jae,pt
jno
push
fcom
xacquire
lock
mov
js
out
movsb
or
push
ret
and
or
in
mov
call
cmc
adc
pop
adcb
andb
fisttpll
lock
sbb
push
sub
lock
and
or
rcr
aad
test
mov
pop
enter
lock
and
pop
movsl
push
ss
sbb
lods
pop
mov
ds
lock
lods
push
cwtl
loop
subb
or
out
and
xchg
cld
repz
scas
lahf
cmp
data16
lock
mov
xchg
sub
lret
test
test
rclw
lock
jbe
cmp
test
ret
mov
cld
fcoml
subb
stc
inc
mov
jb
ret
lock
aam
in
mov
hlt
lock
xor
movsb
frstor
or
pop
scas
ds
lcall
push
cmp
leave
lret
and
sbb
int
push
adc
cltd
jbe
icebp
hlt
stc
push
xchg
xor
loopne
sub
inc
xor
iret
in
lock
ljmp
mov
dec
mov
mov
std
jmp
jge
into
pop
cmp
mov
jecxz
lahf
addl
mov
mov
int3
test
scas
xchg
or
add
aam
add
lock
pop
jge
hlt
dec
enter
std
jle
inc
popa
ss
lock
int3
fs
add
mov
cltd
jno
xor
adcl
and
mov
xchg
data16
in
mov
movsb
out
icebp
xchg
pop
ja
jno
jl
pop
imul
jecxz
stc
mov
xor
mov
fwait
mov
jno
out
icebp
xchg
add
adc
jnp
lret
sbb
sahf
xchg
testb
jb
mov
pop
movsb
ja
repz
fucomip
inc
popf
enter
lock
add
xorb
lock
adc
lahf
cmp
xor
mov
fiaddl
popf
lods
cmp
icebp
arpl
repz
push
or
push
fcomi
push
jo
dec
cmc
mov
add
jp
inc
xchg
adc
jno
push
pusha
add
hlt
ja
xor
mov
mull
lds
xor
ss
insl
into
mov
es
movsb
int3
repz
mov
xchg
add
lock
adc
xor
jo
pop
gs
mov
xor
xor
xor
sbb
popf
jb
and
xchg
jns
icebp
into
cmp
loopne
push
lock
lcall
lock
sub
popw
lock
in
movsb
fidivs
lock
inc
mov
inc
jbe
mov
add
lock
outsl
fs
mov
lret
loope
and
mov
push
lock
cmc
ljmp
decb
or
adc
lock
adc
stos
jecxz
sahf
adcb
bound
inc
sub
or
outsl
and
adc
xchg
shl
data16
daa
add
lock
std
mov
push
lock
xor
push
lock
push
mov
std
xor
js
mov
pop
adc
int3
xor
push
data16
xchg
icebp
js
dec
mov
lock
cmp
popa
je
fldenv
sar
out
mov
xor
push
bound
cmp
xchg
mov
or
jae
xchg
dec
pop
mov
or
rcl
sub
lahf
lock
cmp
and
shlb
xchg
ret
xor
sbbl
xchg
lock
push
js
in
jns
icebp
out
imul
push
dec
or
es
sahf
cmpsb
lock
cltd
and
mov
pop
mov
rorb
and
fadds
lock
xchg
mov
mov
sub
aam
bound
cwtl
adc
lock
and
inc
jmp
pop
int3
icebp
insb
daa
mov
mov
call
adc
test
pop
imul
fldl
in
dec
cmp
clc
lock
inc
cld
lds
pop
add
lock
popf
gs
js
mov
rclb
lock
les
icebp
cmp
and
and
sub
push
dec
lock
mov
sbb
mov
movsb
lock
jmp
sbb
sar
rorl
stc
lock
loope
sub
inc
sbb
hlt
adc
or
lock
push
pop
aam
push
outsl
cmovno
pusha
repnz
add
push
add
cmp
mov
dec
xchg
lock
cmpsl
loopne
test
sahf
cld
xchg
add
mov
daa
jo
mov
repz
mov
push
scas
call
jg
arpl
jle
adc
loopne
xor
ret
xchg
jo
mov
lock
lret
lea
cmpsl
icebp
cs
imul
fcomip
repz
sub
push
loopne
cwtl
cmp
lock
add
bound
xchg
mov
jns
jo
wrmsr
lea
icebp
or
hlt
inc
xor
lods
push
dec
jno
xor
cmpsb
sub
push
fnstenv
and
int3
movsl
test
out
loop
xchg
jl
imul
xchg
sub
inc
sbb
lock
and
aas
fdivl
push
addl
aam
in
shrb
push
jl
inc
xor
dec
sti
mov
cmp
lock
xor
mov
aam
jle
push
movsb
lods
pop
and
icebp
mov
sbb
xchg
das
pcmpgtb
fildll
loope
repnz
dec
jecxz
pop
mov
cli
pop
shl
push
imul
xor
sub
pop
xchg
xor
getsec
sub
enter
xchg
jne
or
test
testl
or
lods
mov
adc
inc
sub
xchg
shlb
subl
repnz
aam
push
jns
xor
mov
ss
addr16
test
ret
leave
mov
fcomi
xor
push
xchg
or
lock
stos
adc
mul
repz
xchg
dec
call
mov
push
outsb
or
test
jbe
shlb
loope
or
lock
sahf
movsl
cwtl
lock
mov
sbb
pop
pop
jg
aam
ds
fadds
cmp
lock
dec
sbb
add
popa
dec
mov
loope
lahf
gs
lret
cmp
lock
jge
adc
cwtl
or
movsb
sti
cmp
fisttpl
and
mov
inc
add
add
sti
bound
lock
dec
mov
and
lock
jp
lods
mov
loop
lock
movsb
lret
pusha
in
aaa
stc
push
out
icebp
pop
mov
xchg
push
push
inc
or
aaa
mov
leave
rcrl
popa
jp
rcll
mov
push
add
sub
sahf
cmpsl
and
xchg
bound
push
jle
add
stos
lock
mov
lock
mov
in
shl
imul
lods
fisubrl
ds
cwtl
lea
pushf
xchg
into
frstor
adc
mov
xor
cmovne
mov
inc
cmp
icebp
mov
mov
mov
push
mov
enter
lock
or
mov
cmpsb
out
pop
jg
lock
dec
int3
in
outsb
ja
sub
or
and
jne
pop
or
movsl
jo
inc
pop
aam
in
outsb
ret
mov
pusha
ja,pn
lods
lock
push
clc
inc
adcl
cmp
cltd
sbbb
icebp
sub
in
and
mov
loopne
sub
lods
fs
test
sub
inc
inc
jbe
dec
inc
cmp
and
or
cmp
jns
add
repnz
lret
mov
popf
ja
loop
mov
mov
scas
inc
add
shl
mov
imul
repnz
imul
inc
adc
mov
xchg
jo
inc
lahf
push
inc
inc
rcrb
insb
mov
imul
cmp
lock
stos
mov
fwait
test
lock
mov
jns
sti
popf
mov
jnp
into
pop
mov
mov
or
ss
sbb
fcoml
mov
jl
push
fmul
jecxz
je
icebp
test
mov
notl
adc
and
ret
lock
lret
addb
pop
gs
xor
add
aas
repz
adc
push
jl
loopne
ja
mov
iret
add
mov
fists
and
push
repnz
mov
sub
fcoms
cmp
or
mov
push
or
xchg
mov
jecxz
jns
frstor
rep
lock
aad
lcall
mov
xor
leave
mov
insb
jbe
icebp
pop
sub
mov
add
in
mov
sar
mov
pop
cmp
add
fsts
jo
jnp
aad
lock
sbb
lahf
push
cld
xor
out
adc
ss
stos
lock
push
push
pop
mov
xor
cmpsb
jno
lock
lock
dec
lock
in
inc
int
jo
jnp
movsb
icebp
cmpsb
mov
adc
xor
jo
mov
push
ss
lock
pushf
and
in
les
inc
cmp
inc
push
mov
xor
sbb
in
sbb
inc
jle
movsl
les
lock
mov
dec
movsb
and
jmp
cmpsl
repnz
and
xchg
lock
mov
movsb
dec
lock
inc
xor
lock
sahf
sub
mov
repnz
test
xchg
aam
clc
pop
add
mov
lock
inc
iret
mov
mov
loop
inc
punpcklbw
enter
loopne
pop
sub
mov
cltd
lock
fcomps
push
fisubrs
or
mov
lock
push
mov
jge
mov
sub
icebp
push
push
pop
xor
mov
push
iret
or
pop
push
mov
jns
std
inc
adc
test
jbe
pop
sub
div
add
xor
mov
mov
and
inc
xchg
push
lock
jp
sub
xchg
gs
sub
lock
into
and
push
dec
lods
lock
mov
mov
loope
lock
sub
sub
cs
mov
cs
mov
adc
inc
xor
sti
cwtl
subb
adc
cmp
jl
data16
mov
cli
pushl
mov
mov
popf
jmp
lock
xchg
sub
out
clc
xor
dec
cmc
imul
lock
push
repnz
jno
mov
or
jmp
dec
and
or
out
aaa
ss
mov
dec
mov
mov
and
jnp
jb
rorb
jg
cvttps2pi
adc
fcoms
pop
jns
cmp
nop
lret
xchg
push
dec
sub
jo
fs
imul
mov
sahf
pop
inc
add
test
mov
lock
fisubs
pop
shlb
push
loop
mov
rorl
mov
fwait
loope
lock
xchg
mov
movsl
lods
aas
lea
sbb
gs
push
nop
sbb
in
inc
jb
xchg
scas
mov
frstor
push
push
jmp
add
and
std
fmul
in
lock
bound
nop
mov
xlat
add
xchg
inc
mov
xchg
lock
mov
cmp
in
aam
fadds
jbe
lock
push
add
test
xor
dec
adc
movsb
sbbl
aaa
sahf
jo
es
dec
repz
lock
mov
popf
lock
adc
jg
dec
fistpl
lock
mov
mov
inc
out
mov
negb
cmp
test
jne
ficomps
aam
lock
pop
es
mov
mov
je
lock
pushf
hlt
fwait
and
sbb
xor
cmc
stos
cmp
xchg
mov
lock
lcall
in
sbb
loope
add
and
arpl
mov
clc
and
xchg
sti
dec
loop
rolb
lods
sbb
ds
scas
mov
pushf
sub
outsl
push
lret
outsb
pop
jmp
clc
pcmpeqw
push
xor
mov
in
das
aad
stos
insb
xchg
push
pusha
lock
stos
pop
inc
add
jns
lock
xor
bound
push
xor
add
dec
mov
inc
test
sahf
je
cli
cmpsb
lock
orl
and
fsub
push
insb
sbb
mov
popf
mov
inc
mov
mov
mov
lock
lds
insl
dec
adc
inc
mov
dec
clc
push
jg
or
cmp
pushf
jo
shlb
je
in
lock
fidivs
inc
xor
pop
push
les
scas
enter
fistl
mov
loop
lock
or
out
std
test
add
cmp
pop
cltd
adc
adc
pop
loopne
inc
mov
cmp
mov
lock
lret
sti
xchg
out
adc
pushf
inc
scas
lods
jb
js
mov
loope
dec
xchg
mull
pop
pushf
outsb
daa
repnz
or
pop
stos
adc
popa
enter
inc
mov
scas
hlt
pop
or
test
adc
ret
cwtl
mov
nop
fwait
pop
lcall
pop
mov
js
fmul
call
add
pop
out
cltd
push
mov
mov
sbb
pop
ds
adc
hlt
jg
pop
lock
arpl
dec
sbb
movsl
cmp
jbe
aam
and
aad
push
comiss
lods
lea
jo
and
iret
lock
lcall
out
lock
jmp
aaa
xor
gs
mov
fstps
jecxz
xchg
mov
setns
jne
and
jge
push
cmp
cmc
sbb
mov
jo
sub
xchg
adc
or
xchg
push
lcall
xchg
xchg
xchg
mov
sar
sbb
mov
push
mov
pop
jno
cmp
push
xlat
ja
lret
rcrb
or
dec
jl
lahf
nop
lock
out
lock
mov
xor
aad
enter
or
sub
sub
jno
xchg
cmp
and
addr16
insl
xor
add
sub
dec
in
lock
mov
aad
add
into
in
mov
jns
stos
mov
in
xchg
or
lock
hlt
push
loop
in
outsl
sbb
fs
lock
cmp
jge
dec
icebp
mov
jbe
pop
addr16
out
iret
lock
loopne
sub
pop
dec
cmp
and
xchg
std
lock
das
in
cmp
cmpsb
add
out
sub
je
test
dec
adc
pop
xor
int
leave
ret
nop
pop
add
mov
or
mov
mov
lock
add
cmp
out
jg
push
inc
movsb
lock
inc
xchg
pop
dec
fwait
mov
push
mov
lock
cmpsl
cli
push
lock
std
shrb
add
sub
push
mov
and
cmp
mov
sbbl
cmpsl
sbb
divb
mov
xchg
adc
adc
lock
in
testb
or
lock
shrb
insl
lock
or
mov
inc
or
inc
mov
mov
sbb
mov
popf
dec
orb
mov
in
out
lock
cld
ljmp
mov
pop
inc
cmpsl
ss
jo
push
aam
lea
xor
cmp
mov
mov
fwait
push
sbb
lock
out
mov
icebp
in
sbb
inc
cli
push
jo
lock
mov
es
mov
mov
inc
cmp
addr16
add
cld
sbb
jo
lea
jmp
arpl
xchg
pushf
in
pop
movsl
lock
inc
call
jns
lock
ret
lock
popa
test
cmp
mov
lcall
lock
ds
repnz
xchg
pop
sub
xchg
cmp
pop
ljmp
jo
out
cli
xlat
mov
imul
lock
dec
xchg
loopne
lcall
aaa
xor
enter
jl
or
cmp
lea
cmp
ds
or
inc
mov
jmp
adc
mov
lds
adc
push
movsl
out
xor
hlt
lock
imul
push
shlb
fidivl
js
cltd
pop
outsl
sbb
cmp
adc
mov
add
cmp
adc
xor
mov
xor
icebp
int
movsb
fldl
add
cli
js
and
jno
out
adc
mov
dec
or
repz
std
je
outsb
mov
stos
pusha
jne
adc
push
cld
lock
out
stos
and
mov
sbb
and
push
inc
ret
xor
jo
pop
int3
iret
xorl
cmpsl
repnz
mov
inc
add
jmp
lock
sub
pop
shl
cmpsb
sbb
sarl
iret
jae
shrb
sub
outsb
or
jbe
mov
stos
orb
aam
cmpl
and
popa
rclb
xlat
pushf
lock
dec
pop
pop
mov
dec
or
pop
push
aad
lock
xchg
and
and
dec
add
mov
mov
xor
jnp
repz
push
addr16
push
jo
in
inc
repz
out
icebp
lret
adc
lock
xor
nop
cmp
xor
inc
fwait
pop
repz
lock
mov
pop
enter
lock
cmp
xchg
jo
jb
lock
ret
icebp
or
out
lea
lock
sbb
lock
pop
mov
jl
ss
movsl
dec
jne
pop
push
lret
adc
lock
mov
lock
inc
ljmp
mov
loopne
mov
mov
sub
cmpsb
dec
push
pcmpgtw
pop
scas
fnstcw
mov
in
movl
sbb
movsb
push
lock
ficoms
cltd
xor
mov
jle
addps
sub
repz
nop
inc
icebp
dec
lock
push
loopne
lock
push
ret
stc
int
sbb
inc
pop
mov
cmp
push
mov
rcrl
daa
pop
pusha
cs
xchg
and
std
dec
xchg
stos
jecxz
idivl
cltd
lods
xlat
mov
out
or
icebp
dec
fwait
sti
mov
mov
lock
mov
push
dec
push
je
sbb
out
clc
sub
je
xor
repz
sti
fsubs
lock
enter
cmp
or
sub
adc
dec
in
xor
lock
repz
cmp
jmp
jo
lock
shl
pop
fdivrp
push
faddl
xchg
mov
push
sbb
lock
fwait
je
lock
lock
push
cwtl
or
xchg
ljmp
arpl
daa
lock
nop
pop
lock
insb
lahf
cmp
fnstenv
sbb
ljmp
movq
in
add
inc
xor
incl
mov
lock
imulb
int3
push
mov
test
popa
inc
in
cs
xor
cmp
inc
leave
arpl
jbe
icebp
jne
pusha
push
outsb
stos
xor
push
pop
add
sbb
in
inc
xor
fs
pop
jmp
arpl
sbb
call
shll
jo
and
and
pop
lock
sub
cmc
es
inc
repnz
mov
push
push
bound
push
repz
sbb
sti
lea
lret
icebp
lock
mov
xchg
ror
pop
lock
pop
push
aaa
inc
dec
xchg
repnz
jo
xchg
inc
push
inc
cld
cli
ret
sub
dec
cmpsb
aad
mov
movsb
xchg
cmp
adc
pop
lock
jns
jge
je
lock
pop
mov
cs
movl
and
stos
add
icebp
mov
popa
jo
pop
inc
sti
mov
push
adc
and
sahf
pop
lock
neg
and
lock
clc
mov
stos
lock
push
xchg
jmp
ds
lock
test
lcall
idivb
test
loopne
adc
std
icebp
movsb
dec
push
pop
nop
mov
loopne
pop
sub
pusha
cltd
cmp
inc
xor
pmaddwd
pop
fisubs
sub
insl
daa
repnz
push
jmp
pushf
or
icebp
lahf
lret
ljmp
jo
sti
aam
cmpsl
popa
pop
lock
pusha
ret
push
lock
pop
sti
fs
les
pop
inc
in
mov
nop
fdivrl
add
fistpl
mov
mov
mov
mov
inc
cld
adc
mov
lcall
lock
inc
in
lock
xchg
adc
jmp
lret
popa
push
jb
sub
rolb
lods
mov
aas
xor
push
sub
lock
xchg
mov
jecxz
sbb
jmp
ret
nopl
adc
or
lock
cmp
cmp
insl
xor
hlt
jmp
gs
jle,pt
add
sbb
pop
mov
mov
pop
adc
and
cli
xor
push
loop
lock
jmp
std
adc
adc
fmull
lods
push
push
div
jp
nop
sti
ds
pop
ss
push
jo
pop
or
movsl
scas
iret
mov
sbb
dec
pop
push
bound
popf
dec
mov
adc
push
fwait
sbb
pop
push
add
lock
xchg
rcrl
div
test
pop
jg
cmc
repnz
lock
mov
mov
or
stos
scas
mov
xchg
cmp
and
mov
inc
in
pop
pop
and
mov
jle
mov
cmp
xchg
or
mov
fwait
inc
sub
add
xchg
and
lcall
and
lods
lock
dec
mov
ja
shl
cmp
arpl
xchg
in
push
in
pusha
jo
dec
sub
xchg
push
cmpb
in
and
cmp
fwait
or
mov
fsubrs
lock
icebp
cwtl
out
cmp
push
test
sbb
mov
stos
mov
test
mov
clc
popa
pminsw
in
push
adcb
pop
and
fs
and
pop
imul
in
xlat
pop
addb
lock
leave
mov
push
lock
pop
mov
ja
pinsrw
cmpsl
pop
sub
lock
mov
xchg
in
xor
imul
adc
cmp
add
dec
sub
test
outsb
repz
adc
lock
mov
lock
stc
xchg
lods
shrl
call
in
in
mov
lock
push
es
icebp
mov
adc
in
push
jae
pop
mov
adc
lock
jmp
xchg
mov
lock
push
adc
sub
mov
mov
leave
xor
lock
repz
imul
iret
addr16
and
mov
push
xchg
cltd
test
mov
mov
movsb
mov
or
test
jp
jo
mov
cmp
xor
lock
xor
fldln2
repnz
jmp
movsb
jo
out
loope
lock
cmp
cs
daa
movsb
cwtl
jbe
pop
lock
in
andl
nop
mov
adc
jne
sbb
hlt
xchg
mov
cmpsl
repz
mov
adc
frstpm(287
iret
aaa
dec
sub
mov
pop
hlt
mov
lock
lock
lahf
aas
or
and
xor
int
cmp
lock
jae
inc
lcall
cmp
mov
adcl
test
icebp
push
adc
mov
fsts
pop
lock
mov
lock
in
rclb
call
aas
jns
lock
pop
fnsave
insb
jp
pop
xor
scas
or
adc
ret
movsb
pop
mov
xor
push
aam
or
mov
addr16
in
out
in
jmp
outsb
cmpsl
es
pop
lahf
lock
mov
stos
sub
xchg
lock
mov
jns,pn
lock
lret
dec
xor
inc
and
or
ret
jl
sbb
shlb
cmc
adc
pop
pop
push
sub
and
mov
test
dec
add
pop
mov
xchg
imul
fidivs
insl
ss
lock
and
mov
aas
pusha
fwait
in
add
push
orl
dec
push
or
insb
xor
in
nop
mov
xchg
test
jle
jg
scas
push
jnp
aad
sti
sub
imul
fdivrs
daa
mov
push
cmpsb
xchg
shlb
xchg
in
into
lock
bound
test
adc
cmp
les
int3
mov
lock
ret
or
and
mov
js
out
lcall
xchg
sub
cmp
mov
and
ss
mov
repz
aad
cli
lahf
in
paddd
push
xlat
or
ss
lock
out
inc
scas
lahf
or
lret
xor
in
mov
movsb
lock
out
mov
ds
sbb
add
lock
outsb
push
les
pop
lock
je
xchg
fcmovnb
push
cmp
push
mov
aaa
adc
pop
add
imul
inc
icebp
dec
dec
fcoms
mov
out
add
cmc
loopne
lock
imul
or
fsub
lock
sub
mov
pop
push
adc
pop
mov
lcall
icebp
lahf
repz
sub
adc
push
repz
or
enter
lock
xorb
inc
lock
int3
lods
repz
test
or
sbb
sbb
push
into
iret
xor
mov
lock
jno
outsb
arpl
pop
lock
mov
sub
icebp
xchg
stos
adc
push
sbb
lock
fmuls
sbb
rclb
dec
les
testb
pop
sub
jl
jno
cmpb
sbb
in
je
lock
jbe
adc
test
test
inc
push
orb
mov
jle
bound
lock
push
daa
xor
arpl
std
xor
mov
jmp
pop
xlat
lock
shr
lock
dec
xchg
mov
repz
sub
mov
in
test
movsb
inc
lock
mov
shrl
gs
mov
lret
mov
imul
pop
or
jno
add
pusha
mov
lock
mov
lcall
out
xchg
mov
test
lock
movsl
mov
jns
inc
jmp
sub
push
mov
mov
pop
add
jbe
and
and
pop
push
sti
icebp
xchg
out
lock
int
mov
pop
cmc
je
loope
sbb
out
inc
lock
call
test
scas
into
push
inc
mov
jg
lret
add
divl
and
stc
ds
push
inc
in
es
push
dec
lock
nop
lock
fimull
lock
cltd
sbb
fldt
mov
shll
pop
out
je
pop
sti
sbb
jb
mov
stos
int
sbb
hlt
sub
lock
xchg
ljmp
and
jmp
addr16
jbe
push
fs
push
pop
and
lock
adc
leave
lock
addr16
fdiv
dec
pop
in
test
mov
pop
paddd
sub
cmc
jne
pusha
lahf
stos
lock
movsl
mov
addr16
or
std
xorl
ficoms
and
cmp
push
mov
movsb
mov
fs
lret
lock
and
data16
mov
repz
nop
xor
sahf
cmp
sbb
outsl
stos
cmp
adc
fwait
xchg
sar
sbb
fsubs
mov
inc
jl
repz
inc
mov
jbe
cmp
stos
lock
scas
aam
sub
lock
loopne
mov
sbb
repnz
fdiv
loope
ljmp
lods
pushf
scas
hlt
outsl
lock
mov
xor
adc
aam
xor
mov
fcoms
fiaddl
lock
sub
jno
and
mov
pop
cs
mov
mov
mov
repnz
sbb
mov
cwtl
pushf
icebp
jno
xor
or
clc
sar
sbb
xchg
add
in
icebp
loop
cmp
push
adc
push
in
lock
test
pushf
fbld
das
xchg
pusha
icebp
icebp
adc
and
dec
push
fisubrs
mov
or
icebp
movsb
rcll
and
data16
into
mov
sti
push
xor
psubsb
arpl
pop
lock
mov
test
mov
mov
loop
arpl
lret
iret
inc
pop
icebp
mov
fwait
lcall
xor
pop
test
lods
int3
sub
pop
popf
mov
xor
jmp
int
loope
adc
pop
inc
cmp
mov
bound
or
mov
fadds
rcll
adc
inc
enter
lcall
inc
and
sbb
adc
lock
sub
test
out
cwtl
repz
push
ret
mov
lret
orb
xor
ret
lcall
push
popf
jecxz
push
out
push
lock
ds
mov
mov
sub
stos
add
jp
lret
xchg
idivb
std
mov
and
jecxz
push
aas
xor
jg
xchg
adc
ret
jbe
cli
and
shll
clc
xor
ds
aam
test
xchg
sub
js
inc
mov
lock
lcall
pop
loopne
repnz
mov
adc
xor
sub
pop
sbb
shl
dec
insb
cmpsl
fcompl
shr
push
mov
lea
adc
pusha
lock
sub
pop
jmp
pushf
fstpt
push
jmp
inc
ficoml
ljmp
dec
jl
repnz
ud0
jo
mov
shl
dec
fs
cmp
ja
mov
add
mov
mov
bsr
fcoms
or
aaa
rorb
in
jg
lock
bnd
lock
xor
sbb
pusha
shr
lock
cmp
push
add
insb
xor
mov
repnz
fdiv
lock
std
cmpsb
lahf
arpl
and
mov
mov
sbbl
ds
ds
jo
test
or
pop
cmp
add
cmp
or
dec
mov
icebp
gs
icebp
add
cmp
cwtl
aaa
xlat
enter
lock
ret
inc
js
lea
xchg
push
cld
xchg
pminub
rorb
lock
mov
inc
int
jbe
pop
dec
jno
adc
mov
pop
fidivrl
lock
rorl
push
xchg
std
inc
ret
lock
or
in
aaa
mov
inc
mov
mov
mov
mov
mov
xchg
cmpsb
xchg
xor
arpl
fcomps
push
insl
mov
sub
lods
lods
push
enter
rcl
cltd
in
xor
fiadds
into
iret
pop
or
jecxz
jmp
xchg
lock
in
gs
flds
inc
into
loopne
sti
lock
or
mov
loop
push
or
xor
sbb
mov
pop
dec
xchg
aad
and
and
test
xor
dec
inc
inc
rcrb
call
test
lret
lahf
or
pop
lock
jae
mov
in
stos
rol
sarb
jmp
pushf
xchg
xlat
or
lock
sbbl
pop
inc
dec
mov
pop
jecxz
or
xchg
mov
rolb
push
icebp
xchg
vphaddubq
push
dec
cmp
push
fimuls
mov
addr16
inc
xchg
loopne
out
lret
inc
push
data16
test
sbb
repz
mov
imul
cwtl
push
mov
mov
pop
mov
test
lock
mov
clc
xchg
sbb
sahf
out
imul
fsubrl
adc
xor
ljmp
neg
int3
lock
in
dec
lds
xor
icebp
lods
add
add
inc
in
cmp
ret
cmp
xchg
lock
testl
cmove
cmp
pop
movsl
sbb
mov
xor
xchg
cmp
jb
mov
mov
enter
pop
shll
lock
sbb
pop
orb
mov
aas
test
pop
daa
mov
dec
jae
vmwrite
push
fnstsw
lods
popa
add
jo
test
cmp
jmp
or
mov
lock
dec
dec
repnz
div
movsb
insb
cmp
jnp
cmp
jae
movsl
xchg
arpl
ret
adc
xchg
lock
aad
cmpb
or
sub
in
lock
sbb
leave
insb
push
push
xchg
xor
xor
pop
sbb
rolb
xchg
mov
lea
out
aam
out
inc
cli
jno
push
mov
jne
sub
in
mov
hlt
stos
addr16
and
lods
mov
push
icebp
cs
or
pop
sub
in
insb
lock
and
lock
repz
fildl
xor
jne
stos
mov
cs
loope
cmp
xlat
into
gs
repz
je
in
rorb
pop
fldl
ss
mov
cld
cld
mov
lock
pushf
shlb
in
adc
test
add
lods
bound
and
movsl
shl
dec
jmp
lock
in
jge
or
mov
mov
mov
icebp
fiaddl
into
xor
sub
bound
sbb
test
out
repz
adc
ljmp
inc
fisubrl
hlt
loopne
push
shl
scas
push
xchg
int3
fmull
rcl
and
movsl
fsubrs
int3
and
sub
mov
lock
xchg
popf
jg
in
and
and
jne
lock
add
push
mov
lret
pop
mov
inc
fistpl
jmp
xchg
sub
in
sub
outsl
lods
js
loopne
fsubrs
lahf
or
psubd
xor
ljmp
inc
enter
xlat
xchg
push
xor
movsb
or
sysenter
jl
nop
add
xor
jge
xchg
clc
and
lds
int3
sbb
das
push
mov
jle
adc
or
xor
lods
in
xor
insb
int3
xchg
nop
movsl
pop
jb
sub
or
jo
pushf
push
sub
xor
arpl
lock
ret
dec
std
cmp
dec
repnz
xor
jne
cld
sub
lret
mov
mov
hlt
pop
jo
in
mov
ret
inc
adc
lds
pop
lock
lea
imul
lods
mov
roll
sub
fs
or
inc
repz
lock
xor
mov
subb
inc
xchg
xchg
mov
icebp
mov
lock
lock
sub
hlt
lock
adc
in
shlb
or
cmpsl
fdivrs
push
fwait
in
nop
out
je
fdivrp
lock
mov
or
lods
pop
jp
fildll
aas
xor
jae
js
lock
shlb
mov
icebp
test
inc
rorb
mov
pushf
test
out
jo
jbe
in
mov
andl
lock
shrb
lock
or
sbb
xabort
call
jmp
mov
inc
rorl
ds
in
movsl
cli
dec
ss
lahf
lcall
aad
xor
rorb
jns
or
and
testb
mov
fdiv
mov
shl
inc
stos
test
xor
test
cmp
imul
outsb
std
mov
icebp
jp
hlt
out
or
dec
xchg
lock
into
lock
fistl
lock
in
lods
mov
sub
je
repz
and
lret
mov
pushf
jae
sub
xor
adcb
sub
loop
and
idiv
or
arpl
fmuls
std
aam
lock
fimull
or
push
and
sbb
scas
lock
lcall
test
stos
pusha
cmp
lods
rcr
pop
hlt
adc
enter
add
arpl
dec
xchg
sub
insb
repz
shrd
adcb
adc
sbb
sub
out
lock
test
inc
mov
jle
sub
mov
xor
sti
pop
mov
and
fisubl
jne
int3
sbb
xor
lock
inc
loopne
mulb
cli
insb
mov
jge
into
cwtl
jge
aam
cmpsb
or
cmp
cmp
cwtl
outsl
cmp
add
mov
push
movsb
out
pop
adc
pop
lock
fisttpl
mov
mov
cmpsb
push
test
dec
fnstenv
inc
int3
pop
xor
add
nop
sub
or
mov
aas
orb
dec
je
test
mov
lret
or
fcmove
and
push
leave
popf
rcll
lods
push
or
lock
mov
sub
cmc
lea
lea
stos
sbb
pop
lods
add
adc
cmc
sbbb
lock
fsubs
jmp
enter
divb
jbe
lret
lock
movsl
sub
pop
pop
xor
out
sub
jp
inc
lods
int
pop
xchg
lock
push
stos
pop
clc
jecxz
lock
pop
movsb
ret
jb
inc
outsl
adc
adc
inc
in
mov
js
ret
xlat
or
pop
call
arpl
mov
mov
push
adc
out
je
jb
mov
mov
jbe
insb
sarl
test
or
fadds
push
add
leave
inc
adc
iret
push
cmp
lcall
cmpsl
add
cs
xor
push
jmp
mov
add
lods
lods
ja
lock
dec
push
sub
and
stos
enter
sbb
lock
into
pop
ror
jno
xchg
xchg
sbbb
jae
pop
iret
push
jecxz
ret
or
lock
lods
push
stos
add
jge
mov
out
nop
xchg
je
call
pushf
inc
movsb
jmp
insb
cmc
mov
xor
pop
in
popa
xchg
fldcw
dec
or
and
repnz
or
inc
ror
rolb
adc
bound
nop
xchg
dec
lahf
mov
fisttpll
call
jg
repz
loopne
sub
adc
xlat
fs
lret
hlt
movsl
mov
sahf
insb
aaa
fmuls
fnclex
dec
jl
out
inc
rcl
inc
shl
insl
mov
xor
and
lock
pop
loop
pop
out
lock
cli
int3
fdivp
pop
sub
lea
cmpsl
in
je
jno
jl
in
test
xchg
repz
mov
fisubrs
lock
movsb
lods
icebp
pop
jbe
dec
lock
test
or
sti
insb
mov
push
mov
xor
addr16
in
cltd
jne
movsb
pop
test
pop
xchg
adc
xor
lock
jecxz
push
lock
test
dec
lock
push
cmp
sub
xor
adc
sub
cwtl
inc
test
lods
xor
lock
jg
and
or
sbb
lock
lcall
lock
dec
jle
inc
lcall
mov
inc
lock
popf
daa
or
rolb
test
fcomps
shlb
lock
popf
xor
in
mov
push
mov
divb
repz
pop
into
mov
lock
jecxz
add
xor
jo
or
sub
in
mov
pop
xor
arpl
lock
push
test
sar
pop
xchg
bound
iret
int3
pop
adc
sahf
lock
sub
lea
lock
cmp
insb
inc
repnz
add
pop
stos
add
and
lret
mov
cmpsb
int
lock
out
loopne
cld
or
fnclex
mov
icebp
aad
dec
cmp
les
mov
sub
test
dec
mov
ja
lock
xchg
jmpw
lock
and
fidivl
dec
cld
mov
jl
dec
fwait
arpl
push
repnz
pop
push
loopne
repnz
in
mov
or
fistpl
les
or
sar
clc
mov
movsb
add
lock
fsts
cmpsl
xchg
or
jnp
jmp
mov
push
sbb
push
lock
insb
lods
scas
push
mov
icebp
arpl
popf
add
in
in
stos
jo
xchg
add
inc
lock
add
mov
mov
popa
test
aad
push
stos
xchg
cli
lock
movsb
out
jg
jle
pusha
sub
lock
xchg
in
in
xor
adc
cmp
mov
xor
lods
decb
movsb
pop
in
lock
test
nop
sbb
push
cmp
jle
dec
call
xchg
push
inc
movsl
mov
in
and
lahf
or
push
repz
shl
xchg
pushf
insb
or
xchg
fldt
or
adc
int3
jnp
ret
and
push
lret
nop
clc
rep
push
sub
decb
popf
add
out
add
lock
iret
push
lock
gs
int3
fdiv
out
leave
lock
inc
mov
icebp
sbb
loop
xlat
in
lds
in
xchg
mov
or
adc
ds
in
mov
pop
lock
bound
pop
out
lods
mov
lock
ja
inc
mov
cs
outsl
repz
ss
jo
into
subb
add
or
xchg
inc
jl
sarl
in
inc
xor
into
lods
xor
jecxz
jo
mov
pusha
lock
popf
sbb
std
pop
mov
stos
shl
push
inc
add
lods
lock
sub
call
mov
add
mov
arpl
cld
xchg
pop
imul
icebp
int3
pop
mov
leave
inc
mov
in
pushf
xchg
push
stos
cmp
lret
sub
loop
mov
dec
cld
aas
lods
js
in
into
push
int3
sbb
lock
jno
mov
fimull
and
test
xchg
inc
aas
push
inc
push
lcall
test
xor
mov
jo
cmpsb
aas
ja
lock
mov
ret
gs
push
lea
test
iret
lret
sub
push
push
xchg
adc
lods
int3
icebp
movsb
aad
popf
mov
dec
stos
or
mov
aas
outsb
roll
sbb
jl
jbe
or
sub
and
call
insb
cltd
cld
fs
lock
inc
mov
lods
cmp
int
fstpl
sub
cmpsb
mov
cmp
popf
xor
icebp
lock
mov
add
sub
adc
test
les
lcall
adc
adc
les
and
lds
cmp
in
lock
push
ret
stos
push
pop
or
jno
loopne
add
icebp
xchg
imul
fs
lock
xchg
lock
shlb
mov
lock
xor
sub
push
or
rorb
test
ja
sbbb
test
shl
mov
sub
pop
push
fdivr
lock
xor
add
push
pusha
test
idivb
lods
push
pmullw
mov
cmp
add
push
xor
cmp
das
stos
jecxz
add
and
dec
fistps
cmp
decb
ljmp
in
call
jmp
lods
cmpsb
into
or
js
xlat
addl
mov
or
dec
popf
dec
out
lock
inc
pop
pusha
jo
test
xchg
jne
rep
adc
mov
jl
rorb
xchg
rolb
adc
int3
push
jae
inc
jmp
enter
lock
scas
mov
fcomps
push
je
ret
lcall
dec
movsb
mov
sub
xlat
push
mov
sahf
mov
pop
fistpl
lock
inc
leave
je
sub
sub
xor
inc
sub
insl
mov
xor
cwtl
xchg
mov
test
popf
repnz
cmp
xor
clc
movsl
loopne
dec
std
jl
fs
fimull
push
int3
push
repz
imul
lock
nop
sub
pushf
lock
movsb
ljmp
pop
into
clc
sbb
lret
mov
inc
je
lock
sub
and
and
mov
lea
pop
cmp
lock
aad
lcall
shrb
mov
xor
adc
or
lock
sahf
and
cltd
xor
lods
repnz
and
sbb
lods
jg
jnp
jge
lock
lods
shr
pushf
ljmp
shr
fidivrs
out
jl
lock
test
pop
int3
insb
popf
push
push
pop
lea
std
mov
fisttpll
add
lahf
mov
lock
mov
mov
push
fwait
ljmp
add
pop
int3
push
lret
pusha
sbb
in
je
sub
sarb
lock
lods
pop
mov
jg,pn
cmpsl
gs
jo
lock
push
adc
test
out
jl
test
je
pop
int3
fdivrl
leave
sbb
xor
clc
cwtl
cmp
repz
ss
loopne
lret
push
je
push
push
xchg
xor
dec
push
stos
jle
xor
and
shlb
and
mov
dec
cmp
add
sbbb
pop
jmp
in
mov
shl
shl
rcrb
xchg
push
xor
fisubl
sub
pop
xor
lret
or
cli
mov
mov
cmp
shrb
or
sti
clc
sub
movsl
push
mov
ds
int3
cmp
insb
or
sub
hlt
je
push
loop
lock
jge
xor
mov
xor
inc
js
lock
push
popf
insb
fcomi
jecxz
mov
aam
lods
xchg
and
clc
test
jno
mov
ss
ss
xchg
or
mov
lcall
inc
sub
lock
mov
or
mov
in
jo
push
movsb
xchg
dec
ss
test
cmp
dec
jl
pop
lret
aam
insb
cwtl
lock
test
cmp
call
lock
cmp
movsl
inc
cltd
lock
add
repnz
out
lods
stc
sti
mov
or
lock
or
mov
imul
pop
lock
cmp
mov
ret
push
sti
push
icebp
stos
adc
aaa
sub
jmp
mov
xlat
adc
jl
inc
push
cmp
or
push
cli
lods
pop
jo
push
push
nop
mov
shlb
jg
sbb
je
add
mov
pusha
lods
dec
fwait
add
out
fmuls
adc
xchg
fnstcw
sbb
inc
push
xlat
mov
sbb
lock
pop
push
inc
xchg
lock
enter
xchg
cmp
cmp
fcompl
imul
and
fstpt
pop
popa
jle
nop
sub
sahf
inc
lock
mov
sar
in
movsl
add
sub
xor
shrl
fsubl
adc
sbb
or
xor
and
xchg
aas
or
cmpsb
repz
hlt
mov
xchg
push
dec
clc
addl
test
fmuls
lock
int3
or
aad
or
pminsw
pop
mov
in
lock
lcall
xor
xchg
jo
dec
incb
and
mov
in
xor
icebp
fistpl
and
pop
out
jno
sub
dec
pushf
rorb
lock
mov
cmc
test
out
mov
aas
adc
aaa
int
jo
add
orb
mov
arpl
inc
or
xchg
jno
popf
icebp
adc
insb
xor
into
ja
jnp
sub
call
out
add
and
jg
dec
mov
lock
inc
sub
push
popl
in
jge
fdiv
jmp
incl
into
and
test
mov
cli
push
lock
addl
lock
fadds
lock
dec
mov
jmp
cmp
inc
stos
lods
loop
lock
popf
ljmp
jno
cld
int3
mov
push
or
aad
mov
dec
fsubrs
out
or
push
jo
inc
movsb
xchg
inc
in
pop
jae
adc
fs
jb
dec
insb
cmp
dec
mov
dec
xor
fsubs
push
xor
inc
int3
aaa
mov
mov
call
ljmp
in
lock
fistpl
pop
jge
lock
loopne
mov
dec
cld
lock
dec
aas
mov
imul
arpl
stos
call
dec
inc
sbb
int
aam
cld
lock
sbb
push
movsb
mov
ljmp
ficoml
fs
repz
push
aaa
lcall
test
adc
sub
xor
fcoms
jge
ljmp
jne
push
push
sbb
or
out
icebp
mov
fsubl
out
lock
iret
xchg
sub
pop
inc
int3
lock
in
lock
pop
and
mov
lock
icebp
sbb
adc
lods
out
stc
mov
pop
jns
or
int3
or
pop
and
mov
push
mov
lock
cwtl
adc
movsb
mov
jp
adc
shlb
jne
push
jne
mov
sbb
rorb
sub
je
out
jb
lock
cmpsb
out
push
mov
aam
push
popf
aaa
or
shr
cmp
adc
dec
mov
out
lret
inc
sub
sbb
movsb
cmpsl
add
movb
and
cld
inc
add
test
sbb
pop
lock
inc
addl
jg
subb
mov
push
sub
icebp
fdivrl
in
sub
imul
push
cmc
xor
mov
scas
loop
fimull
nop
aas
fwait
cmp
or
inc
jo
add
rorb
into
adc
add
xor
lds
cmp
lret
fcoml
xchg
sub
pop
loopne
rcrb
iretw
icebp
inc
or
xchg
stos
das
sbb
test
jnp,pn
shl
iret
or
pop
push
lcall
sbb
sub
cwtl
add
lock
xchg
aaa
sub
repz
or
push
out
loopne
pusha
ds
movsl
and
in
jg
and
out
lock
jo
and
cwtl
dec
lock
sub
dec
push
pop
xor
lock
je
sbb
test
inc
add
lock
gs
pop
repz
clc
jnp
movsl
mov
or
cmp
inc
dec
test
out
cmp
popf
loop
insb
lock
int3
lret
movsb
inc
or
mov
mov
fidivs
stc
sub
jecxz
rclb
push
xchg
mov
test
lock
dec
mov
imul
iret
lret
jno
pinsrw
xor
je
cmp
popf
lock
lods
push
shrl
cs
or
pop
jo
mov
jp
int3
mov
xor
push
aas
ja
lock
adc
out
push
jl
mov
jo
insb
xchg
clc
sahf
cmp
jo
shr
add
dec
int
mov
push
lock
adc
inc
push
pop
mov
mov
dec
popa
sub
pop
adc
xchg
push
fs
xchg
push
fistps
outsb
push
add
sets
adc
xor
fisttpll
ss
inc
sub
in
aad
xor
test
cwtl
or
adcl
test
sbb
jmp
and
aad
add
sbb
sbb
movsl
push
js
cmp
stos
pusha
out
in
sub
mov
jbe
cli
loop
mov
lcall
popa
ret
out
or
xor
shrb
inc
lds
sub
cs
leave
ljmp
sub
aam
inc
stos
xchg
or
lock
in
lcall
inc
cmp
lock
adc
clc
add
lock
loopne
stos
and
daa
cmp
sbb
jl
or
pusha
psubusw
arpl
iret
jg
jmp
loope
sub
cmp
lock
mov
xchg
in
fs
xor
fwait
sbb
movsb
fdiv
ljmp
pushf
jo
repnz
js
or
loopne
loop
push
lock
int3
inc
test
jne
insl
in
dec
cmp
adc
movsb
or
rclb
pop
nop
lock
addb
cmc
in
inc
push
lock
cmp
insb
fstl
je
dec
jl
popw
bound
cld
das
lods
mov
in
lock
sbb
sub
push
cld
dec
shlb
repz
dec
pop
sahf
adc
mov
jmp
pop
lock
int3
jp
lock
fildl
out
in
jo
dec
mov
insb
pop
mov
cs
xchg
in
orb
jecxz
cmp
and
dec
adc
lret
and
dec
dec
ja
and
sbb
loopne
mov
lock
dec
or
dec
pop
bswap
and
ja
pop
setge
enter
jno
imul
jo
sub
ja
pop
popa
dec
mov
test
pop
mov
sub
or
mov
lods
lock
shlb
out
inc
lock
mov
pop
loopne
jo
or
aad
lock
es
or
push
xchg
hlt
insb
xchg
out
xchg
stc
ret
aad
call
mov
int3
dec
test
dec
sub
in
mov
rep
mov
jo
inc
mov
outsl
int3
inc
inc
adc
push
je
jae
fistpll
jo
mulb
dec
rcrb
lock
jmp
js
stos
push
fwait
push
imul
xchg
xor
test
jl
repz
and
in
sub
xchg
cmpsb
push
in
jbe
add
test
inc
fwait
or
cld
push
inc
pop
adc
jge
out
gs
lock
aas
cmp
push
push
adc
mov
mov
pop
stos
lock
call
cld
adc
mov
mov
insb
out
sbb
test
aaa
lock
int3
xchg
fdivp
hlt
stos
mov
dec
xor
cwtl
jo
add
inc
jne
or
sbb
jecxz
adc
stos
dec
icebp
jo
daa
aas
fucomp
lods
jo
movsl
sbb
push
cwtl
iret
dec
and
jo,pt
xchg
jne
shl
daa
jmp
inc
je
aaa
push
roll
aad
jmp
lds
hlt
add
ljmp
insb
fcompl
call
push
and
sbb
ret
outsb
pop
cwtl
xchg
xor
daa
lock
add
pop
in
pop
add
insb
jo
push
lahf
faddl
lock
sub
aad
inc
int3
pop
repz
mov
imul
lock
ljmp
lcall
lret
lock
in
std
cmp
aad
lds
push
outsb
data16
test
mov
ss
enter
jbe
inc
sbb
lock
push
or
add
or
jmp
fdiv
jge
cs
test
stc
push
rclb
sub
adc
rep
dec
xor
xorl
dec
push
push
call
adc
xchg
lock
xchg
lock
push
mov
sub
lret
mov
xor
loop
jmp
push
pop
test
xchg
lock
rolb
fsubrs
clc
lcall
aam
sub
lret
jge
lock
into
lret
cmc
cwtl
jo
lods
add
divb
lds
mov
push
lret
mov
and
hlt
add
lock
add
fmul
mov
lock
xchg
or
dec
jae
push
fstpt
lfs
mov
or
lock
adc
sarb
ss
jbe
repz
dec
inc
cwtl
lea
in
lods
mov
mov
pop
popa
div
out
enter
andb
les
sbb
lock
inc
insl
mov
pop
lahf
lock
adc
std
mov
seta
sub
cli
test
rolb
and
xor
hlt
adc
ss
jae
nop
pop
add
stos
in
aas
in
test
ret
xchg
lock
sahf
xor
push
push
mov
sti
push
jo
xor
notb
lods
test
mov
repz
dec
push
je
setns
mov
mov
daa
push
adc
pcmpeqw
mov
shlb
test
lods
outsb
loope
and
jne
bts
xor
mov
mov
lcall
es
subb
insl
mov
das
pop
jnp
repz
repz
stc
jle
sahf
push
insb
jns
lock
pusha
push
mov
stos
cwtl
fdivrs
lock
xchg
push
lock
sbb
lahf
push
jge
lock
flds
jbe
inc
add
pusha
lock
dec
xchg
pop
xchg
fldenv
filds
pop
lock
jge
into
fidivs
movsb
lock
cmp
movsl
sbb
aas
pop
loope
lock
add
imul
fadds
ja
inc
xchg
mov
dec
mov
mov
push
pop
out
test
lock
pop
push
jns
lock
mov
pop
xor
push
mov
lock
adc
mov
jne
outsl
mov
push
mov
push
sub
loop
lock
ret
cltd
cld
push
movsl
lock
push
xor
jne
lods
aaa
decl
jo
sets
push
jle
jno
lock
and
sbb
movsl
dec
lock
movsb
jge
pop
mov
mov
cwtl
add
jl
in
mov
lock
test
and
inc
gs
push
lock
outsb
js
lods
xor
lock
sub
cmp
push
and
sbb
mov
movsb
lock
xchg
test
loop
lock
push
sub
xchg
jecxz
mov
sub
aam
repnz
movsl
jb
xchg
dec
pop
add
nop
imul
or
adc
jnp
loop
test
mov
push
js
mov
sbbb
cmpsl
mov
adc
cmpsb
lock
xchg
inc
sub
lock
add
lock
inc
movsl
mov
mov
cmp
les
xchg
test
fs
pop
pusha
test
lock
stos
push
xchg
dec
sub
dec
mov
scas
mov
pop
dec
lock
push
lock
jae
dec
lea
dec
es
cmp
outsl
iret
lock
push
mov
xor
lock
movsb
pushf
and
lock
mov
xor
fdivrs
mov
adc
push
mov
lock
inc
xor
orl
subb
xlat
outsl
pop
jo
xchg
mov
fildl
movsl
ss
jbe
lods
in
pop
mov
icebp
lock
mov
mov
repz
push
dec
out
jo
dec
ljmp
lock
jmp
pop
loop
repnz
add
xor
loopne
repz
adc
lss
dec
dec
pop
popf
xorb
xor
xor
orl
fcom
repnz
fnsave
bts
adc
cs
test
in
or
adc
adc
sbb
std
sub
adc
pop
sarb
cmp
subb
jp
lock
mov
mov
xchg
xchg
test
addr16
movsb
sub
leave
cvtdq2ps
mov
subb
adc
adc
xchg
cli
mull
lock
push
jl
lock
aam
inc
lock
or
adc
rcr
push
mov
aaa
jg
dec
aad
fcoml
sbb
mov
jle
imul
push
pop
adc
out
std
dec
loop
inc
pop
xor
mov
test
ja
insl
xchg
mov
sbb
push
mov
and
icebp
mov
and
lgs
xchg
mov
xor
into
fldenv
loope
int
lock
lea
lock
sub
lock
add
sbb
cmp
xlat
ss
leave
push
arpl
or
push
jo
add
lods
jns
mov
leave
jl
cmp
mov
sahf
loopne
cmc
lock
gs
icebp
jo
cmp
test
and
lock
cmp
icebp
dec
push
cli
mov
pop
aad
add
jnp
in
aas
adc
fsubrs
int3
shl
enter
mov
outsb
jne
lock
insl
jg
lods
int3
sub
mov
es
call
push
nop
cmpsb
mov
into
daa
xchg
jge
mov
icebp
ja
movsb
out
jne
and
push
fdivrl
sbb
mov
jo
sbb
clc
or
into
mov
cwtl
push
mov
sti
cmp
lcall
mov
xchg
les
test
or
cmpsb
lock
lret
jle
xor
cli
jp
add
bound
test
movsb
lock
insb
shll
mov
add
call
int
leave
or
or
xchg
jns
sbb
in
adc
ret
lods
pop
mov
add
pop
jo
mov
xchg
push
insl
jnp
fiadds
pop
repz
cmpsb
shl
mov
add
add
into
or
cmp
fadds
lock
popa
lock
fidivrs
imul
and
das
jmp
clc
and
add
mov
lock
flds
or
mov
int3
scas
xor
fildl
or
push
mov
out
lock
or
std
test
lock
add
popf
dec
addr16
sbb
mov
lock
movsl
ret
cmp
lock
adc
lock
int
decl
mov
fucomip
and
repz
lock
jbe
icebp
mov
and
popf
jge
cmp
sub
xchg
push
add
push
mov
cmp
mov
call
lock
push
jne
inc
dec
xor
bound
cmp
aaa
cld
mov
loope
lock
dec
outsl
adcb
sub
jp
or
movsl
stos
mov
repz
add
imul
xchg
jle
jecxz
pop
shlb
ss
and
aad
lahf
es
adc
mov
cld
dec
loop
inc
cwtl
xor
xor
or
js
imul
sub
inc
jp
ljmp
and
add
xor
xchg
out
sbb
repz
cld
les
stos
lock
movsb
inc
mov
push
popa
ja
repz
shll
out
xchg
sbb
mov
jo
sub
dec
ss
adc
lock
inc
movsl
cmp
pop
lret
xor
lock
jne
shlb
xchg
mov
rclb
xlat
sbbl
jmp
lock
test
lock
mov
or
push
in
mov
mov
sbb
in
push
sti
adc
xor
xor
cwtl
lock
xor
jno
clc
adc
cmp
hlt
test
lock
mov
out
movsb
cli
leave
push
and
mov
popl
and
jne
call
movsl
sbb
dec
fistl
lock
ljmp
lock
pop
das
loop
lock
and
movsl
lock
jbe
in
ds
cmp
mov
int3
cmp
movsb
addl
mov
mov
mov
lahf
fisttpll
mov
out
in
repnz
in
out
ret
lret
movb
mov
adc
xchg
cmc
dec
popf
pusha
rcll
outsl
stc
test
and
adc
cmc
push
fsubrl
adc
das
stos
or
fwait
lock
insl
int3
jae
mov
in
mov
pop
lahf
nop
jns
xchg
stos
test
jl
jo
adc
testb
xor
push
cmpsb
mov
jg
inc
push
icebp
fcoml
sub
mov
lock
scas
sbb
test
and
cli
fcomi
pop
std
push
loop
pop
sub
out
inc
lock
mov
daa
test
pop
jl
icebp
or
jo
je
add
pusha
and
rorl
and
push
xor
ljmp
mov
or
aam
jnp
int3
xor
jo
ljmp
in
pop
aaa
lock
rcl
and
cltd
push
mov
leave
scas
xchg
arpl
rclb
lret
pop
test
stos
repnz
stc
lahf
insb
inc
cmpb
jl
push
shlb
jp
lahf
enter
cmovae
repz
dec
mov
mov
lods
and
loopnew
push
pop
or
jae
jo
roll
in
outsl
lock
push
call
mov
scas
sub
push
int3
sub
dec
movsb
push
push
fs
outsb
push
insl
xor
test
dec
cli
add
lock
jne
out
add
aaa
or
lock
sbb
mov
or
xor
dec
adc
fs
push
xchg
bound
push
std
sbb
ds
loope
inc
pop
inc
and
cmp
sub
shlb
lock
ret
xchg
xor
lcall
and
les
xchg
nop
dec
mov
nop
jecxz
xchg
fldenv
mov
add
bound
sarb
call
mov
mov
in
mov
jecxz
bswap
mov
push
push
lcall
xchg
adc
call
repnz
mov
lcall
imul
push
sbb
xor
inc
xchg
dec
mov
loop
lock
lret
es
icebp
pop
cmp
fistpll
hlt
cmp
pop
lock
rclb
xor
mov
fwait
sub
inc
fcmovnb
repnz
fs
add
addl
fists
mov
push
popl
jl
mov
aas
sub
pop
push
push
arpl
mov
popf
rolb
lock
push
xor
ficompl
cmpsb
add
in
nop
and
mov
lock
fsubr
rorb
sti
pop
lods
lock
push
lret
add
and
jle
pop
movsb
mov
push
fmuls
jo
jb
ret
maxps
fiaddl
sub
or
mov
pushf
outsb
mov
adc
out
les
aaa
jo
sahf
enter
lock
pop
clc
push
pcmpgtb
mov
lods
mov
pushf
adc
dec
xchg
add
rclb
icebp
inc
orl
lea
hlt
outsl
xchg
push
mov
pop
rclb
push
xor
lock
push
hlt
mov
pop
nop
lock
idiv
aaa
outsb
in
lock
aad
stos
shlb
or
jmp
fsubrs
lock
inc
push
cmpsb
hlt
lahf
pop
icebp
or
aaa
loopne
popf
lock
jp
pop
push
xchg
pop
cmpsl
dec
fstps
sti
sahf
test
clc
xchg
cld
repz
dec
lock
testl
lock
fs
dec
cmp
movsl
shl
sbb
loop
xchg
repz
sub
dec
lock
xchg
mov
jno
sub
hlt
in
ret
cmp
push
arpl
and
lock
rcrl
lock
aas
ljmp
cs
lock
mov
iret
popf
repnz
sbb
cmp
push
mov
js
ja
ficoml
push
aad
leave
jae
lock
mov
int3
adc
jns
lock
idivl
pop
mov
loop
icebp
jne
xchg
dec
mov
fsubr
cltd
repnz
add
push
bound
sbb
mov
push
xor
icebp
xlat
push
mov
jp
jo
pop
out
push
xchg
lock
and
xchg
and
add
or
icebp
fnsave
xorb
cmp
std
into
xor
pop
xchg
lahf
push
lock
mov
inc
aaa
icebp
adc
xlat
cmpsb
push
scas
outsb
in
dec
repz
cwtl
xchg
in
enter
psubsb
mov
sbb
xor
or
rcr
aaa
push
movsl
add
mov
div
outsl
cmp
aaa
mov
adc
inc
xchg
orl
push
jbe
sbb
ret
sub
xor
and
icebp
dec
mull
add
in
push
adc
ja
cld
xchg
mov
mov
inc
unpcklps
adc
adc
ja
push
jne
mov
jg
dec
mov
faddl
sbb
dec
pop
jge
sub
mov
push
inc
std
or
nop
pop
mov
sysret
xchg
fnstsw
test
xchg
addb
popf
push
insl
push
adc
in
add
or
mov
xchg
lock
daa
xor
into
xor
jnp
and
loope
test
mov
push
arpl
mov
inc
pop
pop
lret
aam
subb
sub
jo
cwtl
arpl
push
jg
mov
fdivs
push
xchg
repnz
inc
dec
pop
lahf
ret
sub
lock
nop
mov
cmp
mov
mov
movsl
cmpsb
bnd
sbb
imul
sub
fs
test
fimuls
aas
mov
pushl
addl
adc
leave
and
ret
clc
lock
imul
mov
lock
adc
frstor
xor
dec
lock
lods
pop
out
aam
icebp
stos
inc
xchg
repz
sub
aam
inc
icebp
lahf
inc
mov
mov
xchg
mov
int
faddp
mov
push
push
mov
xchg
xor
mov
and
mov
stos
out
xchg
rorb
ret
lock
adc
enter
lock
inc
xchg
lock
int3
mov
xchg
ret
mov
ja
sbb
call
fisttpl
mov
lock
movsb
insb
jnp
pushl
dec
pop
mov
add
lock
mov
or
lock
pop
sub
add
pop
push
jb
lds
pop
mov
in
sub
mov
in
lcall
xor
mov
push
mov
add
into
mov
xor
sub
mov
lahf
pop
mov
cmp
addr16
lret
icebp
or
imul
push
pop
lock
stos
out
sbb
and
inc
add
pop
ljmp
xchg
xor
scas
mulb
add
fcomi
push
pushf
push
mov
fbstp
adc
or
cmp
insl
shl
push
stos
in
sbb
lock
push
std
pop
sub
mov
lcall
rol
gs
mov
or
flds
inc
jno
js
repnz
jmp
dec
sbb
dec
sahf
repz
ljmp
mov
xor
cli
icebp
sbb
out
jno
lock
rcll
lock
inc
push
ret
sbb
ja
inc
mov
test
mov
mov
pop
dec
shl
jecxz
sti
push
fsubrl
jo
or
lds
xchg
mov
popa
push
outsb
mov
jo
mov
dec
xor
jecxz
icebp
mov
repnz
fst
mov
jo
mov
popf
mov
or
jg
xor
into
push
push
pop
lock
pop
or
hlt
js
xchg
mov
or
pop
repnz
adc
add
dec
or
mov
ljmp
gs
sub
movsl
shrb
or
inc
fcmovbe
insl
push
ds
jle
lock
mov
movsb
test
into
sub
dec
sbb
lret
and
hlt
and
dec
mov
or
xchg
pop
testb
sub
shl
lock
adc
ja
lock
sbbb
lock
xchg
pop
sbb
mov
or
out
jno
and
lock
adc
movsb
sbb
icebp
mov
es
adc
pop
mov
dec
jg
inc
xor
aaa
loop
push
cld
dec
or
sub
sbb
icebp
scas
lock
mov
movsb
les
lock
mov
push
ss
gs
ljmp
mov
push
lods
pop
or
arpl
js
sub
lock
out
pop
adc
loop
icebp
icebp
xor
mov
cmp
ss
mov
pusha
inc
mov
cs
insl
lock
movsl
mov
mov
xor
and
add
push
xchg
xlat
lock
mov
lock
stos
test
lock
and
sti
cwtl
push
movsl
lock
mov
xchg
xorb
push
les
push
mov
jnp
rclb
push
push
adc
mov
enter
jmp
test
cmc
xchg
lock
lahf
test
in
pop
jns
scas
cmpsb
inc
inc
xchg
movsb
stos
lock
cmpsl
ja
adc
mov
or
push
dec
xorb
inc
lock
les
and
nop
and
ds
mov
push
xchg
pop
mov
lock
lea
pop
test
test
aas
mulw
leave
das
pusha
and
jo
test
and
and
repz
fwait
cltd
int
out
movsl
cmp
or
lret
mov
jnp
lock
pusha
lea
ja
inc
sub
jmp
lock
popa
scas
fcmovbe
mov
xchg
lock
jecxz
frstor
lock
es
mov
lcall
xor
pop
cmp
leave
pop
jbe
sahf
stc
adc
mov
pop
xor
sbb
cli
cmpsb
cmp
sti
and
xor
mov
dec
inc
into
cmp
repz
dec
jo
sahf
mov
add
rcrl
sbb
das
fs
fldt
int3
mov
in
in
push
push
lock
mov
out
cmp
fwait
lock
dec
fcoml
movsb
fldl
lret
nop
aaa
inc
sahf
imull
je
lahf
pop
sbb
daa
adc
adcl
out
movsb
ja
icebp
xchg
pushf
movsl
xchg
loopnew
and
mov
enter
loope
add
dec
lock
repz
sbb
adc
jge
and
movsb
sub
jle
mov
lock
jnp
shll
scas
lock
movsb
inc
bound
arpl
xor
imul
ss
xchg
jno
jns
lock
push
ja
je
sub
daa
int
imul
std
push
or
or
jo
icebp
mov
aam
push
mov
lock
push
xchg
mov
xor
or
stos
lock
mov
shl
adc
add
sbb
push
cmp
push
sub
lock
mov
xor
fs
cld
adc
sub
enter
xor
std
xacquire
stos
pop
mov
rcrb
lcall
adcl
lods
aaa
fildl
jo
mov
lock
jnp
or
cwtl
ja
lods
movsl
insb
mov
pop
aas
lock
dec
call
hlt
repnz
sbb
jo
sbb
mov
lock
xchg
sub
push
inc
shrb
pop
movsb
dec
sub
or
adc
into
jmp
lock
jp
popa
sub
in
iret
pop
imul
movsb
outsl
out
or
out
lahf
cltd
sub
out
push
add
div
push
xchg
inc
icebp
inc
mov
mov
in
sti
lods
add
cmp
lock
sysexit
xchg
xor
clc
shrb
cs
stos
jno
aaa
aam
mov
sbb
sbb
lock
add
push
xor
xchg
push
iret
aad
or
pushf
jb
fdivl
pop
sbb
or
lock
jmp
pop
push
or
mov
aaa
ja
push
icebp
popf
and
mov
mov
sbb
xchg
test
movsb
xchg
push
loope
repz
pop
popl
outsb
sub
jo
mov
and
lcall
rol
pop
push
out
mov
sbb
and
int
pushf
dec
sarb
xor
mov
cmp
fcomps
and
xor
mov
lock
movsb
add
in
shlb
lock
call
out
adc
loop
imul
lock
movsb
imul
mov
sub
xchg
lock
in
shlb
sbb
lock
add
push
or
cmp
add
fsubl
std
loop
icebp
fiadds
in
mov
repz
or
in
add
add
mov
jne
gs
dec
sub
add
ljmp
aaa
xchg
mov
lock
xchg
pop
lock
jo
repz
and
insb
lock
pop
pushf
xchg
lods
daa
cmp
pop
dec
and
iret
mov
mov
mov
cmp
rcrl
les
out
movsb
fsincos
xor
mov
jns
ret
xor
rolb
out
jo
mov
aam
outsl
mov
lock
mov
xor
aas
xor
push
jo
xor
inc
mov
idivl
js
jns
xor
fs
push
in
repz
lock
paddb
jno
fsubl
cmpsb
xor
or
icebp
jl
imul
sub
pop
fwait
xchg
popf
std
js
xor
pop
maskmovq
imull
cmpb
or
fidivl
push
wrmsr
pop
add
and
test
jo
fadds
icebp
es
add
xor
loop
into
lds
test
xchg
mov
lock
subb
lods
pop
lock
add
rcrb
cltd
cmp
fdivs
xchg
je
xor
outsb
orl
lock
ret
fsubl
es
arpl
roll
jo
sahf
in
divl
mov
clc
sbb
dec
sbb
cli
icebp
push
cmp
mov
cs
popa
sub
cld
loope
push
lock
pop
jae
in
add
sub
fwait
add
pop
ret
sti
xchg
std
inc
inc
push
sub
fcomip
outsb
stos
pop
addr16
aas
daa
jo
dec
pop
imul
clc
xor
push
jo
xor
aaa
sarl
lock
dec
in
mov
das
add
pop
enter
ficoml
sub
shl
xchg
jmp
push
das
mov
sbb
sub
lock
imul
adc
fiaddl
lcall
add
mov
add
dec
popa
shrb
imul
mov
jo
xchg
adc
bound
gs
push
insb
std
lock
jno
push
cltd
or
mov
aad
movsb
lock
sbb
dec
lock
push
inc
mov
lock
shlb
xor
pop
jno
or
xchg
mov
cmp
sbb
lea
test
ja
sahf
mov
pop
dec
cmp
or
lock
mov
adc
lock
pop
movsb
lods
cli
cmpl
adc
cld
scas
fs
jae
imul
mov
lret
jbe
loop
lock
add
out
aad
aas
dec
lods
leave
mov
repz
scas
cli
call
adc
mov
lock
or
push
or
push
mov
cmp
test
rcr
ret
mov
nop
mov
mov
insl
not
je
xor
or
lock
and
ja
jle
pop
and
jmp
adc
fsubrs
stos
sbb
inc
aam
out
gs
mov
repz
dec
popf
lock
shll
sbb
lock
clc
rolb
stc
movsl
jb
xor
fldz
mov
xor
mov
sti
pusha
lret
repnz
testl
inc
push
lock
xor
lret
test
lock
and
inc
imul
xchg
stos
jecxz
lock
jns
jb
das
cmp
lock
xchg
pop
das
lahf
idiv
fwait
repz
jo
push
in
mov
es
test
out
in
xchg
and
mov
jnp
jbe
jge
repz
or
adc
fs
jns
xorb
inc
in
inc
jo
repnz
das
test
hlt
dec
xor
popa
repz
es
or
sub
inc
enter
mov
sub
shlb
sub
fdivl
lock
cmp
or
fsubs
push
sbb
vsqrtss
pmaxsw
push
cmc
and
push
adc
sub
out
pushf
xor
arpl
loop
icebp
ds
mov
xor
sbb
mov
mov
sbb
loope
cltd
ja
call
test
fs
add
push
iret
adc
in
adc
test
mov
pop
add
dec
lds
adc
or
iret
add
fcomps
mov
js
or
repz
fdivrs
sti
mov
jmp
mov
pop
sbb
sbb
inc
fcomip
jo
in
adc
movsb
mov
lock
pop
sub
inc
cmp
lock
xchg
icebp
push
pop
jb
cmp
mov
mov
fnstsw
jmp
dec
cmp
pop
push
nop
incl
vshufps
movsb
adc
jge
lock
movsl
pop
dec
cmpsl
addb
outsl
cmc
movsb
dec
rorl
loope
cmp
push
pop
sti
lock
or
inc
xchg
aaa
lock
mov
xor
mov
leave
jmp
lahf
push
inc
mov
lea
mov
into
mov
lock
jg
xchg
or
cltd
js
adc
xchg
mov
repnz
pop
enter
add
lcall
pop
dec
sti
mov
outsb
xchg
test
mov
and
push
push
sarl
xor
out
adc
pop
xor
mov
adc
loop
lock
loope
into
or
fidivrl
shrl
icebp
repnz
sub
mov
int
mov
cltd
test
xor
rolb
mov
mov
lock
lahf
jns
lock
iret
jl
inc
or
sti
mov
stos
sahf
rcll
fsubp
lock
and
sbb
inc
mov
xchg
pop
daa
sub
lock
adc
xor
movl
stos
xor
fs
adc
pop
adc
lock
mov
int3
dec
dec
lock
push
mov
fisubrl
adc
test
fwait
out
xchg
lret
lods
lock
pop
pop
lods
adc
or
xchg
lock
je
loope
xor
and
les
pushf
push
lock
lock
adc
scas
in
xor
jmp
mov
dec
loope
mov
imul
inc
cwtl
cmp
push
or
pshufw
out
dec
test
push
loop
fwait
sub
cmpsb
icebp
mov
xchg
adc
mov
mov
loopne
iret
and
mov
insb
xor
sub
jno
aad
mov
in
mov
call
mov
in
mov
ja
adc
jl
fldz
xor
lock
mov
nop
pusha
pushf
mov
xchg
or
imul
mov
push
cmp
jo
cmpsb
fdivp
outsl
jo
lret
pop
incb
mov
push
divl
xor
adc
lock
lods
test
repnz
push
imul
icebp
bound
mov
adc
xor
and
add
adc
sti
xor
xchg
fcomip
add
ja
fcomi
jge
scas
mov
in
lock
sbb
inc
ja
loop
lock
fildl
dec
sub
mov
setbe
mov
fwait
mov
mov
pop
sub
stos
adc
xchg
icebp
cs
fmul
loop
sbb
jge
cmpsl
repnz
push
mov
out
pop
mov
cld
das
lret
out
mov
xchg
rcll
lock
loopne
lahf
stc
or
xor
in
pmuludq
push
jae
lods
fisubrl
dec
dec
sahf
ss
jo
sub
mov
xor
pop
xchg
jae
and
lahf
push
fistps
dec
sbb
inc
mov
mov
xchg
lock
mov
push
lock
push
jns
jb
into
repz
xor
lock
inc
lock
pushf
push
lock
ficomps
ss
lock
jp
mov
cmpsl
fimull
out
les
test
in
xchg
add
repz
stos
and
gs
mov
pop
das
les
push
leave
shrl
pop
icebp
lock
mov
inc
aaa
div
enter
sub
addr16
sub
push
sbb
loop
icebp
add
cmp
out
lock
push
add
stos
rorb
ljmp
adc
data16
pushf
dec
incl
popa
xor
test
adc
jg
sbb
xchg
lock
mov
push
and
jns
push
xchg
testl
outsl
push
xchg
lock
inc
incl
daa
sub
addl
pop
ja
movsl
lahf
lock
adcb
push
dec
mov
mov
mov
pop
ds
insl
div
cmp
clc
and
andb
lret
inc
pop
adc
mov
bound
lock
jno
test
and
inc
lcall
xchg
sub
das
add
or
jecxz
or
sub
jae
cs
lret
movsb
fsubrs
or
les
mov
adc
pop
xor
clc
mov
stc
movsl
sbb
adc
dec
outsl
xor
std
pusha
xchg
push
iret
lock
inc
movsl
cmc
in
pop
aad
add
lock
int
inc
mov
out
lock
idiv
jge
xor
imul
jns
sbb
push
dec
jecxz
mov
mov
xchg
mov
sahf
push
xchg
nop
mov
jg
inc
add
sbb
lock
sub
mov
in
lock
aas
mov
out
insl
and
mov
pop
pop
push
push
movsb
lock
cs
data16
stos
or
xchg
or
movsl
test
pop
adc
jge
into
xchg
and
aam
add
movsb
xor
mov
mov
inc
lods
jnp
lret
xchg
jns
fadds
jge
sub
adc
repnz
aam
lahf
pop
fs
and
movsb
arpl
push
cmp
push
xchg
pop
outsl
cmpsl
dec
fdivp
lahf
ficomps
dec
jl
out
pop
or
jb
out
sahf
out
in
mov
sar
lock
push
jecxz
scas
xor
push
and
loopne
lock
sub
sub
lock
insb
jae
jp
add
out
icebp
inc
in
movsl
in
dec
insl
jo
scas
lods
sbb
xchg
icebp
std
push
sub
outsb
sbb
inc
jge
fwait
test
push
mov
ret
push
ret
jmp
or
leave
xor
xor
xchg
jo
sbb
outsb
push
int3
ljmp
xchg
add
mov
jecxz
xchg
adc
adc
xlat
lock
fimuls
icebp
pop
stos
nop
jno
jecxz
jb
insb
cmp
lcall
aad
enter
or
fcomi
in
in
lds
jo
js
mov
arpl
lock
iret
out
rorl
jo
cmp
dec
lock
lret
f2xm1
int
dec
fs
rorl
jns
push
ljmp
push
fnstcw
aam
jbe
pop
call
mov
lock
lods
sub
inc
xor
mov
mov
nop
mov
push
fiadds
pop
pop
inc
lret
stc
adc
cmp
push
mov
xor
add
loop
lock
fs
push
imulb
mov
jl
add
inc
lock
movsl
fs
adc
and
mov
out
push
stc
addr16
lock
or
insb
subb
push
mov
mov
xor
jo
jae
stos
repz
mov
outsl
cmp
movsb
jmp
gs
repnz
ret
stos
out
xchg
nop
push
mov
or
push
sub
rdtsc
jno
aas
pop
mov
and
jle
lds
daa
inc
push
data16
sbb
or
xchg
out
loope
push
cltd
addr16
icebp
stos
sbb
mov
out
lods
int3
std
shl
movsb
rol
sub
loopne
lock
jae
inc
lret
mov
lfs
movsb
lock
and
dec
xor
adc
ret
sub
or
push
mov
adc
push
or
mov
inc
mov
lock
test
lock
cmp
fcompl
mov
and
cld
push
mov
lock
test
dec
pushf
or
lock
js
xchg
mov
sahf
lock
lods
ret
adc
lock
sbb
incb
stos
subb
dec
jmp
add
lods
inc
ret
in
das
pop
lock
dec
xchg
cmpsb
or
and
jge
mov
lock
lahf
dec
dec
enter
or
push
inc
scas
mov
and
xor
leave
sub
cmp
add
jo
or
clc
cmp
lock
cmc
mov
push
lahf
adc
cs
test
daa
pushf
pop
outsl
xchg
adc
icebp
mov
adc
lock
mov
pop
sbb
in
mov
or
outsb
push
inc
aad
jl
lock
movsb
or
or
mov
xor
dec
arpl
xor
and
dec
xor
cld
pop
in
push
jnp
jns
lock
xor
mov
jge
push
mov
mov
lcall
std
lock
insl
loope
mov
loopne
push
outsl
popa
push
lock
mov
push
scas
adc
push
rorl
or
sahf
and
push
mov
mov
lock
inc
dec
mov
xchg
mov
pop
lock
fsubrs
sub
pop
jae
dec
rcl
push
aam
lea
sti
rolb
pop
call
xor
lcall
sub
lock
cltd
pop
lock
mov
sub
lock
daa
mov
xor
hlt
jb
inc
jmp
add
cmp
cmpsl
dec
cmp
lock
cmp
inc
lock
das
add
nop
cmc
sub
hlt
ljmp
fcoms
pop
mov
and
dec
fists
pop
push
cwtl
mov
out
in
test
add
sub
xchg
xchg
fdivrl
js
lock
test
sbb
and
addr16
lret
lock
cmp
popf
adc
icebp
add
daa
adc
xor
push
mov
pop
fcmovb
cmp
repz
cwtl
sub
lock
jp
mov
pop
mov
lock
test
pop
pop
jl
sar
lock
clc
mov
stc
push
or
pushf
mov
jge
testl
in
inc
cltd
loopne
mov
xor
mov
pop
sbb
and
cltd
push
incb
inc
lock
hlt
lock
bsr
inc
outsl
test
inc
xchg
or
push
shlb
cvtpi2ps
dec
adc
pop
mov
cmp
imul
jge
data16
adc
mov
ss
test
lock
sbb
push
icebp
icebp
push
or
adc
sub
xchg
inc
cmp
roll
pop
or
mov
out
int3
ja
pop
inc
push
mov
lcall
sbbb
int
mov
pop
jbe
pop
sub
rolb
cld
fidivrl
jo
lock
test
or
repz
sbb
jo
jle
aaa
insl
lcall
ja
lock
or
in
jp
or
push
test
mov
mov
popf
pushf
lret
mov
jp,pt
mov
lock
nop
mov
lock
subl
mov
mov
les
jbe
js
lock
inc
outsb
call
fs
ds
lock
inc
repnz
rcrl
pop
mov
mov
stos
push
pop
fdivrl
into
test
out
jo
testl
sbb
or
mov
dec
dec
add
js
ljmp
shl
shl
bound
push
and
or
pop
ja
pusha
lods
lock
jo
mov
mov
jo
aam
cltd
pusha
or
push
scas
sub
mov
lock
pop
stos
std
stos
push
fcomps
scas
mov
push
push
in
and
sbb
lods
packsswb
loope
rcrb
xor
mov
lock
test
lock
jecxz
stos
push
adc
pop
inc
adc
cmp
pop
mov
jo
push
xor
mov
sahf
int3
lock
jbe
dec
pop
popf
mov
das
cmc
mov
mov
adc
insl
ret
sub
lock
xchg
or
icebp
mov
cmpsb
iret
sub
lock
pop
in
xor
dec
xchg
mov
pop
int
daa
jp
ljmp
maskmovq
fwait
mov
mov
addb
mov
inc
scas
mov
jae
stc
aad
xor
outsl
mov
mov
xor
sub
sub
insl
test
ljmp
and
sbb
lret
jmp
stos
pop
add
addb
fcmovne
inc
rorb
cmp
in
cmp
icebp
and
inc
adc
pop
ret
xchg
pop
dec
lock
cmp
mov
mov
or
rcll
insl
add
push
lock
mov
movsl
in
lock
mov
stos
cmp
lock
dec
movsl
or
lock
cmp
and
xchg
jp
dec
inc
movsl
add
lock
add
outsl
and
adc
pop
xor
xor
sahf
push
push
mov
daa
pop
pop
test
mov
jmp
dec
dec
jmp
sub
pushf
rolw
in
lock
fldl2t
xchg
push
pop
repz
cmc
popl
jb
call
mov
imull
fdivrs
push
adc
adc
dec
cld
shl
mov
or
jecxz
lock
fwait
lock
dec
cmp
lock
adc
jge
jno
fsubs
pusha
lock
lods
mov
test
jp
jle
cwtl
sbb
lret
sbb
filds
dec
pushf
out
mov
imul
je
push
ss
and
pushf
push
pop
adc
dec
lock
stos
sbb
add
orl
inc
and
add
pop
pop
cmp
data16
add
xchg
movsl
icebp
repz
pop
dec
add
pop
shl
sbb
mov
pop
jns
or
add
enter
addl
cwtl
adc
loope
mov
sahf
push
gs
std
mov
dec
adc
rorb
cmp
cmp
sahf
insb
lock
push
push
push
rcll
xor
lock
pop
add
jg
pop
push
stc
aas
in
sar
ffreep
mov
lds
fsubrl
daa
push
jmp
addr16
mov
xchg
xor
jnp
push
sub
lock
push
add
bound
add
and
scas
xchg
lock
js
push
lcall
fists
pop
pusha
xlat
bound
push
pop
js
jp
je
jbe
jbe
jbe
jbe
jbe
jbe
lock
jmp
jns
sbb
jp
fistpl
pop
mov
jle
js
jp
je
jbe
jbe
jbe
jbe
jbe
jbe
lock
mov
outsb
jge
jne
mov
dec
mov
and
push
rcrl
add
loope
stc
ljmp
outsl
lret
or
push
clc
xchg
int3
insb
enter
push
cmpsl
in
insl
jp
data16
pop
lock
mov
mov
jo
insl
push
adcl
lock
push
mov
addr16
jne
jl
fldcw
pop
jmp
xor
dec
stc
cmp
stc
adc
and
sbb
sti
out
add
out
sti
out
in
out
in
fsubrp
shr
out
int
out
mov
lods
mov
xchg
test
xor
xchg
push
vpmacsswd
int
push
xchg
dec
mov
cmp
hlt
adc
and
xchg
pop
sbb
or
repz
fchs
sar
jmp
fdivrp
ret
stc
aam
int
stc
enter
mov
scas
clc
cmpsb
jmp
stos
push
pushf
sbb
jo
mov
jge
ja
outsb
leave
push
shll
push
ljmp
aas
stc
ss
cmp
sub
and
stc
sbb
or
jecxz
hlt
hlt
in
hlt
out
sbb
fldl
dec
mov
cmpsb
mov
inc
enter
cmp
cs
adc
sub
dec
aas
rcl
fucomip
shl
stc
mov
insl
lock
push
cltd
push
jno
mov
push
ja
jns
gs
pop
xchg
dec
pop
dec
inc
and
or
out
lret
mov
mov
shl
jo
je
icebp
jp
fs
push
xchg
in
loopne
cld
clc
cmc
hlt
sar
in
fdivp
fcomi
mov
in
jo
icebp
jg
push
pop
push
xchg
xor
aad
sub
add
sbb
pop
xchg
loopne
clc
mov
sbb
push
ds
cmp
jmp
jp
sbb
mov
pusha
dec
jns
lret
push
mov
xchg
inc
es
pop
adc
and
push
out
lock
mov
lods
lock
lahf
jnp
xchg
cmp
jge
jbe
jns
es
inc
xor
jle
adc
pop
loope
out
cmp
xor
xor
nop
jle
add
lock
rcrl
push
addr16
ss
cmp
pop
sbb
ljmp
xor
push
pop
cltd
push
jae
cmpsl
or
repnz
enter
inc
push
mov
mov
mov
mov
xor
jmp
hlt
or
movsl
outsb
orl
jge
sub
xchg
dec
cmp
cmp
xor
xor
in
aam
fnstenv
mov
lret
lock
mov
outsl
pop
enter
jecxz
shlb
adc
lock
rclb
xchg
test
insl
mov
push
pop
xlat
dec
repnz
and
pop
sub
in
insb
add
jmp
push
xchg
sbb
or
stos
adc
dec
cmp
adc
push
cmp
or
daa
int3
jo
cltd
icebp
pop
les
aaa
inc
xchg
push
pop
fwait
push
push
fs
push
aam
inc
shlb
andb
movsl
add
xchg
dec
mov
iret
dec
fildll
iret
lods
rcll
orb
lock
xchg
push
aad
int
lds
mov
je
cmp
cmp
cs
mov
fisubrs
lock
or
lret
jns
leave
or
fs
lret
push
mov
push
lods
fstl
cmp
insb
call
rolb
insl
loop
sub
and
and
call
js
insb
test
je
outsl
lock
or
lock
mov
addr16
lock
sahf
js
xchg
je
mov
adc
jp
jo
stos
in
jae
and
lock
hlt
sub
add
adc
insb
sbb
cmp
insl
jae
xchg
push
iret
lock
in
dec
cmp
xchg
frstor
sub
cmp
rcrb
loop
lods
fs
lock
into
push
jo
push
sbb
push
data16
pop
or
mov
pushf
fs
mov
test
ret
lock
mov
outsl
jnp
lock
pop
lahf
jns
push
aas
pop
insb
pop
lock
push
cwtl
push
or
repz
or
xchg
in
mov
popa
xor
loopne
les
sahf
adc
pop
mov
icebp
jno
lock
push
push
mov
lret
addr16
out
lock
xchg
jge
sbb
mov
lahf
into
and
lret
imul
jl
frndint
aam
ljmp
mov
push
push
push
hlt
ret
lock
imul
mov
push
pusha
xor
jne
enter
adc
in
call
jne
inc
shlb
lock
dec
push
les
clc
dec
pop
dec
lock
and
jne
lock
inc
jp
jbe
inc
dec
lock
fmull
jo
outsl
leave
pop
and
test
push
push
cmp
cmp
movsl
mov
shrl
lret
mov
xchg
out
push
mov
push
pop
sarl
or
pop
jno
mov
push
ret
mov
fsts
movsl
iret
push
je
sbb
ljmp
inc
mov
aas
shll
jo
data16
ret
adc
sti
loope
std
mov
jo
mov
cmp
fs
jecxz
pavgb
lret
or
cs
stos
mov
in
sbb
cmc
mov
inc
pop
xor
aas
scas
data16
push
or
cmp
mov
notb
cltd
jnp
loopne
loopne
push
fldt
jo
mov
loope
sahf
lock
sbb
repnz
loopne
lock
lods
xor
cmc
cmp
sbb
mov
rcll
mov
mov
lock
stos
push
dec
adc
jge
sbb
dec
lock
shlb
shrb
fwait
jns
xchg
mulb
push
mov
xchg
jmp
add
sub
ss
rcrb
xchg
stos
aas
in
push
roll
pop
push
test
lahf
lock
inc
add
add
lock
out
mov
mov
or
dec
push
lock
aaa
imul
test
shrb
adc
lods
sbb
push
lock
pop
repz
out
xor
add
pop
adc
test
fstl
pop
mov
daa
cmp
jmp
jp
fisttps
popa
cmpsl
shr
imull
sub
xor
cld
scas
push
mov
scas
jo
addr16
arpl
cli
push
sub
dec
jb
mov
cltd
xchg
lret
out
xchg
push
dec
mov
jb
mov
push
aas
lock
dec
jo
or
in
pop
and
add
adc
mov
rsm
inc
sub
push
xor
into
fwait
lock
lahf
lcall
lock
lods
imul
jmp
jge
mov
popf
pop
sub
jo
ret
mov
inc
lock
mov
or
sub
mov
sub
dec
jle
fnstsw
lret
pop
cmp
ret
fnstenv
add
repnz
gs
stos
sub
cltd
or
ret
mov
dec
sbb
repz
popf
cmpsb
lock
in
mov
pop
push
in
testl
pusha
repz
dec
repnz
add
adc
jl
jnp
cmpsb
pushf
repz
jmp
jns
fincstp
push
icebp
pop
xchg
push
dec
aam
das
push
sbb
std
jmp
lahf
push
stos
xor
or
xchg
imul
in
cmp
adc
add
cmp
prefetcht1
and
and
or
call
inc
add
add
mov
lock
sarb
mov
lock
pop
rorl
lods
cmp
gs
inc
daa
jo
pop
or
or
xor
test
add
inc
fdiv
mov
inc
jbe
inc
fsubs
jecxz
dec
add
mov
xor
mov
mov
lock
add
insl
faddp
sbb
mov
lock
push
cltd
pop
fdivr
testl
loopne
and
xor
push
pop
nop
adc
mov
popa
es
movlps
fsin
inc
dec
daa
xchg
nop
add
or
pushf
in
insl
xchg
jne
test
lds
or
sub
js
fsubs
sbb
jo,pt
xchg
cmp
push
filds
mov
dec
push
test
pusha
lcall
in
and
out
sbb
push
daa
xor
aam
hlt
lock
or
and
sub
lock
jg
fidivrs
loope
and
xchg
dec
lock
mov
jecxz
inc
movsl
cltd
repz
fnstenv
jp
notl
mov
jno
inc
adc
jge
pop
sub
jg
xor
xchg
rcll
outsl
mov
pushf
mov
imul
frstor
cmp
pop
ja
scas
iret
icebp
or
adc
dec
add
addr16
roll
inc
subl
cmp
mov
dec
or
cwtl
shl
movsb
adc
jno,pn
enter
clc
pop
push
push
sbb
cmc
jne
nop
xorl
adc
lock
sub
pop
in
fs
ds
insb
adc
lock
hlt
fnstenv
mov
sbb
jle
add
gs
adc
cmp
cmp
lock
dec
pop
insb
lret
and
mov
fcoms
icebp
cli
add
fwait
lret
cwtl
cmp
lods
xor
ficoml
inc
arpl
and
mov
sti
add
lock
leave
sbb
lock
jl
shl
aaa
lds
pushl
mov
orl
in
mov
lock
enter
mov
lock
adc
stc
lock
js
or
and
lock
dec
xor
xchg
mov
mov
xchg
and
aaa
test
lock
inc
adc
imul
int
cmp
xchg
lock
xor
pop
lock
jnp
lret
js
jo
dec
sbb
pop
mov
cwtl
lock
int3
or
mov
fistpll
cmc
push
ss
sahf
dec
cli
add
xchg
inc
lret
xchg
nop
push
mov
pop
push
lds
sub
cmc
cmp
lods
jo
jns
xor
data16
arpl
adc
test
dec
inc
in
inc
mov
setns
ret
fcompl
xchg
sub
mov
nop
adc
bnd
dec
dec
jbe
cmp
and
les
inc
and
je
fisttpl
rorl
lock
cmp
mov
cwtl
movsl
sysexit
sbb
dec
mov
das
xor
pushf
shll
js
pop
and
daa
cld
push
test
les
ss
dec
sub
xchg
scas
xchg
lret
lock
and
icebp
add
inc
fmul
movsb
lock
shlb
je
fnsave
xchg
pop
cmp
fists
sub
shlb
dec
push
adc
movb
scas
adc
xor
add
xor
add
mov
push
in
and
add
inc
jg
dec
aad
sbb
pop
cmp
setb
mov
mov
adc
imul
cltd
dec
jge
lock
mov
sub
std
adc
jg
lock
xchg
mov
xor
fwait
aam
adc
mov
sbb
je
in
jb
call
sub
sbb
mov
fdiv
mov
xchg
dec
pusha
lock
into
xlat
cli
bswap
inc
lock
mov
loope
mov
dec
pusha
jnp
aam
jb
icebp
popa
mov
ljmp
lock
outsb
test
sub
gs
xor
aad
daa
jns
lods
cmp
stc
jb
sti
lock
js
imul
mov
push
sub
aaa
std
loopne
mov
mov
lock
aam
in
jg
ds
stos
fsubrl
mov
inc
addr16
cvtdq2ps
iret
repz
inc
repz
pop
in
pop
loopne
shlb
ja
and
adc
adc
jmp
mov
arpl
lock
popa
push
fdivl
sbb
outsb
or
leave
rclb
or
sar
mov
aam
mov
and
es
jp
adc
lock
mov
push
cmp
ds
imul
inc
icebp
icebp
std
push
adc
or
jle
mov
jno
div
stos
loopne
pop
adc
xor
aam
daa
cwtl
mov
cmp
mov
add
mov
shrb
mov
and
sub
fldcw
mov
xor
rcll
or
fldcw
fcomi
addr16
leave
cmpsb
pop
sub
ds
insb
stc
jmp
cli
pop
scas
inc
lock
and
fsubr
jp
mov
xor
and
xor
fwait
pop
cli
out
clc
popf
aaa
stc
push
xchg
adc
loopne
enter
sub
jecxz
jne
lock
push
fcomps
xchg
aad
xor
stos
pop
leave
outsb
pop
push
or
and
jp
sbb
xlat
cwtl
mov
insb
cli
or
mov
hlt
mov
testl
inc
fcmovnb
pop
and
loope
jmp
ret
or
mov
bnd
rcrl
mov
test
fwait
out
add
repz
xchg
mov
insl
ljmp
lock
lods
out
mov
adc
call
repz
jae
or
sbb
mov
jb
je
lock
xor
sub
adc
outsl
dec
mov
rorl
jl
jo
popf
push
push
call
mov
add
cmp
clc
cwtl
lock
inc
repnz
test
xor
push
xchg
ret
sbb
pop
mov
fwait
enter
lcall
jns
dec
lret
push
sbb
pushf
repnz
mull
and
decb
and
dec
add
push
pop
stc
fwait
jo
jno
mov
cmp
xchg
lock
push
js
xchg
mov
jnp
lock
pop
outsb
jg
repnz
add
xor
pop
nop
in
ja
xor
lock
nop
jno
scas
cld
mov
mov
mov
mov
sub
icebp
mov
push
movsb
mov
adc
inc
xor
rcrl
jg
sub
lock
xor
inc
jecxz
adc
lock
movsb
pop
or
scas
test
push
mov
shrb
lock
test
or
xchg
and
fisubrl
lock
outsb
xchg
pop
call
sahf
ljmp
dec
lds
insb
prefetch
lock
mov
cmp
sbb
test
in
push
cmp
sbb
mov
icebp
mov
push
rorl
in
loop
xchg
inc
fistpll
nop
xchg
mov
pushf
jb
lahf
xorb
mov
push
jnp
lods
mov
sbb
iret
inc
sub
arpl
fdivl
mov
leave
aas
xchg
pusha
sarl
xor
cmpsl
inc
inc
lcall
lods
xchg
scas
das
or
ja
adc
std
cmp
sub
pop
jo
ja
bound
push
xor
xchg
push
mov
inc
clc
push
xchg
and
mov
stc
cmp
inc
cmp
sti
or
mov
ret
shlb
repnz
sbb
mov
adc
mov
jmp
pop
jae
es
xchg
repz
into
lock
mov
xchg
lock
mov
push
nop/reserved
shlb
loopne
or
sub
andl
sub
lock
push
xor
adc
sbb
lock
stos
inc
ljmp
out
adc
xor
jbe
sbb
movsb
mov
mov
adc
stc
adc
cmpsb
jecxz
xchg
das
rol
out
mov
jae
lods
stos
sub
xchg
movsb
lock
fisubrs
mov
xchg
cli
add
fistpll
mov
inc
sbb
push
fisubrs
ljmp
in
imul
ds
push
jo
adc
and
in
cmp
and
dec
les
inc
xor
shlb
nop
cli
cmp
lea
lock
in
je
gs
ja
push
movsb
mov
outsb
sbb
cmp
cmpsb
inc
mov
lock
sbb
cmp
jmp
sub
sbb
adc
xchg
frstor
outsl
and
lock
sub
lock
mov
out
in
lock
int3
cmp
sbbb
mov
shlb
inc
mov
orb
mov
mov
or
lock
scas
mov
pop
test
lods
or
xchg
lock
push
lods
jnp
and
sub
daa
call
repnz
lock
test
adcl
mov
std
pop
fisttpll
push
rolb
in
test
add
mov
lods
sahf
lahf
add
pusha
mov
je
pushf
pusha
push
mov
pop
and
loopne
cmpsl
call
divl
xor
lock
stos
mov
sub
push
ret
lock
adc
sbb
lock
lock
popf
inc
lock
sbb
lock
cmp
out
stc
popf
xor
andl
lock
mov
cwtl
push
fs
icebp
mov
stos
xchg
adc
push
adc
setge
idivb
push
aam
push
lock
pop
lcall
or
lods
cmpsl
ja
cmp
push
imul
mov
sbb
xchg
out
sahf
movsl
and
lock
jnp
or
sub
scas
aad
rcrb
repz
aam
cwtl
mov
mov
int
clc
cmp
imul
in
fs
repz
pushf
out
loopne
outsl
mov
push
push
shl
cli
clc
lock
or
lods
movsb
scas
lock
in
sbb
pop
sahf
xchg
add
lahf
and
sub
sarb
adc
sbb
lock
orb
inc
cli
mov
stos
mov
pop
mov
adc
out
lock
mov
cld
into
bound
lods
mov
insb
icebp
add
xchg
clc
movsb
xor
adc
fs
or
push
js
lock
nop
inc
fdivs
popf
fsubr
cld
adc
mov
stos
mov
adc
mov
ds
jp
xlat
std
mov
lock
hlt
xchg
pushf
push
lret
push
push
xchg
test
mov
repz
nop
aad
int3
ret
nop
mov
lcall
or
sbb
and
xor
fs
popf
push
scas
je
stc
and
and
mov
mov
sub
cli
xor
in
loopne
shr
ljmp
mov
lock
push
and
imul
incl
pop
and
insl
mov
pop
fwait
repnz
pusha
mov
mov
mov
pop
fcmovu
lock
add
add
addr16
lock
sub
lock
mov
fdivrl
nop
and
addr16
mov
pop
iret
jno
sub
cmp
in
shrl
lea
pop
clc
mov
xchg
in
add
cmc
jo
movsb
test
fmul
lock
enter
mov
push
lock
cmp
pop
xor
fisubrl
dec
sbb
pslld
lea
or
lock
and
jecxz
repnz
jo
inc
clc
popf
shlb
or
push
test
or
cmp
xchg
pop
fsts
addr16
pop
add
es
je
cmp
mov
xor
inc
add
jo
sahf
and
cmp
rcl
iret
fs
xor
jg
sahf
in
test
lock
and
mov
lock
ficomps
push
lock
scas
push
inc
sbb
orl
pusha
jo
fnstenv
sub
mov
push
push
in
xchg
mov
and
xchg
lock
mull
or
or
push
or
xlat
insb
aaa
adc
sbb
mov
adc
repz
das
outsb
jp
pop
mov
mov
jg
jo
xchg
loopne
add
add
xor
pop
mov
es
adc
stc
test
in
wbinvd
push
jmp
cmpsb
test
and
hlt
lock
mov
xchg
dec
enter
cmpsl
jo
jmp
sbb
loop
lock
cmp
addr16
xor
lock
jle
in
add
or
scas
movups
mov
inc
insl
call
aas
push
jne
insb
lock
and
jo
mov
lock
out
jecxz
outsb
shlb
mov
out
xor
mov
nop
fmulp
inc
shll
and
shl
mov
mov
jo
jmp
mov
xor
and
and
cmp
mov
push
adc
inc
jp
lock
ljmp
cwtl
data16
popa
sub
push
inc
pushf
mov
jnp
cmp
mov
stos
lock
out
sub
cmpsl
mov
mov
sbb
adc
cmp
xor
pusha
nop
mov
xor
cmp
or
sub
jo
cwtl
jns
or
and
in
cmp
push
lar
jp
jbe
mov
or
pop
test
test
insb
jmp
ficompl
into
cmp
lock
jnp
rep
cmpsb
iret
mov
add
cmp
mov
in
or
ret
sub
andb
repnz
cmp
pop
or
aas
aaa
nop
dec
jo
push
mov
sub
or
push
lock
lea
lock
lods
pop
mov
lock
pop
ret
test
push
sbb
lock
cmp
std
lods
mov
sarl
nop
ret
push
ret
int3
add
sub
je
jo
jg
in
scas
sub
cwtl
mov
jae
shll
int3
push
cltd
lock
and
data16
fcoml
lock
jp
jg
inc
lock
jne
mov
mov
outsb
and
lock
add
aas
jbe
lock
cmc
xor
lock
stc
xor
push
lock
ss
xor
test
sbb
cmp
lock
adcb
incb
mov
lahf
and
mov
loopne
pop
test
outsl
pop
dec
mov
xor
sbb
xchg
fsubrp
hlt
jne
lock
enter
cmp
lods
fsubs
cmpsl
in
mov
sahf
lock
jo
push
push
adc
cmc
loop
or
movsb
push
cmp
xor
or
repz
fwait
lock
xchg
int
sbb
lock
dec
adc
mov
imulb
pop
sbb
ljmp
jno
cmpsb
out
jnp
aam
sbb
ret
xchg
mov
mov
shl
rcrb
push
xlat
dec
loop
cmp
mov
adc
adc
inc
shl
jge
adc
test
and
jl
mov
adc
stc
bound
mov
lods
std
cmpsl
pop
lock
jp
push
jo
nop
divl
insb
repnz
mov
and
cmp
jo
push
sbb
sub
push
sub
adc
or
in
movsb
or
adc
cmpsl
xchg
push
adcl
pop
xchg
pop
push
movsl
in
cs
push
inc
inc
dec
push
jg
movb
lds
aas
xor
lcall
jmp
pop
sbb
jns
mov
jb
xor
jo
leave
aaa
cmp
test
push
not
aad
push
lret
in
fidivl
mov
pop
mov
cmp
add
lock
test
adc
lock
lahf
insb
or
ret
jg
cld
out
cmp
movsl
lock
pop
dec
and
mov
shll
pop
popf
das
arpl
shr
jne
push
dec
push
jl
add
js
mul
mov
or
mov
outsl
jae
out
xchg
cli
in
cmp
mov
ss
icebp
clc
pop
cmp
mov
rcll
enter
mov
cltd
push
aas
dec
out
repnz
icebp
sarl
les
or
inc
xchg
push
mov
cmpsb
cs
lea
adc
into
dec
mull
push
xor
cmp
adc
rolb
or
mov
xchg
mov
int3
inc
fisubl
std
movsb
int3
lock
dec
icebp
iret
clc
mov
loop
mov
dec
in
aaa
sbb
xchg
push
outsb
jb
mov
out
pop
pop
xor
outsl
xorl
mov
and
pop
pop
out
loopne
push
adc
sub
jno
incl
cmp
jle
pop
sub
push
sahf
jl
push
call
ljmp
mov
dec
lock
leave
jo
std
jecxz
in
add
push
out
dec
push
aas
gs
xchg
or
pop
dec
jae
popf
or
or
sbb
ret
cmp
mov
cmp
lock
repnz
sub
pop
cmpsb
das
movsb
cmp
imul
in
cmp
repz
lock
ret
cld
pop
push
pop
sti
lock
mov
mov
mov
scas
adc
aad
cmp
adc
adc
mov
div
popa
mov
shl
inc
insb
mov
xchg
xor
sbb
lock
jae
or
or
repz
movsl
insl
mov
sub
mov
push
sti
lock
jle
mov
xor
lock
or
push
fmull
lods
lock
outsl
add
adc
insl
mov
loopne
fdivs
sub
pusha
jle
jmp
daa
icebp
pop
cmp
xchg
in
push
test
cld
lock
xor
nop
push
fmull
lock
mov
or
es
call
scas
add
xchg
stos
push
cmp
fadd
jbe
icebp
shlb
les
xor
int3
outsb
cld
call
in
int
test
mov
xor
or
sbb
icebp
cmp
pop
scas
aaa
pusha
jp
lock
add
inc
xor
loopne
icebp
movsl
add
repnz
push
insl
jp
xor
mov
lahf
pushf
movsl
cmpsl
xchg
sub
andl
loop
jl
push
dec
aad
inc
rcl
and
lock
dec
inc
push
or
jno
lock
mov
mov
or
outsl
data16
sbb
xchg
bound
icebp
push
loope
xor
stos
mov
icebp
inc
in
push
call
aaa
xchg
lret
inc
jl
cs
add
jo
and
into
xchg
mov
dec
dec
lock
repnz
cmp
call
mov
sub
stos
leave
sub
jns
pop
mov
es
ret
push
cmp
or
popf
lcall
mov
sub
cmp
repz
outsb
cmp
jnp
lret
test
mov
dec
xor
mul
dec
xor
shll
or
jo
xchg
scas
mov
imul
repnz
mov
enter
les
popf
mov
xchg
mov
scas
mov
inc
out
fistl
sbb
in
cmp
mov
sbb
call
clc
sbb
mov
cmp
sub
sub
fwait
div
fadd
mov
imul
push
repz
inc
jl
pop
ficompl
mov
mov
out
adcl
pop
cmpb
sub
adc
mov
call
out
cltd
out
jns
bnd
daa
js
mov
aaa
icebp
test
xchg
jne
mov
lock
pop
pop
das
and
xchg
cmp
sbb
mov
daa
lea
faddl
mov
leave
int
mov
inc
scas
push
jge
std
pop
shll
in
loope
push
mov
in
lock
outsb
stc
mov
cmpsl
jl
xchg
js
lock
mov
icebp
xor
pop
imul
push
lock
ret
or
movsl
ffreep
subb
aad
mov
pop
jo
inc
adc
mov
lock
sub
dec
fmuls
lock
lret
mov
jp
cmp
repz
aaa
push
fisubrl
call
bt
icebp
mov
inc
mov
xor
inc
lock
jmp
pop
call
push
stos
push
in
lods
dec
hlt
cli
mov
lods
out
or
int3
iret
or
xchg
xchg
or
lret
pop
sbb
cltd
jle
mov
lret
outsl
jo
movsl
sub
xor
dec
imul
mov
movsb
and
shl
sar
loop
and
daa
fcomi
jns
iret
add
mov
icebp
test
push
mov
mov
aam
inc
pop
sbb
fdivrp
adc
fcmovnu
push
enter
jo
push
out
lock
jnp
mov
lock
test
mov
mov
lock
xchg
jmp
icebp
jg
arpl
stos
sahf
lock
mov
rcrb
and
xor
movsb
push
fmull
mov
mov
daa
ror
dec
sbb
cmp
imul
mov
ret
dec
fcomip
xlat
out
aaa
cwtl
mov
sub
jp
add
movsb
pusha
jle
in
jge
lock
cwtl
mov
or
pop
inc
iret
sbb
addl
jbe
xchg
fidivl
or
rcrl
and
xor
leave
jno
insb
lret
ljmp
orb
aad
jns
lock
xor
popf
sahf
cmp
mov
xor
movsl
mov
mov
add
lock
sti
fstpl
mov
pop
push
and
ror
mov
movsb
outsb
mov
push
and
call
push
push
scas
dec
mov
dec
jo
iret
or
cmp
rcrb
push
call
pop
push
dec
jge
enter
dec
stos
mov
dec
repz
mov
inc
out
or
lock
jno
cmp
call
hlt
mov
jmp
popa
jo
stc
mov
loopne
into
push
add
call
pop
lods
mov
dec
in
push
lock
push
dec
stos
xchg
xchg
mov
addb
xorb
xor
into
jo
xor
ss
lock
inc
push
popf
inc
push
mov
rcll
cmpsb
movl
rorl
cmp
push
or
lock
das
mov
sahf
mov
lock
xchg
call
push
sub
sbb
cs
push
and
push
loopne
inc
lock
fs
lock
pop
fisttps
xor
pop
lock
jb
mov
inc
scas
pop
aad
xchg
cs
and
movsl
push
lret
lock
push
fidivrl
mov
jg
jo
xor
jns
and
repz
rcr
clc
stos
std
ret
cmp
adc
xchg
mov
in
and
inc
jno
cmp
repnz
adc
mov
jo
in
cmpsl
pusha
lock
xchg
pop
lock
clc
and
cwtl
and
stc
mov
lods
out
loope
lock
shlb
orb
xchg
mov
jo
test
lock
xchg
push
cmp
jmp
lock
pop
es
repz
xlat
jo
ficoms
pop
lock
jb
xor
lock
cmc
xor
insl
push
mov
shll
cltd
xorb
data16
dec
add
sti
fcoml
mov
lods
mov
mov
lods
mul
mov
dec
xchg
lock
ret
fdivr
cmp
lock
lahf
sub
ljmp
add
lock
dec
mov
dec
mov
push
repz
mov
rcll
icebp
mov
mov
or
arpl
enter
fisubs
ret
cmp
pop
dec
adc
mov
les
push
lods
lock
xor
push
mov
or
mov
int3
jo
lea
mov
xor
fsubrs
jge
inc
loope
sub
aaa
bts
xchg
lock
mov
lds
outsb
sub
dec
das
adc
xorb
ss
push
je
cwtl
pushf
pop
mov
lock
pop
nop
push
push
push
mov
xor
stos
js
call
xchg
sti
mov
lock
cmp
ret
lock
rorb
xchg
or
sub
hlt
xor
pop
ds
fdivrs
pop
lods
adc
lret
jo
fsub
sti
sbb
sarl
jmp
out
add
js
push
mov
inc
call
and
clc
xchg
mov
fs
xor
rcll
clc
dec
scas
or
sbb
jle
jo
pop
push
dec
cmp
add
cmp
sub
push
xchg
icebp
cmc
add
flds
adc
in
and
bound
hlt
ds
paddb
dec
dec
lock
xor
xor
adc
iret
ret
mov
js
jmp
cltd
push
std
test
rcr
out
in
inc
lock
push
jmp
lock
and
or
lret
shll
movsb
pop
xchg
adc
arpl
lock
sbb
xor
rorl
mov
repz
cmpsl
adc
ret
sub
cmc
out
sti
mov
or
bound
and
xlat
mov
les
cmpsl
lock
dec
adc
loopne
xchg
lock
leave
in
cli
jecxz
pop
lock
pop
dec
cmp
movsl
jl
xchg
call
mov
pop
mov
mov
je
pop
adc
inc
aad
mov
pop
xor
and
lock
leave
lret
cmp
dec
dec
pop
jno
pop
lock
adc
fstps
xchg
loop
xchg
mov
fsubrl
lock
xor
mov
push
aaa
push
xor
daa
cmp
or
xor
mov
lock
inc
or
mov
mov
pushl
xchg
or
xor
mov
lods
xor
adc
jno
dec
pop
out
inc
dec
fnstsw
push
sub
cltd
cmp
mov
pop
lock
clc
in
loope
push
aam
js
lods
and
sbb
lock
jno
clc
repz
pop
xor
mov
lock
test
dec
mov
push
fsts
mov
fnsave
xor
inc
rcl
out
inc
add
unpcklps
jp
fs
cmp
mov
inc
loopne
sbb
scas
mov
cld
in
adc
lods
shll
lock
jecxz
cltd
pushf
fdivs
xchg
or
cmp
push
insb
jo
ret
lock
inc
fidivrs
pusha
mov
in
mov
insb
dec
push
inc
inc
push
cmp
mov
or
jae
rcrb
ja
sub
or
repnz
and
rcr
in
lock
mov
adc
rorb
pushf
jns
lock
popf
cmp
lock
sub
dec
cmp
call
aas
aam
or
subb
or
std
lock
mov
fdiv
cmpsb
mov
cmp
lock
jge
xchg
popf
add
inc
and
add
lock
or
xchg
imul
iret
xchg
dec
lock
fnstenv
adcb
mov
fistpl
sbb
iret
les
lea
ds
mov
fadd
jp
arpl
mov
es
in
xchg
push
mov
adc
mov
sub
or
popf
jle
lock
insl
mov
shrb
push
adc
loope
xor
mov
in
mov
shr
pop
mov
test
inc
gs
jp
repz
repz
fcoms
adc
lea
mov
into
clc
and
and
ljmp
imull
add
andb
dec
mov
pop
mov
hlt
leave
lcall
add
or
fiaddl
jno
mov
je
mov
cmp
inc
ljmp
pop
aas
cmpb
mov
jecxz
lea
out
push
daa
adc
rcr
add
push
and
add
daa
mov
adc
sub
fcmovne
push
and
idivl
cmp
adc
loopne
mov
lock
push
in
out
push
mov
aam
add
add
pusha
jne
lock
fadds
jbe
push
mov
das
push
lcall
xor
ret
negl
sbb
lock
mov
lock
jge
shrb
fs
pop
lock
jns
add
movsl
lock
lea
out
insl
fcomi
incb
mov
jae
lock
mov
and
je
push
cmpsb
test
movsb
mov
lds
les
jmp
and
iret
adc
stc
addl
fists
lock
in
ret
cmp
jo
jo
daa
std
ljmp
out
lock
shl
xor
push
cmpsl
pusha
jo
pushf
cmpl
rorl
inc
mov
jb
inc
lods
pop
lock
adc
push
inc
sbb
mov
shrb
mov
bound
and
push
andb
lock
mov
sbb
pop
dec
cmp
aaa
add
add
xchg
fucomi
xchg
add
sbb
xchg
ds
lock
daa
shl
xchg
in
je
mov
mov
sbb
ss
inc
outsl
js
sub
mov
fidivrl
test
lcall
lret
lock
into
subb
and
pusha
push
lock
mov
fs
cmp
jl
in
sahf
mov
jno
enter
cmc
out
and
jo
xor
sub
dec
sub
bound
push
popf
inc
adc
ret
jbe
xor
ljmp
jo
xor
or
lea
pop
jae
lahf
and
jne
dec
lock
cs
add
lock
int3
xor
xorb
jae
mov
scas
add
in
pop
icebp
pop
jl
clc
arpl
les
lock
lods
dec
push
loopne
or
hlt
push
and
jns
xor
dec
sbbb
pop
add
sub
jb
lock
cmp
mov
xchg
pop
out
neg
lock
imul
aaa
mov
lock
in
arpl
into
push
adc
enter
pusha
fs
add
call
xchg
jbe
js
lock
and
incl
dec
mov
test
pop
sbb
sub
ss
lock
lods
add
sbb
and
dec
adc
jo
pop
ret
les
enter
xor
fwait
nop
aam
hlt
xchg
cltd
mov
push
jbe
push
in
mov
fisubs
and
push
loopne
push
sahf
daa
lock
dec
mov
and
jbe
repnz
xchg
xchg
xchg
sbbb
jbe
lock
mov
cmp
pop
sub
push
rorb
pop
xchg
jns
jl
mov
lock
sbb
jo
push
lock
xchg
jbe
add
push
lock
fs
test
adcb
lock
outsb
ja
push
push
or
and
adc
cld
sub
or
or
cli
adc
mov
js
cld
out
jmp
enter
movsl
lcall
adc
push
fcompl
lret
pop
clc
mov
sub
mov
pop
adc
test
repz
test
rorb
sahf
adc
mov
pop
mov
pop
test
cmpsb
inc
fisubs
mov
std
aaa
adc
jns
jae
in
stc
jno
call
in
movsb
push
dec
icebp
cmc
mov
call
and
sub
mov
cmpsb
pop
jl
xor
jecxz
repnz
jle
mov
in
mov
nop
xor
dec
sub
ds
lret
adc
es
aam
pop
inc
pop
jge
xor
daa
aaa
push
jg
or
rcr
cmpsl
add
aas
cmc
xchg
addr16
popa
xchg
into
jmp
mov
rolb
jle
rclb
sahf
push
in
filds
out
pop
cmc
adc
push
aam
mov
dec
inc
cmp
lock
inc
cmp
ds
outsb
shrl
rcr
sub
xchg
jae
inc
rclb
mov
jo
hlt
lcall
in
enter
xor
lock
cmp
xchg
les
push
insb
cmp
sbb
xor
test
repnz
mov
sub
scas
jge
cmpsl
jmp
call
test
cmp
pop
rclb
call
inc
inc
iret
xchg
lock
lret
push
lds
sub
or
dec
scas
push
repz
mov
loopne
lock
cmp
inc
jg
push
icebp
enter
repnz
dec
xchg
jb
pop
push
dec
pop
xchg
mov
sub
dec
xchg
xor
addl
fldl
add
les
clc
dec
out
adc
outsl
mov
aam
cmp
sbb
test
xlat
inc
jmp
add
bound
in
pop
ds
lcall
inc
mov
decl
pop
or
mov
scas
fs
pop
inc
shlb
jo
lahf
push
iret
out
test
push
sahf
mov
adc
cmpsb
imull
or
mov
sub
xor
xchg
mov
and
xchg
lock
fnstsw
out
xchg
or
cmpsl
out
lock
push
sbb
insl
ret
cmp
and
pop
adc
cltd
jle
ffreep
ret
push
aaa
jmp
xor
in
ljmp
cmp
mov
mov
adc
div
sub
jmp
loopne
call
clc
add
les
mov
pop
pop
mov
shlb
sub
mov
jbe
push
into
dec
nop
fsubr
lock
adc
mov
icebp
push
pop
add
xor
mov
call
jmp
fs
lock
cmp
movsl
add
cld
cmpsb
or
xchg
lock
mov
pop
icebp
lods
mov
sub
icebp
adc
jns
lock
mov
ljmp
push
lods
int
mov
popa
icebp
mov
xchg
lods
call
dec
mov
mov
dec
or
push
cmp
nop
and
orl
mov
int
lock
xlat
repz
in
and
std
or
ja
push
fisubrl
adc
ret
movsb
test
jo
pop
mov
in
call
dec
jns
inc
into
and
lcall
mov
mov
andl
mov
f2xm1
push
call
dec
movsb
pop
add
pop
pop
jo
aam
pop
repz
push
cwtl
pop
jnp
fdiv
jmp
or
cld
dec
dec
stos
out
jecxz
and
scas
mov
lods
bound
sbb
lock
sbb
rcl
mov
in
or
lea
jge,pn
pop
cmp
in
dec
mov
push
sub
fmul
lods
inc
icebp
sahf
hlt
xor
jnp
mov
and
dec
repnz
bound
jno
sub
cmp
rorl
lret
mov
mov
sti
push
call
mov
rep
jnp
jae
lock
sar
jl
shl
ret
lock
int
mov
ljmp
sbb
mov
lock
sahf
inc
xchg
cmp
lock
adc
pop
repz
orb
jl
cwtl
dec
xor
clc
jmp
or
mov
mov
mov
mov
lcall
sar
push
mov
inc
enter
push
out
adc
sbb
mov
fldcw
pusha
push
jmp
push
add
repnz
jmp
inc
icebp
ja
stos
leave
xor
aad
vandnpd
cmp
and
mov
test
push
sbb
pushf
adc
call
add
xor
scas
dec
arpl
and
pop
or
lock
aaa
pop
mov
out
sbb
scas
lock
jge
in
out
dec
push
lock
pushf
popf
es
or
lahf
pop
arpl
jns
mov
jl
lock
int
xor
lahf
push
or
jnp
dec
inc
jae
sbb
mov
or
fistps
mov
push
lret
inc
xor
push
fnstcw
push
add
pop
jno
jb
mov
pop
loopne
lock
lods
mov
lock
push
add
jmp
fmuls
popa
lock
sti
xchg
mov
mov
cmc
cmp
mov
jno
stc
jle
lock
sar
push
lock
inc
jmp
aas
push
mov
test
add
pop
lcall
lock
ss
mov
or
pop
stos
mov
lock
mov
inc
nop
stc
loop
out
and
imul
lock
pop
repnz
cmpb
setp
aam
roll
or
sub
inc
lock
adc
mov
jecxz
popa
icebp
mov
rcrb
mov
xorb
lock
and
dec
add
sbb
test
pop
xchg
nop
mov
aaa
mov
ret
push
cmp
dec
add
mov
mov
xor
lods
jno
jo
sbb
sub
sarb
lock
fcmovb
mov
data16
lock
std
out
lock
out
lock
loop
cmp
insb
fidivrl
push
inc
repz
hlt
cmc
sub
lock
push
or
and
dec
sub
andb
jne
lret
jecxz
repnz
out
dec
jns
lea
movsb
out
or
fsubrs
sub
fcomip
adc
sbb
nop
jmp
shll
mov
lds
mov
and
dec
ja
jl
pop
xor
sub
hlt
adc
sbb
add
adc
inc
lock
cmpsl
test
pop
adc
lds
mov
lock
xchg
pop
in
dec
mov
jae
cltd
lds
and
or
insl
icebp
sti
fxch
lods
dec
xchg
sbb
out
or
lock
add
pop
pop
xor
out
sbb
xchg
movsl
repnz
push
and
lcall
mov
xor
sbb
lret
pop
add
popf
test
mov
cmp
lock
sub
adc
scas
push
jle
inc
into
outsb
pop
and
xor
mov
push
scas
adc
out
jns
fdivrl
xchg
sbb
sub
loop
fwait
mov
and
mov
sbb
jnp
mov
mov
nop
push
lods
mov
sub
lock
mov
adc
scas
xor
lock
inc
int
in
xchg
and
jge
lock
xor
jae
xlat
inc
xor
xchg
lds
inc
clc
ja
or
lock
out
sub
jl
imul
xor
jo
add
faddp
test
xchg
inc
hlt
pusha
lock
fistpll
daa
sahf
adc
ret
fcomi
sbb
add
push
out
mov
addr16
jge
in
imul
divb
jno
fs
clc
mov
mov
pop
scas
shl
and
and
js
lock
xchg
and
fmull
add
mov
add
mov
inc
ss
sub
sbb
sti
movq
pusha
rorl
lea
fnsave
ret
mov
lock
inc
sbb
popf
pop
cwtl
lods
enter
adcb
or
ret
adc
jbe
pushf
jns
add
dec
test
mov
insl
push
scas
imul
jmp
dec
sub
mov
data16
mov
lock
rclb
jmp
cmpsl
aaa
out
repnz
push
mov
and
jo
add
cmp
lds
aad
adc
xchg
lock
cli
out
fdivr
push
xchg
hlt
mov
iret
mov
movsl
imul
jns
inc
push
sbb
add
in
pop
int
xchg
jo
jne
add
in
iret
or
icebp
fmull
inc
cmp
pushf
test
fwait
add
jne
stos
sahf
pop
insb
push
cmpsl
fiaddl
in
pop
cmp
mov
pop
xchg
enter
mov
hlt
jmp
out
or
mov
insl
std
push
adc
or
jne
mov
adc
int
sbb
push
fbstp
out
jl
xor
push
pop
push
scas
lahf
mov
dec
cmp
lods
bound
fdivr
xor
jns
jecxz
adc
lock
and
lock
in
mov
pop
jmp
xor
aaa
fs
inc
xchg
je
mov
mov
repnz
push
xchg
pushf
xchg
push
cmpsl
lock
add
arpl
lock
mov
lock
cmpsb
test
and
xchg
xor
hlt
xchg
inc
repz
adc
ss
sahf
call
add
xor
movsl
inc
push
jae
paddb
stos
xchg
adc
lock
pop
rcl
jge
popf
arpl
add
wrmsr
push
or
inc
xchg
jae
das
shll
repz
xor
outsl
sbb
shl
cli
inc
or
sub
jno
je
outsb
or
les
xchg
dec
cld
aaa
lock
jp,pt
shlb
adc
fwait
lock
loope
pop
lods
cmp
adc
das
or
scas
adc
inc
pop
lock
dec
leave
outsl
aad
push
sbb
ja
jbe
iret
pop
shlb
sub
adc
jo
lock
push
inc
push
mov
inc
mov
data16
jne
mov
popf
dec
lock
add
and
fldl
fldenv
data16
test
out
sbb
dec
fistl
xchg
add
icebp
in
push
push
iret
adc
jecxz
mov
test
mov
ja
imul
daa
and
cmc
loop
es
fiaddl
sbb
or
pop
mov
cwtl
mov
adc
dec
adc
cmp
push
jmp
cmp
loop
push
pushf
insl
ret
lock
sarl
pop
or
adc
fisttps
lock
add
movsb
lock
aad
frndint
add
xchg
pop
mov
push
cltd
pop
adc
sub
jb
es
stos
gs
test
adc
dec
xor
dec
xlat
mov
dec
cli
jo
xor
jle
out
lock
jp
dec
cmpsl
insl
or
jg
xor
sahf
lods
repz
mov
xchg
fcomi
mov
mov
testl
ljmp
lret
inc
mov
call
jo
jo
push
mov
or
cwtl
ljmp
lock
push
mov
pop
or
pop
in
inc
rorb
dec
scas
imul
mov
sbb
mov
outsl
repz
movsb
add
xchg
imul
mov
mov
sbb
lea
lock
mov
or
push
adc
mov
ret
jo
repnz
negb
cwtl
and
lock
and
add
pop
xchg
insl
push
push
dec
lock
leave
lods
jle
repnz
ljmp
xor
lock
adcl
and
lock
nop
push
shlb
adc
test
movsl
add
inc
sbb
mov
lock
repnz
pop
xor
aad
nop
jge
aam
lock
jp
cwtl
lock
imul
lock
shlb
lcall
ja
add
sub
and
repnz
lods
sub
ret
lods
orb
push
mov
loopne
outsb
ret
fnstcw
jo
loope
aam
mov
add
stc
and
or
fistps
adc
cmp
jae
mov
ret
add
iret
das
in
add
mov
add
les
push
bnd
leave
iret
dec
clc
add
inc
jo
or
mov
mov
xchg
and
xchg
dec
sub
sbb
adc
sbb
jb
and
jle
pop
xor
inc
insl
cmp
andl
lock
jno
mov
stc
lock
lea
mov
xlat
enter
cli
lock
mov
cmp
mov
sub
or
ss
int
pop
or
sub
out
sbb
loopne
mov
jp
data16
je
dec
inc
dec
out
and
repz
jo
push
fdiv
push
int
pusha
adc
mov
or
xor
shrl
shrb
mov
aad
stos
xor
ljmp
outsl
ss
xor
stos
mull
ljmp
pop
cmc
push
lock
lcall
in
mov
fidivl
adc
sub
inc
cmp
push
xor
add
or
or
test
mov
push
lock
in
xor
push
outsl
lock
jbe
push
stos
lods
push
icebp
into
lret
int3
rclb
mov
clc
inc
aad
icebp
xchg
mov
xchg
jne
jns
loope
push
or
lock
daa
inc
das
icebp
ds
cmp
cwtl
pop
mov
call
idivb
out
mov
dec
or
push
and
test
push
mov
sarl
arpl
adc
adc
fimull
and
ljmp
fs
enter
jns
lcall
cs
cmp
test
mov
cmpsb
lock
cld
xlat
sbb
loope
aad
jmp
popf
stos
scas
lock
add
je
lock
or
lock
out
mov
ss
bnd
arpl
mov
stc
outsl
pushf
mov
and
xorb
icebp
test
push
icebp
mov
mov
addr16
or
sbb
pusha
add
mov
jl
pop
mov
xor
mov
lock
int3
xchg
inc
sub
dec
sbb
sarb
das
mov
notb
clc
lock
test
outsb
inc
or
lds
jmp
sbb
rcrb
and
mov
pusha
fsubl
mov
mov
mov
mov
add
push
inc
cmp
xor
stos
stos
loop
add
cld
mov
hlt
cmpsb
lock
dec
cmp
jno
arpl
or
faddl
push
mov
mov
mov
adc
iret
cmp
cwtl
inc
cmp
jo
inc
cmpsl
enter
dec
scas
push
jmp
ljmp
andl
mulb
cmp
shll
std
sbb
dec
or
mov
jbe
in
lea
pop
xchg
add
push
jmp
js
arpl
lock
cmp
jp
lock
push
repz
shll
stos
sub
sbb
mov
jg
loope
int3
imul
pop
pop
or
cmpsl
adc
push
sbb
sub
les
imul
movsb
in
ds
adc
push
jnp
or
or
add
mov
ret
mov
cmp
or
es
adc
lock
fwait
lret
cmpsl
pop
dec
lods
add
mov
test
mov
lock
jne
mov
lock
gs
xor
xchg
mov
mov
es
lock
sbb
mov
or
sub
jmp
inc
lock
adc
mov
js
les
jp
lock
push
fadds
cmpsl
jge
jno
repz
je
mov
push
icebp
hlt
pop
or
push
cmc
push
fldenv
into
pop
adc
out
mov
pop
add
pop
out
cwtl
outsb
and
lock
cld
pop
cli
fists
lret
mov
shll
subl
test
push
mov
mov
cmovb
lock
mov
test
pop
into
xor
jg
lret
es
and
mov
pop
aaa
lock
in
cld
fisubrs
aaa
ror
sbb
cmpsb
or
xorb
jg
push
jo
mov
fidivrs
mov
dec
mov
in
push
js
jle
lock
pop
jg
lock
shll
lock
cs
inc
push
stos
repz
cwtl
ficoms
jmp
jb
dec
inc
mov
jle
in
icebp
mov
xchg
daa
adc
sbb
movsb
lea
xchg
jl
xor
add
and
test
lock
popf
cmp
xchg
or
mov
sub
pushf
addr16
das
mov
adc
jp
xchg
adc
les
push
out
lods
cmpsb
mov
xor
lock
mov
movsl
adcb
imulb
lock
push
and
jle
push
mov
and
loope
add
mov
xor
jnp
cli
stos
lock
cmc
aad
adc
or
fistl
adc
addr16
test
xor
daa
pop
push
das
push
jo
add
lock
gs
mov
inc
mov
fstl
shlb
jns
addr16
push
lock
xchg
daa
std
mov
sti
mov
jns
cld
cmp
enter
rcrb
jb
fwait
movsb
push
or
add
notl
dec
icebp
jne
jb
or
ss
cmp
mov
pop
mov
ss
insl
jo
add
pop
fnsave
push
gs
icebp
add
jp
jb
icebp
out
loop
jle
hlt
or
enter
push
popf
notl
cmpsb
push
mov
repnz
lds
lods
jbe
sub
popa
adc
dec
clc
fsts
lcall
sbb
cmpsb
ss
dec
arpl
test
lahf
add
icebp
rcll
cld
fdivl
lock
jmp
push
aam
pop
into
sbbl
and
out
out
adc
pop
cmpsl
clc
push
repnz
mull
lock
in
sub
popa
or
imul
pop
add
fs
xchg
or
cmp
sub
insb
push
mov
nop
or
jmp
xchg
xchg
mov
std
adc
fstpl
ficompl
jo
mov
add
lock
add
jmp
jb
mov
sbb
insb
pop
dec
lock
jecxz
sbb
lock
sub
push
sti
cmp
les
push
fimull
sbb
jne
jo
ret
out
jae
jns
push
inc
pop
pop
and
inc
jg
setle
mov
int3
xchg
in
push
push
or
mov
scas
mov
icebp
or
jne
push
add
inc
pop
movsb
popf
out
lock
mov
and
insl
xor
push
pop
es
mov
cmpsl
roll
mov
fwait
cmp
lock
lods
pop
repnz
add
insl
jle
movsb
xor
and
mov
out
or
pop
adc
aas
adc
idiv
jle
cmp
repz
in
xchg
loope
clc
jne
add
jmp
xlat
jo
rcrl
lods
int3
scas
push
ja
lock
rorl
adc
gs
lock
popf
sti
lock
das
pop
pop
jge
cwtl
loopne
lock
adc
sub
fstps
xlat
call
pop
shl
lock
inc
lock
inc
pop
add
lret
sbb
cwtl
rolb
lock
icebp
xor
cmpsl
arpl
sub
or
inc
cltd
mov
ja
xchg
dec
sbb
jge
cmp
hlt
clc
dec
jno
repz
int3
fdivrs
jmp
sbb
and
xor
stos
and
pop
shlb
sbb
fidivs
xor
add
lock
fstp
push
pushf
mov
test
mov
jns
lock
mov
out
icebp
repz
adc
dec
fcoml
icebp
fldenv
jae
sarb
xchg
adc
in
lock
lock
mov
or
xor
mov
lods
out
sti
sbb
lock
aam
movsl
mov
jecxz
cs
sahf
push
sbb
mov
push
sbb
fnstcw
repz
push
pmulhw
inc
aas
dec
arpl
xchg
fmuls
out
out
or
int3
xor
sti
mov
cmp
dec
sub
push
sahf
aas
std
add
or
scas
pusha
mov
cmp
sahf
adc
das
and
sar
push
icebp
rcrl
jno
call
push
divb
mov
jbe
shrb
iret
xor
dec
fadd
aas
jmp
lock
mov
cmp
xchg
pop
add
mov
call
add
add
mov
sub
xchg
pop
imul
push
roll
call
cld
test
jmp
stos
pop
push
and
xor
sub
push
lock
cmp
lock
cmp
icebp
movsb
and
out
decl
fiaddl
mov
sbbl
mov
mov
pop
mov
hlt
aas
icebp
mov
lods
mov
repnz
popl
lock
popa
jl
push
jg
shl
scas
andl
cld
jmp
jmp
lret
and
push
movsl
lock
pop
dec
and
mov
jo
loopne
cmpb
call
add
mov
jae
shrl
adcb
test
xchg
dec
cmpsl
fldcw
add
cmp
pop
jno
dec
dec
pop
int3
pushf
scas
lock
mov
push
mov
xchg
push
into
arpl
imul
or
push
ficomps
aas
lock
sub
inc
sub
push
push
pop
jo
xor
shrb
aam
in
inc
in
jnp
call
int3
jno
lock
dec
lea
jnp
icebp
fists
xor
xchg
movsl
int3
fisubrs
jo
repz
ret
lock
or
sahf
cmp
pop
stos
lock
iret
add
fs
lock
mov
scas
cmp
cmp
fbld
jge
pusha
fwait
clc
xchg
mov
dec
cmpsl
fcomi
dec
loopne
fbld
fcmovu
lock
cltd
js
xchg
lock
dec
rcrl
imul
lldt
cmpsl
insb
roll
test
sub
ja
push
push
inc
loop
jne
lock
mov
sbbb
lock
cmp
add
lret
outsl
push
cwtl
mov
scas
jno
xchg
sub
in
out
inc
cld
lea
leave
in
mov
lock
adcl
lock
add
sub
clc
dec
pop
adc
in
jge
pop
pushf
cmp
jns
cmc
movsl
insl
cmp
sbb
insb
mov
mov
adcl
sahf
or
mov
addl
icebp
cltd
maxps
test
inc
sub
fmull
mov
mov
lods
xchg
mov
cwtl
jl
popl
cmpsb
xchg
and
adc
cmp
dec
pop
sti
xchg
add
fs
mov
or
xchg
out
stc
repnz
jecxz
into
pop
add
sbb
adc
jo
mov
gs
lock
into
jo
shrb
lock
call
aaa
test
enter
mov
cmp
adcl
cltd
pusha
dec
push
cmp
sbb
jo
lcall
sbb
and
pushf
test
adc
outsb
fs
incb
mov
bound
or
push
jo
xchg
push
jbe
movsl
and
cmp
repz
add
push
pop
sub
cmpsl
cmc
lock
sbb
mov
push
lock
rcrb
mov
inc
std
jge
fs
push
clc
cmp
jne
mov
xchg
lods
mov
adcb
lock
jo
xchg
enter
lock
test
adc
mov
mov
jp
pushf
adcb
lock
popa
fs
loop
icebp
ret
jle
dec
rcl
push
lock
insl
jmp
mov
push
inc
in
lock
mov
adc
lock
cmpb
ja
ja
lock
adc
push
push
sahf
jo
bound
dec
push
jnp
jae
jnp
fwait
cwtl
mov
popf
xchg
leave
mov
cmpsl
lock
add
cmp
lock
fimull
or
pop
in
stos
pop
rcrl
adc
adc
cltd
insb
jno
mov
cmp
jae
add
mov
rorl
test
lock
test
divl
mov
add
xchg
adc
dec
jle
lock
jne
push
jmp
test
sub
jo
jns
outsb
mov
or
inc
mov
jb
arpl
xchg
mov
shlb
adc
mov
push
pop
icebp
cwtl
dec
je
inc
xor
mov
jo
xchg
cmpsl
and
scas
insb
fs
jl
xor
je
or
lock
rcl
test
inc
jecxz
push
cmp
push
cli
pcmpeqb
or
dec
or
mov
and
sbb
mov
cli
call
test
mov
lock
mov
add
test
jae
sarb
lock
jl
xchg
push
adc
xchg
nop
hlt
mov
int3
lock
pop
xor
sti
data16
fbstp
push
stos
pushf
ret
lock
pop
cmp
pop
xchg
inc
dec
movsb
js
add
add
or
cmpb
cld
cs
addb
outsl
lock
aaa
aad
rcrb
pusha
or
jl
ja
pop
add
mov
sub
pop
xchg
lock
inc
inc
jbe
clc
test
fwait
mov
lock
outsl
scas
jl
in
or
dec
adc
adc
jle
mov
mov
je
cltd
mov
nop
sbb
int3
dec
mov
popf
call
lock
ret
pop
addb
jo
shlb
cs
mov
push
pop
roll
popf
pushf
push
jmp
mov
mov
pop
and
lock
or
add
stos
push
pusha
xor
jl
lock
push
imul
push
pusha
cmp
out
test
fsub
rcrb
lock
push
mov
pop
dec
add
iret
push
pop
lock
popf
pop
mov
dec
pop
js
xor
lock
jnp
jo
lods
lahf
ret
lock
push
sbb
lcall
cs
cmp
push
lds
jmp
mov
fdivrs
or
btc
test
arpl
mov
test
enter
cltd
popf
sahf
pop
call
push
ds
adc
mov
lock
aas
je
mov
loope
pop
or
inc
dec
sbb
or
lahf
xchg
adc
push
sbb
jmp
push
push
inc
jno
inc
imul
rorb
fwait
jl
cli
dec
pop
mov
push
loop
fbstp
cwtl
stos
mov
and
pop
pop
sub
stos
push
fstpl
xor
andps
pop
ret
xor
addr16
jmp
add
cmp
xor
or
fs
xor
ljmp
and
out
test
adc
addl
cmpsl
add
ja
xchg
rclb
xor
adc
cltd
mov
stos
and
xor
lock
lcall
lret
fldcw
and
loopne
ss
adc
push
inc
adc
orl
cld
mov
push
push
fdiv
adc
clc
addb
xor
repz
test
xor
insb
cs
movsb
pop
int
repnz
mov
xor
clc
pop
loopne
sub
aam
lock
test
sub
mov
test
test
pushf
jmp
call
lea
test
push
lock
cli
sub
in
or
and
fcmove
subl
jae
mov
call
les
aam
test
jp
cmc
cld
insb
xor
in
repz
xchg
pushf
les
fwait
jo
push
sarb
adc
aad
fdivs
cld
or
push
push
xor
popf
pusha
jo
xor
pop
sub
pop
mov
add
rorb
lock
dec
push
imul
mov
push
stos
out
hlt
xchg
pop
inc
int
xchg
mov
xor
out
in
lock
mov
add
mov
add
lods
fimull
dec
lock
jnp
cmpsl
push
and
inc
sbb
daa
lock
ds
in
xchg
aad
or
sub
ljmp
lock
jno
xor
fistpll
xchg
aad
mov
push
xchg
or
sub
nopl
adc
ljmp
js
test
insb
mov
xor
mov
test
push
adc
sahf
sbb
test
jno
or
sbb
lcall
inc
cmp
ja
and
ja
cmp
mov
scas
mov
lcall
lock
sbb
sbb
push
call
xchg
cmpsb
lcall
js
lock
addr16
jae
sbb
mov
inc
fisttps
mov
lahf
push
lea
xor
test
into
test
inc
fnstsw
cmpsl
je
push
test
stos
sbb
mov
imul
stc
ja
xchg
mov
adcb
jo
fdiv
popf
popa
adc
dec
or
mov
mov
je
adc
sahf
div
dec
mov
inc
cmp
xchg
inc
std
lea
cmc
or
out
lcall
pop
bswap
lea
mov
inc
clc
jp
sbb
test
and
add
je
xor
xor
lahf
inc
imul
incb
fcmovnb
or
pop
test
es
pop
mov
push
lock
cltd
mov
jle
movsb
ret
int3
jae
in
push
lock
fldt
adc
repz
sbb
add
cwtl
cmp
lock
and
xor
popa
xor
or
mov
je
in
add
jbe
leave
fdivrs
test
adc
daa
incb
mov
xchg
cwtl
cld
mov
jo
in
test
push
push
int3
sub
jl
inc
pusha
mov
je
adc
pushf
js
pop
aas
insb
int3
ljmp
add
xrelease
ficoml
xor
dec
dec
repnz
mov
mov
sub
cmp
pushf
and
mov
cwtl
cmp
sbb
cli
adc
in
icebp
lock
rolb
jnp
lcall
fcomi
push
mov
les
or
inc
cld
push
ja
cmp
cmp
repz
andb
sbb
mov
sbb
add
fisubs
add
lock
cmp
lock
testb
pop
lock
pop
pshufw
jl
sub
add
nop
push
add
lock
mov
cmp
cmp
popf
test
pop
sub
or
xchg
add
mov
sub
push
push
push
pop
sarb
lock
add
js
ss
cmp
pop
adc
fwait
push
dec
inc
packuswb
int3
das
test
jnp
fldt
repz
ror
pop
lock
aas
pop
aam
xchg
icebp
cmc
xchg
dec
pop
push
rol
in
addl
lock
stc
adc
setp
pusha
pop
repz
lock
pop
pmuludq
shr
or
xchg
popf
lock
imul
sbb
clc
mov
leave
or
push
cmp
cld
xor
clc
and
sbb
push
xor
add
lock
xchg
dec
aad
mov
lcall
jno
in
dec
or
mov
repnz
sub
mov
addl
push
lock
fwait
pop
mov
cwtl
jne
jl
movaps
dec
jnp
pop
out
hlt
push
mov
xor
std
and
xchg
pop
ret
mov
mov
and
xor
fcomip
ja
in
mov
lock
clc
orl
dec
pop
lahf
xchg
cmp
lock
cmp
xor
adc
dec
cltd
mov
ja
sbb
jge
xchg
fs
jb
je
sbb
lock
mov
lock
mov
pop
inc
push
call
rclb
pushf
xchg
inc
xor
fisubl
cmp
sarb
mov
stos
sub
pop
push
push
pop
cmp
jmp
sbb
cmp
and
push
icebp
sarb
lock
cwtl
dec
push
cltd
mov
mov
pusha
xchg
in
orps
pop
jo
xchg
jo
xor
mov
and
jmp
jle
inc
mov
stos
pop
mov
subb
lock
call
add
ja
cld
mov
adc
outsb
imul
dec
rclb
or
test
jmp
cli
lock
jne
adc
xlat
cmp
mov
push
xchg
lock
or
adc
jne
hlt
inc
and
in
int
mov
movsl
inc
loopne
mulb
lods
arpl
add
es
fwait
aas
dec
sub
movsl
repnz
adc
mov
jnp
pushf
in
push
subl
inc
mov
mov
sbbb
in
fld1
lock
andl
jne
lock
xor
cwtl
inc
lock
mov
fsubrs
mov
jmp
nop
mov
inc
rolb
rorb
int
add
xchg
cmp
cwtl
ret
or
xchg
popf
mov
repz
jg
repz
ret
repnz
les
imul
sbb
mov
aad
test
lcall
sub
mov
push
addl
stos
cwtl
add
sbb
cmp
dec
lock
divl
dec
lock
fdivs
cmp
je
in
fs
lock
sub
pop
adc
lock
jbe
jg
fildll
popa
lea
and
pop
or
lock
cmpb
std
test
es
cmpsl
andl
xchg
xor
xchg
pop
dec
dec
sbb
mov
fcoms
lock
in
test
mov
jae
adc
rol
and
mov
inc
fdiv
in
sub
cmp
sbb
icebp
dec
pop
lock
lahf
lock
xor
mov
inc
or
bound
in
xchg
mov
jno
mov
filds
test
sub
add
push
lahf
mov
cmp
jle
xchg
mov
insl
sbb
cmpsl
sbb
sahf
lock
cmp
lock
cmp
cmp
lahf
lock
mov
cmpsl
cmp
iret
inc
sub
lock
clc
mov
loop
stos
lahf
mov
mov
add
test
dec
nop
call
xor
jmp
call
push
mov
lcall
cmc
xor
dec
jge
cmp
aam
lock
cmp
je
divb
push
test
nop
push
insb
stos
cmp
mov
inc
jo
lock
imul
lock
mov
jge
lahf
xchg
sarb
dec
repnz
fwait
lock
inc
pop
in
call
aad
cmp
and
outsb
mov
mov
or
dec
jno
bound
adc
and
ds
sub
push
pop
cld
pushf
repnz
push
fcomp
nop
lock
xchg
int3
inc
mov
add
pushf
lock
push
loop
ds
pop
cmp
xor
cmp
jae
inc
add
out
aaa
push
les
stos
cmp
inc
lock
nop
in
test
dec
sub
jns
lock
fdivp
sub
dec
mov
arpl
and
mov
cmp
dec
jecxz
jge
lock
jp
imul
lock
sahf
lcall
test
push
mov
cld
jge
test
jmp
mov
mov
gs
push
xor
lcall
sub
jecxz
jmp
movsb
loopne
fcmovbe
dec
enter
mov
mov
les
fs
jo
add
xchg
fidivrl
inc
cmpsb
cmp
and
sbb
out
mov
inc
lock
jl
cmp
fs
lock
cltd
insb
lock
jno
sub
push
pusha
pop
add
inc
mov
jno
push
test
test
jo
and
lock
add
std
pushf
test
pop
lcall
and
jne
adc
adc
mov
loop
jno
pop
pop
mov
popf
fdivl
lock
sbb
mov
mov
jno
lock
sbb
and
sbb
dec
mov
call
test
mov
lcall
cmp
inc
es
gs
sub
addr16
xchg
sub
inc
mov
stos
jl
dec
lods
test
pop
and
or
icebp
add
lock
add
pop
adc
mov
push
lock
outsb
lea
les
in
lock
enter
aas
inc
add
js
add
mov
bound
mov
repnz
divl
jo
cmc
mov
in
shl
stos
push
push
inc
pop
dec
aaa
pop
pushf
cwtl
repnz
xor
in
mov
shl
test
push
jno
cmp
pop
stos
sub
sub
in
clc
cmpsb
cmp
imul
insb
rcr
je
lock
cmp
inc
xor
dec
test
stos
mov
jg
pusha
sub
and
mov
fidivl
andl
pop
sbb
shlw
lock
inc
pop
dec
fmull
cwtl
jo
xorb
add
pusha
cmp
imul
cmp
stos
int
inc
xchg
subb
jl
vunpckhps
sub
and
lcall
adc
push
add
cli
lock
or
jnp
mov
or
sbb
fs
cmp
popf
orb
push
jl
popa
cwtl
pop
push
jb
push
jo
push
movsl
add
icebp
mov
les
sub
and
cmp
push
sbb
cmovno
lcall
dec
clc
push
mov
jp
sarb
lock
push
fnsave
push
jo
pop
rcrb
ja
xchg
mov
scas
dec
lock
popf
arpl
iret
lret
jl
cld
mov
lock
xor
jmp
icebp
fdivrl
push
push
adcl
jl
push
pop
popf
lock
mov
or
mov
sub
lock
mov
out
out
psrlq
or
mov
subl
test
lock
jbe
cmpsl
lock
rcrl
sbb
mov
ret
push
lock
imul
lret
ja
mov
mov
cmp
mov
lcall
jbe
dec
test
js
lock
xchg
stos
inc
inc
inc
xor
mov
sbb
sub
adc
into
repz
loopne
mov
lock
ds
adcb
lock
fbstp
and
inc
enter
cmp
loopne
jbe
sub
jo
es
or
call
jmp
mov
xor
mov
sub
lock
adc
bound
shlb
lock
jl
xor
add
jb
cld
iret
lahf
push
cwtl
test
and
enter
fisttps
daa
lock
mov
lock
imul
dec
data16
lock
int3
loope
faddl
mov
iret
push
pop
movsb
jnp
hlt
xchg
stc
lock
mov
inc
daa
nop
cmp
sbb
xchg
popa
mov
push
jnp
test
movsb
or
stos
mov
repz
scas
xor
arpl
in
push
mov
gs
push
adc
fisttps
sub
nop
pusha
aad
dec
in
adc
into
mov
adc
lock
mov
adc
cmp
jne
icebp
push
sti
pop
pop
add
push
int3
loopne
lock
and
jae
cltd
lock
lock
sahf
imul
add
out
lock
xchg
daa
sbb
inc
scas
pushf
ja
xchg
push
leave
stos
xor
cmc
iret
jns
xchg
addr16
call
repnz
xor
lea
mull
push
mov
outsb
mov
mov
cmp
jge
nop
mov
cmp
aam
imul
ficomps
push
mov
or
push
clc
loop
and
add
mov
nop
leave
lock
fs
scas
divl
sbb
fidivl
lret
aas
cld
push
cmp
dec
out
pop
dec
mov
bound
mov
mov
cmpsb
jae
sti
lock
and
and
jne
lock
dec
dec
roll
je
nop
mov
ss
nop
xor
pusha
into
loopne
xor
adc
xor
or
xor
lcall
jmp
xchg
jne
inc
arpl
in
popa
xor
inc
and
pop
dec
jl
cmp
out
cmc
out
pop
and
jo
add
cmpsb
iret
and
lock
pop
int3
jno
movsb
jb
icebp
xchg
jl
jmp
les
mov
test
je
stos
mov
aam
mov
cltd
leave
cmpsb
mov
fsubrs
pop
js
adc
mov
sbb
mov
jae
out
lds
sbb
xor
lock
add
inc
insl
push
xchg
adc
pop
jne
enter
sbb
lea
inc
xor
lret
repz
sub
sub
jmp
or
lock
std
jo
inc
mov
xor
mov
leave
lock
mov
mov
bound
lock
popfw
aad
mov
xchg
test
xor
dec
adc
sub
inc
mov
filds
jge
pop
add
mov
pop
pop
popf
lock
inc
jno
and
sti
push
lahf
fstl
sub
sub
loope
daa
ror
sub
lock
push
mov
std
outsb
jno
pop
ss
sub
jae
and
into
push
rorl
mov
sbb
outsb
stc
cmp
or
std
inc
cmpsb
jb
push
pop
dec
cmp
xor
add
mov
int
sbb
pop
addb
into
divb
jo
push
loope
decl
mov
out
adc
sbb
cmp
fisttps
lds
mov
addl
and
call
ss
inc
test
pop
rol
xchg
push
xchg
adc
mov
push
pushf
insb
cwtl
inc
xlat
sbb
data16
jns
mov
push
loop
jge
fs
lret
stos
test
xor
push
out
sti
cmp
jne
in
jns
sti
gs
dec
outsb
adc
aaa
push
bound
sub
mov
hlt
push
leave
lcall
jl
outsl
dec
and
adc
push
or
cmpsl
test
dec
xchg
sahf
lock
out
lock
sbb
in
lock
cmc
addl
inc
stos
repz
pavgb
gs
pop
test
push
add
aaa
mov
mov
jmp
mov
jo
jmp
aam
add
pop
push
add
sbb
aaa
pop
sbb
sub
mov
lock
stc
cmp
es
adc
out
enter
jb
rcrb
ficoml
icebp
pop
lds
mov
or
xchg
repnz
cmp
mov
in
cmp
sbb
lods
cmc
ficomps
mov
add
fistl
xor
xor
roll
aad
je
xor
popf
lcall
imul
pop
int
mov
sub
repz
jl
jo
pop
mov
lahf
js
out
out
negl
pop
cli
mov
call
jb
add
adc
lahf
aad
sbb
push
inc
mov
jmp
sbb
dec
push
dec
js
cwtl
pusha
cmpsl
clc
sti
cmp
mov
xchg
xchg
inc
pop
call
test
jp
icebp
xchg
push
stos
in
sbb
and
imul
cwtl
push
movsb
fcmovbe
sbb
decb
mov
sub
jns
pop
ja
and
jle
dec
hlt
jo
pop
xchg
gs
mov
sarl
or
mov
mov
pop
xor
mov
out
jno
shrl
popa
xchg
ret
psadbw
and
jo
or
lock
pop
cmc
lock
std
mov
mov
test
rclb
popa
mov
lock
stos
xchg
insl
rol
js
lock
push
or
cmc
push
adc
xor
push
xchg
dec
mov
lcall
out
insb
jno
aad
lock
gs
std
outsl
in
lock
or
test
push
call
in
jg
aad
adc
sub
fidivrs
clc
aas
repnz
cmp
or
mov
mov
pop
je,pn
add
addr16
add
outsb
lock
add
jno
adcl
lea
jns
out
jmp
mov
mov
insb
adc
hlt
push
lock
adc
jmp
das
fiaddl
cli
lock
enter
je
in
scas
lods
loopne
ds
jle
psrld
test
pusha
lret
test
dec
lock
inc
inc
and
pop
pushf
adc
mov
add
sahf
rcl
jbe
lock
out
jnp
repz
or
psubsw
pop
test
sub
adc
pop
mov
scas
mov
jne
clc
or
push
sarl
shr
insb
movsl
sbb
cmp
movq
sahf
xor
mov
lock
pop
or
pusha
inc
lock
add
nop
outsb
xor
jp
jbe
mov
test
lock
lods
orl
popf
jb
cli
lret
xor
push
cmp
ss
test
mov
xchg
mov
pop
gs
sbb
cmp
adc
in
ret
inc
xor
inc
xchg
mov
aam
ret
push
lock
sbb
push
mov
and
mov
lock
shlb
mov
sub
daa
and
out
call
rorb
out
and
jp
clc
xchg
fstpl
add
mov
ljmp
movsl
jge
adc
xor
lock
xor
or
sbb
popa
dec
pop
dec
sarb
mov
test
lock
cltd
mov
ret
and
cmp
or
sti
jg
loopne
stos
lock
cs
dec
pop
addr16
lock
pop
sbbl
idivl
mov
inc
lcall
xchg
movsbl
cmp
pusha
and
dec
sbb
ss
mov
lock
addb
lock
aad
je
jl
clc
xchg
mov
repz
adc
xchg
leave
xchg
outsl
mov
mov
in
pop
scas
call
mulb
inc
dec
xchg
cmp
push
dec
pop
clc
push
sbb
cmp
adc
shll
lock
jbe
sub
test
fistpll
mov
adc
push
lock
jg
pop
push
cmp
xor
bound
shll
dec
pop
repnz
sbbb
lock
or
pop
jl
testb
and
cmp
xlat
repz
nop
pop
outsb
lahf
mov
repz
adc
fwait
repnz
mov
lock
cmpsb
nop
icebp
adc
mov
aam
jb
adc
jae
adc
mov
add
sub
ss
int
in
inc
jae
or
call
mov
push
xor
sbb
xchg
mov
leave
in
div
xchg
push
add
das
test
mov
mov
test
and
or
aad
jne
sbb
ja
out
adc
std
in
ja
test
and
cmp
add
cmp
sti
and
cwtl
push
dec
cmp
loopne
push
movsb
jo
cmc
out
push
cmpsl
movsl
push
xor
sub
push
popf
fs
stos
roll
std
repnz
push
cmc
jp
divb
cmpsb
cmp
shrb
sbbb
lock
sbb
adc
sub
or
lret
iret
jbe
push
shl
pop
mov
push
mov
loop
adc
mov
addr16
push
fs
pop
pop
add
mov
dec
push
xchg
jp
xchg
aas
mov
jp
sarl
push
icebp
sub
or
xchg
fsubr
pop
push
jnp
cwtl
lea
out
inc
lock
cld
popf
and
hlt
push
repz
mov
push
jle
daa
loopne
jmp
cli
xchg
adc
pop
inc
in
stc
or
enter
fwait
dec
lds
fcomps
pop
xchg
jno
adc
clc
js
or
xchg
lret
pop
cwtl
sbb
ret
jmp
addr16
push
add
xchg
scas
pop
mov
mov
push
and
inc
inc
xchg
data16
lods
lock
sub
ds
sub
lock
push
push
shr
jnp
cs
push
sub
push
insb
lods
mov
nop
xchg
ret
loop
sbb
idivb
scas
stc
push
lea
stc
mov
mov
or
sahf
pop
xor
in
push
fcmovnbe
adc
cmovae
dec
xor
notb
fstps
cmp
aaa
jmp
pop
mov
icebp
add
add
or
pop
mov
pop
lods
movsl
push
out
push
jge
rcl
push
clc
lahf
lock
fidivs
dec
int
push
arpl
into
sub
frstor
or
jmp
test
jmp
lock
cmpsl
shll
stos
pop
hlt
sti
mov
pop
cmp
cmc
push
mov
cwtl
pop
pop
popf
es
pop
jp
sahf
inc
and
into
outsl
jmp
jno
jae
int
inc
out
lock
xor
lahf
dec
mov
mov
pop
lock
xchg
mov
push
fistl
lock
jo
dec
sbb
lock
pop
inc
or
xor
shl
mov
rorb
and
jo
lds
shl
js
or
lods
es
push
out
hlt
lock
repnz
mov
fxch
bnd
stos
fdivs
push
sbb
popf
arpl
data16
dec
clc
dec
lea
push
sar
mov
xchg
xchg
or
sub
push
lock
gs
jb
adc
aas
sub
sub
test
push
xor
insl
rcll
push
stos
push
pop
lock
and
lret
sbb
faddl
push
xlat
les
dec
jmp
push
and
mov
push
mov
lock
xor
adc
jg
lock
aaa
cmpsb
xor
xor
lock
xchg
push
xlat
lock
aam
int3
scas
lock
fs
fstps
movntq
nop
cli
pusha
dec
aas
pop
in
test
mov
pop
xor
dec
data16
mov
aaa
adc
rcrb
setb
lods
mov
enter
call
mov
repnz
mov
add
stos
andl
adc
movsl
pop
loopne
sbb
jo
jg
cmpsb
pop
hlt
add
imul
data16
andl
jbe
mov
ds
sub
adc
sub
push
imul
loop
jne
dec
pop
xor
in
lock
pop
faddl
lret
imul
in
dec
inc
mov
lock
fnstcw
sub
sbb
xchg
xor
sbb
adc
lods
fnsave
movsb
popa
sarb
mov
ret
xchg
xchg
adc
lock
pop
add
push
xlat
lock
notl
xor
repz
shlb
lock
mov
into
lock
pop
std
repz
ret
gs
cmp
iret
add
cltd
aad
lock
mov
sub
fdivrl
insl
ds
jb
mov
jmp
lock
fildl
and
hlt
fxch
inc
jmp
lcall
jle
add
xor
scas
push
fcoms
or
cmp
movhps
dec
inc
or
adc
inc
and
hlt
add
jg
xor
dec
sub
out
push
push
dec
mov
sub
mov
lock
das
gs
xor
mov
ret
jp
or
mov
fucom
sub
imul
dec
pop
adcb
imul
je
das
nop
or
clc
push
clc
adc
insb
daa
add
call
and
orl
shl
repz
dec
or
shll
jo
imul
idivb
jo
insb
popf
xlat
add
icebp
pop
pop
adc
and
divb
add
jbe
dec
es
push
jo
xor
fstp
pop
loope
mov
jb
cmpsb
pop
jnp
lock
xor
xor
loopne
insl
sub
ljmp
cmpsl
mov
and
or
int3
dec
xor
lret
lock
stos
je
pop
arpl
lahf
ret
call
lods
call
xchg
mov
repz
cltd
or
repz
testb
xor
jae
nop
addr16
ret
lock
cmp
ss
mov
push
fwait
jl
in
imull
inc
lods
cs
in
lcall
cmp
adc
ss
jns
xchg
and
ficoml
in
inc
lock
mov
cld
dec
lock
xor
pop
mov
and
aam
leave
mov
pop
or
imul
mov
fistpl
repz
clc
mov
jae
pusha
and
movsb
repnz
icebp
xchg
in
push
jae
aad
fs
pop
jp
test
lock
test
sbb
loopne
add
addl
iret
test
ja
subb
cmp
jge
mov
adc
loop
hlt
cmpsb
jnp
inc
sbb
insl
dec
mov
pusha
jge
mov
inc
push
ret
and
jns
add
xor
jp
inc
push
sbb
jns
pop
sti
pushf
sub
imul
outsb
jo
jg
data16
push
jl
bound
mov
add
sarl
cmpsl
dec
movsb
out
push
adc
mov
push
call
stc
sub
repz
jmp
xchg
or
mov
movl
cmp
push
adc
jne
add
mov
or
cld
xchg
cltd
iret
inc
dec
test
xchg
mov
psubsb
xchg
jno
and
lock
mov
dec
into
repnz
push
mov
cmpl
repz
mov
pop
mov
mov
enter
dec
shl
inc
insb
cmp
jae
pop
dec
fisubs
cs
mov
test
popf
mov
movsb
stos
jae
xchg
xor
and
cmpsb
xchg
jbe
cmp
push
push
xor
dec
jle
test
aas
cmp
std
xchg
ret
lods
pop
pop
call
dec
mov
iret
rorl
mov
xorb
push
lock
jecxz
xor
mov
or
int
and
bnd
jg
cmpsl
xchg
push
cmp
jo
jmp
sub
enter
dec
out
enter
push
dec
int
div
inc
das
inc
cmp
ret
icebp
xchg
sti
cmp
sbb
dec
iret
sbb
in
int3
int
lea
mov
loopne
xorl
fwait
xchg
xchg
ljmp
f2xm1
push
and
imul
rcrl
cwtl
icebp
scas
adc
cld
xor
cltd
mov
jno
push
mov
addr16
sub
or
pop
ljmp
call
pushf
addr16
jae
dec
xor
jl
icebp
rclb
rcr
stc
cmpsb
lock
shl
sub
dec
add
add
jecxz
test
push
nop
sbb
sub
lods
bswap
xchg
sbb
lock
pop
xor
icebp
in
ja
dec
das
adc
insb
add
sbb
xchg
lock
inc
movd
cmp
ljmp
xchg
jp
repz
sbb
int
or
pop
push
test
jo
jmp
dec
lock
xchg
pop
push
outsl
push
cmp
mov
sub
pop
repnz
push
es
xchg
mov
lock
clc
or
sub
xorl
mov
lock
jae
rolb
jle
mov
mov
out
push
lock
dec
inc
decl
es
dec
and
adc
xchg
and
flds
and
push
daa
jbe
out
iret
jg
lock
test
cli
dec
push
movsb
ss
loop
cmp
mov
shrb
jne
in
mov
into
fistpl
mov
pop
and
testb
add
adc
mov
add
rcrb
aad
div
aaa
xor
and
add
xor
pusha
add
push
push
push
push
xchg
cmp
loopne
lock
jb
aaa
imul
fstpt
dec
or
mov
lock
xor
jge
orl
scas
lods
sub
insl
arpl
movsb
cs
push
les
pop
dec
adc
or
add
xor
lock
cmp
dec
inc
icebp
sub
xor
cmp
out
test
push
lods
fidivrl
mov
ljmp
lock
cmc
mov
mov
adc
aaa
aad
push
shl
inc
call
shlb
rcrl
mov
lahf
dec
inc
mov
scas
push
push
xchg
loope
clc
mov
fstps
in
xor
adc
imul
mov
and
pop
pop
or
jl
scas
xchg
lock
or
sahf
clc
stc
fwait
lock
imul
jo
and
pop
adc
xor
shlb
mov
arpl
mov
xor
sbb
cmc
stc
rcl
xor
clc
pop
data16
lock
bnd
out
daa
bound
shrl
jecxz
hlt
rolb
add
testl
cmp
clc
mov
std
cmp
push
in
jp
call
push
into
jo
or
xor
pushf
push
or
pop
icebp
push
push
mov
adc
enter
call
inc
lds
pop
repz
mov
repnz
mov
dec
js
lock
dec
stos
xchg
iret
ds
sub
nop
pop
shrb
push
xlat
jl
cmp
lock
mov
or
mov
jbe
les
sbb
mov
and
popa
lock
arpl
ror
dec
out
cmp
and
jecxz
ljmp
addb
pop
shlb
add
push
jg
adc
cld
bound
cmp
inc
jmp
ja
imul
roll
lret
dec
clc
cld
out
add
sub
inc
xor
inc
pop
xchg
lds
and
rorb
lock
add
xchg
cmp
icebp
rorb
mov
or
je
negb
dec
sub
xchg
orb
fwait
test
rcl
repz
pop
movsb
ret
push
lock
mov
das
xor
imul
xchg
lock
pop
jo
hlt
push
lahf
and
pop
stos
mov
in
xor
int3
sahf
push
push
test
jle
shll
shl
adc
imul
data16
out
lock
insl
add
lock
popf
jnp
sbbl
push
adc
push
iret
jg
xchg
and
mov
or
dec
cli
test
mov
bound
clc
push
icebp
shll
insb
and
push
arpl
fmulp
int3
in
pop
fistpl
bound
test
and
pushf
lock
xchg
xor
pop
icebp
jmp
pop
mov
jb
nop
lods
push
js
add
mov
aaa
mov
pop
xor
push
jnp
adc
inc
adc
lock
jmp
notb
or
pop
in
xor
icebp
lock
incl
adc
call
cli
cmp
push
icebp
dec
pushf
test
ret
mov
inc
adc
fs
adc
sbb
jle
adc
icebp
int3
mov
and
lock
adcb
repnz
xchg
popa
xor
mov
sbb
ds
in
jbe
leave
push
dec
sub
push
push
hlt
add
cmpb
mov
pop
pop
xor
jbe
add
dec
ljmp
and
lock
push
pop
subl
pop
dec
in
lock
adc
bound
cmp
jne
insb
lock
sar
mov
or
cmp
cld
mov
in
lock
jle
inc
jmp
cmpsl
sarb
jecxz
int
pop
lock
arpl
aad
fimuls
mov
pop
imul
icebp
subb
lret
lods
lock
mov
outsb
dec
inc
lea
cmp
insl
xor
inc
jo
add
lock
push
sbb
push
xchg
or
mov
lcall
sub
jo
and
mov
aad
pop
int3
sbb
adc
add
mov
sbb
hlt
adc
add
xchg
mov
jne
mov
mov
cmp
push
sub
lock
dec
loopne
aaa
lock
push
sub
sub
xor
xchg
or
movsb
icebp
cmp
or
xor
cli
mov
clc
mov
inc
jg
adc
cmp
int
xor
in
out
jns
mov
xchg
sub
push
cltd
push
lret
dec
lock
jo
push
std
pop
ss
jbe
mov
pop
jg
or
xor
adc
xor
jmp
daa
int3
lock
push
icebp
cmp
lahf
push
sbb
test
lods
adc
dec
jb
cmp
iret
outsb
pushf
jne
add
sahf
sarl
xchg
gs
mov
pop
pop
insb
lock
sub
mov
adc
jne
lock
testl
fwait
movsl
ds
jl
sbb
adc
xchg
pop
xchg
add
mull
mov
mov
mov
or
dec
xchg
pop
sub
jl
mov
fmuls
frstor
xchg
xor
subb
icebp
addr16
jae
movsb
mov
mov
or
inc
or
mov
xor
movsb
jo
push
pop
add
sub
loop
lock
pop
add
add
inc
out
ret
dec
sbb
jnp
incl
loopne
lock
out
out
cmp
icebp
xlat
xor
or
adc
and
xor
dec
inc
push
mov
outsb
jbe
divl
add
pop
in
arpl
and
addr16
clc
imul
jge
shr
cmp
push
pusha
and
pop
cmp
sbb
mov
jmp
jge
into
jae
sub
sbb
jmp
add
test
repnz
sbb
aam
jle
jo
mov
lret
lahf
push
inc
shll
cltd
lock
testl
or
call
jle
lock
into
loopne
scas
unpcklps
insb
xadd
or
and
lods
jmp
sbb
rol
or
lock
stos
inc
mov
fnstenv
adc
das
in
popl
lock
je
movsb
add
outsb
push
mov
xor
out
mov
les
fcmovnb
sti
fcomip
fs
cld
push
pop
adc
add
mov
pop
repnz
sbb
adc
faddl
jg
and
mov
mov
dec
jns
xor
movsb
roll
sub
and
jne
xor
jecxz
mov
mov
repz
sahf
imul
cli
shrb
mov
sbb
insb
repz
fadds
ds
call
movsl
cs
orb
nop
cmc
imul
mov
add
jl
sbb
jne
lock
add
jp,pt
cmp
jo
xor
mov
push
out
jecxz
push
cli
and
das
mov
mov
mov
fucomip
icebp
add
sarb
les
or
repnz
dec
lock
mov
cmp
push
cmp
xorb
movsb
fmul
ret
push
ss
lock
xchg
mov
adc
clc
cmp
pop
jo
popa
dec
fidivl
lock
les
pop
jmp
ror
push
cld
inc
icebp
sub
or
and
xchg
lock
jge
fs
cmpsl
ljmp
xor
sub
lock
mov
sbb
call
test
movsl
cld
jg
jae
mov
add
test
nop
jmp
sub
xchg
cwtl
sub
dec
push
je
cmc
lock
pop
cmovs
lock
push
xor
mov
fadd
mov
test
aam
cld
lock
pop
mov
xor
stos
lock
jp
pop
mov
push
subl
jae
sub
lock
icebp
aas
jmp
int3
xor
test
sbb
call
out
xchg
mov
stos
cmp
jge
and
test
xchg
enter
fs
add
push
xlat
cmp
add
lock
cmp
lock
test
and
cld
insl
sarb
pop
sbb
pop
loopne
and
push
xchg
adc
or
inc
lods
pop
iret
lock
orb
lock
subb
mov
shll
call
rcrl
push
test
mov
cmp
out
mov
lock
testl
imul
xorb
shl
jmp
in
iret
repz
cmpsb
inc
clc
mov
lock
roll
insl
inc
out
js
pop
lret
xor
cmp
jae
out
xchg
adc
fdivr
mov
gs
mov
xor
adc
mov
lock
dec
fildl
cmp
jnp
aad
dec
jg
jne
insl
sbb
lcall
push
lahf
add
vmulss
repnz
addr16
out
loop
stos
lret
xchg
pusha
inc
cli
les
lock
test
scas
lock
push
mov
push
or
jo
jnp
icebp
ret
and
outsb
mov
mov
or
imul
xor
jg
add
in
dec
div
mov
fstp
jmp
pop
insb
mov
mov
shl
dec
inc
jo
pop
mov
rolb
jmp
dec
outsb
imulb
mov
sub
popf
sub
call
mov
clc
dec
mov
ret
push
cmp
les
jp
xchg
repnz
sub
push
jecxz
lods
outsb
movsl
adc
push
mov
push
mov
scas
and
cmp
and
mov
dec
adc
or
sbbl
popa
add
pushf
dec
bound
test
mov
sbb
fisubl
loop
push
icebp
push
std
inc
aad
das
jae
cmp
xchg
or
test
sbb
mov
dec
mov
fmulp
ret
sub
adc
insb
mov
xchg
into
ljmp
dec
jmp
xchg
testb
pop
mov
mov
sub
cli
repnz
pop
inc
or
loope
movsl
roll
inc
sbb
or
sbb
jg
mov
xorl
cli
sbbb
inc
out
lahf
sbb
jnp
cli
cmp
sbbb
enter
and
and
lock
in
scas
es
icebp
cmpsb
lret
xor
ja
mov
xchg
cmpsl
lock
mov
and
out
jb
rclb
fiadds
mov
andl
xor
dec
push
mov
popf
fldl
cwtl
icebp
push
xchg
int
fdivp
add
push
push
push
std
rorb
cmp
sub
lock
push
jae
rcr
fsts
sbb
mov
sub
jmp
sbb
xchg
lock
data16
mov
std
rcrb
mov
fnsave
lock
arpl
rcrl
mov
bound
scas
punpckhwd
or
imul
aam
fldenv
jecxz
jmp
inc
pop
push
jb
xor
mov
lock
xchg
dec
or
in
out
lock
rcrl
lock
push
int3
mov
lock
into
test
loop
imul
jg
lock
repz
roll
f2xm1
jmp
ret
mov
sub
xor
cmp
repnz
cmp
mov
xor
cmpsb
imul
loope
pop
les
scas
lahf
mov
imul
ss
pop
or
arpl
call
push
push
rorl
mov
mov
outsl
aam
adc
jbe
adc
shl
jo
divps
mov
pop
jo
or
sub
lock
push
ficomps
sub
ljmp
aam
adc
and
mov
call
sbb
nop
lods
fimull
jo
mov
stc
outsb
jno
sbb
pop
pop
js
jmp
xchg
loopne
sub
sar
scas
mov
inc
push
pushl
lock
movsb
std
lock
xchg
push
maxps
clc
stc
ret
jle
pop
test
pop
cvtdq2ps
cld
lds
inc
psubq
and
push
xchg
mov
and
outsb
fwait
stc
xchg
sub
cmp
jmp
imul
sbb
sbb
cld
cltd
mov
xchg
jno
or
xchg
dec
mov
inc
fwait
aad
mov
ret
inc
xchg
fdivr
or
cld
mov
sub
sbb
in
pop
loope
mov
cmp
jg
iret
daa
dec
or
xor
and
lahf
loop
xor
cmp
push
test
mov
lock
sbb
sub
int
ds
or
mov
mov
sahf
rcr
lock
or
cmp
lock
jb
lds
roll
lock
sub
bound
xchg
notb
movsl
and
in
ss
mov
rcrb
mov
push
cmp
subb
pop
mov
mov
mov
add
jmp
mov
prefetchw
sub
filds
adc
push
push
mov
aad
adc
addl
add
lahf
lea
push
pop
push
adc
adc
jno
lahf
cld
mov
cld
xchg
or
sbb
push
jg
test
xchg
jne
xlat
enter
cmp
jbe
add
xchg
dec
or
or
call
out
sbb
push
xchg
movsb
lret
mov
lock
js
push
or
push
push
push
mov
mov
sub
lock
push
imul
sbb
xchg
rcl
xor
cmpsl
int3
inc
scas
adc
fisttpll
push
push
pushf
sub
add
lock
xor
je
lock
insb
pop
imul
movsb
xor
or
push
xor
in
mov
notb
decb
in
icebp
sub
icebp
sbb
stos
mov
stos
jecxz
out
inc
jns
lock
push
dec
addr16
push
push
xchg
or
dec
inc
and
notb
xchg
mov
sub
pop
adc
negl
dec
push
cmp
mov
xorb
lock
push
push
adc
and
dec
fs
insb
fisubs
lock
mov
aaa
aam
int
jne
sbb
inc
lock
out
xchg
or
gs
or
push
pop
shll
jne
jmp
lock
nop
pop
and
xchg
lock
popf
mov
lock
jo
inc
lock
movsl
dec
sahf
jge
xchg
push
sub
aam
mov
pushf
rep
popf
shl
inc
inc
inc
jp
pop
insb
pop
mov
adc
lock
dec
lcall
xorl
ss
mov
popa
xor
and
test
and
movl
popf
push
lock
add
pop
dec
lock
dec
lea
cmp
inc
fsub
mov
stos
xchg
xor
and
aas
and
jbe
lock
mov
xlat
pop
jbe
cmpsl
mov
lock
sub
push
repz
ss
movsl
clc
pop
push
mov
mov
or
loop
jo
cmp
push
fwait
lock
pop
mov
imul
insb
xorb
lock
sub
lock
pop
and
cmp
ds
sub
sti
cmp
stos
sbb
lock
lahf
and
fldenv
adc
push
enter
and
push
int3
pop
cmp
sarl
movsl
mov
jae
stos
add
sub
rorl
pop
add
jl
lret
push
dec
push
or
sub
ss
dec
cmp
xor
adc
test
dec
ja
popa
lock
repnz
imul
xchg
jbe
lock
sub
sub
cmp
xor
pop
xchg
icebp
xor
inc
icebp
cs
adc
dec
pop
cli
ret
sub
and
push
lock
cmp
pop
push
aas
jge
jo
lahf
push
pop
inc
jne
lock
inc
push
sbb
pop
clc
push
icebp
les
dec
popa
cmp
mov
pop
js
push
test
adc
adc
aaa
outsb
push
mov
lock
sbb
repz
cwtl
sbb
lock
jo
add
jp
push
lock
lret
sar
clc
or
lock
jbe
pop
dec
lea
jecxz
add
shll
add
icebp
push
imul
cwtl
pop
mov
ja
icebp
dec
pop
dec
jp
lea
adc
lock
sbb
lock
push
in
xchg
or
mov
or
add
cmpsl
lock
js
imul
or
jecxz,pn
push
mov
dec
cmp
cmpsb
fwait
jmp
lock
aam
js
int
in
mull
ja
jle
and
cmp
add
cs
sub
icebp
pop
add
aad
enter
pop
lock
insl
jge,pt
setg
movsl
and
inc
inc
jne
js
push
cmp
ja
pop
loope
in
pop
cltd
jo
test
aaa
and
cmp
lock
mov
and
mov
das
sarl
cmp
lock
mov
sub
pop
addb
fcomps
outsl
jp
fadds
test
mov
or
fimuls
ljmp
mov
lea
cwtl
enter
dec
jl
outsb
mov
mov
loop
push
add
jo
out
jp
hlt
push
lock
xor
jl
cmp
cmp
jnp
pop
stc
loopne
lea
adc
inc
xchg
mov
je
int3
xchg
cs
push
aaa
sub
mov
and
fiadds
das
or
call
sbb
repnz
fnstsw
mov
ljmp
addb
adc
ss
xchg
xor
jg
out
lock
js
sub
call
pop
fwait
inc
popf
mov
out
xchg
xor
pop
notl
jb
mov
push
inc
push
cmp
dec
cmp
lret
jo
pop
test
xor
and
add
popf
mov
mov
jnp
mov
call
dec
pop
repz
test
inc
cmp
call
es
adc
cmp
loopne
inc
jmp
repz
xor
pop
jne
enter
lock
mov
gs
std
sbbl
jae
xor
cli
popa
dec
add
inc
lock
test
cmp
mov
imul
lock
lret
xchg
mov
lock
pop
push
sti
push
xor
ret
pop
rorb
or
or
fisubrl
cmc
je,pt
jl
movsl
out
inc
in
nop
or
es
out
dec
jne
xor
xor
loopne
das
sti
lock
cld
xchg
imulb
or
jmp
fistl
clc
lock
fidivrs
sub
pop
stc
jo
in
movsb
in
mov
clc
fsts
sti
and
lock
fsubl
sub
call
cmc
rcr
add
inc
cwtl
dec
push
enter
cmp
and
fbstp
mov
pusha
xchg
leave
rcrl
loopne
js
stos
pop
dec
inc
adc
dec
dec
add
xorl
jo
repnz
xchg
scas
xor
mov
dec
cmp
dec
les
cltd
xchg
js
cmp
push
push
jns
lock
pusha
stos
pop
adc
fdivrl
sub
adc
pop
hlt
imul
ljmp
cmp
repnz
pop
ss
das
dec
dec
out
aas
cmp
je
pusha
outsl
push
xorb
mov
add
fsubl
repnz
xorb
pop
hlt
movsb
lock
pop
dec
mov
std
lahf
incl
mov
mov
jle
cmp
xchg
pusha
inc
shl
and
out
adc
stos
sub
stos
xchg
pop
xor
or
repnz
jl
repz
add
pop
pop
push
lock
in
pop
push
push
les
mov
mov
jo
stos
jmp
xor
lahf
and
lock
inc
je
jne
jp
mov
pushf
nop
sarb
or
mov
hlt
mov
cmp
xor
push
ja
pop
data16
jmp
lock
sbb
icebp
ljmp
in
or
jl
dec
jbe
rclb
mov
lock
out
cs
mov
push
in
mov
sti
jno
rolb
es
icebp
cmp
push
cld
xchg
mov
dec
movsb
nop
add
dec
fcomps
sti
repz
jmp
aam
xchg
prefetch
sub
loopne
mov
clc
or
pop
lock
incb
out
push
mov
push
repz
pop
jp
fs
icebp
cmp
loop
in
sbb
fmull
push
lcall
push
in
rcrb
jp
mov
push
andb
pop
lock
or
ret
jle
and
xchg
jbe
push
mov
inc
push
or
jnp
xor
push
push
lock
jne
scas
xchg
push
add
mov
lock
ja
mov
push
xchg
lock
std
insb
or
lock
lods
add
daa
movsb
adc
lock
xchg
adc
sub
xor
jge
pop
lock
lahf
mulps
xchg
ss
loop
es
outsl
xchg
cmp
add
movsl
rep
pop
xchg
test
jno
lock
iret
inc
and
imul
leave
adc
lock
xchg
jne
daa
gs
pushf
in
and
sahf
lock
pop
jg
in
mov
js
jle
lock
ja
stc
jl
cwtl
loope
outsl
xchg
mov
shr
jo
cmc
fisttpll
push
sub
lock
inc
add
stos
jo
lock
xlat
push
sahf
imul
aam
ret
lock
sub
ja
and
movsb
lock
xchg
mov
dec
loop
lock
fwait
test
jnp
push
pop
nop
hlt
nop
and
push
push
cltd
xor
xor
mov
or
add
jo
mov
pop
mov
and
movsb
stos
iret
xor
or
add
lahf
mov
shl
or
lock
lock
cltd
and
jns
imul
movd
add
push
push
or
imull
dec
clc
ljmp
dec
lock
sub
je
mov
adc
icebp
fsubs
subl
cmp
in
movsl
cltd
push
test
rcrb
rolb
out
pop
jo
insl
pop
cwtl
enter
ret
pop
les
push
lock
pop
jge
imul
test
orl
leave
shl
imul
xor
lea
xor
clc
movsb
sbb
movsl
stos
enter
int
out
dec
scas
in
sahf
sbb
lock
mov
sub
icebp
movsl
dec
xor
out
repz
mov
in
test
sub
es
inc
sbb
jns
lock
repnz
movsb
div
jbe
notl
shl
scas
mov
adc
pop
lret
xor
or
lock
or
lahf
cs
dec
pop
aad
setae
shlb
orb
fisubs
ljmp
aad
cltd
sti
sbb
mov
ds
adc
push
pop
fldcw
stc
sbb
cmpsb
pop
mov
iret
xlat
lock
std
xchg
lock
mov
in
mov
lock
aam
cmp
in
pop
push
mov
hlt
lods
adc
mov
mov
loop
lock
aad
ljmp
lock
dec
pop
adc
cmpsl
stos
lock
insb
pop
and
movsb
xlat
lock
xchg
pop
imul
gs
div
dec
push
shrb
lock
and
pop
sbbb
xchg
add
lock
xchg
movsl
xor
add
dec
sub
enter
mov
int3
sub
movsb
mov
inc
inc
imul
pop
pop
bound
xor
lods
pop
test
hlt
sbb
inc
popf
mov
cld
add
lock
pusha
lock
jo
stc
dec
fwait
nop
sahf
cwtl
sahf
lock
add
clc
fidivl
jo
mov
pop
or
lock
stos
or
adc
mov
and
mov
or
dec
orb
f2xm1
repz
movsl
test
sbb
and
js
sub
adc
xor
cmp
jge
inc
test
pushf
ja
nop
mov
out
lock
aaa
dec
popa
mov
push
cmpsl
sub
push
xlat
lods
mov
lock
movsb
cmpsb
lods
mov
in
insl
push
push
xchg
dec
data16
push
add
sub
lock
test
repnz
add
test
cli
iret
mov
mov
mov
mov
movsl
lock
imul
xchg
add
ret
mov
mov
frstor
popf
pop
stc
or
movsb
mov
mov
fcomip
movsl
daa
push
in
inc
xor
pop
lock
cmp
lret
ss
or
scas
push
mov
cld
insb
test
fs
xchg
and
nop
cmpsb
icebp
inc
mov
add
sbb
sarl
loopne
sti
and
fmull
fwait
in
popf
imul
lock
sub
adc
xchg
movsb
shl
and
inc
cmc
xor
scas
lahf
mov
in
lock
xchg
dec
sbb
push
ret
lock
nop
in
leave
es
movsb
das
sub
iret
repz
outsw
fwait
pop
push
loope
psubw
arpl
add
pop
add
jo
lret
hlt
xlat
add
xchg
outsl
imul
push
mov
sub
mov
cld
cmc
jb
cli
movsl
insl
inc
cmp
test
into
ja
cmp
sbb
push
ds
sub
idiv
movsb
mov
xor
pop
mov
lock
mov
inc
sub
clc
or
cwtl
inc
loopne
jo
fcoml
mov
or
popa
in
fcoms
dec
ret
fisubrs
enter
mov
adc
adc
insb
test
mov
mov
lock
mov
mov
pop
xchg
sti
lock
push
add
lock
incb
inc
lock
iret
int3
pop
loop
dec
push
mov
add
rcrb
or
xor
lret
orl
iret
jl
pushf
lock
add
in
fnstsw
xor
mov
lock
pop
sarl
push
adcl
nop
inc
xchg
add
xchg
add
adc
out
das
in
or
ljmp
mov
jns
andb
lret
icebp
pop
xchg
pushf
cmp
dec
lods
lock
pop
lock
dec
mov
lock
psubb
jb
and
cld
mov
out
pop
dec
pop
push
push
cmp
add
xor
lock
popa
pop
test
add
push
mov
fcomi
xchg
xchg
xor
in
push
or
jmp
inc
les
push
div
cld
inc
push
data16
clc
xor
mov
cmpsb
or
dec
nop
jo
lret
jp
ss
mov
das
sub
shl
loope
cs
pushf
pop
leave
xor
out
inc
cwtl
dec
lock
repz
ds
icebp
in
fldenv
xlat
pushf
jle
out
cltd
pop
jecxz
gs
je
lock
mov
std
jnp
mov
scas
psrld
push
insb
and
push
mov
andb
jo
mov
dec
adc
jl
and
cli
out
repnz
add
in
pop
loopne,pn
movsl
lock
xor
push
push
and
mov
mov
add
call
add
rcll
jns
jae
movsb
sub
mov
and
push
xchg
and
push
punpckldq
and
jecxz
notb
js
sub
lock
addr16
cmpsb
push
in
dec
pop
jb
bswap
lea
bound
mov
imul
shrb
pop
je
rorb
lock
xchg
cmp
imul
mov
idivb
clc
adc
jns
mov
in
icebp
data16
mov
es
dec
dec
addr16
or
sub
mov
jo
mov
fsubrl
shlb
xchg
inc
dec
push
mov
and
mov
divl
mov
call
and
add
cmp
movsl
dec
dec
mov
and
push
in
icebp
push
or
ror
xor
inc
or
movb
aaa
jo
jecxz
dec
mov
pusha
sub
cmp
pop
jb
popa
cld
mov
xor
shl
cwtl
adc
lock
test
cmpsl
test
cmp
testb
in
pop
sbb
pop
xor
and
cmpsl
dec
mov
inc
int3
push
iret
ret
test
lock
movsl
jb
or
scas
jp
xchg
or
loop
add
outsl
jge
ds
in
xorl
clc
or
cmp
fists
ss
ds
jo
cli
sub
rorl
ss
cwtl
enter
mov
mov
cli
xor
lds
ljmp
and
lret
sbb
fs
jno
add
push
adc
dec
xor
movsl
xor
dec
xor
mov
icebp
or
cmpsl
addl
into
daa
xor
inc
mov
lods
call
push
lock
das
aam
lock
jl
lock
mov
andl
hlt
lock
ds
xchg
test
in
mov
sub
dec
lock
das
mov
outsb
lock
xlat
mov
mov
mov
clc
lock
mov
popa
pop
sub
or
fsubrl
and
in
push
mov
jge
sahf
lods
or
inc
inc
jecxz
push
cmp
inc
aaa
sub
add
push
xor
and
ret
mov
out
and
pop
xor
ret
stc
sub
jnp
inc
clc
add
mov
enter
pop
test
pop
lock
call
pop
lcall
mov
mov
add
jns
push
jnp
jmp
push
inc
out
push
xor
in
add
icebp
hlt
ret
and
ja
cmpsl
xor
lock
je
dec
inc
addr16
cmpsb
lock
jecxz
mov
xchg
ss
jmp
mov
mov
mov
loopne
and
int3
repz
subl
mov
sbb
xor
cmp
inc
cmpsb
lock
mov
fwait
repnz
cmp
mov
sub
out
lock
mov
mov
sbb
and
jo
mov
inc
mov
test
jnp
mov
and
push
adc
xor
mov
sub
lret
and
outsl
jb
ret
push
xor
xchg
subb
lcall
add
mov
pop
inc
adc
lea
dec
mov
or
popa
cli
out
xor
jmp
repz
and
pusha
mov
stos
sub
adc
nop
int3
or
lock
mov
adc
pop
and
stos
xchg
mov
lock
xchg
lock
push
jbe
lock
fimuls
aam
cmp
cmpsb
setae
push
or
push
push
push
data16
jns
test
cltd
cmp
in
icebp
js
or
jg
ja
mov
add
lds
nop
adc
cmp
stc
inc
mov
lods
pop
scas
xlat
lock
dec
stos
cmp
gs
mov
call
fistpl
jge
iret
lock
xor
inc
and
xchg
or
ror
lock
adc
or
ds
jge
std
adc
lock
filds
repz
or
pop
and
enter
push
lods
mov
sti
xchg
inc
sbb
jp
test
repz
sarb
es
pop
mov
subb
fnstenv
lock
mov
add
lret
out
mov
je
jmp
xchg
xchg
adc
sub
xor
add
jnp
xor
sbb
pop
lock
movsl
stos
fisubs
ljmp
mov
test
nop
popf
into
jo
in
jge
das
mov
rorl
push
pusha
push
pop
or
inc
adc
and
insb
loopne
sbbl
jge
jp
sbb
lock
lds
ja
lock
cmp
dec
cmp
lock
aam
cli
lea
call
mov
push
push
lret
fiaddl
cwtl
insl
repz
cmpsl
xor
pop
lock
pop
push
dec
inc
xchg
or
addr16
dec
cld
dec
add
test
or
cli
xor
mov
cli
lock
subb
or
lock
dec
test
scas
pushf
and
adc
fcomps
sbb
stos
mov
arpl
cmp
push
test
hlt
jb
int
fdivp
mov
sbb
ficompl
jl
xlat
js
sub
addb
faddp
or
shll
jmp
das
sti
repnz
inc
jbe
dec
add
push
adcb
call
xorl
jne
pop
pop
adc
mov
les
lock
add
je
mov
js
call
cmp
xchg
iret
ljmp
push
dec
mov
mov
ret
iret
dec
and
lock
sub
lock
cmp
ja
push
aaa
pop
lcall
inc
xchg
jno
pop
std
out
enter
sbb
fwait
or
xlat
pop
repz
pop
mov
or
hlt
mov
mov
cmpsb
arpl
jns
lock
mov
push
and
outsl
f2xm1
fstpt
test
pop
adc
test
xor
je
jmp
pop
pop
add
icebp
enter
xor
push
lock
and
mov
lock
or
push
pop
fs
icebp
into
dec
mov
xor
lahf
jmp
icebp
xchg
add
mov
jmp
cs
jg
jg
sbb
xor
mov
adc
repnz
rclb
add
icebp
loope
mov
adc
sbb
inc
lcall
mov
ljmp
sbb
out
adc
repz
pop
jmp
dec
cwtl
fmull
pop
out
xchg
fwait
xor
int
jmp
dec
sub
sbb
stos
pop
inc
add
pop
clc
xchg
jo
shlb
das
xchg
jbe
insl
les
push
cli
icebp
or
aam
jb
push
mov
mov
lock
fs
inc
pop
lock
sbb
repnz
es
mov
scas
jo
cltd
dec
scas
inc
aad
mov
ficoms
adc
scas
mov
jo
push
inc
sub
pop
rolb
xchg
and
push
inc
xchg
pop
and
adc
jne
sub
adc
xchg
jp
pop
dec
imul
dec
int
rol
std
xchg
sub
add
xlat
call
mov
jge
lea
sub
jno
repnz
jp
rcrb
les
dec
jo
out
cmp
sbb
jge
or
sub
cwtl
imul
or
adc
mov
repnz
add
xchg
xchg
pop
call
fcoml
ret
dec
sub
pop
loopne
lock
xchg
test
push
fstpl
mov
inc
adc
cmp
fidivs
adc
xchg
das
popf
push
sub
scas
fidivl
ffree
mov
movsb
ret
lret
stc
jmp
xchg
mov
xor
jmp
mov
xchg
lock
jo
mov
dec
sbb
loop
outsl
fcomi
mov
repnz
mov
lret
imul
mov
push
rorl
pop
fs
push
jo
jne
jnp
dec
jno
shlb
lret
enter
clc
adc
outsb
movsb
popf
lock
push
stos
arpl
and
jnp
mov
data16
test
mov
sbb
icebp
pop
mov
mov
fists
insl
cwtl
call
int
inc
jge
lock
js
fsubrp
mov
outsl
aaa
pop
pop
lock
loopne
jmp
cmpsb
lock
loope
daa
or
inc
lock
xchg
pushf
cltd
lock
lods
idivb
test
clc
sahf
add
loopne
int
icebp
gs
xchg
outsb
jnp
push
jg
pop
movsl
loopne
pop
mov
mov
rorl
mov
add
leave
push
es
fxch
or
call
mov
push
inc
or
lock
push
hlt
mov
rorl
and
call
jge
jo
add
sbb
xchg
icebp
shl
ret
addb
mov
std
adc
jo
out
jo
jne
cmp
movsl
lock
icebp
mov
push
push
enter
sarl
add
movsb
pfcmpge
mov
ljmp
jge
sti
sbb
test
sub
clc
sub
mov
jge
cmpsl
dec
lock
lods
lock
fisttps
inc
loope
inc
cltd
cmp
xchg
mov
pop
jmp
lock
mov
sbb
lret
dec
repz
imul
jo
pushf
bound
sbb
stos
mov
cmc
lock
lods
sbb
pop
pop
clc
push
push
cltd
inc
adc
sbb
mov
add
inc
inc
pop
lock
stos
cld
gs
mul
arpl
pop
lock
repnz
inc
or
xchg
hlt
repz
or
or
mov
dec
int
dec
mov
out
mov
lods
icebp
and
mov
sti
jmp
repz
movsl
arpl
pop
add
lea
xchg
or
mov
test
popf
pop
mov
repz
lahf
jmp
jg
mov
cwtl
dec
lock
mov
or
lock
sub
std
xchg
mov
push
fcmovbe
lret
loopne
pop
movb
mov
sbb
and
ljmp
mov
push
cmp
xchg
or
push
cmp
out
inc
ds
mov
imul
jb
jne
outsl
je
imul
lock
pop
fistl
stc
push
in
mov
call
or
lret
sbb
dec
ljmp
stos
repnz
aad
xchg
and
lock
inc
lock
cmp
sub
adc
pop
das
add
ret
add
pop
xor
je
mov
cmp
outsl
imul
in
aad
jnp
cmpsl
pop
jmp
cltd
sbb
jno
loopne
dec
dec
test
xor
dec
std
xchg
cmp
add
cmc
cmp
lock
loopne
insl
xchg
cltd
fsub
icebp
mov
testb
or
cmp
sbb
daa
mov
cmpb
pop
sub
pop
mov
fimuls
jmp
out
xchg
mov
jo
out
jmp
shll
xchg
or
jo
lods
leave
mov
adc
push
push
repz
lock
and
jnp
iret
dec
adc
shll
lock
jnp
ja
lcall
mov
test
jb
lock
out
lods
rorb
repnz
mov
aas
mov
stc
lret
inc
fdivr
jnp
push
or
icebp
ret
jo
jno
insl
jb
mov
mov
mov
ds
notb
push
add
repz
call
xchg
aam
add
popf
cs
in
arpl
add
out
enter
sbb
push
sbb
or
aam
inc
and
repnz
push
cmpb
mov
shlb
mov
aad
xor
xchg
jbe
adc
lock
std
popf
push
xchg
cli
sub
mov
and
test
lock
repz
sbbb
ja
lock
jne
leave
add
xchg
lock
mov
add
cmp
js
mov
fwait
push
fsubs
imul
or
lock
or
es
faddp
xchg
xchg
dec
push
and
pop
mov
push
loopne
scas
pop
adc
lahf
jmp
jno
cmpb
cli
lock
into
dec
jb
test
push
lock
test
mov
stos
lock
mov
dec
inc
icebp
jne
mov
in
inc
shl
xorl
jo
popf
lcall
jmp
shrl
xchg
adc
ds
xor
out
jae
clc
icebp
cmc
call
shr
cmp
lahf
mov
clc
push
loop
out
sbb
xor
aas
loope
jmp
mov
inc
or
mov
push
shlb
jmp
add
int3
mov
popf
adc
je
out
jae
jns
cmpl
or
push
lret
sub
cmp
mov
movb
xor
mov
add
sahf
adc
daa
xor
movsb
fnsave
dec
scas
or
sub
mov
mov
in
int3
lock
out
add
cmpsb
mov
lock
push
enter
lock
xchg
pop
cli
lock
or
inc
bound
mov
fwait
add
mov
lock
mov
push
outsl
xor
scas
xorb
mov
nop
sub
jp
mov
stc
ljmp
push
bound
cmp
jo
and
test
es
jmp
inc
jmp
adc
clc
icebp
fdecstp
je
mov
push
sub
push
in
pop
or
shrb
jns
in
pop
sbb
mov
sub
imul
lock
xchg
mov
stc
xchg
jbe
sub
ss
roll
jmp
xchg
jo
xchg
adc
enter
dec
mov
frstor
jb
ret
xor
and
inc
add
cmpl
mov
fdivl
das
popf
add
xchg
jo
pop
and
andl
repnz
mov
je
sub
stc
pop
dec
arpl
dec
cwtl
xchg
jle
xor
ja
adc
sahf
jno
xor
sbbl
mov
repz
jne
push
sub
scas
ret
inc
mov
sbb
cs
xchg
push
lock
ds
std
jns
mov
adc
xchg
mov
ret
dec
cmpsl
aaa
arpl
mov
jnp
xchg
pop
popa
mov
aas
xchg
adc
xor
sub
inc
imul
xor
icebp
jb
mull
and
into
cmp
lahf
sub
gs
lock
mov
inc
inc
push
and
lock
sub
push
aam
pop
adc
cli
repz
lret
orb
popf
push
mov
and
jge
lock
lods
dec
subl
jb
jo
jp
or
lock
bound
pop
mov
jns
scas
cmp
repz
add
pop
icebp
mov
cmp
jnp
stc
push
popa
or
and
imul
scas
lock
and
lcall
mov
sub
sub
mov
fisubs
mov
lock
stc
mov
jg
adc
dec
ss
cmpsl
xor
xchg
lds
mov
addr16
mul
hlt
inc
mov
lock
sub
and
out
push
insb
fisubl
dec
mov
iret
jmp
jns
add
je
sti
rcrb
fsubrl
rcrl
mov
sbb
scas
pop
lock
in
mov
movsb
imul
jns
jno
sbb
cmpsl
mov
jmp
jle
fmuls
ret
mov
add
adc
dec
xchg
mov
jae
addr16
mov
mov
hlt
xor
das
out
cmc
fisubrs
call
icebp
insl
sub
movsb
test
jno
aam
push
sbb
dec
and
out
sbb
jbe
cmp
loopne
int
and
push
sbb
lea
loopne
adc
sbb
jo
test
sti
int3
push
stos
lea
andb
popf
repnz
mov
push
or
sbb
adc
in
fdivrs
adcb
add
push
ret
loopne
mov
jo
jne
mov
push
divb
and
xlat
adc
scas
mov
dec
hlt
and
xchg
push
lods
and
cmp
adc
xor
adc
push
jae
icebp
gs
or
sbb
xor
push
mov
mov
loope
mov
imul
inc
enter
lods
push
sbb
les
mov
or
test
test
adc
or
cmpxchg
les
push
fbstp
adcl
stos
je
lret
scas
in
sbb
dec
imulb
nop
cmpb
inc
lds
rcrb
mov
in
int3
sub
adc
js
push
test
test
andb
adc
repnz
daa
call
fldenv
sbb
mov
loopne
cmp
push
jmp
dec
mov
xchg
jae
add
add
fistpl
int3
add
outsb
mov
test
push
nop
fxch
test
loopne
lock
ds
int3
xchg
dec
aaa
leave
pushf
lock
repnz
aaa
mov
lock
xor
loope
scas
push
lahf
lods
insb
fneni(8087
clc
add
lock
adc
sahf
mov
pop
ja
mov
icebp
mov
mov
fdivs
sub
sub
pop
lock
mov
or
sub
mov
xchg
jge
push
hlt
je
es
in
les
scas
xcrypt-ecb
cmpsl
dec
in
push
adc
mov
enter
hlt
jecxz
sub
cmc
jle
js
incb
rcll
in
jnp
aam
mov
sahf
jne
aam
pop
rcl
or
inc
les
xchg
mov
xchg
jp
mov
cli
dec
push
ret
test
loope
jns
cwtl
data16
cmc
adc
test
push
clc
sar
cs
jp
nop
icebp
jo
repnz
cmp
int3
jecxz
jae
call
push
lcall
and
push
jbe
jo
xor
xchg
jmp
add
imul
push
enter
mov
loope
mov
inc
lock
mov
mov
mov
jp
pop
jle
nop
dec
popf
mov
popa
rclb
hlt
rcrb
pop
out
and
jo
imul
sbb
add
mov
aad
mov
stc
ret
inc
inc
and
dec
clc
test
enter
sahf
jb
cmp
call
add
lock
mov
pop
lock
and
cmp
dec
stos
mov
and
jecxz
shl
gs
fldl
mov
and
jo
adc
pop
xor
push
icebp
jg
mov
loop
pop
xorb
mov
sarl
jmp
jmp
add
sub
or
cmp
scas
std
push
or
push
xor
pop
das
test
push
pop
cmp
and
push
shll
xor
mov
scas
sbb
les
inc
dec
jp
mov
aas
rcrl
mov
mov
jo
loope
mov
cmp
inc
jae
in
or
clc
fwait
outsb
ret
call
dec
repz
inc
jl
fildl
inc
aad
stos
push
inc
icebp
daa
adc
sub
xor
in
xor
jae
cld
and
mov
mov
adc
xchg
xor
and
xchg
mov
mov
aam
sbb
gs
inc
outsl
xor
stos
mov
or
shrb
int
bnd
les
push
ja
mov
call
mov
pop
mov
push
fwait
add
mov
mov
sbb
dec
push
mov
jmp
xor
inc
fidivl
or
clc
jmp
sub
mov
inc
dec
cmpb
add
aam
in
mov
stc
cmp
repnz
mov
je
ret
rcrb
inc
int3
decl
inc
in
jne
mov
cld
xchg
dec
mov
or
xor
mov
sti
jnp
mov
dec
add
mov
movsl
hlt
adc
call
xor
sbb
in
rorb
push
jmp
out
leave
add
adc
jo
dec
pop
stc
sub
xchg
lock
push
cmp
arpl
inc
imul
pop
or
mov
xchg
push
or
stc
repnz
clc
inc
jae
notl
fcomps
outsb
sti
out
or
in
xor
push
cmp
sti
shlb
std
pusha
inc
repnz
call
push
cmp
ss
add
ss
scas
push
push
dec
hlt
pushf
aas
dec
cwtl
sub
xchg
pop
and
outsb
mov
mov
push
sub
pop
mov
loop
mov
jecxz
dec
adc
jl
or
mov
xlat
or
ljmp
call
sbb
notb
insl
stc
scas
cmp
shll
negb
jmp
inc
xchg
call
inc
mov
nop
cmpsl
cmp
xchg
push
jae
shll
fadds
cmp
mov
aam
xchg
sbbl
sbb
mov
dec
pop
jmp
xor
jbe
inc
dec
mov
lods
cmp
hlt
stc
mov
mov
inc
or
jge
add
out
nop
ljmp
in
sbb
mov
sete
xor
loop
mov
adc
fmull
popa
and
fucomip
push
pop
movsl
mov
pop
and
fs
lock
jmp
test
xlat
inc
mov
lahf
pop
mov
jbe
loopne
into
daa
add
rcrl
jmp
jb
ja
aas
sbb
pop
movsb
enter
pop
arpl
fwait
aas
mov
sbb
roll
jmp
out
leave
sub
fmulp
mov
es
clc
int
dec
or
jo
fcoml
xchg
mov
lods
rorl
lcall
adc
icebp
or
lods
aad
data16
or
and
pop
jecxz
mov
sbb
leave
repnz
jno
pushf
outsb
rolb
test
bound
mov
or
call
add
std
repz
divl
mov
pop
adc
mov
mov
xlat
test
cmp
cmp
mov
jo
mulb
and
push
mov
jae
inc
sub
sar
mov
movsb
aas
mov
or
sbb
js
mov
insb
or
add
sbbb
faddl
xor
out
inc
adc
inc
imul
cmpsb
fmull
xchg
lahf
cmp
mov
pop
cbtw
inc
leave
daa
cltd
mov
mov
pop
push
divl
xor
insl
divl
or
cld
test
div
pop
xchg
int
push
frstor
lods
inc
leave
pop
mov
leave
xchg
or
cmp
inc
xchg
bound
jnp
push
sub
sbb
adc
xor
mov
mov
pop
test
bound
int3
mov
mov
or
sahf
or
shl
sub
mov
pop
or
pusha
add
lock
and
loope
aaa
cmpsb
lret
cwtl
fsubs
stc
test
adc
lcall
inc
pushf
dec
stos
mov
sbb
orb
sbb
ficoml
adc
pop
push
jl
add
ljmp
ljmp
xor
xchg
mov
cmp
subb
lea
sub
cli
dec
rclb
enter
stc
test
push
mov
cmpsl
pop
outsb
sub
repz
cli
fnstenv
xor
ds
inc
xchg
adc
push
cmc
sbb
call
shrl
mov
inc
call
jmp
ss
stc
aaa
stos
push
rolb
or
in
jne
mov
cmp
pop
dec
adc
mov
push
fstl
push
mov
daa
mov
adc
leave
cmc
adc
jae
icebp
mov
and
push
xor
push
jo
enter
or
mov
addr16
sub
mov
mov
in
addb
inc
mov
jl
testb
jb
or
mov
icebp
mov
add
mov
lahf
jno
xchg
call
les
repnz
ret
enter
outsb
lods
mov
mov
repz
push
notb
call
lods
leave
loopne
ja
inc
push
add
cmp
sub
sahf
adc
insl
mov
sub
xor
lods
movsb
outsb
jnp
xlat
out
aaa
add
add
mov
or
jmp
push
cmp
mov
aad
int3
and
and
imul
mov
sub
inc
shlb
nop
add
fs
paddd
pop
adc
inc
mov
mov
mov
mov
mov
fsubrs
add
dec
out
lock
inc
mov
call
pop
xor
outsb
sbbl
je
push
fnsave
mov
cltd
mov
xchg
int3
xor
stc
or
dec
mov
sbb
jmp
inc
xlat
mov
repz
and
repnz
inc
fsubrp
sbb
sbb
pop
mov
push
filds
cmp
mov
insl
enter
mov
ret
push
inc
shr
imul
and
push
xchg
test
push
mov
cmp
inc
xchg
dec
in
test
sbb
dec
and
aas
push
call
adc
cld
sahf
mov
dec
xchg
into
pushl
dec
xor
adc
ss
pushf
into
ret
cmp
mov
mov
add
mov
setne
out
repz
iret
pop
sub
rcll
cmp
dec
shrl
jmp
add
xor
ret
inc
jb
mov
or
adc
pop
cltd
pop
aam
outsb
movsl
adc
inc
inc
xor
push
cli
and
pop
clc
daa
xlat
leave
scas
push
outsb
outsb
idivl
dec
push
xorl
cs
lcall
mov
shl
sub
adc
fstpl
rol
mov
repnz
pop
lahf
call
push
mov
std
ret
mov
adc
dec
add
in
push
push
cmp
fisttps
adc
stc
or
cmp
sub
stc
push
xor
sbb
adc
leave
push
fdivl
sbb
sub
mov
jmp
adc
jle
adc
jl
add
jmp
cmp
adc
jmp
sbb
aad
icebp
mov
sbbb
adc
mov
hlt
dec
std
fsts
xchg
fcomps
sahf
inc
stc
popf
mov
add
sub
inc
aas
fistpl
lods
push
enter
mov
cltd
adc
lcall
data16
sbb
or
push
pop
push
cmp
or
mov
mov
inc
push
push
loope
xchg
inc
xor
fdivr
std
ret
pop
xor
sbb
and
push
jmp
das
jmp
sbb
cmp
sub
inc
sbb
jmp
std
mov
mov
repz
cmp
mov
std
cmpb
dec
ret
shrl
cmp
mov
dec
adc
sub
and
or
jecxz
xor
sbb
cmp
inc
mov
adc
xor
xor
icebp
jb
jmp
jmp
call
mov
adc
sbb
add
imul
lods
adc
bound
lods
jp
test
mov
mov
sti
xchg
ret
xchg
iret
in
aaa
xchg
xchg
lret
ds
inc
sbbl
inc
add
insl
lea
rorb
or
pusha
mov
or
inc
fadds
add
std
sub
fcompl
add
sbb
call
xor
adc
mov
fiadds
push
dec
and
lods
stos
lods
addl
adc
imul
loopne
fmuls
jo
cmp
push
test
xor
jno
sbb
lea
cmp
cmp
dec
call
add
adc
or
mov
push
push
cmp
clc
ror
icebp
incl
sbb
xchg
jbe
sub
adc
inc
je
mov
inc
pop
mov
inc
xor
mov
clc
xchg
jno
mov
push
sbb
pop
les
enter
lea
mov
sahf
and
loop
inc
xor
xor
xchg
xchg
fisttps
pop
movsb
xchg
inc
inc
inc
fiadds
stos
icebp
int3
sub
lods
nop
imul
outsb
pop
jp
shl
mov
int3
imul
xchg
cltd
jno
dec
data16
shr
dec
xor
data16
inc
mov
inc
xor
int3
loope
in
xchg
ret
cli
outsb
add
loop
push
fadds
xor
push
and
mov
fs
mov
add
jno
icebp
inc
inc
data16
sbbl
mov
jp
xlat
xchg
adc
sub
pushf
out
cli
inc
mov
xlat
jmp
adc
xchg
insb
lods
sub
push
pop
inc
sub
or
adcl
movsl
aam
int
jnp
test
mov
mov
adcl
jbe
add
pop
xchg
mov
xchg
inc
add
lahf
ja
fwait
mov
add
call
or
les
ret
fsubrp
adc
je
and
push
mov
sbbl
or
adc
pop
adc
and
outsb
outsb
or
repnz
repnz
jmp
lods
cli
ret
je
int3
testl
add
adc
lea
push
cld
add
or
push
jo
shr
insl
mov
add
jmp
shll
mov
adc
pushf
cmp
dec
sbb
xor
clc
jle
pop
push
inc
jl
lock
loope
icebp
out
and
and
outsl
sub
jo
or
movsl
and
pop
sub
lahf
enter
jno
arpl
out
dec
xor
pop
or
std
insb
outsl
addb
dec
aad
inc
push
push
cmpl
daa
xchg
fmull
hlt
das
fwait
mov
cmpl
outsb
insl
cltd
cmp
bnd
or
fcoms
or
xor
dec
inc
test
inc
ja
pop
push
pop
fimull
inc
xchg
cltd
cmp
pop
mov
adc
testb
cwtl
cli
cmp
loopne
enter
mov
jmp
fs
add
add
in
jmp
sbb
mov
std
sub
sub
sub
sbb
inc
push
lcall
or
shl
xlat
adc
jne
icebp
call
aas
jl
mov
std
lods
aas
stc
sub
addb
cld
pop
in
in
dec
orb
sbb
testb
xor
pop
stos
xor
out
sbb
cld
cmc
push
jp
and
sbb
dec
sbb
fiaddl
sbb
jge
dec
push
jae
mov
hlt
xchg
dec
shl
push
popf
mov
fcoms
adc
leave
mov
movsb
mov
jno
imul
jnp
xchg
sbb
hlt
mov
mov
xchg
dec
and
cs
arpl
divb
andl
dec
stc
loopne
pop
add
ds
add
enter
mov
popf
cli
pop
aad
and
adc
repnz
test
and
icebp
aas
jae
aam
mov
insb
out
clc
int3
cmp
lahf
shr
icebp
ja
jno
pop
inc
sub
mov
sub
lods
mov
orl
inc
xor
sub
loope
js
push
mov
das
fcoml
dec
jo
ret
out
mov
imull
pop
mov
cli
fildll
enter
sar
cmp
or
cwtl
test
pop
mov
push
addb
test
or
sub
mov
ret
test
sbb
mov
call
stc
movsb
loopne
call
rorl
xchg
push
inc
add
lahf
mov
cmc
add
push
aaa
sbb
or
fisttps
xchg
mov
das
mov
hlt
xor
mov
push
shl
mov
jne
add
mov
lock
jno
negb
in
cmp
cmpsl
clc
or
sbb
into
decl
cmp
sub
add
sbb
stos
stc
jl
xchg
push
or
lret
mov
adc
mov
and
mov
sub
fucom
push
out
ljmp
mov
xor
fidivs
cmp
leave
sbb
pop
and
sub
and
daa
jmp
in
push
ja
std
in
cmc
mov
inc
test
adcb
lods
adc
jl
fistl
lds
xor
mov
push
jle
pop
add
xchg
das
sub
or
mov
xor
adc
ljmp
mov
mov
pop
jl
or
fwait
mov
inc
call
in
pop
stos
mov
push
hlt
ja
fsubp
cld
pop
scas
xor
stc
and
push
mov
xchg
cmc
sub
pop
cltd
lock
jo
aad
fdiv
pop
leave
outsb
pop
cmp
jmp
inc
adc
push
xor
cmp
add
cli
popl
lea
add
inc
pop
mov
mov
mov
in
push
stc
mov
call
dec
out
add
shlb
add
cmp
fwait
xchg
mov
fcoml
icebp
cli
cmp
sbb
sub
arpl
mull
and
mov
sahf
or
test
aas
aad
inc
push
aas
mov
scas
rorl
jo
mov
fistpl
dec
cmp
or
fldcw
mov
and
movsb
dec
ffree
and
repnz
cmc
test
std
add
cli
lods
clc
repz
in
lods
add
jecxz
cmp
bnd
orb
push
dec
and
dec
clc
repz
push
add
push
sbb
out
and
sti
stc
or
adc
cmp
insl
dec
inc
icebp
sbb
out
or
or
enter
loope
xor
loop
repnz
mov
jo
movsb
jo
cmp
or
hlt
lret
push
mov
xor
inc
xorb
sbb
pushf
xor
sbb
ret
jns
mov
rcrb
xor
jbe
add
insb
dec
add
sub
add
sti
inc
add
jo
mov
adc
add
pushf
add
and
orl
adc
andb
andb
pop
pop
sbb
add
sbb
add
xchg
shlb
and
loop
hlt
sub
mov
xor
mov
repz
add
in
iret
aas
je
cmc
dec
jecxz
das
push
add
push
sbb
dec
mov
leave
shll
arpl
push
push
mov
test
movsb
shlb
sub
xor
fs
clc
test
fcompl
sub
mov
and
xor
sbb
rorb
rorl
cmp
dec
std
test
pushf
fisubl
cmp
sub
or
ror
loop
cwtl
xchg
cltd
in
adc
clc
adc
or
adc
mov
sub
pop
or
nop
add
sub
adc
enter
pop
adc
in
sbb
cwtl
xchg
sub
sbb
rcrb
dec
push
cltd
test
test
sub
test
mov
outsb
test
cmp
cmp
call
fildll
loopne
pop
add
fwait
or
hlt
inc
insb
scas
and
mov
cmp
test
imul
repnz
and
xchg
cwtl
push
and
das
daa
in
mov
inc
pop
lods
shlb
pop
dec
test
inc
shll
adc
test
lods
inc
mov
cmpl
mov
or
push
mov
inc
push
add
mov
aam
outsb
rcl
mov
push
jo
leave
sbb
sub
ret
pop
and
outsb
push
out
push
cmp
inc
push
jge
popf
fsubrl
sub
out
dec
pop
stc
xchg
lock
xlat
jbe
pop
add
fisubrl
mov
mov
cmp
insb
dec
mov
pop
movsl
sbb
pop
xor
jae
sbb
in
xchg
sub
ret
add
test
mov
inc
mov
mov
inc
xchg
faddl
mov
sbb
dec
cmpsb
add
mov
divb
pop
jl
repnz
xchg
mov
jl
add
cmp
lret
aas
test
pop
int
add
fists
flds
jmp
mov
and
adc
jns
testb
xchg
or
sarb
jg
sti
fisubs
pop
icebp
inc
repnz
popa
ret
or
mov
xor
mov
daa
das
pop
mov
jo
push
jecxz
loope
loop
cmovne
dec
sub
js
dec
inc
sti
or
or
sbb
jb
inc
std
or
inc
in
mov
imul
push
xchg
popa
xchg
inc
stc
pop
push
aas
int
pusha
clc
cmpsb
push
sbb
adc
mov
dec
int3
orb
jmp
mulb
adc
je
imul
jno
push
jmp
cmp
leave
mov
mov
insb
pop
xor
out
icebp
ret
out
mov
enter
jg
fnstcw
mov
shl
add
push
movsl
mov
xchg
div
cmp
push
outsb
lea
test
xchg
inc
sbb
filds
push
popa
mov
fs
xor
add
repnz
jle
xor
in
cli
xchg
inc
push
fisubs
cmc
test
pop
push
vmovups
mov
pop
mov
inc
and
inc
std
ficompl
add
push
cli
inc
icebp
cmp
stos
mov
xor
sbb
loop
shll
xor
or
jb
out
pop
mov
mov
fdivp
adc
xor
fisubrl
enter
dec
cmp
out
cs
pop
ficompl
dec
push
test
inc
int3
sbb
xchg
jg
in
imul
jmp
and
or
adc
or
mov
mov
lcall
int3
add
das
push
loopne
lret
nop
fsubrl
fcoms
mov
cmc
lcall
ret
lcall
loope
jne
pop
out
inc
punpckhbw
jno
mov
popf
flds
fdivrl
fisttps
mov
lcall
test
inc
loope
mov
dec
adc
push
aad
jmp
inc
adc
pop
dec
ljmp
xchg
and
add
dec
sub
mov
mov
sbb
and
data16
cwtl
and
test
sbb
add
ltr
push
repz
icebp
pop
cmp
xchg
xorb
add
pop
jle
sbb
push
repnz
fdivrs
in
shlb
mull
push
push
cmp
xor
pop
insb
adc
repz
sub
mov
subb
loopne
lock
and
adc
cmp
push
push
cmp
mov
repz
sub
ds
lret
lea
sti
or
andb
or
or
lea
xor
rolb
or
pop
mov
lds
mov
cmp
jl
inc
movsw
mov
pop
mov
in
divl
es
dec
lock
fwait
mov
frstor
sbb
xchg
pop
add
lret
pop
xor
int
inc
and
mov
call
or
push
inc
dec
icebp
inc
icebp
or
inc
mov
mov
inc
adc
int
mov
add
das
inc
or
insb
repz
aaa
xor
add
adc
rcrl
sub
or
push
mov
inc
nop
rolb
cmp
repnz
xchg
xchg
sub
repz
fmuls
mov
mov
es
js
sbb
and
bound
in
icebp
in
cs
out
daa
out
lods
das
shlb
push
sub
sub
mov
arpl
pusha
pop
jmp
gs
and
rorb
sti
xor
sub
mov
sbbb
jl
arpl
dec
mov
or
sub
outsb
xchg
dec
nop
or
cmpsl
inc
pushf
ror
or
fs
or
cmp
enter
or
sbb
jo
mov
andb
or
cmp
pop
dec
in
and
xor
arpl
insl
gs
fs
mov
sysexit
adc
outsl
cmp
xchg
sub
and
ss
outsb
jl
out
cmp
and
notl
jns
insl
cld
jl
jmp
jecxz
outsb
and
and
add
shll
or
addr16
lret
inc
jge
lea
pop
imul
popa
jge
lds
insb
inc
and
fs
outsl
xchg
sbb
js
jg
mov
and
in
dec
push
loop
mov
ja
imul
imul
xchg
fs
out
xor
scas
xor
pop
jbe
cmp
movsb
rclb
mov
pusha
in
jmp
inc
push
les
xchg
or
jbe
dec
pop
and
test
and
mov
sbb
cmp
es
xor
push
mov
dec
jle
xchg
cmp
dec
and
inc
jne
cmp
fldt
push
test
jae
cmp
cmp
movb
push
mov
cmp
and
push
idiv
out
xchg
add
pop
pop
mov
and
or
jne
pop
icebp
cmpsl
std
out
testl
add
push
mov
or
dec
aaa
mov
pusha
adc
adc
pusha
out
fmull
pop
lock
mov
pop
sbbl
lock
sahf
sbb
cmpsb
cwtl
jmp
push
lods
mov
insl
or
push
adc
lcall
inc
arpl
aaa
fsubrs
sbb
lret
lock
inc
or
mov
jmp
subb
int
add
lock
pop
jo
inc
xor
pop
push
js
dec
inc
jp
mov
repz
jb
add
orb
add
or
lock
push
iret
add
aaa
arpl
leave
inc
scas
jns
adc
outsb
or
add
pop
pop
movsb
sbb
lock
out
jl
or
cmp
mov
mov
jnp
lock
fs
mov
pop
jg
mov
popf
fcoms
jge
ret
loop
data16
dec
xchg
popa
not
test
enter
test
les
repnz
lock
scas
stos
pop
xchg
imul
leave
loopne
xchg
xor
or
in
es
jno
outsl
jl
lock
mov
repnz
inc
outsb
mov
stos
stos
out
mov
sti
lock
xor
sub
fisttps
test
jecxz
mov
mov
stos
fiadds
sarb
insb
lock
add
inc
out
hlt
repnz
jnp
adc
leave
push
xchg
xor
mov
sbb
icebp
pop
data16
cmpsl
xor
adc
push
mov
push
cmp
pop
dec
shrb
jp
mov
xchg
stos
sbb
std
push
jno
adc
cmp
mov
jb
and
lock
push
shr
jmp
push
mov
dec
mov
outsb
xlat
lock
lret
int
push
repz
pop
aaa
jl
mov
not
pop
xor
mov
hlt
mov
add
fmulp
in
lock
xchg
lock
pop
pusha
mov
push
es
call
mov
jne
andl
xchg
div
int
icebp
dec
push
push
clc
push
test
jl
outsl
add
lock
push
out
push
xor
sub
lea
int
lods
icebp
cli
and
cwtl
pop
xchg
shlb
ja
out
pusha
lock
dec
pop
or
test
xor
mov
inc
loop
jg
imul
push
adc
mov
xchg
mov
push
repz
and
clc
xchg
div
push
lock
sar
lock
xor
fidivl
adc
out
lret
push
xor
sarb
lock
stc
call
mov
pop
leave
cmp
mov
pusha
loop
mov
lock
leave
mov
lcall
pop
push
shlb
mov
lock
jns
adc
out
sub
jnp
xlat
sub
pop
clc
rolb
inc
mov
lea
push
jle
sbb
adc
icebp
lock
clc
jmp
jne
ljmp
and
adc
pop
into
es
inc
loope
inc
imul
and
lahf
jo
std
push
xor
xchg
lods
pop
adc
and
fldt
and
fcmove
push
std
mov
dec
jl
outsb
jp
icebp
aas
mov
dec
sub
mov
jae
sub
ret
mov
leave
std
jbe
push
testl
sub
add
fistl
rorl
movsl
push
push
or
call
fisttpl
inc
mov
jecxz
popa
std
push
pop
push
call
inc
jmp
rorb
rcll
xor
sbb
xchg
xor
mov
sahf
inc
mov
push
outsb
jge
jns
xchg
jge
call
movsb
push
or
test
push
test
xor
mov
dec
icebp
and
cmp
or
sub
cmc
sbb
jl
loope
outsl
sti
decb
sub
and
je
lock
push
fsubrp
xchg
dec
out
add
mov
pop
mov
dec
lock
mov
cmp
dec
lock
das
cmc
jnp
sbb
inc
leave
push
pop
push
lock
or
mov
xchg
ljmp
push
pop
lret
pop
jno
jecxz
fwait
clc
imul
or
or
ja
icebp
xchg
sti
jmp
in
or
sub
aad
lock
lret
and
lock
inc
cwtl
adc
shl
sub
pop
in
and
mov
inc
pop
jae
cmp
dec
cmpb
sarl
push
jg
add
dec
lock
or
lock
mov
lock
pushf
jnp
stos
out
lock
xchg
dec
fcoml
sbb
ss
push
mov
add
push
xor
outsb
orb
add
jle
insl
xchg
jb
and
pop
xor
or
add
pop
cmp
jmp
xchg
repnz
push
inc
leave
lock
jns
mov
imul
loop
ss
enter
cmc
jno
inc
imul
xor
iret
jo
fldt
in
sub
sahf
mov
pop
mov
and
sub
jecxz
adc
pop
sub
lock
push
jp
sub
scas
dec
cmp
icebp
jo
inc
arpl
out
lock
hlt
fs
push
lret
sbb
lock
sub
inc
cmp
nop
or
cli
ljmp
lods
call
jbe
lock
xor
arpl
pop
nop
inc
prefetch
mov
mov
pushf
rcl
jo
ja
lods
fidivrs
cld
in
in
out
dec
sub
lea
or
hlt
mov
and
das
jg
cwtl
mov
call
arpl
pop
jns
or
insb
mov
stos
and
jg
movsl
data16
cltd
daa
sub
lock
loope
or
jg
sahf
lock
cmp
mov
imul
into
and
fcomip
xchg
push
ret
push
outsl
mov
jle
pop
xchg
lock
adc
mov
leave
nop
cwtl
push
jo
xlat
lock
mov
mov
and
clc
je
sarl
sub
push
sahf
bound
call
mov
loop
sub
jp
pop
stos
mov
out
inc
xchg
mov
arpl
jecxz
xchg
call
adc
and
sbb
lock
push
mov
clc
jl
push
inc
cmp
shl
rcrl
popf
push
mov
divps
insl
repnz
push
decb
jne
pop
pop
pop
data16
sub
mov
sbb
mov
pop
out
jae
gs
test
lock
pusha
mov
lock
jle
in
jns
lock
aas
jmp
inc
in
pop
mov
sbb
and
gs
push
lock
and
pop
fstps
dec
lock
out
shlb
int3
orb
ljmp
fs
sbb
push
lcall
and
mov
cmp
cmp
mov
or
lods
lock
push
cltd
sub
xchg
mov
pop
jmp
push
pop
movsl
fst
lods
sti
in
mov
mov
sbb
data16
aaa
mov
nop
mov
xchg
lcall
or
std
inc
dec
sub
mov
sub
xchg
stos
gs
push
lea
dec
sbb
repnz
cmp
mov
or
mov
dec
cmp
stc
mov
nop
push
jmp
neg
add
adc
jle,pn
enter
and
repz
mov
push
shr
sahf
push
clc
xor
or
and
scas
sbb
enter
and
loop
ds
iret
jmp
push
inc
orb
xlat
cmp
jo
ja
pop
pop
mov
fbld
popa
imul
mov
insb
push
push
sbb
xor
push
mov
outsl
and
popf
pop
cmpsb
lea
fdivp
stos
filds
xor
pop
in
orb
xor
js
xlat
in
push
pusha
sbb
or
or
lock
or
jne
jns
outsl
lock
mov
mov
icebp
xor
xor
pop
mov
test
push
int
jnp
dec
mov
jo
cld
add
into
cmp
adc
in
out
lock
or
mov
aad
lock
mov
imul
mov
mov
add
xchg
fcoml
leave
adc
pop
jo
movsb
repnz
call
xor
ja
sti
push
and
stc
lods
mov
sti
or
xchg
jge
call
push
stc
shrl
or
sbb
jnp
mov
ret
sub
cmp
mov
popa
pushf
push
mov
icebp
mov
jb
les
orb
lock
sbb
adc
std
lock
jecxz
imul
aam
and
imul
stc
adc
sbb
scas
divb
mov
add
mov
dec
mov
lock
fwait
scas
shrl
jnp
jp
xchg
pop
mov
inc
dec
cmpsb
ret
push
push
xchg
stos
mov
adc
xlat
jo
icebp
in
dec
inc
lock
push
out
xlat
push
sbb
lock
pop
jae
ljmp
sbb
sub
add
push
cwtl
lock
addl
lock
div
in
ret
lock
leave
or
das
loope
nop
mov
sub
xor
stos
mov
call
arpl
xor
add
xchg
out
sub
dec
jp
lods
or
imul
xor
aas
mov
push
fwait
lock
scas
lods
xchg
adc
lock
jecxz
jp
imull
lock
pop
mov
xchg
xor
xor
ret
pop
in
add
loope
or
jo
inc
int
movsl
out
fwait
jbe
push
sbb
pushl
lods
ficoml
xchg
adc
mov
mov
nop
mov
lock
data16
fcmovne
in
fdivl
sbb
xor
sub
into
out
pop
add
leave
xchg
loope
jbe
lahf
inc
icebp
loopne
call
jp
dec
dec
and
add
cs
or
mov
cltd
sub
push
mov
rolb
sbbb
insb
and
outsl
inc
sbb
pop
mov
adc
jp
xchg
xor
filds
lret
pop
adc
loope
enter
dec
mov
aas
mov
fcmovbe
lahf
jns
repz
pop
sbb
push
adc
lods
inc
inc
cmp
mov
mov
loopne
push
shl
add
iret
jbe
icebp
dec
lcall
mov
stos
jmp
mov
mov
inc
decb
lock
popa
sbb
outsb
jmp
std
int3
jbe
nop
stos
movsl
jmp
es
xlat
and
pop
pop
or
mov
aaa
call
popf
or
pop
popa
mov
xchg
mov
or
xchg
addr16
lret
mov
addb
inc
outsl
jne
lahf
inc
divb
call
mov
sub
mov
jb
inc
sbb
out
and
jb
in
es
in
mov
enter
sbb
mov
inc
sub
jmp
jnp
daa
call
or
push
add
shll
lea
outsb
xchg
push
jae
push
clc
xorl
pusha
xor
mov
xchg
and
into
pop
mov
add
ret
fiaddl
mov
mov
sbb
inc
and
adc
jb
lret
mov
xchg
imull
in
mov
pop
xor
lcall
out
dec
lock
cs
sub
scas
sub
outsb
pushl
sub
cmp
insb
lret
fistps
inc
sbb
inc
fidivl
sahf
cmp
xor
and
cmp
mov
dec
inc
mov
repz
push
mov
sbb
scas
push
mov
xchg
scas
or
frstor
sub
inc
dec
aas
inc
outsb
cltd
mov
test
xchg
fwait
add
sti
lock
sbb
lock
mov
cmp
push
lock
pop
cli
xor
fisttpll
sti
xchg
imul
scas
outsl
mov
les
icebp
adc
and
xor
lea
outsl
mov
mov
pop
xchg
imul
mov
adc
jmp
ss
pop
jo
jnp
mov
xchg
test
jo
dec
xor
dec
cmpl
add
cmc
hlt
fildl
jecxz
mov
fnstsw
lock
mov
or
lock
cli
xchg
ljmp
cmp
push
lock
push
jecxz
iret
rclb
xchg
icebp
cmp
jno
push
dec
inc
mov
push
lock
adc
xchg
pop
or
mov
test
popl
lret
lock
mov
xor
pshufw
idivb
cltd
adc
mov
lock
push
ret
xacquire
inc
cwtl
test
out
rolb
jns
lock
dec
pop
mov
jg
in
cltd
xchg
es
dec
test
pusha
jnp
mov
lock
pop
outsl
lock
shll
pop
inc
call
jo
pop
adc
cwtl
push
mov
mov
in
loop
and
push
jp
lock
inc
pushf
test
and
sbb
cmpsb
xchg
mov
js
xor
add
and
mov
pop
or
xor
mov
jmp
stc
xchg
or
leave
or
add
lock
mov
push
inc
mov
repnz
leave
shlb
adc
shrb
jge
mov
test
loopne
lock
aad
pop
mov
adc
or
jle
es
add
sti
jno
fsts
ret
cmpsl
mov
leave
and
xlat
lock
das
push
inc
push
mov
and
or
jecxz
test
push
sub
sbb
ret
mov
int3
std
jo
aaa
adc
in
mov
jmp
jnp
cld
jno
inc
cmc
jne
sbb
lock
notb
je
hlt
lock
pusha
lret
cmpsl
xlat
sbb
out
mov
inc
cmp
jg
imul
cld
mov
push
jns
lock
and
push
cwtl
xchg
add
in
ret
sub
out
push
push
mov
lahf
push
xchg
in
mov
lcall
notb
and
lret
jae
pusha
decl
xor
dec
js
mov
lock
push
es
cmp
ljmp
outsb
test
aaa
fcoml
adc
call
add
xor
lret
mov
lock
sti
pop
fwait
mov
jno
iret
imul
inc
jns
xor
mov
pop
mov
sub
xchg
call
cwtl
mov
leave
mov
jo
add
out
shrb
sbb
jl
pop
icebp
gs
mov
pop
jo
adc
test
fdivr
lock
pop
pop
pop
jl
mov
lock
mov
mov
mov
xor
inc
xchg
dec
mov
pop
xchg
inc
movsl
jbe
adc
lret
lods
jo
dec
or
pop
call
xor
adc
fimull
or
pop
lock
xor
lock
adc
std
or
mov
mov
orb
movsb
aaa
stos
cmp
sbb
sbb
jmp
popa
mov
loop
mov
mov
sahf
mov
loopne
xor
clc
fists
punpckhwd
adc
pop
sbb
dec
lods
mov
mov
or
lea
je
test
xor
cmpsl
inc
xlat
in
and
xor
inc
mov
lock
ja
or
mov
push
inc
fwait
mov
repnz
xor
rclb
daa
lahf
pop
cmpsl
lock
pop
out
js
jmp
int3
sbb
in
lods
rolb
cmp
pop
lock
pusha
push
aas
push
adc
bound
lock
inc
add
mov
pop
inc
jecxz
dec
inc
aas
pusha
scas
adc
lock
and
in
jg
outsl
aam
mov
lock
or
fnstcw
repnz
inc
pop
dec
add
std
push
stos
ret
pop
mov
jp
fmulp
jo
mov
test
or
cmp
dec
test
lock
gs
out
mov
icebp
adc
sub
sbb
scas
jnp
sub
hlt
loopne
repz
imul
pop
test
and
add
jae
out
dec
cmpsb
repnz
xchg
pop
jns,pn
fdivs
xchg
sbb
and
arpl
cmp
pusha
and
xchg
mov
dec
gs
test
or
negl
jecxz
jne
lock
outsl
stc
fcoms
lret
jp
nop
push
sbb
test
xor
cs
cmp
daa
xchg
out
and
lock
pop
sub
mov
in
ss
icebp
xor
push
sbb
test
pop
test
test
adcl
or
rorl
adc
ds
imul
mov
and
push
jmp
aas
jge
outsl
pop
arpl
lret
clc
icebp
mov
dec
into
mov
imul
sarl
int3
stos
call
fidivrl
js
mov
cltd
repnz
aas
adc
xor
jns
lock
inc
in
in
and
es
fwait
mov
mov
push
movhps
and
loope
ljmp
xor
imul
outsb
scas
lock
stos
jecxz
repz
arpl
mov
sbb
int3
inc
lock
fisttps
insb
lock
jae
int3
out
orl
adc
mov
lahf
dec
insb
pop
or
and
repnz
cmp
push
testb
dec
lock
movsl
outsl
cmp
lock
sahf
dec
xchg
pop
jl
lock
xor
xchg
icebp
and
push
mov
popf
lock
jne
inc
pop
bnd
or
xor
mov
xor
in
cmp
ret
jge
xor
or
fldl
xchg
jecxz
fdivrs
fwait
lock
fsubr
iret
mov
repnz
xor
xchg
push
cmp
inc
or
cmp
shr
push
icebp
or
add
add
jo
cmpsl
lea
lods
inc
cli
cltd
dec
jne
ljmp
int
enter
ret
mov
leave
sub
jl
jo
pop
push
push
dec
pop
or
sub
sbb
shll
ss
push
ja
push
loop
iret
sbb
std
dec
clc
and
mov
jb
push
jo
scas
je
icebp
mov
ja
test
add
fcomi
stc
pop
xorb
outsl
lock
mov
dec
cld
js
xor
add
push
xchg
shll
loopne
fildl
adc
adc
sti
js
sarb
mov
orb
leave
aam
lock
lcall
dec
and
repz
loop
test
sbb
icebp
leave
ljmp
inc
dec
fcoms
sbb
out
ljmp
or
mov
mov
lods
int
hlt
sbb
ret
mov
mov
xchg
lock
testl
inc
cmp
das
outsl
scas
ljmp
xor
xchg
enter
mov
lods
ret
in
rcr
sti
or
sub
push
jmp
dec
xor
std
mov
clc
lahf
ss
fidivrl
sti
or
sbb
arpl
cmp
clc
mov
push
call
out
add
mov
and
lock
pop
jnp
lock
subb
dec
add
and
arpl
lock
cmp
lret
fisubl
nop
sub
mov
xor
imul
js
movsb
loop
jae
or
lock
and
call
movsb
inc
mov
xchg
repnz
int
lds
sub
arpl
lock
insb
xchg
sub
roll
cs
lock
add
lock
pop
test
and
out
lock
jl,pn
adc
fwait
xchg
pushf
mov
nop
shll
lods
sub
shll
and
sub
adc
arpl
lock
or
mull
leave
lock
dec
jp
and
lock
cmp
lock
jo
xchg
xorl
fiadds
adc
mov
lock
xor
aam
or
mov
push
orb
mov
mov
xor
jge
lock
pop
jbe
dec
jl
xchg
xchg
enter
or
inc
nop
sbb
adc
jge
sub
leave
mov
ljmp
pop
jnp
xor
and
test
push
popf
or
rclb
sbb
in
mov
and
inc
pop
jae
push
push
outsb
or
jmp
inc
mov
js
fstps
mov
adc
push
or
ljmp
mov
icebp
popf
int3
fs
aad
int3
sahf
mov
loope
mov
sbb
sub
pop
xor
adc
pop
mov
or
sti
dec
pop
add
cmp
push
xadd
pop
cmp
or
aam
xchg
pop
into
xor
or
jmp
inc
mov
xor
cmpl
call
or
jp
and
add
cwtl
or
cwtl
sub
loope
fadds
xorb
jmp
insb
repz
pop
loope
ss
sbb
mov
dec
adc
repnz
aam
pop
or
pop
jne
repnz
mov
xlat
or
pop
sahf
stos
int
mov
dec
jo
mov
or
or
add
adc
cmp
adc
xchg
nop
pop
test
into
mov
push
adc
and
sub
gs
imul
imul
aad
test
mov
pop
sbb
repnz
mov
push
addr16
mov
push
xor
or
sti
loopne
xor
lock
ret
push
add
jnp
fdivp
idivl
rcl
lcall
test
jne
mov
xor
adc
sbb
outsl
lock
push
inc
cmp
xchg
mov
fld
cmpsb
adc
pop
sbbl
negb
add
jo
cmpsb
add
mov
enter
mov
ud0
aaa
fsubrs
pusha
xchg
jnp
addb
cmp
xchg
mov
jne
les
jp
scas
addr16
dec
pop
loope
mov
stos
jb
scas
lret
loopne
or
inc
fcoms
popf
jmp
adcl
cmp
test
pop
daa
pop
leave
clc
xor
adc
inc
push
mov
pop
ret
add
clc
cmp
sarb
loopne
pop
mov
dec
stc
inc
and
mov
lret
std
aad
push
mov
or
mov
arpl
decl
iret
aaa
inc
add
add
imul
int3
addb
or
push
pop
sub
or
sub
and
fsts
test
test
jmp
jno
cmc
sbb
add
sub
loop
lock
in
outsb
andb
lock
pop
ret
scas
loop
xor
rcr
icebp
pop
adc
or
fsubs
add
sub
repz
psubw
aas
xchg
ror
jne
lock
xchg
stos
xlat
jecxz
add
mov
or
das
xor
paddq
jb
rolb
shrl
out
cmp
xchg
mov
mov
out
jle
or
mov
pop
xchg
lock
hlt
mov
das
arpl
out
inc
repz
jecxz
add
push
lret
lods
and
or
fildll
xchg
mov
loop
xorb
pop
into
dec
xchg
std
and
punpckhbw
xchg
xchg
jmp
sub
mov
jno
repz
loop
cmpsb
xor
xchg
xor
push
xor
ljmp
popf
je
popf
repnz
push
mov
rcrl
and
test
out
leave
sti
cmovg
test
out
or
mov
push
sub
icebp
mov
inc
fdecstp
or
stos
incb
mov
pop
jmp
int
sbb
dec
lcall
lock
jl,pt
mov
mov
add
lret
xor
mov
imul
pop
xchg
mov
test
and
lock
jns
mov
shll
pop
inc
mov
loope
or
push
lock
jle
stos
cmp
or
popf
add
out
jle
lock
movsl
or
lock
cmc
xor
lock
lea
iret
and
pop
out
and
nop
add
or
jp
popf
imul
mov
out
mov
pop
lock
lock
fidivrs
movsb
push
mov
lods
adc
aam
push
xchg
cwtl
add
cli
mov
inc
sbb
cmp
js
shll
jle
lock
movsb
mov
nop
lock
ret
int
sub
jl
repnz
or
fwait
lock
push
sub
arpl
pop
push
testb
push
or
sbb
xorb
sub
inc
lods
clc
add
fmuls
lea
jb
mov
jmp
xchg
cmp
scas
add
js
or
lret
cli
push
lahf
push
call
jp
pop
aad
xchg
shll
xchg
movsb
clc
adc
and
ss
mov
inc
stos
push
xchg
and
pop
cs
mov
out
add
inc
pop
mov
pop
pop
fsubs
call
sbb
cmp
push
add
cmp
dec
out
add
aad
push
out
sub
cmp
xchg
das
jne
sub
lea
xor
lcall
fld
rcll
pop
or
hlt
std
pop
rcrb
fs
das
sahf
jecxz
mov
out
adc
pop
mov
pop
je
mov
or
cmpsl
ljmp
lds
ret
in
jo
pop
jae
frstor
push
jmp
push
push
xor
jbe
and
cmp
shrb
out
js
pop
sahf
mov
sub
mov
pop
mov
es
lret
pop
cmp
loope
test
in
adc
xchg
ljmp
pop
outsl
dec
mov
push
mov
push
mov
js
adcl
call
xor
adc
stc
mov
inc
daa
xchg
xchg
or
dec
mov
mov
jae
and
repz
pop
push
add
ljmp
sub
jae
push
push
sbb
push
mov
push
test
and
jecxz
mov
movsl
jle
xchg
sarl
leave
inc
repz
cmp
icebp
testb
lock
or
enter
sub
ret
xchg
mov
iret
dec
jmp
jno
pop
sub
push
push
out
icebp
push
lret
mov
and
ret
dec
rolb
inc
dec
nop
xchg
mov
pusha
inc
icebp
add
lret
enter
pop
inc
sub
stc
adc
jl
lock
cmpsb
mov
lock
fsubp
push
and
pop
lock
insl
push
lock
gs
push
mov
cld
lock
in
cmp
and
jge
test
mov
lock
cmpsl
inc
push
xchg
imul
pop
push
daa
subl
adc
cltd
jecxz
push
in
inc
loop
xor
jl
add
push
lock
mov
mov
lock
fwait
cmp
iret
pop
and
mov
inc
xor
or
push
das
cmp
out
ficoml
add
ss
test
cwtl
adc
ja
cmp
sbb
test
inc
push
mov
adc
cmp
aad
jo
pop
dec
and
jmp
mov
out
xor
sbb
sbb
push
or
sub
jp
imul
sbb
cmp
pop
subb
or
ja
pop
sub
mov
rcrl
cmovge
dec
xchg
and
scas
lretw
bound
stc
xor
insb
jae
xor
lock
mov
lock
subl
hlt
pop
mov
mov
push
and
push
ljmp
push
sbb
inc
lock
cwtl
aaa
insb
popf
and
cltd
jbe
cmc
inc
cs
sbb
cmp
cmp
push
and
or
dec
dec
xchg
cmp
pop
lret
lock
jo
insl
outsb
cmp
mov
adc
lock
fs
or
ljmp
shrl
inc
xchg
xlat
popa
dec
icebp
cltd
mov
cld
leave
imul
fstps
icebp
adc
dec
push
addr16
pop
rclb
loope
mov
pop
adc
adc
aas
scas
pop
push
repz
mov
or
test
xchg
imul
lods
fidivrl
loope
inc
sub
jl
lock
subb
sahf
push
inc
pop
mov
mov
das
mov
add
jnp
or
cmp
fmull
mov
mov
jo
testl
add
cli
sub
imul
loope
push
mov
push
push
and
cwtl
jecxz
pop
and
scas
lods
add
mov
push
into
in
push
dec
adc
cwtl
pushf
lock
rorl
cmpsl
jmp
adc
lock
out
sub
xchg
cmp
popf
addr16
push
mov
call
mov
adc
fistpll
ljmp
jmp
loop
gs
jb
xor
incb
fiaddl
jmp
adc
xchg
stc
and
pop
xchg
xor
fbld
mov
rol
and
fwait
int3
push
or
cli
std
imul
pop
rcrb
fistps
push
stos
cmp
call
pop
xor
mov
pop
push
pop
dec
or
stos
push
jns
lods
xor
pop
push
testb
cmpsl
xchg
mov
xor
lock
push
cmp
or
lock
lds
mov
sbb
lock
outsb
mov
icebp
inc
pop
icebp
iret
jb
or
and
cmpsl
mov
leave
fdivr
push
punpcklwd
mov
bound
insl
xchg
subb
adc
adc
inc
lods
lahf
cwtl
lock
ret
ljmp
cmp
adc
add
cmp
pop
jb
cmp
push
dec
pop
or
inc
or
call
mov
jmp
sub
dec
or
out
pusha
insl
and
jne
dec
or
shl
call
repnz
mov
jno
push
lahf
xor
mov
pop
xchg
in
enter
jmp
cmc
adc
sti
mov
jo
push
repz
inc
xor
lcall
mov
sahf
lock
into
pop
mov
iret
test
xchg
cmp
test
repz
sbb
lds
pop
mov
jo
sub
pop
jne
push
lock
push
and
jnp
push
shl
dec
fs
dec
and
call
fcmovbe
lock
sub
stc
pusha
pop
jmp
icebp
fdivl
inc
cmp
int3
lock
push
add
jo
jg
cmp
aam
gs
or
in
or
dec
out
lock
cmp
adc
loope
test
dec
cmp
xlat
mov
jne
subb
lods
pushf
and
repz
inc
mov
pop
daa
xor
pop
add
pop
cmp
pop
das
cs
icebp
in
rolb
dec
or
movsb
cmp
pop
test
mov
sub
aam
stos
mov
mov
mov
test
add
sub
mov
mov
mov
out
test
lock
cmpsb
inc
dec
mov
lock
mov
lcall
nop
dec
xchg
call
lock
cmp
ret
xchg
adc
shlb
mov
push
mov
std
cwtl
aam
mov
xchg
mov
jp
add
test
lock
cltd
out
mov
fcoms
and
push
js
lock
fnsave
fistl
fisubs
lock
xor
mov
pop
mov
lock
xchg
dec
scas
loopne
push
pmaddwd
fcoml
pop
mov
enter
sti
test
adc
jle
lock
into
or
fs
lock
pop
xchg
mov
mov
dec
and
sbb
icebp
lds
addr16
ja
cli
icebp
into
push
je
lock
mov
push
lds
imull
pushl
mov
ds
push
push
adc
mov
fcomi
repnz
repz
or
shlb
icebp
sarl
xchg
sahf
inc
aad
push
add
jb
clc
pop
lds
cmp
fbstp
pop
and
imul
and
cmc
test
jmp
and
jmp
push
jle
push
std
call
cmp
push
jo
dec
add
scas
pop
shll
clc
bound
xchg
or
jmp
cld
mov
and
inc
rcpps
sahf
imul
lock
jmp
sub
shrl
lock
lcall
in
ror
cmp
sub
xchg
ja
lock
push
pop
and
lock
cmp
pop
scas
xchg
cmpsl
ret
adc
mov
pushl
lock
shll
aaa
mov
cs
jnp
xorb
add
jmp
stc
xchg
add
call
cmpsl
or
xchg
sarb
push
adc
repnz
push
psrad
jae
shr
insb
scas
out
xchg
rcr
addr16
jge
and
push
or
and
jnp
pop
jg
in
call
sahf
xchg
adc
lea
pop
and
xor
clc
add
int3
repz
pop
stc
gs
jl
inc
out
add
jne
call
mov
xchg
arpl
or
jg
xor
in
cmp
jb
fstp
sbb
inc
lock
stos
cmp
push
sbb
jge
add
inc
mov
stos
sbb
lock
mov
out
inc
paddusb
int
fwait
lret
push
ss
sarb
and
lock
popa
lock
dec
push
nop
stos
aad
in
repz
iret
adc
movsb
scas
mov
adc
out
ss
xchg
jno
nop
lahf
fsubs
call
sbb
mov
sbb
stc
mov
repz
sub
cs
mov
or
mov
mov
mov
inc
mov
lods
jae
mov
or
push
lods
xor
adc
push
icebp
iret
call
rclb
sti
dec
xchg
and
and
cmp
jmp
mov
clc
mov
in
cltd
out
xor
outsb
lock
push
test
inc
inc
jnp
repnz
mov
pop
jb
jmp
add
sub
cmp
xorb
mov
inc
xor
jp
mov
sbb
call
adc
cmp
repz
cmp
add
mov
push
lock
jne
fcompl
jg
scas
sbb
shl
xchg
mov
ja
out
insl
fiaddl
pop
repz
out
lcall
xchg
in
or
mov
cmp
push
adc
adc
leave
aad
push
cld
out
stos
push
lock
sub
cmp
pop
push
jae
xchg
icebp
mov
mov
in
pop
lock
popf
dec
loope
fcoml
push
lock
sbbl
jbe
mov
jno
shr
divb
bound
adc
inc
out
adcb
dec
dec
cmc
xor
les
stos
cmc
push
dec
push
pop
dec
sub
mov
mov
out
adc
out
mov
mov
push
int3
ljmp
lret
enter
stc
xchg
push
dec
mov
cli
dec
lcall
push
cs
loope
pop
imul
and
lds
and
mov
movlps
push
jl
sub
lock
jns
test
out
mov
push
dec
mov
xor
or
call
lock
cmpsl
mov
mov
std
xor
imul
jmp
dec
cmpsl
stos
dec
adc
nop
cwtl
inc
fldcw
mov
and
push
ss
jns
or
test
dec
shlb
mov
mov
sti
dec
mov
stos
hlt
int
cmp
mov
inc
cmpsb
repnz
clc
ret
push
lea
xor
repnz
mov
or
xchg
push
push
inc
xchg
test
and
stc
les
jo
dec
mov
dec
inc
push
jo
ljmp
dec
sub
ret
dec
sub
and
xor
mov
add
mov
xchg
rolb
cmp
and
jo
add
jo
or
insb
in
leave
mov
rclb
sub
add
or
out
push
xchg
pop
push
or
mov
pop
daa
shlb
and
mov
test
test
add
test
mov
sbb
pop
sarb
pop
insb
pop
pop
push
call
push
fxch
stos
das
aad
xchg
shl
mov
cs
shll
lock
push
repnz
pop
inc
add
or
iret
in
jo
jecxz
test
movsl
dec
out
xor
and
fs
cmp
decb
leave
lock
div
rcrl
mov
mov
adc
fsubrl
imul
jp
cmpsl
add
lock
push
mov
insb
subb
lods
or
jp
pop
into
mov
pushl
push
inc
xlat
fadds
pop
sub
arpl
inc
push
popf
dec
ljmp
cmp
aam
repnz
pop
mov
cld
enter
cli
cltd
cwtl
mov
xor
in
push
xor
lock
cwtl
lcall
out
out
pusha
aam
das
ljmp
dec
pop
cli
or
divl
push
insb
push
cmpsl
lock
jae
cmp
out
js
lahf
lods
in
negb
sbb
arpl
sub
pop
les
rclb
lock
sbb
dec
into
adc
iret
cmc
cli
fadds
call
pusha
data16
lahf
in
adc
lock
dec
sub
and
sbb
into
jge
and
or
jecxz
adc
cld
scas
mov
pop
lock
pushf
mov
test
insl
add
idiv
jg
bound
jle
inc
xlat
mov
hlt
sbb
add
and
lock
mov
cmp
jo
js
cmp
pop
and
xor
sub
pop
test
pop
inc
clc
inc
xor
mov
inc
cmpb
inc
pusha
dec
lock
and
sub
stos
pop
or
in
add
mov
mov
stc
nop
lock
or
subl
std
push
push
cld
sbb
imul
fnstenv
lret
mov
jmp
mov
pop
shll
scas
push
jmp
shll
in
rorb
or
add
mov
gs
sahf
stos
jo
mov
sbb
or
xor
movsb
push
mov
and
cwtl
movsl
inc
stc
movsl
hlt
dec
pop
cmp
push
scas
call
and
leave
stc
inc
jge
sbb
mov
push
in
mov
call
leave
stc
xor
outsb
jno
es
dec
mov
mul
rcll
adc
leave
or
mov
std
les
xchg
icebp
stos
dec
outsb
push
cmp
lock
loopne
inc
clc
jns
push
sahf
xchg
jne
add
das
xor
lock
mov
sub
dec
hlt
add
stc
or
nop
push
fwait
or
lock
adc
pushf
jbe
iret
imul
lock
mov
push
or
into
add
xor
dec
jl
ss
jo
sbb
ss
lock
or
jae
jbe
push
jle
mov
nop
mov
test
inc
clflush
pop
cmpsl
xor
mov
das
jmp
out
mov
sbb
mov
inc
xchg
jnp
sbb
pop
movsl
rcl
inc
pusha
push
pop
add
sahf
mov
xlat
or
int
cmp
dec
cs
push
cli
mov
int
icebp
iret
inc
sbb
jb
push
jmp
cmp
jmp
adc
icebp
int3
pushf
loope
mov
add
push
add
stc
jno
mov
out
sub
adc
call
cwtl
pushfw
mov
xchg
pop
into
dec
test
sbb
lock
inc
xchg
popa
mov
leave
nop
dec
rcrb
jo
test
shl
sub
lock
push
push
add
sub
in
pop
mov
subb
jl
lock
in
test
jae
push
push
jbe
cmpsl
adc
sub
lock
xorb
xlat
dec
divl
dec
imul
lock
mov
mov
or
in
dec
lock
call
mov
xor
and
test
jo
clc
ljmp
push
lds
push
movsb
shlb
adc
aam
inc
loopne
cmp
movsb
or
je
lahf
sbb
inc
ss
mov
rcrl
stos
cmc
clc
bound
aad
repnz
enter
lock
jo
jnp
call
push
shll
lock
dec
cmp
orl
setp
stos
into
mov
lock
in
mov
sub
jo
jo
sub
push
inc
xchg
jnp
js
ret
icebp
lock
lea
lock
lods
fmul
sbb
mov
lock
test
mov
cmp
aaa
or
roll
sbb
icebp
sarl
dec
push
inc
pushf
mov
lock
stos
imul
sub
dec
push
adc
fsubrs
xchg
pop
sbb
ds
les
test
in
in
shll
repz
pop
xlat
adc
jp
lcall
lret
mov
or
mov
jnp
lock
fstl
lret
leave
inc
xor
dec
enter
xlat
pushf
adc
sub
mov
gs
push
aad
sbb
or
mov
mov
neg
mov
mov
mov
popf
push
out
xor
mov
aas
or
dec
loopne
in
fwait
movsl
push
enter
addr16
mov
pop
mov
xchg
in
cs
inc
sahf
xor
pop
ret
xor
adc
mov
fucomi
jle
xorl
rcrl
jg
mov
adc
enter
psraw
pop
add
sbbb
pop
jno
popa
mov
in
inc
push
push
sbb
mov
fimuls
outsb
xor
out
mov
push
fs
sbb
dec
xor
lock
xor
movsb
repz
cmpb
nop
pop
jmp
dec
mov
jo
pop
mov
icebp
jb
fiadds
or
cmp
xor
adc
lock
dec
cltd
jne
lock
mov
mov
lock
pop
sbb
mov
xchg
add
cltd
or
cmp
cmp
lock
rcrl
sti
rcrl
mov
lock
mov
notl
loopne
pop
bnd
sar
sbb
stos
movsb
in
loopne
or
jnp
and
sarb
stos
inc
icebp
xchg
test
cmp
and
js
pop
aad
icebp
jno
sub
stc
in
in
xor
mov
mov
jno
mov
jo
adc
and
add
sub
jno
in
loopne
mov
icebp
dec
adc
sub
shrb
xchg
mov
dec
pop
pop
pop
sahf
das
rcl
cmp
js
lock
and
xor
push
and
outsl
jp
xchg
lcall
xchg
mov
enter
imul
popa
mov
into
jmp
lcall
pop
cmp
je
adc
add
jae
es
sbb
xor
and
faddl
lcall
and
cwtl
xor
or
fwait
xchg
loope
push
mov
push
loope
jo
sub
sbb
mov
stos
xor
das
fwait
shll
test
aaa
lock
gs
js
repz
lds
cmp
mov
inc
lock
sub
sub
lock
ret
inc
test
lock
inc
sbb
or
addb
push
push
loopne
lock
test
cltd
jno
repnz
and
stc
push
inc
xorb
sbb
jmp
lock
in
jns
add
xor
cltd
ret
push
sub
rcll
clc
mov
in
adc
mov
jb
ss
lock
adc
out
jmp
popl
mov
or
mov
test
insl
pusha
jmp
or
mov
jno
insl
xchg
adc
lock
or
rcrb
xchg
push
shlb
divl
adc
push
xor
dec
repz
stos
jmp
cmpsl
jmp
sti
pop
push
push
jp
in
or
movsl
fistl
decb
mov
daa
addr16
jle
or
xor
cmp
repz
jno
xchg
pop
js
je
lock
push
mov
or
inc
popa
sbb
jo
hlt
xor
or
ret
test
sbb
rcl
xchg
xor
mov
xor
mov
adc
adc
jne
or
mov
ds
fs
sbb
pop
sti
xchg
xor
ficoms
call
loope
sub
mov
aam
mov
fwait
jle
push
mov
sbb
xchg
clc
adc
push
inc
mov
iret
pusha
pop
hlt
lea
jl
push
aaa
ss
push
aam
mul
push
mov
cmp
mov
push
lock
or
inc
xor
mov
int3
and
and
mov
data16
adcl
scas
fsts
push
cs
outsl
loopne
mov
inc
jp
gs
mov
pushf
clc
xor
out
sbb
and
jl
mov
outsb
lock
pop
jnp
pop
and
jmp
sub
and
imul
mov
add
xor
mov
mov
xor
cmp
pop
cli
pop
sub
cltd
or
in
lock
lret
aaa
out
jo
loopne
push
jle
cld
bnd
lock
mov
cmp
stos
mov
in
jp
xor
pop
push
mov
pusha
lahf
xchg
mov
test
movsb
and
or
fcmovnu
lock
je
mov
lock
or
jp
out
cmpb
leave
mov
cmp
adc
cli
sti
lock
je
adc
test
xchg
movsl
mov
hlt
pop
mov
jmp
fs
iret
jmp
mov
mov
lock
or
rcll
inc
ret
jl
test
adc
lock
mov
subps
aad
push
leave
jl
jnp
or
shll
ficompl
clc
cmpl
cmp
out
enter
ds
mov
push
xchg
jmp
pop
lock
or
testl
add
idivb
jge
and
lock
pop
push
dec
into
lock
pushl
pop
std
cmp
repz
daa
cs
ret
popa
mov
lret
sub
cmc
pop
sar
jae
lock
add
dec
mov
jl
stos
pop
lods
push
xlat
fsts
dec
push
xchg
scas
mov
mov
and
adc
mov
mov
popa
xor
inc
clc
xchg
pop
in
xchg
lock
cmp
gs
test
icebp
inc
cld
pop
mov
jp
clc
xor
rcrb
inc
pop
ret
repz
fs
and
ret
mov
dec
xor
xchg
cmp
mov
pop
aam
es
sbb
lock
push
int3
test
icebp
dec
loopne
or
ljmp
cmp
int
cmp
push
xor
lock
fadd
xchg
das
loope
test
ja
xor
divl
sbb
add
jp
xor
fstps
repnz
fiaddl
popa
icebp
mov
sti
inc
in
out
and
and
js
adc
enter
paddusb
or
add
mov
or
sbb
fidivs
js
mov
dec
out
push
sub
jns
fidivl
imul
mov
stos
jnp
sbb
mov
lock
popf
movsl
jae
hlt
mov
icebp
fisubl
and
pop
pop
divl
mov
cmc
adc
pushf
pop
push
or
icebp
or
sub
shl
repz
sub
mulb
lock
xor
mov
xor
scas
lock
cli
cld
jle
ret
incb
loope
jne
in
jae
adc
rcrb
std
pop
jge
fdivs
leave
or
mov
lock
ret
xor
into
pop
or
pop
xchg
sbb
lock
ret
mov
sbb
je
enter
in
lcall
sbb
jp
div
push
mov
stos
sub
test
jp
push
xor
pop
je
adc
js
je
pop
leave
rclb
nop
enter
sbb
inc
pop
and
sbb
push
fistl
aas
lret
sbb
jp
jae
or
add
sub
adc
call
xlat
icebp
fnsave
sub
xor
mov
inc
sub
xchg
lock
ficoms
pop
ja
lock
add
orl
jbe
xor
out
icebp
mov
xor
in
lea
lock
fcoml
sahf
shl
dec
lock
lahf
mov
cmpsl
xchg
cmp
lret
lock
jb
mov
inc
lock
iret
xchg
xlat
xor
lods
xor
mov
lret
mov
aaa
inc
push
mov
int
xor
fidivs
lods
les
inc
repnz
rcrl
xor
js
lock
or
xor
sarb
gs
mov
ret
inc
push
lock
repz
pop
aas
cmc
cs
dec
lock
push
push
pop
dec
fcomip
in
aam
jo
adc
sub
inc
lock
push
and
lock
das
jb
popa
outsl
outsb
lock
in
clc
pop
dec
icebp
pop
test
sub
add
loopne
or
imul
outsb
mov
divb
inc
scas
sub
and
mov
jno
xlat
shll
push
inc
lret
out
arpl
inc
inc
mov
cmp
mov
loope
out
pop
addr16
xchg
adc
or
push
xlat
clc
data16
mov
xchg
in
test
fcmovne
nop
dec
jns
jno
or
inc
pop
xor
cmp
cmp
repz
int3
sub
jo
sub
push
insl
arpl
mov
sarb
imul
cmp
push
lock
jbe
pop
lock
int3
fildll
testl
es
dec
clc
xor
ret
out
xorl
jbe
push
pop
lock
out
sub
mov
fcmovb
push
pop
test
enter
sub
jbe
xor
shrl
xchg
sub
lds
jns
add
or
push
sahf
cmpsl
outsb
cmp
jg
lock
mov
sbb
int
inc
mov
and
rcrl
lock
inc
mov
xor
std
mov
xor
pop
cmp
mov
xchg
sub
xor
enter
mov
or
icebp
jo
mov
cmp
add
xor
fcomip
fstpt
cld
adc
push
lock
adc
sbb
lock
lahf
bound
addr16
rcl
xor
test
pop
call
pop
test
mov
outsb
incl
adc
push
xor
push
lock
ds
mov
pop
sbb
mov
sbb
mov
aaa
popa
test
lock
pop
je
ss
and
add
push
and
mov
pop
setne
xor
inc
mov
dec
pop
lock
cmp
movsb
test
outsl
lock
popf
aad
arpl
mov
sti
mov
std
ja
lock
stos
push
or
cld
ss
xchg
movsb
or
jo
mov
dec
lock
inc
or
icebp
lods
fidivs
jg
and
dec
sub
leave
lock
lds
dec
mov
jge
jo
pusha
std
scas
pop
and
testb
pop
lock
push
lock
out
push
push
xlat
mov
mov
pop
mov
cmpb
dec
lret
cmp
and
jle
aaa
or
pop
fsubr
lock
je
and
sbb
clc
loop
lock
negl
and
xlat
js
dec
xor
fcomip
mov
push
push
inc
xor
in
jo
addr16
mov
push
mov
jo
mov
cmp
mov
into
mov
or
jbe
or
mov
aaa
xor
cmp
inc
sbb
jae
ljmp
mov
xor
push
xchg
das
inc
or
loope,pn
adc
push
bound
sub
lock
std
push
rcll
hlt
lock
sti
clc
push
and
lock
cmp
mov
lock
push
xor
pop
or
fdivs
jo
dec
icebp
adc
lock
push
dec
movsl
adc
mov
in
and
push
dec
sub
lock
sbb
and
mov
adc
lods
pshufw
stos
dec
iret
icebp
and
inc
mov
ret
and
repz
popa
mov
fs
out
mov
adc
mov
arpl
cmp
xchg
sbb
mov
mov
adc
in
pop
jmp
das
cwtl
adc
mov
icebp
es
in
sti
ss
mov
ljmp
pusha
mov
push
pop
loopne
inc
mov
cmp
test
popa
leave
testl
and
cli
mov
outsb
xchg
xor
lods
inc
jo
push
push
arpl
add
in
lock
cltd
inc
jp
dec
jbe
es
or
sbb
popa
xchg
call
mov
lea
and
sub
mov
lock
cmp
mov
cli
js
lock
dec
iret
sub
cmc
mov
sub
adc
in
push
out
lock
push
jne
sub
lcall
lock
shlb
in
xor
dec
cmpsb
cmp
ja
in
test
andl
repnz
lcall
lods
sbb
inc
test
int3
add
adc
mov
stos
lock
ret
xchg
dec
scas
test
test
xor
pop
lock
mov
adc
dec
std
cld
pushf
mov
adc
xchg
or
pop
pop
cmp
das
int3
add
push
mov
dec
aad
js
mov
mov
and
pop
add
repz
and
pop
cmp
iret
fsubp
stc
icebp
lock
shlb
cvtps2pd
add
pop
jbe
cmp
aaa
mov
cli
sbb
xchg
lock
mov
test
lcall
or
and
dec
mov
shl
shll
in
cmp
jmp
cli
inc
adc
sbb
insb
jno
lcall
cltd
pop
aam
pmulhuw
enter
jb
xorb
jo
and
stos
pop
aam
dec
frstor
fisttps
pop
fisubl
dec
or
sub
cmp
test
adc
lock
aam
lock
call
dec
insb
gs
add
dec
push
clc
add
nop
mov
repnz
xor
xor
psubq
mov
lock
and
scas
lods
int3
fbld
jo
add
lock
rcl
lock
adc
fcomip
push
nop
mov
arpl
bound
mov
or
push
dec
mov
rorl
hlt
call
jae
call
jo
sbb
xchg
mov
call
mov
fwait
stc
repnz
adc
or
pop
enter
adc
lock
sub
sub
mov
call
mov
cmp
cmp
shl
int3
fcoms
addl
ja
shll
movsb
mov
push
incl
inc
lock
lock
sub
mov
sarb
ss
dec
addl
inc
push
int
pop
xor
mov
pop
sahf
mov
inc
xchg
jmp
mov
aaa
pop
mov
clc
jmp
int
lret
rcrb
ja
icebp
push
sub
mov
dec
sub
loop
pop
inc
dec
aas
lea
aad
stc
daa
rolb
jne
add
ja
jl
and
dec
aas
xchg
dec
or
aad
xorl
ds
or
cmp
sbb
adc
push
sbb
push
icebp
loopne
cwtl
sub
leave
and
cwtl
enter
xchg
icebp
pop
es
sarb
pop
fstps
fstpl
nop
call
pop
push
or
jnp
jo
xchg
int3
push
lea
icebp
seto
adc
hlt
call
inc
or
stc
fs
movsl
std
inc
fwait
sti
test
notb
add
mov
lock
inc
stos
push
movsb
imul
push
cwtl
jg
call
lock
jne
dec
test
pop
lock
inc
cmc
adc
xchg
pusha
mov
xor
lock
jne
sti
icebp
int
icebp
lea
ret
popf
fdivs
push
and
cmp
cli
cwtl
jns
xor
jne
lock
cmp
xor
lcall
mov
pop
jg
jnp
dec
cld
fcomi
cmp
add
pop
add
mov
jns
pop
xor
int
sti
pop
mov
stos
mov
lock
fwait
les
adc
lock
mov
and
mov
mov
repz
out
lods
inc
push
mov
mov
lock
ds
jnp
je
lcall
sahf
fwait
sub
adc
mov
inc
imul
adc
push
mov
lret
push
xchg
les
add
mov
out
xchg
adc
repnz
mov
xor
fstl
int
lock
and
lock
out
mov
inc
xor
add
jbe
dec
dec
jne
fsubr
pusha
hlt
rcrb
lods
testb
pop
pop
cmp
push
incl
ljmp
cmp
xchg
mov
push
and
sub
cmp
sbb
aam
adc
les
gs
cmp
in
xchg
pop
outsl
add
rcrl
aam
les
aaa
rol
xchg
fdivr
mov
jne
mov
nop
lock
inc
aas
push
test
inc
test
push
push
mov
pop
sbb
jnp
repz
pop
cmp
movsl
add
jo
cltd
lock
loopne
outsl
rcrl
lock
jns
pop
and
imul
add
xor
lock
aad
add
jns
dec
inc
repnz
gs
lock
in
mov
cmp
icebp
dec
mov
mov
aad
or
cmpsl
insb
and
mov
xchg
inc
pop
call
clc
mov
mov
mov
lds
enter
lock
add
push
adc
int
aam
pop
stos
push
mov
pusha
std
pop
enter
xchg
data16
push
mov
xor
or
or
mov
push
loopne
adc
movsb
jnp
or
sub
xchg
and
jns
repz
push
lods
jno
push
dec
in
push
xchg
and
sbb
push
pop
mov
ja
nop
jbe
mov
js
push
xchg
lock
mov
fwait
cmpsl
stc
jo
jbe
mov
fs
xor
and
lea
pop
mov
bnd
je
daa
cmp
cmc
data16
sub
mov
jnp
xor
out
jbe
pop
aaa
enter
cmp
mov
or
cmpsb
cmp
xor
push
jo
ds
jne
lock
or
dec
cmp
cmp
aas
repnz
mov
jo
pop
nop
icebp
in
cmp
xor
test
xor
mov
or
repnz
fisubrl
lea
shll
repz
cmp
push
test
jb
lock
mov
dec
mov
int
sub
xor
stos
pop
repnz
dec
nop
in
xor
out
lock
fs
outsb
cmc
repz
repz
xor
cmp
dec
into
adc
add
xchg
sub
aas
sahf
das
cmp
jnp
xor
lds
jbe
jns
out
xor
pop
push
aad
mov
push
lock
or
je
cli
pop
mov
fsubs
dec
jae
mov
cmp
orb
pop
call
popf
pop
sub
xchg
leave
rcrl
sbb
popa
repz
lock
mov
or
cmp
popf
mov
lock
add
mov
jp
lock
cwtl
pop
push
js
divb
lock
lods
mov
lock
mov
cmp
test
fdivp
mov
das
push
lock
push
in
repz
sbb
inc
aad
js
adc
and
repz
test
or
repz
dec
out
push
mov
aam
loop
push
je
lahf
test
fnsave
adc
add
sti
lea
icebp
mov
dec
adc
inc
jns
sub
push
insb
sub
inc
dec
lock
fmull
add
push
or
lds
cmp
jbe
and
push
cmpsl
pusha
lock
pop
adc
pop
xchg
test
jle
lods
jae
mov
add
xchg
lock
aad
clc
xor
frstpm(287
pop
leave
sbb
cld
adc
mov
cmc
jo
jmp
jbe
pushf
outsl
inc
push
jge
inc
ds
movsl
mov
pop
push
pop
and
fnstsw
jmp
mov
movl
mov
xchg
xchg
mov
and
sahf
push
and
pop
in
in
mov
repz
xor
cmp
stos
add
ljmp
lods
lock
jns
mov
adc
lock
jl
lock
int3
or
lock
xchg
outsb
lahf
icebp
lcall
adc
repz
mov
lock
pop
inc
xchg
cli
dec
fisubrs
jle
out
push
adc
sti
adc
lods
mov
and
lock
pop
cmp
je
push
lock
int3
sub
and
mov
adc
mov
xchg
mov
adc
cmp
enter
shll
lock
xor
and
pop
jecxz
js
push
xor
lock
int3
push
jbe
pop
lock
addb
fmuls
push
mov
fildll
fcmovne
shlb
adc
pop
enter
cmpsl
mov
div
sbb
outsl
pop
cwtl
aad
lock
pop
adc
addb
lock
in
jo
int3
adc
shrd
push
sbb
adc
rcrl
loopne
xor
stos
jns
cmc
or
int3
mov
push
inc
inc
shlb
push
push
fldcw
xchg
xor
jne
lock
imul
nopl
push
sub
jb
outsb
repz
push
sbb
bswap
sbb
or
pusha
fdivs
out
dec
mov
sbb
es
inc
push
mov
icebp
and
pushf
sub
xor
icebp
dec
mov
aaa
int3
mov
clc
out
cltd
xor
test
inc
xor
fwait
jle
mov
mov
jae
movsl
lock
test
lock
dec
lods
dec
insl
sbb
lods
adc
push
lock
cmp
out
je
icebp
aad
ss
hlt
into
cwtl
or
aam
xlat
out
and
lea
pushf
sbb
dec
add
or
into
or
jo
in
xor
lock
fcoms
jge
lock
xchg
popf
int
and
add
mov
popa
aam
in
divb
adc
out
jo
jns
push
call
es
outsb
add
push
xor
lock
xor
pop
repnz
data16
js
xchg
push
mov
fwait
xor
mov
fdivrs
jp
je
data16
in
or
jecxz
pop
lock
pop
icebp
mov
sbb
arpl
wrmsr
fstpl
std
das
cmc
or
or
jns
mov
pushf
adc
lock
xchg
or
or
xor
lock
pusha
movsl
xor
xchg
push
add
dec
das
lds
popl
bound
lock
lcall
out
or
add
lock
sbb
lock
push
inc
cmpsb
and
xor
jne
xor
popa
int3
pop
jnp
lock
xchg
stos
pop
mov
inc
out
lock
sti
inc
pop
mov
sub
cld
push
lock
add
je
iret
mov
sti
movsb
push
shr
pop
cs
pop
sbb
fadds
pop
sub
adc
push
push
or
and
std
xor
mov
dec
cmpsb
push
adc
xchg
lock
cmp
mov
out
shlb
imul
adc
sti
adc
push
inc
jo
mov
push
jb
lock
and
sbb
jae
movsl
daa
lock
push
adc
clc
sub
testb
lock
test
push
or
scas
lea
std
jae
lock
mov
test
imull
rcrb
jbe
pop
add
push
xlat
jo
jno
fsub
ret
or
push
dec
iret
or
lock
push
aad
imul
je
mov
sti
ret
lock
ljmp
cmp
out
sbb
jns
jg
push
into
enter
inc
fwait
ret
in
and
movsb
mov
ret
lock
into
jl
orb
mov
and
lock
aad
lds
jl
enter
jbe
jne
sub
mov
and
sarb
push
lock
aaa
es
pop
cltd
fsubl
aas
xor
lock
cmpsb
add
inc
sbb
sub
popa
cmp
popf
ds
xchg
sub
mov
sahf
lock
jns
cmp
sar
jne
xchg
adc
jle
dec
repz
ret
lcall
and
cwtl
sbb
xor
cmp
jmp
mov
jae
test
popa
lock
sbb
mov
pop
fs
pop
ljmp
push
call
sub
vmulps
es
lock
fildl
jnp
sub
and
pop
mov
pop
pop
cmp
int
push
push
adc
lock
pop
adc
sti
dec
mov
xor
and
lock
popa
add
jnp
into
icebp
pop
push
mov
test
lcall
out
hlt
clc
lock
cwtl
xor
cmpsb
lret
adc
sti
gs
xchg
mov
push
or
jne
jns
or
pop
mov
es
movsb
std
cmp
mov
or
cmc
repnz
mov
in
cli
lea
inc
lock
js
outsb
subb
test
lock
les
pop
arpl
icebp
imul
lock
adc
dec
cmp
mov
mov
mov
sbb
call
clc
pop
or
cmpb
loop
sub
movsb
ds
dec
je
jo
sub
jne
sbbb
adc
pusha
mov
jb
lcall
xor
jns
icebp
xor
sbbl
in
movsb
lock
lret
das
jae
punpckhbw
in
mov
es
jecxz
punpckhbw
enter
mov
lods
lock
testl
and
xchg
lock
and
cmp
popf
lock
inc
cmpsl
out
jbe
es
xor
in
rcrl
or
mov
nop
lock
push
mov
cli
ss
xchg
sub
push
test
xor
insl
cld
mov
sbb
lods
jne
fisttpll
cmp
mov
enter
cwtl
and
jne
dec
mov
mov
lods
cmpsl
ja
xor
inc
and
lock
aam
repz
jns
push
push
push
test
sub
jb
push
js
lock
mov
push
xor
cld
pop
lock
pop
je
frndint
dec
mov
int
push
push
and
nop
lock
lods
inc
add
mov
hlt
or
mov
xchg
or
shrb
mov
lret
pop
adc
sbb
xor
and
ljmp
jnp
push
sbb
stos
test
xor
pushl
mov
cmp
fistpl
dec
orb
jge
icebp
and
cmp
push
repz
push
sbb
xlat
adc
or
lock
shlb
mov
mov
or
jmp
hlt
xor
lock
rclb
push
lock
sti
cs
jae
ss
pop
cmp
aaa
xor
fistl
clc
xchg
or
es
mov
cmp
and
stos
pop
mov
adc
push
pop
out
sub
push
inc
lock
rcl
lock
fcompl
scas
es
outsb
sub
cmpsb
xor
setbe
mov
pusha
mov
xor
mov
xlat
xchg
les
es
in
aam
xor
mov
negb
lea
jne
and
test
rorb
pop
mov
xchg
lcall
sub
jo
pop
lea
jp
push
mov
loop
dec
inc
fs
in
icebp
pop
lock
lods
jnp
add
xchg
ret
mov
mov
imul
adc
mov
cmp
xor
xor
fwait
outsb
loope
pusha
iret
cmc
jnp
jnp
loop
lock
mov
sub
and
mov
test
dec
xchg
sub
cmc
popf
loop
lock
push
mov
fdivp
fmull
jmp
leave
lock
jg
adc
cmp
fucomip
sub
mov
movsl
aaa
push
je
outsl
hlt
stos
mov
push
xchg
outsl
mov
push
ficoms
leave
fldenv
mov
aaa
orl
arpl
lock
insb
test
repnz
dec
sub
xchg
pop
and
pop
sub
bound
lret
jae
lea
icebp
ucomiss
lods
jg
add
mov
ret
into
cmc
jo
imul
xor
and
imulb
cmp
mov
jo
pop
nop
jbe
and
fs
adc
push
jp
sub
lock
mov
xor
ja
jp
mov
or
sbb
sub
clc
dec
pop
lcall
jns
push
jg
xor
jnp
push
push
mov
lcall
and
mov
lock
adc
repz
xchg
or
stos
sbb
mov
mov
or
int
call
ja
pop
fwait
cmp
mov
jbe
xor
or
push
aas
jg
loopne
stos
je
aam
stos
lock
sbb
cld
xor
arpl
divb
cmp
rclb
mov
mov
mov
cli
jns
test
mov
xchg
xor
pop
sti
aaa
test
mov
jo
push
aam
pop
adc
jns
ss
xchg
repz
jg
stc
cmp
and
push
adc
cli
pop
jno
outsb
stc
or
icebp
push
pop
mov
xor
jl
adc
xchg
repnz
jae
lods
fdiv
pop
dec
lock
notb
stc
cld
jae
ss
xor
nop
push
jo
test
movsb
pop
mov
mov
mov
inc
lret
xchg
lock
jns
sbb
enter
in
aas
mov
jne
test
or
pushf
adc
cltd
xor
sub
div
movsb
fwait
lea
icebp
mov
pop
inc
sbb
or
cmpsb
sti
xchg
gs
mov
pop
adc
lock
adc
push
js
lods
add
int
jo
pop
popa
cmp
lea
add
xor
mov
pusha
xchg
mov
hlt
lock
stc
cmp
cmc
out
dec
xor
lret
mov
push
lds
ds
jae
mov
icebp
lcall
sub
xor
push
mov
ljmp
lock
aad
mov
repnz
pop
xor
push
or
add
adc
dec
lret
and
xor
push
insl
mov
shlb
fisttpl
rorb
push
sub
mov
repz
mov
mov
shlb
je
push
fdivrs
push
cwtl
fildll
xchg
outsl
movsl
adc
pop
ds
inc
and
sub
lock
popf
sub
sub
fld
mov
xchg
test
dec
xchg
ds
js
add
jne
dec
pop
lock
jns
push
lahf
movsb
clc
mov
lea
mov
inc
pop
mov
pusha
mov
lock
data16
dec
divb
icebp
jne
push
xchg
orl
pop
repnz
repz
xor
and
push
push
push
dec
pop
mov
jmp
jo
imul
fsubs
repz
add
push
cmpsb
js
movsl
sbb
mov
jne
out
fmul
bnd
mov
stos
push
xchg
popf
cltd
lock
sti
dec
cmp
notb
lock
fmul
popf
cs
jo
xor
repz
pop
jle
icebp
rorb
adc
lock
in
lock
jecxz
add
pop
jns
sbb
push
xor
push
push
dec
and
mov
dec
in
sahf
jge
mov
and
dec
popf
leave
pushl
adc
and
cld
add
lods
mulb
cmpxchg
outsl
shll
xchg
push
push
xor
rdpmc
mov
mul
setns
mov
shrb
xlat
jb
xchg
xchg
cmc
lock
dec
xchg
nop
lahf
sbb
lock
jb,pn
xor
cmp
sbb
xor
pusha
mov
icebp
imul
pusha
mov
xor
jo
sub
mov
test
xorl
int3
sbb
jne
mov
push
enter
mov
jo
cmc
stos
mov
push
or
idiv
adc
test
int
xchg
xchg
mov
sbb
cwtl
adc
enter
sub
pop
lock
js
or
jnp
rol
xlat
movsb
mov
std
lock
adc
lock
lret
gs
ficomps
aad
call
fistl
ret
jb
icebp
cmc
in
lcall
lock
cmp
cmp
test
or
xor
cmp
mov
test
loop
mov
fs
cli
dec
mov
jo
lahf
stc
sbb
jecxz
cmp
jns
repz
mov
or
in
adc
xchg
mov
fcmovne
lods
lock
or
xchg
push
inc
or
je
lock
mov
scas
push
xchg
mov
out
loopne
cld
lds
lock
push
dec
jl
cwtl
adc
lods
cmp
adc
push
mov
jo
inc
stc
sub
outsl
in
hlt
pop
lock
xor
xor
lock
gs
jp
icebp
movsl
pop
out
les
jo
cld
sbb
jns
mov
cmpsb
jo
test
sahf
dec
jecxz
out
sbb
xor
imul
cmc
mov
cmp
std
insb
push
mov
xor
push
mov
and
daa
inc
jl
lret
je
shl
psadbw
scas
aam
jo
sub
orl
sub
nop
xor
push
jnp
mov
movsl
push
cmpsl
cmpsb
mov
or
popa
in
xor
dec
ja
jbe
call
mov
hlt
repz
stos
repz
popa
movsl
pop
fucomp
sarb
dec
lock
push
lock
jne
daa
jno
lock
or
pop
mov
je
or
adc
test
adcl
jmp
addb
mov
dec
mov
jne
push
enter
jge
rcl
xchg
jnp
jne
pop
push
lock
adc
xchg
pushf
lea
pop
lock
jnp
adc
xchg
jns
test
sub
inc
xchg
clc
cmp
xchg
shlb
lock
lods
dec
mov
cld
movsl
mov
jmp
push
mov
inc
cwtl
or
mov
lock
adc
lods
push
les
xor
out
mov
inc
das
das
aam
xchg
enter
pop
lock
xchg
test
mov
sub
stos
push
repz
pop
cmp
mov
mov
or
pushf
icebp
je
pusha
out
jmp
sbb
jl
lock
mov
push
and
sbb
jmp
ljmp
mov
cmp
cmpsl
hlt
lcall
pusha
loopne
push
xlat
push
ss
push
sub
popa
mov
adc
lock
ljmp
or
enter
lock
lock
mov
enter
mov
mov
popf
sub
jle
dec
lock
push
push
fucomi
cmpsb
aad
fimuls
and
sbb
test
dec
mulb
mov
mov
cli
sti
pop
lock
push
enter
ss
and
imul
fisttpll
cmpsb
sbb
lods
in
sbb
and
or
pop
rep
mov
xchg
pop
icebp
test
lods
mov
sub
jne
popa
pushf
test
mov
out
loop
jmp
sahf
lock
imul
xor
mov
fwait
je
xorb
dec
mov
sub
popf
out
pop
inc
lock
jl
sysenter
mov
hlt
pop
leave
popf
xor
scas
cmp
mov
ja
icebp
cmp
mov
and
in
jns
enter
pop
loopne
punpcklwd
adc
movsl
imul
cmc
pop
in
xchg
repnz
imul
lds
mov
cmp
aad
hlt
rep
nop
clc
fs
orb
pop
xor
xchg
scas
pop
push
xchg
lock
pop
sbbb
cmpsb
or
lock
mov
lock
xor
dec
mov
icebp
je
sti
mov
jns
xor
jo
push
dec
mov
or
mov
shlb
pop
lock
in
aas
repz
mov
lock
push
pop
sbb
adc
insb
xchg
into
inc
mov
testb
pop
lock
add
fwait
and
inc
mov
dec
add
inc
or
dec
stc
pusha
stos
push
repz
and
push
insl
clc
ret
jo
shll
stos
inc
pop
loopne
sbb
mov
add
lock
in
cmp
jbe
add
mov
xor
lock
cmp
pop
nop
xchg
fwait
lods
lock
mov
push
pop
test
xchg
mov
adc
mov
idivl
lock
movsl
sahf
fdivrl
xchg
lea
iret
xor
lock
sti
jo
jne
outsl
lock
sub
int
cmp
and
jecxz
movsl
add
fdivrs
mov
pop
jl
lock
mov
lock
loope
push
lock
dec
mov
cmp
lock
inc
cmpsb
jno
repnz
ss
dec
pushf
dec
scas
xor
mov
ds
jae
mov
rorb
lock
pop
imul
aam
into
ret
arpl
lock
je
ss
fisttps
xchg
lock
sti
and
lock
dec
lods
mov
adc
mov
pusha
jbe
loope
dec
dec
push
or
mov
cmp
sbb
mov
pmullw
cmp
lock
push
fcoml
popf
xor
dec
push
xchg
jecxz
xor
jnp
mov
adc
ss
leave
lret
lock
mov
sbb
or
cmp
lcall
test
icebp
jle
pop
mov
fwait
es
sti
fstpl
adc
sub
mov
loopne
popf
lock
push
arpl
push
push
cmp
icebp
aad
sub
gs
jmp
lock
cmc
aas
pop
cmpsb
cltd
push
ret
and
scas
xchg
pop
sub
out
test
push
pop
fcmovnbe
loop
insb
test
mov
iret
adc
lock
icebp
jbe
and
jl
mov
vucomiss
cmpsb
mov
rcll
pop
jae
jmp
icebp
dec
jge
inc
and
std
mov
lock
sahf
popa
xor
mov
xchg
lea
jp
sbb
data16
pcmpeqd
cmp
nop
cmc
lods
aam
icebp
jae
ret
pop
sub
and
sbb
lock
or
lock
lret
fstl
inc
lock
push
pusha
movsl
lock
in
sbb
pop
loop
hlt
push
mov
push
rclb
cmp
out
lret
mov
xor
sbb
gs
or
movsl
cmp
into
cmp
lock
dec
pop
pop
hlt
bnd
nop
test
andl
mov
lea
lock
jl
es
xchg
jb
aaa
sbb
bound
iret
pusha
loopne
jle
xchg
lock
jge
jle
lock
andb
incb
adc
arpl
jns
mov
and
test
gs
stos
pop
inc
xor
addr16
push
cmc
daa
and
cmp
add
mov
mov
lcall
into
lahf
jo
pop
dec
pop
lods
loope
adc
push
aas
jno
shlb
sti
loopne
cmp
lock
js
clc
arpl
test
xchg
stos
lock
or
and
shll
adc
jns
jmp
lock
ja
lea
mov
in
adc
call
adc
rcll
scas
and
sbb
mov
setp
mov
lock
sbb
les
inc
sbb
adc
mov
add
lock
mov
jge
hlt
fdiv
clc
sbb
mov
in
push
lock
mov
cltd
fists
ljmp
arpl
push
mov
iret
les
lock
add
mov
imulb
hlt
push
adc
lock
push
mov
out
mov
ja
add
mov
into
jo
cmp
lock
push
das
ret
lock
lea
xchg
cmp
call
pushf
les
push
lock
pop
fiadds
jle
fs
xchg
ss
daa
shl
push
adc
cmp
lock
aaa
outsl
mov
lock
and
mov
mov
jne
es
xor
mov
and
push
xor
and
adc
repnz
mov
loop
repz
test
push
adc
clc
lods
push
cli
cld
sbb
or
fbstp
pop
adc
jo
cmp
fisubl
sbb
or
mov
int3
jo
and
mov
mov
je
or
mov
ljmp
mov
pop
cmp
xor
repnz
pop
inc
js
in
jns
lock
cmp
pop
inc
cmpsb
mov
sbb
mov
and
sti
xor
movsb
sbb
xor
cwtl
push
ret
add
pmuludq
bnd
insl
icebp
cmp
lods
sbb
arpl
cmp
das
lock
mov
lock
imul
mov
pop
add
add
ja
adc
push
cmp
xor
bound
fcmovnu
sahf
lock
out
pop
jecxz
lock
xchg
inc
in
lock
test
pop
call
jg
jnp
fstl
pop
sub
lcall
push
adc
xor
xor
lock
or
push
lock
jp
std
or
lock
imul
icebp
or
adc
inc
aas
fistpl
cmpsl
out
inc
in
jle
cmp
sub
add
movsb
movsl
pop
repnz
out
xchg
fwait
dec
jae
pop
jecxz
lock
pop
mov
mov
inc
jbe
inc
mov
pop
lock
cltd
adc
pop
in
sbb
xor
into
fstpt
cmp
rolb
aaa
lock
popf
inc
shll
aad
pop
insb
scas
mov
repz
jp
aam
das
out
rclb
fidivl
xor
dec
lods
adc
fstpl
daa
lock
lds
or
stos
lock
push
lods
add
xor
nop
lock
mov
into
lock
pop
and
xchg
adc
outsb
lock
push
dec
ja
loopne
lock
adc
xchg
adc
add
sbb
fimull
sub
cmp
pop
nop
ja
lock
xor
sarl
mov
cmp
add
adc
int3
pop
xor
and
bnd
jl
inc
in
scas
lock
cmpsl
je
aad
cmc
lock
in
push
cmp
lock
lcall
push
jae
mov
cmp
mov
std
pop
sbb
loop
lock
adc
out
mov
lock
lea
shlb
ror
jl
repz
inc
loopne
xchg
sarb
inc
jecxz
push
stos
pop
js
lock
and
loop
lock
sahf
sbb
enter
jnp
lock
dec
xchg
loope
or
rdmsr
bound
shrl
pop
push
incb
adc
stos
sub
into
push
mov
test
xchg
or
inc
les
lock
aas
dec
rclb
xchg
xchg
cli
fs
and
data16
add
ss
inc
jno
inc
das
mov
in
or
lret
hlt
psubsw
jg
sbbb
aaa
loop
xor
icebp
les
or
lock
mov
sahf
loop
lock
rcr
mov
jne
jmp
mov
lock
ret
daa
fs
or
add
sub
lock
and
jnp
cmp
lock
icebp
pop
iret
jne
add
sbb
dec
dec
mov
int
mov
adc
fcomps
jle
int3
int
inc
loopne
xor
call
in
daa
or
shlb
outsb
movsb
cmpsb
lock
jb
repnz
cwtl
add
push
add
f2xm1
stos
test
inc
xor
adc
imul
jae
jp
push
lock
cmp
mov
js
mov
xor
or
xor
and
mov
sar
lock
jl
dec
pop
adc
dec
insl
pusha
lock
fldcw
lock
add
sbb
aad
faddl
out
push
xorl
aad
lods
shlb
dec
icebp
push
sbb
mov
adc
lock
fdivl
push
dec
xchg
lods
lock
push
mov
cmp
push
icebp
jg
cmp
sub
adc
lock
into
rclb
mov
rcrl
out
mov
shll
iret
dec
dec
pop
and
movsl
fcmovnbe
inc
lock
mov
das
lds
lock
mov
xor
out
jl
or
lock
sub
bound
cmc
jnp
lock
jg
add
out
loop
lock
scas
dec
mov
cpuid
cmc
inc
pop
loope
arpl
pop
lahf
mov
sbb
lock
mov
mov
imull
imul
xor
fiaddl
push
sub
xor
icebp
push
push
in
push
nop
adc
or
xor
mov
sbb
sti
cwtl
or
mov
cmp
int
or
mov
mov
lock
outsb
test
mov
pushf
inc
lock
aam
sbb
lcall
xchg
incb
icebp
cld
gs
test
arpl
push
sar
lock
sarb
push
jo
adc
jbe
pop
aad
test
rolb
out
sbb
or
insb
cmc
cmp
push
icebp
sub
adc
inc
jmp
fstl
sbb
fsubrp
mov
shll
add
xor
pushf
xchg
shl
dec
or
fisubs
push
lock
repnz
pushl
in
lods
adc
push
hlt
push
lock
xor
dec
lock
jae
dec
jecxz
and
mov
aas
mov
mov
adc
jns
xchg
aam
enter
mov
imul
shl
push
into
add
ja
mov
repz
ljmp
jmp
lock
xchg
cwtl
xor
jno
fistpl
nop
sahf
out
jnp
or
dec
inc
movsl
lods
fmuls
cmpsb
push
push
sub
push
sub
mov
mov
xchg
dec
mov
mov
sub
rcrb
push
lock
jmp
jns
psllw
cmpb
shll
push
and
cmp
cmp
aam
fnstenv
xchg
out
push
push
lock
pusha
addl
mov
bnd
sbb
daa
push
pop
lock
mov
jns
icebp
sub
and
mov
jle
xchg
mov
or
lock
pop
xchg
icebp
sub
dec
push
cmp
lock
sti
xchg
lock
mov
lock
adc
ret
sub
lcall
clc
test
arpl
adc
test
lock
mov
divl
rclb
push
mov
dec
push
iret
push
leave
add
fdiv
adc
sub
mov
in
jo
cmpsl
jo
psraw
stos
sub
iret
pop
scas
in
jmp
adc
into
sbb
fwait
jecxz
loop
mull
sarb
test
add
pop
and
add
xchg
call
pop
xor
mov
pop
rcll
xchg
xor
cmp
sub
sub
lock
sbb
cmp
and
adc
jge
or
lock
jb
shrl
cmp
fwait
cli
lock
ficompl
pop
fsubrs
ja
in
dec
cmc
mov
pop
and
repnz
jmp
or
mov
divb
imul
xchg
push
or
lock
mov
int3
sub
outsl
xchg
out
decl
push
sub
fldcw
mov
lock
sbb
lret
adc
mov
loop
lock
lcall
lock
repnz
add
cmp
dec
lret
sti
push
ss
aam
xor
xor
xchg
sbbb
ss
inc
jp
dec
loop
lock
xchg
ja
lock
inc
xor
pcmpeqd
nop
lock
sarl
loop
lock
orb
pop
sbb
mov
lock
les
cmp
or
scas
mov
jo
xchg
aam
xchg
pop
lods
mov
cmp
push
movsl
dec
out
lock
jmp
fcomip
add
pop
jbe
lret
loop
repnz
or
mov
cmpsb
mov
push
mov
enter
lock
sbb
sub
pop
faddl
mov
and
repnz
je
and
aad
mov
xchg
pop
cmp
push
jne
bound
or
int3
mov
mov
cli
sbb
stos
dec
inc
inc
lock
subl
lock
data16
ds
je
jb
adc
cmp
sub
jnp
lock
addr16
aaa
or
inc
push
subb
test
in
sbb
repz
out
and
test
xchg
jecxz
mov
ret
jo
cmpsl
jle
sbb
movsl
fstpl
jb
fcoml
or
mov
pop
test
popf
adc
lock
push
push
inc
inc
popa
mov
inc
gs
scas
or
lock
add
por
lock
ret
cmpsb
and
data16
bound
icebp
pusha
lods
pop
mov
adc
dec
push
lock
movsb
push
popf
pop
ljmp
sbb
cmp
lock
inc
out
cmp
lock
dec
ss
jl
adc
lock
push
movsl
das
push
xor
jle
insb
inc
es
fldcw
pop
inc
movsb
repz
jo
bnd
xor
lock
pop
imul
js
mov
xor
or
jno
jo
shll
push
xor
lock
mov
mov
repz
jno
dec
sbb
icebp
and
scas
repnz
adc
add
repnz
add
fdiv
sub
sub
jnp
dec
je
icebp
and
jo
lods
test
cmp
lock
pop
pusha
ds
sub
lock
pop
fistps
xor
test
arpl
xchg
cwtl
clc
pop
movsl
adc
ret
lock
jne
or
push
lock
gs
pop
xor
jae
cmp
jb
and
lods
into
mov
sub
movsb
ds
ds
pop
jno
lock
cmp
dec
sbb
pop
lock
mov
push
je
xchg
ss
cmp
out
adc
lret
cvtdq2ps
loop
pop
cmp
add
lock
or
or
sbb
cli
lock
cmp
icebp
or
fisttpll
push
push
or
cmp
enter
or
sub
cld
mov
movsb
inc
int3
or
lock
ss
dec
pop
jg
fdiv
add
lock
mov
xor
das
call
push
push
dec
fsubp
lock
mov
add
jmp
jo
inc
out
cltd
lock
mull
and
ss
orb
insb
fsubrl
aas
cmp
lds
jb
movsl
fs
fdivrs
test
xchg
rcl
loop
push
dec
icebp
icebp
in
pushf
xor
or
xchg
daa
pop
cli
mov
cmpsl
adc
jo
subb
mov
into
cmp
lea
fistpll
mov
mov
push
outsb
clc
or
jns
js
int
push
xor
xor
cwtl
cmpsb
cmpl
add
div
dec
mov
ret
cmp
aaa
addl
xchg
ja
setns
out
sub
cmp
lret
aaa
jae
gs
ljmp
sbb
add
sub
sbb
push
pushf
jnp
lock
out
call
std
cmpsb
sahf
add
lods
gs
mov
xlat
jb
stos
mov
xor
mov
es
scas
inc
lock
xchg
pop
repnz
or
loop
in
lods
adc
sbb
loopne
repz
jbe
int
mov
push
lock
cmp
scas
mov
aaa
jne
push
das
ljmp
ss
add
test
mov
add
push
push
ja
jno
iret
cmc
sbb
inc
fwait
stos
xchg
icebp
adc
pop
in
mov
xrelease
mov
cmpsl
cwtl
xchg
inc
xor
jae
in
inc
testb
add
js
aam
fcomps
lock
nop
cmp
test
push
push
subl
jo
push
jne
lds
push
mov
cmpl
out
roll
xchg
cmpsb
xchg
cwtl
xchg
icebp
fmull
add
mov
push
mov
lock
out
insb
xor
mov
mov
xor
jmp
xor
mov
mov
and
clc
lds
cmp
xor
imul
out
packuswb
ja
dec
hlt
push
ret
lock
fadds
mov
mov
pushl
dec
lds
mov
data16
mov
and
cmp
and
mov
icebp
imul
dec
test
mov
xor
stos
repz
push
dec
cmp
aam
stc
shrb
add
icebp
cmp
sub
sub
fdivp
dec
push
mov
insl
loopne
lock
pop
sub
out
mov
pop
rclb
push
movsl
addr16
xor
push
xchg
ret
rcl
nop
je
loopne
aaa
cli
test
xchg
in
jo
js
dec
dec
repz
push
sbb
xor
int
or
jb
jo
mov
adc
ja
jo
hlt
mov
ret
pusha
into
push
mov
lret
dec
xchg
sbb
lods
lock
sub
arpl
lock
dec
push
or
cwtl
mov
jo
xor
data16
shrb
inc
inc
in
icebp
cmp
sub
aam
roll
je
nop
sbb
mov
aaa
xor
mov
out
add
repnz
insb
adc
icebp
jb
push
mov
sbb
icebp
push
loop
adc
cld
outsl
loopne
fisttps
fs
xor
stc
shl
shlb
xacquire
sahf
mov
clc
testb
icebp
jns
imul
loopne
sbb
pusha
mov
call
xchg
jo
lock
dec
cli
mov
jecxz
pop
jnp
test
enter
cwtl
cmp
push
add
and
pop
lahf
push
jge
les
rcl
shl
loope
faddl
lock
add
and
cli
shll
xor
pop
xchg
lret
sbb
mov
pusha
dec
dec
sbb
pop
sub
sub
sbb
jmp
sub
shlb
pop
cmp
icebp
in
mov
mov
rcrb
cmp
aad
nop
je
lock
es
sti
mov
outsl
cmc
sub
aam
lock
sub
adc
mov
jecxz
mov
cmp
push
ficompl
insl
je
pushl
sti
mov
js
mov
jne
lock
and
lcall
out
jo
js
xor
flds
jnp
jp
lock
mov
imul
lock
mov
test
movsl
lock
cli
lock
push
arpl
jmp
hlt
jo
das
fs
sbb
mov
cmpsb
lea
lock
xchg
and
sub
cmp
jns
xlat
mov
stc
scas
enter
setbe
sahf
inc
push
and
iret
adc
pop
mov
mov
mov
add
sbb
daa
lds
daa
shlb
adc
add
mov
leave
es
int3
sub
pushw
lret
idivb
cmp
mov
fmul
std
les
lock
and
sub
js
lock
sbb
lock
push
mov
sbb
aad
pop
inc
ljmp
rclb
or
cld
jnp
notb
lock
out
in
bound
ret
adc
out
in
lea
lock
pusha
jl
fisubrl
mov
or
mov
aaa
outsl
jp
mov
fbstp
xchg
mov
cmp
scas
clc
repnz
dec
jns
rcr
mov
outsl
adc
and
xor
push
mov
imul
lock
push
lea
push
mov
mov
in
lock
fnstenv
mov
jo
mov
and
out
in
dec
lock
imul
xor
iret
push
and
lock
add
pop
lock
or
mov
icebp
decl
ret
mov
lock
addl
lock
into
sbb
or
mov
lock
jne
dec
shrb
lock
in
popf
into
cmpsb
jbe
lock
mov
fldl
cmp
xchg
push
les
mov
popa
inc
lock
and
arpl
ret
insl
mov
fbstp
shlb
test
cld
adc
mov
lds
jl
sub
mov
mov
or
jecxz
jnp
dec
lcall
fneni(8087
mov
sbb
mov
lock
push
rcrb
mov
incl
cmp
jl
lea
jmp
aas
xor
and
fdivrs
adc
das
xor
out
pop
and
rorl
adc
test
movsb
cmp
push
lock
test
adc
bound
cmp
je
lock
push
add
pop
jne
jno
push
cmp
pop
jg
lock
push
div
loop
gs
jb
pop
cmp
pop
dec
mov
lock
pop
lock
pop
loop
shll
fwait
mov
lock
dec
mov
cmp
sbb
xor
inc
add
mov
arpl
or
mov
and
xor
lock
cmp
mov
xchg
lar
rorb
jns
sbbb
cmp
lock
fwait
or
aam
icebp
ljmp
pop
ss
jecxz
aaa
mov
adc
and
lock
lea
xchg
xchg
xor
inc
enter
cmp
js
mov
lock
loop
cld
cmp
xor
mov
jo
lahf
mov
jb
adc
mov
dec
icebp
fists
test
xor
cld
xchg
icebp
push
movsb
sahf
pushf
pop
rorb
push
aaa
and
pop
outsb
rol
repnz
dec
cmp
jge
lock
xor
sbb
xor
mov
adc
and
mov
lret
cmp
pusha
mov
or
push
sbb
jge
jne
and
jge
mov
xchg
scas
lock
add
mov
xchg
pop
faddl
add
pop
lcall
xchg
lock
add
push
lock
into
movsb
out
dec
jnp
push
jns
cmc
and
or
outsl
lock
lds
scas
lock
mov
es
xor
or
sub
inc
scas
xchg
dec
lea
in
xor
lock
loop
sbb
lock
mov
push
test
mov
xor
push
fnstcw
jp
stos
fdivrs
mov
cmpsb
pop
mov
push
xchg
lock
ror
push
push
xchg
mov
pop
jmp
mov
push
stc
in
mov
pop
xchg
out
mov
sahf
fnstenv
and
xlat
push
into
lahf
jo
cmp
push
ret
dec
aad
adc
mov
ss
sbb
push
xor
jb
adc
push
out
xchg
in
xor
inc
mov
xchg
movsl
pop
mov
and
inc
and
jo
aam
jns
in
lock
sbb
adc
stos
cli
aad
dec
stos
inc
into
xor
cs
lock
fidivs
jne
adc
jae
mov
jp
loope
and
xchg
adc
mov
mov
add
nop
dec
push
ret
in
or
aad
jae
pop
sub
lock
add
lock
fsubrs
xchg
mov
dec
lcall
shlb
dec
aas
lods
xor
jle
push
pop
fs
and
fdivrs
div
push
dec
imul
sub
icebp
push
and
jo
idiv
enter
mov
pusha
xchg
sub
jnp
pop
jge
cmp
shrb
es
fsubrs
mov
push
ja
icebp
inc
xor
dec
and
dec
cmpsl
outsl
mov
or
jo
movsb
and
pop
lock
add
mov
lock
sub
dec
push
mov
into
mov
negl
mov
lock
xchg
scas
or
fbstp
add
xor
add
sub
mov
sub
inc
lock
cmpsl
cmc
dec
xor
cli
inc
lock
test
sahf
nop
adc
lock
or
das
jae
lock
mov
mov
inc
fcoms
cmp
addb
lock
js
xchg
xlat
pop
mov
ss
cmc
popf
outsb
lock
mov
and
ret
lahf
movsb
orb
lock
rolb
adc
lock
jmp
cwtl
stos
push
sub
ss
in
mov
adc
int
xchg
lock
mov
test
setnp
add
out
adc
iret
bound
dec
mov
lret
rolb
std
ss
hlt
push
insl
loopne
xor
icebp
aam
jmp
je
cmp
cli
push
mov
loope
xor
xor
mov
xor
inc
cmpsl
xorb
and
mov
bound
jp
ja
jns
in
pusha
loope
mov
xchg
cmp
fisttpl
lock
xor
ja
push
hlt
xchg
pop
pop
mov
jecxz
mov
xchg
dec
aam
scas
xchg
pop
fiadds
ss
insb
das
xchg
rcll
cmp
subb
adc
jo
mov
and
lock
inc
mov
dec
fbstp
fstl
nop
sahf
cmp
xchg
idivl
inc
call
adc
scas
lods
pop
jg
lock
movsb
mov
xor
jo
push
fisubl
mov
xchg
xor
int
rclb
lock
mov
jne
jg
leave
and
jns
dec
jle
test
or
insb
fwait
pop
add
lock
shl
pop
lock
mov
icebp
pop
jo
mov
stos
popf
loopne
dec
repz
dec
out
or
iret
xchg
xchg
xorb
or
lock
dec
xchg
f2xm1
das
or
xchg
push
lret
adc
and
sbb
push
ljmp
xchg
lock
sti
push
sub
inc
in
jbe
js
pushf
std
cmp
pop
je
mov
xchg
xor
mov
mov
lock
adc
pop
test
lock
icebp
sbb
leave
lock
pusha
divb
lods
mov
test
es
sbb
dec
mov
push
enter
rorb
lock
daa
add
xchg
arpl
outsb
test
jecxz
sbb
mov
lock
loop
dec
mov
out
adc
ss
xchg
pushf
lock
mov
jle
lock
aaa
es
mov
rep
fidivrl
test
mov
lock
dec
pushf
dec
jge
mov
lock
jns
mov
std
cmc
adc
fdiv
push
scas
shrb
lcall
pop
xchg
sbb
inc
jae
mov
jne
lock
dec
jnp
xchg
mov
stos
or
hlt
es
mov
jns
push
lock
repnz
sahf
jp
sub
lds
mov
js
cmp
hlt
xchg
enter
dec
fld
push
adc
es
mov
mov
xchg
jp
cmp
xlat
rclb
lock
jl
push
xor
lock
adc
lock
fwait
shl
jg
repnz
insb
push
subb
fisubrs
mov
icebp
mov
push
xlat
cld
jns
lock
test
call
fsubrl
or
js
mov
iret
lock
lcall
lock
daa
sub
dec
jne
and
in
and
lods
cld
xlat
shrb
pop
push
mov
jo
test
subl
popa
movsl
popa
xor
mov
scas
push
cmp
fidivrs
icebp
inc
push
sub
std
hlt
lock
cmp
lock
out
leave
ss
lock
mov
and
xor
and
js
fwait
mov
gs
pop
hlt
aad
shlb
lock
movsl
int
lock
mov
into
lock
mov
mov
int
mov
mov
icebp
jp
pop
xlat
or
loope
iret
lock
cmp
jb
xor
xchg
mov
pop
lcall
mov
fmull
movsl
loope
jp
mov
rcr
sbb
pop
shld
mov
or
dec
fsubs
hlt
int3
lods
dec
maskmovq
divl
cmpsl
jo
jp
push
adc
inc
loope
test
insb
mov
push
xor
jo
lock
jne
mov
outsb
sub
cmp
mov
divb
cmp
test
or
lock
dec
lret
gs
mov
enter
pop
push
xor
pop
mov
or
xor
mov
mov
push
cmpsb
test
lcall
aam
test
lock
cltd
sbb
lock
jecxz
push
out
sub
and
lret
inc
dec
clc
or
or
jbe
ds
sbb
add
mov
sub
jl
shrl
pop
ja
or
xor
ret
jo
inc
push
or
cmpsb
mov
jae
lock
or
call
xor
push
clc
aas
ljmp
xor
adc
shll
xchg
xor
in
adc
notl
je
mov
cmp
pop
repz
mov
push
das
adc
pop
mov
leave
push
mov
or
mov
inc
daa
inc
pop
iret
inc
lock
mull
loop
cmovns
sub
or
inc
jo
push
lock
mov
lock
inc
mov
lock
xchg
xchg
mov
pushf
lock
std
dec
icebp
mov
inc
data16
int3
lock
dec
adcl
push
or
jo
sbb
push
xor
xor
and
pusha
push
shl
jp
mov
jnp
sbbl
ror
cmp
sbb
push
icebp
aas
int
pop
sarb
cmc
cmp
adc
cmp
jo
movsb
and
lock
lock
xlat
pusha
cmp
mov
mov
mov
or
loopne
sbbb
mov
xchg
aaa
lock
push
pop
sbb
icebp
cmp
dec
mov
adcl
insl
and
pop
lock
sbb
mov
lock
mov
mov
jl
lock
or
gs
pop
rclb
repz
mov
fs
push
ret
mov
cmpsb
aam
shl
push
inc
inc
repnz
sub
dec
pusha
xor
sbb
xchg
das
fisttpl
ljmp
lds
adc
push
add
pop
cmpsb
mov
adc
pop
lods
mov
mov
pop
add
in
mov
push
aas
sub
dec
push
cmc
icebp
ljmp
push
push
cld
or
pop
jns
push
jo
pusha
xchg
push
jb
adc
gs
adc
xor
xor
cs
inc
mov
pop
sbb
out
stos
adc
adc
xor
dec
mov
sbb
clc
out
loop
pusha
fcomi
sarl
lods
adcb
adc
dec
pop
pop
lahf
jo
xor
or
push
lock
enter
mov
test
lock
jmp
pushaw
lock
jns
push
lock
pop
enter
push
fstps
outsb
cltd
call
pop
fsubr
mov
mov
fwait
lods
jmp
or
push
inc
fsts
aas
repz
roll
in
cmc
add
repz
xchg
sub
jmp
in
fstl
pop
xor
jo
jp
cwtl
push
jmp
hlt
mov
addb
xlat
or
nop
push
repz
out
pusha
xor
xor
int3
movsl
fiaddl
and
fnstenv
into
mov
xor
sub
scas
adcl
pop
lock
jl
and
dec
or
dec
mov
sub
test
nop
lea
pop
pop
cmc
and
sbb
mov
lock
clc
cmp
cltd
and
lock
pop
jnp
jge
adc
mov
lock
icebp
aam
movsb
out
mov
orb
fnstcw
mov
dec
aas
xor
push
sub
sub
or
repz
cwtl
repnz
fwait
loopne
aas
aaa
dec
lods
xchg
sbb
sub
repz
das
jmp
jno
std
call
pop
and
add
or
ret
push
mov
sub
jge
dec
jns
lock
icebp
hlt
inc
lock
in
sbb
jb
pop
es
mov
push
pop
in
xchg
xor
in
cli
xor
push
call
lock
pop
daa
mov
mov
sti
lock
pop
pushf
mov
xor
in
aaa
sub
lock
ja
adc
lock
push
sub
jnp
or
or
ret
cld
jo
inc
icebp
push
je
icebp
and
shlb
arpl
mov
add
divl
cmp
in
pusha
fdiv
pusha
or
push
mov
sbb
sbb
push
inc
cld
lock
lea
jo
xor
jns
jmp
or
sbb
scas
stc
push
xor
adc
xor
fdivrs
xchg
mov
and
xchg
pop
pop
xchg
lock
outsb
rclb
cmc
xor
and
sbb
inc
fdivl
adc
dec
lock
push
dec
daa
mov
xor
loopne
cmp
stos
cli
push
jp
call
add
cmpsl
std
push
lcall
xchg
or
movsb
lock
mov
repnz
lock
fldcw
mov
lret
stos
sub
rcrl
adc
sub
clc
cmp
icebp
jae
scas
jmp
cltd
mov
mov
xor
and
lock
adc
hlt
mov
jo
mov
xor
dec
mov
xchg
add
pusha
push
mov
repz
push
lock
sbb
adc
push
notb
outsb
mov
pop
mov
lock
ret
sub
and
push
imul
mov
stos
pop
xchg
lret
pop
test
jnp
push
and
shl
xor
add
lret
sbbb
shlb
push
lock
fld
insb
shll
lock
adc
xor
sbb
adc
xchg
es
shlb
xor
cli
mov
je
lock
loope
lock
cli
dec
lock
orl
mov
lock
adc
shll
loopne
adc
test
xor
arpl
mov
les
adcb
jo
std
lock
sbb
xchg
dec
dec
lock
ss
mov
sbb
xchg
js
dec
adc
cli
adc
adc
xchg
mov
out
lock
mov
test
xlat
pusha
dec
jg
lock
sbb
loope
jae
sub
dec
pop
lock
jp
inc
fildl
movsb
or
insb
into
mov
lock
add
sbb
xchg
and
xlat
push
cmp
mov
inc
or
dec
stos
fisubrl
mov
mov
inc
aam
jmp
popf
add
dec
icebp
movsl
icebp
add
imul
xchg
mov
jae
push
push
pop
sub
repz
cmp
sar
inc
mov
js
sarb
mov
jge
test
insb
dec
aam
inc
lock
rorl
ss
sbb
xchg
rcll
push
out
fsubrl
cmp
xor
lock
push
push
aas
xchg
lock
add
pop
cmp
mov
mov
aad
rcll
xchg
and
sar
or
push
cmp
mov
and
imul
lock
mov
xchg
add
mov
ret
cmpsl
xchg
mov
push
cmpsb
cmp
test
mov
mov
mov
lods
test
xchg
vmfunc
xchg
lret
jnp
clc
mov
xchg
xor
jo
pop
iret
dec
aad
es
adc
fnstenv
lods
mov
jo
inc
and
mov
cld
jp
pusha
div
mov
jns
or
push
xchg
icebp
add
mov
dec
lock
fisttpl
lock
mov
test
out
adc
ja
je
aad
addb
stos
fdivp
cmp
mov
dec
mov
stos
das
cmp
fidivl
sub
add
je
jo
lret
cwtl
mov
add
movsb
adc
push
mov
mov
jmp
dec
ficompl
inc
sub
and
xchg
pop
icebp
jp
cmp
mov
or
mov
jl
lock
push
stc
push
ss
mov
fs
mov
xchg
adc
outsl
icebp
das
cwtl
push
dec
lret
fsubr
add
pop
mov
pushf
shl
jbe
bound
loop
adc
pop
xor
jbe
out
pop
xlat
adc
sbb
icebp
addl
and
xchg
lock
xchg
stos
aas
mov
mov
sbb
jnp
je
lods
mov
cmp
stos
clc
pop
cmp
jbe
sub
cs
sub
xor
into
xchg
and
add
dec
mov
ss
xlat
mov
fcomi
mov
xor
mov
xor
sbb
xchg
jbe
rclb
mov
cwtl
cmp
lock
movsb
test
lock
cmp
mov
stc
and
push
dec
out
out
lock
inc
mov
test
cmp
adc
loopne
lock
in
sahf
cmp
stos
push
std
adc
sbb
pop
cmp
add
imul
mov
cli
jne
lock
mov
sub
or
outsb
imul
aad
sbb
mov
jp
std
mov
test
adc
mov
sbb
adc
sbb
jno
enter
adc
lock
imul
cmp
lock
mov
lock
pop
mov
rorb
push
sub
mov
push
call
je
mov
mov
lock
or
sub
push
cmp
cmpb
cmp
sbb
fidivrl
enter
lock
pop
xchg
sub
or
cmp
xor
pushf
or
pusha
sti
or
xor
orb
ja
cli
out
adc
lock
lods
pop
xor
inc
mov
lock
pop
jp
aam
pop
push
ret
ja
or
lock
xor
cmc
in
je
lds
pop
stc
loop
ja
lock
nop
pop
cmp
popf
mov
ret
mov
scas
push
push
aaa
je
icebp
aad
sub
loopne
cmc
in
cmp
cmp
imul
push
lock
mov
sbb
pop
stc
imul
jo
cmp
pop
popa
in
xor
mov
inc
xchg
or
adc
test
push
into
sbb
fcmovnbe
mov
je
push
loope
sarb
data16
arpl
into
shll
dec
lock
adc
shr
inc
push
lock
sub
push
cmc
and
hlt
jp
and
lret
mov
into
std
and
daa
loopne
adc
mov
arpl
ret
fisttps
jp
sub
test
pop
lock
fisubl
push
mov
sub
ja
scas
mov
faddl
bound
xchg
xchg
lock
daa
enter
rcrl
sub
xor
dec
dec
xchg
int
inc
mov
fnstcw
inc
into
addl
pop
and
ja
jb
je
xchg
cs
dec
push
cwtl
rorb
gs
push
cmp
mov
sti
jne
xchg
lock
sahf
mov
loop
js
les
xor
shl
and
mov
divb
mov
lock
inc
inc
sarl
loope
jnp
movsb
mov
popa
and
arpl
or
ret
push
and
loope
std
push
bound
xor
fdivs
call
xchg
xor
and
sub
aaa
push
lock
mov
call
jecxz
add
sbb
jmp
gs
enter
adc
stc
push
add
sub
add
aaa
repnz
add
cld
mov
frstor
iret
sahf
push
in
jl
jg
rolb
mov
arpl
or
stos
movsl
lock
pop
nop
and
pop
imul
mov
sub
data16
push
jp
fdivs
mov
ss
outsb
xor
cmc
pop
sub
aad
sbb
mov
adc
and
cmp
rorb
icebp
fiadds
sti
movsb
ret
inc
xchg
repnz
cli
mov
sbb
icebp
jo
cmc
sub
xchg
jp
in
imul
jecxz
xchg
ja
mov
xchg
mov
mulb
adc
popa
aaa
lock
or
inc
cmp
cs
mov
push
mov
lock
jb
push
and
lock
pop
aad
movsb
lods
sub
mov
repz
into
popf
or
mov
pop
lret
pop
aas
or
outsl
les
dec
loope
jbe
add
jo
jmp
daa
aaa
jno
aad
push
adc
aam
jbe
pop
movsl
push
cld
mov
xlat
orb
jo
sbb
in
jo
xchg
jl
daa
std
icebp
mov
sbb
xchg
addr16
mov
mov
pminsw
nop
mov
or
jo
arpl
sbb
push
f2xm1
and
aam
mov
sbb
cmp
mov
xor
jbe
mov
adc
lock
pushf
dec
pop
dec
es
lock
sbb
sahf
pop
stc
or
cmp
leave
or
mov
xchg
mov
push
fwait
and
push
add
lock
mov
ret
or
icebp
lahf
ss
repnz
lret
sub
imul
cli
mov
cmpsb
inc
xchg
in
lock
jge
int
test
mov
cmp
push
movsb
mov
xor
add
pusha
imul
jl
fwait
jp
fcomi
mov
push
popa
and
xchg
stc
xor
das
jbe
lock
xor
cmp
or
mov
mov
sti
cmp
pusha
repz
xor
je
div
jnp
ret
push
jo
sbb
cmp
lock
mov
mov
xchg
iret
adc
push
adc
adc
addb
aad
int3
ljmp
mulb
repnz
xor
daa
and
roll
cmp
or
dec
rcl
test
push
repnz
cmp
mov
cmpsl
out
cmp
repz
pop
daa
mov
dec
clc
sbb
iret
lock
negl
mov
inc
lock
lock
jbe
rcrb
pop
xor
ss
or
movsl
lds
cmpsl
dec
and
jg
in
add
pop
mov
cltd
lock
f2xm1
pop
aad
dec
mov
or
mov
jne
jo
xor
jp
push
data16
xlat
or
cmp
inc
enter
lock
ss
dec
out
mov
fwait
xor
lock
hlt
jb
lock
add
or
or
adc
divb
rcll
sub
aam
es
pop
push
xchg
or
cltd
adc
mov
cmp
jmp
push
js
movsb
sbb
into
xor
repz
pop
test
andl
aaa
mov
out
es
sub
loope
adc
in
jmp
jo
xlat
in
cmp
dec
mov
xor
push
adc
pop
inc
lock
out
mov
icebp
mov
lock
push
ja
pop
das
push
lock
push
push
ror
xor
lock
jmp
lock
ficoml
dec
mov
lret
and
popa
pop
orl
in
rclb
mov
push
mov
push
jle
pop
push
mov
jne
jae
lock
mov
mov
add
ljmp
xchg
shrb
mov
mov
lock
shll
repnz
out
icebp
ljmp
xchg
adc
stc
mov
push
pop
push
mov
lock
test
jp
int
clc
mov
pop
insb
xchg
pop
mov
les
xlat
push
out
xchg
lock
pop
jmp
cwtl
lock
jo
xchg
idiv
mov
xchg
shll
ss
and
pop
mov
psubb
push
mov
pop
sbb
or
add
or
imul
pop
mov
dec
dec
testb
rcl
adcl
jae
icebp
lock
xor
push
mov
cmp
adc
jbe
lds
lock
test
push
sub
sbb
je
inc
sub
ret
lods
sbb
nop
cmp
sub
cli
push
lock
hlt
xchg
mov
mov
xchg
iret
icebp
stc
push
pop
orl
lock
or
adc
lret
insl
or
jne
add
mov
pushf
jp
jnp
mov
jne
aaa
and
lock
jmp
mov
mov
pop
mov
out
lock
adc
stos
sbb
cmp
inc
fcomip
mov
push
push
in
cmpsb
jo
fildl
inc
push
jmp
adc
sti
aaa
or
add
mov
xor
jl
lods
inc
sahf
clc
lock
lret
mov
jne
mov
cmpb
ret
mov
adc
lock
dec
popf
lea
into
mov
stc
imul
inc
jp
lock
iret
jnp
pop
mov
mov
in
inc
push
pushf
call
jp
xchg
movsb
mov
sarb
mov
adc
cmpl
push
dec
stos
and
leave
lock
loope
pop
shrb
and
push
dec
in
and
popa
adc
clc
addr16
pop
dec
pop
push
cmpsb
or
lret
loopne
lock
mov
out
test
repz
mov
sti
lods
jg
std
cmp
lock
sub
xchg
adc
loopne
push
sbb
push
xchg
sub
mov
iret
icebp
inc
inc
pusha
test
jo
push
push
jecxz
lcall
pusha
ret
repnz
push
div
cmp
xor
stc
xchg
xor
sbb
push
aam
mov
mov
mov
jo
inc
pushf
das
cmp
or
adc
sti
xor
pop
mov
div
dec
ret
mov
stos
repz
adc
xchg
lock
jo
loopne
pusha
stos
pop
and
adc
lock
add
cltd
fstpt
sub
enter
call
nop
gs
hlt
lock
dec
cwtl
lret
mov
or
rep
jmp
ja
sbb
and
out
insb
pavgb
sub
aaa
lock
lcall
lcall
icebp
mov
or
push
fcoml
lock
adc
js
mov
repz
pushf
shrb
push
cmp
test
iret
nop
lock
mov
adc
sahf
sub
xlat
dec
adc
dec
sti
hlt
outsb
mov
stos
nop
push
cmovg
pop
xor
lock
xor
xchg
leave
jp
pop
pop
sub
mov
lock
jne
ss
jge
lock
inc
push
orb
gs
dec
test
cmc
jecxz
pop
mov
add
adc
cwtl
push
lock
lret
pop
cmp
xchg
scas
jns
ljmp
sub
out
mov
sbb
adc
mov
or
inc
push
push
into
and
inc
pop
push
xchg
stos
lret
ljmp
repz
clc
test
jo
dec
lahf
xchg
xor
jp
lock
adc
pusha
fisttps
lock
or
movsb
dec
sub
nop
ret
jo
xchg
dec
xchg
adc
aad
xor
push
cs
adc
movl
lods
into
scas
inc
or
pop
sti
shrd
push
test
jns
or
mov
cmp
daa
add
cltd
xor
mov
vpshad
repnz
jo
or
sub
pusha
pop
push
shl
shl
inc
jl
push
outsl
aaa
ucomiss
aaa
push
lock
adc
xchg
mov
mov
dec
shl
xor
movsl
int3
lock
mov
shr
and
fldl
loope
div
or
mov
jno
repnz
fsubl
push
into
dec
jp
sub
and
mov
icebp
dec
sbb
mov
mov
cmpsb
push
xchg
inc
mov
stos
je
mov
sub
lock
or
sbb
hlt
fstl
mov
dec
pop
push
lock
cmp
dec
ret
fistpl
pop
mov
pusha
repnz
sbb
shll
and
aaa
jmp
int3
ds
cltd
aaa
push
jne
xor
pop
adc
rcrb
cmp
inc
push
mov
jo
lea
and
add
ss
or
adc
xor
frstor
out
add
xor
movsb
or
xchg
inc
repz
push
rcl
add
sbb
lock
pushf
adc
stc
mov
xor
adcb
mov
mov
lock
dec
cmpsl
jbe
aam
xor
mov
sub
movsl
call
shrb
pop
rorl
iret
fstps
sub
lods
dec
lock
mov
dec
push
cmp
lock
ds
aad
jne
test
imul
test
mov
or
hlt
sub
xchg
jno
rolb
flds
sub
sahf
mov
xchg
jne
inc
icebp
adc
ret
sbb
xor
je
lock
aad
repnz
repz
mov
dec
push
mov
shll
or
xchg
jne
sub
and
sbb
dec
cmpsb
adc
xchg
movsl
out
and
hlt
shlb
push
lock
into
icebp
fcmovnu
movsb
cld
lcall
jbe
nop
lock
mov
sbb
stc
dec
out
mov
icebp
cmp
int3
push
lret
repnz
mov
cmp
lcall
sbb
jnp
lock
xor
or
xchg
push
and
lock
add
adc
pop
cmp
xor
xor
lock
out
cltd
pushf
js
push
or
ss
pop
push
repnz
push
divb
sub
sub
cmp
lds
lret
cs
fisubrs
lock
xchg
mov
cmc
sbb
push
adc
ret
popf
xchg
jp
jns
fnsave
sbb
imul
mov
iret
xchg
loope
insb
or
mov
inc
mov
xchg
cwtl
cmp
mov
pop
push
jae
push
jo
add
lock
mov
in
xor
pop
or
shlb
dec
negb
cltd
add
lock
mov
xor
loope
or
lcall
cmp
mov
lock
adc
lock
xchg
in
mov
pop
je
jg
mov
add
xchg
mov
loopne
adc
loope
shlb
sub
inc
push
mov
cmp
mov
dec
push
rorb
xor
mov
out
or
lock
push
jae
adc
cmp
pusha
mov
inc
mov
lahf
push
xchg
into
pop
cs
sbb
push
stc
pop
clc
icebp
cli
xor
dec
movsl
jp
icebp
int3
jle
pushf
stos
ja
in
fimull
jns
stc
sbb
lock
shlb
xor
stos
lock
adc
popa
loopne
bnd
sbb
push
xor
cmpsb
dec
lock
ss
add
lcall
sub
hlt
int
lret
sub
cmovo
mov
stc
jnp
jno
pop
call
ss
pop
cltd
mov
nop
lock
push
cmp
mov
lcall
in
push
lods
adc
icebp
dec
mov
in
cmp
repz
enter
paddb
jo
cmp
aaa
mov
pshufw
mov
xchg
fisubrs
fdivrs
call
les
gs
lock
outsl
pop
sub
xor
xlat
getsec
addr16
xchg
addb
ftst
sub
push
in
test
or
cmp
repz
xor
lock
out
lcall
mov
pop
push
xchg
or
mov
aaa
popa
push
pop
pop
gs
adc
enter
out
pop
inc
sbb
in
lock
hlt
jns
cli
lds
loopne
lock
or
xor
or
jne
push
inc
mov
sbb
lock
int3
ss
cli
xor
inc
loope
ret
mov
movsb
pop
stos
loop
cmc
rclb
cmp
dec
push
jge
xor
lret
xor
mov
hlt
push
dec
rcl
testl
pop
mov
dec
pop
jno
aas
or
mov
xchg
sub
xor
sahf
pop
in
lock
xchg
gs
add
inc
andl
lock
fnstcw
add
sti
xchg
jmp
in
push
int
xor
dec
jbe
or
out
lock
xor
mov
js
lock
aas
cmp
stos
loop
repnz
push
push
test
add
imul
add
inc
mov
dec
xchg
xor
cmp
adc
lock
jl
jns
stc
cmp
je
shlb
lock
mov
lock
xor
or
and
xor
lock
mov
in
lods
xor
icebp
xchg
jecxz
inc
push
lahf
arpl
jno
repz
out
push
gs
outsb
lds
sbb
mov
mov
mov
inc
lock
xor
and
es
xchg
xor
sub
jp
jb
or
xor
fcomip
jmp
sub
push
cmp
in
ret
dec
cld
out
pop
push
enter
cmovle
std
bound
lock
cmp
and
inc
xor
gs
sbb
xchg
push
mov
and
mov
add
mov
lods
loope
lock
les
fwait
sub
pop
lock
xchg
lock
mov
les
test
push
outsl
mov
lock
and
cmp
aas
daa
sbb
fs
loop
jno
push
popf
mov
xor
and
sbb
jo
in
rcrb
cld
addr16
sbb
ficoml
pushf
aaa
jo
dec
jg
in
imul
andb
sti
lock
cmp
in
frstor
mov
test
add
mov
mov
fldt
or
divl
scas
rcl
jo
dec
jne
icebp
pop
jge
xchg
push
ret
pop
lock
fsubs
and
inc
jo
xchg
jne
lock
xor
push
xor
jo,pn
cmp
xor
jb
cmp
test
repz
jno
or
hlt
lock
cld
mov
ja
lock
jbe
out
xor
and
out
pop
repz
pusha
ret
jo
inc
lahf
icebp
pop
inc
shrb
xor
or
std
out
or
fiadds
sbb
pop
mov
cli
daa
lock
inc
xor
shl
lgs
scas
adcb
inc
pop
fimull
data16
pusha
mov
add
int
into
lock
dec
imul
lock
jp
loope
push
ja
movsl
cmp
or
insl
loop,pt
loop
lock
into
andb
cmp
dec
lock
mov
aaa
xor
test
ds
js
adc
insl
and
in
cmpsb
lock
jecxz
lock
cwtl
push
adc
cmp
shlb
push
xor
iret
cli
add
jp
aad
push
icebp
and
xor
fldcw
mov
inc
imul
inc
aaa
sbb
jg
icebp
loop
icebp
fidivrl
push
jo
in
push
jl
aam
mov
inc
aas
pop
push
lock
in
popa
xor
mov
fwait
mov
sub
outsl
fnsave
mov
sti
pop
sub
or
les
int
xor
push
jnp
cli
xor
xchg
jo
push
jne
addl
out
xchg
popf
lock
inc
xchg
in
mov
adc
repnz
in
mov
arpl
xor
fwait
mov
pushf
inc
mov
push
js
cli
or
lea
jmp
add
and
pop
pushf
push
out
mov
fistps
push
nop
pop
repz
xor
mov
ficomps
outsb
xor
cmp
sub
sub
leave
ret
push
fdivs
repnz
mov
xor
subl
clc
mov
cwtl
orb
lock
call
test
sub
pop
lock
sbb
repz
ljmp
pop
jns
lock
mov
pop
pop
pop
xchg
sbb
jae
pop
fcomi
stc
cmpsl
aam
xor
push
sub
shrb
mov
inc
xor
add
or
jno
and
enter
sub
push
mov
adc
lock
mov
jns
push
stc
push
in
repz
push
enter
inc
mov
mov
pop
add
mov
ret
sbb
scas
mov
jae
cmp
and
or
lock
sub
aad
mov
repz
push
xchg
stc
iret
andb
add
lock
fabs
or
mov
out
xchg
inc
jmp
sbb
add
repnz
es
xabort
lock
ds
fsubl
inc
lock
sub
jns
mov
ret
pop
fdiv
pop
in
dec
das
lock
push
xor
xorb
lock
mov
push
icebp
inc
dec
fidivrl
xor
in
mov
xchg
jnp
ljmp
push
sbb
xchg
ds
inc
fs
adc
mov
lock
dec
rcrb
icebp
ja
mov
pushf
ret
imul
inc
or
jns
lods
jo
inc
loopne
jb
das
adc
add
jnp
icebp
cmp
inc
outsb
ss
lock
and
mov
xchg
sti
repnz
mov
insb
rorb
push
pusha
lock
out
rorb
jbe
push
lock
mov
imull
cwtl
jge
movmskps
mov
lock
inc
mov
popf
xchg
lock
insl
xor
push
mov
test
popf
cmp
push
out
mov
ret
inc
lcall
and
lock
cs
or
push
mov
scas
fildl
jge
loop
lock
test
lock
loope,pt
inc
outsl
das
sub
adc
fnstcw
dec
repnz
xchg
fs
add
jo
pusha
jb
xchg
lock
aaa
mov
mov
xchg
lock
es
imul
rclb
lock
or
in
mov
lock
mov
cmp
mov
cmovl
out
sub
inc
and
outsb
hlt
mov
mov
xor
scas
and
repz
mov
mov
test
ljmp
loop
push
lock
mov
pop
cmp
jge
lock
arpl
jb
mov
cmp
test
mov
testb
pop
dec
loop
adc
xor
xor
cltd
cmovge
nop
dec
push
cld
pop
mov
js
adc
lahf
adc
iret
aam
in
stos
inc
pop
test
xor
sub
and
or
push
dec
or
test
xor
xchg
jo
pop
xchg
ret
add
inc
jle
icebp
xor
cmp
push
xor
mov
xchg
mov
loop
or
push
ljmp
div
ds
jmp
ss
rol
icebp
and
leave
xor
icebp
das
xchg
aaa
pop
in
jg
lock
popf
jne
sub
lock
roll
xor
lcall
xor
shrb
and
pop
cmp
sbb
add
paddsb
out
lock
test
pop
mov
or
lret
xchg
aaa
mov
inc
cmp
loope
jp
adc
or
xor
into
arpl
mov
lods
sbb
sbb
jno
push
xor
mov
sub
pop
sub
push
fwait
lret
mov
jl
lock
mov
and
pop
jns
cmp
or
xchg
dec
gs
cmp
mov
add
jne
xor
jns
sahf
push
sub
call
aad
sub
icebp
xor
ja
adc
in
push
mov
in
sub
lahf
pop
pop
enter
lock
jbe
xchg
pop
or
jne
rcrb
push
stos
js
pop
shlb
xlat
call
addr16
les
insl
jmp
xor
jge
fidivl
and
lea
lock
adc
repnz
repnz
nop
inc
test
xor
pop
mov
fisubs
and
cmp
mov
sbb
ss
loope
jecxz
pop
enter
lock
gs
add
mov
divl
dec
lret
push
lock
dec
jns
lock
repz
lock
es
xor
xchg
loopne
repnz
jl
xchg
xor
mov
jg
mov
lahf
lock
enter
or
out
insl
pop
add
lds
lock
fdivrl
push
and
vmptrld
mov
push
mov
inc
icebp
sbb
cs
push
gs
shr
je
enter
orps
test
decb
fs
scas
hlt
jmp
pushf
roll
popa
dec
xor
pop
rorl
jp
sub
mov
sbbb
mov
xchg
icebp
stc
movsb
imul
pusha
outsl
iret
repnz
arpl
pop
imul
jmp
dec
push
cli
add
mov
lock
xor
lock
mov
shl
lret
xchg
lock
cmp
lock
push
cmp
pop
loopne
addr16
add
insl
lret
or
lock
jecxz
xchg
mov
lea
cmp
push
pushf
adc
xor
shlb
xchg
xchg
mov
adc
lock
pop
or
and
hlt
pop
pop
fnsave
lock
shl
aam
movsb
push
push
xor
jo
arpl
out
loop
icebp
xchg
mov
xchg
iret
loopne
aad
repz
aas
jge
enter
movd
imul
and
cwtl
adc
sub
ljmp
cwtl
and
lock
adc
inc
xchg
mov
rclb
ja
push
loop
icebp
pushf
jmp
lret
data16
cmp
leave
jp
mov
mov
sbb
icebp
mov
and
sbb
femms
fdivs
mov
shlb
xor
mov
push
mov
jmp
inc
pop
repz
in
mov
and
in
jmp
cmpsb
mov
jo
in
lock
outsl
jbe
cmp
ss
dec
scas
dec
xchg
loop
lock
in
pop
xor
movsb
clc
or
mov
xor
adc
sbb
lds
lock
js
add
pop
cmp
je
dec
cmc
lock
imul
sahf
subps
in
push
jle
lock
xor
pop
jp
loope
ss
pop
sub
add
inc
lock
addr16
mov
rol
dec
repz
fucomp
mov
cwtl
shlb
adc
push
push
ficoms
dec
ret
in
jl
mov
pop
mov
ss
fdivl
shrb
mov
lock
inc
jnp
cmp
outsl
das
cvtps2pd
dec
ds
jo
and
mov
sbb
jbe
xchg
cwtl
fnsave
test
bnd
sbb
out
push
daa
push
push
addb
mov
imul
scas
xchg
push
inc
icebp
sub
lds
cmp
xchg
jecxz
push
dec
int
mov
sbb
aaa
lahf
jp
rorb
pop
mov
je
ret
sbb
xor
or
cmpsb
jo
das
jno
icebp
loope
xchg
sbb
pusha
lock
iret
push
out
decl
push
ret
adc
adc
mov
lock
mov
adc
test
lock
mov
jns
mov
adc
cli
jle
pop
add
and
daa
sbb
push
in
mov
test
jmp
jl
inc
jg
xor
pop
fimull
and
adc
lock
push
sbb
cmp
sbb
loop
repnz
add
bound
push
pop
lahf
shl
fwait
and
or
fldl
cmp
js
sub
dec
in
lock
fnstsw
pop
icebp
lds
xor
mov
shl
sbbl
out
aas
lock
dec
xchg
xor
mov
push
adc
repnz
cld
sub
daa
dec
clc
int3
jo
push
cmp
dec
dec
loope
loopne
lock
xlat
add
lods
mov
test
add
lock
or
push
mov
lock
cmp
icebp
insl
aas
nop
jmp
cmc
lret
fbld
fisubrs
jo
mov
stos
sub
leave
mov
out
sub
int
aas
sbb
lock
cmpsb
iret
mov
mov
dec
xor
jle
imull
call
mov
mov
icebp
dec
mov
fs
es
loope
pop
or
repnz
jne
xchg
inc
xor
mov
inc
ret
popa
in
jns
lock
je
enter
pop
ret
out
lock
jne
jns
and
mov
repz
adcb
fimuls
aas
mov
filds
lock
lods
and
cs
lock
and
pop
and
adc
mov
rsqrtps
mov
int
lock
mov
andl
fdiv
hlt
lods
xor
lahf
outsl
test
loop
dec
mov
xchg
pop
xor
mov
pop
loopne
rcrb
aas
mov
ret
movsl
add
cmp
bound
ficomps
mov
js
sbb
sub
movsl
repz
jbe
mov
fbld
lock
frstor
mov
inc
xor
aaa
mov
clc
fsubs
jge
lock
repnz
add
insb
jle
or
mov
fldz
pop
movsb
repz
dec
aaa
cmpsb
shrl
lret
cli
scas
or
lcall
dec
xchg
enter
adc
cmp
or
aaa
and
lret
clc
mov
adc
lods
cmp
and
lock
mov
or
jns
mov
mov
loopne
ficomps
andb
and
inc
sbb
add
mull
jle
ret
inc
xchg
icebp
xor
shrb
shlb
mov
mov
sub
xchg
mov
cld
pop
cli
add
push
mov
js
lock
popf
mov
divb
aad
repnz
jnp
mov
insb
xchg
ja
mov
inc
mov
or
imull
lods
mov
xchg
div
push
filds
fisubrl
aad
pop
mov
cmp
es
dec
lock
pop
or
test
or
stc
cmp
mov
aaa
int
jno
mov
dec
mov
ret
dec
jecxz
xchg
adc
popa
adc
and
push
push
cli
xor
lock
jmp
cmpb
cmp
and
cltd
mov
js
or
pusha
mov
lods
push
add
mov
setae
and
xchg
lock
or
leave
lock
cmp
lock
enter
mov
insb
aaa
ljmp
jae
jo
xor
push
pusha
aad
mov
and
nop
dec
cltd
xor
xor
test
test
ret
xor
insb
xlat
cmp
jo
ljmp
incb
inc
inc
in
enter
lock
mov
xchg
lahf
divl
stos
int3
cmp
xor
icebp
lds
fcompl
mov
pop
jbe
daa
test
and
add
scas
aaa
xor
das
jo
aad
pop
jle
xor
rorl
inc
xchg
int
mov
in
movsl
pop
cmp
out
jp
mov
cmp
rcr
pop
mov
js
adc
lock
stos
jp
jae
or
push
mov
movsb
loopne
loop
mov
lock
je
pop
push
xchg
popa
push
aaa
push
mov
xor
bound
push
cmpsb
cwtl
push
stc
and
outsb
cmc
int
pop
out
enter
icebp
mov
mov
adc
jno
pushf
icebp
aas
or
push
mov
and
popf
test
test
jecxz
jg
xchg
push
ficoml
lock
in
fdivrs
repz
pop
dec
ja
mov
mov
es
nop
add
scas
lock
pavgw
fbstp
lock
push
shl
popw
sbb
in
adc
leave
cmp
push
lock
push
lock
inc
andl
out
shll
ja
pusha
sbb
mov
mov
stos
pop
fadd
mov
in
pop
pop
dec
xor
ret
add
xchg
js
loopne
lret
push
mov
xlat
int3
lock
iret
push
sbb
add
repnz
sti
aaa
add
xor
adc
sbb
faddl
cmp
in
in
lock
in
mov
dec
cli
clc
push
jg
ss
lock
lock
add
loope
gs
sbb
dec
xor
push
repnz
sbb
pop
cmpb
jb
and
test
or
inc
mov
sbb
or
repz
and
lds
outsb
pusha
pop
lock
std
mov
cmp
xor
push
inc
es
xor
mov
aam
je
fwait
addr16
sar
add
jns
imul
stc
jle
lock
ret
enter
pop
xchg
or
mov
cmp
wrmsr
fildll
rol
jo
xor
and
loop
lock
and
imul
ret
add
div
mov
sbbl
sub
hlt
mov
pop
fdivl
mov
popf
in
mov
pop
cwtl
test
aam
and
call
mov
mov
xchg
add
mov
xchg
bound
test
inc
push
icebp
aad
or
jmp
xchg
mov
add
idivl
fdivrp
cmp
insl
mov
lock
inc
and
repnz
sahf
lcall
fstl
adc
pop
divl
mov
jo
xchg
cmp
out
insl
lahf
lret
fisttpll
sbb
sbb
cmp
cmp
pushf
aas
sub
pop
lcall
repnz
test
xlat
cmp
adc
repz
or
jge
pop
fwait
pop
out
rclb
sbb
ror
dec
std
xor
jmpw
xchg
and
jno
leave
lock
mov
and
mov
xor
lret
dec
lock
xor
adc
lock
scas
test
jg
cmc
push
push
push
cmpsl
dec
mov
lock
scas
call
lock
sub
in
xor
jge
mov
cld
subb
push
lret
inc
dec
and
sbb
mov
in
mov
xor
sbb
rol
cltd
fnop
les
mov
ja
dec
vpshad
push
and
add
sub
fstpt
push
cwtl
add
xor
arpl
jl
xor
or
add
or
lret
in
jo
sbb
jo
shr
xor
mov
mov
lock
fdivp
repz
popa
xor
ja
jno
and
jns
lock
lods
xor
cmp
mov
lds
mov
mov
fs
xor
clts
dec
sbb
iret
shrb
movsb
and
sti
lret
mov
mov
addb
repz
adc
enter
icebp
pop
cli
sub
inc
add
outsl
mov
cmpsb
add
pop
dec
cltd
clc
pop
loope
lock
push
rcrb
int3
std
and
ljmp
idivb
xor
loop
push
insl
push
push
sub
lods
lock
lahf
cltd
push
inc
popa
jb
mov
cmp
pop
ret
shlb
flds
or
fwait
mull
jns
lock
lea
loop
icebp
shll
xor
or
insb
lock
add
push
xor
and
lret
or
ss
daa
cmpsl
lock
xchg
sub
mov
mov
add
out
add
lret
rorb
pop
out
lock
int
sub
jecxz
pop
push
push
xchg
inc
mov
sbb
jo
adc
pop
fs
in
push
bound
mov
shll
fcoml
in
pop
test
into
mov
cmp
pop
push
push
leave
fcmovnb
xor
inc
outsl
sbb
push
lock
es
lret
cmc
pop
add
test
sbb
pop
mov
insl
pushf
xchg
adc
out
mov
and
adc
mov
push
push
test
loop
inc
adc
icebp
cmpsl
jg
cs
fcmovb
into
rorb
out
in
lock
sbb
pop
or
iret
push
jae
enter
divl
adc
xlat
push
push
fwait
lock
jb
sahf
mov
cmc
push
mov
adcb
or
push
xor
inc
inc
clc
outsl
adc
push
in
xchg
ss
and
jo
aam
andl
xor
adc
out
mov
mov
lret
pop
shl
adc
repnz
aam
sub
xorl
sbb
lds
nop
dec
dec
xor
negl
sti
lock
jb
jmp
cmp
stos
out
push
or
subb
or
cltd
nop
pop
mov
mov
ljmp
or
push
lock
aaa
sar
cmp
pop
add
pusha
or
mov
cld
jne
xchg
pop
repnz
lock
gs
cmpsl
addr16
and
subb
dec
loopne
lock
jecxz
test
xor
lock
cwtl
mov
and
jo
adc
int3
lcall
out
div
mov
mov
push
lea
sbb
std
aam
sub
ja
push
pop
shl
xor
jge
jo
faddl
jns
xor
insb
aas
andl
lock
arpl
aaa
adcl
jae
mov
jmp
or
fcomip
xchg
fisubs
and
fwait
dec
sbb
loop
sub
push
xor
dec
xchg
xchg
xor
lret
sub
hlt
popa
rorb
out
mov
ret
ds
test
cmp
push
sbb
sub
imul
aas
push
xchg
outsb
out
sbb
mov
xor
flds
pop
cmp
mov
lock
cmpsb
test
jbe
mov
insl
sbbl
jmp
mov
lcall
jg
pop
stos
fisttpll
inc
mov
cmp
lock
das
cld
mov
lock
divb
mov
clc
pop
xchg
mov
neg
outsb
imul
pushf
and
rorb
icebp
cli
jp
xchg
scas
lock
lods
adc
cmp
cmp
lock
adc
pop
lock
rcrl
jmp
lock
cmp
push
lock
xchg
sbb
lock
fidivl
adc
lods
pop
mull
cli
adc
and
add
je
out
and
subb
mov
inc
cmpsl
lock
cmp
xor
xor
or
fcmovnbe
popa
inc
jno
jmp
adcb
popa
or
in
fidivrs
repz
mov
mov
jne
repnz
outsl
rcll
mov
mov
scas
xor
popf
pop
leave
sbb
enter
movhps
push
mov
mov
lods
lock
xor
js
jl
jmp
add
fs
jp
and
pop
icebp
in
cmp
sbb
sub
loope
outsl
enter
or
cmp
sahf
aaa
fists
pop
and
or
cmpps
daa
pop
out
adc
lock
outsl
lds
mov
jmp
push
pop
imul
mov
cs
sti
repnz
aas
faddl
mov
mov
mov
ror
clc
cbtw
inc
lock
cld
xor
scas
lds
mull
rcr
xor
int3
xor
jo
ljmp
jg
mov
xchg
pop
push
mov
xor
xor
cltd
or
cld
jnp
sbb
stos
lock
cmp
ret
or
outsb
add
sahf
mov
mov
pop
sbb
mov
lods
hlt
pusha
cs
inc
repz
xor
mov
adc
lock
enter
imul
or
adc
ds
jns
mov
mov
lock
sbb
inc
lock
xor
cmp
dec
inc
or
cmp
xor
push
pop
pop
xor
xor
push
inc
or
pop
push
ds
xor
lds
icebp
rcrb
fdiv
repnz
mov
fdivr
lock
mov
in
lock
xor
lock
shlb
cwtl
push
dec
scas
inc
mov
mov
insb
call
les
adc
divb
pop
push
int3
and
adc
pop
pop
popf
jnp
mov
test
xor
sub
test
lock
jmp
push
and
daa
repz
pop
push
or
cwtl
in
sbb
add
push
mov
and
add
dec
scas
fwait
pusha
shl
addr16
sbb
lcall
ds
stos
xor
sub
ja
pop
les
orb
push
inc
notb
gs
xor
push
outsl
push
xor
cwtl
xor
addb
repz
les
xor
adc
repnz
push
aad
fs
adc
ret
push
and
fstl
sub
sbb
xorl
xlat
add
out
in
dec
add
push
lock
stc
je
lock
xor
js
add
push
repnz
call
xor
out
icebp
fisubs
jo
cmp
shl
sub
xor
push
lock
loope
addr16
adc
and
jbe
ja
lock
mov
mov
cmp
mov
adc
and
mov
add
lock
cmpsl
outsl
repz
inc
int3
pop
and
pushf
sub
dec
dec
inc
jo
mov
not
xchg
mov
lock
out
mov
add
nop
js
insb
lock
jo
or
and
jbe
xchg
aad
mov
mov
andb
jle
mov
repnz
jno
jbe
xor
jg
add
push
push
rep
mov
xchg
or
outsb
cmp
std
lock
or
dec
shll
or
movsb
fldpi
pop
jg
rcrl
sub
mov
cs
xlat
xchg
nop
dec
scas
inc
out
jg
rcll
lock
and
jmp
in
mov
add
mov
fldl
adc
pop
lock
sub
sbb
xchg
fsub
std
lock
out
cmpsb
pop
add
lods
lock
stos
xor
icebp
sarb
adc
xchg
jecxz
xchg
dec
repnz
test
setl
xlat
pop
stc
subl
rol
jl
adc
mov
jo
and
or
and
aad
jns
loope
xor
lock
xor
dec
dec
xor
arpl
leave
xchg
xor
mov
mov
sbb
sahf
xor
jnp
jno
outsb
lock
sbb
jl
mov
and
pop
out
mov
add
cmp
sarl
cld
pusha
sub
lock
shlb
xlat
push
push
xor
inc
mov
push
data16
outsb
popf
mov
fdivs
fdivrl
lock
test
ss
sbb
inc
enter
mov
add
inc
pop
xor
mov
fldt
inc
test
xchg
jl
xchg
pop
adc
xchg
mov
stos
loopne
or
adc
sbb
jo
push
cmp
cmc
lock
nop
lock
mov
jno
mov
movsb
sbb
lock
hlt
std
xor
lock
pop
imul
lea
and
xor
data16
xchg
pushl
imul
stos
lock
xchg
loope
in
fdiv
pop
and
popf
lock
push
xor
add
sub
xchg
cmp
inc
mov
iret
mov
scas
xor
add
dec
jmp
seto
lret
or
sub
lock
inc
push
xchg
jl
shlb
punpckhbw
das
mov
xchg
cmp
cltd
leave
lock
jb
int3
pop
lock
ret
clc
adc
popf
adc
lock
pushf
test
ret
xchg
pop
lock
cmp
pusha
push
dec
lret
lahf
cmp
sarb
lock
inc
in
xchg
mov
je
xor
or
sti
push
inc
mov
clc
push
icebp
test
inc
add
lock
imul
lock
mov
aad
sbb
std
push
aas
xor
mov
inc
dec
push
jp
jb
cvttps2pi
mov
dec
jge
wrmsr
xor
sbbb
lahf
xchg
xor
jecxz
sub
repz
enter
or
addb
ljmp
js
push
lcall
or
stos
mov
cmp
cmp
out
mov
jo
push
mov
movups
add
jp
sub
and
mov
shl
sarb
idivl
test
and
xor
xchg
or
mov
in
lock
mov
adc
icebp
enter
push
inc
int
out
repz
enter
lock
shr
fst
sub
andb
inc
push
shlb
cmp
scas
adc
out
push
addr16
xor
enter
pop
dec
lock
out
ret
cs
lock
andl
xchg
repnz
subb
pop
test
les
nop
mov
popa
cld
add
dec
sbb
sahf
js
xor
mov
icebp
sarl
cmp
cmp
lahf
jnp
bnd
aas
sbb
xchg
jns
cmp
jl
nop
aaa
and
rorb
push
faddp
push
mov
sub
lock
pop
loope
mov
cmpsb
pop
inc
lock
xor
pop
addr16
push
cmp
xorb
repz
aaa
call
inc
sbb
movb
lock
pop
repz
mov
pop
daa
cs
mov
adc
inc
arpl
scas
or
jo
popa
xchg
or
lock
out
jno
cld
cmp
andb
insb
mov
xlat
jmp
jo
sbb
ja
xchg
add
repz
scas
sub
movsl
cmpsb
mov
int
ss
jmp
pop
or
lock
dec
loop
out
repz
add
push
jo
lock
adc
push
inc
hlt
dec
jbe
inc
rep
mov
pop
enter
or
add
enter
sub
pop
fmul
cmp
mov
mov
xchg
pop
lock
inc
aaa
mov
jns
icebp
mov
push
jo
sbb
nop
lock
dec
inc
pop
insl
jbe
add
js
sub
inc
repnz
scas
sbb
enter
repnz
stos
pop
enter
lock
pushf
fadds
sbb
cmp
dec
inc
enter
test
bsf
mov
inc
fistpll
pop
pusha
jg
lock
imul
insl
mov
lock
cmpsl
jmp
lahf
xchg
ret
or
mov
std
or
jge
cmp
cmc
out
xor
lods
sub
or
xor
sbb
arpl
fldt
mov
fs
mov
lock
mov
xchg
outsb
imul
pop
lcall
in
jl
mov
pop
lock
ja
xorl
f2xm1
mov
sub
pop
mov
cld
xor
push
sub
fdivl
cmp
data16
or
ss
pop
fbld
shl
mov
xor
lret
test
lahf
jo
or
pop
push
pop
stos
pop
xchg
and
inc
inc
icebp
lods
mov
in
jo
sub
inc
pop
stc
add
pop
lock
lock
mov
pusha
in
xor
into
sbb
xor
lock
test
lret
ss
icebp
cmp
loope
xchg
push
pusha
dec
mov
into
movsb
out
pusha
pop
ret
sbb
adc
lock
mov
pusha
std
test
push
adc
popa
dec
lock
ret
sbb
push
or
inc
dec
jbe
mov
movsb
fs
repz
addl
push
unpckhps
fmull
int3
out
push
sub
aam
inc
stos
cli
push
or
mov
lock
push
xchg
clc
int3
jo
fwait
ljmp
xchg
pop
lea
cmc
lock
imulb
cmp
adc
stos
cltd
inc
fisubs
mov
xor
jmp
push
test
popa
add
adc
mov
lret
and
fmuls
xlat
pop
pop
jmp
sub
in
roll
mov
lock
ss
loop
lock
test
mov
or
call
xor
daa
popa
outsl
pop
inc
or
and
mov
hlt
xlat
scas
and
lock
enter
mov
aad
mov
mul
lock
repnz
insl
lock
jp
sbb
xchg
xor
push
stos
or
xor
pop
and
xchg
lret
xchg
jae
inc
loope
cmpsb
inc
in
faddl
cmp
adc
sbbb
lock
pop
fcoms
cs
mov
and
in
sub
adcl
cmc
out
fcomp
mov
mov
ljmp
push
icebp
rcrl
nop
and
je
or
divb
test
faddl
loope
cmpsl
jg
inc
fcmovnu
jo
push
inc
into
xchg
dec
lods
jo
xchg
out
or
test
xchg
jo
jl
mov
and
adc
aas
lea
fwait
xor
jno
mov
cmp
roll
fisttpll
lahf
jno
adc
hlt
fadds
sbb
clc
lock
mov
ljmp
xor
pop
inc
cmp
adc
cli
and
shr
cmp
pop
dec
inc
je
lea
test
jae
inc
lret
int3
out
cmpl
lock
push
mov
pop
pusha
jns
int3
cmp
ljmp
scas
mov
adc
push
adc
stc
inc
sbb
hlt
jbe
js
jne
adc
movsb
jecxz
push
push
adc
xchg
rclb
cwtl
xchg
pop
dec
mov
mov
mov
fsubrs
shlb
outsl
scas
ds
gs
xchg
sbb
cmp
cmp
mov
out
push
lods
sarl
hlt
inc
lock
sub
js
lock
dec
cmp
lcall
mov
shlb
mov
sahf
push
push
loop
inc
and
lret
jae
add
jg
mov
scas
and
lods
mov
les
lock
add
jecxz
cmp
fildll
and
inc
cmp
fwait
mov
lock
sub
pop
orb
lock
jns
lock
testl
mov
push
and
fstpt
sbb
ret
mov
arpl
repz
flds
pop
xchg
test
lock
xlat
pushf
add
mov
xor
lock
ret
push
iret
int3
sub
pop
mov
shl
mov
mov
rdrand
jge
outsb
mov
adc
fisttpl
xchg
pop
push
lcall
sbb
cltd
lock
js
gs
lock
fildll
sbb
call
lds
mov
insb
pop
idivl
cld
lock
jb
mov
lock
sub
sbb
scas
xchg
lea
pop
mov
add
mov
mov
das
lock
sbb
mov
xor
lret
jo
jp
movsl
mov
retw
mov
aas
push
lock
cmp
lock
jbe
mov
sub
stos
loop
mov
xor
xor
mov
xor
xchg
jne
cmp
and
das
cld
inc
nop
arpl
lock
negl
cs
movsb
ljmp
ds
lock
xor
sub
lods
stos
cmp
or
movsl
xchg
jo
or
inc
into
adc
rcll
xor
imul
pop
inc
lock
and
xchg
add
adc
aam
lock
jge
xor
mov
dec
lods
xchg
loop
icebp
scas
adc
out
mov
in
sbb
ret
xchg
add
cmovbe
mov
mov
xchg
leave
stos
in
and
dec
or
lock
cli
lock
dec
fstps
rorb
lock
cmp
lock
fucom
mov
add
in
cli
or
xor
lock
movsb
shll
lock
mov
or
mov
cli
repz
aam
jg
enter
cmova
mov
jp
inc
adc
lock
jmp
mov
mov
and
neg
icebp
sbb
jb
cmp
in
aad
repnz
ret
les
shrl
lock
movsl
cmpsl
mov
or
lock
ret
ja
sti
or
fidivrl
xchg
cmp
repz
test
add
cmp
inc
int3
lock
dec
mov
xchg
cmp
jnp
lock
pop
flds
imul
aam
aaa
movsl
push
popa
in
lods
push
mov
ds
jb
scas
or
lock
push
scas
cmpsl
push
icebp
sub
insb
push
xchg
clc
arpl
lock
mov
sarb
dec
jns
int3
and
and
lahf
icebp
cmovo
es
add
xchg
or
lock
pop
lock
pop
std
xchg
or
push
je
jo
jp,pn
mov
icebp
sbb
sbb
push
adc
xchg
mov
jb
lock
mov
xor
mov
int
mov
mov
lock
xchg
xor
xor
xor
mov
aad
test
xchg
lock
mov
dec
gs
aam
ljmp
push
mov
fistpl
sbb
xchg
mov
mov
mov
lahf
sbb
add
mov
repz
cli
lret
sti
loopne
mov
mov
enter
movd
inc
adc
lock
insb
mov
in
lock
jnp
add
cmp
dec
addb
dec
orb
pop
lock
scas
add
cmp
inc
clc
shl
mov
insl
jns
add
pushf
lock
popf
or
in
xor
imul
es
inc
test
pop
push
add
lahf
or
mov
ss
int3
inc
push
icebp
adc
or
adc
jne
cltd
pop
and
jo
cli
mov
sahf
lock
negl
push
ljmp
aaa
mov
add
push
push
in
hlt
xor
pop
cli
out
lock
mov
clc
inc
dec
jns
xorb
jge
aaa
rclb
cmpsb
mov
push
and
jg
lock
jne
push
cltd
adc
mov
sbbl
cli
imul
popf
loop
rcrb
push
jne
and
test
mov
mov
cmp
icebp
mov
cld
movsb
jne
adc
dec
repz
adc
xor
xchg
add
lea
lock
cmp
jne
mov
lock
aas
outsb
call
cmp
insl
push
addl
mov
mov
gs
sub
lock
adc
pop
jae
movsb
adc
dec
push
js
adc
jnp
push
and
lock
xchg
mov
ret
fbstp
sbb
cmp
jnp
dec
lea
jns
mov
adc
inc
sahf
mov
lds
int
lock
test
lcall
icebp
addr16
imul
paddsw
mov
mov
push
lods
je
push
xor
lock
jb
lock
scas
adc
xchg
fld
sbb
or
cmovae
xchg
loopne
scas
cmp
xor
jns
unpcklps
or
sbb
cmp
mov
inc
mov
outsb
jg
pop
call
jne
bound
push
ljmp
inc
jp
shlb
jnp
addr16
pop
sbb
mov
mov
adc
insb
and
cs
rclb
inc
cli
xchg
sub
andb
mov
inc
dec
mov
lock
test
cmp
loop
cmc
enter
xchg
pusha
xorb
movsb
mov
dec
jbe
lea
cli
sbb
cmpsl
lock
inc
mov
or
push
jp
mov
mov
mov
lock
lea
mov
daa
inc
in
lock
mov
icebp
rcll
xor
pop
sti
or
jp
lock
push
testl
or
es
hlt
mov
jae
mov
push
and
popf
push
cmpsb
pop
sbb
out
shl
cmp
lock
inc
lock
sub
add
jecxz
fisttpl
in
lcall
arpl
lock
sub
mov
jae
push
pop
push
pop
pop
cs
xchg
mov
adc
and
repz
js
xchg
addr16
lock
push
into
lock
jbe
pusha
lea
push
movsb
xchg
fs
xchg
xor
jne
in
adc
std
repz
xor
enter
jp
hlt
stos
sbb
add
add
cmc
adc
xor
sti
push
sbb
ds
movsb
lock
sub
movsl
xchg
mov
lock
pop
mov
lds
test
cld
sahf
push
lea
and
mov
pop
fs
mov
jne
repz
jno
icebp
push
mov
jp
addl
pop
out
addl
pop
push
loopne
stos
repz
sti
sahf
add
xor
icebp
ret
hlt
mov
jns
das
cld
jbe
lock
add
lret
lock
push
xor
icebp
or
lods
in
jo
jl
ss
cmc
out
call
jge
jo
xchg
fildl
lock
testb
or
clc
xchg
in
fadds
xchg
inc
pop
test
xlat
or
popa
inc
lock
fists
int3
je
mov
jg
jp
mov
cmp
lock
arpl
sub
jns
lods
inc
adc
or
cmc
jmp
je
loop
movsb
mulb
lock
lcall
and
mov
jns
pushf
adc
lock
mov
dec
push
lock
mov
aad
lds
bound
mov
xchg
repz
fdiv
jmp
aaa
cmpl
lock
inc
aas
dec
ljmp
mov
scas
push
cmpsl
fsubs
or
push
mov
or
negl
add
add
movq
push
adc
push
dec
shll
lock
sbb
lock
jne
rclb
xor
jnp
push
inc
lock
mov
xchg
mov
mov
jne
lock
fwait
push
repz
fstl
or
fidivs
xor
arpl
cmpsb
data16
inc
or
inc
fs
hlt
lcall
in
or
or
lock
lods
lcall
push
xchg
adc
xor
inc
mov
dec
jns
data16
pop
divl
jecxz
lock
sub
fdivs
push
das
ljmp
xchg
bnd
cmp
push
xor
sahf
fldcw
pushf
push
xlat
sar
jbe
das
adc
add
icebp
daa
jne
cmp
test
icebp
mov
xor
adc
mov
aam
xchg
repz
bound
and
enter
lock
push
lods
in
inc
fnsave
stc
cmp
int3
jl
mov
and
xor
lock
mov
mov
push
dec
rclb
pop
lret
scas
xchg
lock
jbe
subb
loopne
pop
loope
cmp
adc
cmc
les
cli
dec
pop
mov
insl
lock
nop
js
in
or
mov
sub
or
leave
out
scas
lods
in
lock
ja
pop
sarl
pop
dec
mov
dec
adc
sbb
xor
lock
imul
out
dec
mov
jns
lock
and
cmp
dec
test
jb
rorb
out
pusha
jno
lock
insl
or
fdivs
lock
pop
xchg
rolb
and
and
adc
je
cs
or
rcll
lock
mov
mov
mov
lock
push
mov
stos
leave
xor
pop
movsb
cmp
jne
xchg
ja
push
in
mov
jmp
xor
xchg
jo
jbe
and
jo
aaa
repz
nop
fidivrl
addr16
rclb
repz
adcb
mov
xor
out
cmpb
jle
loopne
mov
adc
popf
push
mov
js
add
loopne
das
cmpsl
jmp
pop
inc
xlat
and
push
sub
jp
test
call
stc
mov
subl
dec
lock
clc
roll
insl
xchg
pop
gs
sub
lods
je
push
jo
push
push
adc
and
sti
adc
ljmp
xor
lods
mov
loopne
xchg
mov
push
lcall
mov
icebp
jns
xchg
pop
and
int3
adc
lock
lds
pop
lock
insl
inc
int
fnstenv
add
pusha
stos
out
aaa
bound
lock
inc
das
sti
inc
movsl
fwait
lock
test
int3
clc
lcall
mov
pop
sbb
jmp
jle
lock
pop
xor
adc
inc
popa
mov
xor
lock
test
xchg
lock
loop
bnd
outsb
cmpsb
sbb
rorb
rcrb
adc
xchg
cld
ljmp
lock
jno
push
fadd
jns
push
or
adc
mov
movsl
jo
mov
rcrl
in
mov
add
dec
jp
scas
pop
ss
mov
xor
es
lock
push
outsb
fdivp
insl
jae
mov
insb
rcrb
in
lock
jl
outsb
pop
push
xchg
lock
out
dec
and
mov
rcr
mov
xor
push
notb
hlt
addb
ljmp
mov
jecxz
int3
pop
mov
sbb
mov
xchg
and
dec
adc
hlt
insb
cmpsl
xor
stc
push
or
jp
xrelease
lods
aas
fisubs
cmc
fs
enter
addr16
js
mov
daa
dec
lea
lcall
mov
mov
push
inc
adc
loope
add
inc
sahf
lock
push
popf
sub
cmp
and
ret
xor
mov
and
push
lock
add
fstpt
int3
andl
lock
popa
repz
divl
push
cli
test
scas
mov
push
stos
fnstcw
xor
pcmpeqw
popa
lock
or
pop
shr
or
mov
jne
jge
out
sbb
stos
push
test
xor
add
xor
xor
pop
and
es
into
sbb
mov
lock
cmp
pop
push
push
lock
xor
push
dec
jp
sub
arpl
sub
out
das
ret
lock
sbb
je
mov
lock
cmp
jle
ror
mov
lea
std
jbe
lock
cmp
ljmp
dec
mov
sarb
jl
lock
and
outsl
sub
or
mov
loopne
js
outsl
mov
inc
stos
jne
fwait
lock
jl
out
sub
and
hlt
popf
xchg
mov
sti
xor
daa
out
lock
lea
dec
cmc
jnp
lock
fdivr
mov
testl
ret
loopne
xlat
add
lock
inc
aad
adc
xor
lock
adc
nop
lock
outsl
decl
pop
ds
lock
xor
hlt
mov
jns
pushf
out
movsl
jbe
stc
jle
xor
and
lock
mov
jne
xchg
lcall
jns
mov
fdiv
sbb
and
mov
out
loopne
gs
cmpsb
lock
mov
mov
test
adc
sbb
fadd
repz
lods
or
shll
lock
mov
lock
test
mov
mov
sarb
xor
lock
or
cmp
or
pop
push
icebp
fistps
in
aad
dec
mov
push
jg
lock
xchg
lods
jecxz
jmp
lock
and
xor
mov
adc
add
inc
cmp
pop
cmp
data16
sti
lods
mov
or
gs
push
jo
icebp
jp
lock
lds
lea
sub
inc
clc
push
lock
aas
pop
lock
push
mov
jns
lock
pop
adc
cs
or
inc
daa
out
jnp
cmpb
repz
jne
mov
aad
lock
movsb
ja
fdiv
cmp
mov
lcall
lds
gs
or
sub
add
out
and
push
call
lock
mov
sti
jb
mov
jns
repz
pop
pop
les
add
lret
xor
sub
ljmp
mov
and
sbb
jb
and
inc
adc
lds
push
enter
and
mov
jmp
jne
loop
inc
adc
lock
jae
jp
jge
xor
xor
arpl
loopne
lock
adc
xor
push
jl
call
jne
push
icebp
rcrl
mov
mov
test
pop
xlat
xchg
lea
lock
sub
mov
push
lock
jns
mov
lock
pop
lcall
push
pop
jl
lock
rclb
lock
pop
jne
mov
cmp
loopne
imul
mov
and
mov
push
lock
adc
fildl
insl
jns
cltd
jne
cld
xchg
sbb
icebp
mov
mov
and
and
movsb
aad
jmp
xor
lock
mov
icebp
sahf
mov
or
or
aad
pushf
push
mov
stc
in
and
jbe
cmp
add
dec
ja
icebp
xor
xchg
mov
mov
pop
fbld
aad
je
jns
inc
repnz
xchg
loope
ja
bound
jae
mov
mov
dec
xchg
pop
mov
xor
shll
sti
xchg
fcmovnu
aaa
mov
xor
inc
push
cmp
in
out
sti
mov
xor
push
fdivl
int
lea
addr16
and
sub
js
inc
scas
icebp
mov
xor
cmc
stos
popa
xchg
ret
pop
mov
push
mov
xlat
lock
lods
dec
rorl
jle
cwtl
and
repz
movsb
dec
rclb
lock
and
cltd
inc
adc
repz
xchg
mov
push
test
jecxz
lock
jb
lods
mov
repnz
test
mov
loopne
in
jne
pop
xchg
sub
xchg
inc
xor
lock
pop
shlb
jae
sbb
mov
lock
lods
shl
fildll
out
mov
jns
iret
call
jae
lock
jo
and
test
cmp
jge
jne
aam
icebp
aas
dec
xchg
je
rorl
lock
insl
mov
lret
fwait
leave
lock
adc
pop
cmp
repz
test
pop
add
mov
lcall
je
loop
aaa
int
lock
or
lret
fs
sti
lock
das
jbe
cmp
aaa
jge
aaa
enter
clc
xchg
dec
jo
xchg
or
movsb
push
dec
add
iret
dec
aaa
pop
cmp
xchg
and
rorb
sbb
cmp
sbb
cmp
mov
ljmp
popa
xchg
ret
int3
lock
push
roll
and
enter
stos
cmp
daa
sbb
mov
xchg
jae
pop
xor
test
mov
jns
push
std
lock
inc
cld
jbe
inc
ret
xor
cmp
lock
stos
popl
je
shr
lock
lods
lea
sbb
jecxz
outsb
adc
cmpsb
out
lock
jns
xchg
dec
lea
adc
cmp
add
shlb
lock
mov
lock
pop
or
fildll
lock
in
push
sahf
sbb
xchg
in
push
bnd
dec
jecxz
push
mov
ss
fbstp
adc
fcmovnbe
cmp
xor
jmp
jne
fstpt
rorb
shlb
addr16
and
and
lahf
lock
jbe
push
aas
jl
dec
data16
xor
imul
jp
dec
adc
pop
fldcw
icebp
sub
lock
sbb
jne
push
pop
scas
jnp
bswap
pop
jo
adc
dec
lock
icebp
mov
and
xchg
push
cmp
push
sbb
adc
jo
jo
dec
es
xor
and
fldenv
inc
mov
mov
lock
pop
and
repnz
xchg
mov
test
insl
sub
jp
iret
dec
xchg
pop
insb
jne
and
lock
add
jl
stos
xchg
jmp
hlt
out
pop
addl
fimuls
push
notl
pop
lock
xor
mov
xor
xor
mov
ret
in
shl
test
dec
add
xchg
out
nop
repnz
add
or
out
gs
nop
or
adc
xor
sbb
loopne
dec
inc
lock
scas
xchg
and
scas
lock
lcall
push
sub
dec
mov
sub
mov
repnz
push
mov
ljmp
mov
mov
lock
sbb
mov
mov
aaa
lock
mov
adc
dec
push
jecxz
in
cmpsl
push
and
mov
movsl
mov
sti
inc
mov
jne
jne
lock
ljmp
mov
test
lock
lea
std
dec
push
call
mov
push
out
dec
push
mov
jmp
jo
cmp
fcomip
loop
cmp
std
lock
pop
and
jnp
icebp
fmuls
inc
jne
test
mov
cmp
xchg
gs
vpmacsdqh
int3
retw
xchg
sbb
gs
loopne
incb
clc
lods
rclb
fcoms
loop
lock
jmp
das
lock
xor
pushf
mov
daa
inc
shl
int3
fwait
lock
push
sbb
popf
lods
js
xchg
xor
mov
cmp
lock
popf
inc
out
mov
jae
mov
sbb
stos
lock
mov
mov
shlb
sub
lock
cli
dec
enter
adc
cmp
mov
mov
ficoms
hlt
add
adc
loop
push
mov
xorl
adc
add
addr16
jne
idivb
cs
repnz
xchg
lock
in
adc
lock
in
xchg
lods
add
repnz
inc
mov
adc
lock
test
push
in
sbb
cli
mov
adc
inc
insl
stos
push
jne
popf
or
inc
xchg
adc
int
mov
jo
lcall
lods
mov
push
daa
imul
pop
cmp
dec
stos
js
push
cld
ret
es
push
ret
lock
shlb
mov
mov
lock
cmp
adc
adc
jo
jmp
push
inc
xchg
sbbl
dec
cmpsl
shll
mov
push
cli
or
adc
jp
or
dec
shl
pop
into
aas
imul
daa
inc
imull
or
stos
fdivp
sti
jns
push
push
pop
daa
out
lock
lcall
test
insb
les
lock
fstpl
pop
nop
adc
aam
mov
and
lods
cmp
cmp
cld
jne
adc
cwtl
mov
push
cmp
ss
sub
mov
shll
aam
cmp
mov
movl
lret
dec
add
dec
mov
and
repz
cltd
add
xor
adc
in
aam
dec
sub
xchg
mov
stos
jno
mov
lock
add
clc
orb
add
jmp
lock
leave
sti
xchg
mov
push
xchg
add
jns
lock
jae
xchg
stos
dec
inc
andps
push
or
clc
ljmp
test
mov
into
stos
sbb
rorb
ss
push
jmp
imull
mov
fidivs
mov
dec
sahf
cltd
stos
repnz
enter
comiss
push
rolb
lock
andb
cwtl
lret
or
jbe
fdivr
lock
bound
lock
cmp
xchg
or
sub
in
lock
jmp
cwtl
pop
mov
dec
idiv
pop
pusha
push
lock
push
jmp
lods
sti
fucom
lock
xor
lea
ret
je
cmp
cmp
insb
push
sbb
mov
mov
dec
lock
rcrl
xor
ljmp
push
sub
scas
lock
push
dec
cmpsl
jnp
and
pop
and
cmp
punpcklbw
cmp
mov
lock
cmp
mov
mov
cmpsb
out
icebp
xor
mov
sahf
lock
sub
jl
push
xor
rclb
fmul
inc
jecxz
adc
adcl
out
mov
adc
jb
xor
jno
fsubs
fbld
scas
enter
mov
pop
mov
push
shrl
push
mov
test
jne
enter
cmp
jl
outsl
dec
lock
sbb
pop
cmp
jecxz
add
pop
loop
lock
jmp
sub
xchg
sub
lret
ret
scas
lock
sahf
loope
aaa
imul
add
push
mov
dec
lock
in
sub
lock
cmp
icebp
and
fsubl
gs
xchg
xchg
lahf
mov
movsb
aaa
fnstsw
jno
int3
lock
je
sti
in
pop
hlt
lock
adc
mov
mov
popf
xor
mov
out
xor
lock
add
xchg
stc
push
lret
imul
sub
sub
and
mov
lods
inc
inc
xor
int3
test
in
add
jne
daa
mov
xor
in
cmc
enter
dec
or
add
dec
popa
mov
pop
xchg
ret
mov
jbe
dec
arpl
int3
and
lock
adc
push
sbb
xchg
sbb
mov
sbb
mov
out
mov
addr16
js
shr
dec
lock
out
nop
in
or
inc
repz
xor
add
adc
mov
dec
in
addr16
arpl
int3
call
jne
out
push
fs
lock
jg
lea
pop
mov
cmpsl
mov
pop
jne
xlat
sti
pop
sub
pop
mov
dec
push
fsubl
sbb
cmc
adc
pushf
mov
adc
clc
lock
or
outsl
cwtl
adc
and
lds
xor
lea
popf
and
sarl
lock
rcl
add
pop
and
iret
xor
jge
outsl
bound
mov
icebp
ja
rcrb
lock
dec
mov
stos
lock
fwait
aaa
sbb
test
ja
shl
adc
mov
fdiv
push
push
xor
inc
lock
cmp
adc
pop
in
add
aam
dec
adc
add
dec
jnp
add
lock
dec
lods
bound
rorb
xchg
mov
in
jbe
lock
enter
rolb
dec
fwait
mov
movsb
cmp
and
lock
dec
mov
lock
mov
mov
lock
out
mov
popf
lock
fldt
or
add
dec
sarb
enter
test
das
shll
pop
imul
andl
jne
and
lock
mov
rcrb
cmp
or
fs
fimull
inc
ret
mov
cmp
addr16
nop
mov
xchg
sbb
xchg
push
xor
xchg
out
js
test
loopne
test
and
sub
das
lea
pusha
xor
fists
or
jle
popf
jmp
jp
mov
push
adc
mov
lock
sbb
lock
push
cmpsb
add
xchg
mov
jp
lods
push
cmp
mov
insl
mov
imul
test
jb
fxch
add
lock
pop
jo
adc
pop
inc
push
jbe
cmp
js
bound
jb
subb
mov
je
loopne
testl
cmp
pop
jbe
in
lock
stos
inc
lret
mov
lock
push
push
jae
bound
in
adc
push
pop
pop
sbb
dec
out
gs
mov
arpl
jnp
lock
xchg
adc
data16
stos
outsl
cmpsb
lock
push
mov
jne
repnz
jge
xor
es
out
adc
loopne
xor
scas
aas
mov
xorl
push
push
sub
mov
jo
xor
sarb
mov
cmpsb
cmp
xor
faddl
rclb
jo
test
data16
jbe
jo
fidivl
xchg
jo
pushf
setp
push
xor
adc
adc
xor
mov
add
mov
sti
mov
lods
pop
pop
sbb
mov
clc
or
mov
outsl
lock
lret
fidivrs
arpl
push
enter
cmpb
or
lock
jno
in
sti
inc
mov
adc
lock
mov
dec
lock
dec
cwtl
sbbl
movsb
fisttpl
outsl
loope
jl
inc
lock
scas
adc
cmp
je
in
xor
into
lock
jl
pop
gs
hlt
lock
and
cmp
lea
cmp
push
insl
inc
lds
jo
ret
mov
jb
mov
pop
lock
mov
cmpsb
punpckhdq
mov
lock
or
xchg
shl
xor
enter
cmp
outsb
or
insb
push
xor
mov
mov
js
mov
jmp
lock
cmp
call
loope
in
cmp
push
fnsave
cmp
mov
jl
cwtl
pushf
aam
xorl
shl
mov
jb
mov
xchg
outsb
adc
cmp
cmc
clc
xchg
inc
push
loopne
int
dec
cmp
dec
insl
sbb
mov
aas
adc
push
jmp
adc
cmc
and
lahf
mov
push
int3
pop
movb
and
loopne
mov
dec
cmpsl
es
pop
jns
aam
lret
jo
or
mov
mov
cmp
dec
dec
lock
imul
icebp
jns
addr16
cmp
add
pop
stos
repz
and
sbb
insb
add
jne
inc
out
lock
daa
xchg
lea
mov
lock
icebp
notb
lock
fimuls
cwtl
lret
popf
adc
repz
or
fildll
adc
and
mov
hlt
jne
push
inc
mov
addr16
adc
push
sahf
in
cbtw
lock
mov
xchg
push
or
dec
pop
pusha
pop
pop
push
js
xor
sub
lea
mov
lcall
mov
shrb
aaa
lea
inc
sti
cwtl
add
jne
pop
add
mov
push
jns
in
dec
sti
mov
pop
xchg
outsb
aam
lock
lret
incb
daa
and
je
pop
repnz
add
aam
mov
add
sarb
mov
lock
popa
fdivl
gs
lock
or
cld
imul
ja
xor
pop
pusha
sub
repz
mov
test
pop
lock
pop
inc
inc
stos
lret
pop
pop
mov
mov
in
xor
jns
sti
push
ljmp
aam
hlt
lock
lea
xor
or
js
xor
adc
pop
mov
mov
xor
and
mov
fstps
inc
push
pusha
neg
loopne
inc
lock
leave
les
mov
in
imul
pop
push
jns
ds
mov
jno
push
jp
in
xchg
lock
xchg
inc
test
pop
push
stos
inc
cmpsl
lock
in
shlb
pop
data16
lock
andb
pusha
add
les
rclb
leave
scas
repz
js
xchg
clc
sub
scas
jbe
lcall
xchg
xlat
push
mov
andl
sub
loopnew
hlt
sub
icebp
or
jmp
or
repnz
sbb
int3
mov
lock
test
push
lea
jo
push
les
mov
int3
jg
sbb
lock
test
sub
bound
jg
mov
xchg
cwtl
add
inc
pop
lock
push
cmp
push
lock
mov
xchg
lock
xchg
in
out
lock
fistpl
dec
xor
or
add
lock
sbb
jl
ss
insl
add
stos
dec
lock
hlt
test
xchg
in
and
mul
movups
mov
cmp
mov
add
and
mov
and
shrl
cmp
or
xchg
cmpsl
xor
and
xchg
mov
mov
push
out
push
int3
lods
push
push
sub
mov
add
xor
or
xor
shlb
dec
lock
icebp
jbe
sub
push
hlt
mov
bswap
imul
jo
scas
push
dec
lock
stos
loope
fs
out
fmull
cmc
shlb
dec
inc
push
xchg
adc
cmp
das
stc
sbb
add
lock
pop
jecxz
stos
iret
pusha
mov
lock
in
sbb
fists
adc
pushf
fimuls
jg
xchg
lock
les
dec
sub
xor
cmp
dec
cmpsb
frstpm(287
ds
fidivl
sbb
icebp
xor
mov
scas
push
bound
cmp
or
xchg
xor
dec
icebp
jno
aaa
jbe
pusha
sbb
mov
movsb
loopw
jae
or
dec
popa
mov
in
push
xor
leave
xlat
and
pop
ljmp
scas
dec
sbb
ss
adc
hlt
sub
push
jne
ret
and
mov
jp
popf
lock
push
jmp
into
sbb
js
push
mov
repz
arpl
cmp
fistps
lock
fidivrl
sub
repz
xor
pop
sarl
lock
ljmp
mov
inc
lock
push
push
add
stc
cmp
lock
cmp
roll
scas
fsubl
jns
lock
inc
pop
sub
cmp
lock
les
sub
lret
or
mov
clc
sub
push
push
lock
add
shll
xor
call
lock
add
and
pop
insb
mov
add
lods
mov
std
push
or
fdivrl
in
test
push
mov
pop
div
fistps
addr16
inc
hlt
push
nop
mov
adc
inc
add
push
das
popf
jnp
test
rclb
xor
jecxz
repnz
xor
xchg
jo
ja
addl
negb
sbb
inc
out
pusha
xor
ret
ja
lahf
shrb
push
mov
add
add
dec
adc
mov
lock
clc
ret
dec
dec
and
or
enter
bound
cs
out
adc
imul
dec
lock
xchg
cmp
out
mov
pushf
repnz
xor
and
xor
dec
xor
dec
pop
psubsw
mov
jle
int
xor
xor
cmc
jl
mov
icebp
in
adc
xorl
jnp
and
pop
push
cmpsl
jnp
stos
cmpl
daa
xor
ljmp
aam
inc
jo
xor
push
sahf
lock
testl
sti
inc
lock
sbb
lock
fisubrs
lock
rolb
in
aaa
inc
test
btc
mov
jae
pop
ret
lea
pushf
sbb
int
bound
repnz
test
fdivs
jbe
or
sbb
mov
lock
or
pop
pop
push
xor
push
jo
imul
jne
sbb
in
popf
pop
fimull
mov
fnsave
xchg
cltd
sub
sbb
dec
fdivrl
fwait
cld
mov
aaa
mov
push
inc
push
fisttpl
cmp
loop
repnz
sahf
add
std
push
push
sub
packssdw
dec
mov
pop
sbb
mov
adc
push
mov
imull
xor
mov
sub
out
jecxz
jge
xor
adc
in
icebp
or
mov
je
jo
add
jbe
pop
mov
ret
insl
mov
mov
inc
xchg
push
sbb
dec
in
and
loopne
cmp
and
fcmovne
mov
xchg
cmpsb
jl
js
jbe
es
xor
lock
data16
xor
cmp
pop
sbbl
push
aaa
xchg
fwait
in
sub
shrl
dec
cmp
enter
mov
andb
data16
pop
sub
pop
test
lock
mov
pushf
mov
bound
cmpb
fimull
mov
sub
lock
test
inc
dec
push
lock
mov
shl
sbb
shl
nop
cmp
jmp
sbb
push
lock
cmc
out
and
mov
xor
pop
jmp
or
pop
inc
cmp
in
dec
leave
jle
lock
sbb
jb
pop
lock
test
dec
test
jle
lock
xor
repz
sbb
pop
cwtl
jl
xchg
lock
clc
ret
xor
adc
lock
inc
sub
pop
cltd
jnp
inc
cmp
lret
xchg
mov
cmp
pop
lcall
push
cmp
push
adc
jo
daa
push
psllw
sub
jmp
in
and
sub
in
ud2
sub
inc
lahf
mov
mov
insl
mov
mov
and
xor
jle
jne
stos
cmpsb
xor
lock
pop
sbb
dec
clc
pop
stos
xor
jg
sub
cs
add
leave
lods
clc
jl
lock
shrl
cmp
iret
xor
icebp
int3
xchg
push
xor
je
fadds
or
stc
jp
jl
xor
aam
xchg
scas
add
xchg
pop
jns
lock
ss
adc
pop
fcmovnbe
in
lock
daa
mull
pop
adc
xor
icebp
or
sbb
sub
mov
mov
pop
jl
mov
lods
stos
sbb
lock
lcall
lock
inc
loop
lock
pop
sahf
xchg
lock
jno
mov
pop
lock
loop
test
and
jecxz
xchg
xchg
inc
lock
popf
jne
outsb
test
fnstenv
and
data16
sub
in
sub
pop
mov
push
dec
push
sahf
movsl
cmp
jmp
push
push
and
xor
outsl
orb
push
lock
pop
cli
addr16
dec
xor
fwait
jo
cmp
cwtl
sbb
pop
mov
rcll
jo
mov
adc
mov
das
lods
push
pop
cs
mov
iret
xor
inc
jo
cmp
ret
lock
sbb
and
mov
pusha
or
lock
inc
int
push
xchg
ja
add
cmp
xchg
mov
lcall
cwtl
gs
mov
js
aad
pop
adc
cltd
jo
pushf
and
or
lock
jno
cmp
scas
test
add
sbb
lock
adc
push
pop
xor
pop
cmovno
xchg
dec
add
sub
sub
outsb
push
test
into
xor
sbb
not
mov
shll
add
test
xor
scas
mov
lock
arpl
movsb
lock
es
sti
xor
xor
jecxz
jnp
lock
pop
dec
cmp
int3
sbb
add
adc
jl
ret
dec
cmp
aam
cs
adc
mov
add
lds
out
lock
mov
xchg
jns
lock
rcll
das
lock
jne
mov
sub
mov
cmp
pop
inc
inc
aaa
jns
mov
or
mov
jb
add
xor
inc
cmc
daa
fcomi
mov
cwtl
int
sbb
ffreep
js
repz
adc
cld
sub
mov
push
je
lock
mov
sub
inc
lock
cmpb
cld
lock
push
sbb
jns
mov
popf
xchg
cli
sub
ret
cmc
fsub
mov
mov
fistl
insl
jl
cmp
sbb
xchg
bnd
pop
lock
lods
mov
jmp
orb
addr16
xor
sahf
scas
add
mov
inc
lock
mul
mov
jb
subb
xor
mov
lock
inc
jnp
cmpsl
out
add
lock
aaa
divl
push
dec
jmp
popa
cmp
xchg
mov
ljmp
lcall
sub
mov
int3
scas
mov
push
sbb
cmp
enter
or
jecxz
sbb
imul
stos
sti
jbe
shrb
lret
or
dec
fmuls
inc
pop
sbb
subb
xchg
mov
dec
and
leave
lock
dec
inc
lock
rorl
add
dec
jb
pop
inc
fsubrl
or
adc
roll
cmpb
jb
lock
mov
or
pop
pop
into
lock
lahf
movsb
loop
hlt
nop
jecxz
sbb
pusha
mov
inc
jo
jno
cmc
lock
lods
sbbb
cmp
lock
in
ljmp
lock
inc
outsl
sub
mov
and
inc
mov
cmp
xchg
in
ret
inc
jo
addr16
lret
rcll
addb
xchg
repnz
cmp
lock
loopne
je
aad
subb
add
pop
mov
sub
rcrl
inc
lock
xor
mov
lock
hlt
leave
mov
les
adc
mov
repz
mov
sbb
mov
cld
jle
jmp
jge
cmpsb
sbb
push
inc
cmp
jo
push
mov
movsl
jmp
daa
jg
leave
push
push
push
lods
xlat
ret
lock
ja
std
mov
xor
jae
repz
mov
or
mov
iret
xor
bound
or
test
stos
jnp
andl
inc
mov
adc
jle
lret
lock
call
mov
dec
repnz
sub
rorl
dec
xchg
sub
cmp
sarb
repnz
loopne
and
in
lock
int
setae
push
icebp
sub
lock
xor
insb
cmp
lock
fsubl
pop
inc
pop
push
dec
xor
lahf
cmp
das
ret
and
notb
dec
jae
push
in
push
icebp
sbb
insl
in
int3
enter
lock
push
lret
lock
jbe
push
repz
ret
pop
mov
jge
stos
pop
inc
and
adcb
sub
cmp
pop
leave
xchg
or
pop
in
mov
lock
push
enter
fcomip
arpl
and
mov
mov
xchg
sbb
test
adc
rolb
call
jns
push
adc
add
ret
pop
lock
dec
lock
lea
lock
mov
mov
repz
outsl
jns
ror
dec
push
pushf
mov
aaa
shlb
insb
out
lea
mov
jge
test
pop
sahf
dec
lock
test
sarl
popa
lcall
push
adc
adc
test
popf
mov
push
loop
push
lcall
mov
ljmp
icebp
sub
ds
fstl
in
mov
sahf
bnd
or
in
jge
add
lret
sbb
and
cmpsl
clc
movsb
pusha
jge
lock
sbb
dec
and
lock
xchg
cmp
and
iret
das
cmp
jecxz
push
lock
jmp
dec
lock
in
xor
lock
dec
test
lret
add
lods
aaa
cli
outsb
lock
lahf
pop
pop
es
xor
xor
js
xchg
inc
aaa
push
sub
scas
mov
and
fidivs
test
sbb
lock
mov
mov
jmp
add
in
cmp
jp
fcoms
shl
dec
lcall
push
lret
cwtl
cmp
xchg
lahf
or
sbb
lock
pop
sbb
or
ret
gs
lcall
dec
xor
andb
jo
insl
shr
cvttps2pi
loope
jo
xchg
jns
repnz
lret
mov
sahf
dec
lock
push
or
fcomps
push
in
adc
xchg
gs
jg
jbe
lock
jnp
lret
mov
jne
nop
inc
mov
sbb
dec
sbb
and
cmpb
xchg
lock
mov
mov
mov
addr16
inc
mov
pop
dec
xchg
loopne
lock
lahf
daa
jo
icebp
mov
jle
cld
jp
cmp
mov
outsl
lock
jo
nop
call
mov
sbb
push
adc
mov
mov
shl
addb
mov
push
out
rclb
jbe
lock
add
repnz
xor
rolb
loope
mov
adc
testl
dec
lods
lock
cli
xchg
orb
daa
clc
jle
mov
sbb
jne
cmpsb
fbstp
mov
xor
leave
fsubs
inc
or
adc
fidivrl
inc
movsl
and
cs
dec
setp
mov
hlt
clc
aas
popa
jp
jns
jo
adc
add
loope
or
xchg
ja
mov
adc
rorb
das
sbb
daa
cwtl
sbb
icebp
jae
ja
cmpsl
pop
push
in
sbb
xchg
push
icebp
cld
add
lock
mov
mov
add
or
lock
leave
pop
xor
and
lock
pop
ja
outsl
lcall
lea
or
je
mov
mov
rep
in
cmp
nop
inc
test
pop
xchg
dec
mov
xor
push
lock
movsl
xor
aam
add
cmp
testl
fwait
jno
jo
cmp
cmp
aam
mov
mov
inc
sbb
push
cmp
shlb
pop
push
mov
mov
and
es
xor
repz
iret
or
mov
add
into
and
repz
les
sbb
mov
rcl
orl
stc
ficomps
inc
out
jnp
dec
in
out
mov
xchg
repz
popa
popf
testl
jno
hlt
sbb
in
xchg
and
in
lock
inc
add
jne
pusha
mov
repz
mov
cmp
iret
test
insl
scas
cmc
fisubrl
inc
lock
in
mov
icebp
xchg
ret
pop
call
jae
jp
repz
dec
test
inc
popa
leave
mov
std
jg
mov
push
lock
js
pop
lock
and
sub
ds
sbb
enter
dec
fdivp
add
mov
cmc
in
fcomps
loope
inc
pop
inc
pusha
push
xor
negb
mov
repz
ja
push
pusha
into
andb
test
push
cs
pop
inc
pop
inc
ficoml
sub
fnsave
mov
mull
out
cmp
mov
sub
psrad
pop
mov
pop
or
pop
hlt
xchg
push
scas
sbb
xor
cs
sarb
inc
fildl
icebp
cmp
inc
cli
hlt
sub
xchg
mov
arpl
adc
lock
inc
fbstp
mov
adc
sub
lock
cmpsl
xchg
sarl
iret
sbb
mov
add
cmpsb
mov
sub
mov
cmp
in
leave
shl
fwait
jns
test
je
icebp
mov
fldl
iret
lock
popf
and
out
leave
cli
adc
xor
jnp
pop
and
scas
lock
cld
sbb
lock
rol
sbb
pop
cmp
add
pop
loopne
mov
xchg
lcall
out
jno
mov
fnstenv
dec
sub
out
sbb
testl
cmp
jg
jge
xchg
loopne
or
out
shl
xchg
jns
icebp
shll
and
mov
push
shll
pop
sub
and
cmpsl
rolb
pop
mov
stc
psubusb
das
pusha
sbb
nop
ret
out
ja
cmp
xor
test
sbb
xor
xor
aaa
sar
lret
pop
dec
jns
lock
or
test
jo
stos
xchg
lods
ja
nop
sti
jcxz
imul
xor
mov
lock
mov
add
bsr
inc
fidivrs
orb
ret
movsl
lock
cmp
cmp
dec
aad
jecxz
test
scas
lock
or
lock
sbb
sub
ss
xchg
push
xor
fidivl
ret
fistps
cmp
jbe
outsb
xorl
sub
test
inc
sti
xor
and
cmp
and
test
int
out
frstor
lock
mov
cltd
lods
sbb
push
sub
stc
mov
cwtl
xor
cmp
rolb
cmp
les
test
cmp
xlat
or
dec
sti
mov
mov
fcomp
rclb
xchg
stc
dec
inc
test
add
out
stos
mov
xor
mov
in
mov
enter
paddq
std
arpl
sbb
mov
pop
xor
and
adc
xchg
test
loope
adc
xchg
sti
sbb
repnz
mov
jg
div
or
call
xchg
jmp
sti
repnz
xor
cmp
aam
sub
lock
cmp
rcrl
push
mov
test
sub
cmpsb
push
cmp
or
nop
adc
jne
add
lock
orb
cld
lock
test
lock
pushf
mov
mov
icebp
cs
sbb
lahf
call
push
lods
jne
xchg
xor
mov
sub
or
mulb
adc
sbb
xor
sbb
mov
loop
jge
dec
lret
pop
cmc
repz
or
inc
lock
dec
cs
xchg
lock
es
cmp
xor
jae
xor
mov
sbb
mov
cmp
das
lds
or
xor
mov
scas
in
dec
jp
jl
repnz
addr16
movsb
and
inc
in
sbb
out
ja
sub
enter
lock
xchg
sub
fldenv
pop
sub
pop
xchg
sub
popa
xor
push
out
sbb
pop
adc
add
repnz
test
add
mov
jp
jle
in
jo
ret
jb
mov
mov
daa
add
pop
int3
add
jno
fdivrl
lock
xlat
shlb
cwtl
xchg
dec
addr16
and
nop
jo
jge
adc
ret
adc
pop
add
xor
add
pop
icebp
iret
addb
inc
shr
lahf
test
push
mov
push
lock
xor
dec
jno
dec
lods
push
int
xor
xchg
mov
or
inc
jo
fsubs
scas
ja
icebp
mov
in
mov
pop
xor
jl
pusha
pop
jo
rcrb
test
in
cmp
repnz
mov
mov
test
xor
add
cmp
pop
ja
xchg
and
cmpsb
movsl
fisubrs
pop
xchg
popa
dec
mov
test
xchg
dec
or
hlt
sbb
xor
or
xorps
aaa
jle
sub
or
pusha
mov
mov
bsr
int3
shll
dec
mov
lock
ret
pop
or
popa
pop
sti
jbe
mov
or
push
sbb
iret
dec
or
dec
sub
adc
mov
add
xor
or
les
mov
lock
movsb
movsl
lock
push
je
xor
jle
pop
adc
dec
lock
mov
and
daa
repnz
adcl
jns
scas
fcomip
out
repz
xor
fcmovbe
dec
or
cld
jo
enter
pop
lock
fadd
push
xor
and
sahf
inc
lcall
jb
es
out
xchg
aas
ss
movsl
clc
mov
push
iret
xor
repnz
jmp
mov
arpl
or
fwait
lock
jge
push
mov
mov
shrb
rol
sar
cmp
and
fnstsw
pusha
xor
mov
or
roll
mov
lock
sbb
repz
push
lea
rcr
in
push
push
cmp
xchg
inc
push
stos
lret
jne
inc
aaa
lea
or
mov
lock
ror
dec
push
scas
call
mul
out
cmp
testl
jo
push
cltd
mov
dec
xor
push
lret
mov
pusha
mov
sub
lock
sti
insb
xor
and
mov
mov
aam
outsb
push
scas
bound
mov
or
add
adc
mov
roll
loop
hlt
add
bnd
imul
call
mov
or
pop
and
push
in
ja
dec
or
jo
popf
in
fstl
fdivs
shlb
dec
cmp
in
jo
jmp
sbb
xor
insb
jecxz
xchg
aam
aam
push
ja
jp
xor
xor
inc
loop
pushf
xlat
repnz
jl
repz
jge
pop
dec
pop
jg
in
lock
and
lock
out
pop
dec
cmp
sti
lock
imul
aaa
lock
loopne
xor
lock
dec
xor
mov
test
fcmovnbe
mov
ja,pn
cs
imul
mov
mov
mov
scas
fldcw
jecxz
pop
xchg
sbb
lea
in
call
repz
dec
fs
and
int
mov
sbb
add
sub
jb
rcrb
lock
lods
or
and
jecxz
lock
jnp
sub
test
mov
icebp
or
dec
hlt
inc
fmull
lock
aas
sbb
das
or
pushf
xor
sti
xor
push
adcb
out
shrl
mov
jno
insl
adc
aam
xchg
in
call
cmp
mov
xor
jo
and
dec
jecxz
adc
insb
lds
jno
lock
mov
add
dec
jmp
jnp
cmc
adc
or
pop
repnz
std
cmovno
fstl
out
popf
mov
in
lock
fsubl
ds
pop
cmp
or
lock
outsl
loopne
out
fidivrl
lock
xlat
mov
cwtl
mov
daa
jnp
loopne
icebp
push
fcoml
xchg
in
mov
pop
sub
enter
lock
pop
es
xchg
or
es
lock
lahf
fcoml
pop
mov
jl
cmp
sbb
mov
mov
daa
sub
fisttps
popa
imul
je
pusha
fucomip
mov
sar
adc
sbb
aad
lock
add
jns
icebp
jb
sub
fmuls
xor
and
popl
jmp
sbb
hlt
fimuls
clc
out
jp
in
xchg
push
sti
repnz
mov
ljmp
push
cmp
cwtl
dec
add
jge
js
mov
repnz
push
int
std
setb
cwtl
cmp
imul
pop
loope
inc
sub
jo
xor
ljmp
loopne
mov
mov
clc
mov
xor
xchg
xor
and
lods
and
out
popa
mov
mov
addb
shl
xor
test
mov
add
fwait
mov
push
push
and
pop
adc
sub
lods
adc
xchg
mov
in
inc
xor
sbb
ljmp
jl
inc
inc
scas
xor
dec
jo
fldenv
movsb
lret
dec
popa
lcall
xchg
pop
pop
push
xchg
push
cs
add
insb
adcb
clc
xor
xchg
insl
push
sbb
mov
cmp
out
mov
into
cwtl
add
ja
sub
lock
and
fildl
test
ret
in
aam
cmpsl
repnz
repz
jnp
lock
xchg
cmp
inc
sub
repnz
aaa
andl
repz
addr16
fwait
enter
or
lock
pop
sbb
icebp
loope
jl
mov
lret
pusha
or
add
jmp
lock
in
and
cmc
and
call
cmpb
out
lret
jmp
push
sbbl
sbb
mov
dec
in
das
mov
int3
movups
inc
xlat
es
and
cmc
inc
dec
jnp
sti
jo
stos
ljmp
cmp
mov
push
sarb
cmp
pcmpeqw
dec
jno
lcall
sub
in
sahf
sar
fdivrs
and
cwtl
adc
sbb
aad
push
cmp
ss
std
loopne
xor
cli
lock
adc
cmp
lock
call
addr16
inc
out
xor
xchg
mov
sbb
clc
mov
cli
xchg
in
xchg
negl
mov
out
mov
mov
mov
push
push
and
push
test
test
daa
mov
ljmp
xorb
cld
inc
sub
mov
xchg
das
int
jecxz
ret
fsts
xor
push
loope
mov
dec
pusha
sub
lock
orl
lock
imul
cmp
lea
xor
dec
lock
jo
jns
or
daa
add
xchg
push
lock
outsl
fwait
mov
mov
or
sbb
cld
aaa
lock
outsl
pushl
lock
mov
push
dec
mov
cmp
pop
pop
in
mov
in
stos
mov
ret
mov
shl
sahf
push
movsl
in
mov
mov
lds
lods
pop
mov
sub
ss
inc
xor
dec
dec
mov
icebp
les
mov
je
insl
loopne
sub
movsb
jbe
jo
cli
mov
lock
dec
lods
jne
mov
call
jbe
fldenv
push
mov
xchg
adc
lock
jne
lock
adc
sahf
jb
mov
push
lea
pop
leave
xor
pop
add
es
xchg
aaa
mov
sbb
lock
push
dec
adc
lock
pushf
adc
pop
fldt
mov
mov
hlt
ljmp
xor
xor
lods
lock
xchg
xchg
cmp
rep
enter
ss
adcb
or
xor
cld
shl
scas
add
jo
lock
aas
xor
movhlps
fsub
cmp
pop
cwtl
jp
jl
mov
popf
lock
ret
in
fidivl
cmp
and
fdivrl
popa
push
lock
aas
dec
jmp
xchg
cmp
cmc
lock
movsl
jp
jmp
fnstcw
add
lods
or
icebp
shrb
mov
in
lock
and
xchg
xchg
bound
flds
add
test
push
hlt
cmp
push
inc
lock
xor
jb
and
lcall
lock
je
int
jo
sbb
pop
out
ss
and
jo
jo
imul
mov
js
pushf
jle
dec
imull
mov
pop
in
jmp
cltd
and
lock
jnp
xchg
inc
pop
lock
sub
lock
gs
int3
mov
icebp
xchg
in
cmp
cmp
in
std
cmp
movb
sbb
xchg
xor
and
dec
adcb
xor
inc
adc
loopne
mov
lods
lock
sbb
nop
inc
lock
inc
push
push
mov
repnz
ss
push
adc
jp
syscall
aaa
cwtl
mov
rcr
imul
pop
jl
pusha
repz
lock
test
jns
lock
push
fldt
jnp
scas
in
lock
shrl
xor
mov
sub
dec
pop
fmuls
jns
or
pop
cmp
pop
int3
xchg
lock
inc
push
pusha
in
sub
fmull
lods
jmp
fldenv
xor
std
mov
pop
lock
xchg
adc
pop
xchg
and
or
icebp
pop
jl
adc
inc
jb
ja
lock
mov
or
ds
add
fs
cmp
rolb
inc
mov
sub
and
shr
pop
test
cltd
or
xor
ljmp
mov
adc
xor
or
pop
xor
add
scas
fsubrs
aam
insl
jb
mov
lahf
dec
or
arpl
divb
mov
pop
sbb
lock
jne
cmp
sbb
xchg
out
fsubrs
lds
insb
repnz
in
lret
in
mov
pusha
and
fnstsw
add
movsl
pop
lock
cvttps2pi
and
xchg
cmp
int
daa
inc
sbb
lock
das
adc
ret
pop
cmp
xchg
adc
sub
cmc
dec
pmaxsw
and
mov
lock
mov
rorb
push
lods
ret
push
mov
sti
cmp
in
cmp
cmpsb
fcomps
lock
test
xor
or
jnp
mov
mov
mov
flds
cld
loope
cmpsb
ss
insb
pop
icebp
xor
pop
bnd
repz
pop
cs
jns
lret
pop
fdiv
roll
insl
clc
out
das
stos
repz
mov
xchg
jmp
into
mov
inc
add
mov
stc
push
mov
jmp
daa
adc
sbb
inc
repz
div
cmp
xchg
stos
xor
repnz
fcomp
ret
dec
lock
ss
add
xor
scas
mov
jns
lock
mov
dec
mov
or
xor
mov
and
ljmp
repnz
lock
add
shll
mov
adc
aaa
punpckldq
add
inc
lock
sahf
ja
out
lock
loope
ljmp
inc
mov
add
movaps
push
bound
jecxz
cmp
repz
fs
sbb
ss
and
sub
dec
inc
icebp
lock
adc
cmp
lock
push
pushf
pop
sub
lock
dec
negl
int3
cmp
sub
jo
into
xor
jno
lock
sbb
ss
jb
int
mov
push
jae
or
push
lret
push
aad
lock
jmp
add
adc
push
insb
test
inc
test
loop
jo
ret
push
sti
les
mov
lock
mov
cmp
mov
dec
pop
aad
lock
inc
mov
int3
dec
repnz
cli
mov
mov
sbb
mov
mov
xor
aad
jge
leave
xchg
dec
nop
icebp
sub
jmp
mov
mov
icebp
xchg
pop
sbb
mov
inc
cmp
mov
sbb
in
scas
xor
add
cmp
imul
lcall
xor
pop
js
or
lock
addl
ss
out
pop
sub
int3
mov
sbb
pop
aad
lock
mov
lock
dec
xchg
push
fsubl
popa
push
leave
clc
sbb
lock
cwtl
jb
cmp
mov
jno
andl
xchg
js
inc
mov
xchg
adc
shr
mov
sub
mov
lock
sbb
lock
mov
adc
sarl
lock
pop
loop
lock
mov
lock
lahf
fdivl
xor
out
inc
test
lock
sbb
stc
dec
cmp
jge
sbbb
fistl
mov
adc
jo
das
inc
popa
pcmpgtd
cmpb
xchg
xchg
lret
nop
jbe
cli
mov
or
mov
lahf
imul
push
loopne
das
sbb
xor
jne
addr16
jno
les
mov
mov
push
ret
aaa
mov
movsl
jae
pop
adc
pop
outsb
enter
adc
cld
ja
vpunpcklwd
loope
adc
mov
div
xchg
into
aam
and
jo
daa
sub
pop
inc
mov
or
aad
pop
ljmp
inc
hlt
push
xchg
sbb
lock
adc
cltd
adc
pop
rcrb
popf
pop
xchg
ret
repnz
mov
nop
mov
dec
dec
fdiv
add
jmp
mov
add
xor
xchg
lock
test
lret
cld
test
in
inc
inc
lock
ss
lock
mov
shl
out
imul
subb
sub
pop
jo
xchg
jns
lock
bound
mov
repnz
jl
in
push
and
pop
xor
clc
push
xchg
andb
push
lock
nop
cmpsl
adc
pop
xchg
jb
lret
std
lock
sbb
out
stos
ret
mov
add
and
mov
mov
shrl
xchg
inc
lahf
lock
inc
push
xor
mov
mov
adc
std
adc
or
or
shrb
xor
lds
add
inc
sub
cmp
fdivl
push
lock
movsb
or
aaa
cmp
mov
jecxz
sbb
jne
push
lock
test
cmpb
push
xor
outsb
mov
loop
sub
repnz
fimull
jecxz
clc
icebp
sbb
repz
rcll
popl
jnp
sub
cltd
in
xor
push
shll
jb
lahf
aaa
sub
mov
lock
push
lock
jl
inc
pop
adc
xlat
pop
sbb
ret
aad
in
fs
dec
add
int3
push
scas
mov
loop
arpl
pop
in
push
addr16
pop
push
and
xchg
sbb
push
bound
sbb
outsb
jl
repz
in
and
dec
add
mov
mov
aaa
aas
jl
mov
test
pop
ljmp
mov
lahf
fwait
push
leave
in
or
and
lods
test
setg
mov
repnz
jge
lock
or
cltd
in
sbb
lock
mov
lock
push
in
ja
sub
lock
xchg
cmp
idivl
add
sbb
cmp
adc
icebp
es
mov
or
lret
mov
xor
inc
sbb
out
lods
daa
lock
dec
jl
xor
inc
pop
xor
add
sarb
and
dec
sahf
sbb
mov
out
stos
xchg
lock
dec
push
sub
ljmp
lock
mov
sub
lock
mov
mov
les
loop
in
lock
lahf
sbb
jo
or
lock
xor
dec
sub
insl
push
popf
lahf
fidivs
jmp
es
cmovg
outsb
scas
push
sbbb
mov
ljmp
push
int
test
pop
sbb
iret
loopne
test
xor
inc
pop
jl
lret
mov
xor
not
jne
les
out
das
lods
mov
test
dec
bnd
mov
jo
shrb
add
xchg
lock
in
dec
inc
and
add
dec
loope
scas
mov
and
pop
lcall
pop
test
sub
mov
lock
divb
ss
rcl
pop
inc
sti
push
mov
call
lock
pop
push
mov
xchg
xor
xchg
mov
call
jno
add
shl
adc
adc
icebp
ds
sbb
push
cld
xor
lock
push
iret
push
stc
jg
or
repz
ret
mov
mov
daa
popa
pop
adc
or
cmp
in
cmp
dec
pop
stos
mov
dec
xchg
in
icebp
lret
fsubl
stc
outsb
sub
aaa
jle
test
sarl
les
dec
lock
daa
or
xchg
aam
js
cmp
icebp
jge
out
jo
jnp
pop
movswl
rorl
repz
aad
push
fisubrs
push
jns
shll
adc
mov
and
bound
pop
inc
mov
mov
mov
push
xchg
and
pop
xchg
ss
popf
jecxz
mov
shl
fcomi
insl
movsb
in
cmp
lcall
mov
lock
dec
nop
jge
sbb
pop
ret
scas
mov
and
sbb
fwait
xor
icebp
fcmovne
pop
mov
fidivrl
dec
bound
push
mov
lock
inc
outsb
and
mov
icebp
jmp
jae
sbb
jns
clc
idivb
loop
pushf
pop
add
jmp
mov
lock
add
or
push
cmp
out
jo
mov
pop
cmp
lock
mov
jnp
push
inc
mov
mov
add
jbe
pop
lea
jl
fwait
pop
pop
bound
cli
xor
mov
adc
mov
lock
shlb
clc
xchg
repz
call
mov
cmp
xchg
jne
add
push
stos
rcrl
in
test
jb
sbb
shl
lea
mov
jmp
jbe
js
mov
jne
adc
imul
ds
cmpsl
shl
and
test
jle
mov
jne
lock
shlb
pop
in
xchg
sub
outsl
lock
mov
xchg
dec
lock
push
lock
nop
in
xchg
shl
mov
lds
pop
sub
lock
xor
ficompl
addb
xlat
mov
mov
je
cmpsl
shll
or
and
lock
dec
cwtl
repz
lret
mov
lods
lds
jle
adc
fs
dec
lock
ds
fisttps
nop
xor
lock
shll
push
jecxz
pop
jp
push
in
out
mov
lock
fimull
cltd
les
lock
mov
cwtl
cmp
sbb
dec
jo
loope
sar
aaa
adc
dec
pop
flds
sub
stos
daa
mov
or
jo
mov
push
xchg
insb
jno
xor
lock
stos
push
mov
jecxz
jp
push
jo
test
mov
insl
lea
out
aam
jne
xor
movsb
clc
out
cmpsb
lretw
fmul
or
into
mov
lret
aad
cmp
dec
rorl
sbb
test
lock
push
mov
repnz
gs
xchg
sbb
fsub
jo
scas
loope,pt
sub
lea
push
adc
mov
inc
add
add
and
cmp
test
xor
fwait
int
rolb
add
mov
inc
sahf
ljmp
mov
jae
cwtl
aad
sub
popf
add
ss
mov
lds
sub
loopne
lahf
jnp
test
mov
inc
lock
mov
lds
lock
xlat
cwtl
or
lret
adc
insb
cs
popf
push
ret
or
adcb
loopne
cmp
js
icebp
add
pop
clc
shl
adc
mov
lock
add
test
xlat
lock
and
adc
xchg
in
lods
cwtl
xchg
popf
lock
jns
das
sahf
xchg
in
iret
xchg
jmp
cwtl
mov
icebp
mov
aad
jne
push
add
lock
mov
div
fwait
lahf
pop
bound
fs
lea
and
lock
out
xchg
insl
lock
add
dec
jns
icebp
or
inc
fnstcw
sub
mov
repz
pop
lret
shlb
js
in
stos
ret
hlt
mov
lea
in
scas
push
pop
cmpsl
jnp
lock
clc
xor
repnz
sahf
jmp
js
push
mov
mull
sub
xlat
add
mov
scas
xchg
mov
inc
test
and
rolb
xchg
xor
ja
arpl
testb
jne
and
fcoms
test
pop
xor
adc
cltd
fisttpll
adc
xor
in
mov
mov
iret
pop
jo
rcrl
or
mov
ret
xrelease
xlat
xchg
sbb
push
lods
or
lock
sbb
sarb
fucom
dec
jb
nop
pop
icebp
jmp
std
shlb
fdivs
lock
leave
daa
scas
sti
int3
lock
add
push
push
xor
dec
lcall
ret
pop
jbe
pop
and
shlb
int
add
repz
dec
cmpb
es
sahf
xor
lock
je
lock
add
es
or
cwtl
out
icebp
pop
mov
out
loopne
sub
ret
sbb
fcomip
icebp
mov
loopne
cmp
sub
sbbb
xchg
lock
notb
push
andb
es
rcll
dec
lock
push
inc
out
jnp
cmp
int3
je
sbbl
xlat
xor
shr
pop
repnz
or
mov
xor
mov
lock
icebp
fmull
adcl
cmovle
int3
sbb
test
xor
cmp
daa
xor
test
cwtl
pop
inc
and
adc
lock
and
sbb
xor
cmc
lock
outsl
out
lock
push
mov
std
ret
and
lock
inc
adc
mov
xor
enter
push
lock
ss
iret
jns
lock
dec
sbb
mov
lock
lds
xchg
mov
push
mov
sbb
fdivs
aaa
lock
mov
xchg
out
lock
jns
cmp
push
cmpsb
push
cs
stos
and
lahf
insb
lock
push
cwtl
std
repz
lods
shrb
repz
mulb
leave
inc
or
dec
xchg
mov
pop
cmpsl
nop
pusha
call
push
ret
dec
jnp
icebp
test
test
inc
inc
out
push
mov
lods
xchg
loop
jb
sbb
push
cmp
or
dec
or
mov
push
mov
rorl
imul
scas
ja
hlt
xlat
xor
push
sub
lock
out
sub
lods
mov
xor
push
test
cs
jmp
js
ret
pushf
sub
adc
lock
xchg
push
mov
loop
xorb
movsb
test
xor
sbb
imul
hlt
lea
jmp
icebp
out
xor
fnstsw
mov
and
xchg
jbe
ret
hlt
push
lock
add
movsb
icebp
mov
mov
add
cs
mov
ja
iret
imul
inc
mov
jne
enter
mov
inc
adcb
cmp
call
lock
scas
jo
lcall
jnp
adc
pop
subb
sarl
sets
mov
and
outsl
dec
mov
push
mov
daa
lcall
dec
jbe
cmp
adc
lock
jns
push
fsub
mov
pop
jb
xchg
adc
out
cwtl
push
xor
add
bound
mov
mov
shl
fsubl
jo
mov
lods
mov
lock
sbb
jb
in
lahf
jecxz
and
sbb
mov
aam
hlt
fcomi
jns
repnz
inc
push
adc
movsl
xor
mov
out
mov
cmc
jne
imul
add
mov
clc
jge
shlb
ss
and
lock
aas
rorl
ret
xor
mov
cmpsl
out
test
js
cmp
mov
jl
fiaddl
mov
adc
sbb
movl
push
ffreep
mov
int3
inc
jle
cmp
je
out
int
or
sarb
mov
lock
shll
xor
mov
sbb
stc
lock
sbb
dec
es
lock
push
jae
jno
lock
scas
cmp
dec
jo
pop
into
outsb
stos
jae
lock
add
je
rolb
ljmp
pusha
lea
mov
add
push
inc
lock
jl
int
lock
push
in
xchg
movsb
test
xchg
call
lds
addr16
pop
ja
jo
shrb
repz
icebp
mov
jne
call
jp
push
mov
mov
pop
je
mov
add
jns
mov
sbb
xchg
cmp
mov
lcall
push
inc
popf
in
das
pop
xor
mov
and
jl
stos
xor
xchg
jle
adc
xlat
sub
jne
mov
ljmp
pushf
movsl
out
call
ss
test
call
lock
out
aam
cmp
inc
pop
loop
addr16
stos
dec
icebp
cmpsb
cwtl
xor
ret
test
push
into
lock
push
test
lock
pop
dec
pop
ja
nop
out
xor
xchg
or
movsl
mov
iret
mov
jmp
xlat
and
or
bound
adc
mov
lock
xor
sub
movsb
xor
sub
sbb
and
ja
mov
xor
inc
bound
lock
or
mov
pop
or
push
pop
inc
lock
sarl
sub
icebp
mov
faddl
push
ja
lock
mov
into
cmpsl
repz
fld1
jbe
mov
mov
push
xchg
jnp
add
dec
dec
jl
lds
xor
pop
or
inc
into
test
repnz
pop
mov
mov
icebp
push
cmc
gs
dec
dec
xor
pop
lock
cmp
mov
inc
daa
je
sbb
ret
mov
in
xor
add
jmp
mov
dec
push
popa
lock
out
or
inc
lock
add
add
cli
icebp
adc
stos
or
das
fists
xchg
test
dec
push
int3
test
mov
mov
mov
mov
loop
xor
jne
pop
subb
test
push
mov
div
fcmovb
lock
stos
pop
arpl
xchg
cmp
pop
lock
dec
loope
lock
int
jge
cmp
dec
andb
ljmp
dec
jbe
ss
aas
aaa
pop
cmpsl
push
lock
sub
jno
cmp
pop
out
jae
dec
fidivl
aas
lock
push
fisubrs
pop
lock
pushf
push
push
sbb
jne
vpmaxub
pusha
push
add
mov
out
mov
lock
ror
and
mov
push
push
hlt
inc
dec
dec
add
and
aaa
pop
pushf
clc
sbb
xor
repz
add
daa
and
lret
jne
decl
arpl
clc
push
fstpt
outsb
cli
sahf
xor
das
lock
movsl
test
lock
push
icebp
jae
adc
cmp
cltd
mov
sbb
data16
jae
aaa
rcrl
jne
adc
lock
in
enter
pushl
xchg
jl
lock
and
push
push
aad
lock
test
mov
fistpl
sub
jo
stos
ss
jns
sub
test
out
lock
cvtps2pd
adc
mov
daa
jo
sbb
xchg
sbb
imull
icebp
fmull
sub
bound
xor
mov
mov
cmp
rep
lea
repnz
mov
xchg
cmc
and
or
sbb
cmp
fldt
je
push
mov
adc
lret
cmp
lock
add
ds
xchg
loop
test
in
lock
cltd
outsb
stc
fdivp
out
adc
push
dec
shl
jns
jmp
push
dec
jg
icebp
push
adc
leave
int
popf
f2xm1
cmpsl
and
xor
rdmsr
jle
subb
dec
js
jnp
lock
shlb
inc
icebp
push
lods
sub
daa
les
push
pushl
push
mov
bswap
outsb
in
dec
pusha
jnp
dec
fwait
jl
lock
bound
mov
mov
dec
js
xchg
jae
sbb
lock
pop
mov
lock
pop
jb
xchg
push
lock
bound
inc
pop
dec
pop
add
out
mov
mov
pop
lock
lcall
repz
incl
mov
data16
xor
push
xchg
xorb
or
dec
jb
test
or
xor
jns
lock
scas
enter
inc
lock
and
shl
cld
fs
jbe
jo
or
sbb
mov
sub
ljmp
mov
insb
jp
hlt
xchg
cwtl
cmp
cld
aad
lock
lea
std
lock
push
jns
adc
call
xor
out
je
mov
ss
jns
lods
xchg
push
rorb
jecxz
xor
ds
in
out
stc
jne
lock
aad
and
mov
push
or
jmp
lock
xchg
addr16
add
mov
call
mov
sbb
data16
mov
aas
inc
sbb
jnp
clc
lock
nop
cmp
ret
sub
push
out
xchg
xor
out
inc
dec
xor
dec
js
pop
ror
pop
dec
ss
push
iret
mov
xor
cmpsl
call
jae
das
push
adc
jp
dec
mov
mov
jmp
lahf
popf
testb
cld
pop
popa
sub
cmp
cmc
xchg
adc
add
mov
push
fcomip
ret
adc
cmp
lock
sbb
xchg
push
es
adc
movsb
psubusb
jne
xor
lock
jno
adc
pop
sbb
call
xchg
lret
mov
clc
jle
or
sbb
outsl
cmovbe
cmp
in
and
mov
iret
dec
cs
xlat
mov
or
sub
xor
jmp
fadds
mov
push
mov
dec
cwtl
in
loopne
or
xor
pop
out
lock
popf
cltd
adc
or
shl
mov
cmc
cmp
push
and
lea
cmp
int3
inc
rorb
mov
lcall
repz
loope
jo
xor
icebp
cmp
hlt
sbb
lock
jmp
loope
in
leave
xor
sub
sub
lea
or
cltd
mov
cmp
cs
je
pop
cmp
cmpsl
int
add
lock
dec
dec
rcrl
cmp
push
xor
add
popa
lock
xchg
rcrl
lods
mov
insl
jne
push
inc
mov
lcall
lock
insb
jae
push
jl
outsl
cmp
lods
sbb
repz
scas
mov
loop
mov
jne
mov
sbbl
cltd
rcll
frstor
push
fdivs
addb
dec
rclb
test
lock
mov
adc
in
movsb
pop
jne
xor
icebp
jnp
push
adc
shl
sti
or
popf
mov
push
gs
or
mov
xor
xor
mov
and
divb
lock
mov
jns
sub
and
pop
icebp
jg
push
or
rolb
fdivp
mov
fwait
xor
filds
sub
sbb
cwtl
xchg
or
push
jo
push
xor
xchg
lock
or
aam
xchg
ds
adcb
ret
sti
bound
stos
lock
out
insl
clc
fwait
dec
lock
ret
mov
add
sbb
xchg
icebp
dec
sbb
cmpsb
lcall
push
sbb
int
icebp
mov
ss
imul
push
mov
repz
jl
mov
ret
push
adc
pop
movsb
push
pop
mov
lock
lea
jnp
mov
lock
test
sub
ret
cmp
test
and
add
es
xor
adc
lock
inc
push
jae
int
dec
and
sbb
adc
cmp
inc
push
pop
out
rcl
mov
inc
sahf
sbb
jmp
jle
add
adc
sets
dec
orb
cmp
int3
xchg
or
add
xchg
fwait
adc
loopne
dec
cmp
not
es
lock
faddl
sub
jecxz
lock
fwait
push
and
lea
mull
mov
jnp
mov
movups
mov
mov
push
dec
adc
lock
cmp
stos
push
xor
xlat
sub
jecxz
ds
lods
lock
pop
lret
jbe
pop
je
xchg
pop
movsb
sbb
adc
stos
lret
sti
jne
pushf
lock
mov
mov
push
push
or
adc
xor
push
fwait
icebp
add
sbb
fisubrs
lock
cltd
repz
loopne
clc
add
enter
jbe
cmp
out
sbb
mov
stc
push
xchg
xchg
cmp
lock
imul
add
jbe
lock
lock
call
jno
lock
ds
bound
ja
lock
shl
cmp
lea
test
and
or
jne
inc
cltd
icebp
mov
std
adc
push
aas
test
fnsave
aam
imul
pop
push
jge
lock
roll
lock
lds
stos
sbb
mov
in
fwait
pop
paddb
jo
sbb
jmp
or
mov
lock
jns
out
lods
dec
cmp
lock
and
loop
lea
les
ljmp
jno
lcall
adcb
sbb
xor
push
into
lds
lock
aam
jl
enter
dec
stos
cmp
push
jmp
fisubrs
xor
push
xor
sarb
add
test
scas
ja
paddusb
loopne
inc
dec
mov
lock
fsubrl
sahf
or
pop
sarl
das
mov
fadd
jg
repz
test
xor
lock
pop
fistps
movsb
add
cmpsl
mov
fmuls
jg
mov
div
roll
mov
xchg
cmp
test
test
mov
imul
push
es
jbe
sub
iret
movsl
lock
stos
or
aas
lock
jne
or
or
mov
jo
sti
jns
jg
mov
jmp
stos
lds
xor
xchg
int
repz
das
mov
enter
lcall
xlat
mov
mov
arpl
scas
loop
test
jns
movsb
ljmp
subl
dec
es
bound
daa
in
into
jae
imul
movsb
lock
das
inc
xorb
loopne
dec
xchg
xor
cltd
cmp
or
push
jns
lock
inc
mov
js
js
lock
mull
negb
pusha
lock
xchg
lods
lock
out
xor
mov
or
mov
xchg
jns
lock
gs
lock
jne
mov
push
xor
test
loope
jmp
imul
es
test
movsb
clc
lock
mov
mov
jmp
cmpsl
jb
lock
xor
lock
mov
leave
jns
inc
lock
cmp
enter
aad
mov
outsb
mov
divb
pop
jns
lock
mov
jb
ss
inc
mull
adc
jl
lock
fmul
xor
fs
mov
sub
push
lock
jae
xchg
xor
cmp
lahf
mov
fwait
sarb
jo
mov
das
pop
out
adc
jge
xorl
rcrl
lock
add
mov
lock
js
xchg
adc
call
hlt
xchg
jb
mov
jns
pop
je
and
cmp
push
mov
rorb
pop
div
mov
daa
lock
out
push
imul
mov
lea
pop
push
fisubrl
lock
lock
cmp
push
push
icebp
mov
imul
jp
lock
xchg
sub
repz
sarl
je
jl
jl
jo
and
inc
lock
xor
out
lock
fidivrl
add
loop
lock
xchg
lea
dec
clc
jl
push
std
add
or
enter
decl
cmpsl
mov
adc
jne
mov
nop
inc
xchg
repz
cli
fistpll
mov
or
mov
mov
mov
pop
lock
adc
rcl
in
push
and
xchg
jno
repnz
icebp
push
lods
rorb
call
adc
mov
je
lock
mov
mov
divl
mov
sub
and
mov
call
jns
iret
mov
fadds
lock
inc
loop
in
daa
lock
ja
lcall
bound
push
mov
inc
xor
enter
out
xor
jns
or
xor
mov
fdivr
js
xchg
xor
xor
std
pop
push
jo
xor
adc
lock
xor
push
fists
mov
jne
lods
data16
std
in
xchg
cmp
push
or
mov
adc
loop
jge
imul
cmpsb
dec
sbb
enter
and
or
lock
jl
divb
pop
xor
and
jg
adc
pop
or
xor
pushf
mov
xchg
es
aaa
fstps
mov
push
lock
aad
xor
lock
ss
pop
aaa
lods
test
mov
and
lods
sbb
xchg
adc
idivb
cmpsb
add
test
icebp
call
sub
rcrb
or
mov
sub
add
and
and
test
mov
ljmp
inc
sbb
sti
lahf
sbb
mov
xchg
gs
inc
icebp
sbb
and
xor
fnstsw
xor
dec
leave
fldt
inc
mov
hlt
lock
shlb
imul
pop
xor
sarl
cmp
push
push
jne
out
call
test
icebp
add
sbb
pop
dec
push
push
mov
mov
lock
icebp
das
or
jge
pop
fcompl
test
into
or
lret
sbb
cli
loopne
mov
clc
xchg
xor
jno
or
dec
es
fcomi
push
mov
imulb
pop
xchg
insb
xorl
fdivr
int3
cmp
xchg
adc
and
into
xor
lock
pushf
lret
jb
lock
mov
and
imul
sub
aam
push
sbb
mov
mov
ss
repz
shl
fbld
inc
add
jmp
cmpsl
rol
jne
pop
lock
cmpsb
cld
mov
adc
xchg
push
into
inc
cmp
lock
cmp
fnstenv
jle
lcall
icebp
jge
xor
push
dec
adc
in
mov
xchg
daa
xor
xor
fs
ror
loopne
add
pop
and
sbb
aas
out
mov
xor
fnsave
adc
rclb
push
cmc
jge
jp
and
stos
jl
stos
sti
cwtl
rcrl
sarb
pop
push
out
gs
popf
std
inc
sbb
push
xchg
stc
add
roll
cmp
pop
mov
mov
idivl
js
lock
fwait
push
mov
xor
jnp
adc
push
stos
xchg
jecxz
stos
xchg
ret
in
fidivl
clc
cmpsl
mov
pushl
inc
mov
jp
mov
xchg
test
mov
fsts
mov
in
xlat
call
inc
xor
std
jo
or
jmp
jecxz
lock
xchg
lret
loop
jns
mov
loopne
std
mov
das
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loopne
inc
fwait
lock
mov
jns
mov
push
inc
dec
xchg
sti
inc
lock
pop
pop
cmp
push
push
pop
stos
inc
ret
cltd
pop
repnz
pop
push
inc
aam
inc
and
or
mov
inc
pop
jmp
adc
repz
jecxz
je
xchg
dec
in
inc
inc
clc
mov
jns
jmp
addr16
xor
inc
mov
adc
popa
push
fldcw
cmp
xor
xor
hlt
aas
hlt
addr16
pop
hlt
xchg
hlt
out
test
stc
scas
stc
out
and
stc
lods
clc
in
cmp
dec
lock
mov
lock
jecxz
fnsetpm(287
rcr
lret
adc
ret
push
xchg
stos
adc
adc
jecxz
jecxz
jecxz
loop
lods
in
roll
pusha
pop
nop
call
mov
scas
mov
cli
push
push
jecxz
loopne
sbb
adc
fdivs
insl
lock
adc
mov
mov
cmp
adc
sub
call
mov
hlt
and
imul
shll
jb
test
clc
leave
daa
rcrl
push
sbb
xor
xchg
outsb
lock
adc
movsl
mull
lock
in
fsubrl
dec
ret
rclb
loope
shrb
jle
mov
hlt
cmp
jl
pushf
inc
in
divps
pop
xorb
sbb
sbb
outsl
js
jp
push
jle
jbe
out
or
adc
xchg
or
lock
xchg
mov
xchg
shl
enter
cmp
repz
loopne
leave
xchg
xor
mov
mov
xchg
mov
xor
sarb
fsubl
mov
mov
ret
ror
je
inc
push
call
mov
aam
sbb
pop
sbb
sbb
fisubl
push
pop
xchg
cltd
pop
fldenv
lds
rclb
xchg
adc
cmp
in
loopne
pop
mov
xorl
rclb
imul
inc
cwtl
cltd
nop
pop
roll
or
stc
cs
mov
idiv
sub
or
hlt
jmp
jecxz
lock
push
in
push
hlt
shl
loopne
cld
ds
pmuludq
mov
sbb
mov
and
jnp
add
push
push
jno
inc
xchg
xchg
test
loopne
or
jg
negl
inc
hlt
cmpsb
out
adc
jmp
repz
rolb
push
mov
xchg
das
mov
xchg
out
adc
add
test
mov
stc
or
mov
fnstcw
leave
adc
xchg
dec
xchg
jo
add
add
cwtl
inc
lcall
into
mov
mov
scas
lea
int
push
dec
lret
lock
icebp
sbb
adc
fadd
pop
fnstenv
jo
gs
mov
test
push
mov
shll
lock
add
loop
lock
ror
dec
fsub
fdivrl
js
lock
call
je
cmpb
fdivr
adc
push
addr16
cmpsl
jno
pushf
pop
in
xchg
call
jp
inc
mov
les
repz
add
pop
dec
into
repnz
ds
aas
lock
fdivl
rcll
mov
xchg
pmaddwd
test
and
jp
ret
and
sarl
mov
push
lea
lock
cmc
jmp
xchg
hlt
mov
mov
data16
andb
or
aaa
mov
xchg
mov
lock
enter
push
dec
jns
jmp
aam
mov
sbb
testl
fcomi
loopne
lcall
clc
dec
xchg
lock
and
xor
mov
test
jg
jne
rorb
call
jbe
lret
test
xor
mov
mov
out
dec
ss
pop
es
pop
shl
mov
jg
cwtl
test
pusha
mov
pop
jmp
jecxz
cwtl
sub
add
jg
cli
jno
bound
shlb
into
std
out
lock
in
jne
sbb
sub
push
jbe
and
xlat
dec
fldt
roll
loopne
dec
lret
push
xor
xchg
jns
jecxz
mov
repz
dec
jmp
jmp
cwtl
loopne
sub
lock
and
xchg
xor
push
aaa
mov
or
test
jg
daa
dec
inc
jecxz
gs
shl
ror
xlat
sub
mov
push
lock
aam
cli
call
mov
mov
push
notb
enter
jmp
lret
int3
mov
sub
dec
xor
jno
data16
icebp
add
lods
sub
mov
cmp
dec
sbb
loop
leave
lock
mov
or
and
jo
push
aaa
je
xchg
adc
andl
or
xchg
nop
push
lock
test
rcll
sub
jo
sti
jle
mov
je
add
loopne
cmp
lock
xor
push
lea
pop
imul
jo
data16
ljmp
aad
mov
test
fcomps
fiaddl
sahf
lock
mov
push
push
and
jg
pop
je
adc
loop
add
jns
repz
cmp
fbstp
orl
jp
adc
and
pop
dec
pop
mov
shl
stc
icebp
iret
add
jmp
lock
cmp
test
add
clc
div
test
out
push
je
sti
faddl
sahf
adc
icebp
pop
hlt
sub
test
fcoml
lock
ljmp
lret
mov
aad
outsb
dec
xchg
nop
lock
pop
sub
xchg
dec
lock
sub
and
mov
dec
jp
jne
shl
cwtl
lock
cmc
lret
add
ljmp
adc
sub
sub
adc
pop
jnp
icebp
mov
pushf
loop
add
dec
inc
test
roll
xchg
cwtl
mov
mov
mov
mov
add
dec
inc
loop
iret
repnz
fmull
sub
ficompl
jno
mov
or
mov
mov
xchg
mov
xor
decl
inc
mov
jno
add
ds
xor
js
test
cmp
jo
insb
or
xchg
lock
dec
sbb
jae
lock
sub
or
adc
out
mov
jbe
mov
mov
dec
leave
mov
xor
arpl
loop
lock
sbb
cmp
adcl
sub
dec
out
repnz
stc
loope
fstl
shrl
pop
ret
push
fcoms
sbb
mov
sbb
or
inc
mov
sbb
clc
stc
jnp
jg
xor
ljmp
lock
xchg
lahf
push
cltd
xchg
mov
lds
sbb
pop
rorb
inc
mov
sti
xor
or
call
jecxz
shll
dec
inc
xchg
cmp
cli
pop
add
cmpsl
jmp
adc
test
mov
outsb
sub
out
mov
and
dec
jo
xchg
call
sub
fdivs
ljmp
push
fldt
mov
pop
data16
jns
sti
imul
jge
fs
lret
mov
xor
push
out
sti
cmp
jne
in
jns
sti
gs
dec
outsb
adc
aaa
push
bound
sub
lock
lods
out
sub
std
fdivs
ds
idivb
mov
jmp
jnp
pop
dec
cmp
mov
dec
jo
lods
inc
push
and
jmp
or
jnp
cmpsl
mov
test
xor
call
pop
push
pop
xchg
mov
nopl
xor
scas
pop
addr16
lock
and
push
cmc
cmp
cltd
or
or
pop
je
xchg
pusha
jo
hlt
xor
mov
ret
aaa
es
jno
mov
jmp
jo
repz
ds
xor
lret
test
bnd
cmp
jecxz
pop
dec
mov
inc
inc
icebp
fidivl
enter
ss
js
push
pop
mov
movsl
roll
test
xchg
pop
mov
sbb
imulb
out
mov
pop
sbb
adc
fistps
fcoml
mov
jmp
call
clc
jno
cli
shll
sub
push
or
mov
pusha
mov
adc
enter
inc
cwtl
sbb
push
std
shr
mov
sub
out
xorb
fmul
push
jmp
in
or
movsb
call
repz
jne
pop
pop
rolb
scas
xchg
call
push
test
push
sti
cmp
orl
repnz
pop
lock
insb
mov
gs
stos
lock
popa
sahf
incb
dec
rclb
xor
xor
adc
aaa
imul
pop
pop
dec
jecxz
add
sbb
push
mov
std
test
shrl
fistl
jmp
outsl
test
push
jne
sub
push
mov
inc
rorb
lret
pop
push
pop
aam
jle
xchg
daa
mov
cmpsb
inc
push
pop
xchg
add
jo
push
shl
lock
mov
sub
dec
adc
or
xchg
aam
lock
push
sahf
or
jo
jae
mov
test
pop
add
inc
or
hlt
dec
jge
jmp
jl
scas
lock
loope
mov
xorb
add
out
xor
lock
les
push
push
and
in
call
mov
rcrb
push
or
dec
dec
pushf
add
pop
frndint
xchg
push
cli
lock
push
lock
hlt
push
pop
mov
adc
shlb
jg
lock
mov
mov
dec
mov
sub
pop
or
xchg
pop
lock
test
cmp
adcb
mov
push
mov
cli
xor
push
cmovo
addb
insl
mov
lock
cmpsb
imul
rcll
mov
rcr
inc
xchg
cmp
mov
pop
int3
xor
push
mov
xchg
je
push
adcb
jb
ds
fsts
jge
lock
movsl
stos
das
jle
repnz
push
pusha
mov
pop
xor
outsb
mov
ret
out
jge
cltd
sarl
push
and
sbb
jg
out
sub
xor
pop
pop
roll
cli
shll
imul
ljmp
push
pop
jnp
xchg
xchg
jb
roll
scas
lock
mul
ficoms
cmpsb
lock
movsb
fbld
test
or
lock
dec
sub
mov
pop
cld
shl
loopne
ds
mov
std
out
shll
repnz
repz
pop
sbb
or
lock
push
inc
pop
insb
and
ljmp
mov
pop
lock
cwtl
cmpsl
mov
dec
cmp
jo
enter
mov
push
fwait
rolb
fcoms
in
lock
pop
addr16
jae
and
data16
jecxz
mov
mov
arpl
mov
sti
loopne
add
push
sbb
cmpsb
ret
mov
adc
cmp
shl
lock
sub
cmp
push
xlat
imul
es
pop
jo
pop
lock
pop
push
out
add
mov
insl
jo
leave
push
iret
int3
jbe
shlb
inc
lock
mov
repz
mov
xchg
inc
xor
dec
mov
cli
lcall
mov
mov
push
push
mov
jge
push
or
into
add
repnz
imul
adc
aas
pop
adc
hlt
fiadds
push
les
stos
push
aas
repz
push
and
jo
leave
dec
movsl
lock
cmpsb
inc
pop
cmp
lock
cwtl
lds
repz
addr16
mov
sahf
cwtl
test
jle
push
stos
dec
fidivrl
outsb
icebp
fidivs
notl
cmpsl
sub
mov
jbe
int3
push
das
adc
or
xor
into
lcall
repnz
cmpsb
js
or
fnstsw
aam
shrb
cltd
jle,pn
xchg
add
repz
sahf
fdivp
lret
aaa
xor
jb
subb
ret
mov
call
ja
ret
and
jl
inc
or
and
mov
mov
lret
lock
subb
gs
addl
imul
xchg
or
lock
mov
lcall
fbld
pop
add
roll
call
jb
icebp
mov
pop
jbe
dec
or
imul
dec
push
lock
mov
pop
ljmp
cmc
test
pop
push
mov
inc
xor
push
fsts
pop
in
inc
lods
outsl
xchg
leave
or
sbb
lock
cld
imul
mov
in
cwtl
icebp
lcall
aad
sti
cld
pop
sub
adc
pop
sub
aas
aam
lods
nop
jb
mov
mov
fidivl
cltd
jmp
pusha
cmp
in
mov
dec
xor
push
loop
inc
cmp
les
cmp
sar
push
stc
sbb
add
xor
cli
mov
out
jo
int
out
inc
je
and
xchg
and
push
enter
mov
xchg
filds
leave
dec
clc
std
shlb
jae
int3
pop
xchg
xchg
or
and
std
clc
lock
cwtl
push
test
mov
mov
sbb
mov
inc
jmp
dec
push
iret
sub
pop
dec
mov
mov
icebp
test
mov
loope
arpl
jl
lock
das
xor
popf
mov
cwtl
adc
sbb
adc
mov
jns
mov
inc
iret
cmp
arpl
js
jecxz
ret
fs
cmp
sbb
arpl
sahf
lea
dec
insb
adc
pop
inc
xor
push
fisubs
adc
pusha
lods
lock
jg
mov
fwait
push
mov
cmp
lock
out
jnp
xchg
movsb
sbb
iret
mov
lret
ljmp
cmp
faddl
cmpsb
cmp
or
call
lock
jmp
push
adc
fiaddl
mov
cs
push
or
aad
leave
mov
mov
jo
xchg
iret
sarl
ret
xor
test
imul
lcall
dec
sbb
and
inc
xchg
xchg
test
cld
push
jnp
inc
add
ja
frstor
in
stos
mov
hlt
mov
add
fnsave
push
push
loopne
out
push
repz
ret
out
icebp
stc
inc
xor
jmp
inc
push
push
lea
pop
lret
enter
xchg
mov
adcb
adc
andb
sbb
xchg
sub
pop
add
jno
jecxz
lock
mov
js
or
outsb
cli
cld
inc
or
roll
dec
mov
mov
icebp
dec
add
cmp
fnsave
jmp
add
out
jg
scas
aas
lock
pop
add
sbb
pop
nop
lock
adc
dec
lock
cmp
cmp
sub
cld
xchg
and
jge
ret
and
iret
inc
push
mov
sub
adc
xchg
ss
inc
lods
jl
jecxz
int3
dec
dec
je
mov
std
jae
sbb
lock
cs
out
in
mov
and
lock
cmp
repnz
insb
xor
xchg
mov
or
popa
cli
add
test
fstl
adc
insb
pop
adc
add
lock
btc
mov
sbb
or
lock
in
and
mov
ja
gs
js
or
jmp
fstpl
lea
adc
mov
xchg
push
out
mov
mov
frstor
xchg
int3
xorl
sbb
sbb
cmpsb
mov
or
pop
jae
sub
xor
xchg
add
in
mov
or
jmp
inc
jns
pop
push
repz
cwtl
int3
popf
xorb
pop
mov
mov
cmp
ja
decb
add
cmpsl
add
repz
jmp
xchg
mov
pop
addl
loopne
xlat
push
push
xor
sbb
or
mov
fld1
xor
icebp
add
stos
js
and
sub
dec
and
mov
test
jnp
fidivs
lock
test
imul
add
inc
dec
mov
adc
push
in
enter
mov
inc
mov
ss
lock
iret
mov
or
movsb
sbb
popf
or
push
jo
adc
push
dec
xchg
mov
sub
aad
mov
daa
lods
shl
jmp
pop
in
dec
nop
or
mov
out
inc
cmp
cmc
lock
das
xor
scas
pop
push
pop
test
adc
dec
mov
pushf
mov
ljmp
insl
push
add
jo
inc
stos
mov
int3
loope
push
ret
add
adc
push
lock
out
add
inc
push
shll
pop
add
push
add
lock
or
jo
loop
ljmp
xor
jo
lret
lock
sbb
out
daa
or
sbb
je
pop
sahf
mov
jnp
sbb
mov
or
ror
icebp
jo
outsb
mov
xchg
stc
pop
mov
push
out
les
pop
sub
push
pop
dec
clc
xchg
aad
ja
mov
mov
push
push
gs
das
add
push
repz
sbb
fbld
adc
push
xchg
shlb
push
int3
fstps
jecxz
sbb
cmp
xchg
cmpxchg
mov
add
scas
addr16
cmp
or
inc
jno
mov
ret
andl
pop
pop
pop
xor
xchg
push
lahf
pop
xor
clc
jmp
in
out
icebp
pop
leave
pop
fbstp
test
push
adc
or
xor
mov
enter
inc
cmp
sbb
push
adc
xacquire
jo
add
arpl
pop
sti
push
jmp
inc
inc
pop
xor
and
out
lds
mov
push
popf
mov
sbb
inc
lock
adc
pushf
push
das
mov
sub
sarb
adc
xor
xor
arpl
jg
xchg
add
mov
mov
xlat
jp
lock
gs
pushf
sbb
lock
sub
fnstsw
xchg
push
rorb
push
repz
pop
xor
shl
insl
into
and
cmc
push
pop
mov
sbb
cmp
lock
into
rorl
jl
call
jns
daa
scas
and
in
enter
push
or
fmul
mov
mov
lock
jnp
xchg
push
lock
or
les
or
rol
in
lcall
cmpsl
xchg
push
clc
and
pop
dec
jecxz
jmp
fmulp
lock
mov
lock
xchg
repz
push
cmpsl
rorl
xchg
enter
dec
lock
scas
cmp
and
xchg
idivb
fbstp
decb
mov
repz
pusha
ficompl
lds
test
das
lock
inc
pop
xchg
push
in
lock
mov
call
fwait
lock
or
popa
lret
lock
addr16
xlat
push
jbe
fs
inc
jnp
rcr
outsb
pop
jl
push
pop
dec
ds
or
inc
in
mov
repz
sbb
xchg
inc
and
dec
lock
mov
adc
icebp
out
imul
mov
jb
lahf
repnz
xorb
in
loopne
mov
push
xor
or
dec
lods
js
add
inc
call
into
sub
ds
pop
adc
fidivrl
in
in
sti
movsl
add
lock
mov
sbb
push
mov
cmp
int3
mov
rcrb
jo
ret
adc
xchg
mov
pop
movsb
adc
dec
pop
roll
scas
lret
nop
sarb
outsl
lock
and
push
dec
inc
push
xor
cltd
ss
mov
cld
popf
add
iret
pusha
inc
shl
or
outsl
in
jno
mov
xor
add
fdivp
fisttps
clc
mov
cmp
push
and
push
lea
jnp
lret
dec
lock
in
jnp
call
ret
aam
clc
and
rcrb
es
jge
cmpsl
insb
xor
mov
data16
scas
adc
ds
arpl
mov
lock
insb
jmp
pcmpeqb
fisttps
test
enter
mov
xor
test
mov
cld
xor
mov
in
repz
arpl
lock
in
add
leave
ss
loope
lock
imul
dec
push
pop
mov
es
shl
inc
sbb
cmp
jns
sub
cmc
push
add
sbb
lock
cmpsb
cmp
in
jecxz
sbb
jmp
sub
jbe
arpl
jb
inc
mov
das
scas
pop
pusha
out
lock
lahf
cmp
sbb
push
xor
in
push
mov
inc
mov
inc
inc
push
popf
cmpsb
jnp
fwait
shl
ret
lods
mov
fildl
jne
push
icebp
add
cmp
jnp
and
iret
add
ror
xor
push
xor
in
cmp
inc
and
adc
mov
mov
adc
lock
jle
adc
out
lock
sbb
in
mov
pop
or
test
ds
adc
sbb
xchg
clc
and
ljmp
enter
int3
lock
pop
scas
mov
lock
mov
dec
lock
adc
stc
lock
sbb
mov
mov
hlt
lock
fs
sahf
xchg
and
lock
pop
push
lret
ret
gs
mov
loopne
ja
jmp
sub
push
or
lock
jns
std
pop
cwtl
stos
test
mov
stc
sti
push
cmc
sub
loop
jb
cwtl
mov
xor
sbb
shrl
in
sub
fmull
mov
shrb
jle
add
mov
adc
int3
repnz
lret
inc
sbb
jb
clc
std
loop
das
call
int3
outsl
pop
xor
pop
sarb
bnd
add
fsts
mov
sbb
fistps
inc
mov
insb
push
cwtl
pop
dec
dec
inc
decb
loopne
ret
push
fiadds
bnd
das
ficompl
hlt
divl
movsl
jmp
cld
or
add
jmp
jnp
das
sub
mov
xor
or
cltd
mov
add
jne
lret
adc
repnz
mov
stc
push
inc
push
jl
adc
pop
outsl
pop
sbb
add
jmp
cmp
mov
jmp
filds
stc
jl
add
test
inc
adc
rclb
outsb
lea
adcb
into
xor
call
enter
pop
notl
sub
lock
or
pop
mov
cli
leave
jnp
pop
mov
call
jno
js
ljmp
out
adc
in
push
xor
add
add
cmp
rorl
add
mov
jmp
cld
inc
popf
and
out
jne
lea
lock
inc
test
out
lods
or
add
add
pop
xor
xorl
nop
hlt
ljmp
popa
mov
sbb
int3
push
lahf
dec
icebp
insl
pop
aad
hlt
inc
lods
lock
lret
mov
xor
mov
mov
mov
fmulp
sbb
and
aaa
lock
lods
pop
ret
mov
mov
dec
and
repnz
sbb
push
lock
aam
sti
lock
lahf
sbb
mov
loopne
mov
dec
hlt
jae
rcll
cmp
out
inc
or
sbb
push
in
sub
and
adc
xor
and
xchg
lock
scas
mov
test
clc
aad
adc
ret
shl
call
mov
dec
popf
lods
xor
mov
sbb
repnz
je,pn
sbb
mov
in
lock
int3
or
ds
divb
xor
jo
int
mov
lock
jnp
sti
repz
nop
dec
inc
push
imulb
pop
aas
popf
dec
out
inc
or
xor
jnp
jae
jge
ret
repz
mov
bound
add
bnd
testb
xchg
xor
add
jp
mov
into
insl
ja
lock
jns
mov
in
mov
data16
dec
fdivp
cmp
mov
gs
sub
fwait
lahf
push
insb
pop
xor
mov
out
out
pop
lret
jnp
daa
lock
inc
jo
pop
int
add
ss
xlat
iret
leave
aas
clc
movsb
lock
stos
adc
fsubs
xor
push
cmc
lock
pop
int
or
sbb
and
cmp
lock
hlt
pop
mov
pop
mov
js
lock
das
cmc
andnps
pop
add
mov
or
cltd
cmp
sbb
pop
lock
repnz
dec
test
jnp
icebp
dec
push
aam
mov
push
mov
mov
adc
pop
jge
jp
xchg
js
inc
nop
xchg
mov
mov
jb
pop
or
push
xchg
or
pop
xchg
das
mov
cmp
cs
sbb
adc
call
mov
lock
fdivrp
dec
rorb
sbb
movsb
cmp
jge
jo
dec
inc
cmp
shl
in
mov
xlat
adc
icebp
cld
jae
fidivs
pop
fwait
loop
or
xor
pop
orb
lock
and
js
xor
lock
pop
cld
sti
aad
inc
ja
je
or
xor
mov
pop
iret
xchg
ret
mov
pop
loope
pop
icebp
jmp
xor
or
xor
inc
mov
inc
adc
fadds
push
test
je
lock
nop
mov
imul
ljmp
scas
sub
in
and
mov
lock
xchg
pusha
pop
int3
fadds
adc
out
stos
mov
leave
sbb
mov
sti
hlt
sub
adc
addl
lea
ljmp
lcall
adcl
or
xchg
sub
ljmp
pop
imul
jo
mov
popl
push
push
ljmp
insl
outsb
fidivrl
repz
sti
fcomps
dec
and
into
adc
sbb
sbbb
mov
pop
adc
cmc
lret
scas
cmc
lock
aas
lock
sub
xchg
lods
mov
mov
jbe
pop
cmp
mov
lock
push
icebp
pushf
xchg
out
pop
cmp
xor
mov
and
iret
jmp
in
inc
mov
add
jge
add
icebp
sbb
repnz
aam
iret
xchg
push
adc
lock
xor
loope
push
cwtl
inc
test
call
movb
jg
lock
xchg
pop
lea
popa
nop
and
arpl
push
pushf
mov
daa
add
scas
or
pop
adc
repnz
sbb
mov
rclb
nop
lock
pop
je
xchg
cmpsl
fnstsw
mov
xchg
ljmp
push
lock
inc
roll
cmp
jno
mov
in
lea
push
cmc
push
add
inc
outsl
lock
aaa
lock
cld
sub
rorb
sti
cmc
inc
xor
stos
clc
and
lock
dec
xor
out
jo
popa
dec
js
je
lock
pusha
mov
lods
lock
mov
xchg
lock
push
jle
lock
cmovge
add
test
fisubs
dec
nop
lock
mov
out
stos
mov
loop
lock
mov
xrelease
pop
imul
aas
mov
xchg
inc
mov
cs
in
push
mov
adc
lock
aaa
lods
lds
jmp
lock
mov
hlt
lock
xchg
arpl
cld
add
dec
mov
push
mov
into
lcall
roll
icebp
iret
add
adcb
lock
and
xor
lock
test
lahf
pop
popf
lock
pusha
lock
inc
out
and
xchg
mov
sahf
pop
push
andl
lea
clc
lahf
cmpsb
xchg
nop
repnz
rol
jnp
bswap
mov
jns
sar
sub
push
es
lock
cmp
jg
scas
push
mov
mov
rcrb
mov
inc
js
icebp
push
mov
push
push
aam
jae
xchg
std
cmp
nop
and
push
lahf
jno
xor
push
cmc
adc
outsl
mov
jae
xor
hlt
aam
dec
xor
sub
lock
mov
pop
lock
jecxz
inc
dec
outsl
sbb
bswap
into
flds
stos
out
pushl
push
daa
les
adc
cmp
hlt
jo
iret
cld
add
lock
fidivrl
lret
lods
repz
test
push
insb
dec
jl
cmp
push
inc
ja
cmc
cmp
mov
psrld
ds
lock
ljmp
in
shrl
nop
std
rorb
outsb
je
cmpsb
cmpsl
lock
lret
xor
adcl
out
xor
cli
adc
push
repz
or
cmpsb
xor
orl
or
cs
push
sub
sub
push
int3
jnp
or
not
fmull
or
and
lock
mov
dec
mov
lods
js
adc
sti
xchg
xchg
mov
cmp
cmp
js
pop
push
inc
sbb
push
aam
imul
add
pop
push
adc
orb
in
je
or
aad
dec
push
or
lock
cmp
mov
xchg
lock
jl
movb
sbb
fisttpl
sub
add
shlb
adc
aad
mov
ret
loop
ds
add
dec
push
jg
cmp
mov
push
mov
repz
aaa
in
mov
cli
xor
push
mov
dec
mov
aaa
lock
sbbl
lret
xchg
lea
arpl
lock
sahf
js
xchg
dec
cmp
lock
test
jae
daa
pop
loopne
fsubl
xor
jne
cwtl
cmp
cmp
cltd
cmpsb
in
adc
stc
adc
mov
mov
mov
xor
fdivrl
hlt
mov
lock
xchg
or
mov
xchg
mov
mov
mov
movsb
push
push
sub
movsl
push
js
push
push
add
inc
aas
adc
mov
jno
push
or
cli
test
jge
xor
cmpb
mov
es
aas
mull
repz
sbb
fwait
sbb
sbb
push
iret
cmp
icebp
movsb
push
inc
aam
cltd
lock
cmp
jbe
dec
lock
nop
fdiv
mov
dec
jl
mov
mov
inc
lock
cmp
sbb
aas
push
hlt
or
lock
movsb
jns
push
fsubs
pushf
lds
xor
xchg
xchg
lock
adc
leave
mov
lret
arpl
fldl
testb
enter
lret
shrb
or
xor
lret
xor
push
lock
cld
mov
dec
repz
mov
es
clc
pop
dec
adc
inc
jns
daa
jl
lock
sbb
inc
cvtdq2ps
cmp
fnstenv
aam
movsb
lcall
mov
adc
pop
jo
lock
imul
cmp
mov
xor
lock
fcmovnb
cmp
jns
mov
lods
aam
pop
xchg
add
popa
lock
push
cltd
inc
sub
dec
insb
je
lock
dec
shll
lock
adc
ljmp
xchg
add
aas
push
lock
je
jne
enter
mov
loope
jmp
cmp
test
jg
sub
or
repz
les
pop
lock
lods
in
sub
pop
addr16
aaa
adc
jmp
xchg
push
aam
jo
addr16
pop
xchg
test
push
sub
test
lock
and
fidivrs
mov
hlt
sti
out
sub
ret
je
mov
dec
bts
icebp
dec
test
cmp
notb
mov
pop
rclb
int3
cmpsl
stc
pop
aam
and
inc
mov
xor
aaa
ds
mov
xchg
adc
rcrl
insb
add
adc
cmp
je
mov
lock
jb
lea
test
push
add
aad
lock
or
mov
pusha
or
imul
sub
mov
xor
adc
mov
adc
sbb
js
notb
sub
jl
pop
bound
pop
adc
lock
sub
sbb
lock
fs
icebp
lods
cld
jns
xor
std
sub
lcall
jae
xchg
scas
add
divb
int3
mov
push
xchg
xor
adc
cltd
lock
adc
lock
pop
jge
pop
push
cmc
and
in
mov
data16
mov
jo
sbb
ljmp
adc
out
adc
aad
cmpsl
lock
xchg
repnz
pop
sbb
aam
lock
adc
pop
jne
mov
in
jns
imull
int3
mov
ss
mov
lcall
movsl
fdivl
add
jp
mov
xchg
add
sahf
xor
je
out
divb
aas
push
out
mov
dec
lock
test
cmc
mov
pusha
mov
and
aad
lret
test
in
mov
pop
into
sbb
stc
push
mov
or
mov
jp
repz
nop
dec
sbb
and
frstor
lock
xchg
inc
dec
xchg
imul
adc
fwait
mov
addr16
xchg
lock
jnp
dec
pop
lock
adc
pusha
lock
fmull
and
cmovl
lea
mov
es
pop
sbb
mov
mov
int3
data16
test
sub
movsb
sub
xchg
xchg
sbb
jne
mov
lock
mov
add
mov
mov
inc
sub
ret
push
mov
mov
dec
pop
adc
push
pop
mov
mov
jo
and
push
pop
sbb
sub
mov
jnp
cmp
pop
cmp
je
mov
cmpsb
aas
push
cmp
pop
js
sbb
xor
mov
movsb
adcb
cmp
adc
adc
xorl
jnp
testl
and
push
push
mov
arpl
lock
int3
mov
lock
xor
mov
stos
jnp
stc
lods
mov
adc
pop
xor
adc
jno
std
pop
mov
out
idivl
ss
fwait
jo
and
and
ja
or
cmp
or
mov
stos
xchg
pop
sbb
js
test
out
jge
lock
test
sbb
mov
jo
sub
jecxz
hlt
repz
and
mov
jbe
pop
in
mov
xchg
cmp
stos
push
mov
or
adc
push
cli
je
sub
loopne
jne
loope
add
push
sub
jo
jmp
mov
xchg
mov
adc
bound
mov
mov
dec
imul
ss
test
sti
jo
popa
or
jp
sbb
xor
adc
out
icebp
adc
xor
in
ss
insb
adc
cmp
jl
fdivrs
cs
xchg
stos
push
or
jnp
stos
data16
lock
sub
sbb
adcl
sub
jo
lock
je
sub
stos
bound
testl
les
mov
jne
pushf
mov
xchg
adc
fisubl
mov
xor
pop
mov
sbb
movsb
ss
push
sub
sub
xchg
jp
mov
cli
pop
mov
lock
jne
addr16
xor
sbb
push
and
repnz
cmp
mov
mov
add
lock
ss
lock
mov
test
mov
movsl
sbb
mov
in
jnp
sub
fstpt
push
push
adc
ret
lock
stc
xchg
pusha
test
lock
jl
movsl
push
mov
push
ss
insb
stos
lods
ljmp
ja
jae
lods
stos
lock
mov
arpl
pop
loopne
push
sbb
mov
push
xor
dec
in
mov
das
loopne
jnp
je
jp
push
scas
lods
imul
ss
bound
mov
mov
xor
push
xor
bound
lock
add
mov
xchg
jne
push
push
and
cmp
fdivp
addr16
sbb
pushf
aas
add
daa
je
incl
aaa
stos
mov
xchg
sbb
setp
pushf
lock
mov
jo
mov
xor
repz
xor
enter
and
xor
push
jbe
into
lock
aas
cmpsb
xchg
repz
movlps
xchg
mov
aaa
cld
xor
rcrb
xchg
inc
sti
xor
repz
xor
aad
mov
ficoml
push
sbb
in
je
cmp
push
out
repz
and
pop
inc
sti
cld
mov
setbe
sbb
jg
loopne
pop
push
push
xor
cmpsl
adc
push
sbb
mov
lock
enter
lock
rclb
icebp
jecxz
jo
andnps
pop
cmc
data16
sbb
icebp
adc
adc
mov
call
mov
jnp
mov
add
cmp
mov
in
lods
cmp
lock
arpl
add
push
or
test
inc
push
fs
stos
aaa
ficoml
jo
mov
add
sti
lret
icebp
cmp
jecxz
lods
je
cmc
lock
hlt
push
and
fnstsw
lock
lock
mov
jecxz
lock
lahf
inc
sub
ljmp
dec
imul
arpl
mov
xchg
or
daa
mov
push
lcall
inc
imul
es
mov
xor
or
pop
sbb
mov
jo
and
inc
push
lock
push
movsl
int3
xchg
out
lock
test
sub
arpl
adc
sub
enter
or
les
mov
cmc
sub
imul
dec
fnstcw
lock
pop
inc
cmp
popf
jne
sub
adc
mov
cli
sbb
es
pop
or
cltd
cmc
mov
in
push
pop
lock
lds
cmp
mov
cmp
es
xchg
hlt
call
movlps
xor
xorl
xor
push
iret
inc
inc
mov
adc
push
xor
andb
cltd
push
sbb
mov
sbb
jle
int3
inc
pop
negl
nop
fdivl
and
das
mov
lahf
mov
jae
xor
dec
lock
pop
dec
sbb
lock
add
int
cld
ss
jo
push
mov
icebp
enter
aam
fisubs
test
sti
sbb
adc
or
mov
data16
cmp
dec
jne
mov
mov
rcr
push
std
ret
and
push
lock
push
outsb
xor
pop
popa
sbb
int3
adc
mov
icebp
jnp
adc
lock
or
popf
idiv
movsb
je
icebp
ja
xchg
sub
sbbb
lock
push
dec
aam
icebp
rclb
ss
xor
adc
shll
pop
dec
add
mov
or
or
jb
pcmpgtw
and
sub
adc
lock
adc
hlt
jo
aam
xor
cmp
or
or
int3
lock
push
adc
cli
sti
cli
adc
push
cmp
add
and
mov
xchg
push
and
aam
mov
and
sti
mov
inc
mov
sbb
and
and
mov
fldenv
stc
jo
in
pusha
je
lock
jl
iret
sub
pop
ss
js
test
or
and
test
and
inc
ss
add
and
jp
rcll
loope
nop
rclb
push
lock
push
and
adc
or
in
mov
inc
mov
lock
mov
xor
adc
in
aad
je
push
push
sbb
js
mov
pop
sbb
push
and
pop
jne
cvtps2pd
jns
push
or
cli
xor
icebp
mov
xchg
dec
pop
fwait
lret
nop
sti
nop
inc
pushf
pop
push
jp
fs
or
sbb
pop
mov
sbb
icebp
fwait
movsb
add
adc
fidivl
das
ds
orl
mov
mov
pop
jecxz
sbb
cmpsl
mov
iret
shll
in
insb
jg
lock
mov
jbe
mov
icebp
or
sbb
xchg
lock
add
jbe
pmaddwd
hlt
mov
enter
aad
sub
ss
adc
adc
jae
dec
or
push
push
pop
nop
icebp
test
rorb
adc
jae
cld
lock
loop
div
dec
aas
cli
push
popl
into
test
mov
adc
imul
scas
push
pop
call
lock
int3
repnz
mov
jp
and
cmpsb
insb
jl
jns
add
lock
push
mov
aad
stos
bswap
or
pop
mov
mov
mov
inc
ss
and
cmp
push
mov
pop
mov
jae
dec
cmp
cwtl
dec
fcmovbe
nop
sti
adc
out
ja
lock
xor
sub
jl
icebp
mov
stos
sub
je
fcmove
push
sub
mov
movsb
gs
mov
lds
les
and
orl
int3
mov
sbb
ss
iret
jp
lock
stc
adcb
aaa
mov
in
pop
scas
je
inc
adc
dec
push
jns
lock
cmp
out
rclb
repz
add
mov
or
shr
inc
mov
sub
fmull
aaa
and
lock
mov
lock
dec
insb
paddq
or
lock
ljmp
lock
xchg
mov
loopne
addr16
js
mov
dec
push
notb
jmp
pop
lods
popf
xor
sub
mov
lock
mov
xor
xchg
call
data16
cli
lock
mov
mov
dec
lock
jl
jns
out
je
icebp
add
adc
sbb
mov
test
pop
lea
clc
push
jg
sbb
arpl
js
rorb
mov
mov
fdivs
je
or
insb
arpl
mov
dec
jge
adc
mov
in
shl
lock
xlat
jl
cmp
ret
jnp
sub
and
mov
test
inc
or
push
and
dec
adc
cmp
lock
sarl
in
xchg
lret
sub
stc
sbb
ds
aaa
lock
test
test
popf
repz
int
pop
xchg
enter
jne
adc
sbb
movsb
fwait
jo
negb
outsl
lock
adc
push
sbbb
shl
push
je
or
lret
xor
jl
jecxz
movsl
cmp
and
dec
js
fisttpll
adc
fcoms
sub
mov
aam
bound
sbb
outsl
or
sub
pop
mov
lret
cmp
cmpsb
or
ret
lock
imul
push
adc
lock
stos
jbe
icebp
repz
lret
add
xchg
mov
aam
or
push
xchg
inc
mov
leave
fcmovnu
rep
dec
je
rcll
ret
xlat
lock
testb
jno
dec
adc
xchg
pop
sbb
pusha
repnz
movsb
mov
fstps
aam
jge
pop
hlt
sahf
imul
adc
jmp
andb
jge
sbb
adc
hlt
xor
and
imul
cmp
adc
cmp
jns
xor
lock
push
fistpll
lock
mov
jbe
jno
test
lods
fs
adc
mov
xchg
pop
lock
mov
xchg
cmp
lock
push
cltd
aam
fcomip
bnd
dec
sbb
es
out
sub
push
pushf
std
nop
movsl
lea
jg
and
out
bnd
dec
cld
stc
lock
adc
dec
ror
mull
arpl
sarb
lock
mov
icebp
lea
dec
and
sbb
dec
pause
loopne
ficomps
lock
test
js
push
adc
mov
cmp
test
cltd
mov
nop
pop
call
fldl
jne
int
rclb
sbb
out
lock
enter
ds
rclb
push
into
je
lock
xchg
add
out
lock
popf
stos
rep
je
addl
stos
push
out
lock
mov
or
mov
sbb
push
sub
pop
imulb
xchg
adc
into
fnstcw
call
je
jecxz
adc
aad
leave
cmp
mov
xchg
adc
test
pusha
mov
lahf
xor
sub
and
dec
sbb
lock
ffreep
dec
jp
in
xchg
in
mov
and
call
mov
mov
jp
xor
mov
and
dec
xchg
lock
icebp
lock
mov
pop
and
xor
enter
lock
jnp
and
push
xor
xor
xor
cltd
mov
push
jae
xor
jge
xor
test
mov
jg
xor
cmp
ret
jl,pt
in
lock
inc
nop
lock
fisttpl
fsubrl
lock
orb
and
cmp
pop
repnz
cltd
test
repz
xchg
shlb
add
adc
ret
cmp
cmp
lock
sub
mov
fwait
adc
pop
das
or
lcall
jnp,pn
sub
sbb
adc
xor
pop
add
inc
lcall
mov
xor
xchg
shrb
test
fs
dec
das
outsl
lock
in
lcall
mov
ss
fstpt
stos
cmp
idiv
out
adc
jl
sub
out
mov
and
scas
push
push
mov
and
mov
mov
dec
cmp
lock
xor
add
lds
jns
fidivl
lret
and
stc
repz
jl
mov
jns
cmpsb
xchg
imul
in
mov
bswap
jno
test
pusha
adc
xchg
lock
xchg
in
add
jge
imul
mov
roll
popa
xor
je
loopne
mov
inc
inc
lock
pop
jo
popa
jmp
mov
ljmp
xor
lods
lret
fcomi
int3
jae
sub
or
and
dec
ret
cli
test
rolb
push
divl
jo
dec
sub
cmp
mov
jbe
and
cmp
push
ss
lds
adc
jno
push
jmp
loopne
xlat
je
mov
or
dec
cltd
adc
xor
repnz
dec
sti
mov
pop
mov
jo
in
jp
hlt
pop
push
nop
fcomi
push
lret
fdivrl
push
add
jbe
lahf
push
xor
add
jns
push
mov
cld
stos
jmp
jecxz
test
cli
je
cmovae
cmp
sub
ss
xchg
jne
call
lods
mov
imul
lock
mov
mov
lock
pop
subb
mov
mov
mov
or
xchg
repz
jns
idivl
div
cli
stos
rclb
sub
fnstsw
jecxz
les
dec
lock
jne
popf
adc
xor
or
aaa
or
dec
icebp
sbb
cwtl
lock
dec
adc
aaa
es
xor
mov
sbb
lock
mov
lock
outsl
mov
lock
cmpl
notb
lock
fnstsw
push
pop
loope
mov
mov
aad
inc
mov
idivl
mov
jl
jae
lock
mov
mov
jo
jns
xchg
popf
xchg
stos
jne
cmc
shll
hlt
rclb
icebp
mov
cmp
xor
cmp
cmp
repnz
mov
jge
jne
cs
cmc
mov
lock
xchg
icebp
cmp
mov
jnp
and
gs
or
je
rcrb
mov
xchg
std
lock
sbb
popf
xchg
sbb
cmp
scas
jge
sub
push
in
mov
fsts
cld
mov
xor
lock
fmuls
mulb
push
movsl
or
push
mov
jo
push
xchg
lods
in
lock
int
pop
into
xchg
orb
sub
dec
rclb
or
mov
shlb
fwait
pop
lock
sbb
push
cmp
lahf
sub
mov
dec
jle
cmpsl
add
cmp
push
pop
jo
jl
jno
xor
std
fcomi
jmp
inc
xchg
jge
popa
mov
in
cmp
cs
mov
jge
jo
bound
clc
add
jmp
ffreep
inc
test
repz
rcl
call
lds
repz
nop
pushf
push
insb
test
mov
xchg
in
push
scas
mov
mov
adc
inc
jl
push
mov
jbe
mov
pop
jae
xchg
xchg
lds
aaa
sete
repz
fdivl
popa
inc
cmpsb
push
pop
and
xor
cld
add
outsl
lock
dec
cltd
adc
pop
push
mov
mov
lock
sbbl
xchg
pop
lock
inc
movsb
pop
out
std
pop
repz
cmp
push
push
enter
lock
pop
xchg
dec
mov
push
mov
sbb
shl
jmp
popa
xchg
lock
mov
int3
jecxz
stos
mov
xor
repz
push
mov
mov
cmp
sarb
xchg
mov
dec
mov
mov
inc
mov
fisttpl
xchg
hlt
iret
pop
inc
nop
aaa
test
filds
cmp
aad
dec
icebp
dec
mov
xor
cmp
sbb
dec
sub
cwtl
cmp
sub
mov
mov
lock
cs
lcall
scas
mov
icebp
adc
dec
dec
mov
push
aaa
fdivs
push
inc
int
rcrl
setns
std
addr16
cmp
lock
arpl
lods
jg
iret
jb
push
sar
pop
filds
and
divl
pop
call
add
test
fcoml
sbb
jge
addr16
and
std
fsubs
jg
or
loop
jbe
mov
mov
sub
mov
add
xchg
ret
out
push
shll
fstps
xor
mov
clc
push
jo
jo
push
idivl
aas
call
mov
lock
decb
dec
inc
push
cld
add
pop
cmp
push
pop
mov
jg
jns
icebp
inc
cmpsb
ret
cmc
pop
out
jmp
andl
inc
pop
lods
popa
mov
jle
xor
sbb
mov
mov
fs
mov
cmpsb
lock
add
mov
sub
push
lock
or
lret
in
syscall
sarl
lahf
scas
cmp
fwait
adc
add
roll
lock
popf
pusha
cmpsl
fwait
xor
fbstp
pop
xchg
xchg
push
lahf
jnp
jl
lock
ret
lock
pop
sub
push
pop
inc
jmp
sbb
xor
mov
or
ret
push
lock
popf
inc
push
repnz
push
pushf
lret
mov
sbb
leave
adc
dec
xor
or
inc
cmp
lock
lretw
mov
addr16
adc
sub
xor
sub
repz
lock
lock
cmc
adc
cs
roll
mov
pop
xchg
or
jo
into
adc
pop
push
add
iret
pop
jp
pop
ds
lahf
xchg
jnp
lock
out
ss
sahf
push
mov
push
push
stos
movl
jae
inc
mov
mov
testl
lret
mov
mov
outsl
jg
icebp
mov
dec
inc
sub
frstor
addr16
cwtl
addl
pop
cmpsb
mov
lock
inc
imul
sub
aas
fsub
sarb
jl
lock
mov
es
and
xchg
test
stos
data16
icebp
push
mov
mov
or
incl
je
sub
mov
push
mov
daa
mov
inc
xor
jno
fnstenv
cwtl
lock
lret
loop
jge
jo
in
ret
and
leave
fidivs
sub
pop
jae
orb
xor
mov
cmp
push
cmpsb
shlb
cwtl
inc
rcrb
test
lock
ficoml
hlt
xor
mov
inc
cmpsl
pop
loopne
pop
pop
push
inc
aas
xchg
outsb
lock
call
test
jp
mov
cmp
in
nop
out
rclb
or
or
ds
loop
into
adc
xor
outsl
dec
push
call
push
ror
lgs
lret
push
cld
mov
add
fwait
push
or
jmp
dec
jge
dec
out
xor
idivb
mov
sbb
cmpl
sub
pop
cwtl
jae
cmp
pop
loope
pop
or
mov
lock
mov
mov
lock
cli
jmp
cmp
xor
fildll
lock
xor
mov
add
push
int3
fldenv
lock
or
mov
rcll
int
aam
push
jo
shr
stos
mov
sbb
das
push
divl
mov
ja
or
sub
mov
add
popa
fidivs
addb
inc
testb
pop
adcl
add
or
jae
push
fmulp
lea
call
cmp
mov
mov
mov
mov
mov
leave
fisttps
xchg
push
mov
movsb
std
xchg
hlt
int
insb
and
clc
sub
dec
push
loope
ss
negl
pop
and
stc
mov
setns
mov
repnz
setb
inc
loopne
hlt
cmpb
mov
jmp
std
xchg
movsl
push
outsb
jl
mov
fsubs
mov
pop
incl
ret
decl
rol
popa
push
add
call
lock
int
lea
cmpsb
inc
in
lock
popf
sub
adc
and
fnstcw
add
jl
fst
fwait
cmp
fs
fcompl
cmp
je
pop
lock
jmp
data16
lock
ficoml
xor
pop
js
aaa
jg
call
sub
jo
enter
cmp
movsb
jae
ficoml
mov
shll
mov
adcb
push
mov
movsb
test
jnp
jo
xchg
xchg
call
mov
xchg
pop
imul
or
lock
bnd
or
mov
push
mov
mov
add
xor
cmc
repz
iret
gs
jb,pt
aas
xor
repz
sbb
mov
movsb
add
sahf
dec
outsl
std
insl
push
lock
mov
lods
mov
lock
pop
dec
mov
lock
adc
stc
jnp
lock
leave
or
test
push
sbb
inc
jbe
inc
mov
jp
popf
leave
test
sub
and
mov
cmp
loopne
cmp
daa
xor
xchg
iret
lock
icebp
inc
push
lock
mov
lret
popa
lock
adc
pop
lock
ljmp
adc
adc
stos
pop
std
lock
add
pop
cs
dec
leave
jg
lock
enter
movsb
pusha
fisttpl
fs
push
add
cmp
call
icebp
stos
outsl
mov
in
sub
push
or
les
clc
dec
jecxz
clc
dec
test
mov
adc
add
je
stos
jecxz
jle
and
inc
out
aam
lods
cmp
add
and
or
data16
ds
inc
call
jo
in
outsl
nop
jmp
movsl
push
jno
test
mov
sub
mov
repz
xchg
clc
call
mov
test
adc
mov
das
adc
sbb
push
imul
lea
sub
xor
mov
mov
cmp
push
jmp
hlt
mov
aaa
in
lock
loopne
or
xchg
mov
mov
testb
pop
fwait
in
jge
aaa
lock
cld
mov
mov
imul
sub
cmp
and
ficoml
scas
cmp
pop
rcll
cld
mov
sti
popa
xor
outsb
in
ret
mov
dec
xor
lea
repnz
stos
lods
add
mov
arpl
divl
pop
jo
pop
adc
call
repnz
sarb
jmp
popf
pop
mov
int3
mov
addb
inc
cmc
dec
mov
in
sbb
stos
pop
lock
or
or
xor
lock
out
scas
pop
movsl
ret
jo
mov
inc
aam
fiadds
in
std
push
sub
xchg
cs
pusha
pusha
incb
aam
inc
cmp
cmpsb
or
add
adc
pop
je
xor
and
and
pushf
lock
jle
sarb
mov
push
mov
in
int
sbb
movsb
movsl
cmpsl
icebp
mov
mov
or
loopne
push
lock
mov
fdiv
sub
push
xor
cmp
or
lcall
pop
lock
aas
mov
jbe
sbb
lock
sub
outsl
aas
and
test
xchg
f2xm1
insb
xchg
cmc
add
cmp
jg
lock
ljmp
mov
sub
adc
dec
mov
and
mov
add
xchg
les
and
adc
sbb
call
sub
packuswb
jge
std
jae
adc
in
out
dec
inc
cwtl
sbb
shlb
fstl
divl
push
and
jns
and
cmpsl
ljmp
push
push
sbb
ds
pop
idivl
test
fwait
imul
inc
sub
push
jg
data16
jl
and
mov
xchg
insl
es
out
sti
pop
and
pusha
out
paddusw
inc
or
rcll
lock
dec
mov
cmp
stos
decl
jb
aaa
loope
int3
adc
imul
mov
je
mov
int
add
icebp
mov
insb
fdivs
mov
jno
movsl
lods
pop
out
pushf
lods
adc
dec
ds
xchg
pusha
pushf
or
mov
or
cmp
jae
out
fcomi
cmp
cltd
hlt
dec
xor
inc
mov
popf
lock
enter
jmp
inc
lock
fld
lcall
pop
jp
inc
add
stos
push
insb
ret
sub
or
lock
sbb
sahf
pop
loop
lock
pop
mov
cmp
jmp
lret
push
adc
jno
jo
jmp
hlt
clc
sub
push
in
xchg
push
les
lock
jns
xor
adc
adc
add
mov
jmp
lock
adc
popf
inc
sbb
mov
nop
mov
push
sub
xor
ss
xorb
cmp
push
mov
xchg
das
lahf
outsb
fwait
in
dec
mov
push
pop
mov
movsl
iret
mov
lock
fwait
xchg
popa
mov
stc
lret
test
mov
lock
addr16
clc
arpl
pushl
cmp
popa
and
push
icebp
iret
mov
sbb
mov
imul
cmp
jns
popf
xchg
pop
movsb
push
mov
out
sub
ljmp
xlat
mov
xchg
mov
mov
icebp
rcrl
gs
cwtl
icebp
cmp
popf
mov
icebp
out
sahf
cli
dec
xchg
orb
or
arpl
lea
call
std
addw
push
mov
std
dec
test
inc
jbe
dec
adc
loop
das
cmp
mov
inc
push
ret
push
icebp
clc
cmp
mov
cmp
aas
pop
dec
aam
jbe
or
push
cld
cmp
clc
mov
inc
xchg
je
push
mov
call
add
mov
outsb
into
hlt
out
or
js
or
sub
cld
xchg
rclb
outsl
aad
cmp
sbb
hlt
mov
xor
xor
push
mov
imul
xor
sub
and
pop
inc
lock
pop
push
mov
clc
mov
dec
and
aas
shl
and
sti
inc
stos
jle
push
shl
gs
fsts
xchg
dec
cmp
adc
xchg
popa
repz
ljmp
sar
sbbb
ret
mov
ret
paddq
cmpb
mov
test
sahf
xor
xor
imul
xorb
jb
or
loop
mov
addr16
cwtl
lock
push
mov
lock
mov
push
sbb
cmpsb
pop
add
stc
call
adc
rcll
cltd
aad
sbb
xchg
std
call
mov
or
in
imul
in
lock
ret
test
and
test
aaa
lock
pop
pop
lock
cmp
add
lock
mov
xchg
xchg
ss
jo
icebp
popa
icebp
flds
mov
enter
sub
stos
psadbw
and
pop
jo
dec
test
push
fsubl
xchg
pop
jnp
frstor
shl
leave
xchg
lahf
outsl
mov
gs
clc
insl
push
cwtl
add
outsl
dec
xchg
mov
xorl
push
out
bswap
add
mov
loop
pop
shr
dec
shl
shlb
dec
mov
cmp
jbe
mov
mov
xchg
popf
xor
mov
cmp
in
clc
push
bound
int3
insb
lock
test
movsb
lret
sarl
into
jmp
mov
rol
jne
dec
mov
push
jmp
push
sub
lret
sbb
mov
test
mov
adc
pop
lock
rcrb
and
outsl
pandn
or
sub
imul
lods
mov
lock
loopne
mov
xchg
mov
lock
leave
sub
pop
adc
xor
ffreep
pop
test
cltd
std
cwtl
inc
add
and
jo
mov
dec
into
sub
outsb
pop
sub
lock
dec
add
mov
sub
push
push
fcoms
fidivl
push
mov
push
lock
jnp,pn
pop
inc
pusha
lock
mov
call
mov
xchg
cmp
into
pop
pop
inc
call
push
push
dec
or
inc
jmp
cltd
jno
test
sub
lods
xor
jae
sahf
ds
shl
adc
and
ss
sub
mov
push
dec
xor
adc
cmp
pop
fs
dec
ret
pusha
out
lock
mov
iret
in
insl
aam
lock
aas
imul
pusha
popf
in
in
fidivrs
cltd
adc
pop
mov
adc
lock
lods
in
pop
imul
cmp
or
xor
in
fnsave
push
xchg
inc
ret
ret
arpl
sub
bound
stc
jno
nop
dec
stos
icebp
inc
lock
mov
mov
pop
hlt
dec
insl
push
cmp
push
lock
aad
cmpsb
scas
ss
lock
xchg
out
inc
fs
icebp
push
cmp
call
lock
push
mov
div
xor
outsl
mov
mov
lock
mov
test
adc
ds
lods
add
and
xchg
mov
lahf
or
pop
scas
je
lret
rclb
sub
call
mov
xchg
enter
pop
xlat
adc
pop
mov
mov
adc
jle
pop
lock
iret
hlt
mov
mov
leave
sarb
mov
lock
cmp
mov
inc
inc
lcall
sub
mov
add
rclb
lock
arpl
dec
mov
dec
cli
dec
aas
test
inc
icebp
clc
jp
out
cmp
shr
mov
mov
ret
int3
or
cltd
lock
lock
out
icebp
shl
es
jg
jo
orl
jp
jp
sub
inc
xchg
js
clc
pop
nop
div
in
bound
sbb
lock
jge
cmc
sbb
xchg
push
mov
cld
mov
lods
imul
cmp
lock
xchg
sbb
or
xchg
cmp
lock
in
icebp
addr16
jne
push
cmc
mov
cli
jo
add
jmp
push
insb
mov
or
xchg
insl
pop
jae
push
xor
dec
lock
aas
cmp
in
and
mov
sbb
or
fdivs
adc
mov
loopne
or
hlt
frstor
mov
dec
mov
lock
cmp
push
jmp
ret
mov
cs
add
fidivs
sbb
call
inc
mov
js
lock
fmull
gs
and
cld
xor
test
mov
lock
dec
mov
das
popf
cmp
cli
push
jne
inc
cld
mov
jp
shlb
outsb
and
lock
cmp
es
jmp
data16
fists
int
aaa
aam
jo
je
imul
dec
lock
mov
sahf
xor
repz
sar
in
in
test
mov
push
mov
sti
cmpsb
out
sub
pop
mov
or
div
lret
mov
jmp
or
inc
stos
mov
fs
xchg
push
sarb
out
fiaddl
int
push
push
ret
push
push
sbb
mov
repnz
cmp
in
stc
lret
scas
mov
and
lahf
icebp
shrl
cli
jns
xor
add
lret
xor
sub
sarl
mov
lock
inc
adc
out
lahf
lock
test
mov
xchg
sub
dec
imul
enter
insb
jnp
scas
subps
lock
jle
adc
in
repz
jbe
push
enter
repz
leave
sahf
js
ret
out
stos
or
lock
inc
push
imul
das
iret
wrmsr
test
mov
movsb
xor
mov
pushf
sbb
hlt
or
adc
cmc
mov
mov
test
popf
in
xbegin
pop
push
pop
jnp
es
movsl
xchg
pop
gs
das
push
lock
addr16
or
mov
pop
addl
shl
insb
data16
lock
mov
ja
xchg
sub
lock
imul
xchg
in
mov
mov
dec
cmp
popa
mov
push
lcall
xor
mov
inc
icebp
ret
add
mov
or
test
cmp
sub
mov
lock
xchg
inc
pop
push
add
lock
scas
jecxz
xor
sbb
mov
iret
add
fmul
fcomps
lcall
cmp
dec
out
push
jnp
pop
repnz
mov
and
xchg
int
pusha
aas
shl
mov
lock
in
pop
jle
jecxz
lock
in
loop
add
in
cmp
adc
into
out
movsb
jne
sar
or
inc
shll
and
jle
mov
dec
inc
mov
mov
imul
add
imul
insb
call
xor
lret
push
sbb
icebp
scas
lock
int3
cld
mov
lock
movsl
add
jmp
stc
pop
imul
rcrb
mov
mov
add
push
dec
push
add
mov
inc
je
jo
mov
xor
adc
adc
int3
sbb
adc
pop
xchg
enter
jmp
push
sub
mov
push
popf
fmull
mov
rol
icebp
outsb
cmp
xchg
sub
idiv
repz
sub
jmp
fldcw
mov
lock
repnz
push
lock
sub
in
rorl
dec
fbstp
lods
xchg
mov
ss
lcall
jns
aad
lock
ja
adc
jp
icebp
lock
mov
lahf
stos
lock
mov
push
cld
arpl
and
lret
rcll
inc
aad
es
add
enter
jno
jmp
scas
je
int3
cmp
fisubs
faddl
inc
loope
lock
subl
scas
mov
xchg
add
das
out
shr
sub
out
pextrw
jbe
cltd
fistl
sbb
xchg
sub
cmp
ror
movsb
push
push
lock
shl
lock
ljmp
repz
pause
add
sahf
lock
out
fstpl
lret
jae
and
lock
mov
lock
push
rcll
mov
cmpsl
jmp
sub
jno
jns
cli
adc
cmp
sbb
xor
insb
cltd
das
mov
clc
test
repnz
cli
cmp
ret
lock
fnsave
push
mov
mov
cltd
and
shl
std
int3
jg
xchg
pop
scas
mov
call
lret
inc
mov
mov
clc
icebp
iret
aam
and
mov
lret
ja
cmp
jbe
or
adc
ret
mov
cmp
mulb
jmp
or
push
out
aas
jge
xchg
es
jecxz
push
jnp
jo
sbb
mov
mov
cmp
and
push
repnz
or
popf
testb
mov
icebp
dec
add
add
push
cltd
in
push
xchg
hlt
iret
in
adc
mov
push
lods
imul
lock
push
imull
mov
lock
mov
fdecstp
jle
and
mov
outsl
xchg
fdivp
pop
mov
or
mov
jb
rcrl
sbb
push
push
stos
call
cmp
scas
iret
test
fwait
loop
sub
outsl
adc
in
jp
jne
and
mov
test
dec
repnz
ja
jno
and
or
xor
test
xor
sub
popf
rcl
sub
and
dec
xor
cwtl
or
loopne
sub
cmpxchg
or
lock
mov
pop
mov
inc
push
insl
movsl
jne
aaa
lock
dec
dec
cmp
mov
je
ss
adc
push
clc
rolb
jnp
out
ret
lock
or
icebp
cs
jl
in
push
hlt
mov
lock
or
cwtl
int
adc
ljmp
xchg
cmp
lock
fwait
mov
cmp
out
test
cmp
stos
jno
or
lret
shrl
mov
push
pop
pop
testl
lret
push
mov
imul
lar
sub
repnz
sar
mov
in
ret
out
sbb
mull
and
cwtl
mov
dec
xchg
adc
add
adc
xor
or
clc
sbb
in
fldl
test
mov
dec
add
bound
sti
icebp
test
push
mov
scas
nop
dec
mov
mov
cli
sub
sti
outsb
mov
stos
icebp
rorl
clc
repnz
sbb
loop
or
sahf
loop
push
lea
mov
pop
xchg
mov
mov
test
jo
mov
lock
inc
xchg
lock
and
ja
fwait
inc
scas
int3
xor
inc
nop
inc
mov
mov
mov
xchg
xor
lock
pop
inc
rcrl
in
or
sti
dec
insb
shlb
xor
mov
jo
inc
mov
jmp
ss
xor
in
or
nop
sbb
adc
adc
xor
sahf
xor
push
xchg
jo
sar
push
icebp
dec
jnp
mov
rclb
cmp
dec
xchg
in
and
insb
xchg
mov
cmp
push
cmp
mov
int
add
lock
mov
clc
inc
lock
cld
js
addl
sbb
mov
lock
adcb
fwait
popa
aam
mov
and
movsb
and
insb
icebp
adcl
xchg
movsl
fmul
fs
lock
pushf
jl
in
mov
hlt
adc
je
out
js
fwait
jb
pushf
rolb
and
pop
mov
sub
jmp
dec
sub
inc
jns
jo
call
pop
clc
xor
xchg
add
je
dec
int
add
push
popa
xor
mov
int3
out
das
sub
ficoml
leave
push
xor
shlb
dec
out
popa
xor
out
xor
movmskps
stc
aaa
sbb
loop
arpl
je
push
adc
pop
jne
lock
inc
enter
rorl
aad
xchg
clc
sub
ja
imul
mov
jae
dec
rorb
push
and
scas
aad
jno
outsl
and
leave
iret
mov
push
pop
ljmp
fadd
leave
ror
mov
pop
add
mov
sub
ret
or
sub
leave
mov
ret
movsb
call
out
xor
or
mov
push
andl
sub
pop
push
lock
sbb
mov
and
jg
cmpsb
test
cmp
js
xchg
dec
add
xor
push
adc
mov
pop
lock
and
push
sbb
icebp
inc
fwait
sub
scas
and
xchg
mov
mov
pusha
lock
mov
mov
pop
pop
mov
es
lock
cli
sbb
pop
int3
xor
sar
lock
lock
adc
out
lock
cmc
pop
cs
inc
sub
cmp
jo
mov
andl
mov
pop
in
lock
repz
fmuls
xorl
inc
lods
add
jne
jns
mov
stos
lock
jbe
loope
push
scas
lock
std
adcl
mov
xor
inc
in
mov
cmpb
cmpsl
loopne
cmp
mov
out
sarb
push
jb
clc
push
shr
mov
or
push
lock
pop
cmp
popa
or
mov
mov
xor
in
lock
add
jl
lock
adc
sbb
cmpsb
movmskps
mov
incb
xor
icebp
lods
inc
jmp
and
jg
pop
aam
pop
lock
sbb
loope
iret
sahf
cmp
pop
divl
repz
cmpsl
ficoml
xor
call
pushw
add
dec
lcall
lock
xchg
mov
push
jmp
cs
test
fs
push
xchg
mov
ret
pushf
sbb
cmp
rorb
ds
jl
lock
push
enter
jnp
repnz
test
add
cmp
jae
je
mov
jmp
lea
xchg
stc
cltd
loop
lret
jo
and
cmp
add
shl
or
mov
xchg
push
cld
shrl
lock
xlat
cmp
inc
jne
mov
mov
add
lds
push
dec
test
or
pop
and
xor
xchg
sbb
sbb
push
lock
and
test
in
push
push
stos
daa
lock
je
xlat
add
push
outsl
jmp
jmp
push
and
lock
sbb
xor
nop
push
mov
shlb
movsb
push
lock
insb
lock
mov
nop
pop
push
aam
clc
inc
rolb
pop
fnstenv
and
lret
or
xchg
mov
push
cmc
in
inc
hlt
push
push
ds
xor
jp
fbstp
pop
lods
cmc
rolb
ret
rep
lock
or
std
sub
mov
adc
leave
in
repz
mov
cli
or
sbb
or
mov
rcrb
out
cs
push
stos
hlt
lock
xor
inc
mov
clc
mov
mov
push
xchg
popa
in
adc
jo
jo
mov
lock
or
pop
lock
mov
aaa
lcall
repnz
mov
add
mov
pop
adc
fnstenv
jne
stos
lock
jno
push
jns
pop
stc
cli
cmp
mov
mov
popf
lret
out
inc
movsl
fwait
xchg
xchg
push
jnp
cmp
pop
jo
mov
jge
push
or
mov
jbe
jo
sbb
hlt
cmc
jo
faddl
lock
cmp
cmp
xchg
cli
out
lock
sub
cmp
inc
daa
xchg
ficoml
clc
cmp
ds
add
adc
fsubrl
cmp
lock
aam
xchg
lods
xlat
pop
push
out
mov
push
call
and
cli
or
pusha
cmp
adc
shr
lock
xor
leave
mov
iret
rolb
adc
fimull
mov
popa
outsl
aaa
in
icebp
inc
and
fisubrs
pusha
in
push
jp
or
int
fwait
cmp
ficoml
je
push
outsl
pop
imul
xchg
in
jp
cwtl
adc
incl
es
lods
adc
ficoms
cmc
push
sarb
pop
lock
clc
in
aad
ds
xor
sub
cmp
das
mov
dec
push
lock
mov
je
mov
pusha
or
repz
cmp
fst
mov
jle
lock
insb
add
push
mov
jl
je
mov
sbb
xlat
icebp
push
js
jns
lock
jmp
push
adc
in
loop
inc
fwait
xchg
fildl
lock
int3
into
push
aaa
leave
pop
bnd
dec
sub
lock
mov
xchg
sbb
lock
outsl
repz
or
shlb
or
lock
mov
test
add
jecxz
in
mov
cmp
dec
mov
lods
ret
je
push
or
lock
inc
dec
xlat
out
lock
out
sti
loopne
lock
pop
adc
dec
cmp
fwait
pop
out
cmp
aad
cli
jge
adc
cmp
jns
repz
andnps
jg
cmp
leave
pop
push
and
test
or
in
sub
mov
sbb
insl
lock
jecxz
inc
mov
cltd
sub
enter
xchg
mov
fcmovu
inc
and
dec
rsqrtps
push
repz
add
sub
lock
insb
aad
mov
testl
cltd
or
lock
scas
jmp
and
mov
or
out
lock
cmp
fcomip
cmpsb
pop
nop
mov
popf
shr
xor
fmull
js
lock
jns
outsb
ds
shlb
scas
pop
cmp
cmp
pop
movl
dec
add
xchg
idivl
cmp
and
in
pop
insb
jbe
lret
xor
xchg
cld
movsb
sbb
pusha
ds
inc
out
cmp
lock
xor
pop
mov
test
push
cwtl
xor
dec
inc
inc
lock
push
mov
mov
lret
dec
mov
les
fld
adc
sub
repnz
pop
in
es
cmp
xchg
mov
add
lock
mov
mov
lock
lods
and
in
pop
push
add
pop
push
aaa
jl
sti
xor
std
cmp
jnp
arpl
je
nop
pop
lret
inc
sbb
fdivrs
lock
mov
repz
inc
lock
aaa
negl
and
in
lock
movsb
repnz
lock
fs
iret
xor
test
outsb
loope
jbe
mov
gs
sub
inc
lock
lret
lahf
int3
dec
lock
sub
test
int
mov
mov
lock
cli
push
xchg
daa
and
lea
lock
cmp
inc
lock
addl
divl
outsb
nop
test
and
sbb
add
jg
nop
mov
mov
pop
cmpsl
je
mov
pop
lock
adc
jae
cmpsb
push
xchg
ss
lods
lock
add
lock
mov
cmc
xchg
or
or
push
and
jecxz
or
or
mov
lock
push
mov
lret
clc
ja
add
xchg
inc
pop
aas
sub
cmp
adc
add
pop
clc
cmp
icebp
push
jno
xchg
add
jns
push
push
stos
mov
xor
clc
sbb
je
daa
imul
and
lock
mov
test
cmpsb
xlat
xchg
arpl
or
xchg
inc
rcr
ret
icebp
pop
outsl
in
dec
pop
sbb
sbb
shl
jmp
lret
fs
popa
arpl
arpl
hlt
rclb
pop
inc
add
sahf
cmpsl
addr16
setg
xchg
movsl
outsb
stos
sbb
dec
clc
add
popa
call
add
sbb
cmp
jge
and
xor
fldt
dec
adc
pop
mov
mov
and
arpl
pop
das
into
mov
fucom
out
mov
mov
mov
in
sbb
out
dec
lock
xor
xchg
jge
lcall
loopne
je
ret
fdiv
loop
cs
xor
sbb
test
imul
xchg
repz
mov
loop
pop
pusha
push
pop
cli
cmp
or
mov
imulb
or
push
clc
push
cmp
cmp
pop
jno
mov
lock
es
push
cmc
stos
or
lock
std
clc
cmp
mov
add
outsl
idivb
repnz
mov
fbstp
and
cmp
mov
loope
pop
cmc
xor
or
adc
shl
call
out
add
aaa
add
lock
fldcw
dec
clc
lock
out
lock
fistpl
outsl
arpl
lock
jne
movsl
inc
loop
lock
cmp
mov
dec
push
icebp
mov
repnz
add
rorb
popf
scas
lods
lock
mov
adc
dec
mov
out
in
incl
and
mov
popf
mov
aam
or
sbb
inc
pand
ja
xchg
inc
dec
add
jg
or
adc
jnp
in
push
call
lret
or
dec
pop
rclb
sahf
dec
sub
inc
je
iret
xchg
sub
loope
pop
jecxz
les
sbb
sbb
outsl
repz
push
mov
adc
mov
loopne
jb
sub
movsb
shlb
and
movl
mov
fwait
clc
and
jbe
insb
cmp
das
add
sub
test
xchg
mov
xor
daa
pop
std
sbb
push
and
aad
ljmp
mov
sbb
or
push
icebp
bound
push
xchg
cmp
add
es
icebp
cwtl
xorb
stc
shll
and
push
and
cwtl
adc
and
pop
aas
xchg
mov
repz
bswap
sbb
push
data16
icebp
push
adc
adc
sbbb
cmp
and
mov
mov
sbb
push
push
lahf
mov
push
sub
sbb
xchg
cli
sbb
cld
mov
adc
or
stc
mov
mov
cmc
repz
lods
xor
fmul
dec
outsb
movsl
lock
mov
xor
and
and
push
sbb
add
lret
loopne
iret
jns
sub
jo
and
mov
jmp
scas
add
cmpsl
mov
mov
or
and
mov
and
jae
xor
pop
push
arpl
mov
sti
out
jae
mov
lea
inc
adc
sbb
and
xchg
mov
int
and
nop
and
jmp
sbb
popa
adc
das
xchg
jno
insb
sbbl
mov
sub
imul
fists
popf
stc
push
push
hlt
or
movsl
mov
test
call
inc
jne
inc
adc
sub
push
cmpsb
outsb
pop
mov
int3
or
rcll
and
sub
mov
jle
lcall
ds
or
pop
inc
sub
cmp
movsb
lret
cli
jl
lock
mov
mov
addr16
leave
aaa
mov
ret
add
mov
xchg
xlat
cmc
lea
push
loope
fnstenv
std
clc
or
clc
loopne
mov
and
or
fmull
inc
test
mov
loopne
sub
mov
out
sbb
dec
mov
xchg
sti
xchg
pop
xchg
hlt
jnp
pushf
out
mov
rcr
push
xlat
nop
das
and
dec
repz
inc
dec
xchg
lock
nop
xchg
xchg
inc
mov
mov
dec
xor
push
fucomp
jmp
add
or
push
lahf
pushf
ficomps
sbb
fwait
xchg
lock
ret
jae
cmpsb
repz
jge
push
add
es
test
mov
daa
jo
mov
es
jo
test
jo
xor
cmp
fdivrl
adc
loop
lock
push
inc
mov
xchg
out
lret
jo
or
test
js
loope
pop
cmp
lret
clc
sub
mov
daa
shl
xlat
mov
mov
int3
sub
add
cltd
sbbb
mov
cltd
or
lea
mov
add
sub
lock
mov
push
clc
lea
sbbb
jbe
or
rol
sbb
daa
les
std
adc
mov
and
cwtl
icebp
into
push
lods
mov
or
int3
sub
sbb
and
std
call
in
or
outsl
addl
clc
mov
dec
in
sub
insb
xchg
subb
mov
mov
into
bnd
lret
xchg
fmuls
sbb
dec
mov
mov
test
loope
movsl
add
call
in
stc
pop
and
das
imul
lods
loopne
cmp
aaa
inc
sub
fsubr
adc
inc
sub
loopne
in
inc
push
mov
mov
pop
shll
arpl
shrb
mov
inc
mov
jmp
sub
repz
test
cmpsl
aas
xor
jl
fwait
mov
jbe
and
sbb
ds
lcall
lock
pop
cmc
lock
inc
test
or
dec
lock
loop
nop
and
sbb
add
jl
xor
icebp
scas
xor
nopl
xchg
ss
cmp
xchg
xchg
cmpsl
repz
cmp
push
insb
jg
into
jp
mov
mulb
xchg
pop
jne
loopne
adc
jmp
icebp
cmpsb
dec
jno
adc
lock
mov
inc
inc
imul
iret
dec
xchg
sbb
lock
adc
xor
mov
add
lds
stos
lock
mov
cmp
inc
mov
lock
sub
jo
movsb
cmp
mov
mov
push
leave
rep
pop
pop
add
cmp
or
inc
push
cli
mov
cmpsb
loopne
push
jnp
sub
adc
lock
sub
lcall
out
test
push
mov
xor
aam
add
inc
jb
js
icebp
aas
out
jno
lcall
clc
out
mov
int3
leave
dec
push
mov
ret
test
fildll
inc
push
sbb
aad
jo
cli
mov
sub
in
or
aad
push
and
movsl
dec
lcall
cli
loope
jmp
jns
rol
pop
in
mov
lret
jbe
fdiv
subl
mov
mov
mov
shl
or
cmpsb
lock
push
scas
inc
outsb
aad
cwtl
out
mov
js
pop
add
push
mov
pop
xchg
hlt
into
lock
bound
shl
jbe
shl
negb
push
and
or
out
fwait
icebp
mov
adc
loopne
std
hlt
and
push
lock
xor
push
mov
fs
mov
fstps
or
mov
imul
cmc
push
jecxz
jnp
lock
fdiv
jno
out
repz
dec
cmp
push
xchg
dec
shlb
addr16
mov
mov
fcomip
iret
pop
jmp
or
ja
push
pop
sbb
inc
xchg
jg
or
cld
inc
inc
repnz
pop
rclb
push
imul
xor
lock
insl
mov
lds
sbb
andb
pushf
rcll
mov
inc
xor
int
mov
je
pop
push
std
push
jno
filds
sbb
lock
lahf
in
mov
cli
adc
and
fidivl
adc
add
jo
pop
mov
and
xor
in
cmc
adc
dec
add
sub
aam
push
mov
lock
lret
pop
out
or
or
sub
nopl
and
cmp
int3
mov
outsb
ret
fistpll
ljmp
std
iret
add
mov
pop
fnsave
mov
mov
call
cmc
jno
or
in
push
cmpsl
stos
int3
jo
push
dec
mov
adc
das
test
jecxz
jmp
cmpsl
xor
mov
ret
cmp
adc
repz
sub
daa
and
adc
adc
movsb
jl
fwait
hlt
inc
cmp
inc
mov
in
hlt
xchg
lock
lods
cmpsb
scas
out
sub
rcll
xor
bound
adc
lock
scas
movsl
sub
nop
mov
mov
addr16
add
loop
pusha
sbb
js
cld
loope
cld
mov
mov
movsl
ss
or
or
sti
loope
sub
divl
inc
js
add
jmp
lock
cmpsl
inc
rcrl
lahf
lock
mov
test
lock
adc
or
mov
imul
arpl
lock
cmp
push
fimuls
cmc
dec
xlat
adc
cmp
scas
push
pop
icebp
stc
int3
cmpsb
repnz
in
popf
repnz
pop
sub
in
lock
mulb
incl
rclb
cmc
jl
sbb
inc
mov
mov
loopne
mov
call
loopne
fsub
in
cmp
xchg
pop
cmp
jo
inc
lret
or
repz
cmc
xchg
xor
dec
push
out
xor
pop
icebp
shl
popa
xchg
int3
fcomip
mov
lock
cmpsl
and
rcrl
data16
sahf
mov
inc
jge
dec
mov
enter
jbe
je
repnz
mov
jmp
cwtl
cmp
in
adc
jo
pop
imul
xchg
pop
and
jae
fbstp
cli
push
rorl
nop
fwait
push
mov
cmp
pop
mov
sub
cltd
lock
cli
xlat
jno
jo
lods
lock
mov
mov
je
inc
lock
xor
adc
fsubr
pop
jbe
repz
imul
call
cmp
mov
xchg
loop
icebp
xor
jo
out
pushf
sbbb
push
in
push
dec
push
push
and
repnz
push
rcrl
inc
xchg
cld
insl
lahf
jns
mov
jb
mov
sub
testl
in
push
andl
lock
mov
cmp
leave
div
cmp
pop
rorl
je
inc
int
rep
movsb
push
jbe
lahf
stos
xchg
fistpll
or
push
loopne
push
rolb
xor
pop
lea
mov
add
notl
mov
mov
nop
push
in
leave
dec
insb
ja
lcall
shrb
scas
add
mov
sbb
adc
test
mov
push
fstpl
in
popa
enter
adc
cmp
lock
xor
jg
lock
adcb
rcl
lock
loopne
cmpsl
and
xor
mov
mov
aam
divb
mov
and
pop
arpl
dec
lock
xor
lock
movsb
xchg
mov
fisttpll
jle
mulb
xor
jge
lock
push
dec
sti
mov
fcomip
sbb
ljmp
cltd
xor
or
enter
imul
call
inc
ret
push
jmp
pusha
pushf
xor
icebp
je
arpl
xchg
and
inc
and
clc
stc
std
xor
lods
mov
jno
fdivrs
or
lods
adc
or
mov
mov
mov
out
aas
pop
fsubrp
lock
pushf
mov
call
pop
jno
loop
xor
cld
pop
and
mov
sbb
int
jmp
mov
mov
data16
jl
insl
xor
gs
rorb
xor
cmp
iret
or
pop
dec
sub
mov
or
cmp
xor
inc
and
xor
out
or
xor
mov
stc
push
divb
fmuls
push
mov
nop
sub
enter
or
push
and
bnd
mov
or
push
push
fdivr
xchg
call
lock
rolb
ret
xor
xchg
in
lock
jmp
or
dec
xchg
addr16
lret
xor
les
dec
lock
repnz
out
pop
push
lods
adc
inc
push
test
pop
stos
ljmp
out
stos
aam
jge
sub
sbb
nop
add
rcrl
lahf
and
inc
and
push
and
mov
mov
and
dec
lahf
imul
jnp
fidivl
jae
call
push
jle
lock
xchg
cli
pop
gs
xor
lock
dec
dec
dec
sbb
push
and
js
mov
rcr
jmp
fldl
adc
jns
icebp
out
loop
sub
or
adc
lock
les
mov
cli
mov
fst
pop
ds
lock
dec
mov
notb
dec
lock
lods
imul
lock
in
sbb
push
xchg
pushf
in
lock
loop
mov
call
add
jle
pop
or
insl
xor
sub
or
std
adc
andb
mov
jg
or
dec
mov
mov
icebp
mov
call
cmp
pop
pusha
aaa
add
mov
xchg
lret
xor
jo
fstpt
cmp
mov
sahf
fimull
test
cld
mov
mov
and
lock
jo
adc
jbe
jmp
cmp
cs
jne
xor
test
loope
ds
addr16
jmp
pop
jns
cmpsb
cmc
cmp
jo
mov
lods
imul
lock
addr16
or
inc
lock
pop
mov
push
fildll
xchg
out
test
add
sub
fs
lock
call
xchg
lret
adc
xchg
mov
or
jmp
clc
test
xchg
daa
fscale
add
sub
lods
xor
lock
adc
or
mov
out
mov
lock
xchg
adc
sub
sub
inc
xor
rcrl
out
sti
inc
and
lods
adc
sbbl
lock
and
pop
aad
mov
lock
pop
fmuls
lret
add
mov
mov
hlt
sysenter
pop
aas
and
add
ds
cmp
jne
add
cs
pop
stc
jp
lock
adc
mov
jo
sti
lock
xchg
lock
lea
dec
lock
jns
lock
cmp
inc
clts
or
mov
jnp
mov
das
lds
dec
inc
add
inc
fstl
imul
cmp
adc
jg
dec
cli
or
dec
lock
shlb
cmp
lock
mov
lock
fcmovu
movsb
fwait
pop
push
clc
repz
das
lock
cmp
lods
fmul
lock
pop
jmp
lret
je
jne
lock
lea
shlb
push
and
fstpl
fistpl
cmc
dec
mov
loope
jns
inc
inc
je
lret
pop
cli
jb
mov
fdivs
lock
mov
rorl
add
and
jns
mov
push
mov
xlat
xor
in
call
push
sub
pop
dec
lock
xchg
add
jne
adc
push
ret
jo
out
shll
fstpl
sbb
xchg
out
and
adc
push
mov
or
or
xchg
push
jo
adc
movsb
paddusw
ffreep
xchg
or
test
imul
jae
repnz
xor
outsl
sarb
or
push
cmc
call
mov
in
mov
fidivrl
out
lock
mov
or
lock
cmp
pop
lock
mov
push
lock
jne
sbb
out
lock
push
add
or
test
leavew
xor
cmp
mov
aas
in
cld
and
rclb
pop
push
adc
hlt
ss
lcall
imul
mov
xchg
sti
jns
fwait
mov
jecxz
and
dec
jp
lea
divb
addr16
mov
jne
dec
push
out
lock
mov
lock
out
xchg
lods
imul
xchg
cmp
lods
sti
push
jl
push
inc
mov
xor
repz
nop
mov
lock
enter
ficoms
icebp
xor
lea
imul
lds
jnp
or
or
movsb
lock
ja
inc
pop
mov
clc
push
lock
pop
xor
popf
icebp
sahf
add
in
leave
sub
add
inc
icebp
sbb
pop
xor
pushf
and
div
push
dec
clc
xchg
adc
cmc
lds
adc
rorb
lock
xor
jns
xor
rcll
inc
mov
stos
dec
xchg
lock
les
inc
xor
pmaxsw
cmc
xor
std
into
cmpsb
xor
mov
pop
sbb
push
notb
arpl
test
fsubl
xor
sbb
lock
jns
aad
cmp
cmpsl
lock
sub
lock
xor
test
dec
xchg
mov
mov
jp
mov
mov
lock
sti
lds
lret
lock
or
cmp
jge
mov
pop
movsb
sbb
es
lock
cmp
xor
aam
mov
dec
lock
les
leave
push
mov
cmp
push
pop
and
xor
sbb
aas
sbb
js
mov
adc
icebp
ret
and
mov
lock
cmp
adc
add
in
lock
jp
adc
nop
or
inc
mov
into
loope
cli
lock
xchg
jp
sub
lock
mov
ds
negb
xor
mov
pop
adc
sub
sbb
jo
jb
jno
jge
js
fbstp
push
insl
dec
aaa
lcall
decl
cmpsb
jnp
scas
pop
lretw
out
loope
clc
add
mov
mov
cmpsb
fsubl
out
lock
adc
push
or
lock
jo
lea
out
insb
dec
push
adc
cmpsl
mov
adc
repz
xchg
xchg
lret
push
inc
aam
and
sbb
sub
jo
xchg
std
and
add
push
mov
jo
lea
jbe
pmullw
and
xor
fdiv
shll
sti
movsb
into
clc
inc
loopne
les
xchg
adc
repz
lods
lock
push
rep
mov
std
sbb
sub
xor
push
push
call
add
xchg
std
jo
ret
int3
xchg
push
push
pop
xlat
popa
negl
ficompl
mov
sub
aam
lock
out
iret
xor
ret
sbb
cmpsl
or
add
and
dec
cld
nop
mov
dec
add
ds
and
push
cmp
std
xchg
testl
jns
jl
jns
and
popa
stc
sub
push
call
add
sub
cmp
jmp
xchg
shlb
push
or
dec
sarl
hlt
xchg
inc
add
stc
dec
dec
enter
or
pop
and
in
cmp
mov
jecxz
jmp
sub
push
mov
rcrl
imul
mov
and
and
mov
stc
out
fnstenv
mov
call
std
and
stos
or
jmp
pop
adc
bound
ret
jecxz
mov
std
adc
adc
das
pop
leave
dec
push
or
jb
aam
cwtl
push
repnz
mov
lock
into
scas
mov
lds
pop
ret
cmp
jl
dec
jle
lock
or
mov
sbb
adc
and
and
mov
push
sti
xor
pop
ud1
inc
xchg
and
add
and
inc
in
cli
lock
lahf
xor
or
cld
mov
fcmovne
f2xm1
pop
sub
decb
xchg
dec
frstor
lock
inc
stos
mov
ret
andnps
dec
mov
mov
repz
xor
push
xchg
pusha
clc
inc
mov
inc
and
sub
inc
lock
add
jne
lock
inc
xchg
jno
sub
lock
shrl
mov
pusha
push
mov
inc
lock
int3
xor
test
jo
lock
dec
loope
jp
and
gs
push
mov
fadds
icebp
xor
cwtl
mov
xchg
lock
dec
mov
int
loopne
pop
lock
sub
jg
push
pop
adc
adc
sub
add
test
outsb
pop
mov
mov
push
inc
lock
iret
jecxz
dec
gs
push
mov
jb
and
dec
jmp
mov
push
shl
jl
mov
cltd
pop
lcall
test
int3
fwait
rcrb
lock
mov
and
sub
gs
repnz
lds
shl
xor
or
pop
lods
stos
mov
adc
cltd
je
lock
pop
aas
adc
pop
xchg
insb
test
popf
shl
jg
popf
mov
mov
xor
mov
je
sub
decb
call
mov
cmp
loop
adc
dec
shl
lods
lock
cwtl
daa
xchg
fisttps
fst
sbb
dec
pop
lock
fwait
and
add
jmp
sbb
in
fisubrs
int3
cmp
xor
aaa
mov
pop
or
push
xchg
jge
lods
sahf
loope
call
mov
jmp
mov
imul
aad
lods
sar
icebp
negb
mov
rcl
xchg
ss
mov
and
sahf
push
jge
pop
and
pop
or
dec
or
jle
sbb
xchg
call
aam
xor
push
sub
and
dec
jns
jmp
icebp
jae
push
call
push
jmp
mov
mov
outsb
repz
in
adc
push
or
jb
lahf
repnz
jno
loopne
leave
fisubl
outsb
add
mov
mov
enter
ljmp
icebp
sub
aas
xorl
cmp
repnz
push
cs
mov
sub
or
jmp
imul
mov
or
push
shlb
jbe
mov
popf
sub
xchg
sbb
mov
je
jno
js
jmp
in
add
mov
into
aad
clc
jo
rol
shrb
mov
sub
addr16
mov
dec
mov
mov
mov
add
test
jmp
mov
pop
push
into
push
sbb
or
jmp
loop
mov
push
or
push
rcrl
ret
sarl
mov
mov
or
push
adc
add
push
push
and
cltd
mov
xbegin
xchg
or
dec
test
push
jmp
pusha
mov
push
xorb
mov
pop
adc
lret
ret
mov
xor
imul
inc
mov
mov
clc
popa
stc
and
mov
test
sbbb
push
inc
ror
divl
dec
movb
and
sub
push
bound
lods
cli
or
mov
jmp
and
pop
xchg
ja
xchg
add
and
mov
jo
jno
and
clc
mov
aaa
xchg
or
cli
adc
jmp
test
adcb
dec
data16
push
call
fists
scas
xor
adc
or
sub
iret
fimull
push
aaa
jb
int3
mov
std
lcall
cmpsl
pop
mov
clc
mov
add
push
js
jo
and
dec
hlt
jae
out
js
ljmp
repz
and
setg
inc
push
lods
aas
enter
push
int
xchg
xchg
std
xor
faddl
call
addl
cmp
shrb
cmc
mov
ret
jge
add
fists
dec
fldenv
pop
or
dec
repnz
jmp
shlb
div
cwtl
or
push
and
add
push
and
imul
lods
jne
fcoml
ret
xor
xchg
and
cmpb
pop
inc
fstpt
jo
or
and
add
adc
mov
ljmp
pusha
mov
and
xchg
add
into
call
jno
pop
xor
int3
fidivrs
mov
inc
scas
lret
dec
ret
int3
pop
mov
sbb
cmp
insb
xchg
mov
and
jnp
push
inc
push
ret
pop
scas
testl
sub
rorl
add
dec
pop
pop
fcompl
std
movsb
push
sahf
rcrb
fimuls
xchg
mov
in
or
dec
bnd
jno
and
fs
add
jo
int
ret
lret
outsb
stc
orl
call
xchg
pop
inc
test
hlt
mulb
mov
xor
sub
dec
xchg
mov
xor
pushl
and
outsb
test
insl
aad
or
mov
xchg
mov
je
lods
add
cs
sub
pop
lods
inc
notb
fs
adc
loope
mov
hlt
lock
cmp
cli
inc
cli
sbb
inc
movb
test
repz
add
and
or
push
cmp
pusha
dec
cmc
or
xchg
movsb
sbb
adc
mov
add
mov
adc
sti
xor
in
xchg
mov
mov
pop
xchg
mov
push
lods
push
add
notb
xor
push
test
imulb
mov
dec
inc
and
out
mov
jg
sub
and
or
les
and
ljmp
push
and
push
rolb
dec
mov
adc
xchg
xor
fidivrs
test
jae
leave
sub
jmp
fidivs
test
mov
into
or
xor
sbbl
mov
call
xorl
std
xchg
inc
jg
rcrb
in
es
push
int3
mov
addb
les
faddl
pop
xchg
fstpt
outsl
mov
repnz
mov
scas
and
dec
idivl
cld
sub
clc
aas
cmp
sbb
adc
cwtl
add
adc
push
sub
roll
jge
ret
cltd
arpl
lea
test
imulb
adc
mov
icebp
pop
clc
fmuls
cmp
int3
in
outsl
adc
pop
and
pop
xchg
adc
or
fcomps
pusha
sbb
subl
cmpsl
add
in
push
ljmp
jne
bswap
ret
or
repz
ret
fidivl
pop
fwait
ret
mov
sar
inc
enter
negb
rorb
xor
rclb
imul
fucomi
rcrb
sarb
push
int3
cli
adc
inc
mov
or
stos
test
push
stos
and
hlt
dec
lods
shr
mov
test
subl
out
call
adc
mov
into
les
mov
add
push
inc
xchg
xorb
sbb
repnz
daa
dec
je
subb
int
cld
xor
enter
push
and
inc
imul
sbb
xchg
mov
hlt
jno
inc
inc
call
pop
or
enter
jmp
cld
jb
sub
aam
call
mov
xchg
push
xor
cmp
adc
repz
mov
loop
and
aam
bound
cmp
push
lret
shll
sub
sub
icebp
and
jo
and
repz
ret
in
pusha
sarl
es
lds
mov
iret
push
popa
pop
fcmovb
add
pop
add
add
xchg
mov
push
adc
les
mov
mov
push
dec
sub
les
or
and
and
and
sti
insl
mov
lds
mov
test
jne
pop
std
inc
jmp
stos
in
cltd
lds
add
or
xorl
stc
pushf
movsl
adc
or
xchg
iret
fcmovnbe
add
enter
cwtl
adc
jmp
jno
call
pop
or
dec
ret
mov
mov
jne
pop
pop
adc
ja
xorb
mov
shr
pop
push
mov
imul
mov
shl
push
aam
stos
cld
fwait
mov
push
xchg
adc
outsb
fs
push
mov
push
arpl
xorl
pop
xchg
cmp
push
repnz
xchg
dec
loopne
sbb
clc
icebp
shl
dec
sbb
sti
outsb
pusha
inc
xor
jns
lahf
decl
pop
ret
test
mov
cmp
push
jb
sahf
pop
das
lcall
out
lcall
testl
test
into
add
add
xchg
mov
cmp
push
xor
mov
adc
sub
mov
xchg
rorl
adc
or
call
data16
pop
or
or
ror
jnp
push
data16
sbbl
jecxz
or
repnz
in
sub
xlat
stc
mov
out
divb
sbb
rorb
xchg
adc
fmull
xor
or
mov
mov
shl
mov
push
fnstsw
pop
jo
test
mov
xor
jmp
in
cs
fst
lret
adc
add
test
push
mov
call
push
fiadds
or
shrl
dec
repnz
and
enter
rorb
push
loope
jno,pt
repnz
sbb
jecxz
mov
jae
pop
clc
adc
ret
mov
imul
sahf
and
mov
pop
xchg
fcmovne
movsl
es
adc
ror
stc
gs
aas
adc
mov
xchg
xor
pop
cltd
into
push
inc
jne
int3
nop
icebp
enter
ret
jo
ret
stos
ljmp
mov
fistpl
jp
rorb
add
jb
repz
jns
clc
repnz
mov
dec
ljmp
mov
dec
cmpsb
push
pop
push
add
or
nop
jns
pop
scas
xchg
insl
psadbw
call
decb
push
sub
dec
addb
or
pop
notl
dec
push
ficompl
ret
rolb
and
mov
pop
call
add
mov
rol
push
lret
push
orb
repnz
clc
lret
push
inc
fisubrl
or
int3
testb
rcll
xor
push
push
pop
cs
sarl
scas
xchg
xor
std
or
mov
and
sub
cmp
mov
inc
addb
and
push
cmp
xchg
push
aam
sar
cs
js
jp
call
add
into
sbb
push
mov
pop
dec
out
add
sub
outsb
adc
mov
sahf
jg
faddp
lds
pop
sub
add
clc
mov
sbb
adc
shlb
pop
lods
mov
lret
arpl
clc
push
dec
mov
lcall
sar
mov
clc
add
xchg
sub
outsb
xchg
sub
scas
and
or
or
xorl
fstl
iret
scas
sbb
in
or
addl
popf
cmc
repnz
fidivrl
sahf
subl
pop
ficoms
ror
mov
clc
fstps
xchg
sub
ret
or
call
mov
repnz
mov
jno
sbb
add
or
inc
jmp
xchg
loopne
xor
cmp
sahf
mov
xchg
hlt
call
xor
sahf
push
jno
push
and
test
repnz
jo
push
test
frndint
std
mov
mov
inc
into
out
and
add
cli
adc
or
iret
inc
sbb
loope
push
in
repnz
jo
cld
outsb
outsb
sbb
loopne
push
loop
pushf
push
sbb
adc
mov
or
rorb
stc
pop
lret
fiadds
jo
inc
jno
andb
or
jae
jo
cmp
add
add
dec
or
sub
dec
add
add
sti
repz
add
xor
or
and
jb
repz
and
movsb
popa
pop
add
dec
sbb
and
mov
mov
dec
sbb
or
dec
jo
inc
lods
inc
push
push
es
subb
lret
xchg
xor
mov
and
adcl
jo
popa
dec
lods
inc
sub
insb
or
pop
pop
push
int3
dec
inc
insb
pushf
add
int3
lea
test
dec
sub
test
fs
add
cs
dec
test
dec
xorb
xor
and
icebp
sub
lds
movsb
stos
adc
sub
shlb
cwtl
mov
inc
or
xchg
fmuls
test
mov
sub
sub
int3
jecxz
in
or
adc
pop
and
or
xor
nop
adc
dec
fcom
xor
adc
rorb
jl
lock
xor
mov
shlb
lcall
cmp
and
mov
nop
lods
sbb
cwtl
mov
subb
mov
ret
jo
and
das
push
push
adc
pushf
inc
pop
or
fmull
xor
test
pushf
mov
sbb
sbb
inc
sub
dec
test
mov
mov
cmp
add
fdivr
orb
fwait
xor
jo
insb
adc
sbb
add
xor
push
cmp
jb
outsb
mov
shlb
push
into
or
mov
xor
inc
test
and
push
mov
push
fcomps
mov
repnz
gs
in
and
xchg
dec
rcrb
rclb
xor
ja
outsb
mov
popl
inc
std
sub
mov
clc
push
js
and
sub
or
loope
pusha
adc
pop
rol
mov
movsb
cmpsl
sti
loopne
mov
lods
movb
push
sbb
sub
jno
lcall
lret
xor
jns
pop
xchg
inc
mov
popf
and
and
sub
mov
inc
aaa
adc
pushaw
mov
adc
call
movsb
cmp
jecxz
pop
in
xor
ss
xor
sub
xchg
inc
cld
pushf
in
xchg
inc
sbb
leave
data16
js
mov
cmc
mov
pop
mov
xlat
sub
shll
jo
adc
into
jne
sub
repz
call
lds
mov
sbb
mov
pushf
lahf
jno
cmp
jo
out
movsl
jecxz
jmp
xchg
add
dec
fsts
mov
fmull
dec
lahf
adc
ret
xor
fcmove
fdivrl
loop
jb
or
mov
rcrb
adc
into
push
orb
xor
mov
in
adc
and
adc
jmp
xor
inc
add
lds
xchg
add
jle
push
add
add
test
loopne
adc
fs
sub
out
pop
loop
mov
and
loope
dec
cltd
adc
stos
lret
dec
popf
inc
fwait
add
mov
xchg
orb
xchg
or
mov
sub
sub
push
mov
daa
ret
aam
cwtl
pop
sub
in
or
std
xor
mov
cmp
cmp
sub
push
jmp
pop
addl
or
pop
nop
ret
adc
les
setg
xchg
pop
das
or
cld
outsb
dec
ss
jmp
mov
or
es
mov
sahf
mov
adc
mov
xor
push
loop
xor
pop
jb
pop
jo
jae
icebp
jo
jmp
mov
or
fcomps
repnz
inc
loope
les
sub
cmp
test
sbb
inc
push
aas
fsubrs
push
int
mov
insb
mov
std
dec
add
mov
pop
int3
lods
icebp
or
add
out
fdiv
mov
jbe
inc
mov
iret
dec
cmp
add
repz
push
out
out
inc
fimull
sub
out
push
fstps
pop
mov
daa
add
cmp
cmp
icebp
dec
push
inc
clc
push
cmp
and
std
push
jmp
jne
push
mov
call
jle
add
xchg
dec
add
push
or
call
int3
jmp
pop
adc
lock
jo
push
ror
and
inc
clc
std
adc
xor
shll
dec
jo
div
push
sub
sub
iret
outsb
mov
mov
push
ss
clc
enter
icebp
sti
pop
inc
mov
xchg
and
push
mov
sbb
cmc
jmp
hlt
repz
sbb
ret
in
cs
jmp
and
or
out
test
mov
lea
lahf
shlb
cmp
dec
mov
cwtl
clc
ret
xchg
push
call
jg
loopne
push
test
adc
cmp
shlb
or
add
repnz
paddw
sub
mov
push
xor
inc
pop
and
call
pop
mov
mov
and
jmp
or
or
lret
xor
subl
lahf
mov
or
push
pop
push
ficoms
push
cmp
push
mov
outsb
test
sub
hlt
adc
addr16
sbb
fsubrp
mov
push
clc
dec
push
push
mov
jne
mov
imul
dec
test
in
dec
test
mov
test
dec
push
in
add
xchg
jo
jno
hlt
sub
mov
ja
fadds
and
mov
push
mov
mov
mov
xlat
add
inc
pop
loopne
movsl
loop
insb
out
sub
add
sub
lods
repnz
mov
cli
add
filds
pushf
nop
inc
shr
aas
xchg
mov
pop
movsb
sbb
or
dec
push
in
jae
icebp
stc
or
adc
mov
fdivl
sbb
in
lahf
rcrl
out
xchg
inc
std
in
and
mov
or
mov
inc
repnz
adc
xchg
out
sub
sbbl
into
out
int3
mov
psubsb
int
jecxz
xor
xchg
and
xor
inc
es
test
in
sbbl
ret
mov
jns
popf
imul
adc
or
in
sahf
andb
push
call
xchg
sbb
sbb
push
cmp
divb
mov
pop
fsubr
dec
repnz
lea
icebp
test
and
iret
mov
cltd
jns
adc
pop
enter
leave
cli
adc
xor
push
lds
daa
pop
fisubrs
int3
insb
or
sti
xchg
leave
xor
das
pop
movsb
xchg
js
sti
mov
push
or
testb
mov
mov
movsl
and
stc
fisttpll
cmp
arpl
sub
ret
repnz
fisubrs
jmp
sub
outsb
lea
pop
sti
dec
dec
loopne
pop
sub
std
dec
pop
inc
sbb
imul
or
adcb
out
shrl
inc
decl
test
push
or
cltd
xchg
aaa
insb
fsubr
or
lcall
dec
cmp
fsubl
mov
test
or
test
flds
int
mov
adc
lret
roll
dec
pop
jmp
xchg
int3
aad
loope
dec
lret
mov
inc
add
std
shll
data16
push
or
jmp
sub
pushf
dec
push
out
mov
sbb
cmp
inc
cwtl
add
mov
andb
jnp
cmp
loope
imul
lods
mov
jno
fs
sbb
or
mov
mov
adc
mov
aas
xor
ret
out
ror
ficompl
inc
test
in
inc
push
adc
clc
orb
loope
push
lods
aas
mov
mov
push
mov
xchg
insb
and
mov
jl
loop
sbbl
or
sub
mov
push
repnz
dec
xlat
test
fmuls
inc
sbb
ffreep
sti
sub
and
xlat
pop
mov
iret
inc
jb
movsb
cli
or
mov
inc
xlat
or
aaa
fmul
and
call
lahf
dec
into
push
add
push
and
pop
jno
aad
add
xchg
cmp
and
and
cmp
pop
fcmovnb
icebp
xchg
sbb
std
icebp
addr16
xchg
dec
lahf
loopne
push
arpl
fcompl
movsb
addr16
rorb
cmp
out
imul
in
mov
or
mov
movl
rcrl
fisttpl
mov
jmp
pop
repz
jge
insl
dec
insl
call
sub
pop
jmp
and
test
stos
or
mov
call
sub
icebp
pop
dec
pop
addr16
dec
bound
fildll
sarl
ret
in
or
popa
and
aaa
and
push
push
push
push
pushf
xchg
sbb
pop
std
addb
push
mov
push
mov
in
outsl
pop
add
pop
push
std
es
mov
push
movsl
aad
and
add
or
scas
sub
fs
cmp
mov
or
sub
repnz
hlt
mov
sub
pop
leave
fwait
loop
jge
xor
add
push
adcl
out
or
and
les
jp
rcl
popf
adc
mov
sar
cmpsl
sub
sub
push
ss
add
sub
pop
jb
cmc
or
sbb
lock
push
scas
test
lret
sub
pop
add
xchg
or
cmp
add
xor
jmp
dec
outsb
in
das
loopne
add
insl
and
pusha
sub
and
add
cmc
sti
dec
inc
or
or
dec
jmp
dec
hlt
dec
push
enter
fdivs
or
jns
rorb
push
jb
sub
mov
push
movsl
and
adc
rcll
hlt
xchg
ficoml
push
lock
cwtl
enter
cld
adc
mov
insb
rorl
int3
fiaddl
jmp
pop
or
jnp
lahf
call
xchg
addb
mov
mov
leave
test
and
punpckhbw
inc
push
or
xchg
jmp
mulb
inc
xlat
fld1
jg
lcall
xchg
cli
push
or
xor
into
idivb
jp
mov
call
mov
inc
xchg
adc
je
lods
push
icebp
inc
push
clc
xchg
nop
pmaxsw
pop
inc
add
or
ret
mov
mov
push
cmp
imul
mov
cmp
lea
push
aam
jmp
int3
cmp
pusha
imul
into
cmp
aad
adc
out
inc
add
mov
jne
and
adc
xchg
mov
pop
test
dec
shl
cmp
xor
loope
dec
stc
jmp
sbb
jno
mov
mov
inc
add
jl
int3
push
and
call
cmpsl
or
adc
clc
repnz
rorl
call
clc
adc
pop
pop
gs
mov
push
ret
ret
add
dec
std
xchg
add
mov
or
pop
push
fxam
movsl
mov
fincstp
pop
gs
hlt
jno
lock
xor
push
outsb
or
and
mov
icebp
push
cs
lods
pop
or
or
fbstp
lods
mov
sub
xchg
icebp
pop
mov
std
cmc
xor
add
stc
ret
loopne
cli
dec
xchg
aas
xor
jmp
orl
paddusb
sub
orl
std
clc
cmc
loop
xchg
in
jo
xchg
mov
cmp
call
and
fidivs
into
mov
sbb
lret
sub
fildll
xchg
xorb
mov
test
mov
inc
lahf
cmp
popf
inc
mov
mov
shll
ss
add
xchg
lret
mov
bswap
int3
inc
test
inc
clc
sub
mov
daa
adc
ljmp
sub
xor
pop
pop
fldt
pop
sbb
in
rorb
push
negb
pop
insl
stos
fucomip
pop
loopne
cmp
icebp
pop
hlt
push
mov
push
pop
pusha
mov
xor
jmp
imul
call
inc
clc
es
jmp
mov
cmp
jns
out
pop
loopne
mull
jg
mov
dec
test
xchg
test
xor
andb
out
subl
xchg
cmpsb
outsl
sbbb
sub
pop
and
dec
jge
aaa
and
xchg
cmpsb
mov
jne
das
mov
pop
jo
movsl
add
rorb
jno
ret
mov
xchg
mov
or
leave
push
stc
jo
inc
insb
loope
mov
xor
xlat
int
rclb
pushf
leave
and
roll
adc
ret
sbb
mov
push
lea
sub
call
es
mov
sahf
or
hlt
and
push
test
nop
add
outsb
inc
xlat
push
shrl
stc
or
lock
push
cmc
and
lds
imul
ds
leave
mov
popf
mov
call
sub
popa
adcb
std
or
enter
cli
inc
aad
shll
sub
and
pop
std
or
lahf
mov
je
lret
mov
in
push
iret
call
pusha
gs
gs
or
repz
fcompl
jo
add
and
roll
imul
loopne
lds
xor
or
call
into
imul
daa
xchg
xchg
mov
or
and
aam
ja
cld
test
das
daa
fsubrl
int
rolb
push
pushl
mov
adc
fcompl
icebp
push
mov
jne
dec
push
mov
cmp
clc
mov
cmp
lock
outsb
jle
push
ret
shr
dec
test
fidivl
rcrb
cmp
mov
adc
mov
loope
es
jno
aam
push
out
pop
and
xor
adc
loopne
push
pop
std
inc
mov
xchg
mov
popf
mov
mov
xchg
sub
sbb
cld
sbb
lods
sbb
loop
bnd
lahf
push
std
jmp
lods
jecxz
cltd
adc
je
lods
test
cltd
push
or
mov
dec
out
stos
mov
inc
inc
cmp
into
xorb
andb
mov
outsb
cmpb
pop
andb
bnd
fdiv
xchg
popf
or
sti
dec
shll
call
or
out
or
push
and
imul
add
in
jae
push
mov
fcmovnbe
insl
cld
mov
push
xchg
or
repnz
fisttpl
pop
add
pusha
in
push
pop
inc
cmp
cmp
ja
int3
mov
jmp
ret
sti
pop
cli
out
push
mov
fcoms
aam
loopne
or
cs
fildl
out
aad
clc
out
pop
rcrl
nop
cmpsl
pop
sub
arpl
mov
jmp
add
test
pop
xchg
mov
fcomip
mov
andb
or
dec
mov
cmpb
sub
lcall
outsb
pushf
xchg
stc
sub
dec
xlat
push
lahf
dec
andl
xchg
sub
sbb
xlat
or
lcall
dec
ret
repnz
inc
mov
mov
addl
and
sbb
sar
push
ljmp
out
inc
mov
or
lea
enter
jmp
adc
push
push
or
fistpl
pop
lret
xor
sub
sub
cmp
clc
pop
jge
out
hlt
jno
and
or
inc
stc
mov
push
sub
cmp
inc
aad
pop
xchg
and
mov
enter
sub
pop
and
in
clc
jo
sub
push
pop
sbb
and
sub
cmp
xchg
sti
lock
popf
insl
test
push
jbe
xor
sbb
mov
cli
repz
pop
inc
mov
adc
sub
leave
outsb
scas
popa
inc
ss
dec
mov
add
push
iret
repz
cs
scas
pop
mov
fsubrl
stos
out
push
js
call
sub
jmp
stc
mov
or
xchg
imul
dec
lods
mov
add
lea
fdivp
loopne
in
xor
daa
icebp
xchg
and
sub
cmp
add
mov
or
dec
add
movsl
sbb
cmp
int3
xchg
and
popl
sbb
cmp
cmp
cld
inc
stc
mov
mov
cmp
out
cmp
mov
sbbl
or
arpl
push
cs
inc
add
xlat
and
and
and
adc
cmp
and
cmc
push
jne
or
bound
les
and
mov
and
adc
cmp
int3
adc
cmp
enter
push
adc
xor
xchg
aad
aas
xchg
xchg
mov
test
pop
and
inc
icebp
out
inc
pop
addb
enter
sbb
xor
or
mov
lds
mov
cmc
mov
frstor
lcall
dec
inc
inc
loopne
insb
adc
es
push
xor
int
or
pushf
jb
out
or
data16
pop
enter
in
jl
pop
xchg
adc
mov
ret
fdivp
repnz
inc
dec
lock
ret
hlt
xor
pop
push
cmp
or
jnp
xchg
sub
les
inc
dec
cmove
or
inc
movsb
sbb
shlb
xor
and
ss
pop
sbb
inc
jmp
shl
sbb
pop
jl
orb
ds
add
aaa
jmp
xor
dec
or
jo
test
orb
push
pop
mov
add
cmpsl
dec
test
out
pop
pop
jno
jl
js
sub
adcl
push
adc
push
bound
jl
add
mov
mov
das
cmp
daa
pop
cld
sbb
shlb
das
push
or
in
cld
rclb
dec
sub
mov
adc
or
sub
xor
sti
mov
jno
imul
cmp
sbb
std
clc
mov
mov
xor
lea
mov
enter
push
loopne
add
out
push
dec
hlt
mov
inc
or
mov
repnz
fldenv
jp
rcrb
mov
into
sbb
xor
and
test
inc
shrb
lods
add
adc
jbe
repnz
mov
fstpt
call
adc
cmc
scas
outsb
dec
outsl
inc
sub
jge
adc
out
and
das
mov
jl
icebp
sbb
iret
in
out
xchg
mov
insb
arpl
popf
push
sub
pop
repz
loope
inc
push
or
jle
dec
sbb
lret
push
dec
push
jle
pop
cld
lods
ja
adc
in
loopne
mov
mov
call
in
cmp
jno
sbb
pop
sbb
sbb
mov
aad
adc
xor
aam
insl
out
fwait
add
push
xchg
xchg
cmp
sbb
mov
dec
nop
xlat
addr16
or
rorb
inc
add
mov
inc
movsl
mov
mov
mov
adc
bnd
or
xor
xor
adc
les
push
ret
add
or
mov
push
xchg
arpl
push
or
adc
movsl
add
insb
add
aas
dec
sub
out
pusha
daa
lods
test
inc
pop
test
xor
ret
dec
pop
or
std
fmulp
cs
jo
add
ljmp
lods
inc
cmp
pop
or
out
sub
test
sahf
mov
pop
jne
xchg
loop
and
mov
loopne
xor
in
push
mov
and
jo
call
pop
or
mov
mov
adc
ljmp
pop
pop
out
loop
sarb
fbstp
repz
adc
nop
dec
jb
mov
cmp
jge
dec
dec
jnp
addr16
lret
cmovbe
mov
adc
iret
repnz
push
mov
fcom
push
push
lcall
cld
jl
cmp
scas
aaa
das
es
imul
inc
add
es
ljmp
icebp
sbb
mov
push
in
pop
sub
rcl
enter
in
push
add
jno
dec
testl
dec
mov
nop
fmuls
cld
fnstenv
loopne
call
aad
jbe
gs
xlat
jne
insb
negb
mov
ret
or
mov
mov
xor
loope
ret
and
jmp
inc
jae
mov
or
inc
xchg
and
clc
iret
inc
psubsb
xchg
les
or
xor
sbb
jl
inc
xchg
cs
int
lods
dec
mov
pop
jno
sub
imul
lret
mov
dec
mov
jne
add
jmp
mov
enter
xchg
sbb
aam
xchg
div
subl
inc
hlt
sub
movsl
mov
inc
inc
and
shl
fldt
cmp
imul
or
ds
pop
jp
adc
dec
mov
xor
push
add
adc
arpl
or
or
fsubrl
and
add
xchg
push
rcll
mov
test
lock
inc
inc
inc
mov
lret
aas
sti
and
nop
push
aaa
pop
inc
in
es
adc
add
cmp
rclb
call
push
clc
jno
icebp
mov
jo
dec
adc
repnz
xor
mov
add
and
pop
or
mov
arpl
or
outsl
xchg
sbb
xor
push
test
push
aad
call
mov
iret
and
clc
mov
mov
inc
xchg
das
adc
or
push
orl
cwtl
mov
out
and
in
mov
and
repnz
pop
iret
xor
or
test
pop
pop
xor
mov
scas
inc
sbb
nop
add
mov
enter
mov
cmp
xor
cmp
push
sub
cmpl
clc
or
or
call
adc
xor
mov
sbb
in
or
loop
sub
jle
jo
sub
test
dec
sub
lods
pushf
addb
repz
cs
outsl
imul
sub
lret
ss
sub
mov
int3
adc
cmp
jne
pushf
mov
hlt
or
push
dec
shrb
fwait
sub
pushf
rclb
push
push
test
ja
adc
dec
sbb
movsb
sub
mov
sub
pop
and
pushf
sub
cmp
fildl
out
rorb
push
call
dec
pop
in
dec
rcrb
into
pop
xor
or
mov
icebp
jge
lahf
scas
shl
daa
sbb
outsl
cld
sbb
cmp
inc
in
leave
out
fwait
and
ljmp
rorb
cmp
out
sbb
enter
stc
or
ja
jl
pop
test
push
roll
lret
int3
aam
dec
inc
sbb
and
cld
mull
and
xchg
sbb
sub
movsb
lock
mov
xchg
xchg
xchg
xchg
add
call
dec
cmc
sub
cld
pop
dec
xchg
and
or
sbb
pop
imul
nop
xchg
popa
dec
or
and
inc
cmp
sub
jno
add
lods
dec
call
dec
out
loope
fdivrs
adc
push
fldcw
insl
fisubrs
shlb
adc
arpl
das
call
sub
ret
jle
repz
xor
sub
xchg
xor
or
sub
add
cwtl
mov
mov
filds
add
sub
bound
ja
lods
jns
xor
lcall
mov
icebp
push
sbb
adc
jb
jno
ret
cmc
insl
popa
sub
and
pop
dec
je
lods
pop
sub
inc
into
daa
sub
mov
and
subb
cmp
out
sbb
add
mov
bnd
and
iret
or
call
mov
dec
sub
mov
xor
icebp
adc
cmp
jae
loope
clc
mov
cli
shlb
ss
test
jl
xor
inc
cs
in
mov
jbe
pslld
lds
xchg
notb
cmc
xor
xor
xor
sub
adc
add
jae
or
mov
and
and
pmaddwd
sbb
jmp
cltd
mov
adc
pop
xchg
pop
or
xchg
aad
outsb
or
xchg
into
call
ljmp
int3
or
mov
pop
call
and
movsb
flds
dec
mov
or
call
sahf
test
bound
loope
cmp
mov
push
cmp
push
sbb
sbb
jae
nop
pop
sub
xchg
push
pop
mov
dec
adc
and
dec
loopne
or
dec
add
dec
add
adc
mov
cmp
call
and
and
mov
cwtl
pop
cmp
add
xchg
adc
aam
cmp
pushf
dec
mulb
xor
and
xor
scas
inc
fstps
dec
or
jae
in
jmp
jecxz
add
popf
dec
inc
std
dec
pop
add
jl
stos
sbb
adc
in
pushf
and
add
sub
cmp
hlt
mov
mov
lea
mov
scas
mov
popa
add
sbb
add
sbb
enter
lret
stos
pop
loopne
enter
repnz
mov
mov
jmp
or
cmp
mov
dec
aad
xchg
pusha
cmp
scas
hlt
jns
add
pop
out
aaa
adc
jmp
in
test
mov
call
jo
clc
mov
jns
test
inc
repz
lds
das
dec
pushf
stc
and
jae
loope
shlb
xchg
in
repz
xor
pop
sbb
mov
pop
mov
ds
fiadds
and
sbb
jg
cmp
mov
inc
mov
cs
ss
pop
pop
xor
repnz
shrb
fsts
push
mov
callw
clc
and
lea
pop
jp
stos
xor
mov
aam
lea
inc
call
push
and
fmuls
rclb
jl
sbb
test
sbb
fadds
mov
or
push
int3
in
mov
or
push
cmp
rorb
mov
fwait
cmp
test
or
rcll
shlb
loopne
jle
adc
addr16
adc
aam
mov
and
xchg
or
and
fsubr
mov
or
cmp
add
jg
sub
fisubrl
push
testb
stos
push
or
adc
mov
sbb
xor
mov
mov
popa
cmp
scas
jns
inc
add
adc
mov
aam
jg
pusha
fs
fs
cmp
push
loopne
int3
xchg
add
push
mov
adc
clc
lret
sbb
sahf
cmp
mov
lea
ret
pop
imul
rol
imul
es
divb
imul
jge
pop
std
aaa
scas
or
rolb
sub
leave
std
cwtl
rcrl
imul
cmp
pop
sub
out
ss
push
sbb
cmp
call
into
dec
or
jb
jae
cli
fdivr
mov
cld
sbb
shrl
mov
into
cmp
in
jecxz
and
loopne
xchg
mov
jl
sub
outsl
les
aam
cwtl
gs
adc
fadds
adc
inc
and
rolb
mov
cltd
test
ds
mov
pop
pop
pop
pop
popf
and
stos
das
arpl
in
je
xlat
inc
imul
pop
push
daa
leave
fdivs
mov
enter
add
daa
rep
add
aaa
adc
add
sbb
adc
inc
popa
adc
mov
repnz
jo
rcr
icebp
dec
push
mov
jge
jne
outsl
cmp
xor
pushl
aas
mov
cmp
mov
sub
push
movl
sbb
repnz
push
enter
repz
cwtl
jae
jp
push
ret
sbb
mov
mov
xor
xor
pop
shrl
incb
movsl
outsb
fisubrl
dec
lds
int3
test
sub
cli
cmc
aas
pop
cmpsl
pop
xor
in
rorb
fmuls
cmp
scas
inc
jno
das
xchg
pop
mov
mov
pusha
dec
push
je
mov
mov
int3
or
adc
shlb
outsl
enter
outsl
icebp
adc
inc
aam
aam
sbb
mov
imul
les
icebp
mov
jnp
xchg
add
xlat
mov
xor
out
cmp
insl
jne
mov
pop
rcl
int3
add
ljmp
push
adc
fistps
or
dec
ja
mov
into
adc
lds
insl
outsb
xorb
jmp
orb
mov
bound
call
lcall
mov
adc
and
insl
adcl
mov
out
js
orl
lods
jbe
adc
lret
pop
xor
mov
insl
adc
lds
add
int3
jno
jp
mov
testb
jl
fidivl
mov
jno
jne
mov
or
pop
insb
add
insb
shrl
mov
js
mov
push
cli
loope
sbb
xchg
push
loop
and
loopne
mov
lret
nop
adc
lret
dec
inc
andl
mov
mov
into
decl
adc
mov
pushf
fs
sub
dec
jecxz
cltd
mov
es
sbb
inc
sub
mov
add
cmpb
and
cltd
lds
add
push
mov
push
mov
add
out
leave
push
or
icebp
stc
mov
daa
sahf
inc
pop
push
dec
or
xor
dec
pop
inc
dec
stos
in
and
aam
fs
mov
jle
mov
cwtl
fcomi
out
push
lds
mov
in
cld
add
jge
fstl
data16
xor
fistl
scas
push
jle
orl
aad
cwtl
pop
sbb
or
enter
jb
insl
loopne
repnz
xchg
mov
gs
and
jmp
dec
repnz
jg
and
dec
lods
dec
pushf
adc
mov
mov
push
mov
ds
movsb
dec
iret
mov
dec
icebp
and
pushf
mov
mov
mov
adc
sub
jle
adc
mov
add
or
addb
xchg
xor
pop
lods
dec
add
dec
hlt
fdivrl
loop
andb
cmp
xchg
jp
pop
aam
lods
stos
xchg
cld
daa
and
jne
pushf
je
sbb
icebp
or
lcall
inc
ljmp
insb
fildl
clc
int3
add
xchg
mov
test
enter
ret
int
mov
push
pop
pop
mov
or
pop
push
lret
pop
clc
push
xchg
push
mov
pop
in
in
inc
cmp
test
loop
cmp
xor
pop
xor
pop
pop
sub
mov
insb
idivl
xchg
das
inc
clc
cmp
roll
cmc
adc
push
or
cltd
jo
sbb
jae
add
mov
pop
aam
mov
in
xor
sub
mov
cmp
adc
xchg
add
jno
add
jno
add
jno
add
jno
add
jno
pop
jecxz
int3
sbb
add
movsl
mov
fiadds
xchg
pusha
loopne
jae
mov
sub
push
jg
pop
push
push
ss
sbb
sti
cmp
sub
xchg
mov
mov
or
mov
sbb
pop
lea
aad
scas
sbb
enter
xor
test
fwait
mov
jle
adc
paddd
enter
lret
or
negl
sub
lods
xchg
mov
sahf
fwait
insb
hlt
fcoms
pushf
mov
idivl
adc
enter
call
dec
cmp
and
adc
ret
sub
push
les
mov
mov
xor
test
and
int3
adc
scas
mov
leave
dec
mov
or
xchg
inc
xor
repz
call
ret
shlb
mov
lahf
mov
aaa
pushf
adc
int
pushf
jae
or
mov
mov
clc
mov
pcmpeqb
cmpsb
imul
arpl
adc
das
or
popf
add
in
xchg
dec
in
sbb
stos
das
in
sbb
jl
daa
insb
jg
repz
mov
cwtl
hlt
mov
iret
cmp
hlt
mov
arpl
sub
sahf
daa
popf
add
shll
dec
loopne
arpl
mov
xchg
pushf
cmp
fcoms
test
in
add
cld
sbb
stc
adc
pop
out
pop
out
add
or
and
xor
xchg
add
dec
gs
jmp
lods
xchg
cmp
sbb
xor
mov
dec
jo
sbb
sbb
pop
rcrl
xor
mov
add
inc
hlt
call
pop
shrd
push
pushf
scas
push
dec
add
adc
jl
or
sbb
addl
in
imul
jg
mov
cltd
adc
add
test
lea
and
or
adc
pop
or
or
adc
pop
xchg
cmpsb
dec
inc
inc
xlat
inc
mov
sub
sub
bound
adc
dec
jge
dec
pusha
adc
sub
jo
js
pop
xchg
shl
add
mov
les
shrl
pop
push
int3
insb
pop
cmp
popa
sub
ltr
lea
or
negl
and
xchg
or
imul
imul
movsb
lea
xor
ljmp
dec
mov
stc
adc
icebp
and
sub
lahf
adc
mov
lea
mov
mov
jmp
sub
das
dec
decb
fwait
roll
repnz
popf
popl
sub
aad
or
dec
repz
out
sub
orb
jbe
or
fdivl
insl
test
lds
or
mov
in
push
cmp
pop
lea
daa
mov
xor
dec
mov
pusha
push
mov
pop
ss
ret
fucomip
or
icebp
cmp
ss
in
bound
mov
or
xor
sub
sub
in
pop
cmp
aas
out
push
das
or
sub
jno
pop
inc
adc
jnp
outsb
ljmp
push
aam
jno
and
pop
das
ffreep
jecxz
rol
lods
push
nop
dec
rorb
pop
adc
std
adc
adc
stos
jmp
movsb
outsb
xor
repnz
pop
push
mov
mov
mov
lcall
out
les
dec
xchg
cmpsl
jbe
xor
cwtl
pop
or
dec
pop
int3
or
inc
sbb
push
xchg
dec
inc
and
fidivl
sbb
push
call
les
add
inc
pop
mov
mov
sahf
jb
inc
xchg
cmp
cmp
testl
fsts
push
push
jmp
pop
hlt
mov
xchg
notb
dec
pop
je
inc
jg
mov
adc
jo
pop
and
pop
fwait
aas
cli
fcomp
int3
mov
sub
inc
jne
mov
call
out
mov
ja
outsl
dec
cltd
inc
insl
inc
ficomps
pushf
add
dec
push
sbb
xor
inc
dec
fs
mov
pop
sbb
add
ja
aas
sub
mov
mov
nop
ljmp
aam
add
cmp
jl
adc
subb
and
hlt
ss
call
add
es
jbe
xor
and
add
psubsb
outsb
subb
or
cmp
lods
lea
mov
pop
orl
shrl
mov
pop
cmp
sbb
addr16
sub
sub
scas
popf
jbe
inc
sbb
xchg
mov
adc
dec
adc
push
leave
outsb
jbe
aad
adc
jo
xor
dec
xorb
pop
dec
fidivl
xchg
adc
pop
xor
sub
mov
xor
ljmp
xchg
aaa
mov
cmp
lods
mov
jo
pop
shlb
xchg
test
fsubrl
mov
pop
insb
or
aad
jno
cmp
insl
repnz
sub
lods
call
jmp
mov
inc
stc
clc
xor
aam
mov
in
test
das
jl
push
sub
and
lahf
mov
das
pop
or
imul
push
xor
pop
jne
push
in
dec
movsl
xlat
jno
test
stc
sub
shl
jae
or
mov
lods
adc
inc
inc
test
jge
movsl
stos
mov
fstpl
xchg
into
subl
enter
lret
imul
ret
dec
or
or
adc
dec
inc
pop
add
dec
mov
lcall
add
xchg
in
dec
sbb
sub
loope
dec
pop
mov
fsubrl
ret
push
dec
lret
mov
dec
in
and
sbb
fistl
add
sub
repnz
pop
fcompl
and
call
jns
mov
insb
xchg
test
shl
jno
nop
mov
cmp
je
nop
call
adc
nop
jg
cwtl
xorb
imul
cld
or
xorb
xchg
inc
pop
inc
cmp
mov
push
pop
mov
add
sub
addr16
pushf
jnp
cmpsb
dec
mov
dec
loope
dec
or
loopnew
xor
xor
dec
lods
movsb
addr16
flds
movsb
xor
aam
dec
and
adc
push
push
mov
adc
dec
xchg
addr16
shlb
insl
xchg
add
pushf
adc
jmp
in
xchg
xchg
outsb
adc
js
mov
xor
clc
or
dec
mov
icebp
pop
test
popf
daa
dec
movsb
adc
test
fstpl
sub
push
rorb
xorb
push
adc
insl
adc
sar
cs
xor
pop
dec
dec
lea
inc
xor
test
mov
xchg
xchg
push
fsubr
or
out
jns
out
jne
fmuls
pop
xchg
fstpt
fsub
je
sub
out
dec
xor
mov
jbe
inc
imul
aaa
sbb
jo
sub
adc
shrb
nop
push
pusha
adc
xchg
call
iret
dec
dec
movsb
cmp
dec
add
movsb
fadd
and
shrl
push
enter
call
pop
xchg
and
sub
mov
nop
inc
aas
or
scas
push
or
adc
nop
lds
outsb
add
fwait
xor
and
inc
lods
mov
adc
pop
xchg
inc
lcall
sarb
adc
enter
in
or
sub
stos
mov
mov
lods
mov
adc
cmp
sbb
or
sub
xor
push
loopne
cltd
clc
inc
xor
xchg
dec
adc
xor
outsl
les
es
xor
adc
sahf
mov
dec
xor
cwtl
sbb
fsubrp
lret
cmp
es
inc
in
out
jb
pop
sahf
xchg
jmp
faddl
pop
enter
and
mov
jmp
lods
jp
cmp
xor
pop
in
ds
sub
jo
mov
idivl
negl
dec
mov
lcall
push
mov
adc
jae
or
fisubs
pop
mov
mov
int
add
movsl
pop
xchg
fadds
lahf
imul
mov
sbb
mov
lahf
inc
push
daa
jmp
fnstsw
repz
test
mov
xor
arpl
xchg
add
xchg
adc
ret
popf
xor
jo
aam
adc
push
cmp
adc
mov
mov
hlt
adc
lods
mov
push
add
adc
xchg
and
mov
adc
push
sarl
mov
cs
popf
push
dec
cmp
cmp
pop
loopne
dec
and
sub
mov
insb
sub
dec
mov
adc
cld
mov
mov
dec
pop
call
adc
jno
repnz
hlt
push
jge
enterw
dec
in
xlat
out
or
nop
mov
aas
cmp
call
push
or
mov
arpl
flds
xor
mov
add
mov
sub
mov
insl
or
cld
pushf
add
call
inc
inc
test
cmp
testl
movsb
imul
cs
push
insb
aam
lods
dec
xchg
push
xor
movsb
aaa
repz
mov
imull
mov
push
or
jmp
fcoml
mov
lds
in
iret
pop
repz
xchg
sbb
push
int3
jl
push
out
sub
lcall
sbb
dec
repz
jmp
jns
mov
bound
lods
push
mov
dec
sub
das
jb
cs
sbb
add
jge
mov
nop
xlat
gs
jmp
sub
pushf
addl
outsb
and
fstps
sbb
dec
push
add
mov
outsl
jne
lods
add
cmp
jae
outsb
or
inc
add
or
test
movsb
mov
jnp
leave
pop
cmp
mov
add
mov
loopne
ss
aam
imul
xor
cmp
mov
fisttpll
loope
pop
or
lahf
mov
in
xor
or
and
mov
inc
repz
out
lds
pop
mov
sahf
and
sbb
data16
mov
lret
inc
add
xor
mov
test
dec
mov
cmpsl
push
movsl
rolb
or
or
test
fs
mov
subb
repz
push
xor
clc
iret
xor
out
nop
movsb
fidivs
mov
sbb
mov
cmp
ror
and
call
fnsave
rcrl
and
and
and
int3
pop
add
add
sbb
addb
es
dec
mov
mov
dec
addb
aam
and
sub
mov
cmpsb
movsb
and
and
mov
clc
decl
shrl
adc
pop
jae
push
xlat
mov
sbb
or
adcb
pop
mov
pop
mov
icebp
hlt
cmp
or
mov
xchg
push
pop
mov
sub
dec
sub
rcrl
xchg
sub
int
push
xchg
add
enter
sub
psadbw
or
mov
das
sub
pop
mov
shll
and
mov
ss
leave
xor
mov
pop
or
je
push
test
inc
or
mov
push
or
sub
shrb
outsl
jb
fisttpll
hlt
sub
or
sub
adc
mov
mov
adc
icebp
int3
sbb
insb
mov
in
loope
xchg
out
or
mov
mov
cltd
adc
add
and
add
xchg
jl
adc
xor
pop
cltd
cmp
mov
jne
cmp
sbb
adc
adc
dec
mov
lea
adc
adc
inc
sub
and
or
je
pop
adc
or
adc
adc
jecxz
mov
fsts
shl
or
clc
dec
adc
xor
pop
sbb
or
mov
push
pop
fwait
rcrb
stos
ret
pop
stc
testl
roll
push
push
out
adc
dec
push
sarb
push
scas
sub
pusha
ja
lea
jns
push
popa
add
mov
sub
pusha
scas
adc
push
aam
adc
stos
test
adc
arpl
sbb
cmp
jb
fstps
jbe
out
pop
mov
add
js
adc
scas
int3
sbb
mov
out
adc
jno
jmp
jbe
sub
cwtl
pusha
xor
pop
mov
dec
rcll
adc
aaa
int
or
sbb
cmp
mov
sbb
pusha
jecxz
decb
push
sbb
adcl
pop
dec
dec
sub
xor
and
and
adc
sbb
fsubl
or
sbb
mov
loopne
sbb
sahf
enter
mov
and
push
imul
stc
add
jbe
or
sbb
shrb
in
adc
xor
mov
add
scas
dec
aaa
mov
in
mov
test
pop
out
jo
jne
pop
test
mov
ja
aad
inc
mov
hlt
jae
and
mov
push
add
sub
jmp
or
or
cmp
cld
stos
jmp
lea
adc
sbbb
call
dec
mov
add
outsb
xchg
stc
ficoml
mov
pop
popf
push
add
push
cmp
jmp
sub
mov
jl
mov
pop
ficompl
sbb
mov
repz
xchg
sub
add
mov
sub
movsb
dec
dec
loopne
or
adc
pop
or
lcall
pop
scas
push
hlt
adc
daa
fisubrl
or
adc
dec
stos
mov
sbb
fcomps
movsl
mov
or
sub
add
mov
inc
mov
inc
add
jbe
or
test
cmp
adc
scas
test
lods
or
pop
dec
sub
adc
push
add
int3
adc
hlt
sbb
sub
sub
sahf
mov
sbb
pop
je
dec
and
mov
or
pop
repnz
add
dec
push
bound
push
cmp
sub
aad
inc
pushw
xor
sub
mov
inc
shl
jb
push
add
in
fcoms
sbb
xor
lret
pusha
int3
or
mov
jbe
mov
mov
add
xchg
xor
add
add
push
out
xchg
out
xchg
dec
rolb
mov
adc
js
lea
rclb
les
push
adc
dec
enter
add
scas
dec
inc
push
push
jp
add
shrb
mov
fs
mov
mov
xchg
dec
mov
jne
mov
adc
adc
dec
test
insl
xchg
sbb
add
movsb
mov
jmp
adc
fldenv
shrd
or
or
popa
add
adc
les
rcr
mov
lods
cmp
leave
jl
negl
xchg
add
dec
or
les
cmp
or
sbb
sub
mov
in
add
mov
and
or
movsb
add
or
lods
add
insl
out
orl
mov
rcrl
xor
movsl
mov
xorl
aas
pushf
xchg
enter
mov
jmp
dec
jmp
sbb
fsubr
repnz
cld
dec
or
movsl
add
sub
popf
inc
mov
pop
inc
loope
fsts
adc
push
jo
movzbl
sbb
cmp
imul
loopne
mov
dec
dec
incb
mov
adc
push
lret
aam
les
loop
int3
rcrb
adc
jne
pop
sbb
faddl
push
into
repz
es
repnz
repz
dec
ret
push
cmp
test
daa
repnz
dec
push
stc
lods
sub
iret
xorb
sbb
lea
movsl
cmp
sub
inc
aam
or
popa
out
test
xchg
jecxz
push
scas
es
icebp
cmp
pop
sahf
adc
mov
dec
add
rorb
mov
or
xor
dec
clc
pop
fwait
testb
icebp
dec
and
push
lods
pop
sub
int
dec
aam
pop
inc
add
dec
jecxz
xor
or
dec
lods
cmp
rcr
popf
jns
ficoml
cmp
adc
jle
repz
push
cmp
sbb
dec
xor
testl
or
adc
loope
pop
dec
jecxz
mov
lock
mov
dec
or
mov
push
hlt
adc
or
push
ret
add
mov
shlb
call
mov
jge
out
call
test
xor
in
aaa
or
int
mov
or
pushf
cli
sahf
sbb
arpl
xchg
mov
dec
je
icebp
ret
call
sti
mov
faddl
jo
and
and
lahf
mov
or
adc
dec
ljmp
sbb
adc
in
xchg
xchg
adc
inc
xchg
scas
imul
cmp
icebp
or
or
push
sub
add
pop
pop
push
loop
mov
testb
mov
shrb
shlb
push
sbb
nop
rol
aam
js
add
test
mov
daa
int3
std
notl
pop
hlt
adc
movsb
add
incl
push
cli
cmp
xor
fdivrl
int3
imul
add
aam
aaa
divl
notl
lods
hlt
add
sub
shl
mov
rcrl
outsb
sti
mov
lret
push
mov
out
pop
mov
jmp
add
out
adc
leave
adc
fildll
mov
mov
pop
push
in
int3
pop
dec
cmp
test
in
std
into
xchg
adc
mov
shlb
fcomi
aad
les
stc
int3
push
push
call
and
mov
xor
int
pop
insb
xor
gs
shl
mov
bnd
enter
pop
cmp
cmpsb
paddsb
pop
and
adc
sarb
mov
aam
inc
std
stc
roll
xchg
stc
add
sub
sbb
adc
enter
adc
mov
notb
jne
je
adc
adc
or
mov
clc
xor
lea
jno
inc
add
mov
or
fs
xor
and
int3
aad
dec
or
mov
loopne
dec
das
jmp
adc
mov
aad
aam
loope
or
aam
pop
shrb
add
data16
xchg
and
xor
add
fsubrs
push
jbe
aam
dec
aam
enter
sarb
out
pop
jecxz
lret
mov
push
das
incl
mov
call
shll
mov
aas
in
mov
add
adc
add
iret
pop
jne
mov
inc
shrl
sbb
xor
out
idiv
movsb
cmp
lahf
push
lea
int3
test
inc
jbe
out
in
xchg
fmull
in
cmpsb
cmp
dec
adc
xchg
stos
cwtl
cmp
xor
mov
cmp
cltd
int3
sbb
bound
mov
jmp
jecxz
jmp
push
inc
int
andb
pusha
scas
sbb
inc
test
cmp
rcll
mov
mov
loop
sbb
das
rorb
gs
movsl
push
and
movsl
inc
push
leave
pop
sahf
add
loop
pop
mov
int3
enter
aas
mov
notb
add
jl
fadds
mov
cltd
xor
add
scas
dec
loope
fldt
repnz
stc
outsb
jb
fyl2x
fucomip
jb
fsubrs
cli
pusha
add
push
mov
adc
mov
adc
popf
out
xor
movsl
adc
jnp
adc
cmpb
enter
clc
loopne
inc
es
adc
adcb
aam
ret
hlt
adc
inc
xor
inc
loop
and
imul
in
fsubrl
out
or
movsl
push
out
ss
out
mov
fidivrl
adc
adc
mov
xchg
loope
add
mov
nop
loope
xor
push
mov
gs
fnstcw
sbb
test
test
pop
cs
in
loopne
sub
xor
sbb
aam
jne
cmp
mov
or
inc
int3
in
sbb
cltd
xchg
sbb
imul
add
cmp
add
lea
stc
or
jmp
push
mov
add
out
add
mov
in
sub
adc
fstpl
mull
pop
jmp
lds
adc
adc
xchg
sub
jge
cs
sub
jns
or
xchg
push
or
clc
mov
add
in
cld
and
in
daa
decb
addb
in
or
lahf
and
loopne
xor
sbb
sbb
stos
cmp
sub
push
pop
sbb
cmp
dec
jmp
xchg
dec
and
or
or
popa
sub
rclb
imul
mov
jne
aam
sahf
mov
fbstp
and
xchg
and
mov
inc
adc
les
ljmp
ljmp
not
sbb
and
call
lcall
adc
mov
lret
arpl
loope
orl
outsl
dec
jmp
push
repz
movsb
jmp
rol
icebp
pop
mov
clc
mov
ja
adc
stc
loope
ret
jmp
jl
and
push
bound
daa
sahf
ja
xor
adc
daa
iret
jbe
sahf
pop
scas
sub
loop
cmpsl
sahf
inc
cmp
shlb
cmp
sahf
lret
lods
jg
in
cwtl
adc
adc
leave
and
push
or
das
movsb
test
shrb
call
popa
popf
fisubrs
pusha
pop
out
rcrl
sub
movsl
or
cmc
pushf
push
inc
aas
xchg
in
cmp
popa
mov
int3
add
pop
shrb
push
call
mov
add
scas
pop
imul
push
icebp
adc
adc
cmp
push
jmp
int3
xchg
outsl
xchg
pop
mov
add
cltd
cltd
mov
add
pop
enter
add
rorl
ja
das
fldt
lds
cltd
fsubl
mov
pop
stos
pop
in
idivl
mov
jp
mov
icebp
xor
in
mov
in
test
scas
inc
adc
xor
lahf
fists
divl
pusha
in
xchg
sbb
adc
sbb
in
rcrl
clc
mov
xchg
push
cmc
rol
cltd
call
sbb
adc
sbb
sbb
add
lahf
stos
sub
sbb
lods
jnp
pop
add
imul
mov
out
cli
int
mov
dec
jb
in
xchg
mov
adc
xchg
pop
add
js
mov
mov
jne
xchg
fs
add
mov
mov
cmc
sbb
sbb
jne
push
sub
push
movsb
dec
adc
in
xor
sahf
test
add
std
sub
jmp
mov
int
push
sbb
cld
or
dec
loopne
aas
add
cwtl
cs
jmp
in
or
push
lret
lods
sub
hlt
adc
fucomp
sbb
inc
lret
js
pop
ficoms
jge
push
rcrb
sbbl
pushf
cld
adc
je
cltd
repz
rcr
dec
fcoml
lea
cld
dec
cld
sbb
pushf
jle
dec
cmp
popf
xchg
mov
repnz
xchg
cmpsl
sbb
mov
push
mov
jo
sbb
mov
xor
xor
test
or
rcll
lahf
dec
stc
leave
jge
insl
pop
fnsave
mov
add
adc
out
jno
stc
repnz
inc
or
sub
cld
xor
add
shll
mov
out
adc
rolb
jge
adc
shlb
test
push
mov
fistps
cmpsl
out
je
lea
out
mov
or
sahf
lret
popf
popf
jl
cmp
dec
sbb
repnz
cmc
icebp
mov
loope
shr
cmp
xor
xlat
sbb
push
push
sbb
cmp
test
push
dec
or
call
sbb
scas
and
push
aas
cmpl
pop
bound
and
lods
mov
mov
dec
hlt
sub
icebp
xchg
pop
jmp
mov
sub
xor
popf
fists
fsubr
in
fs
mov
push
jg
jmp
shr
cmp
ja
call
or
jns
loopne
test
enter
aaa
push
push
push
cmpsl
inc
in
sub
xor
jge
or
dec
add
adc
pop
jmp
popa
arpl
mov
lahf
jle
inc
sar
rcrl
cmp
mov
mov
notl
and
pushf
test
fbstp
fsubs
cmp
and
sbb
add
ja
out
xor
inc
test
imul
aam
sbb
sub
clc
mov
sbb
fisttpl
push
mov
pusha
fimull
push
xchg
imul
movsb
inc
cmc
pushf
xor
fimull
push
xor
ficompl
or
fstps
xchg
fsts
jp
push
or
pop
mov
fsts
psubusw
xlat
fcomps
mov
fsub
inc
hlt
jl
fcoms
andl
daa
fadds
stos
adc
fcoms
jle
in
fbstp
in
pusha
fisttps
jl
mov
mov
sbb
adc
fists
js
or
rcrl
aam
iret
lods
int
push
adc
notl
divl
dec
imul
in
pop
outsl
cld
aad
add
sub
sub
add
mov
fs
out
push
add
fmull
xor
add
mov
cld
pop
pop
push
sti
jmp
mov
jno
lret
push
mov
dec
fnstsw
pop
push
or
or
add
out
pop
add
adc
fcompl
inc
fst
pop
dec
inc
push
jmp
imul
cmp
test
adc
jno
cli
push
test
push
dec
in
movsl
outsb
ret
fcoml
add
ss
roll
pop
inc
adc
mov
pop
dec
sbb
mov
inc
fstl
mov
sbb
addl
mov
sbb
loope
jne
add
hlt
sub
enter
sbb
scas
out
stos
ret
js
dec
ret
xor
mov
jp
and
push
gs
pop
adc
adc
insb
add
sub
test
add
adc
xor
ret
inc
imul
not
mov
repz
out
notl
das
in
sbb
add
adc
icebp
or
imul
sti
sub
mov
in
popf
push
add
shll
fwait
sbb
les
sub
imul
xor
mov
dec
dec
mov
shll
pop
or
push
cmp
adc
or
rcll
inc
rorl
and
add
cmp
rorl
rorl
loop
test
iret
dec
pop
mov
sbb
push
push
and
sub
mov
rolb
pop
sbb
sub
sub
jmp
fwait
mov
and
xor
cmp
jno
sub
gs
out
xor
jne
insl
hlt
jmp
or
xor
lcall
lcall
pop
fidivrl
aaa
dec
ficompl
addr16
fadds
icebp
test
insb
push
mov
imul
add
daa
clc
out
les
dec
cmpsl
adc
les
pop
push
cmc
lret
add
out
jge
ljmp
dec
mov
call
mov
scas
leave
in
mov
movsl
stc
inc
jne
pop
rolb
enter
rclb
pusha
call
loop
lea
repz
xchg
sbb
inc
scas
sti
dec
das
mov
mov
aam
or
add
ficoml
in
ret
ja
add
je
fadd
sbb
rol
lcall
inc
out
push
adc
dec
add
mov
xchg
mov
adc
leave
fisttps
pop
mov
jne
lock
int3
test
adc
je
adc
adc
mov
hlt
dec
adc
and
aas
or
into
push
mov
pop
adc
add
es
mov
outsl
mov
fwait
pop
mov
outsl
ja
push
add
mov
sbb
jmp
stc
daa
sub
xchg
dec
mov
cld
mov
arpl
xor
mov
lret
xor
and
enter
add
lea
and
ljmp
leave
hlt
int
mov
xchg
scas
mov
sub
aam
jg
and
pop
mov
aam
aas
mov
das
dec
mov
pop
inc
push
or
or
fsubl
xor
movsl
pop
or
pop
add
xchg
mov
cltd
or
addb
sti
fsubrs
or
cmp
repz
cmp
jne
xchg
ret
rcll
rolb
and
or
movsb
and
bound
aam
popf
outsb
nop
push
call
hlt
mov
sub
ficoms
repnz
nop
xchg
sbb
aam
mov
jmp
fadds
push
flds
jnp
push
out
pop
push
mov
add
push
sbb
mov
push
xchg
jl
add
mov
or
lods
xchg
push
push
adc
push
inc
push
jg
jnp
push
push
pop
xchg
sbb
mov
pop
mov
or
pop
pop
lahf
movsl
cmp
rolb
xor
leave
jne
jg
add
roll
das
xchg
lea
pop
cmpsl
mov
sbb
jno
clc
out
popl
testb
aad
fs
sub
xor
int3
les
sbb
mov
dec
adcb
stc
icebp
jl
ljmp
mov
cwtl
jmp
push
mov
cmpb
cmp
adc
xchg
loop
fistpll
call
dec
mov
hlt
jno
push
xchg
and
test
or
push
dec
or
inc
test
js
call
je
cld
shl
xchg
cld
fcoml
pop
mov
cltd
mov
cld
adc
imul
mov
or
xchg
in
das
jns
and
cmp
sbb
xlat
mov
mov
push
push
jmp
inc
enter
aam
sarb
jnp
fsub
rclb
sub
or
mov
xchg
sub
xchg
mov
or
movsl
xor
aam
negl
and
dec
adc
push
xor
xchg
nop
sti
add
outsb
cmp
lods
jge
out
leave
std
outsl
cs
add
adc
mov
dec
or
call
daa
jno
out
mov
inc
shlb
or
daa
push
xchg
call
sahf
shll
rclb
push
sahf
pop
call
adc
lret
sub
mov
call
sbb
arpl
xor
scas
daa
push
jns
pop
dec
aad
jge
xchg
jno
mov
pop
dec
les
add
enter
mov
aad
sti
jmp
cli
pop
add
daa
inc
fildll
fsub
mov
insl
pop
xchg
popf
aad
push
mov
inc
dec
out
add
pop
dec
and
mov
in
sbb
mov
lret
or
leave
pop
test
in
aam
int
pop
sti
add
adc
pop
jbe
mov
xchg
sahf
or
int
jle
mov
aam
mov
pop
incl
test
mov
xor
fcomps
or
mov
push
cmp
and
loopne
lods
iret
ret
cmpsl
test
mov
pop
int3
adc
in
icebp
xor
test
pop
add
rolb
add
repnz
ljmp
jmp
ret
mov
in
or
pop
or
cmp
roll
pop
pop
adc
dec
lea
jecxz
pop
movsl
dec
int3
cmc
sbb
fidivrs
mov
or
xlat
pop
add
inc
stos
mov
dec
adc
or
cmpsl
jp
xor
adc
int3
add
ret
incl
cmp
xor
imul
iret
or
lods
inc
movsl
xorl
mov
enter
push
add
sub
fxch
pop
sub
adc
stos
jnp
in
mov
ret
fsubs
sbb
mov
int
xchg
negl
aad
inc
rcll
inc
add
or
and
adc
sahf
mov
mov
sub
mov
rolw
lcall
jle
test
movsb
test
daa
cld
rorl
adc
sbb
adc
cmp
sahf
repnz
xor
out
repnz
shll
add
dec
add
cmpsl
sbb
iret
movsl
sbb
dec
or
insl
adc
lea
imul
outsl
adc
call
sahf
stc
int3
out
or
pushf
leave
or
jnp
or
ss
mov
xchg
pop
test
mov
mov
sub
enter
int
jp
je
nop
mov
dec
xor
dec
movsl
enter
push
pushf
clc
mov
dec
xchg
mov
push
sub
outsl
int
or
les
lds
xchg
ss
movsb
cwtl
mov
hlt
mov
inc
aad
sub
sti
jecxz
adc
mov
aaa
mov
push
or
insl
jno
dec
mov
xor
leave
leave
adc
lods
pop
push
sub
dec
stc
stc
mov
jmp
mov
sub
ss
mov
sar
push
adc
inc
sub
xor
adc
add
into
xor
clc
push
std
inc
aad
xor
adc
icebp
dec
shlb
hlt
fbstp
dec
sbb
dec
add
mov
sbb
mov
sbb
cmpsb
orl
addr16
enter
push
icebp
fsubl
push
mov
addl
pushf
mov
push
mov
lds
daa
arpl
push
les
mov
cmp
shll
push
sub
mov
pusha
mov
cmp
mov
popl
xchg
movsl
add
inc
xchg
jnp
mov
insl
jns
mov
out
inc
ret
xchg
jmp
mov
mov
loopne
sub
jo
push
repnz
and
pop
mov
mov
xlat
int3
cld
dec
xchg
add
pushf
fs
push
loopne
movsb
test
loop
mov
and
and
adc
mov
dec
dec
es
imul
sbb
inc
movsb
mov
adc
and
xor
movb
ja
sarl
mov
call
jecxz
xlat
cmpsb
aam
call
int3
fdivl
stos
test
cs
pop
add
cmp
popf
xchg
xchg
xorl
mov
loopne
outsl
sti
fadds
mov
cmp
shrl
in
sub
jb
pop
movsl
mov
and
and
xchg
or
xor
lar
scas
cld
shll
add
les
shrb
lea
js
adc
adc
int
loopne
jb
adc
or
das
out
mov
ret
enter
and
mov
mov
or
in
mov
shll
das
mov
aam
adc
inc
in
pop
lcall
inc
lahf
mov
mov
xor
and
rolb
sub
fadd
ljmp
pop
adc
or
mov
pop
mov
fisttps
adc
and
mov
idivb
jbe
adc
xor
repz
call
movsl
inc
mov
addr16
rcrb
dec
or
dec
lahf
or
push
xor
movsb
and
push
inc
sbb
negl
inc
add
lcall
mov
mov
add
aaa
mov
sub
sub
pop
enter
push
sbb
aas
dec
jp
xchg
sahf
or
or
inc
mov
inc
xchg
out
xchg
mov
imul
and
dec
not
xchg
or
adc
inc
mov
lock
xor
ja
sarl
mov
stos
enter
inc
sub
in
mov
jne
cmpl
mov
sub
movb
push
dec
adc
sahf
movsb
fcomps
test
lcall
push
mov
inc
jmp
in
cltd
mov
adc
fcomps
mov
in
fwait
sarl
dec
xor
adc
outsb
mov
je
mov
xor
call
sub
out
in
bound
mov
or
jo
or
mov
out
sub
fisubs
jl
not
in
xchg
aam
mov
xchg
popf
lea
sbb
mov
push
cmc
in
jmp
push
xor
popa
mov
call
xor
imul
pop
cmpsl
adc
inc
inc
sbb
psubq
ds
orb
cmp
cmp
insl
cmpsb
ljmp
ja
shlb
vmovaps
pop
jne
mov
sub
dec
or
pop
es
ret
aas
aad
cwtl
inc
xor
popf
cmpsl
mov
mov
sub
xor
and
out
inc
out
jns
decl
pop
scas
inc
xchg
out
sub
fmull
cmp
sbb
mov
jae
add
jne
cmp
adc
cmp
iret
xchg
adc
divl
mov
xchg
push
xor
jle
cli
mov
ljmp
mov
arpl
rol
mov
jge
xor
iret
or
movsl
or
xchg
es
inc
cwtl
std
les
rcr
mov
hlt
add
lea
cmp
nop
jnp
popf
loope
jns
sbb
clc
fcomps
loopne
xchg
sbb
adcl
sub
int
jge
sub
ret
iret
hlt
mov
jmp
sbb
lahf
cld
push
jns
bnd
inc
or
jne
pop
lea
xor
and
leave
xor
stc
add
xchg
jp
push
adc
mov
inc
adc
mov
cld
xchg
sbb
adc
sub
add
imul
xchg
add
loop
and
orb
out
pop
pusha
aaa
ror
mov
sub
and
mov
lods
sub
jp
inc
cmp
dec
in
mov
shl
fcoms
push
add
mov
xchg
jnp
dec
mov
sahf
mov
movsl
divl
inc
repnz
sbb
mov
in
call
xchg
aaa
mov
pop
dec
mov
repz
push
mov
imul
jg
push
dec
ja
mov
adc
mov
add
fsubp
leave
gs
stc
scas
push
rcrb
call
hlt
mov
in
sbb
int3
icebp
push
xchg
fwait
mov
fwait
xchg
adc
or
fwait
cld
fsubl
icebp
add
pop
adc
fwait
outsl
pop
sub
subb
andl
lcall
mov
sbb
jl
repnz
movsl
dec
jne
scas
hlt
mov
sub
push
sub
outsb
pop
mov
jns
xor
dec
adc
cmpsb
add
or
and
or
add
cs
adc
and
insb
in
repz
lret
das
sahf
out
daa
xchg
call
and
insl
and
dec
in
lret
outsl
les
mov
sarb
rcrl
xor
ret
icebp
aas
add
mov
fisubrs
shll
mov
lcall
xchg
inc
stc
or
or
icebp
xchg
inc
pmaxsw
jle
adc
or
sbb
xor
mov
xor
cmp
xchg
insb
adc
push
inc
adc
sbbb
pushf
pop
jns
adc
jecxz
enter
xor
sub
aaa
adc
arpl
arpl
test
push
hlt
or
mov
xor
mov
loop
leave
or
ret
jp
add
int3
fisubrl
pusha
xchg
mov
jbe
psrlw
loope
lret
rorb
pop
sbb
scas
pop
add
or
cs
adc
adc
loope
sbb
or
mov
inc
test
scas
pop
add
add
mov
movsb
pop
subl
add
loope
out
add
psubb
int3
or
pusha
xchg
mov
inc
cmc
sub
mov
jl
rolb
ret
inc
mov
clc
cltd
mov
mov
pop
sub
das
add
sub
ret
fucom
bound
sti
clc
negb
jg
jae
push
xor
cld
jmp
sbb
push
lods
adc
cmp
sub
and
cld
aas
jle
xchg
xchg
push
cmpsb
es
adc
adcl
mov
hlt
mov
enter
sbb
dec
sbb
jmp
vcmppd
sub
adcb
sarl
call
ljmp
inc
xchg
dec
test
int3
lods
or
push
sub
jge
jae
cmp
push
rolb
movb
repnz
dec
xchg
hlt
push
lea
lods
dec
mov
loope
xchg
enter
loop
xor
enter
cs
xor
mov
and
jle
push
dec
cld
nop
cmpsb
ljmp
js
std
test
lcall
or
xor
cmp
push
lret
insb
cltd
enter
aaa
xchg
dec
sahf
xchg
xchg
int3
imul
xor
loope
mov
push
in
cmp
ret
fsts
mov
std
lods
aam
bound
xchg
mov
cmpsl
xchg
sbb
mov
jmp
subb
mov
mov
mov
repz
jecxz
add
add
ljmp
out
test
int3
lret
sub
insl
ret
das
fiadds
push
incl
add
shrl
call
outsl
and
sbb
mov
rcrl
inc
call
ja
lds
cmpb
mov
out
cmp
sahf
inc
bound
xorb
push
mov
loope
pop
repnz
test
sbb
inc
cmc
cmp
outsb
sub
sub
xchg
xchg
mov
and
mov
subb
xchg
or
arpl
mov
push
mov
notl
dec
imul
dec
hlt
mov
adc
rorl
jbe
fwait
jl
add
enter
arpl
rorl
cld
pop
mov
push
loop
or
cmpsb
add
pop
adc
sub
dec
and
xchg
jae
mov
push
mov
lret
dec
sub
bound
and
mov
and
push
dec
sub
mov
sahf
sbb
mov
push
fiadds
pop
aam
jl
inc
mov
or
xor
add
xchg
mov
sbb
mov
push
test
sub
xor
addl
adc
lods
ds
cld
imul
or
sub
orl
insb
inc
jne
mov
cwtl
inc
add
adc
push
sub
jno
pop
enter
add
xor
int
adc
int3
out
fistps
std
lret
dec
jmp
xor
sti
fwait
add
mov
xchg
mov
mov
mov
dec
jb
shr
sbb
bound
sbb
adc
sbb
fisttpll
call
inc
mov
popf
std
cmp
mov
add
push
out
repz
movsl
loopne
adc
sub
inc
enter
sbb
pushf
jne
in
adc
sub
inc
sbb
in
jno
sub
mov
or
adc
loope
dec
xor
aas
xlat
cmp
jne
sub
xchg
sbb
mov
xor
fwait
push
adc
icebp
xor
xchg
aas
jbe
mov
add
jne
mov
call
cwtl
out
lahf
nop
mov
lcall
das
sbb
aas
xchg
sahf
inc
mov
add
call
push
pop
adc
test
sbb
in
repnz
mov
xor
mov
fwait
pop
add
mov
or
lea
push
jecxz
lea
dec
sahf
or
mov
mov
sub
es
ret
setb
repnz
negb
notl
add
pop
xchg
sub
xchg
xor
dec
imul
inc
test
add
add
xor
dec
fcmovb
fnstcw
cmp
mov
cmc
and
negl
fldt
loop
or
pop
lea
inc
and
jae
xchg
cmp
jb
inc
jae
xchg
scas
pop
lcall
or
repnz
inc
xor
das
and
inc
cmp
repz
movsl
cmp
cmc
ja
sub
enter
repnz
icebp
add
sub
add
mov
or
aam
sub
cld
int3
push
adc
aaa
mov
xor
daa
out
dec
test
or
aad
push
xor
cwtl
roll
or
cmp
lahf
jb
std
dec
into
iret
ljmp
xchg
mov
add
push
adc
jno
cs
mov
mov
xchg
test
movsl
cmp
popa
inc
dec
sub
jl
jl
clc
mov
outsb
movsb
pop
std
or
cld
push
sahf
or
or
leave
pop
push
xor
jp
out
pop
sbb
cmp
jo
mov
or
movsl
mov
pop
mov
mov
xor
sub
xlat
ret
fistl
mull
mov
jge
in
xchg
inc
push
and
and
leave
cmp
je
ja
or
xor
ds
push
mov
test
push
mov
pop
insb
fimull
pop
mov
mov
pop
fidivrs
lahf
pop
jb
sub
inc
shrb
xlat
inc
add
or
dec
mov
subl
pop
scas
cmp
enter
cltd
or
fwait
out
mov
clc
or
adc
push
cmp
je
mov
xchg
mov
lret
ror
or
leave
xlat
cmp
pusha
inc
add
push
je
or
mov
rcll
lahf
jns
pop
pop
test
or
cmp
sub
sub
fmuls
push
sahf
mov
popf
sub
addr16
stos
std
cmpsb
and
jp
orl
popa
mov
jnp
dec
imul
stc
bound
xchg
lea
inc
sub
jmp
hlt
add
mov
mov
aad
push
in
mov
dec
mov
mov
jno
repnz
dec
lcallw
xor
insl
out
mov
subb
ja
in
shll
out
insl
mov
add
jne
nop
xchg
inc
rcll
mov
mov
fstpl
inc
int3
scas
sbb
sti
fildl
jmp
mov
icebp
inc
xor
xchg
repnz
mov
mov
out
mov
push
sub
cmp
pop
es
push
pop
add
enter
xlat
adc
pop
je
and
jg
out
cmp
lret
jg
pop
push
mov
stos
pop
add
enter
or
xchg
xor
cmp
ja
jmp
sbb
aam
inc
jg
and
mov
mov
push
ror
adc
cli
ss
sbb
and
inc
jmp
fildll
add
push
in
imul
int
sbb
negl
dec
aas
xchg
call
mov
cmpsb
add
sarb
jmp
sbb
test
jmp
std
std
fistl
push
andb
fnstenv
inc
cmp
popf
adc
sub
cwtl
or
or
push
sub
pop
mov
jge
daa
sbb
pushf
loope
cld
add
pusha
icebp
ficomps
ret
push
lods
jae
inc
loop
into
out
mov
mov
inc
push
dec
loope
dec
aad
mov
mov
push
push
roll
hlt
adc
xchg
mov
jbe
dec
sub
push
jo
aam
rolb
test
mov
das
and
or
or
and
jmp
inc
push
or
cltd
clc
xor
push
xchg
push
mov
je
adc
loopne
adc
sub
add
inc
cmp
mov
adc
xor
cmp
or
xchg
arpl
add
ja
dec
loopne
arpl
in
add
roll
arpl
mov
jbe
out
jae
cmc
adc
loope
sbb
inc
cmp
aam
push
pop
cmp
push
ljmp
in
fadds
call
jmp
and
pushf
sub
xor
pusha
dec
pop
cmp
call
jp
sbb
cmp
and
inc
dec
xchg
inc
mov
bound
loopne
pusha
and
xlat
cld
xor
in
movsb
mov
popa
ja
icebp
ss
xchg
aaa
xchg
cmpsb
add
shl
movhps
loop
test
xor
cmpsl
add
mov
xor
clc
into
xor
out
lock
test
mov
inc
pop
sbb
movb
loop,pt
cmp
jbe
mov
stos
cmp
jmp
xchg
add
out
lds
push
cwtl
das
loopne
mov
popf
sti
fmulp
mov
sbb
pop
mov
test
dec
adc
or
cmp
and
dec
dec
fs
int
mov
out
andl
nop
mov
dec
xchg
mov
xchg
data16
sub
jmp
fistl
scas
sub
add
mov
mov
and
mov
addr16
daa
jge
mov
mov
xchg
rcll
ficompl
adc
mov
pop
pop
push
in
cmpsb
scas
adc
sahf
js
rep
push
push
inc
mov
xor
and
sub
ljmp
jg
scas
pop
xor
pop
fistl
and
ss
sbb
or
sbb
fs
cmp
rcll
jmp
iret
adcb
sbb
es
mov
cmp
jl
out
pushf
mov
mov
add
or
lock
aas
cli
xchg
sub
dec
inc
stos
cmp
movsb
pop
pop
adc
repnz
fucomip
add
icebp
pop
pop
jecxz
jp
out
mov
mov
aad
pop
add
lea
sub
push
scas
sub
mov
lahf
mov
insb
mov
cmp
je
push
cmpsb
enter
push
cmpsb
or
push
add
pop
mov
negl
addl
sbb
or
sbb
rcrb
aas
add
adc
rorb
sub
or
mov
dec
adc
cmp
nop
das
dec
mov
mov
mov
inc
push
test
enter
cmpsb
incl
inc
test
ret
cld
out
jge
into
negb
das
shlb
ja
xchg
jnp
mov
pushf
fsubrl
mov
push
adc
je
push
call
and
jmp
and
cmpsl
lcall
jno
fs
jne
mov
scas
test
jns
ljmp
pop
aas
push
sbbb
jne
stc
xor
add
in
outsl
cltd
rcrl
iret
xor
daa
pop
sbb
pop
das
and
xchg
loopne
cmp
sahf
mov
int3
push
in
adc
mov
mov
popa
and
mov
ds
push
test
not
mov
fnstsw
int3
pushf
xchg
add
dec
mov
lahf
loopne
mull
sub
sti
notb
outsb
stos
dec
pop
daa
insb
gs
inc
mov
gs
das
sbb
cli
jecxz
shlb
cli
mov
inc
or
imul
jno
xor
aas
mull
dec
js
mov
rol
sti
aas
sub
sub
and
lahf
stos
adc
or
std
push
mulb
jp
cmp
pop
pushf
sub
shrl
pop
adcl
mov
push
add
jl
pop
daa
xchg
mov
push
aaa
xchg
cmp
sarb
int3
jg
cmpsb
lret
add
int
xchg
add
jnp
outsb
xchg
iret
dec
icebp
push
inc
stc
js
dec
insl
mov
repz
dec
insb
fcmove
aad
jns
lret
push
cmp
iret
mov
xorl
enter
sbb
and
adc
jmp
int3
ficoms
lret
dec
repnz
dec
sti
xor
dec
decl
addl
xchg
inc
mov
cmpsb
push
sub
pushaw
test
xchg
hlt
sub
xchg
push
xchg
push
adc
call
out
push
rcll
mov
or
cld
or
adc
lret
add
push
or
push
xchg
pusha
mov
sbb
repz
xor
mov
mov
pop
adc
insb
movsb
sub
add
dec
cmp
pop
sub
jg
fdivp
jp
movsl
push
test
cmp
push
lea
cwtl
xchg
xchg
sbb
push
mov
or
xchg
add
pushf
xchg
sub
mov
clc
add
xor
pop
push
and
xor
mov
cwtl
ret
sub
andl
orl
in
sub
lods
js
int3
push
push
jecxz
test
xchg
out
stos
cmp
cmpb
sub
jecxz
mov
sbb
xor
push
cmp
xchg
add
out
mov
xchg
sbb
push
cmpsl
pop
push
mov
sbb
jmp
cltd
dec
enter
aad
arpl
pop
cmp
daa
fadds
jae
mov
imul
pop
mov
cmp
movsb
movsl
test
pop
dec
ljmp
cmc
push
ljmp
clc
mov
imul
push
jg
stc
mov
jae
cmp
ficoml
pusha
xchg
dec
test
push
cmp
repnz
push
and
mov
or
sub
jae
sbb
popl
jns
loope
out
push
jb
xor
sbb
out
dec
sti
or
inc
dec
mov
push
jbe
lret
mov
pop
lahf
dec
orb
gs
pop
mov
xchg
bound
push
insb
test
insl
aad
xor
xchg
outsl
mov
inc
ja
xor
sbb
cmpb
dec
cwtl
add
divl
das
lcall
add
testl
mulb
notl
shll
loop
mov
fwait
xor
xor
pop
push
adc
jecxz
jge
lods
icebp
cmp
jl
inc
pop
aaa
icebp
sbb
call
add
mov
xor
push
adc
xchg
insl
sub
pop
arpl
scas
into
mov
jl
scas
popf
pop
xchg
inc
add
sar
xchg
dec
add
cld
cmpsb
adc
imul
movsb
push
imul
movsl
and
sub
mov
es
cmp
sub
mov
in
inc
in
subl
pop
pop
or
mov
enter
fistpl
mov
mov
fmuls
outsl
or
clc
mov
jecxz
xchg
inc
inc
dec
mov
push
imul
fidivs
jp
lock
push
cmp
or
mov
pop
arpl
add
add
jmp
xorl
push
inc
pop
xor
jnp
fisttpl
mov
xor
mov
outsl
cwtl
enter
enter
mov
mov
scas
pop
sbb
cmp
cltd
insl
pop
dec
xor
stos
mov
dec
pop
dec
mov
jnp
fdivrs
mov
jmp
test
mov
cli
jns
cmpsb
mov
idivb
adc
pop
sub
sub
xchg
in
sbb
test
stos
mov
int
xchg
jns
push
test
xchg
xchg
push
dec
gs
or
xor
scas
repz
in
cld
jmp
sub
xor
std
test
push
testb
int
inc
cmp
icebp
jl
mov
and
inc
lods
int3
jne
insb
mov
mov
hlt
adc
add
pop
mov
xchg
push
sub
xchg
outsl
sub
xchg
sbb
and
cmp
lea
rcll
fsubrl
adc
xchg
clc
shlb
sbb
inc
mov
xchg
cmp
hlt
int3
pop
pop
bound
stos
xor
jbe
les
cmp
mov
mov
xchg
sub
jle
mov
sbb
call
xchg
jmp
jecxz
inc
fstpt
xor
call
fs
xchg
and
call
inc
xor
jecxz
dec
fmuls
loopne
xor
mov
adc
mov
arpl
pop
pop
aad
jp
ss
aam
push
lea
or
pop
int3
imul
pop
push
xchg
push
cmp
incb
jl
addr16
daa
xor
mov
adc
scas
xchg
xchg
jecxz
imul
push
jbe
jns
jbe
pop
jge
stos
dec
pop
lcall
xlat
std
add
pop
je
mov
inc
mov
insb
xchg
icebp
addb
addb
out
js
loope
fcmovnbe
push
sub
push
icebp
or
add
iret
inc
jns
lret
cld
aam
loopne
lea
inc
push
divb
cwtl
lods
notl
ja
inc
mov
sbb
loopne
in
dec
lods
pop
xor
lret
inc
push
out
test
movb
push
lahf
jmp
cmpsl
pushf
pop
pop
add
adc
out
aaa
out
pop
call
jmp
sti
adc
mov
stos
xor
sbb
test
in
cli
pop
xlat
imulb
inc
dec
in
or
and
testb
or
xor
pop
inc
sbb
push
adc
cmp
adc
sub
fwait
outsb
dec
dec
out
leave
and
dec
jge
xchg
sbb
scas
inc
push
xchg
pop
pop
hlt
lds
aam
ret
shrb
sub
iret
jbe
or
ror
or
ds
mov
jmp
or
movsb
add
inc
sbb
outsb
stos
inc
mov
pop
xor
sbb
inc
adc
loop
sbb
sub
add
xchg
fcmovb
xor
jmp
pop
shl
cmp
push
outsl
pop
xlat
mov
xchg
data16
adc
sahf
aam
in
imul
and
pop
inc
aas
inc
mov
adcb
xchg
xchg
or
inc
push
mov
mov
les
fnsave
pop
adc
lock
jg
xor
xor
fldt
call
xchg
out
call
stc
push
out
or
bound
jecxz
out
ljmp
test
push
push
jbe
push
add
mov
inc
xor
movsl
cmpb
mov
push
arpl
sub
call
testb
sar
lods
fisubl
in
mov
fmulp
out
int
ret
enter
dec
xchg
pop
daa
psraw
jmp
jns
xchg
pop
add
mov
xor
cmp
and
mov
subl
inc
je
outsb
jno
clc
popf
jg
mov
push
cmp
mov
loopne
addr16
scas
imul
dec
rcrb
sbb
test
mov
aad
xor
rclb
jmp
mov
lahf
add
mov
daa
xchg
or
xchg
shll
mov
call
and
pop
add
pop
scas
mov
push
aad
mov
aad
lcall
popf
shll
popa
jmp
arpl
cs
sbb
dec
adc
in
sbb
dec
adc
arpl
daa
aam
sbb
sub
adc
cmp
cmp
pop
mov
stos
pusha
dec
or
js
push
cmp
add
imul
out
and
testb
fsts
rorb
add
xchg
mov
xor
idivl
mov
hlt
cmp
jle
shll
mov
jmp
xchg
sti
ficompl
cmpsb
adcb
sbb
daa
or
fisttps
in
hlt
cmp
inc
daa
fidivs
jne
in
mov
or
xchg
notb
ja
stos
int3
or
test
cmp
xor
imul
stc
int
xchg
pop
xor
push
lahf
shll
push
aam
fistl
or
cmp
or
shl
and
add
ror
sub
xor
xchg
loopne
negb
xor
mov
aas
add
push
and
cmpsb
xchg
mov
out
lea
mov
xor
jmp
mov
lret
daa
lcall
mov
in
sbb
aas
in
cmc
pop
pushf
mov
push
into
pop
lahf
cwtl
int3
xchg
xchg
and
mov
stc
aaa
push
cmp
lahf
fstpl
jp
sbb
insl
fldt
popa
sub
mov
cmp
cli
pusha
inc
test
aam
or
cmpl
stc
xchg
test
sbb
xchg
cmc
xchg
or
call
scas
xchg
sub
popl
loope
xor
xor
mov
mov
movsl
xor
dec
jl
mov
cmc
cmp
dec
popa
or
mov
xchg
fcomps
pop
xor
adc
dec
xor
pop
lea
inc
mov
and
outsb
in
pusha
rcl
daa
mov
dec
ljmp
loope
sarl
in
loop
and
xor
adc
lahf
jne
mov
hlt
jno
adc
les
add
dec
clc
mov
hlt
push
jl
pop
pop
xchg
bound
xchg
sub
xchg
call
lahf
pop
xor
add
scas
dec
jno
and
pop
cmp
inc
decb
call
mov
stos
dec
loop
std
xor
xor
mov
xchg
dec
jbe
mov
fistpll
jle
fldt
in
inc
jmp
add
mov
pop
test
lret
es
lds
cld
mov
sub
and
mov
rorl
or
mov
add
mov
xor
xor
idivl
mov
call
lock
ja
repnz
adc
shrb
xor
fdivs
adc
xor
xchg
cmp
dec
mov
xor
decl
pop
add
cmpsl
jmp
jno
fcompl
and
pop
lock
jnp
push
add
jns
lods
mov
and
sbb
fidivl
in
jl
aaa
jnp
add
cmpsl
shr
rclb
cltd
xor
rcl
add
mov
into
adc
stos
cs
fdivrl
mov
add
xor
or
push
imul
leave
ja
inc
inc
adc
and
sub
xchg
outsb
mov
jl
add
cmp
je
or
lods
dec
negl
shll
andl
es
cmp
enter
cwtl
mov
dec
bound
xor
jmp
jns
mov
mov
mov
mov
popa
mov
fdivs
inc
sti
addr16
cmpsb
jg
jnp
push
adc
jmp
es
add
fs
das
push
add
cmpsb
sub
ss
sahf
ljmp
jmp
and
or
push
hlt
sahf
rcrl
sbb
in
mov
lea
sbb
cs
fimuls
push
dec
outsb
pop
xchg
inc
jg
loopne
jmp
xchg
cld
das
or
cmp
int3
aam
rclb
decb
sub
loop
fsubl
mov
mov
xchg
jnp
and
cmp
stos
cmp
fimuls
lcall
or
icebp
in
inc
sub
in
mov
in
and
cld
push
sarb
mov
jmp
mov
popf
xlat
mov
leave
push
inc
or
push
jns
dec
jle
jg
fmuls
std
pop
cwtl
sub
mov
and
or
push
inc
add
adc
mov
sbbl
xchg
ds
lea
roll
lea
fwait
and
dec
pop
shrb
test
outsb
and
and
popf
adc
push
adc
imul
leave
pop
dec
jbe
pop
mov
gs
bound
jae
pop
and
jb
call
xchg
daa
dec
push
or
popa
add
call
int3
mov
dec
adc
pop
and
shlb
and
outsl
xchg
dec
sub
sti
jnp
lea
es
xchg
push
jo
inc
in
je
xchg
imul
test
clc
std
or
in
rclb
adc
jns
in
dec
rclb
pop
insb
adc
dec
aam
push
call
xchg
in
cmp
push
aaa
mov
mov
sub
pop
add
pop
jl
dec
pop
jo
sbbb
test
int
icebp
jl
imul
call
dec
mov
hlt
andb
popf
aaa
lods
and
xor
lea
push
and
sbb
xor
fisubrl
jmp
add
xchg
dec
cltd
jns
andb
dec
ret
loope
mov
push
call
ja
jmp
dec
inc
mov
leave
jg
sahf
xor
daa
adc
cs
mov
mov
cmpsl
pusha
and
pusha
adc
leave
and
or
dec
sbb
in
shll
jmp
cmp
lock
ljmp
insb
push
mov
jno
lret
rcrb
inc
push
nop
mov
cvtps2pd
les
xor
and
cmc
or
mov
xor
and
jge
xchg
mov
jnp
add
and
imul
pop
pop
inc
in
lret
jbe
mov
inc
iret
xchg
jns
sbb
mov
pop
sub
ljmp
clc
sbb
jmp
mov
nop
push
inc
mov
lods
xchg
add
les
ret
mov
sub
sub
or
push
icebp
push
xchg
cli
push
mov
mov
int
pop
aam
fistpll
adc
inc
es
xor
cmp
pushf
mov
pusha
rcl
ss
dec
hlt
repz
and
icebp
sbb
in
out
test
cmpsl
fisttpll
mov
xlat
mov
and
sahf
pop
mov
dec
and
inc
xor
adc
out
das
add
sti
xchg
divb
cmc
fimuls
pop
and
std
pop
rorl
sub
je
lea
push
mov
sub
inc
lods
std
pop
mov
pop
adc
mov
loopne
sub
pop
sub
or
out
loop
orl
cmpsl
lea
mov
dec
lahf
jns
popa
jae
aaa
es
mov
iret
inc
xor
cmp
testl
mov
or
lahf
xor
repz
enter
mov
mov
out
lahf
das
rorl
sub
push
push
xor
cmp
les
dec
das
mov
lret
adc
jae
push
add
and
add
push
dec
mov
or
jb
pop
stos
sub
and
test
mov
mov
mov
add
jb
or
icebp
add
mov
cs
repz
pop
add
cs
mov
inc
mov
add
sub
and
sbb
inc
aaa
leave
subb
xchg
xchg
push
les
dec
out
or
sbb
fwait
imul
aad
in
cld
movsb
out
ret
adc
inc
ret
rcll
in
or
cwtl
sahf
xchg
mov
xchg
jp
in
sub
ficomps
jecxz
xor
enter
out
cmp
popf
aam
dec
mov
aaa
mov
push
or
ficomps
call
inc
out
in
and
xchg
and
gs
push
dec
iret
adc
rcrb
and
leave
jle
jmp
xchg
pop
xor
cmp
or
dec
add
and
ret
xchg
stos
outsl
xor
mov
mov
mov
push
jnp
and
inc
hlt
inc
stc
push
test
mov
sub
sahf
cmp
aam
fildl
push
sub
mov
xor
sbb
fisttpl
fmull
cltd
or
fadds
jne
punpcklbw
call
xchg
mov
dec
or
sub
addl
jb
inc
mov
mov
jge
inc
int3
int3
cmp
scas
pop
push
mov
pop
clc
mov
rorl
push
outsb
idivb
push
or
push
les
and
or
jmp
call
leave
pop
mov
and
push
inc
pop
adc
adc
hlt
push
adc
or
xchg
popf
andb
mov
adc
adc
popa
sub
sti
xor
mov
add
fmuls
add
dec
adc
mov
fwait
jb
int
arpl
mov
adc
jns
xor
std
iret
adc
cmc
pop
call
std
xchg
cwtl
xchg
dec
outsb
xchg
dec
insl
mov
inc
lahf
gs
adc
sti
and
ljmp
push
and
push
rcrb
shll
jne
mov
ret
pop
add
fcoms
sub
sbbl
in
push
das
mov
inc
push
sbb
add
in
clc
push
rorb
call
push
gs
jae
cmp
xchg
add
hlt
data16
loope
push
adc
xlat
test
mov
mov
mov
add
mov
jnp
push
std
cmpsb
pop
pop
and
aad
lds
pop
add
js
repz
sti
test
push
inc
dec
pushf
cmp
pushf
cmpsb
sub
xor
jns
fptan
or
jb
adc
jae
or
cmp
mov
leave
mov
push
add
or
ret
outsb
test
call
sub
sar
cmpsb
shlb
jns
rcrl
xabort
xchg
dec
scas
je
dec
jbe
push
dec
cmpsb
int3
test
nop
imul
mov
jmp
es
aaa
mov
adc
fidivl
xchg
out
mov
das
mov
in
sub
imul
cld
add
push
or
mov
sbb
aas
mov
sti
push
in
fisubrl
shll
and
push
out
adc
out
sbb
js
xchg
sbb
jns
addr16
mov
sbb
scas
sbb
mov
sbb
or
dec
js
mov
jmp
popf
dec
dec
mov
sbb
inc
fdivrs
xchg
dec
add
push
sbb
popa
shl
or
sub
inc
pop
loope
pop
jne
push
leave
jge
ret
inc
push
outsb
roll
add
or
ret
add
mov
mov
xchg
mov
bound
call
cs
mov
dec
loopne
pop
mov
cmpsl
dec
lret
cli
add
sbb
sbb
jns
scas
mov
xchg
xchg
imul
loop
push
adc
movsl
mov
sbb
mov
push
xor
lea
ret
shrl
or
out
and
in
add
sbb
sbb
xchg
data16
adc
sub
aad
xor
movsb
dec
xlat
adc
sub
pop
dec
adc
inc
in
cmpsb
fwait
jge
jb
jns
scas
jp
push
dec
movsl
mov
pop
adc
add
xchg
jnp
cmpsl
adc
shrl
add
mov
or
out
mov
testb
mov
xor
mov
lret
mov
mov
push
xor
call
shrl
ja
enter
ret
and
sub
es
dec
add
subps
daa
clc
inc
or
and
enter
lds
pop
mov
nop
stc
pop
xor
inc
and
rorb
and
fdivs
out
andb
cld
jg
in
xor
or
add
mov
mov
loope
popa
or
xchg
push
dec
clc
lahf
mov
sub
mov
push
sbb
out
mov
fmull
dec
in
cmp
mov
adc
in
mov
xchg
jns
push
loope
data16
lea
inc
push
shlb
xchg
mov
fstpt
lds
aam
lcall
ret
call
lea
jmp
je
push
leave
cmc
cmp
sahf
testb
out
and
xor
sbb
jecxz
lea
shlb
add
push
inc
sbb
sbb
nop
or
cmpsb
mov
insb
push
pop
stos
push
fprem1
mov
pop
test
imul
inc
jmp
inc
add
adc
sub
mov
repz
inc
int3
add
bound
sub
cli
daa
insl
sub
loop
int
jmp
cmpsl
dec
or
pop
cmp
jbe
test
andb
sbb
jo
call
inc
adc
add
mov
lds
sbb
outsl
jmp
inc
or
pop
or
adc
pop
pushf
rorb
call
lcall
xlat
out
cmc
pop
jnp
add
sub
lret
or
stos
and
xor
in
insb
aam
add
fs
pop
leave
or
ret
arpl
xchg
mov
movsb
cwtl
xchg
out
insb
icebp
jmp
pop
ret
xchg
push
add
sahf
jne
xchg
sub
stc
addr16
insl
in
dec
add
in
in
call
or
cwtl
ljmp
data16
adc
jmp
leave
pop
inc
fs
mov
adc
pusha
adc
or
pop
addr16
testl
mov
xlat
sub
jl
loopne
loope
cli
bound
les
iret
dec
imul
hlt
insl
in
or
nop
jmp
mov
insb
bound
sub
pop
jmp
push
iret
xchg
in
inc
adc
mov
mov
xchg
xchg
mov
or
push
lea
xchg
sbb
in
dec
in
rolb
pop
dec
add
push
mov
roll
fisttpl
dec
mov
xchg
fists
aad
push
or
mov
push
pop
add
sbb
sbb
cmp
mov
push
std
loope
ljmp
popf
pop
jl
pop
xor
mov
add
add
in
xchg
sub
sub
movsl
fwait
inc
data16
jo
add
cmp
jle
jb
jae
repz
fldpi
lods
add
dec
add
inc
cmp
lock
mov
sub
cmp
enter
repz
stc
inc
inc
mov
hlt
jmp
inc
pop
cmpsl
and
sbb
fistps
sub
leave
dec
stc
inc
pop
xchg
mov
jg
loopne
mov
outsb
loope
leave
jne
dec
sbb
and
push
xchg
test
fldcw
push
adc
test
cltd
mov
cmpsl
xlat
mov
sub
pop
adc
out
dec
pop
inc
repz
sbb
mov
add
ja
je
cld
arpl
adc
repnz
and
cld
jbe
and
sub
lahf
jbe
stos
int3
in
push
pop
or
sub
int3
mov
mov
mov
or
xor
sub
lods
es
push
mov
mov
cltd
addr16
in
mov
mov
mov
fcomi
out
dec
xlat
dec
or
mov
sbb
xor
mov
mov
xor
insb
jmp
mov
mov
push
cwtl
adc
mov
aad
addr16
pop
or
or
mov
lods
andb
dec
lods
xor
push
stc
push
or
lret
pop
sti
add
mov
out
cld
or
inc
add
call
lahf
rol
jp
jae
ficoml
sbb
jge
mov
push
sti
or
fbstp
mov
js
push
ret
push
push
cmc
repnz
pop
sub
xchg
outsl
sarb
daa
aaa
lahf
add
rcrb
in
inc
mov
fdivrl
cmp
mov
sbb
xor
cmpsl
int3
in
pop
add
in
push
fnstenv
add
sahf
fistpll
mov
cmpsl
push
aaa
jg
sti
lahf
xchg
daa
push
jle
pop
pusha
jne
lahf
int
ss
push
fcmovnbe
cmp
xchg
stos
scas
orb
push
fcompl
pop
lcall
add
or
xor
mov
cmp
inc
cmc
xor
arpl
ficoms
pop
imul
mov
mov
mov
jmp
cmp
lea
flds
xchg
or
cld
sub
call
and
rorl
rcrb
in
clc
or
cmpl
call
add
jnp
in
fdivrs
mov
dec
insl
sbb
std
adc
mov
leave
jo
sbb
cmp
imul
in
mov
imul
insb
roll
xchg
cs
ret
jb
outsb
notb
adc
sub
in
jmp
lcall
rcll
and
sbb
leave
addb
adc
pop
sbb
push
xor
adcb
repz
pop
cmpb
xchg
dec
adc
repnz
movsb
inc
data16
aam
mov
sub
out
loopne
xchg
subb
sbb
jmp
dec
mov
jp
xchg
xor
ret
pop
adc
orb
or
mov
sub
dec
adc
push
adc
icebp
adc
ret
movsb
cmpsb
inc
icebp
addr16
mov
sbb
mov
jnp
das
adc
ljmp
lcall
ds
mov
mov
popf
sbb
mov
adc
cld
or
addl
out
mov
mov
push
in
insb
outsl
out
filds
cmc
or
push
test
pop
hlt
fcmovnbe
hlt
push
arpl
add
push
dec
xchg
inc
dec
xchg
push
cmc
push
sub
adc
testb
hlt
scas
add
popf
mov
cmp
xor
cwtl
addb
mov
icebp
sub
add
add
xor
xchg
jp
mov
rcr
or
dec
inc
cmpb
jge
mov
mov
les
xchg
push
or
mov
mov
cs
mov
cwtl
jl
xor
push
mov
add
imul
and
mov
popf
aam
push
push
int3
movsb
aam
push
dec
mov
mov
test
sbb
call
enter
push
or
or
pop
inc
push
xchg
mov
sbb
jge
dec
aad
rolb
inc
or
push
inc
outsl
into
popf
mov
rolb
inc
xor
xor
sbb
inc
mov
insl
mov
or
outsl
or
pop
and
mov
xchg
add
inc
or
jmp
or
adcl
pop
jno
push
dec
jnp
pop
inc
jp
cltd
mov
xchg
add
dec
clc
xchg
dec
add
adc
inc
js
xchg
shl
das
inc
mov
sbb
sub
xchg
xchg
and
into
jg
lods
loopne
hlt
push
sub
adc
cli
subl
inc
adc
int
inc
jge
push
push
test
jle
je
or
call
mov
test
inc
adc
lret
repz
cmpsb
ret
lods
push
pop
pop
clc
iret
sbb
adcb
xor
hlt
mov
or
xor
inc
add
xor
icebp
push
cmp
dec
or
arpl
test
dec
and
push
sub
out
mov
test
add
lret
dec
dec
add
xor
mov
dec
jo
test
fsubs
int
or
push
test
ss
inc
icebp
pop
inc
call
lret
scas
roll
push
stos
lds
addl
inc
and
pop
loop
nop
or
imul
adc
in
dec
aad
mov
lea
xchg
add
in
push
xor
sub
or
xor
or
mov
xchg
ss
inc
pop
jno
jne
mov
add
insb
into
mov
jae
or
into
xor
sub
lea
leave
cli
lock
cmpsb
inc
dec
lret
mov
in
jmp
adc
inc
icebp
out
or
xor
jb
add
sub
cmp
sbb
pop
cmp
test
enter
inc
notb
push
pushf
int3
add
or
push
cmp
je
inc
push
inc
into
or
xchg
add
jno
adc
sub
add
inc
and
jl
inc
imul
ljmp
inc
stos
cmp
lods
mov
mov
int
dec
xchg
adc
adc
loope
xor
sbb
cld
mov
ret
or
jmp
xor
sub
push
jge
cmpb
loopne
xchg
sbb
test
jmp
fldcw
pop
sbb
adc
push
adc
inc
push
pop
pusha
adc
adc
lea
sub
dec
cs
stos
sbb
aaa
or
xchg
jmp
mov
mov
pusha
mull
lgs
xchg
loop
sbb
xor
or
aam
push
dec
popf
call
mov
push
inc
aad
dec
dec
adc
out
addb
add
pop
jmp
inc
add
mov
cwtl
jmp
add
or
jbe
xor
lock
clc
aam
dec
inc
lds
xchg
sub
loopne
mov
sub
loope
iret
inc
push
clc
aaa
lds
xor
cmp
mov
fs
fsubrp
std
push
jecxz
inc
xchg
mov
add
jg
andl
das
jge
sahf
mov
scas
and
jl
mov
dec
cmp
ja
insb
mov
mov
add
or
iret
jns
xchg
jp
in
call
daa
xor
aaa
adc
jecxz
sbb
mov
add
inc
in
aaa
push
lahf
enter
xor
or
or
add
sub
xchg
dec
and
cmpsb
testb
stc
mov
dec
test
fisubrl
cwtl
pop
iret
push
in
sbb
pop
test
cmc
sbb
add
inc
ret
loope
dec
cmp
push
sbb
aas
pop
mov
or
mov
push
push
push
xchg
mov
xchg
test
add
sub
mov
add
jns
mov
inc
push
rcll
pop
in
jge
insb
iret
sbb
into
xor
jb
lock
pusha
icebp
cmp
pop
pop
inc
sbb
xchg
pusha
lret
dec
dec
filds
sub
push
in
icebp
movsl
inc
and
mov
les
roll
jnp
clc
loopne
pop
jae
cwtl
cwtl
cmp
inc
dec
inc
pop
add
and
repnz
clc
jl
xor
jmp
cmp
repz
jae
repnz
cmp
movl
pop
sub
or
hlt
sub
sbb
je
or
sub
sub
repnz
repz
lods
cltd
and
or
leave
lcall
mov
dec
inc
in
or
add
xchg
xor
aaa
repnz
inc
pop
call
dec
mov
sub
inc
push
pop
and
sbb
jb
jl
imul
ds
add
stc
dec
out
rcrl
mov
jno
je
mov
dec
sbb
push
into
or
add
inc
sti
xor
sub
sub
dec
mov
pop
lahf
nop
cmp
sub
shrl
push
call
pop
fimuls
sbb
pop
mov
pop
dec
repnz
call
sub
inc
pop
sub
ljmp
sub
dec
arpl
add
cmp
xor
fs
insl
rolb
cmp
loop
pop
push
push
popf
packuswb
scas
push
xor
out
sub
pop
test
push
mov
ds
test
idivl
add
inc
adc
xor
and
jle
pop
inc
xor
sbb
pushf
push
mov
mov
jl
sbb
mov
jge
and
pushl
call
or
imul
pop
sbb
sbb
inc
xor
sbb
stc
xor
mov
jmp
stos
fsubrp
mov
pusha
shl
icebp
pop
je
lret
add
jo
push
call
shl
es
clc
mov
sub
mov
sub
repnz
add
repz
pop
addb
int3
xor
or
sub
or
inc
mov
repnz
add
adc
sub
jbe
cwtl
jmp
fcomps
mov
bound
imul
fdivrl
ret
inc
pop
xor
xlat
add
jo
inc
cmp
sti
hlt
hlt
mov
mov
insb
nop
es
in
adc
inc
jmp
test
out
adc
adc
and
enter
sub
cmp
cwtl
clc
cmp
fnstenv
jae
sbb
xor
mov
push
mov
or
mov
test
inc
scas
loop
pop
xchg
lods
out
inc
hlt
sti
jb
jl
mov
in
lret
xchg
fs
clc
out
repnz
fiadds
test
repnz
or
sbb
repz
rcrb
loopne
pop
aas
xchg
iret
popf
pop
enter
or
or
pushf
jae
or
jbe
pop
mov
sbb
and
mov
sti
into
sarb
andb
jno
pop
jl
and
into
and
or
mov
jae
cmp
dec
cli
push
xchg
add
push
fstps
dec
pop
and
cld
and
aas
jl
sub
sbb
cmp
in
pop
and
repnz
adcb
sbb
arpl
or
push
ret
pop
les
call
pop
not
jns
inc
mul
sbb
and
jnp
or
sbb
mov
mov
mov
insb
pop
inc
inc
xor
call
push
and
mov
jl
pusha
orb
sub
sti
mov
pusha
mov
inc
negl
sbb
push
mov
push
clc
sbb
das
inc
pop
inc
fbld
fdivrl
or
sarl
cvtdq2ps
cmp
jo
inc
mov
dec
add
mov
inc
dec
mov
or
lret
ja
sbb
filds
stc
cmp
xor
xchg
jo
cmp
jg
stos
xchg
mov
loope
in
std
mov
in
mov
jle
loop
into
jg
jnp
push
inc
or
sub
xorb
icebp
add
insl
xchg
adc
pop
int3
dec
jl
xchg
cmp
pushf
test
inc
fidivs
lea
test
lock
sub
xor
mov
daa
dec
jb
push
loopne
test
aam
add
cmpsl
clc
sbb
in
lock
lods
ja
add
push
aam
dec
sbb
jl
jnp
push
mov
je
mov
or
lea
cmp
les
testl
or
xor
sbb
adc
cmp
pushf
rolb
scas
pop
jg
sub
clc
loopne
inc
loopne
adcb
inc
mov
add
jno
mov
xchg
push
cmp
mov
and
or
push
stc
fiadds
mov
call
pop
es
aad
aad
sbb
add
stos
mov
out
mov
shrl
dec
push
shll
pop
jl
push
xchg
pop
pop
add
mov
bound
dec
fdivr
nop
in
fdivs
xor
shll
add
or
lret
sarb
enter
mov
pushf
ja
or
sbb
or
cld
bound
xchg
xchg
dec
lret
jo
and
jecxz
scas
jl
dec
cs
and
adcb
push
push
inc
mov
andb
sub
cmpsb
add
into
xor
inc
popf
mov
or
sbb
push
rcrl
mov
jmp
mov
imul
ja
sbb
inc
pop
inc
add
or
inc
repz
xor
stc
in
andb
lods
mov
dec
mov
inc
pusha
push
inc
add
lahf
adc
add
inc
notl
jae
aam
imul
mov
mov
pop
pop
sahf
lahf
jbe
repz
mov
andl
rolb
mov
pop
gs
xor
and
jb
pusha
cld
push
push
xchg
test
sbb
incb
addl
jl
pusha
cs
popa
pop
icebp
bnd
sub
add
in
cmp
stos
push
sbb
adc
or
daa
cmp
mov
or
add
rcll
cmp
pop
and
jbe
cmc
add
push
fadds
bound
lcall
orb
xor
repz
sub
ds
out
jbe
leave
adcl
cmp
ja
das
sarb
mov
adc
or
push
cmovb
out
pop
xchg
out
inc
push
arpl
xchg
push
adcl
notl
pop
or
fsts
pop
jne
cmpsl
sub
sbb
or
mov
jne
call
dec
mov
fisttpl
cmp
add
xor
sbb
call
int
inc
mov
pop
jbe
add
shrl
add
imul
mov
jae
add
jo
pusha
dec
shlb
loope
sub
mov
loope
inc
dec
or
add
imull
loop
xor
call
xor
pop
out
dec
aas
and
dec
push
mov
mul
and
jmp
loop
xlat
outsl
in
roll
xor
es
negl
lock
pop
push
shrb
xorb
daa
adc
mov
popf
push
pusha
pop
or
xor
test
je
test
sub
clc
or
adc
jmp
xlat
jg
mov
or
repnz
or
add
or
and
xor
pop
test
push
or
sbb
push
cmp
jl
cmp
adc
push
push
adc
aaa
cs
ja
inc
ret
pop
inc
jmp
cmp
aaa
dec
mov
pop
sub
shrl
ficoms
movsb
or
mov
mov
in
nop
push
adc
outsl
add
jl
sub
ja
add
push
fidivrs
popf
je
ret
shlb
adc
xchg
lret
and
adc
push
rorb
xor
sub
leave
sbb
ret
cwtl
push
fadds
stc
add
mov
insl
xchg
sbb
jg
sub
and
or
cmp
add
jp
stc
push
jl
xchg
mov
test
insl
xor
mov
call
inc
pop
adc
pop
shlb
adc
mov
jl
test
ljmp
jge
insb
js
in
arpl
push
call
sbb
push
inc
jge
xchg
dec
adc
push
mov
mov
cmp
mov
jl
repnz
jge
mov
icebp
notb
inc
add
ljmp
jmp
sbb
fdivr
cli
sub
orb
inc
inc
pusha
pop
imul
push
sbb
dec
or
dec
cwtl
lock
cmp
inc
rorl
mov
jge
push
push
and
lods
adc
sbb
inc
data16
jge
push
nop
loopne
mov
xchg
xchg
fidivrs
jge
and
mov
mov
adc
ljmp
fwait
adc
daa
aas
sbb
and
cmp
cmp
mov
jmp
inc
or
mov
inc
jb
sub
inc
mov
or
lds
cmp
push
cmc
lret
in
push
shll
lea
fdivs
pop
jl
sub
jnp
add
or
mov
jle
test
lahf
or
das
jb
or
mov
call
pop
sub
sbb
cmc
lods
and
push
mov
mov
or
cli
mov
inc
add
inc
sub
or
movl
jge
xor
jnp
mov
or
adc
or
sbb
add
inc
fs
adc
xchg
das
xchg
rol
or
clc
cmp
jge
or
ret
push
push
orb
pop
jge
lods
xor
mov
fwait
sbb
bound
sub
cmp
dec
xchg
pop
pop
xor
shrl
adc
cld
jns
data16
icebp
or
push
lods
fs
jl
jmp
mov
xchg
mov
into
push
sbb
mov
mov
and
fcomps
sbb
ret
ret
pop
cmp
int
or
or
adc
xchg
js
or
sub
and
mov
add
mov
inc
or
shlb
lea
push
xor
sub
jg
adc
in
test
sub
cmp
cmpsl
adc
sbb
dec
stos
mov
imul
sbb
xor
add
or
and
iret
adc
cmc
add
sub
test
enter
stc
loop
pushf
mov
pop
lods
mov
and
sysexit
test
jge
and
or
ret
sbb
mov
mov
add
cmp
rcrb
testb
pop
lahf
add
jo
inc
adc
xchg
dec
sbb
sub
xchg
push
jle
mov
cmp
inc
and
sub
pop
pop
jg
sub
jle
data16
or
push
jl
xchg
bound
sbb
mov
push
mov
or
push
bswap
mov
push
sbb
dec
scas
gs
imul
cltd
lret
push
or
sbb
xor
sub
add
outsb
xchg
jg
mov
pop
mov
adc
xor
sub
stc
ja
imul
jb
rcrl
out
or
adc
push
rcrb
push
test
add
roll
imul
iret
sub
mov
lock
sbb
dec
push
xchg
femms
pop
mov
add
js
popf
dec
subb
and
mov
mov
dec
cmp
scas
repz
pop
fistl
sub
mov
les
mov
add
imul
gs
cwtl
dec
dec
dec
jl
xchg
xor
push
sbb
push
cltd
dec
sbb
ljmp
pop
xchg
mov
and
rcr
sbb
out
or
push
xor
push
mov
and
mov
sahf
mov
mov
push
pop
xchg
roll
icebp
pop
pop
jmp
test
push
arpl
je
out
sbb
scas
jge
cmp
lds
enter
test
pop
imul
push
test
repz
ret
or
testl
sbb
add
or
xor
dec
push
fnstcw
dec
in
xchg
jne
sub
adc
add
push
popa
sbb
fcomps
dec
cmp
clc
push
and
push
test
inc
call
or
iret
repz
popa
shll
xor
movsl
int3
jge
sar
sbb
test
and
cmp
adc
js
call
cmp
lret
inc
inc
fwait
loope
iret
push
push
dec
and
mov
inc
and
pop
push
in
ret
clc
mov
mov
scas
push
sub
iret
icebp
or
jmp
inc
rolb
ja
lock
shr
cmc
xchg
jmp
push
mov
movsl
adc
push
sahf
jmp
xchg
or
dec
mov
dec
dec
mov
les
sbb
and
dec
jge
std
xorb
scas
push
out
and
push
mov
pop
or
sub
mov
hlt
cmp
pop
es
out
btr
popf
out
pusha
or
mov
repnz
add
pop
add
inc
pop
sub
out
sbb
sub
das
inc
lret
or
or
inc
inc
int3
mov
sub
adc
int
cmp
test
dec
mov
test
sti
adc
or
nop
in
cmp
xor
out
dec
leave
imul
push
jl
mov
cmp
test
dec
cmp
jge
xchg
push
dec
sub
adc
jle
cmp
or
mov
and
xchg
mov
lret
sti
adc
add
daa
cmovl
adc
and
mov
inc
push
pop
inc
sbb
mov
xor
in
adc
out
and
jge
xor
sub
push
sbb
fisubrs
leave
loope
inc
mov
aam
lea
rclb
mov
xchg
lret
jbe
push
lahf
inc
adc
mov
cld
fdivs
or
adc
std
insl
stos
lds
mov
add
inc
loopne
loope
push
nop
fnstcw
adc
call
pop
mov
rorl
jge
rorl
adc
icebp
icebp
cmp
dec
cmpsl
ja
mov
or
push
jne
push
cmp
adc
and
mov
push
icebp
out
lods
add
mov
xor
or
jbe
iret
dec
add
cmp
push
dec
insb
push
cmc
loop
push
mov
xor
test
xchg
jo
inc
dec
cmpsb
out
mov
fs
verr
lods
add
push
lock
in
mov
lea
mov
cs
push
xor
lret
call
mov
push
insb
repz
add
mov
sti
movzbl
mov
add
lds
jl
sub
xor
mov
push
test
mov
xchg
pop
pop
mov
out
cmpb
jle
push
lds
mov
clc
xor
or
xchg
push
dec
mov
cmp
mov
pusha
mov
jge
fstpt
sbb
arpl
leave
push
cmp
xlat
pop
lods
mov
add
stos
xor
mov
outsl
pop
mov
or
clc
bound
arpl
push
or
jbe
aas
ret
cmc
dec
cmc
repz
dec
and
xor
testl
push
mov
inc
bound
outsl
inc
lock
shlb
bound
leave
sbb
pop
adc
mov
lods
and
nop
mov
jbe
dec
in
cmp
pop
sahf
mov
xor
xchg
lahf
dec
or
add
repz
loopne
pop
jl
sahf
mov
add
sub
pop
xor
pop
sbb
add
rcr
in
sahf
dec
mov
aam
call
mov
mov
call
pop
add
stc
sbb
sbb
dec
js,pn
mov
jno
mov
and
add
mov
loopne
jle
push
xor
mov
add
mov
sbb
iret
icebp
stos
pop
sub
jbe
adc
cmp
and
lret
sbb
dec
inc
add
mov
daa
push
or
daa
mov
cmp
jge
lret
push
notb
mov
pop
pop
jne
hlt
lock
jge
xor
and
xor
add
pop
and
or
outsb
and
jl
xor
or
lea
mov
jl
out
repz
das
jge
pop
sbb
mov
sbb
jecxz
jge
test
cmp
shlb
fbld
rcrb
mov
sbb
mov
or
int3
and
push
out
sbb
sub
xor
adc
wrmsr
pop
popf
mov
sub
inc
pop
mov
add
sbb
mov
or
inc
mov
inc
mov
repnz
and
jnp
pop
push
inc
or
lock
popf
xchg
out
pop
loope
pop
fistps
shlb
sub
fmul
repz
cmp
pop
pop
inc
insl
inc
xchg
xor
test
inc
rcl
sub
ret
adc
arpl
sbb
dec
lods
mov
ja
mov
sbb
mov
sbb
mov
push
out
std
mul
xchg
or
jo
adc
pop
pop
stos
jp
lock
add
sub
or
iret
push
mov
dec
dec
or
sti
je
dec
bound
dec
push
add
in
pop
pop
and
arpl
neg
test
xor
sbb
xor
repz
dec
cmp
aaa
sub
dec
dec
lods
sti
mov
sbb
and
jge
stos
mov
lea
mov
xor
xor
fldcw
sbb
xor
sub
clc
mov
and
add
sbb
call
mov
push
mov
cmpb
cltd
push
mov
add
mov
adc
lock
dec
jae
hlt
xor
inc
cmp
jbe
push
sub
lret
jmp
sbb
jae
pop
mull
sbb
jge
push
mov
outsb
add
dec
sbb
mov
add
cmp
xor
daa
sahf
lods
or
add
adc
cltd
mov
mov
and
push
cmp
sub
pop
jno
pushf
push
or
hlt
xor
adcb
pop
mov
cmp
sub
add
out
icebp
dec
add
out
or
add
xor
add
mov
jo
leave
mov
mov
call
jl
mov
sub
xor
aam
out
inc
inc
mov
adc
enter
xchg
cmp
mov
mov
mov
call
cmpsl
add
xchg
cltd
mov
stc
mov
push
mov
iret
xor
inc
adc
mov
and
nop
and
popa
bound
loop
inc
cmp
lods
mov
jmp
dec
sub
popf
and
and
and
pop
inc
pop
call
repnz
rcrl
jle
loop
or
jge
stc
mov
shll
xor
fldenv
pop
cmpsl
repz
div
dec
inc
call
stos
mov
add
cltd
cltd
cmpsb
pop
cmp
dec
fcomip
sub
repz
clc
or
adc
aad
xchg
mov
or
in
js
sub
dec
and
mov
repz
loopne
push
sbb
inc
insb
inc
cmp
jae
sub
loop
push
jae
push
sahf
push
ss
push
adc
pop
and
mov
pop
fnsave
xlat
add
lods
sub
xchg
lret
jmp
std
jbe
sbb
sub
add
dec
inc
sub
shlb
xor
test
add
sbb
sbb
mov
repnz
sub
push
mov
cmp
scas
and
mov
or
inc
adc
nop
xlat
cmp
jge
pop
shrb
icebp
enter
mov
outsb
cmp
mov
add
ds
xor
jno
mov
add
ljmp
dec
sbb
aam
and
ret
mov
ret
fistps
repz
mov
shl
ss
or
incb
les
add
mov
push
int3
jbe
sub
sbb
mov
pop
xchg
dec
jp
popa
mov
sbb
push
shl
add
mov
push
add
les
add
mov
add
cmp
jl
inc
popa
je
sub
jo
dec
int3
icebp
jl
lock
mov
push
sub
inc
shrb
push
fcomip
dec
sarb
dec
in
cs
push
dec
inc
fnstsw
or
fmull
int
aam
stc
cmpsl
sbb
xchg
pmaxsw
es
push
stos
int3
iret
or
aas
dec
pop
inc
mov
mulb
rclb
push
or
sbb
mov
mov
pop
add
fldt
mov
test
jecxz
cmp
jge
call
or
mov
test
push
inc
test
cmp
inc
dec
das
idivb
das
push
out
ret
add
call
and
in
lds
push
in
and
les
or
add
inc
sti
xchg
stos
sub
xor
movsb
lock
pop
leave
mov
pop
sub
xor
or
pop
hlt
sbb
pushf
mov
add
mov
insb
nop
dec
das
adc
add
lods
or
in
push
call
stos
fstp
roll
cld
jno
fcmovnbe
and
repnz
mov
in
xor
lea
and
mov
mov
xor
outsb
mov
add
ja
clc
pop
test
lea
jecxz
jbe
outsb
hlt
sub
add
orb
add
sarb
push
mov
pop
or
shl
lret
or
inc
test
jecxz
in
or
ja
leave
push
fidivs
add
idivl
mov
add
xorl
or
cmpsl
bnd
mov
sbb
fstps
mov
enter
adc
mov
enter
fnsave
icebp
add
pop
addr16
or
das
insl
les
dec
and
xor
jge
pop
jmp
xor
and
sub
fxch
shrb
sub
add
test
inc
sahf
jle
inc
fwait
xor
jno
ja
sub
pushf
sub
loopne
dec
or
stc
mov
mov
test
std
dec
push
decb
jo
lahf
mov
inc
icebp
jo
loope
call
cmp
loop
inc
xor
sbb
pop
js
es
pusha
inc
rcll
xchg
xchg
inc
or
dec
push
add
aas
xchg
or
repz
and
inc
mov
inc
int
das
push
sbb
adc
or
fimuls
mov
int
add
xor
cli
rolb
sbb
rclb
sub
or
lret
xor
jl
les
cmp
sub
popa
arpl
inc
sub
pop
xchg
fyl2x
add
or
add
or
leave
sub
aad
subl
mov
jl
call
fs
repz
ud0
jl
or
and
mov
inc
pop
adc
jo
xchg
push
dec
pop
fs
xchg
stos
mov
pop
jns
jns
inc
addl
push
es
adc
xchg
mov
sbb
leave
hlt
xchg
push
mov
xchg
jge
add
add
mov
push
mov
mov
data16
movsb
jo
push
add
test
sti
aaa
or
or
push
popw
mov
mov
mov
jl
inc
cmp
jge
mov
cmc
sbb
imulb
jae
int3
adc
testl
or
jbe
bound
mov
ret
ret
dec
adc
add
es
andl
sub
fstpt
fs
cmp
call
sarb
out
or
repnz
or
mov
loop
inc
popf
sub
adc
xchg
adc
into
rep
adc
push
addb
repnz
jae
icebp
mov
push
aas
mov
jmp
mov
xor
sbb
pusha
jg
pop
push
jae
lret
das
inc
ss
aas
cs
push
in
pop
pop
pop
icebp
gs
repz
insb
rcrb
jge
adc
adcl
push
or
pop
sub
jl
xchg
mov
mov
repz
nop
jo
loop
lret
fmull
xor
add
aam
out
mov
mov
pushl
add
or
add
js
sbb
pop
push
mov
jo
pop
mov
push
hlt
shrd
xor
jg
cltd
lea
or
cmp
cltd
rorb
jmp
in
lahf
xor
femms
jne
dec
dec
dec
inc
jo
add
pop
jg
mov
cld
add
aad
mov
add
ret
jle
sbb
ljmp
mov
mov
xor
xchg
cs
add
or
adc
adc
xchg
stos
xchg
sahf
dec
clc
cmpsb
lcall
inc
and
icebp
aaa
xor
xchg
or
xor
pop
movsl
rol
lret
stc
and
push
pop
sahf
call
int
fbld
pusha
cmp
cmp
adcb
icebp
xor
mov
nop
lahf
cmp
dec
jl
and
hlt
push
into
int
dec
ret
dec
mov
add
mov
dec
inc
dec
mov
cwtl
ljmp
das
push
mov
dec
daa
adc
mov
call
pop
ret
add
out
ljmp
mov
add
and
pop
add
pop
movsb
pushf
insl
add
adc
into
mov
sbb
cmp
inc
maxps
inc
and
push
cld
inc
mov
adc
rcrb
inc
push
push
mov
popa
xor
pop
xchg
pusha
ret
jbe
add
jl
or
pop
mov
adc
cmp
leave
sub
mov
dec
pop
imul
enter
add
inc
out
add
push
pop
jle
xchg
dec
ss
mov
fsubrs
rorb
xor
arpl
icebp
int3
or
cmp
pop
sub
sub
mov
aad
jbe
fmul
push
push
adc
fimuls
js
xor
pop
insb
cld
sbb
jnp
adc
adcb
sbb
mov
cli
adc
je
aaa
xor
inc
add
pop
mov
roll
sbb
mov
pop
mov
mov
in
or
cmp
cwtl
adc
jb
nop
jecxz
addl
ljmp
pop
add
fstpl
and
outsb
shll
shl
cmp
jp
mov
xor
cmp
cwtl
mov
jb
mov
jl
push
fsubrp
clc
jnp
fimuls
lcall
xchg
sbb
ss
pusha
out
stc
lock
jecxz
imull
lret
sub
mov
bound
xchg
into
enter
cmp
push
push
test
and
addb
hlt
inc
dec
or
or
mov
call
dec
lds
cmpsl
mov
iret
dec
push
les
dec
lods
and
cs
push
insl
subb
jb,pt
jmp
ja
scas
dec
sbb
pop
or
or
stc
cld
orl
aam
mov
push
xchg
mov
xchg
adc
call
adcl
adcl
popl
repz
clc
addl
cmp
dec
mov
mov
inc
adcb
add
lods
pop
add
pop
dec
and
test
je
cmp
add
add
mov
xchg
inc
flds
fs
fcompl
mov
incb
mov
and
sbb
or
aam
repz
shrb
lret
pop
dec
nop
sub
movsb
test
pop
loop
in
subb
out
mov
mov
xchg
stos
sbb
pop
js
or
mov
sub
pop
adc
addl
pop
dec
addl
dec
orl
dec
xor
movsb
sub
les
clc
mov
mov
mov
adc
movsl
mov
sbb
js
and
cmp
aam
imul
and
sub
shll
aad
lret
adc
jbe
sub
cwtl
into
repnz
sarb
pop
pop
mov
adc
mov
sti
push
push
sub
pusha
rorb
and
sub
inc
imul
lock
push
cmp
add
inc
adc
jge
jmp
rcpps
lods
stos
subps
leave
mov
add
iret
or
sbb
shll
cmp
lock
jae
add
cwtl
jg
mov
sbb
or
sbb
getsec
push
adc
pop
add
cltd
cld
clc
loopne
inc
xor
clc
xchg
push
xor
pushf
mov
mov
jle
das
dec
sbb
loopne
jecxz
inc
int3
add
sarb
call
sbb
les
sub
inc
inc
stos
mov
jl
inc
push
pop
or
xor
out
xor
add
stc
inc
or
push
and
or
sub
pop
push
lods
cmp
push
loopne
repnz
cmp
add
in
sbbb
jl
push
sub
add
push
adc
sub
pop
daa
adcl
sub
sbb
mov
dec
and
xchg
cmp
arpl
xor
pop
out
inc
lahf
inc
sbb
shlb
jl
push
scas
push
add
pop
mov
stos
inc
icebp
call
push
xor
sbb
sub
sub
out
fmuls
dec
mov
fcompl
mov
dec
add
daa
and
dec
dec
rcr
mov
mov
outsl
and
lods
and
outsb
fsubrl
aam
pop
fsubrs
bound
dec
call
push
in
idivl
dec
aas
mov
orl
xor
sbb
cmp
je
icebp
dec
dec
fmuls
gs
pop
pop
push
push
jmp
pop
cmp
or
jno
push
dec
pop
arpl
std
es
add
push
sbb
out
xor
inc
mov
inc
xchg
push
jnp
lahf
sbb
adc
or
icebp
mov
add
incl
jmp
fsub
mov
cmpsl
mul
loopne
push
inc
push
popf
cltd
push
lcall
add
pop
inc
adc
cltd
pop
jmp
and
lods
mov
mov
sbb
cwtl
aam
dec
cmp
push
out
int
mov
bound
hlt
mov
and
js
cs
lcall
adc
cmp
ja
and
repz
xchg
mov
sbb
add
lods
dec
add
xor
div
add
push
push
sbb
pop
mov
cld
dec
call
mov
mov
mov
add
pop
xchg
sbb
icebp
mov
jge
pop
push
or
in
iret
inc
nop
icebp
call
test
xor
insb
sub
xchg
xor
or
xadd
push
inc
int
mov
movsl
mov
push
inc
daa
or
sub
lods
idivl
add
dec
lods
pop
dec
push
int3
xchg
jmp
inc
nop
icebp
jmp
inc
cld
mov
add
aad
pop
xor
mov
cmp
mov
xor
call
push
and
or
mov
sti
call
add
je
int3
adc
hlt
pop
repnz
lds
or
ror
dec
push
out
inc
jnp
mov
adc
push
push
cs
sbb
and
or
or
and
inc
push
stos
pop
xor
jl
icebp
mov
test
iret
out
mov
or
testb
xchg
add
mov
jae
or
or
clc
jmp
outsb
cli
dec
mov
inc
nop
push
push
mov
lahf
loopne
sahf
outsl
test
sub
pop
jbe
lds
data16
jno
xor
in
mov
jbe
xor
push
or
dec
cwtl
jae
jmp
sub
jb
xor
or
addl
inc
adc
ss
jb
xor
or
xor
add
xor
dec
xchg
jg
mov
cld
jo
jmp
lods
roll
add
test
push
mov
xor
or
loop
imul
push
mov
xor
or
add
mov
adc
and
jno
pop
pushf
mov
stc
fnstsw
jle
adc
dec
inc
jmp
pop
psraw
push
xchg
leave
sbb
pop
or
fistps
pop
mov
sub
mov
js
jb
jo
pop
jnp
je
test
ljmp
insb
xchg
xor
inc
lret
xor
jmp
push
inc
mov
pop
subl
adc
push
lods
pop
adc
aaa
pop
enter
cltd
in
dec
mov
pop
mov
xor
call
sub
das
ret
in
mov
xor
xor
mov
jl
in
mov
addl
sbb
pop
mov
lods
loop
mov
iret
icebp
dec
mov
lahf
das
jl
movsb
jnp
or
mov
jae
cld
add
and
enter
dec
das
jmp
divl
test
fwait
sbb
xor
inc
mov
or
roll
add
or
in
adc
mov
mov
push
lock
nop
jge
jo
adc
or
xchg
popf
or
into
xor
sub
mov
data16
ss
jno
jecxz
sbb
sub
inc
jno
dec
sbb
or
icebp
and
xor
cmp
dec
xor
sub
repz
mov
stos
pop
mov
cwtl
jl
add
cmp
or
imul
pop
iret
ljmp
leave
sbb
push
xor
dec
les
jl
and
orl
xor
int3
pop
adc
mov
push
in
add
aad
je
shr
leave
adc
repz
stos
push
jmp
mov
and
add
push
jg
notl
nop
and
adc
cmc
icebp
gs
mov
cmp
inc
lahf
mov
xchg
mov
imul
ljmp
pop
sbb
xchg
mov
push
cld
mov
cmp
xor
dec
mov
out
scas
push
xor
clc
mov
pop
or
or
bound
mov
inc
pop
mov
pop
xor
sub
sbb
pop
pop
xor
leave
cmc
nop
dec
xchg
movsb
inc
mov
mov
pop
repz
pop
mov
rorl
ljmp
jl
mov
jge
mov
pop
mov
xchg
sub
test
ffreep
or
xchg
pop
jns
xor
cltd
adc
jle
or
mov
add
sbb
call
inc
in
adc
push
sub
pushf
or
loopne
lahf
inc
inc
into
dec
push
mov
xor
push
mov
push
popa
cwtl
ss
mov
add
bnd
sbbb
dec
rcrb
mov
sti
imull
xor
repz
pop
jbe
push
adc
and
add
inc
xor
into
lock
fisubs
inc
inc
pop
out
inc
inc
out
mov
cwtl
call
or
lret
fdivl
xor
je
mov
in
repz
mov
xor
xchg
sbb
adc
jae
jno
adc
sbb
aad
push
call
movb
sbb
fisubrs
pop
loopne
test
cmp
es
dec
xchg
push
or
xchg
jmp
mov
mov
fsubp
loope
push
xchg
push
or
test
or
or
jge
sub
icebp
xor
pop
fmul
mov
clc
or
cmp
std
dec
xor
rorb
pop
nop
add
jge
gs
or
xlat
jmp
clc
xor
dec
dec
lret
or
je
jb
mov
lea
cmp
xor
jp
jo
or
jmp
into
orb
test
push
pop
xchg
or
inc
icebp
lret
cmp
mov
cld
imul
jns
xorb
xor
dec
xor
jbe
inc
or
mov
mov
sti
repz
test
sbb
inc
insb
xor
push
fs
mov
daa
pop
adc
xor
dec
imul
out
out
clc
jo
pop
loop
mov
in
sbb
sbb
test
inc
stos
add
adc
xchg
cmp
push
or
sub
inc
add
scas
adc
push
sbb
add
jmp
daa
push
or
dec
movsb
test
iret
dec
push
jmp
rolb
dec
sbb
into
sub
enter
push
dec
icebp
mov
dec
push
shr
fmuls
mov
jle
xorl
adc
mov
jne
mov
mov
fs
xchg
push
xchg
pusha
cmpsb
jle
sbb
aam
jbe
and
sbb
sbb
nop
dec
xor
xor
lahf
lret
pop
lahf
sbb
loopne
dec
push
or
int3
cmp
shlb
inc
push
icebp
call
mov
pop
dec
sub
pop
xchg
add
enter
jae
or
sub
and
loopne
mov
or
ret
push
pop
cld
les
orb
and
mov
or
jno
stc
out
sub
and
push
jmp
cmp
aad
dec
xor
movl
dec
push
mov
test
xor
pushf
popf
daa
adc
xchg
adc
jge
jno
adc
outsl
or
ja
scas
or
xor
mov
xor
adc
push
inc
sub
xor
int3
jo
mov
add
aaa
jae
sub
dec
mov
mov
cmc
mov
movl
add
into
fstl
add
pop
ds
or
fimuls
scas
mov
clc
cmp
call
or
or
xchg
add
mov
sbb
enter
jae
dec
adc
xchg
add
push
add
sub
or
xchg
pop
dec
xor
or
sahf
inc
mov
lret
xchg
and
insb
cmp
mov
fs
imul
les
mov
out
mov
movsl
cltd
adc
fwait
dec
movsl
dec
insb
call
mov
mov
cld
jl
push
xchg
xchg
push
ficoms
inc
lea
les
sbb
and
test
rcr
sti
adc
mov
rcr
pop
jnp
pushf
scas
ficomps
lods
rorb
xchg
adc
cmp
leave
sbb
lret
and
les
and
sub
jge
dec
pop
orb
and
inc
pop
mov
out
popf
leave
mov
add
insb
xchg
call
mov
xor
push
fstpl
lcall
das
sbb
add
in
sbb
and
push
into
dec
mull
jnp
not
adc
add
call
adc
clc
pop
xor
adc
xor
and
lahf
test
push
pop
add
into
sti
jb
je
cmp
jp
jg
add
jnp
xchg
push
popf
fisttps
icebp
repz
xor
mov
jge
jo
jbe
mov
adcl
and
cmp
call
int3
mov
cwtl
mov
dec
leave
jno
jno
adc
sub
std
pop
and
adc
or
xchg
jg
fmuls
enter
add
push
sbb
stc
hlt
inc
add
sub
xor
jl
sub
call
pop
clc
mov
rcl
cld
dec
add
out
dec
or
mov
add
mov
insl
lret
mov
mov
jecxz
fidivl
jo
pop
mov
out
cmp
mov
mov
lea
pushf
or
dec
jmp
pop
push
or
xchg
mov
sti
push
aad
inc
loopne
jg
or
add
cwtl
dec
xchg
fcomps
sub
mov
mov
jecxz
arpl
add
mov
loopne
and
ficoms
xchg
mov
dec
fstps
aam
pushf
adc
jb
or
call
pop
or
or
notb
dec
mov
xor
sbb
add
sarl
pop
test
repz
push
sbb
shl
cmp
les
out
repnz
dec
jg
pusha
test
and
mov
adc
loopne
jmp
movsl
dec
add
or
push
das
rorb
popa
shlb
inc
movsb
js
leave
imul
es
lcall
icebp
mov
sbb
sub
dec
sub
lock
jbe
pop
inc
xchg
cmp
sub
enter
sub
jns
mulb
or
pop
push
lea
adcl
cmp
push
xchg
icebp
push
repz
imul
mov
dec
dec
in
add
mov
icebp
adc
adc
adc
mov
pop
adc
lods
addr16
cmp
xorb
cmp
xchg
pushf
mov
cmp
add
sbb
stc
dec
leave
dec
pop
fs
int3
mov
cmp
js
mov
lea
adc
call
dec
loop
rorl
or
mov
push
orb
or
and
jge
data16
fmul
icebp
jmp
or
mov
cmp
xor
mov
mov
or
or
lcall
push
bound
sub
xor
jge
or
mov
pushw
xchg
mov
icebp
in
call
imul
or
jo
jge
icebp
push
jmp
cmp
inc
jmp
or
lods
xlat
test
jae
sahf
add
mov
std
xlat
pop
cmp
aaa
mov
fmul
fwait
movsb
pop
mov
cld
sbb
or
jno
js
imul
push
dec
add
shrb
mov
xchg
xor
add
les
call
mov
sub
jae
jge
inc
sbb
jns
mov
mov
lea
out
xor
or
jno
xor
iret
add
sub
sub
inc
xor
repnz
sbb
mov
popa
or
or
sbb
or
mov
fdivrs
scas
cs
mov
sub
popa
push
push
or
sbb
leave
aam
aam
xor
je
mov
and
dec
mov
das
sbb
test
das
test
pop
shlb
jg
add
mov
jo
loopne
pop
sarb
mov
mov
xlat
push
push
out
sub
pop
or
adc
sahf
and
pop
test
ret
pushf
addr16
mov
adc
add
loopne
enter
addr16
jae
jae
dec
cmp
pause
ds
or
cmp
push
jge
xor
imul
icebp
rolb
jno
leave
ret
push
sbb
clc
mov
cwtl
es
and
pop
fiaddl
pop
hlt
add
mov
push
test
lods
inc
sbb
or
or
or
or
ds
add
ljmp
xlat
decl
xchg
call
call
xchg
loop
mov
add
and
push
lods
sbb
or
das
repnz
fs
dec
cltd
sbb
jmp
pop
add
mov
jo
sysenter
jge,pt
or
icebp
cmp
sub
repnz
jo
sbb
xor
lods
adc
push
lods
add
stc
dec
packssdw
imul
roll
jge
flds
js
roll
repnz
sub
add
or
pusha
sbb
jp
add
or
test
test
add
cmpsb
xor
xor
or
pop
adc
test
jmp
clc
jno
xchg
icebp
mov
mov
fsts
inc
jno
mov
jo
adc
xor
xor
or
add
iret
cltd
addl
and
xor
mov
fisttps
sub
and
test
xchg
pop
push
lcall
into
and
sar
cwtl
mov
pop
and
adc
dec
mov
pop
sub
push
jge
cld
add
cmp
enter
adc
or
xor
mov
jns
jb
lods
jg
inc
pushf
in
jns
loopne
das
sarb
push
mov
and
mov
inc
fcoml
rolb
call
int3
out
push
pop
lret
sbb
add
sub
xor
dec
sahf
sbb
daa
ret
mov
mov
out
imul
clc
sbb
and
mov
test
or
clc
xor
ljmp
mov
xchg
add
pop
push
or
push
pop
jmp
pusha
icebp
cld
icebp
or
in
std
insl
mov
mov
xchg
lret
mov
imul
xor
ja
jo
mov
mov
xchg
hlt
jmp
mov
lods
mov
cli
test
aas
dec
repnz
xor
pop
jns
push
inc
or
push
sbb
mov
or
xchg
xor
xchg
add
mov
outsb
lds
adc
pop
fdivl
push
xlat
outsl
ljmp
pop
cmp
jbe
mov
push
fiaddl
inc
add
push
xchg
inc
pop
negl
lahf
mov
sbb
pushf
aaa
adc
mov
into
pop
fscale
dec
mov
stc
add
add
fwait
sbbl
call
mov
pop
and
repnz
or
mov
add
shll
jl
adc
sbb
inc
pop
enter
pop
add
subb
inc
adc
test
aaa
and
sub
pop
inc
jmp
mov
mov
sub
in
arpl
subb
arpl
mov
lret
add
mov
pop
or
into
add
add
cwtl
leave
xor
adc
dec
bnd
insb
add
inc
add
add
loop
hlt
sbb
pop
inc
push
add
sbb
cmp
jmp
adc
cltd
mov
mov
sbb
and
sub
ja
je
sub
arpl
fdivs
pop
fidivrl
aad
push
adc
sbb
fldt
xor
jne
xor
sbb
adc
popl
or
mov
fwait
dec
aad
inc
mov
ja
pop
push
jl
fdivr
mov
inc
inc
inc
pop
daa
call
and
out
jge
lcall
inc
jmp
call
into
dec
cltd
mov
dec
in
adc
scas
xor
jo
and
pop
notl
jne
push
into
icebp
repz
jmp
dec
outsb
and
push
rorl
sub
ja
jmp
sub
nopl
cmp
and
push
icebp
mov
or
add
sbb
test
and
fiadds
mov
xchg
add
enter
mov
mov
push
cmp
std
int3
test
out
fs
fcoml
add
xor
mov
std
dec
ja
push
ljmp
mov
roll
dec
push
inc
stc
push
in
call
or
adc
icebp
or
pop
jmp
dec
inc
push
call
sbb
ja
sbb
sbb
lcall
inc
cmpb
xor
ret
push
test
enter
lods
dec
clc
clc
add
dec
inc
cwtl
jge
inc
adc
push
dec
sub
dec
mov
push
outsl
push
sbb
inc
mov
popf
or
mov
mov
lcall
int3
mov
sub
mov
aad
xor
add
mov
xchg
dec
nop
fisubrl
repnz
mov
jmp
out
arpl
insl
fwait
cmc
jle
add
sub
fdivs
inc
add
jb
rclb
and
or
dec
jne
cmpsb
cmp
fidivl
sub
dec
pop
push
pop
adc
repz
sbb
jae
mov
lsl
or
hlt
add
adc
in
filds
in
cmp
lods
inc
scas
lods
shr
dec
fadds
mov
xchg
push
aam
lea
test
push
pop
popf
mov
xchg
pop
fsubl
mov
les
test
in
xchg
enter
add
xor
xchg
xchg
repz
stos
sahf
sub
or
mov
dec
hlt
outsb
notl
cwtl
lcall
movsl
add
mov
insl
test
mov
out
push
popf
inc
push
pop
add
add
inc
push
inc
pop
add
push
icebp
mov
or
mov
adc
inc
mul
jnp
je
mov
es
lods
cmp
jmp
rcrb
jno
int3
clc
mov
iret
decb
mov
or
and
mov
and
dec
in
add
push
push
pop
jl
jb
adc
xor
or
push
pop
cmp
sbb
sbb
cs
jae
push
mov
sub
cs
inc
mov
add
push
imul
inc
mov
loopne
mov
add
rol
xchg
mov
pop
mov
in
pop
mov
xor
add
adc
pop
add
jecxz
pop
mov
enter
pop
loope
cld
cmpl
repz
jns
mov
movsl
mov
xlat
enter
in
rorb
add
fiaddl
push
cmp
push
stos
dec
cmp
add
jns
loop
xlat
loop
push
ret
xchg
dec
add
data16
aas
mov
add
cmp
mov
ret
out
lret
sbb
idivb
ja
js
pop
xchg
inc
mov
cmp
pop
jge
icebp
dec
or
or
into
sub
inc
int
aam
sti
adc
jp
aaa
sbb
push
push
add
inc
sbb
lret
sbb
sbbl
sbb
mov
or
add
sub
push
mov
inc
xchg
stc
lods
and
xchg
push
xchg
push
or
lahf
add
push
pop
sbb
jbe
and
xor
repz
jnp
fstl
push
lods
cmp
outsb
insb
testb
int
test
adc
push
bnd
out
xor
inc
fnstcw
adc
adc
add
push
movsb
les
sbb
aad
es
mov
test
jle
or
jbe
mov
sub
cli
enter
call
jmp
pop
xor
pop
sbb
cmp
xchg
fisttpl
mov
and
inc
int3
call
pop
sbb
aaa
and
into
repz
push
mov
stos
loopne
negl
mov
push
mov
repz
ret
pop
int
sti
push
inc
jmp
sub
and
push
xor
jl
inc
repnz
push
push
mov
adc
and
add
jns
decl
and
or
divl
add
or
or
add
push
push
repz
addr16
sub
add
lret
push
xchg
jmp
xchg
and
xchg
andb
dec
sub
jno
xchg
pushf
or
orb
in
inc
or
mull
in
imul
push
mov
push
jae
sbb
or
gs
leave
bnd
or
jne
orl
cs
add
dec
cld
cmp
sub
mov
iret
inc
enter
jne
iret
or
cmp
fcompl
add
ljmp
loopne
mov
cmp
mov
mov
sub
pop
insl
aam
push
mov
push
add
and
cmp
mov
loopne
xchg
lock
call
dec
das
test
loopne
in
mov
sbb
insb
add
lods
cs
or
out
cld
rcrl
add
mov
call
call
mov
adc
stc
cmp
dec
aad
insb
add
cmp
or
test
sub
dec
pop
add
lods
jo
lret
clc
imul
or
sbb
and
dec
hlt
fisubrl
sbbb
sub
rorb
mov
push
ljmp
out
popf
enter
sub
jo
sar
cmpsb
pusha
aas
or
xor
add
cmp
sbbb
hlt
jnp
lods
adc
sbb
mov
adc
imul
adc
or
repnz
cmp
pop
push
cld
repz
or
add
setns
and
cmp
lock
pop
addb
xor
mov
mov
mov
mov
test
scas
cwtl
jae
inc
mov
adc
mov
mov
push
and
push
sub
push
outsb
dec
sub
clc
cmp
es
mov
gs
fmull
out
pop
dec
pop
movsb
enter
repz
testl
xchg
mov
stos
cmpsb
add
shrl
and
flds
add
dec
jmp
out
lret
cwtl
ja
pop
cmp
mov
sar
or
mov
xchg
repz
inc
imull
push
repnz
repz
xorb
int
fsub
dec
xchg
cmp
inc
pusha
inc
lods
setno
stos
fildl
jb
ret
sub
aaa
inc
pop
lock
js
ja
cmp
subb
fsubr
add
and
fimull
in
je
sub
call
bound
dec
inc
mov
add
mov
push
jecxz
ret
xor
or
ja
push
bound
push
push
mov
dec
dec
cs
pop
adc
bound
mov
mov
mov
cs
add
xchg
mov
jb
flds
add
bound
pop
clc
lea
mov
dec
mov
jmp
jle
enter
sbb
lahf
jae
aaa
cmp
into
outsb
iret
or
sbb
dec
imul
int3
call
push
mov
pop
adc
pop
inc
jmp
add
pushf
mov
inc
dec
sub
inc
rol
xchg
cltd
and
pop
mov
outsl
mov
call
jo
cld
fsubs
bound
stos
mov
btr
sbb
dec
pop
fildll
into
in
push
movsl
xchg
inc
push
xchg
push
adc
addr16
sbb
or
jmp
aam
les
out
adc
cmp
fdivrs
imul
subps
jb
xrelease
test
scas
push
mov
sbb
pop
mov
and
add
adc
enter
pop
mov
enter
push
push
ret
adc
fs
lods
test
std
push
iret
test
rcrb
out
inc
lret
fmuls
test
cld
stc
mov
sub
sbb
loopne
cmc
inc
dec
stos
mov
sbb
fmuls
ljmp
hlt
je
push
lea
xchg
or
fidivs
mov
mulb
icebp
ja
dec
xor
ja
mov
adc
leave
dec
dec
dec
into
cmp
jmp
inc
int3
sbb
add
clc
insl
jl
push
or
jge
push
adc
jns
pop
add
testb
push
or
mov
jns
add
and
int3
addr16
dec
pop
jl
clc
xor
push
cmp
pop
xchg
add
or
cmpb
lea
pop
or
sub
mov
fdivp
add
push
ja
mov
or
mov
shrl
pusha
ret
or
negl
cmp
jp
lahf
lahf
jge
dec
add
jmp
pop
cmc
dec
mov
pop
push
mov
enter
push
xor
pop
sub
dec
adc
aam
jae
or
xchg
lea
mov
jl
sbb
loopne
add
bnd
adc
rorb
ljmp
push
subb
add
inc
rorl
or
test
aaa
fld1
jbe
bnd
xor
cltd
lret
or
adc
xor
jg
cmp
jmp
add
xor
dec
push
xor
je
aaa
push
mov
ja
fcomp
sti
sbb
add
xchg
and
inc
and
inc
in
or
jl
in
dec
push
cmp
adc
adc
cmp
or
mov
sbb
jmp
add
or
xchg
jmp
lods
add
in
mov
mov
call
clc
leave
rcrl
adc
jmp
sbb
shlb
pop
imul
sub
or
lods
xor
mov
or
and
add
insl
xlat
test
cld
mov
push
in
push
sbb
mov
loop
jecxz
and
rorb
clc
rcrl
cs
fmull
stos
xchg
scas
lret
xchg
clc
sbb
push
loop
push
adc
loop
repz
lret
sub
dec
aad
jmp
inc
mov
scas
rorb
dec
add
and
int
mov
lea
mov
inc
pushf
mov
add
inc
outsl
push
or
mov
fdivrs
adc
dec
inc
test
push
outsb
cmp
jge
call
lea
jae
fstpl
cmp
pop
adc
push
inc
adc
cmpsb
jb
inc
xchg
int3
jmp
mov
hlt
outsb
nop
adc
or
inc
lahf
popf
inc
pushf
rcll
cld
jmp
xor
fs
frstor
repnz
xchg
adc
inc
add
icebp
adc
mov
jge
popf
sbb
in
jb
push
cmpsl
jle
fstpl
cmp
mov
fxch
stos
cwtl
push
call
outsb
pop
add
add
sbb
jbe
sbb
clc
loop
add
or
push
outsb
pop
cli
addl
stos
mov
sub
sahf
mov
inc
inc
iret
repnz
or
mov
push
sub
push
in
or
rcll
or
call
into
frstpm(287
sahf
movsl
mov
into
gs
sti
mov
ss
mov
cmp
sbb
mov
fildll
out
iret
lods
xchg
xchg
dec
jnp
adc
pusha
in
add
and
jnp
jo
loopne
xchg
pop
sub
jne
les
adc
or
dec
xor
push
add
enter
sbbb
stos
or
pop
int
jb
das
pop
test
les
dec
mov
lds
add
cltd
and
sbb
lcall
int
outsb
repz
ret
or
das
adc
or
les
pop
iret
fistpl
test
imull
or
sbb
rolb
and
mov
sub
xor
rolb
dec
cli
push
in
or
mov
leave
dec
sub
or
mov
pop
ret
mov
jecxz
sahf
xchg
dec
fimull
dec
out
mov
rcl
sbb
and
sub
add
add
xor
or
and
pop
xchg
inc
cmpsb
repz
cmp
dec
jo
pop
jp
pop
aas
fcmovnbe
js
cs
fisttps
add
testl
fistps
out
mov
xor
pop
insb
shl
pop
bound
into
idivl
movsb
push
int3
pop
cli
lret
loopne
add
imul
cld
in
add
and
xchg
sub
adc
push
pop
ljmp
sbb
clc
loopne
pop
rolb
test
pop
testb
les
mov
incl
xor
jmp
jecxz
or
ds
mov
int3
lret
inc
add
fs
cmpsl
out
ret
dec
rorl
push
jbe
test
scas
mov
mov
adc
leave
pop
les
jae
inc
or
scas
mov
adc
or
icebp
jb
fstps
mov
cmp
jecxz
adc
repz
sbb
fnstenv
adc
cli
cltd
out
and
out
jecxz
mov
mov
lret
lods
addr16
icebp
or
clc
xchg
inc
jns
xchg
fstl
sbb
popf
add
sbb
mov
sbb
mov
icebp
in
push
or
or
bound
int
pop
push
lds
jmp
sbb
insb
push
push
jbe
mov
fcomip
or
mov
push
add
xor
lcall
outsl
lock
fisttpll
mov
adc
add
lea
mov
xchg
rclb
mov
jl
mov
fsubrp
push
mov
mov
add
or
mov
push
rolb
xchg
cli
pop
mov
sub
mov
add
lret
int
inc
inc
mov
out
test
int3
les
mov
cltd
fmuls
dec
cld
lea
das
jge
imul
aam
popa
lret
mov
jno
dec
stos
adc
mov
rorl
popa
jne
je
mov
stc
scas
cmp
sub
insl
aad
sub
sub
pop
adc
jl
out
stos
popf
sub
add
aad
adc
adc
pop
adc
pop
repnz
pushf
lret
lea
sub
in
dec
lahf
int3
mov
xchg
test
arpl
xorl
and
jo
and
add
or
leave
and
inc
pop
adcl
ficoml
mov
dec
and
mov
inc
adc
xchg
shlb
or
aaa
jle
push
repz
mov
inc
inc
jge
test
mov
movsb
mov
aaa
cs
shlb
cltd
mov
inc
int3
repz
ret
adc
sub
pop
and
test
xor
daa
ret
add
inc
push
mov
ret
sbb
sub
enter
sbb
cmp
lahf
pop
push
cs
popa
jg
bound
mov
or
dec
mov
or
and
mov
call
pop
push
das
pusha
loop
pusha
mov
adc
ljmp
inc
mov
sbb
cs
repnz
add
sbb
loope
sub
mov
imul
ret
pop
ss
es
mov
sbb
nop
xor
or
mov
psrlw
call
repz
hlt
mov
adc
stc
test
dec
inc
leave
or
lret
or
pop
sub
add
add
cmp
mov
repz
sub
add
sbb
xor
inc
nop
push
push
xchg
push
into
mov
xchg
test
mov
inc
inc
push
push
or
sub
inc
pop
stc
dec
push
mov
and
add
mov
repnz
push
cltd
dec
iret
push
dec
mov
cmc
push
adc
popa
cltd
insb
mov
inc
pop
pop
mov
jmp
lods
lods
mov
push
push
add
jmp
sbb
add
roll
in
jecxz
xchg
jb
or
xor
jno
fmuls
mov
scas
jl
dec
int
repz
push
sub
mov
mov
shrb
and
or
inc
femms
or
pusha
sub
or
jge
mov
add
in
ljmp
loop
sbb
lea
jmp
loope
mov
ja
xor
push
jmp
in
fimull
push
mov
fs
into
es
fstpl
jmp
xor
daa
xchg
sbb
orb
dec
in
add
pop
adcb
inc
ret
scas
adc
lcall
inc
push
in
repnz
and
sbb
jg
lea
pop
sub
outsl
icebp
jge
insb
sahf
insb
dec
sub
or
in
jmp
mov
and
pop
pop
pushf
stos
dec
jb
jmp
sbb
xchg
mov
mov
insb
push
cmpsb
inc
jl
test
lret
inc
mov
shll
loopne
add
fdiv
and
sbb
fwait
daa
mov
sti
cltd
push
mov
jmp
pop
inc
js
loope
ja
sub
add
and
or
andl
add
dec
gs
fstl
jp
or
mov
bnd
mulb
mov
xchg
inc
push
sahf
sub
sbb
sbb
xor
test
rcl
stc
call
pop
inc
fbld
mov
mov
repz
mov
notl
outsl
pop
push
adc
xor
daa
popf
adc
cmc
ss
mov
in
int
or
test
call
xor
sub
fisttpll
int3
das
psubsb
mov
mov
xchg
mov
add
jl
movsb
mov
add
icebp
aam
or
and
or
cwtl
aaa
lea
adc
aaa
xor
pop
jo
mov
lret
leave
or
jb
scas
push
outsl
and
lret
aaa
sbb
jmp
cld
jmp
jl
movsb
xchg
inc
in
push
clc
loop
sbb
pop
imul
out
loope
push
xlat
and
sub
fwait
outsb
jno
or
shlb
cmp
lods
leave
hlt
icebp
fimull
aam
mov
sub
in
ret
fcoms
repz
ja
cmp
push
fldenv
imul
insb
and
adc
sahf
sti
add
stos
sub
mov
repnz
repz
divl
dec
jle
pop
div
pop
lods
enter
jne
call
and
sbb
or
xchg
repnz
add
mov
lahf
jp
outsl
xor
sub
or
enter
jmp
sub
lea
pop
aaa
jmp
sbb
jl
dec
fs
cmpsb
pop
xor
add
xchg
sbb
sar
call
push
aad
dec
insl
or
or
adc
pop
sub
adc
xchg
testl
jmp
addl
repz
repnz
add
xor
mov
dec
fsubrl
add
mov
jmp
xchg
sbb
jb
out
cmp
or
mov
push
dec
pop
cli
dec
mov
aas
cwtl
jge
mov
cmp
ret
mov
dec
sbb
cmp
mov
fadd
xor
jae
mov
sbb
lret
xor
sub
les
and
inc
jbe
add
push
and
xchg
jmp
xchg
sub
or
inc
insb
popf
pop
push
or
jae
lret
nop
mov
add
sub
or
xchg
dec
pop
inc
mov
lret
add
cmpsl
call
pop
xor
inc
rorl
andl
pop
sbb
add
adc
sub
add
adc
mov
not
je
jns
insb
adc
or
in
call
fidivrs
and
add
or
pop
mov
mov
in
int
shl
out
ficoml
stos
mov
or
lret
inc
lods
inc
repz
pop
test
loope
movsb
mov
in
inc
rorl
iret
mov
sub
into
rolb
int3
mov
or
cmc
or
iret
jo
sti
and
sbb
decb
repz
ret
or
mov
sub
or
addl
cwtl
sbb
inc
or
xor
sbb
sbb
add
or
fsubl
aas
sbb
adc
ficompl
xchg
lret
mov
cltd
mov
xchg
xchg
lret
icebp
add
es
cmp
or
in
jbe
jmp
sti
sbb
jmp
call
jo
mov
and
int3
mov
cmp
mov
bound
sub
adc
jle
adc
inc
add
dec
jb
test
fstl
mov
or
shlb
xor
pop
mov
push
sbb
rcl
dec
test
test
jge
orb
xor
or
test
jns
ljmp
sbb
push
dec
sahf
xchg
icebp
sarl
jl
jae
imul
pop
dec
sub
daa
popf
mov
cld
das
sub
inc
cmp
mov
call
fwait
enter
jmp
pop
sub
adc
jl
pop
and
or
or
jb
push
xlat
shlb
cmpsl
cmc
mov
mov
add
or
fnstenv
or
mov
lock
call
and
sbb
out
popf
jp
and
minps
lret
and
decl
jge
push
jp
xor
stos
mov
icebp
fsubs
lods
push
mov
dec
sbb
push
dec
idiv
cwtl
push
jge
inc
mov
leave
or
cld
jl
js
insb
aaa
sbb
sarb
and
mov
je
mov
sbb
sbb
jno
jmp
movsl
add
pop
adc
cmc
mov
pushf
sbb
std
push
xor
mov
adc
lods
xor
leave
mov
add
arpl
add
and
mov
insb
jo
pusha
xchg
jle
dec
xorb
xchg
jmp
ret
mov
dec
pop
or
hlt
test
shlb
jnp
icebp
jl
dec
xor
jne
pop
adc
push
mov
jbe
sub
xor
dec
or
cmpb
xchg
push
mov
jmp
push
add
push
int
mov
cmp
xchg
flds
inc
push
or
or
or
lret
push
negl
mov
daa
imul
lods
fmuls
inc
cli
push
adc
jmp
rorb
scas
call
mov
lods
test
dec
jmp
je
add
iret
lock
mov
sbb
int
test
add
jl
orb
or
notb
dec
push
and
pop
jb
pushw
sbb
dec
cli
icebp
das
push
push
jle
imul
jo
jo
fwait
jmp
jae
jae
sbb
into
dec
cs
dec
fisubl
mov
push
and
push
adc
mov
jne
push
jmp
enter
hlt
nop
inc
out
lods
mov
out
pop
xor
call
pop
add
movsb
in
je
adc
jnp
mov
add
jmp
mov
push
std
shll
jmp
movsb
push
jno
lahf
fistl
cld
pop
imul
pop
add
jb
shr
sub
inc
test
imul
bound
jge
call
fcoms
pop
cmp
roll
pop
cmp
call
test
add
test
jl
mov
addb
mov
stos
jne
shlb
xchg
or
jecxz
xchg
test
mov
jmp
mov
or
sarb
cli
sahf
xor
push
dec
pop
xchg
adc
cs
push
ja
xchg
je
mov
loop
sub
pop
or
pop
cmp
push
fdiv
rcrl
or
in
pop
cmpl
dec
test
lock
xchg
mov
push
gs
gs
ret
jge
subb
mov
dec
cmpsb
push
addr16
inc
lods
mov
push
hlt
sub
inc
adc
decl
rolb
adc
loopne
cld
test
add
push
push
xor
add
aas
hlt
cwtl
dec
cmp
xor
mov
push
repnz
pop
add
jmp
mov
hlt
sbb
and
rorb
icebp
fsubr
pop
xchg
das
xlat
adc
xchg
movsb
mov
mov
push
mov
in
test
jne
pop
lods
push
sbb
enter
adc
sub
jmp
call
xchg
inc
jecxz
xchg
cmp
dec
scas
or
rorl
nop
cmp
push
inc
sbb
pop
ret
pushl
push
xchg
call
out
adc
aam
adcb
fdivrl
shr
rcll
outsb
or
lds
subl
mov
pop
test
lods
pop
shll
ljmp
pop
fwait
test
addr16
test
inc
add
pop
dec
adc
and
wbinvd
inc
das
loop
mov
push
das
fidivs
or
inc
adc
and
and
sub
pop
lods
jg
cmc
mov
mov
nop
push
dec
jge
xchg
mov
rorb
std
or
iret
jle
ss
dec
out
or
not
add
inc
sbb
and
flds
jl
xlat
adc
dec
add
lcall
pop
mov
imul
mov
pop
sbb
call
pop
jmp
test
xchg
mov
push
push
out
mov
icebp
mov
js
cmp
mov
setge
pushf
mov
cmp
mov
mov
or
test
cmp
or
and
mov
mov
jae
std
in
cmp
icebp
pop
jge
test
rcrb
fnstenv
and
sbb
mov
out
je
lret
int
cmpsl
insl
pop
sub
outsl
loope
inc
and
xor
mov
add
or
icebp
ret
inc
ret
cwtl
call
mov
or
jno
je
mov
mov
push
mov
adc
inc
lea
add
push
mull
xchg
and
push
sbb
mov
in
dec
jne
in
call
iret
inc
call
mull
adc
push
sbb
sbb
cmp
mov
push
jl
sbbl
fstps
cmp
clc
cmp
jge
add
scas
addb
inc
push
jge
pop
pop
dec
pop
sbb
push
jge
addl
inc
pop
shll
sub
cmp
or
xorb
push
dec
mov
adc
mov
movsl
sub
pop
lods
jae
jo
add
adc
push
mov
mov
call
jp
mov
orb
add
cmp
pop
rolb
loope
sbb
add
lcall
in
leave
sbb
push
jg
or
cwtl
mov
push
mov
test
push
inc
mov
pop
pop
pop
push
fdivrs
loop
or
ja
pop
xor
xor
pop
sub
insb
adc
or
jge
push
call
insl
inc
lea
pop
icebp
repnz
xchg
xchg
xor
jg
mov
call
pusha
nop
xchg
push
jmp
inc
xorb
cmp
mov
jge
adc
add
rclb
sub
or
jmp
or
jmp
pushf
or
sbb
inc
cmp
outsb
fisubs
andps
sbbl
int
dec
mulb
cmpb
lds
jl
pop
ret
or
mov
out
dec
in
and
ss
repz
outsb
test
inc
cwtl
mov
sub
add
push
jne
mov
stos
inc
mov
dec
add
aad
jb
jnp
jo
xchg
arpl
or
xchg
rcrb
test
inc
out
adc
imul
dec
xor
or
push
lahf
inc
call
push
push
shlb
mov
imull
push
xchg
cli
nop
mov
rcll
sbb
and
and
repz
jno
fmul
xor
and
data16
lds
xchg
dec
xor
inc
inc
dec
insb
enter
xor
pop
sbb
push
push
sbb
sbb
ret
push
pop
stc
bound
or
repz
dec
sub
xor
mov
jns
cmp
js
push
imulb
inc
push
mov
add
mov
rcl
loope
insb
clc
inc
mov
or
mov
fsubrl
mov
cmp
sub
and
out
or
mov
mov
icebp
inc
mov
lcall
jno
mov
mov
and
les
or
mov
jl
enter
std
push
or
lods
add
lret
mov
mov
rcll
movl
jge
call
add
lds
push
pop
mov
sbb
mov
pop
scas
push
pop
mov
sub
dec
cmp
mov
jl
xor
jo
jge
push
addl
into
jp
fnstenv
xor
adc
aam
sub
or
sbb
add
test
mov
movsb
or
mov
push
dec
sbb
mov
call
or
add
dec
mov
sub
jl
sub
xor
push
cltd
add
inc
ret
lea
push
decb
dec
or
jno
mov
pop
shlb
xchg
lods
test
sarb
xorl
in
es
in
xor
movsb
inc
sbb
test
adc
sbb
in
sbb
imul
mov
dec
sub
divps
out
sbb
aam
jg
sbb
xchg
jmp
push
mov
out
dec
cmp
mov
jge
ficomps
out
sub
add
icebp
cmp
out
cmp
and
xchg
mov
push
call
pop
stos
shr
jmp
mov
fpatan
and
fstpt
mov
jns
pop
add
adc
test
ljmp
sbbb
fsts
ja
stos
sti
xchg
loop
loope
test
cmp
add
adc
imul
and
mov
inc
test
and
xchg
or
rolb
int
test
repz
add
add
inc
es
or
negb
insb
pop
lret
call
jmp
cmpsl
inc
cwtl
pop
fbstp
dec
push
adcl
sbb
fmuls
xlat
jo
rclb
repnz
test
ds
mov
nopl
jmp
mov
or
mov
daa
lfence
adc
mov
sub
push
sub
add
repnz
jmp
sbb
xchg
add
call
pop
mov
mov
mov
das
jge
insb
call
xchg
mov
std
xor
mov
hlt
push
xor
push
test
xchg
push
addr16
test
fst
and
shr
or
pop
xchg
or
or
add
mov
dec
add
scas
cmpsb
lret
std
shlb
dec
adc
inc
lcall
enter
jbe
enter
add
roll
or
test
movsb
stos
repnz
fiadds
sub
inc
mov
mov
add
incl
mov
sbb
or
mov
or
call
jle
mov
and
mov
cmp
dec
hlt
sub
mov
or
push
data16
out
pop
into
inc
add
pushf
psllq
test
enter
cmp
push
rcl
xor
test
inc
call
orl
repnz
jge
dec
das
jle
mov
inc
xchg
clc
dec
loope
xchg
es
cmp
and
pop
fisubrs
inc
call
dec
adc
mov
sub
cmp
dec
outsl
inc
mov
inc
push
adc
or
bnd
mov
adc
mov
adc
jmp
in
xchg
pop
or
in
loop
inc
dec
decb
mov
mov
push
test
mov
pop
xor
rcrb
jg
outsl
lods
adc
filds
jmp
sti
cli
adc
add
xor
mov
mov
xor
cmc
cmp
sub
ljmp
mov
aam
xor
pop
push
cmc
ja
lahf
hlt
pop
or
fldl
mov
pop
jl
add
test
lcall
lahf
popa
fs
ds
mov
pop
ljmp
call
sub
mov
addr16
cmp
cwtl
enter
xchg
cld
mov
pop
lcall
mov
not
push
es
inc
or
subb
push
hlt
and
dec
adc
jmp
jge
mov
sub
jmp
es
or
or
adc
push
ret
sahf
add
out
cltd
mov
pusha
call
decb
mov
jl
or
xchg
sbb
fstps
mov
loop
and
mov
xor
out
jno
xor
fwait
and
sbb
subl
adcb
fcomps
lea
sarb
scas
add
and
loopne
dec
cli
and
ret
jecxz
jnp
and
call
sbb
scas
ret
jno
test
mov
jmp
orl
dec
daa
sub
adc
leave
inc
and
dec
push
xchg
jmp
mov
inc
scas
sub
push
aaa
leave
and
rorb
or
xchg
jp
mov
daa
jle
pop
ss
icebp
shrb
adc
jne
or
or
mov
xchg
mov
xor
sti
jo
push
jbe
imul
sbbl
mov
cmc
or
jae
dec
mov
jbe
inc
jecxz
add
mov
adc
mov
push
sub
and
imul
xchg
adc
dec
jge
mov
or
call
inc
mov
mov
jnp
or
scas
cmp
pop
mov
mov
or
push
mov
in
test
aam
fdiv
add
lds
jp
push
test
inc
adc
sub
insl
fistps
dec
and
jg
or
jecxz
jae
loope
andl
rorb
jb
adc
jge
aad
sbbl
pop
xor
insl
xchg
pop
add
xor
decb
repnz
test
sbb
mov
clc
loope
jae
orl
enter
imul
add
push
pop
mov
jne
jno
inc
xor
mov
xor
call
or
inc
sbb
shrb
and
mov
push
int3
cmp
mov
out
notl
xor
push
mov
adc
sub
repnz
bound
sub
jno
sti
or
jle
int3
mov
out
cmp
or
adc
xchg
and
cli
pop
mov
cld
in
inc
add
cmc
call
mov
mov
pop
pop
jecxz
int3
jle
sub
std
add
xchg
notb
mov
in
xor
daa
loopne
into
repnz
xor
add
push
xor
xor
ret
push
jmp
pop
pop
adc
pop
mov
das
cmp
sub
testl
adcl
iret
scas
dec
lahf
push
cwtl
insl
lds
mov
fiaddl
mov
and
and
pop
lods
popf
dec
and
cmp
fnstenv
mov
imul
shlb
pusha
mov
inc
inc
add
scas
mov
push
jmp
out
push
push
adc
clc
sub
fmuls
or
jnp
movsl
inc
or
mov
jae
sub
rolb
aad
popa
add
test
inc
sub
push
mov
divb
data16
test
adc
push
cmp
jge
adc
mov
sbbb
fldln2
and
jge
mov
int3
pop
sbb
mov
inc
pop
jno
mov
dec
mov
adcl
mov
mov
adc
xchg
add
iret
enter
shlb
add
aam
pushf
mov
mov
sub
cwtl
pushf
adc
addb
aad
or
test
dec
adc
movsl
sbb
lcall
hlt
mov
pop
inc
xchg
or
iret
pop
aad
jbe
adc
movsl
in
addb
xor
ja
cmp
pop
and
int
pop
out
jae
dec
sub
push
fsubr
call
jp
mov
andl
shrb
loope
loopne
mov
icebp
adc
add
rclb
int3
adc
xchg
or
stos
dec
decl
in
xor
add
jp
into
fs
sub
cltd
mov
mov
push
lahf
imul
pop
inc
pop
mov
pop
inc
adc
push
lods
inc
and
or
xlat
mov
ljmp
add
mov
or
cli
add
ss
es
jmp
test
mov
xor
or
add
test
fildll
call
js
add
mov
and
mov
pushl
scas
push
frstor
rcr
dec
mov
push
insl
jecxz
vmwrite
gs
ss
das
hlt
push
stos
sub
iret
mov
push
addb
sub
and
push
sbb
sub
sbb
xchg
loop
mov
mov
ds
and
rcrl
ljmp
and
inc
push
leave
xor
mov
mov
pop
inc
call
push
cwtl
and
inc
cwtl
pause
cmp
mov
lret
pop
dec
sub
add
add
and
gs
cmp
iret
jge
or
imul
fucomip
dec
sub
notl
ss
mov
test
mov
ja
adc
or
in
sbb
push
test
and
jo
adc
mov
pop
xor
inc
adc
dec
add
aad
sbb
jmp
sbb
jge
inc
es
insl
adc
cmp
mov
cmp
sbb
sub
jmp
scas
mov
popf
pusha
push
push
stc
or
xchg
sbb
push
jbe
inc
and
shl
jl
xchg
stos
ljmp
xchg
lret
sub
pop
rcr
mov
ss
add
push
xchg
andl
mov
aam
sar
test
mov
dec
and
in
mov
mov
push
jno
iret
mov
mov
push
adc
popf
pusha
dec
mov
push
sub
pop
call
repnz
pop
hlt
inc
lods
mov
dec
push
popa
testb
adc
ret
xor
loop
jo
mov
repnz
push
sar
xchg
clc
test
add
shrb
arpl
rcr
sub
call
iret
xchg
mov
dec
dec
jmp
cmp
loopne
pop
lahf
fsubp
dec
lea
add
andps
pop
hlt
add
fs
inc
jo
call
cs
or
dec
jae
lea
push
in
popl
dec
or
mov
or
sbb
cmp
imul
loope
add
ds
adc
xorl
cmp
inc
xor
add
mov
pop
test
xor
mov
in
icebp
jae
or
repz
insb
outsl
adc
adc
js
mov
sbb
mov
outsl
inc
std
push
push
jb
hlt
mov
add
cmp
clc
pushf
sub
repz
test
jbe
cmpsl
mov
outsb
dec
and
das
fsubl
pop
mov
or
xor
mov
inc
dec
sub
data16
inc
shrb
mov
inc
cld
mov
mov
xor
mov
jne
pop
jge
or
test
insl
inc
test
sbb
pop
lods
xchg
dec
cmp
jo
and
xor
repz
out
adc
mov
cmp
pop
mov
lock
add
dec
pop
xor
add
cmp
sub
adc
add
jp
pop
xor
xchg
xor
jge
pop
sub
and
push
mov
out
inc
mov
jp
sub
inc
sbb
xor
or
cmp
sub
push
mov
repnz
xchg
adc
sbb
and
and
cmp
stc
test
jmp
sub
pop
pop
cmp
adc
dec
mov
jmp
leave
leave
fwait
loop
xchg
pop
bound
adc
test
inc
push
cmp
fwait
cmc
dec
clc
lret
and
inc
sub
fsubl
adc
cmp
arpl
push
mov
adc
cli
or
pop
mov
shll
fisubl
adc
repnz
dec
xor
xor
dec
pusha
mov
and
sub
iret
je
xor
adc
inc
icebp
mov
jge
sbb
mov
add
dec
loopne
jle
mov
sub
pop
lds
lods
add
sub
dec
push
adc
repz
pop
mov
jae
sbb
mov
outsb
mov
mov
sub
or
cwtl
add
jno
mov
ficoml
mov
popa
push
out
xor
dec
sub
xchg
jge
sbb
rcr
stc
cmp
or
or
fisttpl
insb
add
adc
dec
push
adcl
pop
add
mov
sub
push
ret
xor
daa
fwait
lcall
add
into
hlt
cmp
icebp
pop
rcrl
sub
ja
jmp
popa
adc
mov
sub
std
cmpb
pop
or
push
cmp
ret
test
cmpsb
cmp
sbb
adc
jae
dec
pusha
cmp
add
jl
mov
push
cmp
bnd
call
dec
les
cmp
and
aam
rol
pop
lret
inc
call
pop
cltd
jb
cmp
aad
mov
sub
mov
adc
test
and
dec
inc
add
and
jns
xor
out
cmp
push
xchg
push
cmpsl
adcb
lods
xor
cmp
jmp
scas
das
xor
lret
loope
ret
jno
test
jmp
jecxz
aad
psubw
repnz
inc
call
mov
clc
cmpsl
jecxz
pop
in
jmp
lods
mov
sub
xor
int3
out
ret
in
or
mov
mov
push
jp
sub
inc
jno
fadds
add
xor
adc
mov
jae
jae
add
iret
ficompl
jae
jmp
pop
sbb
add
sbb
jae
dec
or
daa
icebp
in
sbb
call
pushf
icebp
shr
mov
mov
test
cmpsl
mov
inc
cmpsl
loopne
xchg
rolb
pop
push
notb
icebp
push
xor
loopne
in
in
and
sbb
push
ret
repnz
push
mov
mov
xchg
xchg
sbb
in
lret
pop
in
insb
popf
cmpsl
mov
pop
mov
sbb
or
test
jmp
xchg
xchg
pop
faddp
xchg
jno
jne
repz
push
push
adc
push
pop
mov
cli
mov
inc
pmulhw
into
mov
mov
ja
xor
enter
sbbb
push
xor
or
mov
push
fs
xchg
jo
loopne
adc
and
mov
jg
mov
lods
add
inc
call
inc
add
push
xor
or
into
adc
lahf
test
push
ljmp
pop
adc
jno
and
adc
and
mov
lahf
pop
xor
pop
xor
push
or
and
jmp
cmp
adc
push
sbbb
stc
pushf
rolb
cmp
lods
lret
je
test
mov
mov
xor
fs
icebp
xor
aam
sub
push
popf
inc
out
pop
cmp
fnstcw
jecxz
add
sti
jle
add
sbb
mov
adc
adc
add
mov
pop
test
fidivs
in
mov
cmp
pop
lea
call
je
sbb
mov
adc
mov
pop
out
call
loopne
push
or
mov
aaa
sub
lock
call
or
xor
pop
lret
fldl
stos
out
mov
mov
and
and
repnz
inc
pop
pop
js
loop
int3
add
or
cmpsl
sbb
cmp
or
push
test
cmp
lret
jl
or
jmp
xchg
cs
cmc
jp
hlt
das
dec
test
stos
arpl
xorl
lret
add
jmp
push
jne
xchg
adcl
mov
push
xor
mov
inc
dec
jbe
dec
rorl
inc
addb
int3
les
fisubrl
incl
sub
mov
jmp
clc
fadd
sbb
mov
insb
and
adc
outsb
dec
sbb
pop
pop
sub
shr
fildl
leave
jge
notrack
push
inc
insb
sbb
dec
pop
cwtl
out
push
bound
push
cmp
or
mov
inc
sub
sbb
cs
das
sbb
inc
fisubl
lret
inc
fldcw
push
mov
or
push
or
push
jmp
mov
gs
push
daa
jno
push
dec
push
sub
push
jne
push
jge
outsl
and
inc
fldcw
pop
and
fidivrs
sgdtl
and
jae
jecxz
sub
cwtl
mov
mov
add
inc
xchg
cwtl
xorl
into
iret
xor
loope
popa
mov
add
jo
std
test
dec
jae
rolb
in
subl
mov
fiaddl
test
test
test
call
push
or
and
mov
sbb
lret
mov
inc
jp
cmp
sbb
mov
jno
add
pop
mov
cmpsl
mov
jno
les
mov
xchg
jns
sbb
xchg
add
jmp
call
mov
mov
xchg
dec
pop
and
leave
jno
fstpl
mov
sub
mov
hlt
les
jnp
push
mul
pop
cmp
in
movsb
sub
cmp
cmp
lods
add
clc
mov
inc
inc
lahf
sub
bound
mov
pop
adc
icebp
imul
jl
mov
dec
xchg
out
adc
int3
cmpsl
xor
mov
rcrb
jg
jge
dec
xor
test
xlat
mov
mov
aam
jbe
insb
lret
inc
mov
jl
pop
push
fsubs
fimuls
cwtl
and
nop
cmp
sub
adc
jge
sub
call
fmull
pop
jmp
and
bnd
mov
push
pop
ljmp
adc
inc
into
movsb
inc
sub
test
adc
xchg
loopne
and
insb
push
cmp
pop
add
les
pop
loopne
or
out
inc
int3
jp
mov
ss
icebp
pop
add
in
and
adc
adc
pop
shr
daa
loope
in
push
jb
sbb
rorl
xor
lock
pop
mov
xor
es
xlat
mov
ret
sbb
repnz
cmp
andl
repnz
cmp
bound
or
add
mov
push
mov
dec
movsl
jno
pop
adc
mov
or
mov
stos
test
xchg
jns
or
sahf
fmull
mov
add
cmc
push
movsb
iret
inc
in
popf
cmp
or
sbb
jmp
sbb
and
ret
adc
push
mov
lcall
jmp
inc
icebp
sbb
jne
or
rclb
inc
in
xor
fnstenv
rol
nop
leave
jno
popf
je
cwtl
or
fisubs
jl
xchg
xor
ja
test
cmp
add
adc
xlat
cli
push
push
adc
fstps
shl
jl
sbb
push
xor
lahf
push
hlt
lods
outsb
push
call
xor
dec
sarb
inc
sbb
loop
push
in
adc
jle
inc
sbb
sar
inc
and
imulb
out
or
xlat
dec
aad
test
mov
pop
pop
lahf
hlt
sub
das
dec
dec
call
fidivrl
ficomps
pop
test
dec
cmp
push
adc
and
sbb
add
adc
sub
aas
adc
mov
loope
adc
sbb
sbb
sbb
sub
or
sbb
push
push
push
and
pop
mov
mov
mov
imul
xchg
decl
int3
jno
hlt
loopne
jl
in
and
sub
push
in
clc
scas
cltd
decl
test
jmp
dec
push
add
inc
or
icebp
dec
into
dec
jmp
dec
inc
ss
aam
insb
xchg
mov
shl
pop
ss
jle
or
jae
jge
mov
jno
add
mov
jl
cmp
or
iret
add
xchg
popf
ljmp
or
das
adcl
lret
mov
sub
pop
xchg
cli
sbb
add
push
cltd
xorb
shll
mov
sbb
and
add
addl
loopne
cld
jmp
mov
repz
repnz
or
sub
mov
dec
add
sub
in
pop
mov
dec
or
push
in
lahf
loopne
xchg
enter
add
jmp
jge
adc
dec
or
int
xchg
jmp
adc
jns
idiv
leave
repnz
pop
pop
cmc
or
sbb
adc
hlt
dec
adc
mov
repnz
aaa
xor
add
roll
xchg
and
out
jbe
and
scas
add
test
or
or
rcrb
mov
mov
movb
jae
hlt
ror
sbb
flds
test
push
mov
xchg
sbb
dec
adc
stos
rcll
aad
movsb
xor
lret
adc
loope
and
das
inc
mov
adc
repz
divb
mov
mov
mov
pop
xlat
mov
cmpsl
rolb
dec
pushl
adc
daa
dec
fsts
push
or
mov
jno
sbbl
ret
sbb
cmp
mov
and
jmp
or
out
push
fidivs
inc
outsb
mov
mov
jl
jl
sbb
sub
jb
push
adc
or
or
jno
cmp
dec
fnstenv
inc
cmp
mov
aad
push
out
imul
cmc
fisubs
fstps
ficomps
dec
xor
push
mov
jge
pop
inc
call
repz
jmp
xor
push
sbb
call
adc
js
outsb
arpl
pusha
lcall
andb
rcrb
mov
pop
dec
inc
pop
sbb
test
and
out
mov
sbb
aad
or
xor
jnp
sub
dec
push
nop
add
sbb
and
sarl
adc
mov
cltd
fldenv
jmp
repnz
jmp
outsb
and
cmp
repnz
mov
lret
hlt
push
fiadds
cmc
cmpl
jbe
xchg
inc
mov
push
in
or
cli
jns
xor
stc
xor
in
jb
rorl
inc
mov
push
dec
ret
mov
loop
repnz
cmpsl
sbb
sbb
rep
hlt
outsb
cmp
jne
add
push
sbb
cmc
shll
adc
cmpxchg
test
jo
push
sub
pop
sar
pop
xor
add
insl
jmp
push
out
insb
or
mov
lret
cmc
xchg
pushf
dec
pushf
sub
faddl
outsb
in
repz
push
fsubp
sub
nop
dec
sbb
repz
add
xchg
mov
xor
mov
add
pop
or
or
or
jbe
lret
adc
jmp
loopne
jb
mov
xor
repnz
addr16
pop
addr16
xor
cmp
cmpb
clc
add
sahf
jb
push
push
aad
pop
jle
loop
popf
popa
pop
dec
shll
adc
sub
sub
or
inc
jns
inc
jl
mull
push
and
outsb
imul
hlt
mov
fwait
cmp
or
ja
push
das
dec
adc
jne
jmp
insl
and
int3
data16
add
mov
push
addr16
dec
daa
jns
mov
sbb
cs
sbb
push
mov
pop
and
inc
lcall
and
imul
push
xchg
jo
xor
arpl
test
sbb
push
adcl
imul
inc
testb
or
les
add
adc
dec
adc
jo
in
stc
mov
and
imulb
or
dec
sub
pop
in
aad
jns
xchg
mov
popa
and
pop
clc
decb
mov
jge
sbb
mov
lds
adc
rcrl
popf
popa
icebp
push
fxtract
xlat
sbb
leave
pop
sbb
mov
imul
rorb
sub
pop
in
jp
lcall
addl
push
je
or
cmp
sub
xchg
push
mov
hlt
loopne
adc
push
inc
xlat
sbbb
jmp
test
addb
add
or
push
or
gs
jmp
jmp
lea
lods
out
sti
mov
sbb
loopne
xchg
rorl
leave
test
xor
push
adc
jns
cwtl
adc
sub
shll
add
or
jns
lret
mov
dec
incb
mov
ds
outsb
adc
jl
aaa
sahf
or
cmc
inc
in
dec
aam
cmp
jmp
adc
sub
das
test
sub
mov
mov
ljmp
out
in
lea
enter
gs
mov
aad
hlt
push
inc
pop
fildl
add
pop
ss
adc
cs
mov
lcall
sub
mov
in
or
and
mov
fwait
cld
outsb
add
dec
in
add
cmp
in
int
dec
cmp
ret
adcb
popl
jbe
jmp
movsl
mov
and
or
dec
lret
jl
ret
outsb
xor
jae
inc
fadds
pop
cmpsb
add
or
mov
adc
movsl
jecxz
or
and
jg
pop
inc
mov
aaa
push
dec
jmp
push
add
jmp
dec
add
ja
cmp
arpl
fwait
dec
add
mov
inc
out
xor
push
cmp
sub
add
addr16
and
pop
sbb
icebp
add
pop
xchg
adc
sbb
add
add
or
or
or
sbb
mov
clc
sbb
inc
dec
mov
sbb
inc
or
test
push
adc
shl
inc
cwtl
cwtl
push
dec
and
shll
dec
mov
mov
pop
test
sbb
xor
lea
inc
sbb
mov
add
jl
push
out
or
pop
std
xlat
mov
cmp
int
ret
mov
pop
mov
dec
sbb
loop
and
ja
sub
hlt
scas
bound
movsl
out
jo
enter
mov
sarb
mov
cmp
jno
aas
add
inc
mov
cmp
push
mov
insl
outsb
stos
or
adc
cmpsb
xor
mov
rolb
dec
mov
jp
adc
aam
pop
jo
sub
mov
xchg
push
pop
bound
lahf
scas
pop
jns
addr16
xor
xor
push
mov
cmp
jmp
dec
rdmsr
jp
ss
stc
jno
add
push
hlt
mov
negb
dec
sbb
testl
out
test
pusha
mov
xor
cmp
cmp
push
and
jmp
das
jbe
pop
jne
orb
add
or
or
push
roll
insb
mov
or
roll
mov
test
nop
mov
push
mov
leave
out
inc
jge
sahf
inc
jg
cmp
xchg
in
push
inc
mov
push
add
xlat
lods
fmull
adc
test
jmp
aam
in
or
xchg
int
mov
shrb
imul
pop
jge
loopne
cmp
and
or
cs
xor
sub
mov
add
adc
add
cmc
lea
addr16
ret
sbb
add
icebp
aad
adc
ss
aas
xchg
inc
je
aam
and
dec
lods
into
arpl
incl
sub
mov
inc
or
out
jo
sbb
insl
rorl
xlat
cltd
jmp
add
sbb
sub
add
push
sbb
inc
insl
pushf
repnz
inc
mov
ret
std
jb
sub
into
movsl
lret
sbb
dec
rcrb
int
mov
mov
insb
mov
das
pop
xor
add
or
enter
fstpl
xor
loopne
mov
test
dec
outsb
out
pop
insb
fmull
les
xorl
push
cmp
mov
xor
and
or
sub
lcall
dec
xor
popa
test
in
xor
sbb
or
sub
rcl
mov
or
test
push
xor
add
push
dec
push
lahf
pop
rcrb
into
xchg
add
dec
enter
rolb
pop
add
push
jno
cmp
leave
test
rolb
mov
adc
mov
loopne
adc
call
outsb
test
in
invd
add
xchg
sbb
sub
mov
cld
enter
add
add
sbb
sbb
lods
jae
or
or
xorl
xlat
push
ret
cld
jnp
das
add
sar
test
cmp
pop
or
out
push
pop
sub
sbb
adc
pop
nop
sub
cmp
subb
xor
sub
xchg
push
xlat
adc
cs
pop
dec
into
lds
ret
jbe
xchg
mov
cmp
mov
xor
lret
jge
xchg
fdivl
mov
mov
out
inc
jne
shlb
push
clc
arpl
das
sub
dec
sub
xor
outsl
loopne
mov
sub
cmp
pop
popf
aad
sbbb
int
pop
in
sub
stos
or
cmp
jmp
cmp
daa
jbe
push
mov
fidivrs
bound
test
lahf
add
mov
pop
mov
shrb
adc
iret
sub
popf
push
fisubrs
addr16
or
mov
test
mov
mov
movsb
popw
push
scas
ja
sarl
sbb
pushf
or
add
scas
cmp
dec
mov
adc
mov
add
dec
adc
sbb
leave
xchg
cmp
cmpb
jbe
xchg
mov
lock
les
hlt
ss
push
or
or
sub
data16
mov
inc
aaa
mov
outsb
mov
dec
iret
dec
fimuls
and
in
inc
pop
sub
dec
push
add
or
cld
rolb
data16
pop
and
daa
inc
imul
dec
ret
addb
push
sub
cltd
movb
jno
sub
test
adc
ss
adc
add
adc
repz
jmp
jbe
jno
mov
clc
sub
cmp
ret
lahf
hlt
or
scas
sbb
xlat
inc
call
insl
pop
repnz
push
and
rorb
sti
andl
aam
sub
mov
adc
testb
jmp
inc
sbb
mov
jg
push
dec
xorl
loope
bound
dec
adc
not
imulb
or
and
into
or
subb
mov
in
lret
mov
add
push
ljmp
int
test
call
ret
sahf
addr16
cld
cmp
jg
pop
lcall
xchg
mov
aad
mov
xor
stos
sbb
adc
fstps
inc
fsubl
push
call
sbb
aaa
mov
sar
out
inc
sbb
xchg
sub
call
pop
push
repz
xorl
jno
outsb
pop
or
mov
or
sbb
inc
outsl
sbb
scas
pop
adc
aas
inc
pop
sub
daa
pop
xchg
sub
sub
daa
js
pop
pop
aas
cmp
pop
test
inc
or
pop
subb
or
test
data16
bound
movsl
add
sub
or
dec
or
mov
les
pop
mov
sbb
mov
push
loopne
mov
xor
push
or
or
outsl
js
je
or
jmp
lock
xor
pop
adc
dec
dec
and
mov
daa
adc
dec
sbb
nop
add
add
mov
repz
outsb
inc
in
fistps
mov
fists
enter
xchg
add
sbb
sbb
add
and
add
je
mov
popa
adc
add
fmull
loopne
inc
add
mov
dec
adc
add
enter
aas
or
dec
sub
or
sbb
or
push
lods
mov
test
inc
push
ljmp
dec
fsubl
adc
leave
add
mov
mov
sub
mov
and
add
adcb
add
and
add
dec
mov
outsb
adc
pop
xor
sbb
inc
sbb
add
enter
and
add
mov
sbb
jl
call
push
jecxz
lods
pop
lods
daa
and
shll
or
pusha
cmp
sbb
jno
adc
mov
xchg
add
sub
shrb
notl
pusha
jl
into
dec
add
js
arpl
sbb
je
push
mov
add
inc
int3
adc
mov
xor
bound
and
test
sbb
cmp
adc
lods
cmp
outsb
mov
xor
dec
dec
movsb
adc
add
mov
push
notb
mov
fstl
mov
xor
shrb
push
mov
or
dec
into
mov
add
inc
sub
or
call
imul
fwait
int
das
push
pop
adc
mov
test
or
xchg
data16
mov
jge
ja
imul
jle
mov
sub
aad
jg
stos
jle
add
xchg
cmp
or
push
sub
mov
and
mov
mov
or
dec
rclb
inc
jle
mov
scas
xor
add
scas
or
fs
dec
or
pop
inc
push
inc
pop
pop
push
inc
out
scas
test
addl
je
mov
inc
mov
push
ficomps
mov
seta
push
jg
dec
jae,pt
xor
fdivrl
sub
scas
add
or
xor
inc
push
jmp
cwtl
push
std
pop
repz
imull
add
lahf
mov
jl
or
mov
pop
sbbb
out
cmp
mov
mov
ss
adc
mov
xchg
sbb
xchg
sbb
mov
jmp
mov
xchg
dec
add
mov
cmpsl
jnp
int3
dec
enter
or
pop
sub
in
sub
dec
mov
fsubrl
push
or
cmp
mov
add
push
jge
sbb
test
call
sub
adc
rcrl
add
add
pop
sub
add
jle
mov
outsb
inc
loop
mov
shrl
mov
ja
int
and
or
mov
xcrypt-cfb
cmpsl
daa
test
hlt
fbld
sbb
and
outsb
mov
jg
and
push
sbbl
cmp
ret
add
xor
loop
pop
mov
fistpll
popa
add
push
sbb
mov
lret
fs
mov
push
jmp
es
ss
nop
jne
arpl
push
icebp
jbe
test
push
je
and
call
mov
andb
mov
sbb
push
dec
fsubrs
dec
cmp
or
cmp
mov
mov
jg
or
push
sbb
call
roll
aaa
or
push
push
inc
push
sbb
cmp
jmp
fisubs
movsb
push
or
sub
je
rclb
mov
int3
sub
bound
mov
loopne
mov
mov
testb
or
jmp
xor
pop
mov
fs
repz
or
cmp
pop
jnp
cmp
jl
and
add
pop
mov
pop
orl
repz
cmpsb
leave
rcrb
sub
and
mov
add
mov
mov
dec
jmp
push
addr16
dec
jb
push
test
ret
or
jo
stos
push
mov
xor
js
mov
jb
jbe
aad
and
frstor
xorb
cli
pop
shlb
mov
mov
cmc
mov
jmp
scas
arpl
orb
and
xchg
daa
add
in
insl
or
decl
and
fld
sarb
cli
cmp
mov
mov
adc
push
insl
rcrl
mov
hlt
and
idivb
add
hlt
cmpsl
mov
test
lods
sub
cmp
clc
jo
adc
pop
iret
adc
and
lahf
rclb
inc
lahf
js
and
mov
daa
test
imull
jge
push
xor
sbb
jne
and
jmp
scas
sbb
aam
call
jmp
mov
mov
sbb
dec
add
mov
aam
out
inc
mov
fbld
sub
inc
sub
movsb
aas
jge
lahf
mov
rclb
mov
outsb
lcall
add
or
xor
inc
or
push
pusha
test
sarb
ret
lret
mov
dec
movsb
xor
add
cmp
mov
loop,pt
mov
fadds
mov
and
sbb
clc
loopne
push
leave
mov
xor
xor
rclb
je
jmp
insb
adc
icebp
xor
mov
cmp
mov
pop
jmp
inc
cmp
flds
les
mov
fnstcw
mov
push
add
loopne
aam
or
jg
mov
cli
add
pop
and
mov
clc
jno
icebp
mov
scas
jge
add
mov
add
je
icebp
jmp
test
bnd
jmp
insl
aam
pop
test
test
lods
repnz
inc
rorl
xor
jnp
pop
into
jno
lret
inc
jo
jle
mov
fdivrs
dec
jae
shlb
and
xchg
ret
cmc
cld
xor
push
aad
pop
jno
fdivs
test
insb
pop
dec
jmp
nop
je
add
aam
mov
clc
mov
push
cltd
pop
adc
inc
pop
jno
dec
pop
lods
or
dec
adc
js
adc
cli
insl
shlb
push
push
shr
sub
cmp
adc
jle
and
xor
cli
into
testl
addr16
mov
pop
mov
xor
jns
mov
lret
add
sub
nop
and
or
lcall
stos
orb
mov
pop
lcall
enter
inc
add
jne
jg
adc
or
adc
pop
xchg
mov
sub
xor
in
mov
adc
int
adc
nop
fcomps
xchg
mov
ret
out
sahf
adcl
fisttps
push
xchg
mov
adc
xchg
and
xor
xchg
test
jge
idivl
pop
sti
mov
adc
dec
mov
repnz
insb
test
adc
cmp
shlb
mov
inc
jle
jb
es
dec
jns
mov
dec
andl
addr16
lods
push
pop
push
add
ljmp
mov
shr
inc
or
rorb
inc
xchg
or
in
or
cmp
bound
push
popa
mov
testb
popf
lods
cmpsl
push
xchg
stos
bound
mov
loop
stos
div
repz
dec
mov
mov
dec
jns
inc
faddl
sarb
pop
stos
nop
rorl
test
mov
mov
cmpsl
imul
or
popl
push
pop
in
jno
inc
lret
adc
or
mov
cld
inc
xchg
repz
mov
sbb
and
dec
scas
pop
add
mov
jns
dec
xorl
adc
movsb
lods
push
out
or
lods
sbb
jb
sbb
div
rcrb
xor
and
rorl
sbb
push
xchg
add
data16
push
push
mov
stc
xor
pop
divb
call
out
jmp
or
jge
mov
sbb
adc
xor
inc
push
cmp
int
int3
hlt
jg
int
cmc
mov
sbb
add
or
pop
or
xor
sti
xchg
add
in
xor
movsb
loop
cmpsl
enter
leave
pop
je
jnp
mov
add
pop
addb
push
mov
inc
cwtl
add
mov
add
pushf
ja
repnz
pop
call
stos
imul
dec
xor
or
add
in
mov
dec
or
add
jmp
inc
mov
stc
or
js
mov
push
or
stos
cmp
jo
or
lcall
mov
xlat
sub
icebp
mov
push
pop
jmp
cmpsl
lock
adc
sub
sahf
adc
sub
mov
add
pushf
add
adc
lods
push
mov
stos
inc
leave
fimuls
cmpsl
xor
adc
and
mov
mov
daa
fwait
loopne
pop
jbe
and
test
push
adc
jge
jge
pop
mov
test
inc
fidivl
mov
cmp
or
lds
jmp
xor
jl
sub
mov
in
sub
jmp
mov
jne
rorb
push
mov
ficoms
jns
dec
cmp
lods
cmpsl
cs
inc
dec
cmp
insb
sbb
test
add
adc
xchg
mov
sub
test
adc
punpckhdq
jmp
adcl
and
or
orl
inc
sbb
out
flds
movsb
nop
dec
mov
mov
and
dec
xor
sub
stos
sbb
inc
xchg
xorl
dec
sbbl
div
int3
lret
mov
test
decl
orb
and
mov
jne
or
flds
sbb
outsb
and
dec
jmp
push
or
dec
sub
cmc
jae
mov
sti
xchg
jg
sbb
adc
mov
mov
test
shlb
clc
subl
rorl
and
cld
or
test
sbb
sbb
sbb
inc
jo
scas
push
cld
test
loopne
mov
mov
and
es
cmp
jne
inc
ljmp
push
mov
lods
sub
adc
xor
xchg
jnp
bound
fists
pop
mov
jmp
cmp
push
jne
jo
mov
sub
push
jbe
mov
dec
int
jmp
cmpl
add
movsb
mov
outsl
repz
pop
stos
add
mov
xchg
imul
test
cli
and
repz
push
mov
pop
mov
mov
add
cmc
dec
pop
and
push
push
aam
mov
or
jge
mov
rcrl
out
xor
mov
and
add
add
orb
outsb
cmp
test
mov
add
adc
cmp
cwtl
sub
aaa
push
or
jg
push
add
daa
int3
pop
fimuls
add
fdivp
jge
xor
dec
les
cld
sbb
outsl
add
int3
lods
or
ffree
jmp
into
and
dec
xor
add
pop
cmp
aad
push
les
xor
mov
cwtl
leave
push
fmuls
pcmpeqw
stos
xchg
fcoml
inc
test
xchg
xchg
lods
decb
jg
cmp
sbbb
hlt
test
rclb
or
loopne
dec
cmpb
pop
rep
testl
gs
jmp
es
push
pop
mov
enter
jbe
xorb
pop
mov
repz
jbe
mov
mov
jge
fadd
fadd
insl
ja
imul
or
mov
lret
shll
add
push
insl
sub
or
pop
jns
jg
xchg
repz
das
jb
imul
xchg
shll
rclb
push
out
clc
mov
and
sbb
add
lahf
stc
jge
xor
mov
push
xor
aas
jg
push
xlat
test
sarl
cli
sub
jge
mov
leave
jle
rcr
sbbb
sarb
cmc
cvtps2pi
xor
inc
push
cld
mov
pop
aaa
fidivrs
bound
adc
cltd
leave
mov
int
dec
enter
jae
imul
push
and
cmp
lret
xorb
into
pop
jmp
inc
jmp
dec
and
jno
sub
cmp
int3
xchg
jge
xchg
movsb
add
je
inc
jb
je
pop
lret
sub
daa
sahf
or
xchg
daa
repnz
enter
sub
xchg
ret
and
ljmp
pushf
xor
repnz
push
popf
rcll
dec
test
push
lods
jle
and
mov
lods
or
jge
dec
mov
mov
scas
sbb
aad
jl
aam
test
outsl
add
pop
dec
mov
jp
cmpsb
adc
outsb
ja
scas
pop
std
rclb
jne
mov
lea
xchg
daa
dec
and
push
faddl
fadds
sti
aaa
daa
test
push
rorb
and
adc
cld
aas
dec
sub
inc
das
iret
sub
jns
nop
repz
lock
add
push
aad
push
repz
and
adc
or
sbb
sbb
push
mov
das
ret
xor
adc
cmp
push
inc
jp
loop
xor
cmp
popf
pop
dec
pushf
mov
inc
shrb
push
pushf
jae
add
adc
push
or
push
push
push
cmpsl
jecxz
pushf
mov
jmp
push
lea
jmp
lock
imul
cmp
outsl
lea
xor
enter
add
mov
inc
inc
sub
jae
ror
mov
sub
fistl
ljmp
cmp
jns
mov
call
and
pop
inc
push
pop
jnp
ret
rorl
adc
mov
sbb
adc
or
adc
jnp
or
into
jo,pt
cld
xor
loopne
cld
add
mov
and
mov
in
rolb
cmp
adc
in
mov
divb
stc
adc
xchg
xorb
push
jbe
jg
dec
ss
shr
ret
or
xchg
in
add
adc
adc
movsb
add
mov
pop
or
pusha
or
mov
adc
push
dec
mov
mov
inc
repz
mov
inc
sub
pop
inc
cmpsl
das
pushf
or
movsb
ss
or
je
pop
mov
jge
pop
cmpsb
leave
arpl
xchg
mov
push
sbb
or
and
or
dec
pushf
andb
cmpsb
into
cli
andb
iret
test
divl
push
leave
push
jo
and
hlt
cmp
icebp
shl
mov
pop
or
mov
adc
mov
repnz
gs
xchg
or
pop
divb
mov
mov
pop
push
jg
testb
or
mov
notb
loope
cmp
cmpsb
pop
testb
decl
jp
pop
push
nop
pop
test
inc
loop
fisubrl
aas
imul
and
inc
cli
mov
dec
mov
or
mov
inc
nop
mov
rorl
in
add
xchg
mov
jne
int
sbb
add
mov
lret
bnd
adc
sahf
mov
insb
push
loopne
cld
adc
clc
fimull
and
adc
jb
jno
xorb
sub
inc
or
fxch
xor
add
cmp
dec
mov
jmp
jno
or
inc
rcl
xchg
add
xor
out
int
jne
call
sub
xchg
mov
cmc
dec
push
out
jmp
dec
pushf
xchg
add
or
enter
out
sbb
fsubrs
sbb
rep
mov
adc
lahf
jne
decb
jae
dec
test
fsubrs
sbb
or
dec
out
or
mov
mov
mov
adc
xor
adc
mov
test
mov
cmpb
iret
test
lahf
jno
into
das
sub
clc
cmp
mov
mov
cmp
out
arpl
loopne
xor
or
sbb
jne
mov
and
lods
ficomps
jge
pop
or
into
xor
adc
int3
rorb
fildll
push
mov
push
bnd
cwtl
repz
inc
ja
fisubl
sbb
je
sub
dec
xchg
xchg
arpl
pop
and
push
mov
out
jno
negb
insl
lds
or
stos
cmc
ds
adc
daa
cmp
add
mov
mov
mov
orb
out
imull
sub
dec
ds
gs
xchg
add
mov
fs
stos
cmp
or
je
cmp
repnz
mov
test
pushf
loopne
pop
loope
aad
jbe
add
xor
imul
and
es
test
shr
pop
test
add
loop
das
sbb
call
ljmp
fidivl
jp
repz
test
and
add
cmp
inc
rclb
repz
les
stos
dec
aaa
sbb
sbb
push
sbb
sbb
jo
pop
test
rorl
loopne
cmpsl
xor
in
into
dec
jmp
add
and
mov
xor
jne
push
xor
dec
jo
lock
dec
loope
pushf
ficoms
cs
div
sub
jo
sub
jnp
dec
into
mov
pop
push
test
nop
inc
je
cmp
or
test
push
lds
jno
nop
into
xor
sub
test
cmp
add
inc
cmp
xor
jmp
mov
xchg
shl
add
push
add
ss
mov
add
mov
call
dec
cwtl
pop
repnz
lret
mov
pop
mov
das
sbbl
ss
cmp
es
add
in
push
or
push
jl
pop
push
or
or
or
lea
and
pop
popf
xchg
mov
mov
pop
pop
mov
lcall
inc
addr16
mov
dec
icebp
and
mov
jb
negb
mov
mov
xchg
repnz
lret
push
adc
push
mov
int3
adc
push
adc
push
pop
ja
ljmp
push
pop
or
mov
sarl
add
cld
xor
out
sub
push
sub
sub
mov
pop
cwtl
cmp
mov
js
repnz
xor
jno
lods
pop
jo
lret
test
mov
fisttpll
jl
ja
ficompl
test
sub
sbb
or
shrl
sub
movsb
jb
sub
add
add
adc
adcb
jne,pn
or
mov
rclb
mov
lods
push
add
sub
and
fsubr
mov
dec
clc
push
dec
leave
xchg
inc
out
mov
sub
sbb
fdivs
mov
in
sarl
aaa
into
dec
add
gs
and
mov
aaa
out
push
popa
or
cmpsb
push
jg
fwait
sub
push
test
and
or
and
repnz
mov
adc
add
or
xchg
add
mov
lret
add
cs
xor
iret
jae
loope
push
and
add
mov
dec
inc
sub
shll
or
ret
jns
mov
add
mov
or
vmovlps
sub
jne
jae
mov
rorb
sbb
jne
adc
xchg
xchg
xchg
movb
sub
adc
inc
xchg
or
ficoms
jae
nop
into
adc
incb
lret
cmp
cmp
pop
mov
xor
jo
cmpsb
insb
bnd
fnsave
lret
loopne
pop
mov
mov
or
repnz
stos
or
jmp
pop
mov
mov
xlat
mov
dec
sbb
add
push
xchg
cmp
mov
inc
xchg
repnz
dec
testl
xchg
repz
hlt
mov
pop
jmp
xchg
xor
mov
cmp
repz
mov
cmpsl
dec
orl
cmc
or
mov
pop
ss
cs
sahf
xchg
jl
mov
sbb
mov
insb
lret
push
pop
jo
jmp
push
dec
push
cmp
fs
pop
clc
loopne
popf
add
adc
xor
push
sarl
or
dec
adc
sbb
xchg
jae
mov
pop
or
ja
in
shrb
and
inc
in
inc
mov
add
adc
xor
enter
call
xor
cld
add
push
xor
inc
or
or
add
pop
mov
inc
or
mov
insl
jne
das
fcoms
push
jns
push
or
call
push
pop
jmp
fidivl
lock
adc
insb
and
cmp
pop
insb
or
cltd
test
movsl
jmp
xor
mov
add
add
in
jmp
push
int
sub
pop
fprem
popf
rcrl
das
cmp
popa
test
push
inc
enter
in
pop
insb
or
or
icebp
adc
mov
mov
pushf
adc
inc
or
inc
sbb
add
cmp
mov
jge
aad
xor
stc
push
push
popa
push
icebp
call
xchg
sub
iret
fimuls
das
dec
or
gs
call
inc
dec
mov
sarb
adc
xor
in
or
cmp
rorl
pop
mov
inc
loopne
clc
nop
sbb
cmpl
fldt
icebp
adc
in
add
insl
test
stos
sub
lret
dec
clc
outsl
js
or
add
mov
adc
jmp
xor
subl
xlat
push
divl
orl
sub
sub
inc
or
lods
jno
or
divl
aaa
cli
and
rorb
out
adc
in
mov
xor
mov
iret
enter
pushl
testl
mov
shll
mov
lret
dec
or
and
mov
or
das
xchg
push
add
xchg
jmp
xor
or
ja
inc
repz
push
or
jns
xor
insb
repz
mov
pushf
jge
das
jl
ficoml
das
pop
sahf
mov
outsb
dec
or
call
imul
outsl
lcall
mov
jnp
or
sub
push
inc
mov
testb
sbb
inc
scas
or
inc
testl
dec
movsl
or
jecxz
inc
sarb
or
pop
dec
and
jp
xchg
clc
push
fildll
lahf
pop
adc
les
pop
mov
mov
das
sub
and
xchg
int
xor
jmp
cmp
in
jmp
jl
jle
xchg
inc
push
in
cmp
out
mov
xchg
mov
push
and
incl
mov
xchg
scas
push
sbb
ret
and
lods
jle
call
and
jmp
adcl
mov
stc
mov
out
jmp
xor
xchg
and
popf
clc
xlat
movsb
push
add
bound
ret
mov
sub
and
push
sub
jo
jg
andb
cmpsl
out
sarb
add
call
lock
inc
xchg
loope
pop
imulb
mov
add
adc
repnz
xor
push
push
cmc
aas
pop
ja
mov
dec
mov
pushf
cmp
insl
fs
or
xlat
fwait
jo
xor
ret
pop
test
movsb
pop
mov
fcoml
call
nop
or
mov
xor
arpl
sbb
adc
repnz
fsubp
mov
sbb
push
das
dec
sti
adc
cs
sub
test
std
or
jbe
jnp
in
pushf
mov
or
mov
test
cmp
call
loopne
jo
outsb
das
add
std
and
mov
pushf
or
inc
gs
xor
leave
jge
xchg
xor
mov
pop
or
das
mov
adc
sti
repz
bound
nop
sarl
shr
std
call
sbb
sarb
shll
push
jl
or
or
pop
cli
dec
mov
icebp
shr
inc
clc
lret
faddl
push
xor
adc
dec
pop
cwtl
mov
ret
sub
pop
aad
icebp
ljmp
enter
mov
mov
js
pop
sub
dec
cmp
sub
icebp
add
aas
add
or
mov
sub
dec
js
mov
xchg
dec
mov
ljmp
push
mov
add
mov
mov
ds
add
orl
cmp
add
sub
dec
dec
addl
mov
dec
mov
dec
adc
or
mov
aaa
add
adc
xor
mov
add
xchg
and
sbb
and
in
shrb
dec
mov
mov
cmp
mov
cwtl
orl
pop
push
mov
jb
cwtl
dec
mov
adc
xor
hlt
dec
dec
sbbl
mov
dec
rolb
sub
mov
fs
inc
icebp
sub
aam
add
add
mov
inc
sub
dec
cmpw
xchg
sbb
insb
inc
or
orl
sub
or
dec
or
dec
repnz
icebp
adc
xor
xor
icebp
mov
aad
sub
aaa
push
cmpxchg
xlat
test
mov
jmp
xor
mov
std
xor
loopne
push
or
or
or
mov
or
xor
jp
gs
add
cld
loopne
rorb
dec
or
cmp
adc
or
loopne
js
loope
cs
lock
push
insb
adc
shlb
push
cmp
inc
mov
or
dec
mov
adc
icebp
popf
pop
or
inc
in
cmpsl
cmp
icebp
lock
dec
js
cmp
scas
insl
popa
arpl
adc
or
pop
mov
or
push
or
adc
adc
sbb
and
or
xchg
add
pop
xor
cmp
inc
or
sub
push
subl
sbb
cmp
sbb
inc
or
mov
jae
dec
or
and
popf
or
add
cmp
addr16
insl
inc
inc
data16
pop
insb
sbb
test
push
push
and
scas
call
mov
jno
outsl
mov
jle
or
ret
push
popa
lret
sub
and
pop
push
push
repz
push
adc
jl
les
adc
sub
addr16
adc
or
cmpsb
and
adc
mov
gs
imul
mov
fdivs
xchg
sub
lret
sub
pop
adc
les
fcmovbe
adc
sub
add
dec
je
xchg
cmp
sbb
and
ss
push
sahf
pushf
movsl
inc
add
sub
data16
lods
cmp
add
pushf
jno
push
inc
cwtl
es
xor
and
insl
stos
or
dec
push
jns
adc
push
aas
nop
mov
ljmp
inc
shrl
addr16
ljmp
xor
pop
cwtl
in
bound
outsb
push
aad
nop
inc
es
ror
ret
pushf
sub
dec
mov
pop
insb
xor
sub
xor
push
insl
orl
test
nop
push
aas
cs
jg
rcrb
cmp
adc
xor
hlt
aas
jle
movsb
gs
dec
outsl
cmp
test
lods
inc
mov
push
pop
pop
sub
inc
mov
adc
xor
inc
loopne
or
out
adc
add
call
dec
cmp
xchg
pop
or
push
adc
daa
in
dec
mov
notb
out
lret
imul
insb
in
or
imul
and
sbb
andl
jl
stos
pop
mov
sub
lret
out
and
push
fwait
push
inc
cmpb
imul
add
jl
fs
movsl
pop
pop
push
mov
inc
arpl
mov
sub
add
mov
ss
bound
jl
push
subb
sbb
mov
cmp
insb
add
jns
and
cmp
xor
fisttpl
add
adc
add
xor
add
xor
mov
flds
sbb
js
sbb
mov
add
dec
dec
adc
clc
filds
push
adc
ficoms
mov
fmull
push
adc
mov
xor
dec
cmp
inc
adc
jb
cmp
outsb
aam
pop
xchg
hlt
pop
push
xchg
xor
insl
or
test
shlb
pushfw
jns
leave
or
or
pop
repnz
xor
pusha
pop
outsl
test
lcall
les
adcl
sub
push
inc
inc
inc
lret
outsb
or
je
adc
sahf
in
test
in
xchg
popl
xor
repnz
mov
lods
inc
rolb
pop
dec
lret
inc
das
add
mov
mov
push
and
fs
bound
xor
inc
mov
jge
add
pop
daa
xor
fwait
and
sub
ds
or
sub
idiv
xor
or
push
repz
popl
repnz
dec
enter
cmp
and
rdtsc
scas
aas
and
pop
out
loopne
test
push
cmp
repz
dec
mov
shll
or
aam
cmpsl
cmp
sub
ja
xor
adc
lock
xor
lahf
pop
inc
sbb
dec
popa
jno
loope
xor
jecxz
clc
mov
lods
icebp
cwtl
or
dec
push
or
incb
or
insb
or
insl
imul
and
jnp
sub
imul
inc
mov
ror
sarb
cmpsl
loopne
jo
out
clc
sub
or
mov
mov
out
xor
adc
popf
adc
or
in
in
jo
sbb
addl
mov
xchg
aaa
jo
pusha
dec
push
or
aad
data16
inc
sbb
dec
adc
jo
ljmp
and
jo
insb
push
push
jo
jmp
or
or
mov
and
sbb
stc
call
dec
movsb
adc
or
or
push
cld
out
sbb
rolb
mov
in
dec
push
xor
adc
add
shlb
out
add
mov
xchg
push
jo
sbb
or
mov
xor
sub
jo
jb
out
in
sbb
test
movsb
test
mov
and
adc
or
pop
or
in
adc
mov
in
mov
mov
andl
push
sbb
and
sti
ror
xor
insb
add
mov
mov
insl
mov
or
cmp
add
ror
xor
outsl
or
bound
mov
or
arpl
push
bound
cmp
mov
pop
add
or
and
mov
or
pushf
or
bound
xor
adc
or
shl
shlb
in
xor
inc
sub
mov
sub
or
adc
push
mov
outsl
or
push
jo
sbb
cmp
add
add
ret
cmc
mov
push
xchg
xor
jo
jp
sub
fistpl
insb
push
insb
dec
xor
cld
fiadds
ds
push
push
icebp
mov
fstpt
jl
cltd
lock
jo
push
mov
or
lret
jno
xchg
adc
jo
ljmp
pushf
lahf
pop
inc
push
adc
push
loopne
mov
es
add
adc
inc
punpckhbw
aaa
cmpsl
adc
andnps
mov
mov
in
jb
sub
xor
aaa
pop
or
call
aam
bound
xchg
and
test
push
jb
test
push
repnz
cmp
xchg
mov
inc
jl
sbb
cmpsl
lock
jp
mov
mov
xchg
stos
cmpxchg
pop
jle
mov
xchg
mov
mov
subb
int
push
fcoml
adc
lods
iret
aaa
clc
out
adc
inc
shll
aaa
icebp
jg
mov
add
aaa
add
pop
rorl
sub
and
lret
repz
and
rorb
cmp
fidivs
dec
lds
sub
mov
leave
jae
aaa
loop
sbb
adc
mov
aaa
aas
pop
outsb
add
stc
mov
or
js
aaa
repnz
add
or
loope
repz
xor
lea
loopne
jg
movsb
adc
lahf
mov
mov
jmp
jmp
inc
add
movsl
pop
fistl
ss
mov
adc
cmp
xor
rcrb
icebp
cld
shll
rcrl
jo
push
dec
mov
fdivl
icebp
gs
sti
dec
xchg
fwait
dec
icebp
rcrb
jecxz
lock
lds
xor
lock
fnsave
dec
mov
pop
insb
jae
icebp
jo
outsl
shll
clc
push
adc
lock
outsl
or
adc
mov
add
subb
jo
orb
sub
and
shll
fbld
and
ret
add
sub
lock
jle
or
test
lods
pop
cmp
es
notl
lahf
adc
inc
imul
in
ss
stos
pop
test
repnz
add
push
add
and
icebp
test
jge
inc
jae
leave
xchg
mov
adc
rolb
shlb
lock
dec
push
pop
xchg
or
dec
mov
push
jbe
adc
adc
add
adc
mov
aam
divb
lret
sahf
mov
xor
and
rcrb
push
push
or
lock
cltd
outsl
aad
or
or
sahf
inc
in
lock
add
stos
mov
and
push
lock
movsl
jmp
aaa
shl
popf
xchg
or
icebp
lock
push
adc
sbb
and
pusha
jl
cmp
push
xlat
rolb
and
cmc
adc
xchg
imul
jbe
std
jo
out
inc
add
add
xor
add
test
fisttpl
or
js
test
and
push
inc
push
mov
push
lods
inc
add
insb
pop
dec
lock
cs
mov
wbinvd
sub
aad
push
xor
mov
jbe
add
lret
dec
jl
push
jo
xor
nopl
adc
mov
jno
or
lock
mov
icebp
popa
fdiv
xor
adc
es
lods
sub
jo
ss
adc
adc
lahf
pop
inc
sarb
mov
cwtl
inc
sar
add
mov
adc
cmpsb
push
sbb
mov
dec
and
lods
mov
lcall
fbld
repnz
xlat
pop
cmp
lock
sbb
xor
movlps
test
adc
and
adc
adc
dec
xor
mov
dec
xchg
call
cld
cmp
scas
xor
add
sub
out
cltd
lret
fidivrs
mov
repnz
fstpl
xor
rolb
xor
dec
pusha
test
xor
ret
xor
mov
pop
aaa
xchg
jg
and
mov
cmp
lock
xchg
fdivl
ret
cmp
jno
adc
adc
and
lcall
add
adc
or
sub
push
sbb
xchg
lock
mov
or
xor
ja
mov
mov
adc
adcb
lock
or
ret
repnz
xor
lock
inc
repz
mov
repz
fs
shl
mov
fisttps
shlb
imul
add
inc
adc
cmp
sti
stos
mov
pushf
aam
movsb
pop
sub
mov
xchg
xlat
js
and
iret
xor
loope
adc
add
bound
xor
lock
jbe
push
mov
inc
or
adc
xor
jbe
mov
hlt
or
jecxz
lock
inc
movsb
lock
mov
jo
call
mov
enter
std
xor
push
hlt
lret
mov
mov
mov
adc
jae
nop
cs
pop
push
dec
mov
pop
in
aaa
lret
into
push
jo
lahf
cmpsb
mov
jne
mov
repz
push
adc
icebp
xor
movsl
test
loop
insb
mov
adc
or
push
shl
mov
or
adc
ficomps
jo
xor
clc
xchg
push
lock
mov
mov
pop
sub
imul
push
int
mov
adc
adc
jb
lock
int3
mov
xchg
pusha
add
sub
mov
add
jb
stos
xor
stc
mov
adc
dec
fmull
add
repnz
adc
rorl
lock
pop
test
push
mov
or
push
mov
sahf
mov
icebp
push
and
jae
pop
push
or
mov
xor
sbbb
mov
shlb
mov
lahf
mov
repz
cli
mov
mov
ljmp
imul
mov
fistps
aas
xchg
nop
xor
lock
pushl
scas
xor
mov
push
repz
xor
aam
into
dec
mov
add
xor
cmp
xchg
lock
sub
mov
sbb
icebp
xor
jge
mov
add
aam
or
out
cmpsl
jmp
adc
mov
mov
jle
xor
cmp
push
mov
sub
je
outsb
adc
xor
cmc
js
cwtl
inc
repz
cmpsl
loop
aas
cmp
xor
lock
mov
gs
orl
xor
lock
dec
jb
mov
inc
xlat
or
sbb
out
jo
mov
loop
mov
inc
jp
lock
lahf
mov
mov
push
dec
adc
add
mov
roll
mov
lock
pop
and
mov
in
pop
or
dec
sub
gs
or
jo
lds
mov
ficoml
mov
imull
imulb
cmc
outsl
mov
outsl
sti
and
cli
cmp
adc
xchg
adc
cmp
cmp
adc
xchg
adc
xchg
adc
sub
call
xchg
adc
adc
sarb
xlat
adc
xchg
adc
sbb
fdivrs
fists
xchg
adc
add
sarl
adc
xchg
adc
add
leave
cmp
adc
xchg
adc
or
bound
lock
pop
xor
js
mov
rcll
dec
push
adc
xor
adc
bound
cmp
xchg
pusha
xchg
mov
add
xor
add
mov
push
jo
xor
test
adc
mov
mov
xor
shlb
xor
push
adc
xor
adc
bound
cmp
xchg
pusha
xchg
mov
add
xor
add
mov
push
jo
xor
test
adc
mov
adc
xor
add
jmp
je
inc
adc
minps
decb
pop
add
adc
icebp
sub
cmp
adc
inc
push
or
mov
xchg
mov
int3
aas
cmp
pop
mov
dec
push
xlat
xchg
lock
dec
aaa
mov
sub
inc
imul
sub
mov
push
xor
and
leave
cwtl
inc
ja
invd
movsl
and
jp
jno
insb
bnd
in
mov
push
test
pusha
lock
aaa
in
push
or
pusha
push
mov
mov
cli
idiv
dec
cs
outsb
cmp
xlat
push
lret
inc
test
or
shlb
push
xor
clc
jmp
push
aaa
adc
or
dec
xor
cli
xchg
push
and
mov
push
aaa
insl
and
and
loopne
mov
loopne
jb
repnz
pop
cwtl
xchg
mov
outsb
aaa
xor
and
add
xchg
lock
pop
mov
and
insl
inc
adc
lock
adc
bound
xchg
sbb
imul
jo
aas
cmp
xor
lock
mov
stc
les
jns
inc
icebp
gs
mov
xor
mov
fwait
lock
add
adc
clc
pushaw
aaa
jp
or
gs
inc
xor
sub
aaa
add
and
inc
testb
push
shl
sbbl
xchg
lcall
outsb
inc
aad
inc
arpl
mov
xlat
xchg
shl
pop
jl
and
loopne
jb
cmp
mov
adc
insl
sarl
inc
enter
push
or
addr16
call
adc
jle
out
pop
call
xor
and
adc
mov
or
dec
sbb
stos
jg
repnz
rdpmc
jo
mov
xor
js
and
or
fildl
mov
int
mov
sbb
fcoms
adc
sub
adc
dec
or
sahf
mov
insb
and
sbb
mov
mov
mov
dec
jnp
bnd
ljmp
mov
adc
and
mov
adc
and
xor
jg
rclb
adcb
mov
aaa
je
int3
cmpsl
sti
inc
xor
sub
and
jmp
mov
outsb
adc
lock
mov
ja
xchg
pop
or
push
jae
xor
addb
jne
push
jl
push
les
push
and
or
pop
sub
mov
aaa
js
repnz
mov
adc
adc
jo
insl
or
out
outsb
xor
je
call
arpl
mov
cmp
jb
shl
add
cli
sub
jecxz
push
xchg
adc
lahf
xlat
dec
or
add
testl
popl
add
pop
jae
mov
lahf
fdivl
add
xor
cmp
out
adc
stc
pop
pushf
cld
incl
sbb
repnz
clc
fstpl
shll
sbb
mov
cmp
cmp
pop
xchg
jmp
or
inc
aas
xor
mov
test
nop
adc
cmp
fmull
aam
in
mov
push
add
fsubr
lock
loop
dec
adc
mov
repz
stos
and
imul
repnz
nop
jo
les
dec
xor
and
les
mov
mov
xchg
aas
adc
repnz
fs
sbb
rolb
mov
icebp
xchg
faddl
test
cltd
adc
xchg
sub
fdivl
xor
repz
dec
dec
adc
jl
inc
das
lods
popa
roll
xor
pop
rorl
je
jmp
xor
push
sub
stos
fwait
jle
adc
dec
inc
fs
jno
test
dec
jb
outsb
mov
lock
jbe
iret
add
lea
cmp
cmpb
or
sub
mov
jle
push
shl
and
jl
lods
xor
repnz
mov
mov
cwtl
icebp
jo
enter
or
xor
mov
mov
jo
adc
cld
les
adc
addr16
ret
aad
or
lock
push
pusha
mov
or
pop
sti
push
add
je
pop
adcl
adc
inc
or
adc
inc
imull
loopne
lock
mov
add
add
add
push
sbb
dec
mov
adc
insl
xor
mov
xor
rcrb
gs
stc
mov
add
and
cwtl
cmpsb
add
mov
mov
jmp
mov
push
sbb
cmp
add
lock
push
imul
inc
mov
out
test
mov
mov
ja
add
lods
loopne
mov
mov
adc
inc
push
cmp
pop
xchg
movsb
jp
dec
sub
shrb
push
jecxz
xor
dec
xor
ror
lock
aas
jae
and
mov
idiv
pop
jno
adc
and
cs
es
jnp
pop
outsb
mov
notb
fcmovb
push
sbb
rclb
inc
lods
mov
ret
test
rep
mov
push
push
mov
jb
add
cmp
adc
mov
test
sbb
dec
lock
cltd
repnz
or
and
dec
adc
into
jnp
push
mov
sarl
xor
push
repnz
or
pop
push
mov
repnz
int
bound
mov
push
mov
lds
into
lods
inc
push
xor
rol
mov
shr
jo
mov
pop
lock
mov
cld
mov
inc
icebp
mov
mov
in
pop
les
and
mov
aad
mov
xor
adc
pop
jo
or
or
inc
xchg
pop
xor
neg
cmp
lea
jl
aas
insl
add
adc
inc
or
nop
xchg
daa
jo
adc
repnz
mov
jo
xorb
and
icebp
pop
popa
or
jno
inc
push
xchg
push
or
cmp
inc
mov
or
inc
mov
xchg
dec
mov
insb
dec
shl
aas
mov
or
cmp
jecxz
xor
pop
enter
aaa
jp
mov
aas
xor
push
adc
pusha
cmp
sub
push
daa
fdivp
add
ret
cmp
or
lock
mov
mov
adc
icebp
xor
sub
xchg
loop
adc
jo
mov
fnstenv
loopne
ljmp
adc
mov
js
dec
in
xlat
inc
shlb
adc
sbb
dec
jmp
das
cs
das
or
shl
sbb
sub
in
adc
xor
decl
xor
xor
and
adc
aaa
xchg
xor
cmp
and
test
xchg
adc
andl
mov
adc
xchg
add
xchg
add
enter
push
mov
sbb
dec
adc
adc
jo
and
cmp
adc
test
mov
or
push
in
sbb
add
add
jo
add
pop
adc
or
or
xchg
pusha
dec
or
repnz
int3
negl
mov
dec
or
dec
hlt
add
insb
int3
push
or
sbb
jecxz
xor
mov
sbb
in
add
mov
insl
mov
add
and
in
test
mov
adc
xlat
and
cmp
adc
xchg
add
fmuls
ret
sbb
ret
rcll
add
xor
adc
xchg
adc
or
or
in
mov
mov
mov
test
xor
or
mov
mov
xor
sbb
stos
adc
scas
push
mov
adc
xchg
adc
adcl
cmp
mov
sbbl
xchg
data16
xchg
xor
add
mov
xor
insb
xchg
jg
in
xchg
push
mov
sbb
cmp
cwtl
cmp
bound
loope
popf
xchg
adc
addl
in
xchg
in
test
cmp
dec
mov
jo
xchg
adc
and
xor
add
mov
jo
and
xor
jg
ja
mov
xchg
adc
je
mov
jnp
jo
jp
mov
xchg
adc
jg
mov
test
add
mov
xor
jo
test
mov
cmp
xor
mov
outsl
or
xor
jo
test
mov
cmp
xor
jo
outsl
or
xor
jo
test
mov
cmp
xor
jo
push
mov
sbb
adc
xor
jo
push
mov
sbb
adc
cmp
xor
pop
push
mov
sbb
adc
or
jo
push
mov
sbb
adc
or
xor
mov
sbb
adc
or
xor
dec
sbb
mov
mov
dec
and
shll
pop
jmp
jne
pop
movbe
cmp
lock
mov
dec
add
ss
mov
sub
lock
cltd
iret
push
dec
inc
sub
adc
cmp
xchg
lds
imul
outsl
or
das
inc
xor
in
lock
sub
sar
mov
fmuls
cmc
mov
push
js
add
sarb
or
xchg
test
mov
ss
inc
jns
mov
loopne
or
ss
mov
push
xor
ss
mov
xchg
lods
cmp
adc
ss
or
mov
xor
clc
xor
cld
mov
mov
xor
push
or
or
xlat
pushf
adc
mov
ss
or
jl
jmp
add
repnz
sarl
fadds
les
sar
icebp
xor
test
add
ss
xchg
sub
pusha
lock
mov
rorb
or
es
xor
sbb
divb
nop
push
addl
mov
mov
ss
adc
and
sbb
add
lock
stos
les
mov
pop
xor
lock
aaa
mov
or
fiadds
gs
adc
lock
aaa
test
inc
sub
pop
pop
mov
repnz
imul
jo
lock
dec
bnd
aas
stc
sahf
and
in
add
xor
popa
cmpsb
fs
adc
or
add
es
xor
add
insb
sbb
or
inc
adc
sbb
or
or
and
adc
aaa
icebp
cmp
cltd
or
sahf
and
mov
rorl
sti
in
xor
sbb
aaa
repnz
dec
outsl
push
nop
nop
pusha
into
sbb
or
xchg
push
les
bound
repnz
arpl
jmp
add
pop
push
mov
sbbb
pop
adc
jo
adc
aaa
mov
dec
xchg
fisttpll
adc
add
jnp
or
mov
inc
sub
mov
hlt
loop
leave
adc
dec
lock
nop
add
sbb
lock
xor
aaa
jmp
pop
add
lock
aaa
das
inc
loopne
or
std
xor
sub
cmp
mov
push
xor
addb
pop
repz
add
pop
push
adcb
outsl
xor
add
sbb
push
jo
pop
test
sbb
jne
addb
mov
add
sbb
adc
and
jo
adc
add
icebp
add
mov
push
adc
or
or
cmp
mov
ds
lock
adc
aaa
fcompl
lret
jmp
jo
popa
cwtl
pop
sub
repz
adc
jb
mov
adc
sbb
pop
je
aas
pop
or
daa
adc
mov
dec
dec
adc
mov
and
das
and
sbb
push
xchg
sub
push
scas
sub
jp
mov
sub
aaa
mov
cwtl
mov
add
jg
pop
sub
in
nop
add
and
mov
repnz
pop
add
inc
add
lock
aaa
sub
push
mov
rolb
mov
mov
pusha
lock
sub
pop
je
mov
dec
and
and
mov
pop
stc
clc
adc
and
nop
jo
sbb
add
cmp
adc
inc
orl
int
shlb
push
repnz
insl
scas
mov
sbb
jb
sub
cmp
jno
fnstcw
cmp
icebp
dec
push
cmc
mov
or
icebp
xor
sbb
les
push
loopne
xor
shll
jle
push
mov
ss
xchg
add
mov
jmp
pop
or
xor
adc
jnp
cmpsl
sub
fldl
adc
js
add
dec
adc
jp
cmp
add
jb
dec
jo
nop
imul
sbb
lock
addr16
test
inc
repz
sub
adc
xor
xchg
fcmovb
push
adc
loopne
jo
rcrb
movb
aaa
or
das
sbb
leave
adc
nop
icebp
adc
lret
inc
rclb
mov
popa
jg
dec
add
insb
push
adc
sub
mov
mov
adc
cmp
push
and
lock
jmp
ret
inc
dec
add
leave
into
xchg
adcl
loopne
cmp
and
push
fcmovb
jb
or
add
and
jo
mov
lea
and
lock
sbb
pop
out
mov
aaa
mov
jo
add
add
inc
lock
add
out
push
dec
mov
es
cld
jge
dec
cmp
adc
xor
push
aad
cmp
fdiv
and
scas
push
add
or
aaa
push
call
jns
add
xor
push
xchg
cmp
adc
icebp
pop
js
jns
dec
xor
jo
xor
add
xchg
mov
sarb
test
jge
or
adc
cmp
nop
mov
and
add
jo
ss
repnz
ds
xor
adc
nop
or
test
pusha
test
dec
icebp
adc
push
mov
xor
repnz
jne
or
dec
add
xor
aas
pop
push
lock
fdivs
repz
es
rclb
dec
jo
aaa
push
push
movsl
xchg
lret
push
xor
test
dec
or
out
pop
dec
nop
sbb
dec
push
adc
pop
mov
int3
orb
dec
xor
ljmp
jb
dec
mov
lea
jb,pt
dec
call
mov
xor
cmp
jo
inc
sbb
inc
jg
dec
mov
xchg
inc
rclb
mov
sub
cmp
inc
js
jae
mov
add
mov
repnz
cmp
inc
shl
mov
pop
add
insb
xor
aaa
jbe
or
je
add
pop
and
pop
int3
mov
loopne
test
pop
icebp
adc
inc
mov
mov
mov
xor
pop
inc
inc
pop
push
mov
enter
cmp
pop
call
loop
adc
jo
ret
mov
out
and
lods
lret
mov
ret
push
mov
aam
lea
mov
sarb
add
add
faddl
inc
lods
adc
push
lock
ss
sbb
je
frstor
icebp
mov
insb
inc
or
fdivp
sbb
add
fistps
cmp
faddp
lock
mov
and
repnz
sbb
inc
test
xor
nop
out
sub
cmp
add
fnstenv
icebp
add
push
mov
stos
inc
adc
pop
jo
outsl
or
jo
sbb
inc
repnz
jo
cmp
xor
or
xchg
pop
int3
jge
lret
add
aam
lock
sti
clc
mov
rcl
lock
xchg
adc
js
testl
or
mov
add
jno
out
adc
aaa
or
cmpsl
push
wrmsr
loop
xchg
fmuls
add
jb
push
xor
xlat
loope
adc
sbb
flds
pop
lock
dec
adc
mov
ljmp
xor
push
xor
push
xor
dec
adc
test
pop
inc
sub
push
mov
sbb
cmp
mov
jl
daa
icebp
shll
cli
xchg
roll
mov
loopne
adc
notl
movsl
dec
lock
xlat
add
or
jno
add
cmpsl
jo
mov
data16
or
pop
add
jl
pusha
sub
inc
adc
add
loop
add
mov
xlat
imul
add
out
cmp
xor
out
adc
xor
sbb
pop
adc
xchg
popf
scas
fidivrs
sbb
cmp
mov
lds
ljmp
adc
aaa
ucomiss
cli
mov
jmp
dec
hlt
sub
and
mov
cmp
lock
in
scas
dec
mov
test
push
adc
lds
mov
xor
and
sub
scas
icebp
sub
es
dec
sti
mov
test
aaa
jno
hlt
and
lret
inc
f2xm1
xlat
add
cmp
sub
stc
adc
sub
xchg
adc
mov
mov
mov
lock
adc
or
cmp
icebp
push
aam
add
mov
fdivl
or
aam
lock
xchg
or
aad
xor
dec
mov
or
xor
sbb
fmuls
push
movups
pop
dec
add
ret
add
icebp
pushf
and
adc
mov
rclb
pop
and
add
shl
or
mov
mov
xor
mov
adc
and
xchg
push
push
pop
push
xlat
or
nop
out
xchg
in
xor
add
out
ja
lea
js
shl
xor
movsb
into
sbb
cmp
js
rclb
jno
cmp
ja
inc
xchg
iret
or
sbb
cli
call
cwtl
sbb
pop
mov
icebp
mov
cwtl
mov
ljmp
std
sub
mov
testl
inc
push
shr
xchg
adc
popa
roll
xlat
dec
xor
icebp
cmp
addl
cwtl
dec
mov
xchg
xor
in
ja
push
dec
or
aad
shrl
push
out
jo
rorb
popf
push
ss
out
lock
loop
dec
movsl
jle
xor
scas
out
repz
jmp
and
loopne
adc
push
push
mov
shl
repnz
cmpsb
sub
in
fimull
je
push
adc
push
or
or
add
div
icebp
mov
das
bound
sbb
mov
pop
pushf
mov
jecxz
jo
add
cli
repnz
inc
adc
push
rcll
push
imul
cmp
push
fdivrs
cld
aaa
adc
sub
push
dec
stc
pushf
pusha
push
ljmp
in
push
sbb
adc
divb
and
adc
mov
nop
pop
xor
cmc
mov
aad
pop
dec
sar
xor
hlt
mov
inc
mov
or
addb
adc
mov
lock
mov
push
pop
dec
dec
test
loopne
mov
cltd
xchg
into
enter
lock
idiv
mov
or
call
aaa
mov
sbb
popf
mov
sub
ja
mov
rorb
push
in
mov
mov
jns
or
movsb
cld
lock
mov
or
adc
push
jmp
sub
sarb
std
mov
mov
in
mov
inc
lock
idiv
mov
mov
shll
aaa
jo
mov
adc
add
jecxz
scas
or
jmp
mov
mov
add
mov
adc
stc
testl
mov
push
pop
adc
xor
mov
cmp
ja
mov
in
jmp
and
pusha
std
ja
mov
inc
aam
pop
sub
xor
out
fdivl
scas
shl
push
in
jb
fwait
in
adc
lock
gs
add
pop
and
lock
imul
mov
xchg
mov
jo
stc
ja
mov
cli
in
or
cli
idiv
mov
bnd
and
adc
lock
mov
xchg
popa
int3
rclb
pop
icebp
enter
mov
test
push
xor
and
and
div
shlb
and
scas
shl
enter
mov
lods
pop
or
xchg
cmp
nop
icebp
xlat
mov
push
lods
xor
pusha
jo
mov
faddl
dec
add
jo
fnstenv
mov
invd
xor
cmpsb
cmp
xchg
mov
or
mov
ret
mov
cli
or
jo
test
xor
out
js
das
add
lret
lock
jae
popa
pop
inc
cmp
mov
insb
xor
adc
dec
mov
add
fdivs
adc
mov
add
insb
jo
scas
jo
push
xchg
mov
jo
mov
ja
aaa
out
insb
sahf
scas
lock
ss
mov
inc
mov
dec
xor
fsubp
sub
push
icebp
cmp
push
jo
mov
push
cmp
sub
push
or
jae
lock
mov
ja
call
leave
jg
repz
xorb
jo
mov
arpl
aad
imul
xchg
mov
mov
fwait
push
jge
and
inc
dec
mov
jecxz
lret
xchg
adc
dec
lock
mov
aam
es
cwtl
mov
dec
bound
and
shl
push
aam
xorb
ret
add
in
lock
jnp
das
pop
cmp
aaa
xor
mov
cmpsl
outsb
sti
pop
mov
inc
int3
in
imul
inc
pop
add
icebp
add
ss
cmp
dec
jo
int
mov
and
mov
push
iret
lods
lock
rorb
setbe
inc
shll
xchg
or
stos
out
push
jb
jnp
inc
jne
mov
fistpll
mov
test
pop
lahf
rcll
add
jmp
xor
jnp
adc
add
es
mov
mov
lock
xchg
shlb
icebp
xchg
jno
fxtract
adc
lock
xlat
jo
test
push
mov
push
lock
mov
sub
iret
adc
sahf
aam
orl
pushf
mov
xor
push
jge
data16
adc
iret
mov
xor
scas
mov
lods
cld
mov
mov
dec
imul
je
cltd
and
push
jno
std
rcll
xlat
mov
jne
jae
cmp
call
xchg
xchg
minps
movsl
cmpsl
call
fcmovb
ja
lock
sbb
or
xor
ret
in
pop
sub
repnz
lock
daa
ss
jae
fisttpll
lock
sbb
sub
jecxz
js
sbb
push
jo
fadds
pusha
adc
je
sbb
out
xchg
jo
negl
insb
xchg
fcoms
lods
pop
mov
das
adcl
int
movaps
push
out
mov
scas
popa
repz
xor
outsb
fmuls
adc
popf
xchg
mov
cmp
scas
adc
std
repz
fidivrs
in
jge
loopne
add
sub
mov
cmp
inc
scas
xor
mov
or
rclb
or
stc
pop
jo
rcrb
adc
push
cld
aaa
js
lock
jecxz
mov
test
inc
fscale
and
cwtl
or
push
rcl
iret
jo
and
or
jo
out
jp
dec
xor
mov
in
xor
jle
insb
rorl
xor
rorb
mov
push
cmpb
ret
jnp
jns
mov
pop
mov
jecxz
inc
lret
lods
das
cli
ds
fidivl
in
lahf
xor
add
mov
push
mov
in
subb
stc
adc
pop
pop
ret
mov
xchg
ficompl
pop
std
inc
lock
repz
xchg
pop
sub
adc
jo
pop
push
adcb
inc
adc
lcall
mov
fisubrl
mov
xor
icebp
shl
iret
lahf
faddl
test
pop
rcrl
add
aad
stos
xor
dec
or
mov
cs
jo
imul
dec
adc
adc
jo
stc
scas
push
orb
aam
mov
dec
ss
pop
mov
rolb
jbe
adc
jae
adc
mov
and
jo
sub
insb
lock
adc
vpshaq
mov
test
lock
ss
dec
cmpsb
cmp
lds
ja
outsb
xchg
nop
sub
out
push
add
or
mov
add
imull
mov
bound
xlat
jo
mov
push
mov
pushf
inc
stc
jne
aam
jo
mov
lock
in
jge
pushl
cltd
je
add
adc
lods
dec
jbe
jo
fisttpll
insl
fldcw
xor
jmp
adc
and
leave
repz
inc
imul
or
push
icebp
jmp
sbb
adc
daa
cltd
or
jg
mov
in
lock
roll
xor
inc
jecxz,pt
jo
jns
sbb
xor
sbb
ss
das
or
aaa
sub
je
mov
or
sub
fcoml
movsl
iret
adc
dec
lock
lds
xchg
sub
dec
fldcw
adc
into
xchg
mov
outsb
mov
iret
out
lock
pushf
lock
sub
in
push
movsb
adc
dec
mov
loope
jo
test
and
iret
adc
frstor
ds
popf
cltd
cmpsb
push
loope
fs
rcll
xor
testl
pop
and
shr
int
cmp
jbe
jno
iret
push
outsl
lock
enter
mov
cmp
lods
sahf
je
dec
jle
inc
inc
xchg
jb
jne
aaa
lea
cwtl
pop
sbb
invd
lret
nop
lock
movb
and
jb
int3
adc
dec
je
xor
jl
sbb
adc
inc
out
js
sub
xor
in
push
add
outsb
add
push
fnstsw
sub
pop
shl
and
int
stos
ds
push
int
mov
repz
pop
adc
xor
mov
mov
jns
into
push
or
lret
jae
mov
call
adc
repz
leave
mov
lock
ret
sbb
fs
lret
mov
loopne
cltd
xchg
call
push
clc
lds
mov
sti
icebp
aaa
sub
jo
std
and
call
xchg
and
pandn
mov
push
jo
mov
pop
adc
lock
mov
ss
push
or
jle
lock
shl
dec
push
xchg
and
rol
mov
sbb
in
jp
shlb
pop
mov
push
adc
imul
inc
lea
sbb
cmp
inc
mov
jno
nop
shl
and
jae
sarb
dec
mov
dec
rcrl
outsl
scas
adc
dec
testl
add
pushf
xchg
dec
or
movsb
mov
imul
or
ror
jo
cli
mov
pop
and
xlat
adc
jb
inc
cmp
lock
mov
dec
and
xchg
jp
xor
aam
loop
add
adc
xchg
popa
jnp
adc
loopne
sti
sbb
sbb
push
aas
or
repnz
lock
jae
push
shll
adc
xlat
rorl
push
and
repz
test
imul
mov
mov
mov
loopne
pop
inc
fiaddl
and
dec
sbb
lods
lock
sub
mulb
jno
mov
mov
es
jo
xchg
test
jae
repnz
iret
sti
inc
jp
roll
fnsave
subb
sub
in
sbb
movsl
or
mov
das
pop
push
out
cli
mov
mov
iret
xchg
lock
mov
div
aaa
xor
xor
xor
pop
jle
xchg
adc
ret
push
rcrb
xchg
movsl
cmc
jnp
or
mov
xchg
jno
push
scas
adc
subl
xor
popa
xchg
adc
insl
sahf
jl
push
xor
push
cmp
mov
scas
ds
add
xchg
popf
ja
jno
outsl
mov
cld
fcomps
aaa
mov
or
or
sbbb
mov
mov
int
pop
divl
cmp
mov
es
lea
clc
push
and
mov
loopne
insl
out
fsubrs
decl
int
ds
sahf
xchg
out
nop
mov
scas
fistpll
add
sub
push
xor
sbb
popf
cmc
mov
rep
js
push
cmp
sbb
loope
xor
in
or
je
mov
dec
mov
cmp
push
fiaddl
leave
lods
add
or
add
hlt
mov
and
dec
xor
mov
int3
clc
cwtl
mov
loopne
orl
bound
scas
xor
add
out
push
rorl
bound
addr16
adc
arpl
pusha
mov
xor
and
int3
icebp
and
repz
mov
dec
insl
movsl
cld
mov
imul
push
xor
pop
arpl
push
push
pop
dec
data16
addr16
sbb
arpl
xor
imul
jge
sbb
add
dec
pusha
push
inc
lods
push
outsl
jecxz
fstpt
insb
pop
daa
inc
stc
xchg
daa
jecxz
out
dec
or
cmpsl
add
mov
and
inc
pushf
adc
xor
repnz
in
add
or
jle
popf
js
lahf
inc
fsubl
add
scas
sbb
packuswb
je
lahf
inc
cwtl
adc
sbb
pop
mov
push
cs
test
pop
add
pop
push
sub
cmp
sbb
xor
cmpsl
add
xchg
xor
lods
push
fstps
mov
xor
adc
dec
lret
add
mov
adc
je
js
push
js
jl
push
jge
cmp
dec
add
hlt
lcall
pop
cmp
pushf
inc
jge
call
cmp
fdivrs
add
stc
pusha
shrl
addl
push
sub
cmp
ret
arpl
adc
adc
rorb
fcomi
push
sti
daa
arpl
incl
inc
dec
pushl
orl
adc
xchg
mov
jle
add
inc
xchg
jbe
or
sbb
sub
js
pop
fs
mov
insw
xor
pusha
bound
fs
js
adc
push
dec
insl
push
pop
jge
add
movsw
or
or
add
xor
sbb
dec
dec
add
xor
cmp
dec
xor
jge
insb
push
push
pop
push
xor
insl
call
jge
or
arpl
add
inc
or
or
sub
sub
adc
cltd
repz
mov
jno
pop
sbb
repz
jb
sbb
int
xor
js
and
aam
lods
push
sarb
jns
insb
pop
dec
bts
adc
and
jno
push
in
js
sarb
push
stos
push
js
pop
outsb
out
adc
je
pop
in
push
sbb
insb
or
inc
and
bound
mov
push
add
push
push
push
adc
or
mov
popa
bound
insb
push
push
sub
pop
xchg
mov
or
or
add
add
add
sbb
sbb
sbb
adc
adc
adc
sub
sub
sub
and
and
and
cmp
cmp
cmp
xor
xor
xor
dec
lock
dec
dec
dec
dec
dec
dec
inc
lock
inc
inc
inc
inc
inc
inc
pop
lock
pop
pop
pop
pop
pop
pop
push
or
push
push
sbbl
lock
outsl
push
es
fwait
sbbb
jge
jg
jns
jnp
adc
jbe
sub
mov
icebp
pop
push
pop
adc
enter
sub
dec
or
xor
repnz
xor
mov
pop
repnz
push
xor
insl
bnd
push
repnz
icebp
loop
repnz
repnz
push
lods
repnz
repnz
repnz
sbb
cmp
loop
inc
icebp
icebp
mov
and
repnz
jo
out
sti
insb
pop
lock
jb
mov
mov
xchg
addb
lahf
lock
cltd
lcall
nop
xchg
xchg
xchg
lods
lods
scas
scas
lock
stos
stos
movsb
movsl
cmpsb
cmpsl
lock
mov
mov
mov
lock
mov
int3
int
iret
lock
lock
ret
lock
fcmovu
aam
xlat
lock
rcl
in
in
out
out
lock
in
out
loopne
loop
cld
std
push
clc
stc
cli
sti
hlt
cmc
div
sahf
sbb
mov
dec
lock
inc
mov
testb
and
adc
inc
xor
push
dec
add
sbb
xor
pusha
adc
insl
jl
lret
aad
lods
xadd
shll
adc
push
dec
imul
jns
not
xlat
in
pusha
ds
xor
ss
and
jns
sbb
sbb
pushl
pop
jns
insl
fs
push
rorw
out
push
insb
pop
outsl
adc
gs
sub
lods
adc
cltd
adc
jns
data16
sub
pop
imul
sub
ljmp
pop
inc
mov
gs
adcl
js
and
cmpsb
cs
or
mov
jp
cmpsb
push
jnp
jnp
scas
addl
sbbl
pop
mov
push
aad
mov
dec
xlat
adc
pop
push
pop
jb
arpl
lea
adcb
and
push
cwtl
aas
jae
xor
std
int
aad
xchg
adc
mov
jg
lods
aam
jle
push
aad
cmp
sub
adc
pop
inc
dec
je
push
dec
or
imul
mov
fmulp
lret
push
sbb
pusha
push
scas
fadd
inc
push
aaa
fidivl
popf
aas
dec
daa
xor
push
shll
adc
jp
loopne
mov
lods
mov
push
cltd
arpl
dec
das
cwtl
pop
insl
outsb
push
out
loop
sub
jo
xor
sbb
sbb
movsl
pop
sbb
rorb
dec
into
and
sbb
cmpsb
add
push
add
je
mov
cmp
ss
or
and
cmp
cmp
add
or
sub
jno
mov
cmp
dec
and
sub
sub
adc
or
sbb
movsl
adc
adc
inc
mov
add
or
push
pop
dec
les
push
int
ljmp
sbb
sbb
push
sbb
cmp
mov
or
sti
dec
cmp
outsb
jl
cs
imul
mov
lret
mov
mov
and
or
dec
mov
mov
mov
pop
push
mov
push
push
or
adc
push
add
pop
dec
inc
addl
cmp
and
dec
sub
adc
mov
add
dec
or
and
clc
add
sub
dec
in
call
aam
fadds
fsubrl
dec
les
mov
mov
dec
je
pusha
adc
adc
hlt
sub
orl
je
pop
cmpl
sub
dec
mov
dec
lods
adcl
adc
sub
dec
nop
orl
jno
xor
mov
mov
orl
or
mov
sub
loope
mov
add
adc
stc
in
fisubrs
dec
cmp
dec
pop
xor
lods
inc
xchg
icebp
enter
sbb
and
xor
sub
xchg
jl
xor
xchg
negb
add
jmp
mov
gs
or
js
les
mov
inc
clc
xor
lcall
or
pusha
mov
jo
xchg
sti
pop
xor
dec
shrd
pop
sbb
sub
dec
add
fsubrl
push
imul
pusha
into
sub
jl
movsl
adc
xor
shlb
inc
mov
adc
pop
xchg
vcvtpd2psy
mov
push
jbe
rsqrtps
shlb
fildll
arpl
jbe
cld
dec
hlt
sub
adc
das
pushf
cmpsl
jo
xchg
cwtl
sarl
in
lahf
inc
call
push
cld
adc
mov
sarb
sbb
shll
cmp
sbb
push
cmp
rorb
loopne
mov
dec
xor
sub
adc
mov
cld
xor
in
cmpsl
mov
nop
repnz
insl
push
outsl
imul
scas
call
icebp
rorl
sbb
pop
iret
dec
cltd
cmpsb
xchg
or
rolb
push
mov
icebp
mov
push
adc
bnd
popa
push
data16
sbb
int3
addr16
push
insl
push
push
repnz
bound
std
ds
adc
aam
inc
cmc
cmc
imul
pop
inc
dec
inc
and
es
insb
dec
or
arpl
gs
mov
fs
jne
sub
negl
pushl
and
pop
jnp
es
addr16
cmpsl
insb
fdivs
push
pop
mov
sbb
fs
mov
pop
aam
add
ds
inc
test
or
mov
leave
sbb
sbb
jp
adc
and
xchg
adc
dec
addr16
pop
jb
or
pop
lea
movups
mov
outsb
xor
pop
enter
imul
imul
mov
pop
out
adc
dec
js
hlt
pop
mov
hlt
lods
cs
call
or
lcall
call
outsl
jp
bound
inc
sbb
lcall
cmp
or
xor
or
inc
addr16
nop
pop
dec
in
stos
inc
int3
mov
scas
repz
repz
jge
pusha
jns
addr16
out
sub
or
dec
dec
inc
sub
push
cwtl
sbb
imul
sub
out
adc
inc
hlt
sub
inc
mov
cmpsb
sbb
rorb
or
push
mov
push
add
and
dec
and
repz
add
pop
mov
cwtl
mov
pop
je
scas
add
dec
mov
shl
dec
and
dec
repnz
cmp
test
inc
add
pushf
jo
shll
sub
cs
inc
repnz
outsl
shrb
lds
dec
std
jo
xor
sub
insb
jl
xor
inc
enter
lods
jl
imul
push
lret
pop
lahf
leave
jno,pn
mov
jbe
jb
dec
inc
or
lock
lea
mov
lods
rolb
xchg
pusha
dec
sub
arpl
jge
outsb
sub
adc
inc
mov
mov
inc
pop
xchg
lock
inc
pusha
mov
jns
sbb
add
test
fwait
adc
icebp
mov
daa
bound
dec
add
and
jae
lea
sub
jl
push
add
js
pop
cmpsb
ja
inc
sbbl
dec
xor
add
test
pop
xchg
or
rcrb
mov
push
in
dec
jge
sub
fimull
or
inc
dec
sub
sbb
fs
icebp
nop
test
inc
pop
shrl
add
add
mov
push
jae
jge
test
pop
push
jno
jg
lea
insb
xor
jl
lea
andb
pusha
xchg
inc
icebp
add
jp
jge
pop
out
add
sbb
rol
mov
or
sahf
insb
jae
call
inc
add
into
sarl
mov
pop
pop
or
icebp
cmpsl
push
out
dec
bound
jb
pushw
lcall
add
xor
cmpb
pop
or
push
cmp
dec
daa
mov
sbb
sbb
inc
add
mov
or
insl
push
adc
mov
pop
jp
fisttps
or
xchg
sbb
mov
pop
andb
mov
jle
inc
xor
sbb
ret
inc
into
das
bound
shlb
int3
sub
call
mov
test
or
push
cmp
je
popf
push
cltd
stc
pushf
in
xor
insb
pop
imul
gs
fiaddl
cmpsb
pop
jp
mov
jp
push
lods
lods
inc
jmp
or
shrb
push
sub
inc
test
insb
icebp
dec
lods
jg
lock
loopne
xlat
mov
out
sbb
or
out
aam
xchg
out
cmp
push
ret
repz
add
loopne
stos
test
inc
push
jno
repz
push
imul
dec
jle
pop
shr
rorb
movsb
xchg
fwait
xor
rclb
sub
shlb
mov
xor
and
dec
repnz
sub
add
or
decb
aaa
sub
rorb
jg
sbb
inc
cs
push
es
push
sub
outsb
ds
push
sub
sub
roll
lds
gs
test
add
dec
insb
adc
int3
ret
arpl
pop
mov
icebp
pop
pop
push
fcompl
nop/reserved
fcompl
cmpsl
lock
bound
mov
testb
cwtl
aas
inc
sub
lahf
fwait
test
xchg
out
popf
lock
cltd
xlat
rcrb
cli
mov
lahf
jno
aaa
nop
ret
in
jge
aas
sahf
lcall
xchg
fcos
clc
xchg
out
cli
out
add
sti
push
mov
jb
clc
mov
lahf
in
cmp
in
mov
sahf
mov
rorl
push
jno
dec
push
enter
jnp
loope
int3
add
arpl
jl
in
xchg
cmp
mov
mov
in
push
cmpl
and
or
mov
iret
lock
push
pusha
pop
sahf
push
test
lcall
pop
mov
xchg
lock
sbb
inc
push
sub
into
mov
stc
or
add
adc
aaa
dec
icebp
adc
and
cwtl
push
sbb
mov
adc
cmp
icebp
cmpsl
out
repz
xor
das
adc
push
cmpl
inc
push
loopne
pop
sbb
scas
je
lock
jbe
nop
push
lcall
cwtl
sub
adc
sbb
out
jno
push
xchg
sti
punpckhbw
or
xchg
test
pop
cmp
lock
leave
punpcklbw
push
fidivrs
push
adc
cmp
jecxz
lock
mov
cmp
fdivrl
pop
inc
jb
leave
sbb
in
fcomps
in
ja
je
lock
movl
lea
mov
adc
lods
jl
lock
jo
jl
insb
adc
nop
and
nop
aam
cmp
lock
dec
pop
movsb
out
lock
sbb
bound
push
lock
add
lock
pop
mov
push
jbe
jo
sbb
jl
jb
hlt
lock
sub
lock
cmpsl
or
fmull
cmp
cmp
pop
push
lock
xchg
aam
push
fmuls
sub
xor
sub
push
ja
das
push
xchg
rorl
or
jo
push
or
add
or
orl
push
inc
loopne
push
test
int3
xchg
dec
sub
dec
add
mov
mov
inc
sbb
pop
hlt
sub
and
in
jle
or
aaa
push
pop
cmpsl
leave
push
popf
adc
sbb
cmp
pusha
cmp
cmp
inc
fcomps
mov
movsl
lock
aas
stos
int
pop
out
leave
call
mov
repnz
xor
fwait
push
stos
repz
fdivl
cmp
or
dec
das
movsb
add
test
inc
pop
add
push
sub
xor
dec
cmpsl
mov
loop
sub
add
and
xor
or
jo
add
cli
scas
scas
int
xor
out
pop
cmp
mov
sbb
or
xchg
add
das
cmp
adc
mov
xchg
mov
inc
clc
jo
pop
int
outsb
dec
notl
mov
pop
lahf
push
cli
ret
mov
stos
cmp
inc
pop
pop
pop
sbb
push
mov
mov
inc
inc
call
ljmp
jbe
jmp
jle
pop
scas
sbb
mov
ds
sbb
lods
dec
push
xor
loope
mov
sub
hlt
mov
pushf
sub
in
push
inc
xorl
int
pop
andb
jb
mov
idivl
or
and
sbb
shl
push
pop
jae
scas
lock
and
inc
add
pop
call
pusha
bound
and
cmp
push
mov
rclb
insl
xor
imul
push
insb
insl
es
mov
lret
lock
cwtl
add
repz
adc
pop
call
es
arpl
sub
xor
add
or
xor
inc
repz
push
jno
dec
inc
addl
cmp
or
push
cmp
nop
lods
pmulhuw
sbb
aad
repz
cli
add
leave
cmc
xor
jno
repnz
xchg
adc
lock
adc
clc
aas
add
es
push
nop
sbb
jns
inc
adc
test
sub
push
cmp
lea
adc
sbb
inc
adc
mov
int3
arpl
movsb
arpl
pusha
pop
adc
repnz
divl
pop
jl
or
sbb
jo
mov
cwtl
jg
push
or
mov
dec
es
shlb
dec
jbe
jno
mov
int3
inc
xor
jecxz
mov
enter
xor
xchg
lock
add
xchg
push
push
mov
or
pop
xor
push
dec
inc
sbbb
add
mov
inc
xor
fmull
sbb
iret
outsl
add
lret
pop
mov
mov
icebp
and
and
cmc
push
xor
dec
ja
bound
bnd
hlt
push
insb
xchg
ret
inc
mul
push
dec
fs
jge
test
sub
rolb
and
icebp
dec
clc
mov
xchg
and
add
vpshufhw
test
or
mov
loop
loop
ret
mov
mov
shl
sub
sub
inc
push
int3
cmp
fdivp
mov
cmove
leave
mov
lcall
or
ljmp
cmp
adc
jg
sbb
sbb
stos
pop
or
push
jb
jne
mov
jo
or
pop
inc
adc
insb
and
dec
or
jle
andb
mov
fcoml
push
in
or
adc
add
inc
adc
xor
mov
shlb
cli
add
add
cltd
in
push
les
cmpsb
cli
or
icebp
popa
adc
mov
mov
movsb
jo
cwtl
push
test
or
pop
xchg
pusha
xor
scas
pop
dec
adc
shl
cmp
dec
in
pop
pop
in
xor
and
rorb
or
xor
sbb
push
inc
or
push
inc
add
push
insb
dec
jno
jno
and
in
push
and
adc
xchg
outsb
and
bound
mov
iret
push
dec
mov
js
cs
cmp
or
faddl
push
jno
or
dec
mov
xlat
icebp
pop
jge
lods
sub
mov
leave
or
push
pop
popa
cmp
mov
xrelease
fiaddl
sub
out
add
and
or
or
inc
repz
jae
hlt
jge
bnd
icebp
ja
mov
imul
xor
adc
mov
jge
adc
sbb
in
roll
std
or
add
jbe
jnp
in
and
repnz
leave
enter
loope
push
or
mov
add
or
cmp
repz
outsb
out
cmp
int3
dec
sub
add
sub
daa
xlat
mov
pop
sbb
add
jb
dec
push
pop
mul
lahf
icebp
iret
jl
test
hlt
popa
enter
popa
icebp
xor
lock
mov
cwtl
dec
add
push
xor
xor
cli
add
pop
sub
cmpsl
jae
jl
xor
or
push
les
jae
hlt
inc
adc
mov
or
mov
jb
into
into
inc
pop
mov
pop
add
and
sarb
push
xchg
jge
mov
push
clc
dec
mov
cmp
or
xor
or
rolb
aad
xchg
jae
mov
in
call
cmp
lods
add
jb
sbb
mov
mov
scas
lahf
or
jge
inc
add
arpl
addr16
imul
nop
repnz
sbb
or
xor
pusha
imul
ret
icebp
insb
pop
cmc
shlb
push
jns
xor
push
mov
or
jb
xor
add
inc
push
fisubs
push
stos
jb
rorb
xchg
sub
jno
mov
pusha
or
xchg
lcall
adc
cmp
mov
jg
unpcklps
push
call
push
xor
int3
cmc
mov
les
pop
mov
repz
mov
jle
ja
xchg
icebp
cs
push
aas
je
jbe
lds
xor
push
fmulp
mov
pop
adc
cs
les
push
scas
adc
push
hlt
icebp
loopne
adc
cmp
add
or
mov
or
rcr
adc
add
lock
adc
pop
jp
icebp
cmp
loopne
mov
cmp
dec
sub
dec
or
add
add
pop
cmpsb
inc
subb
aam
lock
rolb
fcoms
loopne
dec
cld
shlb
jecxz
pop
pop
and
xchg
cmp
aam
lock
fadds
mov
icebp
les
repz
enter
xchg
jae
loop
pop
xor
add
cmpsb
fdivrs
jo
shl
lods
lsl
xor
cmp
arpl
jl
test
push
xorb
rorb
pop
xor
fwait
and
dec
cwtl
xor
pushf
adcb
idivl
xchg
ror
leave
push
shr
dec
sbb
enter
call
push
and
xor
or
mov
cli
push
add
shl
xor
sub
pop
xor
sub
hlt
into
xor
repnz
dec
rcrl
das
mov
jle
adc
orb
je
xor
test
notl
or
movsl
fists
xor
sub
leave
dec
jae
cwtl
cmp
jmp
dec
or
mov
loop
sub
jae
lock
jle
mov
sbb
imul
adcb
bnd
jge
rclb
loopne
lods
nop
push
lods
in
int3
push
sub
or
push
inc
or
dec
xor
jp
xchg
int3
jge
xlat
mov
rcl
and
fmull
xor
test
or
push
repnz
repz
or
mov
mov
jmp
cmp
imul
and
xor
sbb
hlt
adc
loopne
outsb
in
jno
out
and
xor
push
and
clc
push
adc
repnz
in
or
mov
mov
jae
mov
lret
and
repz
push
out
nop
mov
hlt
ja
mov
pop
pushf
loopne
and
jo
cmp
popa
or
and
loop
pop
dec
push
jl
cwtl
push
notb
add
sbb
push
repnz
add
xor
push
mov
jne
jmp
pusha
xor
push
push
add
xlat
adc
xchg
movsb
mov
into
jmp
push
push
ja
cmpsb
fsubl
add
cmp
sub
sub
sahf
mov
popf
mov
pop
xor
and
fisttpll
nop
mov
add
sbb
jbe
add
sub
test
ret
orps
push
ss
pop
idivl
imul
rcr
cmp
popf
jge
rcrl
dec
nop
cli
faddl
iret
mov
add
pusha
cli
in
fcompl
stos
inc
xchg
dec
add
int3
mov
in
in
call
fimuls
sub
xor
shrl
push
xor
icebp
fidivrs
push
pop
jl
cmp
pushf
in
adc
add
xor
or
dec
shl
dec
adc
js
out
rcl
popa
and
inc
jmp
int
mov
cld
jecxz
clc
pop
add
aas
leave
cld
rclb
add
cmp
pop
sbbb
xorb
in
cmp
jb
xor
lret
les
push
xor
mov
jae
insl
mov
test
arpl
pushf
test
fcmovnbe
jmp
pop
repz
cmp
lock
sbb
pop
xchg
in
or
ret
jge
jo
cmp
mov
iret
sbb
int3
cmp
push
mov
push
add
jno
inc
sbb
or
es
jae
testb
and
ljmp
mov
push
jmp
mov
xchg
std
or
or
or
add
cmc
pop
dec
in
shll
add
jp
inc
ret
pop
jb
mov
or
pusha
rorb
or
jbe
xchg
dec
fldl
fsts
jle
out
jnp
mov
xor
sbb
out
repz
adc
sbb
jo
inc
add
or
icebp
jno
aaa
divb
jmp
into
pop
jmp
inc
jnp
push
or
mov
daa
mov
iret
add
push
add
pcmpgtb
and
mov
stc
push
jno
mov
lock
cmp
dec
clc
icebp
decb
ret
and
xor
lock
jno
or
icebp
and
push
push
iret
cmp
xor
daa
in
or
or
sbb
fmulp
add
xor
int3
inc
pop
or
inc
jge
dec
dec
add
repz
aam
push
ja
jbe
push
inc
fidivrl
inc
sbb
sbb
repz
repnz
icebp
push
push
jb
xor
inc
xor
lods
fcomps
pop
test
leave
mov
push
or
push
cmp
jl
cmp
fs
jge
add
mov
pop
or
cwtl
sub
add
repnz
xor
xor
adc
push
sbb
adc
lock
mov
jo
cmovns
sub
lds
fdivr
or
into
mov
push
jo
sub
test
or
sbb
add
dec
sbbb
mov
pop
cmp
int3
rolb
dec
scas
pop
call
add
les
add
outsb
sbb
push
push
repz
into
cltd
roll
shll
fcmovnb
cwtl
jno
jb
ja
or
mov
in
xchg
icebp
roll
shrb
adcb
and
jo
prefetch
jmp
pop
add
pop
or
jne
fmull
or
inc
fadd
aad
cmp
push
mov
mov
repnz
dec
jne
pop
push
leave
push
popa
pop
lods
divl
jne
icebp
mov
in
jae
jne
jne
xchg
hlt
jp
cmp
mov
pop
cs
jl
and
sti
cmp
xor
fdivl
repz
or
stos
jge
jmp
sbb
shl
fcoms
push
jo
sbb
into
xchg
mov
xchg
jecxz
clc
xchg
aam
data16
sbb
add
mov
js
rclb
jne
icebp
mov
hlt
ja
push
lea
xchg
mov
inc
nop
mov
inc
psubsb
divl
shrb
aas
dec
or
shl
in
ret
dec
ljmp
pop
fidivs
shl
mov
call
mov
je
loopne
shlb
adc
pop
add
pop
sarb
fs
xchg
or
add
jo
and
andb
push
imul
pop
inc
mov
rcl
nop
dec
xchg
leave
and
js
popf
or
adc
lcall
xchg
jmp
xor
ret
jle
or
lock
rcll
ss
in
add
insb
icebp
pop
das
outsb
add
shrb
adcl
or
ret
adc
cmp
push
pop
sub
dec
ljmp
sub
pop
jg
popf
insb
mov
mov
inc
sub
jmp
in
adc
test
nop
cmp
repz
cmp
aad
jg
cmpl
dec
or
mov
fists
movaps
cli
push
mov
push
mov
push
or
push
jo
pop
call
shl
push
das
adc
sub
xor
f2xm1
lods
mov
pop
adc
pop
xchg
jo
push
pop
repz
cmp
cmp
mov
pop
call
out
repz
je
repnz
cmp
pop
in
or
data16
repnz
sub
pushf
or
or
sbb
mov
mov
jo
jo
int3
cmp
inc
orb
push
insb
aas
pop
mov
test
push
enter
inc
inc
inc
jno
int3
jno
enter
or
jle
in
xchg
movsl
mov
adc
jo
mov
test
push
sbb
adc
pusha
icebp
dec
push
adc
xchg
mov
idivl
add
rol
das
or
lock
mov
out
jle
xor
dec
sbb
pop
call
fldl
fcoms
add
fdivr
and
push
or
xchg
mov
jo
xor
adc
pop
rorl
xor
push
jge
cmp
lock
nop
repz
sbb
jle
add
test
lock
daa
pop
jge
jne
loop
hlt
nop
jmp
aaa
jbe
xor
jb
mov
mov
mov
mov
push
cwtl
dec
xor
in
or
push
enter
xchg
sbb
mov
pusha
jae
ds
push
inc
ljmp
in
repnz
add
jg
sbb
push
push
adc
push
xor
adc
dec
dec
mov
leave
cmp
xor
cwtl
xor
or
test
scas
jo
and
inc
repz
dec
adc
jo
jb
pop
mov
sbb
push
clc
mov
jnp
dec
adc
push
stc
sbb
or
loopne
repz
aaa
xchg
add
dec
insb
adc
dec
push
push
sbb
stos
mov
or
fcompl
adc
adc
repz
or
repnz
rclb
loope
mov
add
cwtl
lahf
call
into
jmp
cs
jno
or
movsb
insb
sub
jle
enter
push
pusha
imul
insb
mov
pop
insl
arpl
jae
and
out
imul
and
aaa
xor
mov
pop
je
xchg
stos
ljmp
mov
test
hlt
pop
arpl
negb
iret
repz
cmp
icebp
repnz
add
js
cmp
jl
cli
add
or
or
shll
and
iret
pop
xor
and
add
add
mov
dec
add
mulb
xorb
mov
jne
mov
push
add
sbb
lock
jg
clc
mov
inc
js
sbb
add
cmp
popa
icebp
dec
or
mov
arpl
jae
add
inc
scas
mov
pop
add
lods
fsts
cwtl
push
jecxz
add
or
scas
or
and
inc
mov
clc
subb
cmp
mov
cmp
jno
cmp
iret
repnz
or
jge
sub
shlb
call
icebp
mov
adc
mov
push
popa
out
call
push
out
pusha
rcrl
jge
mov
jb
inc
stc
mov
push
jo
jmp
popa
les
sbb
ss
lods
js
es
in
inc
aas
icebp
or
mov
es
lock
loopne
mov
orb
adc
inc
and
inc
repnz
or
sbb
sbb
mov
xor
dec
sub
fcmove
push
loopne
or
stos
outsb
clts
testl
or
lods
or
xor
inc
repnz
push
je
xor
shrb
pop
add
or
les
mov
push
cmpsb
mov
pusha
ret
xor
inc
gs
dec
test
pop
clc
dec
leave
pop
or
push
cmp
and
pop
mov
inc
xlat
testb
lcall
jno
sti
shrl
ds
popa
repnz
stos
sbb
ret
inc
push
sub
add
push
dec
dec
or
mov
nop
gs
push
adc
insl
outsb
cmp
inc
jne
adc
mov
dec
push
xor
dec
push
or
insb
nop
push
lret
aas
arpl
imul
aam
push
and
or
mov
out
addr16
decb
adc
mov
mov
mov
dec
inc
push
or
roll
dec
xchg
pop
stos
nop
sub
cwtl
aad
inc
or
lods
pmovmskb
sub
add
repz
or
jae
aaa
addr16
fldenv
lods
add
push
in
psllw
loope
inc
insb
mov
sbb
shlb
push
pusha
inc
mov
lods
mov
cld
sarb
fldl
lret
jge
sub
div
rorb
inc
addr16
jecxz
inc
cs
punpcklbw
fldl
inc
dec
xlat
push
push
insl
js
mov
push
xchg
add
mov
jae
arpl
jl
aas
lcall
pop
rclb
pop
rdtsc
jl
jp
scas
add
loopw
pusha
arpl
gs
and
pop
sub
jae
jne
pop
std
inc
lea
sbb
fadds
xor
jg
outsb
inc
daa
or
scas
addb
loop
and
or
stos
lods
mov
jns
push
aad
adc
jae
inc
sbb
sbb
loop
or
adc
lahf
faddl
or
nop
inc
xchg
or
jns
push
sub
bound
lods
clc
out
repz
push
xchg
lahf
std
sub
inc
cmp
rcrl
mov
xchg
imulb
int3
push
push
and
repz
addr16
out
and
cmp
std
in
call
mov
vmread
fnclex
or
lret
jb
or
popa
jo
cmpsl
shr
std
sub
adc
nop
test
or
xor
lock
rolb
sarl
lcall
or
xorb
mov
je
mov
jo
add
push
arpl
cmp
inc
dec
push
repz
inc
mov
push
xor
iret
call
fwait
inc
dec
cmp
adcl
inc
add
jmp
inc
inc
xchg
addb
dec
out
rcrb
sub
push
in
add
mov
into
cmp
mov
xor
inc
add
insb
mov
pusha
add
jbe
and
ja
dec
sub
sti
cld
sar
leave
je
incl
adc
sub
add
movl
or
dec
aad
std
ljmp
jg
jns
cmp
and
or
inc
add
pushf
jecxz
ljmp
adc
arpl
jae
mov
fldl
add
push
dec
outsb
popw
xchg
mov
rorb
aas
inc
pop
pop
jle
add
mov
cmp
mov
fnstenv
or
cmp
lods
mov
xchg
cmp
push
adc
or
outsl
cmpsb
jo
movsb
sub
movups
aas
loope
repz
lret
jae
stos
inc
adc
xor
test
ljmp
jo
movsl
mov
mov
adc
and
sbbl
scas
xor
leave
pop
fdivs
and
pop
mov
jg
lahf
jno
addb
cltd
jbe
jne
xor
jmp
insl
lds
jne
test
loopne
clc
xchg
iret
adc
mov
cli
je
testl
jp
and
sub
push
xor
adc
or
cmp
xchg
adc
es
jo
movsl
loop
pop
pop
mov
push
add
mov
cltd
mov
lret
ret
pop
and
lods
rcl
pop
mov
adc
fwait
mov
lods
adc
dec
sti
xor
les
dec
sub
or
mov
or
add
insb
movsb
dec
lahf
xor
notb
dec
cltd
xchg
add
pop
in
scas
sub
sub
cs
scas
or
push
cmp
xor
das
out
call
out
adc
push
lahf
lock
xchg
xor
mov
ds
popa
mov
lock
fld
ss
fwait
int
pop
or
mov
pop
in
adc
scas
mov
addr16
sbb
jge
cmpsl
xchg
into
outsb
xor
cltd
mov
daa
xchg
movb
out
int
sbb
xchg
pop
movsl
jecxz
cvtdq2ps
int
mov
xchg
cmp
mov
test
in
repnz
push
ja
iret
jno
add
lret
or
in
lock
int
dec
jmp
dec
ficomps
out
mov
scas
and
push
jmp
or
inc
mov
push
lods
adc
iret
lods
cmp
shr
rorb
mov
repnz
jno
pop
aas
xchg
cmc
or
data16
pusha
pop
push
xor
mov
pop
add
les
lcall
lock
aas
scas
lds
aaa
pop
addl
std
jns
lock
and
or
jg
add
mov
push
fdivs
cli
dec
in
jecxz
or
inc
and
pushf
ss
repz
push
loope
ljmp
inc
imul
cmpsw
fsubl
enter
lret
add
aaa
inc
push
add
arpl
xor
mov
sbb
inc
pop
cmpsl
jbe
push
mov
insl
cmpsl
jbe
pop
cmc
inc
jns
fdivrl
cmc
inc
arpl
fsubl
cmc
dec
lretw
std
sbb
loop
inc
jp
cld
pop
push
mov
pop
jp
dec
pop
cmpsl
cld
inc
jp
inc
inc
daa
cld
inc
inc
testl
testl
daa
cld
pop
ret
pop
jmp
sbb
push
mov
inc
jp
gs
dec
cmc
sbb
mov
push
pop
testl
cmc
addr16
cmpsl
ficoms
mov
sbb
lods
cli
testl
mov
xchg
testl
daa
cld
sahf
je
pop
xchg
imul
add
or
pop
sti
jns
ja
test
ja
popf
shl
loop
cmc
into
sub
adc
fs
sbb
ret
cmp
sbb
arpl
sub
jg
sbb
push
fidivrl
roll
pop
repnz
ds
test
or
repz
and
add
add
mov
sub
ljmp
push
sub
add
test
cmp
xchg
shlb
addr16
xor
jb
xor
mov
push
int3
dec
inc
xor
jp
ficoms
call
testl
not
adc
cld
dec
or
inc
sub
or
repz
mov
leave
or
push
lods
cvtdq2ps
sbb
or
or
or
adc
push
inc
push
xor
or
scas
pop
inc
add
add
mov
cmp
dec
xor
inc
cmp
inc
sbb
inc
or
and
cltd
je
inc
sbb
xchg
into
pusha
or
cmpsb
movsb
inc
push
and
jo
pushf
jno
lret
insb
jae
mov
sub
mov
scas
xchg
nop
sub
adc
sbb
daa
jge
or
mov
pop
xor
subl
push
aas
push
imul
insl
dec
xchg
or
repnz
sbb
pop
adc
out
xor
dec
adc
addl
sbb
adc
jg
push
dec
adc
inc
cmc
dec
inc
mov
lods
or
pop
orl
leave
aad
xchg
adc
lods
jo
push
jb
in
adc
or
xchg
lods
mov
xchg
shl
mov
xor
les
fimull
test
dec
imulb
xor
pushf
mov
cmpl
call
adcb
or
push
pop
mov
fldcw
and
jo
fcom
sar
jo
jbe
cmp
sbb
mov
or
xchg
mov
dec
jo
jl
push
inc
add
dec
dec
xorl
cmp
and
and
sub
adcl
cwtl
and
adc
call
enter
mov
sbbl
adc
dec
pusha
push
sub
dec
xor
add
fs
or
mov
add
sub
dec
mov
dec
xchg
pushf
mov
jl
insb
adc
dec
cmp
mov
add
sbb
in
or
dec
int3
mov
mov
dec
insb
lods
xchg
sub
sub
sub
movsb
js
int3
lods
sub
adc
sub
sub
and
inc
mov
inc
dec
xor
jo
dec
or
icebp
cmp
lods
mov
repnz
sbb
test
divl
sub
xor
shlb
jae
adc
xor
mov
add
pop
inc
mov
je
adc
jl
push
inc
sub
add
pop
adc
add
or
add
xlat
xor
dec
adc
mov
hlt
sub
dec
cld
sbbl
cltd
pop
adc
add
sbb
mov
pop
sub
dec
adc
and
mov
add
sbbl
pusha
clc
idivl
call
inc
xchg
add
fldcw
and
sub
adc
mov
adc
inc
es
push
sbb
sbb
in
or
ja
icebp
insb
insb
push
sbb
stc
insl
insb
push
push
pop
adc
jns
cmp
or
pop
cmp
xor
rep
rcrl
dec
xor
xchg
cmp
or
in
es
push
nop
repnz
push
jne
enter
cli
or
loop
xor
inc
mov
push
add
add
push
jno
mov
sbb
or
mov
sbb
les
pop
mov
inc
lock
xchg
mov
movsl
int
imul
inc
sbb
jae
popa
sahf
lock
sub
mov
dec
in
add
xor
js
jp
addr16
rolb
mov
lea
pop
das
cmp
je
lock
stc
xchg
sti
jmp
lock
inc
xor
lock
daa
mov
dec
sub
add
stos
clc
cmpsb
inc
ror
int3
cli
clc
jmp
scas
fsub
call
lock
insl
iret
addl
sbb
xchg
dec
add
cmp
jo
leave
dec
inc
pop
xor
lock
cmpl
cmp
inc
cld
in
adc
xor
xchg
sbbb
scas
loopne
lock
push
rcll
push
mov
fcomi
outsl
stos
popf
clc
jecxz
mov
jne
lock
inc
leave
fwait
lahf
adc
mov
inc
or
sti
or
lock
aaa
popa
xor
pusha
or
insb
cmp
inc
test
std
lock
and
sbb
addps
mov
pop
adc
int
out
xor
cmpsl
or
loopne
xor
in
fstpl
mov
jo
push
mov
jg
stos
je
lock
inc
pop
roll
mov
pop
popf
out
leave
push
xor
cmp
lds
lcall
pushf
cmp
push
cmp
pop
into
shlb
jp
nop
pop
pop
mov
jbe
inc
je
mov
lock
test
mov
lea
mov
jmp
ja
test
lock
xchg
in
mov
je
dec
rcl
ss
jnp
lock
pop
jg
testl
push
sub
movsb
xor
mov
cmp
dec
lahf
mov
aam
pop
lock
mov
repz
into
lock
movsbl
cmp
popa
adc
adc
and
out
sbbb
mov
mov
fisubrl
and
lock
xchg
dec
pop
lock
in
and
inc
cmpsb
imul
pop
or
lods
mov
mov
sti
call
out
mov
xorl
sbb
insl
xor
cmc
icebp
xchg
jo
xchg
mov
or
aad
fsubs
repz
xchg
push
daa
xlat
mov
pop
push
sbb
js
repnz
test
mov
add
cmpsl
xor
or
sbb
mov
stc
xor
enter
push
loop
pop
xorl
test
sbb
add
ror
push
push
icebp
mov
push
sbb
fcoml
push
sbb
adc
pop
and
in
xor
or
int3
scas
lahf
popa
xchg
xor
arpl
repz
xchg
jns
sarb
je
add
adc
mov
xacquire
vpmacssdd
cmp
bound
xchg
mov
dec
sbbl
xchg
xchg
push
dec
nop
xchg
icebp
xchg
lods
scas
mov
scas
pusha
test
adc
cmpsl
mov
cmpsb
mov
mov
and
mov
cmp
mov
cmp
lret
cmp
ret
fstp
adc
fcomp
adc
xlat
roll
aad
rolb
js
in
in
shll
in
cwtl
repnz
clc
loopne
stc
pusha
cli
movsl
icebp
aad
or
iret
add
adc
push
add
push
movsl
xor
or
sub
pop
sub
pop
test
adc
jb
or
fwait
sub
xor
mov
das
add
popf
fldpi
or
pop
sub
or
sub
punpckhbw
push
push
mov
cmp
pop
xor
mov
adc
sub
pop
xor
sub
pusha
rep
adc
sbb
rcll
int3
adc
or
mov
int
push
xor
pop
sbb
add
sbb
test
sbb
cltd
adc
adc
sub
adc
sub
push
sub
sbb
lods
sbb
sbb
or
xor
push
sbb
repnz
add
adc
sub
or
xor
sbb
adc
or
adc
movsb
jb
sub
adc
das
or
jp
pop
push
sbb
add
adc
repz
movsl
inc
add
das
add
insb
adc
add
cld
xorb
fsts
pop
add
or
pop
push
mov
maskmovq
testl
pop
xor
adc
shl
clc
jb
push
pusha
hlt
dec
ja
or
jne
divb
add
or
repz
push
and
aaa
or
shl
test
sbb
lcall
or
ret
mov
repnz
pusha
push
das
or
das
push
xchg
lods
adc
scas
mov
jg
mov
int3
push
daa
push
dec
adc
stc
mov
gs
xor
dec
aaa
inc
add
scas
jne
xor
dec
adc
jne
dec
cmp
rorb
aaa
xchg
test
or
jp
js
xchg
mov
test
adc
fidivrs
adc
or
push
popf
mov
and
lret
xor
sbb
cmp
fmulp
int
inc
and
in
mov
adc
sub
dec
aas
pop
clc
cmp
repz
push
out
adc
push
fisttps
ljmp
lret
in
repnz
cmpsb
inc
inc
mov
mov
mov
ss
xchg
inc
mov
lods
rdmsr
xchg
sbb
cmp
xchg
jge
test
push
push
mov
test
push
leave
adc
gs
movsb
mov
hlt
lcall
mov
adc
stos
push
dec
lahf
or
mov
cmp
xor
int
int3
cmp
xchg
inc
jecxz
inc
jo
mov
int3
mov
push
pop
std
lds
xorl
adc
stos
pushaw
lea
in
daa
add
dec
in
sub
test
mov
imul
inc
sub
ret
mov
popf
sub
addb
pop
cmp
mov
cmpsl
mov
lea
xor
or
fmull
icebp
fsubrl
jl
push
sahf
jne
icebp
jg
lea
scas
push
mov
test
in
add
movsb
sub
push
iret
repnz
jl
adc
jmp
sub
mov
repnz
or
and
repnz
int3
mov
add
lahf
pop
pop
lods
dec
repz
sbb
out
out
adc
dec
mov
popa
sbb
sub
jmp
out
stc
addr16
imul
mov
jno
fwait
xchg
out
push
push
xchg
int
std
nop
sbb
lcall
loope
popa
push
leave
ficoml
hlt
lock
adc
mov
int3
cld
xchg
add
mov
loop
or
pop
or
adc
mov
jmp
xor
jecxz
xor
sub
and
push
mov
icebp
push
sub
fildll
cmp
xor
iret
sub
out
sbb
jp
dec
sbb
shlb
sub
icebp
lods
xor
adc
iret
pop
out
push
cld
sub
or
insb
sub
dec
inc
movsb
sub
lods
lods
scas
loop
shlb
and
mov
dec
adc
sbb
mov
enter
bound
inc
xor
shr
or
int3
popf
icebp
out
pop
pop
fistps
loope
or
jno
rorb
push
pop
fcompl
decl
xor
pop
testb
or
cmp
subl
mov
clc
imul
movl
and
arpl
xor
xor
sbb
pusha
faddl
js
jnp
jmp
faddl
clc
xchg
xor
inc
enter
lret
loopne
push
stos
out
out
push
mov
add
repz
cmpsl
int3
pushf
or
inc
loopne
cmp
sti
mov
xor
lret
sub
ds
cmp
aaa
test
sub
mov
testb
mov
insl
loopne
jno
push
cmc
or
inc
sub
jns
inc
or
jno
or
popl
aam
int3
rorb
dec
ja
push
js
or
int3
cltd
scas
int3
repnz
test
or
sub
pop
orl
es
bnd
xchg
sub
sub
fidivrs
sbb
enter
push
or
sysexit
repnz
out
shl
cmp
mov
pushf
repnz
add
sbb
popa
hlt
repz
negb
pop
mov
fdiv
bswap
repnz
test
dec
div
mov
dec
aam
or
repnz
jbe
jb
mov
xlat
shl
dec
lods
repnz
mov
sub
or
out
push
xor
and
dec
repnz
sbb
pop
sbb
xor
shll
cld
icebp
lods
test
ljmp
xor
rorl
lock
ljmp
shrl
cmp
xlat
shl
movsb
sbb
shll
adc
iret
outsl
add
sbb
adc
adc
daa
and
or
add
sbb
pop
push
mov
push
mov
push
push
inc
rcr
mov
push
cld
push
sti
adc
dec
rclb
pop
add
or
repnz
mov
lock
pop
repz
sbb
pop
inc
jo
fildll
xchg
push
jecxz
shl
push
loop
xor
and
add
dec
pop
js
sub
movsl
mov
negl
mov
mov
in
jb
fisttps
sbb
repz
or
jo
push
je
jmp
push
push
ret
mov
pushf
or
out
int3
mov
insl
push
mov
mov
std
bound
fimull
inc
pop
mov
push
push
add
xor
jg
jno
sarb
pusha
aas
push
into
insb
mov
mov
xchg
nop
and
or
call
push
pusha
mov
pop
pop
mov
sti
push
mov
rol
push
xor
lahf
push
or
repnz
sbb
xor
xor
sub
or
aas
repnz
jb
and
mov
cmp
cli
lahf
cmc
js
adc
imul
mov
and
pop
sub
and
pop
sbb
aad
jg
fiaddl
lahf
repnz
in
sub
pop
or
mov
adc
ljmp
dec
dec
int
lock
mov
pop
adc
mov
mov
js
sti
shl
movsb
add
hlt
int
enter
push
pop
xorl
add
and
repnz
sbbb
inc
or
lock
jnp
je
ja
or
sti
and
lds
ret
insl
push
outsb
dec
lock
and
sbb
repnz
jge
cwtl
stc
repz
mov
mov
loopne
jecxz
mov
cmpsb
mov
loope
adc
xlat
shr
pop
cld
or
lahf
xchg
nop
fcmovnu
mov
sub
lock
xchg
nop
icebp
xchg
out
clc
stc
cli
hlt
testl
cli
mov
in
xor
or
cld
xor
push
add
lds
dec
pop
in
orb
add
push
fdiv
fcomip
sub
mov
in
push
mov
jle
icebp
jnp
pushf
cwtl
cltd
jmp
sub
push
push
mov
cmp
ja
push
orb
outsl
nop
mov
pushf
lock
js
push
sub
cltd
xchg
fsubr
cmp
das
or
imul
or
and
sub
nop
sub
out
xchg
push
icebp
out
jmp
rol
popa
sbb
or
in
pusha
mov
pop
push
addr16
scas
stos
xchg
xchg
xchg
adc
push
push
push
enter
and
or
mulb
add
push
mov
mov
pop
shlb
ja
jo
mull
mov
adc
lea
xchg
pop
adc
jno
loopne
clc
sub
rcll
fwait
cwtl
inc
and
mov
adc
addr16
dec
call
enter
arpl
insl
dec
add
add
pop
ss
bnd
mov
pop
and
xor
add
or
iret
repnz
add
ret
and
out
cli
repnz
insl
or
rcl
in
test
fcmovnbe
push
add
adc
mov
mov
or
pop
jo
loopne
inc
mov
pop
addl
fistps
xor
push
dec
repnz
insl
sub
pop
and
inc
or
push
adc
inc
push
push
push
imul
loop
push
pop
pop
sarb
xchg
loop
pop
inc
cmp
and
inc
repnz
mov
jmp
test
jns
pusha
or
sbb
inc
repnz
sbb
lahf
in
and
into
and
inc
repnz
sub
mov
add
lods
pusha
lahf
lcall
pop
ficoml
push
loop
or
cmp
mov
lock
mov
sub
int
hlt
orb
in
xor
adc
adc
pop
sahf
in
and
sub
rorb
out
sub
adc
stc
mov
pushf
out
sub
test
cs
lcall
in
sbb
add
adc
outsl
lods
add
inc
or
int3
repnz
pusha
cmp
mov
in
mov
fadd
inc
repz
jnp
jo
loope
rcll
dec
and
or
jmp
gs
sub
xor
int
and
lods
les
or
sub
mov
pop
addr16
movsb
enter
imul
ficoml
outsb
or
std
rorl
outsb
arpl
clc
hlt
lahf
xchg
xchg
in
sub
add
inc
sub
test
sub
ss
aas
aaa
xor
hlt
sbb
add
lcall
fcoml
push
fnstsw
fcmovbe
pop
sbb
mov
sbb
jecxz
push
fistpll
jnp
sub
repnz
push
push
mov
adc
jl
sub
pop
cld
sub
fmull
repnz
int3
mov
cli
negl
lods
scas
scas
jmp
repnz
cld
jp
test
test
cmpsl
mov
icebp
aad
push
push
iret
mov
jmp
push
cs
arpl
xchg
stos
movsb
xlat
js
addl
out
mov
cs
fstl
jo
pop
add
movsb
dec
cmpsb
mov
cmp
sarb
inc
addl
addl
mov
shrl
sub
mov
or
popa
nop
scas
test
fcomp
out
pop
and
lret
jl
dec
aad
push
loopne
bound
repz
xor
xchg
hlt
mov
aam
repnz
icebp
sbb
repz
and
or
or
icebp
or
add
repnz
push
or
repz
bswap
or
repnz
jbe
jno
movsl
clc
dec
jo
test
mov
int
add
jb
jl
clc
cmp
je
sbb
cmp
adc
xor
enter
test
das
dec
xchg
add
enter
insl
mov
fcompl
addb
stos
mov
xchg
shll
addr16
out
inc
inc
pop
xor
sub
add
inc
lock
test
stos
jmp
fidivrl
repnz
aaa
test
clc
mov
push
push
scas
mov
dec
jo
icebp
mov
loope
or
mov
sub
pop
fistl
int
out
pop
mov
lds
aaa
mov
int
pop
bnd
jo
rol
cmp
inc
adc
mov
cltd
xchg
xchg
dec
fdivr
and
lahf
or
ss
aaa
adcl
sub
push
lods
pushf
dec
icebp
jp
adc
pop
dec
xchg
sbb
mov
mov
pmulhuw
lcall
arpl
shl
in
out
incb
popa
inc
adc
sbb
pop
dec
cwtl
movsb
add
scas
mov
repz
pop
mov
xchg
mov
mov
out
test
or
out
popf
sarb
xchg
push
insb
inc
out
push
nop
push
rcll
mov
clc
negb
push
outsb
outsl
push
push
push
push
stos
push
outsl
push
test
add
movb
lahf
mov
jp
mov
repnz
cld
sti
les
mov
loop
fstp
fcmovnbe
mov
pop
aam
sar
scas
or
mov
imul
mov
xor
or
clc
movsb
pusha
arpl
aam
decb
repnz
xor
cld
shr
std
daa
inc
sbb
dec
or
shr
call
pop
shll
es
add
inc
es
rorb
jb
lea
out
repnz
jae
pusha
inc
mov
lock
scas
stos
xor
les
popa
and
aas
je
or
jbe
cwtl
fwait
rcl
dec
insb
je
in
addr16
ficoms
push
repnz
ja
pop
push
fmul
and
inc
xor
repnz
or
or
adc
repnz
jnp
mov
rcl
loop
jne
jb
fdivs
mov
mov
cmp
and
lods
mov
mov
and
clc
dec
mov
dec
cmp
mov
cs
adc
and
push
xchg
add
or
add
add
jno
mov
inc
and
icebp
pop
or
add
inc
add
sub
in
push
push
xor
jo
dec
add
jno
xchg
cld
loopne
decl
push
sbb
aas
cwtl
push
push
lret
cmp
or
popf
pop
popa
or
cmp
sub
dec
call
call
cld
icebp
out
jb
in
inc
adc
or
adc
js,pn
cmp
cmp
loop
clc
shlb
and
inc
ss
lods
xor
mov
dec
test
sbb
sbb
arpl
adc
or
enter
sbb
sbb
fadds
pop
testl
xchg
decl
xrstors
pop
mov
or
pop
bound
das
adc
and
loopne
or
inc
or
mov
hlt
pushf
and
or
mov
pop
sub
stos
sub
lahf
xchg
test
sub
mov
inc
push
repnz
loop
mov
adcl
cld
repz
call
sbb
repnz
xchg
cmp
dec
inc
cld
or
mov
and
jmp
cmp
pop
nop
mov
out
bnd
push
cld
or
call
pusha
sub
mov
jmp
adc
enter
adc
mov
mov
sub
aad
pop
rorb
nop
cmp
or
bnd
mov
fsubp
scas
repnz
nop
repnz
movsl
cmpsl
fisttps
loope
or
mov
dec
pop
sbb
and
shr
mov
pop
ja
insl
insl
rol
mov
mov
loop
sub
hlt
jo
outsb
jmp
jns
mov
out
repnz
cmp
rorb
stos
dec
sbb
mov
inc
add
mov
cmp
sbbb
repnz
pop
repz
stc
cmc
push
sub
popa
das
or
jmp
add
invd
or
shr
mov
in
rorb
mov
lea
test
adc
xor
repz
dec
or
xor
bound
shrb
clc
leave
out
dec
xchg
fdivl
mov
push
bnd
mov
rcll
push
aam
inc
shll
pusha
call
add
dec
nop
cmpsl
dec
repnz
rol
adc
fisubrs
and
xor
push
mov
mov
nop
xchg
test
std
aaa
nop
or
andb
mov
mov
push
pop
repnz
push
or
lods
sahf
cwtl
fcoml
pusha
shr
mov
or
cmp
or
shrb
mov
scas
mov
stc
call
fsub
lock
pop
pop
add
adc
mov
sbb
inc
out
and
mov
repz
mov
repnz
or
in
dec
sar
jecxz
inc
push
outsl
sbb
push
repnz
jno
popf
imul
jnp
mov
inc
fcoms
inc
in
or
and
xor
loope
push
push
icebp
jl
test
bound
adc
ljmp
repnz
mov
pusha
je
pusha
mov
scas
xorb
jb
xchg
pop
inc
testb
insl
fcomps
repz
dec
rorb
repnz
repnz
repz
or
push
pop
lock
insb
mov
notb
sub
mov
arpl
negb
je
push
jb
lods
scas
fisubrl
cmp
or
in
insb
jbe
pusha
lock
xor
sbb
adc
add
add
xor
push
push
push
decb
std
pop
inc
mov
fstpl
ret
stc
push
fcompl
int3
sub
push
sbb
sub
or
push
lock
inc
pop
lock
adc
and
add
inc
insb
mov
call
in
hlt
aam
lock
stc
data16
fucom
loopne
loope
fmull
es
xorb
jl
mov
inc
add
or
repnz
lock
testl
clc
out
and
sub
loop,pt
cmpsb
inc
int3
stos
sub
cmp
cmpsb
cwtl
dec
shll
jmp
mov
adc
adc
jl
int3
clc
mov
mov
push
rol
pop
pop
popa
push
or
loop
pushl
stc
jle
sbb
xchg
aas
xor
repz
icebp
ljmp
mov
xor
int
ljmp
inc
rolb
xchg
inc
dec
and
mov
enter
es
push
in
or
push
mov
mov
incb
subl
lcall
mov
nop
outsl
sbb
stos
repnz
repz
add
lds
and
fdivs
mov
repz
test
sbb
mov
and
clc
pop
adcl
mov
fcoml
and
push
loopne
or
cld
dec
mov
jne
nop
mov
and
pop
repnz
repz
pop
or
fidivs
mov
mov
daa
aam
int3
cmp
dec
cmp
jne
mov
xor
lcall
dec
pop
sbb
mov
cmp
loope
mov
mov
jo
mov
repnz
test
repnz
sub
testl
popf
data16
push
fnclex
cld
std
sub
mov
ffree
test
sub
fs
call
and
add
loop
pop
or
dec
or
push
xor
pop
push
lock
shr
adc
divl
xchg
movsl
mov
push
fsubrs
add
or
repz
enter
add
mov
mov
add
dec
and
adc
dec
adc
adc
adc
add
out
popa
int3
add
pushf
repnz
mov
or
mov
out
jmp
clc
push
pop
push
push
fxch
dec
mov
dec
in
or
cmpb
adc
push
rorl
and
and
push
jb
add
adc
mov
pusha
aam
cmp
insb
cs
movsl
push
testb
dec
mov
lahf
push
push
std
and
out
cmpsb
mov
cmpps
shll
insb
lahf
shlb
cli
je
cltd
iret
std
or
pop
sti
add
leave
cmpsl
push
aam
xor
inc
jno
cmc
mov
mov
push
xlat
lock
cmp
mov
or
int3
jmp
push
imul
stos
cmpsb
adcb
mov
adcl
add
and
jmp
dec
rcll
adc
dec
dec
mov
xchg
or
sub
mov
stc
outsl
pusha
jl
push
pop
std
mov
mov
xchg
lods
faddl
fstp
call
bnd
ret
out
pop
mov
dec
popf
and
mov
stc
lret
lock
nop
lods
fadds
push
push
insb
aad
dec
loopne
or
pusha
jge
stc
mov
mov
mov
adc
repnz
add
mov
inc
nop
mov
stc
hlt
sub
shr
lock
fdivr
hlt
mov
push
push
insb
fisubs
enter
shrb
cltd
repnz
pop
mov
test
int3
cld
xchg
or
mov
push
pop
jo
arpl
faddl
push
pusha
fcmovnu
lahf
mov
aaa
cmp
loope
notb
push
push
das
cmc
or
sub
stc
adc
sbb
rolb
rcrb
mov
into
adc
or
mov
lods
add
rcl
push
push
cs
aad
or
inc
xorb
out
cmc
sbb
mov
adc
cmpl
pop
sbb
pop
addb
mov
sahf
int3
xor
shl
adc
in
jg
fcoml
outsb
push
fcmovbe
cld
shlb
cmp
subb
or
push
imul
lods
adc
outsb
clc
fs
push
leave
add
sub
lahf
lret
sub
ljmp
cmpsl
das
stc
push
dec
pop
or
outsb
cld
in
cmp
or
mov
je
repz
scas
adc
xchg
jle
mov
or
mov
addr16
in
mov
mov
sub
cmp
dec
faddl
xchg
mov
xchg
cli
stc
ret
repnz
fdivl
ret
fsubp
gs
js
or
cmp
xchg
lods
scas
movsl
mov
xlat
loope
xchg
int3
jo
mov
gs
mov
popa
jae
jp
nop
fcom
rcll
jbe
sbb
pop
out
jmp
and
popf
mov
loop
inc
add
shll
imul
test
in
and
sahf
xchg
xchg
mov
lcall
or
inc
fsubrs
pop
test
in
out
dec
push
out
arpl
mov
adc
mov
cmpl
in
mov
int3
push
scas
fadds
mov
jmp
mov
adc
jo
push
mov
pop
mulb
or
xchg
enter
stc
push
mov
test
mov
mov
fisubl
outsb
adc
cmp
jno
orb
andb
dec
pop
push
repnz
adc
sbb
lahf
sub
or
andb
jne
xchg
stos
pop
jmp
cld
jmp
dec
movsb
jg
popf
dec
mov
aaa
repnz
sub
outsl
orb
add
add
sub
or
icebp
mov
filds
or
jg
mov
lea
sub
or
loopne
dec
pusha
push
sbbb
in
cmp
call
pushf
sub
dec
push
jo
xchg
fsubrs
fnsave
jge
push
add
dec
js
inc
sbbb
sub
and
lret
rolb
repnz
insl
dec
pop
out
lea
push
test
push
stos
cmpsb
fldt
mov
add
sbb
jbe
cmc
dec
loope
dec
repz
jmp
xchg
lock
fucomip
loopne
idiv
stc
rol
jmp
ror
lret
shlb
jp
es
dec
jo
adc
adc
jge
cmp
mov
sub
test
and
and
sub
or
push
inc
fisttps
mov
loopne
dec
and
and
cs
pop
movsb
push
stos
lods
sub
scas
sub
pop
inc
adc
adc
push
cmp
jge
int
in
pop
jg
dec
xchg
loopne
or
mov
in
xor
push
xchg
aaa
dec
mov
dec
ja
roll
icebp
mov
in
loopne
repz
clc
ja
inc
mov
repnz
xchg
ret
or
push
mov
in
icebp
jg
aam
mul
negl
or
shll
or
adc
bswap
loopne
pop
add
dec
cmp
rorb
shrb
sbb
dec
in
add
pop
sbb
mov
push
push
sbb
cmp
or
sub
outsl
dec
or
imul
in
lcall
inc
push
ret
repz
and
in
mov
sbb
and
cmp
adcb
cmp
aam
pop
cmp
cmp
mov
mov
cmp
fs
jno
xchg
sahf
push
rorb
pop
pop
and
xchg
cld
repz
dec
subl
mov
test
call
cmp
inc
fwait
xchg
mov
ds
mov
pushw
xor
mov
cltd
jae
nop
mov
loopne
cld
iret
clc
add
and
adcb
jb
std
push
aas
cmp
pop
cmp
popf
nop
mov
mov
cmp
jb
mov
mov
dec
subl
xor
bound
jle
sbb
aaa
sub
js
push
and
jl
jle
adc
and
jns
fcoms
xor
xchg
xchg
xchg
xchg
cmp
outsl
loopne
cmc
stos
lcall
mov
jp
adc
aas
mov
cmp
pusha
dec
jle
invd
mov
cmp
lret
ret
stc
cmp
lahf
shrb
cmc
leave
cmp
shrl
xchg
mov
clc
pushf
xor
cmp
add
insl
je
pop
adc
cmc
inc
das
outsl
dec
stos
outsl
std
xchg
gs
leave
loop
sbb
bound
cmp
xchg
mov
jo,pt
mov
sbb
inc
leave
push
rcrl
push
cmp
jl
jle
adc
cmp
mov
cmp
imul
cltd
rcll
bound
outsb
jle
js
adc
sub
xchg
push
mov
aaa
fwait
and
adc
and
inc
loop
and
imul
xor
data16
int3
not
stos
decb
dec
in
push
jg
stos
leave
out
rolb
sub
ds
daa
inc
xor
imul
nop
jno
cmp
sarl
jmp
fwait
cmpsb
stos
aad
mov
cmp
fistpll
std
add
push
lock
repnz
aaa
fmuls
cwtl
dec
in
callw
and
push
jp
popf
inc
fbstp
and
int
push
mov
jp
aam
insl
scas
rorb
loop
pop
pop
test
cmp
cmp
xchg
insb
adc
dec
xor
xor
bound
or
cs
push
inc
insb
push
and
jae
and
sbbb
in
mov
jae
int
or
pushf
inc
cmpsl
xchg
mov
aas
sub
push
stos
ret
stc
cmp
add
cmp
xchg
cmp
xor
das
lea
data16
arpl
fnsetpm(287
call
aam
sbb
push
dec
push
cmpsl
das
arpl
outsl
out
jno
and
xchg
add
jb
stos
mov
adc
call
add
mov
aas
inc
fistps
cmp
fsts
sti
and
leave
call
fimuls
xchg
dec
and
adc
cmp
leave
mov
push
cmp
inc
jecxz
adc
gs
mov
aad
adc
add
das
sub
ret
es
xchg
or
jmp
xor
repz
in
and
in
cli
mov
int3
sarb
insb
das
or
sub
filds
cld
jb
and
mov
leave
cmp
leave
mov
bound
mov
daa
aas
scas
das
mov
jno
cmp
push
or
mov
shrl
xor
adcb
ss
das
mov
or
and
pop
sarl
ror
jmp
in
addb
lcall
cmp
sti
inc
je
loopne
cmp
sbb
or
div
aaa
and
arpl
xchg
pop
cmp
cmp
sbb
add
xchg
bound
jo
cmpl
xor
dec
or
and
jae
cmp
adcl
fs
ret
jecxz
das
cmp
je
loop
outsb
cmp
lea
lcall
cmp
insl
movsb
data16
jo
cmp
shll
mov
loop
or
ss
and
mov
xor
hlt
and
in
inc
es
push
lock
cmp
cmp
mov
jl
inc
adc
xchg
and
mov
sahf
jecxz
mov
xchg
xchg
fbld
mov
movsb
in
cmp
dec
cmp
in
and
cmp
push
or
inc
test
loop
push
adc
jle
fcomps
xchg
lods
xchg
les
inc
sub
mov
insb
or
adc
and
xor
dec
lock
js
jp
push
add
outsl
jle
js
jp
adc
and
xchg
outsb
adc
in
add
das
insl
dec
sahf
outsl
mov
xor
js
dec
push
cmp
cmp
clc
jo
cmp
test
rorb
xchg
adc
inc
int
lock
cmp
cmp
inc
in
loopne
cmp
iret
push
or
xchg
filds
xchg
in
mov
flds
fucomp
or
fiaddl
dec
mov
jmp
inc
in
ret
ljmp
xorl
mov
leave
and
push
fnstcw
scas
jmp
fdivl
rol
sbb
cmp
pop
call
mov
sarb
and
ret
cmp
xor
insb
push
xor
mov
in
or
daa
jle
mov
xchg
jbe
jbe
jbe
jbe
pop
loope
xrelease
orl
mov
movsl
mov
shll
adc
cmp
addb
pop
test
xchg
xor
lahf
movb
fmul
out
out
in
or
dec
mov
push
jle
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loop
call
jl,pt
jle
js
jp
je
adc
aaa
pop
lahf
adc
popf
sub
cmp
inc
or
and
das
loopne
adc
mov
loop
add
push
sahf
xchg
adc
pop
das
bound
outsl
fisttps
call
mov
inc
jl
jle
js
jp
je
dec
push
push
jo
sahf
pop
insb
rorl
dec
push
push
inc
rorl
bound
dec
xor
or
mov
sbbb
imul
ljmp
scas
dec
not
outsb
jbe
and
and
mov
cmp
cmp
or
int3
inc
lret
lea
or
pop
ss
in
lret
call
into
and
insb
test
clc
stc
xchg
pop
pusha
ds
push
or
add
movl
bound
jae
in
nop
or
mov
sub
inc
scas
ja
sbbl
aas
push
adc
xlat
sub
and
cmp
xchg
cmp
xor
test
das
xchg
dec
loopne
divl
mov
xchg
negl
adc
jo
pushf
fmuls
ficoml
ds
leave
mov
mov
xchg
shl
xchg
addb
orb
cmp
sub
pushf
jb
adc
push
mov
sbbb
cmp
xchg
xor
das
fidivs
cs
aaa
dec
in
rcll
mov
jmp
adc
add
mov
in
mov
and
sub
mov
cmp
test
ljmp
loopne
call
inc
xor
loope
cmc
nop
xor
dec
lcall
sti
pushf
nop
cwtl
add
cmp
rolb
sub
xchg
and
subl
leave
out
cmpsl
cmp
adc
ds
pusha
adc
add
inc
das
jg
lds
cmp
jl
in
call
pushf
out
cmp
mov
mov
lcall
xchg
mov
mov
mov
sub
call
jl
pop
push
push
and
jae
cmp
addb
cmp
insl
sub
xchg
cli
popl
aas
pop
das
adc
outsl
xor
popf
in
test
pop
cmp
jmp
cmp
jl
jle
mov
push
jbe
jbe
jbe
jbe
jbe
jbe
jbe
inc
mov
loopne
jmp
loopne
andl
xor
ret
pop
rcll
jge
and
add
sbb
aam
mov
xchg
mov
je
test
ret
mov
ss
pushf
jmp
jmp
shrb
loope
and
jo
and
in
jl
js
je
je
rolb
xchg
call
and
bound
jns
cli
mov
xor
leave
outsl
rorl
sbb
in
jae
xchg
andb
mov
int3
jbe
jbe
dec
rclb
inc
pslld
or
fmuls
shr
cmp
cmp
inc
imul
bound
jno
cmp
mov
mov
bound
pop
xor
aaa
outsb
cmp
jo
rcrb
push
and
pusha
xchg
jp
jmp
cld
in
or
mov
pop
cs
into
xchg
push
push
insb
xchg
jle
mov
cmp
pop
cmp
dec
roll
shll
loope
stc
cmp
stc
xchg
stc
ljmp
cmp
addr16
push
inc
xchg
pop
pop
pop
adcb
outsl
xor
aaa
jno
lea
mov
xchg
mov
cmp
mov
clc
adc
mov
or
out
repnz
int3
loopne
sbb
sbb
sahf
bound
and
adc
pop
push
out
call
add
pop
cmp
xor
xor
das
lea
xor
mov
js
leave
fcmovb
add
andb
xchg
cmp
xor
fsubrs
xchg
movsl
jecxz
loop
jmp
stc
enter
sar
mov
sub
insb
xchg
push
divb
aaa
les
in
cmp
dec
cmp
pop
xor
xor
insb
aaa
push
aaa
mov
mov
int3
aaa
enter
sub
xchg
test
addb
adc
sub
dec
pop
dec
inc
gs
fiadds
and
mov
cmp
imul
and
lcall
leave
loopne
cmp
add
outsb
inc
mov
ret
in
jb
cmp
sbb
sarl
stc
stc
in
adc
pop
cmp
ss
in
jmp
ret
dec
cmpsb
pop
adc
icebp
ret
sub
insl
mov
mov
xor
sarl
jo
in
fiadds
and
xchg
ret
in
mul
xor
in
push
call
stos
pop
jecxz
add
in
orb
jbe
push
out
adc
scas
test
orb
xchg
push
mov
popa
stc
jne
push
aaa
mov
adc
xchg
xchg
mov
inc
pop
rep
icebp
aas
das
subl
mov
xchg
sarb
adc
cmp
sbb
cmp
in
loopne
cld
push
clc
push
hlt
push
pusha
hlt
js
ja
mov
test
scas
subl
mov
into
mov
fisubrl
hlt
div
repz
or
add
sbb
aaa
cmp
ss
cmp
or
mov
cmc
adc
add
xor
cmp
dec
xor
xor
call
es
add
inc
ss
das
fmuls
outsl
std
xchg
call
insb
sub
sub
repz
and
addl
mov
cmp
aas
dec
mov
dec
cmp
fs
pusha
sarl
je
jo
mov
cmp
bound
xlat
je
adc
xor
jno
and
cwtl
test
and
jmp
jb
mov
enter
pop
pop
fcmovb
xchg
fcompl
sti
dec
sub
sub
pop
ret
loop
mov
jecxz
jecxz
jecxz
loop
js
bound
push
or
dec
gs
popa
popa
out
jne
jno
or
jbe
jbe
inc
lcall
push
aam
in
and
sub
aam
pop
or
imul
mov
or
test
in
sub
cmp
lods
or
inc
repnz
pop
loop
inc
xlat
xchg
lret
xchg
jl
cwtl
xchg
xchg
push
movsb
xor
adc
jnp
mov
and
push
aam
lahf
push
daa
cmp
push
mov
iret
xor
sub
and
ja
mov
clc
insb
sbb
icebp
call
lcall
xor
xor
xor
lods
cmp
xorb
pushf
xchg
dec
lods
loopne
pop
daa
and
jno
push
and
leave
sub
cmp
push
push
es
cmp
push
fldcw
mov
aaa
in
es
dec
push
ds
adc
scas
lods
iret
rcl
aas
adc
ja
neg
sub
bound
push
xor
inc
push
cld
push
lcall
lods
jbe
jbe
dec
fdivl
mov
dec
push
xchg
fistl
sti
xchg
xor
lods
xor
sbb
mov
mov
mov
stc
leave
not
int3
or
sbb
jns
jb
mov
pop
in
enter
xlat
xchg
mov
stos
cmp
inc
mov
int3
sbb
and
cmp
cmp
pop
sub
es
dec
mov
test
xchg
xchg
push
xor
jecxz
loop
push
stos
add
nop
push
and
inc
adcb
pop
adc
xchg
in
push
call
mov
xchg
cltd
hlt
hlt
shl
sti
mov
xor
arpl
cmp
sub
pushf
sahf
push
push
mov
add
enter
repz
inc
pop
cmp
push
inc
cmp
push
je
xor
xor
loopne
hlt
sub
fcompl
inc
push
xor
mov
lret
insl
dec
popa
in
call
mov
jecxz
add
sub
xchg
adc
into
mov
rol
dec
push
sbb
push
clc
jl
add
test
dec
jmp
jb
mov
xchg
mov
stc
fisubl
loopne
hlt
push
or
and
mov
int
pop
aad
icebp
cmp
cmp
push
dec
iret
rclb
adc
repnz
lods
pop
in
jae
mov
push
aas
cmp
dec
pop
xor
jge
add
jmp
pop
lods
loope
push
or
inc
push
push
mov
mov
shlb
pop
and
xor
push
nop
dec
dec
push
xor
aam
cld
jmp
bound
jl
inc
add
mov
and
mov
aaa
xorb
sub
out
ljmp
aaa
hlt
push
push
cmp
rcrb
push
sub
and
add
push
xor
pushf
test
andb
add
xchg
lret
sub
cmp
pushf
call
jl
jo
mov
xchg
pushf
jecxz
loop
loopne
jbe
jbe
jbe
jbe
jbe
jbe
jbe
adc
cmp
xchg
pop
adc
or
mov
nop
subl
bound
jns
jb
mov
cwtl
dec
add
xchg
dec
decb
pop
mov
mov
in
jbe
and
in
cmp
push
cwtl
pop
loopne
mov
insl
and
mov
jl
adc
xchg
jo
cltd
nop
clc
shlb
add
js
xchg
cld
cmp
pop
ret
inc
push
outsb
xor
jo
dec
fwait
loopne
in
cmp
insb
cmp
push
mov
sahf
mov
xor
push
in
or
repnz
mov
or
inc
and
in
xchg
pushf
lahf
xchg
inc
or
mov
jo
cmp
ds
in
cmc
cmp
pusha
mov
inc
dec
adc
pop
pusha
mov
push
pop
movsb
cmp
ret
xor
repnz
shlb
cmp
jae
je
test
les
cmp
xor
aaa
bound
jl
jle
inc
xchg
je
jno
add
rcr
rclb
pusha
adc
and
and
cmp
xor
dec
xchg
js
je
nop
mov
or
or
add
add
sbb
cmp
jbe
push
sub
aaa
and
and
jae
xor
dec
jecxz
std
pop
out
lods
imul
lods
aam
in
leave
in
push
push
add
movsb
adc
sub
and
cmp
divl
dec
insl
cli
repz
or
insb
xor
loope
lea
sbb
loopne
cld
in
loopne
leave
push
dec
add
lea
sbb
ficoms
adc
sub
sub
xchg
cmp
fmuls
inc
hlt
inc
hlt
pop
hlt
pop
hlt
push
hlt
push
hlt
insb
lahf
nop/reserved
nop
sahf
js
je
mov
sbb
int3
test
scas
aaa
mov
adc
jo
mov
aam
mov
in
inc
cld
fsubrs
dec
hlt
push
mov
inc
or
sbb
sbb
sub
sub
jbe
jbe
dec
xor
dec
mov
inc
daa
pop
xor
push
pop
ds
insb
jae
mov
test
and
nop
jbe
xor
cld
inc
and
insb
mov
popa
sbb
pop
or
fptan
cmp
or
pop
test
clc
mov
cwtl
lods
xchg
pop
mov
xchg
xchg
adc
or
push
ret
nop
jo
nop
jecxz
jecxz
jecxz
push
and
dec
lods
push
jl
xchg
cld
nop
clc
mov
rolb
sub
movsb
mov
mov
xor
push
je
add
cmp
sub
jp
jbe
bound
pop
sahf
pop
sahf
dec
ds
loopne
jbe
jbe
jbe
les
pusha
fmuls
cmp
sbb
mov
test
ret
pop
jp
inc
nop
mov
add
xor
loop
push
mov
mov
jbe
inc
loopne
leave
repz
dec
add
pop
fsub
pop
insb
jb
shlb
leave
adc
fisubl
fidivs
ret
pop
stc
push
stc
insb
stc
fs
jl
je
mov
test
pushf
and
stc
lods
stc
movsb
stc
mov
stc
les
aaa
aam
in
shll
push
cmp
pop
lret
dec
sub
push
jbe
jbe
pop
movsb
pop
out
mov
jbe
roll
jmp
or
cmpb
inc
mull
xor
cmpsb
and
or
pop
ss
cwtl
movsl
lahf
sub
sahf
movsl
popf
sub
pushf
movsb
add
mov
jp
jmp
mov
mov
add
pop
and
loope
add
aad
mov
pop
and
scas
sub
mov
jb
imul
adc
adc
icebp
or
inc
mov
icebp
bound
pusha
or
sbb
in
add
adc
push
or
repnz
or
cmp
repz
jno
mov
inc
dec
sarb
cmp
adc
inc
inc
mov
adcl
inc
jl
add
inc
xchg
mov
fildll
dec
or
dec
cmc
inc
decb
pop
repnz
push
hlt
repnz
mov
es
xchg
add
rcrb
cmpsl
sub
push
mov
in
adc
inc
cmpsb
das
data16
icebp
inc
or
inc
adc
lret
xor
push
stos
clc
add
negl
loopne
int3
or
push
subl
pop
cmp
and
push
mov
add
jge
jecxz
jmp
es
adc
xchg
push
and
and
mull
cmp
or
mov
cwtl
pushf
mov
sbb
sub
or
call
mov
add
xlat
in
adc
mov
xchg
cltd
cmp
mov
sbb
in
mov
xchg
inc
pop
insb
pop
jo
dec
cmp
jge
and
in
jmp
call
pop
sub
xchg
pusha
push
xor
push
pop
push
jmp
add
jge
mov
lods
cli
dec
mov
aas
stos
or
add
iret
dec
mov
aam
scas
out
jmp
cmp
sbb
sub
cmp
xchg
iret
test
cmpl
and
ret
adc
push
adcb
push
call
adc
pop
mov
pop
and
push
adc
sub
push
vprotq
in
inc
sub
jge
aas
inc
jle
push
push
mov
data16
inc
sbb
call
ja
insl
lret
es
mov
dec
je
testb
adc
xchg
rcrb
cltd
mov
mov
cmp
push
jl
jo
jmp
xchg
push
xor
test
add
inc
cmp
jge
pop
mov
or
jo
sbb
add
bnd
jae
mov
cs
jle
and
cmp
jae
adc
mov
call
mov
push
xchg
sub
incl
sbb
mov
jge
xchg
sbb
pop
add
push
xor
insb
and
dec
fs
cmpsl
mov
lods
jo
add
sub
xor
sub
push
dec
add
sub
imul
and
jbe
jmp
out
fnsetpm(287
jno
sub
mov
xor
push
sbb
or
cmp
add
sbb
xor
sub
or
add
dec
adc
add
popf
cmpsb
dec
or
adc
test
dec
pop
mov
shl
cli
xor
addb
sub
adc
or
push
mov
mov
inc
or
sub
add
sbb
call
inc
sti
sbb
push
sbb
lock
insb
or
adc
push
cmp
dec
pop
mov
push
or
lea
sti
mov
mov
sub
xor
jl
fcoml
getsec
push
adc
pop
fxrstor
setns
jge
call
inc
push
mov
lods
push
jne
push
les
cwtl
sbb
cltd
mov
insb
repnz
or
mov
pop
mov
jae
sbbb
push
inc
xchg
incb
hlt
fwait
daa
fs
inc
push
js
push
pop
imul
and
inc
or
scas
popa
enter
mov
cmp
sub
xor
rcrb
inc
dec
jle
mov
addr16
or
xchg
sbb
mov
mov
sbb
or
push
lea
pop
mov
or
pmulhuw
insl
jo
push
jae
ja
mulb
push
push
push
sarl
iret
lods
or
mov
push
inc
or
icebp
int3
push
mov
xor
mov
pop
or
mov
cmp
pop
pushf
mov
sahf
ss
icebp
pushf
stos
mov
mov
xor
pop
sbb
push
push
or
jle
mov
jne
cmp
cmp
bound
cld
pop
push
or
fsts
xor
xor
sub
call
pop
xchg
inc
loopne
testb
sbb
dec
aas
sbb
loop
add
in
mov
and
and
sub
loopne
insb
xchg
sbb
pop
inc
repnz
add
sub
mov
and
jg
dec
or
cwtl
dec
or
mov
pop
pushl
shl
das
xchg
dec
incl
jbe
in
lahf
outsb
iret
sub
lret
push
xor
movsb
iret
dec
and
adc
inc
dec
push
js
shll
mov
test
sub
lret
mov
xchg
mov
loope
mov
inc
pop
xor
pushf
mov
in
adc
insl
sub
sbb
scas
add
daa
push
inc
call
sbb
and
xor
fldcw
add
mov
add
add
adc
loop
add
or
pop
inc
pop
mov
js
sarl
sbb
iret
lea
pop
xchg
cld
jno
push
pop
test
mov
iret
adc
loopne
add
or
les
or
cld
notl
sub
jge
and
lea
push
mov
mov
jp
push
loopne
xor
fiadds
push
repnz
push
pop
leave
imul
pop
enter
and
sbb
icebp
stos
sbb
sub
sub
dec
pusha
addl
mov
sub
call
sub
jno
orl
push
adc
and
pop
dec
insb
andl
sahf
dec
mov
dec
scas
adc
lcall
pusha
sub
dec
pop
orl
enter
icebp
or
add
aas
sbb
lcall
mov
pop
adc
shll
jo
dec
dec
and
jl
insl
arpl
add
es
outsl
sbb
or
mov
inc
mov
int3
inc
inc
dec
in
mov
cwtl
cmp
or
test
sbb
xor
push
imul
out
mov
setle
pop
imul
inc
jl
insb
xchg
addr16
bound
out
stos
js
push
jg
jne
ja
jbe
sti
adc
sbb
insb
push
arpl
mov
add
es
sbb
mov
js
push
les
xchg
test
adc
xor
cwtl
cmp
or
cltd
sub
adc
clc
or
addr16
insl
data16
dec
add
sbbl
fisttps
xor
jmp
in
icebp
push
push
cmp
lret
ljmp
imul
mov
gs
insb
out
arpl
and
xor
sbb
stos
adc
rcrb
js
popf
cmc
sbb
or
push
gs
popa
outsb
mov
pop
or
pusha
gs
or
jl
imulb
imul
movsb
dec
and
sarb
xor
push
cmp
add
or
push
not
outsb
and
scas
and
dec
pusha
out
jne
gs
mov
dec
sub
sbb
push
pop
inc
sub
and
mov
outsl
jns
dec
dec
stc
bound
insb
xchg
fsubr
scas
push
xor
jl
and
xor
pop
xor
pop
mov
repz
outsb
ss
test
insl
jle
les
cmp
xor
add
xchg
xchg
js
arpl
andl
mov
or
pop
jg
fsubs
test
mov
xchg
adc
loope
into
dec
test
lea
test
mov
test
adc
and
xor
xor
dec
sbb
sarl
pop
pop
sub
aaa
mov
outsb
ffree
test
movsl
mov
sub
stos
push
jl
push
dec
inc
testl
jmp
div
imul
xchg
add
cs
jo
xchg
xchg
xor
jecxz
and
dec
sbb
pop
or
pop
push
or
mov
jns
jle
ljmp
jle
cmp
push
push
mov
enter
sub
aas
cmp
xor
jle
adc
cli
pop
imul
outsb
and
and
ss
sub
xlat
push
jecxz
inc
insl
and
cmp
lea
pop
imul
aas
popa
jge
push
insb
inc
sub
outsl
sbb
dec
js
jl
inc
idivb
bound
xchg
push
insb
loop
dec
mov
push
jge
xor
dec
xchg
push
fs
xor
xor
daa
jbe
cmp
std
or
insb
inc
insl
sbb
les
fs
inc
dec
pop
subl
jg
mov
and
sbb
cmp
pop
xor
call
jle
je
cmp
and
ret
mov
sub
sarl
cmpb
sahf
sbb
cmp
aaa
orb
pop
pop
push
arpl
outsb
cli
cmp
push
and
cmp
jnp
movl
and
and
in
xor
cltd
inc
xor
int3
dec
inc
cmp
ret
or
add
in
jmp
repnz
jmp
dec
sbb
popa
or
idivb
dec
xchg
inc
xchg
pop
sbbl
aaa
insl
aaa
push
addr16
jge
jne
push
jbe
jbe
inc
shl
in
push
hlt
hlt
icebp
cmp
adc
sub
ds
xor
psraw
jp
or
pushf
mov
mov
nop
mov
cli
jnp
push
pop
adcl
jl
bnd
mov
test
pop
lock
cld
pop
into
xchg
ret
xchg
sti
icebp
and
das
add
adc
cmp
dec
movl
mov
jg
xchg
adc
popf
loopne
movsb
hlt
mov
xchg
rcrl
jo
cmp
xchg
shll
mov
jl
mov
or
stos
je
adc
xchg
and
ds
or
ds
lea
mov
aas
and
popa
jne
loopne
movsl
scas
mov
in
in
adc
push
cmp
inc
add
add
sbb
push
inc
sub
sub
vshufps
or
loopne
inc
stos
push
inc
cmp
add
icebp
mov
hlt
pushf
pushf
lea
jmp
sub
pushl
pusha
pushf
mov
rep
pop
mov
mov
push
lea
jmp
cmp
pushl
lea
jmp
lea
bt
clc
stc
sub
cmc
pushf
jmp
push
mov
pusha
lea
call
pushf
pushf
movb
lea
jae
stc
xor
pusha
call
dec
daa
xor
add
jge
int
lret
adc
cmp
sbb
add
xor
dec
add
xchg
shll
jbe
sbb
lea
in
cwtl
les
das
orb
cs
in
adc
add
imul
xor
ret
adc
mov
stc
jmp
mov
jmp
jns
pusha
xchg
jmp
jno
xchg
fldl
mov
push
lea
adc
push
cmp
push
mov
sub
scas
pop
inc
movsl
adc
dec
orb
mov
ret
std
sarl
popa
lahf
fnstenv
push
mov
dec
xchg
loope
mov
aas
cs
popf
inc
inc
jecxz
ret
adc
mov
inc
pop
fcoms
cmp
das
xchg
adc
add
mov
mov
mov
scas
jle
scas
inc
sub
mov
bnd
imul
ret
sti
mov
bound
add
push
sub
mov
ljmp
daa
pop
imul
fldl
adc
popa
loope
pop
dec
xchg
test
fmuls
and
pusha
mov
cmc
push
add
pop
xchg
outsl
mov
lods
xchg
lods
pop
ja
stos
adc
ret
pop
loop
pop
lods
mov
jecxz
sub
push
sti
mov
xchg
mov
push
test
test
mov
cwtl
xchg
jb
mov
hlt
sbb
lret
inc
mov
imul
and
sub
adc
ss
pushf
imul
add
sbbl
popa
sbb
out
pop
call
aas
in
sbb
je
dec
cli
mov
outsb
cltd
xchg
aas
jae
faddl
sub
dec
test
loopne
xor
mov
inc
test
and
cmc
pop
and
lock
mov
cmp
shr
sarl
xor
sub
sbb
sub
cmpsl
pop
mov
ss
rol
les
test
mov
cmp
or
and
cmp
loopne
mov
push
bound
adc
aad
cmp
dec
fmull
idiv
out
xor
movsl
sbb
dec
dec
lods
call
sahf
loop
lret
idivb
gs
popa
dec
pop
std
add
loope
stos
mov
pop
push
push
and
push
shl
sete
sub
sar
bsr
lea
add
bts
ror
pusha
call
ljmp
fcmovbe
or
cltd
and
jns
pop
gs
into
in
std
add
aas
cmp
repz
inc
dec
lods
cmp
mov
adc
pushf
xor
lods
adcl
in
cmp
jb
or
pop
mov
push
and
sbb
mov
jge
push
push
cld
or
stos
insl
adc
pop
cmp
pushf
pusha
lea
ja
jmp
into
and
add
pop
aaa
add
and
add
pop
aaa
push
pusha
lea
jne
btr
daa
call
pusha
bt
test
push
lea
je
clc
pushf
sub
cmp
mov
cmp
pushf
mov
lea
jmp
sub
lea
pushf
call
jmp
jns
mov
push
scas
int
cmp
xchg
mov
mov
repnz
mov
inc
call
test
shlb
dec
jo
mov
sbb
data16
push
ss
loopne
mov
outsl
das
xchg
jmp
jge
inc
xor
xchg
pushf
ja
jb
aad
sub
filds
cmc
sbb
jecxz
enter
lock
pusha
jmp
lea
je
test
jno
clc
cmc
cmp
jno
je
pusha
lea
jmp
stc
jmp
les
pop
flds
mov
xor
adc
or
jmp
fcmovne
pop
xchg
mov
and
pusha
adc
inc
xchg
jbe
sub
cwtl
lock
sahf
push
adc
mov
lock
in
sbb
and
fcoml
stc
cmp
bt
neg
pushf
rol
jmp
mov
bt
cmc
test
cmpb
jmp
je
stc
pusha
clc
or
push
push
lea
je
movsbw
push
bsf
sub
aam
neg
lea
mov
pusha
shl
rol
cmc
shr
add
shrd
shrd
shr
pusha
mov
movb
or
push
mov
jmp
lock
add
into
mov
out
ss
aad
test
or
push
das
es
lds
stos
xor
add
or
test
dec
cmp
cmpl
or
mov
lods
fs
push
mov
ja
call
push
jp
in
outsb
push
jmp
pushf
aaa
push
pop
dec
xchg
ret
fstps
repz
psraw
mov
mov
arpl
mov
or
xchg
cmp
cmp
pushf
call
lea
jb
cmp
cmc
cmc
cmc
cmpb
pushf
pusha
lea
jne
shld
mov
jmp
or
mov
fstl
les
cmp
xchg
sar
out
sbb
dec
pop
xlat
cmpl
decb
cmp
mov
cmp
dec
jb
shrl
push
pop
push
pop
sbb
dec
inc
sub
scas
cmpsl
push
jo
outsl
out
jmp
mov
xor
cmp
and
pop
daa
lods
daa
faddp
push
scas
rcl
les
cmp
in
dec
jg
pop
adc
js
lcall
jne
adc
fisubrl
mov
loopne
xor
lahf
or
test
lods
frstor
int3
aam
add
mov
add
jmp
jmp
outsb
call
jb
cmc
cmp
call
pusha
test
jmp
pushf
shl
jmp
sti
aad
mov
loope
cmpl
test
and
orb
js
insl
lods
aad
inc
sub
stos
pop
scas
or
insl
cmp
jo
pop
pop
adc
sub
fstl
inc
jo
addr16
fmul
js
scas
xor
or
cmp
jns
push
jo
sbb
push
enter
pusha
outsl
adcb
movsb
mov
sub
adc
push
fisubrl
stc
call
mov
add
jl
pop
hlt
lods
push
cld
hlt
mov
cmp
inc
daa
filds
pop
fisttps
jnp
mov
fsubp
push
rcl
xor
sub
adc
mov
fdivl
pusha
mov
xchg
jge
or
ret
je
cmpb
leave
sub
mov
lea
dec
ficompl
push
addr16
cwtl
je
xlat
jmp
xrelease
stos
jp
arpl
jle
jmp
xchg
mov
sbb
push
pop
ja
xchg
fs
jnp
push
outsl
sbb
rclb
and
sbb
jmp
lods
in
stc
aam
mov
xchg
pop
dec
movswl
pop
movl
fisttpl
push
cmp
dec
ret
mov
cmp
std
into
lcall
mov
ficoms
cmp
jg
cmp
ljmp
sub
in
adc
cmpl
lret
inc
or
ljmp
and
mov
mov
jnp
jns
dec
jmp
jno
into
dec
insl
lcall
arpl
cld
push
mov
cmpsb
icebp
add
jge
std
and
fcomps
cmpsb
push
or
push
push
xor
push
pop
iret
ror
inc
mov
xorb
insb
andb
mov
sbb
xor
inc
mov
xchg
dec
cmc
int
or
mov
fs
sbb
mov
dec
pop
jg
inc
aas
imull
adcb
mov
lret
mov
enter
jle
cmpsl
push
jae
cmp
push
xchg
lret
push
mov
in
lock
xorb
fwait
xlat
mov
jo
cli
xor
std
mov
add
rorl
cwtl
ret
mov
jmp
inc
dec
inc
not
xchg
add
jmp
lea
jae
call
mov
pusha
push
lea
jmp
xor
mov
dec
mov
add
xor
test
daa
movl
and
inc
repz
mov
pop
js
call
fbld
cmpsb
aas
out
mov
push
ret
xchg
inc
inc
adc
xor
popa
lods
xor
nop
xor
loop
cwtl
inc
sbb
jmp
xchg
mov
dec
pop
jno
in
jbe
out
stos
push
into
mov
ret
add
cmp
mov
gs
test
dec
cmpsb
movsl
fcom
lahf
pop
jae
mov
cs
loop
orl
and
cmp
cmc
pushf
xchg
rcr
movsbw
sar
mov
cmp
sub
push
jmp
repnz
push
dec
push
test
imull
les
or
jge
xchg
shrb
cs
movsb
scas
movsl
adc
ret
cmpsl
scas
out
lds
fucomi
xchg
icebp
or
xchg
lods
and
lock
xor
ss
push
or
and
mov
pop
ret
scas
mov
inc
popa
sub
ja
sbb
arpl
movsb
orb
mov
lcall
ret
pop
sbb
mov
or
mov
outsl
jmp
adcl
pop
pop
jbe
popa
inc
outsl
jb
popa
arpl
outsl
insb
insb
dec
bound
shl
sbb
mov
test
sub
mov
mov
movb
pushl
rep
call
cmp
das
rolb
hlt
in
fs
jnp
sti
push
sti
leave
pop
xchg
and
xchg
icebp
je
add
ficompl
add
sbb
inc
les
fmul
inc
imul
and
jno
sub
stos
pop
gs
xchg
jae
push
dec
fidivs
mov
jno
lret
dec
popf
shlb
in
adc
out
or
rolb
stos
arpl
mov
imulb
fmull
sub
xchg
mov
into
cmp
mov
in
adc
hlt
mov
jl
xor
mov
xchg
jge
lods
enter
sub
mov
out
mov
pop
push
mov
add
mov
filds
pop
jmp
aam
mov
xor
ret
pusha
pushf
clc
cmp
push
push
lea
ja
push
pusha
pushf
push
lea
jmp
into
repz
add
out
cmc
popf
fstl
push
sbb
std
aad
scas
movb
ds
add
cli
adc
jne
fiaddl
fnstsw
mov
out
pop
jmp
dec
sarl
pop
push
sub
xchg
pop
mov
scas
imul
lds
ss
movb
fsubl
fldl2t
loopne
cmc
xchg
cmp
push
aas
in
adc
loope
shlb
sub
leave
lods
std
pop
sbb
jmp
push
ja
pusha
imul
mov
cmp
clc
cmc
add
pushf
movb
pusha
lea
jmp
cmpsb
movsl
scas
iret
add
and
and
xchg
or
sbb
jnp
stc
insl
xchg
adc
xor
rcll
and
mov
outsl
sub
inc
mov
es
jmp
and
std
mov
pop
push
push
lea
subl
or
insl
les
inc
jge
xor
cli
jbe
jp
add
add
adc
int
cmpsb
pop
mov
and
scas
bound
fcmovu
mov
push
insl
cmp
dec
dec
xor
jnp
dec
sbb
jmp
ret
and
lea
jmp
cmp
mov
lea
jae
sub
mov
rcr
bswap
shl
test
mov
bt
pushf
call
call
clc
clc
sub
pusha
pushl
jmp
mov
iret
add
mov
and
stc
inc
jns
adc
dec
nop
cmp
sbb
adc
arpl
jae
and
xor
paddusw
loopne
mov
in
sbb
push
popa
in
inc
int3
xchg
ss
popl
outsl
lret
xchg
std
ss
shr
stc
fldt
nop
mov
jle
negb
mov
cmc
enter
dec
lock
mov
cwtl
xor
sub
adc
add
test
inc
neg
mov
pushf
test
push
cmc
test
pushf
call
pushf
pusha
movb
lea
jae
mov
or
shrd
mov
inc
btc
rcl
mov
setge
mov
push
pushl
sub
call
pusha
lea
ja
stc
not
jmp
pushl
pushf
rep
movw
mov
bswap
mov
mov
pushf
pushf
movb
lea
jmp
gs
pop
into
add
lods
in
xor
inc
fcoml
je
out
aaa
movsb
push
lcallw
lea
cli
xchg
hlt
mov
test
xchg
mov
lea
jbe
jle
stc
mov
mov
jns
jecxz
movsl
mov
sub
movsb
mul
adc
pop
push
jmp
es
jns
lcall
sub
xchg
sbb
adc
pop
imul
call
daa
insb
jp
add
push
out
xchg
lahf
push
iret
pop
jg
pop
outsl
xchg
stos
pop
sahf
add
test
xchg
into
mov
jbe
jbe
into
mov
inc
add
imul
inc
sbb
aaa
lcall
test
cmp
mov
cmp
add
nop
inc
jbe
add
cmp
xchg
cli
repnz
add
pop
incl
fcmove
jo
pop
es
int3
mov
mov
bound
gs
sub
ja
and
and
jbe
lods
movl
jns
pop
or
cmpsb
imul
pop
jl
xor
leavew
lds
aad
test
and
out
add
sbb
cld
push
enter
xor
jecxz
shr
pusha
cmp
jmp
call
not
pushf
movw
lea
jl
call
jmp
aad
mov
pop
jae
ret
dec
jae
mov
xchg
mov
push
rorb
push
call
nop
add
into
out
gs
mov
jne
aam
rcr
stos
xor
movl
mov
jmp
gs
test
jb
rorb
fidivl
sbb
test
xor
mov
dec
pushf
rclb
pushf
xor
test
loopne
and
popf
adc
lea
jae
push
test
xor
call
jp
or
mov
cwtl
nop
js
clc
pusha
sbb
fcoms
push
dec
incb
mov
scas
xchg
lods
stos
stos
inc
gs
jbe
mov
sbb
clc
inc
adc
inc
and
cwtl
xor
sbb
and
dec
outsl
and
daa
insl
fsubl
arpl
int3
add
xchg
dec
loop
add
mov
int3
pop
adc
push
ret
jmp
inc
inc
and
inc
xor
cs
in
js
in
rorl
add
out
insb
cld
iret
sbb
inc
repnz
sbb
fwait
jle
jne
dec
pop
lret
loopne
iret
test
fldt
sub
and
mov
xlat
out
pop
mov
mov
test
int
cmp
pop
pop
jmp
loop
shl
pop
or
in
lcall
xchg
std
lret
cmp
lock
lock
xlat
out
xchg
mov
or
cmp
mov
repz
gs
adcb
bound
dec
mov
push
add
xorl
pop
lcall
ja
iret
loop
sbb
add
ja
push
sbb
ror
pop
cmp
jmp
lret
add
cmp
dec
loope
mov
popa
mov
enter
pop
jge
fistpll
xor
push
mov
into
sbb
ds
adc
outsl
and
je
pop
add
fimuls
push
out
push
loope
sar
call
xchg
cmpsb
rclb
stc
popf
adc
mov
mov
into
pop
js
sub
je
or
loope
add
push
jmp
mov
lea
je
push
movb
sub
jmp
rcl
jecxz
add
clc
cmova
outsb
mov
out
push
das
or
mov
leave
add
popa
cmp
xor
pop
mov
pop
push
fnsave
pop
push
bound
push
mov
iret
lea
cmp
aas
or
inc
hlt
or
sbb
mov
lea
in
mov
mov
stos
out
mov
inc
mov
cmp
rcl
or
mov
sub
add
call
mov
sarl
pusha
lea
ja
inc
inc
not
pushf
call
lea
ja
jmp
or
xor
add
clc
mov
xlat
dec
jg
mov
add
cmc
lret
mov
sti
in
insl
jecxz
insb
dec
xorb
push
mov
les
outsl
stos
cmpsb
dec
adc
sub
mov
mov
pop
xor
fistl
dec
push
sti
out
push
cmpsl
stos
push
mov
or
dec
mov
andl
bound
ss
cmp
imul
push
jmp
les
mov
xor
add
pop
xchg
frstor
sub
sbb
pusha
lcall
cmp
sub
dec
sbb
fisttps
jb
inc
inc
lods
int3
mov
subl
test
fnsave
fs
pop
push
pop
andb
push
dec
es
cs
addr16
xor
shl
add
pop
scas
fwait
xor
test
xchg
xorl
rol
add
inc
lea
je
cmp
clc
jmp
lds
cmp
popf
jne
mov
ror
sarl
mov
pop
jecxz
xor
push
sub
mov
push
cmp
das
movsl
dec
cmp
and
stc
add
iret
dec
and
lods
pushf
movsb
push
aam
jnp
and
loope
cmpsl
mov
pop
mov
and
push
jbe
je
sbb
sbb
mov
mov
ffreep
call
pop
cwtl
adc
lock
add
enter
aad
push
int
mov
inc
in
in
les
mov
rolb
mov
sbb
cmp
push
lea
imul
cs
dec
shrb
mov
jl
mov
pop
rolb
jb
adc
jnp
xchg
into
pop
aad
xchg
xchg
mov
aam
out
adcl
adc
cld
cltd
clc
xchg
sub
cmpsl
out
movl
and
orl
sbb
inc
pop
lock
mov
adc
sbb
movsl
push
cmpsb
jmp
insb
lcall
fcomps
push
cmpsl
icebp
scas
cld
ss
dec
sbb
push
xchg
jecxz
je
or
shrb
mov
mov
sti
push
or
xchg
inc
imulb
roll
or
test
mov
jge
out
or
jnp
outsb
mov
not
jmp
call
sub
pusha
test
push
stc
pushl
popl
clc
jmp
cmc
cmc
mov
cmpb
push
lea
jne
lea
shl
cmp
xor
shld
dec
and
clc
mov
rcr
call
cmp
cmpb
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
movl
call
call
mov
mov
sbb
in
jne
xor
pop
mov
arpl
push
push
sub
adc
cld
sub
pop
and
or
add
or
bnd
pop
cs
mov
inc
fs
bound
dec
ret
add
ret
stos
pushf
dec
dec
cmpl
adcb
jle
data16
sub
scas
mov
pushf
movzbl
call
lea
push
movl
lea
je
push
mov
push
push
pushf
pushl
ret
pushf
lea
jne
xadd
bsf
sub
mov
adc
cmc
clc
sub
bswap
or
mov
jmp
call
test
test
mov
rcl
cmc
push
mov
movw
cmc
call
mov
mov
xchg
es
mov
push
fdivrl
pop
xor
inc
daa
push
cmp
in
adc
sub
loope
lds
xchg
movl
data16
in
aam
jne
in
push
jae
mov
adc
dec
sbb
adc
xor
ja
outsb
addl
sbb
and
sub
ljmp
mov
sub
jne
cmp
fldcw
ds
mov
xlat
les
fwait
dec
sbb
mov
add
dec
stc
inc
mov
repz
mov
fninit
jnp
sbb
scas
in
data16
mov
popaw
xchg
shrl
icebp
sub
cmovbe
es
inc
xor
add
pop
loopne
ljmp
shr
inc
mov
cli
push
cmp
cld
mov
addr16
xor
test
ja
push
ljmp
pop
outsb
mov
out
mov
rcll
imul
adc
shld
jmp
pushl
popl
pushf
jmp
xor
mov
pop
cmpl
lret
arpl
xorl
xchg
cmp
ret
mov
ret
bound
cmpl
add
aad
or
sbb
and
test
dec
pop
and
inc
pop
pushl
mov
lahf
clts
mov
dec
pop
xchg
movsl
mov
pusha
gs
inc
dec
arpl
aas
shll
mov
cmpsl
add
pop
rclb
lea
jne
shrd
mov
test
clc
add
cmp
bt
movzwl
or
btr
shl
mov
bt
bt
add
call
cmc
pushf
cmc
call
movb
lea
je
pushf
push
lea
jmp
call
scas
shl
ret
data16
es
imulb
negb
xor
insb
mov
sbb
jbe
pop
mov
mov
movsb
fsubs
or
shrb
dec
jbe
push
or
dec
adc
cwtl
das
sti
adc
aam
sbb
in
or
les
jmp
fs
nop
xor
movsl
stos
mov
in
aam
ret
sbb
pop
jae
push
stos
xor
add
mov
adc
mov
icebp
push
dec
jbe
xchg
mov
sbb
mov
cmp
lea
dec
or
out
jle
andl
adc
cli
into
adc
int
insl
fdivrl
xchg
jns
cmpb
pushf
call
aam
mov
call
rcl
aaa
das
xlat
mov
push
pop
cmpsb
rolb
mov
add
shl
and
scas
add
push
cmpsl
in
dec
aam
pop
bound
into
and
sahf
sub
out
mov
adc
shrl
and
push
fwait
test
movsl
test
push
mov
xor
icebp
jmp
and
pop
dec
popl
gs
and
jmp
mov
pusha
mov
call
add
jle
cmp
push
cmp
call
test
xor
pusha
cmc
repnz
call
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
cs
and
roll
popa
leave
add
jge
add
mov
or
xor
cmp
sbb
icebp
mov
pop
sarl
mov
sti
loopne
pop
and
jb
int
aad
icebp
push
movsb
ftst
mov
in
pop
mov
daa
lret
das
and
xor
jge
test
and
cmp
sbb
inc
roll
sbb
mov
jg
incb
inc
leave
lods
rcrl
ds
enter
aad
scas
fistps
dec
das
or
or
sbb
xchg
mov
fdivs
cltd
mov
jnp
fistps
inc
push
imul
sbb
jecxz
cmc
jae
fmull
mov
jmp
repnz
pusha
lea
jne
cwtl
movzbw
jmp
movl
cmp
mov
push
lea
ja
ror
sub
btr
add
call
push
call
pushf
pushf
call
adc
mov
test
clc
and
test
pushf
clc
add
push
pusha
pushf
lea
jmp
cmpb
push
pusha
lea
jge
push
lea
jne
cmp
neg
mov
push
add
stc
pushf
movzwl
sub
ror
adc
rcl
adc
mov
test
bt
pusha
add
cmp
mov
cmc
stc
test
call
push
jmp
pop
js
rolb
data16
std
test
jl
add
stos
rolb
cmp
or
test
adc
pusha
sti
mov
sub
test
push
repnz
cltd
imul
or
mov
pop
cld
xor
cli
aaa
sbb
dec
imul
sbb
subl
add
imul
rorl
loopne
cmp
and
sub
sbb
testb
jle
les
push
in
sub
adc
gs
mov
push
sarl
push
je
insl
pop
test
adc
cmp
or
mov
sub
dec
fsubs
dec
inc
fwait
mov
xor
imul
and
and
test
ljmp
sbb
test
mov
cmp
adc
add
xchg
subl
movsb
inc
sub
push
mov
lods
mov
je
sub
jecxz
lret
pop
bound
dec
jb
and
pushl
and
fs
jae
jb
clc
cmp
call
setp
inc
not
inc
rcr
rcr
shl
adc
xchg
bts
mov
xor
sbb
shl
mov
bt
bt
cmp
pushf
mov
and
bsr
shl
bsr
mov
cmc
pushf
jmp
lea
jne
bsf
mov
or
clc
ror
bswap
sub
and
clc
or
mov
pusha
jmp
push
dec
push
mov
jecxz
xor
push
or
or
mov
sbb
pushw
inc
rcrl
cli
inc
push
mov
mov
xchg
mov
call
pushf
scas
or
xchg
push
ficoms
daa
adc
stos
setae
mov
pop
fwait
loope
inc
cmpsl
jbe
mov
inc
inc
adc
arpl
scas
fldl2e
mov
jl
popf
shlb
rcr
adc
xchg
addl
test
add
xlat
pop
xlat
aas
mov
mov
jle
imul
lods
incb
adc
lods
test
jae
xor
jbe
std
imul
sbb
add
adc
aam
pushf
jg
testl
adc
mov
add
pop
stc
incl
ja
mov
out
jbe
push
pop
push
push
jp
sub
bound
mov
xor
adcb
mov
movsb
inc
mov
hlt
cmp
xor
ljmp
lea
jne
lock
test
pop
outsl
push
pusha
popa
add
push
loop
jbe
insb
cmpl
add
in
fsubl
add
push
lcall
jno
and
outsl
push
pusha
sub
orl
cmp
push
jle
mov
mov
xchg
inc
pop
mov
sbb
xor
push
mov
sbb
ljmp
rol
dec
adcl
jl
cmp
mov
mov
lds
pushf
test
mov
jge
mov
imul
call
cmp
lret
cmpsb
ficoml
dec
ret
jg
fistps
or
gs
mov
push
mov
pop
test
out
int
fistpl
insl
xchg
push
cli
dec
test
cmp
mov
in
jp
sub
adc
pop
push
insb
cmp
jnp
adcl
test
sub
mov
lds
adc
cld
fcompl
or
cmp
lahf
adc
mov
les
jnp
add
cli
push
shlb
sbb
xor
testl
imul
rorl
pusha
jmp
add
cmp
mov
clc
test
jmp
jns
pop
mov
into
cmpsb
push
xchg
mov
movsl
std
or
add
mov
test
subl
cmp
xchg
inc
inc
push
into
repz
les
adc
pop
mov
xor
in
test
mov
jae
cmpsb
lea
je
pushf
sbb
andl
mov
movl
sub
fs
ja
shl
pushf
cmp
sub
ror
bsr
not
xor
sub
add
adc
btr
bsf
mov
adc
call
lods
inc
jae
add
aaa
jg
outsl
cmpsl
pop
daa
push
inc
sbb
mov
jbe
or
call
mov
mov
and
inc
gs
cltd
pop
lahf
cmp
lret
aaa
sub
xor
movzbl
pushf
movl
mov
push
mov
pushl
ret
cmp
cmp
not
movzbw
push
lea
js
lea
lahf
bswap
movzbw
not
pop
pusha
pushf
call
clc
cmc
mov
stc
test
push
lea
je
pusha
pusha
jmp
mov
or
movsbw
mov
pushf
bt
call
push
xchg
mov
fdivs
mov
jo
inc
dec
add
xchg
jno
pusha
insb
in
inc
lret
gs
push
xorl
hlt
movsb
addr16
es
stc
add
mov
and
ret
xchg
mov
xchg
and
sub
int
sub
loop
inc
stc
ret
iret
jl
sbb
xor
mov
xlat
das
ss
cmp
or
mov
into
sbb
je
fdivrp
push
daa
inc
adc
arpl
lcall
jne
insl
ror
jle
mov
push
mov
pusha
lea
je
cmp
push
bt
add
cmc
test
pushf
cmp
call
lea
movb
not
pushf
pop
mov
pusha
lea
ja
jmp
jno
les
dec
rcrl
adc
cmpl
mov
dec
jp
addl
outsl
dec
imul
or
int
dec
sbb
add
and
and
aam
mov
sub
and
je
lret
aas
xor
scas
jae
cmp
clc
test
fxch
cmc
mov
inc
jb
bt
cmp
push
lea
jae
rcl
mov
and
mov
shl
not
mov
cmp
pushf
pusha
call
ret
mov
test
mov
mov
mov
je
movsl
jbe
dec
andl
lods
pusha
fiaddl
cmp
ljmp
out
inc
inc
and
cld
fdivs
lock
enter
xchg
into
inc
jb
add
stc
f2xm1
fmuls
pop
xor
mov
out
repnz
push
ja
and
mov
sub
add
sub
adc
into
xchg
lcall
call
cmp
cmp
pushf
call
ja
push
pusha
movb
cmc
imul
cmp
add
lea
pusha
push
push
mov
lea
jmp
lea
sub
add
adc
rcrl
rcr
xor
daa
loope
xchg
cmc
cmp
cmp
push
xor
outsb
insl
add
andb
cwtl
test
aas
fbstp
cmp
aam
sbb
lahf
enter
push
xor
test
adc
aas
or
fcompl
inc
dec
ret
xor
test
bt
pushf
movw
repnz
pusha
pushf
push
jmp
mov
pushf
movl
pushf
pushl
pushl
ret
lea
jne
push
mov
stos
push
push
mov
pushf
lea
jmp
pushf
call
add
movzbw
add
not
shl
sbb
mov
call
lea
jnp
pusha
pushf
lea
jae
call
push
pusha
jmp
jmp
call
movl
movl
push
push
movl
pushf
lea
jmp
jmp
push
mov
mov
imul
stc
add
das
pop
pop
sarl
dec
xor
insb
dec
pushf
push
adc
lods
scas
sub
cmp
or
sub
inc
test
inc
pop
inc
mov
das
movsb
pusha
mov
inc
test
jnp
out
mov
cmp
cmp
dec
mov
fsubs
add
mov
fwait
xchg
stos
mov
mov
and
lret
mov
movsb
or
xlat
movb
lea
call
clc
cmc
call
bsf
sub
pusha
shl
mov
setae
clc
shr
add
or
shl
ror
mov
call
call
call
push
pop
stos
xchg
data16
mov
jnp
mov
push
sti
rcr
push
test
pop
insl
mov
xchg
dec
mov
lret
test
cmp
jb
notb
jg
mov
mov
and
loopne
js
push
mov
rorb
jns
test
xor
sbb
and
mov
mov
sub
pop
or
je
or
and
fiadds
pop
xchg
ds
stos
ficoms
cmp
cmc
bt
cmp
call
add
inc
gs
outsl
fs
gs
imul
add
nopl
shrb
add
push
aaa
daa
xchg
ja
xchg
or
scas
in
imul
pop
pop
mov
jecxz
ja
mov
sbb
in
pushf
scas
sub
popf
call
or
inc
lock
popa
test
adc
mov
cld
dec
jmp
mov
js
fwait
mov
repnz
ds
rcl
pop
xchg
cmp
pusha
xchg
lea
jle
pusha
movl
mov
movl
pushf
pusha
lea
jmp
pushf
lea
jae
pushf
lea
jne
pushf
pushf
mov
stos
movb
lea
jmp
dec
popf
mov
mov
adc
xor
nop
popl
imul
adc
add
dec
bound
add
dec
adc
cmp
arpl
repnz
test
dec
ljmp
mov
pop
bound
and
jg
inc
call
pushf
lea
jne
pushf
not
rol
bsr
mov
bts
push
sub
or
pop
and
lea
stc
cmc
mov
sub
cmc
stc
bt
cmc
pushl
popl
call
lea
call
pusha
pusha
lea
jmp
mov
lea
jmp
sub
dec
call
lea
je
call
not
movb
not
movsbw
pushf
push
mov
pop
pusha
lea
call
lea
call
push
call
lea
je
jmp
bts
mov
clc
jmp
je
xchg
mov
mov
sub
fld
cmp
pop
das
push
scas
addr16
xlat
mov
fildl
xor
dec
ficoml
mov
xor
push
mov
stc
popa
and
xchg
pop
rclb
sbb
mov
jo
mov
adc
jmp
shrl
shll
mov
cmp
push
sbb
and
mov
add
xchg
mov
data16
pop
rolb
in
rolb
pop
sub
fdivs
movl
adc
pusha
pushf
mov
lea
call
pusha
lea
jb
pushf
pushl
ret
inc
dec
dec
inc
add
xchg
rcr
movsbw
mov
adc
xor
stc
mov
test
clc
mov
rcr
movzbw
not
mov
cmc
pushf
pusha
sub
jmp
call
bt
rcr
pusha
mov
call
pushf
push
lea
call
call
pushf
movl
pushf
mov
mov
mov
mov
push
pushl
ret
call
inc
add
adc
add
mov
pusha
clc
bt
test
test
pushf
jmp
mov
add
inc
fdivp
mov
ss
testb
cmc
adc
js
cmc
nop
xor
sub
lods
adc
inc
cmp
and
mov
jb
add
jmp
add
jnp
cmp
pop
test
and
imul
pop
dec
sbb
aaa
jecxz
push
not
lea
pushf
pushf
mov
jmp
mov
movsl
mov
mov
cmp
stc
rcrl
dec
and
hlt
leave
lahf
leave
cs
xor
imul
in
lods
jns
movsb
push
test
loope
aad
adc
dec
cmpsb
mov
shl
mov
mov
enter
int
stos
jnp
orb
and
movsl
add
sub
push
daa
insl
dec
outsl
pop
jb
pop
push
lret
sub
repnz
cmp
mov
int3
mov
jmp
loopne,pn
repz
mov
sbb
rcrb
or
pop
iret
ja
out
or
sub
pusha
sub
mov
sbb
movb
cltd
xor
jbe
mov
das
into
sub
cwtl
lods
cmp
pop
inc
pop
repz
dec
aas
push
push
stos
aas
jb
test
fsubrl
stc
inc
dec
and
mov
lea
jmp
inc
sub
jmp
push
movl
push
pushf
jmp
sbb
sub
add
sub
and
and
sub
or
and
pop
pop
cmp
push
int
xor
mov
pop
call
adc
sub
add
ss
jg
mov
inc
stos
ljmp
fdivrs
xchg
pushf
add
cmpl
push
in
fsts
adc
stc
popf
loope
fstpl
les
cs
cmp
and
mov
in
fists
scas
add
mov
jae
add
xor
mov
hlt
push
cmc
add
lcall
push
cli
repnz
sbb
aas
notl
fistps
dec
or
pop
aam
je
out
and
je
int3
and
lret
lahf
lods
jnp
test
sub
push
repnz
mov
pusha
push
lea
jne
jmp
movw
pusha
lea
jae
cmp
stc
jmp
lcall
test
cld
je
test
les
mov
aam
sub
out
mov
sbb
dec
and
and
insb
jmp
cs
cmpsl
not
dec
inc
xchg
fs
add
out
stos
jmp
daa
stos
outsl
xchg
mov
in
imul
imul
aaa
mov
xor
and
and
mov
mov
and
clc
ret
mov
push
sub
push
xchg
mov
inc
bt
imul
pushf
jmp
bound
scas
add
adc
jb
xchg
sub
out
adc
xchg
rclb
mov
push
loopne
test
fmull
push
sub
xchg
ja
incb
dec
fnstcw
cmc
ds
dec
enter
aam
lcall
add
mov
xor
icebp
sti
jp
sub
es
sbb
sub
add
fucomp
mov
lods
add
xor
sub
in
bound
xor
jl
rol
xor
push
pop
mov
inc
pop
or
push
sbb
das
mov
and
fdivs
jge
in
ss
lret
ds
sti
push
push
cltd
in
or
dec
jmp
fidivrl
xchg
push
fcoms
out
dec
xor
stos
sub
dec
rcll
std
add
lcall
pop
sub
cmpsl
cmpsl
fadds
pop
and
pop
gs
cli
lcall
xchg
xchg
jne
xor
sub
shrb
daa
mov
out
mov
stos
adc
int
jl
ds
aad
mov
sbb
and
dec
frstor
or
xchg
mov
and
mov
out
mov
ljmp
push
pop
or
dec
jp
push
dec
jmp
add
xor
add
add
add
pop
aaa
add
aas
aaa
add
pop
and
dec
push
aaa
add
adc
add
fs
imul
add
mov
or
dec
in
je
je
shr
mov
push
arpl
fucomi
popa
mov
loopne
push
shrl
xor
mov
mov
or
scas
xor
push
test
sbb
hlt
inc
in
int
push
cmp
add
add
jg
icebp
lods
pop
int
outsl
jp
int
xor
pop
popf
xor
das
mov
dec
pop
pop
repz
cs
mov
push
or
mov
jbe
lret
addr16
mov
push
repnz
mov
scas
jns
gs
push
mov
sub
pushf
jmp
call
test
cmp
call
pushl
popl
movl
stc
cmp
pusha
push
lea
ja
shl
shl
cmc
add
sub
push
add
add
bts
jmp
cmp
call
mov
les
mov
inc
cmp
js
js
pushf
shlb
in
mov
ljmp
xchg
cmp
inc
sahf
lret
sub
clc
inc
push
enter
loopne
xor
mov
mov
sarb
nop
and
ss
enter
lods
lods
iret
and
mov
sub
fs
int3
mov
push
dec
sbb
and
and
cmp
movb
push
lea
jae
bswap
adc
movsbw
mov
inc
dec
mov
neg
mov
stc
sub
cmc
stc
repnz
jmp
mov
bt
jmp
lea
call
call
bswap
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
mov
xchg
lret
orb
stc
rcrl
gs
and
stos
mov
stc
fsub
ja
push
popl
stc
push
jae
je
mov
cmc
pop
adc
pop
xchg
andl
loope
es
or
dec
sub
jno
sub
dec
gs
popf
xchg
cmp
push
pop
test
add
xchg
subb
sub
jbe
decl
mov
push
movw
lea
jmp
call
push
mov
pushf
call
sar
inc
mov
test
shl
shl
mov
pusha
add
jmp
pushf
popl
pushf
call
mov
call
cmp
stc
bt
shl
clc
cmp
shr
stc
or
jmp
mov
pushl
pushl
mov
mov
lea
jmp
mov
mov
call
mov
movb
pushf
jmp
push
setge
movsbw
movsbl
mov
jmp
mov
pushf
call
cmp
mov
mov
lea
jne
stc
xorb
lea
movsbl
pop
pusha
pushl
pushf
lea
jmp
mov
pusha
cmp
sub
push
pushl
push
shr
movb
pushl
call
jmp
mov
pushf
lea
jmp
jmp
pushf
call
pusha
add
push
jmp
mov
pushf
movb
pushf
pushl
lea
jmp
mov
movw
push
pushl
ret
test
clc
or
lea
jge
push
movw
movw
lea
je
pushf
stc
jmp
pusha
pushl
popl
pushl
pushf
pushl
movw
lea
jmp
sete
ror
cmc
shrd
shr
add
mov
shl
stc
add
not
inc
movsbl
and
bsf
and
and
btc
mov
pusha
bt
add
pusha
call
push
mov
pushl
pushf
popl
call
movsbw
movw
mov
pop
inc
jmp
not
bt
movw
call
bt
not
stc
pusha
and
pushf
mov
mov
pushf
popl
pushf
jmp
adc
add
mov
pusha
sub
test
add
push
mov
pusha
pushf
lea
jmp
movl
mov
movb
movl
jmp
pusha
jmp
bt
jmp
bswap
mov
pusha
lea
jmp
and
mov
call
pusha
call
mov
call
sub
mov
jmp
movb
pushf
mov
push
mov
pushf
pushf
lea
jmp
rcl
rol
ror
bsr
mov
add
xor
test
sar
lea
not
dec
and
or
bt
bts
mov
cmc
sub
push
push
mov
pushf
pushf
pushf
pushf
lea
jmp
mov
pushl
pushf
pushf
pushl
lea
jmp
push
mov
pushf
push
mov
movw
jmp
daa
aaa
sar
mov
pusha
sub
push
add
pushf
call
jmp
pushf
movb
pushf
popl
push
pushl
pushf
mov
mov
pushf
mov
mov
pushf
mov
jmp
btr
mov
test
add
push
pusha
pushf
push
lea
jmp
pushf
cmp
add
pusha
bt
stc
rol
movb
not
mov
mov
call
pushf
popl
jmp
movw
lea
ja
pusha
lea
shl
not
btc
lea
pop
bswap
sub
btc
jmp
aam
bt
cltd
cmc
mov
cmc
rcl
lea
mov
jmp
aam
add
aas
lea
jmp
mov
movb
mov
jmp
mov
mov
mov
mov
movl
pushl
jmp
pushf
popl
lea
jne
pusha
pushf
pushl
popl
movb
pushf
pushl
pushl
lea
jmp
shr
dec
movzbl
jmp
mov
pushf
lea
jmp
pusha
jmp
aas
shl
sar
mov
adc
mov
test
add
pusha
mov
push
pusha
push
lea
jmp
jmp
push
pusha
mov
pushl
jmp
ror
lahf
shld
mov
adc
mov
bt
add
jmp
lea
pushf
inc
movsbw
sub
and
bswap
rcr
shl
sub
call
xor
pusha
xchg
jmp
ror
mov
cmc
add
pusha
lea
jmp
mov
call
mov
mov
pusha
mov
pushl
jmp
mov
jmp
aam
mov
shl
mov
test
bt
push
add
push
push
mov
push
movb
pushf
pushf
lea
jmp
pusha
mov
pushf
popl
pusha
pushl
popl
pushl
push
lea
jmp
pushl
popl
mov
lea
jmp
mov
push
call
call
not
rcl
mov
pushf
sub
pusha
call
call
bsf
and
mov
rcl
or
clc
add
not
call
pusha
mov
pushf
mov
pushl
jmp
mov
call
bt
mov
clc
cmc
push
mov
add
call
mov
pusha
lea
jmp
push
movb
pushf
mov
pusha
call
jmp
mov
push
mov
mov
movb
lea
jmp
cmp
rcl
cmp
seto
mov
bt
add
jmp
pusha
push
call
mov
mov
pusha
pushf
jmp
push
pushf
mov
movb
lea
jno
push
mov
push
call
push
mov
mov
pushl
popl
mov
pushf
push
lea
jmp
mov
pushf
pushf
pushl
ret
pusha
pushf
popl
pushf
push
jmp
push
mov
push
pusha
mov
pushf
popl
call
pushf
mov
pushf
pushf
pushf
pushl
lea
jmp
pushl
mov
sub
pushl
pushf
shr
jmp
pushl
popl
pushf
lea
jmp
pusha
push
pushf
popl
pushf
jmp
jmp
call
mov
pushf
jmp
jmp
mov
not
mov
pusha
movb
pusha
mov
pushf
push
pushf
lea
jmp
movw
call
divl
pushf
movb
call
mov
setno
mov
mov
call
dec
add
bsf
btc
mov
movzbw
clc
clc
jmp
mov
lea
movsbw
pushl
bswap
call
pushf
push
mov
pushf
mov
mov
pushf
mov
movb
mov
lea
jmp
mov
jmp
movb
mov
movl
movb
jmp
pushf
mov
pushf
lea
jmp
pushl
pusha
mov
jmp
dec
call
push
mov
dec
push
neg
cmp
clc
push
xor
mov
pusha
inc
pushf
push
cmc
jmp
mov
pushf
mov
mov
pushf
mov
mov
lea
jmp
add
test
sub
pushl
jmp
push
pushf
call
mov
push
push
lea
jmp
xor
jmp
movb
pushl
popl
mov
mov
mov
lea
jmp
push
movl
pushf
mov
push
lea
jne
pusha
pusha
mov
mov
pushf
call
pusha
pusha
push
mov
movw
mov
jmp
push
call
mov
jmp
movzbl
push
movzbl
lea
mov
pusha
pusha
push
call
cmp
pushf
push
pushf
lea
jle
ja
cltd
aas
shl
pushf
lea
sbb
lea
sub
stc
sub
sbb
not
pushl
neg
lea
btr
movzbw
shrd
rcl
and
shl
rcl
test
sub
pop
mov
mov
mov
not
lea
call
call
push
pusha
call
xchg
pusha
neg
call
pushl
pushf
popl
movb
pushl
popl
pusha
lea
jmp
pusha
add
mov
or
shl
mov
pusha
bt
mov
sub
jmp
xor
mov
pushf
call
sub
call
inc
cmc
pushl
stc
xchg
stc
rol
pushl
cmp
lea
clc
sub
pushf
push
pushf
pusha
cwtl
cmc
pushf
sub
movw
call
call
bswap
jg
mov
pushf
pushf
lea
pushl
mov
pusha
jmp
call
call
pushf
mov
pushf
mov
push
push
mov
pushf
jmp
mov
jmp
mov
call
push
pushf
popl
call
enter
jne
mov
mov
mov
and
mov
and
mov
add
mov
pushf
sahf
mov
jne
mov
test
mov
mov
cs
mov
push
sahf
mov
sub
mov
cs
mov
mov
mov
enter
sbb
mov
je
mov
loopne
mov
cs
mov
add
inc
mov
mov
enter
sbb
mov
mov
mov
rorb
lcall
orb
loopne
mov
pushf
mov
xchg
orb
lds
mov
inc
jg
ljmp
mov
cmp
pushl
jle
incl
xchg
mov
and
mov
lods
mov
jmp
orl
jmp
lcall
lcall
jmp
jns
lcall
mov
cmp
pushf
mov
mov
mov
cmpsb
test
dec
jns
jmp
lcall
lds
mov
lods
mov
pushl
mov
fistps
mov
daa
mov
mov
je
mov
add
mov
loopne
mov
mov
mov
cs
mov
lds
mov
cli
orb
mov
orb
inc
nop
mov
push
orb
enter
and
mov
xchg
orb
mov
mov
add
fildl
mov
pop
mov
cmp
decl
orb
fistps
mov
loopne
mov
xor
fildl
mov
lds
mov
dec
mov
jmp
mov
mov
cs
mov
fistps
mov
daa
mov
mov
add
pushl
mov
xor
inc
mov
mov
xor
incl
mov
mov
test
test
fistps
mov
cli
orb
fistps
mov
pop
mov
lcall
cltd
mov
lds
mov
jne
mov
inc
jg
jmp
mov
pushf
sahf
mov
jne
mov
dec
mov
mov
loopne
mov
loopne
mov
push
orb
lds
mov
orb
mov
fdivrs
incl
mov
cmp
jmp
orb
loopne
mov
orb
mov
or
mov
mov
mov
add
mov
cli
orb
inc
jg
jmp
mov
sub
mov
dec
xchg
mov
fildl
mov
loopne
mov
push
sahf
mov
jne
mov
xchg
orb
rorb
inc
lahf
mov
or
mov
sub
mov
pushf
mov
dec
mov
ljmp
orl
cmp
inc
mov
mov
lds
mov
mov
mov
mov
mov
enter
add
mov
bound
mov
push
sahf
mov
daa
mov
mov
lds
mov
cmpsb
test
jmp
mov
enter
xor
ljmp
mov
fdivrs
jmp
lcall
sub
mov
dec
mov
mov
lds
mov
cmp
lcall
inc
add
sbb
inc
or
add
or
jmp
push
cmp
shl
jmp
mov
movb
pushf
push
pushf
lea
jmp
pushf
mov
call
pusha
mov
mov
jmp
call
jmp
push
mov
rcl
neg
dec
inc
mov
adc
sar
test
mov
pushf
clc
add
movb
shld
call
sub
sbb
sar
clc
movzbl
call
mov
mov
pushf
popl
call
jmp
mov
pushf
lea
jmp
pushl
popl
pushf
mov
pushf
lea
jmp
call
add
test
jmp
jmp
neg
rcl
mov
call
mov
call
cmp
pushf
call
bswap
lea
call
pushf
pushf
popl
pushf
call
bt
pusha
mul
pusha
pushl
mov
pushl
pushl
call
xchg
bswap
jmp
call
call
clc
jmp
movb
movl
jmp
mov
movl
pusha
pushf
call
mov
pushf
lea
jmp
pushf
add
jmp
mov
pushf
push
push
lea
jmp
lea
jne
pusha
clc
xor
jmp
call
push
movw
mov
call
mov
mov
call
not
mov
pusha
lea
push
jmp
push
call
call
mov
mov
call
mov
jmp
mov
call
lea
mov
movsbw
push
mov
pushl
movb
push
call
jmp
lea
btr
lea
mov
call
mov
pushl
pushf
mov
pusha
pushf
pushf
mov
call
push
jmp
jmp
mov
call
mov
push
movw
mov
mov
pusha
call
add
jmp
pusha
movb
movb
pusha
mov
pushf
jmp
push
push
pushf
popl
pusha
pushf
push
mov
pushl
mov
push
call
mov
pushf
mov
jmp
pusha
pushf
popl
push
mov
pusha
call
jmp
stc
setns
jmp
mov
pusha
movb
call
mov
movb
mov
jmp
movb
mov
movb
mov
pusha
mov
mov
pushf
push
lea
jmp
inc
mov
decl
jmp
mov
mov
lea
jmp
mov
push
mov
push
call
mov
pushf
movb
lea
jmp
mov
push
movb
pushl
ret
pusha
pushl
popl
pushf
lea
jmp
jmp
mov
pushf
pushf
movb
lea
jmp
mov
pushf
call
mov
push
lea
jmp
call
sub
ror
mov
dec
inc
bswap
bsr
add
not
jge
sub
setns
bswap
clc
rol
pushf
movsbw
sete
dec
not
not
dec
cmc
shr
pusha
cmp
add
add
movzbl
pushf
pushf
mov
test
jmp
cmc
cbtw
movzww
pushf
test
stc
stc
sub
jmp
jmp
pushl
sub
pushl
bt
push
rol
cmc
call
mov
pushf
popl
pushf
pushl
popl
push
pushf
movw
lea
jmp
mov
mov
pushf
mov
jmp
call
mov
jmp
call
pusha
call
not
push
mov
setg
mov
adc
test
mov
jmp
cmc
bt
sub
jmp
pushf
mov
call
call
push
lea
jle
mov
jmp
sbb
mov
sbb
shr
add
mov
jbe
test
bt
bt
sub
call
mov
mov
call
pushl
popl
push
pushl
push
lea
jmp
pusha
call
mov
mov
call
push
mov
pushf
push
push
mov
mov
push
jmp
mov
pusha
pushf
lea
jae
pushf
mov
jmp
mov
jmp
xor
push
pushl
neg
pushf
jmp
jmp
cmc
push
sub
pushl
jmp
pushl
jmp
mov
jmp
jmp
xchg
bswap
mov
std
push
pushf
cld
movl
pushf
call
push
pushf
mov
mov
movl
pushf
pushf
popl
pushf
jmp
mov
pushl
movw
lea
jmp
pushf
push
mov
push
mov
mov
mov
lea
jmp
jmp
push
and
movzbl
clc
bt
bt
cmc
add
pusha
pushl
bt
cmc
rol
jmp
mov
jmp
pusha
xchg
call
pushl
push
mov
pushf
pushf
pusha
lea
jmp
mov
pusha
pushf
popl
call
bsr
mov
push
xor
bt
mov
call
push
pusha
mov
pushl
pusha
push
pushf
popl
pushf
jmp
stc
rcr
mov
jmp
mov
jmp
push
mov
pushf
lea
jmp
jmp
push
not
pushl
pushf
dec
test
stc
add
pushf
bt
call
mov
jmp
pushf
popl
lea
ja
pushf
mov
push
movb
mov
push
pusha
pushf
mov
jmp
call
mov
mov
mov
call
pushf
movl
mov
call
cmc
cmp
xor
push
inc
pusha
decl
pushf
jmp
pusha
mov
pushf
mov
movl
pushf
popl
pushf
mov
movb
call
pusha
clc
sub
pushf
jmp
call
stc
cmp
add
push
push
lea
js
push
pushf
popl
pusha
lea
ja
popl
pusha
lea
jmp
push
push
pushf
popl
call
jmp
push
mov
call
push
jmp
dec
jmp
push
mov
call
mov
mov
push
mov
mov
movb
call
jmp
xor
movsbw
mov
push
and
call
call
not
pusha
lea
inc
push
not
rol
rcl
lea
not
sub
sub
shr
shl
bsr
mov
movzbw
mov
shl
adc
btr
add
rcr
mov
shrd
sar
sbb
inc
add
shl
bsf
bt
cmp
xor
bsf
not
or
sub
add
xor
setns
shr
not
bts
add
bsr
shl
or
bsr
movzbl
rcr
adc
mov
jnp
pushf
clc
movb
sub
pusha
clc
neg
pusha
stc
cmp
test
add
pushl
mov
movb
pushf
mov
pushf
push
pushl
ret
pushf
call
mov
bts
mov
add
call
pushf
pushf
pushl
popl
pushf
mov
pushf
movb
lea
jmp
call
pushl
pushl
mov
pushf
pushf
jmp
jmp
mov
push
mov
pushf
call
dec
cltd
pusha
rdtsc
cmc
sub
pushf
mov
pusha
jmp
stc
and
cmp
push
movzbl
jmp
lea
jne
call
jmp
call
lea
jne
jmp
mov
movw
mov
call
pushl
popl
movb
movb
lea
jmp
xadd
pop
shrd
movzbl
lea
pop
call
push
pusha
pushf
call
mov
jmp
push
pushf
jmp
jmp
lea
xchg
xchg
pusha
not
jmp
pusha
jmp
lea
push
call
movb
pushf
popl
call
cmc
cwtl
push
sub
pushf
inc
jmp
mov
mov
call
mov
mov
jmp
mov
jmp
setle
add
sub
rcr
rol
seto
push
not
dec
inc
dec
cmc
add
mov
add
and
movzbl
pusha
mov
cmc
or
mov
pushf
mov
lea
je
cmp
pusha
stc
bt
sub
clc
cmc
bt
xchg
test
mov
clc
pusha
push
pushf
sub
pushf
call
push
call
mov
mov
movb
movb
movw
lea
jmp
push
pusha
mov
pushl
call
pusha
push
bt
pusha
sub
mov
jmp
pushf
pusha
pushl
popl
movb
pushf
lea
jmp
pushf
jmp
pushl
popl
push
lea
jmp
call
adc
ror
btr
cwtl
mov
rol
shr
mov
shr
and
mov
call
pushl
popl
movw
push
pushf
lea
jmp
pushf
popl
pusha
movb
mov
pushl
mov
pusha
movl
call
movb
call
bswap
xchg
jmp
mov
push
movb
lea
jmp
btc
mov
add
mov
not
cld
movw
pushl
popf
pusha
jmp
pushf
mov
pusha
jmp
pushf
mov
call
add
mov
cmp
cmp
push
neg
cmc
push
bt
add
push
stc
mov
xor
movb
cmc
lea
je
pushf
mov
call
clc
pusha
stc
cmp
sub
pushf
mov
movb
lea
jmp
push
pushl
call
pushf
pushl
popf
pushf
pusha
mov
lea
jmp
movzbw
mov
movzbl
mov
pushf
pushf
not
std
pusha
xchg
mov
movsbw
mov
call
jmp
cmc
stc
cbtw
mov
cmc
call
pushf
pushf
call
call
push
call
pushf
popl
call
pusha
pusha
cmp
mov
clc
push
sub
mov
movb
mov
mov
pushf
movw
pushl
lea
jmp
push
pushf
push
mov
jmp
stc
jmp
pusha
bswap
neg
mov
mov
jmp
push
lea
jne
jmp
pusha
pushf
pushf
mov
pusha
mov
call
pusha
pushf
call
jmp
mov
call
jmp
call
pushf
pusha
mov
movl
lea
jmp
lea
jbe
mov
call
lea
jne
push
call
mov
pushf
pushf
popl
jmp
jmp
pushl
popl
pushf
push
pushf
movb
lea
jmp
jmp
pushf
pusha
pushf
mov
not
movzbw
pushf
popl
movsbw
pushf
dec
pusha
xchg
movzbw
lea
pushl
mov
xchg
call
call
mov
push
pushf
push
mov
mov
call
pushf
mov
push
mov
pusha
add
call
inc
inc
shl
daa
mov
movzbw
shl
ror
mov
stc
pusha
test
not
pushl
not
test
mov
cmc
sub
bt
push
pushl
push
and
push
mov
pushl
pushl
call
push
xor
movb
pusha
pushf
dec
call
push
mov
push
pushf
movb
lea
jmp
mov
call
call
pusha
bt
add
pushf
movb
mov
pushf
lea
jmp
mov
mov
movb
mov
movb
mov
movb
lea
jmp
pushf
lea
jne
cmp
pusha
mov
jmp
push
pushl
mov
push
call
mov
mov
push
pushf
pushf
lea
jmp
and
bts
mov
neg
dec
mov
test
sub
call
pushf
test
pushf
cmp
add
jmp
jmp
mov
mov
movb
push
lea
jmp
mov
jmp
lea
jg
push
mov
pusha
lea
jmp
pushf
stc
add
movb
mov
pushf
movl
push
pushf
lea
jmp
push
pushl
popl
pushf
lea
jmp
lea
je
cmp
clc
pusha
bt
xor
mov
xchg
clc
mov
call
mov
call
bswap
jmp
pushl
jmp
call
pushf
bt
shl
pusha
lea
js
mov
jmp
mov
jmp
mov
pushf
mov
jmp
shl
dec
cmp
mov
bt
sub
jmp
jmp
pushf
movl
push
mov
pushf
mov
pusha
push
pushl
ret
movw
mov
push
pushl
push
lea
jmp
jmp
push
mov
pushf
movb
pushl
lea
jmp
mov
pushf
pusha
movw
movw
pushf
popl
jmp
xchg
jmp
pushf
movzbl
sar
bsr
shr
bt
xor
adc
bsf
neg
push
movzbw
dec
inc
neg
movb
xor
inc
mov
inc
btc
mov
add
jns
push
clc
pushl
add
jmp
test
shrd
jmp
xor
test
jmp
call
mov
pushf
mov
jmp
pushl
pushf
mov
pushf
jmp
jmp
movzbl
ror
daa
bsr
mov
lea
mov
pop
daa
xadd
pop
adc
pop
sub
shl
sar
xadd
pop
bswap
bts
bsr
pop
test
movzbw
std
call
setns
lea
movsbl
mov
pusha
push
mov
pushf
push
movb
pushf
mov
pushl
push
pushl
movl
lea
jmp
js
setle
rcl
btc
ror
clc
add
push
not
shld
shld
and
not
mov
cmc
shl
mov
call
mov
bt
mov
sub
call
pushf
popl
pusha
push
jmp
mov
jmp
jmp
dec
test
shrd
shr
movzbw
neg
inc
sar
shl
add
shr
add
bsf
xor
jmp
mov
shl
not
adc
mov
bt
movb
cmp
mov
sub
call
call
cmp
jmp
movl
lea
jne
push
call
pusha
pusha
pushf
popl
call
jmp
push
jmp
mov
mov
mov
push
jmp
call
rol
sub
mov
not
add
test
clc
bsr
bt
xor
jg
bt
mov
stc
test
shl
clc
cmc
stc
cmp
shr
pushf
stc
pusha
pusha
or
clc
cmp
jmp
shl
and
pushf
jmp
add
call
mov
movsbw
movsbw
lea
movb
pushf
jmp
pushf
mov
movl
push
pushf
mov
jmp
lea
jge
bt
stc
sub
push
mov
pushf
lea
jmp
mov
test
cmp
stc
cmp
sub
call
jmp
bsf
movzbw
aad
mov
cmc
mov
mov
stc
test
sub
clc
cmc
push
shl
movw
jmp
jmp
mov
pushf
pushf
pushf
lea
jmp
mov
pusha
pushf
pushf
pushl
ret
mov
pushf
lea
jmp
jmp
pushf
popl
call
call
popf
push
mov
lea
jmp
mov
pusha
mov
pushf
mov
lea
jmp
push
mov
pusha
mov
pushf
mov
pushf
lea
jmp
call
push
call
push
call
adc
mov
test
bt
test
add
push
pushf
pusha
pushl
mov
push
pushf
mov
pushl
pushf
movb
lea
jmp
div
push
pusha
pushl
mov
jmp
push
mov
jmp
call
movb
mov
mov
lea
jmp
mov
call
pusha
pushf
popl
jmp
movb
mov
mov
mov
movw
lea
jmp
shr
pushf
jmp
pusha
pusha
mov
lea
jns
pushf
pushf
mov
call
pushf
mov
mov
pushl
pushl
mov
pushf
pushf
mov
call
pushl
mov
mov
movw
mov
jmp
call
lea
pusha
mov
add
mov
jmp
call
mov
pushf
pushf
push
call
pusha
movb
mov
movb
pushf
lea
jmp
pushf
popl
call
mov
jmp
setb
bt
lea
mov
cmc
pushf
add
pushf
mov
push
mov
movw
pushf
mov
movw
lea
jmp
pushf
mov
mov
pushf
popl
pushf
pushf
call
cld
call
setl
mov
pushf
call
mov
jmp
push
mov
pusha
lea
jmp
xchg
push
bt
mov
pushf
movb
cmc
cmp
sub
push
call
mov
movb
jmp
jmp
stc
stc
pushl
bt
bt
stc
jmp
call
pushf
popl
movw
jmp
push
movl
mov
movb
jmp
pushl
popl
pushf
push
lea
jmp
pushf
xchg
pop
mov
pusha
cld
mov
rep
lea
ja
ror
xor
pop
pushf
sub
mov
std
call
push
mov
mov
pushf
mov
push
mov
mov
pushf
mov
push
lea
jmp
call
pusha
push
lea
bt
pushf
clc
cmc
rol
bt
xor
jmp
pushf
mov
pushf
mov
call
sub
pushf
sub
jmp
push
jmp
mov
pushf
pushf
lea
jmp
cmc
stc
mul
pushf
jmp
mov
mov
jmp
lea
jne
bts
sar
sbb
mov
xorb
pushf
pop
pusha
mov
pushf
pushl
lea
jmp
sub
push
jmp
mov
jmp
push
sete
mov
jmp
pusha
pushl
mov
mov
pushf
pushf
popl
call
mov
pushf
pushf
push
push
mov
call
mov
pushl
push
lea
jmp
pushf
lea
jne
movsbw
xor
xorb
not
pop
push
pusha
lea
jmp
mov
movb
mov
pushl
lea
jmp
lea
cpuid
push
pushf
sub
stc
pushf
clc
cmpl
call
mov
cmp
push
stc
cmc
add
bt
call
jmp
pushl
popf
pushf
lea
jmp
jmp
movw
movb
mov
call
jmp
jmp
call
sub
stc
cmc
stc
neg
test
stc
stc
stc
add
mov
jmp
mov
movb
mov
push
movb
push
lea
jmp
mov
call
mov
pushf
mov
pushf
lea
jmp
jmp
xchg
rcr
xchg
mov
jmp
not
lea
jmp
mov
pop
push
movzbw
not
mov
pushf
pushf
jmp
daa
bt
shl
notl
add
bswap
sub
mov
test
stc
jmp
mov
movb
call
mov
pushf
pushf
mov
pushf
lea
jne
shr
dec
push
bswap
mov
bt
cmc
pusha
clc
and
test
cmp
pushf
clc
cmp
pushf
jmp
adc
bts
movzbw
movzww
bt
pusha
mov
jmp
pushf
pushl
popl
mov
mov
mov
mov
lea
jmp
mov
pushf
mov
pushf
mov
movb
movw
mov
pushf
pushf
push
mov
call
mov
jmp
mov
mov
call
push
lea
jno
pushf
mov
jmp
mov
movb
movw
movb
lea
jmp
pushl
pushf
popl
push
jmp
jmp
inc
movb
movb
xchg
jmp
add
add
cmc
and
pushf
pusha
cmc
cmp
mov
jmp
jmp
pushf
popl
jmp
mov
rep
not
and
shr
mov
shl
mov
cmc
cld
std
clc
pushl
popf
pushl
mov
lea
jmp
jmp
push
pushf
popl
call
push
mov
pusha
pusha
pushf
call
jmp
mov
pushl
call
movb
jmp
movl
call
stc
cmp
jmp
